
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//fdflags_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000be0 <_init>:
 be0:	stp	x29, x30, [sp, #-16]!
 be4:	mov	x29, sp
 be8:	bl	d30 <call_weak_fn>
 bec:	ldp	x29, x30, [sp], #16
 bf0:	ret

Disassembly of section .plt:

0000000000000c00 <.plt>:
 c00:	stp	x16, x30, [sp, #-16]!
 c04:	adrp	x16, 11000 <__FRAME_END__+0xf6b0>
 c08:	ldr	x17, [x16, #4088]
 c0c:	add	x16, x16, #0xff8
 c10:	br	x17
 c14:	nop
 c18:	nop
 c1c:	nop

0000000000000c20 <strtok@plt>:
 c20:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c24:	ldr	x17, [x16]
 c28:	add	x16, x16, #0x0
 c2c:	br	x17

0000000000000c30 <builtin_error@plt>:
 c30:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c34:	ldr	x17, [x16, #8]
 c38:	add	x16, x16, #0x8
 c3c:	br	x17

0000000000000c40 <__cxa_finalize@plt>:
 c40:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c44:	ldr	x17, [x16, #16]
 c48:	add	x16, x16, #0x10
 c4c:	br	x17

0000000000000c50 <putc@plt>:
 c50:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c54:	ldr	x17, [x16, #24]
 c58:	add	x16, x16, #0x18
 c5c:	br	x17

0000000000000c60 <builtin_help@plt>:
 c60:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c64:	ldr	x17, [x16, #32]
 c68:	add	x16, x16, #0x20
 c6c:	br	x17

0000000000000c70 <builtin_usage@plt>:
 c70:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c74:	ldr	x17, [x16, #40]
 c78:	add	x16, x16, #0x28
 c7c:	br	x17

0000000000000c80 <strerror@plt>:
 c80:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c84:	ldr	x17, [x16, #48]
 c88:	add	x16, x16, #0x30
 c8c:	br	x17

0000000000000c90 <__gmon_start__@plt>:
 c90:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c94:	ldr	x17, [x16, #56]
 c98:	add	x16, x16, #0x38
 c9c:	br	x17

0000000000000ca0 <strcmp@plt>:
 ca0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 ca4:	ldr	x17, [x16, #64]
 ca8:	add	x16, x16, #0x40
 cac:	br	x17

0000000000000cb0 <internal_getopt@plt>:
 cb0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 cb4:	ldr	x17, [x16, #72]
 cb8:	add	x16, x16, #0x48
 cbc:	br	x17

0000000000000cc0 <reset_internal_getopt@plt>:
 cc0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 cc4:	ldr	x17, [x16, #80]
 cc8:	add	x16, x16, #0x50
 ccc:	br	x17

0000000000000cd0 <fcntl@plt>:
 cd0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 cd4:	ldr	x17, [x16, #88]
 cd8:	add	x16, x16, #0x58
 cdc:	br	x17

0000000000000ce0 <legal_number@plt>:
 ce0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 ce4:	ldr	x17, [x16, #96]
 ce8:	add	x16, x16, #0x60
 cec:	br	x17

0000000000000cf0 <printf@plt>:
 cf0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 cf4:	ldr	x17, [x16, #104]
 cf8:	add	x16, x16, #0x68
 cfc:	br	x17

0000000000000d00 <__errno_location@plt>:
 d00:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 d04:	ldr	x17, [x16, #112]
 d08:	add	x16, x16, #0x70
 d0c:	br	x17

0000000000000d10 <putchar@plt>:
 d10:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 d14:	ldr	x17, [x16, #120]
 d18:	add	x16, x16, #0x78
 d1c:	br	x17

0000000000000d20 <getdtablesize@plt>:
 d20:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 d24:	ldr	x17, [x16, #128]
 d28:	add	x16, x16, #0x80
 d2c:	br	x17

Disassembly of section .text:

0000000000000d30 <call_weak_fn>:
     d30:	adrp	x0, 11000 <__FRAME_END__+0xf6b0>
     d34:	ldr	x0, [x0, #4040]
     d38:	cbz	x0, d40 <call_weak_fn+0x10>
     d3c:	b	c90 <__gmon_start__@plt>
     d40:	ret
     d44:	nop

0000000000000d48 <deregister_tm_clones>:
     d48:	adrp	x0, 12000 <strtok@GLIBC_2.17>
     d4c:	add	x0, x0, #0x130
     d50:	adrp	x1, 12000 <strtok@GLIBC_2.17>
     d54:	add	x1, x1, #0x130
     d58:	cmp	x1, x0
     d5c:	b.eq	d74 <deregister_tm_clones+0x2c>  // b.none
     d60:	adrp	x1, 11000 <__FRAME_END__+0xf6b0>
     d64:	ldr	x1, [x1, #4016]
     d68:	cbz	x1, d74 <deregister_tm_clones+0x2c>
     d6c:	mov	x16, x1
     d70:	br	x16
     d74:	ret

0000000000000d78 <register_tm_clones>:
     d78:	adrp	x0, 12000 <strtok@GLIBC_2.17>
     d7c:	add	x0, x0, #0x130
     d80:	adrp	x1, 12000 <strtok@GLIBC_2.17>
     d84:	add	x1, x1, #0x130
     d88:	sub	x1, x1, x0
     d8c:	lsr	x2, x1, #63
     d90:	add	x1, x2, x1, asr #3
     d94:	cmp	xzr, x1, asr #1
     d98:	asr	x1, x1, #1
     d9c:	b.eq	db4 <register_tm_clones+0x3c>  // b.none
     da0:	adrp	x2, 11000 <__FRAME_END__+0xf6b0>
     da4:	ldr	x2, [x2, #4064]
     da8:	cbz	x2, db4 <register_tm_clones+0x3c>
     dac:	mov	x16, x2
     db0:	br	x16
     db4:	ret

0000000000000db8 <__do_global_dtors_aux>:
     db8:	stp	x29, x30, [sp, #-32]!
     dbc:	mov	x29, sp
     dc0:	str	x19, [sp, #16]
     dc4:	adrp	x19, 12000 <strtok@GLIBC_2.17>
     dc8:	ldrb	w0, [x19, #304]
     dcc:	cbnz	w0, df4 <__do_global_dtors_aux+0x3c>
     dd0:	adrp	x0, 11000 <__FRAME_END__+0xf6b0>
     dd4:	ldr	x0, [x0, #4024]
     dd8:	cbz	x0, de8 <__do_global_dtors_aux+0x30>
     ddc:	adrp	x0, 12000 <strtok@GLIBC_2.17>
     de0:	ldr	x0, [x0, #136]
     de4:	bl	c40 <__cxa_finalize@plt>
     de8:	bl	d48 <deregister_tm_clones>
     dec:	mov	w0, #0x1                   	// #1
     df0:	strb	w0, [x19, #304]
     df4:	ldr	x19, [sp, #16]
     df8:	ldp	x29, x30, [sp], #32
     dfc:	ret

0000000000000e00 <frame_dummy>:
     e00:	b	d78 <register_tm_clones>
     e04:	nop

0000000000000e08 <getflags>:
     e08:	stp	x29, x30, [sp, #-48]!
     e0c:	mov	x29, sp
     e10:	stp	x19, x20, [sp, #16]
     e14:	stp	x21, x22, [sp, #32]
     e18:	mov	w22, w1
     e1c:	mov	w21, w0
     e20:	mov	w1, #0x1                   	// #1
     e24:	bl	cd0 <fcntl@plt>
     e28:	mov	w19, w0
     e2c:	cmn	w0, #0x1
     e30:	b.eq	e78 <getflags+0x70>  // b.none
     e34:	mov	w0, w21
     e38:	mov	w1, #0x3                   	// #3
     e3c:	bl	cd0 <fcntl@plt>
     e40:	mov	w20, w0
     e44:	cmn	w0, #0x1
     e48:	b.eq	ea8 <getflags+0xa0>  // b.none
     e4c:	cmp	w19, #0x0
     e50:	orr	w0, w0, #0x80000
     e54:	csel	w20, w0, w20, ne  // ne = any
     e58:	mov	w19, #0x3c00                	// #15360
     e5c:	movk	w19, #0x1d, lsl #16
     e60:	and	w19, w20, w19
     e64:	mov	w0, w19
     e68:	ldp	x19, x20, [sp, #16]
     e6c:	ldp	x21, x22, [sp, #32]
     e70:	ldp	x29, x30, [sp], #48
     e74:	ret
     e78:	cbnz	w22, e84 <getflags+0x7c>
     e7c:	mov	w19, #0xffffffff            	// #-1
     e80:	b	e64 <getflags+0x5c>
     e84:	bl	d00 <__errno_location@plt>
     e88:	ldr	w0, [x0]
     e8c:	bl	c80 <strerror@plt>
     e90:	mov	x2, x0
     e94:	mov	w1, w21
     e98:	adrp	x0, 1000 <fdflags_builtin+0x18>
     e9c:	add	x0, x0, #0x3a0
     ea0:	bl	c30 <builtin_error@plt>
     ea4:	b	e64 <getflags+0x5c>
     ea8:	cbz	w22, e7c <getflags+0x74>
     eac:	bl	d00 <__errno_location@plt>
     eb0:	ldr	w0, [x0]
     eb4:	mov	w19, w20
     eb8:	bl	c80 <strerror@plt>
     ebc:	mov	x2, x0
     ec0:	mov	w1, w21
     ec4:	adrp	x0, 1000 <fdflags_builtin+0x18>
     ec8:	add	x0, x0, #0x3c0
     ecc:	bl	c30 <builtin_error@plt>
     ed0:	b	e64 <getflags+0x5c>
     ed4:	nop

0000000000000ed8 <printone>:
     ed8:	stp	x29, x30, [sp, #-80]!
     edc:	mov	x29, sp
     ee0:	stp	x19, x20, [sp, #16]
     ee4:	mov	w19, w0
     ee8:	stp	x21, x22, [sp, #32]
     eec:	mov	w22, w2
     ef0:	bl	e08 <getflags>
     ef4:	cmn	w0, #0x1
     ef8:	b.eq	fd4 <printone+0xfc>  // b.none
     efc:	mov	w1, w19
     f00:	mov	w21, w0
     f04:	adrp	x0, 1000 <fdflags_builtin+0x18>
     f08:	add	x0, x0, #0x3e0
     f0c:	stp	x23, x24, [sp, #48]
     f10:	adrp	x24, 11000 <__FRAME_END__+0xf6b0>
     f14:	adrp	x23, 1000 <fdflags_builtin+0x18>
     f18:	str	x25, [sp, #64]
     f1c:	bl	cf0 <printf@plt>
     f20:	add	x23, x23, #0x3e8
     f24:	cmp	w22, #0x0
     f28:	adrp	x0, 1000 <fdflags_builtin+0x18>
     f2c:	add	x0, x0, #0x600
     f30:	csel	x23, x23, x0, ne  // ne = any
     f34:	adrp	x19, 11000 <__FRAME_END__+0xf6b0>
     f38:	adrp	x25, 1000 <fdflags_builtin+0x18>
     f3c:	add	x19, x19, #0xd28
     f40:	ldr	x24, [x24, #4032]
     f44:	add	x25, x25, #0x3f8
     f48:	mov	x20, #0x0                   	// #0
     f4c:	mov	w0, #0x400                 	// #1024
     f50:	b	f9c <printone+0xc4>
     f54:	ldr	x2, [x19]
     f58:	bic	w21, w21, w0
     f5c:	mov	x1, x23
     f60:	adrp	x0, 1000 <fdflags_builtin+0x18>
     f64:	add	x0, x0, #0x3f0
     f68:	bl	cf0 <printf@plt>
     f6c:	cmp	w22, #0x0
     f70:	cbnz	w21, f7c <printone+0xa4>
     f74:	ccmp	x20, #0x9, #0x4, ne  // ne = any
     f78:	b.eq	f88 <printone+0xb0>  // b.none
     f7c:	ldr	x1, [x24]
     f80:	mov	w0, #0x2c                  	// #44
     f84:	bl	c50 <putc@plt>
     f88:	add	x20, x20, #0x1
     f8c:	add	x19, x19, #0x10
     f90:	cmp	x20, #0xa
     f94:	b.eq	fb8 <printone+0xe0>  // b.none
     f98:	ldr	w0, [x19, #8]
     f9c:	tst	w0, w21
     fa0:	b.ne	f54 <printone+0x7c>  // b.any
     fa4:	cbz	w22, f88 <printone+0xb0>
     fa8:	ldr	x1, [x19]
     fac:	mov	x0, x25
     fb0:	bl	cf0 <printf@plt>
     fb4:	b	f6c <printone+0x94>
     fb8:	mov	w0, w20
     fbc:	ldp	x19, x20, [sp, #16]
     fc0:	ldp	x21, x22, [sp, #32]
     fc4:	ldp	x23, x24, [sp, #48]
     fc8:	ldr	x25, [sp, #64]
     fcc:	ldp	x29, x30, [sp], #80
     fd0:	b	d10 <putchar@plt>
     fd4:	ldp	x19, x20, [sp, #16]
     fd8:	ldp	x21, x22, [sp, #32]
     fdc:	ldp	x29, x30, [sp], #80
     fe0:	ret
     fe4:	nop

0000000000000fe8 <fdflags_builtin>:
     fe8:	stp	x29, x30, [sp, #-160]!
     fec:	mov	x29, sp
     ff0:	stp	x19, x20, [sp, #16]
     ff4:	mov	x20, x0
     ff8:	adrp	x19, 1000 <fdflags_builtin+0x18>
     ffc:	stp	x21, x22, [sp, #32]
    1000:	add	x19, x19, #0x408
    1004:	mov	w22, #0x0                   	// #0
    1008:	stp	x23, x24, [sp, #48]
    100c:	bl	cc0 <reset_internal_getopt@plt>
    1010:	adrp	x0, 11000 <__FRAME_END__+0xf6b0>
    1014:	mov	w21, #0x0                   	// #0
    1018:	ldr	x23, [x0, #4048]
    101c:	mov	x1, x19
    1020:	mov	x0, x20
    1024:	bl	cb0 <internal_getopt@plt>
    1028:	cmn	w0, #0x1
    102c:	b.eq	10a0 <fdflags_builtin+0xb8>  // b.none
    1030:	cmp	w0, #0x73
    1034:	b.eq	1070 <fdflags_builtin+0x88>  // b.none
    1038:	cmp	w0, #0x76
    103c:	b.eq	1068 <fdflags_builtin+0x80>  // b.none
    1040:	cmn	w0, #0x63
    1044:	b.eq	1080 <fdflags_builtin+0x98>  // b.none
    1048:	mov	w20, #0x102                 	// #258
    104c:	bl	c70 <builtin_usage@plt>
    1050:	mov	w0, w20
    1054:	ldp	x19, x20, [sp, #16]
    1058:	ldp	x21, x22, [sp, #32]
    105c:	ldp	x23, x24, [sp, #48]
    1060:	ldp	x29, x30, [sp], #160
    1064:	ret
    1068:	mov	w21, #0x1                   	// #1
    106c:	b	101c <fdflags_builtin+0x34>
    1070:	ldr	x0, [x23]
    1074:	mov	w22, #0x1                   	// #1
    1078:	str	x0, [sp, #96]
    107c:	b	101c <fdflags_builtin+0x34>
    1080:	bl	c60 <builtin_help@plt>
    1084:	mov	w20, #0x102                 	// #258
    1088:	mov	w0, w20
    108c:	ldp	x19, x20, [sp, #16]
    1090:	ldp	x21, x22, [sp, #32]
    1094:	ldp	x23, x24, [sp, #48]
    1098:	ldp	x29, x30, [sp], #160
    109c:	ret
    10a0:	adrp	x0, 11000 <__FRAME_END__+0xf6b0>
    10a4:	ldr	x0, [x0, #4056]
    10a8:	ldr	x23, [x0]
    10ac:	cmp	x23, #0x0
    10b0:	csel	w0, w22, wzr, eq  // eq = none
    10b4:	cbnz	w0, 12a8 <fdflags_builtin+0x2c0>
    10b8:	cbz	x23, 1244 <fdflags_builtin+0x25c>
    10bc:	adrp	x19, 11000 <__FRAME_END__+0xf6b0>
    10c0:	add	x19, x19, #0xd28
    10c4:	stp	x27, x28, [sp, #80]
    10c8:	add	x28, sp, #0x98
    10cc:	add	x0, sp, #0x8c
    10d0:	mov	w20, #0x0                   	// #0
    10d4:	stp	x25, x26, [sp, #64]
    10d8:	str	x0, [sp, #120]
    10dc:	nop
    10e0:	ldr	x0, [x23, #8]
    10e4:	mov	x1, x28
    10e8:	ldr	x0, [x0]
    10ec:	bl	ce0 <legal_number@plt>
    10f0:	cbz	w0, 12d4 <fdflags_builtin+0x2ec>
    10f4:	ldr	x25, [sp, #152]
    10f8:	tbnz	x25, #63, 12d4 <fdflags_builtin+0x2ec>
    10fc:	cbz	w22, 12f0 <fdflags_builtin+0x308>
    1100:	mov	w0, w25
    1104:	mov	w1, #0x1                   	// #1
    1108:	bl	e08 <getflags>
    110c:	str	w0, [sp, #104]
    1110:	cmn	w0, #0x1
    1114:	b.eq	1230 <fdflags_builtin+0x248>  // b.none
    1118:	ldr	x0, [sp, #96]
    111c:	adrp	x1, 1000 <fdflags_builtin+0x18>
    1120:	add	x1, x1, #0x430
    1124:	stp	wzr, wzr, [sp, #140]
    1128:	str	wzr, [sp, #148]
    112c:	bl	c20 <strtok@plt>
    1130:	mov	x27, x0
    1134:	add	x1, sp, #0x90
    1138:	str	x1, [sp, #112]
    113c:	cbz	x0, 134c <fdflags_builtin+0x364>
    1140:	ldrb	w0, [x27]
    1144:	cmp	w0, #0x2b
    1148:	b.eq	12c8 <fdflags_builtin+0x2e0>  // b.none
    114c:	add	x24, sp, #0x94
    1150:	cmp	w0, #0x2d
    1154:	b.ne	1160 <fdflags_builtin+0x178>  // b.any
    1158:	ldr	x24, [sp, #112]
    115c:	add	x27, x27, #0x1
    1160:	adrp	x0, 1000 <fdflags_builtin+0x18>
    1164:	mov	x26, #0x0                   	// #0
    1168:	add	x1, x0, #0x400
    116c:	b	1178 <fdflags_builtin+0x190>
    1170:	lsl	x0, x26, #4
    1174:	ldr	x1, [x0, x19]
    1178:	mov	x0, x27
    117c:	bl	ca0 <strcmp@plt>
    1180:	cbz	w0, 12b0 <fdflags_builtin+0x2c8>
    1184:	add	x26, x26, #0x1
    1188:	cmp	x26, #0xa
    118c:	b.ne	1170 <fdflags_builtin+0x188>  // b.any
    1190:	adrp	x0, 1000 <fdflags_builtin+0x18>
    1194:	mov	x1, x27
    1198:	add	x0, x0, #0x478
    119c:	bl	c30 <builtin_error@plt>
    11a0:	adrp	x0, 1000 <fdflags_builtin+0x18>
    11a4:	add	x1, x0, #0x430
    11a8:	mov	x0, #0x0                   	// #0
    11ac:	bl	c20 <strtok@plt>
    11b0:	mov	x27, x0
    11b4:	cbnz	x0, 1140 <fdflags_builtin+0x158>
    11b8:	ldp	w0, w1, [sp, #140]
    11bc:	ldr	w4, [sp, #104]
    11c0:	and	w26, w1, #0xfff7ffff
    11c4:	and	w3, w0, #0xfff7ffff
    11c8:	orr	w2, w4, w0
    11cc:	and	w1, w1, #0x80000
    11d0:	bic	w24, w2, w26
    11d4:	and	w2, w0, #0x80000
    11d8:	tbz	w0, #19, 1304 <fdflags_builtin+0x31c>
    11dc:	tbnz	w4, #19, 1314 <fdflags_builtin+0x32c>
    11e0:	mov	w2, w22
    11e4:	mov	w0, w25
    11e8:	mov	w1, #0x2                   	// #2
    11ec:	str	w3, [sp, #112]
    11f0:	bl	cd0 <fcntl@plt>
    11f4:	ldr	w3, [sp, #112]
    11f8:	cmn	w0, #0x1
    11fc:	b.eq	1320 <fdflags_builtin+0x338>  // b.none
    1200:	ldr	w0, [sp, #104]
    1204:	and	w2, w24, #0xfff7ffff
    1208:	stp	w3, w26, [sp, #140]
    120c:	and	w0, w0, #0xfff7ffff
    1210:	cmp	w0, w2
    1214:	b.eq	1230 <fdflags_builtin+0x248>  // b.none
    1218:	mov	w0, w25
    121c:	mov	w1, #0x4                   	// #4
    1220:	bl	cd0 <fcntl@plt>
    1224:	cmn	w0, #0x1
    1228:	b.eq	135c <fdflags_builtin+0x374>  // b.none
    122c:	nop
    1230:	ldr	x23, [x23]
    1234:	cbnz	x23, 10e0 <fdflags_builtin+0xf8>
    1238:	ldp	x25, x26, [sp, #64]
    123c:	ldp	x27, x28, [sp, #80]
    1240:	b	1050 <fdflags_builtin+0x68>
    1244:	bl	d20 <getdtablesize@plt>
    1248:	cmp	w0, #0x0
    124c:	b.le	1380 <fdflags_builtin+0x398>
    1250:	subs	w19, w0, #0x1
    1254:	b.eq	12a8 <fdflags_builtin+0x2c0>  // b.none
    1258:	stp	x27, x28, [sp, #80]
    125c:	add	x28, sp, #0x98
    1260:	b	126c <fdflags_builtin+0x284>
    1264:	subs	w19, w19, #0x1
    1268:	b.eq	12a4 <fdflags_builtin+0x2bc>  // b.none
    126c:	mov	x2, x28
    1270:	mov	w0, w19
    1274:	mov	w1, #0x1                   	// #1
    1278:	bl	cd0 <fcntl@plt>
    127c:	cmn	w0, #0x1
    1280:	b.eq	1264 <fdflags_builtin+0x27c>  // b.none
    1284:	mov	w20, #0x0                   	// #0
    1288:	mov	w0, w20
    128c:	mov	w2, w21
    1290:	add	w20, w20, #0x1
    1294:	mov	w1, #0x0                   	// #0
    1298:	bl	ed8 <printone>
    129c:	cmp	w20, w19
    12a0:	b.ne	1288 <fdflags_builtin+0x2a0>  // b.any
    12a4:	ldp	x27, x28, [sp, #80]
    12a8:	mov	w20, #0x0                   	// #0
    12ac:	b	1050 <fdflags_builtin+0x68>
    12b0:	add	x2, x19, x26, lsl #4
    12b4:	ldr	w0, [x24]
    12b8:	ldr	w1, [x2, #8]
    12bc:	orr	w0, w0, w1
    12c0:	str	w0, [x24]
    12c4:	b	11a0 <fdflags_builtin+0x1b8>
    12c8:	add	x27, x27, #0x1
    12cc:	ldr	x24, [sp, #120]
    12d0:	b	1160 <fdflags_builtin+0x178>
    12d4:	ldr	x1, [x23, #8]
    12d8:	adrp	x0, 1000 <fdflags_builtin+0x18>
    12dc:	mov	w20, #0x1                   	// #1
    12e0:	add	x0, x0, #0x410
    12e4:	ldr	x1, [x1]
    12e8:	bl	c30 <builtin_error@plt>
    12ec:	b	1230 <fdflags_builtin+0x248>
    12f0:	mov	w0, w25
    12f4:	mov	w2, w21
    12f8:	mov	w1, #0x1                   	// #1
    12fc:	bl	ed8 <printone>
    1300:	b	1230 <fdflags_builtin+0x248>
    1304:	cbz	w1, 1200 <fdflags_builtin+0x218>
    1308:	ldr	x0, [sp, #104]
    130c:	tbnz	w0, #19, 11e4 <fdflags_builtin+0x1fc>
    1310:	b	1200 <fdflags_builtin+0x218>
    1314:	cbz	w1, 1200 <fdflags_builtin+0x218>
    1318:	mov	w2, #0x0                   	// #0
    131c:	b	11e4 <fdflags_builtin+0x1fc>
    1320:	str	w3, [sp, #112]
    1324:	bl	d00 <__errno_location@plt>
    1328:	ldr	w0, [x0]
    132c:	bl	c80 <strerror@plt>
    1330:	mov	x2, x0
    1334:	mov	w1, w25
    1338:	adrp	x0, 1000 <fdflags_builtin+0x18>
    133c:	add	x0, x0, #0x438
    1340:	bl	c30 <builtin_error@plt>
    1344:	ldr	w3, [sp, #112]
    1348:	b	1200 <fdflags_builtin+0x218>
    134c:	ldr	w24, [sp, #104]
    1350:	mov	w3, #0x0                   	// #0
    1354:	mov	w26, #0x0                   	// #0
    1358:	b	1200 <fdflags_builtin+0x218>
    135c:	bl	d00 <__errno_location@plt>
    1360:	ldr	w0, [x0]
    1364:	bl	c80 <strerror@plt>
    1368:	mov	x2, x0
    136c:	mov	w1, w25
    1370:	adrp	x0, 1000 <fdflags_builtin+0x18>
    1374:	add	x0, x0, #0x458
    1378:	bl	c30 <builtin_error@plt>
    137c:	b	1230 <fdflags_builtin+0x248>
    1380:	mov	w19, #0xff                  	// #255
    1384:	stp	x27, x28, [sp, #80]
    1388:	b	125c <fdflags_builtin+0x274>

Disassembly of section .fini:

000000000000138c <_fini>:
    138c:	stp	x29, x30, [sp, #-16]!
    1390:	mov	x29, sp
    1394:	ldp	x29, x30, [sp], #16
    1398:	ret
