
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//help.mod_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x638>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	ldr	x1, [x0, #56]
  14:	ldr	x0, [sp, #24]
  18:	blr	x1
  1c:	and	w0, w0, #0xffff
  20:	cmp	w0, #0x0
  24:	b.eq	2c <grub_mod_init-0x60c>  // b.none
  28:	b	30 <grub_mod_init-0x608>
  2c:	mov	w0, #0x50                  	// #80
  30:	ldp	x29, x30, [sp], #32
  34:	ret
  38:	stp	x29, x30, [sp, #-32]!
  3c:	mov	x29, sp
  40:	str	x0, [sp, #24]
  44:	ldr	x0, [sp, #24]
  48:	ldr	w0, [x0]
  4c:	ubfx	x0, x0, #0, #23
  50:	bl	0 <grub_unicode_get_comb_type>
  54:	cmp	w0, #0x0
  58:	b.eq	64 <grub_mod_init-0x5d4>  // b.none
  5c:	mov	x0, #0x0                   	// #0
  60:	b	68 <grub_mod_init-0x5d0>
  64:	mov	x0, #0x1                   	// #1
  68:	ldp	x29, x30, [sp], #32
  6c:	ret
  70:	stp	x29, x30, [sp, #-32]!
  74:	mov	x29, sp
  78:	str	x0, [sp, #24]
  7c:	str	x1, [sp, #16]
  80:	ldr	x0, [sp, #16]
  84:	ldr	w0, [x0]
  88:	and	w0, w0, #0x7fffff
  8c:	cmp	w0, #0x9
  90:	b.ne	9c <grub_mod_init-0x59c>  // b.any
  94:	mov	x0, #0x8                   	// #8
  98:	b	110 <grub_mod_init-0x528>
  9c:	ldr	x0, [sp, #24]
  a0:	ldr	x0, [x0, #48]
  a4:	cmp	x0, #0x0
  a8:	b.eq	c4 <grub_mod_init-0x574>  // b.none
  ac:	ldr	x0, [sp, #24]
  b0:	ldr	x2, [x0, #48]
  b4:	ldr	x1, [sp, #16]
  b8:	ldr	x0, [sp, #24]
  bc:	blr	x2
  c0:	b	110 <grub_mod_init-0x528>
  c4:	ldr	x0, [sp, #24]
  c8:	ldr	w0, [x0, #120]
  cc:	and	w0, w0, #0x38
  d0:	cmp	w0, #0x10
  d4:	b.eq	100 <grub_mod_init-0x538>  // b.none
  d8:	ldr	x0, [sp, #24]
  dc:	ldr	w0, [x0, #120]
  e0:	and	w0, w0, #0x38
  e4:	cmp	w0, #0x18
  e8:	b.eq	100 <grub_mod_init-0x538>  // b.none
  ec:	ldr	x0, [sp, #24]
  f0:	ldr	w0, [x0, #120]
  f4:	and	w0, w0, #0x38
  f8:	cmp	w0, #0x20
  fc:	b.ne	10c <grub_mod_init-0x52c>  // b.any
 100:	ldr	x0, [sp, #16]
 104:	bl	38 <grub_mod_init-0x600>
 108:	b	110 <grub_mod_init-0x528>
 10c:	mov	x0, #0x1                   	// #1
 110:	ldp	x29, x30, [sp], #32
 114:	ret
 118:	stp	x29, x30, [sp, #-32]!
 11c:	mov	x29, sp
 120:	str	x0, [sp, #24]
 124:	str	w1, [sp, #20]
 128:	b	138 <grub_mod_init-0x500>
 12c:	ldr	x1, [sp, #24]
 130:	mov	w0, #0x20                  	// #32
 134:	bl	0 <grub_putcode>
 138:	ldr	w0, [sp, #20]
 13c:	sub	w0, w0, #0x1
 140:	str	w0, [sp, #20]
 144:	ldr	w0, [sp, #20]
 148:	cmp	w0, #0x0
 14c:	b.ge	12c <grub_mod_init-0x50c>  // b.tcont
 150:	nop
 154:	nop
 158:	ldp	x29, x30, [sp], #32
 15c:	ret
 160:	stp	x29, x30, [sp, #-256]!
 164:	mov	x29, sp
 168:	stp	x19, x20, [sp, #16]
 16c:	str	x21, [sp, #32]
 170:	str	x0, [sp, #72]
 174:	str	w1, [sp, #68]
 178:	str	x2, [sp, #56]
 17c:	str	wzr, [sp, #252]
 180:	ldr	w0, [sp, #68]
 184:	cmp	w0, #0x0
 188:	b.ne	3b0 <grub_mod_init-0x288>  // b.any
 18c:	adrp	x0, 0 <grub_mod_init-0x638>
 190:	add	x0, x0, #0x0
 194:	ldr	x0, [x0]
 198:	ldr	x0, [x0]
 19c:	str	x0, [sp, #240]
 1a0:	b	378 <grub_mod_init-0x2c0>
 1a4:	ldr	x0, [sp, #240]
 1a8:	ldr	w0, [x0, #24]
 1ac:	and	w0, w0, #0x100
 1b0:	cmp	w0, #0x0
 1b4:	b.eq	36c <grub_mod_init-0x2cc>  // b.none
 1b8:	ldr	x0, [sp, #240]
 1bc:	ldr	x0, [x0, #48]
 1c0:	str	x0, [sp, #152]
 1c4:	adrp	x0, 0 <grub_mod_init-0x638>
 1c8:	add	x0, x0, #0x0
 1cc:	ldr	x0, [x0]
 1d0:	ldr	x1, [x0]
 1d4:	ldr	x0, [sp, #152]
 1d8:	blr	x1
 1dc:	str	x0, [sp, #168]
 1e0:	ldr	x0, [sp, #240]
 1e4:	ldr	x0, [x0, #16]
 1e8:	ldr	x2, [sp, #168]
 1ec:	mov	x1, x0
 1f0:	adrp	x0, 0 <grub_mod_init-0x638>
 1f4:	add	x0, x0, #0x0
 1f8:	ldr	x0, [x0]
 1fc:	bl	0 <grub_xasprintf>
 200:	str	x0, [sp, #160]
 204:	ldr	x0, [sp, #160]
 208:	cmp	x0, #0x0
 20c:	b.eq	388 <grub_mod_init-0x2b0>  // b.none
 210:	add	x1, sp, #0x70
 214:	add	x0, sp, #0x78
 218:	mov	x2, x1
 21c:	mov	x1, x0
 220:	ldr	x0, [sp, #160]
 224:	bl	0 <grub_utf8_to_ucs4_alloc>
 228:	adrp	x0, 0 <grub_mod_init-0x638>
 22c:	add	x0, x0, #0x0
 230:	ldr	x0, [x0]
 234:	ldr	x0, [x0]
 238:	str	x0, [sp, #232]
 23c:	b	324 <grub_mod_init-0x314>
 240:	ldr	x0, [sp, #120]
 244:	str	x0, [sp, #216]
 248:	str	wzr, [sp, #228]
 24c:	b	2a4 <grub_mod_init-0x394>
 250:	ldr	x1, [sp, #112]
 254:	ldr	x0, [sp, #216]
 258:	sub	x0, x1, x0
 25c:	asr	x0, x0, #2
 260:	mov	x1, x0
 264:	add	x0, sp, #0x50
 268:	mov	x2, x0
 26c:	ldr	x0, [sp, #216]
 270:	bl	0 <grub_unicode_aglomerate_comb>
 274:	lsl	x0, x0, #2
 278:	ldr	x1, [sp, #216]
 27c:	add	x0, x1, x0
 280:	str	x0, [sp, #216]
 284:	add	x0, sp, #0x50
 288:	mov	x1, x0
 28c:	ldr	x0, [sp, #232]
 290:	bl	70 <grub_mod_init-0x5c8>
 294:	mov	w1, w0
 298:	ldr	w0, [sp, #228]
 29c:	add	w0, w0, w1
 2a0:	str	w0, [sp, #228]
 2a4:	ldr	x0, [sp, #112]
 2a8:	ldr	x1, [sp, #216]
 2ac:	cmp	x1, x0
 2b0:	b.cs	2d0 <grub_mod_init-0x368>  // b.hs, b.nlast
 2b4:	ldr	x0, [sp, #232]
 2b8:	bl	0 <grub_mod_init-0x638>
 2bc:	lsr	w0, w0, #1
 2c0:	sub	w0, w0, #0x2
 2c4:	ldr	w1, [sp, #228]
 2c8:	cmp	w1, w0
 2cc:	b.cc	250 <grub_mod_init-0x3e8>  // b.lo, b.ul, b.last
 2d0:	ldr	x0, [sp, #120]
 2d4:	ldr	x4, [sp, #232]
 2d8:	mov	w3, #0x0                   	// #0
 2dc:	mov	w2, #0x0                   	// #0
 2e0:	ldr	x1, [sp, #216]
 2e4:	bl	0 <grub_print_ucs4>
 2e8:	ldr	w0, [sp, #252]
 2ec:	and	w0, w0, #0x1
 2f0:	cmp	w0, #0x0
 2f4:	b.ne	318 <grub_mod_init-0x320>  // b.any
 2f8:	ldr	x0, [sp, #232]
 2fc:	bl	0 <grub_mod_init-0x638>
 300:	lsr	w1, w0, #1
 304:	ldr	w0, [sp, #228]
 308:	sub	w0, w1, w0
 30c:	mov	w1, w0
 310:	ldr	x0, [sp, #232]
 314:	bl	118 <grub_mod_init-0x520>
 318:	ldr	x0, [sp, #232]
 31c:	ldr	x0, [x0]
 320:	str	x0, [sp, #232]
 324:	ldr	x0, [sp, #232]
 328:	cmp	x0, #0x0
 32c:	b.ne	240 <grub_mod_init-0x3f8>  // b.any
 330:	ldr	w0, [sp, #252]
 334:	and	w0, w0, #0x1
 338:	cmp	w0, #0x0
 33c:	b.eq	350 <grub_mod_init-0x2e8>  // b.none
 340:	adrp	x0, 0 <grub_mod_init-0x638>
 344:	add	x0, x0, #0x0
 348:	ldr	x0, [x0]
 34c:	bl	0 <grub_printf>
 350:	ldr	w0, [sp, #252]
 354:	add	w0, w0, #0x1
 358:	str	w0, [sp, #252]
 35c:	ldr	x0, [sp, #160]
 360:	bl	0 <grub_free>
 364:	ldr	x0, [sp, #120]
 368:	bl	0 <grub_free>
 36c:	ldr	x0, [sp, #240]
 370:	ldr	x0, [x0]
 374:	str	x0, [sp, #240]
 378:	ldr	x0, [sp, #240]
 37c:	cmp	x0, #0x0
 380:	b.ne	1a4 <grub_mod_init-0x494>  // b.any
 384:	b	38c <grub_mod_init-0x2ac>
 388:	nop
 38c:	ldr	w0, [sp, #252]
 390:	and	w0, w0, #0x1
 394:	cmp	w0, #0x0
 398:	b.ne	5e0 <grub_mod_init-0x58>  // b.any
 39c:	adrp	x0, 0 <grub_mod_init-0x638>
 3a0:	add	x0, x0, #0x0
 3a4:	ldr	x0, [x0]
 3a8:	bl	0 <grub_printf>
 3ac:	b	5e0 <grub_mod_init-0x58>
 3b0:	str	wzr, [sp, #212]
 3b4:	b	5d0 <grub_mod_init-0x68>
 3b8:	ldrsw	x0, [sp, #212]
 3bc:	lsl	x0, x0, #3
 3c0:	ldr	x1, [sp, #56]
 3c4:	add	x0, x1, x0
 3c8:	ldr	x0, [x0]
 3cc:	str	x0, [sp, #176]
 3d0:	adrp	x0, 0 <grub_mod_init-0x638>
 3d4:	add	x0, x0, #0x0
 3d8:	ldr	x0, [x0]
 3dc:	ldr	x0, [x0]
 3e0:	str	x0, [sp, #200]
 3e4:	ldr	x0, [sp, #200]
 3e8:	cmp	x0, #0x0
 3ec:	b.eq	3fc <grub_mod_init-0x23c>  // b.none
 3f0:	ldr	x0, [sp, #200]
 3f4:	ldr	x0, [x0]
 3f8:	b	400 <grub_mod_init-0x238>
 3fc:	mov	x0, #0x0                   	// #0
 400:	str	x0, [sp, #184]
 404:	b	5b8 <grub_mod_init-0x80>
 408:	ldr	x0, [sp, #200]
 40c:	ldr	w0, [x0, #24]
 410:	and	w0, w0, #0x100
 414:	cmp	w0, #0x0
 418:	b.eq	584 <grub_mod_init-0xb4>  // b.none
 41c:	ldr	x0, [sp, #200]
 420:	ldr	x19, [x0, #16]
 424:	ldr	x0, [sp, #176]
 428:	bl	0 <grub_strlen>
 42c:	mov	x2, x0
 430:	ldr	x1, [sp, #176]
 434:	mov	x0, x19
 438:	bl	0 <grub_strncmp>
 43c:	cmp	w0, #0x0
 440:	b.ne	58c <grub_mod_init-0xac>  // b.any
 444:	ldr	x0, [sp, #200]
 448:	ldr	w0, [x0, #40]
 44c:	and	w0, w0, #0x20
 450:	cmp	w0, #0x0
 454:	b.eq	468 <grub_mod_init-0x1d0>  // b.none
 458:	ldr	x0, [sp, #200]
 45c:	bl	0 <grub_dyncmd_get_cmd>
 460:	str	x0, [sp, #192]
 464:	b	470 <grub_mod_init-0x1c8>
 468:	ldr	x0, [sp, #200]
 46c:	str	x0, [sp, #192]
 470:	ldr	x0, [sp, #192]
 474:	cmp	x0, #0x0
 478:	b.ne	484 <grub_mod_init-0x1b4>  // b.any
 47c:	bl	0 <grub_print_error>
 480:	b	590 <grub_mod_init-0xa8>
 484:	ldr	w0, [sp, #252]
 488:	add	w1, w0, #0x1
 48c:	str	w1, [sp, #252]
 490:	cmp	w0, #0x0
 494:	b.le	4a8 <grub_mod_init-0x190>
 498:	adrp	x0, 0 <grub_mod_init-0x638>
 49c:	add	x0, x0, #0x0
 4a0:	ldr	x0, [x0]
 4a4:	bl	0 <grub_printf>
 4a8:	ldr	x0, [sp, #192]
 4ac:	ldr	w0, [x0, #40]
 4b0:	and	w0, w0, #0x10
 4b4:	cmp	w0, #0x0
 4b8:	b.eq	4e0 <grub_mod_init-0x158>  // b.none
 4bc:	ldr	x0, [sp, #192]
 4c0:	ldr	w0, [x0, #40]
 4c4:	and	w0, w0, #0x20
 4c8:	cmp	w0, #0x0
 4cc:	b.ne	4e0 <grub_mod_init-0x158>  // b.any
 4d0:	ldr	x0, [sp, #192]
 4d4:	ldr	x0, [x0, #64]
 4d8:	bl	0 <grub_arg_show_help>
 4dc:	b	590 <grub_mod_init-0xa8>
 4e0:	adrp	x0, 0 <grub_mod_init-0x638>
 4e4:	add	x0, x0, #0x0
 4e8:	ldr	x0, [x0]
 4ec:	str	x0, [sp, #128]
 4f0:	adrp	x0, 0 <grub_mod_init-0x638>
 4f4:	add	x0, x0, #0x0
 4f8:	ldr	x0, [x0]
 4fc:	ldr	x1, [x0]
 500:	ldr	x0, [sp, #128]
 504:	blr	x1
 508:	mov	x20, x0
 50c:	ldr	x0, [sp, #192]
 510:	ldr	x19, [x0, #16]
 514:	ldr	x0, [sp, #192]
 518:	ldr	x0, [x0, #48]
 51c:	str	x0, [sp, #136]
 520:	adrp	x0, 0 <grub_mod_init-0x638>
 524:	add	x0, x0, #0x0
 528:	ldr	x0, [x0]
 52c:	ldr	x1, [x0]
 530:	ldr	x0, [sp, #136]
 534:	blr	x1
 538:	mov	x21, x0
 53c:	ldr	x0, [sp, #192]
 540:	ldr	x0, [x0, #56]
 544:	str	x0, [sp, #144]
 548:	adrp	x0, 0 <grub_mod_init-0x638>
 54c:	add	x0, x0, #0x0
 550:	ldr	x0, [x0]
 554:	ldr	x1, [x0]
 558:	ldr	x0, [sp, #144]
 55c:	blr	x1
 560:	mov	x4, x0
 564:	mov	x3, x21
 568:	mov	x2, x19
 56c:	mov	x1, x20
 570:	adrp	x0, 0 <grub_mod_init-0x638>
 574:	add	x0, x0, #0x0
 578:	ldr	x0, [x0]
 57c:	bl	0 <grub_printf>
 580:	b	590 <grub_mod_init-0xa8>
 584:	nop
 588:	b	590 <grub_mod_init-0xa8>
 58c:	nop
 590:	ldr	x0, [sp, #184]
 594:	str	x0, [sp, #200]
 598:	ldr	x0, [sp, #200]
 59c:	cmp	x0, #0x0
 5a0:	b.eq	5b0 <grub_mod_init-0x88>  // b.none
 5a4:	ldr	x0, [sp, #200]
 5a8:	ldr	x0, [x0]
 5ac:	b	5b4 <grub_mod_init-0x84>
 5b0:	mov	x0, #0x0                   	// #0
 5b4:	str	x0, [sp, #184]
 5b8:	ldr	x0, [sp, #200]
 5bc:	cmp	x0, #0x0
 5c0:	b.ne	408 <grub_mod_init-0x230>  // b.any
 5c4:	ldr	w0, [sp, #212]
 5c8:	add	w0, w0, #0x1
 5cc:	str	w0, [sp, #212]
 5d0:	ldr	w1, [sp, #212]
 5d4:	ldr	w0, [sp, #68]
 5d8:	cmp	w1, w0
 5dc:	b.lt	3b8 <grub_mod_init-0x280>  // b.tstop
 5e0:	mov	w0, #0x0                   	// #0
 5e4:	ldp	x19, x20, [sp, #16]
 5e8:	ldr	x21, [sp, #32]
 5ec:	ldp	x29, x30, [sp], #256
 5f0:	ret
 5f4:	nop
	...

0000000000000638 <grub_mod_init>:
 638:	stp	x29, x30, [sp, #-32]!
 63c:	mov	x29, sp
 640:	str	x0, [sp, #24]
 644:	mov	x5, #0x0                   	// #0
 648:	adrp	x0, 0 <grub_mod_init-0x638>
 64c:	add	x0, x0, #0x0
 650:	ldr	x4, [x0]
 654:	adrp	x0, 0 <grub_mod_init-0x638>
 658:	add	x0, x0, #0x0
 65c:	ldr	x3, [x0]
 660:	mov	w2, #0x0                   	// #0
 664:	adrp	x0, 0 <grub_mod_init-0x638>
 668:	add	x0, x0, #0x0
 66c:	ldr	x1, [x0]
 670:	adrp	x0, 0 <grub_mod_init-0x638>
 674:	add	x0, x0, #0x0
 678:	ldr	x0, [x0]
 67c:	bl	0 <grub_register_extcmd>
 680:	mov	x1, x0
 684:	adrp	x0, 0 <grub_mod_init-0x638>
 688:	add	x0, x0, #0x0
 68c:	ldr	x0, [x0]
 690:	str	x1, [x0]
 694:	nop
 698:	ldp	x29, x30, [sp], #32
 69c:	ret
	...

00000000000006c8 <grub_mod_fini>:
 6c8:	stp	x29, x30, [sp, #-16]!
 6cc:	mov	x29, sp
 6d0:	adrp	x0, 0 <grub_mod_init-0x638>
 6d4:	add	x0, x0, #0x0
 6d8:	ldr	x0, [x0]
 6dc:	ldr	x0, [x0]
 6e0:	bl	0 <grub_unregister_extcmd>
 6e4:	nop
 6e8:	ldp	x29, x30, [sp], #16
 6ec:	ret
	...
