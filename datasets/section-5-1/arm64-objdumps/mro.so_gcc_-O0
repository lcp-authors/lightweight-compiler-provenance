
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//mro.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001428 <_init>:
    1428:	stp	x29, x30, [sp, #-16]!
    142c:	mov	x29, sp
    1430:	bl	17c0 <call_weak_fn>
    1434:	ldp	x29, x30, [sp], #16
    1438:	ret

Disassembly of section .plt:

0000000000001440 <.plt>:
    1440:	stp	x16, x30, [sp, #-16]!
    1444:	adrp	x16, 14000 <__FRAME_END__+0xf270>
    1448:	ldr	x17, [x16, #4088]
    144c:	add	x16, x16, #0xff8
    1450:	br	x17
    1454:	nop
    1458:	nop
    145c:	nop

0000000000001460 <Perl_hv_iterkeysv@plt>:
    1460:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    1464:	ldr	x17, [x16]
    1468:	add	x16, x16, #0x0
    146c:	br	x17

0000000000001470 <Perl_mro_get_linear_isa@plt>:
    1470:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    1474:	ldr	x17, [x16, #8]
    1478:	add	x16, x16, #0x8
    147c:	br	x17

0000000000001480 <Perl_newRV_noinc@plt>:
    1480:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    1484:	ldr	x17, [x16, #16]
    1488:	add	x16, x16, #0x10
    148c:	br	x17

0000000000001490 <Perl_stack_grow@plt>:
    1490:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    1494:	ldr	x17, [x16, #24]
    1498:	add	x16, x16, #0x18
    149c:	br	x17

00000000000014a0 <Perl_mro_set_mro@plt>:
    14a0:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    14a4:	ldr	x17, [x16, #32]
    14a8:	add	x16, x16, #0x20
    14ac:	br	x17

00000000000014b0 <Perl_newSVhek@plt>:
    14b0:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    14b4:	ldr	x17, [x16, #40]
    14b8:	add	x16, x16, #0x28
    14bc:	br	x17

00000000000014c0 <__cxa_finalize@plt>:
    14c0:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    14c4:	ldr	x17, [x16, #48]
    14c8:	add	x16, x16, #0x30
    14cc:	br	x17

00000000000014d0 <Perl_warner@plt>:
    14d0:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    14d4:	ldr	x17, [x16, #56]
    14d8:	add	x16, x16, #0x38
    14dc:	br	x17

00000000000014e0 <Perl_mro_register@plt>:
    14e0:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    14e4:	ldr	x17, [x16, #64]
    14e8:	add	x16, x16, #0x40
    14ec:	br	x17

00000000000014f0 <Perl_sv_catpvf_nocontext@plt>:
    14f0:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    14f4:	ldr	x17, [x16, #72]
    14f8:	add	x16, x16, #0x48
    14fc:	br	x17

0000000000001500 <Perl_sv_2pv_flags@plt>:
    1500:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    1504:	ldr	x17, [x16, #80]
    1508:	add	x16, x16, #0x50
    150c:	br	x17

0000000000001510 <Perl_xs_boot_epilog@plt>:
    1510:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    1514:	ldr	x17, [x16, #88]
    1518:	add	x16, x16, #0x58
    151c:	br	x17

0000000000001520 <Perl_mro_get_private_data@plt>:
    1520:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    1524:	ldr	x17, [x16, #96]
    1528:	add	x16, x16, #0x60
    152c:	br	x17

0000000000001530 <Perl_hv_iternext_flags@plt>:
    1530:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    1534:	ldr	x17, [x16, #104]
    1538:	add	x16, x16, #0x68
    153c:	br	x17

0000000000001540 <__stack_chk_fail@plt>:
    1540:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    1544:	ldr	x17, [x16, #112]
    1548:	add	x16, x16, #0x70
    154c:	br	x17

0000000000001550 <Perl_sv_isobject@plt>:
    1550:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    1554:	ldr	x17, [x16, #120]
    1558:	add	x16, x16, #0x78
    155c:	br	x17

0000000000001560 <strrchr@plt>:
    1560:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    1564:	ldr	x17, [x16, #128]
    1568:	add	x16, x16, #0x80
    156c:	br	x17

0000000000001570 <__gmon_start__@plt>:
    1570:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    1574:	ldr	x17, [x16, #136]
    1578:	add	x16, x16, #0x88
    157c:	br	x17

0000000000001580 <Perl_croak_xs_usage@plt>:
    1580:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    1584:	ldr	x17, [x16, #144]
    1588:	add	x16, x16, #0x90
    158c:	br	x17

0000000000001590 <Perl_newSVpvn_flags@plt>:
    1590:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    1594:	ldr	x17, [x16, #152]
    1598:	add	x16, x16, #0x98
    159c:	br	x17

00000000000015a0 <Perl_mg_size@plt>:
    15a0:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    15a4:	ldr	x17, [x16, #160]
    15a8:	add	x16, x16, #0xa0
    15ac:	br	x17

00000000000015b0 <Perl_croak@plt>:
    15b0:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    15b4:	ldr	x17, [x16, #168]
    15b8:	add	x16, x16, #0xa8
    15bc:	br	x17

00000000000015c0 <Perl_av_push@plt>:
    15c0:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    15c4:	ldr	x17, [x16, #176]
    15c8:	add	x16, x16, #0xb0
    15cc:	br	x17

00000000000015d0 <Perl_sv_cmp_flags@plt>:
    15d0:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    15d4:	ldr	x17, [x16, #184]
    15d8:	add	x16, x16, #0xb8
    15dc:	br	x17

00000000000015e0 <Perl_sv_eq_flags@plt>:
    15e0:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    15e4:	ldr	x17, [x16, #192]
    15e8:	add	x16, x16, #0xc0
    15ec:	br	x17

00000000000015f0 <memcmp@plt>:
    15f0:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    15f4:	ldr	x17, [x16, #200]
    15f8:	add	x16, x16, #0xc8
    15fc:	br	x17

0000000000001600 <Perl_cvgv_from_hek@plt>:
    1600:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    1604:	ldr	x17, [x16, #208]
    1608:	add	x16, x16, #0xd0
    160c:	br	x17

0000000000001610 <Perl_safesyscalloc@plt>:
    1610:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    1614:	ldr	x17, [x16, #216]
    1618:	add	x16, x16, #0xd8
    161c:	br	x17

0000000000001620 <Perl_croak_nocontext@plt>:
    1620:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    1624:	ldr	x17, [x16, #224]
    1628:	add	x16, x16, #0xe0
    162c:	br	x17

0000000000001630 <Perl_gv_efullname4@plt>:
    1630:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    1634:	ldr	x17, [x16, #232]
    1638:	add	x16, x16, #0xe8
    163c:	br	x17

0000000000001640 <Perl_newXS_deffile@plt>:
    1640:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    1644:	ldr	x17, [x16, #240]
    1648:	add	x16, x16, #0xf0
    164c:	br	x17

0000000000001650 <Perl_gv_stashsv@plt>:
    1650:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    1654:	ldr	x17, [x16, #248]
    1658:	add	x16, x16, #0xf8
    165c:	br	x17

0000000000001660 <Perl_hv_iterinit@plt>:
    1660:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    1664:	ldr	x17, [x16, #256]
    1668:	add	x16, x16, #0x100
    166c:	br	x17

0000000000001670 <Perl_newXS_flags@plt>:
    1670:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    1674:	ldr	x17, [x16, #264]
    1678:	add	x16, x16, #0x108
    167c:	br	x17

0000000000001680 <Perl_sv_2mortal@plt>:
    1680:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    1684:	ldr	x17, [x16, #272]
    1688:	add	x16, x16, #0x110
    168c:	br	x17

0000000000001690 <Perl_hv_common@plt>:
    1690:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    1694:	ldr	x17, [x16, #280]
    1698:	add	x16, x16, #0x118
    169c:	br	x17

00000000000016a0 <Perl_safesysfree@plt>:
    16a0:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    16a4:	ldr	x17, [x16, #288]
    16a8:	add	x16, x16, #0x120
    16ac:	br	x17

00000000000016b0 <Perl_xs_handshake@plt>:
    16b0:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    16b4:	ldr	x17, [x16, #296]
    16b8:	add	x16, x16, #0x128
    16bc:	br	x17

00000000000016c0 <Perl_av_fetch@plt>:
    16c0:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    16c4:	ldr	x17, [x16, #304]
    16c8:	add	x16, x16, #0x130
    16cc:	br	x17

00000000000016d0 <Perl_mro_set_private_data@plt>:
    16d0:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    16d4:	ldr	x17, [x16, #312]
    16d8:	add	x16, x16, #0x138
    16dc:	br	x17

00000000000016e0 <Perl_hv_common_key_len@plt>:
    16e0:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    16e4:	ldr	x17, [x16, #320]
    16e8:	add	x16, x16, #0x140
    16ec:	br	x17

00000000000016f0 <Perl_newRV@plt>:
    16f0:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    16f4:	ldr	x17, [x16, #328]
    16f8:	add	x16, x16, #0x148
    16fc:	br	x17

0000000000001700 <Perl_newSV_type@plt>:
    1700:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    1704:	ldr	x17, [x16, #336]
    1708:	add	x16, x16, #0x150
    170c:	br	x17

0000000000001710 <Perl_newSVpvf_nocontext@plt>:
    1710:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    1714:	ldr	x17, [x16, #344]
    1718:	add	x16, x16, #0x158
    171c:	br	x17

0000000000001720 <Perl_sv_dec@plt>:
    1720:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    1724:	ldr	x17, [x16, #352]
    1728:	add	x16, x16, #0x160
    172c:	br	x17

0000000000001730 <Perl_sv_free2@plt>:
    1730:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    1734:	ldr	x17, [x16, #360]
    1738:	add	x16, x16, #0x168
    173c:	br	x17

0000000000001740 <Perl_ckwarn@plt>:
    1740:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    1744:	ldr	x17, [x16, #368]
    1748:	add	x16, x16, #0x170
    174c:	br	x17

0000000000001750 <Perl_mro_meta_init@plt>:
    1750:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    1754:	ldr	x17, [x16, #376]
    1758:	add	x16, x16, #0x178
    175c:	br	x17

0000000000001760 <Perl_mro_get_from_name@plt>:
    1760:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    1764:	ldr	x17, [x16, #384]
    1768:	add	x16, x16, #0x180
    176c:	br	x17

0000000000001770 <Perl_sv_setiv@plt>:
    1770:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    1774:	ldr	x17, [x16, #392]
    1778:	add	x16, x16, #0x188
    177c:	br	x17

0000000000001780 <Perl_newSVsv_flags@plt>:
    1780:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    1784:	ldr	x17, [x16, #400]
    1788:	add	x16, x16, #0x190
    178c:	br	x17

0000000000001790 <Perl_gv_init_pvn@plt>:
    1790:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    1794:	ldr	x17, [x16, #408]
    1798:	add	x16, x16, #0x198
    179c:	br	x17

00000000000017a0 <Perl_sv_newmortal@plt>:
    17a0:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    17a4:	ldr	x17, [x16, #416]
    17a8:	add	x16, x16, #0x1a0
    17ac:	br	x17

00000000000017b0 <Perl_av_extend@plt>:
    17b0:	adrp	x16, 15000 <Perl_hv_iterkeysv>
    17b4:	ldr	x17, [x16, #424]
    17b8:	add	x16, x16, #0x1a8
    17bc:	br	x17

Disassembly of section .text:

00000000000017c0 <call_weak_fn>:
    17c0:	adrp	x0, 14000 <__FRAME_END__+0xf270>
    17c4:	ldr	x0, [x0, #4040]
    17c8:	cbz	x0, 17d0 <call_weak_fn+0x10>
    17cc:	b	1570 <__gmon_start__@plt>
    17d0:	ret

00000000000017d4 <deregister_tm_clones>:
    17d4:	stp	x29, x30, [sp, #-32]!
    17d8:	mov	x29, sp
    17dc:	adrp	x0, 15000 <Perl_hv_iterkeysv>
    17e0:	add	x0, x0, #0x1b8
    17e4:	str	x0, [sp, #24]
    17e8:	ldr	x0, [sp, #24]
    17ec:	str	x0, [sp, #24]
    17f0:	ldr	x1, [sp, #24]
    17f4:	adrp	x0, 15000 <Perl_hv_iterkeysv>
    17f8:	add	x0, x0, #0x1b8
    17fc:	cmp	x1, x0
    1800:	b.eq	1838 <deregister_tm_clones+0x64>  // b.none
    1804:	adrp	x0, 14000 <__FRAME_END__+0xf270>
    1808:	ldr	x0, [x0, #4024]
    180c:	str	x0, [sp, #16]
    1810:	ldr	x0, [sp, #16]
    1814:	str	x0, [sp, #16]
    1818:	ldr	x0, [sp, #16]
    181c:	cmp	x0, #0x0
    1820:	b.eq	183c <deregister_tm_clones+0x68>  // b.none
    1824:	ldr	x1, [sp, #16]
    1828:	adrp	x0, 15000 <Perl_hv_iterkeysv>
    182c:	add	x0, x0, #0x1b8
    1830:	blr	x1
    1834:	b	183c <deregister_tm_clones+0x68>
    1838:	nop
    183c:	ldp	x29, x30, [sp], #32
    1840:	ret

0000000000001844 <register_tm_clones>:
    1844:	stp	x29, x30, [sp, #-48]!
    1848:	mov	x29, sp
    184c:	adrp	x0, 15000 <Perl_hv_iterkeysv>
    1850:	add	x0, x0, #0x1b8
    1854:	str	x0, [sp, #40]
    1858:	ldr	x0, [sp, #40]
    185c:	str	x0, [sp, #40]
    1860:	ldr	x1, [sp, #40]
    1864:	adrp	x0, 15000 <Perl_hv_iterkeysv>
    1868:	add	x0, x0, #0x1b8
    186c:	sub	x0, x1, x0
    1870:	asr	x0, x0, #3
    1874:	lsr	x1, x0, #63
    1878:	add	x0, x1, x0
    187c:	asr	x0, x0, #1
    1880:	str	x0, [sp, #32]
    1884:	ldr	x0, [sp, #32]
    1888:	cmp	x0, #0x0
    188c:	b.eq	18c8 <register_tm_clones+0x84>  // b.none
    1890:	adrp	x0, 14000 <__FRAME_END__+0xf270>
    1894:	ldr	x0, [x0, #4064]
    1898:	str	x0, [sp, #24]
    189c:	ldr	x0, [sp, #24]
    18a0:	str	x0, [sp, #24]
    18a4:	ldr	x0, [sp, #24]
    18a8:	cmp	x0, #0x0
    18ac:	b.eq	18cc <register_tm_clones+0x88>  // b.none
    18b0:	ldr	x2, [sp, #24]
    18b4:	ldr	x1, [sp, #32]
    18b8:	adrp	x0, 15000 <Perl_hv_iterkeysv>
    18bc:	add	x0, x0, #0x1b8
    18c0:	blr	x2
    18c4:	b	18cc <register_tm_clones+0x88>
    18c8:	nop
    18cc:	ldp	x29, x30, [sp], #48
    18d0:	ret

00000000000018d4 <__do_global_dtors_aux>:
    18d4:	stp	x29, x30, [sp, #-16]!
    18d8:	mov	x29, sp
    18dc:	adrp	x0, 15000 <Perl_hv_iterkeysv>
    18e0:	add	x0, x0, #0x1b8
    18e4:	ldrb	w0, [x0]
    18e8:	and	x0, x0, #0xff
    18ec:	cmp	x0, #0x0
    18f0:	b.ne	192c <__do_global_dtors_aux+0x58>  // b.any
    18f4:	adrp	x0, 14000 <__FRAME_END__+0xf270>
    18f8:	ldr	x0, [x0, #4032]
    18fc:	cmp	x0, #0x0
    1900:	b.eq	1914 <__do_global_dtors_aux+0x40>  // b.none
    1904:	adrp	x0, 15000 <Perl_hv_iterkeysv>
    1908:	add	x0, x0, #0x1b0
    190c:	ldr	x0, [x0]
    1910:	bl	14c0 <__cxa_finalize@plt>
    1914:	bl	17d4 <deregister_tm_clones>
    1918:	adrp	x0, 15000 <Perl_hv_iterkeysv>
    191c:	add	x0, x0, #0x1b8
    1920:	mov	w1, #0x1                   	// #1
    1924:	strb	w1, [x0]
    1928:	b	1930 <__do_global_dtors_aux+0x5c>
    192c:	nop
    1930:	ldp	x29, x30, [sp], #16
    1934:	ret

0000000000001938 <frame_dummy>:
    1938:	stp	x29, x30, [sp, #-16]!
    193c:	mov	x29, sp
    1940:	bl	1844 <register_tm_clones>
    1944:	nop
    1948:	ldp	x29, x30, [sp], #16
    194c:	ret

0000000000001950 <S_av_top_index>:
    1950:	stp	x29, x30, [sp, #-48]!
    1954:	mov	x29, sp
    1958:	str	x0, [sp, #24]
    195c:	str	x1, [sp, #16]
    1960:	ldr	x0, [sp, #16]
    1964:	ldr	w0, [x0, #12]
    1968:	and	w0, w0, #0x800000
    196c:	cmp	w0, #0x0
    1970:	b.eq	1994 <S_av_top_index+0x44>  // b.none
    1974:	ldr	x0, [sp, #16]
    1978:	str	x0, [sp, #40]
    197c:	ldr	x0, [sp, #40]
    1980:	mov	x1, x0
    1984:	ldr	x0, [sp, #24]
    1988:	bl	15a0 <Perl_mg_size@plt>
    198c:	sxtw	x0, w0
    1990:	b	19a0 <S_av_top_index+0x50>
    1994:	ldr	x0, [sp, #16]
    1998:	ldr	x0, [x0]
    199c:	ldr	x0, [x0, #16]
    19a0:	ldp	x29, x30, [sp], #48
    19a4:	ret

00000000000019a8 <S_CvGV>:
    19a8:	stp	x29, x30, [sp, #-48]!
    19ac:	mov	x29, sp
    19b0:	str	x0, [sp, #24]
    19b4:	str	x1, [sp, #16]
    19b8:	ldr	x0, [sp, #16]
    19bc:	ldr	x0, [x0]
    19c0:	str	x0, [sp, #32]
    19c4:	ldr	x0, [sp, #32]
    19c8:	ldr	w0, [x0, #92]
    19cc:	and	w0, w0, #0x8000
    19d0:	cmp	w0, #0x0
    19d4:	b.eq	19e8 <S_CvGV+0x40>  // b.none
    19d8:	ldr	x1, [sp, #16]
    19dc:	ldr	x0, [sp, #24]
    19e0:	bl	1600 <Perl_cvgv_from_hek@plt>
    19e4:	b	19fc <S_CvGV+0x54>
    19e8:	ldr	x0, [sp, #16]
    19ec:	ldr	x0, [x0]
    19f0:	str	x0, [sp, #40]
    19f4:	ldr	x0, [sp, #40]
    19f8:	ldr	x0, [x0, #56]
    19fc:	ldp	x29, x30, [sp], #48
    1a00:	ret

0000000000001a04 <S_POPMARK>:
    1a04:	sub	sp, sp, #0x10
    1a08:	str	x0, [sp, #8]
    1a0c:	ldr	x0, [sp, #8]
    1a10:	ldr	x0, [x0, #120]
    1a14:	sub	x2, x0, #0x4
    1a18:	ldr	x1, [sp, #8]
    1a1c:	str	x2, [x1, #120]
    1a20:	ldr	w0, [x0]
    1a24:	add	sp, sp, #0x10
    1a28:	ret

0000000000001a2c <S_SvREFCNT_inc>:
    1a2c:	sub	sp, sp, #0x10
    1a30:	str	x0, [sp, #8]
    1a34:	ldr	x0, [sp, #8]
    1a38:	cmp	x0, #0x0
    1a3c:	cset	w0, ne  // ne = any
    1a40:	and	w0, w0, #0xff
    1a44:	and	x0, x0, #0xff
    1a48:	cmp	x0, #0x0
    1a4c:	b.eq	1a64 <S_SvREFCNT_inc+0x38>  // b.none
    1a50:	ldr	x0, [sp, #8]
    1a54:	ldr	w0, [x0, #8]
    1a58:	add	w1, w0, #0x1
    1a5c:	ldr	x0, [sp, #8]
    1a60:	str	w1, [x0, #8]
    1a64:	ldr	x0, [sp, #8]
    1a68:	add	sp, sp, #0x10
    1a6c:	ret

0000000000001a70 <S_SvREFCNT_dec>:
    1a70:	stp	x29, x30, [sp, #-48]!
    1a74:	mov	x29, sp
    1a78:	str	x0, [sp, #24]
    1a7c:	str	x1, [sp, #16]
    1a80:	ldr	x0, [sp, #16]
    1a84:	cmp	x0, #0x0
    1a88:	cset	w0, ne  // ne = any
    1a8c:	and	w0, w0, #0xff
    1a90:	and	x0, x0, #0xff
    1a94:	cmp	x0, #0x0
    1a98:	b.eq	1ae8 <S_SvREFCNT_dec+0x78>  // b.none
    1a9c:	ldr	x0, [sp, #16]
    1aa0:	ldr	w0, [x0, #8]
    1aa4:	str	w0, [sp, #44]
    1aa8:	ldr	w0, [sp, #44]
    1aac:	cmp	w0, #0x1
    1ab0:	cset	w0, hi  // hi = pmore
    1ab4:	and	w0, w0, #0xff
    1ab8:	and	x0, x0, #0xff
    1abc:	cmp	x0, #0x0
    1ac0:	b.eq	1ad8 <S_SvREFCNT_dec+0x68>  // b.none
    1ac4:	ldr	w0, [sp, #44]
    1ac8:	sub	w1, w0, #0x1
    1acc:	ldr	x0, [sp, #16]
    1ad0:	str	w1, [x0, #8]
    1ad4:	b	1ae8 <S_SvREFCNT_dec+0x78>
    1ad8:	ldr	w2, [sp, #44]
    1adc:	ldr	x1, [sp, #16]
    1ae0:	ldr	x0, [sp, #24]
    1ae4:	bl	1730 <Perl_sv_free2@plt>
    1ae8:	nop
    1aec:	ldp	x29, x30, [sp], #48
    1af0:	ret

0000000000001af4 <S_croak_memory_wrap>:
    1af4:	stp	x29, x30, [sp, #-16]!
    1af8:	mov	x29, sp
    1afc:	adrp	x0, 14000 <__FRAME_END__+0xf270>
    1b00:	ldr	x1, [x0, #4056]
    1b04:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    1b08:	add	x0, x0, #0x690
    1b0c:	bl	1620 <Perl_croak_nocontext@plt>

0000000000001b10 <S_mro_get_linear_isa_c3>:
    1b10:	sub	sp, sp, #0x250
    1b14:	stp	x29, x30, [sp, #16]
    1b18:	add	x29, sp, #0x10
    1b1c:	str	x19, [sp, #32]
    1b20:	str	x0, [sp, #72]
    1b24:	str	x1, [sp, #64]
    1b28:	str	w2, [sp, #60]
    1b2c:	ldr	x0, [sp, #64]
    1b30:	ldr	w0, [x0, #12]
    1b34:	and	w0, w0, #0x2000000
    1b38:	cmp	w0, #0x0
    1b3c:	b.eq	1c78 <S_mro_get_linear_isa_c3+0x168>  // b.none
    1b40:	ldr	x0, [sp, #64]
    1b44:	ldr	x1, [x0, #16]
    1b48:	ldr	x0, [sp, #64]
    1b4c:	ldr	x0, [x0]
    1b50:	ldr	x0, [x0, #24]
    1b54:	add	x0, x0, #0x1
    1b58:	lsl	x0, x0, #3
    1b5c:	add	x0, x1, x0
    1b60:	ldr	x0, [x0]
    1b64:	cmp	x0, #0x0
    1b68:	b.eq	1c78 <S_mro_get_linear_isa_c3+0x168>  // b.none
    1b6c:	ldr	x0, [sp, #64]
    1b70:	ldr	x1, [x0, #16]
    1b74:	ldr	x0, [sp, #64]
    1b78:	ldr	x0, [x0]
    1b7c:	ldr	x0, [x0, #24]
    1b80:	add	x0, x0, #0x1
    1b84:	lsl	x0, x0, #3
    1b88:	add	x0, x1, x0
    1b8c:	ldr	w0, [x0, #28]
    1b90:	cmp	w0, #0x0
    1b94:	b.le	1bc4 <S_mro_get_linear_isa_c3+0xb4>
    1b98:	ldr	x0, [sp, #64]
    1b9c:	ldr	x1, [x0, #16]
    1ba0:	ldr	x0, [sp, #64]
    1ba4:	ldr	x0, [x0]
    1ba8:	ldr	x0, [x0, #24]
    1bac:	add	x0, x0, #0x1
    1bb0:	lsl	x0, x0, #3
    1bb4:	add	x0, x1, x0
    1bb8:	ldr	x0, [x0]
    1bbc:	ldr	x0, [x0]
    1bc0:	b	1c7c <S_mro_get_linear_isa_c3+0x16c>
    1bc4:	ldr	x0, [sp, #64]
    1bc8:	ldr	x1, [x0, #16]
    1bcc:	ldr	x0, [sp, #64]
    1bd0:	ldr	x0, [x0]
    1bd4:	ldr	x0, [x0, #24]
    1bd8:	add	x0, x0, #0x1
    1bdc:	lsl	x0, x0, #3
    1be0:	add	x0, x1, x0
    1be4:	ldr	w0, [x0, #28]
    1be8:	cmn	w0, #0x1
    1bec:	b.ge	1c1c <S_mro_get_linear_isa_c3+0x10c>  // b.tcont
    1bf0:	ldr	x0, [sp, #64]
    1bf4:	ldr	x1, [x0, #16]
    1bf8:	ldr	x0, [sp, #64]
    1bfc:	ldr	x0, [x0]
    1c00:	ldr	x0, [x0, #24]
    1c04:	add	x0, x0, #0x1
    1c08:	lsl	x0, x0, #3
    1c0c:	add	x0, x1, x0
    1c10:	ldr	x0, [x0]
    1c14:	ldr	x0, [x0, #8]
    1c18:	b	1c7c <S_mro_get_linear_isa_c3+0x16c>
    1c1c:	ldr	x0, [sp, #64]
    1c20:	ldr	x1, [x0, #16]
    1c24:	ldr	x0, [sp, #64]
    1c28:	ldr	x0, [x0]
    1c2c:	ldr	x0, [x0, #24]
    1c30:	add	x0, x0, #0x1
    1c34:	lsl	x0, x0, #3
    1c38:	add	x0, x1, x0
    1c3c:	ldr	w0, [x0, #28]
    1c40:	cmn	w0, #0x1
    1c44:	b.eq	1c70 <S_mro_get_linear_isa_c3+0x160>  // b.none
    1c48:	ldr	x0, [sp, #64]
    1c4c:	ldr	x1, [x0, #16]
    1c50:	ldr	x0, [sp, #64]
    1c54:	ldr	x0, [x0]
    1c58:	ldr	x0, [x0, #24]
    1c5c:	add	x0, x0, #0x1
    1c60:	lsl	x0, x0, #3
    1c64:	add	x0, x1, x0
    1c68:	ldr	x0, [x0]
    1c6c:	b	1c7c <S_mro_get_linear_isa_c3+0x16c>
    1c70:	mov	x0, #0x0                   	// #0
    1c74:	b	1c7c <S_mro_get_linear_isa_c3+0x16c>
    1c78:	mov	x0, #0x0                   	// #0
    1c7c:	str	x0, [sp, #120]
    1c80:	ldr	x0, [sp, #120]
    1c84:	cmp	x0, #0x0
    1c88:	b.ne	1d54 <S_mro_get_linear_isa_c3+0x244>  // b.any
    1c8c:	ldr	x0, [sp, #64]
    1c90:	ldr	w0, [x0, #12]
    1c94:	and	w0, w0, #0x2000000
    1c98:	cmp	w0, #0x0
    1c9c:	b.eq	1d4c <S_mro_get_linear_isa_c3+0x23c>  // b.none
    1ca0:	ldr	x0, [sp, #64]
    1ca4:	ldr	x1, [x0, #16]
    1ca8:	ldr	x0, [sp, #64]
    1cac:	ldr	x0, [x0]
    1cb0:	ldr	x0, [x0, #24]
    1cb4:	add	x0, x0, #0x1
    1cb8:	lsl	x0, x0, #3
    1cbc:	add	x0, x1, x0
    1cc0:	ldr	x0, [x0]
    1cc4:	cmp	x0, #0x0
    1cc8:	b.eq	1d4c <S_mro_get_linear_isa_c3+0x23c>  // b.none
    1ccc:	ldr	x0, [sp, #64]
    1cd0:	ldr	x1, [x0, #16]
    1cd4:	ldr	x0, [sp, #64]
    1cd8:	ldr	x0, [x0]
    1cdc:	ldr	x0, [x0, #24]
    1ce0:	add	x0, x0, #0x1
    1ce4:	lsl	x0, x0, #3
    1ce8:	add	x0, x1, x0
    1cec:	ldr	w0, [x0, #28]
    1cf0:	cmp	w0, #0x0
    1cf4:	b.eq	1d24 <S_mro_get_linear_isa_c3+0x214>  // b.none
    1cf8:	ldr	x0, [sp, #64]
    1cfc:	ldr	x1, [x0, #16]
    1d00:	ldr	x0, [sp, #64]
    1d04:	ldr	x0, [x0]
    1d08:	ldr	x0, [x0, #24]
    1d0c:	add	x0, x0, #0x1
    1d10:	lsl	x0, x0, #3
    1d14:	add	x0, x1, x0
    1d18:	ldr	x0, [x0]
    1d1c:	ldr	x0, [x0]
    1d20:	b	1d50 <S_mro_get_linear_isa_c3+0x240>
    1d24:	ldr	x0, [sp, #64]
    1d28:	ldr	x1, [x0, #16]
    1d2c:	ldr	x0, [sp, #64]
    1d30:	ldr	x0, [x0]
    1d34:	ldr	x0, [x0, #24]
    1d38:	add	x0, x0, #0x1
    1d3c:	lsl	x0, x0, #3
    1d40:	add	x0, x1, x0
    1d44:	ldr	x0, [x0]
    1d48:	b	1d50 <S_mro_get_linear_isa_c3+0x240>
    1d4c:	mov	x0, #0x0                   	// #0
    1d50:	str	x0, [sp, #120]
    1d54:	ldr	x0, [sp, #120]
    1d58:	cmp	x0, #0x0
    1d5c:	b.ne	1d70 <S_mro_get_linear_isa_c3+0x260>  // b.any
    1d60:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    1d64:	add	x1, x0, #0x6a0
    1d68:	ldr	x0, [sp, #72]
    1d6c:	bl	15b0 <Perl_croak@plt>
    1d70:	ldr	w0, [sp, #60]
    1d74:	cmp	w0, #0x64
    1d78:	b.ls	1d90 <S_mro_get_linear_isa_c3+0x280>  // b.plast
    1d7c:	ldr	x2, [sp, #120]
    1d80:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    1d84:	add	x1, x0, #0x6c8
    1d88:	ldr	x0, [sp, #72]
    1d8c:	bl	15b0 <Perl_croak@plt>
    1d90:	ldr	x0, [sp, #64]
    1d94:	ldr	x1, [x0, #16]
    1d98:	ldr	x0, [sp, #64]
    1d9c:	ldr	x0, [x0]
    1da0:	ldr	x0, [x0, #24]
    1da4:	add	x0, x0, #0x1
    1da8:	lsl	x0, x0, #3
    1dac:	add	x0, x1, x0
    1db0:	ldr	x0, [x0, #32]
    1db4:	cmp	x0, #0x0
    1db8:	b.eq	1de4 <S_mro_get_linear_isa_c3+0x2d4>  // b.none
    1dbc:	ldr	x0, [sp, #64]
    1dc0:	ldr	x1, [x0, #16]
    1dc4:	ldr	x0, [sp, #64]
    1dc8:	ldr	x0, [x0]
    1dcc:	ldr	x0, [x0, #24]
    1dd0:	add	x0, x0, #0x1
    1dd4:	lsl	x0, x0, #3
    1dd8:	add	x0, x1, x0
    1ddc:	ldr	x0, [x0, #32]
    1de0:	b	1df0 <S_mro_get_linear_isa_c3+0x2e0>
    1de4:	ldr	x1, [sp, #64]
    1de8:	ldr	x0, [sp, #72]
    1dec:	bl	1750 <Perl_mro_meta_init@plt>
    1df0:	str	x0, [sp, #192]
    1df4:	ldr	x0, [sp, #192]
    1df8:	ldr	x0, [x0, #32]
    1dfc:	cmp	x0, #0x0
    1e00:	b.eq	1e28 <S_mro_get_linear_isa_c3+0x318>  // b.none
    1e04:	ldr	x0, [sp, #192]
    1e08:	ldr	x1, [x0, #32]
    1e0c:	adrp	x0, 14000 <__FRAME_END__+0xf270>
    1e10:	add	x0, x0, #0xdb8
    1e14:	cmp	x1, x0
    1e18:	b.ne	1e28 <S_mro_get_linear_isa_c3+0x318>  // b.any
    1e1c:	ldr	x0, [sp, #192]
    1e20:	ldr	x0, [x0, #8]
    1e24:	b	1e3c <S_mro_get_linear_isa_c3+0x32c>
    1e28:	adrp	x0, 14000 <__FRAME_END__+0xf270>
    1e2c:	add	x2, x0, #0xdb8
    1e30:	ldr	x1, [sp, #192]
    1e34:	ldr	x0, [sp, #72]
    1e38:	bl	1520 <Perl_mro_get_private_data@plt>
    1e3c:	str	x0, [sp, #200]
    1e40:	ldr	x0, [sp, #200]
    1e44:	str	x0, [sp, #112]
    1e48:	ldr	x0, [sp, #112]
    1e4c:	cmp	x0, #0x0
    1e50:	b.eq	1e5c <S_mro_get_linear_isa_c3+0x34c>  // b.none
    1e54:	ldr	x0, [sp, #112]
    1e58:	b	2760 <S_mro_get_linear_isa_c3+0xc50>
    1e5c:	mov	w6, #0x0                   	// #0
    1e60:	mov	x5, #0x0                   	// #0
    1e64:	mov	w4, #0x20                  	// #32
    1e68:	mov	w3, #0x3                   	// #3
    1e6c:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    1e70:	add	x2, x0, #0x6f8
    1e74:	ldr	x1, [sp, #64]
    1e78:	ldr	x0, [sp, #72]
    1e7c:	bl	16e0 <Perl_hv_common_key_len@plt>
    1e80:	str	x0, [sp, #208]
    1e84:	ldr	x0, [sp, #208]
    1e88:	cmp	x0, #0x0
    1e8c:	b.eq	1ef4 <S_mro_get_linear_isa_c3+0x3e4>  // b.none
    1e90:	ldr	x0, [sp, #208]
    1e94:	ldr	x0, [x0]
    1e98:	str	x0, [sp, #216]
    1e9c:	ldr	x0, [sp, #216]
    1ea0:	cmp	x0, #0x0
    1ea4:	b.eq	1ef4 <S_mro_get_linear_isa_c3+0x3e4>  // b.none
    1ea8:	ldr	x0, [sp, #216]
    1eac:	ldr	w0, [x0, #12]
    1eb0:	and	w0, w0, #0xc000
    1eb4:	cmp	w0, #0x8, lsl #12
    1eb8:	b.ne	1ef4 <S_mro_get_linear_isa_c3+0x3e4>  // b.any
    1ebc:	ldr	x0, [sp, #216]
    1ec0:	ldr	w0, [x0, #12]
    1ec4:	and	w0, w0, #0xff
    1ec8:	cmp	w0, #0x9
    1ecc:	b.eq	1ee4 <S_mro_get_linear_isa_c3+0x3d4>  // b.none
    1ed0:	ldr	x0, [sp, #216]
    1ed4:	ldr	w0, [x0, #12]
    1ed8:	and	w0, w0, #0xff
    1edc:	cmp	w0, #0xa
    1ee0:	b.ne	1ef4 <S_mro_get_linear_isa_c3+0x3e4>  // b.any
    1ee4:	ldr	x0, [sp, #216]
    1ee8:	ldr	x0, [x0, #16]
    1eec:	ldr	x0, [x0, #40]
    1ef0:	b	1ef8 <S_mro_get_linear_isa_c3+0x3e8>
    1ef4:	mov	x0, #0x0                   	// #0
    1ef8:	str	x0, [sp, #224]
    1efc:	ldr	x0, [sp, #224]
    1f00:	cmp	x0, #0x0
    1f04:	b.eq	26e8 <S_mro_get_linear_isa_c3+0xbd8>  // b.none
    1f08:	ldr	x0, [sp, #224]
    1f0c:	ldr	x0, [x0]
    1f10:	ldr	x0, [x0, #16]
    1f14:	cmp	x0, #0x0
    1f18:	b.lt	26e8 <S_mro_get_linear_isa_c3+0xbd8>  // b.tstop
    1f1c:	mov	w1, #0xb                   	// #11
    1f20:	ldr	x0, [sp, #72]
    1f24:	bl	1700 <Perl_newSV_type@plt>
    1f28:	str	x0, [sp, #232]
    1f2c:	ldr	x0, [sp, #232]
    1f30:	str	x0, [sp, #240]
    1f34:	ldr	x0, [sp, #240]
    1f38:	mov	x1, x0
    1f3c:	ldr	x0, [sp, #72]
    1f40:	bl	1680 <Perl_sv_2mortal@plt>
    1f44:	str	x0, [sp, #248]
    1f48:	ldr	x0, [sp, #248]
    1f4c:	str	x0, [sp, #256]
    1f50:	ldr	x0, [sp, #224]
    1f54:	ldr	x0, [x0]
    1f58:	ldr	x0, [x0, #16]
    1f5c:	add	x0, x0, #0x1
    1f60:	str	x0, [sp, #136]
    1f64:	ldr	x0, [sp, #224]
    1f68:	ldr	x0, [x0, #16]
    1f6c:	str	x0, [sp, #144]
    1f70:	b	216c <S_mro_get_linear_isa_c3+0x65c>
    1f74:	ldr	x0, [sp, #144]
    1f78:	ldr	x0, [x0]
    1f7c:	cmp	x0, #0x0
    1f80:	b.eq	1f90 <S_mro_get_linear_isa_c3+0x480>  // b.none
    1f84:	ldr	x0, [sp, #144]
    1f88:	ldr	x0, [x0]
    1f8c:	b	1f98 <S_mro_get_linear_isa_c3+0x488>
    1f90:	ldr	x0, [sp, #72]
    1f94:	add	x0, x0, #0x150
    1f98:	str	x0, [sp, #480]
    1f9c:	mov	w2, #0x0                   	// #0
    1fa0:	ldr	x1, [sp, #480]
    1fa4:	ldr	x0, [sp, #72]
    1fa8:	bl	1650 <Perl_gv_stashsv@plt>
    1fac:	str	x0, [sp, #488]
    1fb0:	ldr	x0, [sp, #144]
    1fb4:	add	x0, x0, #0x8
    1fb8:	str	x0, [sp, #144]
    1fbc:	ldr	x0, [sp, #488]
    1fc0:	cmp	x0, #0x0
    1fc4:	b.ne	2020 <S_mro_get_linear_isa_c3+0x510>  // b.any
    1fc8:	mov	w1, #0xb                   	// #11
    1fcc:	ldr	x0, [sp, #72]
    1fd0:	bl	1700 <Perl_newSV_type@plt>
    1fd4:	str	x0, [sp, #544]
    1fd8:	ldr	x0, [sp, #544]
    1fdc:	str	x0, [sp, #552]
    1fe0:	mov	w2, #0x12                  	// #18
    1fe4:	ldr	x1, [sp, #480]
    1fe8:	ldr	x0, [sp, #72]
    1fec:	bl	1780 <Perl_newSVsv_flags@plt>
    1ff0:	mov	x2, x0
    1ff4:	ldr	x1, [sp, #552]
    1ff8:	ldr	x0, [sp, #72]
    1ffc:	bl	15c0 <Perl_av_push@plt>
    2000:	ldr	x0, [sp, #552]
    2004:	str	x0, [sp, #560]
    2008:	ldr	x0, [sp, #560]
    200c:	mov	x2, x0
    2010:	ldr	x1, [sp, #256]
    2014:	ldr	x0, [sp, #72]
    2018:	bl	15c0 <Perl_av_push@plt>
    201c:	b	216c <S_mro_get_linear_isa_c3+0x65c>
    2020:	ldr	w0, [sp, #60]
    2024:	add	w0, w0, #0x1
    2028:	mov	w2, w0
    202c:	ldr	x1, [sp, #488]
    2030:	ldr	x0, [sp, #72]
    2034:	bl	1b10 <S_mro_get_linear_isa_c3>
    2038:	str	x0, [sp, #496]
    203c:	ldr	x0, [sp, #136]
    2040:	cmp	x0, #0x0
    2044:	b.ne	2130 <S_mro_get_linear_isa_c3+0x620>  // b.any
    2048:	ldr	x0, [sp, #256]
    204c:	ldr	x0, [x0]
    2050:	ldr	x0, [x0, #16]
    2054:	cmn	x0, #0x1
    2058:	b.ne	2130 <S_mro_get_linear_isa_c3+0x620>  // b.any
    205c:	ldr	x0, [sp, #496]
    2060:	ldr	x0, [x0]
    2064:	ldr	x0, [x0, #16]
    2068:	add	w0, w0, #0x1
    206c:	str	w0, [sp, #92]
    2070:	ldr	x0, [sp, #496]
    2074:	ldr	x0, [x0, #16]
    2078:	str	x0, [sp, #160]
    207c:	ldr	x0, [sp, #256]
    2080:	str	x0, [sp, #112]
    2084:	ldrsw	x0, [sp, #92]
    2088:	mov	x2, x0
    208c:	ldr	x1, [sp, #112]
    2090:	ldr	x0, [sp, #72]
    2094:	bl	17b0 <Perl_av_extend@plt>
    2098:	ldr	x0, [sp, #112]
    209c:	ldr	x0, [x0]
    20a0:	ldrsw	x1, [sp, #92]
    20a4:	str	x1, [x0, #16]
    20a8:	ldr	x0, [sp, #112]
    20ac:	ldr	x0, [x0, #16]
    20b0:	str	x0, [sp, #152]
    20b4:	ldr	x19, [sp, #152]
    20b8:	add	x0, x19, #0x8
    20bc:	str	x0, [sp, #152]
    20c0:	ldr	x1, [sp, #120]
    20c4:	ldr	x0, [sp, #72]
    20c8:	bl	14b0 <Perl_newSVhek@plt>
    20cc:	str	x0, [x19]
    20d0:	b	2108 <S_mro_get_linear_isa_c3+0x5f8>
    20d4:	ldr	x0, [sp, #160]
    20d8:	add	x1, x0, #0x8
    20dc:	str	x1, [sp, #160]
    20e0:	ldr	x0, [x0]
    20e4:	str	x0, [sp, #512]
    20e8:	ldr	x19, [sp, #152]
    20ec:	add	x0, x19, #0x8
    20f0:	str	x0, [sp, #152]
    20f4:	mov	w2, #0x12                  	// #18
    20f8:	ldr	x1, [sp, #512]
    20fc:	ldr	x0, [sp, #72]
    2100:	bl	1780 <Perl_newSVsv_flags@plt>
    2104:	str	x0, [x19]
    2108:	ldr	w0, [sp, #92]
    210c:	sub	w1, w0, #0x1
    2110:	str	w1, [sp, #92]
    2114:	cmp	w0, #0x0
    2118:	b.ne	20d4 <S_mro_get_linear_isa_c3+0x5c4>  // b.any
    211c:	ldr	x0, [sp, #112]
    2120:	str	x0, [sp, #504]
    2124:	ldr	x0, [sp, #504]
    2128:	bl	1a2c <S_SvREFCNT_inc>
    212c:	b	271c <S_mro_get_linear_isa_c3+0xc0c>
    2130:	ldr	x0, [sp, #496]
    2134:	str	x0, [sp, #520]
    2138:	ldr	x0, [sp, #520]
    213c:	ldr	w1, [x0, #8]
    2140:	add	w1, w1, #0x1
    2144:	str	w1, [x0, #8]
    2148:	ldr	x0, [sp, #496]
    214c:	str	x0, [sp, #528]
    2150:	ldr	x0, [sp, #528]
    2154:	str	x0, [sp, #536]
    2158:	ldr	x0, [sp, #536]
    215c:	mov	x2, x0
    2160:	ldr	x1, [sp, #256]
    2164:	ldr	x0, [sp, #72]
    2168:	bl	15c0 <Perl_av_push@plt>
    216c:	ldr	x0, [sp, #136]
    2170:	sub	x1, x0, #0x1
    2174:	str	x1, [sp, #136]
    2178:	cmp	x0, #0x0
    217c:	b.ne	1f74 <S_mro_get_linear_isa_c3+0x464>  // b.any
    2180:	ldr	x0, [sp, #224]
    2184:	str	x0, [sp, #264]
    2188:	ldr	x0, [sp, #264]
    218c:	ldr	w1, [x0, #8]
    2190:	add	w1, w1, #0x1
    2194:	str	w1, [x0, #8]
    2198:	ldr	x0, [sp, #224]
    219c:	str	x0, [sp, #272]
    21a0:	ldr	x0, [sp, #272]
    21a4:	str	x0, [sp, #280]
    21a8:	ldr	x0, [sp, #280]
    21ac:	mov	x2, x0
    21b0:	ldr	x1, [sp, #256]
    21b4:	ldr	x0, [sp, #72]
    21b8:	bl	15c0 <Perl_av_push@plt>
    21bc:	mov	w1, #0xc                   	// #12
    21c0:	ldr	x0, [sp, #72]
    21c4:	bl	1700 <Perl_newSV_type@plt>
    21c8:	str	x0, [sp, #288]
    21cc:	ldr	x0, [sp, #288]
    21d0:	str	x0, [sp, #296]
    21d4:	ldr	x0, [sp, #296]
    21d8:	mov	x1, x0
    21dc:	ldr	x0, [sp, #72]
    21e0:	bl	1680 <Perl_sv_2mortal@plt>
    21e4:	str	x0, [sp, #304]
    21e8:	ldr	x0, [sp, #304]
    21ec:	str	x0, [sp, #312]
    21f0:	ldr	x0, [sp, #256]
    21f4:	ldr	x0, [x0]
    21f8:	ldr	x0, [x0, #16]
    21fc:	add	x0, x0, #0x1
    2200:	mov	x1, x0
    2204:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    2208:	cmp	x1, x0
    220c:	cset	w0, hi  // hi = pmore
    2210:	and	w0, w0, #0xff
    2214:	and	x0, x0, #0xff
    2218:	cmp	x0, #0x0
    221c:	b.eq	2224 <S_mro_get_linear_isa_c3+0x714>  // b.none
    2220:	bl	1af4 <S_croak_memory_wrap>
    2224:	ldr	x0, [sp, #256]
    2228:	ldr	x0, [x0]
    222c:	ldr	x0, [x0, #16]
    2230:	add	x0, x0, #0x1
    2234:	mov	x1, #0x4                   	// #4
    2238:	bl	1610 <Perl_safesyscalloc@plt>
    223c:	str	x0, [sp, #320]
    2240:	ldr	x0, [sp, #256]
    2244:	ldr	x0, [x0, #16]
    2248:	str	x0, [sp, #128]
    224c:	ldr	x0, [sp, #256]
    2250:	ldr	x0, [x0]
    2254:	ldr	x0, [x0, #16]
    2258:	add	w0, w0, #0x1
    225c:	str	w0, [sp, #88]
    2260:	b	2360 <S_mro_get_linear_isa_c3+0x850>
    2264:	ldr	x0, [sp, #128]
    2268:	add	x1, x0, #0x8
    226c:	str	x1, [sp, #128]
    2270:	ldr	x0, [x0]
    2274:	str	x0, [sp, #440]
    2278:	ldr	x0, [sp, #440]
    227c:	str	x0, [sp, #448]
    2280:	ldr	x0, [sp, #448]
    2284:	ldr	x0, [x0]
    2288:	ldr	x0, [x0, #16]
    228c:	str	w0, [sp, #96]
    2290:	ldr	w0, [sp, #96]
    2294:	cmp	w0, #0x0
    2298:	b.le	2360 <S_mro_get_linear_isa_c3+0x850>
    229c:	ldr	x0, [sp, #448]
    22a0:	ldr	x0, [x0, #16]
    22a4:	add	x0, x0, #0x8
    22a8:	str	x0, [sp, #168]
    22ac:	b	234c <S_mro_get_linear_isa_c3+0x83c>
    22b0:	ldr	x0, [sp, #168]
    22b4:	add	x1, x0, #0x8
    22b8:	str	x1, [sp, #168]
    22bc:	ldr	x0, [x0]
    22c0:	str	x0, [sp, #456]
    22c4:	str	wzr, [sp]
    22c8:	mov	x7, #0x0                   	// #0
    22cc:	mov	w6, #0x10                  	// #16
    22d0:	mov	w5, #0x0                   	// #0
    22d4:	mov	x4, #0x0                   	// #0
    22d8:	mov	x3, #0x0                   	// #0
    22dc:	ldr	x2, [sp, #456]
    22e0:	ldr	x1, [sp, #312]
    22e4:	ldr	x0, [sp, #72]
    22e8:	bl	1690 <Perl_hv_common@plt>
    22ec:	str	x0, [sp, #464]
    22f0:	ldr	x0, [sp, #464]
    22f4:	cmp	x0, #0x0
    22f8:	b.eq	234c <S_mro_get_linear_isa_c3+0x83c>  // b.none
    22fc:	ldr	x0, [sp, #464]
    2300:	ldr	x0, [x0, #16]
    2304:	str	x0, [sp, #472]
    2308:	ldr	x0, [sp, #472]
    230c:	ldr	w0, [x0, #12]
    2310:	and	w0, w0, #0x100
    2314:	cmp	w0, #0x0
    2318:	b.eq	233c <S_mro_get_linear_isa_c3+0x82c>  // b.none
    231c:	ldr	x0, [sp, #472]
    2320:	ldr	x0, [x0]
    2324:	ldr	x1, [x0, #32]
    2328:	ldr	x0, [sp, #472]
    232c:	ldr	x0, [x0]
    2330:	add	x1, x1, #0x1
    2334:	str	x1, [x0, #32]
    2338:	b	234c <S_mro_get_linear_isa_c3+0x83c>
    233c:	mov	x2, #0x1                   	// #1
    2340:	ldr	x1, [sp, #472]
    2344:	ldr	x0, [sp, #72]
    2348:	bl	1770 <Perl_sv_setiv@plt>
    234c:	ldr	w0, [sp, #96]
    2350:	sub	w1, w0, #0x1
    2354:	str	w1, [sp, #96]
    2358:	cmp	w0, #0x0
    235c:	b.ne	22b0 <S_mro_get_linear_isa_c3+0x7a0>  // b.any
    2360:	ldr	w0, [sp, #88]
    2364:	sub	w1, w0, #0x1
    2368:	str	w1, [sp, #88]
    236c:	cmp	w0, #0x0
    2370:	b.ne	2264 <S_mro_get_linear_isa_c3+0x754>  // b.any
    2374:	mov	w1, #0xb                   	// #11
    2378:	ldr	x0, [sp, #72]
    237c:	bl	1700 <Perl_newSV_type@plt>
    2380:	str	x0, [sp, #328]
    2384:	ldr	x0, [sp, #328]
    2388:	str	x0, [sp, #112]
    238c:	ldr	x1, [sp, #120]
    2390:	ldr	x0, [sp, #72]
    2394:	bl	14b0 <Perl_newSVhek@plt>
    2398:	mov	x2, x0
    239c:	ldr	x1, [sp, #112]
    23a0:	ldr	x0, [sp, #72]
    23a4:	bl	15c0 <Perl_av_push@plt>
    23a8:	str	xzr, [sp, #176]
    23ac:	str	xzr, [sp, #184]
    23b0:	ldr	x0, [sp, #256]
    23b4:	ldr	x0, [x0, #16]
    23b8:	str	x0, [sp, #336]
    23bc:	str	wzr, [sp, #100]
    23c0:	b	25e8 <S_mro_get_linear_isa_c3+0xad8>
    23c4:	ldrsw	x0, [sp, #100]
    23c8:	lsl	x0, x0, #3
    23cc:	ldr	x1, [sp, #336]
    23d0:	add	x0, x1, x0
    23d4:	ldr	x0, [x0]
    23d8:	str	x0, [sp, #368]
    23dc:	ldr	x0, [sp, #368]
    23e0:	str	x0, [sp, #376]
    23e4:	ldr	x0, [sp, #376]
    23e8:	cmp	x0, #0x0
    23ec:	b.eq	25d0 <S_mro_get_linear_isa_c3+0xac0>  // b.none
    23f0:	ldrsw	x0, [sp, #100]
    23f4:	lsl	x0, x0, #2
    23f8:	ldr	x1, [sp, #320]
    23fc:	add	x0, x1, x0
    2400:	ldr	w0, [x0]
    2404:	sxtw	x0, w0
    2408:	mov	w3, #0x0                   	// #0
    240c:	mov	x2, x0
    2410:	ldr	x1, [sp, #376]
    2414:	ldr	x0, [sp, #72]
    2418:	bl	16c0 <Perl_av_fetch@plt>
    241c:	str	x0, [sp, #384]
    2420:	ldr	x0, [sp, #384]
    2424:	ldr	x0, [x0]
    2428:	str	x0, [sp, #392]
    242c:	ldr	x0, [sp, #184]
    2430:	cmp	x0, #0x0
    2434:	b.ne	24c8 <S_mro_get_linear_isa_c3+0x9b8>  // b.any
    2438:	ldr	x0, [sp, #392]
    243c:	str	x0, [sp, #176]
    2440:	str	wzr, [sp]
    2444:	mov	x7, #0x0                   	// #0
    2448:	mov	w6, #0x0                   	// #0
    244c:	mov	w5, #0x0                   	// #0
    2450:	mov	x4, #0x0                   	// #0
    2454:	mov	x3, #0x0                   	// #0
    2458:	ldr	x2, [sp, #176]
    245c:	ldr	x1, [sp, #312]
    2460:	ldr	x0, [sp, #72]
    2464:	bl	1690 <Perl_hv_common@plt>
    2468:	str	x0, [sp, #400]
    246c:	ldr	x0, [sp, #400]
    2470:	cmp	x0, #0x0
    2474:	b.eq	24a4 <S_mro_get_linear_isa_c3+0x994>  // b.none
    2478:	ldr	x0, [sp, #400]
    247c:	ldr	x0, [x0, #16]
    2480:	str	x0, [sp, #408]
    2484:	ldr	x0, [sp, #408]
    2488:	cmp	x0, #0x0
    248c:	b.eq	24a4 <S_mro_get_linear_isa_c3+0x994>  // b.none
    2490:	ldr	x0, [sp, #408]
    2494:	ldr	x0, [x0]
    2498:	ldr	x0, [x0, #32]
    249c:	cmp	x0, #0x0
    24a0:	b.gt	25d8 <S_mro_get_linear_isa_c3+0xac8>
    24a4:	mov	w2, #0x12                  	// #18
    24a8:	ldr	x1, [sp, #176]
    24ac:	ldr	x0, [sp, #72]
    24b0:	bl	1780 <Perl_newSVsv_flags@plt>
    24b4:	str	x0, [sp, #184]
    24b8:	ldr	x2, [sp, #184]
    24bc:	ldr	x1, [sp, #112]
    24c0:	ldr	x0, [sp, #72]
    24c4:	bl	15c0 <Perl_av_push@plt>
    24c8:	mov	w3, #0x2                   	// #2
    24cc:	ldr	x2, [sp, #184]
    24d0:	ldr	x1, [sp, #392]
    24d4:	ldr	x0, [sp, #72]
    24d8:	bl	15d0 <Perl_sv_cmp_flags@plt>
    24dc:	cmp	w0, #0x0
    24e0:	b.ne	25dc <S_mro_get_linear_isa_c3+0xacc>  // b.any
    24e4:	ldrsw	x0, [sp, #100]
    24e8:	lsl	x0, x0, #2
    24ec:	ldr	x1, [sp, #320]
    24f0:	add	x0, x1, x0
    24f4:	ldr	w1, [x0]
    24f8:	add	w1, w1, #0x1
    24fc:	str	w1, [x0]
    2500:	ldr	w0, [x0]
    2504:	str	w0, [sp, #108]
    2508:	ldrsw	x1, [sp, #108]
    250c:	ldr	x0, [sp, #376]
    2510:	ldr	x0, [x0]
    2514:	ldr	x0, [x0, #16]
    2518:	cmp	x1, x0
    251c:	b.le	2560 <S_mro_get_linear_isa_c3+0xa50>
    2520:	ldrsw	x0, [sp, #100]
    2524:	lsl	x0, x0, #3
    2528:	ldr	x1, [sp, #336]
    252c:	add	x0, x1, x0
    2530:	ldr	x0, [x0]
    2534:	str	x0, [sp, #432]
    2538:	ldr	x0, [sp, #432]
    253c:	mov	x1, x0
    2540:	ldr	x0, [sp, #72]
    2544:	bl	1a70 <S_SvREFCNT_dec>
    2548:	ldrsw	x0, [sp, #100]
    254c:	lsl	x0, x0, #3
    2550:	ldr	x1, [sp, #336]
    2554:	add	x0, x1, x0
    2558:	str	xzr, [x0]
    255c:	b	25dc <S_mro_get_linear_isa_c3+0xacc>
    2560:	ldrsw	x0, [sp, #108]
    2564:	mov	w3, #0x0                   	// #0
    2568:	mov	x2, x0
    256c:	ldr	x1, [sp, #376]
    2570:	ldr	x0, [sp, #72]
    2574:	bl	16c0 <Perl_av_fetch@plt>
    2578:	str	x0, [sp, #384]
    257c:	ldr	x0, [sp, #384]
    2580:	ldr	x0, [x0]
    2584:	str	x0, [sp, #392]
    2588:	str	wzr, [sp]
    258c:	mov	x7, #0x0                   	// #0
    2590:	mov	w6, #0x0                   	// #0
    2594:	mov	w5, #0x0                   	// #0
    2598:	mov	x4, #0x0                   	// #0
    259c:	mov	x3, #0x0                   	// #0
    25a0:	ldr	x2, [sp, #392]
    25a4:	ldr	x1, [sp, #312]
    25a8:	ldr	x0, [sp, #72]
    25ac:	bl	1690 <Perl_hv_common@plt>
    25b0:	str	x0, [sp, #416]
    25b4:	ldr	x0, [sp, #416]
    25b8:	ldr	x0, [x0, #16]
    25bc:	str	x0, [sp, #424]
    25c0:	ldr	x1, [sp, #424]
    25c4:	ldr	x0, [sp, #72]
    25c8:	bl	1720 <Perl_sv_dec@plt>
    25cc:	b	25dc <S_mro_get_linear_isa_c3+0xacc>
    25d0:	nop
    25d4:	b	25dc <S_mro_get_linear_isa_c3+0xacc>
    25d8:	nop
    25dc:	ldr	w0, [sp, #100]
    25e0:	add	w0, w0, #0x1
    25e4:	str	w0, [sp, #100]
    25e8:	ldrsw	x1, [sp, #100]
    25ec:	ldr	x0, [sp, #256]
    25f0:	ldr	x0, [x0]
    25f4:	ldr	x0, [x0, #16]
    25f8:	cmp	x1, x0
    25fc:	b.le	23c4 <S_mro_get_linear_isa_c3+0x8b4>
    2600:	ldr	x0, [sp, #176]
    2604:	cmp	x0, #0x0
    2608:	b.ne	261c <S_mro_get_linear_isa_c3+0xb0c>  // b.any
    260c:	ldr	x0, [sp, #320]
    2610:	bl	16a0 <Perl_safesysfree@plt>
    2614:	nop
    2618:	b	271c <S_mro_get_linear_isa_c3+0xc0c>
    261c:	ldr	x0, [sp, #184]
    2620:	cmp	x0, #0x0
    2624:	b.ne	23a8 <S_mro_get_linear_isa_c3+0x898>  // b.any
    2628:	ldr	x1, [sp, #120]
    262c:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    2630:	add	x0, x0, #0x700
    2634:	bl	1710 <Perl_newSVpvf_nocontext@plt>
    2638:	str	x0, [sp, #344]
    263c:	str	wzr, [sp, #104]
    2640:	b	2688 <S_mro_get_linear_isa_c3+0xb78>
    2644:	ldrsw	x0, [sp, #104]
    2648:	mov	w3, #0x0                   	// #0
    264c:	mov	x2, x0
    2650:	ldr	x1, [sp, #112]
    2654:	ldr	x0, [sp, #72]
    2658:	bl	16c0 <Perl_av_fetch@plt>
    265c:	str	x0, [sp, #360]
    2660:	ldr	x0, [sp, #360]
    2664:	ldr	x0, [x0]
    2668:	mov	x2, x0
    266c:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    2670:	add	x1, x0, #0x758
    2674:	ldr	x0, [sp, #344]
    2678:	bl	14f0 <Perl_sv_catpvf_nocontext@plt>
    267c:	ldr	w0, [sp, #104]
    2680:	add	w0, w0, #0x1
    2684:	str	w0, [sp, #104]
    2688:	ldrsw	x19, [sp, #104]
    268c:	ldr	x1, [sp, #112]
    2690:	ldr	x0, [sp, #72]
    2694:	bl	1950 <S_av_top_index>
    2698:	cmp	x19, x0
    269c:	b.le	2644 <S_mro_get_linear_isa_c3+0xb34>
    26a0:	ldr	x2, [sp, #176]
    26a4:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    26a8:	add	x1, x0, #0x760
    26ac:	ldr	x0, [sp, #344]
    26b0:	bl	14f0 <Perl_sv_catpvf_nocontext@plt>
    26b4:	ldr	x0, [sp, #112]
    26b8:	str	x0, [sp, #352]
    26bc:	ldr	x0, [sp, #352]
    26c0:	mov	x1, x0
    26c4:	ldr	x0, [sp, #72]
    26c8:	bl	1a70 <S_SvREFCNT_dec>
    26cc:	ldr	x0, [sp, #320]
    26d0:	bl	16a0 <Perl_safesysfree@plt>
    26d4:	ldr	x2, [sp, #344]
    26d8:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    26dc:	add	x1, x0, #0x780
    26e0:	ldr	x0, [sp, #72]
    26e4:	bl	15b0 <Perl_croak@plt>
    26e8:	mov	w1, #0xb                   	// #11
    26ec:	ldr	x0, [sp, #72]
    26f0:	bl	1700 <Perl_newSV_type@plt>
    26f4:	str	x0, [sp, #568]
    26f8:	ldr	x0, [sp, #568]
    26fc:	str	x0, [sp, #112]
    2700:	ldr	x1, [sp, #120]
    2704:	ldr	x0, [sp, #72]
    2708:	bl	14b0 <Perl_newSVhek@plt>
    270c:	mov	x2, x0
    2710:	ldr	x1, [sp, #112]
    2714:	ldr	x0, [sp, #72]
    2718:	bl	15c0 <Perl_av_push@plt>
    271c:	ldr	x0, [sp, #112]
    2720:	ldr	w0, [x0, #12]
    2724:	orr	w1, w0, #0x8000000
    2728:	ldr	x0, [sp, #112]
    272c:	str	w1, [x0, #12]
    2730:	ldr	x0, [sp, #112]
    2734:	str	x0, [sp, #576]
    2738:	ldr	x0, [sp, #576]
    273c:	mov	x3, x0
    2740:	adrp	x0, 14000 <__FRAME_END__+0xf270>
    2744:	add	x2, x0, #0xdb8
    2748:	ldr	x1, [sp, #192]
    274c:	ldr	x0, [sp, #72]
    2750:	bl	16d0 <Perl_mro_set_private_data@plt>
    2754:	str	x0, [sp, #584]
    2758:	ldr	x0, [sp, #584]
    275c:	nop
    2760:	ldr	x19, [sp, #32]
    2764:	ldp	x29, x30, [sp, #16]
    2768:	add	sp, sp, #0x250
    276c:	ret

0000000000002770 <__dopoptosub_at>:
    2770:	sub	sp, sp, #0x20
    2774:	str	x0, [sp, #8]
    2778:	str	w1, [sp, #4]
    277c:	ldr	w0, [sp, #4]
    2780:	str	w0, [sp, #28]
    2784:	b	27cc <__dopoptosub_at+0x5c>
    2788:	ldrsw	x1, [sp, #28]
    278c:	mov	x0, x1
    2790:	lsl	x0, x0, #1
    2794:	add	x0, x0, x1
    2798:	lsl	x0, x0, #5
    279c:	mov	x1, x0
    27a0:	ldr	x0, [sp, #8]
    27a4:	add	x0, x0, x1
    27a8:	ldrb	w0, [x0]
    27ac:	and	w0, w0, #0xf
    27b0:	cmp	w0, #0x9
    27b4:	b.ne	27c0 <__dopoptosub_at+0x50>  // b.any
    27b8:	ldr	w0, [sp, #28]
    27bc:	b	27dc <__dopoptosub_at+0x6c>
    27c0:	ldr	w0, [sp, #28]
    27c4:	sub	w0, w0, #0x1
    27c8:	str	w0, [sp, #28]
    27cc:	ldr	w0, [sp, #28]
    27d0:	cmp	w0, #0x0
    27d4:	b.ge	2788 <__dopoptosub_at+0x18>  // b.tcont
    27d8:	ldr	w0, [sp, #28]
    27dc:	add	sp, sp, #0x20
    27e0:	ret

00000000000027e4 <XS_mro_get_linear_isa>:
    27e4:	stp	x29, x30, [sp, #-160]!
    27e8:	mov	x29, sp
    27ec:	str	x19, [sp, #16]
    27f0:	str	x0, [sp, #40]
    27f4:	str	x1, [sp, #32]
    27f8:	ldr	x0, [sp, #40]
    27fc:	ldr	x0, [x0]
    2800:	str	x0, [sp, #72]
    2804:	ldr	x0, [sp, #40]
    2808:	bl	1a04 <S_POPMARK>
    280c:	str	w0, [sp, #56]
    2810:	ldr	x0, [sp, #40]
    2814:	ldr	x1, [x0, #24]
    2818:	ldr	w0, [sp, #56]
    281c:	add	w2, w0, #0x1
    2820:	str	w2, [sp, #56]
    2824:	sxtw	x0, w0
    2828:	lsl	x0, x0, #3
    282c:	add	x0, x1, x0
    2830:	str	x0, [sp, #80]
    2834:	ldr	x1, [sp, #72]
    2838:	ldr	x0, [sp, #80]
    283c:	sub	x0, x1, x0
    2840:	asr	x0, x0, #3
    2844:	str	w0, [sp, #60]
    2848:	ldrsw	x0, [sp, #60]
    284c:	lsl	x0, x0, #3
    2850:	neg	x0, x0
    2854:	ldr	x1, [sp, #72]
    2858:	add	x0, x1, x0
    285c:	str	x0, [sp, #72]
    2860:	ldr	w0, [sp, #60]
    2864:	cmp	w0, #0x0
    2868:	b.le	2878 <XS_mro_get_linear_isa+0x94>
    286c:	ldr	w0, [sp, #60]
    2870:	cmp	w0, #0x2
    2874:	b.le	2888 <XS_mro_get_linear_isa+0xa4>
    2878:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    287c:	add	x1, x0, #0x788
    2880:	ldr	x0, [sp, #32]
    2884:	bl	1580 <Perl_croak_xs_usage@plt>
    2888:	ldr	x0, [sp, #40]
    288c:	ldr	x1, [x0, #24]
    2890:	ldrsw	x0, [sp, #56]
    2894:	lsl	x0, x0, #3
    2898:	add	x0, x1, x0
    289c:	ldr	x0, [x0]
    28a0:	str	x0, [sp, #88]
    28a4:	mov	w2, #0x0                   	// #0
    28a8:	ldr	x1, [sp, #88]
    28ac:	ldr	x0, [sp, #40]
    28b0:	bl	1650 <Perl_gv_stashsv@plt>
    28b4:	str	x0, [sp, #96]
    28b8:	ldr	x0, [sp, #96]
    28bc:	cmp	x0, #0x0
    28c0:	b.ne	2970 <XS_mro_get_linear_isa+0x18c>  // b.any
    28c4:	mov	w1, #0xb                   	// #11
    28c8:	ldr	x0, [sp, #40]
    28cc:	bl	1700 <Perl_newSV_type@plt>
    28d0:	str	x0, [sp, #128]
    28d4:	ldr	x0, [sp, #128]
    28d8:	str	x0, [sp, #136]
    28dc:	mov	w2, #0x12                  	// #18
    28e0:	ldr	x1, [sp, #88]
    28e4:	ldr	x0, [sp, #40]
    28e8:	bl	1780 <Perl_newSVsv_flags@plt>
    28ec:	mov	x2, x0
    28f0:	ldr	x1, [sp, #136]
    28f4:	ldr	x0, [sp, #40]
    28f8:	bl	15c0 <Perl_av_push@plt>
    28fc:	ldr	x0, [sp, #136]
    2900:	str	x0, [sp, #144]
    2904:	ldr	x0, [sp, #144]
    2908:	mov	x1, x0
    290c:	ldr	x0, [sp, #40]
    2910:	bl	1480 <Perl_newRV_noinc@plt>
    2914:	mov	x2, x0
    2918:	ldr	x0, [sp, #40]
    291c:	ldr	x1, [x0, #24]
    2920:	ldrsw	x0, [sp, #56]
    2924:	lsl	x0, x0, #3
    2928:	add	x19, x1, x0
    292c:	mov	x1, x2
    2930:	ldr	x0, [sp, #40]
    2934:	bl	1680 <Perl_sv_2mortal@plt>
    2938:	str	x0, [x19]
    293c:	mov	x0, #0x1                   	// #1
    2940:	str	x0, [sp, #152]
    2944:	ldr	x0, [sp, #40]
    2948:	ldr	x1, [x0, #24]
    294c:	ldrsw	x2, [sp, #56]
    2950:	ldr	x0, [sp, #152]
    2954:	add	x0, x2, x0
    2958:	lsl	x0, x0, #3
    295c:	sub	x0, x0, #0x8
    2960:	add	x1, x1, x0
    2964:	ldr	x0, [sp, #40]
    2968:	str	x1, [x0]
    296c:	b	2a9c <XS_mro_get_linear_isa+0x2b8>
    2970:	ldr	w0, [sp, #60]
    2974:	cmp	w0, #0x1
    2978:	b.le	2a04 <XS_mro_get_linear_isa+0x220>
    297c:	ldr	x0, [sp, #40]
    2980:	ldr	x1, [x0, #24]
    2984:	ldrsw	x0, [sp, #56]
    2988:	add	x0, x0, #0x1
    298c:	lsl	x0, x0, #3
    2990:	add	x0, x1, x0
    2994:	ldr	x0, [x0]
    2998:	mov	x1, x0
    299c:	ldr	x0, [sp, #40]
    29a0:	bl	1760 <Perl_mro_get_from_name@plt>
    29a4:	str	x0, [sp, #104]
    29a8:	ldr	x0, [sp, #104]
    29ac:	cmp	x0, #0x0
    29b0:	b.ne	29e4 <XS_mro_get_linear_isa+0x200>  // b.any
    29b4:	ldr	x0, [sp, #40]
    29b8:	ldr	x1, [x0, #24]
    29bc:	ldrsw	x0, [sp, #56]
    29c0:	add	x0, x0, #0x1
    29c4:	lsl	x0, x0, #3
    29c8:	add	x0, x1, x0
    29cc:	ldr	x0, [x0]
    29d0:	mov	x2, x0
    29d4:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    29d8:	add	x1, x0, #0x7a0
    29dc:	ldr	x0, [sp, #40]
    29e0:	bl	15b0 <Perl_croak@plt>
    29e4:	ldr	x0, [sp, #104]
    29e8:	ldr	x3, [x0]
    29ec:	mov	w2, #0x0                   	// #0
    29f0:	ldr	x1, [sp, #96]
    29f4:	ldr	x0, [sp, #40]
    29f8:	blr	x3
    29fc:	str	x0, [sp, #64]
    2a00:	b	2a14 <XS_mro_get_linear_isa+0x230>
    2a04:	ldr	x1, [sp, #96]
    2a08:	ldr	x0, [sp, #40]
    2a0c:	bl	1470 <Perl_mro_get_linear_isa@plt>
    2a10:	str	x0, [sp, #64]
    2a14:	ldr	x0, [sp, #64]
    2a18:	str	x0, [sp, #112]
    2a1c:	ldr	x2, [sp, #112]
    2a20:	ldr	x0, [sp, #40]
    2a24:	ldr	x1, [x0, #24]
    2a28:	ldrsw	x0, [sp, #56]
    2a2c:	lsl	x0, x0, #3
    2a30:	add	x19, x1, x0
    2a34:	mov	x1, x2
    2a38:	ldr	x0, [sp, #40]
    2a3c:	bl	16f0 <Perl_newRV@plt>
    2a40:	str	x0, [x19]
    2a44:	ldr	x0, [sp, #40]
    2a48:	ldr	x1, [x0, #24]
    2a4c:	ldrsw	x0, [sp, #56]
    2a50:	lsl	x0, x0, #3
    2a54:	add	x0, x1, x0
    2a58:	ldr	x0, [x0]
    2a5c:	mov	x1, x0
    2a60:	ldr	x0, [sp, #40]
    2a64:	bl	1680 <Perl_sv_2mortal@plt>
    2a68:	mov	x0, #0x1                   	// #1
    2a6c:	str	x0, [sp, #120]
    2a70:	ldr	x0, [sp, #40]
    2a74:	ldr	x1, [x0, #24]
    2a78:	ldrsw	x2, [sp, #56]
    2a7c:	ldr	x0, [sp, #120]
    2a80:	add	x0, x2, x0
    2a84:	lsl	x0, x0, #3
    2a88:	sub	x0, x0, #0x8
    2a8c:	add	x1, x1, x0
    2a90:	ldr	x0, [sp, #40]
    2a94:	str	x1, [x0]
    2a98:	nop
    2a9c:	ldr	x19, [sp, #16]
    2aa0:	ldp	x29, x30, [sp], #160
    2aa4:	ret

0000000000002aa8 <XS_mro_set_mro>:
    2aa8:	stp	x29, x30, [sp, #-96]!
    2aac:	mov	x29, sp
    2ab0:	str	x0, [sp, #24]
    2ab4:	str	x1, [sp, #16]
    2ab8:	ldr	x0, [sp, #24]
    2abc:	ldr	x0, [x0]
    2ac0:	str	x0, [sp, #48]
    2ac4:	ldr	x0, [sp, #24]
    2ac8:	bl	1a04 <S_POPMARK>
    2acc:	str	w0, [sp, #40]
    2ad0:	ldr	x0, [sp, #24]
    2ad4:	ldr	x1, [x0, #24]
    2ad8:	ldr	w0, [sp, #40]
    2adc:	add	w2, w0, #0x1
    2ae0:	str	w2, [sp, #40]
    2ae4:	sxtw	x0, w0
    2ae8:	lsl	x0, x0, #3
    2aec:	add	x0, x1, x0
    2af0:	str	x0, [sp, #56]
    2af4:	ldr	x1, [sp, #48]
    2af8:	ldr	x0, [sp, #56]
    2afc:	sub	x0, x1, x0
    2b00:	asr	x0, x0, #3
    2b04:	str	w0, [sp, #44]
    2b08:	ldrsw	x0, [sp, #44]
    2b0c:	lsl	x0, x0, #3
    2b10:	neg	x0, x0
    2b14:	ldr	x1, [sp, #48]
    2b18:	add	x0, x1, x0
    2b1c:	str	x0, [sp, #48]
    2b20:	ldr	w0, [sp, #44]
    2b24:	cmp	w0, #0x2
    2b28:	b.eq	2b3c <XS_mro_set_mro+0x94>  // b.none
    2b2c:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    2b30:	add	x1, x0, #0x7b8
    2b34:	ldr	x0, [sp, #16]
    2b38:	bl	1580 <Perl_croak_xs_usage@plt>
    2b3c:	ldr	x0, [sp, #24]
    2b40:	ldr	x1, [x0, #24]
    2b44:	ldrsw	x0, [sp, #40]
    2b48:	lsl	x0, x0, #3
    2b4c:	add	x0, x1, x0
    2b50:	ldr	x0, [x0]
    2b54:	str	x0, [sp, #64]
    2b58:	mov	w2, #0x1                   	// #1
    2b5c:	ldr	x1, [sp, #64]
    2b60:	ldr	x0, [sp, #24]
    2b64:	bl	1650 <Perl_gv_stashsv@plt>
    2b68:	str	x0, [sp, #72]
    2b6c:	ldr	x0, [sp, #72]
    2b70:	cmp	x0, #0x0
    2b74:	b.ne	2b8c <XS_mro_set_mro+0xe4>  // b.any
    2b78:	ldr	x2, [sp, #64]
    2b7c:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    2b80:	add	x1, x0, #0x7c8
    2b84:	ldr	x0, [sp, #24]
    2b88:	bl	15b0 <Perl_croak@plt>
    2b8c:	ldr	x0, [sp, #72]
    2b90:	ldr	x1, [x0, #16]
    2b94:	ldr	x0, [sp, #72]
    2b98:	ldr	x0, [x0]
    2b9c:	ldr	x0, [x0, #24]
    2ba0:	add	x0, x0, #0x1
    2ba4:	lsl	x0, x0, #3
    2ba8:	add	x0, x1, x0
    2bac:	ldr	x0, [x0, #32]
    2bb0:	cmp	x0, #0x0
    2bb4:	b.eq	2be0 <XS_mro_set_mro+0x138>  // b.none
    2bb8:	ldr	x0, [sp, #72]
    2bbc:	ldr	x1, [x0, #16]
    2bc0:	ldr	x0, [sp, #72]
    2bc4:	ldr	x0, [x0]
    2bc8:	ldr	x0, [x0, #24]
    2bcc:	add	x0, x0, #0x1
    2bd0:	lsl	x0, x0, #3
    2bd4:	add	x0, x1, x0
    2bd8:	ldr	x0, [x0, #32]
    2bdc:	b	2bec <XS_mro_set_mro+0x144>
    2be0:	ldr	x1, [sp, #72]
    2be4:	ldr	x0, [sp, #24]
    2be8:	bl	1750 <Perl_mro_meta_init@plt>
    2bec:	str	x0, [sp, #80]
    2bf0:	ldr	x0, [sp, #24]
    2bf4:	ldr	x1, [x0, #24]
    2bf8:	ldrsw	x0, [sp, #40]
    2bfc:	add	x0, x0, #0x1
    2c00:	lsl	x0, x0, #3
    2c04:	add	x0, x1, x0
    2c08:	ldr	x0, [x0]
    2c0c:	mov	x2, x0
    2c10:	ldr	x1, [sp, #80]
    2c14:	ldr	x0, [sp, #24]
    2c18:	bl	14a0 <Perl_mro_set_mro@plt>
    2c1c:	str	xzr, [sp, #88]
    2c20:	ldr	x0, [sp, #24]
    2c24:	ldr	x1, [x0, #24]
    2c28:	ldrsw	x2, [sp, #40]
    2c2c:	ldr	x0, [sp, #88]
    2c30:	add	x0, x2, x0
    2c34:	lsl	x0, x0, #3
    2c38:	sub	x0, x0, #0x8
    2c3c:	add	x1, x1, x0
    2c40:	ldr	x0, [sp, #24]
    2c44:	str	x1, [x0]
    2c48:	nop
    2c4c:	ldp	x29, x30, [sp], #96
    2c50:	ret

0000000000002c54 <XS_mro_get_mro>:
    2c54:	stp	x29, x30, [sp, #-112]!
    2c58:	mov	x29, sp
    2c5c:	str	x19, [sp, #16]
    2c60:	str	x0, [sp, #40]
    2c64:	str	x1, [sp, #32]
    2c68:	ldr	x0, [sp, #40]
    2c6c:	ldr	x0, [x0]
    2c70:	str	x0, [sp, #64]
    2c74:	ldr	x0, [sp, #40]
    2c78:	bl	1a04 <S_POPMARK>
    2c7c:	str	w0, [sp, #56]
    2c80:	ldr	x0, [sp, #40]
    2c84:	ldr	x1, [x0, #24]
    2c88:	ldr	w0, [sp, #56]
    2c8c:	add	w2, w0, #0x1
    2c90:	str	w2, [sp, #56]
    2c94:	sxtw	x0, w0
    2c98:	lsl	x0, x0, #3
    2c9c:	add	x0, x1, x0
    2ca0:	str	x0, [sp, #72]
    2ca4:	ldr	x1, [sp, #64]
    2ca8:	ldr	x0, [sp, #72]
    2cac:	sub	x0, x1, x0
    2cb0:	asr	x0, x0, #3
    2cb4:	str	w0, [sp, #60]
    2cb8:	ldrsw	x0, [sp, #60]
    2cbc:	lsl	x0, x0, #3
    2cc0:	neg	x0, x0
    2cc4:	ldr	x1, [sp, #64]
    2cc8:	add	x0, x1, x0
    2ccc:	str	x0, [sp, #64]
    2cd0:	ldr	w0, [sp, #60]
    2cd4:	cmp	w0, #0x1
    2cd8:	b.eq	2cec <XS_mro_get_mro+0x98>  // b.none
    2cdc:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    2ce0:	add	x1, x0, #0x7e8
    2ce4:	ldr	x0, [sp, #32]
    2ce8:	bl	1580 <Perl_croak_xs_usage@plt>
    2cec:	ldr	x0, [sp, #40]
    2cf0:	ldr	x1, [x0, #24]
    2cf4:	ldrsw	x0, [sp, #56]
    2cf8:	lsl	x0, x0, #3
    2cfc:	add	x0, x1, x0
    2d00:	ldr	x0, [x0]
    2d04:	str	x0, [sp, #80]
    2d08:	mov	w2, #0x0                   	// #0
    2d0c:	ldr	x1, [sp, #80]
    2d10:	ldr	x0, [sp, #40]
    2d14:	bl	1650 <Perl_gv_stashsv@plt>
    2d18:	str	x0, [sp, #88]
    2d1c:	ldr	x0, [sp, #88]
    2d20:	cmp	x0, #0x0
    2d24:	b.eq	2de4 <XS_mro_get_mro+0x190>  // b.none
    2d28:	ldr	x0, [sp, #88]
    2d2c:	ldr	x1, [x0, #16]
    2d30:	ldr	x0, [sp, #88]
    2d34:	ldr	x0, [x0]
    2d38:	ldr	x0, [x0, #24]
    2d3c:	add	x0, x0, #0x1
    2d40:	lsl	x0, x0, #3
    2d44:	add	x0, x1, x0
    2d48:	ldr	x0, [x0, #32]
    2d4c:	cmp	x0, #0x0
    2d50:	b.eq	2d7c <XS_mro_get_mro+0x128>  // b.none
    2d54:	ldr	x0, [sp, #88]
    2d58:	ldr	x1, [x0, #16]
    2d5c:	ldr	x0, [sp, #88]
    2d60:	ldr	x0, [x0]
    2d64:	ldr	x0, [x0, #24]
    2d68:	add	x0, x0, #0x1
    2d6c:	lsl	x0, x0, #3
    2d70:	add	x0, x1, x0
    2d74:	ldr	x0, [x0, #32]
    2d78:	b	2d88 <XS_mro_get_mro+0x134>
    2d7c:	ldr	x1, [sp, #88]
    2d80:	ldr	x0, [sp, #40]
    2d84:	bl	1750 <Perl_mro_meta_init@plt>
    2d88:	ldr	x0, [x0, #32]
    2d8c:	str	x0, [sp, #96]
    2d90:	ldr	x0, [sp, #96]
    2d94:	ldr	x4, [x0, #8]
    2d98:	ldr	x0, [sp, #96]
    2d9c:	ldrh	w0, [x0, #16]
    2da0:	and	x2, x0, #0xffff
    2da4:	ldr	x0, [sp, #96]
    2da8:	ldrh	w0, [x0, #18]
    2dac:	lsl	w0, w0, #29
    2db0:	and	w0, w0, #0x20000000
    2db4:	orr	w0, w0, #0x80000
    2db8:	mov	w3, w0
    2dbc:	ldr	x0, [sp, #40]
    2dc0:	ldr	x1, [x0, #24]
    2dc4:	ldrsw	x0, [sp, #56]
    2dc8:	lsl	x0, x0, #3
    2dcc:	add	x19, x1, x0
    2dd0:	mov	x1, x4
    2dd4:	ldr	x0, [sp, #40]
    2dd8:	bl	1590 <Perl_newSVpvn_flags@plt>
    2ddc:	str	x0, [x19]
    2de0:	b	2e14 <XS_mro_get_mro+0x1c0>
    2de4:	ldr	x0, [sp, #40]
    2de8:	ldr	x1, [x0, #24]
    2dec:	ldrsw	x0, [sp, #56]
    2df0:	lsl	x0, x0, #3
    2df4:	add	x19, x1, x0
    2df8:	mov	w3, #0x80000               	// #524288
    2dfc:	mov	x2, #0x3                   	// #3
    2e00:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    2e04:	add	x1, x0, #0x7f8
    2e08:	ldr	x0, [sp, #40]
    2e0c:	bl	1590 <Perl_newSVpvn_flags@plt>
    2e10:	str	x0, [x19]
    2e14:	mov	x0, #0x1                   	// #1
    2e18:	str	x0, [sp, #104]
    2e1c:	ldr	x0, [sp, #40]
    2e20:	ldr	x1, [x0, #24]
    2e24:	ldrsw	x2, [sp, #56]
    2e28:	ldr	x0, [sp, #104]
    2e2c:	add	x0, x2, x0
    2e30:	lsl	x0, x0, #3
    2e34:	sub	x0, x0, #0x8
    2e38:	add	x1, x1, x0
    2e3c:	ldr	x0, [sp, #40]
    2e40:	str	x1, [x0]
    2e44:	nop
    2e48:	ldr	x19, [sp, #16]
    2e4c:	ldp	x29, x30, [sp], #112
    2e50:	ret

0000000000002e54 <XS_mro_get_isarev>:
    2e54:	sub	sp, sp, #0x90
    2e58:	stp	x29, x30, [sp, #16]
    2e5c:	add	x29, sp, #0x10
    2e60:	str	x0, [sp, #40]
    2e64:	str	x1, [sp, #32]
    2e68:	ldr	x0, [sp, #40]
    2e6c:	ldr	x0, [x0]
    2e70:	str	x0, [sp, #64]
    2e74:	ldr	x0, [sp, #40]
    2e78:	bl	1a04 <S_POPMARK>
    2e7c:	str	w0, [sp, #56]
    2e80:	ldr	x0, [sp, #40]
    2e84:	ldr	x1, [x0, #24]
    2e88:	ldr	w0, [sp, #56]
    2e8c:	add	w2, w0, #0x1
    2e90:	str	w2, [sp, #56]
    2e94:	sxtw	x0, w0
    2e98:	lsl	x0, x0, #3
    2e9c:	add	x0, x1, x0
    2ea0:	str	x0, [sp, #72]
    2ea4:	ldr	x1, [sp, #64]
    2ea8:	ldr	x0, [sp, #72]
    2eac:	sub	x0, x1, x0
    2eb0:	asr	x0, x0, #3
    2eb4:	str	w0, [sp, #60]
    2eb8:	ldrsw	x0, [sp, #60]
    2ebc:	lsl	x0, x0, #3
    2ec0:	neg	x0, x0
    2ec4:	ldr	x1, [sp, #64]
    2ec8:	add	x0, x1, x0
    2ecc:	str	x0, [sp, #64]
    2ed0:	ldr	w0, [sp, #60]
    2ed4:	cmp	w0, #0x1
    2ed8:	b.eq	2eec <XS_mro_get_isarev+0x98>  // b.none
    2edc:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    2ee0:	add	x1, x0, #0x7e8
    2ee4:	ldr	x0, [sp, #32]
    2ee8:	bl	1580 <Perl_croak_xs_usage@plt>
    2eec:	ldr	x0, [sp, #40]
    2ef0:	ldr	x1, [x0, #24]
    2ef4:	ldrsw	x0, [sp, #56]
    2ef8:	lsl	x0, x0, #3
    2efc:	add	x0, x1, x0
    2f00:	ldr	x0, [x0]
    2f04:	str	x0, [sp, #80]
    2f08:	ldr	x0, [sp, #40]
    2f0c:	ldr	x0, [x0, #2904]
    2f10:	str	wzr, [sp]
    2f14:	mov	x7, #0x0                   	// #0
    2f18:	mov	w6, #0x0                   	// #0
    2f1c:	mov	w5, #0x0                   	// #0
    2f20:	mov	x4, #0x0                   	// #0
    2f24:	mov	x3, #0x0                   	// #0
    2f28:	ldr	x2, [sp, #80]
    2f2c:	mov	x1, x0
    2f30:	ldr	x0, [sp, #40]
    2f34:	bl	1690 <Perl_hv_common@plt>
    2f38:	str	x0, [sp, #88]
    2f3c:	ldr	x0, [sp, #88]
    2f40:	cmp	x0, #0x0
    2f44:	b.eq	2f5c <XS_mro_get_isarev+0x108>  // b.none
    2f48:	ldr	x0, [sp, #88]
    2f4c:	ldr	x0, [x0, #16]
    2f50:	str	x0, [sp, #96]
    2f54:	ldr	x0, [sp, #96]
    2f58:	b	2f60 <XS_mro_get_isarev+0x10c>
    2f5c:	mov	x0, #0x0                   	// #0
    2f60:	str	x0, [sp, #104]
    2f64:	mov	w1, #0xb                   	// #11
    2f68:	ldr	x0, [sp, #40]
    2f6c:	bl	1700 <Perl_newSV_type@plt>
    2f70:	str	x0, [sp, #112]
    2f74:	ldr	x0, [sp, #112]
    2f78:	str	x0, [sp, #120]
    2f7c:	ldr	x0, [sp, #104]
    2f80:	cmp	x0, #0x0
    2f84:	b.eq	2fe4 <XS_mro_get_isarev+0x190>  // b.none
    2f88:	ldr	x1, [sp, #104]
    2f8c:	ldr	x0, [sp, #40]
    2f90:	bl	1660 <Perl_hv_iterinit@plt>
    2f94:	b	2fc4 <XS_mro_get_isarev+0x170>
    2f98:	ldr	x1, [sp, #128]
    2f9c:	ldr	x0, [sp, #40]
    2fa0:	bl	1460 <Perl_hv_iterkeysv@plt>
    2fa4:	mov	w2, #0x12                  	// #18
    2fa8:	mov	x1, x0
    2fac:	ldr	x0, [sp, #40]
    2fb0:	bl	1780 <Perl_newSVsv_flags@plt>
    2fb4:	mov	x2, x0
    2fb8:	ldr	x1, [sp, #120]
    2fbc:	ldr	x0, [sp, #40]
    2fc0:	bl	15c0 <Perl_av_push@plt>
    2fc4:	mov	w2, #0x0                   	// #0
    2fc8:	ldr	x1, [sp, #104]
    2fcc:	ldr	x0, [sp, #40]
    2fd0:	bl	1530 <Perl_hv_iternext_flags@plt>
    2fd4:	str	x0, [sp, #128]
    2fd8:	ldr	x0, [sp, #128]
    2fdc:	cmp	x0, #0x0
    2fe0:	b.ne	2f98 <XS_mro_get_isarev+0x144>  // b.any
    2fe4:	ldr	x0, [sp, #40]
    2fe8:	ldr	x1, [x0, #32]
    2fec:	ldr	x0, [sp, #64]
    2ff0:	sub	x0, x1, x0
    2ff4:	cmp	x0, #0x0
    2ff8:	cset	w0, le
    2ffc:	and	w0, w0, #0xff
    3000:	and	x0, x0, #0xff
    3004:	cmp	x0, #0x0
    3008:	b.eq	3024 <XS_mro_get_isarev+0x1d0>  // b.none
    300c:	mov	x3, #0x1                   	// #1
    3010:	ldr	x2, [sp, #64]
    3014:	ldr	x1, [sp, #64]
    3018:	ldr	x0, [sp, #40]
    301c:	bl	1490 <Perl_stack_grow@plt>
    3020:	str	x0, [sp, #64]
    3024:	ldr	x0, [sp, #120]
    3028:	str	x0, [sp, #136]
    302c:	ldr	x0, [sp, #136]
    3030:	mov	x1, x0
    3034:	ldr	x0, [sp, #40]
    3038:	bl	1480 <Perl_newRV_noinc@plt>
    303c:	mov	x1, x0
    3040:	ldr	x0, [sp, #64]
    3044:	add	x0, x0, #0x8
    3048:	str	x0, [sp, #64]
    304c:	ldr	x0, [sp, #40]
    3050:	bl	1680 <Perl_sv_2mortal@plt>
    3054:	mov	x1, x0
    3058:	ldr	x0, [sp, #64]
    305c:	str	x1, [x0]
    3060:	ldr	x0, [sp, #40]
    3064:	ldr	x1, [sp, #64]
    3068:	str	x1, [x0]
    306c:	ldr	x0, [sp, #40]
    3070:	ldr	x1, [sp, #64]
    3074:	str	x1, [x0]
    3078:	nop
    307c:	ldp	x29, x30, [sp, #16]
    3080:	add	sp, sp, #0x90
    3084:	ret

0000000000003088 <XS_mro_is_universal>:
    3088:	sub	sp, sp, #0x90
    308c:	stp	x29, x30, [sp, #16]
    3090:	add	x29, sp, #0x10
    3094:	str	x0, [sp, #40]
    3098:	str	x1, [sp, #32]
    309c:	adrp	x0, 14000 <__FRAME_END__+0xf270>
    30a0:	ldr	x0, [x0, #4048]
    30a4:	ldr	x1, [x0]
    30a8:	str	x1, [sp, #136]
    30ac:	mov	x1, #0x0                   	// #0
    30b0:	ldr	x0, [sp, #40]
    30b4:	ldr	x0, [x0]
    30b8:	str	x0, [sp, #64]
    30bc:	ldr	x0, [sp, #40]
    30c0:	bl	1a04 <S_POPMARK>
    30c4:	str	w0, [sp, #48]
    30c8:	ldr	x0, [sp, #40]
    30cc:	ldr	x1, [x0, #24]
    30d0:	ldr	w0, [sp, #48]
    30d4:	add	w2, w0, #0x1
    30d8:	str	w2, [sp, #48]
    30dc:	sxtw	x0, w0
    30e0:	lsl	x0, x0, #3
    30e4:	add	x0, x1, x0
    30e8:	str	x0, [sp, #72]
    30ec:	ldr	x1, [sp, #64]
    30f0:	ldr	x0, [sp, #72]
    30f4:	sub	x0, x1, x0
    30f8:	asr	x0, x0, #3
    30fc:	str	w0, [sp, #52]
    3100:	ldrsw	x0, [sp, #52]
    3104:	lsl	x0, x0, #3
    3108:	neg	x0, x0
    310c:	ldr	x1, [sp, #64]
    3110:	add	x0, x1, x0
    3114:	str	x0, [sp, #64]
    3118:	ldr	w0, [sp, #52]
    311c:	cmp	w0, #0x1
    3120:	b.eq	3134 <XS_mro_is_universal+0xac>  // b.none
    3124:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    3128:	add	x1, x0, #0x7e8
    312c:	ldr	x0, [sp, #32]
    3130:	bl	1580 <Perl_croak_xs_usage@plt>
    3134:	ldr	x0, [sp, #40]
    3138:	ldr	x1, [x0, #24]
    313c:	ldrsw	x0, [sp, #48]
    3140:	lsl	x0, x0, #3
    3144:	add	x0, x1, x0
    3148:	ldr	x0, [x0]
    314c:	str	x0, [sp, #80]
    3150:	ldr	x0, [sp, #80]
    3154:	ldr	w1, [x0, #12]
    3158:	mov	w0, #0x400                 	// #1024
    315c:	movk	w0, #0x20, lsl #16
    3160:	and	w0, w1, w0
    3164:	cmp	w0, #0x400
    3168:	b.ne	3188 <XS_mro_is_universal+0x100>  // b.any
    316c:	ldr	x0, [sp, #80]
    3170:	ldr	x0, [x0]
    3174:	ldr	x0, [x0, #16]
    3178:	str	x0, [sp, #56]
    317c:	ldr	x0, [sp, #80]
    3180:	ldr	x0, [x0, #16]
    3184:	b	31a0 <XS_mro_is_universal+0x118>
    3188:	add	x0, sp, #0x38
    318c:	mov	w3, #0x2                   	// #2
    3190:	mov	x2, x0
    3194:	ldr	x1, [sp, #80]
    3198:	ldr	x0, [sp, #40]
    319c:	bl	1500 <Perl_sv_2pv_flags@plt>
    31a0:	str	x0, [sp, #88]
    31a4:	ldr	x0, [sp, #40]
    31a8:	ldr	x0, [x0, #2904]
    31ac:	str	wzr, [sp]
    31b0:	mov	x7, #0x0                   	// #0
    31b4:	mov	w6, #0x0                   	// #0
    31b8:	mov	w5, #0x0                   	// #0
    31bc:	mov	x4, #0x0                   	// #0
    31c0:	mov	x3, #0x0                   	// #0
    31c4:	ldr	x2, [sp, #80]
    31c8:	mov	x1, x0
    31cc:	ldr	x0, [sp, #40]
    31d0:	bl	1690 <Perl_hv_common@plt>
    31d4:	str	x0, [sp, #96]
    31d8:	ldr	x0, [sp, #96]
    31dc:	cmp	x0, #0x0
    31e0:	b.eq	31f8 <XS_mro_is_universal+0x170>  // b.none
    31e4:	ldr	x0, [sp, #96]
    31e8:	ldr	x0, [x0, #16]
    31ec:	str	x0, [sp, #104]
    31f0:	ldr	x0, [sp, #104]
    31f4:	b	31fc <XS_mro_is_universal+0x174>
    31f8:	mov	x0, #0x0                   	// #0
    31fc:	str	x0, [sp, #112]
    3200:	ldr	x0, [sp, #56]
    3204:	cmp	x0, #0x9
    3208:	b.ne	3228 <XS_mro_is_universal+0x1a0>  // b.any
    320c:	mov	x2, #0x9                   	// #9
    3210:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    3214:	add	x1, x0, #0x800
    3218:	ldr	x0, [sp, #88]
    321c:	bl	15f0 <memcmp@plt>
    3220:	cmp	w0, #0x0
    3224:	b.eq	3260 <XS_mro_is_universal+0x1d8>  // b.none
    3228:	ldr	x0, [sp, #112]
    322c:	cmp	x0, #0x0
    3230:	b.eq	32b4 <XS_mro_is_universal+0x22c>  // b.none
    3234:	mov	w6, #0x0                   	// #0
    3238:	mov	x5, #0x0                   	// #0
    323c:	mov	w4, #0x8                   	// #8
    3240:	mov	w3, #0x9                   	// #9
    3244:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    3248:	add	x2, x0, #0x800
    324c:	ldr	x1, [sp, #112]
    3250:	ldr	x0, [sp, #40]
    3254:	bl	16e0 <Perl_hv_common_key_len@plt>
    3258:	cmp	x0, #0x0
    325c:	b.eq	32b4 <XS_mro_is_universal+0x22c>  // b.none
    3260:	ldr	x0, [sp, #40]
    3264:	ldr	x1, [x0, #24]
    3268:	ldrsw	x0, [sp, #48]
    326c:	lsl	x0, x0, #3
    3270:	add	x0, x1, x0
    3274:	ldr	x1, [sp, #40]
    3278:	add	x1, x1, #0x138
    327c:	str	x1, [x0]
    3280:	mov	x0, #0x1                   	// #1
    3284:	str	x0, [sp, #128]
    3288:	ldr	x0, [sp, #40]
    328c:	ldr	x1, [x0, #24]
    3290:	ldrsw	x2, [sp, #48]
    3294:	ldr	x0, [sp, #128]
    3298:	add	x0, x2, x0
    329c:	lsl	x0, x0, #3
    32a0:	sub	x0, x0, #0x8
    32a4:	add	x1, x1, x0
    32a8:	ldr	x0, [sp, #40]
    32ac:	str	x1, [x0]
    32b0:	b	3308 <XS_mro_is_universal+0x280>
    32b4:	ldr	x0, [sp, #40]
    32b8:	ldr	x1, [x0, #24]
    32bc:	ldrsw	x0, [sp, #48]
    32c0:	lsl	x0, x0, #3
    32c4:	add	x0, x1, x0
    32c8:	ldr	x1, [sp, #40]
    32cc:	add	x1, x1, #0x168
    32d0:	str	x1, [x0]
    32d4:	mov	x0, #0x1                   	// #1
    32d8:	str	x0, [sp, #120]
    32dc:	ldr	x0, [sp, #40]
    32e0:	ldr	x1, [x0, #24]
    32e4:	ldrsw	x2, [sp, #48]
    32e8:	ldr	x0, [sp, #120]
    32ec:	add	x0, x2, x0
    32f0:	lsl	x0, x0, #3
    32f4:	sub	x0, x0, #0x8
    32f8:	add	x1, x1, x0
    32fc:	ldr	x0, [sp, #40]
    3300:	str	x1, [x0]
    3304:	nop
    3308:	adrp	x0, 14000 <__FRAME_END__+0xf270>
    330c:	ldr	x0, [x0, #4048]
    3310:	ldr	x1, [sp, #136]
    3314:	ldr	x0, [x0]
    3318:	eor	x0, x1, x0
    331c:	cmp	x0, #0x0
    3320:	b.eq	3328 <XS_mro_is_universal+0x2a0>  // b.none
    3324:	bl	1540 <__stack_chk_fail@plt>
    3328:	ldp	x29, x30, [sp, #16]
    332c:	add	sp, sp, #0x90
    3330:	ret

0000000000003334 <XS_mro_invalidate_all_method_caches>:
    3334:	stp	x29, x30, [sp, #-64]!
    3338:	mov	x29, sp
    333c:	str	x0, [sp, #24]
    3340:	str	x1, [sp, #16]
    3344:	ldr	x0, [sp, #24]
    3348:	ldr	x0, [x0]
    334c:	str	x0, [sp, #40]
    3350:	ldr	x0, [sp, #24]
    3354:	bl	1a04 <S_POPMARK>
    3358:	str	w0, [sp, #32]
    335c:	ldr	x0, [sp, #24]
    3360:	ldr	x1, [x0, #24]
    3364:	ldr	w0, [sp, #32]
    3368:	add	w2, w0, #0x1
    336c:	str	w2, [sp, #32]
    3370:	sxtw	x0, w0
    3374:	lsl	x0, x0, #3
    3378:	add	x0, x1, x0
    337c:	str	x0, [sp, #48]
    3380:	ldr	x1, [sp, #40]
    3384:	ldr	x0, [sp, #48]
    3388:	sub	x0, x1, x0
    338c:	asr	x0, x0, #3
    3390:	str	w0, [sp, #36]
    3394:	ldrsw	x0, [sp, #36]
    3398:	lsl	x0, x0, #3
    339c:	neg	x0, x0
    33a0:	ldr	x1, [sp, #40]
    33a4:	add	x0, x1, x0
    33a8:	str	x0, [sp, #40]
    33ac:	ldr	w0, [sp, #36]
    33b0:	cmp	w0, #0x0
    33b4:	b.eq	33c8 <XS_mro_invalidate_all_method_caches+0x94>  // b.none
    33b8:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    33bc:	add	x1, x0, #0x810
    33c0:	ldr	x0, [sp, #16]
    33c4:	bl	1580 <Perl_croak_xs_usage@plt>
    33c8:	ldr	x0, [sp, #24]
    33cc:	ldr	w0, [x0, #104]
    33d0:	add	w1, w0, #0x1
    33d4:	ldr	x0, [sp, #24]
    33d8:	str	w1, [x0, #104]
    33dc:	str	xzr, [sp, #56]
    33e0:	ldr	x0, [sp, #24]
    33e4:	ldr	x1, [x0, #24]
    33e8:	ldrsw	x2, [sp, #32]
    33ec:	ldr	x0, [sp, #56]
    33f0:	add	x0, x2, x0
    33f4:	lsl	x0, x0, #3
    33f8:	sub	x0, x0, #0x8
    33fc:	add	x1, x1, x0
    3400:	ldr	x0, [sp, #24]
    3404:	str	x1, [x0]
    3408:	nop
    340c:	ldp	x29, x30, [sp], #64
    3410:	ret

0000000000003414 <XS_mro_get_pkg_gen>:
    3414:	stp	x29, x30, [sp, #-96]!
    3418:	mov	x29, sp
    341c:	str	x19, [sp, #16]
    3420:	str	x0, [sp, #40]
    3424:	str	x1, [sp, #32]
    3428:	ldr	x0, [sp, #40]
    342c:	ldr	x0, [x0]
    3430:	str	x0, [sp, #64]
    3434:	ldr	x0, [sp, #40]
    3438:	bl	1a04 <S_POPMARK>
    343c:	str	w0, [sp, #56]
    3440:	ldr	x0, [sp, #40]
    3444:	ldr	x1, [x0, #24]
    3448:	ldr	w0, [sp, #56]
    344c:	add	w2, w0, #0x1
    3450:	str	w2, [sp, #56]
    3454:	sxtw	x0, w0
    3458:	lsl	x0, x0, #3
    345c:	add	x0, x1, x0
    3460:	str	x0, [sp, #72]
    3464:	ldr	x1, [sp, #64]
    3468:	ldr	x0, [sp, #72]
    346c:	sub	x0, x1, x0
    3470:	asr	x0, x0, #3
    3474:	str	w0, [sp, #60]
    3478:	ldrsw	x0, [sp, #60]
    347c:	lsl	x0, x0, #3
    3480:	neg	x0, x0
    3484:	ldr	x1, [sp, #64]
    3488:	add	x0, x1, x0
    348c:	str	x0, [sp, #64]
    3490:	ldr	w0, [sp, #60]
    3494:	cmp	w0, #0x1
    3498:	b.eq	34ac <XS_mro_get_pkg_gen+0x98>  // b.none
    349c:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    34a0:	add	x1, x0, #0x7e8
    34a4:	ldr	x0, [sp, #32]
    34a8:	bl	1580 <Perl_croak_xs_usage@plt>
    34ac:	ldr	x0, [sp, #40]
    34b0:	ldr	x1, [x0, #24]
    34b4:	ldrsw	x0, [sp, #56]
    34b8:	lsl	x0, x0, #3
    34bc:	add	x0, x1, x0
    34c0:	ldr	x0, [x0]
    34c4:	str	x0, [sp, #80]
    34c8:	mov	w2, #0x0                   	// #0
    34cc:	ldr	x1, [sp, #80]
    34d0:	ldr	x0, [sp, #40]
    34d4:	bl	1650 <Perl_gv_stashsv@plt>
    34d8:	str	x0, [sp, #88]
    34dc:	ldr	x0, [sp, #40]
    34e0:	ldr	x1, [x0, #32]
    34e4:	ldr	x0, [sp, #64]
    34e8:	sub	x0, x1, x0
    34ec:	cmp	x0, #0x0
    34f0:	cset	w0, le
    34f4:	and	w0, w0, #0xff
    34f8:	and	x0, x0, #0xff
    34fc:	cmp	x0, #0x0
    3500:	b.eq	351c <XS_mro_get_pkg_gen+0x108>  // b.none
    3504:	mov	x3, #0x1                   	// #1
    3508:	ldr	x2, [sp, #64]
    350c:	ldr	x1, [sp, #64]
    3510:	ldr	x0, [sp, #40]
    3514:	bl	1490 <Perl_stack_grow@plt>
    3518:	str	x0, [sp, #64]
    351c:	ldr	x0, [sp, #64]
    3520:	add	x0, x0, #0x8
    3524:	str	x0, [sp, #64]
    3528:	ldr	x0, [sp, #40]
    352c:	bl	17a0 <Perl_sv_newmortal@plt>
    3530:	mov	x1, x0
    3534:	ldr	x0, [sp, #64]
    3538:	str	x1, [x0]
    353c:	ldr	x0, [sp, #64]
    3540:	ldr	x19, [x0]
    3544:	ldr	x0, [sp, #88]
    3548:	cmp	x0, #0x0
    354c:	b.eq	35bc <XS_mro_get_pkg_gen+0x1a8>  // b.none
    3550:	ldr	x0, [sp, #88]
    3554:	ldr	x1, [x0, #16]
    3558:	ldr	x0, [sp, #88]
    355c:	ldr	x0, [x0]
    3560:	ldr	x0, [x0, #24]
    3564:	add	x0, x0, #0x1
    3568:	lsl	x0, x0, #3
    356c:	add	x0, x1, x0
    3570:	ldr	x0, [x0, #32]
    3574:	cmp	x0, #0x0
    3578:	b.eq	35a4 <XS_mro_get_pkg_gen+0x190>  // b.none
    357c:	ldr	x0, [sp, #88]
    3580:	ldr	x1, [x0, #16]
    3584:	ldr	x0, [sp, #88]
    3588:	ldr	x0, [x0]
    358c:	ldr	x0, [x0, #24]
    3590:	add	x0, x0, #0x1
    3594:	lsl	x0, x0, #3
    3598:	add	x0, x1, x0
    359c:	ldr	x0, [x0, #32]
    35a0:	b	35b0 <XS_mro_get_pkg_gen+0x19c>
    35a4:	ldr	x1, [sp, #88]
    35a8:	ldr	x0, [sp, #40]
    35ac:	bl	1750 <Perl_mro_meta_init@plt>
    35b0:	ldr	w0, [x0, #28]
    35b4:	mov	w0, w0
    35b8:	b	35c0 <XS_mro_get_pkg_gen+0x1ac>
    35bc:	mov	x0, #0x0                   	// #0
    35c0:	mov	x2, x0
    35c4:	mov	x1, x19
    35c8:	ldr	x0, [sp, #40]
    35cc:	bl	1770 <Perl_sv_setiv@plt>
    35d0:	ldr	x0, [sp, #40]
    35d4:	ldr	x1, [sp, #64]
    35d8:	str	x1, [x0]
    35dc:	ldr	x0, [sp, #40]
    35e0:	ldr	x1, [sp, #64]
    35e4:	str	x1, [x0]
    35e8:	nop
    35ec:	ldr	x19, [sp, #16]
    35f0:	ldp	x29, x30, [sp], #96
    35f4:	ret

00000000000035f8 <XS_mro__nextcan>:
    35f8:	sub	sp, sp, #0x170
    35fc:	stp	x29, x30, [sp, #16]
    3600:	add	x29, sp, #0x10
    3604:	str	x0, [sp, #40]
    3608:	str	x1, [sp, #32]
    360c:	ldr	x0, [sp, #40]
    3610:	ldr	x0, [x0]
    3614:	str	x0, [sp, #80]
    3618:	ldr	x0, [sp, #40]
    361c:	bl	1a04 <S_POPMARK>
    3620:	str	w0, [sp, #64]
    3624:	ldr	x0, [sp, #40]
    3628:	ldr	x1, [x0, #24]
    362c:	ldr	w0, [sp, #64]
    3630:	add	w2, w0, #0x1
    3634:	str	w2, [sp, #64]
    3638:	sxtw	x0, w0
    363c:	lsl	x0, x0, #3
    3640:	add	x0, x1, x0
    3644:	str	x0, [sp, #168]
    3648:	ldr	x1, [sp, #80]
    364c:	ldr	x0, [sp, #168]
    3650:	sub	x0, x1, x0
    3654:	asr	x0, x0, #3
    3658:	str	w0, [sp, #68]
    365c:	ldrsw	x0, [sp, #68]
    3660:	lsl	x0, x0, #3
    3664:	neg	x0, x0
    3668:	ldr	x1, [sp, #80]
    366c:	add	x0, x1, x0
    3670:	str	x0, [sp, #80]
    3674:	ldr	x0, [sp, #40]
    3678:	ldr	x1, [x0, #24]
    367c:	ldrsw	x0, [sp, #64]
    3680:	lsl	x0, x0, #3
    3684:	add	x0, x1, x0
    3688:	ldr	x0, [x0]
    368c:	str	x0, [sp, #176]
    3690:	ldr	x0, [sp, #40]
    3694:	ldr	x1, [x0, #24]
    3698:	ldrsw	x0, [sp, #64]
    369c:	add	x0, x0, #0x1
    36a0:	lsl	x0, x0, #3
    36a4:	add	x0, x1, x0
    36a8:	ldr	x0, [x0]
    36ac:	ldr	x0, [x0]
    36b0:	ldr	x0, [x0, #32]
    36b4:	str	w0, [sp, #72]
    36b8:	ldr	x0, [sp, #40]
    36bc:	ldr	x0, [x0, #240]
    36c0:	ldr	w0, [x0, #32]
    36c4:	str	w0, [sp, #52]
    36c8:	ldr	x0, [sp, #40]
    36cc:	ldr	x0, [x0, #240]
    36d0:	ldr	x0, [x0, #8]
    36d4:	str	x0, [sp, #88]
    36d8:	ldr	x0, [sp, #40]
    36dc:	ldr	x0, [x0, #240]
    36e0:	str	x0, [sp, #96]
    36e4:	str	xzr, [sp, #112]
    36e8:	str	xzr, [sp, #120]
    36ec:	strb	wzr, [sp, #51]
    36f0:	ldr	x1, [sp, #176]
    36f4:	ldr	x0, [sp, #40]
    36f8:	bl	1550 <Perl_sv_isobject@plt>
    36fc:	cmp	w0, #0x0
    3700:	b.eq	371c <XS_mro__nextcan+0x124>  // b.none
    3704:	ldr	x0, [sp, #176]
    3708:	ldr	x0, [x0, #16]
    370c:	ldr	x0, [x0]
    3710:	ldr	x0, [x0]
    3714:	str	x0, [sp, #104]
    3718:	b	3730 <XS_mro__nextcan+0x138>
    371c:	mov	w2, #0x1                   	// #1
    3720:	ldr	x1, [sp, #176]
    3724:	ldr	x0, [sp, #40]
    3728:	bl	1650 <Perl_gv_stashsv@plt>
    372c:	str	x0, [sp, #104]
    3730:	ldr	x0, [sp, #104]
    3734:	ldr	w0, [x0, #12]
    3738:	and	w0, w0, #0x2000000
    373c:	cmp	w0, #0x0
    3740:	b.eq	3880 <XS_mro__nextcan+0x288>  // b.none
    3744:	ldr	x0, [sp, #104]
    3748:	ldr	x1, [x0, #16]
    374c:	ldr	x0, [sp, #104]
    3750:	ldr	x0, [x0]
    3754:	ldr	x0, [x0, #24]
    3758:	add	x0, x0, #0x1
    375c:	lsl	x0, x0, #3
    3760:	add	x0, x1, x0
    3764:	ldr	x0, [x0]
    3768:	cmp	x0, #0x0
    376c:	b.eq	3880 <XS_mro__nextcan+0x288>  // b.none
    3770:	ldr	x0, [sp, #104]
    3774:	ldr	x1, [x0, #16]
    3778:	ldr	x0, [sp, #104]
    377c:	ldr	x0, [x0]
    3780:	ldr	x0, [x0, #24]
    3784:	add	x0, x0, #0x1
    3788:	lsl	x0, x0, #3
    378c:	add	x0, x1, x0
    3790:	ldr	w0, [x0, #28]
    3794:	cmp	w0, #0x0
    3798:	b.eq	37d0 <XS_mro__nextcan+0x1d8>  // b.none
    379c:	ldr	x0, [sp, #104]
    37a0:	ldr	x1, [x0, #16]
    37a4:	ldr	x0, [sp, #104]
    37a8:	ldr	x0, [x0]
    37ac:	ldr	x0, [x0, #24]
    37b0:	add	x0, x0, #0x1
    37b4:	lsl	x0, x0, #3
    37b8:	add	x0, x1, x0
    37bc:	ldr	x0, [x0]
    37c0:	ldr	x0, [x0]
    37c4:	cmp	x0, #0x0
    37c8:	b.ne	37fc <XS_mro__nextcan+0x204>  // b.any
    37cc:	b	3880 <XS_mro__nextcan+0x288>
    37d0:	ldr	x0, [sp, #104]
    37d4:	ldr	x1, [x0, #16]
    37d8:	ldr	x0, [sp, #104]
    37dc:	ldr	x0, [x0]
    37e0:	ldr	x0, [x0, #24]
    37e4:	add	x0, x0, #0x1
    37e8:	lsl	x0, x0, #3
    37ec:	add	x0, x1, x0
    37f0:	ldr	x0, [x0]
    37f4:	cmp	x0, #0x0
    37f8:	b.eq	3880 <XS_mro__nextcan+0x288>  // b.none
    37fc:	ldr	x0, [sp, #104]
    3800:	ldr	x1, [x0, #16]
    3804:	ldr	x0, [sp, #104]
    3808:	ldr	x0, [x0]
    380c:	ldr	x0, [x0, #24]
    3810:	add	x0, x0, #0x1
    3814:	lsl	x0, x0, #3
    3818:	add	x0, x1, x0
    381c:	ldr	w0, [x0, #28]
    3820:	cmp	w0, #0x0
    3824:	b.eq	3854 <XS_mro__nextcan+0x25c>  // b.none
    3828:	ldr	x0, [sp, #104]
    382c:	ldr	x1, [x0, #16]
    3830:	ldr	x0, [sp, #104]
    3834:	ldr	x0, [x0]
    3838:	ldr	x0, [x0, #24]
    383c:	add	x0, x0, #0x1
    3840:	lsl	x0, x0, #3
    3844:	add	x0, x1, x0
    3848:	ldr	x0, [x0]
    384c:	ldr	x0, [x0]
    3850:	b	3878 <XS_mro__nextcan+0x280>
    3854:	ldr	x0, [sp, #104]
    3858:	ldr	x1, [x0, #16]
    385c:	ldr	x0, [sp, #104]
    3860:	ldr	x0, [x0]
    3864:	ldr	x0, [x0, #24]
    3868:	add	x0, x0, #0x1
    386c:	lsl	x0, x0, #3
    3870:	add	x0, x1, x0
    3874:	ldr	x0, [x0]
    3878:	add	x0, x0, #0x8
    387c:	b	3884 <XS_mro__nextcan+0x28c>
    3880:	mov	x0, #0x0                   	// #0
    3884:	str	x0, [sp, #184]
    3888:	ldr	x0, [sp, #184]
    388c:	cmp	x0, #0x0
    3890:	b.ne	38a4 <XS_mro__nextcan+0x2ac>  // b.any
    3894:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    3898:	add	x1, x0, #0x818
    389c:	ldr	x0, [sp, #40]
    38a0:	bl	15b0 <Perl_croak@plt>
    38a4:	str	wzr, [sp, #60]
    38a8:	b	3c24 <XS_mro__nextcan+0x62c>
    38ac:	ldr	w1, [sp, #52]
    38b0:	ldr	x0, [sp, #88]
    38b4:	bl	2770 <__dopoptosub_at>
    38b8:	str	w0, [sp, #52]
    38bc:	b	3910 <XS_mro__nextcan+0x318>
    38c0:	ldr	x0, [sp, #96]
    38c4:	ldr	w0, [x0, #40]
    38c8:	cmp	w0, #0x1
    38cc:	b.ne	38e0 <XS_mro__nextcan+0x2e8>  // b.any
    38d0:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    38d4:	add	x1, x0, #0x850
    38d8:	ldr	x0, [sp, #40]
    38dc:	bl	15b0 <Perl_croak@plt>
    38e0:	ldr	x0, [sp, #96]
    38e4:	ldr	x0, [x0, #16]
    38e8:	str	x0, [sp, #96]
    38ec:	ldr	x0, [sp, #96]
    38f0:	ldr	x0, [x0, #8]
    38f4:	str	x0, [sp, #88]
    38f8:	ldr	x0, [sp, #96]
    38fc:	ldr	w0, [x0, #32]
    3900:	mov	w1, w0
    3904:	ldr	x0, [sp, #88]
    3908:	bl	2770 <__dopoptosub_at>
    390c:	str	w0, [sp, #52]
    3910:	ldr	w0, [sp, #52]
    3914:	cmp	w0, #0x0
    3918:	b.lt	38c0 <XS_mro__nextcan+0x2c8>  // b.tstop
    391c:	ldrsw	x1, [sp, #52]
    3920:	mov	x0, x1
    3924:	lsl	x0, x0, #1
    3928:	add	x0, x0, x1
    392c:	lsl	x0, x0, #5
    3930:	mov	x1, x0
    3934:	ldr	x0, [sp, #88]
    3938:	add	x0, x0, x1
    393c:	ldrb	w0, [x0]
    3940:	and	w0, w0, #0xf
    3944:	cmp	w0, #0x9
    3948:	b.ne	39b0 <XS_mro__nextcan+0x3b8>  // b.any
    394c:	ldr	x0, [sp, #40]
    3950:	ldr	x0, [x0, #1768]
    3954:	cmp	x0, #0x0
    3958:	b.eq	39cc <XS_mro__nextcan+0x3d4>  // b.none
    395c:	ldr	x0, [sp, #40]
    3960:	ldr	x0, [x0, #1768]
    3964:	ldr	x0, [x0, #16]
    3968:	ldr	x0, [x0, #16]
    396c:	cmp	x0, #0x0
    3970:	b.eq	39cc <XS_mro__nextcan+0x3d4>  // b.none
    3974:	ldrsw	x1, [sp, #52]
    3978:	mov	x0, x1
    397c:	lsl	x0, x0, #1
    3980:	add	x0, x0, x1
    3984:	lsl	x0, x0, #5
    3988:	mov	x1, x0
    398c:	ldr	x0, [sp, #88]
    3990:	add	x0, x0, x1
    3994:	ldr	x1, [x0, #64]
    3998:	ldr	x0, [sp, #40]
    399c:	ldr	x0, [x0, #1768]
    39a0:	ldr	x0, [x0, #16]
    39a4:	ldr	x0, [x0, #16]
    39a8:	cmp	x1, x0
    39ac:	b.ne	39cc <XS_mro__nextcan+0x3d4>  // b.any
    39b0:	ldr	w0, [sp, #52]
    39b4:	sub	w0, w0, #0x1
    39b8:	mov	w1, w0
    39bc:	ldr	x0, [sp, #88]
    39c0:	bl	2770 <__dopoptosub_at>
    39c4:	str	w0, [sp, #52]
    39c8:	b	3c04 <XS_mro__nextcan+0x60c>
    39cc:	ldr	w0, [sp, #52]
    39d0:	sub	w0, w0, #0x1
    39d4:	mov	w1, w0
    39d8:	ldr	x0, [sp, #88]
    39dc:	bl	2770 <__dopoptosub_at>
    39e0:	str	w0, [sp, #76]
    39e4:	ldr	x0, [sp, #40]
    39e8:	ldr	x0, [x0, #1768]
    39ec:	cmp	x0, #0x0
    39f0:	b.eq	3a90 <XS_mro__nextcan+0x498>  // b.none
    39f4:	ldr	x0, [sp, #40]
    39f8:	ldr	x0, [x0, #1768]
    39fc:	ldr	x0, [x0, #16]
    3a00:	ldr	x0, [x0, #16]
    3a04:	cmp	x0, #0x0
    3a08:	b.eq	3a90 <XS_mro__nextcan+0x498>  // b.none
    3a0c:	ldr	w0, [sp, #76]
    3a10:	cmp	w0, #0x0
    3a14:	b.lt	3a90 <XS_mro__nextcan+0x498>  // b.tstop
    3a18:	ldrsw	x1, [sp, #76]
    3a1c:	mov	x0, x1
    3a20:	lsl	x0, x0, #1
    3a24:	add	x0, x0, x1
    3a28:	lsl	x0, x0, #5
    3a2c:	mov	x1, x0
    3a30:	ldr	x0, [sp, #88]
    3a34:	add	x0, x0, x1
    3a38:	ldr	x1, [x0, #64]
    3a3c:	ldr	x0, [sp, #40]
    3a40:	ldr	x0, [x0, #1768]
    3a44:	ldr	x0, [x0, #16]
    3a48:	ldr	x0, [x0, #16]
    3a4c:	cmp	x1, x0
    3a50:	b.ne	3a90 <XS_mro__nextcan+0x498>  // b.any
    3a54:	ldrsw	x1, [sp, #76]
    3a58:	mov	x0, x1
    3a5c:	lsl	x0, x0, #1
    3a60:	add	x0, x0, x1
    3a64:	lsl	x0, x0, #5
    3a68:	mov	x1, x0
    3a6c:	ldr	x0, [sp, #88]
    3a70:	add	x0, x0, x1
    3a74:	ldrb	w0, [x0]
    3a78:	and	w0, w0, #0xf
    3a7c:	cmp	w0, #0x9
    3a80:	b.eq	3a90 <XS_mro__nextcan+0x498>  // b.none
    3a84:	ldr	w0, [sp, #76]
    3a88:	str	w0, [sp, #52]
    3a8c:	b	3c04 <XS_mro__nextcan+0x60c>
    3a90:	ldrsw	x1, [sp, #52]
    3a94:	mov	x0, x1
    3a98:	lsl	x0, x0, #1
    3a9c:	add	x0, x0, x1
    3aa0:	lsl	x0, x0, #5
    3aa4:	mov	x1, x0
    3aa8:	ldr	x0, [sp, #88]
    3aac:	add	x0, x0, x1
    3ab0:	ldr	x0, [x0, #64]
    3ab4:	mov	x1, x0
    3ab8:	ldr	x0, [sp, #40]
    3abc:	bl	19a8 <S_CvGV>
    3ac0:	str	x0, [sp, #360]
    3ac4:	ldr	x0, [sp, #360]
    3ac8:	ldr	w0, [x0, #12]
    3acc:	and	w0, w0, #0xff
    3ad0:	cmp	w0, #0x9
    3ad4:	b.eq	3af4 <XS_mro__nextcan+0x4fc>  // b.none
    3ad8:	ldr	w0, [sp, #52]
    3adc:	sub	w0, w0, #0x1
    3ae0:	mov	w1, w0
    3ae4:	ldr	x0, [sp, #88]
    3ae8:	bl	2770 <__dopoptosub_at>
    3aec:	str	w0, [sp, #52]
    3af0:	b	3c04 <XS_mro__nextcan+0x60c>
    3af4:	ldr	x0, [sp, #40]
    3af8:	bl	17a0 <Perl_sv_newmortal@plt>
    3afc:	str	x0, [sp, #136]
    3b00:	mov	w4, #0x1                   	// #1
    3b04:	mov	x3, #0x0                   	// #0
    3b08:	ldr	x2, [sp, #360]
    3b0c:	ldr	x1, [sp, #136]
    3b10:	ldr	x0, [sp, #40]
    3b14:	bl	1630 <Perl_gv_efullname4@plt>
    3b18:	ldr	x0, [sp, #136]
    3b1c:	ldr	w0, [x0, #12]
    3b20:	and	w0, w0, #0x400
    3b24:	cmp	w0, #0x0
    3b28:	b.eq	3b78 <XS_mro__nextcan+0x580>  // b.none
    3b2c:	ldr	x0, [sp, #136]
    3b30:	ldr	x0, [x0, #16]
    3b34:	str	x0, [sp, #112]
    3b38:	ldr	x0, [sp, #136]
    3b3c:	ldr	x0, [x0]
    3b40:	ldr	x0, [x0, #16]
    3b44:	str	x0, [sp, #160]
    3b48:	ldr	x0, [sp, #136]
    3b4c:	ldr	w0, [x0, #12]
    3b50:	lsr	w0, w0, #29
    3b54:	and	w0, w0, #0x1
    3b58:	cmp	w0, #0x0
    3b5c:	cset	w0, ne  // ne = any
    3b60:	strb	w0, [sp, #51]
    3b64:	mov	w1, #0x3a                  	// #58
    3b68:	ldr	x0, [sp, #112]
    3b6c:	bl	1560 <strrchr@plt>
    3b70:	str	x0, [sp, #120]
    3b74:	b	3b7c <XS_mro__nextcan+0x584>
    3b78:	str	xzr, [sp, #120]
    3b7c:	ldr	x0, [sp, #120]
    3b80:	cmp	x0, #0x0
    3b84:	b.ne	3b98 <XS_mro__nextcan+0x5a0>  // b.any
    3b88:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    3b8c:	add	x1, x0, #0x8a0
    3b90:	ldr	x0, [sp, #40]
    3b94:	bl	15b0 <Perl_croak@plt>
    3b98:	ldr	x0, [sp, #120]
    3b9c:	add	x0, x0, #0x1
    3ba0:	str	x0, [sp, #120]
    3ba4:	ldr	x1, [sp, #120]
    3ba8:	ldr	x0, [sp, #112]
    3bac:	sub	x0, x1, x0
    3bb0:	mov	x1, x0
    3bb4:	ldr	x0, [sp, #160]
    3bb8:	sub	x0, x0, x1
    3bbc:	str	x0, [sp, #128]
    3bc0:	ldr	x0, [sp, #128]
    3bc4:	cmp	x0, #0x8
    3bc8:	b.ne	3c08 <XS_mro__nextcan+0x610>  // b.any
    3bcc:	mov	x2, #0x8                   	// #8
    3bd0:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    3bd4:	add	x1, x0, #0x8e8
    3bd8:	ldr	x0, [sp, #120]
    3bdc:	bl	15f0 <memcmp@plt>
    3be0:	cmp	w0, #0x0
    3be4:	b.ne	3c08 <XS_mro__nextcan+0x610>  // b.any
    3be8:	ldr	w0, [sp, #52]
    3bec:	sub	w0, w0, #0x1
    3bf0:	mov	w1, w0
    3bf4:	ldr	x0, [sp, #88]
    3bf8:	bl	2770 <__dopoptosub_at>
    3bfc:	str	w0, [sp, #52]
    3c00:	nop
    3c04:	b	38bc <XS_mro__nextcan+0x2c4>
    3c08:	nop
    3c0c:	ldr	w0, [sp, #52]
    3c10:	sub	w0, w0, #0x1
    3c14:	str	w0, [sp, #52]
    3c18:	ldr	w0, [sp, #60]
    3c1c:	add	w0, w0, #0x1
    3c20:	str	w0, [sp, #60]
    3c24:	ldr	w0, [sp, #60]
    3c28:	cmp	w0, #0x1
    3c2c:	b.le	38ac <XS_mro__nextcan+0x2b4>
    3c30:	ldr	x0, [sp, #104]
    3c34:	ldr	x1, [x0, #16]
    3c38:	ldr	x0, [sp, #104]
    3c3c:	ldr	x0, [x0]
    3c40:	ldr	x0, [x0, #24]
    3c44:	add	x0, x0, #0x1
    3c48:	lsl	x0, x0, #3
    3c4c:	add	x0, x1, x0
    3c50:	ldr	x0, [x0, #32]
    3c54:	cmp	x0, #0x0
    3c58:	b.eq	3c84 <XS_mro__nextcan+0x68c>  // b.none
    3c5c:	ldr	x0, [sp, #104]
    3c60:	ldr	x1, [x0, #16]
    3c64:	ldr	x0, [sp, #104]
    3c68:	ldr	x0, [x0]
    3c6c:	ldr	x0, [x0, #24]
    3c70:	add	x0, x0, #0x1
    3c74:	lsl	x0, x0, #3
    3c78:	add	x0, x1, x0
    3c7c:	ldr	x0, [x0, #32]
    3c80:	b	3c90 <XS_mro__nextcan+0x698>
    3c84:	ldr	x1, [sp, #104]
    3c88:	ldr	x0, [sp, #40]
    3c8c:	bl	1750 <Perl_mro_meta_init@plt>
    3c90:	str	x0, [sp, #192]
    3c94:	ldr	x0, [sp, #192]
    3c98:	ldr	x0, [x0, #16]
    3c9c:	str	x0, [sp, #152]
    3ca0:	ldr	x0, [sp, #152]
    3ca4:	cmp	x0, #0x0
    3ca8:	b.ne	3cd8 <XS_mro__nextcan+0x6e0>  // b.any
    3cac:	mov	w1, #0xc                   	// #12
    3cb0:	ldr	x0, [sp, #40]
    3cb4:	bl	1700 <Perl_newSV_type@plt>
    3cb8:	str	x0, [sp, #232]
    3cbc:	ldr	x1, [sp, #232]
    3cc0:	ldr	x0, [sp, #192]
    3cc4:	str	x1, [x0, #16]
    3cc8:	ldr	x0, [sp, #192]
    3ccc:	ldr	x0, [x0, #16]
    3cd0:	str	x0, [sp, #152]
    3cd4:	b	3f18 <XS_mro__nextcan+0x920>
    3cd8:	str	wzr, [sp]
    3cdc:	mov	x7, #0x0                   	// #0
    3ce0:	mov	w6, #0x0                   	// #0
    3ce4:	mov	w5, #0x0                   	// #0
    3ce8:	mov	x4, #0x0                   	// #0
    3cec:	mov	x3, #0x0                   	// #0
    3cf0:	ldr	x2, [sp, #136]
    3cf4:	ldr	x1, [sp, #152]
    3cf8:	ldr	x0, [sp, #40]
    3cfc:	bl	1690 <Perl_hv_common@plt>
    3d00:	str	x0, [sp, #200]
    3d04:	ldr	x0, [sp, #200]
    3d08:	cmp	x0, #0x0
    3d0c:	b.eq	3f18 <XS_mro__nextcan+0x920>  // b.none
    3d10:	ldr	x0, [sp, #200]
    3d14:	ldr	x0, [x0, #16]
    3d18:	str	x0, [sp, #208]
    3d1c:	ldr	x0, [sp, #40]
    3d20:	add	x0, x0, #0x150
    3d24:	ldr	x1, [sp, #208]
    3d28:	cmp	x1, x0
    3d2c:	b.ne	3e74 <XS_mro__nextcan+0x87c>  // b.any
    3d30:	ldr	w0, [sp, #72]
    3d34:	cmp	w0, #0x0
    3d38:	b.eq	3e44 <XS_mro__nextcan+0x84c>  // b.none
    3d3c:	ldrb	w0, [sp, #51]
    3d40:	cmp	w0, #0x0
    3d44:	b.eq	3d50 <XS_mro__nextcan+0x758>  // b.none
    3d48:	mov	w0, #0x20080000            	// #537395200
    3d4c:	b	3d54 <XS_mro__nextcan+0x75c>
    3d50:	mov	w0, #0x80000               	// #524288
    3d54:	mov	w3, w0
    3d58:	ldr	x2, [sp, #128]
    3d5c:	ldr	x1, [sp, #120]
    3d60:	ldr	x0, [sp, #40]
    3d64:	bl	1590 <Perl_newSVpvn_flags@plt>
    3d68:	mov	x2, x0
    3d6c:	ldr	x0, [sp, #104]
    3d70:	ldr	w0, [x0, #12]
    3d74:	and	w0, w0, #0x2000000
    3d78:	cmp	w0, #0x0
    3d7c:	b.eq	3e2c <XS_mro__nextcan+0x834>  // b.none
    3d80:	ldr	x0, [sp, #104]
    3d84:	ldr	x1, [x0, #16]
    3d88:	ldr	x0, [sp, #104]
    3d8c:	ldr	x0, [x0]
    3d90:	ldr	x0, [x0, #24]
    3d94:	add	x0, x0, #0x1
    3d98:	lsl	x0, x0, #3
    3d9c:	add	x0, x1, x0
    3da0:	ldr	x0, [x0]
    3da4:	cmp	x0, #0x0
    3da8:	b.eq	3e2c <XS_mro__nextcan+0x834>  // b.none
    3dac:	ldr	x0, [sp, #104]
    3db0:	ldr	x1, [x0, #16]
    3db4:	ldr	x0, [sp, #104]
    3db8:	ldr	x0, [x0]
    3dbc:	ldr	x0, [x0, #24]
    3dc0:	add	x0, x0, #0x1
    3dc4:	lsl	x0, x0, #3
    3dc8:	add	x0, x1, x0
    3dcc:	ldr	w0, [x0, #28]
    3dd0:	cmp	w0, #0x0
    3dd4:	b.eq	3e04 <XS_mro__nextcan+0x80c>  // b.none
    3dd8:	ldr	x0, [sp, #104]
    3ddc:	ldr	x1, [x0, #16]
    3de0:	ldr	x0, [sp, #104]
    3de4:	ldr	x0, [x0]
    3de8:	ldr	x0, [x0, #24]
    3dec:	add	x0, x0, #0x1
    3df0:	lsl	x0, x0, #3
    3df4:	add	x0, x1, x0
    3df8:	ldr	x0, [x0]
    3dfc:	ldr	x0, [x0]
    3e00:	b	3e30 <XS_mro__nextcan+0x838>
    3e04:	ldr	x0, [sp, #104]
    3e08:	ldr	x1, [x0, #16]
    3e0c:	ldr	x0, [sp, #104]
    3e10:	ldr	x0, [x0]
    3e14:	ldr	x0, [x0, #24]
    3e18:	add	x0, x0, #0x1
    3e1c:	lsl	x0, x0, #3
    3e20:	add	x0, x1, x0
    3e24:	ldr	x0, [x0]
    3e28:	b	3e30 <XS_mro__nextcan+0x838>
    3e2c:	mov	x0, #0x0                   	// #0
    3e30:	mov	x3, x0
    3e34:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    3e38:	add	x1, x0, #0x8f8
    3e3c:	ldr	x0, [sp, #40]
    3e40:	bl	15b0 <Perl_croak@plt>
    3e44:	str	xzr, [sp, #224]
    3e48:	ldr	x0, [sp, #40]
    3e4c:	ldr	x1, [x0, #24]
    3e50:	ldrsw	x2, [sp, #64]
    3e54:	ldr	x0, [sp, #224]
    3e58:	add	x0, x2, x0
    3e5c:	lsl	x0, x0, #3
    3e60:	sub	x0, x0, #0x8
    3e64:	add	x1, x1, x0
    3e68:	ldr	x0, [sp, #40]
    3e6c:	str	x1, [x0]
    3e70:	b	4498 <XS_mro__nextcan+0xea0>
    3e74:	ldr	x0, [sp, #40]
    3e78:	ldr	x1, [x0, #32]
    3e7c:	ldr	x0, [sp, #80]
    3e80:	sub	x0, x1, x0
    3e84:	cmp	x0, #0x0
    3e88:	cset	w0, le
    3e8c:	and	w0, w0, #0xff
    3e90:	and	x0, x0, #0xff
    3e94:	cmp	x0, #0x0
    3e98:	b.eq	3eb4 <XS_mro__nextcan+0x8bc>  // b.none
    3e9c:	mov	x3, #0x1                   	// #1
    3ea0:	ldr	x2, [sp, #80]
    3ea4:	ldr	x1, [sp, #80]
    3ea8:	ldr	x0, [sp, #40]
    3eac:	bl	1490 <Perl_stack_grow@plt>
    3eb0:	str	x0, [sp, #80]
    3eb4:	ldr	x1, [sp, #208]
    3eb8:	ldr	x0, [sp, #40]
    3ebc:	bl	16f0 <Perl_newRV@plt>
    3ec0:	mov	x1, x0
    3ec4:	ldr	x0, [sp, #80]
    3ec8:	add	x0, x0, #0x8
    3ecc:	str	x0, [sp, #80]
    3ed0:	ldr	x0, [sp, #40]
    3ed4:	bl	1680 <Perl_sv_2mortal@plt>
    3ed8:	mov	x1, x0
    3edc:	ldr	x0, [sp, #80]
    3ee0:	str	x1, [x0]
    3ee4:	mov	x0, #0x1                   	// #1
    3ee8:	str	x0, [sp, #216]
    3eec:	ldr	x0, [sp, #40]
    3ef0:	ldr	x1, [x0, #24]
    3ef4:	ldrsw	x2, [sp, #64]
    3ef8:	ldr	x0, [sp, #216]
    3efc:	add	x0, x2, x0
    3f00:	lsl	x0, x0, #3
    3f04:	sub	x0, x0, #0x8
    3f08:	add	x1, x1, x0
    3f0c:	ldr	x0, [sp, #40]
    3f10:	str	x1, [x0]
    3f14:	b	4498 <XS_mro__nextcan+0xea0>
    3f18:	ldr	x1, [sp, #120]
    3f1c:	ldr	x0, [sp, #112]
    3f20:	sub	x0, x1, x0
    3f24:	sub	x0, x0, #0x2
    3f28:	str	x0, [sp, #240]
    3f2c:	ldrb	w0, [sp, #51]
    3f30:	cmp	w0, #0x0
    3f34:	b.eq	3f40 <XS_mro__nextcan+0x948>  // b.none
    3f38:	mov	w0, #0x20080000            	// #537395200
    3f3c:	b	3f44 <XS_mro__nextcan+0x94c>
    3f40:	mov	w0, #0x80000               	// #524288
    3f44:	mov	w3, w0
    3f48:	ldr	x2, [sp, #240]
    3f4c:	ldr	x1, [sp, #112]
    3f50:	ldr	x0, [sp, #40]
    3f54:	bl	1590 <Perl_newSVpvn_flags@plt>
    3f58:	str	x0, [sp, #248]
    3f5c:	mov	w2, #0x0                   	// #0
    3f60:	ldr	x1, [sp, #104]
    3f64:	ldr	x0, [sp, #40]
    3f68:	bl	1b10 <S_mro_get_linear_isa_c3>
    3f6c:	str	x0, [sp, #256]
    3f70:	ldr	x0, [sp, #256]
    3f74:	ldr	x0, [x0, #16]
    3f78:	str	x0, [sp, #144]
    3f7c:	ldr	x0, [sp, #256]
    3f80:	ldr	x0, [x0]
    3f84:	ldr	x0, [x0, #16]
    3f88:	add	w0, w0, #0x1
    3f8c:	str	w0, [sp, #56]
    3f90:	b	3fc4 <XS_mro__nextcan+0x9cc>
    3f94:	ldr	x0, [sp, #144]
    3f98:	add	x1, x0, #0x8
    3f9c:	str	x1, [sp, #144]
    3fa0:	ldr	x0, [x0]
    3fa4:	str	x0, [sp, #264]
    3fa8:	mov	w3, #0x2                   	// #2
    3fac:	ldr	x2, [sp, #248]
    3fb0:	ldr	x1, [sp, #264]
    3fb4:	ldr	x0, [sp, #40]
    3fb8:	bl	15e0 <Perl_sv_eq_flags@plt>
    3fbc:	cmp	w0, #0x0
    3fc0:	b.ne	3fdc <XS_mro__nextcan+0x9e4>  // b.any
    3fc4:	ldr	w0, [sp, #56]
    3fc8:	sub	w1, w0, #0x1
    3fcc:	str	w1, [sp, #56]
    3fd0:	cmp	w0, #0x0
    3fd4:	b.ne	3f94 <XS_mro__nextcan+0x99c>  // b.any
    3fd8:	b	3fe0 <XS_mro__nextcan+0x9e8>
    3fdc:	nop
    3fe0:	ldr	w0, [sp, #56]
    3fe4:	cmp	w0, #0x0
    3fe8:	b.le	4324 <XS_mro__nextcan+0xd2c>
    3fec:	b	4310 <XS_mro__nextcan+0xd18>
    3ff0:	ldr	x0, [sp, #144]
    3ff4:	add	x1, x0, #0x8
    3ff8:	str	x1, [sp, #144]
    3ffc:	ldr	x0, [x0]
    4000:	str	x0, [sp, #272]
    4004:	mov	w2, #0x0                   	// #0
    4008:	ldr	x1, [sp, #272]
    400c:	ldr	x0, [sp, #40]
    4010:	bl	1650 <Perl_gv_stashsv@plt>
    4014:	str	x0, [sp, #280]
    4018:	ldr	x0, [sp, #280]
    401c:	cmp	x0, #0x0
    4020:	b.ne	4120 <XS_mro__nextcan+0xb28>  // b.any
    4024:	mov	w1, #0x1c                  	// #28
    4028:	ldr	x0, [sp, #40]
    402c:	bl	1740 <Perl_ckwarn@plt>
    4030:	and	w0, w0, #0xff
    4034:	cmp	w0, #0x0
    4038:	b.eq	4310 <XS_mro__nextcan+0xd18>  // b.none
    403c:	ldr	x0, [sp, #104]
    4040:	ldr	w0, [x0, #12]
    4044:	and	w0, w0, #0x2000000
    4048:	cmp	w0, #0x0
    404c:	b.eq	40fc <XS_mro__nextcan+0xb04>  // b.none
    4050:	ldr	x0, [sp, #104]
    4054:	ldr	x1, [x0, #16]
    4058:	ldr	x0, [sp, #104]
    405c:	ldr	x0, [x0]
    4060:	ldr	x0, [x0, #24]
    4064:	add	x0, x0, #0x1
    4068:	lsl	x0, x0, #3
    406c:	add	x0, x1, x0
    4070:	ldr	x0, [x0]
    4074:	cmp	x0, #0x0
    4078:	b.eq	40fc <XS_mro__nextcan+0xb04>  // b.none
    407c:	ldr	x0, [sp, #104]
    4080:	ldr	x1, [x0, #16]
    4084:	ldr	x0, [sp, #104]
    4088:	ldr	x0, [x0]
    408c:	ldr	x0, [x0, #24]
    4090:	add	x0, x0, #0x1
    4094:	lsl	x0, x0, #3
    4098:	add	x0, x1, x0
    409c:	ldr	w0, [x0, #28]
    40a0:	cmp	w0, #0x0
    40a4:	b.eq	40d4 <XS_mro__nextcan+0xadc>  // b.none
    40a8:	ldr	x0, [sp, #104]
    40ac:	ldr	x1, [x0, #16]
    40b0:	ldr	x0, [sp, #104]
    40b4:	ldr	x0, [x0]
    40b8:	ldr	x0, [x0, #24]
    40bc:	add	x0, x0, #0x1
    40c0:	lsl	x0, x0, #3
    40c4:	add	x0, x1, x0
    40c8:	ldr	x0, [x0]
    40cc:	ldr	x0, [x0]
    40d0:	b	4100 <XS_mro__nextcan+0xb08>
    40d4:	ldr	x0, [sp, #104]
    40d8:	ldr	x1, [x0, #16]
    40dc:	ldr	x0, [sp, #104]
    40e0:	ldr	x0, [x0]
    40e4:	ldr	x0, [x0, #24]
    40e8:	add	x0, x0, #0x1
    40ec:	lsl	x0, x0, #3
    40f0:	add	x0, x1, x0
    40f4:	ldr	x0, [x0]
    40f8:	b	4100 <XS_mro__nextcan+0xb08>
    40fc:	mov	x0, #0x0                   	// #0
    4100:	mov	x4, x0
    4104:	ldr	x3, [sp, #272]
    4108:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    410c:	add	x2, x0, #0x920
    4110:	mov	w1, #0x1c                  	// #28
    4114:	ldr	x0, [sp, #40]
    4118:	bl	14d0 <Perl_warner@plt>
    411c:	b	4310 <XS_mro__nextcan+0xd18>
    4120:	ldrb	w0, [sp, #51]
    4124:	cmp	w0, #0x0
    4128:	b.eq	4138 <XS_mro__nextcan+0xb40>  // b.none
    412c:	ldr	x0, [sp, #128]
    4130:	neg	w0, w0
    4134:	b	413c <XS_mro__nextcan+0xb44>
    4138:	ldr	x0, [sp, #128]
    413c:	mov	w6, #0x0                   	// #0
    4140:	mov	x5, #0x0                   	// #0
    4144:	mov	w4, #0x20                  	// #32
    4148:	mov	w3, w0
    414c:	ldr	x2, [sp, #120]
    4150:	ldr	x1, [sp, #280]
    4154:	ldr	x0, [sp, #40]
    4158:	bl	16e0 <Perl_hv_common_key_len@plt>
    415c:	str	x0, [sp, #288]
    4160:	ldr	x0, [sp, #288]
    4164:	cmp	x0, #0x0
    4168:	b.ne	4170 <XS_mro__nextcan+0xb78>  // b.any
    416c:	b	4310 <XS_mro__nextcan+0xd18>
    4170:	ldr	x0, [sp, #288]
    4174:	ldr	x0, [x0]
    4178:	str	x0, [sp, #296]
    417c:	ldr	x0, [sp, #296]
    4180:	ldr	w0, [x0, #12]
    4184:	and	w0, w0, #0xff
    4188:	cmp	w0, #0x9
    418c:	b.eq	41c8 <XS_mro__nextcan+0xbd0>  // b.none
    4190:	ldrb	w0, [sp, #51]
    4194:	cmp	w0, #0x0
    4198:	b.eq	41a8 <XS_mro__nextcan+0xbb0>  // b.none
    419c:	mov	w0, #0x2                   	// #2
    41a0:	movk	w0, #0x2000, lsl #16
    41a4:	b	41ac <XS_mro__nextcan+0xbb4>
    41a8:	mov	w0, #0x2                   	// #2
    41ac:	mov	w5, w0
    41b0:	ldr	x4, [sp, #128]
    41b4:	ldr	x3, [sp, #120]
    41b8:	ldr	x2, [sp, #280]
    41bc:	ldr	x1, [sp, #296]
    41c0:	ldr	x0, [sp, #40]
    41c4:	bl	1790 <Perl_gv_init_pvn@plt>
    41c8:	ldr	x0, [sp, #296]
    41cc:	ldr	w0, [x0, #12]
    41d0:	and	w0, w0, #0xff
    41d4:	cmp	w0, #0x9
    41d8:	b.ne	4310 <XS_mro__nextcan+0xd18>  // b.any
    41dc:	ldr	x0, [sp, #296]
    41e0:	ldr	x0, [x0, #16]
    41e4:	ldr	x0, [x0, #16]
    41e8:	str	x0, [sp, #304]
    41ec:	ldr	x0, [sp, #304]
    41f0:	cmp	x0, #0x0
    41f4:	b.eq	4310 <XS_mro__nextcan+0xd18>  // b.none
    41f8:	ldr	x0, [sp, #296]
    41fc:	ldr	x0, [x0, #16]
    4200:	ldr	w0, [x0, #24]
    4204:	cmp	w0, #0x0
    4208:	b.ne	4310 <XS_mro__nextcan+0xd18>  // b.any
    420c:	ldr	x0, [sp, #304]
    4210:	str	x0, [sp, #312]
    4214:	ldr	x0, [sp, #312]
    4218:	str	x0, [sp, #320]
    421c:	ldr	x0, [sp, #320]
    4220:	ldr	w1, [x0, #8]
    4224:	add	w1, w1, #0x1
    4228:	str	w1, [x0, #8]
    422c:	ldr	x0, [sp, #304]
    4230:	str	x0, [sp, #328]
    4234:	ldr	x0, [sp, #328]
    4238:	str	wzr, [sp]
    423c:	mov	x7, x0
    4240:	mov	w6, #0x4                   	// #4
    4244:	mov	w5, #0x0                   	// #0
    4248:	mov	x4, #0x0                   	// #0
    424c:	mov	x3, #0x0                   	// #0
    4250:	ldr	x2, [sp, #136]
    4254:	ldr	x1, [sp, #152]
    4258:	ldr	x0, [sp, #40]
    425c:	bl	1690 <Perl_hv_common@plt>
    4260:	ldr	x0, [sp, #40]
    4264:	ldr	x1, [x0, #32]
    4268:	ldr	x0, [sp, #80]
    426c:	sub	x0, x1, x0
    4270:	cmp	x0, #0x0
    4274:	cset	w0, le
    4278:	and	w0, w0, #0xff
    427c:	and	x0, x0, #0xff
    4280:	cmp	x0, #0x0
    4284:	b.eq	42a0 <XS_mro__nextcan+0xca8>  // b.none
    4288:	mov	x3, #0x1                   	// #1
    428c:	ldr	x2, [sp, #80]
    4290:	ldr	x1, [sp, #80]
    4294:	ldr	x0, [sp, #40]
    4298:	bl	1490 <Perl_stack_grow@plt>
    429c:	str	x0, [sp, #80]
    42a0:	ldr	x0, [sp, #304]
    42a4:	str	x0, [sp, #336]
    42a8:	ldr	x0, [sp, #336]
    42ac:	mov	x1, x0
    42b0:	ldr	x0, [sp, #40]
    42b4:	bl	16f0 <Perl_newRV@plt>
    42b8:	mov	x1, x0
    42bc:	ldr	x0, [sp, #80]
    42c0:	add	x0, x0, #0x8
    42c4:	str	x0, [sp, #80]
    42c8:	ldr	x0, [sp, #40]
    42cc:	bl	1680 <Perl_sv_2mortal@plt>
    42d0:	mov	x1, x0
    42d4:	ldr	x0, [sp, #80]
    42d8:	str	x1, [x0]
    42dc:	mov	x0, #0x1                   	// #1
    42e0:	str	x0, [sp, #344]
    42e4:	ldr	x0, [sp, #40]
    42e8:	ldr	x1, [x0, #24]
    42ec:	ldrsw	x2, [sp, #64]
    42f0:	ldr	x0, [sp, #344]
    42f4:	add	x0, x2, x0
    42f8:	lsl	x0, x0, #3
    42fc:	sub	x0, x0, #0x8
    4300:	add	x1, x1, x0
    4304:	ldr	x0, [sp, #40]
    4308:	str	x1, [x0]
    430c:	b	4498 <XS_mro__nextcan+0xea0>
    4310:	ldr	w0, [sp, #56]
    4314:	sub	w1, w0, #0x1
    4318:	str	w1, [sp, #56]
    431c:	cmp	w0, #0x0
    4320:	b.ne	3ff0 <XS_mro__nextcan+0x9f8>  // b.any
    4324:	ldr	x0, [sp, #40]
    4328:	add	x0, x0, #0x150
    432c:	str	wzr, [sp]
    4330:	mov	x7, x0
    4334:	mov	w6, #0x4                   	// #4
    4338:	mov	w5, #0x0                   	// #0
    433c:	mov	x4, #0x0                   	// #0
    4340:	mov	x3, #0x0                   	// #0
    4344:	ldr	x2, [sp, #136]
    4348:	ldr	x1, [sp, #152]
    434c:	ldr	x0, [sp, #40]
    4350:	bl	1690 <Perl_hv_common@plt>
    4354:	ldr	w0, [sp, #72]
    4358:	cmp	w0, #0x0
    435c:	b.eq	4468 <XS_mro__nextcan+0xe70>  // b.none
    4360:	ldrb	w0, [sp, #51]
    4364:	cmp	w0, #0x0
    4368:	b.eq	4374 <XS_mro__nextcan+0xd7c>  // b.none
    436c:	mov	w0, #0x20080000            	// #537395200
    4370:	b	4378 <XS_mro__nextcan+0xd80>
    4374:	mov	w0, #0x80000               	// #524288
    4378:	mov	w3, w0
    437c:	ldr	x2, [sp, #128]
    4380:	ldr	x1, [sp, #120]
    4384:	ldr	x0, [sp, #40]
    4388:	bl	1590 <Perl_newSVpvn_flags@plt>
    438c:	mov	x2, x0
    4390:	ldr	x0, [sp, #104]
    4394:	ldr	w0, [x0, #12]
    4398:	and	w0, w0, #0x2000000
    439c:	cmp	w0, #0x0
    43a0:	b.eq	4450 <XS_mro__nextcan+0xe58>  // b.none
    43a4:	ldr	x0, [sp, #104]
    43a8:	ldr	x1, [x0, #16]
    43ac:	ldr	x0, [sp, #104]
    43b0:	ldr	x0, [x0]
    43b4:	ldr	x0, [x0, #24]
    43b8:	add	x0, x0, #0x1
    43bc:	lsl	x0, x0, #3
    43c0:	add	x0, x1, x0
    43c4:	ldr	x0, [x0]
    43c8:	cmp	x0, #0x0
    43cc:	b.eq	4450 <XS_mro__nextcan+0xe58>  // b.none
    43d0:	ldr	x0, [sp, #104]
    43d4:	ldr	x1, [x0, #16]
    43d8:	ldr	x0, [sp, #104]
    43dc:	ldr	x0, [x0]
    43e0:	ldr	x0, [x0, #24]
    43e4:	add	x0, x0, #0x1
    43e8:	lsl	x0, x0, #3
    43ec:	add	x0, x1, x0
    43f0:	ldr	w0, [x0, #28]
    43f4:	cmp	w0, #0x0
    43f8:	b.eq	4428 <XS_mro__nextcan+0xe30>  // b.none
    43fc:	ldr	x0, [sp, #104]
    4400:	ldr	x1, [x0, #16]
    4404:	ldr	x0, [sp, #104]
    4408:	ldr	x0, [x0]
    440c:	ldr	x0, [x0, #24]
    4410:	add	x0, x0, #0x1
    4414:	lsl	x0, x0, #3
    4418:	add	x0, x1, x0
    441c:	ldr	x0, [x0]
    4420:	ldr	x0, [x0]
    4424:	b	4454 <XS_mro__nextcan+0xe5c>
    4428:	ldr	x0, [sp, #104]
    442c:	ldr	x1, [x0, #16]
    4430:	ldr	x0, [sp, #104]
    4434:	ldr	x0, [x0]
    4438:	ldr	x0, [x0, #24]
    443c:	add	x0, x0, #0x1
    4440:	lsl	x0, x0, #3
    4444:	add	x0, x1, x0
    4448:	ldr	x0, [x0]
    444c:	b	4454 <XS_mro__nextcan+0xe5c>
    4450:	mov	x0, #0x0                   	// #0
    4454:	mov	x3, x0
    4458:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    445c:	add	x1, x0, #0x8f8
    4460:	ldr	x0, [sp, #40]
    4464:	bl	15b0 <Perl_croak@plt>
    4468:	str	xzr, [sp, #352]
    446c:	ldr	x0, [sp, #40]
    4470:	ldr	x1, [x0, #24]
    4474:	ldrsw	x2, [sp, #64]
    4478:	ldr	x0, [sp, #352]
    447c:	add	x0, x2, x0
    4480:	lsl	x0, x0, #3
    4484:	sub	x0, x0, #0x8
    4488:	add	x1, x1, x0
    448c:	ldr	x0, [sp, #40]
    4490:	str	x1, [x0]
    4494:	nop
    4498:	ldp	x29, x30, [sp, #16]
    449c:	add	sp, sp, #0x170
    44a0:	ret

00000000000044a4 <boot_mro>:
    44a4:	stp	x29, x30, [sp, #-64]!
    44a8:	mov	x29, sp
    44ac:	str	x0, [sp, #24]
    44b0:	str	x1, [sp, #16]
    44b4:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    44b8:	add	x4, x0, #0x948
    44bc:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    44c0:	add	x3, x0, #0x950
    44c4:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    44c8:	add	x2, x0, #0x958
    44cc:	ldr	x1, [sp, #24]
    44d0:	mov	w0, #0x4e7                 	// #1255
    44d4:	movk	w0, #0xd30, lsl #16
    44d8:	bl	16b0 <Perl_xs_handshake@plt>
    44dc:	str	w0, [sp, #32]
    44e0:	ldr	x0, [sp, #24]
    44e4:	ldr	x1, [x0, #24]
    44e8:	ldrsw	x0, [sp, #32]
    44ec:	lsl	x0, x0, #3
    44f0:	add	x0, x1, x0
    44f4:	str	x0, [sp, #40]
    44f8:	ldr	x0, [sp, #24]
    44fc:	ldr	x0, [x0]
    4500:	str	x0, [sp, #48]
    4504:	ldr	x1, [sp, #48]
    4508:	ldr	x0, [sp, #40]
    450c:	sub	x0, x1, x0
    4510:	asr	x0, x0, #3
    4514:	str	w0, [sp, #36]
    4518:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    451c:	add	x0, x0, #0x958
    4520:	str	x0, [sp, #56]
    4524:	mov	w5, #0x0                   	// #0
    4528:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    452c:	add	x4, x0, #0x960
    4530:	ldr	x3, [sp, #56]
    4534:	adrp	x0, 2000 <S_mro_get_linear_isa_c3+0x4f0>
    4538:	add	x2, x0, #0x7e4
    453c:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    4540:	add	x1, x0, #0x968
    4544:	ldr	x0, [sp, #24]
    4548:	bl	1670 <Perl_newXS_flags@plt>
    454c:	mov	w5, #0x0                   	// #0
    4550:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    4554:	add	x4, x0, #0x980
    4558:	ldr	x3, [sp, #56]
    455c:	adrp	x0, 2000 <S_mro_get_linear_isa_c3+0x4f0>
    4560:	add	x2, x0, #0xaa8
    4564:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    4568:	add	x1, x0, #0x988
    456c:	ldr	x0, [sp, #24]
    4570:	bl	1670 <Perl_newXS_flags@plt>
    4574:	mov	w5, #0x0                   	// #0
    4578:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    457c:	add	x4, x0, #0x998
    4580:	ldr	x3, [sp, #56]
    4584:	adrp	x0, 2000 <S_mro_get_linear_isa_c3+0x4f0>
    4588:	add	x2, x0, #0xc54
    458c:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    4590:	add	x1, x0, #0x9a0
    4594:	ldr	x0, [sp, #24]
    4598:	bl	1670 <Perl_newXS_flags@plt>
    459c:	mov	w5, #0x0                   	// #0
    45a0:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    45a4:	add	x4, x0, #0x998
    45a8:	ldr	x3, [sp, #56]
    45ac:	adrp	x0, 2000 <S_mro_get_linear_isa_c3+0x4f0>
    45b0:	add	x2, x0, #0xe54
    45b4:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    45b8:	add	x1, x0, #0x9b0
    45bc:	ldr	x0, [sp, #24]
    45c0:	bl	1670 <Perl_newXS_flags@plt>
    45c4:	mov	w5, #0x0                   	// #0
    45c8:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    45cc:	add	x4, x0, #0x998
    45d0:	ldr	x3, [sp, #56]
    45d4:	adrp	x0, 3000 <XS_mro_get_isarev+0x1ac>
    45d8:	add	x2, x0, #0x88
    45dc:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    45e0:	add	x1, x0, #0x9c0
    45e4:	ldr	x0, [sp, #24]
    45e8:	bl	1670 <Perl_newXS_flags@plt>
    45ec:	mov	w5, #0x0                   	// #0
    45f0:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    45f4:	add	x4, x0, #0x810
    45f8:	ldr	x3, [sp, #56]
    45fc:	adrp	x0, 3000 <XS_mro_get_isarev+0x1ac>
    4600:	add	x2, x0, #0x334
    4604:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    4608:	add	x1, x0, #0x9d8
    460c:	ldr	x0, [sp, #24]
    4610:	bl	1670 <Perl_newXS_flags@plt>
    4614:	mov	w5, #0x0                   	// #0
    4618:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    461c:	add	x4, x0, #0x998
    4620:	ldr	x3, [sp, #56]
    4624:	adrp	x0, 3000 <XS_mro_get_isarev+0x1ac>
    4628:	add	x2, x0, #0x414
    462c:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    4630:	add	x1, x0, #0xa00
    4634:	ldr	x0, [sp, #24]
    4638:	bl	1670 <Perl_newXS_flags@plt>
    463c:	adrp	x0, 3000 <XS_mro_get_isarev+0x1ac>
    4640:	add	x2, x0, #0x5f8
    4644:	adrp	x0, 4000 <XS_mro__nextcan+0xa08>
    4648:	add	x1, x0, #0xa18
    464c:	ldr	x0, [sp, #24]
    4650:	bl	1640 <Perl_newXS_deffile@plt>
    4654:	adrp	x0, 14000 <__FRAME_END__+0xf270>
    4658:	add	x1, x0, #0xdb8
    465c:	ldr	x0, [sp, #24]
    4660:	bl	14e0 <Perl_mro_register@plt>
    4664:	ldr	w1, [sp, #32]
    4668:	ldr	x0, [sp, #24]
    466c:	bl	1510 <Perl_xs_boot_epilog@plt>
    4670:	nop
    4674:	ldp	x29, x30, [sp], #64
    4678:	ret

Disassembly of section .fini:

000000000000467c <_fini>:
    467c:	stp	x29, x30, [sp, #-16]!
    4680:	mov	x29, sp
    4684:	ldp	x29, x30, [sp], #16
    4688:	ret
