
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//revtwoway.so_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000630 <.init>:
 630:	stp	x29, x30, [sp, #-16]!
 634:	mov	x29, sp
 638:	bl	6e0 <fprintf@plt+0x10>
 63c:	ldp	x29, x30, [sp], #16
 640:	ret

Disassembly of section .plt:

0000000000000650 <fputs@plt-0x20>:
 650:	stp	x16, x30, [sp, #-16]!
 654:	adrp	x16, 11000 <dl_load@@Base+0x1042c>
 658:	ldr	x17, [x16, #4088]
 65c:	add	x16, x16, #0xff8
 660:	br	x17
 664:	nop
 668:	nop
 66c:	nop

0000000000000670 <fputs@plt>:
 670:	adrp	x16, 12000 <fputs@GLIBC_2.17>
 674:	ldr	x17, [x16]
 678:	add	x16, x16, #0x0
 67c:	br	x17

0000000000000680 <exit@plt>:
 680:	adrp	x16, 12000 <fputs@GLIBC_2.17>
 684:	ldr	x17, [x16, #8]
 688:	add	x16, x16, #0x8
 68c:	br	x17

0000000000000690 <__cxa_finalize@plt>:
 690:	adrp	x16, 12000 <fputs@GLIBC_2.17>
 694:	ldr	x17, [x16, #16]
 698:	add	x16, x16, #0x10
 69c:	br	x17

00000000000006a0 <__gmon_start__@plt>:
 6a0:	adrp	x16, 12000 <fputs@GLIBC_2.17>
 6a4:	ldr	x17, [x16, #24]
 6a8:	add	x16, x16, #0x18
 6ac:	br	x17

00000000000006b0 <strcmp@plt>:
 6b0:	adrp	x16, 12000 <fputs@GLIBC_2.17>
 6b4:	ldr	x17, [x16, #32]
 6b8:	add	x16, x16, #0x20
 6bc:	br	x17

00000000000006c0 <getdtablesize@plt>:
 6c0:	adrp	x16, 12000 <fputs@GLIBC_2.17>
 6c4:	ldr	x17, [x16, #40]
 6c8:	add	x16, x16, #0x28
 6cc:	br	x17

00000000000006d0 <fprintf@plt>:
 6d0:	adrp	x16, 12000 <fputs@GLIBC_2.17>
 6d4:	ldr	x17, [x16, #48]
 6d8:	add	x16, x16, #0x30
 6dc:	br	x17

Disassembly of section .text:

00000000000006e0 <dl_load@@Base-0x4f4>:
 6e0:	adrp	x0, 11000 <dl_load@@Base+0x1042c>
 6e4:	ldr	x0, [x0, #4056]
 6e8:	cbz	x0, 6f0 <fprintf@plt+0x20>
 6ec:	b	6a0 <__gmon_start__@plt>
 6f0:	ret
 6f4:	adrp	x0, 12000 <dl_load@@Base+0x1142c>
 6f8:	add	x0, x0, #0x60
 6fc:	adrp	x1, 12000 <dl_load@@Base+0x1142c>
 700:	add	x1, x1, #0x60
 704:	cmp	x1, x0
 708:	b.eq	720 <fprintf@plt+0x50>  // b.none
 70c:	adrp	x1, 11000 <dl_load@@Base+0x1042c>
 710:	ldr	x1, [x1, #4032]
 714:	cbz	x1, 720 <fprintf@plt+0x50>
 718:	mov	x16, x1
 71c:	br	x16
 720:	ret
 724:	adrp	x0, 12000 <dl_load@@Base+0x1142c>
 728:	add	x0, x0, #0x60
 72c:	adrp	x1, 12000 <dl_load@@Base+0x1142c>
 730:	add	x1, x1, #0x60
 734:	sub	x1, x1, x0
 738:	mov	x2, #0x2                   	// #2
 73c:	asr	x1, x1, #3
 740:	sdiv	x1, x1, x2
 744:	cbz	x1, 75c <fprintf@plt+0x8c>
 748:	adrp	x2, 11000 <dl_load@@Base+0x1042c>
 74c:	ldr	x2, [x2, #4064]
 750:	cbz	x2, 75c <fprintf@plt+0x8c>
 754:	mov	x16, x2
 758:	br	x16
 75c:	ret
 760:	adrp	x0, 12000 <dl_load@@Base+0x1142c>
 764:	ldrb	w1, [x0, #96]
 768:	cbnz	w1, 7ac <fprintf@plt+0xdc>
 76c:	stp	x29, x30, [sp, #-32]!
 770:	mov	x29, sp
 774:	str	x19, [sp, #16]
 778:	mov	x19, x0
 77c:	adrp	x0, 11000 <dl_load@@Base+0x1042c>
 780:	ldr	x0, [x0, #4040]
 784:	cbz	x0, 794 <fprintf@plt+0xc4>
 788:	adrp	x0, 12000 <dl_load@@Base+0x1142c>
 78c:	ldr	x0, [x0, #56]
 790:	bl	690 <__cxa_finalize@plt>
 794:	bl	6f4 <fprintf@plt+0x24>
 798:	mov	w0, #0x1                   	// #1
 79c:	strb	w0, [x19, #96]
 7a0:	ldr	x19, [sp, #16]
 7a4:	ldp	x29, x30, [sp], #32
 7a8:	ret
 7ac:	ret
 7b0:	b	724 <fprintf@plt+0x54>
 7b4:	cmp	x0, #0x0
 7b8:	ccmp	x1, #0x0, #0x4, ne  // ne = any
 7bc:	b.eq	82c <fprintf@plt+0x15c>  // b.none
 7c0:	ldr	x5, [x1, #16]
 7c4:	cbz	x5, 82c <fprintf@plt+0x15c>
 7c8:	ldr	x2, [x5, #8]
 7cc:	cbz	x2, 834 <fprintf@plt+0x164>
 7d0:	ldr	x1, [x5, #16]
 7d4:	str	x1, [x0]
 7d8:	mov	w0, w2
 7dc:	str	xzr, [x5, #8]
 7e0:	sxtw	x5, w2
 7e4:	str	xzr, [x4]
 7e8:	add	x2, x1, w2, sxtw
 7ec:	ldurb	w2, [x2, #-1]
 7f0:	cmp	w2, #0xa
 7f4:	b.ne	814 <fprintf@plt+0x144>  // b.any
 7f8:	sub	x2, x5, #0x1
 7fc:	mov	w0, w5
 800:	ldrb	w6, [x1, x2]
 804:	cmp	w6, #0xa
 808:	b.eq	818 <fprintf@plt+0x148>  // b.none
 80c:	add	x1, x1, x5
 810:	str	x1, [x3]
 814:	ret
 818:	ldr	x0, [x4]
 81c:	mov	x5, x2
 820:	add	x0, x0, #0x1
 824:	str	x0, [x4]
 828:	b	7f8 <fprintf@plt+0x128>
 82c:	mov	w0, #0xffffffff            	// #-1
 830:	b	814 <fprintf@plt+0x144>
 834:	mov	w0, #0x0                   	// #0
 838:	b	814 <fprintf@plt+0x144>
 83c:	cbz	x4, 954 <fprintf@plt+0x284>
 840:	stp	x29, x30, [sp, #-64]!
 844:	mov	x29, sp
 848:	stp	x19, x20, [sp, #16]
 84c:	mul	x20, x1, x2
 850:	mov	x19, x4
 854:	ldr	x1, [x4]
 858:	stp	x21, x22, [sp, #32]
 85c:	mov	x21, x0
 860:	str	x23, [sp, #48]
 864:	cmp	x1, x20
 868:	b.cc	874 <fprintf@plt+0x1a4>  // b.lo, b.ul, b.last
 86c:	ldr	x0, [x4, #8]
 870:	cbz	x0, 8cc <fprintf@plt+0x1fc>
 874:	ldr	x0, [x19, #16]
 878:	adrp	x22, 12000 <dl_load@@Base+0x1142c>
 87c:	add	x23, x22, #0x68
 880:	ldr	x2, [x22, #104]
 884:	cbnz	x0, 908 <fprintf@plt+0x238>
 888:	ldr	x1, [x2, #280]
 88c:	mov	x0, x20
 890:	blr	x1
 894:	str	x0, [x19, #16]
 898:	cbnz	x0, 8c0 <fprintf@plt+0x1f0>
 89c:	ldr	x0, [x22, #104]
 8a0:	adrp	x2, 0 <fputs@plt-0x670>
 8a4:	adrp	x1, 0 <fputs@plt-0x670>
 8a8:	mov	x3, x20
 8ac:	add	x2, x2, #0xcfc
 8b0:	add	x1, x1, #0xd0b
 8b4:	ldr	x4, [x0, #96]
 8b8:	ldr	x0, [x23, #8]
 8bc:	blr	x4
 8c0:	ldr	x0, [x19]
 8c4:	add	x0, x0, x20
 8c8:	str	x0, [x19]
 8cc:	sub	x0, x20, #0x1
 8d0:	add	x21, x21, x0
 8d4:	ldp	x0, x1, [x19, #8]
 8d8:	add	x1, x1, x0
 8dc:	mov	x0, #0x0                   	// #0
 8e0:	cmp	x20, x0
 8e4:	b.ne	940 <fprintf@plt+0x270>  // b.any
 8e8:	ldr	x1, [x19, #8]
 8ec:	ldp	x21, x22, [sp, #32]
 8f0:	add	x1, x1, x0
 8f4:	ldr	x23, [sp, #48]
 8f8:	str	x1, [x19, #8]
 8fc:	ldp	x19, x20, [sp, #16]
 900:	ldp	x29, x30, [sp], #64
 904:	ret
 908:	ldr	x2, [x2, #296]
 90c:	add	x1, x1, x20
 910:	blr	x2
 914:	str	x0, [x19, #16]
 918:	cbnz	x0, 8c0 <fprintf@plt+0x1f0>
 91c:	ldr	x0, [x22, #104]
 920:	adrp	x2, 0 <fputs@plt-0x670>
 924:	ldr	x3, [x19]
 928:	adrp	x1, 0 <fputs@plt-0x670>
 92c:	add	x2, x2, #0xcfc
 930:	add	x1, x1, #0xd29
 934:	add	x3, x20, x3
 938:	ldr	x4, [x0, #96]
 93c:	b	8b8 <fprintf@plt+0x1e8>
 940:	neg	x2, x0
 944:	ldrb	w2, [x21, x2]
 948:	strb	w2, [x1, x0]
 94c:	add	x0, x0, #0x1
 950:	b	8e0 <fprintf@plt+0x210>
 954:	mov	x0, #0x0                   	// #0
 958:	ret
 95c:	mov	w0, #0x0                   	// #0
 960:	ret
 964:	stp	x29, x30, [sp, #-32]!
 968:	adrp	x0, 12000 <dl_load@@Base+0x1142c>
 96c:	adrp	x1, 12000 <dl_load@@Base+0x1142c>
 970:	mov	x29, sp
 974:	str	x19, [sp, #16]
 978:	add	x19, x0, #0x68
 97c:	ldr	x0, [x0, #104]
 980:	add	x1, x1, #0x40
 984:	ldr	x2, [x0, #72]
 988:	ldr	x0, [x19, #8]
 98c:	blr	x2
 990:	bl	6c0 <getdtablesize@plt>
 994:	sxtw	x0, w0
 998:	str	x0, [x19, #16]
 99c:	mov	w0, #0x1                   	// #1
 9a0:	ldr	x19, [sp, #16]
 9a4:	ldp	x29, x30, [sp], #32
 9a8:	ret
 9ac:	cbz	x0, 9d4 <fprintf@plt+0x304>
 9b0:	stp	x29, x30, [sp, #-16]!
 9b4:	adrp	x1, 0 <fputs@plt-0x670>
 9b8:	add	x1, x1, #0xd48
 9bc:	mov	x29, sp
 9c0:	bl	6b0 <strcmp@plt>
 9c4:	cmp	w0, #0x0
 9c8:	cset	w0, eq  // eq = none
 9cc:	ldp	x29, x30, [sp], #16
 9d0:	ret
 9d4:	mov	w0, #0x0                   	// #0
 9d8:	ret
 9dc:	stp	x29, x30, [sp, #-32]!
 9e0:	mov	x29, sp
 9e4:	stp	x19, x20, [sp, #16]
 9e8:	adrp	x20, 12000 <dl_load@@Base+0x1142c>
 9ec:	mov	x19, x0
 9f0:	ldr	x0, [x20, #104]
 9f4:	ldr	x1, [x0, #304]
 9f8:	ldr	x0, [x19, #16]
 9fc:	blr	x1
 a00:	ldr	x0, [x20, #104]
 a04:	ldr	x1, [x0, #304]
 a08:	mov	x0, x19
 a0c:	ldp	x19, x20, [sp, #16]
 a10:	mov	x16, x1
 a14:	ldp	x29, x30, [sp], #32
 a18:	br	x16
 a1c:	cbz	x0, a68 <fprintf@plt+0x398>
 a20:	stp	x29, x30, [sp, #-32]!
 a24:	mov	x29, sp
 a28:	str	x19, [sp, #16]
 a2c:	mov	x19, x0
 a30:	ldr	x0, [x0, #16]
 a34:	cbz	x0, a54 <fprintf@plt+0x384>
 a38:	ldr	x1, [x0, #24]
 a3c:	cmp	x1, #0x1
 a40:	b.ls	a60 <fprintf@plt+0x390>  // b.plast
 a44:	sub	x1, x1, #0x1
 a48:	str	x1, [x0, #24]
 a4c:	mov	w0, #0xffffffff            	// #-1
 a50:	str	w0, [x19, #8]
 a54:	ldr	x19, [sp, #16]
 a58:	ldp	x29, x30, [sp], #32
 a5c:	ret
 a60:	bl	9dc <fprintf@plt+0x30c>
 a64:	b	a4c <fprintf@plt+0x37c>
 a68:	ret
 a6c:	cmp	x1, #0x0
 a70:	ccmp	x2, #0x0, #0x4, ne  // ne = any
 a74:	b.eq	b80 <fprintf@plt+0x4b0>  // b.none
 a78:	stp	x29, x30, [sp, #-64]!
 a7c:	mov	x29, sp
 a80:	stp	x19, x20, [sp, #16]
 a84:	adrp	x20, 12000 <dl_load@@Base+0x1142c>
 a88:	mov	x19, x2
 a8c:	ldr	x0, [x20, #104]
 a90:	stp	x21, x22, [sp, #32]
 a94:	mov	x22, x1
 a98:	ldr	x1, [x0, #280]
 a9c:	str	x23, [sp, #48]
 aa0:	mov	x0, #0x20                  	// #32
 aa4:	add	x23, x20, #0x68
 aa8:	blr	x1
 aac:	mov	x21, x0
 ab0:	cbnz	x0, ad8 <fprintf@plt+0x408>
 ab4:	ldr	x0, [x20, #104]
 ab8:	adrp	x2, 0 <fputs@plt-0x670>
 abc:	adrp	x1, 0 <fputs@plt-0x670>
 ac0:	add	x2, x2, #0xd56
 ac4:	add	x1, x1, #0xd0b
 ac8:	mov	x3, #0x20                  	// #32
 acc:	ldr	x4, [x0, #96]
 ad0:	ldr	x0, [x23, #8]
 ad4:	blr	x4
 ad8:	add	x23, x20, #0x68
 adc:	mov	x0, #0x2                   	// #2
 ae0:	stp	xzr, x0, [x21, #16]
 ae4:	ldr	x0, [x23, #16]
 ae8:	stp	xzr, xzr, [x21]
 aec:	cmn	x0, #0x1
 af0:	b.ne	b00 <fprintf@plt+0x430>  // b.any
 af4:	bl	6c0 <getdtablesize@plt>
 af8:	sxtw	x0, w0
 afc:	str	x0, [x23, #16]
 b00:	add	x20, x20, #0x68
 b04:	adrp	x0, 0 <fputs@plt-0x670>
 b08:	add	x0, x0, #0x7b4
 b0c:	ldr	x23, [sp, #48]
 b10:	stp	x21, x0, [x22, #16]
 b14:	adrp	x0, 0 <fputs@plt-0x670>
 b18:	add	x0, x0, #0xa1c
 b1c:	str	x0, [x22, #40]
 b20:	ldr	x0, [x20, #16]
 b24:	str	w0, [x22, #8]
 b28:	str	x0, [x19, #16]
 b2c:	add	x1, x0, #0x1
 b30:	adrp	x0, 0 <fputs@plt-0x670>
 b34:	add	x0, x0, #0x83c
 b38:	str	x21, [x19, #32]
 b3c:	ldp	x21, x22, [sp, #32]
 b40:	str	x0, [x19, #40]
 b44:	adrp	x0, 0 <fputs@plt-0x670>
 b48:	add	x0, x0, #0x95c
 b4c:	str	x0, [x19, #48]
 b50:	adrp	x0, 0 <fputs@plt-0x670>
 b54:	add	x0, x0, #0xb88
 b58:	str	x0, [x19, #56]
 b5c:	adrp	x0, 0 <fputs@plt-0x670>
 b60:	add	x0, x0, #0xb90
 b64:	str	x0, [x19, #64]
 b68:	mov	w0, #0x1                   	// #1
 b6c:	str	w0, [x19, #24]
 b70:	str	x1, [x20, #16]
 b74:	ldp	x19, x20, [sp, #16]
 b78:	ldp	x29, x30, [sp], #64
 b7c:	ret
 b80:	mov	w0, #0x0                   	// #0
 b84:	ret
 b88:	mov	w0, #0x0                   	// #0
 b8c:	ret
 b90:	cbz	x1, bcc <fprintf@plt+0x4fc>
 b94:	mov	x0, x1
 b98:	ldr	x1, [x1, #24]
 b9c:	cmp	x1, #0x1
 ba0:	b.ls	bb4 <fprintf@plt+0x4e4>  // b.plast
 ba4:	sub	x1, x1, #0x1
 ba8:	str	x1, [x0, #24]
 bac:	mov	w0, #0x0                   	// #0
 bb0:	ret
 bb4:	stp	x29, x30, [sp, #-16]!
 bb8:	mov	x29, sp
 bbc:	bl	9dc <fprintf@plt+0x30c>
 bc0:	mov	w0, #0x0                   	// #0
 bc4:	ldp	x29, x30, [sp], #16
 bc8:	ret
 bcc:	mov	w0, #0xffffffff            	// #-1
 bd0:	ret

0000000000000bd4 <dl_load@@Base>:
 bd4:	stp	x29, x30, [sp, #-32]!
 bd8:	mov	x3, x0
 bdc:	mov	x0, x1
 be0:	mov	x29, sp
 be4:	stp	x19, x20, [sp, #16]
 be8:	adrp	x19, 12000 <dl_load@@Base+0x1142c>
 bec:	add	x20, x19, #0x68
 bf0:	str	x3, [x19, #104]
 bf4:	str	x1, [x20, #8]
 bf8:	ldr	w1, [x3]
 bfc:	cmp	w1, #0x2
 c00:	b.ne	c0c <dl_load@@Base+0x38>  // b.any
 c04:	ldr	w1, [x3, #4]
 c08:	tbz	w1, #31, c70 <dl_load@@Base+0x9c>
 c0c:	adrp	x20, 11000 <dl_load@@Base+0x1042c>
 c10:	adrp	x0, 0 <fputs@plt-0x670>
 c14:	add	x0, x0, #0xd70
 c18:	ldr	x20, [x20, #4048]
 c1c:	ldr	x1, [x20]
 c20:	bl	670 <fputs@plt>
 c24:	ldr	x0, [x19, #104]
 c28:	adrp	x1, 0 <fputs@plt-0x670>
 c2c:	add	x1, x1, #0xd98
 c30:	mov	w3, #0x0                   	// #0
 c34:	mov	w2, #0x2                   	// #2
 c38:	ldp	w4, w5, [x0]
 c3c:	ldr	x0, [x20]
 c40:	bl	6d0 <fprintf@plt>
 c44:	mov	w0, #0x1                   	// #1
 c48:	bl	680 <exit@plt>
 c4c:	ldr	x0, [x19, #104]
 c50:	adrp	x1, 0 <fputs@plt-0x670>
 c54:	ldr	x2, [x20, #24]
 c58:	add	x1, x1, #0xdcb
 c5c:	ldr	x3, [x0, #104]
 c60:	ldr	x0, [x20, #8]
 c64:	mov	w20, #0x1                   	// #1
 c68:	blr	x3
 c6c:	b	c94 <dl_load@@Base+0xc0>
 c70:	ldr	x1, [x20, #24]
 c74:	add	x2, x20, #0x18
 c78:	cbz	x1, c90 <dl_load@@Base+0xbc>
 c7c:	ldr	x3, [x3, #48]
 c80:	adrp	x1, 0 <fputs@plt-0x670>
 c84:	add	x1, x1, #0xd97
 c88:	blr	x3
 c8c:	cbz	w0, c4c <dl_load@@Base+0x78>
 c90:	mov	w20, #0x0                   	// #0
 c94:	bl	964 <fprintf@plt+0x294>
 c98:	cbnz	w0, cbc <dl_load@@Base+0xe8>
 c9c:	ldr	x1, [x19, #104]
 ca0:	add	x0, x19, #0x68
 ca4:	add	w20, w20, #0x1
 ca8:	ldr	x0, [x0, #8]
 cac:	ldr	x2, [x1, #104]
 cb0:	adrp	x1, 0 <fputs@plt-0x670>
 cb4:	add	x1, x1, #0xde7
 cb8:	blr	x2
 cbc:	ldr	x1, [x19, #104]
 cc0:	add	x0, x19, #0x68
 cc4:	ldr	x0, [x0, #8]
 cc8:	ldr	x2, [x1, #88]
 ccc:	adrp	x1, 0 <fputs@plt-0x670>
 cd0:	add	x1, x1, #0xe11
 cd4:	blr	x2
 cd8:	cmp	w20, #0x0
 cdc:	cset	w0, eq  // eq = none
 ce0:	ldp	x19, x20, [sp, #16]
 ce4:	ldp	x29, x30, [sp], #32
 ce8:	ret

Disassembly of section .fini:

0000000000000cec <.fini>:
 cec:	stp	x29, x30, [sp, #-16]!
 cf0:	mov	x29, sp
 cf4:	ldp	x29, x30, [sp], #16
 cf8:	ret
