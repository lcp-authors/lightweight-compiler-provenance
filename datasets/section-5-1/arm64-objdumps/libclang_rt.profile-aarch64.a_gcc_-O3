In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libclang_rt.profile-aarch64.a_gcc_-O3:

GCDAProfiling.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <llvm_writeout_files>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	adrp	x0, 10 <llvm_writeout_files+0x10>
       8:	mov	x29, sp
       c:	ldr	x0, [x0]
      10:	stp	x19, x20, [sp, #16]
      14:	ldr	x19, [x0]
      18:	cbz	x19, 3c <llvm_writeout_files+0x3c>
      1c:	adrp	x20, 0 <llvm_writeout_files>
      20:	add	x20, x20, #0x0
      24:	nop
      28:	ldr	x0, [x19]
      2c:	cmp	x0, x20
      30:	b.eq	48 <llvm_writeout_files+0x48>  // b.none
      34:	ldr	x19, [x19, #16]
      38:	cbnz	x19, 28 <llvm_writeout_files+0x28>
      3c:	ldp	x19, x20, [sp, #16]
      40:	ldp	x29, x30, [sp], #32
      44:	ret
      48:	ldr	x0, [x19, #8]
      4c:	blr	x0
      50:	ldr	x19, [x19, #16]
      54:	cbnz	x19, 28 <llvm_writeout_files+0x28>
      58:	ldp	x19, x20, [sp, #16]
      5c:	ldp	x29, x30, [sp], #32
      60:	ret
      64:	nop

0000000000000068 <llvm_delete_flush_function_list>:
      68:	stp	x29, x30, [sp, #-64]!
      6c:	mov	x29, sp
      70:	stp	x19, x20, [sp, #16]
      74:	adrp	x19, 10 <llvm_writeout_files+0x10>
      78:	ldr	x19, [x19]
      7c:	ldr	x20, [x19]
      80:	cbz	x20, c4 <llvm_delete_flush_function_list+0x5c>
      84:	stp	x21, x22, [sp, #32]
      88:	adrp	x22, 0 <llvm_writeout_files>
      8c:	add	x22, x22, #0x0
      90:	str	x23, [sp, #48]
      94:	mov	x23, x19
      98:	mov	x21, #0x0                   	// #0
      9c:	nop
      a0:	ldr	x0, [x20]
      a4:	mov	x1, x20
      a8:	ldr	x20, [x20, #16]
      ac:	cmp	x0, x22
      b0:	b.eq	d0 <llvm_delete_flush_function_list+0x68>  // b.none
      b4:	mov	x21, x1
      b8:	cbnz	x20, a0 <llvm_delete_flush_function_list+0x38>
      bc:	ldp	x21, x22, [sp, #32]
      c0:	ldr	x23, [sp, #48]
      c4:	ldp	x19, x20, [sp, #16]
      c8:	ldp	x29, x30, [sp], #64
      cc:	ret
      d0:	ldr	x2, [x19]
      d4:	mov	x0, x1
      d8:	cmp	x2, x1
      dc:	b.eq	108 <llvm_delete_flush_function_list+0xa0>  // b.none
      e0:	ldr	x2, [x23, #8]
      e4:	cmp	x2, x1
      e8:	b.eq	100 <llvm_delete_flush_function_list+0x98>  // b.none
      ec:	cbz	x21, f4 <llvm_delete_flush_function_list+0x8c>
      f0:	str	x20, [x21, #16]
      f4:	bl	0 <free>
      f8:	cbnz	x20, a0 <llvm_delete_flush_function_list+0x38>
      fc:	b	bc <llvm_delete_flush_function_list+0x54>
     100:	str	x21, [x23, #8]
     104:	b	ec <llvm_delete_flush_function_list+0x84>
     108:	str	x20, [x19]
     10c:	b	e0 <llvm_delete_flush_function_list+0x78>

0000000000000110 <llvm_delete_writeout_function_list>:
     110:	stp	x29, x30, [sp, #-64]!
     114:	mov	x29, sp
     118:	stp	x19, x20, [sp, #16]
     11c:	adrp	x19, 10 <llvm_writeout_files+0x10>
     120:	ldr	x19, [x19]
     124:	ldr	x20, [x19]
     128:	cbz	x20, 16c <llvm_delete_writeout_function_list+0x5c>
     12c:	stp	x21, x22, [sp, #32]
     130:	adrp	x22, 0 <llvm_writeout_files>
     134:	add	x22, x22, #0x0
     138:	str	x23, [sp, #48]
     13c:	mov	x23, x19
     140:	mov	x21, #0x0                   	// #0
     144:	nop
     148:	ldr	x0, [x20]
     14c:	mov	x1, x20
     150:	ldr	x20, [x20, #16]
     154:	cmp	x0, x22
     158:	b.eq	178 <llvm_delete_writeout_function_list+0x68>  // b.none
     15c:	mov	x21, x1
     160:	cbnz	x20, 148 <llvm_delete_writeout_function_list+0x38>
     164:	ldp	x21, x22, [sp, #32]
     168:	ldr	x23, [sp, #48]
     16c:	ldp	x19, x20, [sp, #16]
     170:	ldp	x29, x30, [sp], #64
     174:	ret
     178:	ldr	x2, [x19]
     17c:	mov	x0, x1
     180:	cmp	x2, x1
     184:	b.eq	1b0 <llvm_delete_writeout_function_list+0xa0>  // b.none
     188:	ldr	x2, [x23, #8]
     18c:	cmp	x2, x1
     190:	b.eq	1a8 <llvm_delete_writeout_function_list+0x98>  // b.none
     194:	cbz	x21, 19c <llvm_delete_writeout_function_list+0x8c>
     198:	str	x20, [x21, #16]
     19c:	bl	0 <free>
     1a0:	cbnz	x20, 148 <llvm_delete_writeout_function_list+0x38>
     1a4:	b	164 <llvm_delete_writeout_function_list+0x54>
     1a8:	str	x21, [x23, #8]
     1ac:	b	194 <llvm_delete_writeout_function_list+0x84>
     1b0:	str	x20, [x19]
     1b4:	b	188 <llvm_delete_writeout_function_list+0x78>

00000000000001b8 <llvm_gcda_start_file>:
     1b8:	stp	x29, x30, [sp, #-112]!
     1bc:	mov	x29, sp
     1c0:	stp	x19, x20, [sp, #16]
     1c4:	stp	x21, x22, [sp, #32]
     1c8:	mov	x21, x0
     1cc:	mov	w22, w2
     1d0:	add	x0, sp, #0x64
     1d4:	stp	x23, x24, [sp, #48]
     1d8:	mov	x23, x1
     1dc:	add	x1, sp, #0x68
     1e0:	bl	0 <lprofGetPathPrefix>
     1e4:	cbz	x0, 414 <llvm_gcda_start_file+0x25c>
     1e8:	mov	x20, x0
     1ec:	mov	x0, x21
     1f0:	bl	0 <strlen>
     1f4:	ldr	x24, [sp, #104]
     1f8:	add	x1, x24, #0x2
     1fc:	add	x0, x1, x0
     200:	bl	0 <malloc>
     204:	mov	x19, x0
     208:	ldr	w4, [sp, #100]
     20c:	mov	x3, x24
     210:	mov	x2, x20
     214:	mov	x1, x21
     218:	bl	0 <lprofApplyPathPrefix>
     21c:	adrp	x21, 0 <llvm_writeout_files>
     220:	add	x24, x21, #0x0
     224:	adrp	x20, 0 <llvm_writeout_files>
     228:	mov	x0, x19
     22c:	mov	w1, #0x2                   	// #2
     230:	str	x19, [x24, #8]
     234:	adrp	x19, 0 <llvm_writeout_files>
     238:	str	wzr, [x24, #16]
     23c:	bl	0 <open>
     240:	str	w0, [x20]
     244:	cmn	w0, #0x1
     248:	add	x19, x19, #0x0
     24c:	b.eq	38c <llvm_gcda_start_file+0x1d4>  // b.none
     250:	stp	x25, x26, [sp, #64]
     254:	stp	x27, x28, [sp, #80]
     258:	bl	0 <lprofLockFd>
     25c:	ldr	w0, [x20]
     260:	mov	x1, x19
     264:	add	x19, x21, #0x0
     268:	bl	0 <fdopen>
     26c:	stp	x0, xzr, [x19, #24]
     270:	ldr	w1, [x19, #16]
     274:	stp	xzr, xzr, [x19, #40]
     278:	cbnz	w1, 318 <llvm_gcda_start_file+0x160>
     27c:	mov	x1, #0x0                   	// #0
     280:	mov	w2, #0x2                   	// #2
     284:	bl	0 <fseek>
     288:	ldr	x0, [x19, #24]
     28c:	bl	0 <ftell>
     290:	str	x0, [x19, #56]
     294:	mov	x1, x0
     298:	cbz	x0, 458 <llvm_gcda_start_file+0x2a0>
     29c:	ldr	w4, [x20]
     2a0:	mov	w3, #0x1                   	// #1
     2a4:	mov	x5, #0x0                   	// #0
     2a8:	mov	w2, #0x3                   	// #3
     2ac:	mov	x0, #0x0                   	// #0
     2b0:	bl	0 <mmap>
     2b4:	str	x0, [x19, #32]
     2b8:	mov	x3, x0
     2bc:	cmn	x0, #0x1
     2c0:	b.eq	424 <llvm_gcda_start_file+0x26c>  // b.none
     2c4:	ldr	w0, [x19, #16]
     2c8:	ldr	x27, [x19, #48]
     2cc:	add	x25, x27, #0x8
     2d0:	add	x28, x27, #0x4
     2d4:	cbnz	w0, 508 <llvm_gcda_start_file+0x350>
     2d8:	mov	w0, #0x6461                	// #25697
     2dc:	add	x26, x27, #0xc
     2e0:	movk	w0, #0x6763, lsl #16
     2e4:	str	w0, [x3, x27]
     2e8:	ldr	w0, [x23]
     2ec:	str	w0, [x3, x28]
     2f0:	add	x21, x21, #0x0
     2f4:	str	w22, [x3, x25]
     2f8:	ldp	x27, x28, [sp, #80]
     2fc:	str	x26, [x21, #48]
     300:	ldp	x25, x26, [sp, #64]
     304:	ldp	x19, x20, [sp, #16]
     308:	ldp	x21, x22, [sp, #32]
     30c:	ldp	x23, x24, [sp, #48]
     310:	ldp	x29, x30, [sp], #112
     314:	ret
     318:	mov	x1, #0x1                   	// #1
     31c:	mov	x0, #0x20000               	// #131072
     320:	bl	0 <calloc>
     324:	mov	x3, x0
     328:	mov	w1, #0x6461                	// #25697
     32c:	mov	x0, #0x20000               	// #131072
     330:	mov	x20, x0
     334:	movk	w1, #0x6763, lsl #16
     338:	mov	x26, #0xc                   	// #12
     33c:	mov	x28, #0x4                   	// #4
     340:	mov	x27, #0x0                   	// #0
     344:	mov	x25, #0x8                   	// #8
     348:	str	w1, [x3]
     34c:	stp	x3, x0, [x19, #32]
     350:	add	x24, x21, #0x0
     354:	ldr	w0, [x23]
     358:	cmp	x20, x26
     35c:	str	w0, [x3, x28]
     360:	str	x25, [x24, #48]
     364:	b.cs	2f0 <llvm_gcda_start_file+0x138>  // b.hs, b.nlast
     368:	add	x19, x27, #0xb
     36c:	mov	x0, x3
     370:	and	x19, x19, #0xfffffffffffe0000
     374:	add	x19, x19, #0x20, lsl #12
     378:	mov	x1, x19
     37c:	bl	0 <realloc>
     380:	mov	x3, x0
     384:	stp	x0, x19, [x24, #32]
     388:	b	2f0 <llvm_gcda_start_file+0x138>
     38c:	ldr	x0, [x24, #8]
     390:	mov	w3, #0x1                   	// #1
     394:	mov	w2, #0x1a4                 	// #420
     398:	mov	w1, #0x42                  	// #66
     39c:	str	w3, [x24, #16]
     3a0:	adrp	x19, 0 <llvm_writeout_files>
     3a4:	bl	0 <open>
     3a8:	str	w0, [x20]
     3ac:	add	x19, x19, #0x0
     3b0:	cmn	w0, #0x1
     3b4:	b.ne	250 <llvm_gcda_start_file+0x98>  // b.any
     3b8:	ldr	x0, [x24, #8]
     3bc:	bl	0 <__llvm_profile_recursive_mkdir>
     3c0:	ldr	x0, [x24, #8]
     3c4:	mov	w2, #0x1a4                 	// #420
     3c8:	mov	w1, #0x42                  	// #66
     3cc:	bl	0 <open>
     3d0:	str	w0, [x20]
     3d4:	cmn	w0, #0x1
     3d8:	b.ne	250 <llvm_gcda_start_file+0x98>  // b.any
     3dc:	bl	0 <__errno_location>
     3e0:	ldr	w0, [x0]
     3e4:	adrp	x1, 0 <stderr>
     3e8:	ldr	x20, [x24, #8]
     3ec:	ldr	x1, [x1]
     3f0:	ldr	x19, [x1]
     3f4:	bl	0 <strerror>
     3f8:	mov	x2, x20
     3fc:	mov	x3, x0
     400:	adrp	x1, 0 <llvm_writeout_files>
     404:	mov	x0, x19
     408:	add	x1, x1, #0x0
     40c:	bl	0 <fprintf>
     410:	b	304 <llvm_gcda_start_file+0x14c>
     414:	mov	x0, x21
     418:	bl	0 <strdup>
     41c:	mov	x19, x0
     420:	b	21c <llvm_gcda_start_file+0x64>
     424:	bl	0 <__errno_location>
     428:	ldr	w0, [x0]
     42c:	adrp	x1, 0 <stderr>
     430:	ldr	x20, [x19, #8]
     434:	ldr	x1, [x1]
     438:	ldr	x19, [x1]
     43c:	bl	0 <strerror>
     440:	adrp	x1, 0 <llvm_writeout_files>
     444:	mov	x3, x0
     448:	mov	x2, x20
     44c:	mov	x0, x19
     450:	add	x1, x1, #0x0
     454:	bl	0 <fprintf>
     458:	add	x19, x21, #0x0
     45c:	mov	w0, #0x1                   	// #1
     460:	ldr	x27, [x19, #48]
     464:	str	w0, [x19, #16]
     468:	stp	xzr, xzr, [x19, #32]
     46c:	cmn	x27, #0x20, lsl #12
     470:	b.ne	514 <llvm_gcda_start_file+0x35c>  // b.any
     474:	mov	x20, #0x0                   	// #0
     478:	mov	x3, #0x0                   	// #0
     47c:	mov	x0, x3
     480:	mov	x2, #0x20000               	// #131072
     484:	mov	w1, #0x0                   	// #0
     488:	add	x28, x27, #0x4
     48c:	bl	0 <memset>
     490:	add	x25, x27, #0x8
     494:	mov	x3, x0
     498:	add	x26, x27, #0xc
     49c:	cmp	x20, x28
     4a0:	b.cs	4c8 <llvm_gcda_start_file+0x310>  // b.hs, b.nlast
     4a4:	add	x20, x27, #0x3
     4a8:	mov	x0, x3
     4ac:	and	x20, x20, #0xfffffffffffe0000
     4b0:	add	x20, x20, #0x20, lsl #12
     4b4:	mov	x1, x20
     4b8:	bl	0 <realloc>
     4bc:	add	x1, x21, #0x0
     4c0:	mov	x3, x0
     4c4:	stp	x0, x20, [x1, #32]
     4c8:	add	x24, x21, #0x0
     4cc:	mov	w0, #0x6461                	// #25697
     4d0:	cmp	x25, x20
     4d4:	movk	w0, #0x6763, lsl #16
     4d8:	str	w0, [x3, x27]
     4dc:	str	x28, [x24, #48]
     4e0:	b.ls	350 <llvm_gcda_start_file+0x198>  // b.plast
     4e4:	add	x20, x27, #0x7
     4e8:	mov	x0, x3
     4ec:	and	x20, x20, #0xfffffffffffe0000
     4f0:	add	x20, x20, #0x20, lsl #12
     4f4:	mov	x1, x20
     4f8:	bl	0 <realloc>
     4fc:	mov	x3, x0
     500:	stp	x0, x20, [x24, #32]
     504:	b	350 <llvm_gcda_start_file+0x198>
     508:	add	x26, x27, #0xc
     50c:	ldr	x20, [x19, #40]
     510:	b	49c <llvm_gcda_start_file+0x2e4>
     514:	mov	x0, #0x1ffff               	// #131071
     518:	add	x20, x27, x0
     51c:	and	x20, x20, #0xfffffffffffe0000
     520:	add	x20, x20, #0x20, lsl #12
     524:	mov	x0, x20
     528:	bl	0 <malloc>
     52c:	mov	x3, x0
     530:	stp	x0, x20, [x19, #32]
     534:	b	47c <llvm_gcda_start_file+0x2c4>

0000000000000538 <llvm_gcda_increment_indirect_counter>:
     538:	ldr	w0, [x0]
     53c:	cmn	w0, #0x1
     540:	b.eq	558 <llvm_gcda_increment_indirect_counter+0x20>  // b.none
     544:	ldr	x0, [x1, w0, uxtw #3]
     548:	cbz	x0, 558 <llvm_gcda_increment_indirect_counter+0x20>
     54c:	ldr	x1, [x0]
     550:	add	x1, x1, #0x1
     554:	str	x1, [x0]
     558:	ret
     55c:	nop

0000000000000560 <llvm_gcda_emit_function>:
     560:	stp	x29, x30, [sp, #-128]!
     564:	mov	w6, #0x4                   	// #4
     568:	mov	w5, #0x5                   	// #5
     56c:	mov	x29, sp
     570:	stp	x21, x22, [sp, #32]
     574:	adrp	x22, 0 <llvm_writeout_files>
     578:	mov	x21, x1
     57c:	stp	x27, x28, [sp, #80]
     580:	add	x28, x22, #0x0
     584:	mov	w1, #0x2                   	// #2
     588:	stp	x25, x26, [sp, #64]
     58c:	ands	w26, w3, #0xff
     590:	csel	w5, w6, w5, eq  // eq = none
     594:	ldr	x3, [x28, #24]
     598:	stp	x23, x24, [sp, #48]
     59c:	cmp	w26, #0x0
     5a0:	str	w2, [sp, #104]
     5a4:	mov	w24, w0
     5a8:	str	w4, [sp, #116]
     5ac:	mov	w0, #0x3                   	// #3
     5b0:	csel	w27, w1, w0, eq  // eq = none
     5b4:	cbz	x3, 808 <llvm_gcda_emit_function+0x2a8>
     5b8:	ldr	w0, [x28, #16]
     5bc:	ldr	x25, [x28, #48]
     5c0:	stp	x19, x20, [sp, #16]
     5c4:	add	x23, x25, #0x4
     5c8:	ldr	x20, [x28, #32]
     5cc:	cbz	w0, 820 <llvm_gcda_emit_function+0x2c0>
     5d0:	ldr	x19, [x28, #40]
     5d4:	cmp	x19, x23
     5d8:	b.cs	604 <llvm_gcda_emit_function+0xa4>  // b.hs, b.nlast
     5dc:	add	x19, x25, #0x3
     5e0:	mov	x0, x20
     5e4:	and	x19, x19, #0xfffffffffffe0000
     5e8:	str	w5, [sp, #120]
     5ec:	add	x19, x19, #0x20, lsl #12
     5f0:	mov	x1, x19
     5f4:	bl	0 <realloc>
     5f8:	ldr	w5, [sp, #120]
     5fc:	mov	x20, x0
     600:	stp	x0, x19, [x28, #32]
     604:	add	x28, x22, #0x0
     608:	mov	w0, #0x1000000             	// #16777216
     60c:	str	w0, [x20, x25]
     610:	str	x23, [x28, #48]
     614:	cbz	x21, 634 <llvm_gcda_emit_function+0xd4>
     618:	mov	x0, x21
     61c:	str	w5, [sp, #120]
     620:	bl	0 <strlen>
     624:	lsr	x0, x0, #2
     628:	ldr	w5, [sp, #120]
     62c:	ldr	x19, [x28, #40]
     630:	add	w27, w5, w0
     634:	add	x28, x25, #0x8
     638:	cmp	x28, x19
     63c:	b.ls	664 <llvm_gcda_emit_function+0x104>  // b.plast
     640:	add	x19, x25, #0x7
     644:	mov	x0, x20
     648:	and	x19, x19, #0xfffffffffffe0000
     64c:	add	x19, x19, #0x20, lsl #12
     650:	mov	x1, x19
     654:	bl	0 <realloc>
     658:	add	x1, x22, #0x0
     65c:	mov	x20, x0
     660:	stp	x0, x19, [x1, #32]
     664:	add	x2, x22, #0x0
     668:	str	w27, [x20, x23]
     66c:	add	x27, x25, #0xc
     670:	cmp	x27, x19
     674:	str	x28, [x2, #48]
     678:	b.ls	6a4 <llvm_gcda_emit_function+0x144>  // b.plast
     67c:	add	x19, x25, #0xb
     680:	mov	x0, x20
     684:	and	x19, x19, #0xfffffffffffe0000
     688:	str	x2, [sp, #120]
     68c:	add	x19, x19, #0x20, lsl #12
     690:	mov	x1, x19
     694:	bl	0 <realloc>
     698:	ldr	x2, [sp, #120]
     69c:	mov	x20, x0
     6a0:	stp	x0, x19, [x2, #32]
     6a4:	add	x23, x22, #0x0
     6a8:	str	w24, [x20, x28]
     6ac:	add	x3, x25, #0x10
     6b0:	cmp	x3, x19
     6b4:	str	x27, [x23, #48]
     6b8:	b.ls	6e4 <llvm_gcda_emit_function+0x184>  // b.plast
     6bc:	add	x19, x25, #0xf
     6c0:	mov	x0, x20
     6c4:	and	x19, x19, #0xfffffffffffe0000
     6c8:	str	x3, [sp, #120]
     6cc:	add	x19, x19, #0x20, lsl #12
     6d0:	mov	x1, x19
     6d4:	bl	0 <realloc>
     6d8:	ldr	x3, [sp, #120]
     6dc:	mov	x20, x0
     6e0:	stp	x0, x19, [x23, #32]
     6e4:	add	x24, x22, #0x0
     6e8:	ldr	w0, [sp, #104]
     6ec:	str	w0, [x20, x27]
     6f0:	str	x3, [x24, #48]
     6f4:	cbnz	w26, 940 <llvm_gcda_emit_function+0x3e0>
     6f8:	cbz	x21, 924 <llvm_gcda_emit_function+0x3c4>
     6fc:	mov	x0, x21
     700:	str	x3, [sp, #104]
     704:	bl	0 <strlen>
     708:	lsr	x24, x0, #2
     70c:	ldr	x3, [sp, #104]
     710:	add	w24, w24, #0x1
     714:	add	x25, x3, #0x4
     718:	cmp	x25, x19
     71c:	b.ls	74c <llvm_gcda_emit_function+0x1ec>  // b.plast
     720:	add	x19, x3, #0x3
     724:	mov	x0, x20
     728:	and	x19, x19, #0xfffffffffffe0000
     72c:	str	x3, [sp, #104]
     730:	add	x19, x19, #0x20, lsl #12
     734:	mov	x1, x19
     738:	bl	0 <realloc>
     73c:	add	x1, x22, #0x0
     740:	mov	x20, x0
     744:	ldr	x3, [sp, #104]
     748:	stp	x0, x19, [x1, #32]
     74c:	add	x26, x22, #0x0
     750:	str	w24, [x20, x3]
     754:	mov	x0, x21
     758:	str	x25, [x26, #48]
     75c:	bl	0 <strlen>
     760:	add	x23, x0, x25
     764:	mov	x24, x0
     768:	cmp	x19, x23
     76c:	b.cs	790 <llvm_gcda_emit_function+0x230>  // b.hs, b.nlast
     770:	sub	x19, x23, #0x1
     774:	mov	x0, x20
     778:	and	x19, x19, #0xfffffffffffe0000
     77c:	add	x19, x19, #0x20, lsl #12
     780:	mov	x1, x19
     784:	bl	0 <realloc>
     788:	mov	x20, x0
     78c:	stp	x0, x19, [x26, #32]
     790:	mov	x2, x24
     794:	mov	x1, x21
     798:	add	x26, x22, #0x0
     79c:	add	x0, x20, x25
     7a0:	bl	0 <memcpy>
     7a4:	mov	x0, x21
     7a8:	mov	x21, #0x4                   	// #4
     7ac:	str	x23, [x26, #48]
     7b0:	bl	0 <strlen>
     7b4:	and	x0, x0, #0x3
     7b8:	sub	x21, x21, x0
     7bc:	add	x24, x23, x21
     7c0:	cmp	x24, x19
     7c4:	b.ls	8d0 <llvm_gcda_emit_function+0x370>  // b.plast
     7c8:	sub	x19, x24, #0x1
     7cc:	mov	x0, x20
     7d0:	and	x19, x19, #0xfffffffffffe0000
     7d4:	add	x22, x22, #0x0
     7d8:	add	x19, x19, #0x20, lsl #12
     7dc:	mov	x1, x19
     7e0:	bl	0 <realloc>
     7e4:	mov	x20, x0
     7e8:	mov	x2, x21
     7ec:	adrp	x1, 0 <llvm_writeout_files>
     7f0:	add	x1, x1, #0x0
     7f4:	stp	x0, x19, [x26, #32]
     7f8:	add	x0, x20, x23
     7fc:	bl	0 <memcpy>
     800:	ldp	x19, x20, [sp, #16]
     804:	str	x24, [x22, #48]
     808:	ldp	x21, x22, [sp, #32]
     80c:	ldp	x23, x24, [sp, #48]
     810:	ldp	x25, x26, [sp, #64]
     814:	ldp	x27, x28, [sp, #80]
     818:	ldp	x29, x30, [sp], #128
     81c:	ret
     820:	mov	w0, #0x1000000             	// #16777216
     824:	str	w0, [x20, x25]
     828:	str	x23, [x28, #48]
     82c:	cbz	x21, 908 <llvm_gcda_emit_function+0x3a8>
     830:	mov	x0, x21
     834:	str	w5, [sp, #120]
     838:	bl	0 <strlen>
     83c:	lsr	x0, x0, #2
     840:	ldr	w5, [sp, #120]
     844:	add	x1, x20, x25
     848:	add	x3, x25, #0x10
     84c:	str	x3, [x28, #48]
     850:	add	w5, w5, w0
     854:	mov	x0, x1
     858:	ldr	w1, [sp, #104]
     85c:	str	w5, [x20, x23]
     860:	stp	w24, w1, [x0, #8]
     864:	cbz	w26, 9ac <llvm_gcda_emit_function+0x44c>
     868:	ldr	w0, [sp, #116]
     86c:	str	w0, [x20, x3]
     870:	add	x3, x25, #0x14
     874:	mov	x0, x21
     878:	str	x3, [x28, #48]
     87c:	str	x3, [sp, #104]
     880:	bl	0 <strlen>
     884:	lsr	x24, x0, #2
     888:	ldr	x3, [sp, #104]
     88c:	add	w24, w24, #0x1
     890:	str	w24, [x20, x3]
     894:	add	x19, x3, #0x4
     898:	mov	x0, x21
     89c:	bl	0 <strlen>
     8a0:	mov	x2, x0
     8a4:	mov	x1, x21
     8a8:	mov	x23, x0
     8ac:	add	x0, x20, x19
     8b0:	bl	0 <memcpy>
     8b4:	mov	x0, x21
     8b8:	add	x23, x23, x19
     8bc:	bl	0 <strlen>
     8c0:	and	x0, x0, #0x3
     8c4:	mov	x21, #0x4                   	// #4
     8c8:	sub	x21, x21, x0
     8cc:	add	x24, x21, x23
     8d0:	add	x22, x22, #0x0
     8d4:	mov	x2, x21
     8d8:	add	x0, x20, x23
     8dc:	adrp	x1, 0 <llvm_writeout_files>
     8e0:	add	x1, x1, #0x0
     8e4:	bl	0 <memcpy>
     8e8:	str	x24, [x22, #48]
     8ec:	ldp	x19, x20, [sp, #16]
     8f0:	ldp	x21, x22, [sp, #32]
     8f4:	ldp	x23, x24, [sp, #48]
     8f8:	ldp	x25, x26, [sp, #64]
     8fc:	ldp	x27, x28, [sp, #80]
     900:	ldp	x29, x30, [sp], #128
     904:	ret
     908:	add	x0, x20, x25
     90c:	ldr	w2, [sp, #104]
     910:	str	w27, [x20, x23]
     914:	add	x1, x25, #0x10
     918:	str	x1, [x28, #48]
     91c:	stp	w24, w2, [x0, #8]
     920:	cbnz	w26, 9c8 <llvm_gcda_emit_function+0x468>
     924:	ldp	x19, x20, [sp, #16]
     928:	ldp	x21, x22, [sp, #32]
     92c:	ldp	x23, x24, [sp, #48]
     930:	ldp	x25, x26, [sp, #64]
     934:	ldp	x27, x28, [sp, #80]
     938:	ldp	x29, x30, [sp], #128
     93c:	ret
     940:	add	x23, x25, #0x14
     944:	cmp	x23, x19
     948:	b.ls	974 <llvm_gcda_emit_function+0x414>  // b.plast
     94c:	add	x19, x25, #0x13
     950:	mov	x0, x20
     954:	and	x19, x19, #0xfffffffffffe0000
     958:	str	x3, [sp, #104]
     95c:	add	x19, x19, #0x20, lsl #12
     960:	mov	x1, x19
     964:	bl	0 <realloc>
     968:	ldr	x3, [sp, #104]
     96c:	mov	x20, x0
     970:	stp	x0, x19, [x24, #32]
     974:	add	x19, x22, #0x0
     978:	ldr	w0, [sp, #116]
     97c:	str	w0, [x20, x3]
     980:	mov	x3, x23
     984:	str	x23, [x19, #48]
     988:	cbz	x21, 924 <llvm_gcda_emit_function+0x3c4>
     98c:	mov	x0, x21
     990:	str	x3, [sp, #104]
     994:	bl	0 <strlen>
     998:	lsr	x24, x0, #2
     99c:	add	w24, w24, #0x1
     9a0:	ldr	x19, [x19, #40]
     9a4:	ldr	x3, [sp, #104]
     9a8:	b	714 <llvm_gcda_emit_function+0x1b4>
     9ac:	mov	x0, x21
     9b0:	str	x3, [sp, #104]
     9b4:	bl	0 <strlen>
     9b8:	lsr	x24, x0, #2
     9bc:	add	w24, w24, #0x1
     9c0:	ldr	x3, [sp, #104]
     9c4:	b	890 <llvm_gcda_emit_function+0x330>
     9c8:	ldr	w2, [sp, #116]
     9cc:	add	x0, x25, #0x14
     9d0:	str	w2, [x20, x1]
     9d4:	ldp	x19, x20, [sp, #16]
     9d8:	str	x0, [x28, #48]
     9dc:	b	808 <llvm_gcda_emit_function+0x2a8>

00000000000009e0 <llvm_gcda_emit_arcs>:
     9e0:	stp	x29, x30, [sp, #-128]!
     9e4:	mov	x29, sp
     9e8:	stp	x21, x22, [sp, #32]
     9ec:	adrp	x21, 0 <llvm_writeout_files>
     9f0:	stp	x23, x24, [sp, #48]
     9f4:	add	x24, x21, #0x0
     9f8:	stp	x19, x20, [sp, #16]
     9fc:	mov	w19, w0
     a00:	ldr	x0, [x24, #24]
     a04:	cbz	x0, d78 <llvm_gcda_emit_arcs+0x398>
     a08:	ldr	w22, [x24, #16]
     a0c:	stp	x25, x26, [sp, #64]
     a10:	stp	x27, x28, [sp, #80]
     a14:	mov	x27, x1
     a18:	ldr	x20, [x24, #32]
     a1c:	ldr	x25, [x24, #48]
     a20:	cbnz	w22, cec <llvm_gcda_emit_arcs+0x30c>
     a24:	add	x28, x20, x25
     a28:	ldrb	w2, [x20, x25]
     a2c:	add	x26, x25, #0x4
     a30:	str	x26, [x24, #48]
     a34:	ldrb	w1, [x28, #2]
     a38:	ldrb	w3, [x28, #1]
     a3c:	ldrb	w0, [x28, #3]
     a40:	lsl	w1, w1, #16
     a44:	orr	w3, w1, w3, lsl #8
     a48:	orr	w3, w3, w2
     a4c:	orr	w3, w3, w0, lsl #24
     a50:	cmn	w3, #0x1
     a54:	b.eq	b90 <llvm_gcda_emit_arcs+0x1b0>  // b.none
     a58:	mov	w0, #0x1a10000             	// #27328512
     a5c:	cmp	w3, w0
     a60:	b.ne	d8c <llvm_gcda_emit_arcs+0x3ac>  // b.any
     a64:	add	x23, x25, #0x8
     a68:	ldr	w3, [x20, x26]
     a6c:	str	x23, [x24, #48]
     a70:	mov	x24, x23
     a74:	cmn	w3, #0x1
     a78:	b.eq	cb4 <llvm_gcda_emit_arcs+0x2d4>  // b.none
     a7c:	cmp	w19, w3, lsr #1
     a80:	b.ne	cb4 <llvm_gcda_emit_arcs+0x2d4>  // b.any
     a84:	ubfiz	x0, x19, #3, #32
     a88:	bl	0 <malloc>
     a8c:	mov	x3, x0
     a90:	cbz	w19, b98 <llvm_gcda_emit_arcs+0x1b8>
     a94:	sub	w2, w19, #0x1
     a98:	cmp	w2, #0x3
     a9c:	b.ls	dc0 <llvm_gcda_emit_arcs+0x3e0>  // b.plast
     aa0:	lsr	w1, w2, #2
     aa4:	add	x6, x25, #0xc
     aa8:	sub	w1, w1, #0x1
     aac:	add	x6, x20, x6
     ab0:	add	x1, x1, #0x1
     ab4:	add	x8, x20, x23
     ab8:	add	x7, x0, #0x10
     abc:	mov	x0, #0x0                   	// #0
     ac0:	lsl	x1, x1, #5
     ac4:	nop
     ac8:	add	x5, x6, x0
     acc:	add	x4, x8, x0
     ad0:	ld2	{v0.4s, v1.4s}, [x5]
     ad4:	ld2	{v4.4s, v5.4s}, [x4]
     ad8:	uxtl	v2.2d, v0.2s
     adc:	uxtl2	v0.2d, v0.4s
     ae0:	uxtl	v3.2d, v4.2s
     ae4:	uxtl2	v4.2d, v4.4s
     ae8:	shl	v1.2d, v2.2d, #32
     aec:	shl	v0.2d, v0.2d, #32
     af0:	orr	v1.16b, v1.16b, v3.16b
     af4:	orr	v0.16b, v0.16b, v4.16b
     af8:	str	q1, [x3, x0]
     afc:	str	q0, [x7, x0]
     b00:	add	x0, x0, #0x20
     b04:	cmp	x0, x1
     b08:	b.ne	ac8 <llvm_gcda_emit_arcs+0xe8>  // b.any
     b0c:	and	w0, w2, #0xfffffffc
     b10:	add	x24, x23, w0, uxtw #3
     b14:	add	x1, x20, x24
     b18:	ldr	w6, [x20, x24]
     b1c:	mov	w4, w0
     b20:	add	w5, w0, #0x1
     b24:	cmp	w19, w5
     b28:	add	x7, x24, #0x8
     b2c:	ldr	w2, [x1, #4]
     b30:	orr	x2, x6, x2, lsl #32
     b34:	str	x2, [x3, x4, lsl #3]
     b38:	b.ls	b98 <llvm_gcda_emit_arcs+0x1b8>  // b.plast
     b3c:	ldr	w6, [x20, x7]
     b40:	add	w2, w0, #0x2
     b44:	ldr	w4, [x1, #12]
     b48:	cmp	w19, w2
     b4c:	add	x7, x24, #0x10
     b50:	orr	x4, x6, x4, lsl #32
     b54:	str	x4, [x3, w5, uxtw #3]
     b58:	b.ls	b98 <llvm_gcda_emit_arcs+0x1b8>  // b.plast
     b5c:	ldr	w5, [x20, x7]
     b60:	add	w0, w0, #0x3
     b64:	ldr	w4, [x1, #20]
     b68:	cmp	w19, w0
     b6c:	add	x24, x24, #0x18
     b70:	orr	x4, x5, x4, lsl #32
     b74:	str	x4, [x3, x2, lsl #3]
     b78:	b.ls	b98 <llvm_gcda_emit_arcs+0x1b8>  // b.plast
     b7c:	ldr	w2, [x20, x24]
     b80:	ldr	w1, [x1, #28]
     b84:	orr	x1, x2, x1, lsl #32
     b88:	str	x1, [x3, w0, uxtw #3]
     b8c:	b	b98 <llvm_gcda_emit_arcs+0x1b8>
     b90:	add	x23, x25, #0x8
     b94:	mov	x3, #0x0                   	// #0
     b98:	lsl	w2, w19, #1
     b9c:	mov	w0, #0x1a10000             	// #27328512
     ba0:	str	w0, [x28]
     ba4:	add	x21, x21, #0x0
     ba8:	str	w2, [x20, x26]
     bac:	str	x23, [x21, #48]
     bb0:	cbz	w19, c94 <llvm_gcda_emit_arcs+0x2b4>
     bb4:	sub	w0, w19, #0x1
     bb8:	sub	x27, x27, x23
     bbc:	add	x0, x0, #0x1
     bc0:	mov	x19, x23
     bc4:	sub	x4, x3, x23
     bc8:	add	x23, x23, x0, lsl #3
     bcc:	b	c54 <llvm_gcda_emit_arcs+0x274>
     bd0:	ldr	x25, [x21, #40]
     bd4:	add	x1, x19, #0x3
     bd8:	mov	x0, x20
     bdc:	and	x2, x1, #0xfffffffffffe0000
     be0:	cmp	x25, x24
     be4:	b.cs	c04 <llvm_gcda_emit_arcs+0x224>  // b.hs, b.nlast
     be8:	add	x25, x2, #0x20, lsl #12
     bec:	stp	x3, x4, [sp, #104]
     bf0:	mov	x1, x25
     bf4:	bl	0 <realloc>
     bf8:	mov	x20, x0
     bfc:	ldp	x3, x4, [sp, #104]
     c00:	stp	x0, x25, [x21, #32]
     c04:	str	w26, [x20, x19]
     c08:	add	x26, x19, #0x8
     c0c:	str	x24, [x21, #48]
     c10:	cmp	x25, x26
     c14:	b.cs	c40 <llvm_gcda_emit_arcs+0x260>  // b.hs, b.nlast
     c18:	add	x19, x19, #0x7
     c1c:	mov	x0, x20
     c20:	and	x19, x19, #0xfffffffffffe0000
     c24:	stp	x3, x4, [sp, #104]
     c28:	add	x19, x19, #0x20, lsl #12
     c2c:	mov	x1, x19
     c30:	bl	0 <realloc>
     c34:	ldp	x3, x4, [sp, #104]
     c38:	mov	x20, x0
     c3c:	stp	x0, x19, [x21, #32]
     c40:	mov	x19, x26
     c44:	str	w28, [x20, x24]
     c48:	cmp	x26, x23
     c4c:	str	x26, [x21, #48]
     c50:	b.eq	c94 <llvm_gcda_emit_arcs+0x2b4>  // b.none
     c54:	add	x24, x19, #0x4
     c58:	ldr	x1, [x27, x19]
     c5c:	cbz	x3, c68 <llvm_gcda_emit_arcs+0x288>
     c60:	ldr	x0, [x4, x19]
     c64:	add	x1, x1, x0
     c68:	str	x1, [x27, x19]
     c6c:	mov	w26, w1
     c70:	lsr	x28, x1, #32
     c74:	cbnz	w22, bd0 <llvm_gcda_emit_arcs+0x1f0>
     c78:	str	w1, [x20, x19]
     c7c:	add	x26, x19, #0x8
     c80:	str	w28, [x20, x24]
     c84:	mov	x19, x26
     c88:	str	x26, [x21, #48]
     c8c:	cmp	x26, x23
     c90:	b.ne	c54 <llvm_gcda_emit_arcs+0x274>  // b.any
     c94:	ldp	x19, x20, [sp, #16]
     c98:	mov	x0, x3
     c9c:	ldp	x21, x22, [sp, #32]
     ca0:	ldp	x23, x24, [sp, #48]
     ca4:	ldp	x25, x26, [sp, #64]
     ca8:	ldp	x27, x28, [sp, #80]
     cac:	ldp	x29, x30, [sp], #128
     cb0:	b	0 <free>
     cb4:	adrp	x0, 0 <stderr>
     cb8:	add	x21, x21, #0x0
     cbc:	ldp	x19, x20, [sp, #16]
     cc0:	adrp	x1, 0 <llvm_writeout_files>
     cc4:	ldr	x0, [x0]
     cc8:	add	x1, x1, #0x0
     ccc:	ldr	x2, [x21, #8]
     cd0:	ldr	x0, [x0]
     cd4:	ldp	x21, x22, [sp, #32]
     cd8:	ldp	x23, x24, [sp, #48]
     cdc:	ldp	x25, x26, [sp, #64]
     ce0:	ldp	x27, x28, [sp, #80]
     ce4:	ldp	x29, x30, [sp], #128
     ce8:	b	0 <fprintf>
     cec:	ldr	x28, [x24, #40]
     cf0:	add	x26, x25, #0x4
     cf4:	cmp	x26, x28
     cf8:	b.hi	d54 <llvm_gcda_emit_arcs+0x374>  // b.pmore
     cfc:	add	x4, x21, #0x0
     d00:	mov	w0, #0x1a10000             	// #27328512
     d04:	str	w0, [x20, x25]
     d08:	add	x23, x25, #0x8
     d0c:	cmp	x23, x28
     d10:	lsl	w2, w19, #1
     d14:	str	x26, [x4, #48]
     d18:	mov	x3, #0x0                   	// #0
     d1c:	b.ls	ba4 <llvm_gcda_emit_arcs+0x1c4>  // b.plast
     d20:	add	x24, x25, #0x7
     d24:	mov	x0, x20
     d28:	and	x24, x24, #0xfffffffffffe0000
     d2c:	str	w2, [sp, #104]
     d30:	add	x24, x24, #0x20, lsl #12
     d34:	stp	x3, x4, [sp, #112]
     d38:	mov	x1, x24
     d3c:	bl	0 <realloc>
     d40:	mov	x20, x0
     d44:	ldp	x3, x4, [sp, #112]
     d48:	ldr	w2, [sp, #104]
     d4c:	stp	x0, x24, [x4, #32]
     d50:	b	ba4 <llvm_gcda_emit_arcs+0x1c4>
     d54:	add	x28, x25, #0x3
     d58:	mov	x0, x20
     d5c:	and	x28, x28, #0xfffffffffffe0000
     d60:	add	x28, x28, #0x20, lsl #12
     d64:	mov	x1, x28
     d68:	bl	0 <realloc>
     d6c:	mov	x20, x0
     d70:	stp	x0, x28, [x24, #32]
     d74:	b	cfc <llvm_gcda_emit_arcs+0x31c>
     d78:	ldp	x19, x20, [sp, #16]
     d7c:	ldp	x21, x22, [sp, #32]
     d80:	ldp	x23, x24, [sp, #48]
     d84:	ldp	x29, x30, [sp], #128
     d88:	ret
     d8c:	adrp	x0, 0 <stderr>
     d90:	adrp	x1, 0 <llvm_writeout_files>
     d94:	ldr	x2, [x24, #8]
     d98:	add	x1, x1, #0x0
     d9c:	ldr	x0, [x0]
     da0:	ldp	x19, x20, [sp, #16]
     da4:	ldr	x0, [x0]
     da8:	ldp	x21, x22, [sp, #32]
     dac:	ldp	x23, x24, [sp, #48]
     db0:	ldp	x25, x26, [sp, #64]
     db4:	ldp	x27, x28, [sp, #80]
     db8:	ldp	x29, x30, [sp], #128
     dbc:	b	0 <fprintf>
     dc0:	mov	w0, #0x0                   	// #0
     dc4:	b	b14 <llvm_gcda_emit_arcs+0x134>

0000000000000dc8 <llvm_gcda_summary_info>:
     dc8:	stp	x29, x30, [sp, #-80]!
     dcc:	mov	x29, sp
     dd0:	stp	x19, x20, [sp, #16]
     dd4:	adrp	x20, 0 <llvm_writeout_files>
     dd8:	stp	x21, x22, [sp, #32]
     ddc:	add	x22, x20, #0x0
     de0:	ldr	x0, [x22, #24]
     de4:	cbz	x0, ebc <llvm_gcda_summary_info+0xf4>
     de8:	ldr	w1, [x22, #16]
     dec:	ldr	x0, [x22, #32]
     df0:	ldr	x19, [x22, #48]
     df4:	cbnz	w1, ecc <llvm_gcda_summary_info+0x104>
     df8:	add	x1, x0, x19
     dfc:	ldrb	w6, [x0, x19]
     e00:	add	x5, x19, #0x4
     e04:	str	x5, [x22, #48]
     e08:	ldrb	w4, [x1, #2]
     e0c:	ldrb	w3, [x1, #1]
     e10:	ldrb	w2, [x1, #3]
     e14:	lsl	w4, w4, #16
     e18:	orr	w3, w4, w3, lsl #8
     e1c:	orr	w3, w3, w6
     e20:	orr	w3, w3, w2, lsl #24
     e24:	cmn	w3, #0x1
     e28:	b.eq	e74 <llvm_gcda_summary_info+0xac>  // b.none
     e2c:	mov	w2, #0xa1000000            	// #-1593835520
     e30:	cmp	w3, w2
     e34:	b.ne	1340 <llvm_gcda_summary_info+0x578>  // b.any
     e38:	ldr	w3, [x0, x5]
     e3c:	add	x2, x19, #0x8
     e40:	str	x2, [x22, #48]
     e44:	cmp	w3, #0x9
     e48:	b.eq	132c <llvm_gcda_summary_info+0x564>  // b.none
     e4c:	adrp	x0, 0 <stderr>
     e50:	adrp	x1, 0 <llvm_writeout_files>
     e54:	ldr	x2, [x22, #8]
     e58:	add	x1, x1, #0x0
     e5c:	ldr	x0, [x0]
     e60:	ldp	x19, x20, [sp, #16]
     e64:	ldp	x21, x22, [sp, #32]
     e68:	ldp	x29, x30, [sp], #80
     e6c:	ldr	x0, [x0]
     e70:	b	0 <fprintf>
     e74:	mov	w3, #0x1                   	// #1
     e78:	adrp	x2, 0 <llvm_writeout_files>
     e7c:	add	x22, x19, #0x30
     e80:	add	x20, x20, #0x0
     e84:	str	w3, [x1, #16]
     e88:	ldr	q0, [x2]
     e8c:	add	x2, x19, #0x14
     e90:	add	x2, x0, x2
     e94:	mov	w3, #0xa3000000            	// #-1560281088
     e98:	str	q0, [x1]
     e9c:	stp	xzr, xzr, [x2]
     ea0:	str	xzr, [x2, #16]
     ea4:	add	x2, x22, #0x4
     ea8:	str	w3, [x1, #44]
     eac:	mov	w1, #0x1                   	// #1
     eb0:	str	wzr, [x0, x22]
     eb4:	str	x2, [x20, #48]
     eb8:	str	w1, [x20, #64]
     ebc:	ldp	x19, x20, [sp, #16]
     ec0:	ldp	x21, x22, [sp, #32]
     ec4:	ldp	x29, x30, [sp], #80
     ec8:	ret
     ecc:	ldr	x21, [x22, #40]
     ed0:	stp	x23, x24, [sp, #48]
     ed4:	add	x23, x19, #0x4
     ed8:	str	x25, [sp, #64]
     edc:	cmp	x23, x21
     ee0:	b.hi	1168 <llvm_gcda_summary_info+0x3a0>  // b.pmore
     ee4:	add	x24, x20, #0x0
     ee8:	mov	w1, #0xa1000000            	// #-1593835520
     eec:	str	w1, [x0, x19]
     ef0:	add	x22, x19, #0x8
     ef4:	cmp	x22, x21
     ef8:	str	x23, [x24, #48]
     efc:	b.hi	1130 <llvm_gcda_summary_info+0x368>  // b.pmore
     f00:	add	x25, x20, #0x0
     f04:	mov	w1, #0x9                   	// #9
     f08:	str	w1, [x0, x23]
     f0c:	add	x24, x19, #0xc
     f10:	cmp	x21, x24
     f14:	str	x22, [x25, #48]
     f18:	b.cc	10fc <llvm_gcda_summary_info+0x334>  // b.lo, b.ul, b.last
     f1c:	add	x25, x20, #0x0
     f20:	str	wzr, [x0, x22]
     f24:	add	x23, x19, #0x10
     f28:	cmp	x21, x23
     f2c:	str	x24, [x25, #48]
     f30:	b.cc	10c8 <llvm_gcda_summary_info+0x300>  // b.lo, b.ul, b.last
     f34:	add	x25, x20, #0x0
     f38:	str	wzr, [x0, x24]
     f3c:	add	x22, x19, #0x14
     f40:	cmp	x22, x21
     f44:	str	x23, [x25, #48]
     f48:	b.hi	108c <llvm_gcda_summary_info+0x2c4>  // b.pmore
     f4c:	add	x24, x20, #0x0
     f50:	mov	w1, #0x1                   	// #1
     f54:	str	w1, [x0, x23]
     f58:	add	x21, x19, #0x18
     f5c:	ldr	x1, [x24, #40]
     f60:	str	x22, [x24, #48]
     f64:	cmp	x1, x21
     f68:	b.cc	1284 <llvm_gcda_summary_info+0x4bc>  // b.lo, b.ul, b.last
     f6c:	add	x23, x20, #0x0
     f70:	str	wzr, [x0, x22]
     f74:	add	x22, x19, #0x1c
     f78:	ldr	x1, [x23, #40]
     f7c:	str	x21, [x23, #48]
     f80:	cmp	x1, x22
     f84:	b.cc	12f4 <llvm_gcda_summary_info+0x52c>  // b.lo, b.ul, b.last
     f88:	add	x23, x20, #0x0
     f8c:	str	wzr, [x0, x21]
     f90:	add	x21, x19, #0x20
     f94:	ldr	x1, [x23, #40]
     f98:	str	x22, [x23, #48]
     f9c:	cmp	x1, x21
     fa0:	b.cc	12bc <llvm_gcda_summary_info+0x4f4>  // b.lo, b.ul, b.last
     fa4:	add	x23, x20, #0x0
     fa8:	str	wzr, [x0, x22]
     fac:	add	x22, x19, #0x24
     fb0:	ldr	x1, [x23, #40]
     fb4:	str	x21, [x23, #48]
     fb8:	cmp	x1, x22
     fbc:	b.cc	1214 <llvm_gcda_summary_info+0x44c>  // b.lo, b.ul, b.last
     fc0:	add	x23, x20, #0x0
     fc4:	str	wzr, [x0, x21]
     fc8:	add	x21, x19, #0x28
     fcc:	ldr	x1, [x23, #40]
     fd0:	str	x22, [x23, #48]
     fd4:	cmp	x21, x1
     fd8:	b.hi	11dc <llvm_gcda_summary_info+0x414>  // b.pmore
     fdc:	add	x24, x20, #0x0
     fe0:	str	wzr, [x0, x22]
     fe4:	add	x23, x19, #0x2c
     fe8:	ldr	x1, [x24, #40]
     fec:	str	x21, [x24, #48]
     ff0:	cmp	x1, x23
     ff4:	b.cc	124c <llvm_gcda_summary_info+0x484>  // b.lo, b.ul, b.last
     ff8:	add	x24, x20, #0x0
     ffc:	str	wzr, [x0, x21]
    1000:	add	x22, x19, #0x30
    1004:	ldr	x21, [x24, #40]
    1008:	str	x23, [x24, #48]
    100c:	cmp	x21, x22
    1010:	b.cc	1054 <llvm_gcda_summary_info+0x28c>  // b.lo, b.ul, b.last
    1014:	add	x24, x20, #0x0
    1018:	mov	w1, #0xa3000000            	// #-1560281088
    101c:	str	w1, [x0, x23]
    1020:	add	x1, x19, #0x34
    1024:	cmp	x1, x21
    1028:	str	x22, [x24, #48]
    102c:	b.hi	11a0 <llvm_gcda_summary_info+0x3d8>  // b.pmore
    1030:	add	x20, x20, #0x0
    1034:	add	x2, x22, #0x4
    1038:	mov	w1, #0x1                   	// #1
    103c:	ldp	x23, x24, [sp, #48]
    1040:	str	x2, [x20, #48]
    1044:	str	w1, [x20, #64]
    1048:	ldr	x25, [sp, #64]
    104c:	str	wzr, [x0, x22]
    1050:	b	ebc <llvm_gcda_summary_info+0xf4>
    1054:	add	x21, x19, #0x2f
    1058:	and	x21, x21, #0xfffffffffffe0000
    105c:	add	x21, x21, #0x20, lsl #12
    1060:	mov	x1, x21
    1064:	bl	0 <realloc>
    1068:	stp	x0, x21, [x24, #32]
    106c:	add	x24, x20, #0x0
    1070:	mov	w1, #0xa3000000            	// #-1560281088
    1074:	str	w1, [x0, x23]
    1078:	add	x1, x19, #0x34
    107c:	str	x22, [x24, #48]
    1080:	cmp	x1, x21
    1084:	b.ls	1030 <llvm_gcda_summary_info+0x268>  // b.plast
    1088:	b	11a0 <llvm_gcda_summary_info+0x3d8>
    108c:	add	x21, x19, #0x13
    1090:	add	x24, x20, #0x0
    1094:	and	x21, x21, #0xfffffffffffe0000
    1098:	add	x21, x21, #0x20, lsl #12
    109c:	mov	x1, x21
    10a0:	bl	0 <realloc>
    10a4:	stp	x0, x21, [x25, #32]
    10a8:	mov	w1, #0x1                   	// #1
    10ac:	add	x21, x19, #0x18
    10b0:	str	w1, [x0, x23]
    10b4:	ldr	x1, [x24, #40]
    10b8:	str	x22, [x24, #48]
    10bc:	cmp	x1, x21
    10c0:	b.cs	f6c <llvm_gcda_summary_info+0x1a4>  // b.hs, b.nlast
    10c4:	b	1284 <llvm_gcda_summary_info+0x4bc>
    10c8:	add	x21, x19, #0xf
    10cc:	add	x22, x19, #0x14
    10d0:	and	x21, x21, #0xfffffffffffe0000
    10d4:	add	x21, x21, #0x20, lsl #12
    10d8:	mov	x1, x21
    10dc:	bl	0 <realloc>
    10e0:	stp	x0, x21, [x25, #32]
    10e4:	add	x25, x20, #0x0
    10e8:	cmp	x22, x21
    10ec:	str	wzr, [x0, x24]
    10f0:	str	x23, [x25, #48]
    10f4:	b.ls	f4c <llvm_gcda_summary_info+0x184>  // b.plast
    10f8:	b	108c <llvm_gcda_summary_info+0x2c4>
    10fc:	add	x21, x19, #0xb
    1100:	add	x23, x19, #0x10
    1104:	and	x21, x21, #0xfffffffffffe0000
    1108:	add	x21, x21, #0x20, lsl #12
    110c:	mov	x1, x21
    1110:	bl	0 <realloc>
    1114:	stp	x0, x21, [x25, #32]
    1118:	add	x25, x20, #0x0
    111c:	cmp	x21, x23
    1120:	str	wzr, [x0, x22]
    1124:	str	x24, [x25, #48]
    1128:	b.cs	f34 <llvm_gcda_summary_info+0x16c>  // b.hs, b.nlast
    112c:	b	10c8 <llvm_gcda_summary_info+0x300>
    1130:	add	x21, x19, #0x7
    1134:	add	x25, x20, #0x0
    1138:	and	x21, x21, #0xfffffffffffe0000
    113c:	add	x21, x21, #0x20, lsl #12
    1140:	mov	x1, x21
    1144:	bl	0 <realloc>
    1148:	mov	w1, #0x9                   	// #9
    114c:	str	w1, [x0, x23]
    1150:	stp	x0, x21, [x24, #32]
    1154:	add	x24, x19, #0xc
    1158:	cmp	x21, x24
    115c:	str	x22, [x25, #48]
    1160:	b.cs	f1c <llvm_gcda_summary_info+0x154>  // b.hs, b.nlast
    1164:	b	10fc <llvm_gcda_summary_info+0x334>
    1168:	add	x21, x19, #0x3
    116c:	add	x24, x20, #0x0
    1170:	and	x21, x21, #0xfffffffffffe0000
    1174:	add	x21, x21, #0x20, lsl #12
    1178:	mov	x1, x21
    117c:	bl	0 <realloc>
    1180:	mov	w1, #0xa1000000            	// #-1593835520
    1184:	str	w1, [x0, x19]
    1188:	stp	x0, x21, [x22, #32]
    118c:	add	x22, x19, #0x8
    1190:	cmp	x22, x21
    1194:	str	x23, [x24, #48]
    1198:	b.ls	f00 <llvm_gcda_summary_info+0x138>  // b.plast
    119c:	b	1130 <llvm_gcda_summary_info+0x368>
    11a0:	add	x19, x19, #0x33
    11a4:	add	x20, x20, #0x0
    11a8:	and	x19, x19, #0xfffffffffffe0000
    11ac:	add	x19, x19, #0x20, lsl #12
    11b0:	mov	x1, x19
    11b4:	bl	0 <realloc>
    11b8:	add	x2, x22, #0x4
    11bc:	mov	w1, #0x1                   	// #1
    11c0:	str	x2, [x20, #48]
    11c4:	str	w1, [x20, #64]
    11c8:	ldr	x25, [sp, #64]
    11cc:	stp	x0, x19, [x24, #32]
    11d0:	ldp	x23, x24, [sp, #48]
    11d4:	str	wzr, [x0, x22]
    11d8:	b	ebc <llvm_gcda_summary_info+0xf4>
    11dc:	add	x1, x19, #0x27
    11e0:	and	x24, x1, #0xfffffffffffe0000
    11e4:	add	x24, x24, #0x20, lsl #12
    11e8:	mov	x1, x24
    11ec:	bl	0 <realloc>
    11f0:	stp	x0, x24, [x23, #32]
    11f4:	add	x24, x20, #0x0
    11f8:	add	x23, x19, #0x2c
    11fc:	str	wzr, [x0, x22]
    1200:	ldr	x1, [x24, #40]
    1204:	str	x21, [x24, #48]
    1208:	cmp	x1, x23
    120c:	b.cs	ff8 <llvm_gcda_summary_info+0x230>  // b.hs, b.nlast
    1210:	b	124c <llvm_gcda_summary_info+0x484>
    1214:	add	x1, x19, #0x23
    1218:	and	x24, x1, #0xfffffffffffe0000
    121c:	add	x24, x24, #0x20, lsl #12
    1220:	mov	x1, x24
    1224:	bl	0 <realloc>
    1228:	stp	x0, x24, [x23, #32]
    122c:	add	x23, x20, #0x0
    1230:	str	wzr, [x0, x21]
    1234:	add	x21, x19, #0x28
    1238:	ldr	x1, [x23, #40]
    123c:	str	x22, [x23, #48]
    1240:	cmp	x21, x1
    1244:	b.ls	fdc <llvm_gcda_summary_info+0x214>  // b.plast
    1248:	b	11dc <llvm_gcda_summary_info+0x414>
    124c:	add	x1, x19, #0x2b
    1250:	and	x22, x1, #0xfffffffffffe0000
    1254:	add	x22, x22, #0x20, lsl #12
    1258:	mov	x1, x22
    125c:	bl	0 <realloc>
    1260:	stp	x0, x22, [x24, #32]
    1264:	add	x24, x20, #0x0
    1268:	add	x22, x19, #0x30
    126c:	str	wzr, [x0, x21]
    1270:	ldr	x21, [x24, #40]
    1274:	str	x23, [x24, #48]
    1278:	cmp	x21, x22
    127c:	b.cs	1014 <llvm_gcda_summary_info+0x24c>  // b.hs, b.nlast
    1280:	b	1054 <llvm_gcda_summary_info+0x28c>
    1284:	add	x1, x19, #0x17
    1288:	and	x23, x1, #0xfffffffffffe0000
    128c:	add	x23, x23, #0x20, lsl #12
    1290:	mov	x1, x23
    1294:	bl	0 <realloc>
    1298:	stp	x0, x23, [x24, #32]
    129c:	add	x23, x20, #0x0
    12a0:	str	wzr, [x0, x22]
    12a4:	add	x22, x19, #0x1c
    12a8:	ldr	x1, [x23, #40]
    12ac:	str	x21, [x23, #48]
    12b0:	cmp	x1, x22
    12b4:	b.cs	f88 <llvm_gcda_summary_info+0x1c0>  // b.hs, b.nlast
    12b8:	b	12f4 <llvm_gcda_summary_info+0x52c>
    12bc:	add	x1, x19, #0x1f
    12c0:	and	x24, x1, #0xfffffffffffe0000
    12c4:	add	x24, x24, #0x20, lsl #12
    12c8:	mov	x1, x24
    12cc:	bl	0 <realloc>
    12d0:	stp	x0, x24, [x23, #32]
    12d4:	add	x23, x20, #0x0
    12d8:	str	wzr, [x0, x22]
    12dc:	add	x22, x19, #0x24
    12e0:	ldr	x1, [x23, #40]
    12e4:	str	x21, [x23, #48]
    12e8:	cmp	x1, x22
    12ec:	b.cs	fc0 <llvm_gcda_summary_info+0x1f8>  // b.hs, b.nlast
    12f0:	b	1214 <llvm_gcda_summary_info+0x44c>
    12f4:	add	x1, x19, #0x1b
    12f8:	and	x24, x1, #0xfffffffffffe0000
    12fc:	add	x24, x24, #0x20, lsl #12
    1300:	mov	x1, x24
    1304:	bl	0 <realloc>
    1308:	stp	x0, x24, [x23, #32]
    130c:	add	x23, x20, #0x0
    1310:	str	wzr, [x0, x21]
    1314:	add	x21, x19, #0x20
    1318:	ldr	x1, [x23, #40]
    131c:	str	x22, [x23, #48]
    1320:	cmp	x1, x21
    1324:	b.cs	fa4 <llvm_gcda_summary_info+0x1dc>  // b.hs, b.nlast
    1328:	b	12bc <llvm_gcda_summary_info+0x4f4>
    132c:	ldr	w2, [x22, #64]
    1330:	ldr	w3, [x1, #16]
    1334:	cmp	w2, #0x0
    1338:	cinc	w3, w3, eq  // eq = none
    133c:	b	e78 <llvm_gcda_summary_info+0xb0>
    1340:	adrp	x0, 0 <stderr>
    1344:	adrp	x1, 0 <llvm_writeout_files>
    1348:	ldr	x2, [x22, #8]
    134c:	add	x1, x1, #0x0
    1350:	ldr	x0, [x0]
    1354:	ldp	x19, x20, [sp, #16]
    1358:	ldp	x21, x22, [sp, #32]
    135c:	ldp	x29, x30, [sp], #80
    1360:	ldr	x0, [x0]
    1364:	b	0 <fprintf>

0000000000001368 <llvm_gcda_end_file>:
    1368:	stp	x29, x30, [sp, #-64]!
    136c:	mov	x29, sp
    1370:	stp	x19, x20, [sp, #16]
    1374:	adrp	x19, 0 <llvm_writeout_files>
    1378:	add	x20, x19, #0x0
    137c:	stp	x21, x22, [sp, #32]
    1380:	ldr	x21, [x20, #24]
    1384:	cbz	x21, 1440 <llvm_gcda_end_file+0xd8>
    1388:	ldr	w1, [x20, #16]
    138c:	ldr	x22, [x20, #48]
    1390:	stp	x23, x24, [sp, #48]
    1394:	add	x23, x22, #0x8
    1398:	ldr	x0, [x20, #32]
    139c:	cbz	w1, 13dc <llvm_gcda_end_file+0x74>
    13a0:	ldr	x1, [x20, #40]
    13a4:	cmp	x1, x23
    13a8:	b.cc	1458 <llvm_gcda_end_file+0xf0>  // b.lo, b.ul, b.last
    13ac:	adrp	x1, 0 <llvm_writeout_files>
    13b0:	add	x20, x19, #0x0
    13b4:	mov	x3, x21
    13b8:	mov	x2, #0x1                   	// #1
    13bc:	ldr	x1, [x1]
    13c0:	str	x1, [x0, x22]
    13c4:	mov	x1, x23
    13c8:	str	x23, [x20, #48]
    13cc:	bl	0 <fwrite>
    13d0:	ldr	x0, [x20, #32]
    13d4:	bl	0 <free>
    13d8:	b	1418 <llvm_gcda_end_file+0xb0>
    13dc:	adrp	x3, 0 <llvm_writeout_files>
    13e0:	mov	w2, #0x4                   	// #4
    13e4:	ldr	x1, [x20, #56]
    13e8:	str	x23, [x20, #48]
    13ec:	ldr	x3, [x3]
    13f0:	str	x3, [x0, x22]
    13f4:	bl	0 <msync>
    13f8:	cmn	w0, #0x1
    13fc:	b.eq	1474 <llvm_gcda_end_file+0x10c>  // b.none
    1400:	add	x20, x19, #0x0
    1404:	ldr	x0, [x20, #32]
    1408:	ldr	x1, [x20, #56]
    140c:	bl	0 <munmap>
    1410:	str	xzr, [x20, #32]
    1414:	str	xzr, [x20, #56]
    1418:	add	x20, x19, #0x0
    141c:	ldr	x0, [x20, #24]
    1420:	bl	0 <fflush>
    1424:	adrp	x0, 0 <llvm_writeout_files>
    1428:	ldr	w0, [x0]
    142c:	bl	0 <lprofUnlockFd>
    1430:	ldr	x0, [x20, #24]
    1434:	bl	0 <fclose>
    1438:	ldp	x23, x24, [sp, #48]
    143c:	stp	xzr, xzr, [x20, #24]
    1440:	add	x19, x19, #0x0
    1444:	ldp	x21, x22, [sp, #32]
    1448:	ldr	x0, [x19, #8]
    144c:	ldp	x19, x20, [sp, #16]
    1450:	ldp	x29, x30, [sp], #64
    1454:	b	0 <free>
    1458:	add	x24, x22, #0x7
    145c:	and	x24, x24, #0xfffffffffffe0000
    1460:	add	x24, x24, #0x20, lsl #12
    1464:	mov	x1, x24
    1468:	bl	0 <realloc>
    146c:	stp	x0, x24, [x20, #32]
    1470:	b	13ac <llvm_gcda_end_file+0x44>
    1474:	bl	0 <__errno_location>
    1478:	ldr	w0, [x0]
    147c:	adrp	x1, 0 <stderr>
    1480:	ldr	x21, [x20, #8]
    1484:	ldr	x1, [x1]
    1488:	ldr	x20, [x1]
    148c:	bl	0 <strerror>
    1490:	mov	x2, x21
    1494:	mov	x3, x0
    1498:	adrp	x1, 0 <llvm_writeout_files>
    149c:	mov	x0, x20
    14a0:	add	x1, x1, #0x0
    14a4:	bl	0 <fprintf>
    14a8:	b	1400 <llvm_gcda_end_file+0x98>
    14ac:	nop

00000000000014b0 <llvm_register_writeout_function>:
    14b0:	stp	x29, x30, [sp, #-32]!
    14b4:	mov	x29, sp
    14b8:	str	x19, [sp, #16]
    14bc:	mov	x19, x0
    14c0:	mov	x0, #0x18                  	// #24
    14c4:	bl	0 <malloc>
    14c8:	adrp	x1, 10 <llvm_writeout_files+0x10>
    14cc:	adrp	x2, 0 <llvm_writeout_files>
    14d0:	add	x2, x2, #0x0
    14d4:	stp	x2, x19, [x0]
    14d8:	ldr	x3, [x1]
    14dc:	str	xzr, [x0, #16]
    14e0:	ldr	x2, [x3]
    14e4:	cbz	x2, 1504 <llvm_register_writeout_function+0x54>
    14e8:	ldr	x1, [x1]
    14ec:	ldr	x2, [x3, #8]
    14f0:	ldr	x19, [sp, #16]
    14f4:	str	x0, [x1, #8]
    14f8:	str	x0, [x2, #16]
    14fc:	ldp	x29, x30, [sp], #32
    1500:	ret
    1504:	ldr	x1, [x1]
    1508:	str	x0, [x3]
    150c:	ldr	x19, [sp, #16]
    1510:	str	x0, [x1, #8]
    1514:	ldp	x29, x30, [sp], #32
    1518:	ret
    151c:	nop

0000000000001520 <llvm_register_flush_function>:
    1520:	stp	x29, x30, [sp, #-32]!
    1524:	mov	x29, sp
    1528:	str	x19, [sp, #16]
    152c:	mov	x19, x0
    1530:	mov	x0, #0x18                  	// #24
    1534:	bl	0 <malloc>
    1538:	adrp	x1, 10 <llvm_writeout_files+0x10>
    153c:	adrp	x2, 0 <llvm_writeout_files>
    1540:	add	x2, x2, #0x0
    1544:	stp	x2, x19, [x0]
    1548:	ldr	x3, [x1]
    154c:	str	xzr, [x0, #16]
    1550:	ldr	x2, [x3]
    1554:	cbz	x2, 1574 <llvm_register_flush_function+0x54>
    1558:	ldr	x1, [x1]
    155c:	ldr	x2, [x3, #8]
    1560:	ldr	x19, [sp, #16]
    1564:	str	x0, [x1, #8]
    1568:	str	x0, [x2, #16]
    156c:	ldp	x29, x30, [sp], #32
    1570:	ret
    1574:	ldr	x1, [x1]
    1578:	str	x0, [x3]
    157c:	ldr	x19, [sp, #16]
    1580:	str	x0, [x1, #8]
    1584:	ldp	x29, x30, [sp], #32
    1588:	ret
    158c:	nop

0000000000001590 <__gcov_flush>:
    1590:	stp	x29, x30, [sp, #-32]!
    1594:	adrp	x0, 10 <llvm_writeout_files+0x10>
    1598:	mov	x29, sp
    159c:	ldr	x0, [x0]
    15a0:	str	x19, [sp, #16]
    15a4:	ldr	x19, [x0]
    15a8:	cbz	x19, 15c0 <__gcov_flush+0x30>
    15ac:	nop
    15b0:	ldr	x0, [x19, #8]
    15b4:	blr	x0
    15b8:	ldr	x19, [x19, #16]
    15bc:	cbnz	x19, 15b0 <__gcov_flush+0x20>
    15c0:	ldr	x19, [sp, #16]
    15c4:	ldp	x29, x30, [sp], #32
    15c8:	ret
    15cc:	nop

00000000000015d0 <llvm_gcov_init>:
    15d0:	stp	x29, x30, [sp, #-48]!
    15d4:	mov	x29, sp
    15d8:	stp	x19, x20, [sp, #16]
    15dc:	mov	x20, x1
    15e0:	adrp	x19, 0 <llvm_writeout_files>
    15e4:	cbz	x0, 1624 <llvm_gcov_init+0x54>
    15e8:	str	x21, [sp, #32]
    15ec:	mov	x21, x0
    15f0:	mov	x0, #0x18                  	// #24
    15f4:	bl	0 <malloc>
    15f8:	adrp	x1, 10 <llvm_writeout_files+0x10>
    15fc:	add	x2, x19, #0x0
    1600:	stp	x2, x21, [x0]
    1604:	ldr	x1, [x1]
    1608:	str	xzr, [x0, #16]
    160c:	ldr	x2, [x1]
    1610:	cbz	x2, 16b0 <llvm_gcov_init+0xe0>
    1614:	ldr	x2, [x1, #8]
    1618:	ldr	x21, [sp, #32]
    161c:	str	x0, [x1, #8]
    1620:	str	x0, [x2, #16]
    1624:	cbz	x20, 1658 <llvm_gcov_init+0x88>
    1628:	mov	x0, #0x18                  	// #24
    162c:	bl	0 <malloc>
    1630:	adrp	x1, 10 <llvm_writeout_files+0x10>
    1634:	add	x2, x19, #0x0
    1638:	stp	x2, x20, [x0]
    163c:	ldr	x1, [x1]
    1640:	str	xzr, [x0, #16]
    1644:	ldr	x2, [x1]
    1648:	cbz	x2, 16a4 <llvm_gcov_init+0xd4>
    164c:	ldr	x2, [x1, #8]
    1650:	str	x0, [x1, #8]
    1654:	str	x0, [x2, #16]
    1658:	add	x19, x19, #0x0
    165c:	ldr	w0, [x19, #68]
    1660:	cbz	w0, 1670 <llvm_gcov_init+0xa0>
    1664:	ldp	x19, x20, [sp, #16]
    1668:	ldp	x29, x30, [sp], #48
    166c:	ret
    1670:	mov	w1, #0x1                   	// #1
    1674:	adrp	x0, 68 <llvm_delete_flush_function_list>
    1678:	add	x0, x0, #0x0
    167c:	str	w1, [x19, #68]
    1680:	bl	0 <atexit>
    1684:	adrp	x0, 110 <llvm_delete_writeout_function_list>
    1688:	add	x0, x0, #0x0
    168c:	bl	0 <atexit>
    1690:	ldp	x19, x20, [sp, #16]
    1694:	adrp	x0, 0 <llvm_writeout_files>
    1698:	ldp	x29, x30, [sp], #48
    169c:	add	x0, x0, #0x0
    16a0:	b	0 <atexit>
    16a4:	dup	v0.2d, x0
    16a8:	str	q0, [x1]
    16ac:	b	1658 <llvm_gcov_init+0x88>
    16b0:	dup	v0.2d, x0
    16b4:	ldr	x21, [sp, #32]
    16b8:	str	q0, [x1]
    16bc:	b	1624 <llvm_gcov_init+0x54>

InstrProfiling.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__llvm_profile_get_magic>:
   0:	mov	x0, #0x7281                	// #29313
   4:	movk	x0, #0x6f66, lsl #16
   8:	movk	x0, #0x7072, lsl #32
   c:	movk	x0, #0xff6c, lsl #48
  10:	ret
  14:	nop

0000000000000018 <lprofProfileDumped>:
  18:	adrp	x0, 0 <__llvm_profile_get_magic>
  1c:	ldr	w0, [x0]
  20:	ret
  24:	nop

0000000000000028 <lprofSetProfileDumped>:
  28:	adrp	x0, 0 <__llvm_profile_get_magic>
  2c:	mov	w1, #0x1                   	// #1
  30:	str	w1, [x0]
  34:	ret

0000000000000038 <__llvm_profile_set_dumped>:
  38:	adrp	x0, 0 <__llvm_profile_get_magic>
  3c:	mov	w1, #0x1                   	// #1
  40:	str	w1, [x0]
  44:	ret

0000000000000048 <__llvm_profile_get_num_padding_bytes>:
  48:	neg	w0, w0
  4c:	and	w0, w0, #0x7
  50:	ret
  54:	nop

0000000000000058 <__llvm_profile_get_version>:
  58:	adrp	x0, 0 <__llvm_profile_get_magic>
  5c:	ldr	x0, [x0]
  60:	ldr	x0, [x0]
  64:	ret

0000000000000068 <__llvm_profile_reset_counters>:
  68:	stp	x29, x30, [sp, #-32]!
  6c:	mov	x29, sp
  70:	str	x19, [sp, #16]
  74:	bl	0 <__llvm_profile_begin_counters>
  78:	mov	x19, x0
  7c:	bl	0 <__llvm_profile_end_counters>
  80:	sub	x2, x0, x19
  84:	mov	w1, #0x0                   	// #0
  88:	mov	x0, x19
  8c:	bl	0 <memset>
  90:	bl	0 <__llvm_profile_begin_data>
  94:	mov	x19, x0
  98:	bl	0 <__llvm_profile_end_data>
  9c:	cmp	x19, x0
  a0:	b.cs	f8 <__llvm_profile_reset_counters+0x90>  // b.hs, b.nlast
  a4:	mov	x4, x0
  a8:	ldr	x3, [x19, #32]
  ac:	cbz	x3, ec <__llvm_profile_reset_counters+0x84>
  b0:	ldrh	w2, [x19, #44]
  b4:	ldrh	w0, [x19, #46]
  b8:	adds	x2, x2, x0
  bc:	b.eq	ec <__llvm_profile_reset_counters+0x84>  // b.none
  c0:	mov	w1, #0x0                   	// #0
  c4:	mov	x0, #0x0                   	// #0
  c8:	ldr	x0, [x3, x0, lsl #3]
  cc:	cbz	x0, dc <__llvm_profile_reset_counters+0x74>
  d0:	str	xzr, [x0, #8]
  d4:	ldr	x0, [x0, #16]
  d8:	cbnz	x0, d0 <__llvm_profile_reset_counters+0x68>
  dc:	add	w0, w1, #0x1
  e0:	mov	x1, x0
  e4:	cmp	x2, w0, uxtw
  e8:	b.hi	c8 <__llvm_profile_reset_counters+0x60>  // b.pmore
  ec:	add	x19, x19, #0x30
  f0:	cmp	x4, x19
  f4:	b.hi	a8 <__llvm_profile_reset_counters+0x40>  // b.pmore
  f8:	adrp	x0, 0 <__llvm_profile_get_magic>
  fc:	ldr	x19, [sp, #16]
 100:	str	wzr, [x0]
 104:	ldp	x29, x30, [sp], #32
 108:	ret

InstrProfilingValue.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <getValueProfRecordHeaderSize>:
       0:	add	w0, w0, #0xf
       4:	and	w0, w0, #0xfffffff8
       8:	ret
       c:	nop

0000000000000010 <getFirstValueProfRecord>:
      10:	add	x0, x0, #0x8
      14:	ret

0000000000000018 <getNumValueSitesRT>:
      18:	ldr	x0, [x0]
      1c:	add	x1, x0, w1, uxtw #1
      20:	ldrh	w0, [x1, #44]
      24:	ret

0000000000000028 <getNumValueDataRT>:
      28:	ldr	x2, [x0, #24]
      2c:	mov	w1, w1
      30:	ldr	x4, [x2, x1, lsl #3]
      34:	cbz	x4, 1d8 <getNumValueDataRT+0x1b0>
      38:	ldr	x0, [x0]
      3c:	add	x1, x0, x1, lsl #1
      40:	ldrh	w0, [x1, #44]
      44:	cbz	w0, 1cc <getNumValueDataRT+0x1a4>
      48:	sub	w1, w0, #0x1
      4c:	cmp	w1, #0xe
      50:	b.ls	1e0 <getNumValueDataRT+0x1b8>  // b.plast
      54:	lsr	w3, w0, #4
      58:	add	x2, x4, #0x10
      5c:	sub	w3, w3, #0x1
      60:	mov	x1, x4
      64:	movi	v2.4s, #0x0
      68:	add	x2, x2, w3, uxtw #4
      6c:	nop
      70:	ldr	q1, [x1], #16
      74:	uxtl	v3.8h, v1.8b
      78:	cmp	x1, x2
      7c:	uxtl2	v1.8h, v1.16b
      80:	uxtl2	v0.4s, v3.8h
      84:	uaddw	v0.4s, v0.4s, v3.4h
      88:	uaddw	v0.4s, v0.4s, v1.4h
      8c:	uaddw2	v0.4s, v0.4s, v1.8h
      90:	add	v2.4s, v2.4s, v0.4s
      94:	b.ne	70 <getNumValueDataRT+0x48>  // b.any
      98:	addv	s2, v2.4s
      9c:	tst	x0, #0xf
      a0:	and	w1, w0, #0xfffffff0
      a4:	b.eq	1ec <getNumValueDataRT+0x1c4>  // b.none
      a8:	fmov	w5, s2
      ac:	ldrb	w2, [x4, w1, uxtw]
      b0:	add	w3, w1, #0x1
      b4:	cmp	w3, w0
      b8:	add	w2, w2, w5
      bc:	b.cs	1d0 <getNumValueDataRT+0x1a8>  // b.hs, b.nlast
      c0:	ldrb	w3, [x4, w3, uxtw]
      c4:	add	w5, w1, #0x2
      c8:	cmp	w0, w5
      cc:	add	w2, w3, w2
      d0:	b.ls	1d0 <getNumValueDataRT+0x1a8>  // b.plast
      d4:	ldrb	w3, [x4, w5, uxtw]
      d8:	add	w5, w1, #0x3
      dc:	cmp	w0, w5
      e0:	add	w2, w3, w2
      e4:	b.ls	1d0 <getNumValueDataRT+0x1a8>  // b.plast
      e8:	ldrb	w3, [x4, w5, uxtw]
      ec:	add	w5, w1, #0x4
      f0:	cmp	w0, w5
      f4:	add	w2, w3, w2
      f8:	b.ls	1d0 <getNumValueDataRT+0x1a8>  // b.plast
      fc:	ldrb	w3, [x4, w5, uxtw]
     100:	add	w5, w1, #0x5
     104:	cmp	w0, w5
     108:	add	w2, w3, w2
     10c:	b.ls	1d0 <getNumValueDataRT+0x1a8>  // b.plast
     110:	ldrb	w3, [x4, w5, uxtw]
     114:	add	w5, w1, #0x6
     118:	cmp	w0, w5
     11c:	add	w2, w3, w2
     120:	b.ls	1d0 <getNumValueDataRT+0x1a8>  // b.plast
     124:	ldrb	w3, [x4, w5, uxtw]
     128:	add	w5, w1, #0x7
     12c:	cmp	w0, w5
     130:	add	w2, w3, w2
     134:	b.ls	1d0 <getNumValueDataRT+0x1a8>  // b.plast
     138:	ldrb	w3, [x4, w5, uxtw]
     13c:	add	w5, w1, #0x8
     140:	cmp	w0, w5
     144:	add	w2, w3, w2
     148:	b.ls	1d0 <getNumValueDataRT+0x1a8>  // b.plast
     14c:	ldrb	w3, [x4, w5, uxtw]
     150:	add	w5, w1, #0x9
     154:	cmp	w0, w5
     158:	add	w2, w3, w2
     15c:	b.ls	1d0 <getNumValueDataRT+0x1a8>  // b.plast
     160:	ldrb	w3, [x4, w5, uxtw]
     164:	add	w5, w1, #0xa
     168:	cmp	w0, w5
     16c:	add	w2, w3, w2
     170:	b.ls	1d0 <getNumValueDataRT+0x1a8>  // b.plast
     174:	ldrb	w3, [x4, w5, uxtw]
     178:	add	w5, w1, #0xb
     17c:	cmp	w0, w5
     180:	add	w2, w3, w2
     184:	b.ls	1d0 <getNumValueDataRT+0x1a8>  // b.plast
     188:	ldrb	w3, [x4, w5, uxtw]
     18c:	add	w5, w1, #0xc
     190:	cmp	w0, w5
     194:	add	w2, w3, w2
     198:	b.ls	1d0 <getNumValueDataRT+0x1a8>  // b.plast
     19c:	ldrb	w3, [x4, w5, uxtw]
     1a0:	add	w5, w1, #0xd
     1a4:	cmp	w0, w5
     1a8:	add	w2, w3, w2
     1ac:	b.ls	1d0 <getNumValueDataRT+0x1a8>  // b.plast
     1b0:	ldrb	w3, [x4, w5, uxtw]
     1b4:	add	w1, w1, #0xe
     1b8:	cmp	w0, w1
     1bc:	add	w2, w3, w2
     1c0:	b.ls	1d0 <getNumValueDataRT+0x1a8>  // b.plast
     1c4:	ldrb	w0, [x4, w1, uxtw]
     1c8:	add	w0, w0, w2
     1cc:	ret
     1d0:	mov	w0, w2
     1d4:	ret
     1d8:	mov	w0, #0x0                   	// #0
     1dc:	ret
     1e0:	mov	w1, #0x0                   	// #0
     1e4:	fmov	s2, wzr
     1e8:	b	a8 <getNumValueDataRT+0x80>
     1ec:	fmov	w0, s2
     1f0:	ret
     1f4:	nop

00000000000001f8 <getNumValueDataForSiteRT>:
     1f8:	ldr	x0, [x0, #24]
     1fc:	ldr	x0, [x0, w1, uxtw #3]
     200:	ldrb	w0, [x0, w2, uxtw]
     204:	ret

0000000000000208 <initializeValueProfRuntimeRecord>:
     208:	adrp	x3, 0 <getValueProfRecordHeaderSize>
     20c:	add	x2, x3, #0x0
     210:	mov	x5, x2
     214:	mov	x8, x2
     218:	add	x12, x0, #0x2c
     21c:	str	x0, [x3]
     220:	mov	x6, #0x0                   	// #0
     224:	mov	w11, #0x0                   	// #0
     228:	mov	w10, #0xff                  	// #255
     22c:	str	x1, [x2, #24]
     230:	ldr	x7, [x0, #32]
     234:	mov	w0, #0x0                   	// #0
     238:	ldrh	w4, [x12, x6]
     23c:	cbnz	w4, 254 <initializeValueProfRuntimeRecord+0x4c>
     240:	add	x6, x6, #0x2
     244:	add	x5, x5, #0x8
     248:	cmp	x6, #0x4
     24c:	b.ne	238 <initializeValueProfRuntimeRecord+0x30>  // b.any
     250:	ret
     254:	cmp	x7, #0x0
     258:	add	x1, x7, w11, uxtw #3
     25c:	add	w0, w0, #0x1
     260:	lsl	x9, x6, #2
     264:	csel	x1, x1, xzr, ne  // ne = any
     268:	mov	x3, #0x0                   	// #0
     26c:	str	x1, [x5, #8]
     270:	mov	w2, #0x0                   	// #0
     274:	cbz	x7, 2a0 <initializeValueProfRuntimeRecord+0x98>
     278:	ldr	x1, [x5, #8]
     27c:	ldr	x1, [x1, x3, lsl #3]
     280:	cbz	x1, 2a0 <initializeValueProfRuntimeRecord+0x98>
     284:	nop
     288:	ldr	x1, [x1, #16]
     28c:	add	w2, w2, #0x1
     290:	cbnz	x1, 288 <initializeValueProfRuntimeRecord+0x80>
     294:	cmp	w2, #0xff
     298:	csel	w2, w2, w10, ls  // ls = plast
     29c:	and	w2, w2, #0xff
     2a0:	ldr	x1, [x8, #24]
     2a4:	ldr	x1, [x1, x9]
     2a8:	strb	w2, [x1, x3]
     2ac:	add	x3, x3, #0x1
     2b0:	cmp	w4, w3
     2b4:	b.hi	270 <initializeValueProfRuntimeRecord+0x68>  // b.pmore
     2b8:	add	w11, w11, w4
     2bc:	b	240 <initializeValueProfRuntimeRecord+0x38>

00000000000002c0 <getNextNValueData>:
     2c0:	mov	w5, w0
     2c4:	mov	x0, x3
     2c8:	cbz	x3, 2f8 <getNextNValueData+0x38>
     2cc:	cbz	w4, 2f4 <getNextNValueData+0x34>
     2d0:	sub	w4, w4, #0x1
     2d4:	add	x1, x2, #0x10
     2d8:	add	x1, x1, w4, uxtw #4
     2dc:	nop
     2e0:	ldr	q0, [x0]
     2e4:	ldr	x0, [x0, #16]
     2e8:	str	q0, [x2], #16
     2ec:	cmp	x2, x1
     2f0:	b.ne	2e0 <getNextNValueData+0x20>  // b.any
     2f4:	ret
     2f8:	adrp	x0, 0 <getValueProfRecordHeaderSize>
     2fc:	add	x0, x0, #0x0
     300:	add	x0, x0, w5, uxtw #3
     304:	ldr	x0, [x0, #8]
     308:	ldr	x0, [x0, w1, uxtw #3]
     30c:	b	2cc <getNextNValueData+0xc>

0000000000000310 <getNumValueDataForSiteWrapper>:
     310:	adrp	x2, 0 <getValueProfRecordHeaderSize>
     314:	ldr	x2, [x2]
     318:	ldr	x0, [x2, w0, uxtw #3]
     31c:	ldrb	w0, [x0, w1, uxtw]
     320:	ret
     324:	nop

0000000000000328 <getValueProfDataSizeWrapper>:
     328:	stp	x29, x30, [sp, #-64]!
     32c:	adrp	x0, 0 <getValueProfRecordHeaderSize>
     330:	mov	x29, sp
     334:	stp	x21, x22, [sp, #32]
     338:	mov	w21, #0x0                   	// #0
     33c:	ldr	x22, [x0]
     340:	str	x23, [sp, #48]
     344:	add	x23, x0, #0x0
     348:	stp	x19, x20, [sp, #16]
     34c:	mov	w20, #0x8                   	// #8
     350:	ldr	x2, [x23, #16]
     354:	mov	w1, w21
     358:	mov	x0, x22
     35c:	blr	x2
     360:	mov	w19, w0
     364:	mov	w1, w21
     368:	mov	x0, x22
     36c:	cbz	w19, 388 <getValueProfDataSizeWrapper+0x60>
     370:	ldr	x2, [x23, #24]
     374:	add	w19, w19, #0xf
     378:	and	w19, w19, #0xfffffff8
     37c:	add	w20, w19, w20
     380:	blr	x2
     384:	add	w20, w20, w0, lsl #4
     388:	cbz	w21, 3a4 <getValueProfDataSizeWrapper+0x7c>
     38c:	mov	w0, w20
     390:	ldp	x19, x20, [sp, #16]
     394:	ldp	x21, x22, [sp, #32]
     398:	ldr	x23, [sp, #48]
     39c:	ldp	x29, x30, [sp], #64
     3a0:	ret
     3a4:	mov	w21, #0x1                   	// #1
     3a8:	b	350 <getValueProfDataSizeWrapper+0x28>
     3ac:	nop

00000000000003b0 <getValueProfRecordSize>:
     3b0:	add	w0, w0, #0xf
     3b4:	and	w0, w0, #0xfffffff8
     3b8:	add	w0, w0, w1, lsl #4
     3bc:	ret

00000000000003c0 <getValueProfRecordValueData>:
     3c0:	ldr	w1, [x0, #4]
     3c4:	add	w1, w1, #0xf
     3c8:	and	x1, x1, #0xfffffff8
     3cc:	add	x0, x0, x1
     3d0:	ret
     3d4:	nop

00000000000003d8 <getValueProfRecordNumValueData>:
     3d8:	mov	x2, x0
     3dc:	ldr	w0, [x0, #4]
     3e0:	cbz	w0, 5a0 <getValueProfRecordNumValueData+0x1c8>
     3e4:	sub	w1, w0, #0x1
     3e8:	cmp	w1, #0xe
     3ec:	b.ls	5ac <getValueProfRecordNumValueData+0x1d4>  // b.plast
     3f0:	lsr	w4, w0, #4
     3f4:	add	x3, x2, #0x18
     3f8:	sub	w4, w4, #0x1
     3fc:	add	x1, x2, #0x8
     400:	movi	v2.4s, #0x0
     404:	add	x3, x3, w4, uxtw #4
     408:	ldr	q1, [x1], #16
     40c:	uxtl	v3.8h, v1.8b
     410:	cmp	x1, x3
     414:	uxtl2	v1.8h, v1.16b
     418:	uxtl2	v0.4s, v3.8h
     41c:	uaddw	v0.4s, v0.4s, v3.4h
     420:	uaddw	v0.4s, v0.4s, v1.4h
     424:	uaddw2	v0.4s, v0.4s, v1.8h
     428:	add	v2.4s, v2.4s, v0.4s
     42c:	b.ne	408 <getValueProfRecordNumValueData+0x30>  // b.any
     430:	addv	s2, v2.4s
     434:	tst	x0, #0xf
     438:	and	w1, w0, #0xfffffff0
     43c:	b.eq	5b8 <getValueProfRecordNumValueData+0x1e0>  // b.none
     440:	add	x4, x2, w1, uxtw
     444:	add	w3, w1, #0x1
     448:	cmp	w3, w0
     44c:	ldrb	w5, [x4, #8]
     450:	fmov	w4, s2
     454:	add	w5, w5, w4
     458:	b.cs	5a4 <getValueProfRecordNumValueData+0x1cc>  // b.hs, b.nlast
     45c:	add	x3, x2, w3, uxtw
     460:	add	w4, w1, #0x2
     464:	cmp	w0, w4
     468:	ldrb	w3, [x3, #8]
     46c:	add	w5, w3, w5
     470:	b.ls	5a4 <getValueProfRecordNumValueData+0x1cc>  // b.plast
     474:	add	x4, x2, w4, uxtw
     478:	add	w3, w1, #0x3
     47c:	cmp	w0, w3
     480:	ldrb	w4, [x4, #8]
     484:	add	w5, w4, w5
     488:	b.ls	5a4 <getValueProfRecordNumValueData+0x1cc>  // b.plast
     48c:	add	x3, x2, w3, uxtw
     490:	add	w4, w1, #0x4
     494:	cmp	w0, w4
     498:	ldrb	w3, [x3, #8]
     49c:	add	w5, w3, w5
     4a0:	b.ls	5a4 <getValueProfRecordNumValueData+0x1cc>  // b.plast
     4a4:	add	x4, x2, w4, uxtw
     4a8:	add	w3, w1, #0x5
     4ac:	cmp	w0, w3
     4b0:	ldrb	w4, [x4, #8]
     4b4:	add	w5, w4, w5
     4b8:	b.ls	5a4 <getValueProfRecordNumValueData+0x1cc>  // b.plast
     4bc:	add	x3, x2, w3, uxtw
     4c0:	add	w4, w1, #0x6
     4c4:	cmp	w0, w4
     4c8:	ldrb	w3, [x3, #8]
     4cc:	add	w5, w3, w5
     4d0:	b.ls	5a4 <getValueProfRecordNumValueData+0x1cc>  // b.plast
     4d4:	add	x4, x2, w4, uxtw
     4d8:	add	w3, w1, #0x7
     4dc:	cmp	w0, w3
     4e0:	ldrb	w4, [x4, #8]
     4e4:	add	w5, w4, w5
     4e8:	b.ls	5a4 <getValueProfRecordNumValueData+0x1cc>  // b.plast
     4ec:	add	x3, x2, w3, uxtw
     4f0:	add	w4, w1, #0x8
     4f4:	cmp	w0, w4
     4f8:	ldrb	w3, [x3, #8]
     4fc:	add	w5, w3, w5
     500:	b.ls	5a4 <getValueProfRecordNumValueData+0x1cc>  // b.plast
     504:	add	x4, x2, w4, uxtw
     508:	add	w3, w1, #0x9
     50c:	cmp	w0, w3
     510:	ldrb	w4, [x4, #8]
     514:	add	w5, w4, w5
     518:	b.ls	5a4 <getValueProfRecordNumValueData+0x1cc>  // b.plast
     51c:	add	x3, x2, w3, uxtw
     520:	add	w4, w1, #0xa
     524:	cmp	w0, w4
     528:	ldrb	w3, [x3, #8]
     52c:	add	w5, w3, w5
     530:	b.ls	5a4 <getValueProfRecordNumValueData+0x1cc>  // b.plast
     534:	add	x4, x2, w4, uxtw
     538:	add	w3, w1, #0xb
     53c:	cmp	w0, w3
     540:	ldrb	w4, [x4, #8]
     544:	add	w5, w4, w5
     548:	b.ls	5a4 <getValueProfRecordNumValueData+0x1cc>  // b.plast
     54c:	add	x3, x2, w3, uxtw
     550:	add	w4, w1, #0xc
     554:	cmp	w0, w4
     558:	ldrb	w3, [x3, #8]
     55c:	add	w5, w3, w5
     560:	b.ls	5a4 <getValueProfRecordNumValueData+0x1cc>  // b.plast
     564:	add	x4, x2, w4, uxtw
     568:	add	w3, w1, #0xd
     56c:	cmp	w0, w3
     570:	ldrb	w4, [x4, #8]
     574:	add	w5, w4, w5
     578:	b.ls	5a4 <getValueProfRecordNumValueData+0x1cc>  // b.plast
     57c:	add	x3, x2, w3, uxtw
     580:	add	w1, w1, #0xe
     584:	cmp	w0, w1
     588:	ldrb	w0, [x3, #8]
     58c:	add	w5, w0, w5
     590:	b.ls	5a4 <getValueProfRecordNumValueData+0x1cc>  // b.plast
     594:	add	x1, x2, w1, uxtw
     598:	ldrb	w0, [x1, #8]
     59c:	add	w0, w0, w5
     5a0:	ret
     5a4:	mov	w0, w5
     5a8:	ret
     5ac:	mov	w1, #0x0                   	// #0
     5b0:	fmov	s2, wzr
     5b4:	b	440 <getValueProfRecordNumValueData+0x68>
     5b8:	fmov	w0, s2
     5bc:	ret

00000000000005c0 <getValueProfRecordNext>:
     5c0:	ldr	w2, [x0, #4]
     5c4:	cbz	w2, 79c <getValueProfRecordNext+0x1dc>
     5c8:	sub	w1, w2, #0x1
     5cc:	cmp	w1, #0xe
     5d0:	b.ls	7a8 <getValueProfRecordNext+0x1e8>  // b.plast
     5d4:	lsr	w4, w2, #4
     5d8:	add	x1, x0, #0x18
     5dc:	sub	w4, w4, #0x1
     5e0:	add	x3, x0, #0x8
     5e4:	movi	v3.4s, #0x0
     5e8:	add	x1, x1, w4, uxtw #4
     5ec:	nop
     5f0:	ldr	q1, [x3], #16
     5f4:	uxtl	v2.8h, v1.8b
     5f8:	cmp	x3, x1
     5fc:	uxtl2	v1.8h, v1.16b
     600:	uxtl	v0.4s, v2.4h
     604:	uaddw2	v0.4s, v0.4s, v2.8h
     608:	uaddw	v0.4s, v0.4s, v1.4h
     60c:	uaddw2	v0.4s, v0.4s, v1.8h
     610:	add	v3.4s, v3.4s, v0.4s
     614:	b.ne	5f0 <getValueProfRecordNext+0x30>  // b.any
     618:	addv	s3, v3.4s
     61c:	tst	x2, #0xf
     620:	and	w3, w2, #0xfffffff0
     624:	mov	w1, v3.s[0]
     628:	b.eq	788 <getValueProfRecordNext+0x1c8>  // b.none
     62c:	add	x5, x0, w3, uxtw
     630:	add	w4, w3, #0x1
     634:	cmp	w4, w2
     638:	ldrb	w5, [x5, #8]
     63c:	add	w1, w1, w5
     640:	b.cs	788 <getValueProfRecordNext+0x1c8>  // b.hs, b.nlast
     644:	add	x4, x0, w4, uxtw
     648:	add	w5, w3, #0x2
     64c:	cmp	w2, w5
     650:	ldrb	w4, [x4, #8]
     654:	add	w1, w1, w4
     658:	b.ls	788 <getValueProfRecordNext+0x1c8>  // b.plast
     65c:	add	x5, x0, w5, uxtw
     660:	add	w4, w3, #0x3
     664:	cmp	w2, w4
     668:	ldrb	w5, [x5, #8]
     66c:	add	w1, w1, w5
     670:	b.ls	788 <getValueProfRecordNext+0x1c8>  // b.plast
     674:	add	x4, x0, w4, uxtw
     678:	add	w5, w3, #0x4
     67c:	cmp	w2, w5
     680:	ldrb	w4, [x4, #8]
     684:	add	w1, w1, w4
     688:	b.ls	788 <getValueProfRecordNext+0x1c8>  // b.plast
     68c:	add	x5, x0, w5, uxtw
     690:	add	w4, w3, #0x5
     694:	cmp	w2, w4
     698:	ldrb	w5, [x5, #8]
     69c:	add	w1, w1, w5
     6a0:	b.ls	788 <getValueProfRecordNext+0x1c8>  // b.plast
     6a4:	add	x4, x0, w4, uxtw
     6a8:	add	w5, w3, #0x6
     6ac:	cmp	w2, w5
     6b0:	ldrb	w4, [x4, #8]
     6b4:	add	w1, w1, w4
     6b8:	b.ls	788 <getValueProfRecordNext+0x1c8>  // b.plast
     6bc:	add	x5, x0, w5, uxtw
     6c0:	add	w4, w3, #0x7
     6c4:	cmp	w2, w4
     6c8:	ldrb	w5, [x5, #8]
     6cc:	add	w1, w1, w5
     6d0:	b.ls	788 <getValueProfRecordNext+0x1c8>  // b.plast
     6d4:	add	x4, x0, w4, uxtw
     6d8:	add	w5, w3, #0x8
     6dc:	cmp	w2, w5
     6e0:	ldrb	w4, [x4, #8]
     6e4:	add	w1, w1, w4
     6e8:	b.ls	788 <getValueProfRecordNext+0x1c8>  // b.plast
     6ec:	add	x5, x0, w5, uxtw
     6f0:	add	w4, w3, #0x9
     6f4:	cmp	w2, w4
     6f8:	ldrb	w5, [x5, #8]
     6fc:	add	w1, w1, w5
     700:	b.ls	788 <getValueProfRecordNext+0x1c8>  // b.plast
     704:	add	x4, x0, w4, uxtw
     708:	add	w5, w3, #0xa
     70c:	cmp	w2, w5
     710:	ldrb	w4, [x4, #8]
     714:	add	w1, w1, w4
     718:	b.ls	788 <getValueProfRecordNext+0x1c8>  // b.plast
     71c:	add	x5, x0, w5, uxtw
     720:	add	w4, w3, #0xb
     724:	cmp	w2, w4
     728:	ldrb	w5, [x5, #8]
     72c:	add	w1, w1, w5
     730:	b.ls	788 <getValueProfRecordNext+0x1c8>  // b.plast
     734:	add	x4, x0, w4, uxtw
     738:	add	w5, w3, #0xc
     73c:	cmp	w2, w5
     740:	ldrb	w4, [x4, #8]
     744:	add	w1, w1, w4
     748:	b.ls	788 <getValueProfRecordNext+0x1c8>  // b.plast
     74c:	add	x5, x0, w5, uxtw
     750:	add	w4, w3, #0xd
     754:	cmp	w2, w4
     758:	ldrb	w5, [x5, #8]
     75c:	add	w1, w1, w5
     760:	b.ls	788 <getValueProfRecordNext+0x1c8>  // b.plast
     764:	add	x4, x0, w4, uxtw
     768:	add	w3, w3, #0xe
     76c:	cmp	w2, w3
     770:	ldrb	w4, [x4, #8]
     774:	add	w1, w1, w4
     778:	b.ls	788 <getValueProfRecordNext+0x1c8>  // b.plast
     77c:	add	x3, x0, w3, uxtw
     780:	ldrb	w3, [x3, #8]
     784:	add	w1, w1, w3
     788:	add	w2, w2, #0xf
     78c:	and	w2, w2, #0xfffffff8
     790:	add	w1, w2, w1, lsl #4
     794:	add	x0, x0, x1
     798:	ret
     79c:	mov	x1, #0x8                   	// #8
     7a0:	add	x0, x0, x1
     7a4:	ret
     7a8:	mov	w1, #0x0                   	// #0
     7ac:	mov	w3, #0x0                   	// #0
     7b0:	b	62c <getValueProfRecordNext+0x6c>
     7b4:	nop

00000000000007b8 <getValueProfDataSize>:
     7b8:	stp	x29, x30, [sp, #-64]!
     7bc:	mov	x29, sp
     7c0:	stp	x21, x22, [sp, #32]
     7c4:	mov	x21, x0
     7c8:	stp	x19, x20, [sp, #16]
     7cc:	mov	w20, #0x0                   	// #0
     7d0:	ldr	x22, [x0]
     7d4:	str	x23, [sp, #48]
     7d8:	mov	w23, #0x8                   	// #8
     7dc:	ldr	x2, [x21, #16]
     7e0:	mov	w1, w20
     7e4:	mov	x0, x22
     7e8:	blr	x2
     7ec:	mov	w19, w0
     7f0:	mov	w1, w20
     7f4:	mov	x0, x22
     7f8:	cbz	w19, 814 <getValueProfDataSize+0x5c>
     7fc:	ldr	x2, [x21, #24]
     800:	add	w19, w19, #0xf
     804:	and	w19, w19, #0xfffffff8
     808:	add	w19, w19, w23
     80c:	blr	x2
     810:	add	w23, w19, w0, lsl #4
     814:	cbz	w20, 830 <getValueProfDataSize+0x78>
     818:	mov	w0, w23
     81c:	ldp	x19, x20, [sp, #16]
     820:	ldp	x21, x22, [sp, #32]
     824:	ldr	x23, [sp, #48]
     828:	ldp	x29, x30, [sp], #64
     82c:	ret
     830:	mov	w20, #0x1                   	// #1
     834:	b	7dc <getValueProfDataSize+0x24>

0000000000000838 <serializeValueProfRecordFrom>:
     838:	stp	x29, x30, [sp, #-80]!
     83c:	mov	x29, sp
     840:	stp	x21, x22, [sp, #32]
     844:	add	w21, w3, #0xf
     848:	and	x21, x21, #0xfffffff8
     84c:	stp	x23, x24, [sp, #48]
     850:	add	x21, x0, x21
     854:	ldr	x24, [x1]
     858:	stp	w2, w3, [x0]
     85c:	cbz	w3, 8d4 <serializeValueProfRecordFrom+0x9c>
     860:	mov	x22, x1
     864:	mov	w23, w2
     868:	stp	x25, x26, [sp, #64]
     86c:	sub	w26, w3, #0x1
     870:	add	x25, x0, #0x8
     874:	stp	x19, x20, [sp, #16]
     878:	mov	x20, #0x0                   	// #0
     87c:	nop
     880:	mov	w2, w20
     884:	ldr	x3, [x22, #32]
     888:	mov	w1, w23
     88c:	mov	x0, x24
     890:	blr	x3
     894:	strb	w0, [x25, x20]
     898:	mov	w19, w0
     89c:	mov	w3, w20
     8a0:	ldr	x4, [x22, #48]
     8a4:	mov	x1, x21
     8a8:	mov	x0, x24
     8ac:	mov	w2, w23
     8b0:	ubfiz	x19, x19, #4, #32
     8b4:	blr	x4
     8b8:	add	x21, x21, x19
     8bc:	mov	x0, x20
     8c0:	add	x20, x20, #0x1
     8c4:	cmp	x26, x0
     8c8:	b.ne	880 <serializeValueProfRecordFrom+0x48>  // b.any
     8cc:	ldp	x19, x20, [sp, #16]
     8d0:	ldp	x25, x26, [sp, #64]
     8d4:	ldp	x21, x22, [sp, #32]
     8d8:	ldp	x23, x24, [sp, #48]
     8dc:	ldp	x29, x30, [sp], #80
     8e0:	ret
     8e4:	nop

00000000000008e8 <serializeValueProfDataFrom>:
     8e8:	stp	x29, x30, [sp, #-96]!
     8ec:	mov	x29, sp
     8f0:	stp	x19, x20, [sp, #16]
     8f4:	stp	x21, x22, [sp, #32]
     8f8:	stp	x25, x26, [sp, #64]
     8fc:	stp	x27, x28, [sp, #80]
     900:	mov	x27, x0
     904:	ldr	x20, [x0]
     908:	cbz	x1, bcc <serializeValueProfDataFrom+0x2e4>
     90c:	ldr	w19, [x1]
     910:	mov	x26, x1
     914:	ldr	x1, [x27, #8]
     918:	str	w19, [x26]
     91c:	mov	x0, x20
     920:	mov	w22, #0x0                   	// #0
     924:	add	x25, x26, #0x8
     928:	blr	x1
     92c:	str	w0, [x26, #4]
     930:	ldr	x0, [x27]
     934:	mov	w1, w22
     938:	ldr	x2, [x27, #16]
     93c:	blr	x2
     940:	mov	w28, w0
     944:	cbnz	w0, 968 <serializeValueProfDataFrom+0x80>
     948:	cbnz	w22, ba8 <serializeValueProfDataFrom+0x2c0>
     94c:	ldr	x0, [x27]
     950:	mov	w22, #0x1                   	// #1
     954:	ldr	x2, [x27, #16]
     958:	mov	w1, w22
     95c:	blr	x2
     960:	mov	w28, w0
     964:	cbz	w0, 948 <serializeValueProfDataFrom+0x60>
     968:	add	w21, w0, #0xf
     96c:	stp	x23, x24, [sp, #48]
     970:	and	x21, x21, #0xfffffff8
     974:	add	x23, x25, #0x8
     978:	add	x21, x25, x21
     97c:	mov	x20, #0x0                   	// #0
     980:	ldr	x24, [x27]
     984:	stp	w22, w0, [x25]
     988:	ldr	x3, [x27, #32]
     98c:	mov	w2, w20
     990:	mov	w1, w22
     994:	mov	x0, x24
     998:	blr	x3
     99c:	strb	w0, [x23, x20]
     9a0:	mov	w19, w0
     9a4:	mov	w3, w20
     9a8:	ldr	x4, [x27, #48]
     9ac:	mov	x1, x21
     9b0:	mov	w2, w22
     9b4:	add	x20, x20, #0x1
     9b8:	mov	x0, x24
     9bc:	ubfiz	x19, x19, #4, #32
     9c0:	blr	x4
     9c4:	add	x21, x21, x19
     9c8:	cmp	w28, w20
     9cc:	b.hi	988 <serializeValueProfDataFrom+0xa0>  // b.pmore
     9d0:	ldr	w1, [x25, #4]
     9d4:	cbz	w1, bc4 <serializeValueProfDataFrom+0x2dc>
     9d8:	sub	w0, w1, #0x1
     9dc:	cmp	w0, #0xe
     9e0:	b.ls	c30 <serializeValueProfDataFrom+0x348>  // b.plast
     9e4:	lsr	w2, w1, #4
     9e8:	add	x0, x25, #0x18
     9ec:	movi	v3.4s, #0x0
     9f0:	sub	w2, w2, #0x1
     9f4:	add	x0, x0, w2, uxtw #4
     9f8:	ldr	q1, [x23], #16
     9fc:	uxtl	v2.8h, v1.8b
     a00:	cmp	x23, x0
     a04:	uxtl2	v1.8h, v1.16b
     a08:	uxtl2	v0.4s, v2.8h
     a0c:	uaddw	v0.4s, v0.4s, v2.4h
     a10:	uaddw	v0.4s, v0.4s, v1.4h
     a14:	uaddw2	v0.4s, v0.4s, v1.8h
     a18:	add	v3.4s, v3.4s, v0.4s
     a1c:	b.ne	9f8 <serializeValueProfDataFrom+0x110>  // b.any
     a20:	addv	s3, v3.4s
     a24:	tst	x1, #0xf
     a28:	and	w2, w1, #0xfffffff0
     a2c:	mov	w0, v3.s[0]
     a30:	b.eq	b90 <serializeValueProfDataFrom+0x2a8>  // b.none
     a34:	add	x4, x25, w2, uxtw
     a38:	add	w3, w2, #0x1
     a3c:	cmp	w3, w1
     a40:	ldrb	w4, [x4, #8]
     a44:	add	w0, w0, w4
     a48:	b.cs	b90 <serializeValueProfDataFrom+0x2a8>  // b.hs, b.nlast
     a4c:	add	x3, x25, w3, uxtw
     a50:	add	w4, w2, #0x2
     a54:	cmp	w1, w4
     a58:	ldrb	w3, [x3, #8]
     a5c:	add	w0, w0, w3
     a60:	b.ls	b90 <serializeValueProfDataFrom+0x2a8>  // b.plast
     a64:	add	x4, x25, w4, uxtw
     a68:	add	w3, w2, #0x3
     a6c:	cmp	w1, w3
     a70:	ldrb	w4, [x4, #8]
     a74:	add	w0, w0, w4
     a78:	b.ls	b90 <serializeValueProfDataFrom+0x2a8>  // b.plast
     a7c:	add	x3, x25, w3, uxtw
     a80:	add	w4, w2, #0x4
     a84:	cmp	w1, w4
     a88:	ldrb	w3, [x3, #8]
     a8c:	add	w0, w0, w3
     a90:	b.ls	b90 <serializeValueProfDataFrom+0x2a8>  // b.plast
     a94:	add	x4, x25, w4, uxtw
     a98:	add	w3, w2, #0x5
     a9c:	cmp	w1, w3
     aa0:	ldrb	w4, [x4, #8]
     aa4:	add	w0, w0, w4
     aa8:	b.ls	b90 <serializeValueProfDataFrom+0x2a8>  // b.plast
     aac:	add	x3, x25, w3, uxtw
     ab0:	add	w4, w2, #0x6
     ab4:	cmp	w1, w4
     ab8:	ldrb	w3, [x3, #8]
     abc:	add	w0, w0, w3
     ac0:	b.ls	b90 <serializeValueProfDataFrom+0x2a8>  // b.plast
     ac4:	add	x4, x25, w4, uxtw
     ac8:	add	w3, w2, #0x7
     acc:	cmp	w1, w3
     ad0:	ldrb	w4, [x4, #8]
     ad4:	add	w0, w0, w4
     ad8:	b.ls	b90 <serializeValueProfDataFrom+0x2a8>  // b.plast
     adc:	add	x3, x25, w3, uxtw
     ae0:	add	w4, w2, #0x8
     ae4:	cmp	w1, w4
     ae8:	ldrb	w3, [x3, #8]
     aec:	add	w0, w0, w3
     af0:	b.ls	b90 <serializeValueProfDataFrom+0x2a8>  // b.plast
     af4:	add	x4, x25, w4, uxtw
     af8:	add	w3, w2, #0x9
     afc:	cmp	w1, w3
     b00:	ldrb	w4, [x4, #8]
     b04:	add	w0, w0, w4
     b08:	b.ls	b90 <serializeValueProfDataFrom+0x2a8>  // b.plast
     b0c:	add	x3, x25, w3, uxtw
     b10:	add	w4, w2, #0xa
     b14:	cmp	w1, w4
     b18:	ldrb	w3, [x3, #8]
     b1c:	add	w0, w0, w3
     b20:	b.ls	b90 <serializeValueProfDataFrom+0x2a8>  // b.plast
     b24:	add	x4, x25, w4, uxtw
     b28:	add	w3, w2, #0xb
     b2c:	cmp	w1, w3
     b30:	ldrb	w4, [x4, #8]
     b34:	add	w0, w0, w4
     b38:	b.ls	b90 <serializeValueProfDataFrom+0x2a8>  // b.plast
     b3c:	add	x3, x25, w3, uxtw
     b40:	add	w4, w2, #0xc
     b44:	cmp	w1, w4
     b48:	ldrb	w3, [x3, #8]
     b4c:	add	w0, w0, w3
     b50:	b.ls	b90 <serializeValueProfDataFrom+0x2a8>  // b.plast
     b54:	add	x4, x25, w4, uxtw
     b58:	add	w3, w2, #0xd
     b5c:	cmp	w1, w3
     b60:	ldrb	w4, [x4, #8]
     b64:	add	w0, w0, w4
     b68:	b.ls	b90 <serializeValueProfDataFrom+0x2a8>  // b.plast
     b6c:	add	x3, x25, w3, uxtw
     b70:	add	w2, w2, #0xe
     b74:	cmp	w1, w2
     b78:	ldrb	w3, [x3, #8]
     b7c:	add	w0, w0, w3
     b80:	b.ls	b90 <serializeValueProfDataFrom+0x2a8>  // b.plast
     b84:	add	x2, x25, w2, uxtw
     b88:	ldrb	w2, [x2, #8]
     b8c:	add	w0, w0, w2
     b90:	add	w1, w1, #0xf
     b94:	and	w1, w1, #0xfffffff8
     b98:	add	w0, w1, w0, lsl #4
     b9c:	add	x25, x25, x0
     ba0:	ldp	x23, x24, [sp, #48]
     ba4:	cbz	w22, 94c <serializeValueProfDataFrom+0x64>
     ba8:	mov	x0, x26
     bac:	ldp	x19, x20, [sp, #16]
     bb0:	ldp	x21, x22, [sp, #32]
     bb4:	ldp	x25, x26, [sp, #64]
     bb8:	ldp	x27, x28, [sp, #80]
     bbc:	ldp	x29, x30, [sp], #96
     bc0:	ret
     bc4:	mov	x0, #0x8                   	// #8
     bc8:	b	b9c <serializeValueProfDataFrom+0x2b4>
     bcc:	mov	w19, #0x8                   	// #8
     bd0:	mov	w22, #0x0                   	// #0
     bd4:	ldr	x2, [x27, #16]
     bd8:	mov	w1, w22
     bdc:	mov	x0, x20
     be0:	blr	x2
     be4:	mov	w21, w0
     be8:	mov	w1, w22
     bec:	mov	x0, x20
     bf0:	cbz	w21, c0c <serializeValueProfDataFrom+0x324>
     bf4:	ldr	x2, [x27, #24]
     bf8:	add	w21, w21, #0xf
     bfc:	and	w21, w21, #0xfffffff8
     c00:	add	w19, w21, w19
     c04:	blr	x2
     c08:	add	w19, w19, w0, lsl #4
     c0c:	cbnz	w22, c18 <serializeValueProfDataFrom+0x330>
     c10:	mov	w22, #0x1                   	// #1
     c14:	b	bd4 <serializeValueProfDataFrom+0x2ec>
     c18:	ldr	x1, [x27, #56]
     c1c:	mov	w0, w19
     c20:	blr	x1
     c24:	mov	x26, x0
     c28:	ldr	x20, [x27]
     c2c:	b	914 <serializeValueProfDataFrom+0x2c>
     c30:	mov	w0, #0x0                   	// #0
     c34:	mov	w2, #0x0                   	// #0
     c38:	b	a34 <serializeValueProfDataFrom+0x14c>
     c3c:	nop

0000000000000c40 <lprofSetupValueProfiler>:
     c40:	stp	x29, x30, [sp, #-16]!
     c44:	adrp	x0, 0 <getValueProfRecordHeaderSize>
     c48:	add	x0, x0, #0x0
     c4c:	mov	x29, sp
     c50:	bl	0 <getenv>
     c54:	cbz	x0, c60 <lprofSetupValueProfiler+0x20>
     c58:	ldrb	w1, [x0]
     c5c:	cbnz	w1, c80 <lprofSetupValueProfiler+0x40>
     c60:	adrp	x1, 0 <getValueProfRecordHeaderSize>
     c64:	ldr	w2, [x1]
     c68:	cmp	w2, #0xff
     c6c:	b.ls	c78 <lprofSetupValueProfiler+0x38>  // b.plast
     c70:	mov	w0, #0xff                  	// #255
     c74:	str	w0, [x1]
     c78:	ldp	x29, x30, [sp], #16
     c7c:	ret
     c80:	mov	w2, #0xa                   	// #10
     c84:	mov	x1, #0x0                   	// #0
     c88:	bl	0 <strtol>
     c8c:	mov	w2, w0
     c90:	adrp	x1, 0 <getValueProfRecordHeaderSize>
     c94:	adrp	x3, 0 <getValueProfRecordHeaderSize>
     c98:	mov	w4, #0x1                   	// #1
     c9c:	str	w0, [x1]
     ca0:	str	w4, [x3]
     ca4:	b	c68 <lprofSetupValueProfiler+0x28>

0000000000000ca8 <lprofSetMaxValsPerSite>:
     ca8:	adrp	x3, 0 <getValueProfRecordHeaderSize>
     cac:	adrp	x1, 0 <getValueProfRecordHeaderSize>
     cb0:	mov	w2, #0x1                   	// #1
     cb4:	str	w0, [x3]
     cb8:	str	w2, [x1]
     cbc:	ret

0000000000000cc0 <__llvm_profile_set_num_value_sites>:
     cc0:	add	x1, x0, w1, uxtw #1
     cc4:	strh	w2, [x1, #44]
     cc8:	ret
     ccc:	nop

0000000000000cd0 <__llvm_profile_iterate_data>:
     cd0:	add	x0, x0, #0x30
     cd4:	ret

0000000000000cd8 <__llvm_get_function_addr>:
     cd8:	ldr	x0, [x0, #24]
     cdc:	ret

0000000000000ce0 <__llvm_profile_instrument_target>:
     ce0:	cbz	x1, e4c <__llvm_profile_instrument_target+0x16c>
     ce4:	stp	x29, x30, [sp, #-48]!
     ce8:	mov	x29, sp
     cec:	stp	x19, x20, [sp, #16]
     cf0:	mov	x20, x0
     cf4:	mov	x19, x1
     cf8:	ldr	x0, [x1, #32]
     cfc:	stp	x21, x22, [sp, #32]
     d00:	mov	w21, w2
     d04:	cbz	x0, e50 <__llvm_profile_instrument_target+0x170>
     d08:	ldr	x19, [x0, w21, uxtw #3]
     d0c:	mov	x5, #0x0                   	// #0
     d10:	add	x21, x0, w21, uxtw #3
     d14:	mov	w1, #0x0                   	// #0
     d18:	cbz	x19, d70 <__llvm_profile_instrument_target+0x90>
     d1c:	mov	x3, #0xffffffffffffffff    	// #-1
     d20:	b	d40 <__llvm_profile_instrument_target+0x60>
     d24:	ldr	x4, [x19, #16]
     d28:	cmp	x3, x2
     d2c:	csel	x6, x3, x2, ls  // ls = plast
     d30:	csel	x5, x5, x19, ls  // ls = plast
     d34:	mov	x3, x6
     d38:	cbz	x4, d70 <__llvm_profile_instrument_target+0x90>
     d3c:	mov	x19, x4
     d40:	ldr	x2, [x19]
     d44:	add	w1, w1, #0x1
     d48:	and	w1, w1, #0xff
     d4c:	cmp	x20, x2
     d50:	ldr	x2, [x19, #8]
     d54:	b.ne	d24 <__llvm_profile_instrument_target+0x44>  // b.any
     d58:	add	x2, x2, #0x1
     d5c:	str	x2, [x19, #8]
     d60:	ldp	x19, x20, [sp, #16]
     d64:	ldp	x21, x22, [sp, #32]
     d68:	ldp	x29, x30, [sp], #48
     d6c:	ret
     d70:	adrp	x22, 0 <getValueProfRecordHeaderSize>
     d74:	add	x2, x22, #0x0
     d78:	ldr	w0, [x22]
     d7c:	cmp	w0, w1
     d80:	b.hi	dc0 <__llvm_profile_instrument_target+0xe0>  // b.pmore
     d84:	ldr	x0, [x5, #8]
     d88:	cmp	x0, #0x1
     d8c:	b.hi	da8 <__llvm_profile_instrument_target+0xc8>  // b.pmore
     d90:	mov	x0, #0x1                   	// #1
     d94:	stp	x20, x0, [x5]
     d98:	ldp	x19, x20, [sp, #16]
     d9c:	ldp	x21, x22, [sp, #32]
     da0:	ldp	x29, x30, [sp], #48
     da4:	ret
     da8:	sub	x0, x0, #0x1
     dac:	str	x0, [x5, #8]
     db0:	ldp	x19, x20, [sp, #16]
     db4:	ldp	x21, x22, [sp, #32]
     db8:	ldp	x29, x30, [sp], #48
     dbc:	ret
     dc0:	ldr	w0, [x2, #4]
     dc4:	cbz	w0, efc <__llvm_profile_instrument_target+0x21c>
     dc8:	adrp	x0, 0 <CurrentVNode>
     dcc:	adrp	x2, 0 <EndVNode>
     dd0:	add	x1, x0, #0x0
     dd4:	ldr	x0, [x0]
     dd8:	ldr	x3, [x2]
     ddc:	add	x0, x0, #0x18
     de0:	cmp	x3, x0
     de4:	b.cc	eb4 <__llvm_profile_instrument_target+0x1d4>  // b.lo, b.ul, b.last
     de8:	ldxr	x0, [x1]
     dec:	add	x3, x0, #0x18
     df0:	stlxr	w4, x3, [x1]
     df4:	cbnz	w4, de8 <__llvm_profile_instrument_target+0x108>
     df8:	dmb	ish
     dfc:	ldr	x2, [x2]
     e00:	add	x1, x0, #0x18
     e04:	cmp	x2, x1
     e08:	b.cc	d60 <__llvm_profile_instrument_target+0x80>  // b.lo, b.ul, b.last
     e0c:	cbz	x0, d60 <__llvm_profile_instrument_target+0x80>
     e10:	ldr	x1, [x0, #8]
     e14:	ldr	x2, [x21]
     e18:	add	x1, x1, #0x1
     e1c:	stp	x20, x1, [x0]
     e20:	cbz	x2, f0c <__llvm_profile_instrument_target+0x22c>
     e24:	cbz	x19, e30 <__llvm_profile_instrument_target+0x150>
     e28:	ldr	x1, [x19, #16]
     e2c:	cbz	x1, f30 <__llvm_profile_instrument_target+0x250>
     e30:	add	x22, x22, #0x0
     e34:	ldr	w1, [x22, #4]
     e38:	cbnz	w1, d60 <__llvm_profile_instrument_target+0x80>
     e3c:	ldp	x19, x20, [sp, #16]
     e40:	ldp	x21, x22, [sp, #32]
     e44:	ldp	x29, x30, [sp], #48
     e48:	b	0 <free>
     e4c:	ret
     e50:	adrp	x0, 0 <getValueProfRecordHeaderSize>
     e54:	adrp	x1, 0 <getValueProfRecordHeaderSize>
     e58:	add	x2, x1, #0x0
     e5c:	ldr	w0, [x0]
     e60:	str	wzr, [x2, #4]
     e64:	cbnz	w0, e70 <__llvm_profile_instrument_target+0x190>
     e68:	mov	w0, #0xff                  	// #255
     e6c:	str	w0, [x1]
     e70:	ldrh	w2, [x19, #44]
     e74:	mov	x1, #0x8                   	// #8
     e78:	ldrh	w0, [x19, #46]
     e7c:	add	x0, x2, x0
     e80:	bl	0 <calloc>
     e84:	mov	x1, x0
     e88:	cbz	x0, d60 <__llvm_profile_instrument_target+0x80>
     e8c:	add	x2, x19, #0x20
     e90:	ldxr	x3, [x2]
     e94:	cbnz	x3, ea0 <__llvm_profile_instrument_target+0x1c0>
     e98:	stlxr	w4, x1, [x2]
     e9c:	cbnz	w4, e90 <__llvm_profile_instrument_target+0x1b0>
     ea0:	dmb	ish
     ea4:	cmp	x3, #0x0
     ea8:	b.ne	e3c <__llvm_profile_instrument_target+0x15c>  // b.any
     eac:	ldr	x0, [x19, #32]
     eb0:	b	d08 <__llvm_profile_instrument_target+0x28>
     eb4:	adrp	x0, 0 <getValueProfRecordHeaderSize>
     eb8:	add	x0, x0, #0x0
     ebc:	ldr	w1, [x0, #36]
     ec0:	add	w2, w1, #0x1
     ec4:	str	w2, [x0, #36]
     ec8:	cmp	w1, #0x9
     ecc:	b.gt	d60 <__llvm_profile_instrument_target+0x80>
     ed0:	adrp	x0, 0 <stderr>
     ed4:	adrp	x2, 0 <getValueProfRecordHeaderSize>
     ed8:	ldp	x19, x20, [sp, #16]
     edc:	add	x2, x2, #0x0
     ee0:	ldr	x0, [x0]
     ee4:	adrp	x1, 0 <getValueProfRecordHeaderSize>
     ee8:	ldp	x21, x22, [sp, #32]
     eec:	add	x1, x1, #0x0
     ef0:	ldp	x29, x30, [sp], #48
     ef4:	ldr	x0, [x0]
     ef8:	b	0 <fprintf>
     efc:	mov	x1, #0x18                  	// #24
     f00:	mov	x0, #0x1                   	// #1
     f04:	bl	0 <calloc>
     f08:	b	e0c <__llvm_profile_instrument_target+0x12c>
     f0c:	ldxr	x1, [x21]
     f10:	cbnz	x1, f1c <__llvm_profile_instrument_target+0x23c>
     f14:	stlxr	w2, x0, [x21]
     f18:	cbnz	w2, f0c <__llvm_profile_instrument_target+0x22c>
     f1c:	cmp	x1, #0x0
     f20:	dmb	ish
     f24:	cset	w1, eq  // eq = none
     f28:	cbnz	w1, d60 <__llvm_profile_instrument_target+0x80>
     f2c:	b	e30 <__llvm_profile_instrument_target+0x150>
     f30:	add	x19, x19, #0x10
     f34:	ldxr	x1, [x19]
     f38:	cbnz	x1, f1c <__llvm_profile_instrument_target+0x23c>
     f3c:	stlxr	w2, x0, [x19]
     f40:	cbz	w2, f1c <__llvm_profile_instrument_target+0x23c>
     f44:	b	f34 <__llvm_profile_instrument_target+0x254>

0000000000000f48 <__llvm_profile_instrument_target_value>:
     f48:	stp	x29, x30, [sp, #-80]!
     f4c:	cmp	x3, #0x0
     f50:	ccmp	x1, #0x0, #0x4, ne  // ne = any
     f54:	mov	x29, sp
     f58:	str	x0, [sp, #72]
     f5c:	b.eq	fdc <__llvm_profile_instrument_target_value+0x94>  // b.none
     f60:	stp	x19, x20, [sp, #16]
     f64:	mov	x20, x0
     f68:	mov	x19, x1
     f6c:	ldr	x0, [x1, #32]
     f70:	stp	x21, x22, [sp, #32]
     f74:	mov	x22, x3
     f78:	mov	w21, w2
     f7c:	cbz	x0, 10ac <__llvm_profile_instrument_target_value+0x164>
     f80:	ldr	x19, [x0, w21, uxtw #3]
     f84:	add	x21, x0, w21, uxtw #3
     f88:	cbz	x19, 112c <__llvm_profile_instrument_target_value+0x1e4>
     f8c:	mov	x5, #0x0                   	// #0
     f90:	mov	w0, #0x0                   	// #0
     f94:	mov	x2, #0xffffffffffffffff    	// #-1
     f98:	b	fb8 <__llvm_profile_instrument_target_value+0x70>
     f9c:	ldr	x4, [x19, #16]
     fa0:	cmp	x1, x2
     fa4:	csel	x6, x2, x1, cs  // cs = hs, nlast
     fa8:	csel	x5, x5, x19, cs  // cs = hs, nlast
     fac:	mov	x2, x6
     fb0:	cbz	x4, fe4 <__llvm_profile_instrument_target_value+0x9c>
     fb4:	mov	x19, x4
     fb8:	ldp	x4, x1, [x19]
     fbc:	add	w0, w0, #0x1
     fc0:	and	w0, w0, #0xff
     fc4:	cmp	x20, x4
     fc8:	b.ne	f9c <__llvm_profile_instrument_target_value+0x54>  // b.any
     fcc:	add	x1, x22, x1
     fd0:	ldp	x21, x22, [sp, #32]
     fd4:	str	x1, [x19, #8]
     fd8:	ldp	x19, x20, [sp, #16]
     fdc:	ldp	x29, x30, [sp], #80
     fe0:	ret
     fe4:	str	x23, [sp, #48]
     fe8:	adrp	x23, 0 <getValueProfRecordHeaderSize>
     fec:	add	x2, x23, #0x0
     ff0:	ldr	w1, [x23]
     ff4:	cmp	w1, w0
     ff8:	b.hi	101c <__llvm_profile_instrument_target_value+0xd4>  // b.pmore
     ffc:	ldr	x0, [x5, #8]
    1000:	cmp	x22, x0
    1004:	b.cc	1108 <__llvm_profile_instrument_target_value+0x1c0>  // b.lo, b.ul, b.last
    1008:	ldr	x23, [sp, #48]
    100c:	stp	x20, x22, [x5]
    1010:	ldp	x19, x20, [sp, #16]
    1014:	ldp	x21, x22, [sp, #32]
    1018:	b	fdc <__llvm_profile_instrument_target_value+0x94>
    101c:	ldr	w0, [x2, #4]
    1020:	cbz	w0, 11b0 <__llvm_profile_instrument_target_value+0x268>
    1024:	adrp	x0, 0 <CurrentVNode>
    1028:	adrp	x2, 0 <EndVNode>
    102c:	add	x1, x0, #0x0
    1030:	ldr	x0, [x0]
    1034:	ldr	x3, [x2]
    1038:	add	x0, x0, #0x18
    103c:	cmp	x3, x0
    1040:	b.cc	1164 <__llvm_profile_instrument_target_value+0x21c>  // b.lo, b.ul, b.last
    1044:	ldxr	x0, [x1]
    1048:	add	x3, x0, #0x18
    104c:	stlxr	w4, x3, [x1]
    1050:	cbnz	w4, 1044 <__llvm_profile_instrument_target_value+0xfc>
    1054:	dmb	ish
    1058:	ldr	x2, [x2]
    105c:	add	x1, x0, #0x18
    1060:	cmp	x2, x1
    1064:	b.cc	1098 <__llvm_profile_instrument_target_value+0x150>  // b.lo, b.ul, b.last
    1068:	cbz	x0, 1098 <__llvm_profile_instrument_target_value+0x150>
    106c:	ldr	x1, [x0, #8]
    1070:	ldr	x2, [x21]
    1074:	add	x1, x1, x22
    1078:	stp	x20, x1, [x0]
    107c:	cbz	x2, 11c0 <__llvm_profile_instrument_target_value+0x278>
    1080:	cbz	x19, 108c <__llvm_profile_instrument_target_value+0x144>
    1084:	ldr	x1, [x19, #16]
    1088:	cbz	x1, 113c <__llvm_profile_instrument_target_value+0x1f4>
    108c:	add	x23, x23, #0x0
    1090:	ldr	w1, [x23, #4]
    1094:	cbz	w1, 11d4 <__llvm_profile_instrument_target_value+0x28c>
    1098:	ldp	x19, x20, [sp, #16]
    109c:	ldp	x21, x22, [sp, #32]
    10a0:	ldr	x23, [sp, #48]
    10a4:	ldp	x29, x30, [sp], #80
    10a8:	ret
    10ac:	adrp	x0, 0 <getValueProfRecordHeaderSize>
    10b0:	adrp	x1, 0 <getValueProfRecordHeaderSize>
    10b4:	add	x2, x1, #0x0
    10b8:	ldr	w0, [x0]
    10bc:	str	wzr, [x2, #4]
    10c0:	cbz	w0, 1120 <__llvm_profile_instrument_target_value+0x1d8>
    10c4:	ldrh	w2, [x19, #44]
    10c8:	mov	x1, #0x8                   	// #8
    10cc:	ldrh	w0, [x19, #46]
    10d0:	add	x0, x2, x0
    10d4:	bl	0 <calloc>
    10d8:	mov	x1, x0
    10dc:	cbz	x0, 11f8 <__llvm_profile_instrument_target_value+0x2b0>
    10e0:	add	x2, x19, #0x20
    10e4:	ldxr	x3, [x2]
    10e8:	cbnz	x3, 10f4 <__llvm_profile_instrument_target_value+0x1ac>
    10ec:	stlxr	w4, x1, [x2]
    10f0:	cbnz	w4, 10e4 <__llvm_profile_instrument_target_value+0x19c>
    10f4:	dmb	ish
    10f8:	cmp	x3, #0x0
    10fc:	b.ne	11e8 <__llvm_profile_instrument_target_value+0x2a0>  // b.any
    1100:	ldr	x0, [x19, #32]
    1104:	b	f80 <__llvm_profile_instrument_target_value+0x38>
    1108:	sub	x0, x0, x22
    110c:	ldp	x19, x20, [sp, #16]
    1110:	ldp	x21, x22, [sp, #32]
    1114:	ldr	x23, [sp, #48]
    1118:	str	x0, [x5, #8]
    111c:	b	fdc <__llvm_profile_instrument_target_value+0x94>
    1120:	mov	w0, #0xff                  	// #255
    1124:	str	w0, [x1]
    1128:	b	10c4 <__llvm_profile_instrument_target_value+0x17c>
    112c:	mov	x5, #0x0                   	// #0
    1130:	mov	w0, #0x0                   	// #0
    1134:	str	x23, [sp, #48]
    1138:	b	fe8 <__llvm_profile_instrument_target_value+0xa0>
    113c:	add	x19, x19, #0x10
    1140:	ldxr	x1, [x19]
    1144:	cbnz	x1, 1150 <__llvm_profile_instrument_target_value+0x208>
    1148:	stlxr	w2, x0, [x19]
    114c:	cbnz	w2, 1140 <__llvm_profile_instrument_target_value+0x1f8>
    1150:	cmp	x1, #0x0
    1154:	dmb	ish
    1158:	cset	w1, eq  // eq = none
    115c:	cbnz	w1, 1098 <__llvm_profile_instrument_target_value+0x150>
    1160:	b	108c <__llvm_profile_instrument_target_value+0x144>
    1164:	adrp	x0, 0 <getValueProfRecordHeaderSize>
    1168:	add	x0, x0, #0x0
    116c:	ldr	w1, [x0, #36]
    1170:	add	w2, w1, #0x1
    1174:	str	w2, [x0, #36]
    1178:	cmp	w1, #0x9
    117c:	b.gt	1098 <__llvm_profile_instrument_target_value+0x150>
    1180:	adrp	x0, 0 <stderr>
    1184:	adrp	x2, 0 <getValueProfRecordHeaderSize>
    1188:	ldp	x19, x20, [sp, #16]
    118c:	add	x2, x2, #0x0
    1190:	ldr	x0, [x0]
    1194:	adrp	x1, 0 <getValueProfRecordHeaderSize>
    1198:	ldp	x21, x22, [sp, #32]
    119c:	add	x1, x1, #0x0
    11a0:	ldr	x0, [x0]
    11a4:	ldr	x23, [sp, #48]
    11a8:	ldp	x29, x30, [sp], #80
    11ac:	b	0 <fprintf>
    11b0:	mov	x1, #0x18                  	// #24
    11b4:	mov	x0, #0x1                   	// #1
    11b8:	bl	0 <calloc>
    11bc:	b	1068 <__llvm_profile_instrument_target_value+0x120>
    11c0:	ldxr	x1, [x21]
    11c4:	cbnz	x1, 1150 <__llvm_profile_instrument_target_value+0x208>
    11c8:	stlxr	w2, x0, [x21]
    11cc:	cbz	w2, 1150 <__llvm_profile_instrument_target_value+0x208>
    11d0:	b	11c0 <__llvm_profile_instrument_target_value+0x278>
    11d4:	ldp	x19, x20, [sp, #16]
    11d8:	ldp	x21, x22, [sp, #32]
    11dc:	ldr	x23, [sp, #48]
    11e0:	ldp	x29, x30, [sp], #80
    11e4:	b	0 <free>
    11e8:	ldp	x19, x20, [sp, #16]
    11ec:	ldp	x21, x22, [sp, #32]
    11f0:	ldp	x29, x30, [sp], #80
    11f4:	b	0 <free>
    11f8:	ldp	x19, x20, [sp, #16]
    11fc:	ldp	x21, x22, [sp, #32]
    1200:	b	fdc <__llvm_profile_instrument_target_value+0x94>
    1204:	nop

0000000000001208 <__llvm_profile_instrument_range>:
    1208:	mov	x6, #0x8000000000000000    	// #-9223372036854775808
    120c:	cmp	x5, x6
    1210:	ccmp	x0, x5, #0x1, ne  // ne = any
    1214:	b.lt	1220 <__llvm_profile_instrument_range+0x18>  // b.tstop
    1218:	mov	x0, x5
    121c:	b	ce0 <__llvm_profile_instrument_target>
    1220:	cmp	x0, x3
    1224:	ccmp	x0, x4, #0x0, ge  // ge = tcont
    1228:	csinc	x0, x0, x4, le
    122c:	b	ce0 <__llvm_profile_instrument_target>

0000000000001230 <lprofGetVPDataReader>:
    1230:	adrp	x0, 0 <getValueProfRecordHeaderSize>
    1234:	add	x0, x0, #0x0
    1238:	add	x0, x0, #0x40
    123c:	ret

InstrProfilingBuffer.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__llvm_profile_is_continuous_mode_enabled>:
   0:	adrp	x0, 0 <__llvm_profile_is_continuous_mode_enabled>
   4:	ldr	w0, [x0]
   8:	ret
   c:	nop

0000000000000010 <__llvm_profile_enable_continuous_mode>:
  10:	adrp	x0, 0 <__llvm_profile_is_continuous_mode_enabled>
  14:	mov	w1, #0x1                   	// #1
  18:	str	w1, [x0]
  1c:	ret

0000000000000020 <__llvm_profile_get_size_for_buffer>:
  20:	stp	x29, x30, [sp, #-64]!
  24:	mov	x29, sp
  28:	stp	x19, x20, [sp, #16]
  2c:	stp	x21, x22, [sp, #32]
  30:	str	x23, [sp, #48]
  34:	bl	0 <__llvm_profile_begin_data>
  38:	mov	x22, x0
  3c:	bl	0 <__llvm_profile_end_data>
  40:	mov	x19, x0
  44:	bl	0 <__llvm_profile_begin_counters>
  48:	mov	x23, x0
  4c:	bl	0 <__llvm_profile_end_counters>
  50:	mov	x20, x0
  54:	bl	0 <__llvm_profile_begin_names>
  58:	add	x19, x19, #0x2f
  5c:	mov	x21, x0
  60:	bl	0 <__llvm_profile_end_names>
  64:	sub	x19, x19, x22
  68:	adrp	x2, 0 <__llvm_profile_is_continuous_mode_enabled>
  6c:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  70:	movk	x1, #0xaaab
  74:	sub	x21, x0, x21
  78:	ldr	w0, [x2]
  7c:	sub	x20, x20, x23
  80:	umulh	x19, x19, x1
  84:	lsr	x19, x19, #5
  88:	cbz	w0, 104 <__llvm_profile_get_size_for_buffer+0xe4>
  8c:	add	x19, x19, x19, lsl #1
  90:	bl	0 <getpagesize>
  94:	mov	w2, w0
  98:	lsl	x19, x19, #4
  9c:	add	x1, x19, #0x50
  a0:	udiv	x4, x20, x2
  a4:	udiv	x0, x1, x2
  a8:	udiv	x3, x21, x2
  ac:	msub	x4, x4, x2, x20
  b0:	msub	x0, x0, x2, x1
  b4:	sub	x5, x2, x4
  b8:	cmp	x0, #0x0
  bc:	sub	x6, x2, x0
  c0:	msub	x3, x3, x2, x21
  c4:	csel	x0, x6, x0, ne  // ne = any
  c8:	cmp	x4, #0x0
  cc:	add	x4, x0, x5
  d0:	csel	x0, x4, x0, ne  // ne = any
  d4:	sub	x2, x2, x3
  d8:	cmp	x3, #0x0
  dc:	csel	x3, x2, x3, ne  // ne = any
  e0:	add	x1, x1, x0
  e4:	add	x0, x3, x20
  e8:	add	x0, x1, x0
  ec:	add	x0, x0, x21
  f0:	ldp	x19, x20, [sp, #16]
  f4:	ldp	x21, x22, [sp, #32]
  f8:	ldr	x23, [sp, #48]
  fc:	ldp	x29, x30, [sp], #64
 100:	ret
 104:	add	x19, x19, x19, lsl #1
 108:	mov	x0, x21
 10c:	bl	0 <__llvm_profile_get_num_padding_bytes>
 110:	and	x3, x0, #0xff
 114:	lsl	x19, x19, #4
 118:	mov	x0, #0x0                   	// #0
 11c:	add	x1, x19, #0x50
 120:	b	e0 <__llvm_profile_get_size_for_buffer+0xc0>
 124:	nop

0000000000000128 <__llvm_profile_get_data_size>:
 128:	add	x1, x1, #0x2f
 12c:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 130:	sub	x1, x1, x0
 134:	movk	x2, #0xaaab
 138:	umulh	x0, x1, x2
 13c:	lsr	x0, x0, #5
 140:	ret
 144:	nop

0000000000000148 <__llvm_profile_get_padding_sizes_for_counters>:
 148:	stp	x29, x30, [sp, #-64]!
 14c:	adrp	x6, 0 <__llvm_profile_is_continuous_mode_enabled>
 150:	mov	x29, sp
 154:	ldr	w6, [x6]
 158:	stp	x21, x22, [sp, #32]
 15c:	mov	x21, x2
 160:	mov	x22, x5
 164:	stp	x23, x24, [sp, #48]
 168:	mov	x24, x3
 16c:	mov	x23, x4
 170:	cbz	w6, 1f4 <__llvm_profile_get_padding_sizes_for_counters+0xac>
 174:	stp	x19, x20, [sp, #16]
 178:	mov	x19, x0
 17c:	mov	x20, x1
 180:	add	x19, x19, x19, lsl #1
 184:	bl	0 <getpagesize>
 188:	mov	w6, w0
 18c:	lsl	x8, x20, #3
 190:	lsl	x19, x19, #4
 194:	add	x19, x19, #0x50
 198:	udiv	x1, x8, x6
 19c:	udiv	x7, x19, x6
 1a0:	udiv	x0, x21, x6
 1a4:	msub	x1, x1, x6, x8
 1a8:	msub	x19, x7, x6, x19
 1ac:	sub	x3, x6, x1
 1b0:	msub	x2, x0, x6, x21
 1b4:	sub	x4, x6, x19
 1b8:	cmp	x19, #0x0
 1bc:	csel	x19, x4, x19, ne  // ne = any
 1c0:	cmp	x1, #0x0
 1c4:	str	x19, [x24]
 1c8:	csel	x1, x3, x1, ne  // ne = any
 1cc:	sub	x6, x6, x2
 1d0:	cmp	x2, #0x0
 1d4:	ldp	x19, x20, [sp, #16]
 1d8:	str	x1, [x23]
 1dc:	csel	x2, x6, x2, ne  // ne = any
 1e0:	str	x2, [x22]
 1e4:	ldp	x21, x22, [sp, #32]
 1e8:	ldp	x23, x24, [sp, #48]
 1ec:	ldp	x29, x30, [sp], #64
 1f0:	ret
 1f4:	str	xzr, [x3]
 1f8:	mov	x0, x2
 1fc:	str	xzr, [x4]
 200:	bl	0 <__llvm_profile_get_num_padding_bytes>
 204:	and	x0, x0, #0xff
 208:	str	x0, [x22]
 20c:	ldp	x21, x22, [sp, #32]
 210:	ldp	x23, x24, [sp, #48]
 214:	ldp	x29, x30, [sp], #64
 218:	ret
 21c:	nop

0000000000000220 <__llvm_profile_get_size_for_buffer_internal>:
 220:	add	x1, x1, #0x2f
 224:	mov	x7, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 228:	sub	x0, x1, x0
 22c:	movk	x7, #0xaaab
 230:	stp	x29, x30, [sp, #-48]!
 234:	adrp	x1, 0 <__llvm_profile_is_continuous_mode_enabled>
 238:	umulh	x0, x0, x7
 23c:	mov	x29, sp
 240:	ldr	w6, [x1]
 244:	stp	x19, x20, [sp, #16]
 248:	sub	x20, x5, x4
 24c:	lsr	x0, x0, #5
 250:	stp	x21, x22, [sp, #32]
 254:	sub	x21, x3, x2
 258:	add	x0, x0, x0, lsl #1
 25c:	add	x1, x21, #0x50
 260:	lsl	x19, x0, #4
 264:	add	x22, x19, x20
 268:	add	x22, x22, x1
 26c:	cbz	w6, 2d4 <__llvm_profile_get_size_for_buffer_internal+0xb4>
 270:	bl	0 <getpagesize>
 274:	add	x19, x19, #0x50
 278:	mov	w0, w0
 27c:	udiv	x6, x19, x0
 280:	udiv	x3, x21, x0
 284:	udiv	x1, x20, x0
 288:	msub	x19, x6, x0, x19
 28c:	msub	x21, x3, x0, x21
 290:	sub	x2, x0, x19
 294:	cmp	x19, #0x0
 298:	msub	x4, x1, x0, x20
 29c:	csel	x19, x2, x19, ne  // ne = any
 2a0:	sub	x2, x0, x21
 2a4:	cmp	x21, #0x0
 2a8:	add	x1, x19, x2
 2ac:	sub	x0, x0, x4
 2b0:	csel	x19, x1, x19, ne  // ne = any
 2b4:	cmp	x4, #0x0
 2b8:	csel	x4, x0, x4, ne  // ne = any
 2bc:	add	x0, x4, x19
 2c0:	add	x0, x0, x22
 2c4:	ldp	x19, x20, [sp, #16]
 2c8:	ldp	x21, x22, [sp, #32]
 2cc:	ldp	x29, x30, [sp], #48
 2d0:	ret
 2d4:	mov	x0, x20
 2d8:	bl	0 <__llvm_profile_get_num_padding_bytes>
 2dc:	and	x4, x0, #0xff
 2e0:	mov	x19, #0x0                   	// #0
 2e4:	add	x0, x4, x19
 2e8:	add	x0, x0, x22
 2ec:	ldp	x19, x20, [sp, #16]
 2f0:	ldp	x21, x22, [sp, #32]
 2f4:	ldp	x29, x30, [sp], #48
 2f8:	ret
 2fc:	nop

0000000000000300 <initBufferWriter>:
 300:	adrp	x2, 0 <lprofBufferWriter>
 304:	ldr	x2, [x2]
 308:	stp	x2, x1, [x0]
 30c:	ret

0000000000000310 <__llvm_profile_write_buffer>:
 310:	stp	x29, x30, [sp, #-32]!
 314:	adrp	x3, 0 <lprofBufferWriter>
 318:	mov	x4, x0
 31c:	mov	x29, sp
 320:	ldr	x3, [x3]
 324:	add	x0, sp, #0x10
 328:	mov	w2, #0x0                   	// #0
 32c:	mov	x1, #0x0                   	// #0
 330:	stp	x3, x4, [sp, #16]
 334:	bl	0 <lprofWriteData>
 338:	ldp	x29, x30, [sp], #32
 33c:	ret

0000000000000340 <__llvm_profile_write_buffer_internal>:
 340:	sub	sp, sp, #0x30
 344:	adrp	x8, 0 <lprofBufferWriter>
 348:	mov	x9, x0
 34c:	mov	x7, x6
 350:	add	x0, sp, #0x20
 354:	mov	x6, x5
 358:	stp	x29, x30, [sp, #16]
 35c:	add	x29, sp, #0x10
 360:	mov	x5, #0x0                   	// #0
 364:	ldr	x8, [x8]
 368:	str	wzr, [sp]
 36c:	stp	x8, x9, [sp, #32]
 370:	bl	0 <lprofWriteDataImpl>
 374:	ldp	x29, x30, [sp, #16]
 378:	add	sp, sp, #0x30
 37c:	ret

InstrProfilingFile.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <fileWriter>:
       0:	stp	x29, x30, [sp, #-96]!
       4:	mov	x29, sp
       8:	stp	x21, x22, [sp, #32]
       c:	str	xzr, [sp, #88]
      10:	ldr	x22, [x0, #8]
      14:	cbz	w2, f4 <fileWriter+0xf4>
      18:	sub	w2, w2, #0x1
      1c:	stp	x23, x24, [sp, #48]
      20:	add	x23, x1, #0x20
      24:	mov	w0, #0x20                  	// #32
      28:	mov	x24, #0x8                   	// #8
      2c:	stp	x19, x20, [sp, #16]
      30:	mov	x20, x1
      34:	umaddl	x23, w2, w0, x23
      38:	str	x25, [sp, #64]
      3c:	add	x25, sp, #0x58
      40:	b	64 <fileWriter+0x64>
      44:	mov	x3, x22
      48:	bl	0 <fwrite>
      4c:	ldr	x1, [x20, #16]
      50:	cmp	x0, x1
      54:	b.ne	94 <fileWriter+0x94>  // b.any
      58:	add	x20, x20, #0x20
      5c:	cmp	x23, x20
      60:	b.eq	e8 <fileWriter+0xe8>  // b.none
      64:	ldp	x0, x1, [x20]
      68:	ldr	x2, [x20, #16]
      6c:	cbnz	x0, 44 <fileWriter+0x44>
      70:	ldr	w0, [x20, #24]
      74:	mul	x19, x1, x2
      78:	cbnz	w0, b0 <fileWriter+0xb0>
      7c:	mov	x1, x19
      80:	mov	x0, x22
      84:	mov	w2, #0x1                   	// #1
      88:	bl	0 <fseek>
      8c:	cmn	w0, #0x1
      90:	b.ne	58 <fileWriter+0x58>  // b.any
      94:	mov	w0, #0x1                   	// #1
      98:	ldp	x19, x20, [sp, #16]
      9c:	ldp	x21, x22, [sp, #32]
      a0:	ldp	x23, x24, [sp, #48]
      a4:	ldr	x25, [sp, #64]
      a8:	ldp	x29, x30, [sp], #96
      ac:	ret
      b0:	cbnz	x19, c0 <fileWriter+0xc0>
      b4:	b	58 <fileWriter+0x58>
      b8:	subs	x19, x19, x0
      bc:	b.eq	58 <fileWriter+0x58>  // b.none
      c0:	cmp	x19, #0x8
      c4:	mov	x3, x22
      c8:	csel	x21, x19, x24, ls  // ls = plast
      cc:	mov	x0, x25
      d0:	mov	x2, x21
      d4:	mov	x1, #0x1                   	// #1
      d8:	bl	0 <fwrite>
      dc:	cmp	x0, x21
      e0:	b.eq	b8 <fileWriter+0xb8>  // b.none
      e4:	b	94 <fileWriter+0x94>
      e8:	ldp	x19, x20, [sp, #16]
      ec:	ldp	x23, x24, [sp, #48]
      f0:	ldr	x25, [sp, #64]
      f4:	mov	w0, #0x0                   	// #0
      f8:	ldp	x21, x22, [sp, #32]
      fc:	ldp	x29, x30, [sp], #96
     100:	ret
     104:	nop

0000000000000108 <getCurFilenameLength>:
     108:	adrp	x0, 0 <fileWriter>
     10c:	ldr	x1, [x0]
     110:	cbz	x1, 1d8 <getCurFilenameLength+0xd0>
     114:	stp	x29, x30, [sp, #-48]!
     118:	mov	x29, sp
     11c:	stp	x19, x20, [sp, #16]
     120:	add	x20, x0, #0x0
     124:	mov	w0, #0x0                   	// #0
     128:	ldrb	w2, [x1]
     12c:	cbz	w2, 180 <getCurFilenameLength+0x78>
     130:	mov	x0, x1
     134:	stp	x21, x22, [sp, #32]
     138:	bl	0 <strlen>
     13c:	ldr	x1, [x20, #168]
     140:	mov	x19, x0
     144:	ldr	w22, [x20, #176]
     148:	cbz	x1, 18c <getCurFilenameLength+0x84>
     14c:	add	x0, x20, #0x28
     150:	bl	0 <strlen>
     154:	mov	x21, x0
     158:	add	x0, x20, #0x18
     15c:	bl	0 <strlen>
     160:	sub	x2, x0, #0x2
     164:	ldp	w1, w0, [x20, #168]
     168:	sub	x21, x21, #0x2
     16c:	mul	w1, w1, w2
     170:	madd	w21, w0, w21, w1
     174:	add	w0, w21, w19
     178:	cbnz	w22, 1bc <getCurFilenameLength+0xb4>
     17c:	ldp	x21, x22, [sp, #32]
     180:	ldp	x19, x20, [sp, #16]
     184:	ldp	x29, x30, [sp], #48
     188:	ret
     18c:	cbz	w22, 1d0 <getCurFilenameLength+0xc8>
     190:	add	x0, x20, #0x28
     194:	bl	0 <strlen>
     198:	mov	x21, x0
     19c:	add	x0, x20, #0x18
     1a0:	bl	0 <strlen>
     1a4:	sub	x2, x0, #0x2
     1a8:	ldp	w1, w0, [x20, #168]
     1ac:	sub	x21, x21, #0x2
     1b0:	mul	w1, w1, w2
     1b4:	madd	w21, w0, w21, w1
     1b8:	add	w0, w21, w19
     1bc:	add	w0, w0, #0x18
     1c0:	ldp	x19, x20, [sp, #16]
     1c4:	ldp	x21, x22, [sp, #32]
     1c8:	ldp	x29, x30, [sp], #48
     1cc:	ret
     1d0:	ldp	x21, x22, [sp, #32]
     1d4:	b	180 <getCurFilenameLength+0x78>
     1d8:	mov	w0, #0x0                   	// #0
     1dc:	ret

00000000000001e0 <getCurFilename>:
     1e0:	stp	x29, x30, [sp, #-160]!
     1e4:	mov	x29, sp
     1e8:	stp	x19, x20, [sp, #16]
     1ec:	adrp	x19, 0 <fileWriter>
     1f0:	stp	x27, x28, [sp, #80]
     1f4:	ldr	x27, [x19]
     1f8:	cbz	x27, 314 <getCurFilename+0x134>
     1fc:	ldrb	w28, [x27]
     200:	cbz	w28, 428 <getCurFilename+0x248>
     204:	add	x20, x19, #0x0
     208:	stp	x25, x26, [sp, #64]
     20c:	mov	x26, x0
     210:	stp	x21, x22, [sp, #32]
     214:	ldr	x0, [x20, #168]
     218:	cbz	x0, 354 <getCurFilename+0x174>
     21c:	add	x20, x19, #0x0
     220:	stp	x23, x24, [sp, #48]
     224:	add	x0, x20, #0x18
     228:	bl	0 <strlen>
     22c:	adrp	x22, 0 <fileWriter>
     230:	mov	x21, x0
     234:	add	x19, x19, #0x0
     238:	add	x0, x20, #0x28
     23c:	bl	0 <strlen>
     240:	add	x25, x19, #0x28
     244:	mov	x20, x0
     248:	add	x23, sp, #0x80
     24c:	add	x0, x22, #0x0
     250:	mov	w24, #0x0                   	// #0
     254:	mov	w22, #0x0                   	// #0
     258:	mov	x3, #0x0                   	// #0
     25c:	str	w20, [sp, #100]
     260:	str	x0, [sp, #104]
     264:	str	w21, [sp, #112]
     268:	b	288 <getCurFilename+0xa8>
     26c:	add	w24, w24, #0x1
     270:	strb	w28, [x26, x3]
     274:	mov	w22, w5
     278:	sxtw	x3, w24
     27c:	add	x8, x26, x3
     280:	ldrb	w28, [x0]
     284:	cbz	w28, 300 <getCurFilename+0x120>
     288:	add	w5, w22, #0x1
     28c:	cmp	w28, #0x25
     290:	add	x8, x26, x3
     294:	add	x0, x27, w5, sxtw
     298:	b.ne	26c <getCurFilename+0x8c>  // b.any
     29c:	ldrb	w0, [x27, w5, sxtw]
     2a0:	cmp	w0, #0x70
     2a4:	b.eq	3f4 <getCurFilename+0x214>  // b.none
     2a8:	cmp	w0, #0x68
     2ac:	b.eq	328 <getCurFilename+0x148>  // b.none
     2b0:	ldrb	w1, [x27, w5, uxtw]
     2b4:	add	w4, w22, #0x2
     2b8:	mov	w2, w4
     2bc:	cmp	w1, #0x6d
     2c0:	b.ne	2d8 <getCurFilename+0xf8>  // b.any
     2c4:	b	384 <getCurFilename+0x1a4>
     2c8:	ldrb	w1, [x27, w2, uxtw]
     2cc:	cmp	w1, #0x6d
     2d0:	b.eq	380 <getCurFilename+0x1a0>  // b.none
     2d4:	mov	w2, w0
     2d8:	sub	w1, w1, #0x30
     2dc:	add	w0, w2, #0x1
     2e0:	and	w1, w1, #0xff
     2e4:	cmp	w1, #0x9
     2e8:	b.ls	2c8 <getCurFilename+0xe8>  // b.plast
     2ec:	add	x0, x27, w4, sxtw
     2f0:	mov	w22, w4
     2f4:	ldrb	w28, [x0]
     2f8:	cbnz	w28, 288 <getCurFilename+0xa8>
     2fc:	nop
     300:	ldp	x23, x24, [sp, #48]
     304:	strb	wzr, [x8]
     308:	mov	x27, x26
     30c:	ldp	x21, x22, [sp, #32]
     310:	ldp	x25, x26, [sp, #64]
     314:	mov	x0, x27
     318:	ldp	x19, x20, [sp, #16]
     31c:	ldp	x27, x28, [sp, #80]
     320:	ldp	x29, x30, [sp], #160
     324:	ret
     328:	ldr	w0, [sp, #100]
     32c:	add	w22, w22, #0x2
     330:	mov	x2, x20
     334:	mov	x1, x25
     338:	add	w24, w24, w0
     33c:	mov	x0, x8
     340:	bl	0 <memcpy>
     344:	sxtw	x3, w24
     348:	add	x0, x27, w22, sxtw
     34c:	add	x8, x26, x3
     350:	b	280 <getCurFilename+0xa0>
     354:	ldr	w0, [x20, #176]
     358:	cbnz	w0, 21c <getCurFilename+0x3c>
     35c:	str	w1, [sp, #100]
     360:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
     364:	cbnz	w0, 440 <getCurFilename+0x260>
     368:	ldr	w1, [sp, #100]
     36c:	ldr	x27, [x19]
     370:	cbnz	w1, 454 <getCurFilename+0x274>
     374:	ldp	x21, x22, [sp, #32]
     378:	ldp	x25, x26, [sp, #64]
     37c:	b	314 <getCurFilename+0x134>
     380:	mov	w5, w2
     384:	str	w5, [sp, #116]
     388:	str	x8, [sp, #120]
     38c:	bl	0 <getpid>
     390:	ldr	w4, [x19, #176]
     394:	udiv	w28, w0, w4
     398:	msub	w28, w28, w4, w0
     39c:	bl	0 <lprofGetLoadModuleSignature>
     3a0:	ldr	x2, [sp, #104]
     3a4:	mov	x3, x0
     3a8:	mov	w4, w28
     3ac:	mov	x0, x23
     3b0:	mov	x1, #0x19                  	// #25
     3b4:	bl	0 <snprintf>
     3b8:	cmp	w0, #0x18
     3bc:	ldr	w5, [sp, #116]
     3c0:	ldr	x8, [sp, #120]
     3c4:	b.le	420 <getCurFilename+0x240>
     3c8:	mov	x2, #0x18                  	// #24
     3cc:	mov	w0, w2
     3d0:	add	w24, w24, w0
     3d4:	add	w22, w5, #0x1
     3d8:	mov	x0, x8
     3dc:	mov	x1, x23
     3e0:	bl	0 <memcpy>
     3e4:	sxtw	x3, w24
     3e8:	add	x0, x27, w22, sxtw
     3ec:	add	x8, x26, x3
     3f0:	b	280 <getCurFilename+0xa0>
     3f4:	ldr	w0, [sp, #112]
     3f8:	add	w22, w22, #0x2
     3fc:	mov	x2, x21
     400:	add	x1, x19, #0x18
     404:	add	w24, w24, w0
     408:	mov	x0, x8
     40c:	bl	0 <memcpy>
     410:	sxtw	x3, w24
     414:	add	x0, x27, w22, sxtw
     418:	add	x8, x26, x3
     41c:	b	280 <getCurFilename+0xa0>
     420:	sxtw	x2, w0
     424:	b	3d0 <getCurFilename+0x1f0>
     428:	mov	x27, #0x0                   	// #0
     42c:	mov	x0, x27
     430:	ldp	x19, x20, [sp, #16]
     434:	ldp	x27, x28, [sp, #80]
     438:	ldp	x29, x30, [sp], #160
     43c:	ret
     440:	ldrb	w28, [x27]
     444:	mov	x8, x26
     448:	cbz	w28, 304 <getCurFilename+0x124>
     44c:	stp	x23, x24, [sp, #48]
     450:	b	224 <getCurFilename+0x44>
     454:	mov	x0, x27
     458:	bl	0 <strlen>
     45c:	mov	x19, x0
     460:	mov	x1, x27
     464:	mov	x0, x26
     468:	mov	x27, x26
     46c:	sxtw	x19, w19
     470:	mov	x2, x19
     474:	bl	0 <memcpy>
     478:	strb	wzr, [x26, x19]
     47c:	ldp	x21, x22, [sp, #32]
     480:	ldp	x25, x26, [sp, #64]
     484:	b	314 <getCurFilename+0x134>

0000000000000488 <createProfileDir>:
     488:	stp	x29, x30, [sp, #-32]!
     48c:	mov	x29, sp
     490:	stp	x19, x20, [sp, #16]
     494:	mov	x19, x0
     498:	bl	0 <strlen>
     49c:	mov	x20, x0
     4a0:	mov	x0, x19
     4a4:	bl	0 <lprofFindFirstDirSeparator>
     4a8:	cbz	x0, 4d0 <createProfileDir+0x48>
     4ac:	add	x0, x20, #0x10
     4b0:	mov	x1, x19
     4b4:	and	x0, x0, #0xfffffffffffffff0
     4b8:	add	x2, x20, #0x1
     4bc:	sub	sp, sp, x0
     4c0:	mov	x3, sp
     4c4:	mov	x0, x3
     4c8:	bl	0 <strncpy>
     4cc:	bl	0 <__llvm_profile_recursive_mkdir>
     4d0:	mov	sp, x29
     4d4:	ldp	x19, x20, [sp, #16]
     4d8:	ldp	x29, x30, [sp], #32
     4dc:	ret

00000000000004e0 <getProfileFileSizeForMerging>:
     4e0:	stp	x29, x30, [sp, #-48]!
     4e4:	mov	w2, #0x2                   	// #2
     4e8:	mov	x29, sp
     4ec:	stp	x19, x20, [sp, #16]
     4f0:	mov	x20, x0
     4f4:	str	x21, [sp, #32]
     4f8:	mov	x21, x1
     4fc:	mov	x1, #0x0                   	// #0
     500:	bl	0 <fseek>
     504:	cmn	w0, #0x1
     508:	b.eq	55c <getProfileFileSizeForMerging+0x7c>  // b.none
     50c:	mov	x0, x20
     510:	bl	0 <ftell>
     514:	str	x0, [x21]
     518:	mov	w2, #0x0                   	// #0
     51c:	mov	x0, x20
     520:	mov	x1, #0x0                   	// #0
     524:	bl	0 <fseek>
     528:	mov	w19, w0
     52c:	cmn	w0, #0x1
     530:	b.eq	5b8 <getProfileFileSizeForMerging+0xd8>  // b.none
     534:	ldr	x0, [x21]
     538:	mov	w19, #0x0                   	// #0
     53c:	sub	x0, x0, #0x1
     540:	cmp	x0, #0x4e
     544:	b.ls	590 <getProfileFileSizeForMerging+0xb0>  // b.plast
     548:	mov	w0, w19
     54c:	ldp	x19, x20, [sp, #16]
     550:	ldr	x21, [sp, #32]
     554:	ldp	x29, x30, [sp], #48
     558:	ret
     55c:	mov	w19, w0
     560:	adrp	x0, 0 <stderr>
     564:	ldr	x0, [x0]
     568:	ldr	x20, [x0]
     56c:	bl	0 <__errno_location>
     570:	ldr	w0, [x0]
     574:	bl	0 <strerror>
     578:	mov	x2, x0
     57c:	adrp	x1, 0 <fileWriter>
     580:	mov	x0, x20
     584:	add	x1, x1, #0x0
     588:	bl	0 <fprintf>
     58c:	b	548 <getProfileFileSizeForMerging+0x68>
     590:	adrp	x0, 0 <stderr>
     594:	mov	w19, #0xffffffff            	// #-1
     598:	adrp	x2, 0 <fileWriter>
     59c:	adrp	x1, 0 <fileWriter>
     5a0:	ldr	x0, [x0]
     5a4:	add	x2, x2, #0x0
     5a8:	add	x1, x1, #0x0
     5ac:	ldr	x0, [x0]
     5b0:	bl	0 <fprintf>
     5b4:	b	548 <getProfileFileSizeForMerging+0x68>
     5b8:	adrp	x0, 0 <stderr>
     5bc:	ldr	x0, [x0]
     5c0:	ldr	x20, [x0]
     5c4:	bl	0 <__errno_location>
     5c8:	ldr	w0, [x0]
     5cc:	bl	0 <strerror>
     5d0:	mov	x2, x0
     5d4:	adrp	x1, 0 <fileWriter>
     5d8:	mov	x0, x20
     5dc:	add	x1, x1, #0x0
     5e0:	bl	0 <fprintf>
     5e4:	b	548 <getProfileFileSizeForMerging+0x68>

00000000000005e8 <mmapProfileForMerging>:
     5e8:	stp	x29, x30, [sp, #-48]!
     5ec:	mov	x29, sp
     5f0:	str	x21, [sp, #32]
     5f4:	mov	x21, x2
     5f8:	stp	x19, x20, [sp, #16]
     5fc:	mov	x20, x1
     600:	bl	0 <fileno>
     604:	mov	w3, #0x1                   	// #1
     608:	mov	w4, w0
     60c:	mov	x1, x20
     610:	mov	w2, w3
     614:	mov	x5, #0x0                   	// #0
     618:	mov	x0, #0x0                   	// #0
     61c:	bl	0 <mmap>
     620:	str	x0, [x21]
     624:	cmn	x0, #0x1
     628:	b.eq	67c <mmapProfileForMerging+0x94>  // b.none
     62c:	mov	x1, x20
     630:	bl	0 <__llvm_profile_check_compatibility>
     634:	cbnz	w0, 648 <mmapProfileForMerging+0x60>
     638:	ldp	x19, x20, [sp, #16]
     63c:	ldr	x21, [sp, #32]
     640:	ldp	x29, x30, [sp], #48
     644:	ret
     648:	ldr	x0, [x21]
     64c:	mov	x1, x20
     650:	bl	0 <munmap>
     654:	adrp	x0, 0 <stderr>
     658:	adrp	x2, 0 <fileWriter>
     65c:	adrp	x1, 0 <fileWriter>
     660:	add	x2, x2, #0x0
     664:	ldr	x0, [x0]
     668:	add	x1, x1, #0x0
     66c:	ldr	x0, [x0]
     670:	bl	0 <fprintf>
     674:	mov	w0, #0xffffffff            	// #-1
     678:	b	638 <mmapProfileForMerging+0x50>
     67c:	mov	x19, x0
     680:	adrp	x0, 0 <stderr>
     684:	ldr	x0, [x0]
     688:	ldr	x20, [x0]
     68c:	bl	0 <__errno_location>
     690:	ldr	w0, [x0]
     694:	bl	0 <strerror>
     698:	mov	x2, x0
     69c:	adrp	x1, 0 <fileWriter>
     6a0:	mov	x0, x20
     6a4:	add	x1, x1, #0x0
     6a8:	bl	0 <fprintf>
     6ac:	mov	w0, w19
     6b0:	b	638 <mmapProfileForMerging+0x50>
     6b4:	nop

00000000000006b8 <writeFile>:
     6b8:	stp	x29, x30, [sp, #-96]!
     6bc:	adrp	x3, 0 <VPMergeHook>
     6c0:	adrp	x4, 0 <lprofMergeValueProfData>
     6c4:	mov	x29, sp
     6c8:	ldr	x3, [x3]
     6cc:	stp	x21, x22, [sp, #32]
     6d0:	adrp	x21, 0 <fileWriter>
     6d4:	add	x1, x21, #0x0
     6d8:	stp	x19, x20, [sp, #16]
     6dc:	ldr	x4, [x4]
     6e0:	str	x4, [x3]
     6e4:	ldr	w2, [x1, #176]
     6e8:	ldr	w20, [x1, #184]
     6ec:	ldr	x19, [x1, #192]
     6f0:	orr	w20, w20, w2
     6f4:	cbz	w20, 7cc <writeFile+0x114>
     6f8:	mov	x22, x0
     6fc:	cbz	x19, 88c <writeFile+0x1d4>
     700:	mov	x0, x19
     704:	bl	0 <lprofLockFileHandle>
     708:	add	x1, sp, #0x48
     70c:	mov	x0, x19
     710:	bl	4e0 <getProfileFileSizeForMerging>
     714:	cmn	w0, #0x1
     718:	b.eq	8a8 <writeFile+0x1f0>  // b.none
     71c:	ldr	x1, [sp, #72]
     720:	cbnz	x1, 83c <writeFile+0x184>
     724:	mov	x0, x19
     728:	bl	0 <fileno>
     72c:	mov	x1, #0x0                   	// #0
     730:	bl	0 <ftruncate>
     734:	mov	w20, w0
     738:	cbnz	w0, 8a8 <writeFile+0x1f0>
     73c:	mov	x0, x19
     740:	mov	w2, #0x0                   	// #0
     744:	mov	x1, #0x0                   	// #0
     748:	bl	0 <fseek>
     74c:	cmn	w0, #0x1
     750:	b.eq	8a8 <writeFile+0x1f0>  // b.none
     754:	adrp	x1, 0 <free>
     758:	adrp	x2, 0 <FreeHook>
     75c:	adrp	x0, 0 <fileWriter>
     760:	add	x0, x0, #0x0
     764:	ldr	x1, [x1]
     768:	str	x1, [x2]
     76c:	bl	0 <getenv>
     770:	cbz	x0, 77c <writeFile+0xc4>
     774:	ldrb	w1, [x0]
     778:	cbnz	w1, 7ec <writeFile+0x134>
     77c:	adrp	x0, 0 <fileWriter>
     780:	add	x0, x0, #0x0
     784:	add	x21, x21, #0x0
     788:	stp	x0, x19, [sp, #80]
     78c:	bl	0 <lprofGetVPDataReader>
     790:	mov	x1, x0
     794:	mov	w2, w20
     798:	add	x0, sp, #0x50
     79c:	bl	0 <lprofWriteData>
     7a0:	mov	w20, w0
     7a4:	ldr	x1, [x21, #192]
     7a8:	mov	x0, x19
     7ac:	cmp	x1, x19
     7b0:	b.eq	81c <writeFile+0x164>  // b.none
     7b4:	bl	0 <fclose>
     7b8:	mov	w0, w20
     7bc:	ldp	x19, x20, [sp, #16]
     7c0:	ldp	x21, x22, [sp, #32]
     7c4:	ldp	x29, x30, [sp], #96
     7c8:	ret
     7cc:	cbnz	x19, 754 <writeFile+0x9c>
     7d0:	adrp	x1, 0 <fileWriter>
     7d4:	add	x1, x1, #0x0
     7d8:	bl	0 <fopen>
     7dc:	mov	x19, x0
     7e0:	cbnz	x0, 754 <writeFile+0x9c>
     7e4:	mov	w20, #0xffffffff            	// #-1
     7e8:	b	7b8 <writeFile+0x100>
     7ec:	mov	w2, #0xa                   	// #10
     7f0:	mov	x1, #0x0                   	// #0
     7f4:	bl	0 <strtol>
     7f8:	mov	x2, x0
     7fc:	adrp	x3, 0 <VPBufferSize>
     800:	mov	x1, #0x1                   	// #1
     804:	mov	w0, w0
     808:	str	w2, [x3]
     80c:	bl	0 <calloc>
     810:	adrp	x1, 0 <DynamicBufferIOBuffer>
     814:	str	x0, [x1]
     818:	b	77c <writeFile+0xc4>
     81c:	bl	0 <fflush>
     820:	ldr	w0, [x21, #176]
     824:	ldr	w1, [x21, #184]
     828:	orr	w0, w0, w1
     82c:	cbz	w0, 7b8 <writeFile+0x100>
     830:	mov	x0, x19
     834:	bl	0 <lprofUnlockFileHandle>
     838:	b	7b8 <writeFile+0x100>
     83c:	add	x2, sp, #0x50
     840:	mov	x0, x19
     844:	bl	5e8 <mmapProfileForMerging>
     848:	cmn	w0, #0x1
     84c:	b.eq	8a8 <writeFile+0x1f0>  // b.none
     850:	ldp	x1, x0, [sp, #72]
     854:	str	x23, [sp, #48]
     858:	mov	w20, #0x1                   	// #1
     85c:	bl	0 <__llvm_profile_merge_from_buffer>
     860:	mov	x0, x19
     864:	bl	0 <fileno>
     868:	mov	w23, w0
     86c:	bl	0 <__llvm_profile_get_size_for_buffer>
     870:	mov	x1, x0
     874:	mov	w0, w23
     878:	bl	0 <ftruncate>
     87c:	ldp	x1, x0, [sp, #72]
     880:	bl	0 <munmap>
     884:	ldr	x23, [sp, #48]
     888:	b	73c <writeFile+0x84>
     88c:	bl	488 <createProfileDir>
     890:	mov	x0, x22
     894:	bl	0 <lprofOpenFileEx>
     898:	mov	x19, x0
     89c:	cbnz	x0, 708 <writeFile+0x50>
     8a0:	mov	w20, #0xffffffff            	// #-1
     8a4:	b	7b8 <writeFile+0x100>
     8a8:	adrp	x0, 0 <stderr>
     8ac:	mov	w20, #0xffffffff            	// #-1
     8b0:	ldr	x0, [x0]
     8b4:	ldr	x21, [x0]
     8b8:	bl	0 <__errno_location>
     8bc:	ldr	w0, [x0]
     8c0:	bl	0 <strerror>
     8c4:	mov	x3, x0
     8c8:	mov	x2, x22
     8cc:	adrp	x1, 0 <fileWriter>
     8d0:	add	x1, x1, #0x0
     8d4:	mov	x0, x21
     8d8:	bl	0 <fprintf>
     8dc:	mov	x0, x19
     8e0:	bl	0 <fclose>
     8e4:	b	7b8 <writeFile+0x100>

00000000000008e8 <initializeProfileForContinuousMode>:
     8e8:	stp	x29, x30, [sp, #-144]!
     8ec:	mov	x29, sp
     8f0:	stp	x19, x20, [sp, #16]
     8f4:	stp	x21, x22, [sp, #32]
     8f8:	stp	x23, x24, [sp, #48]
     8fc:	stp	x25, x26, [sp, #64]
     900:	stp	x27, x28, [sp, #80]
     904:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
     908:	cbnz	w0, 92c <initializeProfileForContinuousMode+0x44>
     90c:	mov	sp, x29
     910:	ldp	x19, x20, [sp, #16]
     914:	ldp	x21, x22, [sp, #32]
     918:	ldp	x23, x24, [sp, #48]
     91c:	ldp	x25, x26, [sp, #64]
     920:	ldp	x27, x28, [sp, #80]
     924:	ldp	x29, x30, [sp], #144
     928:	ret
     92c:	bl	0 <__llvm_profile_begin_data>
     930:	mov	x19, x0
     934:	bl	0 <__llvm_profile_end_data>
     938:	mov	x21, x0
     93c:	bl	0 <__llvm_profile_begin_counters>
     940:	mov	x20, x0
     944:	bl	0 <__llvm_profile_end_counters>
     948:	mov	x22, x0
     94c:	bl	0 <__llvm_profile_begin_names>
     950:	str	x0, [x29, #104]
     954:	bl	0 <__llvm_profile_end_names>
     958:	mov	x24, x0
     95c:	mov	x1, x21
     960:	mov	x0, x19
     964:	bl	0 <__llvm_profile_get_data_size>
     968:	mov	x21, x0
     96c:	bl	0 <getpagesize>
     970:	mov	w25, w0
     974:	mov	x26, x25
     978:	sdiv	x0, x20, x25
     97c:	msub	x0, x0, x25, x20
     980:	cbnz	x0, b94 <initializeProfileForContinuousMode+0x2ac>
     984:	sdiv	x0, x19, x25
     988:	msub	x0, x0, x25, x19
     98c:	cbnz	x0, b54 <initializeProfileForContinuousMode+0x26c>
     990:	bl	108 <getCurFilenameLength>
     994:	add	w2, w0, #0x1
     998:	mov	w1, #0x0                   	// #0
     99c:	sxtw	x2, w2
     9a0:	add	x2, x2, #0xf
     9a4:	and	x2, x2, #0xfffffffffffffff0
     9a8:	sub	sp, sp, x2
     9ac:	mov	x0, sp
     9b0:	bl	1e0 <getCurFilename>
     9b4:	mov	x27, x0
     9b8:	cbz	x0, 90c <initializeProfileForContinuousMode+0x24>
     9bc:	adrp	x19, 0 <fileWriter>
     9c0:	add	x19, x19, #0x0
     9c4:	ldr	w2, [x19, #176]
     9c8:	ldr	w1, [x19, #184]
     9cc:	orr	w1, w1, w2
     9d0:	cbz	w1, a30 <initializeProfileForContinuousMode+0x148>
     9d4:	bl	0 <lprofOpenFileEx>
     9d8:	mov	x23, x0
     9dc:	cbz	x0, 90c <initializeProfileForContinuousMode+0x24>
     9e0:	add	x28, x29, #0x80
     9e4:	mov	x1, x28
     9e8:	bl	4e0 <getProfileFileSizeForMerging>
     9ec:	cmn	w0, #0x1
     9f0:	b.eq	b48 <initializeProfileForContinuousMode+0x260>  // b.none
     9f4:	ldr	x1, [x29, #128]
     9f8:	cbz	x1, bb8 <initializeProfileForContinuousMode+0x2d0>
     9fc:	add	x27, x29, #0x88
     a00:	mov	x0, x23
     a04:	mov	x2, x27
     a08:	bl	5e8 <mmapProfileForMerging>
     a0c:	cmn	w0, #0x1
     a10:	b.eq	b48 <initializeProfileForContinuousMode+0x260>  // b.none
     a14:	ldp	x1, x0, [x29, #128]
     a18:	bl	0 <munmap>
     a1c:	cmn	w0, #0x1
     a20:	b.eq	b48 <initializeProfileForContinuousMode+0x260>  // b.none
     a24:	mov	x25, #0x0                   	// #0
     a28:	mov	w26, #0x1                   	// #1
     a2c:	b	a7c <initializeProfileForContinuousMode+0x194>
     a30:	adrp	x1, 0 <fileWriter>
     a34:	add	x1, x1, #0x0
     a38:	bl	0 <fopen>
     a3c:	mov	x23, x0
     a40:	cbz	x0, 90c <initializeProfileForContinuousMode+0x24>
     a44:	bl	0 <ftello>
     a48:	mov	x28, x0
     a4c:	sdiv	x0, x0, x25
     a50:	msub	x25, x0, x25, x28
     a54:	cbnz	x25, bd4 <initializeProfileForContinuousMode+0x2ec>
     a58:	mov	x0, x27
     a5c:	str	x23, [x19, #192]
     a60:	bl	6b8 <writeFile>
     a64:	mov	w26, w0
     a68:	cbnz	w0, bf8 <initializeProfileForContinuousMode+0x310>
     a6c:	mov	x25, x28
     a70:	add	x27, x29, #0x88
     a74:	add	x28, x29, #0x80
     a78:	str	xzr, [x19, #192]
     a7c:	mov	x0, x23
     a80:	bl	0 <fileno>
     a84:	mov	w19, w0
     a88:	sub	x22, x22, x20
     a8c:	ldr	x0, [x29, #104]
     a90:	asr	x1, x22, #3
     a94:	mov	x5, x27
     a98:	mov	x4, x28
     a9c:	sub	x2, x24, x0
     aa0:	add	x3, x29, #0x78
     aa4:	mov	x0, x21
     aa8:	bl	0 <__llvm_profile_get_padding_sizes_for_counters>
     aac:	ldp	x5, x1, [x29, #120]
     ab0:	add	x21, x21, x21, lsl #1
     ab4:	mov	w4, w19
     ab8:	mov	x0, x20
     abc:	add	x2, x25, x21, lsl #4
     ac0:	mov	w3, #0x11                  	// #17
     ac4:	add	x25, x5, #0x50
     ac8:	add	x22, x22, x1
     acc:	add	x25, x25, x2
     ad0:	mov	x1, x22
     ad4:	mov	x5, x25
     ad8:	mov	w2, #0x3                   	// #3
     adc:	bl	0 <mmap>
     ae0:	cmp	x20, x0
     ae4:	b.eq	b24 <initializeProfileForContinuousMode+0x23c>  // b.none
     ae8:	adrp	x0, 0 <stderr>
     aec:	ldr	x0, [x0]
     af0:	ldr	x21, [x0]
     af4:	bl	0 <__errno_location>
     af8:	ldr	w0, [x0]
     afc:	bl	0 <strerror>
     b00:	mov	x2, x0
     b04:	adrp	x1, 0 <fileWriter>
     b08:	mov	x0, x21
     b0c:	mov	x6, x25
     b10:	mov	w5, w19
     b14:	mov	x4, x22
     b18:	mov	x3, x20
     b1c:	add	x1, x1, #0x0
     b20:	bl	0 <fprintf>
     b24:	cbnz	w26, b48 <initializeProfileForContinuousMode+0x260>
     b28:	adrp	x0, 0 <stderr>
     b2c:	adrp	x2, 0 <fileWriter>
     b30:	adrp	x1, 0 <fileWriter>
     b34:	add	x2, x2, #0x0
     b38:	ldr	x0, [x0]
     b3c:	add	x1, x1, #0x0
     b40:	ldr	x0, [x0]
     b44:	bl	0 <fprintf>
     b48:	mov	x0, x23
     b4c:	bl	0 <lprofUnlockFileHandle>
     b50:	b	90c <initializeProfileForContinuousMode+0x24>
     b54:	adrp	x0, 0 <stderr>
     b58:	mov	w3, w25
     b5c:	mov	x2, x19
     b60:	adrp	x1, 0 <fileWriter>
     b64:	ldr	x0, [x0]
     b68:	add	x1, x1, #0x0
     b6c:	ldr	x0, [x0]
     b70:	bl	0 <fprintf>
     b74:	mov	sp, x29
     b78:	ldp	x19, x20, [sp, #16]
     b7c:	ldp	x21, x22, [sp, #32]
     b80:	ldp	x23, x24, [sp, #48]
     b84:	ldp	x25, x26, [sp, #64]
     b88:	ldp	x27, x28, [sp, #80]
     b8c:	ldp	x29, x30, [sp], #144
     b90:	ret
     b94:	adrp	x0, 0 <stderr>
     b98:	mov	w3, w25
     b9c:	mov	x2, x20
     ba0:	adrp	x1, 0 <fileWriter>
     ba4:	ldr	x0, [x0]
     ba8:	add	x1, x1, #0x0
     bac:	ldr	x0, [x0]
     bb0:	bl	0 <fprintf>
     bb4:	b	90c <initializeProfileForContinuousMode+0x24>
     bb8:	mov	x0, x27
     bbc:	str	x23, [x19, #192]
     bc0:	bl	6b8 <writeFile>
     bc4:	cbnz	w0, c30 <initializeProfileForContinuousMode+0x348>
     bc8:	add	x27, x29, #0x88
     bcc:	str	xzr, [x19, #192]
     bd0:	b	a24 <initializeProfileForContinuousMode+0x13c>
     bd4:	adrp	x0, 0 <stderr>
     bd8:	mov	w3, w26
     bdc:	mov	x2, x28
     be0:	adrp	x1, 0 <fileWriter>
     be4:	ldr	x0, [x0]
     be8:	add	x1, x1, #0x0
     bec:	ldr	x0, [x0]
     bf0:	bl	0 <fprintf>
     bf4:	b	90c <initializeProfileForContinuousMode+0x24>
     bf8:	adrp	x0, 0 <stderr>
     bfc:	ldr	x0, [x0]
     c00:	ldr	x20, [x0]
     c04:	bl	0 <__errno_location>
     c08:	ldr	w0, [x0]
     c0c:	bl	0 <strerror>
     c10:	mov	x3, x0
     c14:	mov	x2, x27
     c18:	mov	x0, x20
     c1c:	adrp	x1, 0 <fileWriter>
     c20:	add	x1, x1, #0x0
     c24:	bl	0 <fprintf>
     c28:	str	xzr, [x19, #192]
     c2c:	b	90c <initializeProfileForContinuousMode+0x24>
     c30:	adrp	x0, 0 <stderr>
     c34:	ldr	x0, [x0]
     c38:	ldr	x20, [x0]
     c3c:	bl	0 <__errno_location>
     c40:	ldr	w0, [x0]
     c44:	bl	0 <strerror>
     c48:	mov	x3, x0
     c4c:	mov	x2, x27
     c50:	adrp	x1, 0 <fileWriter>
     c54:	add	x1, x1, #0x0
     c58:	mov	x0, x20
     c5c:	bl	0 <fprintf>
     c60:	str	xzr, [x19, #192]
     c64:	mov	x0, x23
     c68:	bl	0 <lprofUnlockFileHandle>
     c6c:	b	90c <initializeProfileForContinuousMode+0x24>

0000000000000c70 <truncateCurrentFile>:
     c70:	stp	x29, x30, [sp, #-64]!
     c74:	mov	x29, sp
     c78:	stp	x19, x20, [sp, #16]
     c7c:	adrp	x20, 0 <fileWriter>
     c80:	ldr	x0, [x20]
     c84:	stp	x21, x22, [sp, #32]
     c88:	str	x23, [sp, #48]
     c8c:	cbz	x0, dbc <truncateCurrentFile+0x14c>
     c90:	ldrb	w2, [x0]
     c94:	mov	x1, #0x1                   	// #1
     c98:	cbz	w2, cec <truncateCurrentFile+0x7c>
     c9c:	add	x21, x20, #0x0
     ca0:	bl	0 <strlen>
     ca4:	mov	x19, x0
     ca8:	ldr	x1, [x21, #168]
     cac:	ldr	w23, [x21, #176]
     cb0:	cbz	x1, d38 <truncateCurrentFile+0xc8>
     cb4:	add	x0, x21, #0x28
     cb8:	bl	0 <strlen>
     cbc:	mov	x22, x0
     cc0:	add	x0, x21, #0x18
     cc4:	bl	0 <strlen>
     cc8:	sub	x2, x0, #0x2
     ccc:	ldp	w1, w0, [x21, #168]
     cd0:	sub	x22, x22, #0x2
     cd4:	mul	w1, w1, w2
     cd8:	madd	w22, w0, w22, w1
     cdc:	add	w0, w22, w19
     ce0:	cbnz	w23, d70 <truncateCurrentFile+0x100>
     ce4:	add	w0, w0, #0x1
     ce8:	sxtw	x1, w0
     cec:	add	x0, x1, #0xf
     cf0:	mov	w1, #0x0                   	// #0
     cf4:	and	x0, x0, #0xfffffffffffffff0
     cf8:	sub	sp, sp, x0
     cfc:	mov	x0, sp
     d00:	bl	1e0 <getCurFilename>
     d04:	mov	x19, x0
     d08:	cbz	x0, d20 <truncateCurrentFile+0xb0>
     d0c:	adrp	x21, 0 <fileWriter>
     d10:	add	x21, x21, #0x0
     d14:	mov	x0, x21
     d18:	bl	0 <getenv>
     d1c:	cbz	x0, d7c <truncateCurrentFile+0x10c>
     d20:	mov	sp, x29
     d24:	ldp	x19, x20, [sp, #16]
     d28:	ldp	x21, x22, [sp, #32]
     d2c:	ldr	x23, [sp, #48]
     d30:	ldp	x29, x30, [sp], #64
     d34:	ret
     d38:	add	w0, w0, #0x1
     d3c:	sxtw	x1, w0
     d40:	cbz	w23, cec <truncateCurrentFile+0x7c>
     d44:	add	x0, x21, #0x28
     d48:	bl	0 <strlen>
     d4c:	mov	x22, x0
     d50:	add	x0, x21, #0x18
     d54:	bl	0 <strlen>
     d58:	sub	x2, x0, #0x2
     d5c:	ldp	w1, w0, [x21, #168]
     d60:	sub	x22, x22, #0x2
     d64:	mul	w1, w1, w2
     d68:	madd	w22, w0, w22, w1
     d6c:	add	w0, w22, w19
     d70:	add	w0, w0, #0x19
     d74:	sxtw	x1, w0
     d78:	b	cec <truncateCurrentFile+0x7c>
     d7c:	mov	x1, x21
     d80:	mov	w2, #0x1                   	// #1
     d84:	add	x20, x20, #0x0
     d88:	mov	x0, x21
     d8c:	bl	0 <setenv>
     d90:	mov	x0, x19
     d94:	bl	488 <createProfileDir>
     d98:	ldr	w0, [x20, #176]
     d9c:	cbnz	w0, d20 <truncateCurrentFile+0xb0>
     da0:	adrp	x1, 0 <fileWriter>
     da4:	mov	x0, x19
     da8:	add	x1, x1, #0x0
     dac:	bl	0 <fopen>
     db0:	cbz	x0, d20 <truncateCurrentFile+0xb0>
     db4:	bl	0 <fclose>
     db8:	b	d20 <truncateCurrentFile+0xb0>
     dbc:	mov	x1, #0x1                   	// #1
     dc0:	b	cec <truncateCurrentFile+0x7c>
     dc4:	nop

0000000000000dc8 <parseAndSetFilename>:
     dc8:	stp	x29, x30, [sp, #-112]!
     dcc:	mov	x29, sp
     dd0:	stp	x19, x20, [sp, #16]
     dd4:	adrp	x19, 0 <fileWriter>
     dd8:	stp	x21, x22, [sp, #32]
     ddc:	add	x21, x19, #0x0
     de0:	stp	x23, x24, [sp, #48]
     de4:	ldr	w23, [x21, #180]
     de8:	cmp	w23, w1
     dec:	b.hi	e40 <parseAndSetFilename+0x78>  // b.pmore
     df0:	ldr	x24, [x19]
     df4:	stp	x27, x28, [sp, #80]
     df8:	cmp	x0, #0x0
     dfc:	mov	x28, x0
     e00:	adrp	x0, 0 <fileWriter>
     e04:	add	x0, x0, #0x0
     e08:	mov	w20, w1
     e0c:	mov	w22, w2
     e10:	csel	x28, x0, x28, eq  // eq = none
     e14:	cbz	x24, e54 <parseAndSetFilename+0x8c>
     e18:	mov	x1, x28
     e1c:	mov	x0, x24
     e20:	bl	0 <strcmp>
     e24:	cbz	w0, e38 <parseAndSetFilename+0x70>
     e28:	ldr	x0, [x21, #16]
     e2c:	cbnz	x0, e5c <parseAndSetFilename+0x94>
     e30:	mov	x0, x24
     e34:	b	e68 <parseAndSetFilename+0xa0>
     e38:	ldp	x27, x28, [sp, #80]
     e3c:	str	w20, [x21, #180]
     e40:	ldp	x19, x20, [sp, #16]
     e44:	ldp	x21, x22, [sp, #32]
     e48:	ldp	x23, x24, [sp, #48]
     e4c:	ldp	x29, x30, [sp], #112
     e50:	ret
     e54:	ldr	x0, [x21, #16]
     e58:	cbz	x0, e74 <parseAndSetFilename+0xac>
     e5c:	bl	0 <free>
     e60:	ldr	x0, [x19]
     e64:	cbz	x0, e74 <parseAndSetFilename+0xac>
     e68:	add	x1, x19, #0x0
     e6c:	ldr	w1, [x1, #8]
     e70:	cbnz	w1, 118c <parseAndSetFilename+0x3c4>
     e74:	add	x21, x19, #0x0
     e78:	stp	xzr, xzr, [x21]
     e7c:	stp	xzr, xzr, [x21, #16]
     e80:	stp	xzr, xzr, [x21, #32]
     e84:	stp	xzr, xzr, [x21, #48]
     e88:	stp	xzr, xzr, [x21, #64]
     e8c:	stp	xzr, xzr, [x21, #80]
     e90:	stp	xzr, xzr, [x21, #96]
     e94:	stp	xzr, xzr, [x21, #112]
     e98:	stp	xzr, xzr, [x21, #128]
     e9c:	stp	xzr, xzr, [x21, #144]
     ea0:	stp	xzr, xzr, [x21, #160]
     ea4:	str	xzr, [x21, #176]
     ea8:	cbnz	w22, 1150 <parseAndSetFilename+0x388>
     eac:	str	x28, [x19]
     eb0:	ldrb	w0, [x28]
     eb4:	cbz	w0, 126c <parseAndSetFilename+0x4a4>
     eb8:	stp	x25, x26, [sp, #64]
     ebc:	add	x25, x19, #0x0
     ec0:	add	x1, x25, #0x28
     ec4:	adrp	x27, 0 <fileWriter>
     ec8:	mov	w26, #0x0                   	// #0
     ecc:	mov	w22, #0x0                   	// #0
     ed0:	mov	w21, #0x0                   	// #0
     ed4:	str	x1, [sp, #104]
     ed8:	add	x1, x27, #0x0
     edc:	mov	w27, #0x0                   	// #0
     ee0:	str	x1, [sp, #96]
     ee4:	nop
     ee8:	add	w2, w27, #0x1
     eec:	cmp	w0, #0x25
     ef0:	ldrb	w0, [x28, w2, sxtw]
     ef4:	b.eq	fb4 <parseAndSetFilename+0x1ec>  // b.none
     ef8:	mov	w27, w2
     efc:	cbnz	w0, ee8 <parseAndSetFilename+0x120>
     f00:	ldp	x25, x26, [sp, #64]
     f04:	add	x0, x19, #0x0
     f08:	stp	w21, w22, [x0, #168]
     f0c:	add	x0, x19, #0x0
     f10:	str	w20, [x0, #180]
     f14:	adrp	x0, 0 <fileWriter>
     f18:	add	x0, x0, #0x0
     f1c:	cbz	x24, 10e8 <parseAndSetFilename+0x320>
     f20:	bl	0 <getenv>
     f24:	cbz	x0, f98 <parseAndSetFilename+0x1d0>
     f28:	adrp	x0, 0 <stderr>
     f2c:	cmp	w23, #0x3
     f30:	ldr	x0, [x0]
     f34:	ldr	x0, [x0]
     f38:	b.eq	11a8 <parseAndSetFilename+0x3e0>  // b.none
     f3c:	cmp	w23, #0x4
     f40:	b.eq	1174 <parseAndSetFilename+0x3ac>  // b.none
     f44:	cmp	w23, #0x1
     f48:	b.eq	1168 <parseAndSetFilename+0x3a0>  // b.none
     f4c:	cmp	w23, #0x2
     f50:	b.ne	1298 <parseAndSetFilename+0x4d0>  // b.any
     f54:	adrp	x3, 0 <fileWriter>
     f58:	add	x3, x3, #0x0
     f5c:	ldr	x4, [x19]
     f60:	cmp	w20, #0x3
     f64:	b.eq	119c <parseAndSetFilename+0x3d4>  // b.none
     f68:	cmp	w20, #0x4
     f6c:	b.eq	1180 <parseAndSetFilename+0x3b8>  // b.none
     f70:	cmp	w20, #0x2
     f74:	adrp	x1, 0 <fileWriter>
     f78:	adrp	x5, 0 <fileWriter>
     f7c:	add	x1, x1, #0x0
     f80:	add	x5, x5, #0x0
     f84:	csel	x5, x5, x1, ne  // ne = any
     f88:	adrp	x1, 0 <fileWriter>
     f8c:	mov	x2, x24
     f90:	add	x1, x1, #0x0
     f94:	bl	0 <fprintf>
     f98:	bl	c70 <truncateCurrentFile>
     f9c:	ldp	x19, x20, [sp, #16]
     fa0:	ldp	x21, x22, [sp, #32]
     fa4:	ldp	x23, x24, [sp, #48]
     fa8:	ldp	x27, x28, [sp, #80]
     fac:	ldp	x29, x30, [sp], #112
     fb0:	b	8e8 <initializeProfileForContinuousMode>
     fb4:	cmp	w0, #0x70
     fb8:	b.eq	1040 <parseAndSetFilename+0x278>  // b.none
     fbc:	cmp	w0, #0x68
     fc0:	b.eq	1028 <parseAndSetFilename+0x260>  // b.none
     fc4:	cmp	w0, #0x63
     fc8:	b.eq	1058 <parseAndSetFilename+0x290>  // b.none
     fcc:	ldrb	w1, [x28, w2, uxtw]
     fd0:	add	w4, w27, #0x2
     fd4:	mov	w3, w4
     fd8:	mov	w0, #0x0                   	// #0
     fdc:	cmp	w1, #0x6d
     fe0:	b.ne	ffc <parseAndSetFilename+0x234>  // b.any
     fe4:	b	1194 <parseAndSetFilename+0x3cc>
     fe8:	ldrb	w1, [x28, w3, uxtw]
     fec:	sub	w0, w0, #0x30
     ff0:	cmp	w1, #0x6d
     ff4:	b.eq	1074 <parseAndSetFilename+0x2ac>  // b.none
     ff8:	mov	w3, w6
     ffc:	add	w0, w0, w0, lsl #2
    1000:	sub	w2, w1, #0x30
    1004:	and	w2, w2, #0xff
    1008:	add	w6, w3, #0x1
    100c:	add	w0, w1, w0, lsl #1
    1010:	cmp	w2, #0x9
    1014:	b.ls	fe8 <parseAndSetFilename+0x220>  // b.plast
    1018:	ldrb	w0, [x28, w4, sxtw]
    101c:	mov	w27, w4
    1020:	cbnz	w0, ee8 <parseAndSetFilename+0x120>
    1024:	b	f00 <parseAndSetFilename+0x138>
    1028:	cbz	w22, 10c4 <parseAndSetFilename+0x2fc>
    102c:	add	w27, w27, #0x2
    1030:	add	w22, w22, #0x1
    1034:	ldrb	w0, [x28, w27, sxtw]
    1038:	cbnz	w0, ee8 <parseAndSetFilename+0x120>
    103c:	b	f00 <parseAndSetFilename+0x138>
    1040:	add	w27, w27, #0x2
    1044:	cbz	w21, 109c <parseAndSetFilename+0x2d4>
    1048:	ldrb	w0, [x28, w27, sxtw]
    104c:	add	w21, w21, #0x1
    1050:	cbnz	w0, ee8 <parseAndSetFilename+0x120>
    1054:	b	f00 <parseAndSetFilename+0x138>
    1058:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
    105c:	cbnz	w0, 11cc <parseAndSetFilename+0x404>
    1060:	add	w27, w27, #0x3
    1064:	bl	0 <__llvm_profile_enable_continuous_mode>
    1068:	ldrb	w0, [x28, w27, sxtw]
    106c:	cbnz	w0, ee8 <parseAndSetFilename+0x120>
    1070:	b	f00 <parseAndSetFilename+0x138>
    1074:	cmp	w0, #0x0
    1078:	mov	w2, w3
    107c:	csinc	w0, w0, wzr, ne  // ne = any
    1080:	cbnz	w26, 124c <parseAndSetFilename+0x484>
    1084:	add	w27, w2, #0x1
    1088:	str	w0, [x25, #176]
    108c:	mov	w26, #0x1                   	// #1
    1090:	ldrb	w0, [x28, w27, sxtw]
    1094:	cbnz	w0, ee8 <parseAndSetFilename+0x120>
    1098:	b	f00 <parseAndSetFilename+0x138>
    109c:	bl	0 <getpid>
    10a0:	sxtw	x3, w0
    10a4:	ldr	x2, [sp, #96]
    10a8:	add	x0, x25, #0x18
    10ac:	mov	x1, #0x10                  	// #16
    10b0:	mov	w21, #0x1                   	// #1
    10b4:	bl	0 <snprintf>
    10b8:	ldrb	w0, [x28, w27, sxtw]
    10bc:	cbnz	w0, ee8 <parseAndSetFilename+0x120>
    10c0:	b	f00 <parseAndSetFilename+0x138>
    10c4:	ldr	x0, [sp, #104]
    10c8:	mov	w1, #0x80                  	// #128
    10cc:	bl	0 <lprofGetHostName>
    10d0:	cbnz	w0, 1278 <parseAndSetFilename+0x4b0>
    10d4:	add	w27, w27, #0x2
    10d8:	mov	w22, #0x1                   	// #1
    10dc:	ldrb	w0, [x28, w27, sxtw]
    10e0:	cbnz	w0, ee8 <parseAndSetFilename+0x120>
    10e4:	b	f00 <parseAndSetFilename+0x138>
    10e8:	bl	0 <getenv>
    10ec:	cbz	x0, f98 <parseAndSetFilename+0x1d0>
    10f0:	adrp	x0, 0 <stderr>
    10f4:	cmp	w20, #0x3
    10f8:	ldr	x2, [x19]
    10fc:	ldr	x0, [x0]
    1100:	ldr	x0, [x0]
    1104:	b.eq	11c0 <parseAndSetFilename+0x3f8>  // b.none
    1108:	cmp	w20, #0x4
    110c:	b.eq	11b4 <parseAndSetFilename+0x3ec>  // b.none
    1110:	cmp	w20, #0x2
    1114:	adrp	x1, 0 <fileWriter>
    1118:	adrp	x3, 0 <fileWriter>
    111c:	add	x1, x1, #0x0
    1120:	add	x3, x3, #0x0
    1124:	csel	x3, x3, x1, ne  // ne = any
    1128:	adrp	x1, 0 <fileWriter>
    112c:	add	x1, x1, #0x0
    1130:	bl	0 <fprintf>
    1134:	bl	c70 <truncateCurrentFile>
    1138:	ldp	x19, x20, [sp, #16]
    113c:	ldp	x21, x22, [sp, #32]
    1140:	ldp	x23, x24, [sp, #48]
    1144:	ldp	x27, x28, [sp, #80]
    1148:	ldp	x29, x30, [sp], #112
    114c:	b	8e8 <initializeProfileForContinuousMode>
    1150:	mov	x0, x28
    1154:	bl	0 <strdup>
    1158:	mov	w1, #0x1                   	// #1
    115c:	str	x0, [x19]
    1160:	str	w1, [x21, #8]
    1164:	b	eb0 <parseAndSetFilename+0xe8>
    1168:	adrp	x3, 0 <fileWriter>
    116c:	add	x3, x3, #0x0
    1170:	b	f5c <parseAndSetFilename+0x194>
    1174:	adrp	x3, 0 <fileWriter>
    1178:	add	x3, x3, #0x0
    117c:	b	f5c <parseAndSetFilename+0x194>
    1180:	adrp	x5, 0 <fileWriter>
    1184:	add	x5, x5, #0x0
    1188:	b	f88 <parseAndSetFilename+0x1c0>
    118c:	bl	0 <free>
    1190:	b	e74 <parseAndSetFilename+0xac>
    1194:	mov	w0, #0x1                   	// #1
    1198:	b	1080 <parseAndSetFilename+0x2b8>
    119c:	adrp	x5, 0 <fileWriter>
    11a0:	add	x5, x5, #0x0
    11a4:	b	f88 <parseAndSetFilename+0x1c0>
    11a8:	adrp	x3, 0 <fileWriter>
    11ac:	add	x3, x3, #0x0
    11b0:	b	f5c <parseAndSetFilename+0x194>
    11b4:	adrp	x3, 0 <fileWriter>
    11b8:	add	x3, x3, #0x0
    11bc:	b	1128 <parseAndSetFilename+0x360>
    11c0:	adrp	x3, 0 <fileWriter>
    11c4:	add	x3, x3, #0x0
    11c8:	b	1128 <parseAndSetFilename+0x360>
    11cc:	adrp	x0, 0 <stderr>
    11d0:	adrp	x1, 0 <fileWriter>
    11d4:	mov	x2, x28
    11d8:	add	x1, x1, #0x0
    11dc:	ldr	x0, [x0]
    11e0:	ldr	x0, [x0]
    11e4:	bl	0 <fprintf>
    11e8:	ldr	x0, [x19]
    11ec:	add	x1, x19, #0x0
    11f0:	cbz	x0, 11fc <parseAndSetFilename+0x434>
    11f4:	ldr	w1, [x1, #8]
    11f8:	cbnz	w1, 1244 <parseAndSetFilename+0x47c>
    11fc:	add	x1, x19, #0x0
    1200:	adrp	x2, 0 <fileWriter>
    1204:	add	x2, x2, #0x0
    1208:	str	x2, [x19]
    120c:	stp	xzr, xzr, [x1, #8]
    1210:	stp	xzr, xzr, [x1, #24]
    1214:	stp	xzr, xzr, [x1, #40]
    1218:	stp	xzr, xzr, [x1, #56]
    121c:	stp	xzr, xzr, [x1, #72]
    1220:	stp	xzr, xzr, [x1, #88]
    1224:	stp	xzr, xzr, [x1, #104]
    1228:	stp	xzr, xzr, [x1, #120]
    122c:	stp	xzr, xzr, [x1, #136]
    1230:	stp	xzr, xzr, [x1, #152]
    1234:	str	xzr, [x1, #168]
    1238:	str	wzr, [x1, #176]
    123c:	ldp	x25, x26, [sp, #64]
    1240:	b	f0c <parseAndSetFilename+0x144>
    1244:	bl	0 <free>
    1248:	b	11fc <parseAndSetFilename+0x434>
    124c:	adrp	x0, 0 <stderr>
    1250:	mov	x2, x28
    1254:	adrp	x1, 0 <fileWriter>
    1258:	add	x1, x1, #0x0
    125c:	ldr	x0, [x0]
    1260:	ldr	x0, [x0]
    1264:	bl	0 <fprintf>
    1268:	b	11e8 <parseAndSetFilename+0x420>
    126c:	mov	w22, #0x0                   	// #0
    1270:	mov	w21, #0x0                   	// #0
    1274:	b	f04 <parseAndSetFilename+0x13c>
    1278:	adrp	x0, 0 <stderr>
    127c:	mov	x2, x28
    1280:	adrp	x1, 0 <fileWriter>
    1284:	add	x1, x1, #0x0
    1288:	ldr	x0, [x0]
    128c:	ldr	x0, [x0]
    1290:	bl	0 <fprintf>
    1294:	b	11e8 <parseAndSetFilename+0x420>
    1298:	adrp	x3, 0 <fileWriter>
    129c:	add	x3, x3, #0x0
    12a0:	b	f5c <parseAndSetFilename+0x194>
    12a4:	nop

00000000000012a8 <__llvm_profile_set_file_object>:
    12a8:	stp	x29, x30, [sp, #-32]!
    12ac:	mov	x29, sp
    12b0:	stp	x19, x20, [sp, #16]
    12b4:	mov	x19, x0
    12b8:	mov	w20, w1
    12bc:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
    12c0:	cbnz	w0, 12e0 <__llvm_profile_set_file_object+0x38>
    12c4:	adrp	x0, 0 <fileWriter>
    12c8:	add	x0, x0, #0x0
    12cc:	str	w20, [x0, #184]
    12d0:	str	x19, [x0, #192]
    12d4:	ldp	x19, x20, [sp, #16]
    12d8:	ldp	x29, x30, [sp], #32
    12dc:	ret
    12e0:	adrp	x1, 0 <stderr>
    12e4:	mov	x0, x19
    12e8:	ldr	x1, [x1]
    12ec:	ldr	x19, [x1]
    12f0:	bl	0 <fileno>
    12f4:	mov	w2, w0
    12f8:	adrp	x1, 0 <fileWriter>
    12fc:	mov	x0, x19
    1300:	add	x1, x1, #0x0
    1304:	ldp	x19, x20, [sp, #16]
    1308:	ldp	x29, x30, [sp], #32
    130c:	b	0 <fprintf>

0000000000001310 <lprofCreateBufferIOInternal>:
    1310:	stp	x29, x30, [sp, #-32]!
    1314:	adrp	x2, 0 <free>
    1318:	adrp	x3, 0 <FreeHook>
    131c:	mov	x29, sp
    1320:	ldr	x2, [x2]
    1324:	stp	x19, x20, [sp, #16]
    1328:	mov	w19, w1
    132c:	mov	x20, x0
    1330:	str	x2, [x3]
    1334:	mov	w0, w19
    1338:	mov	x1, #0x1                   	// #1
    133c:	bl	0 <calloc>
    1340:	mov	x3, x0
    1344:	adrp	x4, 0 <VPBufferSize>
    1348:	adrp	x2, 0 <DynamicBufferIOBuffer>
    134c:	mov	x1, #0x1                   	// #1
    1350:	mov	x0, #0x10                  	// #16
    1354:	str	w19, [x4]
    1358:	str	x3, [x2]
    135c:	bl	0 <calloc>
    1360:	adrp	x2, 0 <fileWriter>
    1364:	add	x2, x2, #0x0
    1368:	stp	x2, x20, [x0]
    136c:	bl	0 <lprofCreateBufferIO>
    1370:	mov	w1, #0x1                   	// #1
    1374:	ldp	x19, x20, [sp, #16]
    1378:	str	w1, [x0, #8]
    137c:	ldp	x29, x30, [sp], #32
    1380:	ret
    1384:	nop

0000000000001388 <__llvm_profile_get_path_prefix>:
    1388:	stp	x29, x30, [sp, #-48]!
    138c:	mov	x29, sp
    1390:	stp	x19, x20, [sp, #16]
    1394:	adrp	x20, 0 <fileWriter>
    1398:	add	x20, x20, #0x0
    139c:	stp	x21, x22, [sp, #32]
    13a0:	ldr	x19, [x20, #16]
    13a4:	cbz	x19, 13c0 <__llvm_profile_get_path_prefix+0x38>
    13a8:	mov	sp, x29
    13ac:	mov	x0, x19
    13b0:	ldp	x19, x20, [sp, #16]
    13b4:	ldp	x21, x22, [sp, #32]
    13b8:	ldp	x29, x30, [sp], #48
    13bc:	ret
    13c0:	bl	108 <getCurFilenameLength>
    13c4:	add	w0, w0, #0x1
    13c8:	mov	w1, #0x0                   	// #0
    13cc:	sxtw	x0, w0
    13d0:	add	x0, x0, #0xf
    13d4:	and	x0, x0, #0xfffffffffffffff0
    13d8:	sub	sp, sp, x0
    13dc:	mov	x0, sp
    13e0:	bl	1e0 <getCurFilename>
    13e4:	mov	x22, x0
    13e8:	cbz	x0, 145c <__llvm_profile_get_path_prefix+0xd4>
    13ec:	bl	0 <lprofFindLastDirSeparator>
    13f0:	cbz	x0, 145c <__llvm_profile_get_path_prefix+0xd4>
    13f4:	sub	x21, x0, x22
    13f8:	add	w0, w21, #0x2
    13fc:	add	w21, w21, #0x1
    1400:	sxtw	x0, w0
    1404:	bl	0 <malloc>
    1408:	mov	x19, x0
    140c:	cbz	x0, 143c <__llvm_profile_get_path_prefix+0xb4>
    1410:	mov	x1, x22
    1414:	sxtw	x2, w21
    1418:	bl	0 <memcpy>
    141c:	strb	wzr, [x19, w21, sxtw]
    1420:	str	x19, [x20, #16]
    1424:	mov	x0, x19
    1428:	mov	sp, x29
    142c:	ldp	x19, x20, [sp, #16]
    1430:	ldp	x21, x22, [sp, #32]
    1434:	ldp	x29, x30, [sp], #48
    1438:	ret
    143c:	adrp	x0, 0 <stderr>
    1440:	adrp	x2, 0 <fileWriter>
    1444:	adrp	x1, 0 <fileWriter>
    1448:	add	x2, x2, #0x0
    144c:	ldr	x0, [x0]
    1450:	add	x1, x1, #0x0
    1454:	ldr	x0, [x0]
    1458:	bl	0 <fprintf>
    145c:	mov	sp, x29
    1460:	adrp	x19, 0 <fileWriter>
    1464:	add	x19, x19, #0x0
    1468:	mov	x0, x19
    146c:	ldp	x19, x20, [sp, #16]
    1470:	ldp	x21, x22, [sp, #32]
    1474:	ldp	x29, x30, [sp], #48
    1478:	ret
    147c:	nop

0000000000001480 <__llvm_profile_get_filename>:
    1480:	stp	x29, x30, [sp, #-48]!
    1484:	adrp	x0, 0 <fileWriter>
    1488:	mov	x29, sp
    148c:	ldr	x1, [x0]
    1490:	stp	x19, x20, [sp, #16]
    1494:	cbz	x1, 1584 <__llvm_profile_get_filename+0x104>
    1498:	ldrb	w2, [x1]
    149c:	add	x20, x0, #0x0
    14a0:	mov	x0, #0x1                   	// #1
    14a4:	cbz	w2, 1500 <__llvm_profile_get_filename+0x80>
    14a8:	mov	x0, x1
    14ac:	stp	x21, x22, [sp, #32]
    14b0:	bl	0 <strlen>
    14b4:	ldr	x1, [x20, #168]
    14b8:	mov	x19, x0
    14bc:	ldr	w22, [x20, #176]
    14c0:	cbz	x1, 1534 <__llvm_profile_get_filename+0xb4>
    14c4:	add	x0, x20, #0x28
    14c8:	bl	0 <strlen>
    14cc:	mov	x21, x0
    14d0:	add	x0, x20, #0x18
    14d4:	bl	0 <strlen>
    14d8:	sub	x2, x0, #0x2
    14dc:	ldp	w1, w0, [x20, #168]
    14e0:	sub	x21, x21, #0x2
    14e4:	mul	w1, w1, w2
    14e8:	madd	w0, w0, w21, w1
    14ec:	add	w0, w0, w19
    14f0:	cbnz	w22, 1564 <__llvm_profile_get_filename+0xe4>
    14f4:	ldp	x21, x22, [sp, #32]
    14f8:	add	w0, w0, #0x1
    14fc:	sxtw	x0, w0
    1500:	bl	0 <malloc>
    1504:	mov	x19, x0
    1508:	cbz	x0, 158c <__llvm_profile_get_filename+0x10c>
    150c:	mov	w1, #0x1                   	// #1
    1510:	bl	1e0 <getCurFilename>
    1514:	adrp	x1, 0 <fileWriter>
    1518:	cmp	x0, #0x0
    151c:	add	x1, x1, #0x0
    1520:	csel	x19, x1, x19, eq  // eq = none
    1524:	mov	x0, x19
    1528:	ldp	x19, x20, [sp, #16]
    152c:	ldp	x29, x30, [sp], #48
    1530:	ret
    1534:	cbz	w22, 1574 <__llvm_profile_get_filename+0xf4>
    1538:	add	x0, x20, #0x28
    153c:	bl	0 <strlen>
    1540:	mov	x21, x0
    1544:	add	x0, x20, #0x18
    1548:	bl	0 <strlen>
    154c:	sub	x2, x0, #0x2
    1550:	ldp	w1, w0, [x20, #168]
    1554:	sub	x21, x21, #0x2
    1558:	mul	w1, w1, w2
    155c:	madd	w0, w0, w21, w1
    1560:	add	w0, w0, w19
    1564:	add	w0, w0, #0x19
    1568:	ldp	x21, x22, [sp, #32]
    156c:	sxtw	x0, w0
    1570:	b	1500 <__llvm_profile_get_filename+0x80>
    1574:	add	w0, w0, #0x1
    1578:	ldp	x21, x22, [sp, #32]
    157c:	sxtw	x0, w0
    1580:	b	1500 <__llvm_profile_get_filename+0x80>
    1584:	mov	x0, #0x1                   	// #1
    1588:	b	1500 <__llvm_profile_get_filename+0x80>
    158c:	adrp	x0, 0 <stderr>
    1590:	adrp	x2, 0 <fileWriter>
    1594:	adrp	x1, 0 <fileWriter>
    1598:	add	x2, x2, #0x0
    159c:	ldr	x0, [x0]
    15a0:	add	x1, x1, #0x0
    15a4:	adrp	x19, 0 <fileWriter>
    15a8:	add	x19, x19, #0x0
    15ac:	ldr	x0, [x0]
    15b0:	bl	0 <fprintf>
    15b4:	b	1524 <__llvm_profile_get_filename+0xa4>

00000000000015b8 <__llvm_profile_initialize_file>:
    15b8:	stp	x29, x30, [sp, #-32]!
    15bc:	adrp	x0, 0 <fileWriter>
    15c0:	add	x0, x0, #0x0
    15c4:	mov	x29, sp
    15c8:	stp	x19, x20, [sp, #16]
    15cc:	adrp	x19, 0 <__llvm_profile_filename>
    15d0:	ldr	x1, [x19]
    15d4:	ldrb	w20, [x1]
    15d8:	bl	0 <getenv>
    15dc:	cbz	x0, 15fc <__llvm_profile_initialize_file+0x44>
    15e0:	ldrb	w1, [x0]
    15e4:	cbz	w1, 15fc <__llvm_profile_initialize_file+0x44>
    15e8:	ldp	x19, x20, [sp, #16]
    15ec:	mov	w2, #0x1                   	// #1
    15f0:	ldp	x29, x30, [sp], #32
    15f4:	mov	w1, #0x3                   	// #3
    15f8:	b	dc8 <parseAndSetFilename>
    15fc:	cbnz	w20, 1618 <__llvm_profile_initialize_file+0x60>
    1600:	ldp	x19, x20, [sp, #16]
    1604:	mov	w1, #0x1                   	// #1
    1608:	ldp	x29, x30, [sp], #32
    160c:	mov	x0, #0x0                   	// #0
    1610:	mov	w2, #0x0                   	// #0
    1614:	b	dc8 <parseAndSetFilename>
    1618:	ldr	x0, [x19]
    161c:	mov	w1, #0x2                   	// #2
    1620:	ldp	x19, x20, [sp, #16]
    1624:	mov	w2, #0x0                   	// #0
    1628:	ldp	x29, x30, [sp], #32
    162c:	b	dc8 <parseAndSetFilename>

0000000000001630 <__llvm_profile_set_filename>:
    1630:	stp	x29, x30, [sp, #-32]!
    1634:	mov	x29, sp
    1638:	str	x19, [sp, #16]
    163c:	mov	x19, x0
    1640:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
    1644:	cbz	w0, 1654 <__llvm_profile_set_filename+0x24>
    1648:	ldr	x19, [sp, #16]
    164c:	ldp	x29, x30, [sp], #32
    1650:	ret
    1654:	mov	x0, x19
    1658:	mov	w2, #0x1                   	// #1
    165c:	ldr	x19, [sp, #16]
    1660:	mov	w1, #0x4                   	// #4
    1664:	ldp	x29, x30, [sp], #32
    1668:	b	dc8 <parseAndSetFilename>
    166c:	nop

0000000000001670 <__llvm_profile_write_file>:
    1670:	stp	x29, x30, [sp, #-48]!
    1674:	mov	x29, sp
    1678:	stp	x19, x20, [sp, #16]
    167c:	stp	x21, x22, [sp, #32]
    1680:	bl	0 <lprofProfileDumped>
    1684:	cbnz	w0, 1690 <__llvm_profile_write_file+0x20>
    1688:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
    168c:	cbz	w0, 16cc <__llvm_profile_write_file+0x5c>
    1690:	adrp	x0, 0 <stderr>
    1694:	adrp	x2, 0 <fileWriter>
    1698:	adrp	x1, 0 <fileWriter>
    169c:	add	x2, x2, #0x0
    16a0:	ldr	x0, [x0]
    16a4:	add	x1, x1, #0x0
    16a8:	mov	w19, #0x0                   	// #0
    16ac:	ldr	x0, [x0]
    16b0:	bl	0 <fprintf>
    16b4:	mov	sp, x29
    16b8:	mov	w0, w19
    16bc:	ldp	x19, x20, [sp, #16]
    16c0:	ldp	x21, x22, [sp, #32]
    16c4:	ldp	x29, x30, [sp], #48
    16c8:	ret
    16cc:	bl	108 <getCurFilenameLength>
    16d0:	add	w0, w0, #0x1
    16d4:	mov	w1, #0x0                   	// #0
    16d8:	sxtw	x0, w0
    16dc:	add	x0, x0, #0xf
    16e0:	and	x0, x0, #0xfffffffffffffff0
    16e4:	sub	sp, sp, x0
    16e8:	mov	x0, sp
    16ec:	bl	1e0 <getCurFilename>
    16f0:	mov	x20, x0
    16f4:	cbz	x0, 1794 <__llvm_profile_write_file+0x124>
    16f8:	bl	0 <__llvm_profile_get_version>
    16fc:	and	x0, x0, #0xffffffffffffff
    1700:	cmp	x0, #0x5
    1704:	b.ne	1764 <__llvm_profile_write_file+0xf4>  // b.any
    1708:	bl	0 <lprofSuspendSigKill>
    170c:	mov	w21, w0
    1710:	mov	x0, x20
    1714:	bl	6b8 <writeFile>
    1718:	mov	w19, w0
    171c:	cbnz	w0, 1730 <__llvm_profile_write_file+0xc0>
    1720:	cmp	w21, #0x1
    1724:	b.ne	16b4 <__llvm_profile_write_file+0x44>  // b.any
    1728:	bl	0 <lprofRestoreSigKill>
    172c:	b	16b4 <__llvm_profile_write_file+0x44>
    1730:	adrp	x0, 0 <stderr>
    1734:	ldr	x0, [x0]
    1738:	ldr	x22, [x0]
    173c:	bl	0 <__errno_location>
    1740:	ldr	w0, [x0]
    1744:	bl	0 <strerror>
    1748:	mov	x3, x0
    174c:	mov	x2, x20
    1750:	mov	x0, x22
    1754:	adrp	x1, 0 <fileWriter>
    1758:	add	x1, x1, #0x0
    175c:	bl	0 <fprintf>
    1760:	b	1720 <__llvm_profile_write_file+0xb0>
    1764:	adrp	x0, 0 <stderr>
    1768:	mov	w19, #0xffffffff            	// #-1
    176c:	ldr	x0, [x0]
    1770:	ldr	x20, [x0]
    1774:	bl	0 <__llvm_profile_get_version>
    1778:	adrp	x1, 0 <fileWriter>
    177c:	mov	x3, x0
    1780:	add	x1, x1, #0x0
    1784:	mov	x0, x20
    1788:	mov	w2, #0x5                   	// #5
    178c:	bl	0 <fprintf>
    1790:	b	16b4 <__llvm_profile_write_file+0x44>
    1794:	adrp	x0, 0 <stderr>
    1798:	adrp	x2, 0 <fileWriter>
    179c:	adrp	x1, 0 <fileWriter>
    17a0:	add	x2, x2, #0x0
    17a4:	ldr	x0, [x0]
    17a8:	add	x1, x1, #0x0
    17ac:	mov	w19, #0xffffffff            	// #-1
    17b0:	ldr	x0, [x0]
    17b4:	bl	0 <fprintf>
    17b8:	b	16b4 <__llvm_profile_write_file+0x44>
    17bc:	nop

00000000000017c0 <writeFileWithoutReturn>:
    17c0:	b	1670 <__llvm_profile_write_file>
    17c4:	nop

00000000000017c8 <__llvm_profile_dump>:
    17c8:	stp	x29, x30, [sp, #-32]!
    17cc:	adrp	x0, 0 <fileWriter>
    17d0:	add	x0, x0, #0x0
    17d4:	mov	x29, sp
    17d8:	ldr	w1, [x0, #176]
    17dc:	ldr	w0, [x0, #184]
    17e0:	str	x19, [sp, #16]
    17e4:	orr	w0, w0, w1
    17e8:	cbnz	w0, 180c <__llvm_profile_dump+0x44>
    17ec:	adrp	x0, 0 <stderr>
    17f0:	adrp	x2, 0 <fileWriter>
    17f4:	adrp	x1, 0 <fileWriter>
    17f8:	add	x2, x2, #0x0
    17fc:	ldr	x0, [x0]
    1800:	add	x1, x1, #0x0
    1804:	ldr	x0, [x0]
    1808:	bl	0 <fprintf>
    180c:	bl	1670 <__llvm_profile_write_file>
    1810:	mov	w19, w0
    1814:	bl	0 <lprofSetProfileDumped>
    1818:	mov	w0, w19
    181c:	ldr	x19, [sp, #16]
    1820:	ldp	x29, x30, [sp], #32
    1824:	ret

0000000000001828 <__llvm_orderfile_write_file>:
    1828:	stp	x29, x30, [sp, #-48]!
    182c:	mov	x29, sp
    1830:	stp	x19, x20, [sp, #16]
    1834:	stp	x21, x22, [sp, #32]
    1838:	bl	108 <getCurFilenameLength>
    183c:	add	w0, w0, #0x7
    1840:	mov	w1, #0x1                   	// #1
    1844:	sxtw	x0, w0
    1848:	add	x0, x0, #0xf
    184c:	and	x0, x0, #0xfffffffffffffff0
    1850:	sub	sp, sp, x0
    1854:	mov	x19, sp
    1858:	mov	x0, x19
    185c:	bl	1e0 <getCurFilename>
    1860:	cbz	x0, 1a0c <__llvm_orderfile_write_file+0x1e4>
    1864:	mov	x20, x0
    1868:	bl	0 <strlen>
    186c:	adrp	x1, 0 <fileWriter>
    1870:	add	x1, x1, #0x0
    1874:	add	x3, x19, w0, sxtw
    1878:	add	w2, w0, #0x6
    187c:	ldr	w4, [x1]
    1880:	str	w4, [x19, w0, sxtw]
    1884:	ldrh	w0, [x1, #4]
    1888:	strh	w0, [x3, #4]
    188c:	strb	wzr, [x19, w2, sxtw]
    1890:	bl	0 <__llvm_profile_get_version>
    1894:	and	x0, x0, #0xffffffffffffff
    1898:	cmp	x0, #0x5
    189c:	b.ne	19dc <__llvm_orderfile_write_file+0x1b4>  // b.any
    18a0:	bl	0 <lprofSuspendSigKill>
    18a4:	mov	w21, w0
    18a8:	adrp	x1, 0 <fileWriter>
    18ac:	mov	x0, x20
    18b0:	add	x1, x1, #0x0
    18b4:	bl	0 <fopen>
    18b8:	mov	x19, x0
    18bc:	cbz	x0, 1a34 <__llvm_orderfile_write_file+0x20c>
    18c0:	adrp	x1, 0 <free>
    18c4:	adrp	x2, 0 <FreeHook>
    18c8:	adrp	x0, 0 <fileWriter>
    18cc:	add	x0, x0, #0x0
    18d0:	ldr	x1, [x1]
    18d4:	str	x1, [x2]
    18d8:	bl	0 <getenv>
    18dc:	cbz	x0, 18e8 <__llvm_orderfile_write_file+0xc0>
    18e0:	ldrb	w1, [x0]
    18e4:	cbnz	w1, 1990 <__llvm_orderfile_write_file+0x168>
    18e8:	bl	0 <__llvm_profile_begin_orderfile>
    18ec:	mov	x3, x19
    18f0:	mov	x2, #0x20000               	// #131072
    18f4:	mov	x1, #0x4                   	// #4
    18f8:	bl	0 <fwrite>
    18fc:	cmp	x0, #0x20, lsl #12
    1900:	b.ne	1930 <__llvm_orderfile_write_file+0x108>  // b.any
    1904:	mov	x0, x19
    1908:	bl	0 <fclose>
    190c:	cmp	w21, #0x1
    1910:	mov	w19, #0x0                   	// #0
    1914:	b.eq	1974 <__llvm_orderfile_write_file+0x14c>  // b.none
    1918:	mov	sp, x29
    191c:	mov	w0, w19
    1920:	ldp	x19, x20, [sp, #16]
    1924:	ldp	x21, x22, [sp, #32]
    1928:	ldp	x29, x30, [sp], #48
    192c:	ret
    1930:	mov	x0, x19
    1934:	adrp	x22, 0 <stderr>
    1938:	mov	w19, #0x1                   	// #1
    193c:	bl	0 <fclose>
    1940:	ldr	x22, [x22]
    1944:	bl	0 <__errno_location>
    1948:	ldr	w0, [x0]
    194c:	ldr	x22, [x22]
    1950:	bl	0 <strerror>
    1954:	mov	x3, x0
    1958:	mov	x2, x20
    195c:	mov	x0, x22
    1960:	adrp	x1, 0 <fileWriter>
    1964:	add	x1, x1, #0x0
    1968:	bl	0 <fprintf>
    196c:	cmp	w21, #0x1
    1970:	b.ne	1918 <__llvm_orderfile_write_file+0xf0>  // b.any
    1974:	bl	0 <lprofRestoreSigKill>
    1978:	mov	sp, x29
    197c:	mov	w0, w19
    1980:	ldp	x19, x20, [sp, #16]
    1984:	ldp	x21, x22, [sp, #32]
    1988:	ldp	x29, x30, [sp], #48
    198c:	ret
    1990:	mov	w2, #0xa                   	// #10
    1994:	mov	x1, #0x0                   	// #0
    1998:	bl	0 <strtol>
    199c:	mov	x2, x0
    19a0:	adrp	x3, 0 <VPBufferSize>
    19a4:	mov	x1, #0x1                   	// #1
    19a8:	mov	w0, w0
    19ac:	str	w2, [x3]
    19b0:	bl	0 <calloc>
    19b4:	adrp	x1, 0 <DynamicBufferIOBuffer>
    19b8:	str	x0, [x1]
    19bc:	bl	0 <__llvm_profile_begin_orderfile>
    19c0:	mov	x3, x19
    19c4:	mov	x2, #0x20000               	// #131072
    19c8:	mov	x1, #0x4                   	// #4
    19cc:	bl	0 <fwrite>
    19d0:	cmp	x0, #0x20, lsl #12
    19d4:	b.ne	1930 <__llvm_orderfile_write_file+0x108>  // b.any
    19d8:	b	1904 <__llvm_orderfile_write_file+0xdc>
    19dc:	adrp	x0, 0 <stderr>
    19e0:	mov	w19, #0xffffffff            	// #-1
    19e4:	ldr	x0, [x0]
    19e8:	ldr	x20, [x0]
    19ec:	bl	0 <__llvm_profile_get_version>
    19f0:	adrp	x1, 0 <fileWriter>
    19f4:	mov	x3, x0
    19f8:	add	x1, x1, #0x0
    19fc:	mov	x0, x20
    1a00:	mov	w2, #0x5                   	// #5
    1a04:	bl	0 <fprintf>
    1a08:	b	1918 <__llvm_orderfile_write_file+0xf0>
    1a0c:	adrp	x0, 0 <stderr>
    1a10:	adrp	x2, 0 <fileWriter>
    1a14:	adrp	x1, 0 <fileWriter>
    1a18:	add	x2, x2, #0x0
    1a1c:	ldr	x0, [x0]
    1a20:	add	x1, x1, #0x0
    1a24:	mov	w19, #0xffffffff            	// #-1
    1a28:	ldr	x0, [x0]
    1a2c:	bl	0 <fprintf>
    1a30:	b	1918 <__llvm_orderfile_write_file+0xf0>
    1a34:	adrp	x22, 0 <stderr>
    1a38:	mov	x2, x20
    1a3c:	adrp	x1, 0 <fileWriter>
    1a40:	mov	w19, #0xffffffff            	// #-1
    1a44:	ldr	x0, [x22]
    1a48:	add	x1, x1, #0x0
    1a4c:	ldr	x0, [x0]
    1a50:	bl	0 <fprintf>
    1a54:	b	1940 <__llvm_orderfile_write_file+0x118>

0000000000001a58 <__llvm_orderfile_dump>:
    1a58:	b	1828 <__llvm_orderfile_write_file>
    1a5c:	nop

0000000000001a60 <__llvm_profile_register_write_file_atexit>:
    1a60:	stp	x29, x30, [sp, #-32]!
    1a64:	mov	x29, sp
    1a68:	str	x19, [sp, #16]
    1a6c:	adrp	x19, 0 <fileWriter>
    1a70:	add	x19, x19, #0x0
    1a74:	ldr	w0, [x19, #200]
    1a78:	cbz	w0, 1a8c <__llvm_profile_register_write_file_atexit+0x2c>
    1a7c:	mov	w0, #0x0                   	// #0
    1a80:	ldr	x19, [sp, #16]
    1a84:	ldp	x29, x30, [sp], #32
    1a88:	ret
    1a8c:	bl	0 <lprofSetupValueProfiler>
    1a90:	mov	w1, #0x1                   	// #1
    1a94:	str	w1, [x19, #200]
    1a98:	ldr	x19, [sp, #16]
    1a9c:	adrp	x0, 0 <fileWriter>
    1aa0:	ldp	x29, x30, [sp], #32
    1aa4:	add	x0, x0, #0x0
    1aa8:	b	0 <atexit>

InstrProfilingMerge.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <lprofGetLoadModuleSignature>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	str	x25, [sp, #64]
  18:	bl	0 <__llvm_profile_end_counters>
  1c:	mov	x19, x0
  20:	bl	0 <__llvm_profile_begin_counters>
  24:	mov	x24, x0
  28:	bl	0 <__llvm_profile_begin_data>
  2c:	mov	x20, x0
  30:	bl	0 <__llvm_profile_end_data>
  34:	mov	x1, x0
  38:	mov	x0, x20
  3c:	bl	0 <__llvm_profile_get_data_size>
  40:	mov	x22, x0
  44:	sub	x19, x19, x24
  48:	bl	0 <__llvm_profile_end_names>
  4c:	mov	x21, x0
  50:	bl	0 <__llvm_profile_begin_names>
  54:	mov	x23, x0
  58:	bl	0 <__llvm_profile_end_vnodes>
  5c:	mov	x20, x0
  60:	bl	0 <__llvm_profile_begin_vnodes>
  64:	mov	x25, x0
  68:	sub	x20, x20, x25
  6c:	bl	0 <__llvm_profile_begin_data>
  70:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  74:	sub	x21, x21, x23
  78:	asr	x20, x20, #3
  7c:	movk	x2, #0xaaab
  80:	asr	x19, x19, #3
  84:	lsl	x1, x22, #20
  88:	add	x21, x1, x21, lsl #40
  8c:	mov	x1, x0
  90:	mul	x20, x20, x2
  94:	lsl	x20, x20, #10
  98:	add	x19, x20, x19, lsl #30
  9c:	add	x0, x19, x21
  a0:	cbz	x22, ac <lprofGetLoadModuleSignature+0xac>
  a4:	ldr	x1, [x1]
  a8:	add	x0, x0, x1
  ac:	ldp	x19, x20, [sp, #16]
  b0:	ldp	x21, x22, [sp, #32]
  b4:	ldp	x23, x24, [sp, #48]
  b8:	ldr	x25, [sp, #64]
  bc:	ldp	x29, x30, [sp], #80
  c0:	ret
  c4:	nop

00000000000000c8 <__llvm_profile_check_compatibility>:
  c8:	cmp	x1, #0x4f
  cc:	b.hi	d8 <__llvm_profile_check_compatibility+0x10>  // b.pmore
  d0:	mov	w0, #0x1                   	// #1
  d4:	ret
  d8:	stp	x29, x30, [sp, #-64]!
  dc:	mov	x29, sp
  e0:	stp	x21, x22, [sp, #32]
  e4:	ldr	x21, [x0]
  e8:	stp	x19, x20, [sp, #16]
  ec:	mov	x20, x1
  f0:	mov	x19, x0
  f4:	ldr	x22, [x0, #16]
  f8:	bl	0 <__llvm_profile_get_magic>
  fc:	cmp	x21, x0
 100:	b.eq	118 <__llvm_profile_check_compatibility+0x50>  // b.none
 104:	mov	w0, #0x1                   	// #1
 108:	ldp	x19, x20, [sp, #16]
 10c:	ldp	x21, x22, [sp, #32]
 110:	ldp	x29, x30, [sp], #64
 114:	ret
 118:	ldr	x21, [x19, #8]
 11c:	bl	0 <__llvm_profile_get_version>
 120:	cmp	x21, x0
 124:	b.ne	104 <__llvm_profile_check_compatibility+0x3c>  // b.any
 128:	str	x23, [sp, #48]
 12c:	ldr	x23, [x19, #16]
 130:	bl	0 <__llvm_profile_begin_data>
 134:	mov	x21, x0
 138:	bl	0 <__llvm_profile_end_data>
 13c:	mov	x1, x0
 140:	mov	x0, x21
 144:	bl	0 <__llvm_profile_get_data_size>
 148:	cmp	x23, x0
 14c:	b.eq	158 <__llvm_profile_check_compatibility+0x90>  // b.none
 150:	ldr	x23, [sp, #48]
 154:	b	104 <__llvm_profile_check_compatibility+0x3c>
 158:	ldr	x23, [x19, #32]
 15c:	bl	0 <__llvm_profile_end_counters>
 160:	mov	x21, x0
 164:	bl	0 <__llvm_profile_begin_counters>
 168:	sub	x21, x21, x0
 16c:	cmp	x23, x21, asr #3
 170:	b.ne	150 <__llvm_profile_check_compatibility+0x88>  // b.any
 174:	ldr	x23, [x19, #48]
 178:	bl	0 <__llvm_profile_end_names>
 17c:	mov	x21, x0
 180:	bl	0 <__llvm_profile_begin_names>
 184:	sub	x21, x21, x0
 188:	cmp	x23, x21
 18c:	b.ne	150 <__llvm_profile_check_compatibility+0x88>  // b.any
 190:	ldr	x0, [x19, #72]
 194:	cmp	x0, #0x1
 198:	b.ne	150 <__llvm_profile_check_compatibility+0x88>  // b.any
 19c:	ldr	x0, [x19, #16]
 1a0:	ldr	x2, [x19, #32]
 1a4:	ldr	x1, [x19, #48]
 1a8:	add	x0, x0, x0, lsl #1
 1ac:	add	x1, x1, x2
 1b0:	add	x0, x1, x0, lsl #4
 1b4:	add	x0, x0, #0x50
 1b8:	cmp	x0, x20
 1bc:	b.hi	150 <__llvm_profile_check_compatibility+0x88>  // b.pmore
 1c0:	add	x19, x19, #0x50
 1c4:	mov	x0, #0x30                  	// #48
 1c8:	madd	x22, x22, x0, x19
 1cc:	bl	0 <__llvm_profile_begin_data>
 1d0:	cmp	x19, x22
 1d4:	b.cc	20c <__llvm_profile_check_compatibility+0x144>  // b.lo, b.ul, b.last
 1d8:	b	224 <__llvm_profile_check_compatibility+0x15c>
 1dc:	ldr	x1, [x0, #8]
 1e0:	ldr	x2, [x19, #8]
 1e4:	cmp	x2, x1
 1e8:	b.ne	150 <__llvm_profile_check_compatibility+0x88>  // b.any
 1ec:	ldr	w1, [x0, #40]
 1f0:	add	x19, x19, #0x30
 1f4:	ldur	w2, [x19, #-8]
 1f8:	add	x0, x0, #0x30
 1fc:	cmp	w2, w1
 200:	b.ne	150 <__llvm_profile_check_compatibility+0x88>  // b.any
 204:	cmp	x22, x19
 208:	b.ls	224 <__llvm_profile_check_compatibility+0x15c>  // b.plast
 20c:	ldr	x1, [x0]
 210:	ldr	x2, [x19]
 214:	cmp	x2, x1
 218:	b.eq	1dc <__llvm_profile_check_compatibility+0x114>  // b.none
 21c:	ldr	x23, [sp, #48]
 220:	b	104 <__llvm_profile_check_compatibility+0x3c>
 224:	mov	w0, #0x0                   	// #0
 228:	ldr	x23, [sp, #48]
 22c:	b	108 <__llvm_profile_check_compatibility+0x40>

0000000000000230 <__llvm_profile_merge_from_buffer>:
 230:	stp	x29, x30, [sp, #-80]!
 234:	mov	x29, sp
 238:	stp	x23, x24, [sp, #48]
 23c:	mov	x23, x0
 240:	stp	x19, x20, [sp, #16]
 244:	add	x19, x0, #0x50
 248:	ldr	x0, [x0, #16]
 24c:	stp	x21, x22, [sp, #32]
 250:	ldr	x20, [x23, #32]
 254:	add	x0, x0, x0, lsl #1
 258:	ldr	x22, [x23, #48]
 25c:	lsl	x21, x0, #4
 260:	lsl	x20, x20, #3
 264:	mov	x0, x22
 268:	bl	0 <__llvm_profile_get_num_padding_bytes>
 26c:	add	x1, x20, x22
 270:	add	x20, x19, x21
 274:	add	x1, x1, w0, uxtb
 278:	add	x22, x20, x1
 27c:	bl	0 <__llvm_profile_begin_data>
 280:	cmp	x19, x20
 284:	b.cs	36c <__llvm_profile_merge_from_buffer+0x13c>  // b.hs, b.nlast
 288:	add	x21, x23, x21
 28c:	str	x25, [sp, #64]
 290:	mov	x25, x0
 294:	adrp	x24, 8 <lprofGetLoadModuleSignature+0x8>
 298:	ldr	w0, [x19, #40]
 29c:	ldr	x4, [x19, #16]
 2a0:	ldr	x1, [x23, #56]
 2a4:	ldr	x3, [x25, #16]
 2a8:	sub	x4, x4, x1
 2ac:	and	x4, x4, #0xfffffffffffffff8
 2b0:	cbz	w0, 320 <__llvm_profile_merge_from_buffer+0xf0>
 2b4:	add	x1, x4, #0x60
 2b8:	add	x5, x4, #0x50
 2bc:	add	x1, x21, x1
 2c0:	add	x5, x21, x5
 2c4:	cmp	x3, x1
 2c8:	add	x1, x3, #0x10
 2cc:	ccmp	x5, x1, #0x2, cc  // cc = lo, ul, last
 2d0:	sub	w1, w0, #0x1
 2d4:	ccmp	w1, #0x4, #0x0, cs  // cs = hs, nlast
 2d8:	b.ls	380 <__llvm_profile_merge_from_buffer+0x150>  // b.plast
 2dc:	lsr	w6, w0, #1
 2e0:	mov	x2, #0x0                   	// #0
 2e4:	lsl	x6, x6, #4
 2e8:	ldr	q0, [x3, x2]
 2ec:	ldr	q1, [x5, x2]
 2f0:	add	v0.2d, v0.2d, v1.2d
 2f4:	str	q0, [x3, x2]
 2f8:	add	x2, x2, #0x10
 2fc:	cmp	x6, x2
 300:	b.ne	2e8 <__llvm_profile_merge_from_buffer+0xb8>  // b.any
 304:	and	w2, w0, #0xfffffffe
 308:	tbz	w0, #0, 320 <__llvm_profile_merge_from_buffer+0xf0>
 30c:	add	x4, x20, x4
 310:	ldr	x5, [x3, x2, lsl #3]
 314:	ldr	x4, [x4, x2, lsl #3]
 318:	add	x4, x5, x4
 31c:	str	x4, [x3, x2, lsl #3]
 320:	ldr	x2, [x24]
 324:	cbz	x2, 358 <__llvm_profile_merge_from_buffer+0x128>
 328:	ldrh	w0, [x19, #44]
 32c:	ldrh	w1, [x19, #46]
 330:	cmp	w0, #0x0
 334:	cset	w0, ne  // ne = any
 338:	cmp	w1, #0x0
 33c:	cinc	w0, w0, ne  // ne = any
 340:	cbz	w0, 358 <__llvm_profile_merge_from_buffer+0x128>
 344:	mov	x0, x22
 348:	mov	x1, x25
 34c:	blr	x2
 350:	ldr	w0, [x22]
 354:	add	x22, x22, x0
 358:	add	x19, x19, #0x30
 35c:	add	x25, x25, #0x30
 360:	cmp	x20, x19
 364:	b.hi	298 <__llvm_profile_merge_from_buffer+0x68>  // b.pmore
 368:	ldr	x25, [sp, #64]
 36c:	ldp	x19, x20, [sp, #16]
 370:	ldp	x21, x22, [sp, #32]
 374:	ldp	x23, x24, [sp, #48]
 378:	ldp	x29, x30, [sp], #80
 37c:	ret
 380:	add	x4, x20, x4
 384:	mov	x2, #0x0                   	// #0
 388:	ldr	x1, [x3, x2, lsl #3]
 38c:	ldr	x5, [x4, x2, lsl #3]
 390:	add	x1, x1, x5
 394:	str	x1, [x3, x2, lsl #3]
 398:	add	x2, x2, #0x1
 39c:	cmp	w0, w2
 3a0:	b.hi	388 <__llvm_profile_merge_from_buffer+0x158>  // b.pmore
 3a4:	b	320 <__llvm_profile_merge_from_buffer+0xf0>

InstrProfilingMergeFile.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <lprofMergeValueProfData>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x25, x26, [sp, #64]
   c:	mov	x26, x0
  10:	stp	x23, x24, [sp, #48]
  14:	mov	x23, x1
  18:	bl	0 <getFirstValueProfRecord>
  1c:	mov	x24, x0
  20:	ldr	w0, [x26, #4]
  24:	cbz	w0, d4 <lprofMergeValueProfData+0xd4>
  28:	mov	w25, #0x0                   	// #0
  2c:	stp	x19, x20, [sp, #16]
  30:	stp	x21, x22, [sp, #32]
  34:	mov	w22, #0x0                   	// #0
  38:	str	x27, [sp, #80]
  3c:	nop
  40:	mov	x0, x24
  44:	bl	0 <getValueProfRecordValueData>
  48:	ldr	w1, [x24, #4]
  4c:	mov	x20, x0
  50:	cbz	w1, ac <lprofMergeValueProfData+0xac>
  54:	mov	w19, #0x0                   	// #0
  58:	mov	w27, #0x0                   	// #0
  5c:	nop
  60:	add	x0, x24, w27, uxtw
  64:	ldrb	w21, [x0, #8]
  68:	cbz	w21, 9c <lprofMergeValueProfData+0x9c>
  6c:	add	w21, w21, w19
  70:	ubfiz	x3, x19, #4, #32
  74:	mov	w2, w22
  78:	add	x4, x20, x3
  7c:	add	w19, w19, #0x1
  80:	mov	x1, x23
  84:	ldr	x0, [x20, x3]
  88:	ldr	x3, [x4, #8]
  8c:	bl	0 <__llvm_profile_instrument_target_value>
  90:	cmp	w19, w21
  94:	b.ne	70 <lprofMergeValueProfData+0x70>  // b.any
  98:	ldr	w1, [x24, #4]
  9c:	add	w27, w27, #0x1
  a0:	add	w22, w22, #0x1
  a4:	cmp	w27, w1
  a8:	b.cc	60 <lprofMergeValueProfData+0x60>  // b.lo, b.ul, b.last
  ac:	mov	x0, x24
  b0:	bl	0 <getValueProfRecordNext>
  b4:	ldr	w1, [x26, #4]
  b8:	add	w25, w25, #0x1
  bc:	mov	x24, x0
  c0:	cmp	w1, w25
  c4:	b.hi	40 <lprofMergeValueProfData+0x40>  // b.pmore
  c8:	ldp	x19, x20, [sp, #16]
  cc:	ldp	x21, x22, [sp, #32]
  d0:	ldr	x27, [sp, #80]
  d4:	ldp	x23, x24, [sp, #48]
  d8:	ldp	x25, x26, [sp, #64]
  dc:	ldp	x29, x30, [sp], #96
  e0:	ret

InstrProfilingNameVar.c.o:     file format elf64-littleaarch64


InstrProfilingWriter.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <lprofBufferWriter>:
   0:	cbz	w2, 98 <lprofBufferWriter+0x98>
   4:	stp	x29, x30, [sp, #-48]!
   8:	sub	w2, w2, #0x1
   c:	mov	x29, sp
  10:	stp	x21, x22, [sp, #32]
  14:	add	x22, x1, #0x20
  18:	mov	x21, x0
  1c:	stp	x19, x20, [sp, #16]
  20:	mov	x19, x1
  24:	mov	w1, #0x20                  	// #32
  28:	ldr	x0, [x0, #8]
  2c:	umaddl	x22, w2, w1, x22
  30:	ldp	x1, x20, [x19]
  34:	add	x19, x19, #0x20
  38:	ldur	x2, [x19, #-16]
  3c:	mul	x20, x20, x2
  40:	cbz	x1, 74 <lprofBufferWriter+0x74>
  44:	mov	x2, x20
  48:	bl	0 <memcpy>
  4c:	ldr	x0, [x21, #8]
  50:	cmp	x22, x19
  54:	add	x0, x0, x20
  58:	str	x0, [x21, #8]
  5c:	b.ne	30 <lprofBufferWriter+0x30>  // b.any
  60:	mov	w0, #0x0                   	// #0
  64:	ldp	x19, x20, [sp, #16]
  68:	ldp	x21, x22, [sp, #32]
  6c:	ldp	x29, x30, [sp], #48
  70:	ret
  74:	add	x0, x0, x20
  78:	str	x0, [x21, #8]
  7c:	cmp	x22, x19
  80:	b.ne	30 <lprofBufferWriter+0x30>  // b.any
  84:	mov	w0, #0x0                   	// #0
  88:	ldp	x19, x20, [sp, #16]
  8c:	ldp	x21, x22, [sp, #32]
  90:	ldp	x29, x30, [sp], #48
  94:	ret
  98:	mov	w0, #0x0                   	// #0
  9c:	ret

00000000000000a0 <lprofCreateBufferIO>:
  a0:	adrp	x1, 0 <lprofBufferWriter>
  a4:	add	x4, x1, #0x0
  a8:	mov	x2, x0
  ac:	ldr	x3, [x1]
  b0:	ldr	w4, [x4, #8]
  b4:	cbz	x3, d4 <lprofCreateBufferIO+0x34>
  b8:	add	x1, x1, #0x0
  bc:	add	x0, x1, #0x10
  c0:	str	wzr, [x0, #8]
  c4:	str	x2, [x1, #16]
  c8:	str	x3, [x0, #16]
  cc:	stp	w4, wzr, [x0, #24]
  d0:	ret
  d4:	add	x1, x1, #0x0
  d8:	mov	w4, #0x2000                	// #8192
  dc:	add	x0, x1, #0x10
  e0:	adrp	x3, 0 <lprofBufferWriter>
  e4:	add	x3, x3, #0x0
  e8:	str	wzr, [x0, #8]
  ec:	str	x3, [x0, #16]
  f0:	str	x2, [x1, #16]
  f4:	stp	w4, wzr, [x0, #24]
  f8:	ret
  fc:	nop

0000000000000100 <lprofDeleteBufferIO>:
 100:	stp	x29, x30, [sp, #-32]!
 104:	mov	x29, sp
 108:	ldr	w1, [x0, #8]
 10c:	stp	x19, x20, [sp, #16]
 110:	adrp	x19, 0 <lprofBufferWriter>
 114:	cbz	w1, 128 <lprofDeleteBufferIO+0x28>
 118:	add	x1, x19, #0x0
 11c:	ldr	x0, [x0]
 120:	ldr	x1, [x1, #48]
 124:	blr	x1
 128:	ldr	x0, [x19]
 12c:	add	x20, x19, #0x0
 130:	cbz	x0, 144 <lprofDeleteBufferIO+0x44>
 134:	ldr	x1, [x20, #48]
 138:	blr	x1
 13c:	str	xzr, [x19]
 140:	str	wzr, [x20, #8]
 144:	ldp	x19, x20, [sp, #16]
 148:	ldp	x29, x30, [sp], #32
 14c:	ret

0000000000000150 <lprofBufferIOWrite>:
 150:	stp	x29, x30, [sp, #-96]!
 154:	mov	x29, sp
 158:	ldr	w3, [x0, #28]
 15c:	stp	x19, x20, [sp, #16]
 160:	mov	x19, x0
 164:	ldr	w0, [x0, #24]
 168:	str	x21, [sp, #32]
 16c:	cmp	w3, #0x0
 170:	mov	x21, x1
 174:	add	w1, w3, w2
 178:	mov	w20, w2
 17c:	ccmp	w1, w0, #0x0, ne  // ne = any
 180:	b.hi	21c <lprofBufferIOWrite+0xcc>  // b.pmore
 184:	mov	w1, w20
 188:	mov	x2, #0x1                   	// #1
 18c:	stp	x21, x2, [sp, #64]
 190:	cmp	w20, w0
 194:	str	x1, [sp, #80]
 198:	str	wzr, [sp, #88]
 19c:	b.ls	1c8 <lprofBufferIOWrite+0x78>  // b.plast
 1a0:	ldr	x0, [x19]
 1a4:	add	x1, sp, #0x40
 1a8:	ldr	x3, [x0]
 1ac:	blr	x3
 1b0:	cmp	w0, #0x0
 1b4:	csetm	w0, ne  // ne = any
 1b8:	ldp	x19, x20, [sp, #16]
 1bc:	ldr	x21, [sp, #32]
 1c0:	ldp	x29, x30, [sp], #96
 1c4:	ret
 1c8:	ldr	x1, [x19, #16]
 1cc:	add	x0, sp, #0x30
 1d0:	add	x1, x1, w3, uxtw
 1d4:	bl	0 <initBufferWriter>
 1d8:	ldp	x1, x20, [sp, #64]
 1dc:	ldr	x2, [sp, #80]
 1e0:	mul	x20, x20, x2
 1e4:	cbz	x1, 1f4 <lprofBufferIOWrite+0xa4>
 1e8:	ldr	x0, [sp, #56]
 1ec:	mov	x2, x20
 1f0:	bl	0 <memcpy>
 1f4:	ldr	x1, [sp, #56]
 1f8:	mov	w0, #0x0                   	// #0
 1fc:	ldr	x2, [x19, #16]
 200:	add	x1, x1, x20
 204:	ldr	x21, [sp, #32]
 208:	sub	x1, x1, x2
 20c:	str	w1, [x19, #28]
 210:	ldp	x19, x20, [sp, #16]
 214:	ldp	x29, x30, [sp], #96
 218:	ret
 21c:	ldr	x0, [x19]
 220:	mov	w3, w3
 224:	ldr	x1, [x19, #16]
 228:	mov	x2, #0x1                   	// #1
 22c:	ldr	x4, [x0]
 230:	stp	x1, x2, [sp, #64]
 234:	add	x1, sp, #0x40
 238:	str	x3, [sp, #80]
 23c:	str	wzr, [sp, #88]
 240:	blr	x4
 244:	mov	w3, w0
 248:	mov	w0, #0xffffffff            	// #-1
 24c:	cbnz	w3, 1b8 <lprofBufferIOWrite+0x68>
 250:	ldr	w0, [x19, #24]
 254:	str	wzr, [x19, #28]
 258:	b	184 <lprofBufferIOWrite+0x34>
 25c:	nop

0000000000000260 <writeOneValueProfData.constprop.0>:
 260:	stp	x29, x30, [sp, #-176]!
 264:	mov	x29, sp
 268:	stp	x27, x28, [sp, #80]
 26c:	mov	x27, x0
 270:	ldrh	w0, [x1, #44]
 274:	stp	x19, x20, [sp, #16]
 278:	mov	x20, x1
 27c:	stp	x21, x22, [sp, #32]
 280:	stp	x23, x24, [sp, #48]
 284:	stp	x25, x26, [sp, #64]
 288:	cbz	w0, 3a8 <writeOneValueProfData.constprop.0+0x148>
 28c:	ldr	x1, [x27, #8]
 290:	blr	x1
 294:	sub	w2, w0, #0x8
 298:	add	x0, x2, #0xf
 29c:	mov	w1, #0x0                   	// #0
 2a0:	and	x0, x0, #0x1fffffff0
 2a4:	sub	sp, sp, x0
 2a8:	mov	x0, sp
 2ac:	str	x0, [x29, #160]
 2b0:	bl	0 <memset>
 2b4:	ldrh	w0, [x20, #46]
 2b8:	cbnz	w0, 37c <writeOneValueProfData.constprop.0+0x11c>
 2bc:	str	xzr, [x29, #168]
 2c0:	ldr	x2, [x27]
 2c4:	add	x0, x29, #0xa0
 2c8:	mov	x1, x0
 2cc:	str	x0, [x29, #112]
 2d0:	mov	x0, x20
 2d4:	blr	x2
 2d8:	mov	w19, w0
 2dc:	cbz	w0, 358 <writeOneValueProfData.constprop.0+0xf8>
 2e0:	ldr	x0, [x27, #32]
 2e4:	adrp	x21, 0 <lprofBufferWriter>
 2e8:	add	x21, x21, #0x0
 2ec:	add	x23, x29, #0x88
 2f0:	add	x22, x21, #0x10
 2f4:	blr	x0
 2f8:	mov	w3, w0
 2fc:	mov	x1, x23
 300:	mov	x0, x22
 304:	mov	w2, #0x8                   	// #8
 308:	stp	w3, w19, [x29, #136]
 30c:	bl	150 <lprofBufferIOWrite>
 310:	cbnz	w0, 4a4 <writeOneValueProfData.constprop.0+0x244>
 314:	ldr	x1, [x27, #16]
 318:	mov	x0, x23
 31c:	add	x23, x23, #0x8
 320:	blr	x1
 324:	cmp	x23, x0
 328:	b.ne	4a4 <writeOneValueProfData.constprop.0+0x244>  // b.any
 32c:	ldrh	w3, [x20, #44]
 330:	add	x0, x29, #0x90
 334:	str	x0, [x29, #104]
 338:	add	x20, x20, #0x2c
 33c:	str	xzr, [x29, #120]
 340:	add	x21, x21, #0x38
 344:	ldr	w23, [x29, #120]
 348:	cbnz	w3, 3c4 <writeOneValueProfData.constprop.0+0x164>
 34c:	ldr	x0, [x29, #120]
 350:	add	x20, x20, #0x2
 354:	cbz	x0, 3b0 <writeOneValueProfData.constprop.0+0x150>
 358:	mov	sp, x29
 35c:	mov	w0, #0x0                   	// #0
 360:	ldp	x19, x20, [sp, #16]
 364:	ldp	x21, x22, [sp, #32]
 368:	ldp	x23, x24, [sp, #48]
 36c:	ldp	x25, x26, [sp, #64]
 370:	ldp	x27, x28, [sp, #80]
 374:	ldp	x29, x30, [sp], #176
 378:	ret
 37c:	ldr	x1, [x27, #8]
 380:	blr	x1
 384:	sub	w2, w0, #0x8
 388:	add	x0, x2, #0xf
 38c:	mov	w1, #0x0                   	// #0
 390:	and	x0, x0, #0x1fffffff0
 394:	sub	sp, sp, x0
 398:	mov	x0, sp
 39c:	str	x0, [x29, #168]
 3a0:	bl	0 <memset>
 3a4:	b	2c0 <writeOneValueProfData.constprop.0+0x60>
 3a8:	str	xzr, [x29, #160]
 3ac:	b	2b4 <writeOneValueProfData.constprop.0+0x54>
 3b0:	ldrh	w3, [x20]
 3b4:	mov	x0, #0x1                   	// #1
 3b8:	str	x0, [x29, #120]
 3bc:	ldr	w23, [x29, #120]
 3c0:	cbz	w3, 34c <writeOneValueProfData.constprop.0+0xec>
 3c4:	ldr	x1, [x29, #104]
 3c8:	mov	x0, x22
 3cc:	ldr	x19, [x29, #120]
 3d0:	mov	w2, #0x8                   	// #8
 3d4:	stp	w19, w3, [x29, #144]
 3d8:	bl	150 <lprofBufferIOWrite>
 3dc:	cbnz	w0, 4a4 <writeOneValueProfData.constprop.0+0x244>
 3e0:	ldrh	w0, [x20]
 3e4:	ldr	x1, [x27, #8]
 3e8:	blr	x1
 3ec:	sub	w2, w0, #0x8
 3f0:	ldr	x1, [x29, #112]
 3f4:	mov	x0, x22
 3f8:	ldr	x1, [x1, x19, lsl #3]
 3fc:	bl	150 <lprofBufferIOWrite>
 400:	cbnz	w0, 4a4 <writeOneValueProfData.constprop.0+0x244>
 404:	ldrh	w0, [x20]
 408:	cbz	w0, 34c <writeOneValueProfData.constprop.0+0xec>
 40c:	ldr	x2, [x27, #24]
 410:	mov	w0, w23
 414:	mov	w25, #0x0                   	// #0
 418:	mov	w24, #0x10                  	// #16
 41c:	mov	w1, w25
 420:	blr	x2
 424:	mov	w19, w0
 428:	cbnz	w0, 458 <writeOneValueProfData.constprop.0+0x1f8>
 42c:	nop
 430:	ldrh	w0, [x20]
 434:	add	w25, w25, #0x1
 438:	cmp	w25, w0
 43c:	b.cs	34c <writeOneValueProfData.constprop.0+0xec>  // b.hs, b.nlast
 440:	ldr	x2, [x27, #24]
 444:	mov	w1, w25
 448:	mov	w0, w23
 44c:	blr	x2
 450:	mov	w19, w0
 454:	cbz	w0, 430 <writeOneValueProfData.constprop.0+0x1d0>
 458:	mov	x26, #0x0                   	// #0
 45c:	b	468 <writeOneValueProfData.constprop.0+0x208>
 460:	subs	w19, w19, w28
 464:	b.eq	430 <writeOneValueProfData.constprop.0+0x1d0>  // b.none
 468:	cmp	w19, #0x10
 46c:	mov	x3, x26
 470:	ldr	x6, [x27, #40]
 474:	csel	w28, w19, w24, ls  // ls = plast
 478:	mov	w4, w28
 47c:	mov	x2, x21
 480:	mov	w1, w25
 484:	mov	w0, w23
 488:	blr	x6
 48c:	mov	x26, x0
 490:	lsl	w2, w28, #4
 494:	mov	x1, x21
 498:	mov	x0, x22
 49c:	bl	150 <lprofBufferIOWrite>
 4a0:	cbz	w0, 460 <writeOneValueProfData.constprop.0+0x200>
 4a4:	mov	sp, x29
 4a8:	mov	w0, #0xffffffff            	// #-1
 4ac:	ldp	x19, x20, [sp, #16]
 4b0:	ldp	x21, x22, [sp, #32]
 4b4:	ldp	x23, x24, [sp, #48]
 4b8:	ldp	x25, x26, [sp, #64]
 4bc:	ldp	x27, x28, [sp, #80]
 4c0:	ldp	x29, x30, [sp], #176
 4c4:	ret

00000000000004c8 <lprofBufferIOFlush>:
 4c8:	ldr	w1, [x0, #28]
 4cc:	cbz	w1, 520 <lprofBufferIOFlush+0x58>
 4d0:	stp	x29, x30, [sp, #-64]!
 4d4:	mov	w1, w1
 4d8:	mov	x2, #0x1                   	// #1
 4dc:	mov	x29, sp
 4e0:	str	x19, [sp, #16]
 4e4:	mov	x19, x0
 4e8:	ldr	x0, [x0]
 4ec:	ldr	x4, [x19, #16]
 4f0:	ldr	x3, [x0]
 4f4:	stp	x4, x2, [sp, #32]
 4f8:	str	x1, [sp, #48]
 4fc:	add	x1, sp, #0x20
 500:	str	wzr, [sp, #56]
 504:	blr	x3
 508:	cbnz	w0, 528 <lprofBufferIOFlush+0x60>
 50c:	mov	w0, #0x0                   	// #0
 510:	str	wzr, [x19, #28]
 514:	ldr	x19, [sp, #16]
 518:	ldp	x29, x30, [sp], #64
 51c:	ret
 520:	mov	w0, #0x0                   	// #0
 524:	ret
 528:	mov	w0, #0xffffffff            	// #-1
 52c:	b	514 <lprofBufferIOFlush+0x4c>

0000000000000530 <lprofWriteDataImpl>:
 530:	stp	x29, x30, [sp, #-464]!
 534:	mov	x29, sp
 538:	stp	x19, x20, [sp, #16]
 53c:	mov	x19, x1
 540:	mov	x20, x6
 544:	mov	x1, x2
 548:	stp	x21, x22, [sp, #32]
 54c:	mov	x22, x4
 550:	stp	x23, x24, [sp, #48]
 554:	mov	x23, x2
 558:	mov	x24, x5
 55c:	stp	x25, x26, [sp, #64]
 560:	mov	x26, x0
 564:	mov	x25, x3
 568:	mov	x0, x19
 56c:	str	x27, [sp, #80]
 570:	mov	x27, x7
 574:	bl	0 <__llvm_profile_get_data_size>
 578:	cbnz	x0, 59c <lprofWriteDataImpl+0x6c>
 57c:	mov	w0, #0x0                   	// #0
 580:	ldp	x19, x20, [sp, #16]
 584:	ldp	x21, x22, [sp, #32]
 588:	ldp	x23, x24, [sp, #48]
 58c:	ldp	x25, x26, [sp, #64]
 590:	ldr	x27, [sp, #80]
 594:	ldp	x29, x30, [sp], #464
 598:	ret
 59c:	sub	x22, x22, x25
 5a0:	sub	x27, x27, x20
 5a4:	mov	x2, x27
 5a8:	add	x5, sp, #0x78
 5ac:	asr	x22, x22, #3
 5b0:	add	x4, sp, #0x70
 5b4:	mov	x1, x22
 5b8:	add	x3, sp, #0x68
 5bc:	mov	x21, x0
 5c0:	bl	0 <__llvm_profile_get_padding_sizes_for_counters>
 5c4:	bl	0 <__llvm_profile_get_magic>
 5c8:	str	x0, [sp, #160]
 5cc:	bl	0 <__llvm_profile_get_version>
 5d0:	stp	x0, x21, [sp, #168]
 5d4:	ldr	w1, [sp, #464]
 5d8:	ldp	x6, x5, [sp, #104]
 5dc:	mov	x4, #0x1                   	// #1
 5e0:	add	x3, sp, #0xa0
 5e4:	cmp	w1, #0x0
 5e8:	mov	x9, #0x50                  	// #80
 5ec:	mov	x8, #0x30                  	// #48
 5f0:	mov	x7, #0x8                   	// #8
 5f4:	stp	x6, x22, [sp, #184]
 5f8:	add	x1, sp, #0xf0
 5fc:	stp	x5, x27, [sp, #200]
 600:	mov	x0, x26
 604:	mov	w2, #0x7                   	// #7
 608:	stp	x25, x20, [sp, #216]
 60c:	csel	x20, x20, xzr, eq  // eq = none
 610:	stp	x4, x3, [sp, #232]
 614:	stp	x9, x4, [sp, #248]
 618:	str	wzr, [sp, #264]
 61c:	stp	x19, x8, [sp, #272]
 620:	str	x21, [sp, #288]
 624:	str	wzr, [sp, #296]
 628:	stp	xzr, x4, [sp, #304]
 62c:	str	x6, [sp, #320]
 630:	str	w4, [sp, #328]
 634:	stp	x25, x7, [sp, #336]
 638:	str	x22, [sp, #352]
 63c:	str	wzr, [sp, #360]
 640:	stp	xzr, x4, [sp, #368]
 644:	str	x5, [sp, #384]
 648:	str	w4, [sp, #392]
 64c:	stp	x20, x4, [sp, #400]
 650:	ldr	x3, [x26]
 654:	str	x27, [sp, #416]
 658:	ldr	x5, [sp, #120]
 65c:	str	wzr, [sp, #424]
 660:	stp	xzr, x4, [sp, #432]
 664:	str	x5, [sp, #448]
 668:	str	w4, [sp, #456]
 66c:	blr	x3
 670:	cbnz	w0, 6d4 <lprofWriteDataImpl+0x1a4>
 674:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
 678:	cmp	x24, #0x0
 67c:	ccmp	w0, #0x0, #0x0, ne  // ne = any
 680:	b.ne	57c <lprofWriteDataImpl+0x4c>  // b.any
 684:	adrp	x20, 0 <lprofBufferWriter>
 688:	add	x0, x20, #0x0
 68c:	ldr	x2, [x20]
 690:	ldr	w3, [x0, #8]
 694:	cbz	x2, 770 <lprofWriteDataImpl+0x240>
 698:	add	x1, x20, #0x0
 69c:	cmp	x19, x23
 6a0:	str	x26, [x1, #16]
 6a4:	str	wzr, [x1, #24]
 6a8:	str	x2, [x1, #32]
 6ac:	stp	w3, wzr, [x1, #40]
 6b0:	b.cc	6c0 <lprofWriteDataImpl+0x190>  // b.lo, b.ul, b.last
 6b4:	b	74c <lprofWriteDataImpl+0x21c>
 6b8:	cmp	x23, x19
 6bc:	b.ls	6f4 <lprofWriteDataImpl+0x1c4>  // b.plast
 6c0:	mov	x1, x19
 6c4:	mov	x0, x24
 6c8:	add	x19, x19, #0x30
 6cc:	bl	260 <writeOneValueProfData.constprop.0>
 6d0:	cbz	w0, 6b8 <lprofWriteDataImpl+0x188>
 6d4:	mov	w0, #0xffffffff            	// #-1
 6d8:	ldp	x19, x20, [sp, #16]
 6dc:	ldp	x21, x22, [sp, #32]
 6e0:	ldp	x23, x24, [sp, #48]
 6e4:	ldp	x25, x26, [sp, #64]
 6e8:	ldr	x27, [sp, #80]
 6ec:	ldp	x29, x30, [sp], #464
 6f0:	ret
 6f4:	add	x0, x20, #0x0
 6f8:	add	x19, x0, #0x10
 6fc:	ldr	w1, [x19, #28]
 700:	cbz	w1, 780 <lprofWriteDataImpl+0x250>
 704:	ldr	x0, [x0, #16]
 708:	mov	w1, w1
 70c:	ldr	x4, [x19, #16]
 710:	mov	x2, #0x1                   	// #1
 714:	ldr	x3, [x0]
 718:	stp	x4, x2, [sp, #128]
 71c:	str	x1, [sp, #144]
 720:	add	x1, sp, #0x80
 724:	str	wzr, [sp, #152]
 728:	blr	x3
 72c:	cbnz	w0, 6d4 <lprofWriteDataImpl+0x1a4>
 730:	ldr	w0, [x19, #8]
 734:	str	wzr, [x19, #28]
 738:	cbz	w0, 74c <lprofWriteDataImpl+0x21c>
 73c:	add	x1, x20, #0x0
 740:	ldr	x0, [x1, #16]
 744:	ldr	x1, [x1, #48]
 748:	blr	x1
 74c:	ldr	x0, [x20]
 750:	add	x19, x20, #0x0
 754:	cbz	x0, 57c <lprofWriteDataImpl+0x4c>
 758:	ldr	x1, [x19, #48]
 75c:	blr	x1
 760:	str	xzr, [x20]
 764:	mov	w0, #0x0                   	// #0
 768:	str	wzr, [x19, #8]
 76c:	b	580 <lprofWriteDataImpl+0x50>
 770:	adrp	x2, 0 <lprofBufferWriter>
 774:	mov	w3, #0x2000                	// #8192
 778:	add	x2, x2, #0x0
 77c:	b	698 <lprofWriteDataImpl+0x168>
 780:	ldr	w0, [x19, #8]
 784:	b	738 <lprofWriteDataImpl+0x208>

0000000000000788 <lprofWriteData>:
 788:	sub	sp, sp, #0x60
 78c:	stp	x29, x30, [sp, #16]
 790:	add	x29, sp, #0x10
 794:	stp	x19, x20, [sp, #32]
 798:	mov	x19, x0
 79c:	stp	x21, x22, [sp, #48]
 7a0:	stp	x23, x24, [sp, #64]
 7a4:	mov	x24, x1
 7a8:	stp	x25, x26, [sp, #80]
 7ac:	mov	w26, w2
 7b0:	bl	0 <__llvm_profile_begin_data>
 7b4:	mov	x20, x0
 7b8:	bl	0 <__llvm_profile_end_data>
 7bc:	mov	x21, x0
 7c0:	bl	0 <__llvm_profile_begin_counters>
 7c4:	mov	x22, x0
 7c8:	bl	0 <__llvm_profile_end_counters>
 7cc:	mov	x23, x0
 7d0:	bl	0 <__llvm_profile_begin_names>
 7d4:	mov	x25, x0
 7d8:	bl	0 <__llvm_profile_end_names>
 7dc:	str	w26, [sp]
 7e0:	mov	x7, x0
 7e4:	mov	x6, x25
 7e8:	mov	x5, x24
 7ec:	mov	x4, x23
 7f0:	mov	x3, x22
 7f4:	mov	x2, x21
 7f8:	mov	x1, x20
 7fc:	mov	x0, x19
 800:	bl	530 <lprofWriteDataImpl>
 804:	ldp	x29, x30, [sp, #16]
 808:	ldp	x19, x20, [sp, #32]
 80c:	ldp	x21, x22, [sp, #48]
 810:	ldp	x23, x24, [sp, #64]
 814:	ldp	x25, x26, [sp, #80]
 818:	add	sp, sp, #0x60
 81c:	ret

InstrProfilingPlatformDarwin.c.o:     file format elf64-littleaarch64


InstrProfilingPlatformFuchsia.c.o:     file format elf64-littleaarch64


InstrProfilingPlatformLinux.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__llvm_profile_begin_data>:
   0:	adrp	x0, 0 <__start___llvm_prf_data>
   4:	add	x0, x0, #0x0
   8:	ret
   c:	nop

0000000000000010 <__llvm_profile_end_data>:
  10:	adrp	x0, 0 <__stop___llvm_prf_data>
  14:	add	x0, x0, #0x0
  18:	ret
  1c:	nop

0000000000000020 <__llvm_profile_begin_names>:
  20:	adrp	x0, 0 <__start___llvm_prf_names>
  24:	add	x0, x0, #0x0
  28:	ret
  2c:	nop

0000000000000030 <__llvm_profile_end_names>:
  30:	adrp	x0, 0 <__stop___llvm_prf_names>
  34:	add	x0, x0, #0x0
  38:	ret
  3c:	nop

0000000000000040 <__llvm_profile_begin_counters>:
  40:	adrp	x0, 0 <__start___llvm_prf_cnts>
  44:	add	x0, x0, #0x0
  48:	ret
  4c:	nop

0000000000000050 <__llvm_profile_end_counters>:
  50:	adrp	x0, 0 <__stop___llvm_prf_cnts>
  54:	add	x0, x0, #0x0
  58:	ret
  5c:	nop

0000000000000060 <__llvm_profile_begin_orderfile>:
  60:	adrp	x0, 0 <__start___llvm_orderfile>
  64:	add	x0, x0, #0x0
  68:	ret
  6c:	nop

0000000000000070 <__llvm_profile_begin_vnodes>:
  70:	adrp	x0, 0 <__start___llvm_prf_vnds>
  74:	add	x0, x0, #0x0
  78:	ret
  7c:	nop

0000000000000080 <__llvm_profile_end_vnodes>:
  80:	adrp	x0, 0 <__stop___llvm_prf_vnds>
  84:	add	x0, x0, #0x0
  88:	ret

InstrProfilingPlatformOther.c.o:     file format elf64-littleaarch64


InstrProfilingPlatformWindows.c.o:     file format elf64-littleaarch64


InstrProfilingRuntime.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text.startup:

0000000000000000 <_GLOBAL__sub_I_InstrProfilingRuntime.cpp>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	bl	0 <__llvm_profile_initialize_file>
   c:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
  10:	cbz	w0, 1c <_GLOBAL__sub_I_InstrProfilingRuntime.cpp+0x1c>
  14:	ldp	x29, x30, [sp], #16
  18:	ret
  1c:	ldp	x29, x30, [sp], #16
  20:	b	0 <__llvm_profile_register_write_file_atexit>

InstrProfilingUtil.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__llvm_profile_recursive_mkdir>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	ldrb	w19, [x0, #1]
  10:	cbz	w19, 3c <__llvm_profile_recursive_mkdir+0x3c>
  14:	stp	x21, x22, [sp, #32]
  18:	adrp	x22, 0 <__llvm_profile_recursive_mkdir>
  1c:	mov	x21, x0
  20:	ldr	x22, [x22]
  24:	add	x20, x0, #0x1
  28:	cmp	w19, #0x2f
  2c:	b.eq	48 <__llvm_profile_recursive_mkdir+0x48>  // b.none
  30:	ldrb	w19, [x20, #1]!
  34:	cbnz	w19, 28 <__llvm_profile_recursive_mkdir+0x28>
  38:	ldp	x21, x22, [sp, #32]
  3c:	ldp	x19, x20, [sp, #16]
  40:	ldp	x29, x30, [sp], #48
  44:	ret
  48:	strb	wzr, [x20]
  4c:	mov	x0, x21
  50:	ldr	w1, [x22]
  54:	bl	0 <mkdir>
  58:	strb	w19, [x20]
  5c:	ldrb	w19, [x20, #1]!
  60:	cbnz	w19, 28 <__llvm_profile_recursive_mkdir+0x28>
  64:	b	38 <__llvm_profile_recursive_mkdir+0x38>

0000000000000068 <__llvm_profile_set_dir_mode>:
  68:	adrp	x1, 0 <__llvm_profile_recursive_mkdir>
  6c:	ldr	x1, [x1]
  70:	str	w0, [x1]
  74:	ret

0000000000000078 <__llvm_profile_get_dir_mode>:
  78:	adrp	x0, 0 <__llvm_profile_recursive_mkdir>
  7c:	ldr	x0, [x0]
  80:	ldr	w0, [x0]
  84:	ret

0000000000000088 <lprofGetHostName>:
  88:	stp	x29, x30, [sp, #-448]!
  8c:	mov	x29, sp
  90:	str	x21, [sp, #32]
  94:	add	x21, sp, #0x38
  98:	stp	x19, x20, [sp, #16]
  9c:	mov	x19, x0
  a0:	mov	w20, w1
  a4:	mov	x0, x21
  a8:	bl	0 <uname>
  ac:	tbz	w0, #31, c0 <lprofGetHostName+0x38>
  b0:	ldp	x19, x20, [sp, #16]
  b4:	ldr	x21, [sp, #32]
  b8:	ldp	x29, x30, [sp], #448
  bc:	ret
  c0:	sxtw	x2, w20
  c4:	add	x1, x21, #0x41
  c8:	mov	x0, x19
  cc:	bl	0 <strncpy>
  d0:	mov	w0, #0x0                   	// #0
  d4:	ldp	x19, x20, [sp, #16]
  d8:	ldr	x21, [sp, #32]
  dc:	ldp	x29, x30, [sp], #448
  e0:	ret
  e4:	nop

00000000000000e8 <lprofLockFd>:
  e8:	stp	x29, x30, [sp, #-64]!
  ec:	mov	x29, sp
  f0:	stp	x19, x20, [sp, #16]
  f4:	mov	w19, w0
  f8:	add	x20, sp, #0x20
  fc:	strh	wzr, [sp, #34]
 100:	stp	xzr, xzr, [sp, #40]
 104:	bl	0 <getpid>
 108:	mov	w1, #0x1                   	// #1
 10c:	strh	w1, [sp, #32]
 110:	str	w0, [sp, #56]
 114:	b	128 <lprofLockFd+0x40>
 118:	bl	0 <__errno_location>
 11c:	ldr	w1, [x0]
 120:	cmp	w1, #0x4
 124:	b.ne	150 <lprofLockFd+0x68>  // b.any
 128:	mov	x2, x20
 12c:	mov	w0, w19
 130:	mov	w1, #0x7                   	// #7
 134:	bl	0 <fcntl>
 138:	cmn	w0, #0x1
 13c:	b.eq	118 <lprofLockFd+0x30>  // b.none
 140:	mov	w0, #0x0                   	// #0
 144:	ldp	x19, x20, [sp, #16]
 148:	ldp	x29, x30, [sp], #64
 14c:	ret
 150:	cmp	w1, #0x25
 154:	csetm	w0, eq  // eq = none
 158:	ldp	x19, x20, [sp, #16]
 15c:	ldp	x29, x30, [sp], #64
 160:	ret
 164:	nop

0000000000000168 <lprofUnlockFd>:
 168:	stp	x29, x30, [sp, #-64]!
 16c:	mov	x29, sp
 170:	stp	x19, x20, [sp, #16]
 174:	mov	w19, w0
 178:	add	x20, sp, #0x20
 17c:	strh	wzr, [sp, #34]
 180:	stp	xzr, xzr, [sp, #40]
 184:	bl	0 <getpid>
 188:	mov	w1, #0x2                   	// #2
 18c:	strh	w1, [sp, #32]
 190:	str	w0, [sp, #56]
 194:	b	1a8 <lprofUnlockFd+0x40>
 198:	bl	0 <__errno_location>
 19c:	ldr	w1, [x0]
 1a0:	cmp	w1, #0x4
 1a4:	b.ne	1d0 <lprofUnlockFd+0x68>  // b.any
 1a8:	mov	x2, x20
 1ac:	mov	w0, w19
 1b0:	mov	w1, #0x7                   	// #7
 1b4:	bl	0 <fcntl>
 1b8:	cmn	w0, #0x1
 1bc:	b.eq	198 <lprofUnlockFd+0x30>  // b.none
 1c0:	mov	w0, #0x0                   	// #0
 1c4:	ldp	x19, x20, [sp, #16]
 1c8:	ldp	x29, x30, [sp], #64
 1cc:	ret
 1d0:	cmp	w1, #0x25
 1d4:	csetm	w0, eq  // eq = none
 1d8:	ldp	x19, x20, [sp, #16]
 1dc:	ldp	x29, x30, [sp], #64
 1e0:	ret
 1e4:	nop

00000000000001e8 <lprofLockFileHandle>:
 1e8:	stp	x29, x30, [sp, #-64]!
 1ec:	mov	x29, sp
 1f0:	stp	x19, x20, [sp, #16]
 1f4:	bl	0 <fileno>
 1f8:	mov	w19, w0
 1fc:	strh	wzr, [sp, #34]
 200:	add	x20, sp, #0x20
 204:	stp	xzr, xzr, [sp, #40]
 208:	bl	0 <getpid>
 20c:	mov	w1, #0x1                   	// #1
 210:	strh	w1, [sp, #32]
 214:	str	w0, [sp, #56]
 218:	b	22c <lprofLockFileHandle+0x44>
 21c:	bl	0 <__errno_location>
 220:	ldr	w0, [x0]
 224:	cmp	w0, #0x4
 228:	b.ne	254 <lprofLockFileHandle+0x6c>  // b.any
 22c:	mov	x2, x20
 230:	mov	w0, w19
 234:	mov	w1, #0x7                   	// #7
 238:	bl	0 <fcntl>
 23c:	cmn	w0, #0x1
 240:	b.eq	21c <lprofLockFileHandle+0x34>  // b.none
 244:	mov	w0, #0x0                   	// #0
 248:	ldp	x19, x20, [sp, #16]
 24c:	ldp	x29, x30, [sp], #64
 250:	ret
 254:	cmp	w0, #0x25
 258:	csetm	w0, eq  // eq = none
 25c:	ldp	x19, x20, [sp, #16]
 260:	ldp	x29, x30, [sp], #64
 264:	ret

0000000000000268 <lprofUnlockFileHandle>:
 268:	stp	x29, x30, [sp, #-64]!
 26c:	mov	x29, sp
 270:	stp	x19, x20, [sp, #16]
 274:	bl	0 <fileno>
 278:	mov	w19, w0
 27c:	strh	wzr, [sp, #34]
 280:	add	x20, sp, #0x20
 284:	stp	xzr, xzr, [sp, #40]
 288:	bl	0 <getpid>
 28c:	mov	w1, #0x2                   	// #2
 290:	strh	w1, [sp, #32]
 294:	str	w0, [sp, #56]
 298:	b	2ac <lprofUnlockFileHandle+0x44>
 29c:	bl	0 <__errno_location>
 2a0:	ldr	w0, [x0]
 2a4:	cmp	w0, #0x4
 2a8:	b.ne	2d4 <lprofUnlockFileHandle+0x6c>  // b.any
 2ac:	mov	x2, x20
 2b0:	mov	w0, w19
 2b4:	mov	w1, #0x7                   	// #7
 2b8:	bl	0 <fcntl>
 2bc:	cmn	w0, #0x1
 2c0:	b.eq	29c <lprofUnlockFileHandle+0x34>  // b.none
 2c4:	mov	w0, #0x0                   	// #0
 2c8:	ldp	x19, x20, [sp, #16]
 2cc:	ldp	x29, x30, [sp], #64
 2d0:	ret
 2d4:	cmp	w0, #0x25
 2d8:	csetm	w0, eq  // eq = none
 2dc:	ldp	x19, x20, [sp, #16]
 2e0:	ldp	x29, x30, [sp], #64
 2e4:	ret

00000000000002e8 <lprofOpenFileEx>:
 2e8:	stp	x29, x30, [sp, #-64]!
 2ec:	mov	w2, #0x1b6                 	// #438
 2f0:	mov	w1, #0x42                  	// #66
 2f4:	mov	x29, sp
 2f8:	bl	0 <open>
 2fc:	tbnz	w0, #31, 398 <lprofOpenFileEx+0xb0>
 300:	stp	x19, x20, [sp, #16]
 304:	mov	w19, w0
 308:	add	x20, sp, #0x20
 30c:	strh	wzr, [sp, #34]
 310:	stp	xzr, xzr, [sp, #40]
 314:	bl	0 <getpid>
 318:	mov	w1, #0x1                   	// #1
 31c:	strh	w1, [sp, #32]
 320:	str	w0, [sp, #56]
 324:	b	338 <lprofOpenFileEx+0x50>
 328:	bl	0 <__errno_location>
 32c:	ldr	w0, [x0]
 330:	cmp	w0, #0x4
 334:	b.ne	36c <lprofOpenFileEx+0x84>  // b.any
 338:	mov	x2, x20
 33c:	mov	w0, w19
 340:	mov	w1, #0x7                   	// #7
 344:	bl	0 <fcntl>
 348:	cmn	w0, #0x1
 34c:	b.eq	328 <lprofOpenFileEx+0x40>  // b.none
 350:	mov	w0, w19
 354:	adrp	x1, 0 <__llvm_profile_recursive_mkdir>
 358:	add	x1, x1, #0x0
 35c:	bl	0 <fdopen>
 360:	ldp	x19, x20, [sp, #16]
 364:	ldp	x29, x30, [sp], #64
 368:	ret
 36c:	cmp	w0, #0x25
 370:	b.ne	350 <lprofOpenFileEx+0x68>  // b.any
 374:	adrp	x0, 0 <stderr>
 378:	adrp	x2, 0 <__llvm_profile_recursive_mkdir>
 37c:	adrp	x1, 0 <__llvm_profile_recursive_mkdir>
 380:	add	x2, x2, #0x0
 384:	ldr	x0, [x0]
 388:	add	x1, x1, #0x0
 38c:	ldr	x0, [x0]
 390:	bl	0 <fprintf>
 394:	b	350 <lprofOpenFileEx+0x68>
 398:	mov	x0, #0x0                   	// #0
 39c:	ldp	x29, x30, [sp], #64
 3a0:	ret
 3a4:	nop

00000000000003a8 <lprofGetPathPrefix>:
 3a8:	stp	x29, x30, [sp, #-48]!
 3ac:	mov	x29, sp
 3b0:	stp	x19, x20, [sp, #16]
 3b4:	mov	x20, x1
 3b8:	str	x21, [sp, #32]
 3bc:	mov	x21, x0
 3c0:	adrp	x0, 0 <__llvm_profile_recursive_mkdir>
 3c4:	add	x0, x0, #0x0
 3c8:	bl	0 <getenv>
 3cc:	mov	x19, x0
 3d0:	adrp	x0, 0 <__llvm_profile_recursive_mkdir>
 3d4:	add	x0, x0, #0x0
 3d8:	bl	0 <getenv>
 3dc:	str	xzr, [x20]
 3e0:	str	wzr, [x21]
 3e4:	cbz	x19, 418 <lprofGetPathPrefix+0x70>
 3e8:	ldrb	w2, [x19]
 3ec:	cbz	w2, 42c <lprofGetPathPrefix+0x84>
 3f0:	cbz	x0, 40c <lprofGetPathPrefix+0x64>
 3f4:	mov	w2, #0xa                   	// #10
 3f8:	mov	x1, #0x0                   	// #0
 3fc:	bl	0 <strtol>
 400:	cmp	w0, #0x0
 404:	csel	w0, w0, wzr, ge  // ge = tcont
 408:	str	w0, [x21]
 40c:	mov	x0, x19
 410:	bl	0 <strlen>
 414:	str	x0, [x20]
 418:	mov	x0, x19
 41c:	ldp	x19, x20, [sp, #16]
 420:	ldr	x21, [sp, #32]
 424:	ldp	x29, x30, [sp], #48
 428:	ret
 42c:	mov	x19, #0x0                   	// #0
 430:	mov	x0, x19
 434:	ldp	x19, x20, [sp, #16]
 438:	ldr	x21, [sp, #32]
 43c:	ldp	x29, x30, [sp], #48
 440:	ret
 444:	nop

0000000000000448 <lprofApplyPathPrefix>:
 448:	stp	x29, x30, [sp, #-48]!
 44c:	cmp	w4, #0x0
 450:	mov	x8, x0
 454:	mov	x29, sp
 458:	stp	x19, x20, [sp, #16]
 45c:	mov	x19, x1
 460:	mov	x20, x3
 464:	stp	x21, x22, [sp, #32]
 468:	mov	x21, x2
 46c:	b.le	4a0 <lprofApplyPathPrefix+0x58>
 470:	add	x5, x1, #0x1
 474:	mov	w7, #0x0                   	// #0
 478:	b	494 <lprofApplyPathPrefix+0x4c>
 47c:	b.ne	488 <lprofApplyPathPrefix+0x40>  // b.any
 480:	add	w7, w7, #0x1
 484:	mov	x19, x5
 488:	add	x5, x5, #0x1
 48c:	cmp	w7, w4
 490:	b.ge	4a0 <lprofApplyPathPrefix+0x58>  // b.tcont
 494:	ldrb	w6, [x5]
 498:	cmp	w6, #0x2f
 49c:	cbnz	w6, 47c <lprofApplyPathPrefix+0x34>
 4a0:	mov	x1, x21
 4a4:	add	x21, x21, x20
 4a8:	mov	x0, x8
 4ac:	mov	x2, x20
 4b0:	bl	0 <memcpy>
 4b4:	mov	x8, x0
 4b8:	add	x22, x0, x20
 4bc:	ldurb	w0, [x21, #-1]
 4c0:	cmp	w0, #0x2f
 4c4:	b.eq	4d8 <lprofApplyPathPrefix+0x90>  // b.none
 4c8:	add	x22, x20, #0x1
 4cc:	mov	w0, #0x2f                  	// #47
 4d0:	add	x22, x8, x22
 4d4:	strb	w0, [x8, x20]
 4d8:	mov	x0, x19
 4dc:	bl	0 <strlen>
 4e0:	mov	x1, x19
 4e4:	add	x2, x0, #0x1
 4e8:	mov	x0, x22
 4ec:	ldp	x19, x20, [sp, #16]
 4f0:	ldp	x21, x22, [sp, #32]
 4f4:	ldp	x29, x30, [sp], #48
 4f8:	b	0 <memcpy>
 4fc:	nop

0000000000000500 <lprofFindFirstDirSeparator>:
 500:	mov	w1, #0x2f                  	// #47
 504:	b	0 <strchr>

0000000000000508 <lprofFindLastDirSeparator>:
 508:	mov	w1, #0x2f                  	// #47
 50c:	b	0 <strrchr>

0000000000000510 <lprofSuspendSigKill>:
 510:	stp	x29, x30, [sp, #-32]!
 514:	mov	w0, #0x2                   	// #2
 518:	mov	x29, sp
 51c:	add	x1, sp, #0x1c
 520:	str	wzr, [sp, #28]
 524:	bl	0 <prctl>
 528:	cbnz	w0, 554 <lprofSuspendSigKill+0x44>
 52c:	ldr	w0, [sp, #28]
 530:	cmp	w0, #0x9
 534:	b.eq	548 <lprofSuspendSigKill+0x38>  // b.none
 538:	cmp	w0, #0x9
 53c:	cset	w0, eq  // eq = none
 540:	ldp	x29, x30, [sp], #32
 544:	ret
 548:	mov	w1, #0x0                   	// #0
 54c:	mov	w0, #0x1                   	// #1
 550:	bl	0 <prctl>
 554:	ldr	w0, [sp, #28]
 558:	ldp	x29, x30, [sp], #32
 55c:	cmp	w0, #0x9
 560:	cset	w0, eq  // eq = none
 564:	ret

0000000000000568 <lprofRestoreSigKill>:
 568:	mov	w1, #0x9                   	// #9
 56c:	mov	w0, #0x1                   	// #1
 570:	b	0 <prctl>
