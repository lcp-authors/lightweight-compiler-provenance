
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//FastCalc.so_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000c08 <.init>:
 c08:	stp	x29, x30, [sp, #-16]!
 c0c:	mov	x29, sp
 c10:	bl	e00 <Perl_av_extend@plt+0x10>
 c14:	ldp	x29, x30, [sp], #16
 c18:	ret

Disassembly of section .plt:

0000000000000c20 <Perl_sv_2iv_flags@plt-0x20>:
 c20:	stp	x16, x30, [sp, #-16]!
 c24:	adrp	x16, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1212c>
 c28:	ldr	x17, [x16, #4088]
 c2c:	add	x16, x16, #0xff8
 c30:	br	x17
 c34:	nop
 c38:	nop
 c3c:	nop

0000000000000c40 <Perl_sv_2iv_flags@plt>:
 c40:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 c44:	ldr	x17, [x16]
 c48:	add	x16, x16, #0x0
 c4c:	br	x17

0000000000000c50 <Perl_sv_setnv@plt>:
 c50:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 c54:	ldr	x17, [x16, #8]
 c58:	add	x16, x16, #0x8
 c5c:	br	x17

0000000000000c60 <Perl_newRV_noinc@plt>:
 c60:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 c64:	ldr	x17, [x16, #16]
 c68:	add	x16, x16, #0x10
 c6c:	br	x17

0000000000000c70 <Perl_sv_2uv_flags@plt>:
 c70:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 c74:	ldr	x17, [x16, #24]
 c78:	add	x16, x16, #0x18
 c7c:	br	x17

0000000000000c80 <__cxa_finalize@plt>:
 c80:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 c84:	ldr	x17, [x16, #32]
 c88:	add	x16, x16, #0x20
 c8c:	br	x17

0000000000000c90 <Perl_av_len@plt>:
 c90:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 c94:	ldr	x17, [x16, #40]
 c98:	add	x16, x16, #0x28
 c9c:	br	x17

0000000000000ca0 <Perl_av_store@plt>:
 ca0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 ca4:	ldr	x17, [x16, #48]
 ca8:	add	x16, x16, #0x30
 cac:	br	x17

0000000000000cb0 <Perl_newSVnv@plt>:
 cb0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 cb4:	ldr	x17, [x16, #56]
 cb8:	add	x16, x16, #0x38
 cbc:	br	x17

0000000000000cc0 <Perl_sv_2pv_flags@plt>:
 cc0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 cc4:	ldr	x17, [x16, #64]
 cc8:	add	x16, x16, #0x40
 ccc:	br	x17

0000000000000cd0 <Perl_xs_boot_epilog@plt>:
 cd0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 cd4:	ldr	x17, [x16, #72]
 cd8:	add	x16, x16, #0x48
 cdc:	br	x17

0000000000000ce0 <__stack_chk_fail@plt>:
 ce0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 ce4:	ldr	x17, [x16, #80]
 ce8:	add	x16, x16, #0x50
 cec:	br	x17

0000000000000cf0 <__gmon_start__@plt>:
 cf0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 cf4:	ldr	x17, [x16, #88]
 cf8:	add	x16, x16, #0x58
 cfc:	br	x17

0000000000000d00 <Perl_croak_xs_usage@plt>:
 d00:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 d04:	ldr	x17, [x16, #96]
 d08:	add	x16, x16, #0x60
 d0c:	br	x17

0000000000000d10 <Perl_sv_2nv_flags@plt>:
 d10:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 d14:	ldr	x17, [x16, #104]
 d18:	add	x16, x16, #0x68
 d1c:	br	x17

0000000000000d20 <Perl_av_push@plt>:
 d20:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 d24:	ldr	x17, [x16, #112]
 d28:	add	x16, x16, #0x70
 d2c:	br	x17

0000000000000d30 <Perl_av_pop@plt>:
 d30:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 d34:	ldr	x17, [x16, #120]
 d38:	add	x16, x16, #0x78
 d3c:	br	x17

0000000000000d40 <Perl_croak_nocontext@plt>:
 d40:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 d44:	ldr	x17, [x16, #128]
 d48:	add	x16, x16, #0x80
 d4c:	br	x17

0000000000000d50 <Perl_newXS_deffile@plt>:
 d50:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 d54:	ldr	x17, [x16, #136]
 d58:	add	x16, x16, #0x88
 d5c:	br	x17

0000000000000d60 <Perl_sv_2mortal@plt>:
 d60:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 d64:	ldr	x17, [x16, #144]
 d68:	add	x16, x16, #0x90
 d6c:	br	x17

0000000000000d70 <Perl_newSVuv@plt>:
 d70:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 d74:	ldr	x17, [x16, #152]
 d78:	add	x16, x16, #0x98
 d7c:	br	x17

0000000000000d80 <Perl_xs_handshake@plt>:
 d80:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 d84:	ldr	x17, [x16, #160]
 d88:	add	x16, x16, #0xa0
 d8c:	br	x17

0000000000000d90 <Perl_av_fetch@plt>:
 d90:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 d94:	ldr	x17, [x16, #168]
 d98:	add	x16, x16, #0xa8
 d9c:	br	x17

0000000000000da0 <Perl_newRV@plt>:
 da0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 da4:	ldr	x17, [x16, #176]
 da8:	add	x16, x16, #0xb0
 dac:	br	x17

0000000000000db0 <Perl_newSV_type@plt>:
 db0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 db4:	ldr	x17, [x16, #184]
 db8:	add	x16, x16, #0xb8
 dbc:	br	x17

0000000000000dc0 <Perl_newSViv@plt>:
 dc0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 dc4:	ldr	x17, [x16, #192]
 dc8:	add	x16, x16, #0xc0
 dcc:	br	x17

0000000000000dd0 <Perl_sv_setiv@plt>:
 dd0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 dd4:	ldr	x17, [x16, #200]
 dd8:	add	x16, x16, #0xc8
 ddc:	br	x17

0000000000000de0 <Perl_newSVpvn@plt>:
 de0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 de4:	ldr	x17, [x16, #208]
 de8:	add	x16, x16, #0xd0
 dec:	br	x17

0000000000000df0 <Perl_av_extend@plt>:
 df0:	adrp	x16, 14000 <Perl_sv_2iv_flags>
 df4:	ldr	x17, [x16, #216]
 df8:	add	x16, x16, #0xd8
 dfc:	br	x17

Disassembly of section .text:

0000000000000e00 <boot_Math__BigInt__FastCalc@@Base-0xd4>:
     e00:	adrp	x0, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1212c>
     e04:	ldr	x0, [x0, #4048]
     e08:	cbz	x0, e10 <Perl_av_extend@plt+0x20>
     e0c:	b	cf0 <__gmon_start__@plt>
     e10:	ret
     e14:	nop
     e18:	adrp	x0, 14000 <boot_Math__BigInt__FastCalc@@Base+0x1312c>
     e1c:	add	x0, x0, #0xe8
     e20:	adrp	x1, 14000 <boot_Math__BigInt__FastCalc@@Base+0x1312c>
     e24:	add	x1, x1, #0xe8
     e28:	cmp	x1, x0
     e2c:	b.eq	e44 <Perl_av_extend@plt+0x54>  // b.none
     e30:	adrp	x1, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1212c>
     e34:	ldr	x1, [x1, #4032]
     e38:	cbz	x1, e44 <Perl_av_extend@plt+0x54>
     e3c:	mov	x16, x1
     e40:	br	x16
     e44:	ret
     e48:	adrp	x0, 14000 <boot_Math__BigInt__FastCalc@@Base+0x1312c>
     e4c:	add	x0, x0, #0xe8
     e50:	adrp	x1, 14000 <boot_Math__BigInt__FastCalc@@Base+0x1312c>
     e54:	add	x1, x1, #0xe8
     e58:	sub	x1, x1, x0
     e5c:	lsr	x2, x1, #63
     e60:	add	x1, x2, x1, asr #3
     e64:	cmp	xzr, x1, asr #1
     e68:	asr	x1, x1, #1
     e6c:	b.eq	e84 <Perl_av_extend@plt+0x94>  // b.none
     e70:	adrp	x2, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1212c>
     e74:	ldr	x2, [x2, #4064]
     e78:	cbz	x2, e84 <Perl_av_extend@plt+0x94>
     e7c:	mov	x16, x2
     e80:	br	x16
     e84:	ret
     e88:	stp	x29, x30, [sp, #-32]!
     e8c:	mov	x29, sp
     e90:	str	x19, [sp, #16]
     e94:	adrp	x19, 14000 <boot_Math__BigInt__FastCalc@@Base+0x1312c>
     e98:	ldrb	w0, [x19, #232]
     e9c:	cbnz	w0, ec4 <Perl_av_extend@plt+0xd4>
     ea0:	adrp	x0, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1212c>
     ea4:	ldr	x0, [x0, #4040]
     ea8:	cbz	x0, eb8 <Perl_av_extend@plt+0xc8>
     eac:	adrp	x0, 14000 <boot_Math__BigInt__FastCalc@@Base+0x1312c>
     eb0:	ldr	x0, [x0, #224]
     eb4:	bl	c80 <__cxa_finalize@plt>
     eb8:	bl	e18 <Perl_av_extend@plt+0x28>
     ebc:	mov	w0, #0x1                   	// #1
     ec0:	strb	w0, [x19, #232]
     ec4:	ldr	x19, [sp, #16]
     ec8:	ldp	x29, x30, [sp], #32
     ecc:	ret
     ed0:	b	e48 <Perl_av_extend@plt+0x58>

0000000000000ed4 <boot_Math__BigInt__FastCalc@@Base>:
     ed4:	stp	x29, x30, [sp, #-96]!
     ed8:	stp	x28, x27, [sp, #16]
     edc:	stp	x26, x25, [sp, #32]
     ee0:	stp	x24, x23, [sp, #48]
     ee4:	stp	x22, x21, [sp, #64]
     ee8:	stp	x20, x19, [sp, #80]
     eec:	mov	x29, sp
     ef0:	sub	sp, sp, #0x200
     ef4:	mov	w8, #0x6e7                 	// #1767
     ef8:	movk	w8, #0xd30, lsl #16
     efc:	adrp	x9, 3000 <boot_Math__BigInt__FastCalc@@Base+0x212c>
     f00:	add	x9, x9, #0x428
     f04:	adrp	x3, 3000 <boot_Math__BigInt__FastCalc@@Base+0x212c>
     f08:	add	x3, x3, #0x433
     f0c:	adrp	x4, 3000 <boot_Math__BigInt__FastCalc@@Base+0x212c>
     f10:	add	x4, x4, #0x43b
     f14:	mov	x10, #0x8                   	// #8
     f18:	adrp	x11, 3000 <boot_Math__BigInt__FastCalc@@Base+0x212c>
     f1c:	add	x11, x11, #0x442
     f20:	adrp	x2, 1000 <boot_Math__BigInt__FastCalc@@Base+0x12c>
     f24:	add	x2, x2, #0x544
     f28:	adrp	x12, 3000 <boot_Math__BigInt__FastCalc@@Base+0x212c>
     f2c:	add	x12, x12, #0x45f
     f30:	adrp	x13, 1000 <boot_Math__BigInt__FastCalc@@Base+0x12c>
     f34:	add	x13, x13, #0x908
     f38:	adrp	x14, 3000 <boot_Math__BigInt__FastCalc@@Base+0x212c>
     f3c:	add	x14, x14, #0x47d
     f40:	adrp	x15, 1000 <boot_Math__BigInt__FastCalc@@Base+0x12c>
     f44:	add	x15, x15, #0xbbc
     f48:	adrp	x16, 3000 <boot_Math__BigInt__FastCalc@@Base+0x212c>
     f4c:	add	x16, x16, #0x4a3
     f50:	adrp	x17, 1000 <boot_Math__BigInt__FastCalc@@Base+0x12c>
     f54:	add	x17, x17, #0xe98
     f58:	adrp	x18, 3000 <boot_Math__BigInt__FastCalc@@Base+0x212c>
     f5c:	add	x18, x18, #0x4c0
     f60:	adrp	x5, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
     f64:	add	x5, x5, #0x1a0
     f68:	adrp	x6, 3000 <boot_Math__BigInt__FastCalc@@Base+0x212c>
     f6c:	add	x6, x6, #0x4dd
     f70:	adrp	x7, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
     f74:	add	x7, x7, #0x4f0
     f78:	mov	w19, #0x1                   	// #1
     f7c:	adrp	x20, 3000 <boot_Math__BigInt__FastCalc@@Base+0x212c>
     f80:	add	x20, x20, #0x4fa
     f84:	mov	w21, #0xa                   	// #10
     f88:	adrp	x22, 3000 <boot_Math__BigInt__FastCalc@@Base+0x212c>
     f8c:	add	x22, x22, #0x517
     f90:	mov	w23, #0x2                   	// #2
     f94:	adrp	x24, 3000 <boot_Math__BigInt__FastCalc@@Base+0x212c>
     f98:	add	x24, x24, #0x534
     f9c:	adrp	x25, 3000 <boot_Math__BigInt__FastCalc@@Base+0x212c>
     fa0:	add	x25, x25, #0x552
     fa4:	adrp	x26, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
     fa8:	add	x26, x26, #0x678
     fac:	adrp	x27, 3000 <boot_Math__BigInt__FastCalc@@Base+0x212c>
     fb0:	add	x27, x27, #0x573
     fb4:	adrp	x28, 3000 <boot_Math__BigInt__FastCalc@@Base+0x212c>
     fb8:	add	x28, x28, #0x593
     fbc:	adrp	x30, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
     fc0:	add	x30, x30, #0x868
     fc4:	stur	x1, [x29, #-232]
     fc8:	adrp	x1, 3000 <boot_Math__BigInt__FastCalc@@Base+0x212c>
     fcc:	add	x1, x1, #0x5b3
     fd0:	stur	x1, [x29, #-240]
     fd4:	adrp	x1, 3000 <boot_Math__BigInt__FastCalc@@Base+0x212c>
     fd8:	add	x1, x1, #0x5d3
     fdc:	stur	x1, [x29, #-248]
     fe0:	adrp	x1, 3000 <boot_Math__BigInt__FastCalc@@Base+0x212c>
     fe4:	add	x1, x1, #0x5f3
     fe8:	str	x1, [sp, #256]
     fec:	adrp	x1, 3000 <boot_Math__BigInt__FastCalc@@Base+0x212c>
     ff0:	add	x1, x1, #0x614
     ff4:	str	x2, [sp, #248]
     ff8:	adrp	x2, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
     ffc:	add	x2, x2, #0xa88
    1000:	str	x1, [sp, #240]
    1004:	adrp	x1, 3000 <boot_Math__BigInt__FastCalc@@Base+0x212c>
    1008:	add	x1, x1, #0x631
    100c:	str	x2, [sp, #232]
    1010:	adrp	x2, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
    1014:	add	x2, x2, #0xc98
    1018:	stur	x0, [x29, #-16]
    101c:	ldur	x0, [x29, #-232]
    1020:	stur	x0, [x29, #-24]
    1024:	ldur	x0, [x29, #-16]
    1028:	str	x0, [sp, #224]
    102c:	mov	w0, w8
    1030:	ldr	x8, [sp, #224]
    1034:	str	x1, [sp, #216]
    1038:	mov	x1, x8
    103c:	str	x2, [sp, #208]
    1040:	mov	x2, x9
    1044:	str	x9, [sp, #200]
    1048:	str	x10, [sp, #192]
    104c:	str	x11, [sp, #184]
    1050:	str	x12, [sp, #176]
    1054:	str	x13, [sp, #168]
    1058:	str	x14, [sp, #160]
    105c:	str	x15, [sp, #152]
    1060:	str	x16, [sp, #144]
    1064:	str	x17, [sp, #136]
    1068:	str	x18, [sp, #128]
    106c:	str	x5, [sp, #120]
    1070:	str	x6, [sp, #112]
    1074:	str	x7, [sp, #104]
    1078:	str	w19, [sp, #100]
    107c:	str	x20, [sp, #88]
    1080:	str	w21, [sp, #84]
    1084:	str	x22, [sp, #72]
    1088:	str	w23, [sp, #68]
    108c:	str	x24, [sp, #56]
    1090:	str	x25, [sp, #48]
    1094:	str	x26, [sp, #40]
    1098:	str	x27, [sp, #32]
    109c:	str	x28, [sp, #24]
    10a0:	str	x30, [sp, #16]
    10a4:	bl	d80 <Perl_xs_handshake@plt>
    10a8:	stur	w0, [x29, #-28]
    10ac:	ldur	x8, [x29, #-16]
    10b0:	ldr	x8, [x8, #24]
    10b4:	ldursw	x9, [x29, #-28]
    10b8:	mov	x10, #0x8                   	// #8
    10bc:	mul	x9, x10, x9
    10c0:	add	x8, x8, x9
    10c4:	stur	x8, [x29, #-40]
    10c8:	ldur	x8, [x29, #-16]
    10cc:	ldr	x8, [x8]
    10d0:	stur	x8, [x29, #-48]
    10d4:	ldur	x8, [x29, #-48]
    10d8:	ldur	x9, [x29, #-40]
    10dc:	subs	x8, x8, x9
    10e0:	ldr	x9, [sp, #192]
    10e4:	sdiv	x8, x8, x9
    10e8:	stur	w8, [x29, #-52]
    10ec:	ldr	x10, [sp, #200]
    10f0:	stur	x10, [x29, #-64]
    10f4:	ldur	x0, [x29, #-16]
    10f8:	ldr	x1, [sp, #184]
    10fc:	ldr	x2, [sp, #248]
    1100:	bl	d50 <Perl_newXS_deffile@plt>
    1104:	ldur	x9, [x29, #-16]
    1108:	mov	x0, x9
    110c:	ldr	x1, [sp, #176]
    1110:	ldr	x2, [sp, #168]
    1114:	bl	d50 <Perl_newXS_deffile@plt>
    1118:	ldur	x9, [x29, #-16]
    111c:	mov	x0, x9
    1120:	ldr	x1, [sp, #160]
    1124:	ldr	x2, [sp, #152]
    1128:	bl	d50 <Perl_newXS_deffile@plt>
    112c:	ldur	x9, [x29, #-16]
    1130:	mov	x0, x9
    1134:	ldr	x1, [sp, #144]
    1138:	ldr	x2, [sp, #136]
    113c:	bl	d50 <Perl_newXS_deffile@plt>
    1140:	ldur	x9, [x29, #-16]
    1144:	mov	x0, x9
    1148:	ldr	x1, [sp, #128]
    114c:	ldr	x2, [sp, #120]
    1150:	bl	d50 <Perl_newXS_deffile@plt>
    1154:	ldur	x9, [x29, #-16]
    1158:	mov	x0, x9
    115c:	ldr	x1, [sp, #112]
    1160:	ldr	x2, [sp, #104]
    1164:	bl	d50 <Perl_newXS_deffile@plt>
    1168:	stur	x0, [x29, #-24]
    116c:	ldur	x9, [x29, #-24]
    1170:	ldr	x9, [x9]
    1174:	stur	x9, [x29, #-72]
    1178:	ldur	x9, [x29, #-72]
    117c:	stur	x9, [x29, #-80]
    1180:	ldur	x9, [x29, #-80]
    1184:	ldr	w8, [sp, #100]
    1188:	str	w8, [x9, #40]
    118c:	ldur	x0, [x29, #-16]
    1190:	ldr	x1, [sp, #88]
    1194:	ldr	x2, [sp, #104]
    1198:	bl	d50 <Perl_newXS_deffile@plt>
    119c:	stur	x0, [x29, #-24]
    11a0:	ldur	x9, [x29, #-24]
    11a4:	ldr	x9, [x9]
    11a8:	stur	x9, [x29, #-88]
    11ac:	ldur	x9, [x29, #-88]
    11b0:	stur	x9, [x29, #-96]
    11b4:	ldur	x9, [x29, #-96]
    11b8:	ldr	w8, [sp, #84]
    11bc:	str	w8, [x9, #40]
    11c0:	ldur	x0, [x29, #-16]
    11c4:	ldr	x1, [sp, #72]
    11c8:	ldr	x2, [sp, #104]
    11cc:	bl	d50 <Perl_newXS_deffile@plt>
    11d0:	stur	x0, [x29, #-24]
    11d4:	ldur	x9, [x29, #-24]
    11d8:	ldr	x9, [x9]
    11dc:	stur	x9, [x29, #-104]
    11e0:	ldur	x9, [x29, #-104]
    11e4:	stur	x9, [x29, #-112]
    11e8:	ldur	x9, [x29, #-112]
    11ec:	ldr	w8, [sp, #68]
    11f0:	str	w8, [x9, #40]
    11f4:	ldur	x0, [x29, #-16]
    11f8:	ldr	x1, [sp, #56]
    11fc:	ldr	x2, [sp, #104]
    1200:	bl	d50 <Perl_newXS_deffile@plt>
    1204:	stur	x0, [x29, #-24]
    1208:	ldur	x9, [x29, #-24]
    120c:	ldr	x9, [x9]
    1210:	stur	x9, [x29, #-120]
    1214:	ldur	x9, [x29, #-120]
    1218:	stur	x9, [x29, #-128]
    121c:	ldur	x9, [x29, #-128]
    1220:	str	wzr, [x9, #40]
    1224:	ldur	x0, [x29, #-16]
    1228:	ldr	x1, [sp, #48]
    122c:	ldr	x2, [sp, #40]
    1230:	bl	d50 <Perl_newXS_deffile@plt>
    1234:	stur	x0, [x29, #-24]
    1238:	ldur	x9, [x29, #-24]
    123c:	ldr	x9, [x9]
    1240:	stur	x9, [x29, #-136]
    1244:	ldur	x9, [x29, #-136]
    1248:	stur	x9, [x29, #-144]
    124c:	ldur	x9, [x29, #-144]
    1250:	str	wzr, [x9, #40]
    1254:	ldur	x0, [x29, #-16]
    1258:	ldr	x1, [sp, #32]
    125c:	ldr	x2, [sp, #40]
    1260:	bl	d50 <Perl_newXS_deffile@plt>
    1264:	stur	x0, [x29, #-24]
    1268:	ldur	x9, [x29, #-24]
    126c:	ldr	x9, [x9]
    1270:	stur	x9, [x29, #-152]
    1274:	ldur	x9, [x29, #-152]
    1278:	stur	x9, [x29, #-160]
    127c:	ldur	x9, [x29, #-160]
    1280:	ldr	w8, [sp, #100]
    1284:	str	w8, [x9, #40]
    1288:	ldur	x0, [x29, #-16]
    128c:	ldr	x1, [sp, #24]
    1290:	ldr	x2, [sp, #16]
    1294:	bl	d50 <Perl_newXS_deffile@plt>
    1298:	stur	x0, [x29, #-24]
    129c:	ldur	x9, [x29, #-24]
    12a0:	ldr	x9, [x9]
    12a4:	stur	x9, [x29, #-168]
    12a8:	ldur	x9, [x29, #-168]
    12ac:	stur	x9, [x29, #-176]
    12b0:	ldur	x9, [x29, #-176]
    12b4:	ldr	w8, [sp, #100]
    12b8:	str	w8, [x9, #40]
    12bc:	ldur	x0, [x29, #-16]
    12c0:	ldur	x1, [x29, #-240]
    12c4:	ldr	x2, [sp, #16]
    12c8:	bl	d50 <Perl_newXS_deffile@plt>
    12cc:	stur	x0, [x29, #-24]
    12d0:	ldur	x9, [x29, #-24]
    12d4:	ldr	x9, [x9]
    12d8:	stur	x9, [x29, #-184]
    12dc:	ldur	x9, [x29, #-184]
    12e0:	stur	x9, [x29, #-192]
    12e4:	ldur	x9, [x29, #-192]
    12e8:	ldr	w8, [sp, #84]
    12ec:	str	w8, [x9, #40]
    12f0:	ldur	x0, [x29, #-16]
    12f4:	ldur	x1, [x29, #-248]
    12f8:	ldr	x2, [sp, #16]
    12fc:	bl	d50 <Perl_newXS_deffile@plt>
    1300:	stur	x0, [x29, #-24]
    1304:	ldur	x9, [x29, #-24]
    1308:	ldr	x9, [x9]
    130c:	stur	x9, [x29, #-200]
    1310:	ldur	x9, [x29, #-200]
    1314:	stur	x9, [x29, #-208]
    1318:	ldur	x9, [x29, #-208]
    131c:	ldr	w8, [sp, #68]
    1320:	str	w8, [x9, #40]
    1324:	ldur	x0, [x29, #-16]
    1328:	ldr	x1, [sp, #256]
    132c:	ldr	x2, [sp, #16]
    1330:	bl	d50 <Perl_newXS_deffile@plt>
    1334:	stur	x0, [x29, #-24]
    1338:	ldur	x9, [x29, #-24]
    133c:	ldr	x9, [x9]
    1340:	stur	x9, [x29, #-216]
    1344:	ldur	x9, [x29, #-216]
    1348:	stur	x9, [x29, #-224]
    134c:	ldur	x9, [x29, #-224]
    1350:	str	wzr, [x9, #40]
    1354:	ldur	x0, [x29, #-16]
    1358:	ldr	x1, [sp, #240]
    135c:	ldr	x2, [sp, #232]
    1360:	bl	d50 <Perl_newXS_deffile@plt>
    1364:	ldur	x9, [x29, #-16]
    1368:	mov	x0, x9
    136c:	ldr	x1, [sp, #216]
    1370:	ldr	x2, [sp, #208]
    1374:	bl	d50 <Perl_newXS_deffile@plt>
    1378:	ldur	w8, [x29, #-52]
    137c:	cmp	w8, #0x4
    1380:	b.ge	1390 <boot_Math__BigInt__FastCalc@@Base+0x4bc>  // b.tcont
    1384:	adrp	x0, 3000 <boot_Math__BigInt__FastCalc@@Base+0x212c>
    1388:	add	x0, x0, #0x64f
    138c:	bl	d40 <Perl_croak_nocontext@plt>
    1390:	ldur	x8, [x29, #-16]
    1394:	ldr	x8, [x8, #24]
    1398:	ldur	w9, [x29, #-28]
    139c:	add	w9, w9, #0x2
    13a0:	mov	w0, w9
    13a4:	sxtw	x10, w0
    13a8:	mov	x11, #0x8                   	// #8
    13ac:	mul	x10, x11, x10
    13b0:	add	x8, x8, x10
    13b4:	ldr	x8, [x8]
    13b8:	ldr	w9, [x8, #12]
    13bc:	mov	w12, #0x100                 	// #256
    13c0:	movk	w12, #0x20, lsl #16
    13c4:	and	w9, w9, w12
    13c8:	cmp	w9, #0x100
    13cc:	b.ne	1408 <boot_Math__BigInt__FastCalc@@Base+0x534>  // b.any
    13d0:	ldur	x8, [x29, #-16]
    13d4:	ldr	x8, [x8, #24]
    13d8:	ldur	w9, [x29, #-28]
    13dc:	add	w9, w9, #0x2
    13e0:	mov	w0, w9
    13e4:	sxtw	x10, w0
    13e8:	mov	x11, #0x8                   	// #8
    13ec:	mul	x10, x11, x10
    13f0:	add	x8, x8, x10
    13f4:	ldr	x8, [x8]
    13f8:	ldr	x8, [x8]
    13fc:	ldr	x8, [x8, #32]
    1400:	str	x8, [sp, #8]
    1404:	b	1440 <boot_Math__BigInt__FastCalc@@Base+0x56c>
    1408:	ldur	x0, [x29, #-16]
    140c:	ldur	x8, [x29, #-16]
    1410:	ldr	x8, [x8, #24]
    1414:	ldur	w9, [x29, #-28]
    1418:	mov	w2, #0x2                   	// #2
    141c:	add	w9, w9, #0x2
    1420:	mov	w1, w9
    1424:	sxtw	x10, w1
    1428:	mov	x11, #0x8                   	// #8
    142c:	mul	x10, x11, x10
    1430:	add	x8, x8, x10
    1434:	ldr	x1, [x8]
    1438:	bl	c40 <Perl_sv_2iv_flags@plt>
    143c:	str	x0, [sp, #8]
    1440:	ldr	x8, [sp, #8]
    1444:	scvtf	d0, x8
    1448:	adrp	x8, 14000 <boot_Math__BigInt__FastCalc@@Base+0x1312c>
    144c:	add	x8, x8, #0xf0
    1450:	str	d0, [x8]
    1454:	ldur	x8, [x29, #-16]
    1458:	ldr	x8, [x8, #24]
    145c:	ldur	w9, [x29, #-28]
    1460:	add	w9, w9, #0x3
    1464:	mov	w0, w9
    1468:	sxtw	x10, w0
    146c:	mov	x11, #0x8                   	// #8
    1470:	mul	x10, x11, x10
    1474:	add	x8, x8, x10
    1478:	ldr	x8, [x8]
    147c:	ldr	w9, [x8, #12]
    1480:	mov	w12, #0x200                 	// #512
    1484:	movk	w12, #0x20, lsl #16
    1488:	and	w9, w9, w12
    148c:	cmp	w9, #0x200
    1490:	b.ne	14cc <boot_Math__BigInt__FastCalc@@Base+0x5f8>  // b.any
    1494:	ldur	x8, [x29, #-16]
    1498:	ldr	x8, [x8, #24]
    149c:	ldur	w9, [x29, #-28]
    14a0:	add	w9, w9, #0x3
    14a4:	mov	w0, w9
    14a8:	sxtw	x10, w0
    14ac:	mov	x11, #0x8                   	// #8
    14b0:	mul	x10, x11, x10
    14b4:	add	x8, x8, x10
    14b8:	ldr	x8, [x8]
    14bc:	ldr	x8, [x8]
    14c0:	ldr	x8, [x8, #40]
    14c4:	str	x8, [sp]
    14c8:	b	1508 <boot_Math__BigInt__FastCalc@@Base+0x634>
    14cc:	ldur	x0, [x29, #-16]
    14d0:	ldur	x8, [x29, #-16]
    14d4:	ldr	x8, [x8, #24]
    14d8:	ldur	w9, [x29, #-28]
    14dc:	add	w9, w9, #0x3
    14e0:	mov	w1, w9
    14e4:	sxtw	x10, w1
    14e8:	mov	x11, #0x8                   	// #8
    14ec:	mul	x10, x11, x10
    14f0:	add	x8, x8, x10
    14f4:	ldr	x1, [x8]
    14f8:	mov	w2, #0x2                   	// #2
    14fc:	bl	d10 <Perl_sv_2nv_flags@plt>
    1500:	fmov	x8, d0
    1504:	str	x8, [sp]
    1508:	ldr	x8, [sp]
    150c:	adrp	x9, 14000 <boot_Math__BigInt__FastCalc@@Base+0x1312c>
    1510:	add	x9, x9, #0xf8
    1514:	str	x8, [x9]
    1518:	ldur	x0, [x29, #-16]
    151c:	ldur	w1, [x29, #-28]
    1520:	bl	cd0 <Perl_xs_boot_epilog@plt>
    1524:	add	sp, sp, #0x200
    1528:	ldp	x20, x19, [sp, #80]
    152c:	ldp	x22, x21, [sp, #64]
    1530:	ldp	x24, x23, [sp, #48]
    1534:	ldp	x26, x25, [sp, #32]
    1538:	ldp	x28, x27, [sp, #16]
    153c:	ldp	x29, x30, [sp], #96
    1540:	ret
    1544:	sub	sp, sp, #0xf0
    1548:	stp	x29, x30, [sp, #224]
    154c:	add	x29, sp, #0xe0
    1550:	mov	x8, #0x8                   	// #8
    1554:	adrp	x9, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1212c>
    1558:	ldr	x9, [x9, #4056]
    155c:	ldr	x9, [x9]
    1560:	stur	x9, [x29, #-8]
    1564:	stur	x0, [x29, #-24]
    1568:	stur	x1, [x29, #-32]
    156c:	ldur	x9, [x29, #-24]
    1570:	ldr	x9, [x9]
    1574:	stur	x9, [x29, #-40]
    1578:	ldur	x0, [x29, #-24]
    157c:	str	x8, [sp, #88]
    1580:	bl	33f0 <boot_Math__BigInt__FastCalc@@Base+0x251c>
    1584:	stur	w0, [x29, #-44]
    1588:	ldur	x8, [x29, #-24]
    158c:	ldr	x8, [x8, #24]
    1590:	ldursw	x9, [x29, #-44]
    1594:	mov	w10, w9
    1598:	add	w10, w10, #0x1
    159c:	stur	w10, [x29, #-44]
    15a0:	mov	x11, #0x8                   	// #8
    15a4:	mul	x9, x11, x9
    15a8:	add	x8, x8, x9
    15ac:	stur	x8, [x29, #-56]
    15b0:	ldur	x8, [x29, #-40]
    15b4:	ldur	x9, [x29, #-56]
    15b8:	subs	x8, x8, x9
    15bc:	ldr	x9, [sp, #88]
    15c0:	sdiv	x8, x8, x9
    15c4:	stur	w8, [x29, #-60]
    15c8:	ldur	w8, [x29, #-60]
    15cc:	cmp	w8, #0x2
    15d0:	b.eq	15e4 <boot_Math__BigInt__FastCalc@@Base+0x710>  // b.none
    15d4:	ldur	x0, [x29, #-32]
    15d8:	adrp	x1, 3000 <boot_Math__BigInt__FastCalc@@Base+0x212c>
    15dc:	add	x1, x1, #0x695
    15e0:	bl	d00 <Perl_croak_xs_usage@plt>
    15e4:	ldur	x8, [x29, #-24]
    15e8:	ldr	x8, [x8, #24]
    15ec:	ldur	w9, [x29, #-44]
    15f0:	add	w9, w9, #0x1
    15f4:	mov	w0, w9
    15f8:	sxtw	x10, w0
    15fc:	mov	x11, #0x8                   	// #8
    1600:	mul	x10, x11, x10
    1604:	add	x8, x8, x10
    1608:	ldr	x8, [x8]
    160c:	stur	x8, [x29, #-72]
    1610:	ldur	x0, [x29, #-24]
    1614:	mov	w1, #0xb                   	// #11
    1618:	bl	db0 <Perl_newSV_type@plt>
    161c:	str	x0, [sp, #112]
    1620:	ldr	x8, [sp, #112]
    1624:	str	x8, [sp, #104]
    1628:	ldr	x8, [sp, #104]
    162c:	stur	x8, [x29, #-104]
    1630:	ldur	x8, [x29, #-72]
    1634:	ldr	w9, [x8, #12]
    1638:	mov	w12, #0x100                 	// #256
    163c:	movk	w12, #0x8000, lsl #16
    1640:	and	w9, w9, w12
    1644:	cmp	w9, w12
    1648:	b.ne	174c <boot_Math__BigInt__FastCalc@@Base+0x878>  // b.any
    164c:	ldur	x8, [x29, #-72]
    1650:	ldr	w9, [x8, #12]
    1654:	mov	w10, #0x100                 	// #256
    1658:	movk	w10, #0x8020, lsl #16
    165c:	and	w9, w9, w10
    1660:	mov	w10, #0x100                 	// #256
    1664:	movk	w10, #0x8000, lsl #16
    1668:	cmp	w9, w10
    166c:	b.ne	1684 <boot_Math__BigInt__FastCalc@@Base+0x7b0>  // b.any
    1670:	ldur	x8, [x29, #-72]
    1674:	ldr	x8, [x8]
    1678:	ldr	x8, [x8, #32]
    167c:	str	x8, [sp, #80]
    1680:	b	1698 <boot_Math__BigInt__FastCalc@@Base+0x7c4>
    1684:	ldur	x0, [x29, #-24]
    1688:	ldur	x1, [x29, #-72]
    168c:	mov	w2, #0x2                   	// #2
    1690:	bl	c70 <Perl_sv_2uv_flags@plt>
    1694:	str	x0, [sp, #80]
    1698:	ldr	x8, [sp, #80]
    169c:	ucvtf	d0, x8
    16a0:	adrp	x8, 14000 <boot_Math__BigInt__FastCalc@@Base+0x1312c>
    16a4:	add	x8, x8, #0xf8
    16a8:	ldr	d1, [x8]
    16ac:	fcmp	d0, d1
    16b0:	cset	w9, mi  // mi = first
    16b4:	tbnz	w9, #0, 16bc <boot_Math__BigInt__FastCalc@@Base+0x7e8>
    16b8:	b	174c <boot_Math__BigInt__FastCalc@@Base+0x878>
    16bc:	ldur	x0, [x29, #-24]
    16c0:	ldur	x1, [x29, #-104]
    16c4:	ldur	x8, [x29, #-24]
    16c8:	ldur	x9, [x29, #-72]
    16cc:	ldr	w10, [x9, #12]
    16d0:	mov	w11, #0x100                 	// #256
    16d4:	movk	w11, #0x8020, lsl #16
    16d8:	and	w10, w10, w11
    16dc:	mov	w11, #0x100                 	// #256
    16e0:	movk	w11, #0x8000, lsl #16
    16e4:	cmp	w10, w11
    16e8:	str	x0, [sp, #72]
    16ec:	str	x1, [sp, #64]
    16f0:	str	x8, [sp, #56]
    16f4:	b.ne	170c <boot_Math__BigInt__FastCalc@@Base+0x838>  // b.any
    16f8:	ldur	x8, [x29, #-72]
    16fc:	ldr	x8, [x8]
    1700:	ldr	x8, [x8, #32]
    1704:	str	x8, [sp, #48]
    1708:	b	1720 <boot_Math__BigInt__FastCalc@@Base+0x84c>
    170c:	ldur	x0, [x29, #-24]
    1710:	ldur	x1, [x29, #-72]
    1714:	mov	w2, #0x2                   	// #2
    1718:	bl	c70 <Perl_sv_2uv_flags@plt>
    171c:	str	x0, [sp, #48]
    1720:	ldr	x8, [sp, #48]
    1724:	ldr	x0, [sp, #56]
    1728:	mov	x1, x8
    172c:	bl	d70 <Perl_newSVuv@plt>
    1730:	ldr	x8, [sp, #72]
    1734:	str	x0, [sp, #40]
    1738:	mov	x0, x8
    173c:	ldr	x1, [sp, #64]
    1740:	ldr	x2, [sp, #40]
    1744:	bl	d20 <Perl_av_push@plt>
    1748:	b	1870 <boot_Math__BigInt__FastCalc@@Base+0x99c>
    174c:	ldur	x8, [x29, #-72]
    1750:	ldr	w9, [x8, #12]
    1754:	mov	w10, #0x400                 	// #1024
    1758:	movk	w10, #0x20, lsl #16
    175c:	and	w9, w9, w10
    1760:	cmp	w9, #0x400
    1764:	b.ne	1788 <boot_Math__BigInt__FastCalc@@Base+0x8b4>  // b.any
    1768:	ldur	x8, [x29, #-72]
    176c:	ldr	x8, [x8]
    1770:	ldr	x8, [x8, #16]
    1774:	stur	x8, [x29, #-16]
    1778:	ldur	x8, [x29, #-72]
    177c:	ldr	x8, [x8, #16]
    1780:	str	x8, [sp, #32]
    1784:	b	17a0 <boot_Math__BigInt__FastCalc@@Base+0x8cc>
    1788:	ldur	x0, [x29, #-24]
    178c:	ldur	x1, [x29, #-72]
    1790:	sub	x2, x29, #0x10
    1794:	mov	w3, #0x2                   	// #2
    1798:	bl	cc0 <Perl_sv_2pv_flags@plt>
    179c:	str	x0, [sp, #32]
    17a0:	ldr	x8, [sp, #32]
    17a4:	stur	x8, [x29, #-88]
    17a8:	ldur	x8, [x29, #-16]
    17ac:	ldur	x9, [x29, #-88]
    17b0:	add	x8, x9, x8
    17b4:	stur	x8, [x29, #-88]
    17b8:	ldur	x8, [x29, #-16]
    17bc:	cmp	x8, #0x0
    17c0:	cset	w9, ls  // ls = plast
    17c4:	tbnz	w9, #0, 1870 <boot_Math__BigInt__FastCalc@@Base+0x99c>
    17c8:	adrp	x8, 14000 <boot_Math__BigInt__FastCalc@@Base+0x1312c>
    17cc:	add	x8, x8, #0xf0
    17d0:	ldr	d0, [x8]
    17d4:	fcvtzu	x8, d0
    17d8:	stur	x8, [x29, #-96]
    17dc:	ldur	x8, [x29, #-96]
    17e0:	ldur	x9, [x29, #-16]
    17e4:	cmp	x8, x9
    17e8:	b.ls	17f4 <boot_Math__BigInt__FastCalc@@Base+0x920>  // b.plast
    17ec:	ldur	x8, [x29, #-16]
    17f0:	stur	x8, [x29, #-96]
    17f4:	ldur	x8, [x29, #-96]
    17f8:	ldur	x9, [x29, #-88]
    17fc:	mov	x10, xzr
    1800:	subs	x8, x10, x8
    1804:	add	x8, x9, x8
    1808:	stur	x8, [x29, #-88]
    180c:	ldur	x8, [x29, #-96]
    1810:	ldur	x9, [x29, #-16]
    1814:	subs	x8, x9, x8
    1818:	stur	x8, [x29, #-16]
    181c:	ldur	x8, [x29, #-96]
    1820:	cmp	x8, #0x0
    1824:	cset	w11, ls  // ls = plast
    1828:	tbnz	w11, #0, 186c <boot_Math__BigInt__FastCalc@@Base+0x998>
    182c:	ldur	x0, [x29, #-24]
    1830:	ldur	x1, [x29, #-104]
    1834:	ldur	x8, [x29, #-24]
    1838:	ldur	x9, [x29, #-88]
    183c:	ldur	x2, [x29, #-96]
    1840:	str	x0, [sp, #24]
    1844:	mov	x0, x8
    1848:	str	x1, [sp, #16]
    184c:	mov	x1, x9
    1850:	bl	de0 <Perl_newSVpvn@plt>
    1854:	ldr	x8, [sp, #24]
    1858:	str	x0, [sp, #8]
    185c:	mov	x0, x8
    1860:	ldr	x1, [sp, #16]
    1864:	ldr	x2, [sp, #8]
    1868:	bl	d20 <Perl_av_push@plt>
    186c:	b	17b8 <boot_Math__BigInt__FastCalc@@Base+0x8e4>
    1870:	ldur	x0, [x29, #-24]
    1874:	ldur	x1, [x29, #-104]
    1878:	bl	c60 <Perl_newRV_noinc@plt>
    187c:	stur	x0, [x29, #-80]
    1880:	ldur	x0, [x29, #-24]
    1884:	ldur	x1, [x29, #-80]
    1888:	bl	d60 <Perl_sv_2mortal@plt>
    188c:	stur	x0, [x29, #-80]
    1890:	ldur	x8, [x29, #-80]
    1894:	ldur	x9, [x29, #-24]
    1898:	ldr	x9, [x9, #24]
    189c:	ldur	w10, [x29, #-44]
    18a0:	add	w10, w10, #0x0
    18a4:	mov	w0, w10
    18a8:	sxtw	x11, w0
    18ac:	mov	x12, #0x8                   	// #8
    18b0:	mul	x11, x12, x11
    18b4:	add	x9, x9, x11
    18b8:	str	x8, [x9]
    18bc:	mov	x8, #0x1                   	// #1
    18c0:	str	x8, [sp, #96]
    18c4:	ldur	x8, [x29, #-24]
    18c8:	ldr	x8, [x8, #24]
    18cc:	ldursw	x9, [x29, #-44]
    18d0:	mul	x9, x12, x9
    18d4:	add	x8, x8, x9
    18d8:	ldur	x9, [x29, #-24]
    18dc:	str	x8, [x9]
    18e0:	adrp	x8, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1212c>
    18e4:	ldr	x8, [x8, #4056]
    18e8:	ldr	x8, [x8]
    18ec:	ldur	x9, [x29, #-8]
    18f0:	cmp	x8, x9
    18f4:	b.ne	1904 <boot_Math__BigInt__FastCalc@@Base+0xa30>  // b.any
    18f8:	ldp	x29, x30, [sp, #224]
    18fc:	add	sp, sp, #0xf0
    1900:	ret
    1904:	bl	ce0 <__stack_chk_fail@plt>
    1908:	sub	sp, sp, #0xd0
    190c:	stp	x29, x30, [sp, #192]
    1910:	add	x29, sp, #0xc0
    1914:	mov	x8, #0x8                   	// #8
    1918:	stur	x0, [x29, #-8]
    191c:	stur	x1, [x29, #-16]
    1920:	ldur	x9, [x29, #-8]
    1924:	ldr	x9, [x9]
    1928:	stur	x9, [x29, #-24]
    192c:	ldur	x0, [x29, #-8]
    1930:	str	x8, [sp, #80]
    1934:	bl	33f0 <boot_Math__BigInt__FastCalc@@Base+0x251c>
    1938:	stur	w0, [x29, #-28]
    193c:	ldur	x8, [x29, #-8]
    1940:	ldr	x8, [x8, #24]
    1944:	ldursw	x9, [x29, #-28]
    1948:	mov	w10, w9
    194c:	add	w10, w10, #0x1
    1950:	stur	w10, [x29, #-28]
    1954:	mov	x11, #0x8                   	// #8
    1958:	mul	x9, x11, x9
    195c:	add	x8, x8, x9
    1960:	stur	x8, [x29, #-40]
    1964:	ldur	x8, [x29, #-24]
    1968:	ldur	x9, [x29, #-40]
    196c:	subs	x8, x8, x9
    1970:	ldr	x9, [sp, #80]
    1974:	sdiv	x8, x8, x9
    1978:	stur	w8, [x29, #-44]
    197c:	ldur	w8, [x29, #-44]
    1980:	cmp	w8, #0x2
    1984:	b.eq	1998 <boot_Math__BigInt__FastCalc@@Base+0xac4>  // b.none
    1988:	ldur	x0, [x29, #-16]
    198c:	adrp	x1, 3000 <boot_Math__BigInt__FastCalc@@Base+0x212c>
    1990:	add	x1, x1, #0x695
    1994:	bl	d00 <Perl_croak_xs_usage@plt>
    1998:	ldur	x8, [x29, #-8]
    199c:	ldr	x8, [x8, #24]
    19a0:	ldur	w9, [x29, #-28]
    19a4:	add	w9, w9, #0x1
    19a8:	mov	w0, w9
    19ac:	sxtw	x10, w0
    19b0:	mov	x11, #0x8                   	// #8
    19b4:	mul	x10, x11, x10
    19b8:	add	x8, x8, x10
    19bc:	ldr	x8, [x8]
    19c0:	stur	x8, [x29, #-56]
    19c4:	ldur	x8, [x29, #-56]
    19c8:	ldr	x8, [x8, #16]
    19cc:	stur	x8, [x29, #-64]
    19d0:	ldur	x0, [x29, #-8]
    19d4:	ldur	x1, [x29, #-64]
    19d8:	bl	c90 <Perl_av_len@plt>
    19dc:	stur	x0, [x29, #-80]
    19e0:	ldur	x0, [x29, #-8]
    19e4:	ldur	x8, [x29, #-8]
    19e8:	str	x0, [sp, #72]
    19ec:	mov	x0, x8
    19f0:	mov	w1, #0xb                   	// #11
    19f4:	bl	db0 <Perl_newSV_type@plt>
    19f8:	stur	x0, [x29, #-88]
    19fc:	ldur	x8, [x29, #-88]
    1a00:	str	x8, [sp, #96]
    1a04:	ldr	x1, [sp, #96]
    1a08:	ldr	x0, [sp, #72]
    1a0c:	bl	d60 <Perl_sv_2mortal@plt>
    1a10:	stur	x0, [x29, #-72]
    1a14:	ldur	x0, [x29, #-8]
    1a18:	ldur	x1, [x29, #-72]
    1a1c:	ldur	x2, [x29, #-80]
    1a20:	bl	df0 <Perl_av_extend@plt>
    1a24:	ldur	x8, [x29, #-80]
    1a28:	cmp	x8, #0x0
    1a2c:	cset	w9, lt  // lt = tstop
    1a30:	tbnz	w9, #0, 1b38 <boot_Math__BigInt__FastCalc@@Base+0xc64>
    1a34:	ldur	x0, [x29, #-8]
    1a38:	ldur	x1, [x29, #-72]
    1a3c:	ldur	x2, [x29, #-80]
    1a40:	ldur	x8, [x29, #-8]
    1a44:	ldur	x9, [x29, #-8]
    1a48:	ldur	x10, [x29, #-64]
    1a4c:	ldur	x11, [x29, #-80]
    1a50:	str	x0, [sp, #64]
    1a54:	mov	x0, x9
    1a58:	str	x1, [sp, #56]
    1a5c:	mov	x1, x10
    1a60:	str	x2, [sp, #48]
    1a64:	mov	x2, x11
    1a68:	mov	w12, wzr
    1a6c:	mov	w3, w12
    1a70:	str	x8, [sp, #40]
    1a74:	bl	d90 <Perl_av_fetch@plt>
    1a78:	ldr	x8, [x0]
    1a7c:	ldr	w12, [x8, #12]
    1a80:	mov	w13, #0x200                 	// #512
    1a84:	movk	w13, #0x20, lsl #16
    1a88:	and	w12, w12, w13
    1a8c:	cmp	w12, #0x200
    1a90:	b.ne	1ac0 <boot_Math__BigInt__FastCalc@@Base+0xbec>  // b.any
    1a94:	ldur	x0, [x29, #-8]
    1a98:	ldur	x1, [x29, #-64]
    1a9c:	ldur	x2, [x29, #-80]
    1aa0:	mov	w8, wzr
    1aa4:	mov	w3, w8
    1aa8:	bl	d90 <Perl_av_fetch@plt>
    1aac:	ldr	x9, [x0]
    1ab0:	ldr	x9, [x9]
    1ab4:	ldr	x9, [x9, #40]
    1ab8:	str	x9, [sp, #32]
    1abc:	b	1afc <boot_Math__BigInt__FastCalc@@Base+0xc28>
    1ac0:	ldur	x0, [x29, #-8]
    1ac4:	ldur	x8, [x29, #-8]
    1ac8:	ldur	x1, [x29, #-64]
    1acc:	ldur	x2, [x29, #-80]
    1ad0:	str	x0, [sp, #24]
    1ad4:	mov	x0, x8
    1ad8:	mov	w9, wzr
    1adc:	mov	w3, w9
    1ae0:	bl	d90 <Perl_av_fetch@plt>
    1ae4:	ldr	x1, [x0]
    1ae8:	ldr	x0, [sp, #24]
    1aec:	mov	w2, #0x2                   	// #2
    1af0:	bl	d10 <Perl_sv_2nv_flags@plt>
    1af4:	fmov	x8, d0
    1af8:	str	x8, [sp, #32]
    1afc:	ldr	x8, [sp, #32]
    1b00:	ldr	x0, [sp, #40]
    1b04:	fmov	d0, x8
    1b08:	bl	cb0 <Perl_newSVnv@plt>
    1b0c:	ldr	x8, [sp, #64]
    1b10:	str	x0, [sp, #16]
    1b14:	mov	x0, x8
    1b18:	ldr	x1, [sp, #56]
    1b1c:	ldr	x2, [sp, #48]
    1b20:	ldr	x3, [sp, #16]
    1b24:	bl	ca0 <Perl_av_store@plt>
    1b28:	ldur	x8, [x29, #-80]
    1b2c:	subs	x8, x8, #0x1
    1b30:	stur	x8, [x29, #-80]
    1b34:	b	1a24 <boot_Math__BigInt__FastCalc@@Base+0xb50>
    1b38:	ldur	x0, [x29, #-8]
    1b3c:	ldur	x8, [x29, #-8]
    1b40:	ldur	x1, [x29, #-72]
    1b44:	str	x0, [sp, #8]
    1b48:	mov	x0, x8
    1b4c:	bl	da0 <Perl_newRV@plt>
    1b50:	ldr	x8, [sp, #8]
    1b54:	str	x0, [sp]
    1b58:	mov	x0, x8
    1b5c:	ldr	x1, [sp]
    1b60:	bl	d60 <Perl_sv_2mortal@plt>
    1b64:	ldur	x8, [x29, #-8]
    1b68:	ldr	x8, [x8, #24]
    1b6c:	ldur	w9, [x29, #-28]
    1b70:	add	w9, w9, #0x0
    1b74:	mov	w1, w9
    1b78:	sxtw	x10, w1
    1b7c:	mov	x11, #0x8                   	// #8
    1b80:	mul	x10, x11, x10
    1b84:	add	x8, x8, x10
    1b88:	str	x0, [x8]
    1b8c:	mov	x8, #0x1                   	// #1
    1b90:	str	x8, [sp, #88]
    1b94:	ldur	x8, [x29, #-8]
    1b98:	ldr	x8, [x8, #24]
    1b9c:	ldursw	x10, [x29, #-28]
    1ba0:	mul	x10, x11, x10
    1ba4:	add	x8, x8, x10
    1ba8:	ldur	x10, [x29, #-8]
    1bac:	str	x8, [x10]
    1bb0:	ldp	x29, x30, [sp, #192]
    1bb4:	add	sp, sp, #0xd0
    1bb8:	ret
    1bbc:	sub	sp, sp, #0xb0
    1bc0:	stp	x29, x30, [sp, #160]
    1bc4:	add	x29, sp, #0xa0
    1bc8:	mov	x8, #0x8                   	// #8
    1bcc:	stur	x0, [x29, #-8]
    1bd0:	stur	x1, [x29, #-16]
    1bd4:	ldur	x9, [x29, #-8]
    1bd8:	ldr	x9, [x9]
    1bdc:	stur	x9, [x29, #-24]
    1be0:	ldur	x0, [x29, #-8]
    1be4:	str	x8, [sp, #40]
    1be8:	bl	33f0 <boot_Math__BigInt__FastCalc@@Base+0x251c>
    1bec:	stur	w0, [x29, #-28]
    1bf0:	ldur	x8, [x29, #-8]
    1bf4:	ldr	x8, [x8, #24]
    1bf8:	ldursw	x9, [x29, #-28]
    1bfc:	mov	w10, w9
    1c00:	add	w10, w10, #0x1
    1c04:	stur	w10, [x29, #-28]
    1c08:	mov	x11, #0x8                   	// #8
    1c0c:	mul	x9, x11, x9
    1c10:	add	x8, x8, x9
    1c14:	stur	x8, [x29, #-40]
    1c18:	ldur	x8, [x29, #-24]
    1c1c:	ldur	x9, [x29, #-40]
    1c20:	subs	x8, x8, x9
    1c24:	ldr	x9, [sp, #40]
    1c28:	sdiv	x8, x8, x9
    1c2c:	stur	w8, [x29, #-44]
    1c30:	ldur	w8, [x29, #-44]
    1c34:	cmp	w8, #0x1
    1c38:	b.eq	1c4c <boot_Math__BigInt__FastCalc@@Base+0xd78>  // b.none
    1c3c:	ldur	x0, [x29, #-16]
    1c40:	adrp	x1, 3000 <boot_Math__BigInt__FastCalc@@Base+0x212c>
    1c44:	add	x1, x1, #0x69c
    1c48:	bl	d00 <Perl_croak_xs_usage@plt>
    1c4c:	ldur	x8, [x29, #-8]
    1c50:	ldr	x8, [x8, #24]
    1c54:	ldur	w9, [x29, #-28]
    1c58:	add	w9, w9, #0x0
    1c5c:	mov	w0, w9
    1c60:	sxtw	x10, w0
    1c64:	mov	x11, #0x8                   	// #8
    1c68:	mul	x10, x11, x10
    1c6c:	add	x8, x8, x10
    1c70:	ldr	x8, [x8]
    1c74:	stur	x8, [x29, #-56]
    1c78:	ldur	x8, [x29, #-56]
    1c7c:	ldr	x8, [x8, #16]
    1c80:	stur	x8, [x29, #-64]
    1c84:	ldur	x0, [x29, #-8]
    1c88:	ldur	x1, [x29, #-64]
    1c8c:	str	x11, [sp, #32]
    1c90:	bl	c90 <Perl_av_len@plt>
    1c94:	str	x0, [sp, #80]
    1c98:	ldur	x8, [x29, #-56]
    1c9c:	ldur	x10, [x29, #-8]
    1ca0:	ldr	x10, [x10, #24]
    1ca4:	ldur	w9, [x29, #-28]
    1ca8:	add	w9, w9, #0x0
    1cac:	mov	w0, w9
    1cb0:	sxtw	x11, w0
    1cb4:	ldr	x12, [sp, #32]
    1cb8:	mul	x11, x12, x11
    1cbc:	add	x10, x10, x11
    1cc0:	str	x8, [x10]
    1cc4:	ldr	x8, [sp, #80]
    1cc8:	mov	x10, #0xffffffffffffffff    	// #-1
    1ccc:	cmp	x8, x10
    1cd0:	b.ne	1d3c <boot_Math__BigInt__FastCalc@@Base+0xe68>  // b.any
    1cd4:	ldur	x0, [x29, #-8]
    1cd8:	ldur	x1, [x29, #-64]
    1cdc:	ldur	x8, [x29, #-8]
    1ce0:	str	x0, [sp, #24]
    1ce4:	mov	x0, x8
    1ce8:	mov	x8, xzr
    1cec:	str	x1, [sp, #16]
    1cf0:	mov	x1, x8
    1cf4:	bl	dc0 <Perl_newSViv@plt>
    1cf8:	ldr	x8, [sp, #24]
    1cfc:	str	x0, [sp, #8]
    1d00:	mov	x0, x8
    1d04:	ldr	x1, [sp, #16]
    1d08:	ldr	x2, [sp, #8]
    1d0c:	bl	d20 <Perl_av_push@plt>
    1d10:	mov	x8, #0x1                   	// #1
    1d14:	str	x8, [sp, #64]
    1d18:	ldur	x8, [x29, #-8]
    1d1c:	ldr	x8, [x8, #24]
    1d20:	ldursw	x9, [x29, #-28]
    1d24:	mov	x10, #0x8                   	// #8
    1d28:	mul	x9, x10, x9
    1d2c:	add	x8, x8, x9
    1d30:	ldur	x9, [x29, #-8]
    1d34:	str	x8, [x9]
    1d38:	b	1e8c <boot_Math__BigInt__FastCalc@@Base+0xfb8>
    1d3c:	ldr	x8, [sp, #80]
    1d40:	cbnz	x8, 1d70 <boot_Math__BigInt__FastCalc@@Base+0xe9c>
    1d44:	mov	x8, #0x1                   	// #1
    1d48:	str	x8, [sp, #56]
    1d4c:	ldur	x8, [x29, #-8]
    1d50:	ldr	x8, [x8, #24]
    1d54:	ldursw	x9, [x29, #-28]
    1d58:	mov	x10, #0x8                   	// #8
    1d5c:	mul	x9, x10, x9
    1d60:	add	x8, x8, x9
    1d64:	ldur	x9, [x29, #-8]
    1d68:	str	x8, [x9]
    1d6c:	b	1e8c <boot_Math__BigInt__FastCalc@@Base+0xfb8>
    1d70:	ldr	x8, [sp, #80]
    1d74:	str	x8, [sp, #72]
    1d78:	ldr	x8, [sp, #72]
    1d7c:	cmp	x8, #0x0
    1d80:	cset	w9, le
    1d84:	tbnz	w9, #0, 1e1c <boot_Math__BigInt__FastCalc@@Base+0xf48>
    1d88:	ldur	x0, [x29, #-8]
    1d8c:	ldur	x1, [x29, #-64]
    1d90:	ldr	x2, [sp, #72]
    1d94:	mov	w8, wzr
    1d98:	mov	w3, w8
    1d9c:	bl	d90 <Perl_av_fetch@plt>
    1da0:	ldr	x9, [x0]
    1da4:	stur	x9, [x29, #-72]
    1da8:	ldur	x9, [x29, #-72]
    1dac:	ldr	w8, [x9, #12]
    1db0:	mov	w10, #0x200                 	// #512
    1db4:	movk	w10, #0x20, lsl #16
    1db8:	and	w8, w8, w10
    1dbc:	cmp	w8, #0x200
    1dc0:	b.ne	1dd8 <boot_Math__BigInt__FastCalc@@Base+0xf04>  // b.any
    1dc4:	ldur	x8, [x29, #-72]
    1dc8:	ldr	x8, [x8]
    1dcc:	ldr	x8, [x8, #40]
    1dd0:	str	x8, [sp]
    1dd4:	b	1df0 <boot_Math__BigInt__FastCalc@@Base+0xf1c>
    1dd8:	ldur	x0, [x29, #-8]
    1ddc:	ldur	x1, [x29, #-72]
    1de0:	mov	w2, #0x2                   	// #2
    1de4:	bl	d10 <Perl_sv_2nv_flags@plt>
    1de8:	fmov	x8, d0
    1dec:	str	x8, [sp]
    1df0:	ldr	x8, [sp]
    1df4:	fmov	d0, x8
    1df8:	fcmp	d0, #0.0
    1dfc:	cset	w9, ne  // ne = any
    1e00:	tbnz	w9, #0, 1e08 <boot_Math__BigInt__FastCalc@@Base+0xf34>
    1e04:	b	1e0c <boot_Math__BigInt__FastCalc@@Base+0xf38>
    1e08:	b	1e1c <boot_Math__BigInt__FastCalc@@Base+0xf48>
    1e0c:	ldr	x8, [sp, #72]
    1e10:	subs	x8, x8, #0x1
    1e14:	str	x8, [sp, #72]
    1e18:	b	1d78 <boot_Math__BigInt__FastCalc@@Base+0xea4>
    1e1c:	ldr	x8, [sp, #72]
    1e20:	ldr	x9, [sp, #80]
    1e24:	cmp	x8, x9
    1e28:	b.ge	1e64 <boot_Math__BigInt__FastCalc@@Base+0xf90>  // b.tcont
    1e2c:	ldr	x8, [sp, #80]
    1e30:	ldr	x9, [sp, #72]
    1e34:	subs	x8, x8, x9
    1e38:	str	x8, [sp, #72]
    1e3c:	ldr	x8, [sp, #72]
    1e40:	subs	x9, x8, #0x1
    1e44:	str	x9, [sp, #72]
    1e48:	cmp	x8, #0x0
    1e4c:	cset	w10, le
    1e50:	tbnz	w10, #0, 1e64 <boot_Math__BigInt__FastCalc@@Base+0xf90>
    1e54:	ldur	x0, [x29, #-8]
    1e58:	ldur	x1, [x29, #-64]
    1e5c:	bl	d30 <Perl_av_pop@plt>
    1e60:	b	1e3c <boot_Math__BigInt__FastCalc@@Base+0xf68>
    1e64:	mov	x8, #0x1                   	// #1
    1e68:	str	x8, [sp, #48]
    1e6c:	ldur	x8, [x29, #-8]
    1e70:	ldr	x8, [x8, #24]
    1e74:	ldursw	x9, [x29, #-28]
    1e78:	mov	x10, #0x8                   	// #8
    1e7c:	mul	x9, x10, x9
    1e80:	add	x8, x8, x9
    1e84:	ldur	x9, [x29, #-8]
    1e88:	str	x8, [x9]
    1e8c:	ldp	x29, x30, [sp, #160]
    1e90:	add	sp, sp, #0xb0
    1e94:	ret
    1e98:	sub	sp, sp, #0xb0
    1e9c:	stp	x29, x30, [sp, #160]
    1ea0:	add	x29, sp, #0xa0
    1ea4:	mov	x8, #0x8                   	// #8
    1ea8:	stur	x0, [x29, #-8]
    1eac:	stur	x1, [x29, #-16]
    1eb0:	ldur	x9, [x29, #-8]
    1eb4:	ldr	x9, [x9]
    1eb8:	stur	x9, [x29, #-24]
    1ebc:	ldur	x0, [x29, #-8]
    1ec0:	str	x8, [sp, #48]
    1ec4:	bl	33f0 <boot_Math__BigInt__FastCalc@@Base+0x251c>
    1ec8:	stur	w0, [x29, #-28]
    1ecc:	ldur	x8, [x29, #-8]
    1ed0:	ldr	x8, [x8, #24]
    1ed4:	ldursw	x9, [x29, #-28]
    1ed8:	mov	w10, w9
    1edc:	add	w10, w10, #0x1
    1ee0:	stur	w10, [x29, #-28]
    1ee4:	mov	x11, #0x8                   	// #8
    1ee8:	mul	x9, x11, x9
    1eec:	add	x8, x8, x9
    1ef0:	stur	x8, [x29, #-40]
    1ef4:	ldur	x8, [x29, #-24]
    1ef8:	ldur	x9, [x29, #-40]
    1efc:	subs	x8, x8, x9
    1f00:	ldr	x9, [sp, #48]
    1f04:	sdiv	x8, x8, x9
    1f08:	stur	w8, [x29, #-44]
    1f0c:	ldur	w8, [x29, #-44]
    1f10:	cmp	w8, #0x2
    1f14:	b.eq	1f28 <boot_Math__BigInt__FastCalc@@Base+0x1054>  // b.none
    1f18:	ldur	x0, [x29, #-16]
    1f1c:	adrp	x1, 3000 <boot_Math__BigInt__FastCalc@@Base+0x212c>
    1f20:	add	x1, x1, #0x695
    1f24:	bl	d00 <Perl_croak_xs_usage@plt>
    1f28:	ldur	x8, [x29, #-8]
    1f2c:	ldr	x8, [x8, #24]
    1f30:	ldur	w9, [x29, #-28]
    1f34:	add	w9, w9, #0x1
    1f38:	mov	w0, w9
    1f3c:	sxtw	x10, w0
    1f40:	mov	x11, #0x8                   	// #8
    1f44:	mul	x10, x11, x10
    1f48:	add	x8, x8, x10
    1f4c:	ldr	x8, [x8]
    1f50:	stur	x8, [x29, #-56]
    1f54:	ldur	x8, [x29, #-56]
    1f58:	ldr	x8, [x8, #16]
    1f5c:	stur	x8, [x29, #-64]
    1f60:	ldur	x0, [x29, #-8]
    1f64:	ldur	x1, [x29, #-64]
    1f68:	str	x11, [sp, #40]
    1f6c:	bl	c90 <Perl_av_len@plt>
    1f70:	str	x0, [sp, #80]
    1f74:	ldur	x8, [x29, #-56]
    1f78:	ldur	x10, [x29, #-8]
    1f7c:	ldr	x10, [x10, #24]
    1f80:	ldur	w9, [x29, #-28]
    1f84:	add	w9, w9, #0x0
    1f88:	mov	w0, w9
    1f8c:	sxtw	x11, w0
    1f90:	ldr	x12, [sp, #40]
    1f94:	mul	x11, x12, x11
    1f98:	add	x10, x10, x11
    1f9c:	str	x8, [x10]
    1fa0:	adrp	x8, 14000 <boot_Math__BigInt__FastCalc@@Base+0x1312c>
    1fa4:	add	x8, x8, #0xf8
    1fa8:	ldr	d0, [x8]
    1fac:	fmov	d1, #1.000000000000000000e+00
    1fb0:	fsub	d0, d0, d1
    1fb4:	str	d0, [sp, #64]
    1fb8:	str	xzr, [sp, #72]
    1fbc:	ldr	x8, [sp, #72]
    1fc0:	ldr	x9, [sp, #80]
    1fc4:	cmp	x8, x9
    1fc8:	b.gt	20e4 <boot_Math__BigInt__FastCalc@@Base+0x1210>
    1fcc:	ldur	x0, [x29, #-8]
    1fd0:	ldur	x1, [x29, #-64]
    1fd4:	ldr	x2, [sp, #72]
    1fd8:	mov	w8, wzr
    1fdc:	mov	w3, w8
    1fe0:	bl	d90 <Perl_av_fetch@plt>
    1fe4:	ldr	x9, [x0]
    1fe8:	stur	x9, [x29, #-72]
    1fec:	ldur	x0, [x29, #-8]
    1ff0:	ldur	x1, [x29, #-72]
    1ff4:	ldur	x9, [x29, #-72]
    1ff8:	ldr	w8, [x9, #12]
    1ffc:	mov	w10, #0x200                 	// #512
    2000:	movk	w10, #0x20, lsl #16
    2004:	and	w8, w8, w10
    2008:	cmp	w8, #0x200
    200c:	str	x0, [sp, #32]
    2010:	str	x1, [sp, #24]
    2014:	b.ne	202c <boot_Math__BigInt__FastCalc@@Base+0x1158>  // b.any
    2018:	ldur	x8, [x29, #-72]
    201c:	ldr	x8, [x8]
    2020:	ldr	x8, [x8, #40]
    2024:	str	x8, [sp, #16]
    2028:	b	2044 <boot_Math__BigInt__FastCalc@@Base+0x1170>
    202c:	ldur	x0, [x29, #-8]
    2030:	ldur	x1, [x29, #-72]
    2034:	mov	w2, #0x2                   	// #2
    2038:	bl	d10 <Perl_sv_2nv_flags@plt>
    203c:	fmov	x8, d0
    2040:	str	x8, [sp, #16]
    2044:	ldr	x8, [sp, #16]
    2048:	fmov	d0, x8
    204c:	fmov	d1, #1.000000000000000000e+00
    2050:	fsub	d0, d0, d1
    2054:	ldr	x0, [sp, #32]
    2058:	ldr	x1, [sp, #24]
    205c:	bl	c50 <Perl_sv_setnv@plt>
    2060:	ldur	x8, [x29, #-72]
    2064:	ldr	w9, [x8, #12]
    2068:	mov	w10, #0x200                 	// #512
    206c:	movk	w10, #0x20, lsl #16
    2070:	and	w9, w9, w10
    2074:	cmp	w9, #0x200
    2078:	b.ne	2090 <boot_Math__BigInt__FastCalc@@Base+0x11bc>  // b.any
    207c:	ldur	x8, [x29, #-72]
    2080:	ldr	x8, [x8]
    2084:	ldr	x8, [x8, #40]
    2088:	str	x8, [sp, #8]
    208c:	b	20a8 <boot_Math__BigInt__FastCalc@@Base+0x11d4>
    2090:	ldur	x0, [x29, #-8]
    2094:	ldur	x1, [x29, #-72]
    2098:	mov	w2, #0x2                   	// #2
    209c:	bl	d10 <Perl_sv_2nv_flags@plt>
    20a0:	fmov	x8, d0
    20a4:	str	x8, [sp, #8]
    20a8:	ldr	x8, [sp, #8]
    20ac:	fmov	d0, x8
    20b0:	fcmp	d0, #0.0
    20b4:	cset	w9, ge  // ge = tcont
    20b8:	tbnz	w9, #0, 20c0 <boot_Math__BigInt__FastCalc@@Base+0x11ec>
    20bc:	b	20c4 <boot_Math__BigInt__FastCalc@@Base+0x11f0>
    20c0:	b	20e4 <boot_Math__BigInt__FastCalc@@Base+0x1210>
    20c4:	ldur	x0, [x29, #-8]
    20c8:	ldur	x1, [x29, #-72]
    20cc:	ldr	d0, [sp, #64]
    20d0:	bl	c50 <Perl_sv_setnv@plt>
    20d4:	ldr	x8, [sp, #72]
    20d8:	add	x8, x8, #0x1
    20dc:	str	x8, [sp, #72]
    20e0:	b	1fbc <boot_Math__BigInt__FastCalc@@Base+0x10e8>
    20e4:	ldr	x8, [sp, #80]
    20e8:	cmp	x8, #0x0
    20ec:	cset	w9, le
    20f0:	tbnz	w9, #0, 216c <boot_Math__BigInt__FastCalc@@Base+0x1298>
    20f4:	ldur	x0, [x29, #-8]
    20f8:	ldur	x1, [x29, #-64]
    20fc:	ldr	x2, [sp, #80]
    2100:	mov	w8, wzr
    2104:	mov	w3, w8
    2108:	bl	d90 <Perl_av_fetch@plt>
    210c:	ldr	x9, [x0]
    2110:	stur	x9, [x29, #-72]
    2114:	ldur	x9, [x29, #-72]
    2118:	ldr	w8, [x9, #12]
    211c:	mov	w10, #0x100                 	// #256
    2120:	movk	w10, #0x20, lsl #16
    2124:	and	w8, w8, w10
    2128:	cmp	w8, #0x100
    212c:	b.ne	2144 <boot_Math__BigInt__FastCalc@@Base+0x1270>  // b.any
    2130:	ldur	x8, [x29, #-72]
    2134:	ldr	x8, [x8]
    2138:	ldr	x8, [x8, #32]
    213c:	str	x8, [sp]
    2140:	b	2158 <boot_Math__BigInt__FastCalc@@Base+0x1284>
    2144:	ldur	x0, [x29, #-8]
    2148:	ldur	x1, [x29, #-72]
    214c:	mov	w2, #0x2                   	// #2
    2150:	bl	c40 <Perl_sv_2iv_flags@plt>
    2154:	str	x0, [sp]
    2158:	ldr	x8, [sp]
    215c:	cbnz	x8, 216c <boot_Math__BigInt__FastCalc@@Base+0x1298>
    2160:	ldur	x0, [x29, #-8]
    2164:	ldur	x1, [x29, #-64]
    2168:	bl	d30 <Perl_av_pop@plt>
    216c:	mov	x8, #0x1                   	// #1
    2170:	str	x8, [sp, #56]
    2174:	ldur	x8, [x29, #-8]
    2178:	ldr	x8, [x8, #24]
    217c:	ldursw	x9, [x29, #-28]
    2180:	mov	x10, #0x8                   	// #8
    2184:	mul	x9, x10, x9
    2188:	add	x8, x8, x9
    218c:	ldur	x9, [x29, #-8]
    2190:	str	x8, [x9]
    2194:	ldp	x29, x30, [sp, #160]
    2198:	add	sp, sp, #0xb0
    219c:	ret
    21a0:	sub	sp, sp, #0xd0
    21a4:	stp	x29, x30, [sp, #192]
    21a8:	add	x29, sp, #0xc0
    21ac:	mov	x8, #0x8                   	// #8
    21b0:	stur	x0, [x29, #-8]
    21b4:	stur	x1, [x29, #-16]
    21b8:	ldur	x9, [x29, #-8]
    21bc:	ldr	x9, [x9]
    21c0:	stur	x9, [x29, #-24]
    21c4:	ldur	x0, [x29, #-8]
    21c8:	str	x8, [sp, #72]
    21cc:	bl	33f0 <boot_Math__BigInt__FastCalc@@Base+0x251c>
    21d0:	stur	w0, [x29, #-28]
    21d4:	ldur	x8, [x29, #-8]
    21d8:	ldr	x8, [x8, #24]
    21dc:	ldursw	x9, [x29, #-28]
    21e0:	mov	w10, w9
    21e4:	add	w10, w10, #0x1
    21e8:	stur	w10, [x29, #-28]
    21ec:	mov	x11, #0x8                   	// #8
    21f0:	mul	x9, x11, x9
    21f4:	add	x8, x8, x9
    21f8:	stur	x8, [x29, #-40]
    21fc:	ldur	x8, [x29, #-24]
    2200:	ldur	x9, [x29, #-40]
    2204:	subs	x8, x8, x9
    2208:	ldr	x9, [sp, #72]
    220c:	sdiv	x8, x8, x9
    2210:	stur	w8, [x29, #-44]
    2214:	ldur	w8, [x29, #-44]
    2218:	cmp	w8, #0x2
    221c:	b.eq	2230 <boot_Math__BigInt__FastCalc@@Base+0x135c>  // b.none
    2220:	ldur	x0, [x29, #-16]
    2224:	adrp	x1, 3000 <boot_Math__BigInt__FastCalc@@Base+0x212c>
    2228:	add	x1, x1, #0x695
    222c:	bl	d00 <Perl_croak_xs_usage@plt>
    2230:	ldur	x8, [x29, #-8]
    2234:	ldr	x8, [x8, #24]
    2238:	ldur	w9, [x29, #-28]
    223c:	add	w9, w9, #0x1
    2240:	mov	w0, w9
    2244:	sxtw	x10, w0
    2248:	mov	x11, #0x8                   	// #8
    224c:	mul	x10, x11, x10
    2250:	add	x8, x8, x10
    2254:	ldr	x8, [x8]
    2258:	stur	x8, [x29, #-56]
    225c:	ldur	x8, [x29, #-56]
    2260:	ldr	x8, [x8, #16]
    2264:	stur	x8, [x29, #-64]
    2268:	ldur	x0, [x29, #-8]
    226c:	ldur	x1, [x29, #-64]
    2270:	str	x11, [sp, #64]
    2274:	bl	c90 <Perl_av_len@plt>
    2278:	stur	x0, [x29, #-80]
    227c:	ldur	x8, [x29, #-56]
    2280:	ldur	x10, [x29, #-8]
    2284:	ldr	x10, [x10, #24]
    2288:	ldur	w9, [x29, #-28]
    228c:	add	w9, w9, #0x0
    2290:	mov	w0, w9
    2294:	sxtw	x11, w0
    2298:	ldr	x12, [sp, #64]
    229c:	mul	x11, x12, x11
    22a0:	add	x10, x10, x11
    22a4:	str	x8, [x10]
    22a8:	adrp	x8, 14000 <boot_Math__BigInt__FastCalc@@Base+0x1312c>
    22ac:	add	x8, x8, #0xf8
    22b0:	ldr	x8, [x8]
    22b4:	str	x8, [sp, #96]
    22b8:	stur	xzr, [x29, #-88]
    22bc:	ldur	x8, [x29, #-88]
    22c0:	ldur	x9, [x29, #-80]
    22c4:	cmp	x8, x9
    22c8:	b.gt	2414 <boot_Math__BigInt__FastCalc@@Base+0x1540>
    22cc:	ldur	x0, [x29, #-8]
    22d0:	ldur	x1, [x29, #-64]
    22d4:	ldur	x2, [x29, #-88]
    22d8:	mov	w8, wzr
    22dc:	mov	w3, w8
    22e0:	bl	d90 <Perl_av_fetch@plt>
    22e4:	ldr	x9, [x0]
    22e8:	stur	x9, [x29, #-72]
    22ec:	ldur	x0, [x29, #-8]
    22f0:	ldur	x1, [x29, #-72]
    22f4:	ldur	x9, [x29, #-72]
    22f8:	ldr	w8, [x9, #12]
    22fc:	mov	w10, #0x200                 	// #512
    2300:	movk	w10, #0x20, lsl #16
    2304:	and	w8, w8, w10
    2308:	cmp	w8, #0x200
    230c:	str	x0, [sp, #56]
    2310:	str	x1, [sp, #48]
    2314:	b.ne	232c <boot_Math__BigInt__FastCalc@@Base+0x1458>  // b.any
    2318:	ldur	x8, [x29, #-72]
    231c:	ldr	x8, [x8]
    2320:	ldr	x8, [x8, #40]
    2324:	str	x8, [sp, #40]
    2328:	b	2344 <boot_Math__BigInt__FastCalc@@Base+0x1470>
    232c:	ldur	x0, [x29, #-8]
    2330:	ldur	x1, [x29, #-72]
    2334:	mov	w2, #0x2                   	// #2
    2338:	bl	d10 <Perl_sv_2nv_flags@plt>
    233c:	fmov	x8, d0
    2340:	str	x8, [sp, #40]
    2344:	ldr	x8, [sp, #40]
    2348:	fmov	d0, x8
    234c:	fmov	d1, #1.000000000000000000e+00
    2350:	fadd	d0, d0, d1
    2354:	ldr	x0, [sp, #56]
    2358:	ldr	x1, [sp, #48]
    235c:	bl	c50 <Perl_sv_setnv@plt>
    2360:	ldur	x8, [x29, #-72]
    2364:	ldr	w9, [x8, #12]
    2368:	mov	w10, #0x200                 	// #512
    236c:	movk	w10, #0x20, lsl #16
    2370:	and	w9, w9, w10
    2374:	cmp	w9, #0x200
    2378:	b.ne	2390 <boot_Math__BigInt__FastCalc@@Base+0x14bc>  // b.any
    237c:	ldur	x8, [x29, #-72]
    2380:	ldr	x8, [x8]
    2384:	ldr	x8, [x8, #40]
    2388:	str	x8, [sp, #32]
    238c:	b	23a8 <boot_Math__BigInt__FastCalc@@Base+0x14d4>
    2390:	ldur	x0, [x29, #-8]
    2394:	ldur	x1, [x29, #-72]
    2398:	mov	w2, #0x2                   	// #2
    239c:	bl	d10 <Perl_sv_2nv_flags@plt>
    23a0:	fmov	x8, d0
    23a4:	str	x8, [sp, #32]
    23a8:	ldr	x8, [sp, #32]
    23ac:	ldr	d0, [sp, #96]
    23b0:	fmov	d1, x8
    23b4:	fcmp	d1, d0
    23b8:	cset	w9, mi  // mi = first
    23bc:	tbnz	w9, #0, 23c4 <boot_Math__BigInt__FastCalc@@Base+0x14f0>
    23c0:	b	23f0 <boot_Math__BigInt__FastCalc@@Base+0x151c>
    23c4:	mov	x8, #0x1                   	// #1
    23c8:	str	x8, [sp, #88]
    23cc:	ldur	x8, [x29, #-8]
    23d0:	ldr	x8, [x8, #24]
    23d4:	ldursw	x9, [x29, #-28]
    23d8:	mov	x10, #0x8                   	// #8
    23dc:	mul	x9, x10, x9
    23e0:	add	x8, x8, x9
    23e4:	ldur	x9, [x29, #-8]
    23e8:	str	x8, [x9]
    23ec:	b	24e4 <boot_Math__BigInt__FastCalc@@Base+0x1610>
    23f0:	ldur	x0, [x29, #-8]
    23f4:	ldur	x1, [x29, #-72]
    23f8:	mov	x8, xzr
    23fc:	mov	x2, x8
    2400:	bl	dd0 <Perl_sv_setiv@plt>
    2404:	ldur	x8, [x29, #-88]
    2408:	add	x8, x8, #0x1
    240c:	stur	x8, [x29, #-88]
    2410:	b	22bc <boot_Math__BigInt__FastCalc@@Base+0x13e8>
    2414:	ldur	x0, [x29, #-8]
    2418:	ldur	x1, [x29, #-64]
    241c:	ldur	x2, [x29, #-80]
    2420:	mov	w8, wzr
    2424:	mov	w3, w8
    2428:	bl	d90 <Perl_av_fetch@plt>
    242c:	ldr	x9, [x0]
    2430:	stur	x9, [x29, #-72]
    2434:	ldur	x9, [x29, #-72]
    2438:	ldr	w8, [x9, #12]
    243c:	mov	w10, #0x100                 	// #256
    2440:	movk	w10, #0x20, lsl #16
    2444:	and	w8, w8, w10
    2448:	cmp	w8, #0x100
    244c:	b.ne	2464 <boot_Math__BigInt__FastCalc@@Base+0x1590>  // b.any
    2450:	ldur	x8, [x29, #-72]
    2454:	ldr	x8, [x8]
    2458:	ldr	x8, [x8, #32]
    245c:	str	x8, [sp, #24]
    2460:	b	2478 <boot_Math__BigInt__FastCalc@@Base+0x15a4>
    2464:	ldur	x0, [x29, #-8]
    2468:	ldur	x1, [x29, #-72]
    246c:	mov	w2, #0x2                   	// #2
    2470:	bl	c40 <Perl_sv_2iv_flags@plt>
    2474:	str	x0, [sp, #24]
    2478:	ldr	x8, [sp, #24]
    247c:	cbnz	x8, 24bc <boot_Math__BigInt__FastCalc@@Base+0x15e8>
    2480:	ldur	x0, [x29, #-8]
    2484:	ldur	x1, [x29, #-64]
    2488:	ldur	x8, [x29, #-8]
    248c:	str	x0, [sp, #16]
    2490:	mov	x0, x8
    2494:	mov	x8, #0x1                   	// #1
    2498:	str	x1, [sp, #8]
    249c:	mov	x1, x8
    24a0:	bl	dc0 <Perl_newSViv@plt>
    24a4:	ldr	x8, [sp, #16]
    24a8:	str	x0, [sp]
    24ac:	mov	x0, x8
    24b0:	ldr	x1, [sp, #8]
    24b4:	ldr	x2, [sp]
    24b8:	bl	d20 <Perl_av_push@plt>
    24bc:	mov	x8, #0x1                   	// #1
    24c0:	str	x8, [sp, #80]
    24c4:	ldur	x8, [x29, #-8]
    24c8:	ldr	x8, [x8, #24]
    24cc:	ldursw	x9, [x29, #-28]
    24d0:	mov	x10, #0x8                   	// #8
    24d4:	mul	x9, x10, x9
    24d8:	add	x8, x8, x9
    24dc:	ldur	x9, [x29, #-8]
    24e0:	str	x8, [x9]
    24e4:	ldp	x29, x30, [sp, #192]
    24e8:	add	sp, sp, #0xd0
    24ec:	ret
    24f0:	sub	sp, sp, #0xa0
    24f4:	stp	x29, x30, [sp, #144]
    24f8:	add	x29, sp, #0x90
    24fc:	mov	x8, #0x8                   	// #8
    2500:	stur	x0, [x29, #-8]
    2504:	stur	x1, [x29, #-16]
    2508:	ldur	x9, [x29, #-8]
    250c:	ldr	x9, [x9]
    2510:	stur	x9, [x29, #-24]
    2514:	ldur	x0, [x29, #-8]
    2518:	str	x8, [sp, #32]
    251c:	bl	33f0 <boot_Math__BigInt__FastCalc@@Base+0x251c>
    2520:	stur	w0, [x29, #-28]
    2524:	ldur	x8, [x29, #-8]
    2528:	ldr	x8, [x8, #24]
    252c:	ldursw	x9, [x29, #-28]
    2530:	mov	w10, w9
    2534:	add	w10, w10, #0x1
    2538:	stur	w10, [x29, #-28]
    253c:	mov	x11, #0x8                   	// #8
    2540:	mul	x9, x11, x9
    2544:	add	x8, x8, x9
    2548:	stur	x8, [x29, #-40]
    254c:	ldur	x8, [x29, #-24]
    2550:	ldur	x9, [x29, #-40]
    2554:	subs	x8, x8, x9
    2558:	ldr	x9, [sp, #32]
    255c:	sdiv	x8, x8, x9
    2560:	stur	w8, [x29, #-44]
    2564:	ldur	x11, [x29, #-16]
    2568:	ldr	x11, [x11]
    256c:	stur	x11, [x29, #-56]
    2570:	ldur	x11, [x29, #-56]
    2574:	stur	x11, [x29, #-64]
    2578:	ldur	x11, [x29, #-64]
    257c:	ldr	w8, [x11, #40]
    2580:	stur	w8, [x29, #-48]
    2584:	ldur	w8, [x29, #-44]
    2588:	cmp	w8, #0x1
    258c:	b.eq	25a0 <boot_Math__BigInt__FastCalc@@Base+0x16cc>  // b.none
    2590:	ldur	x0, [x29, #-16]
    2594:	adrp	x1, 3000 <boot_Math__BigInt__FastCalc@@Base+0x212c>
    2598:	add	x1, x1, #0x69e
    259c:	bl	d00 <Perl_croak_xs_usage@plt>
    25a0:	ldur	x0, [x29, #-8]
    25a4:	mov	w1, #0xb                   	// #11
    25a8:	bl	db0 <Perl_newSV_type@plt>
    25ac:	str	x0, [sp, #64]
    25b0:	ldr	x8, [sp, #64]
    25b4:	str	x8, [sp, #56]
    25b8:	ldr	x8, [sp, #56]
    25bc:	str	x8, [sp, #72]
    25c0:	ldur	x0, [x29, #-8]
    25c4:	ldr	x1, [sp, #72]
    25c8:	ldur	x8, [x29, #-8]
    25cc:	ldursw	x9, [x29, #-48]
    25d0:	str	x0, [sp, #24]
    25d4:	mov	x0, x8
    25d8:	str	x1, [sp, #16]
    25dc:	mov	x1, x9
    25e0:	bl	dc0 <Perl_newSViv@plt>
    25e4:	ldr	x8, [sp, #24]
    25e8:	str	x0, [sp, #8]
    25ec:	mov	x0, x8
    25f0:	ldr	x1, [sp, #16]
    25f4:	ldr	x2, [sp, #8]
    25f8:	bl	d20 <Perl_av_push@plt>
    25fc:	ldur	x0, [x29, #-8]
    2600:	ldr	x1, [sp, #72]
    2604:	bl	c60 <Perl_newRV_noinc@plt>
    2608:	str	x0, [sp, #48]
    260c:	ldur	x0, [x29, #-8]
    2610:	ldr	x1, [sp, #48]
    2614:	bl	d60 <Perl_sv_2mortal@plt>
    2618:	str	x0, [sp, #48]
    261c:	ldr	x8, [sp, #48]
    2620:	ldur	x9, [x29, #-8]
    2624:	ldr	x9, [x9, #24]
    2628:	ldur	w10, [x29, #-28]
    262c:	add	w10, w10, #0x0
    2630:	mov	w0, w10
    2634:	sxtw	x11, w0
    2638:	mov	x12, #0x8                   	// #8
    263c:	mul	x11, x12, x11
    2640:	add	x9, x9, x11
    2644:	str	x8, [x9]
    2648:	mov	x8, #0x1                   	// #1
    264c:	str	x8, [sp, #40]
    2650:	ldur	x8, [x29, #-8]
    2654:	ldr	x8, [x8, #24]
    2658:	ldursw	x9, [x29, #-28]
    265c:	mul	x9, x12, x9
    2660:	add	x8, x8, x9
    2664:	ldur	x9, [x29, #-8]
    2668:	str	x8, [x9]
    266c:	ldp	x29, x30, [sp, #144]
    2670:	add	sp, sp, #0xa0
    2674:	ret
    2678:	sub	sp, sp, #0x90
    267c:	stp	x29, x30, [sp, #128]
    2680:	add	x29, sp, #0x80
    2684:	mov	x8, #0x8                   	// #8
    2688:	stur	x0, [x29, #-8]
    268c:	stur	x1, [x29, #-16]
    2690:	ldur	x9, [x29, #-8]
    2694:	ldr	x9, [x9]
    2698:	stur	x9, [x29, #-24]
    269c:	ldur	x0, [x29, #-8]
    26a0:	str	x8, [sp, #24]
    26a4:	bl	33f0 <boot_Math__BigInt__FastCalc@@Base+0x251c>
    26a8:	stur	w0, [x29, #-28]
    26ac:	ldur	x8, [x29, #-8]
    26b0:	ldr	x8, [x8, #24]
    26b4:	ldursw	x9, [x29, #-28]
    26b8:	mov	w10, w9
    26bc:	add	w10, w10, #0x1
    26c0:	stur	w10, [x29, #-28]
    26c4:	mov	x11, #0x8                   	// #8
    26c8:	mul	x9, x11, x9
    26cc:	add	x8, x8, x9
    26d0:	stur	x8, [x29, #-40]
    26d4:	ldur	x8, [x29, #-24]
    26d8:	ldur	x9, [x29, #-40]
    26dc:	subs	x8, x8, x9
    26e0:	ldr	x9, [sp, #24]
    26e4:	sdiv	x8, x8, x9
    26e8:	stur	w8, [x29, #-44]
    26ec:	ldur	x11, [x29, #-16]
    26f0:	ldr	x11, [x11]
    26f4:	stur	x11, [x29, #-56]
    26f8:	ldur	x11, [x29, #-56]
    26fc:	str	x11, [sp, #64]
    2700:	ldr	x11, [sp, #64]
    2704:	ldr	w8, [x11, #40]
    2708:	stur	w8, [x29, #-48]
    270c:	ldur	w8, [x29, #-44]
    2710:	cmp	w8, #0x2
    2714:	b.eq	2728 <boot_Math__BigInt__FastCalc@@Base+0x1854>  // b.none
    2718:	ldur	x0, [x29, #-16]
    271c:	adrp	x1, 3000 <boot_Math__BigInt__FastCalc@@Base+0x212c>
    2720:	add	x1, x1, #0x695
    2724:	bl	d00 <Perl_croak_xs_usage@plt>
    2728:	ldur	x8, [x29, #-8]
    272c:	ldr	x8, [x8, #24]
    2730:	ldur	w9, [x29, #-28]
    2734:	add	w9, w9, #0x1
    2738:	mov	w0, w9
    273c:	sxtw	x10, w0
    2740:	mov	x11, #0x8                   	// #8
    2744:	mul	x10, x11, x10
    2748:	add	x8, x8, x10
    274c:	ldr	x8, [x8]
    2750:	str	x8, [sp, #56]
    2754:	ldr	x8, [sp, #56]
    2758:	ldr	x8, [x8, #16]
    275c:	str	x8, [sp, #48]
    2760:	ldur	x0, [x29, #-8]
    2764:	ldr	x1, [sp, #48]
    2768:	mov	x8, xzr
    276c:	mov	x2, x8
    2770:	mov	w9, wzr
    2774:	mov	w3, w9
    2778:	bl	d90 <Perl_av_fetch@plt>
    277c:	ldr	x8, [x0]
    2780:	str	x8, [sp, #40]
    2784:	ldur	x0, [x29, #-8]
    2788:	ldr	x8, [sp, #40]
    278c:	ldr	w9, [x8, #12]
    2790:	mov	w12, #0x100                 	// #256
    2794:	movk	w12, #0x20, lsl #16
    2798:	and	w9, w9, w12
    279c:	cmp	w9, #0x100
    27a0:	str	x0, [sp, #16]
    27a4:	b.ne	27bc <boot_Math__BigInt__FastCalc@@Base+0x18e8>  // b.any
    27a8:	ldr	x8, [sp, #40]
    27ac:	ldr	x8, [x8]
    27b0:	ldr	x8, [x8, #32]
    27b4:	str	x8, [sp, #8]
    27b8:	b	27d0 <boot_Math__BigInt__FastCalc@@Base+0x18fc>
    27bc:	ldur	x0, [x29, #-8]
    27c0:	ldr	x1, [sp, #40]
    27c4:	mov	w2, #0x2                   	// #2
    27c8:	bl	c40 <Perl_sv_2iv_flags@plt>
    27cc:	str	x0, [sp, #8]
    27d0:	ldr	x8, [sp, #8]
    27d4:	and	x8, x8, #0x1
    27d8:	ldursw	x9, [x29, #-48]
    27dc:	cmp	x8, x9
    27e0:	b.ne	27f4 <boot_Math__BigInt__FastCalc@@Base+0x1920>  // b.any
    27e4:	ldur	x8, [x29, #-8]
    27e8:	add	x8, x8, #0x138
    27ec:	str	x8, [sp]
    27f0:	b	2800 <boot_Math__BigInt__FastCalc@@Base+0x192c>
    27f4:	ldur	x8, [x29, #-8]
    27f8:	add	x8, x8, #0x168
    27fc:	str	x8, [sp]
    2800:	ldr	x8, [sp]
    2804:	ldr	x0, [sp, #16]
    2808:	mov	x1, x8
    280c:	bl	d60 <Perl_sv_2mortal@plt>
    2810:	ldur	x8, [x29, #-8]
    2814:	ldr	x8, [x8, #24]
    2818:	ldur	w9, [x29, #-28]
    281c:	add	w9, w9, #0x0
    2820:	mov	w1, w9
    2824:	sxtw	x10, w1
    2828:	mov	x11, #0x8                   	// #8
    282c:	mul	x10, x11, x10
    2830:	add	x8, x8, x10
    2834:	str	x0, [x8]
    2838:	mov	x8, #0x1                   	// #1
    283c:	str	x8, [sp, #32]
    2840:	ldur	x8, [x29, #-8]
    2844:	ldr	x8, [x8, #24]
    2848:	ldursw	x10, [x29, #-28]
    284c:	mul	x10, x11, x10
    2850:	add	x8, x8, x10
    2854:	ldur	x10, [x29, #-8]
    2858:	str	x8, [x10]
    285c:	ldp	x29, x30, [sp, #128]
    2860:	add	sp, sp, #0x90
    2864:	ret
    2868:	sub	sp, sp, #0x90
    286c:	stp	x29, x30, [sp, #128]
    2870:	add	x29, sp, #0x80
    2874:	mov	x8, #0x8                   	// #8
    2878:	stur	x0, [x29, #-8]
    287c:	stur	x1, [x29, #-16]
    2880:	ldur	x9, [x29, #-8]
    2884:	ldr	x9, [x9]
    2888:	stur	x9, [x29, #-24]
    288c:	ldur	x0, [x29, #-8]
    2890:	str	x8, [sp, #24]
    2894:	bl	33f0 <boot_Math__BigInt__FastCalc@@Base+0x251c>
    2898:	stur	w0, [x29, #-28]
    289c:	ldur	x8, [x29, #-8]
    28a0:	ldr	x8, [x8, #24]
    28a4:	ldursw	x9, [x29, #-28]
    28a8:	mov	w10, w9
    28ac:	add	w10, w10, #0x1
    28b0:	stur	w10, [x29, #-28]
    28b4:	mov	x11, #0x8                   	// #8
    28b8:	mul	x9, x11, x9
    28bc:	add	x8, x8, x9
    28c0:	stur	x8, [x29, #-40]
    28c4:	ldur	x8, [x29, #-24]
    28c8:	ldur	x9, [x29, #-40]
    28cc:	subs	x8, x8, x9
    28d0:	ldr	x9, [sp, #24]
    28d4:	sdiv	x8, x8, x9
    28d8:	stur	w8, [x29, #-44]
    28dc:	ldur	x11, [x29, #-16]
    28e0:	ldr	x11, [x11]
    28e4:	stur	x11, [x29, #-56]
    28e8:	ldur	x11, [x29, #-56]
    28ec:	str	x11, [sp, #64]
    28f0:	ldr	x11, [sp, #64]
    28f4:	ldr	w8, [x11, #40]
    28f8:	stur	w8, [x29, #-48]
    28fc:	ldur	w8, [x29, #-44]
    2900:	cmp	w8, #0x2
    2904:	b.eq	2918 <boot_Math__BigInt__FastCalc@@Base+0x1a44>  // b.none
    2908:	ldur	x0, [x29, #-16]
    290c:	adrp	x1, 3000 <boot_Math__BigInt__FastCalc@@Base+0x212c>
    2910:	add	x1, x1, #0x695
    2914:	bl	d00 <Perl_croak_xs_usage@plt>
    2918:	ldur	x8, [x29, #-8]
    291c:	ldr	x8, [x8, #24]
    2920:	ldur	w9, [x29, #-28]
    2924:	add	w9, w9, #0x1
    2928:	mov	w0, w9
    292c:	sxtw	x10, w0
    2930:	mov	x11, #0x8                   	// #8
    2934:	mul	x10, x11, x10
    2938:	add	x8, x8, x10
    293c:	ldr	x8, [x8]
    2940:	str	x8, [sp, #56]
    2944:	ldr	x8, [sp, #56]
    2948:	ldr	x8, [x8, #16]
    294c:	str	x8, [sp, #48]
    2950:	ldur	x0, [x29, #-8]
    2954:	ldr	x1, [sp, #48]
    2958:	bl	c90 <Perl_av_len@plt>
    295c:	cbz	x0, 2994 <boot_Math__BigInt__FastCalc@@Base+0x1ac0>
    2960:	ldur	x8, [x29, #-8]
    2964:	add	x8, x8, #0x168
    2968:	ldur	x9, [x29, #-8]
    296c:	ldr	x9, [x9, #24]
    2970:	ldur	w10, [x29, #-28]
    2974:	add	w10, w10, #0x0
    2978:	mov	w0, w10
    297c:	sxtw	x11, w0
    2980:	mov	x12, #0x8                   	// #8
    2984:	mul	x11, x12, x11
    2988:	add	x9, x9, x11
    298c:	str	x8, [x9]
    2990:	b	2a54 <boot_Math__BigInt__FastCalc@@Base+0x1b80>
    2994:	ldur	x0, [x29, #-8]
    2998:	ldr	x1, [sp, #48]
    299c:	mov	x8, xzr
    29a0:	mov	x2, x8
    29a4:	mov	w9, wzr
    29a8:	mov	w3, w9
    29ac:	bl	d90 <Perl_av_fetch@plt>
    29b0:	ldr	x8, [x0]
    29b4:	str	x8, [sp, #40]
    29b8:	ldr	x8, [sp, #40]
    29bc:	ldr	w9, [x8, #12]
    29c0:	mov	w10, #0x100                 	// #256
    29c4:	movk	w10, #0x20, lsl #16
    29c8:	and	w9, w9, w10
    29cc:	cmp	w9, #0x100
    29d0:	b.ne	29e8 <boot_Math__BigInt__FastCalc@@Base+0x1b14>  // b.any
    29d4:	ldr	x8, [sp, #40]
    29d8:	ldr	x8, [x8]
    29dc:	ldr	x8, [x8, #32]
    29e0:	str	x8, [sp, #16]
    29e4:	b	29fc <boot_Math__BigInt__FastCalc@@Base+0x1b28>
    29e8:	ldur	x0, [x29, #-8]
    29ec:	ldr	x1, [sp, #40]
    29f0:	mov	w2, #0x2                   	// #2
    29f4:	bl	c40 <Perl_sv_2iv_flags@plt>
    29f8:	str	x0, [sp, #16]
    29fc:	ldr	x8, [sp, #16]
    2a00:	ldursw	x9, [x29, #-48]
    2a04:	cmp	x8, x9
    2a08:	b.ne	2a1c <boot_Math__BigInt__FastCalc@@Base+0x1b48>  // b.any
    2a0c:	ldur	x8, [x29, #-8]
    2a10:	add	x8, x8, #0x138
    2a14:	str	x8, [sp, #8]
    2a18:	b	2a28 <boot_Math__BigInt__FastCalc@@Base+0x1b54>
    2a1c:	ldur	x8, [x29, #-8]
    2a20:	add	x8, x8, #0x168
    2a24:	str	x8, [sp, #8]
    2a28:	ldr	x8, [sp, #8]
    2a2c:	ldur	x9, [x29, #-8]
    2a30:	ldr	x9, [x9, #24]
    2a34:	ldur	w10, [x29, #-28]
    2a38:	add	w10, w10, #0x0
    2a3c:	mov	w0, w10
    2a40:	sxtw	x11, w0
    2a44:	mov	x12, #0x8                   	// #8
    2a48:	mul	x11, x12, x11
    2a4c:	add	x9, x9, x11
    2a50:	str	x8, [x9]
    2a54:	mov	x8, #0x1                   	// #1
    2a58:	str	x8, [sp, #32]
    2a5c:	ldur	x8, [x29, #-8]
    2a60:	ldr	x8, [x8, #24]
    2a64:	ldursw	x9, [x29, #-28]
    2a68:	mov	x10, #0x8                   	// #8
    2a6c:	mul	x9, x10, x9
    2a70:	add	x8, x8, x9
    2a74:	ldur	x9, [x29, #-8]
    2a78:	str	x8, [x9]
    2a7c:	ldp	x29, x30, [sp, #128]
    2a80:	add	sp, sp, #0x90
    2a84:	ret
    2a88:	sub	sp, sp, #0x90
    2a8c:	stp	x29, x30, [sp, #128]
    2a90:	add	x29, sp, #0x80
    2a94:	mov	x8, #0x8                   	// #8
    2a98:	adrp	x9, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1212c>
    2a9c:	ldr	x9, [x9, #4056]
    2aa0:	ldr	x9, [x9]
    2aa4:	stur	x9, [x29, #-8]
    2aa8:	stur	x0, [x29, #-24]
    2aac:	stur	x1, [x29, #-32]
    2ab0:	ldur	x9, [x29, #-24]
    2ab4:	ldr	x9, [x9]
    2ab8:	stur	x9, [x29, #-40]
    2abc:	ldur	x0, [x29, #-24]
    2ac0:	str	x8, [sp, #16]
    2ac4:	bl	33f0 <boot_Math__BigInt__FastCalc@@Base+0x251c>
    2ac8:	stur	w0, [x29, #-44]
    2acc:	ldur	x8, [x29, #-24]
    2ad0:	ldr	x8, [x8, #24]
    2ad4:	ldursw	x9, [x29, #-44]
    2ad8:	mov	w10, w9
    2adc:	add	w10, w10, #0x1
    2ae0:	stur	w10, [x29, #-44]
    2ae4:	mov	x11, #0x8                   	// #8
    2ae8:	mul	x9, x11, x9
    2aec:	add	x8, x8, x9
    2af0:	stur	x8, [x29, #-56]
    2af4:	ldur	x8, [x29, #-40]
    2af8:	ldur	x9, [x29, #-56]
    2afc:	subs	x8, x8, x9
    2b00:	ldr	x9, [sp, #16]
    2b04:	sdiv	x8, x8, x9
    2b08:	stur	w8, [x29, #-60]
    2b0c:	ldur	w8, [x29, #-60]
    2b10:	cmp	w8, #0x2
    2b14:	b.eq	2b28 <boot_Math__BigInt__FastCalc@@Base+0x1c54>  // b.none
    2b18:	ldur	x0, [x29, #-32]
    2b1c:	adrp	x1, 3000 <boot_Math__BigInt__FastCalc@@Base+0x212c>
    2b20:	add	x1, x1, #0x695
    2b24:	bl	d00 <Perl_croak_xs_usage@plt>
    2b28:	ldur	x8, [x29, #-24]
    2b2c:	ldr	x8, [x8, #24]
    2b30:	ldur	w9, [x29, #-44]
    2b34:	add	w9, w9, #0x1
    2b38:	mov	w0, w9
    2b3c:	sxtw	x10, w0
    2b40:	mov	x11, #0x8                   	// #8
    2b44:	mul	x10, x11, x10
    2b48:	add	x8, x8, x10
    2b4c:	ldr	x8, [x8]
    2b50:	str	x8, [sp, #56]
    2b54:	ldr	x8, [sp, #56]
    2b58:	ldr	x8, [x8, #16]
    2b5c:	str	x8, [sp, #48]
    2b60:	ldur	x0, [x29, #-24]
    2b64:	ldr	x1, [sp, #48]
    2b68:	bl	c90 <Perl_av_len@plt>
    2b6c:	str	x0, [sp, #32]
    2b70:	ldur	x0, [x29, #-24]
    2b74:	ldr	x1, [sp, #48]
    2b78:	ldr	x2, [sp, #32]
    2b7c:	mov	w9, wzr
    2b80:	mov	w3, w9
    2b84:	bl	d90 <Perl_av_fetch@plt>
    2b88:	ldr	x8, [x0]
    2b8c:	str	x8, [sp, #40]
    2b90:	ldr	x8, [sp, #40]
    2b94:	ldr	w9, [x8, #12]
    2b98:	mov	w12, #0x400                 	// #1024
    2b9c:	movk	w12, #0x20, lsl #16
    2ba0:	and	w9, w9, w12
    2ba4:	cmp	w9, #0x400
    2ba8:	b.ne	2bc0 <boot_Math__BigInt__FastCalc@@Base+0x1cec>  // b.any
    2bac:	ldr	x8, [sp, #40]
    2bb0:	ldr	x8, [x8]
    2bb4:	ldr	x8, [x8, #16]
    2bb8:	stur	x8, [x29, #-16]
    2bbc:	b	2bd4 <boot_Math__BigInt__FastCalc@@Base+0x1d00>
    2bc0:	ldur	x0, [x29, #-24]
    2bc4:	ldr	x1, [sp, #40]
    2bc8:	sub	x2, x29, #0x10
    2bcc:	mov	w3, #0x2                   	// #2
    2bd0:	bl	cc0 <Perl_sv_2pv_flags@plt>
    2bd4:	adrp	x8, 14000 <boot_Math__BigInt__FastCalc@@Base+0x1312c>
    2bd8:	add	x8, x8, #0xf0
    2bdc:	ldr	d0, [x8]
    2be0:	fcvtzs	x8, d0
    2be4:	ldr	x9, [sp, #32]
    2be8:	mul	x8, x8, x9
    2bec:	ldur	x9, [x29, #-16]
    2bf0:	add	x8, x9, x8
    2bf4:	stur	x8, [x29, #-16]
    2bf8:	ldur	x0, [x29, #-24]
    2bfc:	ldur	x8, [x29, #-24]
    2c00:	ldur	x1, [x29, #-16]
    2c04:	str	x0, [sp, #8]
    2c08:	mov	x0, x8
    2c0c:	bl	dc0 <Perl_newSViv@plt>
    2c10:	ldr	x8, [sp, #8]
    2c14:	str	x0, [sp]
    2c18:	mov	x0, x8
    2c1c:	ldr	x1, [sp]
    2c20:	bl	d60 <Perl_sv_2mortal@plt>
    2c24:	ldur	x8, [x29, #-24]
    2c28:	ldr	x8, [x8, #24]
    2c2c:	ldur	w10, [x29, #-44]
    2c30:	add	w10, w10, #0x0
    2c34:	mov	w1, w10
    2c38:	sxtw	x9, w1
    2c3c:	mov	x11, #0x8                   	// #8
    2c40:	mul	x9, x11, x9
    2c44:	add	x8, x8, x9
    2c48:	str	x0, [x8]
    2c4c:	mov	x8, #0x1                   	// #1
    2c50:	str	x8, [sp, #24]
    2c54:	ldur	x8, [x29, #-24]
    2c58:	ldr	x8, [x8, #24]
    2c5c:	ldursw	x9, [x29, #-44]
    2c60:	mul	x9, x11, x9
    2c64:	add	x8, x8, x9
    2c68:	ldur	x9, [x29, #-24]
    2c6c:	str	x8, [x9]
    2c70:	adrp	x8, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1212c>
    2c74:	ldr	x8, [x8, #4056]
    2c78:	ldr	x8, [x8]
    2c7c:	ldur	x9, [x29, #-8]
    2c80:	cmp	x8, x9
    2c84:	b.ne	2c94 <boot_Math__BigInt__FastCalc@@Base+0x1dc0>  // b.any
    2c88:	ldp	x29, x30, [sp, #128]
    2c8c:	add	sp, sp, #0x90
    2c90:	ret
    2c94:	bl	ce0 <__stack_chk_fail@plt>
    2c98:	sub	sp, sp, #0x1b0
    2c9c:	stp	x29, x30, [sp, #400]
    2ca0:	str	x28, [sp, #416]
    2ca4:	add	x29, sp, #0x190
    2ca8:	mov	x8, #0x8                   	// #8
    2cac:	adrp	x9, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1212c>
    2cb0:	ldr	x9, [x9, #4056]
    2cb4:	ldr	x9, [x9]
    2cb8:	stur	x9, [x29, #-8]
    2cbc:	stur	x0, [x29, #-32]
    2cc0:	stur	x1, [x29, #-40]
    2cc4:	ldur	x9, [x29, #-32]
    2cc8:	ldr	x9, [x9]
    2ccc:	stur	x9, [x29, #-48]
    2cd0:	ldur	x0, [x29, #-32]
    2cd4:	str	x8, [sp, #176]
    2cd8:	bl	33f0 <boot_Math__BigInt__FastCalc@@Base+0x251c>
    2cdc:	stur	w0, [x29, #-52]
    2ce0:	ldur	x8, [x29, #-32]
    2ce4:	ldr	x8, [x8, #24]
    2ce8:	ldursw	x9, [x29, #-52]
    2cec:	mov	w10, w9
    2cf0:	add	w10, w10, #0x1
    2cf4:	stur	w10, [x29, #-52]
    2cf8:	mov	x11, #0x8                   	// #8
    2cfc:	mul	x9, x11, x9
    2d00:	add	x8, x8, x9
    2d04:	stur	x8, [x29, #-64]
    2d08:	ldur	x8, [x29, #-48]
    2d0c:	ldur	x9, [x29, #-64]
    2d10:	subs	x8, x8, x9
    2d14:	ldr	x9, [sp, #176]
    2d18:	sdiv	x8, x8, x9
    2d1c:	stur	w8, [x29, #-68]
    2d20:	ldur	w8, [x29, #-68]
    2d24:	cmp	w8, #0x3
    2d28:	b.eq	2d3c <boot_Math__BigInt__FastCalc@@Base+0x1e68>  // b.none
    2d2c:	ldur	x0, [x29, #-40]
    2d30:	adrp	x1, 3000 <boot_Math__BigInt__FastCalc@@Base+0x212c>
    2d34:	add	x1, x1, #0x6a4
    2d38:	bl	d00 <Perl_croak_xs_usage@plt>
    2d3c:	ldur	x8, [x29, #-32]
    2d40:	ldr	x8, [x8, #24]
    2d44:	ldur	w9, [x29, #-52]
    2d48:	add	w9, w9, #0x1
    2d4c:	mov	w0, w9
    2d50:	sxtw	x10, w0
    2d54:	mov	x11, #0x8                   	// #8
    2d58:	mul	x10, x11, x10
    2d5c:	add	x8, x8, x10
    2d60:	ldr	x8, [x8]
    2d64:	stur	x8, [x29, #-80]
    2d68:	ldur	x8, [x29, #-32]
    2d6c:	ldr	x8, [x8, #24]
    2d70:	ldur	w9, [x29, #-52]
    2d74:	add	w9, w9, #0x2
    2d78:	mov	w0, w9
    2d7c:	sxtw	x10, w0
    2d80:	mul	x10, x11, x10
    2d84:	add	x8, x8, x10
    2d88:	ldr	x8, [x8]
    2d8c:	stur	x8, [x29, #-88]
    2d90:	ldur	x8, [x29, #-80]
    2d94:	ldr	x8, [x8, #16]
    2d98:	stur	x8, [x29, #-96]
    2d9c:	ldur	x8, [x29, #-88]
    2da0:	ldr	x8, [x8, #16]
    2da4:	stur	x8, [x29, #-104]
    2da8:	ldur	x0, [x29, #-32]
    2dac:	ldur	x1, [x29, #-96]
    2db0:	bl	c90 <Perl_av_len@plt>
    2db4:	stur	x0, [x29, #-112]
    2db8:	ldur	x0, [x29, #-32]
    2dbc:	ldur	x1, [x29, #-104]
    2dc0:	bl	c90 <Perl_av_len@plt>
    2dc4:	stur	x0, [x29, #-120]
    2dc8:	ldur	x8, [x29, #-112]
    2dcc:	ldur	x10, [x29, #-120]
    2dd0:	subs	x8, x8, x10
    2dd4:	stur	x8, [x29, #-128]
    2dd8:	ldur	x8, [x29, #-128]
    2ddc:	cmp	x8, #0x0
    2de0:	cset	w9, le
    2de4:	tbnz	w9, #0, 2e6c <boot_Math__BigInt__FastCalc@@Base+0x1f98>
    2de8:	ldur	x0, [x29, #-32]
    2dec:	ldur	x8, [x29, #-32]
    2df0:	str	x0, [sp, #168]
    2df4:	mov	x0, x8
    2df8:	mov	x8, #0x1                   	// #1
    2dfc:	mov	x1, x8
    2e00:	str	x8, [sp, #160]
    2e04:	bl	dc0 <Perl_newSViv@plt>
    2e08:	ldr	x8, [sp, #168]
    2e0c:	str	x0, [sp, #152]
    2e10:	mov	x0, x8
    2e14:	ldr	x1, [sp, #152]
    2e18:	bl	d60 <Perl_sv_2mortal@plt>
    2e1c:	ldur	x8, [x29, #-32]
    2e20:	ldr	x8, [x8, #24]
    2e24:	ldur	w9, [x29, #-52]
    2e28:	add	w9, w9, #0x0
    2e2c:	mov	w1, w9
    2e30:	sxtw	x10, w1
    2e34:	mov	x11, #0x8                   	// #8
    2e38:	mul	x10, x11, x10
    2e3c:	add	x8, x8, x10
    2e40:	str	x0, [x8]
    2e44:	ldr	x8, [sp, #160]
    2e48:	stur	x8, [x29, #-168]
    2e4c:	ldur	x10, [x29, #-32]
    2e50:	ldr	x10, [x10, #24]
    2e54:	ldursw	x12, [x29, #-52]
    2e58:	mul	x11, x11, x12
    2e5c:	add	x10, x10, x11
    2e60:	ldur	x11, [x29, #-32]
    2e64:	str	x10, [x11]
    2e68:	b	33c4 <boot_Math__BigInt__FastCalc@@Base+0x24f0>
    2e6c:	ldur	x8, [x29, #-128]
    2e70:	cmp	x8, #0x0
    2e74:	cset	w9, ge  // ge = tcont
    2e78:	tbnz	w9, #0, 2ef8 <boot_Math__BigInt__FastCalc@@Base+0x2024>
    2e7c:	ldur	x0, [x29, #-32]
    2e80:	ldur	x8, [x29, #-32]
    2e84:	str	x0, [sp, #144]
    2e88:	mov	x0, x8
    2e8c:	mov	x1, #0xffffffffffffffff    	// #-1
    2e90:	bl	dc0 <Perl_newSViv@plt>
    2e94:	ldr	x8, [sp, #144]
    2e98:	str	x0, [sp, #136]
    2e9c:	mov	x0, x8
    2ea0:	ldr	x1, [sp, #136]
    2ea4:	bl	d60 <Perl_sv_2mortal@plt>
    2ea8:	ldur	x8, [x29, #-32]
    2eac:	ldr	x8, [x8, #24]
    2eb0:	ldur	w9, [x29, #-52]
    2eb4:	add	w9, w9, #0x0
    2eb8:	mov	w1, w9
    2ebc:	sxtw	x10, w1
    2ec0:	mov	x11, #0x8                   	// #8
    2ec4:	mul	x10, x11, x10
    2ec8:	add	x8, x8, x10
    2ecc:	str	x0, [x8]
    2ed0:	mov	x8, #0x1                   	// #1
    2ed4:	stur	x8, [x29, #-176]
    2ed8:	ldur	x8, [x29, #-32]
    2edc:	ldr	x8, [x8, #24]
    2ee0:	ldursw	x10, [x29, #-52]
    2ee4:	mul	x10, x11, x10
    2ee8:	add	x8, x8, x10
    2eec:	ldur	x10, [x29, #-32]
    2ef0:	str	x8, [x10]
    2ef4:	b	33c4 <boot_Math__BigInt__FastCalc@@Base+0x24f0>
    2ef8:	ldur	x0, [x29, #-32]
    2efc:	ldur	x1, [x29, #-96]
    2f00:	ldur	x2, [x29, #-112]
    2f04:	mov	w8, wzr
    2f08:	mov	w3, w8
    2f0c:	str	w8, [sp, #132]
    2f10:	bl	d90 <Perl_av_fetch@plt>
    2f14:	ldr	x9, [x0]
    2f18:	stur	x9, [x29, #-136]
    2f1c:	ldur	x0, [x29, #-32]
    2f20:	ldur	x1, [x29, #-104]
    2f24:	ldur	x2, [x29, #-112]
    2f28:	ldr	w3, [sp, #132]
    2f2c:	bl	d90 <Perl_av_fetch@plt>
    2f30:	ldr	x9, [x0]
    2f34:	stur	x9, [x29, #-144]
    2f38:	ldur	x9, [x29, #-136]
    2f3c:	ldr	w8, [x9, #12]
    2f40:	mov	w10, #0x400                 	// #1024
    2f44:	movk	w10, #0x20, lsl #16
    2f48:	and	w8, w8, w10
    2f4c:	cmp	w8, #0x400
    2f50:	b.ne	2f68 <boot_Math__BigInt__FastCalc@@Base+0x2094>  // b.any
    2f54:	ldur	x8, [x29, #-136]
    2f58:	ldr	x8, [x8]
    2f5c:	ldr	x8, [x8, #16]
    2f60:	stur	x8, [x29, #-16]
    2f64:	b	2f7c <boot_Math__BigInt__FastCalc@@Base+0x20a8>
    2f68:	ldur	x0, [x29, #-32]
    2f6c:	ldur	x1, [x29, #-136]
    2f70:	sub	x2, x29, #0x10
    2f74:	mov	w3, #0x2                   	// #2
    2f78:	bl	cc0 <Perl_sv_2pv_flags@plt>
    2f7c:	ldur	x8, [x29, #-144]
    2f80:	ldr	w9, [x8, #12]
    2f84:	mov	w10, #0x400                 	// #1024
    2f88:	movk	w10, #0x20, lsl #16
    2f8c:	and	w9, w9, w10
    2f90:	cmp	w9, #0x400
    2f94:	b.ne	2fac <boot_Math__BigInt__FastCalc@@Base+0x20d8>  // b.any
    2f98:	ldur	x8, [x29, #-144]
    2f9c:	ldr	x8, [x8]
    2fa0:	ldr	x8, [x8, #16]
    2fa4:	stur	x8, [x29, #-24]
    2fa8:	b	2fc0 <boot_Math__BigInt__FastCalc@@Base+0x20ec>
    2fac:	ldur	x0, [x29, #-32]
    2fb0:	ldur	x1, [x29, #-144]
    2fb4:	sub	x2, x29, #0x18
    2fb8:	mov	w3, #0x2                   	// #2
    2fbc:	bl	cc0 <Perl_sv_2pv_flags@plt>
    2fc0:	ldur	x8, [x29, #-16]
    2fc4:	ldur	x9, [x29, #-24]
    2fc8:	subs	x8, x8, x9
    2fcc:	stur	x8, [x29, #-160]
    2fd0:	ldur	x8, [x29, #-160]
    2fd4:	cmp	x8, #0x0
    2fd8:	cset	w10, le
    2fdc:	tbnz	w10, #0, 3064 <boot_Math__BigInt__FastCalc@@Base+0x2190>
    2fe0:	ldur	x0, [x29, #-32]
    2fe4:	ldur	x8, [x29, #-32]
    2fe8:	str	x0, [sp, #120]
    2fec:	mov	x0, x8
    2ff0:	mov	x8, #0x1                   	// #1
    2ff4:	mov	x1, x8
    2ff8:	str	x8, [sp, #112]
    2ffc:	bl	dc0 <Perl_newSViv@plt>
    3000:	ldr	x8, [sp, #120]
    3004:	str	x0, [sp, #104]
    3008:	mov	x0, x8
    300c:	ldr	x1, [sp, #104]
    3010:	bl	d60 <Perl_sv_2mortal@plt>
    3014:	ldur	x8, [x29, #-32]
    3018:	ldr	x8, [x8, #24]
    301c:	ldur	w9, [x29, #-52]
    3020:	add	w9, w9, #0x0
    3024:	mov	w1, w9
    3028:	sxtw	x10, w1
    302c:	mov	x11, #0x8                   	// #8
    3030:	mul	x10, x11, x10
    3034:	add	x8, x8, x10
    3038:	str	x0, [x8]
    303c:	ldr	x8, [sp, #112]
    3040:	stur	x8, [x29, #-184]
    3044:	ldur	x10, [x29, #-32]
    3048:	ldr	x10, [x10, #24]
    304c:	ldursw	x12, [x29, #-52]
    3050:	mul	x11, x11, x12
    3054:	add	x10, x10, x11
    3058:	ldur	x11, [x29, #-32]
    305c:	str	x10, [x11]
    3060:	b	33c4 <boot_Math__BigInt__FastCalc@@Base+0x24f0>
    3064:	ldur	x8, [x29, #-160]
    3068:	cmp	x8, #0x0
    306c:	cset	w9, ge  // ge = tcont
    3070:	tbnz	w9, #0, 30f0 <boot_Math__BigInt__FastCalc@@Base+0x221c>
    3074:	ldur	x0, [x29, #-32]
    3078:	ldur	x8, [x29, #-32]
    307c:	str	x0, [sp, #96]
    3080:	mov	x0, x8
    3084:	mov	x1, #0xffffffffffffffff    	// #-1
    3088:	bl	dc0 <Perl_newSViv@plt>
    308c:	ldr	x8, [sp, #96]
    3090:	str	x0, [sp, #88]
    3094:	mov	x0, x8
    3098:	ldr	x1, [sp, #88]
    309c:	bl	d60 <Perl_sv_2mortal@plt>
    30a0:	ldur	x8, [x29, #-32]
    30a4:	ldr	x8, [x8, #24]
    30a8:	ldur	w9, [x29, #-52]
    30ac:	add	w9, w9, #0x0
    30b0:	mov	w1, w9
    30b4:	sxtw	x10, w1
    30b8:	mov	x11, #0x8                   	// #8
    30bc:	mul	x10, x11, x10
    30c0:	add	x8, x8, x10
    30c4:	str	x0, [x8]
    30c8:	mov	x8, #0x1                   	// #1
    30cc:	stur	x8, [x29, #-192]
    30d0:	ldur	x8, [x29, #-32]
    30d4:	ldr	x8, [x8, #24]
    30d8:	ldursw	x10, [x29, #-52]
    30dc:	mul	x10, x11, x10
    30e0:	add	x8, x8, x10
    30e4:	ldur	x10, [x29, #-32]
    30e8:	str	x8, [x10]
    30ec:	b	33c4 <boot_Math__BigInt__FastCalc@@Base+0x24f0>
    30f0:	fmov	d0, xzr
    30f4:	stur	d0, [x29, #-152]
    30f8:	ldur	x8, [x29, #-112]
    30fc:	cmp	x8, #0x0
    3100:	cset	w9, lt  // lt = tstop
    3104:	tbnz	w9, #0, 3220 <boot_Math__BigInt__FastCalc@@Base+0x234c>
    3108:	ldur	x0, [x29, #-32]
    310c:	ldur	x1, [x29, #-96]
    3110:	ldur	x2, [x29, #-112]
    3114:	mov	w8, wzr
    3118:	mov	w3, w8
    311c:	str	w8, [sp, #84]
    3120:	bl	d90 <Perl_av_fetch@plt>
    3124:	ldr	x9, [x0]
    3128:	stur	x9, [x29, #-136]
    312c:	ldur	x0, [x29, #-32]
    3130:	ldur	x1, [x29, #-104]
    3134:	ldur	x2, [x29, #-112]
    3138:	ldr	w3, [sp, #84]
    313c:	bl	d90 <Perl_av_fetch@plt>
    3140:	ldr	x9, [x0]
    3144:	stur	x9, [x29, #-144]
    3148:	ldur	x9, [x29, #-136]
    314c:	ldr	w8, [x9, #12]
    3150:	mov	w10, #0x200                 	// #512
    3154:	movk	w10, #0x20, lsl #16
    3158:	and	w8, w8, w10
    315c:	cmp	w8, #0x200
    3160:	b.ne	3178 <boot_Math__BigInt__FastCalc@@Base+0x22a4>  // b.any
    3164:	ldur	x8, [x29, #-136]
    3168:	ldr	x8, [x8]
    316c:	ldr	x8, [x8, #40]
    3170:	str	x8, [sp, #72]
    3174:	b	3190 <boot_Math__BigInt__FastCalc@@Base+0x22bc>
    3178:	ldur	x0, [x29, #-32]
    317c:	ldur	x1, [x29, #-136]
    3180:	mov	w2, #0x2                   	// #2
    3184:	bl	d10 <Perl_sv_2nv_flags@plt>
    3188:	fmov	x8, d0
    318c:	str	x8, [sp, #72]
    3190:	ldr	x8, [sp, #72]
    3194:	ldur	x9, [x29, #-144]
    3198:	ldr	w10, [x9, #12]
    319c:	mov	w11, #0x200                 	// #512
    31a0:	movk	w11, #0x20, lsl #16
    31a4:	and	w10, w10, w11
    31a8:	cmp	w10, #0x200
    31ac:	str	x8, [sp, #64]
    31b0:	b.ne	31c8 <boot_Math__BigInt__FastCalc@@Base+0x22f4>  // b.any
    31b4:	ldur	x8, [x29, #-144]
    31b8:	ldr	x8, [x8]
    31bc:	ldr	x8, [x8, #40]
    31c0:	str	x8, [sp, #56]
    31c4:	b	31e0 <boot_Math__BigInt__FastCalc@@Base+0x230c>
    31c8:	ldur	x0, [x29, #-32]
    31cc:	ldur	x1, [x29, #-144]
    31d0:	mov	w2, #0x2                   	// #2
    31d4:	bl	d10 <Perl_sv_2nv_flags@plt>
    31d8:	fmov	x8, d0
    31dc:	str	x8, [sp, #56]
    31e0:	ldr	x8, [sp, #56]
    31e4:	ldr	x9, [sp, #64]
    31e8:	fmov	d0, x9
    31ec:	fmov	d1, x8
    31f0:	fsub	d0, d0, d1
    31f4:	stur	d0, [x29, #-152]
    31f8:	ldur	d0, [x29, #-152]
    31fc:	fcmp	d0, #0.0
    3200:	cset	w10, ne  // ne = any
    3204:	tbnz	w10, #0, 320c <boot_Math__BigInt__FastCalc@@Base+0x2338>
    3208:	b	3210 <boot_Math__BigInt__FastCalc@@Base+0x233c>
    320c:	b	3220 <boot_Math__BigInt__FastCalc@@Base+0x234c>
    3210:	ldur	x8, [x29, #-112]
    3214:	subs	x8, x8, #0x1
    3218:	stur	x8, [x29, #-112]
    321c:	b	30f8 <boot_Math__BigInt__FastCalc@@Base+0x2224>
    3220:	ldur	d0, [x29, #-152]
    3224:	fcmp	d0, #0.0
    3228:	cset	w8, gt
    322c:	tbnz	w8, #0, 3234 <boot_Math__BigInt__FastCalc@@Base+0x2360>
    3230:	b	32b8 <boot_Math__BigInt__FastCalc@@Base+0x23e4>
    3234:	ldur	x0, [x29, #-32]
    3238:	ldur	x8, [x29, #-32]
    323c:	str	x0, [sp, #48]
    3240:	mov	x0, x8
    3244:	mov	x8, #0x1                   	// #1
    3248:	mov	x1, x8
    324c:	str	x8, [sp, #40]
    3250:	bl	dc0 <Perl_newSViv@plt>
    3254:	ldr	x8, [sp, #48]
    3258:	str	x0, [sp, #32]
    325c:	mov	x0, x8
    3260:	ldr	x1, [sp, #32]
    3264:	bl	d60 <Perl_sv_2mortal@plt>
    3268:	ldur	x8, [x29, #-32]
    326c:	ldr	x8, [x8, #24]
    3270:	ldur	w9, [x29, #-52]
    3274:	add	w9, w9, #0x0
    3278:	mov	w1, w9
    327c:	sxtw	x10, w1
    3280:	mov	x11, #0x8                   	// #8
    3284:	mul	x10, x11, x10
    3288:	add	x8, x8, x10
    328c:	str	x0, [x8]
    3290:	ldr	x8, [sp, #40]
    3294:	str	x8, [sp, #200]
    3298:	ldur	x10, [x29, #-32]
    329c:	ldr	x10, [x10, #24]
    32a0:	ldursw	x12, [x29, #-52]
    32a4:	mul	x11, x11, x12
    32a8:	add	x10, x10, x11
    32ac:	ldur	x11, [x29, #-32]
    32b0:	str	x10, [x11]
    32b4:	b	33c4 <boot_Math__BigInt__FastCalc@@Base+0x24f0>
    32b8:	ldur	d0, [x29, #-152]
    32bc:	fcmp	d0, #0.0
    32c0:	cset	w8, mi  // mi = first
    32c4:	tbnz	w8, #0, 32cc <boot_Math__BigInt__FastCalc@@Base+0x23f8>
    32c8:	b	3348 <boot_Math__BigInt__FastCalc@@Base+0x2474>
    32cc:	ldur	x0, [x29, #-32]
    32d0:	ldur	x8, [x29, #-32]
    32d4:	str	x0, [sp, #24]
    32d8:	mov	x0, x8
    32dc:	mov	x1, #0xffffffffffffffff    	// #-1
    32e0:	bl	dc0 <Perl_newSViv@plt>
    32e4:	ldr	x8, [sp, #24]
    32e8:	str	x0, [sp, #16]
    32ec:	mov	x0, x8
    32f0:	ldr	x1, [sp, #16]
    32f4:	bl	d60 <Perl_sv_2mortal@plt>
    32f8:	ldur	x8, [x29, #-32]
    32fc:	ldr	x8, [x8, #24]
    3300:	ldur	w9, [x29, #-52]
    3304:	add	w9, w9, #0x0
    3308:	mov	w1, w9
    330c:	sxtw	x10, w1
    3310:	mov	x11, #0x8                   	// #8
    3314:	mul	x10, x11, x10
    3318:	add	x8, x8, x10
    331c:	str	x0, [x8]
    3320:	mov	x8, #0x1                   	// #1
    3324:	str	x8, [sp, #192]
    3328:	ldur	x8, [x29, #-32]
    332c:	ldr	x8, [x8, #24]
    3330:	ldursw	x10, [x29, #-52]
    3334:	mul	x10, x11, x10
    3338:	add	x8, x8, x10
    333c:	ldur	x10, [x29, #-32]
    3340:	str	x8, [x10]
    3344:	b	33c4 <boot_Math__BigInt__FastCalc@@Base+0x24f0>
    3348:	ldur	x0, [x29, #-32]
    334c:	ldur	x8, [x29, #-32]
    3350:	str	x0, [sp, #8]
    3354:	mov	x0, x8
    3358:	mov	x8, xzr
    335c:	mov	x1, x8
    3360:	bl	dc0 <Perl_newSViv@plt>
    3364:	ldr	x8, [sp, #8]
    3368:	str	x0, [sp]
    336c:	mov	x0, x8
    3370:	ldr	x1, [sp]
    3374:	bl	d60 <Perl_sv_2mortal@plt>
    3378:	ldur	x8, [x29, #-32]
    337c:	ldr	x8, [x8, #24]
    3380:	ldur	w9, [x29, #-52]
    3384:	add	w9, w9, #0x0
    3388:	mov	w1, w9
    338c:	sxtw	x10, w1
    3390:	mov	x11, #0x8                   	// #8
    3394:	mul	x10, x11, x10
    3398:	add	x8, x8, x10
    339c:	str	x0, [x8]
    33a0:	mov	x8, #0x1                   	// #1
    33a4:	str	x8, [sp, #184]
    33a8:	ldur	x8, [x29, #-32]
    33ac:	ldr	x8, [x8, #24]
    33b0:	ldursw	x10, [x29, #-52]
    33b4:	mul	x10, x11, x10
    33b8:	add	x8, x8, x10
    33bc:	ldur	x10, [x29, #-32]
    33c0:	str	x8, [x10]
    33c4:	adrp	x8, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1212c>
    33c8:	ldr	x8, [x8, #4056]
    33cc:	ldr	x8, [x8]
    33d0:	ldur	x9, [x29, #-8]
    33d4:	cmp	x8, x9
    33d8:	b.ne	33ec <boot_Math__BigInt__FastCalc@@Base+0x2518>  // b.any
    33dc:	ldr	x28, [sp, #416]
    33e0:	ldp	x29, x30, [sp, #400]
    33e4:	add	sp, sp, #0x1b0
    33e8:	ret
    33ec:	bl	ce0 <__stack_chk_fail@plt>
    33f0:	sub	sp, sp, #0x10
    33f4:	str	x0, [sp, #8]
    33f8:	ldr	x8, [sp, #8]
    33fc:	ldr	x9, [x8, #120]
    3400:	mov	x10, #0xfffffffffffffffc    	// #-4
    3404:	add	x10, x9, x10
    3408:	str	x10, [x8, #120]
    340c:	ldr	w0, [x9]
    3410:	add	sp, sp, #0x10
    3414:	ret

Disassembly of section .fini:

0000000000003418 <.fini>:
    3418:	stp	x29, x30, [sp, #-16]!
    341c:	mov	x29, sp
    3420:	ldp	x29, x30, [sp], #16
    3424:	ret
