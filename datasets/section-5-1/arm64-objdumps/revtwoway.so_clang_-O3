
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//revtwoway.so_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000630 <.init>:
 630:	stp	x29, x30, [sp, #-16]!
 634:	mov	x29, sp
 638:	bl	6e0 <fprintf@plt+0x10>
 63c:	ldp	x29, x30, [sp], #16
 640:	ret

Disassembly of section .plt:

0000000000000650 <exit@plt-0x20>:
 650:	stp	x16, x30, [sp, #-16]!
 654:	adrp	x16, 11000 <dl_load@@Base+0x1084c>
 658:	ldr	x17, [x16, #4088]
 65c:	add	x16, x16, #0xff8
 660:	br	x17
 664:	nop
 668:	nop
 66c:	nop

0000000000000670 <exit@plt>:
 670:	adrp	x16, 12000 <exit@GLIBC_2.17>
 674:	ldr	x17, [x16]
 678:	add	x16, x16, #0x0
 67c:	br	x17

0000000000000680 <__cxa_finalize@plt>:
 680:	adrp	x16, 12000 <exit@GLIBC_2.17>
 684:	ldr	x17, [x16, #8]
 688:	add	x16, x16, #0x8
 68c:	br	x17

0000000000000690 <__gmon_start__@plt>:
 690:	adrp	x16, 12000 <exit@GLIBC_2.17>
 694:	ldr	x17, [x16, #16]
 698:	add	x16, x16, #0x10
 69c:	br	x17

00000000000006a0 <strcmp@plt>:
 6a0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 6a4:	ldr	x17, [x16, #24]
 6a8:	add	x16, x16, #0x18
 6ac:	br	x17

00000000000006b0 <fwrite@plt>:
 6b0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 6b4:	ldr	x17, [x16, #32]
 6b8:	add	x16, x16, #0x20
 6bc:	br	x17

00000000000006c0 <getdtablesize@plt>:
 6c0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 6c4:	ldr	x17, [x16, #40]
 6c8:	add	x16, x16, #0x28
 6cc:	br	x17

00000000000006d0 <fprintf@plt>:
 6d0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 6d4:	ldr	x17, [x16, #48]
 6d8:	add	x16, x16, #0x30
 6dc:	br	x17

Disassembly of section .text:

00000000000006e0 <dl_load@@Base-0xd4>:
 6e0:	adrp	x0, 11000 <dl_load@@Base+0x1084c>
 6e4:	ldr	x0, [x0, #4056]
 6e8:	cbz	x0, 6f0 <fprintf@plt+0x20>
 6ec:	b	690 <__gmon_start__@plt>
 6f0:	ret
 6f4:	nop
 6f8:	adrp	x0, 12000 <dl_load@@Base+0x1184c>
 6fc:	add	x0, x0, #0x60
 700:	adrp	x1, 12000 <dl_load@@Base+0x1184c>
 704:	add	x1, x1, #0x60
 708:	cmp	x1, x0
 70c:	b.eq	724 <fprintf@plt+0x54>  // b.none
 710:	adrp	x1, 11000 <dl_load@@Base+0x1084c>
 714:	ldr	x1, [x1, #4032]
 718:	cbz	x1, 724 <fprintf@plt+0x54>
 71c:	mov	x16, x1
 720:	br	x16
 724:	ret
 728:	adrp	x0, 12000 <dl_load@@Base+0x1184c>
 72c:	add	x0, x0, #0x60
 730:	adrp	x1, 12000 <dl_load@@Base+0x1184c>
 734:	add	x1, x1, #0x60
 738:	sub	x1, x1, x0
 73c:	lsr	x2, x1, #63
 740:	add	x1, x2, x1, asr #3
 744:	cmp	xzr, x1, asr #1
 748:	asr	x1, x1, #1
 74c:	b.eq	764 <fprintf@plt+0x94>  // b.none
 750:	adrp	x2, 11000 <dl_load@@Base+0x1084c>
 754:	ldr	x2, [x2, #4064]
 758:	cbz	x2, 764 <fprintf@plt+0x94>
 75c:	mov	x16, x2
 760:	br	x16
 764:	ret
 768:	stp	x29, x30, [sp, #-32]!
 76c:	mov	x29, sp
 770:	str	x19, [sp, #16]
 774:	adrp	x19, 12000 <dl_load@@Base+0x1184c>
 778:	ldrb	w0, [x19, #96]
 77c:	cbnz	w0, 7a4 <fprintf@plt+0xd4>
 780:	adrp	x0, 11000 <dl_load@@Base+0x1084c>
 784:	ldr	x0, [x0, #4040]
 788:	cbz	x0, 798 <fprintf@plt+0xc8>
 78c:	adrp	x0, 12000 <dl_load@@Base+0x1184c>
 790:	ldr	x0, [x0, #56]
 794:	bl	680 <__cxa_finalize@plt>
 798:	bl	6f8 <fprintf@plt+0x28>
 79c:	mov	w0, #0x1                   	// #1
 7a0:	strb	w0, [x19, #96]
 7a4:	ldr	x19, [sp, #16]
 7a8:	ldp	x29, x30, [sp], #32
 7ac:	ret
 7b0:	b	728 <fprintf@plt+0x58>

00000000000007b4 <dl_load@@Base>:
 7b4:	stp	x29, x30, [sp, #-32]!
 7b8:	stp	x20, x19, [sp, #16]
 7bc:	adrp	x20, 12000 <dl_load@@Base+0x1184c>
 7c0:	add	x20, x20, #0x68
 7c4:	stp	x0, x1, [x20]
 7c8:	ldr	w8, [x0]
 7cc:	mov	x29, sp
 7d0:	cmp	w8, #0x2
 7d4:	b.ne	878 <dl_load@@Base+0xc4>  // b.any
 7d8:	ldr	w8, [x0, #4]
 7dc:	tbnz	w8, #31, 878 <dl_load@@Base+0xc4>
 7e0:	adrp	x8, 12000 <dl_load@@Base+0x1184c>
 7e4:	ldr	x8, [x8, #128]
 7e8:	cbz	x8, 810 <dl_load@@Base+0x5c>
 7ec:	ldr	x9, [x0, #48]
 7f0:	adrp	x8, 0 <exit@plt-0x670>
 7f4:	add	x8, x8, #0xd47
 7f8:	adrp	x2, 12000 <dl_load@@Base+0x1184c>
 7fc:	add	x2, x2, #0x80
 800:	mov	x0, x1
 804:	mov	x1, x8
 808:	blr	x9
 80c:	cbz	w0, 818 <dl_load@@Base+0x64>
 810:	mov	w19, #0x1                   	// #1
 814:	b	834 <dl_load@@Base+0x80>
 818:	ldp	x8, x0, [x20]
 81c:	ldr	x2, [x20, #24]
 820:	adrp	x1, 0 <exit@plt-0x670>
 824:	add	x1, x1, #0xd7b
 828:	ldr	x8, [x8, #104]
 82c:	blr	x8
 830:	mov	w19, wzr
 834:	ldp	x8, x0, [x20]
 838:	adrp	x1, 12000 <dl_load@@Base+0x1184c>
 83c:	add	x1, x1, #0x40
 840:	ldr	x8, [x8, #72]
 844:	blr	x8
 848:	bl	6c0 <getdtablesize@plt>
 84c:	sxtw	x9, w0
 850:	ldp	x8, x0, [x20]
 854:	str	x9, [x20, #16]
 858:	adrp	x1, 0 <exit@plt-0x670>
 85c:	add	x1, x1, #0xe15
 860:	ldr	x8, [x8, #88]
 864:	blr	x8
 868:	mov	w0, w19
 86c:	ldp	x20, x19, [sp, #16]
 870:	ldp	x29, x30, [sp], #32
 874:	ret
 878:	adrp	x19, 11000 <dl_load@@Base+0x1084c>
 87c:	ldr	x19, [x19, #4048]
 880:	adrp	x0, 0 <exit@plt-0x670>
 884:	add	x0, x0, #0xd20
 888:	mov	w1, #0x27                  	// #39
 88c:	ldr	x3, [x19]
 890:	mov	w2, #0x1                   	// #1
 894:	bl	6b0 <fwrite@plt>
 898:	adrp	x8, 12000 <dl_load@@Base+0x1184c>
 89c:	ldr	x8, [x8, #104]
 8a0:	ldr	x0, [x19]
 8a4:	adrp	x1, 0 <exit@plt-0x670>
 8a8:	add	x1, x1, #0xd48
 8ac:	ldp	w4, w5, [x8]
 8b0:	mov	w2, #0x2                   	// #2
 8b4:	mov	w3, wzr
 8b8:	bl	6d0 <fprintf@plt>
 8bc:	mov	w0, #0x1                   	// #1
 8c0:	bl	670 <exit@plt>
 8c4:	cbz	x0, 8e8 <dl_load@@Base+0x134>
 8c8:	stp	x29, x30, [sp, #-16]!
 8cc:	adrp	x1, 0 <exit@plt-0x670>
 8d0:	add	x1, x1, #0xda1
 8d4:	mov	x29, sp
 8d8:	bl	6a0 <strcmp@plt>
 8dc:	cmp	w0, #0x0
 8e0:	cset	w0, eq  // eq = none
 8e4:	ldp	x29, x30, [sp], #16
 8e8:	ret
 8ec:	stp	x29, x30, [sp, #-48]!
 8f0:	mov	w0, wzr
 8f4:	stp	x22, x21, [sp, #16]
 8f8:	stp	x20, x19, [sp, #32]
 8fc:	mov	x29, sp
 900:	cbz	x1, 9d8 <dl_load@@Base+0x224>
 904:	mov	x19, x2
 908:	cbz	x2, 9d8 <dl_load@@Base+0x224>
 90c:	adrp	x8, 12000 <dl_load@@Base+0x1184c>
 910:	ldr	x8, [x8, #104]
 914:	mov	w0, #0x20                  	// #32
 918:	mov	x20, x1
 91c:	ldr	x8, [x8, #280]
 920:	blr	x8
 924:	mov	x21, x0
 928:	cbnz	x0, 954 <dl_load@@Base+0x1a0>
 92c:	adrp	x8, 12000 <dl_load@@Base+0x1184c>
 930:	add	x8, x8, #0x68
 934:	ldp	x9, x0, [x8]
 938:	adrp	x1, 0 <exit@plt-0x670>
 93c:	adrp	x2, 0 <exit@plt-0x670>
 940:	add	x1, x1, #0xdaf
 944:	ldr	x8, [x9, #96]
 948:	add	x2, x2, #0xdcd
 94c:	mov	w3, #0x20                  	// #32
 950:	blr	x8
 954:	mov	w8, #0x2                   	// #2
 958:	stp	xzr, xzr, [x21]
 95c:	stp	xzr, x8, [x21, #16]
 960:	adrp	x22, 12000 <dl_load@@Base+0x1184c>
 964:	ldr	x8, [x22, #120]
 968:	cmn	x8, #0x1
 96c:	b.ne	97c <dl_load@@Base+0x1c8>  // b.any
 970:	bl	6c0 <getdtablesize@plt>
 974:	sxtw	x8, w0
 978:	str	x8, [x22, #120]
 97c:	adrp	x9, 0 <exit@plt-0x670>
 980:	adrp	x10, 0 <exit@plt-0x670>
 984:	add	x9, x9, #0x9e8
 988:	add	x10, x10, #0xa78
 98c:	add	x11, x8, #0x1
 990:	str	w8, [x20, #8]
 994:	str	x10, [x20, #40]
 998:	adrp	x10, 0 <exit@plt-0x670>
 99c:	stp	x21, x9, [x20, #16]
 9a0:	adrp	x9, 0 <exit@plt-0x670>
 9a4:	str	x11, [x22, #120]
 9a8:	adrp	x11, 0 <exit@plt-0x670>
 9ac:	adrp	x12, 0 <exit@plt-0x670>
 9b0:	add	x10, x10, #0xaec
 9b4:	add	x9, x9, #0xc84
 9b8:	add	x11, x11, #0xc8c
 9bc:	add	x12, x12, #0xc94
 9c0:	mov	w0, #0x1                   	// #1
 9c4:	str	x8, [x19, #16]
 9c8:	stp	x21, x10, [x19, #32]
 9cc:	stp	x9, x11, [x19, #48]
 9d0:	str	x12, [x19, #64]
 9d4:	str	w0, [x19, #24]
 9d8:	ldp	x20, x19, [sp, #32]
 9dc:	ldp	x22, x21, [sp, #16]
 9e0:	ldp	x29, x30, [sp], #48
 9e4:	ret
 9e8:	mov	x8, x0
 9ec:	mov	w0, #0xffffffff            	// #-1
 9f0:	cbz	x8, a6c <dl_load@@Base+0x2b8>
 9f4:	cbz	x1, a6c <dl_load@@Base+0x2b8>
 9f8:	ldr	x9, [x1, #16]
 9fc:	cbz	x9, a70 <dl_load@@Base+0x2bc>
 a00:	ldr	x0, [x9, #8]
 a04:	cbz	x0, a6c <dl_load@@Base+0x2b8>
 a08:	ldr	x10, [x9, #16]
 a0c:	str	x10, [x8]
 a10:	str	xzr, [x9, #8]
 a14:	str	xzr, [x4]
 a18:	ldr	x8, [x9, #16]
 a1c:	sub	w9, w0, #0x1
 a20:	ldrb	w9, [x8, w9, sxtw]
 a24:	cmp	w9, #0xa
 a28:	b.ne	a6c <dl_load@@Base+0x2b8>  // b.any
 a2c:	sub	w9, w0, #0x1
 a30:	sxtw	x9, w9
 a34:	ldrb	w10, [x8, x9]
 a38:	cmp	w10, #0xa
 a3c:	b.ne	a64 <dl_load@@Base+0x2b0>  // b.any
 a40:	sub	x10, x8, #0x1
 a44:	mov	w11, #0x1                   	// #1
 a48:	str	x11, [x4]
 a4c:	ldrb	w12, [x10, x9]
 a50:	sub	x9, x9, #0x1
 a54:	add	x11, x11, #0x1
 a58:	cmp	w12, #0xa
 a5c:	b.eq	a48 <dl_load@@Base+0x294>  // b.none
 a60:	add	w0, w9, #0x1
 a64:	add	x8, x8, w0, sxtw
 a68:	str	x8, [x3]
 a6c:	ret
 a70:	mov	w0, #0xffffffff            	// #-1
 a74:	ret
 a78:	stp	x29, x30, [sp, #-48]!
 a7c:	str	x21, [sp, #16]
 a80:	stp	x20, x19, [sp, #32]
 a84:	mov	x29, sp
 a88:	cbz	x0, adc <dl_load@@Base+0x328>
 a8c:	ldr	x20, [x0, #16]
 a90:	mov	x19, x0
 a94:	cbz	x20, adc <dl_load@@Base+0x328>
 a98:	ldr	x8, [x20, #24]
 a9c:	cmp	x8, #0x2
 aa0:	b.cc	ab0 <dl_load@@Base+0x2fc>  // b.lo, b.ul, b.last
 aa4:	sub	x8, x8, #0x1
 aa8:	str	x8, [x20, #24]
 aac:	b	ad4 <dl_load@@Base+0x320>
 ab0:	adrp	x21, 12000 <dl_load@@Base+0x1184c>
 ab4:	ldr	x8, [x21, #104]
 ab8:	ldr	x0, [x20, #16]
 abc:	ldr	x8, [x8, #304]
 ac0:	blr	x8
 ac4:	ldr	x8, [x21, #104]
 ac8:	mov	x0, x20
 acc:	ldr	x8, [x8, #304]
 ad0:	blr	x8
 ad4:	mov	w8, #0xffffffff            	// #-1
 ad8:	str	w8, [x19, #8]
 adc:	ldp	x20, x19, [sp, #32]
 ae0:	ldr	x21, [sp, #16]
 ae4:	ldp	x29, x30, [sp], #48
 ae8:	ret
 aec:	stp	x29, x30, [sp, #-48]!
 af0:	str	x21, [sp, #16]
 af4:	stp	x20, x19, [sp, #32]
 af8:	mov	x29, sp
 afc:	cbz	x4, b78 <dl_load@@Base+0x3c4>
 b00:	ldr	x9, [x4]
 b04:	mul	x19, x2, x1
 b08:	mov	x21, x4
 b0c:	mov	x20, x0
 b10:	cmp	x19, x9
 b14:	b.hi	b24 <dl_load@@Base+0x370>  // b.pmore
 b18:	mov	x8, x21
 b1c:	ldr	x10, [x8, #8]!
 b20:	cbz	x10, c40 <dl_load@@Base+0x48c>
 b24:	adrp	x8, 12000 <dl_load@@Base+0x1184c>
 b28:	ldr	x0, [x21, #16]
 b2c:	ldr	x8, [x8, #104]
 b30:	cbz	x0, b80 <dl_load@@Base+0x3cc>
 b34:	ldr	x8, [x8, #296]
 b38:	add	x1, x9, x19
 b3c:	blr	x8
 b40:	str	x0, [x21, #16]
 b44:	cbnz	x0, bbc <dl_load@@Base+0x408>
 b48:	adrp	x8, 12000 <dl_load@@Base+0x1184c>
 b4c:	add	x8, x8, #0x68
 b50:	ldp	x9, x0, [x8]
 b54:	ldr	x8, [x21]
 b58:	adrp	x1, 0 <exit@plt-0x670>
 b5c:	adrp	x2, 0 <exit@plt-0x670>
 b60:	ldr	x9, [x9, #96]
 b64:	add	x3, x8, x19
 b68:	add	x1, x1, #0xdf6
 b6c:	add	x2, x2, #0xde7
 b70:	blr	x9
 b74:	b	bbc <dl_load@@Base+0x408>
 b78:	mov	x19, xzr
 b7c:	b	c2c <dl_load@@Base+0x478>
 b80:	ldr	x8, [x8, #280]
 b84:	mov	x0, x19
 b88:	blr	x8
 b8c:	str	x0, [x21, #16]
 b90:	cbnz	x0, bbc <dl_load@@Base+0x408>
 b94:	adrp	x8, 12000 <dl_load@@Base+0x1184c>
 b98:	add	x8, x8, #0x68
 b9c:	ldp	x9, x0, [x8]
 ba0:	adrp	x1, 0 <exit@plt-0x670>
 ba4:	adrp	x2, 0 <exit@plt-0x670>
 ba8:	add	x1, x1, #0xdaf
 bac:	ldr	x8, [x9, #96]
 bb0:	add	x2, x2, #0xde7
 bb4:	mov	x3, x19
 bb8:	blr	x8
 bbc:	ldr	x8, [x21]
 bc0:	add	x9, x8, x19
 bc4:	mov	x8, x21
 bc8:	str	x9, [x8], #8
 bcc:	ldr	x9, [x8]
 bd0:	cbz	x19, c20 <dl_load@@Base+0x46c>
 bd4:	ldr	x10, [x21, #16]
 bd8:	cmp	x19, #0x8
 bdc:	add	x14, x20, x19
 be0:	add	x11, x10, x9
 be4:	b.cc	c00 <dl_load@@Base+0x44c>  // b.lo, b.ul, b.last
 be8:	cmp	x11, x14
 bec:	b.cs	c4c <dl_load@@Base+0x498>  // b.hs, b.nlast
 bf0:	add	x9, x9, x19
 bf4:	add	x9, x10, x9
 bf8:	cmp	x9, x20
 bfc:	b.ls	c4c <dl_load@@Base+0x498>  // b.plast
 c00:	mov	x12, x14
 c04:	mov	x9, x11
 c08:	mov	x10, x19
 c0c:	sub	x11, x12, #0x1
 c10:	ldrb	w12, [x11], #-1
 c14:	subs	x10, x10, #0x1
 c18:	strb	w12, [x9], #1
 c1c:	b.ne	c10 <dl_load@@Base+0x45c>  // b.any
 c20:	ldr	x9, [x8]
 c24:	add	x9, x9, x19
 c28:	str	x9, [x8]
 c2c:	mov	x0, x19
 c30:	ldp	x20, x19, [sp, #32]
 c34:	ldr	x21, [sp, #16]
 c38:	ldp	x29, x30, [sp], #48
 c3c:	ret
 c40:	mov	x9, xzr
 c44:	cbnz	x19, bd4 <dl_load@@Base+0x420>
 c48:	b	c20 <dl_load@@Base+0x46c>
 c4c:	and	x13, x19, #0xfffffffffffffff8
 c50:	and	x10, x19, #0x7
 c54:	sub	x12, x14, x13
 c58:	add	x9, x11, x13
 c5c:	sub	x14, x14, #0x8
 c60:	mov	x15, x13
 c64:	ldr	d0, [x14], #-8
 c68:	subs	x15, x15, #0x8
 c6c:	rev64	v0.8b, v0.8b
 c70:	str	d0, [x11], #8
 c74:	b.ne	c64 <dl_load@@Base+0x4b0>  // b.any
 c78:	cmp	x19, x13
 c7c:	b.ne	c0c <dl_load@@Base+0x458>  // b.any
 c80:	b	c20 <dl_load@@Base+0x46c>
 c84:	mov	w0, wzr
 c88:	ret
 c8c:	mov	w0, wzr
 c90:	ret
 c94:	stp	x29, x30, [sp, #-32]!
 c98:	stp	x20, x19, [sp, #16]
 c9c:	mov	x29, sp
 ca0:	cbz	x1, ccc <dl_load@@Base+0x518>
 ca4:	ldr	x8, [x1, #24]
 ca8:	mov	x19, x1
 cac:	cmp	x8, #0x2
 cb0:	b.cc	cdc <dl_load@@Base+0x528>  // b.lo, b.ul, b.last
 cb4:	sub	x8, x8, #0x1
 cb8:	mov	w0, wzr
 cbc:	str	x8, [x19, #24]
 cc0:	ldp	x20, x19, [sp, #16]
 cc4:	ldp	x29, x30, [sp], #32
 cc8:	ret
 ccc:	mov	w0, #0xffffffff            	// #-1
 cd0:	ldp	x20, x19, [sp, #16]
 cd4:	ldp	x29, x30, [sp], #32
 cd8:	ret
 cdc:	adrp	x20, 12000 <dl_load@@Base+0x1184c>
 ce0:	ldr	x8, [x20, #104]
 ce4:	ldr	x0, [x19, #16]
 ce8:	ldr	x8, [x8, #304]
 cec:	blr	x8
 cf0:	ldr	x8, [x20, #104]
 cf4:	mov	x0, x19
 cf8:	ldr	x8, [x8, #304]
 cfc:	blr	x8
 d00:	mov	w0, wzr
 d04:	ldp	x20, x19, [sp, #16]
 d08:	ldp	x29, x30, [sp], #32
 d0c:	ret

Disassembly of section .fini:

0000000000000d10 <.fini>:
 d10:	stp	x29, x30, [sp, #-16]!
 d14:	mov	x29, sp
 d18:	ldp	x29, x30, [sp], #16
 d1c:	ret
