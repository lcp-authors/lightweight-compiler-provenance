
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_heapq.cpython-38-aarch64-linux-gnu.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000aa0 <.init>:
 aa0:	stp	x29, x30, [sp, #-16]!
 aa4:	mov	x29, sp
 aa8:	bl	b90 <PyModule_AddObject@plt+0x10>
 aac:	ldp	x29, x30, [sp], #16
 ab0:	ret

Disassembly of section .plt:

0000000000000ac0 <__cxa_finalize@plt-0x20>:
 ac0:	stp	x16, x30, [sp, #-16]!
 ac4:	adrp	x16, 14000 <PyInit__heapq@@Base+0x12158>
 ac8:	ldr	x17, [x16, #4088]
 acc:	add	x16, x16, #0xff8
 ad0:	br	x17
 ad4:	nop
 ad8:	nop
 adc:	nop

0000000000000ae0 <__cxa_finalize@plt>:
 ae0:	adrp	x16, 15000 <__cxa_finalize@GLIBC_2.17>
 ae4:	ldr	x17, [x16]
 ae8:	add	x16, x16, #0x0
 aec:	br	x17

0000000000000af0 <PyList_SetSlice@plt>:
 af0:	adrp	x16, 15000 <__cxa_finalize@GLIBC_2.17>
 af4:	ldr	x17, [x16, #8]
 af8:	add	x16, x16, #0x8
 afc:	br	x17

0000000000000b00 <_Py_Dealloc@plt>:
 b00:	adrp	x16, 15000 <__cxa_finalize@GLIBC_2.17>
 b04:	ldr	x17, [x16, #16]
 b08:	add	x16, x16, #0x10
 b0c:	br	x17

0000000000000b10 <PyErr_SetString@plt>:
 b10:	adrp	x16, 15000 <__cxa_finalize@GLIBC_2.17>
 b14:	ldr	x17, [x16, #24]
 b18:	add	x16, x16, #0x18
 b1c:	br	x17

0000000000000b20 <PyObject_RichCompareBool@plt>:
 b20:	adrp	x16, 15000 <__cxa_finalize@GLIBC_2.17>
 b24:	ldr	x17, [x16, #32]
 b28:	add	x16, x16, #0x20
 b2c:	br	x17

0000000000000b30 <PyList_Append@plt>:
 b30:	adrp	x16, 15000 <__cxa_finalize@GLIBC_2.17>
 b34:	ldr	x17, [x16, #40]
 b38:	add	x16, x16, #0x28
 b3c:	br	x17

0000000000000b40 <__gmon_start__@plt>:
 b40:	adrp	x16, 15000 <__cxa_finalize@GLIBC_2.17>
 b44:	ldr	x17, [x16, #48]
 b48:	add	x16, x16, #0x30
 b4c:	br	x17

0000000000000b50 <_PyArg_CheckPositional@plt>:
 b50:	adrp	x16, 15000 <__cxa_finalize@GLIBC_2.17>
 b54:	ldr	x17, [x16, #56]
 b58:	add	x16, x16, #0x38
 b5c:	br	x17

0000000000000b60 <PyModule_Create2@plt>:
 b60:	adrp	x16, 15000 <__cxa_finalize@GLIBC_2.17>
 b64:	ldr	x17, [x16, #64]
 b68:	add	x16, x16, #0x40
 b6c:	br	x17

0000000000000b70 <PyUnicode_DecodeUTF8@plt>:
 b70:	adrp	x16, 15000 <__cxa_finalize@GLIBC_2.17>
 b74:	ldr	x17, [x16, #72]
 b78:	add	x16, x16, #0x48
 b7c:	br	x17

0000000000000b80 <PyModule_AddObject@plt>:
 b80:	adrp	x16, 15000 <__cxa_finalize@GLIBC_2.17>
 b84:	ldr	x17, [x16, #80]
 b88:	add	x16, x16, #0x50
 b8c:	br	x17

Disassembly of section .text:

0000000000000b90 <PyInit__heapq@@Base-0x1318>:
     b90:	adrp	x0, 14000 <PyInit__heapq@@Base+0x12158>
     b94:	ldr	x0, [x0, #4040]
     b98:	cbz	x0, ba0 <PyModule_AddObject@plt+0x20>
     b9c:	b	b40 <__gmon_start__@plt>
     ba0:	ret
     ba4:	stp	x29, x30, [sp, #-32]!
     ba8:	mov	x29, sp
     bac:	adrp	x0, 15000 <PyInit__heapq@@Base+0x13158>
     bb0:	add	x0, x0, #0x1e8
     bb4:	str	x0, [sp, #24]
     bb8:	ldr	x0, [sp, #24]
     bbc:	str	x0, [sp, #24]
     bc0:	ldr	x1, [sp, #24]
     bc4:	adrp	x0, 15000 <PyInit__heapq@@Base+0x13158>
     bc8:	add	x0, x0, #0x1e8
     bcc:	cmp	x1, x0
     bd0:	b.eq	c08 <PyModule_AddObject@plt+0x88>  // b.none
     bd4:	adrp	x0, 14000 <PyInit__heapq@@Base+0x12158>
     bd8:	ldr	x0, [x0, #4008]
     bdc:	str	x0, [sp, #16]
     be0:	ldr	x0, [sp, #16]
     be4:	str	x0, [sp, #16]
     be8:	ldr	x0, [sp, #16]
     bec:	cmp	x0, #0x0
     bf0:	b.eq	c0c <PyModule_AddObject@plt+0x8c>  // b.none
     bf4:	ldr	x1, [sp, #16]
     bf8:	adrp	x0, 15000 <PyInit__heapq@@Base+0x13158>
     bfc:	add	x0, x0, #0x1e8
     c00:	blr	x1
     c04:	b	c0c <PyModule_AddObject@plt+0x8c>
     c08:	nop
     c0c:	ldp	x29, x30, [sp], #32
     c10:	ret
     c14:	stp	x29, x30, [sp, #-48]!
     c18:	mov	x29, sp
     c1c:	adrp	x0, 15000 <PyInit__heapq@@Base+0x13158>
     c20:	add	x0, x0, #0x1e8
     c24:	str	x0, [sp, #40]
     c28:	ldr	x0, [sp, #40]
     c2c:	str	x0, [sp, #40]
     c30:	ldr	x1, [sp, #40]
     c34:	adrp	x0, 15000 <PyInit__heapq@@Base+0x13158>
     c38:	add	x0, x0, #0x1e8
     c3c:	sub	x0, x1, x0
     c40:	asr	x0, x0, #3
     c44:	lsr	x1, x0, #63
     c48:	add	x0, x1, x0
     c4c:	asr	x0, x0, #1
     c50:	str	x0, [sp, #32]
     c54:	ldr	x0, [sp, #32]
     c58:	cmp	x0, #0x0
     c5c:	b.eq	c98 <PyModule_AddObject@plt+0x118>  // b.none
     c60:	adrp	x0, 14000 <PyInit__heapq@@Base+0x12158>
     c64:	ldr	x0, [x0, #4064]
     c68:	str	x0, [sp, #24]
     c6c:	ldr	x0, [sp, #24]
     c70:	str	x0, [sp, #24]
     c74:	ldr	x0, [sp, #24]
     c78:	cmp	x0, #0x0
     c7c:	b.eq	c9c <PyModule_AddObject@plt+0x11c>  // b.none
     c80:	ldr	x2, [sp, #24]
     c84:	ldr	x1, [sp, #32]
     c88:	adrp	x0, 15000 <PyInit__heapq@@Base+0x13158>
     c8c:	add	x0, x0, #0x1e8
     c90:	blr	x2
     c94:	b	c9c <PyModule_AddObject@plt+0x11c>
     c98:	nop
     c9c:	ldp	x29, x30, [sp], #48
     ca0:	ret
     ca4:	stp	x29, x30, [sp, #-16]!
     ca8:	mov	x29, sp
     cac:	adrp	x0, 15000 <PyInit__heapq@@Base+0x13158>
     cb0:	add	x0, x0, #0x1e8
     cb4:	ldrb	w0, [x0]
     cb8:	and	x0, x0, #0xff
     cbc:	cmp	x0, #0x0
     cc0:	b.ne	cfc <PyModule_AddObject@plt+0x17c>  // b.any
     cc4:	adrp	x0, 14000 <PyInit__heapq@@Base+0x12158>
     cc8:	ldr	x0, [x0, #4016]
     ccc:	cmp	x0, #0x0
     cd0:	b.eq	ce4 <PyModule_AddObject@plt+0x164>  // b.none
     cd4:	adrp	x0, 15000 <PyInit__heapq@@Base+0x13158>
     cd8:	add	x0, x0, #0x58
     cdc:	ldr	x0, [x0]
     ce0:	bl	ae0 <__cxa_finalize@plt>
     ce4:	bl	ba4 <PyModule_AddObject@plt+0x24>
     ce8:	adrp	x0, 15000 <PyInit__heapq@@Base+0x13158>
     cec:	add	x0, x0, #0x1e8
     cf0:	mov	w1, #0x1                   	// #1
     cf4:	strb	w1, [x0]
     cf8:	b	d00 <PyModule_AddObject@plt+0x180>
     cfc:	nop
     d00:	ldp	x29, x30, [sp], #16
     d04:	ret
     d08:	stp	x29, x30, [sp, #-16]!
     d0c:	mov	x29, sp
     d10:	bl	c14 <PyModule_AddObject@plt+0x94>
     d14:	nop
     d18:	ldp	x29, x30, [sp], #16
     d1c:	ret
     d20:	sub	sp, sp, #0x10
     d24:	str	x0, [sp, #8]
     d28:	ldr	x0, [sp, #8]
     d2c:	ldr	x0, [x0]
     d30:	add	x1, x0, #0x1
     d34:	ldr	x0, [sp, #8]
     d38:	str	x1, [x0]
     d3c:	nop
     d40:	add	sp, sp, #0x10
     d44:	ret
     d48:	stp	x29, x30, [sp, #-48]!
     d4c:	mov	x29, sp
     d50:	str	x0, [sp, #40]
     d54:	str	w1, [sp, #36]
     d58:	str	x2, [sp, #24]
     d5c:	ldr	x0, [sp, #24]
     d60:	ldr	x0, [x0]
     d64:	sub	x1, x0, #0x1
     d68:	ldr	x0, [sp, #24]
     d6c:	str	x1, [x0]
     d70:	ldr	x0, [sp, #24]
     d74:	ldr	x0, [x0]
     d78:	cmp	x0, #0x0
     d7c:	b.ne	d88 <PyModule_AddObject@plt+0x208>  // b.any
     d80:	ldr	x0, [sp, #24]
     d84:	bl	b00 <_Py_Dealloc@plt>
     d88:	nop
     d8c:	ldp	x29, x30, [sp], #48
     d90:	ret
     d94:	stp	x29, x30, [sp, #-80]!
     d98:	mov	x29, sp
     d9c:	str	x0, [sp, #40]
     da0:	str	x1, [sp, #32]
     da4:	str	x2, [sp, #24]
     da8:	str	xzr, [sp, #72]
     dac:	ldr	x0, [sp, #24]
     db0:	cmp	x0, #0x1
     db4:	b.le	dc4 <PyModule_AddObject@plt+0x244>
     db8:	ldr	x0, [sp, #24]
     dbc:	cmp	x0, #0x2
     dc0:	b.le	de4 <PyModule_AddObject@plt+0x264>
     dc4:	mov	x3, #0x2                   	// #2
     dc8:	mov	x2, #0x2                   	// #2
     dcc:	ldr	x1, [sp, #24]
     dd0:	adrp	x0, 1000 <PyModule_AddObject@plt+0x480>
     dd4:	add	x0, x0, #0xf80
     dd8:	bl	b50 <_PyArg_CheckPositional@plt>
     ddc:	cmp	w0, #0x0
     de0:	b.eq	e14 <PyModule_AddObject@plt+0x294>  // b.none
     de4:	ldr	x0, [sp, #32]
     de8:	ldr	x0, [x0]
     dec:	str	x0, [sp, #64]
     df0:	ldr	x0, [sp, #32]
     df4:	ldr	x0, [x0, #8]
     df8:	str	x0, [sp, #56]
     dfc:	ldr	x2, [sp, #56]
     e00:	ldr	x1, [sp, #64]
     e04:	ldr	x0, [sp, #40]
     e08:	bl	1354 <PyModule_AddObject@plt+0x7d4>
     e0c:	str	x0, [sp, #72]
     e10:	b	e18 <PyModule_AddObject@plt+0x298>
     e14:	nop
     e18:	ldr	x0, [sp, #72]
     e1c:	ldp	x29, x30, [sp], #80
     e20:	ret
     e24:	stp	x29, x30, [sp, #-80]!
     e28:	mov	x29, sp
     e2c:	str	x0, [sp, #40]
     e30:	str	x1, [sp, #32]
     e34:	str	x2, [sp, #24]
     e38:	str	xzr, [sp, #72]
     e3c:	ldr	x0, [sp, #24]
     e40:	cmp	x0, #0x1
     e44:	b.le	e54 <PyModule_AddObject@plt+0x2d4>
     e48:	ldr	x0, [sp, #24]
     e4c:	cmp	x0, #0x2
     e50:	b.le	e74 <PyModule_AddObject@plt+0x2f4>
     e54:	mov	x3, #0x2                   	// #2
     e58:	mov	x2, #0x2                   	// #2
     e5c:	ldr	x1, [sp, #24]
     e60:	adrp	x0, 2000 <PyInit__heapq@@Base+0x158>
     e64:	add	x0, x0, #0x1b8
     e68:	bl	b50 <_PyArg_CheckPositional@plt>
     e6c:	cmp	w0, #0x0
     e70:	b.eq	ea4 <PyModule_AddObject@plt+0x324>  // b.none
     e74:	ldr	x0, [sp, #32]
     e78:	ldr	x0, [x0]
     e7c:	str	x0, [sp, #64]
     e80:	ldr	x0, [sp, #32]
     e84:	ldr	x0, [x0, #8]
     e88:	str	x0, [sp, #56]
     e8c:	ldr	x2, [sp, #56]
     e90:	ldr	x1, [sp, #64]
     e94:	ldr	x0, [sp, #40]
     e98:	bl	168c <PyModule_AddObject@plt+0xb0c>
     e9c:	str	x0, [sp, #72]
     ea0:	b	ea8 <PyModule_AddObject@plt+0x328>
     ea4:	nop
     ea8:	ldr	x0, [sp, #72]
     eac:	ldp	x29, x30, [sp], #80
     eb0:	ret
     eb4:	stp	x29, x30, [sp, #-80]!
     eb8:	mov	x29, sp
     ebc:	str	x0, [sp, #40]
     ec0:	str	x1, [sp, #32]
     ec4:	str	x2, [sp, #24]
     ec8:	str	xzr, [sp, #72]
     ecc:	ldr	x0, [sp, #24]
     ed0:	cmp	x0, #0x1
     ed4:	b.le	ee4 <PyModule_AddObject@plt+0x364>
     ed8:	ldr	x0, [sp, #24]
     edc:	cmp	x0, #0x2
     ee0:	b.le	f04 <PyModule_AddObject@plt+0x384>
     ee4:	mov	x3, #0x2                   	// #2
     ee8:	mov	x2, #0x2                   	// #2
     eec:	ldr	x1, [sp, #24]
     ef0:	adrp	x0, 2000 <PyInit__heapq@@Base+0x158>
     ef4:	add	x0, x0, #0x2a8
     ef8:	bl	b50 <_PyArg_CheckPositional@plt>
     efc:	cmp	w0, #0x0
     f00:	b.eq	f34 <PyModule_AddObject@plt+0x3b4>  // b.none
     f04:	ldr	x0, [sp, #32]
     f08:	ldr	x0, [x0]
     f0c:	str	x0, [sp, #64]
     f10:	ldr	x0, [sp, #32]
     f14:	ldr	x0, [x0, #8]
     f18:	str	x0, [sp, #56]
     f1c:	ldr	x2, [sp, #56]
     f20:	ldr	x1, [sp, #64]
     f24:	ldr	x0, [sp, #40]
     f28:	bl	16bc <PyModule_AddObject@plt+0xb3c>
     f2c:	str	x0, [sp, #72]
     f30:	b	f38 <PyModule_AddObject@plt+0x3b8>
     f34:	nop
     f38:	ldr	x0, [sp, #72]
     f3c:	ldp	x29, x30, [sp], #80
     f40:	ret
     f44:	stp	x29, x30, [sp, #-80]!
     f48:	mov	x29, sp
     f4c:	str	x0, [sp, #40]
     f50:	str	x1, [sp, #32]
     f54:	str	x2, [sp, #24]
     f58:	str	xzr, [sp, #72]
     f5c:	ldr	x0, [sp, #24]
     f60:	cmp	x0, #0x1
     f64:	b.le	f74 <PyModule_AddObject@plt+0x3f4>
     f68:	ldr	x0, [sp, #24]
     f6c:	cmp	x0, #0x2
     f70:	b.le	f94 <PyModule_AddObject@plt+0x414>
     f74:	mov	x3, #0x2                   	// #2
     f78:	mov	x2, #0x2                   	// #2
     f7c:	ldr	x1, [sp, #24]
     f80:	adrp	x0, 2000 <PyInit__heapq@@Base+0x158>
     f84:	add	x0, x0, #0x3a8
     f88:	bl	b50 <_PyArg_CheckPositional@plt>
     f8c:	cmp	w0, #0x0
     f90:	b.eq	fc4 <PyModule_AddObject@plt+0x444>  // b.none
     f94:	ldr	x0, [sp, #32]
     f98:	ldr	x0, [x0]
     f9c:	str	x0, [sp, #64]
     fa0:	ldr	x0, [sp, #32]
     fa4:	ldr	x0, [x0, #8]
     fa8:	str	x0, [sp, #56]
     fac:	ldr	x2, [sp, #56]
     fb0:	ldr	x1, [sp, #64]
     fb4:	ldr	x0, [sp, #40]
     fb8:	bl	1e50 <PyModule_AddObject@plt+0x12d0>
     fbc:	str	x0, [sp, #72]
     fc0:	b	fc8 <PyModule_AddObject@plt+0x448>
     fc4:	nop
     fc8:	ldr	x0, [sp, #72]
     fcc:	ldp	x29, x30, [sp], #80
     fd0:	ret
     fd4:	stp	x29, x30, [sp, #-96]!
     fd8:	mov	x29, sp
     fdc:	str	x0, [sp, #40]
     fe0:	str	x1, [sp, #32]
     fe4:	str	x2, [sp, #24]
     fe8:	ldr	x0, [sp, #40]
     fec:	ldr	x0, [x0, #16]
     ff0:	str	x0, [sp, #72]
     ff4:	ldr	x1, [sp, #24]
     ff8:	ldr	x0, [sp, #72]
     ffc:	cmp	x1, x0
    1000:	b.lt	1028 <PyModule_AddObject@plt+0x4a8>  // b.tstop
    1004:	adrp	x0, 14000 <PyInit__heapq@@Base+0x12158>
    1008:	ldr	x0, [x0, #4056]
    100c:	ldr	x2, [x0]
    1010:	adrp	x0, 2000 <PyInit__heapq@@Base+0x158>
    1014:	add	x1, x0, #0x400
    1018:	mov	x0, x2
    101c:	bl	b10 <PyErr_SetString@plt>
    1020:	mov	w0, #0xffffffff            	// #-1
    1024:	b	1174 <PyModule_AddObject@plt+0x5f4>
    1028:	ldr	x0, [sp, #40]
    102c:	ldr	x0, [x0, #24]
    1030:	str	x0, [sp, #80]
    1034:	ldr	x0, [sp, #24]
    1038:	lsl	x0, x0, #3
    103c:	ldr	x1, [sp, #80]
    1040:	add	x0, x1, x0
    1044:	ldr	x0, [x0]
    1048:	str	x0, [sp, #88]
    104c:	b	1158 <PyModule_AddObject@plt+0x5d8>
    1050:	ldr	x0, [sp, #24]
    1054:	sub	x0, x0, #0x1
    1058:	asr	x0, x0, #1
    105c:	str	x0, [sp, #64]
    1060:	ldr	x0, [sp, #64]
    1064:	lsl	x0, x0, #3
    1068:	ldr	x1, [sp, #80]
    106c:	add	x0, x1, x0
    1070:	ldr	x0, [x0]
    1074:	str	x0, [sp, #56]
    1078:	mov	w2, #0x0                   	// #0
    107c:	ldr	x1, [sp, #56]
    1080:	ldr	x0, [sp, #88]
    1084:	bl	b20 <PyObject_RichCompareBool@plt>
    1088:	str	w0, [sp, #52]
    108c:	ldr	w0, [sp, #52]
    1090:	cmp	w0, #0x0
    1094:	b.ge	10a0 <PyModule_AddObject@plt+0x520>  // b.tcont
    1098:	mov	w0, #0xffffffff            	// #-1
    109c:	b	1174 <PyModule_AddObject@plt+0x5f4>
    10a0:	ldr	x0, [sp, #40]
    10a4:	ldr	x0, [x0, #16]
    10a8:	ldr	x1, [sp, #72]
    10ac:	cmp	x1, x0
    10b0:	b.eq	10d8 <PyModule_AddObject@plt+0x558>  // b.none
    10b4:	adrp	x0, 14000 <PyInit__heapq@@Base+0x12158>
    10b8:	ldr	x0, [x0, #4024]
    10bc:	ldr	x2, [x0]
    10c0:	adrp	x0, 2000 <PyInit__heapq@@Base+0x158>
    10c4:	add	x1, x0, #0x418
    10c8:	mov	x0, x2
    10cc:	bl	b10 <PyErr_SetString@plt>
    10d0:	mov	w0, #0xffffffff            	// #-1
    10d4:	b	1174 <PyModule_AddObject@plt+0x5f4>
    10d8:	ldr	w0, [sp, #52]
    10dc:	cmp	w0, #0x0
    10e0:	b.eq	116c <PyModule_AddObject@plt+0x5ec>  // b.none
    10e4:	ldr	x0, [sp, #40]
    10e8:	ldr	x0, [x0, #24]
    10ec:	str	x0, [sp, #80]
    10f0:	ldr	x0, [sp, #64]
    10f4:	lsl	x0, x0, #3
    10f8:	ldr	x1, [sp, #80]
    10fc:	add	x0, x1, x0
    1100:	ldr	x0, [x0]
    1104:	str	x0, [sp, #56]
    1108:	ldr	x0, [sp, #24]
    110c:	lsl	x0, x0, #3
    1110:	ldr	x1, [sp, #80]
    1114:	add	x0, x1, x0
    1118:	ldr	x0, [x0]
    111c:	str	x0, [sp, #88]
    1120:	ldr	x0, [sp, #64]
    1124:	lsl	x0, x0, #3
    1128:	ldr	x1, [sp, #80]
    112c:	add	x0, x1, x0
    1130:	ldr	x1, [sp, #88]
    1134:	str	x1, [x0]
    1138:	ldr	x0, [sp, #24]
    113c:	lsl	x0, x0, #3
    1140:	ldr	x1, [sp, #80]
    1144:	add	x0, x1, x0
    1148:	ldr	x1, [sp, #56]
    114c:	str	x1, [x0]
    1150:	ldr	x0, [sp, #64]
    1154:	str	x0, [sp, #24]
    1158:	ldr	x1, [sp, #24]
    115c:	ldr	x0, [sp, #32]
    1160:	cmp	x1, x0
    1164:	b.gt	1050 <PyModule_AddObject@plt+0x4d0>
    1168:	b	1170 <PyModule_AddObject@plt+0x5f0>
    116c:	nop
    1170:	mov	w0, #0x0                   	// #0
    1174:	ldp	x29, x30, [sp], #96
    1178:	ret
    117c:	stp	x29, x30, [sp, #-96]!
    1180:	mov	x29, sp
    1184:	str	x0, [sp, #24]
    1188:	str	x1, [sp, #16]
    118c:	ldr	x0, [sp, #24]
    1190:	ldr	x0, [x0, #16]
    1194:	str	x0, [sp, #72]
    1198:	ldr	x0, [sp, #16]
    119c:	str	x0, [sp, #64]
    11a0:	ldr	x1, [sp, #16]
    11a4:	ldr	x0, [sp, #72]
    11a8:	cmp	x1, x0
    11ac:	b.lt	11d4 <PyModule_AddObject@plt+0x654>  // b.tstop
    11b0:	adrp	x0, 14000 <PyInit__heapq@@Base+0x12158>
    11b4:	ldr	x0, [x0, #4056]
    11b8:	ldr	x2, [x0]
    11bc:	adrp	x0, 2000 <PyInit__heapq@@Base+0x158>
    11c0:	add	x1, x0, #0x400
    11c4:	mov	x0, x2
    11c8:	bl	b10 <PyErr_SetString@plt>
    11cc:	mov	w0, #0xffffffff            	// #-1
    11d0:	b	134c <PyModule_AddObject@plt+0x7cc>
    11d4:	ldr	x0, [sp, #24]
    11d8:	ldr	x0, [x0, #24]
    11dc:	str	x0, [sp, #80]
    11e0:	ldr	x0, [sp, #72]
    11e4:	asr	x0, x0, #1
    11e8:	str	x0, [sp, #56]
    11ec:	b	132c <PyModule_AddObject@plt+0x7ac>
    11f0:	ldr	x0, [sp, #16]
    11f4:	lsl	x0, x0, #1
    11f8:	add	x0, x0, #0x1
    11fc:	str	x0, [sp, #88]
    1200:	ldr	x0, [sp, #88]
    1204:	add	x0, x0, #0x1
    1208:	ldr	x1, [sp, #72]
    120c:	cmp	x1, x0
    1210:	b.le	12c4 <PyModule_AddObject@plt+0x744>
    1214:	ldr	x0, [sp, #88]
    1218:	lsl	x0, x0, #3
    121c:	ldr	x1, [sp, #80]
    1220:	add	x0, x1, x0
    1224:	ldr	x3, [x0]
    1228:	ldr	x0, [sp, #88]
    122c:	add	x0, x0, #0x1
    1230:	lsl	x0, x0, #3
    1234:	ldr	x1, [sp, #80]
    1238:	add	x0, x1, x0
    123c:	ldr	x0, [x0]
    1240:	mov	w2, #0x0                   	// #0
    1244:	mov	x1, x0
    1248:	mov	x0, x3
    124c:	bl	b20 <PyObject_RichCompareBool@plt>
    1250:	str	w0, [sp, #52]
    1254:	ldr	w0, [sp, #52]
    1258:	cmp	w0, #0x0
    125c:	b.ge	1268 <PyModule_AddObject@plt+0x6e8>  // b.tcont
    1260:	mov	w0, #0xffffffff            	// #-1
    1264:	b	134c <PyModule_AddObject@plt+0x7cc>
    1268:	ldr	w0, [sp, #52]
    126c:	eor	w0, w0, #0x1
    1270:	mov	w0, w0
    1274:	ldr	x1, [sp, #88]
    1278:	add	x0, x1, x0
    127c:	str	x0, [sp, #88]
    1280:	ldr	x0, [sp, #24]
    1284:	ldr	x0, [x0, #24]
    1288:	str	x0, [sp, #80]
    128c:	ldr	x0, [sp, #24]
    1290:	ldr	x0, [x0, #16]
    1294:	ldr	x1, [sp, #72]
    1298:	cmp	x1, x0
    129c:	b.eq	12c4 <PyModule_AddObject@plt+0x744>  // b.none
    12a0:	adrp	x0, 14000 <PyInit__heapq@@Base+0x12158>
    12a4:	ldr	x0, [x0, #4024]
    12a8:	ldr	x2, [x0]
    12ac:	adrp	x0, 2000 <PyInit__heapq@@Base+0x158>
    12b0:	add	x1, x0, #0x418
    12b4:	mov	x0, x2
    12b8:	bl	b10 <PyErr_SetString@plt>
    12bc:	mov	w0, #0xffffffff            	// #-1
    12c0:	b	134c <PyModule_AddObject@plt+0x7cc>
    12c4:	ldr	x0, [sp, #88]
    12c8:	lsl	x0, x0, #3
    12cc:	ldr	x1, [sp, #80]
    12d0:	add	x0, x1, x0
    12d4:	ldr	x0, [x0]
    12d8:	str	x0, [sp, #40]
    12dc:	ldr	x0, [sp, #16]
    12e0:	lsl	x0, x0, #3
    12e4:	ldr	x1, [sp, #80]
    12e8:	add	x0, x1, x0
    12ec:	ldr	x0, [x0]
    12f0:	str	x0, [sp, #32]
    12f4:	ldr	x0, [sp, #88]
    12f8:	lsl	x0, x0, #3
    12fc:	ldr	x1, [sp, #80]
    1300:	add	x0, x1, x0
    1304:	ldr	x1, [sp, #32]
    1308:	str	x1, [x0]
    130c:	ldr	x0, [sp, #16]
    1310:	lsl	x0, x0, #3
    1314:	ldr	x1, [sp, #80]
    1318:	add	x0, x1, x0
    131c:	ldr	x1, [sp, #40]
    1320:	str	x1, [x0]
    1324:	ldr	x0, [sp, #88]
    1328:	str	x0, [sp, #16]
    132c:	ldr	x1, [sp, #16]
    1330:	ldr	x0, [sp, #56]
    1334:	cmp	x1, x0
    1338:	b.lt	11f0 <PyModule_AddObject@plt+0x670>  // b.tstop
    133c:	ldr	x2, [sp, #16]
    1340:	ldr	x1, [sp, #64]
    1344:	ldr	x0, [sp, #24]
    1348:	bl	fd4 <PyModule_AddObject@plt+0x454>
    134c:	ldp	x29, x30, [sp], #96
    1350:	ret
    1354:	stp	x29, x30, [sp, #-48]!
    1358:	mov	x29, sp
    135c:	str	x0, [sp, #40]
    1360:	str	x1, [sp, #32]
    1364:	str	x2, [sp, #24]
    1368:	ldr	x0, [sp, #32]
    136c:	ldr	x0, [x0, #8]
    1370:	ldr	x0, [x0, #168]
    1374:	and	x0, x0, #0x2000000
    1378:	cmp	x0, #0x0
    137c:	b.ne	13a4 <PyModule_AddObject@plt+0x824>  // b.any
    1380:	adrp	x0, 14000 <PyInit__heapq@@Base+0x12158>
    1384:	ldr	x0, [x0, #4032]
    1388:	ldr	x2, [x0]
    138c:	adrp	x0, 2000 <PyInit__heapq@@Base+0x158>
    1390:	add	x1, x0, #0x440
    1394:	mov	x0, x2
    1398:	bl	b10 <PyErr_SetString@plt>
    139c:	mov	x0, #0x0                   	// #0
    13a0:	b	1400 <PyModule_AddObject@plt+0x880>
    13a4:	ldr	x1, [sp, #24]
    13a8:	ldr	x0, [sp, #32]
    13ac:	bl	b30 <PyList_Append@plt>
    13b0:	cmp	w0, #0x0
    13b4:	b.eq	13c0 <PyModule_AddObject@plt+0x840>  // b.none
    13b8:	mov	x0, #0x0                   	// #0
    13bc:	b	1400 <PyModule_AddObject@plt+0x880>
    13c0:	ldr	x0, [sp, #32]
    13c4:	ldr	x0, [x0, #16]
    13c8:	sub	x0, x0, #0x1
    13cc:	mov	x2, x0
    13d0:	mov	x1, #0x0                   	// #0
    13d4:	ldr	x0, [sp, #32]
    13d8:	bl	fd4 <PyModule_AddObject@plt+0x454>
    13dc:	cmp	w0, #0x0
    13e0:	b.eq	13ec <PyModule_AddObject@plt+0x86c>  // b.none
    13e4:	mov	x0, #0x0                   	// #0
    13e8:	b	1400 <PyModule_AddObject@plt+0x880>
    13ec:	adrp	x0, 14000 <PyInit__heapq@@Base+0x12158>
    13f0:	ldr	x0, [x0, #4048]
    13f4:	bl	d20 <PyModule_AddObject@plt+0x1a0>
    13f8:	adrp	x0, 14000 <PyInit__heapq@@Base+0x12158>
    13fc:	ldr	x0, [x0, #4048]
    1400:	ldp	x29, x30, [sp], #48
    1404:	ret
    1408:	stp	x29, x30, [sp, #-64]!
    140c:	mov	x29, sp
    1410:	str	x0, [sp, #24]
    1414:	str	x1, [sp, #16]
    1418:	ldr	x0, [sp, #24]
    141c:	ldr	x0, [x0, #8]
    1420:	ldr	x0, [x0, #168]
    1424:	and	x0, x0, #0x2000000
    1428:	cmp	x0, #0x0
    142c:	b.ne	1454 <PyModule_AddObject@plt+0x8d4>  // b.any
    1430:	adrp	x0, 14000 <PyInit__heapq@@Base+0x12158>
    1434:	ldr	x0, [x0, #4032]
    1438:	ldr	x2, [x0]
    143c:	adrp	x0, 2000 <PyInit__heapq@@Base+0x158>
    1440:	add	x1, x0, #0x440
    1444:	mov	x0, x2
    1448:	bl	b10 <PyErr_SetString@plt>
    144c:	mov	x0, #0x0                   	// #0
    1450:	b	1570 <PyModule_AddObject@plt+0x9f0>
    1454:	ldr	x0, [sp, #24]
    1458:	ldr	x0, [x0, #16]
    145c:	str	x0, [sp, #56]
    1460:	ldr	x0, [sp, #56]
    1464:	cmp	x0, #0x0
    1468:	b.ne	1490 <PyModule_AddObject@plt+0x910>  // b.any
    146c:	adrp	x0, 14000 <PyInit__heapq@@Base+0x12158>
    1470:	ldr	x0, [x0, #4056]
    1474:	ldr	x2, [x0]
    1478:	adrp	x0, 2000 <PyInit__heapq@@Base+0x158>
    147c:	add	x1, x0, #0x400
    1480:	mov	x0, x2
    1484:	bl	b10 <PyErr_SetString@plt>
    1488:	mov	x0, #0x0                   	// #0
    148c:	b	1570 <PyModule_AddObject@plt+0x9f0>
    1490:	ldr	x0, [sp, #24]
    1494:	ldr	x1, [x0, #24]
    1498:	ldr	x0, [sp, #56]
    149c:	lsl	x0, x0, #3
    14a0:	sub	x0, x0, #0x8
    14a4:	add	x0, x1, x0
    14a8:	ldr	x0, [x0]
    14ac:	str	x0, [sp, #48]
    14b0:	ldr	x0, [sp, #48]
    14b4:	bl	d20 <PyModule_AddObject@plt+0x1a0>
    14b8:	ldr	x0, [sp, #56]
    14bc:	sub	x0, x0, #0x1
    14c0:	mov	x3, #0x0                   	// #0
    14c4:	ldr	x2, [sp, #56]
    14c8:	mov	x1, x0
    14cc:	ldr	x0, [sp, #24]
    14d0:	bl	af0 <PyList_SetSlice@plt>
    14d4:	cmp	w0, #0x0
    14d8:	b.eq	14f8 <PyModule_AddObject@plt+0x978>  // b.none
    14dc:	ldr	x2, [sp, #48]
    14e0:	mov	w1, #0x9a                  	// #154
    14e4:	adrp	x0, 2000 <PyInit__heapq@@Base+0x158>
    14e8:	add	x0, x0, #0x460
    14ec:	bl	d48 <PyModule_AddObject@plt+0x1c8>
    14f0:	mov	x0, #0x0                   	// #0
    14f4:	b	1570 <PyModule_AddObject@plt+0x9f0>
    14f8:	ldr	x0, [sp, #56]
    14fc:	sub	x0, x0, #0x1
    1500:	str	x0, [sp, #56]
    1504:	ldr	x0, [sp, #56]
    1508:	cmp	x0, #0x0
    150c:	b.ne	1518 <PyModule_AddObject@plt+0x998>  // b.any
    1510:	ldr	x0, [sp, #48]
    1514:	b	1570 <PyModule_AddObject@plt+0x9f0>
    1518:	ldr	x0, [sp, #24]
    151c:	ldr	x0, [x0, #24]
    1520:	ldr	x0, [x0]
    1524:	str	x0, [sp, #40]
    1528:	ldr	x0, [sp, #24]
    152c:	ldr	x0, [x0, #24]
    1530:	ldr	x1, [sp, #48]
    1534:	str	x1, [x0]
    1538:	ldr	x2, [sp, #16]
    153c:	mov	x1, #0x0                   	// #0
    1540:	ldr	x0, [sp, #24]
    1544:	blr	x2
    1548:	cmp	w0, #0x0
    154c:	b.eq	156c <PyModule_AddObject@plt+0x9ec>  // b.none
    1550:	ldr	x2, [sp, #40]
    1554:	mov	w1, #0xa4                  	// #164
    1558:	adrp	x0, 2000 <PyInit__heapq@@Base+0x158>
    155c:	add	x0, x0, #0x460
    1560:	bl	d48 <PyModule_AddObject@plt+0x1c8>
    1564:	mov	x0, #0x0                   	// #0
    1568:	b	1570 <PyModule_AddObject@plt+0x9f0>
    156c:	ldr	x0, [sp, #40]
    1570:	ldp	x29, x30, [sp], #64
    1574:	ret
    1578:	stp	x29, x30, [sp, #-32]!
    157c:	mov	x29, sp
    1580:	str	x0, [sp, #24]
    1584:	str	x1, [sp, #16]
    1588:	adrp	x0, 1000 <PyModule_AddObject@plt+0x480>
    158c:	add	x1, x0, #0x17c
    1590:	ldr	x0, [sp, #16]
    1594:	bl	1408 <PyModule_AddObject@plt+0x888>
    1598:	ldp	x29, x30, [sp], #32
    159c:	ret
    15a0:	stp	x29, x30, [sp, #-64]!
    15a4:	mov	x29, sp
    15a8:	str	x0, [sp, #40]
    15ac:	str	x1, [sp, #32]
    15b0:	str	x2, [sp, #24]
    15b4:	ldr	x0, [sp, #40]
    15b8:	ldr	x0, [x0, #8]
    15bc:	ldr	x0, [x0, #168]
    15c0:	and	x0, x0, #0x2000000
    15c4:	cmp	x0, #0x0
    15c8:	b.ne	15f0 <PyModule_AddObject@plt+0xa70>  // b.any
    15cc:	adrp	x0, 14000 <PyInit__heapq@@Base+0x12158>
    15d0:	ldr	x0, [x0, #4032]
    15d4:	ldr	x2, [x0]
    15d8:	adrp	x0, 2000 <PyInit__heapq@@Base+0x158>
    15dc:	add	x1, x0, #0x440
    15e0:	mov	x0, x2
    15e4:	bl	b10 <PyErr_SetString@plt>
    15e8:	mov	x0, #0x0                   	// #0
    15ec:	b	1684 <PyModule_AddObject@plt+0xb04>
    15f0:	ldr	x0, [sp, #40]
    15f4:	ldr	x0, [x0, #16]
    15f8:	cmp	x0, #0x0
    15fc:	b.ne	1624 <PyModule_AddObject@plt+0xaa4>  // b.any
    1600:	adrp	x0, 14000 <PyInit__heapq@@Base+0x12158>
    1604:	ldr	x0, [x0, #4056]
    1608:	ldr	x2, [x0]
    160c:	adrp	x0, 2000 <PyInit__heapq@@Base+0x158>
    1610:	add	x1, x0, #0x400
    1614:	mov	x0, x2
    1618:	bl	b10 <PyErr_SetString@plt>
    161c:	mov	x0, #0x0                   	// #0
    1620:	b	1684 <PyModule_AddObject@plt+0xb04>
    1624:	ldr	x0, [sp, #40]
    1628:	ldr	x0, [x0, #24]
    162c:	ldr	x0, [x0]
    1630:	str	x0, [sp, #56]
    1634:	ldr	x0, [sp, #32]
    1638:	bl	d20 <PyModule_AddObject@plt+0x1a0>
    163c:	ldr	x0, [sp, #40]
    1640:	ldr	x0, [x0, #24]
    1644:	ldr	x1, [sp, #32]
    1648:	str	x1, [x0]
    164c:	ldr	x2, [sp, #24]
    1650:	mov	x1, #0x0                   	// #0
    1654:	ldr	x0, [sp, #40]
    1658:	blr	x2
    165c:	cmp	w0, #0x0
    1660:	b.eq	1680 <PyModule_AddObject@plt+0xb00>  // b.none
    1664:	ldr	x2, [sp, #56]
    1668:	mov	w1, #0xcd                  	// #205
    166c:	adrp	x0, 2000 <PyInit__heapq@@Base+0x158>
    1670:	add	x0, x0, #0x460
    1674:	bl	d48 <PyModule_AddObject@plt+0x1c8>
    1678:	mov	x0, #0x0                   	// #0
    167c:	b	1684 <PyModule_AddObject@plt+0xb04>
    1680:	ldr	x0, [sp, #56]
    1684:	ldp	x29, x30, [sp], #64
    1688:	ret
    168c:	stp	x29, x30, [sp, #-48]!
    1690:	mov	x29, sp
    1694:	str	x0, [sp, #40]
    1698:	str	x1, [sp, #32]
    169c:	str	x2, [sp, #24]
    16a0:	adrp	x0, 1000 <PyModule_AddObject@plt+0x480>
    16a4:	add	x2, x0, #0x17c
    16a8:	ldr	x1, [sp, #24]
    16ac:	ldr	x0, [sp, #32]
    16b0:	bl	15a0 <PyModule_AddObject@plt+0xa20>
    16b4:	ldp	x29, x30, [sp], #48
    16b8:	ret
    16bc:	stp	x29, x30, [sp, #-64]!
    16c0:	mov	x29, sp
    16c4:	str	x0, [sp, #40]
    16c8:	str	x1, [sp, #32]
    16cc:	str	x2, [sp, #24]
    16d0:	ldr	x0, [sp, #32]
    16d4:	ldr	x0, [x0, #8]
    16d8:	ldr	x0, [x0, #168]
    16dc:	and	x0, x0, #0x2000000
    16e0:	cmp	x0, #0x0
    16e4:	b.ne	170c <PyModule_AddObject@plt+0xb8c>  // b.any
    16e8:	adrp	x0, 14000 <PyInit__heapq@@Base+0x12158>
    16ec:	ldr	x0, [x0, #4032]
    16f0:	ldr	x2, [x0]
    16f4:	adrp	x0, 2000 <PyInit__heapq@@Base+0x158>
    16f8:	add	x1, x0, #0x440
    16fc:	mov	x0, x2
    1700:	bl	b10 <PyErr_SetString@plt>
    1704:	mov	x0, #0x0                   	// #0
    1708:	b	1808 <PyModule_AddObject@plt+0xc88>
    170c:	ldr	x0, [sp, #32]
    1710:	ldr	x0, [x0, #16]
    1714:	cmp	x0, #0x0
    1718:	b.ne	172c <PyModule_AddObject@plt+0xbac>  // b.any
    171c:	ldr	x0, [sp, #24]
    1720:	bl	d20 <PyModule_AddObject@plt+0x1a0>
    1724:	ldr	x0, [sp, #24]
    1728:	b	1808 <PyModule_AddObject@plt+0xc88>
    172c:	ldr	x0, [sp, #32]
    1730:	ldr	x0, [x0, #24]
    1734:	ldr	x0, [x0]
    1738:	mov	w2, #0x0                   	// #0
    173c:	ldr	x1, [sp, #24]
    1740:	bl	b20 <PyObject_RichCompareBool@plt>
    1744:	str	w0, [sp, #60]
    1748:	ldr	w0, [sp, #60]
    174c:	cmp	w0, #0x0
    1750:	b.ge	175c <PyModule_AddObject@plt+0xbdc>  // b.tcont
    1754:	mov	x0, #0x0                   	// #0
    1758:	b	1808 <PyModule_AddObject@plt+0xc88>
    175c:	ldr	w0, [sp, #60]
    1760:	cmp	w0, #0x0
    1764:	b.ne	1778 <PyModule_AddObject@plt+0xbf8>  // b.any
    1768:	ldr	x0, [sp, #24]
    176c:	bl	d20 <PyModule_AddObject@plt+0x1a0>
    1770:	ldr	x0, [sp, #24]
    1774:	b	1808 <PyModule_AddObject@plt+0xc88>
    1778:	ldr	x0, [sp, #32]
    177c:	ldr	x0, [x0, #16]
    1780:	cmp	x0, #0x0
    1784:	b.ne	17ac <PyModule_AddObject@plt+0xc2c>  // b.any
    1788:	adrp	x0, 14000 <PyInit__heapq@@Base+0x12158>
    178c:	ldr	x0, [x0, #4056]
    1790:	ldr	x2, [x0]
    1794:	adrp	x0, 2000 <PyInit__heapq@@Base+0x158>
    1798:	add	x1, x0, #0x400
    179c:	mov	x0, x2
    17a0:	bl	b10 <PyErr_SetString@plt>
    17a4:	mov	x0, #0x0                   	// #0
    17a8:	b	1808 <PyModule_AddObject@plt+0xc88>
    17ac:	ldr	x0, [sp, #32]
    17b0:	ldr	x0, [x0, #24]
    17b4:	ldr	x0, [x0]
    17b8:	str	x0, [sp, #48]
    17bc:	ldr	x0, [sp, #24]
    17c0:	bl	d20 <PyModule_AddObject@plt+0x1a0>
    17c4:	ldr	x0, [sp, #32]
    17c8:	ldr	x0, [x0, #24]
    17cc:	ldr	x1, [sp, #24]
    17d0:	str	x1, [x0]
    17d4:	mov	x1, #0x0                   	// #0
    17d8:	ldr	x0, [sp, #32]
    17dc:	bl	117c <PyModule_AddObject@plt+0x5fc>
    17e0:	cmp	w0, #0x0
    17e4:	b.eq	1804 <PyModule_AddObject@plt+0xc84>  // b.none
    17e8:	ldr	x2, [sp, #48]
    17ec:	mov	w1, #0x11c                 	// #284
    17f0:	adrp	x0, 2000 <PyInit__heapq@@Base+0x158>
    17f4:	add	x0, x0, #0x460
    17f8:	bl	d48 <PyModule_AddObject@plt+0x1c8>
    17fc:	mov	x0, #0x0                   	// #0
    1800:	b	1808 <PyModule_AddObject@plt+0xc88>
    1804:	ldr	x0, [sp, #48]
    1808:	ldp	x29, x30, [sp], #64
    180c:	ret
    1810:	sub	sp, sp, #0x20
    1814:	str	x0, [sp, #8]
    1818:	str	wzr, [sp, #28]
    181c:	b	1838 <PyModule_AddObject@plt+0xcb8>
    1820:	ldr	x0, [sp, #8]
    1824:	asr	x0, x0, #1
    1828:	str	x0, [sp, #8]
    182c:	ldr	w0, [sp, #28]
    1830:	add	w0, w0, #0x1
    1834:	str	w0, [sp, #28]
    1838:	ldr	x0, [sp, #8]
    183c:	cmp	x0, #0x1
    1840:	b.gt	1820 <PyModule_AddObject@plt+0xca0>
    1844:	ldr	w0, [sp, #28]
    1848:	ldr	x1, [sp, #8]
    184c:	lsl	x0, x1, x0
    1850:	add	sp, sp, #0x20
    1854:	ret
    1858:	stp	x29, x30, [sp, #-80]!
    185c:	mov	x29, sp
    1860:	str	x0, [sp, #24]
    1864:	str	x1, [sp, #16]
    1868:	ldr	x0, [sp, #24]
    186c:	ldr	x0, [x0, #16]
    1870:	asr	x0, x0, #1
    1874:	str	x0, [sp, #56]
    1878:	ldr	x0, [sp, #56]
    187c:	add	x0, x0, #0x1
    1880:	bl	1810 <PyModule_AddObject@plt+0xc90>
    1884:	sub	x0, x0, #0x1
    1888:	str	x0, [sp, #48]
    188c:	ldr	x0, [sp, #56]
    1890:	asr	x0, x0, #1
    1894:	str	x0, [sp, #40]
    1898:	ldr	x0, [sp, #48]
    189c:	sub	x0, x0, #0x1
    18a0:	str	x0, [sp, #72]
    18a4:	b	1900 <PyModule_AddObject@plt+0xd80>
    18a8:	ldr	x0, [sp, #72]
    18ac:	str	x0, [sp, #64]
    18b0:	ldr	x2, [sp, #16]
    18b4:	ldr	x1, [sp, #64]
    18b8:	ldr	x0, [sp, #24]
    18bc:	blr	x2
    18c0:	cmp	w0, #0x0
    18c4:	b.eq	18d0 <PyModule_AddObject@plt+0xd50>  // b.none
    18c8:	mov	x0, #0x0                   	// #0
    18cc:	b	199c <PyModule_AddObject@plt+0xe1c>
    18d0:	ldr	x0, [sp, #64]
    18d4:	and	x0, x0, #0x1
    18d8:	cmp	x0, #0x0
    18dc:	b.eq	18f0 <PyModule_AddObject@plt+0xd70>  // b.none
    18e0:	ldr	x0, [sp, #64]
    18e4:	asr	x0, x0, #1
    18e8:	str	x0, [sp, #64]
    18ec:	b	18b0 <PyModule_AddObject@plt+0xd30>
    18f0:	nop
    18f4:	ldr	x0, [sp, #72]
    18f8:	sub	x0, x0, #0x1
    18fc:	str	x0, [sp, #72]
    1900:	ldr	x1, [sp, #72]
    1904:	ldr	x0, [sp, #40]
    1908:	cmp	x1, x0
    190c:	b.ge	18a8 <PyModule_AddObject@plt+0xd28>  // b.tcont
    1910:	ldr	x0, [sp, #56]
    1914:	sub	x0, x0, #0x1
    1918:	str	x0, [sp, #72]
    191c:	b	1978 <PyModule_AddObject@plt+0xdf8>
    1920:	ldr	x0, [sp, #72]
    1924:	str	x0, [sp, #64]
    1928:	ldr	x2, [sp, #16]
    192c:	ldr	x1, [sp, #64]
    1930:	ldr	x0, [sp, #24]
    1934:	blr	x2
    1938:	cmp	w0, #0x0
    193c:	b.eq	1948 <PyModule_AddObject@plt+0xdc8>  // b.none
    1940:	mov	x0, #0x0                   	// #0
    1944:	b	199c <PyModule_AddObject@plt+0xe1c>
    1948:	ldr	x0, [sp, #64]
    194c:	and	x0, x0, #0x1
    1950:	cmp	x0, #0x0
    1954:	b.eq	1968 <PyModule_AddObject@plt+0xde8>  // b.none
    1958:	ldr	x0, [sp, #64]
    195c:	asr	x0, x0, #1
    1960:	str	x0, [sp, #64]
    1964:	b	1928 <PyModule_AddObject@plt+0xda8>
    1968:	nop
    196c:	ldr	x0, [sp, #72]
    1970:	sub	x0, x0, #0x1
    1974:	str	x0, [sp, #72]
    1978:	ldr	x1, [sp, #72]
    197c:	ldr	x0, [sp, #48]
    1980:	cmp	x1, x0
    1984:	b.ge	1920 <PyModule_AddObject@plt+0xda0>  // b.tcont
    1988:	adrp	x0, 14000 <PyInit__heapq@@Base+0x12158>
    198c:	ldr	x0, [x0, #4048]
    1990:	bl	d20 <PyModule_AddObject@plt+0x1a0>
    1994:	adrp	x0, 14000 <PyInit__heapq@@Base+0x12158>
    1998:	ldr	x0, [x0, #4048]
    199c:	ldp	x29, x30, [sp], #80
    19a0:	ret
    19a4:	stp	x29, x30, [sp, #-48]!
    19a8:	mov	x29, sp
    19ac:	str	x0, [sp, #24]
    19b0:	str	x1, [sp, #16]
    19b4:	ldr	x0, [sp, #24]
    19b8:	ldr	x0, [x0, #8]
    19bc:	ldr	x0, [x0, #168]
    19c0:	and	x0, x0, #0x2000000
    19c4:	cmp	x0, #0x0
    19c8:	b.ne	19f0 <PyModule_AddObject@plt+0xe70>  // b.any
    19cc:	adrp	x0, 14000 <PyInit__heapq@@Base+0x12158>
    19d0:	ldr	x0, [x0, #4032]
    19d4:	ldr	x2, [x0]
    19d8:	adrp	x0, 2000 <PyInit__heapq@@Base+0x158>
    19dc:	add	x1, x0, #0x440
    19e0:	mov	x0, x2
    19e4:	bl	b10 <PyErr_SetString@plt>
    19e8:	mov	x0, #0x0                   	// #0
    19ec:	b	1a78 <PyModule_AddObject@plt+0xef8>
    19f0:	ldr	x0, [sp, #24]
    19f4:	ldr	x0, [x0, #16]
    19f8:	str	x0, [sp, #32]
    19fc:	ldr	x0, [sp, #32]
    1a00:	cmp	x0, #0x9c4
    1a04:	b.le	1a18 <PyModule_AddObject@plt+0xe98>
    1a08:	ldr	x1, [sp, #16]
    1a0c:	ldr	x0, [sp, #24]
    1a10:	bl	1858 <PyModule_AddObject@plt+0xcd8>
    1a14:	b	1a78 <PyModule_AddObject@plt+0xef8>
    1a18:	ldr	x0, [sp, #32]
    1a1c:	asr	x0, x0, #1
    1a20:	sub	x0, x0, #0x1
    1a24:	str	x0, [sp, #40]
    1a28:	b	1a58 <PyModule_AddObject@plt+0xed8>
    1a2c:	ldr	x2, [sp, #16]
    1a30:	ldr	x1, [sp, #40]
    1a34:	ldr	x0, [sp, #24]
    1a38:	blr	x2
    1a3c:	cmp	w0, #0x0
    1a40:	b.eq	1a4c <PyModule_AddObject@plt+0xecc>  // b.none
    1a44:	mov	x0, #0x0                   	// #0
    1a48:	b	1a78 <PyModule_AddObject@plt+0xef8>
    1a4c:	ldr	x0, [sp, #40]
    1a50:	sub	x0, x0, #0x1
    1a54:	str	x0, [sp, #40]
    1a58:	ldr	x0, [sp, #40]
    1a5c:	cmp	x0, #0x0
    1a60:	b.ge	1a2c <PyModule_AddObject@plt+0xeac>  // b.tcont
    1a64:	adrp	x0, 14000 <PyInit__heapq@@Base+0x12158>
    1a68:	ldr	x0, [x0, #4048]
    1a6c:	bl	d20 <PyModule_AddObject@plt+0x1a0>
    1a70:	adrp	x0, 14000 <PyInit__heapq@@Base+0x12158>
    1a74:	ldr	x0, [x0, #4048]
    1a78:	ldp	x29, x30, [sp], #48
    1a7c:	ret
    1a80:	stp	x29, x30, [sp, #-32]!
    1a84:	mov	x29, sp
    1a88:	str	x0, [sp, #24]
    1a8c:	str	x1, [sp, #16]
    1a90:	adrp	x0, 1000 <PyModule_AddObject@plt+0x480>
    1a94:	add	x1, x0, #0x17c
    1a98:	ldr	x0, [sp, #16]
    1a9c:	bl	19a4 <PyModule_AddObject@plt+0xe24>
    1aa0:	ldp	x29, x30, [sp], #32
    1aa4:	ret
    1aa8:	stp	x29, x30, [sp, #-96]!
    1aac:	mov	x29, sp
    1ab0:	str	x0, [sp, #40]
    1ab4:	str	x1, [sp, #32]
    1ab8:	str	x2, [sp, #24]
    1abc:	ldr	x0, [sp, #40]
    1ac0:	ldr	x0, [x0, #16]
    1ac4:	str	x0, [sp, #72]
    1ac8:	ldr	x1, [sp, #24]
    1acc:	ldr	x0, [sp, #72]
    1ad0:	cmp	x1, x0
    1ad4:	b.lt	1afc <PyModule_AddObject@plt+0xf7c>  // b.tstop
    1ad8:	adrp	x0, 14000 <PyInit__heapq@@Base+0x12158>
    1adc:	ldr	x0, [x0, #4056]
    1ae0:	ldr	x2, [x0]
    1ae4:	adrp	x0, 2000 <PyInit__heapq@@Base+0x158>
    1ae8:	add	x1, x0, #0x400
    1aec:	mov	x0, x2
    1af0:	bl	b10 <PyErr_SetString@plt>
    1af4:	mov	w0, #0xffffffff            	// #-1
    1af8:	b	1c48 <PyModule_AddObject@plt+0x10c8>
    1afc:	ldr	x0, [sp, #40]
    1b00:	ldr	x0, [x0, #24]
    1b04:	str	x0, [sp, #80]
    1b08:	ldr	x0, [sp, #24]
    1b0c:	lsl	x0, x0, #3
    1b10:	ldr	x1, [sp, #80]
    1b14:	add	x0, x1, x0
    1b18:	ldr	x0, [x0]
    1b1c:	str	x0, [sp, #88]
    1b20:	b	1c2c <PyModule_AddObject@plt+0x10ac>
    1b24:	ldr	x0, [sp, #24]
    1b28:	sub	x0, x0, #0x1
    1b2c:	asr	x0, x0, #1
    1b30:	str	x0, [sp, #64]
    1b34:	ldr	x0, [sp, #64]
    1b38:	lsl	x0, x0, #3
    1b3c:	ldr	x1, [sp, #80]
    1b40:	add	x0, x1, x0
    1b44:	ldr	x0, [x0]
    1b48:	str	x0, [sp, #56]
    1b4c:	mov	w2, #0x0                   	// #0
    1b50:	ldr	x1, [sp, #88]
    1b54:	ldr	x0, [sp, #56]
    1b58:	bl	b20 <PyObject_RichCompareBool@plt>
    1b5c:	str	w0, [sp, #52]
    1b60:	ldr	w0, [sp, #52]
    1b64:	cmp	w0, #0x0
    1b68:	b.ge	1b74 <PyModule_AddObject@plt+0xff4>  // b.tcont
    1b6c:	mov	w0, #0xffffffff            	// #-1
    1b70:	b	1c48 <PyModule_AddObject@plt+0x10c8>
    1b74:	ldr	x0, [sp, #40]
    1b78:	ldr	x0, [x0, #16]
    1b7c:	ldr	x1, [sp, #72]
    1b80:	cmp	x1, x0
    1b84:	b.eq	1bac <PyModule_AddObject@plt+0x102c>  // b.none
    1b88:	adrp	x0, 14000 <PyInit__heapq@@Base+0x12158>
    1b8c:	ldr	x0, [x0, #4024]
    1b90:	ldr	x2, [x0]
    1b94:	adrp	x0, 2000 <PyInit__heapq@@Base+0x158>
    1b98:	add	x1, x0, #0x418
    1b9c:	mov	x0, x2
    1ba0:	bl	b10 <PyErr_SetString@plt>
    1ba4:	mov	w0, #0xffffffff            	// #-1
    1ba8:	b	1c48 <PyModule_AddObject@plt+0x10c8>
    1bac:	ldr	w0, [sp, #52]
    1bb0:	cmp	w0, #0x0
    1bb4:	b.eq	1c40 <PyModule_AddObject@plt+0x10c0>  // b.none
    1bb8:	ldr	x0, [sp, #40]
    1bbc:	ldr	x0, [x0, #24]
    1bc0:	str	x0, [sp, #80]
    1bc4:	ldr	x0, [sp, #64]
    1bc8:	lsl	x0, x0, #3
    1bcc:	ldr	x1, [sp, #80]
    1bd0:	add	x0, x1, x0
    1bd4:	ldr	x0, [x0]
    1bd8:	str	x0, [sp, #56]
    1bdc:	ldr	x0, [sp, #24]
    1be0:	lsl	x0, x0, #3
    1be4:	ldr	x1, [sp, #80]
    1be8:	add	x0, x1, x0
    1bec:	ldr	x0, [x0]
    1bf0:	str	x0, [sp, #88]
    1bf4:	ldr	x0, [sp, #64]
    1bf8:	lsl	x0, x0, #3
    1bfc:	ldr	x1, [sp, #80]
    1c00:	add	x0, x1, x0
    1c04:	ldr	x1, [sp, #88]
    1c08:	str	x1, [x0]
    1c0c:	ldr	x0, [sp, #24]
    1c10:	lsl	x0, x0, #3
    1c14:	ldr	x1, [sp, #80]
    1c18:	add	x0, x1, x0
    1c1c:	ldr	x1, [sp, #56]
    1c20:	str	x1, [x0]
    1c24:	ldr	x0, [sp, #64]
    1c28:	str	x0, [sp, #24]
    1c2c:	ldr	x1, [sp, #24]
    1c30:	ldr	x0, [sp, #32]
    1c34:	cmp	x1, x0
    1c38:	b.gt	1b24 <PyModule_AddObject@plt+0xfa4>
    1c3c:	b	1c44 <PyModule_AddObject@plt+0x10c4>
    1c40:	nop
    1c44:	mov	w0, #0x0                   	// #0
    1c48:	ldp	x29, x30, [sp], #96
    1c4c:	ret
    1c50:	stp	x29, x30, [sp, #-96]!
    1c54:	mov	x29, sp
    1c58:	str	x0, [sp, #24]
    1c5c:	str	x1, [sp, #16]
    1c60:	ldr	x0, [sp, #24]
    1c64:	ldr	x0, [x0, #16]
    1c68:	str	x0, [sp, #72]
    1c6c:	ldr	x0, [sp, #16]
    1c70:	str	x0, [sp, #64]
    1c74:	ldr	x1, [sp, #16]
    1c78:	ldr	x0, [sp, #72]
    1c7c:	cmp	x1, x0
    1c80:	b.lt	1ca8 <PyModule_AddObject@plt+0x1128>  // b.tstop
    1c84:	adrp	x0, 14000 <PyInit__heapq@@Base+0x12158>
    1c88:	ldr	x0, [x0, #4056]
    1c8c:	ldr	x2, [x0]
    1c90:	adrp	x0, 2000 <PyInit__heapq@@Base+0x158>
    1c94:	add	x1, x0, #0x400
    1c98:	mov	x0, x2
    1c9c:	bl	b10 <PyErr_SetString@plt>
    1ca0:	mov	w0, #0xffffffff            	// #-1
    1ca4:	b	1e20 <PyModule_AddObject@plt+0x12a0>
    1ca8:	ldr	x0, [sp, #24]
    1cac:	ldr	x0, [x0, #24]
    1cb0:	str	x0, [sp, #80]
    1cb4:	ldr	x0, [sp, #72]
    1cb8:	asr	x0, x0, #1
    1cbc:	str	x0, [sp, #56]
    1cc0:	b	1e00 <PyModule_AddObject@plt+0x1280>
    1cc4:	ldr	x0, [sp, #16]
    1cc8:	lsl	x0, x0, #1
    1ccc:	add	x0, x0, #0x1
    1cd0:	str	x0, [sp, #88]
    1cd4:	ldr	x0, [sp, #88]
    1cd8:	add	x0, x0, #0x1
    1cdc:	ldr	x1, [sp, #72]
    1ce0:	cmp	x1, x0
    1ce4:	b.le	1d98 <PyModule_AddObject@plt+0x1218>
    1ce8:	ldr	x0, [sp, #88]
    1cec:	add	x0, x0, #0x1
    1cf0:	lsl	x0, x0, #3
    1cf4:	ldr	x1, [sp, #80]
    1cf8:	add	x0, x1, x0
    1cfc:	ldr	x3, [x0]
    1d00:	ldr	x0, [sp, #88]
    1d04:	lsl	x0, x0, #3
    1d08:	ldr	x1, [sp, #80]
    1d0c:	add	x0, x1, x0
    1d10:	ldr	x0, [x0]
    1d14:	mov	w2, #0x0                   	// #0
    1d18:	mov	x1, x0
    1d1c:	mov	x0, x3
    1d20:	bl	b20 <PyObject_RichCompareBool@plt>
    1d24:	str	w0, [sp, #52]
    1d28:	ldr	w0, [sp, #52]
    1d2c:	cmp	w0, #0x0
    1d30:	b.ge	1d3c <PyModule_AddObject@plt+0x11bc>  // b.tcont
    1d34:	mov	w0, #0xffffffff            	// #-1
    1d38:	b	1e20 <PyModule_AddObject@plt+0x12a0>
    1d3c:	ldr	w0, [sp, #52]
    1d40:	eor	w0, w0, #0x1
    1d44:	mov	w0, w0
    1d48:	ldr	x1, [sp, #88]
    1d4c:	add	x0, x1, x0
    1d50:	str	x0, [sp, #88]
    1d54:	ldr	x0, [sp, #24]
    1d58:	ldr	x0, [x0, #24]
    1d5c:	str	x0, [sp, #80]
    1d60:	ldr	x0, [sp, #24]
    1d64:	ldr	x0, [x0, #16]
    1d68:	ldr	x1, [sp, #72]
    1d6c:	cmp	x1, x0
    1d70:	b.eq	1d98 <PyModule_AddObject@plt+0x1218>  // b.none
    1d74:	adrp	x0, 14000 <PyInit__heapq@@Base+0x12158>
    1d78:	ldr	x0, [x0, #4024]
    1d7c:	ldr	x2, [x0]
    1d80:	adrp	x0, 2000 <PyInit__heapq@@Base+0x158>
    1d84:	add	x1, x0, #0x418
    1d88:	mov	x0, x2
    1d8c:	bl	b10 <PyErr_SetString@plt>
    1d90:	mov	w0, #0xffffffff            	// #-1
    1d94:	b	1e20 <PyModule_AddObject@plt+0x12a0>
    1d98:	ldr	x0, [sp, #88]
    1d9c:	lsl	x0, x0, #3
    1da0:	ldr	x1, [sp, #80]
    1da4:	add	x0, x1, x0
    1da8:	ldr	x0, [x0]
    1dac:	str	x0, [sp, #40]
    1db0:	ldr	x0, [sp, #16]
    1db4:	lsl	x0, x0, #3
    1db8:	ldr	x1, [sp, #80]
    1dbc:	add	x0, x1, x0
    1dc0:	ldr	x0, [x0]
    1dc4:	str	x0, [sp, #32]
    1dc8:	ldr	x0, [sp, #88]
    1dcc:	lsl	x0, x0, #3
    1dd0:	ldr	x1, [sp, #80]
    1dd4:	add	x0, x1, x0
    1dd8:	ldr	x1, [sp, #32]
    1ddc:	str	x1, [x0]
    1de0:	ldr	x0, [sp, #16]
    1de4:	lsl	x0, x0, #3
    1de8:	ldr	x1, [sp, #80]
    1dec:	add	x0, x1, x0
    1df0:	ldr	x1, [sp, #40]
    1df4:	str	x1, [x0]
    1df8:	ldr	x0, [sp, #88]
    1dfc:	str	x0, [sp, #16]
    1e00:	ldr	x1, [sp, #16]
    1e04:	ldr	x0, [sp, #56]
    1e08:	cmp	x1, x0
    1e0c:	b.lt	1cc4 <PyModule_AddObject@plt+0x1144>  // b.tstop
    1e10:	ldr	x2, [sp, #16]
    1e14:	ldr	x1, [sp, #64]
    1e18:	ldr	x0, [sp, #24]
    1e1c:	bl	1aa8 <PyModule_AddObject@plt+0xf28>
    1e20:	ldp	x29, x30, [sp], #96
    1e24:	ret
    1e28:	stp	x29, x30, [sp, #-32]!
    1e2c:	mov	x29, sp
    1e30:	str	x0, [sp, #24]
    1e34:	str	x1, [sp, #16]
    1e38:	adrp	x0, 1000 <PyModule_AddObject@plt+0x480>
    1e3c:	add	x1, x0, #0xc50
    1e40:	ldr	x0, [sp, #16]
    1e44:	bl	1408 <PyModule_AddObject@plt+0x888>
    1e48:	ldp	x29, x30, [sp], #32
    1e4c:	ret
    1e50:	stp	x29, x30, [sp, #-48]!
    1e54:	mov	x29, sp
    1e58:	str	x0, [sp, #40]
    1e5c:	str	x1, [sp, #32]
    1e60:	str	x2, [sp, #24]
    1e64:	adrp	x0, 1000 <PyModule_AddObject@plt+0x480>
    1e68:	add	x2, x0, #0xc50
    1e6c:	ldr	x1, [sp, #24]
    1e70:	ldr	x0, [sp, #32]
    1e74:	bl	15a0 <PyModule_AddObject@plt+0xa20>
    1e78:	ldp	x29, x30, [sp], #48
    1e7c:	ret
    1e80:	stp	x29, x30, [sp, #-32]!
    1e84:	mov	x29, sp
    1e88:	str	x0, [sp, #24]
    1e8c:	str	x1, [sp, #16]
    1e90:	adrp	x0, 1000 <PyModule_AddObject@plt+0x480>
    1e94:	add	x1, x0, #0xc50
    1e98:	ldr	x0, [sp, #16]
    1e9c:	bl	19a4 <PyModule_AddObject@plt+0xe24>
    1ea0:	ldp	x29, x30, [sp], #32
    1ea4:	ret

0000000000001ea8 <PyInit__heapq@@Base>:
    1ea8:	stp	x29, x30, [sp, #-32]!
    1eac:	mov	x29, sp
    1eb0:	mov	w1, #0x3f5                 	// #1013
    1eb4:	adrp	x0, 15000 <PyInit__heapq@@Base+0x13158>
    1eb8:	add	x0, x0, #0x180
    1ebc:	bl	b60 <PyModule_Create2@plt>
    1ec0:	str	x0, [sp, #24]
    1ec4:	ldr	x0, [sp, #24]
    1ec8:	cmp	x0, #0x0
    1ecc:	b.ne	1ed8 <PyInit__heapq@@Base+0x30>  // b.any
    1ed0:	mov	x0, #0x0                   	// #0
    1ed4:	b	1f08 <PyInit__heapq@@Base+0x60>
    1ed8:	mov	x2, #0x0                   	// #0
    1edc:	mov	x1, #0x126f                	// #4719
    1ee0:	adrp	x0, 2000 <PyInit__heapq@@Base+0x158>
    1ee4:	add	x0, x0, #0x9b0
    1ee8:	bl	b70 <PyUnicode_DecodeUTF8@plt>
    1eec:	str	x0, [sp, #16]
    1ef0:	ldr	x2, [sp, #16]
    1ef4:	adrp	x0, 3000 <PyInit__heapq@@Base+0x1158>
    1ef8:	add	x1, x0, #0xc28
    1efc:	ldr	x0, [sp, #24]
    1f00:	bl	b80 <PyModule_AddObject@plt>
    1f04:	ldr	x0, [sp, #24]
    1f08:	ldp	x29, x30, [sp], #32
    1f0c:	ret

Disassembly of section .fini:

0000000000001f10 <.fini>:
    1f10:	stp	x29, x30, [sp, #-16]!
    1f14:	mov	x29, sp
    1f18:	ldp	x29, x30, [sp], #16
    1f1c:	ret
