
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-random-seed_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000211a38 <_start>:
  211a38:	mov	x29, #0x0                   	// #0
  211a3c:	mov	x30, #0x0                   	// #0
  211a40:	mov	x5, x0
  211a44:	ldr	x1, [sp]
  211a48:	add	x2, sp, #0x8
  211a4c:	mov	x6, sp
  211a50:	movz	x0, #0x0, lsl #48
  211a54:	movk	x0, #0x0, lsl #32
  211a58:	movk	x0, #0x21, lsl #16
  211a5c:	movk	x0, #0x1b88
  211a60:	movz	x3, #0x0, lsl #48
  211a64:	movk	x3, #0x0, lsl #32
  211a68:	movk	x3, #0x21, lsl #16
  211a6c:	movk	x3, #0x2ba0
  211a70:	movz	x4, #0x0, lsl #48
  211a74:	movk	x4, #0x0, lsl #32
  211a78:	movk	x4, #0x21, lsl #16
  211a7c:	movk	x4, #0x2c20
  211a80:	bl	212c80 <__libc_start_main@plt>
  211a84:	bl	212c90 <abort@plt>

0000000000211a88 <call_weak_fn>:
  211a88:	adrp	x0, 223000 <_DYNAMIC+0x110>
  211a8c:	ldr	x0, [x0, #192]
  211a90:	cbz	x0, 211a98 <call_weak_fn+0x10>
  211a94:	b	212ca0 <__gmon_start__@plt>
  211a98:	ret

0000000000211a9c <deregister_tm_clones>:
  211a9c:	adrp	x0, 233000 <_DYNAMIC+0x10110>
  211aa0:	add	x0, x0, #0x220
  211aa4:	adrp	x1, 233000 <_DYNAMIC+0x10110>
  211aa8:	add	x1, x1, #0x220
  211aac:	cmp	x0, x1
  211ab0:	b.eq	211ae4 <deregister_tm_clones+0x48>  // b.none
  211ab4:	stp	x29, x30, [sp, #-32]!
  211ab8:	mov	x29, sp
  211abc:	adrp	x0, 201000 <__FRAME_END__-0x928>
  211ac0:	ldr	x0, [x0, #72]
  211ac4:	str	x0, [sp, #24]
  211ac8:	mov	x1, x0
  211acc:	cbz	x1, 211adc <deregister_tm_clones+0x40>
  211ad0:	adrp	x0, 233000 <_DYNAMIC+0x10110>
  211ad4:	add	x0, x0, #0x220
  211ad8:	blr	x1
  211adc:	ldp	x29, x30, [sp], #32
  211ae0:	ret
  211ae4:	ret

0000000000211ae8 <register_tm_clones>:
  211ae8:	adrp	x0, 233000 <_DYNAMIC+0x10110>
  211aec:	add	x0, x0, #0x220
  211af0:	adrp	x1, 233000 <_DYNAMIC+0x10110>
  211af4:	add	x1, x1, #0x220
  211af8:	sub	x0, x0, x1
  211afc:	lsr	x1, x0, #63
  211b00:	add	x0, x1, x0, asr #3
  211b04:	cmp	xzr, x0, asr #1
  211b08:	b.eq	211b40 <register_tm_clones+0x58>  // b.none
  211b0c:	stp	x29, x30, [sp, #-32]!
  211b10:	mov	x29, sp
  211b14:	asr	x1, x0, #1
  211b18:	adrp	x0, 201000 <__FRAME_END__-0x928>
  211b1c:	ldr	x0, [x0, #80]
  211b20:	str	x0, [sp, #24]
  211b24:	mov	x2, x0
  211b28:	cbz	x2, 211b38 <register_tm_clones+0x50>
  211b2c:	adrp	x0, 233000 <_DYNAMIC+0x10110>
  211b30:	add	x0, x0, #0x220
  211b34:	blr	x2
  211b38:	ldp	x29, x30, [sp], #32
  211b3c:	ret
  211b40:	ret

0000000000211b44 <__do_global_dtors_aux>:
  211b44:	adrp	x0, 233000 <_DYNAMIC+0x10110>
  211b48:	ldrb	w0, [x0, #544]
  211b4c:	cbnz	w0, 211b70 <__do_global_dtors_aux+0x2c>
  211b50:	stp	x29, x30, [sp, #-16]!
  211b54:	mov	x29, sp
  211b58:	bl	211a9c <deregister_tm_clones>
  211b5c:	adrp	x0, 233000 <_DYNAMIC+0x10110>
  211b60:	mov	w1, #0x1                   	// #1
  211b64:	strb	w1, [x0, #544]
  211b68:	ldp	x29, x30, [sp], #16
  211b6c:	ret
  211b70:	ret

0000000000211b74 <frame_dummy>:
  211b74:	stp	x29, x30, [sp, #-16]!
  211b78:	mov	x29, sp
  211b7c:	bl	211ae8 <register_tm_clones>
  211b80:	ldp	x29, x30, [sp], #16
  211b84:	ret

0000000000211b88 <main>:
  211b88:	stp	x29, x30, [sp, #-32]!
  211b8c:	stp	x20, x19, [sp, #16]
  211b90:	mov	x29, sp
  211b94:	mov	x19, x1
  211b98:	mov	w20, w0
  211b9c:	bl	211bd4 <save_argc_argv>
  211ba0:	mov	w0, w20
  211ba4:	mov	x1, x19
  211ba8:	bl	211be8 <run>
  211bac:	mov	w19, w0
  211bb0:	bl	212cb0 <ask_password_agent_close@plt>
  211bb4:	bl	212cc0 <polkit_agent_close@plt>
  211bb8:	bl	212cd0 <pager_close@plt>
  211bbc:	bl	212ce0 <mac_selinux_finish@plt>
  211bc0:	bl	2127b8 <static_destruct>
  211bc4:	lsr	w0, w19, #31
  211bc8:	ldp	x20, x19, [sp, #16]
  211bcc:	ldp	x29, x30, [sp], #32
  211bd0:	ret

0000000000211bd4 <save_argc_argv>:
  211bd4:	adrp	x8, 233000 <_DYNAMIC+0x10110>
  211bd8:	adrp	x9, 233000 <_DYNAMIC+0x10110>
  211bdc:	str	w0, [x8, #552]
  211be0:	str	x1, [x9, #560]
  211be4:	ret

0000000000211be8 <run>:
  211be8:	sub	sp, sp, #0x110
  211bec:	stp	x29, x30, [sp, #176]
  211bf0:	add	x29, sp, #0xb0
  211bf4:	mov	w8, #0xffffffff            	// #-1
  211bf8:	stp	x28, x27, [sp, #192]
  211bfc:	stp	x26, x25, [sp, #208]
  211c00:	stp	x24, x23, [sp, #224]
  211c04:	stp	x22, x21, [sp, #240]
  211c08:	stp	x20, x19, [sp, #256]
  211c0c:	mov	x19, x1
  211c10:	mov	w20, w0
  211c14:	stp	w8, w8, [x29, #-8]
  211c18:	stur	xzr, [x29, #-16]
  211c1c:	bl	212cf0 <log_setup_service@plt>
  211c20:	cmp	w20, #0x2
  211c24:	b.ne	211cbc <run+0xd4>  // b.any
  211c28:	mov	w0, #0x12                  	// #18
  211c2c:	bl	212d00 <umask@plt>
  211c30:	bl	212d10 <random_pool_size@plt>
  211c34:	mov	x21, x0
  211c38:	adrp	x0, 201000 <__FRAME_END__-0x928>
  211c3c:	add	x0, x0, #0x404
  211c40:	mov	w1, #0x1ed                 	// #493
  211c44:	bl	212d20 <mkdir_parents@plt>
  211c48:	tbnz	w0, #31, 211d00 <run+0x118>
  211c4c:	ldr	x19, [x19, #8]
  211c50:	adrp	x1, 201000 <__FRAME_END__-0x928>
  211c54:	add	x1, x1, #0x761
  211c58:	mov	x0, x19
  211c5c:	bl	212d30 <strcmp@plt>
  211c60:	cbz	w0, 211d3c <run+0x154>
  211c64:	adrp	x1, 201000 <__FRAME_END__-0x928>
  211c68:	add	x1, x1, #0x49c
  211c6c:	mov	x0, x19
  211c70:	bl	212d30 <strcmp@plt>
  211c74:	cbz	w0, 211d7c <run+0x194>
  211c78:	mov	w0, wzr
  211c7c:	bl	212d40 <log_get_max_level_realm@plt>
  211c80:	cmp	w0, #0x3
  211c84:	b.lt	211cf8 <run+0x110>  // b.tstop
  211c88:	adrp	x2, 201000 <__FRAME_END__-0x928>
  211c8c:	adrp	x4, 201000 <__FRAME_END__-0x928>
  211c90:	adrp	x5, 201000 <__FRAME_END__-0x928>
  211c94:	mov	w1, #0x16                  	// #22
  211c98:	add	x2, x2, #0xcd
  211c9c:	add	x4, x4, #0x6c4
  211ca0:	add	x5, x5, #0x6b1
  211ca4:	mov	w0, #0x3                   	// #3
  211ca8:	movk	w1, #0x4000, lsl #16
  211cac:	mov	w3, #0xac                  	// #172
  211cb0:	mov	x6, x19
  211cb4:	bl	212d50 <log_internal_realm@plt>
  211cb8:	b	21205c <run+0x474>
  211cbc:	mov	w0, wzr
  211cc0:	bl	212d40 <log_get_max_level_realm@plt>
  211cc4:	cmp	w0, #0x3
  211cc8:	b.lt	211cf8 <run+0x110>  // b.tstop
  211ccc:	adrp	x2, 201000 <__FRAME_END__-0x928>
  211cd0:	adrp	x4, 201000 <__FRAME_END__-0x928>
  211cd4:	adrp	x5, 201000 <__FRAME_END__-0x928>
  211cd8:	mov	w1, #0x16                  	// #22
  211cdc:	add	x2, x2, #0xcd
  211ce0:	add	x4, x4, #0x6c4
  211ce4:	add	x5, x5, #0x7a8
  211ce8:	mov	w0, #0x3                   	// #3
  211cec:	movk	w1, #0x4000, lsl #16
  211cf0:	mov	w3, #0x74                  	// #116
  211cf4:	b	212058 <run+0x470>
  211cf8:	mov	w19, #0xffffffea            	// #-22
  211cfc:	b	212060 <run+0x478>
  211d00:	mov	w20, w0
  211d04:	mov	w0, wzr
  211d08:	bl	212d40 <log_get_max_level_realm@plt>
  211d0c:	cmp	w0, #0x3
  211d10:	b.lt	211d6c <run+0x184>  // b.tstop
  211d14:	adrp	x2, 201000 <__FRAME_END__-0x928>
  211d18:	adrp	x4, 201000 <__FRAME_END__-0x928>
  211d1c:	adrp	x5, 201000 <__FRAME_END__-0x928>
  211d20:	add	x2, x2, #0xcd
  211d24:	add	x4, x4, #0x6c4
  211d28:	add	x5, x5, #0x82a
  211d2c:	mov	w0, #0x3                   	// #3
  211d30:	mov	w3, #0x7c                  	// #124
  211d34:	mov	w1, w20
  211d38:	b	212058 <run+0x470>
  211d3c:	mov	w22, #0x100                 	// #256
  211d40:	movk	w22, #0x8, lsl #16
  211d44:	mov	w8, #0x42                  	// #66
  211d48:	adrp	x0, 201000 <__FRAME_END__-0x928>
  211d4c:	orr	w1, w22, w8
  211d50:	add	x0, x0, #0x404
  211d54:	mov	w2, #0x180                 	// #384
  211d58:	bl	212d60 <open64@plt>
  211d5c:	stur	w0, [x29, #-4]
  211d60:	tbnz	w0, #31, 211dc8 <run+0x1e0>
  211d64:	mov	w27, #0x1                   	// #1
  211d68:	b	211f20 <run+0x338>
  211d6c:	mov	w8, wzr
  211d70:	neg	w9, w20
  211d74:	sub	w19, w8, w9, uxtb
  211d78:	b	212060 <run+0x478>
  211d7c:	adrp	x0, 201000 <__FRAME_END__-0x928>
  211d80:	mov	w1, #0x100                 	// #256
  211d84:	mov	w19, #0x100                 	// #256
  211d88:	add	x0, x0, #0x2b8
  211d8c:	movk	w1, #0x8, lsl #16
  211d90:	movk	w19, #0x8, lsl #16
  211d94:	bl	212d60 <open64@plt>
  211d98:	stur	w0, [x29, #-8]
  211d9c:	tbnz	w0, #31, 211df8 <run+0x210>
  211da0:	adrp	x0, 201000 <__FRAME_END__-0x928>
  211da4:	add	w1, w19, #0x41
  211da8:	add	x0, x0, #0x404
  211dac:	mov	w2, #0x180                 	// #384
  211db0:	bl	212d60 <open64@plt>
  211db4:	stur	w0, [x29, #-4]
  211db8:	tbnz	w0, #31, 211e34 <run+0x24c>
  211dbc:	mov	w26, wzr
  211dc0:	mov	w27, #0x1                   	// #1
  211dc4:	b	211f40 <run+0x358>
  211dc8:	bl	212d70 <__errno_location@plt>
  211dcc:	ldr	w24, [x0]
  211dd0:	mov	x20, x0
  211dd4:	adrp	x0, 201000 <__FRAME_END__-0x928>
  211dd8:	mov	w1, #0x100                 	// #256
  211ddc:	add	x0, x0, #0x404
  211de0:	movk	w1, #0x8, lsl #16
  211de4:	bl	212d60 <open64@plt>
  211de8:	stur	w0, [x29, #-4]
  211dec:	tbnz	w0, #31, 211e70 <run+0x288>
  211df0:	mov	w8, #0x1                   	// #1
  211df4:	b	211f18 <run+0x330>
  211df8:	bl	212d70 <__errno_location@plt>
  211dfc:	ldr	w19, [x0]
  211e00:	mov	w0, wzr
  211e04:	bl	212d40 <log_get_max_level_realm@plt>
  211e08:	cmp	w0, #0x3
  211e0c:	b.lt	21209c <run+0x4b4>  // b.tstop
  211e10:	adrp	x2, 201000 <__FRAME_END__-0x928>
  211e14:	adrp	x4, 201000 <__FRAME_END__-0x928>
  211e18:	adrp	x5, 201000 <__FRAME_END__-0x928>
  211e1c:	add	x2, x2, #0xcd
  211e20:	add	x4, x4, #0x6c4
  211e24:	add	x5, x5, #0x736
  211e28:	mov	w0, #0x3                   	// #3
  211e2c:	mov	w3, #0xa1                  	// #161
  211e30:	b	212054 <run+0x46c>
  211e34:	bl	212d70 <__errno_location@plt>
  211e38:	ldr	w19, [x0]
  211e3c:	mov	w0, wzr
  211e40:	bl	212d40 <log_get_max_level_realm@plt>
  211e44:	cmp	w0, #0x3
  211e48:	b.lt	21209c <run+0x4b4>  // b.tstop
  211e4c:	adrp	x2, 201000 <__FRAME_END__-0x928>
  211e50:	adrp	x4, 201000 <__FRAME_END__-0x928>
  211e54:	adrp	x5, 201000 <__FRAME_END__-0x928>
  211e58:	add	x2, x2, #0xcd
  211e5c:	add	x4, x4, #0x6c4
  211e60:	add	x5, x5, #0x7cc
  211e64:	mov	w0, #0x3                   	// #3
  211e68:	mov	w3, #0xa5                  	// #165
  211e6c:	b	212054 <run+0x46c>
  211e70:	ldr	w23, [x20]
  211e74:	mov	w8, #0x3                   	// #3
  211e78:	mov	w9, #0x7                   	// #7
  211e7c:	mov	w0, wzr
  211e80:	cmp	w23, #0x2
  211e84:	csel	w19, w9, w8, eq  // eq = none
  211e88:	bl	212d40 <log_get_max_level_realm@plt>
  211e8c:	cmp	w0, w19
  211e90:	b.lt	211ebc <run+0x2d4>  // b.tstop
  211e94:	adrp	x2, 201000 <__FRAME_END__-0x928>
  211e98:	adrp	x4, 201000 <__FRAME_END__-0x928>
  211e9c:	adrp	x5, 201000 <__FRAME_END__-0x928>
  211ea0:	neg	w1, w24
  211ea4:	add	x2, x2, #0xcd
  211ea8:	add	x4, x4, #0x6c4
  211eac:	add	x5, x5, #0x398
  211eb0:	mov	w3, #0x8e                  	// #142
  211eb4:	mov	w0, w19
  211eb8:	bl	212d50 <log_internal_realm@plt>
  211ebc:	ldr	w20, [x20]
  211ec0:	mov	w0, wzr
  211ec4:	bl	212d40 <log_get_max_level_realm@plt>
  211ec8:	cmp	w0, w19
  211ecc:	b.ge	211ee4 <run+0x2fc>  // b.tcont
  211ed0:	cmp	w20, #0x0
  211ed4:	mov	w8, wzr
  211ed8:	cneg	w9, w20, mi  // mi = first
  211edc:	sub	w0, w8, w9, uxtb
  211ee0:	b	211f0c <run+0x324>
  211ee4:	adrp	x2, 201000 <__FRAME_END__-0x928>
  211ee8:	adrp	x4, 201000 <__FRAME_END__-0x928>
  211eec:	adrp	x5, 201000 <__FRAME_END__-0x928>
  211ef0:	add	x2, x2, #0xcd
  211ef4:	add	x4, x4, #0x6c4
  211ef8:	add	x5, x5, #0x766
  211efc:	mov	w3, #0x90                  	// #144
  211f00:	mov	w0, w19
  211f04:	mov	w1, w20
  211f08:	bl	212d50 <log_internal_realm@plt>
  211f0c:	cmp	w23, #0x2
  211f10:	mov	w8, wzr
  211f14:	csel	w19, wzr, w0, eq  // eq = none
  211f18:	cbz	w8, 212060 <run+0x478>
  211f1c:	mov	w27, wzr
  211f20:	adrp	x0, 201000 <__FRAME_END__-0x928>
  211f24:	add	w1, w22, #0x2
  211f28:	add	x0, x0, #0x2b8
  211f2c:	mov	w2, #0x180                 	// #384
  211f30:	bl	212d60 <open64@plt>
  211f34:	stur	w0, [x29, #-8]
  211f38:	tbnz	w0, #31, 211fe0 <run+0x3f8>
  211f3c:	mov	w26, #0x1                   	// #1
  211f40:	ldur	w20, [x29, #-4]
  211f44:	add	x1, sp, #0x20
  211f48:	mov	w0, w20
  211f4c:	bl	212c28 <fstat64>
  211f50:	tbnz	w0, #31, 21201c <run+0x434>
  211f54:	ldr	x8, [sp, #80]
  211f58:	mov	w9, #0xa00000              	// #10485760
  211f5c:	cmp	x8, #0xa00, lsl #12
  211f60:	csel	x9, x8, x9, lt  // lt = tstop
  211f64:	cmp	x8, x21
  211f68:	csel	x22, x9, x21, hi  // hi = pmore
  211f6c:	mov	x0, x22
  211f70:	bl	212d80 <malloc@plt>
  211f74:	stur	x0, [x29, #-16]
  211f78:	cbz	x0, 2120b0 <run+0x4c8>
  211f7c:	mov	x21, x0
  211f80:	cbz	w26, 2123e8 <run+0x800>
  211f84:	add	x0, sp, #0x10
  211f88:	bl	212d90 <sd_id128_get_machine@plt>
  211f8c:	tbnz	w0, #31, 2120cc <run+0x4e4>
  211f90:	ldur	w0, [x29, #-8]
  211f94:	add	x1, sp, #0x10
  211f98:	mov	w2, #0x10                  	// #16
  211f9c:	mov	w3, wzr
  211fa0:	bl	212da0 <loop_write@plt>
  211fa4:	tbz	w0, #31, 212108 <run+0x520>
  211fa8:	mov	w23, w0
  211fac:	mov	w0, wzr
  211fb0:	bl	212d40 <log_get_max_level_realm@plt>
  211fb4:	cmp	w0, #0x7
  211fb8:	b.lt	212108 <run+0x520>  // b.tstop
  211fbc:	adrp	x2, 201000 <__FRAME_END__-0x928>
  211fc0:	adrp	x4, 201000 <__FRAME_END__-0x928>
  211fc4:	adrp	x5, 201000 <__FRAME_END__-0x928>
  211fc8:	add	x2, x2, #0xcd
  211fcc:	add	x4, x4, #0x6c4
  211fd0:	add	x5, x5, #0x42e
  211fd4:	mov	w0, #0x7                   	// #7
  211fd8:	mov	w3, #0xc9                  	// #201
  211fdc:	b	212100 <run+0x518>
  211fe0:	bl	212d70 <__errno_location@plt>
  211fe4:	ldr	w19, [x0]
  211fe8:	mov	w0, wzr
  211fec:	bl	212d40 <log_get_max_level_realm@plt>
  211ff0:	cmp	w0, #0x3
  211ff4:	b.lt	21209c <run+0x4b4>  // b.tstop
  211ff8:	adrp	x2, 201000 <__FRAME_END__-0x928>
  211ffc:	adrp	x4, 201000 <__FRAME_END__-0x928>
  212000:	adrp	x5, 201000 <__FRAME_END__-0x928>
  212004:	add	x2, x2, #0xcd
  212008:	add	x4, x4, #0x6c4
  21200c:	add	x5, x5, #0x736
  212010:	mov	w0, #0x3                   	// #3
  212014:	mov	w3, #0x98                  	// #152
  212018:	b	212054 <run+0x46c>
  21201c:	bl	212d70 <__errno_location@plt>
  212020:	ldr	w19, [x0]
  212024:	mov	w0, wzr
  212028:	bl	212d40 <log_get_max_level_realm@plt>
  21202c:	cmp	w0, #0x3
  212030:	b.lt	21209c <run+0x4b4>  // b.tstop
  212034:	adrp	x2, 201000 <__FRAME_END__-0x928>
  212038:	adrp	x4, 201000 <__FRAME_END__-0x928>
  21203c:	adrp	x5, 201000 <__FRAME_END__-0x928>
  212040:	add	x2, x2, #0xcd
  212044:	add	x4, x4, #0x6c4
  212048:	add	x5, x5, #0x5ab
  21204c:	mov	w0, #0x3                   	// #3
  212050:	mov	w3, #0xaf                  	// #175
  212054:	mov	w1, w19
  212058:	bl	212d50 <log_internal_realm@plt>
  21205c:	mov	w19, w0
  212060:	sub	x0, x29, #0x10
  212064:	bl	212830 <freep>
  212068:	sub	x0, x29, #0x8
  21206c:	bl	212818 <closep>
  212070:	sub	x0, x29, #0x4
  212074:	bl	212818 <closep>
  212078:	mov	w0, w19
  21207c:	ldp	x20, x19, [sp, #256]
  212080:	ldp	x22, x21, [sp, #240]
  212084:	ldp	x24, x23, [sp, #224]
  212088:	ldp	x26, x25, [sp, #208]
  21208c:	ldp	x28, x27, [sp, #192]
  212090:	ldp	x29, x30, [sp, #176]
  212094:	add	sp, sp, #0x110
  212098:	ret
  21209c:	cmp	w19, #0x0
  2120a0:	mov	w8, wzr
  2120a4:	cneg	w9, w19, mi  // mi = first
  2120a8:	sub	w19, w8, w9, uxtb
  2120ac:	b	212060 <run+0x478>
  2120b0:	adrp	x1, 201000 <__FRAME_END__-0x928>
  2120b4:	adrp	x3, 201000 <__FRAME_END__-0x928>
  2120b8:	add	x1, x1, #0xcd
  2120bc:	add	x3, x3, #0x6c4
  2120c0:	mov	w2, #0xb7                  	// #183
  2120c4:	bl	212db0 <log_oom_internal@plt>
  2120c8:	b	21205c <run+0x474>
  2120cc:	mov	w23, w0
  2120d0:	mov	w0, wzr
  2120d4:	bl	212d40 <log_get_max_level_realm@plt>
  2120d8:	cmp	w0, #0x7
  2120dc:	b.lt	212108 <run+0x520>  // b.tstop
  2120e0:	adrp	x2, 201000 <__FRAME_END__-0x928>
  2120e4:	adrp	x4, 201000 <__FRAME_END__-0x928>
  2120e8:	adrp	x5, 201000 <__FRAME_END__-0x928>
  2120ec:	add	x2, x2, #0xcd
  2120f0:	add	x4, x4, #0x6c4
  2120f4:	add	x5, x5, #0x6c8
  2120f8:	mov	w0, #0x7                   	// #7
  2120fc:	mov	w3, #0xc5                  	// #197
  212100:	mov	w1, w23
  212104:	bl	212d50 <log_internal_realm@plt>
  212108:	mov	w0, w20
  21210c:	mov	x1, x21
  212110:	mov	x2, x22
  212114:	mov	w3, wzr
  212118:	bl	212dc0 <loop_read@plt>
  21211c:	mov	x23, x0
  212120:	tbnz	x0, #63, 2121ac <run+0x5c4>
  212124:	cbz	x23, 2121e4 <run+0x5fc>
  212128:	mov	w0, w20
  21212c:	mov	x1, xzr
  212130:	mov	w2, wzr
  212134:	bl	212dd0 <lseek64@plt>
  212138:	mov	w0, w20
  21213c:	bl	212848 <may_credit>
  212140:	adrp	x1, 201000 <__FRAME_END__-0x928>
  212144:	mov	w24, w0
  212148:	add	x1, x1, #0x32f
  21214c:	mov	w0, w20
  212150:	bl	212de0 <fremovexattr@plt>
  212154:	tbnz	w0, #31, 212220 <run+0x638>
  212158:	mov	w0, w20
  21215c:	bl	212df0 <fsync_full@plt>
  212160:	tbz	w0, #31, 212250 <run+0x668>
  212164:	mov	w25, w0
  212168:	mov	w0, wzr
  21216c:	bl	212d40 <log_get_max_level_realm@plt>
  212170:	cmp	w0, #0x4
  212174:	b.lt	2121a0 <run+0x5b8>  // b.tstop
  212178:	adrp	x2, 201000 <__FRAME_END__-0x928>
  21217c:	adrp	x4, 201000 <__FRAME_END__-0x928>
  212180:	adrp	x5, 201000 <__FRAME_END__-0x928>
  212184:	add	x2, x2, #0xcd
  212188:	add	x4, x4, #0x6c4
  21218c:	add	x5, x5, #0x619
  212190:	mov	w0, #0x4                   	// #4
  212194:	mov	w3, #0xe7                  	// #231
  212198:	mov	w1, w25
  21219c:	bl	212d50 <log_internal_realm@plt>
  2121a0:	cmp	w24, #0x1
  2121a4:	csel	w24, wzr, w24, eq  // eq = none
  2121a8:	b	212250 <run+0x668>
  2121ac:	mov	w0, wzr
  2121b0:	bl	212d40 <log_get_max_level_realm@plt>
  2121b4:	cmp	w0, #0x3
  2121b8:	b.lt	2123e0 <run+0x7f8>  // b.tstop
  2121bc:	adrp	x2, 201000 <__FRAME_END__-0x928>
  2121c0:	adrp	x4, 201000 <__FRAME_END__-0x928>
  2121c4:	adrp	x5, 201000 <__FRAME_END__-0x928>
  2121c8:	add	x2, x2, #0xcd
  2121cc:	add	x4, x4, #0x6c4
  2121d0:	add	x5, x5, #0x1f2
  2121d4:	mov	w0, #0x3                   	// #3
  2121d8:	mov	w3, #0xce                  	// #206
  2121dc:	mov	w1, w23
  2121e0:	b	212218 <run+0x630>
  2121e4:	mov	w0, wzr
  2121e8:	bl	212d40 <log_get_max_level_realm@plt>
  2121ec:	cmp	w0, #0x7
  2121f0:	b.lt	2123e0 <run+0x7f8>  // b.tstop
  2121f4:	adrp	x2, 201000 <__FRAME_END__-0x928>
  2121f8:	adrp	x4, 201000 <__FRAME_END__-0x928>
  2121fc:	adrp	x5, 201000 <__FRAME_END__-0x928>
  212200:	add	x2, x2, #0xcd
  212204:	add	x4, x4, #0x6c4
  212208:	add	x5, x5, #0x22c
  21220c:	mov	w0, #0x7                   	// #7
  212210:	mov	w3, #0xd0                  	// #208
  212214:	mov	w1, wzr
  212218:	bl	212d50 <log_internal_realm@plt>
  21221c:	b	2123e0 <run+0x7f8>
  212220:	bl	212d70 <__errno_location@plt>
  212224:	ldr	w25, [x0]
  212228:	sub	w8, w25, #0x26
  21222c:	cmp	w8, #0x39
  212230:	b.hi	212370 <run+0x788>  // b.pmore
  212234:	mov	w9, #0x1                   	// #1
  212238:	lsl	x8, x9, x8
  21223c:	mov	x9, #0x1                   	// #1
  212240:	movk	x9, #0x80, lsl #16
  212244:	movk	x9, #0x200, lsl #48
  212248:	tst	x8, x9
  21224c:	b.eq	212370 <run+0x788>  // b.none
  212250:	sub	w8, w24, #0x1
  212254:	cmp	w8, #0x1
  212258:	b.hi	2122b0 <run+0x6c8>  // b.pmore
  21225c:	add	x0, x23, #0x8
  212260:	str	xzr, [sp, #8]
  212264:	bl	212d80 <malloc@plt>
  212268:	str	x0, [sp, #8]
  21226c:	cbz	x0, 212308 <run+0x720>
  212270:	ldr	x24, [sp, #8]
  212274:	lsl	w8, w23, #3
  212278:	str	w8, [x0]
  21227c:	mov	x1, x21
  212280:	add	x0, x24, #0x8
  212284:	mov	x2, x23
  212288:	str	w23, [x24, #4]
  21228c:	bl	212e00 <memcpy@plt>
  212290:	ldur	w0, [x29, #-8]
  212294:	mov	w1, #0x5203                	// #20995
  212298:	movk	w1, #0x4008, lsl #16
  21229c:	mov	x2, x24
  2122a0:	bl	212e10 <ioctl@plt>
  2122a4:	tbnz	w0, #31, 212328 <run+0x740>
  2122a8:	mov	w23, wzr
  2122ac:	b	2123c0 <run+0x7d8>
  2122b0:	ldur	w0, [x29, #-8]
  2122b4:	mov	x1, x21
  2122b8:	mov	x2, x23
  2122bc:	mov	w3, wzr
  2122c0:	bl	212da0 <loop_write@plt>
  2122c4:	tbz	w0, #31, 2123d8 <run+0x7f0>
  2122c8:	mov	w23, w0
  2122cc:	mov	w0, wzr
  2122d0:	bl	212d40 <log_get_max_level_realm@plt>
  2122d4:	cmp	w0, #0x3
  2122d8:	b.lt	2123d8 <run+0x7f0>  // b.tstop
  2122dc:	adrp	x2, 201000 <__FRAME_END__-0x928>
  2122e0:	adrp	x4, 201000 <__FRAME_END__-0x928>
  2122e4:	adrp	x5, 201000 <__FRAME_END__-0x928>
  2122e8:	add	x2, x2, #0xcd
  2122ec:	add	x4, x4, #0x6c4
  2122f0:	add	x5, x5, #0x4a1
  2122f4:	mov	w0, #0x3                   	// #3
  2122f8:	mov	w3, #0xfe                  	// #254
  2122fc:	mov	w1, w23
  212300:	bl	212d50 <log_internal_realm@plt>
  212304:	b	2123d8 <run+0x7f0>
  212308:	adrp	x1, 201000 <__FRAME_END__-0x928>
  21230c:	adrp	x3, 201000 <__FRAME_END__-0x928>
  212310:	add	x1, x1, #0xcd
  212314:	add	x3, x3, #0x6c4
  212318:	mov	w2, #0xf3                  	// #243
  21231c:	bl	212db0 <log_oom_internal@plt>
  212320:	mov	w19, w0
  212324:	b	2123bc <run+0x7d4>
  212328:	bl	212d70 <__errno_location@plt>
  21232c:	ldr	w19, [x0]
  212330:	mov	w0, wzr
  212334:	bl	212d40 <log_get_max_level_realm@plt>
  212338:	cmp	w0, #0x4
  21233c:	b.lt	2123ac <run+0x7c4>  // b.tstop
  212340:	adrp	x2, 201000 <__FRAME_END__-0x928>
  212344:	adrp	x4, 201000 <__FRAME_END__-0x928>
  212348:	adrp	x5, 201000 <__FRAME_END__-0x928>
  21234c:	add	x2, x2, #0xcd
  212350:	add	x4, x4, #0x6c4
  212354:	add	x5, x5, #0x85a
  212358:	mov	w0, #0x4                   	// #4
  21235c:	mov	w3, #0xfa                  	// #250
  212360:	mov	w1, w19
  212364:	bl	212d50 <log_internal_realm@plt>
  212368:	mov	w19, w0
  21236c:	b	2123bc <run+0x7d4>
  212370:	mov	w0, wzr
  212374:	bl	212d40 <log_get_max_level_realm@plt>
  212378:	cmp	w0, #0x4
  21237c:	b.lt	212250 <run+0x668>  // b.tstop
  212380:	adrp	x2, 201000 <__FRAME_END__-0x928>
  212384:	adrp	x4, 201000 <__FRAME_END__-0x928>
  212388:	adrp	x5, 201000 <__FRAME_END__-0x928>
  21238c:	add	x2, x2, #0xcd
  212390:	add	x4, x4, #0x6c4
  212394:	add	x5, x5, #0x5e7
  212398:	mov	w0, #0x4                   	// #4
  21239c:	mov	w3, #0xe1                  	// #225
  2123a0:	mov	w1, w25
  2123a4:	bl	212d50 <log_internal_realm@plt>
  2123a8:	b	212250 <run+0x668>
  2123ac:	cmp	w19, #0x0
  2123b0:	mov	w8, wzr
  2123b4:	cneg	w9, w19, mi  // mi = first
  2123b8:	sub	w19, w8, w9, uxtb
  2123bc:	mov	w23, #0x1                   	// #1
  2123c0:	add	x0, sp, #0x8
  2123c4:	bl	212830 <freep>
  2123c8:	cbz	w23, 2123d8 <run+0x7f0>
  2123cc:	cbz	w23, 2123e0 <run+0x7f8>
  2123d0:	cbnz	w23, 212060 <run+0x478>
  2123d4:	b	2123e8 <run+0x800>
  2123d8:	mov	w23, wzr
  2123dc:	cbnz	w23, 2123d0 <run+0x7e8>
  2123e0:	mov	w23, wzr
  2123e4:	cbnz	w23, 212060 <run+0x478>
  2123e8:	cbz	w27, 2127b0 <run+0xbc8>
  2123ec:	mov	w1, #0x180                 	// #384
  2123f0:	mov	w0, w20
  2123f4:	mov	w2, wzr
  2123f8:	mov	w3, wzr
  2123fc:	bl	212e20 <fchmod_and_chown@plt>
  212400:	tbnz	w0, #31, 2124c8 <run+0x8e0>
  212404:	mov	w2, #0x1                   	// #1
  212408:	mov	x0, x21
  21240c:	mov	x1, x22
  212410:	bl	212e30 <getrandom@plt>
  212414:	mov	x23, x0
  212418:	tbz	x0, #63, 212480 <run+0x898>
  21241c:	bl	212d70 <__errno_location@plt>
  212420:	ldr	w8, [x0]
  212424:	cmp	w8, #0xb
  212428:	b.ne	212480 <run+0x898>  // b.any
  21242c:	eor	w8, w26, #0x1
  212430:	tbnz	w8, #0, 212480 <run+0x898>
  212434:	mov	w0, wzr
  212438:	bl	212d40 <log_get_max_level_realm@plt>
  21243c:	cmp	w0, #0x5
  212440:	b.lt	21246c <run+0x884>  // b.tstop
  212444:	adrp	x2, 201000 <__FRAME_END__-0x928>
  212448:	adrp	x4, 201000 <__FRAME_END__-0x928>
  21244c:	adrp	x5, 201000 <__FRAME_END__-0x928>
  212450:	add	x2, x2, #0xcd
  212454:	add	x4, x4, #0x6c4
  212458:	add	x5, x5, #0xeb
  21245c:	mov	w0, #0x5                   	// #5
  212460:	mov	w3, #0x110                 	// #272
  212464:	mov	w1, wzr
  212468:	bl	212d50 <log_internal_realm@plt>
  21246c:	mov	x0, x21
  212470:	mov	x1, x22
  212474:	mov	w2, wzr
  212478:	bl	212e30 <getrandom@plt>
  21247c:	mov	x23, x0
  212480:	tbnz	x23, #63, 212504 <run+0x91c>
  212484:	cmp	x23, x22
  212488:	b.cs	21254c <run+0x964>  // b.hs, b.nlast
  21248c:	mov	w0, wzr
  212490:	bl	212d40 <log_get_max_level_realm@plt>
  212494:	cmp	w0, #0x7
  212498:	mov	w24, wzr
  21249c:	b.lt	212550 <run+0x968>  // b.tstop
  2124a0:	adrp	x2, 201000 <__FRAME_END__-0x928>
  2124a4:	adrp	x4, 201000 <__FRAME_END__-0x928>
  2124a8:	adrp	x5, 201000 <__FRAME_END__-0x928>
  2124ac:	add	x2, x2, #0xcd
  2124b0:	add	x4, x4, #0x6c4
  2124b4:	add	x5, x5, #0x881
  2124b8:	mov	w0, #0x7                   	// #7
  2124bc:	mov	w3, #0x116                 	// #278
  2124c0:	mov	w1, wzr
  2124c4:	b	212540 <run+0x958>
  2124c8:	mov	w23, w0
  2124cc:	mov	w0, wzr
  2124d0:	bl	212d40 <log_get_max_level_realm@plt>
  2124d4:	cmp	w0, #0x3
  2124d8:	b.lt	2125f8 <run+0xa10>  // b.tstop
  2124dc:	adrp	x2, 201000 <__FRAME_END__-0x928>
  2124e0:	adrp	x4, 201000 <__FRAME_END__-0x928>
  2124e4:	adrp	x5, 201000 <__FRAME_END__-0x928>
  2124e8:	add	x2, x2, #0xcd
  2124ec:	add	x4, x4, #0x6c4
  2124f0:	add	x5, x5, #0x53f
  2124f4:	mov	w0, #0x3                   	// #3
  2124f8:	mov	w3, #0x10a                 	// #266
  2124fc:	mov	w1, w23
  212500:	b	212720 <run+0xb38>
  212504:	mov	w0, wzr
  212508:	bl	212d40 <log_get_max_level_realm@plt>
  21250c:	cmp	w0, #0x7
  212510:	mov	w24, wzr
  212514:	b.lt	212550 <run+0x968>  // b.tstop
  212518:	bl	212d70 <__errno_location@plt>
  21251c:	ldr	w1, [x0]
  212520:	adrp	x2, 201000 <__FRAME_END__-0x928>
  212524:	adrp	x4, 201000 <__FRAME_END__-0x928>
  212528:	adrp	x5, 201000 <__FRAME_END__-0x928>
  21252c:	add	x2, x2, #0xcd
  212530:	add	x4, x4, #0x6c4
  212534:	add	x5, x5, #0x58
  212538:	mov	w0, #0x7                   	// #7
  21253c:	mov	w3, #0x114                 	// #276
  212540:	bl	212d50 <log_internal_realm@plt>
  212544:	mov	w24, wzr
  212548:	b	212550 <run+0x968>
  21254c:	mov	w24, #0x1                   	// #1
  212550:	tbnz	w24, #0, 212574 <run+0x98c>
  212554:	ldur	w0, [x29, #-8]
  212558:	mov	x1, x21
  21255c:	mov	x2, x22
  212560:	mov	w3, wzr
  212564:	bl	212dc0 <loop_read@plt>
  212568:	mov	x23, x0
  21256c:	tbnz	x0, #63, 21263c <run+0xa54>
  212570:	cbz	x23, 2126a8 <run+0xac0>
  212574:	mov	w0, w20
  212578:	mov	x1, x21
  21257c:	mov	x2, x23
  212580:	mov	w3, wzr
  212584:	bl	212da0 <loop_write@plt>
  212588:	mov	w21, w0
  21258c:	tbnz	w0, #31, 212608 <run+0xa20>
  212590:	mov	w0, w20
  212594:	mov	x1, x23
  212598:	bl	212e40 <ftruncate64@plt>
  21259c:	tbnz	w0, #31, 212674 <run+0xa8c>
  2125a0:	mov	w0, w20
  2125a4:	bl	212df0 <fsync_full@plt>
  2125a8:	tbnz	w0, #31, 2126e8 <run+0xb00>
  2125ac:	cbz	w24, 2127a8 <run+0xbc0>
  2125b0:	adrp	x1, 201000 <__FRAME_END__-0x928>
  2125b4:	adrp	x2, 201000 <__FRAME_END__-0x928>
  2125b8:	add	x1, x1, #0x32f
  2125bc:	add	x2, x2, #0x657
  2125c0:	mov	w3, #0x1                   	// #1
  2125c4:	mov	w0, w20
  2125c8:	mov	w4, wzr
  2125cc:	mov	w22, #0x1                   	// #1
  2125d0:	bl	212e50 <fsetxattr@plt>
  2125d4:	tbz	w0, #31, 2127ac <run+0xbc4>
  2125d8:	bl	212d70 <__errno_location@plt>
  2125dc:	ldr	w20, [x0]
  2125e0:	cmp	w20, #0x5f
  2125e4:	b.eq	2125f0 <run+0xa08>  // b.none
  2125e8:	cmp	w20, #0x26
  2125ec:	b.ne	21276c <run+0xb84>  // b.any
  2125f0:	mov	w21, #0x7                   	// #7
  2125f4:	b	212770 <run+0xb88>
  2125f8:	mov	w22, wzr
  2125fc:	neg	w8, w23
  212600:	sub	w19, w22, w8, uxtb
  212604:	b	2127ac <run+0xbc4>
  212608:	mov	w0, wzr
  21260c:	bl	212d40 <log_get_max_level_realm@plt>
  212610:	cmp	w0, #0x3
  212614:	b.lt	212730 <run+0xb48>  // b.tstop
  212618:	adrp	x2, 201000 <__FRAME_END__-0x928>
  21261c:	adrp	x4, 201000 <__FRAME_END__-0x928>
  212620:	adrp	x5, 201000 <__FRAME_END__-0x928>
  212624:	add	x2, x2, #0xcd
  212628:	add	x4, x4, #0x6c4
  21262c:	add	x5, x5, #0x164
  212630:	mov	w0, #0x3                   	// #3
  212634:	mov	w3, #0x126                 	// #294
  212638:	b	21271c <run+0xb34>
  21263c:	mov	w0, wzr
  212640:	bl	212d40 <log_get_max_level_realm@plt>
  212644:	cmp	w0, #0x3
  212648:	b.lt	212740 <run+0xb58>  // b.tstop
  21264c:	adrp	x2, 201000 <__FRAME_END__-0x928>
  212650:	adrp	x4, 201000 <__FRAME_END__-0x928>
  212654:	adrp	x5, 201000 <__FRAME_END__-0x928>
  212658:	add	x2, x2, #0xcd
  21265c:	add	x4, x4, #0x6c4
  212660:	add	x5, x5, #0x7fc
  212664:	mov	w0, #0x3                   	// #3
  212668:	mov	w3, #0x11e                 	// #286
  21266c:	mov	w1, w23
  212670:	b	212720 <run+0xb38>
  212674:	mov	w0, wzr
  212678:	bl	212d40 <log_get_max_level_realm@plt>
  21267c:	cmp	w0, #0x3
  212680:	b.lt	212754 <run+0xb6c>  // b.tstop
  212684:	adrp	x2, 201000 <__FRAME_END__-0x928>
  212688:	adrp	x4, 201000 <__FRAME_END__-0x928>
  21268c:	adrp	x5, 201000 <__FRAME_END__-0x928>
  212690:	add	x2, x2, #0xcd
  212694:	add	x4, x4, #0x6c4
  212698:	add	x5, x5, #0x307
  21269c:	mov	w0, #0x3                   	// #3
  2126a0:	mov	w3, #0x129                 	// #297
  2126a4:	b	21271c <run+0xb34>
  2126a8:	mov	w0, wzr
  2126ac:	bl	212d40 <log_get_max_level_realm@plt>
  2126b0:	cmp	w0, #0x3
  2126b4:	b.lt	212760 <run+0xb78>  // b.tstop
  2126b8:	mov	w8, #0x16                  	// #22
  2126bc:	movk	w8, #0x4000, lsl #16
  2126c0:	adrp	x2, 201000 <__FRAME_END__-0x928>
  2126c4:	adrp	x4, 201000 <__FRAME_END__-0x928>
  2126c8:	adrp	x5, 201000 <__FRAME_END__-0x928>
  2126cc:	sub	w1, w8, #0x11
  2126d0:	add	x2, x2, #0xcd
  2126d4:	add	x4, x4, #0x6c4
  2126d8:	add	x5, x5, #0x274
  2126dc:	mov	w0, #0x3                   	// #3
  2126e0:	mov	w3, #0x121                 	// #289
  2126e4:	b	212720 <run+0xb38>
  2126e8:	mov	w21, w0
  2126ec:	mov	w0, wzr
  2126f0:	bl	212d40 <log_get_max_level_realm@plt>
  2126f4:	cmp	w0, #0x3
  2126f8:	b.lt	212730 <run+0xb48>  // b.tstop
  2126fc:	adrp	x2, 201000 <__FRAME_END__-0x928>
  212700:	adrp	x4, 201000 <__FRAME_END__-0x928>
  212704:	adrp	x5, 201000 <__FRAME_END__-0x928>
  212708:	add	x2, x2, #0xcd
  21270c:	add	x4, x4, #0x6c4
  212710:	add	x5, x5, #0xa6
  212714:	mov	w0, #0x3                   	// #3
  212718:	mov	w3, #0x12d                 	// #301
  21271c:	mov	w1, w21
  212720:	bl	212d50 <log_internal_realm@plt>
  212724:	mov	w19, w0
  212728:	mov	w22, wzr
  21272c:	b	2127ac <run+0xbc4>
  212730:	mov	w22, wzr
  212734:	neg	w8, w21
  212738:	sub	w19, w22, w8, uxtb
  21273c:	b	2127ac <run+0xbc4>
  212740:	cmp	w23, #0x0
  212744:	mov	w22, wzr
  212748:	cneg	w8, w23, mi  // mi = first
  21274c:	sub	w19, w22, w8, uxtb
  212750:	b	2127ac <run+0xbc4>
  212754:	mov	w22, wzr
  212758:	sub	w19, w22, w21, uxtb
  21275c:	b	2127ac <run+0xbc4>
  212760:	mov	w22, wzr
  212764:	mov	w19, #0xfffffffb            	// #-5
  212768:	b	2127ac <run+0xbc4>
  21276c:	mov	w21, #0x4                   	// #4
  212770:	mov	w0, wzr
  212774:	bl	212d40 <log_get_max_level_realm@plt>
  212778:	cmp	w0, w21
  21277c:	b.lt	2127a8 <run+0xbc0>  // b.tstop
  212780:	adrp	x2, 201000 <__FRAME_END__-0x928>
  212784:	adrp	x4, 201000 <__FRAME_END__-0x928>
  212788:	adrp	x5, 201000 <__FRAME_END__-0x928>
  21278c:	add	x2, x2, #0xcd
  212790:	add	x4, x4, #0x6c4
  212794:	add	x5, x5, #0x467
  212798:	mov	w3, #0x134                 	// #308
  21279c:	mov	w0, w21
  2127a0:	mov	w1, w20
  2127a4:	bl	212d50 <log_internal_realm@plt>
  2127a8:	mov	w22, #0x1                   	// #1
  2127ac:	cbz	w22, 212060 <run+0x478>
  2127b0:	mov	w19, wzr
  2127b4:	b	212060 <run+0x478>

00000000002127b8 <static_destruct>:
  2127b8:	stp	x29, x30, [sp, #-32]!
  2127bc:	stp	x20, x19, [sp, #16]
  2127c0:	adrp	x8, 223000 <_DYNAMIC+0x110>
  2127c4:	ldr	x8, [x8, #200]
  2127c8:	mov	x29, sp
  2127cc:	cbz	x8, 21280c <static_destruct+0x54>
  2127d0:	adrp	x0, 223000 <_DYNAMIC+0x110>
  2127d4:	ldr	x0, [x0, #200]
  2127d8:	bl	212b90 <ALIGN_TO>
  2127dc:	adrp	x20, 223000 <_DYNAMIC+0x110>
  2127e0:	ldr	x20, [x20, #208]
  2127e4:	cmp	x0, x20
  2127e8:	b.cs	21280c <static_destruct+0x54>  // b.hs, b.nlast
  2127ec:	mov	x19, x0
  2127f0:	ldp	x0, x8, [x19]
  2127f4:	blr	x8
  2127f8:	add	x0, x19, #0x10
  2127fc:	bl	212b90 <ALIGN_TO>
  212800:	mov	x19, x0
  212804:	cmp	x0, x20
  212808:	b.cc	2127f0 <static_destruct+0x38>  // b.lo, b.ul, b.last
  21280c:	ldp	x20, x19, [sp, #16]
  212810:	ldp	x29, x30, [sp], #32
  212814:	ret

0000000000212818 <closep>:
  212818:	stp	x29, x30, [sp, #-16]!
  21281c:	ldr	w0, [x0]
  212820:	mov	x29, sp
  212824:	bl	212e60 <safe_close@plt>
  212828:	ldp	x29, x30, [sp], #16
  21282c:	ret

0000000000212830 <freep>:
  212830:	stp	x29, x30, [sp, #-16]!
  212834:	ldr	x0, [x0]
  212838:	mov	x29, sp
  21283c:	bl	212e70 <free@plt>
  212840:	ldp	x29, x30, [sp], #16
  212844:	ret

0000000000212848 <may_credit>:
  212848:	sub	sp, sp, #0x30
  21284c:	stp	x29, x30, [sp, #16]
  212850:	stp	x20, x19, [sp, #32]
  212854:	add	x29, sp, #0x10
  212858:	str	xzr, [sp, #8]
  21285c:	tbnz	w0, #31, 212b6c <may_credit+0x324>
  212860:	mov	w19, w0
  212864:	adrp	x0, 201000 <__FRAME_END__-0x928>
  212868:	add	x0, x0, #0x29d
  21286c:	bl	212e80 <getenv@plt>
  212870:	cbz	x0, 212910 <may_credit+0xc8>
  212874:	adrp	x1, 201000 <__FRAME_END__-0x928>
  212878:	add	x1, x1, #0x7a2
  21287c:	mov	x20, x0
  212880:	bl	212d30 <strcmp@plt>
  212884:	cbz	w0, 212968 <may_credit+0x120>
  212888:	mov	x0, x20
  21288c:	bl	212e90 <parse_boolean@plt>
  212890:	cmp	w0, #0x0
  212894:	b.le	2129a4 <may_credit+0x15c>
  212898:	adrp	x1, 201000 <__FRAME_END__-0x928>
  21289c:	add	x1, x1, #0x32f
  2128a0:	add	x2, sp, #0x8
  2128a4:	mov	w0, w19
  2128a8:	bl	212ea0 <fgetxattr_malloc@plt>
  2128ac:	tbnz	w0, #31, 2129e8 <may_credit+0x1a0>
  2128b0:	ldr	x19, [sp, #8]
  2128b4:	mov	x0, x19
  2128b8:	bl	212e90 <parse_boolean@plt>
  2128bc:	cmp	w0, #0x0
  2128c0:	b.le	212a44 <may_credit+0x1fc>
  2128c4:	adrp	x0, 201000 <__FRAME_END__-0x928>
  2128c8:	add	x0, x0, #0x1da
  2128cc:	mov	w1, wzr
  2128d0:	bl	212eb0 <access@plt>
  2128d4:	tbnz	w0, #31, 212ae0 <may_credit+0x298>
  2128d8:	mov	w0, wzr
  2128dc:	bl	212d40 <log_get_max_level_realm@plt>
  2128e0:	cmp	w0, #0x7
  2128e4:	mov	w19, wzr
  2128e8:	b.lt	21294c <may_credit+0x104>  // b.tstop
  2128ec:	adrp	x2, 201000 <__FRAME_END__-0x928>
  2128f0:	adrp	x4, 201000 <__FRAME_END__-0x928>
  2128f4:	adrp	x5, 201000 <__FRAME_END__-0x928>
  2128f8:	add	x2, x2, #0xcd
  2128fc:	add	x4, x4, #0x756
  212900:	add	x5, x5, #0x12c
  212904:	mov	w0, #0x7                   	// #7
  212908:	mov	w3, #0x60                  	// #96
  21290c:	b	212940 <may_credit+0xf8>
  212910:	bl	212d40 <log_get_max_level_realm@plt>
  212914:	cmp	w0, #0x7
  212918:	mov	w19, wzr
  21291c:	b.lt	21294c <may_credit+0x104>  // b.tstop
  212920:	adrp	x2, 201000 <__FRAME_END__-0x928>
  212924:	adrp	x4, 201000 <__FRAME_END__-0x928>
  212928:	adrp	x5, 201000 <__FRAME_END__-0x928>
  21292c:	add	x2, x2, #0xcd
  212930:	add	x4, x4, #0x756
  212934:	add	x5, x5, #0x4ca
  212938:	mov	w0, #0x7                   	// #7
  21293c:	mov	w3, #0x2d                  	// #45
  212940:	mov	w1, wzr
  212944:	bl	212d50 <log_internal_realm@plt>
  212948:	mov	w19, wzr
  21294c:	add	x0, sp, #0x8
  212950:	bl	212830 <freep>
  212954:	mov	w0, w19
  212958:	ldp	x20, x19, [sp, #32]
  21295c:	ldp	x29, x30, [sp, #16]
  212960:	add	sp, sp, #0x30
  212964:	ret
  212968:	bl	212d40 <log_get_max_level_realm@plt>
  21296c:	cmp	w0, #0x7
  212970:	b.lt	2129e0 <may_credit+0x198>  // b.tstop
  212974:	adrp	x2, 201000 <__FRAME_END__-0x928>
  212978:	adrp	x4, 201000 <__FRAME_END__-0x928>
  21297c:	adrp	x5, 201000 <__FRAME_END__-0x928>
  212980:	add	x2, x2, #0xcd
  212984:	add	x4, x4, #0x756
  212988:	add	x5, x5, #0x2c5
  21298c:	mov	w0, #0x7                   	// #7
  212990:	mov	w3, #0x31                  	// #49
  212994:	mov	w1, wzr
  212998:	bl	212d50 <log_internal_realm@plt>
  21299c:	mov	w19, #0x2                   	// #2
  2129a0:	b	21294c <may_credit+0x104>
  2129a4:	mov	w20, w0
  2129a8:	mov	w0, wzr
  2129ac:	bl	212d40 <log_get_max_level_realm@plt>
  2129b0:	tbnz	w20, #31, 212a80 <may_credit+0x238>
  2129b4:	cmp	w0, #0x7
  2129b8:	b.lt	212948 <may_credit+0x100>  // b.tstop
  2129bc:	adrp	x2, 201000 <__FRAME_END__-0x928>
  2129c0:	adrp	x4, 201000 <__FRAME_END__-0x928>
  2129c4:	adrp	x5, 201000 <__FRAME_END__-0x928>
  2129c8:	add	x2, x2, #0xcd
  2129cc:	add	x4, x4, #0x756
  2129d0:	add	x5, x5, #0x659
  2129d4:	mov	w0, #0x7                   	// #7
  2129d8:	mov	w3, #0x3a                  	// #58
  2129dc:	b	212940 <may_credit+0xf8>
  2129e0:	mov	w19, #0x2                   	// #2
  2129e4:	b	21294c <may_credit+0x104>
  2129e8:	mov	w19, w0
  2129ec:	add	w20, w0, #0x5f
  2129f0:	mov	w0, wzr
  2129f4:	bl	212d40 <log_get_max_level_realm@plt>
  2129f8:	cmp	w20, #0x39
  2129fc:	b.hi	212ab0 <may_credit+0x268>  // b.pmore
  212a00:	mov	x8, #0x1                   	// #1
  212a04:	movk	x8, #0x4, lsl #32
  212a08:	movk	x8, #0x200, lsl #48
  212a0c:	lsr	x8, x8, x20
  212a10:	tbz	w8, #0, 212ab0 <may_credit+0x268>
  212a14:	cmp	w0, #0x7
  212a18:	b.lt	212948 <may_credit+0x100>  // b.tstop
  212a1c:	adrp	x2, 201000 <__FRAME_END__-0x928>
  212a20:	adrp	x4, 201000 <__FRAME_END__-0x928>
  212a24:	adrp	x5, 201000 <__FRAME_END__-0x928>
  212a28:	add	x2, x2, #0xcd
  212a2c:	add	x4, x4, #0x756
  212a30:	add	x5, x5, #0x509
  212a34:	mov	w0, #0x7                   	// #7
  212a38:	mov	w3, #0x43                  	// #67
  212a3c:	mov	w1, w19
  212a40:	b	212944 <may_credit+0xfc>
  212a44:	mov	w20, w0
  212a48:	mov	w0, wzr
  212a4c:	bl	212d40 <log_get_max_level_realm@plt>
  212a50:	tbnz	w20, #31, 212af8 <may_credit+0x2b0>
  212a54:	cmp	w0, #0x7
  212a58:	b.lt	212948 <may_credit+0x100>  // b.tstop
  212a5c:	adrp	x2, 201000 <__FRAME_END__-0x928>
  212a60:	adrp	x4, 201000 <__FRAME_END__-0x928>
  212a64:	adrp	x5, 201000 <__FRAME_END__-0x928>
  212a68:	add	x2, x2, #0xcd
  212a6c:	add	x4, x4, #0x756
  212a70:	add	x5, x5, #0x575
  212a74:	mov	w0, #0x7                   	// #7
  212a78:	mov	w3, #0x4f                  	// #79
  212a7c:	b	212940 <may_credit+0xf8>
  212a80:	cmp	w0, #0x4
  212a84:	b.lt	212948 <may_credit+0x100>  // b.tstop
  212a88:	adrp	x2, 201000 <__FRAME_END__-0x928>
  212a8c:	adrp	x4, 201000 <__FRAME_END__-0x928>
  212a90:	adrp	x5, 201000 <__FRAME_END__-0x928>
  212a94:	add	x2, x2, #0xcd
  212a98:	add	x4, x4, #0x756
  212a9c:	add	x5, x5, #0x6ef
  212aa0:	mov	w0, #0x4                   	// #4
  212aa4:	mov	w3, #0x38                  	// #56
  212aa8:	mov	w1, w20
  212aac:	b	212944 <may_credit+0xfc>
  212ab0:	cmp	w0, #0x4
  212ab4:	b.lt	212948 <may_credit+0x100>  // b.tstop
  212ab8:	adrp	x2, 201000 <__FRAME_END__-0x928>
  212abc:	adrp	x4, 201000 <__FRAME_END__-0x928>
  212ac0:	adrp	x5, 201000 <__FRAME_END__-0x928>
  212ac4:	add	x2, x2, #0xcd
  212ac8:	add	x4, x4, #0x756
  212acc:	add	x5, x5, #0x3d4
  212ad0:	mov	w0, #0x4                   	// #4
  212ad4:	mov	w3, #0x45                  	// #69
  212ad8:	mov	w1, w19
  212adc:	b	212944 <may_credit+0xfc>
  212ae0:	bl	212d70 <__errno_location@plt>
  212ae4:	ldr	w20, [x0]
  212ae8:	cmp	w20, #0x2
  212aec:	b.ne	212b30 <may_credit+0x2e8>  // b.any
  212af0:	mov	w19, #0x1                   	// #1
  212af4:	b	21294c <may_credit+0x104>
  212af8:	cmp	w0, #0x4
  212afc:	b.lt	212948 <may_credit+0x100>  // b.tstop
  212b00:	adrp	x2, 201000 <__FRAME_END__-0x928>
  212b04:	adrp	x4, 201000 <__FRAME_END__-0x928>
  212b08:	adrp	x5, 201000 <__FRAME_END__-0x928>
  212b0c:	add	x2, x2, #0xcd
  212b10:	add	x4, x4, #0x756
  212b14:	add	x5, x5, #0x18d
  212b18:	mov	w0, #0x4                   	// #4
  212b1c:	mov	w3, #0x4d                  	// #77
  212b20:	mov	w1, w20
  212b24:	mov	x6, x19
  212b28:	bl	212d50 <log_internal_realm@plt>
  212b2c:	b	212948 <may_credit+0x100>
  212b30:	mov	w0, wzr
  212b34:	bl	212d40 <log_get_max_level_realm@plt>
  212b38:	cmp	w0, #0x4
  212b3c:	mov	w19, wzr
  212b40:	b.lt	21294c <may_credit+0x104>  // b.tstop
  212b44:	adrp	x2, 201000 <__FRAME_END__-0x928>
  212b48:	adrp	x4, 201000 <__FRAME_END__-0x928>
  212b4c:	adrp	x5, 201000 <__FRAME_END__-0x928>
  212b50:	add	x2, x2, #0xcd
  212b54:	add	x4, x4, #0x756
  212b58:	add	x5, x5, #0x34b
  212b5c:	mov	w0, #0x4                   	// #4
  212b60:	mov	w3, #0x5a                  	// #90
  212b64:	mov	w1, w20
  212b68:	b	212944 <may_credit+0xfc>
  212b6c:	adrp	x1, 201000 <__FRAME_END__-0x928>
  212b70:	adrp	x2, 201000 <__FRAME_END__-0x928>
  212b74:	adrp	x4, 201000 <__FRAME_END__-0x928>
  212b78:	add	x1, x1, #0x421
  212b7c:	add	x2, x2, #0xcd
  212b80:	add	x4, x4, #0x8bf
  212b84:	mov	w3, #0x29                  	// #41
  212b88:	mov	w0, wzr
  212b8c:	bl	212ec0 <log_assert_failed_realm@plt>

0000000000212b90 <ALIGN_TO>:
  212b90:	add	x8, x0, #0x7
  212b94:	and	x0, x8, #0xfffffffffffffff8
  212b98:	ret
  212b9c:	udf	#0

0000000000212ba0 <__libc_csu_init>:
  212ba0:	stp	x29, x30, [sp, #-64]!
  212ba4:	mov	x29, sp
  212ba8:	stp	x19, x20, [sp, #16]
  212bac:	adrp	x20, 222000 <__fxstat64@plt+0xf130>
  212bb0:	add	x20, x20, #0xef0
  212bb4:	stp	x21, x22, [sp, #32]
  212bb8:	adrp	x21, 222000 <__fxstat64@plt+0xf130>
  212bbc:	add	x21, x21, #0xee8
  212bc0:	sub	x20, x20, x21
  212bc4:	mov	w22, w0
  212bc8:	stp	x23, x24, [sp, #48]
  212bcc:	mov	x23, x1
  212bd0:	mov	x24, x2
  212bd4:	bl	212c38 <_init>
  212bd8:	cmp	xzr, x20, asr #3
  212bdc:	b.eq	212c08 <__libc_csu_init+0x68>  // b.none
  212be0:	asr	x20, x20, #3
  212be4:	mov	x19, #0x0                   	// #0
  212be8:	ldr	x3, [x21, x19, lsl #3]
  212bec:	mov	x2, x24
  212bf0:	add	x19, x19, #0x1
  212bf4:	mov	x1, x23
  212bf8:	mov	w0, w22
  212bfc:	blr	x3
  212c00:	cmp	x20, x19
  212c04:	b.ne	212be8 <__libc_csu_init+0x48>  // b.any
  212c08:	ldp	x19, x20, [sp, #16]
  212c0c:	ldp	x21, x22, [sp, #32]
  212c10:	ldp	x23, x24, [sp, #48]
  212c14:	ldp	x29, x30, [sp], #64
  212c18:	ret
  212c1c:	nop

0000000000212c20 <__libc_csu_fini>:
  212c20:	ret
  212c24:	udf	#0

0000000000212c28 <fstat64>:
  212c28:	mov	x2, x1
  212c2c:	mov	w1, w0
  212c30:	mov	w0, #0x0                   	// #0
  212c34:	b	212ed0 <__fxstat64@plt>

Disassembly of section .init:

0000000000212c38 <_init>:
  212c38:	stp	x29, x30, [sp, #-16]!
  212c3c:	mov	x29, sp
  212c40:	bl	211a88 <call_weak_fn>
  212c44:	ldp	x29, x30, [sp], #16
  212c48:	ret

Disassembly of section .fini:

0000000000212c4c <_fini>:
  212c4c:	stp	x29, x30, [sp, #-16]!
  212c50:	mov	x29, sp
  212c54:	ldp	x29, x30, [sp], #16
  212c58:	ret

Disassembly of section .plt:

0000000000212c60 <__libc_start_main@plt-0x20>:
  212c60:	stp	x16, x30, [sp, #-16]!
  212c64:	adrp	x16, 223000 <_DYNAMIC+0x110>
  212c68:	ldr	x17, [x16, #232]
  212c6c:	add	x16, x16, #0xe8
  212c70:	br	x17
  212c74:	nop
  212c78:	nop
  212c7c:	nop

0000000000212c80 <__libc_start_main@plt>:
  212c80:	adrp	x16, 223000 <_DYNAMIC+0x110>
  212c84:	ldr	x17, [x16, #240]
  212c88:	add	x16, x16, #0xf0
  212c8c:	br	x17

0000000000212c90 <abort@plt>:
  212c90:	adrp	x16, 223000 <_DYNAMIC+0x110>
  212c94:	ldr	x17, [x16, #248]
  212c98:	add	x16, x16, #0xf8
  212c9c:	br	x17

0000000000212ca0 <__gmon_start__@plt>:
  212ca0:	adrp	x16, 223000 <_DYNAMIC+0x110>
  212ca4:	ldr	x17, [x16, #256]
  212ca8:	add	x16, x16, #0x100
  212cac:	br	x17

0000000000212cb0 <ask_password_agent_close@plt>:
  212cb0:	adrp	x16, 223000 <_DYNAMIC+0x110>
  212cb4:	ldr	x17, [x16, #264]
  212cb8:	add	x16, x16, #0x108
  212cbc:	br	x17

0000000000212cc0 <polkit_agent_close@plt>:
  212cc0:	adrp	x16, 223000 <_DYNAMIC+0x110>
  212cc4:	ldr	x17, [x16, #272]
  212cc8:	add	x16, x16, #0x110
  212ccc:	br	x17

0000000000212cd0 <pager_close@plt>:
  212cd0:	adrp	x16, 223000 <_DYNAMIC+0x110>
  212cd4:	ldr	x17, [x16, #280]
  212cd8:	add	x16, x16, #0x118
  212cdc:	br	x17

0000000000212ce0 <mac_selinux_finish@plt>:
  212ce0:	adrp	x16, 223000 <_DYNAMIC+0x110>
  212ce4:	ldr	x17, [x16, #288]
  212ce8:	add	x16, x16, #0x120
  212cec:	br	x17

0000000000212cf0 <log_setup_service@plt>:
  212cf0:	adrp	x16, 223000 <_DYNAMIC+0x110>
  212cf4:	ldr	x17, [x16, #296]
  212cf8:	add	x16, x16, #0x128
  212cfc:	br	x17

0000000000212d00 <umask@plt>:
  212d00:	adrp	x16, 223000 <_DYNAMIC+0x110>
  212d04:	ldr	x17, [x16, #304]
  212d08:	add	x16, x16, #0x130
  212d0c:	br	x17

0000000000212d10 <random_pool_size@plt>:
  212d10:	adrp	x16, 223000 <_DYNAMIC+0x110>
  212d14:	ldr	x17, [x16, #312]
  212d18:	add	x16, x16, #0x138
  212d1c:	br	x17

0000000000212d20 <mkdir_parents@plt>:
  212d20:	adrp	x16, 223000 <_DYNAMIC+0x110>
  212d24:	ldr	x17, [x16, #320]
  212d28:	add	x16, x16, #0x140
  212d2c:	br	x17

0000000000212d30 <strcmp@plt>:
  212d30:	adrp	x16, 223000 <_DYNAMIC+0x110>
  212d34:	ldr	x17, [x16, #328]
  212d38:	add	x16, x16, #0x148
  212d3c:	br	x17

0000000000212d40 <log_get_max_level_realm@plt>:
  212d40:	adrp	x16, 223000 <_DYNAMIC+0x110>
  212d44:	ldr	x17, [x16, #336]
  212d48:	add	x16, x16, #0x150
  212d4c:	br	x17

0000000000212d50 <log_internal_realm@plt>:
  212d50:	adrp	x16, 223000 <_DYNAMIC+0x110>
  212d54:	ldr	x17, [x16, #344]
  212d58:	add	x16, x16, #0x158
  212d5c:	br	x17

0000000000212d60 <open64@plt>:
  212d60:	adrp	x16, 223000 <_DYNAMIC+0x110>
  212d64:	ldr	x17, [x16, #352]
  212d68:	add	x16, x16, #0x160
  212d6c:	br	x17

0000000000212d70 <__errno_location@plt>:
  212d70:	adrp	x16, 223000 <_DYNAMIC+0x110>
  212d74:	ldr	x17, [x16, #360]
  212d78:	add	x16, x16, #0x168
  212d7c:	br	x17

0000000000212d80 <malloc@plt>:
  212d80:	adrp	x16, 223000 <_DYNAMIC+0x110>
  212d84:	ldr	x17, [x16, #368]
  212d88:	add	x16, x16, #0x170
  212d8c:	br	x17

0000000000212d90 <sd_id128_get_machine@plt>:
  212d90:	adrp	x16, 223000 <_DYNAMIC+0x110>
  212d94:	ldr	x17, [x16, #376]
  212d98:	add	x16, x16, #0x178
  212d9c:	br	x17

0000000000212da0 <loop_write@plt>:
  212da0:	adrp	x16, 223000 <_DYNAMIC+0x110>
  212da4:	ldr	x17, [x16, #384]
  212da8:	add	x16, x16, #0x180
  212dac:	br	x17

0000000000212db0 <log_oom_internal@plt>:
  212db0:	adrp	x16, 223000 <_DYNAMIC+0x110>
  212db4:	ldr	x17, [x16, #392]
  212db8:	add	x16, x16, #0x188
  212dbc:	br	x17

0000000000212dc0 <loop_read@plt>:
  212dc0:	adrp	x16, 223000 <_DYNAMIC+0x110>
  212dc4:	ldr	x17, [x16, #400]
  212dc8:	add	x16, x16, #0x190
  212dcc:	br	x17

0000000000212dd0 <lseek64@plt>:
  212dd0:	adrp	x16, 223000 <_DYNAMIC+0x110>
  212dd4:	ldr	x17, [x16, #408]
  212dd8:	add	x16, x16, #0x198
  212ddc:	br	x17

0000000000212de0 <fremovexattr@plt>:
  212de0:	adrp	x16, 223000 <_DYNAMIC+0x110>
  212de4:	ldr	x17, [x16, #416]
  212de8:	add	x16, x16, #0x1a0
  212dec:	br	x17

0000000000212df0 <fsync_full@plt>:
  212df0:	adrp	x16, 223000 <_DYNAMIC+0x110>
  212df4:	ldr	x17, [x16, #424]
  212df8:	add	x16, x16, #0x1a8
  212dfc:	br	x17

0000000000212e00 <memcpy@plt>:
  212e00:	adrp	x16, 223000 <_DYNAMIC+0x110>
  212e04:	ldr	x17, [x16, #432]
  212e08:	add	x16, x16, #0x1b0
  212e0c:	br	x17

0000000000212e10 <ioctl@plt>:
  212e10:	adrp	x16, 223000 <_DYNAMIC+0x110>
  212e14:	ldr	x17, [x16, #440]
  212e18:	add	x16, x16, #0x1b8
  212e1c:	br	x17

0000000000212e20 <fchmod_and_chown@plt>:
  212e20:	adrp	x16, 223000 <_DYNAMIC+0x110>
  212e24:	ldr	x17, [x16, #448]
  212e28:	add	x16, x16, #0x1c0
  212e2c:	br	x17

0000000000212e30 <getrandom@plt>:
  212e30:	adrp	x16, 223000 <_DYNAMIC+0x110>
  212e34:	ldr	x17, [x16, #456]
  212e38:	add	x16, x16, #0x1c8
  212e3c:	br	x17

0000000000212e40 <ftruncate64@plt>:
  212e40:	adrp	x16, 223000 <_DYNAMIC+0x110>
  212e44:	ldr	x17, [x16, #464]
  212e48:	add	x16, x16, #0x1d0
  212e4c:	br	x17

0000000000212e50 <fsetxattr@plt>:
  212e50:	adrp	x16, 223000 <_DYNAMIC+0x110>
  212e54:	ldr	x17, [x16, #472]
  212e58:	add	x16, x16, #0x1d8
  212e5c:	br	x17

0000000000212e60 <safe_close@plt>:
  212e60:	adrp	x16, 223000 <_DYNAMIC+0x110>
  212e64:	ldr	x17, [x16, #480]
  212e68:	add	x16, x16, #0x1e0
  212e6c:	br	x17

0000000000212e70 <free@plt>:
  212e70:	adrp	x16, 223000 <_DYNAMIC+0x110>
  212e74:	ldr	x17, [x16, #488]
  212e78:	add	x16, x16, #0x1e8
  212e7c:	br	x17

0000000000212e80 <getenv@plt>:
  212e80:	adrp	x16, 223000 <_DYNAMIC+0x110>
  212e84:	ldr	x17, [x16, #496]
  212e88:	add	x16, x16, #0x1f0
  212e8c:	br	x17

0000000000212e90 <parse_boolean@plt>:
  212e90:	adrp	x16, 223000 <_DYNAMIC+0x110>
  212e94:	ldr	x17, [x16, #504]
  212e98:	add	x16, x16, #0x1f8
  212e9c:	br	x17

0000000000212ea0 <fgetxattr_malloc@plt>:
  212ea0:	adrp	x16, 223000 <_DYNAMIC+0x110>
  212ea4:	ldr	x17, [x16, #512]
  212ea8:	add	x16, x16, #0x200
  212eac:	br	x17

0000000000212eb0 <access@plt>:
  212eb0:	adrp	x16, 223000 <_DYNAMIC+0x110>
  212eb4:	ldr	x17, [x16, #520]
  212eb8:	add	x16, x16, #0x208
  212ebc:	br	x17

0000000000212ec0 <log_assert_failed_realm@plt>:
  212ec0:	adrp	x16, 223000 <_DYNAMIC+0x110>
  212ec4:	ldr	x17, [x16, #528]
  212ec8:	add	x16, x16, #0x210
  212ecc:	br	x17

0000000000212ed0 <__fxstat64@plt>:
  212ed0:	adrp	x16, 223000 <_DYNAMIC+0x110>
  212ed4:	ldr	x17, [x16, #536]
  212ed8:	add	x16, x16, #0x218
  212edc:	br	x17
