
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-ac-power_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400b98 <_init>:
  400b98:	stp	x29, x30, [sp, #-16]!
  400b9c:	mov	x29, sp
  400ba0:	bl	400d40 <call_weak_fn>
  400ba4:	ldp	x29, x30, [sp], #16
  400ba8:	ret

Disassembly of section .plt:

0000000000400bb0 <__libc_start_main@plt-0x20>:
  400bb0:	stp	x16, x30, [sp, #-16]!
  400bb4:	adrp	x16, 41f000 <__FRAME_END__+0x1dba0>
  400bb8:	ldr	x17, [x16, #3944]
  400bbc:	add	x16, x16, #0xf68
  400bc0:	br	x17
  400bc4:	nop
  400bc8:	nop
  400bcc:	nop

0000000000400bd0 <__libc_start_main@plt>:
  400bd0:	adrp	x16, 41f000 <__FRAME_END__+0x1dba0>
  400bd4:	ldr	x17, [x16, #3952]
  400bd8:	add	x16, x16, #0xf70
  400bdc:	br	x17

0000000000400be0 <abort@plt>:
  400be0:	adrp	x16, 41f000 <__FRAME_END__+0x1dba0>
  400be4:	ldr	x17, [x16, #3960]
  400be8:	add	x16, x16, #0xf78
  400bec:	br	x17

0000000000400bf0 <__gmon_start__@plt>:
  400bf0:	adrp	x16, 41f000 <__FRAME_END__+0x1dba0>
  400bf4:	ldr	x17, [x16, #3968]
  400bf8:	add	x16, x16, #0xf80
  400bfc:	br	x17

0000000000400c00 <log_parse_environment_realm@plt>:
  400c00:	adrp	x16, 41f000 <__FRAME_END__+0x1dba0>
  400c04:	ldr	x17, [x16, #3976]
  400c08:	add	x16, x16, #0xf88
  400c0c:	br	x17

0000000000400c10 <log_open@plt>:
  400c10:	adrp	x16, 41f000 <__FRAME_END__+0x1dba0>
  400c14:	ldr	x17, [x16, #3984]
  400c18:	add	x16, x16, #0xf90
  400c1c:	br	x17

0000000000400c20 <getopt_long@plt>:
  400c20:	adrp	x16, 41f000 <__FRAME_END__+0x1dba0>
  400c24:	ldr	x17, [x16, #3992]
  400c28:	add	x16, x16, #0xf98
  400c2c:	br	x17

0000000000400c30 <log_get_max_level_realm@plt>:
  400c30:	adrp	x16, 41f000 <__FRAME_END__+0x1dba0>
  400c34:	ldr	x17, [x16, #4000]
  400c38:	add	x16, x16, #0xfa0
  400c3c:	br	x17

0000000000400c40 <log_internal_realm@plt>:
  400c40:	adrp	x16, 41f000 <__FRAME_END__+0x1dba0>
  400c44:	ldr	x17, [x16, #4008]
  400c48:	add	x16, x16, #0xfa8
  400c4c:	br	x17

0000000000400c50 <version@plt>:
  400c50:	adrp	x16, 41f000 <__FRAME_END__+0x1dba0>
  400c54:	ldr	x17, [x16, #4016]
  400c58:	add	x16, x16, #0xfb0
  400c5c:	br	x17

0000000000400c60 <on_ac_power@plt>:
  400c60:	adrp	x16, 41f000 <__FRAME_END__+0x1dba0>
  400c64:	ldr	x17, [x16, #4024]
  400c68:	add	x16, x16, #0xfb8
  400c6c:	br	x17

0000000000400c70 <puts@plt>:
  400c70:	adrp	x16, 41f000 <__FRAME_END__+0x1dba0>
  400c74:	ldr	x17, [x16, #4032]
  400c78:	add	x16, x16, #0xfc0
  400c7c:	br	x17

0000000000400c80 <printf@plt>:
  400c80:	adrp	x16, 41f000 <__FRAME_END__+0x1dba0>
  400c84:	ldr	x17, [x16, #4040]
  400c88:	add	x16, x16, #0xfc8
  400c8c:	br	x17

0000000000400c90 <ask_password_agent_close@plt>:
  400c90:	adrp	x16, 41f000 <__FRAME_END__+0x1dba0>
  400c94:	ldr	x17, [x16, #4048]
  400c98:	add	x16, x16, #0xfd0
  400c9c:	br	x17

0000000000400ca0 <polkit_agent_close@plt>:
  400ca0:	adrp	x16, 41f000 <__FRAME_END__+0x1dba0>
  400ca4:	ldr	x17, [x16, #4056]
  400ca8:	add	x16, x16, #0xfd8
  400cac:	br	x17

0000000000400cb0 <pager_close@plt>:
  400cb0:	adrp	x16, 41f000 <__FRAME_END__+0x1dba0>
  400cb4:	ldr	x17, [x16, #4064]
  400cb8:	add	x16, x16, #0xfe0
  400cbc:	br	x17

0000000000400cc0 <mac_selinux_finish@plt>:
  400cc0:	adrp	x16, 41f000 <__FRAME_END__+0x1dba0>
  400cc4:	ldr	x17, [x16, #4072]
  400cc8:	add	x16, x16, #0xfe8
  400ccc:	br	x17

0000000000400cd0 <log_assert_failed_realm@plt>:
  400cd0:	adrp	x16, 41f000 <__FRAME_END__+0x1dba0>
  400cd4:	ldr	x17, [x16, #4080]
  400cd8:	add	x16, x16, #0xff0
  400cdc:	br	x17

0000000000400ce0 <log_assert_failed_unreachable_realm@plt>:
  400ce0:	adrp	x16, 41f000 <__FRAME_END__+0x1dba0>
  400ce4:	ldr	x17, [x16, #4088]
  400ce8:	add	x16, x16, #0xff8
  400cec:	br	x17

Disassembly of section .text:

0000000000400cf0 <_start>:
  400cf0:	mov	x29, #0x0                   	// #0
  400cf4:	mov	x30, #0x0                   	// #0
  400cf8:	mov	x5, x0
  400cfc:	ldr	x1, [sp]
  400d00:	add	x2, sp, #0x8
  400d04:	mov	x6, sp
  400d08:	movz	x0, #0x0, lsl #48
  400d0c:	movk	x0, #0x0, lsl #32
  400d10:	movk	x0, #0x40, lsl #16
  400d14:	movk	x0, #0xe1c
  400d18:	movz	x3, #0x0, lsl #48
  400d1c:	movk	x3, #0x0, lsl #32
  400d20:	movk	x3, #0x40, lsl #16
  400d24:	movk	x3, #0x10d0
  400d28:	movz	x4, #0x0, lsl #48
  400d2c:	movk	x4, #0x0, lsl #32
  400d30:	movk	x4, #0x40, lsl #16
  400d34:	movk	x4, #0x1150
  400d38:	bl	400bd0 <__libc_start_main@plt>
  400d3c:	bl	400be0 <abort@plt>

0000000000400d40 <call_weak_fn>:
  400d40:	adrp	x0, 41f000 <__FRAME_END__+0x1dba0>
  400d44:	ldr	x0, [x0, #3904]
  400d48:	cbz	x0, 400d50 <call_weak_fn+0x10>
  400d4c:	b	400bf0 <__gmon_start__@plt>
  400d50:	ret

0000000000400d54 <deregister_tm_clones>:
  400d54:	adrp	x0, 420000 <completed.8445>
  400d58:	add	x1, x0, #0x0
  400d5c:	adrp	x0, 420000 <completed.8445>
  400d60:	add	x0, x0, #0x0
  400d64:	cmp	x1, x0
  400d68:	b.eq	400d94 <deregister_tm_clones+0x40>  // b.none
  400d6c:	sub	sp, sp, #0x10
  400d70:	adrp	x1, 401000 <main+0x1e4>
  400d74:	ldr	x1, [x1, #360]
  400d78:	str	x1, [sp, #8]
  400d7c:	cbz	x1, 400d8c <deregister_tm_clones+0x38>
  400d80:	mov	x16, x1
  400d84:	add	sp, sp, #0x10
  400d88:	br	x16
  400d8c:	add	sp, sp, #0x10
  400d90:	ret
  400d94:	ret

0000000000400d98 <register_tm_clones>:
  400d98:	adrp	x0, 420000 <completed.8445>
  400d9c:	add	x1, x0, #0x0
  400da0:	adrp	x0, 420000 <completed.8445>
  400da4:	add	x0, x0, #0x0
  400da8:	sub	x1, x1, x0
  400dac:	mov	x2, #0x2                   	// #2
  400db0:	asr	x1, x1, #3
  400db4:	sdiv	x1, x1, x2
  400db8:	cbz	x1, 400de4 <register_tm_clones+0x4c>
  400dbc:	sub	sp, sp, #0x10
  400dc0:	adrp	x2, 401000 <main+0x1e4>
  400dc4:	ldr	x2, [x2, #368]
  400dc8:	str	x2, [sp, #8]
  400dcc:	cbz	x2, 400ddc <register_tm_clones+0x44>
  400dd0:	mov	x16, x2
  400dd4:	add	sp, sp, #0x10
  400dd8:	br	x16
  400ddc:	add	sp, sp, #0x10
  400de0:	ret
  400de4:	ret

0000000000400de8 <__do_global_dtors_aux>:
  400de8:	stp	x29, x30, [sp, #-32]!
  400dec:	mov	x29, sp
  400df0:	str	x19, [sp, #16]
  400df4:	adrp	x19, 420000 <completed.8445>
  400df8:	ldrb	w0, [x19]
  400dfc:	cbnz	w0, 400e0c <__do_global_dtors_aux+0x24>
  400e00:	bl	400d54 <deregister_tm_clones>
  400e04:	mov	w0, #0x1                   	// #1
  400e08:	strb	w0, [x19]
  400e0c:	ldr	x19, [sp, #16]
  400e10:	ldp	x29, x30, [sp], #32
  400e14:	ret

0000000000400e18 <frame_dummy>:
  400e18:	b	400d98 <register_tm_clones>

0000000000400e1c <main>:
  400e1c:	stp	x29, x30, [sp, #-64]!
  400e20:	adrp	x8, 420000 <completed.8445>
  400e24:	stp	x20, x19, [sp, #48]
  400e28:	mov	w19, w0
  400e2c:	adrp	x9, 420000 <completed.8445>
  400e30:	str	w0, [x8, #8]
  400e34:	mov	w0, wzr
  400e38:	stp	x24, x23, [sp, #16]
  400e3c:	stp	x22, x21, [sp, #32]
  400e40:	mov	x29, sp
  400e44:	mov	x20, x1
  400e48:	str	x1, [x9, #16]
  400e4c:	bl	400c00 <log_parse_environment_realm@plt>
  400e50:	bl	400c10 <log_open@plt>
  400e54:	tbnz	w19, #31, 401068 <main+0x24c>
  400e58:	cbz	x20, 401088 <main+0x26c>
  400e5c:	adrp	x2, 401000 <main+0x1e4>
  400e60:	adrp	x3, 401000 <main+0x1e4>
  400e64:	add	x2, x2, #0x1f5
  400e68:	add	x3, x3, #0x2f8
  400e6c:	mov	w0, w19
  400e70:	mov	x1, x20
  400e74:	mov	x4, xzr
  400e78:	bl	400c20 <getopt_long@plt>
  400e7c:	tbnz	w0, #31, 400ec8 <main+0xac>
  400e80:	adrp	x21, 401000 <main+0x1e4>
  400e84:	adrp	x22, 401000 <main+0x1e4>
  400e88:	adrp	x23, 420000 <completed.8445>
  400e8c:	mov	w24, #0x1                   	// #1
  400e90:	add	x21, x21, #0x1f5
  400e94:	add	x22, x22, #0x2f8
  400e98:	cmp	w0, #0x75
  400e9c:	b.le	400f20 <main+0x104>
  400ea0:	cmp	w0, #0x76
  400ea4:	b.ne	400f30 <main+0x114>  // b.any
  400ea8:	mov	w0, w19
  400eac:	mov	x1, x20
  400eb0:	mov	x2, x21
  400eb4:	mov	x3, x22
  400eb8:	mov	x4, xzr
  400ebc:	strb	w24, [x23, #1]
  400ec0:	bl	400c20 <getopt_long@plt>
  400ec4:	tbz	w0, #31, 400e98 <main+0x7c>
  400ec8:	adrp	x8, 420000 <completed.8445>
  400ecc:	ldr	w8, [x8, #24]
  400ed0:	cmp	w8, w19
  400ed4:	b.ge	400f48 <main+0x12c>  // b.tcont
  400ed8:	mov	w0, wzr
  400edc:	bl	400c30 <log_get_max_level_realm@plt>
  400ee0:	cmp	w0, #0x3
  400ee4:	b.lt	400f28 <main+0x10c>  // b.tstop
  400ee8:	adrp	x8, 420000 <completed.8445>
  400eec:	ldr	x6, [x8, #32]
  400ef0:	adrp	x2, 401000 <main+0x1e4>
  400ef4:	adrp	x4, 401000 <main+0x1e4>
  400ef8:	adrp	x5, 401000 <main+0x1e4>
  400efc:	mov	w1, #0x16                  	// #22
  400f00:	add	x2, x2, #0x17b
  400f04:	add	x4, x4, #0x209
  400f08:	add	x5, x5, #0x214
  400f0c:	mov	w0, #0x3                   	// #3
  400f10:	movk	w1, #0x4000, lsl #16
  400f14:	mov	w3, #0x3e                  	// #62
  400f18:	bl	400c40 <log_internal_realm@plt>
  400f1c:	b	400f3c <main+0x120>
  400f20:	cmp	w0, #0x3f
  400f24:	b.ne	400f8c <main+0x170>  // b.any
  400f28:	mov	w19, #0xffffffea            	// #-22
  400f2c:	b	400ffc <main+0x1e0>
  400f30:	cmp	w0, #0x100
  400f34:	b.ne	4010ac <main+0x290>  // b.any
  400f38:	bl	400c50 <version@plt>
  400f3c:	mov	w19, w0
  400f40:	cmp	w0, #0x1
  400f44:	b.lt	400ffc <main+0x1e0>  // b.tstop
  400f48:	bl	400c60 <on_ac_power@plt>
  400f4c:	mov	w19, w0
  400f50:	tbnz	w0, #31, 400fb0 <main+0x194>
  400f54:	adrp	x8, 420000 <completed.8445>
  400f58:	ldrb	w8, [x8, #1]
  400f5c:	cmp	w8, #0x1
  400f60:	b.ne	400f80 <main+0x164>  // b.any
  400f64:	adrp	x8, 401000 <main+0x1e4>
  400f68:	adrp	x9, 401000 <main+0x1e4>
  400f6c:	add	x8, x8, #0x2ed
  400f70:	add	x9, x9, #0x2f1
  400f74:	cmp	w19, #0x0
  400f78:	csel	x0, x9, x8, eq  // eq = none
  400f7c:	bl	400c70 <puts@plt>
  400f80:	cmp	w19, #0x0
  400f84:	cset	w19, eq  // eq = none
  400f88:	b	400ffc <main+0x1e0>
  400f8c:	cmp	w0, #0x68
  400f90:	b.ne	4010ac <main+0x290>  // b.any
  400f94:	adrp	x8, 420000 <completed.8445>
  400f98:	ldr	x1, [x8, #32]
  400f9c:	adrp	x0, 401000 <main+0x1e4>
  400fa0:	add	x0, x0, #0x22b
  400fa4:	bl	400c80 <printf@plt>
  400fa8:	mov	w19, wzr
  400fac:	b	400ffc <main+0x1e0>
  400fb0:	mov	w0, wzr
  400fb4:	bl	400c30 <log_get_max_level_realm@plt>
  400fb8:	cmp	w0, #0x3
  400fbc:	b.lt	400ff0 <main+0x1d4>  // b.tstop
  400fc0:	adrp	x2, 401000 <main+0x1e4>
  400fc4:	adrp	x4, 401000 <main+0x1e4>
  400fc8:	adrp	x5, 401000 <main+0x1e4>
  400fcc:	add	x2, x2, #0x17b
  400fd0:	add	x4, x4, #0x193
  400fd4:	add	x5, x5, #0x197
  400fd8:	mov	w0, #0x3                   	// #3
  400fdc:	mov	w3, #0x52                  	// #82
  400fe0:	mov	w1, w19
  400fe4:	bl	400c40 <log_internal_realm@plt>
  400fe8:	mov	w19, w0
  400fec:	b	400ffc <main+0x1e0>
  400ff0:	mov	w8, wzr
  400ff4:	neg	w9, w19
  400ff8:	sub	w19, w8, w9, uxtb
  400ffc:	bl	400c90 <ask_password_agent_close@plt>
  401000:	bl	400ca0 <polkit_agent_close@plt>
  401004:	bl	400cb0 <pager_close@plt>
  401008:	bl	400cc0 <mac_selinux_finish@plt>
  40100c:	adrp	x8, 41f000 <__FRAME_END__+0x1dba0>
  401010:	ldr	x8, [x8, #3912]
  401014:	adrp	x20, 41f000 <__FRAME_END__+0x1dba0>
  401018:	ldr	x20, [x20, #3920]
  40101c:	add	x9, x8, #0x7
  401020:	and	x21, x9, #0xfffffffffffffff8
  401024:	cmp	x21, x20
  401028:	cset	w9, cs  // cs = hs, nlast
  40102c:	cmp	x8, #0x0
  401030:	cset	w8, eq  // eq = none
  401034:	orr	w8, w8, w9
  401038:	tbnz	w8, #0, 40104c <main+0x230>
  40103c:	ldp	x0, x8, [x21], #16
  401040:	blr	x8
  401044:	cmp	x21, x20
  401048:	b.cc	40103c <main+0x220>  // b.lo, b.ul, b.last
  40104c:	cmp	w19, #0x0
  401050:	csinc	w0, w19, wzr, ge  // ge = tcont
  401054:	ldp	x20, x19, [sp, #48]
  401058:	ldp	x22, x21, [sp, #32]
  40105c:	ldp	x24, x23, [sp, #16]
  401060:	ldp	x29, x30, [sp], #64
  401064:	ret
  401068:	adrp	x1, 401000 <main+0x1e4>
  40106c:	adrp	x2, 401000 <main+0x1e4>
  401070:	adrp	x4, 401000 <main+0x1e4>
  401074:	add	x1, x1, #0x1c9
  401078:	add	x2, x2, #0x17b
  40107c:	add	x4, x4, #0x1d3
  401080:	mov	w3, #0x22                  	// #34
  401084:	b	4010a4 <main+0x288>
  401088:	adrp	x1, 401000 <main+0x1e4>
  40108c:	adrp	x2, 401000 <main+0x1e4>
  401090:	adrp	x4, 401000 <main+0x1e4>
  401094:	add	x1, x1, #0x1f0
  401098:	add	x2, x2, #0x17b
  40109c:	add	x4, x4, #0x1d3
  4010a0:	mov	w3, #0x23                  	// #35
  4010a4:	mov	w0, wzr
  4010a8:	bl	400cd0 <log_assert_failed_realm@plt>
  4010ac:	adrp	x1, 401000 <main+0x1e4>
  4010b0:	adrp	x2, 401000 <main+0x1e4>
  4010b4:	adrp	x4, 401000 <main+0x1e4>
  4010b8:	add	x1, x1, #0x1f8
  4010bc:	add	x2, x2, #0x17b
  4010c0:	add	x4, x4, #0x1d3
  4010c4:	mov	w3, #0x38                  	// #56
  4010c8:	mov	w0, wzr
  4010cc:	bl	400ce0 <log_assert_failed_unreachable_realm@plt>

00000000004010d0 <__libc_csu_init>:
  4010d0:	stp	x29, x30, [sp, #-64]!
  4010d4:	mov	x29, sp
  4010d8:	stp	x19, x20, [sp, #16]
  4010dc:	adrp	x20, 41f000 <__FRAME_END__+0x1dba0>
  4010e0:	add	x20, x20, #0xd18
  4010e4:	stp	x21, x22, [sp, #32]
  4010e8:	adrp	x21, 41f000 <__FRAME_END__+0x1dba0>
  4010ec:	add	x21, x21, #0xd10
  4010f0:	sub	x20, x20, x21
  4010f4:	mov	w22, w0
  4010f8:	stp	x23, x24, [sp, #48]
  4010fc:	mov	x23, x1
  401100:	mov	x24, x2
  401104:	bl	400b98 <_init>
  401108:	cmp	xzr, x20, asr #3
  40110c:	b.eq	401138 <__libc_csu_init+0x68>  // b.none
  401110:	asr	x20, x20, #3
  401114:	mov	x19, #0x0                   	// #0
  401118:	ldr	x3, [x21, x19, lsl #3]
  40111c:	mov	x2, x24
  401120:	add	x19, x19, #0x1
  401124:	mov	x1, x23
  401128:	mov	w0, w22
  40112c:	blr	x3
  401130:	cmp	x20, x19
  401134:	b.ne	401118 <__libc_csu_init+0x48>  // b.any
  401138:	ldp	x19, x20, [sp, #16]
  40113c:	ldp	x21, x22, [sp, #32]
  401140:	ldp	x23, x24, [sp, #48]
  401144:	ldp	x29, x30, [sp], #64
  401148:	ret
  40114c:	nop

0000000000401150 <__libc_csu_fini>:
  401150:	ret

Disassembly of section .fini:

0000000000401154 <_fini>:
  401154:	stp	x29, x30, [sp, #-16]!
  401158:	mov	x29, sp
  40115c:	ldp	x29, x30, [sp], #16
  401160:	ret
