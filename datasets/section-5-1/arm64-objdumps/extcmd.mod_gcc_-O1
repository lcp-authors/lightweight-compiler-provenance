
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//extcmd.mod_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_extcmd_dispatcher>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	w20, w1
  14:	mov	x21, x2
  18:	ldr	x19, [x0, #64]
  1c:	str	xzr, [sp, #64]
  20:	str	x19, [sp, #56]
  24:	str	x3, [sp, #72]
  28:	ldr	x0, [x19, #16]
  2c:	cbz	x0, 9c <grub_extcmd_dispatcher+0x9c>
  30:	mov	x0, x19
  34:	bl	ce8 <grub_arg_list_alloc>
  38:	mov	x22, x0
  3c:	add	x5, sp, #0x5c
  40:	add	x4, sp, #0x50
  44:	mov	x3, x0
  48:	mov	x2, x21
  4c:	mov	w1, w20
  50:	mov	x0, x19
  54:	bl	6a8 <grub_arg_parse>
  58:	cbz	w0, b0 <grub_extcmd_dispatcher+0xb0>
  5c:	str	x22, [sp, #64]
  60:	ldr	x3, [x19, #8]
  64:	ldr	x2, [sp, #80]
  68:	ldr	w1, [sp, #92]
  6c:	add	x0, sp, #0x38
  70:	blr	x3
  74:	mov	w19, w0
  78:	ldr	x0, [sp, #80]
  7c:	bl	0 <grub_free>
  80:	mov	x0, x22
  84:	bl	0 <grub_free>
  88:	mov	w0, w19
  8c:	ldp	x19, x20, [sp, #16]
  90:	ldp	x21, x22, [sp, #32]
  94:	ldp	x29, x30, [sp], #96
  98:	ret
  9c:	ldr	x3, [x19, #8]
  a0:	add	x0, sp, #0x38
  a4:	blr	x3
  a8:	mov	w19, w0
  ac:	b	88 <grub_extcmd_dispatcher+0x88>
  b0:	mov	x0, x22
  b4:	bl	0 <grub_free>
  b8:	adrp	x0, 0 <grub_extcmd_dispatcher>
  bc:	ldr	x0, [x0]
  c0:	ldr	w19, [x0]
  c4:	b	88 <grub_extcmd_dispatcher+0x88>
	...
  d0:	stp	x29, x30, [sp, #-16]!
  d4:	mov	x29, sp
  d8:	mov	x3, #0x0                   	// #0
  dc:	bl	0 <grub_extcmd_dispatcher>
  e0:	ldp	x29, x30, [sp], #16
  e4:	ret

00000000000000e8 <grub_register_extcmd_prio>:
  e8:	stp	x29, x30, [sp, #-80]!
  ec:	mov	x29, sp
  f0:	stp	x19, x20, [sp, #16]
  f4:	stp	x21, x22, [sp, #32]
  f8:	stp	x23, x24, [sp, #48]
  fc:	stp	x25, x26, [sp, #64]
 100:	mov	x20, x0
 104:	mov	x25, x1
 108:	mov	w21, w2
 10c:	mov	x22, x3
 110:	mov	x23, x4
 114:	mov	x24, x5
 118:	mov	w26, w6
 11c:	mov	x0, #0x20                  	// #32
 120:	bl	0 <grub_malloc>
 124:	mov	x19, x0
 128:	cbz	x0, 16c <grub_register_extcmd_prio+0x84>
 12c:	mov	w4, w26
 130:	mov	x3, x23
 134:	mov	x2, x22
 138:	adrp	x0, 0 <grub_extcmd_dispatcher>
 13c:	ldr	x1, [x0]
 140:	mov	x0, x20
 144:	bl	0 <grub_register_command_prio>
 148:	mov	x20, x0
 14c:	cbz	x0, 188 <grub_register_extcmd_prio+0xa0>
 150:	orr	w21, w21, #0x10
 154:	str	w21, [x0, #40]
 158:	str	x19, [x0, #64]
 15c:	str	x0, [x19]
 160:	str	x25, [x19, #8]
 164:	str	x24, [x19, #16]
 168:	str	xzr, [x19, #24]
 16c:	mov	x0, x19
 170:	ldp	x19, x20, [sp, #16]
 174:	ldp	x21, x22, [sp, #32]
 178:	ldp	x23, x24, [sp, #48]
 17c:	ldp	x25, x26, [sp, #64]
 180:	ldp	x29, x30, [sp], #80
 184:	ret
 188:	mov	x0, x19
 18c:	bl	0 <grub_free>
 190:	mov	x19, x20
 194:	b	16c <grub_register_extcmd_prio+0x84>
	...

00000000000001a0 <grub_register_extcmd>:
 1a0:	stp	x29, x30, [sp, #-16]!
 1a4:	mov	x29, sp
 1a8:	mov	w6, #0x1                   	// #1
 1ac:	bl	e8 <grub_register_extcmd_prio>
 1b0:	ldp	x29, x30, [sp], #16
 1b4:	ret

00000000000001b8 <grub_unregister_extcmd>:
 1b8:	stp	x29, x30, [sp, #-32]!
 1bc:	mov	x29, sp
 1c0:	str	x19, [sp, #16]
 1c4:	mov	x19, x0
 1c8:	ldr	x0, [x0]
 1cc:	bl	0 <grub_unregister_command>
 1d0:	mov	x0, x19
 1d4:	bl	0 <grub_free>
 1d8:	ldr	x19, [sp, #16]
 1dc:	ldp	x29, x30, [sp], #32
 1e0:	ret
 1e4:	nop
 1e8:	and	w1, w1, #0xff
 1ec:	cbz	x0, 210 <grub_unregister_extcmd+0x58>
 1f0:	ldr	x2, [x0, #16]
 1f4:	cbz	x2, 210 <grub_unregister_extcmd+0x58>
 1f8:	ldr	w2, [x0, #8]
 1fc:	cmp	w2, w1
 200:	b.eq	230 <grub_unregister_extcmd+0x78>  // b.none
 204:	add	x0, x0, #0x28
 208:	ldr	x2, [x0, #16]
 20c:	cbnz	x2, 1f8 <grub_unregister_extcmd+0x40>
 210:	cmp	w1, #0x68
 214:	b.eq	234 <grub_unregister_extcmd+0x7c>  // b.none
 218:	mov	x0, #0x0                   	// #0
 21c:	cmp	w1, #0x75
 220:	b.ne	230 <grub_unregister_extcmd+0x78>  // b.any
 224:	adrp	x0, 0 <grub_extcmd_dispatcher>
 228:	ldr	x0, [x0]
 22c:	add	x0, x0, #0x28
 230:	ret
 234:	adrp	x0, 0 <grub_extcmd_dispatcher>
 238:	ldr	x0, [x0]
 23c:	b	230 <grub_unregister_extcmd+0x78>
	...
 248:	stp	x29, x30, [sp, #-48]!
 24c:	mov	x29, sp
 250:	stp	x19, x20, [sp, #16]
 254:	str	x21, [sp, #32]
 258:	mov	x20, x0
 25c:	adrp	x0, 0 <grub_extcmd_dispatcher>
 260:	ldr	x21, [x0]
 264:	ldr	x1, [x21]
 268:	adrp	x0, 0 <grub_extcmd_dispatcher>
 26c:	ldr	x0, [x0]
 270:	blr	x1
 274:	mov	x19, x0
 278:	ldr	x0, [x20]
 27c:	ldr	x20, [x0, #16]
 280:	ldr	x1, [x21]
 284:	ldr	x0, [x0, #48]
 288:	blr	x1
 28c:	mov	x3, x0
 290:	mov	x2, x20
 294:	mov	x1, x19
 298:	adrp	x0, 0 <grub_extcmd_dispatcher>
 29c:	ldr	x0, [x0]
 2a0:	bl	0 <grub_printf>
 2a4:	ldp	x19, x20, [sp, #16]
 2a8:	ldr	x21, [sp, #32]
 2ac:	ldp	x29, x30, [sp], #48
 2b0:	ret
 2b4:	nop
	...
 2d0:	stp	x29, x30, [sp, #-96]!
 2d4:	mov	x29, sp
 2d8:	stp	x19, x20, [sp, #16]
 2dc:	mov	x20, x0
 2e0:	ldr	x0, [x0, #16]
 2e4:	cbz	x0, 44c <grub_unregister_extcmd+0x294>
 2e8:	stp	x21, x22, [sp, #32]
 2ec:	stp	x23, x24, [sp, #48]
 2f0:	stp	x25, x26, [sp, #64]
 2f4:	stp	x27, x28, [sp, #80]
 2f8:	mov	w24, w1
 2fc:	mov	w25, w2
 300:	adrp	x23, 0 <grub_extcmd_dispatcher>
 304:	adrp	x26, 0 <grub_extcmd_dispatcher>
 308:	adrp	x28, 0 <grub_extcmd_dispatcher>
 30c:	mov	w27, #0x2c                  	// #44
 310:	b	3f0 <grub_unregister_extcmd+0x238>
 314:	ldr	x0, [x23]
 318:	cmp	w24, #0x0
 31c:	ccmp	x20, x0, #0x0, eq  // eq = none
 320:	b.eq	420 <grub_unregister_extcmd+0x268>  // b.none
 324:	ldr	x0, [x23]
 328:	add	x0, x0, #0x28
 32c:	cmp	w25, #0x0
 330:	ccmp	x20, x0, #0x0, eq  // eq = none
 334:	b.eq	430 <grub_unregister_extcmd+0x278>  // b.none
 338:	ldr	x0, [x26]
 33c:	bl	0 <grub_printf>
 340:	ldr	x1, [x20]
 344:	mov	w19, #0x14                  	// #20
 348:	cbz	x1, 398 <grub_unregister_extcmd+0x1e0>
 34c:	adrp	x0, 0 <grub_extcmd_dispatcher>
 350:	ldr	x0, [x0]
 354:	bl	0 <grub_printf>
 358:	ldr	x0, [x20]
 35c:	bl	0 <grub_strlen>
 360:	mov	w19, #0x12                  	// #18
 364:	sub	w19, w19, w0
 368:	ldr	x1, [x20, #24]
 36c:	cbz	x1, 38c <grub_unregister_extcmd+0x1d4>
 370:	adrp	x0, 0 <grub_extcmd_dispatcher>
 374:	ldr	x0, [x0]
 378:	bl	0 <grub_printf>
 37c:	ldr	x0, [x20, #24]
 380:	bl	0 <grub_strlen>
 384:	add	x0, x0, #0x1
 388:	sub	w19, w19, w0
 38c:	cmp	w19, #0x0
 390:	mov	w0, #0x3                   	// #3
 394:	csel	w19, w19, w0, gt
 398:	sub	w19, w19, #0x1
 39c:	adrp	x22, 0 <grub_extcmd_dispatcher>
 3a0:	adrp	x21, 0 <grub_extcmd_dispatcher>
 3a4:	ldr	x0, [x21]
 3a8:	ldr	x1, [x0]
 3ac:	ldr	x0, [x22]
 3b0:	blr	x1
 3b4:	sub	w19, w19, #0x1
 3b8:	cmn	w19, #0x1
 3bc:	b.ne	3a4 <grub_unregister_extcmd+0x1ec>  // b.any
 3c0:	adrp	x0, 0 <grub_extcmd_dispatcher>
 3c4:	ldr	x0, [x0]
 3c8:	ldr	x1, [x0]
 3cc:	ldr	x0, [x20, #16]
 3d0:	blr	x1
 3d4:	mov	x1, x0
 3d8:	adrp	x0, 0 <grub_extcmd_dispatcher>
 3dc:	ldr	x0, [x0]
 3e0:	bl	0 <grub_printf>
 3e4:	add	x20, x20, #0x28
 3e8:	ldr	x0, [x20, #16]
 3ec:	cbz	x0, 43c <grub_unregister_extcmd+0x284>
 3f0:	ldr	w1, [x20, #8]
 3f4:	sub	w0, w1, #0x21
 3f8:	cmp	w0, #0x5d
 3fc:	b.hi	314 <grub_unregister_extcmd+0x15c>  // b.pmore
 400:	ldr	x0, [x20]
 404:	cmp	x0, #0x0
 408:	mov	w2, #0x20                  	// #32
 40c:	csel	w2, w27, w2, ne  // ne = any
 410:	adrp	x0, 0 <grub_extcmd_dispatcher>
 414:	ldr	x0, [x0]
 418:	bl	0 <grub_printf>
 41c:	b	340 <grub_unregister_extcmd+0x188>
 420:	adrp	x0, 0 <grub_extcmd_dispatcher>
 424:	ldr	x0, [x0]
 428:	bl	0 <grub_printf>
 42c:	b	340 <grub_unregister_extcmd+0x188>
 430:	ldr	x0, [x28]
 434:	bl	0 <grub_printf>
 438:	b	340 <grub_unregister_extcmd+0x188>
 43c:	ldp	x21, x22, [sp, #32]
 440:	ldp	x23, x24, [sp, #48]
 444:	ldp	x25, x26, [sp, #64]
 448:	ldp	x27, x28, [sp, #80]
 44c:	ldp	x19, x20, [sp, #16]
 450:	ldp	x29, x30, [sp], #96
 454:	ret
	...
 4b0:	stp	x29, x30, [sp, #-48]!
 4b4:	mov	x29, sp
 4b8:	stp	x19, x20, [sp, #16]
 4bc:	mov	x19, x0
 4c0:	ldr	x0, [x0, #16]
 4c4:	cbz	x0, 518 <grub_unregister_extcmd+0x360>
 4c8:	str	x21, [sp, #32]
 4cc:	mov	x21, x1
 4d0:	sxtw	x20, w2
 4d4:	b	4e4 <grub_unregister_extcmd+0x32c>
 4d8:	add	x19, x19, #0x28
 4dc:	ldr	x0, [x19, #16]
 4e0:	cbz	x0, 514 <grub_unregister_extcmd+0x35c>
 4e4:	ldr	x0, [x19]
 4e8:	cbz	x0, 4d8 <grub_unregister_extcmd+0x320>
 4ec:	mov	x2, x20
 4f0:	mov	x1, x21
 4f4:	bl	0 <grub_strncmp>
 4f8:	cbnz	w0, 4d8 <grub_unregister_extcmd+0x320>
 4fc:	ldr	x0, [x19]
 500:	ldrb	w0, [x0, x20]
 504:	cbnz	w0, 4d8 <grub_unregister_extcmd+0x320>
 508:	mov	x0, x19
 50c:	ldr	x21, [sp, #32]
 510:	b	518 <grub_unregister_extcmd+0x360>
 514:	ldr	x21, [sp, #32]
 518:	ldp	x19, x20, [sp, #16]
 51c:	ldp	x29, x30, [sp], #48
 520:	ret

0000000000000524 <grub_arg_show_help>:
 524:	stp	x29, x30, [sp, #-32]!
 528:	mov	x29, sp
 52c:	stp	x19, x20, [sp, #16]
 530:	mov	x19, x0
 534:	bl	248 <grub_unregister_extcmd+0x90>
 538:	ldr	x0, [x19]
 53c:	adrp	x1, 0 <grub_extcmd_dispatcher>
 540:	ldr	x1, [x1]
 544:	ldr	x1, [x1]
 548:	ldr	x0, [x0, #56]
 54c:	blr	x1
 550:	mov	x1, x0
 554:	adrp	x0, 0 <grub_extcmd_dispatcher>
 558:	ldr	x0, [x0]
 55c:	bl	0 <grub_printf>
 560:	ldr	x0, [x19, #16]
 564:	mov	x1, x0
 568:	mov	w19, #0x0                   	// #0
 56c:	mov	w20, #0x0                   	// #0
 570:	mov	w3, #0x1                   	// #1
 574:	cbnz	x0, 588 <grub_arg_show_help+0x64>
 578:	b	5b0 <grub_arg_show_help+0x8c>
 57c:	cmp	w2, #0x75
 580:	csel	w19, w19, w3, ne  // ne = any
 584:	add	x1, x1, #0x28
 588:	ldr	x2, [x1, #16]
 58c:	cbz	x2, 5a4 <grub_arg_show_help+0x80>
 590:	ldr	w2, [x1, #8]
 594:	cmp	w2, #0x68
 598:	b.ne	57c <grub_arg_show_help+0x58>  // b.any
 59c:	mov	w20, w3
 5a0:	b	584 <grub_arg_show_help+0x60>
 5a4:	mov	w2, w19
 5a8:	mov	w1, w20
 5ac:	bl	2d0 <grub_unregister_extcmd+0x118>
 5b0:	mov	w2, w19
 5b4:	mov	w1, w20
 5b8:	adrp	x0, 0 <grub_extcmd_dispatcher>
 5bc:	ldr	x0, [x0]
 5c0:	bl	2d0 <grub_unregister_extcmd+0x118>
 5c4:	ldp	x19, x20, [sp, #16]
 5c8:	ldp	x29, x30, [sp], #32
 5cc:	ret
	...
 5e8:	stp	x29, x30, [sp, #-16]!
 5ec:	mov	x29, sp
 5f0:	adrp	x4, 0 <grub_extcmd_dispatcher>
 5f4:	ldr	x4, [x4]
 5f8:	cmp	x1, x4
 5fc:	b.eq	66c <grub_arg_show_help+0x148>  // b.none
 600:	adrp	x4, 0 <grub_extcmd_dispatcher>
 604:	ldr	x4, [x4]
 608:	add	x4, x4, #0x28
 60c:	cmp	x1, x4
 610:	b.eq	678 <grub_arg_show_help+0x154>  // b.none
 614:	ldr	x0, [x0, #16]
 618:	sub	x0, x1, x0
 61c:	asr	x0, x0, #3
 620:	mov	x4, #0xcccccccccccccccc    	// #-3689348814741910324
 624:	movk	x4, #0xcccd
 628:	mul	x4, x0, x4
 62c:	ldr	w1, [x1, #12]
 630:	and	w0, w1, #0x4
 634:	tbz	w1, #2, 684 <grub_arg_show_help+0x160>
 638:	sbfiz	x0, x4, #4, #32
 63c:	add	x1, x3, x0
 640:	ldr	x5, [x1, #8]
 644:	ldr	w4, [x3, x0]
 648:	add	w6, w4, #0x1
 64c:	str	w6, [x3, x0]
 650:	str	x2, [x5, w4, sxtw #3]
 654:	ldrsw	x2, [x3, x0]
 658:	ldr	x0, [x1, #8]
 65c:	str	xzr, [x0, x2, lsl #3]
 660:	mov	w0, #0x0                   	// #0
 664:	ldp	x29, x30, [sp], #16
 668:	ret
 66c:	bl	524 <grub_arg_show_help>
 670:	mov	w0, #0xffffffff            	// #-1
 674:	b	664 <grub_arg_show_help+0x140>
 678:	bl	248 <grub_unregister_extcmd+0x90>
 67c:	mov	w0, #0xffffffff            	// #-1
 680:	b	664 <grub_arg_show_help+0x140>
 684:	sbfiz	x4, x4, #4, #32
 688:	add	x1, x3, x4
 68c:	mov	w5, #0x1                   	// #1
 690:	str	w5, [x3, x4]
 694:	str	x2, [x1, #8]
 698:	b	664 <grub_arg_show_help+0x140>
 69c:	nop
	...

00000000000006a8 <grub_arg_parse>:
 6a8:	stp	x29, x30, [sp, #-160]!
 6ac:	mov	x29, sp
 6b0:	stp	x19, x20, [sp, #16]
 6b4:	stp	x21, x22, [sp, #32]
 6b8:	stp	x23, x24, [sp, #48]
 6bc:	str	x3, [sp, #96]
 6c0:	str	x4, [sp, #112]
 6c4:	str	x5, [sp, #120]
 6c8:	cmp	w1, #0x0
 6cc:	b.le	c88 <grub_arg_parse+0x5e0>
 6d0:	stp	x25, x26, [sp, #64]
 6d4:	stp	x27, x28, [sp, #80]
 6d8:	mov	x21, x0
 6dc:	mov	w25, w1
 6e0:	mov	x26, x2
 6e4:	mov	w19, #0x0                   	// #0
 6e8:	mov	x24, #0x0                   	// #0
 6ec:	mov	w20, #0x0                   	// #0
 6f0:	adrp	x28, 0 <grub_extcmd_dispatcher>
 6f4:	sbfiz	x0, x20, #3, #32
 6f8:	str	x0, [sp, #104]
 6fc:	ldr	x22, [x26, w20, sxtw #3]
 700:	cbz	w19, 710 <grub_arg_parse+0x68>
 704:	ldr	x0, [x21]
 708:	ldr	w0, [x0, #40]
 70c:	tbnz	w0, #8, 71c <grub_arg_parse+0x74>
 710:	ldrb	w0, [x22]
 714:	cmp	w0, #0x2d
 718:	b.eq	768 <grub_arg_parse+0xc0>  // b.none
 71c:	add	w27, w19, #0x1
 720:	add	w19, w19, #0x2
 724:	sbfiz	x19, x19, #3, #32
 728:	mov	x1, x19
 72c:	mov	x0, x24
 730:	bl	0 <grub_realloc>
 734:	mov	x23, x0
 738:	cbz	x0, 80c <grub_arg_parse+0x164>
 73c:	add	x19, x0, x19
 740:	stur	x22, [x19, #-16]
 744:	stur	xzr, [x19, #-8]
 748:	mov	w19, w27
 74c:	mov	x24, x0
 750:	add	w20, w20, #0x1
 754:	cmp	w25, w20
 758:	b.gt	6f4 <grub_arg_parse+0x4c>
 75c:	ldp	x25, x26, [sp, #64]
 760:	ldp	x27, x28, [sp, #80]
 764:	b	c90 <grub_arg_parse+0x5e8>
 768:	mov	x0, x22
 76c:	bl	0 <grub_strlen>
 770:	cmp	x0, #0x1
 774:	b.eq	71c <grub_arg_parse+0x74>  // b.none
 778:	ldrb	w23, [x22, #1]
 77c:	cmp	w23, #0x2d
 780:	b.eq	984 <grub_arg_parse+0x2dc>  // b.none
 784:	ldr	x0, [x21]
 788:	ldr	w0, [x0, #40]
 78c:	tbz	w0, #7, 7b8 <grub_arg_parse+0x110>
 790:	add	x27, x22, #0x1
 794:	cbz	w23, 7b8 <grub_arg_parse+0x110>
 798:	ldr	x0, [x21, #16]
 79c:	str	x0, [sp, #128]
 7a0:	mov	w1, w23
 7a4:	ldr	x0, [sp, #128]
 7a8:	bl	1e8 <grub_unregister_extcmd+0x30>
 7ac:	cbz	x0, 850 <grub_arg_parse+0x1a8>
 7b0:	ldrb	w23, [x27, #1]!
 7b4:	cbnz	w23, 7a0 <grub_arg_parse+0xf8>
 7b8:	add	x27, x22, #0x1
 7bc:	ldrb	w1, [x27]
 7c0:	ldr	x0, [x21, #16]
 7c4:	bl	1e8 <grub_unregister_extcmd+0x30>
 7c8:	mov	x23, x0
 7cc:	cbz	x0, 8bc <grub_arg_parse+0x214>
 7d0:	ldrb	w0, [x27, #1]!
 7d4:	cbz	w0, 8f4 <grub_arg_parse+0x24c>
 7d8:	ldr	x3, [sp, #96]
 7dc:	mov	x2, #0x0                   	// #0
 7e0:	mov	x1, x23
 7e4:	mov	x0, x21
 7e8:	bl	5e8 <grub_arg_show_help+0xc4>
 7ec:	ldr	x1, [x28]
 7f0:	ldr	w1, [x1]
 7f4:	orr	w0, w0, w1
 7f8:	cbz	w0, 7bc <grub_arg_parse+0x114>
 7fc:	mov	w22, #0x0                   	// #0
 800:	ldp	x25, x26, [sp, #64]
 804:	ldp	x27, x28, [sp, #80]
 808:	b	82c <grub_arg_parse+0x184>
 80c:	mov	x0, x24
 810:	bl	0 <grub_free>
 814:	ldr	x0, [x28]
 818:	ldr	w0, [x0]
 81c:	cbz	w0, 844 <grub_arg_parse+0x19c>
 820:	mov	w22, #0x0                   	// #0
 824:	ldp	x25, x26, [sp, #64]
 828:	ldp	x27, x28, [sp, #80]
 82c:	mov	w0, w22
 830:	ldp	x19, x20, [sp, #16]
 834:	ldp	x21, x22, [sp, #32]
 838:	ldp	x23, x24, [sp, #48]
 83c:	ldp	x29, x30, [sp], #160
 840:	ret
 844:	mov	w19, w27
 848:	mov	x24, x23
 84c:	b	750 <grub_arg_parse+0xa8>
 850:	cbz	w23, 7b8 <grub_arg_parse+0x110>
 854:	add	w27, w19, #0x1
 858:	add	w19, w19, #0x2
 85c:	sbfiz	x19, x19, #3, #32
 860:	mov	x1, x19
 864:	mov	x0, x24
 868:	bl	0 <grub_realloc>
 86c:	mov	x23, x0
 870:	cbz	x0, 88c <grub_arg_parse+0x1e4>
 874:	add	x19, x0, x19
 878:	stur	x22, [x19, #-16]
 87c:	stur	xzr, [x19, #-8]
 880:	mov	w19, w27
 884:	mov	x24, x0
 888:	b	750 <grub_arg_parse+0xa8>
 88c:	mov	x0, x24
 890:	bl	0 <grub_free>
 894:	ldr	x0, [x28]
 898:	ldr	w0, [x0]
 89c:	cbz	w0, 8b0 <grub_arg_parse+0x208>
 8a0:	mov	w22, #0x0                   	// #0
 8a4:	ldp	x25, x26, [sp, #64]
 8a8:	ldp	x27, x28, [sp, #80]
 8ac:	b	82c <grub_arg_parse+0x184>
 8b0:	mov	w19, w27
 8b4:	mov	x24, x23
 8b8:	b	750 <grub_arg_parse+0xa8>
 8bc:	mov	w0, #0x2d                  	// #45
 8c0:	strb	w0, [sp, #152]
 8c4:	ldrb	w0, [x27]
 8c8:	strb	w0, [sp, #153]
 8cc:	strb	wzr, [sp, #154]
 8d0:	add	x2, sp, #0x98
 8d4:	adrp	x0, 0 <grub_extcmd_dispatcher>
 8d8:	ldr	x1, [x0]
 8dc:	mov	w0, #0x12                  	// #18
 8e0:	bl	0 <grub_error>
 8e4:	mov	w22, #0x0                   	// #0
 8e8:	ldp	x25, x26, [sp, #64]
 8ec:	ldp	x27, x28, [sp, #80]
 8f0:	b	82c <grub_arg_parse+0x184>
 8f4:	ldr	w0, [x23, #32]
 8f8:	cbz	w0, c30 <grub_arg_parse+0x588>
 8fc:	add	w0, w20, #0x1
 900:	str	w0, [sp, #128]
 904:	cmp	w0, w25
 908:	b.ge	958 <grub_arg_parse+0x2b0>  // b.tcont
 90c:	ldr	w0, [x23, #12]
 910:	tbnz	w0, #1, 928 <grub_arg_parse+0x280>
 914:	ldr	x0, [sp, #104]
 918:	add	x0, x26, x0
 91c:	ldr	x27, [x0, #8]
 920:	ldr	w20, [sp, #128]
 924:	b	9dc <grub_arg_parse+0x334>
 928:	ldr	x0, [sp, #104]
 92c:	add	x0, x26, x0
 930:	ldr	x27, [x0, #8]
 934:	mov	x0, x27
 938:	bl	0 <grub_strlen>
 93c:	cmp	x0, #0x1
 940:	b.ls	914 <grub_arg_parse+0x26c>  // b.plast
 944:	ldrb	w0, [x27]
 948:	cmp	w0, #0x2d
 94c:	b.ne	914 <grub_arg_parse+0x26c>  // b.any
 950:	ldr	w0, [x23, #32]
 954:	cbz	w0, c30 <grub_arg_parse+0x588>
 958:	ldr	w0, [x23, #12]
 95c:	and	w22, w0, #0x2
 960:	tbnz	w0, #1, c30 <grub_arg_parse+0x588>
 964:	ldr	x2, [x23]
 968:	adrp	x0, 0 <grub_extcmd_dispatcher>
 96c:	ldr	x1, [x0]
 970:	mov	w0, #0x12                  	// #18
 974:	bl	0 <grub_error>
 978:	ldp	x25, x26, [sp, #64]
 97c:	ldp	x27, x28, [sp, #80]
 980:	b	82c <grub_arg_parse+0x184>
 984:	mov	x0, x22
 988:	bl	0 <grub_strlen>
 98c:	cmp	x0, #0x2
 990:	b.eq	a24 <grub_arg_parse+0x37c>  // b.none
 994:	mov	w1, #0x3d                  	// #61
 998:	mov	x0, x22
 99c:	bl	0 <grub_strchr>
 9a0:	mov	x27, x0
 9a4:	cbz	x0, ac8 <grub_arg_parse+0x420>
 9a8:	sub	x0, x0, x22
 9ac:	sub	w0, w0, #0x2
 9b0:	str	w0, [sp, #128]
 9b4:	add	x27, x27, #0x1
 9b8:	ldr	x0, [x21, #16]
 9bc:	add	x1, x22, #0x2
 9c0:	str	x1, [sp, #136]
 9c4:	cbz	x0, adc <grub_arg_parse+0x434>
 9c8:	ldr	w2, [sp, #128]
 9cc:	bl	4b0 <grub_unregister_extcmd+0x2f8>
 9d0:	mov	x23, x0
 9d4:	cbz	x0, adc <grub_arg_parse+0x434>
 9d8:	cbz	x27, b2c <grub_arg_parse+0x484>
 9dc:	ldr	w0, [x23, #32]
 9e0:	cbz	w0, c2c <grub_arg_parse+0x584>
 9e4:	cbz	x27, 958 <grub_arg_parse+0x2b0>
 9e8:	cmp	w0, #0x2
 9ec:	b.eq	bd0 <grub_arg_parse+0x528>  // b.none
 9f0:	ldr	x3, [sp, #96]
 9f4:	mov	x2, x27
 9f8:	mov	x1, x23
 9fc:	mov	x0, x21
 a00:	bl	5e8 <grub_arg_show_help+0xc4>
 a04:	ldr	x1, [x28]
 a08:	ldr	w1, [x1]
 a0c:	orr	w0, w0, w1
 a10:	cbz	w0, 750 <grub_arg_parse+0xa8>
 a14:	mov	w22, #0x0                   	// #0
 a18:	ldp	x25, x26, [sp, #64]
 a1c:	ldp	x27, x28, [sp, #80]
 a20:	b	82c <grub_arg_parse+0x184>
 a24:	add	w0, w20, #0x1
 a28:	cmp	w25, w0
 a2c:	b.le	ca8 <grub_arg_parse+0x600>
 a30:	sxtw	x0, w19
 a34:	add	x21, x0, #0x2
 a38:	lsl	x21, x21, #3
 a3c:	sub	w25, w25, #0x1
 a40:	sub	w20, w19, w20
 a44:	add	w20, w25, w20
 a48:	mov	x1, #0xfffffffffffffff8    	// #-8
 a4c:	ldr	x2, [sp, #104]
 a50:	madd	x0, x0, x1, x2
 a54:	add	x0, x0, x1
 a58:	add	x26, x26, x0
 a5c:	adrp	x23, 0 <grub_extcmd_dispatcher>
 a60:	ldr	x22, [x26, x21]
 a64:	add	w19, w19, #0x1
 a68:	mov	x25, x24
 a6c:	mov	x1, x21
 a70:	mov	x0, x24
 a74:	bl	0 <grub_realloc>
 a78:	mov	x24, x0
 a7c:	cbz	x0, aa4 <grub_arg_parse+0x3fc>
 a80:	add	x0, x0, x21
 a84:	stur	x22, [x0, #-16]
 a88:	stur	xzr, [x0, #-8]
 a8c:	add	x21, x21, #0x8
 a90:	cmp	w20, w19
 a94:	b.ne	a60 <grub_arg_parse+0x3b8>  // b.any
 a98:	ldp	x25, x26, [sp, #64]
 a9c:	ldp	x27, x28, [sp, #80]
 aa0:	b	c90 <grub_arg_parse+0x5e8>
 aa4:	mov	x0, x25
 aa8:	bl	0 <grub_free>
 aac:	ldr	x0, [x23]
 ab0:	ldr	w0, [x0]
 ab4:	cbz	w0, a8c <grub_arg_parse+0x3e4>
 ab8:	mov	w22, #0x0                   	// #0
 abc:	ldp	x25, x26, [sp, #64]
 ac0:	ldp	x27, x28, [sp, #80]
 ac4:	b	82c <grub_arg_parse+0x184>
 ac8:	mov	x0, x22
 acc:	bl	0 <grub_strlen>
 ad0:	sub	w0, w0, #0x2
 ad4:	str	w0, [sp, #128]
 ad8:	b	9b8 <grub_arg_parse+0x310>
 adc:	ldr	w2, [sp, #128]
 ae0:	ldr	x1, [sp, #136]
 ae4:	adrp	x0, 0 <grub_extcmd_dispatcher>
 ae8:	ldr	x0, [x0]
 aec:	bl	4b0 <grub_unregister_extcmd+0x2f8>
 af0:	mov	x23, x0
 af4:	cbz	x27, b2c <grub_arg_parse+0x484>
 af8:	cbnz	x23, 9dc <grub_arg_parse+0x334>
 afc:	ldr	x0, [x21]
 b00:	ldr	w0, [x0, #40]
 b04:	tbnz	w0, #7, b68 <grub_arg_parse+0x4c0>
 b08:	mov	x2, x22
 b0c:	adrp	x0, 0 <grub_extcmd_dispatcher>
 b10:	ldr	x1, [x0]
 b14:	mov	w0, #0x12                  	// #18
 b18:	bl	0 <grub_error>
 b1c:	mov	w22, #0x0                   	// #0
 b20:	ldp	x25, x26, [sp, #64]
 b24:	ldp	x27, x28, [sp, #80]
 b28:	b	82c <grub_arg_parse+0x184>
 b2c:	ldr	x0, [sp, #104]
 b30:	add	x0, x26, x0
 b34:	ldr	x27, [x0, #8]
 b38:	cbz	x27, af8 <grub_arg_parse+0x450>
 b3c:	ldrb	w0, [x27]
 b40:	cmp	w0, #0x2d
 b44:	ccmp	x23, #0x0, #0x4, ne  // ne = any
 b48:	b.ne	b54 <grub_arg_parse+0x4ac>  // b.any
 b4c:	mov	x27, #0x0                   	// #0
 b50:	b	af8 <grub_arg_parse+0x450>
 b54:	ldr	w0, [x23, #32]
 b58:	cbz	w0, c28 <grub_arg_parse+0x580>
 b5c:	add	w20, w20, #0x1
 b60:	ldr	w0, [x23, #32]
 b64:	b	9e8 <grub_arg_parse+0x340>
 b68:	add	w27, w19, #0x1
 b6c:	add	w19, w19, #0x2
 b70:	sbfiz	x19, x19, #3, #32
 b74:	mov	x1, x19
 b78:	mov	x0, x24
 b7c:	bl	0 <grub_realloc>
 b80:	mov	x23, x0
 b84:	cbz	x0, ba0 <grub_arg_parse+0x4f8>
 b88:	add	x19, x0, x19
 b8c:	stur	x22, [x19, #-16]
 b90:	stur	xzr, [x19, #-8]
 b94:	mov	w19, w27
 b98:	mov	x24, x0
 b9c:	b	750 <grub_arg_parse+0xa8>
 ba0:	mov	x0, x24
 ba4:	bl	0 <grub_free>
 ba8:	ldr	x0, [x28]
 bac:	ldr	w0, [x0]
 bb0:	cbz	w0, bc4 <grub_arg_parse+0x51c>
 bb4:	mov	w22, #0x0                   	// #0
 bb8:	ldp	x25, x26, [sp, #64]
 bbc:	ldp	x27, x28, [sp, #80]
 bc0:	b	82c <grub_arg_parse+0x184>
 bc4:	mov	w19, w27
 bc8:	mov	x24, x23
 bcc:	b	750 <grub_arg_parse+0xa8>
 bd0:	mov	w2, #0x0                   	// #0
 bd4:	add	x1, sp, #0x98
 bd8:	mov	x0, x27
 bdc:	bl	0 <grub_strtoull>
 be0:	ldr	x0, [sp, #152]
 be4:	cmp	x0, #0x0
 be8:	ccmp	x0, x27, #0x4, ne  // ne = any
 bec:	b.eq	c04 <grub_arg_parse+0x55c>  // b.none
 bf0:	ldrb	w0, [x0]
 bf4:	cbnz	w0, c04 <grub_arg_parse+0x55c>
 bf8:	ldr	x0, [x28]
 bfc:	ldr	w0, [x0]
 c00:	cbz	w0, 9f0 <grub_arg_parse+0x348>
 c04:	mov	x2, x22
 c08:	adrp	x0, 0 <grub_extcmd_dispatcher>
 c0c:	ldr	x1, [x0]
 c10:	mov	w0, #0x12                  	// #18
 c14:	bl	0 <grub_error>
 c18:	mov	w22, #0x0                   	// #0
 c1c:	ldp	x25, x26, [sp, #64]
 c20:	ldp	x27, x28, [sp, #80]
 c24:	b	82c <grub_arg_parse+0x184>
 c28:	mov	x27, #0x0                   	// #0
 c2c:	cbnz	x27, c64 <grub_arg_parse+0x5bc>
 c30:	ldr	x3, [sp, #96]
 c34:	mov	x2, #0x0                   	// #0
 c38:	mov	x1, x23
 c3c:	mov	x0, x21
 c40:	bl	5e8 <grub_arg_show_help+0xc4>
 c44:	ldr	x1, [x28]
 c48:	ldr	w1, [x1]
 c4c:	orr	w0, w0, w1
 c50:	cbz	w0, 750 <grub_arg_parse+0xa8>
 c54:	mov	w22, #0x0                   	// #0
 c58:	ldp	x25, x26, [sp, #64]
 c5c:	ldp	x27, x28, [sp, #80]
 c60:	b	82c <grub_arg_parse+0x184>
 c64:	mov	x2, x22
 c68:	adrp	x0, 0 <grub_extcmd_dispatcher>
 c6c:	ldr	x1, [x0]
 c70:	mov	w0, #0x12                  	// #18
 c74:	bl	0 <grub_error>
 c78:	mov	w22, #0x0                   	// #0
 c7c:	ldp	x25, x26, [sp, #64]
 c80:	ldp	x27, x28, [sp, #80]
 c84:	b	82c <grub_arg_parse+0x184>
 c88:	mov	w19, #0x0                   	// #0
 c8c:	mov	x24, #0x0                   	// #0
 c90:	ldr	x0, [sp, #112]
 c94:	str	x24, [x0]
 c98:	ldr	x0, [sp, #120]
 c9c:	str	w19, [x0]
 ca0:	mov	w22, #0x1                   	// #1
 ca4:	b	82c <grub_arg_parse+0x184>
 ca8:	ldp	x25, x26, [sp, #64]
 cac:	ldp	x27, x28, [sp, #80]
 cb0:	b	c90 <grub_arg_parse+0x5e8>
 cb4:	nop
	...

0000000000000ce8 <grub_arg_list_alloc>:
 ce8:	stp	x29, x30, [sp, #-48]!
 cec:	mov	x29, sp
 cf0:	stp	x19, x20, [sp, #16]
 cf4:	ldr	x19, [x0, #16]
 cf8:	cbz	x19, dd4 <grub_arg_list_alloc+0xec>
 cfc:	str	x21, [sp, #32]
 d00:	mov	w21, w1
 d04:	ldr	x0, [x19, #16]
 d08:	cbz	x0, d88 <grub_arg_list_alloc+0xa0>
 d0c:	sxtw	x5, w1
 d10:	add	x5, x5, #0x1
 d14:	lsr	x5, x5, #1
 d18:	add	x5, x5, #0x1
 d1c:	add	x2, x19, #0xc
 d20:	mov	x20, #0x1                   	// #1
 d24:	mov	x0, #0x0                   	// #0
 d28:	b	d30 <grub_arg_list_alloc+0x48>
 d2c:	mov	x20, x1
 d30:	mov	x3, x2
 d34:	ldr	w1, [x2], #40
 d38:	add	x4, x0, x5
 d3c:	tst	x1, #0x4
 d40:	csel	x0, x4, x0, ne  // ne = any
 d44:	add	x1, x20, #0x1
 d48:	ldur	x3, [x3, #44]
 d4c:	cbnz	x3, d2c <grub_arg_list_alloc+0x44>
 d50:	add	x0, x0, x20, lsl #1
 d54:	lsl	x0, x0, #3
 d58:	bl	0 <grub_zalloc>
 d5c:	cbz	x0, ddc <grub_arg_list_alloc+0xf4>
 d60:	add	x20, x0, x20, lsl #4
 d64:	ldr	x1, [x19, #16]
 d68:	cbz	x1, de4 <grub_arg_list_alloc+0xfc>
 d6c:	sxtw	x5, w21
 d70:	lsr	x5, x5, #1
 d74:	add	x5, x5, #0x1
 d78:	lsl	x5, x5, #3
 d7c:	add	x2, x19, #0xc
 d80:	add	x1, x0, #0x8
 d84:	b	da4 <grub_arg_list_alloc+0xbc>
 d88:	mov	x0, #0x0                   	// #0
 d8c:	mov	x20, #0x0                   	// #0
 d90:	b	d50 <grub_arg_list_alloc+0x68>
 d94:	add	x2, x2, #0x28
 d98:	add	x1, x1, #0x10
 d9c:	ldur	x3, [x3, #44]
 da0:	cbz	x3, dc4 <grub_arg_list_alloc+0xdc>
 da4:	stur	wzr, [x1, #-8]
 da8:	str	xzr, [x1]
 dac:	mov	x3, x2
 db0:	ldr	w4, [x2]
 db4:	tbz	w4, #2, d94 <grub_arg_list_alloc+0xac>
 db8:	str	x20, [x1]
 dbc:	add	x20, x20, x5
 dc0:	b	d94 <grub_arg_list_alloc+0xac>
 dc4:	ldr	x21, [sp, #32]
 dc8:	ldp	x19, x20, [sp, #16]
 dcc:	ldp	x29, x30, [sp], #48
 dd0:	ret
 dd4:	mov	x0, x19
 dd8:	b	dc8 <grub_arg_list_alloc+0xe0>
 ddc:	ldr	x21, [sp, #32]
 de0:	b	dc8 <grub_arg_list_alloc+0xe0>
 de4:	ldr	x21, [sp, #32]
 de8:	b	dc8 <grub_arg_list_alloc+0xe0>
