
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-binfmt_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401018 <_init>:
  401018:	stp	x29, x30, [sp, #-16]!
  40101c:	mov	x29, sp
  401020:	bl	4012c0 <call_weak_fn>
  401024:	ldp	x29, x30, [sp], #16
  401028:	ret

Disassembly of section .plt:

0000000000401030 <.plt>:
  401030:	stp	x16, x30, [sp, #-16]!
  401034:	adrp	x16, 413000 <__FRAME_END__+0x102d8>
  401038:	ldr	x17, [x16, #3800]
  40103c:	add	x16, x16, #0xed8
  401040:	br	x17
  401044:	nop
  401048:	nop
  40104c:	nop

0000000000401050 <safe_fclose@plt>:
  401050:	adrp	x16, 413000 <__FRAME_END__+0x102d8>
  401054:	ldr	x17, [x16, #3808]
  401058:	add	x16, x16, #0xee0
  40105c:	br	x17

0000000000401060 <read_line_full@plt>:
  401060:	adrp	x16, 413000 <__FRAME_END__+0x102d8>
  401064:	ldr	x17, [x16, #3816]
  401068:	add	x16, x16, #0xee8
  40106c:	br	x17

0000000000401070 <filename_is_valid@plt>:
  401070:	adrp	x16, 413000 <__FRAME_END__+0x102d8>
  401074:	ldr	x17, [x16, #3824]
  401078:	add	x16, x16, #0xef0
  40107c:	br	x17

0000000000401080 <__libc_start_main@plt>:
  401080:	adrp	x16, 413000 <__FRAME_END__+0x102d8>
  401084:	ldr	x17, [x16, #3832]
  401088:	add	x16, x16, #0xef8
  40108c:	br	x17

0000000000401090 <__gmon_start__@plt>:
  401090:	adrp	x16, 413000 <__FRAME_END__+0x102d8>
  401094:	ldr	x17, [x16, #3840]
  401098:	add	x16, x16, #0xf00
  40109c:	br	x17

00000000004010a0 <write_string_file_ts@plt>:
  4010a0:	adrp	x16, 413000 <__FRAME_END__+0x102d8>
  4010a4:	ldr	x17, [x16, #3848]
  4010a8:	add	x16, x16, #0xf08
  4010ac:	br	x17

00000000004010b0 <polkit_agent_close@plt>:
  4010b0:	adrp	x16, 413000 <__FRAME_END__+0x102d8>
  4010b4:	ldr	x17, [x16, #3856]
  4010b8:	add	x16, x16, #0xf10
  4010bc:	br	x17

00000000004010c0 <log_setup_service@plt>:
  4010c0:	adrp	x16, 413000 <__FRAME_END__+0x102d8>
  4010c4:	ldr	x17, [x16, #3864]
  4010c8:	add	x16, x16, #0xf18
  4010cc:	br	x17

00000000004010d0 <log_assert_failed_realm@plt>:
  4010d0:	adrp	x16, 413000 <__FRAME_END__+0x102d8>
  4010d4:	ldr	x17, [x16, #3872]
  4010d8:	add	x16, x16, #0xf20
  4010dc:	br	x17

00000000004010e0 <getopt_long@plt>:
  4010e0:	adrp	x16, 413000 <__FRAME_END__+0x102d8>
  4010e4:	ldr	x17, [x16, #3880]
  4010e8:	add	x16, x16, #0xf28
  4010ec:	br	x17

00000000004010f0 <search_and_fopen@plt>:
  4010f0:	adrp	x16, 413000 <__FRAME_END__+0x102d8>
  4010f4:	ldr	x17, [x16, #3888]
  4010f8:	add	x16, x16, #0xf30
  4010fc:	br	x17

0000000000401100 <log_assert_failed_unreachable_realm@plt>:
  401100:	adrp	x16, 413000 <__FRAME_END__+0x102d8>
  401104:	ldr	x17, [x16, #3896]
  401108:	add	x16, x16, #0xf38
  40110c:	br	x17

0000000000401110 <umask@plt>:
  401110:	adrp	x16, 413000 <__FRAME_END__+0x102d8>
  401114:	ldr	x17, [x16, #3904]
  401118:	add	x16, x16, #0xf40
  40111c:	br	x17

0000000000401120 <abort@plt>:
  401120:	adrp	x16, 413000 <__FRAME_END__+0x102d8>
  401124:	ldr	x17, [x16, #3912]
  401128:	add	x16, x16, #0xf48
  40112c:	br	x17

0000000000401130 <strv_free@plt>:
  401130:	adrp	x16, 413000 <__FRAME_END__+0x102d8>
  401134:	ldr	x17, [x16, #3920]
  401138:	add	x16, x16, #0xf50
  40113c:	br	x17

0000000000401140 <pager_open@plt>:
  401140:	adrp	x16, 413000 <__FRAME_END__+0x102d8>
  401144:	ldr	x17, [x16, #3928]
  401148:	add	x16, x16, #0xf58
  40114c:	br	x17

0000000000401150 <terminal_urlify_man@plt>:
  401150:	adrp	x16, 413000 <__FRAME_END__+0x102d8>
  401154:	ldr	x17, [x16, #3936]
  401158:	add	x16, x16, #0xf60
  40115c:	br	x17

0000000000401160 <__stack_chk_fail@plt>:
  401160:	adrp	x16, 413000 <__FRAME_END__+0x102d8>
  401164:	ldr	x17, [x16, #3944]
  401168:	add	x16, x16, #0xf68
  40116c:	br	x17

0000000000401170 <path_join_internal@plt>:
  401170:	adrp	x16, 413000 <__FRAME_END__+0x102d8>
  401174:	ldr	x17, [x16, #3952]
  401178:	add	x16, x16, #0xf70
  40117c:	br	x17

0000000000401180 <ask_password_agent_close@plt>:
  401180:	adrp	x16, 413000 <__FRAME_END__+0x102d8>
  401184:	ldr	x17, [x16, #3960]
  401188:	add	x16, x16, #0xf78
  40118c:	br	x17

0000000000401190 <version@plt>:
  401190:	adrp	x16, 413000 <__FRAME_END__+0x102d8>
  401194:	ldr	x17, [x16, #3968]
  401198:	add	x16, x16, #0xf80
  40119c:	br	x17

00000000004011a0 <pager_close@plt>:
  4011a0:	adrp	x16, 413000 <__FRAME_END__+0x102d8>
  4011a4:	ldr	x17, [x16, #3976]
  4011a8:	add	x16, x16, #0xf88
  4011ac:	br	x17

00000000004011b0 <strchrnul@plt>:
  4011b0:	adrp	x16, 413000 <__FRAME_END__+0x102d8>
  4011b4:	ldr	x17, [x16, #3984]
  4011b8:	add	x16, x16, #0xf90
  4011bc:	br	x17

00000000004011c0 <log_internal_realm@plt>:
  4011c0:	adrp	x16, 413000 <__FRAME_END__+0x102d8>
  4011c4:	ldr	x17, [x16, #3992]
  4011c8:	add	x16, x16, #0xf98
  4011cc:	br	x17

00000000004011d0 <strdup@plt>:
  4011d0:	adrp	x16, 413000 <__FRAME_END__+0x102d8>
  4011d4:	ldr	x17, [x16, #4000]
  4011d8:	add	x16, x16, #0xfa0
  4011dc:	br	x17

00000000004011e0 <strchr@plt>:
  4011e0:	adrp	x16, 413000 <__FRAME_END__+0x102d8>
  4011e4:	ldr	x17, [x16, #4008]
  4011e8:	add	x16, x16, #0xfa8
  4011ec:	br	x17

00000000004011f0 <strstrip@plt>:
  4011f0:	adrp	x16, 413000 <__FRAME_END__+0x102d8>
  4011f4:	ldr	x17, [x16, #4016]
  4011f8:	add	x16, x16, #0xfb0
  4011fc:	br	x17

0000000000401200 <free@plt>:
  401200:	adrp	x16, 413000 <__FRAME_END__+0x102d8>
  401204:	ldr	x17, [x16, #4024]
  401208:	add	x16, x16, #0xfb8
  40120c:	br	x17

0000000000401210 <mac_selinux_finish@plt>:
  401210:	adrp	x16, 413000 <__FRAME_END__+0x102d8>
  401214:	ldr	x17, [x16, #4032]
  401218:	add	x16, x16, #0xfc0
  40121c:	br	x17

0000000000401220 <printf@plt>:
  401220:	adrp	x16, 413000 <__FRAME_END__+0x102d8>
  401224:	ldr	x17, [x16, #4040]
  401228:	add	x16, x16, #0xfc8
  40122c:	br	x17

0000000000401230 <conf_files_list_strv@plt>:
  401230:	adrp	x16, 413000 <__FRAME_END__+0x102d8>
  401234:	ldr	x17, [x16, #4048]
  401238:	add	x16, x16, #0xfd0
  40123c:	br	x17

0000000000401240 <log_oom_internal@plt>:
  401240:	adrp	x16, 413000 <__FRAME_END__+0x102d8>
  401244:	ldr	x17, [x16, #4056]
  401248:	add	x16, x16, #0xfd8
  40124c:	br	x17

0000000000401250 <log_get_max_level_realm@plt>:
  401250:	adrp	x16, 413000 <__FRAME_END__+0x102d8>
  401254:	ldr	x17, [x16, #4064]
  401258:	add	x16, x16, #0xfe0
  40125c:	br	x17

0000000000401260 <cat_files@plt>:
  401260:	adrp	x16, 413000 <__FRAME_END__+0x102d8>
  401264:	ldr	x17, [x16, #4072]
  401268:	add	x16, x16, #0xfe8
  40126c:	br	x17

Disassembly of section .text:

0000000000401270 <_start>:
  401270:	mov	x29, #0x0                   	// #0
  401274:	mov	x30, #0x0                   	// #0
  401278:	mov	x5, x0
  40127c:	ldr	x1, [sp]
  401280:	add	x2, sp, #0x8
  401284:	mov	x6, sp
  401288:	movz	x0, #0x0, lsl #48
  40128c:	movk	x0, #0x0, lsl #32
  401290:	movk	x0, #0x40, lsl #16
  401294:	movk	x0, #0x2368
  401298:	movz	x3, #0x0, lsl #48
  40129c:	movk	x3, #0x0, lsl #32
  4012a0:	movk	x3, #0x40, lsl #16
  4012a4:	movk	x3, #0x23b8
  4012a8:	movz	x4, #0x0, lsl #48
  4012ac:	movk	x4, #0x0, lsl #32
  4012b0:	movk	x4, #0x40, lsl #16
  4012b4:	movk	x4, #0x2438
  4012b8:	bl	401080 <__libc_start_main@plt>
  4012bc:	bl	401120 <abort@plt>

00000000004012c0 <call_weak_fn>:
  4012c0:	adrp	x0, 413000 <__FRAME_END__+0x102d8>
  4012c4:	ldr	x0, [x0, #4088]
  4012c8:	cbz	x0, 4012d0 <call_weak_fn+0x10>
  4012cc:	b	401090 <__gmon_start__@plt>
  4012d0:	ret

00000000004012d4 <deregister_tm_clones>:
  4012d4:	stp	x29, x30, [sp, #-32]!
  4012d8:	mov	x29, sp
  4012dc:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  4012e0:	add	x0, x0, #0x0
  4012e4:	str	x0, [sp, #24]
  4012e8:	ldr	x0, [sp, #24]
  4012ec:	str	x0, [sp, #24]
  4012f0:	ldr	x1, [sp, #24]
  4012f4:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  4012f8:	add	x0, x0, #0x0
  4012fc:	cmp	x1, x0
  401300:	b.eq	40133c <deregister_tm_clones+0x68>  // b.none
  401304:	adrp	x0, 402000 <parse_argv+0x1e0>
  401308:	add	x0, x0, #0x450
  40130c:	ldr	x0, [x0]
  401310:	str	x0, [sp, #16]
  401314:	ldr	x0, [sp, #16]
  401318:	str	x0, [sp, #16]
  40131c:	ldr	x0, [sp, #16]
  401320:	cmp	x0, #0x0
  401324:	b.eq	401340 <deregister_tm_clones+0x6c>  // b.none
  401328:	ldr	x1, [sp, #16]
  40132c:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401330:	add	x0, x0, #0x0
  401334:	blr	x1
  401338:	b	401340 <deregister_tm_clones+0x6c>
  40133c:	nop
  401340:	ldp	x29, x30, [sp], #32
  401344:	ret

0000000000401348 <register_tm_clones>:
  401348:	stp	x29, x30, [sp, #-48]!
  40134c:	mov	x29, sp
  401350:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401354:	add	x0, x0, #0x0
  401358:	str	x0, [sp, #40]
  40135c:	ldr	x0, [sp, #40]
  401360:	str	x0, [sp, #40]
  401364:	ldr	x1, [sp, #40]
  401368:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  40136c:	add	x0, x0, #0x0
  401370:	sub	x0, x1, x0
  401374:	asr	x0, x0, #3
  401378:	lsr	x1, x0, #63
  40137c:	add	x0, x1, x0
  401380:	asr	x0, x0, #1
  401384:	str	x0, [sp, #32]
  401388:	ldr	x0, [sp, #32]
  40138c:	cmp	x0, #0x0
  401390:	b.eq	4013d0 <register_tm_clones+0x88>  // b.none
  401394:	adrp	x0, 402000 <parse_argv+0x1e0>
  401398:	add	x0, x0, #0x458
  40139c:	ldr	x0, [x0]
  4013a0:	str	x0, [sp, #24]
  4013a4:	ldr	x0, [sp, #24]
  4013a8:	str	x0, [sp, #24]
  4013ac:	ldr	x0, [sp, #24]
  4013b0:	cmp	x0, #0x0
  4013b4:	b.eq	4013d4 <register_tm_clones+0x8c>  // b.none
  4013b8:	ldr	x2, [sp, #24]
  4013bc:	ldr	x1, [sp, #32]
  4013c0:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  4013c4:	add	x0, x0, #0x0
  4013c8:	blr	x2
  4013cc:	b	4013d4 <register_tm_clones+0x8c>
  4013d0:	nop
  4013d4:	ldp	x29, x30, [sp], #48
  4013d8:	ret

00000000004013dc <__do_global_dtors_aux>:
  4013dc:	stp	x29, x30, [sp, #-16]!
  4013e0:	mov	x29, sp
  4013e4:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  4013e8:	add	x0, x0, #0x18
  4013ec:	ldrb	w0, [x0]
  4013f0:	and	x0, x0, #0xff
  4013f4:	cmp	x0, #0x0
  4013f8:	b.ne	401414 <__do_global_dtors_aux+0x38>  // b.any
  4013fc:	bl	4012d4 <deregister_tm_clones>
  401400:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401404:	add	x0, x0, #0x18
  401408:	mov	w1, #0x1                   	// #1
  40140c:	strb	w1, [x0]
  401410:	b	401418 <__do_global_dtors_aux+0x3c>
  401414:	nop
  401418:	ldp	x29, x30, [sp], #16
  40141c:	ret

0000000000401420 <frame_dummy>:
  401420:	stp	x29, x30, [sp, #-16]!
  401424:	mov	x29, sp
  401428:	bl	401348 <register_tm_clones>
  40142c:	nop
  401430:	ldp	x29, x30, [sp], #16
  401434:	ret

0000000000401438 <ALIGN_TO>:
  401438:	sub	sp, sp, #0x10
  40143c:	str	x0, [sp, #8]
  401440:	str	x1, [sp]
  401444:	ldr	x1, [sp, #8]
  401448:	ldr	x0, [sp]
  40144c:	add	x0, x1, x0
  401450:	sub	x1, x0, #0x1
  401454:	ldr	x0, [sp]
  401458:	neg	x0, x0
  40145c:	and	x0, x1, x0
  401460:	add	sp, sp, #0x10
  401464:	ret

0000000000401468 <freep>:
  401468:	stp	x29, x30, [sp, #-32]!
  40146c:	mov	x29, sp
  401470:	str	x0, [sp, #24]
  401474:	ldr	x0, [sp, #24]
  401478:	ldr	x0, [x0]
  40147c:	bl	401200 <free@plt>
  401480:	nop
  401484:	ldp	x29, x30, [sp], #32
  401488:	ret

000000000040148c <fclosep>:
  40148c:	stp	x29, x30, [sp, #-32]!
  401490:	mov	x29, sp
  401494:	str	x0, [sp, #24]
  401498:	ldr	x0, [sp, #24]
  40149c:	ldr	x0, [x0]
  4014a0:	bl	401050 <safe_fclose@plt>
  4014a4:	nop
  4014a8:	ldp	x29, x30, [sp], #32
  4014ac:	ret

00000000004014b0 <write_string_file>:
  4014b0:	stp	x29, x30, [sp, #-48]!
  4014b4:	mov	x29, sp
  4014b8:	str	x0, [sp, #40]
  4014bc:	str	x1, [sp, #32]
  4014c0:	str	w2, [sp, #28]
  4014c4:	mov	x3, #0x0                   	// #0
  4014c8:	ldr	w2, [sp, #28]
  4014cc:	ldr	x1, [sp, #32]
  4014d0:	ldr	x0, [sp, #40]
  4014d4:	bl	4010a0 <write_string_file_ts@plt>
  4014d8:	ldp	x29, x30, [sp], #48
  4014dc:	ret

00000000004014e0 <read_line>:
  4014e0:	stp	x29, x30, [sp, #-48]!
  4014e4:	mov	x29, sp
  4014e8:	str	x0, [sp, #40]
  4014ec:	str	x1, [sp, #32]
  4014f0:	str	x2, [sp, #24]
  4014f4:	ldr	x3, [sp, #24]
  4014f8:	mov	w2, #0x0                   	// #0
  4014fc:	ldr	x1, [sp, #32]
  401500:	ldr	x0, [sp, #40]
  401504:	bl	401060 <read_line_full@plt>
  401508:	ldp	x29, x30, [sp], #48
  40150c:	ret

0000000000401510 <save_argc_argv>:
  401510:	sub	sp, sp, #0x10
  401514:	str	w0, [sp, #12]
  401518:	str	x1, [sp]
  40151c:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401520:	add	x0, x0, #0x14
  401524:	ldr	w1, [sp, #12]
  401528:	str	w1, [x0]
  40152c:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401530:	add	x0, x0, #0x0
  401534:	ldr	x1, [sp]
  401538:	str	x1, [x0]
  40153c:	nop
  401540:	add	sp, sp, #0x10
  401544:	ret

0000000000401548 <isempty>:
  401548:	sub	sp, sp, #0x10
  40154c:	str	x0, [sp, #8]
  401550:	ldr	x0, [sp, #8]
  401554:	cmp	x0, #0x0
  401558:	b.eq	40156c <isempty+0x24>  // b.none
  40155c:	ldr	x0, [sp, #8]
  401560:	ldrb	w0, [x0]
  401564:	cmp	w0, #0x0
  401568:	b.ne	401574 <isempty+0x2c>  // b.any
  40156c:	mov	w0, #0x1                   	// #1
  401570:	b	401578 <isempty+0x30>
  401574:	mov	w0, #0x0                   	// #0
  401578:	and	w0, w0, #0x1
  40157c:	and	w0, w0, #0xff
  401580:	add	sp, sp, #0x10
  401584:	ret

0000000000401588 <static_destruct>:
  401588:	stp	x29, x30, [sp, #-32]!
  40158c:	mov	x29, sp
  401590:	adrp	x0, 402000 <parse_argv+0x1e0>
  401594:	add	x0, x0, #0x860
  401598:	ldr	x0, [x0]
  40159c:	cmp	x0, #0x0
  4015a0:	b.eq	401604 <static_destruct+0x7c>  // b.none
  4015a4:	adrp	x0, 402000 <parse_argv+0x1e0>
  4015a8:	add	x0, x0, #0x860
  4015ac:	ldr	x0, [x0]
  4015b0:	mov	x1, #0x8                   	// #8
  4015b4:	bl	401438 <ALIGN_TO>
  4015b8:	str	x0, [sp, #24]
  4015bc:	b	4015e8 <static_destruct+0x60>
  4015c0:	ldr	x0, [sp, #24]
  4015c4:	ldr	x1, [x0, #8]
  4015c8:	ldr	x0, [sp, #24]
  4015cc:	ldr	x0, [x0]
  4015d0:	blr	x1
  4015d4:	ldr	x0, [sp, #24]
  4015d8:	add	x0, x0, #0x10
  4015dc:	mov	x1, #0x8                   	// #8
  4015e0:	bl	401438 <ALIGN_TO>
  4015e4:	str	x0, [sp, #24]
  4015e8:	ldr	x1, [sp, #24]
  4015ec:	adrp	x0, 402000 <parse_argv+0x1e0>
  4015f0:	add	x0, x0, #0x868
  4015f4:	ldr	x0, [x0]
  4015f8:	cmp	x1, x0
  4015fc:	b.cc	4015c0 <static_destruct+0x38>  // b.lo, b.ul, b.last
  401600:	b	401608 <static_destruct+0x80>
  401604:	nop
  401608:	ldp	x29, x30, [sp], #32
  40160c:	ret

0000000000401610 <strv_freep>:
  401610:	stp	x29, x30, [sp, #-32]!
  401614:	mov	x29, sp
  401618:	str	x0, [sp, #24]
  40161c:	ldr	x0, [sp, #24]
  401620:	ldr	x0, [x0]
  401624:	cmp	x0, #0x0
  401628:	b.eq	401638 <strv_freep+0x28>  // b.none
  40162c:	ldr	x0, [sp, #24]
  401630:	ldr	x0, [x0]
  401634:	bl	401130 <strv_free@plt>
  401638:	nop
  40163c:	ldp	x29, x30, [sp], #32
  401640:	ret

0000000000401644 <delete_rule>:
  401644:	stp	x29, x30, [sp, #-96]!
  401648:	mov	x29, sp
  40164c:	str	x19, [sp, #16]
  401650:	str	x0, [sp, #40]
  401654:	adrp	x0, 413000 <__FRAME_END__+0x102d8>
  401658:	add	x0, x0, #0xc90
  40165c:	ldr	x1, [x0]
  401660:	str	x1, [sp, #88]
  401664:	mov	x1, #0x0                   	// #0
  401668:	str	xzr, [sp, #64]
  40166c:	str	xzr, [sp, #72]
  401670:	ldr	x0, [sp, #40]
  401674:	cmp	x0, #0x0
  401678:	cset	w0, eq  // eq = none
  40167c:	and	w0, w0, #0xff
  401680:	and	x0, x0, #0xff
  401684:	cmp	x0, #0x0
  401688:	b.eq	4016b4 <delete_rule+0x70>  // b.none
  40168c:	adrp	x0, 402000 <parse_argv+0x1e0>
  401690:	add	x1, x0, #0x4c3
  401694:	adrp	x0, 402000 <parse_argv+0x1e0>
  401698:	add	x4, x0, #0x870
  40169c:	mov	w3, #0x20                  	// #32
  4016a0:	mov	x2, x1
  4016a4:	adrp	x0, 402000 <parse_argv+0x1e0>
  4016a8:	add	x1, x0, #0x4d8
  4016ac:	mov	w0, #0x0                   	// #0
  4016b0:	bl	4010d0 <log_assert_failed_realm@plt>
  4016b4:	ldr	x0, [sp, #40]
  4016b8:	ldrb	w0, [x0]
  4016bc:	cmp	w0, #0x0
  4016c0:	cset	w0, eq  // eq = none
  4016c4:	and	w0, w0, #0xff
  4016c8:	and	x0, x0, #0xff
  4016cc:	cmp	x0, #0x0
  4016d0:	b.eq	4016fc <delete_rule+0xb8>  // b.none
  4016d4:	adrp	x0, 402000 <parse_argv+0x1e0>
  4016d8:	add	x1, x0, #0x4c3
  4016dc:	adrp	x0, 402000 <parse_argv+0x1e0>
  4016e0:	add	x4, x0, #0x870
  4016e4:	mov	w3, #0x21                  	// #33
  4016e8:	mov	x2, x1
  4016ec:	adrp	x0, 402000 <parse_argv+0x1e0>
  4016f0:	add	x1, x0, #0x4e0
  4016f4:	mov	w0, #0x0                   	// #0
  4016f8:	bl	4010d0 <log_assert_failed_realm@plt>
  4016fc:	ldr	x0, [sp, #40]
  401700:	bl	4011d0 <strdup@plt>
  401704:	str	x0, [sp, #64]
  401708:	ldr	x0, [sp, #64]
  40170c:	cmp	x0, #0x0
  401710:	b.ne	401738 <delete_rule+0xf4>  // b.any
  401714:	adrp	x0, 402000 <parse_argv+0x1e0>
  401718:	add	x1, x0, #0x4c3
  40171c:	adrp	x0, 402000 <parse_argv+0x1e0>
  401720:	add	x3, x0, #0x880
  401724:	mov	w2, #0x25                  	// #37
  401728:	mov	w0, #0x0                   	// #0
  40172c:	bl	401240 <log_oom_internal@plt>
  401730:	mov	w19, w0
  401734:	b	401888 <delete_rule+0x244>
  401738:	ldr	x0, [sp, #64]
  40173c:	add	x2, x0, #0x1
  401740:	ldr	x0, [sp, #64]
  401744:	ldrb	w0, [x0]
  401748:	mov	w1, w0
  40174c:	mov	x0, x2
  401750:	bl	4011b0 <strchrnul@plt>
  401754:	str	x0, [sp, #80]
  401758:	ldr	x0, [sp, #80]
  40175c:	strb	wzr, [x0]
  401760:	ldr	x0, [sp, #64]
  401764:	add	x0, x0, #0x1
  401768:	bl	401070 <filename_is_valid@plt>
  40176c:	and	w0, w0, #0xff
  401770:	eor	w0, w0, #0x1
  401774:	and	w0, w0, #0xff
  401778:	cmp	w0, #0x0
  40177c:	b.eq	40181c <delete_rule+0x1d8>  // b.none
  401780:	mov	w0, #0x3                   	// #3
  401784:	str	w0, [sp, #52]
  401788:	mov	w0, #0x16                  	// #22
  40178c:	movk	w0, #0x4000, lsl #16
  401790:	str	w0, [sp, #56]
  401794:	str	wzr, [sp, #60]
  401798:	ldr	w0, [sp, #60]
  40179c:	bl	401250 <log_get_max_level_realm@plt>
  4017a0:	mov	w1, w0
  4017a4:	ldr	w0, [sp, #52]
  4017a8:	and	w0, w0, #0x7
  4017ac:	cmp	w1, w0
  4017b0:	b.lt	401804 <delete_rule+0x1c0>  // b.tstop
  4017b4:	ldr	w0, [sp, #60]
  4017b8:	lsl	w1, w0, #10
  4017bc:	ldr	w0, [sp, #52]
  4017c0:	orr	w7, w1, w0
  4017c4:	adrp	x0, 402000 <parse_argv+0x1e0>
  4017c8:	add	x1, x0, #0x4c3
  4017cc:	ldr	x0, [sp, #64]
  4017d0:	add	x0, x0, #0x1
  4017d4:	mov	x6, x0
  4017d8:	adrp	x0, 402000 <parse_argv+0x1e0>
  4017dc:	add	x5, x0, #0x4e8
  4017e0:	adrp	x0, 402000 <parse_argv+0x1e0>
  4017e4:	add	x4, x0, #0x880
  4017e8:	mov	w3, #0x2b                  	// #43
  4017ec:	mov	x2, x1
  4017f0:	ldr	w1, [sp, #56]
  4017f4:	mov	w0, w7
  4017f8:	bl	4011c0 <log_internal_realm@plt>
  4017fc:	mov	w19, w0
  401800:	b	401888 <delete_rule+0x244>
  401804:	ldr	w0, [sp, #56]
  401808:	cmp	w0, #0x0
  40180c:	cneg	w0, w0, lt  // lt = tstop
  401810:	and	w0, w0, #0xff
  401814:	neg	w19, w0
  401818:	b	401888 <delete_rule+0x244>
  40181c:	ldr	x0, [sp, #64]
  401820:	add	x0, x0, #0x1
  401824:	mov	x2, #0xffffffffffffffff    	// #-1
  401828:	mov	x1, x0
  40182c:	adrp	x0, 402000 <parse_argv+0x1e0>
  401830:	add	x0, x0, #0x518
  401834:	bl	401170 <path_join_internal@plt>
  401838:	str	x0, [sp, #72]
  40183c:	ldr	x0, [sp, #72]
  401840:	cmp	x0, #0x0
  401844:	b.ne	40186c <delete_rule+0x228>  // b.any
  401848:	adrp	x0, 402000 <parse_argv+0x1e0>
  40184c:	add	x1, x0, #0x4c3
  401850:	adrp	x0, 402000 <parse_argv+0x1e0>
  401854:	add	x3, x0, #0x880
  401858:	mov	w2, #0x30                  	// #48
  40185c:	mov	w0, #0x0                   	// #0
  401860:	bl	401240 <log_oom_internal@plt>
  401864:	mov	w19, w0
  401868:	b	401888 <delete_rule+0x244>
  40186c:	ldr	x3, [sp, #72]
  401870:	mov	w2, #0x20                  	// #32
  401874:	adrp	x0, 402000 <parse_argv+0x1e0>
  401878:	add	x1, x0, #0x538
  40187c:	mov	x0, x3
  401880:	bl	4014b0 <write_string_file>
  401884:	mov	w19, w0
  401888:	add	x0, sp, #0x48
  40188c:	bl	401468 <freep>
  401890:	add	x0, sp, #0x40
  401894:	bl	401468 <freep>
  401898:	mov	w1, w19
  40189c:	adrp	x0, 413000 <__FRAME_END__+0x102d8>
  4018a0:	add	x0, x0, #0xc90
  4018a4:	ldr	x2, [sp, #88]
  4018a8:	ldr	x0, [x0]
  4018ac:	eor	x0, x2, x0
  4018b0:	cmp	x0, #0x0
  4018b4:	b.eq	4018bc <delete_rule+0x278>  // b.none
  4018b8:	bl	401160 <__stack_chk_fail@plt>
  4018bc:	mov	w0, w1
  4018c0:	ldr	x19, [sp, #16]
  4018c4:	ldp	x29, x30, [sp], #96
  4018c8:	ret

00000000004018cc <apply_rule>:
  4018cc:	stp	x29, x30, [sp, #-48]!
  4018d0:	mov	x29, sp
  4018d4:	str	x0, [sp, #24]
  4018d8:	ldr	x0, [sp, #24]
  4018dc:	bl	401644 <delete_rule>
  4018e0:	mov	w2, #0x20                  	// #32
  4018e4:	ldr	x1, [sp, #24]
  4018e8:	adrp	x0, 402000 <parse_argv+0x1e0>
  4018ec:	add	x0, x0, #0x540
  4018f0:	bl	4014b0 <write_string_file>
  4018f4:	str	w0, [sp, #32]
  4018f8:	ldr	w0, [sp, #32]
  4018fc:	cmp	w0, #0x0
  401900:	b.ge	40198c <apply_rule+0xc0>  // b.tcont
  401904:	mov	w0, #0x3                   	// #3
  401908:	str	w0, [sp, #36]
  40190c:	ldr	w0, [sp, #32]
  401910:	str	w0, [sp, #40]
  401914:	str	wzr, [sp, #44]
  401918:	ldr	w0, [sp, #44]
  40191c:	bl	401250 <log_get_max_level_realm@plt>
  401920:	mov	w1, w0
  401924:	ldr	w0, [sp, #36]
  401928:	and	w0, w0, #0x7
  40192c:	cmp	w1, w0
  401930:	b.lt	401974 <apply_rule+0xa8>  // b.tstop
  401934:	ldr	w0, [sp, #44]
  401938:	lsl	w1, w0, #10
  40193c:	ldr	w0, [sp, #36]
  401940:	orr	w6, w1, w0
  401944:	adrp	x0, 402000 <parse_argv+0x1e0>
  401948:	add	x1, x0, #0x4c3
  40194c:	adrp	x0, 402000 <parse_argv+0x1e0>
  401950:	add	x5, x0, #0x568
  401954:	adrp	x0, 402000 <parse_argv+0x1e0>
  401958:	add	x4, x0, #0x890
  40195c:	mov	w3, #0x3c                  	// #60
  401960:	mov	x2, x1
  401964:	ldr	w1, [sp, #40]
  401968:	mov	w0, w6
  40196c:	bl	4011c0 <log_internal_realm@plt>
  401970:	b	401990 <apply_rule+0xc4>
  401974:	ldr	w0, [sp, #40]
  401978:	cmp	w0, #0x0
  40197c:	cneg	w0, w0, lt  // lt = tstop
  401980:	and	w0, w0, #0xff
  401984:	neg	w0, w0
  401988:	b	401990 <apply_rule+0xc4>
  40198c:	mov	w0, #0x0                   	// #0
  401990:	ldp	x29, x30, [sp], #48
  401994:	ret

0000000000401998 <apply_file>:
  401998:	stp	x29, x30, [sp, #-176]!
  40199c:	mov	x29, sp
  4019a0:	stp	x19, x20, [sp, #16]
  4019a4:	str	x0, [sp, #40]
  4019a8:	strb	w1, [sp, #39]
  4019ac:	adrp	x0, 413000 <__FRAME_END__+0x102d8>
  4019b0:	add	x0, x0, #0xc90
  4019b4:	ldr	x1, [x0]
  4019b8:	str	x1, [sp, #168]
  4019bc:	mov	x1, #0x0                   	// #0
  4019c0:	str	xzr, [sp, #96]
  4019c4:	ldr	x0, [sp, #40]
  4019c8:	cmp	x0, #0x0
  4019cc:	cset	w0, eq  // eq = none
  4019d0:	and	w0, w0, #0xff
  4019d4:	and	x0, x0, #0xff
  4019d8:	cmp	x0, #0x0
  4019dc:	b.eq	401a08 <apply_file+0x70>  // b.none
  4019e0:	adrp	x0, 402000 <parse_argv+0x1e0>
  4019e4:	add	x1, x0, #0x4c3
  4019e8:	adrp	x0, 402000 <parse_argv+0x1e0>
  4019ec:	add	x4, x0, #0x8a0
  4019f0:	mov	w3, #0x45                  	// #69
  4019f4:	mov	x2, x1
  4019f8:	adrp	x0, 402000 <parse_argv+0x1e0>
  4019fc:	add	x1, x0, #0x588
  401a00:	mov	w0, #0x0                   	// #0
  401a04:	bl	4010d0 <log_assert_failed_realm@plt>
  401a08:	adrp	x0, 402000 <parse_argv+0x1e0>
  401a0c:	add	x1, x0, #0x5f0
  401a10:	add	x0, sp, #0x78
  401a14:	ldp	x2, x3, [x1]
  401a18:	stp	x2, x3, [x0]
  401a1c:	ldp	x2, x3, [x1, #16]
  401a20:	stp	x2, x3, [x0, #16]
  401a24:	ldp	x2, x3, [x1, #32]
  401a28:	stp	x2, x3, [x0, #32]
  401a2c:	add	x1, sp, #0x60
  401a30:	add	x0, sp, #0x78
  401a34:	mov	x4, x1
  401a38:	mov	x3, x0
  401a3c:	mov	x2, #0x0                   	// #0
  401a40:	adrp	x0, 402000 <parse_argv+0x1e0>
  401a44:	add	x1, x0, #0x590
  401a48:	ldr	x0, [sp, #40]
  401a4c:	bl	4010f0 <search_and_fopen@plt>
  401a50:	str	w0, [sp, #52]
  401a54:	ldr	w0, [sp, #52]
  401a58:	cmp	w0, #0x0
  401a5c:	b.ge	401b10 <apply_file+0x178>  // b.tcont
  401a60:	ldrb	w0, [sp, #39]
  401a64:	cmp	w0, #0x0
  401a68:	b.eq	401a80 <apply_file+0xe8>  // b.none
  401a6c:	ldr	w0, [sp, #52]
  401a70:	cmn	w0, #0x2
  401a74:	b.ne	401a80 <apply_file+0xe8>  // b.any
  401a78:	mov	w20, #0x0                   	// #0
  401a7c:	b	401d0c <apply_file+0x374>
  401a80:	mov	w0, #0x3                   	// #3
  401a84:	str	w0, [sp, #84]
  401a88:	ldr	w0, [sp, #52]
  401a8c:	str	w0, [sp, #88]
  401a90:	str	wzr, [sp, #92]
  401a94:	ldr	w0, [sp, #92]
  401a98:	bl	401250 <log_get_max_level_realm@plt>
  401a9c:	mov	w1, w0
  401aa0:	ldr	w0, [sp, #84]
  401aa4:	and	w0, w0, #0x7
  401aa8:	cmp	w1, w0
  401aac:	b.lt	401af8 <apply_file+0x160>  // b.tstop
  401ab0:	ldr	w0, [sp, #92]
  401ab4:	lsl	w1, w0, #10
  401ab8:	ldr	w0, [sp, #84]
  401abc:	orr	w7, w1, w0
  401ac0:	adrp	x0, 402000 <parse_argv+0x1e0>
  401ac4:	add	x1, x0, #0x4c3
  401ac8:	ldr	x6, [sp, #40]
  401acc:	adrp	x0, 402000 <parse_argv+0x1e0>
  401ad0:	add	x5, x0, #0x598
  401ad4:	adrp	x0, 402000 <parse_argv+0x1e0>
  401ad8:	add	x4, x0, #0x8b0
  401adc:	mov	w3, #0x4c                  	// #76
  401ae0:	mov	x2, x1
  401ae4:	ldr	w1, [sp, #88]
  401ae8:	mov	w0, w7
  401aec:	bl	4011c0 <log_internal_realm@plt>
  401af0:	mov	w20, w0
  401af4:	b	401d0c <apply_file+0x374>
  401af8:	ldr	w0, [sp, #88]
  401afc:	cmp	w0, #0x0
  401b00:	cneg	w0, w0, lt  // lt = tstop
  401b04:	and	w0, w0, #0xff
  401b08:	neg	w20, w0
  401b0c:	b	401d0c <apply_file+0x374>
  401b10:	mov	w0, #0x7                   	// #7
  401b14:	str	w0, [sp, #56]
  401b18:	str	wzr, [sp, #60]
  401b1c:	str	wzr, [sp, #64]
  401b20:	ldr	w0, [sp, #64]
  401b24:	bl	401250 <log_get_max_level_realm@plt>
  401b28:	mov	w1, w0
  401b2c:	ldr	w0, [sp, #56]
  401b30:	and	w0, w0, #0x7
  401b34:	cmp	w1, w0
  401b38:	b.lt	401b80 <apply_file+0x1e8>  // b.tstop
  401b3c:	ldr	w0, [sp, #64]
  401b40:	lsl	w1, w0, #10
  401b44:	ldr	w0, [sp, #56]
  401b48:	orr	w7, w1, w0
  401b4c:	adrp	x0, 402000 <parse_argv+0x1e0>
  401b50:	add	x1, x0, #0x4c3
  401b54:	ldr	x6, [sp, #40]
  401b58:	adrp	x0, 402000 <parse_argv+0x1e0>
  401b5c:	add	x5, x0, #0x5b8
  401b60:	adrp	x0, 402000 <parse_argv+0x1e0>
  401b64:	add	x4, x0, #0x8b0
  401b68:	mov	w3, #0x4f                  	// #79
  401b6c:	mov	x2, x1
  401b70:	ldr	w1, [sp, #60]
  401b74:	mov	w0, w7
  401b78:	bl	4011c0 <log_internal_realm@plt>
  401b7c:	b	401b88 <apply_file+0x1f0>
  401b80:	ldr	w0, [sp, #60]
  401b84:	cmp	w0, #0x0
  401b88:	str	xzr, [sp, #104]
  401b8c:	ldr	x0, [sp, #96]
  401b90:	add	x1, sp, #0x68
  401b94:	mov	x2, x1
  401b98:	mov	x1, #0x100000              	// #1048576
  401b9c:	bl	4014e0 <read_line>
  401ba0:	str	w0, [sp, #68]
  401ba4:	ldr	w0, [sp, #68]
  401ba8:	cmp	w0, #0x0
  401bac:	b.ge	401c44 <apply_file+0x2ac>  // b.tcont
  401bb0:	mov	w0, #0x3                   	// #3
  401bb4:	str	w0, [sp, #72]
  401bb8:	ldr	w0, [sp, #68]
  401bbc:	str	w0, [sp, #76]
  401bc0:	str	wzr, [sp, #80]
  401bc4:	ldr	w0, [sp, #80]
  401bc8:	bl	401250 <log_get_max_level_realm@plt>
  401bcc:	mov	w1, w0
  401bd0:	ldr	w0, [sp, #72]
  401bd4:	and	w0, w0, #0x7
  401bd8:	cmp	w1, w0
  401bdc:	b.lt	401c28 <apply_file+0x290>  // b.tstop
  401be0:	ldr	w0, [sp, #80]
  401be4:	lsl	w1, w0, #10
  401be8:	ldr	w0, [sp, #72]
  401bec:	orr	w7, w1, w0
  401bf0:	adrp	x0, 402000 <parse_argv+0x1e0>
  401bf4:	add	x1, x0, #0x4c3
  401bf8:	ldr	x6, [sp, #40]
  401bfc:	adrp	x0, 402000 <parse_argv+0x1e0>
  401c00:	add	x5, x0, #0x5c8
  401c04:	adrp	x0, 402000 <parse_argv+0x1e0>
  401c08:	add	x4, x0, #0x8b0
  401c0c:	mov	w3, #0x57                  	// #87
  401c10:	mov	x2, x1
  401c14:	ldr	w1, [sp, #76]
  401c18:	mov	w0, w7
  401c1c:	bl	4011c0 <log_internal_realm@plt>
  401c20:	mov	w20, w0
  401c24:	b	401c3c <apply_file+0x2a4>
  401c28:	ldr	w0, [sp, #76]
  401c2c:	cmp	w0, #0x0
  401c30:	cneg	w0, w0, lt  // lt = tstop
  401c34:	and	w0, w0, #0xff
  401c38:	neg	w20, w0
  401c3c:	mov	w19, #0x0                   	// #0
  401c40:	b	401cd8 <apply_file+0x340>
  401c44:	ldr	w0, [sp, #68]
  401c48:	cmp	w0, #0x0
  401c4c:	b.ne	401c58 <apply_file+0x2c0>  // b.any
  401c50:	mov	w19, #0x1                   	// #1
  401c54:	b	401cd8 <apply_file+0x340>
  401c58:	ldr	x0, [sp, #104]
  401c5c:	bl	4011f0 <strstrip@plt>
  401c60:	str	x0, [sp, #112]
  401c64:	ldr	x0, [sp, #112]
  401c68:	bl	401548 <isempty>
  401c6c:	and	w0, w0, #0xff
  401c70:	cmp	w0, #0x0
  401c74:	b.eq	401c80 <apply_file+0x2e8>  // b.none
  401c78:	mov	w19, #0x2                   	// #2
  401c7c:	b	401cd8 <apply_file+0x340>
  401c80:	ldr	x0, [sp, #112]
  401c84:	ldrb	w0, [x0]
  401c88:	mov	w1, w0
  401c8c:	adrp	x0, 402000 <parse_argv+0x1e0>
  401c90:	add	x0, x0, #0x5e8
  401c94:	bl	4011e0 <strchr@plt>
  401c98:	cmp	x0, #0x0
  401c9c:	b.eq	401ca8 <apply_file+0x310>  // b.none
  401ca0:	mov	w19, #0x2                   	// #2
  401ca4:	b	401cd8 <apply_file+0x340>
  401ca8:	ldr	x0, [sp, #112]
  401cac:	bl	4018cc <apply_rule>
  401cb0:	str	w0, [sp, #68]
  401cb4:	ldr	w0, [sp, #68]
  401cb8:	cmp	w0, #0x0
  401cbc:	b.ge	401cd4 <apply_file+0x33c>  // b.tcont
  401cc0:	ldr	w0, [sp, #52]
  401cc4:	cmp	w0, #0x0
  401cc8:	b.ne	401cd4 <apply_file+0x33c>  // b.any
  401ccc:	ldr	w0, [sp, #68]
  401cd0:	str	w0, [sp, #52]
  401cd4:	mov	w19, #0x3                   	// #3
  401cd8:	add	x0, sp, #0x68
  401cdc:	bl	401468 <freep>
  401ce0:	cmp	w19, #0x3
  401ce4:	b.eq	401d08 <apply_file+0x370>  // b.none
  401ce8:	cmp	w19, #0x3
  401cec:	b.gt	401b88 <apply_file+0x1f0>
  401cf0:	cmp	w19, #0x0
  401cf4:	b.eq	401d0c <apply_file+0x374>  // b.none
  401cf8:	cmp	w19, #0x1
  401cfc:	b.ne	401d08 <apply_file+0x370>  // b.any
  401d00:	ldr	w20, [sp, #52]
  401d04:	b	401d0c <apply_file+0x374>
  401d08:	b	401b88 <apply_file+0x1f0>
  401d0c:	add	x0, sp, #0x60
  401d10:	bl	40148c <fclosep>
  401d14:	mov	w1, w20
  401d18:	adrp	x0, 413000 <__FRAME_END__+0x102d8>
  401d1c:	add	x0, x0, #0xc90
  401d20:	ldr	x2, [sp, #168]
  401d24:	ldr	x0, [x0]
  401d28:	eor	x0, x2, x0
  401d2c:	cmp	x0, #0x0
  401d30:	b.eq	401d38 <apply_file+0x3a0>  // b.none
  401d34:	bl	401160 <__stack_chk_fail@plt>
  401d38:	mov	w0, w1
  401d3c:	ldp	x19, x20, [sp, #16]
  401d40:	ldp	x29, x30, [sp], #176
  401d44:	ret

0000000000401d48 <help>:
  401d48:	stp	x29, x30, [sp, #-64]!
  401d4c:	mov	x29, sp
  401d50:	str	x19, [sp, #16]
  401d54:	adrp	x0, 413000 <__FRAME_END__+0x102d8>
  401d58:	add	x0, x0, #0xc90
  401d5c:	ldr	x1, [x0]
  401d60:	str	x1, [sp, #56]
  401d64:	mov	x1, #0x0                   	// #0
  401d68:	str	xzr, [sp, #48]
  401d6c:	add	x0, sp, #0x30
  401d70:	mov	x2, x0
  401d74:	adrp	x0, 402000 <parse_argv+0x1e0>
  401d78:	add	x1, x0, #0x620
  401d7c:	adrp	x0, 402000 <parse_argv+0x1e0>
  401d80:	add	x0, x0, #0x628
  401d84:	bl	401150 <terminal_urlify_man@plt>
  401d88:	str	w0, [sp, #44]
  401d8c:	ldr	w0, [sp, #44]
  401d90:	cmp	w0, #0x0
  401d94:	b.ge	401dbc <help+0x74>  // b.tcont
  401d98:	adrp	x0, 402000 <parse_argv+0x1e0>
  401d9c:	add	x1, x0, #0x4c3
  401da0:	adrp	x0, 402000 <parse_argv+0x1e0>
  401da4:	add	x3, x0, #0x8c0
  401da8:	mov	w2, #0x6f                  	// #111
  401dac:	mov	w0, #0x0                   	// #0
  401db0:	bl	401240 <log_oom_internal@plt>
  401db4:	mov	w19, w0
  401db8:	b	401de4 <help+0x9c>
  401dbc:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401dc0:	add	x0, x0, #0x8
  401dc4:	ldr	x0, [x0]
  401dc8:	ldr	x1, [sp, #48]
  401dcc:	mov	x2, x1
  401dd0:	mov	x1, x0
  401dd4:	adrp	x0, 402000 <parse_argv+0x1e0>
  401dd8:	add	x0, x0, #0x640
  401ddc:	bl	401220 <printf@plt>
  401de0:	mov	w19, #0x0                   	// #0
  401de4:	add	x0, sp, #0x30
  401de8:	bl	401468 <freep>
  401dec:	mov	w1, w19
  401df0:	adrp	x0, 413000 <__FRAME_END__+0x102d8>
  401df4:	add	x0, x0, #0xc90
  401df8:	ldr	x2, [sp, #56]
  401dfc:	ldr	x0, [x0]
  401e00:	eor	x0, x2, x0
  401e04:	cmp	x0, #0x0
  401e08:	b.eq	401e10 <help+0xc8>  // b.none
  401e0c:	bl	401160 <__stack_chk_fail@plt>
  401e10:	mov	w0, w1
  401e14:	ldr	x19, [sp, #16]
  401e18:	ldp	x29, x30, [sp], #64
  401e1c:	ret

0000000000401e20 <parse_argv>:
  401e20:	stp	x29, x30, [sp, #-48]!
  401e24:	mov	x29, sp
  401e28:	str	w0, [sp, #28]
  401e2c:	str	x1, [sp, #16]
  401e30:	ldr	w0, [sp, #28]
  401e34:	lsr	w0, w0, #31
  401e38:	and	w0, w0, #0xff
  401e3c:	and	x0, x0, #0xff
  401e40:	cmp	x0, #0x0
  401e44:	b.eq	401e70 <parse_argv+0x50>  // b.none
  401e48:	adrp	x0, 402000 <parse_argv+0x1e0>
  401e4c:	add	x1, x0, #0x4c3
  401e50:	adrp	x0, 402000 <parse_argv+0x1e0>
  401e54:	add	x4, x0, #0x8c8
  401e58:	mov	w3, #0x90                  	// #144
  401e5c:	mov	x2, x1
  401e60:	adrp	x0, 402000 <parse_argv+0x1e0>
  401e64:	add	x1, x0, #0x770
  401e68:	mov	w0, #0x0                   	// #0
  401e6c:	bl	4010d0 <log_assert_failed_realm@plt>
  401e70:	ldr	x0, [sp, #16]
  401e74:	cmp	x0, #0x0
  401e78:	cset	w0, eq  // eq = none
  401e7c:	and	w0, w0, #0xff
  401e80:	and	x0, x0, #0xff
  401e84:	cmp	x0, #0x0
  401e88:	b.eq	401f88 <parse_argv+0x168>  // b.none
  401e8c:	adrp	x0, 402000 <parse_argv+0x1e0>
  401e90:	add	x1, x0, #0x4c3
  401e94:	adrp	x0, 402000 <parse_argv+0x1e0>
  401e98:	add	x4, x0, #0x8c8
  401e9c:	mov	w3, #0x91                  	// #145
  401ea0:	mov	x2, x1
  401ea4:	adrp	x0, 402000 <parse_argv+0x1e0>
  401ea8:	add	x1, x0, #0x780
  401eac:	mov	w0, #0x0                   	// #0
  401eb0:	bl	4010d0 <log_assert_failed_realm@plt>
  401eb4:	ldr	w0, [sp, #32]
  401eb8:	cmp	w0, #0x102
  401ebc:	b.eq	401f38 <parse_argv+0x118>  // b.none
  401ec0:	ldr	w0, [sp, #32]
  401ec4:	cmp	w0, #0x102
  401ec8:	b.gt	401f60 <parse_argv+0x140>
  401ecc:	ldr	w0, [sp, #32]
  401ed0:	cmp	w0, #0x101
  401ed4:	b.eq	401f24 <parse_argv+0x104>  // b.none
  401ed8:	ldr	w0, [sp, #32]
  401edc:	cmp	w0, #0x101
  401ee0:	b.gt	401f60 <parse_argv+0x140>
  401ee4:	ldr	w0, [sp, #32]
  401ee8:	cmp	w0, #0x100
  401eec:	b.eq	401f1c <parse_argv+0xfc>  // b.none
  401ef0:	ldr	w0, [sp, #32]
  401ef4:	cmp	w0, #0x100
  401ef8:	b.gt	401f60 <parse_argv+0x140>
  401efc:	ldr	w0, [sp, #32]
  401f00:	cmp	w0, #0x3f
  401f04:	b.eq	401f58 <parse_argv+0x138>  // b.none
  401f08:	ldr	w0, [sp, #32]
  401f0c:	cmp	w0, #0x68
  401f10:	b.ne	401f60 <parse_argv+0x140>  // b.any
  401f14:	bl	401d48 <help>
  401f18:	b	402074 <parse_argv+0x254>
  401f1c:	bl	401190 <version@plt>
  401f20:	b	402074 <parse_argv+0x254>
  401f24:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401f28:	add	x0, x0, #0x19
  401f2c:	mov	w1, #0x1                   	// #1
  401f30:	strb	w1, [x0]
  401f34:	b	401f88 <parse_argv+0x168>
  401f38:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401f3c:	add	x0, x0, #0x1c
  401f40:	ldr	w0, [x0]
  401f44:	orr	w1, w0, #0x1
  401f48:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401f4c:	add	x0, x0, #0x1c
  401f50:	str	w1, [x0]
  401f54:	b	401f88 <parse_argv+0x168>
  401f58:	mov	w0, #0xffffffea            	// #-22
  401f5c:	b	402074 <parse_argv+0x254>
  401f60:	adrp	x0, 402000 <parse_argv+0x1e0>
  401f64:	add	x1, x0, #0x4c3
  401f68:	adrp	x0, 402000 <parse_argv+0x1e0>
  401f6c:	add	x4, x0, #0x8c8
  401f70:	mov	w3, #0xa9                  	// #169
  401f74:	mov	x2, x1
  401f78:	adrp	x0, 402000 <parse_argv+0x1e0>
  401f7c:	add	x1, x0, #0x788
  401f80:	mov	w0, #0x0                   	// #0
  401f84:	bl	401100 <log_assert_failed_unreachable_realm@plt>
  401f88:	mov	x4, #0x0                   	// #0
  401f8c:	adrp	x0, 402000 <parse_argv+0x1e0>
  401f90:	add	x3, x0, #0x8d8
  401f94:	adrp	x0, 402000 <parse_argv+0x1e0>
  401f98:	add	x2, x0, #0x7a0
  401f9c:	ldr	x1, [sp, #16]
  401fa0:	ldr	w0, [sp, #28]
  401fa4:	bl	4010e0 <getopt_long@plt>
  401fa8:	str	w0, [sp, #32]
  401fac:	ldr	w0, [sp, #32]
  401fb0:	cmp	w0, #0x0
  401fb4:	b.ge	401eb4 <parse_argv+0x94>  // b.tcont
  401fb8:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401fbc:	add	x0, x0, #0x19
  401fc0:	ldrb	w0, [x0]
  401fc4:	cmp	w0, #0x0
  401fc8:	b.eq	402070 <parse_argv+0x250>  // b.none
  401fcc:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401fd0:	add	x0, x0, #0x10
  401fd4:	ldr	w0, [x0]
  401fd8:	ldr	w1, [sp, #28]
  401fdc:	cmp	w1, w0
  401fe0:	b.le	402070 <parse_argv+0x250>
  401fe4:	mov	w0, #0x3                   	// #3
  401fe8:	str	w0, [sp, #36]
  401fec:	mov	w0, #0x16                  	// #22
  401ff0:	movk	w0, #0x4000, lsl #16
  401ff4:	str	w0, [sp, #40]
  401ff8:	str	wzr, [sp, #44]
  401ffc:	ldr	w0, [sp, #44]
  402000:	bl	401250 <log_get_max_level_realm@plt>
  402004:	mov	w1, w0
  402008:	ldr	w0, [sp, #36]
  40200c:	and	w0, w0, #0x7
  402010:	cmp	w1, w0
  402014:	b.lt	402058 <parse_argv+0x238>  // b.tstop
  402018:	ldr	w0, [sp, #44]
  40201c:	lsl	w1, w0, #10
  402020:	ldr	w0, [sp, #36]
  402024:	orr	w6, w1, w0
  402028:	adrp	x0, 402000 <parse_argv+0x1e0>
  40202c:	add	x1, x0, #0x4c3
  402030:	adrp	x0, 402000 <parse_argv+0x1e0>
  402034:	add	x5, x0, #0x7a8
  402038:	adrp	x0, 402000 <parse_argv+0x1e0>
  40203c:	add	x4, x0, #0x978
  402040:	mov	w3, #0xad                  	// #173
  402044:	mov	x2, x1
  402048:	ldr	w1, [sp, #40]
  40204c:	mov	w0, w6
  402050:	bl	4011c0 <log_internal_realm@plt>
  402054:	b	402074 <parse_argv+0x254>
  402058:	ldr	w0, [sp, #40]
  40205c:	cmp	w0, #0x0
  402060:	cneg	w0, w0, lt  // lt = tstop
  402064:	and	w0, w0, #0xff
  402068:	neg	w0, w0
  40206c:	b	402074 <parse_argv+0x254>
  402070:	mov	w0, #0x1                   	// #1
  402074:	ldp	x29, x30, [sp], #48
  402078:	ret

000000000040207c <run>:
  40207c:	stp	x29, x30, [sp, #-144]!
  402080:	mov	x29, sp
  402084:	stp	x19, x20, [sp, #16]
  402088:	str	w0, [sp, #44]
  40208c:	str	x1, [sp, #32]
  402090:	adrp	x0, 413000 <__FRAME_END__+0x102d8>
  402094:	add	x0, x0, #0xc90
  402098:	ldr	x1, [x0]
  40209c:	str	x1, [sp, #136]
  4020a0:	mov	x1, #0x0                   	// #0
  4020a4:	ldr	x1, [sp, #32]
  4020a8:	ldr	w0, [sp, #44]
  4020ac:	bl	401e20 <parse_argv>
  4020b0:	str	w0, [sp, #48]
  4020b4:	ldr	w0, [sp, #48]
  4020b8:	cmp	w0, #0x0
  4020bc:	b.gt	4020d0 <run+0x54>
  4020c0:	ldr	w0, [sp, #48]
  4020c4:	lsr	w0, w0, #31
  4020c8:	mov	w19, w0
  4020cc:	b	402334 <run+0x2b8>
  4020d0:	bl	4010c0 <log_setup_service@plt>
  4020d4:	mov	w0, #0x12                  	// #18
  4020d8:	bl	401110 <umask@plt>
  4020dc:	str	wzr, [sp, #48]
  4020e0:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  4020e4:	add	x0, x0, #0x10
  4020e8:	ldr	w0, [x0]
  4020ec:	ldr	w1, [sp, #44]
  4020f0:	cmp	w1, w0
  4020f4:	b.le	40216c <run+0xf0>
  4020f8:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  4020fc:	add	x0, x0, #0x10
  402100:	ldr	w0, [x0]
  402104:	str	w0, [sp, #52]
  402108:	b	402158 <run+0xdc>
  40210c:	ldrsw	x0, [sp, #52]
  402110:	lsl	x0, x0, #3
  402114:	ldr	x1, [sp, #32]
  402118:	add	x0, x1, x0
  40211c:	ldr	x0, [x0]
  402120:	mov	w1, #0x0                   	// #0
  402124:	bl	401998 <apply_file>
  402128:	str	w0, [sp, #56]
  40212c:	ldr	w0, [sp, #56]
  402130:	cmp	w0, #0x0
  402134:	b.ge	40214c <run+0xd0>  // b.tcont
  402138:	ldr	w0, [sp, #48]
  40213c:	cmp	w0, #0x0
  402140:	b.ne	40214c <run+0xd0>  // b.any
  402144:	ldr	w0, [sp, #56]
  402148:	str	w0, [sp, #48]
  40214c:	ldr	w0, [sp, #52]
  402150:	add	w0, w0, #0x1
  402154:	str	w0, [sp, #52]
  402158:	ldr	w1, [sp, #52]
  40215c:	ldr	w0, [sp, #44]
  402160:	cmp	w1, w0
  402164:	b.lt	40210c <run+0x90>  // b.tstop
  402168:	b	402330 <run+0x2b4>
  40216c:	str	xzr, [sp, #72]
  402170:	adrp	x0, 402000 <parse_argv+0x1e0>
  402174:	add	x1, x0, #0x5f0
  402178:	add	x0, sp, #0x58
  40217c:	ldp	x2, x3, [x1]
  402180:	stp	x2, x3, [x0]
  402184:	ldp	x2, x3, [x1, #16]
  402188:	stp	x2, x3, [x0, #16]
  40218c:	ldp	x2, x3, [x1, #32]
  402190:	stp	x2, x3, [x0, #32]
  402194:	add	x0, sp, #0x58
  402198:	add	x5, sp, #0x48
  40219c:	mov	x4, x0
  4021a0:	mov	w3, #0x0                   	// #0
  4021a4:	mov	x2, #0x0                   	// #0
  4021a8:	adrp	x0, 402000 <parse_argv+0x1e0>
  4021ac:	add	x1, x0, #0x7e0
  4021b0:	mov	x0, x5
  4021b4:	bl	401230 <conf_files_list_strv@plt>
  4021b8:	str	w0, [sp, #48]
  4021bc:	ldr	w0, [sp, #48]
  4021c0:	cmp	w0, #0x0
  4021c4:	b.ge	402258 <run+0x1dc>  // b.tcont
  4021c8:	mov	w0, #0x3                   	// #3
  4021cc:	str	w0, [sp, #60]
  4021d0:	ldr	w0, [sp, #48]
  4021d4:	str	w0, [sp, #64]
  4021d8:	str	wzr, [sp, #68]
  4021dc:	ldr	w0, [sp, #68]
  4021e0:	bl	401250 <log_get_max_level_realm@plt>
  4021e4:	mov	w1, w0
  4021e8:	ldr	w0, [sp, #60]
  4021ec:	and	w0, w0, #0x7
  4021f0:	cmp	w1, w0
  4021f4:	b.lt	40223c <run+0x1c0>  // b.tstop
  4021f8:	ldr	w0, [sp, #68]
  4021fc:	lsl	w1, w0, #10
  402200:	ldr	w0, [sp, #60]
  402204:	orr	w6, w1, w0
  402208:	adrp	x0, 402000 <parse_argv+0x1e0>
  40220c:	add	x1, x0, #0x4c3
  402210:	adrp	x0, 402000 <parse_argv+0x1e0>
  402214:	add	x5, x0, #0x7e8
  402218:	adrp	x0, 402000 <parse_argv+0x1e0>
  40221c:	add	x4, x0, #0x988
  402220:	mov	w3, #0xce                  	// #206
  402224:	mov	x2, x1
  402228:	ldr	w1, [sp, #64]
  40222c:	mov	w0, w6
  402230:	bl	4011c0 <log_internal_realm@plt>
  402234:	mov	w19, w0
  402238:	b	402250 <run+0x1d4>
  40223c:	ldr	w0, [sp, #64]
  402240:	cmp	w0, #0x0
  402244:	cneg	w0, w0, lt  // lt = tstop
  402248:	and	w0, w0, #0xff
  40224c:	neg	w19, w0
  402250:	mov	w20, #0x0                   	// #0
  402254:	b	402320 <run+0x2a4>
  402258:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  40225c:	add	x0, x0, #0x19
  402260:	ldrb	w0, [x0]
  402264:	cmp	w0, #0x0
  402268:	b.eq	40229c <run+0x220>  // b.none
  40226c:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  402270:	add	x0, x0, #0x1c
  402274:	ldr	w0, [x0]
  402278:	bl	401140 <pager_open@plt>
  40227c:	ldr	x0, [sp, #72]
  402280:	mov	w2, #0x0                   	// #0
  402284:	mov	x1, x0
  402288:	mov	x0, #0x0                   	// #0
  40228c:	bl	401260 <cat_files@plt>
  402290:	mov	w19, w0
  402294:	mov	w20, #0x0                   	// #0
  402298:	b	402320 <run+0x2a4>
  40229c:	mov	w2, #0x20                  	// #32
  4022a0:	adrp	x0, 402000 <parse_argv+0x1e0>
  4022a4:	add	x1, x0, #0x538
  4022a8:	adrp	x0, 402000 <parse_argv+0x1e0>
  4022ac:	add	x0, x0, #0x810
  4022b0:	bl	4014b0 <write_string_file>
  4022b4:	ldr	x0, [sp, #72]
  4022b8:	str	x0, [sp, #80]
  4022bc:	b	402300 <run+0x284>
  4022c0:	ldr	x0, [sp, #80]
  4022c4:	ldr	x0, [x0]
  4022c8:	mov	w1, #0x1                   	// #1
  4022cc:	bl	401998 <apply_file>
  4022d0:	str	w0, [sp, #56]
  4022d4:	ldr	w0, [sp, #56]
  4022d8:	cmp	w0, #0x0
  4022dc:	b.ge	4022f4 <run+0x278>  // b.tcont
  4022e0:	ldr	w0, [sp, #48]
  4022e4:	cmp	w0, #0x0
  4022e8:	b.ne	4022f4 <run+0x278>  // b.any
  4022ec:	ldr	w0, [sp, #56]
  4022f0:	str	w0, [sp, #48]
  4022f4:	ldr	x0, [sp, #80]
  4022f8:	add	x0, x0, #0x8
  4022fc:	str	x0, [sp, #80]
  402300:	ldr	x0, [sp, #80]
  402304:	cmp	x0, #0x0
  402308:	b.eq	40231c <run+0x2a0>  // b.none
  40230c:	ldr	x0, [sp, #80]
  402310:	ldr	x0, [x0]
  402314:	cmp	x0, #0x0
  402318:	b.ne	4022c0 <run+0x244>  // b.any
  40231c:	mov	w20, #0x1                   	// #1
  402320:	add	x0, sp, #0x48
  402324:	bl	401610 <strv_freep>
  402328:	cmp	w20, #0x1
  40232c:	b.ne	402334 <run+0x2b8>  // b.any
  402330:	ldr	w19, [sp, #48]
  402334:	mov	w1, w19
  402338:	adrp	x0, 413000 <__FRAME_END__+0x102d8>
  40233c:	add	x0, x0, #0xc90
  402340:	ldr	x2, [sp, #136]
  402344:	ldr	x0, [x0]
  402348:	eor	x0, x2, x0
  40234c:	cmp	x0, #0x0
  402350:	b.eq	402358 <run+0x2dc>  // b.none
  402354:	bl	401160 <__stack_chk_fail@plt>
  402358:	mov	w0, w1
  40235c:	ldp	x19, x20, [sp, #16]
  402360:	ldp	x29, x30, [sp], #144
  402364:	ret

0000000000402368 <main>:
  402368:	stp	x29, x30, [sp, #-48]!
  40236c:	mov	x29, sp
  402370:	str	w0, [sp, #28]
  402374:	str	x1, [sp, #16]
  402378:	ldr	x1, [sp, #16]
  40237c:	ldr	w0, [sp, #28]
  402380:	bl	401510 <save_argc_argv>
  402384:	ldr	x1, [sp, #16]
  402388:	ldr	w0, [sp, #28]
  40238c:	bl	40207c <run>
  402390:	str	w0, [sp, #44]
  402394:	bl	401180 <ask_password_agent_close@plt>
  402398:	bl	4010b0 <polkit_agent_close@plt>
  40239c:	bl	4011a0 <pager_close@plt>
  4023a0:	bl	401210 <mac_selinux_finish@plt>
  4023a4:	bl	401588 <static_destruct>
  4023a8:	ldr	w0, [sp, #44]
  4023ac:	lsr	w0, w0, #31
  4023b0:	ldp	x29, x30, [sp], #48
  4023b4:	ret

00000000004023b8 <__libc_csu_init>:
  4023b8:	stp	x29, x30, [sp, #-64]!
  4023bc:	mov	x29, sp
  4023c0:	stp	x19, x20, [sp, #16]
  4023c4:	adrp	x20, 413000 <__FRAME_END__+0x102d8>
  4023c8:	add	x20, x20, #0xc88
  4023cc:	stp	x21, x22, [sp, #32]
  4023d0:	adrp	x21, 413000 <__FRAME_END__+0x102d8>
  4023d4:	add	x21, x21, #0xc80
  4023d8:	sub	x20, x20, x21
  4023dc:	mov	w22, w0
  4023e0:	stp	x23, x24, [sp, #48]
  4023e4:	mov	x23, x1
  4023e8:	mov	x24, x2
  4023ec:	bl	401018 <_init>
  4023f0:	cmp	xzr, x20, asr #3
  4023f4:	b.eq	402420 <__libc_csu_init+0x68>  // b.none
  4023f8:	asr	x20, x20, #3
  4023fc:	mov	x19, #0x0                   	// #0
  402400:	ldr	x3, [x21, x19, lsl #3]
  402404:	mov	x2, x24
  402408:	add	x19, x19, #0x1
  40240c:	mov	x1, x23
  402410:	mov	w0, w22
  402414:	blr	x3
  402418:	cmp	x20, x19
  40241c:	b.ne	402400 <__libc_csu_init+0x48>  // b.any
  402420:	ldp	x19, x20, [sp, #16]
  402424:	ldp	x21, x22, [sp, #32]
  402428:	ldp	x23, x24, [sp, #48]
  40242c:	ldp	x29, x30, [sp], #64
  402430:	ret
  402434:	nop

0000000000402438 <__libc_csu_fini>:
  402438:	ret

Disassembly of section .fini:

000000000040243c <_fini>:
  40243c:	stp	x29, x30, [sp, #-16]!
  402440:	mov	x29, sp
  402444:	ldp	x29, x30, [sp], #16
  402448:	ret
