
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//revoutput.so_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000630 <.init>:
 630:	stp	x29, x30, [sp, #-16]!
 634:	mov	x29, sp
 638:	bl	6e0 <fprintf@plt+0x10>
 63c:	ldp	x29, x30, [sp], #16
 640:	ret

Disassembly of section .plt:

0000000000000650 <exit@plt-0x20>:
 650:	stp	x16, x30, [sp, #-16]!
 654:	adrp	x16, 10000 <dl_load@@Base+0xf84c>
 658:	ldr	x17, [x16, #4088]
 65c:	add	x16, x16, #0xff8
 660:	br	x17
 664:	nop
 668:	nop
 66c:	nop

0000000000000670 <exit@plt>:
 670:	adrp	x16, 11000 <exit@GLIBC_2.17>
 674:	ldr	x17, [x16]
 678:	add	x16, x16, #0x0
 67c:	br	x17

0000000000000680 <__cxa_finalize@plt>:
 680:	adrp	x16, 11000 <exit@GLIBC_2.17>
 684:	ldr	x17, [x16, #8]
 688:	add	x16, x16, #0x8
 68c:	br	x17

0000000000000690 <putc@plt>:
 690:	adrp	x16, 11000 <exit@GLIBC_2.17>
 694:	ldr	x17, [x16, #16]
 698:	add	x16, x16, #0x10
 69c:	br	x17

00000000000006a0 <__gmon_start__@plt>:
 6a0:	adrp	x16, 11000 <exit@GLIBC_2.17>
 6a4:	ldr	x17, [x16, #24]
 6a8:	add	x16, x16, #0x18
 6ac:	br	x17

00000000000006b0 <fwrite@plt>:
 6b0:	adrp	x16, 11000 <exit@GLIBC_2.17>
 6b4:	ldr	x17, [x16, #32]
 6b8:	add	x16, x16, #0x20
 6bc:	br	x17

00000000000006c0 <dcgettext@plt>:
 6c0:	adrp	x16, 11000 <exit@GLIBC_2.17>
 6c4:	ldr	x17, [x16, #40]
 6c8:	add	x16, x16, #0x28
 6cc:	br	x17

00000000000006d0 <fprintf@plt>:
 6d0:	adrp	x16, 11000 <exit@GLIBC_2.17>
 6d4:	ldr	x17, [x16, #48]
 6d8:	add	x16, x16, #0x30
 6dc:	br	x17

Disassembly of section .text:

00000000000006e0 <dl_load@@Base-0xd4>:
 6e0:	adrp	x0, 10000 <dl_load@@Base+0xf84c>
 6e4:	ldr	x0, [x0, #4056]
 6e8:	cbz	x0, 6f0 <fprintf@plt+0x20>
 6ec:	b	6a0 <__gmon_start__@plt>
 6f0:	ret
 6f4:	nop
 6f8:	adrp	x0, 11000 <dl_load@@Base+0x1084c>
 6fc:	add	x0, x0, #0x60
 700:	adrp	x1, 11000 <dl_load@@Base+0x1084c>
 704:	add	x1, x1, #0x60
 708:	cmp	x1, x0
 70c:	b.eq	724 <fprintf@plt+0x54>  // b.none
 710:	adrp	x1, 10000 <dl_load@@Base+0xf84c>
 714:	ldr	x1, [x1, #4032]
 718:	cbz	x1, 724 <fprintf@plt+0x54>
 71c:	mov	x16, x1
 720:	br	x16
 724:	ret
 728:	adrp	x0, 11000 <dl_load@@Base+0x1084c>
 72c:	add	x0, x0, #0x60
 730:	adrp	x1, 11000 <dl_load@@Base+0x1084c>
 734:	add	x1, x1, #0x60
 738:	sub	x1, x1, x0
 73c:	lsr	x2, x1, #63
 740:	add	x1, x2, x1, asr #3
 744:	cmp	xzr, x1, asr #1
 748:	asr	x1, x1, #1
 74c:	b.eq	764 <fprintf@plt+0x94>  // b.none
 750:	adrp	x2, 10000 <dl_load@@Base+0xf84c>
 754:	ldr	x2, [x2, #4064]
 758:	cbz	x2, 764 <fprintf@plt+0x94>
 75c:	mov	x16, x2
 760:	br	x16
 764:	ret
 768:	stp	x29, x30, [sp, #-32]!
 76c:	mov	x29, sp
 770:	str	x19, [sp, #16]
 774:	adrp	x19, 11000 <dl_load@@Base+0x1084c>
 778:	ldrb	w0, [x19, #96]
 77c:	cbnz	w0, 7a4 <fprintf@plt+0xd4>
 780:	adrp	x0, 10000 <dl_load@@Base+0xf84c>
 784:	ldr	x0, [x0, #4040]
 788:	cbz	x0, 798 <fprintf@plt+0xc8>
 78c:	adrp	x0, 11000 <dl_load@@Base+0x1084c>
 790:	ldr	x0, [x0, #56]
 794:	bl	680 <__cxa_finalize@plt>
 798:	bl	6f8 <fprintf@plt+0x28>
 79c:	mov	w0, #0x1                   	// #1
 7a0:	strb	w0, [x19, #96]
 7a4:	ldr	x19, [sp, #16]
 7a8:	ldp	x29, x30, [sp], #32
 7ac:	ret
 7b0:	b	728 <fprintf@plt+0x58>

00000000000007b4 <dl_load@@Base>:
 7b4:	sub	sp, sp, #0x50
 7b8:	stp	x20, x19, [sp, #64]
 7bc:	adrp	x20, 11000 <dl_load@@Base+0x1084c>
 7c0:	add	x20, x20, #0x68
 7c4:	stp	x29, x30, [sp, #32]
 7c8:	stp	x0, x1, [x20]
 7cc:	ldr	w8, [x0]
 7d0:	str	x21, [sp, #48]
 7d4:	add	x29, sp, #0x20
 7d8:	cmp	w8, #0x2
 7dc:	b.ne	91c <dl_load@@Base+0x168>  // b.any
 7e0:	ldr	w8, [x0, #4]
 7e4:	tbnz	w8, #31, 91c <dl_load@@Base+0x168>
 7e8:	adrp	x8, 11000 <dl_load@@Base+0x1084c>
 7ec:	ldr	x8, [x8, #120]
 7f0:	cbz	x8, 818 <dl_load@@Base+0x64>
 7f4:	ldr	x9, [x0, #48]
 7f8:	adrp	x8, 0 <exit@plt-0x670>
 7fc:	add	x8, x8, #0xa67
 800:	adrp	x2, 11000 <dl_load@@Base+0x1084c>
 804:	add	x2, x2, #0x78
 808:	mov	x0, x1
 80c:	mov	x1, x8
 810:	blr	x9
 814:	cbz	w0, 820 <dl_load@@Base+0x6c>
 818:	mov	w19, wzr
 81c:	b	83c <dl_load@@Base+0x88>
 820:	ldp	x8, x0, [x20]
 824:	ldr	x2, [x20, #16]
 828:	adrp	x1, 0 <exit@plt-0x670>
 82c:	add	x1, x1, #0xa9b
 830:	ldr	x8, [x8, #104]
 834:	blr	x8
 838:	mov	w19, #0x1                   	// #1
 83c:	ldp	x8, x0, [x20]
 840:	adrp	x1, 11000 <dl_load@@Base+0x1084c>
 844:	add	x1, x1, #0x40
 848:	ldr	x8, [x8, #64]
 84c:	blr	x8
 850:	ldp	x8, x0, [x20]
 854:	adrp	x1, 0 <exit@plt-0x670>
 858:	adrp	x2, 0 <exit@plt-0x670>
 85c:	add	x1, x1, #0xa67
 860:	ldr	x8, [x8, #168]
 864:	add	x2, x2, #0xae1
 868:	mov	x4, sp
 86c:	mov	w3, #0x6                   	// #6
 870:	blr	x8
 874:	cbnz	w0, 8ec <dl_load@@Base+0x138>
 878:	mov	w8, #0x1                   	// #1
 87c:	str	w8, [sp]
 880:	ldp	x8, x0, [x20]
 884:	str	xzr, [sp, #8]
 888:	str	wzr, [sp, #16]
 88c:	adrp	x1, 0 <exit@plt-0x670>
 890:	ldr	x8, [x8, #176]
 894:	adrp	x2, 0 <exit@plt-0x670>
 898:	add	x1, x1, #0xa67
 89c:	add	x2, x2, #0xae1
 8a0:	mov	x3, sp
 8a4:	blr	x8
 8a8:	cbnz	w0, 8ec <dl_load@@Base+0x138>
 8ac:	ldp	x8, x19, [x20]
 8b0:	adrp	x1, 0 <exit@plt-0x670>
 8b4:	add	x1, x1, #0xae8
 8b8:	mov	w2, #0x5                   	// #5
 8bc:	ldr	x21, [x8, #104]
 8c0:	mov	x0, xzr
 8c4:	bl	6c0 <dcgettext@plt>
 8c8:	mov	x1, x0
 8cc:	mov	x0, x19
 8d0:	blr	x21
 8d4:	ldp	x8, x0, [x20]
 8d8:	adrp	x1, 0 <exit@plt-0x670>
 8dc:	add	x1, x1, #0xab7
 8e0:	ldr	x8, [x8, #104]
 8e4:	blr	x8
 8e8:	mov	w19, #0x1                   	// #1
 8ec:	ldp	x8, x0, [x20]
 8f0:	adrp	x1, 0 <exit@plt-0x670>
 8f4:	add	x1, x1, #0xb22
 8f8:	ldr	x8, [x8, #88]
 8fc:	blr	x8
 900:	cmp	w19, #0x0
 904:	ldp	x20, x19, [sp, #64]
 908:	ldr	x21, [sp, #48]
 90c:	ldp	x29, x30, [sp, #32]
 910:	cset	w0, eq  // eq = none
 914:	add	sp, sp, #0x50
 918:	ret
 91c:	adrp	x19, 10000 <dl_load@@Base+0xf84c>
 920:	ldr	x19, [x19, #4048]
 924:	adrp	x0, 0 <exit@plt-0x670>
 928:	add	x0, x0, #0xa40
 92c:	mov	w1, #0x27                  	// #39
 930:	ldr	x3, [x19]
 934:	mov	w2, #0x1                   	// #1
 938:	bl	6b0 <fwrite@plt>
 93c:	adrp	x8, 11000 <dl_load@@Base+0x1084c>
 940:	ldr	x8, [x8, #104]
 944:	ldr	x0, [x19]
 948:	adrp	x1, 0 <exit@plt-0x670>
 94c:	add	x1, x1, #0xa68
 950:	ldp	w4, w5, [x8]
 954:	mov	w2, #0x2                   	// #2
 958:	mov	w3, wzr
 95c:	bl	6d0 <fprintf@plt>
 960:	mov	w0, #0x1                   	// #1
 964:	bl	670 <exit@plt>
 968:	sub	sp, sp, #0x30
 96c:	stp	x29, x30, [sp, #32]
 970:	add	x29, sp, #0x20
 974:	cbz	x0, 9b4 <dl_load@@Base+0x200>
 978:	adrp	x8, 11000 <dl_load@@Base+0x1084c>
 97c:	add	x8, x8, #0x68
 980:	ldp	x9, x0, [x8]
 984:	adrp	x1, 0 <exit@plt-0x670>
 988:	adrp	x2, 0 <exit@plt-0x670>
 98c:	add	x1, x1, #0xa67
 990:	ldr	x8, [x9, #168]
 994:	add	x2, x2, #0xae1
 998:	mov	x4, sp
 99c:	mov	w3, #0x1                   	// #1
 9a0:	blr	x8
 9a4:	cbz	w0, 9b4 <dl_load@@Base+0x200>
 9a8:	ldr	d0, [sp, #8]
 9ac:	fcmp	d0, #0.0
 9b0:	cset	w0, ne  // ne = any
 9b4:	ldp	x29, x30, [sp, #32]
 9b8:	add	sp, sp, #0x30
 9bc:	ret
 9c0:	cbz	x0, 9dc <dl_load@@Base+0x228>
 9c4:	adrp	x9, 0 <exit@plt-0x670>
 9c8:	mov	x8, x0
 9cc:	add	x9, x9, #0x9e0
 9d0:	mov	w0, #0x1                   	// #1
 9d4:	str	x9, [x8, #40]
 9d8:	str	w0, [x8, #24]
 9dc:	ret
 9e0:	stp	x29, x30, [sp, #-48]!
 9e4:	stp	x20, x19, [sp, #32]
 9e8:	mul	x20, x2, x1
 9ec:	cmp	w20, #0x1
 9f0:	stp	x22, x21, [sp, #16]
 9f4:	mov	x29, sp
 9f8:	b.lt	a1c <dl_load@@Base+0x268>  // b.tstop
 9fc:	mov	x19, x3
 a00:	sxtw	x21, w20
 a04:	sub	x22, x0, #0x1
 a08:	ldrb	w0, [x22, x21]
 a0c:	mov	x1, x19
 a10:	bl	690 <putc@plt>
 a14:	subs	x21, x21, #0x1
 a18:	b.gt	a08 <dl_load@@Base+0x254>
 a1c:	mov	x0, x20
 a20:	ldp	x20, x19, [sp, #32]
 a24:	ldp	x22, x21, [sp, #16]
 a28:	ldp	x29, x30, [sp], #48
 a2c:	ret

Disassembly of section .fini:

0000000000000a30 <.fini>:
 a30:	stp	x29, x30, [sp, #-16]!
 a34:	mov	x29, sp
 a38:	ldp	x29, x30, [sp], #16
 a3c:	ret
