
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//sed_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402608 <.init>:
  402608:	stp	x29, x30, [sp, #-16]!
  40260c:	mov	x29, sp
  402610:	bl	4032c0 <wcrtomb@plt+0x580>
  402614:	ldp	x29, x30, [sp], #16
  402618:	ret

Disassembly of section .plt:

0000000000402620 <mbrtowc@plt-0x20>:
  402620:	stp	x16, x30, [sp, #-16]!
  402624:	adrp	x16, 437000 <_obstack_memory_used@@Base+0x243b0>
  402628:	ldr	x17, [x16, #4088]
  40262c:	add	x16, x16, #0xff8
  402630:	br	x17
  402634:	nop
  402638:	nop
  40263c:	nop

0000000000402640 <mbrtowc@plt>:
  402640:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402644:	ldr	x17, [x16]
  402648:	add	x16, x16, #0x0
  40264c:	br	x17

0000000000402650 <memcpy@plt>:
  402650:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402654:	ldr	x17, [x16, #8]
  402658:	add	x16, x16, #0x8
  40265c:	br	x17

0000000000402660 <memmove@plt>:
  402660:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402664:	ldr	x17, [x16, #16]
  402668:	add	x16, x16, #0x10
  40266c:	br	x17

0000000000402670 <isalpha@plt>:
  402670:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402674:	ldr	x17, [x16, #24]
  402678:	add	x16, x16, #0x18
  40267c:	br	x17

0000000000402680 <fwrite_unlocked@plt>:
  402680:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402684:	ldr	x17, [x16, #32]
  402688:	add	x16, x16, #0x20
  40268c:	br	x17

0000000000402690 <strlen@plt>:
  402690:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402694:	ldr	x17, [x16, #40]
  402698:	add	x16, x16, #0x28
  40269c:	br	x17

00000000004026a0 <__sprintf_chk@plt>:
  4026a0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4026a4:	ldr	x17, [x16, #48]
  4026a8:	add	x16, x16, #0x30
  4026ac:	br	x17

00000000004026b0 <acl_set_fd@plt>:
  4026b0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4026b4:	ldr	x17, [x16, #56]
  4026b8:	add	x16, x16, #0x38
  4026bc:	br	x17

00000000004026c0 <exit@plt>:
  4026c0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4026c4:	ldr	x17, [x16, #64]
  4026c8:	add	x16, x16, #0x40
  4026cc:	br	x17

00000000004026d0 <error@plt>:
  4026d0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4026d4:	ldr	x17, [x16, #72]
  4026d8:	add	x16, x16, #0x48
  4026dc:	br	x17

00000000004026e0 <acl_entries@plt>:
  4026e0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4026e4:	ldr	x17, [x16, #80]
  4026e8:	add	x16, x16, #0x50
  4026ec:	br	x17

00000000004026f0 <wctype@plt>:
  4026f0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4026f4:	ldr	x17, [x16, #88]
  4026f8:	add	x16, x16, #0x58
  4026fc:	br	x17

0000000000402700 <readlink@plt>:
  402700:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402704:	ldr	x17, [x16, #96]
  402708:	add	x16, x16, #0x60
  40270c:	br	x17

0000000000402710 <ftell@plt>:
  402710:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402714:	ldr	x17, [x16, #104]
  402718:	add	x16, x16, #0x68
  40271c:	br	x17

0000000000402720 <__cxa_atexit@plt>:
  402720:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402724:	ldr	x17, [x16, #112]
  402728:	add	x16, x16, #0x70
  40272c:	br	x17

0000000000402730 <qsort@plt>:
  402730:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402734:	ldr	x17, [x16, #120]
  402738:	add	x16, x16, #0x78
  40273c:	br	x17

0000000000402740 <setvbuf@plt>:
  402740:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402744:	ldr	x17, [x16, #128]
  402748:	add	x16, x16, #0x80
  40274c:	br	x17

0000000000402750 <isblank@plt>:
  402750:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402754:	ldr	x17, [x16, #136]
  402758:	add	x16, x16, #0x88
  40275c:	br	x17

0000000000402760 <__fwriting@plt>:
  402760:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402764:	ldr	x17, [x16, #144]
  402768:	add	x16, x16, #0x90
  40276c:	br	x17

0000000000402770 <__ctype_tolower_loc@plt>:
  402770:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402774:	ldr	x17, [x16, #152]
  402778:	add	x16, x16, #0x98
  40277c:	br	x17

0000000000402780 <fileno@plt>:
  402780:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402784:	ldr	x17, [x16, #160]
  402788:	add	x16, x16, #0xa0
  40278c:	br	x17

0000000000402790 <acl_delete_def_file@plt>:
  402790:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402794:	ldr	x17, [x16, #168]
  402798:	add	x16, x16, #0xa8
  40279c:	br	x17

00000000004027a0 <fclose@plt>:
  4027a0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #176]
  4027a8:	add	x16, x16, #0xb0
  4027ac:	br	x17

00000000004027b0 <wctob@plt>:
  4027b0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #184]
  4027b8:	add	x16, x16, #0xb8
  4027bc:	br	x17

00000000004027c0 <nl_langinfo@plt>:
  4027c0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #192]
  4027c8:	add	x16, x16, #0xc0
  4027cc:	br	x17

00000000004027d0 <fopen@plt>:
  4027d0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #200]
  4027d8:	add	x16, x16, #0xc8
  4027dc:	br	x17

00000000004027e0 <isspace@plt>:
  4027e0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #208]
  4027e8:	add	x16, x16, #0xd0
  4027ec:	br	x17

00000000004027f0 <iswctype@plt>:
  4027f0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #216]
  4027f8:	add	x16, x16, #0xd8
  4027fc:	br	x17

0000000000402800 <malloc@plt>:
  402800:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402804:	ldr	x17, [x16, #224]
  402808:	add	x16, x16, #0xe0
  40280c:	br	x17

0000000000402810 <chmod@plt>:
  402810:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402814:	ldr	x17, [x16, #232]
  402818:	add	x16, x16, #0xe8
  40281c:	br	x17

0000000000402820 <getdelim@plt>:
  402820:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402824:	ldr	x17, [x16, #240]
  402828:	add	x16, x16, #0xf0
  40282c:	br	x17

0000000000402830 <islower@plt>:
  402830:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402834:	ldr	x17, [x16, #248]
  402838:	add	x16, x16, #0xf8
  40283c:	br	x17

0000000000402840 <isxdigit@plt>:
  402840:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402844:	ldr	x17, [x16, #256]
  402848:	add	x16, x16, #0x100
  40284c:	br	x17

0000000000402850 <popen@plt>:
  402850:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402854:	ldr	x17, [x16, #264]
  402858:	add	x16, x16, #0x108
  40285c:	br	x17

0000000000402860 <strncmp@plt>:
  402860:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402864:	ldr	x17, [x16, #272]
  402868:	add	x16, x16, #0x110
  40286c:	br	x17

0000000000402870 <bindtextdomain@plt>:
  402870:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16, #280]
  402878:	add	x16, x16, #0x118
  40287c:	br	x17

0000000000402880 <isdigit@plt>:
  402880:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402884:	ldr	x17, [x16, #288]
  402888:	add	x16, x16, #0x120
  40288c:	br	x17

0000000000402890 <__libc_start_main@plt>:
  402890:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402894:	ldr	x17, [x16, #296]
  402898:	add	x16, x16, #0x128
  40289c:	br	x17

00000000004028a0 <strverscmp@plt>:
  4028a0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #304]
  4028a8:	add	x16, x16, #0x130
  4028ac:	br	x17

00000000004028b0 <__printf_chk@plt>:
  4028b0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #312]
  4028b8:	add	x16, x16, #0x138
  4028bc:	br	x17

00000000004028c0 <acl_get_tag_type@plt>:
  4028c0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #320]
  4028c8:	add	x16, x16, #0x140
  4028cc:	br	x17

00000000004028d0 <memset@plt>:
  4028d0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #328]
  4028d8:	add	x16, x16, #0x148
  4028dc:	br	x17

00000000004028e0 <fdopen@plt>:
  4028e0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #336]
  4028e8:	add	x16, x16, #0x150
  4028ec:	br	x17

00000000004028f0 <fchmod@plt>:
  4028f0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #344]
  4028f8:	add	x16, x16, #0x158
  4028fc:	br	x17

0000000000402900 <__vfprintf_chk@plt>:
  402900:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402904:	ldr	x17, [x16, #352]
  402908:	add	x16, x16, #0x160
  40290c:	br	x17

0000000000402910 <calloc@plt>:
  402910:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402914:	ldr	x17, [x16, #360]
  402918:	add	x16, x16, #0x168
  40291c:	br	x17

0000000000402920 <isupper@plt>:
  402920:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402924:	ldr	x17, [x16, #368]
  402928:	add	x16, x16, #0x170
  40292c:	br	x17

0000000000402930 <realloc@plt>:
  402930:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402934:	ldr	x17, [x16, #376]
  402938:	add	x16, x16, #0x178
  40293c:	br	x17

0000000000402940 <__ctype_toupper_loc@plt>:
  402940:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402944:	ldr	x17, [x16, #384]
  402948:	add	x16, x16, #0x180
  40294c:	br	x17

0000000000402950 <acl_set_file@plt>:
  402950:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402954:	ldr	x17, [x16, #392]
  402958:	add	x16, x16, #0x188
  40295c:	br	x17

0000000000402960 <rewind@plt>:
  402960:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402964:	ldr	x17, [x16, #400]
  402968:	add	x16, x16, #0x190
  40296c:	br	x17

0000000000402970 <acl_from_mode@plt>:
  402970:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402974:	ldr	x17, [x16, #408]
  402978:	add	x16, x16, #0x198
  40297c:	br	x17

0000000000402980 <acl_get_fd@plt>:
  402980:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402984:	ldr	x17, [x16, #416]
  402988:	add	x16, x16, #0x1a0
  40298c:	br	x17

0000000000402990 <strdup@plt>:
  402990:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402994:	ldr	x17, [x16, #424]
  402998:	add	x16, x16, #0x1a8
  40299c:	br	x17

00000000004029a0 <strerror@plt>:
  4029a0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4029a4:	ldr	x17, [x16, #432]
  4029a8:	add	x16, x16, #0x1b0
  4029ac:	br	x17

00000000004029b0 <strrchr@plt>:
  4029b0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4029b4:	ldr	x17, [x16, #440]
  4029b8:	add	x16, x16, #0x1b8
  4029bc:	br	x17

00000000004029c0 <__gmon_start__@plt>:
  4029c0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4029c4:	ldr	x17, [x16, #448]
  4029c8:	add	x16, x16, #0x1c0
  4029cc:	br	x17

00000000004029d0 <btowc@plt>:
  4029d0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4029d4:	ldr	x17, [x16, #456]
  4029d8:	add	x16, x16, #0x1c8
  4029dc:	br	x17

00000000004029e0 <abort@plt>:
  4029e0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4029e4:	ldr	x17, [x16, #464]
  4029e8:	add	x16, x16, #0x1d0
  4029ec:	br	x17

00000000004029f0 <mkostemp@plt>:
  4029f0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4029f4:	ldr	x17, [x16, #472]
  4029f8:	add	x16, x16, #0x1d8
  4029fc:	br	x17

0000000000402a00 <iscntrl@plt>:
  402a00:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402a04:	ldr	x17, [x16, #480]
  402a08:	add	x16, x16, #0x1e0
  402a0c:	br	x17

0000000000402a10 <mbsinit@plt>:
  402a10:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402a14:	ldr	x17, [x16, #488]
  402a18:	add	x16, x16, #0x1e8
  402a1c:	br	x17

0000000000402a20 <__overflow@plt>:
  402a20:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402a24:	ldr	x17, [x16, #496]
  402a28:	add	x16, x16, #0x1f0
  402a2c:	br	x17

0000000000402a30 <ispunct@plt>:
  402a30:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402a34:	ldr	x17, [x16, #504]
  402a38:	add	x16, x16, #0x1f8
  402a3c:	br	x17

0000000000402a40 <puts@plt>:
  402a40:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402a44:	ldr	x17, [x16, #512]
  402a48:	add	x16, x16, #0x200
  402a4c:	br	x17

0000000000402a50 <fread_unlocked@plt>:
  402a50:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402a54:	ldr	x17, [x16, #520]
  402a58:	add	x16, x16, #0x208
  402a5c:	br	x17

0000000000402a60 <memcmp@plt>:
  402a60:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402a64:	ldr	x17, [x16, #528]
  402a68:	add	x16, x16, #0x210
  402a6c:	br	x17

0000000000402a70 <textdomain@plt>:
  402a70:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402a74:	ldr	x17, [x16, #536]
  402a78:	add	x16, x16, #0x218
  402a7c:	br	x17

0000000000402a80 <getopt_long@plt>:
  402a80:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402a84:	ldr	x17, [x16, #544]
  402a88:	add	x16, x16, #0x220
  402a8c:	br	x17

0000000000402a90 <__fprintf_chk@plt>:
  402a90:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402a94:	ldr	x17, [x16, #552]
  402a98:	add	x16, x16, #0x228
  402a9c:	br	x17

0000000000402aa0 <strcmp@plt>:
  402aa0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402aa4:	ldr	x17, [x16, #560]
  402aa8:	add	x16, x16, #0x230
  402aac:	br	x17

0000000000402ab0 <__ctype_b_loc@plt>:
  402ab0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402ab4:	ldr	x17, [x16, #568]
  402ab8:	add	x16, x16, #0x238
  402abc:	br	x17

0000000000402ac0 <acl_get_file@plt>:
  402ac0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402ac4:	ldr	x17, [x16, #576]
  402ac8:	add	x16, x16, #0x240
  402acc:	br	x17

0000000000402ad0 <strtol@plt>:
  402ad0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402ad4:	ldr	x17, [x16, #584]
  402ad8:	add	x16, x16, #0x248
  402adc:	br	x17

0000000000402ae0 <free@plt>:
  402ae0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402ae4:	ldr	x17, [x16, #592]
  402ae8:	add	x16, x16, #0x250
  402aec:	br	x17

0000000000402af0 <ungetc@plt>:
  402af0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402af4:	ldr	x17, [x16, #600]
  402af8:	add	x16, x16, #0x258
  402afc:	br	x17

0000000000402b00 <__ctype_get_mb_cur_max@plt>:
  402b00:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402b04:	ldr	x17, [x16, #608]
  402b08:	add	x16, x16, #0x260
  402b0c:	br	x17

0000000000402b10 <acl_get_entry@plt>:
  402b10:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402b14:	ldr	x17, [x16, #616]
  402b18:	add	x16, x16, #0x268
  402b1c:	br	x17

0000000000402b20 <strchr@plt>:
  402b20:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402b24:	ldr	x17, [x16, #624]
  402b28:	add	x16, x16, #0x270
  402b2c:	br	x17

0000000000402b30 <memrchr@plt>:
  402b30:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402b34:	ldr	x17, [x16, #632]
  402b38:	add	x16, x16, #0x278
  402b3c:	br	x17

0000000000402b40 <rename@plt>:
  402b40:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402b44:	ldr	x17, [x16, #640]
  402b48:	add	x16, x16, #0x280
  402b4c:	br	x17

0000000000402b50 <fwrite@plt>:
  402b50:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402b54:	ldr	x17, [x16, #648]
  402b58:	add	x16, x16, #0x288
  402b5c:	br	x17

0000000000402b60 <fflush_unlocked@plt>:
  402b60:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402b64:	ldr	x17, [x16, #656]
  402b68:	add	x16, x16, #0x290
  402b6c:	br	x17

0000000000402b70 <dcngettext@plt>:
  402b70:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402b74:	ldr	x17, [x16, #664]
  402b78:	add	x16, x16, #0x298
  402b7c:	br	x17

0000000000402b80 <strcpy@plt>:
  402b80:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402b84:	ldr	x17, [x16, #672]
  402b88:	add	x16, x16, #0x2a0
  402b8c:	br	x17

0000000000402b90 <clearerr_unlocked@plt>:
  402b90:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402b94:	ldr	x17, [x16, #680]
  402b98:	add	x16, x16, #0x2a8
  402b9c:	br	x17

0000000000402ba0 <__lxstat@plt>:
  402ba0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402ba4:	ldr	x17, [x16, #688]
  402ba8:	add	x16, x16, #0x2b0
  402bac:	br	x17

0000000000402bb0 <memchr@plt>:
  402bb0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402bb4:	ldr	x17, [x16, #696]
  402bb8:	add	x16, x16, #0x2b8
  402bbc:	br	x17

0000000000402bc0 <isatty@plt>:
  402bc0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402bc4:	ldr	x17, [x16, #704]
  402bc8:	add	x16, x16, #0x2c0
  402bcc:	br	x17

0000000000402bd0 <fputc_unlocked@plt>:
  402bd0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402bd4:	ldr	x17, [x16, #712]
  402bd8:	add	x16, x16, #0x2c8
  402bdc:	br	x17

0000000000402be0 <isgraph@plt>:
  402be0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402be4:	ldr	x17, [x16, #720]
  402be8:	add	x16, x16, #0x2d0
  402bec:	br	x17

0000000000402bf0 <iswalnum@plt>:
  402bf0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402bf4:	ldr	x17, [x16, #728]
  402bf8:	add	x16, x16, #0x2d8
  402bfc:	br	x17

0000000000402c00 <__fxstat@plt>:
  402c00:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402c04:	ldr	x17, [x16, #736]
  402c08:	add	x16, x16, #0x2e0
  402c0c:	br	x17

0000000000402c10 <strstr@plt>:
  402c10:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402c14:	ldr	x17, [x16, #744]
  402c18:	add	x16, x16, #0x2e8
  402c1c:	br	x17

0000000000402c20 <dcgettext@plt>:
  402c20:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402c24:	ldr	x17, [x16, #752]
  402c28:	add	x16, x16, #0x2f0
  402c2c:	br	x17

0000000000402c30 <fputs_unlocked@plt>:
  402c30:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402c34:	ldr	x17, [x16, #760]
  402c38:	add	x16, x16, #0x2f8
  402c3c:	br	x17

0000000000402c40 <strcoll@plt>:
  402c40:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402c44:	ldr	x17, [x16, #768]
  402c48:	add	x16, x16, #0x300
  402c4c:	br	x17

0000000000402c50 <isalnum@plt>:
  402c50:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402c54:	ldr	x17, [x16, #776]
  402c58:	add	x16, x16, #0x308
  402c5c:	br	x17

0000000000402c60 <pclose@plt>:
  402c60:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402c64:	ldr	x17, [x16, #784]
  402c68:	add	x16, x16, #0x310
  402c6c:	br	x17

0000000000402c70 <towupper@plt>:
  402c70:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402c74:	ldr	x17, [x16, #792]
  402c78:	add	x16, x16, #0x318
  402c7c:	br	x17

0000000000402c80 <iswprint@plt>:
  402c80:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402c84:	ldr	x17, [x16, #800]
  402c88:	add	x16, x16, #0x320
  402c8c:	br	x17

0000000000402c90 <umask@plt>:
  402c90:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402c94:	ldr	x17, [x16, #808]
  402c98:	add	x16, x16, #0x328
  402c9c:	br	x17

0000000000402ca0 <__assert_fail@plt>:
  402ca0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402ca4:	ldr	x17, [x16, #816]
  402ca8:	add	x16, x16, #0x330
  402cac:	br	x17

0000000000402cb0 <__errno_location@plt>:
  402cb0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402cb4:	ldr	x17, [x16, #824]
  402cb8:	add	x16, x16, #0x338
  402cbc:	br	x17

0000000000402cc0 <getenv@plt>:
  402cc0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402cc4:	ldr	x17, [x16, #832]
  402cc8:	add	x16, x16, #0x340
  402ccc:	br	x17

0000000000402cd0 <unlink@plt>:
  402cd0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402cd4:	ldr	x17, [x16, #840]
  402cd8:	add	x16, x16, #0x348
  402cdc:	br	x17

0000000000402ce0 <fchown@plt>:
  402ce0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402ce4:	ldr	x17, [x16, #848]
  402ce8:	add	x16, x16, #0x350
  402cec:	br	x17

0000000000402cf0 <towlower@plt>:
  402cf0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402cf4:	ldr	x17, [x16, #856]
  402cf8:	add	x16, x16, #0x358
  402cfc:	br	x17

0000000000402d00 <__uflow@plt>:
  402d00:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402d04:	ldr	x17, [x16, #864]
  402d08:	add	x16, x16, #0x360
  402d0c:	br	x17

0000000000402d10 <isprint@plt>:
  402d10:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402d14:	ldr	x17, [x16, #872]
  402d18:	add	x16, x16, #0x368
  402d1c:	br	x17

0000000000402d20 <setlocale@plt>:
  402d20:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402d24:	ldr	x17, [x16, #880]
  402d28:	add	x16, x16, #0x370
  402d2c:	br	x17

0000000000402d30 <acl_free@plt>:
  402d30:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402d34:	ldr	x17, [x16, #888]
  402d38:	add	x16, x16, #0x378
  402d3c:	br	x17

0000000000402d40 <wcrtomb@plt>:
  402d40:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402d44:	ldr	x17, [x16, #896]
  402d48:	add	x16, x16, #0x380
  402d4c:	br	x17

Disassembly of section .text:

0000000000402d50 <_obstack_begin@@Base-0xfcf0>:
  402d50:	sub	sp, sp, #0x80
  402d54:	stp	x29, x30, [sp, #32]
  402d58:	add	x29, sp, #0x20
  402d5c:	stp	x19, x20, [sp, #48]
  402d60:	mov	x19, x1
  402d64:	mov	w20, w0
  402d68:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xd3b0>
  402d6c:	add	x0, x0, #0xe60
  402d70:	stp	x21, x22, [sp, #64]
  402d74:	adrp	x21, 420000 <_obstack_memory_used@@Base+0xd3b0>
  402d78:	add	x21, x21, #0x3d0
  402d7c:	stp	x23, x24, [sp, #80]
  402d80:	stp	x25, x26, [sp, #96]
  402d84:	adrp	x26, 438000 <_obstack_memory_used@@Base+0x253b0>
  402d88:	stp	x27, x28, [sp, #112]
  402d8c:	bl	402cc0 <getenv@plt>
  402d90:	mov	x22, x0
  402d94:	ldr	x0, [x19]
  402d98:	bl	4104e0 <wcrtomb@plt+0xd7a0>
  402d9c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  402da0:	add	x1, x1, #0x7d8
  402da4:	mov	w0, #0x6                   	// #6
  402da8:	bl	402d20 <setlocale@plt>
  402dac:	bl	4090c8 <wcrtomb@plt+0x6388>
  402db0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  402db4:	add	x0, x0, #0x8e0
  402db8:	bl	410290 <wcrtomb@plt+0xd550>
  402dbc:	adrp	x0, 409000 <wcrtomb@plt+0x62c0>
  402dc0:	add	x0, x0, #0x8c8
  402dc4:	bl	41fc18 <_obstack_memory_used@@Base+0xcfc8>
  402dc8:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  402dcc:	add	x1, x1, #0xe68
  402dd0:	mov	x0, x21
  402dd4:	bl	402870 <bindtextdomain@plt>
  402dd8:	mov	x0, x21
  402ddc:	bl	402a70 <textdomain@plt>
  402de0:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xd3b0>
  402de4:	add	x0, x0, #0x658
  402de8:	bl	402cc0 <getenv@plt>
  402dec:	cmp	x0, #0x0
  402df0:	cset	w0, ne  // ne = any
  402df4:	str	w0, [x26, #2264]
  402df8:	cbz	x22, 402e24 <wcrtomb@plt+0xe4>
  402dfc:	mov	x0, x22
  402e00:	mov	w2, #0xa                   	// #10
  402e04:	mov	x1, #0x0                   	// #0
  402e08:	bl	402ad0 <strtol@plt>
  402e0c:	sxtw	x0, w0
  402e10:	cmp	x0, #0x1
  402e14:	b.ls	402e24 <wcrtomb@plt+0xe4>  // b.plast
  402e18:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  402e1c:	sub	x0, x0, #0x1
  402e20:	str	x0, [x1, #1112]
  402e24:	adrp	x22, 421000 <_obstack_memory_used@@Base+0xe3b0>
  402e28:	adrp	x21, 420000 <_obstack_memory_used@@Base+0xd3b0>
  402e2c:	adrp	x23, 438000 <_obstack_memory_used@@Base+0x253b0>
  402e30:	adrp	x25, 438000 <_obstack_memory_used@@Base+0x253b0>
  402e34:	add	x22, x22, #0x28
  402e38:	add	x21, x21, #0xf38
  402e3c:	add	x23, x23, #0x740
  402e40:	add	x25, x25, #0x458
  402e44:	mov	w24, #0x1                   	// #1
  402e48:	mov	x3, x22
  402e4c:	mov	x2, x21
  402e50:	mov	x1, x19
  402e54:	mov	w0, w20
  402e58:	mov	x4, #0x0                   	// #0
  402e5c:	bl	402a80 <getopt_long@plt>
  402e60:	cmn	w0, #0x1
  402e64:	b.eq	402eb4 <wcrtomb@plt+0x174>  // b.none
  402e68:	cmp	w0, #0x6e
  402e6c:	b.eq	403054 <wcrtomb@plt+0x314>  // b.none
  402e70:	b.le	402f20 <wcrtomb@plt+0x1e0>
  402e74:	cmp	w0, #0x76
  402e78:	b.eq	403064 <wcrtomb@plt+0x324>  // b.none
  402e7c:	b.le	402f70 <wcrtomb@plt+0x230>
  402e80:	cmp	w0, #0x100
  402e84:	b.eq	40305c <wcrtomb@plt+0x31c>  // b.none
  402e88:	cmp	w0, #0x101
  402e8c:	b.ne	402f60 <wcrtomb@plt+0x220>  // b.any
  402e90:	mov	x3, x22
  402e94:	mov	x2, x21
  402e98:	mov	x1, x19
  402e9c:	mov	w0, w20
  402ea0:	mov	x4, #0x0                   	// #0
  402ea4:	strb	w24, [x23, #45]
  402ea8:	bl	402a80 <getopt_long@plt>
  402eac:	cmn	w0, #0x1
  402eb0:	b.ne	402e68 <wcrtomb@plt+0x128>  // b.any
  402eb4:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x253b0>
  402eb8:	add	x21, x21, #0x740
  402ebc:	adrp	x22, 438000 <_obstack_memory_used@@Base+0x253b0>
  402ec0:	ldr	x0, [x21, #16]
  402ec4:	cbz	x0, 403200 <wcrtomb@plt+0x4c0>
  402ec8:	ldr	x0, [x21, #16]
  402ecc:	bl	405730 <wcrtomb@plt+0x29f0>
  402ed0:	ldrb	w0, [x21, #45]
  402ed4:	cbnz	w0, 403238 <wcrtomb@plt+0x4f8>
  402ed8:	ldr	x0, [x21, #16]
  402edc:	ldrsw	x1, [x22, #1280]
  402ee0:	add	x1, x19, x1, lsl #3
  402ee4:	bl	408e88 <wcrtomb@plt+0x6148>
  402ee8:	mov	w19, w0
  402eec:	ldr	x0, [x21, #16]
  402ef0:	bl	4058d0 <wcrtomb@plt+0x2b90>
  402ef4:	mov	x0, #0x0                   	// #0
  402ef8:	bl	40a408 <wcrtomb@plt+0x76c8>
  402efc:	mov	w0, w19
  402f00:	ldp	x29, x30, [sp, #32]
  402f04:	ldp	x19, x20, [sp, #48]
  402f08:	ldp	x21, x22, [sp, #64]
  402f0c:	ldp	x23, x24, [sp, #80]
  402f10:	ldp	x25, x26, [sp, #96]
  402f14:	ldp	x27, x28, [sp, #112]
  402f18:	add	sp, sp, #0x80
  402f1c:	ret
  402f20:	cmp	w0, #0x65
  402f24:	b.eq	40301c <wcrtomb@plt+0x2dc>  // b.none
  402f28:	b.le	402fac <wcrtomb@plt+0x26c>
  402f2c:	cmp	w0, #0x69
  402f30:	b.eq	4031a8 <wcrtomb@plt+0x468>  // b.none
  402f34:	b.le	402f8c <wcrtomb@plt+0x24c>
  402f38:	cmp	w0, #0x6c
  402f3c:	b.ne	403014 <wcrtomb@plt+0x2d4>  // b.any
  402f40:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  402f44:	mov	w2, #0xa                   	// #10
  402f48:	mov	x1, #0x0                   	// #0
  402f4c:	ldr	x0, [x0, #1272]
  402f50:	bl	402ad0 <strtol@plt>
  402f54:	sxtw	x0, w0
  402f58:	str	x0, [x25]
  402f5c:	b	402e48 <wcrtomb@plt+0x108>
  402f60:	cmp	w0, #0x7a
  402f64:	b.ne	403014 <wcrtomb@plt+0x2d4>  // b.any
  402f68:	strb	wzr, [x25, #8]
  402f6c:	b	402e48 <wcrtomb@plt+0x108>
  402f70:	cmp	w0, #0x73
  402f74:	b.eq	403044 <wcrtomb@plt+0x304>  // b.none
  402f78:	b.le	402fd4 <wcrtomb@plt+0x294>
  402f7c:	cmp	w0, #0x75
  402f80:	b.ne	403014 <wcrtomb@plt+0x2d4>  // b.any
  402f84:	strb	w24, [x23, #46]
  402f88:	b	402e48 <wcrtomb@plt+0x108>
  402f8c:	cmp	w0, #0x66
  402f90:	b.ne	402fe8 <wcrtomb@plt+0x2a8>  // b.any
  402f94:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  402f98:	ldr	x0, [x23, #16]
  402f9c:	ldr	x1, [x1, #1272]
  402fa0:	bl	405688 <wcrtomb@plt+0x2948>
  402fa4:	str	x0, [x23, #16]
  402fa8:	b	402e48 <wcrtomb@plt+0x108>
  402fac:	cmp	w0, #0x46
  402fb0:	b.eq	40304c <wcrtomb@plt+0x30c>  // b.none
  402fb4:	cmp	w0, #0x62
  402fb8:	b.ne	402ff8 <wcrtomb@plt+0x2b8>  // b.any
  402fbc:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  402fc0:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xd3b0>
  402fc4:	add	x1, x1, #0xe88
  402fc8:	add	x0, x0, #0xe90
  402fcc:	stp	x1, x0, [x25, #16]
  402fd0:	b	402e48 <wcrtomb@plt+0x108>
  402fd4:	cmp	w0, #0x70
  402fd8:	b.ne	40300c <wcrtomb@plt+0x2cc>  // b.any
  402fdc:	mov	w0, #0x2                   	// #2
  402fe0:	str	w0, [x26, #2264]
  402fe4:	b	402e48 <wcrtomb@plt+0x108>
  402fe8:	cmp	w0, #0x68
  402fec:	b.ne	403014 <wcrtomb@plt+0x2d4>  // b.any
  402ff0:	mov	w0, #0x0                   	// #0
  402ff4:	bl	409988 <wcrtomb@plt+0x6c48>
  402ff8:	cmp	w0, #0x45
  402ffc:	b.ne	403014 <wcrtomb@plt+0x2d4>  // b.any
  403000:	mov	w0, #0x1                   	// #1
  403004:	str	w0, [x23, #40]
  403008:	b	402e48 <wcrtomb@plt+0x108>
  40300c:	cmp	w0, #0x72
  403010:	b.eq	403000 <wcrtomb@plt+0x2c0>  // b.none
  403014:	mov	w0, #0x1                   	// #1
  403018:	bl	409988 <wcrtomb@plt+0x6c48>
  40301c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  403020:	ldr	x27, [x0, #1272]
  403024:	mov	x0, x27
  403028:	bl	402690 <strlen@plt>
  40302c:	mov	x2, x0
  403030:	mov	x1, x27
  403034:	ldr	x0, [x23, #16]
  403038:	bl	405630 <wcrtomb@plt+0x28f0>
  40303c:	str	x0, [x23, #16]
  403040:	b	402e48 <wcrtomb@plt+0x108>
  403044:	strb	w24, [x23, #25]
  403048:	b	402e48 <wcrtomb@plt+0x108>
  40304c:	strb	w24, [x23, #24]
  403050:	b	402e48 <wcrtomb@plt+0x108>
  403054:	strb	w24, [x23, #8]
  403058:	b	402e48 <wcrtomb@plt+0x108>
  40305c:	strb	w24, [x23, #44]
  403060:	b	402e48 <wcrtomb@plt+0x108>
  403064:	adrp	x19, 438000 <_obstack_memory_used@@Base+0x253b0>
  403068:	adrp	x2, 438000 <_obstack_memory_used@@Base+0x253b0>
  40306c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  403070:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  403074:	ldr	x26, [x2, #1936]
  403078:	add	x1, x1, #0xe98
  40307c:	ldr	x27, [x0, #1144]
  403080:	mov	w2, #0x5                   	// #5
  403084:	ldr	x25, [x19, #1288]
  403088:	mov	x0, #0x0                   	// #0
  40308c:	bl	402c20 <dcgettext@plt>
  403090:	mov	x20, x0
  403094:	mov	w2, #0x5                   	// #5
  403098:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  40309c:	mov	x0, #0x0                   	// #0
  4030a0:	add	x1, x1, #0xea8
  4030a4:	bl	402c20 <dcgettext@plt>
  4030a8:	mov	x21, x0
  4030ac:	mov	w2, #0x5                   	// #5
  4030b0:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  4030b4:	mov	x0, #0x0                   	// #0
  4030b8:	add	x1, x1, #0xeb8
  4030bc:	bl	402c20 <dcgettext@plt>
  4030c0:	mov	x22, x0
  4030c4:	mov	w2, #0x5                   	// #5
  4030c8:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  4030cc:	mov	x0, #0x0                   	// #0
  4030d0:	add	x1, x1, #0xec8
  4030d4:	bl	402c20 <dcgettext@plt>
  4030d8:	mov	x23, x0
  4030dc:	mov	w2, #0x5                   	// #5
  4030e0:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  4030e4:	mov	x0, #0x0                   	// #0
  4030e8:	add	x1, x1, #0xed8
  4030ec:	bl	402c20 <dcgettext@plt>
  4030f0:	mov	x24, x0
  4030f4:	mov	w2, #0x5                   	// #5
  4030f8:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  4030fc:	mov	x0, #0x0                   	// #0
  403100:	add	x1, x1, #0xee8
  403104:	bl	402c20 <dcgettext@plt>
  403108:	stp	x24, x0, [sp]
  40310c:	mov	x1, x26
  403110:	str	xzr, [sp, #16]
  403114:	mov	x0, x25
  403118:	mov	x7, x23
  40311c:	mov	x6, x22
  403120:	mov	x5, x21
  403124:	mov	x4, x20
  403128:	mov	x3, x27
  40312c:	adrp	x2, 420000 <_obstack_memory_used@@Base+0xd3b0>
  403130:	add	x2, x2, #0xef8
  403134:	bl	412498 <wcrtomb@plt+0xf758>
  403138:	ldr	x0, [x19, #1288]
  40313c:	ldp	x1, x2, [x0, #40]
  403140:	cmp	x1, x2
  403144:	b.cs	403264 <wcrtomb@plt+0x524>  // b.hs, b.nlast
  403148:	add	x2, x1, #0x1
  40314c:	str	x2, [x0, #40]
  403150:	mov	w0, #0xa                   	// #10
  403154:	strb	w0, [x1]
  403158:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  40315c:	add	x1, x1, #0xf00
  403160:	mov	w2, #0x5                   	// #5
  403164:	mov	x0, #0x0                   	// #0
  403168:	bl	402c20 <dcgettext@plt>
  40316c:	bl	402a40 <puts@plt>
  403170:	ldr	x0, [x19, #1288]
  403174:	ldp	x1, x2, [x0, #40]
  403178:	cmp	x1, x2
  40317c:	b.cs	403258 <wcrtomb@plt+0x518>  // b.hs, b.nlast
  403180:	add	x2, x1, #0x1
  403184:	str	x2, [x0, #40]
  403188:	mov	w0, #0xa                   	// #10
  40318c:	strb	w0, [x1]
  403190:	mov	w0, #0x0                   	// #0
  403194:	bl	4098e0 <wcrtomb@plt+0x6ba0>
  403198:	mov	x0, #0x0                   	// #0
  40319c:	bl	40a408 <wcrtomb@plt+0x76c8>
  4031a0:	mov	w0, #0x0                   	// #0
  4031a4:	bl	4026c0 <exit@plt>
  4031a8:	adrp	x28, 438000 <_obstack_memory_used@@Base+0x253b0>
  4031ac:	strb	w24, [x23, #25]
  4031b0:	ldr	x27, [x28, #1272]
  4031b4:	cbz	x27, 403244 <wcrtomb@plt+0x504>
  4031b8:	mov	x0, x27
  4031bc:	mov	w1, #0x2a                  	// #42
  4031c0:	bl	402b20 <strchr@plt>
  4031c4:	cbz	x0, 4031d8 <wcrtomb@plt+0x498>
  4031c8:	mov	x0, x27
  4031cc:	bl	412800 <wcrtomb@plt+0xfac0>
  4031d0:	str	x0, [x23, #32]
  4031d4:	b	402e48 <wcrtomb@plt+0x108>
  4031d8:	mov	x0, x27
  4031dc:	bl	402690 <strlen@plt>
  4031e0:	add	x0, x0, #0x2
  4031e4:	bl	4127c8 <wcrtomb@plt+0xfa88>
  4031e8:	ldr	x1, [x28, #1272]
  4031ec:	mov	w2, #0x2a                  	// #42
  4031f0:	str	x0, [x23, #32]
  4031f4:	strb	w2, [x0], #1
  4031f8:	bl	402b80 <strcpy@plt>
  4031fc:	b	402e48 <wcrtomb@plt+0x108>
  403200:	ldr	w0, [x22, #1280]
  403204:	cmp	w0, w20
  403208:	b.ge	403014 <wcrtomb@plt+0x2d4>  // b.tcont
  40320c:	ldr	x20, [x19, w0, sxtw #3]
  403210:	add	w0, w0, #0x1
  403214:	str	w0, [x22, #1280]
  403218:	mov	x0, x20
  40321c:	bl	402690 <strlen@plt>
  403220:	mov	x1, x20
  403224:	mov	x2, x0
  403228:	mov	x0, #0x0                   	// #0
  40322c:	bl	405630 <wcrtomb@plt+0x28f0>
  403230:	str	x0, [x21, #16]
  403234:	b	402ec8 <wcrtomb@plt+0x188>
  403238:	ldr	x0, [x21, #16]
  40323c:	bl	4068d0 <wcrtomb@plt+0x3b90>
  403240:	b	402ed8 <wcrtomb@plt+0x198>
  403244:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xd3b0>
  403248:	add	x0, x0, #0xe80
  40324c:	bl	412800 <wcrtomb@plt+0xfac0>
  403250:	str	x0, [x23, #32]
  403254:	b	402e48 <wcrtomb@plt+0x108>
  403258:	mov	w1, #0xa                   	// #10
  40325c:	bl	402a20 <__overflow@plt>
  403260:	b	403190 <wcrtomb@plt+0x450>
  403264:	mov	w1, #0xa                   	// #10
  403268:	bl	402a20 <__overflow@plt>
  40326c:	b	403158 <wcrtomb@plt+0x418>
  403270:	mov	x29, #0x0                   	// #0
  403274:	mov	x30, #0x0                   	// #0
  403278:	mov	x5, x0
  40327c:	ldr	x1, [sp]
  403280:	add	x2, sp, #0x8
  403284:	mov	x6, sp
  403288:	movz	x0, #0x0, lsl #48
  40328c:	movk	x0, #0x0, lsl #32
  403290:	movk	x0, #0x40, lsl #16
  403294:	movk	x0, #0x2d50
  403298:	movz	x3, #0x0, lsl #48
  40329c:	movk	x3, #0x0, lsl #32
  4032a0:	movk	x3, #0x41, lsl #16
  4032a4:	movk	x3, #0xfb90
  4032a8:	movz	x4, #0x0, lsl #48
  4032ac:	movk	x4, #0x0, lsl #32
  4032b0:	movk	x4, #0x41, lsl #16
  4032b4:	movk	x4, #0xfc10
  4032b8:	bl	402890 <__libc_start_main@plt>
  4032bc:	bl	4029e0 <abort@plt>
  4032c0:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x243b0>
  4032c4:	ldr	x0, [x0, #4064]
  4032c8:	cbz	x0, 4032d0 <wcrtomb@plt+0x590>
  4032cc:	b	4029c0 <__gmon_start__@plt>
  4032d0:	ret
  4032d4:	nop
  4032d8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  4032dc:	add	x0, x0, #0x4e8
  4032e0:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  4032e4:	add	x1, x1, #0x4e8
  4032e8:	cmp	x1, x0
  4032ec:	b.eq	403304 <wcrtomb@plt+0x5c4>  // b.none
  4032f0:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  4032f4:	ldr	x1, [x1, #3136]
  4032f8:	cbz	x1, 403304 <wcrtomb@plt+0x5c4>
  4032fc:	mov	x16, x1
  403300:	br	x16
  403304:	ret
  403308:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  40330c:	add	x0, x0, #0x4e8
  403310:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  403314:	add	x1, x1, #0x4e8
  403318:	sub	x1, x1, x0
  40331c:	lsr	x2, x1, #63
  403320:	add	x1, x2, x1, asr #3
  403324:	cmp	xzr, x1, asr #1
  403328:	asr	x1, x1, #1
  40332c:	b.eq	403344 <wcrtomb@plt+0x604>  // b.none
  403330:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  403334:	ldr	x2, [x2, #3144]
  403338:	cbz	x2, 403344 <wcrtomb@plt+0x604>
  40333c:	mov	x16, x2
  403340:	br	x16
  403344:	ret
  403348:	stp	x29, x30, [sp, #-32]!
  40334c:	mov	x29, sp
  403350:	str	x19, [sp, #16]
  403354:	adrp	x19, 438000 <_obstack_memory_used@@Base+0x253b0>
  403358:	ldrb	w0, [x19, #1312]
  40335c:	cbnz	w0, 40336c <wcrtomb@plt+0x62c>
  403360:	bl	4032d8 <wcrtomb@plt+0x598>
  403364:	mov	w0, #0x1                   	// #1
  403368:	strb	w0, [x19, #1312]
  40336c:	ldr	x19, [sp, #16]
  403370:	ldp	x29, x30, [sp], #32
  403374:	ret
  403378:	b	403308 <wcrtomb@plt+0x5c8>
  40337c:	nop
  403380:	stp	x29, x30, [sp, #-48]!
  403384:	mov	x29, sp
  403388:	stp	x19, x20, [sp, #16]
  40338c:	adrp	x19, 438000 <_obstack_memory_used@@Base+0x253b0>
  403390:	add	x19, x19, #0x528
  403394:	stp	x21, x22, [sp, #32]
  403398:	mov	x22, x0
  40339c:	mov	x21, x1
  4033a0:	ldp	x3, x6, [x19, #24]
  4033a4:	mov	w20, w2
  4033a8:	sub	x0, x6, x3
  4033ac:	cmp	x0, #0x1f
  4033b0:	b.ls	403410 <wcrtomb@plt+0x6d0>  // b.plast
  4033b4:	ldr	x0, [x19, #16]
  4033b8:	add	x3, x3, #0x20
  4033bc:	cmp	x3, x0
  4033c0:	b.eq	403430 <wcrtomb@plt+0x6f0>  // b.none
  4033c4:	ldr	x4, [x19, #48]
  4033c8:	ldr	x5, [x19, #8]
  4033cc:	add	x3, x3, x4
  4033d0:	bic	x3, x3, x4
  4033d4:	str	x3, [x19, #24]
  4033d8:	sub	x1, x3, x5
  4033dc:	sub	x5, x6, x5
  4033e0:	cmp	x1, x5
  4033e4:	b.ls	4033f0 <wcrtomb@plt+0x6b0>  // b.plast
  4033e8:	mov	x3, x6
  4033ec:	str	x6, [x19, #24]
  4033f0:	str	x3, [x19, #16]
  4033f4:	mov	w1, #0xffffffff            	// #-1
  4033f8:	stp	x22, x21, [x0]
  4033fc:	stp	w1, w20, [x0, #16]
  403400:	ldp	x19, x20, [sp, #16]
  403404:	ldp	x21, x22, [sp, #32]
  403408:	ldp	x29, x30, [sp], #48
  40340c:	ret
  403410:	mov	x0, x19
  403414:	mov	x1, #0x20                  	// #32
  403418:	bl	412a70 <_obstack_newchunk@@Base>
  40341c:	ldp	x3, x6, [x19, #24]
  403420:	ldr	x0, [x19, #16]
  403424:	add	x3, x3, #0x20
  403428:	cmp	x3, x0
  40342c:	b.ne	4033c4 <wcrtomb@plt+0x684>  // b.any
  403430:	ldrb	w1, [x19, #80]
  403434:	orr	w1, w1, #0x2
  403438:	strb	w1, [x19, #80]
  40343c:	b	4033c4 <wcrtomb@plt+0x684>
  403440:	stp	x29, x30, [sp, #-64]!
  403444:	mov	x29, sp
  403448:	stp	x19, x20, [sp, #16]
  40344c:	adrp	x19, 438000 <_obstack_memory_used@@Base+0x253b0>
  403450:	add	x19, x19, #0x528
  403454:	stp	x21, x22, [sp, #32]
  403458:	mov	x21, x0
  40345c:	mov	x22, x2
  403460:	ldp	x4, x6, [x19, #24]
  403464:	str	x23, [sp, #48]
  403468:	mov	x20, x3
  40346c:	mov	x23, x1
  403470:	sub	x0, x6, x4
  403474:	cmp	x0, #0x2f
  403478:	b.ls	4034ec <wcrtomb@plt+0x7ac>  // b.plast
  40347c:	ldr	x0, [x19, #16]
  403480:	add	x4, x4, #0x30
  403484:	cmp	x4, x0
  403488:	b.eq	40350c <wcrtomb@plt+0x7cc>  // b.none
  40348c:	ldr	x5, [x19, #48]
  403490:	ldr	x3, [x19, #8]
  403494:	add	x4, x4, x5
  403498:	bic	x4, x4, x5
  40349c:	str	x4, [x19, #24]
  4034a0:	sub	x1, x4, x3
  4034a4:	sub	x3, x6, x3
  4034a8:	cmp	x1, x3
  4034ac:	b.ls	4034b8 <wcrtomb@plt+0x778>  // b.plast
  4034b0:	mov	x4, x6
  4034b4:	str	x6, [x19, #24]
  4034b8:	str	x4, [x19, #16]
  4034bc:	stp	x23, x22, [x0]
  4034c0:	cbz	x20, 4034d4 <wcrtomb@plt+0x794>
  4034c4:	ldp	x2, x3, [x20]
  4034c8:	stp	x2, x3, [x0, #16]
  4034cc:	ldr	x1, [x20, #16]
  4034d0:	str	x1, [x0, #32]
  4034d4:	ldp	x19, x20, [sp, #16]
  4034d8:	ldr	x23, [sp, #48]
  4034dc:	str	x21, [x0, #40]
  4034e0:	ldp	x21, x22, [sp, #32]
  4034e4:	ldp	x29, x30, [sp], #64
  4034e8:	ret
  4034ec:	mov	x0, x19
  4034f0:	mov	x1, #0x30                  	// #48
  4034f4:	bl	412a70 <_obstack_newchunk@@Base>
  4034f8:	ldp	x4, x6, [x19, #24]
  4034fc:	ldr	x0, [x19, #16]
  403500:	add	x4, x4, #0x30
  403504:	cmp	x4, x0
  403508:	b.ne	40348c <wcrtomb@plt+0x74c>  // b.any
  40350c:	ldrb	w1, [x19, #80]
  403510:	orr	w1, w1, #0x2
  403514:	strb	w1, [x19, #80]
  403518:	b	40348c <wcrtomb@plt+0x74c>
  40351c:	nop
  403520:	stp	x29, x30, [sp, #-32]!
  403524:	mov	x29, sp
  403528:	str	x19, [sp, #16]
  40352c:	adrp	x19, 438000 <_obstack_memory_used@@Base+0x253b0>
  403530:	add	x19, x19, #0x528
  403534:	add	x1, x19, #0x58
  403538:	ldr	x0, [x1, #8]
  40353c:	cbz	x0, 40356c <wcrtomb@plt+0x82c>
  403540:	ldr	x2, [x1, #16]
  403544:	cmp	x0, x2
  403548:	b.cs	4035bc <wcrtomb@plt+0x87c>  // b.hs, b.nlast
  40354c:	add	x2, x0, #0x1
  403550:	ldrb	w0, [x0]
  403554:	str	x2, [x1, #8]
  403558:	cmp	w0, #0xa
  40355c:	b.eq	40359c <wcrtomb@plt+0x85c>  // b.none
  403560:	ldr	x19, [sp, #16]
  403564:	ldp	x29, x30, [sp], #32
  403568:	ret
  40356c:	ldr	x0, [x1, #24]
  403570:	cbz	x0, 4035bc <wcrtomb@plt+0x87c>
  403574:	ldr	w1, [x0]
  403578:	tbnz	w1, #4, 4035bc <wcrtomb@plt+0x87c>
  40357c:	ldp	x1, x2, [x0, #8]
  403580:	cmp	x1, x2
  403584:	b.cs	4035b4 <wcrtomb@plt+0x874>  // b.hs, b.nlast
  403588:	add	x2, x1, #0x1
  40358c:	str	x2, [x0, #8]
  403590:	ldrb	w0, [x1]
  403594:	cmp	w0, #0xa
  403598:	b.ne	403560 <wcrtomb@plt+0x820>  // b.any
  40359c:	ldr	x1, [x19, #128]
  4035a0:	add	x1, x1, #0x1
  4035a4:	str	x1, [x19, #128]
  4035a8:	ldr	x19, [sp, #16]
  4035ac:	ldp	x29, x30, [sp], #32
  4035b0:	ret
  4035b4:	bl	402d00 <__uflow@plt>
  4035b8:	b	403558 <wcrtomb@plt+0x818>
  4035bc:	mov	w0, #0xffffffff            	// #-1
  4035c0:	b	403560 <wcrtomb@plt+0x820>
  4035c4:	nop
  4035c8:	stp	x29, x30, [sp, #-32]!
  4035cc:	mov	x29, sp
  4035d0:	str	x19, [sp, #16]
  4035d4:	bl	402ab0 <__ctype_b_loc@plt>
  4035d8:	mov	x19, x0
  4035dc:	nop
  4035e0:	bl	403520 <wcrtomb@plt+0x7e0>
  4035e4:	ldr	x1, [x19]
  4035e8:	ldrh	w1, [x1, w0, sxtw #1]
  4035ec:	tbnz	w1, #0, 4035e0 <wcrtomb@plt+0x8a0>
  4035f0:	ldr	x19, [sp, #16]
  4035f4:	ldp	x29, x30, [sp], #32
  4035f8:	ret
  4035fc:	nop
  403600:	cmn	w0, #0x1
  403604:	b.eq	403644 <wcrtomb@plt+0x904>  // b.none
  403608:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  40360c:	cmp	w0, #0xa
  403610:	add	x1, x1, #0x528
  403614:	b.eq	403648 <wcrtomb@plt+0x908>  // b.none
  403618:	ldr	x2, [x1, #96]
  40361c:	add	x3, x1, #0x58
  403620:	cbz	x2, 403664 <wcrtomb@plt+0x924>
  403624:	ldr	x1, [x1, #88]
  403628:	cmp	x2, x1
  40362c:	b.ls	40366c <wcrtomb@plt+0x92c>  // b.plast
  403630:	ldurb	w1, [x2, #-1]
  403634:	sub	x4, x2, #0x1
  403638:	str	x4, [x3, #8]
  40363c:	cmp	w1, w0
  403640:	b.ne	40366c <wcrtomb@plt+0x92c>  // b.any
  403644:	ret
  403648:	ldr	x2, [x1, #128]
  40364c:	cbz	x2, 403618 <wcrtomb@plt+0x8d8>
  403650:	add	x3, x1, #0x58
  403654:	sub	x2, x2, #0x1
  403658:	str	x2, [x1, #128]
  40365c:	ldr	x2, [x3, #8]
  403660:	cbnz	x2, 403624 <wcrtomb@plt+0x8e4>
  403664:	ldr	x1, [x3, #24]
  403668:	b	402af0 <ungetc@plt>
  40366c:	stp	x29, x30, [sp, #-16]!
  403670:	mov	w1, w0
  403674:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  403678:	mov	x29, sp
  40367c:	add	x0, x0, #0xc50
  403680:	bl	409df0 <wcrtomb@plt+0x70b0>
  403684:	nop
  403688:	stp	x29, x30, [sp, #-48]!
  40368c:	mov	x29, sp
  403690:	stp	x19, x20, [sp, #16]
  403694:	bl	40a788 <wcrtomb@plt+0x7a48>
  403698:	mov	x20, x0
  40369c:	bl	4035c8 <wcrtomb@plt+0x888>
  4036a0:	cmp	w0, #0xa
  4036a4:	mov	w19, w0
  4036a8:	ccmn	w0, #0x1, #0x4, ne  // ne = any
  4036ac:	b.eq	403708 <wcrtomb@plt+0x9c8>  // b.none
  4036b0:	stp	x21, x22, [sp, #32]
  4036b4:	bl	402ab0 <__ctype_b_loc@plt>
  4036b8:	mov	w22, #0x7d                  	// #125
  4036bc:	mov	x21, x0
  4036c0:	b	4036f0 <wcrtomb@plt+0x9b0>
  4036c4:	cmp	w19, #0x3b
  4036c8:	ccmp	w19, w22, #0x4, ne  // ne = any
  4036cc:	b.eq	403704 <wcrtomb@plt+0x9c4>  // b.none
  4036d0:	cmp	w19, #0x23
  4036d4:	b.eq	403704 <wcrtomb@plt+0x9c4>  // b.none
  4036d8:	bl	40a858 <wcrtomb@plt+0x7b18>
  4036dc:	bl	403520 <wcrtomb@plt+0x7e0>
  4036e0:	cmp	w0, #0xa
  4036e4:	mov	w19, w0
  4036e8:	ccmn	w0, #0x1, #0x4, ne  // ne = any
  4036ec:	b.eq	403704 <wcrtomb@plt+0x9c4>  // b.none
  4036f0:	ldr	x2, [x21]
  4036f4:	mov	w1, w19
  4036f8:	mov	x0, x20
  4036fc:	ldrh	w2, [x2, w19, sxtw #1]
  403700:	tbz	w2, #0, 4036c4 <wcrtomb@plt+0x984>
  403704:	ldp	x21, x22, [sp, #32]
  403708:	mov	w0, w19
  40370c:	bl	403600 <wcrtomb@plt+0x8c0>
  403710:	mov	w1, #0x0                   	// #0
  403714:	mov	x0, x20
  403718:	bl	40a858 <wcrtomb@plt+0x7b18>
  40371c:	mov	x0, x20
  403720:	bl	40a7d0 <wcrtomb@plt+0x7a90>
  403724:	bl	412800 <wcrtomb@plt+0xfac0>
  403728:	mov	x19, x0
  40372c:	mov	x0, x20
  403730:	bl	40a8d8 <wcrtomb@plt+0x7b98>
  403734:	mov	x0, x19
  403738:	ldp	x19, x20, [sp, #16]
  40373c:	ldp	x29, x30, [sp], #48
  403740:	ret
  403744:	nop
  403748:	stp	x29, x30, [sp, #-48]!
  40374c:	mov	x29, sp
  403750:	stp	x19, x20, [sp, #16]
  403754:	mov	w19, w0
  403758:	mov	x20, #0x0                   	// #0
  40375c:	str	x21, [sp, #32]
  403760:	bl	402ab0 <__ctype_b_loc@plt>
  403764:	mov	x21, x0
  403768:	b	403778 <wcrtomb@plt+0xa38>
  40376c:	sub	x20, x1, #0x30
  403770:	bl	403520 <wcrtomb@plt+0x7e0>
  403774:	mov	w19, w0
  403778:	ldr	x3, [x21]
  40377c:	ubfiz	x2, x19, #1, #8
  403780:	add	x1, x20, x20, lsl #2
  403784:	sxtw	x4, w19
  403788:	ldrh	w2, [x3, x2]
  40378c:	add	x1, x4, x1, lsl #1
  403790:	tbnz	w2, #11, 40376c <wcrtomb@plt+0xa2c>
  403794:	mov	w0, w19
  403798:	bl	403600 <wcrtomb@plt+0x8c0>
  40379c:	mov	x0, x20
  4037a0:	ldp	x19, x20, [sp, #16]
  4037a4:	ldr	x21, [sp, #32]
  4037a8:	ldp	x29, x30, [sp], #48
  4037ac:	ret
  4037b0:	stp	x29, x30, [sp, #-48]!
  4037b4:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  4037b8:	mov	x29, sp
  4037bc:	stp	x19, x20, [sp, #16]
  4037c0:	adrp	x19, 438000 <_obstack_memory_used@@Base+0x253b0>
  4037c4:	add	x19, x19, #0x528
  4037c8:	mov	x20, x0
  4037cc:	stp	x21, x22, [sp, #32]
  4037d0:	add	x22, x19, #0x78
  4037d4:	ldr	x0, [x19, #120]
  4037d8:	ldr	x21, [x1, #1264]
  4037dc:	cbz	x0, 403820 <wcrtomb@plt+0xae0>
  4037e0:	mov	w2, #0x5                   	// #5
  4037e4:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  4037e8:	mov	x0, #0x0                   	// #0
  4037ec:	add	x1, x1, #0xc80
  4037f0:	bl	402c20 <dcgettext@plt>
  4037f4:	mov	x2, x0
  4037f8:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  4037fc:	mov	x6, x20
  403800:	ldr	x5, [x22, #8]
  403804:	mov	x0, x21
  403808:	ldr	x3, [x1, #1936]
  40380c:	mov	w1, #0x1                   	// #1
  403810:	ldr	x4, [x19, #120]
  403814:	bl	402a90 <__fprintf_chk@plt>
  403818:	mov	w0, #0x1                   	// #1
  40381c:	bl	4026c0 <exit@plt>
  403820:	mov	w2, #0x5                   	// #5
  403824:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  403828:	mov	x0, #0x0                   	// #0
  40382c:	add	x1, x1, #0xca0
  403830:	bl	402c20 <dcgettext@plt>
  403834:	mov	x2, x0
  403838:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  40383c:	mov	x6, x20
  403840:	ldp	x5, x7, [x19, #88]
  403844:	mov	x0, x21
  403848:	ldr	x3, [x1, #1936]
  40384c:	mov	w1, #0x1                   	// #1
  403850:	ldr	x4, [x22, #16]
  403854:	sub	x5, x7, x5
  403858:	bl	402a90 <__fprintf_chk@plt>
  40385c:	b	403818 <wcrtomb@plt+0xad8>
  403860:	stp	x29, x30, [sp, #-32]!
  403864:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  403868:	mov	x29, sp
  40386c:	ldrb	w0, [x0, #1900]
  403870:	str	x19, [sp, #16]
  403874:	cbnz	w0, 4038d0 <wcrtomb@plt+0xb90>
  403878:	bl	40a788 <wcrtomb@plt+0x7a48>
  40387c:	mov	x19, x0
  403880:	bl	4035c8 <wcrtomb@plt+0x888>
  403884:	cmp	w0, #0xa
  403888:	mov	w1, w0
  40388c:	ccmn	w0, #0x1, #0x4, ne  // ne = any
  403890:	b.eq	4038b4 <wcrtomb@plt+0xb74>  // b.none
  403894:	nop
  403898:	mov	x0, x19
  40389c:	bl	40a858 <wcrtomb@plt+0x7b18>
  4038a0:	bl	403520 <wcrtomb@plt+0x7e0>
  4038a4:	cmp	w0, #0xa
  4038a8:	mov	w1, w0
  4038ac:	ccmn	w0, #0x1, #0x4, ne  // ne = any
  4038b0:	b.ne	403898 <wcrtomb@plt+0xb58>  // b.any
  4038b4:	mov	x0, x19
  4038b8:	mov	w1, #0x0                   	// #0
  4038bc:	bl	40a858 <wcrtomb@plt+0x7b18>
  4038c0:	mov	x0, x19
  4038c4:	ldr	x19, [sp, #16]
  4038c8:	ldp	x29, x30, [sp], #32
  4038cc:	ret
  4038d0:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  4038d4:	add	x1, x1, #0xe38
  4038d8:	add	x1, x1, #0x334
  4038dc:	mov	w2, #0x5                   	// #5
  4038e0:	mov	x0, #0x0                   	// #0
  4038e4:	bl	402c20 <dcgettext@plt>
  4038e8:	bl	4037b0 <wcrtomb@plt+0xa70>
  4038ec:	nop
  4038f0:	stp	x29, x30, [sp, #-80]!
  4038f4:	mov	x29, sp
  4038f8:	stp	x19, x20, [sp, #16]
  4038fc:	stp	x21, x22, [sp, #32]
  403900:	mov	x22, x0
  403904:	stp	x23, x24, [sp, #48]
  403908:	mov	x24, x1
  40390c:	stp	x25, x26, [sp, #64]
  403910:	mov	w25, w2
  403914:	bl	403860 <wcrtomb@plt+0xb20>
  403918:	mov	x23, x0
  40391c:	bl	40a7d0 <wcrtomb@plt+0x7a90>
  403920:	mov	x20, x0
  403924:	ldrb	w0, [x0]
  403928:	cbz	w0, 403af8 <wcrtomb@plt+0xdb8>
  40392c:	ldr	x19, [x22]
  403930:	cbnz	x19, 403940 <wcrtomb@plt+0xc00>
  403934:	b	403980 <wcrtomb@plt+0xc40>
  403938:	ldr	x19, [x19, #24]
  40393c:	cbz	x19, 403980 <wcrtomb@plt+0xc40>
  403940:	ldr	x0, [x19]
  403944:	mov	x1, x20
  403948:	bl	402aa0 <strcmp@plt>
  40394c:	cbnz	w0, 403938 <wcrtomb@plt+0xbf8>
  403950:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  403954:	ldr	w0, [x0, #2264]
  403958:	cbz	w0, 403a9c <wcrtomb@plt+0xd5c>
  40395c:	mov	x0, x23
  403960:	bl	40a8d8 <wcrtomb@plt+0x7b98>
  403964:	mov	x0, x19
  403968:	ldp	x19, x20, [sp, #16]
  40396c:	ldp	x21, x22, [sp, #32]
  403970:	ldp	x23, x24, [sp, #48]
  403974:	ldp	x25, x26, [sp, #64]
  403978:	ldp	x29, x30, [sp], #80
  40397c:	ret
  403980:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  403984:	adrp	x26, 438000 <_obstack_memory_used@@Base+0x253b0>
  403988:	add	x26, x26, #0x528
  40398c:	ldr	w0, [x0, #2264]
  403990:	cbnz	w0, 403a20 <wcrtomb@plt+0xce0>
  403994:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x253b0>
  403998:	adrp	x26, 438000 <_obstack_memory_used@@Base+0x253b0>
  40399c:	adrp	x3, 438000 <_obstack_memory_used@@Base+0x253b0>
  4039a0:	add	x26, x26, #0x528
  4039a4:	adrp	x2, 438000 <_obstack_memory_used@@Base+0x253b0>
  4039a8:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  4039ac:	ldr	x0, [x21, #920]
  4039b0:	mov	x19, #0x0                   	// #0
  4039b4:	ldr	x3, [x3, #1296]
  4039b8:	ldr	x2, [x2, #1288]
  4039bc:	stp	x3, x2, [x26, #144]
  4039c0:	ldr	x1, [x1, #1264]
  4039c4:	str	x1, [x26, #160]
  4039c8:	cbz	x0, 403a20 <wcrtomb@plt+0xce0>
  4039cc:	add	x21, x21, #0x398
  4039d0:	b	4039dc <wcrtomb@plt+0xc9c>
  4039d4:	ldr	x0, [x21, #40]!
  4039d8:	cbz	x0, 403a1c <wcrtomb@plt+0xcdc>
  4039dc:	mov	x1, x20
  4039e0:	bl	402aa0 <strcmp@plt>
  4039e4:	cbnz	w0, 4039d4 <wcrtomb@plt+0xc94>
  4039e8:	ldr	x1, [x21, #32]
  4039ec:	mov	x0, x23
  4039f0:	mov	x19, x21
  4039f4:	ldr	x1, [x1]
  4039f8:	str	x1, [x21, #16]
  4039fc:	bl	40a8d8 <wcrtomb@plt+0x7b98>
  403a00:	mov	x0, x19
  403a04:	ldp	x19, x20, [sp, #16]
  403a08:	ldp	x21, x22, [sp, #32]
  403a0c:	ldp	x23, x24, [sp, #48]
  403a10:	ldp	x25, x26, [sp, #64]
  403a14:	ldp	x29, x30, [sp], #80
  403a18:	ret
  403a1c:	cbnz	x19, 40395c <wcrtomb@plt+0xc1c>
  403a20:	ldp	x0, x3, [x26, #24]
  403a24:	sub	x1, x3, x0
  403a28:	cmp	x1, #0x1f
  403a2c:	b.ls	403ad4 <wcrtomb@plt+0xd94>  // b.plast
  403a30:	ldr	x19, [x26, #16]
  403a34:	add	x0, x0, #0x20
  403a38:	cmp	x0, x19
  403a3c:	b.eq	403ae8 <wcrtomb@plt+0xda8>  // b.none
  403a40:	ldr	x1, [x26, #48]
  403a44:	ldr	x2, [x26, #8]
  403a48:	add	x0, x0, x1
  403a4c:	bic	x1, x0, x1
  403a50:	str	x1, [x26, #24]
  403a54:	sub	x0, x1, x2
  403a58:	sub	x2, x3, x2
  403a5c:	cmp	x0, x2
  403a60:	b.ls	403a6c <wcrtomb@plt+0xd2c>  // b.plast
  403a64:	mov	x1, x3
  403a68:	str	x3, [x26, #24]
  403a6c:	mov	x0, x20
  403a70:	str	x1, [x26, #16]
  403a74:	bl	412800 <wcrtomb@plt+0xfac0>
  403a78:	str	x0, [x19]
  403a7c:	mov	x1, x24
  403a80:	mov	w2, w25
  403a84:	bl	409f78 <wcrtomb@plt+0x7238>
  403a88:	ldr	x1, [x22]
  403a8c:	strb	wzr, [x19, #8]
  403a90:	stp	x0, x1, [x19, #16]
  403a94:	str	x19, [x22]
  403a98:	b	40395c <wcrtomb@plt+0xc1c>
  403a9c:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x253b0>
  403aa0:	adrp	x26, 438000 <_obstack_memory_used@@Base+0x253b0>
  403aa4:	adrp	x3, 438000 <_obstack_memory_used@@Base+0x253b0>
  403aa8:	add	x26, x26, #0x528
  403aac:	adrp	x2, 438000 <_obstack_memory_used@@Base+0x253b0>
  403ab0:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  403ab4:	ldr	x0, [x21, #920]
  403ab8:	ldr	x3, [x3, #1296]
  403abc:	ldr	x2, [x2, #1288]
  403ac0:	stp	x3, x2, [x26, #144]
  403ac4:	ldr	x1, [x1, #1264]
  403ac8:	str	x1, [x26, #160]
  403acc:	cbnz	x0, 4039cc <wcrtomb@plt+0xc8c>
  403ad0:	b	40395c <wcrtomb@plt+0xc1c>
  403ad4:	mov	x0, x26
  403ad8:	mov	x1, #0x20                  	// #32
  403adc:	bl	412a70 <_obstack_newchunk@@Base>
  403ae0:	ldp	x0, x3, [x26, #24]
  403ae4:	b	403a30 <wcrtomb@plt+0xcf0>
  403ae8:	ldrb	w1, [x26, #80]
  403aec:	orr	w1, w1, #0x2
  403af0:	strb	w1, [x26, #80]
  403af4:	b	403a40 <wcrtomb@plt+0xd00>
  403af8:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  403afc:	add	x1, x1, #0xe38
  403b00:	add	x1, x1, #0x35c
  403b04:	mov	w2, #0x5                   	// #5
  403b08:	mov	x0, #0x0                   	// #0
  403b0c:	bl	402c20 <dcgettext@plt>
  403b10:	bl	4037b0 <wcrtomb@plt+0xa70>
  403b14:	nop
  403b18:	stp	x29, x30, [sp, #-112]!
  403b1c:	mov	x29, sp
  403b20:	stp	x21, x22, [sp, #32]
  403b24:	adrp	x22, 438000 <_obstack_memory_used@@Base+0x253b0>
  403b28:	ldr	w2, [x22, #2260]
  403b2c:	stp	x19, x20, [sp, #16]
  403b30:	cmp	w2, #0x1
  403b34:	stp	x23, x24, [sp, #48]
  403b38:	mov	w24, w0
  403b3c:	stp	x25, x26, [sp, #64]
  403b40:	mov	w25, w1
  403b44:	stp	x27, x28, [sp, #80]
  403b48:	str	xzr, [sp, #104]
  403b4c:	b.eq	403b5c <wcrtomb@plt+0xe1c>  // b.none
  403b50:	add	x1, sp, #0x68
  403b54:	bl	409010 <wcrtomb@plt+0x62d0>
  403b58:	cbnz	w0, 403df0 <wcrtomb@plt+0x10b0>
  403b5c:	mov	w27, #0x1                   	// #1
  403b60:	str	xzr, [sp, #104]
  403b64:	bl	40a788 <wcrtomb@plt+0x7a48>
  403b68:	mov	x21, x0
  403b6c:	b	403b7c <wcrtomb@plt+0xe3c>
  403b70:	mov	w1, w19
  403b74:	mov	x0, x21
  403b78:	bl	40a858 <wcrtomb@plt+0x7b18>
  403b7c:	bl	403520 <wcrtomb@plt+0x7e0>
  403b80:	mov	w19, w0
  403b84:	cmn	w0, #0x1
  403b88:	b.eq	403ccc <wcrtomb@plt+0xf8c>  // b.none
  403b8c:	cmp	w0, #0xa
  403b90:	b.eq	403ddc <wcrtomb@plt+0x109c>  // b.none
  403b94:	ldr	w1, [x22, #2260]
  403b98:	add	x23, x22, #0x8d4
  403b9c:	cmp	w1, #0x1
  403ba0:	b.eq	403bb0 <wcrtomb@plt+0xe70>  // b.none
  403ba4:	add	x1, sp, #0x68
  403ba8:	bl	409010 <wcrtomb@plt+0x62d0>
  403bac:	cbnz	w0, 403b70 <wcrtomb@plt+0xe30>
  403bb0:	cmp	w24, w19
  403bb4:	b.eq	403cd8 <wcrtomb@plt+0xf98>  // b.none
  403bb8:	cmp	w19, #0x5c
  403bbc:	b.eq	403d44 <wcrtomb@plt+0x1004>  // b.none
  403bc0:	cmp	w19, #0x5b
  403bc4:	and	w0, w25, #0x1
  403bc8:	csel	w0, w0, wzr, eq  // eq = none
  403bcc:	cbz	w0, 403b70 <wcrtomb@plt+0xe30>
  403bd0:	mov	w1, #0x5b                  	// #91
  403bd4:	mov	x0, x21
  403bd8:	bl	40a858 <wcrtomb@plt+0x7b18>
  403bdc:	bl	403520 <wcrtomb@plt+0x7e0>
  403be0:	mov	w19, w0
  403be4:	cmp	w0, #0x5e
  403be8:	b.eq	403dc4 <wcrtomb@plt+0x1084>  // b.none
  403bec:	cmp	w19, #0x5d
  403bf0:	b.eq	403dac <wcrtomb@plt+0x106c>  // b.none
  403bf4:	ldr	w0, [x23]
  403bf8:	mov	w20, #0x0                   	// #0
  403bfc:	mov	w26, #0x3                   	// #3
  403c00:	cmp	w0, #0x1
  403c04:	b.eq	403c58 <wcrtomb@plt+0xf18>  // b.none
  403c08:	add	x1, sp, #0x68
  403c0c:	mov	w0, w19
  403c10:	bl	409010 <wcrtomb@plt+0x62d0>
  403c14:	cmp	w19, #0x3d
  403c18:	b.eq	403d14 <wcrtomb@plt+0xfd4>  // b.none
  403c1c:	b.le	403cf8 <wcrtomb@plt+0xfb8>
  403c20:	cmp	w19, #0x5b
  403c24:	b.eq	403d78 <wcrtomb@plt+0x1038>  // b.none
  403c28:	cmp	w19, #0x5d
  403c2c:	b.ne	403d3c <wcrtomb@plt+0xffc>  // b.any
  403c30:	cbz	w0, 403c74 <wcrtomb@plt+0xf34>
  403c34:	nop
  403c38:	mov	w1, w19
  403c3c:	mov	x0, x21
  403c40:	bl	40a858 <wcrtomb@plt+0x7b18>
  403c44:	bl	403520 <wcrtomb@plt+0x7e0>
  403c48:	mov	w19, w0
  403c4c:	ldr	w0, [x23]
  403c50:	cmp	w0, #0x1
  403c54:	b.ne	403c08 <wcrtomb@plt+0xec8>  // b.any
  403c58:	cmp	w19, #0x3d
  403c5c:	b.eq	403ca8 <wcrtomb@plt+0xf68>  // b.none
  403c60:	b.le	403c8c <wcrtomb@plt+0xf4c>
  403c64:	cmp	w19, #0x5b
  403c68:	b.eq	403d2c <wcrtomb@plt+0xfec>  // b.none
  403c6c:	cmp	w19, #0x5d
  403c70:	b.ne	403d3c <wcrtomb@plt+0xffc>  // b.any
  403c74:	cmp	w20, #0x1
  403c78:	b.le	403de8 <wcrtomb@plt+0x10a8>
  403c7c:	cmp	w20, #0x3
  403c80:	and	w20, w20, #0xfffffffe
  403c84:	csel	w20, w20, wzr, ne  // ne = any
  403c88:	b	403c38 <wcrtomb@plt+0xef8>
  403c8c:	cmp	w19, #0xa
  403c90:	b.eq	403ddc <wcrtomb@plt+0x109c>  // b.none
  403c94:	b.le	403cc4 <wcrtomb@plt+0xf84>
  403c98:	cmp	w19, #0x2e
  403c9c:	b.eq	403ca8 <wcrtomb@plt+0xf68>  // b.none
  403ca0:	cmp	w19, #0x3a
  403ca4:	b.ne	403d3c <wcrtomb@plt+0xffc>  // b.any
  403ca8:	cmp	w20, #0x1
  403cac:	b.eq	403d20 <wcrtomb@plt+0xfe0>  // b.none
  403cb0:	cmp	w20, #0x2
  403cb4:	and	w20, w20, #0xfffffffe
  403cb8:	ccmp	w19, w28, #0x0, eq  // eq = none
  403cbc:	csel	w20, w20, w26, ne  // ne = any
  403cc0:	b	403c38 <wcrtomb@plt+0xef8>
  403cc4:	cmn	w19, #0x1
  403cc8:	b.ne	403d3c <wcrtomb@plt+0xffc>  // b.any
  403ccc:	mov	x0, x21
  403cd0:	mov	x21, #0x0                   	// #0
  403cd4:	bl	40a8d8 <wcrtomb@plt+0x7b98>
  403cd8:	mov	x0, x21
  403cdc:	ldp	x19, x20, [sp, #16]
  403ce0:	ldp	x21, x22, [sp, #32]
  403ce4:	ldp	x23, x24, [sp, #48]
  403ce8:	ldp	x25, x26, [sp, #64]
  403cec:	ldp	x27, x28, [sp, #80]
  403cf0:	ldp	x29, x30, [sp], #112
  403cf4:	ret
  403cf8:	cmp	w19, #0xa
  403cfc:	b.eq	403ddc <wcrtomb@plt+0x109c>  // b.none
  403d00:	b.le	403cc4 <wcrtomb@plt+0xf84>
  403d04:	cmp	w19, #0x2e
  403d08:	b.eq	403d14 <wcrtomb@plt+0xfd4>  // b.none
  403d0c:	cmp	w19, #0x3a
  403d10:	b.ne	403d3c <wcrtomb@plt+0xffc>  // b.any
  403d14:	cbnz	w0, 403c38 <wcrtomb@plt+0xef8>
  403d18:	cmp	w20, #0x1
  403d1c:	b.ne	403cb0 <wcrtomb@plt+0xf70>  // b.any
  403d20:	mov	w28, w19
  403d24:	mov	w20, #0x2                   	// #2
  403d28:	b	403c38 <wcrtomb@plt+0xef8>
  403d2c:	mov	w0, w20
  403d30:	cmp	w0, #0x0
  403d34:	csel	w20, w20, w27, ne  // ne = any
  403d38:	b	403c38 <wcrtomb@plt+0xef8>
  403d3c:	and	w20, w20, #0xfffffffe
  403d40:	b	403c38 <wcrtomb@plt+0xef8>
  403d44:	bl	403520 <wcrtomb@plt+0x7e0>
  403d48:	mov	w19, w0
  403d4c:	cmn	w0, #0x1
  403d50:	b.eq	403ccc <wcrtomb@plt+0xf8c>  // b.none
  403d54:	cmp	w0, #0x6e
  403d58:	and	w0, w25, #0x1
  403d5c:	csel	w0, w0, wzr, eq  // eq = none
  403d60:	cmp	w19, #0xa
  403d64:	eor	w0, w0, #0x1
  403d68:	csel	w0, w0, wzr, ne  // ne = any
  403d6c:	cbnz	w0, 403d80 <wcrtomb@plt+0x1040>
  403d70:	mov	w19, #0xa                   	// #10
  403d74:	b	403b70 <wcrtomb@plt+0xe30>
  403d78:	orr	w0, w0, w20
  403d7c:	b	403d30 <wcrtomb@plt+0xff0>
  403d80:	cmp	w24, w19
  403d84:	b.ne	403d9c <wcrtomb@plt+0x105c>  // b.any
  403d88:	cmp	w24, #0x26
  403d8c:	eor	w0, w25, #0x1
  403d90:	cset	w1, eq  // eq = none
  403d94:	tst	w0, w1
  403d98:	b.eq	403b70 <wcrtomb@plt+0xe30>  // b.none
  403d9c:	mov	x0, x21
  403da0:	mov	w1, #0x5c                  	// #92
  403da4:	bl	40a858 <wcrtomb@plt+0x7b18>
  403da8:	b	403b70 <wcrtomb@plt+0xe30>
  403dac:	mov	w1, w19
  403db0:	mov	x0, x21
  403db4:	bl	40a858 <wcrtomb@plt+0x7b18>
  403db8:	bl	403520 <wcrtomb@plt+0x7e0>
  403dbc:	mov	w19, w0
  403dc0:	b	403bf4 <wcrtomb@plt+0xeb4>
  403dc4:	mov	w1, w0
  403dc8:	mov	x0, x21
  403dcc:	bl	40a858 <wcrtomb@plt+0x7b18>
  403dd0:	bl	403520 <wcrtomb@plt+0x7e0>
  403dd4:	mov	w19, w0
  403dd8:	b	403bec <wcrtomb@plt+0xeac>
  403ddc:	mov	w0, #0xa                   	// #10
  403de0:	bl	403600 <wcrtomb@plt+0x8c0>
  403de4:	b	403ccc <wcrtomb@plt+0xf8c>
  403de8:	mov	w19, #0x5d                  	// #93
  403dec:	b	403b70 <wcrtomb@plt+0xe30>
  403df0:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  403df4:	add	x0, x0, #0xe38
  403df8:	add	x0, x0, #0x260
  403dfc:	bl	4037b0 <wcrtomb@plt+0xa70>
  403e00:	stp	x29, x30, [sp, #-64]!
  403e04:	cmp	w1, #0x2f
  403e08:	mov	x29, sp
  403e0c:	stp	x19, x20, [sp, #16]
  403e10:	mov	x19, x0
  403e14:	mov	x0, #0xffffffffffffffff    	// #-1
  403e18:	stp	x21, x22, [sp, #32]
  403e1c:	cset	w21, eq  // eq = none
  403e20:	cmp	w1, #0x5c
  403e24:	str	wzr, [x19]
  403e28:	mov	w20, w1
  403e2c:	stp	x0, xzr, [x19, #8]
  403e30:	csinc	w21, w21, wzr, ne  // ne = any
  403e34:	str	xzr, [x19, #24]
  403e38:	cbz	w21, 403ed8 <wcrtomb@plt+0x1198>
  403e3c:	str	x23, [sp, #48]
  403e40:	mov	w0, #0x1                   	// #1
  403e44:	str	w0, [x19]
  403e48:	b.eq	403fb4 <wcrtomb@plt+0x1274>  // b.none
  403e4c:	mov	w0, w20
  403e50:	mov	w1, #0x1                   	// #1
  403e54:	bl	403b18 <wcrtomb@plt+0xdd8>
  403e58:	mov	x20, x0
  403e5c:	cbz	x0, 403ffc <wcrtomb@plt+0x12bc>
  403e60:	adrp	x22, 438000 <_obstack_memory_used@@Base+0x253b0>
  403e64:	add	x22, x22, #0x8d8
  403e68:	mov	w23, #0x0                   	// #0
  403e6c:	bl	4035c8 <wcrtomb@plt+0x888>
  403e70:	ldr	w1, [x22]
  403e74:	cmp	w1, #0x2
  403e78:	b.eq	403ea0 <wcrtomb@plt+0x1160>  // b.none
  403e7c:	cmp	w0, #0x49
  403e80:	b.eq	403f60 <wcrtomb@plt+0x1220>  // b.none
  403e84:	cmp	w0, #0x4d
  403e88:	b.ne	403ea0 <wcrtomb@plt+0x1160>  // b.any
  403e8c:	bl	4035c8 <wcrtomb@plt+0x888>
  403e90:	orr	w23, w23, #0x4
  403e94:	ldr	w1, [x22]
  403e98:	cmp	w1, #0x2
  403e9c:	b.ne	403e7c <wcrtomb@plt+0x113c>  // b.any
  403ea0:	bl	403600 <wcrtomb@plt+0x8c0>
  403ea4:	mov	w1, w23
  403ea8:	mov	w2, #0x0                   	// #0
  403eac:	mov	x0, x20
  403eb0:	bl	409370 <wcrtomb@plt+0x6630>
  403eb4:	str	x0, [x19, #24]
  403eb8:	mov	x0, x20
  403ebc:	bl	40a8d8 <wcrtomb@plt+0x7b98>
  403ec0:	ldr	x23, [sp, #48]
  403ec4:	mov	w0, w21
  403ec8:	ldp	x19, x20, [sp, #16]
  403ecc:	ldp	x21, x22, [sp, #32]
  403ed0:	ldp	x29, x30, [sp], #64
  403ed4:	ret
  403ed8:	bl	402ab0 <__ctype_b_loc@plt>
  403edc:	ldr	x0, [x0]
  403ee0:	ubfiz	x1, x20, #1, #8
  403ee4:	ldrh	w0, [x0, x1]
  403ee8:	tbnz	w0, #11, 403f68 <wcrtomb@plt+0x1228>
  403eec:	cmp	w20, #0x2b
  403ef0:	cset	w22, eq  // eq = none
  403ef4:	cmp	w20, #0x7e
  403ef8:	csinc	w22, w22, wzr, ne  // ne = any
  403efc:	cbz	w22, 403f38 <wcrtomb@plt+0x11f8>
  403f00:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  403f04:	ldr	w0, [x0, #2264]
  403f08:	cmp	w0, #0x2
  403f0c:	b.eq	403f38 <wcrtomb@plt+0x11f8>  // b.none
  403f10:	bl	4035c8 <wcrtomb@plt+0x888>
  403f14:	bl	403748 <wcrtomb@plt+0xa08>
  403f18:	str	x0, [x19, #16]
  403f1c:	cbz	x0, 403fd4 <wcrtomb@plt+0x1294>
  403f20:	mov	w21, w22
  403f24:	cmp	w20, #0x2b
  403f28:	b.eq	404014 <wcrtomb@plt+0x12d4>  // b.none
  403f2c:	mov	w0, #0x5                   	// #5
  403f30:	str	w0, [x19]
  403f34:	b	403ec4 <wcrtomb@plt+0x1184>
  403f38:	cmp	w20, #0x24
  403f3c:	b.ne	403ec4 <wcrtomb@plt+0x1184>  // b.any
  403f40:	mov	w0, #0x6                   	// #6
  403f44:	str	w0, [x19]
  403f48:	mov	w21, #0x1                   	// #1
  403f4c:	mov	w0, w21
  403f50:	ldp	x19, x20, [sp, #16]
  403f54:	ldp	x21, x22, [sp, #32]
  403f58:	ldp	x29, x30, [sp], #64
  403f5c:	ret
  403f60:	orr	w23, w23, #0x2
  403f64:	b	403e6c <wcrtomb@plt+0x112c>
  403f68:	mov	w0, w20
  403f6c:	bl	403748 <wcrtomb@plt+0xa08>
  403f70:	mov	w1, #0x2                   	// #2
  403f74:	str	w1, [x19]
  403f78:	str	x0, [x19, #8]
  403f7c:	bl	4035c8 <wcrtomb@plt+0x888>
  403f80:	cmp	w0, #0x7e
  403f84:	b.ne	403f98 <wcrtomb@plt+0x1258>  // b.any
  403f88:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  403f8c:	ldr	w1, [x1, #2264]
  403f90:	cmp	w1, #0x2
  403f94:	b.ne	403fdc <wcrtomb@plt+0x129c>  // b.any
  403f98:	bl	403600 <wcrtomb@plt+0x8c0>
  403f9c:	mov	w21, #0x1                   	// #1
  403fa0:	mov	w0, w21
  403fa4:	ldp	x19, x20, [sp, #16]
  403fa8:	ldp	x21, x22, [sp, #32]
  403fac:	ldp	x29, x30, [sp], #64
  403fb0:	ret
  403fb4:	bl	403520 <wcrtomb@plt+0x7e0>
  403fb8:	mov	w20, w0
  403fbc:	mov	w0, w20
  403fc0:	mov	w1, #0x1                   	// #1
  403fc4:	bl	403b18 <wcrtomb@plt+0xdd8>
  403fc8:	mov	x20, x0
  403fcc:	cbnz	x0, 403e60 <wcrtomb@plt+0x1120>
  403fd0:	b	403ffc <wcrtomb@plt+0x12bc>
  403fd4:	mov	w21, #0x1                   	// #1
  403fd8:	b	403ec4 <wcrtomb@plt+0x1184>
  403fdc:	bl	4035c8 <wcrtomb@plt+0x888>
  403fe0:	bl	403748 <wcrtomb@plt+0xa08>
  403fe4:	cbz	x0, 403fd4 <wcrtomb@plt+0x1294>
  403fe8:	mov	w1, #0x3                   	// #3
  403fec:	mov	w21, #0x1                   	// #1
  403ff0:	str	w1, [x19]
  403ff4:	str	x0, [x19, #16]
  403ff8:	b	403ec4 <wcrtomb@plt+0x1184>
  403ffc:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  404000:	add	x1, x1, #0xe38
  404004:	add	x1, x1, #0x133
  404008:	mov	w2, #0x5                   	// #5
  40400c:	bl	402c20 <dcgettext@plt>
  404010:	bl	4037b0 <wcrtomb@plt+0xa70>
  404014:	mov	w0, #0x4                   	// #4
  404018:	str	w0, [x19]
  40401c:	b	403ec4 <wcrtomb@plt+0x1184>
  404020:	stp	x29, x30, [sp, #-16]!
  404024:	mov	x29, sp
  404028:	bl	4035c8 <wcrtomb@plt+0x888>
  40402c:	cmp	w0, #0x7d
  404030:	mov	w2, #0x23                  	// #35
  404034:	ccmp	w0, w2, #0x4, ne  // ne = any
  404038:	b.eq	40405c <wcrtomb@plt+0x131c>  // b.none
  40403c:	mov	w1, w0
  404040:	cmp	w0, #0xa
  404044:	ccmn	w1, #0x1, #0x4, ne  // ne = any
  404048:	mov	w0, #0x3b                  	// #59
  40404c:	ccmp	w1, w0, #0x4, ne  // ne = any
  404050:	b.ne	404064 <wcrtomb@plt+0x1324>  // b.any
  404054:	ldp	x29, x30, [sp], #16
  404058:	ret
  40405c:	ldp	x29, x30, [sp], #16
  404060:	b	403600 <wcrtomb@plt+0x8c0>
  404064:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  404068:	add	x1, x1, #0xe38
  40406c:	add	x1, x1, #0x65
  404070:	mov	w2, #0x5                   	// #5
  404074:	mov	x0, #0x0                   	// #0
  404078:	bl	402c20 <dcgettext@plt>
  40407c:	bl	4037b0 <wcrtomb@plt+0xa70>
  404080:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  404084:	add	x1, x1, #0xe38
  404088:	stp	x29, x30, [sp, #-32]!
  40408c:	add	x1, x1, #0x2d1
  404090:	mov	w2, #0x5                   	// #5
  404094:	mov	x29, sp
  404098:	stp	x19, x20, [sp, #16]
  40409c:	and	w20, w0, #0xff
  4040a0:	mov	x0, #0x0                   	// #0
  4040a4:	bl	402c20 <dcgettext@plt>
  4040a8:	mov	x19, x0
  4040ac:	bl	402690 <strlen@plt>
  4040b0:	bl	4125f8 <wcrtomb@plt+0xf8b8>
  4040b4:	mov	x3, x19
  4040b8:	mov	w4, w20
  4040bc:	mov	x2, #0xffffffffffffffff    	// #-1
  4040c0:	mov	w1, #0x1                   	// #1
  4040c4:	mov	x19, x0
  4040c8:	bl	4026a0 <__sprintf_chk@plt>
  4040cc:	mov	x0, x19
  4040d0:	bl	4037b0 <wcrtomb@plt+0xa70>
  4040d4:	nop
  4040d8:	stp	x29, x30, [sp, #-112]!
  4040dc:	mov	x29, sp
  4040e0:	stp	x25, x26, [sp, #64]
  4040e4:	add	x25, x0, x1
  4040e8:	cmp	x0, x25
  4040ec:	str	xzr, [sp, #104]
  4040f0:	b.cs	4044a4 <wcrtomb@plt+0x1764>  // b.hs, b.nlast
  4040f4:	stp	x23, x24, [sp, #48]
  4040f8:	adrp	x24, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  4040fc:	add	x24, x24, #0xe38
  404100:	mov	x23, x0
  404104:	add	x24, x24, #0x388
  404108:	stp	x19, x20, [sp, #16]
  40410c:	mov	x20, x0
  404110:	mov	x19, x0
  404114:	stp	x21, x22, [sp, #32]
  404118:	mov	w21, w2
  40411c:	mov	w22, #0x0                   	// #0
  404120:	str	x27, [sp, #80]
  404124:	adrp	x27, 438000 <_obstack_memory_used@@Base+0x253b0>
  404128:	add	x27, x27, #0x8d4
  40412c:	b	404184 <wcrtomb@plt+0x1444>
  404130:	sub	x2, x25, x19
  404134:	add	x3, sp, #0x68
  404138:	mov	x1, x19
  40413c:	mov	x0, #0x0                   	// #0
  404140:	bl	412878 <wcrtomb@plt+0xfb38>
  404144:	cmp	w0, #0x1
  404148:	mov	w2, w0
  40414c:	b.eq	404190 <wcrtomb@plt+0x1450>  // b.none
  404150:	cmp	w0, #0x0
  404154:	add	w0, w0, #0x2
  404158:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  40415c:	mov	x1, x19
  404160:	csinc	w2, w2, wzr, hi  // hi = pmore
  404164:	mov	x0, x20
  404168:	sxtw	x26, w2
  40416c:	add	x19, x19, x26
  404170:	add	x20, x20, x26
  404174:	mov	x2, x26
  404178:	bl	402660 <memmove@plt>
  40417c:	cmp	x19, x25
  404180:	b.cs	4041c0 <wcrtomb@plt+0x1480>  // b.hs, b.nlast
  404184:	ldr	w0, [x27]
  404188:	cmp	w0, #0x1
  40418c:	b.ne	404130 <wcrtomb@plt+0x13f0>  // b.any
  404190:	mov	x0, x19
  404194:	ldrb	w3, [x0], #1
  404198:	cmp	w3, #0x5c
  40419c:	b.eq	4041e0 <wcrtomb@plt+0x14a0>  // b.none
  4041a0:	cmp	w21, #0x2
  4041a4:	add	x1, x20, #0x1
  4041a8:	b.eq	404268 <wcrtomb@plt+0x1528>  // b.none
  4041ac:	strb	w3, [x20]
  4041b0:	mov	x19, x0
  4041b4:	mov	x20, x1
  4041b8:	cmp	x19, x25
  4041bc:	b.cc	404184 <wcrtomb@plt+0x1444>  // b.lo, b.ul, b.last
  4041c0:	sub	x0, x20, x23
  4041c4:	ldp	x19, x20, [sp, #16]
  4041c8:	ldp	x21, x22, [sp, #32]
  4041cc:	ldp	x23, x24, [sp, #48]
  4041d0:	ldr	x27, [sp, #80]
  4041d4:	ldp	x25, x26, [sp, #64]
  4041d8:	ldp	x29, x30, [sp], #112
  4041dc:	ret
  4041e0:	cmp	w22, #0x0
  4041e4:	ccmp	x25, x0, #0x0, eq  // eq = none
  4041e8:	b.ls	4041a0 <wcrtomb@plt+0x1460>  // b.plast
  4041ec:	ldrb	w3, [x19, #1]
  4041f0:	cmp	w3, #0x6f
  4041f4:	b.eq	404460 <wcrtomb@plt+0x1720>  // b.none
  4041f8:	b.hi	404308 <wcrtomb@plt+0x15c8>  // b.pmore
  4041fc:	cmp	w3, #0x64
  404200:	b.eq	40440c <wcrtomb@plt+0x16cc>  // b.none
  404204:	b.hi	4042ec <wcrtomb@plt+0x15ac>  // b.pmore
  404208:	cmp	w3, #0x61
  40420c:	b.eq	40447c <wcrtomb@plt+0x173c>  // b.none
  404210:	cmp	w3, #0x63
  404214:	b.ne	4042d0 <wcrtomb@plt+0x1590>  // b.any
  404218:	add	x22, x19, #0x2
  40421c:	cmp	x25, x22
  404220:	b.ls	4044ac <wcrtomb@plt+0x176c>  // b.plast
  404224:	bl	402940 <__ctype_toupper_loc@plt>
  404228:	ldrb	w1, [x19, #2]
  40422c:	ldr	x0, [x0]
  404230:	ldr	w0, [x0, x1, lsl #2]
  404234:	eor	w0, w0, #0x40
  404238:	strb	w0, [x20], #1
  40423c:	ldrb	w0, [x19, #2]
  404240:	cmp	w0, #0x5c
  404244:	b.ne	404430 <wcrtomb@plt+0x16f0>  // b.any
  404248:	ldrb	w0, [x19, #3]
  40424c:	add	x22, x19, #0x3
  404250:	cmp	w0, #0x5c
  404254:	b.eq	404430 <wcrtomb@plt+0x16f0>  // b.none
  404258:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  40425c:	add	x0, x0, #0xe38
  404260:	add	x0, x0, #0x30c
  404264:	bl	4037b0 <wcrtomb@plt+0xa70>
  404268:	adrp	x2, 438000 <_obstack_memory_used@@Base+0x253b0>
  40426c:	ldr	w2, [x2, #2264]
  404270:	cbz	w2, 4041ac <wcrtomb@plt+0x146c>
  404274:	cmp	w3, #0x5b
  404278:	b.eq	4043d0 <wcrtomb@plt+0x1690>  // b.none
  40427c:	b.hi	4042a8 <wcrtomb@plt+0x1568>  // b.pmore
  404280:	cmp	w3, #0x3a
  404284:	b.eq	404290 <wcrtomb@plt+0x1550>  // b.none
  404288:	cmp	w3, #0x3d
  40428c:	b.ne	4042c4 <wcrtomb@plt+0x1584>  // b.any
  404290:	cmn	w22, #0x1
  404294:	b.ne	4041ac <wcrtomb@plt+0x146c>  // b.any
  404298:	ldurb	w2, [x19, #-1]
  40429c:	cmp	w2, #0x5b
  4042a0:	csel	w22, w22, w3, ne  // ne = any
  4042a4:	b	4041ac <wcrtomb@plt+0x146c>
  4042a8:	cmp	w3, #0x5d
  4042ac:	b.ne	4041ac <wcrtomb@plt+0x146c>  // b.any
  4042b0:	add	w2, w22, #0x1
  4042b4:	cmp	w2, #0x1
  4042b8:	b.hi	404414 <wcrtomb@plt+0x16d4>  // b.pmore
  4042bc:	mov	w22, #0x0                   	// #0
  4042c0:	b	4041ac <wcrtomb@plt+0x146c>
  4042c4:	cmp	w3, #0x2e
  4042c8:	b.eq	404290 <wcrtomb@plt+0x1550>  // b.none
  4042cc:	b	4041ac <wcrtomb@plt+0x146c>
  4042d0:	cmp	w3, #0xa
  4042d4:	b.ne	404380 <wcrtomb@plt+0x1640>  // b.any
  4042d8:	mov	w0, #0xa                   	// #10
  4042dc:	add	x19, x19, #0x2
  4042e0:	mov	w22, #0x0                   	// #0
  4042e4:	strb	w0, [x20], #1
  4042e8:	b	40417c <wcrtomb@plt+0x143c>
  4042ec:	cmp	w3, #0x66
  4042f0:	b.ne	404374 <wcrtomb@plt+0x1634>  // b.any
  4042f4:	mov	w0, #0xc                   	// #12
  4042f8:	add	x19, x19, #0x2
  4042fc:	mov	w22, #0x0                   	// #0
  404300:	strb	w0, [x20], #1
  404304:	b	40417c <wcrtomb@plt+0x143c>
  404308:	cmp	w3, #0x76
  40430c:	b.eq	404468 <wcrtomb@plt+0x1728>  // b.none
  404310:	b.ls	4043ac <wcrtomb@plt+0x166c>  // b.plast
  404314:	cmp	w3, #0x78
  404318:	mov	w1, #0x10                  	// #16
  40431c:	b.ne	404380 <wcrtomb@plt+0x1640>  // b.any
  404320:	add	x5, x19, #0x2
  404324:	mov	x19, x5
  404328:	cmp	x25, x5
  40432c:	b.ls	404358 <wcrtomb@plt+0x1618>  // b.plast
  404330:	mov	w2, #0x1                   	// #1
  404334:	mov	w4, #0x0                   	// #0
  404338:	ldrb	w0, [x19]
  40433c:	sub	w0, w0, #0x30
  404340:	and	w0, w0, #0xff
  404344:	cmp	w0, #0x36
  404348:	b.ls	4043dc <wcrtomb@plt+0x169c>  // b.plast
  40434c:	and	w4, w4, #0xff
  404350:	cmp	x5, x19
  404354:	csel	w3, w4, w3, ne  // ne = any
  404358:	cmp	w21, #0x1
  40435c:	add	x0, x20, #0x1
  404360:	b.eq	40443c <wcrtomb@plt+0x16fc>  // b.none
  404364:	mov	w22, #0x0                   	// #0
  404368:	strb	w3, [x20]
  40436c:	mov	x20, x0
  404370:	b	40417c <wcrtomb@plt+0x143c>
  404374:	cmp	w3, #0x6e
  404378:	b.eq	4042d8 <wcrtomb@plt+0x1598>  // b.none
  40437c:	nop
  404380:	add	x1, x20, #0x1
  404384:	add	x0, x19, #0x2
  404388:	mov	w22, #0x0                   	// #0
  40438c:	cbz	w21, 4041ac <wcrtomb@plt+0x146c>
  404390:	mov	x2, x20
  404394:	mov	w3, #0x5c                  	// #92
  404398:	mov	x20, x1
  40439c:	strb	w3, [x2], #2
  4043a0:	ldrb	w3, [x19, #1]
  4043a4:	mov	x1, x2
  4043a8:	b	4041ac <wcrtomb@plt+0x146c>
  4043ac:	cmp	w3, #0x72
  4043b0:	b.eq	404490 <wcrtomb@plt+0x1750>  // b.none
  4043b4:	cmp	w3, #0x74
  4043b8:	b.ne	404380 <wcrtomb@plt+0x1640>  // b.any
  4043bc:	mov	w0, #0x9                   	// #9
  4043c0:	add	x19, x19, #0x2
  4043c4:	mov	w22, #0x0                   	// #0
  4043c8:	strb	w0, [x20], #1
  4043cc:	b	40417c <wcrtomb@plt+0x143c>
  4043d0:	cmp	w22, #0x0
  4043d4:	csinv	w22, w22, wzr, ne  // ne = any
  4043d8:	b	4041ac <wcrtomb@plt+0x146c>
  4043dc:	and	x0, x0, #0xff
  4043e0:	ldrsb	w0, [x24, x0]
  4043e4:	cmp	w0, #0x0
  4043e8:	ccmp	w1, w0, #0x4, ge  // ge = tcont
  4043ec:	b.le	40434c <wcrtomb@plt+0x160c>
  4043f0:	mul	w2, w2, w1
  4043f4:	add	x19, x19, #0x1
  4043f8:	madd	w4, w1, w4, w0
  4043fc:	cmp	w2, #0xff
  404400:	ccmp	x25, x19, #0x0, le
  404404:	b.hi	404338 <wcrtomb@plt+0x15f8>  // b.pmore
  404408:	b	40434c <wcrtomb@plt+0x160c>
  40440c:	mov	w1, #0xa                   	// #10
  404410:	b	404320 <wcrtomb@plt+0x15e0>
  404414:	ldurb	w2, [x19, #-2]
  404418:	cmp	w2, w22
  40441c:	b.eq	4041ac <wcrtomb@plt+0x146c>  // b.none
  404420:	ldurb	w2, [x19, #-1]
  404424:	cmp	w2, w22
  404428:	csinv	w22, w22, wzr, ne  // ne = any
  40442c:	b	4041ac <wcrtomb@plt+0x146c>
  404430:	add	x19, x22, #0x1
  404434:	mov	w22, #0x0                   	// #0
  404438:	b	40417c <wcrtomb@plt+0x143c>
  40443c:	cmp	w3, #0x26
  404440:	mov	w1, #0x5c                  	// #92
  404444:	ccmp	w3, w1, #0x4, ne  // ne = any
  404448:	b.ne	404364 <wcrtomb@plt+0x1624>  // b.any
  40444c:	mov	x2, x20
  404450:	mov	x20, x0
  404454:	strb	w1, [x2], #2
  404458:	mov	x0, x2
  40445c:	b	404364 <wcrtomb@plt+0x1624>
  404460:	mov	w1, #0x8                   	// #8
  404464:	b	404320 <wcrtomb@plt+0x15e0>
  404468:	mov	w0, #0xb                   	// #11
  40446c:	add	x19, x19, #0x2
  404470:	mov	w22, #0x0                   	// #0
  404474:	strb	w0, [x20], #1
  404478:	b	40417c <wcrtomb@plt+0x143c>
  40447c:	mov	w0, #0x7                   	// #7
  404480:	add	x19, x19, #0x2
  404484:	mov	w22, #0x0                   	// #0
  404488:	strb	w0, [x20], #1
  40448c:	b	40417c <wcrtomb@plt+0x143c>
  404490:	mov	w0, #0xd                   	// #13
  404494:	add	x19, x19, #0x2
  404498:	mov	w22, #0x0                   	// #0
  40449c:	strb	w0, [x20], #1
  4044a0:	b	40417c <wcrtomb@plt+0x143c>
  4044a4:	mov	x0, #0x0                   	// #0
  4044a8:	b	4041d4 <wcrtomb@plt+0x1494>
  4044ac:	cbz	w21, 4041c0 <wcrtomb@plt+0x1480>
  4044b0:	mov	w0, #0x5c                  	// #92
  4044b4:	strb	w0, [x20], #1
  4044b8:	b	4041c0 <wcrtomb@plt+0x1480>
  4044bc:	nop
  4044c0:	stp	x29, x30, [sp, #-48]!
  4044c4:	mov	x29, sp
  4044c8:	stp	x19, x20, [sp, #16]
  4044cc:	mov	w19, w1
  4044d0:	stp	x21, x22, [sp, #32]
  4044d4:	mov	x21, x0
  4044d8:	cbz	x0, 4044fc <wcrtomb@plt+0x17bc>
  4044dc:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x253b0>
  4044e0:	add	x20, x20, #0x528
  4044e4:	ldr	x0, [x20, #168]
  4044e8:	cbz	x0, 4044f0 <wcrtomb@plt+0x17b0>
  4044ec:	bl	40a8d8 <wcrtomb@plt+0x7b98>
  4044f0:	bl	40a788 <wcrtomb@plt+0x7a48>
  4044f4:	stp	xzr, xzr, [x21]
  4044f8:	stp	x0, x21, [x20, #168]
  4044fc:	cmn	w19, #0x1
  404500:	b.eq	4045bc <wcrtomb@plt+0x187c>  // b.none
  404504:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x253b0>
  404508:	cmp	w19, #0xa
  40450c:	add	x20, x20, #0x528
  404510:	b.ne	404604 <wcrtomb@plt+0x18c4>  // b.any
  404514:	bl	403520 <wcrtomb@plt+0x7e0>
  404518:	cmp	w0, #0xa
  40451c:	mov	w19, w0
  404520:	ccmn	w0, #0x1, #0x4, ne  // ne = any
  404524:	b.eq	404558 <wcrtomb@plt+0x1818>  // b.none
  404528:	cmp	w0, #0x5c
  40452c:	b.eq	4045cc <wcrtomb@plt+0x188c>  // b.none
  404530:	cmn	w0, #0x1
  404534:	b.eq	4045e0 <wcrtomb@plt+0x18a0>  // b.none
  404538:	ldr	x0, [x20, #168]
  40453c:	mov	w1, w19
  404540:	bl	40a858 <wcrtomb@plt+0x7b18>
  404544:	bl	403520 <wcrtomb@plt+0x7e0>
  404548:	cmp	w0, #0xa
  40454c:	mov	w19, w0
  404550:	ccmn	w0, #0x1, #0x4, ne  // ne = any
  404554:	b.ne	404528 <wcrtomb@plt+0x17e8>  // b.any
  404558:	ldr	x0, [x20, #168]
  40455c:	mov	w1, #0xa                   	// #10
  404560:	bl	40a858 <wcrtomb@plt+0x7b18>
  404564:	cbz	x21, 404614 <wcrtomb@plt+0x18d4>
  404568:	ldr	x22, [x20, #168]
  40456c:	mov	x0, x22
  404570:	bl	40a7d0 <wcrtomb@plt+0x7a90>
  404574:	mov	x19, x0
  404578:	mov	x0, x22
  40457c:	bl	40a7d8 <wcrtomb@plt+0x7a98>
  404580:	mov	x1, x0
  404584:	mov	w2, #0x0                   	// #0
  404588:	mov	x0, x19
  40458c:	bl	4040d8 <wcrtomb@plt+0x1398>
  404590:	mov	x19, x0
  404594:	ldr	x0, [x20, #168]
  404598:	str	x19, [x21, #8]
  40459c:	bl	40a7d0 <wcrtomb@plt+0x7a90>
  4045a0:	mov	x1, x19
  4045a4:	bl	4127d0 <wcrtomb@plt+0xfa90>
  4045a8:	mov	x1, x0
  4045ac:	str	x1, [x21]
  4045b0:	ldr	x0, [x20, #168]
  4045b4:	bl	40a8d8 <wcrtomb@plt+0x7b98>
  4045b8:	str	xzr, [x20, #168]
  4045bc:	ldp	x19, x20, [sp, #16]
  4045c0:	ldp	x21, x22, [sp, #32]
  4045c4:	ldp	x29, x30, [sp], #48
  4045c8:	ret
  4045cc:	bl	403520 <wcrtomb@plt+0x7e0>
  4045d0:	mov	w19, w0
  4045d4:	cmn	w0, #0x1
  4045d8:	mov	w1, #0x5c                  	// #92
  4045dc:	b.ne	4045f8 <wcrtomb@plt+0x18b8>  // b.any
  4045e0:	ldp	x21, x22, [sp, #32]
  4045e4:	mov	w1, #0xa                   	// #10
  4045e8:	ldr	x0, [x20, #168]
  4045ec:	ldp	x19, x20, [sp, #16]
  4045f0:	ldp	x29, x30, [sp], #48
  4045f4:	b	40a858 <wcrtomb@plt+0x7b18>
  4045f8:	ldr	x0, [x20, #168]
  4045fc:	bl	40a858 <wcrtomb@plt+0x7b18>
  404600:	b	404538 <wcrtomb@plt+0x17f8>
  404604:	ldr	x0, [x20, #168]
  404608:	mov	w1, w19
  40460c:	bl	40a858 <wcrtomb@plt+0x7b18>
  404610:	b	404544 <wcrtomb@plt+0x1804>
  404614:	ldr	x21, [x20, #176]
  404618:	b	404568 <wcrtomb@plt+0x1828>
  40461c:	nop
  404620:	stp	x29, x30, [sp, #-240]!
  404624:	mov	x29, sp
  404628:	stp	x19, x20, [sp, #16]
  40462c:	mov	x19, x0
  404630:	stp	x21, x22, [sp, #32]
  404634:	stp	x23, x24, [sp, #48]
  404638:	stp	x25, x26, [sp, #64]
  40463c:	adrp	x26, 438000 <_obstack_memory_used@@Base+0x253b0>
  404640:	add	x26, x26, #0x528
  404644:	stp	x27, x28, [sp, #80]
  404648:	cbz	x0, 4053dc <wcrtomb@plt+0x269c>
  40464c:	ldr	x0, [x26, #168]
  404650:	cbz	x0, 404660 <wcrtomb@plt+0x1920>
  404654:	mov	w1, #0xa                   	// #10
  404658:	mov	x0, #0x0                   	// #0
  40465c:	bl	4044c0 <wcrtomb@plt+0x1780>
  404660:	mov	x21, #0x8200                	// #33280
  404664:	mov	x20, #0x1                   	// #1
  404668:	movk	x21, #0x4b0, lsl #16
  40466c:	movk	x20, #0x9010, lsl #32
  404670:	movk	x21, #0x100, lsl #32
  404674:	bl	402ab0 <__ctype_b_loc@plt>
  404678:	mov	x24, x0
  40467c:	movk	x21, #0x2200, lsl #48
  404680:	movk	x20, #0x20, lsl #48
  404684:	nop
  404688:	bl	403520 <wcrtomb@plt+0x7e0>
  40468c:	mov	w25, w0
  404690:	cmp	w0, #0x3b
  404694:	b.eq	404688 <wcrtomb@plt+0x1948>  // b.none
  404698:	ldr	x0, [x24]
  40469c:	ldrh	w0, [x0, w25, sxtw #1]
  4046a0:	tbnz	w0, #13, 404688 <wcrtomb@plt+0x1948>
  4046a4:	cmn	w25, #0x1
  4046a8:	b.eq	405280 <wcrtomb@plt+0x2540>  // b.none
  4046ac:	ldp	x3, x0, [x19]
  4046b0:	ldr	x1, [x19, #16]
  4046b4:	cmp	x1, x0
  4046b8:	b.eq	404dd0 <wcrtomb@plt+0x2090>  // b.none
  4046bc:	add	x2, x1, x1, lsl #2
  4046c0:	add	x0, sp, #0xb0
  4046c4:	mov	w1, w25
  4046c8:	add	x22, x3, x2, lsl #3
  4046cc:	str	xzr, [x3, x2, lsl #3]
  4046d0:	str	xzr, [x22, #8]
  4046d4:	str	wzr, [x22, #16]
  4046d8:	strh	wzr, [x22, #20]
  4046dc:	bl	403e00 <wcrtomb@plt+0x10c0>
  4046e0:	tst	w0, #0xff
  4046e4:	b.eq	404728 <wcrtomb@plt+0x19e8>  // b.none
  4046e8:	ldr	w0, [sp, #176]
  4046ec:	sub	w0, w0, #0x4
  4046f0:	cmp	w0, #0x1
  4046f4:	b.ls	405464 <wcrtomb@plt+0x2724>  // b.plast
  4046f8:	mov	x1, #0x20                  	// #32
  4046fc:	add	x0, sp, #0xb0
  404700:	bl	4127d0 <wcrtomb@plt+0xfa90>
  404704:	str	x0, [x22]
  404708:	bl	4035c8 <wcrtomb@plt+0x888>
  40470c:	mov	w25, w0
  404710:	cmp	w0, #0x2c
  404714:	b.eq	404e80 <wcrtomb@plt+0x2140>  // b.none
  404718:	ldr	x0, [x22]
  40471c:	ldr	w1, [x0]
  404720:	cmp	w1, #0x2
  404724:	b.eq	404e14 <wcrtomb@plt+0x20d4>  // b.none
  404728:	cmp	w25, #0x21
  40472c:	b.eq	404e50 <wcrtomb@plt+0x2110>  // b.none
  404730:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  404734:	add	x23, x0, #0x8d8
  404738:	ldr	w0, [x0, #2264]
  40473c:	cmp	w0, #0x2
  404740:	b.eq	404760 <wcrtomb@plt+0x1a20>  // b.none
  404744:	and	w1, w25, #0xff
  404748:	strb	w1, [x22, #21]
  40474c:	add	w0, w25, #0x1
  404750:	cmp	w0, #0x7e
  404754:	b.ls	4047a8 <wcrtomb@plt+0x1a68>  // b.plast
  404758:	mov	w0, w1
  40475c:	bl	404080 <wcrtomb@plt+0x1340>
  404760:	sub	w1, w25, #0x3d
  404764:	cmp	w1, #0x3d
  404768:	b.hi	404744 <wcrtomb@plt+0x1a04>  // b.pmore
  40476c:	mov	x0, #0x1                   	// #1
  404770:	lsl	x0, x0, x1
  404774:	tst	x0, x21
  404778:	b.ne	405524 <wcrtomb@plt+0x27e4>  // b.any
  40477c:	tst	x0, x20
  404780:	b.eq	404744 <wcrtomb@plt+0x1a04>  // b.none
  404784:	ldr	x0, [x22, #8]
  404788:	cbz	x0, 404744 <wcrtomb@plt+0x1a04>
  40478c:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  404790:	add	x1, x1, #0xe38
  404794:	add	x1, x1, #0x115
  404798:	mov	w2, #0x5                   	// #5
  40479c:	mov	x0, #0x0                   	// #0
  4047a0:	bl	402c20 <dcgettext@plt>
  4047a4:	bl	4037b0 <wcrtomb@plt+0xa70>
  4047a8:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  4047ac:	add	x2, x2, #0xd38
  4047b0:	ldrh	w0, [x2, w0, uxtw #1]
  4047b4:	adr	x2, 4047c0 <wcrtomb@plt+0x1a80>
  4047b8:	add	x0, x2, w0, sxth #2
  4047bc:	br	x0
  4047c0:	ldr	x0, [x22, #8]
  4047c4:	cbnz	x0, 40478c <wcrtomb@plt+0x1a4c>
  4047c8:	bl	4035c8 <wcrtomb@plt+0x888>
  4047cc:	mov	w1, w0
  4047d0:	ldr	x3, [x24]
  4047d4:	ubfiz	x2, x1, #1, #8
  4047d8:	ldrh	w2, [x3, x2]
  4047dc:	tbz	w2, #11, 404eb4 <wcrtomb@plt+0x2174>
  4047e0:	ldr	w2, [x23]
  4047e4:	cmp	w2, #0x2
  4047e8:	b.eq	404eb4 <wcrtomb@plt+0x2174>  // b.none
  4047ec:	bl	403748 <wcrtomb@plt+0xa08>
  4047f0:	str	w0, [x22, #24]
  4047f4:	nop
  4047f8:	bl	404020 <wcrtomb@plt+0x12e0>
  4047fc:	ldr	x0, [x19, #16]
  404800:	add	x0, x0, #0x1
  404804:	str	x0, [x19, #16]
  404808:	b	404688 <wcrtomb@plt+0x1948>
  40480c:	bl	4035c8 <wcrtomb@plt+0x888>
  404810:	cmn	w0, #0x1
  404814:	b.eq	405588 <wcrtomb@plt+0x2848>  // b.none
  404818:	cmp	w0, #0x5c
  40481c:	b.eq	4052e0 <wcrtomb@plt+0x25a0>  // b.none
  404820:	ldr	w1, [x23]
  404824:	cmp	w1, #0x2
  404828:	b.eq	405588 <wcrtomb@plt+0x2848>  // b.none
  40482c:	bl	403600 <wcrtomb@plt+0x8c0>
  404830:	mov	w1, #0xa                   	// #10
  404834:	add	x0, x22, #0x18
  404838:	bl	4044c0 <wcrtomb@plt+0x1780>
  40483c:	b	4047fc <wcrtomb@plt+0x1abc>
  404840:	ldr	x23, [x19, #16]
  404844:	ldr	x22, [x26, #200]
  404848:	bl	403688 <wcrtomb@plt+0x948>
  40484c:	mov	x1, x23
  404850:	mov	x2, x0
  404854:	mov	x3, #0x0                   	// #0
  404858:	mov	x0, x22
  40485c:	bl	403440 <wcrtomb@plt+0x700>
  404860:	str	x0, [x26, #200]
  404864:	b	4047fc <wcrtomb@plt+0x1abc>
  404868:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  40486c:	add	x0, x26, #0xd8
  404870:	mov	w2, #0x1                   	// #1
  404874:	ldr	x1, [x1, #1136]
  404878:	bl	4038f0 <wcrtomb@plt+0xbb0>
  40487c:	str	x0, [x22, #24]
  404880:	b	4047fc <wcrtomb@plt+0x1abc>
  404884:	bl	403860 <wcrtomb@plt+0xb20>
  404888:	mov	x23, x0
  40488c:	bl	40a7d0 <wcrtomb@plt+0x7a90>
  404890:	ldrb	w1, [x0]
  404894:	cbz	w1, 4054b8 <wcrtomb@plt+0x2778>
  404898:	bl	412800 <wcrtomb@plt+0xfac0>
  40489c:	str	x0, [x22, #24]
  4048a0:	mov	x0, x23
  4048a4:	bl	40a8d8 <wcrtomb@plt+0x7b98>
  4048a8:	b	4047fc <wcrtomb@plt+0x1abc>
  4048ac:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  4048b0:	ldrb	w0, [x0, #1900]
  4048b4:	cbnz	w0, 404db4 <wcrtomb@plt+0x2074>
  4048b8:	bl	4035c8 <wcrtomb@plt+0x888>
  4048bc:	cmp	w0, #0xa
  4048c0:	ccmn	w0, #0x1, #0x4, ne  // ne = any
  4048c4:	b.ne	404818 <wcrtomb@plt+0x1ad8>  // b.any
  4048c8:	str	xzr, [x22, #32]
  4048cc:	b	4047fc <wcrtomb@plt+0x1abc>
  4048d0:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  4048d4:	add	x0, x26, #0xd0
  4048d8:	mov	w2, #0x0                   	// #0
  4048dc:	ldr	x1, [x1, #1128]
  4048e0:	bl	4038f0 <wcrtomb@plt+0xbb0>
  4048e4:	str	x0, [x22, #24]
  4048e8:	b	4047fc <wcrtomb@plt+0x1abc>
  4048ec:	ldr	x0, [x22]
  4048f0:	cbnz	x0, 4055c0 <wcrtomb@plt+0x2880>
  4048f4:	bl	403688 <wcrtomb@plt+0x948>
  4048f8:	mov	x23, x0
  4048fc:	ldrb	w0, [x0]
  404900:	cbz	w0, 405508 <wcrtomb@plt+0x27c8>
  404904:	ldr	x1, [x19, #16]
  404908:	mov	x2, x23
  40490c:	ldr	x0, [x26, #192]
  404910:	mov	x3, #0x0                   	// #0
  404914:	bl	403440 <wcrtomb@plt+0x700>
  404918:	str	x0, [x26, #192]
  40491c:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  404920:	ldrb	w0, [x1, #1901]
  404924:	cbz	w0, 4047fc <wcrtomb@plt+0x1abc>
  404928:	mov	x0, x23
  40492c:	bl	402990 <strdup@plt>
  404930:	str	x0, [x22, #24]
  404934:	b	4047fc <wcrtomb@plt+0x1abc>
  404938:	ldr	x0, [x22]
  40493c:	cbnz	x0, 4054ec <wcrtomb@plt+0x27ac>
  404940:	bl	403520 <wcrtomb@plt+0x7e0>
  404944:	cmp	w0, #0x6e
  404948:	b.eq	40523c <wcrtomb@plt+0x24fc>  // b.none
  40494c:	cmp	w0, #0xa
  404950:	ccmn	w0, #0x1, #0x4, ne  // ne = any
  404954:	b.eq	404688 <wcrtomb@plt+0x1948>  // b.none
  404958:	bl	403520 <wcrtomb@plt+0x7e0>
  40495c:	cmp	w0, #0xa
  404960:	ccmn	w0, #0x1, #0x4, ne  // ne = any
  404964:	b.ne	404958 <wcrtomb@plt+0x1c18>  // b.any
  404968:	b	404688 <wcrtomb@plt+0x1948>
  40496c:	ldr	x0, [x26, #184]
  404970:	cbz	x0, 4054d4 <wcrtomb@plt+0x2794>
  404974:	ldr	x0, [x22]
  404978:	cbnz	x0, 4055dc <wcrtomb@plt+0x289c>
  40497c:	bl	404020 <wcrtomb@plt+0x12e0>
  404980:	ldr	x2, [x26, #184]
  404984:	ldr	x4, [x19]
  404988:	ldp	x1, x0, [x2]
  40498c:	ldr	x3, [x19, #16]
  404990:	ldr	x22, [x2, #40]
  404994:	add	x1, x1, x1, lsl #2
  404998:	add	x1, x4, x1, lsl #3
  40499c:	str	x3, [x1, #24]
  4049a0:	bl	402ae0 <free@plt>
  4049a4:	str	x22, [x26, #184]
  4049a8:	b	4047fc <wcrtomb@plt+0x1abc>
  4049ac:	ldr	x1, [x19, #16]
  4049b0:	add	x3, x26, #0x78
  4049b4:	ldr	x0, [x26, #184]
  4049b8:	mov	x2, #0x0                   	// #0
  4049bc:	bl	403440 <wcrtomb@plt+0x700>
  4049c0:	str	x0, [x26, #184]
  4049c4:	ldrb	w1, [x22, #20]
  4049c8:	cmp	w1, #0x0
  4049cc:	cset	w0, eq  // eq = none
  4049d0:	strb	w0, [x22, #20]
  4049d4:	b	4047fc <wcrtomb@plt+0x1abc>
  4049d8:	bl	403520 <wcrtomb@plt+0x7e0>
  4049dc:	mov	w27, w0
  4049e0:	mov	w1, #0x0                   	// #0
  4049e4:	bl	403b18 <wcrtomb@plt+0xdd8>
  4049e8:	str	x0, [sp, #152]
  4049ec:	cbz	x0, 4054a0 <wcrtomb@plt+0x2760>
  4049f0:	bl	40a7d0 <wcrtomb@plt+0x7a90>
  4049f4:	mov	x25, x0
  4049f8:	ldr	x0, [sp, #152]
  4049fc:	bl	40a7d8 <wcrtomb@plt+0x7a98>
  404a00:	mov	x1, x0
  404a04:	mov	w2, #0x0                   	// #0
  404a08:	mov	x0, x25
  404a0c:	bl	4040d8 <wcrtomb@plt+0x1398>
  404a10:	mov	x23, x0
  404a14:	mov	w1, #0x0                   	// #0
  404a18:	mov	w0, w27
  404a1c:	bl	403b18 <wcrtomb@plt+0xdd8>
  404a20:	str	x0, [sp, #160]
  404a24:	cbz	x0, 4054a0 <wcrtomb@plt+0x2760>
  404a28:	bl	40a7d0 <wcrtomb@plt+0x7a90>
  404a2c:	mov	x27, x0
  404a30:	ldr	x0, [sp, #160]
  404a34:	str	x27, [sp, #128]
  404a38:	bl	40a7d8 <wcrtomb@plt+0x7a98>
  404a3c:	mov	x1, x0
  404a40:	mov	w2, #0x0                   	// #0
  404a44:	mov	x0, x27
  404a48:	bl	4040d8 <wcrtomb@plt+0x1398>
  404a4c:	str	x0, [sp, #96]
  404a50:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  404a54:	ldr	w0, [x1, #2260]
  404a58:	cmp	w0, #0x1
  404a5c:	b.gt	405058 <wcrtomb@plt+0x2318>
  404a60:	ldp	x0, x4, [x26, #24]
  404a64:	sub	x1, x4, x0
  404a68:	cmp	x1, #0xff
  404a6c:	b.ls	405374 <wcrtomb@plt+0x2634>  // b.plast
  404a70:	ldr	x1, [x26, #16]
  404a74:	add	x0, x0, #0x100
  404a78:	cmp	x0, x1
  404a7c:	b.eq	405394 <wcrtomb@plt+0x2654>  // b.none
  404a80:	ldr	x2, [x26, #48]
  404a84:	ldr	x3, [x26, #8]
  404a88:	add	x0, x0, x2
  404a8c:	bic	x0, x0, x2
  404a90:	str	x0, [x26, #24]
  404a94:	sub	x2, x0, x3
  404a98:	sub	x3, x4, x3
  404a9c:	cmp	x2, x3
  404aa0:	b.ls	404aac <wcrtomb@plt+0x1d6c>  // b.plast
  404aa4:	mov	x0, x4
  404aa8:	str	x4, [x26, #24]
  404aac:	str	x0, [x26, #16]
  404ab0:	ldr	x0, [sp, #96]
  404ab4:	cmp	x23, x0
  404ab8:	b.ne	4051f8 <wcrtomb@plt+0x24b8>  // b.any
  404abc:	mov	x0, #0x0                   	// #0
  404ac0:	strb	w0, [x1, x0]
  404ac4:	add	x0, x0, #0x1
  404ac8:	cmp	x0, #0x100
  404acc:	b.ne	404ac0 <wcrtomb@plt+0x1d80>  // b.any
  404ad0:	ldr	x2, [sp, #96]
  404ad4:	mov	x0, #0x0                   	// #0
  404ad8:	cbz	x2, 404b00 <wcrtomb@plt+0x1dc0>
  404adc:	nop
  404ae0:	ldr	x3, [sp, #128]
  404ae4:	ldrb	w2, [x25, x0]
  404ae8:	ldr	x4, [sp, #96]
  404aec:	ldrb	w3, [x3, x0]
  404af0:	add	x0, x0, #0x1
  404af4:	strb	w3, [x1, x2]
  404af8:	cmp	x4, x0
  404afc:	b.ne	404ae0 <wcrtomb@plt+0x1da0>  // b.any
  404b00:	str	x1, [x22, #24]
  404b04:	bl	404020 <wcrtomb@plt+0x12e0>
  404b08:	ldr	x0, [sp, #152]
  404b0c:	bl	40a8d8 <wcrtomb@plt+0x7b98>
  404b10:	ldr	x0, [sp, #160]
  404b14:	bl	40a8d8 <wcrtomb@plt+0x7b98>
  404b18:	b	4047fc <wcrtomb@plt+0x1abc>
  404b1c:	bl	403688 <wcrtomb@plt+0x948>
  404b20:	mov	x22, x0
  404b24:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  404b28:	add	x0, x0, #0xcc8
  404b2c:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  404b30:	add	x1, x1, #0xcd0
  404b34:	ldrb	w2, [x22]
  404b38:	cmp	w2, #0x0
  404b3c:	csel	x0, x0, x22, eq  // eq = none
  404b40:	bl	4028a0 <strverscmp@plt>
  404b44:	cmp	w0, #0x0
  404b48:	b.gt	405564 <wcrtomb@plt+0x2824>
  404b4c:	mov	x0, x22
  404b50:	bl	402ae0 <free@plt>
  404b54:	str	wzr, [x23]
  404b58:	b	404688 <wcrtomb@plt+0x1948>
  404b5c:	bl	403520 <wcrtomb@plt+0x7e0>
  404b60:	mov	w25, w0
  404b64:	mov	w1, #0x1                   	// #1
  404b68:	bl	403b18 <wcrtomb@plt+0xdd8>
  404b6c:	str	x0, [sp, #128]
  404b70:	cbz	x0, 405614 <wcrtomb@plt+0x28d4>
  404b74:	mov	w0, w25
  404b78:	mov	w1, #0x0                   	// #0
  404b7c:	bl	403b18 <wcrtomb@plt+0xdd8>
  404b80:	mov	x25, x0
  404b84:	cbz	x0, 405614 <wcrtomb@plt+0x28d4>
  404b88:	ldp	x0, x3, [x26, #24]
  404b8c:	sub	x1, x3, x0
  404b90:	cmp	x1, #0x27
  404b94:	b.ls	4052b0 <wcrtomb@plt+0x2570>  // b.plast
  404b98:	ldr	x27, [x26, #16]
  404b9c:	add	x0, x0, #0x28
  404ba0:	cmp	x0, x27
  404ba4:	b.eq	4052d0 <wcrtomb@plt+0x2590>  // b.none
  404ba8:	ldr	x1, [x26, #48]
  404bac:	ldr	x2, [x26, #8]
  404bb0:	add	x0, x0, x1
  404bb4:	bic	x1, x0, x1
  404bb8:	str	x1, [x26, #24]
  404bbc:	sub	x0, x1, x2
  404bc0:	sub	x2, x3, x2
  404bc4:	cmp	x0, x2
  404bc8:	b.ls	404bd4 <wcrtomb@plt+0x1e94>  // b.plast
  404bcc:	mov	x1, x3
  404bd0:	str	x3, [x26, #24]
  404bd4:	str	x27, [x22, #24]
  404bd8:	mov	x0, x25
  404bdc:	str	x1, [x26, #16]
  404be0:	bl	40a7d0 <wcrtomb@plt+0x7a90>
  404be4:	mov	x3, x0
  404be8:	mov	x0, x25
  404bec:	str	x3, [sp, #96]
  404bf0:	bl	40a7d8 <wcrtomb@plt+0x7a98>
  404bf4:	mov	x1, x0
  404bf8:	ldrb	w2, [x27, #32]
  404bfc:	mov	x28, x0
  404c00:	ldr	x3, [sp, #96]
  404c04:	and	w2, w2, #0xf
  404c08:	strb	w2, [x27, #32]
  404c0c:	mov	x0, x3
  404c10:	bl	4127d0 <wcrtomb@plt+0xfa90>
  404c14:	str	x0, [sp, #96]
  404c18:	mov	x1, x28
  404c1c:	mov	w2, #0x1                   	// #1
  404c20:	bl	4040d8 <wcrtomb@plt+0x1398>
  404c24:	ldr	x5, [sp, #96]
  404c28:	add	x6, x5, x0
  404c2c:	cmp	x5, x6
  404c30:	b.cs	4053b0 <wcrtomb@plt+0x2670>  // b.hs, b.nlast
  404c34:	mov	x3, x5
  404c38:	add	x28, sp, #0xd0
  404c3c:	mov	w8, #0x0                   	// #0
  404c40:	mov	w2, #0x0                   	// #0
  404c44:	b	404c5c <wcrtomb@plt+0x1f1c>
  404c48:	cmp	w1, #0x26
  404c4c:	b.eq	404ec8 <wcrtomb@plt+0x2188>  // b.none
  404c50:	mov	x3, x4
  404c54:	cmp	x6, x3
  404c58:	b.ls	404ce8 <wcrtomb@plt+0x1fa8>  // b.plast
  404c5c:	mov	x4, x3
  404c60:	ldrb	w1, [x4], #1
  404c64:	cmp	w1, #0x5c
  404c68:	b.ne	404c48 <wcrtomb@plt+0x1f08>  // b.any
  404c6c:	sub	x1, x3, x5
  404c70:	mov	x0, x5
  404c74:	stp	x3, x6, [sp, #96]
  404c78:	str	w8, [sp, #112]
  404c7c:	str	x4, [sp, #120]
  404c80:	bl	403380 <wcrtomb@plt+0x640>
  404c84:	ldp	x3, x6, [sp, #96]
  404c88:	str	x0, [x28, #24]
  404c8c:	ldr	x4, [sp, #120]
  404c90:	ldr	w8, [sp, #112]
  404c94:	cmp	x6, x4
  404c98:	b.eq	405044 <wcrtomb@plt+0x2304>  // b.none
  404c9c:	ldr	w1, [x23]
  404ca0:	cmp	w1, #0x2
  404ca4:	ldrb	w1, [x3, #1]
  404ca8:	b.eq	405214 <wcrtomb@plt+0x24d4>  // b.none
  404cac:	cmp	w1, #0x55
  404cb0:	b.eq	4053a4 <wcrtomb@plt+0x2664>  // b.none
  404cb4:	b.hi	404f3c <wcrtomb@plt+0x21fc>  // b.pmore
  404cb8:	cmp	w1, #0x45
  404cbc:	b.eq	4052ec <wcrtomb@plt+0x25ac>  // b.none
  404cc0:	b.ls	404f08 <wcrtomb@plt+0x21c8>  // b.plast
  404cc4:	cmp	w1, #0x4c
  404cc8:	b.ne	405224 <wcrtomb@plt+0x24e4>  // b.any
  404ccc:	mov	w8, #0x2                   	// #2
  404cd0:	mov	w2, w8
  404cd4:	add	x3, x3, #0x2
  404cd8:	mov	x28, x0
  404cdc:	mov	x5, x3
  404ce0:	cmp	x6, x3
  404ce4:	b.hi	404c5c <wcrtomb@plt+0x1f1c>  // b.pmore
  404ce8:	cmp	x6, x5
  404cec:	b.ls	404d04 <wcrtomb@plt+0x1fc4>  // b.plast
  404cf0:	sub	x1, x6, x5
  404cf4:	mov	x0, x5
  404cf8:	bl	403380 <wcrtomb@plt+0x640>
  404cfc:	str	x0, [x28, #24]
  404d00:	mov	x28, x0
  404d04:	str	xzr, [x28, #24]
  404d08:	mov	x0, x25
  404d0c:	mov	w25, #0x0                   	// #0
  404d10:	ldr	x1, [sp, #232]
  404d14:	str	x1, [x27, #8]
  404d18:	bl	40a8d8 <wcrtomb@plt+0x7b98>
  404d1c:	ldr	x27, [x22, #24]
  404d20:	ldrb	w0, [x27, #32]
  404d24:	stp	xzr, xzr, [x27, #16]
  404d28:	and	w0, w0, #0xfffffff0
  404d2c:	strb	w0, [x27, #32]
  404d30:	bl	4035c8 <wcrtomb@plt+0x888>
  404d34:	mov	w1, w0
  404d38:	cmp	w0, #0x65
  404d3c:	b.eq	404fe4 <wcrtomb@plt+0x22a4>  // b.none
  404d40:	b.gt	404f58 <wcrtomb@plt+0x2218>
  404d44:	cmp	w0, #0x39
  404d48:	b.gt	404fb4 <wcrtomb@plt+0x2274>
  404d4c:	cmp	w0, #0x2f
  404d50:	b.gt	405338 <wcrtomb@plt+0x25f8>
  404d54:	cmp	w0, #0xd
  404d58:	b.eq	405364 <wcrtomb@plt+0x2624>  // b.none
  404d5c:	b.le	404f88 <wcrtomb@plt+0x2248>
  404d60:	cmp	w0, #0x23
  404d64:	b.ne	404f98 <wcrtomb@plt+0x2258>  // b.any
  404d68:	mov	w0, w1
  404d6c:	bl	403600 <wcrtomb@plt+0x8c0>
  404d70:	ldr	x23, [x22, #24]
  404d74:	mov	w1, w25
  404d78:	ldr	x25, [sp, #128]
  404d7c:	ldrb	w2, [x23, #32]
  404d80:	mov	x0, x25
  404d84:	ubfx	x2, x2, #4, #4
  404d88:	add	w2, w2, #0x1
  404d8c:	bl	409370 <wcrtomb@plt+0x6630>
  404d90:	str	x0, [x23]
  404d94:	mov	x0, x25
  404d98:	bl	40a8d8 <wcrtomb@plt+0x7b98>
  404d9c:	ldr	x0, [x22, #24]
  404da0:	ldrb	w0, [x0, #32]
  404da4:	tbz	w0, #3, 4047fc <wcrtomb@plt+0x1abc>
  404da8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  404dac:	ldrb	w0, [x0, #1900]
  404db0:	cbz	w0, 4047fc <wcrtomb@plt+0x1abc>
  404db4:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  404db8:	add	x1, x1, #0xe38
  404dbc:	add	x1, x1, #0x334
  404dc0:	mov	w2, #0x5                   	// #5
  404dc4:	mov	x0, #0x0                   	// #0
  404dc8:	bl	402c20 <dcgettext@plt>
  404dcc:	bl	4037b0 <wcrtomb@plt+0xa70>
  404dd0:	add	x1, x1, #0x28
  404dd4:	mov	x0, #0x28                  	// #40
  404dd8:	str	x1, [x19, #8]
  404ddc:	umulh	x2, x1, x0
  404de0:	mul	x0, x1, x0
  404de4:	cmp	x2, #0x0
  404de8:	cset	x2, ne  // ne = any
  404dec:	tbnz	x0, #63, 405480 <wcrtomb@plt+0x2740>
  404df0:	cbnz	x2, 405480 <wcrtomb@plt+0x2740>
  404df4:	add	x1, x1, x1, lsl #2
  404df8:	mov	x0, x3
  404dfc:	lsl	x1, x1, #3
  404e00:	bl	412658 <wcrtomb@plt+0xf918>
  404e04:	mov	x3, x0
  404e08:	str	x0, [x19]
  404e0c:	ldr	x1, [x19, #16]
  404e10:	b	4046bc <wcrtomb@plt+0x197c>
  404e14:	ldr	x0, [x0, #8]
  404e18:	cbnz	x0, 404728 <wcrtomb@plt+0x19e8>
  404e1c:	ldr	x0, [x22, #8]
  404e20:	cbz	x0, 405548 <wcrtomb@plt+0x2808>
  404e24:	ldr	w0, [x0]
  404e28:	cmp	w0, #0x1
  404e2c:	b.ne	405548 <wcrtomb@plt+0x2808>  // b.any
  404e30:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  404e34:	add	x23, x0, #0x8d8
  404e38:	ldr	w0, [x0, #2264]
  404e3c:	cmp	w0, #0x2
  404e40:	b.eq	405548 <wcrtomb@plt+0x2808>  // b.none
  404e44:	cmp	w25, #0x21
  404e48:	b.ne	404744 <wcrtomb@plt+0x1a04>  // b.any
  404e4c:	nop
  404e50:	mov	w0, #0x1                   	// #1
  404e54:	strb	w0, [x22, #20]
  404e58:	bl	4035c8 <wcrtomb@plt+0x888>
  404e5c:	mov	w25, w0
  404e60:	cmp	w0, #0x21
  404e64:	b.ne	404730 <wcrtomb@plt+0x19f0>  // b.any
  404e68:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  404e6c:	add	x1, x1, #0xe38
  404e70:	mov	w2, #0x5                   	// #5
  404e74:	mov	x0, #0x0                   	// #0
  404e78:	bl	402c20 <dcgettext@plt>
  404e7c:	bl	4037b0 <wcrtomb@plt+0xa70>
  404e80:	bl	4035c8 <wcrtomb@plt+0x888>
  404e84:	mov	w1, w0
  404e88:	add	x0, sp, #0xb0
  404e8c:	bl	403e00 <wcrtomb@plt+0x10c0>
  404e90:	tst	w0, #0xff
  404e94:	b.eq	40552c <wcrtomb@plt+0x27ec>  // b.none
  404e98:	mov	x1, #0x20                  	// #32
  404e9c:	add	x0, sp, #0xb0
  404ea0:	bl	4127d0 <wcrtomb@plt+0xfa90>
  404ea4:	str	x0, [x22, #8]
  404ea8:	bl	4035c8 <wcrtomb@plt+0x888>
  404eac:	mov	w25, w0
  404eb0:	b	404718 <wcrtomb@plt+0x19d8>
  404eb4:	mov	w0, #0xffffffff            	// #-1
  404eb8:	str	w0, [x22, #24]
  404ebc:	mov	w0, w1
  404ec0:	bl	403600 <wcrtomb@plt+0x8c0>
  404ec4:	b	4047f8 <wcrtomb@plt+0x1ab8>
  404ec8:	sub	x1, x3, x5
  404ecc:	mov	x0, x5
  404ed0:	str	x6, [sp, #96]
  404ed4:	str	w8, [sp, #104]
  404ed8:	str	x4, [sp, #112]
  404edc:	bl	403380 <wcrtomb@plt+0x640>
  404ee0:	ldr	x4, [sp, #112]
  404ee4:	str	x0, [x28, #24]
  404ee8:	ldr	w8, [sp, #104]
  404eec:	mov	x28, x0
  404ef0:	mov	x3, x4
  404ef4:	mov	x5, x4
  404ef8:	mov	w2, w8
  404efc:	str	wzr, [x0, #16]
  404f00:	ldr	x6, [sp, #96]
  404f04:	b	404c54 <wcrtomb@plt+0x1f14>
  404f08:	sub	w4, w1, #0x30
  404f0c:	and	w2, w4, #0xff
  404f10:	cmp	w2, #0x9
  404f14:	b.hi	405224 <wcrtomb@plt+0x24e4>  // b.pmore
  404f18:	ldrb	w1, [x27, #32]
  404f1c:	mov	w2, w8
  404f20:	str	w4, [x0, #16]
  404f24:	ubfx	x5, x1, #4, #4
  404f28:	cmp	w4, w5
  404f2c:	b.le	404cd4 <wcrtomb@plt+0x1f94>
  404f30:	bfi	w1, w4, #4, #4
  404f34:	strb	w1, [x27, #32]
  404f38:	b	404cd4 <wcrtomb@plt+0x1f94>
  404f3c:	cmp	w1, #0x6c
  404f40:	orr	w2, w8, #0x8
  404f44:	b.eq	404cd4 <wcrtomb@plt+0x1f94>  // b.none
  404f48:	cmp	w1, #0x75
  404f4c:	orr	w2, w8, #0x4
  404f50:	b.eq	404cd4 <wcrtomb@plt+0x1f94>  // b.none
  404f54:	b	405224 <wcrtomb@plt+0x24e4>
  404f58:	cmp	w0, #0x70
  404f5c:	b.eq	4052f8 <wcrtomb@plt+0x25b8>  // b.none
  404f60:	b.le	40500c <wcrtomb@plt+0x22cc>
  404f64:	cmp	w0, #0x77
  404f68:	b.ne	405000 <wcrtomb@plt+0x22c0>  // b.any
  404f6c:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  404f70:	add	x0, x26, #0xd8
  404f74:	mov	w2, #0x1                   	// #1
  404f78:	ldr	x1, [x1, #1136]
  404f7c:	bl	4038f0 <wcrtomb@plt+0xbb0>
  404f80:	str	x0, [x27, #24]
  404f84:	b	404d70 <wcrtomb@plt+0x2030>
  404f88:	cmn	w0, #0x1
  404f8c:	b.eq	404d70 <wcrtomb@plt+0x2030>  // b.none
  404f90:	cmp	w0, #0xa
  404f94:	b.eq	404d70 <wcrtomb@plt+0x2030>  // b.none
  404f98:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  404f9c:	add	x1, x1, #0xe38
  404fa0:	add	x1, x1, #0x180
  404fa4:	mov	w2, #0x5                   	// #5
  404fa8:	mov	x0, #0x0                   	// #0
  404fac:	bl	402c20 <dcgettext@plt>
  404fb0:	bl	4037b0 <wcrtomb@plt+0xa70>
  404fb4:	cmp	w0, #0x49
  404fb8:	b.eq	405324 <wcrtomb@plt+0x25e4>  // b.none
  404fbc:	cmp	w0, #0x4d
  404fc0:	b.ne	405038 <wcrtomb@plt+0x22f8>  // b.any
  404fc4:	ldr	w0, [x23]
  404fc8:	cmp	w0, #0x2
  404fcc:	b.eq	404f98 <wcrtomb@plt+0x2258>  // b.none
  404fd0:	bl	4035c8 <wcrtomb@plt+0x888>
  404fd4:	orr	w25, w25, #0x4
  404fd8:	mov	w1, w0
  404fdc:	cmp	w0, #0x65
  404fe0:	b.ne	404d40 <wcrtomb@plt+0x2000>  // b.any
  404fe4:	ldr	w0, [x23]
  404fe8:	cmp	w0, #0x2
  404fec:	b.eq	404f98 <wcrtomb@plt+0x2258>  // b.none
  404ff0:	ldrb	w0, [x27, #32]
  404ff4:	orr	w0, w0, #0x8
  404ff8:	strb	w0, [x27, #32]
  404ffc:	b	404d30 <wcrtomb@plt+0x1ff0>
  405000:	cmp	w0, #0x7d
  405004:	b.eq	404d68 <wcrtomb@plt+0x2028>  // b.none
  405008:	b	404f98 <wcrtomb@plt+0x2258>
  40500c:	cmp	w0, #0x69
  405010:	b.eq	405324 <wcrtomb@plt+0x25e4>  // b.none
  405014:	cmp	w0, #0x6d
  405018:	b.eq	404fc4 <wcrtomb@plt+0x2284>  // b.none
  40501c:	cmp	w0, #0x67
  405020:	b.ne	404f98 <wcrtomb@plt+0x2258>  // b.any
  405024:	ldrb	w0, [x27, #32]
  405028:	tbnz	w0, #0, 405484 <wcrtomb@plt+0x2744>
  40502c:	orr	w0, w0, #0x1
  405030:	strb	w0, [x27, #32]
  405034:	b	404d30 <wcrtomb@plt+0x1ff0>
  405038:	cmp	w0, #0x3b
  40503c:	b.eq	404d70 <wcrtomb@plt+0x2030>  // b.none
  405040:	b	404f98 <wcrtomb@plt+0x2258>
  405044:	ldr	x1, [x0, #8]
  405048:	mov	w2, w8
  40504c:	add	x1, x1, #0x1
  405050:	str	x1, [x0, #8]
  405054:	b	404cd4 <wcrtomb@plt+0x1f94>
  405058:	mov	x0, x23
  40505c:	mov	x1, #0x8                   	// #8
  405060:	bl	412790 <wcrtomb@plt+0xfa50>
  405064:	str	x0, [sp, #136]
  405068:	str	xzr, [sp, #208]
  40506c:	cbz	x23, 405418 <wcrtomb@plt+0x26d8>
  405070:	sub	x28, x0, #0x8
  405074:	mov	x27, #0x0                   	// #0
  405078:	str	xzr, [sp, #120]
  40507c:	nop
  405080:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  405084:	add	x0, x0, #0x8d4
  405088:	ldr	w0, [x0]
  40508c:	cmp	w0, #0x1
  405090:	b.eq	4050b4 <wcrtomb@plt+0x2374>  // b.none
  405094:	add	x1, x25, x27
  405098:	add	x3, sp, #0xd0
  40509c:	sub	x2, x23, x27
  4050a0:	mov	x0, #0x0                   	// #0
  4050a4:	bl	412878 <wcrtomb@plt+0xfb38>
  4050a8:	sub	x1, x0, #0x1
  4050ac:	cmn	x1, #0x4
  4050b0:	b.ls	4050b8 <wcrtomb@plt+0x2378>  // b.plast
  4050b4:	mov	x0, #0x1                   	// #1
  4050b8:	ldr	x1, [sp, #120]
  4050bc:	add	x27, x27, x0
  4050c0:	cmp	x23, x27
  4050c4:	add	x1, x1, #0x1
  4050c8:	str	x1, [sp, #144]
  4050cc:	str	x0, [x28, x1, lsl #3]
  4050d0:	b.ls	4050e0 <wcrtomb@plt+0x23a0>  // b.plast
  4050d4:	ldr	x0, [sp, #144]
  4050d8:	str	x0, [sp, #120]
  4050dc:	b	405080 <wcrtomb@plt+0x2340>
  4050e0:	ldr	x0, [sp, #144]
  4050e4:	mov	x1, #0x8                   	// #8
  4050e8:	str	xzr, [sp, #208]
  4050ec:	lsl	x0, x0, #1
  4050f0:	add	x0, x0, #0x1
  4050f4:	bl	412790 <wcrtomb@plt+0xfa50>
  4050f8:	str	x0, [x22, #24]
  4050fc:	str	x0, [sp, #168]
  405100:	ldr	x0, [sp, #96]
  405104:	cbz	x0, 4051f8 <wcrtomb@plt+0x24b8>
  405108:	mov	x23, #0x0                   	// #0
  40510c:	mov	x22, #0x0                   	// #0
  405110:	ldr	x27, [sp, #168]
  405114:	b	405128 <wcrtomb@plt+0x23e8>
  405118:	ldr	x0, [sp, #96]
  40511c:	add	x27, x27, #0x10
  405120:	cmp	x0, x23
  405124:	b.ls	4051f8 <wcrtomb@plt+0x24b8>  // b.plast
  405128:	ldr	x0, [sp, #136]
  40512c:	ldr	x28, [x0, x22, lsl #3]
  405130:	ldr	x0, [sp, #128]
  405134:	add	x0, x0, x23
  405138:	str	x0, [sp, #104]
  40513c:	add	x0, x28, #0x1
  405140:	bl	4127c8 <wcrtomb@plt+0xfa88>
  405144:	str	x0, [x27]
  405148:	mov	x1, x25
  40514c:	mov	x2, x28
  405150:	str	x0, [sp, #112]
  405154:	bl	402650 <memcpy@plt>
  405158:	add	x25, x25, x28
  40515c:	ldr	x3, [sp, #112]
  405160:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  405164:	add	x0, x0, #0x8d4
  405168:	strb	wzr, [x3, x28]
  40516c:	ldr	w0, [x0]
  405170:	cmp	w0, #0x1
  405174:	b.eq	40519c <wcrtomb@plt+0x245c>  // b.none
  405178:	ldp	x0, x1, [sp, #96]
  40517c:	add	x3, sp, #0xd0
  405180:	sub	x2, x0, x23
  405184:	mov	x0, #0x0                   	// #0
  405188:	bl	412878 <wcrtomb@plt+0xfb38>
  40518c:	mov	x2, x0
  405190:	sub	x0, x0, #0x1
  405194:	cmn	x0, #0x4
  405198:	b.ls	405580 <wcrtomb@plt+0x2840>  // b.plast
  40519c:	mov	x0, #0x2                   	// #2
  4051a0:	mov	x2, #0x1                   	// #1
  4051a4:	str	x2, [sp, #112]
  4051a8:	bl	4127c8 <wcrtomb@plt+0xfa88>
  4051ac:	ldp	x1, x2, [sp, #104]
  4051b0:	str	x0, [x27, #8]
  4051b4:	mov	x28, x0
  4051b8:	str	x2, [sp, #104]
  4051bc:	bl	402650 <memcpy@plt>
  4051c0:	ldr	x2, [sp, #104]
  4051c4:	ldr	x0, [sp, #120]
  4051c8:	add	x23, x23, x2
  4051cc:	strb	wzr, [x28, x2]
  4051d0:	cmp	x22, x0
  4051d4:	add	x22, x22, #0x1
  4051d8:	b.ne	405118 <wcrtomb@plt+0x23d8>  // b.any
  4051dc:	ldr	x0, [sp, #144]
  4051e0:	ldr	x1, [sp, #168]
  4051e4:	add	x0, x1, x0, lsl #4
  4051e8:	str	xzr, [x0]
  4051ec:	ldr	x0, [sp, #96]
  4051f0:	cmp	x0, x23
  4051f4:	b.eq	404b04 <wcrtomb@plt+0x1dc4>  // b.none
  4051f8:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  4051fc:	add	x1, x1, #0xe38
  405200:	add	x1, x1, #0x232
  405204:	mov	w2, #0x5                   	// #5
  405208:	mov	x0, #0x0                   	// #0
  40520c:	bl	402c20 <dcgettext@plt>
  405210:	bl	4037b0 <wcrtomb@plt+0xa70>
  405214:	ldr	x4, [x24]
  405218:	ubfiz	x2, x1, #1, #8
  40521c:	ldrh	w2, [x4, x2]
  405220:	tbnz	w2, #11, 404cac <wcrtomb@plt+0x1f6c>
  405224:	strb	w1, [x3]
  405228:	mov	w2, w8
  40522c:	ldr	x1, [x0, #8]
  405230:	add	x1, x1, #0x1
  405234:	str	x1, [x0, #8]
  405238:	b	404cd4 <wcrtomb@plt+0x1f94>
  40523c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  405240:	ldrb	w0, [x0, #1080]
  405244:	cbz	w0, 404958 <wcrtomb@plt+0x1c18>
  405248:	ldr	x0, [x26, #128]
  40524c:	cmp	x0, #0x1
  405250:	b.hi	404958 <wcrtomb@plt+0x1c18>  // b.pmore
  405254:	ldr	x0, [x26, #88]
  405258:	add	x1, x26, #0x58
  40525c:	cbz	x0, 405430 <wcrtomb@plt+0x26f0>
  405260:	ldr	x1, [x1, #8]
  405264:	add	x0, x0, #0x2
  405268:	cmp	x1, x0
  40526c:	b.ne	404958 <wcrtomb@plt+0x1c18>  // b.any
  405270:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  405274:	mov	w1, #0x1                   	// #1
  405278:	strb	w1, [x0, #1864]
  40527c:	b	404958 <wcrtomb@plt+0x1c18>
  405280:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  405284:	ldr	w0, [x0, #2264]
  405288:	cmp	w0, #0x2
  40528c:	b.eq	4053b8 <wcrtomb@plt+0x2678>  // b.none
  405290:	mov	x0, x19
  405294:	ldp	x19, x20, [sp, #16]
  405298:	ldp	x21, x22, [sp, #32]
  40529c:	ldp	x23, x24, [sp, #48]
  4052a0:	ldp	x25, x26, [sp, #64]
  4052a4:	ldp	x27, x28, [sp, #80]
  4052a8:	ldp	x29, x30, [sp], #240
  4052ac:	ret
  4052b0:	mov	x0, x26
  4052b4:	mov	x1, #0x28                  	// #40
  4052b8:	bl	412a70 <_obstack_newchunk@@Base>
  4052bc:	ldp	x0, x3, [x26, #24]
  4052c0:	ldr	x27, [x26, #16]
  4052c4:	add	x0, x0, #0x28
  4052c8:	cmp	x0, x27
  4052cc:	b.ne	404ba8 <wcrtomb@plt+0x1e68>  // b.any
  4052d0:	ldrb	w1, [x26, #80]
  4052d4:	orr	w1, w1, #0x2
  4052d8:	strb	w1, [x26, #80]
  4052dc:	b	404ba8 <wcrtomb@plt+0x1e68>
  4052e0:	bl	403520 <wcrtomb@plt+0x7e0>
  4052e4:	mov	w1, w0
  4052e8:	b	404834 <wcrtomb@plt+0x1af4>
  4052ec:	mov	w8, #0x0                   	// #0
  4052f0:	mov	w2, #0x0                   	// #0
  4052f4:	b	404cd4 <wcrtomb@plt+0x1f94>
  4052f8:	ldrb	w0, [x27, #32]
  4052fc:	tst	w0, #0x6
  405300:	b.ne	4055a4 <wcrtomb@plt+0x2864>  // b.any
  405304:	ubfx	x1, x0, #3, #1
  405308:	ubfx	x2, x0, #1, #2
  40530c:	mov	w3, #0x1                   	// #1
  405310:	lsl	w1, w3, w1
  405314:	orr	w1, w1, w2
  405318:	bfi	w0, w1, #1, #2
  40531c:	strb	w0, [x27, #32]
  405320:	b	404d30 <wcrtomb@plt+0x1ff0>
  405324:	ldr	w0, [x23]
  405328:	cmp	w0, #0x2
  40532c:	b.eq	404f98 <wcrtomb@plt+0x2258>  // b.none
  405330:	orr	w25, w25, #0x2
  405334:	b	404d30 <wcrtomb@plt+0x1ff0>
  405338:	ldr	x1, [x27, #16]
  40533c:	cbnz	x1, 4055f8 <wcrtomb@plt+0x28b8>
  405340:	bl	403748 <wcrtomb@plt+0xa08>
  405344:	str	x0, [x27, #16]
  405348:	cbnz	x0, 404d30 <wcrtomb@plt+0x1ff0>
  40534c:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  405350:	add	x1, x1, #0xe38
  405354:	add	x1, x1, #0x205
  405358:	mov	w2, #0x5                   	// #5
  40535c:	bl	402c20 <dcgettext@plt>
  405360:	bl	4037b0 <wcrtomb@plt+0xa70>
  405364:	bl	403520 <wcrtomb@plt+0x7e0>
  405368:	cmp	w0, #0xa
  40536c:	b.eq	404d70 <wcrtomb@plt+0x2030>  // b.none
  405370:	b	404f98 <wcrtomb@plt+0x2258>
  405374:	mov	x0, x26
  405378:	mov	x1, #0x100                 	// #256
  40537c:	bl	412a70 <_obstack_newchunk@@Base>
  405380:	ldp	x0, x4, [x26, #24]
  405384:	ldr	x1, [x26, #16]
  405388:	add	x0, x0, #0x100
  40538c:	cmp	x0, x1
  405390:	b.ne	404a80 <wcrtomb@plt+0x1d40>  // b.any
  405394:	ldrb	w2, [x26, #80]
  405398:	orr	w2, w2, #0x2
  40539c:	strb	w2, [x26, #80]
  4053a0:	b	404a80 <wcrtomb@plt+0x1d40>
  4053a4:	mov	w8, #0x1                   	// #1
  4053a8:	mov	w2, w8
  4053ac:	b	404cd4 <wcrtomb@plt+0x1f94>
  4053b0:	add	x28, sp, #0xd0
  4053b4:	b	404d04 <wcrtomb@plt+0x1fc4>
  4053b8:	ldr	x0, [x26, #168]
  4053bc:	cbz	x0, 405290 <wcrtomb@plt+0x2550>
  4053c0:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  4053c4:	add	x1, x1, #0xe38
  4053c8:	add	x1, x1, #0x2e7
  4053cc:	mov	w2, #0x5                   	// #5
  4053d0:	mov	x0, #0x0                   	// #0
  4053d4:	bl	402c20 <dcgettext@plt>
  4053d8:	bl	4037b0 <wcrtomb@plt+0xa70>
  4053dc:	mov	x1, #0x18                  	// #24
  4053e0:	mov	x0, #0x1                   	// #1
  4053e4:	bl	412790 <wcrtomb@plt+0xfa50>
  4053e8:	mov	x19, x0
  4053ec:	adrp	x4, 402000 <mbrtowc@plt-0x640>
  4053f0:	mov	x0, x26
  4053f4:	add	x4, x4, #0xae0
  4053f8:	adrp	x3, 412000 <wcrtomb@plt+0xf2c0>
  4053fc:	stp	xzr, xzr, [x19]
  405400:	add	x3, x3, #0x7c8
  405404:	mov	x2, #0x0                   	// #0
  405408:	str	xzr, [x19, #16]
  40540c:	mov	x1, #0x0                   	// #0
  405410:	bl	412a40 <_obstack_begin@@Base>
  405414:	b	40464c <wcrtomb@plt+0x190c>
  405418:	mov	x1, #0x8                   	// #8
  40541c:	mov	x0, #0x1                   	// #1
  405420:	str	xzr, [sp, #208]
  405424:	bl	412790 <wcrtomb@plt+0xfa50>
  405428:	str	x0, [x22, #24]
  40542c:	b	4051e8 <wcrtomb@plt+0x24a8>
  405430:	ldr	x0, [x1, #24]
  405434:	cbz	x0, 404958 <wcrtomb@plt+0x1c18>
  405438:	bl	402710 <ftell@plt>
  40543c:	cmp	x0, #0x2
  405440:	b.ne	404958 <wcrtomb@plt+0x1c18>  // b.any
  405444:	b	405270 <wcrtomb@plt+0x2530>
  405448:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  40544c:	add	x1, x1, #0xe38
  405450:	add	x1, x1, #0x105
  405454:	mov	w2, #0x5                   	// #5
  405458:	mov	x0, #0x0                   	// #0
  40545c:	bl	402c20 <dcgettext@plt>
  405460:	bl	4037b0 <wcrtomb@plt+0xa70>
  405464:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  405468:	add	x1, x1, #0xe38
  40546c:	add	x1, x1, #0x1d
  405470:	mov	w2, #0x5                   	// #5
  405474:	mov	x0, #0x0                   	// #0
  405478:	bl	402c20 <dcgettext@plt>
  40547c:	bl	4037b0 <wcrtomb@plt+0xa70>
  405480:	bl	412830 <wcrtomb@plt+0xfaf0>
  405484:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  405488:	add	x1, x1, #0xe38
  40548c:	add	x1, x1, #0x1ba
  405490:	mov	w2, #0x5                   	// #5
  405494:	mov	x0, #0x0                   	// #0
  405498:	bl	402c20 <dcgettext@plt>
  40549c:	bl	4037b0 <wcrtomb@plt+0xa70>
  4054a0:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  4054a4:	add	x1, x1, #0xe38
  4054a8:	add	x1, x1, #0x167
  4054ac:	mov	w2, #0x5                   	// #5
  4054b0:	bl	402c20 <dcgettext@plt>
  4054b4:	bl	4037b0 <wcrtomb@plt+0xa70>
  4054b8:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  4054bc:	add	x1, x1, #0xe38
  4054c0:	add	x1, x1, #0x35c
  4054c4:	mov	w2, #0x5                   	// #5
  4054c8:	mov	x0, #0x0                   	// #0
  4054cc:	bl	402c20 <dcgettext@plt>
  4054d0:	bl	4037b0 <wcrtomb@plt+0xa70>
  4054d4:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  4054d8:	add	x1, x1, #0xe38
  4054dc:	add	x1, x1, #0x56
  4054e0:	mov	w2, #0x5                   	// #5
  4054e4:	bl	402c20 <dcgettext@plt>
  4054e8:	bl	4037b0 <wcrtomb@plt+0xa70>
  4054ec:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  4054f0:	add	x1, x1, #0xe38
  4054f4:	add	x1, x1, #0xe1
  4054f8:	mov	w2, #0x5                   	// #5
  4054fc:	mov	x0, #0x0                   	// #0
  405500:	bl	402c20 <dcgettext@plt>
  405504:	bl	4037b0 <wcrtomb@plt+0xa70>
  405508:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  40550c:	add	x1, x1, #0xe38
  405510:	add	x1, x1, #0x2fa
  405514:	mov	w2, #0x5                   	// #5
  405518:	mov	x0, #0x0                   	// #0
  40551c:	bl	402c20 <dcgettext@plt>
  405520:	bl	4037b0 <wcrtomb@plt+0xa70>
  405524:	mov	w0, w25
  405528:	bl	404080 <wcrtomb@plt+0x1340>
  40552c:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  405530:	add	x1, x1, #0xe38
  405534:	add	x1, x1, #0xe
  405538:	mov	w2, #0x5                   	// #5
  40553c:	mov	x0, #0x0                   	// #0
  405540:	bl	402c20 <dcgettext@plt>
  405544:	bl	4037b0 <wcrtomb@plt+0xa70>
  405548:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  40554c:	add	x1, x1, #0xe38
  405550:	add	x1, x1, #0x2b1
  405554:	mov	w2, #0x5                   	// #5
  405558:	mov	x0, #0x0                   	// #0
  40555c:	bl	402c20 <dcgettext@plt>
  405560:	bl	4037b0 <wcrtomb@plt+0xa70>
  405564:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  405568:	add	x1, x1, #0xe38
  40556c:	add	x1, x1, #0x293
  405570:	mov	w2, #0x5                   	// #5
  405574:	mov	x0, #0x0                   	// #0
  405578:	bl	402c20 <dcgettext@plt>
  40557c:	bl	4037b0 <wcrtomb@plt+0xa70>
  405580:	add	x0, x2, #0x1
  405584:	b	4051a4 <wcrtomb@plt+0x2464>
  405588:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  40558c:	add	x1, x1, #0xe38
  405590:	add	x1, x1, #0x84
  405594:	mov	w2, #0x5                   	// #5
  405598:	mov	x0, #0x0                   	// #0
  40559c:	bl	402c20 <dcgettext@plt>
  4055a0:	bl	4037b0 <wcrtomb@plt+0xa70>
  4055a4:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  4055a8:	add	x1, x1, #0xe38
  4055ac:	add	x1, x1, #0x196
  4055b0:	mov	w2, #0x5                   	// #5
  4055b4:	mov	x0, #0x0                   	// #0
  4055b8:	bl	402c20 <dcgettext@plt>
  4055bc:	bl	4037b0 <wcrtomb@plt+0xa70>
  4055c0:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  4055c4:	add	x1, x1, #0xe38
  4055c8:	add	x1, x1, #0xc4
  4055cc:	mov	w2, #0x5                   	// #5
  4055d0:	mov	x0, #0x0                   	// #0
  4055d4:	bl	402c20 <dcgettext@plt>
  4055d8:	bl	4037b0 <wcrtomb@plt+0xa70>
  4055dc:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  4055e0:	add	x1, x1, #0xe38
  4055e4:	add	x1, x1, #0xa5
  4055e8:	mov	w2, #0x5                   	// #5
  4055ec:	mov	x0, #0x0                   	// #0
  4055f0:	bl	402c20 <dcgettext@plt>
  4055f4:	bl	4037b0 <wcrtomb@plt+0xa70>
  4055f8:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  4055fc:	add	x1, x1, #0xe38
  405600:	add	x1, x1, #0x1de
  405604:	mov	w2, #0x5                   	// #5
  405608:	mov	x0, #0x0                   	// #0
  40560c:	bl	402c20 <dcgettext@plt>
  405610:	bl	4037b0 <wcrtomb@plt+0xa70>
  405614:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  405618:	add	x1, x1, #0xe38
  40561c:	add	x1, x1, #0x14e
  405620:	mov	w2, #0x5                   	// #5
  405624:	bl	402c20 <dcgettext@plt>
  405628:	bl	4037b0 <wcrtomb@plt+0xa70>
  40562c:	nop
  405630:	stp	x29, x30, [sp, #-32]!
  405634:	add	x2, x1, x2
  405638:	mov	x29, sp
  40563c:	stp	x19, x20, [sp, #16]
  405640:	adrp	x19, 438000 <_obstack_memory_used@@Base+0x253b0>
  405644:	add	x19, x19, #0x528
  405648:	ldr	x3, [x19, #224]
  40564c:	stp	x1, x1, [x19, #88]
  405650:	add	x3, x3, #0x1
  405654:	stp	x2, xzr, [x19, #104]
  405658:	stp	xzr, xzr, [x19, #120]
  40565c:	str	x3, [x19, #136]
  405660:	str	x3, [x19, #224]
  405664:	bl	404620 <wcrtomb@plt+0x18e0>
  405668:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  40566c:	stp	xzr, xzr, [x19, #88]
  405670:	strb	wzr, [x1, #1080]
  405674:	str	xzr, [x19, #104]
  405678:	ldp	x19, x20, [sp, #16]
  40567c:	ldp	x29, x30, [sp], #32
  405680:	ret
  405684:	nop
  405688:	stp	x29, x30, [sp, #-48]!
  40568c:	mov	x29, sp
  405690:	stp	x19, x20, [sp, #16]
  405694:	adrp	x19, 438000 <_obstack_memory_used@@Base+0x253b0>
  405698:	add	x19, x19, #0x528
  40569c:	stp	x21, x22, [sp, #32]
  4056a0:	adrp	x22, 438000 <_obstack_memory_used@@Base+0x253b0>
  4056a4:	mov	x21, x0
  4056a8:	ldr	x0, [x22, #1296]
  4056ac:	str	x0, [x19, #112]
  4056b0:	ldrb	w0, [x1]
  4056b4:	mov	x20, x1
  4056b8:	cmp	w0, #0x2d
  4056bc:	b.ne	405714 <wcrtomb@plt+0x29d4>  // b.any
  4056c0:	ldrb	w0, [x1, #1]
  4056c4:	cbnz	w0, 405714 <wcrtomb@plt+0x29d4>
  4056c8:	mov	x2, #0x1                   	// #1
  4056cc:	mov	x0, x21
  4056d0:	stp	x20, x2, [x19, #120]
  4056d4:	str	xzr, [x19, #136]
  4056d8:	bl	404620 <wcrtomb@plt+0x18e0>
  4056dc:	ldr	x1, [x22, #1296]
  4056e0:	mov	x20, x0
  4056e4:	ldr	x0, [x19, #112]
  4056e8:	cmp	x0, x1
  4056ec:	b.eq	4056f4 <wcrtomb@plt+0x29b4>  // b.none
  4056f0:	bl	40a408 <wcrtomb@plt+0x76c8>
  4056f4:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  4056f8:	mov	x0, x20
  4056fc:	str	xzr, [x19, #112]
  405700:	strb	wzr, [x1, #1080]
  405704:	ldp	x19, x20, [sp, #16]
  405708:	ldp	x21, x22, [sp, #32]
  40570c:	ldp	x29, x30, [sp], #48
  405710:	ret
  405714:	mov	x0, x20
  405718:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  40571c:	mov	w2, #0x1                   	// #1
  405720:	add	x1, x1, #0xcd8
  405724:	bl	409f78 <wcrtomb@plt+0x7238>
  405728:	str	x0, [x19, #112]
  40572c:	b	4056c8 <wcrtomb@plt+0x2988>
  405730:	stp	x29, x30, [sp, #-64]!
  405734:	mov	x29, sp
  405738:	stp	x23, x24, [sp, #48]
  40573c:	adrp	x24, 438000 <_obstack_memory_used@@Base+0x253b0>
  405740:	add	x24, x24, #0x528
  405744:	stp	x19, x20, [sp, #16]
  405748:	ldr	x3, [x24, #184]
  40574c:	stp	x21, x22, [sp, #32]
  405750:	cbnz	x3, 405850 <wcrtomb@plt+0x2b10>
  405754:	ldr	x19, [x24, #168]
  405758:	mov	x23, x0
  40575c:	cbz	x19, 405784 <wcrtomb@plt+0x2a44>
  405760:	mov	x0, x19
  405764:	bl	40a7d8 <wcrtomb@plt+0x7a98>
  405768:	ldr	x21, [x24, #176]
  40576c:	mov	x20, x0
  405770:	str	x0, [x21, #8]
  405774:	cbnz	x0, 405834 <wcrtomb@plt+0x2af4>
  405778:	mov	x0, x19
  40577c:	bl	40a8d8 <wcrtomb@plt+0x7b98>
  405780:	str	xzr, [x24, #168]
  405784:	ldp	x22, x21, [x24, #192]
  405788:	cbz	x21, 4057e0 <wcrtomb@plt+0x2aa0>
  40578c:	nop
  405790:	ldr	x20, [x21, #8]
  405794:	cbz	x22, 405810 <wcrtomb@plt+0x2ad0>
  405798:	mov	x19, x22
  40579c:	b	4057a8 <wcrtomb@plt+0x2a68>
  4057a0:	ldr	x19, [x19, #40]
  4057a4:	cbz	x19, 405810 <wcrtomb@plt+0x2ad0>
  4057a8:	ldr	x0, [x19, #8]
  4057ac:	mov	x1, x20
  4057b0:	bl	402aa0 <strcmp@plt>
  4057b4:	cbnz	w0, 4057a0 <wcrtomb@plt+0x2a60>
  4057b8:	ldr	x1, [x21]
  4057bc:	ldr	x2, [x23]
  4057c0:	add	x1, x1, x1, lsl #2
  4057c4:	ldr	x0, [x19]
  4057c8:	add	x1, x2, x1, lsl #3
  4057cc:	str	x0, [x1, #24]
  4057d0:	ldr	x21, [x21, #40]
  4057d4:	mov	x0, x20
  4057d8:	bl	402ae0 <free@plt>
  4057dc:	cbnz	x21, 405790 <wcrtomb@plt+0x2a50>
  4057e0:	str	xzr, [x24, #200]
  4057e4:	cbz	x22, 4057f8 <wcrtomb@plt+0x2ab8>
  4057e8:	ldr	x0, [x22, #8]
  4057ec:	ldr	x22, [x22, #40]
  4057f0:	bl	402ae0 <free@plt>
  4057f4:	cbnz	x22, 4057e8 <wcrtomb@plt+0x2aa8>
  4057f8:	str	xzr, [x24, #192]
  4057fc:	ldp	x19, x20, [sp, #16]
  405800:	ldp	x21, x22, [sp, #32]
  405804:	ldp	x23, x24, [sp, #48]
  405808:	ldp	x29, x30, [sp], #64
  40580c:	ret
  405810:	ldrb	w0, [x20]
  405814:	cbnz	w0, 40587c <wcrtomb@plt+0x2b3c>
  405818:	ldr	x0, [x21]
  40581c:	ldr	x2, [x23]
  405820:	add	x0, x0, x0, lsl #2
  405824:	ldr	x1, [x23, #16]
  405828:	add	x0, x2, x0, lsl #3
  40582c:	str	x1, [x0, #24]
  405830:	b	4057d0 <wcrtomb@plt+0x2a90>
  405834:	mov	x0, x19
  405838:	bl	40a7d0 <wcrtomb@plt+0x7a90>
  40583c:	mov	x1, x20
  405840:	bl	4127d0 <wcrtomb@plt+0xfa90>
  405844:	str	x0, [x21]
  405848:	ldr	x19, [x24, #168]
  40584c:	b	405778 <wcrtomb@plt+0x2a38>
  405850:	ldp	x4, x5, [x3, #16]
  405854:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  405858:	add	x1, x1, #0xe38
  40585c:	mov	w2, #0x5                   	// #5
  405860:	ldr	x3, [x3, #32]
  405864:	add	x1, x1, #0x48
  405868:	mov	x0, #0x0                   	// #0
  40586c:	stp	x4, x5, [x24, #120]
  405870:	str	x3, [x24, #136]
  405874:	bl	402c20 <dcgettext@plt>
  405878:	bl	4037b0 <wcrtomb@plt+0xa70>
  40587c:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  405880:	mov	w2, #0x5                   	// #5
  405884:	add	x1, x1, #0xce0
  405888:	mov	x0, #0x0                   	// #0
  40588c:	bl	402c20 <dcgettext@plt>
  405890:	ldr	x1, [x21, #8]
  405894:	bl	409df0 <wcrtomb@plt+0x70b0>
  405898:	stp	x29, x30, [sp, #-32]!
  40589c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  4058a0:	mov	x29, sp
  4058a4:	str	x19, [sp, #16]
  4058a8:	ldr	x19, [x0, #1528]
  4058ac:	cbz	x19, 4058c4 <wcrtomb@plt+0x2b84>
  4058b0:	ldr	x0, [x19, #16]
  4058b4:	cbz	x0, 4058bc <wcrtomb@plt+0x2b7c>
  4058b8:	bl	402960 <rewind@plt>
  4058bc:	ldr	x19, [x19, #24]
  4058c0:	cbnz	x19, 4058b0 <wcrtomb@plt+0x2b70>
  4058c4:	ldr	x19, [sp, #16]
  4058c8:	ldp	x29, x30, [sp], #32
  4058cc:	ret
  4058d0:	stp	x29, x30, [sp, #-32]!
  4058d4:	mov	x29, sp
  4058d8:	stp	x19, x20, [sp, #16]
  4058dc:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x253b0>
  4058e0:	add	x20, x20, #0x528
  4058e4:	ldr	x19, [x20, #208]
  4058e8:	cbz	x19, 405974 <wcrtomb@plt+0x2c34>
  4058ec:	nop
  4058f0:	ldr	x0, [x19]
  4058f4:	cbz	x0, 405900 <wcrtomb@plt+0x2bc0>
  4058f8:	bl	402ae0 <free@plt>
  4058fc:	str	xzr, [x19]
  405900:	ldr	x19, [x19, #24]
  405904:	cbnz	x19, 4058f0 <wcrtomb@plt+0x2bb0>
  405908:	ldr	x19, [x20, #216]
  40590c:	cbz	x19, 405980 <wcrtomb@plt+0x2c40>
  405910:	ldr	x0, [x19]
  405914:	cbz	x0, 405920 <wcrtomb@plt+0x2be0>
  405918:	bl	402ae0 <free@plt>
  40591c:	str	xzr, [x19]
  405920:	ldr	x19, [x19, #24]
  405924:	cbnz	x19, 405910 <wcrtomb@plt+0x2bd0>
  405928:	ldr	x19, [x20, #208]
  40592c:	cbz	x19, 405944 <wcrtomb@plt+0x2c04>
  405930:	ldr	x0, [x19, #16]
  405934:	cbz	x0, 40593c <wcrtomb@plt+0x2bfc>
  405938:	bl	40a408 <wcrtomb@plt+0x76c8>
  40593c:	ldr	x19, [x19, #24]
  405940:	cbnz	x19, 405930 <wcrtomb@plt+0x2bf0>
  405944:	ldr	x19, [x20, #216]
  405948:	cbz	x19, 405964 <wcrtomb@plt+0x2c24>
  40594c:	nop
  405950:	ldr	x0, [x19, #16]
  405954:	cbz	x0, 40595c <wcrtomb@plt+0x2c1c>
  405958:	bl	40a408 <wcrtomb@plt+0x76c8>
  40595c:	ldr	x19, [x19, #24]
  405960:	cbnz	x19, 405950 <wcrtomb@plt+0x2c10>
  405964:	stp	xzr, xzr, [x20, #208]
  405968:	ldp	x19, x20, [sp, #16]
  40596c:	ldp	x29, x30, [sp], #32
  405970:	ret
  405974:	ldr	x19, [x20, #216]
  405978:	cbnz	x19, 405910 <wcrtomb@plt+0x2bd0>
  40597c:	b	405964 <wcrtomb@plt+0x2c24>
  405980:	ldr	x19, [x20, #208]
  405984:	cbnz	x19, 405930 <wcrtomb@plt+0x2bf0>
  405988:	b	405964 <wcrtomb@plt+0x2c24>
  40598c:	nop
  405990:	cbz	x0, 405a24 <wcrtomb@plt+0x2ce4>
  405994:	stp	x29, x30, [sp, #-32]!
  405998:	mov	x29, sp
  40599c:	stp	x19, x20, [sp, #16]
  4059a0:	mov	x19, x0
  4059a4:	ldr	w0, [x0, #64]
  4059a8:	and	w20, w1, #0xff
  4059ac:	tbz	w0, #1, 4059e4 <wcrtomb@plt+0x2ca4>
  4059b0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  4059b4:	cmp	w20, #0x0
  4059b8:	mov	w2, #0x69                  	// #105
  4059bc:	mov	w1, #0x49                  	// #73
  4059c0:	ldr	x0, [x0, #1288]
  4059c4:	csel	w1, w1, w2, ne  // ne = any
  4059c8:	ldp	x2, x3, [x0, #40]
  4059cc:	cmp	x2, x3
  4059d0:	b.cs	405a28 <wcrtomb@plt+0x2ce8>  // b.hs, b.nlast
  4059d4:	add	x3, x2, #0x1
  4059d8:	str	x3, [x0, #40]
  4059dc:	strb	w1, [x2]
  4059e0:	ldr	w0, [x19, #64]
  4059e4:	tbz	w0, #2, 405a18 <wcrtomb@plt+0x2cd8>
  4059e8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  4059ec:	cmp	w20, #0x0
  4059f0:	mov	w2, #0x6d                  	// #109
  4059f4:	mov	w1, #0x4d                  	// #77
  4059f8:	ldr	x0, [x0, #1288]
  4059fc:	csel	w1, w1, w2, ne  // ne = any
  405a00:	ldp	x2, x3, [x0, #40]
  405a04:	cmp	x2, x3
  405a08:	b.cs	405a38 <wcrtomb@plt+0x2cf8>  // b.hs, b.nlast
  405a0c:	add	x3, x2, #0x1
  405a10:	str	x3, [x0, #40]
  405a14:	strb	w1, [x2]
  405a18:	ldp	x19, x20, [sp, #16]
  405a1c:	ldp	x29, x30, [sp], #32
  405a20:	ret
  405a24:	ret
  405a28:	bl	402a20 <__overflow@plt>
  405a2c:	ldr	w0, [x19, #64]
  405a30:	tbz	w0, #2, 405a18 <wcrtomb@plt+0x2cd8>
  405a34:	b	4059e8 <wcrtomb@plt+0x2ca8>
  405a38:	ldp	x19, x20, [sp, #16]
  405a3c:	ldp	x29, x30, [sp], #32
  405a40:	b	402a20 <__overflow@plt>
  405a44:	nop
  405a48:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  405a4c:	ldr	x0, [x0]
  405a50:	ldr	x1, [x1, #1288]
  405a54:	b	402c30 <fputs_unlocked@plt>
  405a58:	stp	x29, x30, [sp, #-32]!
  405a5c:	mov	x29, sp
  405a60:	stp	x19, x20, [sp, #16]
  405a64:	and	w19, w0, #0xff
  405a68:	bl	402ab0 <__ctype_b_loc@plt>
  405a6c:	ldr	x0, [x0]
  405a70:	ubfiz	x3, x19, #1, #8
  405a74:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x253b0>
  405a78:	cmp	w19, #0x5c
  405a7c:	ldr	x2, [x20, #1288]
  405a80:	ldrh	w0, [x0, x3]
  405a84:	and	w0, w0, #0x4000
  405a88:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  405a8c:	ldp	x1, x3, [x2, #40]
  405a90:	b.ne	405b74 <wcrtomb@plt+0x2e34>  // b.any
  405a94:	cmp	x1, x3
  405a98:	b.cs	405c1c <wcrtomb@plt+0x2edc>  // b.hs, b.nlast
  405a9c:	add	x0, x1, #0x1
  405aa0:	str	x0, [x2, #40]
  405aa4:	mov	w0, #0x5c                  	// #92
  405aa8:	strb	w0, [x1]
  405aac:	cmp	w19, #0xb
  405ab0:	b.eq	405b94 <wcrtomb@plt+0x2e54>  // b.none
  405ab4:	b.hi	405aec <wcrtomb@plt+0x2dac>  // b.pmore
  405ab8:	cmp	w19, #0x9
  405abc:	b.eq	405bdc <wcrtomb@plt+0x2e9c>  // b.none
  405ac0:	cmp	w19, #0xa
  405ac4:	b.ne	405b48 <wcrtomb@plt+0x2e08>  // b.any
  405ac8:	ldr	x0, [x20, #1288]
  405acc:	ldp	x1, x2, [x0, #40]
  405ad0:	cmp	x1, x2
  405ad4:	b.cs	405c5c <wcrtomb@plt+0x2f1c>  // b.hs, b.nlast
  405ad8:	add	x2, x1, #0x1
  405adc:	str	x2, [x0, #40]
  405ae0:	mov	w0, #0x6e                  	// #110
  405ae4:	strb	w0, [x1]
  405ae8:	b	405b88 <wcrtomb@plt+0x2e48>
  405aec:	cmp	w19, #0xd
  405af0:	b.eq	405bb8 <wcrtomb@plt+0x2e78>  // b.none
  405af4:	cmp	w19, #0x5c
  405af8:	b.ne	405b1c <wcrtomb@plt+0x2ddc>  // b.any
  405afc:	ldr	x0, [x20, #1288]
  405b00:	ldp	x1, x2, [x0, #40]
  405b04:	cmp	x1, x2
  405b08:	b.cs	405c4c <wcrtomb@plt+0x2f0c>  // b.hs, b.nlast
  405b0c:	add	x2, x1, #0x1
  405b10:	str	x2, [x0, #40]
  405b14:	strb	w19, [x1]
  405b18:	b	405b88 <wcrtomb@plt+0x2e48>
  405b1c:	cmp	w19, #0xc
  405b20:	b.ne	405c00 <wcrtomb@plt+0x2ec0>  // b.any
  405b24:	ldr	x0, [x20, #1288]
  405b28:	ldp	x1, x2, [x0, #40]
  405b2c:	cmp	x1, x2
  405b30:	b.cs	405c3c <wcrtomb@plt+0x2efc>  // b.hs, b.nlast
  405b34:	add	x2, x1, #0x1
  405b38:	str	x2, [x0, #40]
  405b3c:	mov	w0, #0x66                  	// #102
  405b40:	strb	w0, [x1]
  405b44:	b	405b88 <wcrtomb@plt+0x2e48>
  405b48:	cmp	w19, #0x7
  405b4c:	b.ne	405c00 <wcrtomb@plt+0x2ec0>  // b.any
  405b50:	ldr	x0, [x20, #1288]
  405b54:	ldp	x1, x2, [x0, #40]
  405b58:	cmp	x1, x2
  405b5c:	b.cs	405c2c <wcrtomb@plt+0x2eec>  // b.hs, b.nlast
  405b60:	add	x2, x1, #0x1
  405b64:	str	x2, [x0, #40]
  405b68:	mov	w0, #0x61                  	// #97
  405b6c:	strb	w0, [x1]
  405b70:	b	405b88 <wcrtomb@plt+0x2e48>
  405b74:	cmp	x1, x3
  405b78:	b.cs	405c6c <wcrtomb@plt+0x2f2c>  // b.hs, b.nlast
  405b7c:	add	x0, x1, #0x1
  405b80:	str	x0, [x2, #40]
  405b84:	strb	w19, [x1]
  405b88:	ldp	x19, x20, [sp, #16]
  405b8c:	ldp	x29, x30, [sp], #32
  405b90:	ret
  405b94:	ldr	x0, [x20, #1288]
  405b98:	ldp	x1, x2, [x0, #40]
  405b9c:	cmp	x1, x2
  405ba0:	b.cs	405c80 <wcrtomb@plt+0x2f40>  // b.hs, b.nlast
  405ba4:	add	x2, x1, #0x1
  405ba8:	str	x2, [x0, #40]
  405bac:	mov	w0, #0x76                  	// #118
  405bb0:	strb	w0, [x1]
  405bb4:	b	405b88 <wcrtomb@plt+0x2e48>
  405bb8:	ldr	x0, [x20, #1288]
  405bbc:	ldp	x1, x2, [x0, #40]
  405bc0:	cmp	x1, x2
  405bc4:	b.cs	405ca0 <wcrtomb@plt+0x2f60>  // b.hs, b.nlast
  405bc8:	add	x2, x1, #0x1
  405bcc:	str	x2, [x0, #40]
  405bd0:	mov	w0, #0x72                  	// #114
  405bd4:	strb	w0, [x1]
  405bd8:	b	405b88 <wcrtomb@plt+0x2e48>
  405bdc:	ldr	x0, [x20, #1288]
  405be0:	ldp	x1, x2, [x0, #40]
  405be4:	cmp	x1, x2
  405be8:	b.cs	405c90 <wcrtomb@plt+0x2f50>  // b.hs, b.nlast
  405bec:	add	x2, x1, #0x1
  405bf0:	str	x2, [x0, #40]
  405bf4:	mov	w0, #0x74                  	// #116
  405bf8:	strb	w0, [x1]
  405bfc:	b	405b88 <wcrtomb@plt+0x2e48>
  405c00:	mov	w2, w19
  405c04:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  405c08:	ldp	x19, x20, [sp, #16]
  405c0c:	add	x1, x1, #0x1f8
  405c10:	ldp	x29, x30, [sp], #32
  405c14:	mov	w0, #0x1                   	// #1
  405c18:	b	4028b0 <__printf_chk@plt>
  405c1c:	mov	x0, x2
  405c20:	mov	w1, #0x5c                  	// #92
  405c24:	bl	402a20 <__overflow@plt>
  405c28:	b	405aac <wcrtomb@plt+0x2d6c>
  405c2c:	ldp	x19, x20, [sp, #16]
  405c30:	mov	w1, #0x61                  	// #97
  405c34:	ldp	x29, x30, [sp], #32
  405c38:	b	402a20 <__overflow@plt>
  405c3c:	ldp	x19, x20, [sp, #16]
  405c40:	mov	w1, #0x66                  	// #102
  405c44:	ldp	x29, x30, [sp], #32
  405c48:	b	402a20 <__overflow@plt>
  405c4c:	mov	w1, w19
  405c50:	ldp	x19, x20, [sp, #16]
  405c54:	ldp	x29, x30, [sp], #32
  405c58:	b	402a20 <__overflow@plt>
  405c5c:	ldp	x19, x20, [sp, #16]
  405c60:	mov	w1, #0x6e                  	// #110
  405c64:	ldp	x29, x30, [sp], #32
  405c68:	b	402a20 <__overflow@plt>
  405c6c:	mov	w1, w19
  405c70:	mov	x0, x2
  405c74:	ldp	x19, x20, [sp, #16]
  405c78:	ldp	x29, x30, [sp], #32
  405c7c:	b	402a20 <__overflow@plt>
  405c80:	ldp	x19, x20, [sp, #16]
  405c84:	mov	w1, #0x76                  	// #118
  405c88:	ldp	x29, x30, [sp], #32
  405c8c:	b	402a20 <__overflow@plt>
  405c90:	ldp	x19, x20, [sp, #16]
  405c94:	mov	w1, #0x74                  	// #116
  405c98:	ldp	x29, x30, [sp], #32
  405c9c:	b	402a20 <__overflow@plt>
  405ca0:	ldp	x19, x20, [sp, #16]
  405ca4:	mov	w1, #0x72                  	// #114
  405ca8:	ldp	x29, x30, [sp], #32
  405cac:	b	402a20 <__overflow@plt>
  405cb0:	stp	x29, x30, [sp, #-48]!
  405cb4:	mov	x29, sp
  405cb8:	stp	x21, x22, [sp, #32]
  405cbc:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x253b0>
  405cc0:	ldr	x3, [x21, #1288]
  405cc4:	cbz	x0, 405d78 <wcrtomb@plt+0x3038>
  405cc8:	stp	x19, x20, [sp, #16]
  405ccc:	mov	x19, x0
  405cd0:	ldp	x0, x1, [x3, #40]
  405cd4:	cmp	x0, x1
  405cd8:	b.cs	405d94 <wcrtomb@plt+0x3054>  // b.hs, b.nlast
  405cdc:	add	x1, x0, #0x1
  405ce0:	str	x1, [x3, #40]
  405ce4:	mov	w1, #0x2f                  	// #47
  405ce8:	strb	w1, [x0]
  405cec:	ldr	x1, [x19, #72]
  405cf0:	add	x20, x19, #0x5a
  405cf4:	adrp	x22, 420000 <_obstack_memory_used@@Base+0xd3b0>
  405cf8:	add	x22, x22, #0x208
  405cfc:	add	x0, x1, #0x5a
  405d00:	add	x19, x19, x0
  405d04:	cbnz	x1, 405d1c <wcrtomb@plt+0x2fdc>
  405d08:	b	405d48 <wcrtomb@plt+0x3008>
  405d0c:	add	x20, x20, #0x1
  405d10:	bl	405a58 <wcrtomb@plt+0x2d18>
  405d14:	cmp	x20, x19
  405d18:	b.eq	405d48 <wcrtomb@plt+0x3008>  // b.none
  405d1c:	ldrb	w0, [x20]
  405d20:	cmp	w0, #0x2f
  405d24:	b.ne	405d0c <wcrtomb@plt+0x2fcc>  // b.any
  405d28:	ldr	x3, [x21, #1288]
  405d2c:	mov	x0, x22
  405d30:	add	x20, x20, #0x1
  405d34:	mov	x2, #0x2                   	// #2
  405d38:	mov	x1, #0x1                   	// #1
  405d3c:	bl	402680 <fwrite_unlocked@plt>
  405d40:	cmp	x20, x19
  405d44:	b.ne	405d1c <wcrtomb@plt+0x2fdc>  // b.any
  405d48:	ldr	x0, [x21, #1288]
  405d4c:	ldp	x1, x2, [x0, #40]
  405d50:	cmp	x1, x2
  405d54:	b.cs	405da4 <wcrtomb@plt+0x3064>  // b.hs, b.nlast
  405d58:	add	x2, x1, #0x1
  405d5c:	str	x2, [x0, #40]
  405d60:	mov	w0, #0x2f                  	// #47
  405d64:	strb	w0, [x1]
  405d68:	ldp	x19, x20, [sp, #16]
  405d6c:	ldp	x21, x22, [sp, #32]
  405d70:	ldp	x29, x30, [sp], #48
  405d74:	ret
  405d78:	ldp	x21, x22, [sp, #32]
  405d7c:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xd3b0>
  405d80:	ldp	x29, x30, [sp], #48
  405d84:	add	x0, x0, #0x200
  405d88:	mov	x2, #0x2                   	// #2
  405d8c:	mov	x1, #0x1                   	// #1
  405d90:	b	402680 <fwrite_unlocked@plt>
  405d94:	mov	x0, x3
  405d98:	mov	w1, #0x2f                  	// #47
  405d9c:	bl	402a20 <__overflow@plt>
  405da0:	b	405cec <wcrtomb@plt+0x2fac>
  405da4:	ldp	x19, x20, [sp, #16]
  405da8:	mov	w1, #0x2f                  	// #47
  405dac:	ldp	x21, x22, [sp, #32]
  405db0:	ldp	x29, x30, [sp], #48
  405db4:	b	402a20 <__overflow@plt>
  405db8:	cbz	x0, 405ee8 <wcrtomb@plt+0x31a8>
  405dbc:	stp	x29, x30, [sp, #-32]!
  405dc0:	mov	x29, sp
  405dc4:	stp	x19, x20, [sp, #16]
  405dc8:	mov	x20, x0
  405dcc:	ldr	w19, [x0]
  405dd0:	cmp	w19, #0x3
  405dd4:	b.eq	405eb0 <wcrtomb@plt+0x3170>  // b.none
  405dd8:	b.hi	405e08 <wcrtomb@plt+0x30c8>  // b.pmore
  405ddc:	cmp	w19, #0x1
  405de0:	b.eq	405ecc <wcrtomb@plt+0x318c>  // b.none
  405de4:	cmp	w19, #0x2
  405de8:	b.ne	405e6c <wcrtomb@plt+0x312c>  // b.any
  405dec:	ldr	x2, [x20, #8]
  405df0:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  405df4:	ldp	x19, x20, [sp, #16]
  405df8:	add	x1, x1, #0x220
  405dfc:	ldp	x29, x30, [sp], #32
  405e00:	mov	w0, #0x1                   	// #1
  405e04:	b	4028b0 <__printf_chk@plt>
  405e08:	cmp	w19, #0x5
  405e0c:	b.eq	405e94 <wcrtomb@plt+0x3154>  // b.none
  405e10:	cmp	w19, #0x6
  405e14:	b.ne	405e48 <wcrtomb@plt+0x3108>  // b.any
  405e18:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  405e1c:	ldr	x0, [x0, #1288]
  405e20:	ldp	x1, x2, [x0, #40]
  405e24:	cmp	x1, x2
  405e28:	b.cs	405eec <wcrtomb@plt+0x31ac>  // b.hs, b.nlast
  405e2c:	add	x2, x1, #0x1
  405e30:	str	x2, [x0, #40]
  405e34:	mov	w0, #0x24                  	// #36
  405e38:	strb	w0, [x1]
  405e3c:	ldp	x19, x20, [sp, #16]
  405e40:	ldp	x29, x30, [sp], #32
  405e44:	ret
  405e48:	cmp	w19, #0x4
  405e4c:	b.ne	405e3c <wcrtomb@plt+0x30fc>  // b.any
  405e50:	ldr	x2, [x20, #16]
  405e54:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  405e58:	ldp	x19, x20, [sp, #16]
  405e5c:	add	x1, x1, #0x230
  405e60:	ldp	x29, x30, [sp], #32
  405e64:	mov	w0, #0x1                   	// #1
  405e68:	b	4028b0 <__printf_chk@plt>
  405e6c:	cbnz	w19, 405e3c <wcrtomb@plt+0x30fc>
  405e70:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  405e74:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xd3b0>
  405e78:	ldp	x19, x20, [sp, #16]
  405e7c:	add	x0, x0, #0x210
  405e80:	ldp	x29, x30, [sp], #32
  405e84:	mov	x2, #0xb                   	// #11
  405e88:	ldr	x3, [x1, #1288]
  405e8c:	mov	x1, #0x1                   	// #1
  405e90:	b	402680 <fwrite_unlocked@plt>
  405e94:	ldr	x2, [x20, #16]
  405e98:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  405e9c:	ldp	x19, x20, [sp, #16]
  405ea0:	add	x1, x1, #0x238
  405ea4:	ldp	x29, x30, [sp], #32
  405ea8:	mov	w0, #0x1                   	// #1
  405eac:	b	4028b0 <__printf_chk@plt>
  405eb0:	ldp	x2, x3, [x20, #8]
  405eb4:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  405eb8:	ldp	x19, x20, [sp, #16]
  405ebc:	add	x1, x1, #0x228
  405ec0:	ldp	x29, x30, [sp], #32
  405ec4:	mov	w0, #0x1                   	// #1
  405ec8:	b	4028b0 <__printf_chk@plt>
  405ecc:	ldr	x0, [x0, #24]
  405ed0:	bl	405cb0 <wcrtomb@plt+0x2f70>
  405ed4:	mov	w1, w19
  405ed8:	ldr	x0, [x20, #24]
  405edc:	ldp	x19, x20, [sp, #16]
  405ee0:	ldp	x29, x30, [sp], #32
  405ee4:	b	405990 <wcrtomb@plt+0x2c50>
  405ee8:	ret
  405eec:	ldp	x19, x20, [sp, #16]
  405ef0:	mov	w1, #0x24                  	// #36
  405ef4:	ldp	x29, x30, [sp], #32
  405ef8:	b	402a20 <__overflow@plt>
  405efc:	nop
  405f00:	cbz	x0, 40647c <wcrtomb@plt+0x373c>
  405f04:	stp	x29, x30, [sp, #-96]!
  405f08:	mov	x29, sp
  405f0c:	stp	x19, x20, [sp, #16]
  405f10:	mov	x20, x1
  405f14:	stp	x21, x22, [sp, #32]
  405f18:	stp	x23, x24, [sp, #48]
  405f1c:	adrp	x24, 438000 <_obstack_memory_used@@Base+0x253b0>
  405f20:	stp	x25, x26, [sp, #64]
  405f24:	mov	x26, x0
  405f28:	ldr	w0, [x24, #1552]
  405f2c:	ldrb	w1, [x1, #21]
  405f30:	cmp	w1, #0x7d
  405f34:	b.ne	405f40 <wcrtomb@plt+0x3200>  // b.any
  405f38:	sub	w0, w0, #0x1
  405f3c:	str	w0, [x24, #1552]
  405f40:	cmp	w0, #0x0
  405f44:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x253b0>
  405f48:	b.le	405f8c <wcrtomb@plt+0x324c>
  405f4c:	adrp	x23, 420000 <_obstack_memory_used@@Base+0xd3b0>
  405f50:	adrp	x22, 438000 <_obstack_memory_used@@Base+0x253b0>
  405f54:	add	x25, x21, #0x508
  405f58:	add	x23, x23, #0x240
  405f5c:	add	x22, x22, #0x610
  405f60:	mov	w19, #0x0                   	// #0
  405f64:	nop
  405f68:	ldr	x3, [x25]
  405f6c:	mov	x1, #0x1                   	// #1
  405f70:	mov	x0, x23
  405f74:	mov	x2, #0x2                   	// #2
  405f78:	add	w19, w19, #0x1
  405f7c:	bl	402680 <fwrite_unlocked@plt>
  405f80:	ldr	w1, [x22]
  405f84:	cmp	w1, w19
  405f88:	b.gt	405f68 <wcrtomb@plt+0x3228>
  405f8c:	ldr	x0, [x20]
  405f90:	bl	405db8 <wcrtomb@plt+0x3078>
  405f94:	ldr	x0, [x20, #8]
  405f98:	cbz	x0, 405fc0 <wcrtomb@plt+0x3280>
  405f9c:	ldr	x0, [x21, #1288]
  405fa0:	ldp	x1, x2, [x0, #40]
  405fa4:	cmp	x1, x2
  405fa8:	b.cs	4064a8 <wcrtomb@plt+0x3768>  // b.hs, b.nlast
  405fac:	add	x2, x1, #0x1
  405fb0:	str	x2, [x0, #40]
  405fb4:	mov	w0, #0x2c                  	// #44
  405fb8:	strb	w0, [x1]
  405fbc:	ldr	x0, [x20, #8]
  405fc0:	bl	405db8 <wcrtomb@plt+0x3078>
  405fc4:	ldrb	w0, [x20, #21]
  405fc8:	ldrb	w1, [x20, #20]
  405fcc:	cmp	w0, #0x7b
  405fd0:	b.eq	406108 <wcrtomb@plt+0x33c8>  // b.none
  405fd4:	cmp	w1, #0x0
  405fd8:	cset	w3, ne  // ne = any
  405fdc:	ldr	x0, [x21, #1288]
  405fe0:	ldp	x2, x1, [x0, #40]
  405fe4:	cbnz	w3, 40605c <wcrtomb@plt+0x331c>
  405fe8:	ldr	x3, [x20]
  405fec:	cbz	x3, 406084 <wcrtomb@plt+0x3344>
  405ff0:	cmp	x2, x1
  405ff4:	b.cs	40648c <wcrtomb@plt+0x374c>  // b.hs, b.nlast
  405ff8:	add	x1, x2, #0x1
  405ffc:	str	x1, [x0, #40]
  406000:	mov	w0, #0x20                  	// #32
  406004:	strb	w0, [x2]
  406008:	ldr	x0, [x21, #1288]
  40600c:	ldp	x2, x1, [x0, #40]
  406010:	cmp	x1, x2
  406014:	ldrb	w1, [x20, #21]
  406018:	b.ls	4064a0 <wcrtomb@plt+0x3760>  // b.plast
  40601c:	add	x3, x2, #0x1
  406020:	str	x3, [x0, #40]
  406024:	strb	w1, [x2]
  406028:	ldrb	w0, [x20, #21]
  40602c:	sub	w0, w0, #0x23
  406030:	cmp	w0, #0x5a
  406034:	b.ls	406090 <wcrtomb@plt+0x3350>  // b.plast
  406038:	adrp	x3, 420000 <_obstack_memory_used@@Base+0xd3b0>
  40603c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  406040:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xd3b0>
  406044:	add	x3, x3, #0x338
  406048:	add	x1, x1, #0x248
  40604c:	add	x0, x0, #0x258
  406050:	mov	w2, #0x194                 	// #404
  406054:	stp	x27, x28, [sp, #80]
  406058:	bl	402ca0 <__assert_fail@plt>
  40605c:	cmp	x1, x2
  406060:	b.ls	4065a4 <wcrtomb@plt+0x3864>  // b.plast
  406064:	add	x1, x2, #0x1
  406068:	str	x1, [x0, #40]
  40606c:	mov	w0, #0x21                  	// #33
  406070:	strb	w0, [x2]
  406074:	ldr	x0, [x21, #1288]
  406078:	ldr	x3, [x20]
  40607c:	ldp	x2, x1, [x0, #40]
  406080:	cbnz	x3, 405ff0 <wcrtomb@plt+0x32b0>
  406084:	ldr	x3, [x20, #8]
  406088:	cbnz	x3, 405ff0 <wcrtomb@plt+0x32b0>
  40608c:	b	406010 <wcrtomb@plt+0x32d0>
  406090:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  406094:	add	x1, x1, #0x280
  406098:	ldrh	w0, [x1, w0, uxtw #1]
  40609c:	adr	x1, 4060a8 <wcrtomb@plt+0x3368>
  4060a0:	add	x0, x1, w0, sxth #2
  4060a4:	br	x0
  4060a8:	ldr	w2, [x20, #24]
  4060ac:	cmn	w2, #0x1
  4060b0:	b.ne	4064b8 <wcrtomb@plt+0x3778>  // b.any
  4060b4:	nop
  4060b8:	ldr	x0, [x21, #1288]
  4060bc:	ldp	x1, x2, [x0, #40]
  4060c0:	cmp	x2, x1
  4060c4:	b.ls	406480 <wcrtomb@plt+0x3740>  // b.plast
  4060c8:	add	x2, x1, #0x1
  4060cc:	str	x2, [x0, #40]
  4060d0:	mov	w0, #0xa                   	// #10
  4060d4:	strb	w0, [x1]
  4060d8:	ldrb	w0, [x20, #21]
  4060dc:	cmp	w0, #0x7b
  4060e0:	b.ne	4060f0 <wcrtomb@plt+0x33b0>  // b.any
  4060e4:	ldr	w0, [x24, #1552]
  4060e8:	add	w0, w0, #0x1
  4060ec:	str	w0, [x24, #1552]
  4060f0:	ldp	x19, x20, [sp, #16]
  4060f4:	ldp	x21, x22, [sp, #32]
  4060f8:	ldp	x23, x24, [sp, #48]
  4060fc:	ldp	x25, x26, [sp, #64]
  406100:	ldp	x29, x30, [sp], #96
  406104:	ret
  406108:	cmp	w1, #0x0
  40610c:	cset	w3, eq  // eq = none
  406110:	b	405fdc <wcrtomb@plt+0x329c>
  406114:	ldr	x1, [x26, #16]
  406118:	ldr	x0, [x20, #24]
  40611c:	cmp	x0, x1
  406120:	b.cs	4060b8 <wcrtomb@plt+0x3378>  // b.hs, b.nlast
  406124:	ldr	x1, [x26]
  406128:	add	x0, x0, x0, lsl #2
  40612c:	add	x0, x1, x0, lsl #3
  406130:	ldr	x2, [x0, #24]
  406134:	cbz	x2, 4060b8 <wcrtomb@plt+0x3378>
  406138:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  40613c:	mov	w0, #0x1                   	// #1
  406140:	add	x1, x1, #0x3f8
  406144:	bl	4028b0 <__printf_chk@plt>
  406148:	ldr	x0, [x21, #1288]
  40614c:	ldp	x1, x2, [x0, #40]
  406150:	b	4060c0 <wcrtomb@plt+0x3380>
  406154:	ldr	x1, [x21, #1288]
  406158:	mov	w0, #0x5c                  	// #92
  40615c:	bl	402bd0 <fputc_unlocked@plt>
  406160:	ldr	x2, [x20, #32]
  406164:	cbz	x2, 4060b8 <wcrtomb@plt+0x3378>
  406168:	ldr	x3, [x21, #1288]
  40616c:	mov	x1, #0x1                   	// #1
  406170:	ldr	x0, [x20, #24]
  406174:	bl	402680 <fwrite_unlocked@plt>
  406178:	ldr	x0, [x21, #1288]
  40617c:	ldp	x1, x2, [x0, #40]
  406180:	b	4060c0 <wcrtomb@plt+0x3380>
  406184:	ldr	x0, [x20, #24]
  406188:	cbz	x0, 4060b8 <wcrtomb@plt+0x3378>
  40618c:	bl	405a48 <wcrtomb@plt+0x2d08>
  406190:	ldr	x0, [x21, #1288]
  406194:	ldp	x1, x2, [x0, #40]
  406198:	b	4060c0 <wcrtomb@plt+0x3380>
  40619c:	ldr	x23, [x20, #24]
  4061a0:	cbz	x23, 4060b8 <wcrtomb@plt+0x3378>
  4061a4:	ldr	x0, [x23]
  4061a8:	mov	w22, #0x0                   	// #0
  4061ac:	bl	405cb0 <wcrtomb@plt+0x2f70>
  4061b0:	ldr	x19, [x23, #8]
  4061b4:	cbz	x19, 4065bc <wcrtomb@plt+0x387c>
  4061b8:	adrp	x26, 420000 <_obstack_memory_used@@Base+0xd3b0>
  4061bc:	add	x26, x26, #0x268
  4061c0:	stp	x27, x28, [sp, #80]
  4061c4:	mov	w28, #0x6c                  	// #108
  4061c8:	mov	w27, #0x75                  	// #117
  4061cc:	b	406244 <wcrtomb@plt+0x3504>
  4061d0:	ldr	x0, [x25]
  4061d4:	ldp	x1, x2, [x0, #40]
  4061d8:	cmp	x1, x2
  4061dc:	b.cs	4067d4 <wcrtomb@plt+0x3a94>  // b.hs, b.nlast
  4061e0:	add	x2, x1, #0x1
  4061e4:	str	x2, [x0, #40]
  4061e8:	mov	w0, #0x45                  	// #69
  4061ec:	strb	w0, [x1]
  4061f0:	ldr	w22, [x19, #20]
  4061f4:	ldr	x2, [x19, #8]
  4061f8:	cbz	x2, 40620c <wcrtomb@plt+0x34cc>
  4061fc:	ldr	x3, [x21, #1288]
  406200:	mov	x1, #0x1                   	// #1
  406204:	ldr	x0, [x19]
  406208:	bl	402680 <fwrite_unlocked@plt>
  40620c:	ldr	w2, [x19, #16]
  406210:	cmn	w2, #0x1
  406214:	b.eq	40623c <wcrtomb@plt+0x34fc>  // b.none
  406218:	cbnz	w2, 406594 <wcrtomb@plt+0x3854>
  40621c:	ldr	x0, [x21, #1288]
  406220:	ldp	x1, x2, [x0, #40]
  406224:	cmp	x1, x2
  406228:	b.cs	4067c8 <wcrtomb@plt+0x3a88>  // b.hs, b.nlast
  40622c:	add	x2, x1, #0x1
  406230:	str	x2, [x0, #40]
  406234:	mov	w0, #0x26                  	// #38
  406238:	strb	w0, [x1]
  40623c:	ldr	x19, [x19, #24]
  406240:	cbz	x19, 4065b8 <wcrtomb@plt+0x3878>
  406244:	ldr	w0, [x19, #20]
  406248:	cmp	w0, w22
  40624c:	b.eq	4061f4 <wcrtomb@plt+0x34b4>  // b.none
  406250:	ldr	x0, [x21, #1288]
  406254:	add	x25, x21, #0x508
  406258:	ldp	x1, x2, [x0, #40]
  40625c:	cmp	x1, x2
  406260:	b.cs	406784 <wcrtomb@plt+0x3a44>  // b.hs, b.nlast
  406264:	add	x2, x1, #0x1
  406268:	str	x2, [x0, #40]
  40626c:	mov	w0, #0x5c                  	// #92
  406270:	strb	w0, [x1]
  406274:	ldr	w22, [x19, #20]
  406278:	cbz	w22, 4061d0 <wcrtomb@plt+0x3490>
  40627c:	cmp	w22, #0x1
  406280:	b.eq	4066a0 <wcrtomb@plt+0x3960>  // b.none
  406284:	cmp	w22, #0x2
  406288:	b.eq	40675c <wcrtomb@plt+0x3a1c>  // b.none
  40628c:	and	w0, w22, #0xc
  406290:	cmp	w0, #0x4
  406294:	b.eq	4067a4 <wcrtomb@plt+0x3a64>  // b.none
  406298:	cmp	w0, #0x8
  40629c:	b.ne	4061f4 <wcrtomb@plt+0x34b4>  // b.any
  4062a0:	ldr	x0, [x25]
  4062a4:	ldp	x1, x2, [x0, #40]
  4062a8:	cmp	x1, x2
  4062ac:	b.cs	4068c0 <wcrtomb@plt+0x3b80>  // b.hs, b.nlast
  4062b0:	add	x2, x1, #0x1
  4062b4:	str	x2, [x0, #40]
  4062b8:	strb	w28, [x1]
  4062bc:	ldr	w22, [x19, #20]
  4062c0:	b	4061f4 <wcrtomb@plt+0x34b4>
  4062c4:	ldr	x0, [x21, #1288]
  4062c8:	ldp	x1, x2, [x0, #40]
  4062cc:	cmp	x1, x2
  4062d0:	b.cs	406804 <wcrtomb@plt+0x3ac4>  // b.hs, b.nlast
  4062d4:	add	x2, x1, #0x1
  4062d8:	str	x2, [x0, #40]
  4062dc:	mov	w0, #0x20                  	// #32
  4062e0:	strb	w0, [x1]
  4062e4:	ldr	x1, [x21, #1288]
  4062e8:	ldr	x0, [x20, #24]
  4062ec:	bl	402c30 <fputs_unlocked@plt>
  4062f0:	ldr	x0, [x21, #1288]
  4062f4:	ldp	x1, x2, [x0, #40]
  4062f8:	b	4060c0 <wcrtomb@plt+0x3380>
  4062fc:	ldr	x0, [x21, #1288]
  406300:	ldp	x1, x2, [x0, #40]
  406304:	cmp	x1, x2
  406308:	b.cs	4067f8 <wcrtomb@plt+0x3ab8>  // b.hs, b.nlast
  40630c:	add	x2, x1, #0x1
  406310:	str	x2, [x0, #40]
  406314:	mov	w0, #0x20                  	// #32
  406318:	strb	w0, [x1]
  40631c:	ldp	x0, x2, [x20, #24]
  406320:	mov	x1, #0x1                   	// #1
  406324:	ldr	x3, [x21, #1288]
  406328:	bl	402680 <fwrite_unlocked@plt>
  40632c:	ldr	x0, [x21, #1288]
  406330:	ldp	x1, x2, [x0, #40]
  406334:	b	4060c0 <wcrtomb@plt+0x3380>
  406338:	ldr	x0, [x21, #1288]
  40633c:	ldp	x1, x2, [x0, #40]
  406340:	cmp	x1, x2
  406344:	b.cs	406810 <wcrtomb@plt+0x3ad0>  // b.hs, b.nlast
  406348:	add	x2, x1, #0x1
  40634c:	str	x2, [x0, #40]
  406350:	mov	w0, #0x20                  	// #32
  406354:	strb	w0, [x1]
  406358:	ldr	x0, [x20, #24]
  40635c:	ldr	x1, [x21, #1288]
  406360:	ldr	x0, [x0]
  406364:	bl	402c30 <fputs_unlocked@plt>
  406368:	ldr	x0, [x21, #1288]
  40636c:	ldp	x1, x2, [x0, #40]
  406370:	b	4060c0 <wcrtomb@plt+0x3380>
  406374:	ldr	x0, [x21, #1288]
  406378:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  40637c:	ldr	w1, [x1, #2260]
  406380:	cmp	w1, #0x1
  406384:	ldp	x1, x2, [x0, #40]
  406388:	b.le	4064d4 <wcrtomb@plt+0x3794>
  40638c:	cmp	x1, x2
  406390:	b.cs	406850 <wcrtomb@plt+0x3b10>  // b.hs, b.nlast
  406394:	add	x2, x1, #0x1
  406398:	str	x2, [x0, #40]
  40639c:	mov	w0, #0x2f                  	// #47
  4063a0:	strb	w0, [x1]
  4063a4:	ldr	x0, [x20, #24]
  4063a8:	adrp	x25, 438000 <_obstack_memory_used@@Base+0x253b0>
  4063ac:	mov	w19, #0x2                   	// #2
  4063b0:	add	x25, x25, #0x508
  4063b4:	ldr	x0, [x0]
  4063b8:	cbz	x0, 4063d8 <wcrtomb@plt+0x3698>
  4063bc:	nop
  4063c0:	ldr	x1, [x25]
  4063c4:	bl	402c30 <fputs_unlocked@plt>
  4063c8:	ldr	x0, [x20, #24]
  4063cc:	ldr	x0, [x0, w19, uxtw #3]
  4063d0:	add	w19, w19, #0x2
  4063d4:	cbnz	x0, 4063c0 <wcrtomb@plt+0x3680>
  4063d8:	ldr	x0, [x21, #1288]
  4063dc:	ldp	x1, x2, [x0, #40]
  4063e0:	cmp	x1, x2
  4063e4:	b.cs	406844 <wcrtomb@plt+0x3b04>  // b.hs, b.nlast
  4063e8:	add	x2, x1, #0x1
  4063ec:	str	x2, [x0, #40]
  4063f0:	mov	w0, #0x2f                  	// #47
  4063f4:	strb	w0, [x1]
  4063f8:	ldr	x0, [x20, #24]
  4063fc:	adrp	x25, 438000 <_obstack_memory_used@@Base+0x253b0>
  406400:	mov	w19, #0x0                   	// #0
  406404:	add	x25, x25, #0x508
  406408:	ldr	x1, [x0]
  40640c:	cbz	x1, 406430 <wcrtomb@plt+0x36f0>
  406410:	add	w2, w19, #0x1
  406414:	add	w19, w19, #0x2
  406418:	ldr	x1, [x25]
  40641c:	ldr	x0, [x0, x2, lsl #3]
  406420:	bl	402c30 <fputs_unlocked@plt>
  406424:	ldr	x0, [x20, #24]
  406428:	ldr	x1, [x0, w19, uxtw #3]
  40642c:	cbnz	x1, 406410 <wcrtomb@plt+0x36d0>
  406430:	ldr	x0, [x21, #1288]
  406434:	ldp	x1, x2, [x0, #40]
  406438:	cmp	x1, x2
  40643c:	b.cs	4067e4 <wcrtomb@plt+0x3aa4>  // b.hs, b.nlast
  406440:	add	x2, x1, #0x1
  406444:	str	x2, [x0, #40]
  406448:	mov	w0, #0x2f                  	// #47
  40644c:	strb	w0, [x1]
  406450:	ldr	x0, [x21, #1288]
  406454:	ldp	x1, x2, [x0, #40]
  406458:	b	4060c0 <wcrtomb@plt+0x3380>
  40645c:	ldr	x2, [x20, #24]
  406460:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  406464:	mov	w0, #0x1                   	// #1
  406468:	add	x1, x1, #0x368
  40646c:	bl	4028b0 <__printf_chk@plt>
  406470:	ldr	x0, [x21, #1288]
  406474:	ldp	x1, x2, [x0, #40]
  406478:	b	4060c0 <wcrtomb@plt+0x3380>
  40647c:	ret
  406480:	mov	w1, #0xa                   	// #10
  406484:	bl	402a20 <__overflow@plt>
  406488:	b	4060d8 <wcrtomb@plt+0x3398>
  40648c:	mov	w1, #0x20                  	// #32
  406490:	bl	402a20 <__overflow@plt>
  406494:	ldr	x0, [x21, #1288]
  406498:	ldp	x2, x1, [x0, #40]
  40649c:	b	406010 <wcrtomb@plt+0x32d0>
  4064a0:	bl	402a20 <__overflow@plt>
  4064a4:	b	406028 <wcrtomb@plt+0x32e8>
  4064a8:	mov	w1, #0x2c                  	// #44
  4064ac:	bl	402a20 <__overflow@plt>
  4064b0:	ldr	x0, [x20, #8]
  4064b4:	b	405fc0 <wcrtomb@plt+0x3280>
  4064b8:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  4064bc:	mov	w0, #0x1                   	// #1
  4064c0:	add	x1, x1, #0x260
  4064c4:	bl	4028b0 <__printf_chk@plt>
  4064c8:	ldr	x0, [x21, #1288]
  4064cc:	ldp	x1, x2, [x0, #40]
  4064d0:	b	4060c0 <wcrtomb@plt+0x3380>
  4064d4:	cmp	x1, x2
  4064d8:	b.cs	40685c <wcrtomb@plt+0x3b1c>  // b.hs, b.nlast
  4064dc:	add	x2, x1, #0x1
  4064e0:	str	x2, [x0, #40]
  4064e4:	mov	w0, #0x2f                  	// #47
  4064e8:	strb	w0, [x1]
  4064ec:	ldr	x0, [x21, #1288]
  4064f0:	mov	x19, #0x0                   	// #0
  4064f4:	ldp	x1, x4, [x0, #40]
  4064f8:	b	40651c <wcrtomb@plt+0x37dc>
  4064fc:	add	x2, x1, #0x1
  406500:	str	x2, [x0, #40]
  406504:	strb	w3, [x1]
  406508:	ldr	x0, [x21, #1288]
  40650c:	ldp	x1, x4, [x0, #40]
  406510:	add	x19, x19, #0x1
  406514:	cmp	x19, #0x100
  406518:	b.eq	4066c8 <wcrtomb@plt+0x3988>  // b.none
  40651c:	ldr	x2, [x20, #24]
  406520:	and	w3, w19, #0xff
  406524:	ldrb	w2, [x2, x19]
  406528:	cmp	w2, w19, uxtb
  40652c:	b.eq	406510 <wcrtomb@plt+0x37d0>  // b.none
  406530:	cmp	x1, x4
  406534:	b.cc	4064fc <wcrtomb@plt+0x37bc>  // b.lo, b.ul, b.last
  406538:	mov	w1, w19
  40653c:	bl	402a20 <__overflow@plt>
  406540:	ldr	x0, [x21, #1288]
  406544:	ldp	x1, x4, [x0, #40]
  406548:	b	406510 <wcrtomb@plt+0x37d0>
  40654c:	adrp	x3, 420000 <_obstack_memory_used@@Base+0xd3b0>
  406550:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  406554:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xd3b0>
  406558:	add	x3, x3, #0x338
  40655c:	add	x1, x1, #0x248
  406560:	add	x0, x0, #0x258
  406564:	mov	w2, #0x123                 	// #291
  406568:	stp	x27, x28, [sp, #80]
  40656c:	bl	402ca0 <__assert_fail@plt>
  406570:	adrp	x3, 420000 <_obstack_memory_used@@Base+0xd3b0>
  406574:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  406578:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xd3b0>
  40657c:	add	x3, x3, #0x338
  406580:	add	x1, x1, #0x248
  406584:	add	x0, x0, #0x258
  406588:	mov	w2, #0x17e                 	// #382
  40658c:	stp	x27, x28, [sp, #80]
  406590:	bl	402ca0 <__assert_fail@plt>
  406594:	mov	x1, x26
  406598:	mov	w0, #0x1                   	// #1
  40659c:	bl	4028b0 <__printf_chk@plt>
  4065a0:	b	40623c <wcrtomb@plt+0x34fc>
  4065a4:	mov	w1, #0x21                  	// #33
  4065a8:	bl	402a20 <__overflow@plt>
  4065ac:	ldr	x0, [x21, #1288]
  4065b0:	ldp	x2, x1, [x0, #40]
  4065b4:	b	405fe8 <wcrtomb@plt+0x32a8>
  4065b8:	ldp	x27, x28, [sp, #80]
  4065bc:	ldr	x0, [x21, #1288]
  4065c0:	ldp	x1, x2, [x0, #40]
  4065c4:	cmp	x1, x2
  4065c8:	b.cs	40681c <wcrtomb@plt+0x3adc>  // b.hs, b.nlast
  4065cc:	add	x2, x1, #0x1
  4065d0:	str	x2, [x0, #40]
  4065d4:	mov	w0, #0x2f                  	// #47
  4065d8:	strb	w0, [x1]
  4065dc:	ldr	x0, [x23]
  4065e0:	mov	w1, #0x0                   	// #0
  4065e4:	bl	405990 <wcrtomb@plt+0x2c50>
  4065e8:	ldrb	w0, [x23, #32]
  4065ec:	tbz	w0, #0, 406614 <wcrtomb@plt+0x38d4>
  4065f0:	ldr	x0, [x21, #1288]
  4065f4:	ldp	x1, x2, [x0, #40]
  4065f8:	cmp	x1, x2
  4065fc:	b.cs	406884 <wcrtomb@plt+0x3b44>  // b.hs, b.nlast
  406600:	add	x2, x1, #0x1
  406604:	str	x2, [x0, #40]
  406608:	mov	w0, #0x67                  	// #103
  40660c:	strb	w0, [x1]
  406610:	ldrb	w0, [x23, #32]
  406614:	tbz	w0, #3, 40663c <wcrtomb@plt+0x38fc>
  406618:	ldr	x0, [x21, #1288]
  40661c:	ldp	x1, x2, [x0, #40]
  406620:	cmp	x1, x2
  406624:	b.cs	406894 <wcrtomb@plt+0x3b54>  // b.hs, b.nlast
  406628:	add	x2, x1, #0x1
  40662c:	str	x2, [x0, #40]
  406630:	mov	w0, #0x65                  	// #101
  406634:	strb	w0, [x1]
  406638:	ldrb	w0, [x23, #32]
  40663c:	tst	w0, #0x6
  406640:	b.eq	406664 <wcrtomb@plt+0x3924>  // b.none
  406644:	ldr	x0, [x21, #1288]
  406648:	ldp	x1, x2, [x0, #40]
  40664c:	cmp	x1, x2
  406650:	b.cs	4068a4 <wcrtomb@plt+0x3b64>  // b.hs, b.nlast
  406654:	add	x2, x1, #0x1
  406658:	str	x2, [x0, #40]
  40665c:	mov	w0, #0x70                  	// #112
  406660:	strb	w0, [x1]
  406664:	ldr	x2, [x23, #16]
  406668:	cbnz	x2, 406790 <wcrtomb@plt+0x3a50>
  40666c:	ldr	x0, [x21, #1288]
  406670:	ldr	x3, [x23, #24]
  406674:	ldp	x1, x2, [x0, #40]
  406678:	cbz	x3, 4060c0 <wcrtomb@plt+0x3380>
  40667c:	cmp	x2, x1
  406680:	b.ls	406838 <wcrtomb@plt+0x3af8>  // b.plast
  406684:	add	x2, x1, #0x1
  406688:	str	x2, [x0, #40]
  40668c:	mov	w0, #0x77                  	// #119
  406690:	strb	w0, [x1]
  406694:	ldr	x0, [x23, #24]
  406698:	cbnz	x0, 40618c <wcrtomb@plt+0x344c>
  40669c:	b	4060b8 <wcrtomb@plt+0x3378>
  4066a0:	ldr	x0, [x25]
  4066a4:	ldp	x1, x2, [x0, #40]
  4066a8:	cmp	x1, x2
  4066ac:	b.cs	406828 <wcrtomb@plt+0x3ae8>  // b.hs, b.nlast
  4066b0:	add	x2, x1, #0x1
  4066b4:	str	x2, [x0, #40]
  4066b8:	mov	w0, #0x55                  	// #85
  4066bc:	strb	w0, [x1]
  4066c0:	ldr	w22, [x19, #20]
  4066c4:	b	4061f4 <wcrtomb@plt+0x34b4>
  4066c8:	cmp	x1, x4
  4066cc:	b.cs	406878 <wcrtomb@plt+0x3b38>  // b.hs, b.nlast
  4066d0:	add	x2, x1, #0x1
  4066d4:	str	x2, [x0, #40]
  4066d8:	mov	w0, #0x2f                  	// #47
  4066dc:	strb	w0, [x1]
  4066e0:	ldr	x0, [x21, #1288]
  4066e4:	mov	x19, #0x0                   	// #0
  4066e8:	ldp	x2, x3, [x0, #40]
  4066ec:	b	406710 <wcrtomb@plt+0x39d0>
  4066f0:	add	x3, x2, #0x1
  4066f4:	str	x3, [x0, #40]
  4066f8:	strb	w1, [x2]
  4066fc:	ldr	x0, [x21, #1288]
  406700:	ldp	x2, x3, [x0, #40]
  406704:	add	x19, x19, #0x1
  406708:	cmp	x19, #0x100
  40670c:	b.eq	406738 <wcrtomb@plt+0x39f8>  // b.none
  406710:	ldr	x1, [x20, #24]
  406714:	ldrb	w1, [x1, x19]
  406718:	cmp	w1, w19, uxtb
  40671c:	b.eq	406704 <wcrtomb@plt+0x39c4>  // b.none
  406720:	cmp	x2, x3
  406724:	b.cc	4066f0 <wcrtomb@plt+0x39b0>  // b.lo, b.ul, b.last
  406728:	bl	402a20 <__overflow@plt>
  40672c:	ldr	x0, [x21, #1288]
  406730:	ldp	x2, x3, [x0, #40]
  406734:	b	406704 <wcrtomb@plt+0x39c4>
  406738:	cmp	x2, x3
  40673c:	b.cs	4067e4 <wcrtomb@plt+0x3aa4>  // b.hs, b.nlast
  406740:	add	x1, x2, #0x1
  406744:	str	x1, [x0, #40]
  406748:	mov	w0, #0x2f                  	// #47
  40674c:	strb	w0, [x2]
  406750:	ldr	x0, [x21, #1288]
  406754:	ldp	x1, x2, [x0, #40]
  406758:	b	4060c0 <wcrtomb@plt+0x3380>
  40675c:	ldr	x0, [x25]
  406760:	ldp	x1, x2, [x0, #40]
  406764:	cmp	x1, x2
  406768:	b.cs	406868 <wcrtomb@plt+0x3b28>  // b.hs, b.nlast
  40676c:	add	x2, x1, #0x1
  406770:	str	x2, [x0, #40]
  406774:	mov	w0, #0x4c                  	// #76
  406778:	strb	w0, [x1]
  40677c:	ldr	w22, [x19, #20]
  406780:	b	4061f4 <wcrtomb@plt+0x34b4>
  406784:	mov	w1, #0x5c                  	// #92
  406788:	bl	402a20 <__overflow@plt>
  40678c:	b	406274 <wcrtomb@plt+0x3534>
  406790:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  406794:	mov	w0, #0x1                   	// #1
  406798:	add	x1, x1, #0x220
  40679c:	bl	4028b0 <__printf_chk@plt>
  4067a0:	b	40666c <wcrtomb@plt+0x392c>
  4067a4:	ldr	x0, [x25]
  4067a8:	ldp	x1, x2, [x0, #40]
  4067ac:	cmp	x1, x2
  4067b0:	b.cs	4068b0 <wcrtomb@plt+0x3b70>  // b.hs, b.nlast
  4067b4:	add	x2, x1, #0x1
  4067b8:	str	x2, [x0, #40]
  4067bc:	strb	w27, [x1]
  4067c0:	ldr	w22, [x19, #20]
  4067c4:	b	4061f4 <wcrtomb@plt+0x34b4>
  4067c8:	mov	w1, #0x26                  	// #38
  4067cc:	bl	402a20 <__overflow@plt>
  4067d0:	b	40623c <wcrtomb@plt+0x34fc>
  4067d4:	mov	w1, #0x45                  	// #69
  4067d8:	bl	402a20 <__overflow@plt>
  4067dc:	ldr	w22, [x19, #20]
  4067e0:	b	4061f4 <wcrtomb@plt+0x34b4>
  4067e4:	mov	w1, #0x2f                  	// #47
  4067e8:	bl	402a20 <__overflow@plt>
  4067ec:	ldr	x0, [x21, #1288]
  4067f0:	ldp	x1, x2, [x0, #40]
  4067f4:	b	4060c0 <wcrtomb@plt+0x3380>
  4067f8:	mov	w1, #0x20                  	// #32
  4067fc:	bl	402a20 <__overflow@plt>
  406800:	b	40631c <wcrtomb@plt+0x35dc>
  406804:	mov	w1, #0x20                  	// #32
  406808:	bl	402a20 <__overflow@plt>
  40680c:	b	4062e4 <wcrtomb@plt+0x35a4>
  406810:	mov	w1, #0x20                  	// #32
  406814:	bl	402a20 <__overflow@plt>
  406818:	b	406358 <wcrtomb@plt+0x3618>
  40681c:	mov	w1, #0x2f                  	// #47
  406820:	bl	402a20 <__overflow@plt>
  406824:	b	4065dc <wcrtomb@plt+0x389c>
  406828:	mov	w1, #0x55                  	// #85
  40682c:	bl	402a20 <__overflow@plt>
  406830:	ldr	w22, [x19, #20]
  406834:	b	4061f4 <wcrtomb@plt+0x34b4>
  406838:	mov	w1, #0x77                  	// #119
  40683c:	bl	402a20 <__overflow@plt>
  406840:	b	406694 <wcrtomb@plt+0x3954>
  406844:	mov	w1, #0x2f                  	// #47
  406848:	bl	402a20 <__overflow@plt>
  40684c:	b	4063f8 <wcrtomb@plt+0x36b8>
  406850:	mov	w1, #0x2f                  	// #47
  406854:	bl	402a20 <__overflow@plt>
  406858:	b	4063a4 <wcrtomb@plt+0x3664>
  40685c:	mov	w1, #0x2f                  	// #47
  406860:	bl	402a20 <__overflow@plt>
  406864:	b	4064ec <wcrtomb@plt+0x37ac>
  406868:	mov	w1, #0x4c                  	// #76
  40686c:	bl	402a20 <__overflow@plt>
  406870:	ldr	w22, [x19, #20]
  406874:	b	4061f4 <wcrtomb@plt+0x34b4>
  406878:	mov	w1, #0x2f                  	// #47
  40687c:	bl	402a20 <__overflow@plt>
  406880:	b	4066e0 <wcrtomb@plt+0x39a0>
  406884:	mov	w1, #0x67                  	// #103
  406888:	bl	402a20 <__overflow@plt>
  40688c:	ldrb	w0, [x23, #32]
  406890:	b	406614 <wcrtomb@plt+0x38d4>
  406894:	mov	w1, #0x65                  	// #101
  406898:	bl	402a20 <__overflow@plt>
  40689c:	ldrb	w0, [x23, #32]
  4068a0:	b	40663c <wcrtomb@plt+0x38fc>
  4068a4:	mov	w1, #0x70                  	// #112
  4068a8:	bl	402a20 <__overflow@plt>
  4068ac:	b	406664 <wcrtomb@plt+0x3924>
  4068b0:	mov	w1, #0x75                  	// #117
  4068b4:	bl	402a20 <__overflow@plt>
  4068b8:	ldr	w22, [x19, #20]
  4068bc:	b	4061f4 <wcrtomb@plt+0x34b4>
  4068c0:	mov	w1, #0x6c                  	// #108
  4068c4:	bl	402a20 <__overflow@plt>
  4068c8:	ldr	w22, [x19, #20]
  4068cc:	b	4061f4 <wcrtomb@plt+0x34b4>
  4068d0:	cbz	x0, 406948 <wcrtomb@plt+0x3c08>
  4068d4:	stp	x29, x30, [sp, #-48]!
  4068d8:	mov	w1, #0x1                   	// #1
  4068dc:	mov	x29, sp
  4068e0:	stp	x19, x20, [sp, #16]
  4068e4:	mov	x19, x0
  4068e8:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xd3b0>
  4068ec:	stp	x21, x22, [sp, #32]
  4068f0:	adrp	x22, 438000 <_obstack_memory_used@@Base+0x253b0>
  4068f4:	add	x0, x0, #0x270
  4068f8:	str	w1, [x22, #1552]
  4068fc:	bl	402a40 <puts@plt>
  406900:	ldr	x0, [x19, #16]
  406904:	cbz	x0, 406934 <wcrtomb@plt+0x3bf4>
  406908:	mov	x21, #0x0                   	// #0
  40690c:	mov	x20, #0x0                   	// #0
  406910:	ldr	x1, [x19]
  406914:	mov	x0, x19
  406918:	add	x20, x20, #0x1
  40691c:	add	x1, x1, x21
  406920:	bl	405f00 <wcrtomb@plt+0x31c0>
  406924:	ldr	x0, [x19, #16]
  406928:	add	x21, x21, #0x28
  40692c:	cmp	x0, x20
  406930:	b.hi	406910 <wcrtomb@plt+0x3bd0>  // b.pmore
  406934:	str	wzr, [x22, #1552]
  406938:	ldp	x19, x20, [sp, #16]
  40693c:	ldp	x21, x22, [sp, #32]
  406940:	ldp	x29, x30, [sp], #48
  406944:	ret
  406948:	ret
  40694c:	nop
  406950:	mov	w0, #0x0                   	// #0
  406954:	ret
  406958:	stp	x29, x30, [sp, #-48]!
  40695c:	mov	x29, sp
  406960:	stp	x19, x20, [sp, #16]
  406964:	ldr	x19, [x0, #8]
  406968:	str	x21, [sp, #32]
  40696c:	cbz	x19, 4069f0 <wcrtomb@plt+0x3cb0>
  406970:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x253b0>
  406974:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  406978:	add	x1, x1, #0x618
  40697c:	mov	x2, #0x9                   	// #9
  406980:	ldr	x3, [x21, #1288]
  406984:	cmp	x0, x1
  406988:	ldr	x20, [x0, #16]
  40698c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  406990:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xd3b0>
  406994:	add	x1, x1, #0x350
  406998:	add	x0, x0, #0x360
  40699c:	csel	x0, x1, x0, eq  // eq = none
  4069a0:	mov	x1, #0x1                   	// #1
  4069a4:	bl	402680 <fwrite_unlocked@plt>
  4069a8:	cbz	x20, 4069c0 <wcrtomb@plt+0x3c80>
  4069ac:	add	x20, x19, x20
  4069b0:	ldrb	w0, [x19], #1
  4069b4:	bl	405a58 <wcrtomb@plt+0x2d18>
  4069b8:	cmp	x19, x20
  4069bc:	b.ne	4069b0 <wcrtomb@plt+0x3c70>  // b.any
  4069c0:	ldr	x0, [x21, #1288]
  4069c4:	ldp	x1, x2, [x0, #40]
  4069c8:	cmp	x1, x2
  4069cc:	b.cs	4069f8 <wcrtomb@plt+0x3cb8>  // b.hs, b.nlast
  4069d0:	add	x2, x1, #0x1
  4069d4:	str	x2, [x0, #40]
  4069d8:	mov	w0, #0xa                   	// #10
  4069dc:	strb	w0, [x1]
  4069e0:	ldp	x19, x20, [sp, #16]
  4069e4:	ldr	x21, [sp, #32]
  4069e8:	ldp	x29, x30, [sp], #48
  4069ec:	ret
  4069f0:	ldr	x19, [x0]
  4069f4:	b	406970 <wcrtomb@plt+0x3c30>
  4069f8:	ldp	x19, x20, [sp, #16]
  4069fc:	mov	w1, #0xa                   	// #10
  406a00:	ldr	x21, [sp, #32]
  406a04:	ldp	x29, x30, [sp], #48
  406a08:	b	402a20 <__overflow@plt>
  406a0c:	nop
  406a10:	stp	x29, x30, [sp, #-48]!
  406a14:	mov	x29, sp
  406a18:	stp	x19, x20, [sp, #16]
  406a1c:	mov	x19, x0
  406a20:	mov	x20, x1
  406a24:	ldr	x0, [x0]
  406a28:	ldr	x1, [x19, #8]
  406a2c:	ldr	x2, [x19, #24]
  406a30:	sub	x3, x1, x0
  406a34:	str	x21, [sp, #32]
  406a38:	lsl	x2, x2, #1
  406a3c:	cmp	x2, w3, sxtw
  406a40:	b.cc	406aa0 <wcrtomb@plt+0x3d60>  // b.lo, b.ul, b.last
  406a44:	sxtw	x21, w3
  406a48:	cmp	x20, x2
  406a4c:	b.hi	406a94 <wcrtomb@plt+0x3d54>  // b.pmore
  406a50:	str	x2, [x19, #24]
  406a54:	add	x1, x2, #0x1
  406a58:	cmp	x2, #0x31
  406a5c:	b.hi	406a6c <wcrtomb@plt+0x3d2c>  // b.pmore
  406a60:	mov	x2, #0x32                  	// #50
  406a64:	mov	x1, #0x33                  	// #51
  406a68:	str	x2, [x19, #24]
  406a6c:	adds	x1, x21, x1
  406a70:	b.mi	406ad4 <wcrtomb@plt+0x3d94>  // b.first
  406a74:	bl	412658 <wcrtomb@plt+0xf918>
  406a78:	str	x0, [x19]
  406a7c:	add	x0, x0, x21
  406a80:	str	x0, [x19, #8]
  406a84:	ldp	x19, x20, [sp, #16]
  406a88:	ldr	x21, [sp, #32]
  406a8c:	ldp	x29, x30, [sp], #48
  406a90:	ret
  406a94:	mov	x2, x20
  406a98:	str	x20, [x19, #24]
  406a9c:	b	406a54 <wcrtomb@plt+0x3d14>
  406aa0:	ldr	x2, [x19, #16]
  406aa4:	bl	402660 <memmove@plt>
  406aa8:	ldp	x0, x2, [x19]
  406aac:	str	x0, [x19, #8]
  406ab0:	ldr	x1, [x19, #24]
  406ab4:	sub	x2, x2, x0
  406ab8:	add	x2, x2, x1
  406abc:	str	x2, [x19, #24]
  406ac0:	cmp	x2, x20
  406ac4:	b.hi	406a84 <wcrtomb@plt+0x3d44>  // b.pmore
  406ac8:	lsl	x2, x2, #1
  406acc:	mov	x21, #0x0                   	// #0
  406ad0:	b	406a48 <wcrtomb@plt+0x3d08>
  406ad4:	bl	412830 <wcrtomb@plt+0xfaf0>
  406ad8:	stp	x29, x30, [sp, #-16]!
  406adc:	mov	x1, #0x28                  	// #40
  406ae0:	mov	x0, #0x1                   	// #1
  406ae4:	mov	x29, sp
  406ae8:	bl	412790 <wcrtomb@plt+0xfa50>
  406aec:	stp	xzr, xzr, [x0]
  406af0:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  406af4:	add	x1, x1, #0x618
  406af8:	stp	xzr, xzr, [x0, #16]
  406afc:	strb	wzr, [x0, #32]
  406b00:	ldr	x2, [x1, #48]
  406b04:	cbz	x2, 406b18 <wcrtomb@plt+0x3dd8>
  406b08:	str	x0, [x2, #24]
  406b0c:	str	x0, [x1, #48]
  406b10:	ldp	x29, x30, [sp], #16
  406b14:	ret
  406b18:	str	x0, [x1, #48]
  406b1c:	str	x0, [x1, #56]
  406b20:	ldp	x29, x30, [sp], #16
  406b24:	ret
  406b28:	stp	x29, x30, [sp, #-48]!
  406b2c:	mov	x29, sp
  406b30:	stp	x19, x20, [sp, #16]
  406b34:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x253b0>
  406b38:	add	x20, x20, #0x618
  406b3c:	stp	x21, x22, [sp, #32]
  406b40:	mov	x21, x0
  406b44:	mov	x19, x1
  406b48:	str	x0, [x1, #48]
  406b4c:	str	xzr, [x20, #80]
  406b50:	ldrb	w0, [x0]
  406b54:	cmp	w0, #0x2d
  406b58:	b.eq	406c70 <wcrtomb@plt+0x3f30>  // b.none
  406b5c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  406b60:	ldrb	w0, [x0, #1880]
  406b64:	cbnz	w0, 406c9c <wcrtomb@plt+0x3f5c>
  406b68:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  406b6c:	mov	x0, x21
  406b70:	mov	w2, #0x0                   	// #0
  406b74:	adrp	x22, 438000 <_obstack_memory_used@@Base+0x253b0>
  406b78:	ldr	x1, [x1, #1128]
  406b7c:	bl	409f78 <wcrtomb@plt+0x7238>
  406b80:	str	x0, [x19, #184]
  406b84:	cbz	x0, 406cc0 <wcrtomb@plt+0x3f80>
  406b88:	ldr	x1, [x22, #1888]
  406b8c:	adrp	x0, 407000 <wcrtomb@plt+0x42c0>
  406b90:	add	x0, x0, #0xe8
  406b94:	str	x0, [x19, #32]
  406b98:	cbz	x1, 406c40 <wcrtomb@plt+0x3f00>
  406b9c:	ldr	x0, [x19, #48]
  406ba0:	bl	412800 <wcrtomb@plt+0xfac0>
  406ba4:	mov	x21, x0
  406ba8:	mov	w1, #0x2f                  	// #47
  406bac:	bl	4029b0 <strrchr@plt>
  406bb0:	cbz	x0, 406d28 <wcrtomb@plt+0x3fe8>
  406bb4:	strb	wzr, [x0]
  406bb8:	ldr	x0, [x19, #184]
  406bbc:	bl	402780 <fileno@plt>
  406bc0:	bl	402bc0 <isatty@plt>
  406bc4:	cbnz	w0, 406d34 <wcrtomb@plt+0x3ff4>
  406bc8:	ldr	x0, [x19, #184]
  406bcc:	bl	402780 <fileno@plt>
  406bd0:	mov	w1, w0
  406bd4:	add	x2, x19, #0x38
  406bd8:	mov	w0, #0x0                   	// #0
  406bdc:	bl	402c00 <__fxstat@plt>
  406be0:	ldr	w0, [x19, #72]
  406be4:	and	w0, w0, #0xf000
  406be8:	cmp	w0, #0x8, lsl #12
  406bec:	b.ne	406d50 <wcrtomb@plt+0x4010>  // b.any
  406bf0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  406bf4:	mov	x1, x21
  406bf8:	adrp	x2, 420000 <_obstack_memory_used@@Base+0xd3b0>
  406bfc:	add	x2, x2, #0x3d0
  406c00:	ldr	x3, [x0, #1136]
  406c04:	add	x0, x19, #0x28
  406c08:	bl	40a068 <wcrtomb@plt+0x7328>
  406c0c:	mov	x1, x0
  406c10:	ldr	x0, [x19, #40]
  406c14:	str	x1, [x20, #128]
  406c18:	bl	409c38 <wcrtomb@plt+0x6ef8>
  406c1c:	strb	wzr, [x20, #120]
  406c20:	mov	x0, x21
  406c24:	bl	402ae0 <free@plt>
  406c28:	ldr	x0, [x20, #128]
  406c2c:	cbz	x0, 406d6c <wcrtomb@plt+0x402c>
  406c30:	ldp	x19, x20, [sp, #16]
  406c34:	ldp	x21, x22, [sp, #32]
  406c38:	ldp	x29, x30, [sp], #48
  406c3c:	ret
  406c40:	ldr	x0, [x19, #184]
  406c44:	cbz	x0, 406c54 <wcrtomb@plt+0x3f14>
  406c48:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  406c4c:	ldrb	w1, [x1, #1902]
  406c50:	cbnz	w1, 406cac <wcrtomb@plt+0x3f6c>
  406c54:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  406c58:	ldp	x21, x22, [sp, #32]
  406c5c:	ldr	x0, [x0, #1288]
  406c60:	str	x0, [x20, #128]
  406c64:	ldp	x19, x20, [sp, #16]
  406c68:	ldp	x29, x30, [sp], #48
  406c6c:	ret
  406c70:	ldrb	w0, [x21, #1]
  406c74:	cbnz	w0, 406b5c <wcrtomb@plt+0x3e1c>
  406c78:	adrp	x22, 438000 <_obstack_memory_used@@Base+0x253b0>
  406c7c:	ldr	x0, [x22, #1888]
  406c80:	cbnz	x0, 406b5c <wcrtomb@plt+0x3e1c>
  406c84:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x253b0>
  406c88:	ldr	x0, [x21, #1296]
  406c8c:	bl	402b90 <clearerr_unlocked@plt>
  406c90:	ldr	x0, [x21, #1296]
  406c94:	str	x0, [x19, #184]
  406c98:	b	406b88 <wcrtomb@plt+0x3e48>
  406c9c:	mov	x0, x21
  406ca0:	bl	40a4a8 <wcrtomb@plt+0x7768>
  406ca4:	str	x0, [x19, #48]
  406ca8:	b	406b68 <wcrtomb@plt+0x3e28>
  406cac:	mov	x3, #0x0                   	// #0
  406cb0:	mov	w2, #0x2                   	// #2
  406cb4:	mov	x1, #0x0                   	// #0
  406cb8:	bl	402740 <setvbuf@plt>
  406cbc:	b	406c54 <wcrtomb@plt+0x3f14>
  406cc0:	bl	402cb0 <__errno_location@plt>
  406cc4:	ldr	w0, [x0]
  406cc8:	bl	4029a0 <strerror@plt>
  406ccc:	mov	x20, x0
  406cd0:	adrp	x3, 438000 <_obstack_memory_used@@Base+0x253b0>
  406cd4:	mov	w2, #0x5                   	// #5
  406cd8:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  406cdc:	mov	x0, #0x0                   	// #0
  406ce0:	ldr	x22, [x3, #1264]
  406ce4:	add	x1, x1, #0x370
  406ce8:	bl	402c20 <dcgettext@plt>
  406cec:	mov	x2, x0
  406cf0:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  406cf4:	mov	x5, x20
  406cf8:	mov	x0, x22
  406cfc:	mov	x4, x21
  406d00:	ldr	x3, [x1, #1936]
  406d04:	mov	w1, #0x1                   	// #1
  406d08:	bl	402a90 <__fprintf_chk@plt>
  406d0c:	ldr	x0, [x19, #8]
  406d10:	adrp	x1, 406000 <wcrtomb@plt+0x32c0>
  406d14:	add	x1, x1, #0x950
  406d18:	str	x1, [x19, #32]
  406d1c:	add	x0, x0, #0x1
  406d20:	str	x0, [x19, #8]
  406d24:	b	406c30 <wcrtomb@plt+0x3ef0>
  406d28:	mov	w0, #0x2e                  	// #46
  406d2c:	strh	w0, [x21]
  406d30:	b	406bb8 <wcrtomb@plt+0x3e78>
  406d34:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  406d38:	mov	w2, #0x5                   	// #5
  406d3c:	add	x1, x1, #0x388
  406d40:	mov	x0, #0x0                   	// #0
  406d44:	bl	402c20 <dcgettext@plt>
  406d48:	ldr	x1, [x19, #48]
  406d4c:	bl	409df0 <wcrtomb@plt+0x70b0>
  406d50:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  406d54:	mov	w2, #0x5                   	// #5
  406d58:	add	x1, x1, #0x3a8
  406d5c:	mov	x0, #0x0                   	// #0
  406d60:	bl	402c20 <dcgettext@plt>
  406d64:	ldr	x1, [x19, #48]
  406d68:	bl	409df0 <wcrtomb@plt+0x70b0>
  406d6c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  406d70:	add	x1, x1, #0x3d8
  406d74:	mov	w2, #0x5                   	// #5
  406d78:	bl	402c20 <dcgettext@plt>
  406d7c:	mov	x20, x0
  406d80:	bl	402cb0 <__errno_location@plt>
  406d84:	ldr	w0, [x0]
  406d88:	ldr	x19, [x19, #40]
  406d8c:	bl	4029a0 <strerror@plt>
  406d90:	mov	x2, x0
  406d94:	mov	x1, x19
  406d98:	mov	x0, x20
  406d9c:	bl	409df0 <wcrtomb@plt+0x70b0>
  406da0:	stp	x29, x30, [sp, #-80]!
  406da4:	adrp	x1, 406000 <wcrtomb@plt+0x32c0>
  406da8:	add	x1, x1, #0x950
  406dac:	mov	x29, sp
  406db0:	stp	x19, x20, [sp, #16]
  406db4:	mov	x19, x0
  406db8:	ldr	x0, [x0, #184]
  406dbc:	str	x1, [x19, #32]
  406dc0:	cbz	x0, 406f10 <wcrtomb@plt+0x41d0>
  406dc4:	stp	x21, x22, [sp, #32]
  406dc8:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x253b0>
  406dcc:	ldr	x1, [x21, #1888]
  406dd0:	cbz	x1, 406f04 <wcrtomb@plt+0x41c4>
  406dd4:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x253b0>
  406dd8:	add	x20, x20, #0x618
  406ddc:	stp	x23, x24, [sp, #48]
  406de0:	ldr	x1, [x20, #128]
  406de4:	cbz	x1, 406f00 <wcrtomb@plt+0x41c0>
  406de8:	ldr	x22, [x19, #48]
  406dec:	bl	402780 <fileno@plt>
  406df0:	mov	w24, w0
  406df4:	ldr	x0, [x20, #128]
  406df8:	bl	402780 <fileno@plt>
  406dfc:	mov	w23, w0
  406e00:	ldp	w1, w2, [x19, #80]
  406e04:	bl	402ce0 <fchown@plt>
  406e08:	cmn	w0, #0x1
  406e0c:	b.eq	406f48 <wcrtomb@plt+0x4208>  // b.none
  406e10:	ldp	x2, x0, [x19, #40]
  406e14:	mov	w3, w23
  406e18:	ldr	w4, [x19, #72]
  406e1c:	mov	w1, w24
  406e20:	bl	40a908 <wcrtomb@plt+0x7bc8>
  406e24:	ldr	x0, [x19, #184]
  406e28:	bl	40a408 <wcrtomb@plt+0x76c8>
  406e2c:	ldr	x0, [x20, #128]
  406e30:	bl	40a408 <wcrtomb@plt+0x76c8>
  406e34:	ldr	x20, [x21, #1888]
  406e38:	ldrb	w0, [x20]
  406e3c:	cmp	w0, #0x2a
  406e40:	b.eq	406f1c <wcrtomb@plt+0x41dc>  // b.none
  406e44:	mov	x0, x22
  406e48:	str	x25, [sp, #64]
  406e4c:	bl	402690 <strlen@plt>
  406e50:	mov	x24, x0
  406e54:	sub	w25, w24, #0x1
  406e58:	mov	x0, x20
  406e5c:	bl	402690 <strlen@plt>
  406e60:	mov	w23, w0
  406e64:	b	406e70 <wcrtomb@plt+0x4130>
  406e68:	add	w23, w23, w25
  406e6c:	add	x20, x0, #0x1
  406e70:	mov	x0, x20
  406e74:	mov	w1, #0x2a                  	// #42
  406e78:	bl	402b20 <strchr@plt>
  406e7c:	cbnz	x0, 406e68 <wcrtomb@plt+0x4128>
  406e80:	add	w23, w23, #0x1
  406e84:	sxtw	x24, w24
  406e88:	sxtw	x0, w23
  406e8c:	bl	4125f8 <wcrtomb@plt+0xf8b8>
  406e90:	ldr	x20, [x21, #1888]
  406e94:	mov	x25, x0
  406e98:	mov	x21, x0
  406e9c:	b	406ec0 <wcrtomb@plt+0x4180>
  406ea0:	sub	x2, x3, x20
  406ea4:	add	x20, x3, #0x1
  406ea8:	add	x23, x21, x2
  406eac:	bl	402650 <memcpy@plt>
  406eb0:	add	x21, x23, x24
  406eb4:	mov	x0, x23
  406eb8:	mov	x1, x22
  406ebc:	bl	402b80 <strcpy@plt>
  406ec0:	mov	w1, #0x2a                  	// #42
  406ec4:	mov	x0, x20
  406ec8:	bl	402b20 <strchr@plt>
  406ecc:	mov	x3, x0
  406ed0:	mov	x1, x20
  406ed4:	mov	x0, x21
  406ed8:	cbnz	x3, 406ea0 <wcrtomb@plt+0x4160>
  406edc:	bl	402b80 <strcpy@plt>
  406ee0:	ldr	x2, [x19, #40]
  406ee4:	mov	x1, x25
  406ee8:	mov	x0, x22
  406eec:	bl	40a6c8 <wcrtomb@plt+0x7988>
  406ef0:	mov	x0, x25
  406ef4:	bl	402ae0 <free@plt>
  406ef8:	ldr	x25, [sp, #64]
  406efc:	b	406f24 <wcrtomb@plt+0x41e4>
  406f00:	ldp	x23, x24, [sp, #48]
  406f04:	bl	40a408 <wcrtomb@plt+0x76c8>
  406f08:	ldp	x21, x22, [sp, #32]
  406f0c:	str	xzr, [x19, #184]
  406f10:	ldp	x19, x20, [sp, #16]
  406f14:	ldp	x29, x30, [sp], #80
  406f18:	ret
  406f1c:	ldrb	w0, [x20, #1]
  406f20:	cbnz	w0, 406e44 <wcrtomb@plt+0x4104>
  406f24:	ldr	x2, [x19, #40]
  406f28:	mov	x1, x22
  406f2c:	mov	x0, x2
  406f30:	bl	40a6c8 <wcrtomb@plt+0x7988>
  406f34:	bl	409c48 <wcrtomb@plt+0x6f08>
  406f38:	ldr	x0, [x19, #40]
  406f3c:	bl	402ae0 <free@plt>
  406f40:	ldp	x23, x24, [sp, #48]
  406f44:	b	406f08 <wcrtomb@plt+0x41c8>
  406f48:	ldr	w2, [x19, #84]
  406f4c:	mov	w1, w0
  406f50:	mov	w0, w23
  406f54:	bl	402ce0 <fchown@plt>
  406f58:	b	406e10 <wcrtomb@plt+0x40d0>
  406f5c:	nop
  406f60:	stp	x29, x30, [sp, #-32]!
  406f64:	mov	x29, sp
  406f68:	str	x19, [sp, #16]
  406f6c:	mov	x19, x0
  406f70:	b	406f84 <wcrtomb@plt+0x4244>
  406f74:	str	x2, [x19]
  406f78:	bl	406b28 <wcrtomb@plt+0x3de8>
  406f7c:	ldr	x0, [x19, #184]
  406f80:	cbnz	x0, 406fb0 <wcrtomb@plt+0x4270>
  406f84:	mov	x0, x19
  406f88:	bl	406da0 <wcrtomb@plt+0x4060>
  406f8c:	ldr	x0, [x19]
  406f90:	mov	x1, x19
  406f94:	add	x2, x0, #0x8
  406f98:	ldr	x0, [x0]
  406f9c:	cbnz	x0, 406f74 <wcrtomb@plt+0x4234>
  406fa0:	mov	w0, #0x1                   	// #1
  406fa4:	ldr	x19, [sp, #16]
  406fa8:	ldp	x29, x30, [sp], #32
  406fac:	ret
  406fb0:	ldp	x1, x2, [x0, #8]
  406fb4:	cmp	x1, x2
  406fb8:	b.cs	406fdc <wcrtomb@plt+0x429c>  // b.hs, b.nlast
  406fbc:	add	x2, x1, #0x1
  406fc0:	str	x2, [x0, #8]
  406fc4:	ldrb	w2, [x1]
  406fc8:	mov	x1, x0
  406fcc:	mov	w0, w2
  406fd0:	bl	402af0 <ungetc@plt>
  406fd4:	mov	w0, #0x0                   	// #0
  406fd8:	b	406fa4 <wcrtomb@plt+0x4264>
  406fdc:	bl	402d00 <__uflow@plt>
  406fe0:	mov	w2, w0
  406fe4:	cmn	w0, #0x1
  406fe8:	b.eq	406f84 <wcrtomb@plt+0x4244>  // b.none
  406fec:	ldr	x0, [x19, #184]
  406ff0:	b	406fc8 <wcrtomb@plt+0x4288>
  406ff4:	nop
  406ff8:	stp	x29, x30, [sp, #-64]!
  406ffc:	mov	x29, sp
  407000:	stp	x19, x20, [sp, #16]
  407004:	mov	x20, x1
  407008:	mov	x19, x2
  40700c:	ldp	x3, x1, [x0, #16]
  407010:	stp	x21, x22, [sp, #32]
  407014:	mov	x21, x0
  407018:	str	x23, [sp, #48]
  40701c:	add	x23, x3, x2
  407020:	cmp	x1, x23
  407024:	b.cc	4070d4 <wcrtomb@plt+0x4394>  // b.lo, b.ul, b.last
  407028:	ldr	x0, [x21, #8]
  40702c:	adrp	x22, 438000 <_obstack_memory_used@@Base+0x253b0>
  407030:	mov	x2, x19
  407034:	mov	x1, x20
  407038:	add	x0, x0, x3
  40703c:	bl	402650 <memcpy@plt>
  407040:	ldr	w4, [x22, #2260]
  407044:	str	x23, [x21, #16]
  407048:	cmp	w4, #0x1
  40704c:	b.le	4070c0 <wcrtomb@plt+0x4380>
  407050:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  407054:	ldrb	w0, [x0, #2256]
  407058:	cbnz	w0, 4070c0 <wcrtomb@plt+0x4380>
  40705c:	cbz	x19, 4070c0 <wcrtomb@plt+0x4380>
  407060:	add	x21, x21, #0x24
  407064:	add	x22, x22, #0x8d4
  407068:	b	407080 <wcrtomb@plt+0x4340>
  40706c:	cbz	x0, 4070c0 <wcrtomb@plt+0x4380>
  407070:	add	x20, x20, x4
  407074:	subs	x19, x19, x4
  407078:	b.eq	4070c0 <wcrtomb@plt+0x4380>  // b.none
  40707c:	ldr	w4, [x22]
  407080:	cmp	w4, #0x1
  407084:	mov	x2, x19
  407088:	mov	x1, x20
  40708c:	mov	x3, x21
  407090:	mov	x0, #0x0                   	// #0
  407094:	mov	x4, #0x1                   	// #1
  407098:	b.eq	407070 <wcrtomb@plt+0x4330>  // b.none
  40709c:	bl	412878 <wcrtomb@plt+0xfb38>
  4070a0:	mov	x4, x0
  4070a4:	cmn	x0, #0x3
  4070a8:	b.ls	40706c <wcrtomb@plt+0x432c>  // b.plast
  4070ac:	str	xzr, [x21]
  4070b0:	mov	x4, #0x1                   	// #1
  4070b4:	add	x20, x20, x4
  4070b8:	subs	x19, x19, x4
  4070bc:	b.ne	40707c <wcrtomb@plt+0x433c>  // b.any
  4070c0:	ldp	x19, x20, [sp, #16]
  4070c4:	ldp	x21, x22, [sp, #32]
  4070c8:	ldr	x23, [sp, #48]
  4070cc:	ldp	x29, x30, [sp], #64
  4070d0:	ret
  4070d4:	mov	x1, x23
  4070d8:	bl	406a10 <wcrtomb@plt+0x3cd0>
  4070dc:	ldr	x3, [x21, #16]
  4070e0:	b	407028 <wcrtomb@plt+0x42e8>
  4070e4:	nop
  4070e8:	stp	x29, x30, [sp, #-32]!
  4070ec:	mov	x29, sp
  4070f0:	stp	x19, x20, [sp, #16]
  4070f4:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x253b0>
  4070f8:	adrp	x19, 438000 <_obstack_memory_used@@Base+0x253b0>
  4070fc:	ldrb	w2, [x20, #1120]
  407100:	add	x19, x19, #0x618
  407104:	ldr	x3, [x0, #184]
  407108:	add	x1, x19, #0x90
  40710c:	add	x0, x19, #0x98
  407110:	bl	40a2b0 <wcrtomb@plt+0x7570>
  407114:	cmp	x0, #0x0
  407118:	b.le	40715c <wcrtomb@plt+0x441c>
  40711c:	ldr	x1, [x19, #152]
  407120:	mov	x2, x0
  407124:	ldrb	w0, [x20, #1120]
  407128:	add	x3, x1, x2
  40712c:	ldurb	w3, [x3, #-1]
  407130:	cmp	w3, w0
  407134:	b.eq	407154 <wcrtomb@plt+0x4414>  // b.none
  407138:	strb	wzr, [x19, #192]
  40713c:	add	x0, x19, #0xa0
  407140:	bl	406ff8 <wcrtomb@plt+0x42b8>
  407144:	mov	w0, #0x1                   	// #1
  407148:	ldp	x19, x20, [sp, #16]
  40714c:	ldp	x29, x30, [sp], #32
  407150:	ret
  407154:	sub	x2, x2, #0x1
  407158:	b	40713c <wcrtomb@plt+0x43fc>
  40715c:	mov	w0, #0x0                   	// #0
  407160:	ldp	x19, x20, [sp, #16]
  407164:	ldp	x29, x30, [sp], #32
  407168:	ret
  40716c:	nop
  407170:	ldr	x1, [x0, #184]
  407174:	cbz	x1, 4071c4 <wcrtomb@plt+0x4484>
  407178:	ldr	w2, [x1]
  40717c:	tbnz	w2, #4, 4071c4 <wcrtomb@plt+0x4484>
  407180:	stp	x29, x30, [sp, #-32]!
  407184:	mov	x29, sp
  407188:	ldr	x2, [x1, #16]
  40718c:	str	x19, [sp, #16]
  407190:	mov	x19, x0
  407194:	ldr	x0, [x1, #8]
  407198:	cmp	x0, x2
  40719c:	b.cs	4071d8 <wcrtomb@plt+0x4498>  // b.hs, b.nlast
  4071a0:	add	x2, x0, #0x1
  4071a4:	str	x2, [x1, #8]
  4071a8:	ldrb	w0, [x0]
  4071ac:	bl	402af0 <ungetc@plt>
  4071b0:	mov	w1, #0x0                   	// #0
  4071b4:	mov	w0, w1
  4071b8:	ldr	x19, [sp, #16]
  4071bc:	ldp	x29, x30, [sp], #32
  4071c0:	ret
  4071c4:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  4071c8:	ldrb	w1, [x1, #1881]
  4071cc:	cbz	w1, 407200 <wcrtomb@plt+0x44c0>
  4071d0:	mov	w0, w1
  4071d4:	ret
  4071d8:	mov	x0, x1
  4071dc:	bl	402d00 <__uflow@plt>
  4071e0:	cmn	w0, #0x1
  4071e4:	b.ne	407204 <wcrtomb@plt+0x44c4>  // b.any
  4071e8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  4071ec:	ldrb	w1, [x0, #1881]
  4071f0:	cbnz	w1, 4071b4 <wcrtomb@plt+0x4474>
  4071f4:	mov	x0, x19
  4071f8:	ldr	x19, [sp, #16]
  4071fc:	ldp	x29, x30, [sp], #32
  407200:	b	406f60 <wcrtomb@plt+0x4220>
  407204:	ldr	x1, [x19, #184]
  407208:	b	4071ac <wcrtomb@plt+0x446c>
  40720c:	nop
  407210:	ldr	w2, [x0]
  407214:	mov	x3, x0
  407218:	cmp	w2, #0x3
  40721c:	b.eq	4072b0 <wcrtomb@plt+0x4570>  // b.none
  407220:	stp	x29, x30, [sp, #-16]!
  407224:	mov	x29, sp
  407228:	b.hi	407268 <wcrtomb@plt+0x4528>  // b.pmore
  40722c:	cmp	w2, #0x1
  407230:	b.eq	4072e0 <wcrtomb@plt+0x45a0>  // b.none
  407234:	cmp	w2, #0x2
  407238:	b.ne	407254 <wcrtomb@plt+0x4514>  // b.any
  40723c:	ldr	x2, [x3, #8]
  407240:	ldr	x0, [x1, #16]
  407244:	cmp	x2, x0
  407248:	cset	w0, eq  // eq = none
  40724c:	ldp	x29, x30, [sp], #16
  407250:	ret
  407254:	mov	w0, #0x1                   	// #1
  407258:	cbz	w2, 40724c <wcrtomb@plt+0x450c>
  40725c:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xd3b0>
  407260:	add	x0, x0, #0x400
  407264:	bl	409df0 <wcrtomb@plt+0x70b0>
  407268:	cmp	w2, #0x5
  40726c:	b.hi	407288 <wcrtomb@plt+0x4548>  // b.pmore
  407270:	ldr	x2, [x3, #8]
  407274:	ldr	x0, [x1, #16]
  407278:	ldp	x29, x30, [sp], #16
  40727c:	cmp	x2, x0
  407280:	cset	w0, ls  // ls = plast
  407284:	ret
  407288:	cmp	w2, #0x6
  40728c:	b.ne	40725c <wcrtomb@plt+0x451c>  // b.any
  407290:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  407294:	ldr	x0, [x0, #1640]
  407298:	cbnz	x0, 4072a8 <wcrtomb@plt+0x4568>
  40729c:	ldp	x29, x30, [sp], #16
  4072a0:	mov	x0, x1
  4072a4:	b	407170 <wcrtomb@plt+0x4430>
  4072a8:	mov	w0, #0x0                   	// #0
  4072ac:	b	40724c <wcrtomb@plt+0x450c>
  4072b0:	ldr	x2, [x3, #8]
  4072b4:	mov	w0, #0x0                   	// #0
  4072b8:	ldr	x1, [x1, #16]
  4072bc:	cmp	x1, x2
  4072c0:	b.cc	407318 <wcrtomb@plt+0x45d8>  // b.lo, b.ul, b.last
  4072c4:	ldr	x3, [x3, #16]
  4072c8:	sub	x1, x1, x2
  4072cc:	udiv	x0, x1, x3
  4072d0:	msub	x1, x0, x3, x1
  4072d4:	cmp	x1, #0x0
  4072d8:	cset	w0, eq  // eq = none
  4072dc:	ret
  4072e0:	adrp	x2, 438000 <_obstack_memory_used@@Base+0x253b0>
  4072e4:	add	x2, x2, #0x618
  4072e8:	add	x2, x2, #0xa0
  4072ec:	mov	w5, #0x0                   	// #0
  4072f0:	ldr	x0, [x0, #24]
  4072f4:	mov	x4, #0x0                   	// #0
  4072f8:	ldr	x1, [x2, #8]
  4072fc:	mov	x3, #0x0                   	// #0
  407300:	ldr	x2, [x2, #16]
  407304:	bl	409440 <wcrtomb@plt+0x6700>
  407308:	cmp	w0, #0x0
  40730c:	cset	w0, ne  // ne = any
  407310:	ldp	x29, x30, [sp], #16
  407314:	ret
  407318:	ret
  40731c:	nop
  407320:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  407324:	add	x1, x1, #0x618
  407328:	ldp	x4, x5, [x0]
  40732c:	add	x2, x1, #0xa0
  407330:	ldp	x6, x7, [x1, #160]
  407334:	stp	x4, x5, [x1, #160]
  407338:	ldr	w1, [x1, #192]
  40733c:	ldp	x8, x9, [x0, #16]
  407340:	sub	sp, sp, #0x30
  407344:	ldp	x4, x5, [x2, #16]
  407348:	stp	x8, x9, [x2, #16]
  40734c:	ldr	w3, [x0, #32]
  407350:	str	w3, [x2, #32]
  407354:	stp	x6, x7, [x0]
  407358:	stp	x4, x5, [x0, #16]
  40735c:	str	w1, [x0, #32]
  407360:	add	sp, sp, #0x30
  407364:	ret
  407368:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  40736c:	add	x0, x0, #0x618
  407370:	sub	sp, sp, #0x30
  407374:	ldp	x8, x9, [x0, #176]
  407378:	ldp	x6, x7, [x0, #224]
  40737c:	stp	x6, x7, [x0, #176]
  407380:	stp	x8, x9, [x0, #224]
  407384:	ldp	x4, x5, [x0, #160]
  407388:	ldp	x6, x7, [x0, #192]
  40738c:	ldp	x2, x3, [x0, #208]
  407390:	stp	x2, x3, [x0, #160]
  407394:	ldp	x8, x9, [x0, #240]
  407398:	stp	x8, x9, [x0, #192]
  40739c:	stp	x4, x5, [x0, #208]
  4073a0:	stp	x6, x7, [x0, #240]
  4073a4:	add	sp, sp, #0x30
  4073a8:	ret
  4073ac:	nop
  4073b0:	stp	x29, x30, [sp, #-32]!
  4073b4:	mov	x2, #0x1                   	// #1
  4073b8:	mov	x29, sp
  4073bc:	stp	x19, x20, [sp, #16]
  4073c0:	mov	x20, x0
  4073c4:	mov	x19, x1
  4073c8:	mov	x0, x1
  4073cc:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  4073d0:	add	x1, x1, #0x460
  4073d4:	bl	406ff8 <wcrtomb@plt+0x42b8>
  4073d8:	ldp	x1, x2, [x20, #8]
  4073dc:	mov	x0, x19
  4073e0:	bl	406ff8 <wcrtomb@plt+0x42b8>
  4073e4:	ldrb	w0, [x20, #32]
  4073e8:	strb	w0, [x19, #32]
  4073ec:	ldur	x0, [x20, #36]
  4073f0:	stur	x0, [x19, #36]
  4073f4:	ldp	x19, x20, [sp, #16]
  4073f8:	ldp	x29, x30, [sp], #32
  4073fc:	ret
  407400:	stp	x29, x30, [sp, #-32]!
  407404:	mov	x29, sp
  407408:	stp	x19, x20, [sp, #16]
  40740c:	mov	x19, x1
  407410:	mov	x20, x0
  407414:	ldp	x0, x1, [x1]
  407418:	ldr	x3, [x19, #24]
  40741c:	ldr	x2, [x20, #16]
  407420:	sub	x1, x1, x0
  407424:	add	x1, x1, x3
  407428:	str	x1, [x19, #24]
  40742c:	cmp	x1, x2
  407430:	b.cs	407470 <wcrtomb@plt+0x4730>  // b.hs, b.nlast
  407434:	cmp	x2, x1, lsl #1
  407438:	lsl	x1, x1, #1
  40743c:	b.hi	407498 <wcrtomb@plt+0x4758>  // b.pmore
  407440:	mov	x2, x1
  407444:	str	x1, [x19, #24]
  407448:	cmp	x2, #0x31
  40744c:	b.hi	407458 <wcrtomb@plt+0x4718>  // b.pmore
  407450:	mov	x1, #0x32                  	// #50
  407454:	str	x1, [x19, #24]
  407458:	bl	402ae0 <free@plt>
  40745c:	ldr	x0, [x19, #24]
  407460:	add	x0, x0, #0x1
  407464:	bl	4127c8 <wcrtomb@plt+0xfa88>
  407468:	ldr	x2, [x20, #16]
  40746c:	str	x0, [x19]
  407470:	ldrb	w3, [x20, #32]
  407474:	stp	x0, x2, [x19, #8]
  407478:	ldp	x1, x2, [x20, #8]
  40747c:	strb	w3, [x19, #32]
  407480:	bl	402650 <memcpy@plt>
  407484:	ldur	x0, [x20, #36]
  407488:	stur	x0, [x19, #36]
  40748c:	ldp	x19, x20, [sp, #16]
  407490:	ldp	x29, x30, [sp], #32
  407494:	ret
  407498:	str	x2, [x19, #24]
  40749c:	b	407448 <wcrtomb@plt+0x4708>
  4074a0:	stp	x29, x30, [sp, #-96]!
  4074a4:	mov	x29, sp
  4074a8:	stp	x19, x20, [sp, #16]
  4074ac:	mov	x19, x1
  4074b0:	stp	x21, x22, [sp, #32]
  4074b4:	mov	x21, x0
  4074b8:	cbz	w2, 407684 <wcrtomb@plt+0x4944>
  4074bc:	stp	x23, x24, [sp, #48]
  4074c0:	adrp	x23, 438000 <_obstack_memory_used@@Base+0x253b0>
  4074c4:	add	x23, x23, #0x618
  4074c8:	add	x0, x23, #0xd0
  4074cc:	stp	x25, x26, [sp, #64]
  4074d0:	adrp	x25, 438000 <_obstack_memory_used@@Base+0x253b0>
  4074d4:	mov	w20, w2
  4074d8:	ldp	x3, x2, [x0, #16]
  4074dc:	ldrsw	x1, [x25, #2260]
  4074e0:	mul	x1, x1, x19
  4074e4:	sub	x2, x2, x3
  4074e8:	cmp	x2, x1
  4074ec:	b.cc	407678 <wcrtomb@plt+0x4938>  // b.lo, b.ul, b.last
  4074f0:	ldur	x0, [x23, #244]
  4074f4:	str	x0, [sp, #88]
  4074f8:	adrp	x22, 438000 <_obstack_memory_used@@Base+0x253b0>
  4074fc:	add	x22, x22, #0x8d4
  407500:	cbz	x19, 407580 <wcrtomb@plt+0x4840>
  407504:	add	x24, x23, #0xf4
  407508:	ldr	w0, [x22]
  40750c:	cmp	w0, #0x1
  407510:	b.ne	407598 <wcrtomb@plt+0x4858>  // b.any
  407514:	ldrb	w0, [x21]
  407518:	bl	4029d0 <btowc@plt>
  40751c:	str	w0, [sp, #84]
  407520:	mov	x3, #0x1                   	// #1
  407524:	tst	w20, #0xc
  407528:	add	x21, x21, x3
  40752c:	sub	x19, x19, x3
  407530:	b.eq	4075d8 <wcrtomb@plt+0x4898>  // b.none
  407534:	tbz	w20, #2, 407610 <wcrtomb@plt+0x48d0>
  407538:	bl	402c70 <towupper@plt>
  40753c:	str	w0, [sp, #84]
  407540:	ands	w20, w20, #0xfffffff3
  407544:	b.eq	4076ac <wcrtomb@plt+0x496c>  // b.none
  407548:	ldr	w1, [x22]
  40754c:	cmp	w1, #0x1
  407550:	b.eq	4075f0 <wcrtomb@plt+0x48b0>  // b.none
  407554:	mov	w1, w0
  407558:	mov	x2, x24
  40755c:	ldp	x3, x0, [x23, #216]
  407560:	add	x0, x3, x0
  407564:	bl	402d40 <wcrtomb@plt>
  407568:	ldr	x1, [x23, #224]
  40756c:	cmn	x0, #0x3
  407570:	add	x0, x1, x0
  407574:	str	x0, [x23, #224]
  407578:	b.hi	4076e4 <wcrtomb@plt+0x49a4>  // b.pmore
  40757c:	cbnz	x19, 407508 <wcrtomb@plt+0x47c8>
  407580:	ldp	x19, x20, [sp, #16]
  407584:	ldp	x21, x22, [sp, #32]
  407588:	ldp	x23, x24, [sp, #48]
  40758c:	ldp	x25, x26, [sp, #64]
  407590:	ldp	x29, x30, [sp], #96
  407594:	ret
  407598:	add	x3, sp, #0x58
  40759c:	mov	x2, x19
  4075a0:	mov	x1, x21
  4075a4:	add	x0, sp, #0x54
  4075a8:	bl	412878 <wcrtomb@plt+0xfb38>
  4075ac:	mov	x3, x0
  4075b0:	cmn	x0, #0x1
  4075b4:	b.eq	407624 <wcrtomb@plt+0x48e4>  // b.none
  4075b8:	cmp	x0, #0x0
  4075bc:	ccmn	x0, #0x2, #0x4, ne  // ne = any
  4075c0:	b.eq	40762c <wcrtomb@plt+0x48ec>  // b.none
  4075c4:	ldr	w0, [sp, #84]
  4075c8:	add	x21, x21, x3
  4075cc:	sub	x19, x19, x3
  4075d0:	tst	w20, #0xc
  4075d4:	b.ne	407534 <wcrtomb@plt+0x47f4>  // b.any
  4075d8:	tbz	w20, #0, 407618 <wcrtomb@plt+0x48d8>
  4075dc:	bl	402c70 <towupper@plt>
  4075e0:	str	w0, [sp, #84]
  4075e4:	ldr	w1, [x22]
  4075e8:	cmp	w1, #0x1
  4075ec:	b.ne	407554 <wcrtomb@plt+0x4814>  // b.any
  4075f0:	bl	4027b0 <wctob@plt>
  4075f4:	ldp	x3, x2, [x23, #216]
  4075f8:	strb	w0, [x3, x2]
  4075fc:	ldr	x0, [x23, #224]
  407600:	add	x0, x0, #0x1
  407604:	str	x0, [x23, #224]
  407608:	cbnz	x19, 407508 <wcrtomb@plt+0x47c8>
  40760c:	b	407580 <wcrtomb@plt+0x4840>
  407610:	bl	402cf0 <towlower@plt>
  407614:	b	40753c <wcrtomb@plt+0x47fc>
  407618:	bl	402cf0 <towlower@plt>
  40761c:	str	w0, [sp, #84]
  407620:	b	407548 <wcrtomb@plt+0x4808>
  407624:	ands	w20, w20, #0xfffffff3
  407628:	b.ne	407654 <wcrtomb@plt+0x4914>  // b.any
  40762c:	mov	x2, x19
  407630:	mov	x1, x21
  407634:	add	x0, x23, #0xd0
  407638:	bl	406ff8 <wcrtomb@plt+0x42b8>
  40763c:	ldp	x19, x20, [sp, #16]
  407640:	ldp	x21, x22, [sp, #32]
  407644:	ldp	x23, x24, [sp, #48]
  407648:	ldp	x25, x26, [sp, #64]
  40764c:	ldp	x29, x30, [sp], #96
  407650:	ret
  407654:	mov	x1, x21
  407658:	mov	x2, #0x1                   	// #1
  40765c:	add	x0, x23, #0xd0
  407660:	add	x21, x21, x2
  407664:	bl	406ff8 <wcrtomb@plt+0x42b8>
  407668:	str	xzr, [x24]
  40766c:	sub	x19, x19, #0x1
  407670:	cbnz	x19, 407508 <wcrtomb@plt+0x47c8>
  407674:	b	407580 <wcrtomb@plt+0x4840>
  407678:	add	x1, x3, x1
  40767c:	bl	406a10 <wcrtomb@plt+0x3cd0>
  407680:	b	4074f0 <wcrtomb@plt+0x47b0>
  407684:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  407688:	add	x0, x0, #0x618
  40768c:	mov	x2, x1
  407690:	add	x0, x0, #0xd0
  407694:	mov	x1, x21
  407698:	bl	406ff8 <wcrtomb@plt+0x42b8>
  40769c:	ldp	x19, x20, [sp, #16]
  4076a0:	ldp	x21, x22, [sp, #32]
  4076a4:	ldp	x29, x30, [sp], #96
  4076a8:	ret
  4076ac:	ldr	w1, [x25, #2260]
  4076b0:	cmp	w1, #0x1
  4076b4:	b.eq	407714 <wcrtomb@plt+0x49d4>  // b.none
  4076b8:	add	x20, x23, #0xd0
  4076bc:	mov	w1, w0
  4076c0:	add	x2, x23, #0xf4
  4076c4:	ldp	x3, x0, [x20, #8]
  4076c8:	add	x0, x3, x0
  4076cc:	bl	402d40 <wcrtomb@plt>
  4076d0:	ldr	x1, [x20, #16]
  4076d4:	cmn	x0, #0x3
  4076d8:	add	x0, x1, x0
  4076dc:	str	x0, [x20, #16]
  4076e0:	b.ls	40762c <wcrtomb@plt+0x48ec>  // b.plast
  4076e4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  4076e8:	mov	w2, #0x5                   	// #5
  4076ec:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  4076f0:	add	x1, x1, #0x428
  4076f4:	ldr	x19, [x0, #1264]
  4076f8:	mov	x0, #0x0                   	// #0
  4076fc:	bl	402c20 <dcgettext@plt>
  407700:	mov	x2, x0
  407704:	mov	w1, #0x1                   	// #1
  407708:	mov	x0, x19
  40770c:	bl	402a90 <__fprintf_chk@plt>
  407710:	bl	4029e0 <abort@plt>
  407714:	bl	4027b0 <wctob@plt>
  407718:	ldp	x3, x2, [x23, #216]
  40771c:	strb	w0, [x3, x2]
  407720:	ldr	x0, [x23, #224]
  407724:	add	x0, x0, #0x1
  407728:	str	x0, [x23, #224]
  40772c:	b	40762c <wcrtomb@plt+0x48ec>
  407730:	stp	x29, x30, [sp, #-48]!
  407734:	mov	x29, sp
  407738:	stp	x19, x20, [sp, #16]
  40773c:	mov	x19, x0
  407740:	mov	x20, x2
  407744:	add	x0, x2, #0x1
  407748:	str	x21, [sp, #32]
  40774c:	mov	x21, x1
  407750:	bl	4127c8 <wcrtomb@plt+0xfa88>
  407754:	mov	w1, #0x1                   	// #1
  407758:	stp	x0, x0, [x19]
  40775c:	stp	xzr, x20, [x19, #16]
  407760:	strb	w1, [x19, #32]
  407764:	cbz	x21, 407780 <wcrtomb@plt+0x4a40>
  407768:	ldur	x0, [x21, #36]
  40776c:	stur	x0, [x19, #36]
  407770:	ldp	x19, x20, [sp, #16]
  407774:	ldr	x21, [sp, #32]
  407778:	ldp	x29, x30, [sp], #48
  40777c:	ret
  407780:	stur	xzr, [x19, #36]
  407784:	ldp	x19, x20, [sp, #16]
  407788:	ldr	x21, [sp, #32]
  40778c:	ldp	x29, x30, [sp], #48
  407790:	ret
  407794:	nop
  407798:	adrp	x2, 438000 <_obstack_memory_used@@Base+0x253b0>
  40779c:	add	x2, x2, #0x618
  4077a0:	add	x3, x2, #0xd0
  4077a4:	ldr	x1, [x3, #24]
  4077a8:	cbz	x1, 4077c8 <wcrtomb@plt+0x4a88>
  4077ac:	str	xzr, [x3, #16]
  4077b0:	cbz	x0, 4077c0 <wcrtomb@plt+0x4a80>
  4077b4:	ldur	x0, [x0, #36]
  4077b8:	stur	x0, [x3, #36]
  4077bc:	ret
  4077c0:	stur	xzr, [x2, #244]
  4077c4:	ret
  4077c8:	mov	x1, x0
  4077cc:	mov	x2, #0x32                  	// #50
  4077d0:	mov	x0, x3
  4077d4:	b	407730 <wcrtomb@plt+0x49f0>
  4077d8:	cbz	x0, 4078a8 <wcrtomb@plt+0x4b68>
  4077dc:	stp	x29, x30, [sp, #-48]!
  4077e0:	mov	x29, sp
  4077e4:	stp	x19, x20, [sp, #16]
  4077e8:	mov	x20, x0
  4077ec:	ldrb	w0, [x3, #8]
  4077f0:	stp	x21, x22, [sp, #32]
  4077f4:	mov	x19, x3
  4077f8:	mov	x21, x1
  4077fc:	mov	w22, w2
  407800:	ldr	x3, [x3, #16]
  407804:	cbnz	w0, 407884 <wcrtomb@plt+0x4b44>
  407808:	cbnz	x21, 407834 <wcrtomb@plt+0x4af4>
  40780c:	cbnz	w22, 40784c <wcrtomb@plt+0x4b0c>
  407810:	mov	w0, #0x1                   	// #1
  407814:	strb	w0, [x19, #8]
  407818:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  40781c:	ldrb	w0, [x0, #1902]
  407820:	cbnz	w0, 407870 <wcrtomb@plt+0x4b30>
  407824:	ldp	x19, x20, [sp, #16]
  407828:	ldp	x21, x22, [sp, #32]
  40782c:	ldp	x29, x30, [sp], #48
  407830:	ret
  407834:	mov	x2, x21
  407838:	mov	x0, x20
  40783c:	mov	x1, #0x1                   	// #1
  407840:	bl	40a160 <wcrtomb@plt+0x7420>
  407844:	ldr	x3, [x19, #16]
  407848:	cbz	w22, 407810 <wcrtomb@plt+0x4ad0>
  40784c:	mov	x2, #0x1                   	// #1
  407850:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  407854:	mov	x1, x2
  407858:	add	x0, x0, #0x460
  40785c:	bl	40a160 <wcrtomb@plt+0x7420>
  407860:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  407864:	ldr	x3, [x19, #16]
  407868:	ldrb	w0, [x0, #1902]
  40786c:	cbz	w0, 407824 <wcrtomb@plt+0x4ae4>
  407870:	ldp	x19, x20, [sp, #16]
  407874:	mov	x0, x3
  407878:	ldp	x21, x22, [sp, #32]
  40787c:	ldp	x29, x30, [sp], #48
  407880:	b	40a328 <wcrtomb@plt+0x75e8>
  407884:	mov	x2, #0x1                   	// #1
  407888:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  40788c:	mov	x1, x2
  407890:	add	x0, x0, #0x460
  407894:	bl	40a160 <wcrtomb@plt+0x7420>
  407898:	strb	wzr, [x19, #8]
  40789c:	ldr	x3, [x19, #16]
  4078a0:	cbz	x21, 40780c <wcrtomb@plt+0x4acc>
  4078a4:	b	407834 <wcrtomb@plt+0x4af4>
  4078a8:	ret
  4078ac:	nop
  4078b0:	mov	x12, #0x2030                	// #8240
  4078b4:	sub	sp, sp, x12
  4078b8:	stp	x29, x30, [sp]
  4078bc:	mov	x29, sp
  4078c0:	stp	x21, x22, [sp, #32]
  4078c4:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x253b0>
  4078c8:	add	x21, x21, #0x618
  4078cc:	stp	x19, x20, [sp, #16]
  4078d0:	ldrb	w0, [x21, #120]
  4078d4:	cbnz	w0, 4079d0 <wcrtomb@plt+0x4c90>
  4078d8:	ldr	x19, [x21, #56]
  4078dc:	cbz	x19, 4079f4 <wcrtomb@plt+0x4cb4>
  4078e0:	adrp	x22, 438000 <_obstack_memory_used@@Base+0x253b0>
  4078e4:	b	4078f0 <wcrtomb@plt+0x4bb0>
  4078e8:	ldr	x19, [x19, #24]
  4078ec:	cbz	x19, 40792c <wcrtomb@plt+0x4bec>
  4078f0:	ldr	x0, [x19, #8]
  4078f4:	cbz	x0, 407908 <wcrtomb@plt+0x4bc8>
  4078f8:	ldr	x2, [x19, #16]
  4078fc:	mov	x1, #0x1                   	// #1
  407900:	ldr	x3, [x21, #128]
  407904:	bl	40a160 <wcrtomb@plt+0x7420>
  407908:	ldr	x0, [x19]
  40790c:	cbz	x0, 4078e8 <wcrtomb@plt+0x4ba8>
  407910:	ldr	x1, [x22, #1128]
  407914:	mov	w2, #0x0                   	// #0
  407918:	bl	409f78 <wcrtomb@plt+0x7238>
  40791c:	mov	x20, x0
  407920:	cbnz	x0, 4079a8 <wcrtomb@plt+0x4c68>
  407924:	ldr	x19, [x19, #24]
  407928:	cbnz	x19, 4078f0 <wcrtomb@plt+0x4bb0>
  40792c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  407930:	ldrb	w0, [x0, #1902]
  407934:	cbnz	w0, 407a00 <wcrtomb@plt+0x4cc0>
  407938:	ldr	x19, [x21, #56]
  40793c:	cbnz	x19, 407958 <wcrtomb@plt+0x4c18>
  407940:	b	40797c <wcrtomb@plt+0x4c3c>
  407944:	ldr	x20, [x19, #24]
  407948:	mov	x0, x19
  40794c:	bl	402ae0 <free@plt>
  407950:	mov	x19, x20
  407954:	cbz	x20, 40797c <wcrtomb@plt+0x4c3c>
  407958:	ldrb	w0, [x19, #32]
  40795c:	cbz	w0, 407944 <wcrtomb@plt+0x4c04>
  407960:	ldr	x0, [x19, #8]
  407964:	bl	402ae0 <free@plt>
  407968:	ldr	x20, [x19, #24]
  40796c:	mov	x0, x19
  407970:	bl	402ae0 <free@plt>
  407974:	mov	x19, x20
  407978:	cbnz	x20, 407958 <wcrtomb@plt+0x4c18>
  40797c:	stp	xzr, xzr, [x21, #48]
  407980:	mov	x12, #0x2030                	// #8240
  407984:	ldp	x29, x30, [sp]
  407988:	ldp	x19, x20, [sp, #16]
  40798c:	ldp	x21, x22, [sp, #32]
  407990:	add	sp, sp, x12
  407994:	ret
  407998:	ldr	x3, [x21, #128]
  40799c:	add	x0, sp, #0x30
  4079a0:	mov	x1, #0x1                   	// #1
  4079a4:	bl	40a160 <wcrtomb@plt+0x7420>
  4079a8:	mov	x2, #0x2000                	// #8192
  4079ac:	mov	x3, x20
  4079b0:	add	x0, sp, #0x30
  4079b4:	mov	x1, #0x1                   	// #1
  4079b8:	bl	40a210 <wcrtomb@plt+0x74d0>
  4079bc:	mov	x2, x0
  4079c0:	cbnz	x0, 407998 <wcrtomb@plt+0x4c58>
  4079c4:	mov	x0, x20
  4079c8:	bl	40a408 <wcrtomb@plt+0x76c8>
  4079cc:	b	4078e8 <wcrtomb@plt+0x4ba8>
  4079d0:	ldr	x3, [x21, #128]
  4079d4:	mov	x2, #0x1                   	// #1
  4079d8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  4079dc:	mov	x1, x2
  4079e0:	add	x0, x0, #0x460
  4079e4:	bl	40a160 <wcrtomb@plt+0x7420>
  4079e8:	strb	wzr, [x21, #120]
  4079ec:	ldr	x19, [x21, #56]
  4079f0:	cbnz	x19, 4078e0 <wcrtomb@plt+0x4ba0>
  4079f4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  4079f8:	ldrb	w0, [x0, #1902]
  4079fc:	cbz	w0, 40797c <wcrtomb@plt+0x4c3c>
  407a00:	ldr	x0, [x21, #128]
  407a04:	bl	40a328 <wcrtomb@plt+0x75e8>
  407a08:	b	407938 <wcrtomb@plt+0x4bf8>
  407a0c:	nop
  407a10:	stp	x29, x30, [sp, #-64]!
  407a14:	mov	x29, sp
  407a18:	stp	x19, x20, [sp, #16]
  407a1c:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x253b0>
  407a20:	add	x20, x20, #0x618
  407a24:	mov	x19, x0
  407a28:	stp	x21, x22, [sp, #32]
  407a2c:	mov	x21, x1
  407a30:	ldr	x0, [x20, #56]
  407a34:	stp	x23, x24, [sp, #48]
  407a38:	mov	w22, w2
  407a3c:	cbz	x0, 407a44 <wcrtomb@plt+0x4d04>
  407a40:	bl	4078b0 <wcrtomb@plt+0x4b70>
  407a44:	strb	wzr, [x20, #256]
  407a48:	cbnz	w22, 407a50 <wcrtomb@plt+0x4d10>
  407a4c:	str	xzr, [x20, #176]
  407a50:	mov	w0, #0x1                   	// #1
  407a54:	adrp	x22, 438000 <_obstack_memory_used@@Base+0x253b0>
  407a58:	adrp	x23, 438000 <_obstack_memory_used@@Base+0x253b0>
  407a5c:	add	x22, x22, #0x759
  407a60:	strb	w0, [x20, #192]
  407a64:	b	407a78 <wcrtomb@plt+0x4d38>
  407a68:	add	x2, x2, #0x8
  407a6c:	str	x2, [x19]
  407a70:	mov	x1, x19
  407a74:	bl	406b28 <wcrtomb@plt+0x3de8>
  407a78:	ldr	x1, [x19, #32]
  407a7c:	mov	x0, x19
  407a80:	blr	x1
  407a84:	ands	w24, w0, #0xff
  407a88:	b.ne	407b28 <wcrtomb@plt+0x4de8>  // b.any
  407a8c:	mov	x0, x19
  407a90:	bl	406da0 <wcrtomb@plt+0x4060>
  407a94:	ldr	x2, [x19]
  407a98:	ldr	x0, [x2]
  407a9c:	cbz	x0, 407b34 <wcrtomb@plt+0x4df4>
  407aa0:	ldrb	w1, [x19, #24]
  407aa4:	cbz	w1, 407a68 <wcrtomb@plt+0x4d28>
  407aa8:	ldr	x2, [x21]
  407aac:	str	xzr, [x19, #16]
  407ab0:	str	xzr, [x20, #16]
  407ab4:	ldr	x0, [x21, #16]
  407ab8:	cbz	w0, 407b04 <wcrtomb@plt+0x4dc4>
  407abc:	sub	w0, w0, #0x1
  407ac0:	add	x1, x0, #0x1
  407ac4:	add	x1, x1, x1, lsl #2
  407ac8:	add	x1, x2, x1, lsl #3
  407acc:	nop
  407ad0:	ldr	x0, [x2]
  407ad4:	mov	w3, #0x0                   	// #0
  407ad8:	cbz	x0, 407af4 <wcrtomb@plt+0x4db4>
  407adc:	ldr	w4, [x0]
  407ae0:	cmp	w4, #0x2
  407ae4:	b.ne	407af4 <wcrtomb@plt+0x4db4>  // b.any
  407ae8:	ldr	x0, [x0, #8]
  407aec:	cmp	x0, #0x0
  407af0:	cset	w3, eq  // eq = none
  407af4:	str	w3, [x2, #16]
  407af8:	add	x2, x2, #0x28
  407afc:	cmp	x2, x1
  407b00:	b.ne	407ad0 <wcrtomb@plt+0x4d90>  // b.any
  407b04:	bl	405898 <wcrtomb@plt+0x2b58>
  407b08:	ldr	x0, [x23, #1888]
  407b0c:	cbz	x0, 407b14 <wcrtomb@plt+0x4dd4>
  407b10:	strb	wzr, [x20, #120]
  407b14:	ldr	x2, [x19]
  407b18:	ldrb	w0, [x22]
  407b1c:	strb	w0, [x19, #24]
  407b20:	ldr	x0, [x2]
  407b24:	b	407a68 <wcrtomb@plt+0x4d28>
  407b28:	ldr	x0, [x19, #16]
  407b2c:	add	x0, x0, #0x1
  407b30:	str	x0, [x19, #16]
  407b34:	mov	w0, w24
  407b38:	ldp	x19, x20, [sp, #16]
  407b3c:	ldp	x21, x22, [sp, #32]
  407b40:	ldp	x23, x24, [sp, #48]
  407b44:	ldp	x29, x30, [sp], #64
  407b48:	ret
  407b4c:	nop
  407b50:	mov	x12, #0x10b0                	// #4272
  407b54:	sub	sp, sp, x12
  407b58:	stp	x29, x30, [sp]
  407b5c:	mov	x29, sp
  407b60:	stp	x19, x20, [sp, #16]
  407b64:	ldr	x20, [x0, #16]
  407b68:	stp	x27, x28, [sp, #80]
  407b6c:	ldr	x28, [x0]
  407b70:	add	x20, x20, x20, lsl #2
  407b74:	stp	x21, x22, [sp, #32]
  407b78:	mov	x22, x1
  407b7c:	stp	x23, x24, [sp, #48]
  407b80:	adrp	x23, 438000 <_obstack_memory_used@@Base+0x253b0>
  407b84:	add	x20, x28, x20, lsl #3
  407b88:	ldrb	w1, [x23, #1901]
  407b8c:	cmp	x28, x20
  407b90:	b.cs	407cdc <wcrtomb@plt+0x4f9c>  // b.hs, b.nlast
  407b94:	adrp	x19, 438000 <_obstack_memory_used@@Base+0x253b0>
  407b98:	add	x19, x19, #0x618
  407b9c:	stp	x25, x26, [sp, #64]
  407ba0:	mov	x26, x0
  407ba4:	add	x0, x19, #0xd0
  407ba8:	str	x0, [sp, #112]
  407bac:	nop
  407bb0:	cbz	w1, 407bdc <wcrtomb@plt+0x4e9c>
  407bb4:	adrp	x3, 438000 <_obstack_memory_used@@Base+0x253b0>
  407bb8:	mov	x2, #0x9                   	// #9
  407bbc:	mov	x1, #0x1                   	// #1
  407bc0:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xd3b0>
  407bc4:	ldr	x3, [x3, #1288]
  407bc8:	add	x0, x0, #0x458
  407bcc:	bl	402680 <fwrite_unlocked@plt>
  407bd0:	mov	x1, x28
  407bd4:	mov	x0, x26
  407bd8:	bl	405f00 <wcrtomb@plt+0x31c0>
  407bdc:	ldr	x0, [x28]
  407be0:	cbz	x0, 407c58 <wcrtomb@plt+0x4f18>
  407be4:	ldr	w1, [x28, #16]
  407be8:	ldr	x2, [x28, #8]
  407bec:	cmp	w1, #0x1
  407bf0:	b.eq	407d74 <wcrtomb@plt+0x5034>  // b.none
  407bf4:	cbz	x2, 407e14 <wcrtomb@plt+0x50d4>
  407bf8:	ldr	w3, [x0]
  407bfc:	cmp	w3, #0x2
  407c00:	b.ne	407da0 <wcrtomb@plt+0x5060>  // b.any
  407c04:	cmp	w1, #0x2
  407c08:	b.eq	407e00 <wcrtomb@plt+0x50c0>  // b.none
  407c0c:	ldr	x0, [x0, #8]
  407c10:	ldr	x1, [x22, #16]
  407c14:	cmp	x1, x0
  407c18:	b.cc	407e00 <wcrtomb@plt+0x50c0>  // b.lo, b.ul, b.last
  407c1c:	ldr	w0, [x2]
  407c20:	mov	w1, #0x1                   	// #1
  407c24:	str	w1, [x28, #16]
  407c28:	cmp	w0, #0x4
  407c2c:	b.eq	407dc8 <wcrtomb@plt+0x5088>  // b.none
  407c30:	b.hi	407d54 <wcrtomb@plt+0x5014>  // b.pmore
  407c34:	cmp	w0, w1
  407c38:	b.eq	407c5c <wcrtomb@plt+0x4f1c>  // b.none
  407c3c:	cmp	w0, #0x2
  407c40:	b.ne	407ddc <wcrtomb@plt+0x509c>  // b.any
  407c44:	ldr	x1, [x2, #8]
  407c48:	ldr	x2, [x22, #16]
  407c4c:	cmp	x2, x1
  407c50:	b.cs	407e08 <wcrtomb@plt+0x50c8>  // b.hs, b.nlast
  407c54:	nop
  407c58:	mov	w1, #0x1                   	// #1
  407c5c:	ldrb	w0, [x28, #20]
  407c60:	cmp	w0, w1
  407c64:	b.eq	407cc8 <wcrtomb@plt+0x4f88>  // b.none
  407c68:	ldrb	w1, [x28, #21]
  407c6c:	sub	w0, w1, #0x23
  407c70:	cmp	w0, #0x5a
  407c74:	b.ls	407d3c <wcrtomb@plt+0x4ffc>  // b.plast
  407c78:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xd3b0>
  407c7c:	add	x0, x0, #0x4f0
  407c80:	bl	409df0 <wcrtomb@plt+0x70b0>
  407c84:	ldrb	w1, [x19, #120]
  407c88:	adrp	x25, 438000 <_obstack_memory_used@@Base+0x253b0>
  407c8c:	add	x0, x25, #0x460
  407c90:	str	x0, [sp, #136]
  407c94:	ldr	x0, [x19, #128]
  407c98:	cbnz	w1, 408b58 <wcrtomb@plt+0x5e18>
  407c9c:	ldrb	w4, [x25, #1120]
  407ca0:	adrp	x2, 420000 <_obstack_memory_used@@Base+0xd3b0>
  407ca4:	ldr	x3, [x22, #16]
  407ca8:	add	x2, x2, #0x4e0
  407cac:	mov	w1, #0x1                   	// #1
  407cb0:	bl	402a90 <__fprintf_chk@plt>
  407cb4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  407cb8:	ldrb	w0, [x0, #1902]
  407cbc:	cbz	w0, 407cc8 <wcrtomb@plt+0x4f88>
  407cc0:	ldr	x0, [x19, #128]
  407cc4:	bl	40a328 <wcrtomb@plt+0x75e8>
  407cc8:	ldrb	w1, [x23, #1901]
  407ccc:	add	x28, x28, #0x28
  407cd0:	cmp	x20, x28
  407cd4:	b.hi	407bb0 <wcrtomb@plt+0x4e70>  // b.pmore
  407cd8:	ldp	x25, x26, [sp, #64]
  407cdc:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x253b0>
  407ce0:	cbz	w1, 407cf0 <wcrtomb@plt+0x4fb0>
  407ce4:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xd3b0>
  407ce8:	add	x0, x0, #0x468
  407cec:	bl	402a40 <puts@plt>
  407cf0:	ldrb	w0, [x21, #1864]
  407cf4:	cbnz	w0, 407d18 <wcrtomb@plt+0x4fd8>
  407cf8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  407cfc:	add	x0, x0, #0x618
  407d00:	add	x1, x0, #0xa0
  407d04:	add	x3, x0, #0x70
  407d08:	ldrb	w2, [x0, #192]
  407d0c:	ldr	x1, [x1, #16]
  407d10:	ldr	x0, [x0, #168]
  407d14:	bl	4077d8 <wcrtomb@plt+0x4a98>
  407d18:	mov	w0, #0xffffffff            	// #-1
  407d1c:	mov	x12, #0x10b0                	// #4272
  407d20:	ldp	x29, x30, [sp]
  407d24:	ldp	x19, x20, [sp, #16]
  407d28:	ldp	x21, x22, [sp, #32]
  407d2c:	ldp	x23, x24, [sp, #48]
  407d30:	ldp	x27, x28, [sp, #80]
  407d34:	add	sp, sp, x12
  407d38:	ret
  407d3c:	adrp	x2, 420000 <_obstack_memory_used@@Base+0xd3b0>
  407d40:	add	x2, x2, #0x540
  407d44:	ldrh	w0, [x2, w0, uxtw #1]
  407d48:	adr	x2, 407d54 <wcrtomb@plt+0x5014>
  407d4c:	add	x0, x2, w0, sxth #2
  407d50:	br	x0
  407d54:	cmp	w0, #0x5
  407d58:	b.ne	407ddc <wcrtomb@plt+0x509c>  // b.any
  407d5c:	ldr	x0, [x2, #16]
  407d60:	ldr	x3, [x22, #16]
  407d64:	udiv	x3, x3, x0
  407d68:	madd	x0, x3, x0, x0
  407d6c:	str	x0, [x2, #8]
  407d70:	b	407c5c <wcrtomb@plt+0x4f1c>
  407d74:	ldr	w0, [x2]
  407d78:	cmp	w0, #0x2
  407d7c:	b.ne	407ddc <wcrtomb@plt+0x509c>  // b.any
  407d80:	ldr	x1, [x2, #8]
  407d84:	ldr	x2, [x22, #16]
  407d88:	cmp	x2, x1
  407d8c:	b.cc	407d94 <wcrtomb@plt+0x5054>  // b.lo, b.ul, b.last
  407d90:	str	w0, [x28, #16]
  407d94:	cmp	x2, x1
  407d98:	cset	w1, ls  // ls = plast
  407d9c:	b	407c5c <wcrtomb@plt+0x4f1c>
  407da0:	mov	x1, x22
  407da4:	bl	407210 <wcrtomb@plt+0x44d0>
  407da8:	tst	w0, #0xff
  407dac:	b.eq	407e00 <wcrtomb@plt+0x50c0>  // b.none
  407db0:	ldr	x2, [x28, #8]
  407db4:	mov	w1, #0x1                   	// #1
  407db8:	ldr	w0, [x2]
  407dbc:	str	w1, [x28, #16]
  407dc0:	cmp	w0, #0x4
  407dc4:	b.ne	407c30 <wcrtomb@plt+0x4ef0>  // b.any
  407dc8:	ldr	x0, [x22, #16]
  407dcc:	ldr	x3, [x2, #16]
  407dd0:	add	x0, x0, x3
  407dd4:	str	x0, [x2, #8]
  407dd8:	b	407c5c <wcrtomb@plt+0x4f1c>
  407ddc:	mov	x0, x2
  407de0:	mov	x1, x22
  407de4:	bl	407210 <wcrtomb@plt+0x44d0>
  407de8:	tst	w0, #0xff
  407dec:	b.eq	407c58 <wcrtomb@plt+0x4f18>  // b.none
  407df0:	mov	w0, #0x2                   	// #2
  407df4:	mov	w1, #0x1                   	// #1
  407df8:	str	w0, [x28, #16]
  407dfc:	b	407c5c <wcrtomb@plt+0x4f1c>
  407e00:	mov	w1, #0x0                   	// #0
  407e04:	b	407c5c <wcrtomb@plt+0x4f1c>
  407e08:	str	w0, [x28, #16]
  407e0c:	b.eq	407c58 <wcrtomb@plt+0x4f18>  // b.none
  407e10:	ldr	x0, [x28]
  407e14:	mov	x1, x22
  407e18:	bl	407210 <wcrtomb@plt+0x44d0>
  407e1c:	and	w1, w0, #0xff
  407e20:	b	407c5c <wcrtomb@plt+0x4f1c>
  407e24:	ldr	w0, [x28, #16]
  407e28:	cmp	w0, #0x1
  407e2c:	b.eq	407e4c <wcrtomb@plt+0x510c>  // b.none
  407e30:	ldp	x0, x1, [x28, #24]
  407e34:	adrp	x3, 438000 <_obstack_memory_used@@Base+0x253b0>
  407e38:	add	x3, x3, #0x618
  407e3c:	mov	w2, #0x1                   	// #1
  407e40:	add	x3, x3, #0x70
  407e44:	sub	x1, x1, #0x1
  407e48:	bl	4077d8 <wcrtomb@plt+0x4a98>
  407e4c:	ldrb	w0, [x23, #1901]
  407e50:	cbnz	w0, 407ebc <wcrtomb@plt+0x517c>
  407e54:	ldp	x25, x26, [sp, #64]
  407e58:	b	407d18 <wcrtomb@plt+0x4fd8>
  407e5c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  407e60:	ldrb	w0, [x0, #1864]
  407e64:	cbnz	w0, 407e88 <wcrtomb@plt+0x5148>
  407e68:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  407e6c:	add	x0, x0, #0x618
  407e70:	add	x1, x0, #0xa0
  407e74:	add	x3, x0, #0x70
  407e78:	ldrb	w2, [x0, #192]
  407e7c:	ldr	x1, [x1, #16]
  407e80:	ldr	x0, [x0, #168]
  407e84:	bl	4077d8 <wcrtomb@plt+0x4a98>
  407e88:	bl	4078b0 <wcrtomb@plt+0x4b70>
  407e8c:	ldr	w0, [x28, #24]
  407e90:	mov	x12, #0x10b0                	// #4272
  407e94:	ldp	x29, x30, [sp]
  407e98:	cmn	w0, #0x1
  407e9c:	csel	w0, w0, wzr, ne  // ne = any
  407ea0:	ldp	x19, x20, [sp, #16]
  407ea4:	ldp	x21, x22, [sp, #32]
  407ea8:	ldp	x23, x24, [sp, #48]
  407eac:	ldp	x25, x26, [sp, #64]
  407eb0:	ldp	x27, x28, [sp, #80]
  407eb4:	add	sp, sp, x12
  407eb8:	ret
  407ebc:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xd3b0>
  407ec0:	add	x0, x0, #0x468
  407ec4:	bl	402a40 <puts@plt>
  407ec8:	mov	w0, #0xffffffff            	// #-1
  407ecc:	mov	x12, #0x10b0                	// #4272
  407ed0:	ldp	x29, x30, [sp]
  407ed4:	ldp	x19, x20, [sp, #16]
  407ed8:	ldp	x21, x22, [sp, #32]
  407edc:	ldp	x23, x24, [sp, #48]
  407ee0:	ldp	x25, x26, [sp, #64]
  407ee4:	ldp	x27, x28, [sp, #80]
  407ee8:	add	sp, sp, x12
  407eec:	ret
  407ef0:	ldr	x6, [x28, #24]
  407ef4:	ldr	x0, [x26]
  407ef8:	add	x6, x6, x6, lsl #2
  407efc:	ldrb	w1, [x23, #1901]
  407f00:	add	x28, x0, x6, lsl #3
  407f04:	b	407cd0 <wcrtomb@plt+0x4f90>
  407f08:	add	x25, x19, #0xa0
  407f0c:	adrp	x24, 438000 <_obstack_memory_used@@Base+0x253b0>
  407f10:	ldrb	w1, [x24, #1120]
  407f14:	ldp	x21, x24, [x25, #8]
  407f18:	mov	x0, x21
  407f1c:	mov	x2, x24
  407f20:	bl	402bb0 <memchr@plt>
  407f24:	cbz	x0, 408bac <wcrtomb@plt+0x5e6c>
  407f28:	sub	x24, x0, x21
  407f2c:	mov	w2, #0x1                   	// #1
  407f30:	mov	x1, x24
  407f34:	mov	x0, x21
  407f38:	add	x3, x19, #0x70
  407f3c:	bl	4077d8 <wcrtomb@plt+0x4a98>
  407f40:	ldrb	w1, [x23, #1901]
  407f44:	b	407ccc <wcrtomb@plt+0x4f8c>
  407f48:	ldr	x21, [x28, #32]
  407f4c:	mov	x0, #0x0                   	// #0
  407f50:	mov	w25, w21
  407f54:	bl	407798 <wcrtomb@plt+0x4a58>
  407f58:	cbnz	w21, 408a84 <wcrtomb@plt+0x5d44>
  407f5c:	add	x24, x19, #0xa0
  407f60:	mov	x2, #0x1                   	// #1
  407f64:	mov	x0, x24
  407f68:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  407f6c:	add	x1, x1, #0x7d8
  407f70:	bl	406ff8 <wcrtomb@plt+0x42b8>
  407f74:	ldr	x0, [x19, #168]
  407f78:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  407f7c:	add	x1, x1, #0x478
  407f80:	bl	402850 <popen@plt>
  407f84:	mov	x27, x0
  407f88:	cbz	x27, 408e58 <wcrtomb@plt+0x6118>
  407f8c:	add	x24, x19, #0xd0
  407f90:	b	407fb0 <wcrtomb@plt+0x5270>
  407f94:	mov	x3, x27
  407f98:	add	x0, sp, #0xb0
  407f9c:	mov	x2, #0x1000                	// #4096
  407fa0:	mov	x1, #0x1                   	// #1
  407fa4:	bl	402a50 <fread_unlocked@plt>
  407fa8:	cmp	w0, #0x0
  407fac:	b.gt	408a04 <wcrtomb@plt+0x5cc4>
  407fb0:	ldr	w0, [x27]
  407fb4:	tbz	w0, #4, 407f94 <wcrtomb@plt+0x5254>
  407fb8:	mov	x0, x27
  407fbc:	bl	402c60 <pclose@plt>
  407fc0:	cbnz	w21, 407cb4 <wcrtomb@plt+0x4f74>
  407fc4:	ldr	x0, [x19, #224]
  407fc8:	cbz	x0, 407ff0 <wcrtomb@plt+0x52b0>
  407fcc:	ldr	x2, [x19, #216]
  407fd0:	sub	x0, x0, #0x1
  407fd4:	adrp	x24, 438000 <_obstack_memory_used@@Base+0x253b0>
  407fd8:	ldrb	w3, [x2, x0]
  407fdc:	ldrb	w2, [x24, #1120]
  407fe0:	cmp	w3, w2
  407fe4:	b.ne	407ff0 <wcrtomb@plt+0x52b0>  // b.any
  407fe8:	str	x0, [x19, #224]
  407fec:	nop
  407ff0:	bl	407368 <wcrtomb@plt+0x4628>
  407ff4:	ldrb	w1, [x23, #1901]
  407ff8:	b	407ccc <wcrtomb@plt+0x4f8c>
  407ffc:	add	x1, x19, #0xa0
  408000:	mov	x0, x19
  408004:	bl	407400 <wcrtomb@plt+0x46c0>
  408008:	ldrb	w0, [x23, #1901]
  40800c:	add	x1, x23, #0x76d
  408010:	str	x1, [sp, #96]
  408014:	cbnz	w0, 408050 <wcrtomb@plt+0x5310>
  408018:	add	x28, x28, #0x28
  40801c:	cmp	x20, x28
  408020:	b.hi	407bdc <wcrtomb@plt+0x4e9c>  // b.pmore
  408024:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x253b0>
  408028:	ldp	x25, x26, [sp, #64]
  40802c:	b	407cf0 <wcrtomb@plt+0x4fb0>
  408030:	mov	x0, x19
  408034:	bl	407320 <wcrtomb@plt+0x45e0>
  408038:	ldrb	w0, [x23, #1901]
  40803c:	add	x1, x23, #0x76d
  408040:	str	x1, [sp, #96]
  408044:	cbz	w0, 408018 <wcrtomb@plt+0x52d8>
  408048:	add	x0, x19, #0xa0
  40804c:	bl	406958 <wcrtomb@plt+0x3c18>
  408050:	mov	x0, x19
  408054:	bl	406958 <wcrtomb@plt+0x3c18>
  408058:	ldr	x0, [sp, #96]
  40805c:	ldrb	w1, [x0]
  408060:	b	407ccc <wcrtomb@plt+0x4f8c>
  408064:	ldp	x0, x1, [x19, #168]
  408068:	add	x3, x19, #0x70
  40806c:	ldrb	w2, [x19, #192]
  408070:	bl	4077d8 <wcrtomb@plt+0x4a98>
  408074:	ldrb	w1, [x23, #1901]
  408078:	b	407ccc <wcrtomb@plt+0x4f8c>
  40807c:	ldr	x0, [x28, #24]
  408080:	cbz	x0, 407cc8 <wcrtomb@plt+0x4f88>
  408084:	bl	406ad8 <wcrtomb@plt+0x3d98>
  408088:	ldr	x2, [x28, #24]
  40808c:	ldrb	w1, [x23, #1901]
  408090:	str	x2, [x0]
  408094:	b	407ccc <wcrtomb@plt+0x4f8c>
  408098:	add	x24, x19, #0xa0
  40809c:	add	x27, x19, #0x108
  4080a0:	ldr	x21, [x28, #24]
  4080a4:	mov	x0, x24
  4080a8:	bl	407798 <wcrtomb@plt+0x4a58>
  4080ac:	ldp	x1, x2, [x19, #168]
  4080b0:	mov	x4, x27
  4080b4:	ldrb	w5, [x21, #32]
  4080b8:	mov	x3, #0x0                   	// #0
  4080bc:	ldr	x0, [x21]
  4080c0:	ubfx	x5, x5, #4, #4
  4080c4:	add	w5, w5, #0x1
  4080c8:	bl	409440 <wcrtomb@plt+0x6700>
  4080cc:	cbz	w0, 408b08 <wcrtomb@plt+0x5dc8>
  4080d0:	add	x1, x23, #0x76d
  4080d4:	ldrb	w0, [x23, #1901]
  4080d8:	str	x1, [sp, #96]
  4080dc:	ldr	x1, [x27, #8]
  4080e0:	ldr	x25, [x1]
  4080e4:	cbz	w0, 4080f0 <wcrtomb@plt+0x53b0>
  4080e8:	ldr	x0, [x19, #264]
  4080ec:	cbnz	x0, 408bb4 <wcrtomb@plt+0x5e74>
  4080f0:	ldr	x0, [x27, #16]
  4080f4:	ldr	x1, [x21, #8]
  4080f8:	ldr	x2, [x0]
  4080fc:	cbz	x1, 408d1c <wcrtomb@plt+0x5fdc>
  408100:	mov	x24, #0x0                   	// #0
  408104:	mov	x27, #0x0                   	// #0
  408108:	str	xzr, [sp, #104]
  40810c:	b	4081b8 <wcrtomb@plt+0x5478>
  408110:	ldr	x0, [sp, #104]
  408114:	cmp	x24, #0x0
  408118:	ccmp	x25, x0, #0x2, ne  // ne = any
  40811c:	ccmp	x9, #0x0, #0x0, ls  // ls = plast
  408120:	b.eq	408138 <wcrtomb@plt+0x53f8>  // b.none
  408124:	ldr	x0, [x21, #16]
  408128:	add	x24, x24, #0x1
  40812c:	cmp	x24, x0
  408130:	b.cs	408840 <wcrtomb@plt+0x5b00>  // b.hs, b.nlast
  408134:	cbnz	x9, 408148 <wcrtomb@plt+0x5408>
  408138:	ldr	x0, [x19, #176]
  40813c:	cmp	x0, x27
  408140:	b.ls	40892c <wcrtomb@plt+0x5bec>  // b.plast
  408144:	mov	x9, #0x1                   	// #1
  408148:	ldr	x0, [sp, #112]
  40814c:	mov	x2, x9
  408150:	ldr	x1, [x19, #168]
  408154:	add	x27, x25, x9
  408158:	add	x1, x1, x25
  40815c:	bl	406ff8 <wcrtomb@plt+0x42b8>
  408160:	ldr	x0, [x19, #280]
  408164:	ldr	x0, [x0]
  408168:	str	x0, [sp, #104]
  40816c:	ldr	x2, [x19, #176]
  408170:	add	x7, x19, #0xa0
  408174:	cmp	x27, x2
  408178:	b.hi	40892c <wcrtomb@plt+0x5bec>  // b.pmore
  40817c:	ldrb	w5, [x21, #32]
  408180:	add	x25, x19, #0x108
  408184:	ldr	x0, [x21]
  408188:	mov	x4, x25
  40818c:	ldr	x1, [x19, #168]
  408190:	ubfx	x5, x5, #4, #4
  408194:	mov	x3, x27
  408198:	add	w5, w5, #0x1
  40819c:	str	x7, [sp, #120]
  4081a0:	bl	409440 <wcrtomb@plt+0x6700>
  4081a4:	ldr	x7, [sp, #120]
  4081a8:	cbz	w0, 408d58 <wcrtomb@plt+0x6018>
  4081ac:	ldp	x1, x0, [x25, #8]
  4081b0:	ldr	x2, [x0]
  4081b4:	ldr	x25, [x1]
  4081b8:	sub	x9, x2, x25
  4081bc:	cmp	x25, x27
  4081c0:	b.ls	408110 <wcrtomb@plt+0x53d0>  // b.plast
  4081c4:	ldr	x0, [sp, #112]
  4081c8:	sub	x2, x25, x27
  4081cc:	ldr	x1, [x19, #168]
  4081d0:	str	x9, [sp, #120]
  4081d4:	add	x1, x1, x27
  4081d8:	bl	406ff8 <wcrtomb@plt+0x42b8>
  4081dc:	mov	x27, x25
  4081e0:	ldr	x9, [sp, #120]
  4081e4:	b	408110 <wcrtomb@plt+0x53d0>
  4081e8:	ldrb	w0, [x19, #256]
  4081ec:	ldrb	w1, [x23, #1901]
  4081f0:	cbz	w0, 407ccc <wcrtomb@plt+0x4f8c>
  4081f4:	ldr	x0, [x28, #24]
  4081f8:	strb	wzr, [x19, #256]
  4081fc:	ldr	x6, [x26]
  408200:	add	x0, x0, x0, lsl #2
  408204:	add	x28, x6, x0, lsl #3
  408208:	b	407cd0 <wcrtomb@plt+0x4f90>
  40820c:	ldr	x3, [x28, #24]
  408210:	ldr	x0, [x3, #16]
  408214:	cbz	x0, 407cc8 <wcrtomb@plt+0x4f88>
  408218:	ldp	x0, x1, [x19, #168]
  40821c:	ldrb	w2, [x19, #192]
  408220:	bl	4077d8 <wcrtomb@plt+0x4a98>
  408224:	ldrb	w1, [x23, #1901]
  408228:	b	407ccc <wcrtomb@plt+0x4f8c>
  40822c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  408230:	add	x1, x19, #0xa0
  408234:	ldr	x2, [x1, #16]
  408238:	ldr	w0, [x0, #2260]
  40823c:	cmp	w0, #0x1
  408240:	b.le	408b18 <wcrtomb@plt+0x5dd8>
  408244:	ldr	x25, [x28, #24]
  408248:	str	xzr, [sp, #176]
  40824c:	cbz	x2, 408798 <wcrtomb@plt+0x5a58>
  408250:	str	xzr, [sp, #96]
  408254:	nop
  408258:	cmp	w0, #0x1
  40825c:	b.eq	40828c <wcrtomb@plt+0x554c>  // b.none
  408260:	ldr	x4, [sp, #96]
  408264:	add	x3, sp, #0xb0
  408268:	ldr	x1, [x19, #168]
  40826c:	sub	x2, x2, x4
  408270:	mov	x0, #0x0                   	// #0
  408274:	add	x1, x1, x4
  408278:	bl	412878 <wcrtomb@plt+0xfb38>
  40827c:	mov	x21, x0
  408280:	sub	x0, x0, #0x1
  408284:	cmn	x0, #0x4
  408288:	b.ls	408290 <wcrtomb@plt+0x5550>  // b.plast
  40828c:	mov	x21, #0x1                   	// #1
  408290:	ldr	x1, [x25]
  408294:	cbz	x1, 408370 <wcrtomb@plt+0x5630>
  408298:	ldr	x2, [sp, #96]
  40829c:	mov	w27, #0x0                   	// #0
  4082a0:	ldr	x0, [x19, #168]
  4082a4:	str	x0, [sp, #104]
  4082a8:	add	x24, x0, x2
  4082ac:	b	4082bc <wcrtomb@plt+0x557c>
  4082b0:	add	w27, w27, #0x2
  4082b4:	ldr	x1, [x25, w27, uxtw #3]
  4082b8:	cbz	x1, 408370 <wcrtomb@plt+0x5630>
  4082bc:	mov	x2, x21
  4082c0:	mov	x0, x24
  4082c4:	bl	402860 <strncmp@plt>
  4082c8:	cbnz	w0, 4082b0 <wcrtomb@plt+0x5570>
  4082cc:	add	w0, w27, #0x1
  4082d0:	str	x0, [sp, #120]
  4082d4:	ldr	x1, [x25, x0, lsl #3]
  4082d8:	ldrb	w0, [x1]
  4082dc:	cbz	w0, 4089a0 <wcrtomb@plt+0x5c60>
  4082e0:	mov	x0, x1
  4082e4:	str	x1, [sp, #128]
  4082e8:	bl	402690 <strlen@plt>
  4082ec:	mov	x3, x0
  4082f0:	cmp	x21, x0
  4082f4:	ldr	x1, [sp, #128]
  4082f8:	b.cs	4089a4 <wcrtomb@plt+0x5c64>  // b.hs, b.nlast
  4082fc:	sub	x4, x0, x21
  408300:	add	x24, x19, #0xa0
  408304:	ldp	x2, x0, [x19, #176]
  408308:	add	x2, x2, #0x1
  40830c:	add	x1, x4, x2
  408310:	cmp	x1, x0
  408314:	b.hi	408ae8 <wcrtomb@plt+0x5da8>  // b.pmore
  408318:	ldr	x27, [sp, #96]
  40831c:	stp	x3, x4, [sp, #128]
  408320:	add	x0, x27, x3
  408324:	add	x1, x21, x27
  408328:	ldr	x3, [sp, #104]
  40832c:	sub	x2, x2, x1
  408330:	add	x0, x3, x0
  408334:	add	x1, x3, x1
  408338:	bl	402660 <memmove@plt>
  40833c:	ldp	x24, x2, [x19, #168]
  408340:	ldr	x4, [sp, #136]
  408344:	ldr	x1, [sp, #120]
  408348:	add	x3, x4, x27
  40834c:	str	x3, [sp, #96]
  408350:	add	x24, x24, x27
  408354:	ldr	x3, [sp, #128]
  408358:	add	x2, x2, x4
  40835c:	ldr	x1, [x25, x1, lsl #3]
  408360:	str	x2, [x19, #176]
  408364:	mov	x2, x3
  408368:	mov	x0, x24
  40836c:	bl	402650 <memcpy@plt>
  408370:	ldr	x0, [sp, #96]
  408374:	ldr	x2, [x19, #176]
  408378:	add	x0, x0, x21
  40837c:	str	x0, [sp, #96]
  408380:	cmp	x2, x0
  408384:	b.ls	408798 <wcrtomb@plt+0x5a58>  // b.plast
  408388:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  40838c:	add	x0, x0, #0x8d4
  408390:	ldr	w0, [x0]
  408394:	b	408258 <wcrtomb@plt+0x5518>
  408398:	mov	x1, x19
  40839c:	add	x0, x19, #0xa0
  4083a0:	b	408004 <wcrtomb@plt+0x52c4>
  4083a4:	ldp	x0, x1, [x28, #24]
  4083a8:	add	x3, x19, #0x70
  4083ac:	mov	w2, #0x1                   	// #1
  4083b0:	sub	x1, x1, #0x1
  4083b4:	bl	4077d8 <wcrtomb@plt+0x4a98>
  4083b8:	ldrb	w1, [x23, #1901]
  4083bc:	b	407ccc <wcrtomb@plt+0x4f8c>
  4083c0:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  4083c4:	ldr	w21, [x28, #24]
  4083c8:	adrp	x24, 438000 <_obstack_memory_used@@Base+0x253b0>
  4083cc:	add	x3, x24, #0x460
  4083d0:	ldr	w2, [x1, #1112]
  4083d4:	cmn	w21, #0x1
  4083d8:	ldrb	w1, [x19, #120]
  4083dc:	add	x4, x19, #0x70
  4083e0:	str	x3, [sp, #136]
  4083e4:	csel	w21, w2, w21, eq  // eq = none
  4083e8:	ldr	x25, [x19, #128]
  4083ec:	ldp	x24, x27, [x19, #168]
  4083f0:	cbnz	w1, 408538 <wcrtomb@plt+0x57f8>
  4083f4:	cbz	x27, 4089bc <wcrtomb@plt+0x5c7c>
  4083f8:	sxtw	x0, w21
  4083fc:	cmp	w21, #0x0
  408400:	str	x0, [sp, #120]
  408404:	add	x0, x24, x27
  408408:	str	x0, [sp, #104]
  40840c:	cset	w0, gt
  408410:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  408414:	add	x27, sp, #0xb0
  408418:	add	x1, x1, #0x498
  40841c:	mov	x21, #0x0                   	// #0
  408420:	str	w0, [sp, #128]
  408424:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xd3b0>
  408428:	add	x0, x0, #0x4a0
  40842c:	str	x0, [sp, #144]
  408430:	str	x1, [sp, #152]
  408434:	b	4084a4 <wcrtomb@plt+0x5764>
  408438:	bl	402ab0 <__ctype_b_loc@plt>
  40843c:	ldr	w1, [sp, #96]
  408440:	ldr	x0, [x0]
  408444:	ubfiz	x2, x1, #1, #8
  408448:	ldrh	w0, [x0, x2]
  40844c:	tbz	w0, #14, 4084b0 <wcrtomb@plt+0x5770>
  408450:	strb	w1, [sp, #176]
  408454:	mov	x4, #0x1                   	// #1
  408458:	ldrb	w0, [x24]
  40845c:	cmp	w0, #0x5c
  408460:	b.eq	4087fc <wcrtomb@plt+0x5abc>  // b.none
  408464:	nop
  408468:	ldr	w0, [sp, #128]
  40846c:	add	x21, x21, x4
  408470:	cmp	w0, #0x0
  408474:	ldr	x0, [sp, #120]
  408478:	ccmp	x21, x0, #0x0, ne  // ne = any
  40847c:	b.cs	408500 <wcrtomb@plt+0x57c0>  // b.hs, b.nlast
  408480:	mov	x0, x27
  408484:	mov	x2, x4
  408488:	mov	x3, x25
  40848c:	mov	x1, #0x1                   	// #1
  408490:	bl	40a160 <wcrtomb@plt+0x7420>
  408494:	add	x24, x24, #0x1
  408498:	ldr	x0, [sp, #104]
  40849c:	cmp	x0, x24
  4084a0:	b.eq	4089bc <wcrtomb@plt+0x5c7c>  // b.none
  4084a4:	ldrb	w1, [x24]
  4084a8:	str	w1, [sp, #96]
  4084ac:	tbz	w1, #7, 408438 <wcrtomb@plt+0x56f8>
  4084b0:	mov	w0, #0x5c                  	// #92
  4084b4:	strb	w0, [sp, #176]
  4084b8:	ldrb	w4, [x24]
  4084bc:	cmp	w4, #0xa
  4084c0:	b.eq	408a54 <wcrtomb@plt+0x5d14>  // b.none
  4084c4:	b.hi	408808 <wcrtomb@plt+0x5ac8>  // b.pmore
  4084c8:	cmp	w4, #0x8
  4084cc:	b.eq	408a74 <wcrtomb@plt+0x5d34>  // b.none
  4084d0:	cmp	w4, #0x9
  4084d4:	b.ne	4087f0 <wcrtomb@plt+0x5ab0>  // b.any
  4084d8:	mov	w0, #0x74                  	// #116
  4084dc:	strb	w0, [sp, #177]
  4084e0:	ldr	w0, [sp, #128]
  4084e4:	mov	x4, #0x2                   	// #2
  4084e8:	add	x21, x21, x4
  4084ec:	cmp	w0, #0x0
  4084f0:	ldr	x0, [sp, #120]
  4084f4:	ccmp	x21, x0, #0x0, ne  // ne = any
  4084f8:	b.cc	408480 <wcrtomb@plt+0x5740>  // b.lo, b.ul, b.last
  4084fc:	nop
  408500:	ldr	x0, [sp, #144]
  408504:	mov	x21, x4
  408508:	mov	x2, #0x1                   	// #1
  40850c:	mov	x3, x25
  408510:	mov	x1, x2
  408514:	str	x4, [sp, #96]
  408518:	bl	40a160 <wcrtomb@plt+0x7420>
  40851c:	ldr	x0, [sp, #136]
  408520:	mov	x2, #0x1                   	// #1
  408524:	mov	x3, x25
  408528:	mov	x1, x2
  40852c:	bl	40a160 <wcrtomb@plt+0x7420>
  408530:	ldr	x4, [sp, #96]
  408534:	b	408480 <wcrtomb@plt+0x5740>
  408538:	ldr	x0, [sp, #136]
  40853c:	mov	x2, #0x1                   	// #1
  408540:	mov	x3, x25
  408544:	mov	x1, x2
  408548:	str	x4, [sp, #96]
  40854c:	bl	40a160 <wcrtomb@plt+0x7420>
  408550:	ldr	x4, [sp, #96]
  408554:	strb	wzr, [x4, #8]
  408558:	b	4083f4 <wcrtomb@plt+0x56b4>
  40855c:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x253b0>
  408560:	ldrb	w0, [x21, #1864]
  408564:	cbz	w0, 408b98 <wcrtomb@plt+0x5e58>
  408568:	ldr	x0, [x19, #80]
  40856c:	cbnz	x0, 408580 <wcrtomb@plt+0x5840>
  408570:	mov	x0, x22
  408574:	bl	407170 <wcrtomb@plt+0x4430>
  408578:	tst	w0, #0xff
  40857c:	b.ne	407e4c <wcrtomb@plt+0x510c>  // b.any
  408580:	mov	x1, x26
  408584:	mov	x0, x22
  408588:	mov	w2, #0x0                   	// #0
  40858c:	bl	407a10 <wcrtomb@plt+0x4cd0>
  408590:	tst	w0, #0xff
  408594:	b.eq	407e4c <wcrtomb@plt+0x510c>  // b.none
  408598:	ldrb	w0, [x23, #1901]
  40859c:	add	x1, x23, #0x76d
  4085a0:	str	x1, [sp, #96]
  4085a4:	cbnz	w0, 4087a8 <wcrtomb@plt+0x5a68>
  4085a8:	add	x28, x28, #0x28
  4085ac:	cmp	x20, x28
  4085b0:	b.hi	407bdc <wcrtomb@plt+0x4e9c>  // b.pmore
  4085b4:	ldp	x25, x26, [sp, #64]
  4085b8:	b	407cf0 <wcrtomb@plt+0x4fb0>
  4085bc:	ldrb	w1, [x23, #1901]
  4085c0:	add	x2, x23, #0x76d
  4085c4:	str	x2, [sp, #96]
  4085c8:	add	x0, x19, #0xa0
  4085cc:	str	xzr, [x0, #16]
  4085d0:	cbz	w1, 408018 <wcrtomb@plt+0x52d8>
  4085d4:	b	408054 <wcrtomb@plt+0x5314>
  4085d8:	bl	406ad8 <wcrtomb@plt+0x3d98>
  4085dc:	ldp	x3, x2, [x28, #24]
  4085e0:	stp	x3, x2, [x0, #8]
  4085e4:	ldrb	w1, [x23, #1901]
  4085e8:	b	407ccc <wcrtomb@plt+0x4f8c>
  4085ec:	add	x21, x19, #0xa0
  4085f0:	adrp	x24, 438000 <_obstack_memory_used@@Base+0x253b0>
  4085f4:	ldrb	w1, [x24, #1120]
  4085f8:	ldp	x24, x25, [x21, #8]
  4085fc:	mov	x0, x24
  408600:	mov	x2, x25
  408604:	bl	402bb0 <memchr@plt>
  408608:	cbz	x0, 407e54 <wcrtomb@plt+0x5114>
  40860c:	ldr	x2, [x21, #24]
  408610:	add	x0, x0, #0x1
  408614:	ldrb	w3, [x23, #1901]
  408618:	sub	x24, x0, x24
  40861c:	sub	x1, x25, x24
  408620:	sub	x24, x2, x24
  408624:	ldr	x28, [x26]
  408628:	stp	x0, x1, [x21, #8]
  40862c:	add	x0, x23, #0x76d
  408630:	str	x24, [x21, #24]
  408634:	str	x0, [sp, #96]
  408638:	cbz	w3, 40801c <wcrtomb@plt+0x52dc>
  40863c:	mov	x0, x21
  408640:	bl	406958 <wcrtomb@plt+0x3c18>
  408644:	add	x0, x23, #0x76d
  408648:	ldrb	w1, [x0]
  40864c:	b	407cd0 <wcrtomb@plt+0x4f90>
  408650:	ldrb	w1, [x19, #120]
  408654:	adrp	x25, 438000 <_obstack_memory_used@@Base+0x253b0>
  408658:	add	x0, x25, #0x460
  40865c:	str	x0, [sp, #136]
  408660:	ldr	x0, [x19, #128]
  408664:	cbnz	w1, 408b78 <wcrtomb@plt+0x5e38>
  408668:	adrp	x2, 420000 <_obstack_memory_used@@Base+0xd3b0>
  40866c:	ldrb	w4, [x25, #1120]
  408670:	add	x2, x2, #0x4e8
  408674:	ldr	x3, [x22, #48]
  408678:	b	407cac <wcrtomb@plt+0x4f6c>
  40867c:	ldrb	w0, [x19, #256]
  408680:	ldrb	w1, [x23, #1901]
  408684:	cbz	w0, 408b44 <wcrtomb@plt+0x5e04>
  408688:	strb	wzr, [x19, #256]
  40868c:	b	407ccc <wcrtomb@plt+0x4f8c>
  408690:	ldr	x21, [x28, #24]
  408694:	ldr	x0, [x21, #16]
  408698:	cbz	x0, 407cc8 <wcrtomb@plt+0x4f88>
  40869c:	add	x27, x19, #0xa0
  4086a0:	adrp	x24, 438000 <_obstack_memory_used@@Base+0x253b0>
  4086a4:	ldrb	w1, [x24, #1120]
  4086a8:	ldp	x24, x25, [x27, #8]
  4086ac:	mov	x0, x24
  4086b0:	mov	x2, x25
  4086b4:	bl	402bb0 <memchr@plt>
  4086b8:	cbz	x0, 408d14 <wcrtomb@plt+0x5fd4>
  4086bc:	sub	x25, x0, x24
  4086c0:	mov	w2, #0x1                   	// #1
  4086c4:	mov	x1, x25
  4086c8:	mov	x3, x21
  4086cc:	mov	x0, x24
  4086d0:	bl	4077d8 <wcrtomb@plt+0x4a98>
  4086d4:	ldrb	w1, [x23, #1901]
  4086d8:	b	407ccc <wcrtomb@plt+0x4f8c>
  4086dc:	ldr	x0, [x28, #24]
  4086e0:	ldr	x3, [x0, #16]
  4086e4:	cbz	x3, 407cc8 <wcrtomb@plt+0x4f88>
  4086e8:	ldr	w0, [x3]
  4086ec:	tbnz	w0, #4, 407cc8 <wcrtomb@plt+0x4f88>
  4086f0:	adrp	x24, 438000 <_obstack_memory_used@@Base+0x253b0>
  4086f4:	add	x1, sp, #0xa8
  4086f8:	add	x0, sp, #0xb0
  4086fc:	str	xzr, [sp, #176]
  408700:	ldrb	w2, [x24, #1120]
  408704:	bl	40a2b0 <wcrtomb@plt+0x7570>
  408708:	mov	x21, x0
  40870c:	cmn	w0, #0x1
  408710:	b.eq	408dbc <wcrtomb@plt+0x607c>  // b.none
  408714:	bl	406ad8 <wcrtomb@plt+0x3d98>
  408718:	sxtw	x21, w21
  40871c:	mov	w1, #0x1                   	// #1
  408720:	ldr	x2, [sp, #176]
  408724:	stp	x2, x21, [x0, #8]
  408728:	strb	w1, [x0, #32]
  40872c:	ldrb	w1, [x23, #1901]
  408730:	b	407ccc <wcrtomb@plt+0x4f8c>
  408734:	mov	x1, x19
  408738:	add	x0, x19, #0xa0
  40873c:	bl	4073b0 <wcrtomb@plt+0x4670>
  408740:	ldrb	w0, [x23, #1901]
  408744:	add	x1, x23, #0x76d
  408748:	str	x1, [sp, #96]
  40874c:	cbz	w0, 408018 <wcrtomb@plt+0x52d8>
  408750:	b	408050 <wcrtomb@plt+0x5310>
  408754:	add	x0, x19, #0xa0
  408758:	adrp	x24, 438000 <_obstack_memory_used@@Base+0x253b0>
  40875c:	mov	x2, #0x1                   	// #1
  408760:	add	x1, x24, #0x460
  408764:	bl	406ff8 <wcrtomb@plt+0x42b8>
  408768:	ldr	x0, [x19, #80]
  40876c:	cbnz	x0, 408780 <wcrtomb@plt+0x5a40>
  408770:	mov	x0, x22
  408774:	bl	407170 <wcrtomb@plt+0x4430>
  408778:	tst	w0, #0xff
  40877c:	b.ne	408dcc <wcrtomb@plt+0x608c>  // b.any
  408780:	mov	x1, x26
  408784:	mov	x0, x22
  408788:	mov	w2, #0x1                   	// #1
  40878c:	bl	407a10 <wcrtomb@plt+0x4cd0>
  408790:	tst	w0, #0xff
  408794:	b.eq	408dcc <wcrtomb@plt+0x608c>  // b.none
  408798:	ldrb	w0, [x23, #1901]
  40879c:	add	x1, x23, #0x76d
  4087a0:	str	x1, [sp, #96]
  4087a4:	cbz	w0, 408018 <wcrtomb@plt+0x52d8>
  4087a8:	add	x0, x19, #0xa0
  4087ac:	bl	406958 <wcrtomb@plt+0x3c18>
  4087b0:	ldr	x0, [sp, #96]
  4087b4:	ldrb	w1, [x0]
  4087b8:	b	407ccc <wcrtomb@plt+0x4f8c>
  4087bc:	add	x21, x19, #0xa0
  4087c0:	mov	x0, x19
  4087c4:	mov	x1, x21
  4087c8:	bl	4073b0 <wcrtomb@plt+0x4670>
  4087cc:	ldrb	w0, [x23, #1901]
  4087d0:	add	x1, x23, #0x76d
  4087d4:	str	x1, [sp, #96]
  4087d8:	cbz	w0, 408018 <wcrtomb@plt+0x52d8>
  4087dc:	mov	x0, x21
  4087e0:	bl	406958 <wcrtomb@plt+0x3c18>
  4087e4:	ldr	x0, [sp, #96]
  4087e8:	ldrb	w1, [x0]
  4087ec:	b	407ccc <wcrtomb@plt+0x4f8c>
  4087f0:	cmp	w4, #0x7
  4087f4:	mov	w0, #0x61                  	// #97
  4087f8:	b.ne	408a1c <wcrtomb@plt+0x5cdc>  // b.any
  4087fc:	mov	x4, #0x2                   	// #2
  408800:	strb	w0, [sp, #177]
  408804:	b	408468 <wcrtomb@plt+0x5728>
  408808:	cmp	w4, #0xc
  40880c:	b.eq	408a64 <wcrtomb@plt+0x5d24>  // b.none
  408810:	cmp	w4, #0xd
  408814:	b.ne	408828 <wcrtomb@plt+0x5ae8>  // b.any
  408818:	mov	w0, #0x72                  	// #114
  40881c:	mov	x4, #0x2                   	// #2
  408820:	strb	w0, [sp, #177]
  408824:	b	408468 <wcrtomb@plt+0x5728>
  408828:	cmp	w4, #0xb
  40882c:	b.ne	408a1c <wcrtomb@plt+0x5cdc>  // b.any
  408830:	mov	w0, #0x76                  	// #118
  408834:	mov	x4, #0x2                   	// #2
  408838:	strb	w0, [sp, #177]
  40883c:	b	408468 <wcrtomb@plt+0x5728>
  408840:	ldr	x27, [x21, #8]
  408844:	mov	w0, #0x1                   	// #1
  408848:	strb	w0, [x19, #256]
  40884c:	mov	w5, #0x0                   	// #0
  408850:	cbnz	x27, 4088b0 <wcrtomb@plt+0x5b70>
  408854:	b	4088f4 <wcrtomb@plt+0x5bb4>
  408858:	mov	w5, #0x0                   	// #0
  40885c:	tbnz	w7, #31, 4088a8 <wcrtomb@plt+0x5b68>
  408860:	ldr	x0, [x19, #264]
  408864:	sxtw	x2, w7
  408868:	cmp	x0, w7, sxtw
  40886c:	b.ls	4088a8 <wcrtomb@plt+0x5b68>  // b.plast
  408870:	ldp	x0, x3, [x19, #272]
  408874:	ldr	x1, [x3, x2, lsl #3]
  408878:	ldr	x0, [x0, x2, lsl #3]
  40887c:	cmp	x1, x0
  408880:	b.eq	40898c <wcrtomb@plt+0x5c4c>  // b.none
  408884:	ldr	x3, [x19, #168]
  408888:	sub	x1, x1, x0
  40888c:	mov	w2, w4
  408890:	str	x9, [sp, #104]
  408894:	add	x0, x3, x0
  408898:	str	w5, [sp, #120]
  40889c:	bl	4074a0 <wcrtomb@plt+0x4760>
  4088a0:	ldr	w5, [sp, #120]
  4088a4:	ldr	x9, [sp, #104]
  4088a8:	ldr	x27, [x27, #24]
  4088ac:	cbz	x27, 4088f4 <wcrtomb@plt+0x5bb4>
  4088b0:	ldp	w7, w4, [x27, #16]
  4088b4:	ldr	x1, [x27, #8]
  4088b8:	orr	w5, w4, w5
  4088bc:	tst	w4, #0xc
  4088c0:	csel	w4, w5, w4, eq  // eq = none
  4088c4:	cbz	x1, 408858 <wcrtomb@plt+0x5b18>
  4088c8:	ldr	x0, [x27]
  4088cc:	mov	w2, w4
  4088d0:	and	w4, w4, #0xfffffff3
  4088d4:	str	w4, [sp, #104]
  4088d8:	str	x9, [sp, #120]
  4088dc:	str	w7, [sp, #128]
  4088e0:	bl	4074a0 <wcrtomb@plt+0x4760>
  4088e4:	ldr	w4, [sp, #104]
  4088e8:	ldr	w7, [sp, #128]
  4088ec:	ldr	x9, [sp, #120]
  4088f0:	b	408858 <wcrtomb@plt+0x5b18>
  4088f4:	ldr	x1, [x19, #280]
  4088f8:	add	x27, x25, x9
  4088fc:	ldrb	w0, [x21, #32]
  408900:	ldr	x1, [x1]
  408904:	str	x1, [sp, #104]
  408908:	tbnz	w0, #0, 40816c <wcrtomb@plt+0x542c>
  40890c:	ldr	x2, [x19, #176]
  408910:	cmp	x27, x2
  408914:	b.cs	40892c <wcrtomb@plt+0x5bec>  // b.hs, b.nlast
  408918:	ldr	x0, [sp, #112]
  40891c:	sub	x2, x2, x27
  408920:	ldr	x1, [x19, #168]
  408924:	add	x1, x1, x27
  408928:	bl	406ff8 <wcrtomb@plt+0x42b8>
  40892c:	ldrb	w1, [x19, #192]
  408930:	ldr	x0, [sp, #112]
  408934:	strb	w1, [x0, #32]
  408938:	bl	407320 <wcrtomb@plt+0x45e0>
  40893c:	ldr	x0, [x21, #16]
  408940:	cmp	x0, x24
  408944:	b.hi	40896c <wcrtomb@plt+0x5c2c>  // b.pmore
  408948:	ldrb	w1, [x21, #32]
  40894c:	tbnz	w1, #1, 408c38 <wcrtomb@plt+0x5ef8>
  408950:	tbnz	w1, #3, 408bc8 <wcrtomb@plt+0x5e88>
  408954:	tbnz	w1, #2, 408d60 <wcrtomb@plt+0x6020>
  408958:	ldr	x3, [x21, #24]
  40895c:	cbz	x3, 40896c <wcrtomb@plt+0x5c2c>
  408960:	ldp	x0, x1, [x19, #168]
  408964:	ldrb	w2, [x19, #192]
  408968:	bl	4077d8 <wcrtomb@plt+0x4a98>
  40896c:	ldr	x0, [sp, #96]
  408970:	ldrb	w0, [x0]
  408974:	cbnz	w0, 4087a8 <wcrtomb@plt+0x5a68>
  408978:	add	x28, x28, #0x28
  40897c:	cmp	x28, x20
  408980:	b.cc	407bdc <wcrtomb@plt+0x4e9c>  // b.lo, b.ul, b.last
  408984:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x253b0>
  408988:	b	408028 <wcrtomb@plt+0x52e8>
  40898c:	ldr	w5, [x27, #20]
  408990:	and	w4, w4, #0xc
  408994:	ands	w5, w5, #0xc
  408998:	csel	w5, w4, w5, ne  // ne = any
  40899c:	b	4088a8 <wcrtomb@plt+0x5b68>
  4089a0:	mov	x3, #0x1                   	// #1
  4089a4:	cmp	x21, x3
  4089a8:	b.ls	408364 <wcrtomb@plt+0x5624>  // b.plast
  4089ac:	ldr	x2, [x19, #176]
  4089b0:	sub	x4, x3, x21
  4089b4:	add	x2, x2, #0x1
  4089b8:	b	408318 <wcrtomb@plt+0x55d8>
  4089bc:	mov	x2, #0x1                   	// #1
  4089c0:	mov	x3, x25
  4089c4:	mov	x1, x2
  4089c8:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xd3b0>
  4089cc:	add	x0, x0, #0x4a8
  4089d0:	bl	40a160 <wcrtomb@plt+0x7420>
  4089d4:	ldr	x0, [sp, #136]
  4089d8:	mov	x2, #0x1                   	// #1
  4089dc:	mov	x3, x25
  4089e0:	mov	x1, x2
  4089e4:	bl	40a160 <wcrtomb@plt+0x7420>
  4089e8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  4089ec:	ldrb	w0, [x0, #1902]
  4089f0:	cbz	w0, 407cc8 <wcrtomb@plt+0x4f88>
  4089f4:	mov	x0, x25
  4089f8:	bl	40a328 <wcrtomb@plt+0x75e8>
  4089fc:	ldrb	w1, [x23, #1901]
  408a00:	b	407ccc <wcrtomb@plt+0x4f8c>
  408a04:	sxtw	x2, w0
  408a08:	cbnz	w25, 408ad4 <wcrtomb@plt+0x5d94>
  408a0c:	add	x1, sp, #0xb0
  408a10:	mov	x0, x24
  408a14:	bl	406ff8 <wcrtomb@plt+0x42b8>
  408a18:	b	407fb0 <wcrtomb@plt+0x5270>
  408a1c:	ldr	x3, [sp, #152]
  408a20:	add	x5, x27, #0x1
  408a24:	mov	x0, x5
  408a28:	mov	x2, #0xb3                  	// #179
  408a2c:	mov	w1, #0x1                   	// #1
  408a30:	str	x5, [sp, #96]
  408a34:	bl	4026a0 <__sprintf_chk@plt>
  408a38:	ldr	x5, [sp, #96]
  408a3c:	mov	x0, x5
  408a40:	bl	402690 <strlen@plt>
  408a44:	ldr	x5, [sp, #96]
  408a48:	add	x4, x5, x0
  408a4c:	sub	x4, x4, x27
  408a50:	b	408468 <wcrtomb@plt+0x5728>
  408a54:	mov	w0, #0x6e                  	// #110
  408a58:	mov	x4, #0x2                   	// #2
  408a5c:	strb	w0, [sp, #177]
  408a60:	b	408468 <wcrtomb@plt+0x5728>
  408a64:	mov	w0, #0x66                  	// #102
  408a68:	mov	x4, #0x2                   	// #2
  408a6c:	strb	w0, [sp, #177]
  408a70:	b	408468 <wcrtomb@plt+0x5728>
  408a74:	mov	w0, #0x62                  	// #98
  408a78:	mov	x4, #0x2                   	// #2
  408a7c:	strb	w0, [sp, #177]
  408a80:	b	408468 <wcrtomb@plt+0x5728>
  408a84:	ldr	x0, [x28, #24]
  408a88:	add	x2, x19, #0x70
  408a8c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  408a90:	add	x1, x1, #0x478
  408a94:	str	x2, [sp, #96]
  408a98:	add	x0, x0, w21, sxtw
  408a9c:	sturb	wzr, [x0, #-1]
  408aa0:	ldr	x0, [x28, #24]
  408aa4:	bl	402850 <popen@plt>
  408aa8:	mov	x27, x0
  408aac:	ldrb	w1, [x19, #120]
  408ab0:	cbz	w1, 407f88 <wcrtomb@plt+0x5248>
  408ab4:	ldr	x3, [x19, #128]
  408ab8:	mov	x2, #0x1                   	// #1
  408abc:	adrp	x24, 438000 <_obstack_memory_used@@Base+0x253b0>
  408ac0:	mov	x1, x2
  408ac4:	add	x0, x24, #0x460
  408ac8:	bl	40a160 <wcrtomb@plt+0x7420>
  408acc:	strb	wzr, [x19, #120]
  408ad0:	b	407f88 <wcrtomb@plt+0x5248>
  408ad4:	ldr	x3, [x19, #128]
  408ad8:	add	x0, sp, #0xb0
  408adc:	mov	x1, #0x1                   	// #1
  408ae0:	bl	40a160 <wcrtomb@plt+0x7420>
  408ae4:	b	407fb0 <wcrtomb@plt+0x5270>
  408ae8:	mov	x0, x24
  408aec:	stp	x4, x3, [sp, #128]
  408af0:	bl	406a10 <wcrtomb@plt+0x3cd0>
  408af4:	ldp	x0, x2, [x19, #168]
  408af8:	str	x0, [sp, #104]
  408afc:	ldp	x4, x3, [sp, #128]
  408b00:	add	x2, x2, #0x1
  408b04:	b	408318 <wcrtomb@plt+0x55d8>
  408b08:	adrp	x25, 438000 <_obstack_memory_used@@Base+0x253b0>
  408b0c:	add	x0, x25, #0x76d
  408b10:	str	x0, [sp, #96]
  408b14:	b	40896c <wcrtomb@plt+0x5c2c>
  408b18:	ldr	x0, [x1, #8]
  408b1c:	add	x2, x0, x2
  408b20:	cmp	x0, x2
  408b24:	b.cs	408798 <wcrtomb@plt+0x5a58>  // b.hs, b.nlast
  408b28:	ldrb	w1, [x0]
  408b2c:	ldr	x3, [x28, #24]
  408b30:	ldrb	w1, [x3, x1]
  408b34:	strb	w1, [x0], #1
  408b38:	cmp	x2, x0
  408b3c:	b.ne	408b28 <wcrtomb@plt+0x5de8>  // b.any
  408b40:	b	408798 <wcrtomb@plt+0x5a58>
  408b44:	ldr	x0, [x28, #24]
  408b48:	ldr	x6, [x26]
  408b4c:	add	x0, x0, x0, lsl #2
  408b50:	add	x28, x6, x0, lsl #3
  408b54:	b	407cd0 <wcrtomb@plt+0x4f90>
  408b58:	mov	x3, x0
  408b5c:	mov	x2, #0x1                   	// #1
  408b60:	add	x0, x25, #0x460
  408b64:	mov	x1, x2
  408b68:	bl	40a160 <wcrtomb@plt+0x7420>
  408b6c:	strb	wzr, [x19, #120]
  408b70:	ldr	x0, [x19, #128]
  408b74:	b	407c9c <wcrtomb@plt+0x4f5c>
  408b78:	mov	x3, x0
  408b7c:	mov	x2, #0x1                   	// #1
  408b80:	add	x0, x25, #0x460
  408b84:	mov	x1, x2
  408b88:	bl	40a160 <wcrtomb@plt+0x7420>
  408b8c:	strb	wzr, [x19, #120]
  408b90:	ldr	x0, [x19, #128]
  408b94:	b	408668 <wcrtomb@plt+0x5928>
  408b98:	ldp	x0, x1, [x19, #168]
  408b9c:	add	x3, x19, #0x70
  408ba0:	ldrb	w2, [x19, #192]
  408ba4:	bl	4077d8 <wcrtomb@plt+0x4a98>
  408ba8:	b	408568 <wcrtomb@plt+0x5828>
  408bac:	ldrb	w2, [x25, #32]
  408bb0:	b	407f30 <wcrtomb@plt+0x51f0>
  408bb4:	cmn	x25, #0x1
  408bb8:	b.ne	408c54 <wcrtomb@plt+0x5f14>  // b.any
  408bbc:	ldr	x0, [x27, #16]
  408bc0:	ldr	x25, [x1]
  408bc4:	b	4080f4 <wcrtomb@plt+0x53b4>
  408bc8:	add	x24, x19, #0xa0
  408bcc:	mov	x0, #0x0                   	// #0
  408bd0:	bl	407798 <wcrtomb@plt+0x4a58>
  408bd4:	mov	x0, x24
  408bd8:	mov	x2, #0x1                   	// #1
  408bdc:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  408be0:	add	x1, x1, #0x7d8
  408be4:	bl	406ff8 <wcrtomb@plt+0x42b8>
  408be8:	ldr	x0, [x19, #168]
  408bec:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  408bf0:	add	x1, x1, #0x478
  408bf4:	bl	402850 <popen@plt>
  408bf8:	mov	x24, x0
  408bfc:	cbz	x0, 408e70 <wcrtomb@plt+0x6130>
  408c00:	ldr	w0, [x24]
  408c04:	tbnz	w0, #4, 408d74 <wcrtomb@plt+0x6034>
  408c08:	mov	x3, x24
  408c0c:	add	x0, sp, #0xb0
  408c10:	mov	x2, #0x1000                	// #4096
  408c14:	mov	x1, #0x1                   	// #1
  408c18:	bl	402a50 <fread_unlocked@plt>
  408c1c:	cmp	w0, #0x0
  408c20:	b.le	408c00 <wcrtomb@plt+0x5ec0>
  408c24:	sxtw	x2, w0
  408c28:	add	x1, sp, #0xb0
  408c2c:	ldr	x0, [sp, #112]
  408c30:	bl	406ff8 <wcrtomb@plt+0x42b8>
  408c34:	b	408c00 <wcrtomb@plt+0x5ec0>
  408c38:	ldp	x0, x1, [x19, #168]
  408c3c:	add	x3, x19, #0x70
  408c40:	ldrb	w2, [x19, #192]
  408c44:	bl	4077d8 <wcrtomb@plt+0x4a98>
  408c48:	ldrb	w1, [x21, #32]
  408c4c:	tbz	w1, #3, 408954 <wcrtomb@plt+0x5c14>
  408c50:	b	408bc8 <wcrtomb@plt+0x5e88>
  408c54:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xd3b0>
  408c58:	add	x0, x0, #0x4b0
  408c5c:	bl	402a40 <puts@plt>
  408c60:	ldp	x1, x0, [x27, #8]
  408c64:	ldr	x2, [x19, #264]
  408c68:	ldr	x25, [x1]
  408c6c:	cbz	x2, 4080f4 <wcrtomb@plt+0x53b4>
  408c70:	adrp	x27, 420000 <_obstack_memory_used@@Base+0xd3b0>
  408c74:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  408c78:	add	x3, x27, #0x4c8
  408c7c:	add	x2, x2, #0xd00
  408c80:	mov	x27, #0x0                   	// #0
  408c84:	str	x3, [sp, #104]
  408c88:	str	x2, [sp, #120]
  408c8c:	b	408c98 <wcrtomb@plt+0x5f58>
  408c90:	add	x24, x1, x24
  408c94:	ldr	x25, [x24, #8]
  408c98:	cmn	x25, #0x1
  408c9c:	lsl	x24, x27, #3
  408ca0:	b.eq	408bc0 <wcrtomb@plt+0x5e80>  // b.none
  408ca4:	ldr	x4, [x0, x27, lsl #3]
  408ca8:	mov	w2, w27
  408cac:	ldr	x1, [sp, #104]
  408cb0:	mov	w3, w25
  408cb4:	mov	w0, #0x1                   	// #1
  408cb8:	bl	4028b0 <__printf_chk@plt>
  408cbc:	ldp	x2, x1, [x19, #272]
  408cc0:	ldr	x0, [x2, x27, lsl #3]
  408cc4:	ldr	x1, [x1, x27, lsl #3]
  408cc8:	cmp	x0, x1
  408ccc:	b.eq	408cec <wcrtomb@plt+0x5fac>  // b.none
  408cd0:	adrp	x3, 438000 <_obstack_memory_used@@Base+0x253b0>
  408cd4:	sub	x1, x1, x0
  408cd8:	ldr	x4, [x19, #168]
  408cdc:	mov	x2, #0x1                   	// #1
  408ce0:	ldr	x3, [x3, #1288]
  408ce4:	add	x0, x4, x0
  408ce8:	bl	402680 <fwrite_unlocked@plt>
  408cec:	ldr	x0, [sp, #120]
  408cf0:	add	x27, x27, #0x1
  408cf4:	bl	402a40 <puts@plt>
  408cf8:	add	x0, x19, #0x108
  408cfc:	ldr	x1, [x19, #264]
  408d00:	cmp	x1, x27
  408d04:	ldp	x1, x0, [x0, #8]
  408d08:	b.hi	408c90 <wcrtomb@plt+0x5f50>  // b.pmore
  408d0c:	ldr	x25, [x1]
  408d10:	b	4080f4 <wcrtomb@plt+0x53b4>
  408d14:	ldrb	w2, [x27, #32]
  408d18:	b	4086c4 <wcrtomb@plt+0x5984>
  408d1c:	ldr	x1, [x21, #16]
  408d20:	cmp	x1, #0x1
  408d24:	b.hi	408100 <wcrtomb@plt+0x53c0>  // b.pmore
  408d28:	ldr	x4, [x19, #176]
  408d2c:	cbnz	x25, 408d38 <wcrtomb@plt+0x5ff8>
  408d30:	ldrb	w1, [x21, #32]
  408d34:	tbz	w1, #0, 408e14 <wcrtomb@plt+0x60d4>
  408d38:	cmp	x4, x2
  408d3c:	b.ne	408100 <wcrtomb@plt+0x53c0>  // b.any
  408d40:	ldrb	w1, [x21, #32]
  408d44:	mov	w0, #0x1                   	// #1
  408d48:	str	x25, [x19, #176]
  408d4c:	strb	w0, [x19, #256]
  408d50:	tbz	w1, #1, 408950 <wcrtomb@plt+0x5c10>
  408d54:	b	408c38 <wcrtomb@plt+0x5ef8>
  408d58:	ldr	x2, [x7, #16]
  408d5c:	b	408910 <wcrtomb@plt+0x5bd0>
  408d60:	ldp	x0, x1, [x19, #168]
  408d64:	add	x3, x19, #0x70
  408d68:	ldrb	w2, [x19, #192]
  408d6c:	bl	4077d8 <wcrtomb@plt+0x4a98>
  408d70:	b	408958 <wcrtomb@plt+0x5c18>
  408d74:	mov	x0, x24
  408d78:	bl	402c60 <pclose@plt>
  408d7c:	bl	407368 <wcrtomb@plt+0x4628>
  408d80:	ldr	x0, [x19, #176]
  408d84:	add	x1, x19, #0xa0
  408d88:	cbz	x0, 408da8 <wcrtomb@plt+0x6068>
  408d8c:	ldr	x2, [x1, #8]
  408d90:	sub	x0, x0, #0x1
  408d94:	adrp	x24, 438000 <_obstack_memory_used@@Base+0x253b0>
  408d98:	ldrb	w3, [x2, x0]
  408d9c:	ldrb	w2, [x24, #1120]
  408da0:	cmp	w3, w2
  408da4:	b.eq	408db0 <wcrtomb@plt+0x6070>  // b.none
  408da8:	ldrb	w1, [x21, #32]
  408dac:	b	408954 <wcrtomb@plt+0x5c14>
  408db0:	str	x0, [x1, #16]
  408db4:	ldrb	w1, [x21, #32]
  408db8:	b	408954 <wcrtomb@plt+0x5c14>
  408dbc:	ldr	x0, [sp, #176]
  408dc0:	bl	402ae0 <free@plt>
  408dc4:	ldrb	w1, [x23, #1901]
  408dc8:	b	407ccc <wcrtomb@plt+0x4f8c>
  408dcc:	ldrb	w0, [x23, #1901]
  408dd0:	cbnz	w0, 408e48 <wcrtomb@plt+0x6108>
  408dd4:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  408dd8:	ldr	w2, [x1, #2264]
  408ddc:	ldr	x1, [x19, #176]
  408de0:	sub	x1, x1, #0x1
  408de4:	str	x1, [x19, #176]
  408de8:	cbnz	w2, 407e54 <wcrtomb@plt+0x5114>
  408dec:	adrp	x2, 438000 <_obstack_memory_used@@Base+0x253b0>
  408df0:	ldrb	w2, [x2, #1864]
  408df4:	cbnz	w2, 407e54 <wcrtomb@plt+0x5114>
  408df8:	ldrb	w2, [x19, #192]
  408dfc:	add	x3, x19, #0x70
  408e00:	ldr	x0, [x19, #168]
  408e04:	bl	4077d8 <wcrtomb@plt+0x4a98>
  408e08:	mov	w0, #0xffffffff            	// #-1
  408e0c:	ldp	x25, x26, [sp, #64]
  408e10:	b	407d1c <wcrtomb@plt+0x4fdc>
  408e14:	sub	x4, x4, x2
  408e18:	str	x4, [x19, #176]
  408e1c:	ldr	x4, [x19, #168]
  408e20:	mov	w7, #0x1                   	// #1
  408e24:	ldr	x5, [x0]
  408e28:	add	x2, x4, x2
  408e2c:	ldr	x0, [x19, #184]
  408e30:	str	x2, [x19, #168]
  408e34:	strb	w7, [x19, #256]
  408e38:	sub	x0, x0, x5
  408e3c:	str	x0, [x19, #184]
  408e40:	tbz	w1, #1, 408950 <wcrtomb@plt+0x5c10>
  408e44:	b	408c38 <wcrtomb@plt+0x5ef8>
  408e48:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xd3b0>
  408e4c:	add	x0, x0, #0x468
  408e50:	bl	402a40 <puts@plt>
  408e54:	b	408dd4 <wcrtomb@plt+0x6094>
  408e58:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  408e5c:	add	x1, x1, #0x480
  408e60:	mov	w2, #0x5                   	// #5
  408e64:	mov	x0, #0x0                   	// #0
  408e68:	bl	402c20 <dcgettext@plt>
  408e6c:	bl	409df0 <wcrtomb@plt+0x70b0>
  408e70:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  408e74:	add	x1, x1, #0x480
  408e78:	mov	w2, #0x5                   	// #5
  408e7c:	bl	402c20 <dcgettext@plt>
  408e80:	bl	409df0 <wcrtomb@plt+0x70b0>
  408e84:	nop
  408e88:	stp	x29, x30, [sp, #-272]!
  408e8c:	mov	x2, #0x32                  	// #50
  408e90:	mov	x29, sp
  408e94:	stp	x21, x22, [sp, #32]
  408e98:	adrp	x22, 438000 <_obstack_memory_used@@Base+0x253b0>
  408e9c:	add	x22, x22, #0x618
  408ea0:	stp	x19, x20, [sp, #16]
  408ea4:	mov	x20, x0
  408ea8:	mov	x19, x1
  408eac:	add	x0, x22, #0xa0
  408eb0:	mov	x1, #0x0                   	// #0
  408eb4:	str	x23, [sp, #48]
  408eb8:	bl	407730 <wcrtomb@plt+0x49f0>
  408ebc:	mov	x0, x22
  408ec0:	mov	x2, #0x0                   	// #0
  408ec4:	mov	x1, #0x0                   	// #0
  408ec8:	bl	407730 <wcrtomb@plt+0x49f0>
  408ecc:	add	x0, x22, #0x40
  408ed0:	mov	x2, #0x0                   	// #0
  408ed4:	mov	x1, #0x0                   	// #0
  408ed8:	bl	407730 <wcrtomb@plt+0x49f0>
  408edc:	mov	w0, #0x1                   	// #1
  408ee0:	strb	w0, [sp, #96]
  408ee4:	cbz	x19, 408ef8 <wcrtomb@plt+0x61b8>
  408ee8:	ldr	x0, [x19]
  408eec:	cbz	x0, 408ef8 <wcrtomb@plt+0x61b8>
  408ef0:	str	x19, [sp, #72]
  408ef4:	b	408f10 <wcrtomb@plt+0x61d0>
  408ef8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  408efc:	ldr	x0, [x0, #1888]
  408f00:	cbnz	x0, 408ff8 <wcrtomb@plt+0x62b8>
  408f04:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  408f08:	add	x0, x0, #0x440
  408f0c:	str	x0, [sp, #72]
  408f10:	adrp	x0, 406000 <wcrtomb@plt+0x32c0>
  408f14:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x253b0>
  408f18:	add	x0, x0, #0x950
  408f1c:	adrp	x23, 420000 <_obstack_memory_used@@Base+0xd3b0>
  408f20:	add	x21, x21, #0x76d
  408f24:	add	x23, x23, #0x528
  408f28:	stp	xzr, xzr, [sp, #80]
  408f2c:	str	x0, [sp, #104]
  408f30:	str	xzr, [sp, #256]
  408f34:	b	408f50 <wcrtomb@plt+0x6210>
  408f38:	add	x1, sp, #0x48
  408f3c:	mov	x0, x20
  408f40:	bl	407b50 <wcrtomb@plt+0x4e10>
  408f44:	mov	w19, w0
  408f48:	cmn	w0, #0x1
  408f4c:	b.ne	408fb8 <wcrtomb@plt+0x6278>  // b.any
  408f50:	mov	x1, x20
  408f54:	add	x0, sp, #0x48
  408f58:	mov	w2, #0x0                   	// #0
  408f5c:	bl	407a10 <wcrtomb@plt+0x4cd0>
  408f60:	tst	w0, #0xff
  408f64:	b.eq	408ff0 <wcrtomb@plt+0x62b0>  // b.none
  408f68:	ldrb	w0, [x21]
  408f6c:	cbz	w0, 408f38 <wcrtomb@plt+0x61f8>
  408f70:	ldr	x0, [sp, #256]
  408f74:	cbz	x0, 408fe8 <wcrtomb@plt+0x62a8>
  408f78:	bl	402780 <fileno@plt>
  408f7c:	cbnz	w0, 408fe8 <wcrtomb@plt+0x62a8>
  408f80:	adrp	x2, 420000 <_obstack_memory_used@@Base+0xd3b0>
  408f84:	add	x2, x2, #0x510
  408f88:	ldr	x3, [sp, #88]
  408f8c:	mov	x1, x23
  408f90:	mov	w0, #0x1                   	// #1
  408f94:	bl	4028b0 <__printf_chk@plt>
  408f98:	add	x0, x22, #0xa0
  408f9c:	bl	406958 <wcrtomb@plt+0x3c18>
  408fa0:	add	x1, sp, #0x48
  408fa4:	mov	x0, x20
  408fa8:	bl	407b50 <wcrtomb@plt+0x4e10>
  408fac:	mov	w19, w0
  408fb0:	cmn	w0, #0x1
  408fb4:	b.eq	408f50 <wcrtomb@plt+0x6210>  // b.none
  408fb8:	add	x0, sp, #0x48
  408fbc:	bl	406da0 <wcrtomb@plt+0x4060>
  408fc0:	ldr	x1, [sp, #80]
  408fc4:	mov	w0, #0x2                   	// #2
  408fc8:	ldp	x21, x22, [sp, #32]
  408fcc:	cmp	x1, #0x0
  408fd0:	csel	w19, w19, w0, eq  // eq = none
  408fd4:	mov	w0, w19
  408fd8:	ldp	x19, x20, [sp, #16]
  408fdc:	ldr	x23, [sp, #48]
  408fe0:	ldp	x29, x30, [sp], #272
  408fe4:	ret
  408fe8:	ldr	x2, [sp, #120]
  408fec:	b	408f88 <wcrtomb@plt+0x6248>
  408ff0:	mov	w19, #0x0                   	// #0
  408ff4:	b	408fb8 <wcrtomb@plt+0x6278>
  408ff8:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  408ffc:	add	x1, x1, #0x518
  409000:	mov	w2, #0x5                   	// #5
  409004:	mov	x0, #0x0                   	// #0
  409008:	bl	402c20 <dcgettext@plt>
  40900c:	bl	409df0 <wcrtomb@plt+0x70b0>
  409010:	stp	x29, x30, [sp, #-64]!
  409014:	mov	x29, sp
  409018:	stp	x19, x20, [sp, #16]
  40901c:	mov	x19, x1
  409020:	mov	w20, w0
  409024:	mov	x0, x1
  409028:	str	x21, [sp, #32]
  40902c:	strb	w20, [sp, #63]
  409030:	bl	402a10 <mbsinit@plt>
  409034:	mov	x3, x19
  409038:	mov	w21, w0
  40903c:	add	x1, sp, #0x3f
  409040:	mov	x2, #0x1                   	// #1
  409044:	mov	x0, #0x0                   	// #0
  409048:	bl	412878 <wcrtomb@plt+0xfb38>
  40904c:	cbz	w0, 4090a0 <wcrtomb@plt+0x6360>
  409050:	cmp	w0, #0x0
  409054:	b.gt	409080 <wcrtomb@plt+0x6340>
  409058:	cmn	w0, #0x2
  40905c:	b.eq	4090a0 <wcrtomb@plt+0x6360>  // b.none
  409060:	cmn	w0, #0x1
  409064:	b.ne	4090b4 <wcrtomb@plt+0x6374>  // b.any
  409068:	str	xzr, [x19]
  40906c:	mov	w0, #0x0                   	// #0
  409070:	ldp	x19, x20, [sp, #16]
  409074:	ldr	x21, [sp, #32]
  409078:	ldp	x29, x30, [sp], #64
  40907c:	ret
  409080:	cmp	w0, #0x1
  409084:	b.ne	4090b4 <wcrtomb@plt+0x6374>  // b.any
  409088:	cmp	w21, #0x0
  40908c:	cset	w0, eq  // eq = none
  409090:	ldp	x19, x20, [sp, #16]
  409094:	ldr	x21, [sp, #32]
  409098:	ldp	x29, x30, [sp], #64
  40909c:	ret
  4090a0:	mov	w0, #0x1                   	// #1
  4090a4:	ldp	x19, x20, [sp, #16]
  4090a8:	ldr	x21, [sp, #32]
  4090ac:	ldp	x29, x30, [sp], #64
  4090b0:	ret
  4090b4:	mov	w2, w0
  4090b8:	mov	w1, w20
  4090bc:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xd3b0>
  4090c0:	add	x0, x0, #0x5f8
  4090c4:	bl	409df0 <wcrtomb@plt+0x70b0>
  4090c8:	stp	x29, x30, [sp, #-16]!
  4090cc:	mov	x29, sp
  4090d0:	bl	4104a0 <wcrtomb@plt+0xd760>
  4090d4:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  4090d8:	add	x1, x1, #0x620
  4090dc:	bl	402aa0 <strcmp@plt>
  4090e0:	cmp	w0, #0x0
  4090e4:	cset	w0, eq  // eq = none
  4090e8:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  4090ec:	strb	w0, [x1, #2256]
  4090f0:	bl	402b00 <__ctype_get_mb_cur_max@plt>
  4090f4:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  4090f8:	ldp	x29, x30, [sp], #16
  4090fc:	str	w0, [x1, #2260]
  409100:	ret
  409104:	nop
  409108:	stp	x29, x30, [sp, #-272]!
  40910c:	adrp	x2, 438000 <_obstack_memory_used@@Base+0x253b0>
  409110:	mov	x29, sp
  409114:	ldr	w2, [x2, #1896]
  409118:	stp	x19, x20, [sp, #16]
  40911c:	mov	x19, x0
  409120:	stp	x21, x22, [sp, #32]
  409124:	adrp	x22, 438000 <_obstack_memory_used@@Base+0x253b0>
  409128:	mov	w21, w1
  40912c:	stp	x23, x24, [sp, #48]
  409130:	ldr	w0, [x22, #2264]
  409134:	tbz	w2, #0, 409178 <wcrtomb@plt+0x6438>
  409138:	cmp	w0, #0x1
  40913c:	b.eq	4092b0 <wcrtomb@plt+0x6570>  // b.none
  409140:	cmp	w0, #0x2
  409144:	b.eq	4092c8 <wcrtomb@plt+0x6588>  // b.none
  409148:	ldr	w24, [x19, #64]
  40914c:	cmp	w0, #0x0
  409150:	mov	w2, #0xb27c                	// #45692
  409154:	mov	w20, #0xb27c                	// #45692
  409158:	movk	w2, #0x7, lsl #16
  40915c:	movk	w20, #0x5, lsl #16
  409160:	csel	w20, w2, w20, ne  // ne = any
  409164:	tbnz	w24, #1, 4091a0 <wcrtomb@plt+0x6460>
  409168:	mov	x0, #0x100                 	// #256
  40916c:	bl	402800 <malloc@plt>
  409170:	str	x0, [x19, #32]
  409174:	b	4091a4 <wcrtomb@plt+0x6464>
  409178:	cmp	w0, #0x1
  40917c:	b.eq	4092bc <wcrtomb@plt+0x657c>  // b.none
  409180:	cmp	w0, #0x2
  409184:	mov	w2, #0x646                 	// #1606
  409188:	mov	w20, #0x246                 	// #582
  40918c:	movk	w2, #0x10f, lsl #16
  409190:	movk	w20, #0x105, lsl #16
  409194:	csel	w20, w2, w20, eq  // eq = none
  409198:	ldr	w24, [x19, #64]
  40919c:	tbz	w24, #1, 409168 <wcrtomb@plt+0x6428>
  4091a0:	orr	w20, w20, #0x400000
  4091a4:	cmp	w21, #0x0
  4091a8:	add	x23, x19, #0x5a
  4091ac:	cset	w2, eq  // eq = none
  4091b0:	tst	x24, #0x4
  4091b4:	orr	w2, w20, w2, lsl #25
  4091b8:	and	w0, w2, #0xffffffbf
  4091bc:	orr	w0, w0, #0x100
  4091c0:	csel	w2, w2, w0, eq  // eq = none
  4091c4:	sxtw	x20, w2
  4091c8:	mov	x0, x20
  4091cc:	bl	41ec98 <_obstack_memory_used@@Base+0xc048>
  4091d0:	ldr	x1, [x19, #72]
  4091d4:	mov	x2, x19
  4091d8:	mov	x0, x23
  4091dc:	bl	41ec18 <_obstack_memory_used@@Base+0xbfc8>
  4091e0:	adrp	x2, 438000 <_obstack_memory_used@@Base+0x253b0>
  4091e4:	mov	w1, #0x0                   	// #0
  4091e8:	ldrb	w3, [x2, #1120]
  4091ec:	cmp	w3, #0xa
  4091f0:	b.ne	4091fc <wcrtomb@plt+0x64bc>  // b.any
  4091f4:	ldr	w1, [x19, #64]
  4091f8:	ubfx	x1, x1, #2, #1
  4091fc:	ldrb	w2, [x19, #56]
  409200:	str	xzr, [x19, #40]
  409204:	bfi	w2, w1, #7, #1
  409208:	strb	w2, [x19, #56]
  40920c:	cbnz	x0, 40931c <wcrtomb@plt+0x65dc>
  409210:	cbz	w21, 40922c <wcrtomb@plt+0x64ec>
  409214:	ldr	x0, [x19, #48]
  409218:	sub	w21, w21, #0x1
  40921c:	cmp	x0, w21, sxtw
  409220:	b.cs	40922c <wcrtomb@plt+0x64ec>  // b.hs, b.nlast
  409224:	ldr	w0, [x22, #2264]
  409228:	cbz	w0, 4092ec <wcrtomb@plt+0x65ac>
  40922c:	cmp	w3, #0xa
  409230:	cset	w21, ne  // ne = any
  409234:	bl	410068 <wcrtomb@plt+0xd328>
  409238:	str	x0, [x19, #80]
  40923c:	lsl	w21, w21, #1
  409240:	mov	x2, x20
  409244:	mov	w3, w21
  409248:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  40924c:	add	x1, x1, #0x8e0
  409250:	bl	410070 <wcrtomb@plt+0xd330>
  409254:	ldp	x1, x2, [x19, #72]
  409258:	mov	x0, x23
  40925c:	mov	w3, #0x1                   	// #1
  409260:	bl	40f340 <wcrtomb@plt+0xc600>
  409264:	ldr	x0, [x19, #72]
  409268:	cmp	x0, #0x1
  40926c:	b.eq	409284 <wcrtomb@plt+0x6544>  // b.none
  409270:	ldp	x19, x20, [sp, #16]
  409274:	ldp	x21, x22, [sp, #32]
  409278:	ldp	x23, x24, [sp, #48]
  40927c:	ldp	x29, x30, [sp], #272
  409280:	ret
  409284:	ldrb	w1, [x19, #90]
  409288:	cmp	w1, #0x5e
  40928c:	b.eq	4092d4 <wcrtomb@plt+0x6594>  // b.none
  409290:	cmp	w1, #0x24
  409294:	b.ne	409270 <wcrtomb@plt+0x6530>  // b.any
  409298:	strb	w0, [x19, #89]
  40929c:	ldp	x19, x20, [sp, #16]
  4092a0:	ldp	x21, x22, [sp, #32]
  4092a4:	ldp	x23, x24, [sp, #48]
  4092a8:	ldp	x29, x30, [sp], #272
  4092ac:	ret
  4092b0:	mov	w20, #0xb27c                	// #45692
  4092b4:	movk	w20, #0x7, lsl #16
  4092b8:	b	409198 <wcrtomb@plt+0x6458>
  4092bc:	mov	w20, #0x246                 	// #582
  4092c0:	movk	w20, #0x107, lsl #16
  4092c4:	b	409198 <wcrtomb@plt+0x6458>
  4092c8:	mov	w20, #0xb27c                	// #45692
  4092cc:	movk	w20, #0xf, lsl #16
  4092d0:	b	409198 <wcrtomb@plt+0x6458>
  4092d4:	strb	w0, [x19, #88]
  4092d8:	ldp	x19, x20, [sp, #16]
  4092dc:	ldp	x21, x22, [sp, #32]
  4092e0:	ldp	x23, x24, [sp, #48]
  4092e4:	ldp	x29, x30, [sp], #272
  4092e8:	ret
  4092ec:	mov	w2, #0x5                   	// #5
  4092f0:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  4092f4:	mov	x0, #0x0                   	// #0
  4092f8:	add	x1, x1, #0x628
  4092fc:	bl	402c20 <dcgettext@plt>
  409300:	mov	x3, x0
  409304:	mov	w4, w21
  409308:	add	x0, sp, #0x48
  40930c:	mov	x2, #0xc8                  	// #200
  409310:	mov	w1, #0x1                   	// #1
  409314:	bl	4026a0 <__sprintf_chk@plt>
  409318:	add	x0, sp, #0x48
  40931c:	bl	4037b0 <wcrtomb@plt+0xa70>
  409320:	stp	x29, x30, [sp, #-16]!
  409324:	adrp	x2, 421000 <_obstack_memory_used@@Base+0xe3b0>
  409328:	mov	x1, x0
  40932c:	mov	x29, sp
  409330:	add	x0, x2, #0x368
  409334:	bl	409df0 <wcrtomb@plt+0x70b0>
  409338:	stp	x29, x30, [sp, #-32]!
  40933c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  409340:	mov	x29, sp
  409344:	str	x19, [sp, #16]
  409348:	mov	x19, x0
  40934c:	add	x0, x1, #0x658
  409350:	bl	402cc0 <getenv@plt>
  409354:	cbz	x0, 409364 <wcrtomb@plt+0x6624>
  409358:	ldr	x19, [sp, #16]
  40935c:	ldp	x29, x30, [sp], #32
  409360:	ret
  409364:	mov	x0, x19
  409368:	bl	409320 <wcrtomb@plt+0x65e0>
  40936c:	nop
  409370:	stp	x29, x30, [sp, #-64]!
  409374:	mov	x29, sp
  409378:	stp	x19, x20, [sp, #16]
  40937c:	mov	w20, w1
  409380:	stp	x21, x22, [sp, #32]
  409384:	mov	x22, x0
  409388:	str	x23, [sp, #48]
  40938c:	mov	w23, w2
  409390:	bl	40a7d8 <wcrtomb@plt+0x7a98>
  409394:	cbnz	x0, 4093bc <wcrtomb@plt+0x667c>
  409398:	cmp	w20, #0x0
  40939c:	mov	x21, #0x0                   	// #0
  4093a0:	b.gt	409424 <wcrtomb@plt+0x66e4>
  4093a4:	mov	x0, x21
  4093a8:	ldp	x19, x20, [sp, #16]
  4093ac:	ldp	x21, x22, [sp, #32]
  4093b0:	ldr	x23, [sp, #48]
  4093b4:	ldp	x29, x30, [sp], #64
  4093b8:	ret
  4093bc:	mov	x19, x0
  4093c0:	add	x0, x0, #0x5f
  4093c4:	bl	4127c8 <wcrtomb@plt+0xfa88>
  4093c8:	mov	x21, x0
  4093cc:	mov	x0, x22
  4093d0:	add	x22, x21, #0x5a
  4093d4:	str	w20, [x21, #64]
  4093d8:	bl	40a7d0 <wcrtomb@plt+0x7a90>
  4093dc:	mov	x1, x0
  4093e0:	mov	x2, x19
  4093e4:	mov	x0, x22
  4093e8:	bl	402650 <memcpy@plt>
  4093ec:	mov	x1, x19
  4093f0:	mov	w2, #0x2                   	// #2
  4093f4:	mov	x0, x22
  4093f8:	bl	4040d8 <wcrtomb@plt+0x1398>
  4093fc:	str	x0, [x21, #72]
  409400:	mov	w1, w23
  409404:	mov	x0, x21
  409408:	bl	409108 <wcrtomb@plt+0x63c8>
  40940c:	mov	x0, x21
  409410:	ldp	x19, x20, [sp, #16]
  409414:	ldp	x21, x22, [sp, #32]
  409418:	ldr	x23, [sp, #48]
  40941c:	ldp	x29, x30, [sp], #64
  409420:	ret
  409424:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  409428:	add	x1, x1, #0x698
  40942c:	add	x1, x1, #0x1f
  409430:	mov	w2, #0x5                   	// #5
  409434:	bl	402c20 <dcgettext@plt>
  409438:	bl	4037b0 <wcrtomb@plt+0xa70>
  40943c:	nop
  409440:	stp	x29, x30, [sp, #-128]!
  409444:	mov	x29, sp
  409448:	stp	x19, x20, [sp, #16]
  40944c:	stp	x21, x22, [sp, #32]
  409450:	mov	x22, x2
  409454:	stp	x23, x24, [sp, #48]
  409458:	mov	x23, x4
  40945c:	mov	w24, w5
  409460:	stp	x25, x26, [sp, #64]
  409464:	mov	x25, x1
  409468:	stp	x27, x28, [sp, #80]
  40946c:	mov	x28, x3
  409470:	cbz	x0, 4096b4 <wcrtomb@plt+0x6974>
  409474:	mov	x19, x0
  409478:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  40947c:	str	x19, [x0, #1848]
  409480:	mov	x0, #0x7ffffffe            	// #2147483646
  409484:	cmp	x22, x0
  409488:	b.hi	4098a8 <wcrtomb@plt+0x6b68>  // b.pmore
  40948c:	ldrb	w0, [x19, #56]
  409490:	tst	x0, #0x10
  409494:	ccmp	w24, #0x0, #0x4, ne  // ne = any
  409498:	b.ne	409740 <wcrtomb@plt+0x6a00>  // b.any
  40949c:	ldrb	w0, [x19, #56]
  4094a0:	mov	w20, #0x1                   	// #1
  4094a4:	ldrh	w1, [x19, #88]
  4094a8:	bfi	w0, w20, #1, #2
  4094ac:	strb	w0, [x19, #56]
  4094b0:	cbz	w1, 409558 <wcrtomb@plt+0x6818>
  4094b4:	ldrb	w0, [x19, #89]
  4094b8:	cbnz	w0, 4097e4 <wcrtomb@plt+0x6aa4>
  4094bc:	cbz	x28, 4094f4 <wcrtomb@plt+0x67b4>
  4094c0:	ldr	w0, [x19, #64]
  4094c4:	tbz	w0, #2, 4097c4 <wcrtomb@plt+0x6a84>
  4094c8:	add	x0, x25, x28
  4094cc:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  4094d0:	ldrb	w1, [x1, #1120]
  4094d4:	ldurb	w2, [x0, #-1]
  4094d8:	cmp	w2, w1
  4094dc:	b.eq	4094f4 <wcrtomb@plt+0x67b4>  // b.none
  4094e0:	sub	x2, x22, x28
  4094e4:	bl	402bb0 <memchr@plt>
  4094e8:	cbz	x0, 4097c4 <wcrtomb@plt+0x6a84>
  4094ec:	sub	x28, x0, x25
  4094f0:	add	x28, x28, #0x1
  4094f4:	cbz	w24, 409538 <wcrtomb@plt+0x67f8>
  4094f8:	ldr	x4, [x23, #8]
  4094fc:	cbz	x4, 409864 <wcrtomb@plt+0x6b24>
  409500:	ldr	x0, [x23, #16]
  409504:	str	x28, [x4]
  409508:	str	x28, [x0]
  40950c:	ldr	x1, [x23]
  409510:	cmp	x1, #0x1
  409514:	b.ls	409538 <wcrtomb@plt+0x67f8>  // b.plast
  409518:	mov	x1, #0x1                   	// #1
  40951c:	mov	x2, #0xffffffffffffffff    	// #-1
  409520:	str	x2, [x0, x1, lsl #3]
  409524:	str	x2, [x4, x1, lsl #3]
  409528:	add	x1, x1, #0x1
  40952c:	ldr	x3, [x23]
  409530:	cmp	x3, x1
  409534:	b.hi	409520 <wcrtomb@plt+0x67e0>  // b.pmore
  409538:	mov	w0, #0x1                   	// #1
  40953c:	ldp	x19, x20, [sp, #16]
  409540:	ldp	x21, x22, [sp, #32]
  409544:	ldp	x23, x24, [sp, #48]
  409548:	ldp	x25, x26, [sp, #64]
  40954c:	ldp	x27, x28, [sp, #80]
  409550:	ldp	x29, x30, [sp], #128
  409554:	ret
  409558:	cbnz	x28, 4096e8 <wcrtomb@plt+0x69a8>
  40955c:	ldr	x21, [x19, #80]
  409560:	mov	x0, x21
  409564:	bl	40f1c0 <wcrtomb@plt+0xc480>
  409568:	cbz	x0, 409770 <wcrtomb@plt+0x6a30>
  40956c:	add	x26, x25, x22
  409570:	mov	w3, w20
  409574:	mov	x2, x26
  409578:	mov	x1, x25
  40957c:	mov	x5, #0x0                   	// #0
  409580:	mov	x4, #0x0                   	// #0
  409584:	bl	40f1b0 <wcrtomb@plt+0xc470>
  409588:	cbz	x0, 4097c4 <wcrtomb@plt+0x6a84>
  40958c:	ldr	w0, [x19, #64]
  409590:	and	w0, w0, #0x4
  409594:	cbz	w24, 409894 <wcrtomb@plt+0x6b54>
  409598:	cbz	w0, 409820 <wcrtomb@plt+0x6ae0>
  40959c:	nop
  4095a0:	adrp	x26, 438000 <_obstack_memory_used@@Base+0x253b0>
  4095a4:	ldrb	w1, [x26, #1120]
  4095a8:	cmp	w1, #0xa
  4095ac:	b.eq	4096f4 <wcrtomb@plt+0x69b4>  // b.none
  4095b0:	mov	x20, x25
  4095b4:	cbz	x28, 4095d4 <wcrtomb@plt+0x6894>
  4095b8:	mov	x2, x28
  4095bc:	mov	x0, x25
  4095c0:	str	w1, [sp, #104]
  4095c4:	bl	402b30 <memrchr@plt>
  4095c8:	ldr	w1, [sp, #104]
  4095cc:	cmp	x0, #0x0
  4095d0:	csinc	x20, x25, x0, eq  // eq = none
  4095d4:	cmp	w24, #0x0
  4095d8:	add	x0, x26, #0x460
  4095dc:	add	x28, x25, x28
  4095e0:	add	x22, x25, x22
  4095e4:	csel	x27, x23, xzr, ne  // ne = any
  4095e8:	str	x0, [sp, #104]
  4095ec:	b	409628 <wcrtomb@plt+0x68e8>
  4095f0:	mov	x1, x20
  4095f4:	sub	x4, x0, x28
  4095f8:	sub	x2, x0, x20
  4095fc:	sub	x3, x28, x20
  409600:	mov	x0, x19
  409604:	bl	41f4c0 <_obstack_memory_used@@Base+0xc870>
  409608:	mov	w1, w0
  40960c:	tbz	w0, #31, 409664 <wcrtomb@plt+0x6924>
  409610:	cmp	x21, x22
  409614:	b.eq	40971c <wcrtomb@plt+0x69dc>  // b.none
  409618:	ldr	x0, [sp, #104]
  40961c:	add	x20, x21, #0x1
  409620:	mov	x28, x20
  409624:	ldrb	w1, [x0]
  409628:	sub	x26, x22, x20
  40962c:	mov	x0, x20
  409630:	mov	x2, x26
  409634:	bl	402bb0 <memchr@plt>
  409638:	mov	x5, x27
  40963c:	mov	x21, x0
  409640:	cbnz	x0, 4095f0 <wcrtomb@plt+0x68b0>
  409644:	mov	x1, x20
  409648:	sub	x4, x22, x28
  40964c:	sub	x3, x28, x20
  409650:	mov	x2, x26
  409654:	mov	x0, x19
  409658:	bl	41f4c0 <_obstack_memory_used@@Base+0xc870>
  40965c:	mov	w1, w0
  409660:	tbnz	w0, #31, 40971c <wcrtomb@plt+0x69dc>
  409664:	sub	x20, x20, x25
  409668:	add	w1, w20, w0
  40966c:	cbz	w24, 40971c <wcrtomb@plt+0x69dc>
  409670:	ldr	x0, [x23]
  409674:	cbz	x0, 40971c <wcrtomb@plt+0x69dc>
  409678:	ldp	x4, x3, [x23, #8]
  40967c:	mov	x0, #0x0                   	// #0
  409680:	ldr	x2, [x4, x0, lsl #3]
  409684:	tbnz	x2, #63, 409690 <wcrtomb@plt+0x6950>
  409688:	add	x2, x20, x2
  40968c:	str	x2, [x4, x0, lsl #3]
  409690:	ldr	x2, [x3, x0, lsl #3]
  409694:	tbnz	x2, #63, 4096a0 <wcrtomb@plt+0x6960>
  409698:	add	x2, x20, x2
  40969c:	str	x2, [x3, x0, lsl #3]
  4096a0:	ldr	x2, [x23]
  4096a4:	add	x0, x0, #0x1
  4096a8:	cmp	x2, x0
  4096ac:	b.hi	409680 <wcrtomb@plt+0x6940>  // b.pmore
  4096b0:	b	40971c <wcrtomb@plt+0x69dc>
  4096b4:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  4096b8:	ldr	x19, [x1, #1848]
  4096bc:	cbnz	x19, 409480 <wcrtomb@plt+0x6740>
  4096c0:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  4096c4:	add	x1, x1, #0x698
  4096c8:	mov	w2, #0x5                   	// #5
  4096cc:	bl	402c20 <dcgettext@plt>
  4096d0:	bl	4037b0 <wcrtomb@plt+0xa70>
  4096d4:	mov	x0, x21
  4096d8:	bl	40f1c8 <wcrtomb@plt+0xc488>
  4096dc:	tst	w0, #0xff
  4096e0:	b.ne	40982c <wcrtomb@plt+0x6aec>  // b.any
  4096e4:	nop
  4096e8:	ldr	w1, [x19, #64]
  4096ec:	and	w1, w1, #0x4
  4096f0:	cbnz	w1, 4095a0 <wcrtomb@plt+0x6860>
  4096f4:	cmp	w24, #0x0
  4096f8:	mov	x3, x28
  4096fc:	csel	x23, x23, xzr, ne  // ne = any
  409700:	sub	x4, x22, x28
  409704:	mov	x1, x25
  409708:	mov	x5, x23
  40970c:	mov	x2, x22
  409710:	mov	x0, x19
  409714:	bl	41f4c0 <_obstack_memory_used@@Base+0xc870>
  409718:	mov	w1, w0
  40971c:	mvn	w0, w1
  409720:	ldp	x19, x20, [sp, #16]
  409724:	lsr	w0, w0, #31
  409728:	ldp	x21, x22, [sp, #32]
  40972c:	ldp	x23, x24, [sp, #48]
  409730:	ldp	x25, x26, [sp, #64]
  409734:	ldp	x27, x28, [sp, #80]
  409738:	ldp	x29, x30, [sp], #128
  40973c:	ret
  409740:	ldr	x0, [x19, #80]
  409744:	cbz	x0, 409758 <wcrtomb@plt+0x6a18>
  409748:	bl	40f1d0 <wcrtomb@plt+0xc490>
  40974c:	ldr	x0, [x19, #80]
  409750:	bl	402ae0 <free@plt>
  409754:	str	xzr, [x19, #80]
  409758:	mov	x0, x19
  40975c:	bl	41f378 <_obstack_memory_used@@Base+0xc728>
  409760:	mov	w1, w24
  409764:	mov	x0, x19
  409768:	bl	409108 <wcrtomb@plt+0x63c8>
  40976c:	b	40949c <wcrtomb@plt+0x675c>
  409770:	cbnz	w24, 4096d4 <wcrtomb@plt+0x6994>
  409774:	ldr	w0, [x19, #64]
  409778:	add	x26, x25, x22
  40977c:	tbz	w0, #2, 4096d4 <wcrtomb@plt+0x6994>
  409780:	mov	x2, x26
  409784:	mov	x0, x21
  409788:	add	x5, sp, #0x7f
  40978c:	mov	x1, x25
  409790:	mov	x4, #0x0                   	// #0
  409794:	mov	w3, #0x1                   	// #1
  409798:	strb	wzr, [sp, #127]
  40979c:	bl	40f1b0 <wcrtomb@plt+0xc470>
  4097a0:	cbz	x0, 4097c4 <wcrtomb@plt+0x6a84>
  4097a4:	ldr	w0, [x19, #64]
  4097a8:	and	w1, w0, #0x4
  4097ac:	tbz	w0, #2, 4096f4 <wcrtomb@plt+0x69b4>
  4097b0:	ldrb	w2, [sp, #127]
  4097b4:	mov	w0, #0x1                   	// #1
  4097b8:	cbz	w2, 40953c <wcrtomb@plt+0x67fc>
  4097bc:	cbnz	w1, 4095a0 <wcrtomb@plt+0x6860>
  4097c0:	b	4096f4 <wcrtomb@plt+0x69b4>
  4097c4:	mov	w0, #0x0                   	// #0
  4097c8:	ldp	x19, x20, [sp, #16]
  4097cc:	ldp	x21, x22, [sp, #32]
  4097d0:	ldp	x23, x24, [sp, #48]
  4097d4:	ldp	x25, x26, [sp, #64]
  4097d8:	ldp	x27, x28, [sp, #80]
  4097dc:	ldp	x29, x30, [sp], #128
  4097e0:	ret
  4097e4:	ldr	w0, [x19, #64]
  4097e8:	tbz	w0, #2, 409814 <wcrtomb@plt+0x6ad4>
  4097ec:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  4097f0:	sub	x2, x22, x28
  4097f4:	add	x0, x25, x28
  4097f8:	ldrb	w1, [x1, #1120]
  4097fc:	bl	402bb0 <memchr@plt>
  409800:	sub	x28, x0, x25
  409804:	cmp	x0, #0x0
  409808:	csel	x28, x28, x22, ne  // ne = any
  40980c:	cbnz	w24, 4094f8 <wcrtomb@plt+0x67b8>
  409810:	b	409538 <wcrtomb@plt+0x67f8>
  409814:	mov	x28, x22
  409818:	cbnz	w24, 4094f8 <wcrtomb@plt+0x67b8>
  40981c:	b	409538 <wcrtomb@plt+0x67f8>
  409820:	mov	x4, x22
  409824:	mov	x3, #0x0                   	// #0
  409828:	b	409704 <wcrtomb@plt+0x69c4>
  40982c:	mov	x0, x21
  409830:	add	x5, sp, #0x7f
  409834:	add	x2, x25, x22
  409838:	mov	x1, x25
  40983c:	mov	x4, #0x0                   	// #0
  409840:	mov	w3, #0x1                   	// #1
  409844:	strb	wzr, [sp, #127]
  409848:	bl	40f1b0 <wcrtomb@plt+0xc470>
  40984c:	cbz	x0, 4097c4 <wcrtomb@plt+0x6a84>
  409850:	ldr	w0, [x19, #64]
  409854:	and	w1, w0, #0x4
  409858:	cbz	w24, 4097a8 <wcrtomb@plt+0x6a68>
  40985c:	cbnz	w1, 4095a0 <wcrtomb@plt+0x6860>
  409860:	b	4096f4 <wcrtomb@plt+0x69b4>
  409864:	mov	x1, #0x8                   	// #8
  409868:	mov	x0, #0x1                   	// #1
  40986c:	bl	412790 <wcrtomb@plt+0xfa50>
  409870:	str	x0, [x23, #8]
  409874:	mov	x1, #0x8                   	// #8
  409878:	mov	x0, #0x1                   	// #1
  40987c:	bl	412790 <wcrtomb@plt+0xfa50>
  409880:	str	x0, [x23, #16]
  409884:	mov	x1, #0x1                   	// #1
  409888:	str	x1, [x23]
  40988c:	ldr	x4, [x23, #8]
  409890:	b	409504 <wcrtomb@plt+0x67c4>
  409894:	cbnz	w0, 4098c0 <wcrtomb@plt+0x6b80>
  409898:	mov	x4, x22
  40989c:	mov	x3, #0x0                   	// #0
  4098a0:	mov	x23, #0x0                   	// #0
  4098a4:	b	409704 <wcrtomb@plt+0x69c4>
  4098a8:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  4098ac:	add	x1, x1, #0x668
  4098b0:	mov	w2, #0x5                   	// #5
  4098b4:	mov	x0, #0x0                   	// #0
  4098b8:	bl	402c20 <dcgettext@plt>
  4098bc:	bl	409df0 <wcrtomb@plt+0x70b0>
  4098c0:	ldr	x21, [x19, #80]
  4098c4:	b	409780 <wcrtomb@plt+0x6a40>
  4098c8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  4098cc:	ldr	x0, [x0, #1856]
  4098d0:	cbz	x0, 4098d8 <wcrtomb@plt+0x6b98>
  4098d4:	b	402cd0 <unlink@plt>
  4098d8:	ret
  4098dc:	nop
  4098e0:	stp	x29, x30, [sp, #-32]!
  4098e4:	mov	x29, sp
  4098e8:	str	x19, [sp, #16]
  4098ec:	cbz	w0, 409924 <wcrtomb@plt+0x6be4>
  4098f0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  4098f4:	mov	w2, #0x5                   	// #5
  4098f8:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  4098fc:	add	x1, x1, #0x6e0
  409900:	ldr	x19, [x0, #1264]
  409904:	mov	x0, #0x0                   	// #0
  409908:	bl	402c20 <dcgettext@plt>
  40990c:	mov	x2, x0
  409910:	mov	x0, x19
  409914:	mov	w1, #0x1                   	// #1
  409918:	ldr	x19, [sp, #16]
  40991c:	ldp	x29, x30, [sp], #32
  409920:	b	402a90 <__fprintf_chk@plt>
  409924:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  409928:	mov	w2, #0x5                   	// #5
  40992c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  409930:	add	x1, x1, #0x6e0
  409934:	ldr	x19, [x0, #1288]
  409938:	mov	x0, #0x0                   	// #0
  40993c:	bl	402c20 <dcgettext@plt>
  409940:	mov	x2, x0
  409944:	mov	w1, #0x1                   	// #1
  409948:	mov	x0, x19
  40994c:	bl	402a90 <__fprintf_chk@plt>
  409950:	mov	w2, #0x5                   	// #5
  409954:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  409958:	mov	x0, #0x0                   	// #0
  40995c:	add	x1, x1, #0x760
  409960:	bl	402c20 <dcgettext@plt>
  409964:	mov	x2, x0
  409968:	mov	x0, x19
  40996c:	adrp	x3, 420000 <_obstack_memory_used@@Base+0xd3b0>
  409970:	ldr	x19, [sp, #16]
  409974:	add	x3, x3, #0x780
  409978:	ldp	x29, x30, [sp], #32
  40997c:	mov	w1, #0x1                   	// #1
  409980:	b	402a90 <__fprintf_chk@plt>
  409984:	nop
  409988:	stp	x29, x30, [sp, #-32]!
  40998c:	mov	x29, sp
  409990:	stp	x19, x20, [sp, #16]
  409994:	mov	w20, w0
  409998:	cbz	w0, 409c28 <wcrtomb@plt+0x6ee8>
  40999c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  4099a0:	ldr	x19, [x0, #1264]
  4099a4:	mov	w2, #0x5                   	// #5
  4099a8:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  4099ac:	mov	x0, #0x0                   	// #0
  4099b0:	add	x1, x1, #0x790
  4099b4:	bl	402c20 <dcgettext@plt>
  4099b8:	adrp	x3, 438000 <_obstack_memory_used@@Base+0x253b0>
  4099bc:	mov	x2, x0
  4099c0:	mov	w1, #0x1                   	// #1
  4099c4:	mov	x0, x19
  4099c8:	ldr	x3, [x3, #1936]
  4099cc:	bl	402a90 <__fprintf_chk@plt>
  4099d0:	mov	w2, #0x5                   	// #5
  4099d4:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  4099d8:	mov	x0, #0x0                   	// #0
  4099dc:	add	x1, x1, #0x7e0
  4099e0:	bl	402c20 <dcgettext@plt>
  4099e4:	mov	x2, x0
  4099e8:	mov	w1, #0x1                   	// #1
  4099ec:	mov	x0, x19
  4099f0:	bl	402a90 <__fprintf_chk@plt>
  4099f4:	mov	w2, #0x5                   	// #5
  4099f8:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  4099fc:	mov	x0, #0x0                   	// #0
  409a00:	add	x1, x1, #0x838
  409a04:	bl	402c20 <dcgettext@plt>
  409a08:	mov	x2, x0
  409a0c:	mov	w1, #0x1                   	// #1
  409a10:	mov	x0, x19
  409a14:	bl	402a90 <__fprintf_chk@plt>
  409a18:	mov	w2, #0x5                   	// #5
  409a1c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  409a20:	mov	x0, #0x0                   	// #0
  409a24:	add	x1, x1, #0x878
  409a28:	bl	402c20 <dcgettext@plt>
  409a2c:	mov	x2, x0
  409a30:	mov	w1, #0x1                   	// #1
  409a34:	mov	x0, x19
  409a38:	bl	402a90 <__fprintf_chk@plt>
  409a3c:	mov	w2, #0x5                   	// #5
  409a40:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  409a44:	mov	x0, #0x0                   	// #0
  409a48:	add	x1, x1, #0x8e0
  409a4c:	bl	402c20 <dcgettext@plt>
  409a50:	mov	x2, x0
  409a54:	mov	w1, #0x1                   	// #1
  409a58:	mov	x0, x19
  409a5c:	bl	402a90 <__fprintf_chk@plt>
  409a60:	mov	w2, #0x5                   	// #5
  409a64:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  409a68:	mov	x0, #0x0                   	// #0
  409a6c:	add	x1, x1, #0x958
  409a70:	bl	402c20 <dcgettext@plt>
  409a74:	mov	x2, x0
  409a78:	mov	w1, #0x1                   	// #1
  409a7c:	mov	x0, x19
  409a80:	bl	402a90 <__fprintf_chk@plt>
  409a84:	mov	w2, #0x5                   	// #5
  409a88:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  409a8c:	mov	x0, #0x0                   	// #0
  409a90:	add	x1, x1, #0x9a8
  409a94:	bl	402c20 <dcgettext@plt>
  409a98:	mov	x2, x0
  409a9c:	mov	w1, #0x1                   	// #1
  409aa0:	mov	x0, x19
  409aa4:	bl	402a90 <__fprintf_chk@plt>
  409aa8:	mov	w2, #0x5                   	// #5
  409aac:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  409ab0:	mov	x0, #0x0                   	// #0
  409ab4:	add	x1, x1, #0xa18
  409ab8:	bl	402c20 <dcgettext@plt>
  409abc:	mov	x2, x0
  409ac0:	mov	w1, #0x1                   	// #1
  409ac4:	mov	x0, x19
  409ac8:	bl	402a90 <__fprintf_chk@plt>
  409acc:	mov	w2, #0x5                   	// #5
  409ad0:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  409ad4:	mov	x0, #0x0                   	// #0
  409ad8:	add	x1, x1, #0xa80
  409adc:	bl	402c20 <dcgettext@plt>
  409ae0:	mov	x2, x0
  409ae4:	mov	w1, #0x1                   	// #1
  409ae8:	mov	x0, x19
  409aec:	bl	402a90 <__fprintf_chk@plt>
  409af0:	mov	w2, #0x5                   	// #5
  409af4:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  409af8:	mov	x0, #0x0                   	// #0
  409afc:	add	x1, x1, #0xab8
  409b00:	bl	402c20 <dcgettext@plt>
  409b04:	mov	x2, x0
  409b08:	mov	w1, #0x1                   	// #1
  409b0c:	mov	x0, x19
  409b10:	bl	402a90 <__fprintf_chk@plt>
  409b14:	mov	w2, #0x5                   	// #5
  409b18:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  409b1c:	mov	x0, #0x0                   	// #0
  409b20:	add	x1, x1, #0xb48
  409b24:	bl	402c20 <dcgettext@plt>
  409b28:	mov	x2, x0
  409b2c:	mov	w1, #0x1                   	// #1
  409b30:	mov	x0, x19
  409b34:	bl	402a90 <__fprintf_chk@plt>
  409b38:	mov	w2, #0x5                   	// #5
  409b3c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  409b40:	mov	x0, #0x0                   	// #0
  409b44:	add	x1, x1, #0xbc8
  409b48:	bl	402c20 <dcgettext@plt>
  409b4c:	mov	x2, x0
  409b50:	mov	w1, #0x1                   	// #1
  409b54:	mov	x0, x19
  409b58:	bl	402a90 <__fprintf_chk@plt>
  409b5c:	mov	w2, #0x5                   	// #5
  409b60:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  409b64:	mov	x0, #0x0                   	// #0
  409b68:	add	x1, x1, #0xc20
  409b6c:	bl	402c20 <dcgettext@plt>
  409b70:	mov	x2, x0
  409b74:	mov	w1, #0x1                   	// #1
  409b78:	mov	x0, x19
  409b7c:	bl	402a90 <__fprintf_chk@plt>
  409b80:	mov	w2, #0x5                   	// #5
  409b84:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  409b88:	mov	x0, #0x0                   	// #0
  409b8c:	add	x1, x1, #0xcb0
  409b90:	bl	402c20 <dcgettext@plt>
  409b94:	mov	x2, x0
  409b98:	mov	w1, #0x1                   	// #1
  409b9c:	mov	x0, x19
  409ba0:	bl	402a90 <__fprintf_chk@plt>
  409ba4:	mov	w2, #0x5                   	// #5
  409ba8:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  409bac:	mov	x0, #0x0                   	// #0
  409bb0:	add	x1, x1, #0xcf8
  409bb4:	bl	402c20 <dcgettext@plt>
  409bb8:	mov	x2, x0
  409bbc:	mov	w1, #0x1                   	// #1
  409bc0:	mov	x0, x19
  409bc4:	bl	402a90 <__fprintf_chk@plt>
  409bc8:	mov	w2, #0x5                   	// #5
  409bcc:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  409bd0:	mov	x0, #0x0                   	// #0
  409bd4:	add	x1, x1, #0xd28
  409bd8:	bl	402c20 <dcgettext@plt>
  409bdc:	mov	x2, x0
  409be0:	mov	w1, #0x1                   	// #1
  409be4:	mov	x0, x19
  409be8:	bl	402a90 <__fprintf_chk@plt>
  409bec:	mov	w2, #0x5                   	// #5
  409bf0:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  409bf4:	mov	x0, #0x0                   	// #0
  409bf8:	add	x1, x1, #0xd60
  409bfc:	bl	402c20 <dcgettext@plt>
  409c00:	mov	x2, x0
  409c04:	mov	w1, #0x1                   	// #1
  409c08:	mov	x0, x19
  409c0c:	bl	402a90 <__fprintf_chk@plt>
  409c10:	mov	w0, w20
  409c14:	bl	4098e0 <wcrtomb@plt+0x6ba0>
  409c18:	mov	x0, #0x0                   	// #0
  409c1c:	bl	40a408 <wcrtomb@plt+0x76c8>
  409c20:	mov	w0, w20
  409c24:	bl	4026c0 <exit@plt>
  409c28:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  409c2c:	ldr	x19, [x0, #1288]
  409c30:	b	4099a4 <wcrtomb@plt+0x6c64>
  409c34:	nop
  409c38:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  409c3c:	str	x0, [x1, #1856]
  409c40:	ret
  409c44:	nop
  409c48:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  409c4c:	str	xzr, [x0, #1856]
  409c50:	ret
  409c54:	nop
  409c58:	stp	x29, x30, [sp, #-48]!
  409c5c:	mov	x29, sp
  409c60:	stp	x21, x22, [sp, #32]
  409c64:	adrp	x22, 438000 <_obstack_memory_used@@Base+0x253b0>
  409c68:	mov	x21, x1
  409c6c:	stp	x19, x20, [sp, #16]
  409c70:	mov	x20, x0
  409c74:	ldr	x19, [x22, #1904]
  409c78:	cbnz	x19, 409c88 <wcrtomb@plt+0x6f48>
  409c7c:	b	409cc4 <wcrtomb@plt+0x6f84>
  409c80:	ldr	x19, [x19, #16]
  409c84:	cbz	x19, 409cc4 <wcrtomb@plt+0x6f84>
  409c88:	ldr	x2, [x19]
  409c8c:	cmp	x2, x20
  409c90:	b.ne	409c80 <wcrtomb@plt+0x6f40>  // b.any
  409c94:	ldr	x0, [x19, #8]
  409c98:	bl	402ae0 <free@plt>
  409c9c:	mov	x0, x21
  409ca0:	bl	412800 <wcrtomb@plt+0xfac0>
  409ca4:	ldrb	w1, [x19, #24]
  409ca8:	ldp	x21, x22, [sp, #32]
  409cac:	and	w1, w1, #0xfffffffe
  409cb0:	stp	x20, x0, [x19]
  409cb4:	strb	w1, [x19, #24]
  409cb8:	ldp	x19, x20, [sp, #16]
  409cbc:	ldp	x29, x30, [sp], #48
  409cc0:	ret
  409cc4:	mov	x1, #0x20                  	// #32
  409cc8:	mov	x0, #0x1                   	// #1
  409ccc:	bl	412790 <wcrtomb@plt+0xfa50>
  409cd0:	mov	x19, x0
  409cd4:	ldr	x0, [x22, #1904]
  409cd8:	str	x19, [x22, #1904]
  409cdc:	str	x0, [x19, #16]
  409ce0:	b	409c9c <wcrtomb@plt+0x6f5c>
  409ce4:	nop
  409ce8:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  409cec:	ldr	x1, [x1, #1904]
  409cf0:	cbnz	x1, 409d00 <wcrtomb@plt+0x6fc0>
  409cf4:	b	409d14 <wcrtomb@plt+0x6fd4>
  409cf8:	ldr	x1, [x1, #16]
  409cfc:	cbz	x1, 409d14 <wcrtomb@plt+0x6fd4>
  409d00:	ldr	x2, [x1]
  409d04:	cmp	x2, x0
  409d08:	b.ne	409cf8 <wcrtomb@plt+0x6fb8>  // b.any
  409d0c:	ldr	x0, [x1, #8]
  409d10:	ret
  409d14:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  409d18:	ldr	x1, [x1, #1296]
  409d1c:	cmp	x1, x0
  409d20:	b.eq	409d58 <wcrtomb@plt+0x7018>  // b.none
  409d24:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  409d28:	ldr	x1, [x1, #1288]
  409d2c:	cmp	x0, x1
  409d30:	b.eq	409d64 <wcrtomb@plt+0x7024>  // b.none
  409d34:	adrp	x3, 438000 <_obstack_memory_used@@Base+0x253b0>
  409d38:	adrp	x2, 421000 <_obstack_memory_used@@Base+0xe3b0>
  409d3c:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  409d40:	add	x2, x2, #0x2a8
  409d44:	ldr	x3, [x3, #1264]
  409d48:	add	x1, x1, #0x298
  409d4c:	cmp	x0, x3
  409d50:	csel	x0, x1, x2, ne  // ne = any
  409d54:	ret
  409d58:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xe3b0>
  409d5c:	add	x0, x0, #0x290
  409d60:	ret
  409d64:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xe3b0>
  409d68:	add	x0, x0, #0x288
  409d6c:	ret
  409d70:	stp	x29, x30, [sp, #-48]!
  409d74:	mov	x29, sp
  409d78:	stp	x19, x20, [sp, #16]
  409d7c:	mov	x20, x0
  409d80:	ldr	x0, [x0]
  409d84:	cmp	x0, x2
  409d88:	b.cs	409dc0 <wcrtomb@plt+0x7080>  // b.hs, b.nlast
  409d8c:	stp	x21, x22, [sp, #32]
  409d90:	cmp	x2, x0, lsl #1
  409d94:	lsl	x21, x0, #1
  409d98:	mov	x19, x2
  409d9c:	mov	x22, x1
  409da0:	ldr	x0, [x1]
  409da4:	b.cc	409dcc <wcrtomb@plt+0x708c>  // b.lo, b.ul, b.last
  409da8:	tbnz	x19, #63, 409de0 <wcrtomb@plt+0x70a0>
  409dac:	mov	x1, x19
  409db0:	bl	412658 <wcrtomb@plt+0xf918>
  409db4:	str	x19, [x20]
  409db8:	str	x0, [x22]
  409dbc:	ldp	x21, x22, [sp, #32]
  409dc0:	ldp	x19, x20, [sp, #16]
  409dc4:	ldp	x29, x30, [sp], #48
  409dc8:	ret
  409dcc:	mov	x1, x21
  409dd0:	bl	402930 <realloc@plt>
  409dd4:	cbz	x0, 409de4 <wcrtomb@plt+0x70a4>
  409dd8:	mov	x19, x21
  409ddc:	b	409db4 <wcrtomb@plt+0x7074>
  409de0:	bl	412830 <wcrtomb@plt+0xfaf0>
  409de4:	ldr	x0, [x22]
  409de8:	b	409da8 <wcrtomb@plt+0x7068>
  409dec:	nop
  409df0:	stp	x29, x30, [sp, #-352]!
  409df4:	adrp	x8, 438000 <_obstack_memory_used@@Base+0x253b0>
  409df8:	mov	x29, sp
  409dfc:	stp	x21, x22, [sp, #32]
  409e00:	adrp	x22, 438000 <_obstack_memory_used@@Base+0x253b0>
  409e04:	stp	x19, x20, [sp, #16]
  409e08:	mov	x19, x0
  409e0c:	ldr	x0, [x22, #1264]
  409e10:	stp	x3, x4, [sp, #312]
  409e14:	ldr	x3, [x8, #1936]
  409e18:	adrp	x8, 421000 <_obstack_memory_used@@Base+0xe3b0>
  409e1c:	stp	x23, x24, [sp, #48]
  409e20:	str	q0, [sp, #160]
  409e24:	str	q1, [sp, #176]
  409e28:	str	q2, [sp, #192]
  409e2c:	str	q3, [sp, #208]
  409e30:	str	q4, [sp, #224]
  409e34:	str	q5, [sp, #240]
  409e38:	str	q6, [sp, #256]
  409e3c:	str	q7, [sp, #272]
  409e40:	stp	x1, x2, [sp, #296]
  409e44:	add	x2, x8, #0x2b0
  409e48:	mov	w1, #0x1                   	// #1
  409e4c:	stp	x5, x6, [sp, #328]
  409e50:	str	x7, [sp, #344]
  409e54:	bl	402a90 <__fprintf_chk@plt>
  409e58:	add	x1, sp, #0x120
  409e5c:	add	x2, sp, #0x160
  409e60:	add	x3, sp, #0x160
  409e64:	mov	w5, #0xffffffc8            	// #-56
  409e68:	mov	w4, #0xffffff80            	// #-128
  409e6c:	stp	x2, x3, [sp, #96]
  409e70:	mov	x2, x19
  409e74:	str	x1, [sp, #112]
  409e78:	add	x3, sp, #0x40
  409e7c:	stp	w5, w4, [sp, #120]
  409e80:	mov	w1, #0x1                   	// #1
  409e84:	ldp	x6, x7, [sp, #96]
  409e88:	stp	x6, x7, [sp, #64]
  409e8c:	ldp	x4, x5, [sp, #112]
  409e90:	stp	x4, x5, [sp, #80]
  409e94:	ldr	x0, [x22, #1264]
  409e98:	stp	x6, x7, [sp, #128]
  409e9c:	stp	x4, x5, [sp, #144]
  409ea0:	bl	402900 <__vfprintf_chk@plt>
  409ea4:	ldr	x0, [x22, #1264]
  409ea8:	ldp	x1, x2, [x0, #40]
  409eac:	cmp	x1, x2
  409eb0:	b.cs	409f6c <wcrtomb@plt+0x722c>  // b.hs, b.nlast
  409eb4:	add	x2, x1, #0x1
  409eb8:	str	x2, [x0, #40]
  409ebc:	mov	w0, #0xa                   	// #10
  409ec0:	strb	w0, [x1]
  409ec4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  409ec8:	add	x20, x0, #0x770
  409ecc:	adrp	x23, 421000 <_obstack_memory_used@@Base+0xe3b0>
  409ed0:	add	x23, x23, #0x2b8
  409ed4:	ldr	x0, [x0, #1904]
  409ed8:	cbz	x0, 409ef8 <wcrtomb@plt+0x71b8>
  409edc:	nop
  409ee0:	ldrb	w1, [x0, #24]
  409ee4:	tbnz	w1, #0, 409f00 <wcrtomb@plt+0x71c0>
  409ee8:	ldr	x19, [x20]
  409eec:	ldr	x0, [x19, #16]
  409ef0:	str	x0, [x20]
  409ef4:	cbnz	x0, 409ee0 <wcrtomb@plt+0x71a0>
  409ef8:	mov	w0, #0x4                   	// #4
  409efc:	bl	4026c0 <exit@plt>
  409f00:	ldr	x0, [x0]
  409f04:	bl	4027a0 <fclose@plt>
  409f08:	bl	402cb0 <__errno_location@plt>
  409f0c:	mov	x21, x0
  409f10:	ldr	x19, [x20]
  409f14:	ldr	x0, [x19, #8]
  409f18:	str	wzr, [x21]
  409f1c:	bl	402cd0 <unlink@plt>
  409f20:	ldr	w0, [x21]
  409f24:	cbz	w0, 409eec <wcrtomb@plt+0x71ac>
  409f28:	mov	x1, x23
  409f2c:	mov	w2, #0x5                   	// #5
  409f30:	ldr	x24, [x22, #1264]
  409f34:	mov	x0, #0x0                   	// #0
  409f38:	bl	402c20 <dcgettext@plt>
  409f3c:	mov	x2, x0
  409f40:	ldr	w0, [x21]
  409f44:	mov	x21, x2
  409f48:	ldr	x19, [x19, #8]
  409f4c:	bl	4029a0 <strerror@plt>
  409f50:	mov	x4, x0
  409f54:	mov	x3, x19
  409f58:	mov	x2, x21
  409f5c:	mov	x0, x24
  409f60:	mov	w1, #0x1                   	// #1
  409f64:	bl	402a90 <__fprintf_chk@plt>
  409f68:	b	409ee8 <wcrtomb@plt+0x71a8>
  409f6c:	mov	w1, #0xa                   	// #10
  409f70:	bl	402a20 <__overflow@plt>
  409f74:	b	409ec4 <wcrtomb@plt+0x7184>
  409f78:	stp	x29, x30, [sp, #-48]!
  409f7c:	mov	x29, sp
  409f80:	stp	x19, x20, [sp, #16]
  409f84:	mov	x20, x0
  409f88:	str	x21, [sp, #32]
  409f8c:	mov	w21, w2
  409f90:	bl	4027d0 <fopen@plt>
  409f94:	mov	x19, x0
  409f98:	cbz	x0, 409fb8 <wcrtomb@plt+0x7278>
  409f9c:	mov	x1, x20
  409fa0:	bl	409c58 <wcrtomb@plt+0x6f18>
  409fa4:	mov	x0, x19
  409fa8:	ldp	x19, x20, [sp, #16]
  409fac:	ldr	x21, [sp, #32]
  409fb0:	ldp	x29, x30, [sp], #48
  409fb4:	ret
  409fb8:	cbz	w21, 409fa4 <wcrtomb@plt+0x7264>
  409fbc:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  409fc0:	add	x1, x1, #0x2d0
  409fc4:	mov	w2, #0x5                   	// #5
  409fc8:	bl	402c20 <dcgettext@plt>
  409fcc:	mov	x19, x0
  409fd0:	bl	402cb0 <__errno_location@plt>
  409fd4:	ldr	w0, [x0]
  409fd8:	bl	4029a0 <strerror@plt>
  409fdc:	mov	x2, x0
  409fe0:	mov	x1, x20
  409fe4:	mov	x0, x19
  409fe8:	bl	409df0 <wcrtomb@plt+0x70b0>
  409fec:	nop
  409ff0:	stp	x29, x30, [sp, #-48]!
  409ff4:	mov	x29, sp
  409ff8:	stp	x19, x20, [sp, #16]
  409ffc:	mov	w20, w3
  40a000:	str	x21, [sp, #32]
  40a004:	mov	x21, x1
  40a008:	mov	x1, x2
  40a00c:	bl	4028e0 <fdopen@plt>
  40a010:	mov	x19, x0
  40a014:	cbz	x0, 40a034 <wcrtomb@plt+0x72f4>
  40a018:	mov	x1, x21
  40a01c:	bl	409c58 <wcrtomb@plt+0x6f18>
  40a020:	mov	x0, x19
  40a024:	ldp	x19, x20, [sp, #16]
  40a028:	ldr	x21, [sp, #32]
  40a02c:	ldp	x29, x30, [sp], #48
  40a030:	ret
  40a034:	cbz	w20, 40a020 <wcrtomb@plt+0x72e0>
  40a038:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  40a03c:	add	x1, x1, #0x2f0
  40a040:	mov	w2, #0x5                   	// #5
  40a044:	bl	402c20 <dcgettext@plt>
  40a048:	mov	x19, x0
  40a04c:	bl	402cb0 <__errno_location@plt>
  40a050:	ldr	w0, [x0]
  40a054:	bl	4029a0 <strerror@plt>
  40a058:	mov	x2, x0
  40a05c:	mov	x1, x21
  40a060:	mov	x0, x19
  40a064:	bl	409df0 <wcrtomb@plt+0x70b0>
  40a068:	stp	x29, x30, [sp, #-64]!
  40a06c:	mov	x29, sp
  40a070:	stp	x19, x20, [sp, #16]
  40a074:	mov	x20, x1
  40a078:	stp	x21, x22, [sp, #32]
  40a07c:	mov	x21, x2
  40a080:	mov	x22, x0
  40a084:	mov	x0, x1
  40a088:	str	x23, [sp, #48]
  40a08c:	mov	x23, x3
  40a090:	bl	402690 <strlen@plt>
  40a094:	mov	x19, x0
  40a098:	mov	x0, x21
  40a09c:	bl	402690 <strlen@plt>
  40a0a0:	add	x0, x19, x0
  40a0a4:	add	x0, x0, #0x8
  40a0a8:	bl	4125f8 <wcrtomb@plt+0xf8b8>
  40a0ac:	mov	x5, x21
  40a0b0:	mov	x4, x20
  40a0b4:	adrp	x3, 421000 <_obstack_memory_used@@Base+0xe3b0>
  40a0b8:	add	x3, x3, #0x310
  40a0bc:	mov	x2, #0xffffffffffffffff    	// #-1
  40a0c0:	mov	w1, #0x1                   	// #1
  40a0c4:	mov	x19, x0
  40a0c8:	bl	4026a0 <__sprintf_chk@plt>
  40a0cc:	mov	w0, #0x3f                  	// #63
  40a0d0:	bl	402c90 <umask@plt>
  40a0d4:	mov	w1, #0x0                   	// #0
  40a0d8:	mov	w21, w0
  40a0dc:	mov	x0, x19
  40a0e0:	bl	4029f0 <mkostemp@plt>
  40a0e4:	mov	w20, w0
  40a0e8:	mov	w0, w21
  40a0ec:	bl	402c90 <umask@plt>
  40a0f0:	cmn	w20, #0x1
  40a0f4:	b.eq	40a12c <wcrtomb@plt+0x73ec>  // b.none
  40a0f8:	str	x19, [x22]
  40a0fc:	mov	x1, x23
  40a100:	mov	w0, w20
  40a104:	bl	4028e0 <fdopen@plt>
  40a108:	mov	x1, x19
  40a10c:	mov	x19, x0
  40a110:	bl	409c58 <wcrtomb@plt+0x6f18>
  40a114:	mov	x0, x19
  40a118:	ldp	x19, x20, [sp, #16]
  40a11c:	ldp	x21, x22, [sp, #32]
  40a120:	ldr	x23, [sp, #48]
  40a124:	ldp	x29, x30, [sp], #64
  40a128:	ret
  40a12c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xd3b0>
  40a130:	add	x1, x1, #0x3d8
  40a134:	mov	w2, #0x5                   	// #5
  40a138:	mov	x0, #0x0                   	// #0
  40a13c:	bl	402c20 <dcgettext@plt>
  40a140:	mov	x20, x0
  40a144:	bl	402cb0 <__errno_location@plt>
  40a148:	ldr	w0, [x0]
  40a14c:	bl	4029a0 <strerror@plt>
  40a150:	mov	x2, x0
  40a154:	mov	x1, x19
  40a158:	mov	x0, x20
  40a15c:	bl	409df0 <wcrtomb@plt+0x70b0>
  40a160:	stp	x29, x30, [sp, #-48]!
  40a164:	mov	x29, sp
  40a168:	stp	x19, x20, [sp, #16]
  40a16c:	mov	x20, x1
  40a170:	mov	x19, x3
  40a174:	stp	x21, x22, [sp, #32]
  40a178:	mov	x22, x0
  40a17c:	mov	x21, x2
  40a180:	mov	x0, x3
  40a184:	bl	402b90 <clearerr_unlocked@plt>
  40a188:	cbz	x20, 40a1a8 <wcrtomb@plt+0x7468>
  40a18c:	mov	x1, x20
  40a190:	mov	x0, x22
  40a194:	mov	x3, x19
  40a198:	mov	x2, x21
  40a19c:	bl	402680 <fwrite_unlocked@plt>
  40a1a0:	cmp	x21, x0
  40a1a4:	b.ne	40a1b8 <wcrtomb@plt+0x7478>  // b.any
  40a1a8:	ldp	x19, x20, [sp, #16]
  40a1ac:	ldp	x21, x22, [sp, #32]
  40a1b0:	ldp	x29, x30, [sp], #48
  40a1b4:	ret
  40a1b8:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  40a1bc:	add	x1, x1, #0x348
  40a1c0:	mov	x3, x21
  40a1c4:	mov	w4, #0x5                   	// #5
  40a1c8:	adrp	x2, 421000 <_obstack_memory_used@@Base+0xe3b0>
  40a1cc:	mov	x0, #0x0                   	// #0
  40a1d0:	add	x2, x2, #0x320
  40a1d4:	bl	402b70 <dcngettext@plt>
  40a1d8:	mov	x1, x0
  40a1dc:	mov	x0, x19
  40a1e0:	mov	x19, x1
  40a1e4:	bl	409ce8 <wcrtomb@plt+0x6fa8>
  40a1e8:	mov	x20, x0
  40a1ec:	bl	402cb0 <__errno_location@plt>
  40a1f0:	ldr	w0, [x0]
  40a1f4:	bl	4029a0 <strerror@plt>
  40a1f8:	mov	x3, x0
  40a1fc:	mov	x2, x20
  40a200:	mov	x1, x21
  40a204:	mov	x0, x19
  40a208:	bl	409df0 <wcrtomb@plt+0x70b0>
  40a20c:	nop
  40a210:	stp	x29, x30, [sp, #-48]!
  40a214:	mov	x29, sp
  40a218:	stp	x19, x20, [sp, #16]
  40a21c:	mov	x20, x3
  40a220:	mov	x19, x2
  40a224:	stp	x21, x22, [sp, #32]
  40a228:	mov	x22, x0
  40a22c:	mov	x21, x1
  40a230:	mov	x0, x3
  40a234:	bl	402b90 <clearerr_unlocked@plt>
  40a238:	cbz	x21, 40a260 <wcrtomb@plt+0x7520>
  40a23c:	mov	x2, x19
  40a240:	mov	x1, x21
  40a244:	mov	x0, x22
  40a248:	mov	x3, x20
  40a24c:	bl	402a50 <fread_unlocked@plt>
  40a250:	mov	x19, x0
  40a254:	cbnz	x0, 40a260 <wcrtomb@plt+0x7520>
  40a258:	ldr	w1, [x20]
  40a25c:	tbnz	w1, #5, 40a274 <wcrtomb@plt+0x7534>
  40a260:	mov	x0, x19
  40a264:	ldp	x19, x20, [sp, #16]
  40a268:	ldp	x21, x22, [sp, #32]
  40a26c:	ldp	x29, x30, [sp], #48
  40a270:	ret
  40a274:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  40a278:	add	x1, x1, #0x370
  40a27c:	mov	w2, #0x5                   	// #5
  40a280:	bl	402c20 <dcgettext@plt>
  40a284:	mov	x19, x0
  40a288:	mov	x0, x20
  40a28c:	bl	409ce8 <wcrtomb@plt+0x6fa8>
  40a290:	mov	x20, x0
  40a294:	bl	402cb0 <__errno_location@plt>
  40a298:	ldr	w0, [x0]
  40a29c:	bl	4029a0 <strerror@plt>
  40a2a0:	mov	x2, x0
  40a2a4:	mov	x1, x20
  40a2a8:	mov	x0, x19
  40a2ac:	bl	409df0 <wcrtomb@plt+0x70b0>
  40a2b0:	stp	x29, x30, [sp, #-32]!
  40a2b4:	mov	x29, sp
  40a2b8:	ldr	w4, [x3]
  40a2bc:	stp	x19, x20, [sp, #16]
  40a2c0:	mov	x19, x3
  40a2c4:	tbz	w4, #5, 40a308 <wcrtomb@plt+0x75c8>
  40a2c8:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  40a2cc:	add	x1, x1, #0x370
  40a2d0:	mov	w2, #0x5                   	// #5
  40a2d4:	mov	x0, #0x0                   	// #0
  40a2d8:	bl	402c20 <dcgettext@plt>
  40a2dc:	mov	x20, x0
  40a2e0:	mov	x0, x19
  40a2e4:	bl	409ce8 <wcrtomb@plt+0x6fa8>
  40a2e8:	mov	x19, x0
  40a2ec:	bl	402cb0 <__errno_location@plt>
  40a2f0:	ldr	w0, [x0]
  40a2f4:	bl	4029a0 <strerror@plt>
  40a2f8:	mov	x2, x0
  40a2fc:	mov	x1, x19
  40a300:	mov	x0, x20
  40a304:	bl	409df0 <wcrtomb@plt+0x70b0>
  40a308:	and	w2, w2, #0xff
  40a30c:	bl	402820 <getdelim@plt>
  40a310:	ldr	w1, [x19]
  40a314:	tbnz	w1, #5, 40a2c8 <wcrtomb@plt+0x7588>
  40a318:	ldp	x19, x20, [sp, #16]
  40a31c:	ldp	x29, x30, [sp], #32
  40a320:	ret
  40a324:	nop
  40a328:	stp	x29, x30, [sp, #-32]!
  40a32c:	mov	x29, sp
  40a330:	str	x19, [sp, #16]
  40a334:	mov	x19, x0
  40a338:	bl	402760 <__fwriting@plt>
  40a33c:	cbnz	w0, 40a34c <wcrtomb@plt+0x760c>
  40a340:	ldr	x19, [sp, #16]
  40a344:	ldp	x29, x30, [sp], #32
  40a348:	ret
  40a34c:	mov	x0, x19
  40a350:	bl	402b90 <clearerr_unlocked@plt>
  40a354:	mov	x0, x19
  40a358:	bl	402b60 <fflush_unlocked@plt>
  40a35c:	cmn	w0, #0x1
  40a360:	b.ne	40a340 <wcrtomb@plt+0x7600>  // b.any
  40a364:	bl	402cb0 <__errno_location@plt>
  40a368:	ldr	w4, [x0]
  40a36c:	cmp	w4, #0x9
  40a370:	b.eq	40a340 <wcrtomb@plt+0x7600>  // b.none
  40a374:	mov	x0, x19
  40a378:	bl	409ce8 <wcrtomb@plt+0x6fa8>
  40a37c:	mov	x19, x0
  40a380:	mov	w0, w4
  40a384:	bl	4029a0 <strerror@plt>
  40a388:	mov	x2, x0
  40a38c:	mov	x1, x19
  40a390:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xe3b0>
  40a394:	add	x0, x0, #0x388
  40a398:	bl	409df0 <wcrtomb@plt+0x70b0>
  40a39c:	nop
  40a3a0:	stp	x29, x30, [sp, #-32]!
  40a3a4:	mov	x29, sp
  40a3a8:	str	x19, [sp, #16]
  40a3ac:	mov	x19, x0
  40a3b0:	bl	40a328 <wcrtomb@plt+0x75e8>
  40a3b4:	mov	x0, x19
  40a3b8:	bl	402b90 <clearerr_unlocked@plt>
  40a3bc:	mov	x0, x19
  40a3c0:	bl	4027a0 <fclose@plt>
  40a3c4:	cmn	w0, #0x1
  40a3c8:	b.eq	40a3d8 <wcrtomb@plt+0x7698>  // b.none
  40a3cc:	ldr	x19, [sp, #16]
  40a3d0:	ldp	x29, x30, [sp], #32
  40a3d4:	ret
  40a3d8:	mov	x0, x19
  40a3dc:	bl	409ce8 <wcrtomb@plt+0x6fa8>
  40a3e0:	mov	x19, x0
  40a3e4:	bl	402cb0 <__errno_location@plt>
  40a3e8:	ldr	w0, [x0]
  40a3ec:	bl	4029a0 <strerror@plt>
  40a3f0:	mov	x2, x0
  40a3f4:	mov	x1, x19
  40a3f8:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xe3b0>
  40a3fc:	add	x0, x0, #0x3a0
  40a400:	bl	409df0 <wcrtomb@plt+0x70b0>
  40a404:	nop
  40a408:	stp	x29, x30, [sp, #-80]!
  40a40c:	mov	x29, sp
  40a410:	stp	x21, x22, [sp, #32]
  40a414:	adrp	x22, 438000 <_obstack_memory_used@@Base+0x253b0>
  40a418:	stp	x19, x20, [sp, #16]
  40a41c:	mov	x20, x0
  40a420:	ldr	x19, [x22, #1904]
  40a424:	str	x19, [sp, #64]
  40a428:	cbz	x19, 40a474 <wcrtomb@plt+0x7734>
  40a42c:	add	x21, sp, #0x30
  40a430:	b	40a440 <wcrtomb@plt+0x7700>
  40a434:	mov	x21, x19
  40a438:	ldr	x19, [x21, #16]
  40a43c:	cbz	x19, 40a470 <wcrtomb@plt+0x7730>
  40a440:	ldr	x0, [x19]
  40a444:	cbz	x20, 40a450 <wcrtomb@plt+0x7710>
  40a448:	cmp	x20, x0
  40a44c:	b.ne	40a434 <wcrtomb@plt+0x76f4>  // b.any
  40a450:	bl	40a3a0 <wcrtomb@plt+0x7660>
  40a454:	ldp	x0, x1, [x19, #8]
  40a458:	str	x1, [x21, #16]
  40a45c:	bl	402ae0 <free@plt>
  40a460:	mov	x0, x19
  40a464:	bl	402ae0 <free@plt>
  40a468:	ldr	x19, [x21, #16]
  40a46c:	cbnz	x19, 40a440 <wcrtomb@plt+0x7700>
  40a470:	ldr	x19, [sp, #64]
  40a474:	str	x19, [x22, #1904]
  40a478:	cbz	x20, 40a48c <wcrtomb@plt+0x774c>
  40a47c:	ldp	x19, x20, [sp, #16]
  40a480:	ldp	x21, x22, [sp, #32]
  40a484:	ldp	x29, x30, [sp], #80
  40a488:	ret
  40a48c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  40a490:	ldp	x19, x20, [sp, #16]
  40a494:	ldr	x0, [x0, #1288]
  40a498:	ldp	x21, x22, [sp, #32]
  40a49c:	ldp	x29, x30, [sp], #80
  40a4a0:	b	40a3a0 <wcrtomb@plt+0x7660>
  40a4a4:	nop
  40a4a8:	stp	x29, x30, [sp, #-208]!
  40a4ac:	mov	x29, sp
  40a4b0:	stp	x19, x20, [sp, #16]
  40a4b4:	adrp	x19, 438000 <_obstack_memory_used@@Base+0x253b0>
  40a4b8:	add	x19, x19, #0x770
  40a4bc:	stp	x23, x24, [sp, #48]
  40a4c0:	mov	x24, x0
  40a4c4:	ldr	w0, [x19, #8]
  40a4c8:	stp	x21, x22, [sp, #32]
  40a4cc:	str	x25, [sp, #64]
  40a4d0:	cbz	w0, 40a65c <wcrtomb@plt+0x791c>
  40a4d4:	add	x2, sp, #0x50
  40a4d8:	mov	x1, x24
  40a4dc:	mov	w0, #0x0                   	// #0
  40a4e0:	mov	w23, #0xa000                	// #40960
  40a4e4:	bl	402ba0 <__lxstat@plt>
  40a4e8:	cmp	w0, #0x0
  40a4ec:	cbnz	w0, 40a5f0 <wcrtomb@plt+0x78b0>
  40a4f0:	ldr	w0, [sp, #96]
  40a4f4:	and	w0, w0, w23
  40a4f8:	cmp	w0, #0xa, lsl #12
  40a4fc:	b.ne	40a5f4 <wcrtomb@plt+0x78b4>  // b.any
  40a500:	ldr	x22, [x19, #24]
  40a504:	cmp	x22, x24
  40a508:	b.ne	40a540 <wcrtomb@plt+0x7800>  // b.any
  40a50c:	b	40a610 <wcrtomb@plt+0x78d0>
  40a510:	ldr	x0, [x19, #16]
  40a514:	lsl	w1, w20, #1
  40a518:	str	w1, [x19, #8]
  40a51c:	sxtw	x1, w1
  40a520:	bl	412658 <wcrtomb@plt+0xf918>
  40a524:	mov	x2, x0
  40a528:	ldrsw	x1, [x19, #8]
  40a52c:	ldr	x0, [x19, #24]
  40a530:	str	x2, [x19, #16]
  40a534:	bl	412658 <wcrtomb@plt+0xf918>
  40a538:	mov	x22, x0
  40a53c:	str	x0, [x19, #24]
  40a540:	ldr	w20, [x19, #8]
  40a544:	mov	x1, x22
  40a548:	mov	x0, x24
  40a54c:	sxtw	x2, w20
  40a550:	bl	402700 <readlink@plt>
  40a554:	cmp	w20, w0
  40a558:	mov	w21, w0
  40a55c:	b.eq	40a510 <wcrtomb@plt+0x77d0>  // b.none
  40a560:	tbnz	w0, #31, 40a6b8 <wcrtomb@plt+0x7978>
  40a564:	strb	wzr, [x22, w0, sxtw]
  40a568:	ldrb	w0, [x22]
  40a56c:	cmp	w0, #0x2f
  40a570:	b.eq	40a5d4 <wcrtomb@plt+0x7894>  // b.none
  40a574:	mov	x0, x24
  40a578:	mov	w1, #0x2f                  	// #47
  40a57c:	bl	4029b0 <strrchr@plt>
  40a580:	cbz	x0, 40a5d4 <wcrtomb@plt+0x7894>
  40a584:	sub	x0, x0, x24
  40a588:	add	w25, w0, #0x1
  40a58c:	add	w0, w21, w25
  40a590:	cmp	w20, w0
  40a594:	ldr	x3, [x19, #16]
  40a598:	b.le	40a624 <wcrtomb@plt+0x78e4>
  40a59c:	sxtw	x25, w25
  40a5a0:	cmp	x24, x3
  40a5a4:	b.eq	40a5bc <wcrtomb@plt+0x787c>  // b.none
  40a5a8:	mov	x0, x3
  40a5ac:	mov	x1, x24
  40a5b0:	mov	x2, x25
  40a5b4:	bl	402650 <memcpy@plt>
  40a5b8:	mov	x3, x0
  40a5bc:	add	w21, w21, #0x1
  40a5c0:	mov	x1, x22
  40a5c4:	add	x0, x3, x25
  40a5c8:	mov	x22, x3
  40a5cc:	sxtw	x2, w21
  40a5d0:	bl	402650 <memcpy@plt>
  40a5d4:	mov	x24, x22
  40a5d8:	add	x2, sp, #0x50
  40a5dc:	mov	x1, x24
  40a5e0:	mov	w0, #0x0                   	// #0
  40a5e4:	bl	402ba0 <__lxstat@plt>
  40a5e8:	cmp	w0, #0x0
  40a5ec:	cbz	w0, 40a4f0 <wcrtomb@plt+0x77b0>
  40a5f0:	b.lt	40a684 <wcrtomb@plt+0x7944>  // b.tstop
  40a5f4:	mov	x0, x24
  40a5f8:	ldp	x19, x20, [sp, #16]
  40a5fc:	ldp	x21, x22, [sp, #32]
  40a600:	ldp	x23, x24, [sp, #48]
  40a604:	ldr	x25, [sp, #64]
  40a608:	ldp	x29, x30, [sp], #208
  40a60c:	ret
  40a610:	ldr	x0, [x19, #16]
  40a614:	mov	x1, x24
  40a618:	mov	x24, x0
  40a61c:	bl	402b80 <strcpy@plt>
  40a620:	b	40a540 <wcrtomb@plt+0x7800>
  40a624:	add	w1, w0, #0x1
  40a628:	mov	x0, x3
  40a62c:	str	w1, [x19, #8]
  40a630:	sxtw	x1, w1
  40a634:	bl	412658 <wcrtomb@plt+0xf918>
  40a638:	ldrsw	x1, [x19, #8]
  40a63c:	mov	x2, x0
  40a640:	ldr	x0, [x19, #24]
  40a644:	str	x2, [x19, #16]
  40a648:	bl	412658 <wcrtomb@plt+0xf918>
  40a64c:	mov	x22, x0
  40a650:	str	x0, [x19, #24]
  40a654:	ldr	x3, [x19, #16]
  40a658:	b	40a59c <wcrtomb@plt+0x785c>
  40a65c:	mov	x0, #0x1001                	// #4097
  40a660:	bl	4127c8 <wcrtomb@plt+0xfa88>
  40a664:	mov	x1, x0
  40a668:	mov	x0, #0x1001                	// #4097
  40a66c:	str	x1, [x19, #16]
  40a670:	bl	4127c8 <wcrtomb@plt+0xfa88>
  40a674:	str	x0, [x19, #24]
  40a678:	mov	w1, #0x1001                	// #4097
  40a67c:	str	w1, [x19, #8]
  40a680:	b	40a4d4 <wcrtomb@plt+0x7794>
  40a684:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  40a688:	add	x1, x1, #0x3d8
  40a68c:	mov	w2, #0x5                   	// #5
  40a690:	mov	x0, #0x0                   	// #0
  40a694:	bl	402c20 <dcgettext@plt>
  40a698:	mov	x19, x0
  40a69c:	bl	402cb0 <__errno_location@plt>
  40a6a0:	ldr	w0, [x0]
  40a6a4:	bl	4029a0 <strerror@plt>
  40a6a8:	mov	x2, x0
  40a6ac:	mov	x1, x24
  40a6b0:	mov	x0, x19
  40a6b4:	bl	409df0 <wcrtomb@plt+0x70b0>
  40a6b8:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  40a6bc:	add	x1, x1, #0x3b8
  40a6c0:	b	40a68c <wcrtomb@plt+0x794c>
  40a6c4:	nop
  40a6c8:	stp	x29, x30, [sp, #-48]!
  40a6cc:	mov	x29, sp
  40a6d0:	stp	x19, x20, [sp, #16]
  40a6d4:	mov	x19, x2
  40a6d8:	stp	x21, x22, [sp, #32]
  40a6dc:	mov	x21, x0
  40a6e0:	bl	402b40 <rename@plt>
  40a6e4:	cmn	w0, #0x1
  40a6e8:	b.ne	40a744 <wcrtomb@plt+0x7a04>  // b.any
  40a6ec:	bl	402cb0 <__errno_location@plt>
  40a6f0:	mov	x20, x0
  40a6f4:	cbz	x19, 40a714 <wcrtomb@plt+0x79d4>
  40a6f8:	ldr	w22, [x20]
  40a6fc:	mov	x0, x19
  40a700:	str	wzr, [x20]
  40a704:	bl	402cd0 <unlink@plt>
  40a708:	ldr	w0, [x20]
  40a70c:	cbnz	w0, 40a754 <wcrtomb@plt+0x7a14>
  40a710:	str	w22, [x20]
  40a714:	mov	w2, #0x5                   	// #5
  40a718:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  40a71c:	mov	x0, #0x0                   	// #0
  40a720:	add	x1, x1, #0x3f0
  40a724:	bl	402c20 <dcgettext@plt>
  40a728:	mov	x19, x0
  40a72c:	ldr	w0, [x20]
  40a730:	bl	4029a0 <strerror@plt>
  40a734:	mov	x2, x0
  40a738:	mov	x1, x21
  40a73c:	mov	x0, x19
  40a740:	bl	409df0 <wcrtomb@plt+0x70b0>
  40a744:	ldp	x19, x20, [sp, #16]
  40a748:	ldp	x21, x22, [sp, #32]
  40a74c:	ldp	x29, x30, [sp], #48
  40a750:	ret
  40a754:	mov	w2, #0x5                   	// #5
  40a758:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  40a75c:	mov	x0, #0x0                   	// #0
  40a760:	add	x1, x1, #0x2b8
  40a764:	bl	402c20 <dcgettext@plt>
  40a768:	mov	x1, x0
  40a76c:	ldr	w0, [x20]
  40a770:	mov	x20, x1
  40a774:	bl	4029a0 <strerror@plt>
  40a778:	mov	x2, x0
  40a77c:	mov	x1, x19
  40a780:	mov	x0, x20
  40a784:	bl	409df0 <wcrtomb@plt+0x70b0>
  40a788:	stp	x29, x30, [sp, #-32]!
  40a78c:	mov	x1, #0x18                  	// #24
  40a790:	mov	x0, #0x1                   	// #1
  40a794:	mov	x29, sp
  40a798:	str	x19, [sp, #16]
  40a79c:	bl	412790 <wcrtomb@plt+0xfa50>
  40a7a0:	mov	x19, x0
  40a7a4:	mov	x0, #0x32                  	// #50
  40a7a8:	bl	4127c8 <wcrtomb@plt+0xfa88>
  40a7ac:	mov	x1, x0
  40a7b0:	mov	x2, #0x32                  	// #50
  40a7b4:	mov	x0, x19
  40a7b8:	stp	x2, xzr, [x19]
  40a7bc:	str	x1, [x19, #16]
  40a7c0:	ldr	x19, [sp, #16]
  40a7c4:	ldp	x29, x30, [sp], #32
  40a7c8:	ret
  40a7cc:	nop
  40a7d0:	ldr	x0, [x0, #16]
  40a7d4:	ret
  40a7d8:	ldr	x0, [x0, #8]
  40a7dc:	ret
  40a7e0:	stp	x29, x30, [sp, #-48]!
  40a7e4:	mov	x29, sp
  40a7e8:	ldr	x3, [x0, #8]
  40a7ec:	str	x21, [sp, #32]
  40a7f0:	mov	x21, x1
  40a7f4:	stp	x19, x20, [sp, #16]
  40a7f8:	mov	x19, x0
  40a7fc:	ldr	x1, [x0]
  40a800:	mov	x20, x2
  40a804:	sub	x1, x1, x3
  40a808:	cmp	x1, x2
  40a80c:	b.cc	40a840 <wcrtomb@plt+0x7b00>  // b.lo, b.ul, b.last
  40a810:	ldr	x0, [x19, #16]
  40a814:	mov	x1, x21
  40a818:	mov	x2, x20
  40a81c:	add	x0, x0, x3
  40a820:	bl	402650 <memcpy@plt>
  40a824:	ldr	x2, [x19, #8]
  40a828:	ldr	x21, [sp, #32]
  40a82c:	add	x20, x2, x20
  40a830:	str	x20, [x19, #8]
  40a834:	ldp	x19, x20, [sp, #16]
  40a838:	ldp	x29, x30, [sp], #48
  40a83c:	ret
  40a840:	add	x2, x3, x2
  40a844:	add	x1, x0, #0x10
  40a848:	bl	409d70 <wcrtomb@plt+0x7030>
  40a84c:	ldr	x3, [x19, #8]
  40a850:	b	40a810 <wcrtomb@plt+0x7ad0>
  40a854:	nop
  40a858:	cmn	w1, #0x1
  40a85c:	b.eq	40a8a0 <wcrtomb@plt+0x7b60>  // b.none
  40a860:	stp	x29, x30, [sp, #-32]!
  40a864:	mov	x29, sp
  40a868:	stp	x19, x20, [sp, #16]
  40a86c:	mov	w20, w1
  40a870:	mov	x19, x0
  40a874:	ldp	x2, x1, [x0]
  40a878:	cmp	x2, x1
  40a87c:	add	x2, x1, #0x1
  40a880:	b.eq	40a8a8 <wcrtomb@plt+0x7b68>  // b.none
  40a884:	ldr	x3, [x19, #16]
  40a888:	str	x2, [x19, #8]
  40a88c:	add	x0, x3, x1
  40a890:	strb	w20, [x3, x1]
  40a894:	ldp	x19, x20, [sp, #16]
  40a898:	ldp	x29, x30, [sp], #32
  40a89c:	ret
  40a8a0:	mov	x0, #0x0                   	// #0
  40a8a4:	ret
  40a8a8:	add	x1, x0, #0x10
  40a8ac:	bl	409d70 <wcrtomb@plt+0x7030>
  40a8b0:	ldr	x1, [x19, #8]
  40a8b4:	ldr	x3, [x19, #16]
  40a8b8:	add	x2, x1, #0x1
  40a8bc:	str	x2, [x19, #8]
  40a8c0:	add	x0, x3, x1
  40a8c4:	strb	w20, [x3, x1]
  40a8c8:	ldp	x19, x20, [sp, #16]
  40a8cc:	ldp	x29, x30, [sp], #32
  40a8d0:	ret
  40a8d4:	nop
  40a8d8:	stp	x29, x30, [sp, #-32]!
  40a8dc:	mov	x29, sp
  40a8e0:	str	x19, [sp, #16]
  40a8e4:	mov	x19, x0
  40a8e8:	cbz	x0, 40a8f4 <wcrtomb@plt+0x7bb4>
  40a8ec:	ldr	x0, [x0, #16]
  40a8f0:	bl	402ae0 <free@plt>
  40a8f4:	mov	x0, x19
  40a8f8:	ldr	x19, [sp, #16]
  40a8fc:	ldp	x29, x30, [sp], #32
  40a900:	b	402ae0 <free@plt>
  40a904:	nop
  40a908:	stp	x29, x30, [sp, #-48]!
  40a90c:	mov	x29, sp
  40a910:	stp	x19, x20, [sp, #16]
  40a914:	mov	x20, x2
  40a918:	str	x21, [sp, #32]
  40a91c:	mov	x21, x0
  40a920:	bl	4105e8 <wcrtomb@plt+0xd8a8>
  40a924:	mov	w19, w0
  40a928:	cmn	w0, #0x2
  40a92c:	b.eq	40a990 <wcrtomb@plt+0x7c50>  // b.none
  40a930:	cmn	w0, #0x1
  40a934:	b.ne	40a97c <wcrtomb@plt+0x7c3c>  // b.any
  40a938:	bl	402cb0 <__errno_location@plt>
  40a93c:	mov	x3, x0
  40a940:	mov	w2, #0x5                   	// #5
  40a944:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  40a948:	mov	x0, #0x0                   	// #0
  40a94c:	add	x1, x1, #0x408
  40a950:	ldr	w21, [x3]
  40a954:	bl	402c20 <dcgettext@plt>
  40a958:	mov	x2, x0
  40a95c:	mov	x0, x20
  40a960:	mov	x20, x2
  40a964:	bl	412048 <wcrtomb@plt+0xf308>
  40a968:	mov	x3, x0
  40a96c:	mov	x2, x20
  40a970:	mov	w1, w21
  40a974:	mov	w0, #0x0                   	// #0
  40a978:	bl	4026d0 <error@plt>
  40a97c:	mov	w0, w19
  40a980:	ldp	x19, x20, [sp, #16]
  40a984:	ldr	x21, [sp, #32]
  40a988:	ldp	x29, x30, [sp], #48
  40a98c:	ret
  40a990:	bl	402cb0 <__errno_location@plt>
  40a994:	mov	x1, x0
  40a998:	mov	x0, x21
  40a99c:	ldr	w20, [x1]
  40a9a0:	bl	412048 <wcrtomb@plt+0xf308>
  40a9a4:	adrp	x2, 421000 <_obstack_memory_used@@Base+0xe3b0>
  40a9a8:	mov	x3, x0
  40a9ac:	mov	w1, w20
  40a9b0:	add	x2, x2, #0x368
  40a9b4:	mov	w0, #0x0                   	// #0
  40a9b8:	bl	4026d0 <error@plt>
  40a9bc:	mov	w0, w19
  40a9c0:	ldp	x19, x20, [sp, #16]
  40a9c4:	ldr	x21, [sp, #32]
  40a9c8:	ldp	x29, x30, [sp], #48
  40a9cc:	ret
  40a9d0:	stp	x29, x30, [sp, #-48]!
  40a9d4:	mov	x29, sp
  40a9d8:	stp	x21, x22, [sp, #32]
  40a9dc:	mov	x21, #0x0                   	// #0
  40a9e0:	ldr	x22, [x0, #144]
  40a9e4:	stp	x19, x20, [sp, #16]
  40a9e8:	mov	x20, x0
  40a9ec:	add	x0, x22, x1, lsl #3
  40a9f0:	ldur	x2, [x0, #-8]
  40a9f4:	sub	x3, x2, #0x105
  40a9f8:	cmp	x2, #0x103
  40a9fc:	b.gt	40aa1c <wcrtomb@plt+0x7cdc>
  40aa00:	cmp	x2, #0x100
  40aa04:	b.gt	40aa44 <wcrtomb@plt+0x7d04>
  40aa08:	add	x0, x21, #0x1
  40aa0c:	ldp	x19, x20, [sp, #16]
  40aa10:	ldp	x21, x22, [sp, #32]
  40aa14:	ldp	x29, x30, [sp], #48
  40aa18:	ret
  40aa1c:	sub	x19, x1, #0x1
  40aa20:	mov	x0, x20
  40aa24:	mov	x1, x19
  40aa28:	cmp	x3, #0x1
  40aa2c:	b.hi	40aa08 <wcrtomb@plt+0x7cc8>  // b.pmore
  40aa30:	bl	40a9d0 <wcrtomb@plt+0x7c90>
  40aa34:	add	x2, x0, #0x1
  40aa38:	sub	x1, x19, x0
  40aa3c:	add	x21, x21, x2
  40aa40:	b	40a9ec <wcrtomb@plt+0x7cac>
  40aa44:	sub	x1, x1, #0x1
  40aa48:	add	x21, x21, #0x1
  40aa4c:	b	40a9ec <wcrtomb@plt+0x7cac>
  40aa50:	ldr	x2, [x0]
  40aa54:	mov	w3, #0xffffffff            	// #-1
  40aa58:	ldr	x1, [x1]
  40aa5c:	cmp	x2, x1
  40aa60:	cset	w0, gt
  40aa64:	csel	w0, w0, w3, ge  // ge = tcont
  40aa68:	ret
  40aa6c:	nop
  40aa70:	mov	x0, x1
  40aa74:	mov	w1, #0x1                   	// #1
  40aa78:	strb	w1, [x5]
  40aa7c:	ret
  40aa80:	stp	x29, x30, [sp, #-64]!
  40aa84:	mov	x29, sp
  40aa88:	stp	x19, x20, [sp, #16]
  40aa8c:	mov	x19, x3
  40aa90:	mov	x20, x0
  40aa94:	str	x21, [sp, #32]
  40aa98:	ldrb	w3, [x1]
  40aa9c:	add	x3, x19, x3, lsl #2
  40aaa0:	ldr	w21, [x3, #1308]
  40aaa4:	cmn	w21, #0x1
  40aaa8:	b.eq	40aac4 <wcrtomb@plt+0x7d84>  // b.none
  40aaac:	str	w21, [x20]
  40aab0:	mov	w0, #0x1                   	// #1
  40aab4:	ldp	x19, x20, [sp, #16]
  40aab8:	ldr	x21, [sp, #32]
  40aabc:	ldp	x29, x30, [sp], #64
  40aac0:	ret
  40aac4:	add	x3, x19, #0x110
  40aac8:	add	x0, sp, #0x3c
  40aacc:	bl	412878 <wcrtomb@plt+0xfb38>
  40aad0:	sub	x1, x0, #0x1
  40aad4:	cmn	x1, #0x4
  40aad8:	b.hi	40aaf4 <wcrtomb@plt+0x7db4>  // b.pmore
  40aadc:	ldr	w1, [sp, #60]
  40aae0:	str	w1, [x20]
  40aae4:	ldp	x19, x20, [sp, #16]
  40aae8:	ldr	x21, [sp, #32]
  40aaec:	ldp	x29, x30, [sp], #64
  40aaf0:	ret
  40aaf4:	str	xzr, [x19, #272]
  40aaf8:	b	40aaac <wcrtomb@plt+0x7d6c>
  40aafc:	nop
  40ab00:	mov	x3, x0
  40ab04:	stp	x29, x30, [sp, #-32]!
  40ab08:	mov	x29, sp
  40ab0c:	ldp	x1, x2, [x3, #32]
  40ab10:	str	x19, [sp, #16]
  40ab14:	mov	x19, x0
  40ab18:	add	x0, x0, #0x48
  40ab1c:	bl	40aa80 <wcrtomb@plt+0x7d40>
  40ab20:	sxtw	x1, w0
  40ab24:	cmp	w1, #0x1
  40ab28:	b.ne	40ab50 <wcrtomb@plt+0x7e10>  // b.any
  40ab2c:	ldr	x2, [x19, #32]
  40ab30:	ldrb	w0, [x2]
  40ab34:	ldr	x3, [x19, #40]
  40ab38:	add	x2, x2, x1
  40ab3c:	sub	x1, x3, x1
  40ab40:	stp	x2, x1, [x19, #32]
  40ab44:	ldr	x19, [sp, #16]
  40ab48:	ldp	x29, x30, [sp], #32
  40ab4c:	ret
  40ab50:	mov	w0, #0xffffffff            	// #-1
  40ab54:	ldr	x2, [x19, #32]
  40ab58:	b	40ab34 <wcrtomb@plt+0x7df4>
  40ab5c:	nop
  40ab60:	stp	x29, x30, [sp, #-32]!
  40ab64:	mov	x29, sp
  40ab68:	ldr	x6, [x1]
  40ab6c:	stp	x19, x20, [sp, #16]
  40ab70:	mov	x20, x1
  40ab74:	asr	x19, x6, #1
  40ab78:	adds	x19, x6, x19
  40ab7c:	b.vs	40ac1c <wcrtomb@plt+0x7edc>
  40ab80:	cmn	x3, #0x1
  40ab84:	b.eq	40ab90 <wcrtomb@plt+0x7e50>  // b.none
  40ab88:	cmp	x19, x3
  40ab8c:	csel	x19, x19, x3, le
  40ab90:	mul	x1, x19, x4
  40ab94:	smulh	x5, x19, x4
  40ab98:	cmp	x5, x1, asr #63
  40ab9c:	b.ne	40ac10 <wcrtomb@plt+0x7ed0>  // b.any
  40aba0:	cmp	x1, #0x7f
  40aba4:	b.le	40abf4 <wcrtomb@plt+0x7eb4>
  40aba8:	cbz	x0, 40ac08 <wcrtomb@plt+0x7ec8>
  40abac:	nop
  40abb0:	sub	x5, x19, x6
  40abb4:	cmp	x5, x2
  40abb8:	b.ge	40abe0 <wcrtomb@plt+0x7ea0>  // b.tcont
  40abbc:	adds	x19, x6, x2
  40abc0:	b.vs	40ac18 <wcrtomb@plt+0x7ed8>
  40abc4:	cmp	x19, x3
  40abc8:	ccmn	x3, #0x1, #0x4, gt
  40abcc:	b.ne	40ac18 <wcrtomb@plt+0x7ed8>  // b.any
  40abd0:	mul	x1, x19, x4
  40abd4:	smulh	x4, x19, x4
  40abd8:	cmp	x4, x1, asr #63
  40abdc:	b.ne	40ac18 <wcrtomb@plt+0x7ed8>  // b.any
  40abe0:	bl	412658 <wcrtomb@plt+0xf918>
  40abe4:	str	x19, [x20]
  40abe8:	ldp	x19, x20, [sp, #16]
  40abec:	ldp	x29, x30, [sp], #32
  40abf0:	ret
  40abf4:	mov	x5, #0x80                  	// #128
  40abf8:	udiv	x19, x5, x4
  40abfc:	msub	x1, x19, x4, x5
  40ac00:	sub	x1, x5, x1
  40ac04:	cbnz	x0, 40abb0 <wcrtomb@plt+0x7e70>
  40ac08:	str	xzr, [x20]
  40ac0c:	b	40abb0 <wcrtomb@plt+0x7e70>
  40ac10:	mov	x5, #0x7fffffffffffffff    	// #9223372036854775807
  40ac14:	b	40abf8 <wcrtomb@plt+0x7eb8>
  40ac18:	bl	412830 <wcrtomb@plt+0xfaf0>
  40ac1c:	cmn	x3, #0x1
  40ac20:	b.eq	40ac10 <wcrtomb@plt+0x7ed0>  // b.none
  40ac24:	mov	x19, x3
  40ac28:	b	40ab90 <wcrtomb@plt+0x7e50>
  40ac2c:	nop
  40ac30:	stp	x29, x30, [sp, #-48]!
  40ac34:	mov	x29, sp
  40ac38:	stp	x19, x20, [sp, #16]
  40ac3c:	mov	x19, x0
  40ac40:	mov	x20, x1
  40ac44:	ldp	x1, x0, [x0, #152]
  40ac48:	str	x21, [sp, #32]
  40ac4c:	and	w21, w2, #0xff
  40ac50:	cmp	x0, x1
  40ac54:	b.eq	40ad08 <wcrtomb@plt+0x7fc8>  // b.none
  40ac58:	ldrb	w0, [x19, #1048]
  40ac5c:	cbz	w0, 40acd8 <wcrtomb@plt+0x7f98>
  40ac60:	ldr	x0, [x19, #280]
  40ac64:	strb	w21, [x0, x1]
  40ac68:	ldr	x0, [x19, #144]
  40ac6c:	cmp	x20, #0x106
  40ac70:	ldr	x1, [x19, #152]
  40ac74:	add	x2, x1, #0x1
  40ac78:	str	x2, [x19, #152]
  40ac7c:	str	x20, [x0, x1, lsl #3]
  40ac80:	b.gt	40acf0 <wcrtomb@plt+0x7fb0>
  40ac84:	cmp	x20, #0x104
  40ac88:	b.gt	40ad48 <wcrtomb@plt+0x8008>
  40ac8c:	cmp	x20, #0x100
  40ac90:	b.eq	40acac <wcrtomb@plt+0x7f6c>  // b.none
  40ac94:	sub	x20, x20, #0x101
  40ac98:	cmp	x20, #0x2
  40ac9c:	b.ls	40ad00 <wcrtomb@plt+0x7fc0>  // b.plast
  40aca0:	ldr	x0, [x19, #176]
  40aca4:	add	x0, x0, #0x1
  40aca8:	str	x0, [x19, #176]
  40acac:	ldr	x0, [x19, #136]
  40acb0:	add	x0, x0, #0x1
  40acb4:	str	x0, [x19, #136]
  40acb8:	ldr	x1, [x19, #168]
  40acbc:	cmp	x1, x0
  40acc0:	b.ge	40acc8 <wcrtomb@plt+0x7f88>  // b.tcont
  40acc4:	str	x0, [x19, #168]
  40acc8:	ldp	x19, x20, [sp, #16]
  40accc:	ldr	x21, [sp, #32]
  40acd0:	ldp	x29, x30, [sp], #48
  40acd4:	ret
  40acd8:	ldr	x0, [x19, #144]
  40acdc:	add	x2, x1, #0x1
  40ace0:	str	x2, [x19, #152]
  40ace4:	cmp	x20, #0x106
  40ace8:	str	x20, [x0, x1, lsl #3]
  40acec:	b.le	40ac84 <wcrtomb@plt+0x7f44>
  40acf0:	cmp	x20, #0x112
  40acf4:	b.ne	40aca0 <wcrtomb@plt+0x7f60>  // b.any
  40acf8:	strb	wzr, [x19, #192]
  40acfc:	b	40aca0 <wcrtomb@plt+0x7f60>
  40ad00:	ldr	x0, [x19, #136]
  40ad04:	b	40acb8 <wcrtomb@plt+0x7f78>
  40ad08:	ldr	x0, [x19, #144]
  40ad0c:	add	x1, x19, #0xa0
  40ad10:	mov	x4, #0x8                   	// #8
  40ad14:	mov	x3, #0xffffffffffffffff    	// #-1
  40ad18:	mov	x2, #0x1                   	// #1
  40ad1c:	bl	40ab60 <wcrtomb@plt+0x7e20>
  40ad20:	str	x0, [x19, #144]
  40ad24:	ldrb	w1, [x19, #1048]
  40ad28:	cbz	w1, 40ac6c <wcrtomb@plt+0x7f2c>
  40ad2c:	ldr	x1, [x19, #160]
  40ad30:	ldr	x0, [x19, #280]
  40ad34:	tbnz	x1, #63, 40ad58 <wcrtomb@plt+0x8018>
  40ad38:	bl	412658 <wcrtomb@plt+0xf918>
  40ad3c:	str	x0, [x19, #280]
  40ad40:	ldr	x1, [x19, #152]
  40ad44:	b	40ac58 <wcrtomb@plt+0x7f18>
  40ad48:	ldr	x0, [x19, #136]
  40ad4c:	sub	x0, x0, #0x1
  40ad50:	str	x0, [x19, #136]
  40ad54:	b	40acb8 <wcrtomb@plt+0x7f78>
  40ad58:	bl	412830 <wcrtomb@plt+0xfaf0>
  40ad5c:	nop
  40ad60:	stp	x29, x30, [sp, #-64]!
  40ad64:	mov	x29, sp
  40ad68:	stp	x19, x20, [sp, #16]
  40ad6c:	ldr	x2, [x0, #304]
  40ad70:	ldr	x19, [x0, #352]
  40ad74:	cmp	x2, x19
  40ad78:	b.le	40ae94 <wcrtomb@plt+0x8154>
  40ad7c:	mov	x20, x0
  40ad80:	stp	x21, x22, [sp, #32]
  40ad84:	mov	x5, #0x0                   	// #0
  40ad88:	ldr	x0, [x0, #368]
  40ad8c:	cbz	x0, 40ad98 <wcrtomb@plt+0x8058>
  40ad90:	sub	x0, x0, #0x10
  40ad94:	add	x5, x19, #0x2
  40ad98:	add	x1, sp, #0x38
  40ad9c:	sub	x2, x2, x19
  40ada0:	mov	x4, #0x8                   	// #8
  40ada4:	mov	x3, #0xffffffffffffffff    	// #-1
  40ada8:	str	x5, [sp, #56]
  40adac:	bl	40ab60 <wcrtomb@plt+0x7e20>
  40adb0:	ldr	x22, [sp, #56]
  40adb4:	mov	x1, x0
  40adb8:	str	xzr, [x0, #8]
  40adbc:	sub	x22, x22, #0x2
  40adc0:	str	xzr, [x1], #16
  40adc4:	cmp	xzr, x22, lsr #61
  40adc8:	str	x22, [x20, #352]
  40adcc:	str	x1, [x20, #368]
  40add0:	lsl	x21, x22, #3
  40add4:	cset	x1, ne  // ne = any
  40add8:	ldr	x0, [x20, #376]
  40addc:	tbnz	x22, #60, 40aea8 <wcrtomb@plt+0x8168>
  40ade0:	cbnz	x1, 40aea8 <wcrtomb@plt+0x8168>
  40ade4:	mov	x1, x21
  40ade8:	bl	412658 <wcrtomb@plt+0xf918>
  40adec:	str	x0, [x20, #376]
  40adf0:	ldr	x0, [x20, #384]
  40adf4:	tbnz	x22, #63, 40aea8 <wcrtomb@plt+0x8168>
  40adf8:	mov	x1, x22
  40adfc:	bl	412658 <wcrtomb@plt+0xf918>
  40ae00:	mov	x1, x0
  40ae04:	str	x1, [x20, #384]
  40ae08:	ldr	x0, [x20, #392]
  40ae0c:	mov	x1, x21
  40ae10:	bl	412658 <wcrtomb@plt+0xf918>
  40ae14:	str	x0, [x20, #392]
  40ae18:	ldrb	w1, [x20, #1048]
  40ae1c:	cbz	w1, 40ae58 <wcrtomb@plt+0x8118>
  40ae20:	ldr	x2, [sp, #56]
  40ae24:	ldr	x0, [x20, #432]
  40ae28:	lsl	x1, x2, #3
  40ae2c:	cmp	x0, #0x0
  40ae30:	sub	x3, x0, #0x10
  40ae34:	csel	x0, x3, x0, ne  // ne = any
  40ae38:	cmp	xzr, x2, lsr #61
  40ae3c:	cset	x3, ne  // ne = any
  40ae40:	tbnz	x2, #60, 40aea8 <wcrtomb@plt+0x8168>
  40ae44:	cbnz	x3, 40aea8 <wcrtomb@plt+0x8168>
  40ae48:	bl	412658 <wcrtomb@plt+0xf918>
  40ae4c:	cbz	x19, 40aea0 <wcrtomb@plt+0x8160>
  40ae50:	add	x0, x0, #0x10
  40ae54:	str	x0, [x20, #432]
  40ae58:	cmp	x22, x19
  40ae5c:	b.le	40ae90 <wcrtomb@plt+0x8150>
  40ae60:	ldp	x2, x0, [x20, #368]
  40ae64:	lsl	x1, x19, #3
  40ae68:	ldrb	w3, [x20, #1048]
  40ae6c:	nop
  40ae70:	str	xzr, [x2, x1]
  40ae74:	str	xzr, [x0, x1]
  40ae78:	cbz	w3, 40ae84 <wcrtomb@plt+0x8144>
  40ae7c:	ldr	x4, [x20, #432]
  40ae80:	str	xzr, [x4, x1]
  40ae84:	add	x1, x1, #0x8
  40ae88:	cmp	x21, x1
  40ae8c:	b.ne	40ae70 <wcrtomb@plt+0x8130>  // b.any
  40ae90:	ldp	x21, x22, [sp, #32]
  40ae94:	ldp	x19, x20, [sp, #16]
  40ae98:	ldp	x29, x30, [sp], #64
  40ae9c:	ret
  40aea0:	stp	xzr, xzr, [x0]
  40aea4:	b	40ae50 <wcrtomb@plt+0x8110>
  40aea8:	bl	412830 <wcrtomb@plt+0xfaf0>
  40aeac:	nop
  40aeb0:	stp	x29, x30, [sp, #-32]!
  40aeb4:	mov	x29, sp
  40aeb8:	stp	x19, x20, [sp, #16]
  40aebc:	mov	w19, w0
  40aec0:	mov	x20, x1
  40aec4:	bl	402940 <__ctype_toupper_loc@plt>
  40aec8:	add	w1, w19, #0x80
  40aecc:	cmp	w1, #0x17f
  40aed0:	ldr	x5, [x0]
  40aed4:	b.hi	40aedc <wcrtomb@plt+0x819c>  // b.pmore
  40aed8:	ldr	w19, [x5, w19, sxtw #2]
  40aedc:	mov	x2, #0x0                   	// #0
  40aee0:	mov	x1, #0x1                   	// #1
  40aee4:	nop
  40aee8:	ldr	w3, [x5, x2, lsl #2]
  40aeec:	cmp	w19, w3
  40aef0:	b.ne	40af08 <wcrtomb@plt+0x81c8>  // b.any
  40aef4:	lsr	w0, w2, #6
  40aef8:	lsl	x3, x1, x2
  40aefc:	ldr	x4, [x20, x0, lsl #3]
  40af00:	orr	x3, x4, x3
  40af04:	str	x3, [x20, x0, lsl #3]
  40af08:	add	x2, x2, #0x1
  40af0c:	cmp	x2, #0x100
  40af10:	b.ne	40aee8 <wcrtomb@plt+0x81a8>  // b.any
  40af14:	ldp	x19, x20, [sp, #16]
  40af18:	ldp	x29, x30, [sp], #32
  40af1c:	ret
  40af20:	stp	x29, x30, [sp, #-96]!
  40af24:	mov	x29, sp
  40af28:	add	x2, sp, #0x48
  40af2c:	stp	x19, x20, [sp, #16]
  40af30:	mov	x20, x0
  40af34:	add	x0, sp, #0x50
  40af38:	str	xzr, [sp, #72]
  40af3c:	bl	402d40 <wcrtomb@plt>
  40af40:	cmn	x0, #0x1
  40af44:	b.eq	40afcc <wcrtomb@plt+0x828c>  // b.none
  40af48:	stp	x21, x22, [sp, #32]
  40af4c:	cmp	w0, #0x1
  40af50:	ldrb	w1, [sp, #80]
  40af54:	str	x23, [sp, #48]
  40af58:	mov	x22, x0
  40af5c:	mov	w23, w0
  40af60:	b.eq	40afec <wcrtomb@plt+0x82ac>  // b.none
  40af64:	mov	x0, x20
  40af68:	mov	w2, #0x1                   	// #1
  40af6c:	bl	40ac30 <wcrtomb@plt+0x7ef0>
  40af70:	cmp	w22, #0x1
  40af74:	b.le	40afb8 <wcrtomb@plt+0x8278>
  40af78:	sub	w22, w22, #0x1
  40af7c:	add	x21, sp, #0x51
  40af80:	mov	w19, #0x1                   	// #1
  40af84:	nop
  40af88:	cmp	w22, w19
  40af8c:	ldrb	w1, [x21], #1
  40af90:	cset	w2, eq  // eq = none
  40af94:	mov	x0, x20
  40af98:	add	w19, w19, #0x1
  40af9c:	ubfiz	w2, w2, #1, #7
  40afa0:	bl	40ac30 <wcrtomb@plt+0x7ef0>
  40afa4:	mov	x0, x20
  40afa8:	mov	x1, #0x105                 	// #261
  40afac:	bl	40b008 <wcrtomb@plt+0x82c8>
  40afb0:	cmp	w23, w19
  40afb4:	b.ne	40af88 <wcrtomb@plt+0x8248>  // b.any
  40afb8:	ldp	x21, x22, [sp, #32]
  40afbc:	ldr	x23, [sp, #48]
  40afc0:	ldp	x19, x20, [sp, #16]
  40afc4:	ldp	x29, x30, [sp], #96
  40afc8:	ret
  40afcc:	mov	x0, x20
  40afd0:	mov	w2, #0x3                   	// #3
  40afd4:	mov	x1, #0x0                   	// #0
  40afd8:	strb	wzr, [sp, #80]
  40afdc:	bl	40ac30 <wcrtomb@plt+0x7ef0>
  40afe0:	ldp	x19, x20, [sp, #16]
  40afe4:	ldp	x29, x30, [sp], #96
  40afe8:	ret
  40afec:	mov	x0, x20
  40aff0:	mov	w2, #0x3                   	// #3
  40aff4:	bl	40ac30 <wcrtomb@plt+0x7ef0>
  40aff8:	ldp	x21, x22, [sp, #32]
  40affc:	ldr	x23, [sp, #48]
  40b000:	b	40afc0 <wcrtomb@plt+0x8280>
  40b004:	nop
  40b008:	stp	x29, x30, [sp, #-32]!
  40b00c:	mov	x29, sp
  40b010:	ldrb	w2, [x0, #1048]
  40b014:	stp	x19, x20, [sp, #16]
  40b018:	mov	x19, x0
  40b01c:	cmp	x1, #0x113
  40b020:	cset	w0, eq  // eq = none
  40b024:	tst	w0, w2
  40b028:	b.eq	40b0ac <wcrtomb@plt+0x836c>  // b.none
  40b02c:	ldr	x0, [x19, #104]
  40b030:	cmp	x0, #0x0
  40b034:	b.le	40b0cc <wcrtomb@plt+0x838c>
  40b038:	ldr	x1, [x19, #96]
  40b03c:	mov	x0, x19
  40b040:	mov	x20, #0x0                   	// #0
  40b044:	add	x20, x20, #0x1
  40b048:	ldr	w1, [x1]
  40b04c:	bl	40af20 <wcrtomb@plt+0x81e0>
  40b050:	ldr	x1, [x19, #104]
  40b054:	mov	x0, x19
  40b058:	cmp	x1, x20
  40b05c:	b.le	40b08c <wcrtomb@plt+0x834c>
  40b060:	ldr	x1, [x19, #96]
  40b064:	ldr	w1, [x1, x20, lsl #2]
  40b068:	add	x20, x20, #0x1
  40b06c:	bl	40af20 <wcrtomb@plt+0x81e0>
  40b070:	mov	x0, x19
  40b074:	mov	x1, #0x106                 	// #262
  40b078:	bl	40b008 <wcrtomb@plt+0x82c8>
  40b07c:	ldr	x1, [x19, #104]
  40b080:	mov	x0, x19
  40b084:	cmp	x1, x20
  40b088:	b.gt	40b060 <wcrtomb@plt+0x8320>
  40b08c:	ldr	x1, [x19, #80]
  40b090:	str	xzr, [x19, #104]
  40b094:	cmn	x1, #0x1
  40b098:	b.eq	40b0c0 <wcrtomb@plt+0x8380>  // b.none
  40b09c:	add	x1, x1, #0x114
  40b0a0:	mov	x0, x19
  40b0a4:	bl	40b008 <wcrtomb@plt+0x82c8>
  40b0a8:	mov	x1, #0x106                 	// #262
  40b0ac:	mov	x0, x19
  40b0b0:	mov	w2, #0x3                   	// #3
  40b0b4:	ldp	x19, x20, [sp, #16]
  40b0b8:	ldp	x29, x30, [sp], #32
  40b0bc:	b	40ac30 <wcrtomb@plt+0x7ef0>
  40b0c0:	ldp	x19, x20, [sp, #16]
  40b0c4:	ldp	x29, x30, [sp], #32
  40b0c8:	ret
  40b0cc:	ldr	x1, [x19, #80]
  40b0d0:	str	xzr, [x19, #104]
  40b0d4:	cmn	x1, #0x1
  40b0d8:	b.eq	40b0c0 <wcrtomb@plt+0x8380>  // b.none
  40b0dc:	add	x1, x1, #0x114
  40b0e0:	b	40b01c <wcrtomb@plt+0x82dc>
  40b0e4:	nop
  40b0e8:	stp	x29, x30, [sp, #-32]!
  40b0ec:	mov	x29, sp
  40b0f0:	stp	x19, x20, [sp, #16]
  40b0f4:	mov	x20, x0
  40b0f8:	ldr	x19, [x0]
  40b0fc:	ldr	x0, [x19]
  40b100:	cbz	x0, 40b118 <wcrtomb@plt+0x83d8>
  40b104:	nop
  40b108:	bl	402ae0 <free@plt>
  40b10c:	ldr	x0, [x19, #8]!
  40b110:	cbnz	x0, 40b108 <wcrtomb@plt+0x83c8>
  40b114:	ldr	x19, [x20]
  40b118:	mov	x0, x19
  40b11c:	bl	402ae0 <free@plt>
  40b120:	ldr	x0, [x20, #8]
  40b124:	bl	402ae0 <free@plt>
  40b128:	ldr	x0, [x20, #16]
  40b12c:	bl	402ae0 <free@plt>
  40b130:	ldr	x0, [x20, #24]
  40b134:	bl	402ae0 <free@plt>
  40b138:	mov	x0, x20
  40b13c:	ldp	x19, x20, [sp, #16]
  40b140:	ldp	x29, x30, [sp], #32
  40b144:	b	402ae0 <free@plt>
  40b148:	stp	x29, x30, [sp, #-32]!
  40b14c:	cmp	xzr, x1, lsr #60
  40b150:	mov	x29, sp
  40b154:	stp	x19, x20, [sp, #16]
  40b158:	mov	x19, x1
  40b15c:	mov	x20, x0
  40b160:	lsl	x0, x1, #4
  40b164:	cset	x1, ne  // ne = any
  40b168:	tbnz	x19, #59, 40b188 <wcrtomb@plt+0x8448>
  40b16c:	cbnz	x1, 40b188 <wcrtomb@plt+0x8448>
  40b170:	bl	4125f8 <wcrtomb@plt+0xf8b8>
  40b174:	stp	x0, xzr, [x20]
  40b178:	str	x19, [x20, #16]
  40b17c:	ldp	x19, x20, [sp, #16]
  40b180:	ldp	x29, x30, [sp], #32
  40b184:	ret
  40b188:	bl	412830 <wcrtomb@plt+0xfaf0>
  40b18c:	nop
  40b190:	stp	x29, x30, [sp, #-48]!
  40b194:	mov	x29, sp
  40b198:	stp	x19, x20, [sp, #16]
  40b19c:	mov	x19, x0
  40b1a0:	mov	x0, x1
  40b1a4:	stp	x21, x22, [sp, #32]
  40b1a8:	mov	x21, x1
  40b1ac:	bl	402690 <strlen@plt>
  40b1b0:	cbz	x0, 40b1e8 <wcrtomb@plt+0x84a8>
  40b1b4:	mov	x20, x0
  40b1b8:	mov	x0, x19
  40b1bc:	bl	402690 <strlen@plt>
  40b1c0:	mov	x22, x0
  40b1c4:	add	x1, x22, x20
  40b1c8:	mov	x0, x19
  40b1cc:	add	x1, x1, #0x1
  40b1d0:	bl	412658 <wcrtomb@plt+0xf918>
  40b1d4:	add	x2, x20, #0x1
  40b1d8:	mov	x19, x0
  40b1dc:	mov	x1, x21
  40b1e0:	add	x0, x0, x22
  40b1e4:	bl	402650 <memcpy@plt>
  40b1e8:	mov	x0, x19
  40b1ec:	ldp	x19, x20, [sp, #16]
  40b1f0:	ldp	x21, x22, [sp, #32]
  40b1f4:	ldp	x29, x30, [sp], #48
  40b1f8:	ret
  40b1fc:	nop
  40b200:	stp	x29, x30, [sp, #-48]!
  40b204:	mov	x29, sp
  40b208:	stp	x19, x20, [sp, #16]
  40b20c:	mov	x20, x1
  40b210:	str	x21, [sp, #32]
  40b214:	mov	x21, x0
  40b218:	mov	x0, #0x30                  	// #48
  40b21c:	bl	4125f8 <wcrtomb@plt+0xf8b8>
  40b220:	mov	x19, x0
  40b224:	mov	x0, #0x8                   	// #8
  40b228:	bl	4127c8 <wcrtomb@plt+0xfa88>
  40b22c:	mov	x1, x0
  40b230:	mov	x0, x20
  40b234:	str	x1, [x19]
  40b238:	bl	4127c8 <wcrtomb@plt+0xfa88>
  40b23c:	mov	x1, x0
  40b240:	str	x1, [x19, #8]
  40b244:	mov	x0, x20
  40b248:	bl	4127c8 <wcrtomb@plt+0xfa88>
  40b24c:	mov	x1, x0
  40b250:	str	x1, [x19, #16]
  40b254:	mov	x0, x20
  40b258:	bl	4127c8 <wcrtomb@plt+0xfa88>
  40b25c:	mov	x1, x0
  40b260:	str	x1, [x19, #24]
  40b264:	mov	x0, x19
  40b268:	strh	wzr, [x19, #32]
  40b26c:	str	x21, [x19, #40]
  40b270:	ldp	x19, x20, [sp, #16]
  40b274:	ldr	x21, [sp, #32]
  40b278:	ldp	x29, x30, [sp], #48
  40b27c:	ret
  40b280:	stp	x29, x30, [sp, #-64]!
  40b284:	mov	x29, sp
  40b288:	stp	x19, x20, [sp, #16]
  40b28c:	mov	x20, x0
  40b290:	mov	x19, x2
  40b294:	add	x0, x2, #0x1
  40b298:	stp	x21, x22, [sp, #32]
  40b29c:	mov	x21, x1
  40b2a0:	stp	x23, x24, [sp, #48]
  40b2a4:	bl	4125f8 <wcrtomb@plt+0xf8b8>
  40b2a8:	mov	x1, x21
  40b2ac:	mov	x2, x19
  40b2b0:	bl	402650 <memcpy@plt>
  40b2b4:	ldr	x21, [x20]
  40b2b8:	strb	wzr, [x0, x19]
  40b2bc:	mov	x23, x0
  40b2c0:	cbz	x21, 40b3a0 <wcrtomb@plt+0x8660>
  40b2c4:	mov	x0, x21
  40b2c8:	mov	x19, #0x0                   	// #0
  40b2cc:	b	40b2dc <wcrtomb@plt+0x859c>
  40b2d0:	add	x19, x19, #0x1
  40b2d4:	ldr	x0, [x20, x19, lsl #3]
  40b2d8:	cbz	x0, 40b308 <wcrtomb@plt+0x85c8>
  40b2dc:	mov	x1, x23
  40b2e0:	bl	402c10 <strstr@plt>
  40b2e4:	cbz	x0, 40b2d0 <wcrtomb@plt+0x8590>
  40b2e8:	mov	x0, x23
  40b2ec:	bl	402ae0 <free@plt>
  40b2f0:	mov	x0, x20
  40b2f4:	ldp	x19, x20, [sp, #16]
  40b2f8:	ldp	x21, x22, [sp, #32]
  40b2fc:	ldp	x23, x24, [sp, #48]
  40b300:	ldp	x29, x30, [sp], #64
  40b304:	ret
  40b308:	mov	x24, x20
  40b30c:	mov	x22, #0x0                   	// #0
  40b310:	b	40b340 <wcrtomb@plt+0x8600>
  40b314:	mov	x0, x21
  40b318:	sub	x19, x19, #0x1
  40b31c:	bl	402ae0 <free@plt>
  40b320:	cmp	x19, x22
  40b324:	b.eq	40b360 <wcrtomb@plt+0x8620>  // b.none
  40b328:	ldr	x0, [x20, x19, lsl #3]
  40b32c:	str	x0, [x24]
  40b330:	str	xzr, [x20, x19, lsl #3]
  40b334:	add	x24, x20, x22, lsl #3
  40b338:	ldr	x21, [x20, x22, lsl #3]
  40b33c:	cbz	x21, 40b360 <wcrtomb@plt+0x8620>
  40b340:	mov	x1, x21
  40b344:	mov	x0, x23
  40b348:	bl	402c10 <strstr@plt>
  40b34c:	cbnz	x0, 40b314 <wcrtomb@plt+0x85d4>
  40b350:	add	x22, x22, #0x1
  40b354:	add	x24, x20, x22, lsl #3
  40b358:	ldr	x21, [x20, x22, lsl #3]
  40b35c:	cbnz	x21, 40b340 <wcrtomb@plt+0x8600>
  40b360:	add	x0, x19, #0x2
  40b364:	cmp	xzr, x0, lsr #61
  40b368:	lsl	x1, x0, #3
  40b36c:	cset	x2, ne  // ne = any
  40b370:	tbnz	x0, #60, 40b3ac <wcrtomb@plt+0x866c>
  40b374:	cbnz	x2, 40b3ac <wcrtomb@plt+0x866c>
  40b378:	mov	x0, x20
  40b37c:	bl	412658 <wcrtomb@plt+0xf918>
  40b380:	add	x1, x0, x19, lsl #3
  40b384:	str	x23, [x0, x19, lsl #3]
  40b388:	ldp	x19, x20, [sp, #16]
  40b38c:	str	xzr, [x1, #8]
  40b390:	ldp	x21, x22, [sp, #32]
  40b394:	ldp	x23, x24, [sp, #48]
  40b398:	ldp	x29, x30, [sp], #64
  40b39c:	ret
  40b3a0:	mov	x19, #0x0                   	// #0
  40b3a4:	mov	x1, #0x10                  	// #16
  40b3a8:	b	40b378 <wcrtomb@plt+0x8638>
  40b3ac:	bl	412830 <wcrtomb@plt+0xfaf0>
  40b3b0:	stp	x29, x30, [sp, #-48]!
  40b3b4:	mov	x29, sp
  40b3b8:	stp	x19, x20, [sp, #16]
  40b3bc:	mov	x19, x0
  40b3c0:	ldr	x20, [x1]
  40b3c4:	cbz	x20, 40b3f8 <wcrtomb@plt+0x86b8>
  40b3c8:	str	x21, [sp, #32]
  40b3cc:	mov	x21, x1
  40b3d0:	mov	x0, x20
  40b3d4:	bl	402690 <strlen@plt>
  40b3d8:	mov	x1, x20
  40b3dc:	mov	x2, x0
  40b3e0:	mov	x0, x19
  40b3e4:	bl	40b280 <wcrtomb@plt+0x8540>
  40b3e8:	ldr	x20, [x21, #8]!
  40b3ec:	mov	x19, x0
  40b3f0:	cbnz	x20, 40b3d0 <wcrtomb@plt+0x8690>
  40b3f4:	ldr	x21, [sp, #32]
  40b3f8:	mov	x0, x19
  40b3fc:	ldp	x19, x20, [sp, #16]
  40b400:	ldp	x29, x30, [sp], #48
  40b404:	ret
  40b408:	ldr	x8, [x2]
  40b40c:	cmp	x8, #0x0
  40b410:	b.le	40b484 <wcrtomb@plt+0x8744>
  40b414:	mov	x6, x8
  40b418:	mov	x5, #0x0                   	// #0
  40b41c:	b	40b42c <wcrtomb@plt+0x86ec>
  40b420:	add	x5, x3, #0x1
  40b424:	cmp	x5, x6
  40b428:	b.ge	40b484 <wcrtomb@plt+0x8744>  // b.tcont
  40b42c:	add	x3, x6, x5
  40b430:	asr	x3, x3, #1
  40b434:	lsl	x4, x3, #4
  40b438:	add	x7, x1, x4
  40b43c:	ldr	x4, [x1, x4]
  40b440:	cmp	x4, x0
  40b444:	b.lt	40b420 <wcrtomb@plt+0x86e0>  // b.tstop
  40b448:	mov	x6, x3
  40b44c:	b.ne	40b424 <wcrtomb@plt+0x86e4>  // b.any
  40b450:	add	x4, x3, #0x1
  40b454:	ldr	w0, [x7, #8]
  40b458:	cmp	x8, x4
  40b45c:	b.le	40b47c <wcrtomb@plt+0x873c>
  40b460:	sub	x1, x1, #0x10
  40b464:	add	x1, x1, x8, lsl #4
  40b468:	ldp	x4, x5, [x7, #16]
  40b46c:	stp	x4, x5, [x7], #16
  40b470:	cmp	x7, x1
  40b474:	b.ne	40b468 <wcrtomb@plt+0x8728>  // b.any
  40b478:	sub	x3, x8, #0x1
  40b47c:	str	x3, [x2]
  40b480:	ret
  40b484:	mov	w0, #0x0                   	// #0
  40b488:	ret
  40b48c:	nop
  40b490:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  40b494:	add	x1, x1, #0x428
  40b498:	stp	x29, x30, [sp, #-16]!
  40b49c:	mov	w2, #0x5                   	// #5
  40b4a0:	mov	x0, #0x0                   	// #0
  40b4a4:	mov	x29, sp
  40b4a8:	bl	402c20 <dcgettext@plt>
  40b4ac:	bl	409320 <wcrtomb@plt+0x65e0>
  40b4b0:	stp	x29, x30, [sp, #-48]!
  40b4b4:	mov	x29, sp
  40b4b8:	stp	x19, x20, [sp, #16]
  40b4bc:	mov	x20, x0
  40b4c0:	ldrb	w0, [x0, #1048]
  40b4c4:	stp	x21, x22, [sp, #32]
  40b4c8:	mov	x21, x2
  40b4cc:	cbnz	w0, 40b514 <wcrtomb@plt+0x87d4>
  40b4d0:	lsl	x19, x1, #3
  40b4d4:	cmp	x2, #0x0
  40b4d8:	mov	x22, #0x0                   	// #0
  40b4dc:	b.le	40b504 <wcrtomb@plt+0x87c4>
  40b4e0:	ldr	x1, [x20, #144]
  40b4e4:	add	x22, x22, #0x1
  40b4e8:	mov	x0, x20
  40b4ec:	mov	w2, #0x3                   	// #3
  40b4f0:	ldr	x1, [x1, x19]
  40b4f4:	add	x19, x19, #0x8
  40b4f8:	bl	40ac30 <wcrtomb@plt+0x7ef0>
  40b4fc:	cmp	x21, x22
  40b500:	b.ne	40b4e0 <wcrtomb@plt+0x87a0>  // b.any
  40b504:	ldp	x19, x20, [sp, #16]
  40b508:	ldp	x21, x22, [sp, #32]
  40b50c:	ldp	x29, x30, [sp], #48
  40b510:	ret
  40b514:	cmp	x2, #0x0
  40b518:	b.le	40b504 <wcrtomb@plt+0x87c4>
  40b51c:	mov	x19, x1
  40b520:	add	x21, x2, x1
  40b524:	nop
  40b528:	ldr	x1, [x20, #144]
  40b52c:	mov	x0, x20
  40b530:	ldr	x2, [x20, #280]
  40b534:	ldr	x1, [x1, x19, lsl #3]
  40b538:	ldrb	w2, [x2, x19]
  40b53c:	add	x19, x19, #0x1
  40b540:	bl	40ac30 <wcrtomb@plt+0x7ef0>
  40b544:	cmp	x21, x19
  40b548:	b.ne	40b528 <wcrtomb@plt+0x87e8>  // b.any
  40b54c:	ldp	x19, x20, [sp, #16]
  40b550:	ldp	x21, x22, [sp, #32]
  40b554:	ldp	x29, x30, [sp], #48
  40b558:	ret
  40b55c:	nop
  40b560:	stp	x29, x30, [sp, #-48]!
  40b564:	mov	x29, sp
  40b568:	stp	x19, x20, [sp, #16]
  40b56c:	mov	x19, x2
  40b570:	ldr	x2, [x1]
  40b574:	str	x21, [sp, #32]
  40b578:	mov	x21, x0
  40b57c:	ldr	x0, [x19, #16]
  40b580:	cmp	x0, x2
  40b584:	b.lt	40b5a0 <wcrtomb@plt+0x8860>  // b.tstop
  40b588:	str	x2, [x19, #8]
  40b58c:	cbnz	x2, 40b5dc <wcrtomb@plt+0x889c>
  40b590:	ldp	x19, x20, [sp, #16]
  40b594:	ldr	x21, [sp, #32]
  40b598:	ldp	x29, x30, [sp], #48
  40b59c:	ret
  40b5a0:	ldr	x0, [x19]
  40b5a4:	mov	x20, x1
  40b5a8:	bl	402ae0 <free@plt>
  40b5ac:	mov	x1, x19
  40b5b0:	mov	x4, #0x10                  	// #16
  40b5b4:	ldr	x5, [x20]
  40b5b8:	mov	x3, #0xffffffffffffffff    	// #-1
  40b5bc:	ldr	x2, [x1, #16]!
  40b5c0:	mov	x0, #0x0                   	// #0
  40b5c4:	sub	x2, x5, x2
  40b5c8:	bl	40ab60 <wcrtomb@plt+0x7e20>
  40b5cc:	ldr	x2, [x20]
  40b5d0:	str	x0, [x19]
  40b5d4:	str	x2, [x19, #8]
  40b5d8:	cbz	x2, 40b590 <wcrtomb@plt+0x8850>
  40b5dc:	ldr	x0, [x19]
  40b5e0:	lsl	x2, x2, #4
  40b5e4:	ldr	x1, [x21]
  40b5e8:	ldp	x19, x20, [sp, #16]
  40b5ec:	ldr	x21, [sp, #32]
  40b5f0:	ldp	x29, x30, [sp], #48
  40b5f4:	b	402650 <memcpy@plt>
  40b5f8:	stp	x29, x30, [sp, #-80]!
  40b5fc:	mov	x29, sp
  40b600:	stp	x21, x22, [sp, #32]
  40b604:	mov	x22, x0
  40b608:	stp	x23, x24, [sp, #48]
  40b60c:	mov	x24, x1
  40b610:	mov	w23, w2
  40b614:	ldr	x1, [x1, #8]
  40b618:	stp	x19, x20, [sp, #16]
  40b61c:	stp	x25, x26, [sp, #64]
  40b620:	cmp	x1, #0x0
  40b624:	ldr	x0, [x0, #296]
  40b628:	ldr	x7, [x22, #304]
  40b62c:	b.le	40b84c <wcrtomb@plt+0x8b0c>
  40b630:	ldr	x9, [x24]
  40b634:	mov	x20, #0x0                   	// #0
  40b638:	mov	x3, x9
  40b63c:	add	x5, x9, x1, lsl #4
  40b640:	ldr	w4, [x3, #8]
  40b644:	ldr	x2, [x3], #16
  40b648:	add	x4, x4, x2
  40b64c:	cmp	x5, x3
  40b650:	eor	x20, x20, x4
  40b654:	b.ne	40b640 <wcrtomb@plt+0x8900>  // b.any
  40b658:	cmp	x7, #0x0
  40b65c:	mov	x26, #0x0                   	// #0
  40b660:	mov	x19, #0x0                   	// #0
  40b664:	b.le	40b734 <wcrtomb@plt+0x89f4>
  40b668:	mov	x4, x0
  40b66c:	mov	x19, #0x0                   	// #0
  40b670:	b	40b684 <wcrtomb@plt+0x8944>
  40b674:	add	x19, x19, #0x1
  40b678:	add	x4, x4, #0x50
  40b67c:	cmp	x19, x7
  40b680:	b.ge	40b720 <wcrtomb@plt+0x89e0>  // b.tcont
  40b684:	ldr	x3, [x4]
  40b688:	cmp	x3, x20
  40b68c:	b.ne	40b674 <wcrtomb@plt+0x8934>  // b.any
  40b690:	ldr	x2, [x4, #16]
  40b694:	cmp	x2, x1
  40b698:	b.ne	40b674 <wcrtomb@plt+0x8934>  // b.any
  40b69c:	ldrb	w2, [x4, #32]
  40b6a0:	cmp	w2, w23
  40b6a4:	b.ne	40b674 <wcrtomb@plt+0x8934>  // b.any
  40b6a8:	cmp	x1, #0x0
  40b6ac:	b.le	40b878 <wcrtomb@plt+0x8b38>
  40b6b0:	ldr	x9, [x24]
  40b6b4:	mov	x3, #0x0                   	// #0
  40b6b8:	ldr	x8, [x4, #8]
  40b6bc:	add	x11, x9, #0x8
  40b6c0:	mov	x5, #0x0                   	// #0
  40b6c4:	add	x10, x8, #0x8
  40b6c8:	b	40b6ec <wcrtomb@plt+0x89ac>
  40b6cc:	ldr	x6, [x9, x3]
  40b6d0:	ldr	x2, [x8, x3]
  40b6d4:	add	x3, x3, #0x10
  40b6d8:	cmp	x6, x2
  40b6dc:	b.ne	40b6fc <wcrtomb@plt+0x89bc>  // b.any
  40b6e0:	add	x5, x5, #0x1
  40b6e4:	cmp	x5, x1
  40b6e8:	b.eq	40b704 <wcrtomb@plt+0x89c4>  // b.none
  40b6ec:	ldr	w2, [x11, x3]
  40b6f0:	ldr	w6, [x10, x3]
  40b6f4:	cmp	w2, w6
  40b6f8:	b.eq	40b6cc <wcrtomb@plt+0x898c>  // b.none
  40b6fc:	cmp	x5, x1
  40b700:	b.ne	40b674 <wcrtomb@plt+0x8934>  // b.any
  40b704:	mov	x0, x19
  40b708:	ldp	x19, x20, [sp, #16]
  40b70c:	ldp	x21, x22, [sp, #32]
  40b710:	ldp	x23, x24, [sp, #48]
  40b714:	ldp	x25, x26, [sp, #64]
  40b718:	ldp	x29, x30, [sp], #80
  40b71c:	ret
  40b720:	add	x26, x19, x19, lsl #2
  40b724:	cmp	x1, #0x0
  40b728:	lsl	x26, x26, #4
  40b72c:	b.le	40b86c <wcrtomb@plt+0x8b2c>
  40b730:	ldr	x9, [x24]
  40b734:	mov	x5, #0x0                   	// #0
  40b738:	mov	x25, #0x0                   	// #0
  40b73c:	mov	w6, #0x0                   	// #0
  40b740:	mov	w11, #0x1ff                 	// #511
  40b744:	ldr	x10, [x22, #336]
  40b748:	b	40b774 <wcrtomb@plt+0x8a34>
  40b74c:	orr	w4, w4, w3
  40b750:	and	w4, w4, w23
  40b754:	tst	x4, #0x7
  40b758:	csel	w6, w8, w6, ne  // ne = any
  40b75c:	cbnz	x25, 40b768 <wcrtomb@plt+0x8a28>
  40b760:	ldr	x3, [x22, #144]
  40b764:	ldr	x25, [x3, x2, lsl #3]
  40b768:	add	x5, x5, #0x1
  40b76c:	cmp	x5, x1
  40b770:	b.ge	40b7ac <wcrtomb@plt+0x8a6c>  // b.tcont
  40b774:	lsl	x2, x5, #4
  40b778:	ldr	x2, [x9, x2]
  40b77c:	ldr	w3, [x10, x2, lsl #2]
  40b780:	orr	w8, w6, w3
  40b784:	asr	w4, w3, #6
  40b788:	orr	w4, w4, w3, asr #3
  40b78c:	cbnz	w3, 40b74c <wcrtomb@plt+0x8a0c>
  40b790:	ldr	x3, [x22, #144]
  40b794:	add	x5, x5, #0x1
  40b798:	ldr	x2, [x3, x2, lsl #3]
  40b79c:	cmp	x2, #0x112
  40b7a0:	csel	w6, w6, w11, ne  // ne = any
  40b7a4:	cmp	x5, x1
  40b7a8:	b.lt	40b774 <wcrtomb@plt+0x8a34>  // b.tstop
  40b7ac:	and	w21, w6, #0xffff
  40b7b0:	ldr	x2, [x22, #312]
  40b7b4:	cmp	x2, x7
  40b7b8:	b.le	40b830 <wcrtomb@plt+0x8af0>
  40b7bc:	add	x2, x0, x26
  40b7c0:	str	x0, [x22, #296]
  40b7c4:	str	x20, [x0, x26]
  40b7c8:	add	x0, x2, #0x8
  40b7cc:	bl	40b148 <wcrtomb@plt+0x8408>
  40b7d0:	ldr	x2, [x22, #296]
  40b7d4:	add	x1, x24, #0x8
  40b7d8:	mov	x0, x24
  40b7dc:	add	x2, x2, x26
  40b7e0:	add	x2, x2, #0x8
  40b7e4:	bl	40b560 <wcrtomb@plt+0x8820>
  40b7e8:	ldr	x0, [x22, #296]
  40b7ec:	mov	x2, #0xffffffffffffffff    	// #-1
  40b7f0:	add	x0, x0, x26
  40b7f4:	strb	w23, [x0, #32]
  40b7f8:	strh	w21, [x0, #34]
  40b7fc:	ldr	x1, [x22, #304]
  40b800:	stp	x25, xzr, [x0, #40]
  40b804:	str	xzr, [x0, #56]
  40b808:	add	x1, x1, #0x1
  40b80c:	str	x2, [x0, #72]
  40b810:	mov	x0, x19
  40b814:	str	x1, [x22, #304]
  40b818:	ldp	x19, x20, [sp, #16]
  40b81c:	ldp	x21, x22, [sp, #32]
  40b820:	ldp	x23, x24, [sp, #48]
  40b824:	ldp	x25, x26, [sp, #64]
  40b828:	ldp	x29, x30, [sp], #80
  40b82c:	ret
  40b830:	add	x1, x22, #0x138
  40b834:	mov	x4, #0x50                  	// #80
  40b838:	mov	x3, #0xffffffffffffffff    	// #-1
  40b83c:	mov	x2, #0x1                   	// #1
  40b840:	bl	40ab60 <wcrtomb@plt+0x7e20>
  40b844:	ldr	x1, [x24, #8]
  40b848:	b	40b7bc <wcrtomb@plt+0x8a7c>
  40b84c:	cmp	x7, #0x0
  40b850:	mov	x20, #0x0                   	// #0
  40b854:	b.gt	40b668 <wcrtomb@plt+0x8928>
  40b858:	mov	w21, #0x0                   	// #0
  40b85c:	mov	x26, #0x0                   	// #0
  40b860:	mov	x19, #0x0                   	// #0
  40b864:	mov	x25, #0x0                   	// #0
  40b868:	b	40b7b0 <wcrtomb@plt+0x8a70>
  40b86c:	mov	w21, #0x0                   	// #0
  40b870:	mov	x25, #0x0                   	// #0
  40b874:	b	40b7b0 <wcrtomb@plt+0x8a70>
  40b878:	mov	x5, #0x0                   	// #0
  40b87c:	b	40b6fc <wcrtomb@plt+0x89bc>
  40b880:	stp	x29, x30, [sp, #-64]!
  40b884:	mov	x29, sp
  40b888:	stp	x19, x20, [sp, #16]
  40b88c:	mov	x20, x3
  40b890:	mov	x19, x5
  40b894:	stp	x21, x22, [sp, #32]
  40b898:	mov	x21, x1
  40b89c:	mov	w22, w4
  40b8a0:	ldr	x3, [x1]
  40b8a4:	stp	x23, x24, [sp, #48]
  40b8a8:	mov	x24, x0
  40b8ac:	ldr	x1, [x5, #16]
  40b8b0:	mov	x23, x2
  40b8b4:	ldr	x0, [x20]
  40b8b8:	sub	x1, x1, x3
  40b8bc:	cmp	x1, x0
  40b8c0:	b.lt	40b9c0 <wcrtomb@plt+0x8c80>  // b.tstop
  40b8c4:	str	xzr, [x19, #8]
  40b8c8:	mov	x5, #0x0                   	// #0
  40b8cc:	mov	x7, #0x0                   	// #0
  40b8d0:	ldr	x9, [x20]
  40b8d4:	ldr	x10, [x21]
  40b8d8:	cmp	x7, x10
  40b8dc:	b.lt	40b930 <wcrtomb@plt+0x8bf0>  // b.tstop
  40b8e0:	cmp	x5, x9
  40b8e4:	b.ge	40b9ac <wcrtomb@plt+0x8c6c>  // b.tcont
  40b8e8:	ldr	x6, [x23]
  40b8ec:	add	x6, x6, x5, lsl #4
  40b8f0:	ldr	w8, [x6, #8]
  40b8f4:	ands	w8, w22, w8
  40b8f8:	b.eq	40b924 <wcrtomb@plt+0x8be4>  // b.none
  40b8fc:	ldp	x1, x0, [x19]
  40b900:	ldr	x4, [x6]
  40b904:	add	x3, x0, #0x1
  40b908:	lsl	x0, x0, #4
  40b90c:	add	x2, x1, x0
  40b910:	str	x4, [x1, x0]
  40b914:	str	x3, [x19, #8]
  40b918:	ldr	x9, [x20]
  40b91c:	ldr	x10, [x21]
  40b920:	str	w8, [x2, #8]
  40b924:	add	x5, x5, #0x1
  40b928:	cmp	x7, x10
  40b92c:	b.ge	40b8e0 <wcrtomb@plt+0x8ba0>  // b.tcont
  40b930:	ldr	x11, [x24]
  40b934:	lsl	x6, x7, #4
  40b938:	cmp	x5, x9
  40b93c:	mov	w1, #0x0                   	// #0
  40b940:	add	x2, x11, x6
  40b944:	ldr	x0, [x11, x6]
  40b948:	b.lt	40b980 <wcrtomb@plt+0x8c40>  // b.tstop
  40b94c:	ldp	x9, x6, [x19]
  40b950:	add	x7, x7, #0x1
  40b954:	ldr	w8, [x2, #8]
  40b958:	orr	w8, w8, w1
  40b95c:	add	x3, x6, #0x1
  40b960:	lsl	x6, x6, #4
  40b964:	add	x2, x9, x6
  40b968:	str	x0, [x9, x6]
  40b96c:	str	x3, [x19, #8]
  40b970:	ldr	x9, [x20]
  40b974:	ldr	x10, [x21]
  40b978:	str	w8, [x2, #8]
  40b97c:	b	40b8d8 <wcrtomb@plt+0x8b98>
  40b980:	ldr	x4, [x23]
  40b984:	lsl	x3, x5, #4
  40b988:	add	x6, x4, x3
  40b98c:	ldr	x3, [x4, x3]
  40b990:	cmp	x3, x0
  40b994:	b.lt	40b8f0 <wcrtomb@plt+0x8bb0>  // b.tstop
  40b998:	b.ne	40b94c <wcrtomb@plt+0x8c0c>  // b.any
  40b99c:	ldr	w8, [x6, #8]
  40b9a0:	add	x5, x5, #0x1
  40b9a4:	and	w1, w22, w8
  40b9a8:	b	40b94c <wcrtomb@plt+0x8c0c>
  40b9ac:	ldp	x19, x20, [sp, #16]
  40b9b0:	ldp	x21, x22, [sp, #32]
  40b9b4:	ldp	x23, x24, [sp, #48]
  40b9b8:	ldp	x29, x30, [sp], #64
  40b9bc:	ret
  40b9c0:	ldr	x0, [x5]
  40b9c4:	bl	402ae0 <free@plt>
  40b9c8:	mov	x1, x19
  40b9cc:	mov	x4, #0x10                  	// #16
  40b9d0:	ldr	x0, [x21]
  40b9d4:	mov	x3, #0xffffffffffffffff    	// #-1
  40b9d8:	str	x0, [x1, #16]!
  40b9dc:	mov	x0, #0x0                   	// #0
  40b9e0:	ldr	x2, [x20]
  40b9e4:	bl	40ab60 <wcrtomb@plt+0x7e20>
  40b9e8:	str	x0, [x19]
  40b9ec:	b	40b8c4 <wcrtomb@plt+0x8b84>
  40b9f0:	stp	x29, x30, [sp, #-32]!
  40b9f4:	mov	x29, sp
  40b9f8:	stp	x19, x20, [sp, #16]
  40b9fc:	mov	x20, x0
  40ba00:	ldr	x0, [x0, #280]
  40ba04:	bl	402ae0 <free@plt>
  40ba08:	ldr	x0, [x20, #96]
  40ba0c:	bl	402ae0 <free@plt>
  40ba10:	ldr	x0, [x20, #408]
  40ba14:	bl	402ae0 <free@plt>
  40ba18:	ldr	x0, [x20, #432]
  40ba1c:	cbz	x0, 40ba5c <wcrtomb@plt+0x8d1c>
  40ba20:	ldr	x1, [x20, #352]
  40ba24:	tbnz	x1, #63, 40ba4c <wcrtomb@plt+0x8d0c>
  40ba28:	mov	x19, #0xffffffffffffffff    	// #-1
  40ba2c:	nop
  40ba30:	ldr	x0, [x0, x19, lsl #3]
  40ba34:	add	x19, x19, #0x1
  40ba38:	bl	402ae0 <free@plt>
  40ba3c:	ldr	x0, [x20, #352]
  40ba40:	cmp	x19, x0
  40ba44:	ldr	x0, [x20, #432]
  40ba48:	b.lt	40ba30 <wcrtomb@plt+0x8cf0>  // b.tstop
  40ba4c:	ldp	x19, x20, [sp, #16]
  40ba50:	sub	x0, x0, #0x10
  40ba54:	ldp	x29, x30, [sp], #32
  40ba58:	b	402ae0 <free@plt>
  40ba5c:	ldp	x19, x20, [sp, #16]
  40ba60:	ldp	x29, x30, [sp], #32
  40ba64:	ret
  40ba68:	stp	x29, x30, [sp, #-48]!
  40ba6c:	mov	x29, sp
  40ba70:	stp	x19, x20, [sp, #16]
  40ba74:	mov	x19, x2
  40ba78:	mov	x20, x1
  40ba7c:	ldr	x2, [x2, #8]
  40ba80:	ldr	x1, [x19, #16]
  40ba84:	str	x21, [sp, #32]
  40ba88:	mov	x21, x0
  40ba8c:	cmp	x2, x1
  40ba90:	ldr	x0, [x19]
  40ba94:	b.lt	40bab0 <wcrtomb@plt+0x8d70>  // b.tstop
  40ba98:	mov	x4, #0x10                  	// #16
  40ba9c:	mov	x2, #0x1                   	// #1
  40baa0:	add	x1, x19, x4
  40baa4:	mov	x3, #0xffffffffffffffff    	// #-1
  40baa8:	bl	40ab60 <wcrtomb@plt+0x7e20>
  40baac:	ldr	x2, [x19, #8]
  40bab0:	add	x1, x0, x2, lsl #4
  40bab4:	add	x2, x2, #0x1
  40bab8:	stp	x0, x2, [x19]
  40babc:	stp	x21, x20, [x1]
  40bac0:	ldp	x19, x20, [sp, #16]
  40bac4:	ldr	x21, [sp, #32]
  40bac8:	ldp	x29, x30, [sp], #48
  40bacc:	ret
  40bad0:	stp	x29, x30, [sp, #-64]!
  40bad4:	mov	x29, sp
  40bad8:	stp	x19, x20, [sp, #16]
  40badc:	stp	x21, x22, [sp, #32]
  40bae0:	mov	x21, x0
  40bae4:	ldp	x0, x20, [x2]
  40bae8:	stp	x23, x24, [sp, #48]
  40baec:	mov	x23, x2
  40baf0:	mov	x24, x1
  40baf4:	cmp	x20, #0x0
  40baf8:	b.le	40bbd4 <wcrtomb@plt+0x8e94>
  40bafc:	mov	x5, x20
  40bb00:	mov	x19, #0x0                   	// #0
  40bb04:	b	40bb14 <wcrtomb@plt+0x8dd4>
  40bb08:	add	x19, x3, #0x1
  40bb0c:	cmp	x5, x19
  40bb10:	b.le	40bb58 <wcrtomb@plt+0x8e18>
  40bb14:	add	x3, x5, x19
  40bb18:	asr	x3, x3, #1
  40bb1c:	lsl	x4, x3, #4
  40bb20:	add	x6, x0, x4
  40bb24:	ldr	x4, [x0, x4]
  40bb28:	cmp	x4, x21
  40bb2c:	b.lt	40bb08 <wcrtomb@plt+0x8dc8>  // b.tstop
  40bb30:	mov	x5, x3
  40bb34:	b.ne	40bb0c <wcrtomb@plt+0x8dcc>  // b.any
  40bb38:	ldr	w1, [x6, #8]
  40bb3c:	ldp	x19, x20, [sp, #16]
  40bb40:	orr	w1, w1, w24
  40bb44:	str	w1, [x6, #8]
  40bb48:	ldp	x21, x22, [sp, #32]
  40bb4c:	ldp	x23, x24, [sp, #48]
  40bb50:	ldp	x29, x30, [sp], #64
  40bb54:	ret
  40bb58:	ldr	x1, [x23, #16]
  40bb5c:	lsl	x22, x19, #4
  40bb60:	mov	x5, x20
  40bb64:	cmp	x20, x1
  40bb68:	b.ge	40bbb8 <wcrtomb@plt+0x8e78>  // b.tcont
  40bb6c:	str	x0, [x23]
  40bb70:	add	x4, x0, x22
  40bb74:	cmp	x20, x19
  40bb78:	b.le	40bb98 <wcrtomb@plt+0x8e58>
  40bb7c:	add	x3, x0, x20, lsl #4
  40bb80:	add	x19, x0, x19, lsl #4
  40bb84:	nop
  40bb88:	ldp	x0, x1, [x3, #-16]
  40bb8c:	stp	x0, x1, [x3], #-16
  40bb90:	cmp	x19, x3
  40bb94:	b.ne	40bb88 <wcrtomb@plt+0x8e48>  // b.any
  40bb98:	stp	x21, x24, [x4]
  40bb9c:	add	x5, x5, #0x1
  40bba0:	str	x5, [x23, #8]
  40bba4:	ldp	x19, x20, [sp, #16]
  40bba8:	ldp	x21, x22, [sp, #32]
  40bbac:	ldp	x23, x24, [sp, #48]
  40bbb0:	ldp	x29, x30, [sp], #64
  40bbb4:	ret
  40bbb8:	add	x1, x23, #0x10
  40bbbc:	mov	x4, #0x10                  	// #16
  40bbc0:	mov	x3, #0xffffffffffffffff    	// #-1
  40bbc4:	mov	x2, #0x1                   	// #1
  40bbc8:	bl	40ab60 <wcrtomb@plt+0x7e20>
  40bbcc:	ldr	x5, [x23, #8]
  40bbd0:	b	40bb6c <wcrtomb@plt+0x8e2c>
  40bbd4:	ldr	x1, [x2, #16]
  40bbd8:	cmp	x20, x1
  40bbdc:	b.ge	40bbec <wcrtomb@plt+0x8eac>  // b.tcont
  40bbe0:	mov	x5, x20
  40bbe4:	mov	x4, x0
  40bbe8:	b	40bb98 <wcrtomb@plt+0x8e58>
  40bbec:	add	x1, x2, #0x10
  40bbf0:	mov	x22, #0x0                   	// #0
  40bbf4:	mov	x19, #0x0                   	// #0
  40bbf8:	b	40bbbc <wcrtomb@plt+0x8e7c>
  40bbfc:	nop
  40bc00:	stp	x29, x30, [sp, #-272]!
  40bc04:	mov	x29, sp
  40bc08:	stp	x19, x20, [sp, #16]
  40bc0c:	and	w20, w1, #0xff
  40bc10:	ldr	x1, [x0, #176]
  40bc14:	stp	x21, x22, [sp, #32]
  40bc18:	stp	x23, x24, [sp, #48]
  40bc1c:	cmp	xzr, x1, lsr #59
  40bc20:	stp	x25, x26, [sp, #64]
  40bc24:	cset	x2, ne  // ne = any
  40bc28:	stp	x27, x28, [sp, #80]
  40bc2c:	tbnz	x1, #58, 40c838 <wcrtomb@plt+0x9af8>
  40bc30:	cbnz	x2, 40c838 <wcrtomb@plt+0x9af8>
  40bc34:	mov	x21, x0
  40bc38:	lsl	x0, x1, #5
  40bc3c:	bl	4125f8 <wcrtomb@plt+0xf8b8>
  40bc40:	mov	x22, #0x18                  	// #24
  40bc44:	mov	x25, x0
  40bc48:	str	x25, [sp, #160]
  40bc4c:	ldp	x1, x3, [x21, #168]
  40bc50:	mov	x23, #0x1                   	// #1
  40bc54:	umulh	x2, x1, x22
  40bc58:	add	x27, x25, x3, lsl #4
  40bc5c:	mul	x0, x1, x22
  40bc60:	cmp	x2, #0x0
  40bc64:	cset	x7, ne  // ne = any
  40bc68:	cmp	x0, #0x0
  40bc6c:	csel	x28, x7, x23, ge  // ge = tcont
  40bc70:	cbnz	x28, 40c838 <wcrtomb@plt+0x9af8>
  40bc74:	add	x1, x1, x1, lsl #1
  40bc78:	mov	x19, #0x0                   	// #0
  40bc7c:	lsl	x0, x1, #3
  40bc80:	bl	4125f8 <wcrtomb@plt+0xf8b8>
  40bc84:	mov	x24, x0
  40bc88:	mov	x1, #0x105                 	// #261
  40bc8c:	mov	x0, x21
  40bc90:	str	x24, [sp, #152]
  40bc94:	bl	40b008 <wcrtomb@plt+0x82c8>
  40bc98:	ldr	x1, [x21, #176]
  40bc9c:	strb	w20, [x21, #328]
  40bca0:	add	x0, sp, #0xe0
  40bca4:	bl	40b148 <wcrtomb@plt+0x8408>
  40bca8:	ldr	x0, [x21, #152]
  40bcac:	mov	x1, x22
  40bcb0:	bl	412790 <wcrtomb@plt+0xfa50>
  40bcb4:	str	x0, [x21, #320]
  40bcb8:	ldr	x1, [x21, #152]
  40bcbc:	cmp	x1, #0x0
  40bcc0:	b.le	40bd70 <wcrtomb@plt+0x9030>
  40bcc4:	add	x20, sp, #0xd0
  40bcc8:	str	x23, [sp, #136]
  40bccc:	str	x28, [sp, #168]
  40bcd0:	mov	x28, x21
  40bcd4:	mov	x21, x19
  40bcd8:	b	40bd0c <wcrtomb@plt+0x8fcc>
  40bcdc:	cmp	x0, #0x101
  40bce0:	b.gt	40c414 <wcrtomb@plt+0x96d4>
  40bce4:	cmp	x0, #0x100
  40bce8:	b.eq	40c400 <wcrtomb@plt+0x96c0>  // b.none
  40bcec:	cmp	x0, #0x101
  40bcf0:	b.ne	40c3c8 <wcrtomb@plt+0x9688>  // b.any
  40bcf4:	sub	x22, x24, #0x18
  40bcf8:	mov	w0, #0x1                   	// #1
  40bcfc:	strb	w0, [x22]
  40bd00:	add	x21, x21, #0x1
  40bd04:	cmp	x1, x21
  40bd08:	b.le	40bd68 <wcrtomb@plt+0x9028>
  40bd0c:	ldr	x2, [x28, #144]
  40bd10:	lsl	x23, x21, #3
  40bd14:	ldr	x0, [x2, x21, lsl #3]
  40bd18:	cmp	x0, #0x103
  40bd1c:	b.le	40bcdc <wcrtomb@plt+0x8f9c>
  40bd20:	cmp	x0, #0x105
  40bd24:	b.eq	40c498 <wcrtomb@plt+0x9758>  // b.none
  40bd28:	cmp	x0, #0x106
  40bd2c:	b.ne	40c3c8 <wcrtomb@plt+0x9688>  // b.any
  40bd30:	ldp	x3, x0, [x24, #-40]
  40bd34:	add	x21, x21, #0x1
  40bd38:	ldp	x2, x5, [x24, #-16]
  40bd3c:	cmp	x1, x21
  40bd40:	ldurb	w4, [x24, #-24]
  40bd44:	add	x3, x3, x2
  40bd48:	ldurb	w2, [x24, #-48]
  40bd4c:	add	x0, x0, x5
  40bd50:	stp	x3, x0, [x24, #-40]
  40bd54:	orr	w2, w2, w4
  40bd58:	sturb	w2, [x24, #-48]
  40bd5c:	sub	x24, x24, #0x18
  40bd60:	b.gt	40bd0c <wcrtomb@plt+0x8fcc>
  40bd64:	nop
  40bd68:	mov	x21, x28
  40bd6c:	ldr	x28, [sp, #168]
  40bd70:	add	x0, sp, #0xf8
  40bd74:	ldr	x1, [x21, #176]
  40bd78:	add	x20, x0, #0x8
  40bd7c:	adrp	x19, 421000 <_obstack_memory_used@@Base+0xe3b0>
  40bd80:	mov	x22, #0x0                   	// #0
  40bd84:	add	x19, x19, #0x6d8
  40bd88:	mov	x23, #0x0                   	// #0
  40bd8c:	bl	40b148 <wcrtomb@plt+0x8408>
  40bd90:	ldr	x1, [x21, #152]
  40bd94:	cmp	x1, #0x0
  40bd98:	b.le	40bddc <wcrtomb@plt+0x909c>
  40bd9c:	nop
  40bda0:	ldr	x0, [x21, #320]
  40bda4:	add	x0, x0, x23
  40bda8:	ldr	x2, [x0, #8]
  40bdac:	cmp	x2, #0x0
  40bdb0:	b.le	40bdcc <wcrtomb@plt+0x908c>
  40bdb4:	ldr	x2, [x21, #144]
  40bdb8:	ldr	x2, [x2, x22, lsl #3]
  40bdbc:	cmp	x2, #0x10a
  40bdc0:	sub	x3, x2, #0x100
  40bdc4:	ccmp	x3, #0x11, #0x2, ne  // ne = any
  40bdc8:	b.ls	40c750 <wcrtomb@plt+0x9a10>  // b.plast
  40bdcc:	add	x22, x22, #0x1
  40bdd0:	add	x23, x23, #0x18
  40bdd4:	cmp	x22, x1
  40bdd8:	b.lt	40bda0 <wcrtomb@plt+0x9060>  // b.tstop
  40bddc:	ldr	x0, [sp, #248]
  40bde0:	bl	402ae0 <free@plt>
  40bde4:	ldr	x0, [x21, #152]
  40bde8:	bl	4127c8 <wcrtomb@plt+0xfa88>
  40bdec:	mov	x19, x0
  40bdf0:	ldr	x8, [x21, #152]
  40bdf4:	cmp	x8, #0x0
  40bdf8:	b.le	40be70 <wcrtomb@plt+0x9130>
  40bdfc:	ldr	x4, [x21, #320]
  40be00:	mov	w5, #0x8                   	// #8
  40be04:	nop
  40be08:	ldr	x3, [x4, #8]
  40be0c:	cmp	x3, #0x0
  40be10:	b.le	40be60 <wcrtomb@plt+0x9120>
  40be14:	ldr	x1, [x4]
  40be18:	add	x3, x1, x3, lsl #4
  40be1c:	b	40be3c <wcrtomb@plt+0x90fc>
  40be20:	ldrb	w0, [x19, x2]
  40be24:	b.ge	40c598 <wcrtomb@plt+0x9858>  // b.tcont
  40be28:	orr	w0, w0, #0x2
  40be2c:	strb	w0, [x19, x2]
  40be30:	add	x1, x1, #0x10
  40be34:	cmp	x3, x1
  40be38:	b.eq	40be60 <wcrtomb@plt+0x9120>  // b.none
  40be3c:	ldr	x2, [x1]
  40be40:	cmp	x2, x28
  40be44:	b.ne	40be20 <wcrtomb@plt+0x90e0>  // b.any
  40be48:	ldrb	w0, [x19, x28]
  40be4c:	add	x1, x1, #0x10
  40be50:	cmp	x3, x1
  40be54:	orr	w0, w0, #0x1
  40be58:	strb	w0, [x19, x28]
  40be5c:	b.ne	40be3c <wcrtomb@plt+0x90fc>  // b.any
  40be60:	add	x28, x28, #0x1
  40be64:	add	x4, x4, #0x18
  40be68:	cmp	x28, x8
  40be6c:	b.ne	40be08 <wcrtomb@plt+0x90c8>  // b.any
  40be70:	ldrb	w20, [x19]
  40be74:	add	x0, sp, #0xf8
  40be78:	ldr	x1, [x21, #176]
  40be7c:	orr	w20, w20, #0x10
  40be80:	strb	w20, [x19]
  40be84:	bl	40b148 <wcrtomb@plt+0x8408>
  40be88:	ldr	x1, [x21, #152]
  40be8c:	cmp	xzr, x1, lsr #62
  40be90:	lsl	x0, x1, #2
  40be94:	cset	x2, ne  // ne = any
  40be98:	tbnz	x1, #61, 40c838 <wcrtomb@plt+0x9af8>
  40be9c:	cbnz	x2, 40c838 <wcrtomb@plt+0x9af8>
  40bea0:	bl	4125f8 <wcrtomb@plt+0xf8b8>
  40bea4:	str	x0, [x21, #336]
  40bea8:	ldr	x1, [x21, #152]
  40beac:	cmp	x1, #0x0
  40beb0:	b.le	40bfac <wcrtomb@plt+0x926c>
  40beb4:	add	x0, sp, #0x100
  40beb8:	str	x0, [sp, #168]
  40bebc:	mov	x23, #0x0                   	// #0
  40bec0:	mov	x27, x19
  40bec4:	mov	x26, x23
  40bec8:	mov	x25, x21
  40becc:	tbnz	w20, #4, 40bee4 <wcrtomb@plt+0x91a4>
  40bed0:	add	x26, x26, #0x1
  40bed4:	cmp	x26, x1
  40bed8:	b.ge	40bfa4 <wcrtomb@plt+0x9264>  // b.tcont
  40bedc:	ldrb	w20, [x27, x26]
  40bee0:	tbz	w20, #4, 40bed0 <wcrtomb@plt+0x9190>
  40bee4:	ldr	x2, [x25, #320]
  40bee8:	add	x21, x26, x26, lsl #1
  40beec:	ldr	x0, [x25, #336]
  40bef0:	lsl	x3, x26, #2
  40bef4:	add	x21, x2, x21, lsl #3
  40bef8:	stp	x2, x3, [sp, #136]
  40befc:	mov	x28, #0x0                   	// #0
  40bf00:	str	wzr, [x0, x26, lsl #2]
  40bf04:	ldr	x10, [x21, #8]
  40bf08:	cmp	x10, #0x0
  40bf0c:	b.le	40bf94 <wcrtomb@plt+0x9254>
  40bf10:	mov	x20, #0x0                   	// #0
  40bf14:	b	40bf48 <wcrtomb@plt+0x9208>
  40bf18:	ldrb	w24, [x27, x23]
  40bf1c:	tst	w24, #0x6
  40bf20:	b.eq	40c5ac <wcrtomb@plt+0x986c>  // b.none
  40bf24:	add	x0, x0, x28, lsl #4
  40bf28:	add	x28, x28, #0x1
  40bf2c:	ldp	x2, x3, [x3]
  40bf30:	orr	w24, w24, #0x10
  40bf34:	stp	x2, x3, [x0]
  40bf38:	strb	w24, [x27, x23]
  40bf3c:	add	x20, x20, #0x1
  40bf40:	cmp	x20, x10
  40bf44:	b.ge	40bf90 <wcrtomb@plt+0x9250>  // b.tcont
  40bf48:	ldr	x0, [x21]
  40bf4c:	lsl	x22, x20, #4
  40bf50:	add	x3, x0, x22
  40bf54:	ldr	w1, [x3, #8]
  40bf58:	cbz	w1, 40bf3c <wcrtomb@plt+0x91fc>
  40bf5c:	ldr	x23, [x0, x22]
  40bf60:	ldr	x4, [x25, #144]
  40bf64:	ldr	x5, [x4, x23, lsl #3]
  40bf68:	tbz	x5, #63, 40bf18 <wcrtomb@plt+0x91d8>
  40bf6c:	ldr	x3, [sp, #144]
  40bf70:	add	x20, x20, #0x1
  40bf74:	ldr	x2, [x25, #336]
  40bf78:	cmp	x20, x10
  40bf7c:	ldr	w0, [x2, x3]
  40bf80:	orr	w1, w0, w1
  40bf84:	str	w1, [x2, x3]
  40bf88:	b.lt	40bf48 <wcrtomb@plt+0x9208>  // b.tstop
  40bf8c:	nop
  40bf90:	ldr	x1, [x25, #152]
  40bf94:	str	x28, [x21, #8]
  40bf98:	add	x26, x26, #0x1
  40bf9c:	cmp	x26, x1
  40bfa0:	b.lt	40bedc <wcrtomb@plt+0x919c>  // b.tstop
  40bfa4:	mov	x19, x27
  40bfa8:	mov	x21, x25
  40bfac:	cmp	xzr, x1, lsr #61
  40bfb0:	lsl	x0, x1, #3
  40bfb4:	cset	x2, ne  // ne = any
  40bfb8:	tbnz	x1, #60, 40c838 <wcrtomb@plt+0x9af8>
  40bfbc:	cbnz	x2, 40c838 <wcrtomb@plt+0x9af8>
  40bfc0:	bl	4125f8 <wcrtomb@plt+0xf8b8>
  40bfc4:	mov	x20, x0
  40bfc8:	ldr	x1, [x21, #152]
  40bfcc:	str	xzr, [x0], #8
  40bfd0:	mov	x2, #0xffffffffffffffff    	// #-1
  40bfd4:	cmp	x1, #0x1
  40bfd8:	add	x1, x20, x1, lsl #3
  40bfdc:	b.le	40bfec <wcrtomb@plt+0x92ac>
  40bfe0:	str	x2, [x0], #8
  40bfe4:	cmp	x1, x0
  40bfe8:	b.ne	40bfe0 <wcrtomb@plt+0x92a0>  // b.any
  40bfec:	ldr	x1, [x21, #176]
  40bff0:	cmp	xzr, x1, lsr #61
  40bff4:	lsl	x0, x1, #3
  40bff8:	cset	x2, ne  // ne = any
  40bffc:	tbnz	x1, #60, 40c838 <wcrtomb@plt+0x9af8>
  40c000:	cbnz	x2, 40c838 <wcrtomb@plt+0x9af8>
  40c004:	bl	4125f8 <wcrtomb@plt+0xf8b8>
  40c008:	mov	x28, x0
  40c00c:	ldr	x1, [x21, #176]
  40c010:	mov	x2, #0x18                  	// #24
  40c014:	umulh	x0, x1, x2
  40c018:	mul	x2, x1, x2
  40c01c:	cmp	x0, #0x0
  40c020:	cset	x0, ne  // ne = any
  40c024:	tbnz	x2, #63, 40c838 <wcrtomb@plt+0x9af8>
  40c028:	cbnz	x0, 40c838 <wcrtomb@plt+0x9af8>
  40c02c:	add	x1, x1, x1, lsl #1
  40c030:	lsl	x0, x1, #3
  40c034:	bl	4125f8 <wcrtomb@plt+0xf8b8>
  40c038:	mov	x22, x0
  40c03c:	ldr	x1, [x21, #176]
  40c040:	cmp	xzr, x1, lsr #62
  40c044:	lsl	x0, x1, #2
  40c048:	cset	x24, ne  // ne = any
  40c04c:	cmp	x0, #0x0
  40c050:	csinc	x24, x24, xzr, ge  // ge = tcont
  40c054:	cbnz	x24, 40c838 <wcrtomb@plt+0x9af8>
  40c058:	bl	4125f8 <wcrtomb@plt+0xf8b8>
  40c05c:	mov	x27, x0
  40c060:	ldrb	w1, [x21, #1048]
  40c064:	cbnz	w1, 40c6cc <wcrtomb@plt+0x998c>
  40c068:	ldr	x0, [x21, #152]
  40c06c:	mov	x26, #0x0                   	// #0
  40c070:	ldr	x1, [x21, #320]
  40c074:	cmp	x0, #0x0
  40c078:	b.le	40c6ec <wcrtomb@plt+0x99ac>
  40c07c:	adrp	x0, 40a000 <wcrtomb@plt+0x72c0>
  40c080:	mov	x25, #0x0                   	// #0
  40c084:	add	x0, x0, #0xa50
  40c088:	mov	x23, #0x1                   	// #1
  40c08c:	stp	x0, x19, [sp, #104]
  40c090:	str	x24, [sp, #120]
  40c094:	nop
  40c098:	add	x19, x25, x25, lsl #1
  40c09c:	ldr	x2, [x20, x25, lsl #3]
  40c0a0:	lsl	x24, x19, #3
  40c0a4:	add	x3, x1, x24
  40c0a8:	cmn	x2, #0x1
  40c0ac:	ldr	x0, [x1, x19, lsl #3]
  40c0b0:	b.eq	40c6f4 <wcrtomb@plt+0x99b4>  // b.none
  40c0b4:	ldr	x4, [x21, #144]
  40c0b8:	add	x1, x2, x2, lsl #1
  40c0bc:	ldr	x6, [x21, #336]
  40c0c0:	add	x1, x22, x1, lsl #3
  40c0c4:	ldr	x4, [x4, x25, lsl #3]
  40c0c8:	str	x4, [x28, x2, lsl #3]
  40c0cc:	ldp	x4, x5, [x3]
  40c0d0:	stp	x4, x5, [x1]
  40c0d4:	ldr	w5, [x6, x25, lsl #2]
  40c0d8:	ldr	x4, [x3, #16]
  40c0dc:	str	w5, [x27, x2, lsl #2]
  40c0e0:	str	x4, [x1, #16]
  40c0e4:	cbz	x26, 40c0f4 <wcrtomb@plt+0x93b4>
  40c0e8:	ldr	x1, [x21, #280]
  40c0ec:	ldrb	w1, [x1, x25]
  40c0f0:	strb	w1, [x26, x2]
  40c0f4:	ldr	x1, [x3, #8]
  40c0f8:	cmp	x1, #0x0
  40c0fc:	b.le	40c130 <wcrtomb@plt+0x93f0>
  40c100:	mov	x2, x0
  40c104:	add	x5, x0, x1, lsl #4
  40c108:	ldr	x4, [x2]
  40c10c:	ldr	x3, [x20, x4, lsl #3]
  40c110:	cmn	x3, #0x1
  40c114:	b.ne	40c124 <wcrtomb@plt+0x93e4>  // b.any
  40c118:	mov	x3, x23
  40c11c:	str	x23, [x20, x4, lsl #3]
  40c120:	add	x23, x23, #0x1
  40c124:	str	x3, [x2], #16
  40c128:	cmp	x5, x2
  40c12c:	b.ne	40c108 <wcrtomb@plt+0x93c8>  // b.any
  40c130:	ldr	x3, [sp, #104]
  40c134:	mov	x2, #0x10                  	// #16
  40c138:	bl	402730 <qsort@plt>
  40c13c:	ldr	x1, [x21, #320]
  40c140:	add	x25, x25, #0x1
  40c144:	ldr	x0, [x21, #152]
  40c148:	cmp	x25, x0
  40c14c:	b.lt	40c098 <wcrtomb@plt+0x9358>  // b.tstop
  40c150:	ldp	x19, x24, [sp, #112]
  40c154:	mov	x0, #0x0                   	// #0
  40c158:	b	40c160 <wcrtomb@plt+0x9420>
  40c15c:	ldr	x1, [x21, #320]
  40c160:	add	x2, x22, x0
  40c164:	ldr	x4, [x21, #144]
  40c168:	add	x1, x1, x0
  40c16c:	ldr	x3, [x21, #336]
  40c170:	ldr	x5, [x28, x24, lsl #3]
  40c174:	str	x5, [x4, x24, lsl #3]
  40c178:	ldp	x4, x5, [x2]
  40c17c:	stp	x4, x5, [x1]
  40c180:	ldr	w6, [x27, x24, lsl #2]
  40c184:	ldr	x2, [x2, #16]
  40c188:	str	x2, [x1, #16]
  40c18c:	str	w6, [x3, x24, lsl #2]
  40c190:	cbz	x26, 40c1a0 <wcrtomb@plt+0x9460>
  40c194:	ldr	x1, [x21, #280]
  40c198:	ldrb	w2, [x26, x24]
  40c19c:	strb	w2, [x1, x24]
  40c1a0:	add	x24, x24, #0x1
  40c1a4:	add	x0, x0, #0x18
  40c1a8:	cmp	x24, x23
  40c1ac:	b.ne	40c15c <wcrtomb@plt+0x941c>  // b.any
  40c1b0:	str	x24, [x21, #152]
  40c1b4:	mov	x0, x28
  40c1b8:	str	x24, [x21, #176]
  40c1bc:	mov	x23, #0x0                   	// #0
  40c1c0:	mov	x24, #0x1                   	// #1
  40c1c4:	bl	402ae0 <free@plt>
  40c1c8:	mov	x0, x22
  40c1cc:	bl	402ae0 <free@plt>
  40c1d0:	mov	x0, x27
  40c1d4:	bl	402ae0 <free@plt>
  40c1d8:	mov	x0, x26
  40c1dc:	bl	402ae0 <free@plt>
  40c1e0:	mov	x0, x20
  40c1e4:	bl	402ae0 <free@plt>
  40c1e8:	ldr	x0, [sp, #248]
  40c1ec:	bl	402ae0 <free@plt>
  40c1f0:	mov	x0, x19
  40c1f4:	bl	402ae0 <free@plt>
  40c1f8:	mov	x0, #0x1ff                 	// #511
  40c1fc:	bfxil	x23, x0, #0, #32
  40c200:	mov	x0, #0x10                  	// #16
  40c204:	bl	4125f8 <wcrtomb@plt+0xf8b8>
  40c208:	mov	x3, x0
  40c20c:	mov	x1, x23
  40c210:	mov	x0, #0x0                   	// #0
  40c214:	add	x2, sp, #0xc8
  40c218:	stp	x3, xzr, [sp, #200]
  40c21c:	str	x24, [sp, #216]
  40c220:	bl	40ba68 <wcrtomb@plt+0x8d28>
  40c224:	ldr	x0, [x21, #152]
  40c228:	cmp	xzr, x0, lsr #62
  40c22c:	lsl	x0, x0, #2
  40c230:	cset	x19, ne  // ne = any
  40c234:	cmp	x0, #0x0
  40c238:	csel	x19, x19, x24, ge  // ge = tcont
  40c23c:	cbnz	x19, 40c838 <wcrtomb@plt+0x9af8>
  40c240:	bl	4125f8 <wcrtomb@plt+0xf8b8>
  40c244:	str	x0, [x21, #344]
  40c248:	ldr	x9, [x21, #152]
  40c24c:	cmp	x9, #0x0
  40c250:	b.le	40c304 <wcrtomb@plt+0x95c4>
  40c254:	ldr	x7, [x21, #320]
  40c258:	mov	w3, #0x49                  	// #73
  40c25c:	ldr	x8, [x21, #336]
  40c260:	mov	w10, #0x4                   	// #4
  40c264:	nop
  40c268:	str	wzr, [x0, x19, lsl #2]
  40c26c:	ldr	w1, [x8, x19, lsl #2]
  40c270:	eor	w1, w1, w1, asr #2
  40c274:	ands	w1, w1, w3
  40c278:	csel	w1, w1, w10, eq  // eq = none
  40c27c:	str	w1, [x0, x19, lsl #2]
  40c280:	ldr	w2, [x8, x19, lsl #2]
  40c284:	eor	w2, w2, w2, asr #1
  40c288:	tst	w2, w3
  40c28c:	b.eq	40c298 <wcrtomb@plt+0x9558>  // b.none
  40c290:	orr	w1, w1, #0x2
  40c294:	str	w1, [x0, x19, lsl #2]
  40c298:	ldr	x5, [x7, #8]
  40c29c:	cmp	x5, #0x0
  40c2a0:	b.le	40c2f4 <wcrtomb@plt+0x95b4>
  40c2a4:	ldr	x2, [x7]
  40c2a8:	add	x5, x2, x5, lsl #4
  40c2ac:	nop
  40c2b0:	ldr	w1, [x2, #8]
  40c2b4:	eor	w4, w1, w1, asr #2
  40c2b8:	tst	w4, w3
  40c2bc:	b.eq	40c2d0 <wcrtomb@plt+0x9590>  // b.none
  40c2c0:	ldr	w1, [x0, x19, lsl #2]
  40c2c4:	orr	w1, w1, #0x4
  40c2c8:	str	w1, [x0, x19, lsl #2]
  40c2cc:	ldr	w1, [x2, #8]
  40c2d0:	eor	w1, w1, w1, asr #1
  40c2d4:	tst	w1, w3
  40c2d8:	b.eq	40c2e8 <wcrtomb@plt+0x95a8>  // b.none
  40c2dc:	ldr	w1, [x0, x19, lsl #2]
  40c2e0:	orr	w1, w1, #0x2
  40c2e4:	str	w1, [x0, x19, lsl #2]
  40c2e8:	add	x2, x2, #0x10
  40c2ec:	cmp	x5, x2
  40c2f0:	b.ne	40c2b0 <wcrtomb@plt+0x9570>  // b.any
  40c2f4:	add	x19, x19, #0x1
  40c2f8:	add	x7, x7, #0x18
  40c2fc:	cmp	x19, x9
  40c300:	b.ne	40c268 <wcrtomb@plt+0x9528>  // b.any
  40c304:	ldp	x1, x4, [sp, #200]
  40c308:	cmp	x4, #0x0
  40c30c:	b.le	40c818 <wcrtomb@plt+0x9ad8>
  40c310:	add	x4, x1, x4, lsl #4
  40c314:	mov	w2, #0x0                   	// #0
  40c318:	ldr	x3, [x1], #16
  40c31c:	cmp	x1, x4
  40c320:	ldr	w3, [x0, x3, lsl #2]
  40c324:	orr	w2, w2, w3
  40c328:	b.ne	40c318 <wcrtomb@plt+0x95d8>  // b.any
  40c32c:	eor	w20, w2, #0x7
  40c330:	and	w19, w2, #0x2
  40c334:	tbz	w2, #2, 40c348 <wcrtomb@plt+0x9608>
  40c338:	add	x1, sp, #0xc8
  40c33c:	mov	x0, x21
  40c340:	mov	w2, #0x4                   	// #4
  40c344:	bl	40b5f8 <wcrtomb@plt+0x88b8>
  40c348:	add	x1, sp, #0xc8
  40c34c:	mov	w2, w20
  40c350:	mov	x0, x21
  40c354:	bl	40b5f8 <wcrtomb@plt+0x88b8>
  40c358:	mov	w1, w0
  40c35c:	str	w0, [x21, #364]
  40c360:	sxtw	x0, w0
  40c364:	str	x0, [x21, #400]
  40c368:	cbz	w19, 40c380 <wcrtomb@plt+0x9640>
  40c36c:	add	x1, sp, #0xc8
  40c370:	mov	x0, x21
  40c374:	mov	w2, #0x2                   	// #2
  40c378:	bl	40b5f8 <wcrtomb@plt+0x88b8>
  40c37c:	mov	w1, w0
  40c380:	ldr	x0, [sp, #160]
  40c384:	add	w1, w1, #0x1
  40c388:	str	wzr, [x21, #360]
  40c38c:	str	w1, [x21, #364]
  40c390:	bl	402ae0 <free@plt>
  40c394:	ldr	x0, [sp, #152]
  40c398:	bl	402ae0 <free@plt>
  40c39c:	ldr	x0, [sp, #224]
  40c3a0:	bl	402ae0 <free@plt>
  40c3a4:	ldr	x0, [sp, #200]
  40c3a8:	bl	402ae0 <free@plt>
  40c3ac:	ldp	x19, x20, [sp, #16]
  40c3b0:	ldp	x21, x22, [sp, #32]
  40c3b4:	ldp	x23, x24, [sp, #48]
  40c3b8:	ldp	x25, x26, [sp, #64]
  40c3bc:	ldp	x27, x28, [sp, #80]
  40c3c0:	ldp	x29, x30, [sp], #272
  40c3c4:	ret
  40c3c8:	cmp	x0, #0x112
  40c3cc:	str	x21, [x27]
  40c3d0:	cset	w0, eq  // eq = none
  40c3d4:	str	x21, [x25]
  40c3d8:	mov	w2, #0x1ff                 	// #511
  40c3dc:	strb	w0, [x24]
  40c3e0:	str	w2, [x27, #8]
  40c3e4:	add	x25, x25, #0x10
  40c3e8:	ldr	x0, [sp, #136]
  40c3ec:	add	x27, x27, #0x10
  40c3f0:	stur	w2, [x25, #-8]
  40c3f4:	stp	x0, x0, [x24, #8]
  40c3f8:	add	x24, x24, #0x18
  40c3fc:	b	40bd00 <wcrtomb@plt+0x8fc0>
  40c400:	mov	w0, #0x1                   	// #1
  40c404:	strb	w0, [x24]
  40c408:	stp	xzr, xzr, [x24, #8]
  40c40c:	add	x24, x24, #0x18
  40c410:	b	40bd00 <wcrtomb@plt+0x8fc0>
  40c414:	ldp	x0, x19, [x24, #-16]
  40c418:	str	x0, [sp, #208]
  40c41c:	sub	x22, x24, #0x18
  40c420:	add	x26, sp, #0xe8
  40c424:	sub	x0, x25, x0, lsl #4
  40c428:	str	x0, [sp, #200]
  40c42c:	cmp	x19, #0x0
  40c430:	sub	x19, x27, x19, lsl #4
  40c434:	b.le	40c810 <wcrtomb@plt+0x9ad0>
  40c438:	ldr	x2, [x19]
  40c43c:	add	x5, sp, #0xe0
  40c440:	ldr	x3, [x28, #320]
  40c444:	mov	x1, x20
  40c448:	add	x2, x2, x2, lsl #1
  40c44c:	add	x0, sp, #0xc8
  40c450:	mov	w4, #0xffffffff            	// #-1
  40c454:	add	x2, x3, x2, lsl #3
  40c458:	add	x3, x2, #0x8
  40c45c:	bl	40b880 <wcrtomb@plt+0x8b40>
  40c460:	ldr	x3, [x19], #16
  40c464:	mov	x1, x26
  40c468:	ldr	x2, [x28, #320]
  40c46c:	add	x0, sp, #0xe0
  40c470:	add	x3, x3, x3, lsl #1
  40c474:	add	x2, x2, x3, lsl #3
  40c478:	bl	40b560 <wcrtomb@plt+0x8820>
  40c47c:	cmp	x27, x19
  40c480:	b.ne	40c438 <wcrtomb@plt+0x96f8>  // b.any
  40c484:	ldp	x0, x1, [x28, #144]
  40c488:	ldr	x0, [x0, x23]
  40c48c:	cmp	x0, #0x103
  40c490:	b.eq	40bd00 <wcrtomb@plt+0x8fc0>  // b.none
  40c494:	b	40bcf8 <wcrtomb@plt+0x8fb8>
  40c498:	ldp	x2, x3, [x24, #-16]
  40c49c:	str	x2, [sp, #144]
  40c4a0:	ldur	x0, [x24, #-32]
  40c4a4:	stp	x3, x0, [sp, #120]
  40c4a8:	sub	x22, x24, #0x18
  40c4ac:	cmp	x0, #0x0
  40c4b0:	str	x2, [sp, #208]
  40c4b4:	lsl	x26, x0, #4
  40c4b8:	lsl	x0, x3, #4
  40c4bc:	str	x0, [sp, #176]
  40c4c0:	add	x0, x0, x26
  40c4c4:	sub	x0, x27, x0
  40c4c8:	sub	x3, x24, #0x30
  40c4cc:	sub	x2, x25, x2, lsl #4
  40c4d0:	stp	x3, x2, [sp, #104]
  40c4d4:	add	x24, sp, #0xe8
  40c4d8:	str	x0, [sp, #184]
  40c4dc:	mov	x19, x0
  40c4e0:	str	x2, [sp, #200]
  40c4e4:	add	x23, x26, x0
  40c4e8:	b.le	40c540 <wcrtomb@plt+0x9800>
  40c4ec:	nop
  40c4f0:	ldr	x2, [x19]
  40c4f4:	add	x5, sp, #0xe0
  40c4f8:	ldr	x3, [x28, #320]
  40c4fc:	mov	x1, x20
  40c500:	add	x2, x2, x2, lsl #1
  40c504:	add	x0, sp, #0xc8
  40c508:	mov	w4, #0xffffffff            	// #-1
  40c50c:	add	x2, x3, x2, lsl #3
  40c510:	add	x3, x2, #0x8
  40c514:	bl	40b880 <wcrtomb@plt+0x8b40>
  40c518:	ldr	x3, [x19], #16
  40c51c:	mov	x1, x24
  40c520:	ldr	x2, [x28, #320]
  40c524:	add	x0, sp, #0xe0
  40c528:	add	x3, x3, x3, lsl #1
  40c52c:	add	x2, x2, x3, lsl #3
  40c530:	bl	40b560 <wcrtomb@plt+0x8820>
  40c534:	cmp	x23, x19
  40c538:	b.ne	40c4f0 <wcrtomb@plt+0x97b0>  // b.any
  40c53c:	ldr	x1, [x28, #152]
  40c540:	ldr	x0, [sp, #104]
  40c544:	ldrb	w9, [x0]
  40c548:	cbz	w9, 40c564 <wcrtomb@plt+0x9824>
  40c54c:	ldr	x2, [sp, #104]
  40c550:	str	x25, [sp, #112]
  40c554:	ldr	x3, [sp, #144]
  40c558:	ldr	x0, [x2, #8]
  40c55c:	add	x0, x0, x3
  40c560:	str	x0, [x2, #8]
  40c564:	ldrb	w8, [x22]
  40c568:	cbz	w8, 40c70c <wcrtomb@plt+0x99cc>
  40c56c:	ldp	x0, x2, [sp, #120]
  40c570:	add	x0, x0, x2
  40c574:	ldr	x2, [sp, #104]
  40c578:	str	x0, [x2, #16]
  40c57c:	cmp	w9, #0x0
  40c580:	mov	x24, x22
  40c584:	ccmp	w8, #0x0, #0x4, ne  // ne = any
  40c588:	ldp	x2, x25, [sp, #104]
  40c58c:	cset	w0, ne  // ne = any
  40c590:	strb	w0, [x2]
  40c594:	b	40bd00 <wcrtomb@plt+0x8fc0>
  40c598:	ands	w0, w0, #0x8
  40c59c:	orr	w0, w0, #0x4
  40c5a0:	csel	w0, w5, w0, eq  // eq = none
  40c5a4:	strb	w0, [x19, x2]
  40c5a8:	b	40be30 <wcrtomb@plt+0x90f0>
  40c5ac:	cbz	x28, 40bf24 <wcrtomb@plt+0x91e4>
  40c5b0:	mov	x2, x0
  40c5b4:	mov	x19, #0x0                   	// #0
  40c5b8:	ldr	w9, [x2, #8]
  40c5bc:	cmp	w1, w9
  40c5c0:	b.ne	40c660 <wcrtomb@plt+0x9920>  // b.any
  40c5c4:	ldr	x9, [x2]
  40c5c8:	ldrb	w11, [x27, x9]
  40c5cc:	tst	w11, #0x6
  40c5d0:	b.ne	40c660 <wcrtomb@plt+0x9920>  // b.any
  40c5d4:	ldr	x12, [x4, x9, lsl #3]
  40c5d8:	cmp	x5, x12
  40c5dc:	b.ne	40c660 <wcrtomb@plt+0x9920>  // b.any
  40c5e0:	eor	w11, w24, w11
  40c5e4:	tbnz	w11, #0, 40c660 <wcrtomb@plt+0x9920>
  40c5e8:	ldr	x1, [sp, #136]
  40c5ec:	add	x0, x23, x23, lsl #1
  40c5f0:	add	x10, x1, x0, lsl #3
  40c5f4:	tbnz	w24, #0, 40c6b0 <wcrtomb@plt+0x9970>
  40c5f8:	ldr	x1, [sp, #136]
  40c5fc:	add	x9, x9, x9, lsl #1
  40c600:	ldr	x0, [x10, #8]
  40c604:	add	x2, x1, x9, lsl #3
  40c608:	cmp	x0, #0x3
  40c60c:	b.gt	40c680 <wcrtomb@plt+0x9940>
  40c610:	cmp	x0, #0x0
  40c614:	b.le	40c650 <wcrtomb@plt+0x9910>
  40c618:	mov	x3, #0x0                   	// #0
  40c61c:	nop
  40c620:	ldr	x0, [x10]
  40c624:	add	x0, x0, x3, lsl #4
  40c628:	add	x3, x3, #0x1
  40c62c:	stp	x3, x2, [sp, #104]
  40c630:	ldp	x0, x1, [x0]
  40c634:	stp	x10, x3, [sp, #120]
  40c638:	bl	40bad0 <wcrtomb@plt+0x8d90>
  40c63c:	ldr	x10, [sp, #120]
  40c640:	ldp	x3, x2, [sp, #104]
  40c644:	ldr	x0, [x10, #8]
  40c648:	cmp	x3, x0
  40c64c:	b.lt	40c620 <wcrtomb@plt+0x98e0>  // b.tstop
  40c650:	cmp	x28, x19
  40c654:	b.le	40c674 <wcrtomb@plt+0x9934>
  40c658:	ldr	x10, [x21, #8]
  40c65c:	b	40bf3c <wcrtomb@plt+0x91fc>
  40c660:	add	x19, x19, #0x1
  40c664:	add	x2, x2, #0x10
  40c668:	cmp	x19, x28
  40c66c:	b.ne	40c5b8 <wcrtomb@plt+0x9878>  // b.any
  40c670:	b	40bf24 <wcrtomb@plt+0x91e4>
  40c674:	ldp	x0, x10, [x21]
  40c678:	add	x3, x0, x22
  40c67c:	b	40bf24 <wcrtomb@plt+0x91e4>
  40c680:	add	x3, x2, #0x8
  40c684:	add	x1, x10, #0x8
  40c688:	mov	x0, x10
  40c68c:	add	x5, sp, #0xf8
  40c690:	mov	w4, #0xffffffff            	// #-1
  40c694:	str	x2, [sp, #104]
  40c698:	bl	40b880 <wcrtomb@plt+0x8b40>
  40c69c:	ldr	x2, [sp, #104]
  40c6a0:	add	x0, sp, #0xf8
  40c6a4:	ldr	x1, [sp, #168]
  40c6a8:	bl	40b560 <wcrtomb@plt+0x8820>
  40c6ac:	b	40c650 <wcrtomb@plt+0x9910>
  40c6b0:	ldr	x1, [x1, x0, lsl #3]
  40c6b4:	add	x2, x10, #0x8
  40c6b8:	mov	x0, x23
  40c6bc:	str	x10, [sp, #104]
  40c6c0:	bl	40b408 <wcrtomb@plt+0x86c8>
  40c6c4:	ldr	x10, [sp, #104]
  40c6c8:	b	40c5f8 <wcrtomb@plt+0x98b8>
  40c6cc:	ldr	x0, [x21, #176]
  40c6d0:	tbnz	x0, #63, 40c838 <wcrtomb@plt+0x9af8>
  40c6d4:	bl	4125f8 <wcrtomb@plt+0xf8b8>
  40c6d8:	mov	x26, x0
  40c6dc:	ldr	x0, [x21, #152]
  40c6e0:	ldr	x1, [x21, #320]
  40c6e4:	cmp	x0, #0x0
  40c6e8:	b.gt	40c07c <wcrtomb@plt+0x933c>
  40c6ec:	mov	x23, #0x1                   	// #1
  40c6f0:	b	40c154 <wcrtomb@plt+0x9414>
  40c6f4:	bl	402ae0 <free@plt>
  40c6f8:	ldr	x1, [x21, #320]
  40c6fc:	add	x5, x1, x24
  40c700:	str	xzr, [x1, x19, lsl #3]
  40c704:	str	xzr, [x5, #8]
  40c708:	b	40c140 <wcrtomb@plt+0x9400>
  40c70c:	ldr	x2, [sp, #120]
  40c710:	ldr	x0, [sp, #184]
  40c714:	cmp	x2, #0x0
  40c718:	ldr	x2, [sp, #176]
  40c71c:	add	x2, x0, x2
  40c720:	b.le	40c73c <wcrtomb@plt+0x99fc>
  40c724:	nop
  40c728:	add	x3, x0, x26
  40c72c:	ldp	x4, x5, [x3]
  40c730:	stp	x4, x5, [x0], #16
  40c734:	cmp	x2, x0
  40c738:	b.ne	40c728 <wcrtomb@plt+0x99e8>  // b.any
  40c73c:	ldr	x0, [sp, #104]
  40c740:	sub	x27, x27, x26
  40c744:	ldr	x2, [sp, #120]
  40c748:	str	x2, [x0, #16]
  40c74c:	b	40c57c <wcrtomb@plt+0x983c>
  40c750:	sub	x2, x2, #0x10c
  40c754:	mov	w24, #0x1ff                 	// #511
  40c758:	cmp	x2, #0x5
  40c75c:	b.hi	40c764 <wcrtomb@plt+0x9a24>  // b.pmore
  40c760:	ldr	w24, [x19, x2, lsl #2]
  40c764:	mov	x2, x0
  40c768:	mov	x0, x22
  40c76c:	ldr	x1, [x2], #8
  40c770:	bl	40b408 <wcrtomb@plt+0x86c8>
  40c774:	ldr	x1, [x21, #152]
  40c778:	cmp	x1, #0x0
  40c77c:	b.le	40bddc <wcrtomb@plt+0x909c>
  40c780:	mov	x25, #0x0                   	// #0
  40c784:	b	40c794 <wcrtomb@plt+0x9a54>
  40c788:	add	x25, x25, #0x1
  40c78c:	cmp	x25, x1
  40c790:	b.ge	40bdcc <wcrtomb@plt+0x908c>  // b.tcont
  40c794:	cmp	x25, x22
  40c798:	b.eq	40c788 <wcrtomb@plt+0x9a48>  // b.none
  40c79c:	ldr	x26, [x21, #320]
  40c7a0:	add	x0, x25, x25, lsl #1
  40c7a4:	add	x27, x26, x0, lsl #3
  40c7a8:	ldr	x2, [x27, #8]
  40c7ac:	cmp	x2, #0x0
  40c7b0:	b.le	40c788 <wcrtomb@plt+0x9a48>
  40c7b4:	ldr	x1, [x26, x0, lsl #3]
  40c7b8:	add	x2, x27, #0x8
  40c7bc:	mov	x0, x22
  40c7c0:	bl	40b408 <wcrtomb@plt+0x86c8>
  40c7c4:	ands	w4, w24, w0
  40c7c8:	b.ne	40c7d4 <wcrtomb@plt+0x9a94>  // b.any
  40c7cc:	ldr	x1, [x21, #152]
  40c7d0:	b	40c788 <wcrtomb@plt+0x9a48>
  40c7d4:	mov	x1, x2
  40c7d8:	mov	x0, x27
  40c7dc:	add	x2, sp, #0xf8
  40c7e0:	str	w4, [sp, #104]
  40c7e4:	bl	40b560 <wcrtomb@plt+0x8820>
  40c7e8:	add	x26, x26, x23
  40c7ec:	ldr	w4, [sp, #104]
  40c7f0:	mov	x1, x20
  40c7f4:	mov	x5, x27
  40c7f8:	add	x3, x26, #0x8
  40c7fc:	mov	x2, x26
  40c800:	add	x0, sp, #0xf8
  40c804:	bl	40b880 <wcrtomb@plt+0x8b40>
  40c808:	ldr	x1, [x21, #152]
  40c80c:	b	40c788 <wcrtomb@plt+0x9a48>
  40c810:	ldr	x0, [x2, x23]
  40c814:	b	40c48c <wcrtomb@plt+0x974c>
  40c818:	add	x1, sp, #0xc8
  40c81c:	mov	x0, x21
  40c820:	mov	w2, #0x7                   	// #7
  40c824:	bl	40b5f8 <wcrtomb@plt+0x88b8>
  40c828:	mov	w1, w0
  40c82c:	sxtw	x0, w0
  40c830:	str	x0, [x21, #400]
  40c834:	b	40c380 <wcrtomb@plt+0x9640>
  40c838:	bl	412830 <wcrtomb@plt+0xfaf0>
  40c83c:	nop
  40c840:	stp	x29, x30, [sp, #-256]!
  40c844:	mov	x29, sp
  40c848:	stp	x21, x22, [sp, #32]
  40c84c:	mov	x22, x0
  40c850:	and	w0, w2, #0xff
  40c854:	stp	x19, x20, [sp, #16]
  40c858:	add	x20, x22, x22, lsl #2
  40c85c:	ldr	x2, [x1, #296]
  40c860:	lsl	x20, x20, #4
  40c864:	stp	x25, x26, [sp, #64]
  40c868:	mov	x26, x1
  40c86c:	add	x2, x2, x20
  40c870:	str	w0, [sp, #116]
  40c874:	ldp	x0, x1, [x1, #368]
  40c878:	stp	x23, x24, [sp, #48]
  40c87c:	ldrh	w2, [x2, #34]
  40c880:	stp	x27, x28, [sp, #80]
  40c884:	cmp	w2, #0x0
  40c888:	csel	x1, x1, x0, ne  // ne = any
  40c88c:	add	x24, x1, x22, lsl #3
  40c890:	ldr	x21, [x1, x22, lsl #3]
  40c894:	cbz	x21, 40cf78 <wcrtomb@plt+0xa238>
  40c898:	ldr	x0, [x26, #384]
  40c89c:	strb	wzr, [x0, x22]
  40c8a0:	ldr	x0, [x26, #296]
  40c8a4:	add	x0, x0, x20
  40c8a8:	ldrb	w1, [x0, #32]
  40c8ac:	ldrh	w0, [x0, #34]
  40c8b0:	and	w2, w1, w0, lsr #6
  40c8b4:	tst	x2, #0x7
  40c8b8:	b.eq	40c8dc <wcrtomb@plt+0x9b9c>  // b.none
  40c8bc:	ldr	x1, [x26, #384]
  40c8c0:	ldrb	w0, [x1, x22]
  40c8c4:	orr	w0, w0, #0x4
  40c8c8:	strb	w0, [x1, x22]
  40c8cc:	ldr	x0, [x26, #296]
  40c8d0:	add	x0, x0, x20
  40c8d4:	ldrb	w1, [x0, #32]
  40c8d8:	ldrh	w0, [x0, #34]
  40c8dc:	and	w2, w1, w0, lsr #3
  40c8e0:	tst	x2, #0x7
  40c8e4:	b.eq	40c908 <wcrtomb@plt+0x9bc8>  // b.none
  40c8e8:	ldr	x1, [x26, #384]
  40c8ec:	ldrb	w0, [x1, x22]
  40c8f0:	orr	w0, w0, #0x2
  40c8f4:	strb	w0, [x1, x22]
  40c8f8:	ldr	x0, [x26, #296]
  40c8fc:	add	x0, x0, x20
  40c900:	ldrb	w1, [x0, #32]
  40c904:	ldrh	w0, [x0, #34]
  40c908:	and	w0, w0, #0x7
  40c90c:	tst	w0, w1
  40c910:	b.eq	40c924 <wcrtomb@plt+0x9be4>  // b.none
  40c914:	ldr	x1, [x26, #384]
  40c918:	ldrb	w0, [x1, x22]
  40c91c:	orr	w0, w0, #0x1
  40c920:	strb	w0, [x1, x22]
  40c924:	ldr	x1, [x26, #176]
  40c928:	add	x0, sp, #0x90
  40c92c:	bl	40b148 <wcrtomb@plt+0x8408>
  40c930:	ldr	x0, [x26, #296]
  40c934:	add	x0, x0, x20
  40c938:	ldr	x1, [x0, #16]
  40c93c:	cmp	x1, #0x0
  40c940:	b.le	40c9c8 <wcrtomb@plt+0x9c88>
  40c944:	ldr	x1, [x26, #320]
  40c948:	mov	x24, #0x0                   	// #0
  40c94c:	nop
  40c950:	ldr	x2, [x0, #8]
  40c954:	lsl	x19, x24, #4
  40c958:	mov	x25, #0x0                   	// #0
  40c95c:	ldr	x2, [x2, x19]
  40c960:	add	x2, x2, x2, lsl #1
  40c964:	add	x2, x1, x2, lsl #3
  40c968:	ldr	x3, [x2, #8]
  40c96c:	cmp	x3, #0x0
  40c970:	b.le	40c9b8 <wcrtomb@plt+0x9c78>
  40c974:	nop
  40c978:	ldr	x0, [x2]
  40c97c:	add	x2, sp, #0x90
  40c980:	add	x0, x0, x25, lsl #4
  40c984:	add	x25, x25, #0x1
  40c988:	ldp	x0, x1, [x0]
  40c98c:	bl	40bad0 <wcrtomb@plt+0x8d90>
  40c990:	ldr	x0, [x26, #296]
  40c994:	ldr	x1, [x26, #320]
  40c998:	add	x0, x0, x20
  40c99c:	ldr	x2, [x0, #8]
  40c9a0:	ldr	x2, [x2, x19]
  40c9a4:	add	x2, x2, x2, lsl #1
  40c9a8:	add	x2, x1, x2, lsl #3
  40c9ac:	ldr	x3, [x2, #8]
  40c9b0:	cmp	x3, x25
  40c9b4:	b.gt	40c978 <wcrtomb@plt+0x9c38>
  40c9b8:	ldr	x2, [x0, #16]
  40c9bc:	add	x24, x24, #0x1
  40c9c0:	cmp	x2, x24
  40c9c4:	b.gt	40c950 <wcrtomb@plt+0x9c10>
  40c9c8:	ldr	x1, [x26, #176]
  40c9cc:	add	x0, sp, #0xa8
  40c9d0:	mov	x19, #0xffffffffffffffff    	// #-1
  40c9d4:	bl	40b148 <wcrtomb@plt+0x8408>
  40c9d8:	stp	x19, x19, [sp, #192]
  40c9dc:	ldr	x9, [sp, #152]
  40c9e0:	stp	x19, x19, [sp, #208]
  40c9e4:	cmp	x9, #0x0
  40c9e8:	b.le	40d028 <wcrtomb@plt+0xa2e8>
  40c9ec:	ldr	w0, [sp, #116]
  40c9f0:	add	x24, sp, #0xc0
  40c9f4:	add	x25, x24, #0x20
  40c9f8:	add	x27, sp, #0xe0
  40c9fc:	mov	x28, #0x0                   	// #0
  40ca00:	ubfx	x23, x0, #6, #2
  40ca04:	and	w0, w0, #0x3f
  40ca08:	str	w0, [sp, #112]
  40ca0c:	nop
  40ca10:	ldr	x2, [sp, #144]
  40ca14:	lsl	x0, x28, #4
  40ca18:	ldr	x7, [x26, #144]
  40ca1c:	add	x1, x2, x0
  40ca20:	ldr	x0, [x2, x0]
  40ca24:	ldp	x4, x5, [x1]
  40ca28:	ldr	x0, [x7, x0, lsl #3]
  40ca2c:	ldr	w7, [x1, #8]
  40ca30:	cmp	x0, #0xff
  40ca34:	b.ls	40cb54 <wcrtomb@plt+0x9e14>  // b.plast
  40ca38:	cmp	x0, #0x113
  40ca3c:	b.le	40cbc4 <wcrtomb@plt+0x9e84>
  40ca40:	ldr	x1, [x26]
  40ca44:	add	x0, x1, x0, lsl #5
  40ca48:	mov	x1, #0xffffffffffffdd80    	// #-8832
  40ca4c:	add	x0, x0, x1
  40ca50:	ldrb	w1, [sp, #112]
  40ca54:	ld1	{v0.16b, v1.16b}, [x0]
  40ca58:	st1	{v0.16b, v1.16b}, [x27]
  40ca5c:	ldr	x0, [x27, x23, lsl #3]
  40ca60:	lsr	x0, x0, x1
  40ca64:	and	w8, w0, #0x1
  40ca68:	tbz	w0, #0, 40cb78 <wcrtomb@plt+0x9e38>
  40ca6c:	cmp	w7, #0x1ff
  40ca70:	ldr	x0, [x27]
  40ca74:	b.ne	40cc74 <wcrtomb@plt+0x9f34>  // b.any
  40ca78:	mov	x1, x24
  40ca7c:	and	x19, x19, x0
  40ca80:	mov	x2, x27
  40ca84:	add	x2, x2, #0x8
  40ca88:	str	x19, [x1], #8
  40ca8c:	cmp	x25, x1
  40ca90:	b.eq	40cab0 <wcrtomb@plt+0x9d70>  // b.none
  40ca94:	ldr	x19, [x1]
  40ca98:	add	x2, x2, #0x8
  40ca9c:	ldur	x0, [x2, #-8]
  40caa0:	and	x19, x19, x0
  40caa4:	str	x19, [x1], #8
  40caa8:	cmp	x25, x1
  40caac:	b.ne	40ca94 <wcrtomb@plt+0x9d54>  // b.any
  40cab0:	mov	x0, x4
  40cab4:	mov	x1, x5
  40cab8:	add	x2, sp, #0xa8
  40cabc:	bl	40ba68 <wcrtomb@plt+0x8d28>
  40cac0:	ldr	x9, [sp, #152]
  40cac4:	ldr	x19, [x24]
  40cac8:	add	x28, x28, #0x1
  40cacc:	cmp	x9, x28
  40cad0:	b.gt	40ca10 <wcrtomb@plt+0x9cd0>
  40cad4:	ldr	x1, [x26, #176]
  40cad8:	mov	x0, x27
  40cadc:	bl	40b148 <wcrtomb@plt+0x8408>
  40cae0:	ldr	x4, [sp, #176]
  40cae4:	ldrb	w0, [x26, #328]
  40cae8:	cmp	x4, #0x0
  40caec:	b.le	40cf5c <wcrtomb@plt+0xa21c>
  40caf0:	cbnz	w0, 40cdb8 <wcrtomb@plt+0xa078>
  40caf4:	ldr	x1, [sp, #168]
  40caf8:	mov	x5, x19
  40cafc:	add	x9, x26, #0x3f0
  40cb00:	add	x10, x26, #0x3d0
  40cb04:	mov	x2, #0x0                   	// #0
  40cb08:	mov	w0, #0x0                   	// #0
  40cb0c:	ldr	x3, [x9, x2]
  40cb10:	orr	w7, w0, #0x4
  40cb14:	ldr	x6, [x10, x2]
  40cb18:	tst	x3, x5
  40cb1c:	csel	w0, w7, w0, ne  // ne = any
  40cb20:	add	x8, x24, x2
  40cb24:	tst	x6, x5
  40cb28:	orr	w7, w0, #0x2
  40cb2c:	csel	w0, w7, w0, ne  // ne = any
  40cb30:	orr	x3, x3, x6
  40cb34:	bics	xzr, x5, x3
  40cb38:	orr	w3, w0, #0x1
  40cb3c:	csel	w0, w3, w0, ne  // ne = any
  40cb40:	cmp	x2, #0x18
  40cb44:	b.eq	40ce24 <wcrtomb@plt+0xa0e4>  // b.none
  40cb48:	add	x2, x2, #0x8
  40cb4c:	ldr	x5, [x8, #8]
  40cb50:	b	40cb0c <wcrtomb@plt+0x9dcc>
  40cb54:	lsr	w1, w0, #6
  40cb58:	ldrb	w3, [sp, #116]
  40cb5c:	mov	x8, #0x1                   	// #1
  40cb60:	stp	xzr, xzr, [x27]
  40cb64:	lsl	x2, x8, x0
  40cb68:	stp	xzr, xzr, [x27, #16]
  40cb6c:	cmp	x0, w3, uxtb
  40cb70:	str	x2, [x27, x1, lsl #3]
  40cb74:	b.eq	40ca6c <wcrtomb@plt+0x9d2c>  // b.none
  40cb78:	cmp	w7, #0x1ff
  40cb7c:	mov	w8, #0x0                   	// #0
  40cb80:	ldr	x0, [x27]
  40cb84:	b.ne	40cc74 <wcrtomb@plt+0x9f34>  // b.any
  40cb88:	mov	x1, x24
  40cb8c:	bic	x19, x19, x0
  40cb90:	mov	x2, x27
  40cb94:	add	x2, x2, #0x8
  40cb98:	str	x19, [x1], #8
  40cb9c:	cmp	x25, x1
  40cba0:	b.eq	40cac4 <wcrtomb@plt+0x9d84>  // b.none
  40cba4:	ldr	x19, [x1]
  40cba8:	add	x2, x2, #0x8
  40cbac:	ldur	x0, [x2, #-8]
  40cbb0:	bic	x19, x19, x0
  40cbb4:	str	x19, [x1], #8
  40cbb8:	cmp	x25, x1
  40cbbc:	b.ne	40cba4 <wcrtomb@plt+0x9e64>  // b.any
  40cbc0:	b	40cac4 <wcrtomb@plt+0x9d84>
  40cbc4:	cmp	x0, #0x10a
  40cbc8:	b.ne	40cac8 <wcrtomb@plt+0x9d88>  // b.any
  40cbcc:	ldr	x1, [x26]
  40cbd0:	ldr	x0, [x26, #24]
  40cbd4:	ldr	x2, [x26, #296]
  40cbd8:	add	x0, x1, x0, lsl #5
  40cbdc:	add	x2, x2, x20
  40cbe0:	ld1	{v0.16b, v1.16b}, [x0]
  40cbe4:	st1	{v0.16b, v1.16b}, [x27]
  40cbe8:	ldrb	w0, [x2, #32]
  40cbec:	ldr	x8, [x27, x23, lsl #3]
  40cbf0:	and	w0, w0, w7
  40cbf4:	tst	x0, #0x7
  40cbf8:	ldrb	w0, [sp, #112]
  40cbfc:	lsr	x8, x8, x0
  40cc00:	and	w8, w8, #0x1
  40cc04:	b.eq	40cc68 <wcrtomb@plt+0x9f28>  // b.none
  40cc08:	ldr	x0, [x2, #56]
  40cc0c:	cbnz	x0, 40cc48 <wcrtomb@plt+0x9f08>
  40cc10:	mov	x0, #0x10                  	// #16
  40cc14:	str	x2, [sp, #96]
  40cc18:	stp	w7, w8, [sp, #120]
  40cc1c:	stp	x4, x5, [sp, #128]
  40cc20:	bl	4125f8 <wcrtomb@plt+0xf8b8>
  40cc24:	ldr	x2, [sp, #96]
  40cc28:	ldp	x4, x5, [sp, #128]
  40cc2c:	add	x1, x2, #0x30
  40cc30:	ldr	x9, [x26, #296]
  40cc34:	stp	x0, xzr, [x2, #48]
  40cc38:	mov	x0, #0x1                   	// #1
  40cc3c:	ldp	w7, w8, [sp, #120]
  40cc40:	add	x2, x9, x20
  40cc44:	str	x0, [x1, #16]
  40cc48:	mov	x0, x4
  40cc4c:	mov	x1, x5
  40cc50:	add	x2, x2, #0x30
  40cc54:	stp	x4, x5, [sp, #96]
  40cc58:	stp	w7, w8, [sp, #120]
  40cc5c:	bl	40bad0 <wcrtomb@plt+0x8d90>
  40cc60:	ldp	x4, x5, [sp, #96]
  40cc64:	ldp	w7, w8, [sp, #120]
  40cc68:	cmp	w7, #0x1ff
  40cc6c:	ldr	x0, [x27]
  40cc70:	b.eq	40cccc <wcrtomb@plt+0x9f8c>  // b.none
  40cc74:	ldr	x1, [x26, #296]
  40cc78:	add	x1, x1, x20
  40cc7c:	ldrb	w1, [x1, #32]
  40cc80:	and	w2, w1, w7, asr #6
  40cc84:	tst	x2, #0x7
  40cc88:	b.eq	40cd78 <wcrtomb@plt+0xa038>  // b.none
  40cc8c:	and	w2, w1, w7, asr #3
  40cc90:	tst	x2, #0x7
  40cc94:	b.eq	40cd38 <wcrtomb@plt+0x9ff8>  // b.none
  40cc98:	and	w1, w1, w7
  40cc9c:	tst	x1, #0x7
  40cca0:	b.eq	40cce0 <wcrtomb@plt+0x9fa0>  // b.none
  40cca4:	ldp	x1, x7, [x27, #8]
  40cca8:	ldr	x2, [x27, #24]
  40ccac:	orr	x2, x0, x2
  40ccb0:	orr	x1, x1, x7
  40ccb4:	orr	x1, x1, x2
  40ccb8:	cbz	x1, 40ccd8 <wcrtomb@plt+0x9f98>
  40ccbc:	ldr	x1, [x27, x23, lsl #3]
  40ccc0:	ldrb	w2, [sp, #112]
  40ccc4:	lsr	x1, x1, x2
  40ccc8:	tbz	w1, #0, 40ccd0 <wcrtomb@plt+0x9f90>
  40cccc:	cbnz	w8, 40ca78 <wcrtomb@plt+0x9d38>
  40ccd0:	ldr	x9, [sp, #152]
  40ccd4:	b	40cb88 <wcrtomb@plt+0x9e48>
  40ccd8:	ldr	x9, [sp, #152]
  40ccdc:	b	40cac8 <wcrtomb@plt+0x9d88>
  40cce0:	ldr	x1, [x26, #976]
  40cce4:	mov	x7, x27
  40cce8:	ldr	x10, [x26, #1008]
  40ccec:	add	x2, x26, #0x3d0
  40ccf0:	add	x9, x26, #0x3f0
  40ccf4:	add	x2, x2, #0x8
  40ccf8:	orr	x1, x1, x10
  40ccfc:	cmp	x9, x2
  40cd00:	and	x0, x1, x0
  40cd04:	str	x0, [x7], #8
  40cd08:	b.eq	40cd30 <wcrtomb@plt+0x9ff0>  // b.none
  40cd0c:	ldr	x1, [x2]
  40cd10:	add	x2, x2, #0x8
  40cd14:	ldr	x10, [x2, #24]
  40cd18:	cmp	x9, x2
  40cd1c:	ldr	x0, [x7]
  40cd20:	orr	x1, x1, x10
  40cd24:	and	x0, x1, x0
  40cd28:	str	x0, [x7], #8
  40cd2c:	b.ne	40cd0c <wcrtomb@plt+0x9fcc>  // b.any
  40cd30:	ldr	x0, [x27]
  40cd34:	b	40cca4 <wcrtomb@plt+0x9f64>
  40cd38:	add	x10, x26, #0x3d0
  40cd3c:	mov	x11, x27
  40cd40:	add	x9, x26, #0x3f0
  40cd44:	ldr	x2, [x10], #8
  40cd48:	bic	x0, x0, x2
  40cd4c:	str	x0, [x11], #8
  40cd50:	cmp	x9, x10
  40cd54:	b.eq	40cd70 <wcrtomb@plt+0xa030>  // b.none
  40cd58:	ldr	x0, [x11]
  40cd5c:	ldr	x2, [x10], #8
  40cd60:	bic	x0, x0, x2
  40cd64:	str	x0, [x11], #8
  40cd68:	cmp	x9, x10
  40cd6c:	b.ne	40cd58 <wcrtomb@plt+0xa018>  // b.any
  40cd70:	ldr	x0, [x27]
  40cd74:	b	40cc98 <wcrtomb@plt+0x9f58>
  40cd78:	add	x9, x26, #0x3f0
  40cd7c:	mov	x10, x27
  40cd80:	add	x11, x26, #0x410
  40cd84:	ldr	x2, [x9], #8
  40cd88:	bic	x0, x0, x2
  40cd8c:	str	x0, [x10], #8
  40cd90:	cmp	x11, x9
  40cd94:	b.eq	40cdb0 <wcrtomb@plt+0xa070>  // b.none
  40cd98:	ldr	x0, [x10]
  40cd9c:	ldr	x2, [x9], #8
  40cda0:	bic	x0, x0, x2
  40cda4:	str	x0, [x10], #8
  40cda8:	cmp	x11, x9
  40cdac:	b.ne	40cd98 <wcrtomb@plt+0xa058>  // b.any
  40cdb0:	ldr	x0, [x27]
  40cdb4:	b	40cc8c <wcrtomb@plt+0x9f4c>
  40cdb8:	ldrb	w0, [x26, #1048]
  40cdbc:	cbz	w0, 40cdec <wcrtomb@plt+0xa0ac>
  40cdc0:	ldr	x1, [sp, #168]
  40cdc4:	mov	x0, #0x0                   	// #0
  40cdc8:	ldr	x3, [x26, #280]
  40cdcc:	nop
  40cdd0:	lsl	x2, x0, #4
  40cdd4:	add	x0, x0, #0x1
  40cdd8:	ldr	x2, [x1, x2]
  40cddc:	ldrb	w2, [x3, x2]
  40cde0:	tbz	w2, #0, 40caf8 <wcrtomb@plt+0x9db8>
  40cde4:	cmp	x4, x0
  40cde8:	b.ne	40cdd0 <wcrtomb@plt+0xa090>  // b.any
  40cdec:	ldr	x0, [x26, #296]
  40cdf0:	mov	x5, x27
  40cdf4:	add	x3, sp, #0xb0
  40cdf8:	mov	w4, #0xffffffff            	// #-1
  40cdfc:	add	x1, x0, #0x10
  40ce00:	add	x2, sp, #0xa8
  40ce04:	add	x0, x0, #0x8
  40ce08:	bl	40b880 <wcrtomb@plt+0x8b40>
  40ce0c:	add	x1, x27, #0x8
  40ce10:	add	x2, sp, #0xa8
  40ce14:	mov	x0, x27
  40ce18:	bl	40b560 <wcrtomb@plt+0x8820>
  40ce1c:	ldp	x1, x4, [sp, #168]
  40ce20:	b	40caf8 <wcrtomb@plt+0x9db8>
  40ce24:	cmp	x4, #0x0
  40ce28:	b.le	40d034 <wcrtomb@plt+0xa2f4>
  40ce2c:	ldr	x5, [x26, #344]
  40ce30:	add	x4, x1, x4, lsl #4
  40ce34:	mov	w2, #0x0                   	// #0
  40ce38:	ldr	x3, [x1], #16
  40ce3c:	cmp	x4, x1
  40ce40:	ldr	w3, [x5, x3, lsl #2]
  40ce44:	orr	w2, w2, w3
  40ce48:	b.ne	40ce38 <wcrtomb@plt+0xa0f8>  // b.any
  40ce4c:	and	w1, w2, w0
  40ce50:	bics	wzr, w0, w2
  40ce54:	and	w27, w1, #0x4
  40ce58:	and	w28, w1, #0x2
  40ce5c:	mov	x20, #0xffffffffffffffff    	// #-1
  40ce60:	b.ne	40d010 <wcrtomb@plt+0xa2d0>  // b.any
  40ce64:	mov	x25, x20
  40ce68:	cbz	w27, 40ce80 <wcrtomb@plt+0xa140>
  40ce6c:	add	x1, sp, #0xa8
  40ce70:	mov	x0, x26
  40ce74:	mov	w2, #0x4                   	// #4
  40ce78:	bl	40b5f8 <wcrtomb@plt+0x88b8>
  40ce7c:	mov	x25, x0
  40ce80:	mov	x27, x20
  40ce84:	cbz	w28, 40ce9c <wcrtomb@plt+0xa15c>
  40ce88:	add	x1, sp, #0xa8
  40ce8c:	mov	x0, x26
  40ce90:	mov	w2, #0x2                   	// #2
  40ce94:	bl	40b5f8 <wcrtomb@plt+0x88b8>
  40ce98:	mov	x27, x0
  40ce9c:	mov	x0, x26
  40cea0:	bl	40ad60 <wcrtomb@plt+0x8020>
  40cea4:	add	x1, x26, #0x1cc
  40cea8:	mov	x2, #0x0                   	// #0
  40ceac:	b	40ced0 <wcrtomb@plt+0xa190>
  40ceb0:	cmp	w0, #0x4
  40ceb4:	csel	x0, x20, x25, ne  // ne = any
  40ceb8:	str	x0, [x21, x2, lsl #3]
  40cebc:	add	x2, x2, #0x1
  40cec0:	cmp	x2, #0x100
  40cec4:	b.eq	40cef4 <wcrtomb@plt+0xa1b4>  // b.none
  40cec8:	lsr	w0, w2, #6
  40cecc:	ldr	x19, [x24, x0, lsl #3]
  40ced0:	lsr	x19, x19, x2
  40ced4:	tbz	w19, #0, 40cebc <wcrtomb@plt+0xa17c>
  40ced8:	ldrb	w0, [x1, x2]
  40cedc:	cmp	w0, #0x2
  40cee0:	b.ne	40ceb0 <wcrtomb@plt+0xa170>  // b.any
  40cee4:	str	x27, [x21, x2, lsl #3]
  40cee8:	add	x2, x2, #0x1
  40ceec:	cmp	x2, #0x100
  40cef0:	b.ne	40cec8 <wcrtomb@plt+0xa188>  // b.any
  40cef4:	ldr	x0, [sp, #168]
  40cef8:	bl	402ae0 <free@plt>
  40cefc:	ldr	x0, [sp, #144]
  40cf00:	bl	402ae0 <free@plt>
  40cf04:	ldr	x0, [sp, #224]
  40cf08:	bl	402ae0 <free@plt>
  40cf0c:	ldrb	w0, [x26, #459]
  40cf10:	ubfx	x1, x0, #6, #2
  40cf14:	ldr	x1, [x24, x1, lsl #3]
  40cf18:	lsr	x1, x1, x0
  40cf1c:	tbz	w1, #0, 40cf38 <wcrtomb@plt+0xa1f8>
  40cf20:	ldr	x2, [x26, #392]
  40cf24:	mov	x1, #0xffffffffffffffff    	// #-1
  40cf28:	ldr	x0, [x21, x0, lsl #3]
  40cf2c:	str	x0, [x2, x22, lsl #3]
  40cf30:	ldrb	w0, [x26, #459]
  40cf34:	str	x1, [x21, x0, lsl #3]
  40cf38:	ldr	w23, [sp, #116]
  40cf3c:	ldp	x19, x20, [sp, #16]
  40cf40:	ldp	x25, x26, [sp, #64]
  40cf44:	ldr	x0, [x21, x23, lsl #3]
  40cf48:	ldp	x21, x22, [sp, #32]
  40cf4c:	ldp	x23, x24, [sp, #48]
  40cf50:	ldp	x27, x28, [sp, #80]
  40cf54:	ldp	x29, x30, [sp], #256
  40cf58:	ret
  40cf5c:	cbz	w0, 40cfb8 <wcrtomb@plt+0xa278>
  40cf60:	ldr	w27, [x26, #364]
  40cf64:	mov	x25, #0x0                   	// #0
  40cf68:	ldr	x20, [x26, #400]
  40cf6c:	sub	w27, w27, #0x1
  40cf70:	sxtw	x27, w27
  40cf74:	b	40cea4 <wcrtomb@plt+0xa164>
  40cf78:	ldr	w1, [x26, #360]
  40cf7c:	cmp	w1, #0x3ff
  40cf80:	b.gt	40cfc8 <wcrtomb@plt+0xa288>
  40cf84:	add	w1, w1, #0x1
  40cf88:	str	w1, [x26, #360]
  40cf8c:	mov	x0, #0x800                 	// #2048
  40cf90:	bl	4125f8 <wcrtomb@plt+0xf8b8>
  40cf94:	mov	x21, x0
  40cf98:	add	x1, x0, #0x800
  40cf9c:	mov	x2, #0xfffffffffffffffe    	// #-2
  40cfa0:	str	x0, [x24]
  40cfa4:	nop
  40cfa8:	str	x2, [x0], #8
  40cfac:	cmp	x1, x0
  40cfb0:	b.ne	40cfa8 <wcrtomb@plt+0xa268>  // b.any
  40cfb4:	b	40c898 <wcrtomb@plt+0x9b58>
  40cfb8:	mov	x27, #0xffffffffffffffff    	// #-1
  40cfbc:	mov	x25, x27
  40cfc0:	mov	x20, x27
  40cfc4:	b	40cea4 <wcrtomb@plt+0xa164>
  40cfc8:	ldr	x1, [x26, #352]
  40cfcc:	ldrsw	x19, [x26, #364]
  40cfd0:	cmp	x1, x19
  40cfd4:	b.le	40d008 <wcrtomb@plt+0xa2c8>
  40cfd8:	ldr	x0, [x0, x19, lsl #3]
  40cfdc:	bl	402ae0 <free@plt>
  40cfe0:	ldr	x0, [x26, #376]
  40cfe4:	ldr	x0, [x0, x19, lsl #3]
  40cfe8:	bl	402ae0 <free@plt>
  40cfec:	ldp	x0, x1, [x26, #368]
  40cff0:	str	xzr, [x1, x19, lsl #3]
  40cff4:	ldr	x1, [x26, #352]
  40cff8:	str	xzr, [x0, x19, lsl #3]
  40cffc:	add	x19, x19, #0x1
  40d000:	cmp	x1, x19
  40d004:	b.gt	40cfd8 <wcrtomb@plt+0xa298>
  40d008:	mov	w1, #0x1                   	// #1
  40d00c:	b	40cf88 <wcrtomb@plt+0xa248>
  40d010:	eor	w2, w2, #0x7
  40d014:	add	x1, sp, #0xa8
  40d018:	mov	x0, x26
  40d01c:	bl	40b5f8 <wcrtomb@plt+0x88b8>
  40d020:	mov	x20, x0
  40d024:	b	40ce64 <wcrtomb@plt+0xa124>
  40d028:	add	x27, sp, #0xe0
  40d02c:	add	x24, sp, #0xc0
  40d030:	b	40cad4 <wcrtomb@plt+0x9d94>
  40d034:	cbnz	w0, 40d048 <wcrtomb@plt+0xa308>
  40d038:	mov	x20, #0xffffffffffffffff    	// #-1
  40d03c:	mov	x25, x20
  40d040:	mov	x27, x20
  40d044:	b	40ce9c <wcrtomb@plt+0xa15c>
  40d048:	mov	w28, #0x0                   	// #0
  40d04c:	mov	w27, #0x0                   	// #0
  40d050:	mov	w2, #0x7                   	// #7
  40d054:	b	40d014 <wcrtomb@plt+0xa2d4>
  40d058:	stp	x29, x30, [sp, #-96]!
  40d05c:	mov	x29, sp
  40d060:	stp	x25, x26, [sp, #64]
  40d064:	mov	x25, x2
  40d068:	mov	x2, x3
  40d06c:	stp	x23, x24, [sp, #48]
  40d070:	mov	x23, x1
  40d074:	mov	x3, x0
  40d078:	ldr	x1, [x25]
  40d07c:	stp	x21, x22, [sp, #32]
  40d080:	mov	x21, x0
  40d084:	sub	x2, x2, x1
  40d088:	add	x0, sp, #0x5c
  40d08c:	stp	x19, x20, [sp, #16]
  40d090:	bl	40aa80 <wcrtomb@plt+0x7d40>
  40d094:	mov	w24, w0
  40d098:	str	xzr, [x21, #416]
  40d09c:	cmp	w0, #0x0
  40d0a0:	b.le	40d398 <wcrtomb@plt+0xa658>
  40d0a4:	mov	x19, x23
  40d0a8:	mov	w22, #0x0                   	// #0
  40d0ac:	ldr	x3, [x25]
  40d0b0:	b	40d0f0 <wcrtomb@plt+0xa3b0>
  40d0b4:	mov	w4, w2
  40d0b8:	mov	x5, x3
  40d0bc:	ldr	x1, [x20, x4, lsl #3]
  40d0c0:	cmn	x1, #0x2
  40d0c4:	b.eq	40d148 <wcrtomb@plt+0xa408>  // b.none
  40d0c8:	add	x3, x5, #0x1
  40d0cc:	str	x3, [x25]
  40d0d0:	add	w22, w22, #0x1
  40d0d4:	ldrb	w1, [x5]
  40d0d8:	cmp	w24, w22
  40d0dc:	ldr	x19, [x20, x1, lsl #3]
  40d0e0:	b.eq	40d174 <wcrtomb@plt+0xa434>  // b.none
  40d0e4:	ldrsw	x0, [x21, #364]
  40d0e8:	cmp	x0, x19
  40d0ec:	b.gt	40d34c <wcrtomb@plt+0xa60c>
  40d0f0:	ldr	x1, [x21, #368]
  40d0f4:	lsl	x26, x19, #3
  40d0f8:	ldrb	w2, [x3]
  40d0fc:	ldr	x20, [x1, x19, lsl #3]
  40d100:	cbnz	x20, 40d0b4 <wcrtomb@plt+0xa374>
  40d104:	ldr	x0, [x21, #376]
  40d108:	ldr	x20, [x0, x19, lsl #3]
  40d10c:	cbnz	x20, 40d0b4 <wcrtomb@plt+0xa374>
  40d110:	mov	x1, x21
  40d114:	mov	x0, x19
  40d118:	bl	40c840 <wcrtomb@plt+0x9b00>
  40d11c:	ldr	x0, [x21, #368]
  40d120:	ldr	x20, [x0, x26]
  40d124:	cbz	x20, 40d360 <wcrtomb@plt+0xa620>
  40d128:	ldr	x3, [x25]
  40d12c:	mov	x5, x3
  40d130:	ldrb	w2, [x3]
  40d134:	mov	w4, w2
  40d138:	ldr	x1, [x20, x4, lsl #3]
  40d13c:	cmn	x1, #0x2
  40d140:	b.ne	40d0c8 <wcrtomb@plt+0xa388>  // b.any
  40d144:	nop
  40d148:	mov	x0, x19
  40d14c:	mov	x1, x21
  40d150:	bl	40c840 <wcrtomb@plt+0x9b00>
  40d154:	add	w22, w22, #0x1
  40d158:	ldr	x5, [x25]
  40d15c:	cmp	w24, w22
  40d160:	add	x3, x5, #0x1
  40d164:	str	x3, [x25]
  40d168:	ldrb	w1, [x5]
  40d16c:	ldr	x19, [x20, x1, lsl #3]
  40d170:	b.ne	40d0e4 <wcrtomb@plt+0xa3a4>  // b.any
  40d174:	mov	w24, #0x0                   	// #0
  40d178:	ldr	w0, [sp, #92]
  40d17c:	add	x3, x3, w24, sxtw
  40d180:	str	x3, [x25]
  40d184:	mov	x22, x19
  40d188:	cmn	w0, #0x1
  40d18c:	b.eq	40d258 <wcrtomb@plt+0xa518>  // b.none
  40d190:	add	x23, x23, x23, lsl #2
  40d194:	ldr	x2, [x21, #296]
  40d198:	lsl	x23, x23, #4
  40d19c:	ldr	x22, [x21, #432]
  40d1a0:	add	x3, x2, x23
  40d1a4:	ldr	x0, [x3, #72]
  40d1a8:	tbnz	x0, #63, 40d274 <wcrtomb@plt+0xa534>
  40d1ac:	ldr	x0, [x22, x19, lsl #3]
  40d1b0:	lsl	x20, x19, #3
  40d1b4:	cbz	x0, 40d304 <wcrtomb@plt+0xa5c4>
  40d1b8:	add	x1, x2, x23
  40d1bc:	ldr	x3, [x1, #72]
  40d1c0:	ldr	x22, [x0, x3, lsl #3]
  40d1c4:	tbz	x22, #63, 40d258 <wcrtomb@plt+0xa518>
  40d1c8:	add	x0, x1, #0x30
  40d1cc:	cmn	x19, #0x1
  40d1d0:	add	x1, x1, #0x38
  40d1d4:	add	x22, x21, #0x198
  40d1d8:	b.eq	40d354 <wcrtomb@plt+0xa614>  // b.none
  40d1dc:	add	x19, x19, x19, lsl #2
  40d1e0:	mov	x5, x22
  40d1e4:	mov	w4, #0xffffffff            	// #-1
  40d1e8:	add	x2, x2, x19, lsl #4
  40d1ec:	add	x3, x2, #0x10
  40d1f0:	add	x2, x2, #0x8
  40d1f4:	bl	40b880 <wcrtomb@plt+0x8b40>
  40d1f8:	ldp	x0, x3, [x21, #408]
  40d1fc:	cmp	x3, #0x0
  40d200:	b.le	40d390 <wcrtomb@plt+0xa650>
  40d204:	ldr	x4, [x21, #344]
  40d208:	add	x3, x0, x3, lsl #4
  40d20c:	mov	w2, #0x0                   	// #0
  40d210:	ldr	x1, [x0], #16
  40d214:	cmp	x3, x0
  40d218:	ldr	w1, [x4, x1, lsl #2]
  40d21c:	orr	w2, w2, w1
  40d220:	b.ne	40d210 <wcrtomb@plt+0xa4d0>  // b.any
  40d224:	eor	w2, w2, #0x7
  40d228:	mov	x1, x22
  40d22c:	mov	x0, x21
  40d230:	bl	40b5f8 <wcrtomb@plt+0x88b8>
  40d234:	mov	x22, x0
  40d238:	mov	x0, x21
  40d23c:	bl	40ad60 <wcrtomb@plt+0x8020>
  40d240:	ldr	x0, [x21, #296]
  40d244:	ldr	x1, [x21, #432]
  40d248:	add	x23, x0, x23
  40d24c:	ldr	x0, [x1, x20]
  40d250:	ldr	x1, [x23, #72]
  40d254:	str	x22, [x0, x1, lsl #3]
  40d258:	mov	x0, x22
  40d25c:	ldp	x19, x20, [sp, #16]
  40d260:	ldp	x21, x22, [sp, #32]
  40d264:	ldp	x23, x24, [sp, #48]
  40d268:	ldp	x25, x26, [sp, #64]
  40d26c:	ldp	x29, x30, [sp], #96
  40d270:	ret
  40d274:	ldr	x0, [x21, #440]
  40d278:	add	x1, x0, #0x1
  40d27c:	cmp	x0, #0x3ff
  40d280:	b.le	40d2f0 <wcrtomb@plt+0xa5b0>
  40d284:	ldr	x0, [x21, #352]
  40d288:	tbnz	x0, #63, 40d2b8 <wcrtomb@plt+0xa578>
  40d28c:	mov	x20, #0xffffffffffffffff    	// #-1
  40d290:	ldr	x0, [x22, x20, lsl #3]
  40d294:	bl	402ae0 <free@plt>
  40d298:	ldr	x22, [x21, #432]
  40d29c:	ldr	x0, [x21, #352]
  40d2a0:	str	xzr, [x22, x20, lsl #3]
  40d2a4:	add	x20, x20, #0x1
  40d2a8:	cmp	x0, x20
  40d2ac:	b.gt	40d290 <wcrtomb@plt+0xa550>
  40d2b0:	ldr	x2, [x21, #296]
  40d2b4:	add	x3, x2, x23
  40d2b8:	ldr	x0, [x21, #304]
  40d2bc:	cmp	x0, #0x0
  40d2c0:	b.le	40d2e8 <wcrtomb@plt+0xa5a8>
  40d2c4:	add	x1, x0, x0, lsl #2
  40d2c8:	mov	x0, x2
  40d2cc:	mov	x4, #0xffffffffffffffff    	// #-1
  40d2d0:	add	x1, x2, x1, lsl #4
  40d2d4:	nop
  40d2d8:	str	x4, [x0, #72]
  40d2dc:	add	x0, x0, #0x50
  40d2e0:	cmp	x1, x0
  40d2e4:	b.ne	40d2d8 <wcrtomb@plt+0xa598>  // b.any
  40d2e8:	mov	x1, #0x1                   	// #1
  40d2ec:	mov	x0, #0x0                   	// #0
  40d2f0:	str	x1, [x21, #440]
  40d2f4:	lsl	x20, x19, #3
  40d2f8:	str	x0, [x3, #72]
  40d2fc:	ldr	x0, [x22, x19, lsl #3]
  40d300:	cbnz	x0, 40d1b8 <wcrtomb@plt+0xa478>
  40d304:	mov	x0, #0x2000                	// #8192
  40d308:	bl	4125f8 <wcrtomb@plt+0xf8b8>
  40d30c:	str	x0, [x22, x19, lsl #3]
  40d310:	mov	x2, #0xffffffffffffffff    	// #-1
  40d314:	ldr	x0, [x21, #432]
  40d318:	ldr	x1, [x0, x19, lsl #3]
  40d31c:	add	x0, x1, #0x2, lsl #12
  40d320:	str	x2, [x1], #8
  40d324:	cmp	x0, x1
  40d328:	b.ne	40d320 <wcrtomb@plt+0xa5e0>  // b.any
  40d32c:	ldr	x2, [x21, #296]
  40d330:	cmn	x19, #0x1
  40d334:	add	x22, x21, #0x198
  40d338:	add	x1, x2, x23
  40d33c:	add	x0, x1, #0x30
  40d340:	add	x1, x1, #0x38
  40d344:	b.ne	40d1dc <wcrtomb@plt+0xa49c>  // b.any
  40d348:	b	40d354 <wcrtomb@plt+0xa614>
  40d34c:	sub	w24, w24, w22
  40d350:	b	40d178 <wcrtomb@plt+0xa438>
  40d354:	mov	x2, x22
  40d358:	bl	40b560 <wcrtomb@plt+0x8820>
  40d35c:	b	40d1f8 <wcrtomb@plt+0xa4b8>
  40d360:	ldr	x0, [x21, #376]
  40d364:	ldr	x20, [x0, x26]
  40d368:	cbnz	x20, 40d128 <wcrtomb@plt+0xa3e8>
  40d36c:	adrp	x3, 421000 <_obstack_memory_used@@Base+0xe3b0>
  40d370:	add	x3, x3, #0x6d8
  40d374:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  40d378:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xe3b0>
  40d37c:	add	x3, x3, #0x18
  40d380:	add	x1, x1, #0x438
  40d384:	add	x0, x0, #0x448
  40d388:	mov	w2, #0xc93                 	// #3219
  40d38c:	bl	402ca0 <__assert_fail@plt>
  40d390:	mov	w2, #0x7                   	// #7
  40d394:	b	40d228 <wcrtomb@plt+0xa4e8>
  40d398:	mov	x19, x23
  40d39c:	ldr	x3, [x25]
  40d3a0:	b	40d178 <wcrtomb@plt+0xa438>
  40d3a4:	nop
  40d3a8:	stp	x29, x30, [sp, #-48]!
  40d3ac:	mov	x29, sp
  40d3b0:	stp	x19, x20, [sp, #16]
  40d3b4:	mov	x19, x1
  40d3b8:	ldr	x1, [x0, #8]
  40d3bc:	stp	x21, x22, [sp, #32]
  40d3c0:	mov	x21, x0
  40d3c4:	cmp	x1, #0x0
  40d3c8:	ldr	x0, [x0]
  40d3cc:	b.le	40d468 <wcrtomb@plt+0xa728>
  40d3d0:	mov	x6, x0
  40d3d4:	mov	x20, #0x0                   	// #0
  40d3d8:	mov	x2, #0x0                   	// #0
  40d3dc:	mov	x4, #0x0                   	// #0
  40d3e0:	ldr	x3, [x19, x2]
  40d3e4:	ldr	x5, [x6, x2]
  40d3e8:	add	x2, x2, #0x8
  40d3ec:	cmp	x2, #0x20
  40d3f0:	eor	x3, x3, x5
  40d3f4:	orr	x4, x4, x3
  40d3f8:	b.ne	40d3e0 <wcrtomb@plt+0xa6a0>  // b.any
  40d3fc:	cbz	x4, 40d454 <wcrtomb@plt+0xa714>
  40d400:	add	x20, x20, #0x1
  40d404:	add	x6, x6, #0x20
  40d408:	cmp	x1, x20
  40d40c:	b.ne	40d3d8 <wcrtomb@plt+0xa698>  // b.any
  40d410:	lsl	x22, x1, #5
  40d414:	mov	x20, x1
  40d418:	ldr	x2, [x21, #16]
  40d41c:	cmp	x1, x2
  40d420:	b.lt	40d440 <wcrtomb@plt+0xa700>  // b.tstop
  40d424:	mov	x3, #0xfffffffffffffeeb    	// #-277
  40d428:	add	x1, x21, #0x10
  40d42c:	movk	x3, #0x7fff, lsl #48
  40d430:	mov	x4, #0x20                  	// #32
  40d434:	mov	x2, #0x1                   	// #1
  40d438:	bl	40ab60 <wcrtomb@plt+0x7e20>
  40d43c:	ldr	x1, [x21, #8]
  40d440:	add	x22, x0, x22
  40d444:	ld1	{v0.16b, v1.16b}, [x19]
  40d448:	add	x1, x1, #0x1
  40d44c:	stp	x0, x1, [x21]
  40d450:	st1	{v0.16b, v1.16b}, [x22]
  40d454:	mov	x0, x20
  40d458:	ldp	x19, x20, [sp, #16]
  40d45c:	ldp	x21, x22, [sp, #32]
  40d460:	ldp	x29, x30, [sp], #48
  40d464:	ret
  40d468:	mov	x22, #0x0                   	// #0
  40d46c:	mov	x20, #0x0                   	// #0
  40d470:	b	40d418 <wcrtomb@plt+0xa6d8>
  40d474:	nop
  40d478:	stp	x29, x30, [sp, #-304]!
  40d47c:	mov	x29, sp
  40d480:	ldr	x1, [x0, #40]
  40d484:	stp	x19, x20, [sp, #16]
  40d488:	stp	x21, x22, [sp, #32]
  40d48c:	stp	x23, x24, [sp, #48]
  40d490:	stp	x25, x26, [sp, #64]
  40d494:	stp	x27, x28, [sp, #80]
  40d498:	str	xzr, [x0, #104]
  40d49c:	stp	xzr, xzr, [sp, #136]
  40d4a0:	stp	xzr, xzr, [sp, #152]
  40d4a4:	cbz	x1, 40d7d0 <wcrtomb@plt+0xaa90>
  40d4a8:	mov	x28, x0
  40d4ac:	bl	40ab00 <wcrtomb@plt+0x7dc0>
  40d4b0:	mov	w1, #0x1                   	// #1
  40d4b4:	stp	w1, w0, [sp, #120]
  40d4b8:	cmp	w0, #0x5e
  40d4bc:	mov	w19, w0
  40d4c0:	b.eq	40dac0 <wcrtomb@plt+0xad80>  // b.none
  40d4c4:	cmp	w19, #0x3a
  40d4c8:	ldr	w25, [x28, #72]
  40d4cc:	add	x23, sp, #0xa8
  40d4d0:	cset	w21, eq  // eq = none
  40d4d4:	add	x20, sp, #0x88
  40d4d8:	add	x0, x23, #0x4
  40d4dc:	str	x0, [sp, #112]
  40d4e0:	and	w21, w21, #0xfffffffd
  40d4e4:	cmp	w19, #0x5b
  40d4e8:	ldr	x0, [x28, #40]
  40d4ec:	b.eq	40d64c <wcrtomb@plt+0xa90c>  // b.none
  40d4f0:	cmp	w19, #0x5c
  40d4f4:	b.eq	40d628 <wcrtomb@plt+0xa8e8>  // b.none
  40d4f8:	cbz	x0, 40d7d0 <wcrtomb@plt+0xaa90>
  40d4fc:	mov	x0, x28
  40d500:	bl	40ab00 <wcrtomb@plt+0x7dc0>
  40d504:	ldr	w24, [x28, #72]
  40d508:	cmp	w0, #0x2d
  40d50c:	b.ne	40da68 <wcrtomb@plt+0xad28>  // b.any
  40d510:	ldr	x0, [x28, #40]
  40d514:	cbz	x0, 40d7d0 <wcrtomb@plt+0xaa90>
  40d518:	mov	x0, x28
  40d51c:	bl	40ab00 <wcrtomb@plt+0x7dc0>
  40d520:	ldr	w26, [x28, #72]
  40d524:	mov	w22, w0
  40d528:	cmp	w0, #0x5b
  40d52c:	b.eq	40d878 <wcrtomb@plt+0xab38>  // b.none
  40d530:	cmp	w0, #0x5d
  40d534:	ldr	x1, [x28, #40]
  40d538:	b.eq	40d8ac <wcrtomb@plt+0xab6c>  // b.none
  40d53c:	cmp	w0, #0x5c
  40d540:	b.ne	40d568 <wcrtomb@plt+0xa828>  // b.any
  40d544:	ldr	x0, [x28, #448]
  40d548:	tbz	w0, #0, 40d568 <wcrtomb@plt+0xa828>
  40d54c:	cbz	x1, 40d7d0 <wcrtomb@plt+0xaa90>
  40d550:	mov	x0, x28
  40d554:	bl	40ab00 <wcrtomb@plt+0x7dc0>
  40d558:	ldr	w26, [x28, #72]
  40d55c:	mov	w22, w0
  40d560:	ldr	x1, [x28, #40]
  40d564:	nop
  40d568:	orr	w21, w21, #0x8
  40d56c:	cbz	x1, 40d7d0 <wcrtomb@plt+0xaa90>
  40d570:	mov	x0, x28
  40d574:	bl	40ab00 <wcrtomb@plt+0x7dc0>
  40d578:	cmp	w26, w25
  40d57c:	ldr	w6, [x28, #72]
  40d580:	mov	w24, w0
  40d584:	ccmn	w25, #0x1, #0x4, eq  // eq = none
  40d588:	b.eq	40d8dc <wcrtomb@plt+0xab9c>  // b.none
  40d58c:	mov	w26, w19
  40d590:	mov	w2, w25
  40d594:	mov	w19, w0
  40d598:	mov	w25, w6
  40d59c:	cmp	w26, #0x3a
  40d5a0:	mov	w0, #0x2                   	// #2
  40d5a4:	mov	w1, #0x4                   	// #4
  40d5a8:	csel	w0, w0, w1, eq  // eq = none
  40d5ac:	ldrb	w1, [x28, #1048]
  40d5b0:	orr	w21, w21, w0
  40d5b4:	cbz	w1, 40d6a0 <wcrtomb@plt+0xa960>
  40d5b8:	cmn	w2, #0x1
  40d5bc:	b.ne	40d6d4 <wcrtomb@plt+0xa994>  // b.any
  40d5c0:	str	wzr, [sp, #120]
  40d5c4:	cmp	w19, #0x5d
  40d5c8:	b.ne	40d4e0 <wcrtomb@plt+0xa7a0>  // b.any
  40d5cc:	cmp	w21, #0x7
  40d5d0:	b.eq	40dae0 <wcrtomb@plt+0xada0>  // b.none
  40d5d4:	ldr	w1, [sp, #120]
  40d5d8:	mov	x0, #0x112                 	// #274
  40d5dc:	cbz	w1, 40d60c <wcrtomb@plt+0xa8cc>
  40d5e0:	ldrb	w0, [x28, #1048]
  40d5e4:	cbz	w0, 40da7c <wcrtomb@plt+0xad3c>
  40d5e8:	ldr	w0, [sp, #124]
  40d5ec:	cmp	w0, #0x5e
  40d5f0:	b.eq	40db0c <wcrtomb@plt+0xadcc>  // b.none
  40d5f4:	ldr	x0, [x28, #104]
  40d5f8:	add	x1, sp, #0x88
  40d5fc:	cbnz	x0, 40db0c <wcrtomb@plt+0xadcc>
  40d600:	mov	x0, x28
  40d604:	bl	40d3a8 <wcrtomb@plt+0xa668>
  40d608:	add	x0, x0, #0x114
  40d60c:	ldp	x19, x20, [sp, #16]
  40d610:	ldp	x21, x22, [sp, #32]
  40d614:	ldp	x23, x24, [sp, #48]
  40d618:	ldp	x25, x26, [sp, #64]
  40d61c:	ldp	x27, x28, [sp, #80]
  40d620:	ldp	x29, x30, [sp], #304
  40d624:	ret
  40d628:	ldr	x1, [x28, #448]
  40d62c:	tbz	w1, #0, 40d4f8 <wcrtomb@plt+0xa7b8>
  40d630:	cbz	x0, 40d7d0 <wcrtomb@plt+0xaa90>
  40d634:	mov	x0, x28
  40d638:	bl	40ab00 <wcrtomb@plt+0x7dc0>
  40d63c:	ldr	w25, [x28, #72]
  40d640:	mov	w19, w0
  40d644:	ldr	x0, [x28, #40]
  40d648:	b	40d4f8 <wcrtomb@plt+0xa7b8>
  40d64c:	cbz	x0, 40d7d0 <wcrtomb@plt+0xaa90>
  40d650:	mov	x0, x28
  40d654:	bl	40ab00 <wcrtomb@plt+0x7dc0>
  40d658:	mov	w22, w0
  40d65c:	cmp	w0, #0x3a
  40d660:	b.eq	40d76c <wcrtomb@plt+0xaa2c>  // b.none
  40d664:	cmp	w0, #0x2e
  40d668:	mov	w0, #0x3d                  	// #61
  40d66c:	ccmp	w22, w0, #0x4, ne  // ne = any
  40d670:	b.eq	40d78c <wcrtomb@plt+0xaa4c>  // b.none
  40d674:	cmp	w22, #0x100
  40d678:	b.eq	40d92c <wcrtomb@plt+0xabec>  // b.none
  40d67c:	ldr	w24, [x28, #72]
  40d680:	cmp	w22, #0x2d
  40d684:	b.eq	40d510 <wcrtomb@plt+0xa7d0>  // b.none
  40d688:	mov	w26, w19
  40d68c:	mov	w2, w25
  40d690:	mov	w19, w22
  40d694:	mov	w25, w24
  40d698:	mov	w0, #0x4                   	// #4
  40d69c:	b	40d5ac <wcrtomb@plt+0xa86c>
  40d6a0:	ldrb	w0, [x28, #457]
  40d6a4:	cbz	w0, 40d6b8 <wcrtomb@plt+0xa978>
  40d6a8:	bl	402ab0 <__ctype_b_loc@plt>
  40d6ac:	ldr	x0, [x0]
  40d6b0:	ldrh	w0, [x0, w26, sxtw #1]
  40d6b4:	tbnz	w0, #10, 40d91c <wcrtomb@plt+0xabdc>
  40d6b8:	lsr	w1, w26, #6
  40d6bc:	mov	x0, #0x1                   	// #1
  40d6c0:	lsl	x26, x0, x26
  40d6c4:	ldr	x0, [x20, x1, lsl #3]
  40d6c8:	orr	x26, x26, x0
  40d6cc:	str	x26, [x20, x1, lsl #3]
  40d6d0:	b	40d5c4 <wcrtomb@plt+0xa884>
  40d6d4:	ldrb	w0, [x28, #457]
  40d6d8:	cbnz	w0, 40d8b4 <wcrtomb@plt+0xab74>
  40d6dc:	mov	w22, #0x1                   	// #1
  40d6e0:	str	w2, [sp, #168]
  40d6e4:	add	x0, x28, #0x70
  40d6e8:	mov	x26, x23
  40d6ec:	mov	w27, #0x0                   	// #0
  40d6f0:	mov	x24, #0x1                   	// #1
  40d6f4:	str	x0, [sp, #104]
  40d6f8:	b	40d724 <wcrtomb@plt+0xa9e4>
  40d6fc:	lsr	w1, w0, #6
  40d700:	lsl	x0, x24, x0
  40d704:	ldr	x2, [x20, x1, lsl #3]
  40d708:	orr	x0, x0, x2
  40d70c:	str	x0, [x20, x1, lsl #3]
  40d710:	add	w27, w27, #0x1
  40d714:	add	x26, x26, #0x4
  40d718:	cmp	w27, w22
  40d71c:	b.ge	40d5c4 <wcrtomb@plt+0xa884>  // b.tcont
  40d720:	ldr	w2, [x26]
  40d724:	mov	w0, w2
  40d728:	bl	4027b0 <wctob@plt>
  40d72c:	tbz	w0, #31, 40d6fc <wcrtomb@plt+0xa9bc>
  40d730:	ldp	x0, x1, [x28, #96]
  40d734:	ldr	x2, [x28, #112]
  40d738:	cmp	x1, x2
  40d73c:	b.lt	40d758 <wcrtomb@plt+0xaa18>  // b.tstop
  40d740:	ldr	x1, [sp, #104]
  40d744:	mov	x4, #0x4                   	// #4
  40d748:	mov	x3, #0xffffffffffffffff    	// #-1
  40d74c:	mov	x2, #0x1                   	// #1
  40d750:	bl	40ab60 <wcrtomb@plt+0x7e20>
  40d754:	ldr	x1, [x28, #104]
  40d758:	add	x2, x1, #0x1
  40d75c:	stp	x0, x2, [x28, #96]
  40d760:	ldr	w2, [x26]
  40d764:	str	w2, [x0, x1, lsl #2]
  40d768:	b	40d710 <wcrtomb@plt+0xa9d0>
  40d76c:	ldr	x0, [x28, #448]
  40d770:	tbnz	w0, #2, 40d78c <wcrtomb@plt+0xaa4c>
  40d774:	mov	w26, w19
  40d778:	mov	w2, w25
  40d77c:	mov	w19, w22
  40d780:	ldr	w25, [x28, #72]
  40d784:	mov	w0, #0x4                   	// #4
  40d788:	b	40d5ac <wcrtomb@plt+0xa86c>
  40d78c:	ldr	x0, [x28, #40]
  40d790:	cbz	x0, 40d7d0 <wcrtomb@plt+0xaa90>
  40d794:	mov	w19, #0x0                   	// #0
  40d798:	mov	x0, x28
  40d79c:	bl	40ab00 <wcrtomb@plt+0x7dc0>
  40d7a0:	ldr	x1, [x28, #40]
  40d7a4:	cbz	x1, 40d7d0 <wcrtomb@plt+0xaa90>
  40d7a8:	cmp	w22, w0
  40d7ac:	b.eq	40d7dc <wcrtomb@plt+0xaa9c>  // b.none
  40d7b0:	cmp	w19, #0x1f
  40d7b4:	b.gt	40d7d4 <wcrtomb@plt+0xaa94>
  40d7b8:	strb	w0, [x23, w19, sxtw]
  40d7bc:	mov	x0, x28
  40d7c0:	bl	40ab00 <wcrtomb@plt+0x7dc0>
  40d7c4:	add	w19, w19, #0x1
  40d7c8:	ldr	x1, [x28, #40]
  40d7cc:	cbnz	x1, 40d7a8 <wcrtomb@plt+0xaa68>
  40d7d0:	bl	40b490 <wcrtomb@plt+0x8750>
  40d7d4:	strb	wzr, [sp, #168]
  40d7d8:	b	40d798 <wcrtomb@plt+0xaa58>
  40d7dc:	ldr	x1, [x28, #32]
  40d7e0:	ldrb	w1, [x1]
  40d7e4:	cmp	w1, #0x5d
  40d7e8:	b.ne	40d7b0 <wcrtomb@plt+0xaa70>  // b.any
  40d7ec:	mov	x0, x28
  40d7f0:	strb	wzr, [x23, w19, sxtw]
  40d7f4:	bl	40ab00 <wcrtomb@plt+0x7dc0>
  40d7f8:	cmp	w22, #0x3a
  40d7fc:	b.eq	40d824 <wcrtomb@plt+0xaae4>  // b.none
  40d800:	str	wzr, [sp, #120]
  40d804:	ldr	x0, [x28, #40]
  40d808:	orr	w21, w21, #0x8
  40d80c:	cbz	x0, 40d7d0 <wcrtomb@plt+0xaa90>
  40d810:	mov	x0, x28
  40d814:	bl	40ab00 <wcrtomb@plt+0x7dc0>
  40d818:	ldr	w25, [x28, #72]
  40d81c:	mov	w19, w0
  40d820:	b	40d5c4 <wcrtomb@plt+0xa884>
  40d824:	ldrb	w0, [x28, #457]
  40d828:	cbnz	w0, 40d9c4 <wcrtomb@plt+0xac84>
  40d82c:	adrp	x19, 421000 <_obstack_memory_used@@Base+0xe3b0>
  40d830:	add	x19, x19, #0x6d8
  40d834:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  40d838:	add	x24, x19, #0x38
  40d83c:	add	x1, x1, #0x450
  40d840:	mov	w22, #0x0                   	// #0
  40d844:	nop
  40d848:	mov	x0, x23
  40d84c:	bl	402aa0 <strcmp@plt>
  40d850:	cbz	w0, 40da04 <wcrtomb@plt+0xacc4>
  40d854:	ldr	x1, [x24, #24]!
  40d858:	add	w22, w22, #0x1
  40d85c:	cbnz	x1, 40d848 <wcrtomb@plt+0xab08>
  40d860:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  40d864:	add	x1, x1, #0x4a0
  40d868:	mov	w2, #0x5                   	// #5
  40d86c:	mov	x0, #0x0                   	// #0
  40d870:	bl	402c20 <dcgettext@plt>
  40d874:	bl	409320 <wcrtomb@plt+0x65e0>
  40d878:	ldp	x0, x1, [x28, #32]
  40d87c:	ldrb	w2, [x0]
  40d880:	cmp	w2, #0x2e
  40d884:	b.ne	40d568 <wcrtomb@plt+0xa828>  // b.any
  40d888:	str	wzr, [sp, #120]
  40d88c:	sub	x0, x0, #0x1
  40d890:	add	x1, x1, #0x1
  40d894:	mov	w26, w19
  40d898:	mov	w2, w25
  40d89c:	mov	w19, #0x2d                  	// #45
  40d8a0:	mov	w25, w24
  40d8a4:	stp	x0, x1, [x28, #32]
  40d8a8:	b	40d59c <wcrtomb@plt+0xa85c>
  40d8ac:	ldr	x0, [x28, #32]
  40d8b0:	b	40d88c <wcrtomb@plt+0xab4c>
  40d8b4:	ldr	x1, [sp, #112]
  40d8b8:	mov	w0, w2
  40d8bc:	str	w2, [sp, #104]
  40d8c0:	bl	4103c0 <wcrtomb@plt+0xd680>
  40d8c4:	add	w22, w0, #0x1
  40d8c8:	ldr	w2, [sp, #104]
  40d8cc:	cmp	w22, #0x0
  40d8d0:	str	w2, [sp, #168]
  40d8d4:	b.gt	40d6e4 <wcrtomb@plt+0xa9a4>
  40d8d8:	b	40d5c4 <wcrtomb@plt+0xa884>
  40d8dc:	ldrb	w0, [x28, #1049]
  40d8e0:	cbnz	w0, 40d934 <wcrtomb@plt+0xabf4>
  40d8e4:	sub	w1, w22, #0x30
  40d8e8:	sub	w0, w19, #0x30
  40d8ec:	and	w1, w1, #0xff
  40d8f0:	and	w0, w0, #0xff
  40d8f4:	cmp	w1, #0x9
  40d8f8:	cset	w1, ls  // ls = plast
  40d8fc:	cmp	w0, #0x9
  40d900:	cset	w0, ls  // ls = plast
  40d904:	tst	w1, w0
  40d908:	b.ne	40d934 <wcrtomb@plt+0xabf4>  // b.any
  40d90c:	mov	w25, w6
  40d910:	mov	w19, w24
  40d914:	str	wzr, [sp, #120]
  40d918:	b	40d5c4 <wcrtomb@plt+0xa884>
  40d91c:	mov	w0, w26
  40d920:	mov	x1, x20
  40d924:	bl	40aeb0 <wcrtomb@plt+0x8170>
  40d928:	b	40d5c4 <wcrtomb@plt+0xa884>
  40d92c:	ldr	x0, [x28, #40]
  40d930:	b	40d4f8 <wcrtomb@plt+0xa7b8>
  40d934:	cmp	w22, w19
  40d938:	b.lt	40d9b8 <wcrtomb@plt+0xac78>  // b.tstop
  40d93c:	add	w22, w22, #0x1
  40d940:	sbfiz	x25, x19, #1, #32
  40d944:	mov	x26, #0x1                   	// #1
  40d948:	b	40d970 <wcrtomb@plt+0xac30>
  40d94c:	lsr	w2, w19, #6
  40d950:	lsl	x1, x26, x19
  40d954:	add	w19, w19, #0x1
  40d958:	add	x25, x25, #0x2
  40d95c:	cmp	w22, w19
  40d960:	ldr	x3, [x20, x2, lsl #3]
  40d964:	orr	x1, x1, x3
  40d968:	str	x1, [x20, x2, lsl #3]
  40d96c:	b.eq	40d9b8 <wcrtomb@plt+0xac78>  // b.none
  40d970:	ldrb	w1, [x28, #457]
  40d974:	cbz	w1, 40d94c <wcrtomb@plt+0xac0c>
  40d978:	str	w6, [sp, #104]
  40d97c:	bl	402ab0 <__ctype_b_loc@plt>
  40d980:	ldr	x0, [x0]
  40d984:	ldr	w6, [sp, #104]
  40d988:	ldrh	w0, [x0, x25]
  40d98c:	tbz	w0, #10, 40d94c <wcrtomb@plt+0xac0c>
  40d990:	mov	w0, w19
  40d994:	mov	x1, x20
  40d998:	add	w19, w19, #0x1
  40d99c:	str	w6, [sp, #104]
  40d9a0:	bl	40aeb0 <wcrtomb@plt+0x8170>
  40d9a4:	add	x25, x25, #0x2
  40d9a8:	ldr	w6, [sp, #104]
  40d9ac:	cmp	w22, w19
  40d9b0:	b.ne	40d970 <wcrtomb@plt+0xac30>  // b.any
  40d9b4:	nop
  40d9b8:	mov	w25, w6
  40d9bc:	mov	w19, w24
  40d9c0:	b	40d5c4 <wcrtomb@plt+0xa884>
  40d9c4:	ldr	w0, [x23]
  40d9c8:	mov	w1, #0x7075                	// #28789
  40d9cc:	movk	w1, #0x6570, lsl #16
  40d9d0:	cmp	w0, w1
  40d9d4:	b.eq	40dafc <wcrtomb@plt+0xadbc>  // b.none
  40d9d8:	ldr	w1, [x23]
  40d9dc:	mov	w0, #0x6f6c                	// #28524
  40d9e0:	movk	w0, #0x6577, lsl #16
  40d9e4:	cmp	w1, w0
  40d9e8:	b.ne	40d82c <wcrtomb@plt+0xaaec>  // b.any
  40d9ec:	ldrh	w0, [x23, #4]
  40d9f0:	cmp	w0, #0x72
  40d9f4:	b.ne	40d82c <wcrtomb@plt+0xaaec>  // b.any
  40d9f8:	adrp	x19, 421000 <_obstack_memory_used@@Base+0xe3b0>
  40d9fc:	add	x19, x19, #0x6d8
  40da00:	mov	w22, #0x0                   	// #0
  40da04:	ldrb	w0, [x28, #1048]
  40da08:	sxtw	x1, w22
  40da0c:	cbz	w0, 40da20 <wcrtomb@plt+0xace0>
  40da10:	add	x0, x1, w22, sxtw #1
  40da14:	add	x0, x19, x0, lsl #3
  40da18:	ldrb	w0, [x0, #72]
  40da1c:	cbz	w0, 40d800 <wcrtomb@plt+0xaac0>
  40da20:	add	x1, x1, x1, lsl #1
  40da24:	mov	w24, #0x0                   	// #0
  40da28:	mov	x22, #0x1                   	// #1
  40da2c:	add	x19, x19, x1, lsl #3
  40da30:	ldr	x19, [x19, #64]
  40da34:	nop
  40da38:	mov	w0, w24
  40da3c:	blr	x19
  40da40:	cbz	w0, 40da58 <wcrtomb@plt+0xad18>
  40da44:	lsr	w1, w24, #6
  40da48:	lsl	x0, x22, x24
  40da4c:	ldr	x2, [x20, x1, lsl #3]
  40da50:	orr	x0, x0, x2
  40da54:	str	x0, [x20, x1, lsl #3]
  40da58:	add	w24, w24, #0x1
  40da5c:	cmp	w24, #0x100
  40da60:	b.ne	40da38 <wcrtomb@plt+0xacf8>  // b.any
  40da64:	b	40d804 <wcrtomb@plt+0xaac4>
  40da68:	mov	w26, w19
  40da6c:	mov	w2, w25
  40da70:	mov	w19, w0
  40da74:	mov	w25, w24
  40da78:	b	40d59c <wcrtomb@plt+0xa85c>
  40da7c:	ldr	w0, [sp, #124]
  40da80:	add	x1, sp, #0x88
  40da84:	cmp	w0, #0x5e
  40da88:	b.ne	40d600 <wcrtomb@plt+0xa8c0>  // b.any
  40da8c:	mov	x0, x1
  40da90:	add	x3, x1, #0x20
  40da94:	ldr	x2, [x0]
  40da98:	mvn	x2, x2
  40da9c:	str	x2, [x0], #8
  40daa0:	cmp	x0, x3
  40daa4:	b.ne	40da94 <wcrtomb@plt+0xad54>  // b.any
  40daa8:	ldr	x0, [x28, #448]
  40daac:	tbz	w0, #8, 40d600 <wcrtomb@plt+0xa8c0>
  40dab0:	ldr	x0, [sp, #136]
  40dab4:	and	x0, x0, #0xfffffffffffffbff
  40dab8:	str	x0, [sp, #136]
  40dabc:	b	40d600 <wcrtomb@plt+0xa8c0>
  40dac0:	ldr	x0, [x28, #40]
  40dac4:	cbz	x0, 40d7d0 <wcrtomb@plt+0xaa90>
  40dac8:	mov	x0, x28
  40dacc:	bl	40ab00 <wcrtomb@plt+0x7dc0>
  40dad0:	ldrb	w1, [x28, #1049]
  40dad4:	mov	w19, w0
  40dad8:	str	w1, [sp, #120]
  40dadc:	b	40d4c4 <wcrtomb@plt+0xa784>
  40dae0:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  40dae4:	add	x1, x1, #0x468
  40dae8:	mov	w2, #0x5                   	// #5
  40daec:	mov	x0, #0x0                   	// #0
  40daf0:	bl	402c20 <dcgettext@plt>
  40daf4:	bl	409338 <wcrtomb@plt+0x65f8>
  40daf8:	b	40d5d4 <wcrtomb@plt+0xa894>
  40dafc:	ldrh	w0, [x23, #4]
  40db00:	cmp	w0, #0x72
  40db04:	b.ne	40d9d8 <wcrtomb@plt+0xac98>  // b.any
  40db08:	b	40d9f8 <wcrtomb@plt+0xacb8>
  40db0c:	ldr	w0, [sp, #124]
  40db10:	ldp	x2, x1, [sp, #136]
  40db14:	cmp	w0, #0x5e
  40db18:	cset	w0, eq  // eq = none
  40db1c:	strb	w0, [x28, #88]
  40db20:	ldp	x3, x0, [sp, #152]
  40db24:	orr	x2, x2, x1
  40db28:	mov	x1, #0xffffffffffffffff    	// #-1
  40db2c:	orr	x0, x0, x3
  40db30:	orr	x0, x0, x2
  40db34:	cbnz	x0, 40db5c <wcrtomb@plt+0xae1c>
  40db38:	str	x1, [x28, #80]
  40db3c:	mov	x0, #0x113                 	// #275
  40db40:	ldp	x19, x20, [sp, #16]
  40db44:	ldp	x21, x22, [sp, #32]
  40db48:	ldp	x23, x24, [sp, #48]
  40db4c:	ldp	x25, x26, [sp, #64]
  40db50:	ldp	x27, x28, [sp, #80]
  40db54:	ldp	x29, x30, [sp], #304
  40db58:	ret
  40db5c:	add	x1, sp, #0x88
  40db60:	mov	x0, x28
  40db64:	bl	40d3a8 <wcrtomb@plt+0xa668>
  40db68:	mov	x1, x0
  40db6c:	b	40db38 <wcrtomb@plt+0xadf8>
  40db70:	stp	x29, x30, [sp, #-96]!
  40db74:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  40db78:	mov	x29, sp
  40db7c:	stp	x21, x22, [sp, #32]
  40db80:	add	x21, x1, #0x5f0
  40db84:	mov	w22, #0x0                   	// #0
  40db88:	stp	x19, x20, [sp, #16]
  40db8c:	mov	x19, x0
  40db90:	ldr	x0, [x0, #40]
  40db94:	str	x23, [sp, #48]
  40db98:	mov	w23, #0x2                   	// #2
  40db9c:	cbz	x0, 40e0a0 <wcrtomb@plt+0xb360>
  40dba0:	mov	x0, x19
  40dba4:	bl	40ab00 <wcrtomb@plt+0x7dc0>
  40dba8:	mov	w20, w0
  40dbac:	sub	w0, w0, #0xa
  40dbb0:	cmp	w0, #0x72
  40dbb4:	b.hi	40dc68 <wcrtomb@plt+0xaf28>  // b.pmore
  40dbb8:	ldrh	w0, [x21, w0, uxtw #1]
  40dbbc:	adr	x1, 40dbc8 <wcrtomb@plt+0xae88>
  40dbc0:	add	x0, x1, w0, sxth #2
  40dbc4:	br	x0
  40dbc8:	cbnz	w22, 40dc68 <wcrtomb@plt+0xaf28>
  40dbcc:	ldr	x1, [x19, #448]
  40dbd0:	tbnz	w1, #3, 40debc <wcrtomb@plt+0xb17c>
  40dbd4:	ldr	x2, [x19, #40]
  40dbd8:	cbz	x2, 40debc <wcrtomb@plt+0xb17c>
  40dbdc:	lsr	x0, x1, #13
  40dbe0:	eor	x0, x0, #0x1
  40dbe4:	and	x3, x0, #0x1
  40dbe8:	and	w0, w0, #0x1
  40dbec:	cmp	x2, x3
  40dbf0:	b.le	40dc14 <wcrtomb@plt+0xaed4>
  40dbf4:	ldr	x3, [x19, #32]
  40dbf8:	ldrb	w4, [x3]
  40dbfc:	cmp	w4, #0x5c
  40dc00:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  40dc04:	cset	x0, ne  // ne = any
  40dc08:	ldrb	w0, [x3, x0]
  40dc0c:	cmp	w0, #0x29
  40dc10:	b.eq	40debc <wcrtomb@plt+0xb17c>  // b.none
  40dc14:	lsr	x0, x1, #15
  40dc18:	eor	x0, x0, #0x1
  40dc1c:	and	x3, x0, #0x1
  40dc20:	and	w0, w0, #0x1
  40dc24:	cmp	x2, x3
  40dc28:	b.le	40dc4c <wcrtomb@plt+0xaf0c>
  40dc2c:	ldr	x3, [x19, #32]
  40dc30:	ldrb	w4, [x3]
  40dc34:	cmp	w4, #0x5c
  40dc38:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  40dc3c:	cset	x0, ne  // ne = any
  40dc40:	ldrb	w0, [x3, x0]
  40dc44:	cmp	w0, #0x7c
  40dc48:	b.eq	40debc <wcrtomb@plt+0xb17c>  // b.none
  40dc4c:	tst	x1, #0x800
  40dc50:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  40dc54:	b.le	40dc68 <wcrtomb@plt+0xaf28>
  40dc58:	ldr	x0, [x19, #32]
  40dc5c:	ldrb	w0, [x0]
  40dc60:	cmp	w0, #0xa
  40dc64:	b.eq	40debc <wcrtomb@plt+0xb17c>  // b.none
  40dc68:	ldrb	w1, [x19, #1048]
  40dc6c:	strb	wzr, [x19, #120]
  40dc70:	cbnz	w1, 40dce0 <wcrtomb@plt+0xafa0>
  40dc74:	ldrb	w0, [x19, #457]
  40dc78:	cbz	w0, 40dcac <wcrtomb@plt+0xaf6c>
  40dc7c:	bl	402ab0 <__ctype_b_loc@plt>
  40dc80:	mov	x1, x0
  40dc84:	sxtw	x0, w20
  40dc88:	ldr	x1, [x1]
  40dc8c:	ldrh	w1, [x1, w20, sxtw #1]
  40dc90:	tbnz	w1, #10, 40dcb4 <wcrtomb@plt+0xaf74>
  40dc94:	str	x0, [x19, #48]
  40dc98:	ldp	x19, x20, [sp, #16]
  40dc9c:	ldp	x21, x22, [sp, #32]
  40dca0:	ldr	x23, [sp, #48]
  40dca4:	ldp	x29, x30, [sp], #96
  40dca8:	ret
  40dcac:	sxtw	x0, w20
  40dcb0:	b	40dc94 <wcrtomb@plt+0xaf54>
  40dcb4:	mov	w0, w20
  40dcb8:	add	x1, sp, #0x40
  40dcbc:	stp	xzr, xzr, [sp, #64]
  40dcc0:	stp	xzr, xzr, [sp, #80]
  40dcc4:	bl	40aeb0 <wcrtomb@plt+0x8170>
  40dcc8:	add	x1, sp, #0x40
  40dccc:	mov	x0, x19
  40dcd0:	bl	40d3a8 <wcrtomb@plt+0xa668>
  40dcd4:	add	x0, x0, #0x114
  40dcd8:	str	x0, [x19, #48]
  40dcdc:	b	40dc98 <wcrtomb@plt+0xaf58>
  40dce0:	mov	x1, #0x109                 	// #265
  40dce4:	str	x1, [x19, #48]
  40dce8:	mov	x0, x1
  40dcec:	ldp	x19, x20, [sp, #16]
  40dcf0:	ldp	x21, x22, [sp, #32]
  40dcf4:	ldr	x23, [sp, #48]
  40dcf8:	ldp	x29, x30, [sp], #96
  40dcfc:	ret
  40dd00:	cbz	w22, 40dc68 <wcrtomb@plt+0xaf28>
  40dd04:	ldr	x0, [x19, #448]
  40dd08:	tbnz	w0, #14, 40dc68 <wcrtomb@plt+0xaf28>
  40dd0c:	mov	x1, #0x112                 	// #274
  40dd10:	mov	x0, x1
  40dd14:	str	x1, [x19, #48]
  40dd18:	strb	wzr, [x19, #120]
  40dd1c:	b	40dc98 <wcrtomb@plt+0xaf58>
  40dd20:	ldrb	w1, [x19, #1048]
  40dd24:	cbz	w22, 40dc6c <wcrtomb@plt+0xaf2c>
  40dd28:	ldr	x2, [x19, #448]
  40dd2c:	and	x0, x2, #0x80000
  40dd30:	tbnz	w2, #19, 40dc6c <wcrtomb@plt+0xaf2c>
  40dd34:	cbz	w1, 40e190 <wcrtomb@plt+0xb450>
  40dd38:	cmp	w20, #0x77
  40dd3c:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  40dd40:	cset	x0, eq  // eq = none
  40dd44:	add	x1, x1, #0x518
  40dd48:	mov	x2, #0xc                   	// #12
  40dd4c:	sub	x2, x2, x0
  40dd50:	cinc	x1, x1, eq  // eq = none
  40dd54:	ldp	x21, x20, [x19, #32]
  40dd58:	stp	x1, x2, [x19, #32]
  40dd5c:	mov	x0, x19
  40dd60:	bl	40d478 <wcrtomb@plt+0xa738>
  40dd64:	stp	x21, x20, [x19, #32]
  40dd68:	str	x0, [x19, #48]
  40dd6c:	strb	wzr, [x19, #120]
  40dd70:	b	40dc98 <wcrtomb@plt+0xaf58>
  40dd74:	ldrb	w1, [x19, #1048]
  40dd78:	cbz	w22, 40dc6c <wcrtomb@plt+0xaf2c>
  40dd7c:	ldr	x0, [x19, #448]
  40dd80:	and	x21, x0, #0x80000
  40dd84:	tbnz	w0, #19, 40dc6c <wcrtomb@plt+0xaf2c>
  40dd88:	cbz	w1, 40e1f4 <wcrtomb@plt+0xb4b4>
  40dd8c:	cmp	w20, #0x73
  40dd90:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  40dd94:	cset	x0, eq  // eq = none
  40dd98:	add	x1, x1, #0x508
  40dd9c:	mov	x2, #0xb                   	// #11
  40dda0:	b	40dd4c <wcrtomb@plt+0xb00c>
  40dda4:	cbz	w22, 40dc68 <wcrtomb@plt+0xaf28>
  40dda8:	ldr	x0, [x19, #448]
  40ddac:	tbnz	w0, #19, 40dc68 <wcrtomb@plt+0xaf28>
  40ddb0:	mov	x1, #0x110                 	// #272
  40ddb4:	mov	x0, x1
  40ddb8:	str	x1, [x19, #48]
  40ddbc:	b	40dc98 <wcrtomb@plt+0xaf58>
  40ddc0:	cbnz	w22, 40dc68 <wcrtomb@plt+0xaf28>
  40ddc4:	ldr	x0, [x19, #448]
  40ddc8:	tbnz	w0, #3, 40dde0 <wcrtomb@plt+0xb0a0>
  40ddcc:	ldr	x0, [x19, #48]
  40ddd0:	sub	x1, x0, #0x106
  40ddd4:	cmp	x1, #0x1
  40ddd8:	ccmn	x0, #0x1, #0x4, hi  // hi = pmore
  40dddc:	b.ne	40dc68 <wcrtomb@plt+0xaf28>  // b.any
  40dde0:	mov	x1, #0x10c                 	// #268
  40dde4:	mov	x0, x1
  40dde8:	str	x1, [x19, #48]
  40ddec:	b	40dc98 <wcrtomb@plt+0xaf58>
  40ddf0:	cbnz	w22, 40dc68 <wcrtomb@plt+0xaf28>
  40ddf4:	ldr	x0, [x19, #40]
  40ddf8:	cbz	x0, 40e344 <wcrtomb@plt+0xb604>
  40ddfc:	cmp	w23, #0x1
  40de00:	mov	w22, #0x1                   	// #1
  40de04:	b.eq	40e358 <wcrtomb@plt+0xb618>  // b.none
  40de08:	mov	w23, w22
  40de0c:	b	40db9c <wcrtomb@plt+0xae5c>
  40de10:	cbz	w22, 40dc68 <wcrtomb@plt+0xaf28>
  40de14:	ldr	x0, [x19, #448]
  40de18:	tbnz	w0, #19, 40dc68 <wcrtomb@plt+0xaf28>
  40de1c:	b	40dde0 <wcrtomb@plt+0xb0a0>
  40de20:	ldr	x6, [x19, #448]
  40de24:	tbz	w6, #9, 40dc68 <wcrtomb@plt+0xaf28>
  40de28:	lsr	x0, x6, #12
  40de2c:	eor	x0, x0, #0x1
  40de30:	and	w0, w0, #0x1
  40de34:	cmp	w0, w22
  40de38:	b.ne	40dc68 <wcrtomb@plt+0xaf28>  // b.any
  40de3c:	tbnz	w6, #4, 40de48 <wcrtomb@plt+0xb108>
  40de40:	ldrb	w0, [x19, #120]
  40de44:	cbnz	w0, 40dc68 <wcrtomb@plt+0xaf28>
  40de48:	ldp	x1, x5, [x19, #32]
  40de4c:	mov	x0, #0xffffffffffffffff    	// #-1
  40de50:	str	x0, [x19, #64]
  40de54:	mov	w7, #0x8030                	// #32816
  40de58:	add	x5, x1, x5
  40de5c:	cmp	x1, x5
  40de60:	b.ne	40de8c <wcrtomb@plt+0xb14c>  // b.any
  40de64:	b	40e2a0 <wcrtomb@plt+0xb560>
  40de68:	add	w0, w0, w0, lsl #2
  40de6c:	add	w0, w2, w0, lsl #1
  40de70:	cmp	w0, w7
  40de74:	csel	w0, w0, w7, le
  40de78:	sub	w0, w0, #0x30
  40de7c:	str	w0, [x19, #64]
  40de80:	add	x1, x1, #0x1
  40de84:	cmp	x5, x1
  40de88:	b.eq	40e2a0 <wcrtomb@plt+0xb560>  // b.none
  40de8c:	ldrb	w2, [x1]
  40de90:	sub	w3, w2, #0x30
  40de94:	and	w4, w3, #0xff
  40de98:	cmp	w4, #0x9
  40de9c:	b.hi	40e0f4 <wcrtomb@plt+0xb3b4>  // b.pmore
  40dea0:	cmn	w0, #0x1
  40dea4:	b.ne	40de68 <wcrtomb@plt+0xb128>  // b.any
  40dea8:	mov	w0, w3
  40deac:	b	40de7c <wcrtomb@plt+0xb13c>
  40deb0:	cbz	w22, 40dc68 <wcrtomb@plt+0xaf28>
  40deb4:	ldr	x0, [x19, #448]
  40deb8:	tbnz	w0, #19, 40dc68 <wcrtomb@plt+0xaf28>
  40debc:	mov	x1, #0x10d                 	// #269
  40dec0:	mov	x0, x1
  40dec4:	str	x1, [x19, #48]
  40dec8:	b	40dc98 <wcrtomb@plt+0xaf58>
  40decc:	cbz	w22, 40dc68 <wcrtomb@plt+0xaf28>
  40ded0:	ldr	x0, [x19, #448]
  40ded4:	tbnz	w0, #19, 40dc68 <wcrtomb@plt+0xaf28>
  40ded8:	mov	x1, #0x10f                 	// #271
  40dedc:	mov	x0, x1
  40dee0:	str	x1, [x19, #48]
  40dee4:	b	40dc98 <wcrtomb@plt+0xaf58>
  40dee8:	ldr	x0, [x19, #448]
  40deec:	tst	x0, #0x400
  40def0:	ccmp	w22, #0x0, #0x0, eq  // eq = none
  40def4:	b.ne	40dc68 <wcrtomb@plt+0xaf28>  // b.any
  40def8:	tbz	w0, #11, 40dc68 <wcrtomb@plt+0xaf28>
  40defc:	mov	x1, #0x106                 	// #262
  40df00:	mov	w2, #0x1                   	// #1
  40df04:	mov	x0, x1
  40df08:	str	x1, [x19, #48]
  40df0c:	strb	w2, [x19, #120]
  40df10:	b	40dc98 <wcrtomb@plt+0xaf58>
  40df14:	ldr	x1, [x19, #448]
  40df18:	lsr	x0, x1, #13
  40df1c:	eor	x0, x0, #0x1
  40df20:	and	w0, w0, #0x1
  40df24:	cmp	w0, w22
  40df28:	b.ne	40dc68 <wcrtomb@plt+0xaf28>  // b.any
  40df2c:	ldr	x0, [x19, #56]
  40df30:	cbnz	x0, 40df38 <wcrtomb@plt+0xb1f8>
  40df34:	tbnz	w1, #17, 40dc68 <wcrtomb@plt+0xaf28>
  40df38:	sub	x1, x0, #0x1
  40df3c:	mov	x2, #0x108                 	// #264
  40df40:	mov	x0, x2
  40df44:	stp	x2, x1, [x19, #48]
  40df48:	strb	wzr, [x19, #120]
  40df4c:	b	40dc98 <wcrtomb@plt+0xaf58>
  40df50:	ldr	x0, [x19, #448]
  40df54:	lsr	x0, x0, #13
  40df58:	eor	x0, x0, #0x1
  40df5c:	and	w0, w0, #0x1
  40df60:	cmp	w0, w22
  40df64:	b.ne	40dc68 <wcrtomb@plt+0xaf28>  // b.any
  40df68:	ldr	x1, [x19, #56]
  40df6c:	mov	x2, #0x107                 	// #263
  40df70:	mov	w3, #0x1                   	// #1
  40df74:	mov	x0, x2
  40df78:	add	x1, x1, #0x1
  40df7c:	stp	x2, x1, [x19, #48]
  40df80:	strb	w3, [x19, #120]
  40df84:	b	40dc98 <wcrtomb@plt+0xaf58>
  40df88:	cbnz	w22, 40dc68 <wcrtomb@plt+0xaf28>
  40df8c:	strb	wzr, [x19, #120]
  40df90:	mov	x0, x19
  40df94:	bl	40d478 <wcrtomb@plt+0xa738>
  40df98:	b	40dc94 <wcrtomb@plt+0xaf54>
  40df9c:	ldr	x0, [x19, #448]
  40dfa0:	tbnz	w0, #10, 40dc68 <wcrtomb@plt+0xaf28>
  40dfa4:	ubfx	w1, w0, #1, #1
  40dfa8:	cmp	w1, w22
  40dfac:	b.ne	40dc68 <wcrtomb@plt+0xaf28>  // b.any
  40dfb0:	tbnz	w0, #4, 40dfbc <wcrtomb@plt+0xb27c>
  40dfb4:	ldrb	w0, [x19, #120]
  40dfb8:	cbnz	w0, 40dc68 <wcrtomb@plt+0xaf28>
  40dfbc:	mov	x1, #0x103                 	// #259
  40dfc0:	mov	x0, x1
  40dfc4:	str	x1, [x19, #48]
  40dfc8:	b	40dc98 <wcrtomb@plt+0xaf58>
  40dfcc:	cbnz	w22, 40dc68 <wcrtomb@plt+0xaf28>
  40dfd0:	ldr	x0, [x19, #448]
  40dfd4:	tbnz	w0, #4, 40dfe0 <wcrtomb@plt+0xb2a0>
  40dfd8:	ldrb	w0, [x19, #120]
  40dfdc:	cbnz	w0, 40dc68 <wcrtomb@plt+0xaf28>
  40dfe0:	mov	x1, #0x102                 	// #258
  40dfe4:	mov	x0, x1
  40dfe8:	str	x1, [x19, #48]
  40dfec:	b	40dc98 <wcrtomb@plt+0xaf58>
  40dff0:	cbz	w22, 40dc68 <wcrtomb@plt+0xaf28>
  40dff4:	ldr	x0, [x19, #448]
  40dff8:	tbnz	w0, #19, 40dc68 <wcrtomb@plt+0xaf28>
  40dffc:	mov	x1, #0x10e                 	// #270
  40e000:	mov	x0, x1
  40e004:	str	x1, [x19, #48]
  40e008:	b	40dc98 <wcrtomb@plt+0xaf58>
  40e00c:	cbz	w22, 40dc68 <wcrtomb@plt+0xaf28>
  40e010:	ldr	x0, [x19, #448]
  40e014:	tbnz	w0, #19, 40dc68 <wcrtomb@plt+0xaf28>
  40e018:	mov	x1, #0x111                 	// #273
  40e01c:	mov	x0, x1
  40e020:	str	x1, [x19, #48]
  40e024:	b	40dc98 <wcrtomb@plt+0xaf58>
  40e028:	ldr	x0, [x19, #448]
  40e02c:	tbnz	w0, #10, 40dc68 <wcrtomb@plt+0xaf28>
  40e030:	ubfx	w1, w0, #1, #1
  40e034:	cmp	w1, w22
  40e038:	b.ne	40dc68 <wcrtomb@plt+0xaf28>  // b.any
  40e03c:	tbnz	w0, #4, 40e048 <wcrtomb@plt+0xb308>
  40e040:	ldrb	w0, [x19, #120]
  40e044:	cbnz	w0, 40dc68 <wcrtomb@plt+0xaf28>
  40e048:	mov	x1, #0x101                 	// #257
  40e04c:	mov	x0, x1
  40e050:	str	x1, [x19, #48]
  40e054:	b	40dc98 <wcrtomb@plt+0xaf58>
  40e058:	ldr	x0, [x19, #448]
  40e05c:	tbnz	w0, #10, 40dc68 <wcrtomb@plt+0xaf28>
  40e060:	lsr	x0, x0, #15
  40e064:	eor	x0, x0, #0x1
  40e068:	and	w0, w0, #0x1
  40e06c:	cmp	w0, w22
  40e070:	b.ne	40dc68 <wcrtomb@plt+0xaf28>  // b.any
  40e074:	b	40defc <wcrtomb@plt+0xb1bc>
  40e078:	ldrb	w1, [x19, #1048]
  40e07c:	cbnz	w22, 40dc6c <wcrtomb@plt+0xaf2c>
  40e080:	ldr	x0, [x19, #24]
  40e084:	tbnz	x0, #63, 40e0b0 <wcrtomb@plt+0xb370>
  40e088:	strb	wzr, [x19, #120]
  40e08c:	mov	x0, #0x10a                 	// #266
  40e090:	cbnz	w1, 40dc94 <wcrtomb@plt+0xaf54>
  40e094:	ldr	x0, [x19, #24]
  40e098:	add	x0, x0, #0x114
  40e09c:	b	40dc94 <wcrtomb@plt+0xaf54>
  40e0a0:	mov	x1, #0xffffffffffffffff    	// #-1
  40e0a4:	mov	x0, x1
  40e0a8:	str	x1, [x19, #48]
  40e0ac:	b	40dc98 <wcrtomb@plt+0xaf58>
  40e0b0:	ldr	x3, [x19, #448]
  40e0b4:	mov	x2, #0xffffffffffffffff    	// #-1
  40e0b8:	mov	x0, #0xfffffffffffffbff    	// #-1025
  40e0bc:	stp	x2, x2, [sp, #80]
  40e0c0:	tst	x3, #0x40
  40e0c4:	csel	x0, x0, x2, eq  // eq = none
  40e0c8:	stp	x0, x2, [sp, #64]
  40e0cc:	tbz	w3, #7, 40e0d8 <wcrtomb@plt+0xb398>
  40e0d0:	and	x0, x0, #0xfffffffffffffffe
  40e0d4:	str	x0, [sp, #64]
  40e0d8:	cbnz	w1, 40e260 <wcrtomb@plt+0xb520>
  40e0dc:	add	x1, sp, #0x40
  40e0e0:	mov	x0, x19
  40e0e4:	bl	40d3a8 <wcrtomb@plt+0xa668>
  40e0e8:	ldrb	w1, [x19, #1048]
  40e0ec:	str	x0, [x19, #24]
  40e0f0:	b	40e088 <wcrtomb@plt+0xb348>
  40e0f4:	cmp	w2, #0x2c
  40e0f8:	b.eq	40e2a8 <wcrtomb@plt+0xb568>  // b.none
  40e0fc:	str	w0, [x19, #68]
  40e100:	cbz	w22, 40e138 <wcrtomb@plt+0xb3f8>
  40e104:	cmp	x1, x5
  40e108:	b.eq	40e118 <wcrtomb@plt+0xb3d8>  // b.none
  40e10c:	ldrb	w0, [x1]
  40e110:	cmp	w0, #0x5c
  40e114:	b.eq	40e134 <wcrtomb@plt+0xb3f4>  // b.none
  40e118:	tbnz	w6, #21, 40dc68 <wcrtomb@plt+0xaf28>
  40e11c:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  40e120:	add	x1, x1, #0x4d0
  40e124:	mov	w2, #0x5                   	// #5
  40e128:	mov	x0, #0x0                   	// #0
  40e12c:	bl	402c20 <dcgettext@plt>
  40e130:	bl	409320 <wcrtomb@plt+0x65e0>
  40e134:	add	x1, x1, #0x1
  40e138:	cmp	x1, x5
  40e13c:	b.eq	40e118 <wcrtomb@plt+0xb3d8>  // b.none
  40e140:	ldrb	w0, [x1]
  40e144:	cmp	w0, #0x7d
  40e148:	b.ne	40e118 <wcrtomb@plt+0xb3d8>  // b.any
  40e14c:	ldr	w2, [x19, #64]
  40e150:	tbnz	w2, #31, 40e118 <wcrtomb@plt+0xb3d8>
  40e154:	ldr	w0, [x19, #68]
  40e158:	tbnz	w0, #31, 40e170 <wcrtomb@plt+0xb430>
  40e15c:	cmp	w2, w0
  40e160:	b.gt	40e118 <wcrtomb@plt+0xb3d8>
  40e164:	mov	w2, #0x7fff                	// #32767
  40e168:	cmp	w0, w2
  40e16c:	b.gt	40e32c <wcrtomb@plt+0xb5ec>
  40e170:	add	x1, x1, #0x1
  40e174:	mov	x2, #0x104                 	// #260
  40e178:	sub	x5, x5, x1
  40e17c:	mov	x0, x2
  40e180:	stp	x1, x5, [x19, #32]
  40e184:	str	x2, [x19, #48]
  40e188:	strb	wzr, [x19, #120]
  40e18c:	b	40dc98 <wcrtomb@plt+0xaf58>
  40e190:	add	x1, sp, #0x40
  40e194:	add	x4, x19, #0x1cc
  40e198:	mov	x6, #0x1                   	// #1
  40e19c:	stp	xzr, xzr, [sp, #64]
  40e1a0:	stp	xzr, xzr, [sp, #80]
  40e1a4:	nop
  40e1a8:	ldrb	w2, [x4, x0]
  40e1ac:	cmp	w2, #0x2
  40e1b0:	b.ne	40e1c8 <wcrtomb@plt+0xb488>  // b.any
  40e1b4:	lsr	w3, w0, #6
  40e1b8:	lsl	x2, x6, x0
  40e1bc:	ldr	x5, [x1, x3, lsl #3]
  40e1c0:	orr	x2, x2, x5
  40e1c4:	str	x2, [x1, x3, lsl #3]
  40e1c8:	add	x0, x0, #0x1
  40e1cc:	cmp	x0, #0x100
  40e1d0:	b.ne	40e1a8 <wcrtomb@plt+0xb468>  // b.any
  40e1d4:	cmp	w20, #0x57
  40e1d8:	b.eq	40e30c <wcrtomb@plt+0xb5cc>  // b.none
  40e1dc:	strb	wzr, [x19, #120]
  40e1e0:	mov	x0, x19
  40e1e4:	bl	40d3a8 <wcrtomb@plt+0xa668>
  40e1e8:	add	x0, x0, #0x114
  40e1ec:	str	x0, [x19, #48]
  40e1f0:	b	40dc98 <wcrtomb@plt+0xaf58>
  40e1f4:	stp	xzr, xzr, [sp, #64]
  40e1f8:	stp	xzr, xzr, [sp, #80]
  40e1fc:	bl	402ab0 <__ctype_b_loc@plt>
  40e200:	add	x1, sp, #0x40
  40e204:	ldr	x3, [x0]
  40e208:	mov	x5, #0x1                   	// #1
  40e20c:	nop
  40e210:	ldrh	w0, [x3, x21, lsl #1]
  40e214:	tbz	w0, #13, 40e22c <wcrtomb@plt+0xb4ec>
  40e218:	lsr	w2, w21, #6
  40e21c:	lsl	x0, x5, x21
  40e220:	ldr	x4, [x1, x2, lsl #3]
  40e224:	orr	x0, x0, x4
  40e228:	str	x0, [x1, x2, lsl #3]
  40e22c:	add	x21, x21, #0x1
  40e230:	cmp	x21, #0x100
  40e234:	b.ne	40e210 <wcrtomb@plt+0xb4d0>  // b.any
  40e238:	cmp	w20, #0x53
  40e23c:	b.ne	40e1dc <wcrtomb@plt+0xb49c>  // b.any
  40e240:	mov	x0, x1
  40e244:	add	x3, sp, #0x60
  40e248:	ldr	x2, [x0]
  40e24c:	mvn	x2, x2
  40e250:	str	x2, [x0], #8
  40e254:	cmp	x0, x3
  40e258:	b.ne	40e248 <wcrtomb@plt+0xb508>  // b.any
  40e25c:	b	40e1dc <wcrtomb@plt+0xb49c>
  40e260:	add	x1, sp, #0x40
  40e264:	add	x4, x19, #0x51c
  40e268:	mov	x0, #0x0                   	// #0
  40e26c:	mov	x6, #0x1                   	// #1
  40e270:	ldr	w2, [x4, x0, lsl #2]
  40e274:	cmn	w2, #0x1
  40e278:	b.ne	40e290 <wcrtomb@plt+0xb550>  // b.any
  40e27c:	lsr	w3, w0, #6
  40e280:	lsl	x2, x6, x0
  40e284:	ldr	x5, [x1, x3, lsl #3]
  40e288:	bic	x2, x5, x2
  40e28c:	str	x2, [x1, x3, lsl #3]
  40e290:	add	x0, x0, #0x1
  40e294:	cmp	x0, #0x100
  40e298:	b.ne	40e270 <wcrtomb@plt+0xb530>  // b.any
  40e29c:	b	40e0e0 <wcrtomb@plt+0xb3a0>
  40e2a0:	cbnz	w22, 40e118 <wcrtomb@plt+0xb3d8>
  40e2a4:	b	40e138 <wcrtomb@plt+0xb3f8>
  40e2a8:	cmn	w0, #0x1
  40e2ac:	b.ne	40e2b4 <wcrtomb@plt+0xb574>  // b.any
  40e2b0:	str	wzr, [x19, #64]
  40e2b4:	add	x1, x1, #0x1
  40e2b8:	mov	w4, #0x8030                	// #32816
  40e2bc:	cmp	x5, x1
  40e2c0:	b.ne	40e2f4 <wcrtomb@plt+0xb5b4>  // b.any
  40e2c4:	b	40e118 <wcrtomb@plt+0xb3d8>
  40e2c8:	ldr	w0, [x19, #68]
  40e2cc:	tbnz	w0, #31, 40e2e4 <wcrtomb@plt+0xb5a4>
  40e2d0:	add	w0, w0, w0, lsl #2
  40e2d4:	add	w0, w3, w0, lsl #1
  40e2d8:	cmp	w0, w4
  40e2dc:	csel	w0, w0, w4, le
  40e2e0:	sub	w2, w0, #0x30
  40e2e4:	str	w2, [x19, #68]
  40e2e8:	add	x1, x1, #0x1
  40e2ec:	cmp	x5, x1
  40e2f0:	b.eq	40e118 <wcrtomb@plt+0xb3d8>  // b.none
  40e2f4:	ldrb	w3, [x1]
  40e2f8:	sub	w2, w3, #0x30
  40e2fc:	and	w0, w2, #0xff
  40e300:	cmp	w0, #0x9
  40e304:	b.ls	40e2c8 <wcrtomb@plt+0xb588>  // b.plast
  40e308:	b	40e100 <wcrtomb@plt+0xb3c0>
  40e30c:	mov	x0, x1
  40e310:	add	x3, sp, #0x60
  40e314:	ldr	x2, [x0]
  40e318:	mvn	x2, x2
  40e31c:	str	x2, [x0], #8
  40e320:	cmp	x0, x3
  40e324:	b.ne	40e314 <wcrtomb@plt+0xb5d4>  // b.any
  40e328:	b	40e1dc <wcrtomb@plt+0xb49c>
  40e32c:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  40e330:	add	x1, x1, #0x4e8
  40e334:	mov	w2, #0x5                   	// #5
  40e338:	mov	x0, #0x0                   	// #0
  40e33c:	bl	402c20 <dcgettext@plt>
  40e340:	bl	409320 <wcrtomb@plt+0x65e0>
  40e344:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  40e348:	add	x1, x1, #0x4b8
  40e34c:	mov	w2, #0x5                   	// #5
  40e350:	bl	402c20 <dcgettext@plt>
  40e354:	bl	409320 <wcrtomb@plt+0x65e0>
  40e358:	bl	4029e0 <abort@plt>
  40e35c:	nop
  40e360:	stp	x29, x30, [sp, #-176]!
  40e364:	mov	x2, #0x109                 	// #265
  40e368:	mov	x29, sp
  40e36c:	ldr	x1, [x0, #128]
  40e370:	stp	x19, x20, [sp, #16]
  40e374:	mov	x19, x0
  40e378:	cmp	x1, #0xff
  40e37c:	ccmp	x1, x2, #0x0, hi  // hi = pmore
  40e380:	b.le	40e69c <wcrtomb@plt+0xb95c>
  40e384:	cmp	x1, #0x10a
  40e388:	b.ne	40e394 <wcrtomb@plt+0xb654>  // b.any
  40e38c:	ldrb	w0, [x0, #1050]
  40e390:	cbnz	w0, 40e4cc <wcrtomb@plt+0xb78c>
  40e394:	mov	x0, x19
  40e398:	bl	40b008 <wcrtomb@plt+0x82c8>
  40e39c:	mov	x0, x19
  40e3a0:	bl	40db70 <wcrtomb@plt+0xae30>
  40e3a4:	mov	x1, x0
  40e3a8:	str	x0, [x19, #128]
  40e3ac:	sub	x0, x1, #0x101
  40e3b0:	cmp	x0, #0x3
  40e3b4:	b.hi	40e3ec <wcrtomb@plt+0xb6ac>  // b.pmore
  40e3b8:	stp	x21, x22, [sp, #32]
  40e3bc:	cmp	x1, #0x104
  40e3c0:	b.eq	40e3f8 <wcrtomb@plt+0xb6b8>  // b.none
  40e3c4:	mov	x0, x19
  40e3c8:	bl	40b008 <wcrtomb@plt+0x82c8>
  40e3cc:	mov	x0, x19
  40e3d0:	bl	40db70 <wcrtomb@plt+0xae30>
  40e3d4:	mov	x1, x0
  40e3d8:	str	x0, [x19, #128]
  40e3dc:	sub	x0, x1, #0x101
  40e3e0:	cmp	x0, #0x3
  40e3e4:	b.ls	40e3bc <wcrtomb@plt+0xb67c>  // b.plast
  40e3e8:	ldp	x21, x22, [sp, #32]
  40e3ec:	ldp	x19, x20, [sp, #16]
  40e3f0:	ldp	x29, x30, [sp], #176
  40e3f4:	ret
  40e3f8:	ldr	x21, [x19, #152]
  40e3fc:	mov	x0, x19
  40e400:	mov	x1, x21
  40e404:	bl	40a9d0 <wcrtomb@plt+0x7c90>
  40e408:	ldr	x1, [x19, #64]
  40e40c:	mov	x22, x0
  40e410:	sub	x21, x21, x0
  40e414:	cbnz	x1, 40e438 <wcrtomb@plt+0xb6f8>
  40e418:	str	x21, [x19, #152]
  40e41c:	mov	x0, x19
  40e420:	bl	40db70 <wcrtomb@plt+0xae30>
  40e424:	str	x0, [x19, #128]
  40e428:	mov	x0, x19
  40e42c:	bl	40e360 <wcrtomb@plt+0xb620>
  40e430:	ldr	x1, [x19, #128]
  40e434:	b	40e3dc <wcrtomb@plt+0xb69c>
  40e438:	ldr	w0, [x19, #68]
  40e43c:	tbnz	w0, #31, 40e67c <wcrtomb@plt+0xb93c>
  40e440:	ldr	w0, [x19, #64]
  40e444:	cbz	w0, 40e668 <wcrtomb@plt+0xb928>
  40e448:	cmp	w0, #0x1
  40e44c:	mov	w20, #0x1                   	// #1
  40e450:	b.le	40e484 <wcrtomb@plt+0xb744>
  40e454:	nop
  40e458:	mov	x2, x22
  40e45c:	mov	x1, x21
  40e460:	mov	x0, x19
  40e464:	bl	40b4b0 <wcrtomb@plt+0x8770>
  40e468:	mov	x0, x19
  40e46c:	mov	x1, #0x105                 	// #261
  40e470:	bl	40b008 <wcrtomb@plt+0x82c8>
  40e474:	add	w20, w20, #0x1
  40e478:	ldr	w0, [x19, #64]
  40e47c:	cmp	w0, w20
  40e480:	b.gt	40e458 <wcrtomb@plt+0xb718>
  40e484:	ldr	w0, [x19, #68]
  40e488:	cmp	w20, w0
  40e48c:	b.ge	40e3cc <wcrtomb@plt+0xb68c>  // b.tcont
  40e490:	mov	x2, x22
  40e494:	mov	x1, x21
  40e498:	mov	x0, x19
  40e49c:	bl	40b4b0 <wcrtomb@plt+0x8770>
  40e4a0:	mov	x0, x19
  40e4a4:	mov	x1, #0x101                 	// #257
  40e4a8:	bl	40b008 <wcrtomb@plt+0x82c8>
  40e4ac:	add	w20, w20, #0x1
  40e4b0:	mov	x0, x19
  40e4b4:	mov	x1, #0x105                 	// #261
  40e4b8:	bl	40b008 <wcrtomb@plt+0x82c8>
  40e4bc:	ldr	w0, [x19, #68]
  40e4c0:	cmp	w0, w20
  40e4c4:	b.gt	40e490 <wcrtomb@plt+0xb750>
  40e4c8:	b	40e3cc <wcrtomb@plt+0xb68c>
  40e4cc:	ldr	x1, [x19, #200]
  40e4d0:	cbnz	x1, 40e548 <wcrtomb@plt+0xb808>
  40e4d4:	adrp	x20, 421000 <_obstack_memory_used@@Base+0xe3b0>
  40e4d8:	add	x20, x20, #0x6d8
  40e4dc:	add	x2, x20, #0x170
  40e4e0:	add	x1, sp, #0x30
  40e4e4:	ldr	x0, [x19, #448]
  40e4e8:	stp	x21, x22, [sp, #32]
  40e4ec:	ld1	{v0.16b, v1.16b}, [x2]
  40e4f0:	st1	{v0.16b, v1.16b}, [x1]
  40e4f4:	tbnz	w0, #6, 40e500 <wcrtomb@plt+0xb7c0>
  40e4f8:	mov	x2, #0xfffffffffffffbff    	// #-1025
  40e4fc:	str	x2, [sp, #48]
  40e500:	tbnz	w0, #7, 40e68c <wcrtomb@plt+0xb94c>
  40e504:	add	x20, x20, #0x190
  40e508:	add	x21, x19, #0xd0
  40e50c:	add	x22, x19, #0x110
  40e510:	mov	x0, x19
  40e514:	bl	40d3a8 <wcrtomb@plt+0xa668>
  40e518:	add	x0, x0, #0x114
  40e51c:	str	x0, [x19, #200]
  40e520:	mov	x1, x20
  40e524:	mov	x0, x19
  40e528:	bl	40d3a8 <wcrtomb@plt+0xa668>
  40e52c:	add	x0, x0, #0x114
  40e530:	str	x0, [x21], #8
  40e534:	add	x20, x20, #0x20
  40e538:	cmp	x21, x22
  40e53c:	b.ne	40e520 <wcrtomb@plt+0xb7e0>  // b.any
  40e540:	ldp	x21, x22, [sp, #32]
  40e544:	ldr	x1, [x19, #200]
  40e548:	mov	x0, x19
  40e54c:	bl	40b008 <wcrtomb@plt+0x82c8>
  40e550:	mov	w20, #0x3                   	// #3
  40e554:	ldr	x1, [x19, #208]
  40e558:	mov	x0, x19
  40e55c:	bl	40b008 <wcrtomb@plt+0x82c8>
  40e560:	mov	x0, x19
  40e564:	mov	x1, #0xe0                  	// #224
  40e568:	bl	40b008 <wcrtomb@plt+0x82c8>
  40e56c:	ldr	x1, [x19, #224]
  40e570:	mov	x0, x19
  40e574:	bl	40b008 <wcrtomb@plt+0x82c8>
  40e578:	mov	x0, x19
  40e57c:	mov	x1, #0x105                 	// #261
  40e580:	bl	40b008 <wcrtomb@plt+0x82c8>
  40e584:	mov	x0, x19
  40e588:	mov	x1, #0x106                 	// #262
  40e58c:	bl	40b008 <wcrtomb@plt+0x82c8>
  40e590:	mov	x0, x19
  40e594:	mov	x1, #0xed                  	// #237
  40e598:	bl	40b008 <wcrtomb@plt+0x82c8>
  40e59c:	ldr	x1, [x19, #240]
  40e5a0:	mov	x0, x19
  40e5a4:	bl	40b008 <wcrtomb@plt+0x82c8>
  40e5a8:	mov	x0, x19
  40e5ac:	mov	x1, #0x105                 	// #261
  40e5b0:	bl	40b008 <wcrtomb@plt+0x82c8>
  40e5b4:	mov	x0, x19
  40e5b8:	mov	x1, #0x106                 	// #262
  40e5bc:	bl	40b008 <wcrtomb@plt+0x82c8>
  40e5c0:	ldr	x1, [x19, #232]
  40e5c4:	mov	x0, x19
  40e5c8:	bl	40b008 <wcrtomb@plt+0x82c8>
  40e5cc:	mov	x0, x19
  40e5d0:	mov	x1, #0xf0                  	// #240
  40e5d4:	bl	40b008 <wcrtomb@plt+0x82c8>
  40e5d8:	ldr	x1, [x19, #248]
  40e5dc:	mov	x0, x19
  40e5e0:	bl	40b008 <wcrtomb@plt+0x82c8>
  40e5e4:	mov	x0, x19
  40e5e8:	mov	x1, #0x105                 	// #261
  40e5ec:	bl	40b008 <wcrtomb@plt+0x82c8>
  40e5f0:	mov	x0, x19
  40e5f4:	mov	x1, #0x106                 	// #262
  40e5f8:	bl	40b008 <wcrtomb@plt+0x82c8>
  40e5fc:	mov	x0, x19
  40e600:	mov	x1, #0xf4                  	// #244
  40e604:	bl	40b008 <wcrtomb@plt+0x82c8>
  40e608:	ldr	x1, [x19, #264]
  40e60c:	mov	x0, x19
  40e610:	bl	40b008 <wcrtomb@plt+0x82c8>
  40e614:	mov	x0, x19
  40e618:	mov	x1, #0x105                 	// #261
  40e61c:	bl	40b008 <wcrtomb@plt+0x82c8>
  40e620:	mov	x0, x19
  40e624:	mov	x1, #0x106                 	// #262
  40e628:	bl	40b008 <wcrtomb@plt+0x82c8>
  40e62c:	ldr	x1, [x19, #256]
  40e630:	mov	x0, x19
  40e634:	bl	40b008 <wcrtomb@plt+0x82c8>
  40e638:	ldr	x1, [x19, #216]
  40e63c:	mov	x0, x19
  40e640:	bl	40b008 <wcrtomb@plt+0x82c8>
  40e644:	mov	x0, x19
  40e648:	mov	x1, #0x105                 	// #261
  40e64c:	bl	40b008 <wcrtomb@plt+0x82c8>
  40e650:	mov	x0, x19
  40e654:	mov	x1, #0x106                 	// #262
  40e658:	bl	40b008 <wcrtomb@plt+0x82c8>
  40e65c:	subs	w20, w20, #0x1
  40e660:	b.ne	40e638 <wcrtomb@plt+0xb8f8>  // b.any
  40e664:	b	40e39c <wcrtomb@plt+0xb65c>
  40e668:	mov	x0, x19
  40e66c:	mov	x1, #0x101                 	// #257
  40e670:	bl	40b008 <wcrtomb@plt+0x82c8>
  40e674:	ldr	w0, [x19, #64]
  40e678:	b	40e448 <wcrtomb@plt+0xb708>
  40e67c:	mov	x0, x19
  40e680:	mov	x1, #0x103                 	// #259
  40e684:	bl	40b008 <wcrtomb@plt+0x82c8>
  40e688:	b	40e440 <wcrtomb@plt+0xb700>
  40e68c:	ldr	x0, [sp, #48]
  40e690:	and	x0, x0, #0xfffffffffffffffe
  40e694:	str	x0, [sp, #48]
  40e698:	b	40e504 <wcrtomb@plt+0xb7c4>
  40e69c:	cmp	x1, #0x109
  40e6a0:	b.eq	40e6bc <wcrtomb@plt+0xb97c>  // b.none
  40e6a4:	cmp	x1, #0x107
  40e6a8:	b.eq	40e724 <wcrtomb@plt+0xb9e4>  // b.none
  40e6ac:	mov	x1, #0x100                 	// #256
  40e6b0:	bl	40b008 <wcrtomb@plt+0x82c8>
  40e6b4:	ldr	x1, [x19, #128]
  40e6b8:	b	40e3ac <wcrtomb@plt+0xb66c>
  40e6bc:	ldr	w1, [x0, #72]
  40e6c0:	cmn	w1, #0x1
  40e6c4:	b.eq	40e75c <wcrtomb@plt+0xba1c>  // b.none
  40e6c8:	bl	40af20 <wcrtomb@plt+0x81e0>
  40e6cc:	ldrb	w0, [x19, #457]
  40e6d0:	cbz	w0, 40e39c <wcrtomb@plt+0xb65c>
  40e6d4:	ldr	w0, [x19, #72]
  40e6d8:	add	x1, sp, #0x30
  40e6dc:	bl	4103c0 <wcrtomb@plt+0xd680>
  40e6e0:	cmp	w0, #0x0
  40e6e4:	b.le	40e39c <wcrtomb@plt+0xb65c>
  40e6e8:	sub	w0, w0, #0x1
  40e6ec:	stp	x21, x22, [sp, #32]
  40e6f0:	add	x21, sp, #0x30
  40e6f4:	add	x20, x21, #0x4
  40e6f8:	add	x20, x20, w0, uxtw #2
  40e6fc:	ldr	w1, [x21], #4
  40e700:	mov	x0, x19
  40e704:	bl	40af20 <wcrtomb@plt+0x81e0>
  40e708:	mov	x0, x19
  40e70c:	mov	x1, #0x106                 	// #262
  40e710:	bl	40b008 <wcrtomb@plt+0x82c8>
  40e714:	cmp	x20, x21
  40e718:	b.ne	40e6fc <wcrtomb@plt+0xb9bc>  // b.any
  40e71c:	ldp	x21, x22, [sp, #32]
  40e720:	b	40e39c <wcrtomb@plt+0xb65c>
  40e724:	bl	40db70 <wcrtomb@plt+0xae30>
  40e728:	str	x0, [x19, #128]
  40e72c:	mov	x0, x19
  40e730:	bl	40e7b8 <wcrtomb@plt+0xba78>
  40e734:	ldr	x0, [x19, #128]
  40e738:	cmp	x0, #0x108
  40e73c:	b.eq	40e39c <wcrtomb@plt+0xb65c>  // b.none
  40e740:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  40e744:	add	x1, x1, #0x528
  40e748:	mov	w2, #0x5                   	// #5
  40e74c:	mov	x0, #0x0                   	// #0
  40e750:	stp	x21, x22, [sp, #32]
  40e754:	bl	402c20 <dcgettext@plt>
  40e758:	bl	409320 <wcrtomb@plt+0x65e0>
  40e75c:	mov	x1, #0x112                 	// #274
  40e760:	bl	40b008 <wcrtomb@plt+0x82c8>
  40e764:	b	40e39c <wcrtomb@plt+0xb65c>
  40e768:	stp	x29, x30, [sp, #-32]!
  40e76c:	mov	x29, sp
  40e770:	str	x19, [sp, #16]
  40e774:	mov	x19, x0
  40e778:	bl	40e360 <wcrtomb@plt+0xb620>
  40e77c:	b	40e794 <wcrtomb@plt+0xba54>
  40e780:	mov	x0, x19
  40e784:	bl	40e360 <wcrtomb@plt+0xb620>
  40e788:	mov	x0, x19
  40e78c:	mov	x1, #0x105                 	// #261
  40e790:	bl	40b008 <wcrtomb@plt+0x82c8>
  40e794:	ldr	x0, [x19, #128]
  40e798:	sub	x1, x0, #0x106
  40e79c:	tst	x1, #0xfffffffffffffffd
  40e7a0:	ccmp	x0, #0x0, #0x1, ne  // ne = any
  40e7a4:	b.ge	40e780 <wcrtomb@plt+0xba40>  // b.tcont
  40e7a8:	ldr	x19, [sp, #16]
  40e7ac:	ldp	x29, x30, [sp], #32
  40e7b0:	ret
  40e7b4:	nop
  40e7b8:	stp	x29, x30, [sp, #-32]!
  40e7bc:	mov	x29, sp
  40e7c0:	str	x19, [sp, #16]
  40e7c4:	mov	x19, x0
  40e7c8:	bl	40e768 <wcrtomb@plt+0xba28>
  40e7cc:	ldr	x0, [x19, #128]
  40e7d0:	cmp	x0, #0x106
  40e7d4:	b.ne	40e804 <wcrtomb@plt+0xbac4>  // b.any
  40e7d8:	mov	x0, x19
  40e7dc:	bl	40db70 <wcrtomb@plt+0xae30>
  40e7e0:	str	x0, [x19, #128]
  40e7e4:	mov	x0, x19
  40e7e8:	bl	40e768 <wcrtomb@plt+0xba28>
  40e7ec:	mov	x0, x19
  40e7f0:	mov	x1, #0x106                 	// #262
  40e7f4:	bl	40b008 <wcrtomb@plt+0x82c8>
  40e7f8:	ldr	x0, [x19, #128]
  40e7fc:	cmp	x0, #0x106
  40e800:	b.eq	40e7d8 <wcrtomb@plt+0xba98>  // b.none
  40e804:	ldr	x19, [sp, #16]
  40e808:	ldp	x29, x30, [sp], #32
  40e80c:	ret
  40e810:	stp	x29, x30, [sp, #-144]!
  40e814:	mov	x29, sp
  40e818:	stp	x19, x20, [sp, #16]
  40e81c:	mov	x19, x0
  40e820:	ldr	x0, [x0, #304]
  40e824:	stp	x21, x22, [sp, #32]
  40e828:	mov	x22, x2
  40e82c:	stp	x23, x24, [sp, #48]
  40e830:	cmp	x0, #0x3ff
  40e834:	mov	x23, x4
  40e838:	stp	x25, x26, [sp, #64]
  40e83c:	mov	x25, x1
  40e840:	and	w1, w3, #0xff
  40e844:	stp	x27, x28, [sp, #80]
  40e848:	str	w1, [sp, #108]
  40e84c:	b.gt	40ebd4 <wcrtomb@plt+0xbe94>
  40e850:	ldr	x0, [x19, #352]
  40e854:	cbz	x0, 40ecf0 <wcrtomb@plt+0xbfb0>
  40e858:	ldrb	w24, [x19, #459]
  40e85c:	mov	x20, x25
  40e860:	ldrb	w0, [x22]
  40e864:	ldr	x28, [x19, #368]
  40e868:	strb	w24, [x22]
  40e86c:	str	w0, [sp, #104]
  40e870:	ldr	x0, [x19, #424]
  40e874:	str	x25, [sp, #136]
  40e878:	str	xzr, [x19, #272]
  40e87c:	cbz	x0, 40ecfc <wcrtomb@plt+0xbfbc>
  40e880:	add	x0, x19, w24, sxtw
  40e884:	mov	x27, #0x0                   	// #0
  40e888:	mov	x21, #0x0                   	// #0
  40e88c:	mov	x26, #0x0                   	// #0
  40e890:	str	xzr, [sp, #96]
  40e894:	str	x0, [sp, #112]
  40e898:	ldr	x6, [x28, x26]
  40e89c:	cbz	x6, 40e960 <wcrtomb@plt+0xbc20>
  40e8a0:	add	x4, x21, x21, lsl #2
  40e8a4:	ldrsw	x1, [x19, #364]
  40e8a8:	ldr	x0, [x19, #296]
  40e8ac:	lsl	x26, x4, #4
  40e8b0:	cmp	x1, x21
  40e8b4:	add	x0, x0, x26
  40e8b8:	ldr	x2, [x0, #56]
  40e8bc:	b.le	40e920 <wcrtomb@plt+0xbbe0>
  40e8c0:	ldrb	w0, [x20]
  40e8c4:	cbz	x2, 40ea38 <wcrtomb@plt+0xbcf8>
  40e8c8:	add	x0, x19, w0, sxtw
  40e8cc:	ldrb	w0, [x0, #716]
  40e8d0:	cbnz	w0, 40e918 <wcrtomb@plt+0xbbd8>
  40e8d4:	cmp	x25, x20
  40e8d8:	b.cs	40ea70 <wcrtomb@plt+0xbd30>  // b.hs, b.nlast
  40e8dc:	nop
  40e8e0:	sub	x2, x22, x25
  40e8e4:	mov	x1, x25
  40e8e8:	mov	x3, x19
  40e8ec:	add	x0, sp, #0x84
  40e8f0:	str	x6, [sp, #120]
  40e8f4:	bl	40aa80 <wcrtomb@plt+0x7d40>
  40e8f8:	add	x25, x25, w0, sxtw
  40e8fc:	cmp	x25, x20
  40e900:	ldr	x6, [sp, #120]
  40e904:	b.cc	40e8e0 <wcrtomb@plt+0xbba0>  // b.lo, b.ul, b.last
  40e908:	ldr	x0, [x19, #296]
  40e90c:	mov	x20, x25
  40e910:	add	x4, x0, x26
  40e914:	ldr	x2, [x4, #56]
  40e918:	mov	x25, x20
  40e91c:	str	x20, [sp, #136]
  40e920:	cbz	x2, 40e93c <wcrtomb@plt+0xbbfc>
  40e924:	ldrb	w0, [x20]
  40e928:	cmp	x22, x20
  40e92c:	add	x0, x19, x0, lsl #2
  40e930:	ldr	w0, [x0, #1308]
  40e934:	ccmn	w0, #0x1, #0x0, hi  // hi = pmore
  40e938:	b.eq	40ea78 <wcrtomb@plt+0xbd38>  // b.none
  40e93c:	add	x0, x20, #0x1
  40e940:	str	x0, [sp, #136]
  40e944:	mov	x27, x21
  40e948:	ldrb	w1, [x20]
  40e94c:	mov	x20, x0
  40e950:	ldr	x21, [x6, x1, lsl #3]
  40e954:	lsl	x26, x21, #3
  40e958:	ldr	x6, [x28, x26]
  40e95c:	cbnz	x6, 40e8a0 <wcrtomb@plt+0xbb60>
  40e960:	tbnz	x21, #63, 40eb24 <wcrtomb@plt+0xbde4>
  40e964:	ldr	x0, [x19, #376]
  40e968:	ldrb	w2, [x20]
  40e96c:	ldr	x0, [x0, x26]
  40e970:	cbz	x0, 40eb0c <wcrtomb@plt+0xbdcc>
  40e974:	ldr	x0, [x19, #384]
  40e978:	add	x1, x19, x2
  40e97c:	ldrb	w0, [x0, x21]
  40e980:	ldrb	w1, [x1, #460]
  40e984:	and	w0, w0, w1
  40e988:	tst	w0, #0xff
  40e98c:	b.ne	40ed10 <wcrtomb@plt+0xbfd0>  // b.any
  40e990:	add	x6, x21, x21, lsl #2
  40e994:	cmp	x22, x20
  40e998:	lsl	x27, x6, #4
  40e99c:	b.eq	40eab0 <wcrtomb@plt+0xbd70>  // b.none
  40e9a0:	ldrsw	x0, [x19, #364]
  40e9a4:	cmp	x21, x0
  40e9a8:	b.ge	40e9e8 <wcrtomb@plt+0xbca8>  // b.tcont
  40e9ac:	add	x2, x19, x2
  40e9b0:	ldrb	w0, [x2, #716]
  40e9b4:	cbnz	w0, 40eaa8 <wcrtomb@plt+0xbd68>
  40e9b8:	cmp	x25, x20
  40e9bc:	b.cs	40e9e0 <wcrtomb@plt+0xbca0>  // b.hs, b.nlast
  40e9c0:	sub	x2, x22, x25
  40e9c4:	mov	x1, x25
  40e9c8:	mov	x3, x19
  40e9cc:	add	x0, sp, #0x84
  40e9d0:	bl	40aa80 <wcrtomb@plt+0x7d40>
  40e9d4:	add	x25, x25, w0, sxtw
  40e9d8:	cmp	x25, x20
  40e9dc:	b.cc	40e9c0 <wcrtomb@plt+0xbc80>  // b.lo, b.ul, b.last
  40e9e0:	mov	x20, x25
  40e9e4:	str	x25, [sp, #136]
  40e9e8:	ldr	x0, [x19, #296]
  40e9ec:	add	x6, x0, x27
  40e9f0:	ldr	x0, [x6, #56]
  40e9f4:	cbz	x0, 40ea10 <wcrtomb@plt+0xbcd0>
  40e9f8:	ldrb	w0, [x20]
  40e9fc:	cmp	x22, x20
  40ea00:	add	x0, x19, x0, lsl #2
  40ea04:	ldr	w0, [x0, #1308]
  40ea08:	ccmn	w0, #0x1, #0x0, hi  // hi = pmore
  40ea0c:	b.eq	40ea78 <wcrtomb@plt+0xbd38>  // b.none
  40ea10:	ldr	x1, [x19, #376]
  40ea14:	add	x0, x20, #0x1
  40ea18:	mov	x27, x21
  40ea1c:	ldr	x1, [x1, x26]
  40ea20:	str	x0, [sp, #136]
  40ea24:	ldrb	w2, [x20]
  40ea28:	mov	x20, x0
  40ea2c:	ldr	x21, [x1, x2, lsl #3]
  40ea30:	lsl	x26, x21, #3
  40ea34:	b	40e898 <wcrtomb@plt+0xbb58>
  40ea38:	mov	w1, w0
  40ea3c:	ldr	x1, [x6, x1, lsl #3]
  40ea40:	cmp	x21, x1
  40ea44:	b.ne	40e8c8 <wcrtomb@plt+0xbb88>  // b.any
  40ea48:	add	x1, x20, #0x1
  40ea4c:	nop
  40ea50:	str	x1, [sp, #136]
  40ea54:	mov	x20, x1
  40ea58:	ldrb	w3, [x1], #1
  40ea5c:	mov	x0, x3
  40ea60:	ldr	x3, [x6, x3, lsl #3]
  40ea64:	cmp	x21, x3
  40ea68:	b.eq	40ea50 <wcrtomb@plt+0xbd10>  // b.none
  40ea6c:	b	40e8c8 <wcrtomb@plt+0xbb88>
  40ea70:	mov	x20, x25
  40ea74:	b	40e918 <wcrtomb@plt+0xbbd8>
  40ea78:	mov	x1, x21
  40ea7c:	mov	x3, x22
  40ea80:	add	x2, sp, #0x88
  40ea84:	mov	x0, x19
  40ea88:	bl	40d058 <wcrtomb@plt+0xa318>
  40ea8c:	mov	x27, x21
  40ea90:	ldr	x25, [sp, #136]
  40ea94:	mov	x21, x0
  40ea98:	lsl	x26, x0, #3
  40ea9c:	mov	x20, x25
  40eaa0:	ldr	x28, [x19, #368]
  40eaa4:	b	40e898 <wcrtomb@plt+0xbb58>
  40eaa8:	mov	x25, x20
  40eaac:	b	40e9e0 <wcrtomb@plt+0xbca0>
  40eab0:	ldr	x0, [x19, #296]
  40eab4:	add	x0, x0, x27
  40eab8:	ldrh	w1, [x0, #34]
  40eabc:	ldrb	w0, [x0, #32]
  40eac0:	and	w0, w0, w1, lsr #6
  40eac4:	tst	x0, #0x7
  40eac8:	b.eq	40e9a0 <wcrtomb@plt+0xbc60>  // b.none
  40eacc:	mov	x6, x22
  40ead0:	cbz	x23, 40eae4 <wcrtomb@plt+0xbda4>
  40ead4:	ldr	x0, [x23]
  40ead8:	ldr	x1, [sp, #96]
  40eadc:	add	x25, x0, x1
  40eae0:	str	x25, [x23]
  40eae4:	ldrb	w1, [sp, #104]
  40eae8:	mov	x0, x6
  40eaec:	strb	w1, [x22]
  40eaf0:	ldp	x19, x20, [sp, #16]
  40eaf4:	ldp	x21, x22, [sp, #32]
  40eaf8:	ldp	x23, x24, [sp, #48]
  40eafc:	ldp	x25, x26, [sp, #64]
  40eb00:	ldp	x27, x28, [sp, #80]
  40eb04:	ldp	x29, x30, [sp], #144
  40eb08:	ret
  40eb0c:	mov	x1, x19
  40eb10:	mov	x0, x21
  40eb14:	bl	40c840 <wcrtomb@plt+0x9b00>
  40eb18:	ldr	x20, [sp, #136]
  40eb1c:	ldr	x28, [x19, #368]
  40eb20:	b	40e898 <wcrtomb@plt+0xbb58>
  40eb24:	cmn	x21, #0x2
  40eb28:	b.eq	40eb88 <wcrtomb@plt+0xbe48>  // b.none
  40eb2c:	cmp	x22, x20
  40eb30:	b.cc	40ead0 <wcrtomb@plt+0xbd90>  // b.lo, b.ul, b.last
  40eb34:	ldurb	w0, [x20, #-1]
  40eb38:	cmp	w0, w24
  40eb3c:	b.ne	40ead0 <wcrtomb@plt+0xbd90>  // b.any
  40eb40:	ldr	x0, [x19, #392]
  40eb44:	ldr	x21, [x0, x27, lsl #3]
  40eb48:	tbnz	x21, #63, 40ead0 <wcrtomb@plt+0xbd90>
  40eb4c:	ldr	x0, [sp, #96]
  40eb50:	add	x0, x0, #0x1
  40eb54:	str	x0, [sp, #96]
  40eb58:	ldr	w0, [sp, #108]
  40eb5c:	cbnz	w0, 40eb7c <wcrtomb@plt+0xbe3c>
  40eb60:	ldr	x0, [sp, #112]
  40eb64:	ldrb	w0, [x0, #460]
  40eb68:	cmp	w0, #0x4
  40eb6c:	b.eq	40ebac <wcrtomb@plt+0xbe6c>  // b.none
  40eb70:	cmp	w0, #0x2
  40eb74:	b.eq	40ebbc <wcrtomb@plt+0xbe7c>  // b.none
  40eb78:	ldr	x21, [x19, #400]
  40eb7c:	mov	x25, x20
  40eb80:	lsl	x26, x21, #3
  40eb84:	b	40e898 <wcrtomb@plt+0xbb58>
  40eb88:	ldurb	w2, [x20, #-1]
  40eb8c:	mov	x1, x19
  40eb90:	mov	x0, x27
  40eb94:	bl	40c840 <wcrtomb@plt+0x9b00>
  40eb98:	mov	x21, x0
  40eb9c:	lsl	x26, x0, #3
  40eba0:	ldr	x20, [sp, #136]
  40eba4:	ldr	x28, [x19, #368]
  40eba8:	b	40e898 <wcrtomb@plt+0xbb58>
  40ebac:	mov	x25, x20
  40ebb0:	mov	x21, #0x0                   	// #0
  40ebb4:	mov	x26, #0x0                   	// #0
  40ebb8:	b	40e898 <wcrtomb@plt+0xbb58>
  40ebbc:	ldr	w4, [x19, #364]
  40ebc0:	mov	x25, x20
  40ebc4:	sub	w4, w4, #0x1
  40ebc8:	sxtw	x21, w4
  40ebcc:	sbfiz	x26, x4, #3, #32
  40ebd0:	b	40e898 <wcrtomb@plt+0xbb58>
  40ebd4:	ldr	w20, [x19, #364]
  40ebd8:	cmp	x0, w20, sxtw
  40ebdc:	sxtw	x21, w20
  40ebe0:	b.le	40ec28 <wcrtomb@plt+0xbee8>
  40ebe4:	mov	w0, #0x50                  	// #80
  40ebe8:	smull	x20, w20, w0
  40ebec:	nop
  40ebf0:	ldr	x0, [x19, #296]
  40ebf4:	add	x21, x21, #0x1
  40ebf8:	add	x0, x0, x20
  40ebfc:	ldr	x0, [x0, #8]
  40ec00:	bl	402ae0 <free@plt>
  40ec04:	ldr	x0, [x19, #296]
  40ec08:	add	x0, x0, x20
  40ec0c:	add	x20, x20, #0x50
  40ec10:	ldr	x0, [x0, #48]
  40ec14:	bl	402ae0 <free@plt>
  40ec18:	ldr	x0, [x19, #304]
  40ec1c:	cmp	x21, x0
  40ec20:	b.lt	40ebf0 <wcrtomb@plt+0xbeb0>  // b.tstop
  40ec24:	ldrsw	x21, [x19, #364]
  40ec28:	ldr	x1, [x19, #368]
  40ec2c:	str	x21, [x19, #304]
  40ec30:	ldr	x0, [x19, #352]
  40ec34:	cbz	x1, 40ec7c <wcrtomb@plt+0xbf3c>
  40ec38:	cmp	x0, #0x0
  40ec3c:	b.le	40ec78 <wcrtomb@plt+0xbf38>
  40ec40:	mov	x20, #0x0                   	// #0
  40ec44:	nop
  40ec48:	ldr	x0, [x1, x20, lsl #3]
  40ec4c:	bl	402ae0 <free@plt>
  40ec50:	ldr	x0, [x19, #376]
  40ec54:	ldr	x0, [x0, x20, lsl #3]
  40ec58:	bl	402ae0 <free@plt>
  40ec5c:	ldp	x1, x0, [x19, #368]
  40ec60:	str	xzr, [x0, x20, lsl #3]
  40ec64:	ldr	x0, [x19, #352]
  40ec68:	str	xzr, [x1, x20, lsl #3]
  40ec6c:	add	x20, x20, #0x1
  40ec70:	cmp	x20, x0
  40ec74:	b.lt	40ec48 <wcrtomb@plt+0xbf08>  // b.tstop
  40ec78:	str	wzr, [x19, #360]
  40ec7c:	ldrb	w1, [x19, #1048]
  40ec80:	cbz	w1, 40e854 <wcrtomb@plt+0xbb14>
  40ec84:	ldr	x1, [x19, #432]
  40ec88:	cbz	x1, 40e854 <wcrtomb@plt+0xbb14>
  40ec8c:	tbnz	x0, #63, 40ecb8 <wcrtomb@plt+0xbf78>
  40ec90:	mov	x20, #0xffffffffffffffff    	// #-1
  40ec94:	nop
  40ec98:	ldr	x0, [x1, x20, lsl #3]
  40ec9c:	bl	402ae0 <free@plt>
  40eca0:	ldr	x1, [x19, #432]
  40eca4:	ldr	x0, [x19, #352]
  40eca8:	str	xzr, [x1, x20, lsl #3]
  40ecac:	add	x20, x20, #0x1
  40ecb0:	cmp	x20, x0
  40ecb4:	b.lt	40ec98 <wcrtomb@plt+0xbf58>  // b.tstop
  40ecb8:	ldr	w2, [x19, #364]
  40ecbc:	cmp	w2, #0x0
  40ecc0:	b.le	40ece4 <wcrtomb@plt+0xbfa4>
  40ecc4:	ldr	x1, [x19, #296]
  40ecc8:	mov	w4, #0x50                  	// #80
  40eccc:	mov	x3, #0xffffffffffffffff    	// #-1
  40ecd0:	add	x1, x1, #0x48
  40ecd4:	smaddl	x2, w2, w4, x1
  40ecd8:	str	x3, [x1], #80
  40ecdc:	cmp	x2, x1
  40ece0:	b.ne	40ecd8 <wcrtomb@plt+0xbf98>  // b.any
  40ece4:	str	xzr, [x19, #440]
  40ece8:	cbnz	x0, 40e858 <wcrtomb@plt+0xbb18>
  40ecec:	nop
  40ecf0:	mov	x0, x19
  40ecf4:	bl	40ad60 <wcrtomb@plt+0x8020>
  40ecf8:	b	40e858 <wcrtomb@plt+0xbb18>
  40ecfc:	ldr	x1, [x19, #176]
  40ed00:	add	x0, x19, #0x198
  40ed04:	bl	40b148 <wcrtomb@plt+0x8408>
  40ed08:	ldr	x20, [sp, #136]
  40ed0c:	b	40e880 <wcrtomb@plt+0xbb40>
  40ed10:	mov	x6, x20
  40ed14:	b	40ead0 <wcrtomb@plt+0xbd90>
  40ed18:	stp	x29, x30, [sp, #-112]!
  40ed1c:	mov	x29, sp
  40ed20:	stp	x19, x20, [sp, #16]
  40ed24:	mov	x19, x0
  40ed28:	mov	x20, x1
  40ed2c:	ldr	x0, [x0, #304]
  40ed30:	stp	x21, x22, [sp, #32]
  40ed34:	mov	x21, x2
  40ed38:	stp	x23, x24, [sp, #48]
  40ed3c:	mov	x22, x4
  40ed40:	cmp	x0, #0x3ff
  40ed44:	stp	x25, x26, [sp, #64]
  40ed48:	and	w26, w3, #0xff
  40ed4c:	stp	x27, x28, [sp, #80]
  40ed50:	b.gt	40ef7c <wcrtomb@plt+0xc23c>
  40ed54:	ldr	x0, [x19, #352]
  40ed58:	cbz	x0, 40f098 <wcrtomb@plt+0xc358>
  40ed5c:	ldr	x1, [x19, #368]
  40ed60:	mov	x28, #0x0                   	// #0
  40ed64:	ldrb	w24, [x19, #459]
  40ed68:	mov	x23, #0x0                   	// #0
  40ed6c:	ldrb	w0, [x21]
  40ed70:	mov	x4, #0x0                   	// #0
  40ed74:	strb	w24, [x21]
  40ed78:	str	w0, [sp, #108]
  40ed7c:	add	x25, x19, w24, sxtw
  40ed80:	ldr	x2, [x1, x28, lsl #3]
  40ed84:	cbz	x2, 40ee58 <wcrtomb@plt+0xc118>
  40ed88:	mov	x0, x20
  40ed8c:	ldrsw	x4, [x19, #364]
  40ed90:	cmp	x4, x28
  40ed94:	ldrb	w4, [x0], #1
  40ed98:	ldr	x27, [x2, x4, lsl #3]
  40ed9c:	b.le	40eec0 <wcrtomb@plt+0xc180>
  40eda0:	cmp	x28, x27
  40eda4:	b.ne	40eeb4 <wcrtomb@plt+0xc174>  // b.any
  40eda8:	ldrb	w4, [x0]
  40edac:	mov	x5, x20
  40edb0:	mov	x20, x0
  40edb4:	add	x0, x0, #0x1
  40edb8:	ldr	x27, [x2, x4, lsl #3]
  40edbc:	cmp	x28, x27
  40edc0:	b.eq	40eda8 <wcrtomb@plt+0xc068>  // b.none
  40edc4:	mov	x4, x20
  40edc8:	add	x20, x5, #0x2
  40edcc:	ldr	x2, [x1, x27, lsl #3]
  40edd0:	cbnz	x2, 40ee1c <wcrtomb@plt+0xc0dc>
  40edd4:	tbnz	x27, #63, 40ee64 <wcrtomb@plt+0xc124>
  40edd8:	ldr	x0, [x19, #376]
  40eddc:	ldrb	w2, [x20]
  40ede0:	ldr	x5, [x0, x27, lsl #3]
  40ede4:	cbz	x5, 40ef34 <wcrtomb@plt+0xc1f4>
  40ede8:	ldr	x0, [x19, #384]
  40edec:	add	x4, x19, w2, sxtw
  40edf0:	ldrb	w0, [x0, x27]
  40edf4:	ldrb	w4, [x4, #460]
  40edf8:	and	w0, w0, w4
  40edfc:	tst	w0, #0xff
  40ee00:	b.ne	40f0a4 <wcrtomb@plt+0xc364>  // b.any
  40ee04:	cmp	x21, x20
  40ee08:	b.eq	40eed8 <wcrtomb@plt+0xc198>  // b.none
  40ee0c:	add	x20, x20, #0x1
  40ee10:	mov	x28, x27
  40ee14:	ldr	x0, [x5, x2, lsl #3]
  40ee18:	b	40ee48 <wcrtomb@plt+0xc108>
  40ee1c:	ldrb	w0, [x4, #1]
  40ee20:	ldr	x0, [x2, x0, lsl #3]
  40ee24:	cmp	x0, x27
  40ee28:	b.ne	40ee40 <wcrtomb@plt+0xc100>  // b.any
  40ee2c:	nop
  40ee30:	ldrb	w0, [x20, #1]!
  40ee34:	ldr	x0, [x2, x0, lsl #3]
  40ee38:	cmp	x0, x27
  40ee3c:	b.eq	40ee30 <wcrtomb@plt+0xc0f0>  // b.none
  40ee40:	add	x20, x20, #0x1
  40ee44:	mov	x28, x27
  40ee48:	mov	x4, x28
  40ee4c:	mov	x28, x0
  40ee50:	ldr	x2, [x1, x28, lsl #3]
  40ee54:	cbnz	x2, 40ed88 <wcrtomb@plt+0xc048>
  40ee58:	mov	x27, x28
  40ee5c:	mov	x28, x4
  40ee60:	tbz	x27, #63, 40edd8 <wcrtomb@plt+0xc098>
  40ee64:	cmn	x27, #0x2
  40ee68:	b.eq	40ef4c <wcrtomb@plt+0xc20c>  // b.none
  40ee6c:	cmp	x21, x20
  40ee70:	b.cc	40ef74 <wcrtomb@plt+0xc234>  // b.lo, b.ul, b.last
  40ee74:	ldurb	w0, [x20, #-1]
  40ee78:	cmp	w0, w24
  40ee7c:	b.ne	40ef74 <wcrtomb@plt+0xc234>  // b.any
  40ee80:	ldr	x0, [x19, #392]
  40ee84:	ldr	x0, [x0, x28, lsl #3]
  40ee88:	tbnz	x0, #63, 40ef74 <wcrtomb@plt+0xc234>
  40ee8c:	add	x23, x23, #0x1
  40ee90:	cbnz	w26, 40ee48 <wcrtomb@plt+0xc108>
  40ee94:	ldrb	w2, [x25, #460]
  40ee98:	mov	x0, #0x0                   	// #0
  40ee9c:	cmp	w2, #0x4
  40eea0:	b.eq	40ee48 <wcrtomb@plt+0xc108>  // b.none
  40eea4:	cmp	w2, #0x2
  40eea8:	b.eq	40ef64 <wcrtomb@plt+0xc224>  // b.none
  40eeac:	ldr	x0, [x19, #400]
  40eeb0:	b	40ee48 <wcrtomb@plt+0xc108>
  40eeb4:	mov	x4, x20
  40eeb8:	mov	x20, x0
  40eebc:	b	40edcc <wcrtomb@plt+0xc08c>
  40eec0:	ldr	x2, [x1, x27, lsl #3]
  40eec4:	cbz	x2, 40f0ac <wcrtomb@plt+0xc36c>
  40eec8:	ldrb	w4, [x20, #1]
  40eecc:	mov	x20, x0
  40eed0:	ldr	x0, [x2, x4, lsl #3]
  40eed4:	b	40ee40 <wcrtomb@plt+0xc100>
  40eed8:	ldr	x4, [x19, #296]
  40eedc:	add	x0, x27, x27, lsl #2
  40eee0:	add	x0, x4, x0, lsl #4
  40eee4:	ldrh	w4, [x0, #34]
  40eee8:	ldrb	w0, [x0, #32]
  40eeec:	and	w0, w0, w4, lsr #6
  40eef0:	tst	x0, #0x7
  40eef4:	b.eq	40ee0c <wcrtomb@plt+0xc0cc>  // b.none
  40eef8:	mov	x0, x21
  40eefc:	nop
  40ef00:	cbz	x22, 40ef10 <wcrtomb@plt+0xc1d0>
  40ef04:	ldr	x1, [x22]
  40ef08:	add	x23, x1, x23
  40ef0c:	str	x23, [x22]
  40ef10:	ldrb	w1, [sp, #108]
  40ef14:	strb	w1, [x21]
  40ef18:	ldp	x19, x20, [sp, #16]
  40ef1c:	ldp	x21, x22, [sp, #32]
  40ef20:	ldp	x23, x24, [sp, #48]
  40ef24:	ldp	x25, x26, [sp, #64]
  40ef28:	ldp	x27, x28, [sp, #80]
  40ef2c:	ldp	x29, x30, [sp], #112
  40ef30:	ret
  40ef34:	mov	x1, x19
  40ef38:	mov	x0, x27
  40ef3c:	bl	40c840 <wcrtomb@plt+0x9b00>
  40ef40:	mov	x0, x27
  40ef44:	ldr	x1, [x19, #368]
  40ef48:	b	40ee48 <wcrtomb@plt+0xc108>
  40ef4c:	ldurb	w2, [x20, #-1]
  40ef50:	mov	x1, x19
  40ef54:	mov	x0, x28
  40ef58:	bl	40c840 <wcrtomb@plt+0x9b00>
  40ef5c:	ldr	x1, [x19, #368]
  40ef60:	b	40ee48 <wcrtomb@plt+0xc108>
  40ef64:	ldr	w0, [x19, #364]
  40ef68:	sub	w0, w0, #0x1
  40ef6c:	sxtw	x0, w0
  40ef70:	b	40ee48 <wcrtomb@plt+0xc108>
  40ef74:	mov	x0, #0x0                   	// #0
  40ef78:	b	40ef00 <wcrtomb@plt+0xc1c0>
  40ef7c:	ldr	w23, [x19, #364]
  40ef80:	cmp	x0, w23, sxtw
  40ef84:	sxtw	x24, w23
  40ef88:	b.le	40efd0 <wcrtomb@plt+0xc290>
  40ef8c:	mov	w0, #0x50                  	// #80
  40ef90:	smull	x23, w23, w0
  40ef94:	nop
  40ef98:	ldr	x0, [x19, #296]
  40ef9c:	add	x24, x24, #0x1
  40efa0:	add	x0, x0, x23
  40efa4:	ldr	x0, [x0, #8]
  40efa8:	bl	402ae0 <free@plt>
  40efac:	ldr	x0, [x19, #296]
  40efb0:	add	x0, x0, x23
  40efb4:	add	x23, x23, #0x50
  40efb8:	ldr	x0, [x0, #48]
  40efbc:	bl	402ae0 <free@plt>
  40efc0:	ldr	x0, [x19, #304]
  40efc4:	cmp	x24, x0
  40efc8:	b.lt	40ef98 <wcrtomb@plt+0xc258>  // b.tstop
  40efcc:	ldrsw	x24, [x19, #364]
  40efd0:	ldr	x1, [x19, #368]
  40efd4:	str	x24, [x19, #304]
  40efd8:	ldr	x0, [x19, #352]
  40efdc:	cbz	x1, 40f024 <wcrtomb@plt+0xc2e4>
  40efe0:	cmp	x0, #0x0
  40efe4:	b.le	40f020 <wcrtomb@plt+0xc2e0>
  40efe8:	mov	x23, #0x0                   	// #0
  40efec:	nop
  40eff0:	ldr	x0, [x1, x23, lsl #3]
  40eff4:	bl	402ae0 <free@plt>
  40eff8:	ldr	x0, [x19, #376]
  40effc:	ldr	x0, [x0, x23, lsl #3]
  40f000:	bl	402ae0 <free@plt>
  40f004:	ldp	x1, x0, [x19, #368]
  40f008:	str	xzr, [x0, x23, lsl #3]
  40f00c:	ldr	x0, [x19, #352]
  40f010:	str	xzr, [x1, x23, lsl #3]
  40f014:	add	x23, x23, #0x1
  40f018:	cmp	x23, x0
  40f01c:	b.lt	40eff0 <wcrtomb@plt+0xc2b0>  // b.tstop
  40f020:	str	wzr, [x19, #360]
  40f024:	ldrb	w1, [x19, #1048]
  40f028:	cbz	w1, 40ed58 <wcrtomb@plt+0xc018>
  40f02c:	ldr	x1, [x19, #432]
  40f030:	cbz	x1, 40ed58 <wcrtomb@plt+0xc018>
  40f034:	tbnz	x0, #63, 40f060 <wcrtomb@plt+0xc320>
  40f038:	mov	x23, #0xffffffffffffffff    	// #-1
  40f03c:	nop
  40f040:	ldr	x0, [x1, x23, lsl #3]
  40f044:	bl	402ae0 <free@plt>
  40f048:	ldr	x1, [x19, #432]
  40f04c:	ldr	x0, [x19, #352]
  40f050:	str	xzr, [x1, x23, lsl #3]
  40f054:	add	x23, x23, #0x1
  40f058:	cmp	x23, x0
  40f05c:	b.lt	40f040 <wcrtomb@plt+0xc300>  // b.tstop
  40f060:	ldr	w2, [x19, #364]
  40f064:	cmp	w2, #0x0
  40f068:	b.le	40f08c <wcrtomb@plt+0xc34c>
  40f06c:	ldr	x1, [x19, #296]
  40f070:	mov	w4, #0x50                  	// #80
  40f074:	mov	x3, #0xffffffffffffffff    	// #-1
  40f078:	add	x1, x1, #0x48
  40f07c:	smaddl	x2, w2, w4, x1
  40f080:	str	x3, [x1], #80
  40f084:	cmp	x2, x1
  40f088:	b.ne	40f080 <wcrtomb@plt+0xc340>  // b.any
  40f08c:	str	xzr, [x19, #440]
  40f090:	cbnz	x0, 40ed5c <wcrtomb@plt+0xc01c>
  40f094:	nop
  40f098:	mov	x0, x19
  40f09c:	bl	40ad60 <wcrtomb@plt+0x8020>
  40f0a0:	b	40ed5c <wcrtomb@plt+0xc01c>
  40f0a4:	mov	x0, x20
  40f0a8:	b	40ef00 <wcrtomb@plt+0xc1c0>
  40f0ac:	mov	x20, x0
  40f0b0:	b	40edd4 <wcrtomb@plt+0xc094>
  40f0b4:	nop
  40f0b8:	stp	x29, x30, [sp, #-32]!
  40f0bc:	mov	x4, #0xffffffffffffffff    	// #-1
  40f0c0:	mov	w3, #0x1                   	// #1
  40f0c4:	mov	x29, sp
  40f0c8:	str	x19, [sp, #16]
  40f0cc:	mov	x19, x2
  40f0d0:	ldrb	w2, [x2, #456]
  40f0d4:	stp	x0, x1, [x19, #32]
  40f0d8:	str	x4, [x19, #48]
  40f0dc:	strb	w3, [x19, #120]
  40f0e0:	cbz	w2, 40f180 <wcrtomb@plt+0xc440>
  40f0e4:	ldr	x0, [x19, #184]
  40f0e8:	cbz	x0, 40f14c <wcrtomb@plt+0xc40c>
  40f0ec:	mov	x0, x19
  40f0f0:	bl	40db70 <wcrtomb@plt+0xae30>
  40f0f4:	str	x0, [x19, #128]
  40f0f8:	ldr	x0, [x19, #168]
  40f0fc:	str	x0, [x19, #136]
  40f100:	mov	x0, x19
  40f104:	bl	40e7b8 <wcrtomb@plt+0xba78>
  40f108:	ldr	x0, [x19, #128]
  40f10c:	cmn	x0, #0x1
  40f110:	b.ne	40f198 <wcrtomb@plt+0xc458>  // b.any
  40f114:	ldr	x1, [x19, #184]
  40f118:	mov	x0, x19
  40f11c:	mvn	x1, x1
  40f120:	bl	40b008 <wcrtomb@plt+0x82c8>
  40f124:	mov	x0, x19
  40f128:	mov	x1, #0x105                 	// #261
  40f12c:	bl	40b008 <wcrtomb@plt+0x82c8>
  40f130:	ldr	x0, [x19, #184]
  40f134:	cbnz	x0, 40f15c <wcrtomb@plt+0xc41c>
  40f138:	add	x0, x0, #0x1
  40f13c:	str	x0, [x19, #184]
  40f140:	ldr	x19, [sp, #16]
  40f144:	ldp	x29, x30, [sp], #32
  40f148:	ret
  40f14c:	mov	x0, x19
  40f150:	mov	x1, #0x10b                 	// #267
  40f154:	bl	40b008 <wcrtomb@plt+0x82c8>
  40f158:	b	40f0ec <wcrtomb@plt+0xc3ac>
  40f15c:	mov	x0, x19
  40f160:	mov	x1, #0x106                 	// #262
  40f164:	bl	40b008 <wcrtomb@plt+0x82c8>
  40f168:	ldr	x0, [x19, #184]
  40f16c:	add	x0, x0, #0x1
  40f170:	str	x0, [x19, #184]
  40f174:	ldr	x19, [sp, #16]
  40f178:	ldp	x29, x30, [sp], #32
  40f17c:	ret
  40f180:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  40f184:	add	x1, x1, #0x538
  40f188:	mov	w2, #0x5                   	// #5
  40f18c:	mov	x0, #0x0                   	// #0
  40f190:	bl	402c20 <dcgettext@plt>
  40f194:	bl	409320 <wcrtomb@plt+0x65e0>
  40f198:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  40f19c:	add	x1, x1, #0x550
  40f1a0:	mov	w2, #0x5                   	// #5
  40f1a4:	mov	x0, #0x0                   	// #0
  40f1a8:	bl	402c20 <dcgettext@plt>
  40f1ac:	bl	409320 <wcrtomb@plt+0x65e0>
  40f1b0:	ldr	x6, [x0, #1040]
  40f1b4:	mov	x16, x6
  40f1b8:	br	x16
  40f1bc:	nop
  40f1c0:	ldr	x0, [x0, #288]
  40f1c4:	ret
  40f1c8:	ldrb	w0, [x0, #192]
  40f1cc:	ret
  40f1d0:	stp	x29, x30, [sp, #-48]!
  40f1d4:	mov	x29, sp
  40f1d8:	stp	x19, x20, [sp, #16]
  40f1dc:	mov	x19, x0
  40f1e0:	ldr	x0, [x0]
  40f1e4:	str	x21, [sp, #32]
  40f1e8:	bl	402ae0 <free@plt>
  40f1ec:	ldr	x0, [x19, #144]
  40f1f0:	bl	402ae0 <free@plt>
  40f1f4:	ldrb	w0, [x19, #1048]
  40f1f8:	cbnz	w0, 40f330 <wcrtomb@plt+0xc5f0>
  40f1fc:	ldr	x0, [x19, #336]
  40f200:	mov	x20, #0x0                   	// #0
  40f204:	mov	x21, #0x0                   	// #0
  40f208:	bl	402ae0 <free@plt>
  40f20c:	ldr	x0, [x19, #344]
  40f210:	bl	402ae0 <free@plt>
  40f214:	ldr	x0, [x19, #304]
  40f218:	cmp	x0, #0x0
  40f21c:	b.le	40f254 <wcrtomb@plt+0xc514>
  40f220:	ldr	x0, [x19, #296]
  40f224:	add	x21, x21, #0x1
  40f228:	add	x0, x0, x20
  40f22c:	ldr	x0, [x0, #8]
  40f230:	bl	402ae0 <free@plt>
  40f234:	ldr	x0, [x19, #296]
  40f238:	add	x0, x0, x20
  40f23c:	add	x20, x20, #0x50
  40f240:	ldr	x0, [x0, #48]
  40f244:	bl	402ae0 <free@plt>
  40f248:	ldr	x0, [x19, #304]
  40f24c:	cmp	x0, x21
  40f250:	b.gt	40f220 <wcrtomb@plt+0xc4e0>
  40f254:	ldr	x0, [x19, #296]
  40f258:	bl	402ae0 <free@plt>
  40f25c:	ldr	x0, [x19, #320]
  40f260:	cbz	x0, 40f29c <wcrtomb@plt+0xc55c>
  40f264:	ldr	x1, [x19, #152]
  40f268:	cmp	x1, #0x0
  40f26c:	b.le	40f298 <wcrtomb@plt+0xc558>
  40f270:	mov	x21, #0x0                   	// #0
  40f274:	mov	x20, #0x0                   	// #0
  40f278:	ldr	x0, [x0, x21]
  40f27c:	add	x20, x20, #0x1
  40f280:	add	x21, x21, #0x18
  40f284:	bl	402ae0 <free@plt>
  40f288:	ldr	x0, [x19, #152]
  40f28c:	cmp	x0, x20
  40f290:	ldr	x0, [x19, #320]
  40f294:	b.gt	40f278 <wcrtomb@plt+0xc538>
  40f298:	bl	402ae0 <free@plt>
  40f29c:	ldr	x0, [x19, #368]
  40f2a0:	cbz	x0, 40f300 <wcrtomb@plt+0xc5c0>
  40f2a4:	ldr	x1, [x19, #352]
  40f2a8:	cmp	x1, #0x0
  40f2ac:	b.le	40f2e0 <wcrtomb@plt+0xc5a0>
  40f2b0:	mov	x20, #0x0                   	// #0
  40f2b4:	nop
  40f2b8:	ldr	x0, [x0, x20, lsl #3]
  40f2bc:	bl	402ae0 <free@plt>
  40f2c0:	ldr	x0, [x19, #376]
  40f2c4:	ldr	x0, [x0, x20, lsl #3]
  40f2c8:	add	x20, x20, #0x1
  40f2cc:	bl	402ae0 <free@plt>
  40f2d0:	ldr	x0, [x19, #352]
  40f2d4:	cmp	x0, x20
  40f2d8:	ldr	x0, [x19, #368]
  40f2dc:	b.gt	40f2b8 <wcrtomb@plt+0xc578>
  40f2e0:	sub	x0, x0, #0x10
  40f2e4:	bl	402ae0 <free@plt>
  40f2e8:	ldr	x0, [x19, #376]
  40f2ec:	bl	402ae0 <free@plt>
  40f2f0:	ldr	x0, [x19, #392]
  40f2f4:	bl	402ae0 <free@plt>
  40f2f8:	ldr	x0, [x19, #384]
  40f2fc:	bl	402ae0 <free@plt>
  40f300:	ldr	x0, [x19, #288]
  40f304:	cbz	x0, 40f320 <wcrtomb@plt+0xc5e0>
  40f308:	bl	40f1d0 <wcrtomb@plt+0xc490>
  40f30c:	ldr	x21, [sp, #32]
  40f310:	ldr	x0, [x19, #288]
  40f314:	ldp	x19, x20, [sp, #16]
  40f318:	ldp	x29, x30, [sp], #48
  40f31c:	b	402ae0 <free@plt>
  40f320:	ldp	x19, x20, [sp, #16]
  40f324:	ldr	x21, [sp, #32]
  40f328:	ldp	x29, x30, [sp], #48
  40f32c:	ret
  40f330:	mov	x0, x19
  40f334:	bl	40b9f0 <wcrtomb@plt+0x8cb0>
  40f338:	b	40f1fc <wcrtomb@plt+0xc4bc>
  40f33c:	nop
  40f340:	stp	x29, x30, [sp, #-144]!
  40f344:	and	w3, w3, #0xff
  40f348:	mov	x29, sp
  40f34c:	stp	x19, x20, [sp, #16]
  40f350:	mov	x20, x2
  40f354:	stp	x21, x22, [sp, #32]
  40f358:	stp	x23, x24, [sp, #48]
  40f35c:	str	w3, [sp, #100]
  40f360:	cbz	x0, 40f368 <wcrtomb@plt+0xc628>
  40f364:	bl	40f0b8 <wcrtomb@plt+0xc378>
  40f368:	mov	x0, #0x920                 	// #2336
  40f36c:	bl	4125f8 <wcrtomb@plt+0xf8b8>
  40f370:	mov	x19, x0
  40f374:	mov	x1, x20
  40f378:	mov	x2, #0x920                 	// #2336
  40f37c:	bl	402650 <memcpy@plt>
  40f380:	adrp	x23, 40e000 <wcrtomb@plt+0xb2c0>
  40f384:	add	x0, x23, #0xd18
  40f388:	ldr	x1, [x19, #16]
  40f38c:	mov	x3, x0
  40f390:	str	x3, [sp, #104]
  40f394:	stp	xzr, xzr, [x19, #280]
  40f398:	cmp	xzr, x1, lsr #59
  40f39c:	stp	xzr, xzr, [x19, #296]
  40f3a0:	cset	x2, ne  // ne = any
  40f3a4:	lsl	x0, x1, #5
  40f3a8:	str	xzr, [x19, #320]
  40f3ac:	stp	xzr, xzr, [x19, #336]
  40f3b0:	str	xzr, [x19, #352]
  40f3b4:	stp	xzr, xzr, [x19, #368]
  40f3b8:	stp	xzr, xzr, [x19, #384]
  40f3bc:	str	x3, [x19, #1040]
  40f3c0:	strb	wzr, [x19, #1048]
  40f3c4:	tbnz	x1, #58, 40f690 <wcrtomb@plt+0xc950>
  40f3c8:	cbnz	x2, 40f690 <wcrtomb@plt+0xc950>
  40f3cc:	bl	4125f8 <wcrtomb@plt+0xf8b8>
  40f3d0:	str	x0, [x19]
  40f3d4:	ldr	x2, [x20, #8]
  40f3d8:	cbnz	x2, 40f654 <wcrtomb@plt+0xc914>
  40f3dc:	ldr	x0, [x20, #152]
  40f3e0:	cmp	xzr, x0, lsr #60
  40f3e4:	lsl	x0, x0, #4
  40f3e8:	cset	x22, ne  // ne = any
  40f3ec:	cmp	x0, #0x0
  40f3f0:	csinc	x22, x22, xzr, ge  // ge = tcont
  40f3f4:	cbnz	x22, 40f690 <wcrtomb@plt+0xc950>
  40f3f8:	bl	4125f8 <wcrtomb@plt+0xf8b8>
  40f3fc:	str	x0, [x19, #144]
  40f400:	ldr	x0, [x20, #152]
  40f404:	cmp	x0, #0x0
  40f408:	lsl	x0, x0, #1
  40f40c:	str	x0, [x19, #160]
  40f410:	b.le	40f664 <wcrtomb@plt+0xc924>
  40f414:	mov	x24, #0x0                   	// #0
  40f418:	mov	x21, #0x0                   	// #0
  40f41c:	mov	w8, #0x0                   	// #0
  40f420:	mov	x23, #0xffffffffffffffff    	// #-1
  40f424:	stp	x25, x26, [sp, #64]
  40f428:	mov	w26, #0x0                   	// #0
  40f42c:	stp	x27, x28, [sp, #80]
  40f430:	ldr	x7, [x20, #144]
  40f434:	b	40f470 <wcrtomb@plt+0xc730>
  40f438:	cmp	x0, #0xff
  40f43c:	cset	w1, ls  // ls = plast
  40f440:	cmp	x0, #0x113
  40f444:	cset	w4, gt
  40f448:	ldr	x3, [x19, #144]
  40f44c:	orr	w1, w1, w4
  40f450:	cmp	w1, #0x0
  40f454:	csel	w26, w26, w1, eq  // eq = none
  40f458:	str	x0, [x3, x28]
  40f45c:	ldr	x1, [x20, #152]
  40f460:	cmp	x1, x27
  40f464:	b.le	40f4f8 <wcrtomb@plt+0xc7b8>
  40f468:	mov	x24, x5
  40f46c:	mov	x21, x27
  40f470:	ldr	x0, [x7, x21, lsl #3]
  40f474:	lsl	x25, x21, #3
  40f478:	add	x5, x24, #0x1
  40f47c:	lsl	x28, x24, #3
  40f480:	cmp	x0, #0x111
  40f484:	add	x27, x21, #0x1
  40f488:	b.gt	40f5cc <wcrtomb@plt+0xc88c>
  40f48c:	cmp	x0, #0x10d
  40f490:	b.gt	40f5b0 <wcrtomb@plt+0xc870>
  40f494:	cmp	x0, #0x10a
  40f498:	b.ne	40f438 <wcrtomb@plt+0xc6f8>  // b.any
  40f49c:	add	x1, sp, #0x70
  40f4a0:	mov	x0, x19
  40f4a4:	stp	x23, x23, [sp, #112]
  40f4a8:	add	x21, x21, #0x2
  40f4ac:	stp	x23, x23, [sp, #128]
  40f4b0:	bl	40d3a8 <wcrtomb@plt+0xa668>
  40f4b4:	add	x0, x0, #0x114
  40f4b8:	ldr	x1, [x19, #144]
  40f4bc:	add	x5, x24, #0x2
  40f4c0:	ldr	x7, [x20, #144]
  40f4c4:	add	x9, x1, x28
  40f4c8:	str	x0, [x1, x28]
  40f4cc:	mov	x0, #0x102                 	// #258
  40f4d0:	add	x4, x7, x25
  40f4d4:	mov	w8, #0x1                   	// #1
  40f4d8:	str	x0, [x9, #8]
  40f4dc:	ldr	x0, [x4, #8]
  40f4e0:	ldr	x1, [x20, #152]
  40f4e4:	sub	x0, x0, #0x101
  40f4e8:	cmp	x0, #0x3
  40f4ec:	csel	x27, x21, x27, cc  // cc = lo, ul, last
  40f4f0:	cmp	x1, x27
  40f4f4:	b.gt	40f468 <wcrtomb@plt+0xc728>
  40f4f8:	str	x5, [x19, #152]
  40f4fc:	cbz	w26, 40f634 <wcrtomb@plt+0xc8f4>
  40f500:	cbz	w8, 40f62c <wcrtomb@plt+0xc8ec>
  40f504:	ldp	x25, x26, [sp, #64]
  40f508:	ldp	x27, x28, [sp, #80]
  40f50c:	str	x19, [x20, #288]
  40f510:	cmp	x1, #0x0
  40f514:	b.le	40f66c <wcrtomb@plt+0xc92c>
  40f518:	ldr	x3, [x20, #144]
  40f51c:	mov	x2, #0x0                   	// #0
  40f520:	ldr	x0, [x3, x2, lsl #3]
  40f524:	cmp	x0, #0x111
  40f528:	b.gt	40f5dc <wcrtomb@plt+0xc89c>
  40f52c:	cmp	x0, #0x10d
  40f530:	b.gt	40f620 <wcrtomb@plt+0xc8e0>
  40f534:	add	x2, x2, #0x1
  40f538:	cmp	x2, x1
  40f53c:	b.ne	40f520 <wcrtomb@plt+0xc7e0>  // b.any
  40f540:	ldrb	w4, [x20, #1050]
  40f544:	mov	w2, #0x0                   	// #0
  40f548:	cbz	w4, 40f5a0 <wcrtomb@plt+0xc860>
  40f54c:	nop
  40f550:	ldr	x0, [x3, x22, lsl #3]
  40f554:	cmp	x0, #0x113
  40f558:	b.eq	40f5a0 <wcrtomb@plt+0xc860>  // b.none
  40f55c:	b.gt	40f570 <wcrtomb@plt+0xc830>
  40f560:	cmp	x0, #0x10a
  40f564:	b.eq	40f69c <wcrtomb@plt+0xc95c>  // b.none
  40f568:	cmp	x0, #0x112
  40f56c:	csel	w2, w2, w4, ne  // ne = any
  40f570:	add	x22, x22, #0x1
  40f574:	cmp	x22, x1
  40f578:	b.ne	40f550 <wcrtomb@plt+0xc810>  // b.any
  40f57c:	cbz	w2, 40f674 <wcrtomb@plt+0xc934>
  40f580:	mov	x0, x20
  40f584:	bl	40b9f0 <wcrtomb@plt+0x8cb0>
  40f588:	mov	w0, #0x1                   	// #1
  40f58c:	strb	w0, [x20, #192]
  40f590:	ldr	x0, [sp, #104]
  40f594:	str	x0, [x20, #1040]
  40f598:	strb	wzr, [x20, #1048]
  40f59c:	nop
  40f5a0:	ldrb	w1, [sp, #100]
  40f5a4:	mov	x0, x20
  40f5a8:	bl	40bc00 <wcrtomb@plt+0x8ec0>
  40f5ac:	b	40f5f4 <wcrtomb@plt+0xc8b4>
  40f5b0:	ldr	x1, [x19, #144]
  40f5b4:	mov	x2, #0x100                 	// #256
  40f5b8:	ldrb	w3, [x20, #1048]
  40f5bc:	cmp	w3, #0x0
  40f5c0:	csel	x0, x2, x0, ne  // ne = any
  40f5c4:	str	x0, [x1, x28]
  40f5c8:	b	40f45c <wcrtomb@plt+0xc71c>
  40f5cc:	sub	x1, x0, #0x112
  40f5d0:	cmp	x1, #0x1
  40f5d4:	b.hi	40f438 <wcrtomb@plt+0xc6f8>  // b.pmore
  40f5d8:	b	40f49c <wcrtomb@plt+0xc75c>
  40f5dc:	sub	x0, x0, #0x112
  40f5e0:	cmp	x0, #0x1
  40f5e4:	b.hi	40f534 <wcrtomb@plt+0xc7f4>  // b.pmore
  40f5e8:	adrp	x0, 40a000 <wcrtomb@plt+0x72c0>
  40f5ec:	add	x0, x0, #0xa70
  40f5f0:	str	x0, [x20, #1040]
  40f5f4:	ldr	x0, [x20, #288]
  40f5f8:	cbz	x0, 40f60c <wcrtomb@plt+0xc8cc>
  40f5fc:	mov	w1, #0x1                   	// #1
  40f600:	strb	w1, [x20, #192]
  40f604:	ldrb	w1, [sp, #100]
  40f608:	bl	40bc00 <wcrtomb@plt+0x8ec0>
  40f60c:	ldp	x19, x20, [sp, #16]
  40f610:	ldp	x21, x22, [sp, #32]
  40f614:	ldp	x23, x24, [sp, #48]
  40f618:	ldp	x29, x30, [sp], #144
  40f61c:	ret
  40f620:	ldrb	w0, [x20, #1048]
  40f624:	cbnz	w0, 40f5e8 <wcrtomb@plt+0xc8a8>
  40f628:	b	40f534 <wcrtomb@plt+0xc7f4>
  40f62c:	ldrb	w0, [x20, #1048]
  40f630:	cbnz	w0, 40f504 <wcrtomb@plt+0xc7c4>
  40f634:	ldp	x25, x26, [sp, #64]
  40f638:	ldp	x27, x28, [sp, #80]
  40f63c:	mov	x0, x19
  40f640:	bl	40f1d0 <wcrtomb@plt+0xc490>
  40f644:	mov	x0, x19
  40f648:	bl	402ae0 <free@plt>
  40f64c:	ldr	x1, [x20, #152]
  40f650:	b	40f510 <wcrtomb@plt+0xc7d0>
  40f654:	ldr	x1, [x20]
  40f658:	lsl	x2, x2, #5
  40f65c:	bl	402650 <memcpy@plt>
  40f660:	b	40f3dc <wcrtomb@plt+0xc69c>
  40f664:	str	xzr, [x19, #152]
  40f668:	b	40f63c <wcrtomb@plt+0xc8fc>
  40f66c:	ldrb	w0, [x20, #1050]
  40f670:	cbz	w0, 40f5a0 <wcrtomb@plt+0xc860>
  40f674:	ldr	x0, [x20, #288]
  40f678:	cbz	x0, 40f580 <wcrtomb@plt+0xc840>
  40f67c:	bl	40f1d0 <wcrtomb@plt+0xc490>
  40f680:	ldr	x0, [x20, #288]
  40f684:	bl	402ae0 <free@plt>
  40f688:	str	xzr, [x20, #288]
  40f68c:	b	40f580 <wcrtomb@plt+0xc840>
  40f690:	stp	x25, x26, [sp, #64]
  40f694:	stp	x27, x28, [sp, #80]
  40f698:	bl	412830 <wcrtomb@plt+0xfaf0>
  40f69c:	stp	x25, x26, [sp, #64]
  40f6a0:	stp	x27, x28, [sp, #80]
  40f6a4:	bl	4029e0 <abort@plt>
  40f6a8:	stp	x29, x30, [sp, #-144]!
  40f6ac:	mov	x29, sp
  40f6b0:	stp	x25, x26, [sp, #64]
  40f6b4:	mov	x25, x0
  40f6b8:	ldrb	w26, [x0, #1048]
  40f6bc:	stp	x21, x22, [sp, #32]
  40f6c0:	eor	w26, w26, #0x1
  40f6c4:	ldr	x22, [x0, #152]
  40f6c8:	stp	x19, x20, [sp, #16]
  40f6cc:	ldrb	w0, [x0, #457]
  40f6d0:	cmp	x22, #0x2
  40f6d4:	and	w26, w26, w0
  40f6d8:	and	w0, w26, #0xff
  40f6dc:	str	w0, [sp, #124]
  40f6e0:	b.le	410004 <wcrtomb@plt+0xd2c4>
  40f6e4:	stp	x23, x24, [sp, #48]
  40f6e8:	mov	x23, #0x1                   	// #1
  40f6ec:	mov	x19, #0x0                   	// #0
  40f6f0:	ldr	x24, [x25, #144]
  40f6f4:	stp	x27, x28, [sp, #80]
  40f6f8:	lsl	x28, x23, #3
  40f6fc:	stp	wzr, wzr, [sp, #136]
  40f700:	ldr	x20, [x24, x23, lsl #3]
  40f704:	cmp	x20, #0x105
  40f708:	b.eq	40f78c <wcrtomb@plt+0xca4c>  // b.none
  40f70c:	b.gt	40f8a8 <wcrtomb@plt+0xcb68>
  40f710:	cmp	x20, #0x100
  40f714:	b.eq	40fb94 <wcrtomb@plt+0xce54>  // b.none
  40f718:	b.le	40f864 <wcrtomb@plt+0xcb24>
  40f71c:	cmp	x20, #0x102
  40f720:	b.gt	40f83c <wcrtomb@plt+0xcafc>
  40f724:	ldr	x20, [x19]
  40f728:	ldr	x0, [x20]
  40f72c:	cbz	x0, 40f740 <wcrtomb@plt+0xca00>
  40f730:	bl	402ae0 <free@plt>
  40f734:	ldr	x0, [x20, #8]!
  40f738:	cbnz	x0, 40f730 <wcrtomb@plt+0xc9f0>
  40f73c:	ldr	x20, [x19]
  40f740:	str	xzr, [x20]
  40f744:	add	x20, x23, #0x2
  40f748:	add	x23, x23, #0x1
  40f74c:	ldr	x0, [x19, #24]
  40f750:	strb	wzr, [x0]
  40f754:	ldr	x0, [x19, #16]
  40f758:	strb	wzr, [x0]
  40f75c:	ldr	x0, [x19, #8]
  40f760:	strb	wzr, [x0]
  40f764:	strh	wzr, [x19, #32]
  40f768:	ldr	x22, [x25, #152]
  40f76c:	cmp	x22, x20
  40f770:	b.le	40f870 <wcrtomb@plt+0xcb30>
  40f774:	nop
  40f778:	ldr	x24, [x25, #144]
  40f77c:	lsl	x28, x23, #3
  40f780:	ldr	x20, [x24, x23, lsl #3]
  40f784:	cmp	x20, #0x105
  40f788:	b.ne	40f70c <wcrtomb@plt+0xc9cc>  // b.any
  40f78c:	ldr	x21, [x19, #40]
  40f790:	ldr	x1, [x19]
  40f794:	ldr	x0, [x21]
  40f798:	bl	40b3b0 <wcrtomb@plt+0x8670>
  40f79c:	str	x0, [x21]
  40f7a0:	ldr	x1, [x21, #16]
  40f7a4:	ldrb	w0, [x1]
  40f7a8:	cbz	w0, 40f7b8 <wcrtomb@plt+0xca78>
  40f7ac:	ldr	x20, [x19, #8]
  40f7b0:	ldrb	w0, [x20]
  40f7b4:	cbnz	w0, 40ff28 <wcrtomb@plt+0xd1e8>
  40f7b8:	ldr	x0, [x21, #24]
  40f7bc:	ldrb	w0, [x0]
  40f7c0:	cbnz	w0, 40ff8c <wcrtomb@plt+0xd24c>
  40f7c4:	ldr	x1, [x19, #24]
  40f7c8:	ldr	x0, [x21, #16]
  40f7cc:	ldrb	w1, [x1]
  40f7d0:	cbnz	w1, 40f7dc <wcrtomb@plt+0xca9c>
  40f7d4:	strb	wzr, [x0]
  40f7d8:	ldr	x0, [x21, #16]
  40f7dc:	ldr	x1, [x19, #16]
  40f7e0:	bl	40b190 <wcrtomb@plt+0x8450>
  40f7e4:	str	x0, [x21, #16]
  40f7e8:	ldr	x2, [x21, #24]
  40f7ec:	ldrb	w0, [x2]
  40f7f0:	cbnz	w0, 40f7fc <wcrtomb@plt+0xcabc>
  40f7f4:	ldrb	w0, [x21, #32]
  40f7f8:	cbz	w0, 40f810 <wcrtomb@plt+0xcad0>
  40f7fc:	ldr	x1, [x19, #24]
  40f800:	ldrb	w0, [x1]
  40f804:	cbnz	w0, 40fdb8 <wcrtomb@plt+0xd078>
  40f808:	ldrb	w0, [x19, #33]
  40f80c:	cbnz	w0, 40fdb8 <wcrtomb@plt+0xd078>
  40f810:	strb	wzr, [x2]
  40f814:	strh	wzr, [x21, #32]
  40f818:	mov	x0, x19
  40f81c:	bl	40b0e8 <wcrtomb@plt+0x83a8>
  40f820:	ldr	x22, [x25, #152]
  40f824:	add	x20, x23, #0x2
  40f828:	mov	x19, x21
  40f82c:	add	x23, x23, #0x1
  40f830:	cmp	x22, x20
  40f834:	b.gt	40f778 <wcrtomb@plt+0xca38>
  40f838:	b	40f870 <wcrtomb@plt+0xcb30>
  40f83c:	cmp	x20, #0x103
  40f840:	b.ne	40fc98 <wcrtomb@plt+0xcf58>  // b.any
  40f844:	ldr	x0, [x19, #24]
  40f848:	add	x20, x23, #0x2
  40f84c:	add	x23, x23, #0x1
  40f850:	strb	wzr, [x0]
  40f854:	ldr	x22, [x25, #152]
  40f858:	cmp	x22, x20
  40f85c:	b.gt	40f778 <wcrtomb@plt+0xca38>
  40f860:	b	40f870 <wcrtomb@plt+0xcb30>
  40f864:	cmn	x20, #0x1
  40f868:	b.eq	40fdd0 <wcrtomb@plt+0xd090>  // b.none
  40f86c:	cbnz	x20, 40fc9c <wcrtomb@plt+0xcf5c>
  40f870:	mov	x20, #0x0                   	// #0
  40f874:	cbz	x19, 40f888 <wcrtomb@plt+0xcb48>
  40f878:	mov	x0, x19
  40f87c:	ldr	x19, [x19, #40]
  40f880:	bl	40b0e8 <wcrtomb@plt+0x83a8>
  40f884:	cbnz	x19, 40f878 <wcrtomb@plt+0xcb38>
  40f888:	ldp	x23, x24, [sp, #48]
  40f88c:	ldp	x27, x28, [sp, #80]
  40f890:	mov	x0, x20
  40f894:	ldp	x19, x20, [sp, #16]
  40f898:	ldp	x21, x22, [sp, #32]
  40f89c:	ldp	x25, x26, [sp, #64]
  40f8a0:	ldp	x29, x30, [sp], #144
  40f8a4:	ret
  40f8a8:	cmp	x20, #0x10c
  40f8ac:	b.eq	40feb8 <wcrtomb@plt+0xd178>  // b.none
  40f8b0:	b.le	40f8f4 <wcrtomb@plt+0xcbb4>
  40f8b4:	cmp	x20, #0x10d
  40f8b8:	b.ne	40fab8 <wcrtomb@plt+0xcd78>  // b.any
  40f8bc:	mov	x0, x19
  40f8c0:	mov	x1, #0x2                   	// #2
  40f8c4:	bl	40b200 <wcrtomb@plt+0x84c0>
  40f8c8:	mov	x19, x0
  40f8cc:	ldr	x22, [x25, #152]
  40f8d0:	mov	w0, #0x1                   	// #1
  40f8d4:	mov	w1, #0x1                   	// #1
  40f8d8:	strb	w0, [x19, #33]
  40f8dc:	str	w1, [sp, #140]
  40f8e0:	add	x20, x23, #0x2
  40f8e4:	cmp	x22, x20
  40f8e8:	add	x23, x23, #0x1
  40f8ec:	b.gt	40f778 <wcrtomb@plt+0xca38>
  40f8f0:	b	40f870 <wcrtomb@plt+0xcb30>
  40f8f4:	cmp	x20, #0x106
  40f8f8:	b.ne	40fb84 <wcrtomb@plt+0xce44>  // b.any
  40f8fc:	ldr	x21, [x19, #40]
  40f900:	str	x21, [sp, #112]
  40f904:	ldr	x1, [x19, #24]
  40f908:	ldr	x20, [x21, #24]
  40f90c:	mov	x0, x20
  40f910:	bl	402aa0 <strcmp@plt>
  40f914:	cbz	w0, 40fbbc <wcrtomb@plt+0xce7c>
  40f918:	ldr	x0, [sp, #112]
  40f91c:	strb	wzr, [x20]
  40f920:	strh	wzr, [x0, #32]
  40f924:	ldr	x0, [sp, #112]
  40f928:	ldr	x2, [x0, #8]
  40f92c:	ldrb	w0, [x2]
  40f930:	cbz	w0, 40f954 <wcrtomb@plt+0xcc14>
  40f934:	ldr	x1, [x19, #8]
  40f938:	b	40f948 <wcrtomb@plt+0xcc08>
  40f93c:	ldrb	w0, [x2, #1]!
  40f940:	add	x1, x1, #0x1
  40f944:	cbz	w0, 40f954 <wcrtomb@plt+0xcc14>
  40f948:	ldrb	w3, [x1]
  40f94c:	cmp	w3, w0
  40f950:	b.eq	40f93c <wcrtomb@plt+0xcbfc>  // b.none
  40f954:	ldr	x0, [sp, #112]
  40f958:	strb	wzr, [x2]
  40f95c:	ldr	x20, [x0, #16]
  40f960:	mov	x0, x20
  40f964:	bl	402690 <strlen@plt>
  40f968:	ldr	x21, [x19, #16]
  40f96c:	mov	x22, x0
  40f970:	mov	x0, x21
  40f974:	bl	402690 <strlen@plt>
  40f978:	cmp	x0, x22
  40f97c:	csel	x6, x0, x22, le
  40f980:	cbz	x6, 40f9f8 <wcrtomb@plt+0xccb8>
  40f984:	sub	x5, x0, x22
  40f988:	mov	x1, x22
  40f98c:	sub	x5, x5, #0x1
  40f990:	sub	x7, x20, #0x1
  40f994:	add	x5, x21, x5
  40f998:	mov	x2, #0x0                   	// #0
  40f99c:	b	40f9b0 <wcrtomb@plt+0xcc70>
  40f9a0:	add	x2, x2, #0x1
  40f9a4:	sub	x1, x1, #0x1
  40f9a8:	cmp	x6, x2
  40f9ac:	b.eq	40fef0 <wcrtomb@plt+0xd1b0>  // b.none
  40f9b0:	ldrb	w4, [x7, x1]
  40f9b4:	ldrb	w3, [x5, x1]
  40f9b8:	cmp	w4, w3
  40f9bc:	b.eq	40f9a0 <wcrtomb@plt+0xcc60>  // b.none
  40f9c0:	cbz	x2, 40f9f8 <wcrtomb@plt+0xccb8>
  40f9c4:	mov	x0, #0x0                   	// #0
  40f9c8:	b	40f9d4 <wcrtomb@plt+0xcc94>
  40f9cc:	ldr	x3, [sp, #112]
  40f9d0:	ldr	x20, [x3, #16]
  40f9d4:	add	x3, x20, x1
  40f9d8:	ldrb	w3, [x3, x0]
  40f9dc:	strb	w3, [x20, x0]
  40f9e0:	add	x0, x0, #0x1
  40f9e4:	cmp	x2, x0
  40f9e8:	b.gt	40f9cc <wcrtomb@plt+0xcc8c>
  40f9ec:	ldr	x0, [sp, #112]
  40f9f0:	ldr	x20, [x0, #16]
  40f9f4:	add	x20, x20, x2
  40f9f8:	ldr	x1, [sp, #112]
  40f9fc:	strb	wzr, [x20]
  40fa00:	mov	x0, #0x8                   	// #8
  40fa04:	ldr	x24, [x1]
  40fa08:	ldr	x1, [x19]
  40fa0c:	str	x1, [sp, #128]
  40fa10:	bl	4127c8 <wcrtomb@plt+0xfa88>
  40fa14:	mov	x20, x0
  40fa18:	ldr	x1, [x24]
  40fa1c:	cbz	x1, 40fc40 <wcrtomb@plt+0xcf00>
  40fa20:	ldr	x22, [sp, #128]
  40fa24:	ldr	x21, [x22], #8
  40fa28:	cbz	x21, 40fc38 <wcrtomb@plt+0xcef8>
  40fa2c:	nop
  40fa30:	ldr	x27, [x24]
  40fa34:	mov	x0, #0x8                   	// #8
  40fa38:	bl	4127c8 <wcrtomb@plt+0xfa88>
  40fa3c:	mov	x28, x0
  40fa40:	ldrb	w26, [x27]
  40fa44:	cbz	w26, 40fbfc <wcrtomb@plt+0xcebc>
  40fa48:	mov	w1, w26
  40fa4c:	mov	x0, x21
  40fa50:	bl	402b20 <strchr@plt>
  40fa54:	mov	w1, w26
  40fa58:	mov	x2, #0x0                   	// #0
  40fa5c:	ldrb	w26, [x27, #1]
  40fa60:	cbnz	x0, 40fa90 <wcrtomb@plt+0xcd50>
  40fa64:	b	40fbf4 <wcrtomb@plt+0xceb4>
  40fa68:	cmp	x2, x6
  40fa6c:	add	x0, x0, #0x1
  40fa70:	csel	x2, x2, x6, ge  // ge = tcont
  40fa74:	str	x2, [sp, #96]
  40fa78:	str	w1, [sp, #96]
  40fa7c:	str	x2, [sp, #104]
  40fa80:	bl	402b20 <strchr@plt>
  40fa84:	ldr	w1, [sp, #96]
  40fa88:	ldr	x2, [sp, #104]
  40fa8c:	cbz	x0, 40fbe0 <wcrtomb@plt+0xcea0>
  40fa90:	mov	w7, w26
  40fa94:	mov	x6, #0x1                   	// #1
  40fa98:	cbz	w26, 40fa68 <wcrtomb@plt+0xcd28>
  40fa9c:	ldrb	w8, [x0, x6]
  40faa0:	cmp	w8, w7
  40faa4:	b.ne	40fa68 <wcrtomb@plt+0xcd28>  // b.any
  40faa8:	add	x6, x6, #0x1
  40faac:	ldrb	w7, [x27, x6]
  40fab0:	cbnz	w7, 40fa9c <wcrtomb@plt+0xcd5c>
  40fab4:	b	40fa68 <wcrtomb@plt+0xcd28>
  40fab8:	sub	x0, x20, #0x10e
  40fabc:	cmp	x0, #0x5
  40fac0:	b.ls	40fb94 <wcrtomb@plt+0xce54>  // b.plast
  40fac4:	cmp	x20, #0x113
  40fac8:	b.le	40fc9c <wcrtomb@plt+0xcf5c>
  40facc:	ldr	x3, [x25]
  40fad0:	mov	x0, #0xffffffffffffdd80    	// #-8832
  40fad4:	add	x20, x0, x20, lsl #5
  40fad8:	mov	w21, #0x0                   	// #0
  40fadc:	add	x3, x3, x20
  40fae0:	b	40faec <wcrtomb@plt+0xcdac>
  40fae4:	cmp	w21, #0x100
  40fae8:	b.eq	40fb94 <wcrtomb@plt+0xce54>  // b.none
  40faec:	mov	w1, w21
  40faf0:	mov	w27, w21
  40faf4:	add	w21, w21, #0x1
  40faf8:	lsr	w0, w1, #6
  40fafc:	ldr	x0, [x3, x0, lsl #3]
  40fb00:	lsr	x0, x0, x1
  40fb04:	tbz	w0, #0, 40fae4 <wcrtomb@plt+0xcda4>
  40fb08:	sxtw	x20, w1
  40fb0c:	sbfiz	x26, x1, #2, #32
  40fb10:	cmp	w21, #0x100
  40fb14:	sbfiz	x1, x21, #2, #32
  40fb18:	b.ne	40fb24 <wcrtomb@plt+0xcde4>  // b.any
  40fb1c:	b	40fc9c <wcrtomb@plt+0xcf5c>
  40fb20:	mov	w21, w0
  40fb24:	lsr	w0, w21, #6
  40fb28:	ldr	x0, [x3, x0, lsl #3]
  40fb2c:	lsr	x0, x0, x21
  40fb30:	tbz	w0, #0, 40fb6c <wcrtomb@plt+0xce2c>
  40fb34:	ldr	w0, [sp, #124]
  40fb38:	stp	x1, x3, [sp, #96]
  40fb3c:	cbz	w0, 40fb94 <wcrtomb@plt+0xce54>
  40fb40:	bl	402940 <__ctype_toupper_loc@plt>
  40fb44:	add	w27, w27, #0x81
  40fb48:	mov	w4, w21
  40fb4c:	cmp	w27, #0x17f
  40fb50:	ldr	x0, [x0]
  40fb54:	ldp	x1, x3, [sp, #96]
  40fb58:	b.hi	40fb60 <wcrtomb@plt+0xce20>  // b.pmore
  40fb5c:	ldr	w4, [x0, x1]
  40fb60:	ldr	w0, [x0, x26]
  40fb64:	cmp	w4, w0
  40fb68:	b.ne	40fb94 <wcrtomb@plt+0xce54>  // b.any
  40fb6c:	add	x1, x1, #0x4
  40fb70:	cmp	w21, #0xff
  40fb74:	add	w0, w21, #0x1
  40fb78:	mov	w27, w21
  40fb7c:	b.ne	40fb20 <wcrtomb@plt+0xcde0>  // b.any
  40fb80:	b	40fc9c <wcrtomb@plt+0xcf5c>
  40fb84:	cmp	x20, #0x108
  40fb88:	b.le	41000c <wcrtomb@plt+0xd2cc>
  40fb8c:	cmp	x20, #0x10a
  40fb90:	b.ne	40fc9c <wcrtomb@plt+0xcf5c>  // b.any
  40fb94:	mov	x0, x19
  40fb98:	mov	x1, #0x2                   	// #2
  40fb9c:	bl	40b200 <wcrtomb@plt+0x84c0>
  40fba0:	add	x20, x23, #0x2
  40fba4:	ldr	x22, [x25, #152]
  40fba8:	mov	x19, x0
  40fbac:	add	x23, x23, #0x1
  40fbb0:	cmp	x22, x20
  40fbb4:	b.gt	40f778 <wcrtomb@plt+0xca38>
  40fbb8:	b	40f870 <wcrtomb@plt+0xcb30>
  40fbbc:	ldrb	w3, [x19, #32]
  40fbc0:	ldrb	w2, [x19, #33]
  40fbc4:	ldrb	w1, [x21, #32]
  40fbc8:	ldrb	w0, [x21, #33]
  40fbcc:	and	w1, w1, w3
  40fbd0:	strb	w1, [x21, #32]
  40fbd4:	and	w0, w0, w2
  40fbd8:	strb	w0, [x21, #33]
  40fbdc:	b	40f924 <wcrtomb@plt+0xcbe4>
  40fbe0:	mov	x0, x28
  40fbe4:	mov	x1, x27
  40fbe8:	bl	40b280 <wcrtomb@plt+0x8540>
  40fbec:	ldrb	w26, [x27, #1]
  40fbf0:	mov	x28, x0
  40fbf4:	add	x27, x27, #0x1
  40fbf8:	cbnz	w26, 40fa48 <wcrtomb@plt+0xcd08>
  40fbfc:	mov	x0, x20
  40fc00:	mov	x1, x28
  40fc04:	bl	40b3b0 <wcrtomb@plt+0x8670>
  40fc08:	mov	x21, x28
  40fc0c:	ldr	x1, [x28]
  40fc10:	mov	x20, x0
  40fc14:	cbz	x1, 40fc28 <wcrtomb@plt+0xcee8>
  40fc18:	mov	x0, x1
  40fc1c:	bl	402ae0 <free@plt>
  40fc20:	ldr	x1, [x21, #8]!
  40fc24:	cbnz	x1, 40fc18 <wcrtomb@plt+0xced8>
  40fc28:	mov	x0, x28
  40fc2c:	bl	402ae0 <free@plt>
  40fc30:	ldr	x21, [x22], #8
  40fc34:	cbnz	x21, 40fa30 <wcrtomb@plt+0xccf0>
  40fc38:	ldr	x0, [x24, #8]!
  40fc3c:	cbnz	x0, 40fa20 <wcrtomb@plt+0xcce0>
  40fc40:	ldr	x0, [sp, #112]
  40fc44:	ldr	x21, [x0]
  40fc48:	ldr	x0, [x21]
  40fc4c:	cbz	x0, 40fc64 <wcrtomb@plt+0xcf24>
  40fc50:	bl	402ae0 <free@plt>
  40fc54:	ldr	x0, [x21, #8]!
  40fc58:	cbnz	x0, 40fc50 <wcrtomb@plt+0xcf10>
  40fc5c:	ldr	x0, [sp, #112]
  40fc60:	ldr	x21, [x0]
  40fc64:	mov	x0, x21
  40fc68:	bl	402ae0 <free@plt>
  40fc6c:	ldr	x21, [sp, #112]
  40fc70:	mov	x0, x19
  40fc74:	mov	x19, x21
  40fc78:	str	x20, [x21]
  40fc7c:	add	x20, x23, #0x2
  40fc80:	add	x23, x23, #0x1
  40fc84:	bl	40b0e8 <wcrtomb@plt+0x83a8>
  40fc88:	ldr	x22, [x25, #152]
  40fc8c:	cmp	x22, x20
  40fc90:	b.gt	40f778 <wcrtomb@plt+0xca38>
  40fc94:	b	40f870 <wcrtomb@plt+0xcb30>
  40fc98:	mov	x20, #0x104                 	// #260
  40fc9c:	add	x0, x24, x28
  40fca0:	add	x27, x23, #0x2
  40fca4:	mov	x21, x27
  40fca8:	mov	x1, #0x2                   	// #2
  40fcac:	ldr	x0, [x0, #8]
  40fcb0:	cmp	x0, #0x105
  40fcb4:	b.eq	40ffa0 <wcrtomb@plt+0xd260>  // b.none
  40fcb8:	mov	x0, x19
  40fcbc:	bl	40b200 <wcrtomb@plt+0x84c0>
  40fcc0:	ldr	w1, [sp, #124]
  40fcc4:	mov	x19, x0
  40fcc8:	and	w0, w20, #0xff
  40fccc:	cbnz	w1, 40fef8 <wcrtomb@plt+0xd1b8>
  40fcd0:	ldr	x1, [x19, #16]
  40fcd4:	cmp	x21, x27
  40fcd8:	strb	w0, [x1]
  40fcdc:	ldr	x1, [x19, #8]
  40fce0:	strb	w0, [x1]
  40fce4:	ldr	x1, [x19, #24]
  40fce8:	strb	w0, [x1]
  40fcec:	b.le	40fff4 <wcrtomb@plt+0xd2b4>
  40fcf0:	sub	x24, x21, x23
  40fcf4:	add	x22, x28, #0x10
  40fcf8:	sub	x24, x24, #0x3
  40fcfc:	mov	x20, #0x1                   	// #1
  40fd00:	lsr	x24, x24, #1
  40fd04:	add	x28, x24, #0x2
  40fd08:	ldr	x0, [x25, #144]
  40fd0c:	ldr	w1, [sp, #124]
  40fd10:	ldr	x21, [x0, x22]
  40fd14:	and	w0, w21, #0xff
  40fd18:	cbz	w1, 40fd3c <wcrtomb@plt+0xcffc>
  40fd1c:	add	w1, w21, #0x80
  40fd20:	mov	w0, w21
  40fd24:	cmp	w1, #0x17f
  40fd28:	b.hi	40fd38 <wcrtomb@plt+0xcff8>  // b.pmore
  40fd2c:	bl	402940 <__ctype_toupper_loc@plt>
  40fd30:	ldr	x0, [x0]
  40fd34:	ldr	w0, [x0, w21, sxtw #2]
  40fd38:	and	w0, w0, #0xff
  40fd3c:	ldr	x1, [x19, #16]
  40fd40:	add	x22, x22, #0x10
  40fd44:	strb	w0, [x1, x20]
  40fd48:	ldr	x1, [x19, #8]
  40fd4c:	strb	w0, [x1, x20]
  40fd50:	ldr	x1, [x19, #24]
  40fd54:	strb	w0, [x1, x20]
  40fd58:	add	x20, x20, #0x1
  40fd5c:	cmp	x28, x20
  40fd60:	b.ne	40fd08 <wcrtomb@plt+0xcfc8>  // b.any
  40fd64:	lsl	x24, x24, #1
  40fd68:	add	x20, x23, #0x4
  40fd6c:	mov	x2, x28
  40fd70:	add	x20, x20, x24
  40fd74:	add	x23, x27, x24
  40fd78:	mov	x0, x28
  40fd7c:	ldr	x1, [x19, #16]
  40fd80:	add	x23, x23, #0x1
  40fd84:	strb	wzr, [x1, x0]
  40fd88:	ldr	x1, [x19, #8]
  40fd8c:	strb	wzr, [x1, x0]
  40fd90:	ldr	x1, [x19, #24]
  40fd94:	strb	wzr, [x1, x0]
  40fd98:	ldr	x0, [x19]
  40fd9c:	ldr	x1, [x19, #24]
  40fda0:	bl	40b280 <wcrtomb@plt+0x8540>
  40fda4:	str	x0, [x19]
  40fda8:	ldr	x22, [x25, #152]
  40fdac:	cmp	x22, x20
  40fdb0:	b.gt	40f778 <wcrtomb@plt+0xca38>
  40fdb4:	b	40f870 <wcrtomb@plt+0xcb30>
  40fdb8:	mov	x0, x2
  40fdbc:	bl	40b190 <wcrtomb@plt+0x8450>
  40fdc0:	ldrb	w1, [x19, #33]
  40fdc4:	str	x0, [x21, #24]
  40fdc8:	strb	w1, [x21, #33]
  40fdcc:	b	40f818 <wcrtomb@plt+0xcad8>
  40fdd0:	ldr	x0, [x19, #40]
  40fdd4:	cbnz	x0, 410038 <wcrtomb@plt+0xd2f8>
  40fdd8:	ldr	x23, [x19]
  40fddc:	ldr	x24, [x19, #24]
  40fde0:	ldr	x20, [x23]
  40fde4:	cbz	x20, 40fe84 <wcrtomb@plt+0xd144>
  40fde8:	adrp	x22, 420000 <_obstack_memory_used@@Base+0xd3b0>
  40fdec:	add	x23, x23, #0x8
  40fdf0:	add	x22, x22, #0x7d8
  40fdf4:	mov	x21, #0x0                   	// #0
  40fdf8:	b	40fe08 <wcrtomb@plt+0xd0c8>
  40fdfc:	mov	x0, x22
  40fe00:	bl	402690 <strlen@plt>
  40fe04:	mov	x21, x0
  40fe08:	mov	x0, x20
  40fe0c:	bl	402690 <strlen@plt>
  40fe10:	cmp	x0, x21
  40fe14:	csel	x22, x22, x20, ls  // ls = plast
  40fe18:	ldr	x20, [x23], #8
  40fe1c:	cbnz	x20, 40fdfc <wcrtomb@plt+0xd0bc>
  40fe20:	mov	x1, x24
  40fe24:	mov	x0, x22
  40fe28:	bl	402aa0 <strcmp@plt>
  40fe2c:	ldrb	w1, [x22]
  40fe30:	cbz	w0, 40fe98 <wcrtomb@plt+0xd158>
  40fe34:	mov	w21, #0x0                   	// #0
  40fe38:	mov	w23, #0x0                   	// #0
  40fe3c:	mov	w24, #0x0                   	// #0
  40fe40:	cbz	w1, 410030 <wcrtomb@plt+0xd2f0>
  40fe44:	mov	x0, x22
  40fe48:	bl	402690 <strlen@plt>
  40fe4c:	add	x0, x0, #0x4
  40fe50:	bl	4125f8 <wcrtomb@plt+0xf8b8>
  40fe54:	mov	x20, x0
  40fe58:	mov	x1, x22
  40fe5c:	add	x0, x0, #0x3
  40fe60:	strb	w24, [x20]
  40fe64:	strb	w23, [x20, #1]
  40fe68:	strb	w21, [x20, #2]
  40fe6c:	bl	402b80 <strcpy@plt>
  40fe70:	mov	x0, x19
  40fe74:	ldr	x19, [x19, #40]
  40fe78:	bl	40b0e8 <wcrtomb@plt+0x83a8>
  40fe7c:	cbnz	x19, 40f878 <wcrtomb@plt+0xcb38>
  40fe80:	b	40f888 <wcrtomb@plt+0xcb48>
  40fe84:	ldrb	w1, [x24]
  40fe88:	cbnz	w1, 40f878 <wcrtomb@plt+0xcb38>
  40fe8c:	adrp	x22, 420000 <_obstack_memory_used@@Base+0xd3b0>
  40fe90:	add	x22, x22, #0x7d8
  40fe94:	nop
  40fe98:	ldr	w0, [sp, #136]
  40fe9c:	ldrb	w23, [x19, #32]
  40fea0:	ldrb	w21, [x19, #33]
  40fea4:	cbnz	w0, 40ff1c <wcrtomb@plt+0xd1dc>
  40fea8:	ldr	w0, [sp, #140]
  40feac:	cmp	w0, #0x0
  40feb0:	csinc	w24, w21, wzr, ne  // ne = any
  40feb4:	b	40fe40 <wcrtomb@plt+0xd100>
  40feb8:	mov	x0, x19
  40febc:	mov	x1, #0x2                   	// #2
  40fec0:	bl	40b200 <wcrtomb@plt+0x84c0>
  40fec4:	mov	x19, x0
  40fec8:	ldr	x22, [x25, #152]
  40fecc:	mov	w0, #0x1                   	// #1
  40fed0:	mov	w1, #0x1                   	// #1
  40fed4:	strb	w0, [x19, #32]
  40fed8:	str	w1, [sp, #136]
  40fedc:	add	x20, x23, #0x2
  40fee0:	cmp	x22, x20
  40fee4:	add	x23, x23, #0x1
  40fee8:	b.gt	40f778 <wcrtomb@plt+0xca38>
  40feec:	b	40f870 <wcrtomb@plt+0xcb30>
  40fef0:	sub	x1, x22, x2
  40fef4:	b	40f9c4 <wcrtomb@plt+0xcc84>
  40fef8:	add	w1, w20, #0x80
  40fefc:	mov	w0, w20
  40ff00:	cmp	w1, #0x17f
  40ff04:	b.hi	40ff14 <wcrtomb@plt+0xd1d4>  // b.pmore
  40ff08:	bl	402940 <__ctype_toupper_loc@plt>
  40ff0c:	ldr	x0, [x0]
  40ff10:	ldr	w0, [x0, w20, sxtw #2]
  40ff14:	and	w0, w0, #0xff
  40ff18:	b	40fcd0 <wcrtomb@plt+0xcf90>
  40ff1c:	mov	w24, #0x0                   	// #0
  40ff20:	cbz	w23, 40fe40 <wcrtomb@plt+0xd100>
  40ff24:	b	40fea8 <wcrtomb@plt+0xd168>
  40ff28:	mov	x0, x1
  40ff2c:	bl	402690 <strlen@plt>
  40ff30:	mov	x22, x0
  40ff34:	mov	x0, x20
  40ff38:	bl	402690 <strlen@plt>
  40ff3c:	add	x27, x22, x0
  40ff40:	mov	x24, x0
  40ff44:	mov	x0, x27
  40ff48:	bl	4125f8 <wcrtomb@plt+0xf8b8>
  40ff4c:	mov	x20, x0
  40ff50:	ldr	x1, [x21, #16]
  40ff54:	mov	x2, x22
  40ff58:	bl	402650 <memcpy@plt>
  40ff5c:	ldr	x1, [x19, #8]
  40ff60:	mov	x2, x24
  40ff64:	add	x0, x20, x22
  40ff68:	bl	402650 <memcpy@plt>
  40ff6c:	ldr	x0, [x21]
  40ff70:	mov	x2, x27
  40ff74:	mov	x1, x20
  40ff78:	bl	40b280 <wcrtomb@plt+0x8540>
  40ff7c:	str	x0, [x21]
  40ff80:	mov	x0, x20
  40ff84:	bl	402ae0 <free@plt>
  40ff88:	b	40f7b8 <wcrtomb@plt+0xca78>
  40ff8c:	ldr	x1, [x19, #8]
  40ff90:	ldr	x0, [x21, #8]
  40ff94:	bl	40b190 <wcrtomb@plt+0x8450>
  40ff98:	str	x0, [x21, #8]
  40ff9c:	b	40f7c4 <wcrtomb@plt+0xca84>
  40ffa0:	sub	x2, x22, #0x1
  40ffa4:	cmp	x2, x27
  40ffa8:	b.le	40fcb8 <wcrtomb@plt+0xcf78>
  40ffac:	add	x1, x24, #0x8
  40ffb0:	b	40ffc0 <wcrtomb@plt+0xd280>
  40ffb4:	add	x21, x21, #0x2
  40ffb8:	cmp	x2, x21
  40ffbc:	b.le	40ffe4 <wcrtomb@plt+0xd2a4>
  40ffc0:	cmp	x23, x21
  40ffc4:	b.eq	40ffd8 <wcrtomb@plt+0xd298>  // b.none
  40ffc8:	ldr	x0, [x24, x21, lsl #3]
  40ffcc:	sub	x0, x0, #0x1
  40ffd0:	cmp	x0, #0xfe
  40ffd4:	b.hi	40ffe4 <wcrtomb@plt+0xd2a4>  // b.pmore
  40ffd8:	ldr	x0, [x1, x21, lsl #3]
  40ffdc:	cmp	x0, #0x105
  40ffe0:	b.eq	40ffb4 <wcrtomb@plt+0xd274>  // b.none
  40ffe4:	sub	x1, x21, x23
  40ffe8:	asr	x1, x1, #1
  40ffec:	add	x1, x1, #0x1
  40fff0:	b	40fcb8 <wcrtomb@plt+0xcf78>
  40fff4:	mov	x0, #0x1                   	// #1
  40fff8:	mov	x20, x27
  40fffc:	mov	x2, x0
  410000:	b	40fd7c <wcrtomb@plt+0xd03c>
  410004:	mov	x20, #0x0                   	// #0
  410008:	b	40f890 <wcrtomb@plt+0xcb50>
  41000c:	adrp	x3, 421000 <_obstack_memory_used@@Base+0xe3b0>
  410010:	add	x3, x3, #0x6d8
  410014:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  410018:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xe3b0>
  41001c:	add	x3, x3, #0x290
  410020:	add	x1, x1, #0x438
  410024:	add	x0, x0, #0x560
  410028:	mov	w2, #0xff6                 	// #4086
  41002c:	bl	402ca0 <__assert_fail@plt>
  410030:	mov	x20, #0x0                   	// #0
  410034:	b	40f878 <wcrtomb@plt+0xcb38>
  410038:	adrp	x3, 421000 <_obstack_memory_used@@Base+0xe3b0>
  41003c:	add	x3, x3, #0x6d8
  410040:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  410044:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xe3b0>
  410048:	add	x3, x3, #0x290
  41004c:	add	x1, x1, #0x438
  410050:	add	x0, x0, #0x590
  410054:	mov	w2, #0x1039                	// #4153
  410058:	bl	402ca0 <__assert_fail@plt>
  41005c:	nop
  410060:	b	402ae0 <free@plt>
  410064:	nop
  410068:	mov	x0, #0x920                 	// #2336
  41006c:	b	4125f8 <wcrtomb@plt+0xf8b8>
  410070:	stp	x29, x30, [sp, #-112]!
  410074:	mov	x5, x2
  410078:	mov	x2, #0x410                 	// #1040
  41007c:	mov	x29, sp
  410080:	stp	x21, x22, [sp, #32]
  410084:	mov	x21, x1
  410088:	sub	x22, x0, x0, lsl #2
  41008c:	mov	w1, #0x0                   	// #0
  410090:	stp	x19, x20, [sp, #16]
  410094:	mov	w19, w3
  410098:	stp	x23, x24, [sp, #48]
  41009c:	mov	x23, x0
  4100a0:	sub	x22, x22, #0x214
  4100a4:	stp	x25, x26, [sp, #64]
  4100a8:	adrp	x25, 421000 <_obstack_memory_used@@Base+0xe3b0>
  4100ac:	add	x25, x25, #0x5a0
  4100b0:	stp	x27, x28, [sp, #80]
  4100b4:	add	x28, x0, #0x1cc
  4100b8:	mov	x24, #0x1                   	// #1
  4100bc:	str	x5, [sp, #104]
  4100c0:	bl	4028d0 <memset@plt>
  4100c4:	ldrb	w20, [x21]
  4100c8:	adrp	x2, 40e000 <wcrtomb@plt+0xb2c0>
  4100cc:	adrp	x0, 40e000 <wcrtomb@plt+0xb2c0>
  4100d0:	add	x2, x2, #0xd18
  4100d4:	cmp	w20, #0x0
  4100d8:	add	x0, x0, #0x810
  4100dc:	csel	x0, x0, x2, ne  // ne = any
  4100e0:	str	x0, [x23, #1040]
  4100e4:	mov	x1, x21
  4100e8:	mov	x2, #0x504                 	// #1284
  4100ec:	add	x0, x23, #0x418
  4100f0:	bl	402650 <memcpy@plt>
  4100f4:	ldr	x5, [sp, #104]
  4100f8:	tst	x19, #0x2
  4100fc:	ldrb	w21, [x23, #1050]
  410100:	eor	w0, w20, #0x1
  410104:	and	w19, w19, #0x1
  410108:	mov	x6, #0xffffffffffffffff    	// #-1
  41010c:	ubfx	w1, w5, #22, #1
  410110:	mov	w2, #0x1                   	// #1
  410114:	mov	w20, #0xa                   	// #10
  410118:	mov	x27, #0x0                   	// #0
  41011c:	csel	w20, wzr, w20, ne  // ne = any
  410120:	str	x6, [x23, #24]
  410124:	strb	w0, [x23, #192]
  410128:	str	x5, [x23, #448]
  41012c:	strb	w2, [x23, #456]
  410130:	strb	w1, [x23, #457]
  410134:	strb	w19, [x23, #458]
  410138:	strb	w20, [x23, #459]
  41013c:	nop
  410140:	cmp	w19, #0x0
  410144:	and	w0, w27, #0xff
  410148:	ccmp	w0, w20, #0x0, eq  // eq = none
  41014c:	mov	w26, w27
  410150:	b.eq	410200 <wcrtomb@plt+0xd4c0>  // b.none
  410154:	ldr	w0, [x22, x28, lsl #2]
  410158:	cmn	w0, #0x1
  41015c:	b.eq	4101dc <wcrtomb@plt+0xd49c>  // b.none
  410160:	bl	402ab0 <__ctype_b_loc@plt>
  410164:	ldr	x0, [x0]
  410168:	cmp	w27, #0x5f
  41016c:	ldrh	w0, [x0, x27, lsl #1]
  410170:	and	w0, w0, #0x8
  410174:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  410178:	b.eq	4101dc <wcrtomb@plt+0xd49c>  // b.none
  41017c:	lsr	w0, w27, #6
  410180:	mov	w1, #0x2                   	// #2
  410184:	strb	w1, [x28]
  410188:	lsl	x2, x24, x27
  41018c:	add	x0, x23, x0, lsl #3
  410190:	ldr	x5, [x0, #976]
  410194:	orr	x2, x5, x2
  410198:	str	x2, [x0, #976]
  41019c:	cbz	w21, 4101e8 <wcrtomb@plt+0xd4a8>
  4101a0:	and	w1, w26, #0xc0
  4101a4:	cmp	w1, #0x80
  4101a8:	cset	w0, ne  // ne = any
  4101ac:	strb	w0, [x28, #256]
  4101b0:	add	x27, x27, #0x1
  4101b4:	cmp	x27, #0x100
  4101b8:	add	x28, x28, #0x1
  4101bc:	b.ne	410140 <wcrtomb@plt+0xd400>  // b.any
  4101c0:	ldp	x19, x20, [sp, #16]
  4101c4:	ldp	x21, x22, [sp, #32]
  4101c8:	ldp	x23, x24, [sp, #48]
  4101cc:	ldp	x25, x26, [sp, #64]
  4101d0:	ldp	x27, x28, [sp, #80]
  4101d4:	ldp	x29, x30, [sp], #112
  4101d8:	ret
  4101dc:	mov	w0, #0x1                   	// #1
  4101e0:	strb	w0, [x28]
  4101e4:	cbnz	w21, 4101a0 <wcrtomb@plt+0xd460>
  4101e8:	mov	w1, w26
  4101ec:	mov	x0, x25
  4101f0:	bl	402b20 <strchr@plt>
  4101f4:	cmp	x0, #0x0
  4101f8:	cset	w0, ne  // ne = any
  4101fc:	b	4101ac <wcrtomb@plt+0xd46c>
  410200:	lsr	w0, w27, #6
  410204:	mov	w1, #0x4                   	// #4
  410208:	strb	w1, [x28]
  41020c:	lsl	x2, x24, x27
  410210:	add	x0, x23, x0, lsl #3
  410214:	ldr	x5, [x0, #1008]
  410218:	orr	x2, x5, x2
  41021c:	str	x2, [x0, #1008]
  410220:	b	41019c <wcrtomb@plt+0xd45c>
  410224:	nop
  410228:	stp	x29, x30, [sp, #-32]!
  41022c:	mov	x2, #0x1c0                 	// #448
  410230:	mov	x29, sp
  410234:	stp	x19, x20, [sp, #16]
  410238:	mov	x20, x1
  41023c:	mov	x19, x0
  410240:	mov	w1, #0x0                   	// #0
  410244:	bl	4028d0 <memset@plt>
  410248:	ldrb	w2, [x20, #192]
  41024c:	mov	x0, #0xffffffffffffffff    	// #-1
  410250:	str	x0, [x19, #24]
  410254:	add	x1, x20, #0x1c0
  410258:	strb	w2, [x19, #192]
  41025c:	add	x0, x19, #0x1c0
  410260:	mov	x2, #0x250                 	// #592
  410264:	bl	402650 <memcpy@plt>
  410268:	ldr	x0, [x20, #1040]
  41026c:	str	x0, [x19, #1040]
  410270:	add	x1, x20, #0x418
  410274:	add	x0, x19, #0x418
  410278:	mov	x2, #0x504                 	// #1284
  41027c:	bl	402650 <memcpy@plt>
  410280:	ldp	x19, x20, [sp, #16]
  410284:	ldp	x29, x30, [sp], #32
  410288:	ret
  41028c:	nop
  410290:	stp	x29, x30, [sp, #-112]!
  410294:	mov	x29, sp
  410298:	stp	x25, x26, [sp, #64]
  41029c:	mov	x26, x0
  4102a0:	stp	x19, x20, [sp, #16]
  4102a4:	add	x20, sp, #0x68
  4102a8:	stp	x21, x22, [sp, #32]
  4102ac:	add	x21, sp, #0x60
  4102b0:	stp	x23, x24, [sp, #48]
  4102b4:	bl	402b00 <__ctype_get_mb_cur_max@plt>
  4102b8:	cmp	x0, #0x1
  4102bc:	cset	w1, hi  // hi = pmore
  4102c0:	strb	w1, [x26]
  4102c4:	b.hi	410304 <wcrtomb@plt+0xd5c4>  // b.pmore
  4102c8:	mov	w19, #0x0                   	// #0
  4102cc:	b	4102d8 <wcrtomb@plt+0xd598>
  4102d0:	cmp	w19, #0xff
  4102d4:	b.eq	4103b4 <wcrtomb@plt+0xd674>  // b.none
  4102d8:	and	w2, w19, #0xff
  4102dc:	mov	x1, x21
  4102e0:	add	w3, w2, #0x1
  4102e4:	add	w19, w19, #0x1
  4102e8:	mov	x0, x20
  4102ec:	strb	w3, [sp, #96]
  4102f0:	strb	wzr, [sp, #97]
  4102f4:	strb	w2, [sp, #104]
  4102f8:	strb	wzr, [sp, #105]
  4102fc:	bl	402c40 <strcoll@plt>
  410300:	tbnz	w0, #31, 4102d0 <wcrtomb@plt+0xd590>
  410304:	mov	w0, #0x0                   	// #0
  410308:	strb	w0, [x26, #1]
  41030c:	mov	x3, x20
  410310:	mov	x0, x21
  410314:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  410318:	mov	x2, #0x2                   	// #2
  41031c:	add	x1, x1, #0x970
  410320:	str	xzr, [sp, #104]
  410324:	bl	412878 <wcrtomb@plt+0xfb38>
  410328:	mov	w1, #0x0                   	// #0
  41032c:	cmp	x0, #0x2
  410330:	b.ne	410340 <wcrtomb@plt+0xd600>  // b.any
  410334:	ldr	w0, [sp, #96]
  410338:	cmp	w0, #0x100
  41033c:	cset	w1, eq  // eq = none
  410340:	add	x25, x26, #0x3
  410344:	add	x24, x26, #0x104
  410348:	mov	x19, #0x0                   	// #0
  41034c:	mov	x23, #0x1                   	// #1
  410350:	mov	w22, #0xffffffff            	// #-1
  410354:	strb	w1, [x26, #2]
  410358:	add	x1, sp, #0x5f
  41035c:	mov	x2, #0x1                   	// #1
  410360:	mov	x3, x20
  410364:	mov	x0, x21
  410368:	strb	w19, [sp, #95]
  41036c:	str	xzr, [sp, #104]
  410370:	bl	412878 <wcrtomb@plt+0xfb38>
  410374:	ldr	w1, [sp, #96]
  410378:	cmp	x0, #0x0
  41037c:	csel	x2, x0, x23, ne  // ne = any
  410380:	cmp	x0, #0x2
  410384:	strb	w2, [x25, x19]
  410388:	csel	w1, w1, w22, cc  // cc = lo, ul, last
  41038c:	str	w1, [x24, x19, lsl #2]
  410390:	add	x19, x19, #0x1
  410394:	cmp	x19, #0x100
  410398:	b.ne	410358 <wcrtomb@plt+0xd618>  // b.any
  41039c:	ldp	x19, x20, [sp, #16]
  4103a0:	ldp	x21, x22, [sp, #32]
  4103a4:	ldp	x23, x24, [sp, #48]
  4103a8:	ldp	x25, x26, [sp, #64]
  4103ac:	ldp	x29, x30, [sp], #112
  4103b0:	ret
  4103b4:	mov	w0, #0x1                   	// #1
  4103b8:	b	410308 <wcrtomb@plt+0xd5c8>
  4103bc:	nop
  4103c0:	stp	x29, x30, [sp, #-80]!
  4103c4:	mov	x29, sp
  4103c8:	stp	x19, x20, [sp, #16]
  4103cc:	stp	x21, x22, [sp, #32]
  4103d0:	stp	x23, x24, [sp, #48]
  4103d4:	mov	x24, x1
  4103d8:	stp	x25, x26, [sp, #64]
  4103dc:	mov	w25, w0
  4103e0:	bl	402c70 <towupper@plt>
  4103e4:	mov	w21, w0
  4103e8:	bl	402cf0 <towlower@plt>
  4103ec:	cmp	w25, w21
  4103f0:	mov	w22, w0
  4103f4:	mov	w26, #0x0                   	// #0
  4103f8:	b.eq	410404 <wcrtomb@plt+0xd6c4>  // b.none
  4103fc:	mov	w26, #0x1                   	// #1
  410400:	str	w21, [x24]
  410404:	cmp	w21, w22
  410408:	ccmp	w25, w22, #0x4, ne  // ne = any
  41040c:	b.eq	410420 <wcrtomb@plt+0xd6e0>  // b.none
  410410:	mov	w0, w22
  410414:	bl	402c70 <towupper@plt>
  410418:	cmp	w0, w21
  41041c:	b.eq	410490 <wcrtomb@plt+0xd750>  // b.none
  410420:	adrp	x23, 421000 <_obstack_memory_used@@Base+0xe3b0>
  410424:	add	x23, x23, #0x978
  410428:	add	x20, x23, #0x2
  41042c:	mov	w19, #0xb5                  	// #181
  410430:	add	x23, x23, #0x26
  410434:	b	410444 <wcrtomb@plt+0xd704>
  410438:	cmp	x23, x20
  41043c:	b.eq	410474 <wcrtomb@plt+0xd734>  // b.none
  410440:	ldrsh	w19, [x20], #2
  410444:	cmp	w22, w19
  410448:	ccmp	w21, w19, #0x4, ne  // ne = any
  41044c:	ccmp	w25, w19, #0x4, ne  // ne = any
  410450:	b.eq	410438 <wcrtomb@plt+0xd6f8>  // b.none
  410454:	mov	w0, w19
  410458:	bl	402c70 <towupper@plt>
  41045c:	cmp	w0, w21
  410460:	b.ne	410438 <wcrtomb@plt+0xd6f8>  // b.any
  410464:	str	w19, [x24, w26, sxtw #2]
  410468:	cmp	x23, x20
  41046c:	add	w26, w26, #0x1
  410470:	b.ne	410440 <wcrtomb@plt+0xd700>  // b.any
  410474:	mov	w0, w26
  410478:	ldp	x19, x20, [sp, #16]
  41047c:	ldp	x21, x22, [sp, #32]
  410480:	ldp	x23, x24, [sp, #48]
  410484:	ldp	x25, x26, [sp, #64]
  410488:	ldp	x29, x30, [sp], #80
  41048c:	ret
  410490:	str	w22, [x24, w26, sxtw #2]
  410494:	add	w26, w26, #0x1
  410498:	b	410420 <wcrtomb@plt+0xd6e0>
  41049c:	nop
  4104a0:	stp	x29, x30, [sp, #-16]!
  4104a4:	mov	w0, #0xe                   	// #14
  4104a8:	mov	x29, sp
  4104ac:	bl	4027c0 <nl_langinfo@plt>
  4104b0:	cbz	x0, 4104d0 <wcrtomb@plt+0xd790>
  4104b4:	ldrb	w2, [x0]
  4104b8:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  4104bc:	add	x1, x1, #0x9a0
  4104c0:	cmp	w2, #0x0
  4104c4:	csel	x0, x1, x0, eq  // eq = none
  4104c8:	ldp	x29, x30, [sp], #16
  4104cc:	ret
  4104d0:	ldp	x29, x30, [sp], #16
  4104d4:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xe3b0>
  4104d8:	add	x0, x0, #0x9a0
  4104dc:	ret
  4104e0:	stp	x29, x30, [sp, #-48]!
  4104e4:	mov	x29, sp
  4104e8:	stp	x19, x20, [sp, #16]
  4104ec:	cbz	x0, 4105c4 <wcrtomb@plt+0xd884>
  4104f0:	mov	x19, x0
  4104f4:	mov	w1, #0x2f                  	// #47
  4104f8:	bl	4029b0 <strrchr@plt>
  4104fc:	mov	x20, x0
  410500:	cbz	x0, 410564 <wcrtomb@plt+0xd824>
  410504:	str	x21, [sp, #32]
  410508:	add	x21, x0, #0x1
  41050c:	sub	x0, x21, x19
  410510:	cmp	x0, #0x6
  410514:	b.le	410580 <wcrtomb@plt+0xd840>
  410518:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  41051c:	sub	x0, x20, #0x6
  410520:	add	x1, x1, #0x9e0
  410524:	mov	x2, #0x7                   	// #7
  410528:	bl	402860 <strncmp@plt>
  41052c:	cbnz	w0, 410580 <wcrtomb@plt+0xd840>
  410530:	ldrb	w0, [x20, #1]
  410534:	cmp	w0, #0x6c
  410538:	b.ne	4105a0 <wcrtomb@plt+0xd860>  // b.any
  41053c:	ldrb	w0, [x21, #1]
  410540:	cmp	w0, #0x74
  410544:	b.ne	4105a0 <wcrtomb@plt+0xd860>  // b.any
  410548:	ldrb	w0, [x21, #2]
  41054c:	cmp	w0, #0x2d
  410550:	b.ne	4105a0 <wcrtomb@plt+0xd860>  // b.any
  410554:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  410558:	add	x19, x20, #0x4
  41055c:	ldr	x21, [sp, #32]
  410560:	str	x19, [x0, #1304]
  410564:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  410568:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  41056c:	str	x19, [x1, #1936]
  410570:	str	x19, [x0, #1256]
  410574:	ldp	x19, x20, [sp, #16]
  410578:	ldp	x29, x30, [sp], #48
  41057c:	ret
  410580:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  410584:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  410588:	ldr	x21, [sp, #32]
  41058c:	str	x19, [x1, #1936]
  410590:	str	x19, [x0, #1256]
  410594:	ldp	x19, x20, [sp, #16]
  410598:	ldp	x29, x30, [sp], #48
  41059c:	ret
  4105a0:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  4105a4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  4105a8:	mov	x19, x21
  4105ac:	str	x19, [x1, #1936]
  4105b0:	str	x19, [x0, #1256]
  4105b4:	ldp	x19, x20, [sp, #16]
  4105b8:	ldr	x21, [sp, #32]
  4105bc:	ldp	x29, x30, [sp], #48
  4105c0:	ret
  4105c4:	adrp	x3, 438000 <_obstack_memory_used@@Base+0x253b0>
  4105c8:	mov	x2, #0x37                  	// #55
  4105cc:	mov	x1, #0x1                   	// #1
  4105d0:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xe3b0>
  4105d4:	ldr	x3, [x3, #1264]
  4105d8:	add	x0, x0, #0x9a8
  4105dc:	str	x21, [sp, #32]
  4105e0:	bl	402b50 <fwrite@plt>
  4105e4:	bl	4029e0 <abort@plt>
  4105e8:	stp	x29, x30, [sp, #-64]!
  4105ec:	mov	x29, sp
  4105f0:	stp	x19, x20, [sp, #16]
  4105f4:	mov	x19, x2
  4105f8:	mov	w20, w3
  4105fc:	mov	w2, w4
  410600:	add	x3, sp, #0x20
  410604:	bl	41f650 <_obstack_memory_used@@Base+0xca00>
  410608:	cbnz	w0, 410638 <wcrtomb@plt+0xd8f8>
  41060c:	mov	x1, x19
  410610:	mov	w2, w20
  410614:	add	x0, sp, #0x20
  410618:	bl	41f858 <_obstack_memory_used@@Base+0xcc08>
  41061c:	mov	w19, w0
  410620:	add	x0, sp, #0x20
  410624:	bl	41f610 <_obstack_memory_used@@Base+0xc9c0>
  410628:	mov	w0, w19
  41062c:	ldp	x19, x20, [sp, #16]
  410630:	ldp	x29, x30, [sp], #64
  410634:	ret
  410638:	mov	w19, #0xfffffffe            	// #-2
  41063c:	b	410628 <wcrtomb@plt+0xd8e8>
  410640:	stp	xzr, xzr, [x8]
  410644:	cmp	w0, #0xa
  410648:	stp	xzr, xzr, [x8, #16]
  41064c:	stp	xzr, xzr, [x8, #32]
  410650:	str	xzr, [x8, #48]
  410654:	b.eq	410660 <wcrtomb@plt+0xd920>  // b.none
  410658:	str	w0, [x8]
  41065c:	ret
  410660:	stp	x29, x30, [sp, #-16]!
  410664:	mov	x29, sp
  410668:	bl	4029e0 <abort@plt>
  41066c:	nop
  410670:	stp	x29, x30, [sp, #-48]!
  410674:	mov	w2, #0x5                   	// #5
  410678:	mov	x29, sp
  41067c:	stp	x19, x20, [sp, #16]
  410680:	mov	x20, x0
  410684:	str	x21, [sp, #32]
  410688:	mov	w21, w1
  41068c:	mov	x1, x0
  410690:	mov	x0, #0x0                   	// #0
  410694:	bl	402c20 <dcgettext@plt>
  410698:	mov	x19, x0
  41069c:	cmp	x20, x0
  4106a0:	b.eq	4106b8 <wcrtomb@plt+0xd978>  // b.none
  4106a4:	mov	x0, x19
  4106a8:	ldp	x19, x20, [sp, #16]
  4106ac:	ldr	x21, [sp, #32]
  4106b0:	ldp	x29, x30, [sp], #48
  4106b4:	ret
  4106b8:	bl	4104a0 <wcrtomb@plt+0xd760>
  4106bc:	ldrb	w1, [x0]
  4106c0:	and	w1, w1, #0xffffffdf
  4106c4:	cmp	w1, #0x55
  4106c8:	b.ne	41072c <wcrtomb@plt+0xd9ec>  // b.any
  4106cc:	ldrb	w1, [x0, #1]
  4106d0:	and	w1, w1, #0xffffffdf
  4106d4:	cmp	w1, #0x54
  4106d8:	b.ne	4107a8 <wcrtomb@plt+0xda68>  // b.any
  4106dc:	ldrb	w1, [x0, #2]
  4106e0:	and	w1, w1, #0xffffffdf
  4106e4:	cmp	w1, #0x46
  4106e8:	b.ne	4107a8 <wcrtomb@plt+0xda68>  // b.any
  4106ec:	ldrb	w1, [x0, #3]
  4106f0:	cmp	w1, #0x2d
  4106f4:	b.ne	4107a8 <wcrtomb@plt+0xda68>  // b.any
  4106f8:	ldrb	w1, [x0, #4]
  4106fc:	cmp	w1, #0x38
  410700:	b.ne	4107a8 <wcrtomb@plt+0xda68>  // b.any
  410704:	ldrb	w0, [x0, #5]
  410708:	cbnz	w0, 4107a8 <wcrtomb@plt+0xda68>
  41070c:	ldrb	w1, [x19]
  410710:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xe3b0>
  410714:	adrp	x19, 421000 <_obstack_memory_used@@Base+0xe3b0>
  410718:	add	x0, x0, #0x9f0
  41071c:	cmp	w1, #0x60
  410720:	add	x19, x19, #0xa08
  410724:	csel	x19, x19, x0, eq  // eq = none
  410728:	b	4106a4 <wcrtomb@plt+0xd964>
  41072c:	cmp	w1, #0x47
  410730:	b.ne	4107a8 <wcrtomb@plt+0xda68>  // b.any
  410734:	ldrb	w1, [x0, #1]
  410738:	and	w1, w1, #0xffffffdf
  41073c:	cmp	w1, #0x42
  410740:	b.ne	4107a8 <wcrtomb@plt+0xda68>  // b.any
  410744:	ldrb	w1, [x0, #2]
  410748:	cmp	w1, #0x31
  41074c:	b.ne	4107a8 <wcrtomb@plt+0xda68>  // b.any
  410750:	ldrb	w1, [x0, #3]
  410754:	cmp	w1, #0x38
  410758:	b.ne	4107a8 <wcrtomb@plt+0xda68>  // b.any
  41075c:	ldrb	w1, [x0, #4]
  410760:	cmp	w1, #0x30
  410764:	b.ne	4107a8 <wcrtomb@plt+0xda68>  // b.any
  410768:	ldrb	w1, [x0, #5]
  41076c:	cmp	w1, #0x33
  410770:	b.ne	4107a8 <wcrtomb@plt+0xda68>  // b.any
  410774:	ldrb	w1, [x0, #6]
  410778:	cmp	w1, #0x30
  41077c:	b.ne	4107a8 <wcrtomb@plt+0xda68>  // b.any
  410780:	ldrb	w0, [x0, #7]
  410784:	cbnz	w0, 4107a8 <wcrtomb@plt+0xda68>
  410788:	ldrb	w1, [x19]
  41078c:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xe3b0>
  410790:	adrp	x19, 421000 <_obstack_memory_used@@Base+0xe3b0>
  410794:	add	x0, x0, #0x9f8
  410798:	cmp	w1, #0x60
  41079c:	add	x19, x19, #0xa00
  4107a0:	csel	x19, x19, x0, eq  // eq = none
  4107a4:	b	4106a4 <wcrtomb@plt+0xd964>
  4107a8:	cmp	w21, #0x9
  4107ac:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  4107b0:	adrp	x19, 421000 <_obstack_memory_used@@Base+0xe3b0>
  4107b4:	add	x0, x0, #0xd00
  4107b8:	add	x19, x19, #0x9e8
  4107bc:	csel	x19, x19, x0, eq  // eq = none
  4107c0:	mov	x0, x19
  4107c4:	ldp	x19, x20, [sp, #16]
  4107c8:	ldr	x21, [sp, #32]
  4107cc:	ldp	x29, x30, [sp], #48
  4107d0:	ret
  4107d4:	nop
  4107d8:	sub	sp, sp, #0xf0
  4107dc:	stp	x29, x30, [sp, #16]
  4107e0:	add	x29, sp, #0x10
  4107e4:	stp	x19, x20, [sp, #32]
  4107e8:	mov	w19, w5
  4107ec:	and	w20, w5, #0x2
  4107f0:	stp	x21, x22, [sp, #48]
  4107f4:	stp	x23, x24, [sp, #64]
  4107f8:	mov	x23, x1
  4107fc:	stp	x25, x26, [sp, #80]
  410800:	mov	w26, w4
  410804:	mov	x25, x3
  410808:	stp	x27, x28, [sp, #96]
  41080c:	mov	x28, x0
  410810:	mov	x27, x2
  410814:	str	x6, [sp, #112]
  410818:	str	w5, [sp, #200]
  41081c:	str	x7, [sp, #208]
  410820:	bl	402b00 <__ctype_get_mb_cur_max@plt>
  410824:	mov	x1, x19
  410828:	str	x0, [sp, #192]
  41082c:	cmp	w26, #0x4
  410830:	ubfx	x11, x1, #1, #1
  410834:	ldr	x6, [sp, #112]
  410838:	b.eq	4114d0 <wcrtomb@plt+0xe790>  // b.none
  41083c:	b.ls	4108a4 <wcrtomb@plt+0xdb64>  // b.plast
  410840:	cmp	w26, #0x7
  410844:	b.eq	411360 <wcrtomb@plt+0xe620>  // b.none
  410848:	b.ls	410fcc <wcrtomb@plt+0xe28c>  // b.plast
  41084c:	sub	w0, w26, #0x8
  410850:	cmp	w0, #0x2
  410854:	b.hi	4117ec <wcrtomb@plt+0xeaac>  // b.pmore
  410858:	cmp	w26, #0xa
  41085c:	b.ne	4113d4 <wcrtomb@plt+0xe694>  // b.any
  410860:	mov	x19, #0x0                   	// #0
  410864:	cbz	w20, 41164c <wcrtomb@plt+0xe90c>
  410868:	ldr	x0, [sp, #240]
  41086c:	str	w11, [sp, #136]
  410870:	str	x6, [sp, #144]
  410874:	bl	402690 <strlen@plt>
  410878:	mov	x12, x0
  41087c:	ldr	x0, [sp, #240]
  410880:	mov	w10, #0x1                   	// #1
  410884:	ldr	w11, [sp, #136]
  410888:	mov	w5, w10
  41088c:	mov	w7, #0x0                   	// #0
  410890:	str	x0, [sp, #112]
  410894:	str	wzr, [sp, #120]
  410898:	str	xzr, [sp, #128]
  41089c:	ldr	x6, [sp, #144]
  4108a0:	b	4108e8 <wcrtomb@plt+0xdba8>
  4108a4:	cmp	w26, #0x1
  4108a8:	b.eq	41132c <wcrtomb@plt+0xe5ec>  // b.none
  4108ac:	b.ls	410fa0 <wcrtomb@plt+0xe260>  // b.plast
  4108b0:	cmp	w26, #0x2
  4108b4:	b.eq	4114f4 <wcrtomb@plt+0xe7b4>  // b.none
  4108b8:	mov	w10, #0x1                   	// #1
  4108bc:	adrp	x26, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  4108c0:	mov	w11, w10
  4108c4:	mov	w5, w10
  4108c8:	add	x0, x26, #0xd00
  4108cc:	mov	w7, #0x0                   	// #0
  4108d0:	mov	x12, #0x1                   	// #1
  4108d4:	mov	x19, #0x0                   	// #0
  4108d8:	mov	w26, #0x2                   	// #2
  4108dc:	str	x0, [sp, #112]
  4108e0:	str	wzr, [sp, #120]
  4108e4:	str	xzr, [sp, #128]
  4108e8:	mov	w22, w5
  4108ec:	mov	w24, w7
  4108f0:	mov	x20, #0x0                   	// #0
  4108f4:	nop
  4108f8:	cmp	x25, x20
  4108fc:	cset	w21, ne  // ne = any
  410900:	cmn	x25, #0x1
  410904:	b.eq	4109d4 <wcrtomb@plt+0xdc94>  // b.none
  410908:	cbz	w21, 4109e4 <wcrtomb@plt+0xdca4>
  41090c:	cmp	w26, #0x2
  410910:	add	x3, x27, x20
  410914:	cset	w5, ne  // ne = any
  410918:	ands	w5, w22, w5
  41091c:	b.eq	410eec <wcrtomb@plt+0xe1ac>  // b.none
  410920:	cbz	x12, 410be0 <wcrtomb@plt+0xdea0>
  410924:	cmp	x12, #0x1
  410928:	add	x1, x20, x12
  41092c:	ccmn	x25, #0x1, #0x0, hi  // hi = pmore
  410930:	b.ne	410968 <wcrtomb@plt+0xdc28>  // b.any
  410934:	mov	x0, x27
  410938:	str	x1, [sp, #136]
  41093c:	str	w5, [sp, #144]
  410940:	stp	x3, x12, [sp, #152]
  410944:	stp	w11, w10, [sp, #172]
  410948:	str	x6, [sp, #184]
  41094c:	bl	402690 <strlen@plt>
  410950:	ldp	x3, x12, [sp, #152]
  410954:	mov	x25, x0
  410958:	ldr	w5, [sp, #144]
  41095c:	ldp	w11, w10, [sp, #172]
  410960:	ldr	x1, [sp, #136]
  410964:	ldr	x6, [sp, #184]
  410968:	cmp	x1, x25
  41096c:	b.hi	410be0 <wcrtomb@plt+0xdea0>  // b.pmore
  410970:	ldr	x1, [sp, #112]
  410974:	mov	x2, x12
  410978:	mov	x0, x3
  41097c:	stp	x3, x12, [sp, #136]
  410980:	str	w5, [sp, #152]
  410984:	str	w11, [sp, #160]
  410988:	str	w10, [sp, #172]
  41098c:	str	x6, [sp, #176]
  410990:	bl	402a60 <memcmp@plt>
  410994:	ldr	w5, [sp, #152]
  410998:	ldr	w11, [sp, #160]
  41099c:	ldr	w10, [sp, #172]
  4109a0:	ldp	x3, x12, [sp, #136]
  4109a4:	ldr	x6, [sp, #176]
  4109a8:	cbnz	w0, 410be0 <wcrtomb@plt+0xdea0>
  4109ac:	cbnz	w11, 410cd8 <wcrtomb@plt+0xdf98>
  4109b0:	ldrb	w4, [x3]
  4109b4:	cmp	w4, #0x7e
  4109b8:	b.hi	410bf0 <wcrtomb@plt+0xdeb0>  // b.pmore
  4109bc:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xe3b0>
  4109c0:	add	x0, x0, #0xa80
  4109c4:	ldrh	w0, [x0, w4, uxtw #1]
  4109c8:	adr	x1, 4109d4 <wcrtomb@plt+0xdc94>
  4109cc:	add	x0, x1, w0, sxth #2
  4109d0:	br	x0
  4109d4:	ldrb	w0, [x27, x20]
  4109d8:	cmp	w0, #0x0
  4109dc:	cset	w21, ne  // ne = any
  4109e0:	cbnz	w21, 41090c <wcrtomb@plt+0xdbcc>
  4109e4:	cmp	w26, #0x2
  4109e8:	mov	w5, w22
  4109ec:	cset	w0, eq  // eq = none
  4109f0:	mov	w7, w24
  4109f4:	cmp	w0, #0x0
  4109f8:	ccmp	w11, #0x0, #0x4, ne  // ne = any
  4109fc:	ccmp	x19, #0x0, #0x0, ne  // ne = any
  410a00:	b.eq	411794 <wcrtomb@plt+0xea54>  // b.none
  410a04:	eor	w11, w11, #0x1
  410a08:	ands	w0, w0, w11
  410a0c:	b.eq	4116f4 <wcrtomb@plt+0xe9b4>  // b.none
  410a10:	ldr	w1, [sp, #120]
  410a14:	cbz	w1, 4116f8 <wcrtomb@plt+0xe9b8>
  410a18:	cbnz	w10, 411750 <wcrtomb@plt+0xea10>
  410a1c:	ldr	x2, [sp, #128]
  410a20:	cmp	x23, #0x0
  410a24:	cset	w0, eq  // eq = none
  410a28:	cmp	x2, #0x0
  410a2c:	mov	x1, x2
  410a30:	csel	w0, w0, wzr, ne  // ne = any
  410a34:	cbz	w0, 411780 <wcrtomb@plt+0xea40>
  410a38:	adrp	x26, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  410a3c:	mov	x12, #0x1                   	// #1
  410a40:	mov	w11, #0x0                   	// #0
  410a44:	mov	x19, x12
  410a48:	str	w0, [sp, #120]
  410a4c:	mov	w0, #0x27                  	// #39
  410a50:	strb	w0, [x28]
  410a54:	ldr	x23, [sp, #128]
  410a58:	str	x1, [sp, #128]
  410a5c:	add	x1, x26, #0xd00
  410a60:	mov	w26, #0x2                   	// #2
  410a64:	str	x1, [sp, #112]
  410a68:	b	4108e8 <wcrtomb@plt+0xdba8>
  410a6c:	mov	w0, w5
  410a70:	mov	w21, w5
  410a74:	mov	w5, w0
  410a78:	mov	w1, #0x0                   	// #0
  410a7c:	nop
  410a80:	cbz	x6, 410b98 <wcrtomb@plt+0xde58>
  410a84:	ubfx	x0, x4, #5, #8
  410a88:	ldr	w0, [x6, x0, lsl #2]
  410a8c:	lsr	w0, w0, w4
  410a90:	tbz	w0, #0, 410b98 <wcrtomb@plt+0xde58>
  410a94:	cmp	w26, #0x2
  410a98:	cset	w0, eq  // eq = none
  410a9c:	cbnz	w11, 410e18 <wcrtomb@plt+0xe0d8>
  410aa0:	eor	w1, w24, #0x1
  410aa4:	ands	w0, w0, w1
  410aa8:	b.eq	410aec <wcrtomb@plt+0xddac>  // b.none
  410aac:	cmp	x23, x19
  410ab0:	b.ls	410abc <wcrtomb@plt+0xdd7c>  // b.plast
  410ab4:	mov	w1, #0x27                  	// #39
  410ab8:	strb	w1, [x28, x19]
  410abc:	add	x1, x19, #0x1
  410ac0:	cmp	x23, x1
  410ac4:	b.ls	410ad0 <wcrtomb@plt+0xdd90>  // b.plast
  410ac8:	mov	w2, #0x24                  	// #36
  410acc:	strb	w2, [x28, x1]
  410ad0:	add	x1, x19, #0x2
  410ad4:	cmp	x23, x1
  410ad8:	b.ls	410ae4 <wcrtomb@plt+0xdda4>  // b.plast
  410adc:	mov	w2, #0x27                  	// #39
  410ae0:	strb	w2, [x28, x1]
  410ae4:	add	x19, x19, #0x3
  410ae8:	mov	w24, w0
  410aec:	cmp	x19, x23
  410af0:	b.cs	410afc <wcrtomb@plt+0xddbc>  // b.hs, b.nlast
  410af4:	mov	w0, #0x5c                  	// #92
  410af8:	strb	w0, [x28, x19]
  410afc:	add	x19, x19, #0x1
  410b00:	add	x20, x20, #0x1
  410b04:	cmp	x19, x23
  410b08:	b.cs	410b10 <wcrtomb@plt+0xddd0>  // b.hs, b.nlast
  410b0c:	strb	w4, [x28, x19]
  410b10:	cmp	w21, #0x0
  410b14:	add	x19, x19, #0x1
  410b18:	csel	w10, w10, wzr, ne  // ne = any
  410b1c:	b	4108f8 <wcrtomb@plt+0xdbb8>
  410b20:	cbnz	w11, 41173c <wcrtomb@plt+0xe9fc>
  410b24:	ldr	x1, [sp, #128]
  410b28:	cmp	x23, #0x0
  410b2c:	mov	x0, #0x0                   	// #0
  410b30:	ccmp	x1, #0x0, #0x0, ne  // ne = any
  410b34:	b.eq	410b78 <wcrtomb@plt+0xde38>  // b.none
  410b38:	cmp	x23, x19
  410b3c:	b.ls	410b48 <wcrtomb@plt+0xde08>  // b.plast
  410b40:	mov	w0, #0x27                  	// #39
  410b44:	strb	w0, [x28, x19]
  410b48:	add	x0, x19, #0x1
  410b4c:	cmp	x23, x0
  410b50:	b.ls	410b5c <wcrtomb@plt+0xde1c>  // b.plast
  410b54:	mov	w1, #0x5c                  	// #92
  410b58:	strb	w1, [x28, x0]
  410b5c:	add	x1, x19, #0x2
  410b60:	mov	x0, x23
  410b64:	cmp	x23, x1
  410b68:	b.ls	4117cc <wcrtomb@plt+0xea8c>  // b.plast
  410b6c:	ldr	x23, [sp, #128]
  410b70:	mov	w2, #0x27                  	// #39
  410b74:	strb	w2, [x28, x1]
  410b78:	add	x19, x19, #0x3
  410b7c:	str	x23, [sp, #128]
  410b80:	mov	x23, x0
  410b84:	mov	w1, #0x0                   	// #0
  410b88:	mov	w24, #0x0                   	// #0
  410b8c:	mov	w4, #0x27                  	// #39
  410b90:	str	w21, [sp, #120]
  410b94:	nop
  410b98:	cbnz	w5, 410a94 <wcrtomb@plt+0xdd54>
  410b9c:	eor	w1, w1, #0x1
  410ba0:	add	x20, x20, #0x1
  410ba4:	and	w1, w24, w1
  410ba8:	and	w1, w1, #0xff
  410bac:	cbz	w1, 410b04 <wcrtomb@plt+0xddc4>
  410bb0:	cmp	x23, x19
  410bb4:	b.ls	410bc0 <wcrtomb@plt+0xde80>  // b.plast
  410bb8:	mov	w0, #0x27                  	// #39
  410bbc:	strb	w0, [x28, x19]
  410bc0:	add	x0, x19, #0x1
  410bc4:	cmp	x23, x0
  410bc8:	b.ls	410bd4 <wcrtomb@plt+0xde94>  // b.plast
  410bcc:	mov	w1, #0x27                  	// #39
  410bd0:	strb	w1, [x28, x0]
  410bd4:	add	x19, x19, #0x2
  410bd8:	mov	w24, #0x0                   	// #0
  410bdc:	b	410b04 <wcrtomb@plt+0xddc4>
  410be0:	ldrb	w4, [x3]
  410be4:	cmp	w4, #0x7e
  410be8:	b.ls	410f74 <wcrtomb@plt+0xe234>  // b.plast
  410bec:	mov	w5, #0x0                   	// #0
  410bf0:	ldr	x0, [sp, #192]
  410bf4:	cmp	x0, #0x1
  410bf8:	b.ne	4110a0 <wcrtomb@plt+0xe360>  // b.any
  410bfc:	str	w4, [sp, #136]
  410c00:	str	w5, [sp, #144]
  410c04:	str	x12, [sp, #152]
  410c08:	str	w11, [sp, #160]
  410c0c:	str	w10, [sp, #172]
  410c10:	str	x6, [sp, #176]
  410c14:	bl	402ab0 <__ctype_b_loc@plt>
  410c18:	ldr	w4, [sp, #136]
  410c1c:	ldr	x0, [x0]
  410c20:	ldr	w5, [sp, #144]
  410c24:	ldr	w11, [sp, #160]
  410c28:	ldrh	w21, [x0, w4, uxtw #1]
  410c2c:	ldr	w10, [sp, #172]
  410c30:	ands	w0, w21, #0x4000
  410c34:	cset	w2, eq  // eq = none
  410c38:	ubfx	x21, x21, #14, #1
  410c3c:	ldr	x12, [sp, #152]
  410c40:	and	w2, w22, w2
  410c44:	ldr	x6, [sp, #176]
  410c48:	ldr	x8, [sp, #192]
  410c4c:	cbnz	w2, 4114b4 <wcrtomb@plt+0xe774>
  410c50:	cmp	w26, #0x2
  410c54:	cset	w1, eq  // eq = none
  410c58:	eor	w0, w22, #0x1
  410c5c:	orr	w1, w1, w0
  410c60:	cbz	w1, 410a80 <wcrtomb@plt+0xdd40>
  410c64:	mov	w1, #0x0                   	// #0
  410c68:	cbnz	w11, 410a80 <wcrtomb@plt+0xdd40>
  410c6c:	nop
  410c70:	cbnz	w5, 410a94 <wcrtomb@plt+0xdd54>
  410c74:	b	410b9c <wcrtomb@plt+0xde5c>
  410c78:	mov	w5, #0x0                   	// #0
  410c7c:	cmp	x25, #0x1
  410c80:	cset	w0, ne  // ne = any
  410c84:	cmn	x25, #0x1
  410c88:	b.ne	410c98 <wcrtomb@plt+0xdf58>  // b.any
  410c8c:	ldrb	w0, [x27, #1]
  410c90:	cmp	w0, #0x0
  410c94:	cset	w0, ne  // ne = any
  410c98:	cmp	w26, #0x2
  410c9c:	cset	w1, eq  // eq = none
  410ca0:	cbz	w0, 410cb4 <wcrtomb@plt+0xdf74>
  410ca4:	mov	w21, #0x0                   	// #0
  410ca8:	b	410c58 <wcrtomb@plt+0xdf18>
  410cac:	cmp	w26, #0x2
  410cb0:	cset	w1, eq  // eq = none
  410cb4:	cbnz	x20, 410ca4 <wcrtomb@plt+0xdf64>
  410cb8:	cmp	w11, #0x0
  410cbc:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  410cc0:	b.eq	410c58 <wcrtomb@plt+0xdf18>  // b.none
  410cc4:	mov	w5, w22
  410cc8:	mov	w26, #0x2                   	// #2
  410ccc:	cmp	w5, #0x0
  410cd0:	mov	w0, #0x4                   	// #4
  410cd4:	csel	w26, w26, w0, eq  // eq = none
  410cd8:	ldr	x7, [sp, #208]
  410cdc:	mov	w4, w26
  410ce0:	ldr	x0, [sp, #240]
  410ce4:	str	x0, [sp]
  410ce8:	ldr	w0, [sp, #200]
  410cec:	mov	x3, x25
  410cf0:	mov	x2, x27
  410cf4:	mov	x1, x23
  410cf8:	and	w5, w0, #0xfffffffd
  410cfc:	mov	x6, #0x0                   	// #0
  410d00:	mov	x0, x28
  410d04:	bl	4107d8 <wcrtomb@plt+0xda98>
  410d08:	mov	x19, x0
  410d0c:	mov	x0, x19
  410d10:	ldp	x29, x30, [sp, #16]
  410d14:	ldp	x19, x20, [sp, #32]
  410d18:	ldp	x21, x22, [sp, #48]
  410d1c:	ldp	x23, x24, [sp, #64]
  410d20:	ldp	x25, x26, [sp, #80]
  410d24:	ldp	x27, x28, [sp, #96]
  410d28:	add	sp, sp, #0xf0
  410d2c:	ret
  410d30:	mov	w5, #0x0                   	// #0
  410d34:	cmp	w26, #0x2
  410d38:	b.eq	411070 <wcrtomb@plt+0xe330>  // b.none
  410d3c:	cmp	w22, #0x0
  410d40:	mov	w4, #0x5c                  	// #92
  410d44:	ccmp	w11, #0x0, #0x4, ne  // ne = any
  410d48:	mov	w0, w4
  410d4c:	ccmp	x12, #0x0, #0x4, ne  // ne = any
  410d50:	b.ne	4113a0 <wcrtomb@plt+0xe660>  // b.any
  410d54:	cbnz	w22, 411410 <wcrtomb@plt+0xe6d0>
  410d58:	mov	w21, #0x0                   	// #0
  410d5c:	mov	w1, #0x0                   	// #0
  410d60:	cbnz	w11, 410a80 <wcrtomb@plt+0xdd40>
  410d64:	b	410c70 <wcrtomb@plt+0xdf30>
  410d68:	mov	w5, #0x0                   	// #0
  410d6c:	cmp	w26, #0x2
  410d70:	b.eq	411088 <wcrtomb@plt+0xe348>  // b.none
  410d74:	cmp	w26, #0x5
  410d78:	b.ne	410da0 <wcrtomb@plt+0xe060>  // b.any
  410d7c:	ldr	x0, [sp, #200]
  410d80:	tbz	w0, #2, 410da0 <wcrtomb@plt+0xe060>
  410d84:	add	x7, x20, #0x2
  410d88:	cmp	x7, x25
  410d8c:	b.cs	410da0 <wcrtomb@plt+0xe060>  // b.hs, b.nlast
  410d90:	ldrb	w4, [x3, #1]
  410d94:	cmp	w4, #0x3f
  410d98:	b.eq	41157c <wcrtomb@plt+0xe83c>  // b.none
  410d9c:	nop
  410da0:	mov	w1, #0x0                   	// #0
  410da4:	mov	w21, #0x0                   	// #0
  410da8:	mov	w4, #0x3f                  	// #63
  410dac:	b	410c58 <wcrtomb@plt+0xdf18>
  410db0:	mov	w5, #0x0                   	// #0
  410db4:	cmp	w26, #0x2
  410db8:	b.eq	410b20 <wcrtomb@plt+0xdde0>  // b.none
  410dbc:	mov	w1, #0x0                   	// #0
  410dc0:	mov	w4, #0x27                  	// #39
  410dc4:	str	w21, [sp, #120]
  410dc8:	b	410c58 <wcrtomb@plt+0xdf18>
  410dcc:	mov	w0, #0x74                  	// #116
  410dd0:	cmp	w11, #0x0
  410dd4:	ccmp	w26, #0x2, #0x0, ne  // ne = any
  410dd8:	b.eq	410cc4 <wcrtomb@plt+0xdf84>  // b.none
  410ddc:	cbz	w22, 410d58 <wcrtomb@plt+0xe018>
  410de0:	b	411410 <wcrtomb@plt+0xe6d0>
  410de4:	mov	w4, #0x62                  	// #98
  410de8:	cmp	w26, #0x2
  410dec:	cset	w0, eq  // eq = none
  410df0:	cbnz	w11, 410e18 <wcrtomb@plt+0xe0d8>
  410df4:	mov	w21, #0x0                   	// #0
  410df8:	b	410aec <wcrtomb@plt+0xddac>
  410dfc:	mov	w4, #0x66                  	// #102
  410e00:	b	410de8 <wcrtomb@plt+0xe0a8>
  410e04:	mov	w4, #0x6e                  	// #110
  410e08:	mov	w21, #0x0                   	// #0
  410e0c:	cmp	w26, #0x2
  410e10:	cset	w0, eq  // eq = none
  410e14:	cbz	w11, 410aa0 <wcrtomb@plt+0xdd60>
  410e18:	and	w5, w22, w0
  410e1c:	b	410ccc <wcrtomb@plt+0xdf8c>
  410e20:	mov	w4, #0x72                  	// #114
  410e24:	mov	w21, #0x0                   	// #0
  410e28:	b	410e0c <wcrtomb@plt+0xe0cc>
  410e2c:	mov	w4, #0x61                  	// #97
  410e30:	b	410de8 <wcrtomb@plt+0xe0a8>
  410e34:	cbnz	w11, 411744 <wcrtomb@plt+0xea04>
  410e38:	mov	w5, #0x0                   	// #0
  410e3c:	cmp	w26, #0x2
  410e40:	eor	w1, w24, #0x1
  410e44:	cset	w0, eq  // eq = none
  410e48:	ands	w1, w0, w1
  410e4c:	b.eq	411050 <wcrtomb@plt+0xe310>  // b.none
  410e50:	cmp	x23, x19
  410e54:	b.ls	410e60 <wcrtomb@plt+0xe120>  // b.plast
  410e58:	mov	w2, #0x27                  	// #39
  410e5c:	strb	w2, [x28, x19]
  410e60:	add	x2, x19, #0x1
  410e64:	cmp	x23, x2
  410e68:	b.ls	410e74 <wcrtomb@plt+0xe134>  // b.plast
  410e6c:	mov	w3, #0x24                  	// #36
  410e70:	strb	w3, [x28, x2]
  410e74:	add	x2, x19, #0x2
  410e78:	cmp	x23, x2
  410e7c:	b.ls	410e88 <wcrtomb@plt+0xe148>  // b.plast
  410e80:	mov	w3, #0x27                  	// #39
  410e84:	strb	w3, [x28, x2]
  410e88:	add	x2, x19, #0x3
  410e8c:	cmp	x23, x2
  410e90:	b.ls	411388 <wcrtomb@plt+0xe648>  // b.plast
  410e94:	mov	w24, w1
  410e98:	mov	w1, #0x5c                  	// #92
  410e9c:	strb	w1, [x28, x2]
  410ea0:	cmp	w26, #0x2
  410ea4:	add	x19, x2, #0x1
  410ea8:	b.eq	411568 <wcrtomb@plt+0xe828>  // b.none
  410eac:	add	x1, x20, #0x1
  410eb0:	mov	w4, #0x30                  	// #48
  410eb4:	cmp	x1, x25
  410eb8:	b.cs	410ed0 <wcrtomb@plt+0xe190>  // b.hs, b.nlast
  410ebc:	ldrb	w1, [x27, x1]
  410ec0:	sub	w1, w1, #0x30
  410ec4:	and	w1, w1, #0xff
  410ec8:	cmp	w1, #0x9
  410ecc:	b.ls	41141c <wcrtomb@plt+0xe6dc>  // b.plast
  410ed0:	eor	w1, w22, #0x1
  410ed4:	orr	w0, w0, w1
  410ed8:	mov	w1, w21
  410edc:	mov	w21, #0x0                   	// #0
  410ee0:	cbz	w0, 410a80 <wcrtomb@plt+0xdd40>
  410ee4:	cbnz	w5, 410a94 <wcrtomb@plt+0xdd54>
  410ee8:	b	410b9c <wcrtomb@plt+0xde5c>
  410eec:	ldrb	w4, [x27, x20]
  410ef0:	cmp	w4, #0x7e
  410ef4:	b.hi	410bf0 <wcrtomb@plt+0xdeb0>  // b.pmore
  410ef8:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xe3b0>
  410efc:	add	x0, x0, #0xb80
  410f00:	ldrh	w0, [x0, w4, uxtw #1]
  410f04:	adr	x1, 410f10 <wcrtomb@plt+0xe1d0>
  410f08:	add	x0, x1, w0, sxth #2
  410f0c:	br	x0
  410f10:	cmp	w26, #0x2
  410f14:	mov	w21, #0x0                   	// #0
  410f18:	cset	w1, eq  // eq = none
  410f1c:	cmp	w11, #0x0
  410f20:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  410f24:	b.eq	410c58 <wcrtomb@plt+0xdf18>  // b.none
  410f28:	b	410cc4 <wcrtomb@plt+0xdf84>
  410f2c:	cmp	w26, #0x2
  410f30:	cset	w1, eq  // eq = none
  410f34:	cmp	w11, #0x0
  410f38:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  410f3c:	b.eq	410c58 <wcrtomb@plt+0xdf18>  // b.none
  410f40:	b	410cc4 <wcrtomb@plt+0xdf84>
  410f44:	cbnz	w22, 410e34 <wcrtomb@plt+0xe0f4>
  410f48:	ldr	x0, [sp, #200]
  410f4c:	mov	w5, #0x0                   	// #0
  410f50:	tbz	w0, #0, 410d58 <wcrtomb@plt+0xe018>
  410f54:	add	x20, x20, #0x1
  410f58:	b	4108f8 <wcrtomb@plt+0xdbb8>
  410f5c:	mov	w0, #0x66                  	// #102
  410f60:	cbz	w22, 410d58 <wcrtomb@plt+0xe018>
  410f64:	b	411410 <wcrtomb@plt+0xe6d0>
  410f68:	mov	w0, #0x62                  	// #98
  410f6c:	cbz	w22, 410d58 <wcrtomb@plt+0xe018>
  410f70:	b	411410 <wcrtomb@plt+0xe6d0>
  410f74:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xe3b0>
  410f78:	add	x0, x0, #0xc80
  410f7c:	ldrh	w0, [x0, w4, uxtw #1]
  410f80:	adr	x1, 410f8c <wcrtomb@plt+0xe24c>
  410f84:	add	x0, x1, w0, sxth #2
  410f88:	br	x0
  410f8c:	mov	w0, #0x0                   	// #0
  410f90:	b	410a70 <wcrtomb@plt+0xdd30>
  410f94:	mov	w0, #0x0                   	// #0
  410f98:	mov	w5, #0x0                   	// #0
  410f9c:	b	410a70 <wcrtomb@plt+0xdd30>
  410fa0:	cbnz	w26, 4117ec <wcrtomb@plt+0xeaac>
  410fa4:	mov	w10, #0x1                   	// #1
  410fa8:	mov	w7, #0x0                   	// #0
  410fac:	mov	w11, #0x0                   	// #0
  410fb0:	mov	w5, #0x0                   	// #0
  410fb4:	mov	x12, #0x0                   	// #0
  410fb8:	mov	x19, #0x0                   	// #0
  410fbc:	str	xzr, [sp, #112]
  410fc0:	str	wzr, [sp, #120]
  410fc4:	str	xzr, [sp, #128]
  410fc8:	b	4108e8 <wcrtomb@plt+0xdba8>
  410fcc:	cmp	w26, #0x5
  410fd0:	b.ne	411014 <wcrtomb@plt+0xe2d4>  // b.any
  410fd4:	cbnz	w20, 41160c <wcrtomb@plt+0xe8cc>
  410fd8:	cbz	x23, 411538 <wcrtomb@plt+0xe7f8>
  410fdc:	mov	w0, #0x22                  	// #34
  410fe0:	mov	w10, #0x1                   	// #1
  410fe4:	mov	x12, #0x1                   	// #1
  410fe8:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  410fec:	mov	w5, w10
  410ff0:	add	x1, x1, #0x9e8
  410ff4:	mov	x19, x12
  410ff8:	mov	w7, #0x0                   	// #0
  410ffc:	mov	w11, #0x0                   	// #0
  411000:	strb	w0, [x28]
  411004:	str	x1, [sp, #112]
  411008:	str	wzr, [sp, #120]
  41100c:	str	xzr, [sp, #128]
  411010:	b	4108e8 <wcrtomb@plt+0xdba8>
  411014:	cmp	w26, #0x6
  411018:	b.ne	4117ec <wcrtomb@plt+0xeaac>  // b.any
  41101c:	adrp	x26, 421000 <_obstack_memory_used@@Base+0xe3b0>
  411020:	mov	w10, #0x1                   	// #1
  411024:	add	x0, x26, #0x9e8
  411028:	mov	w11, w10
  41102c:	mov	w5, w10
  411030:	mov	w7, #0x0                   	// #0
  411034:	mov	x12, #0x1                   	// #1
  411038:	mov	x19, #0x0                   	// #0
  41103c:	mov	w26, #0x5                   	// #5
  411040:	str	x0, [sp, #112]
  411044:	str	wzr, [sp, #120]
  411048:	str	xzr, [sp, #128]
  41104c:	b	4108e8 <wcrtomb@plt+0xdba8>
  411050:	mov	x2, x19
  411054:	cmp	x23, x19
  411058:	b.ls	410ea0 <wcrtomb@plt+0xe160>  // b.plast
  41105c:	mov	w1, w24
  411060:	mov	w24, w1
  411064:	mov	w1, #0x5c                  	// #92
  411068:	strb	w1, [x28, x2]
  41106c:	b	410ea0 <wcrtomb@plt+0xe160>
  411070:	cbnz	w11, 41173c <wcrtomb@plt+0xe9fc>
  411074:	add	x20, x20, #0x1
  411078:	mov	w1, w24
  41107c:	mov	w21, #0x0                   	// #0
  411080:	mov	w4, #0x5c                  	// #92
  411084:	b	410bac <wcrtomb@plt+0xde6c>
  411088:	cbnz	w11, 41173c <wcrtomb@plt+0xe9fc>
  41108c:	mov	w21, #0x0                   	// #0
  411090:	mov	w1, #0x0                   	// #0
  411094:	mov	w4, #0x3f                  	// #63
  411098:	cbnz	w5, 410a94 <wcrtomb@plt+0xdd54>
  41109c:	b	410b9c <wcrtomb@plt+0xde5c>
  4110a0:	str	xzr, [sp, #232]
  4110a4:	cmn	x25, #0x1
  4110a8:	b.ne	4110e8 <wcrtomb@plt+0xe3a8>  // b.any
  4110ac:	mov	x0, x27
  4110b0:	str	w4, [sp, #136]
  4110b4:	str	w5, [sp, #144]
  4110b8:	str	x12, [sp, #152]
  4110bc:	str	w11, [sp, #160]
  4110c0:	str	w10, [sp, #172]
  4110c4:	str	x6, [sp, #176]
  4110c8:	bl	402690 <strlen@plt>
  4110cc:	ldr	w4, [sp, #136]
  4110d0:	mov	x25, x0
  4110d4:	ldr	w5, [sp, #144]
  4110d8:	ldr	w11, [sp, #160]
  4110dc:	ldr	w10, [sp, #172]
  4110e0:	ldr	x12, [sp, #152]
  4110e4:	ldr	x6, [sp, #176]
  4110e8:	mov	x8, #0x0                   	// #0
  4110ec:	str	x19, [sp, #184]
  4110f0:	mov	w19, w21
  4110f4:	mov	x21, x8
  4110f8:	str	w11, [sp, #136]
  4110fc:	str	x12, [sp, #144]
  411100:	str	w24, [sp, #152]
  411104:	str	w10, [sp, #160]
  411108:	stp	w4, w5, [sp, #172]
  41110c:	str	x6, [sp, #216]
  411110:	add	x24, x20, x21
  411114:	add	x3, sp, #0xe8
  411118:	sub	x2, x25, x24
  41111c:	add	x1, x27, x24
  411120:	add	x0, sp, #0xe4
  411124:	bl	412878 <wcrtomb@plt+0xfb38>
  411128:	mov	x13, #0x2b                  	// #43
  41112c:	mov	x3, x0
  411130:	movk	x13, #0x2, lsl #32
  411134:	cbz	x0, 41117c <wcrtomb@plt+0xe43c>
  411138:	cmn	x0, #0x1
  41113c:	b.eq	411674 <wcrtomb@plt+0xe934>  // b.none
  411140:	cmn	x0, #0x2
  411144:	mov	x7, #0x1                   	// #1
  411148:	b.eq	4116a0 <wcrtomb@plt+0xe960>  // b.none
  41114c:	ldr	w0, [sp, #136]
  411150:	cmp	w0, #0x0
  411154:	ccmp	w26, #0x2, #0x0, ne  // ne = any
  411158:	b.eq	4112e0 <wcrtomb@plt+0xe5a0>  // b.none
  41115c:	ldr	w0, [sp, #228]
  411160:	add	x21, x21, x3
  411164:	bl	402c80 <iswprint@plt>
  411168:	cmp	w0, #0x0
  41116c:	csel	w19, w19, wzr, ne  // ne = any
  411170:	add	x0, sp, #0xe8
  411174:	bl	402a10 <mbsinit@plt>
  411178:	cbz	w0, 411110 <wcrtomb@plt+0xe3d0>
  41117c:	eor	w2, w19, #0x1
  411180:	mov	x8, x21
  411184:	ldr	w11, [sp, #136]
  411188:	mov	w21, w19
  41118c:	ldr	w24, [sp, #152]
  411190:	and	w2, w22, w2
  411194:	ldr	w10, [sp, #160]
  411198:	ldp	w4, w5, [sp, #172]
  41119c:	ldr	x12, [sp, #144]
  4111a0:	ldr	x19, [sp, #184]
  4111a4:	ldr	x6, [sp, #216]
  4111a8:	cmp	x8, #0x1
  4111ac:	b.ls	410c4c <wcrtomb@plt+0xdf0c>  // b.plast
  4111b0:	add	x8, x8, x20
  4111b4:	mov	w14, #0x0                   	// #0
  4111b8:	mov	w3, #0x27                  	// #39
  4111bc:	mov	w7, #0x5c                  	// #92
  4111c0:	mov	w9, #0x24                  	// #36
  4111c4:	cbz	w2, 411284 <wcrtomb@plt+0xe544>
  4111c8:	cmp	w26, #0x2
  4111cc:	cset	w0, eq  // eq = none
  4111d0:	cbnz	w11, 4114c8 <wcrtomb@plt+0xe788>
  4111d4:	eor	w1, w24, #0x1
  4111d8:	ands	w0, w0, w1
  4111dc:	b.eq	411214 <wcrtomb@plt+0xe4d4>  // b.none
  4111e0:	cmp	x23, x19
  4111e4:	b.ls	4111ec <wcrtomb@plt+0xe4ac>  // b.plast
  4111e8:	strb	w3, [x28, x19]
  4111ec:	add	x1, x19, #0x1
  4111f0:	cmp	x23, x1
  4111f4:	b.ls	4111fc <wcrtomb@plt+0xe4bc>  // b.plast
  4111f8:	strb	w9, [x28, x1]
  4111fc:	add	x1, x19, #0x2
  411200:	cmp	x23, x1
  411204:	b.ls	41120c <wcrtomb@plt+0xe4cc>  // b.plast
  411208:	strb	w3, [x28, x1]
  41120c:	add	x19, x19, #0x3
  411210:	mov	w24, w0
  411214:	cmp	x23, x19
  411218:	b.ls	411220 <wcrtomb@plt+0xe4e0>  // b.plast
  41121c:	strb	w7, [x28, x19]
  411220:	add	x0, x19, #0x1
  411224:	cmp	x23, x0
  411228:	b.ls	411238 <wcrtomb@plt+0xe4f8>  // b.plast
  41122c:	lsr	w1, w4, #6
  411230:	add	w1, w1, #0x30
  411234:	strb	w1, [x28, x0]
  411238:	add	x0, x19, #0x2
  41123c:	cmp	x23, x0
  411240:	b.ls	411250 <wcrtomb@plt+0xe510>  // b.plast
  411244:	ubfx	x1, x4, #3, #3
  411248:	add	w1, w1, #0x30
  41124c:	strb	w1, [x28, x0]
  411250:	and	w4, w4, #0x7
  411254:	add	x20, x20, #0x1
  411258:	add	w4, w4, #0x30
  41125c:	cmp	x20, x8
  411260:	add	x19, x19, #0x3
  411264:	b.cs	410b04 <wcrtomb@plt+0xddc4>  // b.hs, b.nlast
  411268:	mov	w14, w2
  41126c:	cmp	x23, x19
  411270:	b.ls	411278 <wcrtomb@plt+0xe538>  // b.plast
  411274:	strb	w4, [x28, x19]
  411278:	ldrb	w4, [x27, x20]
  41127c:	add	x19, x19, #0x1
  411280:	cbnz	w2, 4111c8 <wcrtomb@plt+0xe488>
  411284:	eor	w0, w14, #0x1
  411288:	and	w0, w24, w0
  41128c:	and	w0, w0, #0xff
  411290:	cbz	w5, 4112a4 <wcrtomb@plt+0xe564>
  411294:	cmp	x23, x19
  411298:	b.ls	4112a0 <wcrtomb@plt+0xe560>  // b.plast
  41129c:	strb	w7, [x28, x19]
  4112a0:	add	x19, x19, #0x1
  4112a4:	add	x20, x20, #0x1
  4112a8:	cmp	x20, x8
  4112ac:	b.cs	4114c0 <wcrtomb@plt+0xe780>  // b.hs, b.nlast
  4112b0:	cbz	w0, 411530 <wcrtomb@plt+0xe7f0>
  4112b4:	cmp	x23, x19
  4112b8:	b.ls	4112c0 <wcrtomb@plt+0xe580>  // b.plast
  4112bc:	strb	w3, [x28, x19]
  4112c0:	add	x0, x19, #0x1
  4112c4:	cmp	x23, x0
  4112c8:	b.ls	4112d0 <wcrtomb@plt+0xe590>  // b.plast
  4112cc:	strb	w3, [x28, x0]
  4112d0:	add	x19, x19, #0x2
  4112d4:	mov	w5, #0x0                   	// #0
  4112d8:	mov	w24, #0x0                   	// #0
  4112dc:	b	41126c <wcrtomb@plt+0xe52c>
  4112e0:	cmp	x3, #0x1
  4112e4:	b.eq	41115c <wcrtomb@plt+0xe41c>  // b.none
  4112e8:	add	x2, x24, #0x1
  4112ec:	add	x0, x27, x3
  4112f0:	add	x2, x27, x2
  4112f4:	add	x9, x0, x24
  4112f8:	b	411308 <wcrtomb@plt+0xe5c8>
  4112fc:	add	x2, x2, #0x1
  411300:	cmp	x9, x2
  411304:	b.eq	41115c <wcrtomb@plt+0xe41c>  // b.none
  411308:	ldrb	w0, [x2]
  41130c:	sub	w0, w0, #0x5b
  411310:	and	w0, w0, #0xff
  411314:	cmp	w0, #0x21
  411318:	b.hi	4112fc <wcrtomb@plt+0xe5bc>  // b.pmore
  41131c:	lsl	x0, x7, x0
  411320:	tst	x0, x13
  411324:	b.eq	4112fc <wcrtomb@plt+0xe5bc>  // b.none
  411328:	b	410cc4 <wcrtomb@plt+0xdf84>
  41132c:	mov	w10, w26
  411330:	mov	w11, w26
  411334:	adrp	x26, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  411338:	add	x0, x26, #0xd00
  41133c:	str	x0, [sp, #112]
  411340:	str	wzr, [sp, #120]
  411344:	mov	w7, #0x0                   	// #0
  411348:	mov	w5, #0x0                   	// #0
  41134c:	mov	x12, #0x1                   	// #1
  411350:	mov	x19, #0x0                   	// #0
  411354:	mov	w26, #0x2                   	// #2
  411358:	str	xzr, [sp, #128]
  41135c:	b	4108e8 <wcrtomb@plt+0xdba8>
  411360:	mov	w10, #0x1                   	// #1
  411364:	mov	w7, #0x0                   	// #0
  411368:	mov	w5, w10
  41136c:	mov	w11, #0x0                   	// #0
  411370:	mov	x12, #0x0                   	// #0
  411374:	mov	x19, #0x0                   	// #0
  411378:	str	xzr, [sp, #112]
  41137c:	str	wzr, [sp, #120]
  411380:	str	xzr, [sp, #128]
  411384:	b	4108e8 <wcrtomb@plt+0xdba8>
  411388:	add	x19, x19, #0x4
  41138c:	mov	w24, w1
  411390:	mov	w21, #0x0                   	// #0
  411394:	mov	w4, #0x30                  	// #48
  411398:	cbnz	w5, 410a94 <wcrtomb@plt+0xdd54>
  41139c:	b	410b9c <wcrtomb@plt+0xde5c>
  4113a0:	add	x20, x20, #0x1
  4113a4:	mov	w1, w24
  4113a8:	mov	w21, #0x0                   	// #0
  4113ac:	b	410bac <wcrtomb@plt+0xde6c>
  4113b0:	mov	w0, w5
  4113b4:	mov	w5, #0x0                   	// #0
  4113b8:	b	410a70 <wcrtomb@plt+0xdd30>
  4113bc:	mov	w0, #0x0                   	// #0
  4113c0:	cbnz	x20, 4114a4 <wcrtomb@plt+0xe764>
  4113c4:	mov	w21, w5
  4113c8:	mov	w1, #0x0                   	// #0
  4113cc:	mov	w5, w0
  4113d0:	b	410c58 <wcrtomb@plt+0xdf18>
  4113d4:	mov	w1, w26
  4113d8:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xe3b0>
  4113dc:	add	x0, x0, #0xa10
  4113e0:	str	w11, [sp, #112]
  4113e4:	str	x6, [sp, #120]
  4113e8:	bl	410670 <wcrtomb@plt+0xd930>
  4113ec:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  4113f0:	str	x0, [sp, #208]
  4113f4:	add	x0, x1, #0xd00
  4113f8:	mov	w1, w26
  4113fc:	bl	410670 <wcrtomb@plt+0xd930>
  411400:	str	x0, [sp, #240]
  411404:	ldr	w11, [sp, #112]
  411408:	ldr	x6, [sp, #120]
  41140c:	b	410860 <wcrtomb@plt+0xdb20>
  411410:	mov	w4, w0
  411414:	mov	w21, #0x0                   	// #0
  411418:	b	410e0c <wcrtomb@plt+0xe0cc>
  41141c:	cmp	x23, x19
  411420:	b.ls	411428 <wcrtomb@plt+0xe6e8>  // b.plast
  411424:	strb	w4, [x28, x19]
  411428:	add	x1, x2, #0x2
  41142c:	cmp	x23, x1
  411430:	b.ls	41143c <wcrtomb@plt+0xe6fc>  // b.plast
  411434:	mov	w3, #0x30                  	// #48
  411438:	strb	w3, [x28, x1]
  41143c:	add	x19, x2, #0x3
  411440:	mov	w4, #0x30                  	// #48
  411444:	b	410ed0 <wcrtomb@plt+0xe190>
  411448:	mov	w0, #0x76                  	// #118
  41144c:	cbz	w22, 410d58 <wcrtomb@plt+0xe018>
  411450:	b	411410 <wcrtomb@plt+0xe6d0>
  411454:	mov	w0, #0x72                  	// #114
  411458:	b	410dd0 <wcrtomb@plt+0xe090>
  41145c:	mov	w0, #0x61                  	// #97
  411460:	cbz	w22, 410d58 <wcrtomb@plt+0xe018>
  411464:	b	411410 <wcrtomb@plt+0xe6d0>
  411468:	mov	w0, #0x6e                  	// #110
  41146c:	b	410dd0 <wcrtomb@plt+0xe090>
  411470:	mov	w0, #0x0                   	// #0
  411474:	mov	w21, w5
  411478:	mov	w1, #0x0                   	// #0
  41147c:	mov	w5, w0
  411480:	mov	w4, #0x20                  	// #32
  411484:	b	410c58 <wcrtomb@plt+0xdf18>
  411488:	mov	w5, #0x0                   	// #0
  41148c:	mov	w0, #0x74                  	// #116
  411490:	b	410dd0 <wcrtomb@plt+0xe090>
  411494:	mov	w5, #0x0                   	// #0
  411498:	mov	w0, #0x76                  	// #118
  41149c:	cbz	w22, 410d58 <wcrtomb@plt+0xe018>
  4114a0:	b	411410 <wcrtomb@plt+0xe6d0>
  4114a4:	mov	w5, w0
  4114a8:	mov	w21, #0x0                   	// #0
  4114ac:	mov	w1, #0x0                   	// #0
  4114b0:	b	410a80 <wcrtomb@plt+0xdd40>
  4114b4:	mov	w2, w22
  4114b8:	mov	w21, #0x0                   	// #0
  4114bc:	b	4111b0 <wcrtomb@plt+0xe470>
  4114c0:	mov	w1, w0
  4114c4:	b	410bac <wcrtomb@plt+0xde6c>
  4114c8:	mov	w5, w0
  4114cc:	b	410ccc <wcrtomb@plt+0xdf8c>
  4114d0:	mov	w5, #0x1                   	// #1
  4114d4:	cbz	w20, 4114fc <wcrtomb@plt+0xe7bc>
  4114d8:	mov	w10, #0x1                   	// #1
  4114dc:	adrp	x26, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  4114e0:	mov	w11, w10
  4114e4:	add	x0, x26, #0xd00
  4114e8:	str	x0, [sp, #112]
  4114ec:	str	wzr, [sp, #120]
  4114f0:	b	411344 <wcrtomb@plt+0xe604>
  4114f4:	cbnz	w20, 41179c <wcrtomb@plt+0xea5c>
  4114f8:	mov	w5, #0x0                   	// #0
  4114fc:	cbnz	x23, 4117d4 <wcrtomb@plt+0xea94>
  411500:	adrp	x26, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  411504:	mov	x12, #0x1                   	// #1
  411508:	add	x0, x26, #0xd00
  41150c:	mov	x19, x12
  411510:	mov	w10, #0x1                   	// #1
  411514:	mov	w7, #0x0                   	// #0
  411518:	mov	w11, #0x0                   	// #0
  41151c:	mov	w26, #0x2                   	// #2
  411520:	str	x0, [sp, #112]
  411524:	str	wzr, [sp, #120]
  411528:	str	xzr, [sp, #128]
  41152c:	b	4108e8 <wcrtomb@plt+0xdba8>
  411530:	mov	w5, #0x0                   	// #0
  411534:	b	41126c <wcrtomb@plt+0xe52c>
  411538:	mov	w10, #0x1                   	// #1
  41153c:	mov	x12, #0x1                   	// #1
  411540:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xe3b0>
  411544:	mov	w5, w10
  411548:	add	x0, x0, #0x9e8
  41154c:	mov	x19, x12
  411550:	mov	w7, #0x0                   	// #0
  411554:	mov	w11, #0x0                   	// #0
  411558:	str	x0, [sp, #112]
  41155c:	str	wzr, [sp, #120]
  411560:	str	xzr, [sp, #128]
  411564:	b	4108e8 <wcrtomb@plt+0xdba8>
  411568:	mov	w1, w21
  41156c:	mov	w4, #0x30                  	// #48
  411570:	mov	w21, #0x0                   	// #0
  411574:	cbnz	w5, 410a94 <wcrtomb@plt+0xdd54>
  411578:	b	410b9c <wcrtomb@plt+0xde5c>
  41157c:	ldrb	w3, [x27, x7]
  411580:	cmp	w3, #0x3e
  411584:	b.hi	411788 <wcrtomb@plt+0xea48>  // b.pmore
  411588:	mov	x0, #0x1                   	// #1
  41158c:	mov	x2, #0xa38200000000        	// #179778741075968
  411590:	movk	x2, #0x7000, lsl #48
  411594:	lsl	x0, x0, x3
  411598:	mov	w1, #0x0                   	// #0
  41159c:	tst	x0, x2
  4115a0:	mov	w21, #0x0                   	// #0
  4115a4:	b.eq	410c58 <wcrtomb@plt+0xdf18>  // b.none
  4115a8:	cbnz	w11, 410cd8 <wcrtomb@plt+0xdf98>
  4115ac:	cmp	x23, x19
  4115b0:	b.ls	4115b8 <wcrtomb@plt+0xe878>  // b.plast
  4115b4:	strb	w4, [x28, x19]
  4115b8:	add	x0, x19, #0x1
  4115bc:	cmp	x23, x0
  4115c0:	b.ls	4115cc <wcrtomb@plt+0xe88c>  // b.plast
  4115c4:	mov	w1, #0x22                  	// #34
  4115c8:	strb	w1, [x28, x0]
  4115cc:	add	x0, x19, #0x2
  4115d0:	cmp	x23, x0
  4115d4:	b.ls	4115e0 <wcrtomb@plt+0xe8a0>  // b.plast
  4115d8:	mov	w1, #0x22                  	// #34
  4115dc:	strb	w1, [x28, x0]
  4115e0:	add	x0, x19, #0x3
  4115e4:	cmp	x23, x0
  4115e8:	b.ls	4115f4 <wcrtomb@plt+0xe8b4>  // b.plast
  4115ec:	mov	w1, #0x3f                  	// #63
  4115f0:	strb	w1, [x28, x0]
  4115f4:	add	x19, x19, #0x4
  4115f8:	mov	w4, w3
  4115fc:	mov	x20, x7
  411600:	mov	w0, #0x0                   	// #0
  411604:	mov	w21, #0x0                   	// #0
  411608:	b	410ed0 <wcrtomb@plt+0xe190>
  41160c:	mov	w10, #0x1                   	// #1
  411610:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xe3b0>
  411614:	mov	w11, w10
  411618:	add	x0, x0, #0x9e8
  41161c:	mov	w5, w10
  411620:	mov	w7, #0x0                   	// #0
  411624:	mov	x12, #0x1                   	// #1
  411628:	mov	x19, #0x0                   	// #0
  41162c:	str	x0, [sp, #112]
  411630:	str	wzr, [sp, #120]
  411634:	str	xzr, [sp, #128]
  411638:	b	4108e8 <wcrtomb@plt+0xdba8>
  41163c:	mov	w0, w5
  411640:	b	4113c0 <wcrtomb@plt+0xe680>
  411644:	mov	w0, w5
  411648:	b	411474 <wcrtomb@plt+0xe734>
  41164c:	ldr	x1, [sp, #208]
  411650:	ldrb	w0, [x1]
  411654:	cbz	w0, 410868 <wcrtomb@plt+0xdb28>
  411658:	cmp	x23, x19
  41165c:	b.ls	411664 <wcrtomb@plt+0xe924>  // b.plast
  411660:	strb	w0, [x28, x19]
  411664:	add	x19, x19, #0x1
  411668:	ldrb	w0, [x1, x19]
  41166c:	cbnz	w0, 411658 <wcrtomb@plt+0xe918>
  411670:	b	410868 <wcrtomb@plt+0xdb28>
  411674:	mov	x8, x21
  411678:	ldr	w11, [sp, #136]
  41167c:	ldr	w24, [sp, #152]
  411680:	mov	w2, w22
  411684:	ldr	w10, [sp, #160]
  411688:	mov	w21, #0x0                   	// #0
  41168c:	ldp	w4, w5, [sp, #172]
  411690:	ldr	x12, [sp, #144]
  411694:	ldr	x19, [sp, #184]
  411698:	ldr	x6, [sp, #216]
  41169c:	b	4111a8 <wcrtomb@plt+0xe468>
  4116a0:	mov	x9, x24
  4116a4:	cmp	x24, x25
  4116a8:	ldr	w11, [sp, #136]
  4116ac:	mov	x8, x21
  4116b0:	ldr	w24, [sp, #152]
  4116b4:	ldr	w10, [sp, #160]
  4116b8:	ldp	w4, w5, [sp, #172]
  4116bc:	ldr	x12, [sp, #144]
  4116c0:	ldr	x19, [sp, #184]
  4116c4:	ldr	x6, [sp, #216]
  4116c8:	b.cc	4116e0 <wcrtomb@plt+0xe9a0>  // b.lo, b.ul, b.last
  4116cc:	b	4116e8 <wcrtomb@plt+0xe9a8>
  4116d0:	add	x8, x8, #0x1
  4116d4:	add	x9, x20, x8
  4116d8:	cmp	x25, x9
  4116dc:	b.ls	4116e8 <wcrtomb@plt+0xe9a8>  // b.plast
  4116e0:	ldrb	w0, [x27, x9]
  4116e4:	cbnz	w0, 4116d0 <wcrtomb@plt+0xe990>
  4116e8:	mov	w2, w22
  4116ec:	mov	w21, #0x0                   	// #0
  4116f0:	b	4111a8 <wcrtomb@plt+0xe468>
  4116f4:	mov	w0, w11
  4116f8:	ldr	x1, [sp, #112]
  4116fc:	cmp	x1, #0x0
  411700:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  411704:	b.eq	41172c <wcrtomb@plt+0xe9ec>  // b.none
  411708:	ldrb	w0, [x1]
  41170c:	cbz	w0, 41172c <wcrtomb@plt+0xe9ec>
  411710:	sub	x26, x1, x19
  411714:	cmp	x23, x19
  411718:	b.ls	411720 <wcrtomb@plt+0xe9e0>  // b.plast
  41171c:	strb	w0, [x28, x19]
  411720:	add	x19, x19, #0x1
  411724:	ldrb	w0, [x26, x19]
  411728:	cbnz	w0, 411714 <wcrtomb@plt+0xe9d4>
  41172c:	cmp	x23, x19
  411730:	b.ls	410d0c <wcrtomb@plt+0xdfcc>  // b.plast
  411734:	strb	wzr, [x28, x19]
  411738:	b	410d0c <wcrtomb@plt+0xdfcc>
  41173c:	mov	w5, w22
  411740:	b	410ccc <wcrtomb@plt+0xdf8c>
  411744:	cmp	w26, #0x2
  411748:	cset	w5, eq  // eq = none
  41174c:	b	410ccc <wcrtomb@plt+0xdf8c>
  411750:	ldr	w5, [sp, #200]
  411754:	mov	x3, x25
  411758:	ldr	x1, [sp, #128]
  41175c:	mov	x2, x27
  411760:	ldr	x7, [sp, #208]
  411764:	mov	w4, #0x5                   	// #5
  411768:	ldr	x0, [sp, #240]
  41176c:	str	x0, [sp]
  411770:	mov	x0, x28
  411774:	bl	4107d8 <wcrtomb@plt+0xda98>
  411778:	mov	x19, x0
  41177c:	b	410d0c <wcrtomb@plt+0xdfcc>
  411780:	ldr	w0, [sp, #120]
  411784:	b	4116f8 <wcrtomb@plt+0xe9b8>
  411788:	mov	w1, #0x0                   	// #0
  41178c:	mov	w21, #0x0                   	// #0
  411790:	b	410c58 <wcrtomb@plt+0xdf18>
  411794:	mov	w26, #0x2                   	// #2
  411798:	b	410ccc <wcrtomb@plt+0xdf8c>
  41179c:	mov	w10, #0x1                   	// #1
  4117a0:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0xc3b0>
  4117a4:	mov	w11, w10
  4117a8:	add	x0, x0, #0xd00
  4117ac:	mov	w7, #0x0                   	// #0
  4117b0:	mov	w5, #0x0                   	// #0
  4117b4:	mov	x12, #0x1                   	// #1
  4117b8:	mov	x19, #0x0                   	// #0
  4117bc:	str	x0, [sp, #112]
  4117c0:	str	wzr, [sp, #120]
  4117c4:	str	xzr, [sp, #128]
  4117c8:	b	4108e8 <wcrtomb@plt+0xdba8>
  4117cc:	ldr	x23, [sp, #128]
  4117d0:	b	410b78 <wcrtomb@plt+0xde38>
  4117d4:	mov	w7, #0x0                   	// #0
  4117d8:	mov	w0, #0x0                   	// #0
  4117dc:	mov	w10, #0x1                   	// #1
  4117e0:	mov	x1, #0x0                   	// #0
  4117e4:	str	x23, [sp, #128]
  4117e8:	b	410a38 <wcrtomb@plt+0xdcf8>
  4117ec:	bl	4029e0 <abort@plt>
  4117f0:	sub	sp, sp, #0x80
  4117f4:	stp	x29, x30, [sp, #16]
  4117f8:	add	x29, sp, #0x10
  4117fc:	stp	x19, x20, [sp, #32]
  411800:	mov	w19, w0
  411804:	mov	x20, x3
  411808:	stp	x21, x22, [sp, #48]
  41180c:	stp	x23, x24, [sp, #64]
  411810:	mov	x23, x1
  411814:	mov	x24, x2
  411818:	stp	x25, x26, [sp, #80]
  41181c:	stp	x27, x28, [sp, #96]
  411820:	bl	402cb0 <__errno_location@plt>
  411824:	mov	x22, x0
  411828:	ldr	w0, [x0]
  41182c:	adrp	x27, 438000 <_obstack_memory_used@@Base+0x253b0>
  411830:	str	w0, [sp, #116]
  411834:	ldr	x21, [x27, #1152]
  411838:	tbnz	w19, #31, 411990 <wcrtomb@plt+0xec50>
  41183c:	add	x26, x27, #0x480
  411840:	ldr	w0, [x26, #8]
  411844:	cmp	w0, w19
  411848:	b.gt	411898 <wcrtomb@plt+0xeb58>
  41184c:	mov	w0, #0x7fffffff            	// #2147483647
  411850:	cmp	w19, w0
  411854:	b.eq	41198c <wcrtomb@plt+0xec4c>  // b.none
  411858:	add	w28, w19, #0x1
  41185c:	add	x0, x26, #0x10
  411860:	cmp	x21, x0
  411864:	sbfiz	x1, x28, #4, #32
  411868:	b.eq	411970 <wcrtomb@plt+0xec30>  // b.none
  41186c:	mov	x0, x21
  411870:	bl	412658 <wcrtomb@plt+0xf918>
  411874:	mov	x21, x0
  411878:	str	x0, [x27, #1152]
  41187c:	ldr	w0, [x26, #8]
  411880:	mov	w1, #0x0                   	// #0
  411884:	sub	w2, w28, w0
  411888:	add	x0, x21, w0, sxtw #4
  41188c:	sbfiz	x2, x2, #4, #32
  411890:	bl	4028d0 <memset@plt>
  411894:	str	w28, [x26, #8]
  411898:	sbfiz	x19, x19, #4, #32
  41189c:	add	x26, x20, #0x8
  4118a0:	add	x0, x21, x19
  4118a4:	str	x0, [sp, #120]
  4118a8:	ldp	w4, w5, [x20]
  4118ac:	mov	x6, x26
  4118b0:	ldr	x7, [x20, #40]
  4118b4:	orr	w25, w5, #0x1
  4118b8:	ldr	x27, [x21, x19]
  4118bc:	mov	x3, x24
  4118c0:	ldr	x28, [x0, #8]
  4118c4:	mov	x1, x27
  4118c8:	ldr	x0, [x20, #48]
  4118cc:	str	x0, [sp]
  4118d0:	mov	x2, x23
  4118d4:	mov	w5, w25
  4118d8:	mov	x0, x28
  4118dc:	bl	4107d8 <wcrtomb@plt+0xda98>
  4118e0:	cmp	x27, x0
  4118e4:	b.hi	411944 <wcrtomb@plt+0xec04>  // b.pmore
  4118e8:	add	x27, x0, #0x1
  4118ec:	str	x27, [x21, x19]
  4118f0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  4118f4:	add	x0, x0, #0x798
  4118f8:	cmp	x28, x0
  4118fc:	b.eq	411908 <wcrtomb@plt+0xebc8>  // b.none
  411900:	mov	x0, x28
  411904:	bl	402ae0 <free@plt>
  411908:	mov	x0, x27
  41190c:	bl	4125f8 <wcrtomb@plt+0xf8b8>
  411910:	ldr	x1, [sp, #120]
  411914:	mov	x28, x0
  411918:	ldr	w4, [x20]
  41191c:	mov	x6, x26
  411920:	ldr	x7, [x20, #40]
  411924:	str	x0, [x1, #8]
  411928:	ldr	x1, [x20, #48]
  41192c:	str	x1, [sp]
  411930:	mov	w5, w25
  411934:	mov	x3, x24
  411938:	mov	x2, x23
  41193c:	mov	x1, x27
  411940:	bl	4107d8 <wcrtomb@plt+0xda98>
  411944:	ldr	w0, [sp, #116]
  411948:	ldp	x29, x30, [sp, #16]
  41194c:	ldp	x19, x20, [sp, #32]
  411950:	ldp	x23, x24, [sp, #64]
  411954:	ldp	x25, x26, [sp, #80]
  411958:	str	w0, [x22]
  41195c:	mov	x0, x28
  411960:	ldp	x21, x22, [sp, #48]
  411964:	ldp	x27, x28, [sp, #96]
  411968:	add	sp, sp, #0x80
  41196c:	ret
  411970:	mov	x0, #0x0                   	// #0
  411974:	bl	412658 <wcrtomb@plt+0xf918>
  411978:	mov	x21, x0
  41197c:	str	x0, [x27, #1152]
  411980:	ldp	x0, x1, [x26, #16]
  411984:	stp	x0, x1, [x21]
  411988:	b	41187c <wcrtomb@plt+0xeb3c>
  41198c:	bl	412830 <wcrtomb@plt+0xfaf0>
  411990:	bl	4029e0 <abort@plt>
  411994:	nop
  411998:	stp	x29, x30, [sp, #-48]!
  41199c:	mov	x29, sp
  4119a0:	stp	x19, x20, [sp, #16]
  4119a4:	mov	x20, x0
  4119a8:	str	x21, [sp, #32]
  4119ac:	bl	402cb0 <__errno_location@plt>
  4119b0:	adrp	x2, 438000 <_obstack_memory_used@@Base+0x253b0>
  4119b4:	mov	x19, x0
  4119b8:	add	x2, x2, #0x798
  4119bc:	cmp	x20, #0x0
  4119c0:	add	x2, x2, #0x100
  4119c4:	mov	x1, #0x38                  	// #56
  4119c8:	ldr	w21, [x19]
  4119cc:	csel	x0, x2, x20, eq  // eq = none
  4119d0:	bl	4127d0 <wcrtomb@plt+0xfa90>
  4119d4:	str	w21, [x19]
  4119d8:	ldp	x19, x20, [sp, #16]
  4119dc:	ldr	x21, [sp, #32]
  4119e0:	ldp	x29, x30, [sp], #48
  4119e4:	ret
  4119e8:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  4119ec:	add	x1, x1, #0x798
  4119f0:	cmp	x0, #0x0
  4119f4:	add	x1, x1, #0x100
  4119f8:	csel	x0, x1, x0, eq  // eq = none
  4119fc:	ldr	w0, [x0]
  411a00:	ret
  411a04:	nop
  411a08:	adrp	x2, 438000 <_obstack_memory_used@@Base+0x253b0>
  411a0c:	add	x2, x2, #0x798
  411a10:	cmp	x0, #0x0
  411a14:	add	x2, x2, #0x100
  411a18:	csel	x0, x2, x0, eq  // eq = none
  411a1c:	str	w1, [x0]
  411a20:	ret
  411a24:	nop
  411a28:	adrp	x3, 438000 <_obstack_memory_used@@Base+0x253b0>
  411a2c:	add	x3, x3, #0x798
  411a30:	cmp	x0, #0x0
  411a34:	add	x3, x3, #0x100
  411a38:	csel	x0, x3, x0, eq  // eq = none
  411a3c:	ubfx	x4, x1, #5, #3
  411a40:	add	x3, x0, #0x8
  411a44:	and	w1, w1, #0x1f
  411a48:	ldr	w5, [x3, x4, lsl #2]
  411a4c:	lsr	w0, w5, w1
  411a50:	eor	w2, w0, w2
  411a54:	and	w2, w2, #0x1
  411a58:	and	w0, w0, #0x1
  411a5c:	lsl	w2, w2, w1
  411a60:	eor	w2, w2, w5
  411a64:	str	w2, [x3, x4, lsl #2]
  411a68:	ret
  411a6c:	nop
  411a70:	adrp	x3, 438000 <_obstack_memory_used@@Base+0x253b0>
  411a74:	add	x3, x3, #0x798
  411a78:	cmp	x0, #0x0
  411a7c:	add	x3, x3, #0x100
  411a80:	csel	x2, x3, x0, eq  // eq = none
  411a84:	ldr	w0, [x2, #4]
  411a88:	str	w1, [x2, #4]
  411a8c:	ret
  411a90:	adrp	x3, 438000 <_obstack_memory_used@@Base+0x253b0>
  411a94:	add	x3, x3, #0x798
  411a98:	cmp	x0, #0x0
  411a9c:	add	x3, x3, #0x100
  411aa0:	csel	x0, x3, x0, eq  // eq = none
  411aa4:	mov	w3, #0xa                   	// #10
  411aa8:	cmp	x1, #0x0
  411aac:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  411ab0:	str	w3, [x0]
  411ab4:	b.eq	411ac0 <wcrtomb@plt+0xed80>  // b.none
  411ab8:	stp	x1, x2, [x0, #40]
  411abc:	ret
  411ac0:	stp	x29, x30, [sp, #-16]!
  411ac4:	mov	x29, sp
  411ac8:	bl	4029e0 <abort@plt>
  411acc:	nop
  411ad0:	sub	sp, sp, #0x50
  411ad4:	adrp	x5, 438000 <_obstack_memory_used@@Base+0x253b0>
  411ad8:	stp	x29, x30, [sp, #16]
  411adc:	add	x29, sp, #0x10
  411ae0:	stp	x19, x20, [sp, #32]
  411ae4:	mov	x19, x4
  411ae8:	add	x4, x5, #0x798
  411aec:	cmp	x19, #0x0
  411af0:	add	x4, x4, #0x100
  411af4:	csel	x19, x4, x19, eq  // eq = none
  411af8:	mov	x20, x3
  411afc:	stp	x21, x22, [sp, #48]
  411b00:	mov	x21, x0
  411b04:	mov	x22, x1
  411b08:	str	x23, [sp, #64]
  411b0c:	mov	x23, x2
  411b10:	bl	402cb0 <__errno_location@plt>
  411b14:	ldp	x7, x8, [x19, #40]
  411b18:	mov	x3, x20
  411b1c:	mov	x20, x0
  411b20:	mov	x0, x21
  411b24:	ldp	w4, w5, [x19]
  411b28:	mov	x2, x23
  411b2c:	ldr	w21, [x20]
  411b30:	mov	x1, x22
  411b34:	str	x8, [sp]
  411b38:	add	x6, x19, #0x8
  411b3c:	bl	4107d8 <wcrtomb@plt+0xda98>
  411b40:	ldp	x29, x30, [sp, #16]
  411b44:	ldr	x23, [sp, #64]
  411b48:	str	w21, [x20]
  411b4c:	ldp	x19, x20, [sp, #32]
  411b50:	ldp	x21, x22, [sp, #48]
  411b54:	add	sp, sp, #0x50
  411b58:	ret
  411b5c:	nop
  411b60:	sub	sp, sp, #0x70
  411b64:	adrp	x4, 438000 <_obstack_memory_used@@Base+0x253b0>
  411b68:	add	x4, x4, #0x798
  411b6c:	cmp	x3, #0x0
  411b70:	add	x4, x4, #0x100
  411b74:	stp	x29, x30, [sp, #16]
  411b78:	add	x29, sp, #0x10
  411b7c:	stp	x19, x20, [sp, #32]
  411b80:	csel	x19, x4, x3, eq  // eq = none
  411b84:	mov	x20, x2
  411b88:	stp	x21, x22, [sp, #48]
  411b8c:	mov	x22, x0
  411b90:	stp	x23, x24, [sp, #64]
  411b94:	mov	x23, x1
  411b98:	stp	x25, x26, [sp, #80]
  411b9c:	stp	x27, x28, [sp, #96]
  411ba0:	bl	402cb0 <__errno_location@plt>
  411ba4:	ldr	w28, [x0]
  411ba8:	ldp	w4, w5, [x19]
  411bac:	mov	x21, x0
  411bb0:	ldp	x7, x0, [x19, #40]
  411bb4:	cmp	x20, #0x0
  411bb8:	cset	w24, eq  // eq = none
  411bbc:	add	x27, x19, #0x8
  411bc0:	orr	w24, w24, w5
  411bc4:	mov	x6, x27
  411bc8:	mov	x3, x23
  411bcc:	mov	x2, x22
  411bd0:	mov	w5, w24
  411bd4:	str	x0, [sp]
  411bd8:	mov	x1, #0x0                   	// #0
  411bdc:	mov	x0, #0x0                   	// #0
  411be0:	bl	4107d8 <wcrtomb@plt+0xda98>
  411be4:	add	x26, x0, #0x1
  411be8:	mov	x25, x0
  411bec:	mov	x0, x26
  411bf0:	bl	4125f8 <wcrtomb@plt+0xf8b8>
  411bf4:	ldp	x7, x1, [x19, #40]
  411bf8:	mov	w5, w24
  411bfc:	ldr	w4, [x19]
  411c00:	mov	x6, x27
  411c04:	str	x1, [sp]
  411c08:	mov	x3, x23
  411c0c:	mov	x2, x22
  411c10:	mov	x19, x0
  411c14:	mov	x1, x26
  411c18:	bl	4107d8 <wcrtomb@plt+0xda98>
  411c1c:	str	w28, [x21]
  411c20:	cbz	x20, 411c28 <wcrtomb@plt+0xeee8>
  411c24:	str	x25, [x20]
  411c28:	mov	x0, x19
  411c2c:	ldp	x29, x30, [sp, #16]
  411c30:	ldp	x19, x20, [sp, #32]
  411c34:	ldp	x21, x22, [sp, #48]
  411c38:	ldp	x23, x24, [sp, #64]
  411c3c:	ldp	x25, x26, [sp, #80]
  411c40:	ldp	x27, x28, [sp, #96]
  411c44:	add	sp, sp, #0x70
  411c48:	ret
  411c4c:	nop
  411c50:	mov	x3, x2
  411c54:	mov	x2, #0x0                   	// #0
  411c58:	b	411b60 <wcrtomb@plt+0xee20>
  411c5c:	nop
  411c60:	stp	x29, x30, [sp, #-64]!
  411c64:	mov	x29, sp
  411c68:	stp	x21, x22, [sp, #32]
  411c6c:	str	x23, [sp, #48]
  411c70:	adrp	x23, 438000 <_obstack_memory_used@@Base+0x253b0>
  411c74:	add	x22, x23, #0x480
  411c78:	stp	x19, x20, [sp, #16]
  411c7c:	ldr	x21, [x23, #1152]
  411c80:	ldr	w20, [x22, #8]
  411c84:	cmp	w20, #0x1
  411c88:	b.le	411cb0 <wcrtomb@plt+0xef70>
  411c8c:	sub	w0, w20, #0x2
  411c90:	add	x20, x21, #0x28
  411c94:	add	x19, x21, #0x18
  411c98:	add	x20, x20, w0, uxtw #4
  411c9c:	nop
  411ca0:	ldr	x0, [x19], #16
  411ca4:	bl	402ae0 <free@plt>
  411ca8:	cmp	x19, x20
  411cac:	b.ne	411ca0 <wcrtomb@plt+0xef60>  // b.any
  411cb0:	ldr	x0, [x21, #8]
  411cb4:	adrp	x19, 438000 <_obstack_memory_used@@Base+0x253b0>
  411cb8:	add	x19, x19, #0x798
  411cbc:	cmp	x0, x19
  411cc0:	b.eq	411cd0 <wcrtomb@plt+0xef90>  // b.none
  411cc4:	bl	402ae0 <free@plt>
  411cc8:	mov	x0, #0x100                 	// #256
  411ccc:	stp	x0, x19, [x22, #16]
  411cd0:	add	x19, x22, #0x10
  411cd4:	cmp	x21, x19
  411cd8:	b.eq	411ce8 <wcrtomb@plt+0xefa8>  // b.none
  411cdc:	mov	x0, x21
  411ce0:	bl	402ae0 <free@plt>
  411ce4:	str	x19, [x23, #1152]
  411ce8:	mov	w0, #0x1                   	// #1
  411cec:	str	w0, [x22, #8]
  411cf0:	ldp	x19, x20, [sp, #16]
  411cf4:	ldp	x21, x22, [sp, #32]
  411cf8:	ldr	x23, [sp, #48]
  411cfc:	ldp	x29, x30, [sp], #64
  411d00:	ret
  411d04:	nop
  411d08:	adrp	x3, 438000 <_obstack_memory_used@@Base+0x253b0>
  411d0c:	add	x3, x3, #0x798
  411d10:	add	x3, x3, #0x100
  411d14:	mov	x2, #0xffffffffffffffff    	// #-1
  411d18:	b	4117f0 <wcrtomb@plt+0xeab0>
  411d1c:	nop
  411d20:	adrp	x3, 438000 <_obstack_memory_used@@Base+0x253b0>
  411d24:	add	x3, x3, #0x798
  411d28:	add	x3, x3, #0x100
  411d2c:	b	4117f0 <wcrtomb@plt+0xeab0>
  411d30:	adrp	x3, 438000 <_obstack_memory_used@@Base+0x253b0>
  411d34:	add	x3, x3, #0x798
  411d38:	mov	x1, x0
  411d3c:	add	x3, x3, #0x100
  411d40:	mov	x2, #0xffffffffffffffff    	// #-1
  411d44:	mov	w0, #0x0                   	// #0
  411d48:	b	4117f0 <wcrtomb@plt+0xeab0>
  411d4c:	nop
  411d50:	adrp	x3, 438000 <_obstack_memory_used@@Base+0x253b0>
  411d54:	add	x3, x3, #0x798
  411d58:	mov	x2, x1
  411d5c:	add	x3, x3, #0x100
  411d60:	mov	x1, x0
  411d64:	mov	w0, #0x0                   	// #0
  411d68:	b	4117f0 <wcrtomb@plt+0xeab0>
  411d6c:	nop
  411d70:	stp	x29, x30, [sp, #-96]!
  411d74:	add	x8, sp, #0x28
  411d78:	mov	x29, sp
  411d7c:	stp	x19, x20, [sp, #16]
  411d80:	mov	x20, x2
  411d84:	mov	w19, w0
  411d88:	mov	w0, w1
  411d8c:	bl	410640 <wcrtomb@plt+0xd900>
  411d90:	add	x3, sp, #0x28
  411d94:	mov	x1, x20
  411d98:	mov	w0, w19
  411d9c:	mov	x2, #0xffffffffffffffff    	// #-1
  411da0:	bl	4117f0 <wcrtomb@plt+0xeab0>
  411da4:	ldp	x19, x20, [sp, #16]
  411da8:	ldp	x29, x30, [sp], #96
  411dac:	ret
  411db0:	stp	x29, x30, [sp, #-112]!
  411db4:	add	x8, sp, #0x38
  411db8:	mov	x29, sp
  411dbc:	stp	x19, x20, [sp, #16]
  411dc0:	mov	x20, x2
  411dc4:	mov	w19, w0
  411dc8:	mov	w0, w1
  411dcc:	str	x21, [sp, #32]
  411dd0:	mov	x21, x3
  411dd4:	bl	410640 <wcrtomb@plt+0xd900>
  411dd8:	add	x3, sp, #0x38
  411ddc:	mov	x2, x21
  411de0:	mov	x1, x20
  411de4:	mov	w0, w19
  411de8:	bl	4117f0 <wcrtomb@plt+0xeab0>
  411dec:	ldp	x19, x20, [sp, #16]
  411df0:	ldr	x21, [sp, #32]
  411df4:	ldp	x29, x30, [sp], #112
  411df8:	ret
  411dfc:	nop
  411e00:	mov	x2, x1
  411e04:	mov	w1, w0
  411e08:	mov	w0, #0x0                   	// #0
  411e0c:	b	411d70 <wcrtomb@plt+0xf030>
  411e10:	mov	x4, x1
  411e14:	mov	x3, x2
  411e18:	mov	w1, w0
  411e1c:	mov	x2, x4
  411e20:	mov	w0, #0x0                   	// #0
  411e24:	b	411db0 <wcrtomb@plt+0xf070>
  411e28:	adrp	x3, 438000 <_obstack_memory_used@@Base+0x253b0>
  411e2c:	add	x3, x3, #0x798
  411e30:	stp	x29, x30, [sp, #-80]!
  411e34:	add	x5, x3, #0x100
  411e38:	ubfx	x7, x2, #5, #3
  411e3c:	mov	x29, sp
  411e40:	ldp	x8, x9, [x3, #256]
  411e44:	stp	x8, x9, [sp, #24]
  411e48:	add	x6, sp, #0x20
  411e4c:	and	w8, w2, #0x1f
  411e50:	add	x4, sp, #0x18
  411e54:	ldp	x2, x3, [x3, #272]
  411e58:	stp	x2, x3, [sp, #40]
  411e5c:	ldp	x2, x3, [x5, #32]
  411e60:	stp	x2, x3, [sp, #56]
  411e64:	mov	x2, x1
  411e68:	mov	x3, x4
  411e6c:	ldr	x1, [x5, #48]
  411e70:	str	x1, [sp, #72]
  411e74:	mov	x1, x0
  411e78:	mov	w0, #0x0                   	// #0
  411e7c:	ldr	w5, [x6, x7, lsl #2]
  411e80:	lsr	w4, w5, w8
  411e84:	mvn	w4, w4
  411e88:	and	w4, w4, #0x1
  411e8c:	lsl	w4, w4, w8
  411e90:	eor	w4, w4, w5
  411e94:	str	w4, [x6, x7, lsl #2]
  411e98:	bl	4117f0 <wcrtomb@plt+0xeab0>
  411e9c:	ldp	x29, x30, [sp], #80
  411ea0:	ret
  411ea4:	nop
  411ea8:	mov	w2, w1
  411eac:	mov	x1, #0xffffffffffffffff    	// #-1
  411eb0:	b	411e28 <wcrtomb@plt+0xf0e8>
  411eb4:	nop
  411eb8:	mov	w2, #0x3a                  	// #58
  411ebc:	mov	x1, #0xffffffffffffffff    	// #-1
  411ec0:	b	411e28 <wcrtomb@plt+0xf0e8>
  411ec4:	nop
  411ec8:	mov	w2, #0x3a                  	// #58
  411ecc:	b	411e28 <wcrtomb@plt+0xf0e8>
  411ed0:	stp	x29, x30, [sp, #-160]!
  411ed4:	mov	x29, sp
  411ed8:	add	x8, sp, #0x20
  411edc:	stp	x19, x20, [sp, #16]
  411ee0:	mov	x20, x2
  411ee4:	mov	w19, w0
  411ee8:	mov	w0, w1
  411eec:	bl	410640 <wcrtomb@plt+0xd900>
  411ef0:	ldp	x0, x1, [sp, #32]
  411ef4:	stp	x0, x1, [sp, #104]
  411ef8:	add	x3, sp, #0x68
  411efc:	ldr	w2, [sp, #116]
  411f00:	mov	x1, x20
  411f04:	ldp	x6, x7, [sp, #48]
  411f08:	mvn	w4, w2
  411f0c:	ldp	x8, x9, [sp, #64]
  411f10:	and	w4, w4, #0x4000000
  411f14:	ldr	x5, [sp, #80]
  411f18:	eor	w4, w4, w2
  411f1c:	mov	w0, w19
  411f20:	mov	x2, #0xffffffffffffffff    	// #-1
  411f24:	str	w4, [sp, #116]
  411f28:	stp	x6, x7, [sp, #120]
  411f2c:	stp	x8, x9, [sp, #136]
  411f30:	str	x5, [sp, #152]
  411f34:	bl	4117f0 <wcrtomb@plt+0xeab0>
  411f38:	ldp	x19, x20, [sp, #16]
  411f3c:	ldp	x29, x30, [sp], #160
  411f40:	ret
  411f44:	nop
  411f48:	adrp	x5, 438000 <_obstack_memory_used@@Base+0x253b0>
  411f4c:	add	x5, x5, #0x798
  411f50:	stp	x29, x30, [sp, #-80]!
  411f54:	mov	x6, x1
  411f58:	mov	w1, #0xa                   	// #10
  411f5c:	mov	x29, sp
  411f60:	ldp	x8, x9, [x5, #256]
  411f64:	stp	x8, x9, [sp, #24]
  411f68:	cmp	x6, #0x0
  411f6c:	str	w1, [sp, #24]
  411f70:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  411f74:	ldp	x10, x11, [x5, #272]
  411f78:	stp	x10, x11, [sp, #40]
  411f7c:	ldp	x8, x9, [x5, #288]
  411f80:	stp	x8, x9, [sp, #56]
  411f84:	ldr	x1, [x5, #304]
  411f88:	str	x1, [sp, #72]
  411f8c:	b.eq	411fb0 <wcrtomb@plt+0xf270>  // b.none
  411f90:	mov	x5, x2
  411f94:	mov	x1, x3
  411f98:	mov	x2, x4
  411f9c:	add	x3, sp, #0x18
  411fa0:	stp	x6, x5, [sp, #64]
  411fa4:	bl	4117f0 <wcrtomb@plt+0xeab0>
  411fa8:	ldp	x29, x30, [sp], #80
  411fac:	ret
  411fb0:	bl	4029e0 <abort@plt>
  411fb4:	nop
  411fb8:	mov	x4, #0xffffffffffffffff    	// #-1
  411fbc:	b	411f48 <wcrtomb@plt+0xf208>
  411fc0:	mov	x4, x1
  411fc4:	mov	x3, x2
  411fc8:	mov	x1, x0
  411fcc:	mov	x2, x4
  411fd0:	mov	w0, #0x0                   	// #0
  411fd4:	mov	x4, #0xffffffffffffffff    	// #-1
  411fd8:	b	411f48 <wcrtomb@plt+0xf208>
  411fdc:	nop
  411fe0:	mov	x4, x1
  411fe4:	mov	x5, x2
  411fe8:	mov	x1, x0
  411fec:	mov	x2, x4
  411ff0:	mov	w0, #0x0                   	// #0
  411ff4:	mov	x4, x3
  411ff8:	mov	x3, x5
  411ffc:	b	411f48 <wcrtomb@plt+0xf208>
  412000:	adrp	x3, 438000 <_obstack_memory_used@@Base+0x253b0>
  412004:	add	x3, x3, #0x480
  412008:	add	x3, x3, #0x20
  41200c:	b	4117f0 <wcrtomb@plt+0xeab0>
  412010:	adrp	x3, 438000 <_obstack_memory_used@@Base+0x253b0>
  412014:	add	x3, x3, #0x480
  412018:	mov	x2, x1
  41201c:	add	x3, x3, #0x20
  412020:	mov	x1, x0
  412024:	mov	w0, #0x0                   	// #0
  412028:	b	4117f0 <wcrtomb@plt+0xeab0>
  41202c:	nop
  412030:	adrp	x3, 438000 <_obstack_memory_used@@Base+0x253b0>
  412034:	add	x3, x3, #0x480
  412038:	add	x3, x3, #0x20
  41203c:	mov	x2, #0xffffffffffffffff    	// #-1
  412040:	b	4117f0 <wcrtomb@plt+0xeab0>
  412044:	nop
  412048:	adrp	x3, 438000 <_obstack_memory_used@@Base+0x253b0>
  41204c:	add	x3, x3, #0x480
  412050:	mov	x1, x0
  412054:	add	x3, x3, #0x20
  412058:	mov	x2, #0xffffffffffffffff    	// #-1
  41205c:	mov	w0, #0x0                   	// #0
  412060:	b	4117f0 <wcrtomb@plt+0xeab0>
  412064:	nop
  412068:	sub	sp, sp, #0x50
  41206c:	stp	x29, x30, [sp, #32]
  412070:	add	x29, sp, #0x20
  412074:	stp	x19, x20, [sp, #48]
  412078:	mov	x19, x5
  41207c:	mov	x20, x0
  412080:	str	x21, [sp, #64]
  412084:	mov	x5, x3
  412088:	mov	x21, x4
  41208c:	cbz	x1, 412290 <wcrtomb@plt+0xf550>
  412090:	mov	x4, x2
  412094:	mov	x3, x1
  412098:	adrp	x2, 421000 <_obstack_memory_used@@Base+0xe3b0>
  41209c:	mov	w1, #0x1                   	// #1
  4120a0:	add	x2, x2, #0xe00
  4120a4:	bl	402a90 <__fprintf_chk@plt>
  4120a8:	mov	w2, #0x5                   	// #5
  4120ac:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  4120b0:	mov	x0, #0x0                   	// #0
  4120b4:	add	x1, x1, #0xe18
  4120b8:	bl	402c20 <dcgettext@plt>
  4120bc:	mov	x3, x0
  4120c0:	adrp	x2, 422000 <_obstack_memory_used@@Base+0xf3b0>
  4120c4:	add	x2, x2, #0x128
  4120c8:	mov	w4, #0x7e4                 	// #2020
  4120cc:	mov	w1, #0x1                   	// #1
  4120d0:	mov	x0, x20
  4120d4:	bl	402a90 <__fprintf_chk@plt>
  4120d8:	mov	x1, x20
  4120dc:	mov	w0, #0xa                   	// #10
  4120e0:	bl	402bd0 <fputc_unlocked@plt>
  4120e4:	mov	w2, #0x5                   	// #5
  4120e8:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  4120ec:	mov	x0, #0x0                   	// #0
  4120f0:	add	x1, x1, #0xe20
  4120f4:	bl	402c20 <dcgettext@plt>
  4120f8:	mov	x2, x0
  4120fc:	adrp	x3, 421000 <_obstack_memory_used@@Base+0xe3b0>
  412100:	add	x3, x3, #0xed0
  412104:	mov	w1, #0x1                   	// #1
  412108:	mov	x0, x20
  41210c:	bl	402a90 <__fprintf_chk@plt>
  412110:	mov	x1, x20
  412114:	mov	w0, #0xa                   	// #10
  412118:	bl	402bd0 <fputc_unlocked@plt>
  41211c:	cmp	x19, #0x5
  412120:	b.eq	4122ac <wcrtomb@plt+0xf56c>  // b.none
  412124:	b.hi	412178 <wcrtomb@plt+0xf438>  // b.pmore
  412128:	cmp	x19, #0x2
  41212c:	b.eq	4122ec <wcrtomb@plt+0xf5ac>  // b.none
  412130:	b.ls	4121ec <wcrtomb@plt+0xf4ac>  // b.plast
  412134:	cmp	x19, #0x3
  412138:	b.eq	41236c <wcrtomb@plt+0xf62c>  // b.none
  41213c:	mov	w2, #0x5                   	// #5
  412140:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  412144:	mov	x0, #0x0                   	// #0
  412148:	add	x1, x1, #0xf40
  41214c:	bl	402c20 <dcgettext@plt>
  412150:	mov	x2, x0
  412154:	mov	x0, x20
  412158:	mov	w1, #0x1                   	// #1
  41215c:	ldp	x3, x4, [x21]
  412160:	ldp	x5, x6, [x21, #16]
  412164:	ldp	x29, x30, [sp, #32]
  412168:	ldp	x19, x20, [sp, #48]
  41216c:	ldr	x21, [sp, #64]
  412170:	add	sp, sp, #0x50
  412174:	b	402a90 <__fprintf_chk@plt>
  412178:	cmp	x19, #0x8
  41217c:	b.eq	4123a8 <wcrtomb@plt+0xf668>  // b.none
  412180:	b.ls	412230 <wcrtomb@plt+0xf4f0>  // b.plast
  412184:	cmp	x19, #0x9
  412188:	b.ne	41235c <wcrtomb@plt+0xf61c>  // b.any
  41218c:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xf3b0>
  412190:	add	x1, x1, #0x10
  412194:	mov	w2, #0x5                   	// #5
  412198:	mov	x0, #0x0                   	// #0
  41219c:	bl	402c20 <dcgettext@plt>
  4121a0:	ldp	x7, x8, [x21, #32]
  4121a4:	mov	x2, x0
  4121a8:	ldp	x3, x4, [x21]
  4121ac:	mov	x0, x20
  4121b0:	ldp	x5, x6, [x21, #16]
  4121b4:	str	x8, [sp]
  4121b8:	mov	w1, #0x1                   	// #1
  4121bc:	ldr	x8, [x21, #48]
  4121c0:	str	x8, [sp, #8]
  4121c4:	ldr	x8, [x21, #56]
  4121c8:	str	x8, [sp, #16]
  4121cc:	ldr	x8, [x21, #64]
  4121d0:	str	x8, [sp, #24]
  4121d4:	bl	402a90 <__fprintf_chk@plt>
  4121d8:	ldp	x29, x30, [sp, #32]
  4121dc:	ldp	x19, x20, [sp, #48]
  4121e0:	ldr	x21, [sp, #64]
  4121e4:	add	sp, sp, #0x50
  4121e8:	ret
  4121ec:	cbz	x19, 41227c <wcrtomb@plt+0xf53c>
  4121f0:	cmp	x19, #0x1
  4121f4:	b.ne	41235c <wcrtomb@plt+0xf61c>  // b.any
  4121f8:	mov	w2, #0x5                   	// #5
  4121fc:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  412200:	mov	x0, #0x0                   	// #0
  412204:	add	x1, x1, #0xef8
  412208:	bl	402c20 <dcgettext@plt>
  41220c:	mov	x2, x0
  412210:	mov	w1, w19
  412214:	mov	x0, x20
  412218:	ldp	x29, x30, [sp, #32]
  41221c:	ldp	x19, x20, [sp, #48]
  412220:	ldr	x3, [x21]
  412224:	ldr	x21, [sp, #64]
  412228:	add	sp, sp, #0x50
  41222c:	b	402a90 <__fprintf_chk@plt>
  412230:	cmp	x19, #0x6
  412234:	b.eq	412324 <wcrtomb@plt+0xf5e4>  // b.none
  412238:	cmp	x19, #0x7
  41223c:	b.ne	41235c <wcrtomb@plt+0xf61c>  // b.any
  412240:	mov	w2, #0x5                   	// #5
  412244:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  412248:	mov	x0, #0x0                   	// #0
  41224c:	add	x1, x1, #0xfb0
  412250:	bl	402c20 <dcgettext@plt>
  412254:	mov	x2, x0
  412258:	ldp	x7, x8, [x21, #32]
  41225c:	mov	x0, x20
  412260:	ldp	x3, x4, [x21]
  412264:	mov	w1, #0x1                   	// #1
  412268:	ldp	x5, x6, [x21, #16]
  41226c:	str	x8, [sp]
  412270:	ldr	x8, [x21, #48]
  412274:	str	x8, [sp, #8]
  412278:	bl	402a90 <__fprintf_chk@plt>
  41227c:	ldp	x29, x30, [sp, #32]
  412280:	ldp	x19, x20, [sp, #48]
  412284:	ldr	x21, [sp, #64]
  412288:	add	sp, sp, #0x50
  41228c:	ret
  412290:	mov	x4, x3
  412294:	mov	w1, #0x1                   	// #1
  412298:	mov	x3, x2
  41229c:	adrp	x2, 421000 <_obstack_memory_used@@Base+0xe3b0>
  4122a0:	add	x2, x2, #0xe10
  4122a4:	bl	402a90 <__fprintf_chk@plt>
  4122a8:	b	4120a8 <wcrtomb@plt+0xf368>
  4122ac:	mov	w2, w19
  4122b0:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  4122b4:	mov	x0, #0x0                   	// #0
  4122b8:	add	x1, x1, #0xf60
  4122bc:	bl	402c20 <dcgettext@plt>
  4122c0:	mov	x2, x0
  4122c4:	mov	x0, x20
  4122c8:	mov	w1, #0x1                   	// #1
  4122cc:	ldp	x3, x4, [x21]
  4122d0:	ldp	x5, x6, [x21, #16]
  4122d4:	ldp	x29, x30, [sp, #32]
  4122d8:	ldp	x19, x20, [sp, #48]
  4122dc:	ldr	x7, [x21, #32]
  4122e0:	ldr	x21, [sp, #64]
  4122e4:	add	sp, sp, #0x50
  4122e8:	b	402a90 <__fprintf_chk@plt>
  4122ec:	mov	w2, #0x5                   	// #5
  4122f0:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  4122f4:	mov	x0, #0x0                   	// #0
  4122f8:	add	x1, x1, #0xf08
  4122fc:	bl	402c20 <dcgettext@plt>
  412300:	mov	x2, x0
  412304:	mov	x0, x20
  412308:	mov	w1, #0x1                   	// #1
  41230c:	ldp	x3, x4, [x21]
  412310:	ldp	x29, x30, [sp, #32]
  412314:	ldp	x19, x20, [sp, #48]
  412318:	ldr	x21, [sp, #64]
  41231c:	add	sp, sp, #0x50
  412320:	b	402a90 <__fprintf_chk@plt>
  412324:	mov	w2, #0x5                   	// #5
  412328:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  41232c:	mov	x0, #0x0                   	// #0
  412330:	add	x1, x1, #0xf88
  412334:	bl	402c20 <dcgettext@plt>
  412338:	mov	x2, x0
  41233c:	ldp	x3, x4, [x21]
  412340:	mov	x0, x20
  412344:	ldp	x5, x6, [x21, #16]
  412348:	mov	w1, #0x1                   	// #1
  41234c:	ldp	x7, x8, [x21, #32]
  412350:	str	x8, [sp]
  412354:	bl	402a90 <__fprintf_chk@plt>
  412358:	b	41227c <wcrtomb@plt+0xf53c>
  41235c:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xf3b0>
  412360:	mov	w2, #0x5                   	// #5
  412364:	add	x1, x1, #0x48
  412368:	b	412198 <wcrtomb@plt+0xf458>
  41236c:	mov	w2, #0x5                   	// #5
  412370:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  412374:	mov	x0, #0x0                   	// #0
  412378:	add	x1, x1, #0xf20
  41237c:	bl	402c20 <dcgettext@plt>
  412380:	mov	x2, x0
  412384:	mov	x0, x20
  412388:	mov	w1, #0x1                   	// #1
  41238c:	ldp	x3, x4, [x21]
  412390:	ldp	x29, x30, [sp, #32]
  412394:	ldp	x19, x20, [sp, #48]
  412398:	ldr	x5, [x21, #16]
  41239c:	ldr	x21, [sp, #64]
  4123a0:	add	sp, sp, #0x50
  4123a4:	b	402a90 <__fprintf_chk@plt>
  4123a8:	mov	w2, #0x5                   	// #5
  4123ac:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  4123b0:	mov	x0, #0x0                   	// #0
  4123b4:	add	x1, x1, #0xfe0
  4123b8:	bl	402c20 <dcgettext@plt>
  4123bc:	mov	x2, x0
  4123c0:	ldp	x7, x8, [x21, #32]
  4123c4:	mov	x0, x20
  4123c8:	ldp	x3, x4, [x21]
  4123cc:	mov	w1, #0x1                   	// #1
  4123d0:	ldp	x5, x6, [x21, #16]
  4123d4:	str	x8, [sp]
  4123d8:	ldr	x8, [x21, #48]
  4123dc:	str	x8, [sp, #8]
  4123e0:	ldr	x8, [x21, #56]
  4123e4:	str	x8, [sp, #16]
  4123e8:	bl	402a90 <__fprintf_chk@plt>
  4123ec:	b	41227c <wcrtomb@plt+0xf53c>
  4123f0:	ldr	x5, [x4]
  4123f4:	cbz	x5, 412410 <wcrtomb@plt+0xf6d0>
  4123f8:	mov	x5, #0x0                   	// #0
  4123fc:	nop
  412400:	add	x5, x5, #0x1
  412404:	ldr	x6, [x4, x5, lsl #3]
  412408:	cbnz	x6, 412400 <wcrtomb@plt+0xf6c0>
  41240c:	b	412068 <wcrtomb@plt+0xf328>
  412410:	mov	x5, #0x0                   	// #0
  412414:	b	412068 <wcrtomb@plt+0xf328>
  412418:	stp	x29, x30, [sp, #-96]!
  41241c:	mov	x5, #0x0                   	// #0
  412420:	mov	x29, sp
  412424:	add	x8, sp, #0x10
  412428:	ldr	w7, [x4, #24]
  41242c:	ldp	x6, x11, [x4]
  412430:	b	412458 <wcrtomb@plt+0xf718>
  412434:	mov	x4, x6
  412438:	add	x8, x8, #0x8
  41243c:	and	x6, x10, #0xfffffffffffffff8
  412440:	ldr	x4, [x4]
  412444:	stur	x4, [x8, #-8]
  412448:	cbz	x4, 412488 <wcrtomb@plt+0xf748>
  41244c:	add	x5, x5, #0x1
  412450:	cmp	x5, #0xa
  412454:	b.eq	412488 <wcrtomb@plt+0xf748>  // b.none
  412458:	add	x10, x6, #0xf
  41245c:	add	w9, w7, #0x8
  412460:	tbz	w7, #31, 412434 <wcrtomb@plt+0xf6f4>
  412464:	add	x4, x11, w7, sxtw
  412468:	add	x10, x6, #0xf
  41246c:	mov	w7, w9
  412470:	cmp	w9, #0x0
  412474:	b.gt	412434 <wcrtomb@plt+0xf6f4>
  412478:	ldr	x4, [x4]
  41247c:	str	x4, [x8]
  412480:	add	x8, x8, #0x8
  412484:	cbnz	x4, 41244c <wcrtomb@plt+0xf70c>
  412488:	add	x4, sp, #0x10
  41248c:	bl	412068 <wcrtomb@plt+0xf328>
  412490:	ldp	x29, x30, [sp], #96
  412494:	ret
  412498:	stp	x29, x30, [sp, #-288]!
  41249c:	mov	w12, #0xffffffe0            	// #-32
  4124a0:	mov	w13, #0xffffff80            	// #-128
  4124a4:	mov	x29, sp
  4124a8:	add	x14, sp, #0x100
  4124ac:	add	x11, sp, #0x120
  4124b0:	add	x9, sp, #0x30
  4124b4:	mov	w8, w12
  4124b8:	mov	x10, #0x0                   	// #0
  4124bc:	stp	x11, x11, [sp, #16]
  4124c0:	str	x14, [sp, #32]
  4124c4:	stp	w12, w13, [sp, #40]
  4124c8:	str	q0, [sp, #128]
  4124cc:	str	q1, [sp, #144]
  4124d0:	str	q2, [sp, #160]
  4124d4:	str	q3, [sp, #176]
  4124d8:	str	q4, [sp, #192]
  4124dc:	str	q5, [sp, #208]
  4124e0:	str	q6, [sp, #224]
  4124e4:	str	q7, [sp, #240]
  4124e8:	stp	x4, x5, [sp, #256]
  4124ec:	stp	x6, x7, [sp, #272]
  4124f0:	b	412518 <wcrtomb@plt+0xf7d8>
  4124f4:	mov	x4, x11
  4124f8:	add	x9, x9, #0x8
  4124fc:	add	x11, x11, #0x8
  412500:	ldr	x4, [x4]
  412504:	stur	x4, [x9, #-8]
  412508:	cbz	x4, 412544 <wcrtomb@plt+0xf804>
  41250c:	add	x10, x10, #0x1
  412510:	cmp	x10, #0xa
  412514:	b.eq	412544 <wcrtomb@plt+0xf804>  // b.none
  412518:	add	w5, w8, #0x8
  41251c:	tbz	w8, #31, 4124f4 <wcrtomb@plt+0xf7b4>
  412520:	add	x4, sp, #0x120
  412524:	cmp	w5, #0x0
  412528:	add	x4, x4, w8, sxtw
  41252c:	mov	w8, w5
  412530:	b.gt	4124f4 <wcrtomb@plt+0xf7b4>
  412534:	ldr	x4, [x4]
  412538:	str	x4, [x9]
  41253c:	add	x9, x9, #0x8
  412540:	cbnz	x4, 41250c <wcrtomb@plt+0xf7cc>
  412544:	add	x4, sp, #0x30
  412548:	mov	x5, x10
  41254c:	bl	412068 <wcrtomb@plt+0xf328>
  412550:	ldp	x29, x30, [sp], #288
  412554:	ret
  412558:	stp	x29, x30, [sp, #-16]!
  41255c:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  412560:	mov	w0, #0xa                   	// #10
  412564:	mov	x29, sp
  412568:	ldr	x1, [x1, #1288]
  41256c:	bl	402bd0 <fputc_unlocked@plt>
  412570:	mov	w2, #0x5                   	// #5
  412574:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xf3b0>
  412578:	mov	x0, #0x0                   	// #0
  41257c:	add	x1, x1, #0x88
  412580:	bl	402c20 <dcgettext@plt>
  412584:	mov	x1, x0
  412588:	adrp	x2, 420000 <_obstack_memory_used@@Base+0xd3b0>
  41258c:	mov	w0, #0x1                   	// #1
  412590:	add	x2, x2, #0x780
  412594:	bl	4028b0 <__printf_chk@plt>
  412598:	mov	w2, #0x5                   	// #5
  41259c:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xf3b0>
  4125a0:	mov	x0, #0x0                   	// #0
  4125a4:	add	x1, x1, #0xa0
  4125a8:	bl	402c20 <dcgettext@plt>
  4125ac:	mov	x1, x0
  4125b0:	adrp	x3, 422000 <_obstack_memory_used@@Base+0xf3b0>
  4125b4:	add	x3, x3, #0xb8
  4125b8:	adrp	x2, 420000 <_obstack_memory_used@@Base+0xd3b0>
  4125bc:	mov	w0, #0x1                   	// #1
  4125c0:	add	x2, x2, #0xef8
  4125c4:	bl	4028b0 <__printf_chk@plt>
  4125c8:	mov	w2, #0x5                   	// #5
  4125cc:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xf3b0>
  4125d0:	mov	x0, #0x0                   	// #0
  4125d4:	add	x1, x1, #0xe0
  4125d8:	bl	402c20 <dcgettext@plt>
  4125dc:	mov	x1, x0
  4125e0:	ldp	x29, x30, [sp], #16
  4125e4:	adrp	x2, 422000 <_obstack_memory_used@@Base+0xf3b0>
  4125e8:	mov	w0, #0x1                   	// #1
  4125ec:	add	x2, x2, #0x108
  4125f0:	b	4028b0 <__printf_chk@plt>
  4125f4:	nop
  4125f8:	stp	x29, x30, [sp, #-32]!
  4125fc:	mov	x29, sp
  412600:	str	x19, [sp, #16]
  412604:	mov	x19, x0
  412608:	bl	402800 <malloc@plt>
  41260c:	cmp	x0, #0x0
  412610:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  412614:	b.ne	412624 <wcrtomb@plt+0xf8e4>  // b.any
  412618:	ldr	x19, [sp, #16]
  41261c:	ldp	x29, x30, [sp], #32
  412620:	ret
  412624:	bl	412830 <wcrtomb@plt+0xfaf0>
  412628:	umulh	x2, x0, x1
  41262c:	mul	x0, x0, x1
  412630:	cmp	x2, #0x0
  412634:	cset	x1, ne  // ne = any
  412638:	tbnz	x0, #63, 412644 <wcrtomb@plt+0xf904>
  41263c:	cbnz	x1, 412644 <wcrtomb@plt+0xf904>
  412640:	b	4125f8 <wcrtomb@plt+0xf8b8>
  412644:	stp	x29, x30, [sp, #-16]!
  412648:	mov	x29, sp
  41264c:	bl	412830 <wcrtomb@plt+0xfaf0>
  412650:	b	4125f8 <wcrtomb@plt+0xf8b8>
  412654:	nop
  412658:	stp	x29, x30, [sp, #-32]!
  41265c:	cmp	x1, #0x0
  412660:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  412664:	mov	x29, sp
  412668:	b.ne	412690 <wcrtomb@plt+0xf950>  // b.any
  41266c:	str	x19, [sp, #16]
  412670:	mov	x19, x1
  412674:	bl	402930 <realloc@plt>
  412678:	cmp	x0, #0x0
  41267c:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  412680:	b.ne	4126a0 <wcrtomb@plt+0xf960>  // b.any
  412684:	ldr	x19, [sp, #16]
  412688:	ldp	x29, x30, [sp], #32
  41268c:	ret
  412690:	bl	402ae0 <free@plt>
  412694:	mov	x0, #0x0                   	// #0
  412698:	ldp	x29, x30, [sp], #32
  41269c:	ret
  4126a0:	bl	412830 <wcrtomb@plt+0xfaf0>
  4126a4:	nop
  4126a8:	umulh	x3, x1, x2
  4126ac:	mul	x1, x1, x2
  4126b0:	cmp	x3, #0x0
  4126b4:	cset	x2, ne  // ne = any
  4126b8:	tbnz	x1, #63, 4126c4 <wcrtomb@plt+0xf984>
  4126bc:	cbnz	x2, 4126c4 <wcrtomb@plt+0xf984>
  4126c0:	b	412658 <wcrtomb@plt+0xf918>
  4126c4:	stp	x29, x30, [sp, #-16]!
  4126c8:	mov	x29, sp
  4126cc:	bl	412830 <wcrtomb@plt+0xfaf0>
  4126d0:	mov	x4, x1
  4126d4:	ldr	x3, [x1]
  4126d8:	cbz	x0, 412704 <wcrtomb@plt+0xf9c4>
  4126dc:	mov	x1, #0x5555555555555555    	// #6148914691236517205
  4126e0:	movk	x1, #0x5554
  4126e4:	udiv	x1, x1, x2
  4126e8:	cmp	x1, x3
  4126ec:	b.ls	412720 <wcrtomb@plt+0xf9e0>  // b.plast
  4126f0:	add	x1, x3, #0x1
  4126f4:	add	x3, x1, x3, lsr #1
  4126f8:	mul	x1, x3, x2
  4126fc:	str	x3, [x4]
  412700:	b	412658 <wcrtomb@plt+0xf918>
  412704:	cbz	x3, 41272c <wcrtomb@plt+0xf9ec>
  412708:	umulh	x5, x3, x2
  41270c:	mul	x1, x3, x2
  412710:	cmp	x5, #0x0
  412714:	cset	x2, ne  // ne = any
  412718:	tbnz	x1, #63, 412720 <wcrtomb@plt+0xf9e0>
  41271c:	cbz	x2, 4126fc <wcrtomb@plt+0xf9bc>
  412720:	stp	x29, x30, [sp, #-16]!
  412724:	mov	x29, sp
  412728:	bl	412830 <wcrtomb@plt+0xfaf0>
  41272c:	mov	x3, #0x80                  	// #128
  412730:	cmp	x2, x3
  412734:	udiv	x3, x3, x2
  412738:	cinc	x3, x3, hi  // hi = pmore
  41273c:	b	412708 <wcrtomb@plt+0xf9c8>
  412740:	mov	x2, x1
  412744:	ldr	x1, [x1]
  412748:	cbz	x0, 41276c <wcrtomb@plt+0xfa2c>
  41274c:	mov	x3, #0x5555555555555555    	// #6148914691236517205
  412750:	movk	x3, #0x5553
  412754:	cmp	x1, x3
  412758:	b.hi	412784 <wcrtomb@plt+0xfa44>  // b.pmore
  41275c:	add	x3, x1, #0x1
  412760:	add	x1, x3, x1, lsr #1
  412764:	str	x1, [x2]
  412768:	b	412658 <wcrtomb@plt+0xf918>
  41276c:	cmp	x1, #0x0
  412770:	cbnz	x1, 412780 <wcrtomb@plt+0xfa40>
  412774:	mov	x1, #0x80                  	// #128
  412778:	str	x1, [x2]
  41277c:	b	412658 <wcrtomb@plt+0xf918>
  412780:	b.ge	412764 <wcrtomb@plt+0xfa24>  // b.tcont
  412784:	stp	x29, x30, [sp, #-16]!
  412788:	mov	x29, sp
  41278c:	bl	412830 <wcrtomb@plt+0xfaf0>
  412790:	umulh	x4, x0, x1
  412794:	stp	x29, x30, [sp, #-16]!
  412798:	mul	x2, x0, x1
  41279c:	cmp	x4, #0x0
  4127a0:	mov	x29, sp
  4127a4:	cset	x3, ne  // ne = any
  4127a8:	tbnz	x2, #63, 4127c0 <wcrtomb@plt+0xfa80>
  4127ac:	cbnz	x3, 4127c0 <wcrtomb@plt+0xfa80>
  4127b0:	bl	402910 <calloc@plt>
  4127b4:	cbz	x0, 4127c0 <wcrtomb@plt+0xfa80>
  4127b8:	ldp	x29, x30, [sp], #16
  4127bc:	ret
  4127c0:	bl	412830 <wcrtomb@plt+0xfaf0>
  4127c4:	nop
  4127c8:	mov	x1, #0x1                   	// #1
  4127cc:	b	412790 <wcrtomb@plt+0xfa50>
  4127d0:	stp	x29, x30, [sp, #-32]!
  4127d4:	mov	x29, sp
  4127d8:	stp	x19, x20, [sp, #16]
  4127dc:	mov	x19, x1
  4127e0:	mov	x20, x0
  4127e4:	mov	x0, x1
  4127e8:	bl	4125f8 <wcrtomb@plt+0xf8b8>
  4127ec:	mov	x2, x19
  4127f0:	mov	x1, x20
  4127f4:	ldp	x19, x20, [sp, #16]
  4127f8:	ldp	x29, x30, [sp], #32
  4127fc:	b	402650 <memcpy@plt>
  412800:	stp	x29, x30, [sp, #-32]!
  412804:	mov	x29, sp
  412808:	str	x19, [sp, #16]
  41280c:	mov	x19, x0
  412810:	bl	402690 <strlen@plt>
  412814:	mov	x1, x0
  412818:	mov	x0, x19
  41281c:	add	x1, x1, #0x1
  412820:	ldr	x19, [sp, #16]
  412824:	ldp	x29, x30, [sp], #32
  412828:	b	4127d0 <wcrtomb@plt+0xfa90>
  41282c:	nop
  412830:	stp	x29, x30, [sp, #-32]!
  412834:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  412838:	mov	w2, #0x5                   	// #5
  41283c:	mov	x29, sp
  412840:	str	x19, [sp, #16]
  412844:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xf3b0>
  412848:	ldr	w19, [x0, #1248]
  41284c:	add	x1, x1, #0x158
  412850:	mov	x0, #0x0                   	// #0
  412854:	bl	402c20 <dcgettext@plt>
  412858:	adrp	x2, 421000 <_obstack_memory_used@@Base+0xe3b0>
  41285c:	mov	x3, x0
  412860:	add	x2, x2, #0x368
  412864:	mov	w0, w19
  412868:	mov	w1, #0x0                   	// #0
  41286c:	bl	4026d0 <error@plt>
  412870:	bl	4029e0 <abort@plt>
  412874:	nop
  412878:	stp	x29, x30, [sp, #-64]!
  41287c:	cmp	x0, #0x0
  412880:	add	x4, sp, #0x3c
  412884:	mov	x29, sp
  412888:	stp	x19, x20, [sp, #16]
  41288c:	csel	x19, x4, x0, eq  // eq = none
  412890:	mov	x20, x2
  412894:	mov	x0, x19
  412898:	str	x21, [sp, #32]
  41289c:	mov	x21, x1
  4128a0:	bl	402640 <mbrtowc@plt>
  4128a4:	cmp	x20, #0x0
  4128a8:	mov	x20, x0
  4128ac:	ccmn	x0, #0x3, #0x0, ne  // ne = any
  4128b0:	b.hi	4128c8 <wcrtomb@plt+0xfb88>  // b.pmore
  4128b4:	mov	x0, x20
  4128b8:	ldp	x19, x20, [sp, #16]
  4128bc:	ldr	x21, [sp, #32]
  4128c0:	ldp	x29, x30, [sp], #64
  4128c4:	ret
  4128c8:	mov	w0, #0x0                   	// #0
  4128cc:	bl	41fa30 <_obstack_memory_used@@Base+0xcde0>
  4128d0:	tst	w0, #0xff
  4128d4:	b.ne	4128b4 <wcrtomb@plt+0xfb74>  // b.any
  4128d8:	ldrb	w0, [x21]
  4128dc:	mov	x20, #0x1                   	// #1
  4128e0:	str	w0, [x19]
  4128e4:	mov	x0, x20
  4128e8:	ldp	x19, x20, [sp, #16]
  4128ec:	ldr	x21, [sp, #32]
  4128f0:	ldp	x29, x30, [sp], #64
  4128f4:	ret
  4128f8:	stp	x29, x30, [sp, #-32]!
  4128fc:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  412900:	mov	w2, #0x5                   	// #5
  412904:	mov	x29, sp
  412908:	str	x19, [sp, #16]
  41290c:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xf3b0>
  412910:	ldr	x19, [x0, #1264]
  412914:	add	x1, x1, #0x158
  412918:	mov	x0, #0x0                   	// #0
  41291c:	bl	402c20 <dcgettext@plt>
  412920:	adrp	x2, 421000 <_obstack_memory_used@@Base+0xe3b0>
  412924:	mov	x3, x0
  412928:	add	x2, x2, #0xe08
  41292c:	mov	x0, x19
  412930:	mov	w1, #0x1                   	// #1
  412934:	bl	402a90 <__fprintf_chk@plt>
  412938:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  41293c:	ldr	w0, [x0, #1248]
  412940:	bl	4026c0 <exit@plt>
  412944:	nop
  412948:	mov	x2, x0
  41294c:	mov	x0, x1
  412950:	ldrb	w4, [x2, #80]
  412954:	ldr	x3, [x2, #56]
  412958:	tbz	w4, #0, 412968 <wcrtomb@plt+0xfc28>
  41295c:	ldr	x0, [x2, #72]
  412960:	mov	x16, x3
  412964:	br	x16
  412968:	mov	x16, x3
  41296c:	br	x16
  412970:	mov	x2, x0
  412974:	mov	x0, x1
  412978:	ldrb	w4, [x2, #80]
  41297c:	ldr	x3, [x2, #64]
  412980:	tbz	w4, #0, 412990 <wcrtomb@plt+0xfc50>
  412984:	ldr	x0, [x2, #72]
  412988:	mov	x16, x3
  41298c:	br	x16
  412990:	mov	x16, x3
  412994:	br	x16
  412998:	stp	x29, x30, [sp, #-48]!
  41299c:	mov	x29, sp
  4129a0:	stp	x19, x20, [sp, #16]
  4129a4:	mov	x19, x0
  4129a8:	str	x21, [sp, #32]
  4129ac:	cbz	x2, 412a28 <wcrtomb@plt+0xfce8>
  4129b0:	mov	x20, x2
  4129b4:	sub	x21, x2, #0x1
  4129b8:	cmp	x1, #0x0
  4129bc:	mov	x0, #0xfe0                 	// #4064
  4129c0:	csel	x1, x1, x0, ne  // ne = any
  4129c4:	str	x1, [x19]
  4129c8:	str	x21, [x19, #48]
  4129cc:	mov	x0, x19
  4129d0:	bl	412948 <wcrtomb@plt+0xfc08>
  4129d4:	str	x0, [x19, #8]
  4129d8:	mov	x1, x0
  4129dc:	cbz	x0, 412a34 <wcrtomb@plt+0xfcf4>
  4129e0:	add	x2, x0, #0x10
  4129e4:	neg	x20, x20
  4129e8:	ldr	x0, [x19]
  4129ec:	add	x2, x2, x21
  4129f0:	and	x20, x2, x20
  4129f4:	ldr	x21, [sp, #32]
  4129f8:	stp	x20, x20, [x19, #16]
  4129fc:	add	x2, x1, x0
  412a00:	str	x2, [x1]
  412a04:	mov	w0, #0x1                   	// #1
  412a08:	str	x2, [x19, #32]
  412a0c:	ldrb	w2, [x19, #80]
  412a10:	str	xzr, [x1, #8]
  412a14:	and	w1, w2, #0xfffffff9
  412a18:	strb	w1, [x19, #80]
  412a1c:	ldp	x19, x20, [sp, #16]
  412a20:	ldp	x29, x30, [sp], #48
  412a24:	ret
  412a28:	mov	x21, #0xf                   	// #15
  412a2c:	mov	x20, #0x10                  	// #16
  412a30:	b	4129b8 <wcrtomb@plt+0xfc78>
  412a34:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  412a38:	ldr	x0, [x0, #1240]
  412a3c:	blr	x0

0000000000412a40 <_obstack_begin@@Base>:
  412a40:	ldrb	w6, [x0, #80]
  412a44:	stp	x3, x4, [x0, #56]
  412a48:	and	w6, w6, #0xfffffffe
  412a4c:	strb	w6, [x0, #80]
  412a50:	b	412998 <wcrtomb@plt+0xfc58>
  412a54:	nop

0000000000412a58 <_obstack_begin_1@@Base>:
  412a58:	ldrb	w7, [x0, #80]
  412a5c:	stp	x3, x4, [x0, #56]
  412a60:	orr	w7, w7, #0x1
  412a64:	str	x5, [x0, #72]
  412a68:	strb	w7, [x0, #80]
  412a6c:	b	412998 <wcrtomb@plt+0xfc58>

0000000000412a70 <_obstack_newchunk@@Base>:
  412a70:	stp	x29, x30, [sp, #-64]!
  412a74:	mov	x29, sp
  412a78:	stp	x21, x22, [sp, #32]
  412a7c:	ldp	x2, x21, [x0, #16]
  412a80:	stp	x19, x20, [sp, #16]
  412a84:	ldr	x4, [x0, #48]
  412a88:	ldr	x3, [x0]
  412a8c:	sub	x21, x21, x2
  412a90:	adds	x1, x21, x1
  412a94:	str	x23, [sp, #48]
  412a98:	cset	x2, cs  // cs = hs, nlast
  412a9c:	lsr	x20, x21, #3
  412aa0:	adds	x4, x4, x1
  412aa4:	add	x20, x20, #0x64
  412aa8:	cset	x1, cs  // cs = hs, nlast
  412aac:	cmp	x3, x4
  412ab0:	csel	x3, x3, x4, cs  // cs = hs, nlast
  412ab4:	add	x4, x20, x4
  412ab8:	cmp	x3, x4
  412abc:	csel	x20, x3, x4, cs  // cs = hs, nlast
  412ac0:	cmp	x2, #0x0
  412ac4:	ccmp	x1, #0x0, #0x0, eq  // eq = none
  412ac8:	ldr	x23, [x0, #8]
  412acc:	b.ne	412b78 <_obstack_newchunk@@Base+0x108>  // b.any
  412ad0:	mov	x19, x0
  412ad4:	mov	x1, x20
  412ad8:	bl	412948 <wcrtomb@plt+0xfc08>
  412adc:	mov	x22, x0
  412ae0:	cbz	x0, 412b78 <_obstack_newchunk@@Base+0x108>
  412ae4:	str	x0, [x19, #8]
  412ae8:	add	x3, x0, x20
  412aec:	ldr	x1, [x19, #16]
  412af0:	mov	x2, x21
  412af4:	ldr	x20, [x19, #48]
  412af8:	str	x23, [x0, #8]
  412afc:	str	x3, [x19, #32]
  412b00:	str	x3, [x0], #16
  412b04:	add	x0, x0, x20
  412b08:	bic	x20, x0, x20
  412b0c:	mov	x0, x20
  412b10:	bl	402650 <memcpy@plt>
  412b14:	ldrb	w0, [x19, #80]
  412b18:	tbnz	w0, #1, 412b38 <_obstack_newchunk@@Base+0xc8>
  412b1c:	ldr	x1, [x19, #48]
  412b20:	add	x0, x23, #0x10
  412b24:	ldr	x2, [x19, #16]
  412b28:	add	x0, x0, x1
  412b2c:	bic	x0, x0, x1
  412b30:	cmp	x2, x0
  412b34:	b.eq	412b60 <_obstack_newchunk@@Base+0xf0>  // b.none
  412b38:	ldrb	w0, [x19, #80]
  412b3c:	add	x21, x20, x21
  412b40:	ldr	x23, [sp, #48]
  412b44:	and	w0, w0, #0xfffffffd
  412b48:	stp	x20, x21, [x19, #16]
  412b4c:	strb	w0, [x19, #80]
  412b50:	ldp	x19, x20, [sp, #16]
  412b54:	ldp	x21, x22, [sp, #32]
  412b58:	ldp	x29, x30, [sp], #64
  412b5c:	ret
  412b60:	ldr	x0, [x23, #8]
  412b64:	str	x0, [x22, #8]
  412b68:	mov	x1, x23
  412b6c:	mov	x0, x19
  412b70:	bl	412970 <wcrtomb@plt+0xfc30>
  412b74:	b	412b38 <_obstack_newchunk@@Base+0xc8>
  412b78:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x253b0>
  412b7c:	ldr	x0, [x0, #1240]
  412b80:	blr	x0
  412b84:	nop

0000000000412b88 <_obstack_allocated_p@@Base>:
  412b88:	ldr	x0, [x0, #8]
  412b8c:	cbz	x0, 412bb0 <_obstack_allocated_p@@Base+0x28>
  412b90:	cmp	x1, x0
  412b94:	b.ls	412ba4 <_obstack_allocated_p@@Base+0x1c>  // b.plast
  412b98:	ldr	x2, [x0]
  412b9c:	cmp	x2, x1
  412ba0:	b.cs	412bb4 <_obstack_allocated_p@@Base+0x2c>  // b.hs, b.nlast
  412ba4:	ldr	x0, [x0, #8]
  412ba8:	cbnz	x0, 412b90 <_obstack_allocated_p@@Base+0x8>
  412bac:	mov	w0, #0x0                   	// #0
  412bb0:	ret
  412bb4:	mov	w0, #0x1                   	// #1
  412bb8:	ret
  412bbc:	nop

0000000000412bc0 <_obstack_free@@Base>:
  412bc0:	stp	x29, x30, [sp, #-48]!
  412bc4:	mov	x29, sp
  412bc8:	str	x21, [sp, #32]
  412bcc:	mov	x21, x1
  412bd0:	ldr	x1, [x0, #8]
  412bd4:	cbz	x1, 412c1c <_obstack_free@@Base+0x5c>
  412bd8:	stp	x19, x20, [sp, #16]
  412bdc:	mov	x20, x0
  412be0:	b	412be8 <_obstack_free@@Base+0x28>
  412be4:	mov	x1, x19
  412be8:	cmp	x1, x21
  412bec:	b.cs	412bfc <_obstack_free@@Base+0x3c>  // b.hs, b.nlast
  412bf0:	ldr	x0, [x1]
  412bf4:	cmp	x0, x21
  412bf8:	b.cs	412c2c <_obstack_free@@Base+0x6c>  // b.hs, b.nlast
  412bfc:	mov	x0, x20
  412c00:	ldr	x19, [x1, #8]
  412c04:	bl	412970 <wcrtomb@plt+0xfc30>
  412c08:	ldrb	w2, [x20, #80]
  412c0c:	orr	w2, w2, #0x2
  412c10:	strb	w2, [x20, #80]
  412c14:	cbnz	x19, 412be4 <_obstack_free@@Base+0x24>
  412c18:	ldp	x19, x20, [sp, #16]
  412c1c:	cbnz	x21, 412c44 <_obstack_free@@Base+0x84>
  412c20:	ldr	x21, [sp, #32]
  412c24:	ldp	x29, x30, [sp], #48
  412c28:	ret
  412c2c:	stp	x1, x21, [x20, #8]
  412c30:	stp	x21, x0, [x20, #24]
  412c34:	ldp	x19, x20, [sp, #16]
  412c38:	ldr	x21, [sp, #32]
  412c3c:	ldp	x29, x30, [sp], #48
  412c40:	ret
  412c44:	stp	x19, x20, [sp, #16]
  412c48:	bl	4029e0 <abort@plt>
  412c4c:	nop

0000000000412c50 <_obstack_memory_used@@Base>:
  412c50:	ldr	x1, [x0, #8]
  412c54:	mov	x0, #0x0                   	// #0
  412c58:	cbz	x1, 412c74 <_obstack_memory_used@@Base+0x24>
  412c5c:	nop
  412c60:	ldr	x2, [x1]
  412c64:	sub	x2, x2, x1
  412c68:	ldr	x1, [x1, #8]
  412c6c:	add	x0, x0, x2
  412c70:	cbnz	x1, 412c60 <_obstack_memory_used@@Base+0x10>
  412c74:	ret
  412c78:	cmp	x0, #0x0
  412c7c:	mov	x3, x0
  412c80:	cset	w0, eq  // eq = none
  412c84:	cmp	x1, #0x0
  412c88:	csinc	w0, w0, wzr, ne  // ne = any
  412c8c:	cbnz	w0, 412ccc <_obstack_memory_used@@Base+0x7c>
  412c90:	ldr	x4, [x1, #8]
  412c94:	ldr	x2, [x3, #8]
  412c98:	cmp	x2, x4
  412c9c:	b.eq	412cbc <_obstack_memory_used@@Base+0x6c>  // b.none
  412ca0:	ret
  412ca4:	ldr	x4, [x1, #16]
  412ca8:	ldr	x5, [x3, #16]
  412cac:	ldr	x4, [x4, x2, lsl #3]
  412cb0:	ldr	x5, [x5, x2, lsl #3]
  412cb4:	cmp	x5, x4
  412cb8:	b.ne	412ca0 <_obstack_memory_used@@Base+0x50>  // b.any
  412cbc:	subs	x2, x2, #0x1
  412cc0:	b.pl	412ca4 <_obstack_memory_used@@Base+0x54>  // b.nfrst
  412cc4:	mov	w0, #0x1                   	// #1
  412cc8:	ret
  412ccc:	mov	w0, #0x0                   	// #0
  412cd0:	ret
  412cd4:	nop
  412cd8:	mov	x3, x0
  412cdc:	ldr	x0, [x1, #72]
  412ce0:	ldr	x4, [x1, #104]
  412ce4:	cmp	x4, x0
  412ce8:	b.le	412d8c <_obstack_memory_used@@Base+0x13c>
  412cec:	ldr	x5, [x1, #8]
  412cf0:	ldr	w6, [x1, #144]
  412cf4:	ldrb	w4, [x5, x0]
  412cf8:	cmp	w6, #0x1
  412cfc:	strb	w4, [x3]
  412d00:	b.le	412d20 <_obstack_memory_used@@Base+0xd0>
  412d04:	ldr	x6, [x1, #48]
  412d08:	cmp	x0, x6
  412d0c:	b.eq	412d20 <_obstack_memory_used@@Base+0xd0>  // b.none
  412d10:	ldr	x6, [x1, #16]
  412d14:	ldr	w6, [x6, x0, lsl #2]
  412d18:	cmn	w6, #0x1
  412d1c:	b.eq	412d64 <_obstack_memory_used@@Base+0x114>  // b.none
  412d20:	cmp	w4, #0x5c
  412d24:	b.eq	412d50 <_obstack_memory_used@@Base+0x100>  // b.none
  412d28:	cmp	w4, #0x5b
  412d2c:	b.eq	412d9c <_obstack_memory_used@@Base+0x14c>  // b.none
  412d30:	cmp	w4, #0x5d
  412d34:	b.eq	412de8 <_obstack_memory_used@@Base+0x198>  // b.none
  412d38:	cmp	w4, #0x5e
  412d3c:	b.ne	412d74 <_obstack_memory_used@@Base+0x124>  // b.any
  412d40:	mov	w1, #0x19                  	// #25
  412d44:	mov	w0, #0x1                   	// #1
  412d48:	strb	w1, [x3, #8]
  412d4c:	ret
  412d50:	tbz	w2, #0, 412d64 <_obstack_memory_used@@Base+0x114>
  412d54:	ldr	x4, [x1, #88]
  412d58:	add	x2, x0, #0x1
  412d5c:	cmp	x2, x4
  412d60:	b.lt	412df8 <_obstack_memory_used@@Base+0x1a8>  // b.tstop
  412d64:	mov	w1, #0x1                   	// #1
  412d68:	mov	w0, #0x1                   	// #1
  412d6c:	strb	w1, [x3, #8]
  412d70:	ret
  412d74:	cmp	w4, #0x2d
  412d78:	b.ne	412d64 <_obstack_memory_used@@Base+0x114>  // b.any
  412d7c:	mov	w1, #0x16                  	// #22
  412d80:	mov	w0, #0x1                   	// #1
  412d84:	strb	w1, [x3, #8]
  412d88:	ret
  412d8c:	mov	w1, #0x2                   	// #2
  412d90:	mov	w0, #0x0                   	// #0
  412d94:	strb	w1, [x3, #8]
  412d98:	ret
  412d9c:	ldr	x1, [x1, #88]
  412da0:	add	x4, x0, #0x1
  412da4:	cmp	x4, x1
  412da8:	b.ge	412dd0 <_obstack_memory_used@@Base+0x180>  // b.tcont
  412dac:	add	x0, x5, x0
  412db0:	ldrb	w0, [x0, #1]
  412db4:	strb	w0, [x3]
  412db8:	cmp	w0, #0x3a
  412dbc:	b.eq	412e34 <_obstack_memory_used@@Base+0x1e4>  // b.none
  412dc0:	cmp	w0, #0x3d
  412dc4:	b.eq	412e24 <_obstack_memory_used@@Base+0x1d4>  // b.none
  412dc8:	cmp	w0, #0x2e
  412dcc:	b.eq	412e14 <_obstack_memory_used@@Base+0x1c4>  // b.none
  412dd0:	mov	w1, #0x1                   	// #1
  412dd4:	mov	w2, #0x5b                  	// #91
  412dd8:	mov	w0, #0x1                   	// #1
  412ddc:	strb	w2, [x3]
  412de0:	strb	w1, [x3, #8]
  412de4:	ret
  412de8:	mov	w1, #0x15                  	// #21
  412dec:	mov	w0, #0x1                   	// #1
  412df0:	strb	w1, [x3, #8]
  412df4:	ret
  412df8:	str	x2, [x1, #72]
  412dfc:	mov	w0, #0x1                   	// #1
  412e00:	mov	w1, #0x1                   	// #1
  412e04:	ldrb	w2, [x5, x2]
  412e08:	strb	w2, [x3]
  412e0c:	strb	w1, [x3, #8]
  412e10:	ret
  412e14:	mov	w1, #0x1a                  	// #26
  412e18:	mov	w0, #0x2                   	// #2
  412e1c:	strb	w1, [x3, #8]
  412e20:	ret
  412e24:	mov	w1, #0x1c                  	// #28
  412e28:	mov	w0, #0x2                   	// #2
  412e2c:	strb	w1, [x3, #8]
  412e30:	ret
  412e34:	tbz	w2, #2, 412dd0 <_obstack_memory_used@@Base+0x180>
  412e38:	mov	w1, #0x1e                  	// #30
  412e3c:	mov	w0, #0x2                   	// #2
  412e40:	strb	w1, [x3, #8]
  412e44:	ret
  412e48:	ldrb	w2, [x1, #48]
  412e4c:	cmp	w2, #0x11
  412e50:	b.eq	412e5c <_obstack_memory_used@@Base+0x20c>  // b.none
  412e54:	mov	w0, #0x0                   	// #0
  412e58:	ret
  412e5c:	ldr	x2, [x1, #40]
  412e60:	cmp	x0, x2
  412e64:	b.ne	412e54 <_obstack_memory_used@@Base+0x204>  // b.any
  412e68:	ldrb	w0, [x1, #50]
  412e6c:	orr	w0, w0, #0x8
  412e70:	strb	w0, [x1, #50]
  412e74:	mov	w0, #0x0                   	// #0
  412e78:	ret
  412e7c:	nop
  412e80:	stp	x29, x30, [sp, #-144]!
  412e84:	mov	x12, x0
  412e88:	add	x9, x3, x3, lsl #1
  412e8c:	mov	x29, sp
  412e90:	stp	x23, x24, [sp, #48]
  412e94:	ldr	x24, [x0, #152]
  412e98:	stp	x21, x22, [sp, #32]
  412e9c:	stp	x25, x26, [sp, #64]
  412ea0:	mov	w26, w1
  412ea4:	ldr	x0, [x24, #48]
  412ea8:	add	x22, x0, x9, lsl #3
  412eac:	ldr	x0, [x22, #8]
  412eb0:	cmp	x0, #0x0
  412eb4:	b.le	413070 <_obstack_memory_used@@Base+0x420>
  412eb8:	mov	x1, #0x1                   	// #1
  412ebc:	add	x23, x4, x4, lsl #2
  412ec0:	lsl	x1, x1, x2
  412ec4:	str	x1, [sp, #120]
  412ec8:	mvn	w1, w1
  412ecc:	mov	x13, x3
  412ed0:	and	w1, w1, #0xffff
  412ed4:	str	w1, [sp, #132]
  412ed8:	lsl	x1, x23, #3
  412edc:	mov	x25, x4
  412ee0:	and	w23, w26, #0x1
  412ee4:	stp	x19, x20, [sp, #16]
  412ee8:	mov	x19, #0x0                   	// #0
  412eec:	stp	x27, x28, [sp, #80]
  412ef0:	mov	x27, x2
  412ef4:	str	x1, [sp, #136]
  412ef8:	and	w1, w26, #0x2
  412efc:	str	w1, [sp, #128]
  412f00:	b	412f18 <_obstack_memory_used@@Base+0x2c8>
  412f04:	cmp	w5, #0x4
  412f08:	b.eq	412fa4 <_obstack_memory_used@@Base+0x354>  // b.none
  412f0c:	add	x19, x19, #0x1
  412f10:	cmp	x0, x19
  412f14:	b.le	413068 <_obstack_memory_used@@Base+0x418>
  412f18:	ldr	x5, [x22, #16]
  412f1c:	ldr	x7, [x24]
  412f20:	ldr	x21, [x5, x19, lsl #3]
  412f24:	lsl	x6, x21, #4
  412f28:	add	x5, x7, x6
  412f2c:	ldrb	w5, [x5, #8]
  412f30:	cmp	w5, #0x8
  412f34:	b.eq	412f74 <_obstack_memory_used@@Base+0x324>  // b.none
  412f38:	cmp	w5, #0x9
  412f3c:	b.ne	412f04 <_obstack_memory_used@@Base+0x2b4>  // b.any
  412f40:	ldr	w1, [sp, #128]
  412f44:	cbz	w1, 412f0c <_obstack_memory_used@@Base+0x2bc>
  412f48:	ldr	x1, [x7, x6]
  412f4c:	cmp	x1, x27
  412f50:	b.ne	412f0c <_obstack_memory_used@@Base+0x2bc>  // b.any
  412f54:	mov	w0, #0x0                   	// #0
  412f58:	ldp	x19, x20, [sp, #16]
  412f5c:	ldp	x21, x22, [sp, #32]
  412f60:	ldp	x23, x24, [sp, #48]
  412f64:	ldp	x25, x26, [sp, #64]
  412f68:	ldp	x27, x28, [sp, #80]
  412f6c:	ldp	x29, x30, [sp], #144
  412f70:	ret
  412f74:	cbz	w23, 412f0c <_obstack_memory_used@@Base+0x2bc>
  412f78:	ldr	x1, [x7, x6]
  412f7c:	cmp	x1, x27
  412f80:	b.ne	412f0c <_obstack_memory_used@@Base+0x2bc>  // b.any
  412f84:	mov	w0, #0xffffffff            	// #-1
  412f88:	ldp	x19, x20, [sp, #16]
  412f8c:	ldp	x21, x22, [sp, #32]
  412f90:	ldp	x23, x24, [sp, #48]
  412f94:	ldp	x25, x26, [sp, #64]
  412f98:	ldp	x27, x28, [sp, #80]
  412f9c:	ldp	x29, x30, [sp], #144
  412fa0:	ret
  412fa4:	cmn	x25, #0x1
  412fa8:	b.eq	412f0c <_obstack_memory_used@@Base+0x2bc>  // b.none
  412fac:	ldr	x0, [sp, #136]
  412fb0:	add	x28, x21, x21, lsl #1
  412fb4:	ldr	x20, [x12, #216]
  412fb8:	lsl	x28, x28, #3
  412fbc:	add	x20, x20, x0
  412fc0:	ldr	x5, [x20]
  412fc4:	mov	x4, x25
  412fc8:	mov	x2, x27
  412fcc:	mov	w1, w26
  412fd0:	mov	x0, x12
  412fd4:	cmp	x5, x21
  412fd8:	b.ne	413048 <_obstack_memory_used@@Base+0x3f8>  // b.any
  412fdc:	cmp	x27, #0x3f
  412fe0:	b.gt	412ff4 <_obstack_memory_used@@Base+0x3a4>
  412fe4:	ldr	x5, [sp, #120]
  412fe8:	ldrh	w3, [x20, #34]
  412fec:	tst	x3, x5
  412ff0:	b.eq	413048 <_obstack_memory_used@@Base+0x3f8>  // b.none
  412ff4:	ldr	x3, [x24, #40]
  412ff8:	add	x3, x3, x28
  412ffc:	ldr	x3, [x3, #16]
  413000:	ldr	x3, [x3]
  413004:	cmp	x13, x3
  413008:	b.eq	413088 <_obstack_memory_used@@Base+0x438>  // b.none
  41300c:	stp	x12, x13, [sp, #104]
  413010:	bl	412e80 <_obstack_memory_used@@Base+0x230>
  413014:	cmn	w0, #0x1
  413018:	ldp	x12, x13, [sp, #104]
  41301c:	b.eq	412f84 <_obstack_memory_used@@Base+0x334>  // b.none
  413020:	cbnz	w0, 41302c <_obstack_memory_used@@Base+0x3dc>
  413024:	ldr	w0, [sp, #128]
  413028:	cbnz	w0, 412f54 <_obstack_memory_used@@Base+0x304>
  41302c:	cmp	x27, #0x3f
  413030:	b.gt	413048 <_obstack_memory_used@@Base+0x3f8>
  413034:	ldrh	w0, [x20, #34]
  413038:	ldr	w1, [sp, #132]
  41303c:	and	w0, w1, w0
  413040:	strh	w0, [x20, #34]
  413044:	nop
  413048:	ldrb	w0, [x20, #32]
  41304c:	add	x20, x20, #0x28
  413050:	cbnz	w0, 412fc0 <_obstack_memory_used@@Base+0x370>
  413054:	ldr	x0, [x22, #8]
  413058:	add	x19, x19, #0x1
  41305c:	cmp	x0, x19
  413060:	b.gt	412f18 <_obstack_memory_used@@Base+0x2c8>
  413064:	nop
  413068:	ldp	x19, x20, [sp, #16]
  41306c:	ldp	x27, x28, [sp, #80]
  413070:	asr	w0, w26, #1
  413074:	ldp	x21, x22, [sp, #32]
  413078:	ldp	x23, x24, [sp, #48]
  41307c:	ldp	x25, x26, [sp, #64]
  413080:	ldp	x29, x30, [sp], #144
  413084:	ret
  413088:	sbfx	x0, x26, #0, #1
  41308c:	ldp	x19, x20, [sp, #16]
  413090:	ldp	x21, x22, [sp, #32]
  413094:	ldp	x23, x24, [sp, #48]
  413098:	ldp	x25, x26, [sp, #64]
  41309c:	ldp	x27, x28, [sp, #80]
  4130a0:	ldp	x29, x30, [sp], #144
  4130a4:	ret
  4130a8:	mov	x7, x0
  4130ac:	add	x1, x1, x1, lsl #2
  4130b0:	ldr	x0, [x0, #216]
  4130b4:	mov	x6, x4
  4130b8:	add	x1, x0, x1, lsl #3
  4130bc:	ldr	x0, [x1, #16]
  4130c0:	cmp	x0, x4
  4130c4:	b.gt	41310c <_obstack_memory_used@@Base+0x4bc>
  4130c8:	ldr	x4, [x1, #24]
  4130cc:	cmp	x4, x6
  4130d0:	b.lt	413104 <_obstack_memory_used@@Base+0x4b4>  // b.tstop
  4130d4:	cmp	x0, x6
  4130d8:	cset	w1, eq  // eq = none
  4130dc:	cmp	x4, x6
  4130e0:	b.eq	4130f4 <_obstack_memory_used@@Base+0x4a4>  // b.none
  4130e4:	cmp	x0, x6
  4130e8:	mov	w0, #0x0                   	// #0
  4130ec:	b.eq	4130f8 <_obstack_memory_used@@Base+0x4a8>  // b.none
  4130f0:	ret
  4130f4:	orr	w1, w1, #0x2
  4130f8:	mov	x4, x5
  4130fc:	mov	x0, x7
  413100:	b	412e80 <_obstack_memory_used@@Base+0x230>
  413104:	mov	w0, #0x1                   	// #1
  413108:	ret
  41310c:	mov	w0, #0xffffffff            	// #-1
  413110:	ret
  413114:	nop
  413118:	stp	x29, x30, [sp, #-48]!
  41311c:	mov	x29, sp
  413120:	stp	x19, x20, [sp, #16]
  413124:	mov	x20, x2
  413128:	str	x21, [sp, #32]
  41312c:	mov	x21, x1
  413130:	mov	x19, x0
  413134:	ldr	x0, [x0, #8]
  413138:	cbnz	x0, 413130 <_obstack_memory_used@@Base+0x4e0>
  41313c:	ldr	x0, [x19, #16]
  413140:	cbnz	x0, 413130 <_obstack_memory_used@@Base+0x4e0>
  413144:	mov	x1, x19
  413148:	mov	x0, x20
  41314c:	blr	x21
  413150:	cbnz	w0, 413184 <_obstack_memory_used@@Base+0x534>
  413154:	nop
  413158:	ldr	x3, [x19]
  41315c:	cbz	x3, 413184 <_obstack_memory_used@@Base+0x534>
  413160:	ldr	x0, [x3, #16]
  413164:	cmp	x0, #0x0
  413168:	ccmp	x0, x19, #0x4, ne  // ne = any
  41316c:	mov	x19, x3
  413170:	b.ne	413130 <_obstack_memory_used@@Base+0x4e0>  // b.any
  413174:	mov	x1, x19
  413178:	mov	x0, x20
  41317c:	blr	x21
  413180:	cbz	w0, 413158 <_obstack_memory_used@@Base+0x508>
  413184:	ldp	x19, x20, [sp, #16]
  413188:	ldr	x21, [sp, #32]
  41318c:	ldp	x29, x30, [sp], #48
  413190:	ret
  413194:	nop
  413198:	stp	x29, x30, [sp, #-48]!
  41319c:	mov	x29, sp
  4131a0:	stp	x19, x20, [sp, #16]
  4131a4:	mov	x19, x0
  4131a8:	mov	x20, x2
  4131ac:	str	x21, [sp, #32]
  4131b0:	mov	x0, x20
  4131b4:	mov	x21, x1
  4131b8:	mov	x1, x19
  4131bc:	blr	x21
  4131c0:	cbnz	w0, 4131e4 <_obstack_memory_used@@Base+0x594>
  4131c4:	nop
  4131c8:	ldr	x3, [x19, #8]
  4131cc:	cbz	x3, 4131f4 <_obstack_memory_used@@Base+0x5a4>
  4131d0:	mov	x19, x3
  4131d4:	mov	x1, x19
  4131d8:	mov	x0, x20
  4131dc:	blr	x21
  4131e0:	cbz	w0, 4131c8 <_obstack_memory_used@@Base+0x578>
  4131e4:	ldp	x19, x20, [sp, #16]
  4131e8:	ldr	x21, [sp, #32]
  4131ec:	ldp	x29, x30, [sp], #48
  4131f0:	ret
  4131f4:	ldr	x4, [x19, #16]
  4131f8:	cmp	x4, #0x0
  4131fc:	ccmp	x4, x3, #0x4, ne  // ne = any
  413200:	b.ne	413228 <_obstack_memory_used@@Base+0x5d8>  // b.any
  413204:	nop
  413208:	ldr	x4, [x19]
  41320c:	mov	x3, x19
  413210:	mov	x19, x4
  413214:	cbz	x4, 4131e4 <_obstack_memory_used@@Base+0x594>
  413218:	ldr	x4, [x19, #16]
  41321c:	cmp	x4, #0x0
  413220:	ccmp	x4, x3, #0x4, ne  // ne = any
  413224:	b.eq	413208 <_obstack_memory_used@@Base+0x5b8>  // b.none
  413228:	mov	x3, x4
  41322c:	mov	x19, x3
  413230:	b	4131d4 <_obstack_memory_used@@Base+0x584>
  413234:	nop
  413238:	stp	x29, x30, [sp, #-32]!
  41323c:	mov	x29, sp
  413240:	stp	x19, x20, [sp, #16]
  413244:	mov	x19, x0
  413248:	ldr	w0, [x0, #144]
  41324c:	mov	x20, x1
  413250:	cmp	w0, #0x1
  413254:	b.le	413294 <_obstack_memory_used@@Base+0x644>
  413258:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
  41325c:	cmp	x1, x0
  413260:	b.hi	4132c8 <_obstack_memory_used@@Base+0x678>  // b.pmore
  413264:	ldr	x0, [x19, #16]
  413268:	lsl	x1, x1, #2
  41326c:	bl	402930 <realloc@plt>
  413270:	mov	x1, x0
  413274:	cbz	x0, 4132c8 <_obstack_memory_used@@Base+0x678>
  413278:	ldr	x0, [x19, #24]
  41327c:	str	x1, [x19, #16]
  413280:	cbz	x0, 413294 <_obstack_memory_used@@Base+0x644>
  413284:	lsl	x1, x20, #3
  413288:	bl	402930 <realloc@plt>
  41328c:	cbz	x0, 4132c8 <_obstack_memory_used@@Base+0x678>
  413290:	str	x0, [x19, #24]
  413294:	ldrb	w0, [x19, #139]
  413298:	cbnz	w0, 4132b0 <_obstack_memory_used@@Base+0x660>
  41329c:	str	x20, [x19, #64]
  4132a0:	mov	w0, #0x0                   	// #0
  4132a4:	ldp	x19, x20, [sp, #16]
  4132a8:	ldp	x29, x30, [sp], #32
  4132ac:	ret
  4132b0:	ldr	x0, [x19, #8]
  4132b4:	mov	x1, x20
  4132b8:	bl	402930 <realloc@plt>
  4132bc:	cbz	x0, 4132c8 <_obstack_memory_used@@Base+0x678>
  4132c0:	str	x0, [x19, #8]
  4132c4:	b	41329c <_obstack_memory_used@@Base+0x64c>
  4132c8:	mov	w0, #0xc                   	// #12
  4132cc:	ldp	x19, x20, [sp, #16]
  4132d0:	ldp	x29, x30, [sp], #32
  4132d4:	ret
  4132d8:	stp	x29, x30, [sp, #-32]!
  4132dc:	mov	x29, sp
  4132e0:	stp	x19, x20, [sp, #16]
  4132e4:	mov	x19, x0
  4132e8:	mov	x20, x1
  4132ec:	ldr	x0, [x0]
  4132f0:	ldp	x2, x1, [x19, #8]
  4132f4:	cmp	x0, x2
  4132f8:	b.eq	413318 <_obstack_memory_used@@Base+0x6c8>  // b.none
  4132fc:	add	x0, x2, #0x1
  413300:	str	x0, [x19, #8]
  413304:	mov	w0, #0x1                   	// #1
  413308:	str	x20, [x1, x2, lsl #3]
  41330c:	ldp	x19, x20, [sp, #16]
  413310:	ldp	x29, x30, [sp], #32
  413314:	ret
  413318:	add	x2, x2, #0x1
  41331c:	mov	x0, x1
  413320:	lsl	x1, x2, #1
  413324:	str	x1, [x19]
  413328:	lsl	x1, x2, #4
  41332c:	bl	402930 <realloc@plt>
  413330:	mov	x1, x0
  413334:	cbz	x0, 413344 <_obstack_memory_used@@Base+0x6f4>
  413338:	str	x0, [x19, #16]
  41333c:	ldr	x2, [x19, #8]
  413340:	b	4132fc <_obstack_memory_used@@Base+0x6ac>
  413344:	mov	w0, #0x0                   	// #0
  413348:	b	41330c <_obstack_memory_used@@Base+0x6bc>
  41334c:	nop
  413350:	stp	x29, x30, [sp, #-48]!
  413354:	mov	x29, sp
  413358:	ldr	x2, [x0]
  41335c:	stp	x19, x20, [sp, #16]
  413360:	mov	x19, x0
  413364:	mov	x20, x1
  413368:	cbz	x2, 413394 <_obstack_memory_used@@Base+0x744>
  41336c:	ldp	x1, x0, [x0, #8]
  413370:	cbnz	x1, 4133cc <_obstack_memory_used@@Base+0x77c>
  413374:	str	x20, [x0]
  413378:	mov	w0, #0x1                   	// #1
  41337c:	ldr	x1, [x19, #8]
  413380:	add	x1, x1, #0x1
  413384:	str	x1, [x19, #8]
  413388:	ldp	x19, x20, [sp, #16]
  41338c:	ldp	x29, x30, [sp], #48
  413390:	ret
  413394:	str	x21, [sp, #32]
  413398:	mov	x21, #0x1                   	// #1
  41339c:	stp	x21, x21, [x19]
  4133a0:	mov	x0, #0x8                   	// #8
  4133a4:	bl	402800 <malloc@plt>
  4133a8:	str	x0, [x19, #16]
  4133ac:	mov	x1, x0
  4133b0:	cbz	x0, 413448 <_obstack_memory_used@@Base+0x7f8>
  4133b4:	mov	w0, w21
  4133b8:	ldr	x21, [sp, #32]
  4133bc:	str	x20, [x1]
  4133c0:	ldp	x19, x20, [sp, #16]
  4133c4:	ldp	x29, x30, [sp], #48
  4133c8:	ret
  4133cc:	cmp	x2, x1
  4133d0:	b.eq	413458 <_obstack_memory_used@@Base+0x808>  // b.none
  4133d4:	ldr	x3, [x0]
  4133d8:	lsl	x2, x1, #3
  4133dc:	cmp	x3, x20
  4133e0:	b.le	41341c <_obstack_memory_used@@Base+0x7cc>
  4133e4:	cmp	x1, #0x0
  4133e8:	b.le	413404 <_obstack_memory_used@@Base+0x7b4>
  4133ec:	add	x2, x0, x2
  4133f0:	ldur	x1, [x2, #-8]
  4133f4:	str	x1, [x2], #-8
  4133f8:	cmp	x2, x0
  4133fc:	b.ne	4133f0 <_obstack_memory_used@@Base+0x7a0>  // b.any
  413400:	mov	x2, #0x0                   	// #0
  413404:	str	x20, [x0, x2]
  413408:	mov	w0, #0x1                   	// #1
  41340c:	ldr	x1, [x19, #8]
  413410:	add	x1, x1, #0x1
  413414:	str	x1, [x19, #8]
  413418:	b	413388 <_obstack_memory_used@@Base+0x738>
  41341c:	add	x1, x0, x2
  413420:	ldur	x1, [x1, #-8]
  413424:	cmp	x20, x1
  413428:	b.ge	413404 <_obstack_memory_used@@Base+0x7b4>  // b.tcont
  41342c:	sub	x3, x0, #0x8
  413430:	str	x1, [x0, x2]
  413434:	sub	x2, x2, #0x8
  413438:	ldr	x1, [x3, x2]
  41343c:	cmp	x1, x20
  413440:	b.gt	413430 <_obstack_memory_used@@Base+0x7e0>
  413444:	b	413404 <_obstack_memory_used@@Base+0x7b4>
  413448:	mov	w0, #0x0                   	// #0
  41344c:	ldr	x21, [sp, #32]
  413450:	stp	xzr, xzr, [x19]
  413454:	b	413388 <_obstack_memory_used@@Base+0x738>
  413458:	lsl	x2, x1, #1
  41345c:	str	x2, [x19]
  413460:	lsl	x1, x1, #4
  413464:	bl	402930 <realloc@plt>
  413468:	cbz	x0, 413478 <_obstack_memory_used@@Base+0x828>
  41346c:	str	x0, [x19, #16]
  413470:	ldr	x1, [x19, #8]
  413474:	b	4133d4 <_obstack_memory_used@@Base+0x784>
  413478:	mov	w0, #0x0                   	// #0
  41347c:	b	413388 <_obstack_memory_used@@Base+0x738>
  413480:	stp	x29, x30, [sp, #-64]!
  413484:	mov	x29, sp
  413488:	stp	x19, x20, [sp, #16]
  41348c:	mov	x20, x1
  413490:	ldr	x19, [x1, #16]
  413494:	str	x23, [sp, #48]
  413498:	mov	x23, x1
  41349c:	stp	x21, x22, [sp, #32]
  4134a0:	mov	x22, x2
  4134a4:	mov	x21, x0
  4134a8:	lsl	x0, x19, #3
  4134ac:	str	x2, [x23], #32
  4134b0:	str	x19, [x1, #32]
  4134b4:	str	xzr, [x23, #8]
  4134b8:	bl	402800 <malloc@plt>
  4134bc:	str	x0, [x23, #16]
  4134c0:	cbz	x0, 41350c <_obstack_memory_used@@Base+0x8bc>
  4134c4:	cmp	x19, #0x0
  4134c8:	mov	x19, #0x0                   	// #0
  4134cc:	b.gt	4134e0 <_obstack_memory_used@@Base+0x890>
  4134d0:	b	413524 <_obstack_memory_used@@Base+0x8d4>
  4134d4:	ldr	x1, [x20, #16]
  4134d8:	cmp	x1, x19
  4134dc:	b.le	413524 <_obstack_memory_used@@Base+0x8d4>
  4134e0:	ldr	x1, [x20, #24]
  4134e4:	ldr	x3, [x21]
  4134e8:	ldr	x1, [x1, x19, lsl #3]
  4134ec:	add	x19, x19, #0x1
  4134f0:	add	x3, x3, x1, lsl #4
  4134f4:	ldrb	w3, [x3, #8]
  4134f8:	tbnz	w3, #3, 4134d4 <_obstack_memory_used@@Base+0x884>
  4134fc:	mov	x0, x23
  413500:	bl	4132d8 <_obstack_memory_used@@Base+0x688>
  413504:	tst	w0, #0xff
  413508:	b.ne	4134d4 <_obstack_memory_used@@Base+0x884>  // b.any
  41350c:	mov	w0, #0xc                   	// #12
  413510:	ldp	x19, x20, [sp, #16]
  413514:	ldp	x21, x22, [sp, #32]
  413518:	ldr	x23, [sp, #48]
  41351c:	ldp	x29, x30, [sp], #64
  413520:	ret
  413524:	ldr	x19, [x21, #136]
  413528:	ldr	x21, [x21, #64]
  41352c:	and	x22, x22, x19
  413530:	add	x22, x22, x22, lsl #1
  413534:	lsl	x19, x22, #3
  413538:	add	x22, x21, x19
  41353c:	ldr	x2, [x21, x19]
  413540:	ldp	x0, x3, [x22, #8]
  413544:	add	x1, x2, #0x1
  413548:	cmp	x0, x2
  41354c:	b.le	413570 <_obstack_memory_used@@Base+0x920>
  413550:	str	x1, [x21, x19]
  413554:	mov	w0, #0x0                   	// #0
  413558:	str	x20, [x3, x2, lsl #3]
  41355c:	ldp	x19, x20, [sp, #16]
  413560:	ldp	x21, x22, [sp, #32]
  413564:	ldr	x23, [sp, #48]
  413568:	ldp	x29, x30, [sp], #64
  41356c:	ret
  413570:	mov	x0, x3
  413574:	lsl	x23, x1, #1
  413578:	lsl	x1, x1, #4
  41357c:	bl	402930 <realloc@plt>
  413580:	mov	x3, x0
  413584:	cbz	x0, 41350c <_obstack_memory_used@@Base+0x8bc>
  413588:	ldr	x2, [x21, x19]
  41358c:	stp	x23, x0, [x22, #8]
  413590:	add	x1, x2, #0x1
  413594:	b	413550 <_obstack_memory_used@@Base+0x900>
  413598:	stp	x29, x30, [sp, #-48]!
  41359c:	mov	x29, sp
  4135a0:	stp	x19, x20, [sp, #16]
  4135a4:	mov	x20, x0
  4135a8:	ldr	x19, [x0, #48]
  4135ac:	str	x21, [sp, #32]
  4135b0:	ldr	x21, [x0, #64]
  4135b4:	ldr	x0, [x0, #88]
  4135b8:	cmp	x21, x0
  4135bc:	csel	x21, x21, x0, le
  4135c0:	cmp	x21, x19
  4135c4:	b.le	413620 <_obstack_memory_used@@Base+0x9d0>
  4135c8:	bl	402940 <__ctype_toupper_loc@plt>
  4135cc:	nop
  4135d0:	ldr	x1, [x20]
  4135d4:	ldr	x3, [x20, #40]
  4135d8:	add	x1, x1, x19
  4135dc:	ldr	x2, [x20, #120]
  4135e0:	ldrb	w1, [x1, x3]
  4135e4:	cbnz	x2, 413618 <_obstack_memory_used@@Base+0x9c8>
  4135e8:	ldr	x3, [x0]
  4135ec:	ldr	x2, [x20, #8]
  4135f0:	ldr	w1, [x3, x1, lsl #2]
  4135f4:	strb	w1, [x2, x19]
  4135f8:	add	x19, x19, #0x1
  4135fc:	cmp	x21, x19
  413600:	b.ne	4135d0 <_obstack_memory_used@@Base+0x980>  // b.any
  413604:	stp	x21, x21, [x20, #48]
  413608:	ldp	x19, x20, [sp, #16]
  41360c:	ldr	x21, [sp, #32]
  413610:	ldp	x29, x30, [sp], #48
  413614:	ret
  413618:	ldrb	w1, [x2, x1]
  41361c:	b	4135e8 <_obstack_memory_used@@Base+0x998>
  413620:	mov	x21, x19
  413624:	stp	x21, x21, [x20, #48]
  413628:	ldp	x19, x20, [sp, #16]
  41362c:	ldr	x21, [sp, #32]
  413630:	ldp	x29, x30, [sp], #48
  413634:	ret
  413638:	stp	x29, x30, [sp, #-144]!
  41363c:	mov	x29, sp
  413640:	stp	x19, x20, [sp, #16]
  413644:	mov	x19, x0
  413648:	stp	x23, x24, [sp, #48]
  41364c:	ldr	x24, [x0, #64]
  413650:	ldr	x0, [x0, #88]
  413654:	ldr	x20, [x19, #48]
  413658:	cmp	x24, x0
  41365c:	csel	x24, x24, x0, le
  413660:	cmp	x24, x20
  413664:	b.le	413704 <_obstack_memory_used@@Base+0xab4>
  413668:	stp	x21, x22, [sp, #32]
  41366c:	add	x22, x19, #0x20
  413670:	mov	w21, #0xffffffff            	// #-1
  413674:	nop
  413678:	ldr	x4, [x19, #120]
  41367c:	sub	x2, x24, x20
  413680:	ldr	x23, [x19, #32]
  413684:	cbnz	x4, 413760 <_obstack_memory_used@@Base+0xb10>
  413688:	ldr	x0, [x19, #40]
  41368c:	ldr	x1, [x19]
  413690:	add	x0, x20, x0
  413694:	add	x1, x1, x0
  413698:	mov	x3, x22
  41369c:	add	x0, sp, #0x4c
  4136a0:	bl	412878 <wcrtomb@plt+0xfb38>
  4136a4:	sub	x1, x0, #0x1
  4136a8:	cmn	x1, #0x3
  4136ac:	b.hi	413718 <_obstack_memory_used@@Base+0xac8>  // b.pmore
  4136b0:	cmn	x0, #0x2
  4136b4:	b.eq	4137dc <_obstack_memory_used@@Base+0xb8c>  // b.none
  4136b8:	ldr	x1, [x19, #16]
  4136bc:	add	x0, x20, x0
  4136c0:	ldr	w3, [sp, #76]
  4136c4:	add	x4, x20, #0x1
  4136c8:	lsl	x2, x20, #2
  4136cc:	cmp	x4, x0
  4136d0:	str	w3, [x1, x20, lsl #2]
  4136d4:	b.ge	413758 <_obstack_memory_used@@Base+0xb08>  // b.tcont
  4136d8:	add	x3, x2, #0x4
  4136dc:	add	x2, x1, x0, lsl #2
  4136e0:	add	x1, x1, x3
  4136e4:	nop
  4136e8:	str	w21, [x1], #4
  4136ec:	cmp	x2, x1
  4136f0:	b.ne	4136e8 <_obstack_memory_used@@Base+0xa98>  // b.any
  4136f4:	mov	x20, x0
  4136f8:	cmp	x20, x24
  4136fc:	b.lt	413678 <_obstack_memory_used@@Base+0xa28>  // b.tstop
  413700:	ldp	x21, x22, [sp, #32]
  413704:	ldp	x23, x24, [sp, #48]
  413708:	stp	x20, x20, [x19, #48]
  41370c:	ldp	x19, x20, [sp, #16]
  413710:	ldp	x29, x30, [sp], #144
  413714:	ret
  413718:	ldr	x0, [x19]
  41371c:	ldr	x2, [x19, #40]
  413720:	add	x0, x0, x20
  413724:	ldr	x1, [x19, #120]
  413728:	ldrb	w3, [x0, x2]
  41372c:	str	w3, [sp, #76]
  413730:	cbnz	x1, 413808 <_obstack_memory_used@@Base+0xbb8>
  413734:	ldr	x1, [x19, #16]
  413738:	str	x23, [x19, #32]
  41373c:	add	x4, x20, #0x1
  413740:	mov	x0, #0x1                   	// #1
  413744:	add	x0, x20, x0
  413748:	lsl	x2, x20, #2
  41374c:	str	w3, [x1, x20, lsl #2]
  413750:	cmp	x4, x0
  413754:	b.lt	4136d8 <_obstack_memory_used@@Base+0xa88>  // b.tstop
  413758:	mov	x20, x4
  41375c:	b	4136f8 <_obstack_memory_used@@Base+0xaa8>
  413760:	ldr	w0, [x19, #144]
  413764:	cmp	w0, #0x0
  413768:	b.le	4137d4 <_obstack_memory_used@@Base+0xb84>
  41376c:	cmp	x2, #0x0
  413770:	b.le	4137d4 <_obstack_memory_used@@Base+0xb84>
  413774:	mov	x1, #0x1                   	// #1
  413778:	b	41378c <_obstack_memory_used@@Base+0xb3c>
  41377c:	cmp	x2, x1
  413780:	b.eq	4137d4 <_obstack_memory_used@@Base+0xb84>  // b.none
  413784:	ldr	x4, [x19, #120]
  413788:	mov	x1, x7
  41378c:	ldr	x0, [x19]
  413790:	add	x3, sp, #0x50
  413794:	add	x5, x3, x1
  413798:	add	x7, x1, #0x1
  41379c:	ldr	x3, [x19, #40]
  4137a0:	add	x0, x0, x20
  4137a4:	add	x0, x0, x1
  4137a8:	add	x0, x0, x3
  4137ac:	ldr	x3, [x19, #8]
  4137b0:	ldurb	w6, [x0, #-1]
  4137b4:	add	x0, x3, x20
  4137b8:	add	x0, x0, x1
  4137bc:	ldrb	w3, [x4, x6]
  4137c0:	sturb	w3, [x0, #-1]
  4137c4:	sturb	w3, [x5, #-1]
  4137c8:	ldr	w0, [x19, #144]
  4137cc:	cmp	w0, w1
  4137d0:	b.gt	41377c <_obstack_memory_used@@Base+0xb2c>
  4137d4:	add	x1, sp, #0x50
  4137d8:	b	413698 <_obstack_memory_used@@Base+0xa48>
  4137dc:	ldr	x1, [x19, #64]
  4137e0:	ldr	x0, [x19, #88]
  4137e4:	cmp	x1, x0
  4137e8:	b.ge	413718 <_obstack_memory_used@@Base+0xac8>  // b.tcont
  4137ec:	ldp	x21, x22, [sp, #32]
  4137f0:	str	x23, [x19, #32]
  4137f4:	ldp	x23, x24, [sp, #48]
  4137f8:	stp	x20, x20, [x19, #48]
  4137fc:	ldp	x19, x20, [sp, #16]
  413800:	ldp	x29, x30, [sp], #144
  413804:	ret
  413808:	and	x3, x3, #0xff
  41380c:	ldrb	w3, [x1, x3]
  413810:	str	w3, [sp, #76]
  413814:	b	413734 <_obstack_memory_used@@Base+0xae4>
  413818:	stp	x29, x30, [sp, #-192]!
  41381c:	mov	x29, sp
  413820:	stp	x19, x20, [sp, #16]
  413824:	mov	x19, x0
  413828:	stp	x21, x22, [sp, #32]
  41382c:	ldrb	w1, [x0, #138]
  413830:	ldr	x21, [x0, #64]
  413834:	ldr	x0, [x0, #88]
  413838:	ldr	x20, [x19, #48]
  41383c:	cmp	x21, x0
  413840:	csel	x21, x21, x0, le
  413844:	cbnz	w1, 413850 <_obstack_memory_used@@Base+0xc00>
  413848:	ldr	x0, [x19, #120]
  41384c:	cbz	x0, 4139a0 <_obstack_memory_used@@Base+0xd50>
  413850:	ldr	x22, [x19, #56]
  413854:	cmp	x21, x20
  413858:	b.le	413988 <_obstack_memory_used@@Base+0xd38>
  41385c:	stp	x23, x24, [sp, #48]
  413860:	add	x24, x19, #0x20
  413864:	add	x0, sp, #0x74
  413868:	stp	x25, x26, [sp, #64]
  41386c:	sub	x26, x21, x20
  413870:	stp	x27, x28, [sp, #80]
  413874:	str	x0, [sp, #104]
  413878:	ldr	x2, [x19, #120]
  41387c:	ldr	x0, [x19, #32]
  413880:	str	x0, [sp, #120]
  413884:	cbnz	x2, 413b80 <_obstack_memory_used@@Base+0xf30>
  413888:	ldr	x0, [x19, #40]
  41388c:	ldr	x25, [x19]
  413890:	add	x0, x22, x0
  413894:	add	x25, x25, x0
  413898:	ldr	x0, [sp, #104]
  41389c:	mov	x3, x24
  4138a0:	mov	x2, x26
  4138a4:	mov	x1, x25
  4138a8:	bl	412878 <wcrtomb@plt+0xfb38>
  4138ac:	sub	x28, x0, #0x1
  4138b0:	mov	x23, x0
  4138b4:	cmn	x28, #0x4
  4138b8:	b.hi	413c14 <_obstack_memory_used@@Base+0xfc4>  // b.pmore
  4138bc:	ldr	w27, [sp, #116]
  4138c0:	mov	x26, x20
  4138c4:	mov	w0, w27
  4138c8:	bl	402c70 <towupper@plt>
  4138cc:	mov	w24, w0
  4138d0:	cmp	w27, w0
  4138d4:	b.eq	413bec <_obstack_memory_used@@Base+0xf9c>  // b.none
  4138d8:	add	x3, sp, #0x80
  4138dc:	add	x2, sp, #0x78
  4138e0:	mov	x0, x3
  4138e4:	mov	w1, w24
  4138e8:	str	x3, [sp, #104]
  4138ec:	bl	402d40 <wcrtomb@plt>
  4138f0:	mov	x27, x0
  4138f4:	cmp	x23, x0
  4138f8:	ldr	x3, [sp, #104]
  4138fc:	b.ne	413cb0 <_obstack_memory_used@@Base+0x1060>  // b.any
  413900:	ldr	x0, [x19, #8]
  413904:	mov	x1, x3
  413908:	mov	x2, x23
  41390c:	add	x0, x0, x20
  413910:	bl	402650 <memcpy@plt>
  413914:	ldrb	w0, [x19, #140]
  413918:	cbnz	w0, 413c88 <_obstack_memory_used@@Base+0x1038>
  41391c:	add	x0, x23, x22
  413920:	ldr	x1, [x19, #16]
  413924:	add	x20, x20, #0x1
  413928:	add	x23, x23, x26
  41392c:	mov	x22, x0
  413930:	cmp	x20, x23
  413934:	lsl	x0, x26, #2
  413938:	str	w24, [x1, x26, lsl #2]
  41393c:	b.ge	413c04 <_obstack_memory_used@@Base+0xfb4>  // b.tcont
  413940:	add	x0, x0, #0x4
  413944:	add	x2, x1, x23, lsl #2
  413948:	add	x0, x1, x0
  41394c:	mov	w1, #0xffffffff            	// #-1
  413950:	str	w1, [x0], #4
  413954:	cmp	x2, x0
  413958:	b.ne	413950 <_obstack_memory_used@@Base+0xd00>  // b.any
  41395c:	mov	x20, x23
  413960:	ldp	x23, x24, [sp, #48]
  413964:	ldp	x25, x26, [sp, #64]
  413968:	ldp	x27, x28, [sp, #80]
  41396c:	b	413854 <_obstack_memory_used@@Base+0xc04>
  413970:	ldr	x0, [sp, #120]
  413974:	ldp	x23, x24, [sp, #48]
  413978:	ldp	x25, x26, [sp, #64]
  41397c:	ldp	x27, x28, [sp, #80]
  413980:	str	x0, [x19, #32]
  413984:	nop
  413988:	mov	w0, #0x0                   	// #0
  41398c:	stp	x20, x22, [x19, #48]
  413990:	ldp	x19, x20, [sp, #16]
  413994:	ldp	x21, x22, [sp, #32]
  413998:	ldp	x29, x30, [sp], #192
  41399c:	ret
  4139a0:	ldrb	w0, [x19, #140]
  4139a4:	cbnz	w0, 413850 <_obstack_memory_used@@Base+0xc00>
  4139a8:	cmp	x20, x21
  4139ac:	b.ge	413abc <_obstack_memory_used@@Base+0xe6c>  // b.tcont
  4139b0:	stp	x23, x24, [sp, #48]
  4139b4:	add	x24, x19, #0x20
  4139b8:	mov	w23, #0xffffffff            	// #-1
  4139bc:	stp	x25, x26, [sp, #64]
  4139c0:	stp	x27, x28, [sp, #80]
  4139c4:	nop
  4139c8:	mov	x25, x20
  4139cc:	ldr	x27, [x19]
  4139d0:	ldr	x22, [x19, #40]
  4139d4:	add	x0, x27, x22
  4139d8:	ldrb	w26, [x0, x20]
  4139dc:	tbnz	w26, #7, 4139ec <_obstack_memory_used@@Base+0xd9c>
  4139e0:	mov	x0, x24
  4139e4:	bl	402a10 <mbsinit@plt>
  4139e8:	cbnz	w0, 413ae8 <_obstack_memory_used@@Base+0xe98>
  4139ec:	ldr	x4, [x19, #32]
  4139f0:	add	x22, x22, x20
  4139f4:	sub	x26, x21, x20
  4139f8:	add	x1, x27, x22
  4139fc:	mov	x2, x26
  413a00:	mov	x3, x24
  413a04:	add	x0, sp, #0x74
  413a08:	str	x4, [sp, #120]
  413a0c:	bl	412878 <wcrtomb@plt+0xfb38>
  413a10:	mov	x22, x0
  413a14:	add	x0, sp, #0x74
  413a18:	str	x0, [sp, #104]
  413a1c:	sub	x0, x22, #0x1
  413a20:	cmn	x0, #0x4
  413a24:	b.hi	413b10 <_obstack_memory_used@@Base+0xec0>  // b.pmore
  413a28:	ldr	w28, [sp, #116]
  413a2c:	mov	w0, w28
  413a30:	bl	402c70 <towupper@plt>
  413a34:	mov	w27, w0
  413a38:	cmp	w28, w0
  413a3c:	b.eq	413ac8 <_obstack_memory_used@@Base+0xe78>  // b.none
  413a40:	mov	w1, w0
  413a44:	add	x2, sp, #0x78
  413a48:	add	x0, sp, #0x80
  413a4c:	bl	402d40 <wcrtomb@plt>
  413a50:	cmp	x22, x0
  413a54:	b.ne	413be4 <_obstack_memory_used@@Base+0xf94>  // b.any
  413a58:	ldr	x0, [x19, #8]
  413a5c:	mov	x2, x22
  413a60:	add	x1, sp, #0x80
  413a64:	add	x0, x0, x20
  413a68:	bl	402650 <memcpy@plt>
  413a6c:	ldr	x1, [x19, #16]
  413a70:	add	x20, x20, #0x1
  413a74:	add	x22, x22, x25
  413a78:	lsl	x0, x25, #2
  413a7c:	cmp	x20, x22
  413a80:	str	w27, [x1, x25, lsl #2]
  413a84:	b.ge	413aa8 <_obstack_memory_used@@Base+0xe58>  // b.tcont
  413a88:	add	x2, x0, #0x4
  413a8c:	add	x0, x1, x22, lsl #2
  413a90:	add	x1, x1, x2
  413a94:	nop
  413a98:	str	w23, [x1], #4
  413a9c:	cmp	x0, x1
  413aa0:	b.ne	413a98 <_obstack_memory_used@@Base+0xe48>  // b.any
  413aa4:	mov	x20, x22
  413aa8:	cmp	x20, x21
  413aac:	b.lt	4139c8 <_obstack_memory_used@@Base+0xd78>  // b.tstop
  413ab0:	ldp	x23, x24, [sp, #48]
  413ab4:	ldp	x25, x26, [sp, #64]
  413ab8:	ldp	x27, x28, [sp, #80]
  413abc:	mov	w0, #0x0                   	// #0
  413ac0:	stp	x20, x20, [x19, #48]
  413ac4:	b	413990 <_obstack_memory_used@@Base+0xd40>
  413ac8:	ldp	x3, x0, [x19]
  413acc:	mov	x2, x22
  413ad0:	ldr	x1, [x19, #40]
  413ad4:	add	x1, x20, x1
  413ad8:	add	x1, x3, x1
  413adc:	add	x0, x0, x20
  413ae0:	bl	402650 <memcpy@plt>
  413ae4:	b	413a6c <_obstack_memory_used@@Base+0xe1c>
  413ae8:	bl	402940 <__ctype_toupper_loc@plt>
  413aec:	ldr	x0, [x0]
  413af0:	ldr	x1, [x19, #8]
  413af4:	ldr	w0, [x0, x26, lsl #2]
  413af8:	strb	w0, [x1, x20]
  413afc:	ldp	x1, x0, [x19, #8]
  413b00:	ldrb	w1, [x1, x20]
  413b04:	str	w1, [x0, x20, lsl #2]
  413b08:	add	x20, x20, #0x1
  413b0c:	b	413aa8 <_obstack_memory_used@@Base+0xe58>
  413b10:	cmn	x0, #0x3
  413b14:	b.eq	413b4c <_obstack_memory_used@@Base+0xefc>  // b.none
  413b18:	ldp	x0, x1, [x19]
  413b1c:	cmn	x22, #0x1
  413b20:	ldr	x2, [x19, #40]
  413b24:	add	x0, x0, x20
  413b28:	ldrb	w0, [x0, x2]
  413b2c:	strb	w0, [x1, x20]
  413b30:	add	x20, x20, #0x1
  413b34:	ldr	x1, [x19, #16]
  413b38:	str	w0, [x1, x25, lsl #2]
  413b3c:	b.ne	413aa8 <_obstack_memory_used@@Base+0xe58>  // b.any
  413b40:	ldr	x0, [sp, #120]
  413b44:	str	x0, [x19, #32]
  413b48:	b	413aa8 <_obstack_memory_used@@Base+0xe58>
  413b4c:	ldr	x1, [x19, #64]
  413b50:	ldr	x0, [x19, #88]
  413b54:	cmp	x1, x0
  413b58:	b.lt	413d9c <_obstack_memory_used@@Base+0x114c>  // b.tstop
  413b5c:	ldp	x0, x1, [x19]
  413b60:	ldr	x2, [x19, #40]
  413b64:	add	x0, x0, x20
  413b68:	ldrb	w0, [x0, x2]
  413b6c:	strb	w0, [x1, x20]
  413b70:	add	x20, x20, #0x1
  413b74:	ldr	x1, [x19, #16]
  413b78:	str	w0, [x1, x25, lsl #2]
  413b7c:	b	413aa8 <_obstack_memory_used@@Base+0xe58>
  413b80:	ldr	w7, [x19, #144]
  413b84:	cmp	w7, #0x0
  413b88:	b.le	413de0 <_obstack_memory_used@@Base+0x1190>
  413b8c:	cmp	x26, #0x0
  413b90:	b.le	413de0 <_obstack_memory_used@@Base+0x1190>
  413b94:	ldr	x1, [x19, #40]
  413b98:	add	x3, sp, #0x80
  413b9c:	ldr	x6, [x19]
  413ba0:	add	x1, x22, x1
  413ba4:	sub	x1, x1, #0x1
  413ba8:	mov	x0, #0x1                   	// #1
  413bac:	add	x6, x6, x1
  413bb0:	b	413bc0 <_obstack_memory_used@@Base+0xf70>
  413bb4:	cmp	x26, x0
  413bb8:	mov	x0, x4
  413bbc:	b.eq	413bdc <_obstack_memory_used@@Base+0xf8c>  // b.none
  413bc0:	ldrb	w5, [x6, x0]
  413bc4:	add	x1, x3, x0
  413bc8:	cmp	w7, w0
  413bcc:	add	x4, x0, #0x1
  413bd0:	ldrb	w5, [x2, x5]
  413bd4:	sturb	w5, [x1, #-1]
  413bd8:	b.gt	413bb4 <_obstack_memory_used@@Base+0xf64>
  413bdc:	mov	x25, x3
  413be0:	b	413898 <_obstack_memory_used@@Base+0xc48>
  413be4:	mov	x22, x20
  413be8:	b	413878 <_obstack_memory_used@@Base+0xc28>
  413bec:	ldr	x0, [x19, #8]
  413bf0:	mov	x1, x25
  413bf4:	mov	x2, x23
  413bf8:	add	x0, x0, x20
  413bfc:	bl	402650 <memcpy@plt>
  413c00:	b	413914 <_obstack_memory_used@@Base+0xcc4>
  413c04:	ldp	x23, x24, [sp, #48]
  413c08:	ldp	x25, x26, [sp, #64]
  413c0c:	ldp	x27, x28, [sp, #80]
  413c10:	b	413854 <_obstack_memory_used@@Base+0xc04>
  413c14:	cmn	x28, #0x3
  413c18:	b.ne	413c2c <_obstack_memory_used@@Base+0xfdc>  // b.any
  413c1c:	ldr	x1, [x19, #64]
  413c20:	ldr	x0, [x19, #88]
  413c24:	cmp	x1, x0
  413c28:	b.lt	413970 <_obstack_memory_used@@Base+0xd20>  // b.tstop
  413c2c:	ldr	x0, [x19]
  413c30:	ldr	x2, [x19, #40]
  413c34:	add	x0, x0, x22
  413c38:	ldr	x1, [x19, #120]
  413c3c:	ldrb	w0, [x0, x2]
  413c40:	cbnz	x1, 413df8 <_obstack_memory_used@@Base+0x11a8>
  413c44:	ldr	x1, [x19, #8]
  413c48:	mov	x2, x20
  413c4c:	strb	w0, [x1, x20]
  413c50:	ldrb	w1, [x19, #140]
  413c54:	cbnz	w1, 413dec <_obstack_memory_used@@Base+0x119c>
  413c58:	ldr	x1, [x19, #16]
  413c5c:	add	x22, x22, #0x1
  413c60:	add	x20, x20, #0x1
  413c64:	cmn	x23, #0x1
  413c68:	str	w0, [x1, x2, lsl #2]
  413c6c:	b.ne	413c04 <_obstack_memory_used@@Base+0xfb4>  // b.any
  413c70:	ldr	x0, [sp, #120]
  413c74:	ldp	x23, x24, [sp, #48]
  413c78:	ldp	x25, x26, [sp, #64]
  413c7c:	ldp	x27, x28, [sp, #80]
  413c80:	str	x0, [x19, #32]
  413c84:	b	413854 <_obstack_memory_used@@Base+0xc04>
  413c88:	ldr	x1, [x19, #24]
  413c8c:	neg	x2, x22, lsl #3
  413c90:	add	x2, x2, x20, lsl #3
  413c94:	add	x0, x23, x22
  413c98:	add	x1, x1, x2
  413c9c:	str	x22, [x1, x22, lsl #3]
  413ca0:	add	x22, x22, #0x1
  413ca4:	cmp	x0, x22
  413ca8:	b.ne	413c9c <_obstack_memory_used@@Base+0x104c>  // b.any
  413cac:	b	413920 <_obstack_memory_used@@Base+0xcd0>
  413cb0:	cmn	x0, #0x1
  413cb4:	b.eq	413bec <_obstack_memory_used@@Base+0xf9c>  // b.none
  413cb8:	add	x25, x0, x20
  413cbc:	ldr	x0, [x19, #64]
  413cc0:	cmp	x25, x0
  413cc4:	b.hi	413970 <_obstack_memory_used@@Base+0xd20>  // b.pmore
  413cc8:	ldr	x1, [x19, #24]
  413ccc:	cbz	x1, 413db4 <_obstack_memory_used@@Base+0x1164>
  413cd0:	ldrb	w0, [x19, #140]
  413cd4:	cbnz	w0, 413cfc <_obstack_memory_used@@Base+0x10ac>
  413cd8:	cbz	x20, 413cf4 <_obstack_memory_used@@Base+0x10a4>
  413cdc:	ldr	x1, [x19, #24]
  413ce0:	mov	x0, #0x0                   	// #0
  413ce4:	str	x0, [x1, x0, lsl #3]
  413ce8:	add	x0, x0, #0x1
  413cec:	cmp	x0, x20
  413cf0:	b.ne	413ce4 <_obstack_memory_used@@Base+0x1094>  // b.any
  413cf4:	mov	w0, #0x1                   	// #1
  413cf8:	strb	w0, [x19, #140]
  413cfc:	ldr	x0, [x19, #8]
  413d00:	mov	x1, x3
  413d04:	mov	x2, x27
  413d08:	add	x0, x0, x20
  413d0c:	bl	402650 <memcpy@plt>
  413d10:	ldp	x2, x1, [x19, #16]
  413d14:	str	w24, [x2, x20, lsl #2]
  413d18:	cmp	x27, #0x1
  413d1c:	mov	x0, #0x1                   	// #1
  413d20:	mov	w4, #0xffffffff            	// #-1
  413d24:	str	x22, [x1, x20, lsl #3]
  413d28:	add	x2, x2, x20, lsl #2
  413d2c:	add	x1, x1, x20, lsl #3
  413d30:	b.ls	413d54 <_obstack_memory_used@@Base+0x1104>  // b.plast
  413d34:	cmp	x23, x0
  413d38:	csel	x3, x28, x0, ls  // ls = plast
  413d3c:	add	x3, x3, x22
  413d40:	str	x3, [x1, x0, lsl #3]
  413d44:	str	w4, [x2, x0, lsl #2]
  413d48:	add	x0, x0, #0x1
  413d4c:	cmp	x0, x27
  413d50:	b.ne	413d34 <_obstack_memory_used@@Base+0x10e4>  // b.any
  413d54:	ldp	x0, x1, [x19, #88]
  413d58:	sub	x27, x27, x23
  413d5c:	add	x0, x27, x0
  413d60:	str	x0, [x19, #88]
  413d64:	cmp	x22, x1
  413d68:	b.ge	413d78 <_obstack_memory_used@@Base+0x1128>  // b.tcont
  413d6c:	ldr	x1, [x19, #104]
  413d70:	add	x27, x1, x27
  413d74:	str	x27, [x19, #104]
  413d78:	ldr	x21, [x19, #64]
  413d7c:	mov	x20, x25
  413d80:	add	x22, x23, x22
  413d84:	cmp	x21, x0
  413d88:	csel	x21, x21, x0, le
  413d8c:	ldp	x23, x24, [sp, #48]
  413d90:	ldp	x25, x26, [sp, #64]
  413d94:	ldp	x27, x28, [sp, #80]
  413d98:	b	413854 <_obstack_memory_used@@Base+0xc04>
  413d9c:	ldr	x0, [sp, #120]
  413da0:	ldp	x23, x24, [sp, #48]
  413da4:	ldp	x25, x26, [sp, #64]
  413da8:	ldp	x27, x28, [sp, #80]
  413dac:	str	x0, [x19, #32]
  413db0:	b	413abc <_obstack_memory_used@@Base+0xe6c>
  413db4:	lsl	x0, x0, #3
  413db8:	str	x3, [sp, #104]
  413dbc:	bl	402800 <malloc@plt>
  413dc0:	str	x0, [x19, #24]
  413dc4:	ldr	x3, [sp, #104]
  413dc8:	cbnz	x0, 413cd0 <_obstack_memory_used@@Base+0x1080>
  413dcc:	mov	w0, #0xc                   	// #12
  413dd0:	ldp	x23, x24, [sp, #48]
  413dd4:	ldp	x25, x26, [sp, #64]
  413dd8:	ldp	x27, x28, [sp, #80]
  413ddc:	b	413990 <_obstack_memory_used@@Base+0xd40>
  413de0:	add	x3, sp, #0x80
  413de4:	mov	x25, x3
  413de8:	b	413898 <_obstack_memory_used@@Base+0xc48>
  413dec:	ldr	x1, [x19, #24]
  413df0:	str	x22, [x1, x20, lsl #3]
  413df4:	b	413c58 <_obstack_memory_used@@Base+0x1008>
  413df8:	and	x0, x0, #0xff
  413dfc:	ldrb	w0, [x1, x0]
  413e00:	b	413c44 <_obstack_memory_used@@Base+0xff4>
  413e04:	nop
  413e08:	stp	x29, x30, [sp, #-32]!
  413e0c:	mov	x3, #0xffffffffffffffe     	// #1152921504606846974
  413e10:	mov	x29, sp
  413e14:	ldr	x2, [x0, #64]
  413e18:	stp	x19, x20, [sp, #16]
  413e1c:	cmp	x2, x3
  413e20:	b.hi	413f34 <_obstack_memory_used@@Base+0x12e4>  // b.pmore
  413e24:	ldr	x3, [x0, #88]
  413e28:	lsl	x2, x2, #1
  413e2c:	sxtw	x1, w1
  413e30:	mov	x19, x0
  413e34:	cmp	x2, x3
  413e38:	csel	x2, x2, x3, le
  413e3c:	cmp	x2, x1
  413e40:	csel	x1, x2, x1, ge  // ge = tcont
  413e44:	bl	413238 <_obstack_memory_used@@Base+0x5e8>
  413e48:	mov	w20, w0
  413e4c:	cbnz	w0, 413e9c <_obstack_memory_used@@Base+0x124c>
  413e50:	ldr	x0, [x19, #184]
  413e54:	cbz	x0, 413e70 <_obstack_memory_used@@Base+0x1220>
  413e58:	ldr	x1, [x19, #64]
  413e5c:	add	x1, x1, #0x1
  413e60:	lsl	x1, x1, #3
  413e64:	bl	402930 <realloc@plt>
  413e68:	cbz	x0, 413f34 <_obstack_memory_used@@Base+0x12e4>
  413e6c:	str	x0, [x19, #184]
  413e70:	ldrb	w0, [x19, #136]
  413e74:	ldr	w1, [x19, #144]
  413e78:	cmp	w1, #0x1
  413e7c:	cbz	w0, 413eac <_obstack_memory_used@@Base+0x125c>
  413e80:	mov	x0, x19
  413e84:	b.le	413f20 <_obstack_memory_used@@Base+0x12d0>
  413e88:	ldp	x19, x20, [sp, #16]
  413e8c:	ldp	x29, x30, [sp], #32
  413e90:	b	413818 <_obstack_memory_used@@Base+0xbc8>
  413e94:	mov	x5, x1
  413e98:	stp	x5, x5, [x19, #48]
  413e9c:	mov	w0, w20
  413ea0:	ldp	x19, x20, [sp, #16]
  413ea4:	ldp	x29, x30, [sp], #32
  413ea8:	ret
  413eac:	b.gt	413f08 <_obstack_memory_used@@Base+0x12b8>
  413eb0:	ldr	x0, [x19, #120]
  413eb4:	cbz	x0, 413e9c <_obstack_memory_used@@Base+0x124c>
  413eb8:	ldr	x5, [x19, #64]
  413ebc:	ldr	x2, [x19, #88]
  413ec0:	ldr	x1, [x19, #48]
  413ec4:	cmp	x5, x2
  413ec8:	csel	x5, x5, x2, le
  413ecc:	cmp	x5, x1
  413ed0:	b.gt	413edc <_obstack_memory_used@@Base+0x128c>
  413ed4:	b	413e94 <_obstack_memory_used@@Base+0x1244>
  413ed8:	ldr	x0, [x19, #120]
  413edc:	ldp	x2, x3, [x19]
  413ee0:	ldr	x4, [x19, #40]
  413ee4:	add	x2, x2, x1
  413ee8:	ldrb	w2, [x2, x4]
  413eec:	ldrb	w0, [x0, x2]
  413ef0:	strb	w0, [x3, x1]
  413ef4:	add	x1, x1, #0x1
  413ef8:	cmp	x5, x1
  413efc:	b.ne	413ed8 <_obstack_memory_used@@Base+0x1288>  // b.any
  413f00:	stp	x5, x5, [x19, #48]
  413f04:	b	413e9c <_obstack_memory_used@@Base+0x124c>
  413f08:	mov	x0, x19
  413f0c:	bl	413638 <_obstack_memory_used@@Base+0x9e8>
  413f10:	mov	w0, w20
  413f14:	ldp	x19, x20, [sp, #16]
  413f18:	ldp	x29, x30, [sp], #32
  413f1c:	ret
  413f20:	bl	413598 <_obstack_memory_used@@Base+0x948>
  413f24:	mov	w0, w20
  413f28:	ldp	x19, x20, [sp, #16]
  413f2c:	ldp	x29, x30, [sp], #32
  413f30:	ret
  413f34:	mov	w20, #0xc                   	// #12
  413f38:	mov	w0, w20
  413f3c:	ldp	x19, x20, [sp, #16]
  413f40:	ldp	x29, x30, [sp], #32
  413f44:	ret
  413f48:	stp	x29, x30, [sp, #-48]!
  413f4c:	mov	x29, sp
  413f50:	stp	x19, x20, [sp, #16]
  413f54:	mov	x19, x0
  413f58:	mov	x20, x1
  413f5c:	ldr	x0, [x0, #64]
  413f60:	str	x21, [sp, #32]
  413f64:	ldr	x21, [x19, #192]
  413f68:	cmp	x0, x1
  413f6c:	b.gt	413fa8 <_obstack_memory_used@@Base+0x1358>
  413f70:	ldr	x1, [x19, #88]
  413f74:	cmp	x0, x1
  413f78:	b.ge	413fa8 <_obstack_memory_used@@Base+0x1358>  // b.tcont
  413f7c:	add	w1, w20, #0x1
  413f80:	mov	x0, x19
  413f84:	bl	413e08 <_obstack_memory_used@@Base+0x11b8>
  413f88:	cbnz	w0, 413f98 <_obstack_memory_used@@Base+0x1348>
  413f8c:	cmp	x21, x20
  413f90:	mov	w0, #0x0                   	// #0
  413f94:	b.lt	413fd4 <_obstack_memory_used@@Base+0x1384>  // b.tstop
  413f98:	ldp	x19, x20, [sp, #16]
  413f9c:	ldr	x21, [sp, #32]
  413fa0:	ldp	x29, x30, [sp], #48
  413fa4:	ret
  413fa8:	ldr	x0, [x19, #48]
  413fac:	cmp	x0, x20
  413fb0:	b.gt	413f8c <_obstack_memory_used@@Base+0x133c>
  413fb4:	ldr	x1, [x19, #88]
  413fb8:	cmp	x0, x1
  413fbc:	b.ge	413f8c <_obstack_memory_used@@Base+0x133c>  // b.tcont
  413fc0:	add	w1, w20, #0x1
  413fc4:	mov	x0, x19
  413fc8:	bl	413e08 <_obstack_memory_used@@Base+0x11b8>
  413fcc:	cbz	w0, 413f8c <_obstack_memory_used@@Base+0x133c>
  413fd0:	b	413f98 <_obstack_memory_used@@Base+0x1348>
  413fd4:	ldr	x0, [x19, #184]
  413fd8:	add	x3, x21, #0x1
  413fdc:	sub	x2, x20, x21
  413fe0:	mov	w1, #0x0                   	// #0
  413fe4:	lsl	x2, x2, #3
  413fe8:	add	x0, x0, x3, lsl #3
  413fec:	bl	4028d0 <memset@plt>
  413ff0:	str	x20, [x19, #192]
  413ff4:	mov	w0, #0x0                   	// #0
  413ff8:	ldp	x19, x20, [sp, #16]
  413ffc:	ldr	x21, [sp, #32]
  414000:	ldp	x29, x30, [sp], #48
  414004:	ret
  414008:	stp	x29, x30, [sp, #-32]!
  41400c:	mov	x29, sp
  414010:	str	x19, [sp, #16]
  414014:	mov	x19, x0
  414018:	ldr	x0, [x0]
  41401c:	bl	402ae0 <free@plt>
  414020:	ldr	x0, [x19, #8]
  414024:	bl	402ae0 <free@plt>
  414028:	ldr	x0, [x19, #16]
  41402c:	bl	402ae0 <free@plt>
  414030:	ldr	x0, [x19, #24]
  414034:	bl	402ae0 <free@plt>
  414038:	mov	x0, x19
  41403c:	ldr	x19, [sp, #16]
  414040:	ldp	x29, x30, [sp], #32
  414044:	b	402ae0 <free@plt>
  414048:	ldr	w1, [x0, #8]
  41404c:	and	w1, w1, #0x7ffff
  414050:	and	w1, w1, #0xfffc00ff
  414054:	cmp	w1, #0x6
  414058:	b.eq	414068 <_obstack_memory_used@@Base+0x1418>  // b.none
  41405c:	cmp	w1, #0x3
  414060:	b.eq	414070 <_obstack_memory_used@@Base+0x1420>  // b.none
  414064:	ret
  414068:	ldr	x0, [x0]
  41406c:	b	414008 <_obstack_memory_used@@Base+0x13b8>
  414070:	ldr	x0, [x0]
  414074:	b	402ae0 <free@plt>
  414078:	stp	x29, x30, [sp, #-16]!
  41407c:	add	x0, x1, #0x28
  414080:	mov	x29, sp
  414084:	bl	414048 <_obstack_memory_used@@Base+0x13f8>
  414088:	mov	w0, #0x0                   	// #0
  41408c:	ldp	x29, x30, [sp], #16
  414090:	ret
  414094:	nop
  414098:	stp	x29, x30, [sp, #-96]!
  41409c:	mov	x29, sp
  4140a0:	stp	x21, x22, [sp, #32]
  4140a4:	ldp	x21, x4, [x0, #8]
  4140a8:	stp	x19, x20, [sp, #16]
  4140ac:	mov	x19, x0
  4140b0:	stp	x23, x24, [sp, #48]
  4140b4:	mov	x20, x2
  4140b8:	mov	x24, x1
  4140bc:	stp	x25, x26, [sp, #64]
  4140c0:	and	w25, w2, #0xff
  4140c4:	cmp	x4, x21
  4140c8:	b.cs	414174 <_obstack_memory_used@@Base+0x1524>  // b.hs, b.nlast
  4140cc:	ldr	x22, [x0, #24]
  4140d0:	ldr	x21, [x0, #40]
  4140d4:	lsl	x3, x4, #4
  4140d8:	ldr	x5, [x19]
  4140dc:	and	w1, w20, #0xfffc00ff
  4140e0:	cmp	w25, #0x6
  4140e4:	add	x2, x5, x3
  4140e8:	cset	w0, eq  // eq = none
  4140ec:	str	x24, [x5, x3]
  4140f0:	cmp	w25, #0x5
  4140f4:	str	x20, [x2, #8]
  4140f8:	str	w1, [x2, #8]
  4140fc:	b.ne	41410c <_obstack_memory_used@@Base+0x14bc>  // b.any
  414100:	ldr	w0, [x19, #180]
  414104:	cmp	w0, #0x1
  414108:	cset	w0, gt
  41410c:	ldrb	w1, [x2, #10]
  414110:	mov	x3, #0xffffffffffffffff    	// #-1
  414114:	bfi	w1, w0, #4, #1
  414118:	strb	w1, [x2, #10]
  41411c:	str	x3, [x22, x4, lsl #3]
  414120:	ldr	x0, [x19, #16]
  414124:	add	x0, x0, x0, lsl #1
  414128:	add	x0, x21, x0, lsl #3
  41412c:	stp	xzr, xzr, [x0]
  414130:	str	xzr, [x0, #16]
  414134:	ldr	x0, [x19, #16]
  414138:	ldr	x1, [x19, #48]
  41413c:	add	x0, x0, x0, lsl #1
  414140:	add	x0, x1, x0, lsl #3
  414144:	stp	xzr, xzr, [x0]
  414148:	str	xzr, [x0, #16]
  41414c:	ldr	x1, [x19, #16]
  414150:	mov	x0, x1
  414154:	add	x1, x1, #0x1
  414158:	str	x1, [x19, #16]
  41415c:	ldp	x19, x20, [sp, #16]
  414160:	ldp	x21, x22, [sp, #32]
  414164:	ldp	x23, x24, [sp, #48]
  414168:	ldp	x25, x26, [sp, #64]
  41416c:	ldp	x29, x30, [sp], #96
  414170:	ret
  414174:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  414178:	lsl	x23, x21, #1
  41417c:	movk	x0, #0xaaa, lsl #48
  414180:	cmp	x0, x21, lsl #1
  414184:	b.cc	414220 <_obstack_memory_used@@Base+0x15d0>  // b.lo, b.ul, b.last
  414188:	ldr	x0, [x19]
  41418c:	lsl	x1, x21, #5
  414190:	bl	402930 <realloc@plt>
  414194:	mov	x1, x0
  414198:	cbz	x0, 414220 <_obstack_memory_used@@Base+0x15d0>
  41419c:	ldr	x0, [x19, #24]
  4141a0:	str	x27, [sp, #80]
  4141a4:	str	x1, [x19]
  4141a8:	lsl	x26, x21, #4
  4141ac:	mov	x1, x26
  4141b0:	add	x21, x23, x21
  4141b4:	bl	402930 <realloc@plt>
  4141b8:	mov	x22, x0
  4141bc:	ldr	x0, [x19, #32]
  4141c0:	mov	x1, x26
  4141c4:	lsl	x21, x21, #4
  4141c8:	bl	402930 <realloc@plt>
  4141cc:	mov	x26, x0
  4141d0:	ldr	x0, [x19, #40]
  4141d4:	mov	x1, x21
  4141d8:	bl	402930 <realloc@plt>
  4141dc:	mov	x1, x21
  4141e0:	mov	x21, x0
  4141e4:	ldr	x0, [x19, #48]
  4141e8:	bl	402930 <realloc@plt>
  4141ec:	mov	x27, x0
  4141f0:	cmp	x22, #0x0
  4141f4:	ccmp	x26, #0x0, #0x4, ne  // ne = any
  4141f8:	b.eq	414228 <_obstack_memory_used@@Base+0x15d8>  // b.none
  4141fc:	cmp	x21, #0x0
  414200:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  414204:	b.eq	414228 <_obstack_memory_used@@Base+0x15d8>  // b.none
  414208:	str	x23, [x19, #8]
  41420c:	stp	x22, x26, [x19, #24]
  414210:	stp	x21, x0, [x19, #40]
  414214:	ldr	x4, [x19, #16]
  414218:	ldr	x27, [sp, #80]
  41421c:	b	4140d4 <_obstack_memory_used@@Base+0x1484>
  414220:	mov	x0, #0xffffffffffffffff    	// #-1
  414224:	b	41415c <_obstack_memory_used@@Base+0x150c>
  414228:	mov	x0, x22
  41422c:	bl	402ae0 <free@plt>
  414230:	mov	x0, x26
  414234:	bl	402ae0 <free@plt>
  414238:	mov	x0, x21
  41423c:	bl	402ae0 <free@plt>
  414240:	mov	x0, x27
  414244:	bl	402ae0 <free@plt>
  414248:	mov	x0, #0xffffffffffffffff    	// #-1
  41424c:	ldr	x27, [sp, #80]
  414250:	b	41415c <_obstack_memory_used@@Base+0x150c>
  414254:	nop
  414258:	stp	x29, x30, [sp, #-48]!
  41425c:	mov	x29, sp
  414260:	stp	x19, x20, [sp, #16]
  414264:	mov	x20, x1
  414268:	mov	x19, x0
  41426c:	stp	x21, x22, [sp, #32]
  414270:	lsl	x21, x1, #4
  414274:	mov	w22, w2
  414278:	ldr	x1, [x0]
  41427c:	add	x1, x1, x21
  414280:	ldp	x2, x3, [x1]
  414284:	mov	x1, x2
  414288:	mov	x2, x3
  41428c:	bl	414098 <_obstack_memory_used@@Base+0x1448>
  414290:	cmn	x0, #0x1
  414294:	b.eq	4142dc <_obstack_memory_used@@Base+0x168c>  // b.none
  414298:	ldr	x3, [x19]
  41429c:	and	w1, w22, #0x3ff
  4142a0:	add	x21, x3, x21
  4142a4:	add	x3, x3, x0, lsl #4
  4142a8:	ldr	w4, [x3, #8]
  4142ac:	bfi	w4, w1, #8, #10
  4142b0:	str	w4, [x3, #8]
  4142b4:	and	w4, w4, #0xfff800ff
  4142b8:	ldr	w2, [x21, #8]
  4142bc:	ldr	x5, [x19, #32]
  4142c0:	ubfx	x2, x2, #8, #10
  4142c4:	orr	w2, w2, w1
  4142c8:	lsl	w2, w2, #8
  4142cc:	orr	w2, w2, #0x40000
  4142d0:	orr	w2, w2, w4
  4142d4:	str	w2, [x3, #8]
  4142d8:	str	x20, [x5, x0, lsl #3]
  4142dc:	ldp	x19, x20, [sp, #16]
  4142e0:	ldp	x21, x22, [sp, #32]
  4142e4:	ldp	x29, x30, [sp], #48
  4142e8:	ret
  4142ec:	nop
  4142f0:	stp	x29, x30, [sp, #-80]!
  4142f4:	mov	x29, sp
  4142f8:	stp	x19, x20, [sp, #16]
  4142fc:	mov	x20, x0
  414300:	mov	x19, x2
  414304:	stp	x21, x22, [sp, #32]
  414308:	mov	x21, x1
  41430c:	stp	x23, x24, [sp, #48]
  414310:	mov	x24, x3
  414314:	mov	w23, w4
  414318:	stp	x25, x26, [sp, #64]
  41431c:	mov	x22, x19
  414320:	ldr	x4, [x20]
  414324:	ldr	x0, [x20, #40]
  414328:	add	x3, x4, x21, lsl #4
  41432c:	ldrb	w1, [x3, #8]
  414330:	cmp	w1, #0x4
  414334:	b.eq	4144ac <_obstack_memory_used@@Base+0x185c>  // b.none
  414338:	add	x25, x21, x21, lsl #1
  41433c:	lsl	x25, x25, #3
  414340:	add	x2, x0, x25
  414344:	ldr	x1, [x2, #8]
  414348:	cbz	x1, 414560 <_obstack_memory_used@@Base+0x1910>
  41434c:	ldr	x2, [x2, #16]
  414350:	add	x22, x19, x19, lsl #1
  414354:	cmp	x1, #0x1
  414358:	lsl	x22, x22, #3
  41435c:	add	x0, x0, x22
  414360:	ldr	x26, [x2]
  414364:	b.eq	41443c <_obstack_memory_used@@Base+0x17ec>  // b.none
  414368:	ldr	x3, [x20, #16]
  41436c:	sub	x1, x3, #0x1
  414370:	add	x2, x4, x1, lsl #4
  414374:	ldrb	w5, [x2, #10]
  414378:	str	xzr, [x0, #8]
  41437c:	tst	x5, #0x4
  414380:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  414384:	b.le	41450c <_obstack_memory_used@@Base+0x18bc>
  414388:	add	x3, x4, x3, lsl #4
  41438c:	sub	x3, x3, x2
  414390:	sub	x3, x3, #0x20
  414394:	ldr	x5, [x20, #32]
  414398:	b	4143b4 <_obstack_memory_used@@Base+0x1764>
  41439c:	add	x2, x2, x3
  4143a0:	sub	x1, x1, #0x1
  4143a4:	ldrb	w4, [x2, #10]
  4143a8:	tst	x4, #0x4
  4143ac:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  4143b0:	b.le	41450c <_obstack_memory_used@@Base+0x18bc>
  4143b4:	ldr	x4, [x5, x1, lsl #3]
  4143b8:	cmp	x4, x26
  4143bc:	b.ne	41439c <_obstack_memory_used@@Base+0x174c>  // b.any
  4143c0:	ldr	w4, [x2, #8]
  4143c4:	ubfx	x4, x4, #8, #10
  4143c8:	cmp	w23, w4
  4143cc:	b.ne	41439c <_obstack_memory_used@@Base+0x174c>  // b.any
  4143d0:	bl	413350 <_obstack_memory_used@@Base+0x700>
  4143d4:	tst	w0, #0xff
  4143d8:	b.eq	414420 <_obstack_memory_used@@Base+0x17d0>  // b.none
  4143dc:	ldr	x1, [x20, #40]
  4143e0:	mov	w2, w23
  4143e4:	mov	x0, x20
  4143e8:	add	x25, x1, x25
  4143ec:	ldr	x1, [x25, #16]
  4143f0:	ldr	x21, [x1, #8]
  4143f4:	mov	x1, x21
  4143f8:	bl	414258 <_obstack_memory_used@@Base+0x1608>
  4143fc:	mov	x19, x0
  414400:	cmn	x0, #0x1
  414404:	b.eq	414420 <_obstack_memory_used@@Base+0x17d0>  // b.none
  414408:	mov	x1, x0
  41440c:	ldr	x0, [x20, #40]
  414410:	add	x0, x0, x22
  414414:	bl	413350 <_obstack_memory_used@@Base+0x700>
  414418:	tst	w0, #0xff
  41441c:	b.ne	41431c <_obstack_memory_used@@Base+0x16cc>  // b.any
  414420:	mov	w0, #0xc                   	// #12
  414424:	ldp	x19, x20, [sp, #16]
  414428:	ldp	x21, x22, [sp, #32]
  41442c:	ldp	x23, x24, [sp, #48]
  414430:	ldp	x25, x26, [sp, #64]
  414434:	ldp	x29, x30, [sp], #80
  414438:	ret
  41443c:	str	xzr, [x0, #8]
  414440:	cmp	x21, x24
  414444:	ccmp	x21, x19, #0x4, eq  // eq = none
  414448:	b.ne	414574 <_obstack_memory_used@@Base+0x1924>  // b.any
  41444c:	ldr	w2, [x3, #8]
  414450:	mov	x1, x26
  414454:	mov	x0, x20
  414458:	ubfx	x2, x2, #8, #10
  41445c:	orr	w23, w23, w2
  414460:	mov	w2, w23
  414464:	bl	414258 <_obstack_memory_used@@Base+0x1608>
  414468:	mov	x19, x0
  41446c:	cmn	x0, #0x1
  414470:	b.eq	414420 <_obstack_memory_used@@Base+0x17d0>  // b.none
  414474:	mov	x1, x0
  414478:	ldr	x0, [x20, #40]
  41447c:	add	x0, x0, x22
  414480:	bl	413350 <_obstack_memory_used@@Base+0x700>
  414484:	tst	w0, #0xff
  414488:	b.eq	414420 <_obstack_memory_used@@Base+0x17d0>  // b.none
  41448c:	ldr	x4, [x20]
  414490:	mov	x21, x26
  414494:	mov	x22, x19
  414498:	ldr	x0, [x20, #40]
  41449c:	add	x3, x4, x21, lsl #4
  4144a0:	ldrb	w1, [x3, #8]
  4144a4:	cmp	w1, #0x4
  4144a8:	b.ne	414338 <_obstack_memory_used@@Base+0x16e8>  // b.any
  4144ac:	add	x19, x19, x19, lsl #1
  4144b0:	lsl	x26, x21, #3
  4144b4:	ldr	x3, [x20, #24]
  4144b8:	lsl	x25, x19, #3
  4144bc:	add	x1, x0, x25
  4144c0:	mov	w2, w23
  4144c4:	mov	x0, x20
  4144c8:	ldr	x21, [x3, x21, lsl #3]
  4144cc:	str	xzr, [x1, #8]
  4144d0:	mov	x1, x21
  4144d4:	bl	414258 <_obstack_memory_used@@Base+0x1608>
  4144d8:	mov	x19, x0
  4144dc:	cmn	x0, #0x1
  4144e0:	b.eq	414420 <_obstack_memory_used@@Base+0x17d0>  // b.none
  4144e4:	ldr	x2, [x20, #24]
  4144e8:	mov	x1, x0
  4144ec:	ldr	x0, [x20, #40]
  4144f0:	ldr	x3, [x2, x26]
  4144f4:	str	x3, [x2, x22, lsl #3]
  4144f8:	add	x0, x0, x25
  4144fc:	bl	413350 <_obstack_memory_used@@Base+0x700>
  414500:	tst	w0, #0xff
  414504:	b.ne	41431c <_obstack_memory_used@@Base+0x16cc>  // b.any
  414508:	b	414420 <_obstack_memory_used@@Base+0x17d0>
  41450c:	mov	w2, w23
  414510:	mov	x1, x26
  414514:	mov	x0, x20
  414518:	bl	414258 <_obstack_memory_used@@Base+0x1608>
  41451c:	mov	x19, x0
  414520:	cmn	x0, #0x1
  414524:	b.eq	414420 <_obstack_memory_used@@Base+0x17d0>  // b.none
  414528:	ldr	x0, [x20, #40]
  41452c:	mov	x1, x19
  414530:	add	x0, x0, x22
  414534:	bl	413350 <_obstack_memory_used@@Base+0x700>
  414538:	tst	w0, #0xff
  41453c:	b.eq	414420 <_obstack_memory_used@@Base+0x17d0>  // b.none
  414540:	mov	x2, x19
  414544:	mov	x1, x26
  414548:	mov	w4, w23
  41454c:	mov	x3, x24
  414550:	mov	x0, x20
  414554:	bl	4142f0 <_obstack_memory_used@@Base+0x16a0>
  414558:	cbz	w0, 4143dc <_obstack_memory_used@@Base+0x178c>
  41455c:	b	414424 <_obstack_memory_used@@Base+0x17d4>
  414560:	ldr	x1, [x20, #24]
  414564:	mov	w0, #0x0                   	// #0
  414568:	ldr	x2, [x1, x21, lsl #3]
  41456c:	str	x2, [x1, x19, lsl #3]
  414570:	b	414424 <_obstack_memory_used@@Base+0x17d4>
  414574:	mov	x1, x26
  414578:	bl	413350 <_obstack_memory_used@@Base+0x700>
  41457c:	tst	w0, #0xff
  414580:	mov	w0, #0x0                   	// #0
  414584:	b.ne	414424 <_obstack_memory_used@@Base+0x17d4>  // b.any
  414588:	b	414420 <_obstack_memory_used@@Base+0x17d0>
  41458c:	nop
  414590:	stp	x29, x30, [sp, #-32]!
  414594:	mov	x29, sp
  414598:	str	x19, [sp, #16]
  41459c:	mov	x19, x0
  4145a0:	ldr	x0, [x0, #48]
  4145a4:	bl	402ae0 <free@plt>
  4145a8:	ldr	x0, [x19, #72]
  4145ac:	bl	402ae0 <free@plt>
  4145b0:	ldr	x0, [x19, #80]
  4145b4:	add	x1, x19, #0x8
  4145b8:	cmp	x0, x1
  4145bc:	b.eq	4145d0 <_obstack_memory_used@@Base+0x1980>  // b.none
  4145c0:	ldr	x0, [x0, #16]
  4145c4:	bl	402ae0 <free@plt>
  4145c8:	ldr	x0, [x19, #80]
  4145cc:	bl	402ae0 <free@plt>
  4145d0:	ldr	x0, [x19, #24]
  4145d4:	bl	402ae0 <free@plt>
  4145d8:	ldr	x0, [x19, #96]
  4145dc:	bl	402ae0 <free@plt>
  4145e0:	ldr	x0, [x19, #88]
  4145e4:	bl	402ae0 <free@plt>
  4145e8:	mov	x0, x19
  4145ec:	ldr	x19, [sp, #16]
  4145f0:	ldp	x29, x30, [sp], #32
  4145f4:	b	402ae0 <free@plt>
  4145f8:	stp	x29, x30, [sp, #-32]!
  4145fc:	mov	x29, sp
  414600:	str	x19, [sp, #16]
  414604:	mov	x19, x0
  414608:	ldr	x0, [x0, #16]
  41460c:	bl	402ae0 <free@plt>
  414610:	ldr	x0, [x19, #24]
  414614:	bl	402ae0 <free@plt>
  414618:	ldrb	w0, [x19, #139]
  41461c:	cbnz	w0, 41462c <_obstack_memory_used@@Base+0x19dc>
  414620:	ldr	x19, [sp, #16]
  414624:	ldp	x29, x30, [sp], #32
  414628:	ret
  41462c:	ldr	x0, [x19, #8]
  414630:	ldr	x19, [sp, #16]
  414634:	ldp	x29, x30, [sp], #32
  414638:	b	402ae0 <free@plt>
  41463c:	nop
  414640:	stp	x29, x30, [sp, #-64]!
  414644:	mov	x29, sp
  414648:	stp	x21, x22, [sp, #32]
  41464c:	mov	x21, x0
  414650:	ldr	x0, [x0]
  414654:	stp	x19, x20, [sp, #16]
  414658:	str	x23, [sp, #48]
  41465c:	cbz	x0, 41468c <_obstack_memory_used@@Base+0x1a3c>
  414660:	ldr	x1, [x21, #16]
  414664:	cbz	x1, 41468c <_obstack_memory_used@@Base+0x1a3c>
  414668:	mov	x19, #0x0                   	// #0
  41466c:	b	414674 <_obstack_memory_used@@Base+0x1a24>
  414670:	ldr	x0, [x21]
  414674:	add	x0, x0, x19, lsl #4
  414678:	bl	414048 <_obstack_memory_used@@Base+0x13f8>
  41467c:	add	x19, x19, #0x1
  414680:	ldr	x0, [x21, #16]
  414684:	cmp	x0, x19
  414688:	b.hi	414670 <_obstack_memory_used@@Base+0x1a20>  // b.pmore
  41468c:	ldr	x0, [x21, #24]
  414690:	mov	x19, #0x0                   	// #0
  414694:	mov	x20, #0x0                   	// #0
  414698:	bl	402ae0 <free@plt>
  41469c:	ldr	x0, [x21, #16]
  4146a0:	cbz	x0, 4146f8 <_obstack_memory_used@@Base+0x1aa8>
  4146a4:	nop
  4146a8:	ldr	x0, [x21, #48]
  4146ac:	add	x20, x20, #0x1
  4146b0:	add	x1, x0, x19
  4146b4:	cbz	x0, 4146c0 <_obstack_memory_used@@Base+0x1a70>
  4146b8:	ldr	x0, [x1, #16]
  4146bc:	bl	402ae0 <free@plt>
  4146c0:	ldr	x0, [x21, #56]
  4146c4:	add	x1, x0, x19
  4146c8:	cbz	x0, 4146d4 <_obstack_memory_used@@Base+0x1a84>
  4146cc:	ldr	x0, [x1, #16]
  4146d0:	bl	402ae0 <free@plt>
  4146d4:	ldr	x0, [x21, #40]
  4146d8:	add	x1, x0, x19
  4146dc:	add	x19, x19, #0x18
  4146e0:	cbz	x0, 4146ec <_obstack_memory_used@@Base+0x1a9c>
  4146e4:	ldr	x0, [x1, #16]
  4146e8:	bl	402ae0 <free@plt>
  4146ec:	ldr	x0, [x21, #16]
  4146f0:	cmp	x0, x20
  4146f4:	b.hi	4146a8 <_obstack_memory_used@@Base+0x1a58>  // b.pmore
  4146f8:	ldr	x0, [x21, #40]
  4146fc:	mov	x22, #0x0                   	// #0
  414700:	mov	x23, #0x0                   	// #0
  414704:	bl	402ae0 <free@plt>
  414708:	ldr	x0, [x21, #48]
  41470c:	bl	402ae0 <free@plt>
  414710:	ldr	x0, [x21, #56]
  414714:	bl	402ae0 <free@plt>
  414718:	ldr	x0, [x21]
  41471c:	bl	402ae0 <free@plt>
  414720:	ldr	x0, [x21, #64]
  414724:	cbz	x0, 414784 <_obstack_memory_used@@Base+0x1b34>
  414728:	ldr	x1, [x0, x22]
  41472c:	add	x20, x0, x22
  414730:	mov	x19, #0x0                   	// #0
  414734:	cmp	x1, #0x0
  414738:	b.le	41475c <_obstack_memory_used@@Base+0x1b0c>
  41473c:	nop
  414740:	ldr	x1, [x20, #16]
  414744:	ldr	x0, [x1, x19, lsl #3]
  414748:	add	x19, x19, #0x1
  41474c:	bl	414590 <_obstack_memory_used@@Base+0x1940>
  414750:	ldr	x1, [x20]
  414754:	cmp	x1, x19
  414758:	b.gt	414740 <_obstack_memory_used@@Base+0x1af0>
  41475c:	ldr	x0, [x20, #16]
  414760:	add	x23, x23, #0x1
  414764:	add	x22, x22, #0x18
  414768:	bl	402ae0 <free@plt>
  41476c:	ldr	x0, [x21, #136]
  414770:	cmp	x0, x23
  414774:	b.cc	414780 <_obstack_memory_used@@Base+0x1b30>  // b.lo, b.ul, b.last
  414778:	ldr	x0, [x21, #64]
  41477c:	b	414728 <_obstack_memory_used@@Base+0x1ad8>
  414780:	ldr	x0, [x21, #64]
  414784:	bl	402ae0 <free@plt>
  414788:	ldr	x0, [x21, #120]
  41478c:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xf3b0>
  414790:	add	x1, x1, #0x228
  414794:	cmp	x0, x1
  414798:	b.eq	4147a0 <_obstack_memory_used@@Base+0x1b50>  // b.none
  41479c:	bl	402ae0 <free@plt>
  4147a0:	ldr	x0, [x21, #224]
  4147a4:	bl	402ae0 <free@plt>
  4147a8:	mov	x0, x21
  4147ac:	ldp	x19, x20, [sp, #16]
  4147b0:	ldp	x21, x22, [sp, #32]
  4147b4:	ldr	x23, [sp, #48]
  4147b8:	ldp	x29, x30, [sp], #64
  4147bc:	b	402ae0 <free@plt>
  4147c0:	stp	x29, x30, [sp, #-64]!
  4147c4:	mov	x29, sp
  4147c8:	str	x23, [sp, #48]
  4147cc:	mov	x23, x0
  4147d0:	ldr	x0, [x0, #232]
  4147d4:	cmp	x0, #0x0
  4147d8:	b.le	414868 <_obstack_memory_used@@Base+0x1c18>
  4147dc:	stp	x19, x20, [sp, #16]
  4147e0:	stp	x21, x22, [sp, #32]
  4147e4:	mov	x22, #0x0                   	// #0
  4147e8:	ldr	x0, [x23, #248]
  4147ec:	ldr	x21, [x0, x22, lsl #3]
  4147f0:	ldr	x0, [x21, #32]
  4147f4:	cmp	x0, #0x0
  4147f8:	b.le	414828 <_obstack_memory_used@@Base+0x1bd8>
  4147fc:	mov	x19, #0x0                   	// #0
  414800:	ldr	x1, [x21, #40]
  414804:	ldr	x20, [x1, x19, lsl #3]
  414808:	add	x19, x19, #0x1
  41480c:	ldr	x0, [x20, #32]
  414810:	bl	402ae0 <free@plt>
  414814:	mov	x0, x20
  414818:	bl	402ae0 <free@plt>
  41481c:	ldr	x1, [x21, #32]
  414820:	cmp	x1, x19
  414824:	b.gt	414800 <_obstack_memory_used@@Base+0x1bb0>
  414828:	ldr	x0, [x21, #40]
  41482c:	bl	402ae0 <free@plt>
  414830:	ldr	x0, [x21, #16]
  414834:	cbz	x0, 414848 <_obstack_memory_used@@Base+0x1bf8>
  414838:	ldr	x0, [x0, #16]
  41483c:	bl	402ae0 <free@plt>
  414840:	ldr	x0, [x21, #16]
  414844:	bl	402ae0 <free@plt>
  414848:	mov	x0, x21
  41484c:	bl	402ae0 <free@plt>
  414850:	ldr	x0, [x23, #232]
  414854:	add	x22, x22, #0x1
  414858:	cmp	x0, x22
  41485c:	b.gt	4147e8 <_obstack_memory_used@@Base+0x1b98>
  414860:	ldp	x19, x20, [sp, #16]
  414864:	ldp	x21, x22, [sp, #32]
  414868:	str	xzr, [x23, #200]
  41486c:	str	xzr, [x23, #232]
  414870:	ldr	x23, [sp, #48]
  414874:	ldp	x29, x30, [sp], #64
  414878:	ret
  41487c:	nop
  414880:	ldr	x3, [x0, #48]
  414884:	add	x1, x1, #0x1
  414888:	cmp	x1, x3
  41488c:	b.ge	4148bc <_obstack_memory_used@@Base+0x1c6c>  // b.tcont
  414890:	ldr	x4, [x0, #16]
  414894:	mov	w0, #0x1                   	// #1
  414898:	b	4148a8 <_obstack_memory_used@@Base+0x1c58>
  41489c:	add	w0, w0, #0x1
  4148a0:	cmp	x1, x3
  4148a4:	b.eq	4148b8 <_obstack_memory_used@@Base+0x1c68>  // b.none
  4148a8:	ldr	w2, [x4, x1, lsl #2]
  4148ac:	add	x1, x1, #0x1
  4148b0:	cmn	w2, #0x1
  4148b4:	b.eq	41489c <_obstack_memory_used@@Base+0x1c4c>  // b.none
  4148b8:	ret
  4148bc:	mov	w0, #0x1                   	// #1
  4148c0:	ret
  4148c4:	nop
  4148c8:	cmp	x0, #0x0
  4148cc:	b.le	414918 <_obstack_memory_used@@Base+0x1cc8>
  4148d0:	sub	x3, x0, #0x1
  4148d4:	mov	x0, #0x0                   	// #0
  4148d8:	ldr	x5, [x1]
  4148dc:	b	4148f4 <_obstack_memory_used@@Base+0x1ca4>
  4148e0:	lsr	x1, x1, #1
  4148e4:	ldr	x4, [x5, x1, lsl #3]
  4148e8:	cmp	x4, x2
  4148ec:	b.lt	414910 <_obstack_memory_used@@Base+0x1cc0>  // b.tstop
  4148f0:	mov	x3, x1
  4148f4:	add	x1, x3, x0
  4148f8:	cmp	x3, x0
  4148fc:	b.hi	4148e0 <_obstack_memory_used@@Base+0x1c90>  // b.pmore
  414900:	ldr	x1, [x5, x0, lsl #3]
  414904:	cmp	x2, x1
  414908:	csinc	x0, xzr, x0, ne  // ne = any
  41490c:	ret
  414910:	add	x0, x1, #0x1
  414914:	b	4148f4 <_obstack_memory_used@@Base+0x1ca4>
  414918:	mov	x0, #0x0                   	// #0
  41491c:	ret
  414920:	stp	x29, x30, [sp, #-64]!
  414924:	mov	x29, sp
  414928:	stp	x19, x20, [sp, #16]
  41492c:	mov	x20, x1
  414930:	mov	x19, x2
  414934:	stp	x21, x22, [sp, #32]
  414938:	mov	x21, x0
  41493c:	mov	w22, w4
  414940:	stp	x23, x24, [sp, #48]
  414944:	mov	x23, x3
  414948:	add	x24, x1, #0x10
  41494c:	ldr	x0, [x20, #8]
  414950:	mov	x2, x19
  414954:	mov	x1, x24
  414958:	bl	4148c8 <_obstack_memory_used@@Base+0x1c78>
  41495c:	mov	x3, x0
  414960:	lsl	x2, x19, #4
  414964:	mov	x1, x19
  414968:	mov	x0, x20
  41496c:	cbnz	x3, 414a30 <_obstack_memory_used@@Base+0x1de0>
  414970:	ldr	x3, [x21]
  414974:	add	x4, x3, x2
  414978:	ldrb	w4, [x4, #8]
  41497c:	cmp	w4, w22
  414980:	b.ne	414990 <_obstack_memory_used@@Base+0x1d40>  // b.any
  414984:	ldr	x2, [x3, x2]
  414988:	cmp	x2, x23
  41498c:	b.eq	4149f8 <_obstack_memory_used@@Base+0x1da8>  // b.none
  414990:	bl	413350 <_obstack_memory_used@@Base+0x700>
  414994:	add	x19, x19, x19, lsl #1
  414998:	tst	w0, #0xff
  41499c:	b.eq	414a18 <_obstack_memory_used@@Base+0x1dc8>  // b.none
  4149a0:	ldr	x2, [x21, #40]
  4149a4:	lsl	x19, x19, #3
  4149a8:	add	x2, x2, x19
  4149ac:	ldr	x0, [x2, #8]
  4149b0:	cmp	x0, #0x2
  4149b4:	cbz	x0, 414a30 <_obstack_memory_used@@Base+0x1de0>
  4149b8:	ldr	x2, [x2, #16]
  4149bc:	b.eq	4149c8 <_obstack_memory_used@@Base+0x1d78>  // b.none
  4149c0:	ldr	x19, [x2]
  4149c4:	b	41494c <_obstack_memory_used@@Base+0x1cfc>
  4149c8:	ldr	x2, [x2, #8]
  4149cc:	mov	w4, w22
  4149d0:	mov	x3, x23
  4149d4:	mov	x1, x20
  4149d8:	mov	x0, x21
  4149dc:	bl	414920 <_obstack_memory_used@@Base+0x1cd0>
  4149e0:	cbnz	w0, 414a1c <_obstack_memory_used@@Base+0x1dcc>
  4149e4:	ldr	x0, [x21, #40]
  4149e8:	add	x19, x0, x19
  4149ec:	ldr	x2, [x19, #16]
  4149f0:	ldr	x19, [x2]
  4149f4:	b	41494c <_obstack_memory_used@@Base+0x1cfc>
  4149f8:	cmp	w22, #0x9
  4149fc:	b.ne	414a30 <_obstack_memory_used@@Base+0x1de0>  // b.any
  414a00:	mov	x1, x19
  414a04:	mov	x0, x20
  414a08:	bl	413350 <_obstack_memory_used@@Base+0x700>
  414a0c:	tst	w0, #0xff
  414a10:	b.ne	414a30 <_obstack_memory_used@@Base+0x1de0>  // b.any
  414a14:	nop
  414a18:	mov	w0, #0xc                   	// #12
  414a1c:	ldp	x19, x20, [sp, #16]
  414a20:	ldp	x21, x22, [sp, #32]
  414a24:	ldp	x23, x24, [sp, #48]
  414a28:	ldp	x29, x30, [sp], #64
  414a2c:	ret
  414a30:	mov	w0, #0x0                   	// #0
  414a34:	ldp	x19, x20, [sp, #16]
  414a38:	ldp	x21, x22, [sp, #32]
  414a3c:	ldp	x23, x24, [sp, #48]
  414a40:	ldp	x29, x30, [sp], #64
  414a44:	ret
  414a48:	ldr	x3, [x0]
  414a4c:	cmp	x2, x3
  414a50:	b.ge	414a78 <_obstack_memory_used@@Base+0x1e28>  // b.tcont
  414a54:	ldr	x3, [x1]
  414a58:	add	x4, x3, #0x8
  414a5c:	nop
  414a60:	ldr	x1, [x4, x2, lsl #3]
  414a64:	str	x1, [x3, x2, lsl #3]
  414a68:	add	x2, x2, #0x1
  414a6c:	ldr	x1, [x0]
  414a70:	cmp	x2, x1
  414a74:	b.lt	414a60 <_obstack_memory_used@@Base+0x1e10>  // b.tstop
  414a78:	ret
  414a7c:	nop
  414a80:	ldrb	w2, [x1, #48]
  414a84:	cmp	w2, #0x4
  414a88:	b.eq	414af4 <_obstack_memory_used@@Base+0x1ea4>  // b.none
  414a8c:	cmp	w2, #0x11
  414a90:	b.eq	414a9c <_obstack_memory_used@@Base+0x1e4c>  // b.none
  414a94:	mov	w0, #0x0                   	// #0
  414a98:	ret
  414a9c:	ldr	x2, [x1, #8]
  414aa0:	cbz	x2, 414a94 <_obstack_memory_used@@Base+0x1e44>
  414aa4:	ldrb	w3, [x2, #48]
  414aa8:	cmp	w3, #0x11
  414aac:	b.ne	414a94 <_obstack_memory_used@@Base+0x1e44>  // b.any
  414ab0:	ldr	x3, [x2, #8]
  414ab4:	ldr	x2, [x2, #40]
  414ab8:	str	x3, [x1, #8]
  414abc:	cbz	x3, 414ac4 <_obstack_memory_used@@Base+0x1e74>
  414ac0:	str	x1, [x3]
  414ac4:	ldr	x3, [x1, #40]
  414ac8:	cmp	x2, #0x3f
  414acc:	ldr	x1, [x0, #224]
  414ad0:	ldr	x3, [x1, x3, lsl #3]
  414ad4:	str	x3, [x1, x2, lsl #3]
  414ad8:	b.gt	414a94 <_obstack_memory_used@@Base+0x1e44>
  414adc:	ldr	x3, [x0, #160]
  414ae0:	mov	x1, #0x1                   	// #1
  414ae4:	lsl	x1, x1, x2
  414ae8:	bic	x1, x3, x1
  414aec:	str	x1, [x0, #160]
  414af0:	b	414a94 <_obstack_memory_used@@Base+0x1e44>
  414af4:	ldr	x4, [x0, #224]
  414af8:	cbz	x4, 414a94 <_obstack_memory_used@@Base+0x1e44>
  414afc:	ldrsw	x5, [x1, #40]
  414b00:	mov	w2, #0x1                   	// #1
  414b04:	ldr	x3, [x0, #160]
  414b08:	ldr	x4, [x4, x5, lsl #3]
  414b0c:	str	x4, [x1, #40]
  414b10:	lsl	w1, w2, w4
  414b14:	sxtw	x1, w1
  414b18:	orr	x1, x3, x1
  414b1c:	str	x1, [x0, #160]
  414b20:	mov	w0, #0x0                   	// #0
  414b24:	ret
  414b28:	ldrb	w0, [x1, #48]
  414b2c:	ldr	x2, [x1, #8]
  414b30:	cmp	w0, #0xb
  414b34:	b.eq	414b64 <_obstack_memory_used@@Base+0x1f14>  // b.none
  414b38:	cmp	w0, #0x10
  414b3c:	b.eq	414b70 <_obstack_memory_used@@Base+0x1f20>  // b.none
  414b40:	cbz	x2, 414b4c <_obstack_memory_used@@Base+0x1efc>
  414b44:	ldr	x0, [x1, #32]
  414b48:	str	x0, [x2, #32]
  414b4c:	ldr	x0, [x1, #16]
  414b50:	cbz	x0, 414b5c <_obstack_memory_used@@Base+0x1f0c>
  414b54:	ldr	x1, [x1, #32]
  414b58:	str	x1, [x0, #32]
  414b5c:	mov	w0, #0x0                   	// #0
  414b60:	ret
  414b64:	mov	w0, #0x0                   	// #0
  414b68:	str	x1, [x2, #32]
  414b6c:	ret
  414b70:	ldr	x0, [x1, #16]
  414b74:	ldr	x3, [x0, #24]
  414b78:	str	x3, [x2, #32]
  414b7c:	ldr	x1, [x1, #32]
  414b80:	str	x1, [x0, #32]
  414b84:	mov	w0, #0x0                   	// #0
  414b88:	ret
  414b8c:	nop
  414b90:	stp	x29, x30, [sp, #-64]!
  414b94:	mov	x10, x0
  414b98:	mov	x15, x4
  414b9c:	mov	x29, sp
  414ba0:	ldr	x12, [x0, #200]
  414ba4:	mov	x18, x5
  414ba8:	mov	x11, #0x0                   	// #0
  414bac:	stp	x19, x20, [sp, #16]
  414bb0:	mov	x9, x12
  414bb4:	mov	x20, x2
  414bb8:	mov	x19, x6
  414bbc:	stp	x21, x22, [sp, #32]
  414bc0:	mov	x21, x1
  414bc4:	mov	x22, x3
  414bc8:	stp	x23, x24, [sp, #48]
  414bcc:	ldr	x23, [x0, #152]
  414bd0:	b	414bf4 <_obstack_memory_used@@Base+0x1fa4>
  414bd4:	asr	x7, x7, #1
  414bd8:	ldr	x0, [x10, #216]
  414bdc:	add	x8, x7, x7, lsl #2
  414be0:	add	x8, x0, x8, lsl #3
  414be4:	ldr	x0, [x8, #8]
  414be8:	cmp	x0, x15
  414bec:	b.lt	414d04 <_obstack_memory_used@@Base+0x20b4>  // b.tstop
  414bf0:	mov	x9, x7
  414bf4:	add	x7, x9, x11
  414bf8:	cmp	x9, x11
  414bfc:	b.gt	414bd4 <_obstack_memory_used@@Base+0x1f84>
  414c00:	cmp	x12, x11
  414c04:	b.le	414d2c <_obstack_memory_used@@Base+0x20dc>
  414c08:	ldr	x1, [x10, #216]
  414c0c:	add	x0, x11, x11, lsl #2
  414c10:	add	x0, x1, x0, lsl #3
  414c14:	ldr	x0, [x0, #8]
  414c18:	cmp	x15, x0
  414c1c:	csinv	x11, x11, xzr, eq  // eq = none
  414c20:	mov	x9, x12
  414c24:	mov	x14, #0x0                   	// #0
  414c28:	b	414c4c <_obstack_memory_used@@Base+0x1ffc>
  414c2c:	asr	x7, x7, #1
  414c30:	ldr	x0, [x10, #216]
  414c34:	add	x8, x7, x7, lsl #2
  414c38:	add	x8, x0, x8, lsl #3
  414c3c:	ldr	x0, [x8, #8]
  414c40:	cmp	x0, x19
  414c44:	b.lt	414d0c <_obstack_memory_used@@Base+0x20bc>  // b.tstop
  414c48:	mov	x9, x7
  414c4c:	add	x7, x9, x14
  414c50:	cmp	x9, x14
  414c54:	b.gt	414c2c <_obstack_memory_used@@Base+0x1fdc>
  414c58:	cmp	x12, x14
  414c5c:	b.le	414d34 <_obstack_memory_used@@Base+0x20e4>
  414c60:	ldr	x1, [x10, #216]
  414c64:	add	x0, x14, x14, lsl #2
  414c68:	add	x0, x1, x0, lsl #3
  414c6c:	ldr	x0, [x0, #8]
  414c70:	cmp	x19, x0
  414c74:	csinv	x14, x14, xzr, eq  // eq = none
  414c78:	ldr	x0, [x21]
  414c7c:	cmp	x0, #0x0
  414c80:	b.le	414d24 <_obstack_memory_used@@Base+0x20d4>
  414c84:	mov	x24, #0x0                   	// #0
  414c88:	ldr	x0, [x20]
  414c8c:	mov	x5, x11
  414c90:	ldr	x7, [x10, #216]
  414c94:	mov	x4, x15
  414c98:	ldr	x1, [x0, x24, lsl #3]
  414c9c:	mov	x3, x22
  414ca0:	ldr	x6, [x23]
  414ca4:	mov	x0, x10
  414ca8:	add	x2, x1, x1, lsl #2
  414cac:	ldr	x2, [x7, x2, lsl #3]
  414cb0:	lsl	x2, x2, #4
  414cb4:	ldr	x8, [x6, x2]
  414cb8:	mov	x2, x8
  414cbc:	bl	4130a8 <_obstack_memory_used@@Base+0x458>
  414cc0:	mov	x2, x8
  414cc4:	ldr	x1, [x20]
  414cc8:	mov	w8, w0
  414ccc:	mov	x5, x14
  414cd0:	mov	x4, x19
  414cd4:	mov	x3, x18
  414cd8:	mov	x0, x10
  414cdc:	ldr	x1, [x1, x24, lsl #3]
  414ce0:	bl	4130a8 <_obstack_memory_used@@Base+0x458>
  414ce4:	cmp	w8, w0
  414ce8:	b.eq	414d14 <_obstack_memory_used@@Base+0x20c4>  // b.none
  414cec:	mov	w0, #0x1                   	// #1
  414cf0:	ldp	x19, x20, [sp, #16]
  414cf4:	ldp	x21, x22, [sp, #32]
  414cf8:	ldp	x23, x24, [sp, #48]
  414cfc:	ldp	x29, x30, [sp], #64
  414d00:	ret
  414d04:	add	x11, x7, #0x1
  414d08:	b	414bf4 <_obstack_memory_used@@Base+0x1fa4>
  414d0c:	add	x14, x7, #0x1
  414d10:	b	414c4c <_obstack_memory_used@@Base+0x1ffc>
  414d14:	ldr	x0, [x21]
  414d18:	add	x24, x24, #0x1
  414d1c:	cmp	x24, x0
  414d20:	b.lt	414c88 <_obstack_memory_used@@Base+0x2038>  // b.tstop
  414d24:	mov	w0, #0x0                   	// #0
  414d28:	b	414cf0 <_obstack_memory_used@@Base+0x20a0>
  414d2c:	mov	x11, #0xffffffffffffffff    	// #-1
  414d30:	b	414c20 <_obstack_memory_used@@Base+0x1fd0>
  414d34:	mov	x14, #0xffffffffffffffff    	// #-1
  414d38:	b	414c78 <_obstack_memory_used@@Base+0x2028>
  414d3c:	nop
  414d40:	cbz	x1, 414ed4 <_obstack_memory_used@@Base+0x2284>
  414d44:	stp	x29, x30, [sp, #-48]!
  414d48:	mov	x29, sp
  414d4c:	stp	x19, x20, [sp, #16]
  414d50:	ldr	x19, [x1, #8]
  414d54:	stp	x21, x22, [sp, #32]
  414d58:	mov	x21, x1
  414d5c:	cbz	x19, 414e44 <_obstack_memory_used@@Base+0x21f4>
  414d60:	ldp	x2, x1, [x0]
  414d64:	mov	x20, x0
  414d68:	add	x0, x1, x19, lsl #1
  414d6c:	cmp	x2, x0
  414d70:	b.lt	414e8c <_obstack_memory_used@@Base+0x223c>  // b.tstop
  414d74:	cbz	x1, 414eb8 <_obstack_memory_used@@Base+0x2268>
  414d78:	subs	x2, x19, #0x1
  414d7c:	sub	x3, x1, #0x1
  414d80:	add	x19, x1, x19, lsl #1
  414d84:	ccmp	x3, #0x0, #0x1, pl  // pl = nfrst
  414d88:	b.lt	414dd8 <_obstack_memory_used@@Base+0x2188>  // b.tstop
  414d8c:	ldr	x0, [x20, #16]
  414d90:	ldr	x1, [x21, #16]
  414d94:	b	414db4 <_obstack_memory_used@@Base+0x2164>
  414d98:	b.ge	414e58 <_obstack_memory_used@@Base+0x2208>  // b.tcont
  414d9c:	sub	x19, x19, #0x1
  414da0:	sub	x2, x2, #0x1
  414da4:	str	x4, [x0, x19, lsl #3]
  414da8:	cmp	x2, #0x0
  414dac:	ccmp	x3, #0x0, #0x1, ge  // ge = tcont
  414db0:	b.lt	414dd8 <_obstack_memory_used@@Base+0x2188>  // b.tstop
  414db4:	ldr	x5, [x0, x3, lsl #3]
  414db8:	ldr	x4, [x1, x2, lsl #3]
  414dbc:	cmp	x5, x4
  414dc0:	b.ne	414d98 <_obstack_memory_used@@Base+0x2148>  // b.any
  414dc4:	sub	x2, x2, #0x1
  414dc8:	sub	x3, x3, #0x1
  414dcc:	cmp	x2, #0x0
  414dd0:	ccmp	x3, #0x0, #0x1, ge  // ge = tcont
  414dd4:	b.ge	414db4 <_obstack_memory_used@@Base+0x2164>  // b.tcont
  414dd8:	tbnz	x2, #63, 414df8 <_obstack_memory_used@@Base+0x21a8>
  414ddc:	ldr	x0, [x20, #16]
  414de0:	add	x2, x2, #0x1
  414de4:	ldr	x1, [x21, #16]
  414de8:	sub	x19, x19, x2
  414dec:	lsl	x2, x2, #3
  414df0:	add	x0, x0, x19, lsl #3
  414df4:	bl	402650 <memcpy@plt>
  414df8:	ldr	x3, [x20, #8]
  414dfc:	ldr	x2, [x21, #8]
  414e00:	add	x2, x3, x2, lsl #1
  414e04:	sub	x5, x2, #0x1
  414e08:	subs	x2, x2, x19
  414e0c:	b.eq	414e44 <_obstack_memory_used@@Base+0x21f4>  // b.none
  414e10:	ldr	x0, [x20, #16]
  414e14:	sub	x1, x3, #0x1
  414e18:	add	x3, x3, x2
  414e1c:	str	x3, [x20, #8]
  414e20:	ldr	x4, [x0, x5, lsl #3]
  414e24:	add	x6, x1, x2
  414e28:	ldr	x3, [x0, x1, lsl #3]
  414e2c:	cmp	x4, x3
  414e30:	b.le	414e60 <_obstack_memory_used@@Base+0x2210>
  414e34:	str	x4, [x0, x6, lsl #3]
  414e38:	sub	x5, x5, #0x1
  414e3c:	subs	x2, x2, #0x1
  414e40:	b.ne	414e20 <_obstack_memory_used@@Base+0x21d0>  // b.any
  414e44:	mov	w0, #0x0                   	// #0
  414e48:	ldp	x19, x20, [sp, #16]
  414e4c:	ldp	x21, x22, [sp, #32]
  414e50:	ldp	x29, x30, [sp], #48
  414e54:	ret
  414e58:	sub	x3, x3, #0x1
  414e5c:	b	414da8 <_obstack_memory_used@@Base+0x2158>
  414e60:	str	x3, [x0, x6, lsl #3]
  414e64:	subs	x1, x1, #0x1
  414e68:	b.pl	414e20 <_obstack_memory_used@@Base+0x21d0>  // b.nfrst
  414e6c:	add	x1, x0, x19, lsl #3
  414e70:	lsl	x2, x2, #3
  414e74:	bl	402650 <memcpy@plt>
  414e78:	mov	w0, #0x0                   	// #0
  414e7c:	ldp	x19, x20, [sp, #16]
  414e80:	ldp	x21, x22, [sp, #32]
  414e84:	ldp	x29, x30, [sp], #48
  414e88:	ret
  414e8c:	ldr	x0, [x20, #16]
  414e90:	add	x19, x19, x2
  414e94:	lsl	x22, x19, #1
  414e98:	lsl	x1, x19, #4
  414e9c:	bl	402930 <realloc@plt>
  414ea0:	cbz	x0, 414edc <_obstack_memory_used@@Base+0x228c>
  414ea4:	ldr	x1, [x20, #8]
  414ea8:	ldr	x19, [x21, #8]
  414eac:	str	x22, [x20]
  414eb0:	str	x0, [x20, #16]
  414eb4:	cbnz	x1, 414d78 <_obstack_memory_used@@Base+0x2128>
  414eb8:	ldr	x1, [x21, #16]
  414ebc:	str	x19, [x20, #8]
  414ec0:	ldr	x0, [x20, #16]
  414ec4:	ldr	x2, [x21, #8]
  414ec8:	lsl	x2, x2, #3
  414ecc:	bl	402650 <memcpy@plt>
  414ed0:	b	414e44 <_obstack_memory_used@@Base+0x21f4>
  414ed4:	mov	w0, #0x0                   	// #0
  414ed8:	ret
  414edc:	mov	w0, #0xc                   	// #12
  414ee0:	b	414e48 <_obstack_memory_used@@Base+0x21f8>
  414ee4:	nop
  414ee8:	stp	x29, x30, [sp, #-144]!
  414eec:	mov	x29, sp
  414ef0:	stp	x19, x20, [sp, #16]
  414ef4:	add	x20, x2, x2, lsl #1
  414ef8:	mov	x19, x1
  414efc:	stp	x23, x24, [sp, #48]
  414f00:	lsl	x20, x20, #3
  414f04:	and	w24, w3, #0xff
  414f08:	ldr	x23, [x1, #40]
  414f0c:	stp	x21, x22, [sp, #32]
  414f10:	mov	x22, x0
  414f14:	add	x23, x23, x20
  414f18:	mov	x21, x2
  414f1c:	ldr	x0, [x23, #8]
  414f20:	add	x0, x0, #0x1
  414f24:	stp	x0, xzr, [sp, #96]
  414f28:	lsl	x0, x0, #3
  414f2c:	bl	402800 <malloc@plt>
  414f30:	str	x0, [sp, #112]
  414f34:	cbz	x0, 415124 <_obstack_memory_used@@Base+0x24d4>
  414f38:	ldr	x2, [x19]
  414f3c:	stp	x25, x26, [sp, #64]
  414f40:	lsl	x25, x21, #4
  414f44:	ldr	x0, [x19, #48]
  414f48:	add	x1, x2, x25
  414f4c:	mov	x3, #0xffffffffffffffff    	// #-1
  414f50:	add	x0, x0, x20
  414f54:	ldr	w4, [x1, #8]
  414f58:	str	x3, [x0, #8]
  414f5c:	tst	w4, #0x3ff00
  414f60:	b.ne	4150ac <_obstack_memory_used@@Base+0x245c>  // b.any
  414f64:	ldrb	w0, [x1, #8]
  414f68:	tbz	w0, #3, 4150f0 <_obstack_memory_used@@Base+0x24a0>
  414f6c:	ldr	x1, [x19, #40]
  414f70:	add	x0, x1, x20
  414f74:	ldr	x2, [x0, #8]
  414f78:	cmp	x2, #0x0
  414f7c:	b.le	4150f0 <_obstack_memory_used@@Base+0x24a0>
  414f80:	mov	w23, #0x0                   	// #0
  414f84:	mov	x26, #0x0                   	// #0
  414f88:	str	x27, [sp, #80]
  414f8c:	nop
  414f90:	ldr	x0, [x0, #16]
  414f94:	add	x27, sp, #0x78
  414f98:	ldr	x3, [x19, #48]
  414f9c:	ldr	x2, [x0, x26, lsl #3]
  414fa0:	add	x25, x2, x2, lsl #1
  414fa4:	lsl	x25, x25, #3
  414fa8:	add	x3, x3, x25
  414fac:	ldr	x0, [x3, #8]
  414fb0:	cmn	x0, #0x1
  414fb4:	b.eq	4150a4 <_obstack_memory_used@@Base+0x2454>  // b.none
  414fb8:	cbz	x0, 415070 <_obstack_memory_used@@Base+0x2420>
  414fbc:	ldp	x0, x1, [x3]
  414fc0:	stp	x0, x1, [sp, #120]
  414fc4:	ldr	x0, [x3, #16]
  414fc8:	str	x0, [sp, #136]
  414fcc:	mov	x1, x27
  414fd0:	add	x0, sp, #0x60
  414fd4:	bl	414d40 <_obstack_memory_used@@Base+0x20f0>
  414fd8:	cbnz	w0, 415088 <_obstack_memory_used@@Base+0x2438>
  414fdc:	ldr	x0, [x19, #48]
  414fe0:	add	x25, x0, x25
  414fe4:	ldr	x0, [x25, #8]
  414fe8:	cbz	x0, 415060 <_obstack_memory_used@@Base+0x2410>
  414fec:	ldr	x1, [x19, #40]
  414ff0:	add	x0, x1, x20
  414ff4:	add	x26, x26, #0x1
  414ff8:	ldr	x2, [x0, #8]
  414ffc:	cmp	x2, x26
  415000:	b.gt	414f90 <_obstack_memory_used@@Base+0x2340>
  415004:	mov	x1, x21
  415008:	add	x0, sp, #0x60
  41500c:	bl	413350 <_obstack_memory_used@@Base+0x700>
  415010:	tst	w0, #0xff
  415014:	b.eq	415144 <_obstack_memory_used@@Base+0x24f4>  // b.none
  415018:	ldr	x0, [x19, #48]
  41501c:	eor	w24, w24, #0x1
  415020:	tst	w23, w24
  415024:	add	x1, x0, x20
  415028:	b.eq	415154 <_obstack_memory_used@@Base+0x2504>  // b.none
  41502c:	ldr	x27, [sp, #80]
  415030:	str	xzr, [x1, #8]
  415034:	ldp	x2, x3, [sp, #96]
  415038:	mov	w0, #0x0                   	// #0
  41503c:	ldr	x1, [sp, #112]
  415040:	stp	x2, x3, [x22]
  415044:	ldp	x25, x26, [sp, #64]
  415048:	str	x1, [x22, #16]
  41504c:	ldp	x19, x20, [sp, #16]
  415050:	ldp	x21, x22, [sp, #32]
  415054:	ldp	x23, x24, [sp, #48]
  415058:	ldp	x29, x30, [sp], #144
  41505c:	ret
  415060:	ldr	x0, [sp, #136]
  415064:	mov	w23, #0x1                   	// #1
  415068:	bl	402ae0 <free@plt>
  41506c:	b	414fec <_obstack_memory_used@@Base+0x239c>
  415070:	add	x27, sp, #0x78
  415074:	mov	x1, x19
  415078:	mov	x0, x27
  41507c:	mov	w3, #0x0                   	// #0
  415080:	bl	414ee8 <_obstack_memory_used@@Base+0x2298>
  415084:	cbz	w0, 414fcc <_obstack_memory_used@@Base+0x237c>
  415088:	ldp	x19, x20, [sp, #16]
  41508c:	ldp	x21, x22, [sp, #32]
  415090:	ldp	x23, x24, [sp, #48]
  415094:	ldp	x25, x26, [sp, #64]
  415098:	ldr	x27, [sp, #80]
  41509c:	ldp	x29, x30, [sp], #144
  4150a0:	ret
  4150a4:	mov	w23, #0x1                   	// #1
  4150a8:	b	414ff0 <_obstack_memory_used@@Base+0x23a0>
  4150ac:	ldr	x0, [x23, #8]
  4150b0:	cbz	x0, 4150f0 <_obstack_memory_used@@Base+0x24a0>
  4150b4:	ldr	x0, [x23, #16]
  4150b8:	ldr	x0, [x0]
  4150bc:	add	x2, x2, x0, lsl #4
  4150c0:	ldrb	w0, [x2, #10]
  4150c4:	tbnz	w0, #2, 414f64 <_obstack_memory_used@@Base+0x2314>
  4150c8:	ubfx	x4, x4, #8, #10
  4150cc:	mov	x3, x21
  4150d0:	mov	x2, x21
  4150d4:	mov	x1, x21
  4150d8:	mov	x0, x19
  4150dc:	bl	4142f0 <_obstack_memory_used@@Base+0x16a0>
  4150e0:	cbnz	w0, 41513c <_obstack_memory_used@@Base+0x24ec>
  4150e4:	ldr	x1, [x19]
  4150e8:	add	x1, x1, x25
  4150ec:	b	414f64 <_obstack_memory_used@@Base+0x2314>
  4150f0:	mov	x1, x21
  4150f4:	add	x0, sp, #0x60
  4150f8:	bl	413350 <_obstack_memory_used@@Base+0x700>
  4150fc:	tst	w0, #0xff
  415100:	b.eq	415120 <_obstack_memory_used@@Base+0x24d0>  // b.none
  415104:	ldr	x0, [x19, #48]
  415108:	add	x20, x0, x20
  41510c:	ldp	x0, x1, [sp, #96]
  415110:	stp	x0, x1, [x20]
  415114:	ldr	x0, [sp, #112]
  415118:	str	x0, [x20, #16]
  41511c:	b	415034 <_obstack_memory_used@@Base+0x23e4>
  415120:	ldp	x25, x26, [sp, #64]
  415124:	mov	w0, #0xc                   	// #12
  415128:	ldp	x19, x20, [sp, #16]
  41512c:	ldp	x21, x22, [sp, #32]
  415130:	ldp	x23, x24, [sp, #48]
  415134:	ldp	x29, x30, [sp], #144
  415138:	ret
  41513c:	ldp	x25, x26, [sp, #64]
  415140:	b	41504c <_obstack_memory_used@@Base+0x23fc>
  415144:	mov	w0, #0xc                   	// #12
  415148:	ldp	x25, x26, [sp, #64]
  41514c:	ldr	x27, [sp, #80]
  415150:	b	415128 <_obstack_memory_used@@Base+0x24d8>
  415154:	ldr	x27, [sp, #80]
  415158:	b	415108 <_obstack_memory_used@@Base+0x24b8>
  41515c:	nop
  415160:	stp	x29, x30, [sp, #-96]!
  415164:	mov	x29, sp
  415168:	stp	x21, x22, [sp, #32]
  41516c:	ldr	x21, [x1, #8]
  415170:	stp	x19, x20, [sp, #16]
  415174:	mov	x20, x2
  415178:	mov	w19, w3
  41517c:	stp	x23, x24, [sp, #48]
  415180:	mov	x24, x1
  415184:	mov	x23, x0
  415188:	lsl	x0, x21, #3
  41518c:	stp	x21, xzr, [sp, #72]
  415190:	bl	402800 <malloc@plt>
  415194:	str	x0, [sp, #88]
  415198:	cbz	x0, 4152a0 <_obstack_memory_used@@Base+0x2650>
  41519c:	cmp	x21, #0x0
  4151a0:	b.le	41523c <_obstack_memory_used@@Base+0x25ec>
  4151a4:	mov	x22, #0x0                   	// #0
  4151a8:	ldr	x1, [x24, #16]
  4151ac:	ldr	x0, [x23, #48]
  4151b0:	ldr	x2, [x1, x22, lsl #3]
  4151b4:	add	x1, x2, x2, lsl #1
  4151b8:	add	x1, x0, x1, lsl #3
  4151bc:	ldr	x10, [x1, #8]
  4151c0:	cmp	x10, #0x0
  4151c4:	b.le	415270 <_obstack_memory_used@@Base+0x2620>
  4151c8:	mov	x5, #0x0                   	// #0
  4151cc:	ldr	x9, [x23]
  4151d0:	ldr	x4, [x1, #16]
  4151d4:	b	4151e0 <_obstack_memory_used@@Base+0x2590>
  4151d8:	cmp	x10, x5
  4151dc:	b.eq	415270 <_obstack_memory_used@@Base+0x2620>  // b.none
  4151e0:	ldr	x7, [x4, x5, lsl #3]
  4151e4:	add	x5, x5, #0x1
  4151e8:	lsl	x6, x7, #4
  4151ec:	add	x8, x9, x6
  4151f0:	ldrb	w8, [x8, #8]
  4151f4:	cmp	w19, w8
  4151f8:	b.ne	4151d8 <_obstack_memory_used@@Base+0x2588>  // b.any
  4151fc:	ldr	x6, [x9, x6]
  415200:	cmp	x20, x6
  415204:	b.ne	4151d8 <_obstack_memory_used@@Base+0x2588>  // b.any
  415208:	cmn	x7, #0x1
  41520c:	b.eq	415270 <_obstack_memory_used@@Base+0x2620>  // b.none
  415210:	mov	w4, w19
  415214:	mov	x3, x20
  415218:	add	x1, sp, #0x48
  41521c:	mov	x0, x23
  415220:	bl	414920 <_obstack_memory_used@@Base+0x1cd0>
  415224:	mov	w21, w0
  415228:	cbnz	w0, 415280 <_obstack_memory_used@@Base+0x2630>
  41522c:	ldr	x0, [x24, #8]
  415230:	add	x22, x22, #0x1
  415234:	cmp	x0, x22
  415238:	b.gt	4151a8 <_obstack_memory_used@@Base+0x2558>
  41523c:	ldr	x0, [x24, #16]
  415240:	mov	w21, #0x0                   	// #0
  415244:	bl	402ae0 <free@plt>
  415248:	ldp	x0, x1, [sp, #72]
  41524c:	stp	x0, x1, [x24]
  415250:	ldr	x0, [sp, #88]
  415254:	str	x0, [x24, #16]
  415258:	mov	w0, w21
  41525c:	ldp	x19, x20, [sp, #16]
  415260:	ldp	x21, x22, [sp, #32]
  415264:	ldp	x23, x24, [sp, #48]
  415268:	ldp	x29, x30, [sp], #96
  41526c:	ret
  415270:	add	x0, sp, #0x48
  415274:	bl	414d40 <_obstack_memory_used@@Base+0x20f0>
  415278:	mov	w21, w0
  41527c:	cbz	w0, 41522c <_obstack_memory_used@@Base+0x25dc>
  415280:	ldr	x0, [sp, #88]
  415284:	bl	402ae0 <free@plt>
  415288:	mov	w0, w21
  41528c:	ldp	x19, x20, [sp, #16]
  415290:	ldp	x21, x22, [sp, #32]
  415294:	ldp	x23, x24, [sp, #48]
  415298:	ldp	x29, x30, [sp], #96
  41529c:	ret
  4152a0:	mov	w21, #0xc                   	// #12
  4152a4:	mov	w0, w21
  4152a8:	ldp	x19, x20, [sp, #16]
  4152ac:	ldp	x21, x22, [sp, #32]
  4152b0:	ldp	x23, x24, [sp, #48]
  4152b4:	ldp	x29, x30, [sp], #96
  4152b8:	ret
  4152bc:	nop
  4152c0:	ldr	x4, [x1, #8]
  4152c4:	cbz	x4, 415438 <_obstack_memory_used@@Base+0x27e8>
  4152c8:	stp	x29, x30, [sp, #-48]!
  4152cc:	mov	x29, sp
  4152d0:	ldr	x8, [x2, #8]
  4152d4:	stp	x19, x20, [sp, #16]
  4152d8:	mov	x19, x0
  4152dc:	stp	x21, x22, [sp, #32]
  4152e0:	mov	w0, #0x0                   	// #0
  4152e4:	mov	x21, x2
  4152e8:	cbz	x8, 4153dc <_obstack_memory_used@@Base+0x278c>
  4152ec:	ldp	x22, x3, [x19]
  4152f0:	mov	x20, x1
  4152f4:	add	x1, x4, x8
  4152f8:	ldr	x0, [x19, #16]
  4152fc:	add	x2, x1, x3
  415300:	cmp	x2, x22
  415304:	b.gt	415440 <_obstack_memory_used@@Base+0x27f0>
  415308:	ldr	x10, [x20, #16]
  41530c:	sub	x6, x4, #0x1
  415310:	ldr	x9, [x21, #16]
  415314:	sub	x7, x8, #0x1
  415318:	add	x4, x3, x4
  41531c:	sub	x3, x3, #0x1
  415320:	add	x8, x4, x8
  415324:	ldr	x5, [x9, x7, lsl #3]
  415328:	ldr	x4, [x10, x6, lsl #3]
  41532c:	nop
  415330:	cmp	x4, x5
  415334:	b.eq	415350 <_obstack_memory_used@@Base+0x2700>  // b.none
  415338:	b.ge	415428 <_obstack_memory_used@@Base+0x27d8>  // b.tcont
  41533c:	subs	x7, x7, #0x1
  415340:	b.mi	415398 <_obstack_memory_used@@Base+0x2748>  // b.first
  415344:	ldr	x5, [x9, x7, lsl #3]
  415348:	cmp	x4, x5
  41534c:	b.ne	415338 <_obstack_memory_used@@Base+0x26e8>  // b.any
  415350:	tbz	x3, #63, 415364 <_obstack_memory_used@@Base+0x2714>
  415354:	b	415374 <_obstack_memory_used@@Base+0x2724>
  415358:	sub	x3, x3, #0x1
  41535c:	cmn	x3, #0x1
  415360:	b.eq	415374 <_obstack_memory_used@@Base+0x2724>  // b.none
  415364:	ldr	x5, [x0, x3, lsl #3]
  415368:	cmp	x5, x4
  41536c:	b.gt	415358 <_obstack_memory_used@@Base+0x2708>
  415370:	b.eq	41537c <_obstack_memory_used@@Base+0x272c>  // b.none
  415374:	sub	x8, x8, #0x1
  415378:	str	x4, [x0, x8, lsl #3]
  41537c:	subs	x6, x6, #0x1
  415380:	b.mi	415398 <_obstack_memory_used@@Base+0x2748>  // b.first
  415384:	subs	x7, x7, #0x1
  415388:	b.mi	415398 <_obstack_memory_used@@Base+0x2748>  // b.first
  41538c:	ldr	x4, [x10, x6, lsl #3]
  415390:	ldr	x5, [x9, x7, lsl #3]
  415394:	b	415348 <_obstack_memory_used@@Base+0x26f8>
  415398:	ldr	x1, [x19, #8]
  41539c:	ldr	x4, [x20, #8]
  4153a0:	sub	x2, x1, #0x1
  4153a4:	ldr	x3, [x21, #8]
  4153a8:	add	x4, x1, x4
  4153ac:	add	x4, x4, x3
  4153b0:	sub	x3, x4, x8
  4153b4:	sub	x4, x4, #0x1
  4153b8:	add	x1, x1, x3
  4153bc:	str	x1, [x19, #8]
  4153c0:	cmp	x3, #0x0
  4153c4:	ccmp	x2, #0x0, #0x1, gt
  4153c8:	b.ge	4153fc <_obstack_memory_used@@Base+0x27ac>  // b.tcont
  4153cc:	lsl	x2, x3, #3
  4153d0:	add	x1, x0, x8, lsl #3
  4153d4:	bl	402650 <memcpy@plt>
  4153d8:	mov	w0, #0x0                   	// #0
  4153dc:	ldp	x19, x20, [sp, #16]
  4153e0:	ldp	x21, x22, [sp, #32]
  4153e4:	ldp	x29, x30, [sp], #48
  4153e8:	ret
  4153ec:	str	x1, [x0, x6, lsl #3]
  4153f0:	sub	x2, x2, #0x1
  4153f4:	cmn	x2, #0x1
  4153f8:	b.eq	4153cc <_obstack_memory_used@@Base+0x277c>  // b.none
  4153fc:	ldr	x5, [x0, x4, lsl #3]
  415400:	add	x6, x2, x3
  415404:	ldr	x1, [x0, x2, lsl #3]
  415408:	cmp	x5, x1
  41540c:	b.le	4153ec <_obstack_memory_used@@Base+0x279c>
  415410:	str	x5, [x0, x6, lsl #3]
  415414:	sub	x4, x4, #0x1
  415418:	subs	x3, x3, #0x1
  41541c:	b.ne	4153fc <_obstack_memory_used@@Base+0x27ac>  // b.any
  415420:	mov	x2, #0x0                   	// #0
  415424:	b	4153d0 <_obstack_memory_used@@Base+0x2780>
  415428:	subs	x6, x6, #0x1
  41542c:	b.mi	415398 <_obstack_memory_used@@Base+0x2748>  // b.first
  415430:	ldr	x4, [x10, x6, lsl #3]
  415434:	b	415330 <_obstack_memory_used@@Base+0x26e0>
  415438:	mov	w0, #0x0                   	// #0
  41543c:	ret
  415440:	add	x22, x1, x22
  415444:	lsl	x1, x22, #3
  415448:	bl	402930 <realloc@plt>
  41544c:	cbz	x0, 415468 <_obstack_memory_used@@Base+0x2818>
  415450:	ldr	x4, [x20, #8]
  415454:	ldr	x8, [x21, #8]
  415458:	str	x22, [x19]
  41545c:	str	x0, [x19, #16]
  415460:	ldr	x3, [x19, #8]
  415464:	b	415308 <_obstack_memory_used@@Base+0x26b8>
  415468:	mov	w0, #0xc                   	// #12
  41546c:	b	4153dc <_obstack_memory_used@@Base+0x278c>
  415470:	stp	x29, x30, [sp, #-64]!
  415474:	mov	x29, sp
  415478:	ldr	w5, [x1]
  41547c:	stp	x19, x20, [sp, #16]
  415480:	mov	x20, x2
  415484:	mov	x19, x3
  415488:	stp	x21, x22, [sp, #32]
  41548c:	cmp	w5, #0xf
  415490:	mov	x21, x1
  415494:	mov	x22, x0
  415498:	b.eq	415510 <_obstack_memory_used@@Base+0x28c0>  // b.none
  41549c:	mov	x6, #0x8                   	// #8
  4154a0:	mov	w0, #0x40                  	// #64
  4154a4:	add	w1, w5, #0x1
  4154a8:	smaddl	x0, w5, w0, x6
  4154ac:	ldr	x6, [x22]
  4154b0:	sbfiz	x5, x5, #6, #32
  4154b4:	str	w1, [x21]
  4154b8:	add	x1, x6, x5
  4154bc:	add	x5, x5, #0x20
  4154c0:	add	x0, x6, x0
  4154c4:	add	x5, x6, x5
  4154c8:	mov	x3, #0xffffffffffffffff    	// #-1
  4154cc:	stp	xzr, x20, [x1, #8]
  4154d0:	str	x19, [x1, #24]
  4154d4:	ldp	x6, x7, [x4]
  4154d8:	stp	x6, x7, [x1, #48]
  4154dc:	ldrb	w2, [x5, #26]
  4154e0:	and	w2, w2, #0xfffffff3
  4154e4:	strb	w2, [x5, #26]
  4154e8:	stp	xzr, xzr, [x1, #32]
  4154ec:	str	x3, [x1, #64]
  4154f0:	cbz	x20, 4154f8 <_obstack_memory_used@@Base+0x28a8>
  4154f4:	str	x0, [x20]
  4154f8:	cbz	x19, 415500 <_obstack_memory_used@@Base+0x28b0>
  4154fc:	str	x0, [x19]
  415500:	ldp	x19, x20, [sp, #16]
  415504:	ldp	x21, x22, [sp, #32]
  415508:	ldp	x29, x30, [sp], #64
  41550c:	ret
  415510:	mov	x0, #0x3c8                 	// #968
  415514:	str	x4, [sp, #56]
  415518:	bl	402800 <malloc@plt>
  41551c:	mov	x6, x0
  415520:	cbz	x0, 415544 <_obstack_memory_used@@Base+0x28f4>
  415524:	ldr	x2, [x22]
  415528:	mov	x0, #0x8                   	// #8
  41552c:	mov	w1, #0x1                   	// #1
  415530:	mov	w5, #0x0                   	// #0
  415534:	str	x2, [x6]
  415538:	str	x6, [x22]
  41553c:	ldr	x4, [sp, #56]
  415540:	b	4154b0 <_obstack_memory_used@@Base+0x2860>
  415544:	mov	x0, #0x0                   	// #0
  415548:	b	415500 <_obstack_memory_used@@Base+0x28b0>
  41554c:	nop
  415550:	stp	x29, x30, [sp, #-80]!
  415554:	mov	x29, sp
  415558:	stp	x19, x20, [sp, #16]
  41555c:	mov	x19, x0
  415560:	stp	x21, x22, [sp, #32]
  415564:	add	x21, x1, #0x70
  415568:	add	x22, x1, #0x80
  41556c:	ldr	x20, [x0]
  415570:	str	x23, [sp, #48]
  415574:	add	x23, sp, #0x48
  415578:	b	415584 <_obstack_memory_used@@Base+0x2934>
  41557c:	mov	x19, x0
  415580:	add	x23, x20, #0x8
  415584:	add	x4, x19, #0x28
  415588:	mov	x1, x22
  41558c:	mov	x0, x21
  415590:	mov	x3, #0x0                   	// #0
  415594:	mov	x2, #0x0                   	// #0
  415598:	bl	415470 <_obstack_memory_used@@Base+0x2820>
  41559c:	str	x0, [x23]
  4155a0:	cbz	x0, 4155e8 <_obstack_memory_used@@Base+0x2998>
  4155a4:	str	x20, [x0]
  4155a8:	ldr	x20, [x23]
  4155ac:	ldrb	w0, [x20, #50]
  4155b0:	orr	w0, w0, #0x4
  4155b4:	strb	w0, [x20, #50]
  4155b8:	ldr	x0, [x19, #8]
  4155bc:	cbnz	x0, 41557c <_obstack_memory_used@@Base+0x292c>
  4155c0:	ldr	x2, [x19, #16]
  4155c4:	cmp	x2, #0x0
  4155c8:	ccmp	x2, x0, #0x4, ne  // ne = any
  4155cc:	b.ne	4155fc <_obstack_memory_used@@Base+0x29ac>  // b.any
  4155d0:	ldr	x2, [x19]
  4155d4:	mov	x0, x19
  4155d8:	ldr	x20, [x20]
  4155dc:	mov	x19, x2
  4155e0:	cbnz	x2, 4155c0 <_obstack_memory_used@@Base+0x2970>
  4155e4:	ldr	x0, [sp, #72]
  4155e8:	ldp	x19, x20, [sp, #16]
  4155ec:	ldp	x21, x22, [sp, #32]
  4155f0:	ldr	x23, [sp, #48]
  4155f4:	ldp	x29, x30, [sp], #80
  4155f8:	ret
  4155fc:	mov	x19, x2
  415600:	add	x23, x20, #0x10
  415604:	b	415584 <_obstack_memory_used@@Base+0x2934>
  415608:	stp	x29, x30, [sp, #-112]!
  41560c:	mov	x29, sp
  415610:	stp	x23, x24, [sp, #48]
  415614:	mov	x24, x0
  415618:	ldrb	w0, [x1, #56]
  41561c:	stp	x19, x20, [sp, #16]
  415620:	stp	x21, x22, [sp, #32]
  415624:	mov	x21, x2
  415628:	stp	x25, x26, [sp, #64]
  41562c:	ldr	x20, [x1]
  415630:	ldr	x19, [x2, #8]
  415634:	str	x27, [sp, #80]
  415638:	tbz	w0, #4, 4157cc <_obstack_memory_used@@Base+0x2b7c>
  41563c:	cbz	x19, 415768 <_obstack_memory_used@@Base+0x2b18>
  415640:	ldr	x0, [x2, #40]
  415644:	cmp	x0, #0x3f
  415648:	b.gt	415748 <_obstack_memory_used@@Base+0x2af8>
  41564c:	ldr	x1, [x20, #160]
  415650:	lsr	x0, x1, x0
  415654:	tbz	w0, #0, 415748 <_obstack_memory_used@@Base+0x2af8>
  415658:	mov	w5, #0x8                   	// #8
  41565c:	add	x26, x20, #0x70
  415660:	add	x27, sp, #0x60
  415664:	add	x20, x20, #0x80
  415668:	stp	xzr, xzr, [sp, #96]
  41566c:	mov	x1, x20
  415670:	mov	x4, x27
  415674:	mov	x3, #0x0                   	// #0
  415678:	mov	x2, #0x0                   	// #0
  41567c:	mov	x0, x26
  415680:	strb	w5, [sp, #104]
  415684:	bl	415470 <_obstack_memory_used@@Base+0x2820>
  415688:	stp	xzr, xzr, [sp, #96]
  41568c:	mov	w5, #0x9                   	// #9
  415690:	mov	x22, x0
  415694:	mov	x4, x27
  415698:	mov	x1, x20
  41569c:	mov	x0, x26
  4156a0:	mov	x3, #0x0                   	// #0
  4156a4:	mov	x2, #0x0                   	// #0
  4156a8:	strb	w5, [sp, #104]
  4156ac:	bl	415470 <_obstack_memory_used@@Base+0x2820>
  4156b0:	mov	x23, x0
  4156b4:	mov	w5, #0x10                  	// #16
  4156b8:	stp	xzr, xzr, [sp, #96]
  4156bc:	mov	x2, x19
  4156c0:	mov	x4, x27
  4156c4:	mov	x3, x23
  4156c8:	mov	x1, x20
  4156cc:	mov	x0, x26
  4156d0:	strb	w5, [sp, #104]
  4156d4:	bl	415470 <_obstack_memory_used@@Base+0x2820>
  4156d8:	mov	x25, x0
  4156dc:	mov	w5, #0x10                  	// #16
  4156e0:	stp	xzr, xzr, [sp, #96]
  4156e4:	mov	x4, x27
  4156e8:	mov	x1, x20
  4156ec:	mov	x0, x26
  4156f0:	mov	x3, x25
  4156f4:	mov	x2, x22
  4156f8:	strb	w5, [sp, #104]
  4156fc:	bl	415470 <_obstack_memory_used@@Base+0x2820>
  415700:	cmp	x0, #0x0
  415704:	mov	x19, x0
  415708:	ccmp	x25, #0x0, #0x4, ne  // ne = any
  41570c:	b.eq	415834 <_obstack_memory_used@@Base+0x2be4>  // b.none
  415710:	cmp	x22, #0x0
  415714:	ccmp	x23, #0x0, #0x4, ne  // ne = any
  415718:	b.eq	415834 <_obstack_memory_used@@Base+0x2be4>  // b.none
  41571c:	ldr	x0, [x21, #40]
  415720:	str	x0, [x23, #40]
  415724:	str	x0, [x22, #40]
  415728:	ldrb	w0, [x21, #50]
  41572c:	ldrb	w1, [x23, #50]
  415730:	ubfx	x0, x0, #3, #1
  415734:	bfi	w1, w0, #3, #1
  415738:	strb	w1, [x23, #50]
  41573c:	ldrb	w1, [x22, #50]
  415740:	bfi	w1, w0, #3, #1
  415744:	strb	w1, [x22, #50]
  415748:	mov	x0, x19
  41574c:	ldp	x19, x20, [sp, #16]
  415750:	ldp	x21, x22, [sp, #32]
  415754:	ldp	x23, x24, [sp, #48]
  415758:	ldp	x25, x26, [sp, #64]
  41575c:	ldr	x27, [sp, #80]
  415760:	ldp	x29, x30, [sp], #112
  415764:	ret
  415768:	mov	w5, #0x8                   	// #8
  41576c:	add	x26, x20, #0x70
  415770:	add	x27, sp, #0x60
  415774:	add	x20, x20, #0x80
  415778:	stp	xzr, xzr, [sp, #96]
  41577c:	mov	x1, x20
  415780:	mov	x4, x27
  415784:	mov	x3, #0x0                   	// #0
  415788:	mov	x2, #0x0                   	// #0
  41578c:	mov	x0, x26
  415790:	strb	w5, [sp, #104]
  415794:	bl	415470 <_obstack_memory_used@@Base+0x2820>
  415798:	stp	xzr, xzr, [sp, #96]
  41579c:	mov	w5, #0x9                   	// #9
  4157a0:	mov	x22, x0
  4157a4:	mov	x4, x27
  4157a8:	mov	x1, x20
  4157ac:	mov	x0, x26
  4157b0:	mov	x3, #0x0                   	// #0
  4157b4:	mov	x2, #0x0                   	// #0
  4157b8:	strb	w5, [sp, #104]
  4157bc:	bl	415470 <_obstack_memory_used@@Base+0x2820>
  4157c0:	mov	x25, x0
  4157c4:	mov	x23, x0
  4157c8:	b	4156dc <_obstack_memory_used@@Base+0x2a8c>
  4157cc:	mov	w5, #0x8                   	// #8
  4157d0:	add	x26, x20, #0x70
  4157d4:	add	x27, sp, #0x60
  4157d8:	add	x20, x20, #0x80
  4157dc:	stp	xzr, xzr, [sp, #96]
  4157e0:	mov	x1, x20
  4157e4:	mov	x4, x27
  4157e8:	mov	x3, #0x0                   	// #0
  4157ec:	mov	x2, #0x0                   	// #0
  4157f0:	mov	x0, x26
  4157f4:	strb	w5, [sp, #104]
  4157f8:	bl	415470 <_obstack_memory_used@@Base+0x2820>
  4157fc:	stp	xzr, xzr, [sp, #96]
  415800:	mov	w5, #0x9                   	// #9
  415804:	mov	x22, x0
  415808:	mov	x4, x27
  41580c:	mov	x1, x20
  415810:	mov	x0, x26
  415814:	mov	x3, #0x0                   	// #0
  415818:	mov	x2, #0x0                   	// #0
  41581c:	strb	w5, [sp, #104]
  415820:	bl	415470 <_obstack_memory_used@@Base+0x2820>
  415824:	mov	x23, x0
  415828:	mov	x25, x0
  41582c:	cbnz	x19, 4156b4 <_obstack_memory_used@@Base+0x2a64>
  415830:	b	4156dc <_obstack_memory_used@@Base+0x2a8c>
  415834:	mov	w0, #0xc                   	// #12
  415838:	str	w0, [x24]
  41583c:	mov	x19, #0x0                   	// #0
  415840:	mov	x0, x19
  415844:	ldp	x19, x20, [sp, #16]
  415848:	ldp	x21, x22, [sp, #32]
  41584c:	ldp	x23, x24, [sp, #48]
  415850:	ldp	x25, x26, [sp, #64]
  415854:	ldr	x27, [sp, #80]
  415858:	ldp	x29, x30, [sp], #112
  41585c:	ret
  415860:	stp	x29, x30, [sp, #-48]!
  415864:	mov	x29, sp
  415868:	ldr	x2, [x1, #8]
  41586c:	stp	x19, x20, [sp, #16]
  415870:	mov	x19, x1
  415874:	str	wzr, [sp, #44]
  415878:	mov	x20, x0
  41587c:	cbz	x2, 41588c <_obstack_memory_used@@Base+0x2c3c>
  415880:	ldrb	w0, [x2, #48]
  415884:	cmp	w0, #0x11
  415888:	b.eq	4158b0 <_obstack_memory_used@@Base+0x2c60>  // b.none
  41588c:	ldr	x2, [x19, #16]
  415890:	cbz	x2, 4158a0 <_obstack_memory_used@@Base+0x2c50>
  415894:	ldrb	w0, [x2, #48]
  415898:	cmp	w0, #0x11
  41589c:	b.eq	4158cc <_obstack_memory_used@@Base+0x2c7c>  // b.none
  4158a0:	ldr	w0, [sp, #44]
  4158a4:	ldp	x19, x20, [sp, #16]
  4158a8:	ldp	x29, x30, [sp], #48
  4158ac:	ret
  4158b0:	mov	x1, x20
  4158b4:	add	x0, sp, #0x2c
  4158b8:	bl	415608 <_obstack_memory_used@@Base+0x29b8>
  4158bc:	str	x0, [x19, #8]
  4158c0:	cbz	x0, 41588c <_obstack_memory_used@@Base+0x2c3c>
  4158c4:	str	x19, [x0]
  4158c8:	b	41588c <_obstack_memory_used@@Base+0x2c3c>
  4158cc:	mov	x1, x20
  4158d0:	add	x0, sp, #0x2c
  4158d4:	bl	415608 <_obstack_memory_used@@Base+0x29b8>
  4158d8:	str	x0, [x19, #16]
  4158dc:	cbz	x0, 4158a0 <_obstack_memory_used@@Base+0x2c50>
  4158e0:	str	x19, [x0]
  4158e4:	b	4158a0 <_obstack_memory_used@@Base+0x2c50>
  4158e8:	stp	x29, x30, [sp, #-48]!
  4158ec:	mov	x29, sp
  4158f0:	stp	x19, x20, [sp, #16]
  4158f4:	mov	x19, x0
  4158f8:	ldr	x2, [x1, #8]
  4158fc:	str	x2, [x0, #8]
  415900:	cmp	x2, #0x0
  415904:	b.le	415948 <_obstack_memory_used@@Base+0x2cf8>
  415908:	str	x21, [sp, #32]
  41590c:	lsl	x20, x2, #3
  415910:	str	x2, [x19]
  415914:	mov	x0, x20
  415918:	mov	x21, x1
  41591c:	bl	402800 <malloc@plt>
  415920:	str	x0, [x19, #16]
  415924:	cbz	x0, 415960 <_obstack_memory_used@@Base+0x2d10>
  415928:	ldr	x1, [x21, #16]
  41592c:	mov	x2, x20
  415930:	bl	402650 <memcpy@plt>
  415934:	ldr	x21, [sp, #32]
  415938:	mov	w0, #0x0                   	// #0
  41593c:	ldp	x19, x20, [sp, #16]
  415940:	ldp	x29, x30, [sp], #48
  415944:	ret
  415948:	stp	xzr, xzr, [x19]
  41594c:	mov	w0, #0x0                   	// #0
  415950:	str	xzr, [x19, #16]
  415954:	ldp	x19, x20, [sp, #16]
  415958:	ldp	x29, x30, [sp], #48
  41595c:	ret
  415960:	mov	w0, #0xc                   	// #12
  415964:	ldr	x21, [sp, #32]
  415968:	stp	xzr, xzr, [x19]
  41596c:	b	41593c <_obstack_memory_used@@Base+0x2cec>
  415970:	stp	x29, x30, [sp, #-64]!
  415974:	mov	x29, sp
  415978:	str	x21, [sp, #24]
  41597c:	mov	x21, x0
  415980:	cbz	x1, 4159a4 <_obstack_memory_used@@Base+0x2d54>
  415984:	stp	x22, x23, [sp, #32]
  415988:	cmp	x2, #0x0
  41598c:	ldr	x22, [x1, #8]
  415990:	ccmp	x22, #0x0, #0x4, ne  // ne = any
  415994:	b.gt	4159cc <_obstack_memory_used@@Base+0x2d7c>
  415998:	cmp	x22, #0x0
  41599c:	b.gt	4159dc <_obstack_memory_used@@Base+0x2d8c>
  4159a0:	ldp	x22, x23, [sp, #32]
  4159a4:	cbz	x2, 4159b4 <_obstack_memory_used@@Base+0x2d64>
  4159a8:	ldr	x0, [x2, #8]
  4159ac:	cmp	x0, #0x0
  4159b0:	b.gt	4159f0 <_obstack_memory_used@@Base+0x2da0>
  4159b4:	mov	w0, #0x0                   	// #0
  4159b8:	stp	xzr, xzr, [x21]
  4159bc:	str	xzr, [x21, #16]
  4159c0:	ldr	x21, [sp, #24]
  4159c4:	ldp	x29, x30, [sp], #64
  4159c8:	ret
  4159cc:	ldr	x23, [x2, #8]
  4159d0:	str	x2, [sp, #48]
  4159d4:	cmp	x23, #0x0
  4159d8:	b.gt	415a04 <_obstack_memory_used@@Base+0x2db4>
  4159dc:	mov	x0, x21
  4159e0:	ldr	x21, [sp, #24]
  4159e4:	ldp	x22, x23, [sp, #32]
  4159e8:	ldp	x29, x30, [sp], #64
  4159ec:	b	4158e8 <_obstack_memory_used@@Base+0x2c98>
  4159f0:	mov	x0, x21
  4159f4:	mov	x1, x2
  4159f8:	ldr	x21, [sp, #24]
  4159fc:	ldp	x29, x30, [sp], #64
  415a00:	b	4158e8 <_obstack_memory_used@@Base+0x2c98>
  415a04:	add	x0, x22, x23
  415a08:	str	x0, [x21]
  415a0c:	str	x1, [sp, #56]
  415a10:	lsl	x0, x0, #3
  415a14:	bl	402800 <malloc@plt>
  415a18:	str	x0, [x21, #16]
  415a1c:	ldp	x2, x1, [sp, #48]
  415a20:	cbz	x0, 415adc <_obstack_memory_used@@Base+0x2e8c>
  415a24:	sub	x7, x0, #0x8
  415a28:	mov	x3, #0x0                   	// #0
  415a2c:	mov	x4, #0x0                   	// #0
  415a30:	ldr	x1, [x1, #16]
  415a34:	ldr	x6, [x2, #16]
  415a38:	str	x19, [sp, #16]
  415a3c:	mov	x19, #0x0                   	// #0
  415a40:	b	415a60 <_obstack_memory_used@@Base+0x2e10>
  415a44:	cinc	x3, x3, eq  // eq = none
  415a48:	add	x4, x4, #0x1
  415a4c:	str	x2, [x7, x19, lsl #3]
  415a50:	cmp	x22, x4
  415a54:	b.le	415a80 <_obstack_memory_used@@Base+0x2e30>
  415a58:	cmp	x23, x3
  415a5c:	b.le	415ac0 <_obstack_memory_used@@Base+0x2e70>
  415a60:	ldr	x2, [x1, x4, lsl #3]
  415a64:	add	x19, x19, #0x1
  415a68:	ldr	x5, [x6, x3, lsl #3]
  415a6c:	cmp	x2, x5
  415a70:	b.le	415a44 <_obstack_memory_used@@Base+0x2df4>
  415a74:	add	x3, x3, #0x1
  415a78:	str	x5, [x7, x19, lsl #3]
  415a7c:	b	415a50 <_obstack_memory_used@@Base+0x2e00>
  415a80:	cmp	x23, x3
  415a84:	b.gt	415aa4 <_obstack_memory_used@@Base+0x2e54>
  415a88:	ldp	x22, x23, [sp, #32]
  415a8c:	str	x19, [x21, #8]
  415a90:	mov	w0, #0x0                   	// #0
  415a94:	ldr	x19, [sp, #16]
  415a98:	ldr	x21, [sp, #24]
  415a9c:	ldp	x29, x30, [sp], #64
  415aa0:	ret
  415aa4:	sub	x2, x23, x3
  415aa8:	add	x0, x0, x19, lsl #3
  415aac:	add	x1, x6, x3, lsl #3
  415ab0:	add	x19, x19, x2
  415ab4:	lsl	x2, x2, #3
  415ab8:	bl	402650 <memcpy@plt>
  415abc:	b	415a88 <_obstack_memory_used@@Base+0x2e38>
  415ac0:	sub	x2, x22, x4
  415ac4:	add	x1, x1, x4, lsl #3
  415ac8:	add	x0, x0, x19, lsl #3
  415acc:	add	x19, x19, x2
  415ad0:	lsl	x2, x2, #3
  415ad4:	bl	402650 <memcpy@plt>
  415ad8:	b	415a88 <_obstack_memory_used@@Base+0x2e38>
  415adc:	mov	w0, #0xc                   	// #12
  415ae0:	ldp	x22, x23, [sp, #32]
  415ae4:	b	4159c0 <_obstack_memory_used@@Base+0x2d70>
  415ae8:	stp	x29, x30, [sp, #-112]!
  415aec:	mov	x29, sp
  415af0:	stp	x25, x26, [sp, #64]
  415af4:	mov	x25, x2
  415af8:	ldr	x2, [x2, #8]
  415afc:	stp	x27, x28, [sp, #80]
  415b00:	str	x0, [sp, #104]
  415b04:	cbz	x2, 415d9c <_obstack_memory_used@@Base+0x314c>
  415b08:	stp	x19, x20, [sp, #16]
  415b0c:	cmp	x2, #0x0
  415b10:	mov	w20, w3
  415b14:	stp	x21, x22, [sp, #32]
  415b18:	add	x26, x2, w3, uxtw
  415b1c:	mov	x22, x1
  415b20:	b.le	415b40 <_obstack_memory_used@@Base+0x2ef0>
  415b24:	ldr	x0, [x25, #16]
  415b28:	add	x2, x0, x2, lsl #3
  415b2c:	nop
  415b30:	ldr	x1, [x0], #8
  415b34:	add	x26, x26, x1
  415b38:	cmp	x2, x0
  415b3c:	b.ne	415b30 <_obstack_memory_used@@Base+0x2ee0>  // b.any
  415b40:	ldr	x0, [x22, #136]
  415b44:	ldr	x1, [x22, #64]
  415b48:	and	x0, x26, x0
  415b4c:	add	x0, x0, x0, lsl #1
  415b50:	lsl	x0, x0, #3
  415b54:	add	x2, x1, x0
  415b58:	ldr	x10, [x1, x0]
  415b5c:	cmp	x10, #0x0
  415b60:	b.le	415bcc <_obstack_memory_used@@Base+0x2f7c>
  415b64:	mov	x6, #0x0                   	// #0
  415b68:	ldr	x11, [x2, #16]
  415b6c:	b	415b78 <_obstack_memory_used@@Base+0x2f28>
  415b70:	cmp	x6, x10
  415b74:	b.eq	415bcc <_obstack_memory_used@@Base+0x2f7c>  // b.none
  415b78:	ldr	x27, [x11, x6, lsl #3]
  415b7c:	add	x6, x6, #0x1
  415b80:	ldr	x0, [x27]
  415b84:	cmp	x0, x26
  415b88:	b.ne	415b70 <_obstack_memory_used@@Base+0x2f20>  // b.any
  415b8c:	ldrb	w0, [x27, #104]
  415b90:	and	w0, w0, #0xf
  415b94:	cmp	w0, w20
  415b98:	b.ne	415b70 <_obstack_memory_used@@Base+0x2f20>  // b.any
  415b9c:	ldr	x0, [x27, #80]
  415ba0:	mov	x1, x25
  415ba4:	bl	412c78 <_obstack_memory_used@@Base+0x28>
  415ba8:	tst	w0, #0xff
  415bac:	b.eq	415b70 <_obstack_memory_used@@Base+0x2f20>  // b.none
  415bb0:	ldp	x19, x20, [sp, #16]
  415bb4:	ldp	x21, x22, [sp, #32]
  415bb8:	mov	x0, x27
  415bbc:	ldp	x25, x26, [sp, #64]
  415bc0:	ldp	x27, x28, [sp, #80]
  415bc4:	ldp	x29, x30, [sp], #112
  415bc8:	ret
  415bcc:	mov	x1, #0x1                   	// #1
  415bd0:	mov	x0, #0x70                  	// #112
  415bd4:	bl	402910 <calloc@plt>
  415bd8:	mov	x27, x0
  415bdc:	cbz	x0, 415d10 <_obstack_memory_used@@Base+0x30c0>
  415be0:	add	x21, x0, #0x8
  415be4:	mov	x1, x25
  415be8:	mov	x0, x21
  415bec:	bl	4158e8 <_obstack_memory_used@@Base+0x2c98>
  415bf0:	cbnz	w0, 415dc8 <_obstack_memory_used@@Base+0x3178>
  415bf4:	ldrb	w0, [x27, #104]
  415bf8:	ldr	x2, [x25, #8]
  415bfc:	str	x21, [x27, #80]
  415c00:	bfxil	w0, w20, #0, #4
  415c04:	strb	w0, [x27, #104]
  415c08:	cmp	x2, #0x0
  415c0c:	b.le	415cf0 <_obstack_memory_used@@Base+0x30a0>
  415c10:	and	w0, w20, #0x4
  415c14:	stp	x23, x24, [sp, #48]
  415c18:	add	x24, x27, #0x18
  415c1c:	add	x23, x27, #0x10
  415c20:	str	w0, [sp, #100]
  415c24:	and	w0, w20, #0x2
  415c28:	and	w20, w20, #0x1
  415c2c:	mov	x6, #0x0                   	// #0
  415c30:	mov	x28, #0x0                   	// #0
  415c34:	str	w0, [sp, #96]
  415c38:	ldr	x1, [x25, #16]
  415c3c:	ldr	x0, [x22]
  415c40:	ldr	x3, [x1, x28, lsl #3]
  415c44:	add	x3, x0, x3, lsl #4
  415c48:	ldr	w19, [x3, #8]
  415c4c:	ldrb	w4, [x3, #8]
  415c50:	ubfx	x19, x19, #8, #10
  415c54:	cmp	w19, #0x0
  415c58:	ccmp	w4, #0x1, #0x0, eq  // eq = none
  415c5c:	b.eq	415ce0 <_obstack_memory_used@@Base+0x3090>  // b.none
  415c60:	ldrb	w5, [x3, #10]
  415c64:	cmp	w4, #0x2
  415c68:	ldrb	w0, [x27, #104]
  415c6c:	ubfx	x5, x5, #4, #1
  415c70:	mov	w3, w0
  415c74:	ubfx	x0, x0, #5, #1
  415c78:	orr	w0, w0, w5
  415c7c:	bfi	w3, w0, #5, #1
  415c80:	strb	w3, [x27, #104]
  415c84:	b.eq	415d90 <_obstack_memory_used@@Base+0x3140>  // b.none
  415c88:	cmp	w4, #0x4
  415c8c:	b.eq	415d2c <_obstack_memory_used@@Base+0x30dc>  // b.none
  415c90:	cbz	w19, 415ce0 <_obstack_memory_used@@Base+0x3090>
  415c94:	ldr	x0, [x27, #80]
  415c98:	cmp	x21, x0
  415c9c:	b.eq	415d38 <_obstack_memory_used@@Base+0x30e8>  // b.none
  415ca0:	tbz	w19, #0, 415d68 <_obstack_memory_used@@Base+0x3118>
  415ca4:	cbz	w20, 415cb0 <_obstack_memory_used@@Base+0x3060>
  415ca8:	tbz	w19, #1, 415d70 <_obstack_memory_used@@Base+0x3120>
  415cac:	nop
  415cb0:	subs	x2, x28, x6
  415cb4:	b.mi	415cd8 <_obstack_memory_used@@Base+0x3088>  // b.first
  415cb8:	ldr	x0, [x27, #16]
  415cbc:	cmp	x2, x0
  415cc0:	b.ge	415cd8 <_obstack_memory_used@@Base+0x3088>  // b.tcont
  415cc4:	sub	x0, x0, #0x1
  415cc8:	str	x0, [x27, #16]
  415ccc:	mov	x1, x24
  415cd0:	mov	x0, x23
  415cd4:	bl	414a48 <_obstack_memory_used@@Base+0x1df8>
  415cd8:	ldr	x2, [x25, #8]
  415cdc:	add	x6, x6, #0x1
  415ce0:	add	x28, x28, #0x1
  415ce4:	cmp	x28, x2
  415ce8:	b.lt	415c38 <_obstack_memory_used@@Base+0x2fe8>  // b.tstop
  415cec:	ldp	x23, x24, [sp, #48]
  415cf0:	mov	x2, x26
  415cf4:	mov	x0, x22
  415cf8:	mov	x1, x27
  415cfc:	bl	413480 <_obstack_memory_used@@Base+0x830>
  415d00:	cbz	w0, 415bb0 <_obstack_memory_used@@Base+0x2f60>
  415d04:	mov	x0, x27
  415d08:	bl	414590 <_obstack_memory_used@@Base+0x1940>
  415d0c:	nop
  415d10:	ldr	x1, [sp, #104]
  415d14:	mov	w0, #0xc                   	// #12
  415d18:	mov	x27, #0x0                   	// #0
  415d1c:	ldp	x19, x20, [sp, #16]
  415d20:	ldp	x21, x22, [sp, #32]
  415d24:	str	w0, [x1]
  415d28:	b	415bb8 <_obstack_memory_used@@Base+0x2f68>
  415d2c:	orr	w3, w3, #0x40
  415d30:	strb	w3, [x27, #104]
  415d34:	b	415c90 <_obstack_memory_used@@Base+0x3040>
  415d38:	mov	x0, #0x18                  	// #24
  415d3c:	bl	402800 <malloc@plt>
  415d40:	cbz	x0, 415db8 <_obstack_memory_used@@Base+0x3168>
  415d44:	str	x0, [x27, #80]
  415d48:	mov	x1, x25
  415d4c:	bl	4158e8 <_obstack_memory_used@@Base+0x2c98>
  415d50:	cbnz	w0, 415db8 <_obstack_memory_used@@Base+0x3168>
  415d54:	ldrb	w0, [x27, #104]
  415d58:	mov	x6, #0x0                   	// #0
  415d5c:	orr	w0, w0, #0xffffff80
  415d60:	strb	w0, [x27, #104]
  415d64:	tbnz	w19, #0, 415ca4 <_obstack_memory_used@@Base+0x3054>
  415d68:	tbz	w19, #1, 415d70 <_obstack_memory_used@@Base+0x3120>
  415d6c:	cbnz	w20, 415cb0 <_obstack_memory_used@@Base+0x3060>
  415d70:	tbz	w19, #4, 415d7c <_obstack_memory_used@@Base+0x312c>
  415d74:	ldr	w0, [sp, #96]
  415d78:	cbz	w0, 415cb0 <_obstack_memory_used@@Base+0x3060>
  415d7c:	tbz	w19, #6, 415d88 <_obstack_memory_used@@Base+0x3138>
  415d80:	ldr	w0, [sp, #100]
  415d84:	cbz	w0, 415cb0 <_obstack_memory_used@@Base+0x3060>
  415d88:	ldr	x2, [x25, #8]
  415d8c:	b	415ce0 <_obstack_memory_used@@Base+0x3090>
  415d90:	orr	w3, w3, #0x10
  415d94:	strb	w3, [x27, #104]
  415d98:	b	415c90 <_obstack_memory_used@@Base+0x3040>
  415d9c:	str	wzr, [x0]
  415da0:	mov	x27, #0x0                   	// #0
  415da4:	mov	x0, x27
  415da8:	ldp	x25, x26, [sp, #64]
  415dac:	ldp	x27, x28, [sp, #80]
  415db0:	ldp	x29, x30, [sp], #112
  415db4:	ret
  415db8:	mov	x0, x27
  415dbc:	bl	414590 <_obstack_memory_used@@Base+0x1940>
  415dc0:	ldp	x23, x24, [sp, #48]
  415dc4:	b	415d10 <_obstack_memory_used@@Base+0x30c0>
  415dc8:	mov	x0, x27
  415dcc:	bl	402ae0 <free@plt>
  415dd0:	b	415d10 <_obstack_memory_used@@Base+0x30c0>
  415dd4:	nop
  415dd8:	stp	x29, x30, [sp, #-64]!
  415ddc:	mov	x29, sp
  415de0:	stp	x19, x20, [sp, #16]
  415de4:	ldr	x20, [x2, #8]
  415de8:	stp	x21, x22, [sp, #32]
  415dec:	mov	x22, x0
  415df0:	cbz	x20, 415fd0 <_obstack_memory_used@@Base+0x3380>
  415df4:	stp	x23, x24, [sp, #48]
  415df8:	mov	x21, x1
  415dfc:	mov	x23, x2
  415e00:	cmp	x20, #0x0
  415e04:	b.le	415e20 <_obstack_memory_used@@Base+0x31d0>
  415e08:	ldr	x3, [x2, #16]
  415e0c:	add	x1, x3, x20, lsl #3
  415e10:	ldr	x0, [x3], #8
  415e14:	add	x20, x20, x0
  415e18:	cmp	x1, x3
  415e1c:	b.ne	415e10 <_obstack_memory_used@@Base+0x31c0>  // b.any
  415e20:	ldr	x0, [x21, #136]
  415e24:	ldr	x1, [x21, #64]
  415e28:	and	x0, x20, x0
  415e2c:	add	x0, x0, x0, lsl #1
  415e30:	lsl	x0, x0, #3
  415e34:	add	x2, x1, x0
  415e38:	ldr	x7, [x1, x0]
  415e3c:	cmp	x7, #0x0
  415e40:	b.le	415e80 <_obstack_memory_used@@Base+0x3230>
  415e44:	ldr	x8, [x2, #16]
  415e48:	mov	x6, #0x0                   	// #0
  415e4c:	nop
  415e50:	ldr	x19, [x8, x6, lsl #3]
  415e54:	mov	x1, x23
  415e58:	add	x6, x6, #0x1
  415e5c:	add	x0, x19, #0x8
  415e60:	ldr	x3, [x19]
  415e64:	cmp	x3, x20
  415e68:	b.ne	415e78 <_obstack_memory_used@@Base+0x3228>  // b.any
  415e6c:	bl	412c78 <_obstack_memory_used@@Base+0x28>
  415e70:	tst	w0, #0xff
  415e74:	b.ne	415f78 <_obstack_memory_used@@Base+0x3328>  // b.any
  415e78:	cmp	x6, x7
  415e7c:	b.ne	415e50 <_obstack_memory_used@@Base+0x3200>  // b.any
  415e80:	mov	x1, #0x1                   	// #1
  415e84:	mov	x0, #0x70                  	// #112
  415e88:	bl	402910 <calloc@plt>
  415e8c:	mov	x19, x0
  415e90:	cbz	x0, 415fbc <_obstack_memory_used@@Base+0x336c>
  415e94:	add	x24, x0, #0x8
  415e98:	mov	x1, x23
  415e9c:	mov	x0, x24
  415ea0:	bl	4158e8 <_obstack_memory_used@@Base+0x2c98>
  415ea4:	cbnz	w0, 415fb4 <_obstack_memory_used@@Base+0x3364>
  415ea8:	ldr	x6, [x23, #8]
  415eac:	str	x24, [x19, #80]
  415eb0:	cmp	x6, #0x0
  415eb4:	b.le	415f64 <_obstack_memory_used@@Base+0x3314>
  415eb8:	ldr	x0, [x23, #16]
  415ebc:	ldr	x7, [x21]
  415ec0:	add	x6, x0, x6, lsl #3
  415ec4:	b	415f0c <_obstack_memory_used@@Base+0x32bc>
  415ec8:	ldrb	w3, [x19, #104]
  415ecc:	cmp	w4, #0x2
  415ed0:	ldrb	w5, [x2, #10]
  415ed4:	mov	w1, w3
  415ed8:	ubfx	x3, x3, #5, #1
  415edc:	ubfx	x5, x5, #4, #1
  415ee0:	orr	w3, w3, w5
  415ee4:	bfi	w1, w3, #5, #1
  415ee8:	strb	w1, [x19, #104]
  415eec:	b.eq	415f90 <_obstack_memory_used@@Base+0x3340>  // b.none
  415ef0:	cmp	w4, #0x4
  415ef4:	b.ne	415f9c <_obstack_memory_used@@Base+0x334c>  // b.any
  415ef8:	orr	w1, w1, #0x40
  415efc:	strb	w1, [x19, #104]
  415f00:	add	x0, x0, #0x8
  415f04:	cmp	x6, x0
  415f08:	b.eq	415f64 <_obstack_memory_used@@Base+0x3314>  // b.none
  415f0c:	ldr	x2, [x0]
  415f10:	add	x2, x7, x2, lsl #4
  415f14:	ldrb	w4, [x2, #8]
  415f18:	cmp	w4, #0x1
  415f1c:	b.ne	415ec8 <_obstack_memory_used@@Base+0x3278>  // b.any
  415f20:	ldr	w1, [x2, #8]
  415f24:	tst	w1, #0x3ff00
  415f28:	b.eq	415f00 <_obstack_memory_used@@Base+0x32b0>  // b.none
  415f2c:	ldrb	w1, [x19, #104]
  415f30:	ldrb	w2, [x2, #10]
  415f34:	mov	w3, w1
  415f38:	ubfx	x1, x1, #5, #1
  415f3c:	ubfx	x2, x2, #4, #1
  415f40:	orr	w1, w1, w2
  415f44:	bfi	w3, w1, #5, #1
  415f48:	strb	w3, [x19, #104]
  415f4c:	ldrb	w1, [x19, #104]
  415f50:	add	x0, x0, #0x8
  415f54:	cmp	x6, x0
  415f58:	orr	w1, w1, #0xffffff80
  415f5c:	strb	w1, [x19, #104]
  415f60:	b.ne	415f0c <_obstack_memory_used@@Base+0x32bc>  // b.any
  415f64:	mov	x2, x20
  415f68:	mov	x0, x21
  415f6c:	mov	x1, x19
  415f70:	bl	413480 <_obstack_memory_used@@Base+0x830>
  415f74:	cbnz	w0, 415fec <_obstack_memory_used@@Base+0x339c>
  415f78:	ldp	x23, x24, [sp, #48]
  415f7c:	mov	x0, x19
  415f80:	ldp	x19, x20, [sp, #16]
  415f84:	ldp	x21, x22, [sp, #32]
  415f88:	ldp	x29, x30, [sp], #64
  415f8c:	ret
  415f90:	orr	w1, w1, #0x10
  415f94:	strb	w1, [x19, #104]
  415f98:	b	415f00 <_obstack_memory_used@@Base+0x32b0>
  415f9c:	cmp	w4, #0xc
  415fa0:	b.eq	415f4c <_obstack_memory_used@@Base+0x32fc>  // b.none
  415fa4:	ldr	w1, [x2, #8]
  415fa8:	tst	w1, #0x3ff00
  415fac:	b.eq	415f00 <_obstack_memory_used@@Base+0x32b0>  // b.none
  415fb0:	b	415f4c <_obstack_memory_used@@Base+0x32fc>
  415fb4:	mov	x0, x19
  415fb8:	bl	402ae0 <free@plt>
  415fbc:	mov	w0, #0xc                   	// #12
  415fc0:	mov	x19, #0x0                   	// #0
  415fc4:	ldp	x23, x24, [sp, #48]
  415fc8:	str	w0, [x22]
  415fcc:	b	415f7c <_obstack_memory_used@@Base+0x332c>
  415fd0:	str	wzr, [x0]
  415fd4:	mov	x19, #0x0                   	// #0
  415fd8:	mov	x0, x19
  415fdc:	ldp	x19, x20, [sp, #16]
  415fe0:	ldp	x21, x22, [sp, #32]
  415fe4:	ldp	x29, x30, [sp], #64
  415fe8:	ret
  415fec:	mov	x0, x19
  415ff0:	bl	414590 <_obstack_memory_used@@Base+0x1940>
  415ff4:	b	415fbc <_obstack_memory_used@@Base+0x336c>
  415ff8:	cmp	x3, #0x0
  415ffc:	b.le	4160b4 <_obstack_memory_used@@Base+0x3464>
  416000:	stp	x29, x30, [sp, #-96]!
  416004:	mov	x29, sp
  416008:	stp	x19, x20, [sp, #16]
  41600c:	mov	x20, x1
  416010:	mov	x19, #0x0                   	// #0
  416014:	stp	x21, x22, [sp, #32]
  416018:	mov	x21, x3
  41601c:	mov	x22, x2
  416020:	str	x23, [sp, #48]
  416024:	mov	x23, x0
  416028:	b	41607c <_obstack_memory_used@@Base+0x342c>
  41602c:	add	x2, x4, #0x8
  416030:	add	x1, x1, #0x8
  416034:	add	x0, sp, #0x48
  416038:	cbz	x4, 416070 <_obstack_memory_used@@Base+0x3420>
  41603c:	bl	415970 <_obstack_memory_used@@Base+0x2d20>
  416040:	mov	w4, w0
  416044:	str	w4, [sp, #68]
  416048:	add	x2, sp, #0x48
  41604c:	mov	x1, x23
  416050:	add	x0, sp, #0x44
  416054:	cbnz	w4, 41609c <_obstack_memory_used@@Base+0x344c>
  416058:	bl	415dd8 <_obstack_memory_used@@Base+0x3188>
  41605c:	str	x0, [x20, x19, lsl #3]
  416060:	ldr	x0, [sp, #88]
  416064:	bl	402ae0 <free@plt>
  416068:	ldr	w4, [sp, #68]
  41606c:	cbnz	w4, 41609c <_obstack_memory_used@@Base+0x344c>
  416070:	add	x19, x19, #0x1
  416074:	cmp	x21, x19
  416078:	b.eq	416098 <_obstack_memory_used@@Base+0x3448>  // b.none
  41607c:	ldr	x1, [x20, x19, lsl #3]
  416080:	ldr	x4, [x22, x19, lsl #3]
  416084:	cbnz	x1, 41602c <_obstack_memory_used@@Base+0x33dc>
  416088:	str	x4, [x20, x19, lsl #3]
  41608c:	add	x19, x19, #0x1
  416090:	cmp	x21, x19
  416094:	b.ne	41607c <_obstack_memory_used@@Base+0x342c>  // b.any
  416098:	mov	w4, #0x0                   	// #0
  41609c:	mov	w0, w4
  4160a0:	ldp	x19, x20, [sp, #16]
  4160a4:	ldp	x21, x22, [sp, #32]
  4160a8:	ldr	x23, [sp, #48]
  4160ac:	ldp	x29, x30, [sp], #96
  4160b0:	ret
  4160b4:	mov	w4, #0x0                   	// #0
  4160b8:	mov	w0, w4
  4160bc:	ret
  4160c0:	stp	x29, x30, [sp, #-160]!
  4160c4:	mov	x29, sp
  4160c8:	ldr	x7, [x0, #200]
  4160cc:	stp	x19, x20, [sp, #16]
  4160d0:	mov	x20, #0x0                   	// #0
  4160d4:	stp	x21, x22, [sp, #32]
  4160d8:	mov	x21, x2
  4160dc:	mov	x22, x1
  4160e0:	mov	x2, x7
  4160e4:	stp	x23, x24, [sp, #48]
  4160e8:	mov	x24, x0
  4160ec:	str	x3, [sp, #104]
  4160f0:	str	w4, [sp, #116]
  4160f4:	b	416118 <_obstack_memory_used@@Base+0x34c8>
  4160f8:	asr	x5, x5, #1
  4160fc:	ldr	x0, [x24, #216]
  416100:	add	x1, x5, x5, lsl #2
  416104:	add	x1, x0, x1, lsl #3
  416108:	ldr	x0, [x1, #8]
  41610c:	cmp	x21, x0
  416110:	b.gt	4162f4 <_obstack_memory_used@@Base+0x36a4>
  416114:	mov	x2, x5
  416118:	add	x5, x2, x20
  41611c:	cmp	x2, x20
  416120:	b.gt	4160f8 <_obstack_memory_used@@Base+0x34a8>
  416124:	cmp	x7, x20
  416128:	b.le	416304 <_obstack_memory_used@@Base+0x36b4>
  41612c:	add	x20, x20, x20, lsl #2
  416130:	ldr	x19, [x24, #216]
  416134:	lsl	x0, x20, #3
  416138:	str	x0, [sp, #120]
  41613c:	add	x19, x19, x0
  416140:	ldr	x0, [x19, #8]
  416144:	cmp	x21, x0
  416148:	b.ne	416304 <_obstack_memory_used@@Base+0x36b4>  // b.any
  41614c:	add	x23, x22, #0x10
  416150:	stp	x25, x26, [sp, #64]
  416154:	stp	x27, x28, [sp, #80]
  416158:	ldr	x26, [x24, #152]
  41615c:	b	416208 <_obstack_memory_used@@Base+0x35b8>
  416160:	ldr	x0, [x24, #184]
  416164:	lsl	x28, x20, #3
  416168:	ldr	x1, [x26, #24]
  41616c:	add	x25, x0, x28
  416170:	ldr	x7, [x0, x20, lsl #3]
  416174:	ldr	x27, [x1, x2, lsl #3]
  416178:	cbz	x7, 4162d0 <_obstack_memory_used@@Base+0x3680>
  41617c:	ldr	x0, [x7, #16]
  416180:	mov	x2, x27
  416184:	add	x1, x7, #0x18
  416188:	bl	4148c8 <_obstack_memory_used@@Base+0x1c78>
  41618c:	cbnz	x0, 4161fc <_obstack_memory_used@@Base+0x35ac>
  416190:	add	x1, x7, #0x8
  416194:	add	x0, sp, #0x88
  416198:	bl	4158e8 <_obstack_memory_used@@Base+0x2c98>
  41619c:	mov	w4, w0
  4161a0:	mov	x1, x27
  4161a4:	add	x0, sp, #0x88
  4161a8:	str	w4, [sp, #132]
  4161ac:	bl	413350 <_obstack_memory_used@@Base+0x700>
  4161b0:	and	w0, w0, #0xff
  4161b4:	ldr	w1, [sp, #132]
  4161b8:	eor	w0, w0, #0x1
  4161bc:	cmp	w1, #0x0
  4161c0:	cset	w1, ne  // ne = any
  4161c4:	orr	w0, w1, w0
  4161c8:	cbnz	w0, 416340 <_obstack_memory_used@@Base+0x36f0>
  4161cc:	ldr	x4, [x24, #184]
  4161d0:	add	x25, x4, x28
  4161d4:	add	x2, sp, #0x88
  4161d8:	mov	x1, x26
  4161dc:	add	x0, sp, #0x84
  4161e0:	bl	415dd8 <_obstack_memory_used@@Base+0x3188>
  4161e4:	str	x0, [x25]
  4161e8:	ldr	x0, [sp, #152]
  4161ec:	bl	402ae0 <free@plt>
  4161f0:	ldr	x0, [x24, #184]
  4161f4:	ldr	x0, [x0, x20, lsl #3]
  4161f8:	cbz	x0, 41631c <_obstack_memory_used@@Base+0x36cc>
  4161fc:	ldrb	w0, [x19, #32]
  416200:	add	x19, x19, #0x28
  416204:	cbz	w0, 4162fc <_obstack_memory_used@@Base+0x36ac>
  416208:	ldr	x2, [x19]
  41620c:	mov	x1, x23
  416210:	ldr	x7, [x22, #8]
  416214:	mov	x0, x7
  416218:	bl	4148c8 <_obstack_memory_used@@Base+0x1c78>
  41621c:	cbz	x0, 4161fc <_obstack_memory_used@@Base+0x35ac>
  416220:	ldp	x0, x3, [x19, #16]
  416224:	add	x3, x21, x3
  416228:	sub	x20, x3, x0
  41622c:	cmp	x21, x20
  416230:	b.ne	416160 <_obstack_memory_used@@Base+0x3510>  // b.any
  416234:	ldr	x3, [x26, #40]
  416238:	add	x2, x2, x2, lsl #1
  41623c:	mov	x0, x7
  416240:	mov	x1, x23
  416244:	add	x2, x3, x2, lsl #3
  416248:	ldr	x2, [x2, #16]
  41624c:	ldr	x28, [x2]
  416250:	mov	x2, x28
  416254:	bl	4148c8 <_obstack_memory_used@@Base+0x1c78>
  416258:	cbnz	x0, 4161fc <_obstack_memory_used@@Base+0x35ac>
  41625c:	mov	x1, #0x1                   	// #1
  416260:	mov	x0, #0x8                   	// #8
  416264:	stp	x1, x1, [sp, #136]
  416268:	bl	402800 <malloc@plt>
  41626c:	str	x0, [sp, #152]
  416270:	cbz	x0, 416370 <_obstack_memory_used@@Base+0x3720>
  416274:	mov	w4, #0x0                   	// #0
  416278:	str	x28, [x0]
  41627c:	ldr	w3, [sp, #116]
  416280:	add	x1, sp, #0x88
  416284:	ldr	x2, [sp, #104]
  416288:	mov	x0, x26
  41628c:	str	w4, [sp, #132]
  416290:	bl	415160 <_obstack_memory_used@@Base+0x2510>
  416294:	mov	w19, w0
  416298:	add	x1, sp, #0x88
  41629c:	mov	x0, x22
  4162a0:	bl	414d40 <_obstack_memory_used@@Base+0x20f0>
  4162a4:	mov	w28, w0
  4162a8:	ldr	x0, [sp, #152]
  4162ac:	bl	402ae0 <free@plt>
  4162b0:	ldr	w0, [sp, #132]
  4162b4:	orr	w1, w19, w28
  4162b8:	orr	w1, w1, w0
  4162bc:	cbnz	w1, 41637c <_obstack_memory_used@@Base+0x372c>
  4162c0:	ldr	x0, [sp, #120]
  4162c4:	ldr	x19, [x24, #216]
  4162c8:	add	x19, x19, x0
  4162cc:	b	416208 <_obstack_memory_used@@Base+0x35b8>
  4162d0:	mov	x1, #0x1                   	// #1
  4162d4:	mov	x0, #0x8                   	// #8
  4162d8:	stp	x1, x1, [sp, #136]
  4162dc:	bl	402800 <malloc@plt>
  4162e0:	str	x0, [sp, #152]
  4162e4:	cbz	x0, 416350 <_obstack_memory_used@@Base+0x3700>
  4162e8:	str	x27, [x0]
  4162ec:	str	wzr, [sp, #132]
  4162f0:	b	4161d4 <_obstack_memory_used@@Base+0x3584>
  4162f4:	add	x20, x5, #0x1
  4162f8:	b	416118 <_obstack_memory_used@@Base+0x34c8>
  4162fc:	ldp	x25, x26, [sp, #64]
  416300:	ldp	x27, x28, [sp, #80]
  416304:	mov	w0, #0x0                   	// #0
  416308:	ldp	x19, x20, [sp, #16]
  41630c:	ldp	x21, x22, [sp, #32]
  416310:	ldp	x23, x24, [sp, #48]
  416314:	ldp	x29, x30, [sp], #160
  416318:	ret
  41631c:	ldr	w0, [sp, #132]
  416320:	cbz	w0, 4161fc <_obstack_memory_used@@Base+0x35ac>
  416324:	ldp	x19, x20, [sp, #16]
  416328:	ldp	x21, x22, [sp, #32]
  41632c:	ldp	x23, x24, [sp, #48]
  416330:	ldp	x25, x26, [sp, #64]
  416334:	ldp	x27, x28, [sp, #80]
  416338:	ldp	x29, x30, [sp], #160
  41633c:	ret
  416340:	ldr	x0, [sp, #152]
  416344:	bl	402ae0 <free@plt>
  416348:	ldr	w0, [sp, #132]
  41634c:	cbnz	w0, 416324 <_obstack_memory_used@@Base+0x36d4>
  416350:	mov	w0, #0xc                   	// #12
  416354:	ldp	x19, x20, [sp, #16]
  416358:	ldp	x21, x22, [sp, #32]
  41635c:	ldp	x23, x24, [sp, #48]
  416360:	ldp	x25, x26, [sp, #64]
  416364:	ldp	x27, x28, [sp, #80]
  416368:	ldp	x29, x30, [sp], #160
  41636c:	ret
  416370:	mov	w4, #0xc                   	// #12
  416374:	stp	xzr, xzr, [sp, #136]
  416378:	b	41627c <_obstack_memory_used@@Base+0x362c>
  41637c:	cbnz	w0, 416324 <_obstack_memory_used@@Base+0x36d4>
  416380:	cmp	w19, #0x0
  416384:	csel	w0, w19, w28, ne  // ne = any
  416388:	ldp	x25, x26, [sp, #64]
  41638c:	ldp	x27, x28, [sp, #80]
  416390:	b	416308 <_obstack_memory_used@@Base+0x36b8>
  416394:	nop
  416398:	stp	x29, x30, [sp, #-32]!
  41639c:	mov	x29, sp
  4163a0:	stp	x19, x20, [sp, #16]
  4163a4:	mov	x19, x1
  4163a8:	ldrb	w1, [x1, #48]
  4163ac:	cmp	w1, #0x10
  4163b0:	b.ne	4163d8 <_obstack_memory_used@@Base+0x3788>  // b.any
  4163b4:	ldr	x1, [x19, #8]
  4163b8:	mov	w0, #0x0                   	// #0
  4163bc:	ldr	x2, [x1, #24]
  4163c0:	ldr	x1, [x1, #56]
  4163c4:	str	x2, [x19, #24]
  4163c8:	str	x1, [x19, #56]
  4163cc:	ldp	x19, x20, [sp, #16]
  4163d0:	ldp	x29, x30, [sp], #32
  4163d4:	ret
  4163d8:	ldp	x2, x3, [x19, #40]
  4163dc:	str	x19, [x19, #24]
  4163e0:	mov	x20, x0
  4163e4:	mov	x1, x2
  4163e8:	mov	x2, x3
  4163ec:	bl	414098 <_obstack_memory_used@@Base+0x1448>
  4163f0:	str	x0, [x19, #56]
  4163f4:	mov	x1, x0
  4163f8:	cmn	x0, #0x1
  4163fc:	b.eq	416434 <_obstack_memory_used@@Base+0x37e4>  // b.none
  416400:	ldrb	w2, [x19, #48]
  416404:	mov	w0, #0x0                   	// #0
  416408:	cmp	w2, #0xc
  41640c:	b.ne	4163cc <_obstack_memory_used@@Base+0x377c>  // b.any
  416410:	ldr	x2, [x20]
  416414:	ldr	w3, [x19, #40]
  416418:	add	x1, x2, x1, lsl #4
  41641c:	ldr	w2, [x1, #8]
  416420:	bfi	w2, w3, #8, #10
  416424:	str	w2, [x1, #8]
  416428:	ldp	x19, x20, [sp, #16]
  41642c:	ldp	x29, x30, [sp], #32
  416430:	ret
  416434:	mov	w0, #0xc                   	// #12
  416438:	b	4163cc <_obstack_memory_used@@Base+0x377c>
  41643c:	nop
  416440:	stp	x29, x30, [sp, #-128]!
  416444:	mov	x29, sp
  416448:	stp	x25, x26, [sp, #64]
  41644c:	mov	x26, x0
  416450:	ldr	x0, [x0, #56]
  416454:	stp	x19, x20, [sp, #16]
  416458:	add	x20, x1, x1, lsl #1
  41645c:	stp	xzr, xzr, [sp, #104]
  416460:	add	x20, x0, x20, lsl #3
  416464:	str	xzr, [sp, #120]
  416468:	str	x27, [sp, #80]
  41646c:	ldr	x7, [x20, #8]
  416470:	cmp	x7, #0x0
  416474:	b.le	416640 <_obstack_memory_used@@Base+0x39f0>
  416478:	add	x25, x2, #0x10
  41647c:	mov	x19, #0x0                   	// #0
  416480:	stp	x21, x22, [sp, #32]
  416484:	mov	x21, x1
  416488:	mov	x22, x2
  41648c:	stp	x23, x24, [sp, #48]
  416490:	mov	x24, x3
  416494:	add	x23, x20, #0x10
  416498:	b	4164dc <_obstack_memory_used@@Base+0x388c>
  41649c:	cbnz	x0, 416584 <_obstack_memory_used@@Base+0x3934>
  4164a0:	ldr	x0, [x22, #8]
  4164a4:	mov	x1, x25
  4164a8:	bl	4148c8 <_obstack_memory_used@@Base+0x1c78>
  4164ac:	cbz	x0, 416584 <_obstack_memory_used@@Base+0x3934>
  4164b0:	ldr	x2, [x26, #56]
  4164b4:	mov	x1, x24
  4164b8:	add	x0, sp, #0x68
  4164bc:	add	x2, x2, x6
  4164c0:	bl	4152c0 <_obstack_memory_used@@Base+0x2670>
  4164c4:	mov	w27, w0
  4164c8:	cbnz	w0, 41655c <_obstack_memory_used@@Base+0x390c>
  4164cc:	ldr	x7, [x20, #8]
  4164d0:	add	x19, x19, #0x1
  4164d4:	cmp	x7, x19
  4164d8:	b.le	4165a0 <_obstack_memory_used@@Base+0x3950>
  4164dc:	ldr	x1, [x20, #16]
  4164e0:	ldr	x4, [x1, x19, lsl #3]
  4164e4:	cmp	x21, x4
  4164e8:	b.eq	4164d0 <_obstack_memory_used@@Base+0x3880>  // b.none
  4164ec:	ldr	x1, [x26]
  4164f0:	add	x1, x1, x4, lsl #4
  4164f4:	ldrb	w0, [x1, #8]
  4164f8:	tbz	w0, #3, 4164d0 <_obstack_memory_used@@Base+0x3880>
  4164fc:	add	x4, x4, x4, lsl #1
  416500:	mov	x1, x23
  416504:	ldr	x8, [x26, #40]
  416508:	lsl	x6, x4, #3
  41650c:	mov	x0, x7
  416510:	add	x8, x8, x6
  416514:	ldr	x9, [x8, #16]
  416518:	ldr	x2, [x9]
  41651c:	bl	4148c8 <_obstack_memory_used@@Base+0x1c78>
  416520:	ldr	x1, [x8, #8]
  416524:	cmp	x1, #0x1
  416528:	b.gt	41649c <_obstack_memory_used@@Base+0x384c>
  41652c:	cbnz	x0, 4164d0 <_obstack_memory_used@@Base+0x3880>
  416530:	ldr	x0, [x22, #8]
  416534:	mov	x1, x25
  416538:	bl	4148c8 <_obstack_memory_used@@Base+0x1c78>
  41653c:	cbz	x0, 4164d0 <_obstack_memory_used@@Base+0x3880>
  416540:	ldr	x2, [x26, #56]
  416544:	mov	x1, x24
  416548:	add	x0, sp, #0x68
  41654c:	add	x2, x2, x6
  416550:	bl	4152c0 <_obstack_memory_used@@Base+0x2670>
  416554:	mov	w27, w0
  416558:	cbz	w0, 4164cc <_obstack_memory_used@@Base+0x387c>
  41655c:	ldr	x0, [sp, #120]
  416560:	bl	402ae0 <free@plt>
  416564:	mov	w0, w27
  416568:	ldp	x19, x20, [sp, #16]
  41656c:	ldp	x21, x22, [sp, #32]
  416570:	ldp	x23, x24, [sp, #48]
  416574:	ldp	x25, x26, [sp, #64]
  416578:	ldr	x27, [sp, #80]
  41657c:	ldp	x29, x30, [sp], #128
  416580:	ret
  416584:	ldr	x2, [x9, #8]
  416588:	cmp	x2, #0x0
  41658c:	b.le	4164d0 <_obstack_memory_used@@Base+0x3880>
  416590:	mov	x1, x23
  416594:	mov	x0, x7
  416598:	bl	4148c8 <_obstack_memory_used@@Base+0x1c78>
  41659c:	b	41652c <_obstack_memory_used@@Base+0x38dc>
  4165a0:	cmp	x7, #0x0
  4165a4:	add	x10, sp, #0x78
  4165a8:	add	x9, x22, #0x10
  4165ac:	add	x11, x22, #0x8
  4165b0:	mov	x6, #0x0                   	// #0
  4165b4:	b.le	416614 <_obstack_memory_used@@Base+0x39c4>
  4165b8:	ldr	x2, [x20, #16]
  4165bc:	mov	x1, x10
  4165c0:	ldr	x0, [sp, #112]
  4165c4:	ldr	x2, [x2, x6, lsl #3]
  4165c8:	add	x6, x6, #0x1
  4165cc:	bl	4148c8 <_obstack_memory_used@@Base+0x1c78>
  4165d0:	mov	x1, x9
  4165d4:	cbnz	x0, 41660c <_obstack_memory_used@@Base+0x39bc>
  4165d8:	ldr	x8, [x22, #8]
  4165dc:	mov	x0, x8
  4165e0:	bl	4148c8 <_obstack_memory_used@@Base+0x1c78>
  4165e4:	mov	x2, x0
  4165e8:	subs	x2, x2, #0x1
  4165ec:	sub	x3, x8, #0x1
  4165f0:	mov	x1, x9
  4165f4:	mov	x0, x11
  4165f8:	ccmp	x2, x8, #0x0, pl  // pl = nfrst
  4165fc:	b.ge	41660c <_obstack_memory_used@@Base+0x39bc>  // b.tcont
  416600:	str	x3, [x22, #8]
  416604:	bl	414a48 <_obstack_memory_used@@Base+0x1df8>
  416608:	ldr	x7, [x20, #8]
  41660c:	cmp	x7, x6
  416610:	b.gt	4165b8 <_obstack_memory_used@@Base+0x3968>
  416614:	ldp	x21, x22, [sp, #32]
  416618:	ldp	x23, x24, [sp, #48]
  41661c:	ldr	x0, [sp, #120]
  416620:	bl	402ae0 <free@plt>
  416624:	mov	w27, #0x0                   	// #0
  416628:	mov	w0, w27
  41662c:	ldp	x19, x20, [sp, #16]
  416630:	ldp	x25, x26, [sp, #64]
  416634:	ldr	x27, [sp, #80]
  416638:	ldp	x29, x30, [sp], #128
  41663c:	ret
  416640:	mov	x0, #0x0                   	// #0
  416644:	b	416620 <_obstack_memory_used@@Base+0x39d0>
  416648:	stp	x29, x30, [sp, #-256]!
  41664c:	mov	x29, sp
  416650:	stp	x23, x24, [sp, #48]
  416654:	mov	x23, x0
  416658:	mov	x0, #0x3800                	// #14336
  41665c:	str	x1, [sp, #136]
  416660:	bl	402800 <malloc@plt>
  416664:	cbz	x0, 416e60 <_obstack_memory_used@@Base+0x4210>
  416668:	ldr	x2, [sp, #136]
  41666c:	mov	x1, #0x1800                	// #6144
  416670:	add	x1, x0, x1
  416674:	stp	x19, x20, [sp, #16]
  416678:	add	x24, x2, #0x8
  41667c:	str	x1, [sp, #104]
  416680:	mov	x20, x0
  416684:	stp	xzr, xzr, [sp, #160]
  416688:	ldr	x1, [x24, #8]
  41668c:	stp	xzr, xzr, [x2, #88]
  416690:	stp	xzr, xzr, [sp, #176]
  416694:	cmp	x1, #0x0
  416698:	b.le	416ec0 <_obstack_memory_used@@Base+0x4270>
  41669c:	mov	x19, #0x0                   	// #0
  4166a0:	stp	x21, x22, [sp, #32]
  4166a4:	stp	x25, x26, [sp, #64]
  4166a8:	mov	x25, #0x0                   	// #0
  4166ac:	stp	x27, x28, [sp, #80]
  4166b0:	lsl	x1, x25, #3
  4166b4:	ldr	x0, [x24, #16]
  4166b8:	str	x1, [sp, #120]
  4166bc:	ldr	x2, [x23]
  4166c0:	ldr	x1, [x0, x25, lsl #3]
  4166c4:	lsl	x1, x1, #4
  4166c8:	add	x21, x2, x1
  4166cc:	ldr	w0, [x21, #8]
  4166d0:	ldrb	w28, [x21, #8]
  4166d4:	ubfx	x0, x0, #8, #10
  4166d8:	cmp	w28, #0x1
  4166dc:	b.eq	416944 <_obstack_memory_used@@Base+0x3cf4>  // b.none
  4166e0:	cmp	w28, #0x3
  4166e4:	b.eq	416da8 <_obstack_memory_used@@Base+0x4158>  // b.none
  4166e8:	cmp	w28, #0x5
  4166ec:	b.eq	416c88 <_obstack_memory_used@@Base+0x4038>  // b.none
  4166f0:	cmp	w28, #0x7
  4166f4:	b.eq	416d84 <_obstack_memory_used@@Base+0x4134>  // b.none
  4166f8:	ldr	x0, [x24, #8]
  4166fc:	add	x25, x25, #0x1
  416700:	cmp	x25, x0
  416704:	b.lt	4166b0 <_obstack_memory_used@@Base+0x3a60>  // b.tstop
  416708:	cmp	x19, #0x0
  41670c:	b.le	416fc8 <_obstack_memory_used@@Base+0x4378>
  416710:	add	x22, x19, #0x1
  416714:	stp	x22, xzr, [sp, #192]
  416718:	lsl	x27, x19, #1
  41671c:	lsl	x22, x22, #3
  416720:	mov	x0, x22
  416724:	bl	402800 <malloc@plt>
  416728:	str	x0, [sp, #208]
  41672c:	mov	x25, x0
  416730:	cbz	x0, 416c0c <_obstack_memory_used@@Base+0x3fbc>
  416734:	add	x26, x27, x19
  416738:	str	wzr, [sp, #160]
  41673c:	lsl	x21, x26, #3
  416740:	mov	x0, x21
  416744:	bl	402800 <malloc@plt>
  416748:	mov	x24, x0
  41674c:	cbz	x0, 416c0c <_obstack_memory_used@@Base+0x3fbc>
  416750:	sub	x22, x22, #0x8
  416754:	add	x26, x20, #0x8
  416758:	add	x0, x0, x22
  41675c:	add	x25, sp, #0x100
  416760:	str	x0, [sp, #112]
  416764:	add	x0, x0, x22
  416768:	mov	x22, #0x0                   	// #0
  41676c:	str	x0, [sp, #120]
  416770:	str	wzr, [sp, #128]
  416774:	stp	xzr, xzr, [sp, #224]
  416778:	stp	xzr, xzr, [sp, #240]
  41677c:	mov	x28, #0x0                   	// #0
  416780:	ldr	x5, [x26]
  416784:	str	xzr, [sp, #200]
  416788:	cmp	x5, #0x0
  41678c:	b.le	4167d4 <_obstack_memory_used@@Base+0x3b84>
  416790:	ldr	x3, [x26, #8]
  416794:	add	x0, sp, #0xc0
  416798:	ldr	x1, [x23, #24]
  41679c:	ldr	x3, [x3, x28, lsl #3]
  4167a0:	ldr	x3, [x1, x3, lsl #3]
  4167a4:	cmn	x3, #0x1
  4167a8:	b.eq	4167c8 <_obstack_memory_used@@Base+0x3b78>  // b.none
  4167ac:	ldr	x1, [x23, #48]
  4167b0:	add	x3, x3, x3, lsl #1
  4167b4:	add	x1, x1, x3, lsl #3
  4167b8:	bl	414d40 <_obstack_memory_used@@Base+0x20f0>
  4167bc:	str	w0, [sp, #160]
  4167c0:	cbnz	w0, 416c00 <_obstack_memory_used@@Base+0x3fb0>
  4167c4:	ldr	x5, [x26]
  4167c8:	add	x28, x28, #0x1
  4167cc:	cmp	x5, x28
  4167d0:	b.gt	416790 <_obstack_memory_used@@Base+0x3b40>
  4167d4:	add	x2, sp, #0xc0
  4167d8:	mov	x1, x23
  4167dc:	add	x0, sp, #0xa0
  4167e0:	mov	w3, #0x0                   	// #0
  4167e4:	bl	415ae8 <_obstack_memory_used@@Base+0x2e98>
  4167e8:	str	x0, [x24, x22, lsl #3]
  4167ec:	cbz	x0, 416bf4 <_obstack_memory_used@@Base+0x3fa4>
  4167f0:	ldrsb	w1, [x0, #104]
  4167f4:	tbnz	w1, #31, 416de4 <_obstack_memory_used@@Base+0x4194>
  4167f8:	ldr	x1, [sp, #112]
  4167fc:	str	x0, [x1, x22, lsl #3]
  416800:	ldr	x1, [sp, #120]
  416804:	ldr	x0, [x24, x22, lsl #3]
  416808:	str	x0, [x1, x22, lsl #3]
  41680c:	add	x5, sp, #0xe0
  416810:	mov	x7, x20
  416814:	mov	x0, x5
  416818:	add	x2, x20, x22, lsl #5
  41681c:	ldr	x1, [x0]
  416820:	add	x2, x2, #0x8
  416824:	ldr	x3, [x2, #6136]
  416828:	orr	x1, x1, x3
  41682c:	str	x1, [x0], #8
  416830:	cmp	x25, x0
  416834:	b.ne	41681c <_obstack_memory_used@@Base+0x3bcc>  // b.any
  416838:	add	x22, x22, #0x1
  41683c:	add	x26, x26, #0x18
  416840:	cmp	x22, x19
  416844:	b.ne	41677c <_obstack_memory_used@@Base+0x3b2c>  // b.any
  416848:	ldr	w0, [sp, #128]
  41684c:	stp	x5, x7, [sp, #144]
  416850:	cbnz	w0, 416f10 <_obstack_memory_used@@Base+0x42c0>
  416854:	mov	x1, #0x100                 	// #256
  416858:	mov	x0, #0x8                   	// #8
  41685c:	bl	402910 <calloc@plt>
  416860:	mov	x10, x0
  416864:	ldr	x0, [sp, #136]
  416868:	str	x10, [x0, #88]
  41686c:	cbz	x10, 416c00 <_obstack_memory_used@@Base+0x3fb0>
  416870:	ldp	x5, x7, [sp, #144]
  416874:	add	x6, x23, #0xb8
  416878:	ldr	x8, [sp, #104]
  41687c:	mov	x9, #0x0                   	// #0
  416880:	ldr	x0, [x5]
  416884:	add	x3, x10, x9, lsl #9
  416888:	mov	x1, #0x1                   	// #1
  41688c:	cbz	x0, 4168a4 <_obstack_memory_used@@Base+0x3c54>
  416890:	tbnz	w0, #0, 416e70 <_obstack_memory_used@@Base+0x4220>
  416894:	lsl	x1, x1, #1
  416898:	lsr	x0, x0, #1
  41689c:	add	x3, x3, #0x8
  4168a0:	cbnz	x0, 416890 <_obstack_memory_used@@Base+0x3c40>
  4168a4:	add	x9, x9, #0x1
  4168a8:	add	x5, x5, #0x8
  4168ac:	cmp	x9, #0x4
  4168b0:	add	x8, x8, #0x8
  4168b4:	b.ne	416880 <_obstack_memory_used@@Base+0x3c30>  // b.any
  4168b8:	ldr	x0, [sp, #224]
  4168bc:	tst	w0, #0x400
  4168c0:	b.eq	4168e8 <_obstack_memory_used@@Base+0x3c98>  // b.none
  4168c4:	mov	x0, #0x0                   	// #0
  4168c8:	ldr	x2, [sp, #104]
  4168cc:	lsl	x1, x0, #5
  4168d0:	ldr	x1, [x2, x1]
  4168d4:	tst	w1, #0x400
  4168d8:	b.ne	416ef4 <_obstack_memory_used@@Base+0x42a4>  // b.any
  4168dc:	add	x0, x0, #0x1
  4168e0:	cmp	x0, x19
  4168e4:	b.ne	4168c8 <_obstack_memory_used@@Base+0x3c78>  // b.any
  4168e8:	mov	x0, x24
  4168ec:	str	x7, [sp, #104]
  4168f0:	bl	402ae0 <free@plt>
  4168f4:	add	x26, x20, x21
  4168f8:	ldr	x0, [sp, #208]
  4168fc:	bl	402ae0 <free@plt>
  416900:	ldr	x7, [sp, #104]
  416904:	nop
  416908:	add	x7, x7, #0x18
  41690c:	ldur	x0, [x7, #-8]
  416910:	stp	x7, x7, [sp, #104]
  416914:	bl	402ae0 <free@plt>
  416918:	ldr	x7, [sp, #104]
  41691c:	cmp	x26, x7
  416920:	b.ne	416908 <_obstack_memory_used@@Base+0x3cb8>  // b.any
  416924:	mov	x0, x20
  416928:	bl	402ae0 <free@plt>
  41692c:	mov	w0, #0x1                   	// #1
  416930:	ldp	x19, x20, [sp, #16]
  416934:	ldp	x21, x22, [sp, #32]
  416938:	ldp	x25, x26, [sp, #64]
  41693c:	ldp	x27, x28, [sp, #80]
  416940:	b	416c50 <_obstack_memory_used@@Base+0x4000>
  416944:	ldrb	w2, [x2, x1]
  416948:	add	x27, sp, #0xa0
  41694c:	mov	x1, #0x1                   	// #1
  416950:	ubfx	x3, x2, #6, #2
  416954:	lsl	x2, x1, x2
  416958:	ldr	x1, [x27, x3, lsl #3]
  41695c:	orr	x1, x1, x2
  416960:	str	x1, [x27, x3, lsl #3]
  416964:	cbz	w0, 416a20 <_obstack_memory_used@@Base+0x3dd0>
  416968:	tbnz	w0, #5, 416bd4 <_obstack_memory_used@@Base+0x3f84>
  41696c:	tbnz	w0, #7, 416bc8 <_obstack_memory_used@@Base+0x3f78>
  416970:	tbz	w0, #2, 4169c8 <_obstack_memory_used@@Base+0x3d78>
  416974:	cmp	w28, #0x1
  416978:	b.eq	416d6c <_obstack_memory_used@@Base+0x411c>  // b.none
  41697c:	ldr	w1, [x23, #180]
  416980:	cmp	w1, #0x1
  416984:	b.le	416d34 <_obstack_memory_used@@Base+0x40e4>
  416988:	ldr	x12, [x23, #120]
  41698c:	mov	x5, x27
  416990:	add	x3, x23, #0xb8
  416994:	mov	x4, #0x0                   	// #0
  416998:	mov	x2, #0x0                   	// #0
  41699c:	ldr	x1, [x12, x2, lsl #3]
  4169a0:	ldr	x11, [x3, x2, lsl #3]
  4169a4:	add	x2, x2, #0x1
  4169a8:	ldr	x10, [x5]
  4169ac:	orn	x1, x11, x1
  4169b0:	cmp	x2, #0x4
  4169b4:	and	x1, x1, x10
  4169b8:	str	x1, [x5], #8
  4169bc:	orr	x4, x4, x1
  4169c0:	b.ne	41699c <_obstack_memory_used@@Base+0x3d4c>  // b.any
  4169c4:	cbz	x4, 4166f8 <_obstack_memory_used@@Base+0x3aa8>
  4169c8:	tbz	w0, #3, 416a20 <_obstack_memory_used@@Base+0x3dd0>
  4169cc:	cmp	w28, #0x1
  4169d0:	b.eq	416dd8 <_obstack_memory_used@@Base+0x4188>  // b.none
  4169d4:	ldr	w0, [x23, #180]
  4169d8:	cmp	w0, #0x1
  4169dc:	b.le	416cfc <_obstack_memory_used@@Base+0x40ac>
  4169e0:	ldr	x11, [x23, #120]
  4169e4:	mov	x4, x27
  4169e8:	add	x3, x23, #0xb8
  4169ec:	mov	x2, #0x0                   	// #0
  4169f0:	mov	x1, #0x0                   	// #0
  4169f4:	ldr	x10, [x11, x1, lsl #3]
  4169f8:	ldr	x0, [x3, x1, lsl #3]
  4169fc:	add	x1, x1, #0x1
  416a00:	ldr	x5, [x4]
  416a04:	and	x0, x0, x10
  416a08:	cmp	x1, #0x4
  416a0c:	bic	x0, x5, x0
  416a10:	str	x0, [x4], #8
  416a14:	orr	x2, x2, x0
  416a18:	b.ne	4169f4 <_obstack_memory_used@@Base+0x3da4>  // b.any
  416a1c:	cbz	x2, 4166f8 <_obstack_memory_used@@Base+0x3aa8>
  416a20:	mov	x0, #0x17f8                	// #6136
  416a24:	cmp	x19, #0x0
  416a28:	add	x26, x20, x0
  416a2c:	mov	x22, #0x0                   	// #0
  416a30:	b.gt	416a64 <_obstack_memory_used@@Base+0x3e14>
  416a34:	b	416b70 <_obstack_memory_used@@Base+0x3f20>
  416a38:	ldrb	w2, [x21]
  416a3c:	ldr	x3, [sp, #104]
  416a40:	ubfx	x1, x2, #6, #2
  416a44:	add	x1, x3, x1, lsl #3
  416a48:	ldr	x0, [x1, x0]
  416a4c:	lsr	x0, x0, x2
  416a50:	tbnz	w0, #0, 416a70 <_obstack_memory_used@@Base+0x3e20>
  416a54:	add	x22, x22, #0x1
  416a58:	add	x26, x26, #0x20
  416a5c:	cmp	x22, x19
  416a60:	b.ge	416b70 <_obstack_memory_used@@Base+0x3f20>  // b.tcont
  416a64:	cmp	w28, #0x1
  416a68:	lsl	x0, x22, #5
  416a6c:	b.eq	416a38 <_obstack_memory_used@@Base+0x3de8>  // b.none
  416a70:	mov	x1, #0x1                   	// #1
  416a74:	mov	x3, #0x0                   	// #0
  416a78:	lsl	x0, x1, #3
  416a7c:	add	x2, sp, #0xc0
  416a80:	add	x5, x27, x0
  416a84:	add	x2, x2, x0
  416a88:	ldr	x4, [x26, x1, lsl #3]
  416a8c:	add	x1, x1, #0x1
  416a90:	ldur	x0, [x5, #-8]
  416a94:	cmp	x1, #0x5
  416a98:	and	x0, x0, x4
  416a9c:	stur	x0, [x2, #-8]
  416aa0:	orr	x3, x3, x0
  416aa4:	b.ne	416a78 <_obstack_memory_used@@Base+0x3e28>  // b.any
  416aa8:	cbz	x3, 416a54 <_obstack_memory_used@@Base+0x3e04>
  416aac:	mov	x2, x27
  416ab0:	mov	x0, #0x1                   	// #1
  416ab4:	mov	x10, #0x0                   	// #0
  416ab8:	mov	x5, #0x0                   	// #0
  416abc:	add	x1, sp, #0xe0
  416ac0:	add	x11, x1, x0, lsl #3
  416ac4:	ldr	x4, [x2]
  416ac8:	ldr	x1, [x26, x0, lsl #3]
  416acc:	add	x0, x0, #0x1
  416ad0:	cmp	x0, #0x5
  416ad4:	bic	x3, x1, x4
  416ad8:	bic	x1, x4, x1
  416adc:	stur	x3, [x11, #-8]
  416ae0:	orr	x5, x5, x3
  416ae4:	str	x1, [x2], #8
  416ae8:	orr	x10, x10, x1
  416aec:	b.ne	416abc <_obstack_memory_used@@Base+0x3e6c>  // b.any
  416af0:	add	x1, x22, x22, lsl #1
  416af4:	add	x1, x20, x1, lsl #3
  416af8:	cbz	x5, 416b48 <_obstack_memory_used@@Base+0x3ef8>
  416afc:	ldr	x0, [sp, #104]
  416b00:	str	x1, [sp, #112]
  416b04:	ldp	x4, x5, [sp, #224]
  416b08:	str	x10, [sp, #128]
  416b0c:	add	x11, x0, x19, lsl #5
  416b10:	add	x0, x19, x19, lsl #1
  416b14:	ldp	x2, x3, [sp, #240]
  416b18:	add	x0, x20, x0, lsl #3
  416b1c:	stp	x4, x5, [x11]
  416b20:	stp	x2, x3, [x11, #16]
  416b24:	ldp	x2, x3, [sp, #192]
  416b28:	stp	x2, x3, [x26, #8]
  416b2c:	ldp	x2, x3, [sp, #208]
  416b30:	stp	x2, x3, [x26, #24]
  416b34:	bl	4158e8 <_obstack_memory_used@@Base+0x2c98>
  416b38:	cbnz	w0, 416c68 <_obstack_memory_used@@Base+0x4018>
  416b3c:	ldr	x1, [sp, #112]
  416b40:	add	x19, x19, #0x1
  416b44:	ldr	x10, [sp, #128]
  416b48:	mov	x0, x1
  416b4c:	ldr	x2, [x24, #16]
  416b50:	str	x10, [sp, #112]
  416b54:	ldr	x1, [sp, #120]
  416b58:	ldr	x1, [x2, x1]
  416b5c:	bl	413350 <_obstack_memory_used@@Base+0x700>
  416b60:	tst	w0, #0xff
  416b64:	b.eq	416c68 <_obstack_memory_used@@Base+0x4018>  // b.none
  416b68:	ldr	x10, [sp, #112]
  416b6c:	cbnz	x10, 416a54 <_obstack_memory_used@@Base+0x3e04>
  416b70:	cmp	x19, x22
  416b74:	b.ne	4166f8 <_obstack_memory_used@@Base+0x3aa8>  // b.any
  416b78:	ldr	x0, [sp, #104]
  416b7c:	add	x2, x19, x19, lsl #1
  416b80:	ldr	x5, [x24, #16]
  416b84:	add	x26, x20, x2, lsl #3
  416b88:	add	x3, x0, x19, lsl #5
  416b8c:	mov	x4, #0x1                   	// #1
  416b90:	ldp	x0, x1, [x27]
  416b94:	stp	x0, x1, [x3]
  416b98:	ldp	x0, x1, [x27, #16]
  416b9c:	stp	x0, x1, [x3, #16]
  416ba0:	ldr	x1, [sp, #120]
  416ba4:	mov	x0, #0x8                   	// #8
  416ba8:	ldr	x22, [x5, x1]
  416bac:	str	x4, [x20, x2, lsl #3]
  416bb0:	str	x4, [x26, #8]
  416bb4:	bl	402800 <malloc@plt>
  416bb8:	str	x0, [x26, #16]
  416bbc:	cbz	x0, 416c5c <_obstack_memory_used@@Base+0x400c>
  416bc0:	add	x19, x19, #0x1
  416bc4:	str	x22, [x0]
  416bc8:	stp	xzr, xzr, [x27]
  416bcc:	stp	xzr, xzr, [x27, #16]
  416bd0:	b	4166f8 <_obstack_memory_used@@Base+0x3aa8>
  416bd4:	ldr	x1, [sp, #160]
  416bd8:	stp	xzr, xzr, [x27]
  416bdc:	stp	xzr, xzr, [x27, #16]
  416be0:	tst	w1, #0x400
  416be4:	b.eq	4166f8 <_obstack_memory_used@@Base+0x3aa8>  // b.none
  416be8:	mov	x1, #0x400                 	// #1024
  416bec:	str	x1, [sp, #160]
  416bf0:	b	41696c <_obstack_memory_used@@Base+0x3d1c>
  416bf4:	ldr	w1, [sp, #160]
  416bf8:	cbz	w1, 4167f0 <_obstack_memory_used@@Base+0x3ba0>
  416bfc:	nop
  416c00:	mov	x0, x24
  416c04:	bl	402ae0 <free@plt>
  416c08:	ldr	x25, [sp, #208]
  416c0c:	add	x19, x27, x19
  416c10:	mov	x21, x20
  416c14:	mov	x0, x25
  416c18:	add	x19, x20, x19, lsl #3
  416c1c:	bl	402ae0 <free@plt>
  416c20:	ldr	x0, [x21, #16]
  416c24:	add	x21, x21, #0x18
  416c28:	bl	402ae0 <free@plt>
  416c2c:	cmp	x19, x21
  416c30:	b.ne	416c20 <_obstack_memory_used@@Base+0x3fd0>  // b.any
  416c34:	mov	x0, x20
  416c38:	bl	402ae0 <free@plt>
  416c3c:	ldp	x19, x20, [sp, #16]
  416c40:	mov	w0, #0x0                   	// #0
  416c44:	ldp	x21, x22, [sp, #32]
  416c48:	ldp	x25, x26, [sp, #64]
  416c4c:	ldp	x27, x28, [sp, #80]
  416c50:	ldp	x23, x24, [sp, #48]
  416c54:	ldp	x29, x30, [sp], #256
  416c58:	ret
  416c5c:	stp	xzr, xzr, [x26]
  416c60:	cbz	x19, 416c34 <_obstack_memory_used@@Base+0x3fe4>
  416c64:	nop
  416c68:	add	x22, x20, #0x10
  416c6c:	mov	x21, #0x0                   	// #0
  416c70:	ldr	x0, [x22], #24
  416c74:	add	x21, x21, #0x1
  416c78:	bl	402ae0 <free@plt>
  416c7c:	cmp	x21, x19
  416c80:	b.lt	416c70 <_obstack_memory_used@@Base+0x4020>  // b.tstop
  416c84:	b	416c34 <_obstack_memory_used@@Base+0x3fe4>
  416c88:	ldr	w1, [x23, #180]
  416c8c:	add	x27, sp, #0xa0
  416c90:	cmp	w1, #0x1
  416c94:	b.le	416ce8 <_obstack_memory_used@@Base+0x4098>
  416c98:	ldr	x5, [x23, #120]
  416c9c:	mov	x3, x27
  416ca0:	mov	x1, #0x0                   	// #0
  416ca4:	ldr	x4, [x5, x1]
  416ca8:	add	x1, x1, #0x8
  416cac:	ldr	x2, [x3]
  416cb0:	cmp	x1, #0x20
  416cb4:	orr	x2, x2, x4
  416cb8:	str	x2, [x3], #8
  416cbc:	b.ne	416ca4 <_obstack_memory_used@@Base+0x4054>  // b.any
  416cc0:	ldr	x1, [x23, #216]
  416cc4:	tbnz	w1, #6, 416cd4 <_obstack_memory_used@@Base+0x4084>
  416cc8:	ldr	x2, [sp, #160]
  416ccc:	and	x2, x2, #0xfffffffffffffbff
  416cd0:	str	x2, [sp, #160]
  416cd4:	tbz	w1, #7, 416964 <_obstack_memory_used@@Base+0x3d14>
  416cd8:	ldr	x1, [sp, #160]
  416cdc:	and	x1, x1, #0xfffffffffffffffe
  416ce0:	str	x1, [sp, #160]
  416ce4:	b	416964 <_obstack_memory_used@@Base+0x3d14>
  416ce8:	mov	x2, #0xffffffffffffffff    	// #-1
  416cec:	mov	x3, #0xffffffffffffffff    	// #-1
  416cf0:	stp	x2, x3, [sp, #160]
  416cf4:	stp	x2, x3, [sp, #176]
  416cf8:	b	416cc0 <_obstack_memory_used@@Base+0x4070>
  416cfc:	mov	x4, x27
  416d00:	add	x3, x23, #0xb8
  416d04:	mov	x2, #0x0                   	// #0
  416d08:	mov	x1, #0x0                   	// #0
  416d0c:	ldr	x0, [x3, x1, lsl #3]
  416d10:	add	x1, x1, #0x1
  416d14:	ldr	x5, [x4]
  416d18:	cmp	x1, #0x4
  416d1c:	bic	x0, x5, x0
  416d20:	str	x0, [x4], #8
  416d24:	orr	x2, x2, x0
  416d28:	b.ne	416d0c <_obstack_memory_used@@Base+0x40bc>  // b.any
  416d2c:	cbz	x2, 4166f8 <_obstack_memory_used@@Base+0x3aa8>
  416d30:	b	416a20 <_obstack_memory_used@@Base+0x3dd0>
  416d34:	mov	x5, x27
  416d38:	add	x3, x23, #0xb8
  416d3c:	mov	x4, #0x0                   	// #0
  416d40:	mov	x2, #0x0                   	// #0
  416d44:	ldr	x1, [x3, x2, lsl #3]
  416d48:	add	x2, x2, #0x1
  416d4c:	ldr	x10, [x5]
  416d50:	cmp	x2, #0x4
  416d54:	and	x1, x1, x10
  416d58:	str	x1, [x5], #8
  416d5c:	orr	x4, x4, x1
  416d60:	b.ne	416d44 <_obstack_memory_used@@Base+0x40f4>  // b.any
  416d64:	cbnz	x4, 4169c8 <_obstack_memory_used@@Base+0x3d78>
  416d68:	b	4166f8 <_obstack_memory_used@@Base+0x3aa8>
  416d6c:	ldrb	w1, [x21, #10]
  416d70:	tbz	w1, #6, 416bc8 <_obstack_memory_used@@Base+0x3f78>
  416d74:	ldr	w1, [x23, #180]
  416d78:	cmp	w1, #0x1
  416d7c:	b.gt	416988 <_obstack_memory_used@@Base+0x3d38>
  416d80:	b	416d34 <_obstack_memory_used@@Base+0x40e4>
  416d84:	ldr	x1, [x23, #216]
  416d88:	mov	x2, #0xffffffffffffffff    	// #-1
  416d8c:	mov	x3, #0xffffffffffffffff    	// #-1
  416d90:	stp	x2, x3, [sp, #160]
  416d94:	add	x27, sp, #0xa0
  416d98:	tbnz	w1, #6, 416cd4 <_obstack_memory_used@@Base+0x4084>
  416d9c:	mov	x2, #0xfffffffffffffbff    	// #-1025
  416da0:	str	x2, [sp, #160]
  416da4:	b	416cd4 <_obstack_memory_used@@Base+0x4084>
  416da8:	add	x27, sp, #0xa0
  416dac:	mov	x3, #0x0                   	// #0
  416db0:	ldr	x5, [x2, x1]
  416db4:	mov	x2, x27
  416db8:	ldr	x4, [x5, x3]
  416dbc:	add	x3, x3, #0x8
  416dc0:	ldr	x1, [x2]
  416dc4:	cmp	x3, #0x20
  416dc8:	orr	x1, x1, x4
  416dcc:	str	x1, [x2], #8
  416dd0:	b.ne	416db8 <_obstack_memory_used@@Base+0x4168>  // b.any
  416dd4:	b	416964 <_obstack_memory_used@@Base+0x3d14>
  416dd8:	ldrb	w0, [x21, #10]
  416ddc:	tbz	w0, #6, 4169d4 <_obstack_memory_used@@Base+0x3d84>
  416de0:	b	416bc8 <_obstack_memory_used@@Base+0x3f78>
  416de4:	mov	x1, x23
  416de8:	add	x2, sp, #0xc0
  416dec:	add	x0, sp, #0xa0
  416df0:	mov	w3, #0x1                   	// #1
  416df4:	bl	415ae8 <_obstack_memory_used@@Base+0x2e98>
  416df8:	ldr	x1, [sp, #112]
  416dfc:	str	x0, [x1, x22, lsl #3]
  416e00:	cbz	x0, 416ee8 <_obstack_memory_used@@Base+0x4298>
  416e04:	ldr	x1, [x24, x22, lsl #3]
  416e08:	cmp	x0, x1
  416e0c:	b.eq	416e24 <_obstack_memory_used@@Base+0x41d4>  // b.none
  416e10:	ldr	w0, [x23, #180]
  416e14:	cmp	w0, #0x2
  416e18:	ldr	w0, [sp, #128]
  416e1c:	csinc	w0, w0, wzr, lt  // lt = tstop
  416e20:	str	w0, [sp, #128]
  416e24:	mov	x1, x23
  416e28:	add	x2, sp, #0xc0
  416e2c:	add	x0, sp, #0xa0
  416e30:	mov	w3, #0x2                   	// #2
  416e34:	bl	415ae8 <_obstack_memory_used@@Base+0x2e98>
  416e38:	ldr	x1, [sp, #120]
  416e3c:	str	x0, [x1, x22, lsl #3]
  416e40:	cbnz	x0, 41680c <_obstack_memory_used@@Base+0x3bbc>
  416e44:	ldr	w0, [sp, #160]
  416e48:	cbz	w0, 41680c <_obstack_memory_used@@Base+0x3bbc>
  416e4c:	b	416c00 <_obstack_memory_used@@Base+0x3fb0>
  416e50:	ldp	x19, x20, [sp, #16]
  416e54:	ldp	x21, x22, [sp, #32]
  416e58:	ldp	x25, x26, [sp, #64]
  416e5c:	ldp	x27, x28, [sp, #80]
  416e60:	mov	w0, #0x0                   	// #0
  416e64:	ldp	x23, x24, [sp, #48]
  416e68:	ldp	x29, x30, [sp], #256
  416e6c:	ret
  416e70:	ldr	x2, [x8]
  416e74:	tst	x1, x2
  416e78:	mov	x2, #0x0                   	// #0
  416e7c:	b.ne	416e98 <_obstack_memory_used@@Base+0x4248>  // b.any
  416e80:	add	x2, x2, #0x1
  416e84:	lsl	x4, x2, #5
  416e88:	ldr	x4, [x8, x4]
  416e8c:	tst	x1, x4
  416e90:	b.eq	416e80 <_obstack_memory_used@@Base+0x4230>  // b.none
  416e94:	lsl	x2, x2, #3
  416e98:	ldr	x4, [x6, x9, lsl #3]
  416e9c:	tst	x1, x4
  416ea0:	b.eq	416eb4 <_obstack_memory_used@@Base+0x4264>  // b.none
  416ea4:	ldr	x4, [sp, #112]
  416ea8:	ldr	x2, [x4, x2]
  416eac:	str	x2, [x3]
  416eb0:	b	416894 <_obstack_memory_used@@Base+0x3c44>
  416eb4:	ldr	x2, [x24, x2]
  416eb8:	str	x2, [x3]
  416ebc:	b	416894 <_obstack_memory_used@@Base+0x3c44>
  416ec0:	bl	402ae0 <free@plt>
  416ec4:	mov	x1, #0x100                 	// #256
  416ec8:	mov	x0, #0x8                   	// #8
  416ecc:	bl	402910 <calloc@plt>
  416ed0:	cmp	x0, #0x0
  416ed4:	ldr	x1, [sp, #136]
  416ed8:	ldp	x19, x20, [sp, #16]
  416edc:	str	x0, [x1, #88]
  416ee0:	cset	w0, ne  // ne = any
  416ee4:	b	416c50 <_obstack_memory_used@@Base+0x4000>
  416ee8:	ldr	w1, [sp, #160]
  416eec:	cbz	w1, 416e04 <_obstack_memory_used@@Base+0x41b4>
  416ef0:	b	416c00 <_obstack_memory_used@@Base+0x3fb0>
  416ef4:	ldr	x1, [sp, #120]
  416ef8:	ldr	x0, [x1, x0, lsl #3]
  416efc:	str	x0, [x10, #80]
  416f00:	ldr	w1, [sp, #128]
  416f04:	cbz	w1, 4168e8 <_obstack_memory_used@@Base+0x3c98>
  416f08:	str	x0, [x10, #2128]
  416f0c:	b	4168e8 <_obstack_memory_used@@Base+0x3c98>
  416f10:	mov	x1, #0x200                 	// #512
  416f14:	mov	x0, #0x8                   	// #8
  416f18:	bl	402910 <calloc@plt>
  416f1c:	mov	x10, x0
  416f20:	ldr	x0, [sp, #136]
  416f24:	str	x10, [x0, #96]
  416f28:	cbz	x10, 416c00 <_obstack_memory_used@@Base+0x3fb0>
  416f2c:	ldp	x5, x7, [sp, #144]
  416f30:	add	x11, x10, #0x800
  416f34:	ldr	x6, [sp, #104]
  416f38:	mov	w9, #0x0                   	// #0
  416f3c:	ldr	x0, [x5]
  416f40:	mov	x3, x11
  416f44:	mov	x2, #0x1                   	// #1
  416f48:	cbz	x0, 416f60 <_obstack_memory_used@@Base+0x4310>
  416f4c:	tbnz	w0, #0, 416f7c <_obstack_memory_used@@Base+0x432c>
  416f50:	lsl	x2, x2, #1
  416f54:	lsr	x0, x0, #1
  416f58:	add	x3, x3, #0x8
  416f5c:	cbnz	x0, 416f4c <_obstack_memory_used@@Base+0x42fc>
  416f60:	add	w9, w9, #0x40
  416f64:	add	x5, x5, #0x8
  416f68:	cmp	w9, #0x100
  416f6c:	add	x11, x11, #0x200
  416f70:	add	x6, x6, #0x8
  416f74:	b.ne	416f3c <_obstack_memory_used@@Base+0x42ec>  // b.any
  416f78:	b	4168b8 <_obstack_memory_used@@Base+0x3c68>
  416f7c:	ldr	x1, [x6]
  416f80:	tst	x2, x1
  416f84:	b.ne	416fc0 <_obstack_memory_used@@Base+0x4370>  // b.any
  416f88:	mov	x1, #0x0                   	// #0
  416f8c:	add	x1, x1, #0x1
  416f90:	mov	x8, x1
  416f94:	lsl	x4, x1, #5
  416f98:	ldr	x4, [x6, x4]
  416f9c:	tst	x2, x4
  416fa0:	b.eq	416f8c <_obstack_memory_used@@Base+0x433c>  // b.none
  416fa4:	sub	x1, x3, #0x8, lsl #12
  416fa8:	ldr	x4, [x24, x8, lsl #3]
  416fac:	str	x4, [x1, #30720]
  416fb0:	ldr	x1, [sp, #112]
  416fb4:	ldr	x1, [x1, x8, lsl #3]
  416fb8:	str	x1, [x3]
  416fbc:	b	416f50 <_obstack_memory_used@@Base+0x4300>
  416fc0:	mov	x8, #0x0                   	// #0
  416fc4:	b	416fa4 <_obstack_memory_used@@Base+0x4354>
  416fc8:	mov	x0, x20
  416fcc:	bl	402ae0 <free@plt>
  416fd0:	cbnz	x19, 416e50 <_obstack_memory_used@@Base+0x4200>
  416fd4:	ldp	x21, x22, [sp, #32]
  416fd8:	ldp	x25, x26, [sp, #64]
  416fdc:	ldp	x27, x28, [sp, #80]
  416fe0:	b	416ec4 <_obstack_memory_used@@Base+0x4274>
  416fe4:	nop
  416fe8:	stp	x29, x30, [sp, #-48]!
  416fec:	mov	x29, sp
  416ff0:	stp	x19, x20, [sp, #16]
  416ff4:	mov	x20, x0
  416ff8:	ldr	x0, [x0]
  416ffc:	cmp	x0, #0x0
  417000:	b.le	417048 <_obstack_memory_used@@Base+0x43f8>
  417004:	mov	x19, #0x0                   	// #0
  417008:	str	x21, [sp, #32]
  41700c:	mov	x21, #0x0                   	// #0
  417010:	ldr	x1, [x20, #16]
  417014:	add	x21, x21, #0x1
  417018:	add	x1, x1, x19
  41701c:	ldr	x0, [x1, #40]
  417020:	bl	402ae0 <free@plt>
  417024:	ldr	x1, [x20, #16]
  417028:	add	x1, x1, x19
  41702c:	add	x19, x19, #0x30
  417030:	ldr	x0, [x1, #16]
  417034:	bl	402ae0 <free@plt>
  417038:	ldr	x0, [x20]
  41703c:	cmp	x21, x0
  417040:	b.lt	417010 <_obstack_memory_used@@Base+0x43c0>  // b.tstop
  417044:	ldr	x21, [sp, #32]
  417048:	ldr	x0, [x20, #16]
  41704c:	ldp	x19, x20, [sp, #16]
  417050:	ldp	x29, x30, [sp], #48
  417054:	b	402ae0 <free@plt>
  417058:	stp	x29, x30, [sp, #-32]!
  41705c:	mov	x29, sp
  417060:	stp	x19, x20, [sp, #16]
  417064:	mov	x20, x0
  417068:	tbnz	x1, #63, 4170fc <_obstack_memory_used@@Base+0x44ac>
  41706c:	ldr	x0, [x0, #88]
  417070:	cmp	x0, x1
  417074:	b.eq	417128 <_obstack_memory_used@@Base+0x44d8>  // b.none
  417078:	ldr	w0, [x20, #144]
  41707c:	cmp	w0, #0x1
  417080:	b.le	4170c4 <_obstack_memory_used@@Base+0x4474>
  417084:	ldr	x0, [x20, #16]
  417088:	b	417094 <_obstack_memory_used@@Base+0x4444>
  41708c:	cmn	x1, #0x1
  417090:	b.eq	4170fc <_obstack_memory_used@@Base+0x44ac>  // b.none
  417094:	ldr	w19, [x0, x1, lsl #2]
  417098:	sub	x1, x1, #0x1
  41709c:	cmn	w19, #0x1
  4170a0:	b.eq	41708c <_obstack_memory_used@@Base+0x443c>  // b.none
  4170a4:	ldrb	w0, [x20, #142]
  4170a8:	cbnz	w0, 41713c <_obstack_memory_used@@Base+0x44ec>
  4170ac:	cmp	w19, #0xa
  4170b0:	mov	w0, #0x0                   	// #0
  4170b4:	b.eq	41710c <_obstack_memory_used@@Base+0x44bc>  // b.none
  4170b8:	ldp	x19, x20, [sp, #16]
  4170bc:	ldp	x29, x30, [sp], #32
  4170c0:	ret
  4170c4:	ldr	x2, [x20, #8]
  4170c8:	mov	w0, #0x1                   	// #1
  4170cc:	ldr	x3, [x20, #128]
  4170d0:	ldrb	w2, [x2, x1]
  4170d4:	ubfx	x1, x2, #6, #2
  4170d8:	ldr	x1, [x3, x1, lsl #3]
  4170dc:	lsr	x1, x1, x2
  4170e0:	tbnz	w1, #0, 4170b8 <_obstack_memory_used@@Base+0x4468>
  4170e4:	cmp	w2, #0xa
  4170e8:	b.eq	41710c <_obstack_memory_used@@Base+0x44bc>  // b.none
  4170ec:	mov	w0, #0x0                   	// #0
  4170f0:	ldp	x19, x20, [sp, #16]
  4170f4:	ldp	x29, x30, [sp], #32
  4170f8:	ret
  4170fc:	ldr	w0, [x20, #112]
  417100:	ldp	x19, x20, [sp, #16]
  417104:	ldp	x29, x30, [sp], #32
  417108:	ret
  41710c:	ldrb	w0, [x20, #141]
  417110:	ldp	x19, x20, [sp, #16]
  417114:	cmp	w0, #0x0
  417118:	cset	w0, ne  // ne = any
  41711c:	ldp	x29, x30, [sp], #32
  417120:	lsl	w0, w0, #1
  417124:	ret
  417128:	tst	x2, #0x2
  41712c:	mov	w0, #0x8                   	// #8
  417130:	mov	w1, #0xa                   	// #10
  417134:	csel	w0, w0, w1, ne  // ne = any
  417138:	b	4170b8 <_obstack_memory_used@@Base+0x4468>
  41713c:	mov	w0, w19
  417140:	bl	402bf0 <iswalnum@plt>
  417144:	cmp	w19, #0x5f
  417148:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  41714c:	mov	w0, #0x1                   	// #1
  417150:	b.ne	4170b8 <_obstack_memory_used@@Base+0x4468>  // b.any
  417154:	b	4170ac <_obstack_memory_used@@Base+0x445c>
  417158:	mov	x4, x1
  41715c:	mov	x5, x0
  417160:	ldr	x0, [x0, #8]
  417164:	mov	x1, x2
  417168:	ldrb	w3, [x4, #8]
  41716c:	ldrb	w2, [x0, x2]
  417170:	cmp	w3, #0x5
  417174:	b.eq	417218 <_obstack_memory_used@@Base+0x45c8>  // b.none
  417178:	b.hi	417208 <_obstack_memory_used@@Base+0x45b8>  // b.pmore
  41717c:	cmp	w3, #0x1
  417180:	b.eq	417250 <_obstack_memory_used@@Base+0x4600>  // b.none
  417184:	cmp	w3, #0x3
  417188:	b.ne	417278 <_obstack_memory_used@@Base+0x4628>  // b.any
  41718c:	ldr	x0, [x4]
  417190:	ubfx	x3, x2, #6, #2
  417194:	ldr	x0, [x0, x3, lsl #3]
  417198:	lsr	x2, x0, x2
  41719c:	and	w0, w2, #0x1
  4171a0:	tbz	w2, #0, 41724c <_obstack_memory_used@@Base+0x45fc>
  4171a4:	stp	x29, x30, [sp, #-32]!
  4171a8:	mov	w0, #0x1                   	// #1
  4171ac:	mov	x29, sp
  4171b0:	str	x19, [sp, #16]
  4171b4:	ldr	w19, [x4, #8]
  4171b8:	tst	w19, #0x3ff00
  4171bc:	b.eq	4171fc <_obstack_memory_used@@Base+0x45ac>  // b.none
  4171c0:	ldr	w2, [x5, #160]
  4171c4:	mov	x0, x5
  4171c8:	bl	417058 <_obstack_memory_used@@Base+0x4408>
  4171cc:	mov	w1, w0
  4171d0:	ubfx	x2, x19, #8, #10
  4171d4:	tbz	w19, #10, 41723c <_obstack_memory_used@@Base+0x45ec>
  4171d8:	mov	w0, #0x0                   	// #0
  4171dc:	tbz	w1, #0, 4171fc <_obstack_memory_used@@Base+0x45ac>
  4171e0:	tbnz	w2, #3, 4171fc <_obstack_memory_used@@Base+0x45ac>
  4171e4:	tbz	w2, #5, 4171f0 <_obstack_memory_used@@Base+0x45a0>
  4171e8:	mov	w0, #0x0                   	// #0
  4171ec:	tbz	w1, #1, 4171fc <_obstack_memory_used@@Base+0x45ac>
  4171f0:	ubfx	x0, x1, #3, #1
  4171f4:	tst	x2, #0x80
  4171f8:	csinc	w0, w0, wzr, ne  // ne = any
  4171fc:	ldr	x19, [sp, #16]
  417200:	ldp	x29, x30, [sp], #32
  417204:	ret
  417208:	cmp	w3, #0x7
  41720c:	mov	w0, #0x0                   	// #0
  417210:	b.ne	417238 <_obstack_memory_used@@Base+0x45e8>  // b.any
  417214:	tbnz	w2, #7, 417234 <_obstack_memory_used@@Base+0x45e4>
  417218:	cmp	w2, #0xa
  41721c:	b.eq	417264 <_obstack_memory_used@@Base+0x4614>  // b.none
  417220:	cbnz	w2, 4171a4 <_obstack_memory_used@@Base+0x4554>
  417224:	ldr	x2, [x5, #152]
  417228:	mov	w0, #0x0                   	// #0
  41722c:	ldr	x2, [x2, #216]
  417230:	tbz	w2, #7, 4171a4 <_obstack_memory_used@@Base+0x4554>
  417234:	ret
  417238:	ret
  41723c:	tbz	w2, #3, 4171e4 <_obstack_memory_used@@Base+0x4594>
  417240:	tbz	w1, #0, 4171e4 <_obstack_memory_used@@Base+0x4594>
  417244:	mov	w0, #0x0                   	// #0
  417248:	b	4171fc <_obstack_memory_used@@Base+0x45ac>
  41724c:	ret
  417250:	ldrb	w3, [x4]
  417254:	mov	w0, #0x0                   	// #0
  417258:	cmp	w3, w2
  41725c:	b.eq	4171a4 <_obstack_memory_used@@Base+0x4554>  // b.none
  417260:	ret
  417264:	ldr	x2, [x5, #152]
  417268:	mov	w0, #0x0                   	// #0
  41726c:	ldr	x2, [x2, #216]
  417270:	tbnz	w2, #6, 4171a4 <_obstack_memory_used@@Base+0x4554>
  417274:	ret
  417278:	mov	w0, #0x0                   	// #0
  41727c:	ret
  417280:	stp	x29, x30, [sp, #-128]!
  417284:	mov	x29, sp
  417288:	stp	x19, x20, [sp, #16]
  41728c:	mov	x19, x0
  417290:	ldr	x20, [x0, #40]
  417294:	stp	x21, x22, [sp, #32]
  417298:	mov	x21, x1
  41729c:	stp	x23, x24, [sp, #48]
  4172a0:	cmp	x20, x1
  4172a4:	mov	w24, w2
  4172a8:	b.le	41741c <_obstack_memory_used@@Base+0x47cc>
  4172ac:	ldr	w0, [x0, #144]
  4172b0:	cmp	w0, #0x1
  4172b4:	b.le	4172bc <_obstack_memory_used@@Base+0x466c>
  4172b8:	str	xzr, [x19, #32]
  4172bc:	ldrb	w0, [x19, #139]
  4172c0:	tst	x24, #0x1
  4172c4:	ldr	x3, [x19, #80]
  4172c8:	mov	w1, #0x4                   	// #4
  4172cc:	ldr	x2, [x19, #96]
  4172d0:	mov	w4, #0x6                   	// #6
  4172d4:	csel	w1, w1, w4, ne  // ne = any
  4172d8:	stp	xzr, xzr, [x19, #40]
  4172dc:	mov	x20, x21
  4172e0:	str	xzr, [x19, #56]
  4172e4:	str	x3, [x19, #88]
  4172e8:	str	x2, [x19, #104]
  4172ec:	str	w1, [x19, #112]
  4172f0:	strb	wzr, [x19, #140]
  4172f4:	cbz	w0, 4173b0 <_obstack_memory_used@@Base+0x4760>
  4172f8:	cbz	x20, 4173bc <_obstack_memory_used@@Base+0x476c>
  4172fc:	ldp	x23, x0, [x19, #48]
  417300:	ldrb	w1, [x19, #140]
  417304:	cmp	x0, x20
  417308:	b.le	417424 <_obstack_memory_used@@Base+0x47d4>
  41730c:	cbnz	w1, 417508 <_obstack_memory_used@@Base+0x48b8>
  417310:	mov	w2, w24
  417314:	sub	x1, x20, #0x1
  417318:	mov	x0, x19
  41731c:	bl	417058 <_obstack_memory_used@@Base+0x4408>
  417320:	str	w0, [x19, #112]
  417324:	sub	x2, x23, x20
  417328:	ldr	w0, [x19, #144]
  41732c:	cmp	w0, #0x1
  417330:	b.gt	4173f0 <_obstack_memory_used@@Base+0x47a0>
  417334:	ldrb	w0, [x19, #139]
  417338:	cbnz	w0, 41754c <_obstack_memory_used@@Base+0x48fc>
  41733c:	ldr	x3, [x19, #56]
  417340:	str	x2, [x19, #48]
  417344:	ldr	x1, [x19, #88]
  417348:	sub	x2, x3, x20
  41734c:	ldr	x3, [x19, #104]
  417350:	str	x2, [x19, #56]
  417354:	ldr	w2, [x19, #144]
  417358:	sub	x1, x1, x20
  41735c:	sub	x3, x3, x20
  417360:	cbnz	w0, 417370 <_obstack_memory_used@@Base+0x4720>
  417364:	ldr	x0, [x19, #8]
  417368:	add	x20, x0, x20
  41736c:	str	x20, [x19, #8]
  417370:	str	x21, [x19, #40]
  417374:	cmp	w2, #0x1
  417378:	str	x1, [x19, #88]
  41737c:	str	x3, [x19, #104]
  417380:	b.le	4173e0 <_obstack_memory_used@@Base+0x4790>
  417384:	ldrb	w0, [x19, #136]
  417388:	cbnz	w0, 41740c <_obstack_memory_used@@Base+0x47bc>
  41738c:	mov	x0, x19
  417390:	bl	413638 <_obstack_memory_used@@Base+0x9e8>
  417394:	mov	w0, #0x0                   	// #0
  417398:	str	xzr, [x19, #72]
  41739c:	ldp	x19, x20, [sp, #16]
  4173a0:	ldp	x21, x22, [sp, #32]
  4173a4:	ldp	x23, x24, [sp, #48]
  4173a8:	ldp	x29, x30, [sp], #128
  4173ac:	ret
  4173b0:	ldr	x0, [x19]
  4173b4:	str	x0, [x19, #8]
  4173b8:	cbnz	x20, 4172fc <_obstack_memory_used@@Base+0x46ac>
  4173bc:	ldr	x1, [x19, #88]
  4173c0:	str	x21, [x19, #40]
  4173c4:	ldr	x3, [x19, #104]
  4173c8:	str	x1, [x19, #88]
  4173cc:	ldr	w2, [x19, #144]
  4173d0:	str	x3, [x19, #104]
  4173d4:	cmp	w2, #0x1
  4173d8:	b.gt	417384 <_obstack_memory_used@@Base+0x4734>
  4173dc:	nop
  4173e0:	ldrb	w0, [x19, #139]
  4173e4:	cbnz	w0, 417718 <_obstack_memory_used@@Base+0x4ac8>
  4173e8:	str	x1, [x19, #48]
  4173ec:	b	417394 <_obstack_memory_used@@Base+0x4744>
  4173f0:	ldr	x0, [x19, #16]
  4173f4:	lsl	x2, x2, #2
  4173f8:	add	x1, x0, x20, lsl #2
  4173fc:	bl	402660 <memmove@plt>
  417400:	ldr	x2, [x19, #48]
  417404:	sub	x2, x2, x20
  417408:	b	417334 <_obstack_memory_used@@Base+0x46e4>
  41740c:	mov	x0, x19
  417410:	bl	413818 <_obstack_memory_used@@Base+0xbc8>
  417414:	cbz	w0, 417394 <_obstack_memory_used@@Base+0x4744>
  417418:	b	41739c <_obstack_memory_used@@Base+0x474c>
  41741c:	sub	x20, x1, x20
  417420:	b	4172f8 <_obstack_memory_used@@Base+0x46a8>
  417424:	cbnz	w1, 4178d8 <_obstack_memory_used@@Base+0x4c88>
  417428:	ldr	w2, [x19, #144]
  41742c:	str	xzr, [x19, #48]
  417430:	cmp	w2, #0x1
  417434:	ldr	x1, [x19, #40]
  417438:	b.le	417774 <_obstack_memory_used@@Base+0x4b24>
  41743c:	ldrb	w3, [x19, #137]
  417440:	cbnz	w3, 417668 <_obstack_memory_used@@Base+0x4a18>
  417444:	add	x22, x1, x0
  417448:	cmp	x21, x22
  41744c:	b.le	4179e8 <_obstack_memory_used@@Base+0x4d98>
  417450:	stp	x27, x28, [sp, #80]
  417454:	add	x27, x19, #0x20
  417458:	stp	x25, x26, [sp, #64]
  41745c:	nop
  417460:	mov	x3, x27
  417464:	ldr	x1, [x19]
  417468:	add	x0, sp, #0x78
  41746c:	ldr	x25, [x19, #80]
  417470:	add	x1, x1, x22
  417474:	ldr	x26, [x19, #32]
  417478:	sub	x25, x25, x22
  41747c:	mov	x2, x25
  417480:	bl	412878 <wcrtomb@plt+0xfb38>
  417484:	sub	x1, x0, #0x1
  417488:	cmn	x1, #0x4
  41748c:	b.hi	417900 <_obstack_memory_used@@Base+0x4cb0>  // b.pmore
  417490:	ldr	w28, [sp, #120]
  417494:	add	x22, x22, x0
  417498:	cmp	x21, x22
  41749c:	b.gt	417460 <_obstack_memory_used@@Base+0x4810>
  4174a0:	sub	x22, x22, x21
  4174a4:	str	x22, [x19, #48]
  4174a8:	cmn	w28, #0x1
  4174ac:	b.eq	417924 <_obstack_memory_used@@Base+0x4cd4>  // b.none
  4174b0:	ldrb	w0, [x19, #142]
  4174b4:	cbnz	w0, 417988 <_obstack_memory_used@@Base+0x4d38>
  4174b8:	cmp	w28, #0xa
  4174bc:	mov	w0, #0x0                   	// #0
  4174c0:	b.ne	4174d4 <_obstack_memory_used@@Base+0x4884>  // b.any
  4174c4:	ldrb	w0, [x19, #141]
  4174c8:	cmp	w0, #0x0
  4174cc:	cset	w0, ne  // ne = any
  4174d0:	lsl	w0, w0, #1
  4174d4:	ldp	x25, x26, [sp, #64]
  4174d8:	ldp	x27, x28, [sp, #80]
  4174dc:	str	w0, [x19, #112]
  4174e0:	cmp	x22, #0x0
  4174e4:	cbnz	x22, 417944 <_obstack_memory_used@@Base+0x4cf4>
  4174e8:	ldrb	w0, [x19, #139]
  4174ec:	ldr	x1, [x19, #88]
  4174f0:	str	x22, [x19, #56]
  4174f4:	ldr	x3, [x19, #104]
  4174f8:	sub	x1, x1, x20
  4174fc:	ldr	w2, [x19, #144]
  417500:	sub	x3, x3, x20
  417504:	b	417360 <_obstack_memory_used@@Base+0x4710>
  417508:	mov	x1, x23
  41750c:	mov	x2, #0x0                   	// #0
  417510:	stp	x25, x26, [sp, #64]
  417514:	ldr	x25, [x19, #24]
  417518:	b	41752c <_obstack_memory_used@@Base+0x48dc>
  41751c:	b.ge	41770c <_obstack_memory_used@@Base+0x4abc>  // b.tcont
  417520:	add	x2, x0, #0x1
  417524:	cmp	x2, x1
  417528:	b.ge	417568 <_obstack_memory_used@@Base+0x4918>  // b.tcont
  41752c:	add	x0, x2, x1
  417530:	add	x0, x0, x0, lsr #63
  417534:	asr	x0, x0, #1
  417538:	ldr	x3, [x25, x0, lsl #3]
  41753c:	cmp	x3, x20
  417540:	b.le	41751c <_obstack_memory_used@@Base+0x48cc>
  417544:	mov	x1, x0
  417548:	b	417524 <_obstack_memory_used@@Base+0x48d4>
  41754c:	ldr	x0, [x19, #8]
  417550:	add	x1, x0, x20
  417554:	bl	402660 <memmove@plt>
  417558:	ldr	x2, [x19, #48]
  41755c:	ldrb	w0, [x19, #139]
  417560:	sub	x2, x2, x20
  417564:	b	41733c <_obstack_memory_used@@Base+0x46ec>
  417568:	cmp	x3, x20
  41756c:	add	x22, x0, #0x1
  417570:	b.ge	41770c <_obstack_memory_used@@Base+0x4abc>  // b.tcont
  417574:	mov	x1, x0
  417578:	mov	w2, w24
  41757c:	mov	x0, x19
  417580:	bl	417058 <_obstack_memory_used@@Base+0x4408>
  417584:	str	w0, [x19, #112]
  417588:	cmp	x20, x22
  41758c:	ccmp	x20, x23, #0x0, eq  // eq = none
  417590:	b.lt	417828 <_obstack_memory_used@@Base+0x4bd8>  // b.tstop
  417594:	ldr	x1, [x19, #80]
  417598:	strb	wzr, [x19, #140]
  41759c:	ldr	x3, [x19, #96]
  4175a0:	sub	x1, x1, x21
  4175a4:	add	x0, x1, x20
  4175a8:	str	x0, [x19, #88]
  4175ac:	sub	x3, x3, x21
  4175b0:	cmp	x22, #0x0
  4175b4:	add	x0, x3, x20
  4175b8:	str	x0, [x19, #104]
  4175bc:	sub	x2, x25, #0x8
  4175c0:	b.gt	4175d0 <_obstack_memory_used@@Base+0x4980>
  4175c4:	b	4175dc <_obstack_memory_used@@Base+0x498c>
  4175c8:	subs	x22, x22, #0x1
  4175cc:	b.eq	4175dc <_obstack_memory_used@@Base+0x498c>  // b.none
  4175d0:	ldr	x0, [x2, x22, lsl #3]
  4175d4:	cmp	x0, x20
  4175d8:	b.eq	4175c8 <_obstack_memory_used@@Base+0x4978>  // b.none
  4175dc:	cmp	x22, x23
  4175e0:	b.ge	4177fc <_obstack_memory_used@@Base+0x4bac>  // b.tcont
  4175e4:	ldr	x2, [x19, #16]
  4175e8:	b	4175f8 <_obstack_memory_used@@Base+0x49a8>
  4175ec:	add	x22, x22, #0x1
  4175f0:	cmp	x22, x23
  4175f4:	b.eq	417800 <_obstack_memory_used@@Base+0x4bb0>  // b.none
  4175f8:	ldr	w0, [x2, x22, lsl #2]
  4175fc:	cmn	w0, #0x1
  417600:	b.eq	4175ec <_obstack_memory_used@@Base+0x499c>  // b.none
  417604:	ldr	x2, [x25, x22, lsl #3]
  417608:	sub	x2, x2, x20
  41760c:	str	x2, [x19, #48]
  417610:	cmp	x2, #0x0
  417614:	cbz	x2, 417654 <_obstack_memory_used@@Base+0x4a04>
  417618:	b.le	417634 <_obstack_memory_used@@Base+0x49e4>
  41761c:	ldr	x0, [x19, #16]
  417620:	mov	w3, #0xffffffff            	// #-1
  417624:	add	x1, x0, x2, lsl #2
  417628:	str	w3, [x0], #4
  41762c:	cmp	x1, x0
  417630:	b.ne	417628 <_obstack_memory_used@@Base+0x49d8>  // b.any
  417634:	ldr	x0, [x19, #8]
  417638:	mov	w1, #0xff                  	// #255
  41763c:	bl	4028d0 <memset@plt>
  417640:	ldr	x1, [x19, #88]
  417644:	ldr	x3, [x19, #104]
  417648:	sub	x1, x1, x20
  41764c:	ldr	x2, [x19, #48]
  417650:	sub	x3, x3, x20
  417654:	ldrb	w0, [x19, #139]
  417658:	ldp	x25, x26, [sp, #64]
  41765c:	str	x2, [x19, #56]
  417660:	ldr	w2, [x19, #144]
  417664:	b	417360 <_obstack_memory_used@@Base+0x4710>
  417668:	ldr	x3, [x19]
  41766c:	sub	x2, x20, w2, sxtw
  417670:	stp	x25, x26, [sp, #64]
  417674:	sub	x22, x20, #0x1
  417678:	add	x25, x3, x1
  41767c:	add	x2, x25, x2
  417680:	add	x22, x25, x22
  417684:	cmp	x3, x2
  417688:	csel	x3, x3, x2, cs  // cs = hs, nlast
  41768c:	cmp	x22, x3
  417690:	b.cs	4176a4 <_obstack_memory_used@@Base+0x4a54>  // b.hs, b.nlast
  417694:	b	4178c4 <_obstack_memory_used@@Base+0x4c74>
  417698:	sub	x22, x22, #0x1
  41769c:	cmp	x22, x3
  4176a0:	b.cc	4178c4 <_obstack_memory_used@@Base+0x4c74>  // b.lo, b.ul, b.last
  4176a4:	ldrb	w2, [x22]
  4176a8:	and	w2, w2, #0xc0
  4176ac:	cmp	w2, #0x80
  4176b0:	b.eq	417698 <_obstack_memory_used@@Base+0x4a48>  // b.none
  4176b4:	ldr	x2, [x19, #88]
  4176b8:	mov	x1, x22
  4176bc:	ldr	x3, [x19, #120]
  4176c0:	add	x2, x25, x2
  4176c4:	sub	x2, x2, x22
  4176c8:	cbnz	x3, 4179b0 <_obstack_memory_used@@Base+0x4d60>
  4176cc:	add	x3, sp, #0x78
  4176d0:	add	x0, sp, #0x6c
  4176d4:	str	xzr, [sp, #120]
  4176d8:	bl	412878 <wcrtomb@plt+0xfb38>
  4176dc:	add	x1, x25, x20
  4176e0:	sub	x22, x1, x22
  4176e4:	cmp	x0, x22
  4176e8:	b.cc	4179f4 <_obstack_memory_used@@Base+0x4da4>  // b.lo, b.ul, b.last
  4176ec:	stp	x27, x28, [sp, #80]
  4176f0:	cmn	x0, #0x3
  4176f4:	b.ls	41780c <_obstack_memory_used@@Base+0x4bbc>  // b.plast
  4176f8:	ldr	x1, [x19, #40]
  4176fc:	ldr	x0, [x19, #56]
  417700:	ldp	x25, x26, [sp, #64]
  417704:	ldp	x27, x28, [sp, #80]
  417708:	b	417444 <_obstack_memory_used@@Base+0x47f4>
  41770c:	mov	x22, x0
  417710:	sub	x0, x0, #0x1
  417714:	b	417574 <_obstack_memory_used@@Base+0x4924>
  417718:	ldrb	w0, [x19, #136]
  41771c:	cbnz	w0, 4178cc <_obstack_memory_used@@Base+0x4c7c>
  417720:	ldr	x2, [x19, #120]
  417724:	cbz	x2, 417394 <_obstack_memory_used@@Base+0x4744>
  417728:	ldr	x4, [x19, #64]
  41772c:	ldr	x0, [x19, #48]
  417730:	cmp	x4, x1
  417734:	csel	x4, x4, x1, le
  417738:	cmp	x4, x0
  41773c:	b.gt	41774c <_obstack_memory_used@@Base+0x4afc>
  417740:	b	4179a4 <_obstack_memory_used@@Base+0x4d54>
  417744:	ldr	x21, [x19, #40]
  417748:	ldr	x2, [x19, #120]
  41774c:	ldp	x1, x3, [x19]
  417750:	add	x1, x1, x0
  417754:	ldrb	w1, [x1, x21]
  417758:	ldrb	w1, [x2, x1]
  41775c:	strb	w1, [x3, x0]
  417760:	add	x0, x0, #0x1
  417764:	cmp	x4, x0
  417768:	b.ne	417744 <_obstack_memory_used@@Base+0x4af4>  // b.any
  41776c:	stp	x4, x4, [x19, #48]
  417770:	b	417394 <_obstack_memory_used@@Base+0x4744>
  417774:	ldr	x22, [x19]
  417778:	ldr	x3, [x19, #120]
  41777c:	add	x22, x22, x20
  417780:	add	x22, x22, x1
  417784:	ldurb	w0, [x22, #-1]
  417788:	str	xzr, [x19, #56]
  41778c:	cbz	x3, 417798 <_obstack_memory_used@@Base+0x4b48>
  417790:	and	x0, x0, #0xff
  417794:	ldrb	w0, [x3, x0]
  417798:	ldr	x4, [x19, #128]
  41779c:	ubfx	x1, x0, #6, #2
  4177a0:	mov	w3, #0x1                   	// #1
  4177a4:	ldr	x1, [x4, x1, lsl #3]
  4177a8:	lsr	x1, x1, x0
  4177ac:	tbnz	w1, #0, 4177d0 <_obstack_memory_used@@Base+0x4b80>
  4177b0:	cmp	w0, #0xa
  4177b4:	mov	w3, #0x0                   	// #0
  4177b8:	b.ne	4177d0 <_obstack_memory_used@@Base+0x4b80>  // b.any
  4177bc:	ldrb	w0, [x19, #141]
  4177c0:	cmp	w0, #0x0
  4177c4:	cset	w3, ne  // ne = any
  4177c8:	lsl	w3, w3, #1
  4177cc:	nop
  4177d0:	ldrb	w0, [x19, #139]
  4177d4:	str	w3, [x19, #112]
  4177d8:	ldr	x1, [x19, #88]
  4177dc:	ldr	x3, [x19, #104]
  4177e0:	sub	x1, x1, x20
  4177e4:	sub	x3, x3, x20
  4177e8:	cbz	w0, 417364 <_obstack_memory_used@@Base+0x4714>
  4177ec:	str	x21, [x19, #40]
  4177f0:	str	x1, [x19, #88]
  4177f4:	str	x3, [x19, #104]
  4177f8:	b	4173e4 <_obstack_memory_used@@Base+0x4794>
  4177fc:	b.ne	417604 <_obstack_memory_used@@Base+0x49b4>  // b.any
  417800:	mov	x2, #0x0                   	// #0
  417804:	str	xzr, [x19, #48]
  417808:	b	417654 <_obstack_memory_used@@Base+0x4a04>
  41780c:	ldr	w28, [sp, #108]
  417810:	sub	x22, x0, x22
  417814:	str	xzr, [x19, #32]
  417818:	str	x22, [x19, #48]
  41781c:	cmn	w28, #0x1
  417820:	b.ne	4174b0 <_obstack_memory_used@@Base+0x4860>  // b.any
  417824:	b	4176f8 <_obstack_memory_used@@Base+0x4aa8>
  417828:	ldr	x0, [x25, x22, lsl #3]
  41782c:	cmp	x0, x20
  417830:	b.ne	417594 <_obstack_memory_used@@Base+0x4944>  // b.any
  417834:	ldr	x0, [x19, #16]
  417838:	sub	x2, x23, x20
  41783c:	lsl	x2, x2, #2
  417840:	add	x1, x0, x20, lsl #2
  417844:	bl	402660 <memmove@plt>
  417848:	ldr	x0, [x19, #8]
  41784c:	ldr	x2, [x19, #48]
  417850:	add	x1, x0, x20
  417854:	sub	x2, x2, x20
  417858:	bl	402660 <memmove@plt>
  41785c:	ldp	x0, x1, [x19, #48]
  417860:	sub	x0, x0, x20
  417864:	str	x0, [x19, #48]
  417868:	cmp	x0, #0x0
  41786c:	sub	x0, x1, x20
  417870:	str	x0, [x19, #56]
  417874:	b.le	4178a4 <_obstack_memory_used@@Base+0x4c54>
  417878:	ldr	x2, [x19, #24]
  41787c:	mov	x0, #0x0                   	// #0
  417880:	add	x3, x2, x20, lsl #3
  417884:	nop
  417888:	ldr	x1, [x3, x0, lsl #3]
  41788c:	sub	x1, x1, x20
  417890:	str	x1, [x2, x0, lsl #3]
  417894:	add	x0, x0, #0x1
  417898:	ldr	x1, [x19, #48]
  41789c:	cmp	x1, x0
  4178a0:	b.gt	417888 <_obstack_memory_used@@Base+0x4c38>
  4178a4:	ldr	x1, [x19, #88]
  4178a8:	ldr	x3, [x19, #104]
  4178ac:	sub	x1, x1, x20
  4178b0:	ldrb	w0, [x19, #139]
  4178b4:	ldr	w2, [x19, #144]
  4178b8:	sub	x3, x3, x20
  4178bc:	ldp	x25, x26, [sp, #64]
  4178c0:	b	417360 <_obstack_memory_used@@Base+0x4710>
  4178c4:	ldp	x25, x26, [sp, #64]
  4178c8:	b	417444 <_obstack_memory_used@@Base+0x47f4>
  4178cc:	mov	x0, x19
  4178d0:	bl	413598 <_obstack_memory_used@@Base+0x948>
  4178d4:	b	417394 <_obstack_memory_used@@Base+0x4744>
  4178d8:	ldr	x2, [x19, #80]
  4178dc:	strb	wzr, [x19, #140]
  4178e0:	ldr	x1, [x19, #96]
  4178e4:	sub	x2, x2, x21
  4178e8:	add	x2, x2, x20
  4178ec:	str	x2, [x19, #88]
  4178f0:	sub	x1, x1, x21
  4178f4:	add	x1, x1, x20
  4178f8:	str	x1, [x19, #104]
  4178fc:	b	417428 <_obstack_memory_used@@Base+0x47d8>
  417900:	cmp	x0, #0x0
  417904:	mov	w28, #0x0                   	// #0
  417908:	ccmp	x25, #0x0, #0x4, ne  // ne = any
  41790c:	b.eq	417918 <_obstack_memory_used@@Base+0x4cc8>  // b.none
  417910:	ldr	x0, [x19]
  417914:	ldrb	w28, [x0, x22]
  417918:	mov	x0, #0x1                   	// #1
  41791c:	str	x26, [x19, #32]
  417920:	b	417494 <_obstack_memory_used@@Base+0x4844>
  417924:	ldp	x25, x26, [sp, #64]
  417928:	ldp	x27, x28, [sp, #80]
  41792c:	mov	w2, w24
  417930:	sub	x1, x23, #0x1
  417934:	mov	x0, x19
  417938:	bl	417058 <_obstack_memory_used@@Base+0x4408>
  41793c:	str	w0, [x19, #112]
  417940:	b	4174e0 <_obstack_memory_used@@Base+0x4890>
  417944:	b.le	417964 <_obstack_memory_used@@Base+0x4d14>
  417948:	ldr	x0, [x19, #16]
  41794c:	mov	w2, #0xffffffff            	// #-1
  417950:	add	x1, x0, x22, lsl #2
  417954:	nop
  417958:	str	w2, [x0], #4
  41795c:	cmp	x1, x0
  417960:	b.ne	417958 <_obstack_memory_used@@Base+0x4d08>  // b.any
  417964:	ldrb	w0, [x19, #139]
  417968:	cbz	w0, 4174ec <_obstack_memory_used@@Base+0x489c>
  41796c:	ldr	x0, [x19, #8]
  417970:	mov	x2, x22
  417974:	mov	w1, #0xff                  	// #255
  417978:	bl	4028d0 <memset@plt>
  41797c:	ldrb	w0, [x19, #139]
  417980:	ldr	x22, [x19, #48]
  417984:	b	4174ec <_obstack_memory_used@@Base+0x489c>
  417988:	mov	w0, w28
  41798c:	bl	402bf0 <iswalnum@plt>
  417990:	cmp	w28, #0x5f
  417994:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  417998:	mov	w0, #0x1                   	// #1
  41799c:	b.ne	4174d4 <_obstack_memory_used@@Base+0x4884>  // b.any
  4179a0:	b	4174b8 <_obstack_memory_used@@Base+0x4868>
  4179a4:	mov	x4, x0
  4179a8:	stp	x4, x4, [x19, #48]
  4179ac:	b	417394 <_obstack_memory_used@@Base+0x4744>
  4179b0:	cmp	x2, #0x6
  4179b4:	mov	x0, #0x6                   	// #6
  4179b8:	csel	x0, x2, x0, le
  4179bc:	add	x1, sp, #0x70
  4179c0:	subs	w0, w0, #0x1
  4179c4:	b.mi	4176cc <_obstack_memory_used@@Base+0x4a7c>  // b.first
  4179c8:	sxtw	x0, w0
  4179cc:	add	x1, sp, #0x70
  4179d0:	ldrb	w4, [x22, x0]
  4179d4:	ldrb	w4, [x3, x4]
  4179d8:	strb	w4, [x1, x0]
  4179dc:	sub	x0, x0, #0x1
  4179e0:	tbz	w0, #31, 4179d0 <_obstack_memory_used@@Base+0x4d80>
  4179e4:	b	4176cc <_obstack_memory_used@@Base+0x4a7c>
  4179e8:	sub	x22, x22, x21
  4179ec:	str	x22, [x19, #48]
  4179f0:	b	41792c <_obstack_memory_used@@Base+0x4cdc>
  4179f4:	ldr	x1, [x19, #40]
  4179f8:	ldr	x0, [x19, #56]
  4179fc:	ldp	x25, x26, [sp, #64]
  417a00:	b	417444 <_obstack_memory_used@@Base+0x47f4>
  417a04:	nop
  417a08:	stp	x29, x30, [sp, #-32]!
  417a0c:	mov	x29, sp
  417a10:	stp	x19, x20, [sp, #16]
  417a14:	mov	x19, x1
  417a18:	mov	x1, x2
  417a1c:	ldr	w2, [x0, #160]
  417a20:	mov	x20, x0
  417a24:	bl	417058 <_obstack_memory_used@@Base+0x4408>
  417a28:	ldr	x4, [x19, #16]
  417a2c:	cmp	x4, #0x0
  417a30:	b.le	417aac <_obstack_memory_used@@Base+0x4e5c>
  417a34:	ldr	x1, [x20, #152]
  417a38:	and	w9, w0, #0x8
  417a3c:	ldr	x6, [x19, #24]
  417a40:	and	w8, w0, #0x2
  417a44:	ldr	x5, [x1]
  417a48:	and	w7, w0, #0x1
  417a4c:	mov	x2, #0x0                   	// #0
  417a50:	ldr	x0, [x6, x2, lsl #3]
  417a54:	add	x3, x5, x0, lsl #4
  417a58:	ldr	w1, [x3, #8]
  417a5c:	ldrb	w3, [x3, #8]
  417a60:	ubfx	x1, x1, #8, #10
  417a64:	cmp	w3, #0x2
  417a68:	b.ne	417aa0 <_obstack_memory_used@@Base+0x4e50>  // b.any
  417a6c:	cbz	w1, 417a8c <_obstack_memory_used@@Base+0x4e3c>
  417a70:	tbz	w1, #2, 417a98 <_obstack_memory_used@@Base+0x4e48>
  417a74:	cbz	w7, 417aa0 <_obstack_memory_used@@Base+0x4e50>
  417a78:	tbnz	w1, #3, 417aa0 <_obstack_memory_used@@Base+0x4e50>
  417a7c:	tbz	w1, #5, 417a84 <_obstack_memory_used@@Base+0x4e34>
  417a80:	cbz	w8, 417aa0 <_obstack_memory_used@@Base+0x4e50>
  417a84:	tbz	w1, #7, 417a8c <_obstack_memory_used@@Base+0x4e3c>
  417a88:	cbz	w9, 417aa0 <_obstack_memory_used@@Base+0x4e50>
  417a8c:	ldp	x19, x20, [sp, #16]
  417a90:	ldp	x29, x30, [sp], #32
  417a94:	ret
  417a98:	tbz	w1, #3, 417a7c <_obstack_memory_used@@Base+0x4e2c>
  417a9c:	cbz	w7, 417a7c <_obstack_memory_used@@Base+0x4e2c>
  417aa0:	add	x2, x2, #0x1
  417aa4:	cmp	x2, x4
  417aa8:	b.ne	417a50 <_obstack_memory_used@@Base+0x4e00>  // b.any
  417aac:	mov	x0, #0x0                   	// #0
  417ab0:	ldp	x19, x20, [sp, #16]
  417ab4:	ldp	x29, x30, [sp], #32
  417ab8:	ret
  417abc:	nop
  417ac0:	stp	x29, x30, [sp, #-96]!
  417ac4:	mov	x29, sp
  417ac8:	stp	x21, x22, [sp, #32]
  417acc:	mov	x22, x2
  417ad0:	ldr	x2, [x1]
  417ad4:	ldr	x21, [x0, #152]
  417ad8:	cmp	x2, #0x0
  417adc:	b.le	417b94 <_obstack_memory_used@@Base+0x4f44>
  417ae0:	stp	x19, x20, [sp, #16]
  417ae4:	mov	x19, #0x0                   	// #0
  417ae8:	stp	x23, x24, [sp, #48]
  417aec:	mov	x24, x0
  417af0:	mov	x23, x3
  417af4:	stp	x25, x26, [sp, #64]
  417af8:	mov	x25, x1
  417afc:	b	417b08 <_obstack_memory_used@@Base+0x4eb8>
  417b00:	cmp	x19, x2
  417b04:	b.ge	417b88 <_obstack_memory_used@@Base+0x4f38>  // b.tcont
  417b08:	ldr	x4, [x22]
  417b0c:	ldr	x5, [x21]
  417b10:	ldr	x20, [x4, x19, lsl #3]
  417b14:	add	x19, x19, #0x1
  417b18:	lsl	x4, x20, #4
  417b1c:	add	x6, x5, x4
  417b20:	ldrb	w6, [x6, #8]
  417b24:	cmp	w6, #0x8
  417b28:	b.ne	417b00 <_obstack_memory_used@@Base+0x4eb0>  // b.any
  417b2c:	ldr	x3, [x5, x4]
  417b30:	cmp	x3, #0x3f
  417b34:	b.gt	417b00 <_obstack_memory_used@@Base+0x4eb0>
  417b38:	ldr	x4, [x21, #160]
  417b3c:	lsr	x3, x4, x3
  417b40:	tbz	w3, #0, 417b00 <_obstack_memory_used@@Base+0x4eb0>
  417b44:	ldp	x26, x0, [x24, #232]
  417b48:	str	x27, [sp, #80]
  417b4c:	ldr	x27, [x24, #248]
  417b50:	cmp	x0, x26
  417b54:	b.eq	417bbc <_obstack_memory_used@@Base+0x4f6c>  // b.none
  417b58:	mov	x1, #0x30                  	// #48
  417b5c:	mov	x0, #0x1                   	// #1
  417b60:	bl	402910 <calloc@plt>
  417b64:	str	x0, [x27, x26, lsl #3]
  417b68:	add	x1, x26, #0x1
  417b6c:	cbz	x0, 417ba4 <_obstack_memory_used@@Base+0x4f54>
  417b70:	ldr	x27, [sp, #80]
  417b74:	str	x1, [x24, #232]
  417b78:	stp	x23, x20, [x0]
  417b7c:	ldr	x2, [x25]
  417b80:	cmp	x19, x2
  417b84:	b.lt	417b08 <_obstack_memory_used@@Base+0x4eb8>  // b.tstop
  417b88:	ldp	x19, x20, [sp, #16]
  417b8c:	ldp	x23, x24, [sp, #48]
  417b90:	ldp	x25, x26, [sp, #64]
  417b94:	mov	w0, #0x0                   	// #0
  417b98:	ldp	x21, x22, [sp, #32]
  417b9c:	ldp	x29, x30, [sp], #96
  417ba0:	ret
  417ba4:	mov	w0, #0xc                   	// #12
  417ba8:	ldp	x19, x20, [sp, #16]
  417bac:	ldp	x23, x24, [sp, #48]
  417bb0:	ldp	x25, x26, [sp, #64]
  417bb4:	ldr	x27, [sp, #80]
  417bb8:	b	417b98 <_obstack_memory_used@@Base+0x4f48>
  417bbc:	mov	x0, x27
  417bc0:	lsl	x1, x26, #4
  417bc4:	bl	402930 <realloc@plt>
  417bc8:	mov	x27, x0
  417bcc:	lsl	x0, x26, #1
  417bd0:	cbz	x27, 417ba4 <_obstack_memory_used@@Base+0x4f54>
  417bd4:	stp	x0, x27, [x24, #240]
  417bd8:	ldr	x26, [x24, #232]
  417bdc:	b	417b58 <_obstack_memory_used@@Base+0x4f08>
  417be0:	stp	x29, x30, [sp, #-48]!
  417be4:	mov	x6, x0
  417be8:	mov	x7, x2
  417bec:	mov	x29, sp
  417bf0:	stp	x19, x20, [sp, #16]
  417bf4:	lsl	x2, x3, #4
  417bf8:	mov	x20, x5
  417bfc:	ldr	x19, [x6]
  417c00:	str	x21, [sp, #32]
  417c04:	mov	x21, x1
  417c08:	mov	x0, x4
  417c0c:	sub	x19, x19, #0x1
  417c10:	ldr	x1, [x1]
  417c14:	str	x19, [x6]
  417c18:	add	x19, x19, x19, lsl #1
  417c1c:	lsl	x19, x19, #4
  417c20:	add	x3, x1, x19
  417c24:	ldr	x1, [x1, x19]
  417c28:	str	x1, [x7]
  417c2c:	ldr	x1, [x3, #16]
  417c30:	bl	402650 <memcpy@plt>
  417c34:	ldr	x0, [x20, #16]
  417c38:	bl	402ae0 <free@plt>
  417c3c:	ldr	x0, [x21]
  417c40:	add	x0, x0, x19
  417c44:	ldr	x0, [x0, #16]
  417c48:	bl	402ae0 <free@plt>
  417c4c:	ldr	x0, [x21]
  417c50:	ldr	x21, [sp, #32]
  417c54:	add	x19, x0, x19
  417c58:	ldp	x0, x1, [x19, #24]
  417c5c:	stp	x0, x1, [x20]
  417c60:	ldr	x0, [x19, #40]
  417c64:	str	x0, [x20, #16]
  417c68:	ldr	x0, [x19, #8]
  417c6c:	ldp	x19, x20, [sp, #16]
  417c70:	ldp	x29, x30, [sp], #48
  417c74:	ret
  417c78:	stp	x29, x30, [sp, #-32]!
  417c7c:	mov	x29, sp
  417c80:	stp	x19, x20, [sp, #16]
  417c84:	mov	x19, x1
  417c88:	mov	x20, x0
  417c8c:	mov	x0, x1
  417c90:	bl	402690 <strlen@plt>
  417c94:	cmp	x0, #0x1
  417c98:	b.ne	417cc8 <_obstack_memory_used@@Base+0x5078>  // b.any
  417c9c:	ldrb	w1, [x19]
  417ca0:	mov	x2, x0
  417ca4:	mov	w0, #0x0                   	// #0
  417ca8:	ubfx	x3, x1, #6, #2
  417cac:	lsl	x2, x2, x1
  417cb0:	ldr	x1, [x20, x3, lsl #3]
  417cb4:	orr	x2, x1, x2
  417cb8:	str	x2, [x20, x3, lsl #3]
  417cbc:	ldp	x19, x20, [sp, #16]
  417cc0:	ldp	x29, x30, [sp], #32
  417cc4:	ret
  417cc8:	mov	w0, #0x3                   	// #3
  417ccc:	ldp	x19, x20, [sp, #16]
  417cd0:	ldp	x29, x30, [sp], #32
  417cd4:	ret
  417cd8:	stp	x29, x30, [sp, #-80]!
  417cdc:	mov	x29, sp
  417ce0:	stp	x19, x20, [sp, #16]
  417ce4:	mov	x20, x0
  417ce8:	mov	x19, x1
  417cec:	stp	x21, x22, [sp, #32]
  417cf0:	mov	x22, x3
  417cf4:	mov	x21, x5
  417cf8:	stp	x23, x24, [sp, #48]
  417cfc:	mov	x24, x4
  417d00:	stp	x25, x26, [sp, #64]
  417d04:	mov	x25, x2
  417d08:	tbz	w6, #22, 417d28 <_obstack_memory_used@@Base+0x50d8>
  417d0c:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  417d10:	mov	x0, x5
  417d14:	add	x1, x1, #0x458
  417d18:	bl	402aa0 <strcmp@plt>
  417d1c:	cbnz	w0, 417e14 <_obstack_memory_used@@Base+0x51c4>
  417d20:	adrp	x21, 421000 <_obstack_memory_used@@Base+0xe3b0>
  417d24:	add	x21, x21, #0x450
  417d28:	ldr	x23, [x22]
  417d2c:	ldr	x0, [x24]
  417d30:	ldr	x26, [x25]
  417d34:	cmp	x0, x23
  417d38:	b.eq	417e48 <_obstack_memory_used@@Base+0x51f8>  // b.none
  417d3c:	add	x0, x23, #0x1
  417d40:	str	x0, [x22]
  417d44:	mov	x0, x21
  417d48:	bl	4026f0 <wctype@plt>
  417d4c:	str	x0, [x26, x23, lsl #3]
  417d50:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  417d54:	mov	x0, x21
  417d58:	add	x1, x1, #0x5c8
  417d5c:	bl	402aa0 <strcmp@plt>
  417d60:	cbz	w0, 417dd4 <_obstack_memory_used@@Base+0x5184>
  417d64:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  417d68:	mov	x0, x21
  417d6c:	add	x1, x1, #0x5e0
  417d70:	bl	402aa0 <strcmp@plt>
  417d74:	cbnz	w0, 417e74 <_obstack_memory_used@@Base+0x5224>
  417d78:	bl	402ab0 <__ctype_b_loc@plt>
  417d7c:	mov	x2, #0x0                   	// #0
  417d80:	mov	x5, #0x1                   	// #1
  417d84:	ldr	x4, [x0]
  417d88:	cbnz	x20, 418000 <_obstack_memory_used@@Base+0x53b0>
  417d8c:	nop
  417d90:	ldrh	w0, [x4, x2, lsl #1]
  417d94:	asr	x1, x2, #6
  417d98:	lsl	x3, x5, x2
  417d9c:	add	x2, x2, #0x1
  417da0:	tbz	w0, #1, 417db0 <_obstack_memory_used@@Base+0x5160>
  417da4:	ldr	x0, [x19, x1, lsl #3]
  417da8:	orr	x0, x0, x3
  417dac:	str	x0, [x19, x1, lsl #3]
  417db0:	cmp	x2, #0x100
  417db4:	b.ne	417d90 <_obstack_memory_used@@Base+0x5140>  // b.any
  417db8:	mov	w0, #0x0                   	// #0
  417dbc:	ldp	x19, x20, [sp, #16]
  417dc0:	ldp	x21, x22, [sp, #32]
  417dc4:	ldp	x23, x24, [sp, #48]
  417dc8:	ldp	x25, x26, [sp, #64]
  417dcc:	ldp	x29, x30, [sp], #80
  417dd0:	ret
  417dd4:	bl	402ab0 <__ctype_b_loc@plt>
  417dd8:	mov	x2, #0x0                   	// #0
  417ddc:	mov	x6, #0x1                   	// #1
  417de0:	ldr	x5, [x0]
  417de4:	cbnz	x20, 417fc4 <_obstack_memory_used@@Base+0x5374>
  417de8:	ldrh	w3, [x5, x2, lsl #1]
  417dec:	asr	x0, x2, #6
  417df0:	lsl	x4, x6, x2
  417df4:	add	x2, x2, #0x1
  417df8:	tbz	w3, #3, 417e08 <_obstack_memory_used@@Base+0x51b8>
  417dfc:	ldr	x1, [x19, x0, lsl #3]
  417e00:	orr	x1, x1, x4
  417e04:	str	x1, [x19, x0, lsl #3]
  417e08:	cmp	x2, #0x100
  417e0c:	b.ne	417de8 <_obstack_memory_used@@Base+0x5198>  // b.any
  417e10:	b	417db8 <_obstack_memory_used@@Base+0x5168>
  417e14:	mov	x0, x21
  417e18:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  417e1c:	add	x1, x1, #0x460
  417e20:	bl	402aa0 <strcmp@plt>
  417e24:	cmp	w0, #0x0
  417e28:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  417e2c:	ldr	x23, [x22]
  417e30:	add	x1, x1, #0x450
  417e34:	ldr	x0, [x24]
  417e38:	csel	x21, x1, x21, eq  // eq = none
  417e3c:	ldr	x26, [x25]
  417e40:	cmp	x0, x23
  417e44:	b.ne	417d3c <_obstack_memory_used@@Base+0x50ec>  // b.any
  417e48:	lsl	x23, x23, #1
  417e4c:	mov	x0, x26
  417e50:	add	x23, x23, #0x1
  417e54:	lsl	x1, x23, #3
  417e58:	bl	402930 <realloc@plt>
  417e5c:	mov	x26, x0
  417e60:	cbz	x0, 418118 <_obstack_memory_used@@Base+0x54c8>
  417e64:	str	x0, [x25]
  417e68:	str	x23, [x24]
  417e6c:	ldr	x23, [x22]
  417e70:	b	417d3c <_obstack_memory_used@@Base+0x50ec>
  417e74:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  417e78:	mov	x0, x21
  417e7c:	add	x1, x1, #0x460
  417e80:	bl	402aa0 <strcmp@plt>
  417e84:	cbz	w0, 417edc <_obstack_memory_used@@Base+0x528c>
  417e88:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  417e8c:	mov	x0, x21
  417e90:	add	x1, x1, #0x5b8
  417e94:	bl	402aa0 <strcmp@plt>
  417e98:	cbnz	w0, 417f1c <_obstack_memory_used@@Base+0x52cc>
  417e9c:	bl	402ab0 <__ctype_b_loc@plt>
  417ea0:	mov	x1, #0x0                   	// #0
  417ea4:	mov	x5, #0x1                   	// #1
  417ea8:	ldr	x4, [x0]
  417eac:	cbnz	x20, 4181a8 <_obstack_memory_used@@Base+0x5558>
  417eb0:	ldrh	w0, [x4, x1, lsl #1]
  417eb4:	asr	x2, x1, #6
  417eb8:	lsl	x3, x5, x1
  417ebc:	add	x1, x1, #0x1
  417ec0:	tbz	w0, #13, 417ed0 <_obstack_memory_used@@Base+0x5280>
  417ec4:	ldr	x0, [x19, x2, lsl #3]
  417ec8:	orr	x0, x0, x3
  417ecc:	str	x0, [x19, x2, lsl #3]
  417ed0:	cmp	x1, #0x100
  417ed4:	b.ne	417eb0 <_obstack_memory_used@@Base+0x5260>  // b.any
  417ed8:	b	417db8 <_obstack_memory_used@@Base+0x5168>
  417edc:	bl	402ab0 <__ctype_b_loc@plt>
  417ee0:	mov	x1, #0x0                   	// #0
  417ee4:	mov	x5, #0x1                   	// #1
  417ee8:	ldr	x4, [x0]
  417eec:	cbnz	x20, 418038 <_obstack_memory_used@@Base+0x53e8>
  417ef0:	ldrh	w0, [x4, x1, lsl #1]
  417ef4:	asr	x2, x1, #6
  417ef8:	lsl	x3, x5, x1
  417efc:	add	x1, x1, #0x1
  417f00:	tbz	w0, #9, 417f10 <_obstack_memory_used@@Base+0x52c0>
  417f04:	ldr	x0, [x19, x2, lsl #3]
  417f08:	orr	x0, x0, x3
  417f0c:	str	x0, [x19, x2, lsl #3]
  417f10:	cmp	x1, #0x100
  417f14:	b.ne	417ef0 <_obstack_memory_used@@Base+0x52a0>  // b.any
  417f18:	b	417db8 <_obstack_memory_used@@Base+0x5168>
  417f1c:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  417f20:	mov	x0, x21
  417f24:	add	x1, x1, #0x450
  417f28:	bl	402aa0 <strcmp@plt>
  417f2c:	cbz	w0, 417f84 <_obstack_memory_used@@Base+0x5334>
  417f30:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  417f34:	mov	x0, x21
  417f38:	add	x1, x1, #0x5a8
  417f3c:	bl	402aa0 <strcmp@plt>
  417f40:	cbnz	w0, 418070 <_obstack_memory_used@@Base+0x5420>
  417f44:	bl	402ab0 <__ctype_b_loc@plt>
  417f48:	mov	x1, #0x0                   	// #0
  417f4c:	mov	x5, #0x1                   	// #1
  417f50:	ldr	x4, [x0]
  417f54:	cbnz	x20, 4181e0 <_obstack_memory_used@@Base+0x5590>
  417f58:	ldrh	w2, [x4, x1, lsl #1]
  417f5c:	asr	x0, x1, #6
  417f60:	lsl	x3, x5, x1
  417f64:	add	x1, x1, #0x1
  417f68:	tbz	w2, #11, 417f78 <_obstack_memory_used@@Base+0x5328>
  417f6c:	ldr	x2, [x19, x0, lsl #3]
  417f70:	orr	x2, x2, x3
  417f74:	str	x2, [x19, x0, lsl #3]
  417f78:	cmp	x1, #0x100
  417f7c:	b.ne	417f58 <_obstack_memory_used@@Base+0x5308>  // b.any
  417f80:	b	417db8 <_obstack_memory_used@@Base+0x5168>
  417f84:	bl	402ab0 <__ctype_b_loc@plt>
  417f88:	mov	x1, #0x0                   	// #0
  417f8c:	mov	x5, #0x1                   	// #1
  417f90:	ldr	x4, [x0]
  417f94:	cbnz	x20, 418174 <_obstack_memory_used@@Base+0x5524>
  417f98:	ldrh	w0, [x4, x1, lsl #1]
  417f9c:	asr	x2, x1, #6
  417fa0:	lsl	x3, x5, x1
  417fa4:	add	x1, x1, #0x1
  417fa8:	tbz	w0, #10, 417fb8 <_obstack_memory_used@@Base+0x5368>
  417fac:	ldr	x0, [x19, x2, lsl #3]
  417fb0:	orr	x0, x0, x3
  417fb4:	str	x0, [x19, x2, lsl #3]
  417fb8:	cmp	x1, #0x100
  417fbc:	b.ne	417f98 <_obstack_memory_used@@Base+0x5348>  // b.any
  417fc0:	b	417db8 <_obstack_memory_used@@Base+0x5168>
  417fc4:	mov	x4, x6
  417fc8:	mov	x0, #0x0                   	// #0
  417fcc:	nop
  417fd0:	ldrh	w1, [x5, x0, lsl #1]
  417fd4:	tbz	w1, #3, 417ff0 <_obstack_memory_used@@Base+0x53a0>
  417fd8:	ldrb	w1, [x20, x0]
  417fdc:	ubfx	x3, x1, #6, #2
  417fe0:	lsl	x1, x4, x1
  417fe4:	ldr	x2, [x19, x3, lsl #3]
  417fe8:	orr	x1, x2, x1
  417fec:	str	x1, [x19, x3, lsl #3]
  417ff0:	add	x0, x0, #0x1
  417ff4:	cmp	x0, #0x100
  417ff8:	b.ne	417fd0 <_obstack_memory_used@@Base+0x5380>  // b.any
  417ffc:	b	417db8 <_obstack_memory_used@@Base+0x5168>
  418000:	mov	x0, #0x0                   	// #0
  418004:	nop
  418008:	ldrh	w1, [x4, x0, lsl #1]
  41800c:	tbz	w1, #1, 418028 <_obstack_memory_used@@Base+0x53d8>
  418010:	ldrb	w1, [x20, x0]
  418014:	ubfx	x3, x1, #6, #2
  418018:	lsl	x1, x5, x1
  41801c:	ldr	x2, [x19, x3, lsl #3]
  418020:	orr	x1, x2, x1
  418024:	str	x1, [x19, x3, lsl #3]
  418028:	add	x0, x0, #0x1
  41802c:	cmp	x0, #0x100
  418030:	b.ne	418008 <_obstack_memory_used@@Base+0x53b8>  // b.any
  418034:	b	417db8 <_obstack_memory_used@@Base+0x5168>
  418038:	mov	x0, #0x0                   	// #0
  41803c:	nop
  418040:	ldrh	w1, [x4, x0, lsl #1]
  418044:	tbz	w1, #9, 418060 <_obstack_memory_used@@Base+0x5410>
  418048:	ldrb	w1, [x20, x0]
  41804c:	ubfx	x3, x1, #6, #2
  418050:	lsl	x1, x5, x1
  418054:	ldr	x2, [x19, x3, lsl #3]
  418058:	orr	x1, x2, x1
  41805c:	str	x1, [x19, x3, lsl #3]
  418060:	add	x0, x0, #0x1
  418064:	cmp	x0, #0x100
  418068:	b.ne	418040 <_obstack_memory_used@@Base+0x53f0>  // b.any
  41806c:	b	417db8 <_obstack_memory_used@@Base+0x5168>
  418070:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  418074:	mov	x0, x21
  418078:	add	x1, x1, #0x5d0
  41807c:	bl	402aa0 <strcmp@plt>
  418080:	cbnz	w0, 4180c4 <_obstack_memory_used@@Base+0x5474>
  418084:	bl	402ab0 <__ctype_b_loc@plt>
  418088:	mov	x1, #0x0                   	// #0
  41808c:	mov	x5, #0x1                   	// #1
  418090:	ldr	x4, [x0]
  418094:	cbnz	x20, 4183c0 <_obstack_memory_used@@Base+0x5770>
  418098:	ldrh	w0, [x4, x1, lsl #1]
  41809c:	asr	x2, x1, #6
  4180a0:	lsl	x3, x5, x1
  4180a4:	add	x1, x1, #0x1
  4180a8:	tbz	w0, #14, 4180b8 <_obstack_memory_used@@Base+0x5468>
  4180ac:	ldr	x0, [x19, x2, lsl #3]
  4180b0:	orr	x0, x0, x3
  4180b4:	str	x0, [x19, x2, lsl #3]
  4180b8:	cmp	x1, #0x100
  4180bc:	b.ne	418098 <_obstack_memory_used@@Base+0x5448>  // b.any
  4180c0:	b	417db8 <_obstack_memory_used@@Base+0x5168>
  4180c4:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  4180c8:	mov	x0, x21
  4180cc:	add	x1, x1, #0x458
  4180d0:	bl	402aa0 <strcmp@plt>
  4180d4:	cbnz	w0, 418120 <_obstack_memory_used@@Base+0x54d0>
  4180d8:	bl	402ab0 <__ctype_b_loc@plt>
  4180dc:	mov	x1, #0x0                   	// #0
  4180e0:	mov	x5, #0x1                   	// #1
  4180e4:	ldr	x4, [x0]
  4180e8:	cbnz	x20, 41842c <_obstack_memory_used@@Base+0x57dc>
  4180ec:	ldrh	w0, [x4, x1, lsl #1]
  4180f0:	asr	x2, x1, #6
  4180f4:	lsl	x3, x5, x1
  4180f8:	add	x1, x1, #0x1
  4180fc:	tbz	w0, #8, 41810c <_obstack_memory_used@@Base+0x54bc>
  418100:	ldr	x0, [x19, x2, lsl #3]
  418104:	orr	x0, x0, x3
  418108:	str	x0, [x19, x2, lsl #3]
  41810c:	cmp	x1, #0x100
  418110:	b.ne	4180ec <_obstack_memory_used@@Base+0x549c>  // b.any
  418114:	b	417db8 <_obstack_memory_used@@Base+0x5168>
  418118:	mov	w0, #0xc                   	// #12
  41811c:	b	417dbc <_obstack_memory_used@@Base+0x516c>
  418120:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  418124:	mov	x0, x21
  418128:	add	x1, x1, #0x5e8
  41812c:	bl	402aa0 <strcmp@plt>
  418130:	cbnz	w0, 418214 <_obstack_memory_used@@Base+0x55c4>
  418134:	bl	402ab0 <__ctype_b_loc@plt>
  418138:	mov	x1, #0x0                   	// #0
  41813c:	mov	x4, #0x1                   	// #1
  418140:	ldr	x2, [x0]
  418144:	cbnz	x20, 4183f4 <_obstack_memory_used@@Base+0x57a4>
  418148:	ldrh	w0, [x2, x1, lsl #1]
  41814c:	asr	x3, x1, #6
  418150:	lsl	x5, x4, x1
  418154:	add	x1, x1, #0x1
  418158:	tbz	w0, #0, 418168 <_obstack_memory_used@@Base+0x5518>
  41815c:	ldr	x0, [x19, x3, lsl #3]
  418160:	orr	x0, x0, x5
  418164:	str	x0, [x19, x3, lsl #3]
  418168:	cmp	x1, #0x100
  41816c:	b.ne	418148 <_obstack_memory_used@@Base+0x54f8>  // b.any
  418170:	b	417db8 <_obstack_memory_used@@Base+0x5168>
  418174:	mov	x0, #0x0                   	// #0
  418178:	ldrh	w1, [x4, x0, lsl #1]
  41817c:	tbz	w1, #10, 418198 <_obstack_memory_used@@Base+0x5548>
  418180:	ldrb	w1, [x20, x0]
  418184:	ubfx	x3, x1, #6, #2
  418188:	lsl	x1, x5, x1
  41818c:	ldr	x2, [x19, x3, lsl #3]
  418190:	orr	x1, x2, x1
  418194:	str	x1, [x19, x3, lsl #3]
  418198:	add	x0, x0, #0x1
  41819c:	cmp	x0, #0x100
  4181a0:	b.ne	418178 <_obstack_memory_used@@Base+0x5528>  // b.any
  4181a4:	b	417db8 <_obstack_memory_used@@Base+0x5168>
  4181a8:	mov	x0, #0x0                   	// #0
  4181ac:	nop
  4181b0:	ldrh	w1, [x4, x0, lsl #1]
  4181b4:	tbz	w1, #13, 4181d0 <_obstack_memory_used@@Base+0x5580>
  4181b8:	ldrb	w1, [x20, x0]
  4181bc:	ubfx	x3, x1, #6, #2
  4181c0:	lsl	x1, x5, x1
  4181c4:	ldr	x2, [x19, x3, lsl #3]
  4181c8:	orr	x1, x2, x1
  4181cc:	str	x1, [x19, x3, lsl #3]
  4181d0:	add	x0, x0, #0x1
  4181d4:	cmp	x0, #0x100
  4181d8:	b.ne	4181b0 <_obstack_memory_used@@Base+0x5560>  // b.any
  4181dc:	b	417db8 <_obstack_memory_used@@Base+0x5168>
  4181e0:	mov	x0, #0x0                   	// #0
  4181e4:	ldrh	w1, [x4, x0, lsl #1]
  4181e8:	tbz	w1, #11, 418204 <_obstack_memory_used@@Base+0x55b4>
  4181ec:	ldrb	w1, [x20, x0]
  4181f0:	ubfx	x3, x1, #6, #2
  4181f4:	lsl	x1, x5, x1
  4181f8:	ldr	x2, [x19, x3, lsl #3]
  4181fc:	orr	x1, x2, x1
  418200:	str	x1, [x19, x3, lsl #3]
  418204:	add	x0, x0, #0x1
  418208:	cmp	x0, #0x100
  41820c:	b.ne	4181e4 <_obstack_memory_used@@Base+0x5594>  // b.any
  418210:	b	417db8 <_obstack_memory_used@@Base+0x5168>
  418214:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  418218:	mov	x0, x21
  41821c:	add	x1, x1, #0x5d8
  418220:	bl	402aa0 <strcmp@plt>
  418224:	cbnz	w0, 4182a0 <_obstack_memory_used@@Base+0x5650>
  418228:	bl	402ab0 <__ctype_b_loc@plt>
  41822c:	mov	x1, #0x0                   	// #0
  418230:	mov	x4, #0x1                   	// #1
  418234:	ldr	x3, [x0]
  418238:	cbnz	x20, 418268 <_obstack_memory_used@@Base+0x5618>
  41823c:	ldrsh	w0, [x3, x1, lsl #1]
  418240:	asr	x2, x1, #6
  418244:	lsl	x5, x4, x1
  418248:	add	x1, x1, #0x1
  41824c:	tbz	w0, #31, 41825c <_obstack_memory_used@@Base+0x560c>
  418250:	ldr	x0, [x19, x2, lsl #3]
  418254:	orr	x0, x0, x5
  418258:	str	x0, [x19, x2, lsl #3]
  41825c:	cmp	x1, #0x100
  418260:	b.ne	41823c <_obstack_memory_used@@Base+0x55ec>  // b.any
  418264:	b	417db8 <_obstack_memory_used@@Base+0x5168>
  418268:	mov	x5, x4
  41826c:	mov	x0, #0x0                   	// #0
  418270:	ldrsh	w1, [x3, x0, lsl #1]
  418274:	tbz	w1, #31, 418290 <_obstack_memory_used@@Base+0x5640>
  418278:	ldrb	w1, [x20, x0]
  41827c:	ubfx	x4, x1, #6, #2
  418280:	lsl	x1, x5, x1
  418284:	ldr	x2, [x19, x4, lsl #3]
  418288:	orr	x1, x2, x1
  41828c:	str	x1, [x19, x4, lsl #3]
  418290:	add	x0, x0, #0x1
  418294:	cmp	x0, #0x100
  418298:	b.ne	418270 <_obstack_memory_used@@Base+0x5620>  // b.any
  41829c:	b	417db8 <_obstack_memory_used@@Base+0x5168>
  4182a0:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  4182a4:	mov	x0, x21
  4182a8:	add	x1, x1, #0x5c0
  4182ac:	bl	402aa0 <strcmp@plt>
  4182b0:	cbnz	w0, 41832c <_obstack_memory_used@@Base+0x56dc>
  4182b4:	bl	402ab0 <__ctype_b_loc@plt>
  4182b8:	mov	x1, #0x0                   	// #0
  4182bc:	mov	x4, #0x1                   	// #1
  4182c0:	ldr	x3, [x0]
  4182c4:	cbnz	x20, 4182f4 <_obstack_memory_used@@Base+0x56a4>
  4182c8:	ldrh	w0, [x3, x1, lsl #1]
  4182cc:	asr	x2, x1, #6
  4182d0:	lsl	x5, x4, x1
  4182d4:	add	x1, x1, #0x1
  4182d8:	tbz	w0, #2, 4182e8 <_obstack_memory_used@@Base+0x5698>
  4182dc:	ldr	x0, [x19, x2, lsl #3]
  4182e0:	orr	x0, x0, x5
  4182e4:	str	x0, [x19, x2, lsl #3]
  4182e8:	cmp	x1, #0x100
  4182ec:	b.ne	4182c8 <_obstack_memory_used@@Base+0x5678>  // b.any
  4182f0:	b	417db8 <_obstack_memory_used@@Base+0x5168>
  4182f4:	mov	x5, x4
  4182f8:	mov	x0, #0x0                   	// #0
  4182fc:	ldrh	w1, [x3, x0, lsl #1]
  418300:	tbz	w1, #2, 41831c <_obstack_memory_used@@Base+0x56cc>
  418304:	ldrb	w1, [x20, x0]
  418308:	ubfx	x4, x1, #6, #2
  41830c:	lsl	x1, x5, x1
  418310:	ldr	x2, [x19, x4, lsl #3]
  418314:	orr	x1, x2, x1
  418318:	str	x1, [x19, x4, lsl #3]
  41831c:	add	x0, x0, #0x1
  418320:	cmp	x0, #0x100
  418324:	b.ne	4182fc <_obstack_memory_used@@Base+0x56ac>  // b.any
  418328:	b	417db8 <_obstack_memory_used@@Base+0x5168>
  41832c:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xe3b0>
  418330:	mov	x0, x21
  418334:	add	x1, x1, #0x5b0
  418338:	bl	402aa0 <strcmp@plt>
  41833c:	cbnz	w0, 4183b8 <_obstack_memory_used@@Base+0x5768>
  418340:	bl	402ab0 <__ctype_b_loc@plt>
  418344:	mov	x1, #0x0                   	// #0
  418348:	mov	x4, #0x1                   	// #1
  41834c:	ldr	x3, [x0]
  418350:	cbnz	x20, 418380 <_obstack_memory_used@@Base+0x5730>
  418354:	ldrh	w0, [x3, x1, lsl #1]
  418358:	asr	x2, x1, #6
  41835c:	lsl	x5, x4, x1
  418360:	add	x1, x1, #0x1
  418364:	tbz	w0, #12, 418374 <_obstack_memory_used@@Base+0x5724>
  418368:	ldr	x0, [x19, x2, lsl #3]
  41836c:	orr	x0, x0, x5
  418370:	str	x0, [x19, x2, lsl #3]
  418374:	cmp	x1, #0x100
  418378:	b.ne	418354 <_obstack_memory_used@@Base+0x5704>  // b.any
  41837c:	b	417db8 <_obstack_memory_used@@Base+0x5168>
  418380:	mov	x5, x4
  418384:	mov	x0, #0x0                   	// #0
  418388:	ldrh	w1, [x3, x0, lsl #1]
  41838c:	tbz	w1, #12, 4183a8 <_obstack_memory_used@@Base+0x5758>
  418390:	ldrb	w1, [x20, x0]
  418394:	ubfx	x4, x1, #6, #2
  418398:	lsl	x1, x5, x1
  41839c:	ldr	x2, [x19, x4, lsl #3]
  4183a0:	orr	x1, x2, x1
  4183a4:	str	x1, [x19, x4, lsl #3]
  4183a8:	add	x0, x0, #0x1
  4183ac:	cmp	x0, #0x100
  4183b0:	b.ne	418388 <_obstack_memory_used@@Base+0x5738>  // b.any
  4183b4:	b	417db8 <_obstack_memory_used@@Base+0x5168>
  4183b8:	mov	w0, #0x4                   	// #4
  4183bc:	b	417dbc <_obstack_memory_used@@Base+0x516c>
  4183c0:	mov	x0, #0x0                   	// #0
  4183c4:	ldrh	w1, [x4, x0, lsl #1]
  4183c8:	tbz	w1, #14, 4183e4 <_obstack_memory_used@@Base+0x5794>
  4183cc:	ldrb	w1, [x20, x0]
  4183d0:	ubfx	x3, x1, #6, #2
  4183d4:	lsl	x1, x5, x1
  4183d8:	ldr	x2, [x19, x3, lsl #3]
  4183dc:	orr	x1, x2, x1
  4183e0:	str	x1, [x19, x3, lsl #3]
  4183e4:	add	x0, x0, #0x1
  4183e8:	cmp	x0, #0x100
  4183ec:	b.ne	4183c4 <_obstack_memory_used@@Base+0x5774>  // b.any
  4183f0:	b	417db8 <_obstack_memory_used@@Base+0x5168>
  4183f4:	mov	x5, x4
  4183f8:	mov	x0, #0x0                   	// #0
  4183fc:	ldrh	w1, [x2, x0, lsl #1]
  418400:	tbz	w1, #0, 41841c <_obstack_memory_used@@Base+0x57cc>
  418404:	ldrb	w1, [x20, x0]
  418408:	ubfx	x4, x1, #6, #2
  41840c:	lsl	x1, x5, x1
  418410:	ldr	x3, [x19, x4, lsl #3]
  418414:	orr	x1, x3, x1
  418418:	str	x1, [x19, x4, lsl #3]
  41841c:	add	x0, x0, #0x1
  418420:	cmp	x0, #0x100
  418424:	b.ne	4183fc <_obstack_memory_used@@Base+0x57ac>  // b.any
  418428:	b	417db8 <_obstack_memory_used@@Base+0x5168>
  41842c:	mov	x0, #0x0                   	// #0
  418430:	ldrh	w1, [x4, x0, lsl #1]
  418434:	tbz	w1, #8, 418450 <_obstack_memory_used@@Base+0x5800>
  418438:	ldrb	w1, [x20, x0]
  41843c:	ubfx	x3, x1, #6, #2
  418440:	lsl	x1, x5, x1
  418444:	ldr	x2, [x19, x3, lsl #3]
  418448:	orr	x1, x2, x1
  41844c:	str	x1, [x19, x3, lsl #3]
  418450:	add	x0, x0, #0x1
  418454:	cmp	x0, #0x100
  418458:	b.ne	418430 <_obstack_memory_used@@Base+0x57e0>  // b.any
  41845c:	b	417db8 <_obstack_memory_used@@Base+0x5168>
  418460:	stp	x29, x30, [sp, #-128]!
  418464:	mov	x29, sp
  418468:	stp	x19, x20, [sp, #16]
  41846c:	mov	x20, x3
  418470:	stp	x21, x22, [sp, #32]
  418474:	mov	x21, x0
  418478:	mov	x22, x5
  41847c:	mov	x0, #0x20                  	// #32
  418480:	stp	x23, x24, [sp, #48]
  418484:	and	w23, w4, #0xff
  418488:	stp	x25, x26, [sp, #64]
  41848c:	mov	x25, x1
  418490:	mov	x26, x2
  418494:	mov	x1, #0x1                   	// #1
  418498:	str	xzr, [sp, #88]
  41849c:	bl	402910 <calloc@plt>
  4184a0:	cbz	x0, 41868c <_obstack_memory_used@@Base+0x5a3c>
  4184a4:	mov	x19, x0
  4184a8:	mov	x1, #0x1                   	// #1
  4184ac:	mov	x0, #0x50                  	// #80
  4184b0:	bl	402910 <calloc@plt>
  4184b4:	mov	x24, x0
  4184b8:	cbz	x0, 4186b4 <_obstack_memory_used@@Base+0x5a64>
  4184bc:	ldrb	w7, [x0, #32]
  4184c0:	mov	x5, x26
  4184c4:	mov	x0, x25
  4184c8:	add	x4, sp, #0x58
  4184cc:	add	x3, x24, #0x48
  4184d0:	add	x2, x24, #0x18
  4184d4:	bfxil	w7, w23, #0, #1
  4184d8:	mov	x1, x19
  4184dc:	mov	x6, #0x0                   	// #0
  4184e0:	strb	w7, [x24, #32]
  4184e4:	bl	417cd8 <_obstack_memory_used@@Base+0x5088>
  4184e8:	mov	w25, w0
  4184ec:	cbnz	w0, 4186cc <_obstack_memory_used@@Base+0x5a7c>
  4184f0:	ldrb	w1, [x20]
  4184f4:	mov	x0, #0x1                   	// #1
  4184f8:	cbz	w1, 41851c <_obstack_memory_used@@Base+0x58cc>
  4184fc:	nop
  418500:	ubfx	x4, x1, #6, #2
  418504:	lsl	x3, x0, x1
  418508:	ldrb	w1, [x20, #1]!
  41850c:	ldr	x2, [x19, x4, lsl #3]
  418510:	orr	x2, x2, x3
  418514:	str	x2, [x19, x4, lsl #3]
  418518:	cbnz	w1, 418500 <_obstack_memory_used@@Base+0x58b0>
  41851c:	cbz	w23, 41853c <_obstack_memory_used@@Base+0x58ec>
  418520:	mov	x0, #0x0                   	// #0
  418524:	ldr	x1, [x19, x0, lsl #3]
  418528:	mvn	x1, x1
  41852c:	str	x1, [x19, x0, lsl #3]
  418530:	add	x0, x0, #0x1
  418534:	cmp	x0, #0x4
  418538:	b.ne	418524 <_obstack_memory_used@@Base+0x58d4>  // b.any
  41853c:	ldr	w0, [x21, #180]
  418540:	cmp	w0, #0x1
  418544:	b.le	41856c <_obstack_memory_used@@Base+0x591c>
  418548:	ldr	x3, [x21, #120]
  41854c:	mov	x1, #0x0                   	// #0
  418550:	ldr	x0, [x19, x1]
  418554:	ldr	x2, [x3, x1]
  418558:	and	x0, x0, x2
  41855c:	str	x0, [x19, x1]
  418560:	add	x1, x1, #0x8
  418564:	cmp	x1, #0x20
  418568:	b.ne	418550 <_obstack_memory_used@@Base+0x5900>  // b.any
  41856c:	mov	w5, #0x3                   	// #3
  418570:	add	x23, x21, #0x70
  418574:	add	x25, x21, #0x80
  418578:	mov	x0, x23
  41857c:	mov	x1, x25
  418580:	add	x4, sp, #0x60
  418584:	mov	x3, #0x0                   	// #0
  418588:	mov	x2, #0x0                   	// #0
  41858c:	str	x19, [sp, #96]
  418590:	strb	w5, [sp, #104]
  418594:	stur	wzr, [sp, #105]
  418598:	sturh	wzr, [sp, #109]
  41859c:	strb	wzr, [sp, #111]
  4185a0:	bl	415470 <_obstack_memory_used@@Base+0x2820>
  4185a4:	mov	x20, x0
  4185a8:	cbz	x0, 418654 <_obstack_memory_used@@Base+0x5a04>
  4185ac:	ldr	w0, [x21, #180]
  4185b0:	cmp	w0, #0x1
  4185b4:	b.le	418630 <_obstack_memory_used@@Base+0x59e0>
  4185b8:	ldrb	w0, [x21, #176]
  4185bc:	mov	w5, #0x6                   	// #6
  4185c0:	mov	x3, #0x0                   	// #0
  4185c4:	add	x4, sp, #0x60
  4185c8:	orr	w0, w0, #0x2
  4185cc:	strb	w0, [x21, #176]
  4185d0:	mov	x1, x25
  4185d4:	mov	x0, x23
  4185d8:	mov	x2, #0x0                   	// #0
  4185dc:	str	x24, [sp, #96]
  4185e0:	strb	w5, [sp, #104]
  4185e4:	bl	415470 <_obstack_memory_used@@Base+0x2820>
  4185e8:	mov	x3, x0
  4185ec:	cbz	x0, 418654 <_obstack_memory_used@@Base+0x5a04>
  4185f0:	mov	w5, #0xa                   	// #10
  4185f4:	stp	xzr, xzr, [sp, #112]
  4185f8:	mov	x2, x20
  4185fc:	mov	x1, x25
  418600:	mov	x0, x23
  418604:	add	x4, sp, #0x70
  418608:	strb	w5, [sp, #120]
  41860c:	bl	415470 <_obstack_memory_used@@Base+0x2820>
  418610:	mov	x20, x0
  418614:	mov	x0, x20
  418618:	ldp	x19, x20, [sp, #16]
  41861c:	ldp	x21, x22, [sp, #32]
  418620:	ldp	x23, x24, [sp, #48]
  418624:	ldp	x25, x26, [sp, #64]
  418628:	ldp	x29, x30, [sp], #128
  41862c:	ret
  418630:	mov	x0, x24
  418634:	bl	414008 <_obstack_memory_used@@Base+0x13b8>
  418638:	mov	x0, x20
  41863c:	ldp	x19, x20, [sp, #16]
  418640:	ldp	x21, x22, [sp, #32]
  418644:	ldp	x23, x24, [sp, #48]
  418648:	ldp	x25, x26, [sp, #64]
  41864c:	ldp	x29, x30, [sp], #128
  418650:	ret
  418654:	mov	x0, x19
  418658:	bl	402ae0 <free@plt>
  41865c:	mov	x0, x24
  418660:	bl	414008 <_obstack_memory_used@@Base+0x13b8>
  418664:	mov	w0, #0xc                   	// #12
  418668:	str	w0, [x22]
  41866c:	mov	x20, #0x0                   	// #0
  418670:	mov	x0, x20
  418674:	ldp	x19, x20, [sp, #16]
  418678:	ldp	x21, x22, [sp, #32]
  41867c:	ldp	x23, x24, [sp, #48]
  418680:	ldp	x25, x26, [sp, #64]
  418684:	ldp	x29, x30, [sp], #128
  418688:	ret
  41868c:	mov	w0, #0xc                   	// #12
  418690:	str	w0, [x22]
  418694:	mov	x20, #0x0                   	// #0
  418698:	mov	x0, x20
  41869c:	ldp	x19, x20, [sp, #16]
  4186a0:	ldp	x21, x22, [sp, #32]
  4186a4:	ldp	x23, x24, [sp, #48]
  4186a8:	ldp	x25, x26, [sp, #64]
  4186ac:	ldp	x29, x30, [sp], #128
  4186b0:	ret
  4186b4:	mov	x0, x19
  4186b8:	bl	402ae0 <free@plt>
  4186bc:	mov	w0, #0xc                   	// #12
  4186c0:	mov	x20, #0x0                   	// #0
  4186c4:	str	w0, [x22]
  4186c8:	b	418614 <_obstack_memory_used@@Base+0x59c4>
  4186cc:	mov	x0, x19
  4186d0:	bl	402ae0 <free@plt>
  4186d4:	mov	x0, x24
  4186d8:	mov	x20, #0x0                   	// #0
  4186dc:	bl	414008 <_obstack_memory_used@@Base+0x13b8>
  4186e0:	str	w25, [x22]
  4186e4:	b	418614 <_obstack_memory_used@@Base+0x59c4>
  4186e8:	stp	x29, x30, [sp, #-400]!
  4186ec:	mov	x29, sp
  4186f0:	stp	x21, x22, [sp, #32]
  4186f4:	ldr	x22, [x0]
  4186f8:	stp	x25, x26, [sp, #64]
  4186fc:	mov	w26, #0x0                   	// #0
  418700:	stp	x27, x28, [sp, #80]
  418704:	mov	x28, x3
  418708:	stp	x0, x2, [sp, #104]
  41870c:	ldr	w0, [x22, #180]
  418710:	str	x1, [sp, #120]
  418714:	cmp	w0, #0x1
  418718:	b.ne	418728 <_obstack_memory_used@@Base+0x5ad8>  // b.any
  41871c:	ldr	x0, [sp, #104]
  418720:	ldr	x6, [x0, #24]
  418724:	ubfx	w26, w6, #22, #1
  418728:	ldr	x0, [sp, #120]
  41872c:	mov	x21, #0x0                   	// #0
  418730:	ldr	x2, [x0]
  418734:	cmp	x2, #0x0
  418738:	b.le	4187fc <_obstack_memory_used@@Base+0x5bac>
  41873c:	mov	w27, #0x1                   	// #1
  418740:	stp	x19, x20, [sp, #16]
  418744:	stp	x23, x24, [sp, #48]
  418748:	add	x23, sp, #0x90
  41874c:	b	418780 <_obstack_memory_used@@Base+0x5b30>
  418750:	cmp	w19, #0x3
  418754:	b.eq	418930 <_obstack_memory_used@@Base+0x5ce0>  // b.none
  418758:	cmp	w19, #0x6
  41875c:	b.eq	418810 <_obstack_memory_used@@Base+0x5bc0>  // b.none
  418760:	and	w0, w19, #0xfffffffd
  418764:	cmp	w0, #0x5
  418768:	b.eq	418a6c <_obstack_memory_used@@Base+0x5e1c>  // b.none
  41876c:	cmp	w19, #0x2
  418770:	b.eq	418a90 <_obstack_memory_used@@Base+0x5e40>  // b.none
  418774:	add	x21, x21, #0x1
  418778:	cmp	x21, x2
  41877c:	b.ge	4187f4 <_obstack_memory_used@@Base+0x5ba4>  // b.tcont
  418780:	ldr	x0, [sp, #112]
  418784:	ldr	x1, [x0]
  418788:	ldr	x0, [x22]
  41878c:	ldr	x20, [x1, x21, lsl #3]
  418790:	lsl	x24, x20, #4
  418794:	add	x1, x0, x24
  418798:	ldrb	w19, [x1, #8]
  41879c:	cmp	w19, #0x1
  4187a0:	b.ne	418750 <_obstack_memory_used@@Base+0x5b00>  // b.any
  4187a4:	ldrb	w25, [x0, x24]
  4187a8:	and	x0, x25, #0xff
  4187ac:	strb	w19, [x28, x0]
  4187b0:	cbz	w26, 4187c4 <_obstack_memory_used@@Base+0x5b74>
  4187b4:	bl	402770 <__ctype_tolower_loc@plt>
  4187b8:	ldr	x0, [x0]
  4187bc:	ldrsw	x0, [x0, x25, lsl #2]
  4187c0:	strb	w19, [x28, x0]
  4187c4:	ldr	x0, [sp, #104]
  4187c8:	ldr	x0, [x0, #24]
  4187cc:	tbz	w0, #22, 4187e0 <_obstack_memory_used@@Base+0x5b90>
  4187d0:	ldr	w0, [x22, #180]
  4187d4:	cmp	w0, #0x1
  4187d8:	b.gt	4189ac <_obstack_memory_used@@Base+0x5d5c>
  4187dc:	nop
  4187e0:	ldr	x0, [sp, #120]
  4187e4:	add	x21, x21, #0x1
  4187e8:	ldr	x2, [x0]
  4187ec:	cmp	x21, x2
  4187f0:	b.lt	418780 <_obstack_memory_used@@Base+0x5b30>  // b.tstop
  4187f4:	ldp	x19, x20, [sp, #16]
  4187f8:	ldp	x23, x24, [sp, #48]
  4187fc:	ldp	x21, x22, [sp, #32]
  418800:	ldp	x25, x26, [sp, #64]
  418804:	ldp	x27, x28, [sp, #80]
  418808:	ldp	x29, x30, [sp], #400
  41880c:	ret
  418810:	ldr	w0, [x22, #180]
  418814:	ldr	x24, [x1]
  418818:	cmp	w0, #0x1
  41881c:	b.le	418838 <_obstack_memory_used@@Base+0x5be8>
  418820:	ldr	x0, [x24, #72]
  418824:	cbnz	x0, 4188e8 <_obstack_memory_used@@Base+0x5c98>
  418828:	ldrb	w0, [x24, #32]
  41882c:	tbnz	w0, #0, 4188e8 <_obstack_memory_used@@Base+0x5c98>
  418830:	ldr	x0, [x24, #64]
  418834:	cbnz	x0, 4188e8 <_obstack_memory_used@@Base+0x5c98>
  418838:	ldr	x0, [x24, #40]
  41883c:	mov	x20, #0x0                   	// #0
  418840:	cmp	x0, #0x0
  418844:	b.gt	418858 <_obstack_memory_used@@Base+0x5c08>
  418848:	b	418774 <_obstack_memory_used@@Base+0x5b24>
  41884c:	ldr	x0, [x24, #40]
  418850:	cmp	x20, x0
  418854:	b.ge	4187e0 <_obstack_memory_used@@Base+0x5b90>  // b.tcont
  418858:	str	xzr, [sp, #136]
  41885c:	add	x2, sp, #0x88
  418860:	mov	x0, x23
  418864:	lsl	x19, x20, #2
  418868:	ldr	x1, [x24]
  41886c:	ldr	w1, [x1, x20, lsl #2]
  418870:	add	x20, x20, #0x1
  418874:	bl	402d40 <wcrtomb@plt>
  418878:	cmn	x0, #0x1
  41887c:	b.eq	4188a0 <_obstack_memory_used@@Base+0x5c50>  // b.none
  418880:	ldrb	w25, [sp, #144]
  418884:	and	x0, x25, #0xff
  418888:	strb	w27, [x28, x0]
  41888c:	cbz	w26, 4188a0 <_obstack_memory_used@@Base+0x5c50>
  418890:	bl	402770 <__ctype_tolower_loc@plt>
  418894:	ldr	x0, [x0]
  418898:	ldrsw	x0, [x0, x25, lsl #2]
  41889c:	strb	w27, [x28, x0]
  4188a0:	ldr	x0, [sp, #104]
  4188a4:	ldr	x0, [x0, #24]
  4188a8:	tbz	w0, #22, 41884c <_obstack_memory_used@@Base+0x5bfc>
  4188ac:	ldr	w0, [x22, #180]
  4188b0:	cmp	w0, #0x1
  4188b4:	b.le	41884c <_obstack_memory_used@@Base+0x5bfc>
  4188b8:	ldr	x0, [x24]
  4188bc:	ldr	w0, [x0, x19]
  4188c0:	bl	402cf0 <towlower@plt>
  4188c4:	mov	w1, w0
  4188c8:	add	x2, sp, #0x88
  4188cc:	mov	x0, x23
  4188d0:	bl	402d40 <wcrtomb@plt>
  4188d4:	cmn	x0, #0x1
  4188d8:	b.eq	41884c <_obstack_memory_used@@Base+0x5bfc>  // b.none
  4188dc:	ldrb	w0, [sp, #144]
  4188e0:	strb	w27, [x28, x0]
  4188e4:	b	41884c <_obstack_memory_used@@Base+0x5bfc>
  4188e8:	strb	wzr, [sp, #136]
  4188ec:	nop
  4188f0:	mov	x3, x23
  4188f4:	add	x1, sp, #0x88
  4188f8:	mov	x2, #0x1                   	// #1
  4188fc:	mov	x0, #0x0                   	// #0
  418900:	str	xzr, [x23]
  418904:	bl	412878 <wcrtomb@plt+0xfb38>
  418908:	cmn	x0, #0x2
  41890c:	b.ne	418918 <_obstack_memory_used@@Base+0x5cc8>  // b.any
  418910:	ldrb	w0, [sp, #136]
  418914:	strb	w27, [x28, x0]
  418918:	ldrb	w0, [sp, #136]
  41891c:	add	w0, w0, #0x1
  418920:	and	w0, w0, #0xff
  418924:	strb	w0, [sp, #136]
  418928:	cbnz	w0, 4188f0 <_obstack_memory_used@@Base+0x5ca0>
  41892c:	b	4187e0 <_obstack_memory_used@@Base+0x5b90>
  418930:	str	xzr, [sp, #96]
  418934:	ldr	x0, [x1]
  418938:	mov	w19, #0x0                   	// #0
  41893c:	ldr	x1, [sp, #96]
  418940:	ldr	x25, [x0, x1]
  418944:	lsl	x20, x1, #3
  418948:	lsr	x0, x25, x19
  41894c:	add	w19, w19, #0x1
  418950:	tbz	w0, #0, 418980 <_obstack_memory_used@@Base+0x5d30>
  418954:	strb	w27, [x28, x20]
  418958:	add	w0, w20, #0x80
  41895c:	add	x2, x28, x20
  418960:	cmp	w0, #0x17f
  418964:	cbz	w26, 418980 <_obstack_memory_used@@Base+0x5d30>
  418968:	b.hi	41897c <_obstack_memory_used@@Base+0x5d2c>  // b.pmore
  41896c:	bl	402770 <__ctype_tolower_loc@plt>
  418970:	ldr	x0, [x0]
  418974:	ldrsw	x2, [x0, x20, lsl #2]
  418978:	add	x2, x28, x2
  41897c:	strb	w27, [x2]
  418980:	add	x20, x20, #0x1
  418984:	cmp	w19, #0x40
  418988:	b.ne	418948 <_obstack_memory_used@@Base+0x5cf8>  // b.any
  41898c:	ldr	x0, [sp, #96]
  418990:	add	x0, x0, #0x8
  418994:	str	x0, [sp, #96]
  418998:	cmp	x0, #0x20
  41899c:	b.eq	4187e0 <_obstack_memory_used@@Base+0x5b90>  // b.none
  4189a0:	ldr	x0, [x22]
  4189a4:	add	x1, x0, x24
  4189a8:	b	418934 <_obstack_memory_used@@Base+0x5ce4>
  4189ac:	ldr	x2, [x22]
  4189b0:	add	x0, x20, #0x1
  4189b4:	add	x7, x23, #0x1
  4189b8:	ldrb	w1, [x2, x24]
  4189bc:	strb	w1, [sp, #144]
  4189c0:	ldr	x1, [x22, #16]
  4189c4:	cmp	x0, x1
  4189c8:	b.cs	418acc <_obstack_memory_used@@Base+0x5e7c>  // b.hs, b.nlast
  4189cc:	mov	w9, #0xff                  	// #255
  4189d0:	mov	w8, #0x1                   	// #1
  4189d4:	movk	w9, #0x20, lsl #16
  4189d8:	movk	w8, #0x20, lsl #16
  4189dc:	b	4189f8 <_obstack_memory_used@@Base+0x5da8>
  4189e0:	ldrb	w1, [x2, x3]
  4189e4:	strb	w1, [x7], #1
  4189e8:	ldr	x1, [x22, #16]
  4189ec:	cmp	x1, x0
  4189f0:	b.ls	418a14 <_obstack_memory_used@@Base+0x5dc4>  // b.plast
  4189f4:	ldr	x2, [x22]
  4189f8:	lsl	x3, x0, #4
  4189fc:	add	x1, x2, x3
  418a00:	add	x0, x0, #0x1
  418a04:	ldr	w1, [x1, #8]
  418a08:	and	w1, w1, w9
  418a0c:	cmp	w1, w8
  418a10:	b.eq	4189e0 <_obstack_memory_used@@Base+0x5d90>  // b.none
  418a14:	sub	x19, x7, x23
  418a18:	add	x3, sp, #0x88
  418a1c:	mov	x2, x19
  418a20:	mov	x1, x23
  418a24:	add	x0, sp, #0x84
  418a28:	str	xzr, [sp, #136]
  418a2c:	bl	412878 <wcrtomb@plt+0xfb38>
  418a30:	cmp	x0, x19
  418a34:	b.ne	4187e0 <_obstack_memory_used@@Base+0x5b90>  // b.any
  418a38:	ldr	w0, [sp, #132]
  418a3c:	bl	402cf0 <towlower@plt>
  418a40:	mov	w1, w0
  418a44:	add	x2, sp, #0x88
  418a48:	mov	x0, x23
  418a4c:	bl	402d40 <wcrtomb@plt>
  418a50:	cmn	x0, #0x1
  418a54:	b.eq	4187e0 <_obstack_memory_used@@Base+0x5b90>  // b.none
  418a58:	ldrb	w0, [sp, #144]
  418a5c:	strb	w27, [x28, x0]
  418a60:	ldr	x0, [sp, #120]
  418a64:	ldr	x2, [x0]
  418a68:	b	418774 <_obstack_memory_used@@Base+0x5b24>
  418a6c:	mov	x0, x28
  418a70:	mov	x2, #0x100                 	// #256
  418a74:	mov	w1, #0x1                   	// #1
  418a78:	bl	4028d0 <memset@plt>
  418a7c:	cmp	w19, #0x2
  418a80:	b.eq	418aa0 <_obstack_memory_used@@Base+0x5e50>  // b.none
  418a84:	ldp	x19, x20, [sp, #16]
  418a88:	ldp	x23, x24, [sp, #48]
  418a8c:	b	4187fc <_obstack_memory_used@@Base+0x5bac>
  418a90:	mov	x0, x28
  418a94:	mov	x2, #0x100                 	// #256
  418a98:	mov	w1, #0x1                   	// #1
  418a9c:	bl	4028d0 <memset@plt>
  418aa0:	ldr	x1, [sp, #104]
  418aa4:	ldp	x19, x20, [sp, #16]
  418aa8:	ldrb	w0, [x1, #56]
  418aac:	ldp	x23, x24, [sp, #48]
  418ab0:	orr	w0, w0, #0x1
  418ab4:	strb	w0, [x1, #56]
  418ab8:	ldp	x21, x22, [sp, #32]
  418abc:	ldp	x25, x26, [sp, #64]
  418ac0:	ldp	x27, x28, [sp, #80]
  418ac4:	ldp	x29, x30, [sp], #400
  418ac8:	ret
  418acc:	mov	x19, #0x1                   	// #1
  418ad0:	b	418a18 <_obstack_memory_used@@Base+0x5dc8>
  418ad4:	nop
  418ad8:	lsl	x7, x2, #4
  418adc:	stp	x29, x30, [sp, #-48]!
  418ae0:	mov	x8, x0
  418ae4:	add	x0, x0, x7
  418ae8:	mov	x29, sp
  418aec:	mov	x5, x3
  418af0:	stp	x19, x20, [sp, #16]
  418af4:	mov	x6, x4
  418af8:	ldrb	w10, [x0, #8]
  418afc:	cmp	w10, #0x7
  418b00:	b.eq	418c30 <_obstack_memory_used@@Base+0x5fe0>  // b.none
  418b04:	ldr	w0, [x3, #144]
  418b08:	cmp	w0, #0x1
  418b0c:	b.eq	418b38 <_obstack_memory_used@@Base+0x5ee8>  // b.none
  418b10:	mov	x9, x1
  418b14:	mov	x0, x3
  418b18:	mov	x1, x4
  418b1c:	bl	414880 <_obstack_memory_used@@Base+0x1c30>
  418b20:	mov	w19, w0
  418b24:	cmp	w10, #0x5
  418b28:	b.eq	418b4c <_obstack_memory_used@@Base+0x5efc>  // b.none
  418b2c:	cmp	w10, #0x6
  418b30:	ccmp	w0, #0x1, #0x4, eq  // eq = none
  418b34:	b.ne	418b80 <_obstack_memory_used@@Base+0x5f30>  // b.any
  418b38:	mov	w19, #0x0                   	// #0
  418b3c:	mov	w0, w19
  418b40:	ldp	x19, x20, [sp, #16]
  418b44:	ldp	x29, x30, [sp], #48
  418b48:	ret
  418b4c:	cmp	w0, #0x1
  418b50:	b.eq	418b38 <_obstack_memory_used@@Base+0x5ee8>  // b.none
  418b54:	ldr	x0, [x9]
  418b58:	tbnz	w0, #6, 418b6c <_obstack_memory_used@@Base+0x5f1c>
  418b5c:	ldr	x1, [x5, #8]
  418b60:	ldrb	w1, [x1, x6]
  418b64:	cmp	w1, #0xa
  418b68:	b.eq	418b38 <_obstack_memory_used@@Base+0x5ee8>  // b.none
  418b6c:	tbz	w0, #7, 418b3c <_obstack_memory_used@@Base+0x5eec>
  418b70:	ldr	x0, [x5, #8]
  418b74:	ldrb	w0, [x0, x6]
  418b78:	cbz	w0, 418b38 <_obstack_memory_used@@Base+0x5ee8>
  418b7c:	b	418b3c <_obstack_memory_used@@Base+0x5eec>
  418b80:	stp	x21, x22, [sp, #32]
  418b84:	ldr	x22, [x8, x7]
  418b88:	ldr	x4, [x22, #64]
  418b8c:	ldr	x2, [x22, #40]
  418b90:	cbnz	x4, 418ba0 <_obstack_memory_used@@Base+0x5f50>
  418b94:	ldr	x0, [x22, #72]
  418b98:	orr	x0, x2, x0
  418b9c:	cbz	x0, 418c20 <_obstack_memory_used@@Base+0x5fd0>
  418ba0:	ldr	x0, [x5, #16]
  418ba4:	cmp	x2, #0x0
  418ba8:	ldr	w20, [x0, x6, lsl #2]
  418bac:	b.le	418cb8 <_obstack_memory_used@@Base+0x6068>
  418bb0:	mov	x1, #0x0                   	// #0
  418bb4:	ldr	x3, [x22]
  418bb8:	b	418bc4 <_obstack_memory_used@@Base+0x5f74>
  418bbc:	cmp	x1, x2
  418bc0:	b.eq	418cb8 <_obstack_memory_used@@Base+0x6068>  // b.none
  418bc4:	ldr	w0, [x3, x1, lsl #2]
  418bc8:	add	x1, x1, #0x1
  418bcc:	cmp	w20, w0
  418bd0:	b.ne	418bbc <_obstack_memory_used@@Base+0x5f6c>  // b.any
  418bd4:	ldrb	w0, [x22, #32]
  418bd8:	tbz	w0, #0, 418c28 <_obstack_memory_used@@Base+0x5fd8>
  418bdc:	ldp	x21, x22, [sp, #32]
  418be0:	b	418b38 <_obstack_memory_used@@Base+0x5ee8>
  418be4:	ldr	x4, [x22, #64]
  418be8:	cmp	x4, #0x0
  418bec:	b.le	418c20 <_obstack_memory_used@@Base+0x5fd0>
  418bf0:	ldr	x2, [x22, #8]
  418bf4:	mov	x0, #0x0                   	// #0
  418bf8:	ldr	w1, [x2, x0, lsl #2]
  418bfc:	cmp	w20, w1
  418c00:	b.cc	418c14 <_obstack_memory_used@@Base+0x5fc4>  // b.lo, b.ul, b.last
  418c04:	ldr	x1, [x22, #16]
  418c08:	ldr	w1, [x1, x0, lsl #2]
  418c0c:	cmp	w20, w1
  418c10:	b.ls	418bd4 <_obstack_memory_used@@Base+0x5f84>  // b.plast
  418c14:	add	x0, x0, #0x1
  418c18:	cmp	x0, x4
  418c1c:	b.ne	418bf8 <_obstack_memory_used@@Base+0x5fa8>  // b.any
  418c20:	ldrb	w0, [x22, #32]
  418c24:	tbz	w0, #0, 418bdc <_obstack_memory_used@@Base+0x5f8c>
  418c28:	ldp	x21, x22, [sp, #32]
  418c2c:	b	418b3c <_obstack_memory_used@@Base+0x5eec>
  418c30:	ldr	x0, [x3, #8]
  418c34:	add	x1, x0, x4
  418c38:	ldrb	w0, [x0, x4]
  418c3c:	cmp	w0, #0xc1
  418c40:	b.ls	418b38 <_obstack_memory_used@@Base+0x5ee8>  // b.plast
  418c44:	ldr	x2, [x5, #88]
  418c48:	add	x3, x4, #0x1
  418c4c:	cmp	x3, x2
  418c50:	b.ge	418b38 <_obstack_memory_used@@Base+0x5ee8>  // b.tcont
  418c54:	ldrb	w3, [x1, #1]
  418c58:	cmp	w0, #0xdf
  418c5c:	b.ls	418d18 <_obstack_memory_used@@Base+0x60c8>  // b.plast
  418c60:	cmp	w0, #0xef
  418c64:	b.hi	418cf4 <_obstack_memory_used@@Base+0x60a4>  // b.pmore
  418c68:	cmp	w0, #0xe0
  418c6c:	mov	w0, #0x9f                  	// #159
  418c70:	ccmp	w3, w0, #0x2, eq  // eq = none
  418c74:	b.ls	418b38 <_obstack_memory_used@@Base+0x5ee8>  // b.plast
  418c78:	mov	x3, #0x3                   	// #3
  418c7c:	mov	w19, w3
  418c80:	add	x6, x6, x3
  418c84:	cmp	x2, x6
  418c88:	b.lt	418b38 <_obstack_memory_used@@Base+0x5ee8>  // b.tstop
  418c8c:	mov	x2, #0x1                   	// #1
  418c90:	b	418c9c <_obstack_memory_used@@Base+0x604c>
  418c94:	cmp	x2, x3
  418c98:	b.eq	418b3c <_obstack_memory_used@@Base+0x5eec>  // b.none
  418c9c:	ldrb	w0, [x1, x2]
  418ca0:	add	x2, x2, #0x1
  418ca4:	sub	w0, w0, #0x80
  418ca8:	and	w0, w0, #0xff
  418cac:	cmp	w0, #0x3f
  418cb0:	b.ls	418c94 <_obstack_memory_used@@Base+0x6044>  // b.plast
  418cb4:	b	418b38 <_obstack_memory_used@@Base+0x5ee8>
  418cb8:	ldr	x0, [x22, #72]
  418cbc:	cmp	x0, #0x0
  418cc0:	b.le	418be8 <_obstack_memory_used@@Base+0x5f98>
  418cc4:	mov	x21, #0x0                   	// #0
  418cc8:	b	418cd8 <_obstack_memory_used@@Base+0x6088>
  418ccc:	ldr	x0, [x22, #72]
  418cd0:	cmp	x21, x0
  418cd4:	b.ge	418be4 <_obstack_memory_used@@Base+0x5f94>  // b.tcont
  418cd8:	ldr	x1, [x22, #24]
  418cdc:	mov	w0, w20
  418ce0:	ldr	x1, [x1, x21, lsl #3]
  418ce4:	add	x21, x21, #0x1
  418ce8:	bl	4027f0 <iswctype@plt>
  418cec:	cbz	w0, 418ccc <_obstack_memory_used@@Base+0x607c>
  418cf0:	b	418bd4 <_obstack_memory_used@@Base+0x5f84>
  418cf4:	cmp	w0, #0xf7
  418cf8:	b.hi	418d30 <_obstack_memory_used@@Base+0x60e0>  // b.pmore
  418cfc:	cmp	w0, #0xf0
  418d00:	mov	w0, #0x8f                  	// #143
  418d04:	ccmp	w3, w0, #0x2, eq  // eq = none
  418d08:	b.ls	418b38 <_obstack_memory_used@@Base+0x5ee8>  // b.plast
  418d0c:	mov	x3, #0x4                   	// #4
  418d10:	mov	w19, w3
  418d14:	b	418c80 <_obstack_memory_used@@Base+0x6030>
  418d18:	sub	w0, w3, #0x80
  418d1c:	mov	w19, #0x2                   	// #2
  418d20:	and	w0, w0, #0xff
  418d24:	cmp	w0, #0x3f
  418d28:	b.ls	418b3c <_obstack_memory_used@@Base+0x5eec>  // b.plast
  418d2c:	b	418b38 <_obstack_memory_used@@Base+0x5ee8>
  418d30:	cmp	w0, #0xfb
  418d34:	b.hi	418d54 <_obstack_memory_used@@Base+0x6104>  // b.pmore
  418d38:	cmp	w0, #0xf8
  418d3c:	mov	w0, #0x87                  	// #135
  418d40:	ccmp	w3, w0, #0x2, eq  // eq = none
  418d44:	b.ls	418b38 <_obstack_memory_used@@Base+0x5ee8>  // b.plast
  418d48:	mov	x3, #0x5                   	// #5
  418d4c:	mov	w19, w3
  418d50:	b	418c80 <_obstack_memory_used@@Base+0x6030>
  418d54:	cmp	w0, #0xfd
  418d58:	b.hi	418b38 <_obstack_memory_used@@Base+0x5ee8>  // b.pmore
  418d5c:	cmp	w0, #0xfc
  418d60:	mov	w0, #0x83                  	// #131
  418d64:	ccmp	w3, w0, #0x2, eq  // eq = none
  418d68:	b.ls	418b38 <_obstack_memory_used@@Base+0x5ee8>  // b.plast
  418d6c:	mov	x3, #0x6                   	// #6
  418d70:	mov	w19, w3
  418d74:	b	418c80 <_obstack_memory_used@@Base+0x6030>
  418d78:	stp	x29, x30, [sp, #-240]!
  418d7c:	mov	x29, sp
  418d80:	stp	x27, x28, [sp, #80]
  418d84:	ldr	x27, [x0, #152]
  418d88:	stp	x19, x20, [sp, #16]
  418d8c:	mov	x20, x2
  418d90:	stp	x21, x22, [sp, #32]
  418d94:	mov	x19, x3
  418d98:	str	x1, [sp, #144]
  418d9c:	ldr	x22, [x1, #8]
  418da0:	lsl	x1, x2, #4
  418da4:	ldr	x2, [x27]
  418da8:	stp	x25, x26, [sp, #64]
  418dac:	mov	x26, x0
  418db0:	ldrsw	x0, [x0, #224]
  418db4:	ldr	x1, [x2, x1]
  418db8:	stp	x23, x24, [sp, #48]
  418dbc:	add	x0, x0, x5
  418dc0:	str	x5, [sp, #120]
  418dc4:	cmp	x0, x22
  418dc8:	str	x1, [sp, #128]
  418dcc:	str	w6, [sp, #140]
  418dd0:	str	x4, [sp, #168]
  418dd4:	str	wzr, [sp, #184]
  418dd8:	b.ge	419214 <_obstack_memory_used@@Base+0x65c4>  // b.tcont
  418ddc:	ldr	x0, [sp, #144]
  418de0:	ldr	w2, [x26, #160]
  418de4:	ldr	x21, [x0]
  418de8:	ldr	x22, [x0, #16]
  418dec:	ldr	x0, [x26, #72]
  418df0:	str	x0, [sp, #160]
  418df4:	ldr	x0, [x26, #184]
  418df8:	str	x0, [sp, #152]
  418dfc:	cbz	x21, 4191b0 <_obstack_memory_used@@Base+0x6560>
  418e00:	str	x21, [x26, #72]
  418e04:	sub	x1, x21, #0x1
  418e08:	str	x22, [x26, #184]
  418e0c:	mov	x0, x26
  418e10:	bl	417058 <_obstack_memory_used@@Base+0x4408>
  418e14:	mov	w23, w0
  418e18:	cmp	x21, x19
  418e1c:	b.eq	4191c8 <_obstack_memory_used@@Base+0x6578>  // b.none
  418e20:	ldr	x19, [x22, x21, lsl #3]
  418e24:	cbz	x19, 418e30 <_obstack_memory_used@@Base+0x61e0>
  418e28:	ldrb	w0, [x19, #104]
  418e2c:	tbnz	w0, #6, 419058 <_obstack_memory_used@@Base+0x6408>
  418e30:	stp	xzr, xzr, [sp, #192]
  418e34:	str	xzr, [sp, #208]
  418e38:	ldr	x0, [sp, #120]
  418e3c:	cmp	x21, x0
  418e40:	b.ge	418fc0 <_obstack_memory_used@@Base+0x6370>  // b.tcont
  418e44:	add	x22, x21, #0x1
  418e48:	str	xzr, [sp, #96]
  418e4c:	ldr	x1, [sp, #96]
  418e50:	sub	x21, x22, #0x1
  418e54:	ldrsw	x0, [x26, #224]
  418e58:	cmp	x1, x0
  418e5c:	b.gt	418fc0 <_obstack_memory_used@@Base+0x6370>
  418e60:	ldr	x0, [x26, #184]
  418e64:	lsl	x1, x22, #3
  418e68:	str	x1, [sp, #104]
  418e6c:	str	xzr, [sp, #200]
  418e70:	ldr	x1, [x0, x22, lsl #3]
  418e74:	cbz	x1, 419180 <_obstack_memory_used@@Base+0x6530>
  418e78:	add	x1, x1, #0x8
  418e7c:	add	x0, sp, #0xc0
  418e80:	bl	414d40 <_obstack_memory_used@@Base+0x20f0>
  418e84:	str	w0, [sp, #184]
  418e88:	cbnz	w0, 419030 <_obstack_memory_used@@Base+0x63e0>
  418e8c:	cbz	x19, 418f28 <_obstack_memory_used@@Base+0x62d8>
  418e90:	ldr	x0, [x19, #40]
  418e94:	str	wzr, [sp, #188]
  418e98:	stp	xzr, xzr, [sp, #216]
  418e9c:	add	x19, x19, #0x20
  418ea0:	cmp	x0, #0x0
  418ea4:	str	xzr, [sp, #232]
  418ea8:	ldr	x23, [x26, #152]
  418eac:	b.le	419298 <_obstack_memory_used@@Base+0x6648>
  418eb0:	add	x0, x23, #0xd8
  418eb4:	mov	x24, #0x0                   	// #0
  418eb8:	str	x0, [sp, #112]
  418ebc:	nop
  418ec0:	ldr	x1, [x19, #16]
  418ec4:	ldr	x0, [x23]
  418ec8:	ldr	x28, [x1, x24, lsl #3]
  418ecc:	lsl	x20, x28, #4
  418ed0:	add	x1, x0, x20
  418ed4:	ldrb	w2, [x1, #10]
  418ed8:	tbnz	w2, #4, 4190c8 <_obstack_memory_used@@Base+0x6478>
  418edc:	mov	x2, x21
  418ee0:	mov	x0, x26
  418ee4:	bl	417158 <_obstack_memory_used@@Base+0x4508>
  418ee8:	tst	w0, #0xff
  418eec:	b.eq	418f0c <_obstack_memory_used@@Base+0x62bc>  // b.none
  418ef0:	lsl	x25, x28, #3
  418ef4:	ldr	x1, [x23, #24]
  418ef8:	add	x0, sp, #0xc0
  418efc:	ldr	x1, [x1, x25]
  418f00:	bl	413350 <_obstack_memory_used@@Base+0x700>
  418f04:	tst	w0, #0xff
  418f08:	b.eq	419020 <_obstack_memory_used@@Base+0x63d0>  // b.none
  418f0c:	ldr	x0, [x19, #8]
  418f10:	add	x24, x24, #0x1
  418f14:	cmp	x24, x0
  418f18:	b.lt	418ec0 <_obstack_memory_used@@Base+0x6270>  // b.tstop
  418f1c:	ldr	x0, [sp, #232]
  418f20:	bl	402ae0 <free@plt>
  418f24:	str	wzr, [sp, #184]
  418f28:	ldr	x0, [sp, #200]
  418f2c:	mov	x20, x22
  418f30:	cbz	x0, 418f70 <_obstack_memory_used@@Base+0x6320>
  418f34:	ldr	w3, [sp, #140]
  418f38:	add	x1, sp, #0xc0
  418f3c:	ldr	x2, [sp, #128]
  418f40:	mov	x0, x27
  418f44:	bl	415160 <_obstack_memory_used@@Base+0x2510>
  418f48:	str	w0, [sp, #184]
  418f4c:	cbnz	w0, 419030 <_obstack_memory_used@@Base+0x63e0>
  418f50:	ldr	w4, [sp, #140]
  418f54:	mov	x2, x22
  418f58:	ldr	x3, [sp, #128]
  418f5c:	add	x1, sp, #0xc0
  418f60:	mov	x0, x26
  418f64:	bl	4160c0 <_obstack_memory_used@@Base+0x3470>
  418f68:	str	w0, [sp, #184]
  418f6c:	cbnz	w0, 419030 <_obstack_memory_used@@Base+0x63e0>
  418f70:	ldr	w2, [x26, #160]
  418f74:	mov	x1, x21
  418f78:	mov	x0, x26
  418f7c:	bl	417058 <_obstack_memory_used@@Base+0x4408>
  418f80:	mov	w3, w0
  418f84:	add	x2, sp, #0xc0
  418f88:	mov	x1, x27
  418f8c:	add	x0, sp, #0xb8
  418f90:	bl	415ae8 <_obstack_memory_used@@Base+0x2e98>
  418f94:	mov	x19, x0
  418f98:	cbz	x0, 41918c <_obstack_memory_used@@Base+0x653c>
  418f9c:	ldr	x1, [sp, #104]
  418fa0:	str	xzr, [sp, #96]
  418fa4:	ldr	x0, [x26, #184]
  418fa8:	str	x19, [x0, x1]
  418fac:	ldr	x0, [sp, #120]
  418fb0:	add	x22, x22, #0x1
  418fb4:	cmp	x20, x0
  418fb8:	b.lt	418e4c <_obstack_memory_used@@Base+0x61fc>  // b.tstop
  418fbc:	mov	x21, x20
  418fc0:	ldr	x0, [sp, #208]
  418fc4:	bl	402ae0 <free@plt>
  418fc8:	ldr	x1, [sp, #120]
  418fcc:	ldr	x0, [x26, #184]
  418fd0:	ldr	x0, [x0, x1, lsl #3]
  418fd4:	cbz	x0, 419278 <_obstack_memory_used@@Base+0x6628>
  418fd8:	ldp	x1, x3, [sp, #144]
  418fdc:	str	x21, [x1]
  418fe0:	ldr	x1, [sp, #160]
  418fe4:	str	x1, [x26, #72]
  418fe8:	add	x1, x0, #0x18
  418fec:	str	x3, [x26, #184]
  418ff0:	ldr	x0, [x0, #16]
  418ff4:	ldr	x2, [sp, #168]
  418ff8:	bl	4148c8 <_obstack_memory_used@@Base+0x1c78>
  418ffc:	cmp	x0, #0x0
  419000:	cset	w0, eq  // eq = none
  419004:	ldp	x19, x20, [sp, #16]
  419008:	ldp	x21, x22, [sp, #32]
  41900c:	ldp	x23, x24, [sp, #48]
  419010:	ldp	x25, x26, [sp, #64]
  419014:	ldp	x27, x28, [sp, #80]
  419018:	ldp	x29, x30, [sp], #240
  41901c:	ret
  419020:	ldr	x0, [sp, #232]
  419024:	bl	402ae0 <free@plt>
  419028:	mov	w0, #0xc                   	// #12
  41902c:	str	w0, [sp, #184]
  419030:	ldr	x0, [sp, #208]
  419034:	bl	402ae0 <free@plt>
  419038:	ldr	w0, [sp, #184]
  41903c:	ldp	x19, x20, [sp, #16]
  419040:	ldp	x21, x22, [sp, #32]
  419044:	ldp	x23, x24, [sp, #48]
  419048:	ldp	x25, x26, [sp, #64]
  41904c:	ldp	x27, x28, [sp, #80]
  419050:	ldp	x29, x30, [sp], #240
  419054:	ret
  419058:	add	x22, sp, #0xc0
  41905c:	add	x1, x19, #0x8
  419060:	mov	x0, x22
  419064:	bl	4158e8 <_obstack_memory_used@@Base+0x2c98>
  419068:	str	w0, [sp, #184]
  41906c:	cbnz	w0, 41903c <_obstack_memory_used@@Base+0x63ec>
  419070:	ldrb	w0, [x19, #104]
  419074:	tbz	w0, #6, 418e38 <_obstack_memory_used@@Base+0x61e8>
  419078:	ldr	x0, [sp, #200]
  41907c:	cbz	x0, 4190a0 <_obstack_memory_used@@Base+0x6450>
  419080:	ldr	w4, [sp, #140]
  419084:	mov	x2, x21
  419088:	ldr	x3, [sp, #128]
  41908c:	mov	x1, x22
  419090:	mov	x0, x26
  419094:	bl	4160c0 <_obstack_memory_used@@Base+0x3470>
  419098:	str	w0, [sp, #184]
  41909c:	cbnz	w0, 419030 <_obstack_memory_used@@Base+0x63e0>
  4190a0:	mov	w3, w23
  4190a4:	mov	x2, x22
  4190a8:	mov	x1, x27
  4190ac:	add	x0, sp, #0xb8
  4190b0:	bl	415ae8 <_obstack_memory_used@@Base+0x2e98>
  4190b4:	mov	x19, x0
  4190b8:	cbz	x0, 419264 <_obstack_memory_used@@Base+0x6614>
  4190bc:	ldr	x0, [x26, #184]
  4190c0:	str	x19, [x0, x21, lsl #3]
  4190c4:	b	418e38 <_obstack_memory_used@@Base+0x61e8>
  4190c8:	ldr	x1, [sp, #112]
  4190cc:	mov	x4, x21
  4190d0:	mov	x3, x26
  4190d4:	mov	x2, x28
  4190d8:	bl	418ad8 <_obstack_memory_used@@Base+0x5e88>
  4190dc:	cmp	w0, #0x1
  4190e0:	b.le	419170 <_obstack_memory_used@@Base+0x6520>
  4190e4:	ldr	x1, [x26, #184]
  4190e8:	add	x20, x21, w0, sxtw
  4190ec:	ldr	x0, [x23, #24]
  4190f0:	lsl	x25, x28, #3
  4190f4:	ldr	x1, [x1, x20, lsl #3]
  4190f8:	ldr	x28, [x0, x28, lsl #3]
  4190fc:	str	xzr, [sp, #224]
  419100:	cbz	x1, 419118 <_obstack_memory_used@@Base+0x64c8>
  419104:	add	x1, x1, #0x8
  419108:	add	x0, sp, #0xd8
  41910c:	bl	414d40 <_obstack_memory_used@@Base+0x20f0>
  419110:	str	w0, [sp, #188]
  419114:	cbnz	w0, 419158 <_obstack_memory_used@@Base+0x6508>
  419118:	mov	x1, x28
  41911c:	add	x0, sp, #0xd8
  419120:	bl	413350 <_obstack_memory_used@@Base+0x700>
  419124:	tst	w0, #0xff
  419128:	b.eq	419020 <_obstack_memory_used@@Base+0x63d0>  // b.none
  41912c:	ldr	x28, [x26, #184]
  419130:	mov	x1, x23
  419134:	add	x2, sp, #0xd8
  419138:	add	x0, sp, #0xbc
  41913c:	bl	415dd8 <_obstack_memory_used@@Base+0x3188>
  419140:	ldr	x1, [x26, #184]
  419144:	str	x0, [x28, x20, lsl #3]
  419148:	ldr	x0, [x1, x20, lsl #3]
  41914c:	cbnz	x0, 418ef4 <_obstack_memory_used@@Base+0x62a4>
  419150:	ldr	w0, [sp, #188]
  419154:	cbz	w0, 418ef4 <_obstack_memory_used@@Base+0x62a4>
  419158:	ldr	x0, [sp, #232]
  41915c:	bl	402ae0 <free@plt>
  419160:	ldr	w0, [sp, #188]
  419164:	str	w0, [sp, #184]
  419168:	cbz	w0, 418f28 <_obstack_memory_used@@Base+0x62d8>
  41916c:	b	419030 <_obstack_memory_used@@Base+0x63e0>
  419170:	cbnz	w0, 418ef0 <_obstack_memory_used@@Base+0x62a0>
  419174:	ldr	x1, [x23]
  419178:	add	x1, x1, x20
  41917c:	b	418edc <_obstack_memory_used@@Base+0x628c>
  419180:	cbnz	x19, 418e90 <_obstack_memory_used@@Base+0x6240>
  419184:	mov	x20, x22
  419188:	b	418f70 <_obstack_memory_used@@Base+0x6320>
  41918c:	ldr	w0, [sp, #184]
  419190:	cbnz	w0, 419030 <_obstack_memory_used@@Base+0x63e0>
  419194:	ldr	x1, [sp, #96]
  419198:	ldr	x0, [x26, #184]
  41919c:	add	x1, x1, #0x1
  4191a0:	str	x1, [sp, #96]
  4191a4:	ldr	x1, [sp, #104]
  4191a8:	str	xzr, [x0, x1]
  4191ac:	b	418fac <_obstack_memory_used@@Base+0x635c>
  4191b0:	str	x19, [x26, #72]
  4191b4:	sub	x1, x19, #0x1
  4191b8:	str	x22, [x26, #184]
  4191bc:	mov	x0, x26
  4191c0:	bl	417058 <_obstack_memory_used@@Base+0x4408>
  4191c4:	mov	w23, w0
  4191c8:	mov	x1, #0x1                   	// #1
  4191cc:	mov	x0, #0x8                   	// #8
  4191d0:	stp	x1, x1, [sp, #192]
  4191d4:	bl	402800 <malloc@plt>
  4191d8:	str	x0, [sp, #208]
  4191dc:	mov	x4, x0
  4191e0:	cbz	x0, 419270 <_obstack_memory_used@@Base+0x6620>
  4191e4:	ldr	w3, [sp, #140]
  4191e8:	add	x22, sp, #0xc0
  4191ec:	ldr	x2, [sp, #128]
  4191f0:	str	x20, [x4]
  4191f4:	mov	x1, x22
  4191f8:	mov	x0, x27
  4191fc:	str	wzr, [sp, #184]
  419200:	mov	x21, x19
  419204:	bl	415160 <_obstack_memory_used@@Base+0x2510>
  419208:	str	w0, [sp, #184]
  41920c:	cbz	w0, 419078 <_obstack_memory_used@@Base+0x6428>
  419210:	b	419030 <_obstack_memory_used@@Base+0x63e0>
  419214:	add	x21, x0, #0x1
  419218:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  41921c:	sub	x0, x0, x22
  419220:	cmp	x0, x21
  419224:	b.lt	419270 <_obstack_memory_used@@Base+0x6620>  // b.tstop
  419228:	add	x23, x22, x21
  41922c:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
  419230:	cmp	x23, x0
  419234:	b.hi	419270 <_obstack_memory_used@@Base+0x6620>  // b.pmore
  419238:	ldr	x24, [sp, #144]
  41923c:	lsl	x1, x23, #3
  419240:	ldr	x0, [x24, #16]
  419244:	bl	402930 <realloc@plt>
  419248:	cbz	x0, 419270 <_obstack_memory_used@@Base+0x6620>
  41924c:	stp	x23, x0, [x24, #8]
  419250:	lsl	x2, x21, #3
  419254:	add	x0, x0, x22, lsl #3
  419258:	mov	w1, #0x0                   	// #0
  41925c:	bl	4028d0 <memset@plt>
  419260:	b	418ddc <_obstack_memory_used@@Base+0x618c>
  419264:	ldr	w0, [sp, #184]
  419268:	cbz	w0, 4190bc <_obstack_memory_used@@Base+0x646c>
  41926c:	b	419030 <_obstack_memory_used@@Base+0x63e0>
  419270:	mov	w0, #0xc                   	// #12
  419274:	b	41903c <_obstack_memory_used@@Base+0x63ec>
  419278:	ldr	x0, [sp, #144]
  41927c:	ldr	x1, [sp, #160]
  419280:	str	x21, [x0]
  419284:	mov	w0, #0x1                   	// #1
  419288:	str	x1, [x26, #72]
  41928c:	ldr	x1, [sp, #152]
  419290:	str	x1, [x26, #184]
  419294:	b	41903c <_obstack_memory_used@@Base+0x63ec>
  419298:	mov	x0, #0x0                   	// #0
  41929c:	b	418f20 <_obstack_memory_used@@Base+0x62d0>
  4192a0:	stp	x29, x30, [sp, #-208]!
  4192a4:	mov	x5, #0x2                   	// #2
  4192a8:	tst	w4, #0xff
  4192ac:	mov	x29, sp
  4192b0:	stp	x19, x20, [sp, #16]
  4192b4:	mov	x19, x1
  4192b8:	mov	x20, x3
  4192bc:	stp	x21, x22, [sp, #32]
  4192c0:	mov	x21, x2
  4192c4:	stp	x23, x24, [sp, #48]
  4192c8:	stp	x25, x26, [sp, #64]
  4192cc:	stp	x27, x28, [sp, #80]
  4192d0:	stp	xzr, x5, [x29, #184]
  4192d4:	str	xzr, [x29, #200]
  4192d8:	ldr	x24, [x0]
  4192dc:	b.eq	419870 <_obstack_memory_used@@Base+0x6c20>  // b.none
  4192e0:	mov	x0, #0x60                  	// #96
  4192e4:	bl	402800 <malloc@plt>
  4192e8:	str	x0, [x29, #200]
  4192ec:	add	x22, x29, #0xb8
  4192f0:	cbz	x0, 4197d4 <_obstack_memory_used@@Base+0x6b84>
  4192f4:	lsl	x0, x21, #4
  4192f8:	str	x0, [x29, #136]
  4192fc:	stp	xzr, xzr, [x29, #160]
  419300:	cmp	x0, #0xfbf
  419304:	str	xzr, [x29, #176]
  419308:	ldr	x28, [x24, #144]
  41930c:	b.hi	419890 <_obstack_memory_used@@Base+0x6c40>  // b.pmore
  419310:	sub	sp, sp, x0
  419314:	str	wzr, [x29, #108]
  419318:	mov	x0, sp
  41931c:	str	x0, [x29, #120]
  419320:	ldr	x0, [x29, #120]
  419324:	mov	x1, x20
  419328:	ldr	x2, [x29, #136]
  41932c:	bl	402650 <memcpy@plt>
  419330:	ldr	x3, [x20]
  419334:	add	x0, x29, #0xb0
  419338:	str	x0, [x29, #112]
  41933c:	str	x3, [x29, #152]
  419340:	add	x0, x22, #0x10
  419344:	str	x0, [x29, #128]
  419348:	ldr	x0, [x20, #8]
  41934c:	cmp	x0, x3
  419350:	b.lt	419424 <_obstack_memory_used@@Base+0x67d4>  // b.tstop
  419354:	nop
  419358:	ldr	x2, [x24]
  41935c:	lsl	x26, x28, #4
  419360:	mov	x23, x28
  419364:	add	x4, x2, x26
  419368:	ldrb	w1, [x4, #8]
  41936c:	cmp	w1, #0x8
  419370:	b.eq	41949c <_obstack_memory_used@@Base+0x684c>  // b.none
  419374:	cmp	w1, #0x9
  419378:	b.eq	41954c <_obstack_memory_used@@Base+0x68fc>  // b.none
  41937c:	cmp	x3, x0
  419380:	b.ne	419390 <_obstack_memory_used@@Base+0x6740>  // b.any
  419384:	ldr	x0, [x19, #176]
  419388:	cmp	x0, x28
  41938c:	b.eq	4196d0 <_obstack_memory_used@@Base+0x6a80>  // b.none
  419390:	ldr	x27, [x19, #152]
  419394:	ldr	x0, [x27]
  419398:	add	x1, x0, x26
  41939c:	ldrb	w2, [x1, #8]
  4193a0:	tbnz	w2, #3, 4194c8 <_obstack_memory_used@@Base+0x6878>
  4193a4:	ldrb	w3, [x1, #10]
  4193a8:	tbnz	w3, #4, 419594 <_obstack_memory_used@@Base+0x6944>
  4193ac:	cmp	w2, #0x4
  4193b0:	b.eq	4195c0 <_obstack_memory_used@@Base+0x6970>  // b.none
  4193b4:	ldr	x25, [x29, #152]
  4193b8:	mov	x2, x25
  4193bc:	mov	x0, x19
  4193c0:	bl	417158 <_obstack_memory_used@@Base+0x4508>
  4193c4:	tst	w0, #0xff
  4193c8:	b.eq	419470 <_obstack_memory_used@@Base+0x6820>  // b.none
  4193cc:	ldr	x0, [x27, #24]
  4193d0:	add	x2, x25, #0x1
  4193d4:	ldr	x28, [x0, x23, lsl #3]
  4193d8:	str	x2, [x29, #152]
  4193dc:	cbz	x22, 41940c <_obstack_memory_used@@Base+0x67bc>
  4193e0:	ldr	x0, [x19, #168]
  4193e4:	cmp	x2, x0
  4193e8:	b.gt	419474 <_obstack_memory_used@@Base+0x6824>
  4193ec:	ldr	x0, [x19, #184]
  4193f0:	ldr	x1, [x0, x2, lsl #3]
  4193f4:	cbz	x1, 419474 <_obstack_memory_used@@Base+0x6824>
  4193f8:	ldr	x0, [x1, #16]
  4193fc:	mov	x2, x28
  419400:	add	x1, x1, #0x18
  419404:	bl	4148c8 <_obstack_memory_used@@Base+0x1c78>
  419408:	cbz	x0, 419474 <_obstack_memory_used@@Base+0x6824>
  41940c:	str	xzr, [x29, #168]
  419410:	tbnz	x28, #63, 419468 <_obstack_memory_used@@Base+0x6818>
  419414:	ldr	x0, [x20, #8]
  419418:	ldr	x3, [x29, #152]
  41941c:	cmp	x0, x3
  419420:	b.ge	419358 <_obstack_memory_used@@Base+0x6708>  // b.tcont
  419424:	ldr	x0, [x29, #176]
  419428:	bl	402ae0 <free@plt>
  41942c:	ldr	w0, [x29, #108]
  419430:	cbnz	w0, 419820 <_obstack_memory_used@@Base+0x6bd0>
  419434:	cbz	x22, 419840 <_obstack_memory_used@@Base+0x6bf0>
  419438:	mov	x0, x22
  41943c:	mov	w19, #0x0                   	// #0
  419440:	bl	416fe8 <_obstack_memory_used@@Base+0x4398>
  419444:	mov	sp, x29
  419448:	mov	w0, w19
  41944c:	ldp	x19, x20, [sp, #16]
  419450:	ldp	x21, x22, [sp, #32]
  419454:	ldp	x23, x24, [sp, #48]
  419458:	ldp	x25, x26, [sp, #64]
  41945c:	ldp	x27, x28, [sp, #80]
  419460:	ldp	x29, x30, [sp], #208
  419464:	ret
  419468:	cmn	x28, #0x2
  41946c:	b.eq	4197c0 <_obstack_memory_used@@Base+0x6b70>  // b.none
  419470:	cbz	x22, 4198c0 <_obstack_memory_used@@Base+0x6c70>
  419474:	mov	x3, x21
  419478:	add	x5, x29, #0xa0
  41947c:	mov	x4, x20
  419480:	add	x2, x29, #0x98
  419484:	add	x1, x22, #0x10
  419488:	mov	x0, x22
  41948c:	bl	417be0 <_obstack_memory_used@@Base+0x4f90>
  419490:	mov	x28, x0
  419494:	ldr	x3, [x29, #152]
  419498:	b	419340 <_obstack_memory_used@@Base+0x66f0>
  41949c:	ldr	x1, [x2, x26]
  4194a0:	add	x1, x1, #0x1
  4194a4:	cmp	x21, x1
  4194a8:	b.le	41937c <_obstack_memory_used@@Base+0x672c>
  4194ac:	lsl	x1, x1, #4
  4194b0:	add	x0, x20, x1
  4194b4:	str	x3, [x20, x1]
  4194b8:	mov	x1, #0xffffffffffffffff    	// #-1
  4194bc:	str	x1, [x0, #8]
  4194c0:	ldr	x0, [x20, #8]
  4194c4:	b	41937c <_obstack_memory_used@@Base+0x672c>
  4194c8:	ldr	x4, [x27, #40]
  4194cc:	add	x23, x28, x28, lsl #1
  4194d0:	ldr	x3, [x29, #152]
  4194d4:	mov	x1, x28
  4194d8:	ldr	x2, [x19, #184]
  4194dc:	add	x0, x29, #0xa0
  4194e0:	add	x23, x4, x23, lsl #3
  4194e4:	ldr	x25, [x2, x3, lsl #3]
  4194e8:	bl	413350 <_obstack_memory_used@@Base+0x700>
  4194ec:	tst	w0, #0xff
  4194f0:	b.eq	4197c0 <_obstack_memory_used@@Base+0x6b70>  // b.none
  4194f4:	ldr	x7, [x23, #8]
  4194f8:	cmp	x7, #0x0
  4194fc:	b.le	419470 <_obstack_memory_used@@Base+0x6820>
  419500:	ldr	x10, [x23, #16]
  419504:	add	x9, x25, #0x18
  419508:	ldr	x8, [x25, #16]
  41950c:	mov	x28, #0xffffffffffffffff    	// #-1
  419510:	mov	x6, #0x0                   	// #0
  419514:	nop
  419518:	ldr	x23, [x10, x6, lsl #3]
  41951c:	add	x6, x6, #0x1
  419520:	mov	x1, x9
  419524:	mov	x0, x8
  419528:	mov	x2, x23
  41952c:	bl	4148c8 <_obstack_memory_used@@Base+0x1c78>
  419530:	cbz	x0, 419540 <_obstack_memory_used@@Base+0x68f0>
  419534:	cmn	x28, #0x1
  419538:	b.ne	419638 <_obstack_memory_used@@Base+0x69e8>  // b.any
  41953c:	mov	x28, x23
  419540:	cmp	x6, x7
  419544:	b.ne	419518 <_obstack_memory_used@@Base+0x68c8>  // b.any
  419548:	b	419410 <_obstack_memory_used@@Base+0x67c0>
  41954c:	ldr	x1, [x4]
  419550:	add	x1, x1, #0x1
  419554:	cmp	x21, x1
  419558:	b.le	41937c <_obstack_memory_used@@Base+0x672c>
  41955c:	lsl	x1, x1, #4
  419560:	add	x2, x20, x1
  419564:	ldr	x0, [x20, x1]
  419568:	cmp	x0, x3
  41956c:	b.lt	4197dc <_obstack_memory_used@@Base+0x6b8c>  // b.tstop
  419570:	ldrb	w0, [x4, #10]
  419574:	tbz	w0, #3, 419588 <_obstack_memory_used@@Base+0x6938>
  419578:	ldr	x4, [x29, #120]
  41957c:	ldr	x0, [x4, x1]
  419580:	cmn	x0, #0x1
  419584:	b.ne	419800 <_obstack_memory_used@@Base+0x6bb0>  // b.any
  419588:	str	x3, [x2, #8]
  41958c:	ldr	x0, [x20, #8]
  419590:	b	41937c <_obstack_memory_used@@Base+0x672c>
  419594:	ldr	x4, [x29, #152]
  419598:	mov	x3, x19
  41959c:	mov	x2, x28
  4195a0:	add	x1, x27, #0xd8
  4195a4:	bl	418ad8 <_obstack_memory_used@@Base+0x5e88>
  4195a8:	sxtw	x25, w0
  4195ac:	cbnz	w0, 4197b0 <_obstack_memory_used@@Base+0x6b60>
  4195b0:	ldr	x1, [x27]
  4195b4:	ldr	x25, [x29, #152]
  4195b8:	add	x1, x1, x26
  4195bc:	b	4193b8 <_obstack_memory_used@@Base+0x6768>
  4195c0:	ldr	x0, [x1]
  4195c4:	add	x0, x0, #0x1
  4195c8:	cmp	x21, x0
  4195cc:	b.le	419754 <_obstack_memory_used@@Base+0x6b04>
  4195d0:	lsl	x0, x0, #4
  4195d4:	add	x1, x20, x0
  4195d8:	ldr	x0, [x20, x0]
  4195dc:	ldr	x1, [x1, #8]
  4195e0:	sub	x25, x1, x0
  4195e4:	cbz	x22, 4197ac <_obstack_memory_used@@Base+0x6b5c>
  4195e8:	cmn	x0, #0x1
  4195ec:	b.eq	419474 <_obstack_memory_used@@Base+0x6824>  // b.none
  4195f0:	cmn	x1, #0x1
  4195f4:	b.eq	419474 <_obstack_memory_used@@Base+0x6824>  // b.none
  4195f8:	cbz	x25, 419758 <_obstack_memory_used@@Base+0x6b08>
  4195fc:	ldr	x3, [x19, #48]
  419600:	ldr	x23, [x29, #152]
  419604:	ldr	x1, [x19, #8]
  419608:	sub	x3, x3, x23
  41960c:	cmp	x25, x3
  419610:	b.gt	419474 <_obstack_memory_used@@Base+0x6824>
  419614:	add	x0, x1, x0
  419618:	mov	x2, x25
  41961c:	add	x1, x1, x23
  419620:	bl	402a60 <memcmp@plt>
  419624:	cbnz	w0, 419474 <_obstack_memory_used@@Base+0x6824>
  419628:	ldr	x0, [x27, #24]
  41962c:	add	x2, x23, x25
  419630:	ldr	x28, [x0, x28, lsl #3]
  419634:	b	4193d8 <_obstack_memory_used@@Base+0x6788>
  419638:	ldr	x1, [x29, #112]
  41963c:	mov	x2, x28
  419640:	ldr	x0, [x29, #168]
  419644:	bl	4148c8 <_obstack_memory_used@@Base+0x1c78>
  419648:	cbnz	x0, 4197b8 <_obstack_memory_used@@Base+0x6b68>
  41964c:	cbz	x22, 419410 <_obstack_memory_used@@Base+0x67c0>
  419650:	ldp	x25, x0, [x22]
  419654:	ldr	x26, [x29, #152]
  419658:	add	x1, x25, #0x1
  41965c:	str	x1, [x22]
  419660:	cmp	x1, x0
  419664:	b.eq	419848 <_obstack_memory_used@@Base+0x6bf8>  // b.none
  419668:	ldr	x1, [x22, #16]
  41966c:	add	x2, x25, x25, lsl #1
  419670:	ldr	x27, [x29, #136]
  419674:	lsl	x2, x2, #4
  419678:	add	x25, x1, x2
  41967c:	mov	x0, x27
  419680:	str	x26, [x1, x2]
  419684:	str	x23, [x25, #8]
  419688:	bl	402800 <malloc@plt>
  41968c:	str	x0, [x25, #16]
  419690:	cbz	x0, 4196b0 <_obstack_memory_used@@Base+0x6a60>
  419694:	mov	x2, x27
  419698:	mov	x1, x20
  41969c:	bl	402650 <memcpy@plt>
  4196a0:	add	x1, x29, #0xa0
  4196a4:	add	x0, x25, #0x18
  4196a8:	bl	4158e8 <_obstack_memory_used@@Base+0x2c98>
  4196ac:	cbz	w0, 419410 <_obstack_memory_used@@Base+0x67c0>
  4196b0:	ldr	x0, [x29, #176]
  4196b4:	bl	402ae0 <free@plt>
  4196b8:	ldr	w0, [x29, #108]
  4196bc:	cbnz	w0, 4198b0 <_obstack_memory_used@@Base+0x6c60>
  4196c0:	mov	x0, x22
  4196c4:	mov	w19, #0xc                   	// #12
  4196c8:	bl	416fe8 <_obstack_memory_used@@Base+0x4398>
  4196cc:	b	419444 <_obstack_memory_used@@Base+0x67f4>
  4196d0:	cbz	x22, 419830 <_obstack_memory_used@@Base+0x6be0>
  4196d4:	mov	x0, x20
  4196d8:	mov	x1, #0x0                   	// #0
  4196dc:	nop
  4196e0:	ldr	x2, [x0]
  4196e4:	tbnz	x2, #63, 4196f4 <_obstack_memory_used@@Base+0x6aa4>
  4196e8:	ldr	x2, [x0, #8]
  4196ec:	cmn	x2, #0x1
  4196f0:	b.eq	419720 <_obstack_memory_used@@Base+0x6ad0>  // b.none
  4196f4:	add	x1, x1, #0x1
  4196f8:	add	x0, x0, #0x10
  4196fc:	cmp	x21, x1
  419700:	b.ne	4196e0 <_obstack_memory_used@@Base+0x6a90>  // b.any
  419704:	ldr	x0, [x29, #176]
  419708:	bl	402ae0 <free@plt>
  41970c:	ldr	w0, [x29, #108]
  419710:	cbz	w0, 419438 <_obstack_memory_used@@Base+0x67e8>
  419714:	ldr	x0, [x29, #120]
  419718:	bl	402ae0 <free@plt>
  41971c:	b	419438 <_obstack_memory_used@@Base+0x67e8>
  419720:	cmp	x21, x1
  419724:	b.eq	419704 <_obstack_memory_used@@Base+0x6ab4>  // b.none
  419728:	ldr	x1, [x29, #128]
  41972c:	add	x5, x29, #0xa0
  419730:	mov	x4, x20
  419734:	mov	x3, x21
  419738:	add	x2, x29, #0x98
  41973c:	mov	x0, x22
  419740:	bl	417be0 <_obstack_memory_used@@Base+0x4f90>
  419744:	mov	x28, x0
  419748:	mov	x23, x0
  41974c:	lsl	x26, x0, #4
  419750:	b	419390 <_obstack_memory_used@@Base+0x6740>
  419754:	cbnz	x22, 419474 <_obstack_memory_used@@Base+0x6824>
  419758:	mov	x1, x28
  41975c:	add	x0, x29, #0xa0
  419760:	bl	413350 <_obstack_memory_used@@Base+0x700>
  419764:	tst	w0, #0xff
  419768:	b.eq	4197c0 <_obstack_memory_used@@Base+0x6b70>  // b.none
  41976c:	ldr	x1, [x27, #40]
  419770:	add	x5, x28, x28, lsl #1
  419774:	ldr	x25, [x29, #152]
  419778:	ldr	x0, [x19, #184]
  41977c:	add	x5, x1, x5, lsl #3
  419780:	ldr	x0, [x0, x25, lsl #3]
  419784:	ldr	x2, [x5, #16]
  419788:	add	x1, x0, #0x18
  41978c:	ldr	x0, [x0, #16]
  419790:	ldr	x28, [x2]
  419794:	mov	x2, x28
  419798:	bl	4148c8 <_obstack_memory_used@@Base+0x1c78>
  41979c:	cbnz	x0, 419410 <_obstack_memory_used@@Base+0x67c0>
  4197a0:	ldr	x1, [x27]
  4197a4:	add	x1, x1, x26
  4197a8:	b	4193b8 <_obstack_memory_used@@Base+0x6768>
  4197ac:	cbz	x25, 419758 <_obstack_memory_used@@Base+0x6b08>
  4197b0:	ldr	x23, [x29, #152]
  4197b4:	b	419628 <_obstack_memory_used@@Base+0x69d8>
  4197b8:	mov	x28, x23
  4197bc:	b	419410 <_obstack_memory_used@@Base+0x67c0>
  4197c0:	ldr	x0, [x29, #176]
  4197c4:	bl	402ae0 <free@plt>
  4197c8:	ldr	w0, [x29, #108]
  4197cc:	cbnz	w0, 4198b0 <_obstack_memory_used@@Base+0x6c60>
  4197d0:	cbnz	x22, 4196c0 <_obstack_memory_used@@Base+0x6a70>
  4197d4:	mov	w19, #0xc                   	// #12
  4197d8:	b	419444 <_obstack_memory_used@@Base+0x67f4>
  4197dc:	str	x3, [x2, #8]
  4197e0:	mov	x1, x20
  4197e4:	ldr	x0, [x29, #120]
  4197e8:	str	x3, [x29, #96]
  4197ec:	ldr	x2, [x29, #136]
  4197f0:	bl	402650 <memcpy@plt>
  4197f4:	ldr	x0, [x20, #8]
  4197f8:	ldr	x3, [x29, #96]
  4197fc:	b	41937c <_obstack_memory_used@@Base+0x672c>
  419800:	ldr	x2, [x29, #136]
  419804:	mov	x1, x4
  419808:	mov	x0, x20
  41980c:	str	x3, [x29, #96]
  419810:	bl	402650 <memcpy@plt>
  419814:	ldr	x0, [x20, #8]
  419818:	ldr	x3, [x29, #96]
  41981c:	b	41937c <_obstack_memory_used@@Base+0x672c>
  419820:	ldr	x0, [x29, #120]
  419824:	bl	402ae0 <free@plt>
  419828:	cbnz	x22, 419438 <_obstack_memory_used@@Base+0x67e8>
  41982c:	b	419840 <_obstack_memory_used@@Base+0x6bf0>
  419830:	ldr	x0, [x29, #176]
  419834:	bl	402ae0 <free@plt>
  419838:	ldr	w0, [x29, #108]
  41983c:	cbnz	w0, 4198e0 <_obstack_memory_used@@Base+0x6c90>
  419840:	mov	w19, #0x0                   	// #0
  419844:	b	419444 <_obstack_memory_used@@Base+0x67f4>
  419848:	ldr	x0, [x22, #16]
  41984c:	add	x1, x1, x1, lsl #1
  419850:	lsl	x1, x1, #5
  419854:	bl	402930 <realloc@plt>
  419858:	mov	x1, x0
  41985c:	cbz	x0, 4196b0 <_obstack_memory_used@@Base+0x6a60>
  419860:	ldr	x0, [x22, #8]
  419864:	lsl	x0, x0, #1
  419868:	stp	x0, x1, [x22, #8]
  41986c:	b	41966c <_obstack_memory_used@@Base+0x6a1c>
  419870:	lsl	x0, x21, #4
  419874:	str	x0, [x29, #136]
  419878:	stp	xzr, xzr, [x29, #160]
  41987c:	cmp	x0, #0xfbf
  419880:	mov	x22, #0x0                   	// #0
  419884:	str	xzr, [x29, #176]
  419888:	ldr	x28, [x24, #144]
  41988c:	b.ls	419310 <_obstack_memory_used@@Base+0x66c0>  // b.plast
  419890:	ldr	x0, [x29, #136]
  419894:	bl	402800 <malloc@plt>
  419898:	str	x0, [x29, #120]
  41989c:	mov	w1, #0x1                   	// #1
  4198a0:	str	w1, [x29, #108]
  4198a4:	cbnz	x0, 419320 <_obstack_memory_used@@Base+0x66d0>
  4198a8:	cbnz	x22, 4196c0 <_obstack_memory_used@@Base+0x6a70>
  4198ac:	b	4197d4 <_obstack_memory_used@@Base+0x6b84>
  4198b0:	ldr	x0, [x29, #120]
  4198b4:	bl	402ae0 <free@plt>
  4198b8:	cbnz	x22, 4196c0 <_obstack_memory_used@@Base+0x6a70>
  4198bc:	b	4197d4 <_obstack_memory_used@@Base+0x6b84>
  4198c0:	ldr	x0, [x29, #176]
  4198c4:	mov	w19, #0x1                   	// #1
  4198c8:	bl	402ae0 <free@plt>
  4198cc:	ldr	w0, [x29, #108]
  4198d0:	cbz	w0, 419444 <_obstack_memory_used@@Base+0x67f4>
  4198d4:	ldr	x0, [x29, #120]
  4198d8:	bl	402ae0 <free@plt>
  4198dc:	b	419444 <_obstack_memory_used@@Base+0x67f4>
  4198e0:	ldr	x0, [x29, #120]
  4198e4:	mov	w19, #0x0                   	// #0
  4198e8:	bl	402ae0 <free@plt>
  4198ec:	b	419444 <_obstack_memory_used@@Base+0x67f4>
  4198f0:	stp	x29, x30, [sp, #-80]!
  4198f4:	mov	x6, x2
  4198f8:	mov	x5, x4
  4198fc:	mov	x29, sp
  419900:	stp	x19, x20, [sp, #16]
  419904:	mov	x20, x2
  419908:	mov	x19, x0
  41990c:	stp	x23, x24, [sp, #48]
  419910:	mov	x24, x4
  419914:	mov	x4, x3
  419918:	str	x25, [sp, #64]
  41991c:	mov	x25, x3
  419920:	ldr	x3, [x2, #8]
  419924:	stp	x21, x22, [sp, #32]
  419928:	mov	x21, x1
  41992c:	ldr	x2, [x6], #16
  419930:	mov	x1, x6
  419934:	mov	w6, #0x8                   	// #8
  419938:	bl	418d78 <_obstack_memory_used@@Base+0x6128>
  41993c:	cbz	w0, 419958 <_obstack_memory_used@@Base+0x6d08>
  419940:	ldp	x19, x20, [sp, #16]
  419944:	ldp	x21, x22, [sp, #32]
  419948:	ldp	x23, x24, [sp, #48]
  41994c:	ldr	x25, [sp, #64]
  419950:	ldp	x29, x30, [sp], #80
  419954:	ret
  419958:	ldp	x2, x1, [x19, #200]
  41995c:	ldr	x22, [x20, #8]
  419960:	ldr	x23, [x21]
  419964:	mov	x4, x22
  419968:	cmp	x2, x1
  41996c:	ldr	x0, [x19, #216]
  419970:	b.ge	419a0c <_obstack_memory_used@@Base+0x6dbc>  // b.tcont
  419974:	add	x6, x2, x2, lsl #2
  419978:	cmp	x2, #0x0
  41997c:	lsl	x6, x6, #3
  419980:	b.le	419998 <_obstack_memory_used@@Base+0x6d48>
  419984:	sub	x3, x6, #0x28
  419988:	add	x3, x0, x3
  41998c:	ldr	x1, [x3, #8]
  419990:	cmp	x24, x1
  419994:	b.eq	419a00 <_obstack_memory_used@@Base+0x6db0>  // b.none
  419998:	add	x7, x0, x6
  41999c:	cmp	x23, x22
  4199a0:	str	x25, [x0, x6]
  4199a4:	csetm	w1, eq  // eq = none
  4199a8:	add	x2, x2, #0x1
  4199ac:	sub	x0, x22, x23
  4199b0:	stp	x24, x23, [x7, #8]
  4199b4:	str	x22, [x7, #24]
  4199b8:	strh	w1, [x7, #34]
  4199bc:	str	x2, [x19, #200]
  4199c0:	strb	wzr, [x7, #32]
  4199c4:	ldrsw	x1, [x19, #224]
  4199c8:	cmp	x1, x0
  4199cc:	b.ge	4199d8 <_obstack_memory_used@@Base+0x6d88>  // b.tcont
  4199d0:	sub	w22, w22, w23
  4199d4:	str	w22, [x19, #224]
  4199d8:	add	x4, x24, x4
  4199dc:	mov	x0, x19
  4199e0:	ldr	x1, [x21]
  4199e4:	ldp	x19, x20, [sp, #16]
  4199e8:	sub	x1, x4, x1
  4199ec:	ldp	x21, x22, [sp, #32]
  4199f0:	ldp	x23, x24, [sp, #48]
  4199f4:	ldr	x25, [sp, #64]
  4199f8:	ldp	x29, x30, [sp], #80
  4199fc:	b	413f48 <_obstack_memory_used@@Base+0x12f8>
  419a00:	mov	w1, #0x1                   	// #1
  419a04:	strb	w1, [x3, #32]
  419a08:	b	419998 <_obstack_memory_used@@Base+0x6d48>
  419a0c:	add	x1, x1, x1, lsl #2
  419a10:	lsl	x1, x1, #4
  419a14:	bl	402930 <realloc@plt>
  419a18:	cbz	x0, 419a54 <_obstack_memory_used@@Base+0x6e04>
  419a1c:	ldp	x3, x2, [x19, #200]
  419a20:	str	x0, [x19, #216]
  419a24:	mov	w1, #0x0                   	// #0
  419a28:	add	x3, x3, x3, lsl #2
  419a2c:	add	x2, x2, x2, lsl #2
  419a30:	add	x0, x0, x3, lsl #3
  419a34:	lsl	x2, x2, #3
  419a38:	bl	4028d0 <memset@plt>
  419a3c:	ldp	x2, x1, [x19, #200]
  419a40:	ldr	x4, [x20, #8]
  419a44:	ldr	x0, [x19, #216]
  419a48:	lsl	x1, x1, #1
  419a4c:	str	x1, [x19, #208]
  419a50:	b	419974 <_obstack_memory_used@@Base+0x6d24>
  419a54:	ldr	x0, [x19, #216]
  419a58:	bl	402ae0 <free@plt>
  419a5c:	mov	w0, #0xc                   	// #12
  419a60:	b	419940 <_obstack_memory_used@@Base+0x6cf0>
  419a64:	nop
  419a68:	stp	x29, x30, [sp, #-208]!
  419a6c:	mov	x29, sp
  419a70:	stp	x21, x22, [sp, #32]
  419a74:	ldr	x21, [x0, #72]
  419a78:	stp	x25, x26, [sp, #64]
  419a7c:	stp	x27, x28, [sp, #80]
  419a80:	mov	x28, x0
  419a84:	lsl	x0, x21, #3
  419a88:	ldr	x25, [x1]
  419a8c:	stp	x23, x24, [sp, #48]
  419a90:	stp	x2, x0, [sp, #136]
  419a94:	cmp	x25, #0x0
  419a98:	str	x1, [sp, #168]
  419a9c:	ldr	x24, [x28, #152]
  419aa0:	b.le	419b20 <_obstack_memory_used@@Base+0x6ed0>
  419aa4:	mov	x23, #0x0                   	// #0
  419aa8:	stp	x19, x20, [sp, #16]
  419aac:	nop
  419ab0:	ldr	x0, [sp, #136]
  419ab4:	ldr	x1, [x0]
  419ab8:	ldr	x0, [x24]
  419abc:	ldr	x20, [x1, x23, lsl #3]
  419ac0:	lsl	x22, x20, #4
  419ac4:	add	x0, x0, x22
  419ac8:	ldrb	w1, [x0, #8]
  419acc:	cmp	w1, #0x4
  419ad0:	b.ne	419b10 <_obstack_memory_used@@Base+0x6ec0>  // b.any
  419ad4:	ldr	w19, [x0, #8]
  419ad8:	tst	w19, #0x3ff00
  419adc:	b.eq	419b48 <_obstack_memory_used@@Base+0x6ef8>  // b.none
  419ae0:	ldr	w2, [x28, #160]
  419ae4:	mov	x1, x21
  419ae8:	mov	x0, x28
  419aec:	bl	417058 <_obstack_memory_used@@Base+0x4408>
  419af0:	ubfx	x1, x19, #8, #10
  419af4:	tbz	w19, #10, 419b3c <_obstack_memory_used@@Base+0x6eec>
  419af8:	tbz	w0, #0, 419b10 <_obstack_memory_used@@Base+0x6ec0>
  419afc:	tbnz	w1, #3, 419b10 <_obstack_memory_used@@Base+0x6ec0>
  419b00:	tbz	w1, #5, 419b08 <_obstack_memory_used@@Base+0x6eb8>
  419b04:	tbz	w0, #1, 419b10 <_obstack_memory_used@@Base+0x6ec0>
  419b08:	tbz	w1, #7, 419b48 <_obstack_memory_used@@Base+0x6ef8>
  419b0c:	tbnz	w0, #3, 419b48 <_obstack_memory_used@@Base+0x6ef8>
  419b10:	add	x23, x23, #0x1
  419b14:	cmp	x23, x25
  419b18:	b.lt	419ab0 <_obstack_memory_used@@Base+0x6e60>  // b.tstop
  419b1c:	ldp	x19, x20, [sp, #16]
  419b20:	mov	w0, #0x0                   	// #0
  419b24:	ldp	x21, x22, [sp, #32]
  419b28:	ldp	x23, x24, [sp, #48]
  419b2c:	ldp	x25, x26, [sp, #64]
  419b30:	ldp	x27, x28, [sp, #80]
  419b34:	ldp	x29, x30, [sp], #208
  419b38:	ret
  419b3c:	tbz	w1, #3, 419b00 <_obstack_memory_used@@Base+0x6eb0>
  419b40:	tbz	w0, #0, 419b00 <_obstack_memory_used@@Base+0x6eb0>
  419b44:	b	419b10 <_obstack_memory_used@@Base+0x6ec0>
  419b48:	ldr	x5, [x28, #200]
  419b4c:	mov	x1, #0x0                   	// #0
  419b50:	mov	x19, x5
  419b54:	mov	x3, x5
  419b58:	b	419b7c <_obstack_memory_used@@Base+0x6f2c>
  419b5c:	asr	x0, x0, #1
  419b60:	ldr	x4, [x28, #216]
  419b64:	add	x2, x0, x0, lsl #2
  419b68:	add	x2, x4, x2, lsl #3
  419b6c:	ldr	x2, [x2, #8]
  419b70:	cmp	x21, x2
  419b74:	b.gt	419db0 <_obstack_memory_used@@Base+0x7160>
  419b78:	mov	x3, x0
  419b7c:	add	x0, x3, x1
  419b80:	cmp	x3, x1
  419b84:	b.gt	419b5c <_obstack_memory_used@@Base+0x6f0c>
  419b88:	cmp	x5, x1
  419b8c:	b.le	419db8 <_obstack_memory_used@@Base+0x7168>
  419b90:	ldr	x0, [x28, #216]
  419b94:	add	x1, x1, x1, lsl #2
  419b98:	add	x1, x0, x1, lsl #3
  419b9c:	ldr	x0, [x1, #8]
  419ba0:	cmp	x21, x0
  419ba4:	b.eq	419bb4 <_obstack_memory_used@@Base+0x6f64>  // b.none
  419ba8:	b	419db8 <_obstack_memory_used@@Base+0x7168>
  419bac:	ldurb	w0, [x1, #-8]
  419bb0:	cbz	w0, 419db8 <_obstack_memory_used@@Base+0x7168>
  419bb4:	ldr	x0, [x1]
  419bb8:	add	x1, x1, #0x28
  419bbc:	cmp	x20, x0
  419bc0:	b.ne	419bac <_obstack_memory_used@@Base+0x6f5c>  // b.any
  419bc4:	lsl	x0, x20, #3
  419bc8:	str	x0, [sp, #112]
  419bcc:	str	wzr, [sp, #180]
  419bd0:	cmp	x19, x5
  419bd4:	b.ge	419d00 <_obstack_memory_used@@Base+0x70b0>  // b.tcont
  419bd8:	add	x4, x19, x19, lsl #2
  419bdc:	add	x0, x20, x20, lsl #1
  419be0:	lsl	x27, x4, #3
  419be4:	lsl	x0, x0, #3
  419be8:	str	x0, [sp, #120]
  419bec:	nop
  419bf0:	ldr	x0, [x28, #216]
  419bf4:	add	x1, x0, x27
  419bf8:	ldr	x0, [x0, x27]
  419bfc:	cmp	x20, x0
  419c00:	b.ne	419cf0 <_obstack_memory_used@@Base+0x70a0>  // b.any
  419c04:	ldr	x0, [x1, #8]
  419c08:	cmp	x21, x0
  419c0c:	b.ne	419cf0 <_obstack_memory_used@@Base+0x70a0>  // b.any
  419c10:	ldp	x22, x0, [x1, #16]
  419c14:	ldr	x25, [x24, #48]
  419c18:	subs	x26, x0, x22
  419c1c:	b.ne	419d64 <_obstack_memory_used@@Base+0x7114>  // b.any
  419c20:	ldr	x1, [x24, #40]
  419c24:	ldr	x2, [sp, #120]
  419c28:	add	x1, x1, x2
  419c2c:	ldr	x1, [x1, #16]
  419c30:	ldr	x1, [x1]
  419c34:	add	x1, x1, x1, lsl #1
  419c38:	add	x25, x25, x1, lsl #3
  419c3c:	ldr	w2, [x28, #160]
  419c40:	add	x0, x21, x0
  419c44:	sub	x22, x0, x22
  419c48:	mov	x0, x28
  419c4c:	sub	x1, x22, #0x1
  419c50:	str	xzr, [sp, #96]
  419c54:	bl	417058 <_obstack_memory_used@@Base+0x4408>
  419c58:	mov	w3, w0
  419c5c:	ldr	x0, [sp, #144]
  419c60:	ldr	x5, [x28, #184]
  419c64:	ldr	x1, [x5, x0]
  419c68:	ldr	x0, [x5, x22, lsl #3]
  419c6c:	cbz	x1, 419c78 <_obstack_memory_used@@Base+0x7028>
  419c70:	ldr	x1, [x1, #16]
  419c74:	str	x1, [sp, #96]
  419c78:	cbz	x0, 419d7c <_obstack_memory_used@@Base+0x712c>
  419c7c:	ldr	x1, [x0, #80]
  419c80:	mov	x2, x25
  419c84:	add	x0, sp, #0xb8
  419c88:	str	w3, [sp, #104]
  419c8c:	bl	415970 <_obstack_memory_used@@Base+0x2d20>
  419c90:	str	w0, [sp, #180]
  419c94:	ldr	w3, [sp, #104]
  419c98:	cbnz	w0, 419f34 <_obstack_memory_used@@Base+0x72e4>
  419c9c:	ldr	x5, [x28, #184]
  419ca0:	mov	x1, x24
  419ca4:	add	x2, sp, #0xb8
  419ca8:	add	x0, sp, #0xb4
  419cac:	str	x5, [sp, #104]
  419cb0:	bl	415ae8 <_obstack_memory_used@@Base+0x2e98>
  419cb4:	ldr	x5, [sp, #104]
  419cb8:	str	x0, [x5, x22, lsl #3]
  419cbc:	ldr	x0, [sp, #200]
  419cc0:	bl	402ae0 <free@plt>
  419cc4:	ldr	x1, [x28, #184]
  419cc8:	ldr	x0, [x1, x22, lsl #3]
  419ccc:	cbz	x0, 419da4 <_obstack_memory_used@@Base+0x7154>
  419cd0:	cbnz	x26, 419cec <_obstack_memory_used@@Base+0x709c>
  419cd4:	ldr	x0, [sp, #144]
  419cd8:	ldr	x0, [x1, x0]
  419cdc:	ldr	x1, [sp, #96]
  419ce0:	ldr	x0, [x0, #16]
  419ce4:	cmp	x0, x1
  419ce8:	b.gt	419d0c <_obstack_memory_used@@Base+0x70bc>
  419cec:	ldr	x5, [x28, #200]
  419cf0:	add	x19, x19, #0x1
  419cf4:	add	x27, x27, #0x28
  419cf8:	cmp	x19, x5
  419cfc:	b.lt	419bf0 <_obstack_memory_used@@Base+0x6fa0>  // b.tstop
  419d00:	ldr	x0, [sp, #168]
  419d04:	ldr	x25, [x0]
  419d08:	b	419b10 <_obstack_memory_used@@Base+0x6ec0>
  419d0c:	add	x22, x25, #0x8
  419d10:	add	x25, x25, #0x10
  419d14:	mov	x2, x25
  419d18:	mov	x1, x22
  419d1c:	mov	x3, x21
  419d20:	mov	x0, x28
  419d24:	bl	417ac0 <_obstack_memory_used@@Base+0x4e70>
  419d28:	str	w0, [sp, #180]
  419d2c:	cbnz	w0, 419d48 <_obstack_memory_used@@Base+0x70f8>
  419d30:	mov	x2, x25
  419d34:	mov	x1, x22
  419d38:	mov	x0, x28
  419d3c:	bl	419a68 <_obstack_memory_used@@Base+0x6e18>
  419d40:	str	w0, [sp, #180]
  419d44:	cbz	w0, 419cec <_obstack_memory_used@@Base+0x709c>
  419d48:	ldp	x19, x20, [sp, #16]
  419d4c:	ldp	x21, x22, [sp, #32]
  419d50:	ldp	x23, x24, [sp, #48]
  419d54:	ldp	x25, x26, [sp, #64]
  419d58:	ldp	x27, x28, [sp, #80]
  419d5c:	ldp	x29, x30, [sp], #208
  419d60:	ret
  419d64:	ldr	x1, [x24, #24]
  419d68:	ldr	x2, [sp, #112]
  419d6c:	ldr	x1, [x1, x2]
  419d70:	add	x1, x1, x1, lsl #1
  419d74:	add	x25, x25, x1, lsl #3
  419d78:	b	419c3c <_obstack_memory_used@@Base+0x6fec>
  419d7c:	mov	x1, x24
  419d80:	mov	x2, x25
  419d84:	add	x0, sp, #0xb4
  419d88:	str	x5, [sp, #104]
  419d8c:	bl	415ae8 <_obstack_memory_used@@Base+0x2e98>
  419d90:	ldr	x5, [sp, #104]
  419d94:	ldr	x1, [x28, #184]
  419d98:	str	x0, [x5, x22, lsl #3]
  419d9c:	ldr	x0, [x1, x22, lsl #3]
  419da0:	cbnz	x0, 419cd0 <_obstack_memory_used@@Base+0x7080>
  419da4:	ldr	w0, [sp, #180]
  419da8:	cbz	w0, 419cd0 <_obstack_memory_used@@Base+0x7080>
  419dac:	b	419d48 <_obstack_memory_used@@Base+0x70f8>
  419db0:	add	x1, x0, #0x1
  419db4:	b	419b7c <_obstack_memory_used@@Base+0x6f2c>
  419db8:	ldr	x0, [x28, #152]
  419dbc:	str	x0, [sp, #160]
  419dc0:	ldr	x2, [x28, #232]
  419dc4:	ldr	x1, [x0]
  419dc8:	cmp	x2, #0x0
  419dcc:	ldr	x0, [x1, x22]
  419dd0:	str	x0, [sp, #152]
  419dd4:	b.le	419bc4 <_obstack_memory_used@@Base+0x6f74>
  419dd8:	ldr	x7, [x28, #8]
  419ddc:	str	xzr, [sp, #128]
  419de0:	ldr	x3, [sp, #128]
  419de4:	ldr	x0, [x28, #248]
  419de8:	ldr	x26, [x0, x3, lsl #3]
  419dec:	ldr	x0, [x26, #8]
  419df0:	lsl	x0, x0, #4
  419df4:	ldr	x0, [x1, x0]
  419df8:	ldr	x1, [sp, #152]
  419dfc:	cmp	x1, x0
  419e00:	b.eq	419e24 <_obstack_memory_used@@Base+0x71d4>  // b.none
  419e04:	ldr	x0, [sp, #128]
  419e08:	add	x0, x0, #0x1
  419e0c:	str	x0, [sp, #128]
  419e10:	cmp	x0, x2
  419e14:	b.ge	41a118 <_obstack_memory_used@@Base+0x74c8>  // b.tcont
  419e18:	ldr	x0, [sp, #160]
  419e1c:	ldr	x1, [x0]
  419e20:	b	419de0 <_obstack_memory_used@@Base+0x7190>
  419e24:	ldr	x0, [x26]
  419e28:	str	x0, [sp, #96]
  419e2c:	ldr	x4, [x26, #32]
  419e30:	cmp	x4, #0x0
  419e34:	b.le	41a14c <_obstack_memory_used@@Base+0x74fc>
  419e38:	mov	x27, x21
  419e3c:	mov	x22, #0x0                   	// #0
  419e40:	b	419e50 <_obstack_memory_used@@Base+0x7200>
  419e44:	ldr	x4, [x26, #32]
  419e48:	cmp	x22, x4
  419e4c:	b.ge	41a0dc <_obstack_memory_used@@Base+0x748c>  // b.tcont
  419e50:	ldr	x0, [x26, #40]
  419e54:	mov	x9, x27
  419e58:	ldr	x25, [sp, #96]
  419e5c:	ldr	x3, [x0, x22, lsl #3]
  419e60:	ldr	x0, [x3, #8]
  419e64:	str	x0, [sp, #96]
  419e68:	sub	x2, x0, x25
  419e6c:	cmp	x2, #0x0
  419e70:	add	x27, x27, x2
  419e74:	b.le	419ea4 <_obstack_memory_used@@Base+0x7254>
  419e78:	ldr	x0, [x28, #48]
  419e7c:	cmp	x0, x27
  419e80:	b.lt	419ed0 <_obstack_memory_used@@Base+0x7280>  // b.tstop
  419e84:	add	x1, x7, x25
  419e88:	add	x0, x7, x9
  419e8c:	stp	x7, x9, [sp, #104]
  419e90:	str	x3, [sp, #120]
  419e94:	bl	402a60 <memcmp@plt>
  419e98:	ldp	x7, x9, [sp, #104]
  419e9c:	ldr	x3, [sp, #120]
  419ea0:	cbnz	w0, 419f20 <_obstack_memory_used@@Base+0x72d0>
  419ea4:	mov	x2, x3
  419ea8:	mov	x4, x21
  419eac:	mov	x3, x20
  419eb0:	mov	x1, x26
  419eb4:	mov	x0, x28
  419eb8:	bl	4198f0 <_obstack_memory_used@@Base+0x6ca0>
  419ebc:	add	x22, x22, #0x1
  419ec0:	cmp	w0, #0x1
  419ec4:	ldr	x7, [x28, #8]
  419ec8:	b.ls	419e44 <_obstack_memory_used@@Base+0x71f4>  // b.plast
  419ecc:	b	419d48 <_obstack_memory_used@@Base+0x70f8>
  419ed0:	ldr	x12, [x28, #88]
  419ed4:	stp	x3, x2, [sp, #104]
  419ed8:	mov	x1, x27
  419edc:	mov	x0, x28
  419ee0:	cmp	x12, x27
  419ee4:	b.lt	419f24 <_obstack_memory_used@@Base+0x72d4>  // b.tstop
  419ee8:	str	x9, [sp, #120]
  419eec:	bl	413f48 <_obstack_memory_used@@Base+0x12f8>
  419ef0:	cbnz	w0, 419d48 <_obstack_memory_used@@Base+0x70f8>
  419ef4:	ldp	x3, x2, [sp, #104]
  419ef8:	ldr	x7, [x28, #8]
  419efc:	ldr	x9, [sp, #120]
  419f00:	add	x1, x7, x25
  419f04:	stp	x7, x9, [sp, #104]
  419f08:	add	x0, x7, x9
  419f0c:	str	x3, [sp, #120]
  419f10:	bl	402a60 <memcmp@plt>
  419f14:	ldp	x7, x9, [sp, #104]
  419f18:	ldr	x3, [sp, #120]
  419f1c:	cbz	w0, 419ea4 <_obstack_memory_used@@Base+0x7254>
  419f20:	ldr	x4, [x26, #32]
  419f24:	cmp	x22, x4
  419f28:	b.ge	419f5c <_obstack_memory_used@@Base+0x730c>  // b.tcont
  419f2c:	ldr	x2, [x28, #232]
  419f30:	b	419e04 <_obstack_memory_used@@Base+0x71b4>
  419f34:	ldr	x0, [sp, #200]
  419f38:	bl	402ae0 <free@plt>
  419f3c:	ldr	w0, [sp, #180]
  419f40:	ldp	x19, x20, [sp, #16]
  419f44:	ldp	x21, x22, [sp, #32]
  419f48:	ldp	x23, x24, [sp, #48]
  419f4c:	ldp	x25, x26, [sp, #64]
  419f50:	ldp	x27, x28, [sp, #80]
  419f54:	ldp	x29, x30, [sp], #208
  419f58:	ret
  419f5c:	cbnz	x22, 41a0d4 <_obstack_memory_used@@Base+0x7484>
  419f60:	cmp	x21, x25
  419f64:	b.lt	419f2c <_obstack_memory_used@@Base+0x72dc>  // b.tstop
  419f68:	ldr	x0, [x26]
  419f6c:	sub	x0, x25, x0
  419f70:	cmp	x0, #0x0
  419f74:	b.le	419f9c <_obstack_memory_used@@Base+0x734c>
  419f78:	ldr	x0, [x28, #48]
  419f7c:	cmp	x0, x9
  419f80:	b.le	41a0ec <_obstack_memory_used@@Base+0x749c>
  419f84:	add	x0, x7, x25
  419f88:	ldrb	w1, [x7, x9]
  419f8c:	add	x9, x9, #0x1
  419f90:	ldurb	w0, [x0, #-1]
  419f94:	cmp	w1, w0
  419f98:	b.ne	419f2c <_obstack_memory_used@@Base+0x72dc>  // b.any
  419f9c:	ldr	x0, [x28, #184]
  419fa0:	ldr	x1, [x0, x25, lsl #3]
  419fa4:	cbz	x1, 41a09c <_obstack_memory_used@@Base+0x744c>
  419fa8:	ldr	x4, [x1, #16]
  419fac:	cmp	x4, #0x0
  419fb0:	b.le	41a09c <_obstack_memory_used@@Base+0x744c>
  419fb4:	ldr	x0, [sp, #160]
  419fb8:	ldr	x6, [x1, #24]
  419fbc:	ldr	x3, [x0]
  419fc0:	mov	x0, #0x0                   	// #0
  419fc4:	b	419fd0 <_obstack_memory_used@@Base+0x7380>
  419fc8:	cmp	x4, x0
  419fcc:	b.eq	41a09c <_obstack_memory_used@@Base+0x744c>  // b.none
  419fd0:	ldr	x22, [x6, x0, lsl #3]
  419fd4:	add	x0, x0, #0x1
  419fd8:	lsl	x1, x22, #4
  419fdc:	add	x2, x3, x1
  419fe0:	ldrb	w2, [x2, #8]
  419fe4:	cmp	w2, #0x9
  419fe8:	b.ne	419fc8 <_obstack_memory_used@@Base+0x7378>  // b.any
  419fec:	ldr	x1, [x3, x1]
  419ff0:	ldr	x2, [sp, #152]
  419ff4:	cmp	x2, x1
  419ff8:	b.ne	419fc8 <_obstack_memory_used@@Base+0x7378>  // b.any
  419ffc:	cmn	x22, #0x1
  41a000:	b.eq	41a09c <_obstack_memory_used@@Base+0x744c>  // b.none
  41a004:	ldr	x1, [x26, #16]
  41a008:	ldr	x27, [x26]
  41a00c:	cbz	x1, 41a0a4 <_obstack_memory_used@@Base+0x7454>
  41a010:	ldr	x2, [x26, #8]
  41a014:	mov	x3, x27
  41a018:	mov	x5, x25
  41a01c:	mov	x4, x22
  41a020:	mov	x0, x28
  41a024:	mov	w6, #0x9                   	// #9
  41a028:	stp	x7, x9, [sp, #96]
  41a02c:	bl	418d78 <_obstack_memory_used@@Base+0x6128>
  41a030:	cmp	w0, #0x1
  41a034:	ldp	x7, x9, [sp, #96]
  41a038:	b.eq	41a09c <_obstack_memory_used@@Base+0x744c>  // b.none
  41a03c:	cbnz	w0, 419d48 <_obstack_memory_used@@Base+0x70f8>
  41a040:	ldp	x0, x1, [x26, #24]
  41a044:	cmp	x1, x0
  41a048:	b.eq	41a120 <_obstack_memory_used@@Base+0x74d0>  // b.none
  41a04c:	mov	x1, #0x28                  	// #40
  41a050:	mov	x0, #0x1                   	// #1
  41a054:	str	x9, [sp, #96]
  41a058:	bl	402910 <calloc@plt>
  41a05c:	mov	x2, x0
  41a060:	cbz	x0, 41a0c8 <_obstack_memory_used@@Base+0x7478>
  41a064:	ldp	x0, x1, [x26, #32]
  41a068:	mov	x4, x21
  41a06c:	mov	x3, x20
  41a070:	str	x2, [x1, x0, lsl #3]
  41a074:	add	x6, x0, #0x1
  41a078:	stp	x22, x25, [x2]
  41a07c:	mov	x1, x26
  41a080:	mov	x0, x28
  41a084:	str	x6, [x26, #32]
  41a088:	bl	4198f0 <_obstack_memory_used@@Base+0x6ca0>
  41a08c:	cmp	w0, #0x1
  41a090:	ldr	x7, [x28, #8]
  41a094:	ldr	x9, [sp, #96]
  41a098:	b.hi	419d48 <_obstack_memory_used@@Base+0x70f8>  // b.pmore
  41a09c:	add	x25, x25, #0x1
  41a0a0:	b	419f60 <_obstack_memory_used@@Base+0x7310>
  41a0a4:	sub	x1, x25, x27
  41a0a8:	mov	x0, #0x18                  	// #24
  41a0ac:	add	x1, x1, #0x1
  41a0b0:	stp	x7, x9, [sp, #96]
  41a0b4:	bl	402910 <calloc@plt>
  41a0b8:	str	x0, [x26, #16]
  41a0bc:	mov	x1, x0
  41a0c0:	ldp	x7, x9, [sp, #96]
  41a0c4:	cbnz	x0, 41a010 <_obstack_memory_used@@Base+0x73c0>
  41a0c8:	mov	w0, #0xc                   	// #12
  41a0cc:	ldp	x19, x20, [sp, #16]
  41a0d0:	b	419d4c <_obstack_memory_used@@Base+0x70fc>
  41a0d4:	mov	x27, x9
  41a0d8:	str	x25, [sp, #96]
  41a0dc:	ldr	x0, [sp, #96]
  41a0e0:	mov	x9, x27
  41a0e4:	add	x25, x0, #0x1
  41a0e8:	b	419f60 <_obstack_memory_used@@Base+0x7310>
  41a0ec:	ldr	x0, [x28, #88]
  41a0f0:	cmp	x0, x9
  41a0f4:	b.le	419f2c <_obstack_memory_used@@Base+0x72dc>
  41a0f8:	add	w1, w9, #0x1
  41a0fc:	mov	x0, x28
  41a100:	str	x9, [sp, #96]
  41a104:	bl	413e08 <_obstack_memory_used@@Base+0x11b8>
  41a108:	cbnz	w0, 419d48 <_obstack_memory_used@@Base+0x70f8>
  41a10c:	ldr	x7, [x28, #8]
  41a110:	ldr	x9, [sp, #96]
  41a114:	b	419f84 <_obstack_memory_used@@Base+0x7334>
  41a118:	ldr	x5, [x28, #200]
  41a11c:	b	419bc4 <_obstack_memory_used@@Base+0x6f74>
  41a120:	ldr	x0, [x26, #40]
  41a124:	lsl	x1, x1, #1
  41a128:	add	x27, x1, #0x1
  41a12c:	str	x9, [sp, #96]
  41a130:	lsl	x1, x27, #3
  41a134:	bl	402930 <realloc@plt>
  41a138:	cbz	x0, 41a0c8 <_obstack_memory_used@@Base+0x7478>
  41a13c:	str	x27, [x26, #24]
  41a140:	str	x0, [x26, #40]
  41a144:	ldr	x9, [sp, #96]
  41a148:	b	41a04c <_obstack_memory_used@@Base+0x73fc>
  41a14c:	mov	x9, x21
  41a150:	ldr	x25, [sp, #96]
  41a154:	b	419f60 <_obstack_memory_used@@Base+0x7310>
  41a158:	stp	x29, x30, [sp, #-112]!
  41a15c:	mov	x29, sp
  41a160:	stp	x21, x22, [sp, #32]
  41a164:	mov	x21, x0
  41a168:	stp	x23, x24, [sp, #48]
  41a16c:	ldp	x24, x0, [x1, #184]
  41a170:	stp	x19, x20, [sp, #16]
  41a174:	mov	x19, x1
  41a178:	ldr	x20, [x1, #72]
  41a17c:	ldr	x23, [x1, #152]
  41a180:	cmp	x0, x20
  41a184:	b.ge	41a1b4 <_obstack_memory_used@@Base+0x7564>  // b.tcont
  41a188:	mov	x22, x2
  41a18c:	str	x2, [x24, x20, lsl #3]
  41a190:	str	x20, [x1, #192]
  41a194:	ldr	x0, [x23, #152]
  41a198:	cbnz	x0, 41a278 <_obstack_memory_used@@Base+0x7628>
  41a19c:	mov	x0, x22
  41a1a0:	ldp	x19, x20, [sp, #16]
  41a1a4:	ldp	x21, x22, [sp, #32]
  41a1a8:	ldp	x23, x24, [sp, #48]
  41a1ac:	ldp	x29, x30, [sp], #112
  41a1b0:	ret
  41a1b4:	ldr	x0, [x24, x20, lsl #3]
  41a1b8:	cbz	x0, 41a26c <_obstack_memory_used@@Base+0x761c>
  41a1bc:	ldr	x0, [x0, #80]
  41a1c0:	cbz	x2, 41a22c <_obstack_memory_used@@Base+0x75dc>
  41a1c4:	ldr	x24, [x2, #80]
  41a1c8:	mov	x2, x0
  41a1cc:	add	x0, sp, #0x58
  41a1d0:	mov	x1, x24
  41a1d4:	bl	415970 <_obstack_memory_used@@Base+0x2d20>
  41a1d8:	str	w0, [x21]
  41a1dc:	cbnz	w0, 41a2cc <_obstack_memory_used@@Base+0x767c>
  41a1e0:	ldr	w2, [x19, #160]
  41a1e4:	mov	x0, x19
  41a1e8:	ldr	x1, [x19, #72]
  41a1ec:	str	x25, [sp, #64]
  41a1f0:	sub	x1, x1, #0x1
  41a1f4:	bl	417058 <_obstack_memory_used@@Base+0x4408>
  41a1f8:	ldr	x25, [x19, #184]
  41a1fc:	mov	w3, w0
  41a200:	add	x2, sp, #0x58
  41a204:	mov	x1, x23
  41a208:	mov	x0, x21
  41a20c:	bl	415ae8 <_obstack_memory_used@@Base+0x2e98>
  41a210:	str	x0, [x25, x20, lsl #3]
  41a214:	mov	x22, x0
  41a218:	cbz	x24, 41a2d4 <_obstack_memory_used@@Base+0x7684>
  41a21c:	ldr	x0, [sp, #104]
  41a220:	bl	402ae0 <free@plt>
  41a224:	ldr	x25, [sp, #64]
  41a228:	b	41a194 <_obstack_memory_used@@Base+0x7544>
  41a22c:	ldp	x2, x3, [x0]
  41a230:	stp	x2, x3, [sp, #88]
  41a234:	ldr	w2, [x19, #160]
  41a238:	ldr	x3, [x0, #16]
  41a23c:	sub	x1, x20, #0x1
  41a240:	mov	x0, x19
  41a244:	str	x3, [sp, #104]
  41a248:	bl	417058 <_obstack_memory_used@@Base+0x4408>
  41a24c:	mov	w3, w0
  41a250:	add	x2, sp, #0x58
  41a254:	mov	x1, x23
  41a258:	mov	x0, x21
  41a25c:	bl	415ae8 <_obstack_memory_used@@Base+0x2e98>
  41a260:	mov	x22, x0
  41a264:	str	x0, [x24, x20, lsl #3]
  41a268:	b	41a194 <_obstack_memory_used@@Base+0x7544>
  41a26c:	mov	x22, x2
  41a270:	str	x2, [x24, x20, lsl #3]
  41a274:	b	41a194 <_obstack_memory_used@@Base+0x7544>
  41a278:	cbz	x22, 41a2cc <_obstack_memory_used@@Base+0x767c>
  41a27c:	add	x23, x22, #0x10
  41a280:	add	x24, x22, #0x18
  41a284:	mov	x1, x23
  41a288:	mov	x2, x24
  41a28c:	mov	x3, x20
  41a290:	mov	x0, x19
  41a294:	bl	417ac0 <_obstack_memory_used@@Base+0x4e70>
  41a298:	str	w0, [x21]
  41a29c:	cbnz	w0, 41a2cc <_obstack_memory_used@@Base+0x767c>
  41a2a0:	ldrb	w0, [x22, #104]
  41a2a4:	tbz	w0, #6, 41a19c <_obstack_memory_used@@Base+0x754c>
  41a2a8:	mov	x2, x24
  41a2ac:	mov	x1, x23
  41a2b0:	mov	x0, x19
  41a2b4:	bl	419a68 <_obstack_memory_used@@Base+0x6e18>
  41a2b8:	str	w0, [x21]
  41a2bc:	cbnz	w0, 41a2cc <_obstack_memory_used@@Base+0x767c>
  41a2c0:	ldr	x0, [x19, #184]
  41a2c4:	ldr	x22, [x0, x20, lsl #3]
  41a2c8:	b	41a19c <_obstack_memory_used@@Base+0x754c>
  41a2cc:	mov	x22, #0x0                   	// #0
  41a2d0:	b	41a19c <_obstack_memory_used@@Base+0x754c>
  41a2d4:	ldr	x25, [sp, #64]
  41a2d8:	b	41a194 <_obstack_memory_used@@Base+0x7544>
  41a2dc:	nop
  41a2e0:	stp	x29, x30, [sp, #-160]!
  41a2e4:	mov	x29, sp
  41a2e8:	stp	x21, x22, [sp, #32]
  41a2ec:	mov	x21, x1
  41a2f0:	mov	x1, #0x1                   	// #1
  41a2f4:	stp	x19, x20, [sp, #16]
  41a2f8:	mov	x20, x0
  41a2fc:	mov	x0, #0x8                   	// #8
  41a300:	stp	x1, x1, [sp, #136]
  41a304:	ldp	x22, x19, [x21, #16]
  41a308:	bl	402800 <malloc@plt>
  41a30c:	str	x0, [sp, #152]
  41a310:	cbz	x0, 41a574 <_obstack_memory_used@@Base+0x7924>
  41a314:	mov	x4, x0
  41a318:	mov	x2, x19
  41a31c:	add	x3, sp, #0x88
  41a320:	mov	x1, x21
  41a324:	mov	x0, x20
  41a328:	str	x22, [x4]
  41a32c:	bl	41b6e0 <_obstack_memory_used@@Base+0x8a90>
  41a330:	cbnz	w0, 41a58c <_obstack_memory_used@@Base+0x793c>
  41a334:	add	x0, x21, #0x30
  41a338:	stp	x23, x24, [sp, #48]
  41a33c:	stp	x25, x26, [sp, #64]
  41a340:	mov	w25, #0x0                   	// #0
  41a344:	stp	x27, x28, [sp, #80]
  41a348:	str	x0, [sp, #112]
  41a34c:	add	x0, x21, #0x28
  41a350:	str	x0, [sp, #120]
  41a354:	cmp	x19, #0x0
  41a358:	b.le	41a528 <_obstack_memory_used@@Base+0x78d8>
  41a35c:	ldr	x0, [x21]
  41a360:	lsl	x26, x19, #3
  41a364:	ldr	w1, [x20, #224]
  41a368:	ldr	x2, [x0, x19, lsl #3]
  41a36c:	cmp	x2, #0x0
  41a370:	csinc	w25, wzr, w25, ne  // ne = any
  41a374:	cmp	w1, w25
  41a378:	b.lt	41a53c <_obstack_memory_used@@Base+0x78ec>  // b.tstop
  41a37c:	ldr	x0, [x20, #184]
  41a380:	sub	x19, x19, #0x1
  41a384:	add	x0, x0, x26
  41a388:	ldur	x22, [x0, #-8]
  41a38c:	str	xzr, [sp, #144]
  41a390:	cbz	x22, 41a4d4 <_obstack_memory_used@@Base+0x7884>
  41a394:	ldr	x0, [x22, #40]
  41a398:	add	x22, x22, #0x20
  41a39c:	ldr	x23, [x20, #152]
  41a3a0:	cmp	x0, #0x0
  41a3a4:	b.le	41a4d4 <_obstack_memory_used@@Base+0x7884>
  41a3a8:	mov	x24, #0x0                   	// #0
  41a3ac:	b	41a440 <_obstack_memory_used@@Base+0x77f0>
  41a3b0:	mov	x2, x19
  41a3b4:	mov	x0, x20
  41a3b8:	bl	417158 <_obstack_memory_used@@Base+0x4508>
  41a3bc:	tst	w0, #0xff
  41a3c0:	b.eq	41a430 <_obstack_memory_used@@Base+0x77e0>  // b.none
  41a3c4:	ldr	x0, [x21]
  41a3c8:	ldr	x0, [x0, x26]
  41a3cc:	cbz	x0, 41a430 <_obstack_memory_used@@Base+0x77e0>
  41a3d0:	ldr	x2, [x23, #24]
  41a3d4:	add	x1, x0, #0x18
  41a3d8:	ldr	x0, [x0, #16]
  41a3dc:	ldr	x2, [x2, x27, lsl #3]
  41a3e0:	bl	4148c8 <_obstack_memory_used@@Base+0x1c78>
  41a3e4:	cbz	x0, 41a430 <_obstack_memory_used@@Base+0x77e0>
  41a3e8:	mov	w6, #0x1                   	// #1
  41a3ec:	ldr	x0, [x21, #40]
  41a3f0:	cbz	x0, 41a41c <_obstack_memory_used@@Base+0x77cc>
  41a3f4:	ldr	x0, [x23, #24]
  41a3f8:	add	x4, x19, w6, sxtw
  41a3fc:	ldp	x2, x1, [sp, #112]
  41a400:	mov	x6, x19
  41a404:	ldr	x3, [x0, x27, lsl #3]
  41a408:	mov	x5, x27
  41a40c:	mov	x0, x20
  41a410:	bl	414b90 <_obstack_memory_used@@Base+0x1f40>
  41a414:	tst	w0, #0xff
  41a418:	b.ne	41a430 <_obstack_memory_used@@Base+0x77e0>  // b.any
  41a41c:	mov	x1, x27
  41a420:	add	x0, sp, #0x88
  41a424:	bl	413350 <_obstack_memory_used@@Base+0x700>
  41a428:	tst	w0, #0xff
  41a42c:	b.eq	41a520 <_obstack_memory_used@@Base+0x78d0>  // b.none
  41a430:	ldr	x0, [x22, #8]
  41a434:	add	x24, x24, #0x1
  41a438:	cmp	x24, x0
  41a43c:	b.ge	41a4d4 <_obstack_memory_used@@Base+0x7884>  // b.tcont
  41a440:	ldr	x0, [x22, #16]
  41a444:	ldr	x1, [x23]
  41a448:	ldr	x27, [x0, x24, lsl #3]
  41a44c:	lsl	x28, x27, #4
  41a450:	add	x1, x1, x28
  41a454:	ldrb	w0, [x1, #10]
  41a458:	tbz	w0, #4, 41a3b0 <_obstack_memory_used@@Base+0x7760>
  41a45c:	ldr	x8, [x20, #152]
  41a460:	mov	x4, x19
  41a464:	ldr	x9, [x21, #24]
  41a468:	mov	x1, x8
  41a46c:	mov	x3, x20
  41a470:	mov	x2, x27
  41a474:	stp	x9, x8, [sp, #96]
  41a478:	ldr	x0, [x1], #216
  41a47c:	bl	418ad8 <_obstack_memory_used@@Base+0x5e88>
  41a480:	mov	w6, w0
  41a484:	cmp	w0, #0x0
  41a488:	b.le	41a518 <_obstack_memory_used@@Base+0x78c8>
  41a48c:	ldr	x9, [sp, #96]
  41a490:	add	x0, x19, w0, sxtw
  41a494:	cmp	x9, x0
  41a498:	b.lt	41a3ec <_obstack_memory_used@@Base+0x779c>  // b.tstop
  41a49c:	ldr	x1, [x21]
  41a4a0:	ldr	x8, [sp, #104]
  41a4a4:	ldr	x0, [x1, x0, lsl #3]
  41a4a8:	cbz	x0, 41a4c8 <_obstack_memory_used@@Base+0x7878>
  41a4ac:	ldr	x2, [x8, #24]
  41a4b0:	add	x1, x0, #0x18
  41a4b4:	ldr	x0, [x0, #16]
  41a4b8:	ldr	x2, [x2, x27, lsl #3]
  41a4bc:	bl	4148c8 <_obstack_memory_used@@Base+0x1c78>
  41a4c0:	cbnz	x0, 41a3ec <_obstack_memory_used@@Base+0x779c>
  41a4c4:	nop
  41a4c8:	ldr	x1, [x23]
  41a4cc:	add	x1, x1, x28
  41a4d0:	b	41a3b0 <_obstack_memory_used@@Base+0x7760>
  41a4d4:	add	x3, sp, #0x88
  41a4d8:	mov	x2, x19
  41a4dc:	mov	x1, x21
  41a4e0:	mov	x0, x20
  41a4e4:	bl	41b6e0 <_obstack_memory_used@@Base+0x8a90>
  41a4e8:	mov	w22, w0
  41a4ec:	cbz	w0, 41a354 <_obstack_memory_used@@Base+0x7704>
  41a4f0:	ldp	x23, x24, [sp, #48]
  41a4f4:	ldp	x25, x26, [sp, #64]
  41a4f8:	ldp	x27, x28, [sp, #80]
  41a4fc:	ldr	x0, [sp, #152]
  41a500:	bl	402ae0 <free@plt>
  41a504:	mov	w0, w22
  41a508:	ldp	x19, x20, [sp, #16]
  41a50c:	ldp	x21, x22, [sp, #32]
  41a510:	ldp	x29, x30, [sp], #160
  41a514:	ret
  41a518:	b.eq	41a4c8 <_obstack_memory_used@@Base+0x7878>  // b.none
  41a51c:	b	41a3ec <_obstack_memory_used@@Base+0x779c>
  41a520:	mov	w22, #0xc                   	// #12
  41a524:	b	41a4f0 <_obstack_memory_used@@Base+0x78a0>
  41a528:	mov	w22, #0x0                   	// #0
  41a52c:	ldp	x23, x24, [sp, #48]
  41a530:	ldp	x25, x26, [sp, #64]
  41a534:	ldp	x27, x28, [sp, #80]
  41a538:	b	41a4fc <_obstack_memory_used@@Base+0x78ac>
  41a53c:	mov	x2, x26
  41a540:	mov	w1, #0x0                   	// #0
  41a544:	bl	4028d0 <memset@plt>
  41a548:	mov	w22, #0x0                   	// #0
  41a54c:	ldr	x0, [sp, #152]
  41a550:	bl	402ae0 <free@plt>
  41a554:	mov	w0, w22
  41a558:	ldp	x19, x20, [sp, #16]
  41a55c:	ldp	x21, x22, [sp, #32]
  41a560:	ldp	x23, x24, [sp, #48]
  41a564:	ldp	x25, x26, [sp, #64]
  41a568:	ldp	x27, x28, [sp, #80]
  41a56c:	ldp	x29, x30, [sp], #160
  41a570:	ret
  41a574:	mov	w22, #0xc                   	// #12
  41a578:	mov	w0, w22
  41a57c:	ldp	x19, x20, [sp, #16]
  41a580:	ldp	x21, x22, [sp, #32]
  41a584:	ldp	x29, x30, [sp], #160
  41a588:	ret
  41a58c:	mov	w22, w0
  41a590:	b	41a4fc <_obstack_memory_used@@Base+0x78ac>
  41a594:	nop
  41a598:	sub	sp, sp, #0x260
  41a59c:	stp	x29, x30, [sp]
  41a5a0:	mov	x29, sp
  41a5a4:	stp	x19, x20, [sp, #16]
  41a5a8:	mov	x20, x3
  41a5ac:	ldr	w3, [sp, #608]
  41a5b0:	stp	x21, x22, [sp, #32]
  41a5b4:	mov	x22, x0
  41a5b8:	mov	x21, x4
  41a5bc:	mov	x19, x5
  41a5c0:	stp	x25, x26, [sp, #64]
  41a5c4:	stp	x27, x28, [sp, #80]
  41a5c8:	str	x0, [sp, #104]
  41a5cc:	str	x6, [sp, #120]
  41a5d0:	str	w3, [sp, #144]
  41a5d4:	str	x2, [sp, #152]
  41a5d8:	mov	x2, #0x100                 	// #256
  41a5dc:	str	x1, [sp, #176]
  41a5e0:	mov	w1, #0x0                   	// #0
  41a5e4:	str	x7, [sp, #256]
  41a5e8:	ldr	x27, [x0]
  41a5ec:	add	x0, sp, #0x160
  41a5f0:	bl	4028d0 <memset@plt>
  41a5f4:	str	x27, [sp, #504]
  41a5f8:	ldr	x26, [x22, #32]
  41a5fc:	cbz	x26, 41a614 <_obstack_memory_used@@Base+0x79c4>
  41a600:	ldrb	w0, [x22, #56]
  41a604:	tst	x0, #0x8
  41a608:	ccmp	x20, x21, #0x4, ne  // ne = any
  41a60c:	b.ne	41a9ec <_obstack_memory_used@@Base+0x7d9c>  // b.any
  41a610:	mov	x26, #0x0                   	// #0
  41a614:	ldr	x0, [sp, #104]
  41a618:	str	xzr, [sp, #224]
  41a61c:	ldr	x3, [sp, #120]
  41a620:	ldr	x0, [x0, #48]
  41a624:	cmp	x0, x3
  41a628:	b.cs	41a644 <_obstack_memory_used@@Base+0x79f4>  // b.hs, b.nlast
  41a62c:	sub	x1, x3, #0x1
  41a630:	sub	x2, x0, x1
  41a634:	sub	x0, x1, x0
  41a638:	str	x0, [sp, #224]
  41a63c:	add	x0, x3, x2
  41a640:	str	x0, [sp, #120]
  41a644:	ldr	x4, [sp, #104]
  41a648:	ldr	x0, [x4, #16]
  41a64c:	cbz	x0, 41b1a4 <_obstack_memory_used@@Base+0x8554>
  41a650:	ldr	x0, [x27, #72]
  41a654:	cbz	x0, 41b1a4 <_obstack_memory_used@@Base+0x8554>
  41a658:	ldr	x1, [x27, #80]
  41a65c:	cbz	x1, 41b1a4 <_obstack_memory_used@@Base+0x8554>
  41a660:	ldr	x2, [x27, #88]
  41a664:	cbz	x2, 41b1a4 <_obstack_memory_used@@Base+0x8554>
  41a668:	ldr	x3, [x27, #96]
  41a66c:	cbz	x3, 41b1a4 <_obstack_memory_used@@Base+0x8554>
  41a670:	ldr	x0, [x0, #16]
  41a674:	cbnz	x0, 41a6b0 <_obstack_memory_used@@Base+0x7a60>
  41a678:	ldr	x0, [x1, #16]
  41a67c:	cbnz	x0, 41a6b0 <_obstack_memory_used@@Base+0x7a60>
  41a680:	ldr	x0, [x2, #16]
  41a684:	cbz	x0, 41a690 <_obstack_memory_used@@Base+0x7a40>
  41a688:	ldrsb	w0, [x4, #56]
  41a68c:	tbnz	w0, #31, 41a6b0 <_obstack_memory_used@@Base+0x7a60>
  41a690:	mov	w0, #0x1                   	// #1
  41a694:	str	w0, [sp, #116]
  41a698:	cmp	x20, #0x0
  41a69c:	ccmp	x21, #0x0, #0x4, ne  // ne = any
  41a6a0:	b.ne	41b184 <_obstack_memory_used@@Base+0x8534>  // b.any
  41a6a4:	mov	x21, #0x0                   	// #0
  41a6a8:	mov	x20, #0x0                   	// #0
  41a6ac:	nop
  41a6b0:	ldr	x0, [sp, #120]
  41a6b4:	cbnz	x0, 41a9dc <_obstack_memory_used@@Base+0x7d8c>
  41a6b8:	ldr	x0, [x27, #152]
  41a6bc:	cmp	x0, #0x0
  41a6c0:	cset	w0, ne  // ne = any
  41a6c4:	str	w0, [sp, #160]
  41a6c8:	str	w0, [sp, #200]
  41a6cc:	ldr	x8, [sp, #104]
  41a6d0:	add	x0, sp, #0x160
  41a6d4:	ldr	w6, [x27, #180]
  41a6d8:	ldr	x2, [x27, #16]
  41a6dc:	str	w6, [sp, #496]
  41a6e0:	ldr	x3, [x8, #24]
  41a6e4:	add	x1, x2, #0x1
  41a6e8:	ldr	x7, [sp, #152]
  41a6ec:	sxtw	x2, w6
  41a6f0:	ldr	x8, [x8, #40]
  41a6f4:	cmp	x1, x2
  41a6f8:	ldr	x5, [sp, #176]
  41a6fc:	csel	x1, x1, x2, ge  // ge = tcont
  41a700:	add	x4, x7, #0x1
  41a704:	str	x5, [sp, #352]
  41a708:	and	x5, x3, #0x400000
  41a70c:	cmp	x1, x4
  41a710:	orr	x2, x5, x8
  41a714:	csel	x1, x1, x4, le
  41a718:	cmp	x2, #0x0
  41a71c:	ldrb	w2, [x27, #176]
  41a720:	ubfx	w3, w3, #22, #1
  41a724:	strb	w3, [sp, #488]
  41a728:	cset	w3, ne  // ne = any
  41a72c:	strb	w3, [sp, #491]
  41a730:	ubfx	x3, x2, #2, #1
  41a734:	ubfx	x2, x2, #3, #1
  41a738:	str	x8, [sp, #240]
  41a73c:	stp	x7, x7, [sp, #432]
  41a740:	stp	x7, x7, [sp, #448]
  41a744:	str	x8, [sp, #472]
  41a748:	strb	w3, [sp, #489]
  41a74c:	strb	w2, [sp, #490]
  41a750:	bl	413238 <_obstack_memory_used@@Base+0x5e8>
  41a754:	str	w0, [sp, #116]
  41a758:	cbnz	w0, 41b490 <_obstack_memory_used@@Base+0x8840>
  41a75c:	ldrb	w0, [x27, #176]
  41a760:	add	x1, x27, #0xb8
  41a764:	ldrb	w2, [sp, #491]
  41a768:	str	x1, [sp, #480]
  41a76c:	ubfx	x0, x0, #4, #1
  41a770:	strb	w0, [sp, #494]
  41a774:	cbnz	w2, 41a790 <_obstack_memory_used@@Base+0x7b40>
  41a778:	ldr	x0, [sp, #176]
  41a77c:	str	x0, [sp, #360]
  41a780:	ldr	w0, [x27, #180]
  41a784:	ldr	x1, [sp, #152]
  41a788:	cmp	w0, #0x1
  41a78c:	b.le	41a794 <_obstack_memory_used@@Base+0x7b44>
  41a790:	mov	x1, #0x0                   	// #0
  41a794:	ldr	x0, [sp, #104]
  41a798:	mov	x2, #0xffffffffffffffff    	// #-1
  41a79c:	ldr	x22, [x27, #152]
  41a7a0:	stp	x1, x1, [sp, #400]
  41a7a4:	ldrb	w0, [x0, #56]
  41a7a8:	stp	x19, x19, [sp, #448]
  41a7ac:	cmp	xzr, x22, lsl #1
  41a7b0:	ubfx	x0, x0, #7, #1
  41a7b4:	strb	w0, [sp, #493]
  41a7b8:	ldr	w0, [sp, #144]
  41a7bc:	lsl	x19, x22, #1
  41a7c0:	str	w0, [sp, #512]
  41a7c4:	str	x2, [sp, #520]
  41a7c8:	b.ge	41a80c <_obstack_memory_used@@Base+0x7bbc>  // b.tcont
  41a7cc:	mov	x0, #0x6666666666666666    	// #7378697629483820646
  41a7d0:	movk	x0, #0x666, lsl #48
  41a7d4:	cmp	x19, x0
  41a7d8:	b.gt	41b488 <_obstack_memory_used@@Base+0x8838>
  41a7dc:	add	x0, x19, x22, lsl #3
  41a7e0:	lsl	x0, x0, #3
  41a7e4:	bl	402800 <malloc@plt>
  41a7e8:	mov	x1, x0
  41a7ec:	lsl	x0, x22, #4
  41a7f0:	mov	x22, x1
  41a7f4:	str	x1, [sp, #568]
  41a7f8:	bl	402800 <malloc@plt>
  41a7fc:	str	x0, [sp, #600]
  41a800:	cmp	x0, #0x0
  41a804:	ccmp	x22, #0x0, #0x4, ne  // ne = any
  41a808:	b.eq	41b488 <_obstack_memory_used@@Base+0x8838>  // b.none
  41a80c:	mov	w0, #0x1                   	// #1
  41a810:	str	w0, [sp, #576]
  41a814:	ldr	x0, [sp, #120]
  41a818:	str	x19, [sp, #560]
  41a81c:	str	x19, [sp, #592]
  41a820:	cmp	x0, #0x1
  41a824:	b.ls	41b47c <_obstack_memory_used@@Base+0x882c>  // b.plast
  41a828:	ldr	x0, [sp, #416]
  41a82c:	mov	x1, #0x1ffffffffffffffe    	// #2305843009213693950
  41a830:	cmp	x0, x1
  41a834:	b.hi	41b488 <_obstack_memory_used@@Base+0x8838>  // b.pmore
  41a838:	add	x0, x0, #0x1
  41a83c:	lsl	x0, x0, #3
  41a840:	bl	402800 <malloc@plt>
  41a844:	str	x0, [sp, #536]
  41a848:	mov	x28, x0
  41a84c:	cbz	x0, 41b5f4 <_obstack_memory_used@@Base+0x89a4>
  41a850:	ldr	x0, [sp, #144]
  41a854:	mov	w1, #0x6                   	// #6
  41a858:	mov	w2, #0x1                   	// #1
  41a85c:	str	x20, [sp, #288]
  41a860:	tst	x0, #0x1
  41a864:	mov	w0, #0x4                   	// #4
  41a868:	csel	w1, w0, w1, ne  // ne = any
  41a86c:	cmp	x20, x21
  41a870:	str	w1, [sp, #464]
  41a874:	csel	x1, x20, x21, ge  // ge = tcont
  41a878:	str	x1, [sp, #128]
  41a87c:	mov	w1, #0x8                   	// #8
  41a880:	cneg	w2, w2, gt
  41a884:	str	w1, [sp, #164]
  41a888:	ldr	w1, [x27, #180]
  41a88c:	str	w2, [sp, #204]
  41a890:	csel	x2, x20, x21, le
  41a894:	str	x2, [sp, #168]
  41a898:	str	w1, [sp, #236]
  41a89c:	cbz	x26, 41a8f0 <_obstack_memory_used@@Base+0x7ca0>
  41a8a0:	ldr	w1, [sp, #236]
  41a8a4:	cmp	w1, #0x1
  41a8a8:	b.eq	41a8cc <_obstack_memory_used@@Base+0x7c7c>  // b.none
  41a8ac:	ldr	x0, [sp, #104]
  41a8b0:	ldr	x1, [sp, #240]
  41a8b4:	ldr	x0, [x0, #24]
  41a8b8:	and	x0, x0, #0x400000
  41a8bc:	orr	x0, x1, x0
  41a8c0:	cmp	x0, #0x0
  41a8c4:	cset	w0, eq  // eq = none
  41a8c8:	lsl	w0, w0, #2
  41a8cc:	cmp	x20, x21
  41a8d0:	mov	w1, #0x2                   	// #2
  41a8d4:	csel	w2, wzr, w1, gt
  41a8d8:	ldr	x1, [sp, #240]
  41a8dc:	cmp	x1, #0x0
  41a8e0:	cset	w1, ne  // ne = any
  41a8e4:	orr	w0, w1, w0
  41a8e8:	orr	w0, w0, w2
  41a8ec:	str	w0, [sp, #164]
  41a8f0:	ldr	x0, [sp, #168]
  41a8f4:	cmp	x20, x0
  41a8f8:	ldr	x0, [sp, #128]
  41a8fc:	cset	w1, lt  // lt = tstop
  41a900:	cmp	x20, x0
  41a904:	cset	w0, gt
  41a908:	orr	w0, w1, w0
  41a90c:	str	w0, [sp, #268]
  41a910:	cbnz	w0, 41b630 <_obstack_memory_used@@Base+0x89e0>
  41a914:	cmp	x20, x21
  41a918:	add	x0, sp, #0x120
  41a91c:	csel	x0, x0, xzr, le
  41a920:	str	x0, [sp, #248]
  41a924:	cmp	x0, #0x0
  41a928:	stp	x23, x24, [sp, #48]
  41a92c:	cset	w0, ne  // ne = any
  41a930:	stp	x27, x26, [sp, #184]
  41a934:	str	w0, [sp, #264]
  41a938:	ldr	w0, [sp, #164]
  41a93c:	cmp	w0, #0x7
  41a940:	b.eq	41afdc <_obstack_memory_used@@Base+0x838c>  // b.none
  41a944:	cmp	w0, #0x8
  41a948:	b.eq	41aad0 <_obstack_memory_used@@Base+0x7e80>  // b.none
  41a94c:	cmp	w0, #0x5
  41a950:	b.gt	41a9f8 <_obstack_memory_used@@Base+0x7da8>
  41a954:	cmp	w0, #0x3
  41a958:	b.gt	41b3fc <_obstack_memory_used@@Base+0x87ac>
  41a95c:	ldrsw	x19, [sp, #204]
  41a960:	ldr	x23, [sp, #128]
  41a964:	ldr	x21, [sp, #152]
  41a968:	ldr	x22, [sp, #168]
  41a96c:	ldr	x26, [sp, #192]
  41a970:	ldr	x2, [sp, #392]
  41a974:	b	41a9ac <_obstack_memory_used@@Base+0x7d5c>
  41a978:	cmp	x21, x20
  41a97c:	mov	x0, x26
  41a980:	b.le	41a990 <_obstack_memory_used@@Base+0x7d40>
  41a984:	ldr	x0, [sp, #360]
  41a988:	ldrb	w0, [x0, x1]
  41a98c:	add	x0, x26, x0
  41a990:	ldrb	w0, [x0]
  41a994:	cbnz	w0, 41aad0 <_obstack_memory_used@@Base+0x7e80>
  41a998:	add	x20, x20, x19
  41a99c:	str	x20, [sp, #288]
  41a9a0:	cmp	x20, x22
  41a9a4:	ccmp	x20, x23, #0x0, ge  // ge = tcont
  41a9a8:	b.gt	41aa78 <_obstack_memory_used@@Base+0x7e28>
  41a9ac:	ldr	x0, [sp, #408]
  41a9b0:	sub	x1, x20, x2
  41a9b4:	cmp	x0, x1
  41a9b8:	b.hi	41a978 <_obstack_memory_used@@Base+0x7d28>  // b.pmore
  41a9bc:	ldr	w2, [sp, #144]
  41a9c0:	mov	x1, x20
  41a9c4:	add	x0, sp, #0x160
  41a9c8:	bl	417280 <_obstack_memory_used@@Base+0x4630>
  41a9cc:	cbnz	w0, 41b600 <_obstack_memory_used@@Base+0x89b0>
  41a9d0:	ldr	x2, [sp, #392]
  41a9d4:	sub	x1, x20, x2
  41a9d8:	b	41a978 <_obstack_memory_used@@Base+0x7d28>
  41a9dc:	mov	w0, #0x1                   	// #1
  41a9e0:	str	w0, [sp, #160]
  41a9e4:	str	w0, [sp, #200]
  41a9e8:	b	41a6cc <_obstack_memory_used@@Base+0x7a7c>
  41a9ec:	tst	x0, #0x1
  41a9f0:	csel	x26, x26, xzr, eq  // eq = none
  41a9f4:	b	41a614 <_obstack_memory_used@@Base+0x79c4>
  41a9f8:	ldr	w0, [sp, #164]
  41a9fc:	cmp	w0, #0x6
  41aa00:	b.ne	41a95c <_obstack_memory_used@@Base+0x7d0c>  // b.any
  41aa04:	ldr	x0, [sp, #128]
  41aa08:	mov	w2, #0x0                   	// #0
  41aa0c:	cmp	x0, x20
  41aa10:	mov	x0, x20
  41aa14:	b.le	41aac4 <_obstack_memory_used@@Base+0x7e74>
  41aa18:	ldr	x4, [sp, #128]
  41aa1c:	ldr	x3, [sp, #176]
  41aa20:	ldr	x26, [sp, #192]
  41aa24:	nop
  41aa28:	ldrb	w1, [x3, x0]
  41aa2c:	ldrb	w1, [x26, x1]
  41aa30:	cbnz	w1, 41aab8 <_obstack_memory_used@@Base+0x7e68>
  41aa34:	add	x0, x0, #0x1
  41aa38:	mov	w2, #0x1                   	// #1
  41aa3c:	cmp	x0, x4
  41aa40:	b.ne	41aa28 <_obstack_memory_used@@Base+0x7dd8>  // b.any
  41aa44:	ldr	x20, [sp, #128]
  41aa48:	ldr	x0, [sp, #128]
  41aa4c:	str	x0, [sp, #288]
  41aa50:	ldr	x0, [sp, #152]
  41aa54:	cmp	x20, x0
  41aa58:	mov	x0, #0x0                   	// #0
  41aa5c:	b.lt	41b590 <_obstack_memory_used@@Base+0x8940>  // b.tstop
  41aa60:	ldr	x1, [sp, #240]
  41aa64:	cbz	x1, 41aa6c <_obstack_memory_used@@Base+0x7e1c>
  41aa68:	ldrb	w0, [x1, x0]
  41aa6c:	ldr	x1, [sp, #192]
  41aa70:	ldrb	w0, [x1, x0]
  41aa74:	cbnz	w0, 41aad0 <_obstack_memory_used@@Base+0x7e80>
  41aa78:	ldr	x27, [sp, #184]
  41aa7c:	mov	w0, #0x1                   	// #1
  41aa80:	ldr	x28, [sp, #536]
  41aa84:	str	w0, [sp, #116]
  41aa88:	ldp	x23, x24, [sp, #48]
  41aa8c:	mov	x0, x28
  41aa90:	bl	402ae0 <free@plt>
  41aa94:	ldr	x0, [x27, #152]
  41aa98:	cbz	x0, 41b17c <_obstack_memory_used@@Base+0x852c>
  41aa9c:	add	x0, sp, #0x160
  41aaa0:	bl	4147c0 <_obstack_memory_used@@Base+0x1b70>
  41aaa4:	ldr	x0, [sp, #600]
  41aaa8:	bl	402ae0 <free@plt>
  41aaac:	ldr	x0, [sp, #568]
  41aab0:	bl	402ae0 <free@plt>
  41aab4:	b	41b17c <_obstack_memory_used@@Base+0x852c>
  41aab8:	cbz	w2, 41aad0 <_obstack_memory_used@@Base+0x7e80>
  41aabc:	mov	x20, x0
  41aac0:	str	x0, [sp, #288]
  41aac4:	ldr	x0, [sp, #128]
  41aac8:	cmp	x0, x20
  41aacc:	b.eq	41aa50 <_obstack_memory_used@@Base+0x7e00>  // b.none
  41aad0:	ldr	w2, [sp, #144]
  41aad4:	mov	x1, x20
  41aad8:	add	x0, sp, #0x160
  41aadc:	bl	417280 <_obstack_memory_used@@Base+0x4630>
  41aae0:	str	w0, [sp, #116]
  41aae4:	cbnz	w0, 41b4f4 <_obstack_memory_used@@Base+0x88a4>
  41aae8:	ldr	w0, [sp, #236]
  41aaec:	cmp	w0, #0x1
  41aaf0:	b.eq	41ab0c <_obstack_memory_used@@Base+0x7ebc>  // b.none
  41aaf4:	ldr	x0, [sp, #400]
  41aaf8:	cbz	x0, 41ab0c <_obstack_memory_used@@Base+0x7ebc>
  41aafc:	ldr	x0, [sp, #368]
  41ab00:	ldr	w0, [x0]
  41ab04:	cmn	w0, #0x1
  41ab08:	b.eq	41afb0 <_obstack_memory_used@@Base+0x8360>  // b.none
  41ab0c:	ldr	x20, [sp, #504]
  41ab10:	str	wzr, [sp, #280]
  41ab14:	ldr	x27, [sp, #424]
  41ab18:	ldr	x19, [x20, #72]
  41ab1c:	ldrsb	w0, [x19, #104]
  41ab20:	str	xzr, [sp, #544]
  41ab24:	str	xzr, [sp, #552]
  41ab28:	str	wzr, [sp, #576]
  41ab2c:	tbz	w0, #31, 41ab60 <_obstack_memory_used@@Base+0x7f10>
  41ab30:	ldr	w2, [sp, #512]
  41ab34:	sub	x1, x27, #0x1
  41ab38:	add	x0, sp, #0x160
  41ab3c:	bl	417058 <_obstack_memory_used@@Base+0x4408>
  41ab40:	tbnz	w0, #0, 41b4b8 <_obstack_memory_used@@Base+0x8868>
  41ab44:	cbz	w0, 41ab60 <_obstack_memory_used@@Base+0x7f10>
  41ab48:	and	w1, w0, #0x6
  41ab4c:	cmp	w1, #0x6
  41ab50:	b.eq	41b498 <_obstack_memory_used@@Base+0x8848>  // b.none
  41ab54:	tbnz	w0, #1, 41b53c <_obstack_memory_used@@Base+0x88ec>
  41ab58:	tbnz	w0, #2, 41b554 <_obstack_memory_used@@Base+0x8904>
  41ab5c:	nop
  41ab60:	ldr	x0, [sp, #536]
  41ab64:	cbz	x0, 41b3f0 <_obstack_memory_used@@Base+0x87a0>
  41ab68:	ldr	x1, [x20, #152]
  41ab6c:	str	x19, [x0, x27, lsl #3]
  41ab70:	cbnz	x1, 41b59c <_obstack_memory_used@@Base+0x894c>
  41ab74:	ldrb	w0, [x19, #104]
  41ab78:	ldr	w24, [sp, #264]
  41ab7c:	str	xzr, [sp, #96]
  41ab80:	mov	x25, #0xffffffffffffffff    	// #-1
  41ab84:	tbnz	w0, #4, 41b504 <_obstack_memory_used@@Base+0x88b4>
  41ab88:	ldr	x0, [sp, #248]
  41ab8c:	str	x0, [sp, #136]
  41ab90:	ldr	x22, [sp, #424]
  41ab94:	ldr	x0, [sp, #456]
  41ab98:	cmp	x0, x22
  41ab9c:	b.le	41ae54 <_obstack_memory_used@@Base+0x8204>
  41aba0:	ldr	x0, [sp, #416]
  41aba4:	add	x21, x22, #0x1
  41aba8:	cmp	x21, x0
  41abac:	b.ge	41ac5c <_obstack_memory_used@@Base+0x800c>  // b.tcont
  41abb0:	ldr	x0, [sp, #400]
  41abb4:	cmp	x21, x0
  41abb8:	b.ge	41b108 <_obstack_memory_used@@Base+0x84b8>  // b.tcont
  41abbc:	ldrb	w0, [x19, #104]
  41abc0:	mov	x4, x22
  41abc4:	tbnz	w0, #5, 41ac90 <_obstack_memory_used@@Base+0x8040>
  41abc8:	ldr	x0, [sp, #360]
  41abcc:	add	x1, x4, #0x1
  41abd0:	str	x1, [sp, #424]
  41abd4:	ldrb	w20, [x0, x4]
  41abd8:	ldr	x0, [x19, #88]
  41abdc:	cbz	x0, 41b0d8 <_obstack_memory_used@@Base+0x8488>
  41abe0:	ldr	x20, [x0, x20, lsl #3]
  41abe4:	ldr	x0, [sp, #536]
  41abe8:	cbz	x0, 41ac00 <_obstack_memory_used@@Base+0x7fb0>
  41abec:	mov	x2, x20
  41abf0:	add	x1, sp, #0x160
  41abf4:	add	x0, sp, #0x118
  41abf8:	bl	41a158 <_obstack_memory_used@@Base+0x7508>
  41abfc:	mov	x20, x0
  41ac00:	cbz	x20, 41adfc <_obstack_memory_used@@Base+0x81ac>
  41ac04:	cmp	x19, x20
  41ac08:	ldrb	w0, [x20, #104]
  41ac0c:	csel	w24, w24, wzr, eq  // eq = none
  41ac10:	cmp	w24, #0x0
  41ac14:	csel	x27, x27, x21, eq  // eq = none
  41ac18:	ldr	x22, [sp, #424]
  41ac1c:	tbz	w0, #4, 41ac3c <_obstack_memory_used@@Base+0x7fec>
  41ac20:	tbnz	w0, #7, 41b058 <_obstack_memory_used@@Base+0x8408>
  41ac24:	ldr	w0, [sp, #160]
  41ac28:	mov	x25, x22
  41ac2c:	cbz	w0, 41ae68 <_obstack_memory_used@@Base+0x8218>
  41ac30:	mov	x0, #0x1                   	// #1
  41ac34:	str	x0, [sp, #96]
  41ac38:	str	xzr, [sp, #136]
  41ac3c:	ldr	x0, [sp, #456]
  41ac40:	cmp	x0, x22
  41ac44:	b.le	41ae54 <_obstack_memory_used@@Base+0x8204>
  41ac48:	ldr	x0, [sp, #416]
  41ac4c:	add	x21, x22, #0x1
  41ac50:	mov	x19, x20
  41ac54:	cmp	x21, x0
  41ac58:	b.lt	41abb0 <_obstack_memory_used@@Base+0x7f60>  // b.tstop
  41ac5c:	ldr	x1, [sp, #440]
  41ac60:	cmp	x0, x1
  41ac64:	b.ge	41abb0 <_obstack_memory_used@@Base+0x7f60>  // b.tcont
  41ac68:	add	w1, w21, #0x1
  41ac6c:	add	x0, sp, #0x160
  41ac70:	bl	413e08 <_obstack_memory_used@@Base+0x11b8>
  41ac74:	str	w0, [sp, #280]
  41ac78:	cbnz	w0, 41b4a0 <_obstack_memory_used@@Base+0x8850>
  41ac7c:	ldrb	w0, [x19, #104]
  41ac80:	ldr	x22, [sp, #424]
  41ac84:	mov	x4, x22
  41ac88:	tbz	w0, #5, 41abc8 <_obstack_memory_used@@Base+0x7f78>
  41ac8c:	nop
  41ac90:	ldr	x26, [x19, #16]
  41ac94:	ldr	x20, [sp, #504]
  41ac98:	cmp	x26, #0x0
  41ac9c:	b.le	41adf4 <_obstack_memory_used@@Base+0x81a4>
  41aca0:	add	x22, x20, #0xd8
  41aca4:	stp	x21, x25, [sp, #208]
  41aca8:	mov	x21, x4
  41acac:	str	w24, [sp, #232]
  41acb0:	mov	x24, x26
  41acb4:	mov	x23, #0x0                   	// #0
  41acb8:	ldr	x0, [x19, #24]
  41acbc:	ldr	x25, [x20]
  41acc0:	ldr	x28, [x0, x23, lsl #3]
  41acc4:	add	x0, x25, x28, lsl #4
  41acc8:	ldrb	w1, [x0, #10]
  41accc:	tbz	w1, #4, 41addc <_obstack_memory_used@@Base+0x818c>
  41acd0:	ldr	w26, [x0, #8]
  41acd4:	tst	w26, #0x3ff00
  41acd8:	b.eq	41ad10 <_obstack_memory_used@@Base+0x80c0>  // b.none
  41acdc:	ldr	w2, [sp, #512]
  41ace0:	mov	x1, x21
  41ace4:	add	x0, sp, #0x160
  41ace8:	bl	417058 <_obstack_memory_used@@Base+0x4408>
  41acec:	ubfx	x2, x26, #8, #10
  41acf0:	tbz	w26, #10, 41b070 <_obstack_memory_used@@Base+0x8420>
  41acf4:	tbz	w0, #0, 41addc <_obstack_memory_used@@Base+0x818c>
  41acf8:	tbnz	w2, #3, 41addc <_obstack_memory_used@@Base+0x818c>
  41acfc:	tbz	w2, #5, 41ad04 <_obstack_memory_used@@Base+0x80b4>
  41ad00:	tbz	w0, #1, 41addc <_obstack_memory_used@@Base+0x818c>
  41ad04:	tbz	w2, #7, 41ad10 <_obstack_memory_used@@Base+0x80c0>
  41ad08:	tbz	w0, #3, 41addc <_obstack_memory_used@@Base+0x818c>
  41ad0c:	nop
  41ad10:	mov	x1, x22
  41ad14:	mov	x4, x21
  41ad18:	mov	x0, x25
  41ad1c:	add	x3, sp, #0x160
  41ad20:	mov	x2, x28
  41ad24:	bl	418ad8 <_obstack_memory_used@@Base+0x5e88>
  41ad28:	mov	w1, w0
  41ad2c:	cbz	w0, 41add4 <_obstack_memory_used@@Base+0x8184>
  41ad30:	ldr	w2, [sp, #576]
  41ad34:	add	x0, sp, #0x160
  41ad38:	ldr	x26, [sp, #424]
  41ad3c:	cmp	w2, w1
  41ad40:	add	x26, x26, w1, sxtw
  41ad44:	csel	w1, w2, w1, ge  // ge = tcont
  41ad48:	str	w1, [sp, #576]
  41ad4c:	mov	x1, x26
  41ad50:	bl	413f48 <_obstack_memory_used@@Base+0x12f8>
  41ad54:	str	w0, [sp, #284]
  41ad58:	cbnz	w0, 41b118 <_obstack_memory_used@@Base+0x84c8>
  41ad5c:	ldr	x0, [x20, #24]
  41ad60:	ldr	x21, [sp, #536]
  41ad64:	ldr	x0, [x0, x28, lsl #3]
  41ad68:	ldr	x1, [x21, x26, lsl #3]
  41ad6c:	ldr	x3, [x20, #48]
  41ad70:	add	x0, x0, x0, lsl #1
  41ad74:	add	x3, x3, x0, lsl #3
  41ad78:	cbz	x1, 41b07c <_obstack_memory_used@@Base+0x842c>
  41ad7c:	ldr	x1, [x1, #80]
  41ad80:	mov	x2, x3
  41ad84:	add	x0, sp, #0x128
  41ad88:	bl	415970 <_obstack_memory_used@@Base+0x2d20>
  41ad8c:	str	w0, [sp, #284]
  41ad90:	cbnz	w0, 41b118 <_obstack_memory_used@@Base+0x84c8>
  41ad94:	ldr	w2, [sp, #512]
  41ad98:	sub	x1, x26, #0x1
  41ad9c:	add	x0, sp, #0x160
  41ada0:	bl	417058 <_obstack_memory_used@@Base+0x4408>
  41ada4:	mov	w3, w0
  41ada8:	ldr	x28, [sp, #536]
  41adac:	mov	x1, x20
  41adb0:	add	x2, sp, #0x128
  41adb4:	add	x0, sp, #0x11c
  41adb8:	bl	415ae8 <_obstack_memory_used@@Base+0x2e98>
  41adbc:	str	x0, [x28, x26, lsl #3]
  41adc0:	ldr	x0, [sp, #312]
  41adc4:	bl	402ae0 <free@plt>
  41adc8:	ldr	x1, [sp, #536]
  41adcc:	ldr	x0, [x1, x26, lsl #3]
  41add0:	cbz	x0, 41b0c4 <_obstack_memory_used@@Base+0x8474>
  41add4:	ldr	x24, [x19, #16]
  41add8:	ldr	x21, [sp, #424]
  41addc:	add	x23, x23, #0x1
  41ade0:	cmp	x23, x24
  41ade4:	b.lt	41acb8 <_obstack_memory_used@@Base+0x8068>  // b.tstop
  41ade8:	mov	x4, x21
  41adec:	ldr	w24, [sp, #232]
  41adf0:	ldp	x21, x25, [sp, #208]
  41adf4:	str	wzr, [sp, #280]
  41adf8:	b	41abc8 <_obstack_memory_used@@Base+0x7f78>
  41adfc:	ldr	w0, [sp, #280]
  41ae00:	ldr	x28, [sp, #536]
  41ae04:	cbnz	w0, 41b4c4 <_obstack_memory_used@@Base+0x8874>
  41ae08:	cbz	x28, 41ae54 <_obstack_memory_used@@Base+0x8204>
  41ae0c:	ldr	w0, [sp, #200]
  41ae10:	ldr	w1, [sp, #96]
  41ae14:	eor	w0, w0, #0x1
  41ae18:	tst	w0, w1
  41ae1c:	b.ne	41ae54 <_obstack_memory_used@@Base+0x8204>  // b.any
  41ae20:	mov	w1, #0x0                   	// #0
  41ae24:	ldr	x0, [sp, #424]
  41ae28:	ldr	x2, [sp, #544]
  41ae2c:	b	41ae3c <_obstack_memory_used@@Base+0x81ec>
  41ae30:	ldr	x3, [x28, x0, lsl #3]
  41ae34:	mov	w1, #0x1                   	// #1
  41ae38:	cbnz	x3, 41b024 <_obstack_memory_used@@Base+0x83d4>
  41ae3c:	mov	x3, x0
  41ae40:	add	x0, x0, #0x1
  41ae44:	cmp	x2, x0
  41ae48:	b.ge	41ae30 <_obstack_memory_used@@Base+0x81e0>  // b.tcont
  41ae4c:	cbz	w1, 41ae54 <_obstack_memory_used@@Base+0x8204>
  41ae50:	str	x3, [sp, #424]
  41ae54:	ldr	x1, [sp, #136]
  41ae58:	cbz	x1, 41ae68 <_obstack_memory_used@@Base+0x8218>
  41ae5c:	ldr	x0, [x1]
  41ae60:	add	x27, x0, x27
  41ae64:	str	x27, [x1]
  41ae68:	cmn	x25, #0x1
  41ae6c:	b.eq	41afa4 <_obstack_memory_used@@Base+0x8354>  // b.none
  41ae70:	cmn	x25, #0x2
  41ae74:	b.eq	41b4a0 <_obstack_memory_used@@Base+0x8850>  // b.none
  41ae78:	ldr	x0, [sp, #104]
  41ae7c:	str	x25, [sp, #520]
  41ae80:	ldrb	w0, [x0, #56]
  41ae84:	tbnz	w0, #4, 41b1d4 <_obstack_memory_used@@Base+0x8584>
  41ae88:	ldr	x0, [sp, #120]
  41ae8c:	cmp	x0, #0x1
  41ae90:	b.ls	41b468 <_obstack_memory_used@@Base+0x8818>  // b.plast
  41ae94:	ldr	x19, [sp, #536]
  41ae98:	mov	x2, x25
  41ae9c:	add	x0, sp, #0x160
  41aea0:	mov	x28, x19
  41aea4:	ldr	x1, [x19, x25, lsl #3]
  41aea8:	bl	417a08 <_obstack_memory_used@@Base+0x4db8>
  41aeac:	ldr	x1, [sp, #184]
  41aeb0:	ldrb	w1, [x1, #176]
  41aeb4:	str	x0, [sp, #528]
  41aeb8:	tbnz	w1, #0, 41aecc <_obstack_memory_used@@Base+0x827c>
  41aebc:	ldr	x0, [sp, #184]
  41aec0:	ldr	x0, [x0, #152]
  41aec4:	cbz	x0, 41b474 <_obstack_memory_used@@Base+0x8824>
  41aec8:	mov	x28, x19
  41aecc:	mov	x0, #0x1ffffffffffffffe    	// #2305843009213693950
  41aed0:	cmp	x25, x0
  41aed4:	ldr	x22, [sp, #504]
  41aed8:	ldr	x20, [sp, #528]
  41aedc:	b.hi	41b4c4 <_obstack_memory_used@@Base+0x8874>  // b.pmore
  41aee0:	add	x21, x25, #0x1
  41aee4:	lsl	x19, x21, #3
  41aee8:	mov	x0, x19
  41aeec:	bl	402800 <malloc@plt>
  41aef0:	mov	x24, x0
  41aef4:	cbz	x0, 41b4c4 <_obstack_memory_used@@Base+0x8874>
  41aef8:	ldr	x0, [x22, #152]
  41aefc:	cbz	x0, 41b250 <_obstack_memory_used@@Base+0x8600>
  41af00:	mov	x0, x19
  41af04:	bl	402800 <malloc@plt>
  41af08:	mov	x27, x0
  41af0c:	mov	x23, x0
  41af10:	cbz	x0, 41b614 <_obstack_memory_used@@Base+0x89c4>
  41af14:	add	x28, sp, #0x128
  41af18:	lsl	x2, x21, #3
  41af1c:	mov	w1, #0x0                   	// #0
  41af20:	mov	x0, x27
  41af24:	bl	4028d0 <memset@plt>
  41af28:	stp	x24, x27, [sp, #296]
  41af2c:	mov	x1, x28
  41af30:	add	x0, sp, #0x160
  41af34:	stp	x20, x25, [sp, #312]
  41af38:	stp	xzr, xzr, [x28, #32]
  41af3c:	str	xzr, [x28, #48]
  41af40:	bl	41a2e0 <_obstack_memory_used@@Base+0x7690>
  41af44:	mov	w19, w0
  41af48:	ldr	x0, [sp, #344]
  41af4c:	bl	402ae0 <free@plt>
  41af50:	cbnz	w19, 41b224 <_obstack_memory_used@@Base+0x85d4>
  41af54:	ldr	x0, [x24]
  41af58:	cbnz	x0, 41b1fc <_obstack_memory_used@@Base+0x85ac>
  41af5c:	ldr	x0, [x27]
  41af60:	cbnz	x0, 41b1fc <_obstack_memory_used@@Base+0x85ac>
  41af64:	sub	x25, x25, #0x1
  41af68:	cmn	x25, #0x1
  41af6c:	b.eq	41af94 <_obstack_memory_used@@Base+0x8344>  // b.none
  41af70:	ldr	x2, [sp, #536]
  41af74:	nop
  41af78:	ldr	x1, [x2, x25, lsl #3]
  41af7c:	cbz	x1, 41af88 <_obstack_memory_used@@Base+0x8338>
  41af80:	ldrb	w0, [x1, #104]
  41af84:	tbnz	w0, #4, 41b4cc <_obstack_memory_used@@Base+0x887c>
  41af88:	sub	x25, x25, #0x1
  41af8c:	cmn	x25, #0x1
  41af90:	b.ne	41af78 <_obstack_memory_used@@Base+0x8328>  // b.any
  41af94:	mov	x0, x24
  41af98:	bl	402ae0 <free@plt>
  41af9c:	mov	x0, x27
  41afa0:	bl	402ae0 <free@plt>
  41afa4:	add	x0, sp, #0x160
  41afa8:	bl	4147c0 <_obstack_memory_used@@Base+0x1b70>
  41afac:	ldr	x20, [sp, #288]
  41afb0:	ldr	w0, [sp, #204]
  41afb4:	add	x20, x20, w0, sxtw
  41afb8:	str	x20, [sp, #288]
  41afbc:	ldr	x0, [sp, #168]
  41afc0:	cmp	x20, x0
  41afc4:	ldr	x0, [sp, #128]
  41afc8:	ccmp	x20, x0, #0x0, ge  // ge = tcont
  41afcc:	b.gt	41aa78 <_obstack_memory_used@@Base+0x7e28>
  41afd0:	ldr	w0, [sp, #164]
  41afd4:	cmp	w0, #0x7
  41afd8:	b.ne	41a944 <_obstack_memory_used@@Base+0x7cf4>  // b.any
  41afdc:	ldr	x0, [sp, #128]
  41afe0:	mov	w2, #0x0                   	// #0
  41afe4:	cmp	x0, x20
  41afe8:	mov	x0, x20
  41afec:	b.le	41aac4 <_obstack_memory_used@@Base+0x7e74>
  41aff0:	ldr	x5, [sp, #128]
  41aff4:	ldr	x4, [sp, #176]
  41aff8:	ldr	x26, [sp, #192]
  41affc:	ldr	x3, [sp, #240]
  41b000:	ldrb	w1, [x4, x0]
  41b004:	ldrb	w1, [x3, x1]
  41b008:	ldrb	w1, [x26, x1]
  41b00c:	cbnz	w1, 41b524 <_obstack_memory_used@@Base+0x88d4>
  41b010:	add	x0, x0, #0x1
  41b014:	mov	w2, #0x1                   	// #1
  41b018:	cmp	x0, x5
  41b01c:	b.ne	41b000 <_obstack_memory_used@@Base+0x83b0>  // b.any
  41b020:	b	41aa44 <_obstack_memory_used@@Base+0x7df4>
  41b024:	add	x1, sp, #0x160
  41b028:	mov	x2, #0x0                   	// #0
  41b02c:	str	x0, [sp, #424]
  41b030:	add	x0, sp, #0x118
  41b034:	bl	41a158 <_obstack_memory_used@@Base+0x7508>
  41b038:	ldr	w1, [sp, #280]
  41b03c:	cbnz	w1, 41b04c <_obstack_memory_used@@Base+0x83fc>
  41b040:	cbnz	x0, 41b534 <_obstack_memory_used@@Base+0x88e4>
  41b044:	ldr	x28, [sp, #536]
  41b048:	b	41ae20 <_obstack_memory_used@@Base+0x81d0>
  41b04c:	mov	x20, x0
  41b050:	cbnz	x0, 41ac04 <_obstack_memory_used@@Base+0x7fb4>
  41b054:	b	41ae54 <_obstack_memory_used@@Base+0x8204>
  41b058:	mov	x2, x22
  41b05c:	mov	x1, x20
  41b060:	add	x0, sp, #0x160
  41b064:	bl	417a08 <_obstack_memory_used@@Base+0x4db8>
  41b068:	cbz	x0, 41ac3c <_obstack_memory_used@@Base+0x7fec>
  41b06c:	b	41ac24 <_obstack_memory_used@@Base+0x7fd4>
  41b070:	tbz	w2, #3, 41acfc <_obstack_memory_used@@Base+0x80ac>
  41b074:	tbz	w0, #0, 41acfc <_obstack_memory_used@@Base+0x80ac>
  41b078:	b	41addc <_obstack_memory_used@@Base+0x818c>
  41b07c:	add	x0, sp, #0x200
  41b080:	ldr	w2, [sp, #512]
  41b084:	ldp	x6, x7, [x3]
  41b088:	sub	x1, x26, #0x1
  41b08c:	stp	x6, x7, [x0, #-216]
  41b090:	add	x0, sp, #0x160
  41b094:	ldr	x3, [x3, #16]
  41b098:	str	x3, [sp, #312]
  41b09c:	bl	417058 <_obstack_memory_used@@Base+0x4408>
  41b0a0:	mov	w3, w0
  41b0a4:	mov	x1, x20
  41b0a8:	add	x2, sp, #0x128
  41b0ac:	add	x0, sp, #0x11c
  41b0b0:	bl	415ae8 <_obstack_memory_used@@Base+0x2e98>
  41b0b4:	ldr	x1, [sp, #536]
  41b0b8:	str	x0, [x21, x26, lsl #3]
  41b0bc:	ldr	x0, [x1, x26, lsl #3]
  41b0c0:	cbnz	x0, 41add4 <_obstack_memory_used@@Base+0x8184>
  41b0c4:	ldr	w0, [sp, #284]
  41b0c8:	cbz	w0, 41add4 <_obstack_memory_used@@Base+0x8184>
  41b0cc:	ldr	w24, [sp, #232]
  41b0d0:	ldp	x21, x25, [sp, #208]
  41b0d4:	b	41b124 <_obstack_memory_used@@Base+0x84d4>
  41b0d8:	ldr	x22, [x19, #96]
  41b0dc:	cbz	x22, 41b134 <_obstack_memory_used@@Base+0x84e4>
  41b0e0:	ldr	w2, [sp, #512]
  41b0e4:	add	x0, sp, #0x160
  41b0e8:	ldr	x1, [sp, #424]
  41b0ec:	sub	x1, x1, #0x1
  41b0f0:	bl	417058 <_obstack_memory_used@@Base+0x4408>
  41b0f4:	and	x1, x20, #0xff
  41b0f8:	tbz	w0, #0, 41b1cc <_obstack_memory_used@@Base+0x857c>
  41b0fc:	add	x1, x1, #0x100
  41b100:	ldr	x20, [x22, x1, lsl #3]
  41b104:	b	41abe4 <_obstack_memory_used@@Base+0x7f94>
  41b108:	ldr	x1, [sp, #440]
  41b10c:	cmp	x0, x1
  41b110:	b.ge	41abbc <_obstack_memory_used@@Base+0x7f6c>  // b.tcont
  41b114:	b	41ac68 <_obstack_memory_used@@Base+0x8018>
  41b118:	ldp	x21, x25, [sp, #208]
  41b11c:	ldr	w24, [sp, #232]
  41b120:	ldr	x1, [sp, #536]
  41b124:	str	w0, [sp, #280]
  41b128:	cbz	x1, 41b158 <_obstack_memory_used@@Base+0x8508>
  41b12c:	mov	x20, #0x0                   	// #0
  41b130:	b	41abec <_obstack_memory_used@@Base+0x7f9c>
  41b134:	ldr	x0, [sp, #504]
  41b138:	mov	x1, x19
  41b13c:	bl	416648 <_obstack_memory_used@@Base+0x39f8>
  41b140:	tst	w0, #0xff
  41b144:	b.ne	41abd8 <_obstack_memory_used@@Base+0x7f88>  // b.any
  41b148:	ldr	x0, [sp, #536]
  41b14c:	mov	w1, #0xc                   	// #12
  41b150:	str	w1, [sp, #280]
  41b154:	cbnz	x0, 41b12c <_obstack_memory_used@@Base+0x84dc>
  41b158:	ldr	x27, [sp, #184]
  41b15c:	mov	x28, #0x0                   	// #0
  41b160:	ldp	x23, x24, [sp, #48]
  41b164:	mov	w0, #0xc                   	// #12
  41b168:	str	w0, [sp, #116]
  41b16c:	mov	x0, x28
  41b170:	bl	402ae0 <free@plt>
  41b174:	ldr	x0, [x27, #152]
  41b178:	cbnz	x0, 41aa9c <_obstack_memory_used@@Base+0x7e4c>
  41b17c:	add	x0, sp, #0x160
  41b180:	bl	4145f8 <_obstack_memory_used@@Base+0x19a8>
  41b184:	ldr	w0, [sp, #116]
  41b188:	ldp	x29, x30, [sp]
  41b18c:	ldp	x19, x20, [sp, #16]
  41b190:	ldp	x21, x22, [sp, #32]
  41b194:	ldp	x25, x26, [sp, #64]
  41b198:	ldp	x27, x28, [sp, #80]
  41b19c:	add	sp, sp, #0x260
  41b1a0:	ret
  41b1a4:	mov	w0, #0x1                   	// #1
  41b1a8:	str	w0, [sp, #116]
  41b1ac:	ldp	x29, x30, [sp]
  41b1b0:	ldr	w0, [sp, #116]
  41b1b4:	ldp	x19, x20, [sp, #16]
  41b1b8:	ldp	x21, x22, [sp, #32]
  41b1bc:	ldp	x25, x26, [sp, #64]
  41b1c0:	ldp	x27, x28, [sp, #80]
  41b1c4:	add	sp, sp, #0x260
  41b1c8:	ret
  41b1cc:	ldr	x20, [x22, x20, lsl #3]
  41b1d0:	b	41abe4 <_obstack_memory_used@@Base+0x7f94>
  41b1d4:	ldr	x27, [sp, #184]
  41b1d8:	ldr	x0, [x27, #152]
  41b1dc:	cbz	x0, 41b2a4 <_obstack_memory_used@@Base+0x8654>
  41b1e0:	ldr	x19, [sp, #536]
  41b1e4:	mov	x2, x25
  41b1e8:	add	x0, sp, #0x160
  41b1ec:	ldr	x1, [x19, x25, lsl #3]
  41b1f0:	bl	417a08 <_obstack_memory_used@@Base+0x4db8>
  41b1f4:	str	x0, [sp, #528]
  41b1f8:	b	41aec8 <_obstack_memory_used@@Base+0x8278>
  41b1fc:	mov	x3, x21
  41b200:	mov	x2, x27
  41b204:	mov	x1, x24
  41b208:	mov	x0, x22
  41b20c:	bl	415ff8 <_obstack_memory_used@@Base+0x33a8>
  41b210:	mov	w19, w0
  41b214:	mov	x0, x27
  41b218:	bl	402ae0 <free@plt>
  41b21c:	cbz	w19, 41b28c <_obstack_memory_used@@Base+0x863c>
  41b220:	mov	x23, #0x0                   	// #0
  41b224:	mov	x0, x24
  41b228:	bl	402ae0 <free@plt>
  41b22c:	mov	x0, x23
  41b230:	bl	402ae0 <free@plt>
  41b234:	cmp	w19, #0x1
  41b238:	b.eq	41afa4 <_obstack_memory_used@@Base+0x8354>  // b.none
  41b23c:	ldr	x27, [sp, #184]
  41b240:	str	w19, [sp, #116]
  41b244:	ldp	x23, x24, [sp, #48]
  41b248:	ldr	x28, [sp, #536]
  41b24c:	b	41b16c <_obstack_memory_used@@Base+0x851c>
  41b250:	add	x2, sp, #0x200
  41b254:	stp	x24, xzr, [sp, #296]
  41b258:	add	x28, sp, #0x128
  41b25c:	stp	x20, x25, [sp, #312]
  41b260:	mov	x1, x28
  41b264:	add	x0, sp, #0x160
  41b268:	stp	xzr, xzr, [x2, #-184]
  41b26c:	str	xzr, [sp, #344]
  41b270:	bl	41a2e0 <_obstack_memory_used@@Base+0x7690>
  41b274:	mov	w19, w0
  41b278:	ldr	x0, [sp, #344]
  41b27c:	bl	402ae0 <free@plt>
  41b280:	cbnz	w19, 41b220 <_obstack_memory_used@@Base+0x85d0>
  41b284:	ldr	x0, [x24]
  41b288:	cbz	x0, 41b548 <_obstack_memory_used@@Base+0x88f8>
  41b28c:	ldr	x0, [sp, #536]
  41b290:	ldr	x27, [sp, #184]
  41b294:	bl	402ae0 <free@plt>
  41b298:	str	x25, [sp, #520]
  41b29c:	str	x20, [sp, #528]
  41b2a0:	str	x24, [sp, #536]
  41b2a4:	ldr	x0, [sp, #120]
  41b2a8:	cbz	x0, 41b244 <_obstack_memory_used@@Base+0x85f4>
  41b2ac:	ldr	x1, [sp, #120]
  41b2b0:	ldr	x2, [sp, #256]
  41b2b4:	cmp	x1, #0x1
  41b2b8:	add	x0, x2, #0x10
  41b2bc:	add	x2, x2, x1, lsl #4
  41b2c0:	mov	x1, #0xffffffffffffffff    	// #-1
  41b2c4:	b.ls	41b6b8 <_obstack_memory_used@@Base+0x8a68>  // b.plast
  41b2c8:	str	x1, [x0, #8]
  41b2cc:	str	x1, [x0], #16
  41b2d0:	cmp	x2, x0
  41b2d4:	b.ne	41b2c8 <_obstack_memory_used@@Base+0x8678>  // b.any
  41b2d8:	ldr	x0, [sp, #104]
  41b2dc:	mov	x1, #0x0                   	// #0
  41b2e0:	ldr	x3, [sp, #256]
  41b2e4:	ldrb	w0, [x0, #56]
  41b2e8:	ldr	x2, [sp, #520]
  41b2ec:	stp	xzr, x2, [x3]
  41b2f0:	tst	x0, #0x10
  41b2f4:	ldr	x0, [sp, #120]
  41b2f8:	ccmp	x0, #0x1, #0x4, eq  // eq = none
  41b2fc:	b.ne	41b668 <_obstack_memory_used@@Base+0x8a18>  // b.any
  41b300:	ldrb	w5, [sp, #492]
  41b304:	mov	x2, #0x0                   	// #0
  41b308:	ldr	x9, [sp, #120]
  41b30c:	ldr	x0, [sp, #256]
  41b310:	ldr	x4, [sp, #288]
  41b314:	ldr	x8, [sp, #376]
  41b318:	ldp	x6, x7, [sp, #400]
  41b31c:	b	41b324 <_obstack_memory_used@@Base+0x86d4>
  41b320:	ldr	x1, [x0]
  41b324:	cmn	x1, #0x1
  41b328:	b.eq	41b340 <_obstack_memory_used@@Base+0x86f0>  // b.none
  41b32c:	ldr	x3, [x0, #8]
  41b330:	cbnz	w5, 41b648 <_obstack_memory_used@@Base+0x89f8>
  41b334:	add	x1, x4, x1
  41b338:	add	x3, x4, x3
  41b33c:	stp	x1, x3, [x0]
  41b340:	add	x2, x2, #0x1
  41b344:	add	x0, x0, #0x10
  41b348:	cmp	x2, x9
  41b34c:	b.ne	41b320 <_obstack_memory_used@@Base+0x86d0>  // b.any
  41b350:	ldr	x0, [sp, #224]
  41b354:	cmp	x0, #0x0
  41b358:	b.le	41b388 <_obstack_memory_used@@Base+0x8738>
  41b35c:	ldr	x0, [sp, #120]
  41b360:	ldr	x1, [sp, #224]
  41b364:	ldr	x3, [sp, #256]
  41b368:	add	x2, x1, x0
  41b36c:	mov	x1, #0xffffffffffffffff    	// #-1
  41b370:	add	x0, x3, x0, lsl #4
  41b374:	add	x2, x3, x2, lsl #4
  41b378:	stp	x1, x1, [x0]
  41b37c:	add	x0, x0, #0x10
  41b380:	cmp	x2, x0
  41b384:	b.ne	41b378 <_obstack_memory_used@@Base+0x8728>  // b.any
  41b388:	ldr	x3, [x27, #224]
  41b38c:	ldr	x28, [sp, #536]
  41b390:	cbz	x3, 41b3e8 <_obstack_memory_used@@Base+0x8798>
  41b394:	ldr	x0, [sp, #120]
  41b398:	cmp	x0, #0x1
  41b39c:	b.ls	41b3e8 <_obstack_memory_used@@Base+0x8798>  // b.plast
  41b3a0:	ldr	x5, [sp, #256]
  41b3a4:	sub	x4, x0, #0x1
  41b3a8:	mov	x0, #0x0                   	// #0
  41b3ac:	add	x2, x5, #0x10
  41b3b0:	ldr	x1, [x3, x0, lsl #3]
  41b3b4:	cmp	x1, x0
  41b3b8:	b.eq	41b3d8 <_obstack_memory_used@@Base+0x8788>  // b.none
  41b3bc:	add	x1, x5, x1, lsl #4
  41b3c0:	ldr	x1, [x1, #16]
  41b3c4:	str	x1, [x2]
  41b3c8:	ldr	x1, [x3, x0, lsl #3]
  41b3cc:	add	x1, x5, x1, lsl #4
  41b3d0:	ldr	x1, [x1, #24]
  41b3d4:	str	x1, [x2, #8]
  41b3d8:	add	x0, x0, #0x1
  41b3dc:	add	x2, x2, #0x10
  41b3e0:	cmp	x4, x0
  41b3e4:	b.ne	41b3b0 <_obstack_memory_used@@Base+0x8760>  // b.any
  41b3e8:	ldp	x23, x24, [sp, #48]
  41b3ec:	b	41b16c <_obstack_memory_used@@Base+0x851c>
  41b3f0:	ldrb	w0, [x19, #104]
  41b3f4:	ldr	w24, [sp, #264]
  41b3f8:	b	41ab7c <_obstack_memory_used@@Base+0x7f2c>
  41b3fc:	ldr	x0, [sp, #168]
  41b400:	cmp	x0, x20
  41b404:	b.gt	41aa78 <_obstack_memory_used@@Base+0x7e28>
  41b408:	ldp	x5, x6, [sp, #168]
  41b40c:	mov	x1, x20
  41b410:	ldr	x4, [sp, #152]
  41b414:	mov	w0, #0x0                   	// #0
  41b418:	ldr	x26, [sp, #192]
  41b41c:	ldr	x3, [sp, #240]
  41b420:	cmp	x1, x4
  41b424:	mov	x2, #0x0                   	// #0
  41b428:	b.ge	41b430 <_obstack_memory_used@@Base+0x87e0>  // b.tcont
  41b42c:	ldrb	w2, [x6, x1]
  41b430:	cbz	x3, 41b438 <_obstack_memory_used@@Base+0x87e8>
  41b434:	ldrb	w2, [x3, x2]
  41b438:	ldrb	w2, [x26, x2]
  41b43c:	cbnz	w2, 41b4e4 <_obstack_memory_used@@Base+0x8894>
  41b440:	sub	x1, x1, #0x1
  41b444:	mov	w0, #0x1                   	// #1
  41b448:	cmp	x1, x5
  41b44c:	b.ge	41b420 <_obstack_memory_used@@Base+0x87d0>  // b.tcont
  41b450:	str	w0, [sp, #116]
  41b454:	str	x1, [sp, #288]
  41b458:	ldp	x23, x24, [sp, #48]
  41b45c:	ldr	x27, [sp, #184]
  41b460:	ldr	x28, [sp, #536]
  41b464:	b	41b16c <_obstack_memory_used@@Base+0x851c>
  41b468:	ldr	x0, [sp, #184]
  41b46c:	ldr	x0, [x0, #152]
  41b470:	cbnz	x0, 41b1e0 <_obstack_memory_used@@Base+0x8590>
  41b474:	ldr	x27, [sp, #184]
  41b478:	b	41b2a4 <_obstack_memory_used@@Base+0x8654>
  41b47c:	ldrb	w0, [x27, #176]
  41b480:	tbnz	w0, #1, 41a828 <_obstack_memory_used@@Base+0x7bd8>
  41b484:	b	41a850 <_obstack_memory_used@@Base+0x7c00>
  41b488:	mov	w0, #0xc                   	// #12
  41b48c:	str	w0, [sp, #116]
  41b490:	ldr	x28, [sp, #536]
  41b494:	b	41b16c <_obstack_memory_used@@Base+0x851c>
  41b498:	ldr	x19, [x20, #96]
  41b49c:	cbnz	x19, 41ab60 <_obstack_memory_used@@Base+0x7f10>
  41b4a0:	mov	w0, #0xc                   	// #12
  41b4a4:	str	w0, [sp, #116]
  41b4a8:	ldp	x23, x24, [sp, #48]
  41b4ac:	ldr	x27, [sp, #184]
  41b4b0:	ldr	x28, [sp, #536]
  41b4b4:	b	41b16c <_obstack_memory_used@@Base+0x851c>
  41b4b8:	ldr	x19, [x20, #80]
  41b4bc:	cbnz	x19, 41ab60 <_obstack_memory_used@@Base+0x7f10>
  41b4c0:	b	41b4a0 <_obstack_memory_used@@Base+0x8850>
  41b4c4:	ldr	x27, [sp, #184]
  41b4c8:	b	41b160 <_obstack_memory_used@@Base+0x8510>
  41b4cc:	mov	x2, x25
  41b4d0:	add	x0, sp, #0x160
  41b4d4:	add	x21, x25, #0x1
  41b4d8:	bl	417a08 <_obstack_memory_used@@Base+0x4db8>
  41b4dc:	mov	x20, x0
  41b4e0:	b	41af18 <_obstack_memory_used@@Base+0x82c8>
  41b4e4:	cbz	w0, 41aad0 <_obstack_memory_used@@Base+0x7e80>
  41b4e8:	mov	x20, x1
  41b4ec:	str	x1, [sp, #288]
  41b4f0:	b	41aad0 <_obstack_memory_used@@Base+0x7e80>
  41b4f4:	ldp	x23, x24, [sp, #48]
  41b4f8:	ldr	x27, [sp, #184]
  41b4fc:	ldr	x28, [sp, #536]
  41b500:	b	41b16c <_obstack_memory_used@@Base+0x851c>
  41b504:	ldrsb	w0, [x19, #104]
  41b508:	tbnz	w0, #31, 41b574 <_obstack_memory_used@@Base+0x8924>
  41b50c:	mov	x0, #0x1                   	// #1
  41b510:	str	x0, [sp, #96]
  41b514:	ldr	w0, [sp, #160]
  41b518:	mov	x25, x27
  41b51c:	cbnz	w0, 41ab88 <_obstack_memory_used@@Base+0x7f38>
  41b520:	b	41ae68 <_obstack_memory_used@@Base+0x8218>
  41b524:	cbz	w2, 41aad0 <_obstack_memory_used@@Base+0x7e80>
  41b528:	mov	x20, x0
  41b52c:	str	x0, [sp, #288]
  41b530:	b	41aac4 <_obstack_memory_used@@Base+0x7e74>
  41b534:	mov	x20, x0
  41b538:	b	41ac04 <_obstack_memory_used@@Base+0x7fb4>
  41b53c:	ldr	x19, [x20, #88]
  41b540:	cbnz	x19, 41ab60 <_obstack_memory_used@@Base+0x7f10>
  41b544:	b	41b4a0 <_obstack_memory_used@@Base+0x8850>
  41b548:	mov	x0, x24
  41b54c:	bl	402ae0 <free@plt>
  41b550:	b	41afa4 <_obstack_memory_used@@Base+0x8354>
  41b554:	ldr	x2, [x19, #80]
  41b558:	mov	w3, w0
  41b55c:	mov	x1, x20
  41b560:	add	x0, sp, #0x118
  41b564:	bl	415ae8 <_obstack_memory_used@@Base+0x2e98>
  41b568:	mov	x19, x0
  41b56c:	cbnz	x19, 41ab60 <_obstack_memory_used@@Base+0x7f10>
  41b570:	b	41b4a0 <_obstack_memory_used@@Base+0x8850>
  41b574:	mov	x2, x27
  41b578:	mov	x1, x19
  41b57c:	add	x0, sp, #0x160
  41b580:	bl	417a08 <_obstack_memory_used@@Base+0x4db8>
  41b584:	str	x0, [sp, #96]
  41b588:	cbz	x0, 41ab88 <_obstack_memory_used@@Base+0x7f38>
  41b58c:	b	41b50c <_obstack_memory_used@@Base+0x88bc>
  41b590:	ldr	x0, [sp, #176]
  41b594:	ldrb	w0, [x0, x20]
  41b598:	b	41aa60 <_obstack_memory_used@@Base+0x7e10>
  41b59c:	add	x20, x19, #0x10
  41b5a0:	add	x21, x19, #0x18
  41b5a4:	mov	x1, x20
  41b5a8:	mov	x2, x21
  41b5ac:	add	x0, sp, #0x160
  41b5b0:	mov	x3, #0x0                   	// #0
  41b5b4:	bl	417ac0 <_obstack_memory_used@@Base+0x4e70>
  41b5b8:	str	w0, [sp, #280]
  41b5bc:	cbnz	w0, 41b640 <_obstack_memory_used@@Base+0x89f0>
  41b5c0:	ldrb	w0, [x19, #104]
  41b5c4:	tbnz	w0, #6, 41b5d0 <_obstack_memory_used@@Base+0x8980>
  41b5c8:	mov	w24, #0x0                   	// #0
  41b5cc:	b	41ab7c <_obstack_memory_used@@Base+0x7f2c>
  41b5d0:	mov	x2, x21
  41b5d4:	mov	x1, x20
  41b5d8:	add	x0, sp, #0x160
  41b5dc:	bl	419a68 <_obstack_memory_used@@Base+0x6e18>
  41b5e0:	str	w0, [sp, #280]
  41b5e4:	cbnz	w0, 41b640 <_obstack_memory_used@@Base+0x89f0>
  41b5e8:	ldrb	w0, [x19, #104]
  41b5ec:	mov	w24, #0x0                   	// #0
  41b5f0:	b	41ab7c <_obstack_memory_used@@Base+0x7f2c>
  41b5f4:	mov	w0, #0xc                   	// #12
  41b5f8:	str	w0, [sp, #116]
  41b5fc:	b	41b16c <_obstack_memory_used@@Base+0x851c>
  41b600:	str	w0, [sp, #116]
  41b604:	ldp	x23, x24, [sp, #48]
  41b608:	ldr	x27, [sp, #184]
  41b60c:	ldr	x28, [sp, #536]
  41b610:	b	41b16c <_obstack_memory_used@@Base+0x851c>
  41b614:	mov	w1, #0xc                   	// #12
  41b618:	mov	x0, x24
  41b61c:	str	w1, [sp, #116]
  41b620:	ldr	x27, [sp, #184]
  41b624:	bl	402ae0 <free@plt>
  41b628:	ldp	x23, x24, [sp, #48]
  41b62c:	b	41b16c <_obstack_memory_used@@Base+0x851c>
  41b630:	mov	w0, #0x1                   	// #1
  41b634:	str	w0, [sp, #116]
  41b638:	ldr	x28, [sp, #536]
  41b63c:	b	41b16c <_obstack_memory_used@@Base+0x851c>
  41b640:	sxtw	x25, w0
  41b644:	b	41ae68 <_obstack_memory_used@@Base+0x8218>
  41b648:	cmp	x6, x1
  41b64c:	b.eq	41b6b0 <_obstack_memory_used@@Base+0x8a60>  // b.none
  41b650:	ldr	x1, [x8, x1, lsl #3]
  41b654:	str	x1, [x0]
  41b658:	cmp	x6, x3
  41b65c:	b.eq	41b6a8 <_obstack_memory_used@@Base+0x8a58>  // b.none
  41b660:	ldr	x3, [x8, x3, lsl #3]
  41b664:	b	41b334 <_obstack_memory_used@@Base+0x86e4>
  41b668:	ldrb	w0, [x27, #176]
  41b66c:	tbz	w0, #0, 41b680 <_obstack_memory_used@@Base+0x8a30>
  41b670:	ldr	x0, [x27, #152]
  41b674:	cmp	x0, #0x0
  41b678:	cset	w0, gt
  41b67c:	str	w0, [sp, #268]
  41b680:	ldrb	w4, [sp, #268]
  41b684:	add	x1, sp, #0x160
  41b688:	ldr	x0, [sp, #104]
  41b68c:	ldr	x2, [sp, #120]
  41b690:	ldr	x19, [sp, #256]
  41b694:	mov	x3, x19
  41b698:	bl	4192a0 <_obstack_memory_used@@Base+0x6650>
  41b69c:	cbnz	w0, 41b6cc <_obstack_memory_used@@Base+0x8a7c>
  41b6a0:	ldr	x1, [x19]
  41b6a4:	b	41b300 <_obstack_memory_used@@Base+0x86b0>
  41b6a8:	mov	x3, x7
  41b6ac:	b	41b334 <_obstack_memory_used@@Base+0x86e4>
  41b6b0:	mov	x1, x7
  41b6b4:	b	41b654 <_obstack_memory_used@@Base+0x8a04>
  41b6b8:	ldr	x2, [sp, #256]
  41b6bc:	mov	x1, #0x0                   	// #0
  41b6c0:	ldr	x0, [sp, #520]
  41b6c4:	stp	xzr, x0, [x2]
  41b6c8:	b	41b300 <_obstack_memory_used@@Base+0x86b0>
  41b6cc:	str	w0, [sp, #116]
  41b6d0:	ldp	x23, x24, [sp, #48]
  41b6d4:	ldr	x28, [sp, #536]
  41b6d8:	b	41b16c <_obstack_memory_used@@Base+0x851c>
  41b6dc:	nop
  41b6e0:	stp	x29, x30, [sp, #-224]!
  41b6e4:	mov	x29, sp
  41b6e8:	stp	x19, x20, [sp, #16]
  41b6ec:	mov	x20, x0
  41b6f0:	mov	x19, x2
  41b6f4:	ldr	x0, [x0, #184]
  41b6f8:	stp	x21, x22, [sp, #32]
  41b6fc:	lsl	x2, x2, #3
  41b700:	stp	x23, x24, [sp, #48]
  41b704:	mov	x21, x3
  41b708:	ldr	x22, [x0, x19, lsl #3]
  41b70c:	stp	x27, x28, [sp, #80]
  41b710:	mov	x27, x1
  41b714:	str	x2, [sp, #96]
  41b718:	add	x1, x0, x2
  41b71c:	str	wzr, [sp, #164]
  41b720:	ldr	x0, [x3, #8]
  41b724:	ldr	x23, [x20, #152]
  41b728:	cbz	x22, 41bae8 <_obstack_memory_used@@Base+0x8e98>
  41b72c:	cbnz	x0, 41b764 <_obstack_memory_used@@Base+0x8b14>
  41b730:	ldr	x0, [x27]
  41b734:	mov	w2, #0x0                   	// #0
  41b738:	str	xzr, [x0, x19, lsl #3]
  41b73c:	ldr	x0, [x1]
  41b740:	ldrb	w0, [x0, #104]
  41b744:	tbnz	w0, #6, 41b884 <_obstack_memory_used@@Base+0x8c34>
  41b748:	mov	w0, w2
  41b74c:	ldp	x19, x20, [sp, #16]
  41b750:	ldp	x21, x22, [sp, #32]
  41b754:	ldp	x23, x24, [sp, #48]
  41b758:	ldp	x27, x28, [sp, #80]
  41b75c:	ldp	x29, x30, [sp], #224
  41b760:	ret
  41b764:	mov	x2, x3
  41b768:	mov	x1, x23
  41b76c:	add	x0, sp, #0xa8
  41b770:	str	wzr, [sp, #168]
  41b774:	bl	415dd8 <_obstack_memory_used@@Base+0x3188>
  41b778:	ldr	w2, [sp, #168]
  41b77c:	cbnz	w2, 41b748 <_obstack_memory_used@@Base+0x8af8>
  41b780:	stp	x25, x26, [sp, #64]
  41b784:	mov	x26, x0
  41b788:	ldr	x24, [x26, #56]!
  41b78c:	cbnz	x24, 41b818 <_obstack_memory_used@@Base+0x8bc8>
  41b790:	ldr	x1, [x21, #8]
  41b794:	str	x1, [x0, #56]
  41b798:	str	xzr, [x26, #8]
  41b79c:	lsl	x0, x1, #3
  41b7a0:	bl	402800 <malloc@plt>
  41b7a4:	str	x0, [x26, #16]
  41b7a8:	cbz	x0, 41b7f4 <_obstack_memory_used@@Base+0x8ba4>
  41b7ac:	ldr	x0, [x21, #8]
  41b7b0:	str	wzr, [sp, #168]
  41b7b4:	cmp	x0, #0x0
  41b7b8:	b.gt	41b7cc <_obstack_memory_used@@Base+0x8b7c>
  41b7bc:	b	41b818 <_obstack_memory_used@@Base+0x8bc8>
  41b7c0:	ldr	x0, [x21, #8]
  41b7c4:	cmp	x24, x0
  41b7c8:	b.ge	41b818 <_obstack_memory_used@@Base+0x8bc8>  // b.tcont
  41b7cc:	ldr	x2, [x21, #16]
  41b7d0:	mov	x0, x26
  41b7d4:	ldr	x1, [x23, #56]
  41b7d8:	ldr	x3, [x2, x24, lsl #3]
  41b7dc:	add	x24, x24, #0x1
  41b7e0:	add	x3, x3, x3, lsl #1
  41b7e4:	add	x1, x1, x3, lsl #3
  41b7e8:	bl	414d40 <_obstack_memory_used@@Base+0x20f0>
  41b7ec:	str	w0, [sp, #168]
  41b7f0:	cbz	w0, 41b7c0 <_obstack_memory_used@@Base+0x8b70>
  41b7f4:	mov	w2, #0xc                   	// #12
  41b7f8:	mov	w0, w2
  41b7fc:	ldp	x19, x20, [sp, #16]
  41b800:	ldp	x21, x22, [sp, #32]
  41b804:	ldp	x23, x24, [sp, #48]
  41b808:	ldp	x25, x26, [sp, #64]
  41b80c:	ldp	x27, x28, [sp, #80]
  41b810:	ldp	x29, x30, [sp], #224
  41b814:	ret
  41b818:	add	x25, x22, #0x8
  41b81c:	mov	x2, x26
  41b820:	mov	x1, x25
  41b824:	mov	x0, x21
  41b828:	bl	4152c0 <_obstack_memory_used@@Base+0x2670>
  41b82c:	str	w0, [sp, #164]
  41b830:	mov	w2, w0
  41b834:	cbnz	w0, 41bbd0 <_obstack_memory_used@@Base+0x8f80>
  41b838:	ldr	x0, [x27, #40]
  41b83c:	cmp	x0, #0x0
  41b840:	cbnz	x0, 41bbf0 <_obstack_memory_used@@Base+0x8fa0>
  41b844:	ldr	x24, [x27]
  41b848:	mov	x2, x21
  41b84c:	mov	x1, x23
  41b850:	add	x0, sp, #0xa4
  41b854:	bl	415dd8 <_obstack_memory_used@@Base+0x3188>
  41b858:	ldr	w2, [sp, #164]
  41b85c:	str	x0, [x24, x19, lsl #3]
  41b860:	cbnz	w2, 41bbd0 <_obstack_memory_used@@Base+0x8f80>
  41b864:	ldr	x0, [sp, #96]
  41b868:	mov	w2, #0x0                   	// #0
  41b86c:	ldr	x1, [x20, #184]
  41b870:	ldp	x25, x26, [sp, #64]
  41b874:	add	x1, x1, x0
  41b878:	ldr	x0, [x1]
  41b87c:	ldrb	w0, [x0, #104]
  41b880:	tbz	w0, #6, 41b748 <_obstack_memory_used@@Base+0x8af8>
  41b884:	ldr	x4, [x20, #200]
  41b888:	stp	x25, x26, [sp, #64]
  41b88c:	mov	x26, #0x0                   	// #0
  41b890:	mov	x2, x4
  41b894:	b	41b8b8 <_obstack_memory_used@@Base+0x8c68>
  41b898:	asr	x0, x0, #1
  41b89c:	ldr	x3, [x20, #216]
  41b8a0:	add	x1, x0, x0, lsl #2
  41b8a4:	add	x1, x3, x1, lsl #3
  41b8a8:	ldr	x1, [x1, #8]
  41b8ac:	cmp	x19, x1
  41b8b0:	b.gt	41bb5c <_obstack_memory_used@@Base+0x8f0c>
  41b8b4:	mov	x2, x0
  41b8b8:	add	x0, x2, x26
  41b8bc:	cmp	x2, x26
  41b8c0:	b.gt	41b898 <_obstack_memory_used@@Base+0x8c48>
  41b8c4:	cmp	x4, x26
  41b8c8:	b.le	41bb50 <_obstack_memory_used@@Base+0x8f00>
  41b8cc:	add	x1, x26, x26, lsl #2
  41b8d0:	ldr	x0, [x20, #216]
  41b8d4:	lsl	x1, x1, #3
  41b8d8:	str	x1, [sp, #136]
  41b8dc:	add	x0, x0, x1
  41b8e0:	ldr	x0, [x0, #8]
  41b8e4:	cmp	x19, x0
  41b8e8:	b.ne	41bb50 <_obstack_memory_used@@Base+0x8f00>  // b.any
  41b8ec:	ldr	x0, [x22, #16]
  41b8f0:	str	xzr, [sp, #168]
  41b8f4:	add	x22, x22, #0x8
  41b8f8:	cmp	x0, #0x0
  41b8fc:	ldr	x25, [x20, #152]
  41b900:	b.le	41bb50 <_obstack_memory_used@@Base+0x8f00>
  41b904:	add	x0, x27, #0x30
  41b908:	mov	x24, #0x0                   	// #0
  41b90c:	str	x0, [sp, #128]
  41b910:	add	x0, sp, #0xc8
  41b914:	str	x0, [sp, #152]
  41b918:	b	41b934 <_obstack_memory_used@@Base+0x8ce4>
  41b91c:	cmp	w0, #0x4
  41b920:	b.eq	41b968 <_obstack_memory_used@@Base+0x8d18>  // b.none
  41b924:	ldr	x0, [x22, #8]
  41b928:	add	x24, x24, #0x1
  41b92c:	cmp	x24, x0
  41b930:	b.ge	41bb48 <_obstack_memory_used@@Base+0x8ef8>  // b.tcont
  41b934:	ldr	x1, [x22, #16]
  41b938:	ldr	x0, [x25]
  41b93c:	ldr	x21, [x1, x24, lsl #3]
  41b940:	ldr	x1, [x27, #16]
  41b944:	add	x0, x0, x21, lsl #4
  41b948:	cmp	x21, x1
  41b94c:	ldrb	w0, [x0, #8]
  41b950:	b.ne	41b91c <_obstack_memory_used@@Base+0x8ccc>  // b.any
  41b954:	ldr	x1, [x27, #24]
  41b958:	cmp	x19, x1
  41b95c:	b.eq	41b924 <_obstack_memory_used@@Base+0x8cd4>  // b.none
  41b960:	cmp	w0, #0x4
  41b964:	b.ne	41b924 <_obstack_memory_used@@Base+0x8cd4>  // b.any
  41b968:	add	x0, x21, x21, lsl #1
  41b96c:	lsl	x1, x21, #3
  41b970:	ldr	x8, [x20, #216]
  41b974:	lsl	x0, x0, #3
  41b978:	stp	x1, x0, [sp, #104]
  41b97c:	add	x0, x27, #0x28
  41b980:	mov	x23, x26
  41b984:	ldr	x1, [sp, #136]
  41b988:	str	x0, [sp, #120]
  41b98c:	add	x0, x27, #0x20
  41b990:	str	x0, [sp, #144]
  41b994:	add	x28, x8, x1
  41b998:	b	41bab4 <_obstack_memory_used@@Base+0x8e64>
  41b99c:	ldr	x0, [x25, #24]
  41b9a0:	ldr	x1, [sp, #104]
  41b9a4:	ldr	x2, [x0, x1]
  41b9a8:	ldr	x0, [x27, #24]
  41b9ac:	cmp	x6, x0
  41b9b0:	b.gt	41baa0 <_obstack_memory_used@@Base+0x8e50>
  41b9b4:	ldr	x0, [x27]
  41b9b8:	ldr	x1, [x0, x6, lsl #3]
  41b9bc:	cbz	x1, 41baa0 <_obstack_memory_used@@Base+0x8e50>
  41b9c0:	ldr	x0, [x1, #16]
  41b9c4:	add	x1, x1, #0x18
  41b9c8:	bl	4148c8 <_obstack_memory_used@@Base+0x1c78>
  41b9cc:	cbz	x0, 41baa0 <_obstack_memory_used@@Base+0x8e50>
  41b9d0:	mov	x5, x2
  41b9d4:	mov	x4, x19
  41b9d8:	ldp	x1, x2, [sp, #120]
  41b9dc:	mov	x3, x21
  41b9e0:	mov	x0, x20
  41b9e4:	bl	414b90 <_obstack_memory_used@@Base+0x1f40>
  41b9e8:	tst	w0, #0xff
  41b9ec:	b.ne	41baa0 <_obstack_memory_used@@Base+0x8e50>  // b.any
  41b9f0:	ldr	x0, [sp, #168]
  41b9f4:	cbz	x0, 41bb64 <_obstack_memory_used@@Base+0x8f14>
  41b9f8:	mov	x1, x23
  41b9fc:	add	x0, sp, #0xc8
  41ba00:	stp	x21, x19, [sp, #184]
  41ba04:	bl	413350 <_obstack_memory_used@@Base+0x700>
  41ba08:	tst	w0, #0xff
  41ba0c:	b.eq	41bddc <_obstack_memory_used@@Base+0x918c>  // b.none
  41ba10:	ldr	x3, [sp, #96]
  41ba14:	add	x1, sp, #0xa8
  41ba18:	ldr	x2, [sp, #168]
  41ba1c:	mov	x0, x20
  41ba20:	ldr	x28, [x2, x3]
  41ba24:	bl	41a2e0 <_obstack_memory_used@@Base+0x7690>
  41ba28:	mov	w2, w0
  41ba2c:	cbnz	w0, 41bb98 <_obstack_memory_used@@Base+0x8f48>
  41ba30:	ldr	x1, [x27, #8]
  41ba34:	ldr	x2, [sp, #168]
  41ba38:	cbz	x1, 41ba54 <_obstack_memory_used@@Base+0x8e04>
  41ba3c:	add	x3, x19, #0x1
  41ba40:	mov	x0, x25
  41ba44:	bl	415ff8 <_obstack_memory_used@@Base+0x33a8>
  41ba48:	mov	w2, w0
  41ba4c:	cbnz	w0, 41bb98 <_obstack_memory_used@@Base+0x8f48>
  41ba50:	ldr	x2, [sp, #168]
  41ba54:	add	x8, sp, #0xd8
  41ba58:	ldr	x0, [sp, #96]
  41ba5c:	mov	x1, x8
  41ba60:	ldr	x6, [sp, #208]
  41ba64:	str	x28, [x2, x0]
  41ba68:	mov	x2, x23
  41ba6c:	mov	x0, x6
  41ba70:	bl	4148c8 <_obstack_memory_used@@Base+0x1c78>
  41ba74:	subs	x2, x0, #0x1
  41ba78:	ccmp	x6, x2, #0x4, pl  // pl = nfrst
  41ba7c:	b.le	41ba94 <_obstack_memory_used@@Base+0x8e44>
  41ba80:	sub	x6, x6, #0x1
  41ba84:	mov	x1, x8
  41ba88:	add	x0, sp, #0xd0
  41ba8c:	str	x6, [sp, #208]
  41ba90:	bl	414a48 <_obstack_memory_used@@Base+0x1df8>
  41ba94:	ldr	x0, [x20, #216]
  41ba98:	add	x8, x23, x23, lsl #2
  41ba9c:	add	x28, x0, x8, lsl #3
  41baa0:	ldrb	w0, [x28, #32]
  41baa4:	add	x23, x23, #0x1
  41baa8:	add	x8, x28, #0x28
  41baac:	cbz	w0, 41b924 <_obstack_memory_used@@Base+0x8cd4>
  41bab0:	mov	x28, x8
  41bab4:	ldr	x0, [x28]
  41bab8:	cmp	x21, x0
  41babc:	b.ne	41baa0 <_obstack_memory_used@@Base+0x8e50>  // b.any
  41bac0:	ldp	x1, x0, [x28, #16]
  41bac4:	sub	x0, x0, x1
  41bac8:	add	x6, x19, x0
  41bacc:	cbnz	x0, 41b99c <_obstack_memory_used@@Base+0x8d4c>
  41bad0:	ldr	x0, [x25, #40]
  41bad4:	ldr	x1, [sp, #112]
  41bad8:	add	x0, x0, x1
  41badc:	ldr	x0, [x0, #16]
  41bae0:	ldr	x2, [x0]
  41bae4:	b	41b9a8 <_obstack_memory_used@@Base+0x8d58>
  41bae8:	ldr	x20, [x27]
  41baec:	cbnz	x0, 41bb14 <_obstack_memory_used@@Base+0x8ec4>
  41baf0:	str	xzr, [x20, x19, lsl #3]
  41baf4:	mov	w2, #0x0                   	// #0
  41baf8:	mov	w0, w2
  41bafc:	ldp	x19, x20, [sp, #16]
  41bb00:	ldp	x21, x22, [sp, #32]
  41bb04:	ldp	x23, x24, [sp, #48]
  41bb08:	ldp	x27, x28, [sp, #80]
  41bb0c:	ldp	x29, x30, [sp], #224
  41bb10:	ret
  41bb14:	mov	x2, x3
  41bb18:	mov	x1, x23
  41bb1c:	add	x0, sp, #0xa4
  41bb20:	bl	415dd8 <_obstack_memory_used@@Base+0x3188>
  41bb24:	ldr	w2, [sp, #164]
  41bb28:	str	x0, [x20, x19, lsl #3]
  41bb2c:	mov	w0, w2
  41bb30:	ldp	x19, x20, [sp, #16]
  41bb34:	ldp	x21, x22, [sp, #32]
  41bb38:	ldp	x23, x24, [sp, #48]
  41bb3c:	ldp	x27, x28, [sp, #80]
  41bb40:	ldp	x29, x30, [sp], #224
  41bb44:	ret
  41bb48:	ldr	x0, [sp, #168]
  41bb4c:	cbnz	x0, 41be08 <_obstack_memory_used@@Base+0x91b8>
  41bb50:	mov	w2, #0x0                   	// #0
  41bb54:	ldp	x25, x26, [sp, #64]
  41bb58:	b	41b748 <_obstack_memory_used@@Base+0x8af8>
  41bb5c:	add	x26, x0, #0x1
  41bb60:	b	41b8b8 <_obstack_memory_used@@Base+0x8c68>
  41bb64:	ldp	x0, x1, [x27]
  41bb68:	stp	x0, x1, [sp, #168]
  41bb6c:	ldp	x2, x3, [x27, #16]
  41bb70:	stp	x2, x3, [sp, #184]
  41bb74:	ldp	x2, x3, [x27, #32]
  41bb78:	stp	x2, x3, [sp, #200]
  41bb7c:	ldp	x1, x0, [sp, #144]
  41bb80:	ldr	x2, [x27, #48]
  41bb84:	str	x2, [sp, #216]
  41bb88:	bl	4158e8 <_obstack_memory_used@@Base+0x2c98>
  41bb8c:	mov	w2, w0
  41bb90:	cbz	w0, 41b9f8 <_obstack_memory_used@@Base+0x8da8>
  41bb94:	nop
  41bb98:	ldr	x0, [sp, #168]
  41bb9c:	cbz	x0, 41bbd0 <_obstack_memory_used@@Base+0x8f80>
  41bba0:	ldr	x0, [sp, #216]
  41bba4:	str	w2, [sp, #96]
  41bba8:	bl	402ae0 <free@plt>
  41bbac:	ldr	w2, [sp, #96]
  41bbb0:	ldp	x19, x20, [sp, #16]
  41bbb4:	mov	w0, w2
  41bbb8:	ldp	x21, x22, [sp, #32]
  41bbbc:	ldp	x23, x24, [sp, #48]
  41bbc0:	ldp	x25, x26, [sp, #64]
  41bbc4:	ldp	x27, x28, [sp, #80]
  41bbc8:	ldp	x29, x30, [sp], #224
  41bbcc:	ret
  41bbd0:	mov	w0, w2
  41bbd4:	ldp	x19, x20, [sp, #16]
  41bbd8:	ldp	x21, x22, [sp, #32]
  41bbdc:	ldp	x23, x24, [sp, #48]
  41bbe0:	ldp	x25, x26, [sp, #64]
  41bbe4:	ldp	x27, x28, [sp, #80]
  41bbe8:	ldp	x29, x30, [sp], #224
  41bbec:	ret
  41bbf0:	ldr	x0, [x20, #216]
  41bbf4:	str	x0, [sp, #104]
  41bbf8:	b.le	41bcd0 <_obstack_memory_used@@Base+0x9080>
  41bbfc:	mov	x28, #0x0                   	// #0
  41bc00:	ldr	x0, [x27, #48]
  41bc04:	ldr	x3, [sp, #104]
  41bc08:	ldr	x0, [x0, x28, lsl #3]
  41bc0c:	add	x0, x0, x0, lsl #2
  41bc10:	add	x1, x3, x0, lsl #3
  41bc14:	ldr	x2, [x1, #16]
  41bc18:	cmp	x19, x2
  41bc1c:	b.le	41bcc0 <_obstack_memory_used@@Base+0x9070>
  41bc20:	ldr	x2, [x1, #8]
  41bc24:	cmp	x19, x2
  41bc28:	b.gt	41bcc0 <_obstack_memory_used@@Base+0x9070>
  41bc2c:	ldr	x2, [x3, x0, lsl #3]
  41bc30:	ldr	x0, [x23]
  41bc34:	lsl	x2, x2, #4
  41bc38:	ldr	x1, [x1, #24]
  41bc3c:	ldr	x24, [x0, x2]
  41bc40:	cmp	x19, x1
  41bc44:	ldr	x6, [x21, #8]
  41bc48:	b.eq	41bcd8 <_obstack_memory_used@@Base+0x9088>  // b.none
  41bc4c:	cmp	x6, #0x0
  41bc50:	mov	x26, #0x0                   	// #0
  41bc54:	b.gt	41bc6c <_obstack_memory_used@@Base+0x901c>
  41bc58:	b	41bcc0 <_obstack_memory_used@@Base+0x9070>
  41bc5c:	add	x26, x26, #0x1
  41bc60:	cmp	x26, x6
  41bc64:	b.ge	41bcc0 <_obstack_memory_used@@Base+0x9070>  // b.tcont
  41bc68:	ldr	x0, [x23]
  41bc6c:	ldr	x1, [x21, #16]
  41bc70:	ldr	x1, [x1, x26, lsl #3]
  41bc74:	lsl	x3, x1, #4
  41bc78:	add	x2, x0, x3
  41bc7c:	ldrb	w2, [x2, #8]
  41bc80:	sub	w2, w2, #0x8
  41bc84:	cmp	w2, #0x1
  41bc88:	b.hi	41bc5c <_obstack_memory_used@@Base+0x900c>  // b.pmore
  41bc8c:	ldr	x0, [x0, x3]
  41bc90:	cmp	x24, x0
  41bc94:	b.ne	41bc5c <_obstack_memory_used@@Base+0x900c>  // b.any
  41bc98:	mov	x2, x21
  41bc9c:	mov	x3, x25
  41bca0:	mov	x0, x23
  41bca4:	bl	416440 <_obstack_memory_used@@Base+0x37f0>
  41bca8:	mov	w2, w0
  41bcac:	cbnz	w0, 41bbd0 <_obstack_memory_used@@Base+0x8f80>
  41bcb0:	ldr	x6, [x21, #8]
  41bcb4:	add	x26, x26, #0x1
  41bcb8:	cmp	x26, x6
  41bcbc:	b.lt	41bc68 <_obstack_memory_used@@Base+0x9018>  // b.tstop
  41bcc0:	ldr	x0, [x27, #40]
  41bcc4:	add	x28, x28, #0x1
  41bcc8:	cmp	x28, x0
  41bccc:	b.lt	41bc00 <_obstack_memory_used@@Base+0x8fb0>  // b.tstop
  41bcd0:	str	wzr, [sp, #164]
  41bcd4:	b	41b844 <_obstack_memory_used@@Base+0x8bf4>
  41bcd8:	cmp	x6, #0x0
  41bcdc:	b.le	41bcc0 <_obstack_memory_used@@Base+0x9070>
  41bce0:	ldr	x10, [x21, #16]
  41bce4:	mov	x26, #0xffffffffffffffff    	// #-1
  41bce8:	mov	x1, x26
  41bcec:	mov	x2, x10
  41bcf0:	add	x11, x10, x6, lsl #3
  41bcf4:	b	41bd18 <_obstack_memory_used@@Base+0x90c8>
  41bcf8:	cmp	w3, #0x9
  41bcfc:	b.ne	41bd0c <_obstack_memory_used@@Base+0x90bc>  // b.any
  41bd00:	ldr	x3, [x9]
  41bd04:	cmp	x24, x3
  41bd08:	csel	x26, x26, x4, ne  // ne = any
  41bd0c:	add	x2, x2, #0x8
  41bd10:	cmp	x11, x2
  41bd14:	b.eq	41bd48 <_obstack_memory_used@@Base+0x90f8>  // b.none
  41bd18:	ldr	x4, [x2]
  41bd1c:	lsl	x5, x4, #4
  41bd20:	add	x9, x0, x5
  41bd24:	ldrb	w3, [x9, #8]
  41bd28:	cmp	w3, #0x8
  41bd2c:	b.ne	41bcf8 <_obstack_memory_used@@Base+0x90a8>  // b.any
  41bd30:	ldr	x3, [x0, x5]
  41bd34:	add	x2, x2, #0x8
  41bd38:	cmp	x24, x3
  41bd3c:	csel	x1, x1, x4, ne  // ne = any
  41bd40:	cmp	x11, x2
  41bd44:	b.ne	41bd18 <_obstack_memory_used@@Base+0x90c8>  // b.any
  41bd48:	tbz	x1, #63, 41bdac <_obstack_memory_used@@Base+0x915c>
  41bd4c:	tbnz	x26, #63, 41bcc0 <_obstack_memory_used@@Base+0x9070>
  41bd50:	mov	x24, #0x0                   	// #0
  41bd54:	nop
  41bd58:	ldr	x9, [x10, x24, lsl #3]
  41bd5c:	mov	x2, x26
  41bd60:	ldr	x0, [x23, #56]
  41bd64:	add	x8, x9, x9, lsl #1
  41bd68:	lsl	x8, x8, #3
  41bd6c:	add	x0, x0, x8
  41bd70:	add	x1, x0, #0x10
  41bd74:	ldr	x0, [x0, #8]
  41bd78:	bl	4148c8 <_obstack_memory_used@@Base+0x1c78>
  41bd7c:	cbnz	x0, 41bd98 <_obstack_memory_used@@Base+0x9148>
  41bd80:	ldr	x0, [x23, #48]
  41bd84:	add	x8, x0, x8
  41bd88:	add	x1, x8, #0x10
  41bd8c:	ldr	x0, [x8, #8]
  41bd90:	bl	4148c8 <_obstack_memory_used@@Base+0x1c78>
  41bd94:	cbz	x0, 41bde4 <_obstack_memory_used@@Base+0x9194>
  41bd98:	add	x24, x24, #0x1
  41bd9c:	cmp	x6, x24
  41bda0:	b.le	41bcc0 <_obstack_memory_used@@Base+0x9070>
  41bda4:	ldr	x10, [x21, #16]
  41bda8:	b	41bd58 <_obstack_memory_used@@Base+0x9108>
  41bdac:	mov	x2, x21
  41bdb0:	mov	x3, x25
  41bdb4:	mov	x0, x23
  41bdb8:	bl	416440 <_obstack_memory_used@@Base+0x37f0>
  41bdbc:	mov	w2, w0
  41bdc0:	cbnz	w0, 41bbd0 <_obstack_memory_used@@Base+0x8f80>
  41bdc4:	tbnz	x26, #63, 41bcc0 <_obstack_memory_used@@Base+0x9070>
  41bdc8:	ldr	x6, [x21, #8]
  41bdcc:	cmp	x6, #0x0
  41bdd0:	b.le	41bcc0 <_obstack_memory_used@@Base+0x9070>
  41bdd4:	ldr	x10, [x21, #16]
  41bdd8:	b	41bd50 <_obstack_memory_used@@Base+0x9100>
  41bddc:	mov	w2, #0xc                   	// #12
  41bde0:	b	41bb98 <_obstack_memory_used@@Base+0x8f48>
  41bde4:	mov	x2, x21
  41bde8:	mov	x1, x9
  41bdec:	mov	x3, x25
  41bdf0:	mov	x0, x23
  41bdf4:	bl	416440 <_obstack_memory_used@@Base+0x37f0>
  41bdf8:	mov	w2, w0
  41bdfc:	cbnz	w0, 41bbd0 <_obstack_memory_used@@Base+0x8f80>
  41be00:	ldr	x6, [x21, #8]
  41be04:	b	41bd9c <_obstack_memory_used@@Base+0x914c>
  41be08:	mov	w2, #0x0                   	// #0
  41be0c:	b	41bba0 <_obstack_memory_used@@Base+0x8f50>
  41be10:	stp	x29, x30, [sp, #-32]!
  41be14:	mov	x9, x0
  41be18:	mov	x6, x1
  41be1c:	mov	x29, sp
  41be20:	ldr	w0, [x1, #144]
  41be24:	mov	x10, x2
  41be28:	mov	w7, w3
  41be2c:	mov	x12, x4
  41be30:	and	w5, w5, #0xff
  41be34:	cmp	w0, #0x1
  41be38:	ldr	x11, [x1, #72]
  41be3c:	b.eq	41be54 <_obstack_memory_used@@Base+0x9204>  // b.none
  41be40:	mov	x1, x11
  41be44:	mov	x0, x6
  41be48:	bl	414880 <_obstack_memory_used@@Base+0x1c30>
  41be4c:	cmp	w0, #0x1
  41be50:	b.gt	41be94 <_obstack_memory_used@@Base+0x9244>
  41be54:	ldrb	w8, [x10, #8]
  41be58:	add	x7, x11, w7, sxtw
  41be5c:	str	x7, [x6, #72]
  41be60:	and	w0, w8, #0xfffffffb
  41be64:	cmp	w0, #0x1a
  41be68:	ccmp	w8, #0x1c, #0x4, ne  // ne = any
  41be6c:	b.eq	41bebc <_obstack_memory_used@@Base+0x926c>  // b.none
  41be70:	cmp	w5, #0x0
  41be74:	ccmp	w8, #0x16, #0x0, eq  // eq = none
  41be78:	b.eq	41c008 <_obstack_memory_used@@Base+0x93b8>  // b.none
  41be7c:	ldrb	w1, [x10]
  41be80:	mov	w0, #0x0                   	// #0
  41be84:	str	wzr, [x9]
  41be88:	strb	w1, [x9, #8]
  41be8c:	ldp	x29, x30, [sp], #32
  41be90:	ret
  41be94:	ldr	x1, [x6, #16]
  41be98:	mov	w2, #0x1                   	// #1
  41be9c:	str	w2, [x9]
  41bea0:	add	x2, x11, w0, sxtw
  41bea4:	mov	w0, #0x0                   	// #0
  41bea8:	ldr	w1, [x1, x11, lsl #2]
  41beac:	str	w1, [x9, #8]
  41beb0:	str	x2, [x6, #72]
  41beb4:	ldp	x29, x30, [sp], #32
  41beb8:	ret
  41bebc:	ldr	x11, [x6, #104]
  41bec0:	cmp	x7, x11
  41bec4:	b.ge	41bf6c <_obstack_memory_used@@Base+0x931c>  // b.tcont
  41bec8:	ldrb	w12, [x10]
  41becc:	mov	x5, #0x0                   	// #0
  41bed0:	b	41bef4 <_obstack_memory_used@@Base+0x92a4>
  41bed4:	ldr	x0, [x9, #8]
  41bed8:	strb	w8, [x0, x5]
  41bedc:	add	x5, x5, #0x1
  41bee0:	cmp	x5, #0x20
  41bee4:	b.eq	41bf6c <_obstack_memory_used@@Base+0x931c>  // b.none
  41bee8:	ldrb	w8, [x10, #8]
  41beec:	ldr	x7, [x6, #72]
  41bef0:	ldr	x11, [x6, #104]
  41bef4:	cmp	w8, #0x1e
  41bef8:	mov	w13, w5
  41befc:	b.eq	41bf78 <_obstack_memory_used@@Base+0x9328>  // b.none
  41bf00:	ldr	x0, [x6, #8]
  41bf04:	add	x1, x7, #0x1
  41bf08:	str	x1, [x6, #72]
  41bf0c:	ldrb	w8, [x0, x7]
  41bf10:	cmp	x11, x1
  41bf14:	b.le	41bf6c <_obstack_memory_used@@Base+0x931c>
  41bf18:	cmp	w12, w8
  41bf1c:	b.ne	41bed4 <_obstack_memory_used@@Base+0x9284>  // b.any
  41bf20:	ldr	x0, [x6, #8]
  41bf24:	ldrb	w0, [x0, x1]
  41bf28:	cmp	w0, #0x5d
  41bf2c:	b.ne	41bed4 <_obstack_memory_used@@Base+0x9284>  // b.any
  41bf30:	ldr	x0, [x9, #8]
  41bf34:	add	x1, x1, #0x1
  41bf38:	str	x1, [x6, #72]
  41bf3c:	strb	wzr, [x0, w13, sxtw]
  41bf40:	ldrb	w0, [x10, #8]
  41bf44:	cmp	w0, #0x1c
  41bf48:	b.eq	41c03c <_obstack_memory_used@@Base+0x93ec>  // b.none
  41bf4c:	cmp	w0, #0x1e
  41bf50:	b.eq	41c02c <_obstack_memory_used@@Base+0x93dc>  // b.none
  41bf54:	cmp	w0, #0x1a
  41bf58:	mov	w0, #0x0                   	// #0
  41bf5c:	b.ne	41be8c <_obstack_memory_used@@Base+0x923c>  // b.any
  41bf60:	mov	w1, #0x3                   	// #3
  41bf64:	str	w1, [x9]
  41bf68:	b	41be8c <_obstack_memory_used@@Base+0x923c>
  41bf6c:	mov	w0, #0x7                   	// #7
  41bf70:	ldp	x29, x30, [sp], #32
  41bf74:	ret
  41bf78:	ldrb	w0, [x6, #139]
  41bf7c:	cbz	w0, 41bf00 <_obstack_memory_used@@Base+0x92b0>
  41bf80:	ldrb	w0, [x6, #140]
  41bf84:	cbz	w0, 41bfec <_obstack_memory_used@@Base+0x939c>
  41bf88:	ldr	x0, [x6, #48]
  41bf8c:	cmp	x7, x0
  41bf90:	b.eq	41bfa4 <_obstack_memory_used@@Base+0x9354>  // b.none
  41bf94:	ldr	x0, [x6, #16]
  41bf98:	ldr	w0, [x0, x7, lsl #2]
  41bf9c:	cmn	w0, #0x1
  41bfa0:	b.eq	41bf00 <_obstack_memory_used@@Base+0x92b0>  // b.none
  41bfa4:	ldr	x1, [x6, #24]
  41bfa8:	ldr	x0, [x6]
  41bfac:	ldr	x2, [x1, x7, lsl #3]
  41bfb0:	ldr	x1, [x6, #40]
  41bfb4:	add	x0, x0, x2
  41bfb8:	ldrb	w8, [x0, x1]
  41bfbc:	tbnz	w8, #7, 41bf00 <_obstack_memory_used@@Base+0x92b0>
  41bfc0:	ldr	w0, [x6, #144]
  41bfc4:	mov	x1, #0x1                   	// #1
  41bfc8:	cmp	w0, #0x1
  41bfcc:	b.eq	41bfe0 <_obstack_memory_used@@Base+0x9390>  // b.none
  41bfd0:	mov	x1, x7
  41bfd4:	mov	x0, x6
  41bfd8:	bl	414880 <_obstack_memory_used@@Base+0x1c30>
  41bfdc:	sxtw	x1, w0
  41bfe0:	add	x1, x7, x1
  41bfe4:	str	x1, [x6, #72]
  41bfe8:	b	41bf10 <_obstack_memory_used@@Base+0x92c0>
  41bfec:	ldr	x0, [x6]
  41bff0:	add	x1, x7, #0x1
  41bff4:	ldr	x2, [x6, #40]
  41bff8:	add	x0, x0, x7
  41bffc:	str	x1, [x6, #72]
  41c000:	ldrb	w8, [x0, x2]
  41c004:	b	41bf10 <_obstack_memory_used@@Base+0x92c0>
  41c008:	mov	x2, x12
  41c00c:	mov	x1, x6
  41c010:	add	x0, sp, #0x10
  41c014:	bl	412cd8 <_obstack_memory_used@@Base+0x88>
  41c018:	ldrb	w0, [sp, #24]
  41c01c:	cmp	w0, #0x15
  41c020:	b.eq	41be7c <_obstack_memory_used@@Base+0x922c>  // b.none
  41c024:	mov	w0, #0xb                   	// #11
  41c028:	b	41be8c <_obstack_memory_used@@Base+0x923c>
  41c02c:	mov	w1, #0x4                   	// #4
  41c030:	mov	w0, #0x0                   	// #0
  41c034:	str	w1, [x9]
  41c038:	b	41be8c <_obstack_memory_used@@Base+0x923c>
  41c03c:	mov	w1, #0x2                   	// #2
  41c040:	mov	w0, #0x0                   	// #0
  41c044:	str	w1, [x9]
  41c048:	b	41be8c <_obstack_memory_used@@Base+0x923c>
  41c04c:	nop
  41c050:	stp	x29, x30, [sp, #-96]!
  41c054:	mov	x29, sp
  41c058:	stp	x19, x20, [sp, #16]
  41c05c:	mov	x19, x1
  41c060:	stp	x21, x22, [sp, #32]
  41c064:	ldr	x21, [x1, #72]
  41c068:	stp	x23, x24, [sp, #48]
  41c06c:	mov	x23, x0
  41c070:	ldr	x1, [x1, #104]
  41c074:	cmp	x1, x21
  41c078:	b.le	41c2a0 <_obstack_memory_used@@Base+0x9650>
  41c07c:	ldr	x24, [x19, #8]
  41c080:	mov	x22, x2
  41c084:	ldrb	w1, [x0, #10]
  41c088:	ldr	w0, [x19, #144]
  41c08c:	ldrb	w20, [x24, x21]
  41c090:	and	w1, w1, #0xffffff9f
  41c094:	strb	w20, [x23]
  41c098:	cmp	w0, #0x1
  41c09c:	strb	w1, [x23, #10]
  41c0a0:	b.le	41c154 <_obstack_memory_used@@Base+0x9504>
  41c0a4:	ldr	x1, [x19, #48]
  41c0a8:	cmp	x21, x1
  41c0ac:	b.eq	41c0c0 <_obstack_memory_used@@Base+0x9470>  // b.none
  41c0b0:	ldr	x1, [x19, #16]
  41c0b4:	ldr	w1, [x1, x21, lsl #2]
  41c0b8:	cmn	w1, #0x1
  41c0bc:	b.eq	41c330 <_obstack_memory_used@@Base+0x96e0>  // b.none
  41c0c0:	cmp	w20, #0x5c
  41c0c4:	b.eq	41c19c <_obstack_memory_used@@Base+0x954c>  // b.none
  41c0c8:	ldr	x0, [x19, #16]
  41c0cc:	str	x25, [sp, #64]
  41c0d0:	mov	w1, #0x1                   	// #1
  41c0d4:	strb	w1, [x23, #8]
  41c0d8:	ldr	w25, [x0, x21, lsl #2]
  41c0dc:	mov	w0, w25
  41c0e0:	bl	402bf0 <iswalnum@plt>
  41c0e4:	cmp	w25, #0x5f
  41c0e8:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  41c0ec:	ldrb	w0, [x23, #10]
  41c0f0:	cset	w1, ne  // ne = any
  41c0f4:	bfi	w0, w1, #6, #1
  41c0f8:	strb	w0, [x23, #10]
  41c0fc:	ldr	x25, [sp, #64]
  41c100:	cmp	w20, #0x2e
  41c104:	b.eq	41c678 <_obstack_memory_used@@Base+0x9a28>  // b.none
  41c108:	b.hi	41c1cc <_obstack_memory_used@@Base+0x957c>  // b.pmore
  41c10c:	cmp	w20, #0x29
  41c110:	b.eq	41c65c <_obstack_memory_used@@Base+0x9a0c>  // b.none
  41c114:	b.ls	41c204 <_obstack_memory_used@@Base+0x95b4>  // b.plast
  41c118:	cmp	w20, #0x2a
  41c11c:	b.eq	41c668 <_obstack_memory_used@@Base+0x9a18>  // b.none
  41c120:	cmp	w20, #0x2b
  41c124:	b.ne	41c654 <_obstack_memory_used@@Base+0x9a04>  // b.any
  41c128:	mov	x1, #0x402                 	// #1026
  41c12c:	mov	w0, #0x1                   	// #1
  41c130:	tst	x22, x1
  41c134:	b.ne	41c140 <_obstack_memory_used@@Base+0x94f0>  // b.any
  41c138:	mov	w1, #0x12                  	// #18
  41c13c:	strb	w1, [x23, #8]
  41c140:	ldp	x19, x20, [sp, #16]
  41c144:	ldp	x21, x22, [sp, #32]
  41c148:	ldp	x23, x24, [sp, #48]
  41c14c:	ldp	x29, x30, [sp], #96
  41c150:	ret
  41c154:	cmp	w20, #0x5c
  41c158:	b.eq	41c19c <_obstack_memory_used@@Base+0x954c>  // b.none
  41c15c:	bl	402ab0 <__ctype_b_loc@plt>
  41c160:	ldr	x0, [x0]
  41c164:	ubfiz	x2, x20, #1, #8
  41c168:	cmp	w20, #0x5f
  41c16c:	ldr	w1, [x23, #8]
  41c170:	ldrh	w0, [x0, x2]
  41c174:	and	w1, w1, #0xffffff00
  41c178:	and	w1, w1, #0xffbfffff
  41c17c:	and	w0, w0, #0x8
  41c180:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  41c184:	cset	w0, ne  // ne = any
  41c188:	lsl	w0, w0, #22
  41c18c:	orr	w0, w0, #0x1
  41c190:	orr	w0, w0, w1
  41c194:	str	w0, [x23, #8]
  41c198:	b	41c100 <_obstack_memory_used@@Base+0x94b0>
  41c19c:	ldr	x2, [x19, #88]
  41c1a0:	add	x1, x21, #0x1
  41c1a4:	cmp	x1, x2
  41c1a8:	b.lt	41c2c0 <_obstack_memory_used@@Base+0x9670>  // b.tstop
  41c1ac:	mov	w1, #0x24                  	// #36
  41c1b0:	strb	w1, [x23, #8]
  41c1b4:	mov	w0, #0x1                   	// #1
  41c1b8:	ldp	x19, x20, [sp, #16]
  41c1bc:	ldp	x21, x22, [sp, #32]
  41c1c0:	ldp	x23, x24, [sp, #48]
  41c1c4:	ldp	x29, x30, [sp], #96
  41c1c8:	ret
  41c1cc:	cmp	w20, #0x7b
  41c1d0:	b.eq	41c630 <_obstack_memory_used@@Base+0x99e0>  // b.none
  41c1d4:	b.ls	41c228 <_obstack_memory_used@@Base+0x95d8>  // b.plast
  41c1d8:	cmp	w20, #0x7c
  41c1dc:	b.eq	41c644 <_obstack_memory_used@@Base+0x99f4>  // b.none
  41c1e0:	cmp	w20, #0x7d
  41c1e4:	b.ne	41c654 <_obstack_memory_used@@Base+0x9a04>  // b.any
  41c1e8:	mov	x1, #0x1200                	// #4608
  41c1ec:	mov	w0, #0x1                   	// #1
  41c1f0:	bics	xzr, x1, x22
  41c1f4:	b.ne	41c140 <_obstack_memory_used@@Base+0x94f0>  // b.any
  41c1f8:	mov	w1, #0x18                  	// #24
  41c1fc:	strb	w1, [x23, #8]
  41c200:	b	41c140 <_obstack_memory_used@@Base+0x94f0>
  41c204:	cmp	w20, #0x24
  41c208:	b.eq	41c5cc <_obstack_memory_used@@Base+0x997c>  // b.none
  41c20c:	cmp	w20, #0x28
  41c210:	mov	w0, #0x1                   	// #1
  41c214:	b.ne	41c260 <_obstack_memory_used@@Base+0x9610>  // b.any
  41c218:	tbz	w22, #13, 41c140 <_obstack_memory_used@@Base+0x94f0>
  41c21c:	mov	w1, #0x8                   	// #8
  41c220:	strb	w1, [x23, #8]
  41c224:	b	41c140 <_obstack_memory_used@@Base+0x94f0>
  41c228:	cmp	w20, #0x5b
  41c22c:	b.eq	41c688 <_obstack_memory_used@@Base+0x9a38>  // b.none
  41c230:	cmp	w20, #0x5e
  41c234:	b.ne	41c27c <_obstack_memory_used@@Base+0x962c>  // b.any
  41c238:	and	x0, x22, #0xfffff8
  41c23c:	ands	x0, x0, #0xffffffffff80000f
  41c240:	ccmp	x21, #0x0, #0x4, eq  // eq = none
  41c244:	b.ne	41c3ec <_obstack_memory_used@@Base+0x979c>  // b.any
  41c248:	mov	w1, #0xc                   	// #12
  41c24c:	mov	w2, #0x10                  	// #16
  41c250:	mov	w0, #0x1                   	// #1
  41c254:	str	w2, [x23]
  41c258:	strb	w1, [x23, #8]
  41c25c:	b	41c140 <_obstack_memory_used@@Base+0x94f0>
  41c260:	cmp	w20, #0xa
  41c264:	b.ne	41c140 <_obstack_memory_used@@Base+0x94f0>  // b.any
  41c268:	tbz	w22, #11, 41c140 <_obstack_memory_used@@Base+0x94f0>
  41c26c:	mov	w1, #0xa                   	// #10
  41c270:	mov	w0, #0x1                   	// #1
  41c274:	strb	w1, [x23, #8]
  41c278:	b	41c140 <_obstack_memory_used@@Base+0x94f0>
  41c27c:	cmp	w20, #0x3f
  41c280:	b.ne	41c654 <_obstack_memory_used@@Base+0x9a04>  // b.any
  41c284:	mov	x1, #0x402                 	// #1026
  41c288:	mov	w0, #0x1                   	// #1
  41c28c:	tst	x22, x1
  41c290:	b.ne	41c140 <_obstack_memory_used@@Base+0x94f0>  // b.any
  41c294:	mov	w1, #0x13                  	// #19
  41c298:	strb	w1, [x23, #8]
  41c29c:	b	41c140 <_obstack_memory_used@@Base+0x94f0>
  41c2a0:	mov	w1, #0x2                   	// #2
  41c2a4:	strb	w1, [x23, #8]
  41c2a8:	mov	w0, #0x0                   	// #0
  41c2ac:	ldp	x19, x20, [sp, #16]
  41c2b0:	ldp	x21, x22, [sp, #32]
  41c2b4:	ldp	x23, x24, [sp, #48]
  41c2b8:	ldp	x29, x30, [sp], #96
  41c2bc:	ret
  41c2c0:	ldrb	w2, [x19, #139]
  41c2c4:	cbnz	w2, 41c38c <_obstack_memory_used@@Base+0x973c>
  41c2c8:	ldrb	w20, [x24, x1]
  41c2cc:	mov	w2, #0x1                   	// #1
  41c2d0:	strb	w20, [x23]
  41c2d4:	strb	w2, [x23, #8]
  41c2d8:	cmp	w0, #0x1
  41c2dc:	b.le	41c354 <_obstack_memory_used@@Base+0x9704>
  41c2e0:	ldr	x2, [x19, #16]
  41c2e4:	add	x2, x2, x1, lsl #2
  41c2e8:	ldr	w19, [x2]
  41c2ec:	mov	w0, w19
  41c2f0:	bl	402bf0 <iswalnum@plt>
  41c2f4:	cmp	w19, #0x5f
  41c2f8:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  41c2fc:	ldrb	w0, [x23, #10]
  41c300:	cset	w1, ne  // ne = any
  41c304:	bfi	w0, w1, #6, #1
  41c308:	strb	w0, [x23, #10]
  41c30c:	sub	w0, w20, #0x27
  41c310:	cmp	w0, #0x56
  41c314:	b.hi	41c384 <_obstack_memory_used@@Base+0x9734>  // b.pmore
  41c318:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xf3b0>
  41c31c:	add	x1, x1, #0x178
  41c320:	ldrh	w0, [x1, w0, uxtw #1]
  41c324:	adr	x1, 41c330 <_obstack_memory_used@@Base+0x96e0>
  41c328:	add	x0, x1, w0, sxth #2
  41c32c:	br	x0
  41c330:	ldr	w1, [x23, #8]
  41c334:	mov	w2, #0x1                   	// #1
  41c338:	movk	w2, #0x20, lsl #16
  41c33c:	mov	w0, #0x1                   	// #1
  41c340:	and	w1, w1, #0xffffff00
  41c344:	and	w1, w1, #0xffdfffff
  41c348:	orr	w1, w1, w2
  41c34c:	str	w1, [x23, #8]
  41c350:	b	41c140 <_obstack_memory_used@@Base+0x94f0>
  41c354:	bl	402ab0 <__ctype_b_loc@plt>
  41c358:	ldr	x0, [x0]
  41c35c:	ubfiz	x1, x20, #1, #8
  41c360:	cmp	w20, #0x5f
  41c364:	ldrb	w2, [x23, #10]
  41c368:	ldrh	w0, [x0, x1]
  41c36c:	and	w0, w0, #0x8
  41c370:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  41c374:	cset	w0, ne  // ne = any
  41c378:	bfi	w2, w0, #6, #1
  41c37c:	strb	w2, [x23, #10]
  41c380:	b	41c30c <_obstack_memory_used@@Base+0x96bc>
  41c384:	mov	w0, #0x2                   	// #2
  41c388:	b	41c140 <_obstack_memory_used@@Base+0x94f0>
  41c38c:	cmp	w0, #0x1
  41c390:	b.le	41c3c4 <_obstack_memory_used@@Base+0x9774>
  41c394:	ldr	x2, [x19, #16]
  41c398:	ldr	w3, [x2, x1, lsl #2]
  41c39c:	add	x2, x2, x1, lsl #2
  41c3a0:	cmn	w3, #0x1
  41c3a4:	b.eq	41c6a4 <_obstack_memory_used@@Base+0x9a54>  // b.none
  41c3a8:	ldr	x3, [x19, #48]
  41c3ac:	add	x21, x21, #0x2
  41c3b0:	cmp	x3, x21
  41c3b4:	b.eq	41c3c4 <_obstack_memory_used@@Base+0x9774>  // b.none
  41c3b8:	ldr	w3, [x2, #4]
  41c3bc:	cmn	w3, #0x1
  41c3c0:	b.eq	41c6a4 <_obstack_memory_used@@Base+0x9a54>  // b.none
  41c3c4:	ldrb	w3, [x19, #140]
  41c3c8:	ldr	x2, [x19]
  41c3cc:	ldr	x4, [x19, #40]
  41c3d0:	cbz	w3, 41c698 <_obstack_memory_used@@Base+0x9a48>
  41c3d4:	ldr	x3, [x19, #24]
  41c3d8:	add	x2, x2, x4
  41c3dc:	ldr	x3, [x3, x1, lsl #3]
  41c3e0:	ldrb	w20, [x2, x3]
  41c3e4:	tbz	w20, #7, 41c2cc <_obstack_memory_used@@Base+0x967c>
  41c3e8:	b	41c2c8 <_obstack_memory_used@@Base+0x9678>
  41c3ec:	add	x21, x24, x21
  41c3f0:	tst	x22, #0x800
  41c3f4:	mov	w0, #0x1                   	// #1
  41c3f8:	ldurb	w1, [x21, #-1]
  41c3fc:	ccmp	w1, #0xa, #0x0, ne  // ne = any
  41c400:	b.ne	41c140 <_obstack_memory_used@@Base+0x94f0>  // b.any
  41c404:	b	41c248 <_obstack_memory_used@@Base+0x95f8>
  41c408:	mov	w0, #0x2                   	// #2
  41c40c:	tbnz	w22, #14, 41c140 <_obstack_memory_used@@Base+0x94f0>
  41c410:	sub	w1, w20, #0x31
  41c414:	mov	w2, #0x4                   	// #4
  41c418:	strb	w2, [x23, #8]
  41c41c:	sxtw	x1, w1
  41c420:	str	x1, [x23]
  41c424:	b	41c140 <_obstack_memory_used@@Base+0x94f0>
  41c428:	mov	x0, #0x402                 	// #1026
  41c42c:	and	x0, x22, x0
  41c430:	cmp	x0, #0x2
  41c434:	mov	w0, #0x2                   	// #2
  41c438:	b.ne	41c140 <_obstack_memory_used@@Base+0x94f0>  // b.any
  41c43c:	b	41c138 <_obstack_memory_used@@Base+0x94e8>
  41c440:	mov	w0, #0x2                   	// #2
  41c444:	tbnz	w22, #19, 41c140 <_obstack_memory_used@@Base+0x94f0>
  41c448:	mov	w1, #0xc                   	// #12
  41c44c:	mov	w2, #0x9                   	// #9
  41c450:	str	w2, [x23]
  41c454:	strb	w1, [x23, #8]
  41c458:	b	41c140 <_obstack_memory_used@@Base+0x94f0>
  41c45c:	mov	w0, #0x2                   	// #2
  41c460:	tbnz	w22, #19, 41c140 <_obstack_memory_used@@Base+0x94f0>
  41c464:	mov	w1, #0xc                   	// #12
  41c468:	mov	w2, #0x6                   	// #6
  41c46c:	str	w2, [x23]
  41c470:	strb	w1, [x23, #8]
  41c474:	b	41c140 <_obstack_memory_used@@Base+0x94f0>
  41c478:	mov	w0, #0x2                   	// #2
  41c47c:	tbnz	w22, #19, 41c140 <_obstack_memory_used@@Base+0x94f0>
  41c480:	mov	w1, #0x20                  	// #32
  41c484:	strb	w1, [x23, #8]
  41c488:	b	41c140 <_obstack_memory_used@@Base+0x94f0>
  41c48c:	mov	w0, #0x2                   	// #2
  41c490:	tbnz	w22, #19, 41c140 <_obstack_memory_used@@Base+0x94f0>
  41c494:	mov	w1, #0x22                  	// #34
  41c498:	strb	w1, [x23, #8]
  41c49c:	b	41c140 <_obstack_memory_used@@Base+0x94f0>
  41c4a0:	mov	w0, #0x2                   	// #2
  41c4a4:	tbnz	w22, #19, 41c140 <_obstack_memory_used@@Base+0x94f0>
  41c4a8:	mov	w1, #0xc                   	// #12
  41c4ac:	mov	w2, #0x100                 	// #256
  41c4b0:	str	w2, [x23]
  41c4b4:	strb	w1, [x23, #8]
  41c4b8:	b	41c140 <_obstack_memory_used@@Base+0x94f0>
  41c4bc:	mov	w0, #0x2                   	// #2
  41c4c0:	tbnz	w22, #19, 41c140 <_obstack_memory_used@@Base+0x94f0>
  41c4c4:	mov	w1, #0xc                   	// #12
  41c4c8:	mov	w2, #0x40                  	// #64
  41c4cc:	str	w2, [x23]
  41c4d0:	strb	w1, [x23, #8]
  41c4d4:	b	41c140 <_obstack_memory_used@@Base+0x94f0>
  41c4d8:	mov	w0, #0x2                   	// #2
  41c4dc:	tbnz	w22, #19, 41c140 <_obstack_memory_used@@Base+0x94f0>
  41c4e0:	mov	w1, #0x21                  	// #33
  41c4e4:	strb	w1, [x23, #8]
  41c4e8:	b	41c140 <_obstack_memory_used@@Base+0x94f0>
  41c4ec:	mov	w0, #0x2                   	// #2
  41c4f0:	tbnz	w22, #19, 41c140 <_obstack_memory_used@@Base+0x94f0>
  41c4f4:	mov	w1, #0x23                  	// #35
  41c4f8:	strb	w1, [x23, #8]
  41c4fc:	b	41c140 <_obstack_memory_used@@Base+0x94f0>
  41c500:	mov	w0, #0x2                   	// #2
  41c504:	tbnz	w22, #19, 41c140 <_obstack_memory_used@@Base+0x94f0>
  41c508:	mov	w1, #0xc                   	// #12
  41c50c:	mov	w2, #0x200                 	// #512
  41c510:	str	w2, [x23]
  41c514:	strb	w1, [x23, #8]
  41c518:	b	41c140 <_obstack_memory_used@@Base+0x94f0>
  41c51c:	mov	x0, #0x402                 	// #1026
  41c520:	and	x0, x22, x0
  41c524:	cmp	x0, #0x2
  41c528:	mov	w0, #0x2                   	// #2
  41c52c:	b.ne	41c140 <_obstack_memory_used@@Base+0x94f0>  // b.any
  41c530:	b	41c294 <_obstack_memory_used@@Base+0x9644>
  41c534:	mov	x1, #0x8400                	// #33792
  41c538:	mov	w0, #0x2                   	// #2
  41c53c:	tst	x22, x1
  41c540:	b.ne	41c140 <_obstack_memory_used@@Base+0x94f0>  // b.any
  41c544:	mov	w1, #0xa                   	// #10
  41c548:	strb	w1, [x23, #8]
  41c54c:	b	41c140 <_obstack_memory_used@@Base+0x94f0>
  41c550:	mov	x0, #0x1200                	// #4608
  41c554:	and	x0, x22, x0
  41c558:	cmp	x0, #0x200
  41c55c:	mov	w0, #0x2                   	// #2
  41c560:	b.ne	41c140 <_obstack_memory_used@@Base+0x94f0>  // b.any
  41c564:	nop
  41c568:	mov	w1, #0x17                  	// #23
  41c56c:	strb	w1, [x23, #8]
  41c570:	b	41c140 <_obstack_memory_used@@Base+0x94f0>
  41c574:	mov	x0, #0x1200                	// #4608
  41c578:	and	x0, x22, x0
  41c57c:	cmp	x0, #0x200
  41c580:	mov	w0, #0x2                   	// #2
  41c584:	b.ne	41c140 <_obstack_memory_used@@Base+0x94f0>  // b.any
  41c588:	b	41c1f8 <_obstack_memory_used@@Base+0x95a8>
  41c58c:	mov	w0, #0x2                   	// #2
  41c590:	tbnz	w22, #13, 41c140 <_obstack_memory_used@@Base+0x94f0>
  41c594:	nop
  41c598:	mov	w1, #0x9                   	// #9
  41c59c:	strb	w1, [x23, #8]
  41c5a0:	b	41c140 <_obstack_memory_used@@Base+0x94f0>
  41c5a4:	mov	w0, #0x2                   	// #2
  41c5a8:	tbnz	w22, #13, 41c140 <_obstack_memory_used@@Base+0x94f0>
  41c5ac:	b	41c21c <_obstack_memory_used@@Base+0x95cc>
  41c5b0:	mov	w0, #0x2                   	// #2
  41c5b4:	tbnz	w22, #19, 41c140 <_obstack_memory_used@@Base+0x94f0>
  41c5b8:	mov	w1, #0xc                   	// #12
  41c5bc:	mov	w2, #0x80                  	// #128
  41c5c0:	str	w2, [x23]
  41c5c4:	strb	w1, [x23, #8]
  41c5c8:	b	41c140 <_obstack_memory_used@@Base+0x94f0>
  41c5cc:	tbnz	w22, #3, 41c618 <_obstack_memory_used@@Base+0x99c8>
  41c5d0:	ldr	x0, [x19, #88]
  41c5d4:	add	x21, x21, #0x1
  41c5d8:	cmp	x21, x0
  41c5dc:	b.eq	41c618 <_obstack_memory_used@@Base+0x99c8>  // b.none
  41c5e0:	str	x21, [x19, #72]
  41c5e4:	mov	x2, x22
  41c5e8:	mov	x1, x19
  41c5ec:	add	x0, sp, #0x50
  41c5f0:	bl	41c050 <_obstack_memory_used@@Base+0x9400>
  41c5f4:	ldr	x2, [x19, #72]
  41c5f8:	mov	w0, #0x1                   	// #1
  41c5fc:	ldrb	w1, [sp, #88]
  41c600:	sub	x2, x2, #0x1
  41c604:	str	x2, [x19, #72]
  41c608:	sub	w1, w1, #0x9
  41c60c:	and	w1, w1, #0xff
  41c610:	cmp	w1, w0
  41c614:	b.hi	41c140 <_obstack_memory_used@@Base+0x94f0>  // b.pmore
  41c618:	mov	w1, #0xc                   	// #12
  41c61c:	mov	w2, #0x20                  	// #32
  41c620:	mov	w0, #0x1                   	// #1
  41c624:	str	w2, [x23]
  41c628:	strb	w1, [x23, #8]
  41c62c:	b	41c140 <_obstack_memory_used@@Base+0x94f0>
  41c630:	mov	x1, #0x1200                	// #4608
  41c634:	mov	w0, #0x1                   	// #1
  41c638:	bics	xzr, x1, x22
  41c63c:	b.ne	41c140 <_obstack_memory_used@@Base+0x94f0>  // b.any
  41c640:	b	41c568 <_obstack_memory_used@@Base+0x9918>
  41c644:	mov	x0, #0x8400                	// #33792
  41c648:	and	x0, x22, x0
  41c64c:	cmp	x0, #0x8, lsl #12
  41c650:	b.eq	41c26c <_obstack_memory_used@@Base+0x961c>  // b.none
  41c654:	mov	w0, #0x1                   	// #1
  41c658:	b	41c140 <_obstack_memory_used@@Base+0x94f0>
  41c65c:	mov	w0, #0x1                   	// #1
  41c660:	tbz	w22, #13, 41c140 <_obstack_memory_used@@Base+0x94f0>
  41c664:	b	41c598 <_obstack_memory_used@@Base+0x9948>
  41c668:	mov	w1, #0xb                   	// #11
  41c66c:	mov	w0, #0x1                   	// #1
  41c670:	strb	w1, [x23, #8]
  41c674:	b	41c140 <_obstack_memory_used@@Base+0x94f0>
  41c678:	mov	w1, #0x5                   	// #5
  41c67c:	mov	w0, #0x1                   	// #1
  41c680:	strb	w1, [x23, #8]
  41c684:	b	41c140 <_obstack_memory_used@@Base+0x94f0>
  41c688:	mov	w1, #0x14                  	// #20
  41c68c:	mov	w0, #0x1                   	// #1
  41c690:	strb	w1, [x23, #8]
  41c694:	b	41c140 <_obstack_memory_used@@Base+0x94f0>
  41c698:	add	x2, x2, x1
  41c69c:	ldrb	w20, [x2, x4]
  41c6a0:	b	41c2cc <_obstack_memory_used@@Base+0x967c>
  41c6a4:	ldrb	w20, [x24, x1]
  41c6a8:	mov	w0, #0x1                   	// #1
  41c6ac:	strb	w20, [x23]
  41c6b0:	strb	w0, [x23, #8]
  41c6b4:	b	41c2e8 <_obstack_memory_used@@Base+0x9698>
  41c6b8:	stp	x29, x30, [sp, #-64]!
  41c6bc:	mov	x29, sp
  41c6c0:	stp	x19, x20, [sp, #16]
  41c6c4:	mov	x20, x0
  41c6c8:	mov	x19, x1
  41c6cc:	str	x23, [sp, #48]
  41c6d0:	mov	x23, x2
  41c6d4:	stp	x21, x22, [sp, #32]
  41c6d8:	mov	x21, #0xffffffffffffffff    	// #-1
  41c6dc:	mov	x22, #0x8030                	// #32816
  41c6e0:	mov	x1, x20
  41c6e4:	mov	x2, x23
  41c6e8:	mov	x0, x19
  41c6ec:	bl	41c050 <_obstack_memory_used@@Base+0x9400>
  41c6f0:	ldr	x4, [x20, #72]
  41c6f4:	ldrb	w3, [x19, #8]
  41c6f8:	ldrb	w1, [x19]
  41c6fc:	add	x0, x4, w0, sxtw
  41c700:	str	x0, [x20, #72]
  41c704:	cmp	w3, #0x2
  41c708:	b.eq	41c760 <_obstack_memory_used@@Base+0x9b10>  // b.none
  41c70c:	cmp	w1, #0x2c
  41c710:	ccmp	w3, #0x18, #0x4, ne  // ne = any
  41c714:	b.eq	41c764 <_obstack_memory_used@@Base+0x9b14>  // b.none
  41c718:	cmp	w3, #0x1
  41c71c:	b.eq	41c728 <_obstack_memory_used@@Base+0x9ad8>  // b.none
  41c720:	mov	x21, #0xfffffffffffffffe    	// #-2
  41c724:	b	41c6e0 <_obstack_memory_used@@Base+0x9a90>
  41c728:	sub	w0, w1, #0x30
  41c72c:	and	w2, w0, #0xff
  41c730:	cmp	w2, #0x9
  41c734:	ccmn	x21, #0x2, #0x4, ls  // ls = plast
  41c738:	b.eq	41c720 <_obstack_memory_used@@Base+0x9ad0>  // b.none
  41c73c:	add	x2, x21, x21, lsl #2
  41c740:	and	x1, x1, #0xff
  41c744:	cmn	x21, #0x1
  41c748:	b.eq	41c77c <_obstack_memory_used@@Base+0x9b2c>  // b.none
  41c74c:	add	x1, x1, x2, lsl #1
  41c750:	cmp	x1, x22
  41c754:	csel	x1, x1, x22, le
  41c758:	sub	x21, x1, #0x30
  41c75c:	b	41c6e0 <_obstack_memory_used@@Base+0x9a90>
  41c760:	mov	x21, #0xfffffffffffffffe    	// #-2
  41c764:	mov	x0, x21
  41c768:	ldp	x19, x20, [sp, #16]
  41c76c:	ldp	x21, x22, [sp, #32]
  41c770:	ldr	x23, [sp, #48]
  41c774:	ldp	x29, x30, [sp], #64
  41c778:	ret
  41c77c:	sxtw	x21, w0
  41c780:	b	41c6e0 <_obstack_memory_used@@Base+0x9a90>
  41c784:	nop
  41c788:	stp	x29, x30, [sp, #-272]!
  41c78c:	mov	x29, sp
  41c790:	stp	x19, x20, [sp, #16]
  41c794:	stp	x21, x22, [sp, #32]
  41c798:	mov	x22, x2
  41c79c:	ldrb	w2, [x2, #8]
  41c7a0:	stp	x25, x26, [sp, #64]
  41c7a4:	mov	x21, x0
  41c7a8:	cmp	w2, #0xc
  41c7ac:	stp	x27, x28, [sp, #80]
  41c7b0:	mov	x28, x3
  41c7b4:	str	x5, [sp, #112]
  41c7b8:	ldr	x26, [x1]
  41c7bc:	b.eq	41cf28 <_obstack_memory_used@@Base+0xa2d8>  // b.none
  41c7c0:	mov	x19, x1
  41c7c4:	b.ls	41cb34 <_obstack_memory_used@@Base+0x9ee4>  // b.plast
  41c7c8:	cmp	w2, #0x18
  41c7cc:	b.eq	41caf8 <_obstack_memory_used@@Base+0x9ea8>  // b.none
  41c7d0:	b.ls	41cad8 <_obstack_memory_used@@Base+0x9e88>  // b.plast
  41c7d4:	cmp	w2, #0x23
  41c7d8:	b.hi	41d030 <_obstack_memory_used@@Base+0xa3e0>  // b.pmore
  41c7dc:	cmp	w2, #0x21
  41c7e0:	ldr	x1, [x0, #120]
  41c7e4:	b.hi	41d044 <_obstack_memory_used@@Base+0xa3f4>  // b.pmore
  41c7e8:	adrp	x3, 422000 <_obstack_memory_used@@Base+0xf3b0>
  41c7ec:	adrp	x2, 421000 <_obstack_memory_used@@Base+0xe3b0>
  41c7f0:	add	x3, x3, #0x170
  41c7f4:	add	x2, x2, #0x5c8
  41c7f8:	cset	w4, eq  // eq = none
  41c7fc:	mov	x0, x26
  41c800:	bl	418460 <_obstack_memory_used@@Base+0x5810>
  41c804:	ldr	x1, [sp, #112]
  41c808:	mov	x27, x0
  41c80c:	ldr	w1, [x1]
  41c810:	cmp	w1, #0x0
  41c814:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  41c818:	b.eq	41cdd8 <_obstack_memory_used@@Base+0xa188>  // b.none
  41c81c:	stp	x23, x24, [sp, #48]
  41c820:	mov	x2, x28
  41c824:	mov	x1, x21
  41c828:	mov	x0, x22
  41c82c:	bl	41c050 <_obstack_memory_used@@Base+0x9400>
  41c830:	ldr	x23, [x21, #72]
  41c834:	ldrb	w1, [x22, #8]
  41c838:	cmp	w1, #0x12
  41c83c:	sub	w2, w1, #0x12
  41c840:	cset	w19, eq  // eq = none
  41c844:	add	x23, x23, w0, sxtw
  41c848:	cmp	w1, #0x17
  41c84c:	str	x23, [x21, #72]
  41c850:	and	w2, w2, #0xff
  41c854:	ccmp	w1, #0xb, #0x4, ne  // ne = any
  41c858:	ccmp	w2, #0x1, #0x0, ne  // ne = any
  41c85c:	b.hi	41cea0 <_obstack_memory_used@@Base+0xa250>  // b.pmore
  41c860:	adrp	x0, 412000 <wcrtomb@plt+0xf2c0>
  41c864:	add	x0, x0, #0xe48
  41c868:	str	x0, [sp, #120]
  41c86c:	nop
  41c870:	cmp	w1, #0x17
  41c874:	ldp	x24, x25, [x22]
  41c878:	b.eq	41c9cc <_obstack_memory_used@@Base+0x9d7c>  // b.none
  41c87c:	cmp	w1, #0x13
  41c880:	mov	x2, x28
  41c884:	mov	x1, x21
  41c888:	mov	x0, x22
  41c88c:	mov	x20, #0xffffffffffffffff    	// #-1
  41c890:	cneg	x20, x20, eq  // eq = none
  41c894:	bl	41c050 <_obstack_memory_used@@Base+0x9400>
  41c898:	ldr	x1, [x21, #72]
  41c89c:	add	x0, x1, w0, sxtw
  41c8a0:	str	x0, [x21, #72]
  41c8a4:	cbz	x27, 41cac4 <_obstack_memory_used@@Base+0x9e74>
  41c8a8:	cbnz	w19, 41ce70 <_obstack_memory_used@@Base+0xa220>
  41c8ac:	mov	x25, x27
  41c8b0:	mov	x19, #0x0                   	// #0
  41c8b4:	str	xzr, [sp, #104]
  41c8b8:	ldrb	w0, [x25, #48]
  41c8bc:	cmp	w0, #0x11
  41c8c0:	b.eq	41ca74 <_obstack_memory_used@@Base+0x9e24>  // b.none
  41c8c4:	cmn	x20, #0x1
  41c8c8:	mov	x2, x25
  41c8cc:	cset	w6, eq  // eq = none
  41c8d0:	add	x23, x26, #0x70
  41c8d4:	add	w6, w6, #0xa
  41c8d8:	add	x24, x26, #0x80
  41c8dc:	stp	xzr, xzr, [sp, #240]
  41c8e0:	mov	x0, x23
  41c8e4:	mov	x1, x24
  41c8e8:	add	x4, sp, #0xf0
  41c8ec:	mov	x3, #0x0                   	// #0
  41c8f0:	strb	w6, [sp, #248]
  41c8f4:	bl	415470 <_obstack_memory_used@@Base+0x2820>
  41c8f8:	mov	x2, x0
  41c8fc:	cbz	x0, 41c984 <_obstack_memory_used@@Base+0x9d34>
  41c900:	add	x19, x19, #0x2
  41c904:	cmp	x19, x20
  41c908:	b.gt	41ca88 <_obstack_memory_used@@Base+0x9e38>
  41c90c:	mov	x0, x25
  41c910:	mov	x1, x26
  41c914:	str	x2, [sp, #96]
  41c918:	bl	415550 <_obstack_memory_used@@Base+0x2900>
  41c91c:	ldr	x2, [sp, #96]
  41c920:	mov	w5, #0x10                  	// #16
  41c924:	stp	xzr, xzr, [sp, #240]
  41c928:	mov	x3, x0
  41c92c:	mov	x25, x0
  41c930:	add	x4, sp, #0xf0
  41c934:	mov	x1, x24
  41c938:	mov	x0, x23
  41c93c:	strb	w5, [sp, #248]
  41c940:	bl	415470 <_obstack_memory_used@@Base+0x2820>
  41c944:	mov	x2, x0
  41c948:	cmp	x25, #0x0
  41c94c:	add	x19, x19, #0x1
  41c950:	add	x4, sp, #0xf0
  41c954:	mov	x1, x24
  41c958:	mov	x0, x23
  41c95c:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  41c960:	mov	x3, #0x0                   	// #0
  41c964:	b.eq	41c984 <_obstack_memory_used@@Base+0x9d34>  // b.none
  41c968:	mov	w5, #0xa                   	// #10
  41c96c:	stp	xzr, xzr, [sp, #240]
  41c970:	strb	w5, [sp, #248]
  41c974:	bl	415470 <_obstack_memory_used@@Base+0x2820>
  41c978:	cmp	x19, x20
  41c97c:	mov	x2, x0
  41c980:	cbnz	x0, 41c908 <_obstack_memory_used@@Base+0x9cb8>
  41c984:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x13b0>
  41c988:	add	x19, x1, #0x78
  41c98c:	ldr	x1, [sp, #112]
  41c990:	mov	w0, #0xc                   	// #12
  41c994:	str	w0, [x1]
  41c998:	mov	x0, x27
  41c99c:	mov	x1, x19
  41c9a0:	mov	x2, #0x0                   	// #0
  41c9a4:	bl	413118 <_obstack_memory_used@@Base+0x4c8>
  41c9a8:	ldp	x23, x24, [sp, #48]
  41c9ac:	mov	x27, #0x0                   	// #0
  41c9b0:	mov	x0, x27
  41c9b4:	ldp	x19, x20, [sp, #16]
  41c9b8:	ldp	x21, x22, [sp, #32]
  41c9bc:	ldp	x25, x26, [sp, #64]
  41c9c0:	ldp	x27, x28, [sp, #80]
  41c9c4:	ldp	x29, x30, [sp], #272
  41c9c8:	ret
  41c9cc:	mov	x2, x28
  41c9d0:	mov	x1, x22
  41c9d4:	mov	x0, x21
  41c9d8:	bl	41c6b8 <_obstack_memory_used@@Base+0x9a68>
  41c9dc:	mov	x19, x0
  41c9e0:	cmn	x0, #0x1
  41c9e4:	b.eq	41cbec <_obstack_memory_used@@Base+0x9f9c>  // b.none
  41c9e8:	cmn	x0, #0x2
  41c9ec:	b.eq	41ca04 <_obstack_memory_used@@Base+0x9db4>  // b.none
  41c9f0:	ldrb	w0, [x22, #8]
  41c9f4:	cmp	w0, #0x18
  41c9f8:	b.eq	41cca8 <_obstack_memory_used@@Base+0xa058>  // b.none
  41c9fc:	cmp	w0, #0x1
  41ca00:	b.eq	41ccd8 <_obstack_memory_used@@Base+0xa088>  // b.none
  41ca04:	tbz	w28, #21, 41d68c <_obstack_memory_used@@Base+0xaa3c>
  41ca08:	str	x23, [x21, #72]
  41ca0c:	mov	w1, #0x1                   	// #1
  41ca10:	stp	x24, x25, [x22]
  41ca14:	mov	x0, x27
  41ca18:	strb	w1, [x22, #8]
  41ca1c:	ldr	x1, [sp, #112]
  41ca20:	ldr	w1, [x1]
  41ca24:	cbnz	w1, 41cee0 <_obstack_memory_used@@Base+0xa290>
  41ca28:	mov	x27, x0
  41ca2c:	ldrb	w1, [x22, #8]
  41ca30:	cmp	w1, #0xb
  41ca34:	cset	w2, eq  // eq = none
  41ca38:	cmp	w1, #0x17
  41ca3c:	cset	w3, eq  // eq = none
  41ca40:	tbz	w28, #24, 41ca50 <_obstack_memory_used@@Base+0x9e00>
  41ca44:	cmp	w3, #0x0
  41ca48:	ccmp	w2, #0x0, #0x0, eq  // eq = none
  41ca4c:	b.ne	41cd08 <_obstack_memory_used@@Base+0xa0b8>  // b.any
  41ca50:	subs	w0, w1, #0x12
  41ca54:	cset	w19, eq  // eq = none
  41ca58:	cmp	w3, #0x0
  41ca5c:	ccmp	w2, #0x0, #0x0, eq  // eq = none
  41ca60:	and	w0, w0, #0xff
  41ca64:	ccmp	w0, #0x1, #0x0, eq  // eq = none
  41ca68:	b.hi	41cea0 <_obstack_memory_used@@Base+0xa250>  // b.pmore
  41ca6c:	ldr	x23, [x21, #72]
  41ca70:	b	41c870 <_obstack_memory_used@@Base+0x9c20>
  41ca74:	ldr	x2, [x25, #40]
  41ca78:	mov	x0, x25
  41ca7c:	ldr	x1, [sp, #120]
  41ca80:	bl	413118 <_obstack_memory_used@@Base+0x4c8>
  41ca84:	b	41c8c4 <_obstack_memory_used@@Base+0x9c74>
  41ca88:	ldr	x0, [sp, #104]
  41ca8c:	cbz	x0, 41cd00 <_obstack_memory_used@@Base+0xa0b0>
  41ca90:	mov	w5, #0x10                  	// #16
  41ca94:	stp	xzr, xzr, [sp, #240]
  41ca98:	mov	x3, x2
  41ca9c:	mov	x1, x24
  41caa0:	mov	x2, x0
  41caa4:	add	x4, sp, #0xf0
  41caa8:	mov	x0, x23
  41caac:	strb	w5, [sp, #248]
  41cab0:	bl	415470 <_obstack_memory_used@@Base+0x2820>
  41cab4:	ldr	x1, [sp, #112]
  41cab8:	ldr	w1, [x1]
  41cabc:	cbz	w1, 41ca28 <_obstack_memory_used@@Base+0x9dd8>
  41cac0:	b	41cee0 <_obstack_memory_used@@Base+0xa290>
  41cac4:	ldr	x0, [sp, #112]
  41cac8:	ldr	w0, [x0]
  41cacc:	cbnz	w0, 41ced4 <_obstack_memory_used@@Base+0xa284>
  41cad0:	mov	x27, #0x0                   	// #0
  41cad4:	b	41ca2c <_obstack_memory_used@@Base+0x9ddc>
  41cad8:	cmp	w2, #0x14
  41cadc:	b.eq	41d09c <_obstack_memory_used@@Base+0xa44c>  // b.none
  41cae0:	b.ls	41cae8 <_obstack_memory_used@@Base+0x9e98>  // b.plast
  41cae4:	tbnz	w3, #24, 41cd10 <_obstack_memory_used@@Base+0xa0c0>
  41cae8:	tbnz	w28, #5, 41cd10 <_obstack_memory_used@@Base+0xa0c0>
  41caec:	tbnz	w28, #4, 41d364 <_obstack_memory_used@@Base+0xa714>
  41caf0:	cmp	w2, #0x9
  41caf4:	b.eq	41d1d0 <_obstack_memory_used@@Base+0xa580>  // b.none
  41caf8:	mov	w0, #0x1                   	// #1
  41cafc:	strb	w0, [x22, #8]
  41cb00:	mov	x4, x22
  41cb04:	add	x1, x26, #0x80
  41cb08:	add	x0, x26, #0x70
  41cb0c:	mov	x3, #0x0                   	// #0
  41cb10:	mov	x2, #0x0                   	// #0
  41cb14:	bl	415470 <_obstack_memory_used@@Base+0x2820>
  41cb18:	mov	x27, x0
  41cb1c:	cbnz	x0, 41c81c <_obstack_memory_used@@Base+0x9bcc>
  41cb20:	ldr	x1, [sp, #112]
  41cb24:	mov	w0, #0xc                   	// #12
  41cb28:	mov	x27, #0x0                   	// #0
  41cb2c:	str	w0, [x1]
  41cb30:	b	41c9b0 <_obstack_memory_used@@Base+0x9d60>
  41cb34:	cmp	w2, #0x5
  41cb38:	b.eq	41cee8 <_obstack_memory_used@@Base+0xa298>  // b.none
  41cb3c:	b.ls	41cb74 <_obstack_memory_used@@Base+0x9f24>  // b.plast
  41cb40:	cmp	w2, #0x9
  41cb44:	b.eq	41d1d0 <_obstack_memory_used@@Base+0xa580>  // b.none
  41cb48:	b.ls	41cd3c <_obstack_memory_used@@Base+0xa0ec>  // b.plast
  41cb4c:	cmp	w2, #0xa
  41cb50:	mov	x27, #0x0                   	// #0
  41cb54:	b.ne	41cae8 <_obstack_memory_used@@Base+0x9e98>  // b.any
  41cb58:	mov	x0, x27
  41cb5c:	ldp	x19, x20, [sp, #16]
  41cb60:	ldp	x21, x22, [sp, #32]
  41cb64:	ldp	x25, x26, [sp, #64]
  41cb68:	ldp	x27, x28, [sp, #80]
  41cb6c:	ldp	x29, x30, [sp], #272
  41cb70:	ret
  41cb74:	cmp	w2, #0x2
  41cb78:	b.eq	41cdd8 <_obstack_memory_used@@Base+0xa188>  // b.none
  41cb7c:	cmp	w2, #0x4
  41cb80:	b.ne	41d8d0 <_obstack_memory_used@@Base+0xac80>  // b.any
  41cb84:	ldr	x2, [x22]
  41cb88:	mov	w0, #0x1                   	// #1
  41cb8c:	ldr	x1, [x26, #168]
  41cb90:	lsl	w0, w0, w2
  41cb94:	sxtw	x0, w0
  41cb98:	tst	x0, x1
  41cb9c:	b.eq	41d284 <_obstack_memory_used@@Base+0xa634>  // b.none
  41cba0:	ldr	x1, [x26, #160]
  41cba4:	mov	x4, x22
  41cba8:	mov	x3, #0x0                   	// #0
  41cbac:	mov	x2, #0x0                   	// #0
  41cbb0:	orr	x0, x1, x0
  41cbb4:	str	x0, [x26, #160]
  41cbb8:	add	x1, x26, #0x80
  41cbbc:	add	x0, x26, #0x70
  41cbc0:	bl	415470 <_obstack_memory_used@@Base+0x2820>
  41cbc4:	mov	x27, x0
  41cbc8:	cbz	x0, 41cb20 <_obstack_memory_used@@Base+0x9ed0>
  41cbcc:	ldr	x1, [x26, #152]
  41cbd0:	stp	x23, x24, [sp, #48]
  41cbd4:	ldrb	w0, [x26, #176]
  41cbd8:	add	x1, x1, #0x1
  41cbdc:	str	x1, [x26, #152]
  41cbe0:	orr	w0, w0, #0x2
  41cbe4:	strb	w0, [x26, #176]
  41cbe8:	b	41c820 <_obstack_memory_used@@Base+0x9bd0>
  41cbec:	ldrb	w0, [x22, #8]
  41cbf0:	cmp	w0, #0x1
  41cbf4:	b.ne	41cce8 <_obstack_memory_used@@Base+0xa098>  // b.any
  41cbf8:	ldrb	w0, [x22]
  41cbfc:	cmp	w0, #0x2c
  41cc00:	b.ne	41cce8 <_obstack_memory_used@@Base+0xa098>  // b.any
  41cc04:	mov	x19, #0x0                   	// #0
  41cc08:	mov	x2, x28
  41cc0c:	mov	x1, x22
  41cc10:	mov	x0, x21
  41cc14:	bl	41c6b8 <_obstack_memory_used@@Base+0x9a68>
  41cc18:	mov	x20, x0
  41cc1c:	cmn	x0, #0x2
  41cc20:	b.eq	41ca04 <_obstack_memory_used@@Base+0x9db4>  // b.none
  41cc24:	cmp	x19, x0
  41cc28:	ccmn	x0, #0x1, #0x4, gt
  41cc2c:	b.ne	41cce8 <_obstack_memory_used@@Base+0xa098>  // b.any
  41cc30:	ldrb	w0, [x22, #8]
  41cc34:	cmp	w0, #0x18
  41cc38:	b.ne	41cce8 <_obstack_memory_used@@Base+0xa098>  // b.any
  41cc3c:	cmn	x20, #0x1
  41cc40:	b.ne	41ccac <_obstack_memory_used@@Base+0xa05c>  // b.any
  41cc44:	mov	x0, #0x7fff                	// #32767
  41cc48:	cmp	x19, x0
  41cc4c:	cset	x0, gt
  41cc50:	cbnz	x0, 41ccbc <_obstack_memory_used@@Base+0xa06c>
  41cc54:	mov	x1, x21
  41cc58:	mov	x2, x28
  41cc5c:	mov	x0, x22
  41cc60:	bl	41c050 <_obstack_memory_used@@Base+0x9400>
  41cc64:	ldr	x1, [x21, #72]
  41cc68:	add	x0, x1, w0, sxtw
  41cc6c:	str	x0, [x21, #72]
  41cc70:	cbz	x27, 41cac4 <_obstack_memory_used@@Base+0x9e74>
  41cc74:	orr	x0, x19, x20
  41cc78:	cbnz	x0, 41cdf8 <_obstack_memory_used@@Base+0xa1a8>
  41cc7c:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x13b0>
  41cc80:	add	x19, x1, #0x78
  41cc84:	mov	x1, x19
  41cc88:	mov	x0, x27
  41cc8c:	mov	x2, #0x0                   	// #0
  41cc90:	bl	413118 <_obstack_memory_used@@Base+0x4c8>
  41cc94:	ldr	x0, [sp, #112]
  41cc98:	ldr	w0, [x0]
  41cc9c:	cbnz	w0, 41c998 <_obstack_memory_used@@Base+0x9d48>
  41cca0:	mov	x27, #0x0                   	// #0
  41cca4:	b	41ca2c <_obstack_memory_used@@Base+0x9ddc>
  41cca8:	mov	x20, x19
  41ccac:	mov	x0, #0x7fff                	// #32767
  41ccb0:	cmp	x20, x0
  41ccb4:	cset	x0, gt
  41ccb8:	cbz	x0, 41cc54 <_obstack_memory_used@@Base+0xa004>
  41ccbc:	ldr	x1, [sp, #112]
  41ccc0:	mov	w0, #0xf                   	// #15
  41ccc4:	str	w0, [x1]
  41ccc8:	cbz	x27, 41ced4 <_obstack_memory_used@@Base+0xa284>
  41cccc:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x13b0>
  41ccd0:	add	x19, x1, #0x78
  41ccd4:	b	41c998 <_obstack_memory_used@@Base+0x9d48>
  41ccd8:	ldrb	w0, [x22]
  41ccdc:	cmp	w0, #0x2c
  41cce0:	b.eq	41cc08 <_obstack_memory_used@@Base+0x9fb8>  // b.none
  41cce4:	tbnz	w28, #21, 41ca08 <_obstack_memory_used@@Base+0x9db8>
  41cce8:	ldr	x1, [sp, #112]
  41ccec:	mov	w0, #0xa                   	// #10
  41ccf0:	str	w0, [x1]
  41ccf4:	b	41ccc8 <_obstack_memory_used@@Base+0xa078>
  41ccf8:	ldr	x2, [sp, #104]
  41ccfc:	nop
  41cd00:	mov	x27, x2
  41cd04:	b	41ca2c <_obstack_memory_used@@Base+0x9ddc>
  41cd08:	cbnz	x27, 41cea8 <_obstack_memory_used@@Base+0xa258>
  41cd0c:	ldp	x23, x24, [sp, #48]
  41cd10:	mov	w0, #0xd                   	// #13
  41cd14:	ldr	x1, [sp, #112]
  41cd18:	mov	x27, #0x0                   	// #0
  41cd1c:	str	w0, [x1]
  41cd20:	mov	x0, x27
  41cd24:	ldp	x19, x20, [sp, #16]
  41cd28:	ldp	x21, x22, [sp, #32]
  41cd2c:	ldp	x25, x26, [sp, #64]
  41cd30:	ldp	x27, x28, [sp, #80]
  41cd34:	ldp	x29, x30, [sp], #272
  41cd38:	ret
  41cd3c:	ldr	x20, [x19, #48]
  41cd40:	orr	x2, x3, #0x800000
  41cd44:	mov	x1, x0
  41cd48:	mov	x0, x22
  41cd4c:	add	x3, x20, #0x1
  41cd50:	str	x3, [x19, #48]
  41cd54:	str	x4, [sp, #96]
  41cd58:	bl	41c050 <_obstack_memory_used@@Base+0x9400>
  41cd5c:	ldr	x3, [x21, #72]
  41cd60:	mov	x2, #0x0                   	// #0
  41cd64:	ldrb	w1, [x22, #8]
  41cd68:	add	x0, x3, w0, sxtw
  41cd6c:	str	x0, [x21, #72]
  41cd70:	cmp	w1, #0x9
  41cd74:	b.eq	41d060 <_obstack_memory_used@@Base+0xa410>  // b.none
  41cd78:	mov	x1, x19
  41cd7c:	mov	x2, x22
  41cd80:	ldr	x4, [sp, #96]
  41cd84:	mov	x3, x28
  41cd88:	ldr	x19, [sp, #112]
  41cd8c:	mov	x0, x21
  41cd90:	add	x4, x4, #0x1
  41cd94:	mov	x5, x19
  41cd98:	bl	41dc48 <_obstack_memory_used@@Base+0xaff8>
  41cd9c:	ldr	w1, [x19]
  41cda0:	mov	x2, x0
  41cda4:	cbnz	w1, 41cdd8 <_obstack_memory_used@@Base+0xa188>
  41cda8:	ldrb	w0, [x22, #8]
  41cdac:	cmp	w0, #0x9
  41cdb0:	b.eq	41d060 <_obstack_memory_used@@Base+0xa410>  // b.none
  41cdb4:	cbz	x2, 41cdcc <_obstack_memory_used@@Base+0xa17c>
  41cdb8:	mov	x0, x2
  41cdbc:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x13b0>
  41cdc0:	mov	x2, #0x0                   	// #0
  41cdc4:	add	x1, x1, #0x78
  41cdc8:	bl	413118 <_obstack_memory_used@@Base+0x4c8>
  41cdcc:	ldr	x1, [sp, #112]
  41cdd0:	mov	w0, #0x8                   	// #8
  41cdd4:	str	w0, [x1]
  41cdd8:	mov	x27, #0x0                   	// #0
  41cddc:	mov	x0, x27
  41cde0:	ldp	x19, x20, [sp, #16]
  41cde4:	ldp	x21, x22, [sp, #32]
  41cde8:	ldp	x25, x26, [sp, #64]
  41cdec:	ldp	x27, x28, [sp, #80]
  41cdf0:	ldp	x29, x30, [sp], #272
  41cdf4:	ret
  41cdf8:	cmp	x19, #0x0
  41cdfc:	b.le	41d8c4 <_obstack_memory_used@@Base+0xac74>
  41ce00:	cmp	x19, #0x1
  41ce04:	b.eq	41d8b8 <_obstack_memory_used@@Base+0xac68>  // b.none
  41ce08:	add	x0, x26, #0x70
  41ce0c:	add	x24, x26, #0x80
  41ce10:	mov	x25, x27
  41ce14:	mov	x23, #0x2                   	// #2
  41ce18:	stp	x0, x27, [sp, #96]
  41ce1c:	b	41ce28 <_obstack_memory_used@@Base+0xa1d8>
  41ce20:	cmp	x23, x19
  41ce24:	b.gt	41ce80 <_obstack_memory_used@@Base+0xa230>
  41ce28:	mov	x0, x25
  41ce2c:	mov	x1, x26
  41ce30:	bl	415550 <_obstack_memory_used@@Base+0x2900>
  41ce34:	mov	x25, x0
  41ce38:	mov	x3, x0
  41ce3c:	mov	w5, #0x10                  	// #16
  41ce40:	ldp	x0, x2, [sp, #96]
  41ce44:	stp	xzr, xzr, [sp, #240]
  41ce48:	add	x4, sp, #0xf0
  41ce4c:	mov	x1, x24
  41ce50:	strb	w5, [sp, #248]
  41ce54:	add	x23, x23, #0x1
  41ce58:	bl	415470 <_obstack_memory_used@@Base+0x2820>
  41ce5c:	str	x0, [sp, #104]
  41ce60:	cmp	x25, #0x0
  41ce64:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  41ce68:	b.ne	41ce20 <_obstack_memory_used@@Base+0xa1d0>  // b.any
  41ce6c:	b	41c984 <_obstack_memory_used@@Base+0x9d34>
  41ce70:	mov	x25, x27
  41ce74:	mov	x19, #0x1                   	// #1
  41ce78:	str	x27, [sp, #104]
  41ce7c:	nop
  41ce80:	cmp	x20, x19
  41ce84:	b.eq	41ccf8 <_obstack_memory_used@@Base+0xa0a8>  // b.none
  41ce88:	mov	x0, x25
  41ce8c:	mov	x1, x26
  41ce90:	bl	415550 <_obstack_memory_used@@Base+0x2900>
  41ce94:	mov	x25, x0
  41ce98:	cbnz	x0, 41c8b8 <_obstack_memory_used@@Base+0x9c68>
  41ce9c:	b	41c984 <_obstack_memory_used@@Base+0x9d34>
  41cea0:	ldp	x23, x24, [sp, #48]
  41cea4:	b	41c9b0 <_obstack_memory_used@@Base+0x9d60>
  41cea8:	mov	x0, x27
  41ceac:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x13b0>
  41ceb0:	mov	x2, #0x0                   	// #0
  41ceb4:	add	x1, x1, #0x78
  41ceb8:	bl	413118 <_obstack_memory_used@@Base+0x4c8>
  41cebc:	mov	x27, #0x0                   	// #0
  41cec0:	ldr	x1, [sp, #112]
  41cec4:	mov	w0, #0xd                   	// #13
  41cec8:	ldp	x23, x24, [sp, #48]
  41cecc:	str	w0, [x1]
  41ced0:	b	41cd20 <_obstack_memory_used@@Base+0xa0d0>
  41ced4:	mov	x27, #0x0                   	// #0
  41ced8:	ldp	x23, x24, [sp, #48]
  41cedc:	b	41cddc <_obstack_memory_used@@Base+0xa18c>
  41cee0:	cbnz	x0, 41ca28 <_obstack_memory_used@@Base+0x9dd8>
  41cee4:	b	41ccc8 <_obstack_memory_used@@Base+0xa078>
  41cee8:	mov	x4, x22
  41ceec:	add	x1, x26, #0x80
  41cef0:	add	x0, x26, #0x70
  41cef4:	mov	x3, #0x0                   	// #0
  41cef8:	mov	x2, #0x0                   	// #0
  41cefc:	bl	415470 <_obstack_memory_used@@Base+0x2820>
  41cf00:	mov	x27, x0
  41cf04:	cbz	x0, 41cb20 <_obstack_memory_used@@Base+0x9ed0>
  41cf08:	ldr	w0, [x26, #180]
  41cf0c:	stp	x23, x24, [sp, #48]
  41cf10:	cmp	w0, #0x1
  41cf14:	b.le	41c820 <_obstack_memory_used@@Base+0x9bd0>
  41cf18:	ldrb	w0, [x26, #176]
  41cf1c:	orr	w0, w0, #0x2
  41cf20:	strb	w0, [x26, #176]
  41cf24:	b	41c820 <_obstack_memory_used@@Base+0x9bd0>
  41cf28:	stp	x23, x24, [sp, #48]
  41cf2c:	mov	w0, #0x30f                 	// #783
  41cf30:	ldr	w23, [x22]
  41cf34:	tst	w23, w0
  41cf38:	b.eq	41cf70 <_obstack_memory_used@@Base+0xa320>  // b.none
  41cf3c:	ldrb	w0, [x26, #176]
  41cf40:	tbnz	w0, #4, 41cf70 <_obstack_memory_used@@Base+0xa320>
  41cf44:	orr	w0, w0, #0x10
  41cf48:	strb	w0, [x26, #176]
  41cf4c:	mov	w1, w0
  41cf50:	tbnz	w0, #3, 41d8a4 <_obstack_memory_used@@Base+0xac54>
  41cf54:	mov	x0, #0x7fffffe07fffffe     	// #576460743847706622
  41cf58:	mov	x2, #0x3ff000000000000     	// #287948901175001088
  41cf5c:	movk	x0, #0x87ff, lsl #16
  41cf60:	stp	x2, x0, [x26, #184]
  41cf64:	tbz	w1, #2, 41d834 <_obstack_memory_used@@Base+0xabe4>
  41cf68:	stp	xzr, xzr, [x26, #200]
  41cf6c:	ldr	w23, [x22]
  41cf70:	sub	w0, w23, #0x100
  41cf74:	add	x24, x26, #0x70
  41cf78:	tst	w0, #0xfffffeff
  41cf7c:	add	x26, x26, #0x80
  41cf80:	b.ne	41d204 <_obstack_memory_used@@Base+0xa5b4>  // b.any
  41cf84:	cmp	w23, #0x100
  41cf88:	b.eq	41d48c <_obstack_memory_used@@Base+0xa83c>  // b.none
  41cf8c:	mov	w0, #0x5                   	// #5
  41cf90:	str	w0, [x22]
  41cf94:	mov	x1, x26
  41cf98:	mov	x4, x22
  41cf9c:	mov	x0, x24
  41cfa0:	mov	x3, #0x0                   	// #0
  41cfa4:	mov	x2, #0x0                   	// #0
  41cfa8:	bl	415470 <_obstack_memory_used@@Base+0x2820>
  41cfac:	mov	x20, x0
  41cfb0:	mov	w1, #0xa                   	// #10
  41cfb4:	str	w1, [x22]
  41cfb8:	mov	x4, x22
  41cfbc:	mov	x1, x26
  41cfc0:	mov	x3, #0x0                   	// #0
  41cfc4:	mov	x2, #0x0                   	// #0
  41cfc8:	mov	x0, x24
  41cfcc:	bl	415470 <_obstack_memory_used@@Base+0x2820>
  41cfd0:	mov	w5, #0xa                   	// #10
  41cfd4:	mov	x19, x0
  41cfd8:	stp	xzr, xzr, [sp, #240]
  41cfdc:	mov	x1, x26
  41cfe0:	mov	x0, x24
  41cfe4:	mov	x3, x19
  41cfe8:	add	x4, sp, #0xf0
  41cfec:	mov	x2, x20
  41cff0:	strb	w5, [sp, #248]
  41cff4:	bl	415470 <_obstack_memory_used@@Base+0x2820>
  41cff8:	mov	x27, x0
  41cffc:	cmp	x20, #0x0
  41d000:	ccmp	x19, #0x0, #0x4, ne  // ne = any
  41d004:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  41d008:	b.eq	41d224 <_obstack_memory_used@@Base+0xa5d4>  // b.none
  41d00c:	mov	x1, x21
  41d010:	mov	x2, x28
  41d014:	mov	x0, x22
  41d018:	bl	41c050 <_obstack_memory_used@@Base+0x9400>
  41d01c:	ldr	x1, [x21, #72]
  41d020:	ldp	x23, x24, [sp, #48]
  41d024:	add	x0, x1, w0, sxtw
  41d028:	str	x0, [x21, #72]
  41d02c:	b	41c9b0 <_obstack_memory_used@@Base+0x9d60>
  41d030:	ldr	x1, [sp, #112]
  41d034:	mov	w0, #0x5                   	// #5
  41d038:	mov	x27, #0x0                   	// #0
  41d03c:	str	w0, [x1]
  41d040:	b	41c9b0 <_obstack_memory_used@@Base+0x9d60>
  41d044:	cmp	w2, #0x23
  41d048:	adrp	x3, 420000 <_obstack_memory_used@@Base+0xd3b0>
  41d04c:	adrp	x2, 421000 <_obstack_memory_used@@Base+0xe3b0>
  41d050:	cset	w4, eq  // eq = none
  41d054:	add	x3, x3, #0x7d8
  41d058:	add	x2, x2, #0x5b8
  41d05c:	b	41c7fc <_obstack_memory_used@@Base+0x9bac>
  41d060:	cmp	x20, #0x8
  41d064:	b.ls	41d1e8 <_obstack_memory_used@@Base+0xa598>  // b.plast
  41d068:	mov	w5, #0x11                  	// #17
  41d06c:	stp	xzr, xzr, [sp, #240]
  41d070:	add	x4, sp, #0xf0
  41d074:	add	x1, x26, #0x80
  41d078:	add	x0, x26, #0x70
  41d07c:	mov	x3, #0x0                   	// #0
  41d080:	strb	w5, [sp, #248]
  41d084:	bl	415470 <_obstack_memory_used@@Base+0x2820>
  41d088:	mov	x27, x0
  41d08c:	cbz	x0, 41cb20 <_obstack_memory_used@@Base+0x9ed0>
  41d090:	stp	x23, x24, [sp, #48]
  41d094:	str	x20, [x0, #40]
  41d098:	b	41c820 <_obstack_memory_used@@Base+0x9bd0>
  41d09c:	mov	x1, #0x1                   	// #1
  41d0a0:	mov	x0, #0x20                  	// #32
  41d0a4:	str	xzr, [sp, #152]
  41d0a8:	bl	402910 <calloc@plt>
  41d0ac:	mov	x1, #0x1                   	// #1
  41d0b0:	mov	x19, x0
  41d0b4:	mov	x0, #0x50                  	// #80
  41d0b8:	bl	402910 <calloc@plt>
  41d0bc:	cmp	x19, #0x0
  41d0c0:	mov	x20, x0
  41d0c4:	cset	w0, eq  // eq = none
  41d0c8:	cmp	x20, #0x0
  41d0cc:	csinc	w0, w0, wzr, ne  // ne = any
  41d0d0:	cbnz	w0, 41d6a8 <_obstack_memory_used@@Base+0xaa58>
  41d0d4:	mov	x1, x21
  41d0d8:	mov	x2, x28
  41d0dc:	mov	x0, x22
  41d0e0:	bl	412cd8 <_obstack_memory_used@@Base+0x88>
  41d0e4:	ldrb	w1, [x22, #8]
  41d0e8:	mov	w27, w0
  41d0ec:	cmp	w1, #0x2
  41d0f0:	b.eq	41d67c <_obstack_memory_used@@Base+0xaa2c>  // b.none
  41d0f4:	str	wzr, [sp, #120]
  41d0f8:	cmp	w1, #0x19
  41d0fc:	b.eq	41d22c <_obstack_memory_used@@Base+0xa5dc>  // b.none
  41d100:	stp	x23, x24, [sp, #48]
  41d104:	cmp	w1, #0x15
  41d108:	b.ne	41d114 <_obstack_memory_used@@Base+0xa4c4>  // b.any
  41d10c:	mov	w0, #0x1                   	// #1
  41d110:	strb	w0, [x22, #8]
  41d114:	add	x23, sp, #0xd0
  41d118:	mov	w5, #0x1                   	// #1
  41d11c:	mov	w24, #0x3                   	// #3
  41d120:	stp	xzr, xzr, [sp, #96]
  41d124:	mov	w3, w27
  41d128:	mov	x4, x28
  41d12c:	mov	x2, x22
  41d130:	mov	x1, x21
  41d134:	add	x0, sp, #0xa0
  41d138:	str	w24, [sp, #160]
  41d13c:	str	x23, [sp, #168]
  41d140:	bl	41be10 <_obstack_memory_used@@Base+0x91c0>
  41d144:	cbnz	w0, 41d47c <_obstack_memory_used@@Base+0xa82c>
  41d148:	mov	x1, x21
  41d14c:	mov	x2, x28
  41d150:	mov	x0, x22
  41d154:	bl	412cd8 <_obstack_memory_used@@Base+0x88>
  41d158:	ldr	w1, [sp, #160]
  41d15c:	mov	w27, w0
  41d160:	sub	w0, w1, #0x2
  41d164:	tst	w0, #0xfffffffd
  41d168:	b.eq	41d180 <_obstack_memory_used@@Base+0xa530>  // b.none
  41d16c:	ldrb	w0, [x22, #8]
  41d170:	cmp	w0, #0x2
  41d174:	b.eq	41d350 <_obstack_memory_used@@Base+0xa700>  // b.none
  41d178:	cmp	w0, #0x16
  41d17c:	b.eq	41d4bc <_obstack_memory_used@@Base+0xa86c>  // b.none
  41d180:	cmp	w1, #0x2
  41d184:	b.eq	41d314 <_obstack_memory_used@@Base+0xa6c4>  // b.none
  41d188:	b.hi	41d298 <_obstack_memory_used@@Base+0xa648>  // b.pmore
  41d18c:	cbz	w1, 41d330 <_obstack_memory_used@@Base+0xa6e0>
  41d190:	ldr	x1, [x20, #40]
  41d194:	ldr	x2, [sp, #96]
  41d198:	ldr	x0, [x20]
  41d19c:	cmp	x1, x2
  41d1a0:	b.eq	41d750 <_obstack_memory_used@@Base+0xab00>  // b.none
  41d1a4:	add	x2, x1, #0x1
  41d1a8:	str	x2, [x20, #40]
  41d1ac:	ldr	w2, [sp, #168]
  41d1b0:	str	w2, [x0, x1, lsl #2]
  41d1b4:	ldrb	w0, [x22, #8]
  41d1b8:	cmp	w0, #0x2
  41d1bc:	b.eq	41d350 <_obstack_memory_used@@Base+0xa700>  // b.none
  41d1c0:	cmp	w0, #0x15
  41d1c4:	b.eq	41d3ac <_obstack_memory_used@@Base+0xa75c>  // b.none
  41d1c8:	mov	w5, #0x0                   	// #0
  41d1cc:	b	41d124 <_obstack_memory_used@@Base+0xa4d4>
  41d1d0:	tbnz	w28, #17, 41caf8 <_obstack_memory_used@@Base+0x9ea8>
  41d1d4:	ldr	x1, [sp, #112]
  41d1d8:	mov	w0, #0x10                  	// #16
  41d1dc:	mov	x27, #0x0                   	// #0
  41d1e0:	str	w0, [x1]
  41d1e4:	b	41c9b0 <_obstack_memory_used@@Base+0x9d60>
  41d1e8:	mov	w0, #0x1                   	// #1
  41d1ec:	ldr	x1, [x26, #168]
  41d1f0:	lsl	w0, w0, w20
  41d1f4:	sxtw	x0, w0
  41d1f8:	orr	x0, x1, x0
  41d1fc:	str	x0, [x26, #168]
  41d200:	b	41d068 <_obstack_memory_used@@Base+0xa418>
  41d204:	mov	x1, x26
  41d208:	mov	x0, x24
  41d20c:	mov	x4, x22
  41d210:	mov	x3, #0x0                   	// #0
  41d214:	mov	x2, #0x0                   	// #0
  41d218:	bl	415470 <_obstack_memory_used@@Base+0x2820>
  41d21c:	mov	x27, x0
  41d220:	cbnz	x0, 41d00c <_obstack_memory_used@@Base+0xa3bc>
  41d224:	ldp	x23, x24, [sp, #48]
  41d228:	b	41cb20 <_obstack_memory_used@@Base+0x9ed0>
  41d22c:	ldrb	w0, [x20, #32]
  41d230:	orr	w0, w0, #0x1
  41d234:	strb	w0, [x20, #32]
  41d238:	tbz	w28, #8, 41d248 <_obstack_memory_used@@Base+0xa5f8>
  41d23c:	ldr	x0, [x19]
  41d240:	orr	x0, x0, #0x400
  41d244:	str	x0, [x19]
  41d248:	ldr	x3, [x21, #72]
  41d24c:	mov	x1, x21
  41d250:	mov	x2, x28
  41d254:	mov	x0, x22
  41d258:	add	x7, x3, w27, sxtw
  41d25c:	str	x7, [x21, #72]
  41d260:	bl	412cd8 <_obstack_memory_used@@Base+0x88>
  41d264:	mov	w27, w0
  41d268:	ldrb	w1, [x22, #8]
  41d26c:	cmp	w1, #0x2
  41d270:	b.eq	41d67c <_obstack_memory_used@@Base+0xaa2c>  // b.none
  41d274:	mov	w0, #0x1                   	// #1
  41d278:	stp	x23, x24, [sp, #48]
  41d27c:	str	w0, [sp, #120]
  41d280:	b	41d104 <_obstack_memory_used@@Base+0xa4b4>
  41d284:	ldr	x1, [sp, #112]
  41d288:	mov	w0, #0x6                   	// #6
  41d28c:	mov	x27, #0x0                   	// #0
  41d290:	str	w0, [x1]
  41d294:	b	41c9b0 <_obstack_memory_used@@Base+0x9d60>
  41d298:	cmp	w1, #0x3
  41d29c:	b.eq	41d2f8 <_obstack_memory_used@@Base+0xa6a8>  // b.none
  41d2a0:	ldr	x0, [x21, #120]
  41d2a4:	mov	x1, x19
  41d2a8:	ldr	x5, [sp, #168]
  41d2ac:	mov	x6, x28
  41d2b0:	add	x4, sp, #0x98
  41d2b4:	add	x3, x20, #0x48
  41d2b8:	add	x2, x20, #0x18
  41d2bc:	bl	417cd8 <_obstack_memory_used@@Base+0x5088>
  41d2c0:	ldr	x1, [sp, #112]
  41d2c4:	str	w0, [x1]
  41d2c8:	cbz	w0, 41d1b4 <_obstack_memory_used@@Base+0xa564>
  41d2cc:	ldp	x23, x24, [sp, #48]
  41d2d0:	mov	x0, x19
  41d2d4:	bl	402ae0 <free@plt>
  41d2d8:	mov	x0, x20
  41d2dc:	bl	414008 <_obstack_memory_used@@Base+0x13b8>
  41d2e0:	ldr	x0, [sp, #112]
  41d2e4:	ldr	w0, [x0]
  41d2e8:	cbnz	w0, 41cdd8 <_obstack_memory_used@@Base+0xa188>
  41d2ec:	mov	x27, #0x0                   	// #0
  41d2f0:	stp	x23, x24, [sp, #48]
  41d2f4:	b	41c820 <_obstack_memory_used@@Base+0x9bd0>
  41d2f8:	ldr	x1, [sp, #168]
  41d2fc:	mov	x0, x19
  41d300:	bl	417c78 <_obstack_memory_used@@Base+0x5028>
  41d304:	ldr	x1, [sp, #112]
  41d308:	str	w0, [x1]
  41d30c:	cbz	w0, 41d1b4 <_obstack_memory_used@@Base+0xa564>
  41d310:	b	41d2cc <_obstack_memory_used@@Base+0xa67c>
  41d314:	ldr	x1, [sp, #168]
  41d318:	mov	x0, x19
  41d31c:	bl	417c78 <_obstack_memory_used@@Base+0x5028>
  41d320:	ldr	x1, [sp, #112]
  41d324:	str	w0, [x1]
  41d328:	cbz	w0, 41d1b4 <_obstack_memory_used@@Base+0xa564>
  41d32c:	b	41d2cc <_obstack_memory_used@@Base+0xa67c>
  41d330:	ldrb	w1, [sp, #168]
  41d334:	mov	x0, #0x1                   	// #1
  41d338:	ubfx	x2, x1, #6, #2
  41d33c:	lsl	x1, x0, x1
  41d340:	ldr	x0, [x19, x2, lsl #3]
  41d344:	orr	x0, x0, x1
  41d348:	str	x0, [x19, x2, lsl #3]
  41d34c:	b	41d1b4 <_obstack_memory_used@@Base+0xa564>
  41d350:	ldr	x1, [sp, #112]
  41d354:	mov	w0, #0x7                   	// #7
  41d358:	ldp	x23, x24, [sp, #48]
  41d35c:	str	w0, [x1]
  41d360:	b	41d2d0 <_obstack_memory_used@@Base+0xa680>
  41d364:	mov	x2, x28
  41d368:	mov	x1, x21
  41d36c:	mov	x0, x22
  41d370:	str	x4, [sp, #96]
  41d374:	bl	41c050 <_obstack_memory_used@@Base+0x9400>
  41d378:	mov	w6, w0
  41d37c:	ldr	x7, [x21, #72]
  41d380:	mov	x3, x28
  41d384:	ldr	x4, [sp, #96]
  41d388:	mov	x2, x22
  41d38c:	ldr	x5, [sp, #112]
  41d390:	add	x6, x7, w6, sxtw
  41d394:	str	x6, [x21, #72]
  41d398:	mov	x1, x19
  41d39c:	mov	x0, x21
  41d3a0:	bl	41c788 <_obstack_memory_used@@Base+0x9b38>
  41d3a4:	mov	x27, x0
  41d3a8:	b	41c9b0 <_obstack_memory_used@@Base+0x9d60>
  41d3ac:	ldr	x0, [x21, #72]
  41d3b0:	add	x7, x0, w27, sxtw
  41d3b4:	ldr	w0, [sp, #120]
  41d3b8:	str	x7, [x21, #72]
  41d3bc:	cbz	w0, 41d3dc <_obstack_memory_used@@Base+0xa78c>
  41d3c0:	mov	x0, #0x0                   	// #0
  41d3c4:	ldr	x1, [x19, x0, lsl #3]
  41d3c8:	mvn	x1, x1
  41d3cc:	str	x1, [x19, x0, lsl #3]
  41d3d0:	add	x0, x0, #0x1
  41d3d4:	cmp	x0, #0x4
  41d3d8:	b.ne	41d3c4 <_obstack_memory_used@@Base+0xa774>  // b.any
  41d3dc:	ldr	w2, [x26, #180]
  41d3e0:	cmp	w2, #0x1
  41d3e4:	b.le	41d40c <_obstack_memory_used@@Base+0xa7bc>
  41d3e8:	ldr	x3, [x26, #120]
  41d3ec:	mov	x0, #0x0                   	// #0
  41d3f0:	ldr	x1, [x19, x0]
  41d3f4:	ldr	x4, [x3, x0]
  41d3f8:	and	x1, x1, x4
  41d3fc:	str	x1, [x19, x0]
  41d400:	add	x0, x0, #0x8
  41d404:	cmp	x0, #0x20
  41d408:	b.ne	41d3f0 <_obstack_memory_used@@Base+0xa7a0>  // b.any
  41d40c:	ldr	x0, [x20, #40]
  41d410:	cbnz	x0, 41d6ec <_obstack_memory_used@@Base+0xaa9c>
  41d414:	ldr	x0, [x20, #48]
  41d418:	cbnz	x0, 41d6ec <_obstack_memory_used@@Base+0xaa9c>
  41d41c:	ldr	x0, [x20, #56]
  41d420:	cbnz	x0, 41d6ec <_obstack_memory_used@@Base+0xaa9c>
  41d424:	ldr	x0, [x20, #64]
  41d428:	cbnz	x0, 41d6ec <_obstack_memory_used@@Base+0xaa9c>
  41d42c:	cmp	w2, #0x1
  41d430:	b.le	41d444 <_obstack_memory_used@@Base+0xa7f4>
  41d434:	ldr	x0, [x20, #72]
  41d438:	cbnz	x0, 41d6ec <_obstack_memory_used@@Base+0xaa9c>
  41d43c:	ldrb	w0, [x20, #32]
  41d440:	tbnz	w0, #0, 41d6ec <_obstack_memory_used@@Base+0xaa9c>
  41d444:	mov	x0, x20
  41d448:	bl	414008 <_obstack_memory_used@@Base+0x13b8>
  41d44c:	mov	w5, #0x3                   	// #3
  41d450:	mov	x4, x23
  41d454:	add	x1, x26, #0x80
  41d458:	add	x0, x26, #0x70
  41d45c:	mov	x3, #0x0                   	// #0
  41d460:	mov	x2, #0x0                   	// #0
  41d464:	str	x19, [sp, #208]
  41d468:	strb	w5, [sp, #216]
  41d46c:	bl	415470 <_obstack_memory_used@@Base+0x2820>
  41d470:	mov	x27, x0
  41d474:	cbnz	x0, 41c820 <_obstack_memory_used@@Base+0x9bd0>
  41d478:	mov	w0, #0xc                   	// #12
  41d47c:	ldr	x1, [sp, #112]
  41d480:	ldp	x23, x24, [sp, #48]
  41d484:	str	w0, [x1]
  41d488:	b	41d2d0 <_obstack_memory_used@@Base+0xa680>
  41d48c:	mov	w0, #0x6                   	// #6
  41d490:	str	w0, [x22]
  41d494:	mov	x1, x26
  41d498:	mov	x4, x22
  41d49c:	mov	x0, x24
  41d4a0:	mov	x3, #0x0                   	// #0
  41d4a4:	mov	x2, #0x0                   	// #0
  41d4a8:	bl	415470 <_obstack_memory_used@@Base+0x2820>
  41d4ac:	mov	w1, #0x9                   	// #9
  41d4b0:	mov	x20, x0
  41d4b4:	str	w1, [x22]
  41d4b8:	b	41cfb8 <_obstack_memory_used@@Base+0xa368>
  41d4bc:	ldr	x3, [x21, #72]
  41d4c0:	mov	x1, x21
  41d4c4:	mov	x2, x28
  41d4c8:	add	x0, sp, #0xc0
  41d4cc:	add	x3, x3, w27, sxtw
  41d4d0:	str	x3, [x21, #72]
  41d4d4:	bl	412cd8 <_obstack_memory_used@@Base+0x88>
  41d4d8:	mov	w3, w0
  41d4dc:	ldrb	w1, [sp, #200]
  41d4e0:	cmp	w1, #0x2
  41d4e4:	b.eq	41d350 <_obstack_memory_used@@Base+0xa700>  // b.none
  41d4e8:	cmp	w1, #0x15
  41d4ec:	b.eq	41d6cc <_obstack_memory_used@@Base+0xaa7c>  // b.none
  41d4f0:	add	x6, sp, #0xf0
  41d4f4:	mov	x4, x28
  41d4f8:	add	x2, sp, #0xc0
  41d4fc:	mov	x1, x21
  41d500:	add	x0, sp, #0xb0
  41d504:	mov	w5, #0x1                   	// #1
  41d508:	str	w24, [sp, #176]
  41d50c:	str	x6, [sp, #184]
  41d510:	bl	41be10 <_obstack_memory_used@@Base+0x91c0>
  41d514:	cbnz	w0, 41d47c <_obstack_memory_used@@Base+0xa82c>
  41d518:	mov	x2, x28
  41d51c:	mov	x1, x21
  41d520:	mov	x0, x22
  41d524:	bl	412cd8 <_obstack_memory_used@@Base+0x88>
  41d528:	ldr	w1, [x26, #180]
  41d52c:	mov	w27, w0
  41d530:	ldr	w2, [sp, #160]
  41d534:	cmp	w1, #0x2
  41d538:	sub	w0, w2, #0x2
  41d53c:	csel	x25, x20, xzr, ge  // ge = tcont
  41d540:	tst	w0, #0xfffffffd
  41d544:	b.eq	41d820 <_obstack_memory_used@@Base+0xabd0>  // b.none
  41d548:	ldr	w1, [sp, #176]
  41d54c:	sub	w0, w1, #0x2
  41d550:	tst	w0, #0xfffffffd
  41d554:	b.eq	41d820 <_obstack_memory_used@@Base+0xabd0>  // b.none
  41d558:	cmp	w2, #0x3
  41d55c:	cset	w0, eq  // eq = none
  41d560:	str	w0, [sp, #128]
  41d564:	b.eq	41d9d8 <_obstack_memory_used@@Base+0xad88>  // b.none
  41d568:	cmp	w1, #0x3
  41d56c:	b.eq	41d9b0 <_obstack_memory_used@@Base+0xad60>  // b.none
  41d570:	cbnz	w2, 41d660 <_obstack_memory_used@@Base+0xaa10>
  41d574:	ldrb	w3, [sp, #168]
  41d578:	ldr	w0, [sp, #128]
  41d57c:	cmp	w2, #0x0
  41d580:	csinc	w0, w0, wzr, ne  // ne = any
  41d584:	cbz	w1, 41d8b0 <_obstack_memory_used@@Base+0xac60>
  41d588:	cmp	w1, #0x3
  41d58c:	b.ne	41d66c <_obstack_memory_used@@Base+0xaa1c>  // b.any
  41d590:	ldr	x2, [sp, #184]
  41d594:	ldrb	w4, [x2]
  41d598:	cbz	w0, 41d7fc <_obstack_memory_used@@Base+0xabac>
  41d59c:	cbz	x25, 41d808 <_obstack_memory_used@@Base+0xabb8>
  41d5a0:	mov	w0, w3
  41d5a4:	str	w4, [sp, #128]
  41d5a8:	bl	4029d0 <btowc@plt>
  41d5ac:	mov	w3, w0
  41d5b0:	ldr	w1, [sp, #176]
  41d5b4:	ldr	w4, [sp, #128]
  41d5b8:	cmp	w1, #0x0
  41d5bc:	ccmp	w1, #0x3, #0x4, ne  // ne = any
  41d5c0:	b.ne	41d674 <_obstack_memory_used@@Base+0xaa24>  // b.any
  41d5c4:	mov	w0, w4
  41d5c8:	str	w3, [sp, #128]
  41d5cc:	bl	4029d0 <btowc@plt>
  41d5d0:	mov	w4, w0
  41d5d4:	ldr	w3, [sp, #128]
  41d5d8:	cmn	w3, #0x1
  41d5dc:	ccmn	w4, #0x1, #0x4, ne  // ne = any
  41d5e0:	b.eq	41d78c <_obstack_memory_used@@Base+0xab3c>  // b.none
  41d5e4:	tst	x28, #0x10000
  41d5e8:	ccmp	w4, w3, #0x2, ne  // ne = any
  41d5ec:	b.cc	41d820 <_obstack_memory_used@@Base+0xabd0>  // b.lo, b.ul, b.last
  41d5f0:	cbz	x25, 41d61c <_obstack_memory_used@@Base+0xa9cc>
  41d5f4:	ldr	x0, [x25, #64]
  41d5f8:	ldr	x1, [sp, #104]
  41d5fc:	ldr	x2, [x25, #8]
  41d600:	cmp	x0, x1
  41d604:	b.eq	41da04 <_obstack_memory_used@@Base+0xadb4>  // b.none
  41d608:	ldr	x1, [x25, #16]
  41d60c:	str	w3, [x2, x0, lsl #2]
  41d610:	add	x2, x0, #0x1
  41d614:	str	x2, [x25, #64]
  41d618:	str	w4, [x1, x0, lsl #2]
  41d61c:	mov	x1, #0x0                   	// #0
  41d620:	mov	x6, #0x1                   	// #1
  41d624:	nop
  41d628:	cmp	w1, w3
  41d62c:	asr	x0, x1, #6
  41d630:	ccmp	w1, w4, #0x2, cs  // cs = hs, nlast
  41d634:	lsl	x5, x6, x1
  41d638:	add	x1, x1, #0x1
  41d63c:	b.hi	41d64c <_obstack_memory_used@@Base+0xa9fc>  // b.pmore
  41d640:	ldr	x2, [x19, x0, lsl #3]
  41d644:	orr	x2, x2, x5
  41d648:	str	x2, [x19, x0, lsl #3]
  41d64c:	cmp	x1, #0x100
  41d650:	b.ne	41d628 <_obstack_memory_used@@Base+0xa9d8>  // b.any
  41d654:	ldr	x0, [sp, #112]
  41d658:	str	wzr, [x0]
  41d65c:	b	41d1b4 <_obstack_memory_used@@Base+0xa564>
  41d660:	ldrb	w0, [sp, #128]
  41d664:	mov	w3, #0x0                   	// #0
  41d668:	cbz	w1, 41d8b0 <_obstack_memory_used@@Base+0xac60>
  41d66c:	cbnz	w0, 41da5c <_obstack_memory_used@@Base+0xae0c>
  41d670:	ldr	w3, [sp, #168]
  41d674:	ldr	w4, [sp, #184]
  41d678:	b	41d5d8 <_obstack_memory_used@@Base+0xa988>
  41d67c:	ldr	x1, [sp, #112]
  41d680:	mov	w0, #0x2                   	// #2
  41d684:	str	w0, [x1]
  41d688:	b	41d2d0 <_obstack_memory_used@@Base+0xa680>
  41d68c:	ldrb	w0, [x22, #8]
  41d690:	cmp	w0, #0x2
  41d694:	b.ne	41cce8 <_obstack_memory_used@@Base+0xa098>  // b.any
  41d698:	ldr	x1, [sp, #112]
  41d69c:	mov	w0, #0x9                   	// #9
  41d6a0:	str	w0, [x1]
  41d6a4:	b	41ccc8 <_obstack_memory_used@@Base+0xa078>
  41d6a8:	mov	x0, x19
  41d6ac:	bl	402ae0 <free@plt>
  41d6b0:	mov	x0, x20
  41d6b4:	bl	402ae0 <free@plt>
  41d6b8:	ldr	x1, [sp, #112]
  41d6bc:	mov	w0, #0xc                   	// #12
  41d6c0:	mov	x27, #0x0                   	// #0
  41d6c4:	str	w0, [x1]
  41d6c8:	b	41c9b0 <_obstack_memory_used@@Base+0x9d60>
  41d6cc:	ldr	x3, [x21, #72]
  41d6d0:	neg	w0, w27
  41d6d4:	mov	w2, #0x1                   	// #1
  41d6d8:	ldr	w1, [sp, #160]
  41d6dc:	add	x0, x3, w0, sxtw
  41d6e0:	str	x0, [x21, #72]
  41d6e4:	strb	w2, [x22, #8]
  41d6e8:	b	41d180 <_obstack_memory_used@@Base+0xa530>
  41d6ec:	ldrb	w1, [x26, #176]
  41d6f0:	mov	w5, #0x6                   	// #6
  41d6f4:	add	x24, x26, #0x70
  41d6f8:	add	x25, x26, #0x80
  41d6fc:	orr	w1, w1, #0x2
  41d700:	strb	w1, [x26, #176]
  41d704:	mov	x2, #0x0                   	// #0
  41d708:	mov	x0, x24
  41d70c:	mov	x1, x25
  41d710:	mov	x4, x23
  41d714:	mov	x3, #0x0                   	// #0
  41d718:	str	x20, [sp, #208]
  41d71c:	strb	w5, [sp, #216]
  41d720:	bl	415470 <_obstack_memory_used@@Base+0x2820>
  41d724:	mov	x2, #0x0                   	// #0
  41d728:	mov	x27, x0
  41d72c:	cbz	x0, 41d478 <_obstack_memory_used@@Base+0xa828>
  41d730:	ldr	x0, [x19, x2, lsl #3]
  41d734:	add	x2, x2, #0x1
  41d738:	cmp	x2, #0x4
  41d73c:	cbnz	x0, 41d7a0 <_obstack_memory_used@@Base+0xab50>
  41d740:	b.ne	41d730 <_obstack_memory_used@@Base+0xaae0>  // b.any
  41d744:	mov	x0, x19
  41d748:	bl	402ae0 <free@plt>
  41d74c:	b	41c820 <_obstack_memory_used@@Base+0x9bd0>
  41d750:	lsl	x1, x2, #1
  41d754:	add	x1, x1, #0x1
  41d758:	str	x1, [sp, #96]
  41d75c:	lsl	x1, x1, #2
  41d760:	bl	402930 <realloc@plt>
  41d764:	cbz	x0, 41d478 <_obstack_memory_used@@Base+0xa828>
  41d768:	str	x0, [x20]
  41d76c:	ldr	x1, [x20, #40]
  41d770:	b	41d1a4 <_obstack_memory_used@@Base+0xa554>
  41d774:	ldr	x0, [sp, #184]
  41d778:	stp	w2, w1, [sp, #136]
  41d77c:	bl	402690 <strlen@plt>
  41d780:	cmp	x0, #0x1
  41d784:	ldp	w2, w1, [sp, #136]
  41d788:	b.ls	41d9f8 <_obstack_memory_used@@Base+0xada8>  // b.plast
  41d78c:	ldr	x1, [sp, #112]
  41d790:	mov	w0, #0x3                   	// #3
  41d794:	ldp	x23, x24, [sp, #48]
  41d798:	str	w0, [x1]
  41d79c:	b	41d2d0 <_obstack_memory_used@@Base+0xa680>
  41d7a0:	mov	w5, #0x3                   	// #3
  41d7a4:	mov	x2, #0x0                   	// #0
  41d7a8:	mov	x4, x23
  41d7ac:	mov	x1, x25
  41d7b0:	mov	x0, x24
  41d7b4:	mov	x3, #0x0                   	// #0
  41d7b8:	str	x19, [sp, #208]
  41d7bc:	strb	w5, [sp, #216]
  41d7c0:	bl	415470 <_obstack_memory_used@@Base+0x2820>
  41d7c4:	mov	x2, x0
  41d7c8:	cbz	x0, 41d478 <_obstack_memory_used@@Base+0xa828>
  41d7cc:	mov	w5, #0xa                   	// #10
  41d7d0:	stp	xzr, xzr, [sp, #240]
  41d7d4:	mov	x3, x27
  41d7d8:	mov	x1, x25
  41d7dc:	mov	x0, x24
  41d7e0:	add	x4, sp, #0xf0
  41d7e4:	strb	w5, [sp, #248]
  41d7e8:	bl	415470 <_obstack_memory_used@@Base+0x2820>
  41d7ec:	mov	x27, x0
  41d7f0:	cbnz	x0, 41c820 <_obstack_memory_used@@Base+0x9bd0>
  41d7f4:	mov	w0, #0xc                   	// #12
  41d7f8:	b	41d47c <_obstack_memory_used@@Base+0xa82c>
  41d7fc:	ldr	w3, [sp, #168]
  41d800:	cbnz	x25, 41d5c4 <_obstack_memory_used@@Base+0xa974>
  41d804:	b	41d5d8 <_obstack_memory_used@@Base+0xa988>
  41d808:	cmp	w1, #0x0
  41d80c:	ccmp	w1, #0x3, #0x4, ne  // ne = any
  41d810:	b.ne	41d674 <_obstack_memory_used@@Base+0xaa24>  // b.any
  41d814:	tst	x28, #0x10000
  41d818:	ccmp	w4, w3, #0x2, ne  // ne = any
  41d81c:	b.cs	41d61c <_obstack_memory_used@@Base+0xa9cc>  // b.hs, b.nlast
  41d820:	ldr	x1, [sp, #112]
  41d824:	mov	w0, #0xb                   	// #11
  41d828:	ldp	x23, x24, [sp, #48]
  41d82c:	str	w0, [x1]
  41d830:	b	41d2d0 <_obstack_memory_used@@Base+0xa680>
  41d834:	mov	w20, #0x80                  	// #128
  41d838:	mov	w19, #0x2                   	// #2
  41d83c:	bl	402ab0 <__ctype_b_loc@plt>
  41d840:	ldr	x6, [x0]
  41d844:	sxtw	x4, w19
  41d848:	add	x5, x26, #0xb8
  41d84c:	mov	x7, #0x1                   	// #1
  41d850:	add	x6, x6, w20, sxtw #1
  41d854:	mov	x0, #0x0                   	// #0
  41d858:	ldrh	w1, [x6, x0, lsl #1]
  41d85c:	add	w2, w20, w0
  41d860:	cmp	w2, #0x5f
  41d864:	lsl	x3, x7, x0
  41d868:	and	w1, w1, #0x8
  41d86c:	add	x0, x0, #0x1
  41d870:	ccmp	w1, #0x0, #0x0, ne  // ne = any
  41d874:	b.eq	41d884 <_obstack_memory_used@@Base+0xac34>  // b.none
  41d878:	ldr	x1, [x5, x4, lsl #3]
  41d87c:	orr	x1, x1, x3
  41d880:	str	x1, [x5, x4, lsl #3]
  41d884:	cmp	x0, #0x40
  41d888:	b.ne	41d858 <_obstack_memory_used@@Base+0xac08>  // b.any
  41d88c:	add	x4, x4, #0x1
  41d890:	add	w20, w20, #0x40
  41d894:	cmp	w4, #0x3
  41d898:	add	x6, x6, #0x80
  41d89c:	b.le	41d854 <_obstack_memory_used@@Base+0xac04>
  41d8a0:	b	41cf70 <_obstack_memory_used@@Base+0xa320>
  41d8a4:	mov	w20, #0x0                   	// #0
  41d8a8:	mov	w19, #0x0                   	// #0
  41d8ac:	b	41d83c <_obstack_memory_used@@Base+0xabec>
  41d8b0:	ldrb	w4, [sp, #184]
  41d8b4:	b	41d598 <_obstack_memory_used@@Base+0xa948>
  41d8b8:	mov	x25, x27
  41d8bc:	str	x27, [sp, #104]
  41d8c0:	b	41ce80 <_obstack_memory_used@@Base+0xa230>
  41d8c4:	mov	x25, x27
  41d8c8:	str	xzr, [sp, #104]
  41d8cc:	b	41c8b8 <_obstack_memory_used@@Base+0x9c68>
  41d8d0:	add	x20, x26, #0x70
  41d8d4:	stp	x23, x24, [sp, #48]
  41d8d8:	add	x23, x26, #0x80
  41d8dc:	mov	x0, x20
  41d8e0:	mov	x1, x23
  41d8e4:	mov	x4, x22
  41d8e8:	mov	x3, #0x0                   	// #0
  41d8ec:	mov	x2, #0x0                   	// #0
  41d8f0:	bl	415470 <_obstack_memory_used@@Base+0x2820>
  41d8f4:	mov	x27, x0
  41d8f8:	cbz	x0, 41d224 <_obstack_memory_used@@Base+0xa5d4>
  41d8fc:	ldr	w0, [x26, #180]
  41d900:	mov	w24, #0x10                  	// #16
  41d904:	cmp	w0, #0x1
  41d908:	b.le	41c820 <_obstack_memory_used@@Base+0x9bd0>
  41d90c:	nop
  41d910:	ldr	x3, [x21, #72]
  41d914:	mov	x2, x28
  41d918:	ldr	x4, [x21, #104]
  41d91c:	mov	x1, x21
  41d920:	mov	x0, x22
  41d924:	cmp	x4, x3
  41d928:	b.le	41c820 <_obstack_memory_used@@Base+0x9bd0>
  41d92c:	ldr	x4, [x21, #48]
  41d930:	cmp	x3, x4
  41d934:	b.eq	41c820 <_obstack_memory_used@@Base+0x9bd0>  // b.none
  41d938:	ldr	x4, [x21, #16]
  41d93c:	ldr	w3, [x4, x3, lsl #2]
  41d940:	cmn	w3, #0x1
  41d944:	b.ne	41c820 <_obstack_memory_used@@Base+0x9bd0>  // b.any
  41d948:	bl	41c050 <_obstack_memory_used@@Base+0x9400>
  41d94c:	mov	w5, w0
  41d950:	ldr	x6, [x21, #72]
  41d954:	mov	x4, x22
  41d958:	mov	x1, x23
  41d95c:	mov	x3, #0x0                   	// #0
  41d960:	mov	x2, #0x0                   	// #0
  41d964:	mov	x0, x20
  41d968:	add	x5, x6, w5, sxtw
  41d96c:	str	x5, [x21, #72]
  41d970:	bl	415470 <_obstack_memory_used@@Base+0x2820>
  41d974:	stp	xzr, xzr, [sp, #240]
  41d978:	mov	x19, x0
  41d97c:	mov	x2, x27
  41d980:	mov	x3, x0
  41d984:	add	x4, sp, #0xf0
  41d988:	mov	x1, x23
  41d98c:	mov	x0, x20
  41d990:	strb	w24, [sp, #248]
  41d994:	bl	415470 <_obstack_memory_used@@Base+0x2820>
  41d998:	mov	x27, x0
  41d99c:	cmp	x19, #0x0
  41d9a0:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  41d9a4:	b.ne	41d910 <_obstack_memory_used@@Base+0xacc0>  // b.any
  41d9a8:	ldp	x23, x24, [sp, #48]
  41d9ac:	b	41cb20 <_obstack_memory_used@@Base+0x9ed0>
  41d9b0:	ldr	x0, [sp, #184]
  41d9b4:	stp	w2, w1, [sp, #136]
  41d9b8:	bl	402690 <strlen@plt>
  41d9bc:	cmp	x0, #0x1
  41d9c0:	b.hi	41d78c <_obstack_memory_used@@Base+0xab3c>  // b.pmore
  41d9c4:	ldp	w2, w1, [sp, #136]
  41d9c8:	cbz	w2, 41d574 <_obstack_memory_used@@Base+0xa924>
  41d9cc:	ldrb	w0, [sp, #128]
  41d9d0:	mov	w3, #0x0                   	// #0
  41d9d4:	b	41d590 <_obstack_memory_used@@Base+0xa940>
  41d9d8:	ldr	x0, [sp, #168]
  41d9dc:	stp	w2, w1, [sp, #136]
  41d9e0:	bl	402690 <strlen@plt>
  41d9e4:	cmp	x0, #0x1
  41d9e8:	ldp	w2, w1, [sp, #136]
  41d9ec:	b.hi	41d78c <_obstack_memory_used@@Base+0xab3c>  // b.pmore
  41d9f0:	cmp	w1, #0x3
  41d9f4:	b.eq	41d774 <_obstack_memory_used@@Base+0xab24>  // b.none
  41d9f8:	ldr	x0, [sp, #168]
  41d9fc:	ldrb	w3, [x0]
  41da00:	b	41d578 <_obstack_memory_used@@Base+0xa928>
  41da04:	lsl	x1, x1, #1
  41da08:	mov	x0, x2
  41da0c:	add	x1, x1, #0x1
  41da10:	str	x1, [sp, #104]
  41da14:	stp	w3, w4, [sp, #136]
  41da18:	lsl	x1, x1, #2
  41da1c:	str	x1, [sp, #128]
  41da20:	bl	402930 <realloc@plt>
  41da24:	mov	x2, x0
  41da28:	ldr	x0, [x25, #16]
  41da2c:	ldr	x1, [sp, #128]
  41da30:	str	x2, [sp, #128]
  41da34:	bl	402930 <realloc@plt>
  41da38:	mov	x1, x0
  41da3c:	ldr	x2, [sp, #128]
  41da40:	ldp	w3, w4, [sp, #136]
  41da44:	cmp	x2, #0x0
  41da48:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  41da4c:	b.eq	41da68 <_obstack_memory_used@@Base+0xae18>  // b.none
  41da50:	stp	x2, x1, [x25, #8]
  41da54:	ldr	x0, [x25, #64]
  41da58:	b	41d608 <_obstack_memory_used@@Base+0xa9b8>
  41da5c:	cbz	x25, 41d674 <_obstack_memory_used@@Base+0xaa24>
  41da60:	mov	w4, #0x0                   	// #0
  41da64:	b	41d5a0 <_obstack_memory_used@@Base+0xa950>
  41da68:	mov	x0, x2
  41da6c:	str	x1, [sp, #96]
  41da70:	bl	402ae0 <free@plt>
  41da74:	ldr	x1, [sp, #96]
  41da78:	mov	x0, x1
  41da7c:	bl	402ae0 <free@plt>
  41da80:	ldr	x1, [sp, #112]
  41da84:	mov	w0, #0xc                   	// #12
  41da88:	ldp	x23, x24, [sp, #48]
  41da8c:	str	w0, [x1]
  41da90:	b	41d2d0 <_obstack_memory_used@@Base+0xa680>
  41da94:	nop
  41da98:	stp	x29, x30, [sp, #-128]!
  41da9c:	mov	x29, sp
  41daa0:	stp	x27, x28, [sp, #80]
  41daa4:	mov	x27, x5
  41daa8:	stp	x19, x20, [sp, #16]
  41daac:	mov	x20, x1
  41dab0:	stp	x21, x22, [sp, #32]
  41dab4:	mov	x22, x0
  41dab8:	mov	x21, x4
  41dabc:	stp	x23, x24, [sp, #48]
  41dac0:	mov	x23, x3
  41dac4:	stp	x25, x26, [sp, #64]
  41dac8:	mov	x26, x2
  41dacc:	ldr	x25, [x1]
  41dad0:	bl	41c788 <_obstack_memory_used@@Base+0x9b38>
  41dad4:	ldr	w1, [x27]
  41dad8:	cmp	w1, #0x0
  41dadc:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  41dae0:	b.eq	41dc40 <_obstack_memory_used@@Base+0xaff0>  // b.none
  41dae4:	ldrb	w6, [x26, #8]
  41dae8:	mov	x28, x0
  41daec:	and	w0, w6, #0xfffffff7
  41daf0:	cmp	w0, #0x2
  41daf4:	b.eq	41dbac <_obstack_memory_used@@Base+0xaf5c>  // b.none
  41daf8:	cmp	x21, #0x0
  41dafc:	add	x0, x25, #0x80
  41db00:	cset	w24, eq  // eq = none
  41db04:	add	x25, x25, #0x70
  41db08:	str	x0, [sp, #104]
  41db0c:	b	41db28 <_obstack_memory_used@@Base+0xaed8>
  41db10:	ldrb	w6, [x26, #8]
  41db14:	cmp	x28, #0x0
  41db18:	csel	x28, x28, x0, ne  // ne = any
  41db1c:	and	w0, w6, #0xfffffff7
  41db20:	cmp	w0, #0x2
  41db24:	b.eq	41dbac <_obstack_memory_used@@Base+0xaf5c>  // b.none
  41db28:	cmp	w24, #0x0
  41db2c:	mov	x5, x27
  41db30:	mov	x4, x21
  41db34:	mov	x3, x23
  41db38:	mov	x2, x26
  41db3c:	mov	x1, x20
  41db40:	mov	x0, x22
  41db44:	ccmp	w6, #0x9, #0x0, eq  // eq = none
  41db48:	b.eq	41dbac <_obstack_memory_used@@Base+0xaf5c>  // b.none
  41db4c:	bl	41c788 <_obstack_memory_used@@Base+0x9b38>
  41db50:	mov	x19, x0
  41db54:	ldr	w1, [x27]
  41db58:	cmp	w1, #0x0
  41db5c:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  41db60:	b.eq	41dbcc <_obstack_memory_used@@Base+0xaf7c>  // b.none
  41db64:	cmp	x28, #0x0
  41db68:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  41db6c:	b.eq	41db10 <_obstack_memory_used@@Base+0xaec0>  // b.none
  41db70:	ldr	x1, [sp, #104]
  41db74:	mov	w5, #0x10                  	// #16
  41db78:	stp	xzr, xzr, [sp, #112]
  41db7c:	mov	x3, x0
  41db80:	add	x4, sp, #0x70
  41db84:	mov	x2, x28
  41db88:	mov	x0, x25
  41db8c:	strb	w5, [sp, #120]
  41db90:	bl	415470 <_obstack_memory_used@@Base+0x2820>
  41db94:	cbz	x0, 41dbec <_obstack_memory_used@@Base+0xaf9c>
  41db98:	ldrb	w6, [x26, #8]
  41db9c:	mov	x28, x0
  41dba0:	and	w0, w6, #0xfffffff7
  41dba4:	cmp	w0, #0x2
  41dba8:	b.ne	41db28 <_obstack_memory_used@@Base+0xaed8>  // b.any
  41dbac:	mov	x0, x28
  41dbb0:	ldp	x19, x20, [sp, #16]
  41dbb4:	ldp	x21, x22, [sp, #32]
  41dbb8:	ldp	x23, x24, [sp, #48]
  41dbbc:	ldp	x25, x26, [sp, #64]
  41dbc0:	ldp	x27, x28, [sp, #80]
  41dbc4:	ldp	x29, x30, [sp], #128
  41dbc8:	ret
  41dbcc:	cbz	x28, 41dc40 <_obstack_memory_used@@Base+0xaff0>
  41dbd0:	mov	x0, x28
  41dbd4:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x13b0>
  41dbd8:	mov	x2, #0x0                   	// #0
  41dbdc:	add	x1, x1, #0x78
  41dbe0:	mov	x28, #0x0                   	// #0
  41dbe4:	bl	413118 <_obstack_memory_used@@Base+0x4c8>
  41dbe8:	b	41dbac <_obstack_memory_used@@Base+0xaf5c>
  41dbec:	adrp	x20, 414000 <_obstack_memory_used@@Base+0x13b0>
  41dbf0:	add	x20, x20, #0x78
  41dbf4:	mov	x1, x20
  41dbf8:	mov	x0, x19
  41dbfc:	mov	x2, #0x0                   	// #0
  41dc00:	bl	413118 <_obstack_memory_used@@Base+0x4c8>
  41dc04:	mov	x1, x20
  41dc08:	mov	x0, x28
  41dc0c:	mov	x2, #0x0                   	// #0
  41dc10:	bl	413118 <_obstack_memory_used@@Base+0x4c8>
  41dc14:	mov	w0, #0xc                   	// #12
  41dc18:	str	w0, [x27]
  41dc1c:	mov	x28, #0x0                   	// #0
  41dc20:	mov	x0, x28
  41dc24:	ldp	x19, x20, [sp, #16]
  41dc28:	ldp	x21, x22, [sp, #32]
  41dc2c:	ldp	x23, x24, [sp, #48]
  41dc30:	ldp	x25, x26, [sp, #64]
  41dc34:	ldp	x27, x28, [sp, #80]
  41dc38:	ldp	x29, x30, [sp], #128
  41dc3c:	ret
  41dc40:	mov	x28, #0x0                   	// #0
  41dc44:	b	41dbac <_obstack_memory_used@@Base+0xaf5c>
  41dc48:	stp	x29, x30, [sp, #-128]!
  41dc4c:	mov	x29, sp
  41dc50:	stp	x19, x20, [sp, #16]
  41dc54:	mov	x20, x5
  41dc58:	ldr	x19, [x1]
  41dc5c:	stp	x21, x22, [sp, #32]
  41dc60:	mov	x22, x1
  41dc64:	mov	x21, x4
  41dc68:	stp	x23, x24, [sp, #48]
  41dc6c:	mov	x23, x3
  41dc70:	ldr	x6, [x19, #168]
  41dc74:	stp	x25, x26, [sp, #64]
  41dc78:	mov	x26, x0
  41dc7c:	mov	x25, x2
  41dc80:	stp	x27, x28, [sp, #80]
  41dc84:	str	x6, [sp, #104]
  41dc88:	bl	41da98 <_obstack_memory_used@@Base+0xae48>
  41dc8c:	ldr	w1, [x20]
  41dc90:	cmp	w1, #0x0
  41dc94:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  41dc98:	b.eq	41ddd4 <_obstack_memory_used@@Base+0xb184>  // b.none
  41dc9c:	mov	x28, x0
  41dca0:	orr	x24, x23, #0x800000
  41dca4:	add	x0, x19, #0x80
  41dca8:	str	x0, [sp, #96]
  41dcac:	b	41dd14 <_obstack_memory_used@@Base+0xb0c4>
  41dcb0:	cmp	x21, #0x0
  41dcb4:	ccmp	w10, #0x9, #0x0, ne  // ne = any
  41dcb8:	b.eq	41dd68 <_obstack_memory_used@@Base+0xb118>  // b.none
  41dcbc:	ldr	x6, [sp, #104]
  41dcc0:	ldr	x27, [x19, #168]
  41dcc4:	str	x6, [x19, #168]
  41dcc8:	bl	41da98 <_obstack_memory_used@@Base+0xae48>
  41dccc:	mov	x3, x0
  41dcd0:	ldr	w1, [x20]
  41dcd4:	cmp	w1, #0x0
  41dcd8:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  41dcdc:	b.eq	41dd70 <_obstack_memory_used@@Base+0xb120>  // b.none
  41dce0:	ldr	x0, [x19, #168]
  41dce4:	orr	x27, x0, x27
  41dce8:	str	x27, [x19, #168]
  41dcec:	ldr	x1, [sp, #96]
  41dcf0:	mov	w5, #0xa                   	// #10
  41dcf4:	stp	xzr, xzr, [sp, #112]
  41dcf8:	mov	x2, x28
  41dcfc:	add	x4, sp, #0x70
  41dd00:	add	x0, x19, #0x70
  41dd04:	strb	w5, [sp, #120]
  41dd08:	bl	415470 <_obstack_memory_used@@Base+0x2820>
  41dd0c:	mov	x28, x0
  41dd10:	cbz	x0, 41ddac <_obstack_memory_used@@Base+0xb15c>
  41dd14:	ldrb	w3, [x25, #8]
  41dd18:	mov	x2, x24
  41dd1c:	mov	x1, x26
  41dd20:	mov	x0, x25
  41dd24:	cmp	w3, #0xa
  41dd28:	b.ne	41dd8c <_obstack_memory_used@@Base+0xb13c>  // b.any
  41dd2c:	bl	41c050 <_obstack_memory_used@@Base+0x9400>
  41dd30:	mov	w9, w0
  41dd34:	ldr	x11, [x26, #72]
  41dd38:	mov	x5, x20
  41dd3c:	ldrb	w10, [x25, #8]
  41dd40:	mov	x4, x21
  41dd44:	mov	x3, x23
  41dd48:	mov	x2, x25
  41dd4c:	add	x9, x11, w9, sxtw
  41dd50:	str	x9, [x26, #72]
  41dd54:	and	w9, w10, #0xfffffff7
  41dd58:	mov	x1, x22
  41dd5c:	mov	x0, x26
  41dd60:	cmp	w9, #0x2
  41dd64:	b.ne	41dcb0 <_obstack_memory_used@@Base+0xb060>  // b.any
  41dd68:	mov	x3, #0x0                   	// #0
  41dd6c:	b	41dcec <_obstack_memory_used@@Base+0xb09c>
  41dd70:	cbz	x28, 41ddd4 <_obstack_memory_used@@Base+0xb184>
  41dd74:	mov	x0, x28
  41dd78:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x13b0>
  41dd7c:	mov	x2, #0x0                   	// #0
  41dd80:	add	x1, x1, #0x78
  41dd84:	mov	x28, #0x0                   	// #0
  41dd88:	bl	413118 <_obstack_memory_used@@Base+0x4c8>
  41dd8c:	mov	x0, x28
  41dd90:	ldp	x19, x20, [sp, #16]
  41dd94:	ldp	x21, x22, [sp, #32]
  41dd98:	ldp	x23, x24, [sp, #48]
  41dd9c:	ldp	x25, x26, [sp, #64]
  41dda0:	ldp	x27, x28, [sp, #80]
  41dda4:	ldp	x29, x30, [sp], #128
  41dda8:	ret
  41ddac:	mov	w0, #0xc                   	// #12
  41ddb0:	str	w0, [x20]
  41ddb4:	mov	x0, x28
  41ddb8:	ldp	x19, x20, [sp, #16]
  41ddbc:	ldp	x21, x22, [sp, #32]
  41ddc0:	ldp	x23, x24, [sp, #48]
  41ddc4:	ldp	x25, x26, [sp, #64]
  41ddc8:	ldp	x27, x28, [sp, #80]
  41ddcc:	ldp	x29, x30, [sp], #128
  41ddd0:	ret
  41ddd4:	mov	x28, #0x0                   	// #0
  41ddd8:	b	41dd8c <_obstack_memory_used@@Base+0xb13c>
  41dddc:	nop
  41dde0:	stp	x29, x30, [sp, #-320]!
  41dde4:	mov	x29, sp
  41dde8:	stp	x21, x22, [sp, #32]
  41ddec:	mov	x21, x0
  41ddf0:	mov	x22, x1
  41ddf4:	stp	x19, x20, [sp, #16]
  41ddf8:	mov	x20, x2
  41ddfc:	ldrb	w0, [x0, #56]
  41de00:	ldp	x19, x1, [x21]
  41de04:	stp	x23, x24, [sp, #48]
  41de08:	mov	x24, x3
  41de0c:	mov	w3, #0xffffff90            	// #-112
  41de10:	and	w0, w0, w3
  41de14:	stp	xzr, x24, [x21, #16]
  41de18:	str	xzr, [x21, #48]
  41de1c:	cmp	x1, #0xe7
  41de20:	strb	w0, [x21, #56]
  41de24:	str	wzr, [sp, #124]
  41de28:	b.ls	41ea54 <_obstack_memory_used@@Base+0xbe04>  // b.plast
  41de2c:	mov	x2, #0xe8                  	// #232
  41de30:	str	x2, [x21, #16]
  41de34:	mov	x0, x19
  41de38:	mov	w1, #0x0                   	// #0
  41de3c:	bl	4028d0 <memset@plt>
  41de40:	mov	w0, #0xf                   	// #15
  41de44:	str	w0, [x19, #128]
  41de48:	mov	x0, #0x5555555555555555    	// #6148914691236517205
  41de4c:	movk	x0, #0x555, lsl #48
  41de50:	cmp	x20, x0
  41de54:	b.cs	41e3a0 <_obstack_memory_used@@Base+0xb750>  // b.hs, b.nlast
  41de58:	stp	x25, x26, [sp, #64]
  41de5c:	add	x25, x20, #0x1
  41de60:	str	x25, [x19, #8]
  41de64:	lsl	x0, x25, #4
  41de68:	bl	402800 <malloc@plt>
  41de6c:	str	x0, [x19]
  41de70:	cbz	x20, 41ea74 <_obstack_memory_used@@Base+0xbe24>
  41de74:	mov	x1, #0x1                   	// #1
  41de78:	lsl	x1, x1, #1
  41de7c:	cmp	x20, x1
  41de80:	b.cs	41de78 <_obstack_memory_used@@Base+0xb228>  // b.hs, b.nlast
  41de84:	sub	x23, x1, #0x1
  41de88:	mov	x0, #0x18                  	// #24
  41de8c:	bl	402910 <calloc@plt>
  41de90:	str	x0, [x19, #64]
  41de94:	str	x23, [x19, #136]
  41de98:	bl	402b00 <__ctype_get_mb_cur_max@plt>
  41de9c:	str	w0, [x19, #180]
  41dea0:	mov	w0, #0xe                   	// #14
  41dea4:	bl	4027c0 <nl_langinfo@plt>
  41dea8:	ldrb	w1, [x0]
  41deac:	and	w1, w1, #0xffffffdf
  41deb0:	and	w1, w1, #0xff
  41deb4:	cmp	w1, #0x55
  41deb8:	b.ne	41df18 <_obstack_memory_used@@Base+0xb2c8>  // b.any
  41debc:	ldrb	w1, [x0, #1]
  41dec0:	and	w1, w1, #0xffffffdf
  41dec4:	and	w1, w1, #0xff
  41dec8:	cmp	w1, #0x54
  41decc:	b.ne	41df18 <_obstack_memory_used@@Base+0xb2c8>  // b.any
  41ded0:	ldrb	w1, [x0, #2]
  41ded4:	and	w1, w1, #0xffffffdf
  41ded8:	and	w1, w1, #0xff
  41dedc:	cmp	w1, #0x46
  41dee0:	b.ne	41df18 <_obstack_memory_used@@Base+0xb2c8>  // b.any
  41dee4:	ldrb	w1, [x0, #3]
  41dee8:	cmp	w1, #0x2d
  41deec:	cset	x1, eq  // eq = none
  41def0:	add	x1, x1, #0x3
  41def4:	add	x2, x0, x1
  41def8:	ldrb	w0, [x0, x1]
  41defc:	cmp	w0, #0x38
  41df00:	b.ne	41df18 <_obstack_memory_used@@Base+0xb2c8>  // b.any
  41df04:	ldrb	w0, [x2, #1]
  41df08:	cbnz	w0, 41df18 <_obstack_memory_used@@Base+0xb2c8>
  41df0c:	ldrb	w0, [x19, #176]
  41df10:	orr	w0, w0, #0x4
  41df14:	strb	w0, [x19, #176]
  41df18:	ldrb	w0, [x19, #176]
  41df1c:	ldr	w1, [x19, #180]
  41df20:	and	w2, w0, #0xfffffff7
  41df24:	strb	w2, [x19, #176]
  41df28:	cmp	w1, #0x1
  41df2c:	b.le	41df40 <_obstack_memory_used@@Base+0xb2f0>
  41df30:	tbz	w0, #2, 41e3cc <_obstack_memory_used@@Base+0xb77c>
  41df34:	adrp	x0, 422000 <_obstack_memory_used@@Base+0xf3b0>
  41df38:	add	x0, x0, #0x228
  41df3c:	str	x0, [x19, #120]
  41df40:	ldr	x0, [x19]
  41df44:	cbz	x0, 41e39c <_obstack_memory_used@@Base+0xb74c>
  41df48:	ldr	x0, [x19, #64]
  41df4c:	cbz	x0, 41e39c <_obstack_memory_used@@Base+0xb74c>
  41df50:	stp	xzr, xzr, [sp, #208]
  41df54:	ands	x23, x24, #0x400000
  41df58:	cset	w6, ne  // ne = any
  41df5c:	stp	xzr, xzr, [sp, #224]
  41df60:	stp	xzr, xzr, [sp, #240]
  41df64:	stp	xzr, xzr, [sp, #256]
  41df68:	stp	xzr, xzr, [sp, #272]
  41df6c:	stp	xzr, xzr, [sp, #288]
  41df70:	stp	xzr, xzr, [sp, #304]
  41df74:	ldr	x4, [x21, #40]
  41df78:	str	wzr, [sp, #124]
  41df7c:	ldrb	w1, [x19, #176]
  41df80:	orr	x26, x4, x23
  41df84:	ldr	w2, [x19, #180]
  41df88:	cmp	x26, #0x0
  41df8c:	str	x22, [sp, #168]
  41df90:	ubfx	x5, x1, #2, #1
  41df94:	cset	w3, ne  // ne = any
  41df98:	ubfx	x1, x1, #3, #1
  41df9c:	stp	xzr, xzr, [sp, #176]
  41dfa0:	stp	xzr, xzr, [sp, #192]
  41dfa4:	stp	x20, x20, [sp, #248]
  41dfa8:	stp	x20, x20, [sp, #264]
  41dfac:	str	x4, [sp, #288]
  41dfb0:	strb	w6, [sp, #304]
  41dfb4:	strb	w5, [sp, #305]
  41dfb8:	strb	w1, [sp, #306]
  41dfbc:	strb	w3, [sp, #307]
  41dfc0:	str	w2, [sp, #312]
  41dfc4:	cbnz	x20, 41e380 <_obstack_memory_used@@Base+0xb730>
  41dfc8:	ldr	x0, [sp, #176]
  41dfcc:	cmp	w3, #0x0
  41dfd0:	csel	x22, x0, x22, ne  // ne = any
  41dfd4:	str	x22, [sp, #176]
  41dfd8:	cmp	w2, #0x1
  41dfdc:	cbz	x23, 41e090 <_obstack_memory_used@@Base+0xb440>
  41dfe0:	b.le	41ea44 <_obstack_memory_used@@Base+0xbdf4>
  41dfe4:	add	x0, sp, #0xa8
  41dfe8:	bl	413818 <_obstack_memory_used@@Base+0xbc8>
  41dfec:	cbnz	w0, 41e028 <_obstack_memory_used@@Base+0xb3d8>
  41dff0:	ldr	x0, [sp, #224]
  41dff4:	cmp	x20, x0
  41dff8:	b.le	41eae0 <_obstack_memory_used@@Base+0xbe90>
  41dffc:	ldr	x2, [sp, #216]
  41e000:	ldrsw	x0, [x19, #180]
  41e004:	ldr	x1, [sp, #232]
  41e008:	add	x0, x0, x2
  41e00c:	cmp	x1, x0
  41e010:	b.gt	41eae0 <_obstack_memory_used@@Base+0xbe90>
  41e014:	lsl	x1, x1, #1
  41e018:	add	x0, sp, #0xa8
  41e01c:	bl	413238 <_obstack_memory_used@@Base+0x5e8>
  41e020:	cbz	w0, 41dfe4 <_obstack_memory_used@@Base+0xb394>
  41e024:	nop
  41e028:	ldr	x20, [x21]
  41e02c:	str	w0, [sp, #124]
  41e030:	ldr	x22, [x20, #112]
  41e034:	cbz	x22, 41e048 <_obstack_memory_used@@Base+0xb3f8>
  41e038:	mov	x0, x22
  41e03c:	ldr	x22, [x22]
  41e040:	bl	402ae0 <free@plt>
  41e044:	cbnz	x22, 41e038 <_obstack_memory_used@@Base+0xb3e8>
  41e048:	ldr	x0, [x20, #32]
  41e04c:	mov	w1, #0xf                   	// #15
  41e050:	stp	xzr, xzr, [x20, #104]
  41e054:	str	w1, [x20, #128]
  41e058:	bl	402ae0 <free@plt>
  41e05c:	str	xzr, [x20, #32]
  41e060:	add	x0, sp, #0xa8
  41e064:	bl	4145f8 <_obstack_memory_used@@Base+0x19a8>
  41e068:	mov	x0, x19
  41e06c:	bl	414640 <_obstack_memory_used@@Base+0x19f0>
  41e070:	ldp	x25, x26, [sp, #64]
  41e074:	stp	xzr, xzr, [x21]
  41e078:	ldr	w0, [sp, #124]
  41e07c:	ldp	x19, x20, [sp, #16]
  41e080:	ldp	x21, x22, [sp, #32]
  41e084:	ldp	x23, x24, [sp, #48]
  41e088:	ldp	x29, x30, [sp], #320
  41e08c:	ret
  41e090:	b.gt	41e8dc <_obstack_memory_used@@Base+0xbc8c>
  41e094:	ldr	x1, [sp, #232]
  41e098:	cbz	x26, 41e528 <_obstack_memory_used@@Base+0xb8d8>
  41e09c:	ldr	x2, [sp, #256]
  41e0a0:	ldr	x0, [sp, #216]
  41e0a4:	cmp	x2, x1
  41e0a8:	csel	x2, x2, x1, le
  41e0ac:	cmp	x2, x0
  41e0b0:	b.gt	41e0bc <_obstack_memory_used@@Base+0xb46c>
  41e0b4:	b	41ebb8 <_obstack_memory_used@@Base+0xbf68>
  41e0b8:	ldr	x22, [sp, #176]
  41e0bc:	ldr	x1, [sp, #168]
  41e0c0:	ldr	x4, [sp, #208]
  41e0c4:	add	x1, x1, x0
  41e0c8:	ldr	x3, [sp, #288]
  41e0cc:	ldrb	w1, [x1, x4]
  41e0d0:	ldrb	w1, [x3, x1]
  41e0d4:	strb	w1, [x22, x0]
  41e0d8:	add	x0, x0, #0x1
  41e0dc:	cmp	x2, x0
  41e0e0:	b.ne	41e0b8 <_obstack_memory_used@@Base+0xb468>  // b.any
  41e0e4:	str	wzr, [sp, #124]
  41e0e8:	stp	x2, x2, [sp, #216]
  41e0ec:	orr	x2, x24, #0x800000
  41e0f0:	ldr	x20, [x21]
  41e0f4:	str	xzr, [x21, #48]
  41e0f8:	add	x1, sp, #0xa8
  41e0fc:	add	x0, sp, #0x80
  41e100:	str	x24, [x20, #216]
  41e104:	bl	41c050 <_obstack_memory_used@@Base+0x9400>
  41e108:	ldr	x6, [sp, #240]
  41e10c:	mov	x3, x24
  41e110:	mov	x1, x21
  41e114:	add	x2, sp, #0x80
  41e118:	add	x5, sp, #0x7c
  41e11c:	mov	x4, #0x0                   	// #0
  41e120:	add	x6, x6, w0, sxtw
  41e124:	add	x0, sp, #0xa8
  41e128:	str	x6, [sp, #240]
  41e12c:	bl	41dc48 <_obstack_memory_used@@Base+0xaff8>
  41e130:	mov	x24, x0
  41e134:	ldr	w1, [sp, #124]
  41e138:	cbnz	w1, 41ea94 <_obstack_memory_used@@Base+0xbe44>
  41e13c:	add	x26, x20, #0x70
  41e140:	mov	w5, #0x2                   	// #2
  41e144:	add	x20, x20, #0x80
  41e148:	add	x22, sp, #0x90
  41e14c:	mov	x1, x20
  41e150:	stp	xzr, xzr, [sp, #144]
  41e154:	mov	x0, x26
  41e158:	mov	x4, x22
  41e15c:	mov	x3, #0x0                   	// #0
  41e160:	mov	x2, #0x0                   	// #0
  41e164:	strb	w5, [sp, #152]
  41e168:	bl	415470 <_obstack_memory_used@@Base+0x2820>
  41e16c:	mov	x25, x0
  41e170:	mov	x1, x0
  41e174:	cbz	x24, 41e1a4 <_obstack_memory_used@@Base+0xb554>
  41e178:	mov	w5, #0x10                  	// #16
  41e17c:	stp	xzr, xzr, [sp, #144]
  41e180:	mov	x1, x20
  41e184:	mov	x3, x25
  41e188:	mov	x2, x24
  41e18c:	mov	x0, x26
  41e190:	mov	x4, x22
  41e194:	strb	w5, [sp, #152]
  41e198:	bl	415470 <_obstack_memory_used@@Base+0x2820>
  41e19c:	mov	x1, x25
  41e1a0:	mov	x25, x0
  41e1a4:	cmp	x1, #0x0
  41e1a8:	cset	w0, eq  // eq = none
  41e1ac:	cmp	x25, #0x0
  41e1b0:	csinc	w0, w0, wzr, ne  // ne = any
  41e1b4:	ldr	x20, [x21]
  41e1b8:	cbnz	w0, 41ead0 <_obstack_memory_used@@Base+0xbe80>
  41e1bc:	ldr	x24, [x20, #8]
  41e1c0:	str	x25, [x19, #104]
  41e1c4:	lsl	x26, x24, #3
  41e1c8:	add	x24, x24, x24, lsl #1
  41e1cc:	mov	x0, x26
  41e1d0:	bl	402800 <malloc@plt>
  41e1d4:	mov	x25, x0
  41e1d8:	str	x25, [x20, #24]
  41e1dc:	mov	x0, x26
  41e1e0:	lsl	x24, x24, #3
  41e1e4:	bl	402800 <malloc@plt>
  41e1e8:	mov	x26, x0
  41e1ec:	str	x26, [x20, #32]
  41e1f0:	mov	x0, x24
  41e1f4:	bl	402800 <malloc@plt>
  41e1f8:	mov	x1, x0
  41e1fc:	str	x1, [x20, #40]
  41e200:	mov	x0, x24
  41e204:	mov	x24, x1
  41e208:	bl	402800 <malloc@plt>
  41e20c:	str	x0, [x20, #48]
  41e210:	cbz	x25, 41e8d0 <_obstack_memory_used@@Base+0xbc80>
  41e214:	cbz	x26, 41e8d0 <_obstack_memory_used@@Base+0xbc80>
  41e218:	cbz	x24, 41e8d0 <_obstack_memory_used@@Base+0xbc80>
  41e21c:	cbz	x0, 41e8d0 <_obstack_memory_used@@Base+0xbc80>
  41e220:	ldr	x24, [x21, #48]
  41e224:	lsl	x0, x24, #3
  41e228:	bl	402800 <malloc@plt>
  41e22c:	str	x0, [x20, #224]
  41e230:	cbz	x0, 41e290 <_obstack_memory_used@@Base+0xb640>
  41e234:	mov	x1, #0x0                   	// #0
  41e238:	cbz	x24, 41e250 <_obstack_memory_used@@Base+0xb600>
  41e23c:	nop
  41e240:	str	x1, [x0, x1, lsl #3]
  41e244:	add	x1, x1, #0x1
  41e248:	cmp	x1, x24
  41e24c:	b.ne	41e240 <_obstack_memory_used@@Base+0xb5f0>  // b.any
  41e250:	ldr	x0, [x20, #104]
  41e254:	mov	x2, x20
  41e258:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x13b0>
  41e25c:	add	x1, x1, #0xa80
  41e260:	bl	413198 <_obstack_memory_used@@Base+0x548>
  41e264:	ldr	x3, [x21, #48]
  41e268:	cbz	x3, 41ea80 <_obstack_memory_used@@Base+0xbe30>
  41e26c:	mov	x1, #0x0                   	// #0
  41e270:	ldr	x0, [x20, #224]
  41e274:	b	41e284 <_obstack_memory_used@@Base+0xb634>
  41e278:	add	x1, x1, #0x1
  41e27c:	cmp	x1, x3
  41e280:	b.eq	41ea88 <_obstack_memory_used@@Base+0xbe38>  // b.none
  41e284:	ldr	x2, [x0, x1, lsl #3]
  41e288:	cmp	x1, x2
  41e28c:	b.eq	41e278 <_obstack_memory_used@@Base+0xb628>  // b.none
  41e290:	ldr	x0, [x20, #104]
  41e294:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x23b0>
  41e298:	mov	x2, x21
  41e29c:	add	x1, x1, #0x860
  41e2a0:	bl	413118 <_obstack_memory_used@@Base+0x4c8>
  41e2a4:	cbnz	w0, 41e028 <_obstack_memory_used@@Base+0xb3d8>
  41e2a8:	ldr	x0, [x20, #104]
  41e2ac:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x33b0>
  41e2b0:	mov	x2, x20
  41e2b4:	add	x1, x1, #0x398
  41e2b8:	bl	413118 <_obstack_memory_used@@Base+0x4c8>
  41e2bc:	cbnz	w0, 41e028 <_obstack_memory_used@@Base+0xb3d8>
  41e2c0:	ldr	x0, [x20, #104]
  41e2c4:	mov	x2, x20
  41e2c8:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x13b0>
  41e2cc:	add	x1, x1, #0xb28
  41e2d0:	stp	x27, x28, [sp, #80]
  41e2d4:	mov	x24, #0x1                   	// #1
  41e2d8:	bl	413198 <_obstack_memory_used@@Base+0x548>
  41e2dc:	ldr	x26, [x20, #104]
  41e2e0:	mov	x25, #0x2                   	// #2
  41e2e4:	ldrb	w0, [x26, #48]
  41e2e8:	ldr	x1, [x26, #56]
  41e2ec:	cmp	w0, #0xb
  41e2f0:	b.hi	41e368 <_obstack_memory_used@@Base+0xb718>  // b.pmore
  41e2f4:	nop
  41e2f8:	cmp	w0, #0x9
  41e2fc:	b.hi	41e5ac <_obstack_memory_used@@Base+0xb95c>  // b.pmore
  41e300:	cmp	w0, #0x4
  41e304:	b.eq	41e57c <_obstack_memory_used@@Base+0xb92c>  // b.none
  41e308:	b.ls	41e534 <_obstack_memory_used@@Base+0xb8e4>  // b.plast
  41e30c:	sub	w0, w0, #0x8
  41e310:	and	w0, w0, #0xff
  41e314:	cmp	w0, #0x1
  41e318:	b.hi	41e53c <_obstack_memory_used@@Base+0xb8ec>  // b.pmore
  41e31c:	ldr	x3, [x26, #32]
  41e320:	add	x1, x1, x1, lsl #1
  41e324:	ldr	x2, [x20, #40]
  41e328:	mov	x0, #0x8                   	// #8
  41e32c:	ldr	x27, [x3, #56]
  41e330:	add	x28, x2, x1, lsl #3
  41e334:	str	x24, [x2, x1, lsl #3]
  41e338:	str	x24, [x28, #8]
  41e33c:	bl	402800 <malloc@plt>
  41e340:	str	x0, [x28, #16]
  41e344:	cbz	x0, 41eb74 <_obstack_memory_used@@Base+0xbf24>
  41e348:	str	x27, [x0]
  41e34c:	ldr	x28, [x26, #8]
  41e350:	cbz	x28, 41e478 <_obstack_memory_used@@Base+0xb828>
  41e354:	mov	x26, x28
  41e358:	ldrb	w0, [x26, #48]
  41e35c:	ldr	x1, [x26, #56]
  41e360:	cmp	w0, #0xb
  41e364:	b.ls	41e2f8 <_obstack_memory_used@@Base+0xb6a8>  // b.plast
  41e368:	cmp	w0, #0xc
  41e36c:	b.eq	41e31c <_obstack_memory_used@@Base+0xb6cc>  // b.none
  41e370:	cmp	w0, #0x10
  41e374:	b.ne	41e53c <_obstack_memory_used@@Base+0xb8ec>  // b.any
  41e378:	ldr	x28, [x26, #8]
  41e37c:	b	41e350 <_obstack_memory_used@@Base+0xb700>
  41e380:	mov	x1, x25
  41e384:	add	x0, sp, #0xa8
  41e388:	bl	413238 <_obstack_memory_used@@Base+0x5e8>
  41e38c:	cbnz	w0, 41e028 <_obstack_memory_used@@Base+0xb3d8>
  41e390:	ldrb	w3, [sp, #307]
  41e394:	ldr	w2, [x19, #180]
  41e398:	b	41dfc8 <_obstack_memory_used@@Base+0xb378>
  41e39c:	ldp	x25, x26, [sp, #64]
  41e3a0:	mov	w1, #0xc                   	// #12
  41e3a4:	mov	x0, x19
  41e3a8:	str	w1, [sp, #124]
  41e3ac:	bl	414640 <_obstack_memory_used@@Base+0x19f0>
  41e3b0:	stp	xzr, xzr, [x21]
  41e3b4:	ldr	w0, [sp, #124]
  41e3b8:	ldp	x19, x20, [sp, #16]
  41e3bc:	ldp	x21, x22, [sp, #32]
  41e3c0:	ldp	x23, x24, [sp, #48]
  41e3c4:	ldp	x29, x30, [sp], #320
  41e3c8:	ret
  41e3cc:	mov	x1, #0x1                   	// #1
  41e3d0:	mov	x0, #0x20                  	// #32
  41e3d4:	bl	402910 <calloc@plt>
  41e3d8:	str	x0, [x19, #120]
  41e3dc:	cbz	x0, 41e39c <_obstack_memory_used@@Base+0xb74c>
  41e3e0:	mov	x26, #0x1                   	// #1
  41e3e4:	stp	x27, x28, [sp, #80]
  41e3e8:	mov	x27, #0x0                   	// #0
  41e3ec:	lsl	w23, w27, #3
  41e3f0:	mov	w28, #0x0                   	// #0
  41e3f4:	b	41e418 <_obstack_memory_used@@Base+0xb7c8>
  41e3f8:	cbnz	w3, 41e408 <_obstack_memory_used@@Base+0xb7b8>
  41e3fc:	ldrb	w0, [x19, #176]
  41e400:	orr	w0, w0, #0x8
  41e404:	strb	w0, [x19, #176]
  41e408:	add	w28, w28, #0x1
  41e40c:	add	w23, w23, #0x1
  41e410:	cmp	w28, #0x40
  41e414:	b.eq	41e460 <_obstack_memory_used@@Base+0xb810>  // b.none
  41e418:	mov	w0, w23
  41e41c:	bl	4029d0 <btowc@plt>
  41e420:	and	w3, w23, #0xffffff80
  41e424:	cmn	w0, #0x1
  41e428:	b.eq	41e3f8 <_obstack_memory_used@@Base+0xb7a8>  // b.none
  41e42c:	ldr	x4, [x19, #120]
  41e430:	lsl	x1, x26, x28
  41e434:	ldr	x2, [x4, x27]
  41e438:	orr	x1, x2, x1
  41e43c:	str	x1, [x4, x27]
  41e440:	cbnz	w3, 41e408 <_obstack_memory_used@@Base+0xb7b8>
  41e444:	cmp	w0, w23
  41e448:	b.ne	41e3fc <_obstack_memory_used@@Base+0xb7ac>  // b.any
  41e44c:	add	w28, w28, #0x1
  41e450:	add	w23, w23, #0x1
  41e454:	cmp	w28, #0x40
  41e458:	b.ne	41e418 <_obstack_memory_used@@Base+0xb7c8>  // b.any
  41e45c:	nop
  41e460:	add	x27, x27, #0x8
  41e464:	cmp	x27, #0x20
  41e468:	b.ne	41e3ec <_obstack_memory_used@@Base+0xb79c>  // b.any
  41e46c:	ldp	x27, x28, [sp, #80]
  41e470:	b	41df40 <_obstack_memory_used@@Base+0xb2f0>
  41e474:	mov	x26, x0
  41e478:	ldr	x0, [x26, #16]
  41e47c:	cmp	x0, #0x0
  41e480:	cset	w27, eq  // eq = none
  41e484:	cmp	x0, x28
  41e488:	csinc	w27, w27, wzr, ne  // ne = any
  41e48c:	cbz	w27, 41ea04 <_obstack_memory_used@@Base+0xbdb4>
  41e490:	ldr	x0, [x26]
  41e494:	mov	x28, x26
  41e498:	cbnz	x0, 41e474 <_obstack_memory_used@@Base+0xb824>
  41e49c:	ldr	x0, [x20, #16]
  41e4a0:	mov	w26, #0x0                   	// #0
  41e4a4:	mov	x24, #0x0                   	// #0
  41e4a8:	cmp	x0, x24
  41e4ac:	b.eq	41e4d4 <_obstack_memory_used@@Base+0xb884>  // b.none
  41e4b0:	add	x25, x24, x24, lsl #1
  41e4b4:	lsl	x25, x25, #3
  41e4b8:	ldr	x1, [x20, #48]
  41e4bc:	add	x1, x1, x25
  41e4c0:	ldr	x1, [x1, #8]
  41e4c4:	cbz	x1, 41e4f4 <_obstack_memory_used@@Base+0xb8a4>
  41e4c8:	add	x24, x24, #0x1
  41e4cc:	cmp	x0, x24
  41e4d0:	b.ne	41e4b0 <_obstack_memory_used@@Base+0xb860>  // b.any
  41e4d4:	cbz	w26, 41e61c <_obstack_memory_used@@Base+0xb9cc>
  41e4d8:	ldr	x1, [x20, #48]
  41e4dc:	mov	x25, #0x0                   	// #0
  41e4e0:	mov	w26, #0x0                   	// #0
  41e4e4:	mov	x24, #0x0                   	// #0
  41e4e8:	add	x1, x1, x25
  41e4ec:	ldr	x1, [x1, #8]
  41e4f0:	cbnz	x1, 41e4c8 <_obstack_memory_used@@Base+0xb878>
  41e4f4:	mov	x2, x24
  41e4f8:	mov	x1, x20
  41e4fc:	mov	x0, x22
  41e500:	mov	w3, #0x1                   	// #1
  41e504:	bl	414ee8 <_obstack_memory_used@@Base+0x2298>
  41e508:	cbnz	w0, 41e8c8 <_obstack_memory_used@@Base+0xbc78>
  41e50c:	ldr	x0, [x20, #48]
  41e510:	add	x24, x24, #0x1
  41e514:	add	x25, x0, x25
  41e518:	ldr	x0, [x25, #8]
  41e51c:	cbz	x0, 41e558 <_obstack_memory_used@@Base+0xb908>
  41e520:	ldr	x0, [x20, #16]
  41e524:	b	41e4a8 <_obstack_memory_used@@Base+0xb858>
  41e528:	str	wzr, [sp, #124]
  41e52c:	stp	x1, x1, [sp, #216]
  41e530:	b	41e0ec <_obstack_memory_used@@Base+0xb49c>
  41e534:	cmp	w0, #0x2
  41e538:	b.eq	41e34c <_obstack_memory_used@@Base+0xb6fc>  // b.none
  41e53c:	ldr	x2, [x26, #32]
  41e540:	ldr	x0, [x20, #24]
  41e544:	ldr	x28, [x26, #8]
  41e548:	ldr	x2, [x2, #56]
  41e54c:	str	x2, [x0, x1, lsl #3]
  41e550:	cbnz	x28, 41e354 <_obstack_memory_used@@Base+0xb704>
  41e554:	b	41e478 <_obstack_memory_used@@Base+0xb828>
  41e558:	ldr	x0, [sp, #160]
  41e55c:	bl	402ae0 <free@plt>
  41e560:	ldr	x0, [x20, #16]
  41e564:	cmp	x0, x24
  41e568:	b.eq	41e8b8 <_obstack_memory_used@@Base+0xbc68>  // b.none
  41e56c:	add	x25, x24, x24, lsl #1
  41e570:	mov	w26, w27
  41e574:	lsl	x25, x25, #3
  41e578:	b	41e4b8 <_obstack_memory_used@@Base+0xb868>
  41e57c:	ldr	x2, [x26, #32]
  41e580:	ldr	x0, [x20, #24]
  41e584:	ldr	x27, [x2, #56]
  41e588:	str	x27, [x0, x1, lsl #3]
  41e58c:	ldrb	w0, [x26, #48]
  41e590:	cmp	w0, #0x4
  41e594:	b.ne	41e34c <_obstack_memory_used@@Base+0xb6fc>  // b.any
  41e598:	ldr	x2, [x20, #40]
  41e59c:	add	x1, x1, x1, lsl #1
  41e5a0:	mov	x0, #0x8                   	// #8
  41e5a4:	add	x28, x2, x1, lsl #3
  41e5a8:	b	41e334 <_obstack_memory_used@@Base+0xb6e4>
  41e5ac:	ldrb	w0, [x20, #176]
  41e5b0:	orr	w0, w0, #0x1
  41e5b4:	strb	w0, [x20, #176]
  41e5b8:	ldr	x28, [x26, #8]
  41e5bc:	cbz	x28, 41ea2c <_obstack_memory_used@@Base+0xbddc>
  41e5c0:	ldr	x0, [x28, #24]
  41e5c4:	ldr	x3, [x0, #56]
  41e5c8:	ldr	x0, [x26, #16]
  41e5cc:	cbz	x0, 41ea20 <_obstack_memory_used@@Base+0xbdd0>
  41e5d0:	ldr	x0, [x0, #24]
  41e5d4:	ldr	x4, [x0, #56]
  41e5d8:	add	x1, x1, x1, lsl #1
  41e5dc:	ldr	x2, [x20, #40]
  41e5e0:	mov	x0, #0x10                  	// #16
  41e5e4:	stp	x3, x4, [sp, #96]
  41e5e8:	add	x27, x2, x1, lsl #3
  41e5ec:	str	x25, [x2, x1, lsl #3]
  41e5f0:	bl	402800 <malloc@plt>
  41e5f4:	str	x0, [x27, #16]
  41e5f8:	ldp	x3, x4, [sp, #96]
  41e5fc:	cbz	x0, 41e6e8 <_obstack_memory_used@@Base+0xba98>
  41e600:	cmp	x3, x4
  41e604:	b.eq	41ea10 <_obstack_memory_used@@Base+0xbdc0>  // b.none
  41e608:	str	x25, [x27, #8]
  41e60c:	b.ge	41ea38 <_obstack_memory_used@@Base+0xbde8>  // b.tcont
  41e610:	stp	x3, x4, [x0]
  41e614:	cbnz	x28, 41e354 <_obstack_memory_used@@Base+0xb704>
  41e618:	b	41e478 <_obstack_memory_used@@Base+0xb828>
  41e61c:	ldrb	w0, [x21, #56]
  41e620:	tbnz	w0, #4, 41e638 <_obstack_memory_used@@Base+0xb9e8>
  41e624:	ldr	x0, [x21, #48]
  41e628:	cbz	x0, 41e638 <_obstack_memory_used@@Base+0xb9e8>
  41e62c:	ldrb	w0, [x20, #176]
  41e630:	tbnz	w0, #0, 41e640 <_obstack_memory_used@@Base+0xb9f0>
  41e634:	nop
  41e638:	ldr	x0, [x20, #152]
  41e63c:	cbz	x0, 41e708 <_obstack_memory_used@@Base+0xbab8>
  41e640:	add	x0, x24, x24, lsl #1
  41e644:	lsl	x0, x0, #3
  41e648:	bl	402800 <malloc@plt>
  41e64c:	str	x0, [x20, #56]
  41e650:	cbz	x0, 41ebc0 <_obstack_memory_used@@Base+0xbf70>
  41e654:	mov	x2, #0x0                   	// #0
  41e658:	mov	x1, #0x0                   	// #0
  41e65c:	cbnz	x24, 41e668 <_obstack_memory_used@@Base+0xba18>
  41e660:	b	41e708 <_obstack_memory_used@@Base+0xbab8>
  41e664:	ldr	x0, [x20, #56]
  41e668:	add	x0, x0, x2
  41e66c:	add	x1, x1, #0x1
  41e670:	add	x2, x2, #0x18
  41e674:	stp	xzr, xzr, [x0]
  41e678:	str	xzr, [x0, #16]
  41e67c:	ldr	x0, [x20, #16]
  41e680:	cmp	x0, x1
  41e684:	b.hi	41e664 <_obstack_memory_used@@Base+0xba14>  // b.pmore
  41e688:	cbz	x0, 41e708 <_obstack_memory_used@@Base+0xbab8>
  41e68c:	ldr	x2, [x20, #48]
  41e690:	mov	x24, #0x0                   	// #0
  41e694:	mov	x27, #0x0                   	// #0
  41e698:	add	x1, x2, x24
  41e69c:	mov	x25, #0x0                   	// #0
  41e6a0:	ldp	x3, x28, [x1, #8]
  41e6a4:	cmp	x3, #0x0
  41e6a8:	b.gt	41e6c8 <_obstack_memory_used@@Base+0xba78>
  41e6ac:	b	41e6f8 <_obstack_memory_used@@Base+0xbaa8>
  41e6b0:	ldr	x2, [x20, #48]
  41e6b4:	add	x25, x25, #0x1
  41e6b8:	add	x0, x2, x24
  41e6bc:	ldr	x0, [x0, #8]
  41e6c0:	cmp	x25, x0
  41e6c4:	b.ge	41e6f4 <_obstack_memory_used@@Base+0xbaa4>  // b.tcont
  41e6c8:	ldr	x2, [x28, x25, lsl #3]
  41e6cc:	mov	x1, x27
  41e6d0:	ldr	x0, [x20, #56]
  41e6d4:	add	x2, x2, x2, lsl #1
  41e6d8:	add	x0, x0, x2, lsl #3
  41e6dc:	bl	4132d8 <_obstack_memory_used@@Base+0x688>
  41e6e0:	tst	w0, #0xff
  41e6e4:	b.ne	41e6b0 <_obstack_memory_used@@Base+0xba60>  // b.any
  41e6e8:	mov	w0, #0xc                   	// #12
  41e6ec:	ldp	x27, x28, [sp, #80]
  41e6f0:	b	41e028 <_obstack_memory_used@@Base+0xb3d8>
  41e6f4:	ldr	x0, [x20, #16]
  41e6f8:	add	x27, x27, #0x1
  41e6fc:	add	x24, x24, #0x18
  41e700:	cmp	x0, x27
  41e704:	b.hi	41e698 <_obstack_memory_used@@Base+0xba48>  // b.pmore
  41e708:	ldrb	w0, [x19, #176]
  41e70c:	cmp	x23, #0x0
  41e710:	str	wzr, [sp, #124]
  41e714:	cset	w1, eq  // eq = none
  41e718:	ands	w1, w1, w0, lsr #2
  41e71c:	b.ne	41e8ec <_obstack_memory_used@@Base+0xbc9c>  // b.any
  41e720:	ldr	x2, [x19, #104]
  41e724:	mov	x0, x22
  41e728:	ldr	x1, [x19, #48]
  41e72c:	ldr	x2, [x2, #24]
  41e730:	ldr	x2, [x2, #56]
  41e734:	str	x2, [x19, #144]
  41e738:	add	x2, x2, x2, lsl #1
  41e73c:	add	x1, x1, x2, lsl #3
  41e740:	bl	4158e8 <_obstack_memory_used@@Base+0x2c98>
  41e744:	str	w0, [sp, #128]
  41e748:	mov	w20, w0
  41e74c:	cbnz	w0, 41e7cc <_obstack_memory_used@@Base+0xbb7c>
  41e750:	ldr	x0, [x19, #152]
  41e754:	cmp	x0, #0x0
  41e758:	b.le	41e798 <_obstack_memory_used@@Base+0xbb48>
  41e75c:	ldr	x7, [sp, #152]
  41e760:	cmp	x7, #0x0
  41e764:	b.le	41e798 <_obstack_memory_used@@Base+0xbb48>
  41e768:	add	x23, x22, #0x10
  41e76c:	mov	x6, #0x0                   	// #0
  41e770:	ldr	x4, [sp, #160]
  41e774:	ldr	x3, [x19]
  41e778:	ldr	x1, [x4, x6, lsl #3]
  41e77c:	add	x5, x3, x1, lsl #4
  41e780:	ldrb	w0, [x5, #8]
  41e784:	cmp	w0, #0x4
  41e788:	b.eq	41e834 <_obstack_memory_used@@Base+0xbbe4>  // b.none
  41e78c:	add	x6, x6, #0x1
  41e790:	cmp	x7, x6
  41e794:	b.gt	41e770 <_obstack_memory_used@@Base+0xbb20>
  41e798:	mov	x2, x22
  41e79c:	mov	x1, x19
  41e7a0:	add	x0, sp, #0x80
  41e7a4:	mov	w3, #0x0                   	// #0
  41e7a8:	bl	415ae8 <_obstack_memory_used@@Base+0x2e98>
  41e7ac:	str	x0, [x19, #72]
  41e7b0:	cbz	x0, 41e9fc <_obstack_memory_used@@Base+0xbdac>
  41e7b4:	ldrsb	w1, [x0, #104]
  41e7b8:	tbnz	w1, #31, 41e99c <_obstack_memory_used@@Base+0xbd4c>
  41e7bc:	stp	x0, x0, [x19, #80]
  41e7c0:	str	x0, [x19, #96]
  41e7c4:	ldr	x0, [sp, #160]
  41e7c8:	bl	402ae0 <free@plt>
  41e7cc:	ldr	x22, [x21]
  41e7d0:	str	w20, [sp, #124]
  41e7d4:	ldr	x20, [x22, #112]
  41e7d8:	cbz	x20, 41e7f0 <_obstack_memory_used@@Base+0xbba0>
  41e7dc:	nop
  41e7e0:	mov	x0, x20
  41e7e4:	ldr	x20, [x20]
  41e7e8:	bl	402ae0 <free@plt>
  41e7ec:	cbnz	x20, 41e7e0 <_obstack_memory_used@@Base+0xbb90>
  41e7f0:	ldr	x0, [x22, #32]
  41e7f4:	mov	w1, #0xf                   	// #15
  41e7f8:	stp	xzr, xzr, [x22, #104]
  41e7fc:	str	w1, [x22, #128]
  41e800:	bl	402ae0 <free@plt>
  41e804:	str	xzr, [x22, #32]
  41e808:	add	x0, sp, #0xa8
  41e80c:	bl	4145f8 <_obstack_memory_used@@Base+0x19a8>
  41e810:	ldr	w0, [sp, #124]
  41e814:	cbnz	w0, 41eae8 <_obstack_memory_used@@Base+0xbe98>
  41e818:	ldp	x19, x20, [sp, #16]
  41e81c:	ldp	x21, x22, [sp, #32]
  41e820:	ldp	x23, x24, [sp, #48]
  41e824:	ldp	x25, x26, [sp, #64]
  41e828:	ldp	x27, x28, [sp, #80]
  41e82c:	ldp	x29, x30, [sp], #320
  41e830:	ret
  41e834:	mov	x2, #0x0                   	// #0
  41e838:	b	41e848 <_obstack_memory_used@@Base+0xbbf8>
  41e83c:	add	x2, x2, #0x1
  41e840:	cmp	x2, x7
  41e844:	b.eq	41e78c <_obstack_memory_used@@Base+0xbb3c>  // b.none
  41e848:	ldr	x0, [x4, x2, lsl #3]
  41e84c:	lsl	x0, x0, #4
  41e850:	add	x8, x3, x0
  41e854:	ldrb	w8, [x8, #8]
  41e858:	cmp	w8, #0x9
  41e85c:	b.ne	41e83c <_obstack_memory_used@@Base+0xbbec>  // b.any
  41e860:	ldr	x8, [x3, x0]
  41e864:	ldr	x0, [x5]
  41e868:	cmp	x8, x0
  41e86c:	b.ne	41e83c <_obstack_memory_used@@Base+0xbbec>  // b.any
  41e870:	ldr	x3, [x19, #40]
  41e874:	add	x2, x1, x1, lsl #1
  41e878:	mov	x0, x7
  41e87c:	mov	x1, x23
  41e880:	add	x2, x3, x2, lsl #3
  41e884:	ldr	x2, [x2, #16]
  41e888:	ldr	x2, [x2]
  41e88c:	bl	4148c8 <_obstack_memory_used@@Base+0x1c78>
  41e890:	cbnz	x0, 41e78c <_obstack_memory_used@@Base+0xbb3c>
  41e894:	ldr	x1, [x19, #48]
  41e898:	add	x2, x2, x2, lsl #1
  41e89c:	mov	x0, x22
  41e8a0:	add	x1, x1, x2, lsl #3
  41e8a4:	bl	414d40 <_obstack_memory_used@@Base+0x20f0>
  41e8a8:	cbnz	w0, 41eb84 <_obstack_memory_used@@Base+0xbf34>
  41e8ac:	mov	x6, #0x1                   	// #1
  41e8b0:	ldr	x7, [sp, #152]
  41e8b4:	b	41e790 <_obstack_memory_used@@Base+0xbb40>
  41e8b8:	mov	w26, #0x0                   	// #0
  41e8bc:	mov	x24, #0x0                   	// #0
  41e8c0:	mov	x25, #0x0                   	// #0
  41e8c4:	b	41e4b8 <_obstack_memory_used@@Base+0xb868>
  41e8c8:	ldp	x27, x28, [sp, #80]
  41e8cc:	b	41e028 <_obstack_memory_used@@Base+0xb3d8>
  41e8d0:	mov	w0, #0xc                   	// #12
  41e8d4:	str	w0, [sp, #124]
  41e8d8:	b	41e030 <_obstack_memory_used@@Base+0xb3e0>
  41e8dc:	add	x0, sp, #0xa8
  41e8e0:	bl	413638 <_obstack_memory_used@@Base+0x9e8>
  41e8e4:	str	wzr, [sp, #124]
  41e8e8:	b	41e0ec <_obstack_memory_used@@Base+0xb49c>
  41e8ec:	ldr	x0, [x21, #40]
  41e8f0:	cbnz	x0, 41e720 <_obstack_memory_used@@Base+0xbad0>
  41e8f4:	ldr	x6, [x19, #16]
  41e8f8:	cbz	x6, 41ebe0 <_obstack_memory_used@@Base+0xbf90>
  41e8fc:	ldr	x7, [x19]
  41e900:	mov	w2, #0x10001               	// #65537
  41e904:	mov	w8, #0x0                   	// #0
  41e908:	mov	x5, #0x0                   	// #0
  41e90c:	mov	x4, x7
  41e910:	mov	x3, #0x1                   	// #1
  41e914:	movk	x2, #0x1, lsl #48
  41e918:	ldrb	w0, [x4, #8]
  41e91c:	cmp	w0, #0x5
  41e920:	b.eq	41eb98 <_obstack_memory_used@@Base+0xbf48>  // b.none
  41e924:	b.hi	41eb1c <_obstack_memory_used@@Base+0xbecc>  // b.pmore
  41e928:	cmp	w0, #0x3
  41e92c:	b.eq	41eba0 <_obstack_memory_used@@Base+0xbf50>  // b.none
  41e930:	cmp	w0, #0x4
  41e934:	b.ne	41eb04 <_obstack_memory_used@@Base+0xbeb4>  // b.any
  41e938:	add	x5, x5, #0x1
  41e93c:	add	x4, x4, #0x10
  41e940:	cmp	x5, x6
  41e944:	b.ne	41e918 <_obstack_memory_used@@Base+0xbcc8>  // b.any
  41e948:	orr	w26, w26, w8
  41e94c:	add	x5, x7, x5, lsl #4
  41e950:	tst	w26, #0xff
  41e954:	mov	w1, #0x7                   	// #7
  41e958:	b.ne	41e978 <_obstack_memory_used@@Base+0xbd28>  // b.any
  41e95c:	b	41ebe0 <_obstack_memory_used@@Base+0xbf90>
  41e960:	cmp	w0, #0x5
  41e964:	b.ne	41e96c <_obstack_memory_used@@Base+0xbd1c>  // b.any
  41e968:	strb	w1, [x7, #8]
  41e96c:	add	x7, x7, #0x10
  41e970:	cmp	x5, x7
  41e974:	b.eq	41ebe4 <_obstack_memory_used@@Base+0xbf94>  // b.none
  41e978:	ldrb	w0, [x7, #8]
  41e97c:	cmp	w0, #0x1
  41e980:	b.ne	41e960 <_obstack_memory_used@@Base+0xbd10>  // b.any
  41e984:	ldrsb	w0, [x7]
  41e988:	tbz	w0, #31, 41e96c <_obstack_memory_used@@Base+0xbd1c>
  41e98c:	ldrb	w0, [x7, #10]
  41e990:	and	w0, w0, #0xffffffdf
  41e994:	strb	w0, [x7, #10]
  41e998:	b	41e96c <_obstack_memory_used@@Base+0xbd1c>
  41e99c:	mov	x2, x22
  41e9a0:	mov	x1, x19
  41e9a4:	mov	w3, #0x1                   	// #1
  41e9a8:	add	x0, sp, #0x80
  41e9ac:	bl	415ae8 <_obstack_memory_used@@Base+0x2e98>
  41e9b0:	str	x0, [x19, #80]
  41e9b4:	mov	x2, x22
  41e9b8:	mov	x1, x19
  41e9bc:	mov	w3, #0x2                   	// #2
  41e9c0:	add	x0, sp, #0x80
  41e9c4:	bl	415ae8 <_obstack_memory_used@@Base+0x2e98>
  41e9c8:	str	x0, [x19, #88]
  41e9cc:	mov	x1, x19
  41e9d0:	mov	x2, x22
  41e9d4:	add	x0, sp, #0x80
  41e9d8:	mov	w3, #0x6                   	// #6
  41e9dc:	bl	415ae8 <_obstack_memory_used@@Base+0x2e98>
  41e9e0:	str	x0, [x19, #96]
  41e9e4:	ldr	x1, [x19, #80]
  41e9e8:	cbz	x1, 41e9fc <_obstack_memory_used@@Base+0xbdac>
  41e9ec:	ldr	x1, [x19, #88]
  41e9f0:	cmp	x1, #0x0
  41e9f4:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  41e9f8:	b.ne	41e7c4 <_obstack_memory_used@@Base+0xbb74>  // b.any
  41e9fc:	ldr	w20, [sp, #128]
  41ea00:	b	41e7cc <_obstack_memory_used@@Base+0xbb7c>
  41ea04:	mov	x28, x0
  41ea08:	mov	x26, x28
  41ea0c:	b	41e358 <_obstack_memory_used@@Base+0xb708>
  41ea10:	str	x24, [x27, #8]
  41ea14:	str	x3, [x0]
  41ea18:	cbnz	x28, 41e354 <_obstack_memory_used@@Base+0xb704>
  41ea1c:	b	41e478 <_obstack_memory_used@@Base+0xb828>
  41ea20:	ldr	x0, [x26, #32]
  41ea24:	ldr	x4, [x0, #56]
  41ea28:	b	41e5d8 <_obstack_memory_used@@Base+0xb988>
  41ea2c:	ldr	x0, [x26, #32]
  41ea30:	ldr	x3, [x0, #56]
  41ea34:	b	41e5c8 <_obstack_memory_used@@Base+0xb978>
  41ea38:	stp	x4, x3, [x0]
  41ea3c:	cbnz	x28, 41e354 <_obstack_memory_used@@Base+0xb704>
  41ea40:	b	41e478 <_obstack_memory_used@@Base+0xb828>
  41ea44:	add	x0, sp, #0xa8
  41ea48:	bl	413598 <_obstack_memory_used@@Base+0x948>
  41ea4c:	str	wzr, [sp, #124]
  41ea50:	b	41e0ec <_obstack_memory_used@@Base+0xb49c>
  41ea54:	mov	x0, x19
  41ea58:	mov	x1, #0xe8                  	// #232
  41ea5c:	bl	402930 <realloc@plt>
  41ea60:	mov	x19, x0
  41ea64:	cbz	x0, 41ec10 <_obstack_memory_used@@Base+0xbfc0>
  41ea68:	mov	x0, #0xe8                  	// #232
  41ea6c:	stp	x19, x0, [x21]
  41ea70:	b	41de2c <_obstack_memory_used@@Base+0xb1dc>
  41ea74:	mov	x23, #0x0                   	// #0
  41ea78:	mov	x1, #0x1                   	// #1
  41ea7c:	b	41de88 <_obstack_memory_used@@Base+0xb238>
  41ea80:	ldr	x0, [x20, #224]
  41ea84:	nop
  41ea88:	bl	402ae0 <free@plt>
  41ea8c:	str	xzr, [x20, #224]
  41ea90:	b	41e290 <_obstack_memory_used@@Base+0xb640>
  41ea94:	cbz	x0, 41ebd4 <_obstack_memory_used@@Base+0xbf84>
  41ea98:	mov	w5, #0x2                   	// #2
  41ea9c:	add	x26, x20, #0x70
  41eaa0:	add	x22, sp, #0x90
  41eaa4:	add	x20, x20, #0x80
  41eaa8:	stp	xzr, xzr, [sp, #144]
  41eaac:	mov	x1, x20
  41eab0:	mov	x0, x26
  41eab4:	mov	x4, x22
  41eab8:	mov	x3, #0x0                   	// #0
  41eabc:	mov	x2, #0x0                   	// #0
  41eac0:	strb	w5, [sp, #152]
  41eac4:	bl	415470 <_obstack_memory_used@@Base+0x2820>
  41eac8:	mov	x25, x0
  41eacc:	b	41e178 <_obstack_memory_used@@Base+0xb528>
  41ead0:	mov	w0, #0xc                   	// #12
  41ead4:	str	xzr, [x19, #104]
  41ead8:	str	w0, [sp, #124]
  41eadc:	b	41e030 <_obstack_memory_used@@Base+0xb3e0>
  41eae0:	str	wzr, [sp, #124]
  41eae4:	b	41e0ec <_obstack_memory_used@@Base+0xb49c>
  41eae8:	mov	x0, x19
  41eaec:	bl	414640 <_obstack_memory_used@@Base+0x19f0>
  41eaf0:	ldr	w0, [sp, #124]
  41eaf4:	ldp	x25, x26, [sp, #64]
  41eaf8:	ldp	x27, x28, [sp, #80]
  41eafc:	stp	xzr, xzr, [x21]
  41eb00:	b	41e3b8 <_obstack_memory_used@@Base+0xb768>
  41eb04:	cmp	w0, #0x1
  41eb08:	b.ne	41eb38 <_obstack_memory_used@@Base+0xbee8>  // b.any
  41eb0c:	ldrsb	w0, [x4]
  41eb10:	cmp	w0, #0x0
  41eb14:	csel	w26, w26, w1, ge  // ge = tcont
  41eb18:	b	41e938 <_obstack_memory_used@@Base+0xbce8>
  41eb1c:	cmp	w0, #0xb
  41eb20:	b.hi	41eb44 <_obstack_memory_used@@Base+0xbef4>  // b.pmore
  41eb24:	cmp	w0, #0x7
  41eb28:	b.hi	41e938 <_obstack_memory_used@@Base+0xbce8>  // b.pmore
  41eb2c:	cmp	w0, #0x6
  41eb30:	b.eq	41e720 <_obstack_memory_used@@Base+0xbad0>  // b.none
  41eb34:	bl	4029e0 <abort@plt>
  41eb38:	cmp	w0, #0x2
  41eb3c:	b.eq	41e938 <_obstack_memory_used@@Base+0xbce8>  // b.none
  41eb40:	bl	4029e0 <abort@plt>
  41eb44:	cmp	w0, #0xc
  41eb48:	b.ne	41eb34 <_obstack_memory_used@@Base+0xbee4>  // b.any
  41eb4c:	ldr	w0, [x4]
  41eb50:	cmp	w0, #0x40
  41eb54:	b.hi	41eb8c <_obstack_memory_used@@Base+0xbf3c>  // b.pmore
  41eb58:	cmp	w0, #0xf
  41eb5c:	b.ls	41e720 <_obstack_memory_used@@Base+0xbad0>  // b.plast
  41eb60:	sub	w0, w0, #0x10
  41eb64:	lsl	x0, x3, x0
  41eb68:	tst	x0, x2
  41eb6c:	b.eq	41e720 <_obstack_memory_used@@Base+0xbad0>  // b.none
  41eb70:	b	41e938 <_obstack_memory_used@@Base+0xbce8>
  41eb74:	mov	w0, #0xc                   	// #12
  41eb78:	stp	xzr, xzr, [x28]
  41eb7c:	ldp	x27, x28, [sp, #80]
  41eb80:	b	41e028 <_obstack_memory_used@@Base+0xb3d8>
  41eb84:	mov	w20, w0
  41eb88:	b	41e7cc <_obstack_memory_used@@Base+0xbb7c>
  41eb8c:	cmp	w0, #0x80
  41eb90:	b.eq	41e938 <_obstack_memory_used@@Base+0xbce8>  // b.none
  41eb94:	b	41e720 <_obstack_memory_used@@Base+0xbad0>
  41eb98:	mov	w8, w1
  41eb9c:	b	41e938 <_obstack_memory_used@@Base+0xbce8>
  41eba0:	ldr	x0, [x4]
  41eba4:	ldr	x9, [x0, #16]
  41eba8:	cbnz	x9, 41e720 <_obstack_memory_used@@Base+0xbad0>
  41ebac:	ldr	x0, [x0, #24]
  41ebb0:	cbz	x0, 41e938 <_obstack_memory_used@@Base+0xbce8>
  41ebb4:	b	41e720 <_obstack_memory_used@@Base+0xbad0>
  41ebb8:	mov	x2, x0
  41ebbc:	b	41e0e4 <_obstack_memory_used@@Base+0xb494>
  41ebc0:	mov	w0, #0xc                   	// #12
  41ebc4:	str	w0, [sp, #124]
  41ebc8:	ldr	x20, [x21]
  41ebcc:	ldp	x27, x28, [sp, #80]
  41ebd0:	b	41e030 <_obstack_memory_used@@Base+0xb3e0>
  41ebd4:	ldr	x20, [x21]
  41ebd8:	str	xzr, [x19, #104]
  41ebdc:	b	41e030 <_obstack_memory_used@@Base+0xb3e0>
  41ebe0:	mov	w8, #0x0                   	// #0
  41ebe4:	ldr	x2, [x19, #152]
  41ebe8:	mov	w1, #0x1                   	// #1
  41ebec:	ldrb	w0, [x19, #176]
  41ebf0:	cmp	x2, #0x0
  41ebf4:	str	w1, [x19, #180]
  41ebf8:	ccmp	w8, #0x0, #0x0, le
  41ebfc:	and	w1, w0, #0xfffffff9
  41ec00:	cset	w0, ne  // ne = any
  41ec04:	orr	w0, w1, w0, lsl #1
  41ec08:	strb	w0, [x19, #176]
  41ec0c:	b	41e720 <_obstack_memory_used@@Base+0xbad0>
  41ec10:	mov	w0, #0xc                   	// #12
  41ec14:	b	41e3b8 <_obstack_memory_used@@Base+0xb768>
  41ec18:	stp	x29, x30, [sp, #-16]!
  41ec1c:	adrp	x3, 438000 <_obstack_memory_used@@Base+0x253b0>
  41ec20:	mov	x5, x2
  41ec24:	mov	x29, sp
  41ec28:	ldr	x3, [x3, #3560]
  41ec2c:	mov	w7, #0x6f                  	// #111
  41ec30:	ldrb	w6, [x2, #56]
  41ec34:	mov	x2, x1
  41ec38:	mov	x1, x0
  41ec3c:	mov	x0, x5
  41ec40:	ubfx	w4, w3, #25, #1
  41ec44:	and	w6, w6, w7
  41ec48:	ubfiz	w4, w4, #4, #4
  41ec4c:	orr	w4, w4, #0xffffff80
  41ec50:	orr	w4, w4, w6
  41ec54:	strb	w4, [x5, #56]
  41ec58:	bl	41dde0 <_obstack_memory_used@@Base+0xb190>
  41ec5c:	cbz	w0, 41ec8c <_obstack_memory_used@@Base+0xc03c>
  41ec60:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xf3b0>
  41ec64:	add	x1, x1, #0x228
  41ec68:	add	x4, x1, #0x1a0
  41ec6c:	mov	w3, w0
  41ec70:	ldp	x29, x30, [sp], #16
  41ec74:	add	x1, x1, #0x20
  41ec78:	ldr	x3, [x4, w3, sxtw #3]
  41ec7c:	mov	w2, #0x5                   	// #5
  41ec80:	mov	x0, #0x0                   	// #0
  41ec84:	add	x1, x1, x3
  41ec88:	b	402c20 <dcgettext@plt>
  41ec8c:	mov	x0, #0x0                   	// #0
  41ec90:	ldp	x29, x30, [sp], #16
  41ec94:	ret
  41ec98:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x253b0>
  41ec9c:	mov	x2, x0
  41eca0:	ldr	x0, [x1, #3560]
  41eca4:	str	x2, [x1, #3560]
  41eca8:	ret
  41ecac:	nop
  41ecb0:	stp	x29, x30, [sp, #-48]!
  41ecb4:	mov	x2, #0x100                 	// #256
  41ecb8:	mov	w1, #0x0                   	// #0
  41ecbc:	mov	x29, sp
  41ecc0:	stp	x19, x20, [sp, #16]
  41ecc4:	mov	x19, x0
  41ecc8:	ldr	x20, [x0]
  41eccc:	str	x21, [sp, #32]
  41ecd0:	ldr	x21, [x0, #32]
  41ecd4:	mov	x0, x21
  41ecd8:	bl	4028d0 <memset@plt>
  41ecdc:	ldr	x1, [x20, #72]
  41ece0:	mov	x0, x19
  41ece4:	mov	x3, x21
  41ece8:	add	x2, x1, #0x18
  41ecec:	add	x1, x1, #0x10
  41ecf0:	bl	4186e8 <_obstack_memory_used@@Base+0x5a98>
  41ecf4:	ldp	x1, x0, [x20, #72]
  41ecf8:	cmp	x1, x0
  41ecfc:	b.eq	41ed18 <_obstack_memory_used@@Base+0xc0c8>  // b.none
  41ed00:	add	x2, x0, #0x18
  41ed04:	add	x1, x0, #0x10
  41ed08:	mov	x3, x21
  41ed0c:	mov	x0, x19
  41ed10:	bl	4186e8 <_obstack_memory_used@@Base+0x5a98>
  41ed14:	ldr	x0, [x20, #72]
  41ed18:	ldr	x1, [x20, #88]
  41ed1c:	cmp	x1, x0
  41ed20:	b.eq	41ed3c <_obstack_memory_used@@Base+0xc0ec>  // b.none
  41ed24:	add	x2, x1, #0x18
  41ed28:	mov	x0, x19
  41ed2c:	mov	x3, x21
  41ed30:	add	x1, x1, #0x10
  41ed34:	bl	4186e8 <_obstack_memory_used@@Base+0x5a98>
  41ed38:	ldr	x0, [x20, #72]
  41ed3c:	ldr	x1, [x20, #96]
  41ed40:	cmp	x1, x0
  41ed44:	b.eq	41ed5c <_obstack_memory_used@@Base+0xc10c>  // b.none
  41ed48:	add	x2, x1, #0x18
  41ed4c:	mov	x3, x21
  41ed50:	add	x1, x1, #0x10
  41ed54:	mov	x0, x19
  41ed58:	bl	4186e8 <_obstack_memory_used@@Base+0x5a98>
  41ed5c:	ldrb	w1, [x19, #56]
  41ed60:	mov	w0, #0x0                   	// #0
  41ed64:	ldr	x21, [sp, #32]
  41ed68:	orr	w1, w1, #0x8
  41ed6c:	strb	w1, [x19, #56]
  41ed70:	ldp	x19, x20, [sp, #16]
  41ed74:	ldp	x29, x30, [sp], #48
  41ed78:	ret
  41ed7c:	nop
  41ed80:	sub	sp, sp, #0x80
  41ed84:	cmp	x3, #0x0
  41ed88:	ccmp	x3, x2, #0x0, ge  // ge = tcont
  41ed8c:	stp	x29, x30, [sp, #16]
  41ed90:	add	x29, sp, #0x10
  41ed94:	stp	x19, x20, [sp, #32]
  41ed98:	stp	x23, x24, [sp, #64]
  41ed9c:	add	x23, x3, x4
  41eda0:	b.gt	41efd4 <_obstack_memory_used@@Base+0xc384>
  41eda4:	stp	x21, x22, [sp, #48]
  41eda8:	mov	x19, x3
  41edac:	mov	x24, x2
  41edb0:	stp	x25, x26, [sp, #80]
  41edb4:	mov	x20, x0
  41edb8:	mov	x21, x6
  41edbc:	stp	x27, x28, [sp, #96]
  41edc0:	and	w25, w7, #0xff
  41edc4:	cmp	x23, x2
  41edc8:	b.gt	41efbc <_obstack_memory_used@@Base+0xc36c>
  41edcc:	cmp	x4, #0x0
  41edd0:	ccmp	x3, x23, #0x4, ge  // ge = tcont
  41edd4:	b.gt	41efbc <_obstack_memory_used@@Base+0xc36c>
  41edd8:	tbnz	x23, #63, 41efc4 <_obstack_memory_used@@Base+0xc374>
  41eddc:	cmp	x4, #0x0
  41ede0:	ccmp	x3, x23, #0x0, lt  // lt = tstop
  41ede4:	b.le	41efc4 <_obstack_memory_used@@Base+0xc374>
  41ede8:	ldrb	w0, [x20, #56]
  41edec:	cmp	x23, x19
  41edf0:	ubfx	x27, x0, #5, #2
  41edf4:	b.le	41ee04 <_obstack_memory_used@@Base+0xc1b4>
  41edf8:	ldr	x2, [x20, #32]
  41edfc:	cbz	x2, 41ee04 <_obstack_memory_used@@Base+0xc1b4>
  41ee00:	tbz	w0, #3, 41ef74 <_obstack_memory_used@@Base+0xc324>
  41ee04:	ldrb	w2, [x20, #56]
  41ee08:	cmp	x21, #0x0
  41ee0c:	cset	w0, eq  // eq = none
  41ee10:	ubfx	x3, x2, #4, #1
  41ee14:	orr	w0, w0, w3
  41ee18:	tbnz	w0, #0, 41ef60 <_obstack_memory_used@@Base+0xc310>
  41ee1c:	and	w2, w2, #0x6
  41ee20:	cmp	w2, #0x4
  41ee24:	ldr	x0, [x20, #48]
  41ee28:	b.eq	41f004 <_obstack_memory_used@@Base+0xc3b4>  // b.none
  41ee2c:	add	x28, x0, #0x1
  41ee30:	mov	x26, x28
  41ee34:	lsl	x0, x28, #4
  41ee38:	stp	x1, x5, [sp, #112]
  41ee3c:	bl	402800 <malloc@plt>
  41ee40:	mov	x22, x0
  41ee44:	cbz	x0, 41eff0 <_obstack_memory_used@@Base+0xc3a0>
  41ee48:	ldp	x1, x5, [sp, #112]
  41ee4c:	str	w27, [sp]
  41ee50:	mov	x7, x0
  41ee54:	mov	x6, x28
  41ee58:	mov	x4, x23
  41ee5c:	mov	x3, x19
  41ee60:	mov	x2, x24
  41ee64:	mov	x0, x20
  41ee68:	bl	41a598 <_obstack_memory_used@@Base+0x7948>
  41ee6c:	cbnz	w0, 41ef24 <_obstack_memory_used@@Base+0xc2d4>
  41ee70:	cbz	x21, 41ef10 <_obstack_memory_used@@Base+0xc2c0>
  41ee74:	ldrb	w0, [x20, #56]
  41ee78:	add	x23, x26, #0x1
  41ee7c:	ubfx	x0, x0, #1, #2
  41ee80:	cbz	w0, 41ef88 <_obstack_memory_used@@Base+0xc338>
  41ee84:	cmp	w0, #0x1
  41ee88:	mov	w19, #0x2                   	// #2
  41ee8c:	b.eq	41f030 <_obstack_memory_used@@Base+0xc3e0>  // b.none
  41ee90:	cmp	x26, #0x0
  41ee94:	b.le	41f074 <_obstack_memory_used@@Base+0xc424>
  41ee98:	ldp	x4, x3, [x21, #8]
  41ee9c:	mov	x0, x22
  41eea0:	mov	x1, #0x0                   	// #0
  41eea4:	nop
  41eea8:	ldr	x2, [x0]
  41eeac:	str	x2, [x4, x1, lsl #3]
  41eeb0:	add	x0, x0, #0x10
  41eeb4:	ldur	x2, [x0, #-8]
  41eeb8:	str	x2, [x3, x1, lsl #3]
  41eebc:	add	x1, x1, #0x1
  41eec0:	cmp	x26, x1
  41eec4:	b.ne	41eea8 <_obstack_memory_used@@Base+0xc258>  // b.any
  41eec8:	mov	x0, x1
  41eecc:	ldr	x2, [x21]
  41eed0:	cmp	x2, x0
  41eed4:	b.ls	41eefc <_obstack_memory_used@@Base+0xc2ac>  // b.plast
  41eed8:	ldp	x5, x4, [x21, #8]
  41eedc:	mov	x2, #0xffffffffffffffff    	// #-1
  41eee0:	str	x2, [x4, x0, lsl #3]
  41eee4:	add	x1, x1, #0x1
  41eee8:	str	x2, [x5, x0, lsl #3]
  41eeec:	mov	x0, x1
  41eef0:	ldr	x3, [x21]
  41eef4:	cmp	x3, x1
  41eef8:	b.hi	41eee0 <_obstack_memory_used@@Base+0xc290>  // b.pmore
  41eefc:	ldrb	w0, [x20, #56]
  41ef00:	bfi	w0, w19, #1, #2
  41ef04:	strb	w0, [x20, #56]
  41ef08:	tst	w0, #0x6
  41ef0c:	b.eq	41ef30 <_obstack_memory_used@@Base+0xc2e0>  // b.none
  41ef10:	ldr	x19, [x22]
  41ef14:	cbz	w25, 41ef34 <_obstack_memory_used@@Base+0xc2e4>
  41ef18:	ldr	x0, [x22, #8]
  41ef1c:	sub	x19, x0, x19
  41ef20:	b	41ef34 <_obstack_memory_used@@Base+0xc2e4>
  41ef24:	cmp	w0, #0x1
  41ef28:	mov	x19, #0xffffffffffffffff    	// #-1
  41ef2c:	b.eq	41ef34 <_obstack_memory_used@@Base+0xc2e4>  // b.none
  41ef30:	mov	x19, #0xfffffffffffffffe    	// #-2
  41ef34:	mov	x0, x22
  41ef38:	bl	402ae0 <free@plt>
  41ef3c:	ldp	x21, x22, [sp, #48]
  41ef40:	ldp	x25, x26, [sp, #80]
  41ef44:	ldp	x27, x28, [sp, #96]
  41ef48:	mov	x0, x19
  41ef4c:	ldp	x29, x30, [sp, #16]
  41ef50:	ldp	x19, x20, [sp, #32]
  41ef54:	ldp	x23, x24, [sp, #64]
  41ef58:	add	sp, sp, #0x80
  41ef5c:	ret
  41ef60:	mov	x28, #0x1                   	// #1
  41ef64:	mov	x0, #0x10                  	// #16
  41ef68:	mov	x26, x28
  41ef6c:	mov	x21, #0x0                   	// #0
  41ef70:	b	41ee38 <_obstack_memory_used@@Base+0xc1e8>
  41ef74:	mov	x0, x20
  41ef78:	stp	x1, x5, [sp, #112]
  41ef7c:	bl	41ecb0 <_obstack_memory_used@@Base+0xc060>
  41ef80:	ldp	x1, x5, [sp, #112]
  41ef84:	b	41ee04 <_obstack_memory_used@@Base+0xc1b4>
  41ef88:	lsl	x24, x23, #3
  41ef8c:	mov	x0, x24
  41ef90:	bl	402800 <malloc@plt>
  41ef94:	str	x0, [x21, #8]
  41ef98:	mov	x19, x0
  41ef9c:	cbz	x0, 41f080 <_obstack_memory_used@@Base+0xc430>
  41efa0:	mov	x0, x24
  41efa4:	bl	402800 <malloc@plt>
  41efa8:	str	x0, [x21, #16]
  41efac:	cbz	x0, 41f088 <_obstack_memory_used@@Base+0xc438>
  41efb0:	mov	w19, #0x1                   	// #1
  41efb4:	str	x23, [x21]
  41efb8:	b	41ee90 <_obstack_memory_used@@Base+0xc240>
  41efbc:	mov	x23, x24
  41efc0:	b	41ede8 <_obstack_memory_used@@Base+0xc198>
  41efc4:	ldrb	w27, [x20, #56]
  41efc8:	mov	x23, #0x0                   	// #0
  41efcc:	ubfx	x27, x27, #5, #2
  41efd0:	b	41ee04 <_obstack_memory_used@@Base+0xc1b4>
  41efd4:	mov	x19, #0xffffffffffffffff    	// #-1
  41efd8:	mov	x0, x19
  41efdc:	ldp	x29, x30, [sp, #16]
  41efe0:	ldp	x19, x20, [sp, #32]
  41efe4:	ldp	x23, x24, [sp, #64]
  41efe8:	add	sp, sp, #0x80
  41efec:	ret
  41eff0:	mov	x19, #0xfffffffffffffffe    	// #-2
  41eff4:	ldp	x21, x22, [sp, #48]
  41eff8:	ldp	x25, x26, [sp, #80]
  41effc:	ldp	x27, x28, [sp, #96]
  41f000:	b	41ef48 <_obstack_memory_used@@Base+0xc2f8>
  41f004:	ldr	x28, [x21]
  41f008:	cmp	x28, x0
  41f00c:	b.hi	41ee2c <_obstack_memory_used@@Base+0xc1dc>  // b.pmore
  41f010:	cmp	x28, #0x0
  41f014:	mov	x26, x28
  41f018:	b.gt	41ee34 <_obstack_memory_used@@Base+0xc1e4>
  41f01c:	mov	x28, #0x1                   	// #1
  41f020:	mov	x0, #0x10                  	// #16
  41f024:	mov	x26, x28
  41f028:	mov	x21, #0x0                   	// #0
  41f02c:	b	41ee38 <_obstack_memory_used@@Base+0xc1e8>
  41f030:	ldr	x1, [x21]
  41f034:	mov	w19, w0
  41f038:	cmp	x1, x23
  41f03c:	b.cs	41ee90 <_obstack_memory_used@@Base+0xc240>  // b.hs, b.nlast
  41f040:	ldr	x0, [x21, #8]
  41f044:	lsl	x27, x23, #3
  41f048:	mov	x1, x27
  41f04c:	bl	402930 <realloc@plt>
  41f050:	mov	x24, x0
  41f054:	cbz	x0, 41f080 <_obstack_memory_used@@Base+0xc430>
  41f058:	ldr	x0, [x21, #16]
  41f05c:	mov	x1, x27
  41f060:	bl	402930 <realloc@plt>
  41f064:	cbz	x0, 41f098 <_obstack_memory_used@@Base+0xc448>
  41f068:	stp	x23, x24, [x21]
  41f06c:	str	x0, [x21, #16]
  41f070:	b	41ee90 <_obstack_memory_used@@Base+0xc240>
  41f074:	mov	x0, #0x0                   	// #0
  41f078:	mov	x1, #0x0                   	// #0
  41f07c:	b	41eecc <_obstack_memory_used@@Base+0xc27c>
  41f080:	mov	w19, #0x0                   	// #0
  41f084:	b	41eefc <_obstack_memory_used@@Base+0xc2ac>
  41f088:	mov	x0, x19
  41f08c:	mov	w19, #0x0                   	// #0
  41f090:	bl	402ae0 <free@plt>
  41f094:	b	41eefc <_obstack_memory_used@@Base+0xc2ac>
  41f098:	mov	x0, x24
  41f09c:	mov	w19, #0x0                   	// #0
  41f0a0:	bl	402ae0 <free@plt>
  41f0a4:	b	41eefc <_obstack_memory_used@@Base+0xc2ac>
  41f0a8:	stp	x29, x30, [sp, #-112]!
  41f0ac:	cmp	x4, #0x0
  41f0b0:	mov	x29, sp
  41f0b4:	stp	x27, x28, [sp, #80]
  41f0b8:	ldr	x27, [sp, #112]
  41f0bc:	stp	x19, x20, [sp, #16]
  41f0c0:	stp	x25, x26, [sp, #64]
  41f0c4:	ccmp	x27, #0x0, #0x1, ge  // ge = tcont
  41f0c8:	mov	x25, x7
  41f0cc:	ccmp	x2, #0x0, #0x1, ge  // ge = tcont
  41f0d0:	ldrb	w7, [sp, #120]
  41f0d4:	b.lt	41f1a0 <_obstack_memory_used@@Base+0xc550>  // b.tstop
  41f0d8:	mov	x19, x4
  41f0dc:	mov	x20, x2
  41f0e0:	adds	x28, x2, x4
  41f0e4:	b.vs	41f1a0 <_obstack_memory_used@@Base+0xc550>
  41f0e8:	stp	x21, x22, [sp, #32]
  41f0ec:	mov	x22, x0
  41f0f0:	stp	x23, x24, [sp, #48]
  41f0f4:	mov	x23, x5
  41f0f8:	mov	x24, x6
  41f0fc:	cbz	x4, 41f1bc <_obstack_memory_used@@Base+0xc56c>
  41f100:	str	x1, [sp, #96]
  41f104:	mov	x21, x3
  41f108:	mov	x26, #0x0                   	// #0
  41f10c:	cbnz	x2, 41f15c <_obstack_memory_used@@Base+0xc50c>
  41f110:	mov	x6, x25
  41f114:	mov	x5, x27
  41f118:	mov	x4, x24
  41f11c:	mov	x3, x23
  41f120:	mov	x2, x28
  41f124:	mov	x1, x21
  41f128:	mov	x0, x22
  41f12c:	bl	41ed80 <_obstack_memory_used@@Base+0xc130>
  41f130:	mov	x19, x0
  41f134:	mov	x0, x26
  41f138:	bl	402ae0 <free@plt>
  41f13c:	mov	x0, x19
  41f140:	ldp	x19, x20, [sp, #16]
  41f144:	ldp	x21, x22, [sp, #32]
  41f148:	ldp	x23, x24, [sp, #48]
  41f14c:	ldp	x25, x26, [sp, #64]
  41f150:	ldp	x27, x28, [sp, #80]
  41f154:	ldp	x29, x30, [sp], #112
  41f158:	ret
  41f15c:	mov	x0, x28
  41f160:	str	w7, [sp, #108]
  41f164:	bl	402800 <malloc@plt>
  41f168:	mov	x26, x0
  41f16c:	cbz	x0, 41f198 <_obstack_memory_used@@Base+0xc548>
  41f170:	ldr	x1, [sp, #96]
  41f174:	mov	x2, x20
  41f178:	bl	402650 <memcpy@plt>
  41f17c:	mov	x1, x21
  41f180:	mov	x2, x19
  41f184:	add	x0, x26, x20
  41f188:	bl	402650 <memcpy@plt>
  41f18c:	ldr	w7, [sp, #108]
  41f190:	mov	x21, x26
  41f194:	b	41f110 <_obstack_memory_used@@Base+0xc4c0>
  41f198:	ldp	x21, x22, [sp, #32]
  41f19c:	ldp	x23, x24, [sp, #48]
  41f1a0:	mov	x19, #0xfffffffffffffffe    	// #-2
  41f1a4:	mov	x0, x19
  41f1a8:	ldp	x19, x20, [sp, #16]
  41f1ac:	ldp	x25, x26, [sp, #64]
  41f1b0:	ldp	x27, x28, [sp, #80]
  41f1b4:	ldp	x29, x30, [sp], #112
  41f1b8:	ret
  41f1bc:	mov	x21, x1
  41f1c0:	mov	x26, #0x0                   	// #0
  41f1c4:	b	41f110 <_obstack_memory_used@@Base+0xc4c0>
  41f1c8:	stp	x29, x30, [sp, #-64]!
  41f1cc:	mov	x29, sp
  41f1d0:	stp	x19, x20, [sp, #16]
  41f1d4:	mov	w19, w2
  41f1d8:	mov	x20, x0
  41f1dc:	tst	x19, #0x1
  41f1e0:	stp	x21, x22, [sp, #32]
  41f1e4:	mov	x21, #0xb2fc                	// #45820
  41f1e8:	str	x23, [sp, #48]
  41f1ec:	mov	x23, #0x2c6                 	// #710
  41f1f0:	stp	xzr, xzr, [x0]
  41f1f4:	mov	x22, x1
  41f1f8:	movk	x21, #0x3, lsl #16
  41f1fc:	str	xzr, [x0, #16]
  41f200:	movk	x23, #0x101, lsl #16
  41f204:	mov	x0, #0x100                 	// #256
  41f208:	csel	x23, x21, x23, ne  // ne = any
  41f20c:	bl	402800 <malloc@plt>
  41f210:	str	x0, [x20, #32]
  41f214:	cbz	x0, 41f2c0 <_obstack_memory_used@@Base+0xc670>
  41f218:	sbfiz	x21, x19, #21, #32
  41f21c:	mov	w0, #0x0                   	// #0
  41f220:	and	x21, x21, #0x400000
  41f224:	orr	x21, x21, x23
  41f228:	tbnz	w19, #2, 41f29c <_obstack_memory_used@@Base+0xc64c>
  41f22c:	ldrb	w1, [x20, #56]
  41f230:	ubfx	x19, x19, #3, #1
  41f234:	ubfiz	w0, w0, #7, #1
  41f238:	mov	w2, #0x6f                  	// #111
  41f23c:	orr	w19, w0, w19, lsl #4
  41f240:	and	w0, w1, w2
  41f244:	orr	w19, w19, w0
  41f248:	str	xzr, [x20, #40]
  41f24c:	strb	w19, [x20, #56]
  41f250:	mov	x0, x22
  41f254:	bl	402690 <strlen@plt>
  41f258:	mov	x2, x0
  41f25c:	mov	x3, x21
  41f260:	mov	x1, x22
  41f264:	mov	x0, x20
  41f268:	bl	41dde0 <_obstack_memory_used@@Base+0xb190>
  41f26c:	mov	w19, w0
  41f270:	cmp	w0, #0x10
  41f274:	b.eq	41f2ac <_obstack_memory_used@@Base+0xc65c>  // b.none
  41f278:	cbnz	w0, 41f2b0 <_obstack_memory_used@@Base+0xc660>
  41f27c:	mov	x0, x20
  41f280:	bl	41ecb0 <_obstack_memory_used@@Base+0xc060>
  41f284:	mov	w0, w19
  41f288:	ldp	x19, x20, [sp, #16]
  41f28c:	ldp	x21, x22, [sp, #32]
  41f290:	ldr	x23, [sp, #48]
  41f294:	ldp	x29, x30, [sp], #64
  41f298:	ret
  41f29c:	and	x21, x21, #0xffffffffffffffbf
  41f2a0:	mov	w0, #0x1                   	// #1
  41f2a4:	orr	x21, x21, #0x100
  41f2a8:	b	41f22c <_obstack_memory_used@@Base+0xc5dc>
  41f2ac:	mov	w19, #0x8                   	// #8
  41f2b0:	ldr	x0, [x20, #32]
  41f2b4:	bl	402ae0 <free@plt>
  41f2b8:	str	xzr, [x20, #32]
  41f2bc:	b	41f284 <_obstack_memory_used@@Base+0xc634>
  41f2c0:	mov	w19, #0xc                   	// #12
  41f2c4:	mov	w0, w19
  41f2c8:	ldp	x19, x20, [sp, #16]
  41f2cc:	ldp	x21, x22, [sp, #32]
  41f2d0:	ldr	x23, [sp, #48]
  41f2d4:	ldp	x29, x30, [sp], #64
  41f2d8:	ret
  41f2dc:	nop
  41f2e0:	stp	x29, x30, [sp, #-48]!
  41f2e4:	cmp	w0, #0x10
  41f2e8:	mov	x29, sp
  41f2ec:	stp	x19, x20, [sp, #16]
  41f2f0:	stp	x21, x22, [sp, #32]
  41f2f4:	b.hi	41f370 <_obstack_memory_used@@Base+0xc720>  // b.pmore
  41f2f8:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xf3b0>
  41f2fc:	add	x1, x1, #0x228
  41f300:	mov	w4, w0
  41f304:	mov	x20, x3
  41f308:	add	x3, x1, #0x1a0
  41f30c:	add	x1, x1, #0x20
  41f310:	mov	x21, x2
  41f314:	mov	w2, #0x5                   	// #5
  41f318:	mov	x0, #0x0                   	// #0
  41f31c:	ldr	x3, [x3, w4, sxtw #3]
  41f320:	add	x1, x1, x3
  41f324:	bl	402c20 <dcgettext@plt>
  41f328:	mov	x22, x0
  41f32c:	bl	402690 <strlen@plt>
  41f330:	add	x19, x0, #0x1
  41f334:	cbz	x20, 41f350 <_obstack_memory_used@@Base+0xc700>
  41f338:	cmp	x19, x20
  41f33c:	mov	x2, x19
  41f340:	b.hi	41f364 <_obstack_memory_used@@Base+0xc714>  // b.pmore
  41f344:	mov	x1, x22
  41f348:	mov	x0, x21
  41f34c:	bl	402650 <memcpy@plt>
  41f350:	mov	x0, x19
  41f354:	ldp	x19, x20, [sp, #16]
  41f358:	ldp	x21, x22, [sp, #32]
  41f35c:	ldp	x29, x30, [sp], #48
  41f360:	ret
  41f364:	sub	x2, x20, #0x1
  41f368:	strb	wzr, [x21, x2]
  41f36c:	b	41f344 <_obstack_memory_used@@Base+0xc6f4>
  41f370:	bl	4029e0 <abort@plt>
  41f374:	nop
  41f378:	stp	x29, x30, [sp, #-32]!
  41f37c:	mov	x29, sp
  41f380:	str	x19, [sp, #16]
  41f384:	mov	x19, x0
  41f388:	ldr	x0, [x0]
  41f38c:	cbz	x0, 41f394 <_obstack_memory_used@@Base+0xc744>
  41f390:	bl	414640 <_obstack_memory_used@@Base+0x19f0>
  41f394:	ldr	x0, [x19, #32]
  41f398:	stp	xzr, xzr, [x19]
  41f39c:	bl	402ae0 <free@plt>
  41f3a0:	str	xzr, [x19, #32]
  41f3a4:	ldr	x0, [x19, #40]
  41f3a8:	bl	402ae0 <free@plt>
  41f3ac:	str	xzr, [x19, #40]
  41f3b0:	ldr	x19, [sp, #16]
  41f3b4:	ldp	x29, x30, [sp], #32
  41f3b8:	ret
  41f3bc:	nop
  41f3c0:	tst	w4, #0xfffffff8
  41f3c4:	b.ne	41f49c <_obstack_memory_used@@Base+0xc84c>  // b.any
  41f3c8:	sub	sp, sp, #0x50
  41f3cc:	stp	x29, x30, [sp, #16]
  41f3d0:	add	x29, sp, #0x10
  41f3d4:	stp	x19, x20, [sp, #32]
  41f3d8:	mov	w19, w4
  41f3dc:	mov	x20, x0
  41f3e0:	stp	x21, x22, [sp, #48]
  41f3e4:	mov	x21, x1
  41f3e8:	mov	x22, x3
  41f3ec:	str	x23, [sp, #64]
  41f3f0:	mov	x23, x2
  41f3f4:	tbnz	w19, #2, 41f450 <_obstack_memory_used@@Base+0xc800>
  41f3f8:	mov	x0, x1
  41f3fc:	bl	402690 <strlen@plt>
  41f400:	mov	x5, x0
  41f404:	ldrb	w0, [x20, #56]
  41f408:	str	w19, [sp]
  41f40c:	mov	x3, #0x0                   	// #0
  41f410:	tbz	w0, #4, 41f460 <_obstack_memory_used@@Base+0xc810>
  41f414:	mov	x1, x21
  41f418:	mov	x0, x20
  41f41c:	mov	x4, x5
  41f420:	mov	x2, x5
  41f424:	mov	x7, #0x0                   	// #0
  41f428:	mov	x6, #0x0                   	// #0
  41f42c:	bl	41a598 <_obstack_memory_used@@Base+0x7948>
  41f430:	cmp	w0, #0x0
  41f434:	cset	w0, ne  // ne = any
  41f438:	ldp	x29, x30, [sp, #16]
  41f43c:	ldp	x19, x20, [sp, #32]
  41f440:	ldp	x21, x22, [sp, #48]
  41f444:	ldr	x23, [sp, #64]
  41f448:	add	sp, sp, #0x50
  41f44c:	ret
  41f450:	ldrb	w0, [x20, #56]
  41f454:	ldp	x3, x5, [x3]
  41f458:	str	w19, [sp]
  41f45c:	tbnz	w0, #4, 41f414 <_obstack_memory_used@@Base+0xc7c4>
  41f460:	mov	x7, x22
  41f464:	mov	x6, x23
  41f468:	mov	x1, x21
  41f46c:	mov	x0, x20
  41f470:	mov	x4, x5
  41f474:	mov	x2, x5
  41f478:	bl	41a598 <_obstack_memory_used@@Base+0x7948>
  41f47c:	cmp	w0, #0x0
  41f480:	cset	w0, ne  // ne = any
  41f484:	ldp	x29, x30, [sp, #16]
  41f488:	ldp	x19, x20, [sp, #32]
  41f48c:	ldp	x21, x22, [sp, #48]
  41f490:	ldr	x23, [sp, #64]
  41f494:	add	sp, sp, #0x50
  41f498:	ret
  41f49c:	mov	w0, #0x2                   	// #2
  41f4a0:	ret
  41f4a4:	nop
  41f4a8:	mov	x6, x4
  41f4ac:	mov	x5, x2
  41f4b0:	mov	w7, #0x1                   	// #1
  41f4b4:	mov	x4, #0x0                   	// #0
  41f4b8:	b	41ed80 <_obstack_memory_used@@Base+0xc130>
  41f4bc:	nop
  41f4c0:	mov	x6, x5
  41f4c4:	mov	w7, #0x0                   	// #0
  41f4c8:	mov	x5, x2
  41f4cc:	b	41ed80 <_obstack_memory_used@@Base+0xc130>
  41f4d0:	sub	sp, sp, #0x20
  41f4d4:	mov	w8, #0x1                   	// #1
  41f4d8:	stp	x29, x30, [sp, #16]
  41f4dc:	add	x29, sp, #0x10
  41f4e0:	str	x7, [sp]
  41f4e4:	mov	x7, x6
  41f4e8:	strb	w8, [sp, #8]
  41f4ec:	mov	x6, #0x0                   	// #0
  41f4f0:	bl	41f0a8 <_obstack_memory_used@@Base+0xc458>
  41f4f4:	ldp	x29, x30, [sp, #16]
  41f4f8:	add	sp, sp, #0x20
  41f4fc:	ret
  41f500:	sub	sp, sp, #0x20
  41f504:	stp	x29, x30, [sp, #16]
  41f508:	add	x29, sp, #0x10
  41f50c:	ldr	x8, [sp, #32]
  41f510:	str	x8, [sp]
  41f514:	strb	wzr, [sp, #8]
  41f518:	bl	41f0a8 <_obstack_memory_used@@Base+0xc458>
  41f51c:	ldp	x29, x30, [sp, #16]
  41f520:	add	sp, sp, #0x20
  41f524:	ret
  41f528:	cbz	x2, 41f548 <_obstack_memory_used@@Base+0xc8f8>
  41f52c:	ldrb	w5, [x0, #56]
  41f530:	mov	w6, #0x1                   	// #1
  41f534:	bfi	w5, w6, #1, #2
  41f538:	strb	w5, [x0, #56]
  41f53c:	stp	x2, x3, [x1]
  41f540:	str	x4, [x1, #16]
  41f544:	ret
  41f548:	ldrb	w2, [x0, #56]
  41f54c:	and	w2, w2, #0xfffffff9
  41f550:	strb	w2, [x0, #56]
  41f554:	stp	xzr, xzr, [x1]
  41f558:	str	xzr, [x1, #16]
  41f55c:	ret
  41f560:	stp	x29, x30, [sp, #-48]!
  41f564:	mov	w1, #0x0                   	// #0
  41f568:	mov	x29, sp
  41f56c:	add	x2, sp, #0x28
  41f570:	stp	x19, x20, [sp, #16]
  41f574:	mov	x19, x0
  41f578:	bl	402b10 <acl_get_entry@plt>
  41f57c:	cmp	w0, #0x0
  41f580:	b.le	41f5d0 <_obstack_memory_used@@Base+0xc980>
  41f584:	mov	w20, #0x20                  	// #32
  41f588:	b	41f5ac <_obstack_memory_used@@Base+0xc95c>
  41f58c:	ldr	w3, [sp, #36]
  41f590:	cmp	w3, w1
  41f594:	ccmp	w3, #0x4, #0x4, ne  // ne = any
  41f598:	ccmp	w3, w20, #0x4, ne  // ne = any
  41f59c:	b.ne	41f5dc <_obstack_memory_used@@Base+0xc98c>  // b.any
  41f5a0:	bl	402b10 <acl_get_entry@plt>
  41f5a4:	cmp	w0, #0x0
  41f5a8:	b.le	41f5d0 <_obstack_memory_used@@Base+0xc980>
  41f5ac:	ldr	x0, [sp, #40]
  41f5b0:	add	x1, sp, #0x24
  41f5b4:	bl	4028c0 <acl_get_tag_type@plt>
  41f5b8:	mov	w3, w0
  41f5bc:	add	x2, sp, #0x28
  41f5c0:	mov	x0, x19
  41f5c4:	mov	w1, #0x1                   	// #1
  41f5c8:	tbz	w3, #31, 41f58c <_obstack_memory_used@@Base+0xc93c>
  41f5cc:	mov	w0, #0xffffffff            	// #-1
  41f5d0:	ldp	x19, x20, [sp, #16]
  41f5d4:	ldp	x29, x30, [sp], #48
  41f5d8:	ret
  41f5dc:	mov	w0, #0x1                   	// #1
  41f5e0:	ldp	x19, x20, [sp, #16]
  41f5e4:	ldp	x29, x30, [sp], #48
  41f5e8:	ret
  41f5ec:	nop
  41f5f0:	stp	x29, x30, [sp, #-16]!
  41f5f4:	mov	x29, sp
  41f5f8:	bl	4026e0 <acl_entries@plt>
  41f5fc:	cmp	w0, #0x0
  41f600:	cset	w0, gt
  41f604:	ldp	x29, x30, [sp], #16
  41f608:	ret
  41f60c:	nop
  41f610:	stp	x29, x30, [sp, #-32]!
  41f614:	mov	x29, sp
  41f618:	str	x19, [sp, #16]
  41f61c:	mov	x19, x0
  41f620:	ldr	x0, [x0, #8]
  41f624:	cbz	x0, 41f62c <_obstack_memory_used@@Base+0xc9dc>
  41f628:	bl	402d30 <acl_free@plt>
  41f62c:	ldr	x0, [x19, #16]
  41f630:	cbz	x0, 41f640 <_obstack_memory_used@@Base+0xc9f0>
  41f634:	ldr	x19, [sp, #16]
  41f638:	ldp	x29, x30, [sp], #32
  41f63c:	b	402d30 <acl_free@plt>
  41f640:	ldr	x19, [sp, #16]
  41f644:	ldp	x29, x30, [sp], #32
  41f648:	ret
  41f64c:	nop
  41f650:	stp	x29, x30, [sp, #-48]!
  41f654:	cmn	w1, #0x1
  41f658:	mov	x29, sp
  41f65c:	stp	xzr, xzr, [x3]
  41f660:	str	w2, [x3]
  41f664:	stp	x19, x20, [sp, #16]
  41f668:	mov	x19, x3
  41f66c:	mov	w20, w2
  41f670:	stp	xzr, xzr, [x3, #16]
  41f674:	str	x21, [sp, #32]
  41f678:	mov	x21, x0
  41f67c:	b.eq	41f6b0 <_obstack_memory_used@@Base+0xca60>  // b.none
  41f680:	mov	w0, w1
  41f684:	bl	402980 <acl_get_fd@plt>
  41f688:	str	x0, [x19, #8]
  41f68c:	cbz	x0, 41f6c0 <_obstack_memory_used@@Base+0xca70>
  41f690:	and	w1, w20, #0xf000
  41f694:	mov	w0, #0x0                   	// #0
  41f698:	cmp	w1, #0x4, lsl #12
  41f69c:	b.eq	41f6e4 <_obstack_memory_used@@Base+0xca94>  // b.none
  41f6a0:	ldp	x19, x20, [sp, #16]
  41f6a4:	ldr	x21, [sp, #32]
  41f6a8:	ldp	x29, x30, [sp], #48
  41f6ac:	ret
  41f6b0:	mov	w1, #0x8000                	// #32768
  41f6b4:	bl	402ac0 <acl_get_file@plt>
  41f6b8:	str	x0, [x19, #8]
  41f6bc:	cbnz	x0, 41f690 <_obstack_memory_used@@Base+0xca40>
  41f6c0:	bl	402cb0 <__errno_location@plt>
  41f6c4:	ldr	w0, [x0]
  41f6c8:	bl	41fb50 <_obstack_memory_used@@Base+0xcf00>
  41f6cc:	and	w0, w0, #0xff
  41f6d0:	neg	w0, w0
  41f6d4:	ldp	x19, x20, [sp, #16]
  41f6d8:	ldr	x21, [sp, #32]
  41f6dc:	ldp	x29, x30, [sp], #48
  41f6e0:	ret
  41f6e4:	mov	x0, x21
  41f6e8:	bl	402ac0 <acl_get_file@plt>
  41f6ec:	str	x0, [x19, #16]
  41f6f0:	cmp	x0, #0x0
  41f6f4:	csetm	w0, eq  // eq = none
  41f6f8:	ldp	x19, x20, [sp, #16]
  41f6fc:	ldr	x21, [sp, #32]
  41f700:	ldp	x29, x30, [sp], #48
  41f704:	ret
  41f708:	stp	x29, x30, [sp, #-64]!
  41f70c:	mov	x29, sp
  41f710:	stp	x21, x22, [sp, #32]
  41f714:	mov	x21, x1
  41f718:	ldr	x1, [x0, #8]
  41f71c:	stp	x19, x20, [sp, #16]
  41f720:	cbz	x1, 41f780 <_obstack_memory_used@@Base+0xcb30>
  41f724:	str	x23, [sp, #48]
  41f728:	mov	x19, x0
  41f72c:	mov	x22, x4
  41f730:	cmn	w2, #0x1
  41f734:	mov	w23, w3
  41f738:	b.eq	41f798 <_obstack_memory_used@@Base+0xcb48>  // b.none
  41f73c:	mov	w0, w2
  41f740:	bl	4026b0 <acl_set_fd@plt>
  41f744:	mov	w20, w0
  41f748:	cbz	w20, 41f7b0 <_obstack_memory_used@@Base+0xcb60>
  41f74c:	bl	402cb0 <__errno_location@plt>
  41f750:	ldr	w0, [x0]
  41f754:	bl	41fb50 <_obstack_memory_used@@Base+0xcf00>
  41f758:	tst	w0, #0xff
  41f75c:	b.ne	41f7d0 <_obstack_memory_used@@Base+0xcb80>  // b.any
  41f760:	mov	w0, #0x1                   	// #1
  41f764:	strb	w0, [x19, #24]
  41f768:	cbnz	w23, 41f7c8 <_obstack_memory_used@@Base+0xcb78>
  41f76c:	ldr	x0, [x19, #8]
  41f770:	bl	41f560 <_obstack_memory_used@@Base+0xc910>
  41f774:	ldr	x23, [sp, #48]
  41f778:	cbnz	w0, 41f784 <_obstack_memory_used@@Base+0xcb34>
  41f77c:	nop
  41f780:	mov	w20, #0x0                   	// #0
  41f784:	mov	w0, w20
  41f788:	ldp	x19, x20, [sp, #16]
  41f78c:	ldp	x21, x22, [sp, #32]
  41f790:	ldp	x29, x30, [sp], #64
  41f794:	ret
  41f798:	mov	x2, x1
  41f79c:	mov	x0, x21
  41f7a0:	mov	w1, #0x8000                	// #32768
  41f7a4:	bl	402950 <acl_set_file@plt>
  41f7a8:	mov	w20, w0
  41f7ac:	cbnz	w20, 41f74c <_obstack_memory_used@@Base+0xcafc>
  41f7b0:	ldr	w20, [x19]
  41f7b4:	mov	w0, #0x1                   	// #1
  41f7b8:	strb	w0, [x22]
  41f7bc:	and	w20, w20, #0xf000
  41f7c0:	cmp	w20, #0x4, lsl #12
  41f7c4:	b.eq	41f7e8 <_obstack_memory_used@@Base+0xcb98>  // b.none
  41f7c8:	ldr	x23, [sp, #48]
  41f7cc:	b	41f780 <_obstack_memory_used@@Base+0xcb30>
  41f7d0:	mov	w0, w20
  41f7d4:	ldp	x19, x20, [sp, #16]
  41f7d8:	ldp	x21, x22, [sp, #32]
  41f7dc:	ldr	x23, [sp, #48]
  41f7e0:	ldp	x29, x30, [sp], #64
  41f7e4:	ret
  41f7e8:	cbnz	w23, 41f81c <_obstack_memory_used@@Base+0xcbcc>
  41f7ec:	ldr	x0, [x19, #16]
  41f7f0:	cbz	x0, 41f81c <_obstack_memory_used@@Base+0xcbcc>
  41f7f4:	bl	41f5f0 <_obstack_memory_used@@Base+0xc9a0>
  41f7f8:	cbz	w0, 41f81c <_obstack_memory_used@@Base+0xcbcc>
  41f7fc:	mov	w1, w20
  41f800:	mov	x0, x21
  41f804:	ldr	x2, [x19, #16]
  41f808:	ldp	x19, x20, [sp, #16]
  41f80c:	ldp	x21, x22, [sp, #32]
  41f810:	ldr	x23, [sp, #48]
  41f814:	ldp	x29, x30, [sp], #64
  41f818:	b	402950 <acl_set_file@plt>
  41f81c:	mov	x0, x21
  41f820:	ldp	x19, x20, [sp, #16]
  41f824:	ldp	x21, x22, [sp, #32]
  41f828:	ldr	x23, [sp, #48]
  41f82c:	ldp	x29, x30, [sp], #64
  41f830:	b	402790 <acl_delete_def_file@plt>
  41f834:	nop
  41f838:	mov	w3, w1
  41f83c:	mov	w1, w2
  41f840:	cmn	w3, #0x1
  41f844:	b.eq	41f850 <_obstack_memory_used@@Base+0xcc00>  // b.none
  41f848:	mov	w0, w3
  41f84c:	b	4028f0 <fchmod@plt>
  41f850:	b	402810 <chmod@plt>
  41f854:	nop
  41f858:	stp	x29, x30, [sp, #-80]!
  41f85c:	mov	x29, sp
  41f860:	stp	x19, x20, [sp, #16]
  41f864:	mov	x19, x0
  41f868:	mov	x20, x1
  41f86c:	stp	x21, x22, [sp, #32]
  41f870:	mov	w21, w2
  41f874:	ldr	w2, [x0]
  41f878:	strb	wzr, [sp, #79]
  41f87c:	ands	w22, w2, #0xe00
  41f880:	b.ne	41f940 <_obstack_memory_used@@Base+0xccf0>  // b.any
  41f884:	ldrb	w0, [x0, #24]
  41f888:	cbnz	w0, 41f980 <_obstack_memory_used@@Base+0xcd30>
  41f88c:	mov	x1, x20
  41f890:	add	x4, sp, #0x4f
  41f894:	mov	w2, w21
  41f898:	mov	x0, x19
  41f89c:	mov	w3, #0x0                   	// #0
  41f8a0:	bl	41f708 <_obstack_memory_used@@Base+0xcab8>
  41f8a4:	ldrb	w1, [sp, #79]
  41f8a8:	cbnz	w1, 41f930 <_obstack_memory_used@@Base+0xcce0>
  41f8ac:	stp	x23, x24, [sp, #48]
  41f8b0:	ldrb	w24, [x19, #24]
  41f8b4:	cbz	w0, 41f9b4 <_obstack_memory_used@@Base+0xcd64>
  41f8b8:	bl	402cb0 <__errno_location@plt>
  41f8bc:	ldr	w23, [x0]
  41f8c0:	cbnz	w24, 41f9e0 <_obstack_memory_used@@Base+0xcd90>
  41f8c4:	ldr	x0, [x19, #8]
  41f8c8:	cbz	x0, 41f8d0 <_obstack_memory_used@@Base+0xcc80>
  41f8cc:	bl	402d30 <acl_free@plt>
  41f8d0:	ldr	w0, [x19]
  41f8d4:	bl	402970 <acl_from_mode@plt>
  41f8d8:	str	x0, [x19, #8]
  41f8dc:	cbz	x0, 41f9f4 <_obstack_memory_used@@Base+0xcda4>
  41f8e0:	mov	x1, x20
  41f8e4:	add	x4, sp, #0x4f
  41f8e8:	mov	w2, w21
  41f8ec:	mov	x0, x19
  41f8f0:	mov	w3, #0x1                   	// #1
  41f8f4:	bl	41f708 <_obstack_memory_used@@Base+0xcab8>
  41f8f8:	ldrb	w1, [sp, #79]
  41f8fc:	cbnz	w1, 41f928 <_obstack_memory_used@@Base+0xccd8>
  41f900:	cbz	w23, 41f96c <_obstack_memory_used@@Base+0xcd1c>
  41f904:	bl	402cb0 <__errno_location@plt>
  41f908:	str	w23, [x0]
  41f90c:	mov	x24, x0
  41f910:	cbz	w22, 41f9c0 <_obstack_memory_used@@Base+0xcd70>
  41f914:	ldp	x23, x24, [sp, #48]
  41f918:	mov	w0, #0xffffffff            	// #-1
  41f91c:	b	41f930 <_obstack_memory_used@@Base+0xcce0>
  41f920:	mov	w0, #0xffffffff            	// #-1
  41f924:	nop
  41f928:	cbnz	w23, 41f990 <_obstack_memory_used@@Base+0xcd40>
  41f92c:	ldp	x23, x24, [sp, #48]
  41f930:	ldp	x19, x20, [sp, #16]
  41f934:	ldp	x21, x22, [sp, #32]
  41f938:	ldp	x29, x30, [sp], #80
  41f93c:	ret
  41f940:	mov	w1, w21
  41f944:	mov	x0, x20
  41f948:	bl	41f838 <_obstack_memory_used@@Base+0xcbe8>
  41f94c:	cbnz	w0, 41f918 <_obstack_memory_used@@Base+0xccc8>
  41f950:	ldrb	w0, [x19, #24]
  41f954:	cbz	w0, 41f88c <_obstack_memory_used@@Base+0xcc3c>
  41f958:	mov	w0, #0x0                   	// #0
  41f95c:	ldp	x19, x20, [sp, #16]
  41f960:	ldp	x21, x22, [sp, #32]
  41f964:	ldp	x29, x30, [sp], #80
  41f968:	ret
  41f96c:	cbnz	w22, 41f92c <_obstack_memory_used@@Base+0xccdc>
  41f970:	cbnz	w0, 41fa08 <_obstack_memory_used@@Base+0xcdb8>
  41f974:	ldp	x23, x24, [sp, #48]
  41f978:	ldr	w2, [x19]
  41f97c:	nop
  41f980:	mov	w1, w21
  41f984:	mov	x0, x20
  41f988:	bl	41f838 <_obstack_memory_used@@Base+0xcbe8>
  41f98c:	b	41f930 <_obstack_memory_used@@Base+0xcce0>
  41f990:	bl	402cb0 <__errno_location@plt>
  41f994:	mov	x1, x0
  41f998:	mov	w0, #0xffffffff            	// #-1
  41f99c:	ldp	x19, x20, [sp, #16]
  41f9a0:	str	w23, [x1]
  41f9a4:	ldp	x21, x22, [sp, #32]
  41f9a8:	ldp	x23, x24, [sp, #48]
  41f9ac:	ldp	x29, x30, [sp], #80
  41f9b0:	ret
  41f9b4:	cbnz	w24, 41f9e4 <_obstack_memory_used@@Base+0xcd94>
  41f9b8:	mov	w23, #0x0                   	// #0
  41f9bc:	b	41f8c4 <_obstack_memory_used@@Base+0xcc74>
  41f9c0:	ldr	w2, [x19]
  41f9c4:	mov	w1, w21
  41f9c8:	mov	x0, x20
  41f9cc:	bl	41f838 <_obstack_memory_used@@Base+0xcbe8>
  41f9d0:	mov	w0, #0xffffffff            	// #-1
  41f9d4:	str	w23, [x24]
  41f9d8:	ldp	x23, x24, [sp, #48]
  41f9dc:	b	41f930 <_obstack_memory_used@@Base+0xcce0>
  41f9e0:	cbnz	w23, 41f904 <_obstack_memory_used@@Base+0xccb4>
  41f9e4:	cbz	w22, 41f974 <_obstack_memory_used@@Base+0xcd24>
  41f9e8:	mov	w0, #0x0                   	// #0
  41f9ec:	ldp	x23, x24, [sp, #48]
  41f9f0:	b	41f95c <_obstack_memory_used@@Base+0xcd0c>
  41f9f4:	ldrb	w0, [sp, #79]
  41f9f8:	cbnz	w0, 41f920 <_obstack_memory_used@@Base+0xccd0>
  41f9fc:	cbnz	w23, 41f904 <_obstack_memory_used@@Base+0xccb4>
  41fa00:	cbnz	w22, 41f914 <_obstack_memory_used@@Base+0xccc4>
  41fa04:	nop
  41fa08:	bl	402cb0 <__errno_location@plt>
  41fa0c:	mov	x24, x0
  41fa10:	ldr	w2, [x19]
  41fa14:	mov	w1, w21
  41fa18:	mov	x0, x20
  41fa1c:	ldr	w23, [x24]
  41fa20:	bl	41f838 <_obstack_memory_used@@Base+0xcbe8>
  41fa24:	cbz	w23, 41f92c <_obstack_memory_used@@Base+0xccdc>
  41fa28:	b	41f9d0 <_obstack_memory_used@@Base+0xcd80>
  41fa2c:	nop
  41fa30:	stp	x29, x30, [sp, #-288]!
  41fa34:	mov	x2, #0x101                 	// #257
  41fa38:	mov	x29, sp
  41fa3c:	add	x1, sp, #0x18
  41fa40:	bl	41fa90 <_obstack_memory_used@@Base+0xce40>
  41fa44:	cbnz	w0, 41fa80 <_obstack_memory_used@@Base+0xce30>
  41fa48:	ldrh	w0, [sp, #24]
  41fa4c:	cmp	w0, #0x43
  41fa50:	b.eq	41fa80 <_obstack_memory_used@@Base+0xce30>  // b.none
  41fa54:	ldr	w1, [sp, #24]
  41fa58:	mov	w0, #0x4f50                	// #20304
  41fa5c:	movk	w0, #0x4953, lsl #16
  41fa60:	cmp	w1, w0
  41fa64:	b.eq	41fa74 <_obstack_memory_used@@Base+0xce24>  // b.none
  41fa68:	mov	w0, #0x1                   	// #1
  41fa6c:	ldp	x29, x30, [sp], #288
  41fa70:	ret
  41fa74:	ldrh	w0, [sp, #28]
  41fa78:	cmp	w0, #0x58
  41fa7c:	b.ne	41fa68 <_obstack_memory_used@@Base+0xce18>  // b.any
  41fa80:	mov	w0, #0x0                   	// #0
  41fa84:	ldp	x29, x30, [sp], #288
  41fa88:	ret
  41fa8c:	nop
  41fa90:	stp	x29, x30, [sp, #-48]!
  41fa94:	mov	x29, sp
  41fa98:	stp	x19, x20, [sp, #16]
  41fa9c:	mov	x19, x2
  41faa0:	stp	x21, x22, [sp, #32]
  41faa4:	mov	x21, x1
  41faa8:	mov	x1, #0x0                   	// #0
  41faac:	bl	402d20 <setlocale@plt>
  41fab0:	cbz	x0, 41fb34 <_obstack_memory_used@@Base+0xcee4>
  41fab4:	mov	x20, x0
  41fab8:	bl	402690 <strlen@plt>
  41fabc:	cmp	x19, x0
  41fac0:	b.hi	41fae0 <_obstack_memory_used@@Base+0xce90>  // b.pmore
  41fac4:	mov	w22, #0x22                  	// #34
  41fac8:	cbnz	x19, 41fb08 <_obstack_memory_used@@Base+0xceb8>
  41facc:	mov	w0, w22
  41fad0:	ldp	x19, x20, [sp, #16]
  41fad4:	ldp	x21, x22, [sp, #32]
  41fad8:	ldp	x29, x30, [sp], #48
  41fadc:	ret
  41fae0:	add	x2, x0, #0x1
  41fae4:	mov	x1, x20
  41fae8:	mov	x0, x21
  41faec:	mov	w22, #0x0                   	// #0
  41faf0:	bl	402650 <memcpy@plt>
  41faf4:	mov	w0, w22
  41faf8:	ldp	x19, x20, [sp, #16]
  41fafc:	ldp	x21, x22, [sp, #32]
  41fb00:	ldp	x29, x30, [sp], #48
  41fb04:	ret
  41fb08:	sub	x19, x19, #0x1
  41fb0c:	mov	x1, x20
  41fb10:	mov	x2, x19
  41fb14:	mov	x0, x21
  41fb18:	bl	402650 <memcpy@plt>
  41fb1c:	strb	wzr, [x21, x19]
  41fb20:	mov	w0, w22
  41fb24:	ldp	x19, x20, [sp, #16]
  41fb28:	ldp	x21, x22, [sp, #32]
  41fb2c:	ldp	x29, x30, [sp], #48
  41fb30:	ret
  41fb34:	mov	w22, #0x16                  	// #22
  41fb38:	cbz	x19, 41facc <_obstack_memory_used@@Base+0xce7c>
  41fb3c:	strb	wzr, [x21]
  41fb40:	b	41facc <_obstack_memory_used@@Base+0xce7c>
  41fb44:	nop
  41fb48:	mov	x1, #0x0                   	// #0
  41fb4c:	b	402d20 <setlocale@plt>
  41fb50:	mov	w1, w0
  41fb54:	cmp	w0, #0x26
  41fb58:	b.eq	41fb84 <_obstack_memory_used@@Base+0xcf34>  // b.none
  41fb5c:	b.gt	41fb78 <_obstack_memory_used@@Base+0xcf28>
  41fb60:	cmp	w0, #0x10
  41fb64:	mov	w0, #0x0                   	// #0
  41fb68:	b.eq	41fb74 <_obstack_memory_used@@Base+0xcf24>  // b.none
  41fb6c:	cmp	w1, #0x16
  41fb70:	cset	w0, ne  // ne = any
  41fb74:	ret
  41fb78:	cmp	w0, #0x5f
  41fb7c:	cset	w0, ne  // ne = any
  41fb80:	ret
  41fb84:	mov	w0, #0x0                   	// #0
  41fb88:	ret
  41fb8c:	nop
  41fb90:	stp	x29, x30, [sp, #-64]!
  41fb94:	mov	x29, sp
  41fb98:	stp	x19, x20, [sp, #16]
  41fb9c:	adrp	x20, 437000 <_obstack_memory_used@@Base+0x243b0>
  41fba0:	add	x20, x20, #0xde0
  41fba4:	stp	x21, x22, [sp, #32]
  41fba8:	adrp	x21, 437000 <_obstack_memory_used@@Base+0x243b0>
  41fbac:	add	x21, x21, #0xdd8
  41fbb0:	sub	x20, x20, x21
  41fbb4:	mov	w22, w0
  41fbb8:	stp	x23, x24, [sp, #48]
  41fbbc:	mov	x23, x1
  41fbc0:	mov	x24, x2
  41fbc4:	bl	402608 <mbrtowc@plt-0x38>
  41fbc8:	cmp	xzr, x20, asr #3
  41fbcc:	b.eq	41fbf8 <_obstack_memory_used@@Base+0xcfa8>  // b.none
  41fbd0:	asr	x20, x20, #3
  41fbd4:	mov	x19, #0x0                   	// #0
  41fbd8:	ldr	x3, [x21, x19, lsl #3]
  41fbdc:	mov	x2, x24
  41fbe0:	add	x19, x19, #0x1
  41fbe4:	mov	x1, x23
  41fbe8:	mov	w0, w22
  41fbec:	blr	x3
  41fbf0:	cmp	x20, x19
  41fbf4:	b.ne	41fbd8 <_obstack_memory_used@@Base+0xcf88>  // b.any
  41fbf8:	ldp	x19, x20, [sp, #16]
  41fbfc:	ldp	x21, x22, [sp, #32]
  41fc00:	ldp	x23, x24, [sp, #48]
  41fc04:	ldp	x29, x30, [sp], #64
  41fc08:	ret
  41fc0c:	nop
  41fc10:	ret
  41fc14:	nop
  41fc18:	adrp	x2, 438000 <_obstack_memory_used@@Base+0x253b0>
  41fc1c:	mov	x1, #0x0                   	// #0
  41fc20:	ldr	x2, [x2, #912]
  41fc24:	b	402720 <__cxa_atexit@plt>

Disassembly of section .fini:

000000000041fc28 <.fini>:
  41fc28:	stp	x29, x30, [sp, #-16]!
  41fc2c:	mov	x29, sp
  41fc30:	ldp	x29, x30, [sp], #16
  41fc34:	ret
