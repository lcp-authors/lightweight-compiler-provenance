
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//rtmon_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000404b28 <.init>:
  404b28:	stp	x29, x30, [sp, #-16]!
  404b2c:	mov	x29, sp
  404b30:	bl	4050f0 <_start@@Base+0x50>
  404b34:	ldp	x29, x30, [sp], #16
  404b38:	ret

Disassembly of section .plt:

0000000000404b40 <memcpy@plt-0x20>:
  404b40:	stp	x16, x30, [sp, #-16]!
  404b44:	adrp	x16, 41e000 <_IO_stdin_used@@Base+0x10640>
  404b48:	ldr	x17, [x16, #4088]
  404b4c:	add	x16, x16, #0xff8
  404b50:	br	x17
  404b54:	nop
  404b58:	nop
  404b5c:	nop

0000000000404b60 <memcpy@plt>:
  404b60:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404b64:	ldr	x17, [x16]
  404b68:	add	x16, x16, #0x0
  404b6c:	br	x17

0000000000404b70 <recvmsg@plt>:
  404b70:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404b74:	ldr	x17, [x16, #8]
  404b78:	add	x16, x16, #0x8
  404b7c:	br	x17

0000000000404b80 <strtoul@plt>:
  404b80:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404b84:	ldr	x17, [x16, #16]
  404b88:	add	x16, x16, #0x10
  404b8c:	br	x17

0000000000404b90 <strlen@plt>:
  404b90:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404b94:	ldr	x17, [x16, #24]
  404b98:	add	x16, x16, #0x18
  404b9c:	br	x17

0000000000404ba0 <exit@plt>:
  404ba0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404ba4:	ldr	x17, [x16, #32]
  404ba8:	add	x16, x16, #0x20
  404bac:	br	x17

0000000000404bb0 <perror@plt>:
  404bb0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404bb4:	ldr	x17, [x16, #40]
  404bb8:	add	x16, x16, #0x28
  404bbc:	br	x17

0000000000404bc0 <strtoll@plt>:
  404bc0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404bc4:	ldr	x17, [x16, #48]
  404bc8:	add	x16, x16, #0x30
  404bcc:	br	x17

0000000000404bd0 <strtod@plt>:
  404bd0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404bd4:	ldr	x17, [x16, #56]
  404bd8:	add	x16, x16, #0x38
  404bdc:	br	x17

0000000000404be0 <geteuid@plt>:
  404be0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404be4:	ldr	x17, [x16, #64]
  404be8:	add	x16, x16, #0x40
  404bec:	br	x17

0000000000404bf0 <sethostent@plt>:
  404bf0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404bf4:	ldr	x17, [x16, #72]
  404bf8:	add	x16, x16, #0x48
  404bfc:	br	x17

0000000000404c00 <bind@plt>:
  404c00:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404c04:	ldr	x17, [x16, #80]
  404c08:	add	x16, x16, #0x50
  404c0c:	br	x17

0000000000404c10 <ftell@plt>:
  404c10:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404c14:	ldr	x17, [x16, #88]
  404c18:	add	x16, x16, #0x58
  404c1c:	br	x17

0000000000404c20 <sprintf@plt>:
  404c20:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404c24:	ldr	x17, [x16, #96]
  404c28:	add	x16, x16, #0x60
  404c2c:	br	x17

0000000000404c30 <getuid@plt>:
  404c30:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404c34:	ldr	x17, [x16, #104]
  404c38:	add	x16, x16, #0x68
  404c3c:	br	x17

0000000000404c40 <putc@plt>:
  404c40:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404c44:	ldr	x17, [x16, #112]
  404c48:	add	x16, x16, #0x70
  404c4c:	br	x17

0000000000404c50 <strftime@plt>:
  404c50:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404c54:	ldr	x17, [x16, #120]
  404c58:	add	x16, x16, #0x78
  404c5c:	br	x17

0000000000404c60 <fputc@plt>:
  404c60:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404c64:	ldr	x17, [x16, #128]
  404c68:	add	x16, x16, #0x80
  404c6c:	br	x17

0000000000404c70 <snprintf@plt>:
  404c70:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404c74:	ldr	x17, [x16, #136]
  404c78:	add	x16, x16, #0x88
  404c7c:	br	x17

0000000000404c80 <fileno@plt>:
  404c80:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404c84:	ldr	x17, [x16, #144]
  404c88:	add	x16, x16, #0x90
  404c8c:	br	x17

0000000000404c90 <localtime@plt>:
  404c90:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404c94:	ldr	x17, [x16, #152]
  404c98:	add	x16, x16, #0x98
  404c9c:	br	x17

0000000000404ca0 <fclose@plt>:
  404ca0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404ca4:	ldr	x17, [x16, #160]
  404ca8:	add	x16, x16, #0xa0
  404cac:	br	x17

0000000000404cb0 <time@plt>:
  404cb0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404cb4:	ldr	x17, [x16, #168]
  404cb8:	add	x16, x16, #0xa8
  404cbc:	br	x17

0000000000404cc0 <malloc@plt>:
  404cc0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404cc4:	ldr	x17, [x16, #176]
  404cc8:	add	x16, x16, #0xb0
  404ccc:	br	x17

0000000000404cd0 <setsockopt@plt>:
  404cd0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404cd4:	ldr	x17, [x16, #184]
  404cd8:	add	x16, x16, #0xb8
  404cdc:	br	x17

0000000000404ce0 <__isoc99_fscanf@plt>:
  404ce0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404ce4:	ldr	x17, [x16, #192]
  404ce8:	add	x16, x16, #0xc0
  404cec:	br	x17

0000000000404cf0 <__libc_start_main@plt>:
  404cf0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404cf4:	ldr	x17, [x16, #200]
  404cf8:	add	x16, x16, #0xc8
  404cfc:	br	x17

0000000000404d00 <strcat@plt>:
  404d00:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404d04:	ldr	x17, [x16, #208]
  404d08:	add	x16, x16, #0xd0
  404d0c:	br	x17

0000000000404d10 <if_indextoname@plt>:
  404d10:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404d14:	ldr	x17, [x16, #216]
  404d18:	add	x16, x16, #0xd8
  404d1c:	br	x17

0000000000404d20 <memset@plt>:
  404d20:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404d24:	ldr	x17, [x16, #224]
  404d28:	add	x16, x16, #0xe0
  404d2c:	br	x17

0000000000404d30 <gettimeofday@plt>:
  404d30:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404d34:	ldr	x17, [x16, #232]
  404d38:	add	x16, x16, #0xe8
  404d3c:	br	x17

0000000000404d40 <sendmsg@plt>:
  404d40:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404d44:	ldr	x17, [x16, #240]
  404d48:	add	x16, x16, #0xf0
  404d4c:	br	x17

0000000000404d50 <cap_get_flag@plt>:
  404d50:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404d54:	ldr	x17, [x16, #248]
  404d58:	add	x16, x16, #0xf8
  404d5c:	br	x17

0000000000404d60 <bcmp@plt>:
  404d60:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404d64:	ldr	x17, [x16, #256]
  404d68:	add	x16, x16, #0x100
  404d6c:	br	x17

0000000000404d70 <strcasecmp@plt>:
  404d70:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404d74:	ldr	x17, [x16, #264]
  404d78:	add	x16, x16, #0x108
  404d7c:	br	x17

0000000000404d80 <realloc@plt>:
  404d80:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404d84:	ldr	x17, [x16, #272]
  404d88:	add	x16, x16, #0x110
  404d8c:	br	x17

0000000000404d90 <cap_set_proc@plt>:
  404d90:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404d94:	ldr	x17, [x16, #280]
  404d98:	add	x16, x16, #0x118
  404d9c:	br	x17

0000000000404da0 <strdup@plt>:
  404da0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404da4:	ldr	x17, [x16, #288]
  404da8:	add	x16, x16, #0x120
  404dac:	br	x17

0000000000404db0 <strerror@plt>:
  404db0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404db4:	ldr	x17, [x16, #296]
  404db8:	add	x16, x16, #0x128
  404dbc:	br	x17

0000000000404dc0 <close@plt>:
  404dc0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404dc4:	ldr	x17, [x16, #304]
  404dc8:	add	x16, x16, #0x130
  404dcc:	br	x17

0000000000404dd0 <strrchr@plt>:
  404dd0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404dd4:	ldr	x17, [x16, #312]
  404dd8:	add	x16, x16, #0x138
  404ddc:	br	x17

0000000000404de0 <recv@plt>:
  404de0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404de4:	ldr	x17, [x16, #320]
  404de8:	add	x16, x16, #0x140
  404dec:	br	x17

0000000000404df0 <__gmon_start__@plt>:
  404df0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404df4:	ldr	x17, [x16, #328]
  404df8:	add	x16, x16, #0x148
  404dfc:	br	x17

0000000000404e00 <abort@plt>:
  404e00:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404e04:	ldr	x17, [x16, #336]
  404e08:	add	x16, x16, #0x150
  404e0c:	br	x17

0000000000404e10 <feof@plt>:
  404e10:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404e14:	ldr	x17, [x16, #344]
  404e18:	add	x16, x16, #0x158
  404e1c:	br	x17

0000000000404e20 <strcmp@plt>:
  404e20:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404e24:	ldr	x17, [x16, #352]
  404e28:	add	x16, x16, #0x160
  404e2c:	br	x17

0000000000404e30 <__ctype_b_loc@plt>:
  404e30:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404e34:	ldr	x17, [x16, #360]
  404e38:	add	x16, x16, #0x168
  404e3c:	br	x17

0000000000404e40 <strtol@plt>:
  404e40:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404e44:	ldr	x17, [x16, #368]
  404e48:	add	x16, x16, #0x170
  404e4c:	br	x17

0000000000404e50 <cap_get_proc@plt>:
  404e50:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404e54:	ldr	x17, [x16, #376]
  404e58:	add	x16, x16, #0x178
  404e5c:	br	x17

0000000000404e60 <fread@plt>:
  404e60:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404e64:	ldr	x17, [x16, #384]
  404e68:	add	x16, x16, #0x180
  404e6c:	br	x17

0000000000404e70 <gethostbyaddr@plt>:
  404e70:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404e74:	ldr	x17, [x16, #392]
  404e78:	add	x16, x16, #0x188
  404e7c:	br	x17

0000000000404e80 <free@plt>:
  404e80:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404e84:	ldr	x17, [x16, #400]
  404e88:	add	x16, x16, #0x190
  404e8c:	br	x17

0000000000404e90 <inet_pton@plt>:
  404e90:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404e94:	ldr	x17, [x16, #408]
  404e98:	add	x16, x16, #0x198
  404e9c:	br	x17

0000000000404ea0 <send@plt>:
  404ea0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404ea4:	ldr	x17, [x16, #416]
  404ea8:	add	x16, x16, #0x1a0
  404eac:	br	x17

0000000000404eb0 <strspn@plt>:
  404eb0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404eb4:	ldr	x17, [x16, #424]
  404eb8:	add	x16, x16, #0x1a8
  404ebc:	br	x17

0000000000404ec0 <strchr@plt>:
  404ec0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404ec4:	ldr	x17, [x16, #432]
  404ec8:	add	x16, x16, #0x1b0
  404ecc:	br	x17

0000000000404ed0 <strtoull@plt>:
  404ed0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404ed4:	ldr	x17, [x16, #440]
  404ed8:	add	x16, x16, #0x1b8
  404edc:	br	x17

0000000000404ee0 <fwrite@plt>:
  404ee0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404ee4:	ldr	x17, [x16, #448]
  404ee8:	add	x16, x16, #0x1c0
  404eec:	br	x17

0000000000404ef0 <socket@plt>:
  404ef0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404ef4:	ldr	x17, [x16, #456]
  404ef8:	add	x16, x16, #0x1c8
  404efc:	br	x17

0000000000404f00 <fflush@plt>:
  404f00:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404f04:	ldr	x17, [x16, #464]
  404f08:	add	x16, x16, #0x1d0
  404f0c:	br	x17

0000000000404f10 <strcpy@plt>:
  404f10:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404f14:	ldr	x17, [x16, #472]
  404f18:	add	x16, x16, #0x1d8
  404f1c:	br	x17

0000000000404f20 <fopen64@plt>:
  404f20:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404f24:	ldr	x17, [x16, #480]
  404f28:	add	x16, x16, #0x1e0
  404f2c:	br	x17

0000000000404f30 <cap_clear@plt>:
  404f30:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404f34:	ldr	x17, [x16, #488]
  404f38:	add	x16, x16, #0x1e8
  404f3c:	br	x17

0000000000404f40 <isatty@plt>:
  404f40:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404f44:	ldr	x17, [x16, #496]
  404f48:	add	x16, x16, #0x1f0
  404f4c:	br	x17

0000000000404f50 <sysconf@plt>:
  404f50:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404f54:	ldr	x17, [x16, #504]
  404f58:	add	x16, x16, #0x1f8
  404f5c:	br	x17

0000000000404f60 <asctime@plt>:
  404f60:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404f64:	ldr	x17, [x16, #512]
  404f68:	add	x16, x16, #0x200
  404f6c:	br	x17

0000000000404f70 <cap_free@plt>:
  404f70:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404f74:	ldr	x17, [x16, #520]
  404f78:	add	x16, x16, #0x208
  404f7c:	br	x17

0000000000404f80 <if_nametoindex@plt>:
  404f80:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404f84:	ldr	x17, [x16, #528]
  404f88:	add	x16, x16, #0x210
  404f8c:	br	x17

0000000000404f90 <strchrnul@plt>:
  404f90:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404f94:	ldr	x17, [x16, #536]
  404f98:	add	x16, x16, #0x218
  404f9c:	br	x17

0000000000404fa0 <strstr@plt>:
  404fa0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404fa4:	ldr	x17, [x16, #544]
  404fa8:	add	x16, x16, #0x220
  404fac:	br	x17

0000000000404fb0 <__isoc99_sscanf@plt>:
  404fb0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404fb4:	ldr	x17, [x16, #552]
  404fb8:	add	x16, x16, #0x228
  404fbc:	br	x17

0000000000404fc0 <strncpy@plt>:
  404fc0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404fc4:	ldr	x17, [x16, #560]
  404fc8:	add	x16, x16, #0x230
  404fcc:	br	x17

0000000000404fd0 <strcspn@plt>:
  404fd0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404fd4:	ldr	x17, [x16, #568]
  404fd8:	add	x16, x16, #0x238
  404fdc:	br	x17

0000000000404fe0 <vfprintf@plt>:
  404fe0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404fe4:	ldr	x17, [x16, #576]
  404fe8:	add	x16, x16, #0x240
  404fec:	br	x17

0000000000404ff0 <printf@plt>:
  404ff0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404ff4:	ldr	x17, [x16, #584]
  404ff8:	add	x16, x16, #0x248
  404ffc:	br	x17

0000000000405000 <__assert_fail@plt>:
  405000:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405004:	ldr	x17, [x16, #592]
  405008:	add	x16, x16, #0x250
  40500c:	br	x17

0000000000405010 <__errno_location@plt>:
  405010:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405014:	ldr	x17, [x16, #600]
  405018:	add	x16, x16, #0x258
  40501c:	br	x17

0000000000405020 <getenv@plt>:
  405020:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405024:	ldr	x17, [x16, #608]
  405028:	add	x16, x16, #0x260
  40502c:	br	x17

0000000000405030 <putchar@plt>:
  405030:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405034:	ldr	x17, [x16, #616]
  405038:	add	x16, x16, #0x268
  40503c:	br	x17

0000000000405040 <__getdelim@plt>:
  405040:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405044:	ldr	x17, [x16, #624]
  405048:	add	x16, x16, #0x270
  40504c:	br	x17

0000000000405050 <getsockname@plt>:
  405050:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405054:	ldr	x17, [x16, #632]
  405058:	add	x16, x16, #0x278
  40505c:	br	x17

0000000000405060 <fprintf@plt>:
  405060:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405064:	ldr	x17, [x16, #640]
  405068:	add	x16, x16, #0x280
  40506c:	br	x17

0000000000405070 <fgets@plt>:
  405070:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405074:	ldr	x17, [x16, #648]
  405078:	add	x16, x16, #0x288
  40507c:	br	x17

0000000000405080 <inet_ntop@plt>:
  405080:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405084:	ldr	x17, [x16, #656]
  405088:	add	x16, x16, #0x290
  40508c:	br	x17

0000000000405090 <ferror@plt>:
  405090:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405094:	ldr	x17, [x16, #664]
  405098:	add	x16, x16, #0x298
  40509c:	br	x17

Disassembly of section .text:

00000000004050a0 <_start@@Base>:
  4050a0:	mov	x29, #0x0                   	// #0
  4050a4:	mov	x30, #0x0                   	// #0
  4050a8:	mov	x5, x0
  4050ac:	ldr	x1, [sp]
  4050b0:	add	x2, sp, #0x8
  4050b4:	mov	x6, sp
  4050b8:	movz	x0, #0x0, lsl #48
  4050bc:	movk	x0, #0x0, lsl #32
  4050c0:	movk	x0, #0x40, lsl #16
  4050c4:	movk	x0, #0x51ac
  4050c8:	movz	x3, #0x0, lsl #48
  4050cc:	movk	x3, #0x0, lsl #32
  4050d0:	movk	x3, #0x40, lsl #16
  4050d4:	movk	x3, #0xd928
  4050d8:	movz	x4, #0x0, lsl #48
  4050dc:	movk	x4, #0x0, lsl #32
  4050e0:	movk	x4, #0x40, lsl #16
  4050e4:	movk	x4, #0xd9a8
  4050e8:	bl	404cf0 <__libc_start_main@plt>
  4050ec:	bl	404e00 <abort@plt>
  4050f0:	adrp	x0, 41e000 <_IO_stdin_used@@Base+0x10640>
  4050f4:	ldr	x0, [x0, #4040]
  4050f8:	cbz	x0, 405100 <_start@@Base+0x60>
  4050fc:	b	404df0 <__gmon_start__@plt>
  405100:	ret
  405104:	nop
  405108:	adrp	x0, 41f000 <memcpy@GLIBC_2.17>
  40510c:	add	x0, x0, #0x2c0
  405110:	adrp	x1, 41f000 <memcpy@GLIBC_2.17>
  405114:	add	x1, x1, #0x2c0
  405118:	cmp	x1, x0
  40511c:	b.eq	405134 <_start@@Base+0x94>  // b.none
  405120:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  405124:	ldr	x1, [x1, #2504]
  405128:	cbz	x1, 405134 <_start@@Base+0x94>
  40512c:	mov	x16, x1
  405130:	br	x16
  405134:	ret
  405138:	adrp	x0, 41f000 <memcpy@GLIBC_2.17>
  40513c:	add	x0, x0, #0x2c0
  405140:	adrp	x1, 41f000 <memcpy@GLIBC_2.17>
  405144:	add	x1, x1, #0x2c0
  405148:	sub	x1, x1, x0
  40514c:	lsr	x2, x1, #63
  405150:	add	x1, x2, x1, asr #3
  405154:	cmp	xzr, x1, asr #1
  405158:	asr	x1, x1, #1
  40515c:	b.eq	405174 <_start@@Base+0xd4>  // b.none
  405160:	adrp	x2, 40d000 <addraw_l@@Base+0xac>
  405164:	ldr	x2, [x2, #2512]
  405168:	cbz	x2, 405174 <_start@@Base+0xd4>
  40516c:	mov	x16, x2
  405170:	br	x16
  405174:	ret
  405178:	stp	x29, x30, [sp, #-32]!
  40517c:	mov	x29, sp
  405180:	str	x19, [sp, #16]
  405184:	adrp	x19, 41f000 <memcpy@GLIBC_2.17>
  405188:	ldrb	w0, [x19, #712]
  40518c:	cbnz	w0, 40519c <_start@@Base+0xfc>
  405190:	bl	405108 <_start@@Base+0x68>
  405194:	mov	w0, #0x1                   	// #1
  405198:	strb	w0, [x19, #712]
  40519c:	ldr	x19, [sp, #16]
  4051a0:	ldp	x29, x30, [sp], #32
  4051a4:	ret
  4051a8:	b	405138 <_start@@Base+0x98>

00000000004051ac <main@@Base>:
  4051ac:	sub	sp, sp, #0x150
  4051b0:	cmp	w0, #0x2
  4051b4:	stp	x29, x30, [sp, #240]
  4051b8:	stp	x28, x27, [sp, #256]
  4051bc:	stp	x26, x25, [sp, #272]
  4051c0:	stp	x24, x23, [sp, #288]
  4051c4:	stp	x22, x21, [sp, #304]
  4051c8:	stp	x20, x19, [sp, #320]
  4051cc:	add	x29, sp, #0xf0
  4051d0:	b.lt	40555c <main@@Base+0x3b0>  // b.tstop
  4051d4:	adrp	x21, 40d000 <addraw_l@@Base+0xac>
  4051d8:	adrp	x22, 40d000 <addraw_l@@Base+0xac>
  4051dc:	adrp	x23, 40d000 <addraw_l@@Base+0xac>
  4051e0:	adrp	x28, 40d000 <addraw_l@@Base+0xac>
  4051e4:	adrp	x25, 40d000 <addraw_l@@Base+0xac>
  4051e8:	mov	w20, w0
  4051ec:	mov	x26, x1
  4051f0:	mov	w19, wzr
  4051f4:	mov	w8, #0xffffffff            	// #-1
  4051f8:	add	x21, x21, #0x9d8
  4051fc:	add	x22, x22, #0xa20
  405200:	add	x23, x23, #0xa23
  405204:	add	x28, x28, #0x9e0
  405208:	add	x25, x25, #0x9e5
  40520c:	str	xzr, [sp, #16]
  405210:	str	xzr, [sp]
  405214:	stp	wzr, w8, [sp, #8]
  405218:	b	405234 <main@@Base+0x88>
  40521c:	mov	w19, #0x2                   	// #2
  405220:	mov	x27, x26
  405224:	cmp	w20, #0x2
  405228:	sub	w20, w20, #0x1
  40522c:	add	x26, x27, #0x8
  405230:	b.le	4053b0 <main@@Base+0x204>
  405234:	mov	x27, x26
  405238:	ldr	x0, [x27, #8]!
  40523c:	mov	x1, x21
  405240:	bl	406f90 <matches@@Base>
  405244:	tbz	w0, #0, 405308 <main@@Base+0x15c>
  405248:	ldr	x24, [x27]
  40524c:	mov	x1, x22
  405250:	mov	x0, x24
  405254:	bl	404e20 <strcmp@plt>
  405258:	cbz	w0, 40521c <main@@Base+0x70>
  40525c:	mov	x0, x24
  405260:	mov	x1, x23
  405264:	bl	404e20 <strcmp@plt>
  405268:	cbz	w0, 40535c <main@@Base+0x1b0>
  40526c:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  405270:	mov	x0, x24
  405274:	add	x1, x1, #0xa26
  405278:	bl	404e20 <strcmp@plt>
  40527c:	cbz	w0, 405364 <main@@Base+0x1b8>
  405280:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  405284:	mov	x0, x24
  405288:	add	x1, x1, #0xa29
  40528c:	bl	406f90 <matches@@Base>
  405290:	tbz	w0, #0, 405508 <main@@Base+0x35c>
  405294:	ldr	x0, [x27]
  405298:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  40529c:	add	x1, x1, #0xa50
  4052a0:	bl	406f90 <matches@@Base>
  4052a4:	tbz	w0, #0, 40536c <main@@Base+0x1c0>
  4052a8:	ldr	x0, [x27]
  4052ac:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  4052b0:	add	x1, x1, #0x665
  4052b4:	bl	406f90 <matches@@Base>
  4052b8:	tbz	w0, #0, 405384 <main@@Base+0x1d8>
  4052bc:	ldr	x0, [x27]
  4052c0:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  4052c4:	add	x1, x1, #0xa55
  4052c8:	bl	406f90 <matches@@Base>
  4052cc:	tbz	w0, #0, 405390 <main@@Base+0x1e4>
  4052d0:	ldr	x0, [x27]
  4052d4:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  4052d8:	add	x1, x1, #0xa5d
  4052dc:	bl	406f90 <matches@@Base>
  4052e0:	tbz	w0, #0, 4053a0 <main@@Base+0x1f4>
  4052e4:	ldr	x24, [x27]
  4052e8:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  4052ec:	add	x1, x1, #0xa63
  4052f0:	mov	x0, x24
  4052f4:	bl	404e20 <strcmp@plt>
  4052f8:	cbnz	w0, 405524 <main@@Base+0x378>
  4052fc:	mov	w8, #0xffffffff            	// #-1
  405300:	str	w8, [sp, #12]
  405304:	b	405220 <main@@Base+0x74>
  405308:	cmp	w20, #0x2
  40530c:	b.le	405558 <main@@Base+0x3ac>
  405310:	ldr	x26, [x26, #16]
  405314:	mov	x1, x28
  405318:	sub	w20, w20, #0x1
  40531c:	mov	x0, x26
  405320:	bl	404e20 <strcmp@plt>
  405324:	cbz	w0, 405354 <main@@Base+0x1a8>
  405328:	mov	x0, x26
  40532c:	mov	x1, x25
  405330:	bl	404e20 <strcmp@plt>
  405334:	cbz	w0, 40534c <main@@Base+0x1a0>
  405338:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40533c:	mov	x0, x26
  405340:	add	x1, x1, #0x665
  405344:	bl	404e20 <strcmp@plt>
  405348:	cbnz	w0, 4054dc <main@@Base+0x330>
  40534c:	mov	w19, #0xa                   	// #10
  405350:	b	405224 <main@@Base+0x78>
  405354:	mov	w19, #0x2                   	// #2
  405358:	b	405224 <main@@Base+0x78>
  40535c:	mov	w19, #0xa                   	// #10
  405360:	b	405220 <main@@Base+0x74>
  405364:	mov	w19, #0x11                  	// #17
  405368:	b	405220 <main@@Base+0x74>
  40536c:	cmp	w20, #0x2
  405370:	b.le	405558 <main@@Base+0x3ac>
  405374:	ldr	x8, [x26, #16]
  405378:	sub	w20, w20, #0x1
  40537c:	str	x8, [sp, #16]
  405380:	b	405224 <main@@Base+0x78>
  405384:	mov	w8, #0x1                   	// #1
  405388:	stp	w8, wzr, [sp, #8]
  40538c:	b	405220 <main@@Base+0x74>
  405390:	mov	w8, #0x1                   	// #1
  405394:	str	wzr, [sp, #12]
  405398:	str	w8, [sp, #4]
  40539c:	b	405220 <main@@Base+0x74>
  4053a0:	mov	w8, #0x1                   	// #1
  4053a4:	str	wzr, [sp, #12]
  4053a8:	str	w8, [sp]
  4053ac:	b	405220 <main@@Base+0x74>
  4053b0:	ldr	x0, [sp, #16]
  4053b4:	cbz	x0, 40555c <main@@Base+0x3b0>
  4053b8:	ldp	w8, w9, [sp, #8]
  4053bc:	cmp	w8, #0x0
  4053c0:	cset	w8, ne  // ne = any
  4053c4:	orr	w20, w9, w8
  4053c8:	ldr	w8, [sp, #4]
  4053cc:	cbz	w8, 4053ec <main@@Base+0x240>
  4053d0:	orr	w8, w20, #0x10
  4053d4:	tst	w19, #0xfffffffd
  4053d8:	csel	w20, w8, w20, eq  // eq = none
  4053dc:	cmp	w19, #0xa
  4053e0:	b.eq	4053e8 <main@@Base+0x23c>  // b.none
  4053e4:	cbnz	w19, 4053ec <main@@Base+0x240>
  4053e8:	orr	w20, w20, #0x100
  4053ec:	ldr	w8, [sp]
  4053f0:	cbz	w8, 405410 <main@@Base+0x264>
  4053f4:	orr	w8, w20, #0x40
  4053f8:	tst	w19, #0xfffffffd
  4053fc:	csel	w20, w8, w20, eq  // eq = none
  405400:	cmp	w19, #0xa
  405404:	b.eq	40540c <main@@Base+0x260>  // b.none
  405408:	cbnz	w19, 405410 <main@@Base+0x264>
  40540c:	orr	w20, w20, #0x400
  405410:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  405414:	add	x1, x1, #0xac9
  405418:	bl	404f20 <fopen64@plt>
  40541c:	cbz	x0, 405580 <main@@Base+0x3d4>
  405420:	mov	x19, x0
  405424:	add	x0, sp, #0x18
  405428:	mov	w1, w20
  40542c:	bl	40b2a4 <rtnl_open@@Base>
  405430:	tbnz	w0, #31, 405594 <main@@Base+0x3e8>
  405434:	add	x0, sp, #0x18
  405438:	mov	w1, wzr
  40543c:	bl	40b7bc <rtnl_linkdump_req@@Base>
  405440:	tbnz	w0, #31, 40559c <main@@Base+0x3f0>
  405444:	mov	x8, #0x18                  	// #24
  405448:	movk	x8, #0xf, lsl #32
  40544c:	add	x0, sp, #0x50
  405450:	mov	x1, xzr
  405454:	stp	x8, xzr, [sp, #104]
  405458:	bl	404d30 <gettimeofday@plt>
  40545c:	ldr	q0, [sp, #80]
  405460:	add	x0, sp, #0x68
  405464:	mov	w1, #0x1                   	// #1
  405468:	mov	w2, #0x18                  	// #24
  40546c:	xtn	v0.2s, v0.2d
  405470:	mov	x3, x19
  405474:	str	d0, [sp, #120]
  405478:	mov	w20, #0x1                   	// #1
  40547c:	bl	404ee0 <fwrite@plt>
  405480:	adrp	x1, 405000 <__assert_fail@plt>
  405484:	add	x1, x1, #0x60c
  405488:	add	x0, sp, #0x18
  40548c:	mov	x2, x19
  405490:	mov	w3, wzr
  405494:	bl	40bd3c <rtnl_dump_filter_nc@@Base>
  405498:	tbz	w0, #31, 4055b0 <main@@Base+0x404>
  40549c:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  4054a0:	ldr	x3, [x8, #704]
  4054a4:	adrp	x0, 40d000 <addraw_l@@Base+0xac>
  4054a8:	add	x0, x0, #0xaf1
  4054ac:	mov	w1, #0x10                  	// #16
  4054b0:	mov	w2, #0x1                   	// #1
  4054b4:	bl	404ee0 <fwrite@plt>
  4054b8:	ldp	x20, x19, [sp, #320]
  4054bc:	ldp	x22, x21, [sp, #304]
  4054c0:	ldp	x24, x23, [sp, #288]
  4054c4:	ldp	x26, x25, [sp, #272]
  4054c8:	ldp	x28, x27, [sp, #256]
  4054cc:	ldp	x29, x30, [sp, #240]
  4054d0:	mov	w0, #0x1                   	// #1
  4054d4:	add	sp, sp, #0x150
  4054d8:	ret
  4054dc:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  4054e0:	add	x1, x1, #0x9eb
  4054e4:	mov	x0, x26
  4054e8:	bl	404e20 <strcmp@plt>
  4054ec:	cbz	w0, 405558 <main@@Base+0x3ac>
  4054f0:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  4054f4:	ldr	x0, [x8, #704]
  4054f8:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  4054fc:	add	x1, x1, #0x9f0
  405500:	mov	x2, x26
  405504:	b	40554c <main@@Base+0x3a0>
  405508:	adrp	x0, 40d000 <addraw_l@@Base+0xac>
  40550c:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  405510:	add	x0, x0, #0xa32
  405514:	add	x1, x1, #0xbc8
  405518:	bl	404ff0 <printf@plt>
  40551c:	mov	w0, wzr
  405520:	bl	404ba0 <exit@plt>
  405524:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  405528:	add	x1, x1, #0x9eb
  40552c:	mov	x0, x24
  405530:	bl	406f90 <matches@@Base>
  405534:	tbz	w0, #0, 405558 <main@@Base+0x3ac>
  405538:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  40553c:	ldr	x0, [x8, #704]
  405540:	ldr	x2, [x27]
  405544:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  405548:	add	x1, x1, #0xa67
  40554c:	bl	405060 <fprintf@plt>
  405550:	mov	w0, #0xffffffff            	// #-1
  405554:	bl	404ba0 <exit@plt>
  405558:	bl	4055e0 <main@@Base+0x434>
  40555c:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  405560:	ldr	x3, [x8, #704]
  405564:	adrp	x0, 40d000 <addraw_l@@Base+0xac>
  405568:	add	x0, x0, #0xa94
  40556c:	mov	w1, #0x34                  	// #52
  405570:	mov	w2, #0x1                   	// #1
  405574:	bl	404ee0 <fwrite@plt>
  405578:	mov	w0, #0xffffffff            	// #-1
  40557c:	bl	404ba0 <exit@plt>
  405580:	adrp	x0, 40d000 <addraw_l@@Base+0xac>
  405584:	add	x0, x0, #0xacb
  405588:	bl	404bb0 <perror@plt>
  40558c:	mov	w0, #0xffffffff            	// #-1
  405590:	bl	404ba0 <exit@plt>
  405594:	mov	w0, #0x1                   	// #1
  405598:	bl	404ba0 <exit@plt>
  40559c:	adrp	x0, 40d000 <addraw_l@@Base+0xac>
  4055a0:	add	x0, x0, #0xad8
  4055a4:	bl	404bb0 <perror@plt>
  4055a8:	mov	w0, #0x1                   	// #1
  4055ac:	bl	404ba0 <exit@plt>
  4055b0:	adrp	x1, 405000 <__assert_fail@plt>
  4055b4:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  4055b8:	add	x1, x1, #0x6a4
  4055bc:	add	x0, sp, #0x18
  4055c0:	mov	x2, x19
  4055c4:	strb	w20, [x8, #716]
  4055c8:	bl	40c79c <rtnl_listen@@Base>
  4055cc:	tbz	w0, #31, 4055d8 <main@@Base+0x42c>
  4055d0:	mov	w0, #0x2                   	// #2
  4055d4:	bl	404ba0 <exit@plt>
  4055d8:	mov	w0, wzr
  4055dc:	bl	404ba0 <exit@plt>
  4055e0:	stp	x29, x30, [sp, #-16]!
  4055e4:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  4055e8:	ldr	x3, [x8, #704]
  4055ec:	adrp	x0, 40d000 <addraw_l@@Base+0xac>
  4055f0:	add	x0, x0, #0xb02
  4055f4:	mov	w1, #0xc5                  	// #197
  4055f8:	mov	w2, #0x1                   	// #1
  4055fc:	mov	x29, sp
  405600:	bl	404ee0 <fwrite@plt>
  405604:	mov	w0, #0xffffffff            	// #-1
  405608:	bl	404ba0 <exit@plt>
  40560c:	sub	sp, sp, #0xb0
  405610:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  405614:	ldrb	w8, [x8, #716]
  405618:	stp	x20, x19, [sp, #160]
  40561c:	mov	x19, x1
  405620:	mov	x20, x0
  405624:	cmp	w8, #0x1
  405628:	stp	x29, x30, [sp, #144]
  40562c:	add	x29, sp, #0x90
  405630:	b.ne	40566c <main@@Base+0x4c0>  // b.any
  405634:	mov	x8, #0x18                  	// #24
  405638:	movk	x8, #0xf, lsl #32
  40563c:	mov	x0, sp
  405640:	mov	x1, xzr
  405644:	stp	x8, xzr, [sp, #16]
  405648:	bl	404d30 <gettimeofday@plt>
  40564c:	ldr	q0, [sp]
  405650:	add	x0, sp, #0x10
  405654:	mov	w1, #0x1                   	// #1
  405658:	mov	w2, #0x18                  	// #24
  40565c:	xtn	v0.2s, v0.2d
  405660:	mov	x3, x19
  405664:	str	d0, [sp, #32]
  405668:	bl	404ee0 <fwrite@plt>
  40566c:	ldr	w8, [x20]
  405670:	mov	w1, #0x1                   	// #1
  405674:	mov	x0, x20
  405678:	mov	x3, x19
  40567c:	add	w8, w8, #0x3
  405680:	and	w2, w8, #0xfffffffc
  405684:	bl	404ee0 <fwrite@plt>
  405688:	mov	x0, x19
  40568c:	bl	404f00 <fflush@plt>
  405690:	ldp	x20, x19, [sp, #160]
  405694:	ldp	x29, x30, [sp, #144]
  405698:	mov	w0, wzr
  40569c:	add	sp, sp, #0xb0
  4056a0:	ret
  4056a4:	sub	sp, sp, #0xb0
  4056a8:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  4056ac:	ldrb	w8, [x8, #716]
  4056b0:	stp	x20, x19, [sp, #160]
  4056b4:	mov	x19, x2
  4056b8:	mov	x20, x1
  4056bc:	cmp	w8, #0x1
  4056c0:	stp	x29, x30, [sp, #144]
  4056c4:	add	x29, sp, #0x90
  4056c8:	b.ne	405704 <main@@Base+0x558>  // b.any
  4056cc:	mov	x8, #0x18                  	// #24
  4056d0:	movk	x8, #0xf, lsl #32
  4056d4:	mov	x0, sp
  4056d8:	mov	x1, xzr
  4056dc:	stp	x8, xzr, [sp, #16]
  4056e0:	bl	404d30 <gettimeofday@plt>
  4056e4:	ldr	q0, [sp]
  4056e8:	add	x0, sp, #0x10
  4056ec:	mov	w1, #0x1                   	// #1
  4056f0:	mov	w2, #0x18                  	// #24
  4056f4:	xtn	v0.2s, v0.2d
  4056f8:	mov	x3, x19
  4056fc:	str	d0, [sp, #32]
  405700:	bl	404ee0 <fwrite@plt>
  405704:	ldr	w8, [x20]
  405708:	mov	w1, #0x1                   	// #1
  40570c:	mov	x0, x20
  405710:	mov	x3, x19
  405714:	add	w8, w8, #0x3
  405718:	and	w2, w8, #0xfffffffc
  40571c:	bl	404ee0 <fwrite@plt>
  405720:	mov	x0, x19
  405724:	bl	404f00 <fflush@plt>
  405728:	ldp	x20, x19, [sp, #160]
  40572c:	ldp	x29, x30, [sp, #144]
  405730:	mov	w0, wzr
  405734:	add	sp, sp, #0xb0
  405738:	ret

000000000040573c <read_prop@@Base>:
  40573c:	sub	sp, sp, #0x110
  405740:	stp	x20, x19, [sp, #256]
  405744:	mov	x19, x2
  405748:	mov	x20, x1
  40574c:	adrp	x2, 40d000 <addraw_l@@Base+0xac>
  405750:	mov	x3, x0
  405754:	add	x2, x2, #0xca3
  405758:	add	x0, sp, #0x60
  40575c:	mov	w1, #0x80                  	// #128
  405760:	mov	x4, x20
  405764:	stp	x29, x30, [sp, #224]
  405768:	stp	x28, x21, [sp, #240]
  40576c:	add	x29, sp, #0xe0
  405770:	bl	404c70 <snprintf@plt>
  405774:	cmp	w0, #0x1
  405778:	b.lt	405824 <read_prop@@Base+0xe8>  // b.tstop
  40577c:	cmp	w0, #0x80
  405780:	b.cs	405824 <read_prop@@Base+0xe8>  // b.hs, b.nlast
  405784:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  405788:	add	x1, x1, #0x2d7
  40578c:	add	x0, sp, #0x60
  405790:	bl	404f20 <fopen64@plt>
  405794:	cbz	x0, 405848 <read_prop@@Base+0x10c>
  405798:	mov	x21, x0
  40579c:	add	x0, sp, #0x10
  4057a0:	mov	w1, #0x50                  	// #80
  4057a4:	mov	x2, x21
  4057a8:	bl	405070 <fgets@plt>
  4057ac:	cbz	x0, 40587c <read_prop@@Base+0x140>
  4057b0:	add	x0, sp, #0x10
  4057b4:	mov	w1, #0xa                   	// #10
  4057b8:	add	x20, sp, #0x10
  4057bc:	bl	404ec0 <strchr@plt>
  4057c0:	cbz	x0, 4057c8 <read_prop@@Base+0x8c>
  4057c4:	strb	wzr, [x0]
  4057c8:	mov	x0, x21
  4057cc:	bl	404ca0 <fclose@plt>
  4057d0:	add	x0, sp, #0x10
  4057d4:	add	x1, sp, #0x8
  4057d8:	mov	w2, wzr
  4057dc:	bl	404e40 <strtol@plt>
  4057e0:	ldr	x8, [sp, #8]
  4057e4:	cmp	x20, x8
  4057e8:	b.eq	4058a8 <read_prop@@Base+0x16c>  // b.none
  4057ec:	ldrb	w8, [x8]
  4057f0:	cbnz	w8, 4058a8 <read_prop@@Base+0x16c>
  4057f4:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
  4057f8:	add	x8, x0, x8
  4057fc:	mov	x20, x0
  405800:	cmp	x8, #0x1
  405804:	b.hi	405818 <read_prop@@Base+0xdc>  // b.pmore
  405808:	bl	405010 <__errno_location@plt>
  40580c:	ldr	w8, [x0]
  405810:	cmp	w8, #0x22
  405814:	b.eq	4058c8 <read_prop@@Base+0x18c>  // b.none
  405818:	mov	w0, wzr
  40581c:	str	x20, [x19]
  405820:	b	405914 <read_prop@@Base+0x1d8>
  405824:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  405828:	ldr	x8, [x8, #3992]
  40582c:	adrp	x0, 40d000 <addraw_l@@Base+0xac>
  405830:	add	x0, x0, #0xcb8
  405834:	mov	w1, #0x26                  	// #38
  405838:	ldr	x3, [x8]
  40583c:	mov	w2, #0x1                   	// #1
  405840:	bl	404ee0 <fwrite@plt>
  405844:	b	405910 <read_prop@@Base+0x1d4>
  405848:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  40584c:	ldr	x8, [x8, #3992]
  405850:	ldr	x19, [x8]
  405854:	bl	405010 <__errno_location@plt>
  405858:	ldr	w0, [x0]
  40585c:	bl	404db0 <strerror@plt>
  405860:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  405864:	mov	x3, x0
  405868:	add	x1, x1, #0xcdf
  40586c:	add	x2, sp, #0x60
  405870:	mov	x0, x19
  405874:	bl	405060 <fprintf@plt>
  405878:	b	405910 <read_prop@@Base+0x1d4>
  40587c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  405880:	ldr	x8, [x8, #3992]
  405884:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  405888:	add	x1, x1, #0xced
  40588c:	add	x3, sp, #0x60
  405890:	ldr	x0, [x8]
  405894:	mov	x2, x20
  405898:	bl	405060 <fprintf@plt>
  40589c:	mov	x0, x21
  4058a0:	bl	404ca0 <fclose@plt>
  4058a4:	b	4058f4 <read_prop@@Base+0x1b8>
  4058a8:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  4058ac:	ldr	x8, [x8, #3992]
  4058b0:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  4058b4:	add	x1, x1, #0xd1c
  4058b8:	add	x2, sp, #0x10
  4058bc:	ldr	x0, [x8]
  4058c0:	add	x3, sp, #0x60
  4058c4:	b	4058f0 <read_prop@@Base+0x1b4>
  4058c8:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  4058cc:	ldr	x8, [x8, #3992]
  4058d0:	mov	w0, #0x22                  	// #34
  4058d4:	ldr	x19, [x8]
  4058d8:	bl	404db0 <strerror@plt>
  4058dc:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  4058e0:	mov	x3, x0
  4058e4:	add	x1, x1, #0xd43
  4058e8:	add	x2, sp, #0x60
  4058ec:	mov	x0, x19
  4058f0:	bl	405060 <fprintf@plt>
  4058f4:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  4058f8:	ldr	x8, [x8, #3992]
  4058fc:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  405900:	add	x1, x1, #0xd51
  405904:	add	x2, sp, #0x60
  405908:	ldr	x0, [x8]
  40590c:	bl	405060 <fprintf@plt>
  405910:	mov	w0, #0xffffffff            	// #-1
  405914:	ldp	x20, x19, [sp, #256]
  405918:	ldp	x28, x21, [sp, #240]
  40591c:	ldp	x29, x30, [sp, #224]
  405920:	add	sp, sp, #0x110
  405924:	ret

0000000000405928 <get_hex@@Base>:
  405928:	sub	w8, w0, #0x41
  40592c:	and	w8, w8, #0xff
  405930:	cmp	w8, #0x6
  405934:	and	w8, w0, #0xff
  405938:	b.cs	405948 <get_hex@@Base+0x20>  // b.hs, b.nlast
  40593c:	mov	w9, #0xffffffc9            	// #-55
  405940:	add	w0, w9, w8
  405944:	ret
  405948:	sub	w9, w0, #0x61
  40594c:	and	w9, w9, #0xff
  405950:	cmp	w9, #0x6
  405954:	b.cs	405964 <get_hex@@Base+0x3c>  // b.hs, b.nlast
  405958:	mov	w9, #0xffffffa9            	// #-87
  40595c:	add	w0, w9, w8
  405960:	ret
  405964:	sub	w9, w0, #0x30
  405968:	and	w9, w9, #0xff
  40596c:	sub	w8, w8, #0x30
  405970:	cmp	w9, #0xa
  405974:	csinv	w0, w8, wzr, cc  // cc = lo, ul, last
  405978:	ret

000000000040597c <get_integer@@Base>:
  40597c:	sub	sp, sp, #0x30
  405980:	stp	x29, x30, [sp, #16]
  405984:	stp	x20, x19, [sp, #32]
  405988:	add	x29, sp, #0x10
  40598c:	cbz	x1, 4059e0 <get_integer@@Base+0x64>
  405990:	ldrb	w8, [x1]
  405994:	mov	x20, x1
  405998:	cbz	w8, 4059e0 <get_integer@@Base+0x64>
  40599c:	mov	x19, x0
  4059a0:	add	x1, sp, #0x8
  4059a4:	mov	x0, x20
  4059a8:	bl	404e40 <strtol@plt>
  4059ac:	ldr	x9, [sp, #8]
  4059b0:	mov	x8, x0
  4059b4:	mov	w0, #0xffffffff            	// #-1
  4059b8:	cbz	x9, 4059d0 <get_integer@@Base+0x54>
  4059bc:	cmp	x9, x20
  4059c0:	b.eq	4059d0 <get_integer@@Base+0x54>  // b.none
  4059c4:	ldrb	w9, [x9]
  4059c8:	cbz	w9, 4059f4 <get_integer@@Base+0x78>
  4059cc:	mov	w0, #0xffffffff            	// #-1
  4059d0:	ldp	x20, x19, [sp, #32]
  4059d4:	ldp	x29, x30, [sp, #16]
  4059d8:	add	sp, sp, #0x30
  4059dc:	ret
  4059e0:	mov	w0, #0xffffffff            	// #-1
  4059e4:	ldp	x20, x19, [sp, #32]
  4059e8:	ldp	x29, x30, [sp, #16]
  4059ec:	add	sp, sp, #0x30
  4059f0:	ret
  4059f4:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
  4059f8:	add	x9, x8, x9
  4059fc:	cmp	x9, #0x2
  405a00:	mov	w0, #0xffffffff            	// #-1
  405a04:	b.cc	4059d0 <get_integer@@Base+0x54>  // b.lo, b.ul, b.last
  405a08:	mov	w9, #0x80000000            	// #-2147483648
  405a0c:	add	x9, x8, x9
  405a10:	lsr	x9, x9, #32
  405a14:	cbnz	x9, 4059d0 <get_integer@@Base+0x54>
  405a18:	mov	w0, wzr
  405a1c:	str	w8, [x19]
  405a20:	ldp	x20, x19, [sp, #32]
  405a24:	ldp	x29, x30, [sp, #16]
  405a28:	add	sp, sp, #0x30
  405a2c:	ret

0000000000405a30 <mask2bits@@Base>:
  405a30:	rev	w8, w0
  405a34:	neg	w9, w8
  405a38:	bics	wzr, w9, w8
  405a3c:	b.eq	405a48 <mask2bits@@Base+0x18>  // b.none
  405a40:	mov	w0, #0xffffffff            	// #-1
  405a44:	ret
  405a48:	cbz	w0, 405a5c <mask2bits@@Base+0x2c>
  405a4c:	mov	w0, wzr
  405a50:	lsl	w8, w8, #1
  405a54:	add	w0, w0, #0x1
  405a58:	cbnz	w8, 405a50 <mask2bits@@Base+0x20>
  405a5c:	ret

0000000000405a60 <get_unsigned@@Base>:
  405a60:	sub	sp, sp, #0x30
  405a64:	stp	x29, x30, [sp, #16]
  405a68:	stp	x20, x19, [sp, #32]
  405a6c:	add	x29, sp, #0x10
  405a70:	cbz	x1, 405ad4 <get_unsigned@@Base+0x74>
  405a74:	ldrb	w8, [x1]
  405a78:	mov	x20, x1
  405a7c:	cbz	w8, 405ad4 <get_unsigned@@Base+0x74>
  405a80:	mov	x19, x0
  405a84:	add	x1, sp, #0x8
  405a88:	mov	x0, x20
  405a8c:	bl	404b80 <strtoul@plt>
  405a90:	ldr	x9, [sp, #8]
  405a94:	mov	x8, x0
  405a98:	mov	w0, #0xffffffff            	// #-1
  405a9c:	cbz	x9, 405ac4 <get_unsigned@@Base+0x64>
  405aa0:	cmp	x9, x20
  405aa4:	b.eq	405ac4 <get_unsigned@@Base+0x64>  // b.none
  405aa8:	ldrb	w9, [x9]
  405aac:	mov	w0, #0xffffffff            	// #-1
  405ab0:	cbnz	w9, 405ac4 <get_unsigned@@Base+0x64>
  405ab4:	lsr	x9, x8, #32
  405ab8:	cbnz	x9, 405ac4 <get_unsigned@@Base+0x64>
  405abc:	mov	w0, wzr
  405ac0:	str	w8, [x19]
  405ac4:	ldp	x20, x19, [sp, #32]
  405ac8:	ldp	x29, x30, [sp, #16]
  405acc:	add	sp, sp, #0x30
  405ad0:	ret
  405ad4:	mov	w0, #0xffffffff            	// #-1
  405ad8:	ldp	x20, x19, [sp, #32]
  405adc:	ldp	x29, x30, [sp, #16]
  405ae0:	add	sp, sp, #0x30
  405ae4:	ret

0000000000405ae8 <get_time_rtt@@Base>:
  405ae8:	sub	sp, sp, #0x50
  405aec:	stp	x22, x21, [sp, #48]
  405af0:	mov	x22, x1
  405af4:	stp	x20, x19, [sp, #64]
  405af8:	mov	x19, x0
  405afc:	mov	w1, #0x2e                  	// #46
  405b00:	mov	x0, x22
  405b04:	str	d8, [sp, #16]
  405b08:	stp	x29, x30, [sp, #24]
  405b0c:	str	x23, [sp, #40]
  405b10:	add	x29, sp, #0x10
  405b14:	mov	x21, x2
  405b18:	bl	404ec0 <strchr@plt>
  405b1c:	add	x1, sp, #0x8
  405b20:	cbz	x0, 405b80 <get_time_rtt@@Base+0x98>
  405b24:	mov	x0, x22
  405b28:	bl	404bd0 <strtod@plt>
  405b2c:	fcmp	d0, #0.0
  405b30:	b.mi	405c54 <get_time_rtt@@Base+0x16c>  // b.first
  405b34:	ldr	x20, [sp, #8]
  405b38:	mov	w0, #0xffffffff            	// #-1
  405b3c:	cbz	x20, 405c88 <get_time_rtt@@Base+0x1a0>
  405b40:	cmp	x20, x22
  405b44:	b.eq	405c88 <get_time_rtt@@Base+0x1a0>  // b.none
  405b48:	mov	x8, #0x7ff0000000000000    	// #9218868437227405312
  405b4c:	mov	v8.16b, v0.16b
  405b50:	fmov	d0, x8
  405b54:	fcmp	d8, d0
  405b58:	b.ne	405b74 <get_time_rtt@@Base+0x8c>  // b.any
  405b5c:	bl	405010 <__errno_location@plt>
  405b60:	ldr	w8, [x0]
  405b64:	cmp	w8, #0x22
  405b68:	b.eq	405c54 <get_time_rtt@@Base+0x16c>  // b.none
  405b6c:	mov	x8, #0x7ff0000000000000    	// #9218868437227405312
  405b70:	fmov	d8, x8
  405b74:	cmp	x20, x22
  405b78:	b.ne	405bc8 <get_time_rtt@@Base+0xe0>  // b.any
  405b7c:	b	405c54 <get_time_rtt@@Base+0x16c>
  405b80:	mov	x0, x22
  405b84:	mov	w2, wzr
  405b88:	bl	404b80 <strtoul@plt>
  405b8c:	ldr	x20, [sp, #8]
  405b90:	mov	x23, x0
  405b94:	mov	w0, #0xffffffff            	// #-1
  405b98:	cbz	x20, 405c88 <get_time_rtt@@Base+0x1a0>
  405b9c:	cmp	x20, x22
  405ba0:	b.eq	405c88 <get_time_rtt@@Base+0x1a0>  // b.none
  405ba4:	cmn	x23, #0x1
  405ba8:	b.ne	405bbc <get_time_rtt@@Base+0xd4>  // b.any
  405bac:	bl	405010 <__errno_location@plt>
  405bb0:	ldr	w8, [x0]
  405bb4:	cmp	w8, #0x22
  405bb8:	b.eq	405c54 <get_time_rtt@@Base+0x16c>  // b.none
  405bbc:	ucvtf	d8, x23
  405bc0:	cmp	x20, x22
  405bc4:	b.eq	405c54 <get_time_rtt@@Base+0x16c>  // b.none
  405bc8:	mov	w8, #0x1                   	// #1
  405bcc:	str	w8, [x21]
  405bd0:	ldrb	w8, [x20]
  405bd4:	cbz	w8, 405c6c <get_time_rtt@@Base+0x184>
  405bd8:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  405bdc:	add	x1, x1, #0xd4f
  405be0:	mov	x0, x20
  405be4:	str	wzr, [x21]
  405be8:	bl	404d70 <strcasecmp@plt>
  405bec:	cbz	w0, 405c5c <get_time_rtt@@Base+0x174>
  405bf0:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  405bf4:	add	x1, x1, #0xd66
  405bf8:	mov	x0, x20
  405bfc:	bl	404d70 <strcasecmp@plt>
  405c00:	cbz	w0, 405c5c <get_time_rtt@@Base+0x174>
  405c04:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  405c08:	add	x1, x1, #0xd6b
  405c0c:	mov	x0, x20
  405c10:	bl	404d70 <strcasecmp@plt>
  405c14:	cbz	w0, 405c5c <get_time_rtt@@Base+0x174>
  405c18:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  405c1c:	add	x1, x1, #0xeb
  405c20:	mov	x0, x20
  405c24:	bl	404d70 <strcasecmp@plt>
  405c28:	cbz	w0, 405c6c <get_time_rtt@@Base+0x184>
  405c2c:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  405c30:	add	x1, x1, #0xd65
  405c34:	mov	x0, x20
  405c38:	bl	404d70 <strcasecmp@plt>
  405c3c:	cbz	w0, 405c6c <get_time_rtt@@Base+0x184>
  405c40:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  405c44:	add	x1, x1, #0xd6a
  405c48:	mov	x0, x20
  405c4c:	bl	404d70 <strcasecmp@plt>
  405c50:	cbz	w0, 405c6c <get_time_rtt@@Base+0x184>
  405c54:	mov	w0, #0xffffffff            	// #-1
  405c58:	b	405c88 <get_time_rtt@@Base+0x1a0>
  405c5c:	mov	x8, #0x400000000000        	// #70368744177664
  405c60:	movk	x8, #0x408f, lsl #48
  405c64:	fmov	d0, x8
  405c68:	fmul	d8, d8, d0
  405c6c:	fcvtzu	w8, d8
  405c70:	ucvtf	d0, w8
  405c74:	fcmp	d8, d0
  405c78:	cset	w9, gt
  405c7c:	add	w8, w9, w8
  405c80:	mov	w0, wzr
  405c84:	str	w8, [x19]
  405c88:	ldp	x20, x19, [sp, #64]
  405c8c:	ldp	x22, x21, [sp, #48]
  405c90:	ldr	x23, [sp, #40]
  405c94:	ldp	x29, x30, [sp, #24]
  405c98:	ldr	d8, [sp, #16]
  405c9c:	add	sp, sp, #0x50
  405ca0:	ret

0000000000405ca4 <get_u64@@Base>:
  405ca4:	stp	x29, x30, [sp, #-48]!
  405ca8:	str	x21, [sp, #16]
  405cac:	stp	x20, x19, [sp, #32]
  405cb0:	mov	x29, sp
  405cb4:	cbz	x1, 405d20 <get_u64@@Base+0x7c>
  405cb8:	ldrb	w8, [x1]
  405cbc:	mov	x21, x1
  405cc0:	cbz	w8, 405d20 <get_u64@@Base+0x7c>
  405cc4:	mov	x19, x0
  405cc8:	add	x1, x29, #0x18
  405ccc:	mov	x0, x21
  405cd0:	bl	404ed0 <strtoull@plt>
  405cd4:	ldr	x8, [x29, #24]
  405cd8:	mov	x20, x0
  405cdc:	mov	w0, #0xffffffff            	// #-1
  405ce0:	cbz	x8, 405cf8 <get_u64@@Base+0x54>
  405ce4:	cmp	x8, x21
  405ce8:	b.eq	405cf8 <get_u64@@Base+0x54>  // b.none
  405cec:	ldrb	w8, [x8]
  405cf0:	cbz	w8, 405d08 <get_u64@@Base+0x64>
  405cf4:	mov	w0, #0xffffffff            	// #-1
  405cf8:	ldp	x20, x19, [sp, #32]
  405cfc:	ldr	x21, [sp, #16]
  405d00:	ldp	x29, x30, [sp], #48
  405d04:	ret
  405d08:	cmn	x20, #0x1
  405d0c:	b.ne	405d34 <get_u64@@Base+0x90>  // b.any
  405d10:	bl	405010 <__errno_location@plt>
  405d14:	ldr	w8, [x0]
  405d18:	cmp	w8, #0x22
  405d1c:	b.ne	405d34 <get_u64@@Base+0x90>  // b.any
  405d20:	mov	w0, #0xffffffff            	// #-1
  405d24:	ldp	x20, x19, [sp, #32]
  405d28:	ldr	x21, [sp, #16]
  405d2c:	ldp	x29, x30, [sp], #48
  405d30:	ret
  405d34:	mov	w0, wzr
  405d38:	str	x20, [x19]
  405d3c:	ldp	x20, x19, [sp, #32]
  405d40:	ldr	x21, [sp, #16]
  405d44:	ldp	x29, x30, [sp], #48
  405d48:	ret

0000000000405d4c <get_u32@@Base>:
  405d4c:	sub	sp, sp, #0x30
  405d50:	stp	x29, x30, [sp, #16]
  405d54:	stp	x20, x19, [sp, #32]
  405d58:	add	x29, sp, #0x10
  405d5c:	cbz	x1, 405dc0 <get_u32@@Base+0x74>
  405d60:	ldrb	w8, [x1]
  405d64:	mov	x20, x1
  405d68:	cbz	w8, 405dc0 <get_u32@@Base+0x74>
  405d6c:	mov	x19, x0
  405d70:	add	x1, sp, #0x8
  405d74:	mov	x0, x20
  405d78:	bl	404b80 <strtoul@plt>
  405d7c:	ldr	x9, [sp, #8]
  405d80:	mov	x8, x0
  405d84:	mov	w0, #0xffffffff            	// #-1
  405d88:	cbz	x9, 405db0 <get_u32@@Base+0x64>
  405d8c:	cmp	x9, x20
  405d90:	b.eq	405db0 <get_u32@@Base+0x64>  // b.none
  405d94:	ldrb	w9, [x9]
  405d98:	mov	w0, #0xffffffff            	// #-1
  405d9c:	cbnz	w9, 405db0 <get_u32@@Base+0x64>
  405da0:	lsr	x9, x8, #32
  405da4:	cbnz	x9, 405db0 <get_u32@@Base+0x64>
  405da8:	mov	w0, wzr
  405dac:	str	w8, [x19]
  405db0:	ldp	x20, x19, [sp, #32]
  405db4:	ldp	x29, x30, [sp, #16]
  405db8:	add	sp, sp, #0x30
  405dbc:	ret
  405dc0:	mov	w0, #0xffffffff            	// #-1
  405dc4:	ldp	x20, x19, [sp, #32]
  405dc8:	ldp	x29, x30, [sp, #16]
  405dcc:	add	sp, sp, #0x30
  405dd0:	ret

0000000000405dd4 <get_u16@@Base>:
  405dd4:	sub	sp, sp, #0x30
  405dd8:	stp	x29, x30, [sp, #16]
  405ddc:	stp	x20, x19, [sp, #32]
  405de0:	add	x29, sp, #0x10
  405de4:	cbz	x1, 405e48 <get_u16@@Base+0x74>
  405de8:	ldrb	w8, [x1]
  405dec:	mov	x20, x1
  405df0:	cbz	w8, 405e48 <get_u16@@Base+0x74>
  405df4:	mov	x19, x0
  405df8:	add	x1, sp, #0x8
  405dfc:	mov	x0, x20
  405e00:	bl	404b80 <strtoul@plt>
  405e04:	ldr	x9, [sp, #8]
  405e08:	mov	x8, x0
  405e0c:	mov	w0, #0xffffffff            	// #-1
  405e10:	cbz	x9, 405e38 <get_u16@@Base+0x64>
  405e14:	cmp	x9, x20
  405e18:	b.eq	405e38 <get_u16@@Base+0x64>  // b.none
  405e1c:	ldrb	w9, [x9]
  405e20:	mov	w0, #0xffffffff            	// #-1
  405e24:	cbnz	w9, 405e38 <get_u16@@Base+0x64>
  405e28:	lsr	x9, x8, #16
  405e2c:	cbnz	x9, 405e38 <get_u16@@Base+0x64>
  405e30:	mov	w0, wzr
  405e34:	strh	w8, [x19]
  405e38:	ldp	x20, x19, [sp, #32]
  405e3c:	ldp	x29, x30, [sp, #16]
  405e40:	add	sp, sp, #0x30
  405e44:	ret
  405e48:	mov	w0, #0xffffffff            	// #-1
  405e4c:	ldp	x20, x19, [sp, #32]
  405e50:	ldp	x29, x30, [sp, #16]
  405e54:	add	sp, sp, #0x30
  405e58:	ret

0000000000405e5c <get_u8@@Base>:
  405e5c:	sub	sp, sp, #0x30
  405e60:	stp	x29, x30, [sp, #16]
  405e64:	stp	x20, x19, [sp, #32]
  405e68:	add	x29, sp, #0x10
  405e6c:	cbz	x1, 405ed0 <get_u8@@Base+0x74>
  405e70:	ldrb	w8, [x1]
  405e74:	mov	x20, x1
  405e78:	cbz	w8, 405ed0 <get_u8@@Base+0x74>
  405e7c:	mov	x19, x0
  405e80:	add	x1, sp, #0x8
  405e84:	mov	x0, x20
  405e88:	bl	404b80 <strtoul@plt>
  405e8c:	ldr	x9, [sp, #8]
  405e90:	mov	x8, x0
  405e94:	mov	w0, #0xffffffff            	// #-1
  405e98:	cbz	x9, 405ec0 <get_u8@@Base+0x64>
  405e9c:	cmp	x9, x20
  405ea0:	b.eq	405ec0 <get_u8@@Base+0x64>  // b.none
  405ea4:	ldrb	w9, [x9]
  405ea8:	mov	w0, #0xffffffff            	// #-1
  405eac:	cbnz	w9, 405ec0 <get_u8@@Base+0x64>
  405eb0:	cmp	x8, #0xff
  405eb4:	b.hi	405ec0 <get_u8@@Base+0x64>  // b.pmore
  405eb8:	mov	w0, wzr
  405ebc:	strb	w8, [x19]
  405ec0:	ldp	x20, x19, [sp, #32]
  405ec4:	ldp	x29, x30, [sp, #16]
  405ec8:	add	sp, sp, #0x30
  405ecc:	ret
  405ed0:	mov	w0, #0xffffffff            	// #-1
  405ed4:	ldp	x20, x19, [sp, #32]
  405ed8:	ldp	x29, x30, [sp, #16]
  405edc:	add	sp, sp, #0x30
  405ee0:	ret

0000000000405ee4 <get_s64@@Base>:
  405ee4:	sub	sp, sp, #0x40
  405ee8:	stp	x29, x30, [sp, #16]
  405eec:	stp	x22, x21, [sp, #32]
  405ef0:	stp	x20, x19, [sp, #48]
  405ef4:	add	x29, sp, #0x10
  405ef8:	mov	w22, w2
  405efc:	mov	x21, x1
  405f00:	mov	x19, x0
  405f04:	bl	405010 <__errno_location@plt>
  405f08:	str	wzr, [x0]
  405f0c:	cbz	x21, 405f4c <get_s64@@Base+0x68>
  405f10:	ldrb	w8, [x21]
  405f14:	cbz	w8, 405f4c <get_s64@@Base+0x68>
  405f18:	mov	x20, x0
  405f1c:	add	x1, sp, #0x8
  405f20:	mov	x0, x21
  405f24:	mov	w2, w22
  405f28:	bl	404bc0 <strtoll@plt>
  405f2c:	ldr	x9, [sp, #8]
  405f30:	mov	x8, x0
  405f34:	mov	w0, #0xffffffff            	// #-1
  405f38:	cbz	x9, 405f50 <get_s64@@Base+0x6c>
  405f3c:	cmp	x9, x21
  405f40:	b.eq	405f50 <get_s64@@Base+0x6c>  // b.none
  405f44:	ldrb	w9, [x9]
  405f48:	cbz	w9, 405f64 <get_s64@@Base+0x80>
  405f4c:	mov	w0, #0xffffffff            	// #-1
  405f50:	ldp	x20, x19, [sp, #48]
  405f54:	ldp	x22, x21, [sp, #32]
  405f58:	ldp	x29, x30, [sp, #16]
  405f5c:	add	sp, sp, #0x40
  405f60:	ret
  405f64:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
  405f68:	add	x9, x8, x9
  405f6c:	cmp	x9, #0x1
  405f70:	b.hi	405f80 <get_s64@@Base+0x9c>  // b.pmore
  405f74:	ldr	w9, [x20]
  405f78:	cmp	w9, #0x22
  405f7c:	b.eq	405f4c <get_s64@@Base+0x68>  // b.none
  405f80:	mov	w0, wzr
  405f84:	str	x8, [x19]
  405f88:	b	405f50 <get_s64@@Base+0x6c>

0000000000405f8c <get_s32@@Base>:
  405f8c:	stp	x29, x30, [sp, #-48]!
  405f90:	str	x21, [sp, #16]
  405f94:	stp	x20, x19, [sp, #32]
  405f98:	mov	x29, sp
  405f9c:	mov	w21, w2
  405fa0:	mov	x20, x1
  405fa4:	mov	x19, x0
  405fa8:	bl	405010 <__errno_location@plt>
  405fac:	str	wzr, [x0]
  405fb0:	cbz	x20, 406000 <get_s32@@Base+0x74>
  405fb4:	ldrb	w8, [x20]
  405fb8:	cbz	w8, 406000 <get_s32@@Base+0x74>
  405fbc:	add	x1, x29, #0x18
  405fc0:	mov	x0, x20
  405fc4:	mov	w2, w21
  405fc8:	bl	404e40 <strtol@plt>
  405fcc:	ldr	x9, [x29, #24]
  405fd0:	mov	x8, x0
  405fd4:	mov	w0, #0xffffffff            	// #-1
  405fd8:	cbz	x9, 405ff0 <get_s32@@Base+0x64>
  405fdc:	cmp	x9, x20
  405fe0:	b.eq	405ff0 <get_s32@@Base+0x64>  // b.none
  405fe4:	ldrb	w9, [x9]
  405fe8:	cbz	w9, 406014 <get_s32@@Base+0x88>
  405fec:	mov	w0, #0xffffffff            	// #-1
  405ff0:	ldp	x20, x19, [sp, #32]
  405ff4:	ldr	x21, [sp, #16]
  405ff8:	ldp	x29, x30, [sp], #48
  405ffc:	ret
  406000:	mov	w0, #0xffffffff            	// #-1
  406004:	ldp	x20, x19, [sp, #32]
  406008:	ldr	x21, [sp, #16]
  40600c:	ldp	x29, x30, [sp], #48
  406010:	ret
  406014:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
  406018:	add	x9, x8, x9
  40601c:	cmp	x9, #0x2
  406020:	mov	w0, #0xffffffff            	// #-1
  406024:	b.cc	405ff0 <get_s32@@Base+0x64>  // b.lo, b.ul, b.last
  406028:	mov	w9, #0x80000000            	// #-2147483648
  40602c:	add	x9, x8, x9
  406030:	lsr	x9, x9, #32
  406034:	cbnz	x9, 405ff0 <get_s32@@Base+0x64>
  406038:	mov	w0, wzr
  40603c:	str	w8, [x19]
  406040:	ldp	x20, x19, [sp, #32]
  406044:	ldr	x21, [sp, #16]
  406048:	ldp	x29, x30, [sp], #48
  40604c:	ret

0000000000406050 <get_be64@@Base>:
  406050:	stp	x29, x30, [sp, #-48]!
  406054:	str	x21, [sp, #16]
  406058:	stp	x20, x19, [sp, #32]
  40605c:	mov	x29, sp
  406060:	cbz	x1, 406098 <get_be64@@Base+0x48>
  406064:	ldrb	w8, [x1]
  406068:	mov	x21, x1
  40606c:	cbz	w8, 406098 <get_be64@@Base+0x48>
  406070:	mov	x19, x0
  406074:	add	x1, x29, #0x18
  406078:	mov	x0, x21
  40607c:	bl	404ed0 <strtoull@plt>
  406080:	ldr	x8, [x29, #24]
  406084:	cbz	x8, 406098 <get_be64@@Base+0x48>
  406088:	cmp	x8, x21
  40608c:	b.eq	406098 <get_be64@@Base+0x48>  // b.none
  406090:	ldrb	w8, [x8]
  406094:	cbz	w8, 4060ac <get_be64@@Base+0x5c>
  406098:	mov	w0, #0xffffffff            	// #-1
  40609c:	ldp	x20, x19, [sp, #32]
  4060a0:	ldr	x21, [sp, #16]
  4060a4:	ldp	x29, x30, [sp], #48
  4060a8:	ret
  4060ac:	mov	x20, x0
  4060b0:	cmn	x0, #0x1
  4060b4:	b.ne	4060c8 <get_be64@@Base+0x78>  // b.any
  4060b8:	bl	405010 <__errno_location@plt>
  4060bc:	ldr	w8, [x0]
  4060c0:	cmp	w8, #0x22
  4060c4:	b.eq	406098 <get_be64@@Base+0x48>  // b.none
  4060c8:	lsr	x9, x20, #32
  4060cc:	rev	w8, w20
  4060d0:	rev	w9, w9
  4060d4:	mov	w0, wzr
  4060d8:	bfi	x9, x8, #32, #32
  4060dc:	str	x9, [x19]
  4060e0:	ldp	x20, x19, [sp, #32]
  4060e4:	ldr	x21, [sp, #16]
  4060e8:	ldp	x29, x30, [sp], #48
  4060ec:	ret

00000000004060f0 <get_be32@@Base>:
  4060f0:	sub	sp, sp, #0x30
  4060f4:	stp	x29, x30, [sp, #16]
  4060f8:	stp	x20, x19, [sp, #32]
  4060fc:	add	x29, sp, #0x10
  406100:	cbz	x1, 40614c <get_be32@@Base+0x5c>
  406104:	ldrb	w8, [x1]
  406108:	mov	x20, x1
  40610c:	cbz	w8, 40614c <get_be32@@Base+0x5c>
  406110:	mov	x19, x0
  406114:	add	x1, sp, #0x8
  406118:	mov	x0, x20
  40611c:	bl	404b80 <strtoul@plt>
  406120:	ldr	x8, [sp, #8]
  406124:	cbz	x8, 40614c <get_be32@@Base+0x5c>
  406128:	cmp	x8, x20
  40612c:	b.eq	40614c <get_be32@@Base+0x5c>  // b.none
  406130:	lsr	x9, x0, #32
  406134:	cbnz	x9, 40614c <get_be32@@Base+0x5c>
  406138:	ldrb	w8, [x8]
  40613c:	cbnz	w8, 40614c <get_be32@@Base+0x5c>
  406140:	rev	w9, w0
  406144:	str	w9, [x19]
  406148:	b	406150 <get_be32@@Base+0x60>
  40614c:	mov	w8, #0xffffffff            	// #-1
  406150:	ldp	x20, x19, [sp, #32]
  406154:	ldp	x29, x30, [sp, #16]
  406158:	mov	w0, w8
  40615c:	add	sp, sp, #0x30
  406160:	ret

0000000000406164 <get_be16@@Base>:
  406164:	sub	sp, sp, #0x30
  406168:	stp	x29, x30, [sp, #16]
  40616c:	stp	x20, x19, [sp, #32]
  406170:	add	x29, sp, #0x10
  406174:	cbz	x1, 4061c4 <get_be16@@Base+0x60>
  406178:	ldrb	w8, [x1]
  40617c:	mov	x20, x1
  406180:	cbz	w8, 4061c4 <get_be16@@Base+0x60>
  406184:	mov	x19, x0
  406188:	add	x1, sp, #0x8
  40618c:	mov	x0, x20
  406190:	bl	404b80 <strtoul@plt>
  406194:	ldr	x8, [sp, #8]
  406198:	cbz	x8, 4061c4 <get_be16@@Base+0x60>
  40619c:	cmp	x8, x20
  4061a0:	b.eq	4061c4 <get_be16@@Base+0x60>  // b.none
  4061a4:	lsr	x9, x0, #16
  4061a8:	cbnz	x9, 4061c4 <get_be16@@Base+0x60>
  4061ac:	ldrb	w8, [x8]
  4061b0:	cbnz	w8, 4061c4 <get_be16@@Base+0x60>
  4061b4:	rev	w9, w0
  4061b8:	lsr	w9, w9, #16
  4061bc:	strh	w9, [x19]
  4061c0:	b	4061c8 <get_be16@@Base+0x64>
  4061c4:	mov	w8, #0xffffffff            	// #-1
  4061c8:	ldp	x20, x19, [sp, #32]
  4061cc:	ldp	x29, x30, [sp, #16]
  4061d0:	mov	w0, w8
  4061d4:	add	sp, sp, #0x30
  4061d8:	ret

00000000004061dc <get_addr64@@Base>:
  4061dc:	sub	sp, sp, #0x30
  4061e0:	stp	x20, x19, [sp, #32]
  4061e4:	mov	x20, x1
  4061e8:	mov	x19, x0
  4061ec:	mov	x1, sp
  4061f0:	mov	w2, #0x10                  	// #16
  4061f4:	mov	x0, x20
  4061f8:	stp	x29, x30, [sp, #16]
  4061fc:	add	x29, sp, #0x10
  406200:	bl	404b80 <strtoul@plt>
  406204:	lsr	x8, x0, #16
  406208:	cbnz	x8, 4062f8 <get_addr64@@Base+0x11c>
  40620c:	ldr	x8, [sp]
  406210:	cmp	x8, x20
  406214:	b.eq	4062f8 <get_addr64@@Base+0x11c>  // b.none
  406218:	rev	w9, w0
  40621c:	lsr	w9, w9, #16
  406220:	strh	w9, [sp, #8]
  406224:	ldrb	w9, [x8]
  406228:	cbz	w9, 40630c <get_addr64@@Base+0x130>
  40622c:	cmp	w9, #0x3a
  406230:	b.ne	4062f8 <get_addr64@@Base+0x11c>  // b.any
  406234:	add	x20, x8, #0x1
  406238:	mov	x1, sp
  40623c:	mov	w2, #0x10                  	// #16
  406240:	mov	x0, x20
  406244:	bl	404b80 <strtoul@plt>
  406248:	lsr	x8, x0, #16
  40624c:	cbnz	x8, 4062f8 <get_addr64@@Base+0x11c>
  406250:	ldr	x8, [sp]
  406254:	cmp	x8, x20
  406258:	b.eq	4062f8 <get_addr64@@Base+0x11c>  // b.none
  40625c:	rev	w9, w0
  406260:	lsr	w9, w9, #16
  406264:	strh	w9, [sp, #10]
  406268:	ldrb	w9, [x8]
  40626c:	cbz	w9, 40630c <get_addr64@@Base+0x130>
  406270:	cmp	w9, #0x3a
  406274:	b.ne	4062f8 <get_addr64@@Base+0x11c>  // b.any
  406278:	add	x20, x8, #0x1
  40627c:	mov	x1, sp
  406280:	mov	w2, #0x10                  	// #16
  406284:	mov	x0, x20
  406288:	bl	404b80 <strtoul@plt>
  40628c:	lsr	x8, x0, #16
  406290:	cbnz	x8, 4062f8 <get_addr64@@Base+0x11c>
  406294:	ldr	x8, [sp]
  406298:	cmp	x8, x20
  40629c:	b.eq	4062f8 <get_addr64@@Base+0x11c>  // b.none
  4062a0:	rev	w9, w0
  4062a4:	lsr	w9, w9, #16
  4062a8:	strh	w9, [sp, #12]
  4062ac:	ldrb	w9, [x8]
  4062b0:	cbz	w9, 40630c <get_addr64@@Base+0x130>
  4062b4:	cmp	w9, #0x3a
  4062b8:	b.ne	4062f8 <get_addr64@@Base+0x11c>  // b.any
  4062bc:	add	x20, x8, #0x1
  4062c0:	mov	x1, sp
  4062c4:	mov	w2, #0x10                  	// #16
  4062c8:	mov	x0, x20
  4062cc:	bl	404b80 <strtoul@plt>
  4062d0:	lsr	x8, x0, #16
  4062d4:	cbnz	x8, 4062f8 <get_addr64@@Base+0x11c>
  4062d8:	ldr	x8, [sp]
  4062dc:	cmp	x8, x20
  4062e0:	b.eq	4062f8 <get_addr64@@Base+0x11c>  // b.none
  4062e4:	rev	w9, w0
  4062e8:	lsr	w9, w9, #16
  4062ec:	strh	w9, [sp, #14]
  4062f0:	ldrb	w8, [x8]
  4062f4:	cbz	w8, 40630c <get_addr64@@Base+0x130>
  4062f8:	mov	w0, #0xffffffff            	// #-1
  4062fc:	ldp	x20, x19, [sp, #32]
  406300:	ldp	x29, x30, [sp, #16]
  406304:	add	sp, sp, #0x30
  406308:	ret
  40630c:	ldr	x8, [sp, #8]
  406310:	mov	w0, #0x1                   	// #1
  406314:	str	x8, [x19]
  406318:	ldp	x20, x19, [sp, #32]
  40631c:	ldp	x29, x30, [sp, #16]
  406320:	add	sp, sp, #0x30
  406324:	ret

0000000000406328 <get_addr_1@@Base>:
  406328:	stp	x29, x30, [sp, #-48]!
  40632c:	stp	x20, x19, [sp, #32]
  406330:	mov	x20, x1
  406334:	movi	v0.2d, #0x0
  406338:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40633c:	str	x21, [sp, #16]
  406340:	mov	x19, x0
  406344:	str	xzr, [x0, #256]
  406348:	stp	q0, q0, [x0, #224]
  40634c:	stp	q0, q0, [x0, #192]
  406350:	stp	q0, q0, [x0, #160]
  406354:	stp	q0, q0, [x0, #128]
  406358:	stp	q0, q0, [x0, #96]
  40635c:	stp	q0, q0, [x0, #64]
  406360:	stp	q0, q0, [x0, #32]
  406364:	stp	q0, q0, [x0]
  406368:	add	x1, x1, #0xcb
  40636c:	mov	x0, x20
  406370:	mov	x29, sp
  406374:	mov	w21, w2
  406378:	bl	404e20 <strcmp@plt>
  40637c:	cbz	w0, 4063f8 <get_addr_1@@Base+0xd0>
  406380:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  406384:	add	x1, x1, #0xa63
  406388:	mov	x0, x20
  40638c:	bl	404e20 <strcmp@plt>
  406390:	cbz	w0, 4063dc <get_addr_1@@Base+0xb4>
  406394:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  406398:	add	x1, x1, #0xd3
  40639c:	mov	x0, x20
  4063a0:	bl	404e20 <strcmp@plt>
  4063a4:	cbz	w0, 4063dc <get_addr_1@@Base+0xb4>
  4063a8:	cmp	w21, #0x11
  4063ac:	b.ne	406450 <get_addr_1@@Base+0x128>  // b.any
  4063b0:	add	x0, x19, #0x8
  4063b4:	mov	w1, #0x100                 	// #256
  4063b8:	mov	x2, x20
  4063bc:	bl	4096f0 <ll_addr_a2n@@Base>
  4063c0:	tbnz	w0, #31, 406404 <get_addr_1@@Base+0xdc>
  4063c4:	mov	w8, #0x11                  	// #17
  4063c8:	lsl	w9, w0, #3
  4063cc:	strh	w0, [x19, #2]
  4063d0:	strh	w8, [x19, #6]
  4063d4:	strh	w9, [x19, #4]
  4063d8:	b	40651c <get_addr_1@@Base+0x1f4>
  4063dc:	orr	w8, w21, #0x10
  4063e0:	cmp	w8, #0x1c
  4063e4:	b.eq	406404 <get_addr_1@@Base+0xdc>  // b.none
  4063e8:	strh	w21, [x19, #6]
  4063ec:	mov	w8, #0xfffe0000            	// #-131072
  4063f0:	stur	w8, [x19, #2]
  4063f4:	b	40651c <get_addr_1@@Base+0x1f4>
  4063f8:	orr	w8, w21, #0x10
  4063fc:	cmp	w8, #0x1c
  406400:	b.ne	406418 <get_addr_1@@Base+0xf0>  // b.any
  406404:	mov	w0, #0xffffffff            	// #-1
  406408:	ldp	x20, x19, [sp, #32]
  40640c:	ldr	x21, [sp, #16]
  406410:	ldp	x29, x30, [sp], #48
  406414:	ret
  406418:	and	w8, w21, #0xffff
  40641c:	sub	w8, w8, #0x2
  406420:	cmp	w8, #0x1a
  406424:	strh	w21, [x19, #6]
  406428:	b.hi	4064fc <get_addr_1@@Base+0x1d4>  // b.pmore
  40642c:	adrp	x9, 40d000 <addraw_l@@Base+0xac>
  406430:	add	x9, x9, #0xbcf
  406434:	adr	x10, 406448 <get_addr_1@@Base+0x120>
  406438:	ldrb	w11, [x9, x8]
  40643c:	add	x10, x10, x11, lsl #2
  406440:	mov	w8, #0x10                  	// #16
  406444:	br	x10
  406448:	mov	w8, #0x2                   	// #2
  40644c:	b	406508 <get_addr_1@@Base+0x1e0>
  406450:	mov	w1, #0x3a                  	// #58
  406454:	mov	x0, x20
  406458:	bl	404ec0 <strchr@plt>
  40645c:	cbz	x0, 406494 <get_addr_1@@Base+0x16c>
  406460:	mov	w8, #0xa                   	// #10
  406464:	cmp	w21, #0xa
  406468:	strh	w8, [x19, #6]
  40646c:	b.eq	406474 <get_addr_1@@Base+0x14c>  // b.none
  406470:	cbnz	w21, 406404 <get_addr_1@@Base+0xdc>
  406474:	add	x2, x19, #0x8
  406478:	mov	w0, #0xa                   	// #10
  40647c:	mov	x1, x20
  406480:	bl	404e90 <inet_pton@plt>
  406484:	cmp	w0, #0x1
  406488:	b.lt	406404 <get_addr_1@@Base+0xdc>  // b.tstop
  40648c:	mov	w8, #0xffff0010            	// #-65520
  406490:	b	4063f0 <get_addr_1@@Base+0xc8>
  406494:	cmp	w21, #0x1c
  406498:	b.ne	4065d0 <get_addr_1@@Base+0x2a8>  // b.any
  40649c:	add	x21, x19, #0x8
  4064a0:	mov	w8, #0x1c                  	// #28
  4064a4:	mov	w0, #0x1c                  	// #28
  4064a8:	mov	w3, #0x100                 	// #256
  4064ac:	mov	x1, x20
  4064b0:	mov	x2, x21
  4064b4:	strh	w8, [x19, #6]
  4064b8:	bl	40a5f8 <mpls_pton@@Base>
  4064bc:	cmp	w0, #0x1
  4064c0:	b.lt	406404 <get_addr_1@@Base+0xdc>  // b.tstop
  4064c4:	mov	w9, #0x4                   	// #4
  4064c8:	mov	x8, xzr
  4064cc:	movk	w9, #0x14, lsl #16
  4064d0:	stur	w9, [x19, #2]
  4064d4:	cmp	x8, #0x40
  4064d8:	b.eq	40651c <get_addr_1@@Base+0x1f4>  // b.none
  4064dc:	ldr	w9, [x21, x8, lsl #2]
  4064e0:	add	x8, x8, #0x1
  4064e4:	tbz	w9, #16, 4064d4 <get_addr_1@@Base+0x1ac>
  4064e8:	lsl	w8, w8, #2
  4064ec:	strh	w8, [x19, #2]
  4064f0:	b	40651c <get_addr_1@@Base+0x1f4>
  4064f4:	mov	w8, #0x4                   	// #4
  4064f8:	b	406508 <get_addr_1@@Base+0x1e0>
  4064fc:	mov	w8, wzr
  406500:	b	406508 <get_addr_1@@Base+0x1e0>
  406504:	mov	w8, #0xa                   	// #10
  406508:	strh	w8, [x19, #2]
  40650c:	mov	w8, #0xfffe                	// #65534
  406510:	mov	w9, #0x1                   	// #1
  406514:	strh	w8, [x19, #4]
  406518:	strh	w9, [x19]
  40651c:	ldrh	w8, [x19, #6]
  406520:	cmp	w8, #0xa
  406524:	b.eq	40654c <get_addr_1@@Base+0x224>  // b.none
  406528:	cmp	w8, #0x2
  40652c:	b.ne	406574 <get_addr_1@@Base+0x24c>  // b.any
  406530:	ldr	w9, [x19, #8]
  406534:	cbz	w9, 4065b0 <get_addr_1@@Base+0x288>
  406538:	ldrh	w8, [x19]
  40653c:	and	w9, w9, #0xf0
  406540:	cmp	w9, #0xe0
  406544:	b.eq	406564 <get_addr_1@@Base+0x23c>  // b.none
  406548:	b	4065a4 <get_addr_1@@Base+0x27c>
  40654c:	ldr	w9, [x19, #8]
  406550:	cbz	w9, 406588 <get_addr_1@@Base+0x260>
  406554:	ldrh	w8, [x19]
  406558:	mvn	w9, w9
  40655c:	tst	w9, #0xff
  406560:	b.ne	4065a4 <get_addr_1@@Base+0x27c>  // b.any
  406564:	mov	w9, #0xa                   	// #10
  406568:	mov	w0, wzr
  40656c:	orr	w8, w8, w9
  406570:	b	4065bc <get_addr_1@@Base+0x294>
  406574:	mov	w0, wzr
  406578:	ldp	x20, x19, [sp, #32]
  40657c:	ldr	x21, [sp, #16]
  406580:	ldp	x29, x30, [sp], #48
  406584:	ret
  406588:	ldr	w8, [x19, #12]
  40658c:	cbnz	w8, 4065a0 <get_addr_1@@Base+0x278>
  406590:	ldr	w8, [x19, #16]
  406594:	cbnz	w8, 4065a0 <get_addr_1@@Base+0x278>
  406598:	ldr	w8, [x19, #20]
  40659c:	cbz	w8, 4065b0 <get_addr_1@@Base+0x288>
  4065a0:	ldrh	w8, [x19]
  4065a4:	mov	w0, wzr
  4065a8:	orr	w8, w8, #0x2
  4065ac:	b	4065bc <get_addr_1@@Base+0x294>
  4065b0:	ldrh	w8, [x19]
  4065b4:	mov	w0, wzr
  4065b8:	orr	w8, w8, #0x6
  4065bc:	strh	w8, [x19]
  4065c0:	ldp	x20, x19, [sp, #32]
  4065c4:	ldr	x21, [sp, #16]
  4065c8:	ldp	x29, x30, [sp], #48
  4065cc:	ret
  4065d0:	mov	w8, #0x2                   	// #2
  4065d4:	tst	w21, #0xfffffffd
  4065d8:	strh	w8, [x19, #6]
  4065dc:	b.ne	406404 <get_addr_1@@Base+0xdc>  // b.any
  4065e0:	add	x1, x29, #0x18
  4065e4:	mov	x0, x20
  4065e8:	mov	w2, wzr
  4065ec:	bl	404b80 <strtoul@plt>
  4065f0:	cmp	x0, #0xff
  4065f4:	b.hi	406404 <get_addr_1@@Base+0xdc>  // b.pmore
  4065f8:	ldr	x8, [x29, #24]
  4065fc:	cmp	x8, x20
  406600:	b.eq	406404 <get_addr_1@@Base+0xdc>  // b.none
  406604:	strb	w0, [x19, #8]
  406608:	ldrb	w9, [x8]
  40660c:	cbz	w9, 4066c4 <get_addr_1@@Base+0x39c>
  406610:	cmp	w9, #0x2e
  406614:	b.ne	406404 <get_addr_1@@Base+0xdc>  // b.any
  406618:	add	x20, x8, #0x1
  40661c:	add	x1, x29, #0x18
  406620:	mov	x0, x20
  406624:	mov	w2, wzr
  406628:	bl	404b80 <strtoul@plt>
  40662c:	cmp	x0, #0xff
  406630:	b.hi	406404 <get_addr_1@@Base+0xdc>  // b.pmore
  406634:	ldr	x8, [x29, #24]
  406638:	cmp	x8, x20
  40663c:	b.eq	406404 <get_addr_1@@Base+0xdc>  // b.none
  406640:	strb	w0, [x19, #9]
  406644:	ldrb	w9, [x8]
  406648:	cbz	w9, 4066c4 <get_addr_1@@Base+0x39c>
  40664c:	cmp	w9, #0x2e
  406650:	b.ne	406404 <get_addr_1@@Base+0xdc>  // b.any
  406654:	add	x20, x8, #0x1
  406658:	add	x1, x29, #0x18
  40665c:	mov	x0, x20
  406660:	mov	w2, wzr
  406664:	bl	404b80 <strtoul@plt>
  406668:	cmp	x0, #0xff
  40666c:	b.hi	406404 <get_addr_1@@Base+0xdc>  // b.pmore
  406670:	ldr	x8, [x29, #24]
  406674:	cmp	x8, x20
  406678:	b.eq	406404 <get_addr_1@@Base+0xdc>  // b.none
  40667c:	strb	w0, [x19, #10]
  406680:	ldrb	w9, [x8]
  406684:	cbz	w9, 4066c4 <get_addr_1@@Base+0x39c>
  406688:	cmp	w9, #0x2e
  40668c:	b.ne	406404 <get_addr_1@@Base+0xdc>  // b.any
  406690:	add	x20, x8, #0x1
  406694:	add	x1, x29, #0x18
  406698:	mov	x0, x20
  40669c:	mov	w2, wzr
  4066a0:	bl	404b80 <strtoul@plt>
  4066a4:	cmp	x0, #0xff
  4066a8:	b.hi	406404 <get_addr_1@@Base+0xdc>  // b.pmore
  4066ac:	ldr	x8, [x29, #24]
  4066b0:	cmp	x8, x20
  4066b4:	b.eq	406404 <get_addr_1@@Base+0xdc>  // b.none
  4066b8:	strb	w0, [x19, #11]
  4066bc:	ldrb	w8, [x8]
  4066c0:	cbnz	w8, 406404 <get_addr_1@@Base+0xdc>
  4066c4:	mov	w8, #0xffff0004            	// #-65532
  4066c8:	b	4063f0 <get_addr_1@@Base+0xc8>

00000000004066cc <af_bit_len@@Base>:
  4066cc:	sub	w8, w0, #0x2
  4066d0:	cmp	w8, #0x1a
  4066d4:	b.hi	4066fc <af_bit_len@@Base+0x30>  // b.pmore
  4066d8:	adrp	x9, 40d000 <addraw_l@@Base+0xac>
  4066dc:	add	x9, x9, #0xbea
  4066e0:	adr	x10, 4066f4 <af_bit_len@@Base+0x28>
  4066e4:	ldrb	w11, [x9, x8]
  4066e8:	add	x10, x10, x11, lsl #2
  4066ec:	mov	w0, #0x80                  	// #128
  4066f0:	br	x10
  4066f4:	mov	w0, #0x20                  	// #32
  4066f8:	ret
  4066fc:	mov	w0, wzr
  406700:	ret
  406704:	mov	w0, #0x50                  	// #80
  406708:	ret
  40670c:	mov	w0, #0x10                  	// #16
  406710:	ret
  406714:	mov	w0, #0x14                  	// #20
  406718:	ret

000000000040671c <get_prefix_1@@Base>:
  40671c:	sub	sp, sp, #0x150
  406720:	stp	x22, x21, [sp, #304]
  406724:	mov	x22, x1
  406728:	stp	x20, x19, [sp, #320]
  40672c:	mov	x19, x0
  406730:	mov	w1, #0x2f                  	// #47
  406734:	mov	x0, x22
  406738:	stp	x29, x30, [sp, #272]
  40673c:	stp	x28, x23, [sp, #288]
  406740:	add	x29, sp, #0x110
  406744:	mov	w21, w2
  406748:	mov	w23, #0x2f                  	// #47
  40674c:	bl	404ec0 <strchr@plt>
  406750:	mov	x20, x0
  406754:	cbz	x0, 40677c <get_prefix_1@@Base+0x60>
  406758:	mov	x0, x19
  40675c:	mov	x1, x22
  406760:	mov	w2, w21
  406764:	strb	wzr, [x20]
  406768:	bl	406328 <get_addr_1@@Base>
  40676c:	mov	w8, w0
  406770:	strb	w23, [x20]
  406774:	cbnz	w8, 4068bc <get_prefix_1@@Base+0x1a0>
  406778:	b	406794 <get_prefix_1@@Base+0x78>
  40677c:	mov	x0, x19
  406780:	mov	x1, x22
  406784:	mov	w2, w21
  406788:	bl	406328 <get_addr_1@@Base>
  40678c:	mov	w8, w0
  406790:	cbnz	w8, 4068bc <get_prefix_1@@Base+0x1a0>
  406794:	ldrh	w8, [x19, #6]
  406798:	sub	w8, w8, #0x2
  40679c:	cmp	w8, #0x1a
  4067a0:	b.hi	4067d0 <get_prefix_1@@Base+0xb4>  // b.pmore
  4067a4:	adrp	x9, 40d000 <addraw_l@@Base+0xac>
  4067a8:	add	x9, x9, #0xc05
  4067ac:	adr	x10, 4067c0 <get_prefix_1@@Base+0xa4>
  4067b0:	ldrb	w11, [x9, x8]
  4067b4:	add	x10, x10, x11, lsl #2
  4067b8:	mov	w21, #0x80                  	// #128
  4067bc:	br	x10
  4067c0:	mov	w21, #0x20                  	// #32
  4067c4:	ldrh	w8, [x19, #4]
  4067c8:	cbnz	x20, 4067fc <get_prefix_1@@Base+0xe0>
  4067cc:	b	406898 <get_prefix_1@@Base+0x17c>
  4067d0:	mov	w21, wzr
  4067d4:	ldrh	w8, [x19, #4]
  4067d8:	cbnz	x20, 4067fc <get_prefix_1@@Base+0xe0>
  4067dc:	b	406898 <get_prefix_1@@Base+0x17c>
  4067e0:	mov	w21, #0x50                  	// #80
  4067e4:	ldrh	w8, [x19, #4]
  4067e8:	cbnz	x20, 4067fc <get_prefix_1@@Base+0xe0>
  4067ec:	b	406898 <get_prefix_1@@Base+0x17c>
  4067f0:	mov	w21, #0x10                  	// #16
  4067f4:	ldrh	w8, [x19, #4]
  4067f8:	cbz	x20, 406898 <get_prefix_1@@Base+0x17c>
  4067fc:	mov	w9, #0xfffe                	// #65534
  406800:	cmp	w8, w9
  406804:	b.eq	406884 <get_prefix_1@@Base+0x168>  // b.none
  406808:	ldrb	w8, [x20, #1]!
  40680c:	cbz	w8, 406850 <get_prefix_1@@Base+0x134>
  406810:	sub	x1, x29, #0x8
  406814:	mov	x0, x20
  406818:	mov	w2, wzr
  40681c:	bl	404b80 <strtoul@plt>
  406820:	ldur	x8, [x29, #-8]
  406824:	cbz	x8, 406850 <get_prefix_1@@Base+0x134>
  406828:	cmp	x8, x20
  40682c:	b.eq	406850 <get_prefix_1@@Base+0x134>  // b.none
  406830:	lsr	x9, x0, #32
  406834:	cbnz	x9, 406850 <get_prefix_1@@Base+0x134>
  406838:	ldrb	w8, [x8]
  40683c:	cbnz	w8, 406850 <get_prefix_1@@Base+0x134>
  406840:	cmp	w0, w21
  406844:	cset	w9, ls  // ls = plast
  406848:	b.hi	406884 <get_prefix_1@@Base+0x168>  // b.pmore
  40684c:	b	4068a8 <get_prefix_1@@Base+0x18c>
  406850:	mov	x0, sp
  406854:	mov	w2, #0x2                   	// #2
  406858:	mov	x1, x20
  40685c:	bl	406328 <get_addr_1@@Base>
  406860:	cbnz	w0, 406884 <get_prefix_1@@Base+0x168>
  406864:	ldrh	w8, [sp, #6]
  406868:	cmp	w8, #0x2
  40686c:	b.ne	406884 <get_prefix_1@@Base+0x168>  // b.any
  406870:	ldr	w9, [sp, #8]
  406874:	rev	w8, w9
  406878:	neg	w10, w8
  40687c:	bics	wzr, w10, w8
  406880:	b.eq	4068d8 <get_prefix_1@@Base+0x1bc>  // b.none
  406884:	mov	w8, #0xffffffff            	// #-1
  406888:	b	4068bc <get_prefix_1@@Base+0x1a0>
  40688c:	mov	w21, #0x14                  	// #20
  406890:	ldrh	w8, [x19, #4]
  406894:	cbnz	x20, 4067fc <get_prefix_1@@Base+0xe0>
  406898:	mov	w10, #0xfffe                	// #65534
  40689c:	cmp	w8, w10
  4068a0:	mov	w9, wzr
  4068a4:	csel	w0, wzr, w21, eq  // eq = none
  4068a8:	ldrh	w10, [x19]
  4068ac:	mov	w8, wzr
  4068b0:	strh	w0, [x19, #4]
  4068b4:	orr	w9, w10, w9
  4068b8:	strh	w9, [x19]
  4068bc:	ldp	x20, x19, [sp, #320]
  4068c0:	ldp	x22, x21, [sp, #304]
  4068c4:	ldp	x28, x23, [sp, #288]
  4068c8:	ldp	x29, x30, [sp, #272]
  4068cc:	mov	w0, w8
  4068d0:	add	sp, sp, #0x150
  4068d4:	ret
  4068d8:	mov	w0, wzr
  4068dc:	cbz	w9, 4068f0 <get_prefix_1@@Base+0x1d4>
  4068e0:	lsl	w8, w8, #1
  4068e4:	add	w0, w0, #0x1
  4068e8:	cbnz	w8, 4068e0 <get_prefix_1@@Base+0x1c4>
  4068ec:	b	406840 <get_prefix_1@@Base+0x124>
  4068f0:	mov	w9, #0x1                   	// #1
  4068f4:	b	4068a8 <get_prefix_1@@Base+0x18c>

00000000004068f8 <get_addr@@Base>:
  4068f8:	stp	x29, x30, [sp, #-48]!
  4068fc:	str	x21, [sp, #16]
  406900:	stp	x20, x19, [sp, #32]
  406904:	mov	x29, sp
  406908:	mov	w20, w2
  40690c:	mov	x19, x1
  406910:	bl	406328 <get_addr_1@@Base>
  406914:	cbnz	w0, 406928 <get_addr@@Base+0x30>
  406918:	ldp	x20, x19, [sp, #32]
  40691c:	ldr	x21, [sp, #16]
  406920:	ldp	x29, x30, [sp], #48
  406924:	ret
  406928:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  40692c:	ldr	x8, [x8, #3992]
  406930:	mov	w0, w20
  406934:	ldr	x21, [x8]
  406938:	bl	40695c <get_addr@@Base+0x64>
  40693c:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  406940:	mov	x2, x0
  406944:	add	x1, x1, #0xd70
  406948:	mov	x0, x21
  40694c:	mov	x3, x19
  406950:	bl	405060 <fprintf@plt>
  406954:	mov	w0, #0x1                   	// #1
  406958:	bl	404ba0 <exit@plt>
  40695c:	cmp	w0, #0x1c
  406960:	b.hi	406994 <get_addr@@Base+0x9c>  // b.pmore
  406964:	adrp	x9, 40d000 <addraw_l@@Base+0xac>
  406968:	mov	w8, w0
  40696c:	add	x9, x9, #0xc20
  406970:	adr	x10, 406988 <get_addr@@Base+0x90>
  406974:	ldrb	w11, [x9, x8]
  406978:	add	x10, x10, x11, lsl #2
  40697c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x640>
  406980:	add	x0, x0, #0xd7
  406984:	br	x10
  406988:	adrp	x0, 40d000 <addraw_l@@Base+0xac>
  40698c:	add	x0, x0, #0x9e0
  406990:	ret
  406994:	adrp	x0, 40d000 <addraw_l@@Base+0xac>
  406998:	add	x0, x0, #0xfc0
  40699c:	ret
  4069a0:	adrp	x0, 40d000 <addraw_l@@Base+0xac>
  4069a4:	add	x0, x0, #0xfc4
  4069a8:	ret
  4069ac:	adrp	x0, 40d000 <addraw_l@@Base+0xac>
  4069b0:	add	x0, x0, #0xfcd
  4069b4:	ret
  4069b8:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x640>
  4069bc:	add	x0, x0, #0x665
  4069c0:	ret
  4069c4:	adrp	x0, 40d000 <addraw_l@@Base+0xac>
  4069c8:	add	x0, x0, #0xfc8
  4069cc:	ret
  4069d0:	adrp	x0, 40d000 <addraw_l@@Base+0xac>
  4069d4:	add	x0, x0, #0x9e5
  4069d8:	ret

00000000004069dc <get_addr_rta@@Base>:
  4069dc:	ldrh	w8, [x1], #4
  4069e0:	sub	w8, w8, #0x6
  4069e4:	ror	w9, w8, #1
  4069e8:	cmp	w9, #0x7
  4069ec:	mov	w8, #0xffffffff            	// #-1
  4069f0:	b.hi	406b24 <get_addr_rta@@Base+0x148>  // b.pmore
  4069f4:	adrp	x10, 40d000 <addraw_l@@Base+0xac>
  4069f8:	add	x10, x10, #0xc3d
  4069fc:	adr	x11, 406a0c <get_addr_rta@@Base+0x30>
  406a00:	ldrb	w12, [x10, x9]
  406a04:	add	x11, x11, x12, lsl #2
  406a08:	br	x11
  406a0c:	mov	w8, #0xc                   	// #12
  406a10:	mov	w9, #0x2                   	// #2
  406a14:	strh	w8, [x0, #6]
  406a18:	strh	w9, [x0, #2]
  406a1c:	ldrh	w9, [x1]
  406a20:	strh	w9, [x0, #8]
  406a24:	cbnz	w2, 406a90 <get_addr_rta@@Base+0xb4>
  406a28:	b	406aa0 <get_addr_rta@@Base+0xc4>
  406a2c:	mov	w8, #0x2                   	// #2
  406a30:	mov	w9, #0x4                   	// #4
  406a34:	strh	w8, [x0, #6]
  406a38:	strh	w9, [x0, #2]
  406a3c:	ldr	w9, [x1]
  406a40:	str	w9, [x0, #8]
  406a44:	cbnz	w2, 406a90 <get_addr_rta@@Base+0xb4>
  406a48:	b	406aa0 <get_addr_rta@@Base+0xc4>
  406a4c:	mov	w8, #0x4                   	// #4
  406a50:	mov	w9, #0xa                   	// #10
  406a54:	strh	w8, [x0, #6]
  406a58:	strh	w9, [x0, #2]
  406a5c:	ldrh	w9, [x1, #8]
  406a60:	ldr	x10, [x1]
  406a64:	strh	w9, [x0, #16]
  406a68:	str	x10, [x0, #8]
  406a6c:	cbnz	w2, 406a90 <get_addr_rta@@Base+0xb4>
  406a70:	b	406aa0 <get_addr_rta@@Base+0xc4>
  406a74:	mov	w8, #0xa                   	// #10
  406a78:	mov	w9, #0x10                  	// #16
  406a7c:	strh	w8, [x0, #6]
  406a80:	strh	w9, [x0, #2]
  406a84:	ldr	q0, [x1]
  406a88:	stur	q0, [x0, #8]
  406a8c:	cbz	w2, 406aa0 <get_addr_rta@@Base+0xc4>
  406a90:	cmp	w8, w2
  406a94:	b.eq	406aa0 <get_addr_rta@@Base+0xc4>  // b.none
  406a98:	mov	w0, #0xfffffffe            	// #-2
  406a9c:	ret
  406aa0:	mov	w9, #0xffff                	// #65535
  406aa4:	cmp	w8, #0xa
  406aa8:	strh	w9, [x0, #4]
  406aac:	strh	wzr, [x0]
  406ab0:	b.eq	406ad8 <get_addr_rta@@Base+0xfc>  // b.none
  406ab4:	cmp	w8, #0x2
  406ab8:	mov	w8, wzr
  406abc:	b.ne	406b24 <get_addr_rta@@Base+0x148>  // b.any
  406ac0:	ldr	w8, [x0, #8]
  406ac4:	cbz	w8, 406b1c <get_addr_rta@@Base+0x140>
  406ac8:	and	w8, w8, #0xf0
  406acc:	cmp	w8, #0xe0
  406ad0:	b.eq	406aec <get_addr_rta@@Base+0x110>  // b.none
  406ad4:	b	406b10 <get_addr_rta@@Base+0x134>
  406ad8:	ldr	w8, [x0, #8]
  406adc:	cbz	w8, 406af8 <get_addr_rta@@Base+0x11c>
  406ae0:	mvn	w8, w8
  406ae4:	tst	w8, #0xff
  406ae8:	b.ne	406b10 <get_addr_rta@@Base+0x134>  // b.any
  406aec:	mov	w8, wzr
  406af0:	mov	w9, #0xa                   	// #10
  406af4:	b	406b20 <get_addr_rta@@Base+0x144>
  406af8:	ldr	w8, [x0, #12]
  406afc:	cbnz	w8, 406b10 <get_addr_rta@@Base+0x134>
  406b00:	ldr	w8, [x0, #16]
  406b04:	cbnz	w8, 406b10 <get_addr_rta@@Base+0x134>
  406b08:	ldr	w8, [x0, #20]
  406b0c:	cbz	w8, 406b1c <get_addr_rta@@Base+0x140>
  406b10:	mov	w8, wzr
  406b14:	mov	w9, #0x2                   	// #2
  406b18:	b	406b20 <get_addr_rta@@Base+0x144>
  406b1c:	mov	w9, #0x6                   	// #6
  406b20:	strh	w9, [x0]
  406b24:	mov	w0, w8
  406b28:	ret

0000000000406b2c <get_prefix@@Base>:
  406b2c:	stp	x29, x30, [sp, #-48]!
  406b30:	stp	x20, x19, [sp, #32]
  406b34:	mov	x19, x1
  406b38:	cmp	w2, #0x11
  406b3c:	str	x21, [sp, #16]
  406b40:	mov	x29, sp
  406b44:	b.eq	406b68 <get_prefix@@Base+0x3c>  // b.none
  406b48:	mov	x1, x19
  406b4c:	mov	w20, w2
  406b50:	bl	40671c <get_prefix_1@@Base>
  406b54:	cbnz	w0, 406b8c <get_prefix@@Base+0x60>
  406b58:	ldp	x20, x19, [sp, #32]
  406b5c:	ldr	x21, [sp, #16]
  406b60:	ldp	x29, x30, [sp], #48
  406b64:	ret
  406b68:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  406b6c:	ldr	x8, [x8, #3992]
  406b70:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  406b74:	add	x1, x1, #0xda1
  406b78:	mov	x2, x19
  406b7c:	ldr	x0, [x8]
  406b80:	bl	405060 <fprintf@plt>
  406b84:	mov	w0, #0x1                   	// #1
  406b88:	bl	404ba0 <exit@plt>
  406b8c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  406b90:	ldr	x8, [x8, #3992]
  406b94:	mov	w0, w20
  406b98:	ldr	x21, [x8]
  406b9c:	bl	40695c <get_addr@@Base+0x64>
  406ba0:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  406ba4:	mov	x2, x0
  406ba8:	add	x1, x1, #0xde9
  406bac:	mov	x0, x21
  406bb0:	mov	x3, x19
  406bb4:	bl	405060 <fprintf@plt>
  406bb8:	mov	w0, #0x1                   	// #1
  406bbc:	bl	404ba0 <exit@plt>

0000000000406bc0 <get_addr32@@Base>:
  406bc0:	sub	sp, sp, #0x130
  406bc4:	stp	x28, x19, [sp, #288]
  406bc8:	mov	x19, x0
  406bcc:	add	x0, sp, #0x8
  406bd0:	mov	w2, #0x2                   	// #2
  406bd4:	mov	x1, x19
  406bd8:	stp	x29, x30, [sp, #272]
  406bdc:	add	x29, sp, #0x110
  406be0:	bl	406328 <get_addr_1@@Base>
  406be4:	cbnz	w0, 406bfc <get_addr32@@Base+0x3c>
  406be8:	ldr	w0, [sp, #16]
  406bec:	ldp	x28, x19, [sp, #288]
  406bf0:	ldp	x29, x30, [sp, #272]
  406bf4:	add	sp, sp, #0x130
  406bf8:	ret
  406bfc:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  406c00:	ldr	x8, [x8, #3992]
  406c04:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  406c08:	add	x1, x1, #0xe19
  406c0c:	mov	x2, x19
  406c10:	ldr	x0, [x8]
  406c14:	bl	405060 <fprintf@plt>
  406c18:	mov	w0, #0x1                   	// #1
  406c1c:	bl	404ba0 <exit@plt>

0000000000406c20 <incomplete_command@@Base>:
  406c20:	stp	x29, x30, [sp, #-16]!
  406c24:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  406c28:	ldr	x8, [x8, #3992]
  406c2c:	adrp	x0, 40d000 <addraw_l@@Base+0xac>
  406c30:	add	x0, x0, #0xe4c
  406c34:	mov	w1, #0x30                  	// #48
  406c38:	ldr	x3, [x8]
  406c3c:	mov	w2, #0x1                   	// #1
  406c40:	mov	x29, sp
  406c44:	bl	404ee0 <fwrite@plt>
  406c48:	mov	w0, #0xffffffff            	// #-1
  406c4c:	bl	404ba0 <exit@plt>

0000000000406c50 <missarg@@Base>:
  406c50:	stp	x29, x30, [sp, #-16]!
  406c54:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  406c58:	ldr	x8, [x8, #3992]
  406c5c:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  406c60:	mov	x2, x0
  406c64:	add	x1, x1, #0xe7d
  406c68:	ldr	x8, [x8]
  406c6c:	mov	x29, sp
  406c70:	mov	x0, x8
  406c74:	bl	405060 <fprintf@plt>
  406c78:	mov	w0, #0xffffffff            	// #-1
  406c7c:	bl	404ba0 <exit@plt>

0000000000406c80 <invarg@@Base>:
  406c80:	stp	x29, x30, [sp, #-16]!
  406c84:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  406c88:	ldr	x8, [x8, #3992]
  406c8c:	mov	x2, x1
  406c90:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  406c94:	mov	x3, x0
  406c98:	ldr	x8, [x8]
  406c9c:	add	x1, x1, #0xe9f
  406ca0:	mov	x29, sp
  406ca4:	mov	x0, x8
  406ca8:	bl	405060 <fprintf@plt>
  406cac:	mov	w0, #0xffffffff            	// #-1
  406cb0:	bl	404ba0 <exit@plt>

0000000000406cb4 <duparg@@Base>:
  406cb4:	stp	x29, x30, [sp, #-16]!
  406cb8:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  406cbc:	ldr	x8, [x8, #3992]
  406cc0:	mov	x3, x1
  406cc4:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  406cc8:	mov	x2, x0
  406ccc:	ldr	x8, [x8]
  406cd0:	add	x1, x1, #0xec2
  406cd4:	mov	x29, sp
  406cd8:	mov	x0, x8
  406cdc:	bl	405060 <fprintf@plt>
  406ce0:	mov	w0, #0xffffffff            	// #-1
  406ce4:	bl	404ba0 <exit@plt>

0000000000406ce8 <duparg2@@Base>:
  406ce8:	stp	x29, x30, [sp, #-16]!
  406cec:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  406cf0:	ldr	x8, [x8, #3992]
  406cf4:	mov	x3, x1
  406cf8:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  406cfc:	mov	x2, x0
  406d00:	ldr	x8, [x8]
  406d04:	add	x1, x1, #0xef4
  406d08:	mov	x29, sp
  406d0c:	mov	x0, x8
  406d10:	bl	405060 <fprintf@plt>
  406d14:	mov	w0, #0xffffffff            	// #-1
  406d18:	bl	404ba0 <exit@plt>

0000000000406d1c <nodev@@Base>:
  406d1c:	stp	x29, x30, [sp, #-16]!
  406d20:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  406d24:	ldr	x8, [x8, #3992]
  406d28:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  406d2c:	mov	x2, x0
  406d30:	add	x1, x1, #0xf2c
  406d34:	ldr	x8, [x8]
  406d38:	mov	x29, sp
  406d3c:	mov	x0, x8
  406d40:	bl	405060 <fprintf@plt>
  406d44:	mov	w0, #0xffffffff            	// #-1
  406d48:	ldp	x29, x30, [sp], #16
  406d4c:	ret

0000000000406d50 <check_ifname@@Base>:
  406d50:	stp	x29, x30, [sp, #-32]!
  406d54:	stp	x20, x19, [sp, #16]
  406d58:	mov	x29, sp
  406d5c:	mov	x19, x0
  406d60:	bl	404b90 <strlen@plt>
  406d64:	cmp	x0, #0xf
  406d68:	b.hi	406db8 <check_ifname@@Base+0x68>  // b.pmore
  406d6c:	ldrb	w20, [x19]
  406d70:	cbz	w20, 406db8 <check_ifname@@Base+0x68>
  406d74:	add	x19, x19, #0x1
  406d78:	ands	w8, w20, #0xff
  406d7c:	b.eq	406da8 <check_ifname@@Base+0x58>  // b.none
  406d80:	cmp	w8, #0x2f
  406d84:	b.eq	406db8 <check_ifname@@Base+0x68>  // b.none
  406d88:	bl	404e30 <__ctype_b_loc@plt>
  406d8c:	ldr	x8, [x0]
  406d90:	and	x9, x20, #0xff
  406d94:	ldrh	w8, [x8, x9, lsl #1]
  406d98:	tbnz	w8, #13, 406db8 <check_ifname@@Base+0x68>
  406d9c:	ldrb	w20, [x19], #1
  406da0:	ands	w8, w20, #0xff
  406da4:	b.ne	406d80 <check_ifname@@Base+0x30>  // b.any
  406da8:	mov	w0, wzr
  406dac:	ldp	x20, x19, [sp, #16]
  406db0:	ldp	x29, x30, [sp], #32
  406db4:	ret
  406db8:	mov	w0, #0xffffffff            	// #-1
  406dbc:	ldp	x20, x19, [sp, #16]
  406dc0:	ldp	x29, x30, [sp], #32
  406dc4:	ret

0000000000406dc8 <check_altifname@@Base>:
  406dc8:	stp	x29, x30, [sp, #-32]!
  406dcc:	stp	x20, x19, [sp, #16]
  406dd0:	ldrb	w20, [x0]
  406dd4:	mov	x29, sp
  406dd8:	cbz	w20, 406e20 <check_altifname@@Base+0x58>
  406ddc:	add	x19, x0, #0x1
  406de0:	ands	w8, w20, #0xff
  406de4:	b.eq	406e10 <check_altifname@@Base+0x48>  // b.none
  406de8:	cmp	w8, #0x2f
  406dec:	b.eq	406e20 <check_altifname@@Base+0x58>  // b.none
  406df0:	bl	404e30 <__ctype_b_loc@plt>
  406df4:	ldr	x8, [x0]
  406df8:	and	x9, x20, #0xff
  406dfc:	ldrh	w8, [x8, x9, lsl #1]
  406e00:	tbnz	w8, #13, 406e20 <check_altifname@@Base+0x58>
  406e04:	ldrb	w20, [x19], #1
  406e08:	ands	w8, w20, #0xff
  406e0c:	b.ne	406de8 <check_altifname@@Base+0x20>  // b.any
  406e10:	mov	w0, wzr
  406e14:	ldp	x20, x19, [sp, #16]
  406e18:	ldp	x29, x30, [sp], #32
  406e1c:	ret
  406e20:	mov	w0, #0xffffffff            	// #-1
  406e24:	ldp	x20, x19, [sp, #16]
  406e28:	ldp	x29, x30, [sp], #32
  406e2c:	ret

0000000000406e30 <get_ifname@@Base>:
  406e30:	stp	x29, x30, [sp, #-48]!
  406e34:	stp	x20, x19, [sp, #32]
  406e38:	mov	x20, x0
  406e3c:	mov	x0, x1
  406e40:	stp	x22, x21, [sp, #16]
  406e44:	mov	x29, sp
  406e48:	mov	x19, x1
  406e4c:	bl	404b90 <strlen@plt>
  406e50:	cmp	x0, #0xf
  406e54:	b.hi	406ebc <get_ifname@@Base+0x8c>  // b.pmore
  406e58:	ldrb	w22, [x19]
  406e5c:	cbz	w22, 406ebc <get_ifname@@Base+0x8c>
  406e60:	mov	w21, #0x1                   	// #1
  406e64:	ands	w8, w22, #0xff
  406e68:	b.eq	406e98 <get_ifname@@Base+0x68>  // b.none
  406e6c:	cmp	w8, #0x2f
  406e70:	b.eq	406ebc <get_ifname@@Base+0x8c>  // b.none
  406e74:	bl	404e30 <__ctype_b_loc@plt>
  406e78:	ldr	x8, [x0]
  406e7c:	and	x9, x22, #0xff
  406e80:	ldrh	w8, [x8, x9, lsl #1]
  406e84:	tbnz	w8, #13, 406ebc <get_ifname@@Base+0x8c>
  406e88:	ldrb	w22, [x19, x21]
  406e8c:	add	x21, x21, #0x1
  406e90:	ands	w8, w22, #0xff
  406e94:	b.ne	406e6c <get_ifname@@Base+0x3c>  // b.any
  406e98:	mov	w2, #0x10                  	// #16
  406e9c:	mov	x0, x20
  406ea0:	mov	x1, x19
  406ea4:	bl	404fc0 <strncpy@plt>
  406ea8:	mov	w0, wzr
  406eac:	ldp	x20, x19, [sp, #32]
  406eb0:	ldp	x22, x21, [sp, #16]
  406eb4:	ldp	x29, x30, [sp], #48
  406eb8:	ret
  406ebc:	mov	w0, #0xffffffff            	// #-1
  406ec0:	ldp	x20, x19, [sp, #32]
  406ec4:	ldp	x22, x21, [sp, #16]
  406ec8:	ldp	x29, x30, [sp], #48
  406ecc:	ret

0000000000406ed0 <get_ifname_rta@@Base>:
  406ed0:	stp	x29, x30, [sp, #-48]!
  406ed4:	str	x21, [sp, #16]
  406ed8:	stp	x20, x19, [sp, #32]
  406edc:	mov	x29, sp
  406ee0:	cbz	x1, 406f3c <get_ifname_rta@@Base+0x6c>
  406ee4:	add	x19, x1, #0x4
  406ee8:	mov	x0, x19
  406eec:	bl	404b90 <strlen@plt>
  406ef0:	cmp	x0, #0xf
  406ef4:	b.hi	406f78 <get_ifname_rta@@Base+0xa8>  // b.pmore
  406ef8:	ldrb	w21, [x19]
  406efc:	cbz	w21, 406f78 <get_ifname_rta@@Base+0xa8>
  406f00:	mov	w20, #0x1                   	// #1
  406f04:	ands	w8, w21, #0xff
  406f08:	b.eq	406f7c <get_ifname_rta@@Base+0xac>  // b.none
  406f0c:	cmp	w8, #0x2f
  406f10:	b.eq	406f78 <get_ifname_rta@@Base+0xa8>  // b.none
  406f14:	bl	404e30 <__ctype_b_loc@plt>
  406f18:	ldr	x8, [x0]
  406f1c:	and	x9, x21, #0xff
  406f20:	ldrh	w8, [x8, x9, lsl #1]
  406f24:	tbnz	w8, #13, 406f78 <get_ifname_rta@@Base+0xa8>
  406f28:	ldrb	w21, [x19, x20]
  406f2c:	add	x20, x20, #0x1
  406f30:	ands	w8, w21, #0xff
  406f34:	b.ne	406f0c <get_ifname_rta@@Base+0x3c>  // b.any
  406f38:	b	406f7c <get_ifname_rta@@Base+0xac>
  406f3c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  406f40:	ldr	x8, [x8, #3992]
  406f44:	mov	w19, w0
  406f48:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  406f4c:	add	x1, x1, #0xf45
  406f50:	ldr	x0, [x8]
  406f54:	mov	w2, w19
  406f58:	bl	405060 <fprintf@plt>
  406f5c:	mov	w0, w19
  406f60:	bl	409040 <ll_idx_n2a@@Base>
  406f64:	mov	x19, x0
  406f68:	mov	x0, x19
  406f6c:	bl	404b90 <strlen@plt>
  406f70:	cmp	x0, #0xf
  406f74:	b.ls	406ef8 <get_ifname_rta@@Base+0x28>  // b.plast
  406f78:	mov	x19, xzr
  406f7c:	mov	x0, x19
  406f80:	ldp	x20, x19, [sp, #32]
  406f84:	ldr	x21, [sp, #16]
  406f88:	ldp	x29, x30, [sp], #48
  406f8c:	ret

0000000000406f90 <matches@@Base>:
  406f90:	ldrb	w9, [x0]
  406f94:	cbz	w9, 406fd8 <matches@@Base+0x48>
  406f98:	ldrb	w10, [x1]
  406f9c:	mov	x8, x0
  406fa0:	mov	w0, #0x1                   	// #1
  406fa4:	cbz	w10, 406fd4 <matches@@Base+0x44>
  406fa8:	cmp	w9, w10
  406fac:	b.ne	406fd4 <matches@@Base+0x44>  // b.any
  406fb0:	add	x8, x8, #0x1
  406fb4:	add	x9, x1, #0x1
  406fb8:	ldrb	w11, [x9], #1
  406fbc:	ldrb	w10, [x8], #1
  406fc0:	cbz	w11, 406fcc <matches@@Base+0x3c>
  406fc4:	cmp	w10, w11
  406fc8:	b.eq	406fb8 <matches@@Base+0x28>  // b.none
  406fcc:	cmp	w10, #0x0
  406fd0:	cset	w0, ne  // ne = any
  406fd4:	ret
  406fd8:	mov	w0, #0x1                   	// #1
  406fdc:	ret

0000000000406fe0 <inet_addr_match@@Base>:
  406fe0:	stp	x29, x30, [sp, #-48]!
  406fe4:	stp	x22, x21, [sp, #16]
  406fe8:	stp	x20, x19, [sp, #32]
  406fec:	mov	w21, w2
  406ff0:	mov	x19, x1
  406ff4:	asr	w22, w2, #5
  406ff8:	mov	x20, x0
  406ffc:	mov	x29, sp
  407000:	cbz	w22, 407030 <inet_addr_match@@Base+0x50>
  407004:	lsl	w8, w22, #2
  407008:	add	x1, x19, #0x8
  40700c:	add	x0, x20, #0x8
  407010:	sxtw	x2, w8
  407014:	bl	404d60 <bcmp@plt>
  407018:	cbz	w0, 407030 <inet_addr_match@@Base+0x50>
  40701c:	mov	w0, #0xffffffff            	// #-1
  407020:	ldp	x20, x19, [sp, #32]
  407024:	ldp	x22, x21, [sp, #16]
  407028:	ldp	x29, x30, [sp], #48
  40702c:	ret
  407030:	and	w8, w21, #0x1f
  407034:	cbz	w8, 40707c <inet_addr_match@@Base+0x9c>
  407038:	sbfiz	x9, x22, #2, #32
  40703c:	add	x10, x20, x9
  407040:	add	x9, x19, x9
  407044:	ldr	w10, [x10, #8]
  407048:	ldr	w9, [x9, #8]
  40704c:	neg	w8, w8
  407050:	mov	w11, #0xffffffff            	// #-1
  407054:	lsl	w8, w11, w8
  407058:	rev	w8, w8
  40705c:	eor	w9, w9, w10
  407060:	tst	w9, w8
  407064:	b.eq	40707c <inet_addr_match@@Base+0x9c>  // b.none
  407068:	mov	w0, #0x1                   	// #1
  40706c:	ldp	x20, x19, [sp, #32]
  407070:	ldp	x22, x21, [sp, #16]
  407074:	ldp	x29, x30, [sp], #48
  407078:	ret
  40707c:	mov	w0, wzr
  407080:	ldp	x20, x19, [sp, #32]
  407084:	ldp	x22, x21, [sp, #16]
  407088:	ldp	x29, x30, [sp], #48
  40708c:	ret

0000000000407090 <inet_addr_match_rta@@Base>:
  407090:	sub	sp, sp, #0x140
  407094:	stp	x29, x30, [sp, #272]
  407098:	stp	x28, x21, [sp, #288]
  40709c:	stp	x20, x19, [sp, #304]
  4070a0:	add	x29, sp, #0x110
  4070a4:	cbz	x1, 407274 <inet_addr_match_rta@@Base+0x1e4>
  4070a8:	ldrh	w8, [x0, #6]
  4070ac:	mov	x19, x0
  4070b0:	cbz	w8, 407274 <inet_addr_match_rta@@Base+0x1e4>
  4070b4:	ldrsh	w20, [x19, #4]
  4070b8:	cmp	w20, #0x1
  4070bc:	b.lt	407274 <inet_addr_match_rta@@Base+0x1e4>  // b.tstop
  4070c0:	ldrh	w9, [x1], #4
  4070c4:	mov	w0, #0xffffffff            	// #-1
  4070c8:	sub	w9, w9, #0x6
  4070cc:	ror	w9, w9, #1
  4070d0:	cmp	w9, #0x7
  4070d4:	b.hi	407278 <inet_addr_match_rta@@Base+0x1e8>  // b.pmore
  4070d8:	adrp	x10, 40d000 <addraw_l@@Base+0xac>
  4070dc:	add	x10, x10, #0xc45
  4070e0:	adr	x11, 4070f0 <inet_addr_match_rta@@Base+0x60>
  4070e4:	ldrb	w12, [x10, x9]
  4070e8:	add	x11, x11, x12, lsl #2
  4070ec:	br	x11
  4070f0:	mov	w9, #0xc                   	// #12
  4070f4:	mov	w10, #0x2                   	// #2
  4070f8:	strh	w9, [sp, #14]
  4070fc:	strh	w10, [sp, #10]
  407100:	ldrh	w10, [x1]
  407104:	strh	w10, [sp, #16]
  407108:	cmp	w9, w8
  40710c:	b.ne	407224 <inet_addr_match_rta@@Base+0x194>  // b.any
  407110:	b	407184 <inet_addr_match_rta@@Base+0xf4>
  407114:	mov	w9, #0x2                   	// #2
  407118:	mov	w10, #0x4                   	// #4
  40711c:	strh	w9, [sp, #14]
  407120:	strh	w10, [sp, #10]
  407124:	ldr	w10, [x1]
  407128:	str	w10, [sp, #16]
  40712c:	cmp	w9, w8
  407130:	b.ne	407224 <inet_addr_match_rta@@Base+0x194>  // b.any
  407134:	b	407184 <inet_addr_match_rta@@Base+0xf4>
  407138:	mov	w9, #0x4                   	// #4
  40713c:	mov	w10, #0xa                   	// #10
  407140:	strh	w9, [sp, #14]
  407144:	strh	w10, [sp, #10]
  407148:	ldrh	w10, [x1, #8]
  40714c:	ldr	x11, [x1]
  407150:	strh	w10, [sp, #24]
  407154:	str	x11, [sp, #16]
  407158:	cmp	w9, w8
  40715c:	b.eq	407184 <inet_addr_match_rta@@Base+0xf4>  // b.none
  407160:	b	407224 <inet_addr_match_rta@@Base+0x194>
  407164:	mov	w9, #0xa                   	// #10
  407168:	mov	w10, #0x10                  	// #16
  40716c:	strh	w9, [sp, #14]
  407170:	strh	w10, [sp, #10]
  407174:	ldr	q0, [x1]
  407178:	stur	q0, [sp, #16]
  40717c:	cmp	w9, w8
  407180:	b.ne	407224 <inet_addr_match_rta@@Base+0x194>  // b.any
  407184:	and	w8, w8, #0xf
  407188:	and	x9, x20, #0xffff
  40718c:	mov	w10, #0xffff                	// #65535
  407190:	cmp	w8, #0xa
  407194:	strh	w10, [sp, #12]
  407198:	strh	wzr, [sp, #8]
  40719c:	b.eq	4071c0 <inet_addr_match_rta@@Base+0x130>  // b.none
  4071a0:	cmp	w8, #0x2
  4071a4:	b.ne	407204 <inet_addr_match_rta@@Base+0x174>  // b.any
  4071a8:	ldr	w8, [sp, #16]
  4071ac:	cbz	w8, 4071fc <inet_addr_match_rta@@Base+0x16c>
  4071b0:	and	w8, w8, #0xf0
  4071b4:	cmp	w8, #0xe0
  4071b8:	b.eq	4071d4 <inet_addr_match_rta@@Base+0x144>  // b.none
  4071bc:	b	4071f4 <inet_addr_match_rta@@Base+0x164>
  4071c0:	ldr	w8, [sp, #16]
  4071c4:	cbz	w8, 4071dc <inet_addr_match_rta@@Base+0x14c>
  4071c8:	mvn	w8, w8
  4071cc:	tst	w8, #0xff
  4071d0:	b.ne	4071f4 <inet_addr_match_rta@@Base+0x164>  // b.any
  4071d4:	mov	w8, #0xa                   	// #10
  4071d8:	b	407200 <inet_addr_match_rta@@Base+0x170>
  4071dc:	ldr	w8, [sp, #20]
  4071e0:	cbnz	w8, 4071f4 <inet_addr_match_rta@@Base+0x164>
  4071e4:	ldr	w8, [sp, #24]
  4071e8:	cbnz	w8, 4071f4 <inet_addr_match_rta@@Base+0x164>
  4071ec:	ldr	w8, [sp, #28]
  4071f0:	cbz	w8, 4071fc <inet_addr_match_rta@@Base+0x16c>
  4071f4:	mov	w8, #0x2                   	// #2
  4071f8:	b	407200 <inet_addr_match_rta@@Base+0x170>
  4071fc:	mov	w8, #0x6                   	// #6
  407200:	strh	w8, [sp, #8]
  407204:	lsr	x21, x9, #5
  407208:	cbz	w21, 40722c <inet_addr_match_rta@@Base+0x19c>
  40720c:	add	x8, sp, #0x8
  407210:	add	x1, x19, #0x8
  407214:	add	x0, x8, #0x8
  407218:	lsl	x2, x21, #2
  40721c:	bl	404d60 <bcmp@plt>
  407220:	cbz	w0, 40722c <inet_addr_match_rta@@Base+0x19c>
  407224:	mov	w0, #0xffffffff            	// #-1
  407228:	b	407278 <inet_addr_match_rta@@Base+0x1e8>
  40722c:	and	w8, w20, #0xffff
  407230:	and	w8, w8, #0x1f
  407234:	cbz	w8, 407274 <inet_addr_match_rta@@Base+0x1e4>
  407238:	lsl	x9, x21, #2
  40723c:	add	x10, sp, #0x8
  407240:	add	x10, x10, x9
  407244:	add	x9, x19, x9
  407248:	ldr	w10, [x10, #8]
  40724c:	ldr	w9, [x9, #8]
  407250:	neg	w8, w8
  407254:	mov	w11, #0xffffffff            	// #-1
  407258:	lsl	w8, w11, w8
  40725c:	rev	w8, w8
  407260:	eor	w9, w9, w10
  407264:	tst	w9, w8
  407268:	b.eq	407274 <inet_addr_match_rta@@Base+0x1e4>  // b.none
  40726c:	mov	w0, #0x1                   	// #1
  407270:	b	407278 <inet_addr_match_rta@@Base+0x1e8>
  407274:	mov	w0, wzr
  407278:	ldp	x20, x19, [sp, #304]
  40727c:	ldp	x28, x21, [sp, #288]
  407280:	ldp	x29, x30, [sp, #272]
  407284:	add	sp, sp, #0x140
  407288:	ret

000000000040728c <__get_hz@@Base>:
  40728c:	stp	x29, x30, [sp, #-64]!
  407290:	str	x28, [sp, #16]
  407294:	stp	x22, x21, [sp, #32]
  407298:	stp	x20, x19, [sp, #48]
  40729c:	mov	x29, sp
  4072a0:	sub	sp, sp, #0x400
  4072a4:	adrp	x0, 40d000 <addraw_l@@Base+0xac>
  4072a8:	add	x0, x0, #0xf71
  4072ac:	bl	405020 <getenv@plt>
  4072b0:	cbz	x0, 4072d0 <__get_hz@@Base+0x44>
  4072b4:	mov	w2, #0xa                   	// #10
  4072b8:	mov	x1, xzr
  4072bc:	bl	404e40 <strtol@plt>
  4072c0:	cmp	w0, #0x0
  4072c4:	mov	w8, #0x64                  	// #100
  4072c8:	csel	w19, w8, w0, eq  // eq = none
  4072cc:	b	407374 <__get_hz@@Base+0xe8>
  4072d0:	adrp	x0, 40d000 <addraw_l@@Base+0xac>
  4072d4:	add	x0, x0, #0xf74
  4072d8:	bl	405020 <getenv@plt>
  4072dc:	cbz	x0, 4072f0 <__get_hz@@Base+0x64>
  4072e0:	adrp	x2, 40d000 <addraw_l@@Base+0xac>
  4072e4:	mov	x3, x0
  4072e8:	add	x2, x2, #0xd4e
  4072ec:	b	40730c <__get_hz@@Base+0x80>
  4072f0:	adrp	x0, 40d000 <addraw_l@@Base+0xac>
  4072f4:	add	x0, x0, #0xf84
  4072f8:	bl	405020 <getenv@plt>
  4072fc:	cbz	x0, 407390 <__get_hz@@Base+0x104>
  407300:	adrp	x2, 40d000 <addraw_l@@Base+0xac>
  407304:	mov	x3, x0
  407308:	add	x2, x2, #0xf8e
  40730c:	mov	x0, sp
  407310:	mov	w1, #0x3ff                 	// #1023
  407314:	bl	404c70 <snprintf@plt>
  407318:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40731c:	add	x1, x1, #0x2d7
  407320:	mov	x0, sp
  407324:	bl	404f20 <fopen64@plt>
  407328:	cbz	x0, 407370 <__get_hz@@Base+0xe4>
  40732c:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  407330:	add	x1, x1, #0xfad
  407334:	add	x2, x29, #0x1c
  407338:	add	x3, x29, #0x18
  40733c:	mov	x20, x0
  407340:	bl	404ce0 <__isoc99_fscanf@plt>
  407344:	ldp	w19, w22, [x29, #24]
  407348:	mov	w21, w0
  40734c:	mov	x0, x20
  407350:	bl	404ca0 <fclose@plt>
  407354:	cmp	w21, #0x2
  407358:	b.ne	407370 <__get_hz@@Base+0xe4>  // b.any
  40735c:	mov	w8, #0x4240                	// #16960
  407360:	movk	w8, #0xf, lsl #16
  407364:	cmp	w22, w8
  407368:	b.ne	407370 <__get_hz@@Base+0xe4>  // b.any
  40736c:	cbnz	w19, 407374 <__get_hz@@Base+0xe8>
  407370:	mov	w19, #0x64                  	// #100
  407374:	mov	w0, w19
  407378:	add	sp, sp, #0x400
  40737c:	ldp	x20, x19, [sp, #48]
  407380:	ldp	x22, x21, [sp, #32]
  407384:	ldr	x28, [sp, #16]
  407388:	ldp	x29, x30, [sp], #64
  40738c:	ret
  407390:	adrp	x8, 40d000 <addraw_l@@Base+0xac>
  407394:	add	x8, x8, #0xf9c
  407398:	ldr	q0, [x8]
  40739c:	strb	wzr, [sp, #16]
  4073a0:	str	q0, [sp]
  4073a4:	b	407318 <__get_hz@@Base+0x8c>

00000000004073a8 <__get_user_hz@@Base>:
  4073a8:	stp	x29, x30, [sp, #-16]!
  4073ac:	mov	w0, #0x2                   	// #2
  4073b0:	mov	x29, sp
  4073b4:	bl	404f50 <sysconf@plt>
  4073b8:	ldp	x29, x30, [sp], #16
  4073bc:	ret

00000000004073c0 <rt_addr_n2a_r@@Base>:
  4073c0:	sub	w9, w0, #0x2
  4073c4:	cmp	w9, #0x1a
  4073c8:	b.hi	407420 <rt_addr_n2a_r@@Base+0x60>  // b.pmore
  4073cc:	adrp	x10, 40d000 <addraw_l@@Base+0xac>
  4073d0:	add	x10, x10, #0xc4d
  4073d4:	adr	x11, 4073e8 <rt_addr_n2a_r@@Base+0x28>
  4073d8:	ldrb	w12, [x10, x9]
  4073dc:	add	x11, x11, x12, lsl #2
  4073e0:	mov	x8, x2
  4073e4:	br	x11
  4073e8:	mov	x1, x8
  4073ec:	mov	x2, x3
  4073f0:	mov	w3, w4
  4073f4:	b	405080 <inet_ntop@plt>
  4073f8:	ldrh	w9, [x8]
  4073fc:	cmp	w9, #0xa
  407400:	b.eq	407450 <rt_addr_n2a_r@@Base+0x90>  // b.none
  407404:	cmp	w9, #0x2
  407408:	b.ne	407420 <rt_addr_n2a_r@@Base+0x60>  // b.any
  40740c:	add	x1, x8, #0x4
  407410:	mov	w0, #0x2                   	// #2
  407414:	mov	x2, x3
  407418:	mov	w3, w4
  40741c:	b	405080 <inet_ntop@plt>
  407420:	adrp	x0, 40d000 <addraw_l@@Base+0xac>
  407424:	add	x0, x0, #0xfc0
  407428:	ret
  40742c:	mov	w2, #0xffff                	// #65535
  407430:	mov	x0, x8
  407434:	b	4095cc <ll_addr_n2a@@Base>
  407438:	sxtw	x9, w4
  40743c:	mov	w0, #0x1c                  	// #28
  407440:	mov	x1, x8
  407444:	mov	x2, x3
  407448:	mov	x3, x9
  40744c:	b	40a500 <mpls_ntop@@Base>
  407450:	add	x1, x8, #0x8
  407454:	mov	w0, #0xa                   	// #10
  407458:	mov	x2, x3
  40745c:	mov	w3, w4
  407460:	b	405080 <inet_ntop@plt>

0000000000407464 <rt_addr_n2a@@Base>:
  407464:	adrp	x3, 41f000 <memcpy@GLIBC_2.17>
  407468:	add	x3, x3, #0x2d0
  40746c:	mov	w4, #0x100                 	// #256
  407470:	b	4073c0 <rt_addr_n2a_r@@Base>

0000000000407474 <read_family@@Base>:
  407474:	stp	x29, x30, [sp, #-32]!
  407478:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  40747c:	add	x1, x1, #0x9e0
  407480:	str	x19, [sp, #16]
  407484:	mov	x29, sp
  407488:	mov	x19, x0
  40748c:	bl	404e20 <strcmp@plt>
  407490:	cbz	w0, 40750c <read_family@@Base+0x98>
  407494:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  407498:	add	x1, x1, #0x9e5
  40749c:	mov	x0, x19
  4074a0:	bl	404e20 <strcmp@plt>
  4074a4:	cbz	w0, 40751c <read_family@@Base+0xa8>
  4074a8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  4074ac:	add	x1, x1, #0x665
  4074b0:	mov	x0, x19
  4074b4:	bl	404e20 <strcmp@plt>
  4074b8:	cbz	w0, 40752c <read_family@@Base+0xb8>
  4074bc:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  4074c0:	add	x1, x1, #0xfc4
  4074c4:	mov	x0, x19
  4074c8:	bl	404e20 <strcmp@plt>
  4074cc:	cbz	w0, 40753c <read_family@@Base+0xc8>
  4074d0:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  4074d4:	add	x1, x1, #0xfc8
  4074d8:	mov	x0, x19
  4074dc:	bl	404e20 <strcmp@plt>
  4074e0:	cbz	w0, 40754c <read_family@@Base+0xd8>
  4074e4:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  4074e8:	add	x1, x1, #0xfcd
  4074ec:	mov	x0, x19
  4074f0:	bl	404e20 <strcmp@plt>
  4074f4:	cmp	w0, #0x0
  4074f8:	mov	w8, #0x7                   	// #7
  4074fc:	csel	w0, w8, wzr, eq  // eq = none
  407500:	ldr	x19, [sp, #16]
  407504:	ldp	x29, x30, [sp], #32
  407508:	ret
  40750c:	mov	w0, #0x2                   	// #2
  407510:	ldr	x19, [sp, #16]
  407514:	ldp	x29, x30, [sp], #32
  407518:	ret
  40751c:	mov	w0, #0xa                   	// #10
  407520:	ldr	x19, [sp, #16]
  407524:	ldp	x29, x30, [sp], #32
  407528:	ret
  40752c:	mov	w0, #0x11                  	// #17
  407530:	ldr	x19, [sp, #16]
  407534:	ldp	x29, x30, [sp], #32
  407538:	ret
  40753c:	mov	w0, #0x4                   	// #4
  407540:	ldr	x19, [sp, #16]
  407544:	ldp	x29, x30, [sp], #32
  407548:	ret
  40754c:	mov	w0, #0x1c                  	// #28
  407550:	ldr	x19, [sp, #16]
  407554:	ldp	x29, x30, [sp], #32
  407558:	ret

000000000040755c <family_name@@Base>:
  40755c:	sub	w8, w0, #0x2
  407560:	cmp	w8, #0x1a
  407564:	b.hi	407594 <family_name@@Base+0x38>  // b.pmore
  407568:	adrp	x9, 40d000 <addraw_l@@Base+0xac>
  40756c:	add	x9, x9, #0xc68
  407570:	adr	x10, 407588 <family_name@@Base+0x2c>
  407574:	ldrb	w11, [x9, x8]
  407578:	add	x10, x10, x11, lsl #2
  40757c:	adrp	x0, 40d000 <addraw_l@@Base+0xac>
  407580:	add	x0, x0, #0x9e0
  407584:	br	x10
  407588:	adrp	x0, 40d000 <addraw_l@@Base+0xac>
  40758c:	add	x0, x0, #0xfc4
  407590:	ret
  407594:	adrp	x0, 40d000 <addraw_l@@Base+0xac>
  407598:	add	x0, x0, #0xfc0
  40759c:	ret
  4075a0:	adrp	x0, 40d000 <addraw_l@@Base+0xac>
  4075a4:	add	x0, x0, #0xfcd
  4075a8:	ret
  4075ac:	adrp	x0, 40d000 <addraw_l@@Base+0xac>
  4075b0:	add	x0, x0, #0x9e5
  4075b4:	ret
  4075b8:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x640>
  4075bc:	add	x0, x0, #0x665
  4075c0:	ret
  4075c4:	adrp	x0, 40d000 <addraw_l@@Base+0xac>
  4075c8:	add	x0, x0, #0xfc8
  4075cc:	ret

00000000004075d0 <format_host_r@@Base>:
  4075d0:	sub	sp, sp, #0x70
  4075d4:	stp	x29, x30, [sp, #16]
  4075d8:	stp	x28, x27, [sp, #32]
  4075dc:	stp	x26, x25, [sp, #48]
  4075e0:	stp	x24, x23, [sp, #64]
  4075e4:	stp	x22, x21, [sp, #80]
  4075e8:	stp	x20, x19, [sp, #96]
  4075ec:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  4075f0:	ldr	x8, [x8, #4064]
  4075f4:	mov	x21, x2
  4075f8:	mov	w22, w0
  4075fc:	add	x29, sp, #0x10
  407600:	ldr	w8, [x8]
  407604:	cbz	w8, 407638 <format_host_r@@Base+0x68>
  407608:	cmp	w1, #0x0
  40760c:	b.le	407640 <format_host_r@@Base+0x70>
  407610:	cmp	w22, #0xa
  407614:	mov	w12, w1
  407618:	mov	w8, w1
  40761c:	mov	w23, w22
  407620:	mov	x24, x21
  407624:	b.ne	4076dc <format_host_r@@Base+0x10c>  // b.any
  407628:	ldr	w8, [x21]
  40762c:	cbz	w8, 407688 <format_host_r@@Base+0xb8>
  407630:	mov	w23, #0xa                   	// #10
  407634:	b	407694 <format_host_r@@Base+0xc4>
  407638:	mov	w2, w1
  40763c:	b	407834 <format_host_r@@Base+0x264>
  407640:	sub	w8, w22, #0x2
  407644:	cmp	w8, #0x1a
  407648:	mov	w2, wzr
  40764c:	b.hi	407834 <format_host_r@@Base+0x264>  // b.pmore
  407650:	adrp	x9, 40d000 <addraw_l@@Base+0xac>
  407654:	add	x9, x9, #0xc83
  407658:	adr	x10, 407628 <format_host_r@@Base+0x58>
  40765c:	ldrb	w11, [x9, x8]
  407660:	add	x10, x10, x11, lsl #2
  407664:	mov	w12, #0x4                   	// #4
  407668:	mov	w1, #0x10                  	// #16
  40766c:	mov	w8, #0x4                   	// #4
  407670:	mov	w23, w22
  407674:	mov	x24, x21
  407678:	br	x10
  40767c:	mov	w12, #0x2                   	// #2
  407680:	mov	w8, #0x2                   	// #2
  407684:	b	4076ac <format_host_r@@Base+0xdc>
  407688:	ldr	w8, [x21, #4]
  40768c:	mov	w23, #0xa                   	// #10
  407690:	cbz	w8, 4076b8 <format_host_r@@Base+0xe8>
  407694:	mov	w12, w1
  407698:	mov	w8, w1
  40769c:	mov	x24, x21
  4076a0:	b	4076dc <format_host_r@@Base+0x10c>
  4076a4:	mov	w12, #0xa                   	// #10
  4076a8:	mov	w8, #0xa                   	// #10
  4076ac:	mov	w23, w22
  4076b0:	mov	x24, x21
  4076b4:	b	4076dc <format_host_r@@Base+0x10c>
  4076b8:	ldr	w8, [x21, #8]
  4076bc:	add	x9, x21, #0xc
  4076c0:	mov	w10, #0x4                   	// #4
  4076c4:	mov	w11, #0x2                   	// #2
  4076c8:	cmn	w8, #0x10, lsl #12
  4076cc:	csel	w8, w10, w1, eq  // eq = none
  4076d0:	csel	w23, w11, w23, eq  // eq = none
  4076d4:	csel	x24, x9, x21, eq  // eq = none
  4076d8:	mov	w12, w1
  4076dc:	mov	w25, w8
  4076e0:	add	x8, x24, x25
  4076e4:	ldur	w8, [x8, #-4]
  4076e8:	mov	w9, #0xff01                	// #65281
  4076ec:	movk	w9, #0xff00, lsl #16
  4076f0:	adrp	x28, 41f000 <memcpy@GLIBC_2.17>
  4076f4:	mul	x9, x8, x9
  4076f8:	lsr	x9, x9, #40
  4076fc:	add	w9, w9, w9, lsl #8
  407700:	sub	w19, w8, w9
  407704:	add	x28, x28, #0x4d0
  407708:	add	x8, x28, w19, uxtw #3
  40770c:	ldr	x20, [x8, #8]
  407710:	mov	w27, w4
  407714:	str	w12, [sp, #4]
  407718:	str	x3, [sp, #8]
  40771c:	cbz	x20, 407760 <format_host_r@@Base+0x190>
  407720:	mov	x26, x20
  407724:	b	407730 <format_host_r@@Base+0x160>
  407728:	ldr	x26, [x26]
  40772c:	cbz	x26, 407760 <format_host_r@@Base+0x190>
  407730:	ldrh	w8, [x26, #22]
  407734:	cmp	w23, w8
  407738:	b.ne	407728 <format_host_r@@Base+0x158>  // b.any
  40773c:	ldrh	w8, [x26, #18]
  407740:	cmp	w25, w8
  407744:	b.ne	407728 <format_host_r@@Base+0x158>  // b.any
  407748:	add	x0, x26, #0x18
  40774c:	mov	x1, x24
  407750:	mov	x2, x25
  407754:	bl	404d60 <bcmp@plt>
  407758:	cbnz	w0, 407728 <format_host_r@@Base+0x158>
  40775c:	b	4077f4 <format_host_r@@Base+0x224>
  407760:	mov	w0, #0x118                 	// #280
  407764:	bl	404cc0 <malloc@plt>
  407768:	cbz	x0, 407828 <format_host_r@@Base+0x258>
  40776c:	mov	x26, x0
  407770:	strh	w23, [x0, #22]
  407774:	strh	w25, [x0, #18]
  407778:	str	xzr, [x0, #8]
  40777c:	add	x0, x0, #0x18
  407780:	mov	x1, x24
  407784:	mov	x2, x25
  407788:	bl	404b60 <memcpy@plt>
  40778c:	add	x8, x28, x19, lsl #3
  407790:	str	x26, [x8, #8]
  407794:	ldr	w8, [x28]
  407798:	str	x20, [x26]
  40779c:	add	w9, w8, #0x1
  4077a0:	str	w9, [x28]
  4077a4:	cbnz	w8, 4077b0 <format_host_r@@Base+0x1e0>
  4077a8:	mov	w0, #0x1                   	// #1
  4077ac:	bl	404bf0 <sethostent@plt>
  4077b0:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  4077b4:	ldr	x8, [x8, #4016]
  4077b8:	ldr	x0, [x8]
  4077bc:	bl	404f00 <fflush@plt>
  4077c0:	mov	x0, x24
  4077c4:	mov	w1, w25
  4077c8:	mov	w2, w23
  4077cc:	bl	404e70 <gethostbyaddr@plt>
  4077d0:	cbz	x0, 4077f4 <format_host_r@@Base+0x224>
  4077d4:	ldr	x0, [x0]
  4077d8:	bl	404da0 <strdup@plt>
  4077dc:	str	x0, [x26, #8]
  4077e0:	ldr	x3, [sp, #8]
  4077e4:	ldr	w2, [sp, #4]
  4077e8:	mov	w4, w27
  4077ec:	cbnz	x0, 407808 <format_host_r@@Base+0x238>
  4077f0:	b	407834 <format_host_r@@Base+0x264>
  4077f4:	ldr	x0, [x26, #8]
  4077f8:	ldr	x3, [sp, #8]
  4077fc:	ldr	w2, [sp, #4]
  407800:	mov	w4, w27
  407804:	cbz	x0, 407834 <format_host_r@@Base+0x264>
  407808:	ldp	x20, x19, [sp, #96]
  40780c:	ldp	x22, x21, [sp, #80]
  407810:	ldp	x24, x23, [sp, #64]
  407814:	ldp	x26, x25, [sp, #48]
  407818:	ldp	x28, x27, [sp, #32]
  40781c:	ldp	x29, x30, [sp, #16]
  407820:	add	sp, sp, #0x70
  407824:	ret
  407828:	ldr	w2, [sp, #4]
  40782c:	ldr	x3, [sp, #8]
  407830:	mov	w4, w27
  407834:	mov	w0, w22
  407838:	mov	w1, w2
  40783c:	mov	x2, x21
  407840:	ldp	x20, x19, [sp, #96]
  407844:	ldp	x22, x21, [sp, #80]
  407848:	ldp	x24, x23, [sp, #64]
  40784c:	ldp	x26, x25, [sp, #48]
  407850:	ldp	x28, x27, [sp, #32]
  407854:	ldp	x29, x30, [sp, #16]
  407858:	add	sp, sp, #0x70
  40785c:	b	4073c0 <rt_addr_n2a_r@@Base>

0000000000407860 <format_host@@Base>:
  407860:	adrp	x3, 41f000 <memcpy@GLIBC_2.17>
  407864:	add	x3, x3, #0x3d0
  407868:	mov	w4, #0x100                 	// #256
  40786c:	b	4075d0 <format_host_r@@Base>

0000000000407870 <hexstring_n2a@@Base>:
  407870:	stp	x29, x30, [sp, #-80]!
  407874:	stp	x20, x19, [sp, #64]
  407878:	mov	x19, x2
  40787c:	cmp	w3, #0x3
  407880:	str	x25, [sp, #16]
  407884:	stp	x24, x23, [sp, #32]
  407888:	stp	x22, x21, [sp, #48]
  40788c:	mov	x29, sp
  407890:	b.lt	4078e4 <hexstring_n2a@@Base+0x74>  // b.tstop
  407894:	cmp	w1, #0x1
  407898:	b.lt	4078e4 <hexstring_n2a@@Base+0x74>  // b.tstop
  40789c:	adrp	x22, 40e000 <_IO_stdin_used@@Base+0x640>
  4078a0:	mov	w20, w3
  4078a4:	mov	x21, x0
  4078a8:	mov	x24, xzr
  4078ac:	mov	w25, w1
  4078b0:	add	x22, x22, #0x116
  4078b4:	mov	x23, x19
  4078b8:	ldrb	w2, [x21, x24]
  4078bc:	mov	x0, x23
  4078c0:	mov	x1, x22
  4078c4:	bl	404c20 <sprintf@plt>
  4078c8:	cmp	w20, #0x5
  4078cc:	b.lt	4078e4 <hexstring_n2a@@Base+0x74>  // b.tstop
  4078d0:	add	x24, x24, #0x1
  4078d4:	add	x23, x23, #0x2
  4078d8:	cmp	x24, x25
  4078dc:	sub	w20, w20, #0x2
  4078e0:	b.cc	4078b8 <hexstring_n2a@@Base+0x48>  // b.lo, b.ul, b.last
  4078e4:	mov	x0, x19
  4078e8:	ldp	x20, x19, [sp, #64]
  4078ec:	ldp	x22, x21, [sp, #48]
  4078f0:	ldp	x24, x23, [sp, #32]
  4078f4:	ldr	x25, [sp, #16]
  4078f8:	ldp	x29, x30, [sp], #80
  4078fc:	ret

0000000000407900 <hexstring_a2n@@Base>:
  407900:	sub	sp, sp, #0x50
  407904:	stp	x29, x30, [sp, #16]
  407908:	stp	x24, x23, [sp, #32]
  40790c:	stp	x22, x21, [sp, #48]
  407910:	stp	x20, x19, [sp, #64]
  407914:	add	x29, sp, #0x10
  407918:	mov	x20, x3
  40791c:	mov	w22, w2
  407920:	mov	x19, x1
  407924:	mov	x21, x0
  407928:	bl	404b90 <strlen@plt>
  40792c:	tbnz	w0, #0, 4079b4 <hexstring_a2n@@Base+0xb4>
  407930:	cbz	w22, 4079bc <hexstring_a2n@@Base+0xbc>
  407934:	mov	x23, xzr
  407938:	mov	w24, w22
  40793c:	mov	x0, x21
  407940:	bl	404b90 <strlen@plt>
  407944:	cmp	x0, #0x2
  407948:	b.cc	4079c0 <hexstring_a2n@@Base+0xc0>  // b.lo, b.ul, b.last
  40794c:	add	x0, sp, #0x4
  407950:	mov	w2, #0x2                   	// #2
  407954:	mov	x1, x21
  407958:	bl	404fc0 <strncpy@plt>
  40795c:	strb	wzr, [sp, #6]
  407960:	bl	405010 <__errno_location@plt>
  407964:	mov	x22, x0
  407968:	str	wzr, [x0]
  40796c:	add	x0, sp, #0x4
  407970:	add	x1, sp, #0x8
  407974:	mov	w2, #0x10                  	// #16
  407978:	bl	404b80 <strtoul@plt>
  40797c:	ldr	w8, [x22]
  407980:	cbnz	w8, 4079b4 <hexstring_a2n@@Base+0xb4>
  407984:	cmp	w0, #0xff
  407988:	b.hi	4079b4 <hexstring_a2n@@Base+0xb4>  // b.pmore
  40798c:	ldr	x8, [sp, #8]
  407990:	ldrb	w8, [x8]
  407994:	cbnz	w8, 4079b4 <hexstring_a2n@@Base+0xb4>
  407998:	strb	w0, [x19, x23]
  40799c:	add	x23, x23, #0x1
  4079a0:	cmp	x24, x23
  4079a4:	add	x21, x21, #0x2
  4079a8:	b.ne	40793c <hexstring_a2n@@Base+0x3c>  // b.any
  4079ac:	mov	w23, w24
  4079b0:	b	4079c0 <hexstring_a2n@@Base+0xc0>
  4079b4:	mov	x19, xzr
  4079b8:	b	4079c8 <hexstring_a2n@@Base+0xc8>
  4079bc:	mov	w23, wzr
  4079c0:	cbz	x20, 4079c8 <hexstring_a2n@@Base+0xc8>
  4079c4:	str	w23, [x20]
  4079c8:	mov	x0, x19
  4079cc:	ldp	x20, x19, [sp, #64]
  4079d0:	ldp	x22, x21, [sp, #48]
  4079d4:	ldp	x24, x23, [sp, #32]
  4079d8:	ldp	x29, x30, [sp, #16]
  4079dc:	add	sp, sp, #0x50
  4079e0:	ret

00000000004079e4 <hex2mem@@Base>:
  4079e4:	cmp	w2, #0x1
  4079e8:	b.lt	407a88 <hex2mem@@Base+0xa4>  // b.tstop
  4079ec:	mov	w8, w2
  4079f0:	add	x9, x0, #0x1
  4079f4:	ldurb	w10, [x9, #-1]
  4079f8:	sub	w11, w10, #0x41
  4079fc:	cmp	w11, #0x5
  407a00:	b.hi	407a0c <hex2mem@@Base+0x28>  // b.pmore
  407a04:	sub	w10, w10, #0x37
  407a08:	b	407a2c <hex2mem@@Base+0x48>
  407a0c:	sub	w11, w10, #0x61
  407a10:	cmp	w11, #0x5
  407a14:	b.hi	407a20 <hex2mem@@Base+0x3c>  // b.pmore
  407a18:	sub	w10, w10, #0x57
  407a1c:	b	407a2c <hex2mem@@Base+0x48>
  407a20:	sub	w10, w10, #0x30
  407a24:	cmp	w10, #0x9
  407a28:	b.hi	407a90 <hex2mem@@Base+0xac>  // b.pmore
  407a2c:	tbnz	w10, #31, 407a90 <hex2mem@@Base+0xac>
  407a30:	lsl	w10, w10, #4
  407a34:	strb	w10, [x1]
  407a38:	ldrb	w11, [x9]
  407a3c:	sub	w12, w11, #0x41
  407a40:	cmp	w12, #0x5
  407a44:	b.hi	407a50 <hex2mem@@Base+0x6c>  // b.pmore
  407a48:	sub	w11, w11, #0x37
  407a4c:	b	407a70 <hex2mem@@Base+0x8c>
  407a50:	sub	w12, w11, #0x61
  407a54:	cmp	w12, #0x5
  407a58:	b.hi	407a64 <hex2mem@@Base+0x80>  // b.pmore
  407a5c:	sub	w11, w11, #0x57
  407a60:	b	407a70 <hex2mem@@Base+0x8c>
  407a64:	sub	w11, w11, #0x30
  407a68:	cmp	w11, #0x9
  407a6c:	b.hi	407a90 <hex2mem@@Base+0xac>  // b.pmore
  407a70:	tbnz	w11, #31, 407a90 <hex2mem@@Base+0xac>
  407a74:	orr	w10, w10, w11
  407a78:	subs	x8, x8, #0x1
  407a7c:	strb	w10, [x1], #1
  407a80:	add	x9, x9, #0x2
  407a84:	b.ne	4079f4 <hex2mem@@Base+0x10>  // b.any
  407a88:	mov	w0, wzr
  407a8c:	ret
  407a90:	mov	w0, #0xffffffff            	// #-1
  407a94:	ret

0000000000407a98 <addr64_n2a@@Base>:
  407a98:	stp	x29, x30, [sp, #-48]!
  407a9c:	stp	x22, x21, [sp, #16]
  407aa0:	mov	x21, x0
  407aa4:	stp	x20, x19, [sp, #32]
  407aa8:	mov	x19, x2
  407aac:	rev	w8, w21
  407ab0:	adrp	x2, 40d000 <addraw_l@@Base+0xac>
  407ab4:	adrp	x4, 40d000 <addraw_l@@Base+0xac>
  407ab8:	mov	x20, x1
  407abc:	lsr	w3, w8, #16
  407ac0:	add	x2, x2, #0xfd6
  407ac4:	add	x4, x4, #0xfd4
  407ac8:	mov	x0, x1
  407acc:	mov	x1, x19
  407ad0:	mov	x29, sp
  407ad4:	bl	404c70 <snprintf@plt>
  407ad8:	tbnz	w0, #31, 407b68 <addr64_n2a@@Base+0xd0>
  407adc:	ubfx	x8, x21, #16, #16
  407ae0:	mov	w22, w0
  407ae4:	adrp	x2, 40d000 <addraw_l@@Base+0xac>
  407ae8:	adrp	x4, 40d000 <addraw_l@@Base+0xac>
  407aec:	rev16	w3, w8
  407af0:	add	x0, x20, x22
  407af4:	sub	x1, x19, x22
  407af8:	add	x2, x2, #0xfd6
  407afc:	add	x4, x4, #0xfd4
  407b00:	bl	404c70 <snprintf@plt>
  407b04:	tbnz	w0, #31, 407b68 <addr64_n2a@@Base+0xd0>
  407b08:	lsr	x8, x21, #32
  407b0c:	add	x22, x22, w0, uxtw
  407b10:	rev	w8, w8
  407b14:	adrp	x2, 40d000 <addraw_l@@Base+0xac>
  407b18:	adrp	x4, 40d000 <addraw_l@@Base+0xac>
  407b1c:	add	x0, x20, x22
  407b20:	lsr	w3, w8, #16
  407b24:	sub	x1, x19, x22
  407b28:	add	x2, x2, #0xfd6
  407b2c:	add	x4, x4, #0xfd4
  407b30:	bl	404c70 <snprintf@plt>
  407b34:	tbnz	w0, #31, 407b68 <addr64_n2a@@Base+0xd0>
  407b38:	lsr	x8, x21, #48
  407b3c:	add	x21, x22, w0, uxtw
  407b40:	adrp	x2, 40d000 <addraw_l@@Base+0xac>
  407b44:	adrp	x4, 40e000 <_IO_stdin_used@@Base+0x640>
  407b48:	rev16	w3, w8
  407b4c:	add	x0, x20, x21
  407b50:	sub	x1, x19, x21
  407b54:	add	x2, x2, #0xfd6
  407b58:	add	x4, x4, #0x69b
  407b5c:	bl	404c70 <snprintf@plt>
  407b60:	tbnz	w0, #31, 407b68 <addr64_n2a@@Base+0xd0>
  407b64:	add	w0, w0, w21
  407b68:	ldp	x20, x19, [sp, #32]
  407b6c:	ldp	x22, x21, [sp, #16]
  407b70:	ldp	x29, x30, [sp], #48
  407b74:	ret

0000000000407b78 <print_escape_buf@@Base>:
  407b78:	stp	x29, x30, [sp, #-64]!
  407b7c:	stp	x24, x23, [sp, #16]
  407b80:	stp	x22, x21, [sp, #32]
  407b84:	stp	x20, x19, [sp, #48]
  407b88:	mov	x29, sp
  407b8c:	cbz	x1, 407c04 <print_escape_buf@@Base+0x8c>
  407b90:	mov	x19, x2
  407b94:	mov	x20, x1
  407b98:	mov	x21, x0
  407b9c:	bl	404e30 <__ctype_b_loc@plt>
  407ba0:	adrp	x23, 40d000 <addraw_l@@Base+0xac>
  407ba4:	mov	x22, x0
  407ba8:	add	x23, x23, #0xfdb
  407bac:	b	407bc8 <print_escape_buf@@Base+0x50>
  407bb0:	mov	x0, x23
  407bb4:	mov	w1, w24
  407bb8:	bl	404ff0 <printf@plt>
  407bbc:	subs	x20, x20, #0x1
  407bc0:	add	x21, x21, #0x1
  407bc4:	b.eq	407c04 <print_escape_buf@@Base+0x8c>  // b.none
  407bc8:	ldrb	w24, [x21]
  407bcc:	cmp	x24, #0x5c
  407bd0:	b.eq	407bb0 <print_escape_buf@@Base+0x38>  // b.none
  407bd4:	ldr	x8, [x22]
  407bd8:	ldrh	w8, [x8, x24, lsl #1]
  407bdc:	tbz	w8, #14, 407bb0 <print_escape_buf@@Base+0x38>
  407be0:	mov	x0, x19
  407be4:	mov	w1, w24
  407be8:	bl	404ec0 <strchr@plt>
  407bec:	cbnz	x0, 407bb0 <print_escape_buf@@Base+0x38>
  407bf0:	mov	w0, w24
  407bf4:	bl	405030 <putchar@plt>
  407bf8:	subs	x20, x20, #0x1
  407bfc:	add	x21, x21, #0x1
  407c00:	b.ne	407bc8 <print_escape_buf@@Base+0x50>  // b.any
  407c04:	ldp	x20, x19, [sp, #48]
  407c08:	ldp	x22, x21, [sp, #32]
  407c0c:	ldp	x24, x23, [sp, #16]
  407c10:	ldp	x29, x30, [sp], #64
  407c14:	ret

0000000000407c18 <print_timestamp@@Base>:
  407c18:	sub	sp, sp, #0x60
  407c1c:	stp	x29, x30, [sp, #64]
  407c20:	add	x29, sp, #0x40
  407c24:	stp	x20, x19, [sp, #80]
  407c28:	mov	x19, x0
  407c2c:	sub	x0, x29, #0x10
  407c30:	mov	x1, xzr
  407c34:	bl	404d30 <gettimeofday@plt>
  407c38:	sub	x0, x29, #0x10
  407c3c:	bl	404c90 <localtime@plt>
  407c40:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  407c44:	ldr	x8, [x8, #4032]
  407c48:	mov	x3, x0
  407c4c:	ldr	w8, [x8]
  407c50:	cbz	w8, 407c80 <print_timestamp@@Base+0x68>
  407c54:	adrp	x2, 40d000 <addraw_l@@Base+0xac>
  407c58:	add	x2, x2, #0xfe1
  407c5c:	add	x0, sp, #0x8
  407c60:	mov	w1, #0x28                  	// #40
  407c64:	bl	404c50 <strftime@plt>
  407c68:	ldur	x3, [x29, #-8]
  407c6c:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  407c70:	add	x1, x1, #0xff3
  407c74:	add	x2, sp, #0x8
  407c78:	mov	x0, x19
  407c7c:	b	407cac <print_timestamp@@Base+0x94>
  407c80:	mov	x0, x3
  407c84:	bl	404f60 <asctime@plt>
  407c88:	mov	x20, x0
  407c8c:	bl	404b90 <strlen@plt>
  407c90:	add	x8, x0, x20
  407c94:	sturb	wzr, [x8, #-1]
  407c98:	ldur	x3, [x29, #-8]
  407c9c:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  407ca0:	add	x1, x1, #0xfff
  407ca4:	mov	x0, x19
  407ca8:	mov	x2, x20
  407cac:	bl	405060 <fprintf@plt>
  407cb0:	ldp	x20, x19, [sp, #80]
  407cb4:	ldp	x29, x30, [sp, #64]
  407cb8:	mov	w0, wzr
  407cbc:	add	sp, sp, #0x60
  407cc0:	ret

0000000000407cc4 <print_name_and_link@@Base>:
  407cc4:	sub	sp, sp, #0x70
  407cc8:	stp	x29, x30, [sp, #64]
  407ccc:	stp	x22, x21, [sp, #80]
  407cd0:	stp	x20, x19, [sp, #96]
  407cd4:	ldr	x8, [x2, #40]
  407cd8:	mov	x20, x1
  407cdc:	mov	x19, x0
  407ce0:	add	x29, sp, #0x40
  407ce4:	cbz	x8, 407d1c <print_name_and_link@@Base+0x58>
  407ce8:	ldr	w22, [x8, #4]
  407cec:	cbz	w22, 407d24 <print_name_and_link@@Base+0x60>
  407cf0:	ldr	x8, [x2, #296]
  407cf4:	cbz	x8, 407d50 <print_name_and_link@@Base+0x8c>
  407cf8:	bl	409938 <is_json_context@@Base>
  407cfc:	tbz	w0, #0, 407d9c <print_name_and_link@@Base+0xd8>
  407d00:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x640>
  407d04:	add	x2, x2, #0x17
  407d08:	mov	w0, #0x2                   	// #2
  407d0c:	mov	w1, #0x6                   	// #6
  407d10:	mov	x3, xzr
  407d14:	mov	w4, w22
  407d18:	bl	409a60 <print_color_int@@Base>
  407d1c:	mov	w22, wzr
  407d20:	b	407de0 <print_name_and_link@@Base+0x11c>
  407d24:	bl	409938 <is_json_context@@Base>
  407d28:	tbz	w0, #0, 407db4 <print_name_and_link@@Base+0xf0>
  407d2c:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x640>
  407d30:	add	x2, x2, #0x665
  407d34:	mov	w0, #0x2                   	// #2
  407d38:	mov	w1, #0x6                   	// #6
  407d3c:	mov	x3, xzr
  407d40:	mov	x4, xzr
  407d44:	bl	40a154 <print_color_null@@Base>
  407d48:	mov	w22, wzr
  407d4c:	b	407de0 <print_name_and_link@@Base+0x11c>
  407d50:	mov	w0, w22
  407d54:	bl	40907c <ll_index_to_name@@Base>
  407d58:	mov	x21, x0
  407d5c:	bl	409938 <is_json_context@@Base>
  407d60:	tbz	w0, #0, 407d84 <print_name_and_link@@Base+0xc0>
  407d64:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x640>
  407d68:	add	x2, x2, #0x665
  407d6c:	mov	w0, #0x2                   	// #2
  407d70:	mov	w1, #0x6                   	// #6
  407d74:	mov	x3, xzr
  407d78:	mov	x4, x21
  407d7c:	bl	409efc <print_color_string@@Base>
  407d80:	mov	x21, xzr
  407d84:	mov	w0, w22
  407d88:	bl	4092a0 <ll_index_to_flags@@Base>
  407d8c:	mvn	w8, w0
  407d90:	and	w22, w8, #0x1
  407d94:	cbnz	x21, 407dc0 <print_name_and_link@@Base+0xfc>
  407d98:	b	407de0 <print_name_and_link@@Base+0x11c>
  407d9c:	mov	w0, w22
  407da0:	bl	409040 <ll_idx_n2a@@Base>
  407da4:	mov	x21, x0
  407da8:	mov	w22, wzr
  407dac:	cbnz	x21, 407dc0 <print_name_and_link@@Base+0xfc>
  407db0:	b	407de0 <print_name_and_link@@Base+0x11c>
  407db4:	adrp	x21, 40e000 <_IO_stdin_used@@Base+0x640>
  407db8:	mov	w22, wzr
  407dbc:	add	x21, x21, #0x22
  407dc0:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x640>
  407dc4:	add	x2, x2, #0x27
  407dc8:	mov	x0, sp
  407dcc:	mov	w1, #0x40                  	// #64
  407dd0:	mov	x3, x20
  407dd4:	mov	x4, x21
  407dd8:	bl	404c70 <snprintf@plt>
  407ddc:	mov	x20, sp
  407de0:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x640>
  407de4:	add	x2, x2, #0x2d
  407de8:	mov	w0, #0x4                   	// #4
  407dec:	mov	w1, wzr
  407df0:	mov	x3, x19
  407df4:	mov	x4, x20
  407df8:	bl	409efc <print_color_string@@Base>
  407dfc:	mov	w0, w22
  407e00:	ldp	x20, x19, [sp, #96]
  407e04:	ldp	x22, x21, [sp, #80]
  407e08:	ldp	x29, x30, [sp, #64]
  407e0c:	add	sp, sp, #0x70
  407e10:	ret

0000000000407e14 <getcmdline@@Base>:
  407e14:	sub	sp, sp, #0x70
  407e18:	stp	x22, x21, [sp, #80]
  407e1c:	mov	x21, x2
  407e20:	mov	w2, #0xa                   	// #10
  407e24:	mov	x3, x21
  407e28:	stp	x29, x30, [sp, #16]
  407e2c:	stp	x28, x27, [sp, #32]
  407e30:	stp	x26, x25, [sp, #48]
  407e34:	stp	x24, x23, [sp, #64]
  407e38:	stp	x20, x19, [sp, #96]
  407e3c:	add	x29, sp, #0x10
  407e40:	mov	x19, x1
  407e44:	mov	x22, x0
  407e48:	bl	405040 <__getdelim@plt>
  407e4c:	mov	x20, x0
  407e50:	tbnz	x0, #63, 407fa4 <getcmdline@@Base+0x190>
  407e54:	adrp	x28, 41e000 <_IO_stdin_used@@Base+0x10640>
  407e58:	ldr	x28, [x28, #4000]
  407e5c:	mov	w1, #0x23                  	// #35
  407e60:	ldr	w8, [x28]
  407e64:	add	w8, w8, #0x1
  407e68:	str	w8, [x28]
  407e6c:	ldr	x23, [x22]
  407e70:	mov	x0, x23
  407e74:	bl	404ec0 <strchr@plt>
  407e78:	cbz	x0, 407e84 <getcmdline@@Base+0x70>
  407e7c:	strb	wzr, [x0]
  407e80:	ldr	x23, [x22]
  407e84:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  407e88:	add	x1, x1, #0x34
  407e8c:	mov	x0, x23
  407e90:	bl	404fa0 <strstr@plt>
  407e94:	cbz	x0, 407fa4 <getcmdline@@Base+0x190>
  407e98:	adrp	x23, 40e000 <_IO_stdin_used@@Base+0x640>
  407e9c:	mov	x25, x0
  407ea0:	add	x23, x23, #0x34
  407ea4:	add	x0, sp, #0x8
  407ea8:	mov	x1, sp
  407eac:	mov	w2, #0xa                   	// #10
  407eb0:	mov	x3, x21
  407eb4:	stp	xzr, xzr, [sp]
  407eb8:	bl	405040 <__getdelim@plt>
  407ebc:	mov	x24, x0
  407ec0:	tbnz	x0, #63, 407f54 <getcmdline@@Base+0x140>
  407ec4:	ldr	w8, [x28]
  407ec8:	mov	w1, #0x23                  	// #35
  407ecc:	add	w8, w8, #0x1
  407ed0:	str	w8, [x28]
  407ed4:	strb	wzr, [x25]
  407ed8:	ldr	x25, [sp, #8]
  407edc:	mov	x0, x25
  407ee0:	bl	404ec0 <strchr@plt>
  407ee4:	cbz	x0, 407ef0 <getcmdline@@Base+0xdc>
  407ee8:	strb	wzr, [x0]
  407eec:	ldr	x25, [sp, #8]
  407ef0:	ldr	x26, [x22]
  407ef4:	mov	x0, x26
  407ef8:	bl	404b90 <strlen@plt>
  407efc:	mov	x27, x0
  407f00:	mov	x0, x25
  407f04:	bl	404b90 <strlen@plt>
  407f08:	add	x8, x27, x0
  407f0c:	add	x1, x8, #0x1
  407f10:	mov	x0, x26
  407f14:	str	x1, [x19]
  407f18:	bl	404d80 <realloc@plt>
  407f1c:	str	x0, [x22]
  407f20:	cbz	x0, 407f7c <getcmdline@@Base+0x168>
  407f24:	ldr	x1, [sp, #8]
  407f28:	add	x8, x20, x24
  407f2c:	sub	x20, x8, #0x2
  407f30:	bl	404d00 <strcat@plt>
  407f34:	ldr	x0, [sp, #8]
  407f38:	bl	404e80 <free@plt>
  407f3c:	ldr	x0, [x22]
  407f40:	mov	x1, x23
  407f44:	bl	404fa0 <strstr@plt>
  407f48:	mov	x25, x0
  407f4c:	cbnz	x0, 407ea4 <getcmdline@@Base+0x90>
  407f50:	b	407fa4 <getcmdline@@Base+0x190>
  407f54:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  407f58:	ldr	x8, [x8, #3992]
  407f5c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x640>
  407f60:	add	x0, x0, #0x37
  407f64:	mov	w1, #0x1a                  	// #26
  407f68:	ldr	x3, [x8]
  407f6c:	mov	w2, #0x1                   	// #1
  407f70:	bl	404ee0 <fwrite@plt>
  407f74:	mov	x20, x24
  407f78:	b	407fa4 <getcmdline@@Base+0x190>
  407f7c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  407f80:	ldr	x8, [x8, #3992]
  407f84:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x640>
  407f88:	add	x0, x0, #0x52
  407f8c:	mov	w1, #0xe                   	// #14
  407f90:	ldr	x3, [x8]
  407f94:	mov	w2, #0x1                   	// #1
  407f98:	bl	404ee0 <fwrite@plt>
  407f9c:	str	xzr, [x19]
  407fa0:	mov	x20, #0xffffffffffffffff    	// #-1
  407fa4:	mov	x0, x20
  407fa8:	ldp	x20, x19, [sp, #96]
  407fac:	ldp	x22, x21, [sp, #80]
  407fb0:	ldp	x24, x23, [sp, #64]
  407fb4:	ldp	x26, x25, [sp, #48]
  407fb8:	ldp	x28, x27, [sp, #32]
  407fbc:	ldp	x29, x30, [sp, #16]
  407fc0:	add	sp, sp, #0x70
  407fc4:	ret

0000000000407fc8 <makeargs@@Base>:
  407fc8:	stp	x29, x30, [sp, #-64]!
  407fcc:	stp	x24, x23, [sp, #16]
  407fd0:	stp	x22, x21, [sp, #32]
  407fd4:	stp	x20, x19, [sp, #48]
  407fd8:	ldrb	w8, [x0]
  407fdc:	mov	x19, x1
  407fe0:	mov	x29, sp
  407fe4:	cbz	w8, 40808c <makeargs@@Base+0xc4>
  407fe8:	adrp	x21, 40d000 <addraw_l@@Base+0xac>
  407fec:	mov	x22, x0
  407ff0:	mov	w20, wzr
  407ff4:	sub	w23, w2, #0x1
  407ff8:	add	x21, x21, #0xc9e
  407ffc:	b	408034 <makeargs@@Base+0x6c>
  408000:	mov	x0, x22
  408004:	mov	x1, x21
  408008:	add	w24, w20, #0x1
  40800c:	str	x22, [x19, w20, sxtw #3]
  408010:	bl	404fd0 <strcspn@plt>
  408014:	add	x0, x22, x0
  408018:	ldrb	w8, [x0]
  40801c:	mov	w20, w24
  408020:	cbz	w8, 408090 <makeargs@@Base+0xc8>
  408024:	mov	x22, x0
  408028:	ldrb	w8, [x22, #1]!
  40802c:	strb	wzr, [x0]
  408030:	cbz	w8, 408090 <makeargs@@Base+0xc8>
  408034:	mov	x0, x22
  408038:	mov	x1, x21
  40803c:	bl	404eb0 <strspn@plt>
  408040:	add	x22, x22, x0
  408044:	ldrb	w1, [x22]
  408048:	cbz	w1, 408090 <makeargs@@Base+0xc8>
  40804c:	cmp	w20, w23
  408050:	b.ge	4080ac <makeargs@@Base+0xe4>  // b.tcont
  408054:	cmp	w1, #0x27
  408058:	b.eq	408064 <makeargs@@Base+0x9c>  // b.none
  40805c:	cmp	w1, #0x22
  408060:	b.ne	408000 <makeargs@@Base+0x38>  // b.any
  408064:	add	x0, x22, #0x1
  408068:	str	x0, [x19, w20, sxtw #3]
  40806c:	bl	404ec0 <strchr@plt>
  408070:	cbz	x0, 4080c4 <makeargs@@Base+0xfc>
  408074:	add	w20, w20, #0x1
  408078:	mov	x22, x0
  40807c:	ldrb	w8, [x22, #1]!
  408080:	strb	wzr, [x0]
  408084:	cbnz	w8, 408034 <makeargs@@Base+0x6c>
  408088:	b	408090 <makeargs@@Base+0xc8>
  40808c:	mov	w20, wzr
  408090:	str	xzr, [x19, w20, sxtw #3]
  408094:	mov	w0, w20
  408098:	ldp	x20, x19, [sp, #48]
  40809c:	ldp	x22, x21, [sp, #32]
  4080a0:	ldp	x24, x23, [sp, #16]
  4080a4:	ldp	x29, x30, [sp], #64
  4080a8:	ret
  4080ac:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  4080b0:	ldr	x8, [x8, #3992]
  4080b4:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x640>
  4080b8:	add	x0, x0, #0x61
  4080bc:	mov	w1, #0x1e                  	// #30
  4080c0:	b	4080d8 <makeargs@@Base+0x110>
  4080c4:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  4080c8:	ldr	x8, [x8, #3992]
  4080cc:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x640>
  4080d0:	add	x0, x0, #0x80
  4080d4:	mov	w1, #0x1b                  	// #27
  4080d8:	ldr	x3, [x8]
  4080dc:	mov	w2, #0x1                   	// #1
  4080e0:	bl	404ee0 <fwrite@plt>
  4080e4:	mov	w0, #0x1                   	// #1
  4080e8:	bl	404ba0 <exit@plt>

00000000004080ec <print_nlmsg_timestamp@@Base>:
  4080ec:	stp	x29, x30, [sp, #-48]!
  4080f0:	str	x21, [sp, #16]
  4080f4:	stp	x20, x19, [sp, #32]
  4080f8:	ldp	w8, w19, [x1, #16]
  4080fc:	mov	x29, sp
  408100:	mov	x20, x0
  408104:	add	x0, x29, #0x18
  408108:	str	x8, [x29, #24]
  40810c:	bl	404c90 <localtime@plt>
  408110:	bl	404f60 <asctime@plt>
  408114:	mov	x21, x0
  408118:	bl	404b90 <strlen@plt>
  40811c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  408120:	add	x8, x0, x21
  408124:	add	x1, x1, #0x9c
  408128:	mov	x0, x20
  40812c:	mov	x2, x21
  408130:	mov	x3, x19
  408134:	sturb	wzr, [x8, #-1]
  408138:	bl	405060 <fprintf@plt>
  40813c:	ldp	x20, x19, [sp, #32]
  408140:	ldr	x21, [sp, #16]
  408144:	ldp	x29, x30, [sp], #48
  408148:	ret

000000000040814c <int_to_str@@Base>:
  40814c:	stp	x29, x30, [sp, #-32]!
  408150:	str	x19, [sp, #16]
  408154:	mov	x19, x1
  408158:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40815c:	mov	w2, w0
  408160:	add	x1, x1, #0xb2
  408164:	mov	x0, x19
  408168:	mov	x29, sp
  40816c:	bl	404c20 <sprintf@plt>
  408170:	mov	x0, x19
  408174:	ldr	x19, [sp, #16]
  408178:	ldp	x29, x30, [sp], #32
  40817c:	ret

0000000000408180 <get_guid@@Base>:
  408180:	stp	x29, x30, [sp, #-48]!
  408184:	stp	x20, x19, [sp, #32]
  408188:	mov	x19, x0
  40818c:	mov	x0, x1
  408190:	str	x21, [sp, #16]
  408194:	mov	x29, sp
  408198:	mov	x20, x1
  40819c:	bl	404b90 <strlen@plt>
  4081a0:	cmp	x0, #0x17
  4081a4:	b.ne	4083f4 <get_guid@@Base+0x274>  // b.any
  4081a8:	mov	x21, x20
  4081ac:	ldrb	w8, [x21, #2]!
  4081b0:	cmp	w8, #0x3a
  4081b4:	b.ne	408408 <get_guid@@Base+0x288>  // b.any
  4081b8:	ldrb	w8, [x20, #5]
  4081bc:	cmp	w8, #0x3a
  4081c0:	b.ne	408408 <get_guid@@Base+0x288>  // b.any
  4081c4:	ldrb	w8, [x20, #8]
  4081c8:	cmp	w8, #0x3a
  4081cc:	b.ne	408408 <get_guid@@Base+0x288>  // b.any
  4081d0:	ldrb	w8, [x20, #11]
  4081d4:	cmp	w8, #0x3a
  4081d8:	b.ne	408408 <get_guid@@Base+0x288>  // b.any
  4081dc:	ldrb	w8, [x20, #14]
  4081e0:	cmp	w8, #0x3a
  4081e4:	b.ne	408408 <get_guid@@Base+0x288>  // b.any
  4081e8:	ldrb	w8, [x20, #17]
  4081ec:	cmp	w8, #0x3a
  4081f0:	b.ne	408408 <get_guid@@Base+0x288>  // b.any
  4081f4:	ldrb	w8, [x20, #20]
  4081f8:	cmp	w8, #0x3a
  4081fc:	b.ne	408408 <get_guid@@Base+0x288>  // b.any
  408200:	add	x1, x29, #0x18
  408204:	mov	w2, #0x10                  	// #16
  408208:	mov	x0, x20
  40820c:	str	xzr, [x19]
  408210:	bl	404b80 <strtoul@plt>
  408214:	mov	x8, x0
  408218:	cmp	x0, #0xff
  40821c:	mov	w0, #0xffffffff            	// #-1
  408220:	b.hi	4083f8 <get_guid@@Base+0x278>  // b.pmore
  408224:	ldr	x9, [x29, #24]
  408228:	cmp	x9, x21
  40822c:	b.ne	4083f8 <get_guid@@Base+0x278>  // b.any
  408230:	ldr	x9, [x19]
  408234:	add	x0, x20, #0x3
  408238:	add	x1, x29, #0x18
  40823c:	mov	w2, #0x10                  	// #16
  408240:	orr	x8, x9, x8, lsl #56
  408244:	str	x8, [x19]
  408248:	bl	404b80 <strtoul@plt>
  40824c:	mov	x8, x0
  408250:	cmp	x0, #0xff
  408254:	mov	w0, #0xffffffff            	// #-1
  408258:	b.hi	4083f8 <get_guid@@Base+0x278>  // b.pmore
  40825c:	ldr	x9, [x29, #24]
  408260:	add	x10, x20, #0x5
  408264:	cmp	x9, x10
  408268:	b.ne	4083f8 <get_guid@@Base+0x278>  // b.any
  40826c:	ldr	x9, [x19]
  408270:	add	x0, x20, #0x6
  408274:	add	x1, x29, #0x18
  408278:	mov	w2, #0x10                  	// #16
  40827c:	orr	x8, x9, x8, lsl #48
  408280:	str	x8, [x19]
  408284:	bl	404b80 <strtoul@plt>
  408288:	mov	x8, x0
  40828c:	cmp	x0, #0xff
  408290:	mov	w0, #0xffffffff            	// #-1
  408294:	b.hi	4083f8 <get_guid@@Base+0x278>  // b.pmore
  408298:	ldr	x9, [x29, #24]
  40829c:	add	x10, x20, #0x8
  4082a0:	cmp	x9, x10
  4082a4:	b.ne	4083f8 <get_guid@@Base+0x278>  // b.any
  4082a8:	ldr	x9, [x19]
  4082ac:	add	x0, x20, #0x9
  4082b0:	add	x1, x29, #0x18
  4082b4:	mov	w2, #0x10                  	// #16
  4082b8:	orr	x8, x9, x8, lsl #40
  4082bc:	str	x8, [x19]
  4082c0:	bl	404b80 <strtoul@plt>
  4082c4:	mov	x8, x0
  4082c8:	cmp	x0, #0xff
  4082cc:	mov	w0, #0xffffffff            	// #-1
  4082d0:	b.hi	4083f8 <get_guid@@Base+0x278>  // b.pmore
  4082d4:	ldr	x9, [x29, #24]
  4082d8:	add	x10, x20, #0xb
  4082dc:	cmp	x9, x10
  4082e0:	b.ne	4083f8 <get_guid@@Base+0x278>  // b.any
  4082e4:	ldr	x9, [x19]
  4082e8:	add	x0, x20, #0xc
  4082ec:	add	x1, x29, #0x18
  4082f0:	mov	w2, #0x10                  	// #16
  4082f4:	orr	x8, x9, x8, lsl #32
  4082f8:	str	x8, [x19]
  4082fc:	bl	404b80 <strtoul@plt>
  408300:	mov	x8, x0
  408304:	cmp	x0, #0xff
  408308:	mov	w0, #0xffffffff            	// #-1
  40830c:	b.hi	4083f8 <get_guid@@Base+0x278>  // b.pmore
  408310:	ldr	x9, [x29, #24]
  408314:	add	x10, x20, #0xe
  408318:	cmp	x9, x10
  40831c:	b.ne	4083f8 <get_guid@@Base+0x278>  // b.any
  408320:	ldr	x9, [x19]
  408324:	add	x0, x20, #0xf
  408328:	add	x1, x29, #0x18
  40832c:	mov	w2, #0x10                  	// #16
  408330:	orr	x8, x9, x8, lsl #24
  408334:	str	x8, [x19]
  408338:	bl	404b80 <strtoul@plt>
  40833c:	mov	x8, x0
  408340:	cmp	x0, #0xff
  408344:	mov	w0, #0xffffffff            	// #-1
  408348:	b.hi	4083f8 <get_guid@@Base+0x278>  // b.pmore
  40834c:	ldr	x9, [x29, #24]
  408350:	add	x10, x20, #0x11
  408354:	cmp	x9, x10
  408358:	b.ne	4083f8 <get_guid@@Base+0x278>  // b.any
  40835c:	ldr	x9, [x19]
  408360:	add	x0, x20, #0x12
  408364:	add	x1, x29, #0x18
  408368:	mov	w2, #0x10                  	// #16
  40836c:	orr	x8, x9, x8, lsl #16
  408370:	str	x8, [x19]
  408374:	bl	404b80 <strtoul@plt>
  408378:	mov	x8, x0
  40837c:	cmp	x0, #0xff
  408380:	mov	w0, #0xffffffff            	// #-1
  408384:	b.hi	4083f8 <get_guid@@Base+0x278>  // b.pmore
  408388:	ldr	x9, [x29, #24]
  40838c:	add	x10, x20, #0x14
  408390:	cmp	x9, x10
  408394:	b.ne	4083f8 <get_guid@@Base+0x278>  // b.any
  408398:	ldr	x9, [x19]
  40839c:	add	x0, x20, #0x15
  4083a0:	add	x1, x29, #0x18
  4083a4:	mov	w2, #0x10                  	// #16
  4083a8:	orr	x8, x9, x8, lsl #8
  4083ac:	str	x8, [x19]
  4083b0:	bl	404b80 <strtoul@plt>
  4083b4:	mov	x8, x0
  4083b8:	cmp	x0, #0xff
  4083bc:	mov	w0, #0xffffffff            	// #-1
  4083c0:	b.hi	4083f8 <get_guid@@Base+0x278>  // b.pmore
  4083c4:	ldr	x9, [x29, #24]
  4083c8:	add	x10, x20, #0x17
  4083cc:	cmp	x9, x10
  4083d0:	b.ne	4083f8 <get_guid@@Base+0x278>  // b.any
  4083d4:	ldr	x9, [x19]
  4083d8:	mov	w0, wzr
  4083dc:	orr	x8, x9, x8
  4083e0:	str	x8, [x19]
  4083e4:	ldp	x20, x19, [sp, #32]
  4083e8:	ldr	x21, [sp, #16]
  4083ec:	ldp	x29, x30, [sp], #48
  4083f0:	ret
  4083f4:	mov	w0, #0xffffffff            	// #-1
  4083f8:	ldp	x20, x19, [sp, #32]
  4083fc:	ldr	x21, [sp, #16]
  408400:	ldp	x29, x30, [sp], #48
  408404:	ret
  408408:	mov	w0, #0xffffffff            	// #-1
  40840c:	ldp	x20, x19, [sp, #32]
  408410:	ldr	x21, [sp, #16]
  408414:	ldp	x29, x30, [sp], #48
  408418:	ret

000000000040841c <get_real_family@@Base>:
  40841c:	cmp	w0, #0x5
  408420:	mov	w0, w1
  408424:	b.ne	40843c <get_real_family@@Base+0x20>  // b.any
  408428:	cmp	w0, #0x80
  40842c:	b.eq	408440 <get_real_family@@Base+0x24>  // b.none
  408430:	cmp	w0, #0x81
  408434:	b.ne	40843c <get_real_family@@Base+0x20>  // b.any
  408438:	mov	w0, #0xa                   	// #10
  40843c:	ret
  408440:	mov	w0, #0x2                   	// #2
  408444:	ret

0000000000408448 <get_rtnl_link_stats_rta@@Base>:
  408448:	stp	x29, x30, [sp, #-64]!
  40844c:	stp	x28, x23, [sp, #16]
  408450:	stp	x22, x21, [sp, #32]
  408454:	stp	x20, x19, [sp, #48]
  408458:	mov	x29, sp
  40845c:	sub	sp, sp, #0x9b0
  408460:	ldr	x23, [x1, #184]
  408464:	mov	x19, x0
  408468:	cbz	x23, 408498 <get_rtnl_link_stats_rta@@Base+0x50>
  40846c:	mov	w20, #0xc0                  	// #192
  408470:	mov	x21, x19
  408474:	ldrh	w8, [x23]
  408478:	sub	x22, x8, #0x4
  40847c:	subs	w8, w20, w22
  408480:	b.le	4084b8 <get_rtnl_link_stats_rta@@Base+0x70>
  408484:	add	x0, x21, x22
  408488:	sxtw	x2, w8
  40848c:	mov	w1, wzr
  408490:	bl	404d20 <memset@plt>
  408494:	b	4084bc <get_rtnl_link_stats_rta@@Base+0x74>
  408498:	ldr	x23, [x1, #56]
  40849c:	cbz	x23, 40855c <get_rtnl_link_stats_rta@@Base+0x114>
  4084a0:	sub	x21, x29, #0x60
  4084a4:	mov	w20, #0x60                  	// #96
  4084a8:	ldrh	w8, [x23]
  4084ac:	sub	x22, x8, #0x4
  4084b0:	subs	w8, w20, w22
  4084b4:	b.gt	408484 <get_rtnl_link_stats_rta@@Base+0x3c>
  4084b8:	mov	x22, x20
  4084bc:	add	x1, x23, #0x4
  4084c0:	mov	x0, x21
  4084c4:	mov	x2, x22
  4084c8:	bl	404b60 <memcpy@plt>
  4084cc:	cmp	x21, x19
  4084d0:	b.eq	408540 <get_rtnl_link_stats_rta@@Base+0xf8>  // b.none
  4084d4:	add	x8, x21, #0x60
  4084d8:	add	x9, x21, #0x4
  4084dc:	cmp	x8, x9
  4084e0:	csel	x9, x8, x9, hi  // hi = pmore
  4084e4:	mvn	x10, x21
  4084e8:	add	x9, x9, x10
  4084ec:	lsr	x9, x9, #2
  4084f0:	cbz	x9, 408528 <get_rtnl_link_stats_rta@@Base+0xe0>
  4084f4:	add	x11, x9, #0x1
  4084f8:	and	x12, x11, #0x7ffffffffffffffe
  4084fc:	add	x9, x19, x12, lsl #3
  408500:	add	x10, x21, x12, lsl #2
  408504:	mov	x13, x12
  408508:	ldr	d0, [x21], #8
  40850c:	subs	x13, x13, #0x2
  408510:	uxtl	v0.2d, v0.2s
  408514:	str	q0, [x19], #16
  408518:	b.ne	408508 <get_rtnl_link_stats_rta@@Base+0xc0>  // b.any
  40851c:	cmp	x11, x12
  408520:	b.ne	408530 <get_rtnl_link_stats_rta@@Base+0xe8>  // b.any
  408524:	b	408540 <get_rtnl_link_stats_rta@@Base+0xf8>
  408528:	mov	x9, x19
  40852c:	mov	x10, x21
  408530:	ldr	w11, [x10], #4
  408534:	cmp	x10, x8
  408538:	str	x11, [x9], #8
  40853c:	b.cc	408530 <get_rtnl_link_stats_rta@@Base+0xe8>  // b.lo, b.ul, b.last
  408540:	mov	w0, w20
  408544:	add	sp, sp, #0x9b0
  408548:	ldp	x20, x19, [sp, #48]
  40854c:	ldp	x22, x21, [sp, #32]
  408550:	ldp	x28, x23, [sp, #16]
  408554:	ldp	x29, x30, [sp], #64
  408558:	ret
  40855c:	ldr	x2, [x1, #96]
  408560:	cbz	x2, 4085e4 <get_rtnl_link_stats_rta@@Base+0x19c>
  408564:	ldrh	w8, [x2], #4
  408568:	add	x0, sp, #0x8
  40856c:	mov	w1, #0x128                 	// #296
  408570:	sub	w3, w8, #0x4
  408574:	bl	40d534 <parse_rtattr@@Base>
  408578:	ldr	x8, [sp, #32]
  40857c:	cbz	x8, 4085dc <get_rtnl_link_stats_rta@@Base+0x194>
  408580:	movi	v0.2d, #0x0
  408584:	stp	q0, q0, [x19, #160]
  408588:	stp	q0, q0, [x19, #128]
  40858c:	stp	q0, q0, [x19, #96]
  408590:	stp	q0, q0, [x19, #64]
  408594:	stp	q0, q0, [x19, #32]
  408598:	stp	q0, q0, [x19]
  40859c:	ldur	x9, [x8, #12]
  4085a0:	str	x9, [x19]
  4085a4:	ldur	x9, [x8, #20]
  4085a8:	str	x9, [x19, #16]
  4085ac:	ldur	x9, [x8, #44]
  4085b0:	str	x9, [x19, #8]
  4085b4:	ldur	x9, [x8, #52]
  4085b8:	str	x9, [x19, #24]
  4085bc:	ldur	x9, [x8, #108]
  4085c0:	str	x9, [x19, #32]
  4085c4:	ldur	x9, [x8, #116]
  4085c8:	str	x9, [x19, #40]
  4085cc:	ldur	x9, [x8, #188]
  4085d0:	str	x9, [x19, #64]
  4085d4:	ldur	x8, [x8, #252]
  4085d8:	str	x8, [x19, #104]
  4085dc:	mov	w20, #0xc0                  	// #192
  4085e0:	b	408540 <get_rtnl_link_stats_rta@@Base+0xf8>
  4085e4:	mov	w20, #0xffffffff            	// #-1
  4085e8:	b	408540 <get_rtnl_link_stats_rta@@Base+0xf8>

00000000004085ec <strlcpy@@Base>:
  4085ec:	stp	x29, x30, [sp, #-48]!
  4085f0:	stp	x20, x19, [sp, #32]
  4085f4:	mov	x19, x0
  4085f8:	mov	x0, x1
  4085fc:	stp	x22, x21, [sp, #16]
  408600:	mov	x29, sp
  408604:	mov	x22, x2
  408608:	mov	x21, x1
  40860c:	bl	404b90 <strlen@plt>
  408610:	mov	x20, x0
  408614:	cbz	x22, 408638 <strlcpy@@Base+0x4c>
  408618:	sub	x8, x22, #0x1
  40861c:	cmp	x20, x8
  408620:	csel	x22, x20, x8, cc  // cc = lo, ul, last
  408624:	mov	x0, x19
  408628:	mov	x1, x21
  40862c:	mov	x2, x22
  408630:	bl	404b60 <memcpy@plt>
  408634:	strb	wzr, [x19, x22]
  408638:	mov	x0, x20
  40863c:	ldp	x20, x19, [sp, #32]
  408640:	ldp	x22, x21, [sp, #16]
  408644:	ldp	x29, x30, [sp], #48
  408648:	ret

000000000040864c <strlcat@@Base>:
  40864c:	stp	x29, x30, [sp, #-64]!
  408650:	str	x23, [sp, #16]
  408654:	stp	x22, x21, [sp, #32]
  408658:	stp	x20, x19, [sp, #48]
  40865c:	mov	x29, sp
  408660:	mov	x21, x2
  408664:	mov	x20, x1
  408668:	mov	x22, x0
  40866c:	bl	404b90 <strlen@plt>
  408670:	mov	x19, x0
  408674:	cmp	x0, x21
  408678:	b.cs	4086b8 <strlcat@@Base+0x6c>  // b.hs, b.nlast
  40867c:	mov	x0, x20
  408680:	sub	x23, x21, x19
  408684:	bl	404b90 <strlen@plt>
  408688:	mov	x21, x0
  40868c:	cbz	x23, 4086c4 <strlcat@@Base+0x78>
  408690:	sub	x8, x23, #0x1
  408694:	cmp	x21, x8
  408698:	add	x22, x22, x19
  40869c:	csel	x23, x21, x8, cc  // cc = lo, ul, last
  4086a0:	mov	x0, x22
  4086a4:	mov	x1, x20
  4086a8:	mov	x2, x23
  4086ac:	bl	404b60 <memcpy@plt>
  4086b0:	strb	wzr, [x22, x23]
  4086b4:	b	4086c4 <strlcat@@Base+0x78>
  4086b8:	mov	x0, x20
  4086bc:	bl	404b90 <strlen@plt>
  4086c0:	mov	x21, x0
  4086c4:	add	x0, x21, x19
  4086c8:	ldp	x20, x19, [sp, #48]
  4086cc:	ldp	x22, x21, [sp, #32]
  4086d0:	ldr	x23, [sp, #16]
  4086d4:	ldp	x29, x30, [sp], #64
  4086d8:	ret

00000000004086dc <drop_cap@@Base>:
  4086dc:	stp	x29, x30, [sp, #-32]!
  4086e0:	str	x19, [sp, #16]
  4086e4:	mov	x29, sp
  4086e8:	bl	404c30 <getuid@plt>
  4086ec:	cbz	w0, 408740 <drop_cap@@Base+0x64>
  4086f0:	bl	404be0 <geteuid@plt>
  4086f4:	cbz	w0, 408740 <drop_cap@@Base+0x64>
  4086f8:	bl	404e50 <cap_get_proc@plt>
  4086fc:	cbz	x0, 40874c <drop_cap@@Base+0x70>
  408700:	add	x3, x29, #0x1c
  408704:	mov	w1, #0xc                   	// #12
  408708:	mov	w2, #0x2                   	// #2
  40870c:	mov	x19, x0
  408710:	bl	404d50 <cap_get_flag@plt>
  408714:	cbnz	w0, 40874c <drop_cap@@Base+0x70>
  408718:	ldr	w8, [x29, #28]
  40871c:	cbnz	w8, 408738 <drop_cap@@Base+0x5c>
  408720:	mov	x0, x19
  408724:	bl	404f30 <cap_clear@plt>
  408728:	cbnz	w0, 40874c <drop_cap@@Base+0x70>
  40872c:	mov	x0, x19
  408730:	bl	404d90 <cap_set_proc@plt>
  408734:	cbnz	w0, 40874c <drop_cap@@Base+0x70>
  408738:	mov	x0, x19
  40873c:	bl	404f70 <cap_free@plt>
  408740:	ldr	x19, [sp, #16]
  408744:	ldp	x29, x30, [sp], #32
  408748:	ret
  40874c:	mov	w0, #0x1                   	// #1
  408750:	bl	404ba0 <exit@plt>

0000000000408754 <get_time@@Base>:
  408754:	sub	sp, sp, #0x40
  408758:	str	x21, [sp, #40]
  40875c:	mov	x21, x1
  408760:	stp	x20, x19, [sp, #48]
  408764:	mov	x19, x0
  408768:	add	x1, sp, #0x8
  40876c:	mov	x0, x21
  408770:	str	d8, [sp, #16]
  408774:	stp	x29, x30, [sp, #24]
  408778:	add	x29, sp, #0x10
  40877c:	bl	404bd0 <strtod@plt>
  408780:	ldr	x20, [sp, #8]
  408784:	cmp	x20, x21
  408788:	b.eq	40884c <get_time@@Base+0xf8>  // b.none
  40878c:	ldrb	w8, [x20]
  408790:	mov	v8.16b, v0.16b
  408794:	cbz	w8, 408864 <get_time@@Base+0x110>
  408798:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  40879c:	add	x1, x1, #0xd4f
  4087a0:	mov	x0, x20
  4087a4:	bl	404d70 <strcasecmp@plt>
  4087a8:	cbz	w0, 408854 <get_time@@Base+0x100>
  4087ac:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  4087b0:	add	x1, x1, #0xd66
  4087b4:	mov	x0, x20
  4087b8:	bl	404d70 <strcasecmp@plt>
  4087bc:	cbz	w0, 408854 <get_time@@Base+0x100>
  4087c0:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  4087c4:	add	x1, x1, #0xd6b
  4087c8:	mov	x0, x20
  4087cc:	bl	404d70 <strcasecmp@plt>
  4087d0:	cbz	w0, 408854 <get_time@@Base+0x100>
  4087d4:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  4087d8:	add	x1, x1, #0xeb
  4087dc:	mov	x0, x20
  4087e0:	bl	404d70 <strcasecmp@plt>
  4087e4:	cbz	w0, 408888 <get_time@@Base+0x134>
  4087e8:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  4087ec:	add	x1, x1, #0xd65
  4087f0:	mov	x0, x20
  4087f4:	bl	404d70 <strcasecmp@plt>
  4087f8:	cbz	w0, 408888 <get_time@@Base+0x134>
  4087fc:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  408800:	add	x1, x1, #0xd6a
  408804:	mov	x0, x20
  408808:	bl	404d70 <strcasecmp@plt>
  40880c:	cbz	w0, 408888 <get_time@@Base+0x134>
  408810:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  408814:	add	x1, x1, #0x104
  408818:	mov	x0, x20
  40881c:	bl	404d70 <strcasecmp@plt>
  408820:	cbz	w0, 408864 <get_time@@Base+0x110>
  408824:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  408828:	add	x1, x1, #0xb5
  40882c:	mov	x0, x20
  408830:	bl	404d70 <strcasecmp@plt>
  408834:	cbz	w0, 408864 <get_time@@Base+0x110>
  408838:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40883c:	add	x1, x1, #0xba
  408840:	mov	x0, x20
  408844:	bl	404d70 <strcasecmp@plt>
  408848:	cbz	w0, 408864 <get_time@@Base+0x110>
  40884c:	mov	w0, #0xffffffff            	// #-1
  408850:	b	408870 <get_time@@Base+0x11c>
  408854:	mov	x8, #0x848000000000        	// #145685290680320
  408858:	movk	x8, #0x412e, lsl #48
  40885c:	fmov	d0, x8
  408860:	fmul	d8, d8, d0
  408864:	fcvtzu	w8, d8
  408868:	mov	w0, wzr
  40886c:	str	w8, [x19]
  408870:	ldp	x20, x19, [sp, #48]
  408874:	ldr	x21, [sp, #40]
  408878:	ldp	x29, x30, [sp, #24]
  40887c:	ldr	d8, [sp, #16]
  408880:	add	sp, sp, #0x40
  408884:	ret
  408888:	mov	x8, #0x400000000000        	// #70368744177664
  40888c:	movk	x8, #0x408f, lsl #48
  408890:	b	40885c <get_time@@Base+0x108>

0000000000408894 <sprint_time@@Base>:
  408894:	stp	x29, x30, [sp, #-32]!
  408898:	mov	w8, #0x4240                	// #16960
  40889c:	movk	w8, #0xf, lsl #16
  4088a0:	str	x19, [sp, #16]
  4088a4:	mov	x19, x1
  4088a8:	cmp	w0, w8
  4088ac:	ucvtf	d0, w0
  4088b0:	mov	x29, sp
  4088b4:	b.cc	4088d4 <sprint_time@@Base+0x40>  // b.lo, b.ul, b.last
  4088b8:	mov	x8, #0x848000000000        	// #145685290680320
  4088bc:	movk	x8, #0x412e, lsl #48
  4088c0:	fmov	d1, x8
  4088c4:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x640>
  4088c8:	fdiv	d0, d0, d1
  4088cc:	add	x2, x2, #0xe1
  4088d0:	b	4088f8 <sprint_time@@Base+0x64>
  4088d4:	mov	w3, w0
  4088d8:	cmp	w0, #0x3e8
  4088dc:	b.cc	408914 <sprint_time@@Base+0x80>  // b.lo, b.ul, b.last
  4088e0:	mov	x8, #0x400000000000        	// #70368744177664
  4088e4:	movk	x8, #0x408f, lsl #48
  4088e8:	fmov	d1, x8
  4088ec:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x640>
  4088f0:	fdiv	d0, d0, d1
  4088f4:	add	x2, x2, #0xe7
  4088f8:	mov	w1, #0x3f                  	// #63
  4088fc:	mov	x0, x19
  408900:	bl	404c70 <snprintf@plt>
  408904:	mov	x0, x19
  408908:	ldr	x19, [sp, #16]
  40890c:	ldp	x29, x30, [sp], #32
  408910:	ret
  408914:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x640>
  408918:	add	x2, x2, #0xee
  40891c:	mov	w1, #0x3f                  	// #63
  408920:	mov	x0, x19
  408924:	bl	404c70 <snprintf@plt>
  408928:	mov	x0, x19
  40892c:	ldr	x19, [sp, #16]
  408930:	ldp	x29, x30, [sp], #32
  408934:	ret

0000000000408938 <get_time64@@Base>:
  408938:	sub	sp, sp, #0x40
  40893c:	str	x21, [sp, #40]
  408940:	mov	x21, x1
  408944:	stp	x20, x19, [sp, #48]
  408948:	mov	x19, x0
  40894c:	add	x1, sp, #0x8
  408950:	mov	x0, x21
  408954:	str	d8, [sp, #16]
  408958:	stp	x29, x30, [sp, #24]
  40895c:	add	x29, sp, #0x10
  408960:	bl	404bd0 <strtod@plt>
  408964:	ldr	x20, [sp, #8]
  408968:	cmp	x20, x21
  40896c:	b.eq	408a6c <get_time64@@Base+0x134>  // b.none
  408970:	ldrb	w8, [x20]
  408974:	mov	v8.16b, v0.16b
  408978:	cbz	w8, 408a84 <get_time64@@Base+0x14c>
  40897c:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  408980:	add	x1, x1, #0xd4f
  408984:	mov	x0, x20
  408988:	bl	404d70 <strcasecmp@plt>
  40898c:	cbz	w0, 408a74 <get_time64@@Base+0x13c>
  408990:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  408994:	add	x1, x1, #0xd66
  408998:	mov	x0, x20
  40899c:	bl	404d70 <strcasecmp@plt>
  4089a0:	cbz	w0, 408a74 <get_time64@@Base+0x13c>
  4089a4:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  4089a8:	add	x1, x1, #0xd6b
  4089ac:	mov	x0, x20
  4089b0:	bl	404d70 <strcasecmp@plt>
  4089b4:	cbz	w0, 408a74 <get_time64@@Base+0x13c>
  4089b8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  4089bc:	add	x1, x1, #0xeb
  4089c0:	mov	x0, x20
  4089c4:	bl	404d70 <strcasecmp@plt>
  4089c8:	cbz	w0, 408aa8 <get_time64@@Base+0x170>
  4089cc:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  4089d0:	add	x1, x1, #0xd65
  4089d4:	mov	x0, x20
  4089d8:	bl	404d70 <strcasecmp@plt>
  4089dc:	cbz	w0, 408aa8 <get_time64@@Base+0x170>
  4089e0:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  4089e4:	add	x1, x1, #0xd6a
  4089e8:	mov	x0, x20
  4089ec:	bl	404d70 <strcasecmp@plt>
  4089f0:	cbz	w0, 408aa8 <get_time64@@Base+0x170>
  4089f4:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  4089f8:	add	x1, x1, #0x104
  4089fc:	mov	x0, x20
  408a00:	bl	404d70 <strcasecmp@plt>
  408a04:	cbz	w0, 408ab4 <get_time64@@Base+0x17c>
  408a08:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  408a0c:	add	x1, x1, #0xb5
  408a10:	mov	x0, x20
  408a14:	bl	404d70 <strcasecmp@plt>
  408a18:	cbz	w0, 408ab4 <get_time64@@Base+0x17c>
  408a1c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  408a20:	add	x1, x1, #0xba
  408a24:	mov	x0, x20
  408a28:	bl	404d70 <strcasecmp@plt>
  408a2c:	cbz	w0, 408ab4 <get_time64@@Base+0x17c>
  408a30:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  408a34:	add	x1, x1, #0x10b
  408a38:	mov	x0, x20
  408a3c:	bl	404d70 <strcasecmp@plt>
  408a40:	cbz	w0, 408a84 <get_time64@@Base+0x14c>
  408a44:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  408a48:	add	x1, x1, #0xc0
  408a4c:	mov	x0, x20
  408a50:	bl	404d70 <strcasecmp@plt>
  408a54:	cbz	w0, 408a84 <get_time64@@Base+0x14c>
  408a58:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  408a5c:	add	x1, x1, #0xc5
  408a60:	mov	x0, x20
  408a64:	bl	404d70 <strcasecmp@plt>
  408a68:	cbz	w0, 408a84 <get_time64@@Base+0x14c>
  408a6c:	mov	w0, #0xffffffff            	// #-1
  408a70:	b	408a90 <get_time64@@Base+0x158>
  408a74:	mov	x8, #0xcd6500000000        	// #225833675390976
  408a78:	movk	x8, #0x41cd, lsl #48
  408a7c:	fmov	d0, x8
  408a80:	fmul	d8, d8, d0
  408a84:	fcvtzs	x8, d8
  408a88:	mov	w0, wzr
  408a8c:	str	x8, [x19]
  408a90:	ldp	x20, x19, [sp, #48]
  408a94:	ldr	x21, [sp, #40]
  408a98:	ldp	x29, x30, [sp, #24]
  408a9c:	ldr	d8, [sp, #16]
  408aa0:	add	sp, sp, #0x40
  408aa4:	ret
  408aa8:	mov	x8, #0x848000000000        	// #145685290680320
  408aac:	movk	x8, #0x412e, lsl #48
  408ab0:	b	408a7c <get_time64@@Base+0x144>
  408ab4:	mov	x8, #0x400000000000        	// #70368744177664
  408ab8:	movk	x8, #0x408f, lsl #48
  408abc:	b	408a7c <get_time64@@Base+0x144>

0000000000408ac0 <sprint_time64@@Base>:
  408ac0:	stp	x29, x30, [sp, #-32]!
  408ac4:	mov	w8, #0xca00                	// #51712
  408ac8:	movk	w8, #0x3b9a, lsl #16
  408acc:	str	x19, [sp, #16]
  408ad0:	mov	x19, x1
  408ad4:	cmp	x0, x8
  408ad8:	scvtf	d0, x0
  408adc:	mov	x29, sp
  408ae0:	b.lt	408b00 <sprint_time64@@Base+0x40>  // b.tstop
  408ae4:	mov	x8, #0xcd6500000000        	// #225833675390976
  408ae8:	movk	x8, #0x41cd, lsl #48
  408aec:	fmov	d1, x8
  408af0:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x640>
  408af4:	fdiv	d0, d0, d1
  408af8:	add	x2, x2, #0xf3
  408afc:	b	408b50 <sprint_time64@@Base+0x90>
  408b00:	mov	w8, #0x4240                	// #16960
  408b04:	movk	w8, #0xf, lsl #16
  408b08:	mov	x3, x0
  408b0c:	cmp	x0, x8
  408b10:	b.lt	408b30 <sprint_time64@@Base+0x70>  // b.tstop
  408b14:	mov	x8, #0x848000000000        	// #145685290680320
  408b18:	movk	x8, #0x412e, lsl #48
  408b1c:	fmov	d1, x8
  408b20:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x640>
  408b24:	fdiv	d0, d0, d1
  408b28:	add	x2, x2, #0xf9
  408b2c:	b	408b50 <sprint_time64@@Base+0x90>
  408b30:	cmp	x3, #0x3e8
  408b34:	b.lt	408b6c <sprint_time64@@Base+0xac>  // b.tstop
  408b38:	mov	x8, #0x400000000000        	// #70368744177664
  408b3c:	movk	x8, #0x408f, lsl #48
  408b40:	fmov	d1, x8
  408b44:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x640>
  408b48:	fdiv	d0, d0, d1
  408b4c:	add	x2, x2, #0x100
  408b50:	mov	w1, #0x3f                  	// #63
  408b54:	mov	x0, x19
  408b58:	bl	404c70 <snprintf@plt>
  408b5c:	mov	x0, x19
  408b60:	ldr	x19, [sp, #16]
  408b64:	ldp	x29, x30, [sp], #32
  408b68:	ret
  408b6c:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x640>
  408b70:	add	x2, x2, #0x107
  408b74:	mov	w1, #0x3f                  	// #63
  408b78:	mov	x0, x19
  408b7c:	bl	404c70 <snprintf@plt>
  408b80:	mov	x0, x19
  408b84:	ldr	x19, [sp, #16]
  408b88:	ldp	x29, x30, [sp], #32
  408b8c:	ret

0000000000408b90 <namehash@@Base>:
  408b90:	ldrb	w8, [x0]
  408b94:	cbz	w8, 408bb4 <namehash@@Base+0x24>
  408b98:	add	x9, x0, #0x1
  408b9c:	mov	w0, #0x1505                	// #5381
  408ba0:	add	w10, w0, w0, lsl #5
  408ba4:	add	w0, w10, w8, uxtb
  408ba8:	ldrb	w8, [x9], #1
  408bac:	cbnz	w8, 408ba0 <namehash@@Base+0x10>
  408bb0:	ret
  408bb4:	mov	w0, #0x1505                	// #5381
  408bb8:	ret

0000000000408bbc <ll_remember_index@@Base>:
  408bbc:	stp	x29, x30, [sp, #-96]!
  408bc0:	stp	x28, x27, [sp, #16]
  408bc4:	stp	x26, x25, [sp, #32]
  408bc8:	stp	x24, x23, [sp, #48]
  408bcc:	stp	x22, x21, [sp, #64]
  408bd0:	stp	x20, x19, [sp, #80]
  408bd4:	mov	x29, sp
  408bd8:	sub	sp, sp, #0x1b0
  408bdc:	ldrh	w8, [x0, #4]
  408be0:	and	w9, w8, #0xfffe
  408be4:	cmp	w9, #0x10
  408be8:	b.ne	408c74 <ll_remember_index@@Base+0xb8>  // b.any
  408bec:	ldr	w9, [x0]
  408bf0:	mov	x21, x0
  408bf4:	subs	w3, w9, #0x20
  408bf8:	b.cs	408c04 <ll_remember_index@@Base+0x48>  // b.hs, b.nlast
  408bfc:	mov	w0, #0xffffffff            	// #-1
  408c00:	b	408c78 <ll_remember_index@@Base+0xbc>
  408c04:	ldr	w9, [x21, #20]
  408c08:	adrp	x11, 41f000 <memcpy@GLIBC_2.17>
  408c0c:	add	x11, x11, #0xd08
  408c10:	and	x10, x9, #0x3ff
  408c14:	ldr	x19, [x11, x10, lsl #3]
  408c18:	cbz	x19, 408c30 <ll_remember_index@@Base+0x74>
  408c1c:	ldr	w10, [x19, #36]
  408c20:	cmp	w10, w9
  408c24:	b.eq	408c30 <ll_remember_index@@Base+0x74>  // b.none
  408c28:	ldr	x19, [x19]
  408c2c:	cbnz	x19, 408c1c <ll_remember_index@@Base+0x60>
  408c30:	cmp	w8, #0x11
  408c34:	b.ne	408cd0 <ll_remember_index@@Base+0x114>  // b.any
  408c38:	cbz	x19, 408c74 <ll_remember_index@@Base+0xb8>
  408c3c:	ldr	x8, [x19, #48]
  408c40:	sub	x0, x8, #0x30
  408c44:	cmp	x19, x0
  408c48:	b.ne	408cb8 <ll_remember_index@@Base+0xfc>  // b.any
  408c4c:	ldp	x8, x9, [x19, #16]
  408c50:	str	x8, [x9]
  408c54:	cbz	x8, 408c5c <ll_remember_index@@Base+0xa0>
  408c58:	str	x9, [x8, #8]
  408c5c:	ldp	x8, x9, [x19]
  408c60:	str	x8, [x9]
  408c64:	cbz	x8, 408c6c <ll_remember_index@@Base+0xb0>
  408c68:	str	x9, [x8, #8]
  408c6c:	mov	x0, x19
  408c70:	bl	404e80 <free@plt>
  408c74:	mov	w0, wzr
  408c78:	add	sp, sp, #0x1b0
  408c7c:	ldp	x20, x19, [sp, #80]
  408c80:	ldp	x22, x21, [sp, #64]
  408c84:	ldp	x24, x23, [sp, #48]
  408c88:	ldp	x26, x25, [sp, #32]
  408c8c:	ldp	x28, x27, [sp, #16]
  408c90:	ldp	x29, x30, [sp], #96
  408c94:	ret
  408c98:	ldp	x9, x8, [x8]
  408c9c:	str	x8, [x9, #8]
  408ca0:	str	x9, [x8]
  408ca4:	bl	404e80 <free@plt>
  408ca8:	sub	x0, x20, #0x30
  408cac:	cmp	x19, x0
  408cb0:	mov	x8, x20
  408cb4:	b.eq	408c4c <ll_remember_index@@Base+0x90>  // b.none
  408cb8:	ldp	x9, x10, [x8, #-32]
  408cbc:	ldr	x20, [x8]
  408cc0:	str	x9, [x10]
  408cc4:	cbz	x9, 408c98 <ll_remember_index@@Base+0xdc>
  408cc8:	str	x10, [x9, #8]
  408ccc:	b	408c98 <ll_remember_index@@Base+0xdc>
  408cd0:	add	x2, x21, #0x20
  408cd4:	mov	x0, sp
  408cd8:	mov	w1, #0x35                  	// #53
  408cdc:	mov	w4, #0x8000                	// #32768
  408ce0:	add	x20, x21, #0x10
  408ce4:	bl	40d5ec <parse_rtattr_flags@@Base>
  408ce8:	ldr	x22, [sp, #24]
  408cec:	cbz	x19, 408d50 <ll_remember_index@@Base+0x194>
  408cf0:	cbz	x22, 408ea8 <ll_remember_index@@Base+0x2ec>
  408cf4:	ldr	w8, [x21, #24]
  408cf8:	add	x21, x22, #0x4
  408cfc:	add	x0, x19, #0x40
  408d00:	mov	x1, x21
  408d04:	str	w8, [x19, #32]
  408d08:	bl	404e20 <strcmp@plt>
  408d0c:	cbz	w0, 408ea8 <ll_remember_index@@Base+0x2ec>
  408d10:	mov	x8, x19
  408d14:	ldr	x9, [x8, #16]!
  408d18:	ldr	x10, [x8, #8]
  408d1c:	str	x9, [x10]
  408d20:	cbz	x9, 408d28 <ll_remember_index@@Base+0x16c>
  408d24:	str	x10, [x9, #8]
  408d28:	ldrb	w9, [x21]
  408d2c:	cbz	w9, 408e80 <ll_remember_index@@Base+0x2c4>
  408d30:	add	x10, x22, #0x5
  408d34:	mov	w11, #0x1505                	// #5381
  408d38:	add	w11, w11, w11, lsl #5
  408d3c:	add	w11, w11, w9, uxtb
  408d40:	ldrb	w9, [x10], #1
  408d44:	cbnz	w9, 408d38 <ll_remember_index@@Base+0x17c>
  408d48:	and	w9, w11, #0x3ff
  408d4c:	b	408e84 <ll_remember_index@@Base+0x2c8>
  408d50:	cbz	x22, 408c74 <ll_remember_index@@Base+0xb8>
  408d54:	add	x1, x22, #0x4
  408d58:	mov	x0, x20
  408d5c:	mov	x2, xzr
  408d60:	bl	4094b4 <ll_init_map@@Base+0x94>
  408d64:	cbz	x0, 408c78 <ll_remember_index@@Base+0xbc>
  408d68:	ldr	x8, [sp, #416]
  408d6c:	cbz	x8, 408c74 <ll_remember_index@@Base+0xb8>
  408d70:	ldrh	w9, [x8]
  408d74:	cmp	w9, #0x8
  408d78:	b.cc	408c74 <ll_remember_index@@Base+0xb8>  // b.lo, b.ul, b.last
  408d7c:	adrp	x26, 421000 <stderr@@GLIBC_2.17+0x1d40>
  408d80:	mov	x19, x0
  408d84:	add	x23, x8, #0x4
  408d88:	sub	w24, w9, #0x4
  408d8c:	add	x25, x0, #0x30
  408d90:	add	x26, x26, #0xd08
  408d94:	b	408dc0 <ll_remember_index@@Base+0x204>
  408d98:	str	x9, [x8]
  408d9c:	str	x8, [x20, #24]
  408da0:	ldrh	w8, [x23]
  408da4:	add	w8, w8, #0x3
  408da8:	and	w8, w8, #0x1fffc
  408dac:	sub	w24, w24, w8
  408db0:	mov	w0, wzr
  408db4:	cmp	w24, #0x3
  408db8:	add	x23, x23, x8
  408dbc:	b.le	408c78 <ll_remember_index@@Base+0xbc>
  408dc0:	ldrh	w8, [x23]
  408dc4:	mov	w0, wzr
  408dc8:	cmp	w8, #0x4
  408dcc:	b.cc	408c78 <ll_remember_index@@Base+0xbc>  // b.lo, b.ul, b.last
  408dd0:	cmp	w24, w8
  408dd4:	b.lt	408c78 <ll_remember_index@@Base+0xbc>  // b.tstop
  408dd8:	ldrh	w9, [x23, #2]
  408ddc:	cmp	w9, #0x35
  408de0:	b.ne	408da4 <ll_remember_index@@Base+0x1e8>  // b.any
  408de4:	add	x22, x23, #0x4
  408de8:	mov	x0, x22
  408dec:	bl	404b90 <strlen@plt>
  408df0:	add	x0, x0, #0x41
  408df4:	bl	404cc0 <malloc@plt>
  408df8:	cbz	x0, 408da0 <ll_remember_index@@Base+0x1e4>
  408dfc:	ldr	w8, [x21, #20]
  408e00:	mov	x20, x0
  408e04:	mov	x1, x22
  408e08:	str	w8, [x0, #36]
  408e0c:	add	x0, x0, #0x40
  408e10:	bl	404f10 <strcpy@plt>
  408e14:	ldrh	w8, [x21, #18]
  408e18:	add	x9, x20, #0x30
  408e1c:	strh	w8, [x20, #40]
  408e20:	ldr	w8, [x21, #24]
  408e24:	str	w8, [x20, #32]
  408e28:	ldr	x8, [x19, #56]
  408e2c:	str	x9, [x19, #56]
  408e30:	stp	x25, x8, [x20, #48]
  408e34:	str	x9, [x8]
  408e38:	ldrb	w8, [x22]
  408e3c:	cbz	w8, 408e60 <ll_remember_index@@Base+0x2a4>
  408e40:	add	x9, x23, #0x5
  408e44:	mov	w10, #0x1505                	// #5381
  408e48:	add	w10, w10, w10, lsl #5
  408e4c:	add	w10, w10, w8, uxtb
  408e50:	ldrb	w8, [x9], #1
  408e54:	cbnz	w8, 408e48 <ll_remember_index@@Base+0x28c>
  408e58:	and	w8, w10, #0x3ff
  408e5c:	b	408e64 <ll_remember_index@@Base+0x2a8>
  408e60:	mov	w8, #0x105                 	// #261
  408e64:	add	x8, x26, x8, lsl #3
  408e68:	ldr	x10, [x8]
  408e6c:	mov	x9, x20
  408e70:	str	x10, [x9, #16]!
  408e74:	cbz	x10, 408d98 <ll_remember_index@@Base+0x1dc>
  408e78:	str	x9, [x10, #8]
  408e7c:	b	408d98 <ll_remember_index@@Base+0x1dc>
  408e80:	mov	w9, #0x105                 	// #261
  408e84:	adrp	x10, 421000 <stderr@@GLIBC_2.17+0x1d40>
  408e88:	add	x10, x10, #0xd08
  408e8c:	add	x9, x10, x9, lsl #3
  408e90:	ldr	x10, [x9]
  408e94:	str	x10, [x8]
  408e98:	cbz	x10, 408ea0 <ll_remember_index@@Base+0x2e4>
  408e9c:	str	x8, [x10, #8]
  408ea0:	str	x8, [x9]
  408ea4:	str	x9, [x19, #24]
  408ea8:	ldr	x23, [sp, #416]
  408eac:	cbz	x23, 408fec <ll_remember_index@@Base+0x430>
  408eb0:	ldrh	w8, [x23]
  408eb4:	ldr	x22, [x19, #48]
  408eb8:	cmp	w8, #0x8
  408ebc:	sub	x21, x22, #0x30
  408ec0:	b.cc	408f2c <ll_remember_index@@Base+0x370>  // b.lo, b.ul, b.last
  408ec4:	add	x24, x23, #0x4
  408ec8:	sub	w25, w8, #0x4
  408ecc:	mov	x26, x21
  408ed0:	b	408eec <ll_remember_index@@Base+0x330>
  408ed4:	add	w8, w27, #0x3
  408ed8:	and	x8, x8, #0x1fffc
  408edc:	sub	w25, w25, w8
  408ee0:	cmp	w25, #0x3
  408ee4:	add	x24, x24, x8
  408ee8:	b.le	408f2c <ll_remember_index@@Base+0x370>
  408eec:	ldrh	w27, [x24]
  408ef0:	cmp	w27, #0x4
  408ef4:	b.cc	408f2c <ll_remember_index@@Base+0x370>  // b.lo, b.ul, b.last
  408ef8:	cmp	w25, w27
  408efc:	b.lt	408f2c <ll_remember_index@@Base+0x370>  // b.tstop
  408f00:	ldrh	w8, [x24, #2]
  408f04:	cmp	w8, #0x35
  408f08:	b.ne	408ed4 <ll_remember_index@@Base+0x318>  // b.any
  408f0c:	cbz	x26, 408f2c <ll_remember_index@@Base+0x370>
  408f10:	add	x0, x24, #0x4
  408f14:	add	x1, x26, #0x40
  408f18:	bl	404e20 <strcmp@plt>
  408f1c:	cbnz	w0, 408f2c <ll_remember_index@@Base+0x370>
  408f20:	ldr	x8, [x26, #48]
  408f24:	sub	x26, x8, #0x30
  408f28:	b	408ed4 <ll_remember_index@@Base+0x318>
  408f2c:	cmp	x19, x21
  408f30:	b.ne	408f5c <ll_remember_index@@Base+0x3a0>  // b.any
  408f34:	b	408f78 <ll_remember_index@@Base+0x3bc>
  408f38:	ldp	x8, x9, [x22]
  408f3c:	mov	x0, x21
  408f40:	str	x9, [x8, #8]
  408f44:	str	x8, [x9]
  408f48:	bl	404e80 <free@plt>
  408f4c:	sub	x21, x23, #0x30
  408f50:	cmp	x19, x21
  408f54:	mov	x22, x23
  408f58:	b.eq	408f74 <ll_remember_index@@Base+0x3b8>  // b.none
  408f5c:	ldp	x8, x9, [x22, #-32]
  408f60:	ldr	x23, [x22]
  408f64:	str	x8, [x9]
  408f68:	cbz	x8, 408f38 <ll_remember_index@@Base+0x37c>
  408f6c:	str	x9, [x8, #8]
  408f70:	b	408f38 <ll_remember_index@@Base+0x37c>
  408f74:	ldr	x23, [sp, #416]
  408f78:	cbz	x23, 408c74 <ll_remember_index@@Base+0xb8>
  408f7c:	ldrh	w8, [x23]
  408f80:	cmp	w8, #0x8
  408f84:	b.cc	408c74 <ll_remember_index@@Base+0xb8>  // b.lo, b.ul, b.last
  408f88:	add	x21, x23, #0x4
  408f8c:	sub	w22, w8, #0x4
  408f90:	b	408fb0 <ll_remember_index@@Base+0x3f4>
  408f94:	add	w8, w8, #0x3
  408f98:	and	w8, w8, #0x1fffc
  408f9c:	sub	w22, w22, w8
  408fa0:	mov	w0, wzr
  408fa4:	cmp	w22, #0x3
  408fa8:	add	x21, x21, x8
  408fac:	b.le	408c78 <ll_remember_index@@Base+0xbc>
  408fb0:	ldrh	w8, [x21]
  408fb4:	mov	w0, wzr
  408fb8:	cmp	w8, #0x4
  408fbc:	b.cc	408c78 <ll_remember_index@@Base+0xbc>  // b.lo, b.ul, b.last
  408fc0:	cmp	w22, w8
  408fc4:	b.lt	408c78 <ll_remember_index@@Base+0xbc>  // b.tstop
  408fc8:	ldrh	w9, [x21, #2]
  408fcc:	cmp	w9, #0x35
  408fd0:	b.ne	408f94 <ll_remember_index@@Base+0x3d8>  // b.any
  408fd4:	add	x1, x21, #0x4
  408fd8:	mov	x0, x20
  408fdc:	mov	x2, x19
  408fe0:	bl	4094b4 <ll_init_map@@Base+0x94>
  408fe4:	ldrh	w8, [x21]
  408fe8:	b	408f94 <ll_remember_index@@Base+0x3d8>
  408fec:	ldr	x9, [x19, #48]
  408ff0:	sub	x8, x9, #0x30
  408ff4:	cmp	x19, x8
  408ff8:	b.ne	409028 <ll_remember_index@@Base+0x46c>  // b.any
  408ffc:	b	408c74 <ll_remember_index@@Base+0xb8>
  409000:	ldp	x10, x9, [x9]
  409004:	mov	x0, x8
  409008:	str	x9, [x10, #8]
  40900c:	str	x10, [x9]
  409010:	bl	404e80 <free@plt>
  409014:	sub	x8, x20, #0x30
  409018:	mov	w0, wzr
  40901c:	cmp	x19, x8
  409020:	mov	x9, x20
  409024:	b.eq	408c78 <ll_remember_index@@Base+0xbc>  // b.none
  409028:	ldp	x10, x11, [x9, #-32]
  40902c:	ldr	x20, [x9]
  409030:	str	x10, [x11]
  409034:	cbz	x10, 409000 <ll_remember_index@@Base+0x444>
  409038:	str	x11, [x10, #8]
  40903c:	b	409000 <ll_remember_index@@Base+0x444>

0000000000409040 <ll_idx_n2a@@Base>:
  409040:	stp	x29, x30, [sp, #-32]!
  409044:	str	x19, [sp, #16]
  409048:	adrp	x19, 41f000 <memcpy@GLIBC_2.17>
  40904c:	add	x19, x19, #0xce0
  409050:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x640>
  409054:	mov	w3, w0
  409058:	add	x2, x2, #0x10e
  40905c:	mov	w1, #0x10                  	// #16
  409060:	mov	x0, x19
  409064:	mov	x29, sp
  409068:	bl	404c70 <snprintf@plt>
  40906c:	mov	x0, x19
  409070:	ldr	x19, [sp, #16]
  409074:	ldp	x29, x30, [sp], #32
  409078:	ret

000000000040907c <ll_index_to_name@@Base>:
  40907c:	stp	x29, x30, [sp, #-48]!
  409080:	str	x21, [sp, #16]
  409084:	stp	x20, x19, [sp, #32]
  409088:	mov	x29, sp
  40908c:	cbz	w0, 409128 <ll_index_to_name@@Base+0xac>
  409090:	adrp	x21, 41f000 <memcpy@GLIBC_2.17>
  409094:	and	w20, w0, #0x3ff
  409098:	add	x21, x21, #0xd08
  40909c:	ldr	x8, [x21, w20, uxtw #3]
  4090a0:	mov	w19, w0
  4090a4:	cbz	x8, 4090bc <ll_index_to_name@@Base+0x40>
  4090a8:	ldr	w9, [x8, #36]
  4090ac:	cmp	w9, w19
  4090b0:	b.eq	409134 <ll_index_to_name@@Base+0xb8>  // b.none
  4090b4:	ldr	x8, [x8]
  4090b8:	cbnz	x8, 4090a8 <ll_index_to_name@@Base+0x2c>
  4090bc:	mov	x0, xzr
  4090c0:	mov	w1, w19
  4090c4:	bl	40914c <ll_index_to_name@@Base+0xd0>
  4090c8:	cmp	w0, w19
  4090cc:	b.ne	4090ec <ll_index_to_name@@Base+0x70>  // b.any
  4090d0:	ldr	x8, [x21, x20, lsl #3]
  4090d4:	cbz	x8, 4090ec <ll_index_to_name@@Base+0x70>
  4090d8:	ldr	w9, [x8, #36]
  4090dc:	cmp	w9, w19
  4090e0:	b.eq	409134 <ll_index_to_name@@Base+0xb8>  // b.none
  4090e4:	ldr	x8, [x8]
  4090e8:	cbnz	x8, 4090d8 <ll_index_to_name@@Base+0x5c>
  4090ec:	adrp	x20, 41f000 <memcpy@GLIBC_2.17>
  4090f0:	add	x20, x20, #0xcf0
  4090f4:	mov	w0, w19
  4090f8:	mov	x1, x20
  4090fc:	bl	404d10 <if_indextoname@plt>
  409100:	cbnz	x0, 409138 <ll_index_to_name@@Base+0xbc>
  409104:	adrp	x20, 41f000 <memcpy@GLIBC_2.17>
  409108:	add	x20, x20, #0xcf0
  40910c:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x640>
  409110:	add	x2, x2, #0x10e
  409114:	mov	w1, #0x10                  	// #16
  409118:	mov	x0, x20
  40911c:	mov	w3, w19
  409120:	bl	404c70 <snprintf@plt>
  409124:	b	409138 <ll_index_to_name@@Base+0xbc>
  409128:	adrp	x20, 40e000 <_IO_stdin_used@@Base+0x640>
  40912c:	add	x20, x20, #0x113
  409130:	b	409138 <ll_index_to_name@@Base+0xbc>
  409134:	add	x20, x8, #0x40
  409138:	mov	x0, x20
  40913c:	ldp	x20, x19, [sp, #32]
  409140:	ldr	x21, [sp, #16]
  409144:	ldp	x29, x30, [sp], #48
  409148:	ret
  40914c:	stp	x29, x30, [sp, #-48]!
  409150:	str	x28, [sp, #16]
  409154:	stp	x20, x19, [sp, #32]
  409158:	mov	x29, sp
  40915c:	sub	sp, sp, #0x460
  409160:	add	x8, sp, #0x40
  409164:	mov	w20, w1
  409168:	mov	x19, x0
  40916c:	add	x0, x8, #0x8
  409170:	mov	w2, #0x418                 	// #1048
  409174:	mov	w1, wzr
  409178:	bl	404d20 <memset@plt>
  40917c:	mov	x8, #0x20                  	// #32
  409180:	movk	x8, #0x12, lsl #32
  409184:	movk	x8, #0x1, lsl #48
  409188:	movi	v0.2d, #0x0
  40918c:	mov	x0, sp
  409190:	mov	w1, wzr
  409194:	str	w20, [sp, #84]
  409198:	str	xzr, [sp, #48]
  40919c:	str	x8, [sp, #64]
  4091a0:	stp	q0, q0, [sp, #16]
  4091a4:	str	q0, [sp]
  4091a8:	bl	40b2a4 <rtnl_open@@Base>
  4091ac:	tbnz	w0, #31, 409238 <ll_index_to_name@@Base+0x1bc>
  4091b0:	add	x0, sp, #0x40
  4091b4:	mov	w1, #0x420                 	// #1056
  4091b8:	mov	w2, #0x1d                  	// #29
  4091bc:	mov	w3, #0x9                   	// #9
  4091c0:	bl	40cdb0 <addattr32@@Base>
  4091c4:	cbz	x19, 409200 <ll_index_to_name@@Base+0x184>
  4091c8:	mov	x0, x19
  4091cc:	bl	406d50 <check_ifname@@Base>
  4091d0:	cmp	w0, #0x0
  4091d4:	mov	w8, #0x35                  	// #53
  4091d8:	mov	w9, #0x3                   	// #3
  4091dc:	mov	x0, x19
  4091e0:	csel	w20, w9, w8, eq  // eq = none
  4091e4:	bl	404b90 <strlen@plt>
  4091e8:	add	w4, w0, #0x1
  4091ec:	add	x0, sp, #0x40
  4091f0:	mov	w1, #0x420                 	// #1056
  4091f4:	mov	w2, w20
  4091f8:	mov	x3, x19
  4091fc:	bl	40cc28 <addattr_l@@Base>
  409200:	mov	x0, sp
  409204:	add	x1, sp, #0x40
  409208:	add	x2, x29, #0x18
  40920c:	bl	40c6fc <rtnl_talk_suppress_rtnl_errmsg@@Base>
  409210:	tbnz	w0, #31, 409240 <ll_index_to_name@@Base+0x1c4>
  409214:	ldr	x0, [x29, #24]
  409218:	bl	408bbc <ll_remember_index@@Base>
  40921c:	ldr	x8, [x29, #24]
  409220:	mov	w19, w0
  409224:	cbnz	w0, 40922c <ll_index_to_name@@Base+0x1b0>
  409228:	ldr	w19, [x8, #20]
  40922c:	mov	x0, x8
  409230:	bl	404e80 <free@plt>
  409234:	b	409244 <ll_index_to_name@@Base+0x1c8>
  409238:	mov	w19, wzr
  40923c:	b	40924c <ll_index_to_name@@Base+0x1d0>
  409240:	mov	w19, wzr
  409244:	mov	x0, sp
  409248:	bl	40b0d4 <rtnl_close@@Base>
  40924c:	mov	w0, w19
  409250:	add	sp, sp, #0x460
  409254:	ldp	x20, x19, [sp, #32]
  409258:	ldr	x28, [sp, #16]
  40925c:	ldp	x29, x30, [sp], #48
  409260:	ret

0000000000409264 <ll_index_to_type@@Base>:
  409264:	cbz	w0, 409290 <ll_index_to_type@@Base+0x2c>
  409268:	adrp	x9, 41f000 <memcpy@GLIBC_2.17>
  40926c:	and	w8, w0, #0x3ff
  409270:	add	x9, x9, #0xd08
  409274:	ldr	x8, [x9, w8, uxtw #3]
  409278:	cbz	x8, 409290 <ll_index_to_type@@Base+0x2c>
  40927c:	ldr	w9, [x8, #36]
  409280:	cmp	w9, w0
  409284:	b.eq	409298 <ll_index_to_type@@Base+0x34>  // b.none
  409288:	ldr	x8, [x8]
  40928c:	cbnz	x8, 40927c <ll_index_to_type@@Base+0x18>
  409290:	mov	w0, #0xffffffff            	// #-1
  409294:	ret
  409298:	ldrh	w0, [x8, #40]
  40929c:	ret

00000000004092a0 <ll_index_to_flags@@Base>:
  4092a0:	cbz	w0, 4092d8 <ll_index_to_flags@@Base+0x38>
  4092a4:	adrp	x9, 41f000 <memcpy@GLIBC_2.17>
  4092a8:	and	w8, w0, #0x3ff
  4092ac:	add	x9, x9, #0xd08
  4092b0:	ldr	x8, [x9, w8, uxtw #3]
  4092b4:	cbz	x8, 4092cc <ll_index_to_flags@@Base+0x2c>
  4092b8:	ldr	w9, [x8, #36]
  4092bc:	cmp	w9, w0
  4092c0:	b.eq	4092d4 <ll_index_to_flags@@Base+0x34>  // b.none
  4092c4:	ldr	x8, [x8]
  4092c8:	cbnz	x8, 4092b8 <ll_index_to_flags@@Base+0x18>
  4092cc:	mov	w0, #0xffffffff            	// #-1
  4092d0:	ret
  4092d4:	ldr	w0, [x8, #32]
  4092d8:	ret

00000000004092dc <ll_name_to_index@@Base>:
  4092dc:	sub	sp, sp, #0x30
  4092e0:	stp	x29, x30, [sp, #16]
  4092e4:	stp	x20, x19, [sp, #32]
  4092e8:	add	x29, sp, #0x10
  4092ec:	cbz	x0, 409350 <ll_name_to_index@@Base+0x74>
  4092f0:	ldrb	w8, [x0]
  4092f4:	mov	x19, x0
  4092f8:	cbz	w8, 409360 <ll_name_to_index@@Base+0x84>
  4092fc:	add	x9, x19, #0x1
  409300:	mov	w10, #0x1505                	// #5381
  409304:	add	w10, w10, w10, lsl #5
  409308:	add	w10, w10, w8, uxtb
  40930c:	ldrb	w8, [x9], #1
  409310:	cbnz	w8, 409304 <ll_name_to_index@@Base+0x28>
  409314:	and	w8, w10, #0x3ff
  409318:	adrp	x9, 421000 <stderr@@GLIBC_2.17+0x1d40>
  40931c:	add	x9, x9, #0xd08
  409320:	ldr	x20, [x9, x8, lsl #3]
  409324:	cbz	x20, 409340 <ll_name_to_index@@Base+0x64>
  409328:	add	x0, x20, #0x30
  40932c:	mov	x1, x19
  409330:	bl	404e20 <strcmp@plt>
  409334:	cbz	w0, 409378 <ll_name_to_index@@Base+0x9c>
  409338:	ldr	x20, [x20]
  40933c:	cbnz	x20, 409328 <ll_name_to_index@@Base+0x4c>
  409340:	mov	x0, x19
  409344:	mov	w1, wzr
  409348:	bl	40914c <ll_index_to_name@@Base+0xd0>
  40934c:	cbz	w0, 40938c <ll_name_to_index@@Base+0xb0>
  409350:	ldp	x20, x19, [sp, #32]
  409354:	ldp	x29, x30, [sp, #16]
  409358:	add	sp, sp, #0x30
  40935c:	ret
  409360:	mov	w8, #0x105                 	// #261
  409364:	adrp	x9, 421000 <stderr@@GLIBC_2.17+0x1d40>
  409368:	add	x9, x9, #0xd08
  40936c:	ldr	x20, [x9, x8, lsl #3]
  409370:	cbnz	x20, 409328 <ll_name_to_index@@Base+0x4c>
  409374:	b	409340 <ll_name_to_index@@Base+0x64>
  409378:	ldr	w0, [x20, #20]
  40937c:	ldp	x20, x19, [sp, #32]
  409380:	ldp	x29, x30, [sp, #16]
  409384:	add	sp, sp, #0x30
  409388:	ret
  40938c:	mov	x0, x19
  409390:	bl	404f80 <if_nametoindex@plt>
  409394:	cbnz	w0, 409350 <ll_name_to_index@@Base+0x74>
  409398:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40939c:	add	x1, x1, #0x10e
  4093a0:	sub	x2, x29, #0x4
  4093a4:	mov	x0, x19
  4093a8:	bl	404fb0 <__isoc99_sscanf@plt>
  4093ac:	ldur	w8, [x29, #-4]
  4093b0:	cmp	w0, #0x1
  4093b4:	csel	w0, w8, wzr, eq  // eq = none
  4093b8:	ldp	x20, x19, [sp, #32]
  4093bc:	ldp	x29, x30, [sp, #16]
  4093c0:	add	sp, sp, #0x30
  4093c4:	ret

00000000004093c8 <ll_drop_by_index@@Base>:
  4093c8:	adrp	x10, 41f000 <memcpy@GLIBC_2.17>
  4093cc:	and	w9, w0, #0x3ff
  4093d0:	add	x10, x10, #0xd08
  4093d4:	mov	w8, w0
  4093d8:	ldr	x0, [x10, w9, uxtw #3]
  4093dc:	cbz	x0, 4093f8 <ll_drop_by_index@@Base+0x30>
  4093e0:	ldr	w10, [x0, #36]
  4093e4:	ldr	x9, [x0]
  4093e8:	cmp	w10, w8
  4093ec:	b.eq	4093fc <ll_drop_by_index@@Base+0x34>  // b.none
  4093f0:	mov	x0, x9
  4093f4:	cbnz	x9, 4093e0 <ll_drop_by_index@@Base+0x18>
  4093f8:	ret
  4093fc:	ldr	x8, [x0, #8]
  409400:	str	x9, [x8]
  409404:	cbz	x9, 40940c <ll_drop_by_index@@Base+0x44>
  409408:	str	x8, [x9, #8]
  40940c:	ldp	x8, x9, [x0, #16]
  409410:	str	x8, [x9]
  409414:	cbz	x8, 40941c <ll_drop_by_index@@Base+0x54>
  409418:	str	x9, [x8, #8]
  40941c:	b	404e80 <free@plt>

0000000000409420 <ll_init_map@@Base>:
  409420:	stp	x29, x30, [sp, #-32]!
  409424:	stp	x20, x19, [sp, #16]
  409428:	adrp	x20, 41f000 <memcpy@GLIBC_2.17>
  40942c:	ldrb	w8, [x20, #3328]
  409430:	mov	x29, sp
  409434:	tbnz	w8, #0, 40946c <ll_init_map@@Base+0x4c>
  409438:	mov	w1, wzr
  40943c:	mov	x19, x0
  409440:	bl	40b7bc <rtnl_linkdump_req@@Base>
  409444:	tbnz	w0, #31, 409478 <ll_init_map@@Base+0x58>
  409448:	adrp	x1, 41e000 <_IO_stdin_used@@Base+0x10640>
  40944c:	ldr	x1, [x1, #4008]
  409450:	mov	x0, x19
  409454:	mov	x2, xzr
  409458:	mov	w3, wzr
  40945c:	bl	40bd3c <rtnl_dump_filter_nc@@Base>
  409460:	tbnz	w0, #31, 40948c <ll_init_map@@Base+0x6c>
  409464:	mov	w8, #0x1                   	// #1
  409468:	strb	w8, [x20, #3328]
  40946c:	ldp	x20, x19, [sp, #16]
  409470:	ldp	x29, x30, [sp], #32
  409474:	ret
  409478:	adrp	x0, 40d000 <addraw_l@@Base+0xac>
  40947c:	add	x0, x0, #0xad8
  409480:	bl	404bb0 <perror@plt>
  409484:	mov	w0, #0x1                   	// #1
  409488:	bl	404ba0 <exit@plt>
  40948c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  409490:	ldr	x8, [x8, #3992]
  409494:	adrp	x0, 40d000 <addraw_l@@Base+0xac>
  409498:	add	x0, x0, #0xaf1
  40949c:	mov	w1, #0x10                  	// #16
  4094a0:	ldr	x3, [x8]
  4094a4:	mov	w2, #0x1                   	// #1
  4094a8:	bl	404ee0 <fwrite@plt>
  4094ac:	mov	w0, #0x1                   	// #1
  4094b0:	bl	404ba0 <exit@plt>
  4094b4:	stp	x29, x30, [sp, #-48]!
  4094b8:	stp	x22, x21, [sp, #16]
  4094bc:	mov	x22, x0
  4094c0:	mov	x0, x1
  4094c4:	stp	x20, x19, [sp, #32]
  4094c8:	mov	x29, sp
  4094cc:	mov	x21, x2
  4094d0:	mov	x20, x1
  4094d4:	bl	404b90 <strlen@plt>
  4094d8:	add	x0, x0, #0x41
  4094dc:	bl	404cc0 <malloc@plt>
  4094e0:	mov	x19, x0
  4094e4:	cbz	x0, 4095b8 <ll_init_map@@Base+0x198>
  4094e8:	ldr	w8, [x22, #4]
  4094ec:	add	x0, x19, #0x40
  4094f0:	mov	x1, x20
  4094f4:	str	w8, [x19, #36]
  4094f8:	bl	404f10 <strcpy@plt>
  4094fc:	ldrh	w8, [x22, #2]
  409500:	strh	w8, [x19, #40]
  409504:	ldr	w8, [x22, #8]
  409508:	str	w8, [x19, #32]
  40950c:	cbz	x21, 409550 <ll_init_map@@Base+0x130>
  409510:	ldr	x9, [x21, #56]
  409514:	add	x8, x19, #0x30
  409518:	add	x10, x21, #0x30
  40951c:	str	x8, [x21, #56]
  409520:	stp	x10, x9, [x19, #48]
  409524:	str	x8, [x9]
  409528:	ldrb	w8, [x20]
  40952c:	cbz	w8, 40958c <ll_init_map@@Base+0x16c>
  409530:	add	x9, x20, #0x1
  409534:	mov	w10, #0x1505                	// #5381
  409538:	add	w10, w10, w10, lsl #5
  40953c:	add	w10, w10, w8, uxtb
  409540:	ldrb	w8, [x9], #1
  409544:	cbnz	w8, 409538 <ll_init_map@@Base+0x118>
  409548:	and	w8, w10, #0x3ff
  40954c:	b	409590 <ll_init_map@@Base+0x170>
  409550:	ldr	w8, [x22, #4]
  409554:	adrp	x9, 41f000 <memcpy@GLIBC_2.17>
  409558:	add	x9, x9, #0xd08
  40955c:	and	x8, x8, #0x3ff
  409560:	add	x8, x9, x8, lsl #3
  409564:	ldr	x9, [x8]
  409568:	str	x9, [x19]
  40956c:	cbz	x9, 409574 <ll_init_map@@Base+0x154>
  409570:	str	x19, [x9, #8]
  409574:	str	x19, [x8]
  409578:	str	x8, [x19, #8]
  40957c:	add	x8, x19, #0x30
  409580:	stp	x8, x8, [x19, #48]
  409584:	ldrb	w8, [x20]
  409588:	cbnz	w8, 409530 <ll_init_map@@Base+0x110>
  40958c:	mov	w8, #0x105                 	// #261
  409590:	adrp	x9, 421000 <stderr@@GLIBC_2.17+0x1d40>
  409594:	add	x9, x9, #0xd08
  409598:	add	x8, x9, x8, lsl #3
  40959c:	ldr	x10, [x8]
  4095a0:	mov	x9, x19
  4095a4:	str	x10, [x9, #16]!
  4095a8:	cbz	x10, 4095b0 <ll_init_map@@Base+0x190>
  4095ac:	str	x9, [x10, #8]
  4095b0:	str	x9, [x8]
  4095b4:	str	x8, [x19, #24]
  4095b8:	mov	x0, x19
  4095bc:	ldp	x20, x19, [sp, #32]
  4095c0:	ldp	x22, x21, [sp, #16]
  4095c4:	ldp	x29, x30, [sp], #48
  4095c8:	ret

00000000004095cc <ll_addr_n2a@@Base>:
  4095cc:	stp	x29, x30, [sp, #-80]!
  4095d0:	stp	x22, x21, [sp, #48]
  4095d4:	stp	x20, x19, [sp, #64]
  4095d8:	mov	w19, w4
  4095dc:	mov	x20, x3
  4095e0:	mov	w22, w1
  4095e4:	cmp	w1, #0x10
  4095e8:	mov	x21, x0
  4095ec:	stp	x26, x25, [sp, #16]
  4095f0:	stp	x24, x23, [sp, #32]
  4095f4:	mov	x29, sp
  4095f8:	b.eq	40962c <ll_addr_n2a@@Base+0x60>  // b.none
  4095fc:	cmp	w22, #0x4
  409600:	b.ne	409664 <ll_addr_n2a@@Base+0x98>  // b.any
  409604:	sub	w8, w2, #0x300
  409608:	cmp	w8, #0xa
  40960c:	b.hi	409664 <ll_addr_n2a@@Base+0x98>  // b.pmore
  409610:	mov	w9, #0x1                   	// #1
  409614:	lsl	w8, w9, w8
  409618:	mov	w9, #0x501                 	// #1281
  40961c:	tst	w8, w9
  409620:	b.eq	409664 <ll_addr_n2a@@Base+0x98>  // b.none
  409624:	mov	w0, #0x2                   	// #2
  409628:	b	409640 <ll_addr_n2a@@Base+0x74>
  40962c:	cmp	w2, #0x337
  409630:	b.eq	40963c <ll_addr_n2a@@Base+0x70>  // b.none
  409634:	cmp	w2, #0x301
  409638:	b.ne	409664 <ll_addr_n2a@@Base+0x98>  // b.any
  40963c:	mov	w0, #0xa                   	// #10
  409640:	mov	x1, x21
  409644:	mov	x2, x20
  409648:	mov	w3, w19
  40964c:	ldp	x20, x19, [sp, #64]
  409650:	ldp	x22, x21, [sp, #48]
  409654:	ldp	x24, x23, [sp, #32]
  409658:	ldp	x26, x25, [sp, #16]
  40965c:	ldp	x29, x30, [sp], #80
  409660:	b	405080 <inet_ntop@plt>
  409664:	ldrb	w3, [x21]
  409668:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x640>
  40966c:	sxtw	x1, w19
  409670:	add	x2, x2, #0x116
  409674:	mov	x0, x20
  409678:	bl	404c70 <snprintf@plt>
  40967c:	cmp	w22, #0x2
  409680:	b.lt	4096d4 <ll_addr_n2a@@Base+0x108>  // b.tstop
  409684:	cmp	w19, #0x3
  409688:	b.lt	4096d4 <ll_addr_n2a@@Base+0x108>  // b.tstop
  40968c:	mov	w23, w22
  409690:	adrp	x22, 40e000 <_IO_stdin_used@@Base+0x640>
  409694:	sub	w24, w19, #0x2
  409698:	mov	w25, #0x2                   	// #2
  40969c:	mov	w26, #0x1                   	// #1
  4096a0:	add	x22, x22, #0x115
  4096a4:	ldrb	w3, [x21, x26]
  4096a8:	add	x0, x20, x25
  4096ac:	sxtw	x1, w24
  4096b0:	mov	x2, x22
  4096b4:	bl	404c70 <snprintf@plt>
  4096b8:	add	x26, x26, #0x1
  4096bc:	cmp	x26, x23
  4096c0:	b.cs	4096d4 <ll_addr_n2a@@Base+0x108>  // b.hs, b.nlast
  4096c4:	add	x25, x25, #0x3
  4096c8:	cmp	w25, w19
  4096cc:	sub	w24, w24, #0x3
  4096d0:	b.lt	4096a4 <ll_addr_n2a@@Base+0xd8>  // b.tstop
  4096d4:	mov	x0, x20
  4096d8:	ldp	x20, x19, [sp, #64]
  4096dc:	ldp	x22, x21, [sp, #48]
  4096e0:	ldp	x24, x23, [sp, #32]
  4096e4:	ldp	x26, x25, [sp, #16]
  4096e8:	ldp	x29, x30, [sp], #80
  4096ec:	ret

00000000004096f0 <ll_addr_a2n@@Base>:
  4096f0:	sub	sp, sp, #0x160
  4096f4:	stp	x22, x21, [sp, #320]
  4096f8:	stp	x20, x19, [sp, #336]
  4096fc:	mov	w21, w1
  409700:	mov	x20, x0
  409704:	mov	w1, #0x2e                  	// #46
  409708:	mov	x0, x2
  40970c:	stp	x29, x30, [sp, #272]
  409710:	str	x28, [sp, #288]
  409714:	stp	x24, x23, [sp, #304]
  409718:	add	x29, sp, #0x110
  40971c:	mov	x19, x2
  409720:	bl	404ec0 <strchr@plt>
  409724:	cbz	x0, 40974c <ll_addr_a2n@@Base+0x5c>
  409728:	add	x0, sp, #0x8
  40972c:	mov	w2, #0x2                   	// #2
  409730:	mov	x1, x19
  409734:	bl	406328 <get_addr_1@@Base>
  409738:	cbnz	w0, 4097d0 <ll_addr_a2n@@Base+0xe0>
  40973c:	cmp	w21, #0x4
  409740:	b.ge	4097c0 <ll_addr_a2n@@Base+0xd0>  // b.tcont
  409744:	mov	w0, #0xffffffff            	// #-1
  409748:	b	4097fc <ll_addr_a2n@@Base+0x10c>
  40974c:	cmp	w21, #0x1
  409750:	b.lt	4097f4 <ll_addr_a2n@@Base+0x104>  // b.tstop
  409754:	mov	w24, w21
  409758:	adrp	x21, 40e000 <_IO_stdin_used@@Base+0x640>
  40975c:	mov	x23, xzr
  409760:	add	x21, x21, #0x134
  409764:	mov	w1, #0x3a                  	// #58
  409768:	mov	x0, x19
  40976c:	bl	404ec0 <strchr@plt>
  409770:	mov	x22, x0
  409774:	cbz	x0, 40977c <ll_addr_a2n@@Base+0x8c>
  409778:	strb	wzr, [x22], #1
  40977c:	add	x2, sp, #0x8
  409780:	mov	x0, x19
  409784:	mov	x1, x21
  409788:	bl	404fb0 <__isoc99_sscanf@plt>
  40978c:	cmp	w0, #0x1
  409790:	b.ne	4097d0 <ll_addr_a2n@@Base+0xe0>  // b.any
  409794:	ldr	w8, [sp, #8]
  409798:	cmp	w8, #0xff
  40979c:	b.hi	4097d0 <ll_addr_a2n@@Base+0xe0>  // b.pmore
  4097a0:	strb	w8, [x20, x23]
  4097a4:	cbz	x22, 4097f8 <ll_addr_a2n@@Base+0x108>
  4097a8:	add	x23, x23, #0x1
  4097ac:	cmp	x24, x23
  4097b0:	mov	x19, x22
  4097b4:	b.ne	409764 <ll_addr_a2n@@Base+0x74>  // b.any
  4097b8:	mov	w23, w24
  4097bc:	b	4097f8 <ll_addr_a2n@@Base+0x108>
  4097c0:	ldr	w8, [sp, #16]
  4097c4:	mov	w0, #0x4                   	// #4
  4097c8:	str	w8, [x20]
  4097cc:	b	4097fc <ll_addr_a2n@@Base+0x10c>
  4097d0:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  4097d4:	ldr	x8, [x8, #3992]
  4097d8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  4097dc:	add	x1, x1, #0x11b
  4097e0:	mov	x2, x19
  4097e4:	ldr	x0, [x8]
  4097e8:	bl	405060 <fprintf@plt>
  4097ec:	mov	w0, #0xffffffff            	// #-1
  4097f0:	b	4097fc <ll_addr_a2n@@Base+0x10c>
  4097f4:	mov	w23, wzr
  4097f8:	add	w0, w23, #0x1
  4097fc:	ldp	x20, x19, [sp, #336]
  409800:	ldp	x22, x21, [sp, #320]
  409804:	ldp	x24, x23, [sp, #304]
  409808:	ldr	x28, [sp, #288]
  40980c:	ldp	x29, x30, [sp, #272]
  409810:	add	sp, sp, #0x160
  409814:	ret

0000000000409818 <new_json_obj@@Base>:
  409818:	stp	x29, x30, [sp, #-32]!
  40981c:	str	x19, [sp, #16]
  409820:	mov	x29, sp
  409824:	cbz	w0, 40986c <new_json_obj@@Base+0x54>
  409828:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  40982c:	ldr	x8, [x8, #4016]
  409830:	ldr	x0, [x8]
  409834:	bl	40a6e4 <jsonw_new@@Base>
  409838:	adrp	x19, 423000 <stderr@@GLIBC_2.17+0x3d40>
  40983c:	str	x0, [x19, #3336]
  409840:	cbz	x0, 409878 <new_json_obj@@Base+0x60>
  409844:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  409848:	ldr	x8, [x8, #4056]
  40984c:	ldr	w8, [x8]
  409850:	cbz	w8, 409860 <new_json_obj@@Base+0x48>
  409854:	mov	w1, #0x1                   	// #1
  409858:	bl	40a780 <jsonw_pretty@@Base>
  40985c:	ldr	x0, [x19, #3336]
  409860:	ldr	x19, [sp, #16]
  409864:	ldp	x29, x30, [sp], #32
  409868:	b	40abc0 <jsonw_start_array@@Base>
  40986c:	ldr	x19, [sp, #16]
  409870:	ldp	x29, x30, [sp], #32
  409874:	ret
  409878:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x640>
  40987c:	add	x0, x0, #0x156
  409880:	bl	404bb0 <perror@plt>
  409884:	mov	w0, #0x1                   	// #1
  409888:	bl	404ba0 <exit@plt>

000000000040988c <delete_json_obj@@Base>:
  40988c:	stp	x29, x30, [sp, #-16]!
  409890:	adrp	x8, 423000 <stderr@@GLIBC_2.17+0x3d40>
  409894:	ldr	x0, [x8, #3336]
  409898:	mov	x29, sp
  40989c:	cbz	x0, 4098b4 <delete_json_obj@@Base+0x28>
  4098a0:	bl	40ac2c <jsonw_end_array@@Base>
  4098a4:	adrp	x0, 423000 <stderr@@GLIBC_2.17+0x3d40>
  4098a8:	add	x0, x0, #0xd08
  4098ac:	ldp	x29, x30, [sp], #16
  4098b0:	b	40a718 <jsonw_destroy@@Base>
  4098b4:	ldp	x29, x30, [sp], #16
  4098b8:	ret

00000000004098bc <new_json_obj_plain@@Base>:
  4098bc:	stp	x29, x30, [sp, #-16]!
  4098c0:	mov	x29, sp
  4098c4:	cbz	w0, 409900 <new_json_obj_plain@@Base+0x44>
  4098c8:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  4098cc:	ldr	x8, [x8, #4016]
  4098d0:	ldr	x0, [x8]
  4098d4:	bl	40a6e4 <jsonw_new@@Base>
  4098d8:	adrp	x8, 423000 <stderr@@GLIBC_2.17+0x3d40>
  4098dc:	str	x0, [x8, #3336]
  4098e0:	cbz	x0, 409908 <new_json_obj_plain@@Base+0x4c>
  4098e4:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  4098e8:	ldr	x8, [x8, #4056]
  4098ec:	ldr	w8, [x8]
  4098f0:	cbz	w8, 409900 <new_json_obj_plain@@Base+0x44>
  4098f4:	mov	w1, #0x1                   	// #1
  4098f8:	ldp	x29, x30, [sp], #16
  4098fc:	b	40a780 <jsonw_pretty@@Base>
  409900:	ldp	x29, x30, [sp], #16
  409904:	ret
  409908:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x640>
  40990c:	add	x0, x0, #0x156
  409910:	bl	404bb0 <perror@plt>
  409914:	mov	w0, #0x1                   	// #1
  409918:	bl	404ba0 <exit@plt>

000000000040991c <delete_json_obj_plain@@Base>:
  40991c:	adrp	x8, 423000 <stderr@@GLIBC_2.17+0x3d40>
  409920:	ldr	x8, [x8, #3336]
  409924:	cbz	x8, 409934 <delete_json_obj_plain@@Base+0x18>
  409928:	adrp	x0, 423000 <stderr@@GLIBC_2.17+0x3d40>
  40992c:	add	x0, x0, #0xd08
  409930:	b	40a718 <jsonw_destroy@@Base>
  409934:	ret

0000000000409938 <is_json_context@@Base>:
  409938:	adrp	x8, 423000 <stderr@@GLIBC_2.17+0x3d40>
  40993c:	ldr	x8, [x8, #3336]
  409940:	cmp	x8, #0x0
  409944:	cset	w0, ne  // ne = any
  409948:	ret

000000000040994c <get_json_writer@@Base>:
  40994c:	adrp	x8, 423000 <stderr@@GLIBC_2.17+0x3d40>
  409950:	ldr	x0, [x8, #3336]
  409954:	ret

0000000000409958 <open_json_object@@Base>:
  409958:	stp	x29, x30, [sp, #-32]!
  40995c:	str	x19, [sp, #16]
  409960:	adrp	x19, 423000 <stderr@@GLIBC_2.17+0x3d40>
  409964:	ldr	x8, [x19, #3336]
  409968:	mov	x29, sp
  40996c:	cbz	x8, 409994 <open_json_object@@Base+0x3c>
  409970:	mov	x1, x0
  409974:	cbz	x0, 409984 <open_json_object@@Base+0x2c>
  409978:	mov	x0, x8
  40997c:	bl	40a78c <jsonw_name@@Base>
  409980:	ldr	x8, [x19, #3336]
  409984:	ldr	x19, [sp, #16]
  409988:	mov	x0, x8
  40998c:	ldp	x29, x30, [sp], #32
  409990:	b	40aaa8 <jsonw_start_object@@Base>
  409994:	ldr	x19, [sp, #16]
  409998:	ldp	x29, x30, [sp], #32
  40999c:	ret

00000000004099a0 <close_json_object@@Base>:
  4099a0:	adrp	x8, 423000 <stderr@@GLIBC_2.17+0x3d40>
  4099a4:	ldr	x0, [x8, #3336]
  4099a8:	cbz	x0, 4099b0 <close_json_object@@Base+0x10>
  4099ac:	b	40aaf8 <jsonw_end_object@@Base>
  4099b0:	ret

00000000004099b4 <open_json_array@@Base>:
  4099b4:	stp	x29, x30, [sp, #-32]!
  4099b8:	str	x19, [sp, #16]
  4099bc:	adrp	x19, 423000 <stderr@@GLIBC_2.17+0x3d40>
  4099c0:	ldr	x8, [x19, #3336]
  4099c4:	tst	w0, #0x6
  4099c8:	mov	x29, sp
  4099cc:	b.eq	4099f4 <open_json_array@@Base+0x40>  // b.none
  4099d0:	cbz	x8, 4099f8 <open_json_array@@Base+0x44>
  4099d4:	cbz	x1, 4099e4 <open_json_array@@Base+0x30>
  4099d8:	mov	x0, x8
  4099dc:	bl	40a78c <jsonw_name@@Base>
  4099e0:	ldr	x8, [x19, #3336]
  4099e4:	ldr	x19, [sp, #16]
  4099e8:	mov	x0, x8
  4099ec:	ldp	x29, x30, [sp], #32
  4099f0:	b	40abc0 <jsonw_start_array@@Base>
  4099f4:	cbnz	x8, 409a18 <open_json_array@@Base+0x64>
  4099f8:	mov	w8, #0x5                   	// #5
  4099fc:	tst	w0, w8
  409a00:	b.eq	409a18 <open_json_array@@Base+0x64>  // b.none
  409a04:	ldr	x19, [sp, #16]
  409a08:	adrp	x0, 40d000 <addraw_l@@Base+0xac>
  409a0c:	add	x0, x0, #0xd4e
  409a10:	ldp	x29, x30, [sp], #32
  409a14:	b	404ff0 <printf@plt>
  409a18:	ldr	x19, [sp, #16]
  409a1c:	ldp	x29, x30, [sp], #32
  409a20:	ret

0000000000409a24 <close_json_array@@Base>:
  409a24:	adrp	x8, 423000 <stderr@@GLIBC_2.17+0x3d40>
  409a28:	ldr	x8, [x8, #3336]
  409a2c:	tst	w0, #0x6
  409a30:	b.eq	409a40 <close_json_array@@Base+0x1c>  // b.none
  409a34:	cbz	x8, 409a44 <close_json_array@@Base+0x20>
  409a38:	mov	x0, x8
  409a3c:	b	40ac2c <jsonw_end_array@@Base>
  409a40:	cbnz	x8, 409a5c <close_json_array@@Base+0x38>
  409a44:	mov	w8, #0x5                   	// #5
  409a48:	tst	w0, w8
  409a4c:	b.eq	409a5c <close_json_array@@Base+0x38>  // b.none
  409a50:	adrp	x0, 40d000 <addraw_l@@Base+0xac>
  409a54:	add	x0, x0, #0xd4e
  409a58:	b	404ff0 <printf@plt>
  409a5c:	ret

0000000000409a60 <print_color_int@@Base>:
  409a60:	adrp	x8, 423000 <stderr@@GLIBC_2.17+0x3d40>
  409a64:	ldr	x8, [x8, #3336]
  409a68:	tst	w0, #0x6
  409a6c:	b.eq	409a88 <print_color_int@@Base+0x28>  // b.none
  409a70:	cbz	x8, 409a8c <print_color_int@@Base+0x2c>
  409a74:	mov	x0, x8
  409a78:	cbz	x2, 409ab4 <print_color_int@@Base+0x54>
  409a7c:	mov	x1, x2
  409a80:	mov	w2, w4
  409a84:	b	40afb0 <jsonw_int_field@@Base>
  409a88:	cbnz	x8, 409ab0 <print_color_int@@Base+0x50>
  409a8c:	mov	w8, #0x5                   	// #5
  409a90:	tst	w0, w8
  409a94:	b.eq	409ab0 <print_color_int@@Base+0x50>  // b.none
  409a98:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  409a9c:	ldr	x8, [x8, #4016]
  409aa0:	mov	x2, x3
  409aa4:	mov	w3, w4
  409aa8:	ldr	x0, [x8]
  409aac:	b	40a398 <color_fprintf@@Base>
  409ab0:	ret
  409ab4:	mov	w1, w4
  409ab8:	b	40ad5c <jsonw_int@@Base>

0000000000409abc <print_color_s64@@Base>:
  409abc:	adrp	x8, 423000 <stderr@@GLIBC_2.17+0x3d40>
  409ac0:	ldr	x8, [x8, #3336]
  409ac4:	tst	w0, #0x6
  409ac8:	b.eq	409ae4 <print_color_s64@@Base+0x28>  // b.none
  409acc:	cbz	x8, 409ae8 <print_color_s64@@Base+0x2c>
  409ad0:	mov	x0, x8
  409ad4:	cbz	x2, 409b10 <print_color_s64@@Base+0x54>
  409ad8:	mov	x1, x2
  409adc:	mov	x2, x4
  409ae0:	b	40afe4 <jsonw_s64_field@@Base>
  409ae4:	cbnz	x8, 409b0c <print_color_s64@@Base+0x50>
  409ae8:	mov	w8, #0x5                   	// #5
  409aec:	tst	w0, w8
  409af0:	b.eq	409b0c <print_color_s64@@Base+0x50>  // b.none
  409af4:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  409af8:	ldr	x8, [x8, #4016]
  409afc:	mov	x2, x3
  409b00:	mov	x3, x4
  409b04:	ldr	x0, [x8]
  409b08:	b	40a398 <color_fprintf@@Base>
  409b0c:	ret
  409b10:	mov	x1, x4
  409b14:	b	40ad6c <jsonw_s64@@Base>

0000000000409b18 <print_color_hhu@@Base>:
  409b18:	adrp	x8, 423000 <stderr@@GLIBC_2.17+0x3d40>
  409b1c:	ldr	x8, [x8, #3336]
  409b20:	tst	w0, #0x6
  409b24:	b.eq	409b40 <print_color_hhu@@Base+0x28>  // b.none
  409b28:	cbz	x8, 409b44 <print_color_hhu@@Base+0x2c>
  409b2c:	mov	x0, x8
  409b30:	cbz	x2, 409b70 <print_color_hhu@@Base+0x58>
  409b34:	mov	x1, x2
  409b38:	mov	w2, w4
  409b3c:	b	40aee0 <jsonw_hhu_field@@Base>
  409b40:	cbnz	x8, 409b6c <print_color_hhu@@Base+0x54>
  409b44:	mov	w8, #0x5                   	// #5
  409b48:	tst	w0, w8
  409b4c:	b.eq	409b6c <print_color_hhu@@Base+0x54>  // b.none
  409b50:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  409b54:	ldr	x8, [x8, #4016]
  409b58:	mov	x2, x3
  409b5c:	ldr	x0, [x8]
  409b60:	and	w8, w4, #0xff
  409b64:	mov	w3, w8
  409b68:	b	40a398 <color_fprintf@@Base>
  409b6c:	ret
  409b70:	mov	w1, w4
  409b74:	b	40acec <jsonw_hhu@@Base>

0000000000409b78 <print_color_hu@@Base>:
  409b78:	adrp	x8, 423000 <stderr@@GLIBC_2.17+0x3d40>
  409b7c:	ldr	x8, [x8, #3336]
  409b80:	tst	w0, #0x6
  409b84:	b.eq	409ba0 <print_color_hu@@Base+0x28>  // b.none
  409b88:	cbz	x8, 409ba4 <print_color_hu@@Base+0x2c>
  409b8c:	mov	x0, x8
  409b90:	cbz	x2, 409bd0 <print_color_hu@@Base+0x58>
  409b94:	mov	x1, x2
  409b98:	mov	w2, w4
  409b9c:	b	40af14 <jsonw_hu_field@@Base>
  409ba0:	cbnz	x8, 409bcc <print_color_hu@@Base+0x54>
  409ba4:	mov	w8, #0x5                   	// #5
  409ba8:	tst	w0, w8
  409bac:	b.eq	409bcc <print_color_hu@@Base+0x54>  // b.none
  409bb0:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  409bb4:	ldr	x8, [x8, #4016]
  409bb8:	mov	x2, x3
  409bbc:	ldr	x0, [x8]
  409bc0:	and	w8, w4, #0xffff
  409bc4:	mov	w3, w8
  409bc8:	b	40a398 <color_fprintf@@Base>
  409bcc:	ret
  409bd0:	mov	w1, w4
  409bd4:	b	40acfc <jsonw_hu@@Base>

0000000000409bd8 <print_color_uint@@Base>:
  409bd8:	adrp	x8, 423000 <stderr@@GLIBC_2.17+0x3d40>
  409bdc:	ldr	x8, [x8, #3336]
  409be0:	tst	w0, #0x6
  409be4:	b.eq	409c00 <print_color_uint@@Base+0x28>  // b.none
  409be8:	cbz	x8, 409c04 <print_color_uint@@Base+0x2c>
  409bec:	mov	x0, x8
  409bf0:	cbz	x2, 409c2c <print_color_uint@@Base+0x54>
  409bf4:	mov	x1, x2
  409bf8:	mov	w2, w4
  409bfc:	b	40ae44 <jsonw_uint_field@@Base>
  409c00:	cbnz	x8, 409c28 <print_color_uint@@Base+0x50>
  409c04:	mov	w8, #0x5                   	// #5
  409c08:	tst	w0, w8
  409c0c:	b.eq	409c28 <print_color_uint@@Base+0x50>  // b.none
  409c10:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  409c14:	ldr	x8, [x8, #4016]
  409c18:	mov	x2, x3
  409c1c:	mov	w3, w4
  409c20:	ldr	x0, [x8]
  409c24:	b	40a398 <color_fprintf@@Base>
  409c28:	ret
  409c2c:	mov	w1, w4
  409c30:	b	40ad0c <jsonw_uint@@Base>

0000000000409c34 <print_color_u64@@Base>:
  409c34:	adrp	x8, 423000 <stderr@@GLIBC_2.17+0x3d40>
  409c38:	ldr	x8, [x8, #3336]
  409c3c:	tst	w0, #0x6
  409c40:	b.eq	409c5c <print_color_u64@@Base+0x28>  // b.none
  409c44:	cbz	x8, 409c60 <print_color_u64@@Base+0x2c>
  409c48:	mov	x0, x8
  409c4c:	cbz	x2, 409c88 <print_color_u64@@Base+0x54>
  409c50:	mov	x1, x2
  409c54:	mov	x2, x4
  409c58:	b	40ae78 <jsonw_u64_field@@Base>
  409c5c:	cbnz	x8, 409c84 <print_color_u64@@Base+0x50>
  409c60:	mov	w8, #0x5                   	// #5
  409c64:	tst	w0, w8
  409c68:	b.eq	409c84 <print_color_u64@@Base+0x50>  // b.none
  409c6c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  409c70:	ldr	x8, [x8, #4016]
  409c74:	mov	x2, x3
  409c78:	mov	x3, x4
  409c7c:	ldr	x0, [x8]
  409c80:	b	40a398 <color_fprintf@@Base>
  409c84:	ret
  409c88:	mov	x1, x4
  409c8c:	b	40ad1c <jsonw_u64@@Base>

0000000000409c90 <print_color_luint@@Base>:
  409c90:	adrp	x8, 423000 <stderr@@GLIBC_2.17+0x3d40>
  409c94:	ldr	x8, [x8, #3336]
  409c98:	tst	w0, #0x6
  409c9c:	b.eq	409cb8 <print_color_luint@@Base+0x28>  // b.none
  409ca0:	cbz	x8, 409cbc <print_color_luint@@Base+0x2c>
  409ca4:	mov	x0, x8
  409ca8:	cbz	x2, 409ce4 <print_color_luint@@Base+0x54>
  409cac:	mov	x1, x2
  409cb0:	mov	x2, x4
  409cb4:	b	40af48 <jsonw_luint_field@@Base>
  409cb8:	cbnz	x8, 409ce0 <print_color_luint@@Base+0x50>
  409cbc:	mov	w8, #0x5                   	// #5
  409cc0:	tst	w0, w8
  409cc4:	b.eq	409ce0 <print_color_luint@@Base+0x50>  // b.none
  409cc8:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  409ccc:	ldr	x8, [x8, #4016]
  409cd0:	mov	x2, x3
  409cd4:	mov	x3, x4
  409cd8:	ldr	x0, [x8]
  409cdc:	b	40a398 <color_fprintf@@Base>
  409ce0:	ret
  409ce4:	mov	x1, x4
  409ce8:	b	40ad3c <jsonw_luint@@Base>

0000000000409cec <print_color_lluint@@Base>:
  409cec:	adrp	x8, 423000 <stderr@@GLIBC_2.17+0x3d40>
  409cf0:	ldr	x8, [x8, #3336]
  409cf4:	tst	w0, #0x6
  409cf8:	b.eq	409d14 <print_color_lluint@@Base+0x28>  // b.none
  409cfc:	cbz	x8, 409d18 <print_color_lluint@@Base+0x2c>
  409d00:	mov	x0, x8
  409d04:	cbz	x2, 409d40 <print_color_lluint@@Base+0x54>
  409d08:	mov	x1, x2
  409d0c:	mov	x2, x4
  409d10:	b	40af7c <jsonw_lluint_field@@Base>
  409d14:	cbnz	x8, 409d3c <print_color_lluint@@Base+0x50>
  409d18:	mov	w8, #0x5                   	// #5
  409d1c:	tst	w0, w8
  409d20:	b.eq	409d3c <print_color_lluint@@Base+0x50>  // b.none
  409d24:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  409d28:	ldr	x8, [x8, #4016]
  409d2c:	mov	x2, x3
  409d30:	mov	x3, x4
  409d34:	ldr	x0, [x8]
  409d38:	b	40a398 <color_fprintf@@Base>
  409d3c:	ret
  409d40:	mov	x1, x4
  409d44:	b	40ad4c <jsonw_lluint@@Base>

0000000000409d48 <print_color_float@@Base>:
  409d48:	adrp	x8, 423000 <stderr@@GLIBC_2.17+0x3d40>
  409d4c:	ldr	x8, [x8, #3336]
  409d50:	tst	w0, #0x6
  409d54:	b.eq	409d6c <print_color_float@@Base+0x24>  // b.none
  409d58:	cbz	x8, 409d70 <print_color_float@@Base+0x28>
  409d5c:	mov	x0, x8
  409d60:	cbz	x2, 409d94 <print_color_float@@Base+0x4c>
  409d64:	mov	x1, x2
  409d68:	b	40ae08 <jsonw_float_field@@Base>
  409d6c:	cbnz	x8, 409d90 <print_color_float@@Base+0x48>
  409d70:	mov	w8, #0x5                   	// #5
  409d74:	tst	w0, w8
  409d78:	b.eq	409d90 <print_color_float@@Base+0x48>  // b.none
  409d7c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  409d80:	ldr	x8, [x8, #4016]
  409d84:	mov	x2, x3
  409d88:	ldr	x0, [x8]
  409d8c:	b	40a398 <color_fprintf@@Base>
  409d90:	ret
  409d94:	b	40ace0 <jsonw_float@@Base>

0000000000409d98 <print_uint_name_value@@Base>:
  409d98:	sub	sp, sp, #0x60
  409d9c:	stp	x20, x19, [sp, #80]
  409da0:	mov	x20, x0
  409da4:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x640>
  409da8:	mov	w19, w1
  409dac:	add	x2, x2, #0x137
  409db0:	mov	x0, sp
  409db4:	mov	w1, #0x40                  	// #64
  409db8:	mov	x3, x20
  409dbc:	stp	x29, x30, [sp, #64]
  409dc0:	add	x29, sp, #0x40
  409dc4:	bl	404c70 <snprintf@plt>
  409dc8:	adrp	x8, 423000 <stderr@@GLIBC_2.17+0x3d40>
  409dcc:	ldr	x0, [x8, #3336]
  409dd0:	cbz	x0, 409df4 <print_uint_name_value@@Base+0x5c>
  409dd4:	cbz	x20, 409e20 <print_uint_name_value@@Base+0x88>
  409dd8:	mov	x1, x20
  409ddc:	mov	w2, w19
  409de0:	bl	40ae44 <jsonw_uint_field@@Base>
  409de4:	ldp	x20, x19, [sp, #80]
  409de8:	ldp	x29, x30, [sp, #64]
  409dec:	add	sp, sp, #0x60
  409df0:	ret
  409df4:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  409df8:	ldr	x8, [x8, #4016]
  409dfc:	mov	x2, sp
  409e00:	mov	w1, #0x6                   	// #6
  409e04:	mov	w3, w19
  409e08:	ldr	x0, [x8]
  409e0c:	bl	40a398 <color_fprintf@@Base>
  409e10:	ldp	x20, x19, [sp, #80]
  409e14:	ldp	x29, x30, [sp, #64]
  409e18:	add	sp, sp, #0x60
  409e1c:	ret
  409e20:	mov	w1, w19
  409e24:	bl	40ad0c <jsonw_uint@@Base>
  409e28:	ldp	x20, x19, [sp, #80]
  409e2c:	ldp	x29, x30, [sp, #64]
  409e30:	add	sp, sp, #0x60
  409e34:	ret

0000000000409e38 <print_string_name_value@@Base>:
  409e38:	sub	sp, sp, #0x60
  409e3c:	stp	x20, x19, [sp, #80]
  409e40:	mov	x20, x0
  409e44:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x640>
  409e48:	mov	x19, x1
  409e4c:	add	x2, x2, #0x13e
  409e50:	mov	x0, sp
  409e54:	mov	w1, #0x40                  	// #64
  409e58:	mov	x3, x20
  409e5c:	stp	x29, x30, [sp, #64]
  409e60:	add	x29, sp, #0x40
  409e64:	bl	404c70 <snprintf@plt>
  409e68:	adrp	x8, 423000 <stderr@@GLIBC_2.17+0x3d40>
  409e6c:	ldr	x0, [x8, #3336]
  409e70:	cbz	x0, 409e94 <print_string_name_value@@Base+0x5c>
  409e74:	cbz	x20, 409ec0 <print_string_name_value@@Base+0x88>
  409e78:	cbnz	x19, 409ec0 <print_string_name_value@@Base+0x88>
  409e7c:	mov	x1, x20
  409e80:	bl	40a78c <jsonw_name@@Base>
  409e84:	ldp	x20, x19, [sp, #80]
  409e88:	ldp	x29, x30, [sp, #64]
  409e8c:	add	sp, sp, #0x60
  409e90:	ret
  409e94:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  409e98:	ldr	x8, [x8, #4016]
  409e9c:	mov	x2, sp
  409ea0:	mov	w1, #0x6                   	// #6
  409ea4:	mov	x3, x19
  409ea8:	ldr	x0, [x8]
  409eac:	bl	40a398 <color_fprintf@@Base>
  409eb0:	ldp	x20, x19, [sp, #80]
  409eb4:	ldp	x29, x30, [sp, #64]
  409eb8:	add	sp, sp, #0x60
  409ebc:	ret
  409ec0:	cbnz	x20, 409ee0 <print_string_name_value@@Base+0xa8>
  409ec4:	cbz	x19, 409ee0 <print_string_name_value@@Base+0xa8>
  409ec8:	mov	x1, x19
  409ecc:	bl	40ac70 <jsonw_string@@Base>
  409ed0:	ldp	x20, x19, [sp, #80]
  409ed4:	ldp	x29, x30, [sp, #64]
  409ed8:	add	sp, sp, #0x60
  409edc:	ret
  409ee0:	mov	x1, x20
  409ee4:	mov	x2, x19
  409ee8:	bl	40ad7c <jsonw_string_field@@Base>
  409eec:	ldp	x20, x19, [sp, #80]
  409ef0:	ldp	x29, x30, [sp, #64]
  409ef4:	add	sp, sp, #0x60
  409ef8:	ret

0000000000409efc <print_color_string@@Base>:
  409efc:	adrp	x8, 423000 <stderr@@GLIBC_2.17+0x3d40>
  409f00:	ldr	x8, [x8, #3336]
  409f04:	tst	w0, #0x6
  409f08:	b.eq	409f24 <print_color_string@@Base+0x28>  // b.none
  409f0c:	cbz	x8, 409f28 <print_color_string@@Base+0x2c>
  409f10:	cbz	x2, 409f50 <print_color_string@@Base+0x54>
  409f14:	cbnz	x4, 409f50 <print_color_string@@Base+0x54>
  409f18:	mov	x0, x8
  409f1c:	mov	x1, x2
  409f20:	b	40a78c <jsonw_name@@Base>
  409f24:	cbnz	x8, 409f4c <print_color_string@@Base+0x50>
  409f28:	mov	w8, #0x5                   	// #5
  409f2c:	tst	w0, w8
  409f30:	b.eq	409f4c <print_color_string@@Base+0x50>  // b.none
  409f34:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  409f38:	ldr	x8, [x8, #4016]
  409f3c:	mov	x2, x3
  409f40:	mov	x3, x4
  409f44:	ldr	x0, [x8]
  409f48:	b	40a398 <color_fprintf@@Base>
  409f4c:	ret
  409f50:	cbnz	x2, 409f64 <print_color_string@@Base+0x68>
  409f54:	cbz	x4, 409f64 <print_color_string@@Base+0x68>
  409f58:	mov	x0, x8
  409f5c:	mov	x1, x4
  409f60:	b	40ac70 <jsonw_string@@Base>
  409f64:	mov	x0, x8
  409f68:	mov	x1, x2
  409f6c:	mov	x2, x4
  409f70:	b	40ad7c <jsonw_string_field@@Base>

0000000000409f74 <print_color_bool@@Base>:
  409f74:	adrp	x8, 423000 <stderr@@GLIBC_2.17+0x3d40>
  409f78:	ldr	x8, [x8, #3336]
  409f7c:	tst	w0, #0x6
  409f80:	b.eq	409fa0 <print_color_bool@@Base+0x2c>  // b.none
  409f84:	cbz	x8, 409fa4 <print_color_bool@@Base+0x30>
  409f88:	cbz	x2, 409fe4 <print_color_bool@@Base+0x70>
  409f8c:	and	w9, w4, #0x1
  409f90:	mov	x0, x8
  409f94:	mov	x1, x2
  409f98:	mov	w2, w9
  409f9c:	b	40adc0 <jsonw_bool_field@@Base>
  409fa0:	cbnz	x8, 409fe0 <print_color_bool@@Base+0x6c>
  409fa4:	mov	w8, #0x5                   	// #5
  409fa8:	tst	w0, w8
  409fac:	b.eq	409fe0 <print_color_bool@@Base+0x6c>  // b.none
  409fb0:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  409fb4:	ldr	x8, [x8, #4016]
  409fb8:	adrp	x9, 40e000 <_IO_stdin_used@@Base+0x640>
  409fbc:	add	x9, x9, #0x145
  409fc0:	tst	w4, #0x1
  409fc4:	ldr	x0, [x8]
  409fc8:	adrp	x8, 40e000 <_IO_stdin_used@@Base+0x640>
  409fcc:	add	x8, x8, #0x14a
  409fd0:	csel	x8, x9, x8, ne  // ne = any
  409fd4:	mov	x2, x3
  409fd8:	mov	x3, x8
  409fdc:	b	40a398 <color_fprintf@@Base>
  409fe0:	ret
  409fe4:	and	w1, w4, #0x1
  409fe8:	mov	x0, x8
  409fec:	b	40acb0 <jsonw_bool@@Base>

0000000000409ff0 <print_color_0xhex@@Base>:
  409ff0:	sub	sp, sp, #0x60
  409ff4:	stp	x29, x30, [sp, #64]
  409ff8:	stp	x20, x19, [sp, #80]
  409ffc:	adrp	x20, 423000 <stderr@@GLIBC_2.17+0x3d40>
  40a000:	ldr	x8, [x20, #3336]
  40a004:	tst	w0, #0x6
  40a008:	add	x29, sp, #0x40
  40a00c:	b.eq	40a058 <print_color_0xhex@@Base+0x68>  // b.none
  40a010:	cbz	x8, 40a058 <print_color_0xhex@@Base+0x68>
  40a014:	mov	x19, x2
  40a018:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x640>
  40a01c:	add	x2, x2, #0x150
  40a020:	mov	x0, sp
  40a024:	mov	w1, #0x40                  	// #64
  40a028:	mov	x3, x4
  40a02c:	bl	404c70 <snprintf@plt>
  40a030:	ldr	x0, [x20, #3336]
  40a034:	cbz	x0, 40a048 <print_color_0xhex@@Base+0x58>
  40a038:	cbz	x19, 40a08c <print_color_0xhex@@Base+0x9c>
  40a03c:	mov	x2, sp
  40a040:	mov	x1, x19
  40a044:	bl	40ad7c <jsonw_string_field@@Base>
  40a048:	ldp	x20, x19, [sp, #80]
  40a04c:	ldp	x29, x30, [sp, #64]
  40a050:	add	sp, sp, #0x60
  40a054:	ret
  40a058:	mov	w9, #0x5                   	// #5
  40a05c:	tst	w0, w9
  40a060:	b.eq	40a048 <print_color_0xhex@@Base+0x58>  // b.none
  40a064:	cbnz	x8, 40a048 <print_color_0xhex@@Base+0x58>
  40a068:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  40a06c:	ldr	x8, [x8, #4016]
  40a070:	ldp	x20, x19, [sp, #80]
  40a074:	ldp	x29, x30, [sp, #64]
  40a078:	mov	x2, x3
  40a07c:	ldr	x0, [x8]
  40a080:	mov	x3, x4
  40a084:	add	sp, sp, #0x60
  40a088:	b	40a398 <color_fprintf@@Base>
  40a08c:	mov	x1, sp
  40a090:	bl	40ac70 <jsonw_string@@Base>
  40a094:	ldp	x20, x19, [sp, #80]
  40a098:	ldp	x29, x30, [sp, #64]
  40a09c:	add	sp, sp, #0x60
  40a0a0:	ret

000000000040a0a4 <print_color_hex@@Base>:
  40a0a4:	sub	sp, sp, #0x60
  40a0a8:	stp	x29, x30, [sp, #64]
  40a0ac:	stp	x20, x19, [sp, #80]
  40a0b0:	adrp	x20, 423000 <stderr@@GLIBC_2.17+0x3d40>
  40a0b4:	ldr	x8, [x20, #3336]
  40a0b8:	tst	w0, #0x6
  40a0bc:	add	x29, sp, #0x40
  40a0c0:	b.eq	40a108 <print_color_hex@@Base+0x64>  // b.none
  40a0c4:	cbz	x8, 40a108 <print_color_hex@@Base+0x64>
  40a0c8:	mov	x19, x2
  40a0cc:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x640>
  40a0d0:	add	x2, x2, #0x134
  40a0d4:	mov	x0, sp
  40a0d8:	mov	w1, #0x40                  	// #64
  40a0dc:	mov	w3, w4
  40a0e0:	bl	404c70 <snprintf@plt>
  40a0e4:	ldr	x0, [x20, #3336]
  40a0e8:	cbz	x19, 40a13c <print_color_hex@@Base+0x98>
  40a0ec:	mov	x2, sp
  40a0f0:	mov	x1, x19
  40a0f4:	bl	40ad7c <jsonw_string_field@@Base>
  40a0f8:	ldp	x20, x19, [sp, #80]
  40a0fc:	ldp	x29, x30, [sp, #64]
  40a100:	add	sp, sp, #0x60
  40a104:	ret
  40a108:	mov	w9, #0x5                   	// #5
  40a10c:	tst	w0, w9
  40a110:	b.eq	40a0f8 <print_color_hex@@Base+0x54>  // b.none
  40a114:	cbnz	x8, 40a0f8 <print_color_hex@@Base+0x54>
  40a118:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  40a11c:	ldr	x8, [x8, #4016]
  40a120:	ldp	x20, x19, [sp, #80]
  40a124:	ldp	x29, x30, [sp, #64]
  40a128:	mov	x2, x3
  40a12c:	ldr	x0, [x8]
  40a130:	mov	w3, w4
  40a134:	add	sp, sp, #0x60
  40a138:	b	40a398 <color_fprintf@@Base>
  40a13c:	mov	x1, sp
  40a140:	bl	40ac70 <jsonw_string@@Base>
  40a144:	ldp	x20, x19, [sp, #80]
  40a148:	ldp	x29, x30, [sp, #64]
  40a14c:	add	sp, sp, #0x60
  40a150:	ret

000000000040a154 <print_color_null@@Base>:
  40a154:	adrp	x8, 423000 <stderr@@GLIBC_2.17+0x3d40>
  40a158:	ldr	x8, [x8, #3336]
  40a15c:	tst	w0, #0x6
  40a160:	b.eq	40a178 <print_color_null@@Base+0x24>  // b.none
  40a164:	cbz	x8, 40a17c <print_color_null@@Base+0x28>
  40a168:	mov	x0, x8
  40a16c:	cbz	x2, 40a1a4 <print_color_null@@Base+0x50>
  40a170:	mov	x1, x2
  40a174:	b	40b018 <jsonw_null_field@@Base>
  40a178:	cbnz	x8, 40a1a0 <print_color_null@@Base+0x4c>
  40a17c:	mov	w8, #0x5                   	// #5
  40a180:	tst	w0, w8
  40a184:	b.eq	40a1a0 <print_color_null@@Base+0x4c>  // b.none
  40a188:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  40a18c:	ldr	x8, [x8, #4016]
  40a190:	mov	x2, x3
  40a194:	mov	x3, x4
  40a198:	ldr	x0, [x8]
  40a19c:	b	40a398 <color_fprintf@@Base>
  40a1a0:	ret
  40a1a4:	b	40acd4 <jsonw_null@@Base>

000000000040a1a8 <print_nl@@Base>:
  40a1a8:	adrp	x8, 423000 <stderr@@GLIBC_2.17+0x3d40>
  40a1ac:	ldr	x8, [x8, #3336]
  40a1b0:	cbz	x8, 40a1b8 <print_nl@@Base+0x10>
  40a1b4:	ret
  40a1b8:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  40a1bc:	ldr	x8, [x8, #4048]
  40a1c0:	adrp	x0, 40d000 <addraw_l@@Base+0xac>
  40a1c4:	add	x0, x0, #0xd4e
  40a1c8:	ldr	x1, [x8]
  40a1cc:	b	404ff0 <printf@plt>

000000000040a1d0 <check_enable_color@@Base>:
  40a1d0:	stp	x29, x30, [sp, #-32]!
  40a1d4:	str	x19, [sp, #16]
  40a1d8:	mov	w19, wzr
  40a1dc:	mov	x29, sp
  40a1e0:	cbz	w0, 40a24c <check_enable_color@@Base+0x7c>
  40a1e4:	cbnz	w1, 40a24c <check_enable_color@@Base+0x7c>
  40a1e8:	cmp	w0, #0x2
  40a1ec:	b.eq	40a208 <check_enable_color@@Base+0x38>  // b.none
  40a1f0:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  40a1f4:	ldr	x8, [x8, #4016]
  40a1f8:	ldr	x0, [x8]
  40a1fc:	bl	404c80 <fileno@plt>
  40a200:	bl	404f40 <isatty@plt>
  40a204:	cbz	w0, 40a25c <check_enable_color@@Base+0x8c>
  40a208:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x640>
  40a20c:	adrp	x8, 423000 <stderr@@GLIBC_2.17+0x3d40>
  40a210:	mov	w19, #0x1                   	// #1
  40a214:	add	x0, x0, #0x17b
  40a218:	strb	w19, [x8, #3344]
  40a21c:	bl	405020 <getenv@plt>
  40a220:	cbz	x0, 40a24c <check_enable_color@@Base+0x7c>
  40a224:	mov	w1, #0x3b                  	// #59
  40a228:	bl	404dd0 <strrchr@plt>
  40a22c:	cbz	x0, 40a290 <check_enable_color@@Base+0xc0>
  40a230:	ldrb	w8, [x0, #1]
  40a234:	sub	w9, w8, #0x30
  40a238:	cmp	w9, #0x7
  40a23c:	b.cs	40a288 <check_enable_color@@Base+0xb8>  // b.hs, b.nlast
  40a240:	ldrb	w8, [x0, #2]
  40a244:	mov	w19, #0x1                   	// #1
  40a248:	cbz	w8, 40a270 <check_enable_color@@Base+0xa0>
  40a24c:	mov	w0, w19
  40a250:	ldr	x19, [sp, #16]
  40a254:	ldp	x29, x30, [sp], #32
  40a258:	ret
  40a25c:	mov	w19, wzr
  40a260:	mov	w0, w19
  40a264:	ldr	x19, [sp, #16]
  40a268:	ldp	x29, x30, [sp], #32
  40a26c:	ret
  40a270:	adrp	x8, 423000 <stderr@@GLIBC_2.17+0x3d40>
  40a274:	strb	w19, [x8, #3348]
  40a278:	mov	w0, w19
  40a27c:	ldr	x19, [sp, #16]
  40a280:	ldp	x29, x30, [sp], #32
  40a284:	ret
  40a288:	cmp	w8, #0x38
  40a28c:	b.eq	40a240 <check_enable_color@@Base+0x70>  // b.none
  40a290:	mov	w19, #0x1                   	// #1
  40a294:	mov	w0, w19
  40a298:	ldr	x19, [sp, #16]
  40a29c:	ldp	x29, x30, [sp], #32
  40a2a0:	ret

000000000040a2a4 <matches_color@@Base>:
  40a2a4:	stp	x29, x30, [sp, #-48]!
  40a2a8:	str	x21, [sp, #16]
  40a2ac:	stp	x20, x19, [sp, #32]
  40a2b0:	mov	x29, sp
  40a2b4:	cbz	x1, 40a318 <matches_color@@Base+0x74>
  40a2b8:	mov	x19, x1
  40a2bc:	mov	x20, x0
  40a2c0:	bl	404b90 <strlen@plt>
  40a2c4:	add	x9, x0, #0x10
  40a2c8:	mov	x8, sp
  40a2cc:	and	x9, x9, #0xfffffffffffffff0
  40a2d0:	sub	x21, x8, x9
  40a2d4:	add	x2, x0, #0x1
  40a2d8:	mov	sp, x21
  40a2dc:	mov	x0, x21
  40a2e0:	mov	x1, x20
  40a2e4:	bl	404b60 <memcpy@plt>
  40a2e8:	mov	w1, #0x3d                  	// #61
  40a2ec:	mov	x0, x21
  40a2f0:	bl	404f90 <strchrnul@plt>
  40a2f4:	ldrb	w8, [x0]
  40a2f8:	mov	x20, x0
  40a2fc:	cbz	w8, 40a304 <matches_color@@Base+0x60>
  40a300:	strb	wzr, [x20], #1
  40a304:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40a308:	add	x1, x1, #0x162
  40a30c:	mov	x0, x21
  40a310:	bl	406f90 <matches@@Base>
  40a314:	tbz	w0, #0, 40a320 <matches_color@@Base+0x7c>
  40a318:	mov	w0, wzr
  40a31c:	b	40a378 <matches_color@@Base+0xd4>
  40a320:	ldrb	w8, [x20]
  40a324:	cbz	w8, 40a36c <matches_color@@Base+0xc8>
  40a328:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40a32c:	add	x1, x1, #0x169
  40a330:	mov	x0, x20
  40a334:	bl	404e20 <strcmp@plt>
  40a338:	cbz	w0, 40a36c <matches_color@@Base+0xc8>
  40a33c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40a340:	add	x1, x1, #0x170
  40a344:	mov	x0, x20
  40a348:	bl	404e20 <strcmp@plt>
  40a34c:	cbz	w0, 40a38c <matches_color@@Base+0xe8>
  40a350:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40a354:	add	x1, x1, #0x175
  40a358:	mov	x0, x20
  40a35c:	bl	404e20 <strcmp@plt>
  40a360:	cbnz	w0, 40a318 <matches_color@@Base+0x74>
  40a364:	str	wzr, [x19]
  40a368:	b	40a374 <matches_color@@Base+0xd0>
  40a36c:	mov	w8, #0x2                   	// #2
  40a370:	str	w8, [x19]
  40a374:	mov	w0, #0x1                   	// #1
  40a378:	mov	sp, x29
  40a37c:	ldp	x20, x19, [sp, #32]
  40a380:	ldr	x21, [sp, #16]
  40a384:	ldp	x29, x30, [sp], #48
  40a388:	ret
  40a38c:	mov	w0, #0x1                   	// #1
  40a390:	str	w0, [x19]
  40a394:	b	40a378 <matches_color@@Base+0xd4>

000000000040a398 <color_fprintf@@Base>:
  40a398:	sub	sp, sp, #0x130
  40a39c:	stp	x29, x30, [sp, #240]
  40a3a0:	add	x29, sp, #0xf0
  40a3a4:	mov	x8, #0xffffffffffffffd8    	// #-40
  40a3a8:	mov	x9, sp
  40a3ac:	sub	x10, x29, #0x68
  40a3b0:	stp	x20, x19, [sp, #288]
  40a3b4:	mov	x20, x2
  40a3b8:	mov	x19, x0
  40a3bc:	movk	x8, #0xff80, lsl #32
  40a3c0:	add	x11, x29, #0x40
  40a3c4:	cmp	w1, #0x6
  40a3c8:	add	x9, x9, #0x80
  40a3cc:	add	x10, x10, #0x28
  40a3d0:	str	x28, [sp, #256]
  40a3d4:	stp	x22, x21, [sp, #272]
  40a3d8:	stp	x3, x4, [x29, #-104]
  40a3dc:	stp	x5, x6, [x29, #-88]
  40a3e0:	stur	x7, [x29, #-72]
  40a3e4:	stp	q1, q2, [sp, #16]
  40a3e8:	stp	q3, q4, [sp, #48]
  40a3ec:	str	q0, [sp]
  40a3f0:	stp	q5, q6, [sp, #80]
  40a3f4:	str	q7, [sp, #112]
  40a3f8:	stp	x9, x8, [x29, #-16]
  40a3fc:	stp	x11, x10, [x29, #-32]
  40a400:	b.eq	40a490 <color_fprintf@@Base+0xf8>  // b.none
  40a404:	adrp	x8, 423000 <stderr@@GLIBC_2.17+0x3d40>
  40a408:	ldrb	w8, [x8, #3344]
  40a40c:	cbz	w8, 40a490 <color_fprintf@@Base+0xf8>
  40a410:	adrp	x8, 423000 <stderr@@GLIBC_2.17+0x3d40>
  40a414:	ldrb	w8, [x8, #3348]
  40a418:	adrp	x9, 40e000 <_IO_stdin_used@@Base+0x640>
  40a41c:	adrp	x10, 40e000 <_IO_stdin_used@@Base+0x640>
  40a420:	add	x9, x9, #0x208
  40a424:	add	x10, x10, #0x1ec
  40a428:	cmp	w8, #0x0
  40a42c:	csel	x8, x10, x9, ne  // ne = any
  40a430:	ldr	w8, [x8, w1, uxtw #2]
  40a434:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x10640>
  40a438:	add	x9, x9, #0xd10
  40a43c:	adrp	x21, 40d000 <addraw_l@@Base+0xac>
  40a440:	ldr	x2, [x9, x8, lsl #3]
  40a444:	add	x21, x21, #0xd4e
  40a448:	mov	x0, x19
  40a44c:	mov	x1, x21
  40a450:	bl	405060 <fprintf@plt>
  40a454:	ldp	q0, q1, [x29, #-32]
  40a458:	mov	w22, w0
  40a45c:	sub	x2, x29, #0x40
  40a460:	mov	x0, x19
  40a464:	mov	x1, x20
  40a468:	stp	q0, q1, [x29, #-64]
  40a46c:	bl	404fe0 <vfprintf@plt>
  40a470:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x640>
  40a474:	add	w20, w0, w22
  40a478:	add	x2, x2, #0x1e7
  40a47c:	mov	x0, x19
  40a480:	mov	x1, x21
  40a484:	bl	405060 <fprintf@plt>
  40a488:	add	w0, w20, w0
  40a48c:	b	40a4a8 <color_fprintf@@Base+0x110>
  40a490:	ldp	q0, q1, [x29, #-32]
  40a494:	sub	x2, x29, #0x40
  40a498:	mov	x0, x19
  40a49c:	mov	x1, x20
  40a4a0:	stp	q0, q1, [x29, #-64]
  40a4a4:	bl	404fe0 <vfprintf@plt>
  40a4a8:	ldp	x20, x19, [sp, #288]
  40a4ac:	ldp	x22, x21, [sp, #272]
  40a4b0:	ldr	x28, [sp, #256]
  40a4b4:	ldp	x29, x30, [sp, #240]
  40a4b8:	add	sp, sp, #0x130
  40a4bc:	ret

000000000040a4c0 <ifa_family_color@@Base>:
  40a4c0:	and	w8, w0, #0xff
  40a4c4:	mov	w9, #0x6                   	// #6
  40a4c8:	mov	w10, #0x3                   	// #3
  40a4cc:	cmp	w8, #0xa
  40a4d0:	csel	w9, w10, w9, eq  // eq = none
  40a4d4:	cmp	w8, #0x2
  40a4d8:	csel	w0, w8, w9, eq  // eq = none
  40a4dc:	ret

000000000040a4e0 <oper_state_color@@Base>:
  40a4e0:	and	w8, w0, #0xff
  40a4e4:	mov	w9, #0x5                   	// #5
  40a4e8:	cmp	w8, #0x2
  40a4ec:	cinc	w9, w9, ne  // ne = any
  40a4f0:	cmp	w8, #0x6
  40a4f4:	mov	w8, #0x4                   	// #4
  40a4f8:	csel	w0, w8, w9, eq  // eq = none
  40a4fc:	ret

000000000040a500 <mpls_ntop@@Base>:
  40a500:	stp	x29, x30, [sp, #-80]!
  40a504:	stp	x26, x25, [sp, #16]
  40a508:	stp	x24, x23, [sp, #32]
  40a50c:	stp	x22, x21, [sp, #48]
  40a510:	stp	x20, x19, [sp, #64]
  40a514:	mov	x29, sp
  40a518:	mov	x21, x3
  40a51c:	mov	x19, x2
  40a520:	mov	x22, x1
  40a524:	mov	w20, w0
  40a528:	bl	405010 <__errno_location@plt>
  40a52c:	cmp	w20, #0x1c
  40a530:	mov	x20, x0
  40a534:	b.ne	40a5c8 <mpls_ntop@@Base+0xc8>  // b.any
  40a538:	str	wzr, [x20]
  40a53c:	ldr	w8, [x22]
  40a540:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x640>
  40a544:	add	x2, x2, #0x13b
  40a548:	mov	x0, x19
  40a54c:	rev	w26, w8
  40a550:	lsr	w3, w26, #12
  40a554:	mov	x1, x21
  40a558:	bl	404c70 <snprintf@plt>
  40a55c:	sxtw	x8, w0
  40a560:	cmp	x8, x21
  40a564:	b.cs	40a5d0 <mpls_ntop@@Base+0xd0>  // b.hs, b.nlast
  40a568:	add	x24, x22, #0x4
  40a56c:	adrp	x22, 40e000 <_IO_stdin_used@@Base+0x640>
  40a570:	add	x22, x22, #0x13b
  40a574:	mov	w25, #0x2f                  	// #47
  40a578:	mov	x23, x19
  40a57c:	b	40a5ac <mpls_ntop@@Base+0xac>
  40a580:	mov	x21, xzr
  40a584:	ldr	w8, [x24], #4
  40a588:	mov	x0, x23
  40a58c:	mov	x1, x21
  40a590:	mov	x2, x22
  40a594:	rev	w26, w8
  40a598:	lsr	w3, w26, #12
  40a59c:	bl	404c70 <snprintf@plt>
  40a5a0:	sxtw	x8, w0
  40a5a4:	cmp	x21, x8
  40a5a8:	b.ls	40a5d0 <mpls_ntop@@Base+0xd0>  // b.plast
  40a5ac:	tbnz	w26, #8, 40a5dc <mpls_ntop@@Base+0xdc>
  40a5b0:	subs	x9, x21, x8
  40a5b4:	add	x23, x23, x8
  40a5b8:	b.eq	40a580 <mpls_ntop@@Base+0x80>  // b.none
  40a5bc:	strb	w25, [x23], #1
  40a5c0:	sub	x21, x9, #0x1
  40a5c4:	b	40a584 <mpls_ntop@@Base+0x84>
  40a5c8:	mov	w8, #0x61                  	// #97
  40a5cc:	b	40a5d4 <mpls_ntop@@Base+0xd4>
  40a5d0:	mov	w8, #0xfffffff9            	// #-7
  40a5d4:	mov	x19, xzr
  40a5d8:	str	w8, [x20]
  40a5dc:	mov	x0, x19
  40a5e0:	ldp	x20, x19, [sp, #64]
  40a5e4:	ldp	x22, x21, [sp, #48]
  40a5e8:	ldp	x24, x23, [sp, #32]
  40a5ec:	ldp	x26, x25, [sp, #16]
  40a5f0:	ldp	x29, x30, [sp], #80
  40a5f4:	ret

000000000040a5f8 <mpls_pton@@Base>:
  40a5f8:	sub	sp, sp, #0x40
  40a5fc:	stp	x29, x30, [sp, #16]
  40a600:	stp	x22, x21, [sp, #32]
  40a604:	stp	x20, x19, [sp, #48]
  40a608:	add	x29, sp, #0x10
  40a60c:	mov	x21, x3
  40a610:	mov	x19, x2
  40a614:	mov	x20, x1
  40a618:	mov	w22, w0
  40a61c:	bl	405010 <__errno_location@plt>
  40a620:	cmp	w22, #0x1c
  40a624:	b.ne	40a6b0 <mpls_pton@@Base+0xb8>  // b.any
  40a628:	lsr	x21, x21, #2
  40a62c:	str	wzr, [x0]
  40a630:	cbz	w21, 40a688 <mpls_pton@@Base+0x90>
  40a634:	add	x1, sp, #0x8
  40a638:	mov	x0, x20
  40a63c:	mov	w2, wzr
  40a640:	bl	404b80 <strtoul@plt>
  40a644:	mov	x8, x0
  40a648:	lsr	x9, x0, #20
  40a64c:	mov	w0, wzr
  40a650:	cbnz	x9, 40a6bc <mpls_pton@@Base+0xc4>
  40a654:	ldr	x9, [sp, #8]
  40a658:	cmp	x9, x20
  40a65c:	b.eq	40a6bc <mpls_pton@@Base+0xc4>  // b.none
  40a660:	lsl	w8, w8, #12
  40a664:	rev	w8, w8
  40a668:	str	w8, [x19]
  40a66c:	ldrb	w10, [x9]
  40a670:	cmp	w10, #0x2f
  40a674:	b.ne	40a6d0 <mpls_pton@@Base+0xd8>  // b.any
  40a678:	add	x20, x9, #0x1
  40a67c:	subs	w21, w21, #0x1
  40a680:	add	x19, x19, #0x4
  40a684:	b.ne	40a634 <mpls_pton@@Base+0x3c>  // b.any
  40a688:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  40a68c:	ldr	x8, [x8, #3992]
  40a690:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x640>
  40a694:	add	x0, x0, #0x224
  40a698:	mov	w1, #0x18                  	// #24
  40a69c:	ldr	x3, [x8]
  40a6a0:	mov	w2, #0x1                   	// #1
  40a6a4:	bl	404ee0 <fwrite@plt>
  40a6a8:	mov	w0, wzr
  40a6ac:	b	40a6bc <mpls_pton@@Base+0xc4>
  40a6b0:	mov	w8, #0x61                  	// #97
  40a6b4:	str	w8, [x0]
  40a6b8:	mov	w0, #0xffffffff            	// #-1
  40a6bc:	ldp	x20, x19, [sp, #48]
  40a6c0:	ldp	x22, x21, [sp, #32]
  40a6c4:	ldp	x29, x30, [sp, #16]
  40a6c8:	add	sp, sp, #0x40
  40a6cc:	ret
  40a6d0:	cbnz	w10, 40a6a8 <mpls_pton@@Base+0xb0>
  40a6d4:	orr	w8, w8, #0x10000
  40a6d8:	str	w8, [x19]
  40a6dc:	mov	w0, #0x1                   	// #1
  40a6e0:	b	40a6bc <mpls_pton@@Base+0xc4>

000000000040a6e4 <jsonw_new@@Base>:
  40a6e4:	stp	x29, x30, [sp, #-32]!
  40a6e8:	str	x19, [sp, #16]
  40a6ec:	mov	x19, x0
  40a6f0:	mov	w0, #0x10                  	// #16
  40a6f4:	mov	x29, sp
  40a6f8:	bl	404cc0 <malloc@plt>
  40a6fc:	cbz	x0, 40a70c <jsonw_new@@Base+0x28>
  40a700:	str	x19, [x0]
  40a704:	str	wzr, [x0, #8]
  40a708:	strh	wzr, [x0, #12]
  40a70c:	ldr	x19, [sp, #16]
  40a710:	ldp	x29, x30, [sp], #32
  40a714:	ret

000000000040a718 <jsonw_destroy@@Base>:
  40a718:	stp	x29, x30, [sp, #-32]!
  40a71c:	stp	x20, x19, [sp, #16]
  40a720:	ldr	x20, [x0]
  40a724:	mov	x29, sp
  40a728:	ldr	w8, [x20, #8]
  40a72c:	cbnz	w8, 40a760 <jsonw_destroy@@Base+0x48>
  40a730:	ldr	x1, [x20]
  40a734:	mov	x19, x0
  40a738:	mov	w0, #0xa                   	// #10
  40a73c:	bl	404c60 <fputc@plt>
  40a740:	ldr	x0, [x20]
  40a744:	bl	404f00 <fflush@plt>
  40a748:	mov	x0, x20
  40a74c:	bl	404e80 <free@plt>
  40a750:	str	xzr, [x19]
  40a754:	ldp	x20, x19, [sp, #16]
  40a758:	ldp	x29, x30, [sp], #32
  40a75c:	ret
  40a760:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x640>
  40a764:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40a768:	adrp	x3, 40e000 <_IO_stdin_used@@Base+0x640>
  40a76c:	add	x0, x0, #0x265
  40a770:	add	x1, x1, #0x276
  40a774:	add	x3, x3, #0x284
  40a778:	mov	w2, #0x6e                  	// #110
  40a77c:	bl	405000 <__assert_fail@plt>

000000000040a780 <jsonw_pretty@@Base>:
  40a780:	and	w8, w1, #0x1
  40a784:	strb	w8, [x0, #12]
  40a788:	ret

000000000040a78c <jsonw_name@@Base>:
  40a78c:	stp	x29, x30, [sp, #-48]!
  40a790:	stp	x22, x21, [sp, #16]
  40a794:	stp	x20, x19, [sp, #32]
  40a798:	mov	x19, x0
  40a79c:	ldrb	w0, [x0, #13]
  40a7a0:	mov	x20, x1
  40a7a4:	mov	x29, sp
  40a7a8:	cbz	w0, 40a7b4 <jsonw_name@@Base+0x28>
  40a7ac:	ldr	x1, [x19]
  40a7b0:	bl	404c40 <putc@plt>
  40a7b4:	ldrb	w8, [x19, #12]
  40a7b8:	mov	w9, #0x2c                  	// #44
  40a7bc:	strb	w9, [x19, #13]
  40a7c0:	cbz	w8, 40a808 <jsonw_name@@Base+0x7c>
  40a7c4:	ldr	x1, [x19]
  40a7c8:	mov	w0, #0xa                   	// #10
  40a7cc:	bl	404c40 <putc@plt>
  40a7d0:	ldr	w8, [x19, #8]
  40a7d4:	cbz	w8, 40a808 <jsonw_name@@Base+0x7c>
  40a7d8:	adrp	x21, 40e000 <_IO_stdin_used@@Base+0x640>
  40a7dc:	mov	w22, wzr
  40a7e0:	add	x21, x21, #0x2cb
  40a7e4:	ldr	x3, [x19]
  40a7e8:	mov	w1, #0x4                   	// #4
  40a7ec:	mov	w2, #0x1                   	// #1
  40a7f0:	mov	x0, x21
  40a7f4:	bl	404ee0 <fwrite@plt>
  40a7f8:	ldr	w8, [x19, #8]
  40a7fc:	add	w22, w22, #0x1
  40a800:	cmp	w22, w8
  40a804:	b.cc	40a7e4 <jsonw_name@@Base+0x58>  // b.lo, b.ul, b.last
  40a808:	mov	x0, x19
  40a80c:	mov	x1, x20
  40a810:	strb	wzr, [x19, #13]
  40a814:	bl	40a854 <jsonw_name@@Base+0xc8>
  40a818:	ldr	x1, [x19]
  40a81c:	mov	w0, #0x3a                  	// #58
  40a820:	bl	404c40 <putc@plt>
  40a824:	ldrb	w8, [x19, #12]
  40a828:	cbz	w8, 40a844 <jsonw_name@@Base+0xb8>
  40a82c:	ldr	x1, [x19]
  40a830:	ldp	x20, x19, [sp, #32]
  40a834:	ldp	x22, x21, [sp, #16]
  40a838:	mov	w0, #0x20                  	// #32
  40a83c:	ldp	x29, x30, [sp], #48
  40a840:	b	404c40 <putc@plt>
  40a844:	ldp	x20, x19, [sp, #32]
  40a848:	ldp	x22, x21, [sp, #16]
  40a84c:	ldp	x29, x30, [sp], #48
  40a850:	ret
  40a854:	stp	x29, x30, [sp, #-96]!
  40a858:	stp	x28, x27, [sp, #16]
  40a85c:	stp	x26, x25, [sp, #32]
  40a860:	stp	x24, x23, [sp, #48]
  40a864:	stp	x22, x21, [sp, #64]
  40a868:	stp	x20, x19, [sp, #80]
  40a86c:	ldr	x8, [x0]
  40a870:	mov	x19, x0
  40a874:	mov	x20, x1
  40a878:	mov	w0, #0x22                  	// #34
  40a87c:	mov	x1, x8
  40a880:	mov	x29, sp
  40a884:	bl	404c40 <putc@plt>
  40a888:	adrp	x21, 40e000 <_IO_stdin_used@@Base+0x640>
  40a88c:	adrp	x22, 40e000 <_IO_stdin_used@@Base+0x640>
  40a890:	adrp	x23, 40e000 <_IO_stdin_used@@Base+0x640>
  40a894:	adrp	x24, 40e000 <_IO_stdin_used@@Base+0x640>
  40a898:	adrp	x25, 40e000 <_IO_stdin_used@@Base+0x640>
  40a89c:	adrp	x26, 40e000 <_IO_stdin_used@@Base+0x640>
  40a8a0:	adrp	x27, 40e000 <_IO_stdin_used@@Base+0x640>
  40a8a4:	adrp	x28, 40e000 <_IO_stdin_used@@Base+0x640>
  40a8a8:	add	x21, x21, #0x23d
  40a8ac:	add	x22, x22, #0x2dc
  40a8b0:	add	x23, x23, #0x2d0
  40a8b4:	add	x24, x24, #0x2d3
  40a8b8:	add	x25, x25, #0x2d9
  40a8bc:	add	x26, x26, #0x2d6
  40a8c0:	add	x27, x27, #0x2e2
  40a8c4:	add	x28, x28, #0x2e5
  40a8c8:	b	40a8d8 <jsonw_name@@Base+0x14c>
  40a8cc:	ldr	x1, [x19]
  40a8d0:	bl	404c40 <putc@plt>
  40a8d4:	add	x20, x20, #0x1
  40a8d8:	ldrb	w0, [x20]
  40a8dc:	cmp	w0, #0x27
  40a8e0:	b.hi	40a910 <jsonw_name@@Base+0x184>  // b.pmore
  40a8e4:	adr	x8, 40a8cc <jsonw_name@@Base+0x140>
  40a8e8:	ldrb	w9, [x21, x0]
  40a8ec:	add	x8, x8, x9, lsl #2
  40a8f0:	br	x8
  40a8f4:	ldr	x3, [x19]
  40a8f8:	mov	w1, #0x2                   	// #2
  40a8fc:	mov	w2, #0x1                   	// #1
  40a900:	mov	x0, x22
  40a904:	bl	404ee0 <fwrite@plt>
  40a908:	add	x20, x20, #0x1
  40a90c:	b	40a8d8 <jsonw_name@@Base+0x14c>
  40a910:	cmp	w0, #0x5c
  40a914:	b.ne	40a8cc <jsonw_name@@Base+0x140>  // b.any
  40a918:	ldr	x3, [x19]
  40a91c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x640>
  40a920:	mov	w1, #0x2                   	// #2
  40a924:	mov	w2, #0x1                   	// #1
  40a928:	add	x0, x0, #0x2df
  40a92c:	bl	404ee0 <fwrite@plt>
  40a930:	add	x20, x20, #0x1
  40a934:	b	40a8d8 <jsonw_name@@Base+0x14c>
  40a938:	ldr	x3, [x19]
  40a93c:	mov	w1, #0x2                   	// #2
  40a940:	mov	w2, #0x1                   	// #1
  40a944:	mov	x0, x23
  40a948:	bl	404ee0 <fwrite@plt>
  40a94c:	add	x20, x20, #0x1
  40a950:	b	40a8d8 <jsonw_name@@Base+0x14c>
  40a954:	ldr	x3, [x19]
  40a958:	mov	w1, #0x2                   	// #2
  40a95c:	mov	w2, #0x1                   	// #1
  40a960:	mov	x0, x24
  40a964:	bl	404ee0 <fwrite@plt>
  40a968:	add	x20, x20, #0x1
  40a96c:	b	40a8d8 <jsonw_name@@Base+0x14c>
  40a970:	ldr	x3, [x19]
  40a974:	mov	w1, #0x2                   	// #2
  40a978:	mov	w2, #0x1                   	// #1
  40a97c:	mov	x0, x25
  40a980:	bl	404ee0 <fwrite@plt>
  40a984:	add	x20, x20, #0x1
  40a988:	b	40a8d8 <jsonw_name@@Base+0x14c>
  40a98c:	ldr	x3, [x19]
  40a990:	mov	w1, #0x2                   	// #2
  40a994:	mov	w2, #0x1                   	// #1
  40a998:	mov	x0, x26
  40a99c:	bl	404ee0 <fwrite@plt>
  40a9a0:	add	x20, x20, #0x1
  40a9a4:	b	40a8d8 <jsonw_name@@Base+0x14c>
  40a9a8:	ldr	x3, [x19]
  40a9ac:	mov	w1, #0x2                   	// #2
  40a9b0:	mov	w2, #0x1                   	// #1
  40a9b4:	mov	x0, x27
  40a9b8:	bl	404ee0 <fwrite@plt>
  40a9bc:	add	x20, x20, #0x1
  40a9c0:	b	40a8d8 <jsonw_name@@Base+0x14c>
  40a9c4:	ldr	x3, [x19]
  40a9c8:	mov	w1, #0x2                   	// #2
  40a9cc:	mov	w2, #0x1                   	// #1
  40a9d0:	mov	x0, x28
  40a9d4:	bl	404ee0 <fwrite@plt>
  40a9d8:	add	x20, x20, #0x1
  40a9dc:	b	40a8d8 <jsonw_name@@Base+0x14c>
  40a9e0:	ldr	x1, [x19]
  40a9e4:	ldp	x20, x19, [sp, #80]
  40a9e8:	ldp	x22, x21, [sp, #64]
  40a9ec:	ldp	x24, x23, [sp, #48]
  40a9f0:	ldp	x26, x25, [sp, #32]
  40a9f4:	ldp	x28, x27, [sp, #16]
  40a9f8:	mov	w0, #0x22                  	// #34
  40a9fc:	ldp	x29, x30, [sp], #96
  40aa00:	b	404c40 <putc@plt>

000000000040aa04 <jsonw_printf@@Base>:
  40aa04:	sub	sp, sp, #0x120
  40aa08:	stp	x29, x30, [sp, #240]
  40aa0c:	add	x29, sp, #0xf0
  40aa10:	mov	x8, #0xffffffffffffffd0    	// #-48
  40aa14:	mov	x9, sp
  40aa18:	sub	x10, x29, #0x70
  40aa1c:	movk	x8, #0xff80, lsl #32
  40aa20:	add	x11, x29, #0x30
  40aa24:	add	x9, x9, #0x80
  40aa28:	add	x10, x10, #0x30
  40aa2c:	stp	x20, x19, [sp, #272]
  40aa30:	stp	x2, x3, [x29, #-112]
  40aa34:	stp	x4, x5, [x29, #-96]
  40aa38:	stp	x6, x7, [x29, #-80]
  40aa3c:	stp	q1, q2, [sp, #16]
  40aa40:	stp	q3, q4, [sp, #48]
  40aa44:	str	q0, [sp]
  40aa48:	stp	q5, q6, [sp, #80]
  40aa4c:	str	q7, [sp, #112]
  40aa50:	stp	x9, x8, [x29, #-16]
  40aa54:	stp	x11, x10, [x29, #-32]
  40aa58:	mov	x19, x0
  40aa5c:	ldrb	w0, [x0, #13]
  40aa60:	mov	x20, x1
  40aa64:	str	x28, [sp, #256]
  40aa68:	cbz	w0, 40aa74 <jsonw_printf@@Base+0x70>
  40aa6c:	ldr	x1, [x19]
  40aa70:	bl	404c40 <putc@plt>
  40aa74:	mov	w8, #0x2c                  	// #44
  40aa78:	strb	w8, [x19, #13]
  40aa7c:	ldp	q0, q1, [x29, #-32]
  40aa80:	ldr	x0, [x19]
  40aa84:	sub	x2, x29, #0x40
  40aa88:	mov	x1, x20
  40aa8c:	stp	q0, q1, [x29, #-64]
  40aa90:	bl	404fe0 <vfprintf@plt>
  40aa94:	ldp	x20, x19, [sp, #272]
  40aa98:	ldr	x28, [sp, #256]
  40aa9c:	ldp	x29, x30, [sp, #240]
  40aaa0:	add	sp, sp, #0x120
  40aaa4:	ret

000000000040aaa8 <jsonw_start_object@@Base>:
  40aaa8:	stp	x29, x30, [sp, #-32]!
  40aaac:	str	x19, [sp, #16]
  40aab0:	mov	x19, x0
  40aab4:	ldrb	w0, [x0, #13]
  40aab8:	mov	x29, sp
  40aabc:	cbz	w0, 40aac8 <jsonw_start_object@@Base+0x20>
  40aac0:	ldr	x1, [x19]
  40aac4:	bl	404c40 <putc@plt>
  40aac8:	ldr	x1, [x19]
  40aacc:	mov	w8, #0x2c                  	// #44
  40aad0:	mov	w0, #0x7b                  	// #123
  40aad4:	strb	w8, [x19, #13]
  40aad8:	bl	404c40 <putc@plt>
  40aadc:	ldr	w8, [x19, #8]
  40aae0:	strb	wzr, [x19, #13]
  40aae4:	add	w8, w8, #0x1
  40aae8:	str	w8, [x19, #8]
  40aaec:	ldr	x19, [sp, #16]
  40aaf0:	ldp	x29, x30, [sp], #32
  40aaf4:	ret

000000000040aaf8 <jsonw_end_object@@Base>:
  40aaf8:	mov	w1, #0x7d                  	// #125
  40aafc:	b	40ab00 <jsonw_end_object@@Base+0x8>
  40ab00:	stp	x29, x30, [sp, #-48]!
  40ab04:	stp	x22, x21, [sp, #16]
  40ab08:	stp	x20, x19, [sp, #32]
  40ab0c:	ldr	w8, [x0, #8]
  40ab10:	mov	x29, sp
  40ab14:	cbz	w8, 40aba0 <jsonw_end_object@@Base+0xa8>
  40ab18:	ldrb	w9, [x0, #13]
  40ab1c:	mov	x19, x0
  40ab20:	mov	w20, w1
  40ab24:	sub	w8, w8, #0x1
  40ab28:	str	w8, [x0, #8]
  40ab2c:	cbz	w9, 40ab7c <jsonw_end_object@@Base+0x84>
  40ab30:	ldrb	w8, [x19, #12]
  40ab34:	cbz	w8, 40ab7c <jsonw_end_object@@Base+0x84>
  40ab38:	ldr	x1, [x19]
  40ab3c:	mov	w0, #0xa                   	// #10
  40ab40:	bl	404c40 <putc@plt>
  40ab44:	ldr	w8, [x19, #8]
  40ab48:	cbz	w8, 40ab7c <jsonw_end_object@@Base+0x84>
  40ab4c:	adrp	x21, 40e000 <_IO_stdin_used@@Base+0x640>
  40ab50:	mov	w22, wzr
  40ab54:	add	x21, x21, #0x2cb
  40ab58:	ldr	x3, [x19]
  40ab5c:	mov	w1, #0x4                   	// #4
  40ab60:	mov	w2, #0x1                   	// #1
  40ab64:	mov	x0, x21
  40ab68:	bl	404ee0 <fwrite@plt>
  40ab6c:	ldr	w8, [x19, #8]
  40ab70:	add	w22, w22, #0x1
  40ab74:	cmp	w22, w8
  40ab78:	b.cc	40ab58 <jsonw_end_object@@Base+0x60>  // b.lo, b.ul, b.last
  40ab7c:	ldr	x1, [x19]
  40ab80:	mov	w0, w20
  40ab84:	bl	404c40 <putc@plt>
  40ab88:	mov	w8, #0x2c                  	// #44
  40ab8c:	strb	w8, [x19, #13]
  40ab90:	ldp	x20, x19, [sp, #32]
  40ab94:	ldp	x22, x21, [sp, #16]
  40ab98:	ldp	x29, x30, [sp], #48
  40ab9c:	ret
  40aba0:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x640>
  40aba4:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40aba8:	adrp	x3, 40e000 <_IO_stdin_used@@Base+0x640>
  40abac:	add	x0, x0, #0x2e8
  40abb0:	add	x1, x1, #0x276
  40abb4:	add	x3, x3, #0x2f8
  40abb8:	mov	w2, #0x85                  	// #133
  40abbc:	bl	405000 <__assert_fail@plt>

000000000040abc0 <jsonw_start_array@@Base>:
  40abc0:	stp	x29, x30, [sp, #-32]!
  40abc4:	str	x19, [sp, #16]
  40abc8:	mov	x19, x0
  40abcc:	ldrb	w0, [x0, #13]
  40abd0:	mov	x29, sp
  40abd4:	cbz	w0, 40abe0 <jsonw_start_array@@Base+0x20>
  40abd8:	ldr	x1, [x19]
  40abdc:	bl	404c40 <putc@plt>
  40abe0:	ldr	x1, [x19]
  40abe4:	mov	w8, #0x2c                  	// #44
  40abe8:	mov	w0, #0x5b                  	// #91
  40abec:	strb	w8, [x19, #13]
  40abf0:	bl	404c40 <putc@plt>
  40abf4:	ldr	w8, [x19, #8]
  40abf8:	ldrb	w9, [x19, #12]
  40abfc:	strb	wzr, [x19, #13]
  40ac00:	add	w8, w8, #0x1
  40ac04:	str	w8, [x19, #8]
  40ac08:	cbz	w9, 40ac20 <jsonw_start_array@@Base+0x60>
  40ac0c:	ldr	x1, [x19]
  40ac10:	ldr	x19, [sp, #16]
  40ac14:	mov	w0, #0x20                  	// #32
  40ac18:	ldp	x29, x30, [sp], #32
  40ac1c:	b	404c40 <putc@plt>
  40ac20:	ldr	x19, [sp, #16]
  40ac24:	ldp	x29, x30, [sp], #32
  40ac28:	ret

000000000040ac2c <jsonw_end_array@@Base>:
  40ac2c:	stp	x29, x30, [sp, #-32]!
  40ac30:	ldrb	w8, [x0, #12]
  40ac34:	str	x19, [sp, #16]
  40ac38:	mov	x19, x0
  40ac3c:	mov	x29, sp
  40ac40:	cbz	w8, 40ac58 <jsonw_end_array@@Base+0x2c>
  40ac44:	ldrb	w8, [x19, #13]
  40ac48:	cbz	w8, 40ac58 <jsonw_end_array@@Base+0x2c>
  40ac4c:	ldr	x1, [x19]
  40ac50:	mov	w0, #0x20                  	// #32
  40ac54:	bl	404c40 <putc@plt>
  40ac58:	strb	wzr, [x19, #13]
  40ac5c:	mov	x0, x19
  40ac60:	ldr	x19, [sp, #16]
  40ac64:	mov	w1, #0x5d                  	// #93
  40ac68:	ldp	x29, x30, [sp], #32
  40ac6c:	b	40ab00 <jsonw_end_object@@Base+0x8>

000000000040ac70 <jsonw_string@@Base>:
  40ac70:	stp	x29, x30, [sp, #-32]!
  40ac74:	stp	x20, x19, [sp, #16]
  40ac78:	mov	x19, x0
  40ac7c:	ldrb	w0, [x0, #13]
  40ac80:	mov	x20, x1
  40ac84:	mov	x29, sp
  40ac88:	cbz	w0, 40ac94 <jsonw_string@@Base+0x24>
  40ac8c:	ldr	x1, [x19]
  40ac90:	bl	404c40 <putc@plt>
  40ac94:	mov	w8, #0x2c                  	// #44
  40ac98:	strb	w8, [x19, #13]
  40ac9c:	mov	x0, x19
  40aca0:	mov	x1, x20
  40aca4:	ldp	x20, x19, [sp, #16]
  40aca8:	ldp	x29, x30, [sp], #32
  40acac:	b	40a854 <jsonw_name@@Base+0xc8>

000000000040acb0 <jsonw_bool@@Base>:
  40acb0:	adrp	x8, 40e000 <_IO_stdin_used@@Base+0x640>
  40acb4:	adrp	x9, 40e000 <_IO_stdin_used@@Base+0x640>
  40acb8:	add	x8, x8, #0x14a
  40acbc:	add	x9, x9, #0x145
  40acc0:	tst	w1, #0x1
  40acc4:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  40acc8:	csel	x2, x9, x8, ne  // ne = any
  40accc:	add	x1, x1, #0xd4e
  40acd0:	b	40aa04 <jsonw_printf@@Base>

000000000040acd4 <jsonw_null@@Base>:
  40acd4:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40acd8:	add	x1, x1, #0x2a9
  40acdc:	b	40aa04 <jsonw_printf@@Base>

000000000040ace0 <jsonw_float@@Base>:
  40ace0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40ace4:	add	x1, x1, #0x2ae
  40ace8:	b	40aa04 <jsonw_printf@@Base>

000000000040acec <jsonw_hhu@@Base>:
  40acec:	and	w2, w1, #0xff
  40acf0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40acf4:	add	x1, x1, #0x2b1
  40acf8:	b	40aa04 <jsonw_printf@@Base>

000000000040acfc <jsonw_hu@@Base>:
  40acfc:	and	w2, w1, #0xffff
  40ad00:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40ad04:	add	x1, x1, #0x2b6
  40ad08:	b	40aa04 <jsonw_printf@@Base>

000000000040ad0c <jsonw_uint@@Base>:
  40ad0c:	mov	w2, w1
  40ad10:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40ad14:	add	x1, x1, #0x13b
  40ad18:	b	40aa04 <jsonw_printf@@Base>

000000000040ad1c <jsonw_u64@@Base>:
  40ad1c:	mov	x2, x1
  40ad20:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40ad24:	add	x1, x1, #0x2ba
  40ad28:	b	40aa04 <jsonw_printf@@Base>

000000000040ad2c <jsonw_xint@@Base>:
  40ad2c:	mov	x2, x1
  40ad30:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40ad34:	add	x1, x1, #0x2be
  40ad38:	b	40aa04 <jsonw_printf@@Base>

000000000040ad3c <jsonw_luint@@Base>:
  40ad3c:	mov	x2, x1
  40ad40:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40ad44:	add	x1, x1, #0x2ba
  40ad48:	b	40aa04 <jsonw_printf@@Base>

000000000040ad4c <jsonw_lluint@@Base>:
  40ad4c:	mov	x2, x1
  40ad50:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40ad54:	add	x1, x1, #0x2c2
  40ad58:	b	40aa04 <jsonw_printf@@Base>

000000000040ad5c <jsonw_int@@Base>:
  40ad5c:	mov	w2, w1
  40ad60:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40ad64:	add	x1, x1, #0xb2
  40ad68:	b	40aa04 <jsonw_printf@@Base>

000000000040ad6c <jsonw_s64@@Base>:
  40ad6c:	mov	x2, x1
  40ad70:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40ad74:	add	x1, x1, #0x2c7
  40ad78:	b	40aa04 <jsonw_printf@@Base>

000000000040ad7c <jsonw_string_field@@Base>:
  40ad7c:	stp	x29, x30, [sp, #-32]!
  40ad80:	stp	x20, x19, [sp, #16]
  40ad84:	mov	x29, sp
  40ad88:	mov	x19, x2
  40ad8c:	mov	x20, x0
  40ad90:	bl	40a78c <jsonw_name@@Base>
  40ad94:	ldrb	w0, [x20, #13]
  40ad98:	cbz	w0, 40ada4 <jsonw_string_field@@Base+0x28>
  40ad9c:	ldr	x1, [x20]
  40ada0:	bl	404c40 <putc@plt>
  40ada4:	mov	w8, #0x2c                  	// #44
  40ada8:	strb	w8, [x20, #13]
  40adac:	mov	x0, x20
  40adb0:	mov	x1, x19
  40adb4:	ldp	x20, x19, [sp, #16]
  40adb8:	ldp	x29, x30, [sp], #32
  40adbc:	b	40a854 <jsonw_name@@Base+0xc8>

000000000040adc0 <jsonw_bool_field@@Base>:
  40adc0:	stp	x29, x30, [sp, #-32]!
  40adc4:	stp	x20, x19, [sp, #16]
  40adc8:	mov	x29, sp
  40adcc:	mov	w19, w2
  40add0:	mov	x20, x0
  40add4:	bl	40a78c <jsonw_name@@Base>
  40add8:	tst	w19, #0x1
  40addc:	mov	x0, x20
  40ade0:	ldp	x20, x19, [sp, #16]
  40ade4:	adrp	x8, 40e000 <_IO_stdin_used@@Base+0x640>
  40ade8:	adrp	x9, 40e000 <_IO_stdin_used@@Base+0x640>
  40adec:	add	x8, x8, #0x14a
  40adf0:	add	x9, x9, #0x145
  40adf4:	adrp	x1, 40d000 <addraw_l@@Base+0xac>
  40adf8:	csel	x2, x9, x8, ne  // ne = any
  40adfc:	add	x1, x1, #0xd4e
  40ae00:	ldp	x29, x30, [sp], #32
  40ae04:	b	40aa04 <jsonw_printf@@Base>

000000000040ae08 <jsonw_float_field@@Base>:
  40ae08:	str	d8, [sp, #-32]!
  40ae0c:	stp	x29, x30, [sp, #8]
  40ae10:	str	x19, [sp, #24]
  40ae14:	mov	x29, sp
  40ae18:	mov	v8.16b, v0.16b
  40ae1c:	mov	x19, x0
  40ae20:	bl	40a78c <jsonw_name@@Base>
  40ae24:	mov	x0, x19
  40ae28:	ldr	x19, [sp, #24]
  40ae2c:	ldp	x29, x30, [sp, #8]
  40ae30:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40ae34:	add	x1, x1, #0x2ae
  40ae38:	mov	v0.16b, v8.16b
  40ae3c:	ldr	d8, [sp], #32
  40ae40:	b	40aa04 <jsonw_printf@@Base>

000000000040ae44 <jsonw_uint_field@@Base>:
  40ae44:	stp	x29, x30, [sp, #-32]!
  40ae48:	stp	x20, x19, [sp, #16]
  40ae4c:	mov	x29, sp
  40ae50:	mov	w19, w2
  40ae54:	mov	x20, x0
  40ae58:	bl	40a78c <jsonw_name@@Base>
  40ae5c:	mov	x0, x20
  40ae60:	mov	w2, w19
  40ae64:	ldp	x20, x19, [sp, #16]
  40ae68:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40ae6c:	add	x1, x1, #0x13b
  40ae70:	ldp	x29, x30, [sp], #32
  40ae74:	b	40aa04 <jsonw_printf@@Base>

000000000040ae78 <jsonw_u64_field@@Base>:
  40ae78:	stp	x29, x30, [sp, #-32]!
  40ae7c:	stp	x20, x19, [sp, #16]
  40ae80:	mov	x29, sp
  40ae84:	mov	x19, x2
  40ae88:	mov	x20, x0
  40ae8c:	bl	40a78c <jsonw_name@@Base>
  40ae90:	mov	x0, x20
  40ae94:	mov	x2, x19
  40ae98:	ldp	x20, x19, [sp, #16]
  40ae9c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40aea0:	add	x1, x1, #0x2ba
  40aea4:	ldp	x29, x30, [sp], #32
  40aea8:	b	40aa04 <jsonw_printf@@Base>

000000000040aeac <jsonw_xint_field@@Base>:
  40aeac:	stp	x29, x30, [sp, #-32]!
  40aeb0:	stp	x20, x19, [sp, #16]
  40aeb4:	mov	x29, sp
  40aeb8:	mov	x19, x2
  40aebc:	mov	x20, x0
  40aec0:	bl	40a78c <jsonw_name@@Base>
  40aec4:	mov	x0, x20
  40aec8:	mov	x2, x19
  40aecc:	ldp	x20, x19, [sp, #16]
  40aed0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40aed4:	add	x1, x1, #0x2be
  40aed8:	ldp	x29, x30, [sp], #32
  40aedc:	b	40aa04 <jsonw_printf@@Base>

000000000040aee0 <jsonw_hhu_field@@Base>:
  40aee0:	stp	x29, x30, [sp, #-32]!
  40aee4:	stp	x20, x19, [sp, #16]
  40aee8:	mov	x29, sp
  40aeec:	mov	w19, w2
  40aef0:	mov	x20, x0
  40aef4:	bl	40a78c <jsonw_name@@Base>
  40aef8:	and	w2, w19, #0xff
  40aefc:	mov	x0, x20
  40af00:	ldp	x20, x19, [sp, #16]
  40af04:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40af08:	add	x1, x1, #0x2b1
  40af0c:	ldp	x29, x30, [sp], #32
  40af10:	b	40aa04 <jsonw_printf@@Base>

000000000040af14 <jsonw_hu_field@@Base>:
  40af14:	stp	x29, x30, [sp, #-32]!
  40af18:	stp	x20, x19, [sp, #16]
  40af1c:	mov	x29, sp
  40af20:	mov	w19, w2
  40af24:	mov	x20, x0
  40af28:	bl	40a78c <jsonw_name@@Base>
  40af2c:	and	w2, w19, #0xffff
  40af30:	mov	x0, x20
  40af34:	ldp	x20, x19, [sp, #16]
  40af38:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40af3c:	add	x1, x1, #0x2b6
  40af40:	ldp	x29, x30, [sp], #32
  40af44:	b	40aa04 <jsonw_printf@@Base>

000000000040af48 <jsonw_luint_field@@Base>:
  40af48:	stp	x29, x30, [sp, #-32]!
  40af4c:	stp	x20, x19, [sp, #16]
  40af50:	mov	x29, sp
  40af54:	mov	x19, x2
  40af58:	mov	x20, x0
  40af5c:	bl	40a78c <jsonw_name@@Base>
  40af60:	mov	x0, x20
  40af64:	mov	x2, x19
  40af68:	ldp	x20, x19, [sp, #16]
  40af6c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40af70:	add	x1, x1, #0x2ba
  40af74:	ldp	x29, x30, [sp], #32
  40af78:	b	40aa04 <jsonw_printf@@Base>

000000000040af7c <jsonw_lluint_field@@Base>:
  40af7c:	stp	x29, x30, [sp, #-32]!
  40af80:	stp	x20, x19, [sp, #16]
  40af84:	mov	x29, sp
  40af88:	mov	x19, x2
  40af8c:	mov	x20, x0
  40af90:	bl	40a78c <jsonw_name@@Base>
  40af94:	mov	x0, x20
  40af98:	mov	x2, x19
  40af9c:	ldp	x20, x19, [sp, #16]
  40afa0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40afa4:	add	x1, x1, #0x2c2
  40afa8:	ldp	x29, x30, [sp], #32
  40afac:	b	40aa04 <jsonw_printf@@Base>

000000000040afb0 <jsonw_int_field@@Base>:
  40afb0:	stp	x29, x30, [sp, #-32]!
  40afb4:	stp	x20, x19, [sp, #16]
  40afb8:	mov	x29, sp
  40afbc:	mov	w19, w2
  40afc0:	mov	x20, x0
  40afc4:	bl	40a78c <jsonw_name@@Base>
  40afc8:	mov	x0, x20
  40afcc:	mov	w2, w19
  40afd0:	ldp	x20, x19, [sp, #16]
  40afd4:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40afd8:	add	x1, x1, #0xb2
  40afdc:	ldp	x29, x30, [sp], #32
  40afe0:	b	40aa04 <jsonw_printf@@Base>

000000000040afe4 <jsonw_s64_field@@Base>:
  40afe4:	stp	x29, x30, [sp, #-32]!
  40afe8:	stp	x20, x19, [sp, #16]
  40afec:	mov	x29, sp
  40aff0:	mov	x19, x2
  40aff4:	mov	x20, x0
  40aff8:	bl	40a78c <jsonw_name@@Base>
  40affc:	mov	x0, x20
  40b000:	mov	x2, x19
  40b004:	ldp	x20, x19, [sp, #16]
  40b008:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40b00c:	add	x1, x1, #0x2c7
  40b010:	ldp	x29, x30, [sp], #32
  40b014:	b	40aa04 <jsonw_printf@@Base>

000000000040b018 <jsonw_null_field@@Base>:
  40b018:	stp	x29, x30, [sp, #-32]!
  40b01c:	str	x19, [sp, #16]
  40b020:	mov	x29, sp
  40b024:	mov	x19, x0
  40b028:	bl	40a78c <jsonw_name@@Base>
  40b02c:	mov	x0, x19
  40b030:	ldr	x19, [sp, #16]
  40b034:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40b038:	add	x1, x1, #0x2a9
  40b03c:	ldp	x29, x30, [sp], #32
  40b040:	b	40aa04 <jsonw_printf@@Base>

000000000040b044 <nl_dump_ext_ack@@Base>:
  40b044:	mov	w0, wzr
  40b048:	ret

000000000040b04c <nl_dump_ext_ack_done@@Base>:
  40b04c:	mov	w0, wzr
  40b050:	ret

000000000040b054 <rtnl_set_strict_dump@@Base>:
  40b054:	stp	x29, x30, [sp, #-32]!
  40b058:	mov	x29, sp
  40b05c:	mov	w8, #0x1                   	// #1
  40b060:	str	w8, [x29, #28]
  40b064:	str	x19, [sp, #16]
  40b068:	mov	x19, x0
  40b06c:	ldr	w0, [x0]
  40b070:	add	x3, x29, #0x1c
  40b074:	mov	w1, #0x10e                 	// #270
  40b078:	mov	w2, #0xc                   	// #12
  40b07c:	mov	w4, #0x4                   	// #4
  40b080:	bl	404cd0 <setsockopt@plt>
  40b084:	tbnz	w0, #31, 40b094 <rtnl_set_strict_dump@@Base+0x40>
  40b088:	ldr	w8, [x19, #48]
  40b08c:	orr	w8, w8, #0x4
  40b090:	str	w8, [x19, #48]
  40b094:	ldr	x19, [sp, #16]
  40b098:	ldp	x29, x30, [sp], #32
  40b09c:	ret

000000000040b0a0 <rtnl_add_nl_group@@Base>:
  40b0a0:	sub	sp, sp, #0x20
  40b0a4:	stp	x29, x30, [sp, #16]
  40b0a8:	add	x29, sp, #0x10
  40b0ac:	stur	w1, [x29, #-4]
  40b0b0:	ldr	w0, [x0]
  40b0b4:	sub	x3, x29, #0x4
  40b0b8:	mov	w1, #0x10e                 	// #270
  40b0bc:	mov	w2, #0x1                   	// #1
  40b0c0:	mov	w4, #0x4                   	// #4
  40b0c4:	bl	404cd0 <setsockopt@plt>
  40b0c8:	ldp	x29, x30, [sp, #16]
  40b0cc:	add	sp, sp, #0x20
  40b0d0:	ret

000000000040b0d4 <rtnl_close@@Base>:
  40b0d4:	stp	x29, x30, [sp, #-32]!
  40b0d8:	str	x19, [sp, #16]
  40b0dc:	mov	x19, x0
  40b0e0:	ldr	w0, [x0]
  40b0e4:	mov	x29, sp
  40b0e8:	tbnz	w0, #31, 40b0f8 <rtnl_close@@Base+0x24>
  40b0ec:	bl	404dc0 <close@plt>
  40b0f0:	mov	w8, #0xffffffff            	// #-1
  40b0f4:	str	w8, [x19]
  40b0f8:	ldr	x19, [sp, #16]
  40b0fc:	ldp	x29, x30, [sp], #32
  40b100:	ret

000000000040b104 <rtnl_open_byproto@@Base>:
  40b104:	sub	sp, sp, #0x40
  40b108:	stp	x29, x30, [sp, #16]
  40b10c:	stp	x20, x19, [sp, #48]
  40b110:	add	x29, sp, #0x10
  40b114:	mov	w20, w1
  40b118:	mov	w8, #0x8000                	// #32768
  40b11c:	mov	w9, #0x1                   	// #1
  40b120:	movi	v0.2d, #0x0
  40b124:	mov	w1, #0x3                   	// #3
  40b128:	str	x21, [sp, #32]
  40b12c:	mov	x19, x0
  40b130:	str	w8, [x29, #24]
  40b134:	stur	w9, [x29, #-4]
  40b138:	stp	q0, q0, [x0, #16]
  40b13c:	str	xzr, [x0, #48]
  40b140:	str	q0, [x0]
  40b144:	str	w2, [x0, #36]
  40b148:	mov	w0, #0x10                  	// #16
  40b14c:	movk	w1, #0x8, lsl #16
  40b150:	bl	404ef0 <socket@plt>
  40b154:	str	w0, [x19]
  40b158:	tbnz	w0, #31, 40b220 <rtnl_open_byproto@@Base+0x11c>
  40b15c:	add	x3, x29, #0x18
  40b160:	mov	w1, #0x1                   	// #1
  40b164:	mov	w2, #0x7                   	// #7
  40b168:	mov	w4, #0x4                   	// #4
  40b16c:	bl	404cd0 <setsockopt@plt>
  40b170:	tbnz	w0, #31, 40b22c <rtnl_open_byproto@@Base+0x128>
  40b174:	adrp	x3, 41e000 <_IO_stdin_used@@Base+0x10640>
  40b178:	ldr	w0, [x19]
  40b17c:	ldr	x3, [x3, #4024]
  40b180:	mov	w1, #0x1                   	// #1
  40b184:	mov	w2, #0x8                   	// #8
  40b188:	mov	w4, #0x4                   	// #4
  40b18c:	bl	404cd0 <setsockopt@plt>
  40b190:	tbnz	w0, #31, 40b238 <rtnl_open_byproto@@Base+0x134>
  40b194:	ldr	w0, [x19]
  40b198:	sub	x3, x29, #0x4
  40b19c:	mov	w1, #0x10e                 	// #270
  40b1a0:	mov	w2, #0xb                   	// #11
  40b1a4:	mov	w4, #0x4                   	// #4
  40b1a8:	bl	404cd0 <setsockopt@plt>
  40b1ac:	mov	x21, x19
  40b1b0:	str	xzr, [x21, #4]!
  40b1b4:	mov	w8, #0x10                  	// #16
  40b1b8:	strh	w8, [x21]
  40b1bc:	ldr	w0, [x19]
  40b1c0:	mov	w2, #0xc                   	// #12
  40b1c4:	mov	x1, x21
  40b1c8:	str	w20, [x19, #12]
  40b1cc:	mov	w20, #0xc                   	// #12
  40b1d0:	bl	404c00 <bind@plt>
  40b1d4:	tbnz	w0, #31, 40b244 <rtnl_open_byproto@@Base+0x140>
  40b1d8:	str	w20, [x29, #28]
  40b1dc:	ldr	w0, [x19]
  40b1e0:	add	x2, x29, #0x1c
  40b1e4:	mov	x1, x21
  40b1e8:	bl	405050 <getsockname@plt>
  40b1ec:	tbnz	w0, #31, 40b250 <rtnl_open_byproto@@Base+0x14c>
  40b1f0:	ldr	w2, [x29, #28]
  40b1f4:	cmp	w2, #0xc
  40b1f8:	b.ne	40b260 <rtnl_open_byproto@@Base+0x15c>  // b.any
  40b1fc:	ldrh	w2, [x21]
  40b200:	cmp	w2, #0x10
  40b204:	b.ne	40b274 <rtnl_open_byproto@@Base+0x170>  // b.any
  40b208:	mov	x0, xzr
  40b20c:	bl	404cb0 <time@plt>
  40b210:	mov	x8, x0
  40b214:	mov	w0, wzr
  40b218:	str	w8, [x19, #28]
  40b21c:	b	40b290 <rtnl_open_byproto@@Base+0x18c>
  40b220:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x640>
  40b224:	add	x0, x0, #0x31d
  40b228:	b	40b258 <rtnl_open_byproto@@Base+0x154>
  40b22c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x640>
  40b230:	add	x0, x0, #0x338
  40b234:	b	40b258 <rtnl_open_byproto@@Base+0x154>
  40b238:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x640>
  40b23c:	add	x0, x0, #0x342
  40b240:	b	40b258 <rtnl_open_byproto@@Base+0x154>
  40b244:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x640>
  40b248:	add	x0, x0, #0x34c
  40b24c:	b	40b258 <rtnl_open_byproto@@Base+0x154>
  40b250:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x640>
  40b254:	add	x0, x0, #0x367
  40b258:	bl	404bb0 <perror@plt>
  40b25c:	b	40b28c <rtnl_open_byproto@@Base+0x188>
  40b260:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  40b264:	ldr	x8, [x8, #3992]
  40b268:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40b26c:	add	x1, x1, #0x37a
  40b270:	b	40b284 <rtnl_open_byproto@@Base+0x180>
  40b274:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  40b278:	ldr	x8, [x8, #3992]
  40b27c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40b280:	add	x1, x1, #0x393
  40b284:	ldr	x0, [x8]
  40b288:	bl	405060 <fprintf@plt>
  40b28c:	mov	w0, #0xffffffff            	// #-1
  40b290:	ldp	x20, x19, [sp, #48]
  40b294:	ldr	x21, [sp, #32]
  40b298:	ldp	x29, x30, [sp, #16]
  40b29c:	add	sp, sp, #0x40
  40b2a0:	ret

000000000040b2a4 <rtnl_open@@Base>:
  40b2a4:	mov	w2, wzr
  40b2a8:	b	40b104 <rtnl_open_byproto@@Base>

000000000040b2ac <rtnl_nexthopdump_req@@Base>:
  40b2ac:	sub	sp, sp, #0xc0
  40b2b0:	mov	x8, #0x18                  	// #24
  40b2b4:	movk	x8, #0x6a, lsl #32
  40b2b8:	movi	v0.2d, #0x0
  40b2bc:	movk	x8, #0x301, lsl #48
  40b2c0:	stp	x29, x30, [sp, #160]
  40b2c4:	stur	q0, [sp, #144]
  40b2c8:	stur	q0, [sp, #132]
  40b2cc:	stur	q0, [sp, #116]
  40b2d0:	stur	q0, [sp, #100]
  40b2d4:	stur	q0, [sp, #84]
  40b2d8:	stur	q0, [sp, #68]
  40b2dc:	stur	q0, [sp, #52]
  40b2e0:	stur	q0, [sp, #36]
  40b2e4:	stur	q0, [sp, #20]
  40b2e8:	str	x8, [sp, #8]
  40b2ec:	ldr	w8, [x0, #28]
  40b2f0:	str	x19, [sp, #176]
  40b2f4:	mov	x19, x0
  40b2f8:	add	x29, sp, #0xa0
  40b2fc:	add	w8, w8, #0x1
  40b300:	stp	w8, w8, [x0, #28]
  40b304:	str	w8, [sp, #16]
  40b308:	strb	w1, [sp, #24]
  40b30c:	cbz	x2, 40b330 <rtnl_nexthopdump_req@@Base+0x84>
  40b310:	add	x0, sp, #0x8
  40b314:	mov	w1, #0x98                  	// #152
  40b318:	blr	x2
  40b31c:	cbz	w0, 40b330 <rtnl_nexthopdump_req@@Base+0x84>
  40b320:	ldr	x19, [sp, #176]
  40b324:	ldp	x29, x30, [sp, #160]
  40b328:	add	sp, sp, #0xc0
  40b32c:	ret
  40b330:	ldr	w0, [x19]
  40b334:	add	x1, sp, #0x8
  40b338:	mov	w2, #0x98                  	// #152
  40b33c:	mov	w3, wzr
  40b340:	bl	404ea0 <send@plt>
  40b344:	ldr	x19, [sp, #176]
  40b348:	ldp	x29, x30, [sp, #160]
  40b34c:	add	sp, sp, #0xc0
  40b350:	ret

000000000040b354 <rtnl_addrdump_req@@Base>:
  40b354:	sub	sp, sp, #0xc0
  40b358:	mov	x8, #0x18                  	// #24
  40b35c:	movk	x8, #0x16, lsl #32
  40b360:	movi	v0.2d, #0x0
  40b364:	movk	x8, #0x301, lsl #48
  40b368:	stp	x29, x30, [sp, #160]
  40b36c:	stur	q0, [sp, #144]
  40b370:	stur	q0, [sp, #132]
  40b374:	stur	q0, [sp, #116]
  40b378:	stur	q0, [sp, #100]
  40b37c:	stur	q0, [sp, #84]
  40b380:	stur	q0, [sp, #68]
  40b384:	stur	q0, [sp, #52]
  40b388:	stur	q0, [sp, #36]
  40b38c:	stur	q0, [sp, #20]
  40b390:	str	x8, [sp, #8]
  40b394:	ldr	w8, [x0, #28]
  40b398:	str	x19, [sp, #176]
  40b39c:	mov	x19, x0
  40b3a0:	add	x29, sp, #0xa0
  40b3a4:	add	w8, w8, #0x1
  40b3a8:	stp	w8, w8, [x0, #28]
  40b3ac:	str	w8, [sp, #16]
  40b3b0:	strb	w1, [sp, #24]
  40b3b4:	cbz	x2, 40b3d8 <rtnl_addrdump_req@@Base+0x84>
  40b3b8:	add	x0, sp, #0x8
  40b3bc:	mov	w1, #0x98                  	// #152
  40b3c0:	blr	x2
  40b3c4:	cbz	w0, 40b3d8 <rtnl_addrdump_req@@Base+0x84>
  40b3c8:	ldr	x19, [sp, #176]
  40b3cc:	ldp	x29, x30, [sp, #160]
  40b3d0:	add	sp, sp, #0xc0
  40b3d4:	ret
  40b3d8:	ldr	w0, [x19]
  40b3dc:	add	x1, sp, #0x8
  40b3e0:	mov	w2, #0x98                  	// #152
  40b3e4:	mov	w3, wzr
  40b3e8:	bl	404ea0 <send@plt>
  40b3ec:	ldr	x19, [sp, #176]
  40b3f0:	ldp	x29, x30, [sp, #160]
  40b3f4:	add	sp, sp, #0xc0
  40b3f8:	ret

000000000040b3fc <rtnl_addrlbldump_req@@Base>:
  40b3fc:	sub	sp, sp, #0x30
  40b400:	mov	x8, #0x1c                  	// #28
  40b404:	movk	x8, #0x4a, lsl #32
  40b408:	movk	x8, #0x301, lsl #48
  40b40c:	stp	x29, x30, [sp, #32]
  40b410:	str	x8, [sp]
  40b414:	ldr	w8, [x0, #28]
  40b418:	mov	w2, #0x1c                  	// #28
  40b41c:	mov	w3, wzr
  40b420:	add	x29, sp, #0x20
  40b424:	add	w8, w8, #0x1
  40b428:	stp	w8, w8, [x0, #28]
  40b42c:	stp	w8, wzr, [sp, #8]
  40b430:	strb	w1, [sp, #16]
  40b434:	stur	xzr, [sp, #17]
  40b438:	str	wzr, [sp, #24]
  40b43c:	ldr	w0, [x0]
  40b440:	mov	x1, sp
  40b444:	bl	404ea0 <send@plt>
  40b448:	ldp	x29, x30, [sp, #32]
  40b44c:	add	sp, sp, #0x30
  40b450:	ret

000000000040b454 <rtnl_routedump_req@@Base>:
  40b454:	sub	sp, sp, #0xc0
  40b458:	mov	x8, #0x1c                  	// #28
  40b45c:	movk	x8, #0x1a, lsl #32
  40b460:	movi	v0.2d, #0x0
  40b464:	movk	x8, #0x301, lsl #48
  40b468:	stp	x29, x30, [sp, #160]
  40b46c:	stur	q0, [sp, #140]
  40b470:	stur	q0, [sp, #124]
  40b474:	stur	q0, [sp, #108]
  40b478:	stur	q0, [sp, #92]
  40b47c:	stur	q0, [sp, #76]
  40b480:	stur	q0, [sp, #60]
  40b484:	stur	q0, [sp, #44]
  40b488:	stur	q0, [sp, #28]
  40b48c:	stur	q0, [sp, #12]
  40b490:	str	x8, [sp]
  40b494:	ldr	w8, [x0, #28]
  40b498:	str	x19, [sp, #176]
  40b49c:	mov	x19, x0
  40b4a0:	add	x29, sp, #0xa0
  40b4a4:	add	w8, w8, #0x1
  40b4a8:	stp	w8, w8, [x0, #28]
  40b4ac:	str	w8, [sp, #8]
  40b4b0:	strb	w1, [sp, #16]
  40b4b4:	cbz	x2, 40b4d8 <rtnl_routedump_req@@Base+0x84>
  40b4b8:	mov	x0, sp
  40b4bc:	mov	w1, #0x9c                  	// #156
  40b4c0:	blr	x2
  40b4c4:	cbz	w0, 40b4d8 <rtnl_routedump_req@@Base+0x84>
  40b4c8:	ldr	x19, [sp, #176]
  40b4cc:	ldp	x29, x30, [sp, #160]
  40b4d0:	add	sp, sp, #0xc0
  40b4d4:	ret
  40b4d8:	ldr	w0, [x19]
  40b4dc:	mov	x1, sp
  40b4e0:	mov	w2, #0x9c                  	// #156
  40b4e4:	mov	w3, wzr
  40b4e8:	bl	404ea0 <send@plt>
  40b4ec:	ldr	x19, [sp, #176]
  40b4f0:	ldp	x29, x30, [sp, #160]
  40b4f4:	add	sp, sp, #0xc0
  40b4f8:	ret

000000000040b4fc <rtnl_ruledump_req@@Base>:
  40b4fc:	sub	sp, sp, #0x30
  40b500:	mov	x8, #0x1c                  	// #28
  40b504:	movk	x8, #0x22, lsl #32
  40b508:	movk	x8, #0x301, lsl #48
  40b50c:	stp	x29, x30, [sp, #32]
  40b510:	str	x8, [sp]
  40b514:	ldr	w8, [x0, #28]
  40b518:	mov	w2, #0x1c                  	// #28
  40b51c:	mov	w3, wzr
  40b520:	add	x29, sp, #0x20
  40b524:	add	w8, w8, #0x1
  40b528:	stp	w8, w8, [x0, #28]
  40b52c:	stp	w8, wzr, [sp, #8]
  40b530:	strb	w1, [sp, #16]
  40b534:	stur	xzr, [sp, #17]
  40b538:	str	wzr, [sp, #24]
  40b53c:	ldr	w0, [x0]
  40b540:	mov	x1, sp
  40b544:	bl	404ea0 <send@plt>
  40b548:	ldp	x29, x30, [sp, #32]
  40b54c:	add	sp, sp, #0x30
  40b550:	ret

000000000040b554 <rtnl_neighdump_req@@Base>:
  40b554:	sub	sp, sp, #0x140
  40b558:	mov	x9, #0x1c                  	// #28
  40b55c:	mov	x8, sp
  40b560:	movi	v0.2d, #0x0
  40b564:	movk	x9, #0x1e, lsl #32
  40b568:	movk	x9, #0x301, lsl #48
  40b56c:	stur	q0, [x8, #252]
  40b570:	stur	q0, [x8, #236]
  40b574:	stur	q0, [x8, #220]
  40b578:	stur	q0, [x8, #204]
  40b57c:	stur	q0, [x8, #188]
  40b580:	stur	q0, [x8, #172]
  40b584:	stur	q0, [x8, #156]
  40b588:	stur	q0, [x8, #140]
  40b58c:	add	x8, x8, #0xc
  40b590:	stp	x29, x30, [sp, #288]
  40b594:	stp	x28, x19, [sp, #304]
  40b598:	stur	q0, [sp, #124]
  40b59c:	stur	q0, [sp, #108]
  40b5a0:	stur	q0, [sp, #92]
  40b5a4:	stur	q0, [sp, #76]
  40b5a8:	stur	q0, [sp, #60]
  40b5ac:	stur	q0, [sp, #44]
  40b5b0:	stur	q0, [sp, #28]
  40b5b4:	stur	q0, [sp, #12]
  40b5b8:	str	q0, [x8, #256]
  40b5bc:	str	x9, [sp]
  40b5c0:	ldr	w8, [x0, #28]
  40b5c4:	mov	x19, x0
  40b5c8:	add	x29, sp, #0x120
  40b5cc:	add	w8, w8, #0x1
  40b5d0:	stp	w8, w8, [x0, #28]
  40b5d4:	str	w8, [sp, #8]
  40b5d8:	strb	w1, [sp, #16]
  40b5dc:	cbz	x2, 40b600 <rtnl_neighdump_req@@Base+0xac>
  40b5e0:	mov	x0, sp
  40b5e4:	mov	w1, #0x11c                 	// #284
  40b5e8:	blr	x2
  40b5ec:	cbz	w0, 40b600 <rtnl_neighdump_req@@Base+0xac>
  40b5f0:	ldp	x28, x19, [sp, #304]
  40b5f4:	ldp	x29, x30, [sp, #288]
  40b5f8:	add	sp, sp, #0x140
  40b5fc:	ret
  40b600:	ldr	w0, [x19]
  40b604:	mov	x1, sp
  40b608:	mov	w2, #0x11c                 	// #284
  40b60c:	mov	w3, wzr
  40b610:	bl	404ea0 <send@plt>
  40b614:	ldp	x28, x19, [sp, #304]
  40b618:	ldp	x29, x30, [sp, #288]
  40b61c:	add	sp, sp, #0x140
  40b620:	ret

000000000040b624 <rtnl_neightbldump_req@@Base>:
  40b624:	sub	sp, sp, #0x30
  40b628:	mov	x8, #0x14                  	// #20
  40b62c:	movk	x8, #0x42, lsl #32
  40b630:	movk	x8, #0x301, lsl #48
  40b634:	stp	x29, x30, [sp, #32]
  40b638:	str	x8, [sp, #8]
  40b63c:	ldr	w8, [x0, #28]
  40b640:	mov	w2, #0x14                  	// #20
  40b644:	mov	w3, wzr
  40b648:	add	x29, sp, #0x20
  40b64c:	add	w8, w8, #0x1
  40b650:	stp	w8, w8, [x0, #28]
  40b654:	stp	w8, wzr, [sp, #16]
  40b658:	strb	w1, [sp, #24]
  40b65c:	strb	wzr, [sp, #25]
  40b660:	strh	wzr, [sp, #26]
  40b664:	ldr	w0, [x0]
  40b668:	add	x1, sp, #0x8
  40b66c:	bl	404ea0 <send@plt>
  40b670:	ldp	x29, x30, [sp, #32]
  40b674:	add	sp, sp, #0x30
  40b678:	ret

000000000040b67c <rtnl_mdbdump_req@@Base>:
  40b67c:	sub	sp, sp, #0x30
  40b680:	mov	x8, #0x18                  	// #24
  40b684:	movk	x8, #0x56, lsl #32
  40b688:	movk	x8, #0x301, lsl #48
  40b68c:	stp	x29, x30, [sp, #32]
  40b690:	str	x8, [sp, #8]
  40b694:	ldr	w8, [x0, #28]
  40b698:	mov	w2, #0x18                  	// #24
  40b69c:	mov	w3, wzr
  40b6a0:	add	x29, sp, #0x20
  40b6a4:	add	w8, w8, #0x1
  40b6a8:	stp	w8, w8, [x0, #28]
  40b6ac:	stp	w8, wzr, [sp, #16]
  40b6b0:	strb	w1, [sp, #24]
  40b6b4:	str	wzr, [sp, #28]
  40b6b8:	ldr	w0, [x0]
  40b6bc:	add	x1, sp, #0x8
  40b6c0:	bl	404ea0 <send@plt>
  40b6c4:	ldp	x29, x30, [sp, #32]
  40b6c8:	add	sp, sp, #0x30
  40b6cc:	ret

000000000040b6d0 <rtnl_netconfdump_req@@Base>:
  40b6d0:	sub	sp, sp, #0x30
  40b6d4:	mov	x8, #0x14                  	// #20
  40b6d8:	movk	x8, #0x52, lsl #32
  40b6dc:	movk	x8, #0x301, lsl #48
  40b6e0:	stp	x29, x30, [sp, #32]
  40b6e4:	str	x8, [sp, #8]
  40b6e8:	ldr	w8, [x0, #28]
  40b6ec:	mov	w2, #0x14                  	// #20
  40b6f0:	mov	w3, wzr
  40b6f4:	add	x29, sp, #0x20
  40b6f8:	add	w8, w8, #0x1
  40b6fc:	stp	w8, w8, [x0, #28]
  40b700:	stp	w8, wzr, [sp, #16]
  40b704:	strb	w1, [sp, #24]
  40b708:	ldr	w0, [x0]
  40b70c:	add	x1, sp, #0x8
  40b710:	bl	404ea0 <send@plt>
  40b714:	ldp	x29, x30, [sp, #32]
  40b718:	add	sp, sp, #0x30
  40b71c:	ret

000000000040b720 <rtnl_nsiddump_req_filter_fn@@Base>:
  40b720:	stp	x29, x30, [sp, #-48]!
  40b724:	stp	x28, x21, [sp, #16]
  40b728:	stp	x20, x19, [sp, #32]
  40b72c:	mov	x29, sp
  40b730:	sub	sp, sp, #0x420
  40b734:	add	x8, sp, #0x8
  40b738:	mov	x20, x2
  40b73c:	mov	w21, w1
  40b740:	mov	x19, x0
  40b744:	add	x0, x8, #0xc
  40b748:	mov	w2, #0x408                 	// #1032
  40b74c:	mov	w1, wzr
  40b750:	bl	404d20 <memset@plt>
  40b754:	mov	x8, #0x14                  	// #20
  40b758:	movk	x8, #0x5a, lsl #32
  40b75c:	movk	x8, #0x301, lsl #48
  40b760:	str	x8, [sp, #8]
  40b764:	ldr	w8, [x19, #28]
  40b768:	add	w8, w8, #0x1
  40b76c:	stp	w8, w8, [x19, #28]
  40b770:	str	w8, [sp, #16]
  40b774:	strb	w21, [sp, #24]
  40b778:	cbz	x20, 40b7a4 <rtnl_nsiddump_req_filter_fn@@Base+0x84>
  40b77c:	add	x0, sp, #0x8
  40b780:	mov	w1, #0x414                 	// #1044
  40b784:	blr	x20
  40b788:	cbnz	w0, 40b7a8 <rtnl_nsiddump_req_filter_fn@@Base+0x88>
  40b78c:	ldr	w0, [x19]
  40b790:	ldr	w2, [sp, #8]
  40b794:	add	x1, sp, #0x8
  40b798:	mov	w3, wzr
  40b79c:	bl	404ea0 <send@plt>
  40b7a0:	b	40b7a8 <rtnl_nsiddump_req_filter_fn@@Base+0x88>
  40b7a4:	mov	w0, #0xffffffea            	// #-22
  40b7a8:	add	sp, sp, #0x420
  40b7ac:	ldp	x20, x19, [sp, #32]
  40b7b0:	ldp	x28, x21, [sp, #16]
  40b7b4:	ldp	x29, x30, [sp], #48
  40b7b8:	ret

000000000040b7bc <rtnl_linkdump_req@@Base>:
  40b7bc:	sub	sp, sp, #0x40
  40b7c0:	stp	x29, x30, [sp, #48]
  40b7c4:	add	x29, sp, #0x30
  40b7c8:	cbz	w1, 40b808 <rtnl_linkdump_req@@Base+0x4c>
  40b7cc:	mov	x8, #0x20                  	// #32
  40b7d0:	movk	x8, #0x12, lsl #32
  40b7d4:	movk	x8, #0x301, lsl #48
  40b7d8:	str	x8, [sp, #8]
  40b7dc:	ldr	w8, [x0, #28]
  40b7e0:	mov	w2, #0x20                  	// #32
  40b7e4:	add	w8, w8, #0x1
  40b7e8:	stp	w8, w8, [x0, #28]
  40b7ec:	stp	w8, wzr, [sp, #16]
  40b7f0:	strb	w1, [sp, #24]
  40b7f4:	stur	xzr, [sp, #25]
  40b7f8:	str	xzr, [sp, #32]
  40b7fc:	ldr	w0, [x0]
  40b800:	add	x1, sp, #0x8
  40b804:	b	40b850 <rtnl_linkdump_req@@Base+0x94>
  40b808:	mov	x8, #0x28                  	// #40
  40b80c:	movk	x8, #0x12, lsl #32
  40b810:	movk	x8, #0x301, lsl #48
  40b814:	str	x8, [sp, #8]
  40b818:	ldr	w8, [x0, #28]
  40b81c:	mov	x9, #0x8                   	// #8
  40b820:	movk	x9, #0x1d, lsl #16
  40b824:	movk	x9, #0x1, lsl #32
  40b828:	add	w8, w8, #0x1
  40b82c:	stp	w8, w8, [x0, #28]
  40b830:	str	w8, [sp, #16]
  40b834:	stur	xzr, [sp, #28]
  40b838:	stur	xzr, [sp, #20]
  40b83c:	str	wzr, [sp, #36]
  40b840:	str	x9, [sp, #40]
  40b844:	ldr	w0, [x0]
  40b848:	add	x1, sp, #0x8
  40b84c:	mov	w2, #0x28                  	// #40
  40b850:	mov	w3, wzr
  40b854:	bl	404ea0 <send@plt>
  40b858:	ldp	x29, x30, [sp, #48]
  40b85c:	add	sp, sp, #0x40
  40b860:	ret

000000000040b864 <rtnl_linkdump_req_filter@@Base>:
  40b864:	sub	sp, sp, #0x40
  40b868:	cmp	w1, #0x7
  40b86c:	stp	x29, x30, [sp, #48]
  40b870:	add	x29, sp, #0x30
  40b874:	b.eq	40b87c <rtnl_linkdump_req_filter@@Base+0x18>  // b.none
  40b878:	cbnz	w1, 40b8c4 <rtnl_linkdump_req_filter@@Base+0x60>
  40b87c:	mov	x8, #0x28                  	// #40
  40b880:	movk	x8, #0x12, lsl #32
  40b884:	movk	x8, #0x301, lsl #48
  40b888:	str	x8, [sp, #8]
  40b88c:	ldr	w8, [x0, #28]
  40b890:	mov	w9, #0x8                   	// #8
  40b894:	movk	w9, #0x1d, lsl #16
  40b898:	add	w8, w8, #0x1
  40b89c:	stp	w8, w8, [x0, #28]
  40b8a0:	stp	w8, wzr, [sp, #16]
  40b8a4:	strb	w1, [sp, #24]
  40b8a8:	stur	xzr, [sp, #25]
  40b8ac:	str	xzr, [sp, #32]
  40b8b0:	stp	w9, w2, [sp, #40]
  40b8b4:	ldr	w0, [x0]
  40b8b8:	add	x1, sp, #0x8
  40b8bc:	mov	w2, #0x28                  	// #40
  40b8c0:	b	40b8fc <rtnl_linkdump_req_filter@@Base+0x98>
  40b8c4:	mov	x8, #0x20                  	// #32
  40b8c8:	movk	x8, #0x12, lsl #32
  40b8cc:	movk	x8, #0x301, lsl #48
  40b8d0:	str	x8, [sp, #8]
  40b8d4:	ldr	w8, [x0, #28]
  40b8d8:	mov	w2, #0x20                  	// #32
  40b8dc:	add	w8, w8, #0x1
  40b8e0:	stp	w8, w8, [x0, #28]
  40b8e4:	stp	w8, wzr, [sp, #16]
  40b8e8:	strb	w1, [sp, #24]
  40b8ec:	stur	xzr, [sp, #25]
  40b8f0:	str	xzr, [sp, #32]
  40b8f4:	ldr	w0, [x0]
  40b8f8:	add	x1, sp, #0x8
  40b8fc:	mov	w3, wzr
  40b900:	bl	404ea0 <send@plt>
  40b904:	ldp	x29, x30, [sp, #48]
  40b908:	add	sp, sp, #0x40
  40b90c:	ret

000000000040b910 <rtnl_linkdump_req_filter_fn@@Base>:
  40b910:	stp	x29, x30, [sp, #-48]!
  40b914:	stp	x28, x21, [sp, #16]
  40b918:	stp	x20, x19, [sp, #32]
  40b91c:	mov	x29, sp
  40b920:	sub	sp, sp, #0x420
  40b924:	mov	x21, x2
  40b928:	mov	w20, w1
  40b92c:	cmp	w1, #0x11
  40b930:	mov	x19, x0
  40b934:	b.eq	40b93c <rtnl_linkdump_req_filter_fn@@Base+0x2c>  // b.none
  40b938:	cbnz	w20, 40b998 <rtnl_linkdump_req_filter_fn@@Base+0x88>
  40b93c:	mov	x8, sp
  40b940:	add	x0, x8, #0xc
  40b944:	mov	w2, #0x414                 	// #1044
  40b948:	mov	w1, wzr
  40b94c:	bl	404d20 <memset@plt>
  40b950:	mov	x8, #0x20                  	// #32
  40b954:	movk	x8, #0x12, lsl #32
  40b958:	movk	x8, #0x301, lsl #48
  40b95c:	str	x8, [sp]
  40b960:	ldr	w8, [x19, #28]
  40b964:	add	w8, w8, #0x1
  40b968:	stp	w8, w8, [x19, #28]
  40b96c:	str	w8, [sp, #8]
  40b970:	strb	w20, [sp, #16]
  40b974:	cbz	x21, 40b9dc <rtnl_linkdump_req_filter_fn@@Base+0xcc>
  40b978:	mov	x0, sp
  40b97c:	mov	w1, #0x420                 	// #1056
  40b980:	blr	x21
  40b984:	cbnz	w0, 40b9e0 <rtnl_linkdump_req_filter_fn@@Base+0xd0>
  40b988:	ldr	w0, [x19]
  40b98c:	ldr	w2, [sp]
  40b990:	mov	x1, sp
  40b994:	b	40b9d0 <rtnl_linkdump_req_filter_fn@@Base+0xc0>
  40b998:	mov	x8, #0x20                  	// #32
  40b99c:	movk	x8, #0x12, lsl #32
  40b9a0:	movk	x8, #0x301, lsl #48
  40b9a4:	str	x8, [sp]
  40b9a8:	ldr	w8, [x19, #28]
  40b9ac:	mov	x1, sp
  40b9b0:	mov	w2, #0x20                  	// #32
  40b9b4:	add	w8, w8, #0x1
  40b9b8:	stp	w8, w8, [x19, #28]
  40b9bc:	stp	w8, wzr, [sp, #8]
  40b9c0:	strb	w20, [sp, #16]
  40b9c4:	stur	xzr, [sp, #17]
  40b9c8:	str	xzr, [sp, #24]
  40b9cc:	ldr	w0, [x19]
  40b9d0:	mov	w3, wzr
  40b9d4:	bl	404ea0 <send@plt>
  40b9d8:	b	40b9e0 <rtnl_linkdump_req_filter_fn@@Base+0xd0>
  40b9dc:	mov	w0, #0xffffffea            	// #-22
  40b9e0:	add	sp, sp, #0x420
  40b9e4:	ldp	x20, x19, [sp, #32]
  40b9e8:	ldp	x28, x21, [sp, #16]
  40b9ec:	ldp	x29, x30, [sp], #48
  40b9f0:	ret

000000000040b9f4 <rtnl_fdb_linkdump_req_filter_fn@@Base>:
  40b9f4:	sub	sp, sp, #0xc0
  40b9f8:	mov	x9, #0x20                  	// #32
  40b9fc:	movk	x9, #0x1e, lsl #32
  40ba00:	movi	v0.2d, #0x0
  40ba04:	movk	x9, #0x301, lsl #48
  40ba08:	stp	x29, x30, [sp, #160]
  40ba0c:	str	wzr, [sp, #156]
  40ba10:	stur	q0, [sp, #140]
  40ba14:	stur	q0, [sp, #124]
  40ba18:	stur	q0, [sp, #108]
  40ba1c:	stur	q0, [sp, #92]
  40ba20:	stur	q0, [sp, #76]
  40ba24:	stur	q0, [sp, #60]
  40ba28:	stur	q0, [sp, #44]
  40ba2c:	stur	q0, [sp, #28]
  40ba30:	stur	q0, [sp, #12]
  40ba34:	str	x9, [sp]
  40ba38:	ldr	w9, [x0, #28]
  40ba3c:	str	x19, [sp, #176]
  40ba40:	mov	x8, x1
  40ba44:	mov	x19, x0
  40ba48:	add	w9, w9, #0x1
  40ba4c:	stp	w9, w9, [x0, #28]
  40ba50:	str	w9, [sp, #8]
  40ba54:	mov	w9, #0x7                   	// #7
  40ba58:	mov	x0, sp
  40ba5c:	mov	w1, #0xa0                  	// #160
  40ba60:	add	x29, sp, #0xa0
  40ba64:	strb	w9, [sp, #16]
  40ba68:	blr	x8
  40ba6c:	cbz	w0, 40ba80 <rtnl_fdb_linkdump_req_filter_fn@@Base+0x8c>
  40ba70:	ldr	x19, [sp, #176]
  40ba74:	ldp	x29, x30, [sp, #160]
  40ba78:	add	sp, sp, #0xc0
  40ba7c:	ret
  40ba80:	ldr	w0, [x19]
  40ba84:	mov	x1, sp
  40ba88:	mov	w2, #0xa0                  	// #160
  40ba8c:	mov	w3, wzr
  40ba90:	bl	404ea0 <send@plt>
  40ba94:	ldr	x19, [sp, #176]
  40ba98:	ldp	x29, x30, [sp, #160]
  40ba9c:	add	sp, sp, #0xc0
  40baa0:	ret

000000000040baa4 <rtnl_statsdump_req_filter@@Base>:
  40baa4:	sub	sp, sp, #0x30
  40baa8:	mov	x8, #0x1c                  	// #28
  40baac:	movk	x8, #0x5e, lsl #32
  40bab0:	movk	x8, #0x301, lsl #48
  40bab4:	stp	x29, x30, [sp, #32]
  40bab8:	stp	xzr, xzr, [sp, #8]
  40babc:	str	x8, [sp]
  40bac0:	ldr	w8, [x0, #28]
  40bac4:	mov	w3, wzr
  40bac8:	add	x29, sp, #0x20
  40bacc:	add	w8, w8, #0x1
  40bad0:	stp	w8, w8, [x0, #28]
  40bad4:	stp	w8, wzr, [sp, #8]
  40bad8:	strb	w1, [sp, #16]
  40badc:	str	w2, [sp, #24]
  40bae0:	ldr	w0, [x0]
  40bae4:	mov	x1, sp
  40bae8:	mov	w2, #0x1c                  	// #28
  40baec:	bl	404ea0 <send@plt>
  40baf0:	ldp	x29, x30, [sp, #32]
  40baf4:	add	sp, sp, #0x30
  40baf8:	ret

000000000040bafc <rtnl_send@@Base>:
  40bafc:	stp	x29, x30, [sp, #-16]!
  40bb00:	ldr	w0, [x0]
  40bb04:	mov	w3, wzr
  40bb08:	sxtw	x2, w2
  40bb0c:	mov	x29, sp
  40bb10:	bl	404ea0 <send@plt>
  40bb14:	ldp	x29, x30, [sp], #16
  40bb18:	ret

000000000040bb1c <rtnl_send_check@@Base>:
  40bb1c:	stp	x29, x30, [sp, #-32]!
  40bb20:	stp	x28, x19, [sp, #16]
  40bb24:	mov	x29, sp
  40bb28:	sub	sp, sp, #0x400
  40bb2c:	mov	x19, x0
  40bb30:	ldr	w0, [x0]
  40bb34:	mov	w3, wzr
  40bb38:	sxtw	x2, w2
  40bb3c:	bl	404ea0 <send@plt>
  40bb40:	mov	x8, x0
  40bb44:	tbnz	w8, #31, 40bbe0 <rtnl_send_check@@Base+0xc4>
  40bb48:	ldr	w0, [x19]
  40bb4c:	mov	x1, sp
  40bb50:	mov	w2, #0x400                 	// #1024
  40bb54:	mov	w3, #0x42                  	// #66
  40bb58:	bl	404de0 <recv@plt>
  40bb5c:	tbnz	w0, #31, 40bbb0 <rtnl_send_check@@Base+0x94>
  40bb60:	cmp	w0, #0x10
  40bb64:	b.lt	40bba8 <rtnl_send_check@@Base+0x8c>  // b.tstop
  40bb68:	mov	x9, sp
  40bb6c:	ldr	w10, [x9]
  40bb70:	mov	w8, wzr
  40bb74:	cmp	w10, #0x10
  40bb78:	b.cc	40bbe0 <rtnl_send_check@@Base+0xc4>  // b.lo, b.ul, b.last
  40bb7c:	cmp	w10, w0
  40bb80:	b.hi	40bbe0 <rtnl_send_check@@Base+0xc4>  // b.pmore
  40bb84:	ldrh	w8, [x9, #4]
  40bb88:	cmp	w8, #0x2
  40bb8c:	b.eq	40bbc4 <rtnl_send_check@@Base+0xa8>  // b.none
  40bb90:	add	w8, w10, #0x3
  40bb94:	and	w8, w8, #0xfffffffc
  40bb98:	sub	w0, w0, w8
  40bb9c:	cmp	w0, #0xf
  40bba0:	add	x9, x9, x8
  40bba4:	b.gt	40bb6c <rtnl_send_check@@Base+0x50>
  40bba8:	mov	w8, wzr
  40bbac:	b	40bbe0 <rtnl_send_check@@Base+0xc4>
  40bbb0:	bl	405010 <__errno_location@plt>
  40bbb4:	ldr	w8, [x0]
  40bbb8:	cmp	w8, #0xb
  40bbbc:	csetm	w8, ne  // ne = any
  40bbc0:	b	40bbe0 <rtnl_send_check@@Base+0xc4>
  40bbc4:	cmp	w10, #0x23
  40bbc8:	b.ls	40bbf4 <rtnl_send_check@@Base+0xd8>  // b.plast
  40bbcc:	ldr	w8, [x9, #16]
  40bbd0:	neg	w19, w8
  40bbd4:	bl	405010 <__errno_location@plt>
  40bbd8:	str	w19, [x0]
  40bbdc:	mov	w8, #0xffffffff            	// #-1
  40bbe0:	mov	w0, w8
  40bbe4:	add	sp, sp, #0x400
  40bbe8:	ldp	x28, x19, [sp, #16]
  40bbec:	ldp	x29, x30, [sp], #32
  40bbf0:	ret
  40bbf4:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  40bbf8:	ldr	x8, [x8, #3992]
  40bbfc:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x640>
  40bc00:	add	x0, x0, #0x3ac
  40bc04:	mov	w1, #0x10                  	// #16
  40bc08:	ldr	x3, [x8]
  40bc0c:	mov	w2, #0x1                   	// #1
  40bc10:	bl	404ee0 <fwrite@plt>
  40bc14:	b	40bbdc <rtnl_send_check@@Base+0xc0>

000000000040bc18 <rtnl_dump_request@@Base>:
  40bc18:	sub	sp, sp, #0x90
  40bc1c:	stp	x29, x30, [sp, #128]
  40bc20:	add	x29, sp, #0x80
  40bc24:	add	w8, w3, #0x10
  40bc28:	mov	w9, #0x301                 	// #769
  40bc2c:	sturh	w1, [x29, #-12]
  40bc30:	adrp	x10, 40e000 <_IO_stdin_used@@Base+0x640>
  40bc34:	stur	w8, [x29, #-16]
  40bc38:	sturh	w9, [x29, #-10]
  40bc3c:	add	x10, x10, #0x6b4
  40bc40:	ldr	w8, [x0, #28]
  40bc44:	ldr	x13, [x10]
  40bc48:	ldr	w10, [x10, #8]
  40bc4c:	sub	x11, x29, #0x10
  40bc50:	mov	w12, #0x10                  	// #16
  40bc54:	sxtw	x9, w3
  40bc58:	add	w8, w8, #0x1
  40bc5c:	stp	w8, w8, [x0, #28]
  40bc60:	stur	x13, [x29, #-32]
  40bc64:	sub	x13, x29, #0x20
  40bc68:	stur	w10, [x29, #-24]
  40bc6c:	mov	w10, #0xc                   	// #12
  40bc70:	stp	x11, x12, [sp, #64]
  40bc74:	add	x11, sp, #0x40
  40bc78:	stp	x2, x9, [sp, #80]
  40bc7c:	mov	w9, #0x2                   	// #2
  40bc80:	stp	w8, wzr, [x29, #-8]
  40bc84:	str	x13, [sp, #8]
  40bc88:	str	w10, [sp, #16]
  40bc8c:	stp	x11, x9, [sp, #24]
  40bc90:	stp	xzr, xzr, [sp, #40]
  40bc94:	str	wzr, [sp, #56]
  40bc98:	ldr	w0, [x0]
  40bc9c:	add	x1, sp, #0x8
  40bca0:	mov	w2, wzr
  40bca4:	bl	404d40 <sendmsg@plt>
  40bca8:	ldp	x29, x30, [sp, #128]
  40bcac:	add	sp, sp, #0x90
  40bcb0:	ret

000000000040bcb4 <rtnl_dump_request_n@@Base>:
  40bcb4:	sub	sp, sp, #0x70
  40bcb8:	adrp	x8, 40e000 <_IO_stdin_used@@Base+0x640>
  40bcbc:	add	x8, x8, #0x6b4
  40bcc0:	ldr	x9, [x8]
  40bcc4:	ldr	w8, [x8, #8]
  40bcc8:	stp	x29, x30, [sp, #96]
  40bccc:	add	x29, sp, #0x60
  40bcd0:	stur	x9, [x29, #-16]
  40bcd4:	stur	w8, [x29, #-8]
  40bcd8:	ldr	w8, [x1]
  40bcdc:	sub	x10, x29, #0x10
  40bce0:	mov	w9, #0xc                   	// #12
  40bce4:	str	x10, [sp, #8]
  40bce8:	sub	x10, x29, #0x20
  40bcec:	str	w9, [sp, #16]
  40bcf0:	mov	w9, #0x1                   	// #1
  40bcf4:	stp	x10, x9, [sp, #24]
  40bcf8:	mov	w9, #0x301                 	// #769
  40bcfc:	stp	xzr, xzr, [sp, #40]
  40bd00:	str	wzr, [sp, #56]
  40bd04:	stp	x1, x8, [x29, #-32]
  40bd08:	strh	w9, [x1, #6]
  40bd0c:	str	wzr, [x1, #12]
  40bd10:	ldr	w8, [x0, #28]
  40bd14:	mov	w2, wzr
  40bd18:	add	w8, w8, #0x1
  40bd1c:	stp	w8, w8, [x0, #28]
  40bd20:	str	w8, [x1, #8]
  40bd24:	ldr	w0, [x0]
  40bd28:	add	x1, sp, #0x8
  40bd2c:	bl	404d40 <sendmsg@plt>
  40bd30:	ldp	x29, x30, [sp, #96]
  40bd34:	add	sp, sp, #0x70
  40bd38:	ret

000000000040bd3c <rtnl_dump_filter_nc@@Base>:
  40bd3c:	sub	sp, sp, #0xf0
  40bd40:	stp	x29, x30, [sp, #144]
  40bd44:	add	x29, sp, #0x90
  40bd48:	sub	x8, x29, #0x10
  40bd4c:	mov	w9, #0xc                   	// #12
  40bd50:	str	x8, [sp, #56]
  40bd54:	sub	x8, x29, #0x20
  40bd58:	str	w9, [sp, #64]
  40bd5c:	mov	w9, #0x1                   	// #1
  40bd60:	stp	x28, x27, [sp, #160]
  40bd64:	stp	x26, x25, [sp, #176]
  40bd68:	stp	x24, x23, [sp, #192]
  40bd6c:	stp	x22, x21, [sp, #208]
  40bd70:	stp	x20, x19, [sp, #224]
  40bd74:	stp	x1, x2, [sp, #8]
  40bd78:	strh	w3, [sp, #24]
  40bd7c:	stp	xzr, xzr, [sp, #40]
  40bd80:	str	xzr, [sp, #32]
  40bd84:	stp	xzr, xzr, [sp, #88]
  40bd88:	stp	x8, x9, [sp, #72]
  40bd8c:	str	wzr, [sp, #104]
  40bd90:	ldr	w24, [x0]
  40bd94:	mov	x20, x1
  40bd98:	mov	x19, x0
  40bd9c:	add	x1, sp, #0x38
  40bda0:	mov	w2, #0x22                  	// #34
  40bda4:	mov	w0, w24
  40bda8:	stp	xzr, xzr, [x29, #-32]
  40bdac:	bl	40d848 <__parse_rtattr_nested_compat@@Base+0x110>
  40bdb0:	mov	w23, w0
  40bdb4:	tbnz	w0, #31, 40c028 <rtnl_dump_filter_nc@@Base+0x2ec>
  40bdb8:	add	x8, sp, #0x8
  40bdbc:	mov	w28, wzr
  40bdc0:	sub	x22, x29, #0x20
  40bdc4:	mov	w25, #0x8000                	// #32768
  40bdc8:	add	x26, x8, #0x18
  40bdcc:	str	x26, [sp]
  40bdd0:	cmp	w23, #0x8, lsl #12
  40bdd4:	csel	w23, w23, w25, gt
  40bdd8:	mov	x0, x23
  40bddc:	bl	404cc0 <malloc@plt>
  40bde0:	cbz	x0, 40bff8 <rtnl_dump_filter_nc@@Base+0x2bc>
  40bde4:	mov	x21, x0
  40bde8:	stp	x0, x23, [x22]
  40bdec:	add	x1, sp, #0x38
  40bdf0:	mov	w0, w24
  40bdf4:	mov	w2, wzr
  40bdf8:	bl	40d848 <__parse_rtattr_nested_compat@@Base+0x110>
  40bdfc:	mov	w23, w0
  40be00:	tbnz	w0, #31, 40c020 <rtnl_dump_filter_nc@@Base+0x2e4>
  40be04:	ldr	x3, [x19, #40]
  40be08:	cbz	x3, 40be20 <rtnl_dump_filter_nc@@Base+0xe4>
  40be0c:	add	w8, w23, #0x3
  40be10:	and	w2, w8, #0xfffffffc
  40be14:	mov	w1, #0x1                   	// #1
  40be18:	mov	x0, x21
  40be1c:	bl	404ee0 <fwrite@plt>
  40be20:	cbz	x20, 40bf04 <rtnl_dump_filter_nc@@Base+0x1c8>
  40be24:	cmp	w23, #0xf
  40be28:	b.le	40bf0c <rtnl_dump_filter_nc@@Base+0x1d0>
  40be2c:	mov	w22, wzr
  40be30:	add	x27, sp, #0x8
  40be34:	b	40be40 <rtnl_dump_filter_nc@@Base+0x104>
  40be38:	ldr	x8, [x27, #24]!
  40be3c:	cbz	x8, 40bf58 <rtnl_dump_filter_nc@@Base+0x21c>
  40be40:	mov	x25, x21
  40be44:	mov	w24, w23
  40be48:	b	40be68 <rtnl_dump_filter_nc@@Base+0x12c>
  40be4c:	ldr	w8, [x25]
  40be50:	add	w8, w8, #0x3
  40be54:	and	w8, w8, #0xfffffffc
  40be58:	sub	w24, w24, w8
  40be5c:	cmp	w24, #0xf
  40be60:	add	x25, x25, x8
  40be64:	b.le	40be38 <rtnl_dump_filter_nc@@Base+0xfc>
  40be68:	ldr	w8, [x25]
  40be6c:	cmp	w8, #0x10
  40be70:	b.cc	40be38 <rtnl_dump_filter_nc@@Base+0xfc>  // b.lo, b.ul, b.last
  40be74:	cmp	w8, w24
  40be78:	b.hi	40be38 <rtnl_dump_filter_nc@@Base+0xfc>  // b.pmore
  40be7c:	ldrh	w9, [x27, #16]
  40be80:	ldrh	w10, [x25, #6]
  40be84:	ldur	w11, [x29, #-12]
  40be88:	bic	w9, w10, w9
  40be8c:	strh	w9, [x25, #6]
  40be90:	cbnz	w11, 40be50 <rtnl_dump_filter_nc@@Base+0x114>
  40be94:	ldr	w10, [x25, #12]
  40be98:	ldr	w11, [x19, #8]
  40be9c:	cmp	w10, w11
  40bea0:	b.ne	40be50 <rtnl_dump_filter_nc@@Base+0x114>  // b.any
  40bea4:	ldr	w10, [x25, #8]
  40bea8:	ldr	w11, [x19, #32]
  40beac:	cmp	w10, w11
  40beb0:	b.ne	40be50 <rtnl_dump_filter_nc@@Base+0x114>  // b.any
  40beb4:	ldrh	w10, [x25, #4]
  40beb8:	tst	w9, #0x10
  40bebc:	csinc	w28, w28, wzr, eq  // eq = none
  40bec0:	cmp	w10, #0x2
  40bec4:	b.eq	40bf98 <rtnl_dump_filter_nc@@Base+0x25c>  // b.none
  40bec8:	cmp	w10, #0x3
  40becc:	b.eq	40beec <rtnl_dump_filter_nc@@Base+0x1b0>  // b.none
  40bed0:	ldr	x9, [x19, #40]
  40bed4:	cbnz	x9, 40be50 <rtnl_dump_filter_nc@@Base+0x114>
  40bed8:	ldp	x8, x1, [x27]
  40bedc:	mov	x0, x25
  40bee0:	blr	x8
  40bee4:	tbz	w0, #31, 40be4c <rtnl_dump_filter_nc@@Base+0x110>
  40bee8:	b	40bfe4 <rtnl_dump_filter_nc@@Base+0x2a8>
  40beec:	cmp	w8, #0x14
  40bef0:	b.cc	40c04c <rtnl_dump_filter_nc@@Base+0x310>  // b.lo, b.ul, b.last
  40bef4:	ldr	w22, [x25, #16]
  40bef8:	tbnz	w22, #31, 40c094 <rtnl_dump_filter_nc@@Base+0x358>
  40befc:	mov	w22, #0x1                   	// #1
  40bf00:	b	40be38 <rtnl_dump_filter_nc@@Base+0xfc>
  40bf04:	mov	w23, wzr
  40bf08:	b	40bf18 <rtnl_dump_filter_nc@@Base+0x1dc>
  40bf0c:	mov	x8, x26
  40bf10:	ldr	x9, [x8], #24
  40bf14:	cbnz	x9, 40bf10 <rtnl_dump_filter_nc@@Base+0x1d4>
  40bf18:	mov	x0, x21
  40bf1c:	bl	404e80 <free@plt>
  40bf20:	mov	w24, w23
  40bf24:	ldrb	w8, [sp, #104]
  40bf28:	tbnz	w8, #5, 40bf74 <rtnl_dump_filter_nc@@Base+0x238>
  40bf2c:	cbnz	w24, 40c108 <rtnl_dump_filter_nc@@Base+0x3cc>
  40bf30:	ldr	w24, [x19]
  40bf34:	ldr	x22, [sp, #72]
  40bf38:	add	x1, sp, #0x38
  40bf3c:	mov	w2, #0x22                  	// #34
  40bf40:	mov	w0, w24
  40bf44:	stp	xzr, xzr, [x22]
  40bf48:	bl	40d848 <__parse_rtattr_nested_compat@@Base+0x110>
  40bf4c:	mov	w23, w0
  40bf50:	tbz	w0, #31, 40bdd0 <rtnl_dump_filter_nc@@Base+0x94>
  40bf54:	b	40c028 <rtnl_dump_filter_nc@@Base+0x2ec>
  40bf58:	mov	x0, x21
  40bf5c:	bl	404e80 <free@plt>
  40bf60:	cbnz	w22, 40c088 <rtnl_dump_filter_nc@@Base+0x34c>
  40bf64:	ldr	x26, [sp]
  40bf68:	mov	w25, #0x8000                	// #32768
  40bf6c:	ldrb	w8, [sp, #104]
  40bf70:	tbz	w8, #5, 40bf2c <rtnl_dump_filter_nc@@Base+0x1f0>
  40bf74:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  40bf78:	ldr	x8, [x8, #3992]
  40bf7c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x640>
  40bf80:	mov	w1, #0x12                  	// #18
  40bf84:	mov	w2, #0x1                   	// #1
  40bf88:	ldr	x3, [x8]
  40bf8c:	add	x0, x0, #0x452
  40bf90:	bl	404ee0 <fwrite@plt>
  40bf94:	b	40bf30 <rtnl_dump_filter_nc@@Base+0x1f4>
  40bf98:	cmp	w8, #0x23
  40bf9c:	b.ls	40c064 <rtnl_dump_filter_nc@@Base+0x328>  // b.plast
  40bfa0:	ldr	w8, [x25, #16]
  40bfa4:	neg	w20, w8
  40bfa8:	bl	405010 <__errno_location@plt>
  40bfac:	str	w20, [x0]
  40bfb0:	ldr	w8, [x19, #36]
  40bfb4:	cmp	w8, #0x4
  40bfb8:	b.ne	40bfcc <rtnl_dump_filter_nc@@Base+0x290>  // b.any
  40bfbc:	cmp	w20, #0x2
  40bfc0:	b.eq	40bfd4 <rtnl_dump_filter_nc@@Base+0x298>  // b.none
  40bfc4:	cmp	w20, #0x5f
  40bfc8:	b.eq	40bfd4 <rtnl_dump_filter_nc@@Base+0x298>  // b.none
  40bfcc:	ldrb	w8, [x19, #48]
  40bfd0:	tbz	w8, #1, 40c0d0 <rtnl_dump_filter_nc@@Base+0x394>
  40bfd4:	mov	x0, x21
  40bfd8:	bl	404e80 <free@plt>
  40bfdc:	mov	w23, #0xffffffff            	// #-1
  40bfe0:	b	40c028 <rtnl_dump_filter_nc@@Base+0x2ec>
  40bfe4:	mov	w26, w0
  40bfe8:	mov	x0, x21
  40bfec:	bl	404e80 <free@plt>
  40bff0:	mov	w23, w26
  40bff4:	b	40c028 <rtnl_dump_filter_nc@@Base+0x2ec>
  40bff8:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  40bffc:	ldr	x8, [x8, #3992]
  40c000:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x640>
  40c004:	add	x0, x0, #0x5e9
  40c008:	mov	w1, #0x20                  	// #32
  40c00c:	ldr	x3, [x8]
  40c010:	mov	w2, #0x1                   	// #1
  40c014:	bl	404ee0 <fwrite@plt>
  40c018:	mov	w23, #0xfffffff4            	// #-12
  40c01c:	b	40c028 <rtnl_dump_filter_nc@@Base+0x2ec>
  40c020:	mov	x0, x21
  40c024:	bl	404e80 <free@plt>
  40c028:	mov	w0, w23
  40c02c:	ldp	x20, x19, [sp, #224]
  40c030:	ldp	x22, x21, [sp, #208]
  40c034:	ldp	x24, x23, [sp, #192]
  40c038:	ldp	x26, x25, [sp, #176]
  40c03c:	ldp	x28, x27, [sp, #160]
  40c040:	ldp	x29, x30, [sp, #144]
  40c044:	add	sp, sp, #0xf0
  40c048:	ret
  40c04c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  40c050:	ldr	x8, [x8, #3992]
  40c054:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x640>
  40c058:	add	x0, x0, #0x60a
  40c05c:	mov	w1, #0xf                   	// #15
  40c060:	b	40c078 <rtnl_dump_filter_nc@@Base+0x33c>
  40c064:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  40c068:	ldr	x8, [x8, #3992]
  40c06c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x640>
  40c070:	add	x0, x0, #0x3ac
  40c074:	mov	w1, #0x10                  	// #16
  40c078:	ldr	x3, [x8]
  40c07c:	mov	w2, #0x1                   	// #1
  40c080:	bl	404ee0 <fwrite@plt>
  40c084:	b	40bfd4 <rtnl_dump_filter_nc@@Base+0x298>
  40c088:	cbnz	w28, 40c0e0 <rtnl_dump_filter_nc@@Base+0x3a4>
  40c08c:	mov	w23, wzr
  40c090:	b	40c028 <rtnl_dump_filter_nc@@Base+0x2ec>
  40c094:	neg	w19, w22
  40c098:	bl	405010 <__errno_location@plt>
  40c09c:	cmn	w22, #0x2
  40c0a0:	str	w19, [x0]
  40c0a4:	b.eq	40bfd4 <rtnl_dump_filter_nc@@Base+0x298>  // b.none
  40c0a8:	cmp	w19, #0x5f
  40c0ac:	b.eq	40bfd4 <rtnl_dump_filter_nc@@Base+0x298>  // b.none
  40c0b0:	cmp	w19, #0x5a
  40c0b4:	b.ne	40c0d0 <rtnl_dump_filter_nc@@Base+0x394>  // b.any
  40c0b8:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  40c0bc:	ldr	x8, [x8, #3992]
  40c0c0:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x640>
  40c0c4:	add	x0, x0, #0x61a
  40c0c8:	mov	w1, #0x24                  	// #36
  40c0cc:	b	40c078 <rtnl_dump_filter_nc@@Base+0x33c>
  40c0d0:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x640>
  40c0d4:	add	x0, x0, #0x63f
  40c0d8:	bl	404bb0 <perror@plt>
  40c0dc:	b	40bfd4 <rtnl_dump_filter_nc@@Base+0x298>
  40c0e0:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  40c0e4:	ldr	x8, [x8, #3992]
  40c0e8:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x640>
  40c0ec:	add	x0, x0, #0x5ba
  40c0f0:	mov	w1, #0x2e                  	// #46
  40c0f4:	ldr	x3, [x8]
  40c0f8:	mov	w2, #0x1                   	// #1
  40c0fc:	bl	404ee0 <fwrite@plt>
  40c100:	mov	w23, wzr
  40c104:	b	40c028 <rtnl_dump_filter_nc@@Base+0x2ec>
  40c108:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  40c10c:	ldr	x8, [x8, #3992]
  40c110:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40c114:	add	x1, x1, #0x465
  40c118:	mov	w2, w24
  40c11c:	ldr	x0, [x8]
  40c120:	bl	405060 <fprintf@plt>
  40c124:	mov	w0, #0x1                   	// #1
  40c128:	bl	404ba0 <exit@plt>

000000000040c12c <rtnl_talk@@Base>:
  40c12c:	sub	sp, sp, #0x20
  40c130:	stp	x29, x30, [sp, #16]
  40c134:	ldr	w8, [x1]
  40c138:	mov	x3, x2
  40c13c:	mov	w2, #0x1                   	// #1
  40c140:	mov	w4, #0x1                   	// #1
  40c144:	stp	x1, x8, [sp]
  40c148:	mov	x1, sp
  40c14c:	add	x29, sp, #0x10
  40c150:	bl	40c168 <rtnl_talk_iov@@Base+0x8>
  40c154:	ldp	x29, x30, [sp, #16]
  40c158:	add	sp, sp, #0x20
  40c15c:	ret

000000000040c160 <rtnl_talk_iov@@Base>:
  40c160:	mov	w4, #0x1                   	// #1
  40c164:	b	40c168 <rtnl_talk_iov@@Base+0x8>
  40c168:	sub	sp, sp, #0xd0
  40c16c:	stp	x29, x30, [sp, #112]
  40c170:	add	x29, sp, #0x70
  40c174:	adrp	x8, 40e000 <_IO_stdin_used@@Base+0x640>
  40c178:	sub	x9, x29, #0x10
  40c17c:	add	x8, x8, #0x6b4
  40c180:	str	x9, [sp, #24]
  40c184:	mov	w9, #0xc                   	// #12
  40c188:	str	w9, [sp, #32]
  40c18c:	ldr	x9, [x8]
  40c190:	ldr	w8, [x8, #8]
  40c194:	stp	x22, x21, [sp, #176]
  40c198:	stp	x20, x19, [sp, #192]
  40c19c:	mov	w22, w4
  40c1a0:	mov	x19, x3
  40c1a4:	mov	x20, x2
  40c1a8:	mov	x21, x0
  40c1ac:	stp	x28, x27, [sp, #128]
  40c1b0:	stp	x26, x25, [sp, #144]
  40c1b4:	stp	x24, x23, [sp, #160]
  40c1b8:	stp	x1, x2, [sp, #40]
  40c1bc:	stp	xzr, xzr, [sp, #56]
  40c1c0:	stur	x9, [x29, #-16]
  40c1c4:	stur	w8, [x29, #-8]
  40c1c8:	str	wzr, [sp, #72]
  40c1cc:	cbz	x2, 40c1ec <rtnl_talk_iov@@Base+0x8c>
  40c1d0:	ldr	w10, [x21, #28]
  40c1d4:	cbz	x19, 40c1f4 <rtnl_talk_iov@@Base+0x94>
  40c1d8:	cmp	x20, #0x1
  40c1dc:	b.hi	40c220 <rtnl_talk_iov@@Base+0xc0>  // b.pmore
  40c1e0:	mov	x8, xzr
  40c1e4:	mov	w28, w10
  40c1e8:	b	40c25c <rtnl_talk_iov@@Base+0xfc>
  40c1ec:	mov	w28, wzr
  40c1f0:	b	40c27c <rtnl_talk_iov@@Base+0x11c>
  40c1f4:	mov	x8, x20
  40c1f8:	mov	w28, w10
  40c1fc:	ldr	x9, [x1], #16
  40c200:	add	w28, w28, #0x1
  40c204:	subs	x8, x8, #0x1
  40c208:	ldrh	w10, [x9, #6]
  40c20c:	str	w28, [x9, #8]
  40c210:	orr	w10, w10, #0x4
  40c214:	strh	w10, [x9, #6]
  40c218:	b.ne	40c1fc <rtnl_talk_iov@@Base+0x9c>  // b.any
  40c21c:	b	40c278 <rtnl_talk_iov@@Base+0x118>
  40c220:	and	x8, x20, #0xfffffffffffffffe
  40c224:	add	x9, x1, #0x10
  40c228:	add	w28, w10, w8
  40c22c:	add	w10, w10, #0x2
  40c230:	mov	x11, x8
  40c234:	ldur	x12, [x9, #-16]
  40c238:	ldr	x13, [x9], #32
  40c23c:	sub	w14, w10, #0x1
  40c240:	subs	x11, x11, #0x2
  40c244:	str	w14, [x12, #8]
  40c248:	str	w10, [x13, #8]
  40c24c:	add	w10, w10, #0x2
  40c250:	b.ne	40c234 <rtnl_talk_iov@@Base+0xd4>  // b.any
  40c254:	cmp	x8, x20
  40c258:	b.eq	40c278 <rtnl_talk_iov@@Base+0x118>  // b.none
  40c25c:	add	x9, x1, x8, lsl #4
  40c260:	sub	x8, x20, x8
  40c264:	ldr	x10, [x9], #16
  40c268:	add	w28, w28, #0x1
  40c26c:	subs	x8, x8, #0x1
  40c270:	str	w28, [x10, #8]
  40c274:	b.ne	40c264 <rtnl_talk_iov@@Base+0x104>  // b.any
  40c278:	str	w28, [x21, #28]
  40c27c:	ldr	w0, [x21]
  40c280:	add	x1, sp, #0x18
  40c284:	mov	w2, wzr
  40c288:	bl	404d40 <sendmsg@plt>
  40c28c:	tbnz	w0, #31, 40c65c <rtnl_talk_iov@@Base+0x4fc>
  40c290:	sub	x8, x29, #0x20
  40c294:	mov	w9, #0x1                   	// #1
  40c298:	stp	x8, x9, [sp, #40]
  40c29c:	ldr	w27, [x21]
  40c2a0:	add	x1, sp, #0x18
  40c2a4:	mov	w2, #0x22                  	// #34
  40c2a8:	stp	xzr, xzr, [x29, #-32]
  40c2ac:	mov	w0, w27
  40c2b0:	bl	40d848 <__parse_rtattr_nested_compat@@Base+0x110>
  40c2b4:	mov	w26, w0
  40c2b8:	tbnz	w0, #31, 40c610 <rtnl_talk_iov@@Base+0x4b0>
  40c2bc:	mov	w8, w28
  40c2c0:	eor	w9, w22, #0x1
  40c2c4:	mov	x23, xzr
  40c2c8:	str	w9, [sp, #12]
  40c2cc:	sub	x25, x29, #0x20
  40c2d0:	mov	w9, #0x8000                	// #32768
  40c2d4:	sub	x8, x8, x20
  40c2d8:	str	x8, [sp, #16]
  40c2dc:	sxtw	x23, w23
  40c2e0:	cmp	w26, #0x8, lsl #12
  40c2e4:	csel	w26, w26, w9, gt
  40c2e8:	mov	x0, x26
  40c2ec:	mov	x24, x23
  40c2f0:	bl	404cc0 <malloc@plt>
  40c2f4:	cbz	x0, 40c634 <rtnl_talk_iov@@Base+0x4d4>
  40c2f8:	mov	x22, x0
  40c2fc:	stp	x0, x26, [x25]
  40c300:	add	x1, sp, #0x18
  40c304:	mov	w0, w27
  40c308:	mov	w2, wzr
  40c30c:	bl	40d848 <__parse_rtattr_nested_compat@@Base+0x110>
  40c310:	mov	w26, w0
  40c314:	tbnz	w0, #31, 40c66c <rtnl_talk_iov@@Base+0x50c>
  40c318:	ldr	w2, [sp, #32]
  40c31c:	cmp	w2, #0xc
  40c320:	b.ne	40c6ac <rtnl_talk_iov@@Base+0x54c>  // b.any
  40c324:	cmp	w26, #0x10
  40c328:	add	x23, x24, #0x1
  40c32c:	b.cc	40c578 <rtnl_talk_iov@@Base+0x418>  // b.lo, b.ul, b.last
  40c330:	cbz	x19, 40c3f0 <rtnl_talk_iov@@Base+0x290>
  40c334:	ldur	w8, [x29, #-12]
  40c338:	mov	x25, x22
  40c33c:	b	40c358 <rtnl_talk_iov@@Base+0x1f8>
  40c340:	add	w9, w27, #0x3
  40c344:	and	x9, x9, #0xfffffffc
  40c348:	sub	w26, w26, w9
  40c34c:	cmp	w26, #0xf
  40c350:	add	x25, x25, x9
  40c354:	b.ls	40c578 <rtnl_talk_iov@@Base+0x418>  // b.plast
  40c358:	ldr	w27, [x25]
  40c35c:	cmp	w27, w26
  40c360:	b.gt	40c5dc <rtnl_talk_iov@@Base+0x47c>
  40c364:	sub	w9, w27, #0x10
  40c368:	tbnz	w9, #31, 40c5dc <rtnl_talk_iov@@Base+0x47c>
  40c36c:	cbnz	w8, 40c340 <rtnl_talk_iov@@Base+0x1e0>
  40c370:	ldr	w10, [x25, #12]
  40c374:	ldr	w11, [x21, #8]
  40c378:	cmp	w10, w11
  40c37c:	b.ne	40c340 <rtnl_talk_iov@@Base+0x1e0>  // b.any
  40c380:	ldr	w10, [x25, #8]
  40c384:	cmp	w10, w28
  40c388:	b.hi	40c340 <rtnl_talk_iov@@Base+0x1e0>  // b.pmore
  40c38c:	ldr	x11, [sp, #16]
  40c390:	cmp	x11, x10
  40c394:	b.hi	40c340 <rtnl_talk_iov@@Base+0x1e0>  // b.pmore
  40c398:	ldrh	w8, [x25, #4]
  40c39c:	cmp	w8, #0x2
  40c3a0:	b.ne	40c6a0 <rtnl_talk_iov@@Base+0x540>  // b.any
  40c3a4:	cmp	w9, #0x13
  40c3a8:	b.ls	40c678 <rtnl_talk_iov@@Base+0x518>  // b.plast
  40c3ac:	ldr	w8, [x25, #16]
  40c3b0:	cmp	w8, #0x0
  40c3b4:	cset	w27, ne  // ne = any
  40c3b8:	cbz	w8, 40c3e0 <rtnl_talk_iov@@Base+0x280>
  40c3bc:	neg	w26, w8
  40c3c0:	bl	405010 <__errno_location@plt>
  40c3c4:	str	w26, [x0]
  40c3c8:	ldr	w8, [x21, #36]
  40c3cc:	ldr	w9, [sp, #12]
  40c3d0:	cmp	w8, #0x4
  40c3d4:	cset	w8, eq  // eq = none
  40c3d8:	orr	w8, w8, w9
  40c3dc:	tbz	w8, #0, 40c53c <rtnl_talk_iov@@Base+0x3dc>
  40c3e0:	cmp	x23, x20
  40c3e4:	str	x22, [x19]
  40c3e8:	b.cc	40c4d0 <rtnl_talk_iov@@Base+0x370>  // b.lo, b.ul, b.last
  40c3ec:	b	40c694 <rtnl_talk_iov@@Base+0x534>
  40c3f0:	mov	x25, x22
  40c3f4:	b	40c410 <rtnl_talk_iov@@Base+0x2b0>
  40c3f8:	add	w8, w27, #0x3
  40c3fc:	and	x8, x8, #0xfffffffc
  40c400:	sub	w26, w26, w8
  40c404:	cmp	w26, #0xf
  40c408:	add	x25, x25, x8
  40c40c:	b.ls	40c578 <rtnl_talk_iov@@Base+0x418>  // b.plast
  40c410:	ldr	w27, [x25]
  40c414:	cmp	w27, w26
  40c418:	b.gt	40c5dc <rtnl_talk_iov@@Base+0x47c>
  40c41c:	sub	w8, w27, #0x10
  40c420:	tbnz	w8, #31, 40c5dc <rtnl_talk_iov@@Base+0x47c>
  40c424:	ldur	w9, [x29, #-12]
  40c428:	cbnz	w9, 40c3f8 <rtnl_talk_iov@@Base+0x298>
  40c42c:	ldr	w9, [x25, #12]
  40c430:	ldr	w10, [x21, #8]
  40c434:	cmp	w9, w10
  40c438:	b.ne	40c3f8 <rtnl_talk_iov@@Base+0x298>  // b.any
  40c43c:	ldr	w9, [x25, #8]
  40c440:	cmp	w9, w28
  40c444:	b.hi	40c3f8 <rtnl_talk_iov@@Base+0x298>  // b.pmore
  40c448:	ldr	x10, [sp, #16]
  40c44c:	cmp	x10, x9
  40c450:	b.hi	40c3f8 <rtnl_talk_iov@@Base+0x298>  // b.pmore
  40c454:	ldrh	w9, [x25, #4]
  40c458:	cmp	w9, #0x2
  40c45c:	b.eq	40c484 <rtnl_talk_iov@@Base+0x324>  // b.none
  40c460:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  40c464:	ldr	x8, [x8, #3992]
  40c468:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x640>
  40c46c:	mov	w1, #0x14                  	// #20
  40c470:	mov	w2, #0x1                   	// #1
  40c474:	ldr	x3, [x8]
  40c478:	add	x0, x0, #0x687
  40c47c:	bl	404ee0 <fwrite@plt>
  40c480:	b	40c3f8 <rtnl_talk_iov@@Base+0x298>
  40c484:	cmp	w8, #0x14
  40c488:	b.cc	40c678 <rtnl_talk_iov@@Base+0x518>  // b.lo, b.ul, b.last
  40c48c:	ldr	w8, [x25, #16]
  40c490:	cmp	w8, #0x0
  40c494:	cset	w27, ne  // ne = any
  40c498:	cbz	w8, 40c4c0 <rtnl_talk_iov@@Base+0x360>
  40c49c:	neg	w26, w8
  40c4a0:	bl	405010 <__errno_location@plt>
  40c4a4:	str	w26, [x0]
  40c4a8:	ldr	w8, [x21, #36]
  40c4ac:	ldr	w9, [sp, #12]
  40c4b0:	cmp	w8, #0x4
  40c4b4:	cset	w8, eq  // eq = none
  40c4b8:	orr	w8, w8, w9
  40c4bc:	tbz	w8, #0, 40c4fc <rtnl_talk_iov@@Base+0x39c>
  40c4c0:	mov	x0, x22
  40c4c4:	bl	404e80 <free@plt>
  40c4c8:	cmp	x23, x20
  40c4cc:	b.cs	40c694 <rtnl_talk_iov@@Base+0x534>  // b.hs, b.nlast
  40c4d0:	ldr	w27, [x21]
  40c4d4:	ldr	x25, [sp, #40]
  40c4d8:	add	x1, sp, #0x18
  40c4dc:	mov	w2, #0x22                  	// #34
  40c4e0:	mov	w0, w27
  40c4e4:	stp	xzr, xzr, [x25]
  40c4e8:	bl	40d848 <__parse_rtattr_nested_compat@@Base+0x110>
  40c4ec:	mov	w26, w0
  40c4f0:	mov	w9, #0x8000                	// #32768
  40c4f4:	tbz	w0, #31, 40c2e0 <rtnl_talk_iov@@Base+0x180>
  40c4f8:	b	40c610 <rtnl_talk_iov@@Base+0x4b0>
  40c4fc:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x10640>
  40c500:	ldr	w8, [x25, #16]
  40c504:	ldr	x9, [x9, #3992]
  40c508:	neg	w0, w8
  40c50c:	ldr	x26, [x9]
  40c510:	bl	404db0 <strerror@plt>
  40c514:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40c518:	mov	x2, x0
  40c51c:	mov	x0, x26
  40c520:	add	x1, x1, #0x69c
  40c524:	bl	405060 <fprintf@plt>
  40c528:	mov	x0, x22
  40c52c:	bl	404e80 <free@plt>
  40c530:	cmp	x23, x20
  40c534:	b.cc	40c4d0 <rtnl_talk_iov@@Base+0x370>  // b.lo, b.ul, b.last
  40c538:	b	40c694 <rtnl_talk_iov@@Base+0x534>
  40c53c:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x10640>
  40c540:	ldr	w8, [x25, #16]
  40c544:	ldr	x9, [x9, #3992]
  40c548:	neg	w0, w8
  40c54c:	ldr	x26, [x9]
  40c550:	bl	404db0 <strerror@plt>
  40c554:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40c558:	mov	x2, x0
  40c55c:	mov	x0, x26
  40c560:	add	x1, x1, #0x69c
  40c564:	bl	405060 <fprintf@plt>
  40c568:	cmp	x23, x20
  40c56c:	str	x22, [x19]
  40c570:	b.cc	40c4d0 <rtnl_talk_iov@@Base+0x370>  // b.lo, b.ul, b.last
  40c574:	b	40c694 <rtnl_talk_iov@@Base+0x534>
  40c578:	mov	x0, x22
  40c57c:	bl	404e80 <free@plt>
  40c580:	ldrb	w8, [sp, #72]
  40c584:	tbnz	w8, #5, 40c5b8 <rtnl_talk_iov@@Base+0x458>
  40c588:	cbnz	w26, 40c6c4 <rtnl_talk_iov@@Base+0x564>
  40c58c:	ldr	w27, [x21]
  40c590:	ldr	x25, [sp, #40]
  40c594:	add	x1, sp, #0x18
  40c598:	mov	w2, #0x22                  	// #34
  40c59c:	mov	w0, w27
  40c5a0:	stp	xzr, xzr, [x25]
  40c5a4:	bl	40d848 <__parse_rtattr_nested_compat@@Base+0x110>
  40c5a8:	mov	w26, w0
  40c5ac:	mov	w9, #0x8000                	// #32768
  40c5b0:	tbz	w0, #31, 40c2dc <rtnl_talk_iov@@Base+0x17c>
  40c5b4:	b	40c610 <rtnl_talk_iov@@Base+0x4b0>
  40c5b8:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  40c5bc:	ldr	x8, [x8, #3992]
  40c5c0:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x640>
  40c5c4:	mov	w1, #0x12                  	// #18
  40c5c8:	mov	w2, #0x1                   	// #1
  40c5cc:	ldr	x3, [x8]
  40c5d0:	add	x0, x0, #0x452
  40c5d4:	bl	404ee0 <fwrite@plt>
  40c5d8:	b	40c58c <rtnl_talk_iov@@Base+0x42c>
  40c5dc:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x10640>
  40c5e0:	ldrb	w8, [sp, #72]
  40c5e4:	ldr	x9, [x9, #3992]
  40c5e8:	ldr	x3, [x9]
  40c5ec:	tbz	w8, #5, 40c6e0 <rtnl_talk_iov@@Base+0x580>
  40c5f0:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x640>
  40c5f4:	add	x0, x0, #0x421
  40c5f8:	mov	w1, #0x12                  	// #18
  40c5fc:	mov	w2, #0x1                   	// #1
  40c600:	bl	404ee0 <fwrite@plt>
  40c604:	mov	x0, x22
  40c608:	bl	404e80 <free@plt>
  40c60c:	mov	w26, #0xffffffff            	// #-1
  40c610:	mov	w0, w26
  40c614:	ldp	x20, x19, [sp, #192]
  40c618:	ldp	x22, x21, [sp, #176]
  40c61c:	ldp	x24, x23, [sp, #160]
  40c620:	ldp	x26, x25, [sp, #144]
  40c624:	ldp	x28, x27, [sp, #128]
  40c628:	ldp	x29, x30, [sp, #112]
  40c62c:	add	sp, sp, #0xd0
  40c630:	ret
  40c634:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  40c638:	ldr	x8, [x8, #3992]
  40c63c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x640>
  40c640:	add	x0, x0, #0x5e9
  40c644:	mov	w1, #0x20                  	// #32
  40c648:	ldr	x3, [x8]
  40c64c:	mov	w2, #0x1                   	// #1
  40c650:	bl	404ee0 <fwrite@plt>
  40c654:	mov	w26, #0xfffffff4            	// #-12
  40c658:	b	40c610 <rtnl_talk_iov@@Base+0x4b0>
  40c65c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x640>
  40c660:	add	x0, x0, #0x651
  40c664:	bl	404bb0 <perror@plt>
  40c668:	b	40c60c <rtnl_talk_iov@@Base+0x4ac>
  40c66c:	mov	x0, x22
  40c670:	bl	404e80 <free@plt>
  40c674:	b	40c610 <rtnl_talk_iov@@Base+0x4b0>
  40c678:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  40c67c:	ldr	x8, [x8, #3992]
  40c680:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x640>
  40c684:	add	x0, x0, #0x3ac
  40c688:	mov	w1, #0x10                  	// #16
  40c68c:	ldr	x3, [x8]
  40c690:	b	40c5fc <rtnl_talk_iov@@Base+0x49c>
  40c694:	cmp	w27, #0x0
  40c698:	csinv	w26, wzr, w24, eq  // eq = none
  40c69c:	b	40c610 <rtnl_talk_iov@@Base+0x4b0>
  40c6a0:	mov	w26, wzr
  40c6a4:	str	x22, [x19]
  40c6a8:	b	40c610 <rtnl_talk_iov@@Base+0x4b0>
  40c6ac:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  40c6b0:	ldr	x8, [x8, #3992]
  40c6b4:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40c6b8:	add	x1, x1, #0x66a
  40c6bc:	ldr	x0, [x8]
  40c6c0:	b	40c6f0 <rtnl_talk_iov@@Base+0x590>
  40c6c4:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  40c6c8:	ldr	x8, [x8, #3992]
  40c6cc:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40c6d0:	add	x1, x1, #0x465
  40c6d4:	mov	w2, w26
  40c6d8:	ldr	x0, [x8]
  40c6dc:	b	40c6f0 <rtnl_talk_iov@@Base+0x590>
  40c6e0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40c6e4:	add	x1, x1, #0x434
  40c6e8:	mov	x0, x3
  40c6ec:	mov	w2, w27
  40c6f0:	bl	405060 <fprintf@plt>
  40c6f4:	mov	w0, #0x1                   	// #1
  40c6f8:	bl	404ba0 <exit@plt>

000000000040c6fc <rtnl_talk_suppress_rtnl_errmsg@@Base>:
  40c6fc:	sub	sp, sp, #0x20
  40c700:	stp	x29, x30, [sp, #16]
  40c704:	ldr	w8, [x1]
  40c708:	mov	x3, x2
  40c70c:	mov	w2, #0x1                   	// #1
  40c710:	mov	w4, wzr
  40c714:	stp	x1, x8, [sp]
  40c718:	mov	x1, sp
  40c71c:	add	x29, sp, #0x10
  40c720:	bl	40c168 <rtnl_talk_iov@@Base+0x8>
  40c724:	ldp	x29, x30, [sp, #16]
  40c728:	add	sp, sp, #0x20
  40c72c:	ret

000000000040c730 <rtnl_listen_all_nsid@@Base>:
  40c730:	stp	x29, x30, [sp, #-32]!
  40c734:	mov	x29, sp
  40c738:	mov	w8, #0x1                   	// #1
  40c73c:	str	w8, [x29, #28]
  40c740:	str	x19, [sp, #16]
  40c744:	mov	x19, x0
  40c748:	ldr	w0, [x0]
  40c74c:	add	x3, x29, #0x1c
  40c750:	mov	w1, #0x10e                 	// #270
  40c754:	mov	w2, #0x8                   	// #8
  40c758:	mov	w4, #0x4                   	// #4
  40c75c:	bl	404cd0 <setsockopt@plt>
  40c760:	tbnz	w0, #31, 40c780 <rtnl_listen_all_nsid@@Base+0x50>
  40c764:	ldr	w8, [x19, #48]
  40c768:	mov	w0, wzr
  40c76c:	orr	w8, w8, #0x1
  40c770:	str	w8, [x19, #48]
  40c774:	ldr	x19, [sp, #16]
  40c778:	ldp	x29, x30, [sp], #32
  40c77c:	ret
  40c780:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x640>
  40c784:	add	x0, x0, #0x3bd
  40c788:	bl	404bb0 <perror@plt>
  40c78c:	mov	w0, #0xffffffff            	// #-1
  40c790:	ldr	x19, [sp, #16]
  40c794:	ldp	x29, x30, [sp], #32
  40c798:	ret

000000000040c79c <rtnl_listen@@Base>:
  40c79c:	stp	x29, x30, [sp, #-96]!
  40c7a0:	stp	x28, x27, [sp, #16]
  40c7a4:	stp	x26, x25, [sp, #32]
  40c7a8:	stp	x24, x23, [sp, #48]
  40c7ac:	stp	x22, x21, [sp, #64]
  40c7b0:	stp	x20, x19, [sp, #80]
  40c7b4:	mov	x29, sp
  40c7b8:	sub	sp, sp, #0x6, lsl #12
  40c7bc:	sub	sp, sp, #0x70
  40c7c0:	sub	x27, x29, #0x60
  40c7c4:	adrp	x8, 40e000 <_IO_stdin_used@@Base+0x640>
  40c7c8:	sub	x9, x29, #0x18
  40c7cc:	mov	w10, #0xc                   	// #12
  40c7d0:	add	x8, x8, #0x6b4
  40c7d4:	stur	x9, [x29, #-96]
  40c7d8:	sub	x9, x29, #0x28
  40c7dc:	str	w10, [x27, #8]
  40c7e0:	mov	w10, #0x1                   	// #1
  40c7e4:	stp	x9, x10, [x29, #-80]
  40c7e8:	ldr	x9, [x8]
  40c7ec:	ldr	w8, [x8, #8]
  40c7f0:	stp	xzr, xzr, [x29, #-64]
  40c7f4:	str	wzr, [x27, #48]
  40c7f8:	stur	x9, [x29, #-24]
  40c7fc:	str	w8, [x27, #80]
  40c800:	ldrb	w8, [x0, #48]
  40c804:	mov	x19, x2
  40c808:	mov	x20, x0
  40c80c:	mov	x21, x1
  40c810:	tbz	w8, #0, 40c820 <rtnl_listen@@Base+0x84>
  40c814:	add	x8, sp, #0x10
  40c818:	mov	w9, #0x2000                	// #8192
  40c81c:	stp	x8, x9, [x29, #-64]
  40c820:	adrp	x28, 41e000 <_IO_stdin_used@@Base+0x10640>
  40c824:	ldr	x28, [x28, #3992]
  40c828:	add	x8, sp, #0x2, lsl #12
  40c82c:	add	x8, x8, #0x10
  40c830:	mov	w22, #0x4000                	// #16384
  40c834:	mov	w23, #0xffffffff            	// #-1
  40c838:	stur	x8, [x29, #-40]
  40c83c:	stur	x22, [x29, #-32]
  40c840:	ldr	w0, [x20]
  40c844:	sub	x1, x29, #0x60
  40c848:	mov	w2, wzr
  40c84c:	bl	404b70 <recvmsg@plt>
  40c850:	mov	x24, x0
  40c854:	tbnz	w24, #31, 40c8d0 <rtnl_listen@@Base+0x134>
  40c858:	cbz	w24, 40ca10 <rtnl_listen@@Base+0x274>
  40c85c:	ldr	w2, [x27, #8]
  40c860:	cmp	w2, #0xc
  40c864:	b.ne	40ca24 <rtnl_listen@@Base+0x288>  // b.any
  40c868:	ldrb	w8, [x20, #48]
  40c86c:	tbnz	w8, #0, 40c91c <rtnl_listen@@Base+0x180>
  40c870:	cmp	w24, #0x10
  40c874:	b.cc	40c8c0 <rtnl_listen@@Base+0x124>  // b.lo, b.ul, b.last
  40c878:	add	x25, sp, #0x2, lsl #12
  40c87c:	add	x25, x25, #0x10
  40c880:	ldr	w26, [x25]
  40c884:	cmp	w26, w24
  40c888:	b.gt	40c9c8 <rtnl_listen@@Base+0x22c>
  40c88c:	sub	w8, w26, #0x10
  40c890:	tbnz	w8, #31, 40c9c8 <rtnl_listen@@Base+0x22c>
  40c894:	add	x0, sp, #0x8
  40c898:	mov	x1, x25
  40c89c:	mov	x2, x19
  40c8a0:	blr	x21
  40c8a4:	tbnz	w0, #31, 40c9ec <rtnl_listen@@Base+0x250>
  40c8a8:	add	w8, w26, #0x3
  40c8ac:	and	x8, x8, #0xfffffffc
  40c8b0:	sub	w24, w24, w8
  40c8b4:	cmp	w24, #0xf
  40c8b8:	add	x25, x25, x8
  40c8bc:	b.hi	40c880 <rtnl_listen@@Base+0xe4>  // b.pmore
  40c8c0:	ldrb	w8, [x27, #48]
  40c8c4:	tbnz	w8, #5, 40c9ac <rtnl_listen@@Base+0x210>
  40c8c8:	cbz	w24, 40c83c <rtnl_listen@@Base+0xa0>
  40c8cc:	b	40ca34 <rtnl_listen@@Base+0x298>
  40c8d0:	bl	405010 <__errno_location@plt>
  40c8d4:	mov	x24, x0
  40c8d8:	ldr	w0, [x0]
  40c8dc:	cmp	w0, #0x4
  40c8e0:	b.eq	40c83c <rtnl_listen@@Base+0xa0>  // b.none
  40c8e4:	cmp	w0, #0xb
  40c8e8:	b.eq	40c83c <rtnl_listen@@Base+0xa0>  // b.none
  40c8ec:	ldr	x25, [x28]
  40c8f0:	bl	404db0 <strerror@plt>
  40c8f4:	ldr	w3, [x24]
  40c8f8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40c8fc:	mov	x2, x0
  40c900:	mov	x0, x25
  40c904:	add	x1, x1, #0x3d5
  40c908:	bl	405060 <fprintf@plt>
  40c90c:	ldr	w8, [x24]
  40c910:	cmp	w8, #0x69
  40c914:	b.eq	40c83c <rtnl_listen@@Base+0xa0>  // b.none
  40c918:	b	40c9e8 <rtnl_listen@@Base+0x24c>
  40c91c:	ldur	x10, [x29, #-64]
  40c920:	str	w23, [sp, #8]
  40c924:	cbz	x10, 40c870 <rtnl_listen@@Base+0xd4>
  40c928:	ldur	x8, [x29, #-56]
  40c92c:	cmp	x8, #0x10
  40c930:	b.cc	40c870 <rtnl_listen@@Base+0xd4>  // b.lo, b.ul, b.last
  40c934:	add	x8, x10, x8
  40c938:	mov	x9, x10
  40c93c:	ldr	w10, [x10, #8]
  40c940:	cmp	w10, #0x10e
  40c944:	b.ne	40c968 <rtnl_listen@@Base+0x1cc>  // b.any
  40c948:	ldr	w10, [x9, #12]
  40c94c:	cmp	w10, #0x8
  40c950:	b.ne	40c968 <rtnl_listen@@Base+0x1cc>  // b.any
  40c954:	ldr	x10, [x9]
  40c958:	cmp	x10, #0x14
  40c95c:	b.ne	40c968 <rtnl_listen@@Base+0x1cc>  // b.any
  40c960:	ldr	w10, [x9, #16]
  40c964:	str	w10, [sp, #8]
  40c968:	ldr	x10, [x9]
  40c96c:	cmp	x10, #0x10
  40c970:	b.cc	40c870 <rtnl_listen@@Base+0xd4>  // b.lo, b.ul, b.last
  40c974:	add	x10, x10, #0x7
  40c978:	and	x10, x10, #0xfffffffffffffff8
  40c97c:	add	x10, x9, x10
  40c980:	add	x11, x10, #0x10
  40c984:	cmp	x11, x8
  40c988:	b.hi	40c870 <rtnl_listen@@Base+0xd4>  // b.pmore
  40c98c:	ldr	x11, [x10]
  40c990:	add	x11, x11, #0x7
  40c994:	and	x11, x11, #0xfffffffffffffff8
  40c998:	add	x11, x10, x11
  40c99c:	cmp	x11, x8
  40c9a0:	b.hi	40c870 <rtnl_listen@@Base+0xd4>  // b.pmore
  40c9a4:	cbnz	x9, 40c938 <rtnl_listen@@Base+0x19c>
  40c9a8:	b	40c870 <rtnl_listen@@Base+0xd4>
  40c9ac:	ldr	x3, [x28]
  40c9b0:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x640>
  40c9b4:	mov	w1, #0x12                  	// #18
  40c9b8:	mov	w2, #0x1                   	// #1
  40c9bc:	add	x0, x0, #0x452
  40c9c0:	bl	404ee0 <fwrite@plt>
  40c9c4:	b	40c83c <rtnl_listen@@Base+0xa0>
  40c9c8:	ldrb	w8, [x27, #48]
  40c9cc:	ldr	x3, [x28]
  40c9d0:	tbz	w8, #5, 40ca48 <rtnl_listen@@Base+0x2ac>
  40c9d4:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x640>
  40c9d8:	add	x0, x0, #0x421
  40c9dc:	mov	w1, #0x12                  	// #18
  40c9e0:	mov	w2, #0x1                   	// #1
  40c9e4:	bl	404ee0 <fwrite@plt>
  40c9e8:	mov	w0, #0xffffffff            	// #-1
  40c9ec:	add	sp, sp, #0x6, lsl #12
  40c9f0:	add	sp, sp, #0x70
  40c9f4:	ldp	x20, x19, [sp, #80]
  40c9f8:	ldp	x22, x21, [sp, #64]
  40c9fc:	ldp	x24, x23, [sp, #48]
  40ca00:	ldp	x26, x25, [sp, #32]
  40ca04:	ldp	x28, x27, [sp, #16]
  40ca08:	ldp	x29, x30, [sp], #96
  40ca0c:	ret
  40ca10:	ldr	x3, [x28]
  40ca14:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x640>
  40ca18:	add	x0, x0, #0x3f4
  40ca1c:	mov	w1, #0xf                   	// #15
  40ca20:	b	40c9e0 <rtnl_listen@@Base+0x244>
  40ca24:	ldr	x0, [x28]
  40ca28:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40ca2c:	add	x1, x1, #0x404
  40ca30:	b	40ca58 <rtnl_listen@@Base+0x2bc>
  40ca34:	ldr	x0, [x28]
  40ca38:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40ca3c:	add	x1, x1, #0x465
  40ca40:	mov	w2, w24
  40ca44:	b	40ca58 <rtnl_listen@@Base+0x2bc>
  40ca48:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40ca4c:	add	x1, x1, #0x434
  40ca50:	mov	x0, x3
  40ca54:	mov	w2, w26
  40ca58:	bl	405060 <fprintf@plt>
  40ca5c:	mov	w0, #0x1                   	// #1
  40ca60:	bl	404ba0 <exit@plt>

000000000040ca64 <rtnl_from_file@@Base>:
  40ca64:	stp	x29, x30, [sp, #-64]!
  40ca68:	stp	x28, x23, [sp, #16]
  40ca6c:	stp	x22, x21, [sp, #32]
  40ca70:	stp	x20, x19, [sp, #48]
  40ca74:	mov	x29, sp
  40ca78:	sub	sp, sp, #0x4, lsl #12
  40ca7c:	mov	x8, sp
  40ca80:	mov	x20, x2
  40ca84:	mov	x21, x1
  40ca88:	mov	x19, x0
  40ca8c:	add	x22, x8, #0x10
  40ca90:	mov	x0, sp
  40ca94:	mov	w1, #0x1                   	// #1
  40ca98:	mov	w2, #0x10                  	// #16
  40ca9c:	mov	x3, x19
  40caa0:	bl	404e60 <fread@plt>
  40caa4:	cmp	x0, #0x10
  40caa8:	b.ne	40cb2c <rtnl_from_file@@Base+0xc8>  // b.any
  40caac:	ldr	w23, [sp]
  40cab0:	cmp	w23, #0x4, lsl #12
  40cab4:	b.hi	40cafc <rtnl_from_file@@Base+0x98>  // b.pmore
  40cab8:	sub	w8, w23, #0x10
  40cabc:	tbnz	w8, #31, 40cafc <rtnl_from_file@@Base+0x98>
  40cac0:	sub	w8, w23, #0xd
  40cac4:	and	w23, w8, #0xfffffffc
  40cac8:	mov	w1, #0x1                   	// #1
  40cacc:	mov	x0, x22
  40cad0:	mov	x2, x23
  40cad4:	mov	x3, x19
  40cad8:	bl	404e60 <fread@plt>
  40cadc:	cmp	x0, x23
  40cae0:	b.ne	40cb44 <rtnl_from_file@@Base+0xe0>  // b.any
  40cae4:	mov	x1, sp
  40cae8:	mov	x0, xzr
  40caec:	mov	x2, x20
  40caf0:	blr	x21
  40caf4:	tbz	w0, #31, 40ca90 <rtnl_from_file@@Base+0x2c>
  40caf8:	b	40cb60 <rtnl_from_file@@Base+0xfc>
  40cafc:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  40cb00:	ldr	x8, [x8, #3992]
  40cb04:	mov	x0, x19
  40cb08:	ldr	x20, [x8]
  40cb0c:	bl	404c10 <ftell@plt>
  40cb10:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40cb14:	mov	x3, x0
  40cb18:	add	x1, x1, #0x4b5
  40cb1c:	mov	x0, x20
  40cb20:	mov	w2, w23
  40cb24:	bl	405060 <fprintf@plt>
  40cb28:	b	40cb5c <rtnl_from_file@@Base+0xf8>
  40cb2c:	cbnz	x0, 40cb44 <rtnl_from_file@@Base+0xe0>
  40cb30:	mov	x0, x19
  40cb34:	bl	404e10 <feof@plt>
  40cb38:	cbz	w0, 40cb44 <rtnl_from_file@@Base+0xe0>
  40cb3c:	mov	w0, wzr
  40cb40:	b	40cb60 <rtnl_from_file@@Base+0xfc>
  40cb44:	mov	x0, x19
  40cb48:	bl	405090 <ferror@plt>
  40cb4c:	cbnz	w0, 40cb78 <rtnl_from_file@@Base+0x114>
  40cb50:	mov	x0, x19
  40cb54:	bl	404e10 <feof@plt>
  40cb58:	cbnz	w0, 40cb90 <rtnl_from_file@@Base+0x12c>
  40cb5c:	mov	w0, #0xffffffff            	// #-1
  40cb60:	add	sp, sp, #0x4, lsl #12
  40cb64:	ldp	x20, x19, [sp, #48]
  40cb68:	ldp	x22, x21, [sp, #32]
  40cb6c:	ldp	x28, x23, [sp, #16]
  40cb70:	ldp	x29, x30, [sp], #64
  40cb74:	ret
  40cb78:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x640>
  40cb7c:	add	x0, x0, #0x47c
  40cb80:	bl	404bb0 <perror@plt>
  40cb84:	mov	x0, x19
  40cb88:	bl	404e10 <feof@plt>
  40cb8c:	cbz	w0, 40cb5c <rtnl_from_file@@Base+0xf8>
  40cb90:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  40cb94:	ldr	x8, [x8, #3992]
  40cb98:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x640>
  40cb9c:	add	x0, x0, #0x492
  40cba0:	mov	w1, #0x22                  	// #34
  40cba4:	ldr	x3, [x8]
  40cba8:	mov	w2, #0x1                   	// #1
  40cbac:	bl	404ee0 <fwrite@plt>
  40cbb0:	b	40cb5c <rtnl_from_file@@Base+0xf8>

000000000040cbb4 <addattr@@Base>:
  40cbb4:	stp	x29, x30, [sp, #-16]!
  40cbb8:	ldr	w9, [x0]
  40cbbc:	mov	x29, sp
  40cbc0:	add	w9, w9, #0x3
  40cbc4:	and	x10, x9, #0xfffffffc
  40cbc8:	add	w9, w10, #0x4
  40cbcc:	cmp	w9, w1
  40cbd0:	b.hi	40cbf8 <addattr@@Base+0x44>  // b.pmore
  40cbd4:	mov	w8, wzr
  40cbd8:	add	x10, x0, x10
  40cbdc:	mov	w11, #0x4                   	// #4
  40cbe0:	strh	w2, [x10, #2]
  40cbe4:	strh	w11, [x10]
  40cbe8:	str	w9, [x0]
  40cbec:	mov	w0, w8
  40cbf0:	ldp	x29, x30, [sp], #16
  40cbf4:	ret
  40cbf8:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x10640>
  40cbfc:	ldr	x9, [x9, #3992]
  40cc00:	mov	w8, w1
  40cc04:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40cc08:	add	x1, x1, #0x4d8
  40cc0c:	ldr	x0, [x9]
  40cc10:	mov	w2, w8
  40cc14:	bl	405060 <fprintf@plt>
  40cc18:	mov	w8, #0xffffffff            	// #-1
  40cc1c:	mov	w0, w8
  40cc20:	ldp	x29, x30, [sp], #16
  40cc24:	ret

000000000040cc28 <addattr_l@@Base>:
  40cc28:	stp	x29, x30, [sp, #-32]!
  40cc2c:	stp	x20, x19, [sp, #16]
  40cc30:	ldr	w9, [x0]
  40cc34:	add	w10, w4, #0x7
  40cc38:	and	w10, w10, #0xfffffffc
  40cc3c:	mov	x29, sp
  40cc40:	add	w9, w9, #0x3
  40cc44:	and	x9, x9, #0xfffffffc
  40cc48:	add	w20, w9, w10
  40cc4c:	cmp	w20, w1
  40cc50:	b.hi	40cc90 <addattr_l@@Base+0x68>  // b.pmore
  40cc54:	mov	x19, x0
  40cc58:	add	x8, x0, x9
  40cc5c:	add	w9, w4, #0x4
  40cc60:	strh	w2, [x8, #2]
  40cc64:	strh	w9, [x8]
  40cc68:	cbz	w4, 40cc7c <addattr_l@@Base+0x54>
  40cc6c:	sxtw	x2, w4
  40cc70:	add	x0, x8, #0x4
  40cc74:	mov	x1, x3
  40cc78:	bl	404b60 <memcpy@plt>
  40cc7c:	mov	w0, wzr
  40cc80:	str	w20, [x19]
  40cc84:	ldp	x20, x19, [sp, #16]
  40cc88:	ldp	x29, x30, [sp], #32
  40cc8c:	ret
  40cc90:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x10640>
  40cc94:	ldr	x9, [x9, #3992]
  40cc98:	mov	w8, w1
  40cc9c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40cca0:	add	x1, x1, #0x4d8
  40cca4:	ldr	x0, [x9]
  40cca8:	mov	w2, w8
  40ccac:	bl	405060 <fprintf@plt>
  40ccb0:	mov	w0, #0xffffffff            	// #-1
  40ccb4:	ldp	x20, x19, [sp, #16]
  40ccb8:	ldp	x29, x30, [sp], #32
  40ccbc:	ret

000000000040ccc0 <addattr8@@Base>:
  40ccc0:	stp	x29, x30, [sp, #-16]!
  40ccc4:	ldr	w9, [x0]
  40ccc8:	mov	x29, sp
  40cccc:	add	w9, w9, #0x3
  40ccd0:	and	x10, x9, #0xfffffffc
  40ccd4:	add	w9, w10, #0x8
  40ccd8:	cmp	w9, w1
  40ccdc:	b.hi	40cd08 <addattr8@@Base+0x48>  // b.pmore
  40cce0:	mov	w8, wzr
  40cce4:	add	x10, x0, x10
  40cce8:	mov	w11, #0x5                   	// #5
  40ccec:	strh	w2, [x10, #2]
  40ccf0:	strh	w11, [x10]
  40ccf4:	strb	w3, [x10, #4]
  40ccf8:	str	w9, [x0]
  40ccfc:	mov	w0, w8
  40cd00:	ldp	x29, x30, [sp], #16
  40cd04:	ret
  40cd08:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x10640>
  40cd0c:	ldr	x9, [x9, #3992]
  40cd10:	mov	w8, w1
  40cd14:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40cd18:	add	x1, x1, #0x4d8
  40cd1c:	ldr	x0, [x9]
  40cd20:	mov	w2, w8
  40cd24:	bl	405060 <fprintf@plt>
  40cd28:	mov	w8, #0xffffffff            	// #-1
  40cd2c:	mov	w0, w8
  40cd30:	ldp	x29, x30, [sp], #16
  40cd34:	ret

000000000040cd38 <addattr16@@Base>:
  40cd38:	stp	x29, x30, [sp, #-16]!
  40cd3c:	ldr	w9, [x0]
  40cd40:	mov	x29, sp
  40cd44:	add	w9, w9, #0x3
  40cd48:	and	x10, x9, #0xfffffffc
  40cd4c:	add	w9, w10, #0x8
  40cd50:	cmp	w9, w1
  40cd54:	b.hi	40cd80 <addattr16@@Base+0x48>  // b.pmore
  40cd58:	mov	w8, wzr
  40cd5c:	add	x10, x0, x10
  40cd60:	mov	w11, #0x6                   	// #6
  40cd64:	strh	w2, [x10, #2]
  40cd68:	strh	w11, [x10]
  40cd6c:	strh	w3, [x10, #4]
  40cd70:	str	w9, [x0]
  40cd74:	mov	w0, w8
  40cd78:	ldp	x29, x30, [sp], #16
  40cd7c:	ret
  40cd80:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x10640>
  40cd84:	ldr	x9, [x9, #3992]
  40cd88:	mov	w8, w1
  40cd8c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40cd90:	add	x1, x1, #0x4d8
  40cd94:	ldr	x0, [x9]
  40cd98:	mov	w2, w8
  40cd9c:	bl	405060 <fprintf@plt>
  40cda0:	mov	w8, #0xffffffff            	// #-1
  40cda4:	mov	w0, w8
  40cda8:	ldp	x29, x30, [sp], #16
  40cdac:	ret

000000000040cdb0 <addattr32@@Base>:
  40cdb0:	stp	x29, x30, [sp, #-16]!
  40cdb4:	ldr	w9, [x0]
  40cdb8:	mov	x29, sp
  40cdbc:	add	w9, w9, #0x3
  40cdc0:	and	x10, x9, #0xfffffffc
  40cdc4:	add	w9, w10, #0x8
  40cdc8:	cmp	w9, w1
  40cdcc:	b.hi	40cdf8 <addattr32@@Base+0x48>  // b.pmore
  40cdd0:	mov	w8, wzr
  40cdd4:	add	x10, x0, x10
  40cdd8:	mov	w11, #0x8                   	// #8
  40cddc:	strh	w2, [x10, #2]
  40cde0:	strh	w11, [x10]
  40cde4:	str	w3, [x10, #4]
  40cde8:	str	w9, [x0]
  40cdec:	mov	w0, w8
  40cdf0:	ldp	x29, x30, [sp], #16
  40cdf4:	ret
  40cdf8:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x10640>
  40cdfc:	ldr	x9, [x9, #3992]
  40ce00:	mov	w8, w1
  40ce04:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40ce08:	add	x1, x1, #0x4d8
  40ce0c:	ldr	x0, [x9]
  40ce10:	mov	w2, w8
  40ce14:	bl	405060 <fprintf@plt>
  40ce18:	mov	w8, #0xffffffff            	// #-1
  40ce1c:	mov	w0, w8
  40ce20:	ldp	x29, x30, [sp], #16
  40ce24:	ret

000000000040ce28 <addattr64@@Base>:
  40ce28:	stp	x29, x30, [sp, #-16]!
  40ce2c:	ldr	w9, [x0]
  40ce30:	mov	x29, sp
  40ce34:	add	w9, w9, #0x3
  40ce38:	and	x10, x9, #0xfffffffc
  40ce3c:	add	w9, w10, #0xc
  40ce40:	cmp	w9, w1
  40ce44:	b.hi	40ce70 <addattr64@@Base+0x48>  // b.pmore
  40ce48:	mov	w8, wzr
  40ce4c:	add	x10, x0, x10
  40ce50:	mov	w11, #0xc                   	// #12
  40ce54:	strh	w2, [x10, #2]
  40ce58:	strh	w11, [x10]
  40ce5c:	stur	x3, [x10, #4]
  40ce60:	str	w9, [x0]
  40ce64:	mov	w0, w8
  40ce68:	ldp	x29, x30, [sp], #16
  40ce6c:	ret
  40ce70:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x10640>
  40ce74:	ldr	x9, [x9, #3992]
  40ce78:	mov	w8, w1
  40ce7c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40ce80:	add	x1, x1, #0x4d8
  40ce84:	ldr	x0, [x9]
  40ce88:	mov	w2, w8
  40ce8c:	bl	405060 <fprintf@plt>
  40ce90:	mov	w8, #0xffffffff            	// #-1
  40ce94:	mov	w0, w8
  40ce98:	ldp	x29, x30, [sp], #16
  40ce9c:	ret

000000000040cea0 <addattrstrz@@Base>:
  40cea0:	stp	x29, x30, [sp, #-64]!
  40cea4:	stp	x20, x19, [sp, #48]
  40cea8:	mov	x19, x0
  40ceac:	mov	x0, x3
  40ceb0:	str	x23, [sp, #16]
  40ceb4:	stp	x22, x21, [sp, #32]
  40ceb8:	mov	x29, sp
  40cebc:	mov	x20, x3
  40cec0:	mov	w21, w2
  40cec4:	mov	w22, w1
  40cec8:	bl	404b90 <strlen@plt>
  40cecc:	ldr	w8, [x19]
  40ced0:	add	w9, w0, #0x8
  40ced4:	and	w9, w9, #0xfffffffc
  40ced8:	add	w8, w8, #0x3
  40cedc:	and	x8, x8, #0xfffffffc
  40cee0:	add	w23, w8, w9
  40cee4:	cmp	w23, w22
  40cee8:	b.hi	40cf30 <addattrstrz@@Base+0x90>  // b.pmore
  40ceec:	add	w9, w0, #0x1
  40cef0:	sxtw	x2, w9
  40cef4:	add	x8, x19, x8
  40cef8:	add	w9, w2, #0x4
  40cefc:	strh	w21, [x8, #2]
  40cf00:	strh	w9, [x8]
  40cf04:	cbz	w2, 40cf14 <addattrstrz@@Base+0x74>
  40cf08:	add	x0, x8, #0x4
  40cf0c:	mov	x1, x20
  40cf10:	bl	404b60 <memcpy@plt>
  40cf14:	mov	w0, wzr
  40cf18:	str	w23, [x19]
  40cf1c:	ldp	x20, x19, [sp, #48]
  40cf20:	ldp	x22, x21, [sp, #32]
  40cf24:	ldr	x23, [sp, #16]
  40cf28:	ldp	x29, x30, [sp], #64
  40cf2c:	ret
  40cf30:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  40cf34:	ldr	x8, [x8, #3992]
  40cf38:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40cf3c:	add	x1, x1, #0x4d8
  40cf40:	mov	w2, w22
  40cf44:	ldr	x0, [x8]
  40cf48:	bl	405060 <fprintf@plt>
  40cf4c:	mov	w0, #0xffffffff            	// #-1
  40cf50:	b	40cf1c <addattrstrz@@Base+0x7c>

000000000040cf54 <addraw_l@@Base>:
  40cf54:	stp	x29, x30, [sp, #-48]!
  40cf58:	stp	x22, x21, [sp, #16]
  40cf5c:	stp	x20, x19, [sp, #32]
  40cf60:	ldr	w9, [x0]
  40cf64:	add	w10, w3, #0x3
  40cf68:	and	w22, w10, #0xfffffffc
  40cf6c:	mov	x29, sp
  40cf70:	add	w9, w9, #0x3
  40cf74:	and	w9, w9, #0xfffffffc
  40cf78:	add	w10, w9, w22
  40cf7c:	cmp	w10, w1
  40cf80:	b.hi	40cfe8 <addraw_l@@Base+0x94>  // b.pmore
  40cf84:	mov	w20, w3
  40cf88:	sxtw	x21, w20
  40cf8c:	mov	x19, x0
  40cf90:	add	x0, x0, w9, uxtw
  40cf94:	mov	x1, x2
  40cf98:	mov	x2, x21
  40cf9c:	bl	404b60 <memcpy@plt>
  40cfa0:	ldr	w8, [x19]
  40cfa4:	sub	w2, w22, w20
  40cfa8:	mov	w1, wzr
  40cfac:	add	w8, w8, #0x3
  40cfb0:	and	w8, w8, #0xfffffffc
  40cfb4:	add	x8, x19, x8
  40cfb8:	add	x0, x8, x21
  40cfbc:	bl	404d20 <memset@plt>
  40cfc0:	ldr	w8, [x19]
  40cfc4:	mov	w0, wzr
  40cfc8:	add	w8, w8, #0x3
  40cfcc:	and	w8, w8, #0xfffffffc
  40cfd0:	add	w8, w8, w22
  40cfd4:	str	w8, [x19]
  40cfd8:	ldp	x20, x19, [sp, #32]
  40cfdc:	ldp	x22, x21, [sp, #16]
  40cfe0:	ldp	x29, x30, [sp], #48
  40cfe4:	ret
  40cfe8:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x10640>
  40cfec:	ldr	x9, [x9, #3992]
  40cff0:	mov	w8, w1
  40cff4:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40cff8:	add	x1, x1, #0x507
  40cffc:	ldr	x0, [x9]
  40d000:	mov	w2, w8
  40d004:	bl	405060 <fprintf@plt>
  40d008:	mov	w0, #0xffffffff            	// #-1
  40d00c:	ldp	x20, x19, [sp, #32]
  40d010:	ldp	x22, x21, [sp, #16]
  40d014:	ldp	x29, x30, [sp], #48
  40d018:	ret

000000000040d01c <addattr_nest@@Base>:
  40d01c:	stp	x29, x30, [sp, #-32]!
  40d020:	ldr	w9, [x0]
  40d024:	str	x19, [sp, #16]
  40d028:	mov	x29, sp
  40d02c:	add	w9, w9, #0x3
  40d030:	and	w10, w9, #0xfffffffc
  40d034:	add	w9, w10, #0x4
  40d038:	cmp	w9, w1
  40d03c:	add	x19, x0, x10
  40d040:	b.hi	40d064 <addattr_nest@@Base+0x48>  // b.pmore
  40d044:	mov	w8, #0x4                   	// #4
  40d048:	strh	w2, [x19, #2]
  40d04c:	strh	w8, [x19]
  40d050:	str	w9, [x0]
  40d054:	mov	x0, x19
  40d058:	ldr	x19, [sp, #16]
  40d05c:	ldp	x29, x30, [sp], #32
  40d060:	ret
  40d064:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x10640>
  40d068:	ldr	x9, [x9, #3992]
  40d06c:	mov	w8, w1
  40d070:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40d074:	add	x1, x1, #0x4d8
  40d078:	ldr	x0, [x9]
  40d07c:	mov	w2, w8
  40d080:	bl	405060 <fprintf@plt>
  40d084:	mov	x0, x19
  40d088:	ldr	x19, [sp, #16]
  40d08c:	ldp	x29, x30, [sp], #32
  40d090:	ret

000000000040d094 <addattr_nest_end@@Base>:
  40d094:	ldr	w8, [x0]
  40d098:	add	w9, w8, #0x3
  40d09c:	and	w9, w9, #0xfffc
  40d0a0:	add	w9, w0, w9
  40d0a4:	sub	w9, w9, w1
  40d0a8:	mov	w0, w8
  40d0ac:	strh	w9, [x1]
  40d0b0:	ret

000000000040d0b4 <addattr_nest_compat@@Base>:
  40d0b4:	stp	x29, x30, [sp, #-64]!
  40d0b8:	stp	x22, x21, [sp, #32]
  40d0bc:	stp	x20, x19, [sp, #48]
  40d0c0:	ldr	w8, [x0]
  40d0c4:	add	w9, w4, #0x7
  40d0c8:	and	w9, w9, #0xfffffffc
  40d0cc:	str	x23, [sp, #16]
  40d0d0:	add	w8, w8, #0x3
  40d0d4:	and	w8, w8, #0xfffffffc
  40d0d8:	add	w23, w8, w9
  40d0dc:	mov	w20, w2
  40d0e0:	mov	w22, w1
  40d0e4:	mov	x21, x0
  40d0e8:	cmp	w23, w1
  40d0ec:	add	x19, x0, x8
  40d0f0:	mov	x29, sp
  40d0f4:	b.hi	40d15c <addattr_nest_compat@@Base+0xa8>  // b.pmore
  40d0f8:	add	w8, w4, #0x4
  40d0fc:	strh	w20, [x19, #2]
  40d100:	strh	w8, [x19]
  40d104:	cbz	w4, 40d118 <addattr_nest_compat@@Base+0x64>
  40d108:	sxtw	x2, w4
  40d10c:	add	x0, x19, #0x4
  40d110:	mov	x1, x3
  40d114:	bl	404b60 <memcpy@plt>
  40d118:	str	w23, [x21]
  40d11c:	add	w8, w23, #0x3
  40d120:	and	w9, w8, #0xfffffffc
  40d124:	add	w8, w9, #0x4
  40d128:	cmp	w8, w22
  40d12c:	b.hi	40d180 <addattr_nest_compat@@Base+0xcc>  // b.pmore
  40d130:	add	x9, x21, x9
  40d134:	mov	w10, #0x4                   	// #4
  40d138:	strh	w20, [x9, #2]
  40d13c:	strh	w10, [x9]
  40d140:	str	w8, [x21]
  40d144:	mov	x0, x19
  40d148:	ldp	x20, x19, [sp, #48]
  40d14c:	ldp	x22, x21, [sp, #32]
  40d150:	ldr	x23, [sp, #16]
  40d154:	ldp	x29, x30, [sp], #64
  40d158:	ret
  40d15c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  40d160:	ldr	x8, [x8, #3992]
  40d164:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40d168:	add	x1, x1, #0x4d8
  40d16c:	mov	w2, w22
  40d170:	ldr	x0, [x8]
  40d174:	bl	405060 <fprintf@plt>
  40d178:	ldr	w23, [x21]
  40d17c:	b	40d11c <addattr_nest_compat@@Base+0x68>
  40d180:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  40d184:	ldr	x8, [x8, #3992]
  40d188:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40d18c:	add	x1, x1, #0x4d8
  40d190:	mov	w2, w22
  40d194:	ldr	x0, [x8]
  40d198:	bl	405060 <fprintf@plt>
  40d19c:	b	40d144 <addattr_nest_compat@@Base+0x90>

000000000040d1a0 <addattr_nest_compat_end@@Base>:
  40d1a0:	ldrh	w9, [x1]
  40d1a4:	ldr	w8, [x0]
  40d1a8:	add	w9, w9, #0x3
  40d1ac:	add	w10, w8, #0x3
  40d1b0:	and	x9, x9, #0x1fffc
  40d1b4:	and	w10, w10, #0xfffffffc
  40d1b8:	add	x9, x1, x9
  40d1bc:	add	w10, w0, w10
  40d1c0:	sub	w11, w10, w1
  40d1c4:	sub	w10, w10, w9
  40d1c8:	mov	w0, w8
  40d1cc:	strh	w11, [x1]
  40d1d0:	strh	w10, [x9]
  40d1d4:	ret

000000000040d1d8 <rta_addattr32@@Base>:
  40d1d8:	stp	x29, x30, [sp, #-16]!
  40d1dc:	ldrh	w9, [x0]
  40d1e0:	mov	x29, sp
  40d1e4:	add	w9, w9, #0x3
  40d1e8:	and	x9, x9, #0x1fffc
  40d1ec:	add	w10, w9, #0x8
  40d1f0:	cmp	w10, w1
  40d1f4:	b.hi	40d22c <rta_addattr32@@Base+0x54>  // b.pmore
  40d1f8:	add	x9, x0, x9
  40d1fc:	mov	w10, #0x8                   	// #8
  40d200:	strh	w2, [x9, #2]
  40d204:	strh	w10, [x9]
  40d208:	str	w3, [x9, #4]
  40d20c:	ldrh	w9, [x0]
  40d210:	mov	w8, wzr
  40d214:	add	w9, w9, #0xb
  40d218:	and	w9, w9, #0xfffc
  40d21c:	strh	w9, [x0]
  40d220:	mov	w0, w8
  40d224:	ldp	x29, x30, [sp], #16
  40d228:	ret
  40d22c:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x10640>
  40d230:	ldr	x9, [x9, #3992]
  40d234:	mov	w8, w1
  40d238:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40d23c:	add	x1, x1, #0x535
  40d240:	ldr	x0, [x9]
  40d244:	mov	w2, w8
  40d248:	bl	405060 <fprintf@plt>
  40d24c:	mov	w8, #0xffffffff            	// #-1
  40d250:	mov	w0, w8
  40d254:	ldp	x29, x30, [sp], #16
  40d258:	ret

000000000040d25c <rta_addattr_l@@Base>:
  40d25c:	stp	x29, x30, [sp, #-32]!
  40d260:	stp	x20, x19, [sp, #16]
  40d264:	ldrh	w9, [x0]
  40d268:	add	w10, w4, #0x7
  40d26c:	and	w20, w10, #0xfffffffc
  40d270:	mov	x29, sp
  40d274:	add	w9, w9, #0x3
  40d278:	and	x9, x9, #0x1fffc
  40d27c:	add	w10, w9, w20
  40d280:	cmp	w10, w1
  40d284:	b.hi	40d2d4 <rta_addattr_l@@Base+0x78>  // b.pmore
  40d288:	mov	x19, x0
  40d28c:	add	x8, x0, x9
  40d290:	add	w9, w4, #0x4
  40d294:	strh	w2, [x8, #2]
  40d298:	strh	w9, [x8]
  40d29c:	cbz	w4, 40d2b0 <rta_addattr_l@@Base+0x54>
  40d2a0:	sxtw	x2, w4
  40d2a4:	add	x0, x8, #0x4
  40d2a8:	mov	x1, x3
  40d2ac:	bl	404b60 <memcpy@plt>
  40d2b0:	ldrh	w8, [x19]
  40d2b4:	mov	w0, wzr
  40d2b8:	add	w8, w8, #0x3
  40d2bc:	and	w8, w8, #0xfffc
  40d2c0:	add	w8, w8, w20
  40d2c4:	strh	w8, [x19]
  40d2c8:	ldp	x20, x19, [sp, #16]
  40d2cc:	ldp	x29, x30, [sp], #32
  40d2d0:	ret
  40d2d4:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x10640>
  40d2d8:	ldr	x9, [x9, #3992]
  40d2dc:	mov	w8, w1
  40d2e0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40d2e4:	add	x1, x1, #0x56a
  40d2e8:	ldr	x0, [x9]
  40d2ec:	mov	w2, w8
  40d2f0:	bl	405060 <fprintf@plt>
  40d2f4:	mov	w0, #0xffffffff            	// #-1
  40d2f8:	ldp	x20, x19, [sp, #16]
  40d2fc:	ldp	x29, x30, [sp], #32
  40d300:	ret

000000000040d304 <rta_addattr8@@Base>:
  40d304:	stp	x29, x30, [sp, #-16]!
  40d308:	ldrh	w9, [x0]
  40d30c:	mov	x29, sp
  40d310:	add	w9, w9, #0x3
  40d314:	and	x9, x9, #0x1fffc
  40d318:	add	w10, w9, #0x8
  40d31c:	cmp	w10, w1
  40d320:	b.hi	40d358 <rta_addattr8@@Base+0x54>  // b.pmore
  40d324:	add	x9, x0, x9
  40d328:	mov	w10, #0x5                   	// #5
  40d32c:	strh	w2, [x9, #2]
  40d330:	strh	w10, [x9]
  40d334:	strb	w3, [x9, #4]
  40d338:	ldrh	w9, [x0]
  40d33c:	mov	w8, wzr
  40d340:	add	w9, w9, #0xb
  40d344:	and	w9, w9, #0xfffc
  40d348:	strh	w9, [x0]
  40d34c:	mov	w0, w8
  40d350:	ldp	x29, x30, [sp], #16
  40d354:	ret
  40d358:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x10640>
  40d35c:	ldr	x9, [x9, #3992]
  40d360:	mov	w8, w1
  40d364:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40d368:	add	x1, x1, #0x56a
  40d36c:	ldr	x0, [x9]
  40d370:	mov	w2, w8
  40d374:	bl	405060 <fprintf@plt>
  40d378:	mov	w8, #0xffffffff            	// #-1
  40d37c:	mov	w0, w8
  40d380:	ldp	x29, x30, [sp], #16
  40d384:	ret

000000000040d388 <rta_addattr16@@Base>:
  40d388:	stp	x29, x30, [sp, #-16]!
  40d38c:	ldrh	w9, [x0]
  40d390:	mov	x29, sp
  40d394:	add	w9, w9, #0x3
  40d398:	and	x9, x9, #0x1fffc
  40d39c:	add	w10, w9, #0x8
  40d3a0:	cmp	w10, w1
  40d3a4:	b.hi	40d3dc <rta_addattr16@@Base+0x54>  // b.pmore
  40d3a8:	add	x9, x0, x9
  40d3ac:	mov	w10, #0x6                   	// #6
  40d3b0:	strh	w2, [x9, #2]
  40d3b4:	strh	w10, [x9]
  40d3b8:	strh	w3, [x9, #4]
  40d3bc:	ldrh	w9, [x0]
  40d3c0:	mov	w8, wzr
  40d3c4:	add	w9, w9, #0xb
  40d3c8:	and	w9, w9, #0xfffc
  40d3cc:	strh	w9, [x0]
  40d3d0:	mov	w0, w8
  40d3d4:	ldp	x29, x30, [sp], #16
  40d3d8:	ret
  40d3dc:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x10640>
  40d3e0:	ldr	x9, [x9, #3992]
  40d3e4:	mov	w8, w1
  40d3e8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40d3ec:	add	x1, x1, #0x56a
  40d3f0:	ldr	x0, [x9]
  40d3f4:	mov	w2, w8
  40d3f8:	bl	405060 <fprintf@plt>
  40d3fc:	mov	w8, #0xffffffff            	// #-1
  40d400:	mov	w0, w8
  40d404:	ldp	x29, x30, [sp], #16
  40d408:	ret

000000000040d40c <rta_addattr64@@Base>:
  40d40c:	stp	x29, x30, [sp, #-16]!
  40d410:	ldrh	w9, [x0]
  40d414:	mov	x29, sp
  40d418:	add	w9, w9, #0x3
  40d41c:	and	x9, x9, #0x1fffc
  40d420:	add	w10, w9, #0xc
  40d424:	cmp	w10, w1
  40d428:	b.hi	40d460 <rta_addattr64@@Base+0x54>  // b.pmore
  40d42c:	add	x9, x0, x9
  40d430:	mov	w10, #0xc                   	// #12
  40d434:	strh	w2, [x9, #2]
  40d438:	strh	w10, [x9]
  40d43c:	stur	x3, [x9, #4]
  40d440:	ldrh	w9, [x0]
  40d444:	mov	w8, wzr
  40d448:	add	w9, w9, #0xf
  40d44c:	and	w9, w9, #0xfffc
  40d450:	strh	w9, [x0]
  40d454:	mov	w0, w8
  40d458:	ldp	x29, x30, [sp], #16
  40d45c:	ret
  40d460:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x10640>
  40d464:	ldr	x9, [x9, #3992]
  40d468:	mov	w8, w1
  40d46c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40d470:	add	x1, x1, #0x56a
  40d474:	ldr	x0, [x9]
  40d478:	mov	w2, w8
  40d47c:	bl	405060 <fprintf@plt>
  40d480:	mov	w8, #0xffffffff            	// #-1
  40d484:	mov	w0, w8
  40d488:	ldp	x29, x30, [sp], #16
  40d48c:	ret

000000000040d490 <rta_nest@@Base>:
  40d490:	stp	x29, x30, [sp, #-32]!
  40d494:	ldrh	w9, [x0]
  40d498:	str	x19, [sp, #16]
  40d49c:	mov	x29, sp
  40d4a0:	add	w9, w9, #0x3
  40d4a4:	and	x9, x9, #0x1fffc
  40d4a8:	add	w10, w9, #0x4
  40d4ac:	cmp	w10, w1
  40d4b0:	add	x19, x0, x9
  40d4b4:	b.hi	40d4f0 <rta_nest@@Base+0x60>  // b.pmore
  40d4b8:	mov	w8, #0x4                   	// #4
  40d4bc:	strh	w2, [x19, #2]
  40d4c0:	strh	w8, [x19]
  40d4c4:	ldrh	w8, [x0]
  40d4c8:	add	w8, w8, #0x7
  40d4cc:	and	w8, w8, #0xfffc
  40d4d0:	strh	w8, [x0]
  40d4d4:	ldrh	w8, [x19, #2]
  40d4d8:	mov	x0, x19
  40d4dc:	orr	w8, w8, #0x8000
  40d4e0:	strh	w8, [x19, #2]
  40d4e4:	ldr	x19, [sp, #16]
  40d4e8:	ldp	x29, x30, [sp], #32
  40d4ec:	ret
  40d4f0:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x10640>
  40d4f4:	ldr	x9, [x9, #3992]
  40d4f8:	mov	w8, w1
  40d4fc:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40d500:	add	x1, x1, #0x56a
  40d504:	ldr	x0, [x9]
  40d508:	mov	w2, w8
  40d50c:	bl	405060 <fprintf@plt>
  40d510:	b	40d4d4 <rta_nest@@Base+0x44>

000000000040d514 <rta_nest_end@@Base>:
  40d514:	ldrh	w8, [x0]
  40d518:	add	w8, w8, #0x3
  40d51c:	and	w8, w8, #0xfffc
  40d520:	add	w8, w0, w8
  40d524:	sub	w8, w8, w1
  40d528:	strh	w8, [x1]
  40d52c:	ldrh	w0, [x0]
  40d530:	ret

000000000040d534 <parse_rtattr@@Base>:
  40d534:	stp	x29, x30, [sp, #-48]!
  40d538:	add	w8, w1, #0x1
  40d53c:	stp	x22, x21, [sp, #16]
  40d540:	stp	x20, x19, [sp, #32]
  40d544:	mov	x20, x2
  40d548:	mov	w21, w1
  40d54c:	sbfiz	x2, x8, #3, #32
  40d550:	mov	w1, wzr
  40d554:	mov	x29, sp
  40d558:	mov	w19, w3
  40d55c:	mov	x22, x0
  40d560:	bl	404d20 <memset@plt>
  40d564:	cmp	w19, #0x4
  40d568:	b.ge	40d5bc <parse_rtattr@@Base+0x88>  // b.tcont
  40d56c:	cbz	w19, 40d590 <parse_rtattr@@Base+0x5c>
  40d570:	ldrh	w3, [x20]
  40d574:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  40d578:	ldr	x8, [x8, #3992]
  40d57c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40d580:	add	x1, x1, #0x59f
  40d584:	mov	w2, w19
  40d588:	ldr	x0, [x8]
  40d58c:	bl	405060 <fprintf@plt>
  40d590:	ldp	x20, x19, [sp, #32]
  40d594:	ldp	x22, x21, [sp, #16]
  40d598:	mov	w0, wzr
  40d59c:	ldp	x29, x30, [sp], #48
  40d5a0:	ret
  40d5a4:	add	w8, w3, #0x3
  40d5a8:	and	x8, x8, #0x1fffc
  40d5ac:	sub	w19, w19, w8
  40d5b0:	cmp	w19, #0x3
  40d5b4:	add	x20, x20, x8
  40d5b8:	b.le	40d56c <parse_rtattr@@Base+0x38>
  40d5bc:	ldrh	w3, [x20]
  40d5c0:	cmp	x3, #0x4
  40d5c4:	b.cc	40d574 <parse_rtattr@@Base+0x40>  // b.lo, b.ul, b.last
  40d5c8:	cmp	w19, w3
  40d5cc:	b.lt	40d574 <parse_rtattr@@Base+0x40>  // b.tstop
  40d5d0:	ldrh	w8, [x20, #2]
  40d5d4:	cmp	w8, w21
  40d5d8:	b.gt	40d5a4 <parse_rtattr@@Base+0x70>
  40d5dc:	ldr	x9, [x22, x8, lsl #3]
  40d5e0:	cbnz	x9, 40d5a4 <parse_rtattr@@Base+0x70>
  40d5e4:	str	x20, [x22, x8, lsl #3]
  40d5e8:	b	40d5a4 <parse_rtattr@@Base+0x70>

000000000040d5ec <parse_rtattr_flags@@Base>:
  40d5ec:	stp	x29, x30, [sp, #-64]!
  40d5f0:	add	w8, w1, #0x1
  40d5f4:	stp	x22, x21, [sp, #32]
  40d5f8:	stp	x20, x19, [sp, #48]
  40d5fc:	mov	x20, x2
  40d600:	mov	w21, w1
  40d604:	sbfiz	x2, x8, #3, #32
  40d608:	mov	w1, wzr
  40d60c:	str	x23, [sp, #16]
  40d610:	mov	x29, sp
  40d614:	mov	w23, w4
  40d618:	mov	w19, w3
  40d61c:	mov	x22, x0
  40d620:	bl	404d20 <memset@plt>
  40d624:	cmp	w19, #0x4
  40d628:	b.lt	40d684 <parse_rtattr_flags@@Base+0x98>  // b.tstop
  40d62c:	mvn	w8, w23
  40d630:	b	40d64c <parse_rtattr_flags@@Base+0x60>
  40d634:	add	w9, w3, #0x3
  40d638:	and	x9, x9, #0x1fffc
  40d63c:	sub	w19, w19, w9
  40d640:	cmp	w19, #0x3
  40d644:	add	x20, x20, x9
  40d648:	b.le	40d684 <parse_rtattr_flags@@Base+0x98>
  40d64c:	ldrh	w3, [x20]
  40d650:	cmp	x3, #0x4
  40d654:	b.cc	40d68c <parse_rtattr_flags@@Base+0xa0>  // b.lo, b.ul, b.last
  40d658:	cmp	w19, w3
  40d65c:	b.lt	40d68c <parse_rtattr_flags@@Base+0xa0>  // b.tstop
  40d660:	ldrh	w9, [x20, #2]
  40d664:	and	w9, w9, w8
  40d668:	cmp	w21, w9, uxth
  40d66c:	b.lt	40d634 <parse_rtattr_flags@@Base+0x48>  // b.tstop
  40d670:	and	x9, x9, #0xffff
  40d674:	ldr	x10, [x22, x9, lsl #3]
  40d678:	cbnz	x10, 40d634 <parse_rtattr_flags@@Base+0x48>
  40d67c:	str	x20, [x22, x9, lsl #3]
  40d680:	b	40d634 <parse_rtattr_flags@@Base+0x48>
  40d684:	cbz	w19, 40d6a8 <parse_rtattr_flags@@Base+0xbc>
  40d688:	ldrh	w3, [x20]
  40d68c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  40d690:	ldr	x8, [x8, #3992]
  40d694:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40d698:	add	x1, x1, #0x59f
  40d69c:	mov	w2, w19
  40d6a0:	ldr	x0, [x8]
  40d6a4:	bl	405060 <fprintf@plt>
  40d6a8:	ldp	x20, x19, [sp, #48]
  40d6ac:	ldp	x22, x21, [sp, #32]
  40d6b0:	ldr	x23, [sp, #16]
  40d6b4:	mov	w0, wzr
  40d6b8:	ldp	x29, x30, [sp], #64
  40d6bc:	ret

000000000040d6c0 <parse_rtattr_one@@Base>:
  40d6c0:	stp	x29, x30, [sp, #-16]!
  40d6c4:	cmp	w2, #0x4
  40d6c8:	mov	x29, sp
  40d6cc:	b.lt	40d708 <parse_rtattr_one@@Base+0x48>  // b.tstop
  40d6d0:	ldrh	w3, [x1]
  40d6d4:	cmp	x3, #0x4
  40d6d8:	b.cc	40d710 <parse_rtattr_one@@Base+0x50>  // b.lo, b.ul, b.last
  40d6dc:	cmp	w2, w3
  40d6e0:	b.lt	40d710 <parse_rtattr_one@@Base+0x50>  // b.tstop
  40d6e4:	ldrh	w8, [x1, #2]
  40d6e8:	cmp	w8, w0
  40d6ec:	b.eq	40d72c <parse_rtattr_one@@Base+0x6c>  // b.none
  40d6f0:	add	w8, w3, #0x3
  40d6f4:	and	x8, x8, #0x1fffc
  40d6f8:	sub	w2, w2, w8
  40d6fc:	cmp	w2, #0x3
  40d700:	add	x1, x1, x8
  40d704:	b.gt	40d6d0 <parse_rtattr_one@@Base+0x10>
  40d708:	cbz	w2, 40d728 <parse_rtattr_one@@Base+0x68>
  40d70c:	ldrh	w3, [x1]
  40d710:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  40d714:	ldr	x8, [x8, #3992]
  40d718:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40d71c:	add	x1, x1, #0x59f
  40d720:	ldr	x0, [x8]
  40d724:	bl	405060 <fprintf@plt>
  40d728:	mov	x1, xzr
  40d72c:	mov	x0, x1
  40d730:	ldp	x29, x30, [sp], #16
  40d734:	ret

000000000040d738 <__parse_rtattr_nested_compat@@Base>:
  40d738:	stp	x29, x30, [sp, #-64]!
  40d73c:	stp	x22, x21, [sp, #32]
  40d740:	stp	x20, x19, [sp, #48]
  40d744:	ldrh	w8, [x2]
  40d748:	str	x23, [sp, #16]
  40d74c:	mov	x29, sp
  40d750:	sub	x8, x8, #0x4
  40d754:	cmp	x8, w3, sxtw
  40d758:	b.cs	40d764 <__parse_rtattr_nested_compat@@Base+0x2c>  // b.hs, b.nlast
  40d75c:	mov	w0, #0xffffffff            	// #-1
  40d760:	b	40d7ec <__parse_rtattr_nested_compat@@Base+0xb4>
  40d764:	add	w9, w3, #0x3
  40d768:	and	x9, x9, #0xfffffffc
  40d76c:	add	x10, x9, #0x4
  40d770:	mov	w20, w1
  40d774:	mov	x21, x0
  40d778:	cmp	x8, x10
  40d77c:	b.cs	40d798 <__parse_rtattr_nested_compat@@Base+0x60>  // b.hs, b.nlast
  40d780:	add	w8, w20, #0x1
  40d784:	sbfiz	x2, x8, #3, #32
  40d788:	mov	x0, x21
  40d78c:	mov	w1, wzr
  40d790:	bl	404d20 <memset@plt>
  40d794:	b	40d7e8 <__parse_rtattr_nested_compat@@Base+0xb0>
  40d798:	add	x8, x2, x9
  40d79c:	ldrh	w23, [x8, #4]
  40d7a0:	add	w9, w20, #0x1
  40d7a4:	sbfiz	x2, x9, #3, #32
  40d7a8:	mov	x0, x21
  40d7ac:	mov	w1, wzr
  40d7b0:	add	x22, x8, #0x8
  40d7b4:	sub	w19, w23, #0x4
  40d7b8:	bl	404d20 <memset@plt>
  40d7bc:	cmp	w23, #0x8
  40d7c0:	b.cs	40d818 <__parse_rtattr_nested_compat@@Base+0xe0>  // b.hs, b.nlast
  40d7c4:	cbz	w19, 40d7e8 <__parse_rtattr_nested_compat@@Base+0xb0>
  40d7c8:	ldrh	w3, [x22]
  40d7cc:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  40d7d0:	ldr	x8, [x8, #3992]
  40d7d4:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40d7d8:	add	x1, x1, #0x59f
  40d7dc:	mov	w2, w19
  40d7e0:	ldr	x0, [x8]
  40d7e4:	bl	405060 <fprintf@plt>
  40d7e8:	mov	w0, wzr
  40d7ec:	ldp	x20, x19, [sp, #48]
  40d7f0:	ldp	x22, x21, [sp, #32]
  40d7f4:	ldr	x23, [sp, #16]
  40d7f8:	ldp	x29, x30, [sp], #64
  40d7fc:	ret
  40d800:	add	w8, w3, #0x3
  40d804:	and	x8, x8, #0x1fffc
  40d808:	sub	w19, w19, w8
  40d80c:	cmp	w19, #0x3
  40d810:	add	x22, x22, x8
  40d814:	b.le	40d7c4 <__parse_rtattr_nested_compat@@Base+0x8c>
  40d818:	ldrh	w3, [x22]
  40d81c:	cmp	x3, #0x4
  40d820:	b.cc	40d7cc <__parse_rtattr_nested_compat@@Base+0x94>  // b.lo, b.ul, b.last
  40d824:	cmp	w19, w3
  40d828:	b.lt	40d7cc <__parse_rtattr_nested_compat@@Base+0x94>  // b.tstop
  40d82c:	ldrh	w8, [x22, #2]
  40d830:	cmp	w8, w20
  40d834:	b.gt	40d800 <__parse_rtattr_nested_compat@@Base+0xc8>
  40d838:	ldr	x9, [x21, x8, lsl #3]
  40d83c:	cbnz	x9, 40d800 <__parse_rtattr_nested_compat@@Base+0xc8>
  40d840:	str	x22, [x21, x8, lsl #3]
  40d844:	b	40d800 <__parse_rtattr_nested_compat@@Base+0xc8>
  40d848:	stp	x29, x30, [sp, #-48]!
  40d84c:	stp	x22, x21, [sp, #16]
  40d850:	stp	x20, x19, [sp, #32]
  40d854:	mov	x29, sp
  40d858:	mov	w20, w2
  40d85c:	mov	x21, x1
  40d860:	mov	w22, w0
  40d864:	bl	404b70 <recvmsg@plt>
  40d868:	tbnz	w0, #31, 40d880 <__parse_rtattr_nested_compat@@Base+0x148>
  40d86c:	cbz	w0, 40d8f4 <__parse_rtattr_nested_compat@@Base+0x1bc>
  40d870:	ldp	x20, x19, [sp, #32]
  40d874:	ldp	x22, x21, [sp, #16]
  40d878:	ldp	x29, x30, [sp], #48
  40d87c:	ret
  40d880:	bl	405010 <__errno_location@plt>
  40d884:	mov	x19, x0
  40d888:	b	40d8a0 <__parse_rtattr_nested_compat@@Base+0x168>
  40d88c:	mov	w0, w22
  40d890:	mov	x1, x21
  40d894:	mov	w2, w20
  40d898:	bl	404b70 <recvmsg@plt>
  40d89c:	tbz	w0, #31, 40d86c <__parse_rtattr_nested_compat@@Base+0x134>
  40d8a0:	ldr	w0, [x19]
  40d8a4:	cmp	w0, #0xb
  40d8a8:	b.eq	40d88c <__parse_rtattr_nested_compat@@Base+0x154>  // b.none
  40d8ac:	cmp	w0, #0x4
  40d8b0:	b.eq	40d88c <__parse_rtattr_nested_compat@@Base+0x154>  // b.none
  40d8b4:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  40d8b8:	ldr	x8, [x8, #3992]
  40d8bc:	ldr	x20, [x8]
  40d8c0:	bl	404db0 <strerror@plt>
  40d8c4:	ldr	w3, [x19]
  40d8c8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x640>
  40d8cc:	mov	x2, x0
  40d8d0:	add	x1, x1, #0x3d5
  40d8d4:	mov	x0, x20
  40d8d8:	bl	405060 <fprintf@plt>
  40d8dc:	ldr	w8, [x19]
  40d8e0:	neg	w0, w8
  40d8e4:	ldp	x20, x19, [sp, #32]
  40d8e8:	ldp	x22, x21, [sp, #16]
  40d8ec:	ldp	x29, x30, [sp], #48
  40d8f0:	ret
  40d8f4:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x10640>
  40d8f8:	ldr	x8, [x8, #3992]
  40d8fc:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x640>
  40d900:	add	x0, x0, #0x3f4
  40d904:	mov	w1, #0xf                   	// #15
  40d908:	ldr	x3, [x8]
  40d90c:	mov	w2, #0x1                   	// #1
  40d910:	bl	404ee0 <fwrite@plt>
  40d914:	mov	w0, #0xffffffc3            	// #-61
  40d918:	ldp	x20, x19, [sp, #32]
  40d91c:	ldp	x22, x21, [sp, #16]
  40d920:	ldp	x29, x30, [sp], #48
  40d924:	ret

000000000040d928 <__libc_csu_init@@Base>:
  40d928:	stp	x29, x30, [sp, #-64]!
  40d92c:	mov	x29, sp
  40d930:	stp	x19, x20, [sp, #16]
  40d934:	adrp	x20, 41e000 <_IO_stdin_used@@Base+0x10640>
  40d938:	add	x20, x20, #0xd08
  40d93c:	stp	x21, x22, [sp, #32]
  40d940:	adrp	x21, 41e000 <_IO_stdin_used@@Base+0x10640>
  40d944:	add	x21, x21, #0xd00
  40d948:	sub	x20, x20, x21
  40d94c:	mov	w22, w0
  40d950:	stp	x23, x24, [sp, #48]
  40d954:	mov	x23, x1
  40d958:	mov	x24, x2
  40d95c:	bl	404b28 <memcpy@plt-0x38>
  40d960:	cmp	xzr, x20, asr #3
  40d964:	b.eq	40d990 <__libc_csu_init@@Base+0x68>  // b.none
  40d968:	asr	x20, x20, #3
  40d96c:	mov	x19, #0x0                   	// #0
  40d970:	ldr	x3, [x21, x19, lsl #3]
  40d974:	mov	x2, x24
  40d978:	add	x19, x19, #0x1
  40d97c:	mov	x1, x23
  40d980:	mov	w0, w22
  40d984:	blr	x3
  40d988:	cmp	x20, x19
  40d98c:	b.ne	40d970 <__libc_csu_init@@Base+0x48>  // b.any
  40d990:	ldp	x19, x20, [sp, #16]
  40d994:	ldp	x21, x22, [sp, #32]
  40d998:	ldp	x23, x24, [sp, #48]
  40d99c:	ldp	x29, x30, [sp], #64
  40d9a0:	ret
  40d9a4:	nop

000000000040d9a8 <__libc_csu_fini@@Base>:
  40d9a8:	ret

Disassembly of section .fini:

000000000040d9ac <.fini>:
  40d9ac:	stp	x29, x30, [sp, #-16]!
  40d9b0:	mov	x29, sp
  40d9b4:	ldp	x29, x30, [sp], #16
  40d9b8:	ret
