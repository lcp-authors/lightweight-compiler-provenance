
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//gcov_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402650 <.init>:
  402650:	stp	x29, x30, [sp, #-16]!
  402654:	mov	x29, sp
  402658:	bl	404dfc <ferror@plt+0x202c>
  40265c:	ldp	x29, x30, [sp], #16
  402660:	ret

Disassembly of section .plt:

0000000000402670 <_ZGTtnam@plt-0x20>:
  402670:	stp	x16, x30, [sp, #-16]!
  402674:	adrp	x16, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  402678:	ldr	x17, [x16, #4088]
  40267c:	add	x16, x16, #0xff8
  402680:	br	x17
  402684:	nop
  402688:	nop
  40268c:	nop

0000000000402690 <_ZGTtnam@plt>:
  402690:	adrp	x16, 495000 <_ZGTtnam>
  402694:	ldr	x17, [x16]
  402698:	add	x16, x16, #0x0
  40269c:	br	x17

00000000004026a0 <memcpy@plt>:
  4026a0:	adrp	x16, 495000 <_ZGTtnam>
  4026a4:	ldr	x17, [x16, #8]
  4026a8:	add	x16, x16, #0x8
  4026ac:	br	x17

00000000004026b0 <memmove@plt>:
  4026b0:	adrp	x16, 495000 <_ZGTtnam>
  4026b4:	ldr	x17, [x16, #16]
  4026b8:	add	x16, x16, #0x10
  4026bc:	br	x17

00000000004026c0 <ngettext@plt>:
  4026c0:	adrp	x16, 495000 <_ZGTtnam>
  4026c4:	ldr	x17, [x16, #24]
  4026c8:	add	x16, x16, #0x18
  4026cc:	br	x17

00000000004026d0 <gzclose@plt>:
  4026d0:	adrp	x16, 495000 <_ZGTtnam>
  4026d4:	ldr	x17, [x16, #32]
  4026d8:	add	x16, x16, #0x20
  4026dc:	br	x17

00000000004026e0 <fwrite_unlocked@plt>:
  4026e0:	adrp	x16, 495000 <_ZGTtnam>
  4026e4:	ldr	x17, [x16, #40]
  4026e8:	add	x16, x16, #0x28
  4026ec:	br	x17

00000000004026f0 <strtoul@plt>:
  4026f0:	adrp	x16, 495000 <_ZGTtnam>
  4026f4:	ldr	x17, [x16, #48]
  4026f8:	add	x16, x16, #0x30
  4026fc:	br	x17

0000000000402700 <strlen@plt>:
  402700:	adrp	x16, 495000 <_ZGTtnam>
  402704:	ldr	x17, [x16, #56]
  402708:	add	x16, x16, #0x38
  40270c:	br	x17

0000000000402710 <fputs@plt>:
  402710:	adrp	x16, 495000 <_ZGTtnam>
  402714:	ldr	x17, [x16, #64]
  402718:	add	x16, x16, #0x40
  40271c:	br	x17

0000000000402720 <mbstowcs@plt>:
  402720:	adrp	x16, 495000 <_ZGTtnam>
  402724:	ldr	x17, [x16, #72]
  402728:	add	x16, x16, #0x48
  40272c:	br	x17

0000000000402730 <exit@plt>:
  402730:	adrp	x16, 495000 <_ZGTtnam>
  402734:	ldr	x17, [x16, #80]
  402738:	add	x16, x16, #0x50
  40273c:	br	x17

0000000000402740 <sbrk@plt>:
  402740:	adrp	x16, 495000 <_ZGTtnam>
  402744:	ldr	x17, [x16, #88]
  402748:	add	x16, x16, #0x58
  40274c:	br	x17

0000000000402750 <strnlen@plt>:
  402750:	adrp	x16, 495000 <_ZGTtnam>
  402754:	ldr	x17, [x16, #96]
  402758:	add	x16, x16, #0x60
  40275c:	br	x17

0000000000402760 <iconv_close@plt>:
  402760:	adrp	x16, 495000 <_ZGTtnam>
  402764:	ldr	x17, [x16, #104]
  402768:	add	x16, x16, #0x68
  40276c:	br	x17

0000000000402770 <setbuf@plt>:
  402770:	adrp	x16, 495000 <_ZGTtnam>
  402774:	ldr	x17, [x16, #112]
  402778:	add	x16, x16, #0x70
  40277c:	br	x17

0000000000402780 <readlink@plt>:
  402780:	adrp	x16, 495000 <_ZGTtnam>
  402784:	ldr	x17, [x16, #120]
  402788:	add	x16, x16, #0x78
  40278c:	br	x17

0000000000402790 <ftell@plt>:
  402790:	adrp	x16, 495000 <_ZGTtnam>
  402794:	ldr	x17, [x16, #128]
  402798:	add	x16, x16, #0x80
  40279c:	br	x17

00000000004027a0 <sprintf@plt>:
  4027a0:	adrp	x16, 495000 <_ZGTtnam>
  4027a4:	ldr	x17, [x16, #136]
  4027a8:	add	x16, x16, #0x88
  4027ac:	br	x17

00000000004027b0 <opendir@plt>:
  4027b0:	adrp	x16, 495000 <_ZGTtnam>
  4027b4:	ldr	x17, [x16, #144]
  4027b8:	add	x16, x16, #0x90
  4027bc:	br	x17

00000000004027c0 <__cxa_atexit@plt>:
  4027c0:	adrp	x16, 495000 <_ZGTtnam>
  4027c4:	ldr	x17, [x16, #152]
  4027c8:	add	x16, x16, #0x98
  4027cc:	br	x17

00000000004027d0 <fputc@plt>:
  4027d0:	adrp	x16, 495000 <_ZGTtnam>
  4027d4:	ldr	x17, [x16, #160]
  4027d8:	add	x16, x16, #0xa0
  4027dc:	br	x17

00000000004027e0 <qsort@plt>:
  4027e0:	adrp	x16, 495000 <_ZGTtnam>
  4027e4:	ldr	x17, [x16, #168]
  4027e8:	add	x16, x16, #0xa8
  4027ec:	br	x17

00000000004027f0 <_ITM_RU1@plt>:
  4027f0:	adrp	x16, 495000 <_ZGTtnam>
  4027f4:	ldr	x17, [x16, #176]
  4027f8:	add	x16, x16, #0xb0
  4027fc:	br	x17

0000000000402800 <snprintf@plt>:
  402800:	adrp	x16, 495000 <_ZGTtnam>
  402804:	ldr	x17, [x16, #184]
  402808:	add	x16, x16, #0xb8
  40280c:	br	x17

0000000000402810 <putc_unlocked@plt>:
  402810:	adrp	x16, 495000 <_ZGTtnam>
  402814:	ldr	x17, [x16, #192]
  402818:	add	x16, x16, #0xc0
  40281c:	br	x17

0000000000402820 <localtime@plt>:
  402820:	adrp	x16, 495000 <_ZGTtnam>
  402824:	ldr	x17, [x16, #200]
  402828:	add	x16, x16, #0xc8
  40282c:	br	x17

0000000000402830 <fclose@plt>:
  402830:	adrp	x16, 495000 <_ZGTtnam>
  402834:	ldr	x17, [x16, #208]
  402838:	add	x16, x16, #0xd0
  40283c:	br	x17

0000000000402840 <atoi@plt>:
  402840:	adrp	x16, 495000 <_ZGTtnam>
  402844:	ldr	x17, [x16, #216]
  402848:	add	x16, x16, #0xd8
  40284c:	br	x17

0000000000402850 <getpid@plt>:
  402850:	adrp	x16, 495000 <_ZGTtnam>
  402854:	ldr	x17, [x16, #224]
  402858:	add	x16, x16, #0xe0
  40285c:	br	x17

0000000000402860 <nl_langinfo@plt>:
  402860:	adrp	x16, 495000 <_ZGTtnam>
  402864:	ldr	x17, [x16, #232]
  402868:	add	x16, x16, #0xe8
  40286c:	br	x17

0000000000402870 <fopen@plt>:
  402870:	adrp	x16, 495000 <_ZGTtnam>
  402874:	ldr	x17, [x16, #240]
  402878:	add	x16, x16, #0xf0
  40287c:	br	x17

0000000000402880 <time@plt>:
  402880:	adrp	x16, 495000 <_ZGTtnam>
  402884:	ldr	x17, [x16, #248]
  402888:	add	x16, x16, #0xf8
  40288c:	br	x17

0000000000402890 <malloc@plt>:
  402890:	adrp	x16, 495000 <_ZGTtnam>
  402894:	ldr	x17, [x16, #256]
  402898:	add	x16, x16, #0x100
  40289c:	br	x17

00000000004028a0 <open@plt>:
  4028a0:	adrp	x16, 495000 <_ZGTtnam>
  4028a4:	ldr	x17, [x16, #264]
  4028a8:	add	x16, x16, #0x108
  4028ac:	br	x17

00000000004028b0 <_ITM_addUserCommitAction@plt>:
  4028b0:	adrp	x16, 495000 <_ZGTtnam>
  4028b4:	ldr	x17, [x16, #272]
  4028b8:	add	x16, x16, #0x110
  4028bc:	br	x17

00000000004028c0 <wcswidth@plt>:
  4028c0:	adrp	x16, 495000 <_ZGTtnam>
  4028c4:	ldr	x17, [x16, #280]
  4028c8:	add	x16, x16, #0x118
  4028cc:	br	x17

00000000004028d0 <strncmp@plt>:
  4028d0:	adrp	x16, 495000 <_ZGTtnam>
  4028d4:	ldr	x17, [x16, #288]
  4028d8:	add	x16, x16, #0x120
  4028dc:	br	x17

00000000004028e0 <bindtextdomain@plt>:
  4028e0:	adrp	x16, 495000 <_ZGTtnam>
  4028e4:	ldr	x17, [x16, #296]
  4028e8:	add	x16, x16, #0x128
  4028ec:	br	x17

00000000004028f0 <fileno_unlocked@plt>:
  4028f0:	adrp	x16, 495000 <_ZGTtnam>
  4028f4:	ldr	x17, [x16, #304]
  4028f8:	add	x16, x16, #0x130
  4028fc:	br	x17

0000000000402900 <_ITM_memcpyRtWn@plt>:
  402900:	adrp	x16, 495000 <_ZGTtnam>
  402904:	ldr	x17, [x16, #312]
  402908:	add	x16, x16, #0x138
  40290c:	br	x17

0000000000402910 <__libc_start_main@plt>:
  402910:	adrp	x16, 495000 <_ZGTtnam>
  402914:	ldr	x17, [x16, #320]
  402918:	add	x16, x16, #0x140
  40291c:	br	x17

0000000000402920 <strcat@plt>:
  402920:	adrp	x16, 495000 <_ZGTtnam>
  402924:	ldr	x17, [x16, #328]
  402928:	add	x16, x16, #0x148
  40292c:	br	x17

0000000000402930 <memset@plt>:
  402930:	adrp	x16, 495000 <_ZGTtnam>
  402934:	ldr	x17, [x16, #336]
  402938:	add	x16, x16, #0x150
  40293c:	br	x17

0000000000402940 <fdopen@plt>:
  402940:	adrp	x16, 495000 <_ZGTtnam>
  402944:	ldr	x17, [x16, #344]
  402948:	add	x16, x16, #0x158
  40294c:	br	x17

0000000000402950 <calloc@plt>:
  402950:	adrp	x16, 495000 <_ZGTtnam>
  402954:	ldr	x17, [x16, #352]
  402958:	add	x16, x16, #0x160
  40295c:	br	x17

0000000000402960 <bsearch@plt>:
  402960:	adrp	x16, 495000 <_ZGTtnam>
  402964:	ldr	x17, [x16, #360]
  402968:	add	x16, x16, #0x168
  40296c:	br	x17

0000000000402970 <strcasecmp@plt>:
  402970:	adrp	x16, 495000 <_ZGTtnam>
  402974:	ldr	x17, [x16, #368]
  402978:	add	x16, x16, #0x170
  40297c:	br	x17

0000000000402980 <gmtime@plt>:
  402980:	adrp	x16, 495000 <_ZGTtnam>
  402984:	ldr	x17, [x16, #376]
  402988:	add	x16, x16, #0x178
  40298c:	br	x17

0000000000402990 <readdir@plt>:
  402990:	adrp	x16, 495000 <_ZGTtnam>
  402994:	ldr	x17, [x16, #384]
  402998:	add	x16, x16, #0x180
  40299c:	br	x17

00000000004029a0 <realloc@plt>:
  4029a0:	adrp	x16, 495000 <_ZGTtnam>
  4029a4:	ldr	x17, [x16, #392]
  4029a8:	add	x16, x16, #0x188
  4029ac:	br	x17

00000000004029b0 <getpagesize@plt>:
  4029b0:	adrp	x16, 495000 <_ZGTtnam>
  4029b4:	ldr	x17, [x16, #400]
  4029b8:	add	x16, x16, #0x190
  4029bc:	br	x17

00000000004029c0 <strdup@plt>:
  4029c0:	adrp	x16, 495000 <_ZGTtnam>
  4029c4:	ldr	x17, [x16, #408]
  4029c8:	add	x16, x16, #0x198
  4029cc:	br	x17

00000000004029d0 <closedir@plt>:
  4029d0:	adrp	x16, 495000 <_ZGTtnam>
  4029d4:	ldr	x17, [x16, #416]
  4029d8:	add	x16, x16, #0x1a0
  4029dc:	br	x17

00000000004029e0 <getc_unlocked@plt>:
  4029e0:	adrp	x16, 495000 <_ZGTtnam>
  4029e4:	ldr	x17, [x16, #424]
  4029e8:	add	x16, x16, #0x1a8
  4029ec:	br	x17

00000000004029f0 <strerror@plt>:
  4029f0:	adrp	x16, 495000 <_ZGTtnam>
  4029f4:	ldr	x17, [x16, #432]
  4029f8:	add	x16, x16, #0x1b0
  4029fc:	br	x17

0000000000402a00 <close@plt>:
  402a00:	adrp	x16, 495000 <_ZGTtnam>
  402a04:	ldr	x17, [x16, #440]
  402a08:	add	x16, x16, #0x1b8
  402a0c:	br	x17

0000000000402a10 <strrchr@plt>:
  402a10:	adrp	x16, 495000 <_ZGTtnam>
  402a14:	ldr	x17, [x16, #448]
  402a18:	add	x16, x16, #0x1c0
  402a1c:	br	x17

0000000000402a20 <__gmon_start__@plt>:
  402a20:	adrp	x16, 495000 <_ZGTtnam>
  402a24:	ldr	x17, [x16, #456]
  402a28:	add	x16, x16, #0x1c8
  402a2c:	br	x17

0000000000402a30 <write@plt>:
  402a30:	adrp	x16, 495000 <_ZGTtnam>
  402a34:	ldr	x17, [x16, #464]
  402a38:	add	x16, x16, #0x1d0
  402a3c:	br	x17

0000000000402a40 <fseek@plt>:
  402a40:	adrp	x16, 495000 <_ZGTtnam>
  402a44:	ldr	x17, [x16, #472]
  402a48:	add	x16, x16, #0x1d8
  402a4c:	br	x17

0000000000402a50 <abort@plt>:
  402a50:	adrp	x16, 495000 <_ZGTtnam>
  402a54:	ldr	x17, [x16, #480]
  402a58:	add	x16, x16, #0x1e0
  402a5c:	br	x17

0000000000402a60 <gzputs@plt>:
  402a60:	adrp	x16, 495000 <_ZGTtnam>
  402a64:	ldr	x17, [x16, #488]
  402a68:	add	x16, x16, #0x1e8
  402a6c:	br	x17

0000000000402a70 <feof@plt>:
  402a70:	adrp	x16, 495000 <_ZGTtnam>
  402a74:	ldr	x17, [x16, #496]
  402a78:	add	x16, x16, #0x1f0
  402a7c:	br	x17

0000000000402a80 <fread_unlocked@plt>:
  402a80:	adrp	x16, 495000 <_ZGTtnam>
  402a84:	ldr	x17, [x16, #504]
  402a88:	add	x16, x16, #0x1f8
  402a8c:	br	x17

0000000000402a90 <memcmp@plt>:
  402a90:	adrp	x16, 495000 <_ZGTtnam>
  402a94:	ldr	x17, [x16, #512]
  402a98:	add	x16, x16, #0x200
  402a9c:	br	x17

0000000000402aa0 <pthread_once@plt>:
  402aa0:	adrp	x16, 495000 <_ZGTtnam>
  402aa4:	ldr	x17, [x16, #520]
  402aa8:	add	x16, x16, #0x208
  402aac:	br	x17

0000000000402ab0 <textdomain@plt>:
  402ab0:	adrp	x16, 495000 <_ZGTtnam>
  402ab4:	ldr	x17, [x16, #528]
  402ab8:	add	x16, x16, #0x210
  402abc:	br	x17

0000000000402ac0 <getopt_long@plt>:
  402ac0:	adrp	x16, 495000 <_ZGTtnam>
  402ac4:	ldr	x17, [x16, #536]
  402ac8:	add	x16, x16, #0x218
  402acc:	br	x17

0000000000402ad0 <strcmp@plt>:
  402ad0:	adrp	x16, 495000 <_ZGTtnam>
  402ad4:	ldr	x17, [x16, #544]
  402ad8:	add	x16, x16, #0x220
  402adc:	br	x17

0000000000402ae0 <iconv@plt>:
  402ae0:	adrp	x16, 495000 <_ZGTtnam>
  402ae4:	ldr	x17, [x16, #552]
  402ae8:	add	x16, x16, #0x228
  402aec:	br	x17

0000000000402af0 <mmap@plt>:
  402af0:	adrp	x16, 495000 <_ZGTtnam>
  402af4:	ldr	x17, [x16, #560]
  402af8:	add	x16, x16, #0x230
  402afc:	br	x17

0000000000402b00 <fread@plt>:
  402b00:	adrp	x16, 495000 <_ZGTtnam>
  402b04:	ldr	x17, [x16, #568]
  402b08:	add	x16, x16, #0x238
  402b0c:	br	x17

0000000000402b10 <dl_iterate_phdr@plt>:
  402b10:	adrp	x16, 495000 <_ZGTtnam>
  402b14:	ldr	x17, [x16, #576]
  402b18:	add	x16, x16, #0x240
  402b1c:	br	x17

0000000000402b20 <dgettext@plt>:
  402b20:	adrp	x16, 495000 <_ZGTtnam>
  402b24:	ldr	x17, [x16, #584]
  402b28:	add	x16, x16, #0x248
  402b2c:	br	x17

0000000000402b30 <free@plt>:
  402b30:	adrp	x16, 495000 <_ZGTtnam>
  402b34:	ldr	x17, [x16, #592]
  402b38:	add	x16, x16, #0x250
  402b3c:	br	x17

0000000000402b40 <ungetc@plt>:
  402b40:	adrp	x16, 495000 <_ZGTtnam>
  402b44:	ldr	x17, [x16, #600]
  402b48:	add	x16, x16, #0x258
  402b4c:	br	x17

0000000000402b50 <freopen@plt>:
  402b50:	adrp	x16, 495000 <_ZGTtnam>
  402b54:	ldr	x17, [x16, #608]
  402b58:	add	x16, x16, #0x260
  402b5c:	br	x17

0000000000402b60 <strchr@plt>:
  402b60:	adrp	x16, 495000 <_ZGTtnam>
  402b64:	ldr	x17, [x16, #616]
  402b68:	add	x16, x16, #0x268
  402b6c:	br	x17

0000000000402b70 <_ITM_RU8@plt>:
  402b70:	adrp	x16, 495000 <_ZGTtnam>
  402b74:	ldr	x17, [x16, #624]
  402b78:	add	x16, x16, #0x270
  402b7c:	br	x17

0000000000402b80 <fwrite@plt>:
  402b80:	adrp	x16, 495000 <_ZGTtnam>
  402b84:	ldr	x17, [x16, #632]
  402b88:	add	x16, x16, #0x278
  402b8c:	br	x17

0000000000402b90 <fcntl@plt>:
  402b90:	adrp	x16, 495000 <_ZGTtnam>
  402b94:	ldr	x17, [x16, #640]
  402b98:	add	x16, x16, #0x280
  402b9c:	br	x17

0000000000402ba0 <munmap@plt>:
  402ba0:	adrp	x16, 495000 <_ZGTtnam>
  402ba4:	ldr	x17, [x16, #648]
  402ba8:	add	x16, x16, #0x288
  402bac:	br	x17

0000000000402bb0 <fflush@plt>:
  402bb0:	adrp	x16, 495000 <_ZGTtnam>
  402bb4:	ldr	x17, [x16, #656]
  402bb8:	add	x16, x16, #0x290
  402bbc:	br	x17

0000000000402bc0 <gzopen@plt>:
  402bc0:	adrp	x16, 495000 <_ZGTtnam>
  402bc4:	ldr	x17, [x16, #664]
  402bc8:	add	x16, x16, #0x298
  402bcc:	br	x17

0000000000402bd0 <strcpy@plt>:
  402bd0:	adrp	x16, 495000 <_ZGTtnam>
  402bd4:	ldr	x17, [x16, #672]
  402bd8:	add	x16, x16, #0x2a0
  402bdc:	br	x17

0000000000402be0 <iconv_open@plt>:
  402be0:	adrp	x16, 495000 <_ZGTtnam>
  402be4:	ldr	x17, [x16, #680]
  402be8:	add	x16, x16, #0x2a8
  402bec:	br	x17

0000000000402bf0 <vsprintf@plt>:
  402bf0:	adrp	x16, 495000 <_ZGTtnam>
  402bf4:	ldr	x17, [x16, #688]
  402bf8:	add	x16, x16, #0x2b0
  402bfc:	br	x17

0000000000402c00 <__lxstat@plt>:
  402c00:	adrp	x16, 495000 <_ZGTtnam>
  402c04:	ldr	x17, [x16, #696]
  402c08:	add	x16, x16, #0x2b8
  402c0c:	br	x17

0000000000402c10 <read@plt>:
  402c10:	adrp	x16, 495000 <_ZGTtnam>
  402c14:	ldr	x17, [x16, #704]
  402c18:	add	x16, x16, #0x2c0
  402c1c:	br	x17

0000000000402c20 <memchr@plt>:
  402c20:	adrp	x16, 495000 <_ZGTtnam>
  402c24:	ldr	x17, [x16, #712]
  402c28:	add	x16, x16, #0x2c8
  402c2c:	br	x17

0000000000402c30 <isatty@plt>:
  402c30:	adrp	x16, 495000 <_ZGTtnam>
  402c34:	ldr	x17, [x16, #720]
  402c38:	add	x16, x16, #0x2d0
  402c3c:	br	x17

0000000000402c40 <_ITM_memcpyRnWt@plt>:
  402c40:	adrp	x16, 495000 <_ZGTtnam>
  402c44:	ldr	x17, [x16, #728]
  402c48:	add	x16, x16, #0x2d8
  402c4c:	br	x17

0000000000402c50 <asctime@plt>:
  402c50:	adrp	x16, 495000 <_ZGTtnam>
  402c54:	ldr	x17, [x16, #736]
  402c58:	add	x16, x16, #0x2e0
  402c5c:	br	x17

0000000000402c60 <fputc_unlocked@plt>:
  402c60:	adrp	x16, 495000 <_ZGTtnam>
  402c64:	ldr	x17, [x16, #744]
  402c68:	add	x16, x16, #0x2e8
  402c6c:	br	x17

0000000000402c70 <__fxstat@plt>:
  402c70:	adrp	x16, 495000 <_ZGTtnam>
  402c74:	ldr	x17, [x16, #752]
  402c78:	add	x16, x16, #0x2f0
  402c7c:	br	x17

0000000000402c80 <strstr@plt>:
  402c80:	adrp	x16, 495000 <_ZGTtnam>
  402c84:	ldr	x17, [x16, #760]
  402c88:	add	x16, x16, #0x2f8
  402c8c:	br	x17

0000000000402c90 <realpath@plt>:
  402c90:	adrp	x16, 495000 <_ZGTtnam>
  402c94:	ldr	x17, [x16, #768]
  402c98:	add	x16, x16, #0x300
  402c9c:	br	x17

0000000000402ca0 <fputs_unlocked@plt>:
  402ca0:	adrp	x16, 495000 <_ZGTtnam>
  402ca4:	ldr	x17, [x16, #776]
  402ca8:	add	x16, x16, #0x308
  402cac:	br	x17

0000000000402cb0 <__fsetlocking@plt>:
  402cb0:	adrp	x16, 495000 <_ZGTtnam>
  402cb4:	ldr	x17, [x16, #784]
  402cb8:	add	x16, x16, #0x310
  402cbc:	br	x17

0000000000402cc0 <strcspn@plt>:
  402cc0:	adrp	x16, 495000 <_ZGTtnam>
  402cc4:	ldr	x17, [x16, #792]
  402cc8:	add	x16, x16, #0x318
  402ccc:	br	x17

0000000000402cd0 <vfprintf@plt>:
  402cd0:	adrp	x16, 495000 <_ZGTtnam>
  402cd4:	ldr	x17, [x16, #800]
  402cd8:	add	x16, x16, #0x320
  402cdc:	br	x17

0000000000402ce0 <printf@plt>:
  402ce0:	adrp	x16, 495000 <_ZGTtnam>
  402ce4:	ldr	x17, [x16, #808]
  402ce8:	add	x16, x16, #0x328
  402cec:	br	x17

0000000000402cf0 <__errno_location@plt>:
  402cf0:	adrp	x16, 495000 <_ZGTtnam>
  402cf4:	ldr	x17, [x16, #816]
  402cf8:	add	x16, x16, #0x330
  402cfc:	br	x17

0000000000402d00 <getenv@plt>:
  402d00:	adrp	x16, 495000 <_ZGTtnam>
  402d04:	ldr	x17, [x16, #824]
  402d08:	add	x16, x16, #0x338
  402d0c:	br	x17

0000000000402d10 <putchar@plt>:
  402d10:	adrp	x16, 495000 <_ZGTtnam>
  402d14:	ldr	x17, [x16, #832]
  402d18:	add	x16, x16, #0x340
  402d1c:	br	x17

0000000000402d20 <__xstat@plt>:
  402d20:	adrp	x16, 495000 <_ZGTtnam>
  402d24:	ldr	x17, [x16, #840]
  402d28:	add	x16, x16, #0x348
  402d2c:	br	x17

0000000000402d30 <_ZGTtdlPv@plt>:
  402d30:	adrp	x16, 495000 <_ZGTtnam>
  402d34:	ldr	x17, [x16, #848]
  402d38:	add	x16, x16, #0x350
  402d3c:	br	x17

0000000000402d40 <pthread_mutex_lock@plt>:
  402d40:	adrp	x16, 495000 <_ZGTtnam>
  402d44:	ldr	x17, [x16, #856]
  402d48:	add	x16, x16, #0x358
  402d4c:	br	x17

0000000000402d50 <syscall@plt>:
  402d50:	adrp	x16, 495000 <_ZGTtnam>
  402d54:	ldr	x17, [x16, #864]
  402d58:	add	x16, x16, #0x360
  402d5c:	br	x17

0000000000402d60 <pthread_mutex_unlock@plt>:
  402d60:	adrp	x16, 495000 <_ZGTtnam>
  402d64:	ldr	x17, [x16, #872]
  402d68:	add	x16, x16, #0x368
  402d6c:	br	x17

0000000000402d70 <unlink@plt>:
  402d70:	adrp	x16, 495000 <_ZGTtnam>
  402d74:	ldr	x17, [x16, #880]
  402d78:	add	x16, x16, #0x370
  402d7c:	br	x17

0000000000402d80 <gettext@plt>:
  402d80:	adrp	x16, 495000 <_ZGTtnam>
  402d84:	ldr	x17, [x16, #888]
  402d88:	add	x16, x16, #0x378
  402d8c:	br	x17

0000000000402d90 <fprintf@plt>:
  402d90:	adrp	x16, 495000 <_ZGTtnam>
  402d94:	ldr	x17, [x16, #896]
  402d98:	add	x16, x16, #0x380
  402d9c:	br	x17

0000000000402da0 <fgets@plt>:
  402da0:	adrp	x16, 495000 <_ZGTtnam>
  402da4:	ldr	x17, [x16, #904]
  402da8:	add	x16, x16, #0x388
  402dac:	br	x17

0000000000402db0 <ioctl@plt>:
  402db0:	adrp	x16, 495000 <_ZGTtnam>
  402db4:	ldr	x17, [x16, #912]
  402db8:	add	x16, x16, #0x390
  402dbc:	br	x17

0000000000402dc0 <setlocale@plt>:
  402dc0:	adrp	x16, 495000 <_ZGTtnam>
  402dc4:	ldr	x17, [x16, #920]
  402dc8:	add	x16, x16, #0x398
  402dcc:	br	x17

0000000000402dd0 <ferror@plt>:
  402dd0:	adrp	x16, 495000 <_ZGTtnam>
  402dd4:	ldr	x17, [x16, #928]
  402dd8:	add	x16, x16, #0x3a0
  402ddc:	br	x17

Disassembly of section .text:

0000000000402de0 <_obstack_begin@@Base-0x41a34>:
  402de0:	mov	w8, w1
  402de4:	mov	x7, x2
  402de8:	stp	x29, x30, [sp, #-16]!
  402dec:	mov	x29, sp
  402df0:	bl	40cb18 <ferror@plt+0x9d48>
  402df4:	mov	x2, x0
  402df8:	mov	w3, w8
  402dfc:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  402e00:	mov	x1, x7
  402e04:	add	x0, x0, #0x686
  402e08:	bl	40dd98 <ferror@plt+0xafc8>
  402e0c:	stp	x29, x30, [sp, #-16]!
  402e10:	mov	x0, #0x8                   	// #8
  402e14:	mov	x29, sp
  402e18:	bl	44a2a8 <_obstack_memory_used@@Base+0x58a4>
  402e1c:	adrp	x3, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  402e20:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  402e24:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  402e28:	ldr	x3, [x3, #3744]
  402e2c:	ldr	x2, [x2, #3704]
  402e30:	add	x3, x3, #0x10
  402e34:	ldr	x1, [x1, #3976]
  402e38:	str	x3, [x0]
  402e3c:	bl	44b288 <_obstack_memory_used@@Base+0x6884>
  402e40:	stp	x29, x30, [sp, #-16]!
  402e44:	mov	x0, #0x8                   	// #8
  402e48:	mov	x29, sp
  402e4c:	bl	44a2a8 <_obstack_memory_used@@Base+0x58a4>
  402e50:	adrp	x3, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  402e54:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  402e58:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  402e5c:	ldr	x3, [x3, #3912]
  402e60:	ldr	x2, [x2, #3688]
  402e64:	add	x3, x3, #0x10
  402e68:	ldr	x1, [x1, #3656]
  402e6c:	str	x3, [x0]
  402e70:	bl	44b288 <_obstack_memory_used@@Base+0x6884>
  402e74:	stp	x29, x30, [sp, #-16]!
  402e78:	mov	x0, #0x8                   	// #8
  402e7c:	mov	x29, sp
  402e80:	bl	44a2a8 <_obstack_memory_used@@Base+0x58a4>
  402e84:	adrp	x3, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  402e88:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  402e8c:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  402e90:	ldr	x3, [x3, #3616]
  402e94:	ldr	x2, [x2, #3752]
  402e98:	add	x3, x3, #0x10
  402e9c:	ldr	x1, [x1, #3896]
  402ea0:	str	x3, [x0]
  402ea4:	bl	44b288 <_obstack_memory_used@@Base+0x6884>
  402ea8:	stp	x29, x30, [sp, #-16]!
  402eac:	mov	x0, #0x8                   	// #8
  402eb0:	mov	x29, sp
  402eb4:	bl	44a2a8 <_obstack_memory_used@@Base+0x58a4>
  402eb8:	adrp	x3, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  402ebc:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  402ec0:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  402ec4:	ldr	x3, [x3, #3728]
  402ec8:	ldr	x2, [x2, #3736]
  402ecc:	add	x3, x3, #0x10
  402ed0:	ldr	x1, [x1, #3808]
  402ed4:	str	x3, [x0]
  402ed8:	bl	44b288 <_obstack_memory_used@@Base+0x6884>
  402edc:	stp	x29, x30, [sp, #-32]!
  402ee0:	mov	x29, sp
  402ee4:	str	x19, [sp, #16]
  402ee8:	mov	x19, x0
  402eec:	mov	x0, #0x10                  	// #16
  402ef0:	bl	44a2a8 <_obstack_memory_used@@Base+0x58a4>
  402ef4:	mov	x1, x19
  402ef8:	mov	x19, x0
  402efc:	bl	44bab0 <_obstack_memory_used@@Base+0x70ac>
  402f00:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  402f04:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  402f08:	mov	x0, x19
  402f0c:	ldr	x2, [x2, #4000]
  402f10:	ldr	x1, [x1, #3768]
  402f14:	bl	44b288 <_obstack_memory_used@@Base+0x6884>
  402f18:	mov	x1, x0
  402f1c:	mov	x0, x19
  402f20:	mov	x19, x1
  402f24:	bl	44a310 <_obstack_memory_used@@Base+0x590c>
  402f28:	mov	x0, x19
  402f2c:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  402f30:	stp	x29, x30, [sp, #-32]!
  402f34:	mov	x29, sp
  402f38:	str	x19, [sp, #16]
  402f3c:	mov	x19, x0
  402f40:	mov	x0, #0x10                  	// #16
  402f44:	bl	44a2a8 <_obstack_memory_used@@Base+0x58a4>
  402f48:	mov	x1, x19
  402f4c:	mov	x19, x0
  402f50:	bl	44bb00 <_obstack_memory_used@@Base+0x70fc>
  402f54:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  402f58:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  402f5c:	mov	x0, x19
  402f60:	ldr	x2, [x2, #3904]
  402f64:	ldr	x1, [x1, #4024]
  402f68:	bl	44b288 <_obstack_memory_used@@Base+0x6884>
  402f6c:	mov	x1, x0
  402f70:	mov	x0, x19
  402f74:	mov	x19, x1
  402f78:	bl	44a310 <_obstack_memory_used@@Base+0x590c>
  402f7c:	mov	x0, x19
  402f80:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  402f84:	stp	x29, x30, [sp, #-32]!
  402f88:	mov	x29, sp
  402f8c:	str	x19, [sp, #16]
  402f90:	mov	x19, x0
  402f94:	mov	x0, #0x10                  	// #16
  402f98:	bl	44a2a8 <_obstack_memory_used@@Base+0x58a4>
  402f9c:	mov	x1, x19
  402fa0:	mov	x19, x0
  402fa4:	bl	44bb30 <_obstack_memory_used@@Base+0x712c>
  402fa8:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  402fac:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  402fb0:	mov	x0, x19
  402fb4:	ldr	x2, [x2, #3648]
  402fb8:	ldr	x1, [x1, #4056]
  402fbc:	bl	44b288 <_obstack_memory_used@@Base+0x6884>
  402fc0:	mov	x1, x0
  402fc4:	mov	x0, x19
  402fc8:	mov	x19, x1
  402fcc:	bl	44a310 <_obstack_memory_used@@Base+0x590c>
  402fd0:	mov	x0, x19
  402fd4:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  402fd8:	stp	x29, x30, [sp, #-32]!
  402fdc:	mov	x29, sp
  402fe0:	str	x19, [sp, #16]
  402fe4:	mov	x19, x0
  402fe8:	mov	x0, #0x10                  	// #16
  402fec:	bl	44a2a8 <_obstack_memory_used@@Base+0x58a4>
  402ff0:	mov	x1, x19
  402ff4:	mov	x19, x0
  402ff8:	bl	44bb60 <_obstack_memory_used@@Base+0x715c>
  402ffc:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  403000:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  403004:	mov	x0, x19
  403008:	ldr	x2, [x2, #3720]
  40300c:	ldr	x1, [x1, #3816]
  403010:	bl	44b288 <_obstack_memory_used@@Base+0x6884>
  403014:	mov	x1, x0
  403018:	mov	x0, x19
  40301c:	mov	x19, x1
  403020:	bl	44a310 <_obstack_memory_used@@Base+0x590c>
  403024:	mov	x0, x19
  403028:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  40302c:	stp	x29, x30, [sp, #-32]!
  403030:	mov	x29, sp
  403034:	str	x19, [sp, #16]
  403038:	mov	x19, x0
  40303c:	mov	x0, #0x10                  	// #16
  403040:	bl	44a2a8 <_obstack_memory_used@@Base+0x58a4>
  403044:	mov	x1, x19
  403048:	mov	x19, x0
  40304c:	bl	44bb90 <_obstack_memory_used@@Base+0x718c>
  403050:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  403054:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  403058:	mov	x0, x19
  40305c:	ldr	x2, [x2, #3632]
  403060:	ldr	x1, [x1, #3664]
  403064:	bl	44b288 <_obstack_memory_used@@Base+0x6884>
  403068:	mov	x1, x0
  40306c:	mov	x0, x19
  403070:	mov	x19, x1
  403074:	bl	44a310 <_obstack_memory_used@@Base+0x590c>
  403078:	mov	x0, x19
  40307c:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  403080:	stp	x29, x30, [sp, #-32]!
  403084:	mov	x29, sp
  403088:	str	x19, [sp, #16]
  40308c:	mov	x19, x0
  403090:	mov	x0, #0x10                  	// #16
  403094:	bl	44a2a8 <_obstack_memory_used@@Base+0x58a4>
  403098:	mov	x1, x19
  40309c:	mov	x19, x0
  4030a0:	bl	44bbc0 <_obstack_memory_used@@Base+0x71bc>
  4030a4:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  4030a8:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  4030ac:	mov	x0, x19
  4030b0:	ldr	x2, [x2, #3888]
  4030b4:	ldr	x1, [x1, #3776]
  4030b8:	bl	44b288 <_obstack_memory_used@@Base+0x6884>
  4030bc:	mov	x1, x0
  4030c0:	mov	x0, x19
  4030c4:	mov	x19, x1
  4030c8:	bl	44a310 <_obstack_memory_used@@Base+0x590c>
  4030cc:	mov	x0, x19
  4030d0:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  4030d4:	stp	x29, x30, [sp, #-32]!
  4030d8:	mov	x29, sp
  4030dc:	str	x19, [sp, #16]
  4030e0:	mov	x19, x0
  4030e4:	mov	x0, #0x10                  	// #16
  4030e8:	bl	44a2a8 <_obstack_memory_used@@Base+0x58a4>
  4030ec:	mov	x1, x19
  4030f0:	mov	x19, x0
  4030f4:	bl	44bc10 <_obstack_memory_used@@Base+0x720c>
  4030f8:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  4030fc:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  403100:	mov	x0, x19
  403104:	ldr	x2, [x2, #3960]
  403108:	ldr	x1, [x1, #3624]
  40310c:	bl	44b288 <_obstack_memory_used@@Base+0x6884>
  403110:	mov	x1, x0
  403114:	mov	x0, x19
  403118:	mov	x19, x1
  40311c:	bl	44a310 <_obstack_memory_used@@Base+0x590c>
  403120:	mov	x0, x19
  403124:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  403128:	stp	x29, x30, [sp, #-32]!
  40312c:	mov	x29, sp
  403130:	str	x19, [sp, #16]
  403134:	mov	x19, x0
  403138:	mov	x0, #0x10                  	// #16
  40313c:	bl	44a2a8 <_obstack_memory_used@@Base+0x58a4>
  403140:	mov	x1, x19
  403144:	mov	x19, x0
  403148:	bl	44bc40 <_obstack_memory_used@@Base+0x723c>
  40314c:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  403150:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  403154:	mov	x0, x19
  403158:	ldr	x2, [x2, #3968]
  40315c:	ldr	x1, [x1, #3672]
  403160:	bl	44b288 <_obstack_memory_used@@Base+0x6884>
  403164:	mov	x1, x0
  403168:	mov	x0, x19
  40316c:	mov	x19, x1
  403170:	bl	44a310 <_obstack_memory_used@@Base+0x590c>
  403174:	mov	x0, x19
  403178:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  40317c:	stp	x29, x30, [sp, #-32]!
  403180:	mov	x29, sp
  403184:	str	x19, [sp, #16]
  403188:	mov	x19, x0
  40318c:	mov	x0, #0x10                  	// #16
  403190:	bl	44a2a8 <_obstack_memory_used@@Base+0x58a4>
  403194:	mov	x1, x19
  403198:	mov	x19, x0
  40319c:	bl	44bc70 <_obstack_memory_used@@Base+0x726c>
  4031a0:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  4031a4:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  4031a8:	mov	x0, x19
  4031ac:	ldr	x2, [x2, #3840]
  4031b0:	ldr	x1, [x1, #3712]
  4031b4:	bl	44b288 <_obstack_memory_used@@Base+0x6884>
  4031b8:	mov	x1, x0
  4031bc:	mov	x0, x19
  4031c0:	mov	x19, x1
  4031c4:	bl	44a310 <_obstack_memory_used@@Base+0x590c>
  4031c8:	mov	x0, x19
  4031cc:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  4031d0:	stp	x29, x30, [sp, #-16]!
  4031d4:	mov	x0, #0x8                   	// #8
  4031d8:	mov	x29, sp
  4031dc:	bl	44a2a8 <_obstack_memory_used@@Base+0x58a4>
  4031e0:	adrp	x3, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  4031e4:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  4031e8:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  4031ec:	ldr	x3, [x3, #3936]
  4031f0:	ldr	x2, [x2, #4008]
  4031f4:	add	x3, x3, #0x10
  4031f8:	ldr	x1, [x1, #3696]
  4031fc:	str	x3, [x0]
  403200:	bl	44b288 <_obstack_memory_used@@Base+0x6884>
  403204:	stp	x29, x30, [sp, #-32]!
  403208:	adrp	x0, 408000 <ferror@plt+0x5230>
  40320c:	add	x0, x0, #0xbc4
  403210:	mov	x29, sp
  403214:	stp	x19, x20, [sp, #16]
  403218:	adrp	x19, 495000 <_obstack_memory_used@@Base+0x505fc>
  40321c:	add	x19, x19, #0x5d8
  403220:	add	x1, x19, #0x140
  403224:	adrp	x20, 495000 <_obstack_memory_used@@Base+0x505fc>
  403228:	add	x20, x20, #0x3b0
  40322c:	mov	x2, x20
  403230:	str	xzr, [x19, #320]
  403234:	stp	xzr, xzr, [x1, #8]
  403238:	bl	4027c0 <__cxa_atexit@plt>
  40323c:	str	wzr, [x19, #352]
  403240:	add	x1, x19, #0x158
  403244:	add	x0, x19, #0x160
  403248:	mov	x2, x20
  40324c:	stp	xzr, x0, [x1, #16]
  403250:	stp	x0, xzr, [x1, #32]
  403254:	adrp	x0, 408000 <ferror@plt+0x5230>
  403258:	add	x0, x0, #0xf40
  40325c:	bl	4027c0 <__cxa_atexit@plt>
  403260:	str	xzr, [x19, #264]
  403264:	add	x1, x19, #0x108
  403268:	mov	x2, x20
  40326c:	adrp	x0, 40a000 <ferror@plt+0x7230>
  403270:	add	x0, x0, #0x214
  403274:	stp	xzr, xzr, [x1, #8]
  403278:	bl	4027c0 <__cxa_atexit@plt>
  40327c:	str	xzr, [x19, #240]
  403280:	add	x1, x19, #0xf0
  403284:	mov	x2, x20
  403288:	adrp	x0, 408000 <ferror@plt+0x5230>
  40328c:	add	x0, x0, #0xb44
  403290:	stp	xzr, xzr, [x1, #8]
  403294:	bl	4027c0 <__cxa_atexit@plt>
  403298:	str	xzr, [x19, #392]
  40329c:	add	x1, x19, #0x188
  4032a0:	mov	x2, x20
  4032a4:	ldp	x19, x20, [sp, #16]
  4032a8:	adrp	x0, 408000 <ferror@plt+0x5230>
  4032ac:	stp	xzr, xzr, [x1, #8]
  4032b0:	add	x0, x0, #0xb4c
  4032b4:	ldp	x29, x30, [sp], #32
  4032b8:	b	4027c0 <__cxa_atexit@plt>
  4032bc:	stp	x29, x30, [sp, #-320]!
  4032c0:	mov	x29, sp
  4032c4:	stp	x19, x20, [sp, #16]
  4032c8:	ldr	x19, [x1]
  4032cc:	stp	x21, x22, [sp, #32]
  4032d0:	stp	x23, x24, [sp, #48]
  4032d4:	stp	x25, x26, [sp, #64]
  4032d8:	stp	x27, x28, [sp, #80]
  4032dc:	str	x1, [sp, #160]
  4032e0:	str	w0, [sp, #172]
  4032e4:	mov	x0, x19
  4032e8:	bl	402700 <strlen@plt>
  4032ec:	add	x0, x19, x0
  4032f0:	cmp	x19, x0
  4032f4:	b.eq	40330c <ferror@plt+0x53c>  // b.none
  4032f8:	ldurb	w1, [x0, #-1]
  4032fc:	cmp	w1, #0x2f
  403300:	b.eq	40330c <ferror@plt+0x53c>  // b.none
  403304:	sub	x0, x0, #0x1
  403308:	b	4032f0 <ferror@plt+0x520>
  40330c:	adrp	x1, 495000 <_obstack_memory_used@@Base+0x505fc>
  403310:	adrp	x20, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  403314:	adrp	x21, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  403318:	adrp	x22, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  40331c:	str	x0, [x1, #2040]
  403320:	bl	4451b8 <_obstack_memory_used@@Base+0x7b4>
  403324:	bl	443774 <ferror@plt+0x409a4>
  403328:	add	x20, x20, #0xd38
  40332c:	bl	415424 <ferror@plt+0x12654>
  403330:	add	x21, x21, #0x8b7
  403334:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  403338:	mov	w1, #0x0                   	// #0
  40333c:	add	x22, x22, #0xd20
  403340:	adrp	x19, 495000 <_obstack_memory_used@@Base+0x505fc>
  403344:	ldr	x0, [x0, #960]
  403348:	bl	40c644 <ferror@plt+0x9874>
  40334c:	add	x1, sp, #0xa0
  403350:	add	x0, sp, #0xac
  403354:	bl	4416d8 <ferror@plt+0x3e908>
  403358:	ldr	w23, [sp, #172]
  40335c:	ldr	x24, [sp, #160]
  403360:	mov	x3, x20
  403364:	mov	x2, x21
  403368:	mov	x1, x24
  40336c:	mov	w0, w23
  403370:	mov	x4, #0x0                   	// #0
  403374:	bl	402ac0 <getopt_long@plt>
  403378:	cmn	w0, #0x1
  40337c:	b.eq	403564 <ferror@plt+0x794>  // b.none
  403380:	sub	w0, w0, #0x61
  403384:	cmp	w0, #0x17
  403388:	b.hi	403578 <ferror@plt+0x7a8>  // b.pmore
  40338c:	ldrb	w0, [x22, w0, uxtw]
  403390:	adr	x1, 40339c <ferror@plt+0x5cc>
  403394:	add	x0, x1, w0, sxtb #2
  403398:	br	x0
  40339c:	add	x0, x19, #0x5d8
  4033a0:	mov	w1, #0x1                   	// #1
  4033a4:	str	w1, [x0, #168]
  4033a8:	b	403360 <ferror@plt+0x590>
  4033ac:	add	x0, x19, #0x5d8
  4033b0:	mov	w1, #0x1                   	// #1
  4033b4:	str	w1, [x0, #172]
  4033b8:	b	403360 <ferror@plt+0x590>
  4033bc:	add	x0, x19, #0x5d8
  4033c0:	mov	w1, #0x1                   	// #1
  4033c4:	str	w1, [x0, #144]
  4033c8:	b	403360 <ferror@plt+0x590>
  4033cc:	add	x0, x19, #0x5d8
  4033d0:	mov	w1, #0x1                   	// #1
  4033d4:	str	w1, [x0, #416]
  4033d8:	b	403360 <ferror@plt+0x590>
  4033dc:	mov	w0, #0x0                   	// #0
  4033e0:	bl	404ed8 <ferror@plt+0x2108>
  4033e4:	add	x0, x19, #0x5d8
  4033e8:	mov	w1, #0x1                   	// #1
  4033ec:	str	w1, [x0, #452]
  4033f0:	b	403360 <ferror@plt+0x590>
  4033f4:	add	x0, x19, #0x5d8
  4033f8:	mov	w1, #0x1                   	// #1
  4033fc:	str	w1, [x0, #56]
  403400:	b	403360 <ferror@plt+0x590>
  403404:	add	x0, x19, #0x5d8
  403408:	mov	w1, #0x1                   	// #1
  40340c:	str	w1, [x0, #160]
  403410:	b	403360 <ferror@plt+0x590>
  403414:	add	x0, x19, #0x5d8
  403418:	mov	w1, #0x1                   	// #1
  40341c:	str	w1, [x0, #164]
  403420:	b	403360 <ferror@plt+0x590>
  403424:	add	x0, x19, #0x5d8
  403428:	mov	w1, #0x1                   	// #1
  40342c:	str	w1, [x0, #180]
  403430:	b	403360 <ferror@plt+0x590>
  403434:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  403438:	str	wzr, [x0, #952]
  40343c:	b	403360 <ferror@plt+0x590>
  403440:	add	x0, x19, #0x5d8
  403444:	adrp	x1, 495000 <_obstack_memory_used@@Base+0x505fc>
  403448:	ldr	x1, [x1, #1448]
  40344c:	str	x1, [x0, #464]
  403450:	b	403360 <ferror@plt+0x590>
  403454:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  403458:	add	x25, x19, #0x5d8
  40345c:	ldr	x0, [x0, #1448]
  403460:	str	x0, [x25, #296]
  403464:	bl	402700 <strlen@plt>
  403468:	str	x0, [x25, #288]
  40346c:	b	403360 <ferror@plt+0x590>
  403470:	add	x0, x19, #0x5d8
  403474:	mov	w1, #0x1                   	// #1
  403478:	str	w1, [x0, #432]
  40347c:	b	403360 <ferror@plt+0x590>
  403480:	add	x0, x19, #0x5d8
  403484:	mov	w1, #0x1                   	// #1
  403488:	str	w1, [x0, #176]
  40348c:	b	403360 <ferror@plt+0x590>
  403490:	add	x0, x19, #0x5d8
  403494:	mov	w1, #0x1                   	// #1
  403498:	str	w1, [x0, #152]
  40349c:	b	403360 <ferror@plt+0x590>
  4034a0:	add	x1, x19, #0x5d8
  4034a4:	mov	w0, #0x1                   	// #1
  4034a8:	str	w0, [x1, #436]
  4034ac:	adrp	x1, 495000 <_obstack_memory_used@@Base+0x505fc>
  4034b0:	str	w0, [x1, #952]
  4034b4:	b	403360 <ferror@plt+0x590>
  4034b8:	add	x0, x19, #0x5d8
  4034bc:	mov	w1, #0x1                   	// #1
  4034c0:	str	w1, [x0, #472]
  4034c4:	b	403360 <ferror@plt+0x590>
  4034c8:	add	x0, x19, #0x5d8
  4034cc:	mov	w1, #0x1                   	// #1
  4034d0:	str	w1, [x0, #456]
  4034d4:	b	403360 <ferror@plt+0x590>
  4034d8:	add	x0, x19, #0x5d8
  4034dc:	mov	w1, #0x1                   	// #1
  4034e0:	str	w1, [x0, #148]
  4034e4:	b	403360 <ferror@plt+0x590>
  4034e8:	add	x0, x19, #0x5d8
  4034ec:	mov	w1, #0x1                   	// #1
  4034f0:	str	w1, [x0, #440]
  4034f4:	b	403360 <ferror@plt+0x590>
  4034f8:	adrp	x19, 495000 <_obstack_memory_used@@Base+0x505fc>
  4034fc:	adrp	x3, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  403500:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  403504:	add	x3, x3, #0x8af
  403508:	ldr	x0, [x19, #1464]
  40350c:	add	x2, x2, #0x8a8
  403510:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  403514:	add	x1, x1, #0x8d0
  403518:	bl	40cc8c <ferror@plt+0x9ebc>
  40351c:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  403520:	add	x0, x0, #0x8db
  403524:	ldr	x20, [x19, #1464]
  403528:	bl	402d80 <gettext@plt>
  40352c:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  403530:	mov	x2, x0
  403534:	add	x1, x1, #0x8df
  403538:	mov	x0, x20
  40353c:	bl	402d90 <fprintf@plt>
  403540:	ldr	x19, [x19, #1464]
  403544:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  403548:	add	x0, x0, #0x911
  40354c:	bl	402d80 <gettext@plt>
  403550:	mov	x1, x0
  403554:	mov	x0, x19
  403558:	bl	40cc8c <ferror@plt+0x9ebc>
  40355c:	mov	w0, #0x0                   	// #0
  403560:	bl	402730 <exit@plt>
  403564:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  403568:	ldr	w22, [x0, #1456]
  40356c:	ldr	w0, [sp, #172]
  403570:	cmp	w0, w22
  403574:	b.ne	403580 <ferror@plt+0x7b0>  // b.any
  403578:	mov	w0, #0x1                   	// #1
  40357c:	b	4033e0 <ferror@plt+0x610>
  403580:	sub	w0, w0, w22
  403584:	cmp	w0, #0x1
  403588:	b.le	403598 <ferror@plt+0x7c8>
  40358c:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  403590:	mov	w1, #0x1                   	// #1
  403594:	str	w1, [x0, #1680]
  403598:	mov	x20, #0x4ec5                	// #20165
  40359c:	sbfiz	x26, x22, #3, #32
  4035a0:	movk	x20, #0xc4ec, lsl #16
  4035a4:	mov	w24, w22
  4035a8:	movk	x20, #0xec4e, lsl #32
  4035ac:	movk	x20, #0x4ec4, lsl #48
  4035b0:	ldr	w2, [sp, #172]
  4035b4:	cmp	w2, w24
  4035b8:	b.eq	404ce8 <ferror@plt+0x1f18>  // b.none
  4035bc:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  4035c0:	add	x19, x0, #0x5d8
  4035c4:	ldr	w0, [x19, #472]
  4035c8:	cbz	w0, 4035e4 <ferror@plt+0x814>
  4035cc:	sub	w1, w24, w22
  4035d0:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4035d4:	sub	w2, w2, w22
  4035d8:	add	w1, w1, #0x1
  4035dc:	add	x0, x0, #0x9aa
  4035e0:	bl	402ce0 <printf@plt>
  4035e4:	ldr	x0, [sp, #160]
  4035e8:	ldr	x27, [x0, x26]
  4035ec:	mov	x0, x27
  4035f0:	bl	402700 <strlen@plt>
  4035f4:	mov	x21, x0
  4035f8:	ldr	x0, [x19, #192]
  4035fc:	bl	402b30 <free@plt>
  403600:	ldr	x0, [x19, #208]
  403604:	bl	402b30 <free@plt>
  403608:	str	xzr, [x19, #192]
  40360c:	ldr	x0, [x19, #464]
  403610:	str	xzr, [x19, #208]
  403614:	str	xzr, [x19, #304]
  403618:	str	wzr, [x19, #476]
  40361c:	cbz	x0, 4036bc <ferror@plt+0x8ec>
  403620:	ldrb	w1, [x0]
  403624:	cbz	w1, 4036bc <ferror@plt+0x8ec>
  403628:	add	w21, w21, #0x2
  40362c:	bl	402700 <strlen@plt>
  403630:	add	w0, w21, w0
  403634:	sxtw	x0, w0
  403638:	bl	44526c <_obstack_memory_used@@Base+0x868>
  40363c:	mov	x21, x0
  403640:	strb	wzr, [x0]
  403644:	ldr	x0, [x19, #464]
  403648:	add	x1, sp, #0xc0
  40364c:	bl	45ea78 <_obstack_memory_used@@Base+0x1a074>
  403650:	cbnz	w0, 4036b4 <ferror@plt+0x8e4>
  403654:	ldr	w0, [sp, #208]
  403658:	and	w0, w0, #0xf000
  40365c:	cmp	w0, #0x4, lsl #12
  403660:	cset	w25, eq  // eq = none
  403664:	ldr	x1, [x19, #464]
  403668:	mov	x0, x21
  40366c:	bl	402920 <strcat@plt>
  403670:	cbz	w25, 4036d4 <ferror@plt+0x904>
  403674:	mov	x0, x21
  403678:	bl	402700 <strlen@plt>
  40367c:	add	x0, x21, x0
  403680:	ldurb	w0, [x0, #-1]
  403684:	cmp	w0, #0x2f
  403688:	b.eq	40369c <ferror@plt+0x8cc>  // b.none
  40368c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x225fc>
  403690:	mov	x0, x21
  403694:	add	x1, x1, #0x93f
  403698:	bl	402920 <strcat@plt>
  40369c:	mov	x0, x27
  4036a0:	bl	4446b4 <ferror@plt+0x418e4>
  4036a4:	mov	x1, x0
  4036a8:	mov	x0, x21
  4036ac:	bl	402920 <strcat@plt>
  4036b0:	b	4036d4 <ferror@plt+0x904>
  4036b4:	mov	w25, #0x0                   	// #0
  4036b8:	b	403664 <ferror@plt+0x894>
  4036bc:	add	w0, w21, #0x1
  4036c0:	sxtw	x0, w0
  4036c4:	bl	44526c <_obstack_memory_used@@Base+0x868>
  4036c8:	mov	x1, x27
  4036cc:	mov	x21, x0
  4036d0:	bl	402bd0 <strcpy@plt>
  4036d4:	mov	x0, x21
  4036d8:	bl	4446b4 <ferror@plt+0x418e4>
  4036dc:	mov	w1, #0x2e                  	// #46
  4036e0:	bl	402a10 <strrchr@plt>
  4036e4:	cbz	x0, 4036ec <ferror@plt+0x91c>
  4036e8:	strb	wzr, [x0]
  4036ec:	mov	x0, x21
  4036f0:	bl	402700 <strlen@plt>
  4036f4:	sxtw	x28, w0
  4036f8:	add	x23, x28, #0x6
  4036fc:	mov	x0, x23
  403700:	bl	44526c <_obstack_memory_used@@Base+0x868>
  403704:	mov	x1, x21
  403708:	mov	x25, x0
  40370c:	str	x0, [x19, #192]
  403710:	bl	402bd0 <strcpy@plt>
  403714:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  403718:	add	x1, x1, #0x9c8
  40371c:	add	x0, x25, x28
  403720:	bl	402bd0 <strcpy@plt>
  403724:	mov	x0, x23
  403728:	bl	44526c <_obstack_memory_used@@Base+0x868>
  40372c:	mov	x25, x0
  403730:	mov	x1, x21
  403734:	str	x0, [x19, #208]
  403738:	bl	402bd0 <strcpy@plt>
  40373c:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  403740:	add	x1, x1, #0x9ce
  403744:	add	x0, x25, x28
  403748:	bl	402bd0 <strcpy@plt>
  40374c:	mov	x0, x21
  403750:	mov	w28, #0x0                   	// #0
  403754:	bl	402b30 <free@plt>
  403758:	ldp	x23, x21, [x19, #392]
  40375c:	sub	x21, x21, x23
  403760:	asr	x21, x21, #3
  403764:	mov	w0, w28
  403768:	cmp	x21, w28, uxtw
  40376c:	b.ls	403918 <ferror@plt+0xb48>  // b.plast
  403770:	ldr	x1, [x23, x0, lsl #3]
  403774:	mov	x0, x25
  403778:	bl	402ad0 <strcmp@plt>
  40377c:	cbnz	w0, 403910 <ferror@plt+0xb40>
  403780:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  403784:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  403788:	mov	x2, x27
  40378c:	add	x1, x1, #0x9d4
  403790:	ldr	x0, [x0, #1440]
  403794:	bl	40cc8c <ferror@plt+0x9ebc>
  403798:	ldr	w0, [x19, #436]
  40379c:	cbnz	w0, 4037b0 <ferror@plt+0x9e0>
  4037a0:	ldr	w0, [sp, #172]
  4037a4:	sub	w0, w0, #0x1
  4037a8:	cmp	w0, w24
  4037ac:	b.ne	404cd4 <ferror@plt+0x1f04>  // b.any
  4037b0:	mov	x0, #0xd                   	// #13
  4037b4:	stp	xzr, xzr, [sp, #208]
  4037b8:	str	xzr, [sp, #224]
  4037bc:	strb	wzr, [sp, #236]
  4037c0:	bl	40bcbc <ferror@plt+0x8eec>
  4037c4:	mov	w21, w0
  4037c8:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4037cc:	add	x0, x0, #0x1b0
  4037d0:	ubfiz	x1, x21, #4, #32
  4037d4:	ldr	w23, [x0, x1]
  4037d8:	mov	w0, #0x0                   	// #0
  4037dc:	mov	x1, x23
  4037e0:	bl	405b24 <ferror@plt+0x2d54>
  4037e4:	ldr	x25, [x19, #320]
  4037e8:	stp	x0, x23, [sp, #192]
  4037ec:	str	w21, [sp, #232]
  4037f0:	ldr	x1, [x19, #328]
  4037f4:	add	x0, x19, #0x140
  4037f8:	cmp	x1, x25
  4037fc:	b.eq	404524 <ferror@plt+0x1754>  // b.none
  403800:	ldr	x0, [x25]
  403804:	ldrb	w1, [x0, #28]
  403808:	tbnz	w1, #1, 403908 <ferror@plt+0xb38>
  40380c:	ldr	w27, [x0, #88]
  403810:	ldr	w28, [x0, #104]
  403814:	add	x0, sp, #0xb8
  403818:	stp	w28, w27, [sp, #184]
  40381c:	bl	408da8 <ferror@plt+0x5fd8>
  403820:	ldr	w1, [sp, #224]
  403824:	str	w0, [sp, #104]
  403828:	add	w1, w1, #0x1
  40382c:	str	w1, [sp, #224]
  403830:	ldr	w1, [sp, #232]
  403834:	str	w1, [sp, #96]
  403838:	ldr	x23, [sp, #200]
  40383c:	bl	408c44 <ferror@plt+0x5e74>
  403840:	mov	w21, w0
  403844:	ldr	x3, [sp, #192]
  403848:	ubfiz	x5, x21, #4, #32
  40384c:	add	x2, x3, x5
  403850:	ldr	w0, [x2, #4]
  403854:	cmn	w0, #0x3
  403858:	b.eq	4038dc <ferror@plt+0xb0c>  // b.none
  40385c:	ldr	w1, [sp, #96]
  403860:	cmn	w0, #0x2
  403864:	ldr	w4, [sp, #104]
  403868:	b.eq	403880 <ferror@plt+0xab0>  // b.none
  40386c:	ldr	w5, [x3, x5]
  403870:	cmp	w28, w5
  403874:	b.ne	403880 <ferror@plt+0xab0>  // b.any
  403878:	cmp	w27, w0
  40387c:	b.eq	4038dc <ferror@plt+0xb0c>  // b.none
  403880:	mov	w0, w4
  403884:	str	x3, [sp, #96]
  403888:	bl	408c7c <ferror@plt+0x5eac>
  40388c:	ldr	x3, [sp, #96]
  403890:	add	w21, w21, w0
  403894:	ldr	w1, [sp, #228]
  403898:	cmp	x23, w21, uxtw
  40389c:	add	w1, w1, #0x1
  4038a0:	str	w1, [sp, #228]
  4038a4:	b.hi	4038ac <ferror@plt+0xadc>  // b.pmore
  4038a8:	sub	w21, w21, w23
  4038ac:	ubfiz	x4, x21, #4, #32
  4038b0:	add	x2, x3, x4
  4038b4:	ldr	w1, [x2, #4]
  4038b8:	cmn	w1, #0x3
  4038bc:	b.eq	4038dc <ferror@plt+0xb0c>  // b.none
  4038c0:	cmn	w1, #0x2
  4038c4:	b.eq	403890 <ferror@plt+0xac0>  // b.none
  4038c8:	ldr	w4, [x3, x4]
  4038cc:	cmp	w28, w4
  4038d0:	b.ne	403890 <ferror@plt+0xac0>  // b.any
  4038d4:	cmp	w27, w1
  4038d8:	b.ne	403890 <ferror@plt+0xac0>  // b.any
  4038dc:	ldr	w0, [x2, #4]
  4038e0:	cmn	w0, #0x3
  4038e4:	b.eq	4043d0 <ferror@plt+0x1600>  // b.none
  4038e8:	ldr	x1, [x2, #8]
  4038ec:	ldrb	w0, [x1, #28]
  4038f0:	orr	w0, w0, #0x4
  4038f4:	strb	w0, [x1, #28]
  4038f8:	ldr	x1, [x25]
  4038fc:	ldrb	w0, [x1, #28]
  403900:	orr	w0, w0, #0x4
  403904:	strb	w0, [x1, #28]
  403908:	add	x25, x25, #0x8
  40390c:	b	4037f0 <ferror@plt+0xa20>
  403910:	add	w28, w28, #0x1
  403914:	b	403764 <ferror@plt+0x994>
  403918:	mov	x0, x25
  40391c:	bl	445390 <_obstack_memory_used@@Base+0x98c>
  403920:	ldp	x25, x1, [x19, #400]
  403924:	mov	x28, x0
  403928:	cmp	x25, x1
  40392c:	b.eq	403960 <ferror@plt+0xb90>  // b.none
  403930:	str	x0, [x25], #8
  403934:	str	x25, [x19, #400]
  403938:	ldr	x0, [x19, #192]
  40393c:	bl	405df4 <ferror@plt+0x3024>
  403940:	cbnz	w0, 4039f8 <ferror@plt+0xc28>
  403944:	ldr	x2, [x19, #192]
  403948:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  40394c:	add	x1, x1, #0x9f4
  403950:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  403954:	ldr	x0, [x0, #1440]
  403958:	bl	40cc8c <ferror@plt+0x9ebc>
  40395c:	b	403b04 <ferror@plt+0xd34>
  403960:	ldr	x23, [x19, #392]
  403964:	mov	x0, #0xfffffffffffffff     	// #1152921504606846975
  403968:	sub	x1, x25, x23
  40396c:	asr	x21, x1, #3
  403970:	cmp	x0, x1, asr #3
  403974:	b.ne	403984 <ferror@plt+0xbb4>  // b.any
  403978:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  40397c:	add	x0, x0, #0xd02
  403980:	bl	402fd8 <ferror@plt+0x208>
  403984:	cmp	x21, #0x0
  403988:	csinc	x2, x21, xzr, ne  // ne = any
  40398c:	adds	x21, x21, x2
  403990:	b.cs	404ce0 <ferror@plt+0x1f10>  // b.hs, b.nlast
  403994:	mov	x27, #0x0                   	// #0
  403998:	cbz	x21, 4039b8 <ferror@plt+0xbe8>
  40399c:	cmp	x21, x0
  4039a0:	csel	x21, x21, x0, ls  // ls = plast
  4039a4:	lsl	x0, x21, #3
  4039a8:	str	x1, [sp, #96]
  4039ac:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  4039b0:	mov	x27, x0
  4039b4:	ldr	x1, [sp, #96]
  4039b8:	str	x28, [x27, x1]
  4039bc:	mov	x2, x27
  4039c0:	mov	x1, x25
  4039c4:	mov	x0, x23
  4039c8:	bl	405db4 <ferror@plt+0x2fe4>
  4039cc:	mov	x1, x25
  4039d0:	add	x2, x0, #0x8
  4039d4:	mov	x0, x25
  4039d8:	bl	405db4 <ferror@plt+0x2fe4>
  4039dc:	add	x21, x27, x21, lsl #3
  4039e0:	mov	x25, x0
  4039e4:	mov	x0, x23
  4039e8:	bl	405850 <ferror@plt+0x2a80>
  4039ec:	stp	x27, x25, [x19, #392]
  4039f0:	str	x21, [x19, #408]
  4039f4:	b	403938 <ferror@plt+0xb68>
  4039f8:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  4039fc:	ldr	x0, [x0, #1496]
  403a00:	bl	4028f0 <fileno_unlocked@plt>
  403a04:	add	x1, sp, #0xc0
  403a08:	bl	45ea88 <_obstack_memory_used@@Base+0x1a084>
  403a0c:	cmp	w0, #0x0
  403a10:	ldr	x0, [sp, #280]
  403a14:	csel	x0, x0, xzr, eq  // eq = none
  403a18:	str	x0, [x19, #304]
  403a1c:	bl	405f8c <ferror@plt+0x31bc>
  403a20:	mov	w1, #0x6e6f                	// #28271
  403a24:	movk	w1, #0x6763, lsl #16
  403a28:	cmp	w0, w1
  403a2c:	b.eq	403a44 <ferror@plt+0xc74>  // b.none
  403a30:	rev	w0, w0
  403a34:	cmp	w0, w1
  403a38:	b.ne	403ae8 <ferror@plt+0xd18>  // b.any
  403a3c:	mov	w0, #0x1                   	// #1
  403a40:	str	w0, [x19, #32]
  403a44:	bl	405f8c <ferror@plt+0x31bc>
  403a48:	mov	w1, #0x322a                	// #12842
  403a4c:	movk	w1, #0x4139, lsl #16
  403a50:	cmp	w0, w1
  403a54:	b.eq	403a8c <ferror@plt+0xcbc>  // b.none
  403a58:	rev	w0, w0
  403a5c:	str	w0, [sp, #184]
  403a60:	mov	w0, #0x3941                	// #14657
  403a64:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  403a68:	movk	w0, #0x2a32, lsl #16
  403a6c:	str	w0, [sp, #192]
  403a70:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  403a74:	add	x4, sp, #0xc0
  403a78:	ldr	x2, [x19, #192]
  403a7c:	add	x3, sp, #0xb8
  403a80:	ldr	x0, [x0, #1440]
  403a84:	add	x1, x1, #0xa29
  403a88:	bl	40cc8c <ferror@plt+0x9ebc>
  403a8c:	bl	405f8c <ferror@plt+0x31bc>
  403a90:	str	w0, [x19, #476]
  403a94:	bl	405fc4 <ferror@plt+0x31f4>
  403a98:	mov	w21, #0x0                   	// #0
  403a9c:	bl	445390 <_obstack_memory_used@@Base+0x98c>
  403aa0:	str	x0, [x19, #424]
  403aa4:	bl	405f8c <ferror@plt+0x31bc>
  403aa8:	str	w0, [x19, #156]
  403aac:	str	xzr, [sp, #184]
  403ab0:	bl	405f8c <ferror@plt+0x31bc>
  403ab4:	mov	w23, w0
  403ab8:	cbz	w0, 403e30 <ferror@plt+0x1060>
  403abc:	bl	405f8c <ferror@plt+0x31bc>
  403ac0:	str	w0, [sp, #104]
  403ac4:	ldr	w0, [x19, #28]
  403ac8:	cmp	w0, #0x0
  403acc:	b.gt	403b34 <ferror@plt+0xd64>
  403ad0:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  403ad4:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  403ad8:	add	x2, x2, #0xa4b
  403adc:	add	x0, x0, #0x291
  403ae0:	mov	w1, #0x4a                  	// #74
  403ae4:	bl	402de0 <ferror@plt+0x10>
  403ae8:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  403aec:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  403af0:	ldr	x2, [x19, #192]
  403af4:	add	x1, x1, #0xa0f
  403af8:	ldr	x0, [x0, #1440]
  403afc:	bl	40cc8c <ferror@plt+0x9ebc>
  403b00:	bl	4052f0 <ferror@plt+0x2520>
  403b04:	ldr	x0, [x19, #208]
  403b08:	bl	405df4 <ferror@plt+0x3024>
  403b0c:	cbnz	w0, 40411c <ferror@plt+0x134c>
  403b10:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  403b14:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  403b18:	ldr	x2, [x19, #208]
  403b1c:	add	x1, x1, #0xa91
  403b20:	ldr	x0, [x0, #1440]
  403b24:	bl	40cc8c <ferror@plt+0x9ebc>
  403b28:	mov	w0, #0x1                   	// #1
  403b2c:	str	w0, [x19, #200]
  403b30:	b	403798 <ferror@plt+0x9c8>
  403b34:	ldp	w28, w0, [x19, #8]
  403b38:	add	w0, w28, w0
  403b3c:	str	w0, [sp, #168]
  403b40:	mov	w0, #0x1000000             	// #16777216
  403b44:	cmp	w23, w0
  403b48:	b.ne	403d18 <ferror@plt+0xf48>  // b.any
  403b4c:	bl	405f8c <ferror@plt+0x31bc>
  403b50:	mov	w21, w0
  403b54:	bl	405f8c <ferror@plt+0x31bc>
  403b58:	str	w0, [sp, #96]
  403b5c:	bl	405f8c <ferror@plt+0x31bc>
  403b60:	str	w0, [sp, #112]
  403b64:	bl	405fc4 <ferror@plt+0x31f4>
  403b68:	add	x25, x19, #0x160
  403b6c:	bl	445390 <_obstack_memory_used@@Base+0x98c>
  403b70:	str	x0, [sp, #120]
  403b74:	bl	405f8c <ferror@plt+0x31bc>
  403b78:	mov	w27, w0
  403b7c:	bl	405fc4 <ferror@plt+0x31f4>
  403b80:	bl	40787c <ferror@plt+0x4aac>
  403b84:	str	w0, [sp, #128]
  403b88:	bl	405f8c <ferror@plt+0x31bc>
  403b8c:	str	w0, [sp, #140]
  403b90:	bl	405f8c <ferror@plt+0x31bc>
  403b94:	str	w0, [sp, #144]
  403b98:	bl	405f8c <ferror@plt+0x31bc>
  403b9c:	str	w0, [sp, #148]
  403ba0:	bl	405f8c <ferror@plt+0x31bc>
  403ba4:	mov	w28, w0
  403ba8:	mov	x0, #0x90                  	// #144
  403bac:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  403bb0:	mov	x2, x0
  403bb4:	bl	40635c <ferror@plt+0x358c>
  403bb8:	str	x2, [sp, #184]
  403bbc:	add	x0, x19, #0x140
  403bc0:	add	x1, sp, #0xb8
  403bc4:	bl	409420 <ferror@plt+0x6650>
  403bc8:	ldr	x0, [x19, #360]
  403bcc:	cbz	x0, 403bf0 <ferror@plt+0xe20>
  403bd0:	ldr	w1, [x0, #32]
  403bd4:	cmp	w21, w1
  403bd8:	b.hi	403be8 <ferror@plt+0xe18>  // b.pmore
  403bdc:	mov	x25, x0
  403be0:	ldr	x0, [x0, #16]
  403be4:	b	403bcc <ferror@plt+0xdfc>
  403be8:	ldr	x0, [x0, #24]
  403bec:	b	403bcc <ferror@plt+0xdfc>
  403bf0:	add	x0, x19, #0x160
  403bf4:	cmp	x25, x0
  403bf8:	b.eq	403c08 <ferror@plt+0xe38>  // b.none
  403bfc:	ldr	w0, [x25, #32]
  403c00:	cmp	w21, w0
  403c04:	b.cs	403c80 <ferror@plt+0xeb0>  // b.hs, b.nlast
  403c08:	mov	x0, #0x30                  	// #48
  403c0c:	str	x25, [sp, #152]
  403c10:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  403c14:	mov	x25, x0
  403c18:	ldr	x1, [sp, #152]
  403c1c:	add	x2, x0, #0x20
  403c20:	str	w21, [x25, #32]
  403c24:	add	x0, x19, #0x158
  403c28:	str	xzr, [x25, #40]
  403c2c:	bl	40a9f8 <ferror@plt+0x7c28>
  403c30:	mov	x3, x0
  403c34:	mov	x2, x1
  403c38:	cbz	x1, 403d00 <ferror@plt+0xf30>
  403c3c:	cbnz	x0, 403cf8 <ferror@plt+0xf28>
  403c40:	add	x0, x19, #0x160
  403c44:	cmp	x1, x0
  403c48:	b.eq	403cf8 <ferror@plt+0xf28>  // b.none
  403c4c:	ldr	w0, [x1, #32]
  403c50:	ldr	w1, [x25, #32]
  403c54:	cmp	w1, w0
  403c58:	cset	w0, cc  // cc = lo, ul, last
  403c5c:	add	x6, x19, #0x158
  403c60:	add	x3, x19, #0x160
  403c64:	mov	x1, x25
  403c68:	str	x6, [sp, #152]
  403c6c:	bl	445ec8 <_obstack_memory_used@@Base+0x14c4>
  403c70:	ldr	x6, [sp, #152]
  403c74:	ldr	x0, [x6, #40]
  403c78:	add	x0, x0, #0x1
  403c7c:	str	x0, [x6, #40]
  403c80:	ldr	x0, [sp, #184]
  403c84:	str	x0, [x25, #40]
  403c88:	ldr	x1, [sp, #120]
  403c8c:	str	x1, [x0]
  403c90:	ldr	w1, [sp, #96]
  403c94:	str	w1, [x0, #20]
  403c98:	ldr	w1, [sp, #112]
  403c9c:	str	w1, [x0, #24]
  403ca0:	ldr	w1, [sp, #128]
  403ca4:	str	w1, [x0, #104]
  403ca8:	ldr	w1, [sp, #140]
  403cac:	str	w1, [x0, #88]
  403cb0:	ldr	w1, [sp, #144]
  403cb4:	str	w1, [x0, #92]
  403cb8:	ldr	w1, [sp, #148]
  403cbc:	str	w1, [x0, #96]
  403cc0:	ldrb	w1, [x0, #28]
  403cc4:	str	w21, [x0, #16]
  403cc8:	mov	w21, w23
  403ccc:	str	w28, [x0, #100]
  403cd0:	bfi	w1, w27, #1, #1
  403cd4:	strb	w1, [x0, #28]
  403cd8:	ldr	w0, [sp, #168]
  403cdc:	ldr	w1, [sp, #104]
  403ce0:	bl	4056d4 <ferror@plt+0x2904>
  403ce4:	ldr	x0, [x19]
  403ce8:	cbz	x0, 403e18 <ferror@plt+0x1048>
  403cec:	ldr	w0, [x19, #24]
  403cf0:	cbz	w0, 403ab0 <ferror@plt+0xce0>
  403cf4:	b	403e18 <ferror@plt+0x1048>
  403cf8:	mov	w0, #0x1                   	// #1
  403cfc:	b	403c5c <ferror@plt+0xe8c>
  403d00:	mov	x0, x25
  403d04:	str	x3, [sp, #152]
  403d08:	bl	445770 <_obstack_memory_used@@Base+0xd6c>
  403d0c:	ldr	x3, [sp, #152]
  403d10:	mov	x25, x3
  403d14:	b	403c80 <ferror@plt+0xeb0>
  403d18:	ldr	x25, [sp, #184]
  403d1c:	cbz	x25, 4040e0 <ferror@plt+0x1310>
  403d20:	mov	w0, #0x1410000             	// #21037056
  403d24:	cmp	w23, w0
  403d28:	b.ne	403dc0 <ferror@plt+0xff0>  // b.any
  403d2c:	ldp	x1, x0, [x25, #32]
  403d30:	cmp	x1, x0
  403d34:	b.eq	403d68 <ferror@plt+0xf98>  // b.none
  403d38:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  403d3c:	ldr	x27, [x19, #192]
  403d40:	ldr	x23, [x0, #1440]
  403d44:	mov	x0, x25
  403d48:	bl	408d00 <ferror@plt+0x5f30>
  403d4c:	mov	x3, x0
  403d50:	mov	x2, x27
  403d54:	mov	x0, x23
  403d58:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  403d5c:	add	x1, x1, #0xa59
  403d60:	bl	40cc8c <ferror@plt+0x9ebc>
  403d64:	b	403cd8 <ferror@plt+0xf08>
  403d68:	bl	405f8c <ferror@plt+0x31bc>
  403d6c:	mov	w4, w0
  403d70:	ldr	x3, [x25, #32]
  403d74:	add	x0, x25, #0x20
  403d78:	ldr	x1, [x0, #8]
  403d7c:	sub	x2, x1, x3
  403d80:	asr	x2, x2, #3
  403d84:	mul	x2, x2, x20
  403d88:	cmp	x4, x2
  403d8c:	b.ls	403d9c <ferror@plt+0xfcc>  // b.plast
  403d90:	sub	x1, x4, x2
  403d94:	bl	409f90 <ferror@plt+0x71c0>
  403d98:	b	403cd8 <ferror@plt+0xf08>
  403d9c:	b.cs	403cd8 <ferror@plt+0xf08>  // b.hs, b.nlast
  403da0:	mov	w0, #0x68                  	// #104
  403da4:	umaddl	x23, w4, w0, x3
  403da8:	cmp	x1, x23
  403dac:	b.eq	403cd8 <ferror@plt+0xf08>  // b.none
  403db0:	mov	x0, x23
  403db4:	bl	40a364 <ferror@plt+0x7594>
  403db8:	str	x23, [x25, #40]
  403dbc:	b	403cd8 <ferror@plt+0xf08>
  403dc0:	mov	w0, #0x1430000             	// #21168128
  403dc4:	cmp	w23, w0
  403dc8:	b.ne	403ff8 <ferror@plt+0x1228>  // b.any
  403dcc:	bl	405f8c <ferror@plt+0x31bc>
  403dd0:	str	w0, [sp, #96]
  403dd4:	ldr	x0, [sp, #184]
  403dd8:	mov	w1, #0x68                  	// #104
  403ddc:	ldr	w2, [sp, #96]
  403de0:	ldr	x27, [x0, #32]!
  403de4:	umull	x28, w2, w1
  403de8:	ldr	x0, [x0, #8]
  403dec:	add	x23, x27, x28
  403df0:	sub	x0, x0, x27
  403df4:	str	w2, [x23, #32]
  403df8:	asr	x0, x0, #3
  403dfc:	ldr	w2, [sp, #104]
  403e00:	sub	w25, w2, #0x1
  403e04:	ldr	w2, [sp, #96]
  403e08:	mul	x0, x0, x20
  403e0c:	lsr	w25, w25, #1
  403e10:	cmp	x0, w2, uxtw
  403e14:	b.hi	403e50 <ferror@plt+0x1080>  // b.pmore
  403e18:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  403e1c:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  403e20:	ldr	x2, [x19, #192]
  403e24:	add	x1, x1, #0x8a9
  403e28:	ldr	x0, [x0, #1440]
  403e2c:	bl	40cc8c <ferror@plt+0x9ebc>
  403e30:	bl	4052f0 <ferror@plt+0x2520>
  403e34:	ldp	x1, x0, [x19, #320]
  403e38:	cmp	x1, x0
  403e3c:	b.ne	403b04 <ferror@plt+0xd34>  // b.any
  403e40:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  403e44:	add	x1, x1, #0xa7a
  403e48:	ldr	x2, [x19, #192]
  403e4c:	b	403950 <ferror@plt+0xb80>
  403e50:	ldr	x0, [x27, x28]
  403e54:	cbnz	x0, 403e18 <ferror@plt+0x1048>
  403e58:	str	wzr, [sp, #120]
  403e5c:	str	w1, [sp, #128]
  403e60:	sub	w25, w25, #0x1
  403e64:	cmn	w25, #0x1
  403e68:	b.eq	403fbc <ferror@plt+0x11ec>  // b.none
  403e6c:	bl	405f8c <ferror@plt+0x31bc>
  403e70:	str	w0, [sp, #112]
  403e74:	bl	405f8c <ferror@plt+0x31bc>
  403e78:	mov	w2, w0
  403e7c:	ldr	x1, [sp, #184]
  403e80:	str	w2, [sp, #140]
  403e84:	ldr	x0, [x1, #40]
  403e88:	ldr	x1, [x1, #32]
  403e8c:	sub	x0, x0, x1
  403e90:	ldr	w1, [sp, #112]
  403e94:	asr	x0, x0, #3
  403e98:	mul	x0, x0, x20
  403e9c:	cmp	x0, w1, uxtw
  403ea0:	b.ls	403e18 <ferror@plt+0x1048>  // b.plast
  403ea4:	mov	x1, #0x38                  	// #56
  403ea8:	mov	x0, #0x1                   	// #1
  403eac:	bl	4452a0 <_obstack_memory_used@@Base+0x89c>
  403eb0:	ldr	w1, [sp, #112]
  403eb4:	ldr	w2, [sp, #128]
  403eb8:	ldr	x6, [sp, #184]
  403ebc:	umull	x7, w1, w2
  403ec0:	ldr	w2, [sp, #140]
  403ec4:	ldr	x1, [x6, #32]
  403ec8:	and	w8, w2, #0x1
  403ecc:	str	xzr, [x0, #16]
  403ed0:	add	x1, x1, x7
  403ed4:	stp	x23, x1, [x0]
  403ed8:	ubfx	x1, x2, #1, #1
  403edc:	ubfiz	w8, w8, #1, #7
  403ee0:	ubfx	x2, x2, #2, #1
  403ee4:	orr	w1, w8, w1, lsl #2
  403ee8:	orr	w2, w1, w2, lsl #3
  403eec:	ldrb	w1, [x0, #32]
  403ef0:	and	w1, w1, #0xfffffff0
  403ef4:	orr	w2, w2, w1
  403ef8:	strb	w2, [x0, #32]
  403efc:	ldr	x1, [x23]
  403f00:	str	x1, [x0, #40]
  403f04:	ldr	x1, [x23, #16]
  403f08:	str	x0, [x23]
  403f0c:	add	x1, x1, #0x1
  403f10:	str	x1, [x23, #16]
  403f14:	ldr	x1, [x6, #32]
  403f18:	add	x2, x1, x7
  403f1c:	ldr	x8, [x2, #8]
  403f20:	str	x8, [x0, #48]
  403f24:	ldr	x8, [x2, #24]
  403f28:	str	x0, [x2, #8]
  403f2c:	add	x8, x8, #0x1
  403f30:	str	x8, [x2, #24]
  403f34:	ldrb	w2, [x0, #32]
  403f38:	tbz	w2, #2, 403f68 <ferror@plt+0x1198>
  403f3c:	ldr	w3, [sp, #96]
  403f40:	cbz	w3, 403f90 <ferror@plt+0x11c0>
  403f44:	add	x1, x1, x28
  403f48:	ldrb	w2, [x1, #48]
  403f4c:	orr	w2, w2, #0x10
  403f50:	strb	w2, [x1, #48]
  403f54:	ldrb	w1, [x0, #32]
  403f58:	orr	w1, w1, #0x20
  403f5c:	strb	w1, [x0, #32]
  403f60:	mov	w1, #0x1                   	// #1
  403f64:	str	w1, [sp, #120]
  403f68:	ldrb	w0, [x0, #32]
  403f6c:	tbnz	w0, #1, 403e60 <ferror@plt+0x1090>
  403f70:	add	x0, x6, #0x40
  403f74:	ldp	x1, x2, [x0, #8]
  403f78:	str	xzr, [sp, #192]
  403f7c:	cmp	x1, x2
  403f80:	b.eq	403fb0 <ferror@plt+0x11e0>  // b.none
  403f84:	str	xzr, [x1], #8
  403f88:	str	x1, [x0, #8]
  403f8c:	b	403e60 <ferror@plt+0x1090>
  403f90:	orr	w2, w2, #0x40
  403f94:	strb	w2, [x0, #32]
  403f98:	ldr	x1, [x6, #32]
  403f9c:	add	x1, x1, x7
  403fa0:	ldrb	w2, [x1, #48]
  403fa4:	orr	w2, w2, #0x40
  403fa8:	strb	w2, [x1, #48]
  403fac:	b	403f68 <ferror@plt+0x1198>
  403fb0:	add	x2, sp, #0xc0
  403fb4:	bl	409d50 <ferror@plt+0x6f80>
  403fb8:	b	403e60 <ferror@plt+0x1090>
  403fbc:	ldr	w0, [sp, #120]
  403fc0:	cbz	w0, 403cd8 <ferror@plt+0xf08>
  403fc4:	ldr	x0, [x27, x28]
  403fc8:	ldr	x2, [sp, #184]
  403fcc:	cbz	x0, 403cd8 <ferror@plt+0xf08>
  403fd0:	ldrb	w1, [x0, #32]
  403fd4:	tst	w1, #0xc
  403fd8:	b.ne	403ff0 <ferror@plt+0x1220>  // b.any
  403fdc:	orr	w1, w1, #0x10
  403fe0:	strb	w1, [x0, #32]
  403fe4:	ldrb	w1, [x2, #28]
  403fe8:	orr	w1, w1, #0x1
  403fec:	strb	w1, [x2, #28]
  403ff0:	ldr	x0, [x0, #40]
  403ff4:	b	403fcc <ferror@plt+0x11fc>
  403ff8:	mov	w0, #0x1450000             	// #21299200
  403ffc:	cmp	w23, w0
  404000:	b.ne	4040e0 <ferror@plt+0x1310>  // b.any
  404004:	bl	405f8c <ferror@plt+0x31bc>
  404008:	mov	w23, #0x68                  	// #104
  40400c:	ldr	x2, [sp, #184]
  404010:	ldr	x3, [x2, #32]!
  404014:	ldr	x1, [x2, #8]
  404018:	umaddl	x23, w0, w23, x3
  40401c:	sub	x1, x1, x3
  404020:	asr	x1, x1, #3
  404024:	mul	x1, x1, x20
  404028:	cmp	x1, w0, uxtw
  40402c:	b.ls	403e18 <ferror@plt+0x1048>  // b.plast
  404030:	add	x25, x23, #0x38
  404034:	bl	405f8c <ferror@plt+0x31bc>
  404038:	str	w0, [sp, #180]
  40403c:	cbz	w0, 40406c <ferror@plt+0x129c>
  404040:	ldr	x3, [x23, #64]
  404044:	ldp	x1, x2, [x3, #-16]
  404048:	cmp	x1, x2
  40404c:	b.eq	40405c <ferror@plt+0x128c>  // b.none
  404050:	str	w0, [x1], #4
  404054:	stur	x1, [x3, #-16]
  404058:	b	404034 <ferror@plt+0x1264>
  40405c:	add	x2, sp, #0xb4
  404060:	sub	x0, x3, #0x18
  404064:	bl	4092d4 <ferror@plt+0x6504>
  404068:	b	404034 <ferror@plt+0x1264>
  40406c:	bl	405fc4 <ferror@plt+0x31f4>
  404070:	cbz	x0, 403cd8 <ferror@plt+0xf08>
  404074:	bl	40787c <ferror@plt+0x4aac>
  404078:	ldp	x1, x2, [x25, #8]
  40407c:	str	w0, [sp, #192]
  404080:	stp	xzr, xzr, [sp, #200]
  404084:	str	xzr, [sp, #216]
  404088:	cmp	x1, x2
  40408c:	b.eq	4040d0 <ferror@plt+0x1300>  // b.none
  404090:	mov	x2, x1
  404094:	add	x1, x1, #0x20
  404098:	str	w0, [x2], #8
  40409c:	ldr	x0, [sp, #200]
  4040a0:	stur	x0, [x1, #-24]
  4040a4:	ldr	x0, [sp, #208]
  4040a8:	str	x0, [x2, #8]
  4040ac:	ldr	x0, [sp, #216]
  4040b0:	str	x0, [x2, #16]
  4040b4:	stp	xzr, xzr, [sp, #200]
  4040b8:	str	xzr, [sp, #216]
  4040bc:	str	x1, [x25, #8]
  4040c0:	ldr	x0, [sp, #200]
  4040c4:	cbz	x0, 404034 <ferror@plt+0x1264>
  4040c8:	bl	445770 <_obstack_memory_used@@Base+0xd6c>
  4040cc:	b	404034 <ferror@plt+0x1264>
  4040d0:	add	x2, sp, #0xc0
  4040d4:	mov	x0, x25
  4040d8:	bl	409e48 <ferror@plt+0x7078>
  4040dc:	b	4040c0 <ferror@plt+0x12f0>
  4040e0:	cbz	w21, 403cd8 <ferror@plt+0xf08>
  4040e4:	lsr	w1, w21, #8
  4040e8:	sub	w0, w23, #0x1
  4040ec:	eor	w1, w1, #0xffff
  4040f0:	eor	w0, w0, w23
  4040f4:	cmp	w1, w0
  4040f8:	b.ne	404110 <ferror@plt+0x1340>  // b.any
  4040fc:	neg	w0, w21
  404100:	eor	w5, w23, w21
  404104:	eor	w0, w0, w21
  404108:	tst	w0, w5
  40410c:	b.eq	403cd8 <ferror@plt+0xf08>  // b.none
  404110:	mov	w21, #0x0                   	// #0
  404114:	str	xzr, [sp, #184]
  404118:	b	403cd8 <ferror@plt+0xf08>
  40411c:	bl	405f8c <ferror@plt+0x31bc>
  404120:	mov	w1, #0x6461                	// #25697
  404124:	movk	w1, #0x6763, lsl #16
  404128:	cmp	w0, w1
  40412c:	b.eq	404144 <ferror@plt+0x1374>  // b.none
  404130:	rev	w0, w0
  404134:	cmp	w0, w1
  404138:	b.ne	4041ac <ferror@plt+0x13dc>  // b.any
  40413c:	mov	w0, #0x1                   	// #1
  404140:	str	w0, [x19, #32]
  404144:	bl	405f8c <ferror@plt+0x31bc>
  404148:	mov	w1, #0x322a                	// #12842
  40414c:	movk	w1, #0x4139, lsl #16
  404150:	cmp	w0, w1
  404154:	b.eq	40418c <ferror@plt+0x13bc>  // b.none
  404158:	rev	w0, w0
  40415c:	str	w0, [sp, #184]
  404160:	mov	w0, #0x3941                	// #14657
  404164:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  404168:	movk	w0, #0x2a32, lsl #16
  40416c:	str	w0, [sp, #192]
  404170:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  404174:	add	x4, sp, #0xc0
  404178:	ldr	x2, [x19, #208]
  40417c:	add	x3, sp, #0xb8
  404180:	ldr	x0, [x0, #1440]
  404184:	add	x1, x1, #0xadb
  404188:	bl	40cc8c <ferror@plt+0x9ebc>
  40418c:	bl	405f8c <ferror@plt+0x31bc>
  404190:	ldr	w1, [x19, #476]
  404194:	cmp	w0, w1
  404198:	b.eq	4041cc <ferror@plt+0x13fc>  // b.none
  40419c:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4041a0:	add	x1, x1, #0xb05
  4041a4:	ldr	x2, [x19, #208]
  4041a8:	b	4041b8 <ferror@plt+0x13e8>
  4041ac:	ldr	x2, [x19, #208]
  4041b0:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4041b4:	add	x1, x1, #0xac2
  4041b8:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  4041bc:	ldr	x0, [x0, #1440]
  4041c0:	bl	40cc8c <ferror@plt+0x9ebc>
  4041c4:	bl	4052f0 <ferror@plt+0x2520>
  4041c8:	b	403798 <ferror@plt+0x9c8>
  4041cc:	mov	x25, #0x0                   	// #0
  4041d0:	mov	w27, #0x1000000             	// #16777216
  4041d4:	mov	w28, #0x1a10000             	// #27328512
  4041d8:	bl	405f8c <ferror@plt+0x31bc>
  4041dc:	str	w0, [sp, #96]
  4041e0:	cbz	w0, 4041c4 <ferror@plt+0x13f4>
  4041e4:	bl	405f8c <ferror@plt+0x31bc>
  4041e8:	mov	w21, w0
  4041ec:	ldr	w0, [x19, #28]
  4041f0:	cmp	w0, #0x0
  4041f4:	b.le	403ad0 <ferror@plt+0xd00>
  4041f8:	ldp	w23, w0, [x19, #8]
  4041fc:	ldr	w1, [sp, #96]
  404200:	add	w23, w23, w0
  404204:	mov	w0, #0xa1000000            	// #-1593835520
  404208:	cmp	w1, w0
  40420c:	b.ne	404260 <ferror@plt+0x1490>  // b.any
  404210:	bl	405f8c <ferror@plt+0x31bc>
  404214:	str	w0, [sp, #96]
  404218:	bl	405f8c <ferror@plt+0x31bc>
  40421c:	ldr	w1, [sp, #96]
  404220:	str	w1, [x19, #216]
  404224:	mov	w0, w23
  404228:	mov	w1, w21
  40422c:	bl	4056d4 <ferror@plt+0x2904>
  404230:	ldr	x0, [x19]
  404234:	cbz	x0, 4043c8 <ferror@plt+0x15f8>
  404238:	ldr	w2, [x19, #24]
  40423c:	cbz	w2, 4041d8 <ferror@plt+0x1408>
  404240:	cmp	w2, #0x0
  404244:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  404248:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  40424c:	add	x0, x0, #0x8a9
  404250:	add	x1, x1, #0x89a
  404254:	csel	x1, x1, x0, lt  // lt = tstop
  404258:	ldr	x2, [x19, #208]
  40425c:	b	4041b8 <ferror@plt+0x13e8>
  404260:	cmp	w1, w27
  404264:	cset	w0, eq  // eq = none
  404268:	cmp	w21, #0x0
  40426c:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  404270:	b.ne	404224 <ferror@plt+0x1454>  // b.any
  404274:	cmp	w0, #0x0
  404278:	ccmp	w21, #0x3, #0x0, ne  // ne = any
  40427c:	b.ne	404320 <ferror@plt+0x1550>  // b.any
  404280:	bl	405f8c <ferror@plt+0x31bc>
  404284:	ldr	x25, [x19, #360]
  404288:	add	x1, x19, #0x160
  40428c:	cbz	x25, 4042b0 <ferror@plt+0x14e0>
  404290:	ldr	w2, [x25, #32]
  404294:	cmp	w0, w2
  404298:	b.hi	4042a8 <ferror@plt+0x14d8>  // b.pmore
  40429c:	mov	x1, x25
  4042a0:	ldr	x25, [x25, #16]
  4042a4:	b	40428c <ferror@plt+0x14bc>
  4042a8:	ldr	x25, [x25, #24]
  4042ac:	b	40428c <ferror@plt+0x14bc>
  4042b0:	add	x2, x19, #0x160
  4042b4:	cmp	x1, x2
  4042b8:	b.eq	404224 <ferror@plt+0x1454>  // b.none
  4042bc:	ldr	w2, [x1, #32]
  4042c0:	cmp	w0, w2
  4042c4:	b.cc	404224 <ferror@plt+0x1454>  // b.lo, b.ul, b.last
  4042c8:	ldr	x25, [x1, #40]
  4042cc:	cbz	x25, 404224 <ferror@plt+0x1454>
  4042d0:	bl	405f8c <ferror@plt+0x31bc>
  4042d4:	ldr	w1, [x25, #20]
  4042d8:	cmp	w0, w1
  4042dc:	b.ne	4042f0 <ferror@plt+0x1520>  // b.any
  4042e0:	bl	405f8c <ferror@plt+0x31bc>
  4042e4:	ldr	w1, [x25, #24]
  4042e8:	cmp	w0, w1
  4042ec:	b.eq	404224 <ferror@plt+0x1454>  // b.none
  4042f0:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  4042f4:	ldr	x23, [x19, #208]
  4042f8:	ldr	x21, [x0, #1440]
  4042fc:	mov	x0, x25
  404300:	bl	408d00 <ferror@plt+0x5f30>
  404304:	mov	x3, x0
  404308:	mov	x2, x23
  40430c:	mov	x0, x21
  404310:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  404314:	add	x1, x1, #0xb28
  404318:	bl	40cc8c <ferror@plt+0x9ebc>
  40431c:	b	4041c4 <ferror@plt+0x13f4>
  404320:	cmp	x25, #0x0
  404324:	ccmp	w1, w28, #0x0, ne  // ne = any
  404328:	b.ne	404224 <ferror@plt+0x1454>  // b.any
  40432c:	ldp	x1, x0, [x25, #64]
  404330:	add	x2, x25, #0x40
  404334:	sub	x0, x0, x1
  404338:	asr	x0, x0, #3
  40433c:	lsl	x0, x0, #1
  404340:	cmp	x0, w21, uxtw
  404344:	b.ne	4042f0 <ferror@plt+0x1520>  // b.any
  404348:	mov	w5, #0x0                   	// #0
  40434c:	ldp	x1, x0, [x2]
  404350:	mov	w4, w5
  404354:	str	w5, [sp, #96]
  404358:	stp	x2, x4, [sp, #104]
  40435c:	sub	x0, x0, x1
  404360:	asr	x0, x0, #3
  404364:	cmp	x0, w5, uxtw
  404368:	b.eq	404224 <ferror@plt+0x1454>  // b.none
  40436c:	mov	w0, #0x2                   	// #2
  404370:	bl	4051e8 <ferror@plt+0x2418>
  404374:	ldr	w5, [sp, #96]
  404378:	ldp	x2, x4, [sp, #104]
  40437c:	cbz	x0, 4043c0 <ferror@plt+0x15f0>
  404380:	ldr	w6, [x19, #32]
  404384:	ldr	w1, [x0]
  404388:	cbz	w6, 404390 <ferror@plt+0x15c0>
  40438c:	rev	w1, w1
  404390:	ldr	w0, [x0, #4]
  404394:	mov	w1, w1
  404398:	cbz	w6, 4043a0 <ferror@plt+0x15d0>
  40439c:	rev	w0, w0
  4043a0:	orr	x0, x1, x0, lsl #32
  4043a4:	ldr	x6, [x25, #64]
  4043a8:	lsl	x1, x4, #3
  4043ac:	add	w5, w5, #0x1
  4043b0:	ldr	x4, [x6, x1]
  4043b4:	add	x0, x4, x0
  4043b8:	str	x0, [x6, x1]
  4043bc:	b	40434c <ferror@plt+0x157c>
  4043c0:	mov	x0, #0x0                   	// #0
  4043c4:	b	4043a4 <ferror@plt+0x15d4>
  4043c8:	mov	w2, #0x1                   	// #1
  4043cc:	b	404240 <ferror@plt+0x1470>
  4043d0:	add	x0, sp, #0xb8
  4043d4:	bl	408da8 <ferror@plt+0x5fd8>
  4043d8:	mov	w2, w0
  4043dc:	add	x23, x23, x23, lsl #1
  4043e0:	ldr	x0, [sp, #208]
  4043e4:	cmp	x23, x0, lsl #2
  4043e8:	b.hi	4043fc <ferror@plt+0x162c>  // b.pmore
  4043ec:	add	x0, sp, #0xc0
  4043f0:	str	w2, [sp, #96]
  4043f4:	bl	409888 <ferror@plt+0x6ab8>
  4043f8:	ldr	w2, [sp, #96]
  4043fc:	ldr	w1, [sp, #232]
  404400:	ldr	w0, [sp, #224]
  404404:	str	w2, [sp, #96]
  404408:	add	w0, w0, #0x1
  40440c:	str	w1, [sp, #104]
  404410:	str	w0, [sp, #224]
  404414:	mov	w0, w2
  404418:	bl	408c44 <ferror@plt+0x5e74>
  40441c:	mov	w23, w0
  404420:	ldr	x3, [sp, #192]
  404424:	ubfiz	x4, x23, #4, #32
  404428:	add	x21, x3, x4
  40442c:	ldr	w0, [x21, #4]
  404430:	cmn	w0, #0x3
  404434:	b.eq	40450c <ferror@plt+0x173c>  // b.none
  404438:	ldr	w2, [sp, #96]
  40443c:	cmn	w0, #0x2
  404440:	ldr	w1, [sp, #104]
  404444:	b.eq	404460 <ferror@plt+0x1690>  // b.none
  404448:	ldr	w4, [x3, x4]
  40444c:	cmp	w28, w4
  404450:	b.ne	40445c <ferror@plt+0x168c>  // b.any
  404454:	cmp	w27, w0
  404458:	b.eq	4044d0 <ferror@plt+0x1700>  // b.none
  40445c:	mov	x21, #0x0                   	// #0
  404460:	mov	w0, w2
  404464:	str	x3, [sp, #96]
  404468:	bl	408c7c <ferror@plt+0x5eac>
  40446c:	ldr	x3, [sp, #96]
  404470:	mov	x1, x21
  404474:	ldr	x4, [sp, #200]
  404478:	add	w23, w23, w0
  40447c:	ldr	w2, [sp, #228]
  404480:	cmp	x4, w23, uxtw
  404484:	add	w2, w2, #0x1
  404488:	str	w2, [sp, #228]
  40448c:	b.hi	404494 <ferror@plt+0x16c4>  // b.pmore
  404490:	sub	w23, w23, w4
  404494:	ubfiz	x5, x23, #4, #32
  404498:	add	x21, x3, x5
  40449c:	ldr	w2, [x21, #4]
  4044a0:	cmn	w2, #0x3
  4044a4:	b.eq	4044f0 <ferror@plt+0x1720>  // b.none
  4044a8:	cmn	w2, #0x2
  4044ac:	b.ne	4044bc <ferror@plt+0x16ec>  // b.any
  4044b0:	cmp	x1, #0x0
  4044b4:	csel	x1, x1, x21, ne  // ne = any
  4044b8:	b	404478 <ferror@plt+0x16a8>
  4044bc:	ldr	w5, [x3, x5]
  4044c0:	cmp	w28, w5
  4044c4:	b.ne	404478 <ferror@plt+0x16a8>  // b.any
  4044c8:	cmp	w27, w2
  4044cc:	b.ne	404478 <ferror@plt+0x16a8>  // b.any
  4044d0:	ldr	w0, [x21, #4]
  4044d4:	cmn	w0, #0x3
  4044d8:	b.ne	4044e4 <ferror@plt+0x1714>  // b.any
  4044dc:	ldr	x0, [sp, #184]
  4044e0:	str	x0, [x21]
  4044e4:	ldr	x0, [x25]
  4044e8:	str	x0, [x21, #8]
  4044ec:	b	403908 <ferror@plt+0xb38>
  4044f0:	cbz	x1, 40450c <ferror@plt+0x173c>
  4044f4:	ldr	x0, [sp, #216]
  4044f8:	mov	x21, x1
  4044fc:	sub	x0, x0, #0x1
  404500:	str	x0, [sp, #216]
  404504:	str	w2, [x1, #4]
  404508:	b	4044d0 <ferror@plt+0x1700>
  40450c:	ldr	x0, [sp, #208]
  404510:	ubfiz	x21, x23, #4, #32
  404514:	add	x21, x3, x21
  404518:	add	x0, x0, #0x1
  40451c:	str	x0, [sp, #208]
  404520:	b	4044d0 <ferror@plt+0x1700>
  404524:	ldr	x0, [x0]
  404528:	adrp	x27, 408000 <ferror@plt+0x5230>
  40452c:	add	x27, x27, #0xb38
  404530:	mov	x1, x25
  404534:	mov	x2, x27
  404538:	mov	w3, #0x0                   	// #0
  40453c:	bl	40a3a8 <ferror@plt+0x75d8>
  404540:	mov	x21, x0
  404544:	cmp	x0, x25
  404548:	b.eq	40457c <ferror@plt+0x17ac>  // b.none
  40454c:	add	x23, x0, #0x8
  404550:	cmp	x25, x23
  404554:	b.eq	404580 <ferror@plt+0x17b0>  // b.none
  404558:	mov	x1, x23
  40455c:	mov	x0, x27
  404560:	bl	405820 <ferror@plt+0x2a50>
  404564:	tst	w0, #0xff
  404568:	b.ne	404574 <ferror@plt+0x17a4>  // b.any
  40456c:	ldr	x0, [x23]
  404570:	str	x0, [x21], #8
  404574:	add	x23, x23, #0x8
  404578:	b	404550 <ferror@plt+0x1780>
  40457c:	mov	x21, x25
  404580:	ldr	x1, [x19, #328]
  404584:	cmp	x1, x21
  404588:	b.eq	404590 <ferror@plt+0x17c0>  // b.none
  40458c:	str	x21, [x19, #328]
  404590:	ldr	x0, [x19, #320]
  404594:	str	x0, [sp, #96]
  404598:	ldr	x0, [x19, #328]
  40459c:	ldr	x1, [sp, #96]
  4045a0:	cmp	x0, x1
  4045a4:	b.eq	404bfc <ferror@plt+0x1e2c>  // b.none
  4045a8:	ldr	x23, [x1]
  4045ac:	ldp	x1, x0, [x23, #64]
  4045b0:	cmp	x1, x0
  4045b4:	b.ne	4045c0 <ferror@plt+0x17f0>  // b.any
  4045b8:	ldr	w0, [x19, #200]
  4045bc:	cbz	w0, 404bf0 <ferror@plt+0x1e20>
  4045c0:	ldr	w3, [x23, #104]
  4045c4:	mov	w0, #0x90                  	// #144
  4045c8:	ldr	x2, [x19, #264]
  4045cc:	mov	x1, x23
  4045d0:	add	x25, x23, #0x20
  4045d4:	mov	w27, #0x0                   	// #0
  4045d8:	umaddl	x0, w3, w0, x2
  4045dc:	bl	4068c4 <ferror@plt+0x3af4>
  4045e0:	ldp	x21, x0, [x25]
  4045e4:	sub	x0, x0, x21
  4045e8:	asr	x0, x0, #3
  4045ec:	mul	x0, x0, x20
  4045f0:	cmp	x0, w27, uxtw
  4045f4:	b.eq	404728 <ferror@plt+0x1958>  // b.none
  4045f8:	mov	w0, #0x68                  	// #104
  4045fc:	mov	w28, #0x0                   	// #0
  404600:	umaddl	x21, w27, w0, x21
  404604:	ldp	x2, x0, [x21, #56]
  404608:	mov	w1, w28
  40460c:	sub	x0, x0, x2
  404610:	asr	x0, x0, #5
  404614:	cmp	x0, w28, uxtw
  404618:	b.ls	404720 <ferror@plt+0x1950>  // b.plast
  40461c:	lsl	x0, x1, #5
  404620:	add	x1, x2, x1, lsl #5
  404624:	str	x0, [sp, #104]
  404628:	ldr	x0, [x1, #8]
  40462c:	ldr	x3, [x1, #16]
  404630:	cmp	x0, x3
  404634:	b.eq	4046c0 <ferror@plt+0x18f0>  // b.none
  404638:	sub	x5, x3, x0
  40463c:	mov	w1, #0x3f                  	// #63
  404640:	stp	x0, x3, [sp, #112]
  404644:	asr	x2, x5, #2
  404648:	clz	x2, x2
  40464c:	str	x5, [sp, #128]
  404650:	sub	w2, w1, w2
  404654:	mov	x1, x3
  404658:	sbfiz	x2, x2, #1, #32
  40465c:	bl	40753c <ferror@plt+0x476c>
  404660:	ldr	x5, [sp, #128]
  404664:	ldp	x0, x3, [sp, #112]
  404668:	cmp	x5, #0x40
  40466c:	b.le	4046b4 <ferror@plt+0x18e4>
  404670:	add	x1, x0, #0x40
  404674:	mov	w2, #0x0                   	// #0
  404678:	str	x1, [sp, #112]
  40467c:	bl	40a4c8 <ferror@plt+0x76f8>
  404680:	ldp	x1, x3, [sp, #112]
  404684:	cmp	x3, x1
  404688:	b.eq	4046c0 <ferror@plt+0x18f0>  // b.none
  40468c:	ldr	w2, [x1]
  404690:	mov	x0, x1
  404694:	ldur	w5, [x0, #-4]
  404698:	cmp	w2, w5
  40469c:	b.cs	4046a8 <ferror@plt+0x18d8>  // b.hs, b.nlast
  4046a0:	str	w5, [x0], #-4
  4046a4:	b	404694 <ferror@plt+0x18c4>
  4046a8:	add	x1, x1, #0x4
  4046ac:	str	w2, [x0]
  4046b0:	b	404684 <ferror@plt+0x18b4>
  4046b4:	mov	x1, x3
  4046b8:	mov	w2, #0x0                   	// #0
  4046bc:	bl	40a4c8 <ferror@plt+0x76f8>
  4046c0:	ldr	x1, [x21, #56]
  4046c4:	ldr	x0, [sp, #104]
  4046c8:	add	x2, x1, x0
  4046cc:	ldr	x0, [x2, #16]
  4046d0:	ldr	x2, [x2, #8]
  4046d4:	cmp	x2, x0
  4046d8:	b.eq	404718 <ferror@plt+0x1948>  // b.none
  4046dc:	ldr	x2, [sp, #104]
  4046e0:	ldr	w3, [x1, x2]
  4046e4:	mov	w2, #0x90                  	// #144
  4046e8:	ldr	x1, [x19, #264]
  4046ec:	umaddl	x3, w3, w2, x1
  4046f0:	ldur	w1, [x0, #-4]
  4046f4:	add	x0, x3, #0x18
  4046f8:	ldr	x2, [x0, #8]
  4046fc:	ldr	x3, [x3, #24]
  404700:	sub	x2, x2, x3
  404704:	asr	x2, x2, #6
  404708:	cmp	x2, w1, uxtw
  40470c:	b.hi	404718 <ferror@plt+0x1948>  // b.pmore
  404710:	add	w1, w1, #0x1
  404714:	bl	40a270 <ferror@plt+0x74a0>
  404718:	add	w28, w28, #0x1
  40471c:	b	404604 <ferror@plt+0x1834>
  404720:	add	w27, w27, #0x1
  404724:	b	4045e0 <ferror@plt+0x1810>
  404728:	ldrb	w0, [x23, #28]
  40472c:	tbz	w0, #2, 404748 <ferror@plt+0x1978>
  404730:	ldr	w0, [x23, #96]
  404734:	ldr	w1, [x23, #88]
  404738:	add	w0, w0, #0x1
  40473c:	sub	w1, w0, w1
  404740:	add	x0, x23, #0x70
  404744:	bl	40a270 <ferror@plt+0x74a0>
  404748:	ldr	x0, [x25, #8]
  40474c:	mov	w8, #0x68                  	// #104
  404750:	ldr	x2, [x23, #32]
  404754:	ldr	x21, [x23, #64]
  404758:	sub	x0, x0, x2
  40475c:	asr	x0, x0, #3
  404760:	mul	x0, x0, x20
  404764:	mov	w5, w0
  404768:	sub	w5, w5, #0x1
  40476c:	cmn	w5, #0x1
  404770:	b.eq	4047c4 <ferror@plt+0x19f4>  // b.none
  404774:	umull	x3, w5, w8
  404778:	mov	x6, #0x0                   	// #0
  40477c:	add	x7, x2, x3
  404780:	ldr	x1, [x2, x3]
  404784:	cbz	x1, 40479c <ferror@plt+0x19cc>
  404788:	ldr	x9, [x1, #40]
  40478c:	str	x6, [x1, #40]
  404790:	mov	x6, x1
  404794:	mov	x1, x9
  404798:	b	404784 <ferror@plt+0x19b4>
  40479c:	str	x6, [x2, x3]
  4047a0:	ldr	x3, [x7, #8]
  4047a4:	cbz	x3, 4047bc <ferror@plt+0x19ec>
  4047a8:	ldr	x6, [x3, #48]
  4047ac:	str	x1, [x3, #48]
  4047b0:	mov	x1, x3
  4047b4:	mov	x3, x6
  4047b8:	b	4047a4 <ferror@plt+0x19d4>
  4047bc:	str	x1, [x7, #8]
  4047c0:	b	404768 <ferror@plt+0x1998>
  4047c4:	cmp	x0, #0x1
  4047c8:	b.hi	4048a0 <ferror@plt+0x1ad0>  // b.pmore
  4047cc:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  4047d0:	ldr	x28, [x19, #192]
  4047d4:	ldr	x27, [x0, #1440]
  4047d8:	mov	x0, x23
  4047dc:	bl	408d00 <ferror@plt+0x5f30>
  4047e0:	mov	x3, x0
  4047e4:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4047e8:	mov	x2, x28
  4047ec:	add	x1, x1, #0xb46
  4047f0:	mov	x0, x27
  4047f4:	bl	40cc8c <ferror@plt+0x9ebc>
  4047f8:	ldr	x0, [x25, #8]
  4047fc:	mov	w8, #0x0                   	// #0
  404800:	ldr	x1, [x23, #32]
  404804:	mov	w13, #0x68                  	// #104
  404808:	sub	x0, x0, x1
  40480c:	asr	x0, x0, #3
  404810:	mul	x7, x0, x20
  404814:	mov	x0, #0x0                   	// #0
  404818:	cmp	x7, w8, uxtw
  40481c:	b.ls	404a0c <ferror@plt+0x1c3c>  // b.plast
  404820:	umull	x9, w8, w13
  404824:	mov	w12, #0x0                   	// #0
  404828:	ldr	x10, [x23, #32]
  40482c:	mov	w11, #0x0                   	// #0
  404830:	mov	x14, #0x0                   	// #0
  404834:	add	x6, x10, x9
  404838:	ldr	x2, [x10, x9]
  40483c:	mov	x1, x2
  404840:	cbz	x1, 404924 <ferror@plt+0x1b54>
  404844:	ldrb	w3, [x1, #32]
  404848:	ldr	x5, [x1, #8]
  40484c:	tst	x3, #0x4
  404850:	cinc	w12, w12, eq  // eq = none
  404854:	tbnz	w3, #1, 404888 <ferror@plt+0x1ab8>
  404858:	cbz	x21, 404864 <ferror@plt+0x1a94>
  40485c:	ldr	x3, [x21], #8
  404860:	str	x3, [x1, #16]
  404864:	ldrb	w3, [x1, #32]
  404868:	orr	w3, w3, #0x1
  40486c:	strb	w3, [x1, #32]
  404870:	ldr	x3, [x6, #16]
  404874:	sub	x3, x3, #0x1
  404878:	str	x3, [x6, #16]
  40487c:	ldr	x3, [x5, #24]
  404880:	sub	x3, x3, #0x1
  404884:	str	x3, [x5, #24]
  404888:	cbz	x14, 404894 <ferror@plt+0x1ac4>
  40488c:	cmp	x14, x5
  404890:	csinc	w11, w11, wzr, ls  // ls = plast
  404894:	mov	x14, x5
  404898:	ldr	x1, [x1, #40]
  40489c:	b	404840 <ferror@plt+0x1a70>
  4048a0:	ldr	x0, [x2, #24]
  4048a4:	cbz	x0, 40490c <ferror@plt+0x1b3c>
  4048a8:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  4048ac:	ldr	x28, [x19, #192]
  4048b0:	ldr	x27, [x0, #1440]
  4048b4:	mov	x0, x23
  4048b8:	bl	408d00 <ferror@plt+0x5f30>
  4048bc:	mov	x3, x0
  4048c0:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4048c4:	mov	x2, x28
  4048c8:	add	x1, x1, #0xb6e
  4048cc:	mov	x0, x27
  4048d0:	bl	40cc8c <ferror@plt+0x9ebc>
  4048d4:	ldr	x0, [x23, #32]
  4048d8:	add	x0, x0, #0x68
  4048dc:	ldr	x1, [x0, #16]
  4048e0:	cbz	x1, 404918 <ferror@plt+0x1b48>
  4048e4:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  4048e8:	ldr	x28, [x19, #192]
  4048ec:	ldr	x27, [x0, #1440]
  4048f0:	mov	x0, x23
  4048f4:	bl	408d00 <ferror@plt+0x5f30>
  4048f8:	mov	x3, x0
  4048fc:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  404900:	mov	x2, x28
  404904:	add	x1, x1, #0xb8f
  404908:	b	4047f0 <ferror@plt+0x1a20>
  40490c:	mov	x0, #0xffffffff            	// #4294967295
  404910:	str	x0, [x2, #24]
  404914:	b	4048d4 <ferror@plt+0x1b04>
  404918:	mov	x1, #0xffffffff            	// #4294967295
  40491c:	str	x1, [x0, #16]
  404920:	b	4047f8 <ferror@plt+0x1a28>
  404924:	cmp	w12, #0x1
  404928:	b.ne	40497c <ferror@plt+0x1bac>  // b.any
  40492c:	mov	x3, x2
  404930:	cbz	x3, 40497c <ferror@plt+0x1bac>
  404934:	ldrb	w5, [x3, #32]
  404938:	tbnz	w5, #2, 404974 <ferror@plt+0x1ba4>
  40493c:	ldrb	w12, [x6, #48]
  404940:	orr	w5, w5, #0xffffff80
  404944:	strb	w5, [x3, #32]
  404948:	tbz	w12, #4, 404974 <ferror@plt+0x1ba4>
  40494c:	tbz	w5, #3, 404974 <ferror@plt+0x1ba4>
  404950:	ldr	x5, [x3, #8]
  404954:	ldr	x12, [x5, #8]
  404958:	cmp	x3, x12
  40495c:	b.ne	404974 <ferror@plt+0x1ba4>  // b.any
  404960:	ldr	x12, [x3, #48]
  404964:	cbnz	x12, 404974 <ferror@plt+0x1ba4>
  404968:	ldrb	w12, [x5, #48]
  40496c:	orr	w12, w12, #0x20
  404970:	strb	w12, [x5, #48]
  404974:	ldr	x3, [x3, #40]
  404978:	b	404930 <ferror@plt+0x1b60>
  40497c:	cbz	w11, 4049f0 <ferror@plt+0x1c20>
  404980:	mov	x5, x2
  404984:	mov	w11, #0x0                   	// #0
  404988:	b	4049c8 <ferror@plt+0x1bf8>
  40498c:	mov	x1, x2
  404990:	mov	x2, x3
  404994:	b	4049c8 <ferror@plt+0x1bf8>
  404998:	ldr	x15, [x2, #8]
  40499c:	ldr	x14, [x3, #8]
  4049a0:	cmp	x15, x14
  4049a4:	b.ls	40498c <ferror@plt+0x1bbc>  // b.plast
  4049a8:	cbz	x1, 4049e4 <ferror@plt+0x1c14>
  4049ac:	str	x3, [x1, #40]
  4049b0:	ldr	x1, [x3, #40]
  4049b4:	str	x1, [x2, #40]
  4049b8:	mov	w11, #0x1                   	// #1
  4049bc:	str	x2, [x3, #40]
  4049c0:	mov	x1, x3
  4049c4:	mov	x2, x12
  4049c8:	ldr	x3, [x2, #40]
  4049cc:	mov	x12, x2
  4049d0:	cbnz	x3, 404998 <ferror@plt+0x1bc8>
  4049d4:	cbz	w11, 4049ec <ferror@plt+0x1c1c>
  4049d8:	mov	x12, x5
  4049dc:	mov	w11, #0x0                   	// #0
  4049e0:	b	4049c0 <ferror@plt+0x1bf0>
  4049e4:	mov	x5, x3
  4049e8:	b	4049b0 <ferror@plt+0x1be0>
  4049ec:	str	x5, [x10, x9]
  4049f0:	ldrb	w1, [x6, #48]
  4049f4:	add	w8, w8, #0x1
  4049f8:	str	x0, [x6, #96]
  4049fc:	mov	x0, x6
  404a00:	orr	w1, w1, #0x4
  404a04:	strb	w1, [x6, #48]
  404a08:	b	404818 <ferror@plt+0x1a48>
  404a0c:	cbz	x0, 404be0 <ferror@plt+0x1e10>
  404a10:	mov	x1, #0x0                   	// #0
  404a14:	ldrb	w2, [x0, #48]
  404a18:	ldr	x5, [x0, #96]
  404a1c:	and	w2, w2, #0xfffffffb
  404a20:	strb	w2, [x0, #48]
  404a24:	ldr	x2, [x0, #16]
  404a28:	cbnz	x2, 404a44 <ferror@plt+0x1c74>
  404a2c:	ldr	x3, [x0]
  404a30:	cbz	x3, 404a64 <ferror@plt+0x1c94>
  404a34:	ldr	x6, [x3, #16]
  404a38:	ldr	x3, [x3, #40]
  404a3c:	add	x2, x2, x6
  404a40:	b	404a30 <ferror@plt+0x1c60>
  404a44:	ldr	x2, [x0, #24]
  404a48:	cbnz	x2, 404a7c <ferror@plt+0x1cac>
  404a4c:	ldr	x3, [x0, #8]
  404a50:	cbz	x3, 404a64 <ferror@plt+0x1c94>
  404a54:	ldr	x6, [x3, #16]
  404a58:	ldr	x3, [x3, #48]
  404a5c:	add	x2, x2, x6
  404a60:	b	404a50 <ferror@plt+0x1c80>
  404a64:	str	x1, [x0, #96]
  404a68:	ldrb	w1, [x0, #48]
  404a6c:	str	x2, [x0, #40]
  404a70:	orr	w1, w1, #0x3
  404a74:	strb	w1, [x0, #48]
  404a78:	mov	x1, x0
  404a7c:	cbz	x5, 404a88 <ferror@plt+0x1cb8>
  404a80:	mov	x0, x5
  404a84:	b	404a14 <ferror@plt+0x1c44>
  404a88:	mov	x0, #0x0                   	// #0
  404a8c:	b	404b78 <ferror@plt+0x1da8>
  404a90:	ldrb	w7, [x3, #32]
  404a94:	ldr	x2, [x3, #8]
  404a98:	orr	w7, w7, #0x1
  404a9c:	strb	w7, [x3, #32]
  404aa0:	str	x5, [x3, #16]
  404aa4:	ldr	x5, [x2, #24]
  404aa8:	ldrb	w3, [x2, #48]
  404aac:	str	xzr, [x1, #16]
  404ab0:	sub	x5, x5, #0x1
  404ab4:	str	x5, [x2, #24]
  404ab8:	tbz	w3, #0, 404b10 <ferror@plt+0x1d40>
  404abc:	cmp	x5, #0x1
  404ac0:	b.ne	404ad8 <ferror@plt+0x1d08>  // b.any
  404ac4:	tbnz	w3, #1, 404ad8 <ferror@plt+0x1d08>
  404ac8:	str	x6, [x2, #96]
  404acc:	mov	x6, x2
  404ad0:	orr	w3, w3, #0x2
  404ad4:	strb	w3, [x2, #48]
  404ad8:	ldr	x2, [x1, #24]
  404adc:	cmp	x2, #0x1
  404ae0:	b.ne	404b74 <ferror@plt+0x1da4>  // b.any
  404ae4:	ldr	x2, [x1, #8]
  404ae8:	mov	x3, #0x0                   	// #0
  404aec:	ldr	x5, [x1, #40]
  404af0:	cbz	x2, 404b2c <ferror@plt+0x1d5c>
  404af4:	ldr	x7, [x2, #16]
  404af8:	sub	x5, x5, x7
  404afc:	ldrb	w7, [x2, #32]
  404b00:	tst	x7, #0x1
  404b04:	csel	x3, x3, x2, ne  // ne = any
  404b08:	ldr	x2, [x2, #48]
  404b0c:	b	404af0 <ferror@plt+0x1d20>
  404b10:	cbnz	x5, 404ad8 <ferror@plt+0x1d08>
  404b14:	tbnz	w3, #2, 404ad8 <ferror@plt+0x1d08>
  404b18:	orr	w3, w3, #0x4
  404b1c:	strb	w3, [x2, #48]
  404b20:	str	x0, [x2, #96]
  404b24:	mov	x0, x2
  404b28:	b	404ad8 <ferror@plt+0x1d08>
  404b2c:	ldrb	w7, [x3, #32]
  404b30:	ldr	x2, [x3]
  404b34:	orr	w7, w7, #0x1
  404b38:	strb	w7, [x3, #32]
  404b3c:	str	x5, [x3, #16]
  404b40:	ldr	x3, [x2, #16]
  404b44:	str	xzr, [x1, #24]
  404b48:	ldrb	w1, [x2, #48]
  404b4c:	sub	x3, x3, #0x1
  404b50:	str	x3, [x2, #16]
  404b54:	tbz	w1, #0, 404bc4 <ferror@plt+0x1df4>
  404b58:	cmp	x3, #0x1
  404b5c:	b.ne	404b74 <ferror@plt+0x1da4>  // b.any
  404b60:	tbnz	w1, #1, 404b74 <ferror@plt+0x1da4>
  404b64:	str	x6, [x2, #96]
  404b68:	mov	x6, x2
  404b6c:	orr	w1, w1, #0x2
  404b70:	strb	w1, [x2, #48]
  404b74:	mov	x1, x6
  404b78:	cbz	x1, 404a0c <ferror@plt+0x1c3c>
  404b7c:	ldrb	w2, [x1, #48]
  404b80:	ldr	x6, [x1, #96]
  404b84:	and	w2, w2, #0xfffffffd
  404b88:	strb	w2, [x1, #48]
  404b8c:	ldr	x2, [x1, #16]
  404b90:	cmp	x2, #0x1
  404b94:	b.ne	404ad8 <ferror@plt+0x1d08>  // b.any
  404b98:	ldr	x2, [x1]
  404b9c:	mov	x3, #0x0                   	// #0
  404ba0:	ldr	x5, [x1, #40]
  404ba4:	cbz	x2, 404a90 <ferror@plt+0x1cc0>
  404ba8:	ldr	x7, [x2, #16]
  404bac:	sub	x5, x5, x7
  404bb0:	ldrb	w7, [x2, #32]
  404bb4:	tst	x7, #0x1
  404bb8:	csel	x3, x3, x2, ne  // ne = any
  404bbc:	ldr	x2, [x2, #40]
  404bc0:	b	404ba4 <ferror@plt+0x1dd4>
  404bc4:	cbnz	x3, 404b74 <ferror@plt+0x1da4>
  404bc8:	tbnz	w1, #2, 404b74 <ferror@plt+0x1da4>
  404bcc:	orr	w1, w1, #0x4
  404bd0:	strb	w1, [x2, #48]
  404bd4:	str	x0, [x2, #96]
  404bd8:	mov	x0, x2
  404bdc:	b	404b74 <ferror@plt+0x1da4>
  404be0:	ldrb	w0, [x23, #28]
  404be4:	tbz	w0, #0, 404bf0 <ferror@plt+0x1e20>
  404be8:	mov	x0, x23
  404bec:	bl	405338 <ferror@plt+0x2568>
  404bf0:	ldr	x0, [sp, #96]
  404bf4:	add	x0, x0, #0x8
  404bf8:	b	404594 <ferror@plt+0x17c4>
  404bfc:	ldr	x1, [sp, #200]
  404c00:	sub	x0, x1, #0x1
  404c04:	cmp	x1, x0
  404c08:	b.ls	404c14 <ferror@plt+0x1e44>  // b.plast
  404c0c:	sub	x0, x0, #0x1
  404c10:	b	404c04 <ferror@plt+0x1e34>
  404c14:	ldrb	w1, [sp, #236]
  404c18:	ldr	x0, [sp, #192]
  404c1c:	cbnz	w1, 404c64 <ferror@plt+0x1e94>
  404c20:	bl	402b30 <free@plt>
  404c24:	ldr	x0, [sp, #160]
  404c28:	ldr	x0, [x0, x26]
  404c2c:	bl	407bbc <ferror@plt+0x4dec>
  404c30:	ldr	x21, [x19, #320]
  404c34:	ldr	x0, [x19, #328]
  404c38:	cmp	x0, x21
  404c3c:	b.eq	404c6c <ferror@plt+0x1e9c>  // b.none
  404c40:	ldr	x23, [x21]
  404c44:	cbz	x23, 404c5c <ferror@plt+0x1e8c>
  404c48:	mov	x0, x23
  404c4c:	bl	406e9c <ferror@plt+0x40cc>
  404c50:	mov	x0, x23
  404c54:	mov	x1, #0x90                  	// #144
  404c58:	bl	445778 <_obstack_memory_used@@Base+0xd74>
  404c5c:	add	x21, x21, #0x8
  404c60:	b	404c34 <ferror@plt+0x1e64>
  404c64:	bl	40c0d8 <ferror@plt+0x9308>
  404c68:	b	404c24 <ferror@plt+0x1e54>
  404c6c:	ldp	x23, x25, [x19, #264]
  404c70:	cmp	x25, x23
  404c74:	b.eq	404c94 <ferror@plt+0x1ec4>  // b.none
  404c78:	mov	x21, x23
  404c7c:	mov	x0, x21
  404c80:	add	x21, x21, #0x90
  404c84:	bl	40a1e0 <ferror@plt+0x7410>
  404c88:	cmp	x25, x21
  404c8c:	b.ne	404c7c <ferror@plt+0x1eac>  // b.any
  404c90:	str	x23, [x19, #272]
  404c94:	ldp	x1, x2, [x19, #240]
  404c98:	cmp	x2, x1
  404c9c:	b.eq	404ca4 <ferror@plt+0x1ed4>  // b.none
  404ca0:	str	x1, [x19, #248]
  404ca4:	ldp	x1, x2, [x19, #320]
  404ca8:	cmp	x2, x1
  404cac:	b.eq	404cb4 <ferror@plt+0x1ee4>  // b.none
  404cb0:	str	x1, [x19, #328]
  404cb4:	ldr	x1, [x19, #360]
  404cb8:	add	x21, x19, #0x158
  404cbc:	mov	x0, x21
  404cc0:	add	x19, x19, #0x160
  404cc4:	bl	408ef4 <ferror@plt+0x6124>
  404cc8:	str	xzr, [x19, #8]
  404ccc:	stp	x19, x19, [x21, #24]
  404cd0:	str	xzr, [x21, #40]
  404cd4:	add	w24, w24, #0x1
  404cd8:	add	x26, x26, #0x8
  404cdc:	b	4035b0 <ferror@plt+0x7e0>
  404ce0:	mov	x21, x0
  404ce4:	b	4039a4 <ferror@plt+0xbd4>
  404ce8:	mov	w0, #0x0                   	// #0
  404cec:	ldp	x19, x20, [sp, #16]
  404cf0:	ldp	x21, x22, [sp, #32]
  404cf4:	ldp	x23, x24, [sp, #48]
  404cf8:	ldp	x25, x26, [sp, #64]
  404cfc:	ldp	x27, x28, [sp, #80]
  404d00:	ldp	x29, x30, [sp], #320
  404d04:	ret
  404d08:	stp	x29, x30, [sp, #-32]!
  404d0c:	mov	x29, sp
  404d10:	str	x19, [sp, #16]
  404d14:	adrp	x19, 495000 <_obstack_memory_used@@Base+0x505fc>
  404d18:	add	x19, x19, #0x940
  404d1c:	mov	x0, x19
  404d20:	bl	415ce4 <ferror@plt+0x12f14>
  404d24:	mov	x1, x19
  404d28:	adrp	x2, 495000 <_obstack_memory_used@@Base+0x505fc>
  404d2c:	ldr	x19, [sp, #16]
  404d30:	add	x2, x2, #0x3b0
  404d34:	ldp	x29, x30, [sp], #32
  404d38:	adrp	x0, 416000 <ferror@plt+0x13230>
  404d3c:	add	x0, x0, #0x3bc
  404d40:	b	4027c0 <__cxa_atexit@plt>
  404d44:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  404d48:	str	xzr, [x0, #2464]
  404d4c:	ret
  404d50:	stp	x29, x30, [sp, #-32]!
  404d54:	mov	x29, sp
  404d58:	stp	x19, x20, [sp, #16]
  404d5c:	adrp	x19, 495000 <_obstack_memory_used@@Base+0x505fc>
  404d60:	add	x19, x19, #0xaf8
  404d64:	mov	x20, #0x1c00                	// #7168
  404d68:	movk	x20, #0x1, lsl #16
  404d6c:	mov	x0, x20
  404d70:	stp	xzr, xzr, [x19]
  404d74:	stp	xzr, xzr, [x19, #16]
  404d78:	stp	xzr, xzr, [x19, #32]
  404d7c:	str	x20, [x19, #64]
  404d80:	bl	402890 <malloc@plt>
  404d84:	str	x0, [x19, #56]
  404d88:	cbz	x0, 404da0 <ferror@plt+0x1fd0>
  404d8c:	stp	x20, xzr, [x0]
  404d90:	str	x0, [x19, #48]
  404d94:	ldp	x19, x20, [sp, #16]
  404d98:	ldp	x29, x30, [sp], #32
  404d9c:	ret
  404da0:	str	xzr, [x19, #48]
  404da4:	str	xzr, [x19, #64]
  404da8:	b	404d94 <ferror@plt+0x1fc4>
  404dac:	mov	x29, #0x0                   	// #0
  404db0:	mov	x30, #0x0                   	// #0
  404db4:	mov	x5, x0
  404db8:	ldr	x1, [sp]
  404dbc:	add	x2, sp, #0x8
  404dc0:	mov	x6, sp
  404dc4:	movz	x0, #0x0, lsl #48
  404dc8:	movk	x0, #0x0, lsl #32
  404dcc:	movk	x0, #0x40, lsl #16
  404dd0:	movk	x0, #0x32bc
  404dd4:	movz	x3, #0x0, lsl #48
  404dd8:	movk	x3, #0x0, lsl #32
  404ddc:	movk	x3, #0x45, lsl #16
  404de0:	movk	x3, #0xe9f0
  404de4:	movz	x4, #0x0, lsl #48
  404de8:	movk	x4, #0x0, lsl #32
  404dec:	movk	x4, #0x45, lsl #16
  404df0:	movk	x4, #0xea70
  404df4:	bl	402910 <__libc_start_main@plt>
  404df8:	bl	402a50 <abort@plt>
  404dfc:	adrp	x0, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  404e00:	ldr	x0, [x0, #3800]
  404e04:	cbz	x0, 404e0c <ferror@plt+0x203c>
  404e08:	b	402a20 <__gmon_start__@plt>
  404e0c:	ret
  404e10:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  404e14:	add	x0, x0, #0x5a0
  404e18:	adrp	x1, 495000 <_obstack_memory_used@@Base+0x505fc>
  404e1c:	add	x1, x1, #0x5a0
  404e20:	cmp	x1, x0
  404e24:	b.eq	404e3c <ferror@plt+0x206c>  // b.none
  404e28:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x195fc>
  404e2c:	ldr	x1, [x1, #2760]
  404e30:	cbz	x1, 404e3c <ferror@plt+0x206c>
  404e34:	mov	x16, x1
  404e38:	br	x16
  404e3c:	ret
  404e40:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  404e44:	add	x0, x0, #0x5a0
  404e48:	adrp	x1, 495000 <_obstack_memory_used@@Base+0x505fc>
  404e4c:	add	x1, x1, #0x5a0
  404e50:	sub	x1, x1, x0
  404e54:	lsr	x2, x1, #63
  404e58:	add	x1, x2, x1, asr #3
  404e5c:	cmp	xzr, x1, asr #1
  404e60:	asr	x1, x1, #1
  404e64:	b.eq	404e7c <ferror@plt+0x20ac>  // b.none
  404e68:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x195fc>
  404e6c:	ldr	x2, [x2, #2768]
  404e70:	cbz	x2, 404e7c <ferror@plt+0x20ac>
  404e74:	mov	x16, x2
  404e78:	br	x16
  404e7c:	ret
  404e80:	stp	x29, x30, [sp, #-32]!
  404e84:	mov	x29, sp
  404e88:	str	x19, [sp, #16]
  404e8c:	adrp	x19, 495000 <_obstack_memory_used@@Base+0x505fc>
  404e90:	ldrb	w0, [x19, #1488]
  404e94:	cbnz	w0, 404ea4 <ferror@plt+0x20d4>
  404e98:	bl	404e10 <ferror@plt+0x2040>
  404e9c:	mov	w0, #0x1                   	// #1
  404ea0:	strb	w0, [x19, #1488]
  404ea4:	ldr	x19, [sp, #16]
  404ea8:	ldp	x29, x30, [sp], #32
  404eac:	ret
  404eb0:	b	404e40 <ferror@plt+0x2070>
  404eb4:	ldr	x1, [x0, #8]
  404eb8:	cmp	x1, #0x8
  404ebc:	b.hi	404ed4 <ferror@plt+0x2104>  // b.pmore
  404ec0:	mov	w3, #0x20                  	// #32
  404ec4:	mov	x2, #0x9                   	// #9
  404ec8:	sub	x2, x2, x1
  404ecc:	mov	x1, #0x0                   	// #0
  404ed0:	b	447b28 <_obstack_memory_used@@Base+0x3124>
  404ed4:	ret
  404ed8:	stp	x29, x30, [sp, #-32]!
  404edc:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x195fc>
  404ee0:	add	x1, x1, #0xad8
  404ee4:	mov	x29, sp
  404ee8:	stp	x19, x20, [sp, #16]
  404eec:	mov	w20, w0
  404ef0:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  404ef4:	cmp	w20, #0x0
  404ef8:	ldr	x19, [x0, #1440]
  404efc:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  404f00:	ldr	x0, [x0, #1464]
  404f04:	csel	x19, x19, x0, ne  // ne = any
  404f08:	mov	x0, x19
  404f0c:	bl	40cc8c <ferror@plt+0x9ebc>
  404f10:	mov	x0, x19
  404f14:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x195fc>
  404f18:	add	x1, x1, #0xb00
  404f1c:	bl	40cc8c <ferror@plt+0x9ebc>
  404f20:	mov	x0, x19
  404f24:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x195fc>
  404f28:	add	x1, x1, #0xb23
  404f2c:	bl	40cc8c <ferror@plt+0x9ebc>
  404f30:	mov	x0, x19
  404f34:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x195fc>
  404f38:	add	x1, x1, #0xb6d
  404f3c:	bl	40cc8c <ferror@plt+0x9ebc>
  404f40:	mov	x0, x19
  404f44:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x195fc>
  404f48:	add	x1, x1, #0xbb7
  404f4c:	bl	40cc8c <ferror@plt+0x9ebc>
  404f50:	mov	x0, x19
  404f54:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x195fc>
  404f58:	add	x1, x1, #0xc36
  404f5c:	bl	40cc8c <ferror@plt+0x9ebc>
  404f60:	mov	x0, x19
  404f64:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x195fc>
  404f68:	add	x1, x1, #0xc76
  404f6c:	bl	40cc8c <ferror@plt+0x9ebc>
  404f70:	mov	x0, x19
  404f74:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x195fc>
  404f78:	add	x1, x1, #0xcbc
  404f7c:	bl	40cc8c <ferror@plt+0x9ebc>
  404f80:	mov	x0, x19
  404f84:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x195fc>
  404f88:	add	x1, x1, #0xcfa
  404f8c:	bl	40cc8c <ferror@plt+0x9ebc>
  404f90:	mov	x0, x19
  404f94:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x195fc>
  404f98:	add	x1, x1, #0xd55
  404f9c:	bl	40cc8c <ferror@plt+0x9ebc>
  404fa0:	mov	x0, x19
  404fa4:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x195fc>
  404fa8:	add	x1, x1, #0xd96
  404fac:	bl	40cc8c <ferror@plt+0x9ebc>
  404fb0:	mov	x0, x19
  404fb4:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x195fc>
  404fb8:	add	x1, x1, #0xdcd
  404fbc:	bl	40cc8c <ferror@plt+0x9ebc>
  404fc0:	mov	x0, x19
  404fc4:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x195fc>
  404fc8:	add	x1, x1, #0xe49
  404fcc:	bl	40cc8c <ferror@plt+0x9ebc>
  404fd0:	mov	x0, x19
  404fd4:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x195fc>
  404fd8:	add	x1, x1, #0xe8c
  404fdc:	bl	40cc8c <ferror@plt+0x9ebc>
  404fe0:	mov	x0, x19
  404fe4:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x195fc>
  404fe8:	add	x1, x1, #0xecc
  404fec:	bl	40cc8c <ferror@plt+0x9ebc>
  404ff0:	mov	x0, x19
  404ff4:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x195fc>
  404ff8:	add	x1, x1, #0xf1d
  404ffc:	bl	40cc8c <ferror@plt+0x9ebc>
  405000:	mov	x0, x19
  405004:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x195fc>
  405008:	add	x1, x1, #0xf61
  40500c:	bl	40cc8c <ferror@plt+0x9ebc>
  405010:	mov	x0, x19
  405014:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x195fc>
  405018:	add	x1, x1, #0xfb0
  40501c:	bl	40cc8c <ferror@plt+0x9ebc>
  405020:	mov	x0, x19
  405024:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x195fc>
  405028:	add	x1, x1, #0xff7
  40502c:	bl	40cc8c <ferror@plt+0x9ebc>
  405030:	mov	x0, x19
  405034:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  405038:	add	x1, x1, #0x31
  40503c:	bl	40cc8c <ferror@plt+0x9ebc>
  405040:	mov	x0, x19
  405044:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  405048:	add	x1, x1, #0x77
  40504c:	bl	40cc8c <ferror@plt+0x9ebc>
  405050:	mov	x0, x19
  405054:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  405058:	add	x1, x1, #0xbf
  40505c:	bl	40cc8c <ferror@plt+0x9ebc>
  405060:	mov	x0, x19
  405064:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  405068:	add	x1, x1, #0x102
  40506c:	bl	40cc8c <ferror@plt+0x9ebc>
  405070:	mov	x0, x19
  405074:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  405078:	add	x1, x1, #0x140
  40507c:	bl	40cc8c <ferror@plt+0x9ebc>
  405080:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  405084:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  405088:	add	x2, x2, #0x8b5
  40508c:	add	x1, x1, #0x177
  405090:	mov	x0, x19
  405094:	bl	40cc8c <ferror@plt+0x9ebc>
  405098:	mov	w0, w20
  40509c:	bl	402730 <exit@plt>
  4050a0:	stp	x29, x30, [sp, #-208]!
  4050a4:	mov	x29, sp
  4050a8:	stp	x19, x20, [sp, #16]
  4050ac:	mov	x20, x0
  4050b0:	stp	x21, x22, [sp, #32]
  4050b4:	stp	x23, x24, [sp, #48]
  4050b8:	mov	w24, #0x0                   	// #0
  4050bc:	stp	x25, x26, [sp, #64]
  4050c0:	bl	402700 <strlen@plt>
  4050c4:	add	x0, x0, #0x1
  4050c8:	bl	44526c <_obstack_memory_used@@Base+0x868>
  4050cc:	mov	x21, x0
  4050d0:	mov	x22, x0
  4050d4:	mov	x19, x0
  4050d8:	mov	w25, #0x2f                  	// #47
  4050dc:	ldrb	w0, [x20]
  4050e0:	cbz	w0, 4051c8 <ferror@plt+0x23f8>
  4050e4:	mov	x23, x20
  4050e8:	ldrb	w1, [x23]
  4050ec:	cbz	w1, 405100 <ferror@plt+0x2330>
  4050f0:	cmp	w1, #0x2f
  4050f4:	b.eq	405100 <ferror@plt+0x2330>  // b.none
  4050f8:	add	x23, x23, #0x1
  4050fc:	b	4050e8 <ferror@plt+0x2318>
  405100:	sub	x26, x23, x20
  405104:	cmp	x26, #0x1
  405108:	b.ne	40512c <ferror@plt+0x235c>  // b.any
  40510c:	cmp	w0, #0x2e
  405110:	b.ne	405160 <ferror@plt+0x2390>  // b.any
  405114:	mov	x20, x23
  405118:	ldrb	w0, [x20]
  40511c:	cmp	w0, #0x2f
  405120:	b.ne	4050dc <ferror@plt+0x230c>  // b.any
  405124:	add	x20, x20, #0x1
  405128:	b	405118 <ferror@plt+0x2348>
  40512c:	cmp	x26, #0x2
  405130:	b.ne	405160 <ferror@plt+0x2390>  // b.any
  405134:	cmp	w0, #0x2e
  405138:	b.ne	405160 <ferror@plt+0x2390>  // b.any
  40513c:	ldrb	w0, [x20, #1]
  405140:	cmp	w0, #0x2e
  405144:	b.ne	405160 <ferror@plt+0x2390>  // b.any
  405148:	strb	wzr, [x19]
  40514c:	cmp	x19, x22
  405150:	b.ne	405184 <ferror@plt+0x23b4>  // b.any
  405154:	sxtw	x22, w24
  405158:	add	x22, x22, #0x2
  40515c:	add	x22, x19, x22
  405160:	cbz	w24, 405168 <ferror@plt+0x2398>
  405164:	strb	w25, [x19], #1
  405168:	mov	x0, x19
  40516c:	mov	x2, x26
  405170:	mov	x1, x20
  405174:	add	x19, x19, x26
  405178:	mov	w24, #0x1                   	// #1
  40517c:	bl	4026a0 <memcpy@plt>
  405180:	b	405114 <ferror@plt+0x2344>
  405184:	add	x1, sp, #0x50
  405188:	mov	x0, x21
  40518c:	bl	45ea78 <_obstack_memory_used@@Base+0x1a074>
  405190:	cbnz	w0, 405154 <ferror@plt+0x2384>
  405194:	ldr	w0, [sp, #96]
  405198:	and	w0, w0, #0xf000
  40519c:	cmp	w0, #0xa, lsl #12
  4051a0:	b.eq	405154 <ferror@plt+0x2384>  // b.none
  4051a4:	ldrb	w0, [x19]
  4051a8:	cmp	w0, #0x2f
  4051ac:	b.eq	4051bc <ferror@plt+0x23ec>  // b.none
  4051b0:	sub	x19, x19, #0x1
  4051b4:	cmp	x22, x19
  4051b8:	b.ne	4051a4 <ferror@plt+0x23d4>  // b.any
  4051bc:	cmp	x21, x19
  4051c0:	cset	w24, ne  // ne = any
  4051c4:	b	405114 <ferror@plt+0x2344>
  4051c8:	strb	wzr, [x19]
  4051cc:	mov	x0, x21
  4051d0:	ldp	x19, x20, [sp, #16]
  4051d4:	ldp	x21, x22, [sp, #32]
  4051d8:	ldp	x23, x24, [sp, #48]
  4051dc:	ldp	x25, x26, [sp, #64]
  4051e0:	ldp	x29, x30, [sp], #208
  4051e4:	ret
  4051e8:	stp	x29, x30, [sp, #-48]!
  4051ec:	mov	x29, sp
  4051f0:	stp	x19, x20, [sp, #16]
  4051f4:	stp	x21, x22, [sp, #32]
  4051f8:	adrp	x22, 495000 <_obstack_memory_used@@Base+0x505fc>
  4051fc:	add	x19, x22, #0x5d8
  405200:	mov	w21, w0
  405204:	ldp	w1, w20, [x19, #12]
  405208:	ldr	w0, [x19, #28]
  40520c:	sub	w20, w20, w1
  405210:	cmp	w0, #0x0
  405214:	b.le	4052c4 <ferror@plt+0x24f4>
  405218:	cmp	w20, w21
  40521c:	b.cs	4052cc <ferror@plt+0x24fc>  // b.hs, b.nlast
  405220:	ldr	w2, [x19, #8]
  405224:	ldr	x0, [x19, #48]
  405228:	add	w2, w2, w1
  40522c:	str	w2, [x19, #8]
  405230:	cbz	w20, 405240 <ferror@plt+0x2470>
  405234:	lsl	w2, w20, #2
  405238:	add	x1, x0, w1, uxtw #2
  40523c:	bl	4026b0 <memmove@plt>
  405240:	ldr	x1, [x19, #40]
  405244:	stp	wzr, w20, [x19, #12]
  405248:	add	w20, w20, w21
  40524c:	cmp	x20, x1
  405250:	b.ls	40527c <ferror@plt+0x24ac>  // b.plast
  405254:	cmp	x1, #0x0
  405258:	mov	x0, #0x400                 	// #1024
  40525c:	csel	x1, x1, x0, ne  // ne = any
  405260:	add	x1, x20, x1
  405264:	lsl	x0, x1, #1
  405268:	str	x0, [x19, #40]
  40526c:	ldr	x0, [x19, #48]
  405270:	lsl	x1, x1, #3
  405274:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  405278:	str	x0, [x19, #48]
  40527c:	ldp	x2, x4, [x19, #40]
  405280:	mov	x1, #0x1                   	// #1
  405284:	ldr	w0, [x19, #16]
  405288:	ldr	x3, [x22, #1496]
  40528c:	sub	w2, w2, w0
  405290:	add	x0, x4, w0, uxtw #2
  405294:	lsl	w2, w2, #2
  405298:	bl	402b00 <fread@plt>
  40529c:	ldr	w1, [x19, #16]
  4052a0:	lsr	x0, x0, #2
  4052a4:	add	w1, w1, w0
  4052a8:	str	w1, [x19, #16]
  4052ac:	cmp	w1, w21
  4052b0:	b.cs	4052cc <ferror@plt+0x24fc>  // b.hs, b.nlast
  4052b4:	ldr	w0, [x19, #20]
  4052b8:	add	w21, w21, w0
  4052bc:	sub	w21, w21, w1
  4052c0:	stp	wzr, w21, [x19, #16]
  4052c4:	mov	x0, #0x0                   	// #0
  4052c8:	b	4052e0 <ferror@plt+0x2510>
  4052cc:	ldr	x0, [x19, #48]
  4052d0:	ldr	w1, [x19, #12]
  4052d4:	add	w21, w1, w21
  4052d8:	str	w21, [x19, #12]
  4052dc:	add	x0, x0, w1, uxtw #2
  4052e0:	ldp	x19, x20, [sp, #16]
  4052e4:	ldp	x21, x22, [sp, #32]
  4052e8:	ldp	x29, x30, [sp], #48
  4052ec:	ret
  4052f0:	stp	x29, x30, [sp, #-32]!
  4052f4:	mov	x29, sp
  4052f8:	stp	x19, x20, [sp, #16]
  4052fc:	adrp	x20, 495000 <_obstack_memory_used@@Base+0x505fc>
  405300:	add	x19, x20, #0x5d8
  405304:	ldr	x0, [x20, #1496]
  405308:	cbz	x0, 405318 <ferror@plt+0x2548>
  40530c:	bl	402830 <fclose@plt>
  405310:	str	xzr, [x20, #1496]
  405314:	str	wzr, [x19, #16]
  405318:	ldr	x0, [x19, #48]
  40531c:	bl	402b30 <free@plt>
  405320:	str	wzr, [x19, #28]
  405324:	ldr	w0, [x19, #24]
  405328:	stp	xzr, xzr, [x19, #40]
  40532c:	ldp	x19, x20, [sp, #16]
  405330:	ldp	x29, x30, [sp], #32
  405334:	ret
  405338:	stp	x29, x30, [sp, #-16]!
  40533c:	mov	w5, #0x68                  	// #104
  405340:	mov	x29, sp
  405344:	ldp	x2, x1, [x0, #32]
  405348:	sub	x1, x1, x2
  40534c:	mov	x2, #0x4ec5                	// #20165
  405350:	movk	x2, #0xc4ec, lsl #16
  405354:	asr	x1, x1, #3
  405358:	movk	x2, #0xec4e, lsl #32
  40535c:	movk	x2, #0x4ec4, lsl #48
  405360:	mul	x1, x1, x2
  405364:	lsl	x2, x1, #3
  405368:	add	x2, x2, #0xf
  40536c:	and	x2, x2, #0xfffffffffffffff0
  405370:	sub	sp, sp, x2
  405374:	mov	x3, sp
  405378:	sub	w1, w1, #0x1
  40537c:	cmn	w1, #0x1
  405380:	ldr	x2, [x0, #32]
  405384:	b.eq	40539c <ferror@plt+0x25cc>  // b.none
  405388:	umaddl	x2, w1, w5, x2
  40538c:	ldrb	w4, [x2, #48]
  405390:	orr	w4, w4, #0x8
  405394:	strb	w4, [x2, #48]
  405398:	b	405378 <ferror@plt+0x25a8>
  40539c:	ldrb	w0, [x2, #48]
  4053a0:	mov	w5, #0x14                  	// #20
  4053a4:	str	x2, [x3]
  4053a8:	and	w0, w0, #0xfffffff7
  4053ac:	strb	w0, [x2, #48]
  4053b0:	mov	w0, #0x1                   	// #1
  4053b4:	sub	w0, w0, #0x1
  4053b8:	ldr	x1, [x3, w0, uxtw #3]
  4053bc:	ldr	x1, [x1]
  4053c0:	cbnz	x1, 4053d4 <ferror@plt+0x2604>
  4053c4:	cbnz	w0, 4053b4 <ferror@plt+0x25e4>
  4053c8:	mov	sp, x29
  4053cc:	ldp	x29, x30, [sp], #16
  4053d0:	ret
  4053d4:	ldrb	w2, [x1, #32]
  4053d8:	tst	w5, w2
  4053dc:	b.ne	4053fc <ferror@plt+0x262c>  // b.any
  4053e0:	ldr	x4, [x1, #8]
  4053e4:	ldrb	w2, [x4, #48]
  4053e8:	tbz	w2, #3, 4053fc <ferror@plt+0x262c>
  4053ec:	str	x4, [x3, w0, uxtw #3]
  4053f0:	add	w0, w0, #0x1
  4053f4:	and	w2, w2, #0xfffffff7
  4053f8:	strb	w2, [x4, #48]
  4053fc:	ldr	x1, [x1, #40]
  405400:	b	4053c0 <ferror@plt+0x25f0>
  405404:	stp	x29, x30, [sp, #-32]!
  405408:	mov	x2, x0
  40540c:	cmp	x0, #0x3e7
  405410:	mov	x29, sp
  405414:	str	x19, [sp, #16]
  405418:	adrp	x19, 495000 <_obstack_memory_used@@Base+0x505fc>
  40541c:	add	x19, x19, #0x5d8
  405420:	b.le	40542c <ferror@plt+0x265c>
  405424:	ldr	w0, [x19, #56]
  405428:	cbnz	w0, 40544c <ferror@plt+0x267c>
  40542c:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  405430:	add	x0, x19, #0x3c
  405434:	add	x1, x1, #0x1a9
  405438:	bl	4027a0 <sprintf@plt>
  40543c:	add	x0, x19, #0x3c
  405440:	ldr	x19, [sp, #16]
  405444:	ldp	x29, x30, [sp], #32
  405448:	ret
  40544c:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  405450:	add	x1, x1, #0x1ad
  405454:	mov	x0, #0x1                   	// #1
  405458:	mov	w3, #0x0                   	// #0
  40545c:	mov	x7, #0x3e8                 	// #1000
  405460:	mov	w5, w3
  405464:	add	w3, w3, #0x1
  405468:	ldrb	w4, [x1, w3, uxtw]
  40546c:	cbz	w4, 405480 <ferror@plt+0x26b0>
  405470:	mul	x4, x0, x7
  405474:	add	x6, x2, x0, asr #1
  405478:	cmp	x6, x4
  40547c:	b.ge	4054a8 <ferror@plt+0x26d8>  // b.tcont
  405480:	scvtf	s1, x0
  405484:	scvtf	s0, x2
  405488:	ldrb	w2, [x1, w5, uxtw]
  40548c:	add	x0, x19, #0x3c
  405490:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  405494:	add	x1, x1, #0x1b7
  405498:	fdiv	s0, s0, s1
  40549c:	fcvt	d0, s0
  4054a0:	bl	4027a0 <sprintf@plt>
  4054a4:	b	40543c <ferror@plt+0x266c>
  4054a8:	mov	x0, x4
  4054ac:	b	405460 <ferror@plt+0x2690>
  4054b0:	tbnz	w2, #31, 405534 <ferror@plt+0x2764>
  4054b4:	stp	x29, x30, [sp, #-32]!
  4054b8:	mov	x29, sp
  4054bc:	str	x19, [sp, #16]
  4054c0:	cbz	x1, 40552c <ferror@plt+0x275c>
  4054c4:	scvtf	s0, x0
  4054c8:	mov	w0, #0x42c80000            	// #1120403456
  4054cc:	fmov	s1, w0
  4054d0:	fmul	s0, s0, s1
  4054d4:	scvtf	s1, x1
  4054d8:	fdiv	s0, s0, s1
  4054dc:	fcmpe	s0, #0.0
  4054e0:	b.le	4054fc <ferror@plt+0x272c>
  4054e4:	fmov	s1, #5.000000000000000000e-01
  4054e8:	fcmpe	s0, s1
  4054ec:	b.pl	4054fc <ferror@plt+0x272c>  // b.nfrst
  4054f0:	cmp	w2, #0x0
  4054f4:	fmov	s1, #1.000000000000000000e+00
  4054f8:	fcsel	s0, s0, s1, ne  // ne = any
  4054fc:	fcvt	d0, s0
  405500:	adrp	x19, 495000 <_obstack_memory_used@@Base+0x505fc>
  405504:	add	x19, x19, #0x5d8
  405508:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  40550c:	add	x19, x19, #0x7c
  405510:	add	x1, x1, #0x1be
  405514:	mov	x0, x19
  405518:	bl	4027a0 <sprintf@plt>
  40551c:	mov	x0, x19
  405520:	ldr	x19, [sp, #16]
  405524:	ldp	x29, x30, [sp], #32
  405528:	ret
  40552c:	movi	v0.2s, #0x0
  405530:	b	4054fc <ferror@plt+0x272c>
  405534:	b	405404 <ferror@plt+0x2634>
  405538:	stp	x29, x30, [sp, #-48]!
  40553c:	mov	x29, sp
  405540:	stp	x19, x20, [sp, #16]
  405544:	mov	w20, w1
  405548:	ldrb	w1, [x2, #32]
  40554c:	stp	x21, x22, [sp, #32]
  405550:	mov	x19, x2
  405554:	mov	x21, x0
  405558:	tbz	w1, #5, 4055b0 <ferror@plt+0x27e0>
  40555c:	ldr	x1, [x2]
  405560:	ldr	x1, [x1, #40]
  405564:	cbz	x1, 40559c <ferror@plt+0x27cc>
  405568:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  40556c:	ldr	w2, [x0, #1640]
  405570:	ldr	x0, [x19, #16]
  405574:	neg	w2, w2
  405578:	sub	x0, x1, x0
  40557c:	bl	4054b0 <ferror@plt+0x26e0>
  405580:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  405584:	mov	x3, x0
  405588:	mov	w2, w20
  40558c:	add	x1, x1, #0x1dd
  405590:	mov	x0, x21
  405594:	bl	40cc8c <ferror@plt+0x9ebc>
  405598:	b	405640 <ferror@plt+0x2870>
  40559c:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4055a0:	mov	w2, w20
  4055a4:	add	x1, x1, #0x1f5
  4055a8:	bl	40cc8c <ferror@plt+0x9ebc>
  4055ac:	b	405640 <ferror@plt+0x2870>
  4055b0:	adrp	x22, 495000 <_obstack_memory_used@@Base+0x505fc>
  4055b4:	add	x22, x22, #0x5d8
  4055b8:	tbnz	w1, #7, 405678 <ferror@plt+0x28a8>
  4055bc:	ldr	x1, [x2]
  4055c0:	ldr	x1, [x1, #40]
  4055c4:	cbz	x1, 405664 <ferror@plt+0x2894>
  4055c8:	ldr	x0, [x19, #16]
  4055cc:	ldr	w2, [x22, #144]
  4055d0:	neg	w2, w2
  4055d4:	bl	4054b0 <ferror@plt+0x26e0>
  4055d8:	ldrb	w1, [x19, #32]
  4055dc:	mov	x3, x0
  4055e0:	tbnz	w1, #3, 405658 <ferror@plt+0x2888>
  4055e4:	tst	x1, #0x10
  4055e8:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x195fc>
  4055ec:	adrp	x4, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4055f0:	add	x0, x0, #0xaff
  4055f4:	add	x4, x4, #0x1d4
  4055f8:	csel	x4, x4, x0, ne  // ne = any
  4055fc:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  405600:	mov	w2, w20
  405604:	add	x1, x1, #0x210
  405608:	mov	x0, x21
  40560c:	bl	40cc8c <ferror@plt+0x9ebc>
  405610:	ldr	w0, [x22, #148]
  405614:	cbz	w0, 405630 <ferror@plt+0x2860>
  405618:	ldr	x0, [x19, #8]
  40561c:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  405620:	add	x1, x1, #0x240
  405624:	ldr	w2, [x0, #32]
  405628:	mov	x0, x21
  40562c:	bl	40cc8c <ferror@plt+0x9ebc>
  405630:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x195fc>
  405634:	mov	x0, x21
  405638:	add	x1, x1, #0xafe
  40563c:	bl	40cc8c <ferror@plt+0x9ebc>
  405640:	mov	w2, #0x1                   	// #1
  405644:	mov	w0, w2
  405648:	ldp	x19, x20, [sp, #16]
  40564c:	ldp	x21, x22, [sp, #32]
  405650:	ldp	x29, x30, [sp], #48
  405654:	ret
  405658:	adrp	x4, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  40565c:	add	x4, x4, #0x1c5
  405660:	b	4055fc <ferror@plt+0x282c>
  405664:	mov	w2, w20
  405668:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  40566c:	add	x1, x1, #0x226
  405670:	bl	40cc8c <ferror@plt+0x9ebc>
  405674:	b	405610 <ferror@plt+0x2840>
  405678:	ldr	w2, [x22, #152]
  40567c:	cbz	w2, 405644 <ferror@plt+0x2874>
  405680:	ldr	x1, [x19, #8]
  405684:	ldrb	w1, [x1, #48]
  405688:	tbnz	w1, #5, 4056cc <ferror@plt+0x28fc>
  40568c:	ldr	x1, [x19]
  405690:	ldr	x1, [x1, #40]
  405694:	cbz	x1, 4056bc <ferror@plt+0x28ec>
  405698:	ldr	x0, [x19, #16]
  40569c:	ldr	w2, [x22, #144]
  4056a0:	neg	w2, w2
  4056a4:	bl	4054b0 <ferror@plt+0x26e0>
  4056a8:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4056ac:	mov	x3, x0
  4056b0:	mov	w2, w20
  4056b4:	add	x1, x1, #0x249
  4056b8:	b	405590 <ferror@plt+0x27c0>
  4056bc:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4056c0:	mov	w2, w20
  4056c4:	add	x1, x1, #0x265
  4056c8:	b	4055a8 <ferror@plt+0x27d8>
  4056cc:	mov	w2, #0x0                   	// #0
  4056d0:	b	405644 <ferror@plt+0x2874>
  4056d4:	stp	x29, x30, [sp, #-32]!
  4056d8:	mov	x29, sp
  4056dc:	stp	x19, x20, [sp, #16]
  4056e0:	adrp	x20, 495000 <_obstack_memory_used@@Base+0x505fc>
  4056e4:	add	x19, x20, #0x5d8
  4056e8:	ldr	w2, [x19, #28]
  4056ec:	cmp	w2, #0x0
  4056f0:	b.gt	40570c <ferror@plt+0x293c>
  4056f4:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4056f8:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4056fc:	add	x2, x2, #0x287
  405700:	add	x0, x0, #0x291
  405704:	mov	w1, #0x271                 	// #625
  405708:	bl	402de0 <ferror@plt+0x10>
  40570c:	add	w1, w0, w1
  405710:	ldr	w0, [x19, #8]
  405714:	ldr	w2, [x19, #16]
  405718:	sub	w0, w1, w0
  40571c:	cmp	w0, w2
  405720:	b.hi	405734 <ferror@plt+0x2964>  // b.pmore
  405724:	str	w0, [x19, #12]
  405728:	ldp	x19, x20, [sp, #16]
  40572c:	ldp	x29, x30, [sp], #32
  405730:	ret
  405734:	ldr	x0, [x20, #1496]
  405738:	lsl	w1, w1, #2
  40573c:	mov	w2, #0x0                   	// #0
  405740:	stur	xzr, [x19, #12]
  405744:	bl	402a40 <fseek@plt>
  405748:	ldr	x0, [x20, #1496]
  40574c:	bl	402790 <ftell@plt>
  405750:	asr	x0, x0, #2
  405754:	str	w0, [x19, #8]
  405758:	b	405728 <ferror@plt+0x2958>
  40575c:	stp	x29, x30, [sp, #-32]!
  405760:	mov	x29, sp
  405764:	stp	x19, x20, [sp, #16]
  405768:	mov	w19, w0
  40576c:	mov	w0, w1
  405770:	adrp	x1, 495000 <_obstack_memory_used@@Base+0x505fc>
  405774:	ldr	x20, [x1, #1464]
  405778:	cbz	w19, 4057a8 <ferror@plt+0x29d8>
  40577c:	mov	w1, w19
  405780:	mov	w2, #0x2                   	// #2
  405784:	bl	4054b0 <ferror@plt+0x26e0>
  405788:	mov	x2, x0
  40578c:	mov	w3, w19
  405790:	mov	x0, x20
  405794:	ldp	x19, x20, [sp, #16]
  405798:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  40579c:	ldp	x29, x30, [sp], #32
  4057a0:	add	x1, x1, #0x2a5
  4057a4:	b	40cc8c <ferror@plt+0x9ebc>
  4057a8:	mov	x0, x20
  4057ac:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4057b0:	ldp	x19, x20, [sp, #16]
  4057b4:	add	x1, x1, #0x2be
  4057b8:	ldp	x29, x30, [sp], #32
  4057bc:	b	40cc8c <ferror@plt+0x9ebc>
  4057c0:	stp	x29, x30, [sp, #-16]!
  4057c4:	mov	x29, sp
  4057c8:	cbnz	w2, 4057e4 <ferror@plt+0x2a14>
  4057cc:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4057d0:	add	x2, x2, #0x2d3
  4057d4:	mov	w1, #0xb85                 	// #2949
  4057d8:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4057dc:	add	x0, x0, #0x2e5
  4057e0:	bl	402de0 <ferror@plt+0x10>
  4057e4:	ldp	x3, x1, [x1]
  4057e8:	sub	x1, x1, x3
  4057ec:	asr	x1, x1, #3
  4057f0:	cmp	x1, w2, uxtw
  4057f4:	b.cs	405808 <ferror@plt+0x2a38>  // b.hs, b.nlast
  4057f8:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4057fc:	mov	w1, #0xb86                 	// #2950
  405800:	add	x2, x2, #0x2d3
  405804:	b	4057d8 <ferror@plt+0x2a08>
  405808:	sub	w2, w2, #0x1
  40580c:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  405810:	ldp	x29, x30, [sp], #16
  405814:	add	x1, x1, #0x58e
  405818:	ldr	x2, [x3, x2, lsl #3]
  40581c:	b	402d90 <fprintf@plt>
  405820:	mov	x16, x0
  405824:	ldr	x0, [x1]
  405828:	br	x16
  40582c:	cbz	x0, 405834 <ferror@plt+0x2a64>
  405830:	b	445770 <_obstack_memory_used@@Base+0xd6c>
  405834:	ret
  405838:	cbz	x0, 405840 <ferror@plt+0x2a70>
  40583c:	b	445770 <_obstack_memory_used@@Base+0xd6c>
  405840:	ret
  405844:	cbz	x0, 40584c <ferror@plt+0x2a7c>
  405848:	b	445770 <_obstack_memory_used@@Base+0xd6c>
  40584c:	ret
  405850:	cbz	x0, 405858 <ferror@plt+0x2a88>
  405854:	b	445770 <_obstack_memory_used@@Base+0xd6c>
  405858:	ret
  40585c:	stp	x29, x30, [sp, #-64]!
  405860:	mov	x29, sp
  405864:	stp	x19, x20, [sp, #16]
  405868:	mov	x19, x0
  40586c:	add	x0, x0, #0x10
  405870:	str	x0, [x19]
  405874:	str	x21, [sp, #32]
  405878:	cbz	x1, 4058e4 <ferror@plt+0x2b14>
  40587c:	mov	x20, x1
  405880:	mov	x0, x1
  405884:	bl	402700 <strlen@plt>
  405888:	str	x0, [sp, #56]
  40588c:	add	x21, x20, x0
  405890:	cmp	x0, #0xf
  405894:	b.ls	4058b4 <ferror@plt+0x2ae4>  // b.plast
  405898:	add	x1, sp, #0x38
  40589c:	mov	x0, x19
  4058a0:	mov	x2, #0x0                   	// #0
  4058a4:	bl	446ac0 <_obstack_memory_used@@Base+0x20bc>
  4058a8:	str	x0, [x19]
  4058ac:	ldr	x0, [sp, #56]
  4058b0:	str	x0, [x19, #16]
  4058b4:	ldr	x0, [x19]
  4058b8:	mov	x2, x21
  4058bc:	mov	x1, x20
  4058c0:	bl	446d88 <_obstack_memory_used@@Base+0x2384>
  4058c4:	ldr	x1, [x19]
  4058c8:	ldr	x0, [sp, #56]
  4058cc:	str	x0, [x19, #8]
  4058d0:	strb	wzr, [x1, x0]
  4058d4:	ldp	x19, x20, [sp, #16]
  4058d8:	ldr	x21, [sp, #32]
  4058dc:	ldp	x29, x30, [sp], #64
  4058e0:	ret
  4058e4:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4058e8:	add	x0, x0, #0x2f6
  4058ec:	bl	402edc <ferror@plt+0x10c>
  4058f0:	stp	x29, x30, [sp, #-160]!
  4058f4:	tst	w1, #0xff
  4058f8:	mov	x29, sp
  4058fc:	stp	x19, x20, [sp, #16]
  405900:	adrp	x20, 495000 <_obstack_memory_used@@Base+0x505fc>
  405904:	mov	x19, x4
  405908:	stp	x21, x22, [sp, #32]
  40590c:	mov	x21, x0
  405910:	add	x0, sp, #0x70
  405914:	stp	x23, x24, [sp, #48]
  405918:	add	x20, x20, #0x5d8
  40591c:	ldr	w22, [sp, #160]
  405920:	str	x25, [sp, #64]
  405924:	mov	w23, w5
  405928:	stp	x0, xzr, [sp, #96]
  40592c:	strb	wzr, [sp, #112]
  405930:	b.eq	405ab8 <ferror@plt+0x2ce8>  // b.none
  405934:	cmp	x4, #0x0
  405938:	b.le	4059ac <ferror@plt+0x2bdc>
  40593c:	and	w25, w3, #0xff
  405940:	mov	x0, x4
  405944:	bl	405404 <ferror@plt+0x2634>
  405948:	mov	x1, x0
  40594c:	add	x0, sp, #0x60
  405950:	bl	447ff8 <_obstack_memory_used@@Base+0x35f4>
  405954:	cbz	w25, 405994 <ferror@plt+0x2bc4>
  405958:	ldr	w0, [x20, #156]
  40595c:	cbz	w0, 405994 <ferror@plt+0x2bc4>
  405960:	ldr	w0, [x20, #160]
  405964:	cbz	w0, 4059a0 <ferror@plt+0x2bd0>
  405968:	add	x0, sp, #0x60
  40596c:	bl	404eb4 <ferror@plt+0x20e4>
  405970:	mov	x1, #0x0                   	// #0
  405974:	add	x0, sp, #0x60
  405978:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  40597c:	add	x2, x2, #0x320
  405980:	bl	448188 <_obstack_memory_used@@Base+0x3784>
  405984:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  405988:	add	x1, x1, #0x32c
  40598c:	add	x0, sp, #0x60
  405990:	bl	4487c8 <_obstack_memory_used@@Base+0x3dc4>
  405994:	add	x0, sp, #0x60
  405998:	bl	404eb4 <ferror@plt+0x20e4>
  40599c:	b	4059f8 <ferror@plt+0x2c28>
  4059a0:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x255fc>
  4059a4:	add	x1, x1, #0xa10
  4059a8:	b	40598c <ferror@plt+0x2bbc>
  4059ac:	ldr	w0, [x20, #160]
  4059b0:	and	w24, w2, #0xff
  4059b4:	cbz	w0, 405aa4 <ferror@plt+0x2cd4>
  4059b8:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  4059bc:	add	x1, x1, #0x6c3
  4059c0:	add	x0, sp, #0x60
  4059c4:	bl	447ff8 <_obstack_memory_used@@Base+0x35f4>
  4059c8:	add	x0, sp, #0x60
  4059cc:	bl	404eb4 <ferror@plt+0x20e4>
  4059d0:	cbz	w24, 405a98 <ferror@plt+0x2cc8>
  4059d4:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4059d8:	add	x2, x2, #0x333
  4059dc:	mov	x1, #0x0                   	// #0
  4059e0:	add	x0, sp, #0x60
  4059e4:	bl	448188 <_obstack_memory_used@@Base+0x3784>
  4059e8:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4059ec:	add	x0, sp, #0x60
  4059f0:	add	x1, x1, #0x32c
  4059f4:	bl	4487c8 <_obstack_memory_used@@Base+0x3dc4>
  4059f8:	mov	w2, w23
  4059fc:	add	x0, sp, #0x50
  405a00:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  405a04:	add	x1, x1, #0x5f8
  405a08:	bl	4027a0 <sprintf@plt>
  405a0c:	add	x0, sp, #0x80
  405a10:	add	x1, sp, #0x50
  405a14:	bl	40585c <ferror@plt+0x2a8c>
  405a18:	ldr	w0, [x20, #164]
  405a1c:	cbz	w0, 405a58 <ferror@plt+0x2c88>
  405a20:	cbz	w22, 405a58 <ferror@plt+0x2c88>
  405a24:	lsl	x1, x19, #1
  405a28:	mov	w0, w22
  405a2c:	cmp	x1, w22, uxtw
  405a30:	b.le	405ac4 <ferror@plt+0x2cf4>
  405a34:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  405a38:	add	x2, x2, #0x34b
  405a3c:	add	x0, sp, #0x80
  405a40:	mov	x1, #0x0                   	// #0
  405a44:	bl	448188 <_obstack_memory_used@@Base+0x3784>
  405a48:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  405a4c:	add	x0, sp, #0x80
  405a50:	add	x1, x1, #0x32c
  405a54:	bl	4487c8 <_obstack_memory_used@@Base+0x3dc4>
  405a58:	ldr	x2, [sp, #96]
  405a5c:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  405a60:	ldr	x3, [sp, #128]
  405a64:	add	x1, x1, #0x45f
  405a68:	mov	x0, x21
  405a6c:	bl	402d90 <fprintf@plt>
  405a70:	add	x0, sp, #0x80
  405a74:	bl	446b20 <_obstack_memory_used@@Base+0x211c>
  405a78:	add	x0, sp, #0x60
  405a7c:	bl	446b20 <_obstack_memory_used@@Base+0x211c>
  405a80:	ldp	x19, x20, [sp, #16]
  405a84:	ldp	x21, x22, [sp, #32]
  405a88:	ldp	x23, x24, [sp, #48]
  405a8c:	ldr	x25, [sp, #64]
  405a90:	ldp	x29, x30, [sp], #160
  405a94:	ret
  405a98:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  405a9c:	add	x2, x2, #0x33f
  405aa0:	b	4059dc <ferror@plt+0x2c0c>
  405aa4:	cmp	w24, #0x0
  405aa8:	csel	x1, x7, x6, ne  // ne = any
  405aac:	add	x0, sp, #0x60
  405ab0:	bl	447ff8 <_obstack_memory_used@@Base+0x35f4>
  405ab4:	b	405994 <ferror@plt+0x2bc4>
  405ab8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x235fc>
  405abc:	add	x1, x1, #0x6a
  405ac0:	b	405aac <ferror@plt+0x2cdc>
  405ac4:	add	x1, x19, x19, lsl #2
  405ac8:	cmp	x0, x1
  405acc:	b.ge	405adc <ferror@plt+0x2d0c>  // b.tcont
  405ad0:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  405ad4:	add	x2, x2, #0x354
  405ad8:	b	405a3c <ferror@plt+0x2c6c>
  405adc:	mov	x4, #0xa                   	// #10
  405ae0:	mul	x19, x19, x4
  405ae4:	cmp	x0, x19
  405ae8:	b.ge	405a48 <ferror@plt+0x2c78>  // b.tcont
  405aec:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  405af0:	add	x2, x2, #0x35d
  405af4:	b	405a3c <ferror@plt+0x2c6c>
  405af8:	ldr	x2, [x0]
  405afc:	ldr	x0, [x1]
  405b00:	ldr	w3, [x2, #88]
  405b04:	ldr	w1, [x0, #88]
  405b08:	cmp	w3, w1
  405b0c:	b.ne	405b1c <ferror@plt+0x2d4c>  // b.any
  405b10:	ldr	w0, [x0, #92]
  405b14:	ldr	w1, [x2, #92]
  405b18:	cmp	w1, w0
  405b1c:	cset	w0, cc  // cc = lo, ul, last
  405b20:	ret
  405b24:	stp	x29, x30, [sp, #-32]!
  405b28:	tst	w0, #0xff
  405b2c:	mov	x29, sp
  405b30:	str	x19, [sp, #16]
  405b34:	mov	x19, x1
  405b38:	b.ne	405b6c <ferror@plt+0x2d9c>  // b.any
  405b3c:	mov	x0, x19
  405b40:	mov	x1, #0x10                  	// #16
  405b44:	bl	4452a0 <_obstack_memory_used@@Base+0x89c>
  405b48:	add	x3, x0, #0x4
  405b4c:	mov	x1, #0x0                   	// #0
  405b50:	mov	w4, #0xfffffffd            	// #-3
  405b54:	cmp	x19, x1
  405b58:	b.eq	405b9c <ferror@plt+0x2dcc>  // b.none
  405b5c:	lsl	x2, x1, #4
  405b60:	add	x1, x1, #0x1
  405b64:	str	w4, [x3, x2]
  405b68:	b	405b54 <ferror@plt+0x2d84>
  405b6c:	lsl	x0, x19, #4
  405b70:	mov	x3, #0x0                   	// #0
  405b74:	mov	x2, #0x0                   	// #0
  405b78:	mov	x1, #0x0                   	// #0
  405b7c:	bl	40c0a8 <ferror@plt+0x92d8>
  405b80:	cbnz	x0, 405b48 <ferror@plt+0x2d78>
  405b84:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  405b88:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  405b8c:	add	x2, x2, #0x366
  405b90:	add	x0, x0, #0x374
  405b94:	mov	w1, #0x2b5                 	// #693
  405b98:	bl	402de0 <ferror@plt+0x10>
  405b9c:	ldr	x19, [sp, #16]
  405ba0:	ldp	x29, x30, [sp], #32
  405ba4:	ret
  405ba8:	stp	x29, x30, [sp, #-16]!
  405bac:	mov	x29, sp
  405bb0:	ldr	x0, [x0]
  405bb4:	ldr	x1, [x1]
  405bb8:	bl	402ad0 <strcmp@plt>
  405bbc:	lsr	w0, w0, #31
  405bc0:	ldp	x29, x30, [sp], #16
  405bc4:	ret
  405bc8:	mov	x1, #0x7ffffffffffffff     	// #576460752303423487
  405bcc:	cmp	x0, x1
  405bd0:	b.ls	405be0 <ferror@plt+0x2e10>  // b.plast
  405bd4:	stp	x29, x30, [sp, #-16]!
  405bd8:	mov	x29, sp
  405bdc:	bl	402e40 <ferror@plt+0x70>
  405be0:	lsl	x0, x0, #4
  405be4:	b	4459b8 <_obstack_memory_used@@Base+0xfb4>
  405be8:	mov	x1, #0xfffffffffffffff     	// #1152921504606846975
  405bec:	cmp	x0, x1
  405bf0:	b.ls	405c00 <ferror@plt+0x2e30>  // b.plast
  405bf4:	stp	x29, x30, [sp, #-16]!
  405bf8:	mov	x29, sp
  405bfc:	bl	402e40 <ferror@plt+0x70>
  405c00:	lsl	x0, x0, #3
  405c04:	b	4459b8 <_obstack_memory_used@@Base+0xfb4>
  405c08:	stp	x29, x30, [sp, #-32]!
  405c0c:	mov	x3, x2
  405c10:	mov	x29, sp
  405c14:	str	x19, [sp, #16]
  405c18:	sub	x19, x1, x0
  405c1c:	cmp	x19, #0x0
  405c20:	b.le	405c38 <ferror@plt+0x2e68>
  405c24:	mov	x1, x0
  405c28:	mov	x2, x19
  405c2c:	mov	x0, x3
  405c30:	bl	4026b0 <memmove@plt>
  405c34:	mov	x3, x0
  405c38:	add	x0, x3, x19
  405c3c:	ldr	x19, [sp, #16]
  405c40:	ldp	x29, x30, [sp], #32
  405c44:	ret
  405c48:	sub	sp, sp, #0x70
  405c4c:	stp	x29, x30, [sp, #16]
  405c50:	add	x29, sp, #0x10
  405c54:	stp	x21, x22, [sp, #48]
  405c58:	adrp	x21, 495000 <_obstack_memory_used@@Base+0x505fc>
  405c5c:	add	x21, x21, #0x5d8
  405c60:	stp	x19, x20, [sp, #32]
  405c64:	mov	x19, x0
  405c68:	mov	x20, x1
  405c6c:	ldr	w22, [x21, #168]
  405c70:	stp	x23, x24, [sp, #64]
  405c74:	stp	x25, x26, [sp, #80]
  405c78:	stp	x27, x28, [sp, #96]
  405c7c:	cbz	w22, 405d64 <ferror@plt+0x2f94>
  405c80:	ldr	x22, [x1, #32]
  405c84:	adrp	x26, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  405c88:	adrp	x27, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  405c8c:	mov	w25, w2
  405c90:	add	x26, x26, #0x38b
  405c94:	add	x27, x27, #0x391
  405c98:	mov	w24, #0x0                   	// #0
  405c9c:	mov	w28, #0x0                   	// #0
  405ca0:	ldr	x0, [x20, #40]
  405ca4:	cmp	x0, x22
  405ca8:	b.eq	405d94 <ferror@plt+0x2fc4>  // b.none
  405cac:	ldr	x0, [x22]
  405cb0:	ldrb	w2, [x0, #48]
  405cb4:	tbnz	w2, #5, 405d2c <ferror@plt+0x2f5c>
  405cb8:	ldrb	w1, [x20, #56]
  405cbc:	mov	x7, x26
  405cc0:	str	wzr, [sp]
  405cc4:	mov	x6, x27
  405cc8:	mov	w5, w25
  405ccc:	ubfx	x2, x2, #3, #1
  405cd0:	ldr	x4, [x0, #40]
  405cd4:	and	w1, w1, #0x1
  405cd8:	mov	x0, x19
  405cdc:	mov	w3, #0x0                   	// #0
  405ce0:	add	w23, w28, #0x1
  405ce4:	bl	4058f0 <ferror@plt+0x2b20>
  405ce8:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  405cec:	mov	w2, w28
  405cf0:	add	x1, x0, #0x397
  405cf4:	mov	x0, x19
  405cf8:	bl	402d90 <fprintf@plt>
  405cfc:	ldr	w0, [x21, #148]
  405d00:	cbz	w0, 405d1c <ferror@plt+0x2f4c>
  405d04:	ldr	x0, [x22]
  405d08:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  405d0c:	add	x1, x1, #0x3a2
  405d10:	ldr	w2, [x0, #32]
  405d14:	mov	x0, x19
  405d18:	bl	402d90 <fprintf@plt>
  405d1c:	mov	w28, w23
  405d20:	mov	x1, x19
  405d24:	mov	w0, #0xa                   	// #10
  405d28:	bl	4027d0 <fputc@plt>
  405d2c:	ldr	w0, [x21, #172]
  405d30:	cbz	w0, 405d5c <ferror@plt+0x2f8c>
  405d34:	ldr	x0, [x22]
  405d38:	ldr	x23, [x0]
  405d3c:	cbz	x23, 405d5c <ferror@plt+0x2f8c>
  405d40:	mov	x2, x23
  405d44:	mov	w1, w24
  405d48:	mov	x0, x19
  405d4c:	bl	405538 <ferror@plt+0x2768>
  405d50:	add	w24, w24, w0
  405d54:	ldr	x23, [x23, #40]
  405d58:	b	405d3c <ferror@plt+0x2f6c>
  405d5c:	add	x22, x22, #0x8
  405d60:	b	405ca0 <ferror@plt+0x2ed0>
  405d64:	ldr	w0, [x21, #172]
  405d68:	cbz	w0, 405d94 <ferror@plt+0x2fc4>
  405d6c:	ldr	x21, [x1, #8]
  405d70:	ldr	x0, [x20, #16]
  405d74:	cmp	x0, x21
  405d78:	b.eq	405d94 <ferror@plt+0x2fc4>  // b.none
  405d7c:	ldr	x2, [x21], #8
  405d80:	mov	w1, w22
  405d84:	mov	x0, x19
  405d88:	bl	405538 <ferror@plt+0x2768>
  405d8c:	add	w22, w22, w0
  405d90:	b	405d70 <ferror@plt+0x2fa0>
  405d94:	ldp	x29, x30, [sp, #16]
  405d98:	ldp	x19, x20, [sp, #32]
  405d9c:	ldp	x21, x22, [sp, #48]
  405da0:	ldp	x23, x24, [sp, #64]
  405da4:	ldp	x25, x26, [sp, #80]
  405da8:	ldp	x27, x28, [sp, #96]
  405dac:	add	sp, sp, #0x70
  405db0:	ret
  405db4:	stp	x29, x30, [sp, #-32]!
  405db8:	mov	x3, x2
  405dbc:	mov	x29, sp
  405dc0:	str	x19, [sp, #16]
  405dc4:	sub	x19, x1, x0
  405dc8:	cmp	x19, #0x0
  405dcc:	b.le	405de4 <ferror@plt+0x3014>
  405dd0:	mov	x1, x0
  405dd4:	mov	x2, x19
  405dd8:	mov	x0, x3
  405ddc:	bl	4026b0 <memmove@plt>
  405de0:	mov	x3, x0
  405de4:	add	x0, x3, x19
  405de8:	ldr	x19, [sp, #16]
  405dec:	ldp	x29, x30, [sp], #32
  405df0:	ret
  405df4:	stp	x29, x30, [sp, #-80]!
  405df8:	mov	x29, sp
  405dfc:	stp	x19, x20, [sp, #16]
  405e00:	mov	x19, x0
  405e04:	str	x21, [sp, #32]
  405e08:	strh	wzr, [sp, #50]
  405e0c:	stp	xzr, xzr, [sp, #56]
  405e10:	bl	402850 <getpid@plt>
  405e14:	str	w0, [sp, #72]
  405e18:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  405e1c:	ldr	x1, [x0, #1496]
  405e20:	cbz	x1, 405e3c <ferror@plt+0x306c>
  405e24:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  405e28:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  405e2c:	add	x2, x2, #0x3ab
  405e30:	add	x0, x0, #0x291
  405e34:	mov	w1, #0x8e                  	// #142
  405e38:	bl	402de0 <ferror@plt+0x10>
  405e3c:	add	x20, x0, #0x5d8
  405e40:	mov	x21, x0
  405e44:	mov	x0, #0xffffffff00000000    	// #-4294967296
  405e48:	mov	w2, #0x180                 	// #384
  405e4c:	mov	w1, #0x0                   	// #0
  405e50:	strh	wzr, [sp, #48]
  405e54:	stp	xzr, x0, [x20, #8]
  405e58:	mov	x0, x19
  405e5c:	str	wzr, [x20, #24]
  405e60:	str	wzr, [x20, #32]
  405e64:	bl	4028a0 <open@plt>
  405e68:	mov	w19, w0
  405e6c:	tbnz	w0, #31, 405eb4 <ferror@plt+0x30e4>
  405e70:	add	x2, sp, #0x30
  405e74:	mov	w0, w19
  405e78:	mov	w1, #0x7                   	// #7
  405e7c:	bl	402b90 <fcntl@plt>
  405e80:	cbz	w0, 405e94 <ferror@plt+0x30c4>
  405e84:	bl	402cf0 <__errno_location@plt>
  405e88:	ldr	w0, [x0]
  405e8c:	cmp	w0, #0x4
  405e90:	b.eq	405e70 <ferror@plt+0x30a0>  // b.none
  405e94:	mov	w0, w19
  405e98:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  405e9c:	add	x1, x1, #0x3b5
  405ea0:	bl	4437cc <ferror@plt+0x409fc>
  405ea4:	str	x0, [x21, #1496]
  405ea8:	cbnz	x0, 405ebc <ferror@plt+0x30ec>
  405eac:	mov	w0, w19
  405eb0:	bl	402a00 <close@plt>
  405eb4:	mov	w0, #0x0                   	// #0
  405eb8:	b	405ed0 <ferror@plt+0x3100>
  405ebc:	mov	w19, #0x1                   	// #1
  405ec0:	mov	x1, #0x0                   	// #0
  405ec4:	str	w19, [x20, #28]
  405ec8:	bl	402770 <setbuf@plt>
  405ecc:	mov	w0, w19
  405ed0:	ldp	x19, x20, [sp, #16]
  405ed4:	ldr	x21, [sp, #32]
  405ed8:	ldp	x29, x30, [sp], #80
  405edc:	ret
  405ee0:	ldr	x1, [x0]
  405ee4:	ldur	x2, [x0, #-8]
  405ee8:	ldr	w4, [x1, #88]
  405eec:	ldr	w3, [x2, #88]
  405ef0:	cmp	w4, w3
  405ef4:	b.ne	405f04 <ferror@plt+0x3134>  // b.any
  405ef8:	ldr	w4, [x1, #92]
  405efc:	ldr	w3, [x2, #92]
  405f00:	cmp	w4, w3
  405f04:	cset	w3, cc  // cc = lo, ul, last
  405f08:	cbz	w3, 405f14 <ferror@plt+0x3144>
  405f0c:	str	x2, [x0], #-8
  405f10:	b	405ee4 <ferror@plt+0x3114>
  405f14:	str	x1, [x0]
  405f18:	ret
  405f1c:	stp	x29, x30, [sp, #-80]!
  405f20:	mov	x29, sp
  405f24:	stp	x21, x22, [sp, #32]
  405f28:	ldp	x21, x22, [x0]
  405f2c:	stp	x19, x20, [sp, #16]
  405f30:	mov	x19, x0
  405f34:	str	x23, [sp, #48]
  405f38:	mov	x23, x21
  405f3c:	mov	x20, x19
  405f40:	mov	x0, x23
  405f44:	ldr	x1, [x19, #-16]!
  405f48:	bl	402ad0 <strcmp@plt>
  405f4c:	tbz	w0, #31, 405f68 <ferror@plt+0x3198>
  405f50:	mov	x0, x19
  405f54:	ldr	x1, [x0], #16
  405f58:	str	x1, [x19, #16]
  405f5c:	ldr	w1, [x19, #8]
  405f60:	str	w1, [x0, #8]
  405f64:	b	405f3c <ferror@plt+0x316c>
  405f68:	stp	x21, x22, [sp, #64]
  405f6c:	ldr	x23, [sp, #48]
  405f70:	str	x21, [x20]
  405f74:	ldp	x21, x22, [sp, #32]
  405f78:	ldr	w0, [sp, #72]
  405f7c:	str	w0, [x20, #8]
  405f80:	ldp	x19, x20, [sp, #16]
  405f84:	ldp	x29, x30, [sp], #80
  405f88:	ret
  405f8c:	stp	x29, x30, [sp, #-16]!
  405f90:	mov	w0, #0x1                   	// #1
  405f94:	mov	x29, sp
  405f98:	bl	4051e8 <ferror@plt+0x2418>
  405f9c:	cbz	x0, 405fbc <ferror@plt+0x31ec>
  405fa0:	adrp	x1, 495000 <_obstack_memory_used@@Base+0x505fc>
  405fa4:	ldr	w0, [x0]
  405fa8:	ldr	w1, [x1, #1528]
  405fac:	cbz	w1, 405fb4 <ferror@plt+0x31e4>
  405fb0:	rev	w0, w0
  405fb4:	ldp	x29, x30, [sp], #16
  405fb8:	ret
  405fbc:	mov	w0, #0x0                   	// #0
  405fc0:	b	405fb4 <ferror@plt+0x31e4>
  405fc4:	stp	x29, x30, [sp, #-16]!
  405fc8:	mov	x29, sp
  405fcc:	bl	405f8c <ferror@plt+0x31bc>
  405fd0:	cbz	w0, 405fdc <ferror@plt+0x320c>
  405fd4:	ldp	x29, x30, [sp], #16
  405fd8:	b	4051e8 <ferror@plt+0x2418>
  405fdc:	mov	x0, #0x0                   	// #0
  405fe0:	ldp	x29, x30, [sp], #16
  405fe4:	ret
  405fe8:	stp	x29, x30, [sp, #-80]!
  405fec:	mov	x29, sp
  405ff0:	stp	x19, x20, [sp, #16]
  405ff4:	mov	x19, x0
  405ff8:	stp	x21, x22, [sp, #32]
  405ffc:	stp	x23, x24, [sp, #48]
  406000:	mov	w24, #0x23                  	// #35
  406004:	str	x25, [sp, #64]
  406008:	bl	402700 <strlen@plt>
  40600c:	add	x0, x0, #0x1
  406010:	bl	44526c <_obstack_memory_used@@Base+0x868>
  406014:	mov	x21, x0
  406018:	mov	x3, x0
  40601c:	mov	w25, #0x5e                  	// #94
  406020:	ldrb	w0, [x19]
  406024:	cbz	w0, 406098 <ferror@plt+0x32c8>
  406028:	mov	x20, x19
  40602c:	ldrb	w22, [x20]
  406030:	cbz	w22, 40604c <ferror@plt+0x327c>
  406034:	cmp	w22, #0x2f
  406038:	b.eq	40604c <ferror@plt+0x327c>  // b.none
  40603c:	add	x20, x20, #0x1
  406040:	b	40602c <ferror@plt+0x325c>
  406044:	mov	x19, x20
  406048:	b	406020 <ferror@plt+0x3250>
  40604c:	sub	x23, x20, x19
  406050:	cmp	x23, #0x2
  406054:	b.ne	406080 <ferror@plt+0x32b0>  // b.any
  406058:	cmp	w0, #0x2e
  40605c:	b.ne	406080 <ferror@plt+0x32b0>  // b.any
  406060:	ldrb	w0, [x19, #1]
  406064:	cmp	w0, #0x2e
  406068:	b.ne	406080 <ferror@plt+0x32b0>  // b.any
  40606c:	strb	w25, [x3], #1
  406070:	cbz	w22, 406044 <ferror@plt+0x3274>
  406074:	add	x19, x20, #0x1
  406078:	strb	w24, [x3], #1
  40607c:	b	406020 <ferror@plt+0x3250>
  406080:	mov	x0, x3
  406084:	mov	x2, x23
  406088:	mov	x1, x19
  40608c:	bl	4026a0 <memcpy@plt>
  406090:	add	x3, x0, x23
  406094:	b	406070 <ferror@plt+0x32a0>
  406098:	strb	wzr, [x3]
  40609c:	mov	x0, x21
  4060a0:	ldp	x19, x20, [sp, #16]
  4060a4:	ldp	x21, x22, [sp, #32]
  4060a8:	ldp	x23, x24, [sp, #48]
  4060ac:	ldr	x25, [sp, #64]
  4060b0:	ldp	x29, x30, [sp], #80
  4060b4:	ret
  4060b8:	stp	x29, x30, [sp, #-48]!
  4060bc:	mov	x29, sp
  4060c0:	str	x21, [sp, #32]
  4060c4:	mov	x21, x1
  4060c8:	adrp	x1, 495000 <_obstack_memory_used@@Base+0x505fc>
  4060cc:	stp	x19, x20, [sp, #16]
  4060d0:	ldr	w1, [x1, #1672]
  4060d4:	cbnz	w1, 40610c <ferror@plt+0x333c>
  4060d8:	bl	4446b4 <ferror@plt+0x418e4>
  4060dc:	mov	x19, x0
  4060e0:	bl	402700 <strlen@plt>
  4060e4:	mov	x1, x19
  4060e8:	mov	x20, x0
  4060ec:	mov	x2, x0
  4060f0:	mov	x0, x21
  4060f4:	bl	4026a0 <memcpy@plt>
  4060f8:	add	x0, x21, x20
  4060fc:	ldp	x19, x20, [sp, #16]
  406100:	ldr	x21, [sp, #32]
  406104:	ldp	x29, x30, [sp], #48
  406108:	ret
  40610c:	bl	405fe8 <ferror@plt+0x3218>
  406110:	b	4060dc <ferror@plt+0x330c>
  406114:	ldrb	w1, [x0, #48]
  406118:	stp	xzr, xzr, [x0]
  40611c:	and	w1, w1, #0xffffff80
  406120:	stp	xzr, xzr, [x0, #16]
  406124:	str	wzr, [x0, #32]
  406128:	str	xzr, [x0, #40]
  40612c:	strb	w1, [x0, #48]
  406130:	stp	xzr, xzr, [x0, #56]
  406134:	stp	xzr, xzr, [x0, #72]
  406138:	str	xzr, [x0, #96]
  40613c:	ret
  406140:	mov	x1, x0
  406144:	str	xzr, [x1], #8
  406148:	str	xzr, [x0, #8]
  40614c:	stp	xzr, xzr, [x1, #8]
  406150:	ldrb	w1, [x0, #56]
  406154:	stp	xzr, xzr, [x0, #32]
  406158:	and	w1, w1, #0xfffffff8
  40615c:	str	xzr, [x0, #48]
  406160:	strb	w1, [x0, #56]
  406164:	ret
  406168:	ldp	x2, x3, [x0, #32]
  40616c:	sub	x4, x3, x2
  406170:	asr	x4, x4, #5
  406174:	mov	x0, x2
  406178:	cmp	x4, #0x0
  40617c:	b.le	4061dc <ferror@plt+0x340c>
  406180:	ldr	x2, [x2]
  406184:	cmp	x2, x1
  406188:	b.eq	40619c <ferror@plt+0x33cc>  // b.none
  40618c:	ldr	x2, [x0, #8]
  406190:	cmp	x2, x1
  406194:	b.ne	4061a8 <ferror@plt+0x33d8>  // b.any
  406198:	add	x0, x0, #0x8
  40619c:	cmp	x3, x0
  4061a0:	cset	w0, ne  // ne = any
  4061a4:	ret
  4061a8:	ldr	x2, [x0, #16]
  4061ac:	cmp	x2, x1
  4061b0:	b.ne	4061bc <ferror@plt+0x33ec>  // b.any
  4061b4:	add	x0, x0, #0x10
  4061b8:	b	40619c <ferror@plt+0x33cc>
  4061bc:	ldr	x5, [x0, #24]
  4061c0:	add	x2, x0, #0x20
  4061c4:	cmp	x5, x1
  4061c8:	b.ne	4061d4 <ferror@plt+0x3404>  // b.any
  4061cc:	add	x0, x0, #0x18
  4061d0:	b	40619c <ferror@plt+0x33cc>
  4061d4:	sub	x4, x4, #0x1
  4061d8:	b	406174 <ferror@plt+0x33a4>
  4061dc:	sub	x2, x3, x2
  4061e0:	cmp	x2, #0x10
  4061e4:	b.eq	406210 <ferror@plt+0x3440>  // b.none
  4061e8:	cmp	x2, #0x18
  4061ec:	b.eq	406200 <ferror@plt+0x3430>  // b.none
  4061f0:	cmp	x2, #0x8
  4061f4:	b.eq	406220 <ferror@plt+0x3450>  // b.none
  4061f8:	mov	x0, x3
  4061fc:	b	40619c <ferror@plt+0x33cc>
  406200:	ldr	x2, [x0]
  406204:	cmp	x1, x2
  406208:	b.eq	40619c <ferror@plt+0x33cc>  // b.none
  40620c:	add	x0, x0, #0x8
  406210:	ldr	x2, [x0]
  406214:	cmp	x1, x2
  406218:	b.eq	40619c <ferror@plt+0x33cc>  // b.none
  40621c:	add	x0, x0, #0x8
  406220:	ldr	x2, [x0]
  406224:	cmp	x1, x2
  406228:	csel	x0, x0, x3, eq  // eq = none
  40622c:	b	40619c <ferror@plt+0x33cc>
  406230:	stp	x29, x30, [sp, #-48]!
  406234:	mov	x29, sp
  406238:	stp	x19, x20, [sp, #16]
  40623c:	mov	x20, x1
  406240:	mov	x19, x0
  406244:	ldr	x1, [x1, #32]
  406248:	stp	x21, x22, [sp, #32]
  40624c:	ldr	x22, [x1, #40]
  406250:	ldr	x0, [x1, #112]
  406254:	ldr	x21, [x1, #144]
  406258:	cbz	x0, 406274 <ferror@plt+0x34a4>
  40625c:	ldrb	w1, [x0, #32]
  406260:	tbz	w1, #2, 40626c <ferror@plt+0x349c>
  406264:	ldr	x1, [x0, #16]
  406268:	sub	x21, x21, x1
  40626c:	ldr	x0, [x0, #48]
  406270:	b	406258 <ferror@plt+0x3488>
  406274:	mov	x0, x20
  406278:	bl	408d00 <ferror@plt+0x5f30>
  40627c:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  406280:	mov	x2, x0
  406284:	add	x1, x1, #0x3b8
  406288:	mov	x0, x19
  40628c:	bl	402d90 <fprintf@plt>
  406290:	mov	x0, x22
  406294:	bl	405404 <ferror@plt+0x2634>
  406298:	mov	x2, x0
  40629c:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4062a0:	mov	x0, x19
  4062a4:	add	x1, x1, #0x3c4
  4062a8:	bl	402d90 <fprintf@plt>
  4062ac:	mov	x1, x22
  4062b0:	mov	x0, x21
  4062b4:	mov	w2, #0x0                   	// #0
  4062b8:	bl	4054b0 <ferror@plt+0x26e0>
  4062bc:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4062c0:	mov	x2, x0
  4062c4:	add	x1, x1, #0x3cf
  4062c8:	mov	x0, x19
  4062cc:	bl	402d90 <fprintf@plt>
  4062d0:	ldp	x0, x1, [x20, #32]
  4062d4:	mov	w2, #0x0                   	// #0
  4062d8:	sub	x1, x1, x0
  4062dc:	mov	x0, #0x4ec5                	// #20165
  4062e0:	movk	x0, #0xc4ec, lsl #16
  4062e4:	asr	x1, x1, #3
  4062e8:	movk	x0, #0xec4e, lsl #32
  4062ec:	movk	x0, #0x4ec4, lsl #48
  4062f0:	mul	x1, x1, x0
  4062f4:	ldr	w0, [x20, #56]
  4062f8:	sub	w1, w1, #0x2
  4062fc:	bl	4054b0 <ferror@plt+0x26e0>
  406300:	mov	x2, x0
  406304:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  406308:	mov	x0, x19
  40630c:	add	x1, x1, #0x3dc
  406310:	bl	402d90 <fprintf@plt>
  406314:	mov	x1, x19
  406318:	mov	w0, #0xa                   	// #10
  40631c:	ldp	x19, x20, [sp, #16]
  406320:	ldp	x21, x22, [sp, #32]
  406324:	ldp	x29, x30, [sp], #48
  406328:	b	4027d0 <fputc@plt>
  40632c:	str	wzr, [x0]
  406330:	stp	xzr, xzr, [x0, #8]
  406334:	stp	xzr, xzr, [x0, #24]
  406338:	stp	xzr, xzr, [x0, #40]
  40633c:	stp	xzr, xzr, [x0, #56]
  406340:	str	wzr, [x0, #72]
  406344:	str	xzr, [x0, #80]
  406348:	str	wzr, [x0, #88]
  40634c:	stp	xzr, xzr, [x0, #96]
  406350:	stp	xzr, xzr, [x0, #112]
  406354:	stp	xzr, xzr, [x0, #128]
  406358:	ret
  40635c:	ldrb	w1, [x0, #28]
  406360:	stp	xzr, xzr, [x0]
  406364:	and	w1, w1, #0xfffffff8
  406368:	str	xzr, [x0, #16]
  40636c:	str	wzr, [x0, #24]
  406370:	strb	w1, [x0, #28]
  406374:	stp	xzr, xzr, [x0, #32]
  406378:	str	xzr, [x0, #48]
  40637c:	str	wzr, [x0, #56]
  406380:	stp	xzr, xzr, [x0, #64]
  406384:	stp	xzr, xzr, [x0, #80]
  406388:	str	xzr, [x0, #96]
  40638c:	str	wzr, [x0, #104]
  406390:	stp	xzr, xzr, [x0, #112]
  406394:	stp	xzr, xzr, [x0, #128]
  406398:	ret
  40639c:	ldrb	w3, [x0, #28]
  4063a0:	tbz	w3, #2, 4063cc <ferror@plt+0x35fc>
  4063a4:	ldr	w3, [x0, #104]
  4063a8:	cmp	w3, w2
  4063ac:	b.ne	4063cc <ferror@plt+0x35fc>  // b.any
  4063b0:	ldr	w2, [x0, #88]
  4063b4:	cmp	w2, w1
  4063b8:	b.hi	4063cc <ferror@plt+0x35fc>  // b.pmore
  4063bc:	ldr	w0, [x0, #96]
  4063c0:	cmp	w0, w1
  4063c4:	cset	w0, cs  // cs = hs, nlast
  4063c8:	ret
  4063cc:	mov	w0, #0x0                   	// #0
  4063d0:	b	4063c8 <ferror@plt+0x35f8>
  4063d4:	stp	x29, x30, [sp, #-128]!
  4063d8:	mov	x29, sp
  4063dc:	stp	x19, x20, [sp, #16]
  4063e0:	mov	w20, w2
  4063e4:	stp	x21, x22, [sp, #32]
  4063e8:	mov	x22, x1
  4063ec:	mov	x21, x3
  4063f0:	stp	x23, x24, [sp, #48]
  4063f4:	adrp	x23, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4063f8:	add	x23, x23, #0xf8
  4063fc:	stp	x25, x26, [sp, #64]
  406400:	stp	x27, x28, [sp, #80]
  406404:	str	d8, [sp, #96]
  406408:	str	x0, [sp, #112]
  40640c:	mov	x0, #0x38                  	// #56
  406410:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  406414:	stp	xzr, xzr, [x0]
  406418:	mov	x19, x0
  40641c:	stp	xzr, xzr, [x0, #16]
  406420:	stp	xzr, xzr, [x0, #32]
  406424:	str	xzr, [x0, #48]
  406428:	bl	408d18 <ferror@plt+0x5f48>
  40642c:	mov	x0, #0x10                  	// #16
  406430:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  406434:	ucvtf	d0, w20
  406438:	str	x23, [x0]
  40643c:	mov	x2, x0
  406440:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  406444:	add	x1, x1, #0x3f0
  406448:	str	d0, [x0, #8]
  40644c:	mov	x0, x19
  406450:	bl	40b780 <ferror@plt+0x89b0>
  406454:	cbz	x21, 406480 <ferror@plt+0x36b0>
  406458:	mov	x0, #0x10                  	// #16
  40645c:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  406460:	mov	x1, x21
  406464:	mov	x20, x0
  406468:	bl	40b570 <ferror@plt+0x87a0>
  40646c:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  406470:	mov	x2, x20
  406474:	add	x1, x1, #0x3fc
  406478:	mov	x0, x19
  40647c:	bl	40b780 <ferror@plt+0x89b0>
  406480:	mov	x0, #0x10                  	// #16
  406484:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  406488:	ldr	d0, [x22]
  40648c:	mov	x2, x0
  406490:	adrp	x25, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  406494:	add	x25, x25, #0x7eb
  406498:	mov	x1, x25
  40649c:	mov	x0, x19
  4064a0:	scvtf	d0, d0
  4064a4:	str	x23, [x2]
  4064a8:	adrp	x24, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4064ac:	add	x24, x24, #0x158
  4064b0:	str	d0, [x2, #8]
  4064b4:	bl	40b780 <ferror@plt+0x89b0>
  4064b8:	mov	x0, #0x10                  	// #16
  4064bc:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  4064c0:	mov	x2, x0
  4064c4:	ldrb	w0, [x22, #56]
  4064c8:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4064cc:	add	x1, x1, #0x40a
  4064d0:	tst	x0, #0x4
  4064d4:	str	x24, [x2]
  4064d8:	cset	w0, eq  // eq = none
  4064dc:	add	w0, w0, #0x4
  4064e0:	str	w0, [x2, #8]
  4064e4:	mov	x0, x19
  4064e8:	bl	40b780 <ferror@plt+0x89b0>
  4064ec:	mov	x0, #0x10                  	// #16
  4064f0:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  4064f4:	mov	x26, x0
  4064f8:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4064fc:	add	x0, x0, #0xc8
  406500:	mov	x2, x26
  406504:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  406508:	add	x1, x1, #0xca1
  40650c:	stp	x0, xzr, [x26]
  406510:	mov	x0, x19
  406514:	bl	40b780 <ferror@plt+0x89b0>
  406518:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  40651c:	ldr	w0, [x0, #1668]
  406520:	cbz	w0, 406638 <ferror@plt+0x3868>
  406524:	ldr	x21, [x22, #8]
  406528:	adrp	x27, 46b000 <_obstack_memory_used@@Base+0x265fc>
  40652c:	adrp	x28, 467000 <_obstack_memory_used@@Base+0x225fc>
  406530:	add	x27, x27, #0xe94
  406534:	add	x28, x28, #0xfc3
  406538:	ldr	x0, [x22, #16]
  40653c:	cmp	x0, x21
  406540:	b.eq	406638 <ferror@plt+0x3868>  // b.none
  406544:	ldr	x0, [x21]
  406548:	ldrb	w1, [x0, #32]
  40654c:	ldrsb	w0, [x0, #32]
  406550:	tbnz	w0, #31, 406630 <ferror@plt+0x3860>
  406554:	tbnz	w1, #5, 406630 <ferror@plt+0x3860>
  406558:	mov	x0, #0x38                  	// #56
  40655c:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  406560:	stp	xzr, xzr, [x0]
  406564:	mov	x20, x0
  406568:	stp	xzr, xzr, [x0, #16]
  40656c:	stp	xzr, xzr, [x0, #32]
  406570:	str	xzr, [x0, #48]
  406574:	bl	408d18 <ferror@plt+0x5f48>
  406578:	ldr	x0, [x21]
  40657c:	ldr	d8, [x0, #16]
  406580:	mov	x0, #0x10                  	// #16
  406584:	scvtf	d8, d8
  406588:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  40658c:	mov	x2, x0
  406590:	mov	x1, x25
  406594:	mov	x0, x20
  406598:	str	x23, [x2]
  40659c:	str	d8, [x2, #8]
  4065a0:	bl	40b780 <ferror@plt+0x89b0>
  4065a4:	ldr	x0, [x21]
  4065a8:	ldrb	w1, [x0, #32]
  4065ac:	mov	x0, #0x10                  	// #16
  4065b0:	and	w1, w1, #0x10
  4065b4:	str	w1, [sp, #124]
  4065b8:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  4065bc:	mov	x2, x0
  4065c0:	ldr	w1, [sp, #124]
  4065c4:	cmp	w1, #0x0
  4065c8:	str	x24, [x2]
  4065cc:	cset	w0, eq  // eq = none
  4065d0:	mov	x1, x27
  4065d4:	add	w0, w0, #0x4
  4065d8:	str	w0, [x2, #8]
  4065dc:	mov	x0, x20
  4065e0:	bl	40b780 <ferror@plt+0x89b0>
  4065e4:	ldr	x0, [x21]
  4065e8:	ldrb	w1, [x0, #32]
  4065ec:	mov	x0, #0x10                  	// #16
  4065f0:	and	w1, w1, #0x8
  4065f4:	str	w1, [sp, #124]
  4065f8:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  4065fc:	mov	x2, x0
  406600:	ldr	w1, [sp, #124]
  406604:	cmp	w1, #0x0
  406608:	str	x24, [x2]
  40660c:	cset	w0, eq  // eq = none
  406610:	mov	x1, x28
  406614:	add	w0, w0, #0x4
  406618:	str	w0, [x2, #8]
  40661c:	mov	x0, x20
  406620:	bl	40b780 <ferror@plt+0x89b0>
  406624:	mov	x1, x20
  406628:	mov	x0, x26
  40662c:	bl	40b440 <ferror@plt+0x8670>
  406630:	add	x21, x21, #0x8
  406634:	b	406538 <ferror@plt+0x3768>
  406638:	mov	x1, x19
  40663c:	ldr	d8, [sp, #96]
  406640:	ldp	x19, x20, [sp, #16]
  406644:	ldp	x21, x22, [sp, #32]
  406648:	ldp	x23, x24, [sp, #48]
  40664c:	ldp	x25, x26, [sp, #64]
  406650:	ldp	x27, x28, [sp, #80]
  406654:	ldr	x0, [sp, #112]
  406658:	ldp	x29, x30, [sp], #128
  40665c:	b	40b440 <ferror@plt+0x8670>
  406660:	stp	x29, x30, [sp, #-112]!
  406664:	mov	x3, x0
  406668:	mov	x29, sp
  40666c:	stp	x19, x20, [sp, #16]
  406670:	mov	x20, x2
  406674:	ldp	x19, x2, [x1]
  406678:	stp	x21, x22, [sp, #32]
  40667c:	mov	x21, x1
  406680:	stp	x23, x24, [sp, #48]
  406684:	sub	x1, x2, x19
  406688:	mov	x4, x19
  40668c:	asr	x1, x1, #5
  406690:	mov	x0, x4
  406694:	cmp	x1, #0x0
  406698:	b.le	40681c <ferror@plt+0x3a4c>
  40669c:	ldr	x4, [x4]
  4066a0:	cmp	x4, x3
  4066a4:	b.eq	4066b8 <ferror@plt+0x38e8>  // b.none
  4066a8:	ldr	x4, [x0, #8]
  4066ac:	cmp	x3, x4
  4066b0:	b.ne	4067e8 <ferror@plt+0x3a18>  // b.any
  4066b4:	add	x0, x0, #0x8
  4066b8:	cmp	x2, x0
  4066bc:	b.eq	406844 <ferror@plt+0x3a74>  // b.none
  4066c0:	sub	x19, x0, x19
  4066c4:	add	x1, x0, #0x8
  4066c8:	cmp	x2, x1
  4066cc:	asr	x19, x19, #3
  4066d0:	b.eq	4066dc <ferror@plt+0x390c>  // b.none
  4066d4:	sub	x2, x2, x1
  4066d8:	bl	4026b0 <memmove@plt>
  4066dc:	ldr	x0, [x21, #8]
  4066e0:	and	x19, x19, #0xffffffff
  4066e4:	ldr	x23, [x20]
  4066e8:	sub	x0, x0, #0x8
  4066ec:	str	x0, [x21, #8]
  4066f0:	mov	x0, #0x18                  	// #24
  4066f4:	mul	x19, x19, x0
  4066f8:	add	x24, x23, x19
  4066fc:	ldr	x0, [x23, x19]
  406700:	ldr	x22, [x24, #8]
  406704:	stp	xzr, xzr, [sp, #64]
  406708:	sub	x22, x22, x0
  40670c:	str	xzr, [sp, #80]
  406710:	asr	x0, x22, #3
  406714:	cmp	xzr, x22, asr #3
  406718:	b.eq	40687c <ferror@plt+0x3aac>  // b.none
  40671c:	bl	405be8 <ferror@plt+0x2e18>
  406720:	mov	x3, x0
  406724:	add	x22, x3, x22
  406728:	stp	x3, x3, [sp, #64]
  40672c:	str	x22, [sp, #80]
  406730:	ldr	x1, [x23, x19]
  406734:	ldr	x0, [x24, #8]
  406738:	sub	x22, x0, x1
  40673c:	cmp	x1, x0
  406740:	b.eq	406754 <ferror@plt+0x3984>  // b.none
  406744:	mov	x0, x3
  406748:	mov	x2, x22
  40674c:	bl	4026b0 <memmove@plt>
  406750:	mov	x3, x0
  406754:	add	x3, x3, x22
  406758:	add	x0, x19, #0x18
  40675c:	ldp	x19, x22, [x20]
  406760:	str	x3, [sp, #72]
  406764:	add	x19, x19, x0
  406768:	cmp	x19, x22
  40676c:	b.eq	406884 <ferror@plt+0x3ab4>  // b.none
  406770:	sub	x22, x22, x19
  406774:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  406778:	movk	x0, #0xaaab
  40677c:	asr	x22, x22, #3
  406780:	mul	x22, x22, x0
  406784:	cmp	x22, #0x0
  406788:	b.le	406884 <ferror@plt+0x3ab4>
  40678c:	stp	xzr, xzr, [sp, #88]
  406790:	sub	x22, x22, #0x1
  406794:	str	xzr, [sp, #104]
  406798:	ldp	x0, x3, [x19, #-8]
  40679c:	ldp	x2, x1, [x19, #-24]
  4067a0:	stur	x3, [x19, #-24]
  4067a4:	ldr	x3, [x19, #8]
  4067a8:	stur	x3, [x19, #-16]
  4067ac:	ldr	x3, [x19, #16]
  4067b0:	stur	x3, [x19, #-8]
  4067b4:	str	x2, [x19]
  4067b8:	str	x1, [x19, #8]
  4067bc:	str	x0, [x19, #16]
  4067c0:	ldp	x5, x4, [sp, #88]
  4067c4:	stp	x2, x1, [sp, #88]
  4067c8:	ldr	x3, [sp, #104]
  4067cc:	str	x0, [sp, #104]
  4067d0:	stp	x5, x4, [x19]
  4067d4:	add	x0, sp, #0x58
  4067d8:	add	x19, x19, #0x18
  4067dc:	stur	x3, [x19, #-8]
  4067e0:	bl	408dd8 <ferror@plt+0x6008>
  4067e4:	b	406784 <ferror@plt+0x39b4>
  4067e8:	ldr	x4, [x0, #16]
  4067ec:	cmp	x3, x4
  4067f0:	b.ne	4067fc <ferror@plt+0x3a2c>  // b.any
  4067f4:	add	x0, x0, #0x10
  4067f8:	b	4066b8 <ferror@plt+0x38e8>
  4067fc:	ldr	x5, [x0, #24]
  406800:	add	x4, x0, #0x20
  406804:	cmp	x3, x5
  406808:	b.ne	406814 <ferror@plt+0x3a44>  // b.any
  40680c:	add	x0, x0, #0x18
  406810:	b	4066b8 <ferror@plt+0x38e8>
  406814:	sub	x1, x1, #0x1
  406818:	b	406690 <ferror@plt+0x38c0>
  40681c:	sub	x1, x2, x4
  406820:	cmp	x1, #0x10
  406824:	b.eq	406868 <ferror@plt+0x3a98>  // b.none
  406828:	cmp	x1, #0x18
  40682c:	b.eq	406858 <ferror@plt+0x3a88>  // b.none
  406830:	cmp	x1, #0x8
  406834:	b.ne	406844 <ferror@plt+0x3a74>  // b.any
  406838:	ldr	x1, [x0]
  40683c:	cmp	x3, x1
  406840:	b.eq	4066b8 <ferror@plt+0x38e8>  // b.none
  406844:	ldp	x19, x20, [sp, #16]
  406848:	ldp	x21, x22, [sp, #32]
  40684c:	ldp	x23, x24, [sp, #48]
  406850:	ldp	x29, x30, [sp], #112
  406854:	ret
  406858:	ldr	x1, [x4]
  40685c:	cmp	x3, x1
  406860:	b.eq	4066b8 <ferror@plt+0x38e8>  // b.none
  406864:	add	x0, x4, #0x8
  406868:	ldr	x1, [x0]
  40686c:	cmp	x3, x1
  406870:	b.eq	4066b8 <ferror@plt+0x38e8>  // b.none
  406874:	add	x0, x0, #0x8
  406878:	b	406838 <ferror@plt+0x3a68>
  40687c:	mov	x3, #0x0                   	// #0
  406880:	b	406724 <ferror@plt+0x3954>
  406884:	ldr	x0, [x20, #8]
  406888:	sub	x0, x0, #0x18
  40688c:	str	x0, [x20, #8]
  406890:	bl	408dd8 <ferror@plt+0x6008>
  406894:	ldr	x19, [sp, #64]
  406898:	ldr	x0, [sp, #72]
  40689c:	cmp	x0, x19
  4068a0:	b.eq	4068b8 <ferror@plt+0x3ae8>  // b.none
  4068a4:	ldr	x0, [x19], #8
  4068a8:	mov	x2, x20
  4068ac:	mov	x1, x21
  4068b0:	bl	406660 <ferror@plt+0x3890>
  4068b4:	b	406898 <ferror@plt+0x3ac8>
  4068b8:	add	x0, sp, #0x40
  4068bc:	bl	408dd8 <ferror@plt+0x6008>
  4068c0:	b	406844 <ferror@plt+0x3a74>
  4068c4:	stp	x29, x30, [sp, #-48]!
  4068c8:	mov	x29, sp
  4068cc:	stp	x19, x20, [sp, #16]
  4068d0:	mov	x19, x0
  4068d4:	add	x0, x0, #0x60
  4068d8:	str	x1, [sp, #40]
  4068dc:	add	x1, sp, #0x28
  4068e0:	bl	409420 <ferror@plt+0x6650>
  4068e4:	ldr	x0, [sp, #40]
  4068e8:	ldr	x4, [x19, #120]
  4068ec:	ldr	w2, [x0, #88]
  4068f0:	add	x0, x19, #0x78
  4068f4:	mov	w6, w2
  4068f8:	ldr	x3, [x0, #8]
  4068fc:	sub	x5, x3, x4
  406900:	cmp	x6, x5, asr #3
  406904:	b.cc	406920 <ferror@plt+0x3b50>  // b.lo, b.ul, b.last
  406908:	asr	x1, x5, #3
  40690c:	add	w2, w2, #0x1
  406910:	cmp	x2, x1
  406914:	b.ls	406964 <ferror@plt+0x3b94>  // b.plast
  406918:	sub	x1, x2, x1
  40691c:	bl	408de0 <ferror@plt+0x6010>
  406920:	ldr	x0, [sp, #40]
  406924:	ldr	x19, [x19, #120]
  406928:	ldr	w20, [x0, #88]
  40692c:	lsl	x20, x20, #3
  406930:	ldr	x0, [x19, x20]
  406934:	cbnz	x0, 40694c <ferror@plt+0x3b7c>
  406938:	mov	x0, #0x18                  	// #24
  40693c:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  406940:	stp	xzr, xzr, [x0]
  406944:	str	xzr, [x0, #16]
  406948:	str	x0, [x19, x20]
  40694c:	ldr	x0, [x19, x20]
  406950:	add	x1, sp, #0x28
  406954:	bl	409420 <ferror@plt+0x6650>
  406958:	ldp	x19, x20, [sp, #16]
  40695c:	ldp	x29, x30, [sp], #48
  406960:	ret
  406964:	b.cs	406920 <ferror@plt+0x3b50>  // b.hs, b.nlast
  406968:	add	x2, x4, x2, lsl #3
  40696c:	cmp	x3, x2
  406970:	b.eq	406920 <ferror@plt+0x3b50>  // b.none
  406974:	str	x2, [x19, #128]
  406978:	b	406920 <ferror@plt+0x3b50>
  40697c:	stp	x29, x30, [sp, #-128]!
  406980:	mov	x29, sp
  406984:	stp	x19, x20, [sp, #16]
  406988:	mov	x19, x3
  40698c:	mov	x20, x4
  406990:	stp	x21, x22, [sp, #32]
  406994:	mov	x21, x1
  406998:	mov	x22, x2
  40699c:	str	x0, [sp, #88]
  4069a0:	add	x2, sp, #0x58
  4069a4:	ldr	x0, [x19]
  4069a8:	mov	w3, #0x0                   	// #0
  4069ac:	ldr	x1, [x19, #8]
  4069b0:	stp	x23, x24, [sp, #48]
  4069b4:	mov	x23, x5
  4069b8:	mov	x24, x6
  4069bc:	stp	x25, x26, [sp, #64]
  4069c0:	bl	4095f0 <ferror@plt+0x6820>
  4069c4:	ldr	x1, [x19, #8]
  4069c8:	cmp	x1, x0
  4069cc:	b.eq	4069e8 <ferror@plt+0x3c18>  // b.none
  4069d0:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4069d4:	add	x2, x2, #0x41b
  4069d8:	mov	w1, #0x2ed                 	// #749
  4069dc:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4069e0:	add	x0, x0, #0x2e5
  4069e4:	bl	402de0 <ferror@plt+0x10>
  4069e8:	ldr	x0, [sp, #88]
  4069ec:	add	x1, sp, #0x68
  4069f0:	str	x0, [sp, #104]
  4069f4:	mov	x0, x19
  4069f8:	bl	408f48 <ferror@plt+0x6178>
  4069fc:	stp	xzr, xzr, [sp, #104]
  406a00:	ldp	x1, x0, [x20, #8]
  406a04:	str	xzr, [sp, #120]
  406a08:	cmp	x1, x0
  406a0c:	b.eq	406ac0 <ferror@plt+0x3cf0>  // b.none
  406a10:	ldr	x0, [sp, #112]
  406a14:	stp	xzr, x0, [x1]
  406a18:	add	x1, x1, #0x18
  406a1c:	ldr	x0, [sp, #120]
  406a20:	stur	x0, [x1, #-8]
  406a24:	str	x1, [x20, #8]
  406a28:	stp	xzr, xzr, [sp, #104]
  406a2c:	str	xzr, [sp, #120]
  406a30:	add	x0, sp, #0x68
  406a34:	bl	408dd8 <ferror@plt+0x6008>
  406a38:	ldr	x0, [sp, #88]
  406a3c:	mov	w25, #0x0                   	// #0
  406a40:	ldr	x0, [x0]
  406a44:	str	x0, [sp, #96]
  406a48:	ldr	x0, [sp, #96]
  406a4c:	cbz	x0, 406b6c <ferror@plt+0x3d9c>
  406a50:	ldr	x1, [x0, #8]
  406a54:	str	x1, [sp, #104]
  406a58:	cmp	x1, x22
  406a5c:	b.cc	406b5c <ferror@plt+0x3d8c>  // b.lo, b.ul, b.last
  406a60:	ldr	x0, [x0, #24]
  406a64:	cbz	x0, 406b5c <ferror@plt+0x3d8c>
  406a68:	mov	x0, x23
  406a6c:	bl	406168 <ferror@plt+0x3398>
  406a70:	ands	w26, w0, #0xff
  406a74:	b.eq	406b5c <ferror@plt+0x3d8c>  // b.none
  406a78:	add	x1, sp, #0x60
  406a7c:	mov	x0, x21
  406a80:	bl	40912c <ferror@plt+0x635c>
  406a84:	ldp	x1, x3, [x21]
  406a88:	ldr	x0, [sp, #104]
  406a8c:	cmp	x0, x22
  406a90:	sub	x3, x3, x1
  406a94:	asr	x3, x3, #3
  406a98:	b.eq	406ad0 <ferror@plt+0x3d00>  // b.none
  406a9c:	mov	w0, #0x0                   	// #0
  406aa0:	mov	w2, w0
  406aa4:	cmp	x3, w0, uxtw
  406aa8:	b.ls	406c54 <ferror@plt+0x3e84>  // b.plast
  406aac:	ldr	x2, [x1, x2, lsl #3]
  406ab0:	ldr	x2, [x2, #24]
  406ab4:	cbz	x2, 406b48 <ferror@plt+0x3d78>
  406ab8:	add	w0, w0, #0x1
  406abc:	b	406aa0 <ferror@plt+0x3cd0>
  406ac0:	add	x2, sp, #0x68
  406ac4:	mov	x0, x20
  406ac8:	bl	4096c4 <ferror@plt+0x68f4>
  406acc:	b	406a30 <ferror@plt+0x3c60>
  406ad0:	mov	w2, #0x0                   	// #0
  406ad4:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  406ad8:	mov	w4, w2
  406adc:	cmp	x3, w2, uxtw
  406ae0:	b.ls	406afc <ferror@plt+0x3d2c>  // b.plast
  406ae4:	ldr	x4, [x1, x4, lsl #3]
  406ae8:	add	w2, w2, #0x1
  406aec:	ldr	x4, [x4, #24]
  406af0:	cmp	x0, x4
  406af4:	csel	x0, x0, x4, le
  406af8:	b	406ad8 <ferror@plt+0x3d08>
  406afc:	ldr	x2, [x24]
  406b00:	add	x2, x2, x0
  406b04:	str	x2, [x24]
  406b08:	mov	w2, #0x0                   	// #0
  406b0c:	mov	w4, w2
  406b10:	cmp	x3, w2, uxtw
  406b14:	b.ls	406b30 <ferror@plt+0x3d60>  // b.plast
  406b18:	ldr	x5, [x1, x4, lsl #3]
  406b1c:	add	w2, w2, #0x1
  406b20:	ldr	x4, [x5, #24]
  406b24:	sub	x4, x4, x0
  406b28:	str	x4, [x5, #24]
  406b2c:	b	406b0c <ferror@plt+0x3d3c>
  406b30:	cmp	x0, #0x0
  406b34:	b.gt	406b4c <ferror@plt+0x3d7c>
  406b38:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  406b3c:	mov	w1, #0x2bb                 	// #699
  406b40:	add	x2, x2, #0x423
  406b44:	b	4069dc <ferror@plt+0x3c0c>
  406b48:	mov	w26, w25
  406b4c:	ldr	x0, [x21, #8]
  406b50:	mov	w25, w26
  406b54:	sub	x0, x0, #0x8
  406b58:	str	x0, [x21, #8]
  406b5c:	ldr	x0, [sp, #96]
  406b60:	ldr	x0, [x0, #40]
  406b64:	str	x0, [sp, #96]
  406b68:	b	406a48 <ferror@plt+0x3c78>
  406b6c:	ldr	x0, [sp, #88]
  406b70:	cbz	w25, 406b9c <ferror@plt+0x3dcc>
  406b74:	mov	x2, x20
  406b78:	mov	x1, x19
  406b7c:	bl	406660 <ferror@plt+0x3890>
  406b80:	mov	w0, w25
  406b84:	ldp	x19, x20, [sp, #16]
  406b88:	ldp	x21, x22, [sp, #32]
  406b8c:	ldp	x23, x24, [sp, #48]
  406b90:	ldp	x25, x26, [sp, #64]
  406b94:	ldp	x29, x30, [sp], #128
  406b98:	ret
  406b9c:	ldr	x21, [x0]
  406ba0:	mov	x24, #0x18                  	// #24
  406ba4:	cbz	x21, 406b80 <ferror@plt+0x3db0>
  406ba8:	ldr	x1, [x21, #8]
  406bac:	str	x1, [sp, #96]
  406bb0:	cmp	x1, x22
  406bb4:	b.cc	406c4c <ferror@plt+0x3e7c>  // b.lo, b.ul, b.last
  406bb8:	ldr	x0, [x21, #24]
  406bbc:	cbz	x0, 406c4c <ferror@plt+0x3e7c>
  406bc0:	mov	x0, x23
  406bc4:	bl	406168 <ferror@plt+0x3398>
  406bc8:	tst	w0, #0xff
  406bcc:	b.eq	406c4c <ferror@plt+0x3e7c>  // b.none
  406bd0:	ldp	x0, x1, [x19]
  406bd4:	add	x2, sp, #0x60
  406bd8:	mov	w3, #0x0                   	// #0
  406bdc:	bl	4095f0 <ferror@plt+0x6820>
  406be0:	ldp	x3, x1, [x19]
  406be4:	sub	x1, x1, x3
  406be8:	sub	x2, x0, x3
  406bec:	asr	x1, x1, #3
  406bf0:	asr	x0, x2, #3
  406bf4:	cmp	x1, x2, asr #3
  406bf8:	b.hi	406c0c <ferror@plt+0x3e3c>  // b.pmore
  406bfc:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  406c00:	mov	w1, #0x315                 	// #789
  406c04:	add	x2, x2, #0x41b
  406c08:	b	4069dc <ferror@plt+0x3c0c>
  406c0c:	ldr	x4, [x20]
  406c10:	mul	x0, x0, x24
  406c14:	add	x2, sp, #0x58
  406c18:	mov	w3, #0x0                   	// #0
  406c1c:	add	x26, x4, x0
  406c20:	ldr	x0, [x4, x0]
  406c24:	ldr	x1, [x26, #8]
  406c28:	bl	4095f0 <ferror@plt+0x6820>
  406c2c:	ldr	x1, [x26, #8]
  406c30:	cmp	x1, x0
  406c34:	b.ne	406c4c <ferror@plt+0x3e7c>  // b.any
  406c38:	ldr	x0, [sp, #88]
  406c3c:	add	x1, sp, #0x68
  406c40:	str	x0, [sp, #104]
  406c44:	mov	x0, x26
  406c48:	bl	408f48 <ferror@plt+0x6178>
  406c4c:	ldr	x21, [x21, #40]
  406c50:	b	406ba4 <ferror@plt+0x3dd4>
  406c54:	ldp	x0, x1, [x19]
  406c58:	add	x2, sp, #0x68
  406c5c:	mov	w3, #0x0                   	// #0
  406c60:	bl	4095f0 <ferror@plt+0x6820>
  406c64:	ldr	x1, [x19, #8]
  406c68:	cmp	x1, x0
  406c6c:	b.ne	406b48 <ferror@plt+0x3d78>  // b.any
  406c70:	ldr	x0, [sp, #104]
  406c74:	mov	x6, x24
  406c78:	mov	x5, x23
  406c7c:	mov	x4, x20
  406c80:	mov	x3, x19
  406c84:	mov	x2, x22
  406c88:	mov	x1, x21
  406c8c:	bl	40697c <ferror@plt+0x3bac>
  406c90:	orr	w25, w25, w0
  406c94:	and	w26, w25, #0xff
  406c98:	b	406b4c <ferror@plt+0x3d7c>
  406c9c:	stp	x29, x30, [sp, #-160]!
  406ca0:	mov	x29, sp
  406ca4:	stp	x19, x20, [sp, #16]
  406ca8:	mov	x19, x0
  406cac:	mov	x20, x1
  406cb0:	stp	x21, x22, [sp, #32]
  406cb4:	stp	x23, x24, [sp, #48]
  406cb8:	ands	w24, w2, #0xff
  406cbc:	str	x25, [sp, #64]
  406cc0:	b.eq	406d4c <ferror@plt+0x3f7c>  // b.none
  406cc4:	add	x0, x1, #0x30
  406cc8:	ldp	x1, x4, [x19, #8]
  406ccc:	cmp	x4, x1
  406cd0:	b.eq	406d4c <ferror@plt+0x3f7c>  // b.none
  406cd4:	ldr	x2, [x1]
  406cd8:	ldrb	w3, [x2, #32]
  406cdc:	tbz	w3, #5, 406d0c <ferror@plt+0x3f3c>
  406ce0:	ldr	x2, [x2]
  406ce4:	ldr	w3, [x0, #20]
  406ce8:	ldr	x2, [x2, #40]
  406cec:	add	w3, w3, #0x1
  406cf0:	str	w3, [x0, #20]
  406cf4:	cbz	x2, 406d04 <ferror@plt+0x3f34>
  406cf8:	ldr	w2, [x0, #24]
  406cfc:	add	w2, w2, #0x1
  406d00:	str	w2, [x0, #24]
  406d04:	add	x1, x1, #0x8
  406d08:	b	406ccc <ferror@plt+0x3efc>
  406d0c:	tbnz	w3, #7, 406d04 <ferror@plt+0x3f34>
  406d10:	ldr	w3, [x0, #8]
  406d14:	add	w3, w3, #0x1
  406d18:	str	w3, [x0, #8]
  406d1c:	ldr	x3, [x2]
  406d20:	ldr	x3, [x3, #40]
  406d24:	cbz	x3, 406d34 <ferror@plt+0x3f64>
  406d28:	ldr	w3, [x0, #12]
  406d2c:	add	w3, w3, #0x1
  406d30:	str	w3, [x0, #12]
  406d34:	ldr	x2, [x2, #16]
  406d38:	cbz	x2, 406d04 <ferror@plt+0x3f34>
  406d3c:	ldr	w2, [x0, #16]
  406d40:	add	w2, w2, #0x1
  406d44:	str	w2, [x0, #16]
  406d48:	b	406d04 <ferror@plt+0x3f34>
  406d4c:	ldp	x21, x8, [x19, #32]
  406d50:	cmp	x21, x8
  406d54:	b.eq	406e58 <ferror@plt+0x4088>  // b.none
  406d58:	mov	x7, x21
  406d5c:	mov	x22, #0x0                   	// #0
  406d60:	ldr	x9, [x7]
  406d64:	ldr	x6, [x9, #8]
  406d68:	cbz	x6, 406d90 <ferror@plt+0x3fc0>
  406d6c:	ldr	x1, [x6]
  406d70:	mov	x0, x19
  406d74:	bl	406168 <ferror@plt+0x3398>
  406d78:	tst	w0, #0xff
  406d7c:	b.ne	406d88 <ferror@plt+0x3fb8>  // b.any
  406d80:	ldr	x0, [x6, #16]
  406d84:	add	x22, x22, x0
  406d88:	ldr	x6, [x6, #48]
  406d8c:	b	406d68 <ferror@plt+0x3f98>
  406d90:	ldr	x0, [x9]
  406d94:	cbz	x0, 406da8 <ferror@plt+0x3fd8>
  406d98:	ldr	x1, [x0, #16]
  406d9c:	str	x1, [x0, #24]
  406da0:	ldr	x0, [x0, #40]
  406da4:	b	406d94 <ferror@plt+0x3fc4>
  406da8:	add	x7, x7, #0x8
  406dac:	cmp	x8, x7
  406db0:	b.ne	406d60 <ferror@plt+0x3f90>  // b.any
  406db4:	str	xzr, [sp, #80]
  406db8:	ldr	x0, [x19, #40]
  406dbc:	cmp	x21, x0
  406dc0:	b.eq	406e3c <ferror@plt+0x406c>  // b.none
  406dc4:	ldr	x2, [x21]
  406dc8:	add	x6, sp, #0x50
  406dcc:	mov	x5, x19
  406dd0:	add	x4, sp, #0x88
  406dd4:	add	x3, sp, #0x70
  406dd8:	add	x1, sp, #0x58
  406ddc:	mov	x0, x2
  406de0:	stp	xzr, xzr, [sp, #88]
  406de4:	stp	xzr, xzr, [sp, #104]
  406de8:	stp	xzr, xzr, [sp, #120]
  406dec:	stp	xzr, xzr, [sp, #136]
  406df0:	str	xzr, [sp, #152]
  406df4:	bl	40697c <ferror@plt+0x3bac>
  406df8:	ldp	x23, x25, [sp, #136]
  406dfc:	cmp	x25, x23
  406e00:	b.eq	406e14 <ferror@plt+0x4044>  // b.none
  406e04:	mov	x0, x23
  406e08:	add	x23, x23, #0x18
  406e0c:	bl	408dd8 <ferror@plt+0x6008>
  406e10:	b	406dfc <ferror@plt+0x402c>
  406e14:	ldr	x0, [sp, #136]
  406e18:	cbz	x0, 406e20 <ferror@plt+0x4050>
  406e1c:	bl	445770 <_obstack_memory_used@@Base+0xd6c>
  406e20:	add	x0, sp, #0x70
  406e24:	bl	408dd8 <ferror@plt+0x6008>
  406e28:	ldr	x0, [sp, #88]
  406e2c:	cbz	x0, 406e34 <ferror@plt+0x4064>
  406e30:	bl	445770 <_obstack_memory_used@@Base+0xd6c>
  406e34:	add	x21, x21, #0x8
  406e38:	b	406db8 <ferror@plt+0x3fe8>
  406e3c:	ldr	x0, [sp, #80]
  406e40:	add	x22, x22, x0
  406e44:	ldr	w0, [x20, #88]
  406e48:	str	x22, [x19]
  406e4c:	cmp	x0, x22
  406e50:	b.ge	406e58 <ferror@plt+0x4088>  // b.tcont
  406e54:	str	w22, [x20, #88]
  406e58:	ldrb	w0, [x19, #56]
  406e5c:	tbz	w0, #0, 406e84 <ferror@plt+0x40b4>
  406e60:	cbz	w24, 406e84 <ferror@plt+0x40b4>
  406e64:	ldr	w0, [x20, #48]
  406e68:	add	w0, w0, #0x1
  406e6c:	str	w0, [x20, #48]
  406e70:	ldr	x0, [x19]
  406e74:	cbz	x0, 406e84 <ferror@plt+0x40b4>
  406e78:	ldr	w0, [x20, #52]
  406e7c:	add	w0, w0, #0x1
  406e80:	str	w0, [x20, #52]
  406e84:	ldp	x19, x20, [sp, #16]
  406e88:	ldp	x21, x22, [sp, #32]
  406e8c:	ldp	x23, x24, [sp, #48]
  406e90:	ldr	x25, [sp, #64]
  406e94:	ldp	x29, x30, [sp], #160
  406e98:	ret
  406e9c:	stp	x29, x30, [sp, #-64]!
  406ea0:	mov	x29, sp
  406ea4:	stp	x21, x22, [sp, #32]
  406ea8:	add	x22, x0, #0x20
  406eac:	mov	w21, #0x68                  	// #104
  406eb0:	stp	x19, x20, [sp, #16]
  406eb4:	mov	x20, x0
  406eb8:	ldr	x19, [x22, #8]
  406ebc:	ldr	x0, [x0, #32]
  406ec0:	str	x23, [sp, #48]
  406ec4:	sub	x19, x19, x0
  406ec8:	mov	x0, #0x4ec5                	// #20165
  406ecc:	movk	x0, #0xc4ec, lsl #16
  406ed0:	asr	x19, x19, #3
  406ed4:	movk	x0, #0xec4e, lsl #32
  406ed8:	movk	x0, #0x4ec4, lsl #48
  406edc:	mul	x19, x19, x0
  406ee0:	sub	w19, w19, #0x1
  406ee4:	smull	x21, w19, w21
  406ee8:	tbnz	w19, #31, 406f14 <ferror@plt+0x4144>
  406eec:	ldr	x0, [x20, #32]
  406ef0:	ldr	x0, [x0, x21]
  406ef4:	cbz	x0, 406f08 <ferror@plt+0x4138>
  406ef8:	ldr	x23, [x0, #40]
  406efc:	bl	402b30 <free@plt>
  406f00:	mov	x0, x23
  406f04:	b	406ef4 <ferror@plt+0x4124>
  406f08:	sub	w19, w19, #0x1
  406f0c:	sub	x21, x21, #0x68
  406f10:	b	406ee8 <ferror@plt+0x4118>
  406f14:	ldp	x1, x0, [x20]
  406f18:	cmp	x0, x1
  406f1c:	b.eq	406f24 <ferror@plt+0x4154>  // b.none
  406f20:	bl	402b30 <free@plt>
  406f24:	mov	x19, x20
  406f28:	ldr	x0, [x19], #112
  406f2c:	bl	402b30 <free@plt>
  406f30:	mov	x0, x19
  406f34:	bl	40a1a4 <ferror@plt+0x73d4>
  406f38:	ldr	x0, [x20, #64]
  406f3c:	cbz	x0, 406f44 <ferror@plt+0x4174>
  406f40:	bl	445770 <_obstack_memory_used@@Base+0xd6c>
  406f44:	ldr	x1, [x22, #8]
  406f48:	ldr	x0, [x20, #32]
  406f4c:	bl	40a364 <ferror@plt+0x7594>
  406f50:	ldr	x0, [x20, #32]
  406f54:	cbz	x0, 406f6c <ferror@plt+0x419c>
  406f58:	ldp	x19, x20, [sp, #16]
  406f5c:	ldp	x21, x22, [sp, #32]
  406f60:	ldr	x23, [sp, #48]
  406f64:	ldp	x29, x30, [sp], #64
  406f68:	b	445770 <_obstack_memory_used@@Base+0xd6c>
  406f6c:	ldp	x19, x20, [sp, #16]
  406f70:	ldp	x21, x22, [sp, #32]
  406f74:	ldr	x23, [sp, #48]
  406f78:	ldp	x29, x30, [sp], #64
  406f7c:	ret
  406f80:	stp	x29, x30, [sp, #-32]!
  406f84:	mov	x29, sp
  406f88:	ldp	x2, x0, [x0, #120]
  406f8c:	str	x19, [sp, #16]
  406f90:	sub	x0, x0, x2
  406f94:	asr	x0, x0, #3
  406f98:	cmp	x0, w1, uxtw
  406f9c:	b.ls	406fc8 <ferror@plt+0x41f8>  // b.plast
  406fa0:	mov	w3, w1
  406fa4:	ldr	x19, [x2, x3, lsl #3]
  406fa8:	cbz	x19, 406fb8 <ferror@plt+0x41e8>
  406fac:	ldp	x0, x1, [x19]
  406fb0:	mov	w2, #0x0                   	// #0
  406fb4:	bl	40ae7c <ferror@plt+0x80ac>
  406fb8:	mov	x0, x19
  406fbc:	ldr	x19, [sp, #16]
  406fc0:	ldp	x29, x30, [sp], #32
  406fc4:	ret
  406fc8:	mov	x19, #0x0                   	// #0
  406fcc:	b	406fb8 <ferror@plt+0x41e8>
  406fd0:	sub	sp, sp, #0xe0
  406fd4:	stp	x29, x30, [sp, #16]
  406fd8:	add	x29, sp, #0x10
  406fdc:	stp	x19, x20, [sp, #32]
  406fe0:	adrp	x20, 495000 <_obstack_memory_used@@Base+0x505fc>
  406fe4:	add	x20, x20, #0x5d8
  406fe8:	mov	x19, x0
  406fec:	stp	x21, x22, [sp, #48]
  406ff0:	mov	x21, x1
  406ff4:	ldr	w0, [x20, #160]
  406ff8:	stp	x23, x24, [sp, #64]
  406ffc:	stp	x25, x26, [sp, #80]
  407000:	stp	x27, x28, [sp, #96]
  407004:	cbz	w0, 407018 <ferror@plt+0x4248>
  407008:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  40700c:	mov	x1, x19
  407010:	add	x0, x0, #0x430
  407014:	bl	402710 <fputs@plt>
  407018:	ldr	w0, [x20, #164]
  40701c:	cbz	w0, 407030 <ferror@plt+0x4260>
  407020:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  407024:	mov	x1, x19
  407028:	add	x0, x0, #0x4d3
  40702c:	bl	402710 <fputs@plt>
  407030:	ldr	x2, [x21, #80]
  407034:	mov	x0, x19
  407038:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  40703c:	add	x1, x1, #0x545
  407040:	bl	402d90 <fprintf@plt>
  407044:	ldr	w0, [x20, #184]
  407048:	cbnz	w0, 407090 <ferror@plt+0x42c0>
  40704c:	ldr	x2, [x20, #192]
  407050:	mov	x0, x19
  407054:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  407058:	add	x1, x1, #0x560
  40705c:	bl	402d90 <fprintf@plt>
  407060:	ldr	w0, [x20, #200]
  407064:	cbnz	w0, 40715c <ferror@plt+0x438c>
  407068:	ldr	x2, [x20, #208]
  40706c:	mov	x0, x19
  407070:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  407074:	add	x1, x1, #0x57a
  407078:	bl	402d90 <fprintf@plt>
  40707c:	ldr	w2, [x20, #216]
  407080:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  407084:	mov	x0, x19
  407088:	add	x1, x1, #0x593
  40708c:	bl	402d90 <fprintf@plt>
  407090:	ldr	x0, [x21, #8]
  407094:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  407098:	add	x1, x1, #0x45
  40709c:	bl	402870 <fopen@plt>
  4070a0:	mov	x24, x0
  4070a4:	cbnz	x0, 407168 <ferror@plt+0x4398>
  4070a8:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  4070ac:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4070b0:	ldr	x2, [x21, #8]
  4070b4:	add	x1, x1, #0x5ac
  4070b8:	ldr	x0, [x0, #1440]
  4070bc:	bl	40cc8c <ferror@plt+0x9ebc>
  4070c0:	stp	xzr, xzr, [sp, #168]
  4070c4:	str	xzr, [sp, #184]
  4070c8:	cbz	x24, 407254 <ferror@plt+0x4484>
  4070cc:	mov	x25, #0xfffffffffffffff     	// #1152921504606846975
  4070d0:	mov	x27, #0x1                   	// #1
  4070d4:	ldr	x0, [x20, #224]
  4070d8:	cbnz	x0, 4070ec <ferror@plt+0x431c>
  4070dc:	mov	x0, #0xc8                  	// #200
  4070e0:	str	x0, [x20, #224]
  4070e4:	bl	44526c <_obstack_memory_used@@Base+0x868>
  4070e8:	str	x0, [x20, #232]
  4070ec:	mov	x22, #0x0                   	// #0
  4070f0:	ldp	x1, x0, [x20, #224]
  4070f4:	mov	x2, x24
  4070f8:	sub	w1, w1, w22
  4070fc:	add	x0, x0, x22
  407100:	bl	402da0 <fgets@plt>
  407104:	cbz	x0, 4071ac <ferror@plt+0x43dc>
  407108:	ldr	x28, [x20, #232]
  40710c:	add	x0, x28, x22
  407110:	bl	402700 <strlen@plt>
  407114:	cbz	x0, 407184 <ferror@plt+0x43b4>
  407118:	sub	x1, x22, #0x1
  40711c:	add	x1, x1, x0
  407120:	add	x2, x28, x1
  407124:	ldrb	w1, [x28, x1]
  407128:	cmp	w1, #0xa
  40712c:	b.ne	407184 <ferror@plt+0x43b4>  // b.any
  407130:	strb	wzr, [x2]
  407134:	cbz	x28, 407254 <ferror@plt+0x4484>
  407138:	mov	x0, x28
  40713c:	bl	445390 <_obstack_memory_used@@Base+0x98c>
  407140:	mov	x1, x0
  407144:	ldp	x28, x0, [sp, #176]
  407148:	cmp	x28, x0
  40714c:	b.eq	4071b8 <ferror@plt+0x43e8>  // b.none
  407150:	str	x1, [x28], #8
  407154:	str	x28, [sp, #176]
  407158:	b	4070d4 <ferror@plt+0x4304>
  40715c:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x235fc>
  407160:	add	x2, x2, #0x6a
  407164:	b	40706c <ferror@plt+0x429c>
  407168:	ldr	x0, [x21, #16]
  40716c:	cbnz	x0, 4070c0 <ferror@plt+0x42f0>
  407170:	mov	x1, x19
  407174:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  407178:	add	x0, x0, #0x5c8
  40717c:	bl	402710 <fputs@plt>
  407180:	b	4070c0 <ferror@plt+0x42f0>
  407184:	ldr	x1, [x20, #224]
  407188:	add	x22, x22, x0
  40718c:	cmp	x22, x1, lsr #1
  407190:	b.ls	4070f0 <ferror@plt+0x4320>  // b.plast
  407194:	lsl	x1, x1, #1
  407198:	mov	x0, x28
  40719c:	str	x1, [x20, #224]
  4071a0:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  4071a4:	str	x0, [x20, #232]
  4071a8:	b	4070f0 <ferror@plt+0x4320>
  4071ac:	cbz	x22, 407254 <ferror@plt+0x4484>
  4071b0:	ldr	x28, [x20, #232]
  4071b4:	b	407134 <ferror@plt+0x4364>
  4071b8:	ldr	x26, [sp, #168]
  4071bc:	sub	x2, x28, x26
  4071c0:	asr	x0, x2, #3
  4071c4:	cmp	x25, x2, asr #3
  4071c8:	b.ne	4071d8 <ferror@plt+0x4408>  // b.any
  4071cc:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4071d0:	add	x0, x0, #0xd02
  4071d4:	bl	402fd8 <ferror@plt+0x208>
  4071d8:	cmp	x0, #0x0
  4071dc:	csel	x22, x0, x27, ne  // ne = any
  4071e0:	adds	x22, x22, x0
  4071e4:	b.cs	407534 <ferror@plt+0x4764>  // b.hs, b.nlast
  4071e8:	mov	x3, #0x0                   	// #0
  4071ec:	cbz	x22, 40720c <ferror@plt+0x443c>
  4071f0:	cmp	x22, x25
  4071f4:	csel	x22, x22, x25, ls  // ls = plast
  4071f8:	lsl	x0, x22, #3
  4071fc:	stp	x1, x2, [sp, #120]
  407200:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  407204:	ldp	x1, x2, [sp, #120]
  407208:	mov	x3, x0
  40720c:	str	x1, [x3, x2]
  407210:	mov	x0, x26
  407214:	mov	x2, x3
  407218:	mov	x1, x28
  40721c:	str	x3, [sp, #120]
  407220:	bl	405db4 <ferror@plt+0x2fe4>
  407224:	mov	x1, x28
  407228:	add	x2, x0, #0x8
  40722c:	mov	x0, x28
  407230:	bl	405db4 <ferror@plt+0x2fe4>
  407234:	mov	x28, x0
  407238:	mov	x0, x26
  40723c:	bl	405850 <ferror@plt+0x2a80>
  407240:	ldr	x3, [sp, #120]
  407244:	stp	x3, x28, [sp, #168]
  407248:	add	x22, x3, x22, lsl #3
  40724c:	str	x22, [sp, #184]
  407250:	b	4070d4 <ferror@plt+0x4304>
  407254:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  407258:	mov	w22, #0x1                   	// #1
  40725c:	add	x0, x0, #0x61c
  407260:	mov	w25, #0x0                   	// #0
  407264:	str	x0, [sp, #136]
  407268:	ldp	x1, x0, [sp, #168]
  40726c:	mov	w26, w22
  407270:	sub	x0, x0, x1
  407274:	asr	x0, x0, #3
  407278:	cmp	x0, w22, uxtw
  40727c:	b.cc	407500 <ferror@plt+0x4730>  // b.lo, b.ul, b.last
  407280:	ldp	x27, x0, [x21, #24]
  407284:	sub	x0, x0, x27
  407288:	cmp	x26, x0, asr #6
  40728c:	b.cc	4072c4 <ferror@plt+0x44f4>  // b.lo, b.ul, b.last
  407290:	mov	w3, w22
  407294:	mov	x0, x19
  407298:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x235fc>
  40729c:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4072a0:	add	x2, x2, #0x6a
  4072a4:	add	x1, x1, #0x5f4
  4072a8:	bl	402d90 <fprintf@plt>
  4072ac:	mov	w2, w22
  4072b0:	add	x1, sp, #0xa8
  4072b4:	mov	x0, x19
  4072b8:	bl	4057c0 <ferror@plt+0x29f0>
  4072bc:	add	w22, w22, #0x1
  4072c0:	b	407268 <ferror@plt+0x4498>
  4072c4:	lsl	x0, x26, #6
  4072c8:	str	x0, [sp, #128]
  4072cc:	add	x26, x27, x26, lsl #6
  4072d0:	cbnz	w25, 407340 <ferror@plt+0x4570>
  4072d4:	mov	w1, w22
  4072d8:	mov	x0, x21
  4072dc:	bl	406f80 <ferror@plt+0x41b0>
  4072e0:	mov	x23, x0
  4072e4:	cbz	x0, 407340 <ferror@plt+0x4570>
  4072e8:	ldp	x1, x0, [x0]
  4072ec:	sub	x0, x0, x1
  4072f0:	cmp	x0, #0xf
  4072f4:	asr	x4, x0, #3
  4072f8:	b.ls	407324 <ferror@plt+0x4554>  // b.plast
  4072fc:	mov	w0, #0x0                   	// #0
  407300:	mov	w3, w0
  407304:	cmp	x4, w0, uxtw
  407308:	b.ls	407340 <ferror@plt+0x4570>  // b.plast
  40730c:	ldr	x3, [x1, x3, lsl #3]
  407310:	add	w0, w0, #0x1
  407314:	ldr	w3, [x3, #96]
  407318:	cmp	w25, w3
  40731c:	csel	w25, w25, w3, cs  // cs = hs, nlast
  407320:	b	407300 <ferror@plt+0x4530>
  407324:	cmp	x0, #0x8
  407328:	b.ne	407340 <ferror@plt+0x4570>  // b.any
  40732c:	ldr	w0, [x20, #172]
  407330:	cbz	w0, 407340 <ferror@plt+0x4570>
  407334:	ldr	x1, [x1]
  407338:	mov	x0, x19
  40733c:	bl	406230 <ferror@plt+0x3460>
  407340:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  407344:	add	x0, x0, #0x5fc
  407348:	str	x0, [sp, #120]
  40734c:	adrp	x28, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  407350:	ldr	w0, [x21, #88]
  407354:	add	x28, x28, #0x602
  407358:	ldrb	w1, [x26, #56]
  40735c:	mov	x6, x28
  407360:	str	w0, [sp]
  407364:	mov	w5, w22
  407368:	ldr	x0, [sp, #128]
  40736c:	ubfx	x3, x1, #2, #1
  407370:	ldr	x7, [sp, #120]
  407374:	ubfx	x2, x1, #1, #1
  407378:	ldr	x4, [x27, x0]
  40737c:	and	w1, w1, #0x1
  407380:	mov	x0, x19
  407384:	bl	4058f0 <ferror@plt+0x2b20>
  407388:	mov	w2, w22
  40738c:	add	x1, sp, #0xa8
  407390:	mov	x0, x19
  407394:	bl	4057c0 <ferror@plt+0x29f0>
  407398:	mov	w2, w22
  40739c:	mov	x1, x26
  4073a0:	mov	x0, x19
  4073a4:	bl	405c48 <ferror@plt+0x2e78>
  4073a8:	cmp	w25, w22
  4073ac:	b.ne	4072bc <ferror@plt+0x44ec>  // b.any
  4073b0:	ldr	x27, [x23]
  4073b4:	adrp	x26, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4073b8:	add	x26, x26, #0x608
  4073bc:	ldr	x0, [x23, #8]
  4073c0:	cmp	x0, x27
  4073c4:	b.eq	4074ec <ferror@plt+0x471c>  // b.none
  4073c8:	mov	x1, x19
  4073cc:	mov	x0, x26
  4073d0:	ldr	x25, [x27]
  4073d4:	bl	402710 <fputs@plt>
  4073d8:	mov	x0, x25
  4073dc:	bl	408d00 <ferror@plt+0x5f30>
  4073e0:	mov	x1, x0
  4073e4:	add	x0, sp, #0xc0
  4073e8:	bl	40585c <ferror@plt+0x2a8c>
  4073ec:	ldr	w0, [x20, #160]
  4073f0:	cbz	w0, 407414 <ferror@plt+0x4644>
  4073f4:	ldr	x2, [sp, #136]
  4073f8:	mov	x1, #0x0                   	// #0
  4073fc:	add	x0, sp, #0xc0
  407400:	bl	448188 <_obstack_memory_used@@Base+0x3784>
  407404:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  407408:	add	x1, x0, #0x32c
  40740c:	add	x0, sp, #0xc0
  407410:	bl	4487c8 <_obstack_memory_used@@Base+0x3dc4>
  407414:	ldr	x2, [sp, #192]
  407418:	mov	x0, x19
  40741c:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  407420:	add	x1, x1, #0x625
  407424:	bl	402d90 <fprintf@plt>
  407428:	ldr	w0, [x20, #172]
  40742c:	cbz	w0, 40743c <ferror@plt+0x466c>
  407430:	mov	x1, x25
  407434:	mov	x0, x19
  407438:	bl	406230 <ferror@plt+0x3460>
  40743c:	mov	w8, #0x0                   	// #0
  407440:	ldp	x2, x0, [x25, #112]
  407444:	mov	w9, w8
  407448:	sub	x0, x0, x2
  40744c:	asr	x0, x0, #6
  407450:	cmp	x0, w8, uxtw
  407454:	b.ls	4074dc <ferror@plt+0x470c>  // b.plast
  407458:	lsl	x0, x9, #6
  40745c:	add	x9, x2, x9, lsl #6
  407460:	ldr	w3, [x21, #88]
  407464:	mov	x6, x28
  407468:	ldr	w5, [x25, #88]
  40746c:	ldrb	w1, [x9, #56]
  407470:	str	w3, [sp]
  407474:	add	w5, w8, w5
  407478:	ldr	x7, [sp, #120]
  40747c:	ubfx	x3, x1, #2, #1
  407480:	ldr	x4, [x2, x0]
  407484:	ubfx	x2, x1, #1, #1
  407488:	mov	x0, x19
  40748c:	and	w1, w1, #0x1
  407490:	str	w5, [sp, #128]
  407494:	str	x9, [sp, #144]
  407498:	str	w8, [sp, #156]
  40749c:	bl	4058f0 <ferror@plt+0x2b20>
  4074a0:	ldr	w5, [sp, #128]
  4074a4:	add	x1, sp, #0xa8
  4074a8:	mov	x0, x19
  4074ac:	str	w5, [sp, #128]
  4074b0:	mov	w2, w5
  4074b4:	bl	4057c0 <ferror@plt+0x29f0>
  4074b8:	ldr	w5, [sp, #128]
  4074bc:	mov	x0, x19
  4074c0:	ldr	x9, [sp, #144]
  4074c4:	mov	w2, w5
  4074c8:	mov	x1, x9
  4074cc:	bl	405c48 <ferror@plt+0x2e78>
  4074d0:	ldr	w8, [sp, #156]
  4074d4:	add	w8, w8, #0x1
  4074d8:	b	407440 <ferror@plt+0x4670>
  4074dc:	add	x0, sp, #0xc0
  4074e0:	add	x27, x27, #0x8
  4074e4:	bl	446b20 <_obstack_memory_used@@Base+0x211c>
  4074e8:	b	4073bc <ferror@plt+0x45ec>
  4074ec:	mov	x1, x19
  4074f0:	mov	x0, x26
  4074f4:	mov	w25, #0x0                   	// #0
  4074f8:	bl	402710 <fputs@plt>
  4074fc:	b	4072bc <ferror@plt+0x44ec>
  407500:	cbz	x24, 40750c <ferror@plt+0x473c>
  407504:	mov	x0, x24
  407508:	bl	402830 <fclose@plt>
  40750c:	ldr	x0, [sp, #168]
  407510:	bl	405850 <ferror@plt+0x2a80>
  407514:	ldp	x29, x30, [sp, #16]
  407518:	ldp	x19, x20, [sp, #32]
  40751c:	ldp	x21, x22, [sp, #48]
  407520:	ldp	x23, x24, [sp, #64]
  407524:	ldp	x25, x26, [sp, #80]
  407528:	ldp	x27, x28, [sp, #96]
  40752c:	add	sp, sp, #0xe0
  407530:	ret
  407534:	mov	x22, #0xfffffffffffffff     	// #1152921504606846975
  407538:	b	4071f8 <ferror@plt+0x4428>
  40753c:	stp	x29, x30, [sp, #-64]!
  407540:	mov	x29, sp
  407544:	stp	x19, x20, [sp, #16]
  407548:	mov	x19, x0
  40754c:	mov	x20, x1
  407550:	stp	x21, x22, [sp, #32]
  407554:	mov	x22, x2
  407558:	stp	x23, x24, [sp, #48]
  40755c:	add	x24, x0, #0x4
  407560:	sub	x0, x20, x19
  407564:	cmp	x0, #0x40
  407568:	b.le	407694 <ferror@plt+0x48c4>
  40756c:	asr	x23, x0, #2
  407570:	cbnz	x22, 4075d8 <ferror@plt+0x4808>
  407574:	sub	x21, x23, #0x2
  407578:	asr	x21, x21, #1
  40757c:	ldr	w3, [x19, x21, lsl #2]
  407580:	mov	x2, x23
  407584:	mov	x1, x21
  407588:	mov	x0, x19
  40758c:	mov	w4, #0x0                   	// #0
  407590:	bl	40af24 <ferror@plt+0x8154>
  407594:	cbz	x21, 4075a0 <ferror@plt+0x47d0>
  407598:	sub	x21, x21, #0x1
  40759c:	b	40757c <ferror@plt+0x47ac>
  4075a0:	sub	x0, x20, x19
  4075a4:	sub	x20, x20, #0x4
  4075a8:	cmp	x0, #0x4
  4075ac:	b.le	407694 <ferror@plt+0x48c4>
  4075b0:	ldr	w3, [x20]
  4075b4:	sub	x2, x20, x19
  4075b8:	ldr	w0, [x19]
  4075bc:	mov	w4, #0x0                   	// #0
  4075c0:	str	w0, [x20]
  4075c4:	asr	x2, x2, #2
  4075c8:	mov	x0, x19
  4075cc:	mov	x1, #0x0                   	// #0
  4075d0:	bl	40af24 <ferror@plt+0x8154>
  4075d4:	b	4075a0 <ferror@plt+0x47d0>
  4075d8:	asr	x0, x0, #3
  4075dc:	ldur	w2, [x20, #-4]
  4075e0:	ldp	w1, w4, [x19]
  4075e4:	lsl	x0, x0, #2
  4075e8:	sub	x22, x22, #0x1
  4075ec:	ldr	w3, [x19, x0]
  4075f0:	cmp	w4, w3
  4075f4:	b.cs	407620 <ferror@plt+0x4850>  // b.hs, b.nlast
  4075f8:	cmp	w3, w2
  4075fc:	b.cs	40760c <ferror@plt+0x483c>  // b.hs, b.nlast
  407600:	str	w3, [x19]
  407604:	str	w1, [x19, x0]
  407608:	b	40762c <ferror@plt+0x485c>
  40760c:	cmp	w4, w2
  407610:	b.cs	407628 <ferror@plt+0x4858>  // b.hs, b.nlast
  407614:	str	w2, [x19]
  407618:	stur	w1, [x20, #-4]
  40761c:	b	40762c <ferror@plt+0x485c>
  407620:	cmp	w4, w2
  407624:	b.cs	407678 <ferror@plt+0x48a8>  // b.hs, b.nlast
  407628:	stp	w4, w1, [x19]
  40762c:	mov	x21, x24
  407630:	mov	x0, x20
  407634:	ldr	w4, [x19]
  407638:	ldr	w2, [x21]
  40763c:	cmp	w2, w4
  407640:	b.cc	40768c <ferror@plt+0x48bc>  // b.lo, b.ul, b.last
  407644:	sub	x1, x0, #0x4
  407648:	mov	x0, x1
  40764c:	ldr	w3, [x1], #-4
  407650:	cmp	w4, w3
  407654:	b.cc	407648 <ferror@plt+0x4878>  // b.lo, b.ul, b.last
  407658:	cmp	x21, x0
  40765c:	b.cc	407684 <ferror@plt+0x48b4>  // b.lo, b.ul, b.last
  407660:	mov	x1, x20
  407664:	mov	x2, x22
  407668:	mov	x0, x21
  40766c:	mov	x20, x21
  407670:	bl	40753c <ferror@plt+0x476c>
  407674:	b	407560 <ferror@plt+0x4790>
  407678:	cmp	w3, w2
  40767c:	b.cs	407600 <ferror@plt+0x4830>  // b.hs, b.nlast
  407680:	b	407614 <ferror@plt+0x4844>
  407684:	str	w3, [x21]
  407688:	str	w2, [x0]
  40768c:	add	x21, x21, #0x4
  407690:	b	407634 <ferror@plt+0x4864>
  407694:	ldp	x19, x20, [sp, #16]
  407698:	ldp	x21, x22, [sp, #32]
  40769c:	ldp	x23, x24, [sp, #48]
  4076a0:	ldp	x29, x30, [sp], #64
  4076a4:	ret
  4076a8:	stp	x29, x30, [sp, #-80]!
  4076ac:	mov	x29, sp
  4076b0:	stp	x19, x20, [sp, #16]
  4076b4:	mov	x19, x0
  4076b8:	stp	x21, x22, [sp, #32]
  4076bc:	mov	x22, x2
  4076c0:	mov	x21, x1
  4076c4:	stp	x23, x24, [sp, #48]
  4076c8:	add	x23, x0, #0x10
  4076cc:	str	x25, [sp, #64]
  4076d0:	sub	x20, x21, x19
  4076d4:	cmp	x20, #0x100
  4076d8:	b.le	407864 <ferror@plt+0x4a94>
  4076dc:	asr	x24, x20, #4
  4076e0:	cbnz	x22, 407764 <ferror@plt+0x4994>
  4076e4:	sub	x20, x24, #0x2
  4076e8:	asr	x20, x20, #1
  4076ec:	add	x0, x19, x20, lsl #4
  4076f0:	mov	x2, x24
  4076f4:	mov	w5, #0x0                   	// #0
  4076f8:	ldp	x0, x1, [x0]
  4076fc:	mov	x3, x0
  407700:	mov	x4, x1
  407704:	mov	x0, x19
  407708:	mov	x1, x20
  40770c:	bl	40afd8 <ferror@plt+0x8208>
  407710:	cbz	x20, 40771c <ferror@plt+0x494c>
  407714:	sub	x20, x20, #0x1
  407718:	b	4076ec <ferror@plt+0x491c>
  40771c:	sub	x0, x21, x19
  407720:	sub	x21, x21, #0x10
  407724:	cmp	x0, #0x10
  407728:	b.le	407864 <ferror@plt+0x4a94>
  40772c:	ldp	x0, x1, [x21]
  407730:	mov	w5, #0x0                   	// #0
  407734:	ldr	x2, [x19]
  407738:	str	x2, [x21]
  40773c:	ldr	w2, [x19, #8]
  407740:	str	w2, [x21, #8]
  407744:	sub	x2, x21, x19
  407748:	mov	x3, x0
  40774c:	mov	x4, x1
  407750:	mov	x0, x19
  407754:	asr	x2, x2, #4
  407758:	mov	x1, #0x0                   	// #0
  40775c:	bl	40afd8 <ferror@plt+0x8208>
  407760:	b	40771c <ferror@plt+0x494c>
  407764:	asr	x20, x20, #5
  407768:	sub	x24, x21, #0x10
  40776c:	mov	x0, x23
  407770:	sub	x22, x22, #0x1
  407774:	add	x20, x19, x20, lsl #4
  407778:	mov	x1, x20
  40777c:	bl	405ba8 <ferror@plt+0x2dd8>
  407780:	mov	x1, x24
  407784:	tst	w0, #0xff
  407788:	b.eq	4077c0 <ferror@plt+0x49f0>  // b.none
  40778c:	mov	x0, x20
  407790:	bl	405ba8 <ferror@plt+0x2dd8>
  407794:	tst	w0, #0xff
  407798:	b.eq	4077a4 <ferror@plt+0x49d4>  // b.none
  40779c:	mov	x1, x20
  4077a0:	b	4077d4 <ferror@plt+0x4a04>
  4077a4:	mov	x1, x24
  4077a8:	mov	x0, x23
  4077ac:	bl	405ba8 <ferror@plt+0x2dd8>
  4077b0:	tst	w0, #0xff
  4077b4:	b.eq	4077d0 <ferror@plt+0x4a00>  // b.none
  4077b8:	mov	x1, x24
  4077bc:	b	4077d4 <ferror@plt+0x4a04>
  4077c0:	mov	x0, x23
  4077c4:	bl	405ba8 <ferror@plt+0x2dd8>
  4077c8:	tst	w0, #0xff
  4077cc:	b.eq	407838 <ferror@plt+0x4a68>  // b.none
  4077d0:	mov	x1, x23
  4077d4:	mov	x20, x23
  4077d8:	mov	x24, x21
  4077dc:	mov	x0, x19
  4077e0:	bl	40b128 <ferror@plt+0x8358>
  4077e4:	mov	x1, x19
  4077e8:	mov	x0, x20
  4077ec:	bl	405ba8 <ferror@plt+0x2dd8>
  4077f0:	tst	w0, #0xff
  4077f4:	b.ne	40785c <ferror@plt+0x4a8c>  // b.any
  4077f8:	sub	x25, x24, #0x10
  4077fc:	mov	x1, x25
  407800:	mov	x24, x25
  407804:	mov	x0, x19
  407808:	sub	x25, x25, #0x10
  40780c:	bl	405ba8 <ferror@plt+0x2dd8>
  407810:	tst	w0, #0xff
  407814:	b.ne	4077fc <ferror@plt+0x4a2c>  // b.any
  407818:	cmp	x20, x24
  40781c:	b.cc	407850 <ferror@plt+0x4a80>  // b.lo, b.ul, b.last
  407820:	mov	x1, x21
  407824:	mov	x2, x22
  407828:	mov	x0, x20
  40782c:	mov	x21, x20
  407830:	bl	4076a8 <ferror@plt+0x48d8>
  407834:	b	4076d0 <ferror@plt+0x4900>
  407838:	mov	x1, x24
  40783c:	mov	x0, x20
  407840:	bl	405ba8 <ferror@plt+0x2dd8>
  407844:	tst	w0, #0xff
  407848:	b.eq	40779c <ferror@plt+0x49cc>  // b.none
  40784c:	b	4077b8 <ferror@plt+0x49e8>
  407850:	mov	x1, x24
  407854:	mov	x0, x20
  407858:	bl	40b128 <ferror@plt+0x8358>
  40785c:	add	x20, x20, #0x10
  407860:	b	4077e4 <ferror@plt+0x4a14>
  407864:	ldp	x19, x20, [sp, #16]
  407868:	ldp	x21, x22, [sp, #32]
  40786c:	ldp	x23, x24, [sp, #48]
  407870:	ldr	x25, [sp, #64]
  407874:	ldp	x29, x30, [sp], #80
  407878:	ret
  40787c:	stp	x29, x30, [sp, #-272]!
  407880:	mov	x29, sp
  407884:	stp	x19, x20, [sp, #16]
  407888:	stp	x21, x22, [sp, #32]
  40788c:	stp	x23, x24, [sp, #48]
  407890:	stp	x25, x26, [sp, #64]
  407894:	stp	x27, x28, [sp, #80]
  407898:	cbnz	x0, 407960 <ferror@plt+0x4b90>
  40789c:	adrp	x20, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4078a0:	add	x20, x20, #0x62a
  4078a4:	adrp	x19, 495000 <_obstack_memory_used@@Base+0x505fc>
  4078a8:	add	x19, x19, #0x5d8
  4078ac:	add	x2, sp, #0x60
  4078b0:	mov	w3, #0x0                   	// #0
  4078b4:	str	x20, [sp, #96]
  4078b8:	add	x24, x19, #0xf0
  4078bc:	ldr	x1, [x24, #8]
  4078c0:	ldr	x0, [x19, #240]
  4078c4:	bl	4099e4 <ferror@plt+0x6c14>
  4078c8:	ldr	x1, [x24, #8]
  4078cc:	cmp	x1, x0
  4078d0:	b.eq	407968 <ferror@plt+0x4b98>  // b.none
  4078d4:	ldr	w25, [x0, #8]
  4078d8:	mov	w0, #0x90                  	// #144
  4078dc:	umull	x21, w25, w0
  4078e0:	ldr	x0, [x19, #264]
  4078e4:	add	x0, x0, x21
  4078e8:	ldr	x1, [x0, #16]
  4078ec:	ldr	x0, [x19, #304]
  4078f0:	cmp	x1, x0
  4078f4:	b.le	407940 <ferror@plt+0x4b70>
  4078f8:	adrp	x22, 495000 <_obstack_memory_used@@Base+0x505fc>
  4078fc:	mov	x2, x20
  407900:	ldr	x3, [x19, #192]
  407904:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  407908:	ldr	x0, [x22, #1440]
  40790c:	add	x1, x1, #0x634
  407910:	bl	40cc8c <ferror@plt+0x9ebc>
  407914:	ldr	w0, [x19, #312]
  407918:	cbnz	w0, 407934 <ferror@plt+0x4b64>
  40791c:	ldr	x0, [x22, #1440]
  407920:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  407924:	add	x1, x1, #0x662
  407928:	bl	40cc8c <ferror@plt+0x9ebc>
  40792c:	mov	w0, #0x1                   	// #1
  407930:	str	w0, [x19, #312]
  407934:	ldr	x0, [x19, #264]
  407938:	add	x0, x0, x21
  40793c:	str	xzr, [x0, #16]
  407940:	mov	w0, w25
  407944:	ldp	x19, x20, [sp, #16]
  407948:	ldp	x21, x22, [sp, #32]
  40794c:	ldp	x23, x24, [sp, #48]
  407950:	ldp	x25, x26, [sp, #64]
  407954:	ldp	x27, x28, [sp, #80]
  407958:	ldp	x29, x30, [sp], #272
  40795c:	ret
  407960:	mov	x20, x0
  407964:	b	4078a4 <ferror@plt+0x4ad4>
  407968:	mov	x0, x20
  40796c:	bl	4050a0 <ferror@plt+0x22d0>
  407970:	mov	x21, x0
  407974:	add	x2, sp, #0x60
  407978:	ldr	x1, [x24, #8]
  40797c:	mov	w3, #0x0                   	// #0
  407980:	ldr	x0, [x19, #240]
  407984:	str	x21, [sp, #96]
  407988:	bl	4099e4 <ferror@plt+0x6c14>
  40798c:	ldr	x23, [x24, #8]
  407990:	cmp	x23, x0
  407994:	b.ne	407ba0 <ferror@plt+0x4dd0>  // b.any
  407998:	ldp	x0, x22, [x19, #264]
  40799c:	str	x21, [sp, #96]
  4079a0:	sub	x22, x22, x0
  4079a4:	mov	x0, #0x8e39                	// #36409
  4079a8:	movk	x0, #0x38e3, lsl #16
  4079ac:	asr	x22, x22, #4
  4079b0:	movk	x0, #0xe38e, lsl #32
  4079b4:	movk	x0, #0x8e38, lsl #48
  4079b8:	mul	x22, x22, x0
  4079bc:	ldr	x0, [x24, #16]
  4079c0:	str	w22, [sp, #104]
  4079c4:	mov	w25, w22
  4079c8:	cmp	x23, x0
  4079cc:	b.eq	407b10 <ferror@plt+0x4d40>  // b.none
  4079d0:	ldp	x0, x1, [sp, #96]
  4079d4:	stp	x0, x1, [x23], #16
  4079d8:	str	x23, [x24, #8]
  4079dc:	add	x23, x19, #0x108
  4079e0:	add	x0, sp, #0x80
  4079e4:	bl	40632c <ferror@plt+0x355c>
  4079e8:	ldp	x0, x1, [x23, #8]
  4079ec:	cmp	x0, x1
  4079f0:	b.eq	407b8c <ferror@plt+0x4dbc>  // b.none
  4079f4:	add	x1, sp, #0x80
  4079f8:	bl	40a568 <ferror@plt+0x7798>
  4079fc:	ldr	x0, [x23, #8]
  407a00:	add	x0, x0, #0x90
  407a04:	str	x0, [x23, #8]
  407a08:	add	x0, sp, #0x80
  407a0c:	bl	40a1e0 <ferror@plt+0x7410>
  407a10:	ldr	x23, [x19, #272]
  407a14:	stur	w22, [x23, #-144]
  407a18:	ldr	x22, [x19, #288]
  407a1c:	stur	x21, [x23, #-136]
  407a20:	stur	x21, [x23, #-64]
  407a24:	cbz	x22, 407a54 <ferror@plt+0x4c84>
  407a28:	ldr	x0, [x19, #296]
  407a2c:	mov	x2, x22
  407a30:	mov	x1, x21
  407a34:	bl	4028d0 <strncmp@plt>
  407a38:	cbnz	w0, 407a54 <ferror@plt+0x4c84>
  407a3c:	ldrb	w0, [x21, x22]
  407a40:	cmp	w0, #0x2f
  407a44:	b.ne	407a54 <ferror@plt+0x4c84>  // b.any
  407a48:	add	x22, x22, #0x1
  407a4c:	add	x22, x21, x22
  407a50:	stur	x22, [x23, #-64]
  407a54:	add	x1, sp, #0x80
  407a58:	mov	x0, x21
  407a5c:	bl	45ea78 <_obstack_memory_used@@Base+0x1a074>
  407a60:	cbnz	w0, 407a6c <ferror@plt+0x4c9c>
  407a64:	ldr	x0, [sp, #216]
  407a68:	stur	x0, [x23, #-128]
  407a6c:	ldp	x0, x1, [x19, #240]
  407a70:	add	x2, sp, #0x60
  407a74:	mov	w3, #0x0                   	// #0
  407a78:	str	x20, [sp, #96]
  407a7c:	add	x21, x19, #0xf0
  407a80:	bl	4099e4 <ferror@plt+0x6c14>
  407a84:	ldr	x1, [x19, #248]
  407a88:	cmp	x1, x0
  407a8c:	b.ne	407aac <ferror@plt+0x4cdc>  // b.any
  407a90:	mov	x0, x20
  407a94:	bl	445390 <_obstack_memory_used@@Base+0x98c>
  407a98:	add	x1, sp, #0x70
  407a9c:	str	x0, [sp, #112]
  407aa0:	mov	x0, x21
  407aa4:	str	w25, [sp, #120]
  407aa8:	bl	409bcc <ferror@plt+0x6dfc>
  407aac:	ldp	x22, x23, [x19, #240]
  407ab0:	cmp	x23, x22
  407ab4:	b.eq	4078d8 <ferror@plt+0x4b08>  // b.none
  407ab8:	sub	x21, x23, x22
  407abc:	mov	x1, x23
  407ac0:	asr	x2, x21, #4
  407ac4:	clz	x0, x2
  407ac8:	mov	w2, #0x3f                  	// #63
  407acc:	sub	w2, w2, w0
  407ad0:	mov	x0, x22
  407ad4:	sbfiz	x2, x2, #1, #32
  407ad8:	bl	4076a8 <ferror@plt+0x48d8>
  407adc:	cmp	x21, #0x100
  407ae0:	b.le	407ba8 <ferror@plt+0x4dd8>
  407ae4:	add	x21, x22, #0x100
  407ae8:	mov	x0, x22
  407aec:	mov	x1, x21
  407af0:	mov	w2, #0x0                   	// #0
  407af4:	bl	40a8bc <ferror@plt+0x7aec>
  407af8:	cmp	x23, x21
  407afc:	b.eq	4078d8 <ferror@plt+0x4b08>  // b.none
  407b00:	mov	x0, x21
  407b04:	add	x21, x21, #0x10
  407b08:	bl	405f1c <ferror@plt+0x314c>
  407b0c:	b	407af8 <ferror@plt+0x4d28>
  407b10:	mov	x0, x24
  407b14:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  407b18:	mov	x1, #0x1                   	// #1
  407b1c:	add	x2, x2, #0xd02
  407b20:	bl	409b78 <ferror@plt+0x6da8>
  407b24:	mov	x26, x0
  407b28:	ldr	x28, [x19, #240]
  407b2c:	sub	x27, x23, x28
  407b30:	cbz	x0, 407b64 <ferror@plt+0x4d94>
  407b34:	bl	405bc8 <ferror@plt+0x2df8>
  407b38:	mov	x24, x0
  407b3c:	add	x2, x24, x27
  407b40:	ldp	x0, x1, [sp, #96]
  407b44:	stp	x0, x1, [x2]
  407b48:	mov	x1, x24
  407b4c:	mov	x0, x28
  407b50:	cmp	x23, x0
  407b54:	b.eq	407b6c <ferror@plt+0x4d9c>  // b.none
  407b58:	ldp	x2, x3, [x0], #16
  407b5c:	stp	x2, x3, [x1], #16
  407b60:	b	407b50 <ferror@plt+0x4d80>
  407b64:	mov	x24, #0x0                   	// #0
  407b68:	b	407b3c <ferror@plt+0x4d6c>
  407b6c:	add	x27, x27, #0x10
  407b70:	mov	x0, x28
  407b74:	add	x27, x24, x27
  407b78:	bl	405844 <ferror@plt+0x2a74>
  407b7c:	stp	x24, x27, [x19, #240]
  407b80:	add	x24, x24, x26, lsl #4
  407b84:	str	x24, [x19, #256]
  407b88:	b	4079dc <ferror@plt+0x4c0c>
  407b8c:	mov	x1, x0
  407b90:	add	x2, sp, #0x80
  407b94:	mov	x0, x23
  407b98:	bl	40a754 <ferror@plt+0x7984>
  407b9c:	b	407a08 <ferror@plt+0x4c38>
  407ba0:	ldr	w25, [x0, #8]
  407ba4:	b	407a6c <ferror@plt+0x4c9c>
  407ba8:	mov	x1, x23
  407bac:	mov	x0, x22
  407bb0:	mov	w2, #0x0                   	// #0
  407bb4:	bl	40a8bc <ferror@plt+0x7aec>
  407bb8:	b	4078d8 <ferror@plt+0x4b08>
  407bbc:	stp	x29, x30, [sp, #-416]!
  407bc0:	mov	x29, sp
  407bc4:	stp	x19, x20, [sp, #16]
  407bc8:	adrp	x20, 495000 <_obstack_memory_used@@Base+0x505fc>
  407bcc:	add	x20, x20, #0x5d8
  407bd0:	stp	x21, x22, [sp, #32]
  407bd4:	mov	x22, x0
  407bd8:	ldr	x21, [x20, #320]
  407bdc:	stp	x23, x24, [sp, #48]
  407be0:	stp	x25, x26, [sp, #64]
  407be4:	stp	x27, x28, [sp, #80]
  407be8:	str	d8, [sp, #96]
  407bec:	ldr	x0, [x20, #328]
  407bf0:	cmp	x0, x21
  407bf4:	b.eq	408000 <ferror@plt+0x5230>  // b.none
  407bf8:	ldr	x27, [x21]
  407bfc:	stp	xzr, xzr, [sp, #256]
  407c00:	mov	w28, #0x0                   	// #0
  407c04:	mov	x0, x27
  407c08:	stp	xzr, xzr, [sp, #272]
  407c0c:	bl	408d00 <ferror@plt+0x5f30>
  407c10:	str	x0, [sp, #120]
  407c14:	add	x8, sp, #0x100
  407c18:	str	x0, [sp, #288]
  407c1c:	mov	w3, #0x0                   	// #0
  407c20:	ldr	w0, [x20, #416]
  407c24:	cmp	w0, #0x0
  407c28:	csel	x26, x8, xzr, ne  // ne = any
  407c2c:	ldr	x1, [x27, #32]
  407c30:	mov	x2, #0x4ec5                	// #20165
  407c34:	ldr	x0, [x27, #40]
  407c38:	movk	x2, #0xc4ec, lsl #16
  407c3c:	movk	x2, #0xec4e, lsl #32
  407c40:	add	x25, x27, #0x20
  407c44:	sub	x0, x0, x1
  407c48:	movk	x2, #0x4ec4, lsl #48
  407c4c:	asr	x0, x0, #3
  407c50:	mul	x0, x0, x2
  407c54:	cmp	x0, w28, uxtw
  407c58:	b.eq	407f84 <ferror@plt+0x51b4>  // b.none
  407c5c:	mov	w5, #0x68                  	// #104
  407c60:	umaddl	x23, w28, w5, x1
  407c64:	ldr	x1, [x23, #40]
  407c68:	cbz	x1, 407c88 <ferror@plt+0x4eb8>
  407c6c:	cbz	w28, 407c88 <ferror@plt+0x4eb8>
  407c70:	add	w1, w28, #0x1
  407c74:	cmp	x0, x1
  407c78:	b.eq	407c88 <ferror@plt+0x4eb8>  // b.none
  407c7c:	ldr	w0, [x27, #56]
  407c80:	add	w0, w0, #0x1
  407c84:	str	w0, [x27, #56]
  407c88:	add	w0, w28, #0x1
  407c8c:	mov	w24, #0x0                   	// #0
  407c90:	mov	x19, #0x0                   	// #0
  407c94:	str	x0, [sp, #128]
  407c98:	ldp	x2, x1, [x23, #56]
  407c9c:	mov	w0, w24
  407ca0:	sub	x1, x1, x2
  407ca4:	asr	x1, x1, #5
  407ca8:	cmp	x1, w24, uxtw
  407cac:	b.ls	407f7c <ferror@plt+0x51ac>  // b.plast
  407cb0:	lsl	x1, x0, #5
  407cb4:	add	x0, x2, x0, lsl #5
  407cb8:	mov	w10, #0x90                  	// #144
  407cbc:	mov	w9, #0x0                   	// #0
  407cc0:	ldp	x11, x4, [x0, #8]
  407cc4:	ldr	w12, [x2, x1]
  407cc8:	mov	w1, #0xffffffff            	// #-1
  407ccc:	ldr	x0, [x20, #264]
  407cd0:	str	xzr, [x23, #80]
  407cd4:	str	w1, [x23, #88]
  407cd8:	sub	x4, x4, x11
  407cdc:	umaddl	x10, w12, w10, x0
  407ce0:	asr	x4, x4, #2
  407ce4:	mov	w0, w9
  407ce8:	cmp	x4, w9, uxtw
  407cec:	b.ls	407e1c <ferror@plt+0x504c>  // b.plast
  407cf0:	ldr	w1, [x11, x0, lsl #2]
  407cf4:	mov	w2, w12
  407cf8:	mov	x0, x27
  407cfc:	bl	40639c <ferror@plt+0x35cc>
  407d00:	tst	w0, #0xff
  407d04:	b.eq	407d80 <ferror@plt+0x4fb0>  // b.none
  407d08:	ldp	x2, x0, [x27, #112]
  407d0c:	ldr	w19, [x27, #88]
  407d10:	sub	w19, w1, w19
  407d14:	sub	x0, x0, x2
  407d18:	cmp	x19, x0, asr #6
  407d1c:	b.cc	407d38 <ferror@plt+0x4f68>  // b.lo, b.ul, b.last
  407d20:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  407d24:	add	x2, x2, #0x698
  407d28:	mov	w1, #0xa2c                 	// #2604
  407d2c:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  407d30:	add	x0, x0, #0x2e5
  407d34:	bl	402de0 <ferror@plt+0x10>
  407d38:	lsl	x1, x19, #6
  407d3c:	add	x19, x2, x19, lsl #6
  407d40:	ldrb	w13, [x23, #48]
  407d44:	ldrb	w0, [x19, #56]
  407d48:	orr	w3, w0, #0x1
  407d4c:	strb	w3, [x19, #56]
  407d50:	ldr	x3, [x23, #40]
  407d54:	tbnz	w13, #3, 407d6c <ferror@plt+0x4f9c>
  407d58:	orr	w13, w0, #0x3
  407d5c:	strb	w13, [x19, #56]
  407d60:	cbnz	x3, 407d6c <ferror@plt+0x4f9c>
  407d64:	orr	w0, w0, #0x7
  407d68:	strb	w0, [x19, #56]
  407d6c:	ldr	x0, [x2, x1]
  407d70:	add	x0, x0, x3
  407d74:	str	x0, [x2, x1]
  407d78:	add	w9, w9, #0x1
  407d7c:	b	407ce4 <ferror@plt+0x4f14>
  407d80:	ldp	x2, x0, [x10, #24]
  407d84:	mov	w19, w1
  407d88:	sub	x0, x0, x2
  407d8c:	asr	x0, x0, #6
  407d90:	cmp	x0, w1, uxtw
  407d94:	b.hi	407da8 <ferror@plt+0x4fd8>  // b.pmore
  407d98:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  407d9c:	mov	w1, #0xa39                 	// #2617
  407da0:	add	x2, x2, #0x698
  407da4:	b	407d2c <ferror@plt+0x4f5c>
  407da8:	lsl	x3, x19, #6
  407dac:	add	x19, x2, x19, lsl #6
  407db0:	ldr	x1, [x2, x3]
  407db4:	cbz	x26, 407de4 <ferror@plt+0x5014>
  407db8:	ldrb	w0, [x19, #56]
  407dbc:	tbnz	w0, #0, 407dcc <ferror@plt+0x4ffc>
  407dc0:	ldr	w0, [x26]
  407dc4:	add	w0, w0, #0x1
  407dc8:	str	w0, [x26]
  407dcc:	cbnz	x1, 407de4 <ferror@plt+0x5014>
  407dd0:	ldr	x0, [x23, #40]
  407dd4:	cbz	x0, 407de4 <ferror@plt+0x5014>
  407dd8:	ldr	w0, [x26, #4]
  407ddc:	add	w0, w0, #0x1
  407de0:	str	w0, [x26, #4]
  407de4:	ldrb	w0, [x19, #56]
  407de8:	ldrb	w14, [x23, #48]
  407dec:	orr	w13, w0, #0x1
  407df0:	strb	w13, [x19, #56]
  407df4:	ldr	x13, [x23, #40]
  407df8:	tbnz	w14, #3, 407e10 <ferror@plt+0x5040>
  407dfc:	orr	w14, w0, #0x3
  407e00:	strb	w14, [x19, #56]
  407e04:	cbnz	x13, 407e10 <ferror@plt+0x5040>
  407e08:	orr	w0, w0, #0x7
  407e0c:	strb	w0, [x19, #56]
  407e10:	add	x1, x1, x13
  407e14:	str	x1, [x2, x3]
  407e18:	b	407d78 <ferror@plt+0x4fa8>
  407e1c:	cbz	w28, 407f70 <ferror@plt+0x51a0>
  407e20:	ldp	x1, x0, [x25]
  407e24:	sub	x0, x0, x1
  407e28:	mov	x1, #0x4ec5                	// #20165
  407e2c:	movk	x1, #0xc4ec, lsl #16
  407e30:	asr	x0, x0, #3
  407e34:	movk	x1, #0xec4e, lsl #32
  407e38:	movk	x1, #0x4ec4, lsl #48
  407e3c:	mul	x0, x0, x1
  407e40:	ldr	x1, [sp, #128]
  407e44:	cmp	x1, x0
  407e48:	b.eq	407f70 <ferror@plt+0x51a0>  // b.none
  407e4c:	cbz	x19, 407f70 <ferror@plt+0x51a0>
  407e50:	add	x9, x19, #0x20
  407e54:	ldp	x1, x0, [x9, #8]
  407e58:	cmp	x1, x0
  407e5c:	b.eq	407ea4 <ferror@plt+0x50d4>  // b.none
  407e60:	str	x23, [x1], #8
  407e64:	str	x1, [x9, #8]
  407e68:	ldr	w0, [x20, #172]
  407e6c:	cbz	w0, 407f70 <ferror@plt+0x51a0>
  407e70:	ldr	x0, [x23]
  407e74:	str	x0, [sp, #216]
  407e78:	add	x0, x19, #0x8
  407e7c:	ldr	x1, [sp, #216]
  407e80:	cbz	x1, 407f70 <ferror@plt+0x51a0>
  407e84:	add	x1, sp, #0xd8
  407e88:	str	x0, [sp, #136]
  407e8c:	bl	40912c <ferror@plt+0x635c>
  407e90:	ldr	x1, [sp, #216]
  407e94:	ldr	x0, [sp, #136]
  407e98:	ldr	x1, [x1, #40]
  407e9c:	str	x1, [sp, #216]
  407ea0:	b	407e7c <ferror@plt+0x50ac>
  407ea4:	ldr	x10, [x19, #32]
  407ea8:	mov	x0, #0xfffffffffffffff     	// #1152921504606846975
  407eac:	sub	x2, x1, x10
  407eb0:	asr	x3, x2, #3
  407eb4:	cmp	x0, x2, asr #3
  407eb8:	b.ne	407ec8 <ferror@plt+0x50f8>  // b.any
  407ebc:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  407ec0:	add	x0, x0, #0xd02
  407ec4:	bl	402fd8 <ferror@plt+0x208>
  407ec8:	cmp	x3, #0x0
  407ecc:	csinc	x4, x3, xzr, ne  // ne = any
  407ed0:	adds	x3, x3, x4
  407ed4:	b.cs	407f68 <ferror@plt+0x5198>  // b.hs, b.nlast
  407ed8:	mov	x4, #0x0                   	// #0
  407edc:	cbz	x3, 407f0c <ferror@plt+0x513c>
  407ee0:	cmp	x3, x0
  407ee4:	csel	x3, x3, x0, ls  // ls = plast
  407ee8:	mov	x0, x3
  407eec:	stp	x3, x1, [sp, #136]
  407ef0:	stp	x10, x2, [sp, #152]
  407ef4:	str	x9, [sp, #168]
  407ef8:	bl	405be8 <ferror@plt+0x2e18>
  407efc:	ldp	x3, x1, [sp, #136]
  407f00:	mov	x4, x0
  407f04:	ldp	x10, x2, [sp, #152]
  407f08:	ldr	x9, [sp, #168]
  407f0c:	str	x23, [x4, x2]
  407f10:	mov	x0, x10
  407f14:	mov	x2, x4
  407f18:	stp	x1, x10, [sp, #136]
  407f1c:	stp	x4, x3, [sp, #152]
  407f20:	str	x9, [sp, #168]
  407f24:	bl	405c08 <ferror@plt+0x2e38>
  407f28:	ldr	x1, [sp, #136]
  407f2c:	add	x2, x0, #0x8
  407f30:	mov	x0, x1
  407f34:	bl	405c08 <ferror@plt+0x2e38>
  407f38:	mov	x1, x0
  407f3c:	ldr	x10, [sp, #144]
  407f40:	str	x1, [sp, #136]
  407f44:	mov	x0, x10
  407f48:	bl	40582c <ferror@plt+0x2a5c>
  407f4c:	ldp	x4, x3, [sp, #152]
  407f50:	ldr	x9, [sp, #168]
  407f54:	ldr	x1, [sp, #136]
  407f58:	add	x3, x4, x3, lsl #3
  407f5c:	stp	x4, x1, [x9]
  407f60:	str	x3, [x9, #16]
  407f64:	b	407e68 <ferror@plt+0x5098>
  407f68:	mov	x3, x0
  407f6c:	b	407ee8 <ferror@plt+0x5118>
  407f70:	add	w24, w24, #0x1
  407f74:	mov	w3, #0x1                   	// #1
  407f78:	b	407c98 <ferror@plt+0x4ec8>
  407f7c:	add	w28, w28, #0x1
  407f80:	b	407c2c <ferror@plt+0x4e5c>
  407f84:	cbnz	w3, 407fb4 <ferror@plt+0x51e4>
  407f88:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  407f8c:	ldr	x24, [x20, #192]
  407f90:	ldr	x19, [x0, #1440]
  407f94:	mov	x0, x27
  407f98:	bl	408d00 <ferror@plt+0x5f30>
  407f9c:	mov	x3, x0
  407fa0:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  407fa4:	mov	x2, x24
  407fa8:	add	x1, x1, #0x6a8
  407fac:	mov	x0, x19
  407fb0:	bl	40cc8c <ferror@plt+0x9ebc>
  407fb4:	ldr	w0, [x20, #416]
  407fb8:	cbz	w0, 407ff8 <ferror@plt+0x5228>
  407fbc:	adrp	x19, 495000 <_obstack_memory_used@@Base+0x505fc>
  407fc0:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  407fc4:	ldr	x3, [sp, #120]
  407fc8:	add	x2, x2, #0x6be
  407fcc:	ldr	x0, [x19, #1464]
  407fd0:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  407fd4:	add	x1, x1, #0x6c7
  407fd8:	bl	40cc8c <ferror@plt+0x9ebc>
  407fdc:	ldr	w0, [sp, #256]
  407fe0:	ldr	w1, [sp, #260]
  407fe4:	bl	40575c <ferror@plt+0x298c>
  407fe8:	ldr	x0, [x19, #1464]
  407fec:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x195fc>
  407ff0:	add	x1, x1, #0xafe
  407ff4:	bl	40cc8c <ferror@plt+0x9ebc>
  407ff8:	add	x21, x21, #0x8
  407ffc:	b	407bec <ferror@plt+0x4e1c>
  408000:	cbz	x22, 408038 <ferror@plt+0x5268>
  408004:	ldp	x0, x1, [x20, #240]
  408008:	add	x2, sp, #0xb8
  40800c:	mov	w3, #0x0                   	// #0
  408010:	str	x22, [sp, #184]
  408014:	bl	4099e4 <ferror@plt+0x6c14>
  408018:	ldr	x1, [x20, #248]
  40801c:	cmp	x1, x0
  408020:	b.eq	4081f4 <ferror@plt+0x5424>  // b.none
  408024:	ldr	w0, [x0, #8]
  408028:	mov	w2, #0x90                  	// #144
  40802c:	ldr	x1, [x20, #264]
  408030:	umaddl	x0, w0, w2, x1
  408034:	ldr	x22, [x0, #80]
  408038:	mov	x0, x22
  40803c:	bl	4446b4 <ferror@plt+0x418e4>
  408040:	mov	x19, x0
  408044:	bl	402700 <strlen@plt>
  408048:	add	x0, x0, #0xe
  40804c:	bl	44526c <_obstack_memory_used@@Base+0x868>
  408050:	str	x0, [sp, #120]
  408054:	mov	x2, x19
  408058:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  40805c:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  408060:	add	x3, x3, #0x6d0
  408064:	add	x1, x1, #0x221
  408068:	bl	4027a0 <sprintf@plt>
  40806c:	mov	x0, #0x38                  	// #56
  408070:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  408074:	stp	xzr, xzr, [x0]
  408078:	mov	x23, x0
  40807c:	stp	xzr, xzr, [x0, #16]
  408080:	stp	xzr, xzr, [x0, #32]
  408084:	str	xzr, [x0, #48]
  408088:	bl	408d18 <ferror@plt+0x5f48>
  40808c:	mov	x0, #0x10                  	// #16
  408090:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  408094:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  408098:	mov	x19, x0
  40809c:	add	x1, x1, #0x69f
  4080a0:	bl	40b570 <ferror@plt+0x87a0>
  4080a4:	mov	x2, x19
  4080a8:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4080ac:	add	x1, x1, #0x6de
  4080b0:	mov	x0, x23
  4080b4:	bl	40b780 <ferror@plt+0x89b0>
  4080b8:	mov	x0, #0x10                  	// #16
  4080bc:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  4080c0:	mov	x19, x0
  4080c4:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  4080c8:	add	x1, x1, #0x8af
  4080cc:	bl	40b570 <ferror@plt+0x87a0>
  4080d0:	mov	x0, x23
  4080d4:	mov	x2, x19
  4080d8:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4080dc:	add	x1, x1, #0x6ed
  4080e0:	bl	40b780 <ferror@plt+0x89b0>
  4080e4:	ldr	x0, [x20, #424]
  4080e8:	cbz	x0, 408114 <ferror@plt+0x5344>
  4080ec:	mov	x0, #0x10                  	// #16
  4080f0:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  4080f4:	ldr	x1, [x20, #424]
  4080f8:	mov	x19, x0
  4080fc:	bl	40b570 <ferror@plt+0x87a0>
  408100:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  408104:	mov	x2, x19
  408108:	add	x1, x1, #0x6f9
  40810c:	mov	x0, x23
  408110:	bl	40b780 <ferror@plt+0x89b0>
  408114:	mov	x0, #0x10                  	// #16
  408118:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  40811c:	mov	x1, x22
  408120:	mov	x19, x0
  408124:	bl	40b570 <ferror@plt+0x87a0>
  408128:	adrp	x27, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40812c:	mov	x2, x19
  408130:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  408134:	add	x1, x1, #0x713
  408138:	mov	x0, x23
  40813c:	bl	40b780 <ferror@plt+0x89b0>
  408140:	mov	x0, #0x10                  	// #16
  408144:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  408148:	mov	x25, x0
  40814c:	add	x0, x27, #0xc8
  408150:	mov	x2, x25
  408154:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  408158:	add	x1, x1, #0x6da
  40815c:	stp	x0, xzr, [x25]
  408160:	str	x0, [sp, #128]
  408164:	mov	x0, x23
  408168:	bl	40b780 <ferror@plt+0x89b0>
  40816c:	ldr	x19, [x20, #264]
  408170:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x215fc>
  408174:	add	x0, x0, #0x43d
  408178:	str	x0, [sp, #144]
  40817c:	ldr	x0, [x20, #272]
  408180:	cmp	x19, x0
  408184:	b.eq	408a4c <ferror@plt+0x5c7c>  // b.none
  408188:	ldr	w0, [x20, #432]
  40818c:	cbz	w0, 4081a0 <ferror@plt+0x53d0>
  408190:	ldr	x0, [x19, #80]
  408194:	ldrb	w0, [x0]
  408198:	cmp	w0, #0x2f
  40819c:	b.eq	408838 <ferror@plt+0x5a68>  // b.none
  4081a0:	ldr	x21, [x19, #96]
  4081a4:	ldr	x0, [x19, #104]
  4081a8:	cmp	x0, x21
  4081ac:	b.eq	40820c <ferror@plt+0x543c>  // b.none
  4081b0:	ldr	x28, [x21]
  4081b4:	ldr	w0, [x19]
  4081b8:	ldr	w1, [x28, #104]
  4081bc:	cmp	w1, w0
  4081c0:	b.ne	408204 <ferror@plt+0x5434>  // b.any
  4081c4:	ldrb	w0, [x28, #28]
  4081c8:	tbz	w0, #2, 408204 <ferror@plt+0x5434>
  4081cc:	ldr	x24, [x28, #112]
  4081d0:	ldr	x0, [x28, #120]
  4081d4:	cmp	x0, x24
  4081d8:	b.eq	408204 <ferror@plt+0x5434>  // b.none
  4081dc:	mov	x0, x24
  4081e0:	mov	x1, x19
  4081e4:	mov	w2, #0x0                   	// #0
  4081e8:	add	x24, x24, #0x40
  4081ec:	bl	406c9c <ferror@plt+0x3ecc>
  4081f0:	b	4081d0 <ferror@plt+0x5400>
  4081f4:	mov	x0, x22
  4081f8:	bl	4050a0 <ferror@plt+0x22d0>
  4081fc:	mov	x22, x0
  408200:	b	408038 <ferror@plt+0x5268>
  408204:	add	x21, x21, #0x8
  408208:	b	4081a4 <ferror@plt+0x53d4>
  40820c:	ldr	x21, [x19, #24]
  408210:	ldr	x0, [x19, #32]
  408214:	cmp	x0, x21
  408218:	b.eq	408234 <ferror@plt+0x5464>  // b.none
  40821c:	mov	x0, x21
  408220:	mov	x1, x19
  408224:	mov	w2, #0x1                   	// #1
  408228:	add	x21, x21, #0x40
  40822c:	bl	406c9c <ferror@plt+0x3ecc>
  408230:	b	408210 <ferror@plt+0x5440>
  408234:	ldr	w0, [x20, #436]
  408238:	cbnz	w0, 40831c <ferror@plt+0x554c>
  40823c:	ldp	x5, x7, [x19, #96]
  408240:	cmp	x7, x5
  408244:	b.eq	40831c <ferror@plt+0x554c>  // b.none
  408248:	ldr	x4, [x5]
  40824c:	ldr	w0, [x19]
  408250:	ldr	w1, [x4, #104]
  408254:	cmp	w1, w0
  408258:	b.ne	408314 <ferror@plt+0x5544>  // b.any
  40825c:	ldrb	w0, [x4, #28]
  408260:	tbz	w0, #2, 408314 <ferror@plt+0x5544>
  408264:	ldp	x6, x0, [x4, #112]
  408268:	mov	w8, #0x0                   	// #0
  40826c:	sub	x0, x0, x6
  408270:	asr	x9, x0, #6
  408274:	mov	w10, w8
  408278:	cmp	x9, w8, uxtw
  40827c:	b.ls	408314 <ferror@plt+0x5544>  // b.plast
  408280:	lsl	x3, x10, #6
  408284:	add	x10, x6, x10, lsl #6
  408288:	ldrb	w0, [x10, #56]
  40828c:	tbz	w0, #0, 40830c <ferror@plt+0x553c>
  408290:	ldr	w0, [x4, #88]
  408294:	ldr	x2, [x19, #24]
  408298:	add	w0, w8, w0
  40829c:	lsl	x11, x0, #6
  4082a0:	add	x0, x2, x0, lsl #6
  4082a4:	ldrb	w1, [x0, #56]
  4082a8:	tbnz	w1, #0, 4082b8 <ferror@plt+0x54e8>
  4082ac:	ldr	w1, [x19, #48]
  4082b0:	add	w1, w1, #0x1
  4082b4:	str	w1, [x19, #48]
  4082b8:	ldr	x1, [x2, x11]
  4082bc:	ldr	x12, [x6, x3]
  4082c0:	cbnz	x1, 4082d4 <ferror@plt+0x5504>
  4082c4:	cbz	x12, 4082d4 <ferror@plt+0x5504>
  4082c8:	ldr	w3, [x19, #52]
  4082cc:	add	w3, w3, #0x1
  4082d0:	str	w3, [x19, #52]
  4082d4:	add	x1, x1, x12
  4082d8:	str	x1, [x2, x11]
  4082dc:	ldrb	w1, [x0, #56]
  4082e0:	orr	w1, w1, #0x1
  4082e4:	strb	w1, [x0, #56]
  4082e8:	ldrb	w2, [x10, #56]
  4082ec:	tbz	w2, #2, 4082f8 <ferror@plt+0x5528>
  4082f0:	orr	w1, w1, #0x4
  4082f4:	strb	w1, [x0, #56]
  4082f8:	ldrb	w1, [x10, #56]
  4082fc:	tbz	w1, #1, 40830c <ferror@plt+0x553c>
  408300:	ldrb	w1, [x0, #56]
  408304:	orr	w1, w1, #0x2
  408308:	strb	w1, [x0, #56]
  40830c:	add	w8, w8, #0x1
  408310:	b	408274 <ferror@plt+0x54a4>
  408314:	add	x5, x5, #0x8
  408318:	b	408240 <ferror@plt+0x5470>
  40831c:	ldr	w0, [x20, #440]
  408320:	cbnz	w0, 4083e8 <ferror@plt+0x5618>
  408324:	adrp	x21, 495000 <_obstack_memory_used@@Base+0x505fc>
  408328:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  40832c:	ldr	x3, [x19, #80]
  408330:	add	x2, x2, #0x71d
  408334:	ldr	x0, [x21, #1464]
  408338:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  40833c:	add	x1, x1, #0x6c7
  408340:	bl	40cc8c <ferror@plt+0x9ebc>
  408344:	ldp	w0, w1, [x19, #48]
  408348:	bl	40575c <ferror@plt+0x298c>
  40834c:	ldr	w0, [x20, #172]
  408350:	cbz	w0, 4083e8 <ferror@plt+0x5618>
  408354:	ldr	w1, [x19, #56]
  408358:	ldr	x24, [x21, #1464]
  40835c:	cbz	w1, 4086d4 <ferror@plt+0x5904>
  408360:	ldrsw	x0, [x19, #60]
  408364:	sxtw	x1, w1
  408368:	mov	w2, #0x2                   	// #2
  40836c:	bl	4054b0 <ferror@plt+0x26e0>
  408370:	mov	x2, x0
  408374:	ldr	w3, [x19, #56]
  408378:	mov	x0, x24
  40837c:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  408380:	add	x1, x1, #0x722
  408384:	bl	40cc8c <ferror@plt+0x9ebc>
  408388:	ldrsw	x1, [x19, #56]
  40838c:	mov	w2, #0x2                   	// #2
  408390:	ldrsw	x0, [x19, #64]
  408394:	ldr	x24, [x21, #1464]
  408398:	bl	4054b0 <ferror@plt+0x26e0>
  40839c:	mov	x2, x0
  4083a0:	ldr	w3, [x19, #56]
  4083a4:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4083a8:	mov	x0, x24
  4083ac:	add	x1, x1, #0x73e
  4083b0:	bl	40cc8c <ferror@plt+0x9ebc>
  4083b4:	ldr	w1, [x19, #68]
  4083b8:	ldr	x21, [x21, #1464]
  4083bc:	cbz	w1, 4086e8 <ferror@plt+0x5918>
  4083c0:	ldrsw	x0, [x19, #72]
  4083c4:	sxtw	x1, w1
  4083c8:	mov	w2, #0x2                   	// #2
  4083cc:	bl	4054b0 <ferror@plt+0x26e0>
  4083d0:	mov	x2, x0
  4083d4:	ldr	w3, [x19, #68]
  4083d8:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4083dc:	mov	x0, x21
  4083e0:	add	x1, x1, #0x769
  4083e4:	bl	40cc8c <ferror@plt+0x9ebc>
  4083e8:	ldr	w0, [x20, #444]
  4083ec:	ldr	w1, [x19, #48]
  4083f0:	ldr	w2, [x20, #448]
  4083f4:	add	w0, w0, w1
  4083f8:	str	w0, [x20, #444]
  4083fc:	ldr	w0, [x19, #52]
  408400:	add	w0, w0, w2
  408404:	str	w0, [x20, #448]
  408408:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  40840c:	ldr	w0, [x0, #952]
  408410:	cbz	w0, 408838 <ferror@plt+0x5a68>
  408414:	ldr	w0, [x20, #436]
  408418:	cbz	w0, 40881c <ferror@plt+0x5a4c>
  40841c:	mov	x0, #0x38                  	// #56
  408420:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  408424:	stp	xzr, xzr, [x0]
  408428:	mov	x27, x0
  40842c:	stp	xzr, xzr, [x0, #16]
  408430:	stp	xzr, xzr, [x0, #32]
  408434:	str	xzr, [x0, #48]
  408438:	bl	408d18 <ferror@plt+0x5f48>
  40843c:	mov	x1, x27
  408440:	mov	x0, x25
  408444:	bl	40b440 <ferror@plt+0x8670>
  408448:	mov	x0, #0x10                  	// #16
  40844c:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  408450:	mov	x21, x0
  408454:	ldr	x1, [x19, #8]
  408458:	bl	40b570 <ferror@plt+0x87a0>
  40845c:	mov	x2, x21
  408460:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x215fc>
  408464:	add	x1, x1, #0x697
  408468:	mov	x0, x27
  40846c:	bl	40b780 <ferror@plt+0x89b0>
  408470:	mov	x0, #0x10                  	// #16
  408474:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  408478:	mov	x28, x0
  40847c:	mov	x2, x0
  408480:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  408484:	ldr	x0, [sp, #128]
  408488:	stp	x0, xzr, [x28]
  40848c:	add	x1, x1, #0x78c
  408490:	mov	x0, x27
  408494:	bl	40b780 <ferror@plt+0x89b0>
  408498:	ldp	x0, x1, [x19, #96]
  40849c:	mov	w2, #0x0                   	// #0
  4084a0:	bl	40ae7c <ferror@plt+0x80ac>
  4084a4:	ldr	x21, [x19, #96]
  4084a8:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4084ac:	add	x0, x0, #0x796
  4084b0:	str	x0, [sp, #136]
  4084b4:	ldr	x0, [x19, #104]
  4084b8:	cmp	x0, x21
  4084bc:	b.eq	4086fc <ferror@plt+0x592c>  // b.none
  4084c0:	mov	x0, #0x38                  	// #56
  4084c4:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  4084c8:	stp	xzr, xzr, [x0]
  4084cc:	mov	x26, x0
  4084d0:	stp	xzr, xzr, [x0, #16]
  4084d4:	stp	xzr, xzr, [x0, #32]
  4084d8:	str	xzr, [x0, #48]
  4084dc:	bl	408d18 <ferror@plt+0x5f48>
  4084e0:	ldr	x0, [x21]
  4084e4:	ldr	x1, [x0]
  4084e8:	mov	x0, #0x10                  	// #16
  4084ec:	str	x1, [sp, #152]
  4084f0:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  4084f4:	mov	x24, x0
  4084f8:	ldr	x1, [sp, #152]
  4084fc:	bl	40b570 <ferror@plt+0x87a0>
  408500:	ldr	x1, [sp, #144]
  408504:	mov	x2, x24
  408508:	mov	x0, x26
  40850c:	bl	40b780 <ferror@plt+0x89b0>
  408510:	ldr	x0, [x21]
  408514:	bl	408cbc <ferror@plt+0x5eec>
  408518:	mov	x1, x0
  40851c:	mov	x0, #0x10                  	// #16
  408520:	str	x1, [sp, #152]
  408524:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  408528:	mov	x24, x0
  40852c:	ldr	x1, [sp, #152]
  408530:	bl	40b570 <ferror@plt+0x87a0>
  408534:	ldr	x1, [sp, #136]
  408538:	mov	x2, x24
  40853c:	mov	x0, x26
  408540:	adrp	x24, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  408544:	add	x24, x24, #0xf8
  408548:	bl	40b780 <ferror@plt+0x89b0>
  40854c:	ldr	x0, [x21]
  408550:	ldr	w0, [x0, #88]
  408554:	ucvtf	d8, w0
  408558:	mov	x0, #0x10                  	// #16
  40855c:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  408560:	mov	x2, x0
  408564:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  408568:	mov	x0, x26
  40856c:	add	x1, x1, #0x7a5
  408570:	str	x24, [x2]
  408574:	str	d8, [x2, #8]
  408578:	bl	40b780 <ferror@plt+0x89b0>
  40857c:	ldr	x0, [x21]
  408580:	ldr	w0, [x0, #92]
  408584:	ucvtf	d8, w0
  408588:	mov	x0, #0x10                  	// #16
  40858c:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  408590:	mov	x2, x0
  408594:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  408598:	mov	x0, x26
  40859c:	add	x1, x1, #0x7b0
  4085a0:	str	x24, [x2]
  4085a4:	str	d8, [x2, #8]
  4085a8:	bl	40b780 <ferror@plt+0x89b0>
  4085ac:	ldr	x0, [x21]
  4085b0:	ldr	w0, [x0, #96]
  4085b4:	ucvtf	d8, w0
  4085b8:	mov	x0, #0x10                  	// #16
  4085bc:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  4085c0:	mov	x2, x0
  4085c4:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4085c8:	mov	x0, x26
  4085cc:	add	x1, x1, #0x7bd
  4085d0:	str	x24, [x2]
  4085d4:	str	d8, [x2, #8]
  4085d8:	bl	40b780 <ferror@plt+0x89b0>
  4085dc:	ldr	x0, [x21]
  4085e0:	ldr	w0, [x0, #100]
  4085e4:	ucvtf	d8, w0
  4085e8:	mov	x0, #0x10                  	// #16
  4085ec:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  4085f0:	mov	x2, x0
  4085f4:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4085f8:	mov	x0, x26
  4085fc:	add	x1, x1, #0x7c6
  408600:	str	x24, [x2]
  408604:	str	d8, [x2, #8]
  408608:	bl	40b780 <ferror@plt+0x89b0>
  40860c:	ldr	x0, [x21]
  408610:	ldr	x1, [x0, #40]
  408614:	ldr	x0, [x0, #32]
  408618:	sub	x1, x1, x0
  40861c:	mov	x0, #0x4ec5                	// #20165
  408620:	movk	x0, #0xc4ec, lsl #16
  408624:	asr	x1, x1, #3
  408628:	movk	x0, #0xec4e, lsl #32
  40862c:	movk	x0, #0x4ec4, lsl #48
  408630:	mul	x1, x1, x0
  408634:	mov	x0, #0x10                  	// #16
  408638:	sub	w1, w1, #0x2
  40863c:	ucvtf	d8, w1
  408640:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  408644:	mov	x2, x0
  408648:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  40864c:	mov	x0, x26
  408650:	add	x1, x1, #0xbc2
  408654:	str	x24, [x2]
  408658:	str	d8, [x2, #8]
  40865c:	bl	40b780 <ferror@plt+0x89b0>
  408660:	ldr	x0, [x21]
  408664:	ldr	w0, [x0, #56]
  408668:	ucvtf	d8, w0
  40866c:	mov	x0, #0x10                  	// #16
  408670:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  408674:	mov	x2, x0
  408678:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  40867c:	mov	x0, x26
  408680:	add	x1, x1, #0x7d1
  408684:	str	x24, [x2]
  408688:	str	d8, [x2, #8]
  40868c:	bl	40b780 <ferror@plt+0x89b0>
  408690:	ldr	x0, [x21], #8
  408694:	ldr	x0, [x0, #32]
  408698:	ldr	d8, [x0, #40]
  40869c:	mov	x0, #0x10                  	// #16
  4086a0:	scvtf	d8, d8
  4086a4:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  4086a8:	mov	x2, x0
  4086ac:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4086b0:	mov	x0, x26
  4086b4:	add	x1, x1, #0x7e1
  4086b8:	str	x24, [x2]
  4086bc:	str	d8, [x2, #8]
  4086c0:	bl	40b780 <ferror@plt+0x89b0>
  4086c4:	mov	x1, x26
  4086c8:	mov	x0, x28
  4086cc:	bl	40b440 <ferror@plt+0x8670>
  4086d0:	b	4084b4 <ferror@plt+0x56e4>
  4086d4:	mov	x0, x24
  4086d8:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4086dc:	add	x1, x1, #0x75c
  4086e0:	bl	40cc8c <ferror@plt+0x9ebc>
  4086e4:	b	4083b4 <ferror@plt+0x55e4>
  4086e8:	mov	x0, x21
  4086ec:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4086f0:	add	x1, x1, #0x782
  4086f4:	bl	40cc8c <ferror@plt+0x9ebc>
  4086f8:	b	4083e8 <ferror@plt+0x5618>
  4086fc:	mov	x0, #0x10                  	// #16
  408700:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  408704:	mov	x28, x0
  408708:	mov	x2, x0
  40870c:	ldr	x0, [sp, #128]
  408710:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  408714:	stp	x0, xzr, [x28]
  408718:	add	x1, x1, #0x701
  40871c:	mov	x0, x27
  408720:	mov	w21, #0x1                   	// #1
  408724:	mov	x24, #0x0                   	// #0
  408728:	bl	40b780 <ferror@plt+0x89b0>
  40872c:	ldp	x0, x1, [x19, #24]
  408730:	mov	w26, w21
  408734:	sub	x1, x1, x0
  408738:	asr	x1, x1, #6
  40873c:	cmp	x1, w21, uxtw
  408740:	b.cc	408838 <ferror@plt+0x5a68>  // b.lo, b.ul, b.last
  408744:	mov	w1, w21
  408748:	mov	x0, x19
  40874c:	bl	406f80 <ferror@plt+0x41b0>
  408750:	mov	x6, x0
  408754:	cbz	x0, 4087dc <ferror@plt+0x5a0c>
  408758:	ldr	x5, [x0]
  40875c:	ldr	x0, [x6, #8]
  408760:	cmp	x0, x5
  408764:	b.eq	4087dc <ferror@plt+0x5a0c>  // b.none
  408768:	ldr	x8, [x5]
  40876c:	mov	w7, #0x0                   	// #0
  408770:	ldrb	w0, [x8, #28]
  408774:	tst	x0, #0x4
  408778:	csel	x24, x24, x8, ne  // ne = any
  40877c:	ldp	x0, x2, [x8, #112]
  408780:	mov	w1, w7
  408784:	sub	x2, x2, x0
  408788:	asr	x2, x2, #6
  40878c:	cmp	x2, w7, uxtw
  408790:	b.ls	4087d4 <ferror@plt+0x5a04>  // b.plast
  408794:	add	x1, x0, x1, lsl #6
  408798:	ldrb	w0, [x1, #56]
  40879c:	tbz	w0, #0, 4087cc <ferror@plt+0x59fc>
  4087a0:	ldr	x0, [x5]
  4087a4:	add	w2, w21, w7
  4087a8:	str	w7, [sp, #136]
  4087ac:	stp	x5, x6, [sp, #152]
  4087b0:	ldr	x3, [x0]
  4087b4:	mov	x0, x28
  4087b8:	str	x8, [sp, #168]
  4087bc:	bl	4063d4 <ferror@plt+0x3604>
  4087c0:	ldp	x5, x6, [sp, #152]
  4087c4:	ldr	w7, [sp, #136]
  4087c8:	ldr	x8, [sp, #168]
  4087cc:	add	w7, w7, #0x1
  4087d0:	b	40877c <ferror@plt+0x59ac>
  4087d4:	add	x5, x5, #0x8
  4087d8:	b	40875c <ferror@plt+0x598c>
  4087dc:	ldp	x1, x2, [x19, #24]
  4087e0:	sub	x2, x2, x1
  4087e4:	cmp	x26, x2, asr #6
  4087e8:	b.cs	40880c <ferror@plt+0x5a3c>  // b.hs, b.nlast
  4087ec:	add	x1, x1, x26, lsl #6
  4087f0:	cbz	x24, 408814 <ferror@plt+0x5a44>
  4087f4:	ldr	x3, [x24]
  4087f8:	ldrb	w0, [x1, #56]
  4087fc:	tbz	w0, #0, 40880c <ferror@plt+0x5a3c>
  408800:	mov	w2, w21
  408804:	mov	x0, x28
  408808:	bl	4063d4 <ferror@plt+0x3604>
  40880c:	add	w21, w21, #0x1
  408810:	b	40872c <ferror@plt+0x595c>
  408814:	mov	x3, #0x0                   	// #0
  408818:	b	4087f8 <ferror@plt+0x5a28>
  40881c:	ldr	w0, [x20, #440]
  408820:	cbz	w0, 408840 <ferror@plt+0x5a70>
  408824:	cbz	w1, 408838 <ferror@plt+0x5a68>
  408828:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  40882c:	mov	x1, x19
  408830:	ldr	x0, [x0, #1464]
  408834:	bl	406fd0 <ferror@plt+0x4200>
  408838:	add	x19, x19, #0x90
  40883c:	b	40817c <ferror@plt+0x53ac>
  408840:	ldr	x24, [x19, #80]
  408844:	mov	x0, x24
  408848:	bl	402700 <strlen@plt>
  40884c:	ldr	w1, [x20, #452]
  408850:	add	x21, x0, #0xa
  408854:	cbz	w1, 408a04 <ferror@plt+0x5c34>
  408858:	mov	x1, x22
  40885c:	mov	x0, x24
  408860:	bl	402ad0 <strcmp@plt>
  408864:	cbz	w0, 408a04 <ferror@plt+0x5c34>
  408868:	mov	x0, x22
  40886c:	bl	402700 <strlen@plt>
  408870:	add	x0, x21, x0
  408874:	bl	44526c <_obstack_memory_used@@Base+0x868>
  408878:	mov	x1, x0
  40887c:	mov	x21, x0
  408880:	mov	x0, x22
  408884:	bl	4060b8 <ferror@plt+0x32e8>
  408888:	mov	x1, x0
  40888c:	mov	w0, #0x2323                	// #8995
  408890:	strh	w0, [x1], #2
  408894:	mov	x0, x24
  408898:	adrp	x28, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  40889c:	bl	4060b8 <ferror@plt+0x32e8>
  4088a0:	add	x28, x28, #0x7f1
  4088a4:	mov	x1, x28
  4088a8:	bl	402bd0 <strcpy@plt>
  4088ac:	ldr	w0, [x20, #456]
  4088b0:	cbz	w0, 408978 <ferror@plt+0x5ba8>
  4088b4:	add	x0, sp, #0x100
  4088b8:	bl	4405b8 <ferror@plt+0x3d7e8>
  4088bc:	mov	x0, x24
  4088c0:	bl	402700 <strlen@plt>
  4088c4:	add	x2, sp, #0x100
  4088c8:	mov	x1, x0
  4088cc:	mov	x0, x24
  4088d0:	bl	4410f8 <ferror@plt+0x3e328>
  4088d4:	add	x1, sp, #0xc8
  4088d8:	add	x0, sp, #0x100
  4088dc:	bl	441044 <ferror@plt+0x3e274>
  4088e0:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4088e4:	add	x4, sp, #0xd8
  4088e8:	add	x1, x1, #0xd00
  4088ec:	mov	x3, #0x0                   	// #0
  4088f0:	add	x0, sp, #0xc8
  4088f4:	str	x4, [sp, #136]
  4088f8:	str	x3, [sp, #152]
  4088fc:	ldrb	w2, [x0, x3]
  408900:	mov	x0, x4
  408904:	bl	4027a0 <sprintf@plt>
  408908:	ldr	x3, [sp, #152]
  40890c:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  408910:	ldr	x4, [sp, #136]
  408914:	add	x3, x3, #0x1
  408918:	add	x1, x0, #0xd00
  40891c:	cmp	x3, #0x10
  408920:	add	x4, x4, #0x2
  408924:	b.ne	4088f0 <ferror@plt+0x5b20>  // b.any
  408928:	mov	x0, x21
  40892c:	bl	402b30 <free@plt>
  408930:	mov	x0, x24
  408934:	bl	402700 <strlen@plt>
  408938:	add	x0, x0, #0x32
  40893c:	bl	44526c <_obstack_memory_used@@Base+0x868>
  408940:	mov	x1, x0
  408944:	mov	x21, x0
  408948:	mov	x0, x24
  40894c:	bl	4060b8 <ferror@plt+0x32e8>
  408950:	mov	x1, x0
  408954:	mov	w2, #0x2323                	// #8995
  408958:	add	x0, x0, #0x22
  40895c:	strh	w2, [x1], #2
  408960:	ldp	x2, x3, [sp, #216]
  408964:	stp	x2, x3, [x1]
  408968:	ldp	x2, x3, [sp, #232]
  40896c:	stp	x2, x3, [x1, #16]
  408970:	mov	x1, x28
  408974:	bl	402bd0 <strcpy@plt>
  408978:	ldr	w0, [x19, #48]
  40897c:	adrp	x28, 495000 <_obstack_memory_used@@Base+0x505fc>
  408980:	cbz	w0, 408a30 <ferror@plt+0x5c60>
  408984:	mov	x0, x21
  408988:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  40898c:	add	x1, x1, #0x1ca
  408990:	bl	402870 <fopen@plt>
  408994:	mov	x2, x21
  408998:	mov	x24, x0
  40899c:	cbz	x0, 408a18 <ferror@plt+0x5c48>
  4089a0:	ldr	x0, [x28, #1464]
  4089a4:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4089a8:	add	x1, x1, #0x7f7
  4089ac:	bl	40cc8c <ferror@plt+0x9ebc>
  4089b0:	mov	x1, x19
  4089b4:	mov	x0, x24
  4089b8:	bl	406fd0 <ferror@plt+0x4200>
  4089bc:	mov	x0, x24
  4089c0:	bl	402dd0 <ferror@plt>
  4089c4:	cbz	w0, 4089e0 <ferror@plt+0x5c10>
  4089c8:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  4089cc:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4089d0:	mov	x2, x21
  4089d4:	add	x1, x1, #0x806
  4089d8:	ldr	x0, [x0, #1440]
  4089dc:	bl	40cc8c <ferror@plt+0x9ebc>
  4089e0:	mov	x0, x24
  4089e4:	bl	402830 <fclose@plt>
  4089e8:	mov	x0, x21
  4089ec:	bl	402b30 <free@plt>
  4089f0:	ldr	x0, [x28, #1464]
  4089f4:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x195fc>
  4089f8:	add	x1, x1, #0xafe
  4089fc:	bl	40cc8c <ferror@plt+0x9ebc>
  408a00:	b	408838 <ferror@plt+0x5a68>
  408a04:	mov	x0, x21
  408a08:	bl	44526c <_obstack_memory_used@@Base+0x868>
  408a0c:	mov	x1, x0
  408a10:	mov	x21, x0
  408a14:	b	408894 <ferror@plt+0x5ac4>
  408a18:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  408a1c:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  408a20:	add	x1, x1, #0x826
  408a24:	ldr	x0, [x0, #1440]
  408a28:	bl	40cc8c <ferror@plt+0x9ebc>
  408a2c:	b	4089e8 <ferror@plt+0x5c18>
  408a30:	mov	x0, x21
  408a34:	bl	402d70 <unlink@plt>
  408a38:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  408a3c:	mov	x2, x21
  408a40:	ldr	x0, [x28, #1464]
  408a44:	add	x1, x1, #0x847
  408a48:	b	408a28 <ferror@plt+0x5c58>
  408a4c:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  408a50:	ldr	w0, [x0, #952]
  408a54:	cbz	w0, 408a80 <ferror@plt+0x5cb0>
  408a58:	ldr	w0, [x20, #436]
  408a5c:	cbz	w0, 408a80 <ferror@plt+0x5cb0>
  408a60:	ldr	w0, [x20, #440]
  408a64:	cbz	w0, 408aa0 <ferror@plt+0x5cd0>
  408a68:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  408a6c:	ldr	x1, [x0, #1464]
  408a70:	mov	x0, x23
  408a74:	bl	40b9e4 <ferror@plt+0x8c14>
  408a78:	mov	w0, #0xa                   	// #10
  408a7c:	bl	402d10 <putchar@plt>
  408a80:	ldp	x19, x20, [sp, #16]
  408a84:	ldp	x21, x22, [sp, #32]
  408a88:	ldp	x23, x24, [sp, #48]
  408a8c:	ldp	x25, x26, [sp, #64]
  408a90:	ldp	x27, x28, [sp, #80]
  408a94:	ldr	d8, [sp, #96]
  408a98:	ldp	x29, x30, [sp], #416
  408a9c:	ret
  408aa0:	add	x0, sp, #0x100
  408aa4:	mov	w1, #0x0                   	// #0
  408aa8:	bl	4132bc <ferror@plt+0x104ec>
  408aac:	add	x1, sp, #0x100
  408ab0:	mov	x0, x23
  408ab4:	bl	40b5c0 <ferror@plt+0x87f0>
  408ab8:	add	x0, sp, #0x100
  408abc:	bl	413324 <ferror@plt+0x10554>
  408ac0:	ldr	x0, [sp, #120]
  408ac4:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  408ac8:	add	x1, x1, #0x1ca
  408acc:	bl	402bc0 <gzopen@plt>
  408ad0:	mov	x19, x0
  408ad4:	cbnz	x0, 408afc <ferror@plt+0x5d2c>
  408ad8:	ldr	x2, [sp, #120]
  408adc:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  408ae0:	add	x1, x1, #0x856
  408ae4:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  408ae8:	ldr	x0, [x0, #1440]
  408aec:	bl	40cc8c <ferror@plt+0x9ebc>
  408af0:	add	x0, sp, #0x100
  408af4:	bl	413174 <ferror@plt+0x103a4>
  408af8:	b	408a80 <ferror@plt+0x5cb0>
  408afc:	add	x0, sp, #0x100
  408b00:	bl	413324 <ferror@plt+0x10554>
  408b04:	mov	x1, x0
  408b08:	mov	x0, x19
  408b0c:	bl	402a60 <gzputs@plt>
  408b10:	cmn	w0, #0x1
  408b14:	b.ne	408b28 <ferror@plt+0x5d58>  // b.any
  408b18:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  408b1c:	add	x1, x1, #0x877
  408b20:	ldr	x2, [sp, #120]
  408b24:	b	408ae4 <ferror@plt+0x5d14>
  408b28:	mov	x0, x19
  408b2c:	bl	4026d0 <gzclose@plt>
  408b30:	cbnz	w0, 408b18 <ferror@plt+0x5d48>
  408b34:	b	408af0 <ferror@plt+0x5d20>
  408b38:	ldrb	w0, [x0, #28]
  408b3c:	ubfx	x0, x0, #1, #1
  408b40:	ret
  408b44:	ldr	x0, [x0]
  408b48:	b	405844 <ferror@plt+0x2a74>
  408b4c:	ldr	x0, [x0]
  408b50:	b	405850 <ferror@plt+0x2a80>
  408b54:	mov	x2, x1
  408b58:	stp	x29, x30, [sp, #-16]!
  408b5c:	mov	x29, sp
  408b60:	ldr	x1, [x0]
  408b64:	ldr	x0, [x2]
  408b68:	bl	402ad0 <strcmp@plt>
  408b6c:	cmp	w0, #0x0
  408b70:	cset	w0, eq  // eq = none
  408b74:	ldp	x29, x30, [sp], #16
  408b78:	ret
  408b7c:	mov	x4, x2
  408b80:	mov	x3, x0
  408b84:	cmp	x3, x1
  408b88:	b.eq	408bb8 <ferror@plt+0x5de8>  // b.none
  408b8c:	ldr	w5, [x3]
  408b90:	add	x4, x4, #0x20
  408b94:	stur	w5, [x4, #-32]
  408b98:	add	x3, x3, #0x20
  408b9c:	ldur	x5, [x3, #-24]
  408ba0:	stur	x5, [x4, #-24]
  408ba4:	ldur	x5, [x3, #-16]
  408ba8:	stur	x5, [x4, #-16]
  408bac:	ldur	x5, [x3, #-8]
  408bb0:	stur	x5, [x4, #-8]
  408bb4:	b	408b84 <ferror@plt+0x5db4>
  408bb8:	sub	x0, x3, x0
  408bbc:	add	x0, x2, x0
  408bc0:	ret
  408bc4:	ldr	x0, [x0]
  408bc8:	b	405838 <ferror@plt+0x2a68>
  408bcc:	mov	w3, #0x79b9                	// #31161
  408bd0:	movk	w3, #0x9e37, lsl #16
  408bd4:	sub	w3, w3, w1
  408bd8:	sub	w3, w3, w0
  408bdc:	sub	w0, w0, w1
  408be0:	eor	w3, w3, w1, lsr #13
  408be4:	sub	w0, w0, w3
  408be8:	sub	w2, w1, w3
  408bec:	eor	w0, w0, w3, lsl #8
  408bf0:	sub	w2, w2, w0
  408bf4:	sub	w3, w3, w0
  408bf8:	eor	w2, w2, w0, lsr #13
  408bfc:	sub	w3, w3, w2
  408c00:	sub	w1, w0, w2
  408c04:	eor	w3, w3, w2, lsr #12
  408c08:	sub	w1, w1, w3
  408c0c:	sub	w0, w2, w3
  408c10:	eor	w1, w1, w3, lsl #16
  408c14:	sub	w0, w0, w1
  408c18:	sub	w3, w3, w1
  408c1c:	eor	w0, w0, w1, lsr #5
  408c20:	sub	w3, w3, w0
  408c24:	sub	w1, w1, w0
  408c28:	eor	w3, w3, w0, lsr #3
  408c2c:	sub	w1, w1, w3
  408c30:	sub	w0, w0, w3
  408c34:	eor	w1, w1, w3, lsl #10
  408c38:	sub	w0, w0, w1
  408c3c:	eor	w0, w0, w1, lsr #15
  408c40:	ret
  408c44:	ubfiz	x1, x1, #4, #32
  408c48:	adrp	x4, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  408c4c:	add	x4, x4, #0x1b0
  408c50:	add	x5, x4, x1
  408c54:	ldr	w1, [x4, x1]
  408c58:	ldr	w2, [x5, #4]
  408c5c:	umull	x2, w0, w2
  408c60:	lsr	x2, x2, #32
  408c64:	sub	w3, w0, w2
  408c68:	add	w2, w2, w3, lsr #1
  408c6c:	ldr	w3, [x5, #12]
  408c70:	lsr	w2, w2, w3
  408c74:	msub	w0, w2, w1, w0
  408c78:	ret
  408c7c:	ubfiz	x1, x1, #4, #32
  408c80:	adrp	x4, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  408c84:	add	x4, x4, #0x1b0
  408c88:	add	w6, w0, #0x1
  408c8c:	add	x5, x4, x1
  408c90:	ldr	w2, [x5, #8]
  408c94:	umull	x2, w0, w2
  408c98:	lsr	x3, x2, #32
  408c9c:	sub	w2, w0, w3
  408ca0:	ldr	w0, [x5, #12]
  408ca4:	add	w2, w3, w2, lsr #1
  408ca8:	lsr	w2, w2, w0
  408cac:	ldr	w0, [x4, x1]
  408cb0:	sub	w0, w0, #0x2
  408cb4:	msub	w0, w2, w0, w6
  408cb8:	ret
  408cbc:	stp	x29, x30, [sp, #-32]!
  408cc0:	mov	x29, sp
  408cc4:	str	x19, [sp, #16]
  408cc8:	mov	x19, x0
  408ccc:	ldr	x0, [x0, #8]
  408cd0:	cbnz	x0, 408cf0 <ferror@plt+0x5f20>
  408cd4:	ldr	x0, [x19]
  408cd8:	mov	w1, #0x1                   	// #1
  408cdc:	bl	43ac70 <ferror@plt+0x37ea0>
  408ce0:	str	x0, [x19, #8]
  408ce4:	cbnz	x0, 408cf0 <ferror@plt+0x5f20>
  408ce8:	ldr	x0, [x19]
  408cec:	str	x0, [x19, #8]
  408cf0:	ldr	x0, [x19, #8]
  408cf4:	ldr	x19, [sp, #16]
  408cf8:	ldp	x29, x30, [sp], #32
  408cfc:	ret
  408d00:	adrp	x2, 495000 <_obstack_memory_used@@Base+0x505fc>
  408d04:	ldr	w2, [x2, #1676]
  408d08:	cbz	w2, 408d10 <ferror@plt+0x5f40>
  408d0c:	b	408cbc <ferror@plt+0x5eec>
  408d10:	ldr	x0, [x0]
  408d14:	ret
  408d18:	stp	x29, x30, [sp, #-48]!
  408d1c:	mov	x29, sp
  408d20:	stp	x19, x20, [sp, #16]
  408d24:	mov	x19, x0
  408d28:	mov	x20, x0
  408d2c:	stp	x21, x22, [sp, #32]
  408d30:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  408d34:	add	x0, x0, #0x98
  408d38:	str	x0, [x19], #8
  408d3c:	mov	x0, #0xd                   	// #13
  408d40:	stp	xzr, xzr, [x19, #16]
  408d44:	str	xzr, [x20, #40]
  408d48:	strb	wzr, [x19, #44]
  408d4c:	bl	40bcbc <ferror@plt+0x8eec>
  408d50:	mov	w21, w0
  408d54:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  408d58:	add	x0, x0, #0x1b0
  408d5c:	ubfiz	x1, x21, #4, #32
  408d60:	ldr	w22, [x0, x1]
  408d64:	mov	x1, #0x10                  	// #16
  408d68:	mov	x0, x22
  408d6c:	bl	4452a0 <_obstack_memory_used@@Base+0x89c>
  408d70:	mov	x1, #0x0                   	// #0
  408d74:	cmp	x22, x1
  408d78:	b.ls	408d8c <ferror@plt+0x5fbc>  // b.plast
  408d7c:	lsl	x2, x1, #4
  408d80:	add	x1, x1, #0x1
  408d84:	str	xzr, [x0, x2]
  408d88:	b	408d74 <ferror@plt+0x5fa4>
  408d8c:	str	x0, [x20, #8]
  408d90:	str	x22, [x19, #8]
  408d94:	str	w21, [x19, #40]
  408d98:	ldp	x19, x20, [sp, #16]
  408d9c:	ldp	x21, x22, [sp, #32]
  408da0:	ldp	x29, x30, [sp], #48
  408da4:	ret
  408da8:	stp	x29, x30, [sp, #-32]!
  408dac:	mov	w1, #0x0                   	// #0
  408db0:	mov	x29, sp
  408db4:	str	x19, [sp, #16]
  408db8:	mov	x19, x0
  408dbc:	ldr	w0, [x0]
  408dc0:	bl	408bcc <ferror@plt+0x5dfc>
  408dc4:	mov	w1, w0
  408dc8:	ldr	w0, [x19, #4]
  408dcc:	ldr	x19, [sp, #16]
  408dd0:	ldp	x29, x30, [sp], #32
  408dd4:	b	408bcc <ferror@plt+0x5dfc>
  408dd8:	ldr	x0, [x0]
  408ddc:	b	40582c <ferror@plt+0x2a5c>
  408de0:	cbz	x1, 408ef0 <ferror@plt+0x6120>
  408de4:	stp	x29, x30, [sp, #-80]!
  408de8:	mov	x29, sp
  408dec:	stp	x19, x20, [sp, #16]
  408df0:	mov	x19, x1
  408df4:	mov	x20, x0
  408df8:	stp	x23, x24, [sp, #48]
  408dfc:	ldp	x23, x1, [x0]
  408e00:	stp	x21, x22, [sp, #32]
  408e04:	mov	x22, #0xfffffffffffffff     	// #1152921504606846975
  408e08:	ldr	x0, [x0, #16]
  408e0c:	str	x25, [sp, #64]
  408e10:	sub	x23, x1, x23
  408e14:	sub	x0, x0, x1
  408e18:	asr	x24, x23, #3
  408e1c:	sub	x2, x22, x23, asr #3
  408e20:	cmp	x19, x0, asr #3
  408e24:	b.hi	408e5c <ferror@plt+0x608c>  // b.pmore
  408e28:	mov	x0, #0x0                   	// #0
  408e2c:	str	xzr, [x1, x0, lsl #3]
  408e30:	add	x0, x0, #0x1
  408e34:	cmp	x19, x0
  408e38:	b.ne	408e2c <ferror@plt+0x605c>  // b.any
  408e3c:	add	x19, x1, x19, lsl #3
  408e40:	str	x19, [x20, #8]
  408e44:	ldp	x19, x20, [sp, #16]
  408e48:	ldp	x21, x22, [sp, #32]
  408e4c:	ldp	x23, x24, [sp, #48]
  408e50:	ldr	x25, [sp, #64]
  408e54:	ldp	x29, x30, [sp], #80
  408e58:	ret
  408e5c:	cmp	x2, x19
  408e60:	b.cs	408e70 <ferror@plt+0x60a0>  // b.hs, b.nlast
  408e64:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  408e68:	add	x0, x0, #0xce8
  408e6c:	bl	402fd8 <ferror@plt+0x208>
  408e70:	cmp	x24, x19
  408e74:	mov	x25, #0x0                   	// #0
  408e78:	csel	x21, x24, x19, cs  // cs = hs, nlast
  408e7c:	add	x21, x24, x21
  408e80:	cmp	x21, x22
  408e84:	csel	x21, x21, x22, ls  // ls = plast
  408e88:	lsl	x22, x21, #3
  408e8c:	mov	x0, x22
  408e90:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  408e94:	mov	x21, x0
  408e98:	add	x23, x0, x23
  408e9c:	str	xzr, [x23, x25, lsl #3]
  408ea0:	add	x25, x25, #0x1
  408ea4:	cmp	x19, x25
  408ea8:	b.ne	408e9c <ferror@plt+0x60cc>  // b.any
  408eac:	ldp	x19, x2, [x20]
  408eb0:	sub	x2, x2, x19
  408eb4:	cmp	x2, #0x0
  408eb8:	b.le	408ed4 <ferror@plt+0x6104>
  408ebc:	mov	x1, x19
  408ec0:	mov	x0, x21
  408ec4:	bl	4026b0 <memmove@plt>
  408ec8:	mov	x0, x19
  408ecc:	bl	445770 <_obstack_memory_used@@Base+0xd6c>
  408ed0:	b	408ed8 <ferror@plt+0x6108>
  408ed4:	cbnz	x19, 408ec8 <ferror@plt+0x60f8>
  408ed8:	add	x0, x24, x25
  408edc:	add	x0, x21, x0, lsl #3
  408ee0:	stp	x21, x0, [x20]
  408ee4:	add	x21, x21, x22
  408ee8:	str	x21, [x20, #16]
  408eec:	b	408e44 <ferror@plt+0x6074>
  408ef0:	ret
  408ef4:	stp	x29, x30, [sp, #-48]!
  408ef8:	mov	x29, sp
  408efc:	stp	x19, x20, [sp, #16]
  408f00:	mov	x20, x0
  408f04:	mov	x19, x1
  408f08:	str	x21, [sp, #32]
  408f0c:	cbz	x19, 408f30 <ferror@plt+0x6160>
  408f10:	ldr	x1, [x19, #24]
  408f14:	mov	x0, x20
  408f18:	bl	408ef4 <ferror@plt+0x6124>
  408f1c:	ldr	x21, [x19, #16]
  408f20:	mov	x0, x19
  408f24:	bl	445770 <_obstack_memory_used@@Base+0xd6c>
  408f28:	mov	x19, x21
  408f2c:	b	408f0c <ferror@plt+0x613c>
  408f30:	ldp	x19, x20, [sp, #16]
  408f34:	ldr	x21, [sp, #32]
  408f38:	ldp	x29, x30, [sp], #48
  408f3c:	ret
  408f40:	ldr	x1, [x0, #16]
  408f44:	b	408ef4 <ferror@plt+0x6124>
  408f48:	stp	x29, x30, [sp, #-80]!
  408f4c:	mov	x29, sp
  408f50:	stp	x19, x20, [sp, #16]
  408f54:	mov	x20, x0
  408f58:	stp	x21, x22, [sp, #32]
  408f5c:	ldp	x21, x0, [x0, #8]
  408f60:	stp	x23, x24, [sp, #48]
  408f64:	mov	x23, x1
  408f68:	str	x25, [sp, #64]
  408f6c:	cmp	x21, x0
  408f70:	b.eq	408f98 <ferror@plt+0x61c8>  // b.none
  408f74:	ldr	x0, [x1]
  408f78:	str	x0, [x21], #8
  408f7c:	str	x21, [x20, #8]
  408f80:	ldp	x19, x20, [sp, #16]
  408f84:	ldp	x21, x22, [sp, #32]
  408f88:	ldp	x23, x24, [sp, #48]
  408f8c:	ldr	x25, [sp, #64]
  408f90:	ldp	x29, x30, [sp], #80
  408f94:	ret
  408f98:	ldr	x24, [x20]
  408f9c:	mov	x0, #0xfffffffffffffff     	// #1152921504606846975
  408fa0:	sub	x25, x21, x24
  408fa4:	asr	x1, x25, #3
  408fa8:	cmp	x0, x25, asr #3
  408fac:	b.ne	408fbc <ferror@plt+0x61ec>  // b.any
  408fb0:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  408fb4:	add	x0, x0, #0xd02
  408fb8:	bl	402fd8 <ferror@plt+0x208>
  408fbc:	cmp	x1, #0x0
  408fc0:	csinc	x19, x1, xzr, ne  // ne = any
  408fc4:	adds	x19, x19, x1
  408fc8:	b.cs	40902c <ferror@plt+0x625c>  // b.hs, b.nlast
  408fcc:	mov	x22, #0x0                   	// #0
  408fd0:	cbz	x19, 408fe8 <ferror@plt+0x6218>
  408fd4:	cmp	x19, x0
  408fd8:	csel	x19, x19, x0, ls  // ls = plast
  408fdc:	mov	x0, x19
  408fe0:	bl	405be8 <ferror@plt+0x2e18>
  408fe4:	mov	x22, x0
  408fe8:	ldr	x0, [x23]
  408fec:	str	x0, [x22, x25]
  408ff0:	mov	x1, x21
  408ff4:	mov	x2, x22
  408ff8:	mov	x0, x24
  408ffc:	bl	405c08 <ferror@plt+0x2e38>
  409000:	mov	x1, x21
  409004:	add	x2, x0, #0x8
  409008:	mov	x0, x21
  40900c:	bl	405c08 <ferror@plt+0x2e38>
  409010:	add	x19, x22, x19, lsl #3
  409014:	mov	x21, x0
  409018:	mov	x0, x24
  40901c:	bl	40582c <ferror@plt+0x2a5c>
  409020:	stp	x22, x21, [x20]
  409024:	str	x19, [x20, #16]
  409028:	b	408f80 <ferror@plt+0x61b0>
  40902c:	mov	x19, x0
  409030:	b	408fdc <ferror@plt+0x620c>
  409034:	stp	x29, x30, [sp, #-80]!
  409038:	mov	x29, sp
  40903c:	stp	x23, x24, [sp, #48]
  409040:	ldp	x24, x23, [x0]
  409044:	stp	x19, x20, [sp, #16]
  409048:	stp	x21, x22, [sp, #32]
  40904c:	mov	x22, x0
  409050:	mov	x0, #0xfffffffffffffff     	// #1152921504606846975
  409054:	stp	x25, x26, [sp, #64]
  409058:	mov	x25, x1
  40905c:	sub	x1, x23, x24
  409060:	cmp	x0, x1, asr #3
  409064:	b.ne	409074 <ferror@plt+0x62a4>  // b.any
  409068:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  40906c:	add	x0, x0, #0xd02
  409070:	bl	402fd8 <ferror@plt+0x208>
  409074:	asr	x19, x1, #3
  409078:	mov	x26, x2
  40907c:	cmp	x19, #0x0
  409080:	sub	x20, x25, x24
  409084:	csinc	x1, x19, xzr, ne  // ne = any
  409088:	adds	x19, x19, x1
  40908c:	b.cs	409124 <ferror@plt+0x6354>  // b.hs, b.nlast
  409090:	mov	x21, #0x0                   	// #0
  409094:	cbz	x19, 4090ac <ferror@plt+0x62dc>
  409098:	cmp	x19, x0
  40909c:	csel	x19, x19, x0, ls  // ls = plast
  4090a0:	lsl	x0, x19, #3
  4090a4:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  4090a8:	mov	x21, x0
  4090ac:	ldr	x0, [x26]
  4090b0:	str	x0, [x21, x20]
  4090b4:	cmp	x20, #0x0
  4090b8:	b.le	4090cc <ferror@plt+0x62fc>
  4090bc:	mov	x2, x20
  4090c0:	mov	x1, x24
  4090c4:	mov	x0, x21
  4090c8:	bl	4026b0 <memmove@plt>
  4090cc:	add	x20, x20, #0x8
  4090d0:	sub	x23, x23, x25
  4090d4:	add	x20, x21, x20
  4090d8:	cmp	x23, #0x0
  4090dc:	b.le	4090f0 <ferror@plt+0x6320>
  4090e0:	mov	x2, x23
  4090e4:	mov	x1, x25
  4090e8:	mov	x0, x20
  4090ec:	bl	4026a0 <memcpy@plt>
  4090f0:	add	x20, x20, x23
  4090f4:	cbz	x24, 409100 <ferror@plt+0x6330>
  4090f8:	mov	x0, x24
  4090fc:	bl	445770 <_obstack_memory_used@@Base+0xd6c>
  409100:	add	x19, x21, x19, lsl #3
  409104:	ldp	x23, x24, [sp, #48]
  409108:	ldp	x25, x26, [sp, #64]
  40910c:	stp	x21, x20, [x22]
  409110:	str	x19, [x22, #16]
  409114:	ldp	x19, x20, [sp, #16]
  409118:	ldp	x21, x22, [sp, #32]
  40911c:	ldp	x29, x30, [sp], #80
  409120:	ret
  409124:	mov	x19, x0
  409128:	b	4090a0 <ferror@plt+0x62d0>
  40912c:	mov	x2, x1
  409130:	mov	x3, x0
  409134:	ldp	x1, x4, [x0, #8]
  409138:	cmp	x1, x4
  40913c:	b.eq	409150 <ferror@plt+0x6380>  // b.none
  409140:	ldr	x0, [x2]
  409144:	str	x0, [x1], #8
  409148:	str	x1, [x3, #8]
  40914c:	ret
  409150:	b	409034 <ferror@plt+0x6264>
  409154:	cbz	x1, 4092d0 <ferror@plt+0x6500>
  409158:	stp	x29, x30, [sp, #-80]!
  40915c:	mov	x29, sp
  409160:	stp	x19, x20, [sp, #16]
  409164:	mov	x20, x0
  409168:	ldp	x19, x2, [x0]
  40916c:	stp	x21, x22, [sp, #32]
  409170:	mov	x21, x1
  409174:	ldr	x0, [x0, #16]
  409178:	stp	x23, x24, [sp, #48]
  40917c:	mov	x23, #0x1ffffffffffffff     	// #144115188075855871
  409180:	sub	x19, x2, x19
  409184:	sub	x0, x0, x2
  409188:	stp	x25, x26, [sp, #64]
  40918c:	sub	x1, x23, x19, asr #6
  409190:	asr	x25, x19, #6
  409194:	cmp	x21, x0, asr #6
  409198:	b.hi	4091d4 <ferror@plt+0x6404>  // b.pmore
  40919c:	mov	x0, x2
  4091a0:	mov	x3, x21
  4091a4:	bl	406140 <ferror@plt+0x3370>
  4091a8:	add	x0, x0, #0x40
  4091ac:	subs	x3, x3, #0x1
  4091b0:	b.ne	4091a4 <ferror@plt+0x63d4>  // b.any
  4091b4:	add	x21, x2, x21, lsl #6
  4091b8:	str	x21, [x20, #8]
  4091bc:	ldp	x19, x20, [sp, #16]
  4091c0:	ldp	x21, x22, [sp, #32]
  4091c4:	ldp	x23, x24, [sp, #48]
  4091c8:	ldp	x25, x26, [sp, #64]
  4091cc:	ldp	x29, x30, [sp], #80
  4091d0:	ret
  4091d4:	cmp	x1, x21
  4091d8:	b.cs	4091e8 <ferror@plt+0x6418>  // b.hs, b.nlast
  4091dc:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4091e0:	add	x0, x0, #0xce8
  4091e4:	bl	402fd8 <ferror@plt+0x208>
  4091e8:	cmp	x25, x21
  4091ec:	csel	x24, x25, x21, cs  // cs = hs, nlast
  4091f0:	add	x24, x25, x24
  4091f4:	cmp	x24, x23
  4091f8:	csel	x24, x24, x23, ls  // ls = plast
  4091fc:	lsl	x24, x24, #6
  409200:	mov	x0, x24
  409204:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  409208:	mov	x2, x21
  40920c:	mov	x23, x0
  409210:	add	x0, x0, x19
  409214:	bl	406140 <ferror@plt+0x3370>
  409218:	add	x0, x0, #0x40
  40921c:	subs	x2, x2, #0x1
  409220:	b.ne	409214 <ferror@plt+0x6444>  // b.any
  409224:	ldp	x19, x26, [x20]
  409228:	mov	x22, x23
  40922c:	cmp	x26, x19
  409230:	b.eq	4092ac <ferror@plt+0x64dc>  // b.none
  409234:	ldr	x0, [x19]
  409238:	str	x0, [x22]
  40923c:	ldr	x0, [x19, #8]
  409240:	str	x0, [x22, #8]
  409244:	ldr	x0, [x19, #16]
  409248:	str	x0, [x22, #16]
  40924c:	ldr	x0, [x19, #24]
  409250:	str	x0, [x22, #24]
  409254:	stp	xzr, xzr, [x19, #8]
  409258:	str	xzr, [x19, #24]
  40925c:	ldr	x0, [x19, #32]
  409260:	str	x0, [x22, #32]
  409264:	ldr	x0, [x19, #40]
  409268:	str	x0, [x22, #40]
  40926c:	ldr	x0, [x19, #48]
  409270:	str	x0, [x22, #48]
  409274:	stp	xzr, xzr, [x19, #32]
  409278:	ldrb	w1, [x19, #56]
  40927c:	str	xzr, [x19, #48]
  409280:	ldrb	w0, [x22, #56]
  409284:	bfxil	w0, w1, #0, #3
  409288:	strb	w0, [x22, #56]
  40928c:	ldr	x0, [x19, #32]
  409290:	bl	40582c <ferror@plt+0x2a5c>
  409294:	ldr	x0, [x19, #8]
  409298:	cbz	x0, 4092a0 <ferror@plt+0x64d0>
  40929c:	bl	445770 <_obstack_memory_used@@Base+0xd6c>
  4092a0:	add	x19, x19, #0x40
  4092a4:	add	x22, x22, #0x40
  4092a8:	b	40922c <ferror@plt+0x645c>
  4092ac:	ldr	x0, [x20]
  4092b0:	cbz	x0, 4092b8 <ferror@plt+0x64e8>
  4092b4:	bl	445770 <_obstack_memory_used@@Base+0xd6c>
  4092b8:	add	x21, x25, x21
  4092bc:	add	x21, x23, x21, lsl #6
  4092c0:	stp	x23, x21, [x20]
  4092c4:	add	x23, x23, x24
  4092c8:	str	x23, [x20, #16]
  4092cc:	b	4091bc <ferror@plt+0x63ec>
  4092d0:	ret
  4092d4:	stp	x29, x30, [sp, #-80]!
  4092d8:	mov	x29, sp
  4092dc:	stp	x23, x24, [sp, #48]
  4092e0:	ldp	x24, x23, [x0]
  4092e4:	stp	x19, x20, [sp, #16]
  4092e8:	stp	x21, x22, [sp, #32]
  4092ec:	mov	x22, x0
  4092f0:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
  4092f4:	stp	x25, x26, [sp, #64]
  4092f8:	mov	x25, x1
  4092fc:	sub	x1, x23, x24
  409300:	cmp	x0, x1, asr #2
  409304:	b.ne	409314 <ferror@plt+0x6544>  // b.any
  409308:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  40930c:	add	x0, x0, #0xd02
  409310:	bl	402fd8 <ferror@plt+0x208>
  409314:	asr	x19, x1, #2
  409318:	mov	x26, x2
  40931c:	cmp	x19, #0x0
  409320:	sub	x20, x25, x24
  409324:	csinc	x1, x19, xzr, ne  // ne = any
  409328:	adds	x19, x19, x1
  40932c:	b.cs	4093c4 <ferror@plt+0x65f4>  // b.hs, b.nlast
  409330:	mov	x21, #0x0                   	// #0
  409334:	cbz	x19, 40934c <ferror@plt+0x657c>
  409338:	cmp	x19, x0
  40933c:	csel	x19, x19, x0, ls  // ls = plast
  409340:	lsl	x0, x19, #2
  409344:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  409348:	mov	x21, x0
  40934c:	ldr	w0, [x26]
  409350:	cmp	x20, #0x0
  409354:	str	w0, [x21, x20]
  409358:	b.le	40936c <ferror@plt+0x659c>
  40935c:	mov	x2, x20
  409360:	mov	x1, x24
  409364:	mov	x0, x21
  409368:	bl	4026b0 <memmove@plt>
  40936c:	add	x20, x20, #0x4
  409370:	sub	x23, x23, x25
  409374:	add	x20, x21, x20
  409378:	cmp	x23, #0x0
  40937c:	b.le	409390 <ferror@plt+0x65c0>
  409380:	mov	x2, x23
  409384:	mov	x1, x25
  409388:	mov	x0, x20
  40938c:	bl	4026a0 <memcpy@plt>
  409390:	add	x20, x20, x23
  409394:	cbz	x24, 4093a0 <ferror@plt+0x65d0>
  409398:	mov	x0, x24
  40939c:	bl	445770 <_obstack_memory_used@@Base+0xd6c>
  4093a0:	add	x19, x21, x19, lsl #2
  4093a4:	ldp	x23, x24, [sp, #48]
  4093a8:	ldp	x25, x26, [sp, #64]
  4093ac:	stp	x21, x20, [x22]
  4093b0:	str	x19, [x22, #16]
  4093b4:	ldp	x19, x20, [sp, #16]
  4093b8:	ldp	x21, x22, [sp, #32]
  4093bc:	ldp	x29, x30, [sp], #80
  4093c0:	ret
  4093c4:	mov	x19, x0
  4093c8:	b	409340 <ferror@plt+0x6570>
  4093cc:	mov	x3, x0
  4093d0:	mov	x0, x2
  4093d4:	mov	x4, #0xfffffffffffffff     	// #1152921504606846975
  4093d8:	ldp	x2, x5, [x3]
  4093dc:	sub	x5, x5, x2
  4093e0:	asr	x3, x5, #3
  4093e4:	sub	x5, x4, x5, asr #3
  4093e8:	cmp	x5, x1
  4093ec:	b.cs	4093fc <ferror@plt+0x662c>  // b.hs, b.nlast
  4093f0:	stp	x29, x30, [sp, #-16]!
  4093f4:	mov	x29, sp
  4093f8:	bl	402fd8 <ferror@plt+0x208>
  4093fc:	cmp	x1, x3
  409400:	csel	x1, x1, x3, cs  // cs = hs, nlast
  409404:	adds	x3, x3, x1
  409408:	b.cs	409418 <ferror@plt+0x6648>  // b.hs, b.nlast
  40940c:	cmp	x3, x4
  409410:	csel	x0, x3, x4, ls  // ls = plast
  409414:	ret
  409418:	mov	x0, x4
  40941c:	ret
  409420:	stp	x29, x30, [sp, #-64]!
  409424:	mov	x29, sp
  409428:	stp	x19, x20, [sp, #16]
  40942c:	stp	x21, x22, [sp, #32]
  409430:	mov	x22, x1
  409434:	mov	x21, x0
  409438:	ldp	x19, x1, [x0, #8]
  40943c:	stp	x23, x24, [sp, #48]
  409440:	cmp	x19, x1
  409444:	b.eq	409468 <ferror@plt+0x6698>  // b.none
  409448:	ldr	x0, [x22]
  40944c:	str	x0, [x19], #8
  409450:	str	x19, [x21, #8]
  409454:	ldp	x19, x20, [sp, #16]
  409458:	ldp	x21, x22, [sp, #32]
  40945c:	ldp	x23, x24, [sp, #48]
  409460:	ldp	x29, x30, [sp], #64
  409464:	ret
  409468:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  40946c:	mov	x1, #0x1                   	// #1
  409470:	add	x2, x2, #0xd02
  409474:	bl	4093cc <ferror@plt+0x65fc>
  409478:	ldr	x23, [x21]
  40947c:	lsl	x24, x0, #3
  409480:	sub	x19, x19, x23
  409484:	cbz	x0, 4094e4 <ferror@plt+0x6714>
  409488:	mov	x1, #0xfffffffffffffff     	// #1152921504606846975
  40948c:	cmp	x0, x1
  409490:	b.ls	409498 <ferror@plt+0x66c8>  // b.plast
  409494:	bl	402e40 <ferror@plt+0x70>
  409498:	mov	x0, x24
  40949c:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  4094a0:	mov	x20, x0
  4094a4:	ldr	x0, [x22]
  4094a8:	str	x0, [x20, x19]
  4094ac:	cmp	x19, #0x0
  4094b0:	b.le	4094c4 <ferror@plt+0x66f4>
  4094b4:	mov	x2, x19
  4094b8:	mov	x1, x23
  4094bc:	mov	x0, x20
  4094c0:	bl	4026b0 <memmove@plt>
  4094c4:	add	x19, x19, #0x8
  4094c8:	mov	x0, x23
  4094cc:	add	x19, x20, x19
  4094d0:	bl	405838 <ferror@plt+0x2a68>
  4094d4:	stp	x20, x19, [x21]
  4094d8:	add	x20, x20, x24
  4094dc:	str	x20, [x21, #16]
  4094e0:	b	409454 <ferror@plt+0x6684>
  4094e4:	mov	x20, #0x0                   	// #0
  4094e8:	b	4094a4 <ferror@plt+0x66d4>
  4094ec:	cbz	x1, 4095ec <ferror@plt+0x681c>
  4094f0:	stp	x29, x30, [sp, #-80]!
  4094f4:	mov	x29, sp
  4094f8:	stp	x23, x24, [sp, #48]
  4094fc:	ldp	x23, x2, [x0]
  409500:	stp	x19, x20, [sp, #16]
  409504:	mov	x19, x0
  409508:	ldr	x3, [x0, #16]
  40950c:	stp	x21, x22, [sp, #32]
  409510:	mov	x20, x1
  409514:	sub	x23, x2, x23
  409518:	sub	x3, x3, x2
  40951c:	str	x25, [sp, #64]
  409520:	asr	x24, x23, #3
  409524:	cmp	x1, x3, asr #3
  409528:	b.hi	409560 <ferror@plt+0x6790>  // b.pmore
  40952c:	mov	x0, #0x0                   	// #0
  409530:	str	xzr, [x2, x0, lsl #3]
  409534:	add	x0, x0, #0x1
  409538:	cmp	x20, x0
  40953c:	b.ne	409530 <ferror@plt+0x6760>  // b.any
  409540:	add	x20, x2, x20, lsl #3
  409544:	str	x20, [x19, #8]
  409548:	ldp	x19, x20, [sp, #16]
  40954c:	ldp	x21, x22, [sp, #32]
  409550:	ldp	x23, x24, [sp, #48]
  409554:	ldr	x25, [sp, #64]
  409558:	ldp	x29, x30, [sp], #80
  40955c:	ret
  409560:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  409564:	add	x2, x2, #0xce8
  409568:	bl	4093cc <ferror@plt+0x65fc>
  40956c:	mov	x21, x0
  409570:	cbz	x0, 4095e4 <ferror@plt+0x6814>
  409574:	mov	x0, #0xfffffffffffffff     	// #1152921504606846975
  409578:	cmp	x21, x0
  40957c:	b.ls	409584 <ferror@plt+0x67b4>  // b.plast
  409580:	bl	402e40 <ferror@plt+0x70>
  409584:	lsl	x0, x21, #3
  409588:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  40958c:	mov	x22, x0
  409590:	add	x23, x22, x23
  409594:	mov	x25, #0x0                   	// #0
  409598:	str	xzr, [x23, x25, lsl #3]
  40959c:	add	x25, x25, #0x1
  4095a0:	cmp	x20, x25
  4095a4:	b.ne	409598 <ferror@plt+0x67c8>  // b.any
  4095a8:	ldp	x20, x2, [x19]
  4095ac:	sub	x2, x2, x20
  4095b0:	cmp	x2, #0x0
  4095b4:	b.le	4095c4 <ferror@plt+0x67f4>
  4095b8:	mov	x1, x20
  4095bc:	mov	x0, x22
  4095c0:	bl	4026b0 <memmove@plt>
  4095c4:	add	x24, x24, x25
  4095c8:	mov	x0, x20
  4095cc:	add	x21, x22, x21, lsl #3
  4095d0:	bl	405838 <ferror@plt+0x2a68>
  4095d4:	add	x24, x22, x24, lsl #3
  4095d8:	stp	x22, x24, [x19]
  4095dc:	str	x21, [x19, #16]
  4095e0:	b	409548 <ferror@plt+0x6778>
  4095e4:	mov	x22, #0x0                   	// #0
  4095e8:	b	409590 <ferror@plt+0x67c0>
  4095ec:	ret
  4095f0:	sub	x4, x1, x0
  4095f4:	asr	x4, x4, #5
  4095f8:	mov	x3, x0
  4095fc:	cmp	x4, #0x0
  409600:	b.le	40965c <ferror@plt+0x688c>
  409604:	ldr	x6, [x0]
  409608:	ldr	x5, [x2]
  40960c:	cmp	x5, x6
  409610:	b.eq	409624 <ferror@plt+0x6854>  // b.none
  409614:	ldr	x6, [x0, #8]
  409618:	cmp	x5, x6
  40961c:	b.ne	409628 <ferror@plt+0x6858>  // b.any
  409620:	add	x0, x0, #0x8
  409624:	ret
  409628:	ldr	x6, [x0, #16]
  40962c:	cmp	x5, x6
  409630:	b.ne	40963c <ferror@plt+0x686c>  // b.any
  409634:	add	x0, x0, #0x10
  409638:	b	409624 <ferror@plt+0x6854>
  40963c:	ldr	x6, [x0, #24]
  409640:	add	x0, x0, #0x20
  409644:	cmp	x5, x6
  409648:	b.ne	409654 <ferror@plt+0x6884>  // b.any
  40964c:	add	x0, x3, #0x18
  409650:	b	409624 <ferror@plt+0x6854>
  409654:	sub	x4, x4, #0x1
  409658:	b	4095f8 <ferror@plt+0x6828>
  40965c:	sub	x4, x1, x0
  409660:	cmp	x4, #0x10
  409664:	b.eq	4096a4 <ferror@plt+0x68d4>  // b.none
  409668:	cmp	x4, #0x18
  40966c:	b.eq	409690 <ferror@plt+0x68c0>  // b.none
  409670:	cmp	x4, #0x8
  409674:	b.ne	409688 <ferror@plt+0x68b8>  // b.any
  409678:	ldr	x0, [x2]
  40967c:	ldr	x4, [x3]
  409680:	cmp	x4, x0
  409684:	b.eq	4096b4 <ferror@plt+0x68e4>  // b.none
  409688:	mov	x0, x1
  40968c:	b	409624 <ferror@plt+0x6854>
  409690:	ldr	x5, [x0]
  409694:	ldr	x4, [x2]
  409698:	cmp	x5, x4
  40969c:	b.eq	409624 <ferror@plt+0x6854>  // b.none
  4096a0:	add	x3, x0, #0x8
  4096a4:	ldr	x0, [x2]
  4096a8:	ldr	x4, [x3]
  4096ac:	cmp	x4, x0
  4096b0:	b.ne	4096bc <ferror@plt+0x68ec>  // b.any
  4096b4:	mov	x0, x3
  4096b8:	b	409624 <ferror@plt+0x6854>
  4096bc:	add	x3, x3, #0x8
  4096c0:	b	409678 <ferror@plt+0x68a8>
  4096c4:	stp	x29, x30, [sp, #-96]!
  4096c8:	mov	x29, sp
  4096cc:	stp	x23, x24, [sp, #48]
  4096d0:	stp	x27, x28, [sp, #80]
  4096d4:	ldp	x27, x23, [x0]
  4096d8:	stp	x21, x22, [sp, #32]
  4096dc:	mov	x22, x0
  4096e0:	stp	x19, x20, [sp, #16]
  4096e4:	mov	x20, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4096e8:	movk	x20, #0xaaab
  4096ec:	stp	x25, x26, [sp, #64]
  4096f0:	mov	x25, x1
  4096f4:	sub	x0, x23, x27
  4096f8:	mov	x1, #0x5555555555555555    	// #6148914691236517205
  4096fc:	asr	x0, x0, #3
  409700:	movk	x1, #0x555, lsl #48
  409704:	mul	x0, x0, x20
  409708:	cmp	x0, x1
  40970c:	b.ne	40971c <ferror@plt+0x694c>  // b.any
  409710:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  409714:	add	x0, x0, #0xd02
  409718:	bl	402fd8 <ferror@plt+0x208>
  40971c:	cmp	x0, #0x0
  409720:	mov	x21, x2
  409724:	csinc	x20, x0, xzr, ne  // ne = any
  409728:	sub	x19, x25, x27
  40972c:	adds	x20, x20, x0
  409730:	b.cs	409880 <ferror@plt+0x6ab0>  // b.hs, b.nlast
  409734:	mov	x24, #0x0                   	// #0
  409738:	cbz	x20, 409754 <ferror@plt+0x6984>
  40973c:	cmp	x20, x1
  409740:	csel	x20, x20, x1, ls  // ls = plast
  409744:	mov	x0, #0x18                  	// #24
  409748:	mul	x0, x20, x0
  40974c:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  409750:	mov	x24, x0
  409754:	add	x0, x24, x19
  409758:	mov	x26, x24
  40975c:	ldr	x1, [x21]
  409760:	str	x1, [x24, x19]
  409764:	ldr	x1, [x21, #8]
  409768:	stp	xzr, xzr, [x21]
  40976c:	str	x1, [x0, #8]
  409770:	ldr	x1, [x21, #16]
  409774:	str	xzr, [x21, #16]
  409778:	mov	x21, x27
  40977c:	str	x1, [x0, #16]
  409780:	add	x26, x26, #0x18
  409784:	cmp	x25, x21
  409788:	b.ne	409800 <ferror@plt+0x6a30>  // b.any
  40978c:	mov	x1, #0xaaab                	// #43691
  409790:	lsr	x21, x19, #3
  409794:	movk	x1, #0xaaaa, lsl #16
  409798:	mov	x19, #0x18                  	// #24
  40979c:	movk	x1, #0xaaaa, lsl #32
  4097a0:	movk	x1, #0xaaa, lsl #48
  4097a4:	mov	x28, x1
  4097a8:	mul	x21, x21, x1
  4097ac:	and	x21, x21, #0x1fffffffffffffff
  4097b0:	madd	x26, x21, x19, x19
  4097b4:	madd	x21, x21, x19, x27
  4097b8:	add	x26, x24, x26
  4097bc:	mov	x25, x26
  4097c0:	mov	x19, x21
  4097c4:	cmp	x19, x23
  4097c8:	b.eq	409830 <ferror@plt+0x6a60>  // b.none
  4097cc:	ldr	x0, [x19]
  4097d0:	str	x0, [x25]
  4097d4:	add	x25, x25, #0x18
  4097d8:	ldr	x0, [x19, #8]
  4097dc:	stur	x0, [x25, #-16]
  4097e0:	ldr	x0, [x19, #16]
  4097e4:	stur	x0, [x25, #-8]
  4097e8:	stp	xzr, xzr, [x19]
  4097ec:	mov	x0, x19
  4097f0:	add	x19, x19, #0x18
  4097f4:	stur	xzr, [x19, #-8]
  4097f8:	bl	408dd8 <ferror@plt+0x6008>
  4097fc:	b	4097c4 <ferror@plt+0x69f4>
  409800:	ldr	x0, [x21]
  409804:	stur	x0, [x26, #-24]
  409808:	ldr	x0, [x21, #8]
  40980c:	stur	x0, [x26, #-16]
  409810:	ldr	x0, [x21, #16]
  409814:	stur	x0, [x26, #-8]
  409818:	stp	xzr, xzr, [x21]
  40981c:	mov	x0, x21
  409820:	add	x21, x21, #0x18
  409824:	stur	xzr, [x21, #-8]
  409828:	bl	408dd8 <ferror@plt+0x6008>
  40982c:	b	409780 <ferror@plt+0x69b0>
  409830:	sub	x19, x19, x21
  409834:	mov	x0, #0x18                  	// #24
  409838:	lsr	x19, x19, #3
  40983c:	mul	x19, x19, x28
  409840:	and	x19, x19, #0x1fffffffffffffff
  409844:	madd	x19, x19, x0, x26
  409848:	cbz	x27, 409854 <ferror@plt+0x6a84>
  40984c:	mov	x0, x27
  409850:	bl	445770 <_obstack_memory_used@@Base+0xd6c>
  409854:	mov	x0, #0x18                  	// #24
  409858:	ldp	x25, x26, [sp, #64]
  40985c:	madd	x20, x20, x0, x24
  409860:	ldp	x27, x28, [sp, #80]
  409864:	stp	x24, x19, [x22]
  409868:	str	x20, [x22, #16]
  40986c:	ldp	x19, x20, [sp, #16]
  409870:	ldp	x21, x22, [sp, #32]
  409874:	ldp	x23, x24, [sp, #48]
  409878:	ldp	x29, x30, [sp], #96
  40987c:	ret
  409880:	mov	x20, x1
  409884:	b	409744 <ferror@plt+0x6974>
  409888:	stp	x29, x30, [sp, #-96]!
  40988c:	mov	x29, sp
  409890:	stp	x19, x20, [sp, #16]
  409894:	mov	x19, x0
  409898:	stp	x21, x22, [sp, #32]
  40989c:	ldr	w22, [x0, #40]
  4098a0:	stp	x23, x24, [sp, #48]
  4098a4:	ldp	x23, x20, [x0]
  4098a8:	stp	x25, x26, [sp, #64]
  4098ac:	ldp	x1, x0, [x0, #16]
  4098b0:	str	x27, [sp, #80]
  4098b4:	add	x24, x23, x20, lsl #4
  4098b8:	sub	x1, x1, x0
  4098bc:	lsl	x0, x1, #1
  4098c0:	cmp	x20, x1, lsl #1
  4098c4:	b.cc	4098dc <ferror@plt+0x6b0c>  // b.lo, b.ul, b.last
  4098c8:	lsl	w1, w1, #3
  4098cc:	cmp	x20, x1
  4098d0:	b.ls	4098f4 <ferror@plt+0x6b24>  // b.plast
  4098d4:	cmp	x20, #0x20
  4098d8:	b.ls	4098f4 <ferror@plt+0x6b24>  // b.plast
  4098dc:	bl	40bcbc <ferror@plt+0x8eec>
  4098e0:	mov	w22, w0
  4098e4:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4098e8:	add	x0, x0, #0x1b0
  4098ec:	ubfiz	x1, x22, #4, #32
  4098f0:	ldr	w20, [x0, x1]
  4098f4:	ldrb	w0, [x19, #44]
  4098f8:	mov	x1, x20
  4098fc:	mov	x25, x23
  409900:	bl	405b24 <ferror@plt+0x2d54>
  409904:	mov	x26, x0
  409908:	ldp	x0, x1, [x19, #16]
  40990c:	stp	x26, x20, [x19]
  409910:	str	w22, [x19, #40]
  409914:	sub	x0, x0, x1
  409918:	stp	x0, xzr, [x19, #16]
  40991c:	ldr	w0, [x25, #4]
  409920:	add	w0, w0, #0x3
  409924:	cmp	w0, #0x1
  409928:	b.ls	409990 <ferror@plt+0x6bc0>  // b.plast
  40992c:	mov	x0, x25
  409930:	bl	408da8 <ferror@plt+0x5fd8>
  409934:	mov	w1, w22
  409938:	mov	w27, w0
  40993c:	bl	408c44 <ferror@plt+0x5e74>
  409940:	mov	w21, w0
  409944:	ubfiz	x1, x21, #4, #32
  409948:	add	x1, x26, x1
  40994c:	ldr	w0, [x1, #4]
  409950:	cmn	w0, #0x3
  409954:	b.eq	409988 <ferror@plt+0x6bb8>  // b.none
  409958:	mov	w1, w22
  40995c:	mov	w0, w27
  409960:	bl	408c7c <ferror@plt+0x5eac>
  409964:	add	w21, w21, w0
  409968:	cmp	x20, w21, uxtw
  40996c:	b.hi	409974 <ferror@plt+0x6ba4>  // b.pmore
  409970:	sub	w21, w21, w20
  409974:	ubfiz	x1, x21, #4, #32
  409978:	add	x1, x26, x1
  40997c:	ldr	w2, [x1, #4]
  409980:	cmn	w2, #0x3
  409984:	b.ne	409964 <ferror@plt+0x6b94>  // b.any
  409988:	ldp	x2, x3, [x25]
  40998c:	stp	x2, x3, [x1]
  409990:	add	x25, x25, #0x10
  409994:	cmp	x24, x25
  409998:	b.hi	40991c <ferror@plt+0x6b4c>  // b.pmore
  40999c:	ldrb	w0, [x19, #44]
  4099a0:	cbnz	w0, 4099c4 <ferror@plt+0x6bf4>
  4099a4:	mov	x0, x23
  4099a8:	ldp	x19, x20, [sp, #16]
  4099ac:	ldp	x21, x22, [sp, #32]
  4099b0:	ldp	x23, x24, [sp, #48]
  4099b4:	ldp	x25, x26, [sp, #64]
  4099b8:	ldr	x27, [sp, #80]
  4099bc:	ldp	x29, x30, [sp], #96
  4099c0:	b	402b30 <free@plt>
  4099c4:	mov	x0, x23
  4099c8:	ldp	x19, x20, [sp, #16]
  4099cc:	ldp	x21, x22, [sp, #32]
  4099d0:	ldp	x23, x24, [sp, #48]
  4099d4:	ldp	x25, x26, [sp, #64]
  4099d8:	ldr	x27, [sp, #80]
  4099dc:	ldp	x29, x30, [sp], #96
  4099e0:	b	40c0d8 <ferror@plt+0x9308>
  4099e4:	stp	x29, x30, [sp, #-64]!
  4099e8:	mov	x29, sp
  4099ec:	str	x23, [sp, #48]
  4099f0:	sub	x23, x1, x0
  4099f4:	stp	x19, x20, [sp, #16]
  4099f8:	mov	x20, x1
  4099fc:	mov	x19, x0
  409a00:	asr	x23, x23, #6
  409a04:	stp	x21, x22, [sp, #32]
  409a08:	mov	x22, x2
  409a0c:	mov	x21, x19
  409a10:	cmp	x23, #0x0
  409a14:	b.le	409a80 <ferror@plt+0x6cb0>
  409a18:	mov	x1, x19
  409a1c:	mov	x0, x22
  409a20:	bl	408b54 <ferror@plt+0x5d84>
  409a24:	tst	w0, #0xff
  409a28:	b.ne	409acc <ferror@plt+0x6cfc>  // b.any
  409a2c:	add	x21, x19, #0x10
  409a30:	mov	x0, x22
  409a34:	mov	x1, x21
  409a38:	bl	408b54 <ferror@plt+0x5d84>
  409a3c:	tst	w0, #0xff
  409a40:	b.ne	409acc <ferror@plt+0x6cfc>  // b.any
  409a44:	add	x21, x19, #0x20
  409a48:	mov	x0, x22
  409a4c:	mov	x1, x21
  409a50:	bl	408b54 <ferror@plt+0x5d84>
  409a54:	tst	w0, #0xff
  409a58:	b.ne	409acc <ferror@plt+0x6cfc>  // b.any
  409a5c:	add	x21, x19, #0x30
  409a60:	mov	x0, x22
  409a64:	mov	x1, x21
  409a68:	add	x19, x19, #0x40
  409a6c:	bl	408b54 <ferror@plt+0x5d84>
  409a70:	tst	w0, #0xff
  409a74:	b.ne	409acc <ferror@plt+0x6cfc>  // b.any
  409a78:	sub	x23, x23, #0x1
  409a7c:	b	409a0c <ferror@plt+0x6c3c>
  409a80:	sub	x0, x20, x19
  409a84:	cmp	x0, #0x20
  409a88:	b.eq	409ae8 <ferror@plt+0x6d18>  // b.none
  409a8c:	cmp	x0, #0x30
  409a90:	b.eq	409ab8 <ferror@plt+0x6ce8>  // b.none
  409a94:	cmp	x0, #0x10
  409a98:	b.ne	409ab0 <ferror@plt+0x6ce0>  // b.any
  409a9c:	mov	x1, x21
  409aa0:	mov	x0, x22
  409aa4:	bl	408b54 <ferror@plt+0x5d84>
  409aa8:	tst	w0, #0xff
  409aac:	b.ne	409acc <ferror@plt+0x6cfc>  // b.any
  409ab0:	mov	x21, x20
  409ab4:	b	409acc <ferror@plt+0x6cfc>
  409ab8:	mov	x1, x19
  409abc:	mov	x0, x22
  409ac0:	bl	408b54 <ferror@plt+0x5d84>
  409ac4:	tst	w0, #0xff
  409ac8:	b.eq	409ae4 <ferror@plt+0x6d14>  // b.none
  409acc:	mov	x0, x21
  409ad0:	ldp	x19, x20, [sp, #16]
  409ad4:	ldp	x21, x22, [sp, #32]
  409ad8:	ldr	x23, [sp, #48]
  409adc:	ldp	x29, x30, [sp], #64
  409ae0:	ret
  409ae4:	add	x21, x19, #0x10
  409ae8:	mov	x1, x21
  409aec:	mov	x0, x22
  409af0:	bl	408b54 <ferror@plt+0x5d84>
  409af4:	tst	w0, #0xff
  409af8:	b.ne	409acc <ferror@plt+0x6cfc>  // b.any
  409afc:	add	x21, x21, #0x10
  409b00:	b	409a9c <ferror@plt+0x6ccc>
  409b04:	mov	x4, x0
  409b08:	mov	x0, x2
  409b0c:	ldp	x2, x3, [x4]
  409b10:	mov	x4, #0x38e3                	// #14563
  409b14:	movk	x4, #0xe38e, lsl #16
  409b18:	movk	x4, #0x8e38, lsl #32
  409b1c:	movk	x4, #0xe3, lsl #48
  409b20:	sub	x3, x3, x2
  409b24:	mov	x2, #0x8e39                	// #36409
  409b28:	movk	x2, #0x38e3, lsl #16
  409b2c:	asr	x3, x3, #4
  409b30:	movk	x2, #0xe38e, lsl #32
  409b34:	movk	x2, #0x8e38, lsl #48
  409b38:	mul	x3, x3, x2
  409b3c:	sub	x2, x4, x3
  409b40:	cmp	x2, x1
  409b44:	b.cs	409b54 <ferror@plt+0x6d84>  // b.hs, b.nlast
  409b48:	stp	x29, x30, [sp, #-16]!
  409b4c:	mov	x29, sp
  409b50:	bl	402fd8 <ferror@plt+0x208>
  409b54:	cmp	x1, x3
  409b58:	csel	x1, x1, x3, cs  // cs = hs, nlast
  409b5c:	adds	x3, x3, x1
  409b60:	b.cs	409b70 <ferror@plt+0x6da0>  // b.hs, b.nlast
  409b64:	cmp	x3, x4
  409b68:	csel	x0, x3, x4, ls  // ls = plast
  409b6c:	ret
  409b70:	mov	x0, x4
  409b74:	ret
  409b78:	mov	x3, x0
  409b7c:	mov	x0, x2
  409b80:	mov	x4, #0x7ffffffffffffff     	// #576460752303423487
  409b84:	ldp	x2, x5, [x3]
  409b88:	sub	x5, x5, x2
  409b8c:	asr	x3, x5, #4
  409b90:	sub	x5, x4, x5, asr #4
  409b94:	cmp	x5, x1
  409b98:	b.cs	409ba8 <ferror@plt+0x6dd8>  // b.hs, b.nlast
  409b9c:	stp	x29, x30, [sp, #-16]!
  409ba0:	mov	x29, sp
  409ba4:	bl	402fd8 <ferror@plt+0x208>
  409ba8:	cmp	x1, x3
  409bac:	csel	x1, x1, x3, cs  // cs = hs, nlast
  409bb0:	adds	x3, x3, x1
  409bb4:	b.cs	409bc4 <ferror@plt+0x6df4>  // b.hs, b.nlast
  409bb8:	cmp	x3, x4
  409bbc:	csel	x0, x3, x4, ls  // ls = plast
  409bc0:	ret
  409bc4:	mov	x0, x4
  409bc8:	ret
  409bcc:	stp	x29, x30, [sp, #-80]!
  409bd0:	mov	x29, sp
  409bd4:	stp	x21, x22, [sp, #32]
  409bd8:	stp	x23, x24, [sp, #48]
  409bdc:	mov	x24, x1
  409be0:	ldp	x21, x1, [x0, #8]
  409be4:	stp	x19, x20, [sp, #16]
  409be8:	mov	x19, x0
  409bec:	str	x25, [sp, #64]
  409bf0:	cmp	x21, x1
  409bf4:	b.eq	409c1c <ferror@plt+0x6e4c>  // b.none
  409bf8:	ldp	x0, x1, [x24]
  409bfc:	stp	x0, x1, [x21], #16
  409c00:	str	x21, [x19, #8]
  409c04:	ldp	x19, x20, [sp, #16]
  409c08:	ldp	x21, x22, [sp, #32]
  409c0c:	ldp	x23, x24, [sp, #48]
  409c10:	ldr	x25, [sp, #64]
  409c14:	ldp	x29, x30, [sp], #80
  409c18:	ret
  409c1c:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  409c20:	mov	x1, #0x1                   	// #1
  409c24:	add	x2, x2, #0xd02
  409c28:	bl	409b78 <ferror@plt+0x6da8>
  409c2c:	ldr	x25, [x19]
  409c30:	mov	x22, x0
  409c34:	sub	x23, x21, x25
  409c38:	cbz	x0, 409c6c <ferror@plt+0x6e9c>
  409c3c:	bl	405bc8 <ferror@plt+0x2df8>
  409c40:	mov	x20, x0
  409c44:	add	x2, x20, x23
  409c48:	ldp	x0, x1, [x24]
  409c4c:	stp	x0, x1, [x2]
  409c50:	mov	x1, x20
  409c54:	mov	x0, x25
  409c58:	cmp	x21, x0
  409c5c:	b.eq	409c74 <ferror@plt+0x6ea4>  // b.none
  409c60:	ldp	x2, x3, [x0], #16
  409c64:	stp	x2, x3, [x1], #16
  409c68:	b	409c58 <ferror@plt+0x6e88>
  409c6c:	mov	x20, #0x0                   	// #0
  409c70:	b	409c44 <ferror@plt+0x6e74>
  409c74:	add	x23, x23, #0x10
  409c78:	mov	x0, x25
  409c7c:	add	x23, x20, x23
  409c80:	bl	405844 <ferror@plt+0x2a74>
  409c84:	stp	x20, x23, [x19]
  409c88:	add	x20, x20, x22, lsl #4
  409c8c:	str	x20, [x19, #16]
  409c90:	b	409c04 <ferror@plt+0x6e34>
  409c94:	cbz	x1, 409d4c <ferror@plt+0x6f7c>
  409c98:	stp	x29, x30, [sp, #-64]!
  409c9c:	mov	x29, sp
  409ca0:	stp	x19, x20, [sp, #16]
  409ca4:	mov	x19, x0
  409ca8:	ldp	x20, x2, [x0]
  409cac:	stp	x21, x22, [sp, #32]
  409cb0:	ldr	x3, [x0, #16]
  409cb4:	str	x23, [sp, #48]
  409cb8:	mov	x23, x1
  409cbc:	sub	x20, x2, x20
  409cc0:	sub	x3, x3, x2
  409cc4:	asr	x20, x20, #4
  409cc8:	cmp	x1, x3, asr #4
  409ccc:	b.hi	409cec <ferror@plt+0x6f1c>  // b.pmore
  409cd0:	add	x2, x2, x1, lsl #4
  409cd4:	str	x2, [x0, #8]
  409cd8:	ldp	x19, x20, [sp, #16]
  409cdc:	ldp	x21, x22, [sp, #32]
  409ce0:	ldr	x23, [sp, #48]
  409ce4:	ldp	x29, x30, [sp], #64
  409ce8:	ret
  409cec:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  409cf0:	add	x2, x2, #0xce8
  409cf4:	bl	409b78 <ferror@plt+0x6da8>
  409cf8:	mov	x22, x0
  409cfc:	cbz	x0, 409d28 <ferror@plt+0x6f58>
  409d00:	bl	405bc8 <ferror@plt+0x2df8>
  409d04:	mov	x21, x0
  409d08:	ldp	x0, x3, [x19]
  409d0c:	mov	x2, x21
  409d10:	mov	x1, x0
  409d14:	cmp	x3, x1
  409d18:	b.eq	409d30 <ferror@plt+0x6f60>  // b.none
  409d1c:	ldp	x4, x5, [x1], #16
  409d20:	stp	x4, x5, [x2], #16
  409d24:	b	409d14 <ferror@plt+0x6f44>
  409d28:	mov	x21, #0x0                   	// #0
  409d2c:	b	409d08 <ferror@plt+0x6f38>
  409d30:	add	x20, x20, x23
  409d34:	bl	405844 <ferror@plt+0x2a74>
  409d38:	add	x20, x21, x20, lsl #4
  409d3c:	stp	x21, x20, [x19]
  409d40:	add	x21, x21, x22, lsl #4
  409d44:	str	x21, [x19, #16]
  409d48:	b	409cd8 <ferror@plt+0x6f08>
  409d4c:	ret
  409d50:	stp	x29, x30, [sp, #-80]!
  409d54:	mov	x29, sp
  409d58:	stp	x23, x24, [sp, #48]
  409d5c:	ldp	x24, x23, [x0]
  409d60:	stp	x19, x20, [sp, #16]
  409d64:	stp	x21, x22, [sp, #32]
  409d68:	mov	x22, x0
  409d6c:	mov	x0, #0xfffffffffffffff     	// #1152921504606846975
  409d70:	stp	x25, x26, [sp, #64]
  409d74:	mov	x25, x1
  409d78:	sub	x1, x23, x24
  409d7c:	cmp	x0, x1, asr #3
  409d80:	b.ne	409d90 <ferror@plt+0x6fc0>  // b.any
  409d84:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  409d88:	add	x0, x0, #0xd02
  409d8c:	bl	402fd8 <ferror@plt+0x208>
  409d90:	asr	x19, x1, #3
  409d94:	mov	x26, x2
  409d98:	cmp	x19, #0x0
  409d9c:	sub	x20, x25, x24
  409da0:	csinc	x1, x19, xzr, ne  // ne = any
  409da4:	adds	x19, x19, x1
  409da8:	b.cs	409e40 <ferror@plt+0x7070>  // b.hs, b.nlast
  409dac:	mov	x21, #0x0                   	// #0
  409db0:	cbz	x19, 409dc8 <ferror@plt+0x6ff8>
  409db4:	cmp	x19, x0
  409db8:	csel	x19, x19, x0, ls  // ls = plast
  409dbc:	lsl	x0, x19, #3
  409dc0:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  409dc4:	mov	x21, x0
  409dc8:	ldr	x0, [x26]
  409dcc:	str	x0, [x21, x20]
  409dd0:	cmp	x20, #0x0
  409dd4:	b.le	409de8 <ferror@plt+0x7018>
  409dd8:	mov	x2, x20
  409ddc:	mov	x1, x24
  409de0:	mov	x0, x21
  409de4:	bl	4026b0 <memmove@plt>
  409de8:	add	x20, x20, #0x8
  409dec:	sub	x23, x23, x25
  409df0:	add	x20, x21, x20
  409df4:	cmp	x23, #0x0
  409df8:	b.le	409e0c <ferror@plt+0x703c>
  409dfc:	mov	x2, x23
  409e00:	mov	x1, x25
  409e04:	mov	x0, x20
  409e08:	bl	4026a0 <memcpy@plt>
  409e0c:	add	x20, x20, x23
  409e10:	cbz	x24, 409e1c <ferror@plt+0x704c>
  409e14:	mov	x0, x24
  409e18:	bl	445770 <_obstack_memory_used@@Base+0xd6c>
  409e1c:	add	x19, x21, x19, lsl #3
  409e20:	ldp	x23, x24, [sp, #48]
  409e24:	ldp	x25, x26, [sp, #64]
  409e28:	stp	x21, x20, [x22]
  409e2c:	str	x19, [x22, #16]
  409e30:	ldp	x19, x20, [sp, #16]
  409e34:	ldp	x21, x22, [sp, #32]
  409e38:	ldp	x29, x30, [sp], #80
  409e3c:	ret
  409e40:	mov	x19, x0
  409e44:	b	409dbc <ferror@plt+0x6fec>
  409e48:	stp	x29, x30, [sp, #-80]!
  409e4c:	mov	x29, sp
  409e50:	stp	x21, x22, [sp, #32]
  409e54:	mov	x21, x0
  409e58:	stp	x23, x24, [sp, #48]
  409e5c:	mov	x23, x1
  409e60:	ldp	x22, x24, [x0]
  409e64:	stp	x19, x20, [sp, #16]
  409e68:	mov	x0, #0x3ffffffffffffff     	// #288230376151711743
  409e6c:	stp	x25, x26, [sp, #64]
  409e70:	sub	x1, x24, x22
  409e74:	cmp	x0, x1, asr #5
  409e78:	b.ne	409e88 <ferror@plt+0x70b8>  // b.any
  409e7c:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  409e80:	add	x0, x0, #0xd02
  409e84:	bl	402fd8 <ferror@plt+0x208>
  409e88:	asr	x19, x1, #5
  409e8c:	mov	x25, x2
  409e90:	cmp	x19, #0x0
  409e94:	sub	x26, x23, x22
  409e98:	csinc	x1, x19, xzr, ne  // ne = any
  409e9c:	adds	x19, x19, x1
  409ea0:	b.cs	409f4c <ferror@plt+0x717c>  // b.hs, b.nlast
  409ea4:	mov	x20, #0x0                   	// #0
  409ea8:	cbz	x19, 409ec0 <ferror@plt+0x70f0>
  409eac:	cmp	x19, x0
  409eb0:	csel	x19, x19, x0, ls  // ls = plast
  409eb4:	lsl	x0, x19, #5
  409eb8:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  409ebc:	mov	x20, x0
  409ec0:	mov	x0, x25
  409ec4:	add	x2, x20, x26
  409ec8:	ldr	x3, [x25, #8]
  409ecc:	ldr	w1, [x0], #8
  409ed0:	str	w1, [x20, x26]
  409ed4:	add	x1, x2, #0x8
  409ed8:	str	x3, [x2, #8]
  409edc:	ldr	x2, [x0, #8]
  409ee0:	str	x2, [x1, #8]
  409ee4:	str	xzr, [x0, #8]
  409ee8:	ldr	x2, [x0, #16]
  409eec:	str	xzr, [x0, #16]
  409ef0:	str	xzr, [x25, #8]
  409ef4:	mov	x0, x22
  409ef8:	str	x2, [x1, #16]
  409efc:	mov	x1, x23
  409f00:	mov	x2, x20
  409f04:	bl	408b7c <ferror@plt+0x5dac>
  409f08:	add	x2, x0, #0x20
  409f0c:	mov	x1, x24
  409f10:	mov	x0, x23
  409f14:	bl	408b7c <ferror@plt+0x5dac>
  409f18:	mov	x23, x0
  409f1c:	cbz	x22, 409f28 <ferror@plt+0x7158>
  409f20:	mov	x0, x22
  409f24:	bl	445770 <_obstack_memory_used@@Base+0xd6c>
  409f28:	add	x19, x20, x19, lsl #5
  409f2c:	ldp	x25, x26, [sp, #64]
  409f30:	stp	x20, x23, [x21]
  409f34:	str	x19, [x21, #16]
  409f38:	ldp	x19, x20, [sp, #16]
  409f3c:	ldp	x21, x22, [sp, #32]
  409f40:	ldp	x23, x24, [sp, #48]
  409f44:	ldp	x29, x30, [sp], #80
  409f48:	ret
  409f4c:	mov	x19, x0
  409f50:	b	409eb4 <ferror@plt+0x70e4>
  409f54:	stp	x29, x30, [sp, #-32]!
  409f58:	mov	x29, sp
  409f5c:	stp	x19, x20, [sp, #16]
  409f60:	mov	x19, x0
  409f64:	mov	x20, x1
  409f68:	cmp	x19, x20
  409f6c:	b.eq	409f84 <ferror@plt+0x71b4>  // b.none
  409f70:	ldr	x0, [x19, #8]
  409f74:	cbz	x0, 409f7c <ferror@plt+0x71ac>
  409f78:	bl	445770 <_obstack_memory_used@@Base+0xd6c>
  409f7c:	add	x19, x19, #0x20
  409f80:	b	409f68 <ferror@plt+0x7198>
  409f84:	ldp	x19, x20, [sp, #16]
  409f88:	ldp	x29, x30, [sp], #32
  409f8c:	ret
  409f90:	cbz	x1, 40a15c <ferror@plt+0x738c>
  409f94:	stp	x29, x30, [sp, #-80]!
  409f98:	mov	x3, #0x4ec5                	// #20165
  409f9c:	movk	x3, #0xc4ec, lsl #16
  409fa0:	mov	x29, sp
  409fa4:	stp	x21, x22, [sp, #32]
  409fa8:	mov	x21, x0
  409fac:	movk	x3, #0xec4e, lsl #32
  409fb0:	ldp	x0, x2, [x0]
  409fb4:	stp	x19, x20, [sp, #16]
  409fb8:	movk	x3, #0x4ec4, lsl #48
  409fbc:	stp	x23, x24, [sp, #48]
  409fc0:	mov	x24, #0xb13b                	// #45371
  409fc4:	movk	x24, #0x3b13, lsl #16
  409fc8:	stp	x25, x26, [sp, #64]
  409fcc:	mov	x23, x1
  409fd0:	sub	x19, x2, x0
  409fd4:	ldr	x0, [x21, #16]
  409fd8:	asr	x22, x19, #3
  409fdc:	movk	x24, #0x13b1, lsl #32
  409fe0:	sub	x0, x0, x2
  409fe4:	movk	x24, #0x13b, lsl #48
  409fe8:	mul	x22, x22, x3
  409fec:	asr	x0, x0, #3
  409ff0:	sub	x1, x24, x22
  409ff4:	mul	x0, x0, x3
  409ff8:	cmp	x0, x23
  409ffc:	b.cc	40a03c <ferror@plt+0x726c>  // b.lo, b.ul, b.last
  40a000:	mov	x0, x2
  40a004:	mov	x3, x23
  40a008:	bl	406114 <ferror@plt+0x3344>
  40a00c:	add	x0, x0, #0x68
  40a010:	subs	x3, x3, #0x1
  40a014:	b.ne	40a008 <ferror@plt+0x7238>  // b.any
  40a018:	mov	x22, #0x68                  	// #104
  40a01c:	madd	x22, x23, x22, x2
  40a020:	str	x22, [x21, #8]
  40a024:	ldp	x19, x20, [sp, #16]
  40a028:	ldp	x21, x22, [sp, #32]
  40a02c:	ldp	x23, x24, [sp, #48]
  40a030:	ldp	x25, x26, [sp, #64]
  40a034:	ldp	x29, x30, [sp], #80
  40a038:	ret
  40a03c:	cmp	x1, x23
  40a040:	b.cs	40a050 <ferror@plt+0x7280>  // b.hs, b.nlast
  40a044:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  40a048:	add	x0, x0, #0xce8
  40a04c:	bl	402fd8 <ferror@plt+0x208>
  40a050:	cmp	x22, x23
  40a054:	csel	x25, x22, x23, cs  // cs = hs, nlast
  40a058:	add	x25, x22, x25
  40a05c:	cmp	x25, x24
  40a060:	csel	x25, x25, x24, ls  // ls = plast
  40a064:	mov	x24, #0x68                  	// #104
  40a068:	mul	x25, x25, x24
  40a06c:	mov	x0, x25
  40a070:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  40a074:	mov	x2, x23
  40a078:	mov	x24, x0
  40a07c:	add	x0, x0, x19
  40a080:	bl	406114 <ferror@plt+0x3344>
  40a084:	add	x0, x0, #0x68
  40a088:	subs	x2, x2, #0x1
  40a08c:	b.ne	40a080 <ferror@plt+0x72b0>  // b.any
  40a090:	ldp	x19, x26, [x21]
  40a094:	mov	x20, x24
  40a098:	cmp	x26, x19
  40a09c:	b.eq	40a134 <ferror@plt+0x7364>  // b.none
  40a0a0:	ldr	x0, [x19]
  40a0a4:	str	x0, [x20]
  40a0a8:	ldr	x0, [x19, #8]
  40a0ac:	str	x0, [x20, #8]
  40a0b0:	ldr	x0, [x19, #16]
  40a0b4:	str	x0, [x20, #16]
  40a0b8:	ldr	x0, [x19, #24]
  40a0bc:	str	x0, [x20, #24]
  40a0c0:	ldr	w0, [x19, #32]
  40a0c4:	str	w0, [x20, #32]
  40a0c8:	ldr	x0, [x19, #40]
  40a0cc:	str	x0, [x20, #40]
  40a0d0:	ldrb	w0, [x20, #48]
  40a0d4:	ldrb	w1, [x19, #48]
  40a0d8:	bfxil	w0, w1, #0, #7
  40a0dc:	strb	w0, [x20, #48]
  40a0e0:	ldr	x0, [x19, #56]
  40a0e4:	str	x0, [x20, #56]
  40a0e8:	ldr	x0, [x19, #64]
  40a0ec:	str	x0, [x20, #64]
  40a0f0:	ldr	x0, [x19, #72]
  40a0f4:	str	x0, [x20, #72]
  40a0f8:	ldp	x0, x1, [x19, #80]
  40a0fc:	stp	xzr, xzr, [x19, #56]
  40a100:	str	xzr, [x19, #72]
  40a104:	stp	x0, x1, [x20, #80]
  40a108:	mov	x1, #0x0                   	// #0
  40a10c:	ldr	x0, [x19, #96]
  40a110:	str	x0, [x20, #96]
  40a114:	mov	x0, #0x0                   	// #0
  40a118:	bl	409f54 <ferror@plt+0x7184>
  40a11c:	ldr	x0, [x19, #56]
  40a120:	cbz	x0, 40a128 <ferror@plt+0x7358>
  40a124:	bl	445770 <_obstack_memory_used@@Base+0xd6c>
  40a128:	add	x19, x19, #0x68
  40a12c:	add	x20, x20, #0x68
  40a130:	b	40a098 <ferror@plt+0x72c8>
  40a134:	ldr	x0, [x21]
  40a138:	cbz	x0, 40a140 <ferror@plt+0x7370>
  40a13c:	bl	445770 <_obstack_memory_used@@Base+0xd6c>
  40a140:	add	x22, x22, x23
  40a144:	mov	x1, #0x68                  	// #104
  40a148:	madd	x22, x22, x1, x24
  40a14c:	stp	x24, x22, [x21]
  40a150:	add	x24, x24, x25
  40a154:	str	x24, [x21, #16]
  40a158:	b	40a024 <ferror@plt+0x7254>
  40a15c:	ret
  40a160:	stp	x29, x30, [sp, #-32]!
  40a164:	mov	x29, sp
  40a168:	stp	x19, x20, [sp, #16]
  40a16c:	mov	x19, x0
  40a170:	mov	x20, x1
  40a174:	cmp	x19, x20
  40a178:	b.eq	40a198 <ferror@plt+0x73c8>  // b.none
  40a17c:	ldr	x0, [x19, #32]
  40a180:	bl	40582c <ferror@plt+0x2a5c>
  40a184:	ldr	x0, [x19, #8]
  40a188:	cbz	x0, 40a190 <ferror@plt+0x73c0>
  40a18c:	bl	445770 <_obstack_memory_used@@Base+0xd6c>
  40a190:	add	x19, x19, #0x40
  40a194:	b	40a174 <ferror@plt+0x73a4>
  40a198:	ldp	x19, x20, [sp, #16]
  40a19c:	ldp	x29, x30, [sp], #32
  40a1a0:	ret
  40a1a4:	stp	x29, x30, [sp, #-32]!
  40a1a8:	mov	x29, sp
  40a1ac:	ldr	x1, [x0, #8]
  40a1b0:	str	x19, [sp, #16]
  40a1b4:	mov	x19, x0
  40a1b8:	ldr	x0, [x0]
  40a1bc:	bl	40a160 <ferror@plt+0x7390>
  40a1c0:	ldr	x0, [x19]
  40a1c4:	cbz	x0, 40a1d4 <ferror@plt+0x7404>
  40a1c8:	ldr	x19, [sp, #16]
  40a1cc:	ldp	x29, x30, [sp], #32
  40a1d0:	b	445770 <_obstack_memory_used@@Base+0xd6c>
  40a1d4:	ldr	x19, [sp, #16]
  40a1d8:	ldp	x29, x30, [sp], #32
  40a1dc:	ret
  40a1e0:	stp	x29, x30, [sp, #-32]!
  40a1e4:	mov	x29, sp
  40a1e8:	str	x19, [sp, #16]
  40a1ec:	mov	x19, x0
  40a1f0:	ldr	x0, [x0, #120]
  40a1f4:	cbz	x0, 40a1fc <ferror@plt+0x742c>
  40a1f8:	bl	445770 <_obstack_memory_used@@Base+0xd6c>
  40a1fc:	ldr	x0, [x19, #96]
  40a200:	bl	405838 <ferror@plt+0x2a68>
  40a204:	add	x0, x19, #0x18
  40a208:	ldr	x19, [sp, #16]
  40a20c:	ldp	x29, x30, [sp], #32
  40a210:	b	40a1a4 <ferror@plt+0x73d4>
  40a214:	stp	x29, x30, [sp, #-48]!
  40a218:	mov	x29, sp
  40a21c:	stp	x19, x20, [sp, #16]
  40a220:	mov	x19, x0
  40a224:	ldr	x20, [x0]
  40a228:	str	x21, [sp, #32]
  40a22c:	ldr	x21, [x0, #8]
  40a230:	cmp	x21, x20
  40a234:	b.eq	40a248 <ferror@plt+0x7478>  // b.none
  40a238:	mov	x0, x20
  40a23c:	add	x20, x20, #0x90
  40a240:	bl	40a1e0 <ferror@plt+0x7410>
  40a244:	b	40a230 <ferror@plt+0x7460>
  40a248:	ldr	x0, [x19]
  40a24c:	cbz	x0, 40a260 <ferror@plt+0x7490>
  40a250:	ldp	x19, x20, [sp, #16]
  40a254:	ldr	x21, [sp, #32]
  40a258:	ldp	x29, x30, [sp], #48
  40a25c:	b	445770 <_obstack_memory_used@@Base+0xd6c>
  40a260:	ldp	x19, x20, [sp, #16]
  40a264:	ldr	x21, [sp, #32]
  40a268:	ldp	x29, x30, [sp], #48
  40a26c:	ret
  40a270:	stp	x29, x30, [sp, #-32]!
  40a274:	mov	x29, sp
  40a278:	stp	x19, x20, [sp, #16]
  40a27c:	mov	x19, x1
  40a280:	ldp	x3, x1, [x0]
  40a284:	sub	x2, x1, x3
  40a288:	asr	x2, x2, #6
  40a28c:	cmp	x19, x2
  40a290:	b.ls	40a2a4 <ferror@plt+0x74d4>  // b.plast
  40a294:	sub	x1, x19, x2
  40a298:	ldp	x19, x20, [sp, #16]
  40a29c:	ldp	x29, x30, [sp], #32
  40a2a0:	b	409154 <ferror@plt+0x6384>
  40a2a4:	b.cs	40a2c4 <ferror@plt+0x74f4>  // b.hs, b.nlast
  40a2a8:	add	x19, x3, x19, lsl #6
  40a2ac:	cmp	x19, x1
  40a2b0:	b.eq	40a2c4 <ferror@plt+0x74f4>  // b.none
  40a2b4:	mov	x20, x0
  40a2b8:	mov	x0, x19
  40a2bc:	bl	40a160 <ferror@plt+0x7390>
  40a2c0:	str	x19, [x20, #8]
  40a2c4:	ldp	x19, x20, [sp, #16]
  40a2c8:	ldp	x29, x30, [sp], #32
  40a2cc:	ret
  40a2d0:	cmp	x1, x0
  40a2d4:	b.eq	40a360 <ferror@plt+0x7590>  // b.none
  40a2d8:	stp	x29, x30, [sp, #-64]!
  40a2dc:	mov	x29, sp
  40a2e0:	stp	x19, x20, [sp, #16]
  40a2e4:	mov	x19, x0
  40a2e8:	add	x20, x0, #0x8
  40a2ec:	stp	x21, x22, [sp, #32]
  40a2f0:	mov	x21, x1
  40a2f4:	mov	x22, #0x8                   	// #8
  40a2f8:	str	x23, [sp, #48]
  40a2fc:	cmp	x21, x20
  40a300:	b.eq	40a34c <ferror@plt+0x757c>  // b.none
  40a304:	mov	x1, x19
  40a308:	mov	x0, x20
  40a30c:	bl	405af8 <ferror@plt+0x2d28>
  40a310:	tst	w0, #0xff
  40a314:	b.eq	40a340 <ferror@plt+0x7570>  // b.none
  40a318:	cmp	x20, x19
  40a31c:	ldr	x23, [x20]
  40a320:	b.eq	40a334 <ferror@plt+0x7564>  // b.none
  40a324:	sub	x2, x20, x19
  40a328:	mov	x1, x19
  40a32c:	add	x0, x19, x22
  40a330:	bl	4026b0 <memmove@plt>
  40a334:	str	x23, [x19]
  40a338:	add	x20, x20, #0x8
  40a33c:	b	40a2fc <ferror@plt+0x752c>
  40a340:	mov	x0, x20
  40a344:	bl	405ee0 <ferror@plt+0x3110>
  40a348:	b	40a338 <ferror@plt+0x7568>
  40a34c:	ldp	x19, x20, [sp, #16]
  40a350:	ldp	x21, x22, [sp, #32]
  40a354:	ldr	x23, [sp, #48]
  40a358:	ldp	x29, x30, [sp], #64
  40a35c:	ret
  40a360:	ret
  40a364:	stp	x29, x30, [sp, #-32]!
  40a368:	mov	x29, sp
  40a36c:	stp	x19, x20, [sp, #16]
  40a370:	mov	x19, x0
  40a374:	mov	x20, x1
  40a378:	cmp	x19, x20
  40a37c:	b.eq	40a39c <ferror@plt+0x75cc>  // b.none
  40a380:	ldp	x0, x1, [x19, #56]
  40a384:	bl	409f54 <ferror@plt+0x7184>
  40a388:	ldr	x0, [x19, #56]
  40a38c:	cbz	x0, 40a394 <ferror@plt+0x75c4>
  40a390:	bl	445770 <_obstack_memory_used@@Base+0xd6c>
  40a394:	add	x19, x19, #0x68
  40a398:	b	40a378 <ferror@plt+0x75a8>
  40a39c:	ldp	x19, x20, [sp, #16]
  40a3a0:	ldp	x29, x30, [sp], #32
  40a3a4:	ret
  40a3a8:	stp	x29, x30, [sp, #-64]!
  40a3ac:	mov	x29, sp
  40a3b0:	str	x23, [sp, #48]
  40a3b4:	sub	x23, x1, x0
  40a3b8:	stp	x19, x20, [sp, #16]
  40a3bc:	mov	x20, x1
  40a3c0:	mov	x19, x0
  40a3c4:	asr	x23, x23, #5
  40a3c8:	stp	x21, x22, [sp, #32]
  40a3cc:	mov	x22, x2
  40a3d0:	mov	x21, x19
  40a3d4:	cmp	x23, #0x0
  40a3d8:	b.le	40a444 <ferror@plt+0x7674>
  40a3dc:	mov	x1, x19
  40a3e0:	mov	x0, x22
  40a3e4:	bl	405820 <ferror@plt+0x2a50>
  40a3e8:	tst	w0, #0xff
  40a3ec:	b.ne	40a490 <ferror@plt+0x76c0>  // b.any
  40a3f0:	add	x21, x19, #0x8
  40a3f4:	mov	x0, x22
  40a3f8:	mov	x1, x21
  40a3fc:	bl	405820 <ferror@plt+0x2a50>
  40a400:	tst	w0, #0xff
  40a404:	b.ne	40a490 <ferror@plt+0x76c0>  // b.any
  40a408:	add	x21, x19, #0x10
  40a40c:	mov	x0, x22
  40a410:	mov	x1, x21
  40a414:	bl	405820 <ferror@plt+0x2a50>
  40a418:	tst	w0, #0xff
  40a41c:	b.ne	40a490 <ferror@plt+0x76c0>  // b.any
  40a420:	add	x21, x19, #0x18
  40a424:	mov	x0, x22
  40a428:	mov	x1, x21
  40a42c:	add	x19, x19, #0x20
  40a430:	bl	405820 <ferror@plt+0x2a50>
  40a434:	tst	w0, #0xff
  40a438:	b.ne	40a490 <ferror@plt+0x76c0>  // b.any
  40a43c:	sub	x23, x23, #0x1
  40a440:	b	40a3d0 <ferror@plt+0x7600>
  40a444:	sub	x0, x20, x19
  40a448:	cmp	x0, #0x10
  40a44c:	b.eq	40a4ac <ferror@plt+0x76dc>  // b.none
  40a450:	cmp	x0, #0x18
  40a454:	b.eq	40a47c <ferror@plt+0x76ac>  // b.none
  40a458:	cmp	x0, #0x8
  40a45c:	b.ne	40a474 <ferror@plt+0x76a4>  // b.any
  40a460:	mov	x1, x21
  40a464:	mov	x0, x22
  40a468:	bl	405820 <ferror@plt+0x2a50>
  40a46c:	tst	w0, #0xff
  40a470:	b.ne	40a490 <ferror@plt+0x76c0>  // b.any
  40a474:	mov	x21, x20
  40a478:	b	40a490 <ferror@plt+0x76c0>
  40a47c:	mov	x1, x19
  40a480:	mov	x0, x22
  40a484:	bl	405820 <ferror@plt+0x2a50>
  40a488:	tst	w0, #0xff
  40a48c:	b.eq	40a4a8 <ferror@plt+0x76d8>  // b.none
  40a490:	mov	x0, x21
  40a494:	ldp	x19, x20, [sp, #16]
  40a498:	ldp	x21, x22, [sp, #32]
  40a49c:	ldr	x23, [sp, #48]
  40a4a0:	ldp	x29, x30, [sp], #64
  40a4a4:	ret
  40a4a8:	add	x21, x19, #0x8
  40a4ac:	mov	x1, x21
  40a4b0:	mov	x0, x22
  40a4b4:	bl	405820 <ferror@plt+0x2a50>
  40a4b8:	tst	w0, #0xff
  40a4bc:	b.ne	40a490 <ferror@plt+0x76c0>  // b.any
  40a4c0:	add	x21, x21, #0x8
  40a4c4:	b	40a460 <ferror@plt+0x7690>
  40a4c8:	cmp	x1, x0
  40a4cc:	b.eq	40a564 <ferror@plt+0x7794>  // b.none
  40a4d0:	stp	x29, x30, [sp, #-64]!
  40a4d4:	mov	x29, sp
  40a4d8:	stp	x19, x20, [sp, #16]
  40a4dc:	mov	x19, x0
  40a4e0:	add	x20, x0, #0x4
  40a4e4:	stp	x21, x22, [sp, #32]
  40a4e8:	mov	x21, x1
  40a4ec:	str	x23, [sp, #48]
  40a4f0:	mov	x23, #0x4                   	// #4
  40a4f4:	cmp	x21, x20
  40a4f8:	b.eq	40a550 <ferror@plt+0x7780>  // b.none
  40a4fc:	ldr	w0, [x19]
  40a500:	ldr	w22, [x20]
  40a504:	cmp	w22, w0
  40a508:	b.cs	40a530 <ferror@plt+0x7760>  // b.hs, b.nlast
  40a50c:	cmp	x19, x20
  40a510:	b.eq	40a524 <ferror@plt+0x7754>  // b.none
  40a514:	sub	x2, x20, x19
  40a518:	mov	x1, x19
  40a51c:	add	x0, x19, x23
  40a520:	bl	4026b0 <memmove@plt>
  40a524:	str	w22, [x19]
  40a528:	add	x20, x20, #0x4
  40a52c:	b	40a4f4 <ferror@plt+0x7724>
  40a530:	mov	x0, x20
  40a534:	ldur	w1, [x0, #-4]
  40a538:	cmp	w22, w1
  40a53c:	b.cs	40a548 <ferror@plt+0x7778>  // b.hs, b.nlast
  40a540:	str	w1, [x0], #-4
  40a544:	b	40a534 <ferror@plt+0x7764>
  40a548:	str	w22, [x0]
  40a54c:	b	40a528 <ferror@plt+0x7758>
  40a550:	ldp	x19, x20, [sp, #16]
  40a554:	ldp	x21, x22, [sp, #32]
  40a558:	ldr	x23, [sp, #48]
  40a55c:	ldp	x29, x30, [sp], #64
  40a560:	ret
  40a564:	ret
  40a568:	ldr	w2, [x1]
  40a56c:	ldr	x4, [x1, #24]
  40a570:	str	w2, [x0]
  40a574:	ldr	x2, [x1, #8]
  40a578:	str	x2, [x0, #8]
  40a57c:	ldr	x2, [x1, #16]
  40a580:	ldr	x3, [x1, #80]
  40a584:	stp	x2, x4, [x0, #16]
  40a588:	ldr	w2, [x1, #88]
  40a58c:	ldr	x4, [x1, #32]
  40a590:	str	x4, [x0, #32]
  40a594:	ldr	x4, [x1, #40]
  40a598:	stp	xzr, xzr, [x1, #24]
  40a59c:	str	xzr, [x1, #40]
  40a5a0:	str	x4, [x0, #40]
  40a5a4:	ldp	x4, x5, [x1, #48]
  40a5a8:	stp	x4, x5, [x0, #48]
  40a5ac:	ldp	x4, x5, [x1, #64]
  40a5b0:	stp	x4, x5, [x0, #64]
  40a5b4:	ldr	x4, [x1, #96]
  40a5b8:	str	x4, [x0, #96]
  40a5bc:	ldr	x4, [x1, #104]
  40a5c0:	str	x3, [x0, #80]
  40a5c4:	add	x3, x0, #0x78
  40a5c8:	str	w2, [x0, #88]
  40a5cc:	str	x4, [x0, #104]
  40a5d0:	ldr	x4, [x1, #112]
  40a5d4:	stp	xzr, xzr, [x1, #96]
  40a5d8:	str	x4, [x0, #112]
  40a5dc:	str	xzr, [x1, #112]
  40a5e0:	ldr	x4, [x1, #120]
  40a5e4:	str	x4, [x0, #120]
  40a5e8:	ldr	x0, [x1, #128]
  40a5ec:	str	x0, [x3, #8]
  40a5f0:	ldr	x0, [x1, #136]
  40a5f4:	str	x0, [x3, #16]
  40a5f8:	stp	xzr, xzr, [x1, #120]
  40a5fc:	str	xzr, [x1, #136]
  40a600:	ret
  40a604:	cbz	x1, 40a750 <ferror@plt+0x7980>
  40a608:	stp	x29, x30, [sp, #-80]!
  40a60c:	mov	x4, #0x8e39                	// #36409
  40a610:	movk	x4, #0x38e3, lsl #16
  40a614:	mov	x29, sp
  40a618:	stp	x23, x24, [sp, #48]
  40a61c:	movk	x4, #0xe38e, lsl #32
  40a620:	movk	x4, #0x8e38, lsl #48
  40a624:	ldp	x23, x3, [x0]
  40a628:	stp	x19, x20, [sp, #16]
  40a62c:	mov	x19, x0
  40a630:	ldr	x2, [x0, #16]
  40a634:	stp	x21, x22, [sp, #32]
  40a638:	mov	x22, x1
  40a63c:	sub	x2, x2, x3
  40a640:	sub	x23, x3, x23
  40a644:	stp	x25, x26, [sp, #64]
  40a648:	asr	x2, x2, #4
  40a64c:	asr	x24, x23, #4
  40a650:	mul	x2, x2, x4
  40a654:	mul	x24, x24, x4
  40a658:	cmp	x2, x1
  40a65c:	b.cc	40a698 <ferror@plt+0x78c8>  // b.lo, b.ul, b.last
  40a660:	mov	x0, x3
  40a664:	bl	40632c <ferror@plt+0x355c>
  40a668:	add	x0, x0, #0x90
  40a66c:	subs	x1, x1, #0x1
  40a670:	b.ne	40a664 <ferror@plt+0x7894>  // b.any
  40a674:	mov	x1, #0x90                  	// #144
  40a678:	madd	x22, x22, x1, x3
  40a67c:	str	x22, [x19, #8]
  40a680:	ldp	x19, x20, [sp, #16]
  40a684:	ldp	x21, x22, [sp, #32]
  40a688:	ldp	x23, x24, [sp, #48]
  40a68c:	ldp	x25, x26, [sp, #64]
  40a690:	ldp	x29, x30, [sp], #80
  40a694:	ret
  40a698:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  40a69c:	add	x2, x2, #0xce8
  40a6a0:	bl	409b04 <ferror@plt+0x6d34>
  40a6a4:	mov	x20, x0
  40a6a8:	cbz	x0, 40a720 <ferror@plt+0x7950>
  40a6ac:	mov	x0, #0x38e3                	// #14563
  40a6b0:	movk	x0, #0xe38e, lsl #16
  40a6b4:	movk	x0, #0x8e38, lsl #32
  40a6b8:	movk	x0, #0xe3, lsl #48
  40a6bc:	cmp	x20, x0
  40a6c0:	b.ls	40a6c8 <ferror@plt+0x78f8>  // b.plast
  40a6c4:	bl	402e40 <ferror@plt+0x70>
  40a6c8:	mov	x0, #0x90                  	// #144
  40a6cc:	mul	x0, x20, x0
  40a6d0:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  40a6d4:	mov	x21, x0
  40a6d8:	add	x0, x21, x23
  40a6dc:	mov	x1, x22
  40a6e0:	bl	40632c <ferror@plt+0x355c>
  40a6e4:	add	x0, x0, #0x90
  40a6e8:	subs	x1, x1, #0x1
  40a6ec:	b.ne	40a6e0 <ferror@plt+0x7910>  // b.any
  40a6f0:	ldp	x23, x26, [x19]
  40a6f4:	mov	x25, x21
  40a6f8:	cmp	x26, x23
  40a6fc:	b.eq	40a728 <ferror@plt+0x7958>  // b.none
  40a700:	mov	x1, x23
  40a704:	mov	x0, x25
  40a708:	bl	40a568 <ferror@plt+0x7798>
  40a70c:	add	x25, x25, #0x90
  40a710:	mov	x0, x23
  40a714:	add	x23, x23, #0x90
  40a718:	bl	40a1e0 <ferror@plt+0x7410>
  40a71c:	b	40a6f8 <ferror@plt+0x7928>
  40a720:	mov	x21, #0x0                   	// #0
  40a724:	b	40a6d8 <ferror@plt+0x7908>
  40a728:	ldr	x0, [x19]
  40a72c:	cbz	x0, 40a734 <ferror@plt+0x7964>
  40a730:	bl	445770 <_obstack_memory_used@@Base+0xd6c>
  40a734:	add	x22, x24, x22
  40a738:	mov	x0, #0x90                  	// #144
  40a73c:	madd	x20, x20, x0, x21
  40a740:	madd	x22, x22, x0, x21
  40a744:	str	x20, [x19, #16]
  40a748:	stp	x21, x22, [x19]
  40a74c:	b	40a680 <ferror@plt+0x78b0>
  40a750:	ret
  40a754:	stp	x29, x30, [sp, #-96]!
  40a758:	mov	x29, sp
  40a75c:	stp	x21, x22, [sp, #32]
  40a760:	mov	x22, x0
  40a764:	stp	x19, x20, [sp, #16]
  40a768:	stp	x23, x24, [sp, #48]
  40a76c:	stp	x25, x26, [sp, #64]
  40a770:	mov	x26, x1
  40a774:	mov	x25, x2
  40a778:	mov	x1, #0x1                   	// #1
  40a77c:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  40a780:	add	x2, x2, #0xd02
  40a784:	stp	x27, x28, [sp, #80]
  40a788:	bl	409b04 <ferror@plt+0x6d34>
  40a78c:	ldp	x23, x19, [x22]
  40a790:	mov	x20, x0
  40a794:	sub	x24, x26, x23
  40a798:	cbz	x0, 40a848 <ferror@plt+0x7a78>
  40a79c:	mov	x0, #0x38e3                	// #14563
  40a7a0:	movk	x0, #0xe38e, lsl #16
  40a7a4:	movk	x0, #0x8e38, lsl #32
  40a7a8:	movk	x0, #0xe3, lsl #48
  40a7ac:	cmp	x20, x0
  40a7b0:	b.ls	40a7b8 <ferror@plt+0x79e8>  // b.plast
  40a7b4:	bl	402e40 <ferror@plt+0x70>
  40a7b8:	mov	x0, #0x90                  	// #144
  40a7bc:	mul	x0, x20, x0
  40a7c0:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  40a7c4:	mov	x21, x0
  40a7c8:	mov	x1, x25
  40a7cc:	add	x0, x21, x24
  40a7d0:	bl	40a568 <ferror@plt+0x7798>
  40a7d4:	mov	x25, x23
  40a7d8:	mov	x0, x21
  40a7dc:	add	x27, x0, #0x90
  40a7e0:	cmp	x26, x25
  40a7e4:	b.ne	40a850 <ferror@plt+0x7a80>  // b.any
  40a7e8:	mov	x1, #0x8e39                	// #36409
  40a7ec:	lsr	x24, x24, #4
  40a7f0:	movk	x1, #0x38e3, lsl #16
  40a7f4:	mov	x0, #0x90                  	// #144
  40a7f8:	movk	x1, #0xe38e, lsl #32
  40a7fc:	movk	x1, #0xe38, lsl #48
  40a800:	mov	x26, x1
  40a804:	mul	x24, x24, x1
  40a808:	and	x24, x24, #0xfffffffffffffff
  40a80c:	madd	x28, x24, x0, x23
  40a810:	madd	x0, x24, x0, x0
  40a814:	mov	x25, x28
  40a818:	add	x24, x21, x0
  40a81c:	mov	x27, x24
  40a820:	cmp	x19, x25
  40a824:	b.eq	40a86c <ferror@plt+0x7a9c>  // b.none
  40a828:	mov	x1, x25
  40a82c:	mov	x0, x27
  40a830:	bl	40a568 <ferror@plt+0x7798>
  40a834:	add	x27, x27, #0x90
  40a838:	mov	x0, x25
  40a83c:	add	x25, x25, #0x90
  40a840:	bl	40a1e0 <ferror@plt+0x7410>
  40a844:	b	40a820 <ferror@plt+0x7a50>
  40a848:	mov	x21, #0x0                   	// #0
  40a84c:	b	40a7c8 <ferror@plt+0x79f8>
  40a850:	mov	x1, x25
  40a854:	bl	40a568 <ferror@plt+0x7798>
  40a858:	mov	x0, x25
  40a85c:	add	x25, x25, #0x90
  40a860:	bl	40a1e0 <ferror@plt+0x7410>
  40a864:	mov	x0, x27
  40a868:	b	40a7dc <ferror@plt+0x7a0c>
  40a86c:	sub	x19, x19, x28
  40a870:	mov	x0, #0x90                  	// #144
  40a874:	lsr	x19, x19, #4
  40a878:	mul	x19, x19, x26
  40a87c:	and	x19, x19, #0xfffffffffffffff
  40a880:	madd	x19, x19, x0, x24
  40a884:	cbz	x23, 40a890 <ferror@plt+0x7ac0>
  40a888:	mov	x0, x23
  40a88c:	bl	445770 <_obstack_memory_used@@Base+0xd6c>
  40a890:	mov	x0, #0x90                  	// #144
  40a894:	ldp	x23, x24, [sp, #48]
  40a898:	madd	x20, x20, x0, x21
  40a89c:	ldp	x25, x26, [sp, #64]
  40a8a0:	ldp	x27, x28, [sp, #80]
  40a8a4:	stp	x21, x19, [x22]
  40a8a8:	str	x20, [x22, #16]
  40a8ac:	ldp	x19, x20, [sp, #16]
  40a8b0:	ldp	x21, x22, [sp, #32]
  40a8b4:	ldp	x29, x30, [sp], #96
  40a8b8:	ret
  40a8bc:	cmp	x1, x0
  40a8c0:	b.eq	40a958 <ferror@plt+0x7b88>  // b.none
  40a8c4:	stp	x29, x30, [sp, #-80]!
  40a8c8:	mov	x29, sp
  40a8cc:	stp	x19, x20, [sp, #16]
  40a8d0:	mov	x19, x0
  40a8d4:	add	x20, x0, #0x10
  40a8d8:	stp	x21, x22, [sp, #32]
  40a8dc:	mov	x21, x1
  40a8e0:	stp	x23, x24, [sp, #48]
  40a8e4:	mov	x23, #0x10                  	// #16
  40a8e8:	cmp	x20, x21
  40a8ec:	b.eq	40a944 <ferror@plt+0x7b74>  // b.none
  40a8f0:	mov	x1, x19
  40a8f4:	mov	x0, x20
  40a8f8:	bl	405ba8 <ferror@plt+0x2dd8>
  40a8fc:	tst	w0, #0xff
  40a900:	b.eq	40a938 <ferror@plt+0x7b68>  // b.none
  40a904:	cmp	x20, x19
  40a908:	ldp	x22, x24, [x20]
  40a90c:	b.eq	40a920 <ferror@plt+0x7b50>  // b.none
  40a910:	sub	x2, x20, x19
  40a914:	mov	x1, x19
  40a918:	add	x0, x19, x23
  40a91c:	bl	4026b0 <memmove@plt>
  40a920:	stp	x22, x24, [sp, #64]
  40a924:	str	x22, [x19]
  40a928:	ldr	w0, [sp, #72]
  40a92c:	str	w0, [x19, #8]
  40a930:	add	x20, x20, #0x10
  40a934:	b	40a8e8 <ferror@plt+0x7b18>
  40a938:	mov	x0, x20
  40a93c:	bl	405f1c <ferror@plt+0x314c>
  40a940:	b	40a930 <ferror@plt+0x7b60>
  40a944:	ldp	x19, x20, [sp, #16]
  40a948:	ldp	x21, x22, [sp, #32]
  40a94c:	ldp	x23, x24, [sp, #48]
  40a950:	ldp	x29, x30, [sp], #80
  40a954:	ret
  40a958:	ret
  40a95c:	stp	x29, x30, [sp, #-32]!
  40a960:	mov	x29, sp
  40a964:	ldr	x2, [x0, #16]
  40a968:	stp	x19, x20, [sp, #16]
  40a96c:	add	x19, x0, #0x8
  40a970:	mov	x20, x1
  40a974:	mov	w1, #0x1                   	// #1
  40a978:	cbz	x2, 40a9ac <ferror@plt+0x7bdc>
  40a97c:	ldr	w1, [x2, #32]
  40a980:	ldr	w3, [x20]
  40a984:	cmp	w3, w1
  40a988:	b.cs	40a9a0 <ferror@plt+0x7bd0>  // b.hs, b.nlast
  40a98c:	ldr	x3, [x2, #16]
  40a990:	mov	w1, #0x1                   	// #1
  40a994:	mov	x19, x2
  40a998:	mov	x2, x3
  40a99c:	b	40a978 <ferror@plt+0x7ba8>
  40a9a0:	mov	w1, #0x0                   	// #0
  40a9a4:	ldr	x3, [x2, #24]
  40a9a8:	b	40a994 <ferror@plt+0x7bc4>
  40a9ac:	cbz	w1, 40a9f0 <ferror@plt+0x7c20>
  40a9b0:	ldr	x0, [x0, #24]
  40a9b4:	cmp	x0, x19
  40a9b8:	b.ne	40a9d0 <ferror@plt+0x7c00>  // b.any
  40a9bc:	mov	x1, x19
  40a9c0:	mov	x0, #0x0                   	// #0
  40a9c4:	ldp	x19, x20, [sp, #16]
  40a9c8:	ldp	x29, x30, [sp], #32
  40a9cc:	ret
  40a9d0:	mov	x0, x19
  40a9d4:	bl	445de8 <_obstack_memory_used@@Base+0x13e4>
  40a9d8:	ldr	w2, [x0, #32]
  40a9dc:	ldr	w1, [x20]
  40a9e0:	cmp	w2, w1
  40a9e4:	csel	x0, x0, xzr, cs  // cs = hs, nlast
  40a9e8:	csel	x1, x19, xzr, cc  // cc = lo, ul, last
  40a9ec:	b	40a9c4 <ferror@plt+0x7bf4>
  40a9f0:	mov	x0, x19
  40a9f4:	b	40a9d8 <ferror@plt+0x7c08>
  40a9f8:	stp	x29, x30, [sp, #-48]!
  40a9fc:	mov	x29, sp
  40aa00:	stp	x19, x20, [sp, #16]
  40aa04:	mov	x20, x0
  40aa08:	add	x0, x0, #0x8
  40aa0c:	stp	x21, x22, [sp, #32]
  40aa10:	cmp	x1, x0
  40aa14:	mov	x21, x2
  40aa18:	b.ne	40aa44 <ferror@plt+0x7c74>  // b.any
  40aa1c:	ldr	x0, [x20, #40]
  40aa20:	cbz	x0, 40aad8 <ferror@plt+0x7d08>
  40aa24:	ldr	x19, [x20, #32]
  40aa28:	ldr	w0, [x2]
  40aa2c:	ldr	w1, [x19, #32]
  40aa30:	cmp	w1, w0
  40aa34:	b.cs	40aad8 <ferror@plt+0x7d08>  // b.hs, b.nlast
  40aa38:	mov	x1, x19
  40aa3c:	mov	x0, #0x0                   	// #0
  40aa40:	b	40aaa8 <ferror@plt+0x7cd8>
  40aa44:	ldr	w0, [x1, #32]
  40aa48:	mov	x19, x1
  40aa4c:	ldr	w22, [x2]
  40aa50:	cmp	w22, w0
  40aa54:	b.cs	40aa94 <ferror@plt+0x7cc4>  // b.hs, b.nlast
  40aa58:	ldr	x0, [x20, #24]
  40aa5c:	cmp	x0, x1
  40aa60:	b.ne	40aa6c <ferror@plt+0x7c9c>  // b.any
  40aa64:	mov	x1, x0
  40aa68:	b	40aaa8 <ferror@plt+0x7cd8>
  40aa6c:	mov	x0, x1
  40aa70:	bl	445de8 <_obstack_memory_used@@Base+0x13e4>
  40aa74:	mov	x1, x0
  40aa78:	ldr	w0, [x0, #32]
  40aa7c:	cmp	w22, w0
  40aa80:	b.ls	40aad8 <ferror@plt+0x7d08>  // b.plast
  40aa84:	ldr	x0, [x1, #24]
  40aa88:	cbz	x0, 40aaa8 <ferror@plt+0x7cd8>
  40aa8c:	mov	x0, x19
  40aa90:	b	40aa64 <ferror@plt+0x7c94>
  40aa94:	b.ls	40aaf0 <ferror@plt+0x7d20>  // b.plast
  40aa98:	ldr	x1, [x20, #32]
  40aa9c:	cmp	x1, x19
  40aaa0:	b.ne	40aab8 <ferror@plt+0x7ce8>  // b.any
  40aaa4:	mov	x0, #0x0                   	// #0
  40aaa8:	ldp	x19, x20, [sp, #16]
  40aaac:	ldp	x21, x22, [sp, #32]
  40aab0:	ldp	x29, x30, [sp], #48
  40aab4:	ret
  40aab8:	mov	x0, x19
  40aabc:	bl	445d88 <_obstack_memory_used@@Base+0x1384>
  40aac0:	ldr	w1, [x0, #32]
  40aac4:	cmp	w22, w1
  40aac8:	b.cs	40aad8 <ferror@plt+0x7d08>  // b.hs, b.nlast
  40aacc:	ldr	x1, [x19, #24]
  40aad0:	cbnz	x1, 40aa64 <ferror@plt+0x7c94>
  40aad4:	b	40aa38 <ferror@plt+0x7c68>
  40aad8:	mov	x1, x21
  40aadc:	mov	x0, x20
  40aae0:	ldp	x19, x20, [sp, #16]
  40aae4:	ldp	x21, x22, [sp, #32]
  40aae8:	ldp	x29, x30, [sp], #48
  40aaec:	b	40a95c <ferror@plt+0x7b8c>
  40aaf0:	mov	x0, x1
  40aaf4:	mov	x1, #0x0                   	// #0
  40aaf8:	b	40aaa8 <ferror@plt+0x7cd8>
  40aafc:	mov	x6, x0
  40ab00:	mov	x7, x1
  40ab04:	mov	x4, x3
  40ab08:	mov	x5, x2
  40ab0c:	stp	x29, x30, [sp, #-16]!
  40ab10:	mov	x1, x2
  40ab14:	mov	x0, x7
  40ab18:	mov	x29, sp
  40ab1c:	bl	405af8 <ferror@plt+0x2d28>
  40ab20:	mov	x1, x4
  40ab24:	tst	w0, #0xff
  40ab28:	ldr	x8, [x6]
  40ab2c:	b.eq	40ab74 <ferror@plt+0x7da4>  // b.none
  40ab30:	mov	x0, x5
  40ab34:	bl	405af8 <ferror@plt+0x2d28>
  40ab38:	tst	w0, #0xff
  40ab3c:	b.eq	40ab50 <ferror@plt+0x7d80>  // b.none
  40ab40:	ldr	x0, [x5]
  40ab44:	str	x0, [x6]
  40ab48:	str	x8, [x5]
  40ab4c:	b	40ab90 <ferror@plt+0x7dc0>
  40ab50:	mov	x1, x4
  40ab54:	mov	x0, x7
  40ab58:	bl	405af8 <ferror@plt+0x2d28>
  40ab5c:	tst	w0, #0xff
  40ab60:	b.eq	40ab84 <ferror@plt+0x7db4>  // b.none
  40ab64:	ldr	x0, [x4]
  40ab68:	str	x0, [x6]
  40ab6c:	str	x8, [x4]
  40ab70:	b	40ab90 <ferror@plt+0x7dc0>
  40ab74:	mov	x0, x7
  40ab78:	bl	405af8 <ferror@plt+0x2d28>
  40ab7c:	tst	w0, #0xff
  40ab80:	b.eq	40ab98 <ferror@plt+0x7dc8>  // b.none
  40ab84:	ldr	x0, [x7]
  40ab88:	str	x0, [x6]
  40ab8c:	str	x8, [x7]
  40ab90:	ldp	x29, x30, [sp], #16
  40ab94:	ret
  40ab98:	mov	x1, x4
  40ab9c:	mov	x0, x5
  40aba0:	bl	405af8 <ferror@plt+0x2d28>
  40aba4:	tst	w0, #0xff
  40aba8:	b.eq	40ab40 <ferror@plt+0x7d70>  // b.none
  40abac:	b	40ab64 <ferror@plt+0x7d94>
  40abb0:	sub	x10, x2, #0x1
  40abb4:	mov	x5, x0
  40abb8:	mov	x0, #0x2                   	// #2
  40abbc:	mov	x9, x1
  40abc0:	mov	x6, x2
  40abc4:	mov	x7, x3
  40abc8:	sdiv	x10, x10, x0
  40abcc:	mov	x4, x1
  40abd0:	cmp	x10, x1
  40abd4:	b.gt	40ac6c <ferror@plt+0x7e9c>
  40abd8:	tbnz	w2, #0, 40ac04 <ferror@plt+0x7e34>
  40abdc:	sub	x6, x2, #0x2
  40abe0:	mov	x2, #0x2                   	// #2
  40abe4:	sdiv	x6, x6, x2
  40abe8:	cmp	x6, x1
  40abec:	b.ne	40ac04 <ferror@plt+0x7e34>  // b.any
  40abf0:	lsl	x0, x1, #1
  40abf4:	add	x0, x0, #0x1
  40abf8:	mov	x4, x0
  40abfc:	ldr	x1, [x5, x0, lsl #3]
  40ac00:	str	x1, [x5, x9, lsl #3]
  40ac04:	sub	x0, x4, #0x1
  40ac08:	mov	x2, #0x2                   	// #2
  40ac0c:	sdiv	x0, x0, x2
  40ac10:	cmp	x9, x4
  40ac14:	b.ge	40ac64 <ferror@plt+0x7e94>  // b.tcont
  40ac18:	ldr	x1, [x5, x0, lsl #3]
  40ac1c:	ldr	w3, [x7, #88]
  40ac20:	ldr	w6, [x1, #88]
  40ac24:	cmp	w6, w3
  40ac28:	b.ne	40ac38 <ferror@plt+0x7e68>  // b.any
  40ac2c:	ldr	w6, [x1, #92]
  40ac30:	ldr	w3, [x7, #92]
  40ac34:	cmp	w6, w3
  40ac38:	cset	w3, cc  // cc = lo, ul, last
  40ac3c:	lsl	x6, x4, #3
  40ac40:	cbz	w3, 40ac64 <ferror@plt+0x7e94>
  40ac44:	str	x1, [x5, x6]
  40ac48:	sub	x1, x0, #0x1
  40ac4c:	mov	x4, x0
  40ac50:	sdiv	x0, x1, x2
  40ac54:	b	40ac10 <ferror@plt+0x7e40>
  40ac58:	str	x7, [x5, x4, lsl #3]
  40ac5c:	ldp	x29, x30, [sp], #16
  40ac60:	ret
  40ac64:	str	x7, [x5, x4, lsl #3]
  40ac68:	ret
  40ac6c:	stp	x29, x30, [sp, #-16]!
  40ac70:	mov	x29, sp
  40ac74:	add	x0, x4, #0x1
  40ac78:	lsl	x8, x0, #1
  40ac7c:	add	x0, x5, x0, lsl #4
  40ac80:	sub	x11, x8, #0x1
  40ac84:	add	x1, x5, x11, lsl #3
  40ac88:	bl	405af8 <ferror@plt+0x2d28>
  40ac8c:	tst	w0, #0xff
  40ac90:	csel	x8, x8, x11, eq  // eq = none
  40ac94:	cmp	x10, x8
  40ac98:	ldr	x0, [x5, x8, lsl #3]
  40ac9c:	str	x0, [x5, x4, lsl #3]
  40aca0:	mov	x4, x8
  40aca4:	b.gt	40ac74 <ferror@plt+0x7ea4>
  40aca8:	tbnz	w6, #0, 40acd4 <ferror@plt+0x7f04>
  40acac:	sub	x6, x6, #0x2
  40acb0:	mov	x2, #0x2                   	// #2
  40acb4:	sdiv	x6, x6, x2
  40acb8:	cmp	x6, x8
  40acbc:	b.ne	40acd4 <ferror@plt+0x7f04>  // b.any
  40acc0:	lsl	x0, x8, #1
  40acc4:	add	x0, x0, #0x1
  40acc8:	mov	x4, x0
  40accc:	ldr	x1, [x5, x0, lsl #3]
  40acd0:	str	x1, [x5, x8, lsl #3]
  40acd4:	sub	x0, x4, #0x1
  40acd8:	mov	x2, #0x2                   	// #2
  40acdc:	sdiv	x0, x0, x2
  40ace0:	cmp	x9, x4
  40ace4:	b.ge	40ac58 <ferror@plt+0x7e88>  // b.tcont
  40ace8:	ldr	x1, [x5, x0, lsl #3]
  40acec:	ldr	w3, [x7, #88]
  40acf0:	ldr	w6, [x1, #88]
  40acf4:	cmp	w6, w3
  40acf8:	b.ne	40ad08 <ferror@plt+0x7f38>  // b.any
  40acfc:	ldr	w6, [x1, #92]
  40ad00:	ldr	w3, [x7, #92]
  40ad04:	cmp	w6, w3
  40ad08:	cset	w3, cc  // cc = lo, ul, last
  40ad0c:	lsl	x6, x4, #3
  40ad10:	cbz	w3, 40ac58 <ferror@plt+0x7e88>
  40ad14:	str	x1, [x5, x6]
  40ad18:	sub	x1, x0, #0x1
  40ad1c:	mov	x4, x0
  40ad20:	sdiv	x0, x1, x2
  40ad24:	b	40ace0 <ferror@plt+0x7f10>
  40ad28:	stp	x29, x30, [sp, #-80]!
  40ad2c:	mov	x29, sp
  40ad30:	stp	x19, x20, [sp, #16]
  40ad34:	mov	x20, x0
  40ad38:	mov	x19, x1
  40ad3c:	stp	x21, x22, [sp, #32]
  40ad40:	mov	x22, x2
  40ad44:	stp	x23, x24, [sp, #48]
  40ad48:	mov	w23, w3
  40ad4c:	add	x24, x0, #0x8
  40ad50:	str	x25, [sp, #64]
  40ad54:	sub	x0, x19, x20
  40ad58:	cmp	x0, #0x80
  40ad5c:	b.le	40ae64 <ferror@plt+0x8094>
  40ad60:	asr	x25, x0, #3
  40ad64:	cbnz	x22, 40adcc <ferror@plt+0x7ffc>
  40ad68:	sub	x21, x25, #0x2
  40ad6c:	asr	x21, x21, #1
  40ad70:	ldr	x3, [x20, x21, lsl #3]
  40ad74:	mov	w4, w23
  40ad78:	mov	x2, x25
  40ad7c:	mov	x1, x21
  40ad80:	mov	x0, x20
  40ad84:	bl	40abb0 <ferror@plt+0x7de0>
  40ad88:	cbz	x21, 40ad94 <ferror@plt+0x7fc4>
  40ad8c:	sub	x21, x21, #0x1
  40ad90:	b	40ad70 <ferror@plt+0x7fa0>
  40ad94:	sub	x0, x19, x20
  40ad98:	sub	x19, x19, #0x8
  40ad9c:	cmp	x0, #0x8
  40ada0:	b.le	40ae64 <ferror@plt+0x8094>
  40ada4:	ldr	x3, [x19]
  40ada8:	sub	x2, x19, x20
  40adac:	ldr	x0, [x20]
  40adb0:	str	x0, [x19]
  40adb4:	mov	w4, w23
  40adb8:	asr	x2, x2, #3
  40adbc:	mov	x0, x20
  40adc0:	mov	x1, #0x0                   	// #0
  40adc4:	bl	40abb0 <ferror@plt+0x7de0>
  40adc8:	b	40ad94 <ferror@plt+0x7fc4>
  40adcc:	asr	x2, x0, #4
  40add0:	mov	w4, w23
  40add4:	sub	x3, x19, #0x8
  40add8:	mov	x1, x24
  40addc:	add	x2, x20, x2, lsl #3
  40ade0:	mov	x0, x20
  40ade4:	bl	40aafc <ferror@plt+0x7d2c>
  40ade8:	sub	x22, x22, #0x1
  40adec:	mov	x21, x24
  40adf0:	mov	x4, x19
  40adf4:	mov	x1, x20
  40adf8:	mov	x0, x21
  40adfc:	bl	405af8 <ferror@plt+0x2d28>
  40ae00:	tst	w0, #0xff
  40ae04:	b.ne	40ae5c <ferror@plt+0x808c>  // b.any
  40ae08:	sub	x5, x4, #0x8
  40ae0c:	mov	x4, x5
  40ae10:	mov	x1, x5
  40ae14:	mov	x0, x20
  40ae18:	bl	405af8 <ferror@plt+0x2d28>
  40ae1c:	sub	x5, x5, #0x8
  40ae20:	tst	w0, #0xff
  40ae24:	b.ne	40ae0c <ferror@plt+0x803c>  // b.any
  40ae28:	cmp	x21, x4
  40ae2c:	b.cc	40ae4c <ferror@plt+0x807c>  // b.lo, b.ul, b.last
  40ae30:	mov	x1, x19
  40ae34:	mov	w3, w23
  40ae38:	mov	x2, x22
  40ae3c:	mov	x0, x21
  40ae40:	mov	x19, x21
  40ae44:	bl	40ad28 <ferror@plt+0x7f58>
  40ae48:	b	40ad54 <ferror@plt+0x7f84>
  40ae4c:	ldr	x1, [x4]
  40ae50:	ldr	x0, [x21]
  40ae54:	str	x1, [x21]
  40ae58:	str	x0, [x4]
  40ae5c:	add	x21, x21, #0x8
  40ae60:	b	40adf4 <ferror@plt+0x8024>
  40ae64:	ldp	x19, x20, [sp, #16]
  40ae68:	ldp	x21, x22, [sp, #32]
  40ae6c:	ldp	x23, x24, [sp, #48]
  40ae70:	ldr	x25, [sp, #64]
  40ae74:	ldp	x29, x30, [sp], #80
  40ae78:	ret
  40ae7c:	cmp	x0, x1
  40ae80:	b.eq	40af20 <ferror@plt+0x8150>  // b.none
  40ae84:	stp	x29, x30, [sp, #-48]!
  40ae88:	mov	x29, sp
  40ae8c:	stp	x19, x20, [sp, #16]
  40ae90:	sub	x20, x1, x0
  40ae94:	mov	x19, x0
  40ae98:	stp	x21, x22, [sp, #32]
  40ae9c:	mov	w22, w2
  40aea0:	asr	x2, x20, #3
  40aea4:	clz	x3, x2
  40aea8:	mov	w2, #0x3f                  	// #63
  40aeac:	sub	w2, w2, w3
  40aeb0:	mov	x21, x1
  40aeb4:	mov	w3, w22
  40aeb8:	sbfiz	x2, x2, #1, #32
  40aebc:	bl	40ad28 <ferror@plt+0x7f58>
  40aec0:	cmp	x20, #0x80
  40aec4:	b.le	40aef4 <ferror@plt+0x8124>
  40aec8:	add	x20, x19, #0x80
  40aecc:	mov	w2, w22
  40aed0:	mov	x1, x20
  40aed4:	mov	x0, x19
  40aed8:	bl	40a2d0 <ferror@plt+0x7500>
  40aedc:	cmp	x21, x20
  40aee0:	b.eq	40af10 <ferror@plt+0x8140>  // b.none
  40aee4:	mov	x0, x20
  40aee8:	add	x20, x20, #0x8
  40aeec:	bl	405ee0 <ferror@plt+0x3110>
  40aef0:	b	40aedc <ferror@plt+0x810c>
  40aef4:	mov	w2, w22
  40aef8:	mov	x1, x21
  40aefc:	mov	x0, x19
  40af00:	ldp	x19, x20, [sp, #16]
  40af04:	ldp	x21, x22, [sp, #32]
  40af08:	ldp	x29, x30, [sp], #48
  40af0c:	b	40a2d0 <ferror@plt+0x7500>
  40af10:	ldp	x19, x20, [sp, #16]
  40af14:	ldp	x21, x22, [sp, #32]
  40af18:	ldp	x29, x30, [sp], #48
  40af1c:	ret
  40af20:	ret
  40af24:	sub	x6, x2, #0x1
  40af28:	mov	x4, #0x2                   	// #2
  40af2c:	sdiv	x6, x6, x4
  40af30:	mov	x4, x1
  40af34:	cmp	x6, x4
  40af38:	b.le	40af68 <ferror@plt+0x8198>
  40af3c:	add	x5, x4, #0x1
  40af40:	lsl	x5, x5, #1
  40af44:	sub	x7, x5, #0x1
  40af48:	ldr	w8, [x0, x5, lsl #2]
  40af4c:	ldr	w9, [x0, x7, lsl #2]
  40af50:	cmp	w9, w8
  40af54:	csel	x5, x5, x7, ls  // ls = plast
  40af58:	ldr	w7, [x0, x5, lsl #2]
  40af5c:	str	w7, [x0, x4, lsl #2]
  40af60:	mov	x4, x5
  40af64:	b	40af34 <ferror@plt+0x8164>
  40af68:	tbnz	w2, #0, 40af94 <ferror@plt+0x81c4>
  40af6c:	sub	x2, x2, #0x2
  40af70:	mov	x5, #0x2                   	// #2
  40af74:	sdiv	x2, x2, x5
  40af78:	cmp	x2, x4
  40af7c:	b.ne	40af94 <ferror@plt+0x81c4>  // b.any
  40af80:	lsl	x2, x4, #1
  40af84:	add	x2, x2, #0x1
  40af88:	ldr	w5, [x0, x2, lsl #2]
  40af8c:	str	w5, [x0, x4, lsl #2]
  40af90:	mov	x4, x2
  40af94:	sub	x2, x4, #0x1
  40af98:	mov	x5, #0x2                   	// #2
  40af9c:	sdiv	x2, x2, x5
  40afa0:	lsl	x7, x4, #2
  40afa4:	add	x6, x0, x4, lsl #2
  40afa8:	cmp	x1, x4
  40afac:	b.ge	40afd0 <ferror@plt+0x8200>  // b.tcont
  40afb0:	ldr	w4, [x0, x2, lsl #2]
  40afb4:	cmp	w3, w4
  40afb8:	b.ls	40afd0 <ferror@plt+0x8200>  // b.plast
  40afbc:	sub	x6, x2, #0x1
  40afc0:	str	w4, [x0, x7]
  40afc4:	mov	x4, x2
  40afc8:	sdiv	x2, x6, x5
  40afcc:	b	40afa0 <ferror@plt+0x81d0>
  40afd0:	str	w3, [x6]
  40afd4:	ret
  40afd8:	stp	x29, x30, [sp, #-112]!
  40afdc:	mov	x5, x1
  40afe0:	mov	x29, sp
  40afe4:	stp	x25, x26, [sp, #64]
  40afe8:	sub	x26, x2, #0x1
  40afec:	stp	x19, x20, [sp, #16]
  40aff0:	mov	x20, x0
  40aff4:	mov	x0, #0x2                   	// #2
  40aff8:	stp	x21, x22, [sp, #32]
  40affc:	mov	x21, x2
  40b000:	mov	x22, x3
  40b004:	sdiv	x26, x26, x0
  40b008:	stp	x23, x24, [sp, #48]
  40b00c:	mov	x23, x1
  40b010:	mov	x24, x4
  40b014:	stp	x27, x28, [sp, #80]
  40b018:	cmp	x26, x5
  40b01c:	lsl	x25, x5, #4
  40b020:	b.le	40b068 <ferror@plt+0x8298>
  40b024:	add	x0, x5, #0x1
  40b028:	lsl	x19, x0, #1
  40b02c:	add	x0, x20, x0, lsl #5
  40b030:	sub	x27, x19, #0x1
  40b034:	add	x1, x20, x27, lsl #4
  40b038:	bl	405ba8 <ferror@plt+0x2dd8>
  40b03c:	tst	w0, #0xff
  40b040:	add	x0, x20, x25
  40b044:	csel	x19, x19, x27, eq  // eq = none
  40b048:	mov	x5, x19
  40b04c:	lsl	x2, x19, #4
  40b050:	add	x1, x20, x19, lsl #4
  40b054:	ldr	x2, [x20, x2]
  40b058:	str	x2, [x20, x25]
  40b05c:	ldr	w1, [x1, #8]
  40b060:	str	w1, [x0, #8]
  40b064:	b	40b018 <ferror@plt+0x8248>
  40b068:	tbnz	w21, #0, 40b0a4 <ferror@plt+0x82d4>
  40b06c:	sub	x21, x21, #0x2
  40b070:	mov	x2, #0x2                   	// #2
  40b074:	sdiv	x21, x21, x2
  40b078:	cmp	x21, x5
  40b07c:	b.ne	40b0a4 <ferror@plt+0x82d4>  // b.any
  40b080:	lsl	x5, x5, #1
  40b084:	add	x0, x20, x25
  40b088:	add	x5, x5, #0x1
  40b08c:	lsl	x2, x5, #4
  40b090:	add	x1, x20, x5, lsl #4
  40b094:	ldr	x2, [x20, x2]
  40b098:	str	x2, [x20, x25]
  40b09c:	ldr	w1, [x1, #8]
  40b0a0:	str	w1, [x0, #8]
  40b0a4:	sub	x19, x5, #0x1
  40b0a8:	mov	x0, #0x2                   	// #2
  40b0ac:	mov	x21, x0
  40b0b0:	sdiv	x19, x19, x0
  40b0b4:	lsl	x28, x5, #4
  40b0b8:	add	x25, x20, x5, lsl #4
  40b0bc:	cmp	x23, x5
  40b0c0:	b.ge	40b0fc <ferror@plt+0x832c>  // b.tcont
  40b0c4:	lsl	x26, x19, #4
  40b0c8:	add	x27, x20, x19, lsl #4
  40b0cc:	mov	x1, x22
  40b0d0:	ldr	x0, [x20, x26]
  40b0d4:	bl	402ad0 <strcmp@plt>
  40b0d8:	tbz	w0, #31, 40b0fc <ferror@plt+0x832c>
  40b0dc:	ldr	x0, [x20, x26]
  40b0e0:	str	x0, [x20, x28]
  40b0e4:	mov	x5, x19
  40b0e8:	ldr	w0, [x27, #8]
  40b0ec:	str	w0, [x25, #8]
  40b0f0:	sub	x0, x19, #0x1
  40b0f4:	sdiv	x19, x0, x21
  40b0f8:	b	40b0b4 <ferror@plt+0x82e4>
  40b0fc:	str	x24, [sp, #104]
  40b100:	ldp	x19, x20, [sp, #16]
  40b104:	ldp	x23, x24, [sp, #48]
  40b108:	ldp	x27, x28, [sp, #80]
  40b10c:	str	x22, [x25]
  40b110:	ldp	x21, x22, [sp, #32]
  40b114:	ldr	w0, [sp, #104]
  40b118:	str	w0, [x25, #8]
  40b11c:	ldp	x25, x26, [sp, #64]
  40b120:	ldp	x29, x30, [sp], #112
  40b124:	ret
  40b128:	ldr	x4, [x1]
  40b12c:	sub	sp, sp, #0x10
  40b130:	ldp	x2, x3, [x0]
  40b134:	str	x4, [x0]
  40b138:	ldr	w4, [x1, #8]
  40b13c:	str	w4, [x0, #8]
  40b140:	stp	x2, x3, [sp]
  40b144:	ldr	w0, [sp, #8]
  40b148:	str	x2, [x1]
  40b14c:	str	w0, [x1, #8]
  40b150:	add	sp, sp, #0x10
  40b154:	ret
  40b158:	stp	x29, x30, [sp, #-64]!
  40b15c:	mov	x29, sp
  40b160:	stp	x19, x20, [sp, #16]
  40b164:	mov	x20, x0
  40b168:	mov	x19, x1
  40b16c:	mov	x0, x19
  40b170:	mov	w1, #0x22                  	// #34
  40b174:	stp	x21, x22, [sp, #32]
  40b178:	adrp	x21, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40b17c:	adrp	x22, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40b180:	str	x23, [sp, #48]
  40b184:	bl	41358c <ferror@plt+0x107bc>
  40b188:	ldr	x20, [x20, #8]
  40b18c:	add	x21, x21, #0x3b
  40b190:	add	x22, x22, #0x38
  40b194:	adrp	x23, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40b198:	ldrb	w1, [x20]
  40b19c:	cbz	w1, 40b238 <ferror@plt+0x8468>
  40b1a0:	cmp	w1, #0xd
  40b1a4:	b.hi	40b1d0 <ferror@plt+0x8400>  // b.pmore
  40b1a8:	cmp	w1, #0x7
  40b1ac:	b.ls	40b1e0 <ferror@plt+0x8410>  // b.plast
  40b1b0:	sub	w0, w1, #0x8
  40b1b4:	cmp	w0, #0x5
  40b1b8:	b.hi	40b1e0 <ferror@plt+0x8410>  // b.pmore
  40b1bc:	add	x2, x23, #0x80
  40b1c0:	ldrb	w0, [x2, w0, uxtw]
  40b1c4:	adr	x2, 40b1d0 <ferror@plt+0x8400>
  40b1c8:	add	x0, x2, w0, sxtb #2
  40b1cc:	br	x0
  40b1d0:	cmp	w1, #0x22
  40b1d4:	b.eq	40b1ec <ferror@plt+0x841c>  // b.none
  40b1d8:	cmp	w1, #0x5c
  40b1dc:	b.eq	40b200 <ferror@plt+0x8430>  // b.none
  40b1e0:	mov	x0, x19
  40b1e4:	bl	41358c <ferror@plt+0x107bc>
  40b1e8:	b	40b1f8 <ferror@plt+0x8428>
  40b1ec:	mov	x1, x22
  40b1f0:	mov	x0, x19
  40b1f4:	bl	413938 <ferror@plt+0x10b68>
  40b1f8:	add	x20, x20, #0x1
  40b1fc:	b	40b198 <ferror@plt+0x83c8>
  40b200:	mov	x1, x21
  40b204:	b	40b1f0 <ferror@plt+0x8420>
  40b208:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40b20c:	add	x1, x1, #0x3e
  40b210:	b	40b1f0 <ferror@plt+0x8420>
  40b214:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40b218:	add	x1, x1, #0x41
  40b21c:	b	40b1f0 <ferror@plt+0x8420>
  40b220:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40b224:	add	x1, x1, #0x44
  40b228:	b	40b1f0 <ferror@plt+0x8420>
  40b22c:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40b230:	add	x1, x1, #0x47
  40b234:	b	40b1f0 <ferror@plt+0x8420>
  40b238:	mov	x0, x19
  40b23c:	mov	w1, #0x22                  	// #34
  40b240:	ldp	x19, x20, [sp, #16]
  40b244:	ldp	x21, x22, [sp, #32]
  40b248:	ldr	x23, [sp, #48]
  40b24c:	ldp	x29, x30, [sp], #64
  40b250:	b	41358c <ferror@plt+0x107bc>
  40b254:	sub	sp, sp, #0x420
  40b258:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40b25c:	add	x2, x2, #0x4a
  40b260:	stp	x29, x30, [sp]
  40b264:	mov	x29, sp
  40b268:	ldr	d0, [x0, #8]
  40b26c:	add	x0, sp, #0x20
  40b270:	str	x19, [sp, #16]
  40b274:	mov	x19, x1
  40b278:	mov	x1, #0x400                 	// #1024
  40b27c:	bl	402800 <snprintf@plt>
  40b280:	add	x1, sp, #0x20
  40b284:	mov	x0, x19
  40b288:	bl	413938 <ferror@plt+0x10b68>
  40b28c:	ldp	x29, x30, [sp]
  40b290:	ldr	x19, [sp, #16]
  40b294:	add	sp, sp, #0x420
  40b298:	ret
  40b29c:	mov	x2, x0
  40b2a0:	mov	x0, x1
  40b2a4:	ldr	w1, [x2, #8]
  40b2a8:	cmp	w1, #0x5
  40b2ac:	b.eq	40b2cc <ferror@plt+0x84fc>  // b.none
  40b2b0:	cmp	w1, #0x6
  40b2b4:	b.eq	40b2d8 <ferror@plt+0x8508>  // b.none
  40b2b8:	cmp	w1, #0x4
  40b2bc:	b.ne	40b2e4 <ferror@plt+0x8514>  // b.any
  40b2c0:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40b2c4:	add	x1, x1, #0x4d
  40b2c8:	b	413938 <ferror@plt+0x10b68>
  40b2cc:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40b2d0:	add	x1, x1, #0x52
  40b2d4:	b	40b2c8 <ferror@plt+0x84f8>
  40b2d8:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40b2dc:	add	x1, x1, #0x58
  40b2e0:	b	40b2c8 <ferror@plt+0x84f8>
  40b2e4:	stp	x29, x30, [sp, #-16]!
  40b2e8:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40b2ec:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40b2f0:	mov	x29, sp
  40b2f4:	add	x2, x2, #0x5d
  40b2f8:	add	x0, x0, #0x63
  40b2fc:	mov	w1, #0xde                  	// #222
  40b300:	bl	402de0 <ferror@plt+0x10>
  40b304:	stp	x29, x30, [sp, #-64]!
  40b308:	mov	x29, sp
  40b30c:	stp	x19, x20, [sp, #16]
  40b310:	mov	x19, x1
  40b314:	mov	w20, #0x0                   	// #0
  40b318:	mov	w1, #0x5b                  	// #91
  40b31c:	stp	x21, x22, [sp, #32]
  40b320:	mov	x21, x0
  40b324:	adrp	x22, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40b328:	mov	x0, x19
  40b32c:	add	x22, x22, #0x75
  40b330:	str	x23, [sp, #48]
  40b334:	bl	41358c <ferror@plt+0x107bc>
  40b338:	ldr	x1, [x21, #8]
  40b33c:	cbz	x1, 40b380 <ferror@plt+0x85b0>
  40b340:	ldr	w0, [x1, #4]
  40b344:	cmp	w20, w0
  40b348:	b.cs	40b380 <ferror@plt+0x85b0>  // b.hs, b.nlast
  40b34c:	add	x1, x1, w20, uxtw #3
  40b350:	ldr	x23, [x1, #8]
  40b354:	cbz	w20, 40b364 <ferror@plt+0x8594>
  40b358:	mov	x1, x22
  40b35c:	mov	x0, x19
  40b360:	bl	413938 <ferror@plt+0x10b68>
  40b364:	ldr	x0, [x23]
  40b368:	mov	x1, x19
  40b36c:	add	w20, w20, #0x1
  40b370:	ldr	x2, [x0, #24]
  40b374:	mov	x0, x23
  40b378:	blr	x2
  40b37c:	b	40b338 <ferror@plt+0x8568>
  40b380:	mov	x0, x19
  40b384:	mov	w1, #0x5d                  	// #93
  40b388:	ldp	x19, x20, [sp, #16]
  40b38c:	ldp	x21, x22, [sp, #32]
  40b390:	ldr	x23, [sp, #48]
  40b394:	ldp	x29, x30, [sp], #64
  40b398:	b	41358c <ferror@plt+0x107bc>
  40b39c:	stp	x29, x30, [sp, #-32]!
  40b3a0:	mov	x29, sp
  40b3a4:	stp	x19, x20, [sp, #16]
  40b3a8:	mov	x20, x0
  40b3ac:	mov	w19, #0x0                   	// #0
  40b3b0:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40b3b4:	add	x0, x0, #0xc8
  40b3b8:	str	x0, [x20]
  40b3bc:	ldr	x0, [x20, #8]
  40b3c0:	cbz	x0, 40b3f0 <ferror@plt+0x8620>
  40b3c4:	ldr	w1, [x0, #4]
  40b3c8:	cmp	w19, w1
  40b3cc:	b.cs	40b3e4 <ferror@plt+0x8614>  // b.hs, b.nlast
  40b3d0:	add	x1, x0, w19, uxtw #3
  40b3d4:	ldr	x0, [x1, #8]
  40b3d8:	cbnz	x0, 40b3fc <ferror@plt+0x862c>
  40b3dc:	add	w19, w19, #0x1
  40b3e0:	b	40b3bc <ferror@plt+0x85ec>
  40b3e4:	ldrsb	w1, [x0, #3]
  40b3e8:	tbz	w1, #31, 40b40c <ferror@plt+0x863c>
  40b3ec:	str	wzr, [x0, #4]
  40b3f0:	ldp	x19, x20, [sp, #16]
  40b3f4:	ldp	x29, x30, [sp], #32
  40b3f8:	ret
  40b3fc:	ldr	x1, [x0]
  40b400:	ldr	x1, [x1, #8]
  40b404:	blr	x1
  40b408:	b	40b3dc <ferror@plt+0x860c>
  40b40c:	ldp	x19, x20, [sp, #16]
  40b410:	ldp	x29, x30, [sp], #32
  40b414:	b	402b30 <free@plt>
  40b418:	stp	x29, x30, [sp, #-32]!
  40b41c:	mov	x29, sp
  40b420:	str	x19, [sp, #16]
  40b424:	mov	x19, x0
  40b428:	bl	40b39c <ferror@plt+0x85cc>
  40b42c:	mov	x0, x19
  40b430:	mov	x1, #0x10                  	// #16
  40b434:	ldr	x19, [sp, #16]
  40b438:	ldp	x29, x30, [sp], #32
  40b43c:	b	445778 <_obstack_memory_used@@Base+0xd74>
  40b440:	stp	x29, x30, [sp, #-80]!
  40b444:	mov	x29, sp
  40b448:	stp	x19, x20, [sp, #16]
  40b44c:	stp	x21, x22, [sp, #32]
  40b450:	stp	x23, x24, [sp, #48]
  40b454:	str	x25, [sp, #64]
  40b458:	cbnz	x1, 40b474 <ferror@plt+0x86a4>
  40b45c:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  40b460:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40b464:	add	x2, x2, #0xcfb
  40b468:	add	x0, x0, #0x63
  40b46c:	mov	w1, #0x89                  	// #137
  40b470:	bl	402de0 <ferror@plt+0x10>
  40b474:	ldr	x22, [x0, #8]
  40b478:	mov	x20, x0
  40b47c:	mov	x23, x1
  40b480:	cbz	x22, 40b514 <ferror@plt+0x8744>
  40b484:	ldp	w0, w21, [x22]
  40b488:	ubfx	x0, x0, #0, #31
  40b48c:	cmp	w0, w21
  40b490:	b.ne	40b540 <ferror@plt+0x8770>  // b.any
  40b494:	ldrsb	w0, [x22, #3]
  40b498:	tbz	w0, #31, 40b514 <ferror@plt+0x8744>
  40b49c:	add	w2, w21, #0x1
  40b4a0:	mov	w24, #0x1                   	// #1
  40b4a4:	str	xzr, [x20, #8]
  40b4a8:	ldr	x0, [x20, #8]
  40b4ac:	cbz	x0, 40b524 <ferror@plt+0x8754>
  40b4b0:	ldr	w1, [x0, #4]
  40b4b4:	ldr	w0, [x0]
  40b4b8:	add	w1, w2, w1
  40b4bc:	and	w0, w0, #0x7fffffff
  40b4c0:	bl	4156fc <ferror@plt+0x1292c>
  40b4c4:	mov	w19, w0
  40b4c8:	ldr	x0, [x20, #8]
  40b4cc:	ubfiz	x1, x19, #3, #32
  40b4d0:	add	x1, x1, #0x8
  40b4d4:	cbz	x0, 40b534 <ferror@plt+0x8764>
  40b4d8:	ldr	w25, [x0, #4]
  40b4dc:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  40b4e0:	str	x0, [x20, #8]
  40b4e4:	and	w2, w19, #0x7fffffff
  40b4e8:	stp	w2, w25, [x0]
  40b4ec:	cbz	w24, 40b540 <ferror@plt+0x8770>
  40b4f0:	mov	w3, w21
  40b4f4:	mov	x1, #0x0                   	// #0
  40b4f8:	add	x2, x1, #0x1
  40b4fc:	cmp	x3, x1
  40b500:	b.eq	40b53c <ferror@plt+0x876c>  // b.none
  40b504:	ldr	x1, [x22, x2, lsl #3]
  40b508:	str	x1, [x0, x2, lsl #3]
  40b50c:	mov	x1, x2
  40b510:	b	40b4f8 <ferror@plt+0x8728>
  40b514:	mov	w24, #0x0                   	// #0
  40b518:	mov	w21, #0x0                   	// #0
  40b51c:	mov	w2, #0x1                   	// #1
  40b520:	b	40b4a8 <ferror@plt+0x86d8>
  40b524:	cmp	w2, #0x4
  40b528:	mov	w19, #0x4                   	// #4
  40b52c:	csel	w19, w2, w19, cs  // cs = hs, nlast
  40b530:	b	40b4c8 <ferror@plt+0x86f8>
  40b534:	mov	w25, #0x0                   	// #0
  40b538:	b	40b4dc <ferror@plt+0x870c>
  40b53c:	str	w21, [x0, #4]
  40b540:	ldr	x1, [x20, #8]
  40b544:	ldp	x19, x20, [sp, #16]
  40b548:	ldr	w0, [x1, #4]
  40b54c:	ldp	x21, x22, [sp, #32]
  40b550:	add	w2, w0, #0x1
  40b554:	add	x0, x1, w0, uxtw #3
  40b558:	ldr	x25, [sp, #64]
  40b55c:	str	w2, [x1, #4]
  40b560:	str	x23, [x0, #8]
  40b564:	ldp	x23, x24, [sp, #48]
  40b568:	ldp	x29, x30, [sp], #80
  40b56c:	ret
  40b570:	stp	x29, x30, [sp, #-32]!
  40b574:	mov	x29, sp
  40b578:	str	x19, [sp, #16]
  40b57c:	mov	x19, x0
  40b580:	mov	x0, x1
  40b584:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40b588:	add	x1, x1, #0x128
  40b58c:	str	x1, [x19]
  40b590:	cbnz	x0, 40b5ac <ferror@plt+0x87dc>
  40b594:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  40b598:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40b59c:	add	x2, x2, #0x65
  40b5a0:	add	x0, x0, #0x63
  40b5a4:	mov	w1, #0x9f                  	// #159
  40b5a8:	bl	402de0 <ferror@plt+0x10>
  40b5ac:	bl	445390 <_obstack_memory_used@@Base+0x98c>
  40b5b0:	str	x0, [x19, #8]
  40b5b4:	ldr	x19, [sp, #16]
  40b5b8:	ldp	x29, x30, [sp], #32
  40b5bc:	ret
  40b5c0:	stp	x29, x30, [sp, #-80]!
  40b5c4:	mov	x29, sp
  40b5c8:	stp	x19, x20, [sp, #16]
  40b5cc:	mov	x20, x0
  40b5d0:	mov	x19, x1
  40b5d4:	mov	w1, #0x7b                  	// #123
  40b5d8:	mov	x0, x19
  40b5dc:	add	x20, x20, #0x8
  40b5e0:	stp	x21, x22, [sp, #32]
  40b5e4:	adrp	x22, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40b5e8:	adrp	x21, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40b5ec:	add	x22, x22, #0x75
  40b5f0:	add	x21, x21, #0x78
  40b5f4:	str	x23, [sp, #48]
  40b5f8:	bl	41358c <ferror@plt+0x107bc>
  40b5fc:	mov	x0, x20
  40b600:	bl	40bae0 <ferror@plt+0x8d10>
  40b604:	stp	x0, x1, [sp, #64]
  40b608:	ldr	x0, [sp, #64]
  40b60c:	cbz	x0, 40b67c <ferror@plt+0x88ac>
  40b610:	mov	x0, x20
  40b614:	bl	40bae0 <ferror@plt+0x8d10>
  40b618:	ldr	x2, [sp, #64]
  40b61c:	cmp	x2, x0
  40b620:	b.ne	40b630 <ferror@plt+0x8860>  // b.any
  40b624:	ldr	x0, [sp, #72]
  40b628:	cmp	x0, x1
  40b62c:	b.eq	40b63c <ferror@plt+0x886c>  // b.none
  40b630:	mov	x1, x22
  40b634:	mov	x0, x19
  40b638:	bl	413938 <ferror@plt+0x10b68>
  40b63c:	ldr	x0, [sp, #64]
  40b640:	mov	x1, x21
  40b644:	ldp	x2, x23, [x0]
  40b648:	mov	x0, x19
  40b64c:	bl	414f80 <ferror@plt+0x121b0>
  40b650:	ldr	x0, [x23]
  40b654:	mov	x1, x19
  40b658:	ldr	x2, [x0, #24]
  40b65c:	mov	x0, x23
  40b660:	blr	x2
  40b664:	ldr	x0, [sp, #64]
  40b668:	add	x0, x0, #0x10
  40b66c:	str	x0, [sp, #64]
  40b670:	add	x0, sp, #0x40
  40b674:	bl	40baac <ferror@plt+0x8cdc>
  40b678:	b	40b608 <ferror@plt+0x8838>
  40b67c:	ldr	x0, [sp, #72]
  40b680:	cbnz	x0, 40b610 <ferror@plt+0x8840>
  40b684:	mov	x0, x19
  40b688:	mov	w1, #0x7d                  	// #125
  40b68c:	bl	41358c <ferror@plt+0x107bc>
  40b690:	ldp	x19, x20, [sp, #16]
  40b694:	ldp	x21, x22, [sp, #32]
  40b698:	ldr	x23, [sp, #48]
  40b69c:	ldp	x29, x30, [sp], #80
  40b6a0:	ret
  40b6a4:	stp	x29, x30, [sp, #-48]!
  40b6a8:	mov	x29, sp
  40b6ac:	stp	x19, x20, [sp, #16]
  40b6b0:	mov	x19, x0
  40b6b4:	mov	x20, x0
  40b6b8:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40b6bc:	add	x0, x0, #0x98
  40b6c0:	str	x0, [x19], #8
  40b6c4:	mov	x0, x19
  40b6c8:	bl	40bae0 <ferror@plt+0x8d10>
  40b6cc:	stp	x0, x1, [sp, #32]
  40b6d0:	ldr	x0, [sp, #32]
  40b6d4:	cbz	x0, 40b704 <ferror@plt+0x8934>
  40b6d8:	ldr	x0, [x0]
  40b6dc:	bl	402b30 <free@plt>
  40b6e0:	ldr	x0, [sp, #32]
  40b6e4:	ldr	x0, [x0, #8]
  40b6e8:	cbnz	x0, 40b724 <ferror@plt+0x8954>
  40b6ec:	ldr	x0, [sp, #32]
  40b6f0:	add	x0, x0, #0x10
  40b6f4:	str	x0, [sp, #32]
  40b6f8:	add	x0, sp, #0x20
  40b6fc:	bl	40baac <ferror@plt+0x8cdc>
  40b700:	b	40b6d0 <ferror@plt+0x8900>
  40b704:	ldr	x1, [sp, #40]
  40b708:	cbnz	x1, 40b6d8 <ferror@plt+0x8908>
  40b70c:	ldr	x1, [x19, #8]
  40b710:	sub	x0, x1, #0x1
  40b714:	cmp	x1, x0
  40b718:	b.ls	40b734 <ferror@plt+0x8964>  // b.plast
  40b71c:	sub	x0, x0, #0x1
  40b720:	b	40b714 <ferror@plt+0x8944>
  40b724:	ldr	x1, [x0]
  40b728:	ldr	x1, [x1, #8]
  40b72c:	blr	x1
  40b730:	b	40b6ec <ferror@plt+0x891c>
  40b734:	ldrb	w1, [x19, #44]
  40b738:	ldr	x0, [x20, #8]
  40b73c:	cbnz	w1, 40b750 <ferror@plt+0x8980>
  40b740:	bl	402b30 <free@plt>
  40b744:	ldp	x19, x20, [sp, #16]
  40b748:	ldp	x29, x30, [sp], #48
  40b74c:	ret
  40b750:	bl	40c0d8 <ferror@plt+0x9308>
  40b754:	b	40b744 <ferror@plt+0x8974>
  40b758:	stp	x29, x30, [sp, #-32]!
  40b75c:	mov	x29, sp
  40b760:	str	x19, [sp, #16]
  40b764:	mov	x19, x0
  40b768:	bl	40b6a4 <ferror@plt+0x88d4>
  40b76c:	mov	x0, x19
  40b770:	mov	x1, #0x38                  	// #56
  40b774:	ldr	x19, [sp, #16]
  40b778:	ldp	x29, x30, [sp], #32
  40b77c:	b	445778 <_obstack_memory_used@@Base+0xd74>
  40b780:	stp	x29, x30, [sp, #-96]!
  40b784:	mov	x29, sp
  40b788:	stp	x19, x20, [sp, #16]
  40b78c:	stp	x21, x22, [sp, #32]
  40b790:	stp	x23, x24, [sp, #48]
  40b794:	stp	x25, x26, [sp, #64]
  40b798:	stp	x27, x28, [sp, #80]
  40b79c:	cbnz	x1, 40b7b8 <ferror@plt+0x89e8>
  40b7a0:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  40b7a4:	add	x2, x2, #0xe4d
  40b7a8:	mov	w1, #0x55                  	// #85
  40b7ac:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40b7b0:	add	x0, x0, #0x63
  40b7b4:	bl	402de0 <ferror@plt+0x10>
  40b7b8:	mov	x23, x2
  40b7bc:	cbnz	x2, 40b7d0 <ferror@plt+0x8a00>
  40b7c0:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  40b7c4:	mov	w1, #0x56                  	// #86
  40b7c8:	add	x2, x2, #0xe4d
  40b7cc:	b	40b7ac <ferror@plt+0x89dc>
  40b7d0:	mov	x22, x0
  40b7d4:	mov	x21, x1
  40b7d8:	add	x19, x22, #0x8
  40b7dc:	mov	x0, x1
  40b7e0:	bl	44438c <ferror@plt+0x415bc>
  40b7e4:	mov	w26, w0
  40b7e8:	ldr	w1, [x19, #32]
  40b7ec:	ldr	w28, [x19, #40]
  40b7f0:	add	w1, w1, #0x1
  40b7f4:	str	w1, [x19, #32]
  40b7f8:	mov	w1, w28
  40b7fc:	bl	408c44 <ferror@plt+0x5e74>
  40b800:	mov	w20, w0
  40b804:	ldr	x25, [x22, #8]
  40b808:	ubfiz	x0, x20, #4, #32
  40b80c:	add	x24, x25, x0
  40b810:	ldr	x0, [x25, x0]
  40b814:	cbz	x0, 40b880 <ferror@plt+0x8ab0>
  40b818:	cmp	x0, #0x1
  40b81c:	b.eq	40b82c <ferror@plt+0x8a5c>  // b.none
  40b820:	mov	x1, x21
  40b824:	bl	402ad0 <strcmp@plt>
  40b828:	cbz	w0, 40b880 <ferror@plt+0x8ab0>
  40b82c:	mov	w0, w26
  40b830:	mov	w1, w28
  40b834:	bl	408c7c <ferror@plt+0x5eac>
  40b838:	mov	w26, w0
  40b83c:	ldr	x27, [x19, #8]
  40b840:	add	w20, w20, w26
  40b844:	ldr	w0, [x19, #36]
  40b848:	cmp	x27, w20, uxtw
  40b84c:	add	w0, w0, #0x1
  40b850:	str	w0, [x19, #36]
  40b854:	b.hi	40b85c <ferror@plt+0x8a8c>  // b.pmore
  40b858:	sub	w20, w20, w27
  40b85c:	ubfiz	x0, x20, #4, #32
  40b860:	add	x24, x25, x0
  40b864:	ldr	x0, [x25, x0]
  40b868:	cbz	x0, 40b880 <ferror@plt+0x8ab0>
  40b86c:	cmp	x0, #0x1
  40b870:	b.eq	40b840 <ferror@plt+0x8a70>  // b.none
  40b874:	mov	x1, x21
  40b878:	bl	402ad0 <strcmp@plt>
  40b87c:	cbnz	w0, 40b840 <ferror@plt+0x8a70>
  40b880:	ldr	x0, [x24]
  40b884:	cbz	x0, 40b8bc <ferror@plt+0x8aec>
  40b888:	ldr	x0, [x24, #8]
  40b88c:	cbz	x0, 40b89c <ferror@plt+0x8acc>
  40b890:	ldr	x1, [x0]
  40b894:	ldr	x1, [x1, #8]
  40b898:	blr	x1
  40b89c:	str	x23, [x24, #8]
  40b8a0:	ldp	x19, x20, [sp, #16]
  40b8a4:	ldp	x21, x22, [sp, #32]
  40b8a8:	ldp	x23, x24, [sp, #48]
  40b8ac:	ldp	x25, x26, [sp, #64]
  40b8b0:	ldp	x27, x28, [sp, #80]
  40b8b4:	ldp	x29, x30, [sp], #96
  40b8b8:	ret
  40b8bc:	mov	x0, x21
  40b8c0:	bl	445390 <_obstack_memory_used@@Base+0x98c>
  40b8c4:	mov	x24, x0
  40b8c8:	bl	44438c <ferror@plt+0x415bc>
  40b8cc:	mov	w26, w0
  40b8d0:	ldp	x0, x1, [x19, #8]
  40b8d4:	add	x0, x0, x0, lsl #1
  40b8d8:	cmp	x0, x1, lsl #2
  40b8dc:	b.hi	40b8e8 <ferror@plt+0x8b18>  // b.pmore
  40b8e0:	mov	x0, x19
  40b8e4:	bl	40bb08 <ferror@plt+0x8d38>
  40b8e8:	ldr	w0, [x19, #32]
  40b8ec:	ldr	w27, [x19, #40]
  40b8f0:	add	w0, w0, #0x1
  40b8f4:	str	w0, [x19, #32]
  40b8f8:	mov	w1, w27
  40b8fc:	mov	w0, w26
  40b900:	bl	408c44 <ferror@plt+0x5e74>
  40b904:	mov	w20, w0
  40b908:	ldr	x25, [x22, #8]
  40b90c:	ubfiz	x0, x20, #4, #32
  40b910:	add	x21, x25, x0
  40b914:	ldr	x0, [x25, x0]
  40b918:	cbz	x0, 40b9cc <ferror@plt+0x8bfc>
  40b91c:	cmp	x0, #0x1
  40b920:	b.ne	40b97c <ferror@plt+0x8bac>  // b.any
  40b924:	mov	w1, w27
  40b928:	mov	w0, w26
  40b92c:	bl	408c7c <ferror@plt+0x5eac>
  40b930:	mov	x22, x21
  40b934:	ldr	x27, [x19, #8]
  40b938:	mov	w26, w0
  40b93c:	ldr	w0, [x19, #36]
  40b940:	add	w20, w20, w26
  40b944:	add	w0, w0, #0x1
  40b948:	str	w0, [x19, #36]
  40b94c:	cmp	x27, w20, uxtw
  40b950:	b.hi	40b958 <ferror@plt+0x8b88>  // b.pmore
  40b954:	sub	w20, w20, w27
  40b958:	ubfiz	x0, x20, #4, #32
  40b95c:	add	x21, x25, x0
  40b960:	ldr	x0, [x25, x0]
  40b964:	cbz	x0, 40b9b0 <ferror@plt+0x8be0>
  40b968:	cmp	x0, #0x1
  40b96c:	b.ne	40b990 <ferror@plt+0x8bc0>  // b.any
  40b970:	cmp	x22, #0x0
  40b974:	csel	x22, x22, x21, ne  // ne = any
  40b978:	b	40b93c <ferror@plt+0x8b6c>
  40b97c:	mov	x1, x24
  40b980:	bl	402ad0 <strcmp@plt>
  40b984:	cbz	w0, 40b99c <ferror@plt+0x8bcc>
  40b988:	mov	x21, #0x0                   	// #0
  40b98c:	b	40b924 <ferror@plt+0x8b54>
  40b990:	mov	x1, x24
  40b994:	bl	402ad0 <strcmp@plt>
  40b998:	cbnz	w0, 40b93c <ferror@plt+0x8b6c>
  40b99c:	ldr	x0, [x21]
  40b9a0:	cbnz	x0, 40b9a8 <ferror@plt+0x8bd8>
  40b9a4:	str	x24, [x21]
  40b9a8:	str	x23, [x21, #8]
  40b9ac:	b	40b8a0 <ferror@plt+0x8ad0>
  40b9b0:	cbz	x22, 40b9cc <ferror@plt+0x8bfc>
  40b9b4:	ldr	x0, [x19, #24]
  40b9b8:	mov	x21, x22
  40b9bc:	sub	x0, x0, #0x1
  40b9c0:	str	x0, [x19, #24]
  40b9c4:	str	xzr, [x22]
  40b9c8:	b	40b99c <ferror@plt+0x8bcc>
  40b9cc:	ldr	x0, [x19, #16]
  40b9d0:	ubfiz	x20, x20, #4, #32
  40b9d4:	add	x21, x25, x20
  40b9d8:	add	x0, x0, #0x1
  40b9dc:	str	x0, [x19, #16]
  40b9e0:	b	40b99c <ferror@plt+0x8bcc>
  40b9e4:	stp	x29, x30, [sp, #-112]!
  40b9e8:	mov	x29, sp
  40b9ec:	stp	x19, x20, [sp, #16]
  40b9f0:	mov	x19, x0
  40b9f4:	mov	x20, x1
  40b9f8:	add	x0, sp, #0x28
  40b9fc:	mov	w1, #0x0                   	// #0
  40ba00:	bl	4132bc <ferror@plt+0x104ec>
  40ba04:	ldr	x0, [sp, #48]
  40ba08:	add	x1, sp, #0x28
  40ba0c:	str	x20, [x0, #192]
  40ba10:	ldr	x0, [x19]
  40ba14:	ldr	x2, [x0, #24]
  40ba18:	mov	x0, x19
  40ba1c:	blr	x2
  40ba20:	add	x0, sp, #0x28
  40ba24:	bl	4133a4 <ferror@plt+0x105d4>
  40ba28:	add	x0, sp, #0x28
  40ba2c:	bl	413174 <ferror@plt+0x103a4>
  40ba30:	ldp	x19, x20, [sp, #16]
  40ba34:	ldp	x29, x30, [sp], #112
  40ba38:	ret
  40ba3c:	mov	w0, #0x0                   	// #0
  40ba40:	ret
  40ba44:	mov	w0, #0x1                   	// #1
  40ba48:	ret
  40ba4c:	mov	w0, #0x2                   	// #2
  40ba50:	ret
  40ba54:	mov	w0, #0x3                   	// #3
  40ba58:	ret
  40ba5c:	ldr	w0, [x0, #8]
  40ba60:	ret
  40ba64:	ret
  40ba68:	ret
  40ba6c:	ldr	x0, [x0, #8]
  40ba70:	b	402b30 <free@plt>
  40ba74:	mov	x1, #0x10                  	// #16
  40ba78:	b	445778 <_obstack_memory_used@@Base+0xd74>
  40ba7c:	stp	x29, x30, [sp, #-32]!
  40ba80:	mov	x29, sp
  40ba84:	str	x19, [sp, #16]
  40ba88:	mov	x19, x0
  40ba8c:	bl	40ba6c <ferror@plt+0x8c9c>
  40ba90:	mov	x0, x19
  40ba94:	mov	x1, #0x10                  	// #16
  40ba98:	ldr	x19, [sp, #16]
  40ba9c:	ldp	x29, x30, [sp], #32
  40baa0:	b	445778 <_obstack_memory_used@@Base+0xd74>
  40baa4:	mov	x1, #0x10                  	// #16
  40baa8:	b	445778 <_obstack_memory_used@@Base+0xd74>
  40baac:	ldr	x3, [x0, #8]
  40bab0:	ldr	x1, [x0]
  40bab4:	cmp	x1, x3
  40bab8:	b.cs	40bad8 <ferror@plt+0x8d08>  // b.hs, b.nlast
  40babc:	ldr	x2, [x1]
  40bac0:	cbz	x2, 40bacc <ferror@plt+0x8cfc>
  40bac4:	cmp	x2, #0x1
  40bac8:	b.ne	40badc <ferror@plt+0x8d0c>  // b.any
  40bacc:	add	x1, x1, #0x10
  40bad0:	str	x1, [x0]
  40bad4:	b	40bab0 <ferror@plt+0x8ce0>
  40bad8:	stp	xzr, xzr, [x0]
  40badc:	ret
  40bae0:	stp	x29, x30, [sp, #-32]!
  40bae4:	mov	x29, sp
  40bae8:	ldp	x1, x0, [x0]
  40baec:	add	x0, x1, x0, lsl #4
  40baf0:	stp	x1, x0, [sp, #16]
  40baf4:	add	x0, sp, #0x10
  40baf8:	bl	40baac <ferror@plt+0x8cdc>
  40bafc:	ldp	x0, x1, [sp, #16]
  40bb00:	ldp	x29, x30, [sp], #32
  40bb04:	ret
  40bb08:	stp	x29, x30, [sp, #-96]!
  40bb0c:	mov	x29, sp
  40bb10:	stp	x19, x20, [sp, #16]
  40bb14:	mov	x19, x0
  40bb18:	stp	x21, x22, [sp, #32]
  40bb1c:	stp	x23, x24, [sp, #48]
  40bb20:	ldr	w23, [x0, #40]
  40bb24:	ldp	x21, x20, [x0]
  40bb28:	stp	x25, x26, [sp, #64]
  40bb2c:	ldp	x1, x0, [x0, #16]
  40bb30:	str	x27, [sp, #80]
  40bb34:	add	x22, x21, x20, lsl #4
  40bb38:	sub	x1, x1, x0
  40bb3c:	lsl	x0, x1, #1
  40bb40:	cmp	x20, x1, lsl #1
  40bb44:	b.cc	40bb5c <ferror@plt+0x8d8c>  // b.lo, b.ul, b.last
  40bb48:	lsl	w1, w1, #3
  40bb4c:	cmp	x20, x1
  40bb50:	b.ls	40bb74 <ferror@plt+0x8da4>  // b.plast
  40bb54:	cmp	x20, #0x20
  40bb58:	b.ls	40bb74 <ferror@plt+0x8da4>  // b.plast
  40bb5c:	bl	40bcbc <ferror@plt+0x8eec>
  40bb60:	mov	w23, w0
  40bb64:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40bb68:	add	x0, x0, #0x1b0
  40bb6c:	ubfiz	x1, x23, #4, #32
  40bb70:	ldr	w20, [x0, x1]
  40bb74:	ldrb	w0, [x19, #44]
  40bb78:	cbnz	w0, 40bba4 <ferror@plt+0x8dd4>
  40bb7c:	mov	x0, x20
  40bb80:	mov	x1, #0x10                  	// #16
  40bb84:	bl	4452a0 <_obstack_memory_used@@Base+0x89c>
  40bb88:	mov	x1, #0x0                   	// #0
  40bb8c:	cmp	x20, x1
  40bb90:	b.eq	40bbd4 <ferror@plt+0x8e04>  // b.none
  40bb94:	lsl	x2, x1, #4
  40bb98:	add	x1, x1, #0x1
  40bb9c:	str	xzr, [x0, x2]
  40bba0:	b	40bb8c <ferror@plt+0x8dbc>
  40bba4:	lsl	x0, x20, #4
  40bba8:	mov	x3, #0x0                   	// #0
  40bbac:	mov	x2, #0x0                   	// #0
  40bbb0:	mov	x1, #0x0                   	// #0
  40bbb4:	bl	40c0a8 <ferror@plt+0x92d8>
  40bbb8:	cbnz	x0, 40bb88 <ferror@plt+0x8db8>
  40bbbc:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  40bbc0:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  40bbc4:	add	x2, x2, #0x366
  40bbc8:	add	x0, x0, #0x374
  40bbcc:	mov	w1, #0x2b5                 	// #693
  40bbd0:	bl	402de0 <ferror@plt+0x10>
  40bbd4:	stp	x0, x20, [x19]
  40bbd8:	ldr	x0, [x19, #16]
  40bbdc:	str	w23, [x19, #40]
  40bbe0:	ldr	x1, [x19, #24]
  40bbe4:	mov	x23, x21
  40bbe8:	str	xzr, [x19, #24]
  40bbec:	sub	x0, x0, x1
  40bbf0:	str	x0, [x19, #16]
  40bbf4:	ldr	x0, [x23]
  40bbf8:	cbz	x0, 40bc68 <ferror@plt+0x8e98>
  40bbfc:	cmp	x0, #0x1
  40bc00:	b.eq	40bc68 <ferror@plt+0x8e98>  // b.none
  40bc04:	bl	44438c <ferror@plt+0x415bc>
  40bc08:	ldr	w27, [x19, #40]
  40bc0c:	mov	w25, w0
  40bc10:	mov	w1, w27
  40bc14:	bl	408c44 <ferror@plt+0x5e74>
  40bc18:	mov	w20, w0
  40bc1c:	ldr	x24, [x19]
  40bc20:	ubfiz	x0, x20, #4, #32
  40bc24:	add	x2, x24, x0
  40bc28:	ldr	x0, [x24, x0]
  40bc2c:	cbz	x0, 40bc60 <ferror@plt+0x8e90>
  40bc30:	mov	w1, w27
  40bc34:	mov	w0, w25
  40bc38:	ldr	x26, [x19, #8]
  40bc3c:	bl	408c7c <ferror@plt+0x5eac>
  40bc40:	add	w20, w20, w0
  40bc44:	cmp	x26, w20, uxtw
  40bc48:	b.hi	40bc50 <ferror@plt+0x8e80>  // b.pmore
  40bc4c:	sub	w20, w20, w26
  40bc50:	ubfiz	x1, x20, #4, #32
  40bc54:	add	x2, x24, x1
  40bc58:	ldr	x1, [x24, x1]
  40bc5c:	cbnz	x1, 40bc40 <ferror@plt+0x8e70>
  40bc60:	ldp	x0, x1, [x23]
  40bc64:	stp	x0, x1, [x2]
  40bc68:	add	x23, x23, #0x10
  40bc6c:	cmp	x22, x23
  40bc70:	b.hi	40bbf4 <ferror@plt+0x8e24>  // b.pmore
  40bc74:	ldrb	w0, [x19, #44]
  40bc78:	cbnz	w0, 40bc9c <ferror@plt+0x8ecc>
  40bc7c:	mov	x0, x21
  40bc80:	ldp	x19, x20, [sp, #16]
  40bc84:	ldp	x21, x22, [sp, #32]
  40bc88:	ldp	x23, x24, [sp, #48]
  40bc8c:	ldp	x25, x26, [sp, #64]
  40bc90:	ldr	x27, [sp, #80]
  40bc94:	ldp	x29, x30, [sp], #96
  40bc98:	b	402b30 <free@plt>
  40bc9c:	mov	x0, x21
  40bca0:	ldp	x19, x20, [sp, #16]
  40bca4:	ldp	x21, x22, [sp, #32]
  40bca8:	ldp	x23, x24, [sp, #48]
  40bcac:	ldp	x25, x26, [sp, #64]
  40bcb0:	ldr	x27, [sp, #80]
  40bcb4:	ldp	x29, x30, [sp], #96
  40bcb8:	b	40c0d8 <ferror@plt+0x9308>
  40bcbc:	adrp	x4, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40bcc0:	add	x4, x4, #0x1b0
  40bcc4:	mov	x3, x0
  40bcc8:	mov	w2, #0x0                   	// #0
  40bccc:	mov	w0, #0x1e                  	// #30
  40bcd0:	cmp	w0, w2
  40bcd4:	b.eq	40bd04 <ferror@plt+0x8f34>  // b.none
  40bcd8:	sub	w1, w0, w2
  40bcdc:	add	w5, w2, w1, lsr #1
  40bce0:	add	w1, w2, w1, lsr #1
  40bce4:	lsl	x1, x1, #4
  40bce8:	ldr	w1, [x4, x1]
  40bcec:	cmp	x1, x3
  40bcf0:	b.cs	40bcfc <ferror@plt+0x8f2c>  // b.hs, b.nlast
  40bcf4:	add	w2, w5, #0x1
  40bcf8:	b	40bcd0 <ferror@plt+0x8f00>
  40bcfc:	mov	w0, w5
  40bd00:	b	40bcd0 <ferror@plt+0x8f00>
  40bd04:	ubfiz	x1, x0, #4, #32
  40bd08:	ldr	w1, [x4, x1]
  40bd0c:	cmp	x1, x3
  40bd10:	b.cs	40bd34 <ferror@plt+0x8f64>  // b.hs, b.nlast
  40bd14:	stp	x29, x30, [sp, #-16]!
  40bd18:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40bd1c:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40bd20:	mov	x29, sp
  40bd24:	add	x2, x2, #0x178
  40bd28:	add	x0, x0, #0x196
  40bd2c:	mov	w1, #0x60                  	// #96
  40bd30:	bl	402de0 <ferror@plt+0x10>
  40bd34:	ret
  40bd38:	ret
  40bd3c:	stp	x29, x30, [sp, #-32]!
  40bd40:	mov	x29, sp
  40bd44:	stp	x19, x20, [sp, #16]
  40bd48:	adrp	x19, 495000 <_obstack_memory_used@@Base+0x505fc>
  40bd4c:	add	x19, x19, #0x7b8
  40bd50:	ldarb	w0, [x19]
  40bd54:	tbnz	w0, #0, 40bd90 <ferror@plt+0x8fc0>
  40bd58:	mov	x0, x19
  40bd5c:	bl	445788 <_obstack_memory_used@@Base+0xd84>
  40bd60:	cbz	w0, 40bd90 <ferror@plt+0x8fc0>
  40bd64:	add	x20, x19, #0x8
  40bd68:	mov	x0, x20
  40bd6c:	bl	40bda0 <ferror@plt+0x8fd0>
  40bd70:	mov	x0, x19
  40bd74:	bl	445918 <_obstack_memory_used@@Base+0xf14>
  40bd78:	adrp	x2, 495000 <_obstack_memory_used@@Base+0x505fc>
  40bd7c:	adrp	x0, 40b000 <ferror@plt+0x8230>
  40bd80:	add	x2, x2, #0x3b0
  40bd84:	mov	x1, x20
  40bd88:	add	x0, x0, #0xf30
  40bd8c:	bl	4027c0 <__cxa_atexit@plt>
  40bd90:	add	x0, x19, #0x8
  40bd94:	ldp	x19, x20, [sp, #16]
  40bd98:	ldp	x29, x30, [sp], #32
  40bd9c:	ret
  40bda0:	stp	x29, x30, [sp, #-64]!
  40bda4:	mov	x29, sp
  40bda8:	stp	x19, x20, [sp, #16]
  40bdac:	mov	x20, x0
  40bdb0:	mov	x0, #0x30                  	// #48
  40bdb4:	stp	x21, x22, [sp, #32]
  40bdb8:	adrp	x21, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40bdbc:	add	x21, x21, #0x1b0
  40bdc0:	str	x23, [sp, #48]
  40bdc4:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  40bdc8:	mov	x19, x0
  40bdcc:	strb	wzr, [x0, #44]
  40bdd0:	mov	x0, #0xd                   	// #13
  40bdd4:	stp	xzr, xzr, [x19, #16]
  40bdd8:	str	xzr, [x19, #32]
  40bddc:	bl	40bcbc <ferror@plt+0x8eec>
  40bde0:	mov	w22, w0
  40bde4:	mov	x1, #0x10                  	// #16
  40bde8:	ubfiz	x0, x22, #4, #32
  40bdec:	ldr	w23, [x21, x0]
  40bdf0:	mov	x0, x23
  40bdf4:	bl	4452a0 <_obstack_memory_used@@Base+0x89c>
  40bdf8:	mov	x1, #0x0                   	// #0
  40bdfc:	cmp	x23, x1
  40be00:	b.ls	40be14 <ferror@plt+0x9044>  // b.plast
  40be04:	lsl	x2, x1, #4
  40be08:	add	x1, x1, #0x1
  40be0c:	str	xzr, [x0, x2]
  40be10:	b	40bdfc <ferror@plt+0x902c>
  40be14:	stp	x0, x23, [x19]
  40be18:	mov	x0, #0x30                  	// #48
  40be1c:	str	w22, [x19, #40]
  40be20:	str	x19, [x20, #40]
  40be24:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  40be28:	mov	x19, x0
  40be2c:	strb	wzr, [x0, #44]
  40be30:	mov	x0, #0xd                   	// #13
  40be34:	stp	xzr, xzr, [x19, #16]
  40be38:	str	xzr, [x19, #32]
  40be3c:	bl	40bcbc <ferror@plt+0x8eec>
  40be40:	mov	w22, w0
  40be44:	mov	x1, #0x18                  	// #24
  40be48:	ubfiz	x0, x22, #4, #32
  40be4c:	ldr	w23, [x21, x0]
  40be50:	mov	x0, x23
  40be54:	bl	4452a0 <_obstack_memory_used@@Base+0x89c>
  40be58:	mov	x1, #0x0                   	// #0
  40be5c:	mov	x3, #0x18                  	// #24
  40be60:	cmp	x23, x1
  40be64:	b.ls	40be78 <ferror@plt+0x90a8>  // b.plast
  40be68:	mul	x2, x1, x3
  40be6c:	add	x1, x1, #0x1
  40be70:	str	xzr, [x0, x2]
  40be74:	b	40be60 <ferror@plt+0x9090>
  40be78:	stp	x0, x23, [x19]
  40be7c:	mov	x0, #0x30                  	// #48
  40be80:	str	w22, [x19, #40]
  40be84:	str	x19, [x20, #48]
  40be88:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  40be8c:	mov	x19, x0
  40be90:	strb	wzr, [x0, #44]
  40be94:	mov	x0, #0xd                   	// #13
  40be98:	stp	xzr, xzr, [x19, #16]
  40be9c:	str	xzr, [x19, #32]
  40bea0:	bl	40bcbc <ferror@plt+0x8eec>
  40bea4:	mov	w22, w0
  40bea8:	mov	x1, #0x18                  	// #24
  40beac:	ubfiz	x0, x22, #4, #32
  40beb0:	ldr	w21, [x21, x0]
  40beb4:	mov	x0, x21
  40beb8:	bl	4452a0 <_obstack_memory_used@@Base+0x89c>
  40bebc:	mov	x1, #0x0                   	// #0
  40bec0:	mov	x3, #0x18                  	// #24
  40bec4:	cmp	x21, x1
  40bec8:	b.ls	40bedc <ferror@plt+0x910c>  // b.plast
  40becc:	mul	x2, x1, x3
  40bed0:	add	x1, x1, #0x1
  40bed4:	str	xzr, [x0, x2]
  40bed8:	b	40bec4 <ferror@plt+0x90f4>
  40bedc:	ldr	x23, [sp, #48]
  40bee0:	stp	x0, x21, [x19]
  40bee4:	str	w22, [x19, #40]
  40bee8:	ldp	x21, x22, [sp, #32]
  40beec:	str	x19, [x20]
  40bef0:	ldp	x19, x20, [sp, #16]
  40bef4:	ldp	x29, x30, [sp], #64
  40bef8:	ret
  40befc:	ldr	x3, [x0, #8]
  40bf00:	ldr	x1, [x0]
  40bf04:	cmp	x1, x3
  40bf08:	b.cs	40bf28 <ferror@plt+0x9158>  // b.hs, b.nlast
  40bf0c:	ldr	x2, [x1]
  40bf10:	cbz	x2, 40bf1c <ferror@plt+0x914c>
  40bf14:	cmp	x2, #0x1
  40bf18:	b.ne	40bf2c <ferror@plt+0x915c>  // b.any
  40bf1c:	add	x1, x1, #0x10
  40bf20:	str	x1, [x0]
  40bf24:	b	40bf00 <ferror@plt+0x9130>
  40bf28:	stp	xzr, xzr, [x0]
  40bf2c:	ret
  40bf30:	stp	x29, x30, [sp, #-48]!
  40bf34:	mov	x29, sp
  40bf38:	stp	x19, x20, [sp, #16]
  40bf3c:	mov	x19, x0
  40bf40:	ldr	x0, [x0, #40]
  40bf44:	ldp	x1, x0, [x0]
  40bf48:	add	x0, x1, x0, lsl #4
  40bf4c:	stp	x1, x0, [sp, #32]
  40bf50:	add	x0, sp, #0x20
  40bf54:	bl	40befc <ferror@plt+0x912c>
  40bf58:	ldr	x0, [sp, #32]
  40bf5c:	cbz	x0, 40bf8c <ferror@plt+0x91bc>
  40bf60:	ldr	x0, [x0]
  40bf64:	cbnz	x0, 40bfbc <ferror@plt+0x91ec>
  40bf68:	ldr	x0, [sp, #32]
  40bf6c:	ldr	x0, [x0, #8]
  40bf70:	cbz	x0, 40bf7c <ferror@plt+0x91ac>
  40bf74:	mov	x1, #0x20                  	// #32
  40bf78:	bl	445778 <_obstack_memory_used@@Base+0xd74>
  40bf7c:	ldr	x0, [sp, #32]
  40bf80:	add	x0, x0, #0x10
  40bf84:	str	x0, [sp, #32]
  40bf88:	b	40bf50 <ferror@plt+0x9180>
  40bf8c:	ldr	x1, [sp, #40]
  40bf90:	cbnz	x1, 40bf60 <ferror@plt+0x9190>
  40bf94:	ldr	x20, [x19, #40]
  40bf98:	cbnz	x20, 40bfc8 <ferror@plt+0x91f8>
  40bf9c:	ldr	x20, [x19, #48]
  40bfa0:	cbz	x20, 40c024 <ferror@plt+0x9254>
  40bfa4:	ldr	x1, [x20, #8]
  40bfa8:	sub	x0, x1, #0x1
  40bfac:	cmp	x1, x0
  40bfb0:	b.ls	40c008 <ferror@plt+0x9238>  // b.plast
  40bfb4:	sub	x0, x0, #0x1
  40bfb8:	b	40bfac <ferror@plt+0x91dc>
  40bfbc:	mov	x1, #0x20                  	// #32
  40bfc0:	bl	445778 <_obstack_memory_used@@Base+0xd74>
  40bfc4:	b	40bf68 <ferror@plt+0x9198>
  40bfc8:	ldr	x1, [x20, #8]
  40bfcc:	sub	x0, x1, #0x1
  40bfd0:	cmp	x1, x0
  40bfd4:	b.ls	40bfe0 <ferror@plt+0x9210>  // b.plast
  40bfd8:	sub	x0, x0, #0x1
  40bfdc:	b	40bfd0 <ferror@plt+0x9200>
  40bfe0:	ldrb	w1, [x20, #44]
  40bfe4:	ldr	x0, [x20]
  40bfe8:	cbnz	w1, 40c000 <ferror@plt+0x9230>
  40bfec:	bl	402b30 <free@plt>
  40bff0:	mov	x0, x20
  40bff4:	mov	x1, #0x30                  	// #48
  40bff8:	bl	445778 <_obstack_memory_used@@Base+0xd74>
  40bffc:	b	40bf9c <ferror@plt+0x91cc>
  40c000:	bl	40c0d8 <ferror@plt+0x9308>
  40c004:	b	40bff0 <ferror@plt+0x9220>
  40c008:	ldrb	w1, [x20, #44]
  40c00c:	ldr	x0, [x20]
  40c010:	cbnz	w1, 40c044 <ferror@plt+0x9274>
  40c014:	bl	402b30 <free@plt>
  40c018:	mov	x0, x20
  40c01c:	mov	x1, #0x30                  	// #48
  40c020:	bl	445778 <_obstack_memory_used@@Base+0xd74>
  40c024:	ldr	x19, [x19]
  40c028:	cbz	x19, 40c068 <ferror@plt+0x9298>
  40c02c:	ldr	x1, [x19, #8]
  40c030:	sub	x0, x1, #0x1
  40c034:	cmp	x1, x0
  40c038:	b.ls	40c04c <ferror@plt+0x927c>  // b.plast
  40c03c:	sub	x0, x0, #0x1
  40c040:	b	40c034 <ferror@plt+0x9264>
  40c044:	bl	40c0d8 <ferror@plt+0x9308>
  40c048:	b	40c018 <ferror@plt+0x9248>
  40c04c:	ldrb	w1, [x19, #44]
  40c050:	ldr	x0, [x19]
  40c054:	cbnz	w1, 40c074 <ferror@plt+0x92a4>
  40c058:	bl	402b30 <free@plt>
  40c05c:	mov	x0, x19
  40c060:	mov	x1, #0x30                  	// #48
  40c064:	bl	445778 <_obstack_memory_used@@Base+0xd74>
  40c068:	ldp	x19, x20, [sp, #16]
  40c06c:	ldp	x29, x30, [sp], #48
  40c070:	ret
  40c074:	bl	40c0d8 <ferror@plt+0x9308>
  40c078:	b	40c05c <ferror@plt+0x928c>
  40c07c:	ret
  40c080:	cbz	x1, 40c0a4 <ferror@plt+0x92d4>
  40c084:	stp	x29, x30, [sp, #-16]!
  40c088:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40c08c:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40c090:	mov	x29, sp
  40c094:	add	x2, x2, #0x390
  40c098:	add	x0, x0, #0x3a3
  40c09c:	mov	w1, #0x2f                  	// #47
  40c0a0:	bl	402de0 <ferror@plt+0x10>
  40c0a4:	b	44526c <_obstack_memory_used@@Base+0x868>
  40c0a8:	cbz	x1, 40c0cc <ferror@plt+0x92fc>
  40c0ac:	stp	x29, x30, [sp, #-16]!
  40c0b0:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40c0b4:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40c0b8:	mov	x29, sp
  40c0bc:	add	x2, x2, #0x3b8
  40c0c0:	add	x0, x0, #0x3a3
  40c0c4:	mov	w1, #0x37                  	// #55
  40c0c8:	bl	402de0 <ferror@plt+0x10>
  40c0cc:	mov	x1, #0x1                   	// #1
  40c0d0:	b	4452a0 <_obstack_memory_used@@Base+0x89c>
  40c0d4:	b	4452f0 <_obstack_memory_used@@Base+0x8ec>
  40c0d8:	b	402b30 <free@plt>
  40c0dc:	ret
  40c0e0:	cmp	w2, #0x0
  40c0e4:	b.lt	40c144 <ferror@plt+0x9374>  // b.tstop
  40c0e8:	stp	x29, x30, [sp, #-32]!
  40c0ec:	mov	x29, sp
  40c0f0:	stp	x19, x20, [sp, #16]
  40c0f4:	mov	x19, x1
  40c0f8:	adrp	x1, 495000 <_obstack_memory_used@@Base+0x505fc>
  40c0fc:	ldr	x20, [x1, #1440]
  40c100:	b.ne	40c12c <ferror@plt+0x935c>  // b.any
  40c104:	adrp	x3, 45e000 <_obstack_memory_used@@Base+0x195fc>
  40c108:	add	x3, x3, #0xaff
  40c10c:	mov	x4, x3
  40c110:	mov	x2, x19
  40c114:	mov	x0, x20
  40c118:	ldp	x19, x20, [sp, #16]
  40c11c:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40c120:	ldp	x29, x30, [sp], #32
  40c124:	add	x1, x1, #0x3d3
  40c128:	b	402d90 <fprintf@plt>
  40c12c:	mov	w0, w2
  40c130:	bl	4453c4 <_obstack_memory_used@@Base+0x9c0>
  40c134:	adrp	x3, 46b000 <_obstack_memory_used@@Base+0x265fc>
  40c138:	mov	x4, x0
  40c13c:	add	x3, x3, #0xdd4
  40c140:	b	40c110 <ferror@plt+0x9340>
  40c144:	ret
  40c148:	stp	x29, x30, [sp, #-32]!
  40c14c:	mov	x29, sp
  40c150:	ldr	w2, [x1, #56]
  40c154:	ldr	x1, [x1, #40]
  40c158:	str	x19, [sp, #16]
  40c15c:	mov	x19, x0
  40c160:	bl	410340 <ferror@plt+0xd570>
  40c164:	ldr	x0, [x19]
  40c168:	bl	413290 <ferror@plt+0x104c0>
  40c16c:	ldr	x0, [x19]
  40c170:	ldr	x19, [sp, #16]
  40c174:	ldp	x29, x30, [sp], #32
  40c178:	b	4133a4 <ferror@plt+0x105d4>
  40c17c:	stp	x29, x30, [sp, #-48]!
  40c180:	mov	x29, sp
  40c184:	stp	x19, x20, [sp, #16]
  40c188:	mov	x19, x0
  40c18c:	ldr	w0, [x0, #56]
  40c190:	str	x21, [sp, #32]
  40c194:	cbz	w0, 40c1e4 <ferror@plt+0x9414>
  40c198:	ldrb	w0, [x19, #64]
  40c19c:	adrp	x21, 495000 <_obstack_memory_used@@Base+0x505fc>
  40c1a0:	ldr	x20, [x19]
  40c1a4:	cbz	w0, 40c1d8 <ferror@plt+0x9408>
  40c1a8:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40c1ac:	add	x0, x0, #0x3db
  40c1b0:	bl	402d80 <gettext@plt>
  40c1b4:	mov	x1, x0
  40c1b8:	ldr	x2, [x21, #2040]
  40c1bc:	mov	x0, x20
  40c1c0:	bl	414ef0 <ferror@plt+0x12120>
  40c1c4:	ldr	x0, [x19]
  40c1c8:	ldp	x19, x20, [sp, #16]
  40c1cc:	ldr	x21, [sp, #32]
  40c1d0:	ldp	x29, x30, [sp], #48
  40c1d4:	b	413a6c <ferror@plt+0x10c9c>
  40c1d8:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40c1dc:	add	x0, x0, #0x404
  40c1e0:	b	40c1b0 <ferror@plt+0x93e0>
  40c1e4:	ldp	x19, x20, [sp, #16]
  40c1e8:	ldr	x21, [sp, #32]
  40c1ec:	ldp	x29, x30, [sp], #48
  40c1f0:	ret
  40c1f4:	stp	x29, x30, [sp, #-96]!
  40c1f8:	mov	x29, sp
  40c1fc:	stp	x19, x20, [sp, #16]
  40c200:	mov	x20, x0
  40c204:	orr	x0, x2, x4
  40c208:	stp	x21, x22, [sp, #32]
  40c20c:	stp	x23, x24, [sp, #48]
  40c210:	stp	x25, x26, [sp, #64]
  40c214:	str	x27, [sp, #80]
  40c218:	cbnz	x0, 40c224 <ferror@plt+0x9454>
  40c21c:	mov	w0, #0x0                   	// #0
  40c220:	b	40c24c <ferror@plt+0x947c>
  40c224:	ldr	w0, [x20]
  40c228:	mov	x23, x1
  40c22c:	mov	x27, x2
  40c230:	mov	w24, w3
  40c234:	mov	x19, x4
  40c238:	cbz	w0, 40c268 <ferror@plt+0x9498>
  40c23c:	ldr	w0, [x20]
  40c240:	cmp	w0, #0x13
  40c244:	b.le	40c288 <ferror@plt+0x94b8>
  40c248:	mov	w0, #0x1                   	// #1
  40c24c:	ldp	x19, x20, [sp, #16]
  40c250:	ldp	x21, x22, [sp, #32]
  40c254:	ldp	x23, x24, [sp, #48]
  40c258:	ldp	x25, x26, [sp, #64]
  40c25c:	ldr	x27, [sp, #80]
  40c260:	ldp	x29, x30, [sp], #96
  40c264:	ret
  40c268:	cbz	x2, 40c23c <ferror@plt+0x946c>
  40c26c:	mov	x0, x2
  40c270:	bl	4446b4 <ferror@plt+0x418e4>
  40c274:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40c278:	add	x1, x1, #0x5c9
  40c27c:	bl	402ad0 <strcmp@plt>
  40c280:	cbnz	w0, 40c23c <ferror@plt+0x946c>
  40c284:	b	40c21c <ferror@plt+0x944c>
  40c288:	add	w0, w0, #0x1
  40c28c:	str	w0, [x20]
  40c290:	cbz	x19, 40c354 <ferror@plt+0x9584>
  40c294:	mov	x0, x19
  40c298:	mov	w1, #0x400b                	// #16395
  40c29c:	bl	440520 <ferror@plt+0x3d750>
  40c2a0:	cmp	x0, #0x0
  40c2a4:	adrp	x25, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40c2a8:	mov	x20, x0
  40c2ac:	csel	x19, x19, x0, eq  // eq = none
  40c2b0:	add	x25, x25, #0x878
  40c2b4:	mov	x21, #0x0                   	// #0
  40c2b8:	ldr	x26, [x25, x21, lsl #3]
  40c2bc:	mov	x0, x26
  40c2c0:	bl	402700 <strlen@plt>
  40c2c4:	mov	x1, x26
  40c2c8:	mov	x22, x0
  40c2cc:	mov	x2, x0
  40c2d0:	mov	x0, x19
  40c2d4:	bl	4028d0 <strncmp@plt>
  40c2d8:	cbnz	w0, 40c2fc <ferror@plt+0x952c>
  40c2dc:	ldrb	w0, [x19, x22]
  40c2e0:	cbz	w0, 40c2ec <ferror@plt+0x951c>
  40c2e4:	cmp	w0, #0x28
  40c2e8:	b.ne	40c2fc <ferror@plt+0x952c>  // b.any
  40c2ec:	cbz	x20, 40c248 <ferror@plt+0x9478>
  40c2f0:	mov	x0, x20
  40c2f4:	bl	402b30 <free@plt>
  40c2f8:	b	40c248 <ferror@plt+0x9478>
  40c2fc:	add	x21, x21, #0x1
  40c300:	cmp	x21, #0x4
  40c304:	b.ne	40c2b8 <ferror@plt+0x94e8>  // b.any
  40c308:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  40c30c:	ldr	x0, [x0, #1440]
  40c310:	cbnz	x19, 40c31c <ferror@plt+0x954c>
  40c314:	adrp	x19, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40c318:	add	x19, x19, #0x42e
  40c31c:	cbnz	x27, 40c328 <ferror@plt+0x9558>
  40c320:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40c324:	add	x27, x2, #0x42e
  40c328:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40c32c:	mov	w5, w24
  40c330:	mov	x4, x27
  40c334:	mov	x3, x19
  40c338:	mov	x2, x23
  40c33c:	add	x1, x1, #0x432
  40c340:	bl	402d90 <fprintf@plt>
  40c344:	cbz	x20, 40c21c <ferror@plt+0x944c>
  40c348:	mov	x0, x20
  40c34c:	bl	402b30 <free@plt>
  40c350:	b	40c21c <ferror@plt+0x944c>
  40c354:	mov	x20, #0x0                   	// #0
  40c358:	b	40c308 <ferror@plt+0x9538>
  40c35c:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  40c360:	ldr	x1, [x0, #960]
  40c364:	ldr	w0, [x1, #240]
  40c368:	add	w0, w0, #0x1
  40c36c:	str	w0, [x1, #240]
  40c370:	ret
  40c374:	stp	x29, x30, [sp, #-272]!
  40c378:	mov	x29, sp
  40c37c:	stp	x1, x2, [sp, #216]
  40c380:	add	x1, sp, #0x110
  40c384:	stp	x1, x1, [sp, #48]
  40c388:	add	x1, sp, #0xd0
  40c38c:	str	x1, [sp, #64]
  40c390:	mov	w1, #0xffffffc8            	// #-56
  40c394:	str	w1, [sp, #72]
  40c398:	mov	w1, #0xffffff80            	// #-128
  40c39c:	str	w1, [sp, #76]
  40c3a0:	add	x1, sp, #0x10
  40c3a4:	stp	x3, x4, [sp, #232]
  40c3a8:	ldp	x2, x3, [sp, #48]
  40c3ac:	stp	x2, x3, [sp, #16]
  40c3b0:	ldp	x2, x3, [sp, #64]
  40c3b4:	stp	x2, x3, [sp, #32]
  40c3b8:	str	q0, [sp, #80]
  40c3bc:	str	q1, [sp, #96]
  40c3c0:	str	q2, [sp, #112]
  40c3c4:	str	q3, [sp, #128]
  40c3c8:	str	q4, [sp, #144]
  40c3cc:	str	q5, [sp, #160]
  40c3d0:	str	q6, [sp, #176]
  40c3d4:	str	q7, [sp, #192]
  40c3d8:	stp	x5, x6, [sp, #248]
  40c3dc:	str	x7, [sp, #264]
  40c3e0:	bl	445440 <_obstack_memory_used@@Base+0xa3c>
  40c3e4:	ldp	x29, x30, [sp], #272
  40c3e8:	ret
  40c3ec:	stp	x29, x30, [sp, #-64]!
  40c3f0:	mov	x29, sp
  40c3f4:	stp	x21, x22, [sp, #32]
  40c3f8:	ldr	x22, [x0]
  40c3fc:	stp	x23, x24, [sp, #48]
  40c400:	mov	x23, x0
  40c404:	mov	w24, w2
  40c408:	stp	x19, x20, [sp, #16]
  40c40c:	ldrb	w0, [x22, #67]
  40c410:	mov	w20, w3
  40c414:	mov	x19, x1
  40c418:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40c41c:	add	x1, x1, #0x44a
  40c420:	bl	40eb1c <ferror@plt+0xbd4c>
  40c424:	mov	x21, x0
  40c428:	ldrb	w0, [x22, #67]
  40c42c:	bl	40ee38 <ferror@plt+0xc068>
  40c430:	mov	x22, x0
  40c434:	cbnz	x19, 40c440 <ferror@plt+0x9670>
  40c438:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  40c43c:	ldr	x19, [x0, #2040]
  40c440:	mov	x0, x19
  40c444:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40c448:	add	x1, x1, #0x450
  40c44c:	bl	402ad0 <strcmp@plt>
  40c450:	cmp	w0, #0x0
  40c454:	csel	w3, w0, w24, eq  // eq = none
  40c458:	ldrb	w0, [x23, #121]
  40c45c:	cbz	w0, 40c4d8 <ferror@plt+0x9708>
  40c460:	cbz	w3, 40c4dc <ferror@plt+0x970c>
  40c464:	cmp	w20, #0x0
  40c468:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40c46c:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40c470:	add	x0, x0, #0x443
  40c474:	add	x2, x2, #0x446
  40c478:	csel	x2, x2, x0, eq  // eq = none
  40c47c:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  40c480:	add	x0, x0, #0x7f8
  40c484:	mov	w4, w20
  40c488:	add	x0, x0, #0x8
  40c48c:	mov	x1, #0x20                  	// #32
  40c490:	bl	402800 <snprintf@plt>
  40c494:	mov	x4, x22
  40c498:	mov	x2, x19
  40c49c:	mov	x1, x21
  40c4a0:	adrp	x3, 495000 <_obstack_memory_used@@Base+0x505fc>
  40c4a4:	ldp	x19, x20, [sp, #16]
  40c4a8:	add	x3, x3, #0x7f8
  40c4ac:	ldp	x21, x22, [sp, #32]
  40c4b0:	add	x3, x3, #0x8
  40c4b4:	ldp	x23, x24, [sp, #48]
  40c4b8:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40c4bc:	ldp	x29, x30, [sp], #64
  40c4c0:	add	x0, x0, #0x45b
  40c4c4:	b	40c374 <ferror@plt+0x95a4>
  40c4c8:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40c4cc:	mov	w20, #0x0                   	// #0
  40c4d0:	add	x2, x2, #0x446
  40c4d4:	b	40c47c <ferror@plt+0x96ac>
  40c4d8:	cbnz	w3, 40c4c8 <ferror@plt+0x96f8>
  40c4dc:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  40c4e0:	strb	wzr, [x0, #2048]
  40c4e4:	b	40c494 <ferror@plt+0x96c4>
  40c4e8:	stp	x29, x30, [sp, #-32]!
  40c4ec:	mov	x29, sp
  40c4f0:	ldp	w2, w3, [x1, #8]
  40c4f4:	stp	x19, x20, [sp, #16]
  40c4f8:	mov	x19, x0
  40c4fc:	ldr	x1, [x1]
  40c500:	bl	40c3ec <ferror@plt+0x961c>
  40c504:	mov	x1, x0
  40c508:	mov	x20, x0
  40c50c:	ldr	x0, [x19]
  40c510:	bl	413938 <ferror@plt+0x10b68>
  40c514:	mov	x0, x20
  40c518:	bl	402b30 <free@plt>
  40c51c:	ldr	x0, [x19]
  40c520:	ldp	x19, x20, [sp, #16]
  40c524:	ldp	x29, x30, [sp], #32
  40c528:	b	413530 <ferror@plt+0x10760>
  40c52c:	stp	x29, x30, [sp, #-48]!
  40c530:	mov	x29, sp
  40c534:	stp	x19, x20, [sp, #16]
  40c538:	mov	x19, x0
  40c53c:	ldr	x0, [x0]
  40c540:	ldrb	w0, [x0, #67]
  40c544:	str	x21, [sp, #32]
  40c548:	mov	x21, x1
  40c54c:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40c550:	add	x1, x1, #0x44a
  40c554:	bl	40eb1c <ferror@plt+0xbd4c>
  40c558:	mov	x20, x0
  40c55c:	ldr	x0, [x19]
  40c560:	ldrb	w0, [x0, #67]
  40c564:	bl	40ee38 <ferror@plt+0xc068>
  40c568:	mov	x3, x0
  40c56c:	mov	x2, x21
  40c570:	mov	x1, x20
  40c574:	ldp	x19, x20, [sp, #16]
  40c578:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40c57c:	ldr	x21, [sp, #32]
  40c580:	add	x0, x0, #0x465
  40c584:	ldp	x29, x30, [sp], #48
  40c588:	b	40c374 <ferror@plt+0x95a4>
  40c58c:	stp	x29, x30, [sp, #-32]!
  40c590:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40c594:	add	x0, x0, #0x46e
  40c598:	mov	x29, sp
  40c59c:	bl	402d00 <getenv@plt>
  40c5a0:	cbz	x0, 40c5b0 <ferror@plt+0x97e0>
  40c5a4:	bl	402840 <atoi@plt>
  40c5a8:	cmp	w0, #0x0
  40c5ac:	b.gt	40c5d8 <ferror@plt+0x9808>
  40c5b0:	add	x2, sp, #0x18
  40c5b4:	mov	x1, #0x5413                	// #21523
  40c5b8:	mov	w0, #0x0                   	// #0
  40c5bc:	strh	wzr, [sp, #26]
  40c5c0:	bl	402db0 <ioctl@plt>
  40c5c4:	cbnz	w0, 40c5e0 <ferror@plt+0x9810>
  40c5c8:	ldrh	w0, [sp, #26]
  40c5cc:	mov	w1, #0x7fffffff            	// #2147483647
  40c5d0:	cmp	w0, #0x0
  40c5d4:	csel	w0, w0, w1, ne  // ne = any
  40c5d8:	ldp	x29, x30, [sp], #32
  40c5dc:	ret
  40c5e0:	mov	w0, #0x7fffffff            	// #2147483647
  40c5e4:	b	40c5d8 <ferror@plt+0x9808>
  40c5e8:	stp	x29, x30, [sp, #-32]!
  40c5ec:	mov	x29, sp
  40c5f0:	str	x19, [sp, #16]
  40c5f4:	mov	x19, x0
  40c5f8:	cbz	w1, 40c60c <ferror@plt+0x983c>
  40c5fc:	sub	w1, w1, #0x1
  40c600:	cmp	w1, #0x0
  40c604:	b.gt	40c628 <ferror@plt+0x9858>
  40c608:	b	40c624 <ferror@plt+0x9854>
  40c60c:	ldr	x0, [x0]
  40c610:	ldr	x0, [x0, #8]
  40c614:	ldr	x0, [x0, #192]
  40c618:	bl	4028f0 <fileno_unlocked@plt>
  40c61c:	bl	402c30 <isatty@plt>
  40c620:	cbnz	w0, 40c638 <ferror@plt+0x9868>
  40c624:	mov	w1, #0x7fffffff            	// #2147483647
  40c628:	str	w1, [x19, #112]
  40c62c:	ldr	x19, [sp, #16]
  40c630:	ldp	x29, x30, [sp], #32
  40c634:	ret
  40c638:	bl	40c58c <ferror@plt+0x97bc>
  40c63c:	sub	w1, w0, #0x1
  40c640:	b	40c600 <ferror@plt+0x9830>
  40c644:	stp	x29, x30, [sp, #-48]!
  40c648:	mov	x29, sp
  40c64c:	stp	x19, x20, [sp, #16]
  40c650:	mov	x19, x0
  40c654:	mov	w20, w1
  40c658:	str	x21, [sp, #32]
  40c65c:	mov	x21, x19
  40c660:	mov	x0, #0x48                  	// #72
  40c664:	bl	44526c <_obstack_memory_used@@Base+0x868>
  40c668:	mov	w1, #0x0                   	// #0
  40c66c:	str	x0, [x21], #8
  40c670:	bl	4132bc <ferror@plt+0x104ec>
  40c674:	stp	xzr, xzr, [x19, #8]
  40c678:	sbfiz	x0, x20, #2, #32
  40c67c:	stp	xzr, xzr, [x21, #16]
  40c680:	stp	xzr, xzr, [x21, #32]
  40c684:	str	xzr, [x21, #48]
  40c688:	strb	wzr, [x19, #64]
  40c68c:	str	w20, [x19, #68]
  40c690:	bl	44526c <_obstack_memory_used@@Base+0x868>
  40c694:	str	x0, [x19, #72]
  40c698:	mov	x1, #0x0                   	// #0
  40c69c:	cmp	w20, w1
  40c6a0:	b.le	40c6b0 <ferror@plt+0x98e0>
  40c6a4:	str	wzr, [x0, x1, lsl #2]
  40c6a8:	add	x1, x1, #0x1
  40c6ac:	b	40c69c <ferror@plt+0x98cc>
  40c6b0:	ldr	x0, [x19]
  40c6b4:	strb	wzr, [x19, #108]
  40c6b8:	ldr	w1, [x0, #40]
  40c6bc:	mov	x0, x19
  40c6c0:	bl	40c5e8 <ferror@plt+0x9818>
  40c6c4:	strh	wzr, [x19, #128]
  40c6c8:	mov	w0, #0x5e5e                	// #24158
  40c6cc:	strb	wzr, [x19, #130]
  40c6d0:	movk	w0, #0x5e, lsl #16
  40c6d4:	strh	wzr, [x19, #228]
  40c6d8:	ldr	x21, [sp, #32]
  40c6dc:	str	w0, [x19, #116]
  40c6e0:	adrp	x0, 40e000 <ferror@plt+0xb230>
  40c6e4:	add	x0, x0, #0x18
  40c6e8:	str	x0, [x19, #136]
  40c6ec:	adrp	x0, 40c000 <ferror@plt+0x9230>
  40c6f0:	add	x0, x0, #0x4e8
  40c6f4:	str	x0, [x19, #144]
  40c6f8:	adrp	x0, 40c000 <ferror@plt+0x9230>
  40c6fc:	add	x0, x0, #0x148
  40c700:	str	xzr, [x19, #120]
  40c704:	str	wzr, [x19, #132]
  40c708:	str	x0, [x19, #152]
  40c70c:	adrp	x0, 40c000 <ferror@plt+0x9230>
  40c710:	add	x0, x0, #0x17c
  40c714:	stp	xzr, xzr, [x19, #160]
  40c718:	stp	xzr, xzr, [x19, #176]
  40c71c:	str	xzr, [x19, #192]
  40c720:	str	wzr, [x19, #200]
  40c724:	stp	xzr, xzr, [x19, #208]
  40c728:	str	wzr, [x19, #224]
  40c72c:	stp	xzr, xzr, [x19, #232]
  40c730:	stp	xzr, xzr, [x19, #248]
  40c734:	str	x0, [x19, #264]
  40c738:	ldp	x19, x20, [sp, #16]
  40c73c:	ldp	x29, x30, [sp], #48
  40c740:	ret
  40c744:	stp	x29, x30, [sp, #-32]!
  40c748:	cmp	w1, #0x0
  40c74c:	mov	x29, sp
  40c750:	str	x19, [sp, #16]
  40c754:	ldr	x19, [x0]
  40c758:	mov	w0, #0x2                   	// #2
  40c75c:	csel	w0, w1, w0, ge  // ge = tcont
  40c760:	bl	40ee54 <ferror@plt+0xc084>
  40c764:	strb	w0, [x19, #67]
  40c768:	ldr	x19, [sp, #16]
  40c76c:	ldp	x29, x30, [sp], #32
  40c770:	ret
  40c774:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40c778:	add	x1, x1, #0x878
  40c77c:	add	x1, x1, #0x20
  40c780:	ldr	x0, [x1, w0, sxtw #3]
  40c784:	ret
  40c788:	stp	x29, x30, [sp, #-96]!
  40c78c:	mov	x29, sp
  40c790:	stp	x19, x20, [sp, #16]
  40c794:	mov	x19, x0
  40c798:	mov	w20, w1
  40c79c:	ldr	x0, [x0]
  40c7a0:	stp	x21, x22, [sp, #32]
  40c7a4:	stp	x23, x24, [sp, #48]
  40c7a8:	ldrb	w1, [x0, #65]
  40c7ac:	stp	x25, x26, [sp, #64]
  40c7b0:	str	xzr, [sp, #88]
  40c7b4:	cbz	w1, 40c7c4 <ferror@plt+0x99f4>
  40c7b8:	bl	413530 <ferror@plt+0x10760>
  40c7bc:	ldr	x0, [x19]
  40c7c0:	strb	wzr, [x0, #65]
  40c7c4:	cmp	w20, #0x1
  40c7c8:	b.ls	40c910 <ferror@plt+0x9b40>  // b.plast
  40c7cc:	adrp	x21, 495000 <_obstack_memory_used@@Base+0x505fc>
  40c7d0:	add	x3, sp, #0x58
  40c7d4:	mov	w1, w20
  40c7d8:	mov	w2, #0x2                   	// #2
  40c7dc:	ldr	x0, [x21, #2432]
  40c7e0:	bl	42bec4 <ferror@plt+0x290f4>
  40c7e4:	ldr	x0, [sp, #88]
  40c7e8:	cbz	x0, 40c910 <ferror@plt+0x9b40>
  40c7ec:	ldr	x1, [x19, #208]
  40c7f0:	cmp	x0, x1
  40c7f4:	b.eq	40c910 <ferror@plt+0x9b40>  // b.none
  40c7f8:	str	x0, [x19, #208]
  40c7fc:	ldr	w0, [x0, #20]
  40c800:	cbz	w0, 40c910 <ferror@plt+0x9b40>
  40c804:	adrp	x20, 495000 <_obstack_memory_used@@Base+0x505fc>
  40c808:	adrp	x22, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40c80c:	adrp	x23, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40c810:	add	x20, x20, #0x7f8
  40c814:	add	x22, x22, #0x446
  40c818:	add	x23, x23, #0x476
  40c81c:	mov	w25, #0x1                   	// #1
  40c820:	ldr	x0, [x21, #2432]
  40c824:	ldr	x1, [sp, #88]
  40c828:	ldr	w24, [x1, #20]
  40c82c:	bl	42b1c4 <ferror@plt+0x283f4>
  40c830:	ldr	w4, [x0]
  40c834:	ldrb	w2, [x0, #6]
  40c838:	sub	w1, w24, w4
  40c83c:	ldr	w4, [x0, #16]
  40c840:	str	x0, [sp, #88]
  40c844:	lsr	w3, w1, w2
  40c848:	add	w3, w3, w4
  40c84c:	cbz	w25, 40c930 <ferror@plt+0x9b60>
  40c850:	ldrb	w4, [x19, #121]
  40c854:	cbz	w4, 40c930 <ferror@plt+0x9b60>
  40c858:	mov	w4, #0x1                   	// #1
  40c85c:	ldrb	w0, [x0, #7]
  40c860:	lsl	w4, w4, w2
  40c864:	sub	w4, w4, #0x1
  40c868:	and	w4, w4, w1
  40c86c:	lsr	w4, w4, w0
  40c870:	cbz	w3, 40c928 <ferror@plt+0x9b58>
  40c874:	cmp	w4, #0x0
  40c878:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40c87c:	add	x2, x2, #0x443
  40c880:	csel	x2, x22, x2, eq  // eq = none
  40c884:	add	x0, x20, #0x8
  40c888:	mov	x1, #0x20                  	// #32
  40c88c:	bl	402800 <snprintf@plt>
  40c890:	eor	w0, w25, #0x1
  40c894:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40c898:	add	x1, x1, #0x878
  40c89c:	cmp	w25, #0x0
  40c8a0:	add	x0, x1, x0, lsl #3
  40c8a4:	adrp	x24, 45e000 <_obstack_memory_used@@Base+0x195fc>
  40c8a8:	add	x24, x24, #0xaff
  40c8ac:	mov	w25, #0x0                   	// #0
  40c8b0:	csel	x24, x24, x23, ne  // ne = any
  40c8b4:	ldr	x0, [x0, #152]
  40c8b8:	ldr	x26, [x19]
  40c8bc:	bl	402d80 <gettext@plt>
  40c8c0:	mov	x3, x0
  40c8c4:	ldr	x1, [sp, #88]
  40c8c8:	mov	x0, x26
  40c8cc:	add	x6, x20, #0x8
  40c8d0:	mov	x2, x24
  40c8d4:	adrp	x4, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40c8d8:	add	x4, x4, #0x44a
  40c8dc:	ldr	x5, [x1, #8]
  40c8e0:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40c8e4:	add	x1, x1, #0x479
  40c8e8:	bl	414ef0 <ferror@plt+0x12120>
  40c8ec:	ldr	x0, [sp, #88]
  40c8f0:	ldr	w0, [x0, #20]
  40c8f4:	cbnz	w0, 40c820 <ferror@plt+0x9a50>
  40c8f8:	ldr	x0, [x19]
  40c8fc:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x235fc>
  40c900:	add	x1, x1, #0x198
  40c904:	bl	414ef0 <ferror@plt+0x12120>
  40c908:	ldr	x0, [x19]
  40c90c:	bl	413530 <ferror@plt+0x10760>
  40c910:	ldp	x19, x20, [sp, #16]
  40c914:	ldp	x21, x22, [sp, #32]
  40c918:	ldp	x23, x24, [sp, #48]
  40c91c:	ldp	x25, x26, [sp, #64]
  40c920:	ldp	x29, x30, [sp], #96
  40c924:	ret
  40c928:	strb	wzr, [x20, #8]
  40c92c:	b	40c890 <ferror@plt+0x9ac0>
  40c930:	cbz	w3, 40c928 <ferror@plt+0x9b58>
  40c934:	mov	x2, x22
  40c938:	mov	w4, #0x0                   	// #0
  40c93c:	b	40c884 <ferror@plt+0x9ab4>
  40c940:	stp	x29, x30, [sp, #-64]!
  40c944:	mov	x29, sp
  40c948:	stp	x19, x20, [sp, #16]
  40c94c:	stp	x21, x22, [sp, #32]
  40c950:	stp	x23, x24, [sp, #48]
  40c954:	tbnz	w1, #31, 40ca48 <ferror@plt+0x9c78>
  40c958:	mov	x19, x0
  40c95c:	ldr	w0, [x0, #68]
  40c960:	mov	w21, w1
  40c964:	cmp	w0, w1
  40c968:	b.le	40ca48 <ferror@plt+0x9c78>
  40c96c:	mov	w24, w2
  40c970:	cmp	w2, #0xd
  40c974:	b.gt	40ca48 <ferror@plt+0x9c78>
  40c978:	ldr	x0, [x19, #72]
  40c97c:	sbfiz	x22, x1, #2, #32
  40c980:	mov	w23, w3
  40c984:	ldr	w20, [x0, x22]
  40c988:	cbz	w3, 40ca40 <ferror@plt+0x9c70>
  40c98c:	cbnz	w20, 40c9bc <ferror@plt+0x9bec>
  40c990:	mov	w0, w1
  40c994:	ldp	x2, x1, [x19, #168]
  40c998:	blr	x2
  40c99c:	cbz	w0, 40ca30 <ferror@plt+0x9c60>
  40c9a0:	ldrb	w0, [x19, #64]
  40c9a4:	mov	w20, #0x4                   	// #4
  40c9a8:	cmp	w0, #0x0
  40c9ac:	mov	w0, #0x6                   	// #6
  40c9b0:	csel	w20, w20, w0, ne  // ne = any
  40c9b4:	ldr	x0, [x19, #72]
  40c9b8:	str	w20, [x0, x22]
  40c9bc:	ldr	w1, [x19, #88]
  40c9c0:	mov	w22, #0xc                   	// #12
  40c9c4:	ldr	x0, [x19, #80]
  40c9c8:	sub	w1, w1, #0x1
  40c9cc:	smull	x22, w1, w22
  40c9d0:	mov	x2, x22
  40c9d4:	tbnz	w1, #31, 40c9f0 <ferror@plt+0x9c20>
  40c9d8:	add	x3, x0, x2
  40c9dc:	sub	x2, x2, #0xc
  40c9e0:	ldr	w4, [x3, #4]
  40c9e4:	cmp	w4, w21
  40c9e8:	b.ne	40ca38 <ferror@plt+0x9c68>  // b.any
  40c9ec:	ldr	w20, [x3, #8]
  40c9f0:	add	x1, x22, #0x18
  40c9f4:	add	x22, x22, #0xc
  40c9f8:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  40c9fc:	add	x1, x0, x22
  40ca00:	str	x0, [x19, #80]
  40ca04:	str	w23, [x0, x22]
  40ca08:	stp	w21, w24, [x1, #4]
  40ca0c:	ldr	w0, [x19, #88]
  40ca10:	add	w0, w0, #0x1
  40ca14:	str	w0, [x19, #88]
  40ca18:	mov	w0, w20
  40ca1c:	ldp	x19, x20, [sp, #16]
  40ca20:	ldp	x21, x22, [sp, #32]
  40ca24:	ldp	x23, x24, [sp, #48]
  40ca28:	ldp	x29, x30, [sp], #64
  40ca2c:	ret
  40ca30:	mov	w20, #0x1                   	// #1
  40ca34:	b	40c9b4 <ferror@plt+0x9be4>
  40ca38:	sub	w1, w1, #0x1
  40ca3c:	b	40c9d4 <ferror@plt+0x9c04>
  40ca40:	str	w2, [x0, x22]
  40ca44:	b	40ca18 <ferror@plt+0x9c48>
  40ca48:	mov	w20, #0x0                   	// #0
  40ca4c:	b	40ca18 <ferror@plt+0x9c48>
  40ca50:	stp	x29, x30, [sp, #-32]!
  40ca54:	mov	x29, sp
  40ca58:	ldr	w1, [x0, #104]
  40ca5c:	str	x19, [sp, #16]
  40ca60:	mov	x19, x0
  40ca64:	ldr	x0, [x0, #96]
  40ca68:	add	w1, w1, #0x1
  40ca6c:	sbfiz	x1, x1, #2, #32
  40ca70:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  40ca74:	str	x0, [x19, #96]
  40ca78:	ldr	w1, [x19, #104]
  40ca7c:	add	w2, w1, #0x1
  40ca80:	str	w2, [x19, #104]
  40ca84:	ldr	w2, [x19, #88]
  40ca88:	str	w2, [x0, w1, sxtw #2]
  40ca8c:	ldr	x19, [sp, #16]
  40ca90:	ldp	x29, x30, [sp], #32
  40ca94:	ret
  40ca98:	stp	x29, x30, [sp, #-48]!
  40ca9c:	mov	x29, sp
  40caa0:	stp	x21, x22, [sp, #32]
  40caa4:	mov	w22, w1
  40caa8:	ldr	w21, [x0, #104]
  40caac:	stp	x19, x20, [sp, #16]
  40cab0:	mov	x19, x0
  40cab4:	cbz	w21, 40cac8 <ferror@plt+0x9cf8>
  40cab8:	ldr	x0, [x0, #96]
  40cabc:	sub	w21, w21, #0x1
  40cac0:	str	w21, [x19, #104]
  40cac4:	ldr	w21, [x0, w21, sxtw #2]
  40cac8:	ldr	w20, [x19, #88]
  40cacc:	mov	w1, #0xc                   	// #12
  40cad0:	ldr	x0, [x19, #80]
  40cad4:	add	w20, w20, #0x1
  40cad8:	smull	x20, w20, w1
  40cadc:	mov	x1, x20
  40cae0:	sub	x20, x20, #0xc
  40cae4:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  40cae8:	add	x1, x0, x20
  40caec:	str	x0, [x19, #80]
  40caf0:	str	w22, [x0, x20]
  40caf4:	mov	w0, #0xf                   	// #15
  40caf8:	stp	w21, w0, [x1, #4]
  40cafc:	ldp	x21, x22, [sp, #32]
  40cb00:	ldr	w0, [x19, #88]
  40cb04:	add	w0, w0, #0x1
  40cb08:	str	w0, [x19, #88]
  40cb0c:	ldp	x19, x20, [sp, #16]
  40cb10:	ldp	x29, x30, [sp], #48
  40cb14:	ret
  40cb18:	mov	x4, x0
  40cb1c:	mov	x2, x0
  40cb20:	ldrb	w0, [x2]
  40cb24:	cmp	w0, #0x2e
  40cb28:	b.ne	40cb4c <ferror@plt+0x9d7c>  // b.any
  40cb2c:	ldrb	w0, [x2, #1]
  40cb30:	cmp	w0, #0x2e
  40cb34:	b.ne	40cb4c <ferror@plt+0x9d7c>  // b.any
  40cb38:	ldrb	w0, [x2, #2]
  40cb3c:	cmp	w0, #0x2f
  40cb40:	b.ne	40cb4c <ferror@plt+0x9d7c>  // b.any
  40cb44:	add	x2, x2, #0x3
  40cb48:	b	40cb20 <ferror@plt+0x9d50>
  40cb4c:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40cb50:	add	x1, x1, #0x878
  40cb54:	add	x1, x1, #0xa8
  40cb58:	ldrb	w0, [x1, #1]
  40cb5c:	cmp	w0, #0x2e
  40cb60:	b.ne	40cb70 <ferror@plt+0x9da0>  // b.any
  40cb64:	ldrb	w0, [x1, #2]
  40cb68:	cmp	w0, #0x2f
  40cb6c:	b.eq	40cb94 <ferror@plt+0x9dc4>  // b.none
  40cb70:	mov	x3, #0x0                   	// #0
  40cb74:	ldrb	w5, [x2, x3]
  40cb78:	add	x0, x2, x3
  40cb7c:	ldrb	w6, [x1, x3]
  40cb80:	cmp	w5, w6
  40cb84:	b.ne	40cba4 <ferror@plt+0x9dd4>  // b.any
  40cb88:	cbz	w5, 40cba4 <ferror@plt+0x9dd4>
  40cb8c:	add	x3, x3, #0x1
  40cb90:	b	40cb74 <ferror@plt+0x9da4>
  40cb94:	ldrb	w0, [x1, #3]!
  40cb98:	cmp	w0, #0x2e
  40cb9c:	b.eq	40cb58 <ferror@plt+0x9d88>  // b.none
  40cba0:	b	40cb70 <ferror@plt+0x9da0>
  40cba4:	cmp	x0, x4
  40cba8:	b.ls	40cbc0 <ferror@plt+0x9df0>  // b.plast
  40cbac:	ldurb	w1, [x0, #-1]
  40cbb0:	cmp	w1, #0x2f
  40cbb4:	b.eq	40cbc0 <ferror@plt+0x9df0>  // b.none
  40cbb8:	sub	x0, x0, #0x1
  40cbbc:	b	40cba4 <ferror@plt+0x9dd4>
  40cbc0:	ret
  40cbc4:	stp	x29, x30, [sp, #-304]!
  40cbc8:	mov	x29, sp
  40cbcc:	str	x19, [sp, #16]
  40cbd0:	mov	x19, x0
  40cbd4:	add	x0, sp, #0x130
  40cbd8:	stp	x0, x0, [sp, #40]
  40cbdc:	add	x0, sp, #0xf0
  40cbe0:	str	x0, [sp, #56]
  40cbe4:	mov	w0, #0xffffffc8            	// #-56
  40cbe8:	str	w0, [sp, #64]
  40cbec:	mov	w0, #0xffffff80            	// #-128
  40cbf0:	str	w0, [sp, #68]
  40cbf4:	str	q0, [sp, #112]
  40cbf8:	str	q1, [sp, #128]
  40cbfc:	str	q2, [sp, #144]
  40cc00:	str	q3, [sp, #160]
  40cc04:	str	q4, [sp, #176]
  40cc08:	str	q5, [sp, #192]
  40cc0c:	str	q6, [sp, #208]
  40cc10:	str	q7, [sp, #224]
  40cc14:	stp	x1, x2, [sp, #248]
  40cc18:	stp	x3, x4, [sp, #264]
  40cc1c:	stp	x5, x6, [sp, #280]
  40cc20:	str	x7, [sp, #296]
  40cc24:	bl	402cf0 <__errno_location@plt>
  40cc28:	ldr	w0, [x0]
  40cc2c:	str	w0, [sp, #88]
  40cc30:	add	x0, sp, #0x28
  40cc34:	str	x0, [sp, #80]
  40cc38:	mov	x0, x19
  40cc3c:	adrp	x19, 495000 <_obstack_memory_used@@Base+0x505fc>
  40cc40:	bl	402d80 <gettext@plt>
  40cc44:	str	x0, [sp, #72]
  40cc48:	add	x1, sp, #0x48
  40cc4c:	ldr	x0, [x19, #960]
  40cc50:	str	xzr, [sp, #96]
  40cc54:	ldr	x0, [x0]
  40cc58:	bl	414eb8 <ferror@plt+0x120e8>
  40cc5c:	ldr	x0, [x19, #960]
  40cc60:	ldr	x0, [x0]
  40cc64:	bl	413a6c <ferror@plt+0x10c9c>
  40cc68:	ldr	x19, [sp, #16]
  40cc6c:	ldp	x29, x30, [sp], #304
  40cc70:	ret
  40cc74:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  40cc78:	ldr	x0, [x0, #960]
  40cc7c:	ldr	x0, [x0, #24]
  40cc80:	cmp	x0, #0x0
  40cc84:	cset	w0, ne  // ne = any
  40cc88:	ret
  40cc8c:	stp	x29, x30, [sp, #-272]!
  40cc90:	mov	x29, sp
  40cc94:	str	x19, [sp, #16]
  40cc98:	mov	x19, x0
  40cc9c:	mov	x0, x1
  40cca0:	add	x1, sp, #0x110
  40cca4:	stp	x1, x1, [sp, #64]
  40cca8:	add	x1, sp, #0xe0
  40ccac:	str	x1, [sp, #80]
  40ccb0:	mov	w1, #0xffffffd0            	// #-48
  40ccb4:	str	w1, [sp, #88]
  40ccb8:	mov	w1, #0xffffff80            	// #-128
  40ccbc:	str	w1, [sp, #92]
  40ccc0:	str	q0, [sp, #96]
  40ccc4:	str	q1, [sp, #112]
  40ccc8:	str	q2, [sp, #128]
  40cccc:	str	q3, [sp, #144]
  40ccd0:	str	q4, [sp, #160]
  40ccd4:	str	q5, [sp, #176]
  40ccd8:	str	q6, [sp, #192]
  40ccdc:	str	q7, [sp, #208]
  40cce0:	stp	x2, x3, [sp, #224]
  40cce4:	stp	x4, x5, [sp, #240]
  40cce8:	stp	x6, x7, [sp, #256]
  40ccec:	bl	402d80 <gettext@plt>
  40ccf0:	mov	x1, x0
  40ccf4:	ldp	x2, x3, [sp, #64]
  40ccf8:	stp	x2, x3, [sp, #32]
  40ccfc:	mov	x0, x19
  40cd00:	ldp	x2, x3, [sp, #80]
  40cd04:	stp	x2, x3, [sp, #48]
  40cd08:	add	x2, sp, #0x20
  40cd0c:	bl	402cd0 <vfprintf@plt>
  40cd10:	ldr	x19, [sp, #16]
  40cd14:	ldp	x29, x30, [sp], #272
  40cd18:	ret
  40cd1c:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  40cd20:	ldr	x1, [x0, #960]
  40cd24:	ldr	w0, [x1, #240]
  40cd28:	add	w0, w0, #0x1
  40cd2c:	str	w0, [x1, #240]
  40cd30:	ret
  40cd34:	adrp	x1, 495000 <_obstack_memory_used@@Base+0x505fc>
  40cd38:	ldr	x0, [x1, #960]
  40cd3c:	ldr	w2, [x0, #240]
  40cd40:	sub	w2, w2, #0x1
  40cd44:	str	w2, [x0, #240]
  40cd48:	cbnz	w2, 40cd88 <ferror@plt+0x9fb8>
  40cd4c:	stp	x29, x30, [sp, #-32]!
  40cd50:	mov	x29, sp
  40cd54:	str	x19, [sp, #16]
  40cd58:	mov	x19, x1
  40cd5c:	ldr	w1, [x0, #244]
  40cd60:	cmp	w1, #0x0
  40cd64:	b.le	40cd74 <ferror@plt+0x9fa4>
  40cd68:	ldr	x1, [x0, #256]
  40cd6c:	cbz	x1, 40cd74 <ferror@plt+0x9fa4>
  40cd70:	blr	x1
  40cd74:	ldr	x0, [x19, #960]
  40cd78:	ldr	x19, [sp, #16]
  40cd7c:	str	wzr, [x0, #244]
  40cd80:	ldp	x29, x30, [sp], #32
  40cd84:	ret
  40cd88:	ret
  40cd8c:	stp	x29, x30, [sp, #-32]!
  40cd90:	mov	x29, sp
  40cd94:	ldr	x1, [x0, #264]
  40cd98:	stp	x19, x20, [sp, #16]
  40cd9c:	mov	x19, x0
  40cda0:	cbz	x1, 40cda8 <ferror@plt+0x9fd8>
  40cda4:	blr	x1
  40cda8:	bl	416fc4 <ferror@plt+0x141f4>
  40cdac:	ldr	x0, [x19, #72]
  40cdb0:	bl	402b30 <free@plt>
  40cdb4:	ldr	x0, [x19]
  40cdb8:	ldr	x1, [x0]
  40cdbc:	ldr	x1, [x1]
  40cdc0:	str	xzr, [x19, #72]
  40cdc4:	blr	x1
  40cdc8:	ldr	x0, [x19]
  40cdcc:	bl	402b30 <free@plt>
  40cdd0:	str	xzr, [x19]
  40cdd4:	ldr	x20, [x19, #232]
  40cdd8:	cbz	x20, 40cdf8 <ferror@plt+0xa028>
  40cddc:	ldr	x1, [x20, #8]
  40cde0:	add	x0, x20, #0x8
  40cde4:	bl	40eb50 <ferror@plt+0xbd80>
  40cde8:	mov	x0, x20
  40cdec:	mov	x1, #0x28                  	// #40
  40cdf0:	bl	445778 <_obstack_memory_used@@Base+0xd74>
  40cdf4:	str	xzr, [x19, #232]
  40cdf8:	ldp	x19, x20, [sp, #16]
  40cdfc:	ldp	x29, x30, [sp], #32
  40ce00:	ret
  40ce04:	ldr	w2, [x0, #132]
  40ce08:	cbz	w2, 40ce6c <ferror@plt+0xa09c>
  40ce0c:	stp	x29, x30, [sp, #-32]!
  40ce10:	mov	x29, sp
  40ce14:	stp	x19, x20, [sp, #16]
  40ce18:	mov	x19, x0
  40ce1c:	and	w20, w1, #0xff
  40ce20:	ldp	w0, w1, [x0, #24]
  40ce24:	add	w0, w0, w1
  40ce28:	ldr	w1, [x19, #56]
  40ce2c:	add	w0, w0, w1
  40ce30:	cmp	w2, w0
  40ce34:	b.gt	40ce60 <ferror@plt+0xa090>
  40ce38:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  40ce3c:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40ce40:	add	x1, x1, #0x487
  40ce44:	ldr	x0, [x0, #1440]
  40ce48:	bl	40cc8c <ferror@plt+0x9ebc>
  40ce4c:	cbz	w20, 40ce58 <ferror@plt+0xa088>
  40ce50:	mov	x0, x19
  40ce54:	bl	40cd8c <ferror@plt+0x9fbc>
  40ce58:	mov	w0, #0x1                   	// #1
  40ce5c:	bl	402730 <exit@plt>
  40ce60:	ldp	x19, x20, [sp, #16]
  40ce64:	ldp	x29, x30, [sp], #32
  40ce68:	ret
  40ce6c:	ret
  40ce70:	stp	x29, x30, [sp, #-48]!
  40ce74:	sub	w2, w1, #0x2
  40ce78:	cmp	w2, #0xb
  40ce7c:	mov	x29, sp
  40ce80:	stp	x19, x20, [sp, #16]
  40ce84:	b.hi	40cfa8 <ferror@plt+0xa1d8>  // b.pmore
  40ce88:	mov	x19, x0
  40ce8c:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40ce90:	add	x0, x0, #0x868
  40ce94:	ldrb	w0, [x0, w2, uxtw]
  40ce98:	adr	x2, 40cea4 <ferror@plt+0xa0d4>
  40ce9c:	add	x0, x2, w0, sxtb #2
  40cea0:	br	x0
  40cea4:	ldrb	w0, [x19, #120]
  40cea8:	cbz	w0, 40ceb0 <ferror@plt+0xa0e0>
  40ceac:	bl	402a50 <abort@plt>
  40ceb0:	ldrb	w0, [x19, #128]
  40ceb4:	cbz	w0, 40cfc0 <ferror@plt+0xa1f0>
  40ceb8:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  40cebc:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40cec0:	add	x1, x1, #0x4b7
  40cec4:	ldr	x0, [x0, #1440]
  40cec8:	bl	40cc8c <ferror@plt+0x9ebc>
  40cecc:	mov	x0, x19
  40ced0:	bl	40cd8c <ferror@plt+0x9fbc>
  40ced4:	mov	w0, #0x1                   	// #1
  40ced8:	b	40cf3c <ferror@plt+0xa16c>
  40cedc:	cmp	w1, #0x3
  40cee0:	b.eq	40cf40 <ferror@plt+0xa170>  // b.none
  40cee4:	str	wzr, [sp, #44]
  40cee8:	ldrb	w0, [x19, #120]
  40ceec:	cbnz	w0, 40ceac <ferror@plt+0xa0dc>
  40cef0:	adrp	x19, 495000 <_obstack_memory_used@@Base+0x505fc>
  40cef4:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40cef8:	add	x1, x1, #0x4e6
  40cefc:	ldr	x0, [x19, #1440]
  40cf00:	bl	40cc8c <ferror@plt+0x9ebc>
  40cf04:	ldr	w0, [sp, #44]
  40cf08:	cmp	w0, #0x0
  40cf0c:	b.le	40cf20 <ferror@plt+0xa150>
  40cf10:	ldr	x0, [x19, #1440]
  40cf14:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40cf18:	add	x1, x1, #0x531
  40cf1c:	bl	40cc8c <ferror@plt+0x9ebc>
  40cf20:	ldr	x0, [x19, #1440]
  40cf24:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  40cf28:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40cf2c:	add	x2, x2, #0x8b5
  40cf30:	add	x1, x1, #0x56d
  40cf34:	bl	40cc8c <ferror@plt+0x9ebc>
  40cf38:	mov	w0, #0x4                   	// #4
  40cf3c:	bl	402730 <exit@plt>
  40cf40:	adrp	x20, 40c000 <ferror@plt+0x9230>
  40cf44:	add	x20, x20, #0xe0
  40cf48:	mov	x2, x20
  40cf4c:	mov	x3, #0x0                   	// #0
  40cf50:	mov	w1, #0x0                   	// #0
  40cf54:	mov	x0, #0x0                   	// #0
  40cf58:	bl	433fe8 <ferror@plt+0x31218>
  40cf5c:	str	wzr, [sp, #44]
  40cf60:	cbz	x0, 40cee8 <ferror@plt+0xa118>
  40cf64:	add	x4, sp, #0x2c
  40cf68:	mov	x3, x20
  40cf6c:	adrp	x2, 40c000 <ferror@plt+0x9230>
  40cf70:	mov	w1, #0x2                   	// #2
  40cf74:	add	x2, x2, #0x1f4
  40cf78:	bl	4340e4 <ferror@plt+0x31314>
  40cf7c:	b	40cee8 <ferror@plt+0xa118>
  40cf80:	ldrb	w0, [x19, #120]
  40cf84:	cbnz	w0, 40ceac <ferror@plt+0xa0dc>
  40cf88:	mov	x0, x19
  40cf8c:	bl	40cd8c <ferror@plt+0x9fbc>
  40cf90:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  40cf94:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40cf98:	add	x1, x1, #0x587
  40cf9c:	ldr	x0, [x0, #1440]
  40cfa0:	bl	40cc8c <ferror@plt+0x9ebc>
  40cfa4:	b	40ced4 <ferror@plt+0xa104>
  40cfa8:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40cfac:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40cfb0:	add	x2, x2, #0x5a0
  40cfb4:	add	x0, x0, #0x5bf
  40cfb8:	mov	w1, #0x231                 	// #561
  40cfbc:	bl	402de0 <ferror@plt+0x10>
  40cfc0:	ldp	x19, x20, [sp, #16]
  40cfc4:	ldp	x29, x30, [sp], #48
  40cfc8:	ret
  40cfcc:	stp	x29, x30, [sp, #-144]!
  40cfd0:	mov	x29, sp
  40cfd4:	stp	x19, x20, [sp, #16]
  40cfd8:	mov	x20, x1
  40cfdc:	mov	x19, x0
  40cfe0:	mov	w1, #0x0                   	// #0
  40cfe4:	mov	x0, x20
  40cfe8:	stp	x21, x22, [sp, #32]
  40cfec:	stp	x23, x24, [sp, #48]
  40cff0:	stp	x25, x26, [sp, #64]
  40cff4:	bl	413074 <ferror@plt+0x102a4>
  40cff8:	ldr	w21, [x20, #56]
  40cffc:	mov	w1, w0
  40d000:	cmp	w21, #0x6
  40d004:	b.eq	40d010 <ferror@plt+0xa240>  // b.none
  40d008:	cmp	w21, #0xa
  40d00c:	b.ne	40d070 <ferror@plt+0xa2a0>  // b.any
  40d010:	ldrb	w0, [x19, #129]
  40d014:	cbz	w0, 40d034 <ferror@plt+0xa264>
  40d018:	mov	w0, #0x0                   	// #0
  40d01c:	ldp	x19, x20, [sp, #16]
  40d020:	ldp	x21, x22, [sp, #32]
  40d024:	ldp	x23, x24, [sp, #48]
  40d028:	ldp	x25, x26, [sp, #64]
  40d02c:	ldp	x29, x30, [sp], #144
  40d030:	ret
  40d034:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  40d038:	ldr	x0, [x0, #2432]
  40d03c:	bl	42be34 <ferror@plt+0x29064>
  40d040:	cbz	w0, 40d04c <ferror@plt+0xa27c>
  40d044:	ldrb	w0, [x19, #130]
  40d048:	cbz	w0, 40d018 <ferror@plt+0xa248>
  40d04c:	ldr	w0, [x20, #56]
  40d050:	cmp	w0, #0xa
  40d054:	b.ne	40d070 <ferror@plt+0xa2a0>  // b.any
  40d058:	ldrb	w0, [x19, #122]
  40d05c:	mov	w21, #0x4                   	// #4
  40d060:	cmp	w0, #0x0
  40d064:	mov	w0, #0x6                   	// #6
  40d068:	csel	w21, w21, w0, ne  // ne = any
  40d06c:	str	w21, [x20, #56]
  40d070:	ldr	w1, [x20, #56]
  40d074:	cmp	w1, #0x8
  40d078:	b.ne	40d084 <ferror@plt+0xa2b4>  // b.any
  40d07c:	ldrb	w0, [x19, #220]
  40d080:	cbnz	w0, 40d018 <ferror@plt+0xa248>
  40d084:	ldr	w0, [x19, #216]
  40d088:	cmp	w0, #0x0
  40d08c:	b.le	40d0b0 <ferror@plt+0xa2e0>
  40d090:	cmp	w1, #0x3
  40d094:	b.eq	40d0a0 <ferror@plt+0xa2d0>  // b.none
  40d098:	cmp	w1, #0xd
  40d09c:	b.ne	40d164 <ferror@plt+0xa394>  // b.any
  40d0a0:	cmp	w0, #0x1
  40d0a4:	b.ne	40d164 <ferror@plt+0xa394>  // b.any
  40d0a8:	ldr	x0, [x19]
  40d0ac:	bl	413a6c <ferror@plt+0x10c9c>
  40d0b0:	ldrb	w0, [x19, #64]
  40d0b4:	cbz	w0, 40d0cc <ferror@plt+0xa2fc>
  40d0b8:	ldr	w0, [x20, #56]
  40d0bc:	cmp	w0, #0x6
  40d0c0:	b.ne	40d0cc <ferror@plt+0xa2fc>  // b.any
  40d0c4:	mov	w0, #0x4                   	// #4
  40d0c8:	str	w0, [x20, #56]
  40d0cc:	ldr	w0, [x20, #60]
  40d0d0:	cbnz	w0, 40d198 <ferror@plt+0xa3c8>
  40d0d4:	ldr	w0, [x20, #56]
  40d0d8:	cmp	w0, #0x8
  40d0dc:	b.eq	40d0ec <ferror@plt+0xa31c>  // b.none
  40d0e0:	mov	x0, x19
  40d0e4:	mov	w1, #0x0                   	// #0
  40d0e8:	bl	40ce04 <ferror@plt+0xa034>
  40d0ec:	ldr	w0, [x19, #216]
  40d0f0:	add	w0, w0, #0x1
  40d0f4:	str	w0, [x19, #216]
  40d0f8:	ldr	w0, [x20, #56]
  40d0fc:	cmp	w0, #0x3
  40d100:	b.eq	40d10c <ferror@plt+0xa33c>  // b.none
  40d104:	cmp	w0, #0xd
  40d108:	b.ne	40d270 <ferror@plt+0xa4a0>  // b.any
  40d10c:	ldr	w0, [x19, #24]
  40d110:	cmp	w0, #0x0
  40d114:	b.gt	40d124 <ferror@plt+0xa354>
  40d118:	ldr	w0, [x19, #28]
  40d11c:	cmp	w0, #0x0
  40d120:	b.le	40d25c <ferror@plt+0xa48c>
  40d124:	ldrb	w0, [x19, #120]
  40d128:	cbnz	w0, 40d25c <ferror@plt+0xa48c>
  40d12c:	mov	w1, #0x0                   	// #0
  40d130:	mov	x0, x20
  40d134:	bl	413074 <ferror@plt+0x102a4>
  40d138:	add	x8, sp, #0x70
  40d13c:	bl	417064 <ferror@plt+0x14294>
  40d140:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  40d144:	ldr	w3, [sp, #120]
  40d148:	ldr	x2, [sp, #112]
  40d14c:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40d150:	ldr	x0, [x0, #1440]
  40d154:	add	x1, x1, #0x615
  40d158:	bl	40cc8c <ferror@plt+0x9ebc>
  40d15c:	mov	w0, #0x4                   	// #4
  40d160:	bl	402730 <exit@plt>
  40d164:	cmp	w0, #0x2
  40d168:	b.gt	40d174 <ferror@plt+0xa3a4>
  40d16c:	ldr	x0, [x19]
  40d170:	bl	413a6c <ferror@plt+0x10c9c>
  40d174:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  40d178:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40d17c:	add	x1, x1, #0x5d6
  40d180:	ldr	x0, [x0, #1440]
  40d184:	bl	40cc8c <ferror@plt+0x9ebc>
  40d188:	mov	x0, x19
  40d18c:	mov	w1, #0x3                   	// #3
  40d190:	bl	40ce70 <ferror@plt+0xa0a0>
  40d194:	bl	402a50 <abort@plt>
  40d198:	ldr	w1, [x19, #124]
  40d19c:	cmp	w0, w1
  40d1a0:	b.eq	40d0d4 <ferror@plt+0xa304>  // b.none
  40d1a4:	ldp	x2, x1, [x19, #168]
  40d1a8:	blr	x2
  40d1ac:	cbz	w0, 40d018 <ferror@plt+0xa248>
  40d1b0:	ldr	w0, [x19, #88]
  40d1b4:	cmp	w0, #0x0
  40d1b8:	b.le	40d244 <ferror@plt+0xa474>
  40d1bc:	mov	x0, x20
  40d1c0:	mov	w1, #0x0                   	// #0
  40d1c4:	bl	413074 <ferror@plt+0x102a4>
  40d1c8:	ldr	w22, [x19, #88]
  40d1cc:	mov	w23, w0
  40d1d0:	mov	w25, #0xc                   	// #12
  40d1d4:	sub	w22, w22, #0x1
  40d1d8:	adrp	x26, 495000 <_obstack_memory_used@@Base+0x505fc>
  40d1dc:	tbnz	w22, #31, 40d244 <ferror@plt+0xa474>
  40d1e0:	smull	x24, w22, w25
  40d1e4:	mov	w2, w23
  40d1e8:	ldr	x0, [x19, #80]
  40d1ec:	ldr	w1, [x0, x24]
  40d1f0:	ldr	x0, [x26, #2432]
  40d1f4:	bl	42c15c <ferror@plt+0x2938c>
  40d1f8:	tbnz	w0, #31, 40d23c <ferror@plt+0xa46c>
  40d1fc:	ldr	x1, [x19, #80]
  40d200:	add	x1, x1, x24
  40d204:	ldp	w0, w2, [x1, #4]
  40d208:	cmp	w2, #0xf
  40d20c:	b.eq	40d238 <ferror@plt+0xa468>  // b.none
  40d210:	cbz	w0, 40d220 <ferror@plt+0xa450>
  40d214:	ldr	w1, [x20, #60]
  40d218:	cmp	w1, w0
  40d21c:	b.ne	40d23c <ferror@plt+0xa46c>  // b.any
  40d220:	cbz	w2, 40d244 <ferror@plt+0xa474>
  40d224:	str	w2, [x20, #56]
  40d228:	ldr	w0, [x20, #56]
  40d22c:	cmp	w0, #0x1
  40d230:	b.ne	40d0d4 <ferror@plt+0xa304>  // b.any
  40d234:	b	40d018 <ferror@plt+0xa248>
  40d238:	mov	w22, w0
  40d23c:	sub	w22, w22, #0x1
  40d240:	b	40d1dc <ferror@plt+0xa40c>
  40d244:	ldrsw	x1, [x20, #60]
  40d248:	ldr	x0, [x19, #72]
  40d24c:	ldr	w0, [x0, x1, lsl #2]
  40d250:	cbz	w0, 40d228 <ferror@plt+0xa458>
  40d254:	str	w0, [x20, #56]
  40d258:	b	40d228 <ferror@plt+0xa458>
  40d25c:	ldr	x3, [x19, #160]
  40d260:	cbz	x3, 40d270 <ferror@plt+0xa4a0>
  40d264:	ldp	x1, x2, [x20]
  40d268:	mov	x0, x19
  40d26c:	blr	x3
  40d270:	ldr	w0, [x20, #56]
  40d274:	cmp	w0, #0x4
  40d278:	b.ne	40d3b8 <ferror@plt+0xa5e8>  // b.any
  40d27c:	cmp	w21, #0x6
  40d280:	b.ne	40d3b8 <ferror@plt+0xa5e8>  // b.any
  40d284:	ldr	w0, [x19, #56]
  40d288:	add	w0, w0, #0x1
  40d28c:	str	w0, [x19, #56]
  40d290:	ldr	w0, [x19, #244]
  40d294:	cbnz	w0, 40d2a8 <ferror@plt+0xa4d8>
  40d298:	ldr	x1, [x19, #248]
  40d29c:	cbz	x1, 40d2a8 <ferror@plt+0xa4d8>
  40d2a0:	mov	x0, x19
  40d2a4:	blr	x1
  40d2a8:	ldr	w0, [x19, #244]
  40d2ac:	mov	x1, x20
  40d2b0:	add	w0, w0, #0x1
  40d2b4:	str	w0, [x19, #244]
  40d2b8:	add	x0, x20, #0x30
  40d2bc:	str	x0, [x20, #24]
  40d2c0:	str	xzr, [x20, #48]
  40d2c4:	ldr	x0, [x19]
  40d2c8:	bl	413b7c <ferror@plt+0x10dac>
  40d2cc:	ldr	x2, [x19, #136]
  40d2d0:	mov	x1, x20
  40d2d4:	mov	x0, x19
  40d2d8:	blr	x2
  40d2dc:	ldr	x0, [x19]
  40d2e0:	bl	41396c <ferror@plt+0x10b9c>
  40d2e4:	ldrb	w0, [x19, #119]
  40d2e8:	cbz	w0, 40d378 <ferror@plt+0xa5a8>
  40d2ec:	ldp	w3, w1, [x20, #56]
  40d2f0:	mov	w2, w21
  40d2f4:	ldr	x4, [x19, #184]
  40d2f8:	mov	x0, x19
  40d2fc:	blr	x4
  40d300:	mov	x23, x0
  40d304:	cbz	x0, 40d378 <ferror@plt+0xa5a8>
  40d308:	ldr	x22, [x19]
  40d30c:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40d310:	add	x1, x1, #0x645
  40d314:	mov	x0, x22
  40d318:	bl	413938 <ferror@plt+0x10b68>
  40d31c:	ldrsw	x1, [x20, #56]
  40d320:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40d324:	add	x0, x0, #0x878
  40d328:	add	x0, x0, #0x20
  40d32c:	ldr	x1, [x0, x1, lsl #3]
  40d330:	ldrb	w0, [x22, #67]
  40d334:	bl	40eb1c <ferror@plt+0xbd4c>
  40d338:	mov	x1, x0
  40d33c:	mov	x0, x22
  40d340:	bl	413938 <ferror@plt+0x10b68>
  40d344:	mov	x1, x23
  40d348:	mov	x0, x22
  40d34c:	bl	413938 <ferror@plt+0x10b68>
  40d350:	ldrb	w0, [x22, #67]
  40d354:	bl	40ee38 <ferror@plt+0xc068>
  40d358:	mov	x1, x0
  40d35c:	mov	x0, x22
  40d360:	bl	413938 <ferror@plt+0x10b68>
  40d364:	mov	w1, #0x5d                  	// #93
  40d368:	mov	x0, x22
  40d36c:	bl	41358c <ferror@plt+0x107bc>
  40d370:	mov	x0, x23
  40d374:	bl	402b30 <free@plt>
  40d378:	ldr	x3, [x19, #152]
  40d37c:	mov	x0, x19
  40d380:	mov	w2, w21
  40d384:	mov	x1, x20
  40d388:	blr	x3
  40d38c:	ldrb	w0, [x19, #229]
  40d390:	cbz	w0, 40d494 <ferror@plt+0xa6c4>
  40d394:	ldr	x22, [x19]
  40d398:	ldr	x25, [x20, #40]
  40d39c:	cbnz	x22, 40d3cc <ferror@plt+0xa5fc>
  40d3a0:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40d3a4:	add	x2, x2, #0x648
  40d3a8:	mov	w1, #0x322                 	// #802
  40d3ac:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40d3b0:	add	x0, x0, #0x5bf
  40d3b4:	bl	402de0 <ferror@plt+0x10>
  40d3b8:	add	x0, x19, w0, sxtw #2
  40d3bc:	ldr	w1, [x0, #8]
  40d3c0:	add	w1, w1, #0x1
  40d3c4:	str	w1, [x0, #8]
  40d3c8:	b	40d290 <ferror@plt+0xa4c0>
  40d3cc:	mov	w21, #0x0                   	// #0
  40d3d0:	cbz	x25, 40d468 <ferror@plt+0xa698>
  40d3d4:	adrp	x24, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40d3d8:	add	x26, x25, #0x78
  40d3dc:	add	x24, x24, #0x65f
  40d3e0:	ldr	w0, [x25, #120]
  40d3e4:	cmp	w0, w21
  40d3e8:	b.ls	40d48c <ferror@plt+0xa6bc>  // b.plast
  40d3ec:	sxtw	x0, w21
  40d3f0:	cmp	w21, #0x1
  40d3f4:	b.gt	40d478 <ferror@plt+0xa6a8>
  40d3f8:	add	x0, x0, #0x1
  40d3fc:	add	x0, x26, x0, lsl #3
  40d400:	ldr	x23, [x0]
  40d404:	add	x8, sp, #0x50
  40d408:	add	w21, w21, #0x1
  40d40c:	ldr	w0, [x23]
  40d410:	bl	417064 <ferror@plt+0x14294>
  40d414:	mov	x1, x24
  40d418:	mov	x0, x22
  40d41c:	bl	413938 <ferror@plt+0x10b68>
  40d420:	ldr	x1, [sp, #80]
  40d424:	mov	x0, x22
  40d428:	bl	40e188 <ferror@plt+0xb3b8>
  40d42c:	ldr	w0, [x23, #4]
  40d430:	add	x8, sp, #0x70
  40d434:	bl	417064 <ferror@plt+0x14294>
  40d438:	ldp	w2, w3, [sp, #88]
  40d43c:	mov	x0, x22
  40d440:	ldp	w4, w5, [sp, #120]
  40d444:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40d448:	add	x1, x1, #0x667
  40d44c:	bl	414f80 <ferror@plt+0x121b0>
  40d450:	ldr	x1, [x23, #8]
  40d454:	mov	x0, x22
  40d458:	bl	40e188 <ferror@plt+0xb3b8>
  40d45c:	mov	x0, x22
  40d460:	bl	413530 <ferror@plt+0x10760>
  40d464:	b	40d3e0 <ferror@plt+0xa610>
  40d468:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40d46c:	mov	w1, #0x323                 	// #803
  40d470:	add	x2, x2, #0x648
  40d474:	b	40d3ac <ferror@plt+0xa5dc>
  40d478:	mov	x0, #0xfffffffffffffff0    	// #-16
  40d47c:	add	x1, x0, w21, sxtw #3
  40d480:	ldr	x0, [x26, #32]
  40d484:	add	x0, x0, x1
  40d488:	b	40d400 <ferror@plt+0xa630>
  40d48c:	ldr	x0, [x19]
  40d490:	bl	4133a4 <ferror@plt+0x105d4>
  40d494:	ldr	w1, [x20, #56]
  40d498:	mov	x0, x19
  40d49c:	bl	40ce70 <ferror@plt+0xa0a0>
  40d4a0:	str	xzr, [x20, #48]
  40d4a4:	ldr	x0, [x19, #232]
  40d4a8:	cbz	x0, 40d4bc <ferror@plt+0xa6ec>
  40d4ac:	ldr	x1, [x20, #40]
  40d4b0:	ldrb	w2, [x1, #161]
  40d4b4:	cbnz	w2, 40d4bc <ferror@plt+0xa6ec>
  40d4b8:	bl	4125c4 <ferror@plt+0xf7f4>
  40d4bc:	ldr	w0, [x19, #216]
  40d4c0:	sub	w0, w0, #0x1
  40d4c4:	str	w0, [x19, #216]
  40d4c8:	mov	w0, #0x1                   	// #1
  40d4cc:	b	40d01c <ferror@plt+0xa24c>
  40d4d0:	stp	x29, x30, [sp, #-112]!
  40d4d4:	cmp	w4, #0xb
  40d4d8:	mov	x29, sp
  40d4dc:	stp	x19, x20, [sp, #16]
  40d4e0:	adrp	x20, 495000 <_obstack_memory_used@@Base+0x505fc>
  40d4e4:	str	x21, [sp, #32]
  40d4e8:	mov	w21, w1
  40d4ec:	mov	x1, x2
  40d4f0:	mov	x2, x3
  40d4f4:	b.ne	40d544 <ferror@plt+0xa774>  // b.any
  40d4f8:	ldr	x3, [x20, #960]
  40d4fc:	mov	w4, #0x6                   	// #6
  40d500:	ldrb	w3, [x3, #123]
  40d504:	cmp	w3, #0x0
  40d508:	mov	w3, #0x4                   	// #4
  40d50c:	csel	w4, w4, w3, ne  // ne = any
  40d510:	mov	x3, x0
  40d514:	add	x0, sp, #0x30
  40d518:	bl	40deb8 <ferror@plt+0xb0e8>
  40d51c:	ldr	x0, [x20, #960]
  40d520:	ldr	w0, [x0, #124]
  40d524:	str	w0, [sp, #108]
  40d528:	ldr	x0, [x20, #960]
  40d52c:	add	x1, sp, #0x30
  40d530:	bl	40cfcc <ferror@plt+0xa1fc>
  40d534:	ldp	x19, x20, [sp, #16]
  40d538:	ldr	x21, [sp, #32]
  40d53c:	ldp	x29, x30, [sp], #112
  40d540:	ret
  40d544:	mov	w19, w4
  40d548:	mov	x3, x0
  40d54c:	add	x0, sp, #0x30
  40d550:	bl	40deb8 <ferror@plt+0xb0e8>
  40d554:	cmp	w19, #0x6
  40d558:	ccmp	w19, #0xa, #0x4, ne  // ne = any
  40d55c:	b.ne	40d528 <ferror@plt+0xa758>  // b.any
  40d560:	str	w21, [sp, #108]
  40d564:	b	40d528 <ferror@plt+0xa758>
  40d568:	stp	x29, x30, [sp, #-416]!
  40d56c:	mov	w8, w1
  40d570:	mov	x29, sp
  40d574:	stp	x19, x20, [sp, #16]
  40d578:	mov	w19, w2
  40d57c:	mov	x20, x3
  40d580:	str	x21, [sp, #32]
  40d584:	mov	w21, w0
  40d588:	str	q0, [sp, #256]
  40d58c:	str	q1, [sp, #272]
  40d590:	str	q2, [sp, #288]
  40d594:	str	q3, [sp, #304]
  40d598:	str	q4, [sp, #320]
  40d59c:	str	q5, [sp, #336]
  40d5a0:	str	q6, [sp, #352]
  40d5a4:	str	q7, [sp, #368]
  40d5a8:	stp	x4, x5, [sp, #384]
  40d5ac:	stp	x6, x7, [sp, #400]
  40d5b0:	bl	40c35c <ferror@plt+0x958c>
  40d5b4:	add	x0, sp, #0x1a0
  40d5b8:	stp	x0, x0, [sp, #56]
  40d5bc:	add	x0, sp, #0x180
  40d5c0:	mov	w2, w8
  40d5c4:	str	x0, [sp, #72]
  40d5c8:	mov	w0, #0xffffffe0            	// #-32
  40d5cc:	str	w0, [sp, #80]
  40d5d0:	mov	w0, #0xffffff80            	// #-128
  40d5d4:	str	w0, [sp, #84]
  40d5d8:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  40d5dc:	mov	x3, #0x0                   	// #0
  40d5e0:	ldr	x1, [x0, #2432]
  40d5e4:	add	x0, sp, #0x58
  40d5e8:	bl	42cdec <ferror@plt+0x2a01c>
  40d5ec:	mov	w4, w21
  40d5f0:	add	x3, sp, #0x38
  40d5f4:	mov	x2, x20
  40d5f8:	mov	w1, w19
  40d5fc:	add	x0, sp, #0x58
  40d600:	bl	40d4d0 <ferror@plt+0xa700>
  40d604:	mov	w19, w0
  40d608:	add	x0, sp, #0x58
  40d60c:	bl	42cb80 <ferror@plt+0x29db0>
  40d610:	add	x0, sp, #0x30
  40d614:	bl	40cd34 <ferror@plt+0x9f64>
  40d618:	mov	w0, w19
  40d61c:	ldp	x19, x20, [sp, #16]
  40d620:	ldr	x21, [sp, #32]
  40d624:	ldp	x29, x30, [sp], #416
  40d628:	ret
  40d62c:	stp	x29, x30, [sp, #-240]!
  40d630:	mov	w10, w0
  40d634:	mov	x8, x1
  40d638:	mov	w9, w2
  40d63c:	mov	x2, x3
  40d640:	mov	x29, sp
  40d644:	str	x19, [sp, #16]
  40d648:	str	q0, [sp, #80]
  40d64c:	str	q1, [sp, #96]
  40d650:	str	q2, [sp, #112]
  40d654:	str	q3, [sp, #128]
  40d658:	str	q4, [sp, #144]
  40d65c:	str	q5, [sp, #160]
  40d660:	str	q6, [sp, #176]
  40d664:	str	q7, [sp, #192]
  40d668:	stp	x4, x5, [sp, #208]
  40d66c:	stp	x6, x7, [sp, #224]
  40d670:	bl	40c35c <ferror@plt+0x958c>
  40d674:	add	x0, sp, #0xf0
  40d678:	stp	x0, x0, [sp, #48]
  40d67c:	add	x0, sp, #0xd0
  40d680:	add	x3, sp, #0x30
  40d684:	mov	w4, w10
  40d688:	mov	w1, w9
  40d68c:	str	x0, [sp, #64]
  40d690:	mov	w0, #0xffffffe0            	// #-32
  40d694:	str	w0, [sp, #72]
  40d698:	mov	w0, #0xffffff80            	// #-128
  40d69c:	str	w0, [sp, #76]
  40d6a0:	mov	x0, x8
  40d6a4:	bl	40d4d0 <ferror@plt+0xa700>
  40d6a8:	mov	w19, w0
  40d6ac:	add	x0, sp, #0x28
  40d6b0:	bl	40cd34 <ferror@plt+0x9f64>
  40d6b4:	mov	w0, w19
  40d6b8:	ldr	x19, [sp, #16]
  40d6bc:	ldp	x29, x30, [sp], #240
  40d6c0:	ret
  40d6c4:	stp	x29, x30, [sp, #-224]!
  40d6c8:	mov	x29, sp
  40d6cc:	stp	x21, x22, [sp, #32]
  40d6d0:	mov	w22, w0
  40d6d4:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  40d6d8:	stp	x19, x20, [sp, #16]
  40d6dc:	mov	w19, w2
  40d6e0:	mov	w2, w1
  40d6e4:	ldr	x1, [x0, #2432]
  40d6e8:	mov	x21, x4
  40d6ec:	mov	x20, x3
  40d6f0:	add	x0, sp, #0x38
  40d6f4:	mov	x3, #0x0                   	// #0
  40d6f8:	bl	42cdec <ferror@plt+0x2a01c>
  40d6fc:	mov	w4, w22
  40d700:	mov	x3, x21
  40d704:	mov	x2, x20
  40d708:	mov	w1, w19
  40d70c:	add	x0, sp, #0x38
  40d710:	bl	40d4d0 <ferror@plt+0xa700>
  40d714:	mov	w19, w0
  40d718:	add	x0, sp, #0x38
  40d71c:	bl	42cb80 <ferror@plt+0x29db0>
  40d720:	mov	w0, w19
  40d724:	ldp	x19, x20, [sp, #16]
  40d728:	ldp	x21, x22, [sp, #32]
  40d72c:	ldp	x29, x30, [sp], #224
  40d730:	ret
  40d734:	stp	x29, x30, [sp, #-416]!
  40d738:	mov	w8, w0
  40d73c:	mov	x29, sp
  40d740:	str	x19, [sp, #16]
  40d744:	mov	x19, x1
  40d748:	str	q0, [sp, #240]
  40d74c:	str	q1, [sp, #256]
  40d750:	str	q2, [sp, #272]
  40d754:	str	q3, [sp, #288]
  40d758:	str	q4, [sp, #304]
  40d75c:	str	q5, [sp, #320]
  40d760:	str	q6, [sp, #336]
  40d764:	str	q7, [sp, #352]
  40d768:	stp	x2, x3, [sp, #368]
  40d76c:	stp	x4, x5, [sp, #384]
  40d770:	stp	x6, x7, [sp, #400]
  40d774:	bl	40c35c <ferror@plt+0x958c>
  40d778:	add	x0, sp, #0x1a0
  40d77c:	stp	x0, x0, [sp, #40]
  40d780:	add	x0, sp, #0x170
  40d784:	mov	w2, w8
  40d788:	str	x0, [sp, #56]
  40d78c:	mov	w0, #0xffffffd0            	// #-48
  40d790:	str	w0, [sp, #64]
  40d794:	mov	w0, #0xffffff80            	// #-128
  40d798:	str	w0, [sp, #68]
  40d79c:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  40d7a0:	mov	x3, #0x0                   	// #0
  40d7a4:	ldr	x1, [x0, #2432]
  40d7a8:	add	x0, sp, #0x48
  40d7ac:	bl	42cdec <ferror@plt+0x2a01c>
  40d7b0:	add	x3, sp, #0x28
  40d7b4:	mov	x2, x19
  40d7b8:	mov	w4, #0x8                   	// #8
  40d7bc:	mov	w1, #0xffffffff            	// #-1
  40d7c0:	add	x0, sp, #0x48
  40d7c4:	bl	40d4d0 <ferror@plt+0xa700>
  40d7c8:	add	x0, sp, #0x48
  40d7cc:	bl	42cb80 <ferror@plt+0x29db0>
  40d7d0:	add	x0, sp, #0x20
  40d7d4:	bl	40cd34 <ferror@plt+0x9f64>
  40d7d8:	ldr	x19, [sp, #16]
  40d7dc:	ldp	x29, x30, [sp], #416
  40d7e0:	ret
  40d7e4:	stp	x29, x30, [sp, #-416]!
  40d7e8:	mov	x29, sp
  40d7ec:	stp	x19, x20, [sp, #16]
  40d7f0:	mov	w19, w0
  40d7f4:	mov	x20, x1
  40d7f8:	str	q0, [sp, #240]
  40d7fc:	str	q1, [sp, #256]
  40d800:	str	q2, [sp, #272]
  40d804:	str	q3, [sp, #288]
  40d808:	str	q4, [sp, #304]
  40d80c:	str	q5, [sp, #320]
  40d810:	str	q6, [sp, #336]
  40d814:	str	q7, [sp, #352]
  40d818:	stp	x2, x3, [sp, #368]
  40d81c:	stp	x4, x5, [sp, #384]
  40d820:	stp	x6, x7, [sp, #400]
  40d824:	bl	40c35c <ferror@plt+0x958c>
  40d828:	add	x0, sp, #0x1a0
  40d82c:	stp	x0, x0, [sp, #40]
  40d830:	add	x0, sp, #0x170
  40d834:	mov	x3, #0x0                   	// #0
  40d838:	str	x0, [sp, #56]
  40d83c:	mov	w0, #0xffffffd0            	// #-48
  40d840:	str	w0, [sp, #64]
  40d844:	mov	w0, #0xffffff80            	// #-128
  40d848:	str	w0, [sp, #68]
  40d84c:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  40d850:	ldr	w2, [x0, #2456]
  40d854:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  40d858:	ldr	x1, [x0, #2432]
  40d85c:	add	x0, sp, #0x48
  40d860:	bl	42cdec <ferror@plt+0x2a01c>
  40d864:	add	x3, sp, #0x28
  40d868:	mov	x2, x20
  40d86c:	mov	w1, w19
  40d870:	mov	w4, #0x6                   	// #6
  40d874:	add	x0, sp, #0x48
  40d878:	bl	40d4d0 <ferror@plt+0xa700>
  40d87c:	mov	w19, w0
  40d880:	add	x0, sp, #0x48
  40d884:	bl	42cb80 <ferror@plt+0x29db0>
  40d888:	add	x0, sp, #0x20
  40d88c:	bl	40cd34 <ferror@plt+0x9f64>
  40d890:	mov	w0, w19
  40d894:	ldp	x19, x20, [sp, #16]
  40d898:	ldp	x29, x30, [sp], #416
  40d89c:	ret
  40d8a0:	stp	x29, x30, [sp, #-416]!
  40d8a4:	mov	w8, w0
  40d8a8:	mov	x29, sp
  40d8ac:	stp	x19, x20, [sp, #16]
  40d8b0:	mov	w19, w1
  40d8b4:	mov	x20, x2
  40d8b8:	str	q0, [sp, #240]
  40d8bc:	str	q1, [sp, #256]
  40d8c0:	str	q2, [sp, #272]
  40d8c4:	str	q3, [sp, #288]
  40d8c8:	str	q4, [sp, #304]
  40d8cc:	str	q5, [sp, #320]
  40d8d0:	str	q6, [sp, #336]
  40d8d4:	str	q7, [sp, #352]
  40d8d8:	stp	x3, x4, [sp, #376]
  40d8dc:	stp	x5, x6, [sp, #392]
  40d8e0:	str	x7, [sp, #408]
  40d8e4:	bl	40c35c <ferror@plt+0x958c>
  40d8e8:	add	x0, sp, #0x1a0
  40d8ec:	stp	x0, x0, [sp, #40]
  40d8f0:	add	x0, sp, #0x170
  40d8f4:	str	x0, [sp, #56]
  40d8f8:	mov	w0, #0xffffffd8            	// #-40
  40d8fc:	str	w0, [sp, #64]
  40d900:	mov	w0, #0xffffff80            	// #-128
  40d904:	str	w0, [sp, #68]
  40d908:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  40d90c:	mov	w2, w8
  40d910:	mov	x3, #0x0                   	// #0
  40d914:	ldr	x1, [x0, #2432]
  40d918:	add	x0, sp, #0x48
  40d91c:	bl	42cdec <ferror@plt+0x2a01c>
  40d920:	add	x3, sp, #0x28
  40d924:	mov	x2, x20
  40d928:	mov	w1, w19
  40d92c:	mov	w4, #0x6                   	// #6
  40d930:	add	x0, sp, #0x48
  40d934:	bl	40d4d0 <ferror@plt+0xa700>
  40d938:	mov	w19, w0
  40d93c:	add	x0, sp, #0x48
  40d940:	bl	42cb80 <ferror@plt+0x29db0>
  40d944:	add	x0, sp, #0x20
  40d948:	bl	40cd34 <ferror@plt+0x9f64>
  40d94c:	mov	w0, w19
  40d950:	ldp	x19, x20, [sp, #16]
  40d954:	ldp	x29, x30, [sp], #416
  40d958:	ret
  40d95c:	stp	x29, x30, [sp, #-416]!
  40d960:	mov	w8, w0
  40d964:	mov	x29, sp
  40d968:	stp	x19, x20, [sp, #16]
  40d96c:	mov	w19, w1
  40d970:	mov	x20, x2
  40d974:	str	q0, [sp, #240]
  40d978:	str	q1, [sp, #256]
  40d97c:	str	q2, [sp, #272]
  40d980:	str	q3, [sp, #288]
  40d984:	str	q4, [sp, #304]
  40d988:	str	q5, [sp, #320]
  40d98c:	str	q6, [sp, #336]
  40d990:	str	q7, [sp, #352]
  40d994:	stp	x3, x4, [sp, #376]
  40d998:	stp	x5, x6, [sp, #392]
  40d99c:	str	x7, [sp, #408]
  40d9a0:	bl	40c35c <ferror@plt+0x958c>
  40d9a4:	add	x0, sp, #0x1a0
  40d9a8:	stp	x0, x0, [sp, #40]
  40d9ac:	add	x0, sp, #0x170
  40d9b0:	str	x0, [sp, #56]
  40d9b4:	mov	w0, #0xffffffd8            	// #-40
  40d9b8:	str	w0, [sp, #64]
  40d9bc:	mov	w0, #0xffffff80            	// #-128
  40d9c0:	str	w0, [sp, #68]
  40d9c4:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  40d9c8:	mov	w2, w8
  40d9cc:	mov	x3, #0x0                   	// #0
  40d9d0:	ldr	x1, [x0, #2432]
  40d9d4:	add	x0, sp, #0x48
  40d9d8:	bl	42cdec <ferror@plt+0x2a01c>
  40d9dc:	add	x3, sp, #0x28
  40d9e0:	mov	x2, x20
  40d9e4:	mov	w1, w19
  40d9e8:	mov	w4, #0xa                   	// #10
  40d9ec:	add	x0, sp, #0x48
  40d9f0:	bl	40d4d0 <ferror@plt+0xa700>
  40d9f4:	mov	w19, w0
  40d9f8:	add	x0, sp, #0x48
  40d9fc:	bl	42cb80 <ferror@plt+0x29db0>
  40da00:	add	x0, sp, #0x20
  40da04:	bl	40cd34 <ferror@plt+0x9f64>
  40da08:	mov	w0, w19
  40da0c:	ldp	x19, x20, [sp, #16]
  40da10:	ldp	x29, x30, [sp], #416
  40da14:	ret
  40da18:	stp	x29, x30, [sp, #-416]!
  40da1c:	mov	w8, w0
  40da20:	mov	x29, sp
  40da24:	str	x19, [sp, #16]
  40da28:	mov	x19, x1
  40da2c:	str	q0, [sp, #240]
  40da30:	str	q1, [sp, #256]
  40da34:	str	q2, [sp, #272]
  40da38:	str	q3, [sp, #288]
  40da3c:	str	q4, [sp, #304]
  40da40:	str	q5, [sp, #320]
  40da44:	str	q6, [sp, #336]
  40da48:	str	q7, [sp, #352]
  40da4c:	stp	x2, x3, [sp, #368]
  40da50:	stp	x4, x5, [sp, #384]
  40da54:	stp	x6, x7, [sp, #400]
  40da58:	bl	40c35c <ferror@plt+0x958c>
  40da5c:	add	x0, sp, #0x1a0
  40da60:	stp	x0, x0, [sp, #40]
  40da64:	add	x0, sp, #0x170
  40da68:	mov	w2, w8
  40da6c:	str	x0, [sp, #56]
  40da70:	mov	w0, #0xffffffd0            	// #-48
  40da74:	str	w0, [sp, #64]
  40da78:	mov	w0, #0xffffff80            	// #-128
  40da7c:	str	w0, [sp, #68]
  40da80:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  40da84:	mov	x3, #0x0                   	// #0
  40da88:	ldr	x1, [x0, #2432]
  40da8c:	add	x0, sp, #0x48
  40da90:	bl	42cdec <ferror@plt+0x2a01c>
  40da94:	add	x3, sp, #0x28
  40da98:	mov	x2, x19
  40da9c:	mov	w4, #0xb                   	// #11
  40daa0:	mov	w1, #0xffffffff            	// #-1
  40daa4:	add	x0, sp, #0x48
  40daa8:	bl	40d4d0 <ferror@plt+0xa700>
  40daac:	mov	w19, w0
  40dab0:	add	x0, sp, #0x48
  40dab4:	bl	42cb80 <ferror@plt+0x29db0>
  40dab8:	add	x0, sp, #0x20
  40dabc:	bl	40cd34 <ferror@plt+0x9f64>
  40dac0:	mov	w0, w19
  40dac4:	ldr	x19, [sp, #16]
  40dac8:	ldp	x29, x30, [sp], #416
  40dacc:	ret
  40dad0:	stp	x29, x30, [sp, #-432]!
  40dad4:	mov	x29, sp
  40dad8:	str	x19, [sp, #16]
  40dadc:	mov	x19, x0
  40dae0:	str	q0, [sp, #240]
  40dae4:	str	q1, [sp, #256]
  40dae8:	str	q2, [sp, #272]
  40daec:	str	q3, [sp, #288]
  40daf0:	str	q4, [sp, #304]
  40daf4:	str	q5, [sp, #320]
  40daf8:	str	q6, [sp, #336]
  40dafc:	str	q7, [sp, #352]
  40db00:	stp	x1, x2, [sp, #376]
  40db04:	stp	x3, x4, [sp, #392]
  40db08:	stp	x5, x6, [sp, #408]
  40db0c:	str	x7, [sp, #424]
  40db10:	bl	40c35c <ferror@plt+0x958c>
  40db14:	add	x0, sp, #0x1b0
  40db18:	stp	x0, x0, [sp, #40]
  40db1c:	add	x0, sp, #0x170
  40db20:	str	x0, [sp, #56]
  40db24:	mov	w0, #0xffffffc8            	// #-56
  40db28:	str	w0, [sp, #64]
  40db2c:	mov	w0, #0xffffff80            	// #-128
  40db30:	str	w0, [sp, #68]
  40db34:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  40db38:	mov	x3, #0x0                   	// #0
  40db3c:	ldr	w2, [x0, #2456]
  40db40:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  40db44:	ldr	x1, [x0, #2432]
  40db48:	add	x0, sp, #0x48
  40db4c:	bl	42cdec <ferror@plt+0x2a01c>
  40db50:	add	x3, sp, #0x28
  40db54:	mov	x2, x19
  40db58:	mov	w4, #0x4                   	// #4
  40db5c:	mov	w1, #0xffffffff            	// #-1
  40db60:	add	x0, sp, #0x48
  40db64:	bl	40d4d0 <ferror@plt+0xa700>
  40db68:	add	x0, sp, #0x48
  40db6c:	bl	42cb80 <ferror@plt+0x29db0>
  40db70:	add	x0, sp, #0x20
  40db74:	bl	40cd34 <ferror@plt+0x9f64>
  40db78:	ldr	x19, [sp, #16]
  40db7c:	ldp	x29, x30, [sp], #432
  40db80:	ret
  40db84:	stp	x29, x30, [sp, #-416]!
  40db88:	mov	w8, w0
  40db8c:	mov	x29, sp
  40db90:	str	x19, [sp, #16]
  40db94:	mov	x19, x1
  40db98:	str	q0, [sp, #240]
  40db9c:	str	q1, [sp, #256]
  40dba0:	str	q2, [sp, #272]
  40dba4:	str	q3, [sp, #288]
  40dba8:	str	q4, [sp, #304]
  40dbac:	str	q5, [sp, #320]
  40dbb0:	str	q6, [sp, #336]
  40dbb4:	str	q7, [sp, #352]
  40dbb8:	stp	x2, x3, [sp, #368]
  40dbbc:	stp	x4, x5, [sp, #384]
  40dbc0:	stp	x6, x7, [sp, #400]
  40dbc4:	bl	40c35c <ferror@plt+0x958c>
  40dbc8:	add	x0, sp, #0x1a0
  40dbcc:	stp	x0, x0, [sp, #40]
  40dbd0:	add	x0, sp, #0x170
  40dbd4:	mov	w2, w8
  40dbd8:	str	x0, [sp, #56]
  40dbdc:	mov	w0, #0xffffffd0            	// #-48
  40dbe0:	str	w0, [sp, #64]
  40dbe4:	mov	w0, #0xffffff80            	// #-128
  40dbe8:	str	w0, [sp, #68]
  40dbec:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  40dbf0:	mov	x3, #0x0                   	// #0
  40dbf4:	ldr	x1, [x0, #2432]
  40dbf8:	add	x0, sp, #0x48
  40dbfc:	bl	42cdec <ferror@plt+0x2a01c>
  40dc00:	add	x3, sp, #0x28
  40dc04:	mov	x2, x19
  40dc08:	mov	w4, #0x4                   	// #4
  40dc0c:	mov	w1, #0xffffffff            	// #-1
  40dc10:	add	x0, sp, #0x48
  40dc14:	bl	40d4d0 <ferror@plt+0xa700>
  40dc18:	add	x0, sp, #0x48
  40dc1c:	bl	42cb80 <ferror@plt+0x29db0>
  40dc20:	add	x0, sp, #0x20
  40dc24:	bl	40cd34 <ferror@plt+0x9f64>
  40dc28:	ldr	x19, [sp, #16]
  40dc2c:	ldp	x29, x30, [sp], #416
  40dc30:	ret
  40dc34:	stp	x29, x30, [sp, #-432]!
  40dc38:	mov	x29, sp
  40dc3c:	str	x19, [sp, #16]
  40dc40:	mov	x19, x0
  40dc44:	str	q0, [sp, #240]
  40dc48:	str	q1, [sp, #256]
  40dc4c:	str	q2, [sp, #272]
  40dc50:	str	q3, [sp, #288]
  40dc54:	str	q4, [sp, #304]
  40dc58:	str	q5, [sp, #320]
  40dc5c:	str	q6, [sp, #336]
  40dc60:	str	q7, [sp, #352]
  40dc64:	stp	x1, x2, [sp, #376]
  40dc68:	stp	x3, x4, [sp, #392]
  40dc6c:	stp	x5, x6, [sp, #408]
  40dc70:	str	x7, [sp, #424]
  40dc74:	bl	40c35c <ferror@plt+0x958c>
  40dc78:	add	x0, sp, #0x1b0
  40dc7c:	stp	x0, x0, [sp, #40]
  40dc80:	add	x0, sp, #0x170
  40dc84:	str	x0, [sp, #56]
  40dc88:	mov	w0, #0xffffffc8            	// #-56
  40dc8c:	str	w0, [sp, #64]
  40dc90:	mov	w0, #0xffffff80            	// #-128
  40dc94:	str	w0, [sp, #68]
  40dc98:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  40dc9c:	mov	x3, #0x0                   	// #0
  40dca0:	ldr	w2, [x0, #2456]
  40dca4:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  40dca8:	ldr	x1, [x0, #2432]
  40dcac:	add	x0, sp, #0x48
  40dcb0:	bl	42cdec <ferror@plt+0x2a01c>
  40dcb4:	add	x3, sp, #0x28
  40dcb8:	mov	x2, x19
  40dcbc:	mov	w4, #0x5                   	// #5
  40dcc0:	mov	w1, #0xffffffff            	// #-1
  40dcc4:	add	x0, sp, #0x48
  40dcc8:	bl	40d4d0 <ferror@plt+0xa700>
  40dccc:	add	x0, sp, #0x48
  40dcd0:	bl	42cb80 <ferror@plt+0x29db0>
  40dcd4:	add	x0, sp, #0x20
  40dcd8:	bl	40cd34 <ferror@plt+0x9f64>
  40dcdc:	ldr	x19, [sp, #16]
  40dce0:	ldp	x29, x30, [sp], #432
  40dce4:	ret
  40dce8:	stp	x29, x30, [sp, #-416]!
  40dcec:	mov	w8, w0
  40dcf0:	mov	x29, sp
  40dcf4:	str	x19, [sp, #16]
  40dcf8:	mov	x19, x1
  40dcfc:	str	q0, [sp, #240]
  40dd00:	str	q1, [sp, #256]
  40dd04:	str	q2, [sp, #272]
  40dd08:	str	q3, [sp, #288]
  40dd0c:	str	q4, [sp, #304]
  40dd10:	str	q5, [sp, #320]
  40dd14:	str	q6, [sp, #336]
  40dd18:	str	q7, [sp, #352]
  40dd1c:	stp	x2, x3, [sp, #368]
  40dd20:	stp	x4, x5, [sp, #384]
  40dd24:	stp	x6, x7, [sp, #400]
  40dd28:	bl	40c35c <ferror@plt+0x958c>
  40dd2c:	add	x0, sp, #0x1a0
  40dd30:	stp	x0, x0, [sp, #40]
  40dd34:	add	x0, sp, #0x170
  40dd38:	mov	w2, w8
  40dd3c:	str	x0, [sp, #56]
  40dd40:	mov	w0, #0xffffffd0            	// #-48
  40dd44:	str	w0, [sp, #64]
  40dd48:	mov	w0, #0xffffff80            	// #-128
  40dd4c:	str	w0, [sp, #68]
  40dd50:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  40dd54:	mov	x3, #0x0                   	// #0
  40dd58:	ldr	x1, [x0, #2432]
  40dd5c:	add	x0, sp, #0x48
  40dd60:	bl	42cdec <ferror@plt+0x2a01c>
  40dd64:	add	x3, sp, #0x28
  40dd68:	mov	x2, x19
  40dd6c:	mov	w4, #0x5                   	// #5
  40dd70:	mov	w1, #0xffffffff            	// #-1
  40dd74:	add	x0, sp, #0x48
  40dd78:	bl	40d4d0 <ferror@plt+0xa700>
  40dd7c:	add	x0, sp, #0x48
  40dd80:	bl	42cb80 <ferror@plt+0x29db0>
  40dd84:	add	x0, sp, #0x20
  40dd88:	bl	40cd34 <ferror@plt+0x9f64>
  40dd8c:	ldr	x19, [sp, #16]
  40dd90:	ldp	x29, x30, [sp], #416
  40dd94:	ret
  40dd98:	stp	x29, x30, [sp, #-432]!
  40dd9c:	mov	x29, sp
  40dda0:	str	x19, [sp, #16]
  40dda4:	mov	x19, x0
  40dda8:	str	q0, [sp, #240]
  40ddac:	str	q1, [sp, #256]
  40ddb0:	str	q2, [sp, #272]
  40ddb4:	str	q3, [sp, #288]
  40ddb8:	str	q4, [sp, #304]
  40ddbc:	str	q5, [sp, #320]
  40ddc0:	str	q6, [sp, #336]
  40ddc4:	str	q7, [sp, #352]
  40ddc8:	stp	x1, x2, [sp, #376]
  40ddcc:	stp	x3, x4, [sp, #392]
  40ddd0:	stp	x5, x6, [sp, #408]
  40ddd4:	str	x7, [sp, #424]
  40ddd8:	bl	40c35c <ferror@plt+0x958c>
  40dddc:	add	x0, sp, #0x1b0
  40dde0:	stp	x0, x0, [sp, #40]
  40dde4:	add	x0, sp, #0x170
  40dde8:	str	x0, [sp, #56]
  40ddec:	mov	w0, #0xffffffc8            	// #-56
  40ddf0:	str	w0, [sp, #64]
  40ddf4:	mov	w0, #0xffffff80            	// #-128
  40ddf8:	str	w0, [sp, #68]
  40ddfc:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  40de00:	mov	x3, #0x0                   	// #0
  40de04:	ldr	w2, [x0, #2456]
  40de08:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  40de0c:	ldr	x1, [x0, #2432]
  40de10:	add	x0, sp, #0x48
  40de14:	bl	42cdec <ferror@plt+0x2a01c>
  40de18:	add	x3, sp, #0x28
  40de1c:	mov	w4, #0x3                   	// #3
  40de20:	mov	x2, x19
  40de24:	mov	w1, #0xffffffff            	// #-1
  40de28:	add	x0, sp, #0x48
  40de2c:	bl	40d4d0 <ferror@plt+0xa700>
  40de30:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40de34:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40de38:	add	x2, x2, #0x677
  40de3c:	add	x0, x0, #0x5bf
  40de40:	mov	w1, #0x607                 	// #1543
  40de44:	bl	402de0 <ferror@plt+0x10>
  40de48:	stp	x29, x30, [sp, #-64]!
  40de4c:	mov	x29, sp
  40de50:	stp	x19, x20, [sp, #16]
  40de54:	stp	x21, x22, [sp, #32]
  40de58:	str	x23, [sp, #48]
  40de5c:	cbnz	x3, 40de78 <ferror@plt+0xb0a8>
  40de60:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40de64:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40de68:	add	x2, x2, #0x696
  40de6c:	add	x0, x0, #0x5bf
  40de70:	mov	w1, #0x112                 	// #274
  40de74:	bl	402de0 <ferror@plt+0x10>
  40de78:	mov	x19, x0
  40de7c:	mov	x22, x1
  40de80:	mov	x23, x2
  40de84:	mov	x20, x3
  40de88:	mov	w21, w4
  40de8c:	bl	402cf0 <__errno_location@plt>
  40de90:	ldr	w0, [x0]
  40de94:	stp	x22, x23, [x19]
  40de98:	str	w0, [x19, #16]
  40de9c:	stp	x20, x20, [x19, #32]
  40dea0:	stp	w21, wzr, [x19, #56]
  40dea4:	ldp	x19, x20, [sp, #16]
  40dea8:	ldp	x21, x22, [sp, #32]
  40deac:	ldr	x23, [sp, #48]
  40deb0:	ldp	x29, x30, [sp], #64
  40deb4:	ret
  40deb8:	stp	x29, x30, [sp, #-48]!
  40debc:	mov	x29, sp
  40dec0:	stp	x19, x20, [sp, #16]
  40dec4:	stp	x21, x22, [sp, #32]
  40dec8:	cbnz	x3, 40dee4 <ferror@plt+0xb114>
  40decc:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40ded0:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40ded4:	add	x2, x2, #0x6b5
  40ded8:	add	x0, x0, #0x5bf
  40dedc:	mov	w1, #0x123                 	// #291
  40dee0:	bl	402de0 <ferror@plt+0x10>
  40dee4:	mov	x20, x0
  40dee8:	mov	x21, x2
  40deec:	mov	x19, x3
  40def0:	mov	w22, w4
  40def4:	mov	x0, x1
  40def8:	bl	402d80 <gettext@plt>
  40defc:	mov	w4, w22
  40df00:	mov	x3, x19
  40df04:	mov	x2, x21
  40df08:	mov	x1, x0
  40df0c:	mov	x0, x20
  40df10:	ldp	x19, x20, [sp, #16]
  40df14:	ldp	x21, x22, [sp, #32]
  40df18:	ldp	x29, x30, [sp], #48
  40df1c:	b	40de48 <ferror@plt+0xb078>
  40df20:	stp	x29, x30, [sp, #-96]!
  40df24:	mov	x29, sp
  40df28:	stp	x19, x20, [sp, #16]
  40df2c:	stp	x21, x22, [sp, #32]
  40df30:	mov	x21, x0
  40df34:	ldr	w0, [x1, #56]
  40df38:	str	x23, [sp, #48]
  40df3c:	cmp	w0, #0xd
  40df40:	b.le	40df5c <ferror@plt+0xb18c>
  40df44:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40df48:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40df4c:	add	x2, x2, #0x6c9
  40df50:	add	x0, x0, #0x5bf
  40df54:	mov	w1, #0x16a                 	// #362
  40df58:	bl	402de0 <ferror@plt+0x10>
  40df5c:	adrp	x19, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40df60:	add	x19, x19, #0x878
  40df64:	mov	x20, x1
  40df68:	add	x1, x19, #0xc0
  40df6c:	add	x19, x19, #0x20
  40df70:	ldr	x0, [x1, w0, sxtw #3]
  40df74:	bl	402d80 <gettext@plt>
  40df78:	mov	x22, x0
  40df7c:	ldrsw	x0, [x20, #56]
  40df80:	ldr	x1, [x19, x0, lsl #3]
  40df84:	cbz	x1, 40e008 <ferror@plt+0xb238>
  40df88:	ldr	x19, [x21]
  40df8c:	ldrb	w0, [x19, #67]
  40df90:	bl	40eb1c <ferror@plt+0xbd4c>
  40df94:	mov	x23, x0
  40df98:	ldrb	w0, [x19, #67]
  40df9c:	bl	40ee38 <ferror@plt+0xc068>
  40dfa0:	mov	x19, x0
  40dfa4:	ldr	x0, [x20, #40]
  40dfa8:	add	x8, sp, #0x40
  40dfac:	mov	w1, #0x0                   	// #0
  40dfb0:	bl	42cc94 <ferror@plt+0x29ec4>
  40dfb4:	ldp	w2, w3, [sp, #72]
  40dfb8:	mov	x0, x21
  40dfbc:	ldr	x1, [sp, #64]
  40dfc0:	bl	40c3ec <ferror@plt+0x961c>
  40dfc4:	mov	x1, x0
  40dfc8:	mov	x4, x19
  40dfcc:	mov	x3, x22
  40dfd0:	mov	x2, x23
  40dfd4:	mov	x20, x0
  40dfd8:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40dfdc:	add	x0, x0, #0x6e1
  40dfe0:	bl	40c374 <ferror@plt+0x95a4>
  40dfe4:	mov	x19, x0
  40dfe8:	mov	x0, x20
  40dfec:	bl	402b30 <free@plt>
  40dff0:	mov	x0, x19
  40dff4:	ldp	x19, x20, [sp, #16]
  40dff8:	ldp	x21, x22, [sp, #32]
  40dffc:	ldr	x23, [sp, #48]
  40e000:	ldp	x29, x30, [sp], #96
  40e004:	ret
  40e008:	adrp	x19, 45e000 <_obstack_memory_used@@Base+0x195fc>
  40e00c:	add	x19, x19, #0xaff
  40e010:	mov	x23, x19
  40e014:	b	40dfa4 <ferror@plt+0xb1d4>
  40e018:	stp	x29, x30, [sp, #-48]!
  40e01c:	mov	x29, sp
  40e020:	stp	x19, x20, [sp, #16]
  40e024:	mov	x19, x0
  40e028:	mov	x20, x1
  40e02c:	mov	x0, x20
  40e030:	mov	w1, #0x0                   	// #0
  40e034:	str	x21, [sp, #32]
  40e038:	bl	413074 <ferror@plt+0x102a4>
  40e03c:	mov	w1, w0
  40e040:	mov	x0, x19
  40e044:	bl	40c788 <ferror@plt+0x99b8>
  40e048:	ldr	x21, [x19]
  40e04c:	mov	x1, x20
  40e050:	mov	x0, x19
  40e054:	bl	40df20 <ferror@plt+0xb150>
  40e058:	mov	x1, x0
  40e05c:	mov	x0, x21
  40e060:	ldp	x19, x20, [sp, #16]
  40e064:	ldr	x21, [sp, #32]
  40e068:	ldp	x29, x30, [sp], #48
  40e06c:	b	413244 <ferror@plt+0x10474>
  40e070:	stp	x29, x30, [sp, #-496]!
  40e074:	mov	x29, sp
  40e078:	stp	x19, x20, [sp, #16]
  40e07c:	mov	x19, x0
  40e080:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  40e084:	mov	x20, x2
  40e088:	mov	w2, w1
  40e08c:	ldr	x1, [x0, #2432]
  40e090:	add	x0, sp, #0x98
  40e094:	str	x21, [sp, #32]
  40e098:	str	q0, [sp, #320]
  40e09c:	str	q1, [sp, #336]
  40e0a0:	str	q2, [sp, #352]
  40e0a4:	str	q3, [sp, #368]
  40e0a8:	str	q4, [sp, #384]
  40e0ac:	str	q5, [sp, #400]
  40e0b0:	str	q6, [sp, #416]
  40e0b4:	str	q7, [sp, #432]
  40e0b8:	stp	x3, x4, [sp, #456]
  40e0bc:	mov	x3, #0x0                   	// #0
  40e0c0:	stp	x5, x6, [sp, #472]
  40e0c4:	str	x7, [sp, #488]
  40e0c8:	bl	42cdec <ferror@plt+0x2a01c>
  40e0cc:	add	x0, sp, #0x1f0
  40e0d0:	stp	x0, x0, [sp, #56]
  40e0d4:	add	x0, sp, #0x1c0
  40e0d8:	str	x0, [sp, #72]
  40e0dc:	mov	w0, #0xffffffd8            	// #-40
  40e0e0:	str	w0, [sp, #80]
  40e0e4:	mov	w0, #0xffffff80            	// #-128
  40e0e8:	add	x3, sp, #0x98
  40e0ec:	add	x2, sp, #0x38
  40e0f0:	mov	x1, x20
  40e0f4:	mov	w4, #0x8                   	// #8
  40e0f8:	str	w0, [sp, #84]
  40e0fc:	add	x0, sp, #0x58
  40e100:	bl	40deb8 <ferror@plt+0xb0e8>
  40e104:	ldrb	w0, [x19, #220]
  40e108:	cbz	w0, 40e124 <ferror@plt+0xb354>
  40e10c:	add	x0, sp, #0x98
  40e110:	bl	42cb80 <ferror@plt+0x29db0>
  40e114:	ldp	x19, x20, [sp, #16]
  40e118:	ldr	x21, [sp, #32]
  40e11c:	ldp	x29, x30, [sp], #496
  40e120:	ret
  40e124:	ldr	x0, [x19]
  40e128:	bl	413280 <ferror@plt+0x104b0>
  40e12c:	mov	x20, x0
  40e130:	ldr	x21, [x19]
  40e134:	add	x1, sp, #0x58
  40e138:	mov	x0, x19
  40e13c:	bl	40df20 <ferror@plt+0xb150>
  40e140:	mov	x1, x0
  40e144:	mov	x0, x21
  40e148:	bl	413244 <ferror@plt+0x10474>
  40e14c:	ldr	x0, [x19]
  40e150:	add	x1, sp, #0x58
  40e154:	bl	413b7c <ferror@plt+0x10dac>
  40e158:	ldr	x0, [x19]
  40e15c:	bl	41396c <ferror@plt+0x10b9c>
  40e160:	ldr	x0, [x19]
  40e164:	bl	413290 <ferror@plt+0x104c0>
  40e168:	ldr	x0, [x19]
  40e16c:	mov	x1, x20
  40e170:	bl	413244 <ferror@plt+0x10474>
  40e174:	add	x1, sp, #0x98
  40e178:	mov	x0, x19
  40e17c:	mov	w2, #0x8                   	// #8
  40e180:	bl	410340 <ferror@plt+0xd570>
  40e184:	b	40e10c <ferror@plt+0xb33c>
  40e188:	stp	x29, x30, [sp, #-64]!
  40e18c:	mov	x29, sp
  40e190:	stp	x19, x20, [sp, #16]
  40e194:	stp	x21, x22, [sp, #32]
  40e198:	str	x23, [sp, #48]
  40e19c:	cbnz	x0, 40e1b8 <ferror@plt+0xb3e8>
  40e1a0:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40e1a4:	add	x2, x2, #0x6eb
  40e1a8:	mov	w1, #0x2f5                 	// #757
  40e1ac:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40e1b0:	add	x0, x0, #0x5bf
  40e1b4:	bl	402de0 <ferror@plt+0x10>
  40e1b8:	mov	x20, x1
  40e1bc:	cbnz	x1, 40e1d0 <ferror@plt+0xb400>
  40e1c0:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40e1c4:	mov	w1, #0x2f6                 	// #758
  40e1c8:	add	x2, x2, #0x6eb
  40e1cc:	b	40e1ac <ferror@plt+0xb3dc>
  40e1d0:	adrp	x21, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40e1d4:	adrp	x22, 46c000 <_obstack_memory_used@@Base+0x275fc>
  40e1d8:	add	x21, x21, #0x38
  40e1dc:	add	x22, x22, #0xb08
  40e1e0:	adrp	x23, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40e1e4:	mov	x19, x0
  40e1e8:	mov	w1, #0x22                  	// #34
  40e1ec:	bl	41358c <ferror@plt+0x107bc>
  40e1f0:	ldrb	w1, [x20]
  40e1f4:	cbz	w1, 40e284 <ferror@plt+0xb4b4>
  40e1f8:	cmp	w1, #0x22
  40e1fc:	b.eq	40e260 <ferror@plt+0xb490>  // b.none
  40e200:	b.hi	40e228 <ferror@plt+0xb458>  // b.pmore
  40e204:	cmp	w1, #0x9
  40e208:	b.eq	40e248 <ferror@plt+0xb478>  // b.none
  40e20c:	cmp	w1, #0xa
  40e210:	b.eq	40e254 <ferror@plt+0xb484>  // b.none
  40e214:	ldrh	w0, [x22, w1, sxtw #1]
  40e218:	tbz	w0, #4, 40e268 <ferror@plt+0xb498>
  40e21c:	mov	x0, x19
  40e220:	bl	41358c <ferror@plt+0x107bc>
  40e224:	b	40e240 <ferror@plt+0xb470>
  40e228:	cmp	w1, #0x5c
  40e22c:	b.ne	40e214 <ferror@plt+0xb444>  // b.any
  40e230:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40e234:	add	x1, x1, #0x700
  40e238:	mov	x0, x19
  40e23c:	bl	413938 <ferror@plt+0x10b68>
  40e240:	add	x20, x20, #0x1
  40e244:	b	40e1f0 <ferror@plt+0xb420>
  40e248:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40e24c:	add	x1, x1, #0x47
  40e250:	b	40e238 <ferror@plt+0xb468>
  40e254:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40e258:	add	x1, x1, #0x3b
  40e25c:	b	40e238 <ferror@plt+0xb468>
  40e260:	mov	x1, x21
  40e264:	b	40e238 <ferror@plt+0xb468>
  40e268:	and	w4, w1, #0x7
  40e26c:	ubfx	x3, x1, #3, #3
  40e270:	lsr	w2, w1, #6
  40e274:	mov	x0, x19
  40e278:	add	x1, x23, #0x703
  40e27c:	bl	414f80 <ferror@plt+0x121b0>
  40e280:	b	40e240 <ferror@plt+0xb470>
  40e284:	mov	x0, x19
  40e288:	mov	w1, #0x22                  	// #34
  40e28c:	ldp	x19, x20, [sp, #16]
  40e290:	ldp	x21, x22, [sp, #32]
  40e294:	ldr	x23, [sp, #48]
  40e298:	ldp	x29, x30, [sp], #64
  40e29c:	b	41358c <ferror@plt+0x107bc>
  40e2a0:	cmp	w0, #0x0
  40e2a4:	b.ge	40e2c8 <ferror@plt+0xb4f8>  // b.tcont
  40e2a8:	stp	x29, x30, [sp, #-16]!
  40e2ac:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40e2b0:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40e2b4:	mov	x29, sp
  40e2b8:	add	x2, x2, #0x70b
  40e2bc:	add	x0, x0, #0x5bf
  40e2c0:	mov	w1, #0x415                 	// #1045
  40e2c4:	bl	402de0 <ferror@plt+0x10>
  40e2c8:	b.eq	40e2e8 <ferror@plt+0xb518>  // b.none
  40e2cc:	mov	w1, w0
  40e2d0:	mov	w2, #0xa                   	// #10
  40e2d4:	mov	w0, #0x0                   	// #0
  40e2d8:	udiv	w1, w1, w2
  40e2dc:	add	w0, w0, #0x1
  40e2e0:	cbnz	w1, 40e2d8 <ferror@plt+0xb508>
  40e2e4:	ret
  40e2e8:	mov	w0, #0x1                   	// #1
  40e2ec:	ret
  40e2f0:	stp	x29, x30, [sp, #-240]!
  40e2f4:	mov	x29, sp
  40e2f8:	str	q0, [sp, #64]
  40e2fc:	str	q1, [sp, #80]
  40e300:	str	q2, [sp, #96]
  40e304:	str	q3, [sp, #112]
  40e308:	str	q4, [sp, #128]
  40e30c:	str	q5, [sp, #144]
  40e310:	str	q6, [sp, #160]
  40e314:	str	q7, [sp, #176]
  40e318:	stp	x2, x3, [sp, #192]
  40e31c:	stp	x4, x5, [sp, #208]
  40e320:	stp	x6, x7, [sp, #224]
  40e324:	cbnz	x0, 40e340 <ferror@plt+0xb570>
  40e328:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40e32c:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40e330:	add	x2, x2, #0x716
  40e334:	add	x0, x0, #0x5bf
  40e338:	mov	w1, #0x4dc                 	// #1244
  40e33c:	bl	402de0 <ferror@plt+0x10>
  40e340:	mov	x8, x0
  40e344:	mov	x9, x1
  40e348:	bl	40c35c <ferror@plt+0x958c>
  40e34c:	mov	x2, x9
  40e350:	add	x0, sp, #0xf0
  40e354:	stp	x0, x0, [sp, #32]
  40e358:	add	x0, sp, #0xc0
  40e35c:	add	x3, sp, #0x20
  40e360:	str	x0, [sp, #48]
  40e364:	mov	w0, #0xffffffd0            	// #-48
  40e368:	mov	w4, #0x8                   	// #8
  40e36c:	mov	w1, #0xffffffff            	// #-1
  40e370:	str	w0, [sp, #56]
  40e374:	mov	w0, #0xffffff80            	// #-128
  40e378:	str	w0, [sp, #60]
  40e37c:	mov	x0, x8
  40e380:	bl	40d4d0 <ferror@plt+0xa700>
  40e384:	add	x0, sp, #0x18
  40e388:	bl	40cd34 <ferror@plt+0x9f64>
  40e38c:	ldp	x29, x30, [sp], #240
  40e390:	ret
  40e394:	stp	x29, x30, [sp, #-256]!
  40e398:	mov	x29, sp
  40e39c:	str	x19, [sp, #16]
  40e3a0:	str	q0, [sp, #80]
  40e3a4:	str	q1, [sp, #96]
  40e3a8:	str	q2, [sp, #112]
  40e3ac:	str	q3, [sp, #128]
  40e3b0:	str	q4, [sp, #144]
  40e3b4:	str	q5, [sp, #160]
  40e3b8:	str	q6, [sp, #176]
  40e3bc:	str	q7, [sp, #192]
  40e3c0:	stp	x3, x4, [sp, #216]
  40e3c4:	stp	x5, x6, [sp, #232]
  40e3c8:	str	x7, [sp, #248]
  40e3cc:	cbnz	x0, 40e3e8 <ferror@plt+0xb618>
  40e3d0:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40e3d4:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40e3d8:	add	x2, x2, #0x71d
  40e3dc:	add	x0, x0, #0x5bf
  40e3e0:	mov	w1, #0x518                 	// #1304
  40e3e4:	bl	402de0 <ferror@plt+0x10>
  40e3e8:	mov	x8, x0
  40e3ec:	mov	w9, w1
  40e3f0:	bl	40c35c <ferror@plt+0x958c>
  40e3f4:	mov	w1, w9
  40e3f8:	add	x0, sp, #0x100
  40e3fc:	stp	x0, x0, [sp, #48]
  40e400:	add	x0, sp, #0xd0
  40e404:	add	x3, sp, #0x30
  40e408:	str	x0, [sp, #64]
  40e40c:	mov	w0, #0xffffffd8            	// #-40
  40e410:	mov	w4, #0x6                   	// #6
  40e414:	str	w0, [sp, #72]
  40e418:	mov	w0, #0xffffff80            	// #-128
  40e41c:	str	w0, [sp, #76]
  40e420:	mov	x0, x8
  40e424:	bl	40d4d0 <ferror@plt+0xa700>
  40e428:	mov	w19, w0
  40e42c:	add	x0, sp, #0x28
  40e430:	bl	40cd34 <ferror@plt+0x9f64>
  40e434:	mov	w0, w19
  40e438:	ldr	x19, [sp, #16]
  40e43c:	ldp	x29, x30, [sp], #256
  40e440:	ret
  40e444:	stp	x29, x30, [sp, #-256]!
  40e448:	mov	x29, sp
  40e44c:	str	x19, [sp, #16]
  40e450:	str	q0, [sp, #80]
  40e454:	str	q1, [sp, #96]
  40e458:	str	q2, [sp, #112]
  40e45c:	str	q3, [sp, #128]
  40e460:	str	q4, [sp, #144]
  40e464:	str	q5, [sp, #160]
  40e468:	str	q6, [sp, #176]
  40e46c:	str	q7, [sp, #192]
  40e470:	stp	x3, x4, [sp, #216]
  40e474:	stp	x5, x6, [sp, #232]
  40e478:	str	x7, [sp, #248]
  40e47c:	cbnz	x0, 40e498 <ferror@plt+0xb6c8>
  40e480:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40e484:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40e488:	add	x2, x2, #0x728
  40e48c:	add	x0, x0, #0x5bf
  40e490:	mov	w1, #0x565                 	// #1381
  40e494:	bl	402de0 <ferror@plt+0x10>
  40e498:	mov	x8, x0
  40e49c:	mov	w9, w1
  40e4a0:	bl	40c35c <ferror@plt+0x958c>
  40e4a4:	mov	w1, w9
  40e4a8:	add	x0, sp, #0x100
  40e4ac:	stp	x0, x0, [sp, #48]
  40e4b0:	add	x0, sp, #0xd0
  40e4b4:	add	x3, sp, #0x30
  40e4b8:	str	x0, [sp, #64]
  40e4bc:	mov	w0, #0xffffffd8            	// #-40
  40e4c0:	mov	w4, #0xa                   	// #10
  40e4c4:	str	w0, [sp, #72]
  40e4c8:	mov	w0, #0xffffff80            	// #-128
  40e4cc:	str	w0, [sp, #76]
  40e4d0:	mov	x0, x8
  40e4d4:	bl	40d4d0 <ferror@plt+0xa700>
  40e4d8:	mov	w19, w0
  40e4dc:	add	x0, sp, #0x28
  40e4e0:	bl	40cd34 <ferror@plt+0x9f64>
  40e4e4:	mov	w0, w19
  40e4e8:	ldr	x19, [sp, #16]
  40e4ec:	ldp	x29, x30, [sp], #256
  40e4f0:	ret
  40e4f4:	stp	x29, x30, [sp, #-256]!
  40e4f8:	mov	x29, sp
  40e4fc:	str	x19, [sp, #16]
  40e500:	str	q0, [sp, #80]
  40e504:	str	q1, [sp, #96]
  40e508:	str	q2, [sp, #112]
  40e50c:	str	q3, [sp, #128]
  40e510:	str	q4, [sp, #144]
  40e514:	str	q5, [sp, #160]
  40e518:	str	q6, [sp, #176]
  40e51c:	str	q7, [sp, #192]
  40e520:	stp	x2, x3, [sp, #208]
  40e524:	stp	x4, x5, [sp, #224]
  40e528:	stp	x6, x7, [sp, #240]
  40e52c:	cbnz	x0, 40e548 <ferror@plt+0xb778>
  40e530:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40e534:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40e538:	add	x2, x2, #0x730
  40e53c:	add	x0, x0, #0x5bf
  40e540:	mov	w1, #0x587                 	// #1415
  40e544:	bl	402de0 <ferror@plt+0x10>
  40e548:	mov	x8, x0
  40e54c:	mov	x9, x1
  40e550:	bl	40c35c <ferror@plt+0x958c>
  40e554:	mov	x2, x9
  40e558:	add	x0, sp, #0x100
  40e55c:	stp	x0, x0, [sp, #48]
  40e560:	add	x0, sp, #0xd0
  40e564:	add	x3, sp, #0x30
  40e568:	str	x0, [sp, #64]
  40e56c:	mov	w0, #0xffffffd0            	// #-48
  40e570:	mov	w4, #0xb                   	// #11
  40e574:	mov	w1, #0xffffffff            	// #-1
  40e578:	str	w0, [sp, #72]
  40e57c:	mov	w0, #0xffffff80            	// #-128
  40e580:	str	w0, [sp, #76]
  40e584:	mov	x0, x8
  40e588:	bl	40d4d0 <ferror@plt+0xa700>
  40e58c:	mov	w19, w0
  40e590:	add	x0, sp, #0x28
  40e594:	bl	40cd34 <ferror@plt+0x9f64>
  40e598:	mov	w0, w19
  40e59c:	ldr	x19, [sp, #16]
  40e5a0:	ldp	x29, x30, [sp], #256
  40e5a4:	ret
  40e5a8:	stp	x29, x30, [sp, #-240]!
  40e5ac:	mov	x29, sp
  40e5b0:	str	q0, [sp, #64]
  40e5b4:	str	q1, [sp, #80]
  40e5b8:	str	q2, [sp, #96]
  40e5bc:	str	q3, [sp, #112]
  40e5c0:	str	q4, [sp, #128]
  40e5c4:	str	q5, [sp, #144]
  40e5c8:	str	q6, [sp, #160]
  40e5cc:	str	q7, [sp, #176]
  40e5d0:	stp	x2, x3, [sp, #192]
  40e5d4:	stp	x4, x5, [sp, #208]
  40e5d8:	stp	x6, x7, [sp, #224]
  40e5dc:	cbnz	x0, 40e5f8 <ferror@plt+0xb828>
  40e5e0:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40e5e4:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40e5e8:	add	x2, x2, #0x73a
  40e5ec:	add	x0, x0, #0x5bf
  40e5f0:	mov	w1, #0x5be                 	// #1470
  40e5f4:	bl	402de0 <ferror@plt+0x10>
  40e5f8:	mov	x8, x0
  40e5fc:	mov	x9, x1
  40e600:	bl	40c35c <ferror@plt+0x958c>
  40e604:	mov	x2, x9
  40e608:	add	x0, sp, #0xf0
  40e60c:	stp	x0, x0, [sp, #32]
  40e610:	add	x0, sp, #0xc0
  40e614:	add	x3, sp, #0x20
  40e618:	str	x0, [sp, #48]
  40e61c:	mov	w0, #0xffffffd0            	// #-48
  40e620:	mov	w4, #0x4                   	// #4
  40e624:	mov	w1, #0xffffffff            	// #-1
  40e628:	str	w0, [sp, #56]
  40e62c:	mov	w0, #0xffffff80            	// #-128
  40e630:	str	w0, [sp, #60]
  40e634:	mov	x0, x8
  40e638:	bl	40d4d0 <ferror@plt+0xa700>
  40e63c:	add	x0, sp, #0x18
  40e640:	bl	40cd34 <ferror@plt+0x9f64>
  40e644:	ldp	x29, x30, [sp], #240
  40e648:	ret
  40e64c:	stp	x29, x30, [sp, #-416]!
  40e650:	mov	w8, w0
  40e654:	mov	x29, sp
  40e658:	str	x19, [sp, #16]
  40e65c:	mov	x19, x1
  40e660:	str	q0, [sp, #240]
  40e664:	str	q1, [sp, #256]
  40e668:	str	q2, [sp, #272]
  40e66c:	str	q3, [sp, #288]
  40e670:	str	q4, [sp, #304]
  40e674:	str	q5, [sp, #320]
  40e678:	str	q6, [sp, #336]
  40e67c:	str	q7, [sp, #352]
  40e680:	stp	x2, x3, [sp, #368]
  40e684:	stp	x4, x5, [sp, #384]
  40e688:	stp	x6, x7, [sp, #400]
  40e68c:	bl	40c35c <ferror@plt+0x958c>
  40e690:	add	x0, sp, #0x1a0
  40e694:	stp	x0, x0, [sp, #40]
  40e698:	add	x0, sp, #0x170
  40e69c:	mov	w2, w8
  40e6a0:	str	x0, [sp, #56]
  40e6a4:	mov	w0, #0xffffffd0            	// #-48
  40e6a8:	str	w0, [sp, #64]
  40e6ac:	mov	w0, #0xffffff80            	// #-128
  40e6b0:	str	w0, [sp, #68]
  40e6b4:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  40e6b8:	mov	x3, #0x0                   	// #0
  40e6bc:	ldr	x1, [x0, #2432]
  40e6c0:	add	x0, sp, #0x48
  40e6c4:	bl	42cdec <ferror@plt+0x2a01c>
  40e6c8:	add	x3, sp, #0x28
  40e6cc:	mov	w4, #0x2                   	// #2
  40e6d0:	mov	x2, x19
  40e6d4:	mov	w1, #0xffffffff            	// #-1
  40e6d8:	add	x0, sp, #0x48
  40e6dc:	bl	40d4d0 <ferror@plt+0xa700>
  40e6e0:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40e6e4:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40e6e8:	add	x2, x2, #0x743
  40e6ec:	add	x0, x0, #0x5bf
  40e6f0:	mov	w1, #0x5f6                 	// #1526
  40e6f4:	bl	402de0 <ferror@plt+0x10>
  40e6f8:	stp	x29, x30, [sp, #-432]!
  40e6fc:	mov	x29, sp
  40e700:	str	x19, [sp, #16]
  40e704:	mov	x19, x0
  40e708:	str	q0, [sp, #240]
  40e70c:	str	q1, [sp, #256]
  40e710:	str	q2, [sp, #272]
  40e714:	str	q3, [sp, #288]
  40e718:	str	q4, [sp, #304]
  40e71c:	str	q5, [sp, #320]
  40e720:	str	q6, [sp, #336]
  40e724:	str	q7, [sp, #352]
  40e728:	stp	x1, x2, [sp, #376]
  40e72c:	stp	x3, x4, [sp, #392]
  40e730:	stp	x5, x6, [sp, #408]
  40e734:	str	x7, [sp, #424]
  40e738:	bl	40c35c <ferror@plt+0x958c>
  40e73c:	add	x0, sp, #0x1b0
  40e740:	stp	x0, x0, [sp, #40]
  40e744:	add	x0, sp, #0x170
  40e748:	str	x0, [sp, #56]
  40e74c:	mov	w0, #0xffffffc8            	// #-56
  40e750:	str	w0, [sp, #64]
  40e754:	mov	w0, #0xffffff80            	// #-128
  40e758:	str	w0, [sp, #68]
  40e75c:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  40e760:	mov	x3, #0x0                   	// #0
  40e764:	ldr	w2, [x0, #2456]
  40e768:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  40e76c:	ldr	x1, [x0, #2432]
  40e770:	add	x0, sp, #0x48
  40e774:	bl	42cdec <ferror@plt+0x2a01c>
  40e778:	add	x3, sp, #0x28
  40e77c:	mov	w4, #0xd                   	// #13
  40e780:	mov	x2, x19
  40e784:	mov	w1, #0xffffffff            	// #-1
  40e788:	add	x0, sp, #0x48
  40e78c:	bl	40d4d0 <ferror@plt+0xa700>
  40e790:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40e794:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40e798:	add	x2, x2, #0x74f
  40e79c:	add	x0, x0, #0x5bf
  40e7a0:	mov	w1, #0x617                 	// #1559
  40e7a4:	bl	402de0 <ferror@plt+0x10>
  40e7a8:	stp	x29, x30, [sp, #-112]!
  40e7ac:	mov	x29, sp
  40e7b0:	stp	x19, x20, [sp, #16]
  40e7b4:	mov	w19, w6
  40e7b8:	mov	w20, w1
  40e7bc:	mov	x1, x4
  40e7c0:	stp	x21, x22, [sp, #32]
  40e7c4:	mov	x21, x5
  40e7c8:	mov	x22, x0
  40e7cc:	mov	x0, x3
  40e7d0:	bl	4026c0 <ngettext@plt>
  40e7d4:	mov	x1, x0
  40e7d8:	mov	w4, w19
  40e7dc:	mov	x3, x22
  40e7e0:	mov	x2, x21
  40e7e4:	add	x0, sp, #0x30
  40e7e8:	bl	40de48 <ferror@plt+0xb078>
  40e7ec:	cmp	w19, #0x6
  40e7f0:	b.ne	40e7f8 <ferror@plt+0xba28>  // b.any
  40e7f4:	str	w20, [sp, #108]
  40e7f8:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  40e7fc:	add	x1, sp, #0x30
  40e800:	ldr	x0, [x0, #960]
  40e804:	bl	40cfcc <ferror@plt+0xa1fc>
  40e808:	ldp	x19, x20, [sp, #16]
  40e80c:	ldp	x21, x22, [sp, #32]
  40e810:	ldp	x29, x30, [sp], #112
  40e814:	ret
  40e818:	stp	x29, x30, [sp, #-416]!
  40e81c:	mov	w8, w0
  40e820:	mov	x29, sp
  40e824:	add	x0, sp, #0x1a0
  40e828:	stp	x0, x0, [sp, #56]
  40e82c:	add	x0, sp, #0x180
  40e830:	str	x0, [sp, #72]
  40e834:	mov	w0, #0xffffffe0            	// #-32
  40e838:	str	w0, [sp, #80]
  40e83c:	mov	w0, #0xffffff80            	// #-128
  40e840:	stp	x19, x20, [sp, #16]
  40e844:	mov	x19, x1
  40e848:	mov	x20, x2
  40e84c:	str	x21, [sp, #32]
  40e850:	mov	x21, x3
  40e854:	str	w0, [sp, #84]
  40e858:	str	q0, [sp, #256]
  40e85c:	str	q1, [sp, #272]
  40e860:	str	q2, [sp, #288]
  40e864:	str	q3, [sp, #304]
  40e868:	str	q4, [sp, #320]
  40e86c:	str	q5, [sp, #336]
  40e870:	str	q6, [sp, #352]
  40e874:	str	q7, [sp, #368]
  40e878:	stp	x4, x5, [sp, #384]
  40e87c:	stp	x6, x7, [sp, #400]
  40e880:	bl	40c35c <ferror@plt+0x958c>
  40e884:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  40e888:	mov	w2, w8
  40e88c:	mov	x3, #0x0                   	// #0
  40e890:	ldr	x1, [x0, #2432]
  40e894:	add	x0, sp, #0x58
  40e898:	bl	42cdec <ferror@plt+0x2a01c>
  40e89c:	add	x5, sp, #0x38
  40e8a0:	mov	x4, x21
  40e8a4:	mov	x3, x20
  40e8a8:	mov	x2, x19
  40e8ac:	mov	w6, #0x8                   	// #8
  40e8b0:	mov	w1, #0xffffffff            	// #-1
  40e8b4:	add	x0, sp, #0x58
  40e8b8:	bl	40e7a8 <ferror@plt+0xb9d8>
  40e8bc:	add	x0, sp, #0x58
  40e8c0:	bl	42cb80 <ferror@plt+0x29db0>
  40e8c4:	add	x0, sp, #0x30
  40e8c8:	bl	40cd34 <ferror@plt+0x9f64>
  40e8cc:	ldp	x19, x20, [sp, #16]
  40e8d0:	ldr	x21, [sp, #32]
  40e8d4:	ldp	x29, x30, [sp], #416
  40e8d8:	ret
  40e8dc:	stp	x29, x30, [sp, #-240]!
  40e8e0:	mov	x29, sp
  40e8e4:	str	x19, [sp, #16]
  40e8e8:	str	q0, [sp, #80]
  40e8ec:	str	q1, [sp, #96]
  40e8f0:	str	q2, [sp, #112]
  40e8f4:	str	q3, [sp, #128]
  40e8f8:	str	q4, [sp, #144]
  40e8fc:	str	q5, [sp, #160]
  40e900:	str	q6, [sp, #176]
  40e904:	str	q7, [sp, #192]
  40e908:	stp	x5, x6, [sp, #216]
  40e90c:	str	x7, [sp, #232]
  40e910:	cbnz	x0, 40e92c <ferror@plt+0xbb5c>
  40e914:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40e918:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40e91c:	add	x2, x2, #0x76b
  40e920:	add	x0, x0, #0x5bf
  40e924:	mov	w1, #0x528                 	// #1320
  40e928:	bl	402de0 <ferror@plt+0x10>
  40e92c:	mov	x8, x0
  40e930:	mov	w9, w1
  40e934:	bl	40c35c <ferror@plt+0x958c>
  40e938:	mov	w1, w9
  40e93c:	add	x0, sp, #0xf0
  40e940:	stp	x0, x0, [sp, #48]
  40e944:	add	x0, sp, #0xd0
  40e948:	add	x5, sp, #0x30
  40e94c:	str	x0, [sp, #64]
  40e950:	mov	w0, #0xffffffe8            	// #-24
  40e954:	mov	w6, #0x6                   	// #6
  40e958:	str	w0, [sp, #72]
  40e95c:	mov	w0, #0xffffff80            	// #-128
  40e960:	str	w0, [sp, #76]
  40e964:	mov	x0, x8
  40e968:	bl	40e7a8 <ferror@plt+0xb9d8>
  40e96c:	mov	w19, w0
  40e970:	add	x0, sp, #0x28
  40e974:	bl	40cd34 <ferror@plt+0x9f64>
  40e978:	mov	w0, w19
  40e97c:	ldr	x19, [sp, #16]
  40e980:	ldp	x29, x30, [sp], #240
  40e984:	ret
  40e988:	stp	x29, x30, [sp, #-416]!
  40e98c:	mov	w8, w0
  40e990:	mov	x29, sp
  40e994:	stp	x19, x20, [sp, #16]
  40e998:	mov	w19, w1
  40e99c:	mov	x20, x2
  40e9a0:	stp	x21, x22, [sp, #32]
  40e9a4:	mov	x21, x3
  40e9a8:	mov	x22, x4
  40e9ac:	str	q0, [sp, #256]
  40e9b0:	str	q1, [sp, #272]
  40e9b4:	str	q2, [sp, #288]
  40e9b8:	str	q3, [sp, #304]
  40e9bc:	str	q4, [sp, #320]
  40e9c0:	str	q5, [sp, #336]
  40e9c4:	str	q6, [sp, #352]
  40e9c8:	str	q7, [sp, #368]
  40e9cc:	stp	x5, x6, [sp, #392]
  40e9d0:	str	x7, [sp, #408]
  40e9d4:	bl	40c35c <ferror@plt+0x958c>
  40e9d8:	add	x0, sp, #0x1a0
  40e9dc:	stp	x0, x0, [sp, #56]
  40e9e0:	add	x0, sp, #0x180
  40e9e4:	str	x0, [sp, #72]
  40e9e8:	mov	w0, #0xffffffe8            	// #-24
  40e9ec:	str	w0, [sp, #80]
  40e9f0:	mov	w0, #0xffffff80            	// #-128
  40e9f4:	str	w0, [sp, #84]
  40e9f8:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  40e9fc:	mov	w2, w8
  40ea00:	mov	x3, #0x0                   	// #0
  40ea04:	ldr	x1, [x0, #2432]
  40ea08:	add	x0, sp, #0x58
  40ea0c:	bl	42cdec <ferror@plt+0x2a01c>
  40ea10:	add	x5, sp, #0x38
  40ea14:	mov	x4, x22
  40ea18:	mov	x3, x21
  40ea1c:	mov	x2, x20
  40ea20:	mov	w1, w19
  40ea24:	mov	w6, #0x6                   	// #6
  40ea28:	add	x0, sp, #0x58
  40ea2c:	bl	40e7a8 <ferror@plt+0xb9d8>
  40ea30:	mov	w19, w0
  40ea34:	add	x0, sp, #0x58
  40ea38:	bl	42cb80 <ferror@plt+0x29db0>
  40ea3c:	add	x0, sp, #0x30
  40ea40:	bl	40cd34 <ferror@plt+0x9f64>
  40ea44:	mov	w0, w19
  40ea48:	ldp	x19, x20, [sp, #16]
  40ea4c:	ldp	x21, x22, [sp, #32]
  40ea50:	ldp	x29, x30, [sp], #416
  40ea54:	ret
  40ea58:	stp	x29, x30, [sp, #-416]!
  40ea5c:	mov	w8, w0
  40ea60:	mov	x29, sp
  40ea64:	stp	x19, x20, [sp, #16]
  40ea68:	mov	x19, x1
  40ea6c:	mov	x20, x2
  40ea70:	str	x21, [sp, #32]
  40ea74:	mov	x21, x3
  40ea78:	str	q0, [sp, #256]
  40ea7c:	str	q1, [sp, #272]
  40ea80:	str	q2, [sp, #288]
  40ea84:	str	q3, [sp, #304]
  40ea88:	str	q4, [sp, #320]
  40ea8c:	str	q5, [sp, #336]
  40ea90:	str	q6, [sp, #352]
  40ea94:	str	q7, [sp, #368]
  40ea98:	stp	x4, x5, [sp, #384]
  40ea9c:	stp	x6, x7, [sp, #400]
  40eaa0:	bl	40c35c <ferror@plt+0x958c>
  40eaa4:	add	x0, sp, #0x1a0
  40eaa8:	stp	x0, x0, [sp, #56]
  40eaac:	add	x0, sp, #0x180
  40eab0:	mov	w2, w8
  40eab4:	str	x0, [sp, #72]
  40eab8:	mov	w0, #0xffffffe0            	// #-32
  40eabc:	str	w0, [sp, #80]
  40eac0:	mov	w0, #0xffffff80            	// #-128
  40eac4:	str	w0, [sp, #84]
  40eac8:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  40eacc:	mov	x3, #0x0                   	// #0
  40ead0:	ldr	x1, [x0, #2432]
  40ead4:	add	x0, sp, #0x58
  40ead8:	bl	42cdec <ferror@plt+0x2a01c>
  40eadc:	add	x5, sp, #0x38
  40eae0:	mov	x4, x21
  40eae4:	mov	x3, x20
  40eae8:	mov	x2, x19
  40eaec:	mov	w6, #0x4                   	// #4
  40eaf0:	mov	w1, #0xffffffff            	// #-1
  40eaf4:	add	x0, sp, #0x58
  40eaf8:	bl	40e7a8 <ferror@plt+0xb9d8>
  40eafc:	add	x0, sp, #0x58
  40eb00:	bl	42cb80 <ferror@plt+0x29db0>
  40eb04:	add	x0, sp, #0x30
  40eb08:	bl	40cd34 <ferror@plt+0x9f64>
  40eb0c:	ldp	x19, x20, [sp, #16]
  40eb10:	ldr	x21, [sp, #32]
  40eb14:	ldp	x29, x30, [sp], #416
  40eb18:	ret
  40eb1c:	stp	x29, x30, [sp, #-32]!
  40eb20:	mov	x29, sp
  40eb24:	stp	x19, x20, [sp, #16]
  40eb28:	and	w20, w0, #0xff
  40eb2c:	mov	x19, x1
  40eb30:	mov	x0, x1
  40eb34:	bl	402700 <strlen@plt>
  40eb38:	mov	x1, x19
  40eb3c:	mov	x2, x0
  40eb40:	mov	w0, w20
  40eb44:	ldp	x19, x20, [sp, #16]
  40eb48:	ldp	x29, x30, [sp], #32
  40eb4c:	b	40edb8 <ferror@plt+0xbfe8>
  40eb50:	cbz	x1, 40ec38 <ferror@plt+0xbe68>
  40eb54:	stp	x29, x30, [sp, #-48]!
  40eb58:	mov	x29, sp
  40eb5c:	stp	x19, x20, [sp, #16]
  40eb60:	mov	x19, x1
  40eb64:	ldr	x1, [x0, #16]
  40eb68:	stp	x21, x22, [sp, #32]
  40eb6c:	mov	x21, x0
  40eb70:	cbz	x1, 40eb7c <ferror@plt+0xbdac>
  40eb74:	ldr	x0, [x19]
  40eb78:	blr	x1
  40eb7c:	ldr	x1, [x21, #24]
  40eb80:	cbz	x1, 40eb8c <ferror@plt+0xbdbc>
  40eb84:	ldr	x0, [x19, #8]
  40eb88:	blr	x1
  40eb8c:	str	xzr, [x19, #32]
  40eb90:	mov	x20, x19
  40eb94:	mov	x19, #0x0                   	// #0
  40eb98:	ldr	x0, [x20, #16]
  40eb9c:	cbz	x0, 40ebd0 <ferror@plt+0xbe00>
  40eba0:	ldr	x1, [x21, #16]
  40eba4:	cbz	x1, 40ebb0 <ferror@plt+0xbde0>
  40eba8:	ldr	x0, [x0]
  40ebac:	blr	x1
  40ebb0:	ldr	x1, [x21, #24]
  40ebb4:	cbz	x1, 40ebc4 <ferror@plt+0xbdf4>
  40ebb8:	ldr	x0, [x20, #16]
  40ebbc:	ldr	x0, [x0, #8]
  40ebc0:	blr	x1
  40ebc4:	ldr	x0, [x20, #16]
  40ebc8:	str	x19, [x0, #32]
  40ebcc:	mov	x19, x0
  40ebd0:	ldr	x0, [x20, #24]
  40ebd4:	cbz	x0, 40ec08 <ferror@plt+0xbe38>
  40ebd8:	ldr	x1, [x21, #16]
  40ebdc:	cbz	x1, 40ebe8 <ferror@plt+0xbe18>
  40ebe0:	ldr	x0, [x0]
  40ebe4:	blr	x1
  40ebe8:	ldr	x1, [x21, #24]
  40ebec:	cbz	x1, 40ebfc <ferror@plt+0xbe2c>
  40ebf0:	ldr	x0, [x20, #24]
  40ebf4:	ldr	x0, [x0, #8]
  40ebf8:	blr	x1
  40ebfc:	ldr	x0, [x20, #24]
  40ec00:	str	x19, [x0, #32]
  40ec04:	mov	x19, x0
  40ec08:	ldr	x22, [x20, #32]
  40ec0c:	mov	x0, x20
  40ec10:	mov	x1, #0x28                  	// #40
  40ec14:	bl	445778 <_obstack_memory_used@@Base+0xd74>
  40ec18:	cbz	x22, 40ec24 <ferror@plt+0xbe54>
  40ec1c:	mov	x20, x22
  40ec20:	b	40eb98 <ferror@plt+0xbdc8>
  40ec24:	cbnz	x19, 40eb90 <ferror@plt+0xbdc0>
  40ec28:	ldp	x19, x20, [sp, #16]
  40ec2c:	ldp	x21, x22, [sp, #32]
  40ec30:	ldp	x29, x30, [sp], #48
  40ec34:	ret
  40ec38:	ret
  40ec3c:	stp	x29, x30, [sp, #-96]!
  40ec40:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40ec44:	add	x0, x0, #0x9b0
  40ec48:	mov	x29, sp
  40ec4c:	stp	x19, x20, [sp, #16]
  40ec50:	stp	x21, x22, [sp, #32]
  40ec54:	stp	x23, x24, [sp, #48]
  40ec58:	stp	x25, x26, [sp, #64]
  40ec5c:	str	x27, [sp, #80]
  40ec60:	bl	402d00 <getenv@plt>
  40ec64:	cbz	x0, 40ed90 <ferror@plt+0xbfc0>
  40ec68:	mov	x19, x0
  40ec6c:	ldrb	w0, [x0]
  40ec70:	cbz	w0, 40edb0 <ferror@plt+0xbfe0>
  40ec74:	adrp	x23, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40ec78:	mov	x20, x19
  40ec7c:	add	x23, x23, #0xa38
  40ec80:	mov	x21, #0x0                   	// #0
  40ec84:	mov	x22, #0x0                   	// #0
  40ec88:	mov	x26, #0x0                   	// #0
  40ec8c:	adrp	x24, 495000 <_obstack_memory_used@@Base+0x505fc>
  40ec90:	mov	w25, #0x5b1b                	// #23323
  40ec94:	ldrb	w0, [x20]
  40ec98:	cmp	w0, #0x3a
  40ec9c:	b.eq	40eca4 <ferror@plt+0xbed4>  // b.none
  40eca0:	cbnz	w0, 40ed54 <ferror@plt+0xbf84>
  40eca4:	cbz	x26, 40ecdc <ferror@plt+0xbf0c>
  40eca8:	sub	x21, x20, x26
  40ecac:	add	x27, x24, #0x3c8
  40ecb0:	ldr	x0, [x27]
  40ecb4:	cbz	x0, 40ece4 <ferror@plt+0xbf14>
  40ecb8:	ldrb	w1, [x27, #16]
  40ecbc:	cmp	x1, x22
  40ecc0:	b.ne	40ecd4 <ferror@plt+0xbf04>  // b.any
  40ecc4:	mov	x2, x22
  40ecc8:	mov	x1, x19
  40eccc:	bl	402a90 <memcmp@plt>
  40ecd0:	cbz	w0, 40ece4 <ferror@plt+0xbf14>
  40ecd4:	add	x27, x27, #0x18
  40ecd8:	b	40ecb0 <ferror@plt+0xbee0>
  40ecdc:	sub	x22, x20, x19
  40ece0:	b	40ecac <ferror@plt+0xbedc>
  40ece4:	ldr	x0, [x27, #8]
  40ece8:	cbz	x0, 40ed3c <ferror@plt+0xbf6c>
  40ecec:	cbz	x26, 40ed3c <ferror@plt+0xbf6c>
  40ecf0:	ldrb	w1, [x27, #17]
  40ecf4:	cbz	w1, 40ecfc <ferror@plt+0xbf2c>
  40ecf8:	bl	402b30 <free@plt>
  40ecfc:	add	x0, x21, #0x7
  40ed00:	bl	44526c <_obstack_memory_used@@Base+0x868>
  40ed04:	mov	x19, x0
  40ed08:	strh	w25, [x0], #2
  40ed0c:	mov	x2, x21
  40ed10:	mov	x1, x26
  40ed14:	bl	4026a0 <memcpy@plt>
  40ed18:	str	x19, [x27, #8]
  40ed1c:	add	x0, x21, #0x2
  40ed20:	ldr	w2, [x23]
  40ed24:	add	x1, x19, x0
  40ed28:	str	w2, [x19, x0]
  40ed2c:	ldrb	w0, [x23, #4]
  40ed30:	strb	w0, [x1, #4]
  40ed34:	mov	w0, #0x1                   	// #1
  40ed38:	strb	w0, [x27, #17]
  40ed3c:	ldrb	w0, [x20]
  40ed40:	cbz	w0, 40ed90 <ferror@plt+0xbfc0>
  40ed44:	add	x19, x20, #0x1
  40ed48:	mov	x26, #0x0                   	// #0
  40ed4c:	add	x20, x20, #0x1
  40ed50:	b	40ec94 <ferror@plt+0xbec4>
  40ed54:	cmp	w0, #0x3d
  40ed58:	b.ne	40ed74 <ferror@plt+0xbfa4>  // b.any
  40ed5c:	cmp	x26, #0x0
  40ed60:	ccmp	x20, x19, #0x4, eq  // eq = none
  40ed64:	b.eq	40ed90 <ferror@plt+0xbfc0>  // b.none
  40ed68:	sub	x22, x20, x19
  40ed6c:	add	x26, x20, #0x1
  40ed70:	b	40ed4c <ferror@plt+0xbf7c>
  40ed74:	cbz	x26, 40ed4c <ferror@plt+0xbf7c>
  40ed78:	cmp	w0, #0x3b
  40ed7c:	b.eq	40ed4c <ferror@plt+0xbf7c>  // b.none
  40ed80:	sub	w0, w0, #0x30
  40ed84:	and	w0, w0, #0xff
  40ed88:	cmp	w0, #0x9
  40ed8c:	b.ls	40ed4c <ferror@plt+0xbf7c>  // b.plast
  40ed90:	mov	w0, #0x1                   	// #1
  40ed94:	ldp	x19, x20, [sp, #16]
  40ed98:	ldp	x21, x22, [sp, #32]
  40ed9c:	ldp	x23, x24, [sp, #48]
  40eda0:	ldp	x25, x26, [sp, #64]
  40eda4:	ldr	x27, [sp, #80]
  40eda8:	ldp	x29, x30, [sp], #96
  40edac:	ret
  40edb0:	mov	w0, #0x0                   	// #0
  40edb4:	b	40ed94 <ferror@plt+0xbfc4>
  40edb8:	tst	w0, #0xff
  40edbc:	b.eq	40ee0c <ferror@plt+0xc03c>  // b.none
  40edc0:	stp	x29, x30, [sp, #-48]!
  40edc4:	mov	x29, sp
  40edc8:	stp	x19, x20, [sp, #16]
  40edcc:	adrp	x19, 495000 <_obstack_memory_used@@Base+0x505fc>
  40edd0:	mov	x20, x2
  40edd4:	add	x19, x19, #0x3c8
  40edd8:	str	x21, [sp, #32]
  40eddc:	mov	x21, x1
  40ede0:	ldr	x0, [x19]
  40ede4:	cbz	x0, 40ee18 <ferror@plt+0xc048>
  40ede8:	ldrb	w1, [x19, #16]
  40edec:	cmp	x1, x20
  40edf0:	b.ne	40ee04 <ferror@plt+0xc034>  // b.any
  40edf4:	mov	x2, x20
  40edf8:	mov	x1, x21
  40edfc:	bl	402a90 <memcmp@plt>
  40ee00:	cbz	w0, 40ee30 <ferror@plt+0xc060>
  40ee04:	add	x19, x19, #0x18
  40ee08:	b	40ede0 <ferror@plt+0xc010>
  40ee0c:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x195fc>
  40ee10:	add	x0, x0, #0xaff
  40ee14:	ret
  40ee18:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x195fc>
  40ee1c:	add	x0, x0, #0xaff
  40ee20:	ldp	x19, x20, [sp, #16]
  40ee24:	ldr	x21, [sp, #32]
  40ee28:	ldp	x29, x30, [sp], #48
  40ee2c:	ret
  40ee30:	ldr	x0, [x19, #8]
  40ee34:	b	40ee20 <ferror@plt+0xc050>
  40ee38:	tst	w0, #0xff
  40ee3c:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  40ee40:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x195fc>
  40ee44:	add	x0, x2, #0x32c
  40ee48:	add	x1, x1, #0xaff
  40ee4c:	csel	x0, x0, x1, ne  // ne = any
  40ee50:	ret
  40ee54:	cmp	w0, #0x1
  40ee58:	b.eq	40eed4 <ferror@plt+0xc104>  // b.none
  40ee5c:	stp	x29, x30, [sp, #-32]!
  40ee60:	cmp	w0, #0x2
  40ee64:	mov	x29, sp
  40ee68:	str	x19, [sp, #16]
  40ee6c:	mov	w19, w0
  40ee70:	b.eq	40ee90 <ferror@plt+0xc0c0>  // b.none
  40ee74:	cbz	w0, 40eea0 <ferror@plt+0xc0d0>
  40ee78:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40ee7c:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40ee80:	add	x2, x2, #0x9c5
  40ee84:	add	x0, x0, #0x9d3
  40ee88:	mov	w1, #0xec                  	// #236
  40ee8c:	bl	402de0 <ferror@plt+0x10>
  40ee90:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40ee94:	add	x0, x0, #0x9bb
  40ee98:	bl	402d00 <getenv@plt>
  40ee9c:	cbnz	x0, 40eeb0 <ferror@plt+0xc0e0>
  40eea0:	mov	w0, #0x0                   	// #0
  40eea4:	ldr	x19, [sp, #16]
  40eea8:	ldp	x29, x30, [sp], #32
  40eeac:	ret
  40eeb0:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40eeb4:	add	x1, x1, #0x9c0
  40eeb8:	bl	402ad0 <strcmp@plt>
  40eebc:	cbz	w0, 40eea0 <ferror@plt+0xc0d0>
  40eec0:	mov	w0, w19
  40eec4:	bl	402c30 <isatty@plt>
  40eec8:	cbz	w0, 40eea0 <ferror@plt+0xc0d0>
  40eecc:	ldr	x19, [sp, #16]
  40eed0:	ldp	x29, x30, [sp], #32
  40eed4:	b	40ec3c <ferror@plt+0xbe6c>
  40eed8:	ldr	x2, [x0]
  40eedc:	ldr	x0, [x1]
  40eee0:	ldr	w1, [x2]
  40eee4:	ldr	w0, [x0]
  40eee8:	sub	w0, w1, w0
  40eeec:	ret
  40eef0:	stp	x29, x30, [sp, #-32]!
  40eef4:	mov	x29, sp
  40eef8:	str	x19, [sp, #16]
  40eefc:	mov	x19, x0
  40ef00:	ldr	x0, [x0]
  40ef04:	cbz	x0, 40ef14 <ferror@plt+0xc144>
  40ef08:	ldrsb	w1, [x0, #3]
  40ef0c:	tbz	w1, #31, 40ef20 <ferror@plt+0xc150>
  40ef10:	str	wzr, [x0, #4]
  40ef14:	ldr	x19, [sp, #16]
  40ef18:	ldp	x29, x30, [sp], #32
  40ef1c:	ret
  40ef20:	bl	402b30 <free@plt>
  40ef24:	str	xzr, [x19]
  40ef28:	b	40ef14 <ferror@plt+0xc144>
  40ef2c:	stp	x29, x30, [sp, #-32]!
  40ef30:	mov	x29, sp
  40ef34:	str	x19, [sp, #16]
  40ef38:	mov	x19, x0
  40ef3c:	ldr	x0, [x0]
  40ef40:	cbz	x0, 40ef50 <ferror@plt+0xc180>
  40ef44:	ldrsb	w1, [x0, #3]
  40ef48:	tbz	w1, #31, 40ef5c <ferror@plt+0xc18c>
  40ef4c:	str	wzr, [x0, #4]
  40ef50:	ldr	x19, [sp, #16]
  40ef54:	ldp	x29, x30, [sp], #32
  40ef58:	ret
  40ef5c:	bl	402b30 <free@plt>
  40ef60:	str	xzr, [x19]
  40ef64:	b	40ef50 <ferror@plt+0xc180>
  40ef68:	stp	x29, x30, [sp, #-64]!
  40ef6c:	mov	x29, sp
  40ef70:	stp	x19, x20, [sp, #16]
  40ef74:	mov	w20, w0
  40ef78:	mov	w19, w1
  40ef7c:	stp	x21, x22, [sp, #32]
  40ef80:	stp	x23, x24, [sp, #48]
  40ef84:	adrp	x23, 495000 <_obstack_memory_used@@Base+0x505fc>
  40ef88:	tbz	w20, #31, 40ef9c <ferror@plt+0xc1cc>
  40ef8c:	ldr	x0, [x23, #2432]
  40ef90:	mov	w1, w20
  40ef94:	bl	42b148 <ferror@plt+0x28378>
  40ef98:	mov	w20, w0
  40ef9c:	tbz	w19, #31, 40efb0 <ferror@plt+0xc1e0>
  40efa0:	ldr	x0, [x23, #2432]
  40efa4:	mov	w1, w19
  40efa8:	bl	42b148 <ferror@plt+0x28378>
  40efac:	mov	w19, w0
  40efb0:	cmp	w20, #0x1
  40efb4:	cset	w21, ls  // ls = plast
  40efb8:	cmp	w19, #0x1
  40efbc:	cset	w0, ls  // ls = plast
  40efc0:	orr	w21, w21, w0
  40efc4:	cbz	w21, 40efe8 <ferror@plt+0xc218>
  40efc8:	cmp	w20, w19
  40efcc:	cset	w21, eq  // eq = none
  40efd0:	mov	w0, w21
  40efd4:	ldp	x19, x20, [sp, #16]
  40efd8:	ldp	x21, x22, [sp, #32]
  40efdc:	ldp	x23, x24, [sp, #48]
  40efe0:	ldp	x29, x30, [sp], #64
  40efe4:	ret
  40efe8:	ldr	x0, [x23, #2432]
  40efec:	mov	w1, w20
  40eff0:	bl	42b8e4 <ferror@plt+0x28b14>
  40eff4:	mov	x22, x0
  40eff8:	ldr	x0, [x23, #2432]
  40effc:	mov	w1, w19
  40f000:	bl	42b8e4 <ferror@plt+0x28b14>
  40f004:	mov	x24, x0
  40f008:	cmp	x22, x0
  40f00c:	b.ne	40f048 <ferror@plt+0xc278>  // b.any
  40f010:	bl	42b83c <ferror@plt+0x28a6c>
  40f014:	tst	w0, #0xff
  40f018:	b.eq	40f078 <ferror@plt+0xc2a8>  // b.none
  40f01c:	ldr	x0, [x23, #2432]
  40f020:	mov	w2, w20
  40f024:	mov	x1, x22
  40f028:	bl	42b85c <ferror@plt+0x28a8c>
  40f02c:	mov	w20, w0
  40f030:	ldr	x0, [x23, #2432]
  40f034:	mov	w2, w19
  40f038:	mov	x1, x22
  40f03c:	bl	42b85c <ferror@plt+0x28a8c>
  40f040:	mov	w19, w0
  40f044:	b	40ef88 <ferror@plt+0xc1b8>
  40f048:	mov	x0, x22
  40f04c:	bl	42b83c <ferror@plt+0x28a6c>
  40f050:	tst	w0, #0xff
  40f054:	b.ne	40efd0 <ferror@plt+0xc200>  // b.any
  40f058:	mov	x0, x24
  40f05c:	bl	42b83c <ferror@plt+0x28a6c>
  40f060:	tst	w0, #0xff
  40f064:	b.ne	40efd0 <ferror@plt+0xc200>  // b.any
  40f068:	ldr	x1, [x22, #8]
  40f06c:	ldr	x0, [x24, #8]
  40f070:	cmp	x1, x0
  40f074:	b	40efcc <ferror@plt+0xc1fc>
  40f078:	mov	w21, #0x1                   	// #1
  40f07c:	b	40efd0 <ferror@plt+0xc200>
  40f080:	stp	w1, w2, [x0]
  40f084:	cmp	w1, w2
  40f088:	b.le	40f0b8 <ferror@plt+0xc2e8>
  40f08c:	sub	w1, w1, #0x1
  40f090:	cmp	w1, w2
  40f094:	b.eq	40f0b8 <ferror@plt+0xc2e8>  // b.none
  40f098:	stp	x29, x30, [sp, #-16]!
  40f09c:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40f0a0:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40f0a4:	mov	x29, sp
  40f0a8:	add	x2, x2, #0xaa6
  40f0ac:	add	x0, x0, #0xab3
  40f0b0:	mov	w1, #0x6bc                 	// #1724
  40f0b4:	bl	402de0 <ferror@plt+0x10>
  40f0b8:	ret
  40f0bc:	stp	x29, x30, [sp, #-48]!
  40f0c0:	mov	x29, sp
  40f0c4:	stp	x19, x20, [sp, #16]
  40f0c8:	mov	x19, x0
  40f0cc:	ldrb	w0, [x0, #114]
  40f0d0:	str	x21, [sp, #32]
  40f0d4:	cbz	w0, 40f13c <ferror@plt+0xc36c>
  40f0d8:	and	w21, w1, #0xff
  40f0dc:	mov	w20, #0x0                   	// #0
  40f0e0:	ldr	w1, [x19, #144]
  40f0e4:	ldr	x0, [x19, #8]
  40f0e8:	sub	w1, w1, #0x3
  40f0ec:	cmp	w1, w20
  40f0f0:	b.le	40f104 <ferror@plt+0xc334>
  40f0f4:	mov	w1, #0x20                  	// #32
  40f0f8:	add	w20, w20, #0x1
  40f0fc:	bl	41358c <ferror@plt+0x107bc>
  40f100:	b	40f0e0 <ferror@plt+0xc310>
  40f104:	ldr	w1, [x19, #144]
  40f108:	ldr	x0, [x19, #8]
  40f10c:	cmp	w1, w20
  40f110:	b.le	40f124 <ferror@plt+0xc354>
  40f114:	mov	w1, w21
  40f118:	add	w20, w20, #0x1
  40f11c:	bl	41358c <ferror@plt+0x107bc>
  40f120:	b	40f104 <ferror@plt+0xc334>
  40f124:	ldp	x19, x20, [sp, #16]
  40f128:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40f12c:	ldr	x21, [sp, #32]
  40f130:	add	x1, x1, #0xad5
  40f134:	ldp	x29, x30, [sp], #48
  40f138:	b	413938 <ferror@plt+0x10b68>
  40f13c:	ldp	x19, x20, [sp, #16]
  40f140:	ldr	x21, [sp, #32]
  40f144:	ldp	x29, x30, [sp], #48
  40f148:	ret
  40f14c:	stp	x29, x30, [sp, #-48]!
  40f150:	mov	x29, sp
  40f154:	stp	x19, x20, [sp, #16]
  40f158:	mov	x19, x0
  40f15c:	ldr	w0, [x0, #12]
  40f160:	str	x21, [sp, #32]
  40f164:	cmp	w0, w1
  40f168:	b.eq	40f25c <ferror@plt+0xc48c>  // b.none
  40f16c:	mov	w20, w1
  40f170:	cmn	w0, #0x1
  40f174:	b.eq	40f188 <ferror@plt+0xc3b8>  // b.none
  40f178:	ldr	x0, [x19]
  40f17c:	ldr	x1, [x19, #48]
  40f180:	ldr	x0, [x0]
  40f184:	bl	413938 <ferror@plt+0x10b68>
  40f188:	str	w20, [x19, #12]
  40f18c:	add	w1, w20, #0x3
  40f190:	cmp	w1, #0x5
  40f194:	b.hi	40f228 <ferror@plt+0xc458>  // b.pmore
  40f198:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40f19c:	add	x0, x0, #0xc0c
  40f1a0:	ldrb	w0, [x0, w1, uxtw]
  40f1a4:	adr	x1, 40f1b0 <ferror@plt+0xc3e0>
  40f1a8:	add	x0, x1, w0, sxtb #2
  40f1ac:	br	x0
  40f1b0:	ldr	x0, [x19]
  40f1b4:	ldr	x1, [x19, #32]
  40f1b8:	ldr	x0, [x0]
  40f1bc:	b	40f200 <ferror@plt+0xc430>
  40f1c0:	ldr	x0, [x19]
  40f1c4:	ldr	x1, [x19, #40]
  40f1c8:	b	40f1b8 <ferror@plt+0xc3e8>
  40f1cc:	ldr	x0, [x19]
  40f1d0:	ldr	x20, [x0]
  40f1d4:	ldr	w0, [x19, #8]
  40f1d8:	ldrb	w21, [x20, #67]
  40f1dc:	bl	40c774 <ferror@plt+0x99a4>
  40f1e0:	mov	x19, x0
  40f1e4:	bl	402700 <strlen@plt>
  40f1e8:	mov	x2, x0
  40f1ec:	mov	x1, x19
  40f1f0:	mov	w0, w21
  40f1f4:	bl	40edb8 <ferror@plt+0xbfe8>
  40f1f8:	mov	x1, x0
  40f1fc:	mov	x0, x20
  40f200:	ldp	x19, x20, [sp, #16]
  40f204:	ldr	x21, [sp, #32]
  40f208:	ldp	x29, x30, [sp], #48
  40f20c:	b	413938 <ferror@plt+0x10b68>
  40f210:	ldr	x0, [x19]
  40f214:	ldr	x1, [x19, #16]
  40f218:	b	40f1b8 <ferror@plt+0xc3e8>
  40f21c:	ldr	x0, [x19]
  40f220:	ldr	x1, [x19, #24]
  40f224:	b	40f1b8 <ferror@plt+0xc3e8>
  40f228:	cmp	w20, #0x2
  40f22c:	b.gt	40f248 <ferror@plt+0xc478>
  40f230:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40f234:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40f238:	add	x2, x2, #0xad8
  40f23c:	add	x0, x0, #0xab3
  40f240:	mov	w1, #0x17f                 	// #383
  40f244:	bl	402de0 <ferror@plt+0x10>
  40f248:	ldp	x2, x1, [x19, #16]
  40f24c:	tst	x20, #0x1
  40f250:	ldr	x0, [x19]
  40f254:	csel	x1, x2, x1, ne  // ne = any
  40f258:	b	40f1b8 <ferror@plt+0xc3e8>
  40f25c:	ldp	x19, x20, [sp, #16]
  40f260:	ldr	x21, [sp, #32]
  40f264:	ldp	x29, x30, [sp], #48
  40f268:	ret
  40f26c:	mov	w1, #0xffffffff            	// #-1
  40f270:	b	40f14c <ferror@plt+0xc37c>
  40f274:	stp	x29, x30, [sp, #-32]!
  40f278:	mov	x29, sp
  40f27c:	str	x19, [sp, #16]
  40f280:	mov	x19, x0
  40f284:	add	x0, x0, #0x38
  40f288:	bl	40f26c <ferror@plt+0xc49c>
  40f28c:	ldr	x0, [x19, #8]
  40f290:	ldr	x19, [sp, #16]
  40f294:	ldp	x29, x30, [sp], #32
  40f298:	b	413530 <ferror@plt+0x10760>
  40f29c:	stp	x29, x30, [sp, #-48]!
  40f2a0:	mov	x29, sp
  40f2a4:	stp	x19, x20, [sp, #16]
  40f2a8:	mov	x19, x1
  40f2ac:	ldr	w1, [x1]
  40f2b0:	stp	x21, x22, [sp, #32]
  40f2b4:	mov	x20, x0
  40f2b8:	mov	w21, w2
  40f2bc:	cmp	w1, w2
  40f2c0:	b.le	40f2e4 <ferror@plt+0xc514>
  40f2c4:	and	w22, w3, #0xff
  40f2c8:	bl	40f274 <ferror@plt+0xc4a4>
  40f2cc:	cbz	w22, 40f2dc <ferror@plt+0xc50c>
  40f2d0:	mov	x0, x20
  40f2d4:	mov	w1, #0x20                  	// #32
  40f2d8:	bl	40f0bc <ferror@plt+0xc2ec>
  40f2dc:	ldr	w0, [x20, #148]
  40f2e0:	str	w0, [x19]
  40f2e4:	ldr	w0, [x19]
  40f2e8:	cmp	w0, w21
  40f2ec:	b.ge	40f308 <ferror@plt+0xc538>  // b.tcont
  40f2f0:	ldr	x0, [x20, #8]
  40f2f4:	mov	w1, #0x20                  	// #32
  40f2f8:	bl	41358c <ferror@plt+0x107bc>
  40f2fc:	ldr	w0, [x19]
  40f300:	add	w0, w0, #0x1
  40f304:	b	40f2e0 <ferror@plt+0xc510>
  40f308:	ldp	x19, x20, [sp, #16]
  40f30c:	ldp	x21, x22, [sp, #32]
  40f310:	ldp	x29, x30, [sp], #48
  40f314:	ret
  40f318:	cbnz	x0, 40f32c <ferror@plt+0xc55c>
  40f31c:	cmp	w1, #0x4
  40f320:	mov	w0, #0x4                   	// #4
  40f324:	csel	w0, w1, w0, cs  // cs = hs, nlast
  40f328:	ret
  40f32c:	ldr	w2, [x0, #4]
  40f330:	ldr	w0, [x0]
  40f334:	add	w1, w1, w2
  40f338:	and	w0, w0, #0x7fffffff
  40f33c:	b	4156fc <ferror@plt+0x1292c>
  40f340:	stp	x29, x30, [sp, #-16]!
  40f344:	mov	x29, sp
  40f348:	tbz	w1, #31, 40f364 <ferror@plt+0xc594>
  40f34c:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40f350:	add	x2, x2, #0xae4
  40f354:	mov	w1, #0x705                 	// #1797
  40f358:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40f35c:	add	x0, x0, #0xab3
  40f360:	bl	402de0 <ferror@plt+0x10>
  40f364:	mov	x3, x2
  40f368:	sxtw	x4, w1
  40f36c:	ldr	x2, [x2, #8]
  40f370:	ldr	x5, [x0, #32]
  40f374:	add	x1, x2, w1, sxtw
  40f378:	cmp	x1, x5
  40f37c:	b.cc	40f390 <ferror@plt+0xc5c0>  // b.lo, b.ul, b.last
  40f380:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40f384:	mov	w1, #0x706                 	// #1798
  40f388:	add	x2, x2, #0xae4
  40f38c:	b	40f358 <ferror@plt+0xc588>
  40f390:	ldp	x29, x30, [sp], #16
  40f394:	ldr	x1, [x3]
  40f398:	ldr	x0, [x0, #16]
  40f39c:	add	x0, x0, x4
  40f3a0:	b	4026a0 <memcpy@plt>
  40f3a4:	ldr	x3, [x0, #136]
  40f3a8:	mov	w2, #0x0                   	// #0
  40f3ac:	add	x0, x3, #0xc
  40f3b0:	cbz	x3, 40f3e4 <ferror@plt+0xc614>
  40f3b4:	ldr	w4, [x3, #4]
  40f3b8:	cmp	w2, w4
  40f3bc:	b.ge	40f3e4 <ferror@plt+0xc614>  // b.tcont
  40f3c0:	ldur	w4, [x0, #-4]
  40f3c4:	cmp	w1, w4
  40f3c8:	b.cc	40f3d8 <ferror@plt+0xc608>  // b.lo, b.ul, b.last
  40f3cc:	ldr	w4, [x0]
  40f3d0:	cmp	w1, w4
  40f3d4:	b.ls	40f3ec <ferror@plt+0xc61c>  // b.plast
  40f3d8:	add	w2, w2, #0x1
  40f3dc:	add	x0, x0, #0x8
  40f3e0:	b	40f3b0 <ferror@plt+0xc5e0>
  40f3e4:	mov	w0, #0x0                   	// #0
  40f3e8:	ret
  40f3ec:	mov	w0, #0x1                   	// #1
  40f3f0:	b	40f3e8 <ferror@plt+0xc618>
  40f3f4:	ldr	x7, [x0, #120]
  40f3f8:	mov	x0, #0x0                   	// #0
  40f3fc:	add	x6, x7, #0x8
  40f400:	cbz	x7, 40f560 <ferror@plt+0xc790>
  40f404:	ldr	w8, [x7, #4]
  40f408:	cmp	w8, w0
  40f40c:	b.ls	40f560 <ferror@plt+0xc790>  // b.plast
  40f410:	ldr	w10, [x6, #16]
  40f414:	cmp	w10, #0x2
  40f418:	b.ne	40f568 <ferror@plt+0xc798>  // b.any
  40f41c:	add	w0, w0, #0x1
  40f420:	add	x6, x6, #0x28
  40f424:	b	40f400 <ferror@plt+0xc630>
  40f428:	add	w0, w0, #0x1
  40f42c:	add	x6, x6, #0x28
  40f430:	cbz	x7, 40f548 <ferror@plt+0xc778>
  40f434:	ldr	w8, [x7, #4]
  40f438:	cmp	w8, w0
  40f43c:	b.ls	40f548 <ferror@plt+0xc778>  // b.plast
  40f440:	ldr	w10, [x6, #16]
  40f444:	cmp	w10, #0x2
  40f448:	b.eq	40f428 <ferror@plt+0xc658>  // b.none
  40f44c:	ldr	w9, [x6]
  40f450:	ldr	w8, [x6, #8]
  40f454:	cmp	w9, w8
  40f458:	b.ls	40f474 <ferror@plt+0xc6a4>  // b.plast
  40f45c:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40f460:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40f464:	add	x2, x2, #0xaee
  40f468:	add	x0, x0, #0xab3
  40f46c:	mov	w1, #0x1d8                 	// #472
  40f470:	bl	402de0 <ferror@plt+0x10>
  40f474:	cmp	w1, w9
  40f478:	b.cc	40f428 <ferror@plt+0xc658>  // b.lo, b.ul, b.last
  40f47c:	b.ne	40f4b0 <ferror@plt+0xc6e0>  // b.any
  40f480:	ldr	w9, [x6, #4]
  40f484:	cmp	w2, w9
  40f488:	b.lt	40f428 <ferror@plt+0xc658>  // b.tstop
  40f48c:	cmp	w1, w8
  40f490:	b.cc	40f508 <ferror@plt+0xc738>  // b.lo, b.ul, b.last
  40f494:	b.eq	40f4f8 <ferror@plt+0xc728>  // b.none
  40f498:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40f49c:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40f4a0:	add	x2, x2, #0xaee
  40f4a4:	add	x0, x0, #0xab3
  40f4a8:	mov	w1, #0x1f3                 	// #499
  40f4ac:	bl	402de0 <ferror@plt+0x10>
  40f4b0:	cmp	w1, w8
  40f4b4:	b.hi	40f428 <ferror@plt+0xc658>  // b.pmore
  40f4b8:	b.cs	40f4dc <ferror@plt+0xc70c>  // b.hs, b.nlast
  40f4bc:	cmp	w9, w8
  40f4c0:	b.ne	40f508 <ferror@plt+0xc738>  // b.any
  40f4c4:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40f4c8:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40f4cc:	add	x2, x2, #0xaee
  40f4d0:	add	x0, x0, #0xab3
  40f4d4:	mov	w1, #0x207                 	// #519
  40f4d8:	bl	402de0 <ferror@plt+0x10>
  40f4dc:	b.eq	40f4f8 <ferror@plt+0xc728>  // b.none
  40f4e0:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40f4e4:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40f4e8:	add	x2, x2, #0xaee
  40f4ec:	add	x0, x0, #0xab3
  40f4f0:	mov	w1, #0x20b                 	// #523
  40f4f4:	bl	402de0 <ferror@plt+0x10>
  40f4f8:	ldr	w8, [x6, #12]
  40f4fc:	cmp	w2, w8
  40f500:	cset	w8, le
  40f504:	cbz	w8, 40f428 <ferror@plt+0xc658>
  40f508:	str	w0, [x5]
  40f50c:	strb	wzr, [x5, #4]
  40f510:	cbnz	w10, 40f550 <ferror@plt+0xc780>
  40f514:	mov	x6, #0x28                  	// #40
  40f518:	madd	x0, x0, x6, x7
  40f51c:	ldr	w6, [x0, #28]
  40f520:	cmp	w6, w1
  40f524:	b.ne	40f550 <ferror@plt+0xc780>  // b.any
  40f528:	ldr	w0, [x0, #32]
  40f52c:	cmp	w0, w2
  40f530:	b.ne	40f550 <ferror@plt+0xc780>  // b.any
  40f534:	mov	w0, #0x1                   	// #1
  40f538:	strb	w0, [x5, #4]
  40f53c:	mov	w0, #0x1                   	// #1
  40f540:	ldp	x29, x30, [sp], #16
  40f544:	ret
  40f548:	mov	w0, #0x0                   	// #0
  40f54c:	b	40f540 <ferror@plt+0xc770>
  40f550:	cmp	w2, w3
  40f554:	ccmp	w2, w4, #0x0, ge  // ge = tcont
  40f558:	cset	w0, le
  40f55c:	b	40f540 <ferror@plt+0xc770>
  40f560:	mov	w0, #0x0                   	// #0
  40f564:	ret
  40f568:	stp	x29, x30, [sp, #-16]!
  40f56c:	mov	x29, sp
  40f570:	b	40f44c <ferror@plt+0xc67c>
  40f574:	ldr	w2, [x0, #4]
  40f578:	ldr	w3, [x1, #4]
  40f57c:	subs	x2, x2, x3
  40f580:	b.ne	40f59c <ferror@plt+0xc7cc>  // b.any
  40f584:	ldr	w0, [x0]
  40f588:	ldr	w1, [x1]
  40f58c:	subs	x1, x0, x1
  40f590:	b.ne	40f5ac <ferror@plt+0xc7dc>  // b.any
  40f594:	mov	w0, #0x0                   	// #0
  40f598:	ret
  40f59c:	cmp	x2, #0x1
  40f5a0:	mov	w0, #0x1                   	// #1
  40f5a4:	cneg	w0, w0, lt  // lt = tstop
  40f5a8:	b	40f598 <ferror@plt+0xc7c8>
  40f5ac:	cmp	x1, #0x1
  40f5b0:	mov	w0, #0x1                   	// #1
  40f5b4:	b	40f5a4 <ferror@plt+0xc7d4>
  40f5b8:	ldr	w2, [x0]
  40f5bc:	ldr	w3, [x1]
  40f5c0:	subs	x2, x2, x3
  40f5c4:	b.ne	40f5e0 <ferror@plt+0xc810>  // b.any
  40f5c8:	ldr	w0, [x0, #4]
  40f5cc:	ldr	w1, [x1, #4]
  40f5d0:	subs	x1, x0, x1
  40f5d4:	b.ne	40f5f0 <ferror@plt+0xc820>  // b.any
  40f5d8:	mov	w0, #0x0                   	// #0
  40f5dc:	ret
  40f5e0:	cmp	x2, #0x1
  40f5e4:	mov	w0, #0x1                   	// #1
  40f5e8:	cneg	w0, w0, lt  // lt = tstop
  40f5ec:	b	40f5dc <ferror@plt+0xc80c>
  40f5f0:	cmp	x1, #0x1
  40f5f4:	mov	w0, #0x1                   	// #1
  40f5f8:	b	40f5e8 <ferror@plt+0xc818>
  40f5fc:	stp	x29, x30, [sp, #-32]!
  40f600:	mov	x29, sp
  40f604:	stp	x19, x20, [sp, #16]
  40f608:	mov	x20, x0
  40f60c:	mov	x19, x1
  40f610:	mov	x0, x1
  40f614:	bl	402700 <strlen@plt>
  40f618:	ldr	x3, [x20]
  40f61c:	mov	x1, x19
  40f620:	ldp	x19, x20, [sp, #16]
  40f624:	mov	x2, x0
  40f628:	ldp	x29, x30, [sp], #32
  40f62c:	ldrb	w0, [x3, #67]
  40f630:	b	40edb8 <ferror@plt+0xbfe8>
  40f634:	stp	x29, x30, [sp, #-32]!
  40f638:	mov	x29, sp
  40f63c:	str	x19, [sp, #16]
  40f640:	mov	x19, x0
  40f644:	add	x0, x0, #0x88
  40f648:	bl	40eef0 <ferror@plt+0xc120>
  40f64c:	ldr	x0, [x19, #128]
  40f650:	cbz	x0, 40f660 <ferror@plt+0xc890>
  40f654:	ldrsb	w1, [x0, #3]
  40f658:	tbz	w1, #31, 40f698 <ferror@plt+0xc8c8>
  40f65c:	str	wzr, [x0, #4]
  40f660:	ldr	x0, [x19, #120]
  40f664:	cbz	x0, 40f674 <ferror@plt+0xc8a4>
  40f668:	ldrsb	w1, [x0, #3]
  40f66c:	tbz	w1, #31, 40f6a0 <ferror@plt+0xc8d0>
  40f670:	str	wzr, [x0, #4]
  40f674:	ldr	w1, [x19, #68]
  40f678:	cmn	w1, #0x1
  40f67c:	b.eq	40f6a8 <ferror@plt+0xc8d8>  // b.none
  40f680:	ldr	x2, [x19, #56]
  40f684:	ldr	x1, [x19, #104]
  40f688:	ldr	x19, [sp, #16]
  40f68c:	ldp	x29, x30, [sp], #32
  40f690:	ldr	x0, [x2]
  40f694:	b	413938 <ferror@plt+0x10b68>
  40f698:	bl	402b30 <free@plt>
  40f69c:	b	40f660 <ferror@plt+0xc890>
  40f6a0:	bl	402b30 <free@plt>
  40f6a4:	b	40f674 <ferror@plt+0xc8a4>
  40f6a8:	ldr	x19, [sp, #16]
  40f6ac:	ldp	x29, x30, [sp], #32
  40f6b0:	ret
  40f6b4:	stp	x29, x30, [sp, #-64]!
  40f6b8:	and	w2, w2, #0xff
  40f6bc:	mov	x29, sp
  40f6c0:	stp	x23, x24, [sp, #48]
  40f6c4:	ldr	x23, [x0]
  40f6c8:	stp	x19, x20, [sp, #16]
  40f6cc:	mov	x20, x0
  40f6d0:	stp	x21, x22, [sp, #32]
  40f6d4:	cbz	x23, 40f6f4 <ferror@plt+0xc924>
  40f6d8:	ldp	w0, w21, [x23]
  40f6dc:	ubfx	x0, x0, #0, #31
  40f6e0:	sub	w0, w0, w21
  40f6e4:	cmp	w1, w0
  40f6e8:	b.hi	40f704 <ferror@plt+0xc934>  // b.pmore
  40f6ec:	mov	w19, #0x0                   	// #0
  40f6f0:	b	40f7a0 <ferror@plt+0xc9d0>
  40f6f4:	mov	w19, #0x0                   	// #0
  40f6f8:	cbz	w1, 40f7a0 <ferror@plt+0xc9d0>
  40f6fc:	mov	w21, #0x0                   	// #0
  40f700:	b	40f718 <ferror@plt+0xc948>
  40f704:	ldrsb	w0, [x23, #3]
  40f708:	tbz	w0, #31, 40f78c <ferror@plt+0xc9bc>
  40f70c:	add	w1, w1, w21
  40f710:	mov	w19, #0x1                   	// #1
  40f714:	str	xzr, [x20]
  40f718:	ldr	x0, [x20]
  40f71c:	bl	411438 <ferror@plt+0xe668>
  40f720:	mov	w22, w0
  40f724:	mov	w1, #0x28                  	// #40
  40f728:	mov	x0, #0x8                   	// #8
  40f72c:	umaddl	x1, w22, w1, x0
  40f730:	ldr	x0, [x20]
  40f734:	cbz	x0, 40f794 <ferror@plt+0xc9c4>
  40f738:	ldr	w24, [x0, #4]
  40f73c:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  40f740:	str	x0, [x20]
  40f744:	and	w22, w22, #0x7fffffff
  40f748:	stp	w22, w24, [x0]
  40f74c:	mov	x1, x0
  40f750:	cbz	w19, 40f7b8 <ferror@plt+0xc9e8>
  40f754:	mov	w2, w21
  40f758:	mov	x0, #0x8                   	// #8
  40f75c:	cbz	w2, 40f79c <ferror@plt+0xc9cc>
  40f760:	add	x6, x23, x0
  40f764:	add	x3, x1, x0
  40f768:	sub	w2, w2, #0x1
  40f76c:	add	x0, x0, #0x28
  40f770:	ldp	x4, x5, [x6]
  40f774:	stp	x4, x5, [x3]
  40f778:	ldp	x4, x5, [x6, #16]
  40f77c:	stp	x4, x5, [x3, #16]
  40f780:	ldr	x4, [x6, #32]
  40f784:	str	x4, [x3, #32]
  40f788:	b	40f75c <ferror@plt+0xc98c>
  40f78c:	mov	w19, #0x0                   	// #0
  40f790:	b	40f6fc <ferror@plt+0xc92c>
  40f794:	mov	w24, #0x0                   	// #0
  40f798:	b	40f73c <ferror@plt+0xc96c>
  40f79c:	str	w21, [x1, #4]
  40f7a0:	mov	w0, w19
  40f7a4:	ldp	x19, x20, [sp, #16]
  40f7a8:	ldp	x21, x22, [sp, #32]
  40f7ac:	ldp	x23, x24, [sp, #48]
  40f7b0:	ldp	x29, x30, [sp], #64
  40f7b4:	ret
  40f7b8:	mov	w19, #0x1                   	// #1
  40f7bc:	b	40f7a0 <ferror@plt+0xc9d0>
  40f7c0:	stp	x29, x30, [sp, #-224]!
  40f7c4:	mov	x29, sp
  40f7c8:	stp	x19, x20, [sp, #16]
  40f7cc:	mov	x19, x0
  40f7d0:	and	w0, w3, #0xff
  40f7d4:	stp	x21, x22, [sp, #32]
  40f7d8:	stp	x23, x24, [sp, #48]
  40f7dc:	stp	x25, x26, [sp, #64]
  40f7e0:	stp	x27, x28, [sp, #80]
  40f7e4:	stp	w2, w0, [sp, #120]
  40f7e8:	cbnz	x1, 40f804 <ferror@plt+0xca34>
  40f7ec:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40f7f0:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40f7f4:	add	x2, x2, #0xafd
  40f7f8:	add	x0, x0, #0xab3
  40f7fc:	mov	w1, #0x39f                 	// #927
  40f800:	bl	402de0 <ferror@plt+0x10>
  40f804:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  40f808:	mov	x20, x1
  40f80c:	ldr	w1, [x1]
  40f810:	ldr	x0, [x0, #2432]
  40f814:	bl	42bbd0 <ferror@plt+0x28e00>
  40f818:	mov	x26, x0
  40f81c:	lsr	x24, x0, #32
  40f820:	add	x8, sp, #0x80
  40f824:	mov	w1, #0x1                   	// #1
  40f828:	bl	417204 <ferror@plt+0x14434>
  40f82c:	add	x8, sp, #0xa0
  40f830:	mov	w0, w24
  40f834:	mov	w1, #0x2                   	// #2
  40f838:	ldr	w28, [sp, #136]
  40f83c:	bl	417204 <ferror@plt+0x14434>
  40f840:	ldr	w27, [sp, #168]
  40f844:	ldr	w0, [x20]
  40f848:	mov	w1, #0x0                   	// #0
  40f84c:	add	x8, sp, #0xc0
  40f850:	bl	417204 <ferror@plt+0x14434>
  40f854:	ldr	x1, [x19, #24]
  40f858:	ldr	x0, [sp, #128]
  40f85c:	cmp	x0, x1
  40f860:	b.eq	40f884 <ferror@plt+0xcab4>  // b.none
  40f864:	mov	w0, #0x0                   	// #0
  40f868:	ldp	x19, x20, [sp, #16]
  40f86c:	ldp	x21, x22, [sp, #32]
  40f870:	ldp	x23, x24, [sp, #48]
  40f874:	ldp	x25, x26, [sp, #64]
  40f878:	ldp	x27, x28, [sp, #80]
  40f87c:	ldp	x29, x30, [sp], #224
  40f880:	ret
  40f884:	ldr	x1, [sp, #160]
  40f888:	cmp	x0, x1
  40f88c:	b.ne	40f864 <ferror@plt+0xca94>  // b.any
  40f890:	ldr	w1, [x20, #4]
  40f894:	cbnz	w1, 40f8a4 <ferror@plt+0xcad4>
  40f898:	ldr	x2, [sp, #192]
  40f89c:	cmp	x0, x2
  40f8a0:	b.ne	40f864 <ferror@plt+0xca94>  // b.any
  40f8a4:	ldr	x0, [x19, #120]
  40f8a8:	ldr	w21, [sp, #200]
  40f8ac:	cbnz	x0, 40f9bc <ferror@plt+0xcbec>
  40f8b0:	ldr	w0, [x20, #4]
  40f8b4:	cmp	w28, w27
  40f8b8:	str	w0, [sp, #108]
  40f8bc:	ldr	x0, [x20, #8]
  40f8c0:	str	x0, [sp, #112]
  40f8c4:	ldr	w22, [sp, #204]
  40f8c8:	b.gt	40f8fc <ferror@plt+0xcb2c>
  40f8cc:	ldr	w1, [x19, #16]
  40f8d0:	mov	w0, w26
  40f8d4:	ldr	w25, [sp, #140]
  40f8d8:	ldr	w23, [sp, #172]
  40f8dc:	bl	40ef68 <ferror@plt+0xc198>
  40f8e0:	tst	w0, #0xff
  40f8e4:	b.eq	40f8fc <ferror@plt+0xcb2c>  // b.none
  40f8e8:	ldr	w1, [x19, #16]
  40f8ec:	mov	w0, w24
  40f8f0:	bl	40ef68 <ferror@plt+0xc198>
  40f8f4:	tst	w0, #0xff
  40f8f8:	b.ne	40f9ec <ferror@plt+0xcc1c>  // b.any
  40f8fc:	ldr	x0, [x19, #120]
  40f900:	cbnz	x0, 40f9e0 <ferror@plt+0xcc10>
  40f904:	mov	w23, w22
  40f908:	mov	w24, w21
  40f90c:	mov	w25, w22
  40f910:	mov	w26, w21
  40f914:	ldr	w0, [sp, #124]
  40f918:	cbz	w0, 40f960 <ferror@plt+0xcb90>
  40f91c:	mov	w1, w28
  40f920:	mov	x0, x19
  40f924:	bl	40f3a4 <ferror@plt+0xc5d4>
  40f928:	tst	w0, #0xff
  40f92c:	b.eq	40f864 <ferror@plt+0xca94>  // b.none
  40f930:	mov	w1, w27
  40f934:	mov	x0, x19
  40f938:	bl	40f3a4 <ferror@plt+0xc5d4>
  40f93c:	tst	w0, #0xff
  40f940:	b.eq	40f864 <ferror@plt+0xca94>  // b.none
  40f944:	ldr	w0, [x20, #4]
  40f948:	cbnz	w0, 40f960 <ferror@plt+0xcb90>
  40f94c:	mov	w1, w21
  40f950:	mov	x0, x19
  40f954:	bl	40f3a4 <ferror@plt+0xc5d4>
  40f958:	tst	w0, #0xff
  40f95c:	b.eq	40f864 <ferror@plt+0xca94>  // b.none
  40f960:	mov	w2, #0x0                   	// #0
  40f964:	mov	w1, #0x1                   	// #1
  40f968:	add	x0, x19, #0x78
  40f96c:	bl	40f6b4 <ferror@plt+0xc8e4>
  40f970:	ldr	x2, [x19, #120]
  40f974:	mov	w3, #0x28                  	// #40
  40f978:	ldr	w1, [x2, #4]
  40f97c:	add	w0, w1, #0x1
  40f980:	str	w0, [x2, #4]
  40f984:	mov	x0, #0x8                   	// #8
  40f988:	umaddl	x1, w1, w3, x0
  40f98c:	add	x0, x2, x1
  40f990:	str	w26, [x2, x1]
  40f994:	ldr	w1, [sp, #108]
  40f998:	stp	w23, w1, [x0, #12]
  40f99c:	ldr	w1, [sp, #120]
  40f9a0:	str	w1, [x0, #28]
  40f9a4:	ldr	x1, [sp, #112]
  40f9a8:	stp	w25, w24, [x0, #4]
  40f9ac:	stp	w21, w22, [x0, #20]
  40f9b0:	str	x1, [x0, #32]
  40f9b4:	mov	w0, #0x1                   	// #1
  40f9b8:	b	40f868 <ferror@plt+0xca98>
  40f9bc:	ldr	w0, [x0, #4]
  40f9c0:	cbz	w0, 40f8b0 <ferror@plt+0xcae0>
  40f9c4:	cbnz	w1, 40f8b0 <ferror@plt+0xcae0>
  40f9c8:	ldr	w1, [x19, #16]
  40f9cc:	ldr	w0, [x20]
  40f9d0:	bl	40ef68 <ferror@plt+0xc198>
  40f9d4:	tst	w0, #0xff
  40f9d8:	b.ne	40f8b0 <ferror@plt+0xcae0>  // b.any
  40f9dc:	b	40f864 <ferror@plt+0xca94>
  40f9e0:	ldr	w0, [x0, #4]
  40f9e4:	cbz	w0, 40f904 <ferror@plt+0xcb34>
  40f9e8:	b	40f864 <ferror@plt+0xca94>
  40f9ec:	mov	w24, w27
  40f9f0:	mov	w26, w28
  40f9f4:	b	40f914 <ferror@plt+0xcb44>
  40f9f8:	stp	x29, x30, [sp, #-64]!
  40f9fc:	and	w2, w2, #0xff
  40fa00:	mov	x29, sp
  40fa04:	stp	x23, x24, [sp, #48]
  40fa08:	ldr	x23, [x0]
  40fa0c:	stp	x19, x20, [sp, #16]
  40fa10:	mov	x20, x0
  40fa14:	stp	x21, x22, [sp, #32]
  40fa18:	cbz	x23, 40fa38 <ferror@plt+0xcc68>
  40fa1c:	ldp	w0, w21, [x23]
  40fa20:	ubfx	x0, x0, #0, #31
  40fa24:	sub	w0, w0, w21
  40fa28:	cmp	w1, w0
  40fa2c:	b.hi	40fa48 <ferror@plt+0xcc78>  // b.pmore
  40fa30:	mov	w19, #0x0                   	// #0
  40fa34:	b	40facc <ferror@plt+0xccfc>
  40fa38:	mov	w19, #0x0                   	// #0
  40fa3c:	cbz	w1, 40facc <ferror@plt+0xccfc>
  40fa40:	mov	w21, #0x0                   	// #0
  40fa44:	b	40fa5c <ferror@plt+0xcc8c>
  40fa48:	ldrsb	w0, [x23, #3]
  40fa4c:	tbz	w0, #31, 40fab8 <ferror@plt+0xcce8>
  40fa50:	add	w1, w1, w21
  40fa54:	mov	w19, #0x1                   	// #1
  40fa58:	str	xzr, [x20]
  40fa5c:	ldr	x0, [x20]
  40fa60:	bl	411438 <ferror@plt+0xe668>
  40fa64:	mov	w22, w0
  40fa68:	ldr	x0, [x20]
  40fa6c:	ubfiz	x1, x22, #3, #32
  40fa70:	add	x1, x1, #0x8
  40fa74:	cbz	x0, 40fac0 <ferror@plt+0xccf0>
  40fa78:	ldr	w24, [x0, #4]
  40fa7c:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  40fa80:	str	x0, [x20]
  40fa84:	and	w22, w22, #0x7fffffff
  40fa88:	stp	w22, w24, [x0]
  40fa8c:	mov	x1, x0
  40fa90:	cbz	w19, 40fae4 <ferror@plt+0xcd14>
  40fa94:	mov	w3, w21
  40fa98:	mov	x0, #0x0                   	// #0
  40fa9c:	add	x2, x0, #0x1
  40faa0:	cmp	x0, x3
  40faa4:	b.eq	40fac8 <ferror@plt+0xccf8>  // b.none
  40faa8:	ldr	x0, [x23, x2, lsl #3]
  40faac:	str	x0, [x1, x2, lsl #3]
  40fab0:	mov	x0, x2
  40fab4:	b	40fa9c <ferror@plt+0xcccc>
  40fab8:	mov	w19, #0x0                   	// #0
  40fabc:	b	40fa40 <ferror@plt+0xcc70>
  40fac0:	mov	w24, #0x0                   	// #0
  40fac4:	b	40fa7c <ferror@plt+0xccac>
  40fac8:	str	w21, [x1, #4]
  40facc:	mov	w0, w19
  40fad0:	ldp	x19, x20, [sp, #16]
  40fad4:	ldp	x21, x22, [sp, #32]
  40fad8:	ldp	x23, x24, [sp, #48]
  40fadc:	ldp	x29, x30, [sp], #64
  40fae0:	ret
  40fae4:	mov	w19, #0x1                   	// #1
  40fae8:	b	40facc <ferror@plt+0xccfc>
  40faec:	stp	x29, x30, [sp, #-32]!
  40faf0:	mov	w2, #0x0                   	// #0
  40faf4:	mov	x29, sp
  40faf8:	stp	x19, x20, [sp, #16]
  40fafc:	mov	x20, x0
  40fb00:	mov	x19, x1
  40fb04:	mov	w1, #0x1                   	// #1
  40fb08:	bl	40f9f8 <ferror@plt+0xcc28>
  40fb0c:	ldr	x2, [x20]
  40fb10:	ldr	x3, [x19]
  40fb14:	ldr	w1, [x2, #4]
  40fb18:	ldp	x19, x20, [sp, #16]
  40fb1c:	add	w0, w1, #0x1
  40fb20:	ubfiz	x1, x1, #3, #32
  40fb24:	str	w0, [x2, #4]
  40fb28:	add	x0, x1, #0x8
  40fb2c:	str	x3, [x2, x0]
  40fb30:	add	x0, x2, x0
  40fb34:	ldp	x29, x30, [sp], #32
  40fb38:	ret
  40fb3c:	stp	x29, x30, [sp, #-144]!
  40fb40:	mov	x29, sp
  40fb44:	stp	x19, x20, [sp, #16]
  40fb48:	mov	x19, x0
  40fb4c:	mov	x20, x1
  40fb50:	stp	x21, x22, [sp, #32]
  40fb54:	mov	x21, x2
  40fb58:	stp	x23, x24, [sp, #48]
  40fb5c:	mov	w23, w3
  40fb60:	stp	x25, x26, [sp, #64]
  40fb64:	ldr	x0, [x1]
  40fb68:	stp	x1, x0, [x19]
  40fb6c:	mov	x0, x2
  40fb70:	mov	w1, #0x0                   	// #0
  40fb74:	str	x27, [sp, #80]
  40fb78:	bl	42cc6c <ferror@plt+0x29e9c>
  40fb7c:	ldr	w0, [x0]
  40fb80:	str	w0, [x19, #16]
  40fb84:	add	x8, x19, #0x18
  40fb88:	mov	x0, x21
  40fb8c:	mov	w1, #0x0                   	// #0
  40fb90:	bl	42cc94 <ferror@plt+0x29ec4>
  40fb94:	str	x20, [x19, #56]
  40fb98:	mov	w0, #0xffffffff            	// #-1
  40fb9c:	stp	w23, w0, [x19, #64]
  40fba0:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40fba4:	mov	x0, x20
  40fba8:	add	x1, x1, #0xa14
  40fbac:	bl	40f5fc <ferror@plt+0xc82c>
  40fbb0:	str	x0, [x19, #72]
  40fbb4:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40fbb8:	ldr	x0, [x19, #56]
  40fbbc:	add	x1, x1, #0xa24
  40fbc0:	bl	40f5fc <ferror@plt+0xc82c>
  40fbc4:	str	x0, [x19, #80]
  40fbc8:	ldr	x0, [x19, #56]
  40fbcc:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40fbd0:	add	x1, x1, #0xa3d
  40fbd4:	bl	40f5fc <ferror@plt+0xc82c>
  40fbd8:	str	x0, [x19, #88]
  40fbdc:	ldr	x0, [x19, #56]
  40fbe0:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40fbe4:	add	x1, x1, #0xa4a
  40fbe8:	bl	40f5fc <ferror@plt+0xc82c>
  40fbec:	str	x0, [x19, #96]
  40fbf0:	ldr	x0, [x20]
  40fbf4:	ldrb	w0, [x0, #67]
  40fbf8:	bl	40ee38 <ferror@plt+0xc068>
  40fbfc:	str	xzr, [x19, #120]
  40fc00:	ldurh	w1, [x20, #221]
  40fc04:	strh	w1, [x19, #112]
  40fc08:	ldr	w1, [x21, #8]
  40fc0c:	str	x0, [x19, #104]
  40fc10:	ldrb	w0, [x20, #223]
  40fc14:	strb	w0, [x19, #114]
  40fc18:	cbz	w1, 40fc28 <ferror@plt+0xce58>
  40fc1c:	add	x0, x19, #0x78
  40fc20:	mov	w2, #0x1                   	// #1
  40fc24:	bl	40f6b4 <ferror@plt+0xc8e4>
  40fc28:	ldr	w1, [x21, #120]
  40fc2c:	add	x23, x19, #0x80
  40fc30:	str	xzr, [x19, #128]
  40fc34:	cbz	w1, 40fc44 <ferror@plt+0xce74>
  40fc38:	mov	x0, x23
  40fc3c:	mov	w2, #0x1                   	// #1
  40fc40:	bl	411460 <ferror@plt+0xe690>
  40fc44:	ldr	w1, [x21, #8]
  40fc48:	add	x22, x19, #0x88
  40fc4c:	str	xzr, [x19, #136]
  40fc50:	adds	w1, w1, #0x1
  40fc54:	b.eq	40fc64 <ferror@plt+0xce94>  // b.none
  40fc58:	mov	x0, x22
  40fc5c:	mov	w2, #0x1                   	// #1
  40fc60:	bl	40f9f8 <ferror@plt+0xcc28>
  40fc64:	mov	w24, #0x0                   	// #0
  40fc68:	str	xzr, [x19, #144]
  40fc6c:	ldr	w0, [x21, #8]
  40fc70:	cmp	w24, w0
  40fc74:	b.cs	40fca0 <ferror@plt+0xced0>  // b.hs, b.nlast
  40fc78:	mov	w1, w24
  40fc7c:	mov	x0, x21
  40fc80:	bl	42cc6c <ferror@plt+0x29e9c>
  40fc84:	mov	x1, x0
  40fc88:	mov	w2, w24
  40fc8c:	mov	x0, x19
  40fc90:	mov	w3, #0x0                   	// #0
  40fc94:	add	w24, w24, #0x1
  40fc98:	bl	40f7c0 <ferror@plt+0xc9f0>
  40fc9c:	b	40fc6c <ferror@plt+0xce9c>
  40fca0:	add	x24, x21, #0x78
  40fca4:	mov	w26, #0x0                   	// #0
  40fca8:	mov	x25, #0xfffffffffffffff0    	// #-16
  40fcac:	ldr	w0, [x21, #120]
  40fcb0:	cmp	w26, w0
  40fcb4:	b.cs	40fd48 <ferror@plt+0xcf78>  // b.hs, b.nlast
  40fcb8:	sxtw	x0, w26
  40fcbc:	cmp	w26, #0x1
  40fcc0:	b.gt	40fd38 <ferror@plt+0xcf68>
  40fcc4:	add	x0, x0, #0x1
  40fcc8:	add	x0, x24, x0, lsl #3
  40fccc:	ldr	x27, [x0]
  40fcd0:	add	x8, sp, #0x70
  40fcd4:	ldr	w0, [x27]
  40fcd8:	bl	417064 <ferror@plt+0x14294>
  40fcdc:	ldr	x0, [x19, #24]
  40fce0:	ldr	x1, [sp, #112]
  40fce4:	cmp	x1, x0
  40fce8:	b.ne	40fd30 <ferror@plt+0xcf60>  // b.any
  40fcec:	ldr	w0, [x27, #4]
  40fcf0:	add	x8, sp, #0x70
  40fcf4:	bl	417064 <ferror@plt+0x14294>
  40fcf8:	ldr	x0, [x19, #24]
  40fcfc:	ldr	x1, [sp, #112]
  40fd00:	cmp	x1, x0
  40fd04:	b.ne	40fd30 <ferror@plt+0xcf60>  // b.any
  40fd08:	mov	w2, #0x0                   	// #0
  40fd0c:	mov	w1, #0x1                   	// #1
  40fd10:	mov	x0, x23
  40fd14:	bl	411460 <ferror@plt+0xe690>
  40fd18:	ldr	x1, [x19, #128]
  40fd1c:	ldr	w0, [x1, #4]
  40fd20:	add	w2, w0, #0x1
  40fd24:	str	w2, [x1, #4]
  40fd28:	add	x0, x1, w0, uxtw #3
  40fd2c:	str	x27, [x0, #8]
  40fd30:	add	w26, w26, #0x1
  40fd34:	b	40fcac <ferror@plt+0xcedc>
  40fd38:	ldr	x1, [x24, #32]
  40fd3c:	add	x0, x25, w26, sxtw #3
  40fd40:	add	x0, x1, x0
  40fd44:	b	40fccc <ferror@plt+0xcefc>
  40fd48:	ldr	x0, [x19, #128]
  40fd4c:	cbz	x0, 40fd74 <ferror@plt+0xcfa4>
  40fd50:	ldr	w1, [x0, #4]
  40fd54:	cmp	w1, #0x1
  40fd58:	b.ls	40fd74 <ferror@plt+0xcfa4>  // b.plast
  40fd5c:	adrp	x3, 40e000 <ferror@plt+0xb230>
  40fd60:	mov	x2, #0x8                   	// #8
  40fd64:	add	x3, x3, #0xed8
  40fd68:	mov	w1, w1
  40fd6c:	add	x0, x0, x2
  40fd70:	bl	419474 <ferror@plt+0x166a4>
  40fd74:	ldr	x0, [x19, #136]
  40fd78:	cbz	x0, 40fd9c <ferror@plt+0xcfcc>
  40fd7c:	ldr	w0, [x0, #4]
  40fd80:	cbz	w0, 40fd9c <ferror@plt+0xcfcc>
  40fd84:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40fd88:	add	x2, x2, #0xb16
  40fd8c:	mov	w1, #0x49b                 	// #1179
  40fd90:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40fd94:	add	x0, x0, #0xab3
  40fd98:	bl	402de0 <ferror@plt+0x10>
  40fd9c:	ldr	x0, [x19, #120]
  40fda0:	cbz	x0, 40fe14 <ferror@plt+0xd044>
  40fda4:	ldr	w1, [x0, #4]
  40fda8:	str	xzr, [sp, #104]
  40fdac:	adds	w1, w1, #0x1
  40fdb0:	b.eq	40fdc0 <ferror@plt+0xcff0>  // b.none
  40fdb4:	add	x0, sp, #0x68
  40fdb8:	mov	w2, #0x1                   	// #1
  40fdbc:	bl	40f9f8 <ferror@plt+0xcc28>
  40fdc0:	ldr	w0, [x19, #32]
  40fdc4:	add	x1, sp, #0x70
  40fdc8:	mov	w21, #0x0                   	// #0
  40fdcc:	mov	w23, #0x28                  	// #40
  40fdd0:	stp	w0, w0, [sp, #112]
  40fdd4:	add	x0, sp, #0x68
  40fdd8:	bl	40faec <ferror@plt+0xcd1c>
  40fddc:	ldr	x0, [x19, #120]
  40fde0:	cbz	x0, 40fe34 <ferror@plt+0xd064>
  40fde4:	ldr	w1, [x0, #4]
  40fde8:	cmp	w21, w1
  40fdec:	b.cs	40fe34 <ferror@plt+0xd064>  // b.hs, b.nlast
  40fdf0:	umaddl	x0, w21, w23, x0
  40fdf4:	ldr	w1, [x0, #8]
  40fdf8:	ldr	w0, [x0, #16]
  40fdfc:	cmp	w1, w0
  40fe00:	b.ls	40fe1c <ferror@plt+0xd04c>  // b.plast
  40fe04:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40fe08:	mov	w1, #0x4a4                 	// #1188
  40fe0c:	add	x2, x2, #0xb16
  40fe10:	b	40fd90 <ferror@plt+0xcfc0>
  40fe14:	mov	w1, #0x0                   	// #0
  40fe18:	b	40fda8 <ferror@plt+0xcfd8>
  40fe1c:	add	w21, w21, #0x1
  40fe20:	stp	w1, w0, [sp, #112]
  40fe24:	add	x1, sp, #0x70
  40fe28:	add	x0, sp, #0x68
  40fe2c:	bl	40faec <ferror@plt+0xcd1c>
  40fe30:	b	40fddc <ferror@plt+0xd00c>
  40fe34:	mov	w23, #0x0                   	// #0
  40fe38:	ldr	x0, [x19, #128]
  40fe3c:	cbz	x0, 40fed4 <ferror@plt+0xd104>
  40fe40:	ldr	w1, [x0, #4]
  40fe44:	cmp	w1, w23
  40fe48:	b.ls	40fed4 <ferror@plt+0xd104>  // b.plast
  40fe4c:	add	x0, x0, w23, uxtw #3
  40fe50:	ldr	x24, [x0, #8]
  40fe54:	cbnz	x24, 40fe68 <ferror@plt+0xd098>
  40fe58:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40fe5c:	mov	w1, #0x4ad                 	// #1197
  40fe60:	add	x2, x2, #0xb16
  40fe64:	b	40fd90 <ferror@plt+0xcfc0>
  40fe68:	ldr	w0, [x24]
  40fe6c:	add	x8, sp, #0x70
  40fe70:	bl	417064 <ferror@plt+0x14294>
  40fe74:	ldr	w21, [sp, #120]
  40fe78:	mov	x0, x24
  40fe7c:	bl	42d0fc <ferror@plt+0x2a32c>
  40fe80:	tst	w0, #0xff
  40fe84:	b.eq	40fe94 <ferror@plt+0xd0c4>  // b.none
  40fe88:	cmp	w21, #0x1
  40fe8c:	cset	w0, gt
  40fe90:	sub	w21, w21, w0
  40fe94:	ldr	w0, [x24, #4]
  40fe98:	add	x8, sp, #0x70
  40fe9c:	bl	417064 <ferror@plt+0x14294>
  40fea0:	ldr	w0, [sp, #120]
  40fea4:	cmp	w21, w0
  40fea8:	b.ls	40febc <ferror@plt+0xd0ec>  // b.plast
  40feac:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40feb0:	mov	w1, #0xa5                  	// #165
  40feb4:	add	x2, x2, #0xb2b
  40feb8:	b	40fd90 <ferror@plt+0xcfc0>
  40febc:	add	x1, sp, #0x70
  40fec0:	add	w23, w23, #0x1
  40fec4:	stp	w21, w0, [sp, #112]
  40fec8:	add	x0, sp, #0x68
  40fecc:	bl	40faec <ferror@plt+0xcd1c>
  40fed0:	b	40fe38 <ferror@plt+0xd068>
  40fed4:	ldr	x0, [sp, #104]
  40fed8:	cbz	x0, 40ff00 <ferror@plt+0xd130>
  40fedc:	ldr	w1, [x0, #4]
  40fee0:	cmp	w1, #0x1
  40fee4:	b.ls	40ff00 <ferror@plt+0xd130>  // b.plast
  40fee8:	adrp	x3, 40f000 <ferror@plt+0xc230>
  40feec:	mov	x2, #0x8                   	// #8
  40fef0:	add	x3, x3, #0x5b8
  40fef4:	mov	w1, w1
  40fef8:	add	x0, x0, x2
  40fefc:	bl	419474 <ferror@plt+0x166a4>
  40ff00:	ldr	x1, [sp, #104]
  40ff04:	cbz	x1, 40ff10 <ferror@plt+0xd140>
  40ff08:	ldr	w0, [x1, #4]
  40ff0c:	cbnz	w0, 40ff20 <ferror@plt+0xd150>
  40ff10:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40ff14:	mov	w1, #0x4b6                 	// #1206
  40ff18:	add	x2, x2, #0xb16
  40ff1c:	b	40fd90 <ferror@plt+0xcfc0>
  40ff20:	mov	w21, #0x1                   	// #1
  40ff24:	add	x1, x1, #0x8
  40ff28:	mov	x0, x22
  40ff2c:	bl	40faec <ferror@plt+0xcd1c>
  40ff30:	ldr	x3, [sp, #104]
  40ff34:	ldr	x0, [x19, #136]
  40ff38:	cbz	x3, 40ffd0 <ferror@plt+0xd200>
  40ff3c:	ldr	w1, [x3, #4]
  40ff40:	cmp	w1, w21
  40ff44:	b.ls	40ffd0 <ferror@plt+0xd200>  // b.plast
  40ff48:	cbz	x0, 40ff80 <ferror@plt+0xd1b0>
  40ff4c:	ldr	w2, [x0, #4]
  40ff50:	sub	w2, w2, #0x1
  40ff54:	add	x5, x3, w21, uxtw #3
  40ff58:	mov	w1, w21
  40ff5c:	add	x0, x0, x2, lsl #3
  40ff60:	ldr	w6, [x5, #8]
  40ff64:	ldr	w2, [x0, #8]
  40ff68:	cmp	w6, w2
  40ff6c:	b.cs	40ff88 <ferror@plt+0xd1b8>  // b.hs, b.nlast
  40ff70:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40ff74:	mov	w1, #0x4bc                 	// #1212
  40ff78:	add	x2, x2, #0xb16
  40ff7c:	b	40fd90 <ferror@plt+0xcfc0>
  40ff80:	mov	w2, #0x0                   	// #0
  40ff84:	b	40ff50 <ferror@plt+0xd180>
  40ff88:	ldr	w4, [x0, #12]
  40ff8c:	ldrb	w7, [x19, #114]
  40ff90:	mov	w2, w4
  40ff94:	add	x2, x2, #0x1
  40ff98:	add	x2, x2, x7
  40ff9c:	cmp	x2, w6, uxtw
  40ffa0:	b.lt	40ffbc <ferror@plt+0xd1ec>  // b.tstop
  40ffa4:	ldr	w1, [x5, #12]
  40ffa8:	cmp	w4, w1
  40ffac:	b.cs	40ffb4 <ferror@plt+0xd1e4>  // b.hs, b.nlast
  40ffb0:	str	w1, [x0, #12]
  40ffb4:	add	w21, w21, #0x1
  40ffb8:	b	40ff30 <ferror@plt+0xd160>
  40ffbc:	add	x1, x1, #0x1
  40ffc0:	mov	x0, x22
  40ffc4:	add	x1, x3, x1, lsl #3
  40ffc8:	bl	40faec <ferror@plt+0xcd1c>
  40ffcc:	b	40ffb4 <ferror@plt+0xd1e4>
  40ffd0:	cbz	x0, 410008 <ferror@plt+0xd238>
  40ffd4:	ldr	w4, [x0, #4]
  40ffd8:	cbz	w4, 410008 <ferror@plt+0xd238>
  40ffdc:	add	x0, x0, #0x8
  40ffe0:	mov	w2, #0x1                   	// #1
  40ffe4:	cmp	w4, w2
  40ffe8:	b.eq	410074 <ferror@plt+0xd2a4>  // b.none
  40ffec:	ldp	w5, w1, [x0]
  40fff0:	cmp	w5, w1
  40fff4:	b.ls	410018 <ferror@plt+0xd248>  // b.plast
  40fff8:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  40fffc:	mov	w1, #0x4d3                 	// #1235
  410000:	add	x2, x2, #0xb16
  410004:	b	40fd90 <ferror@plt+0xcfc0>
  410008:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  41000c:	mov	w1, #0x4cd                 	// #1229
  410010:	add	x2, x2, #0xb16
  410014:	b	40fd90 <ferror@plt+0xcfc0>
  410018:	ldp	w3, w6, [x0, #8]
  41001c:	cmp	w3, w6
  410020:	b.ls	410034 <ferror@plt+0xd264>  // b.plast
  410024:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  410028:	mov	w1, #0x4d4                 	// #1236
  41002c:	add	x2, x2, #0xb16
  410030:	b	40fd90 <ferror@plt+0xcfc0>
  410034:	cmp	w5, w3
  410038:	b.cc	41004c <ferror@plt+0xd27c>  // b.lo, b.ul, b.last
  41003c:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  410040:	mov	w1, #0x4d6                 	// #1238
  410044:	add	x2, x2, #0xb16
  410048:	b	40fd90 <ferror@plt+0xcfc0>
  41004c:	add	w1, w1, #0x1
  410050:	add	x0, x0, #0x8
  410054:	cmp	w3, w1
  410058:	b.hi	41006c <ferror@plt+0xd29c>  // b.pmore
  41005c:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  410060:	mov	w1, #0x4d8                 	// #1240
  410064:	add	x2, x2, #0xb16
  410068:	b	40fd90 <ferror@plt+0xcfc0>
  41006c:	add	w2, w2, #0x1
  410070:	b	40ffe4 <ferror@plt+0xd214>
  410074:	add	x0, sp, #0x68
  410078:	bl	40eef0 <ferror@plt+0xc120>
  41007c:	ldr	x1, [x19, #136]
  410080:	cbz	x1, 41008c <ferror@plt+0xd2bc>
  410084:	ldr	w0, [x1, #4]
  410088:	cbnz	w0, 41009c <ferror@plt+0xd2cc>
  41008c:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  410090:	mov	w1, #0x36a                 	// #874
  410094:	add	x2, x2, #0xb35
  410098:	b	40fd90 <ferror@plt+0xcfc0>
  41009c:	sub	w0, w0, #0x1
  4100a0:	add	x0, x1, x0, lsl #3
  4100a4:	ldr	w0, [x0, #12]
  4100a8:	cmp	w0, #0x0
  4100ac:	csel	w0, w0, wzr, ge  // ge = tcont
  4100b0:	bl	40e2a0 <ferror@plt+0xb4d0>
  4100b4:	str	w0, [x19, #144]
  4100b8:	ldr	x1, [x19, #136]
  4100bc:	cbz	x1, 4100dc <ferror@plt+0xd30c>
  4100c0:	ldr	w1, [x1, #4]
  4100c4:	cmp	w1, #0x1
  4100c8:	b.ls	4100dc <ferror@plt+0xd30c>  // b.plast
  4100cc:	cmp	w0, #0x3
  4100d0:	mov	w1, #0x3                   	// #3
  4100d4:	csel	w0, w0, w1, ge  // ge = tcont
  4100d8:	str	w0, [x19, #144]
  4100dc:	ldr	w0, [x19, #144]
  4100e0:	ldr	w1, [x20, #224]
  4100e4:	cmp	w1, w0
  4100e8:	b.le	4100f0 <ferror@plt+0xd320>
  4100ec:	sub	w0, w1, #0x1
  4100f0:	str	w0, [x19, #144]
  4100f4:	ldr	x0, [x19]
  4100f8:	ldr	w1, [x19, #32]
  4100fc:	ldrsw	x21, [x0, #112]
  410100:	ldr	x0, [x19, #24]
  410104:	bl	417c50 <ferror@plt+0x14e80>
  410108:	cbz	x0, 410170 <ferror@plt+0xd3a0>
  41010c:	ldrsw	x0, [x19, #36]
  410110:	cmp	x1, x0
  410114:	b.cc	410170 <ferror@plt+0xd3a0>  // b.lo, b.ul, b.last
  410118:	ldrb	w2, [x19, #114]
  41011c:	cbz	w2, 41012c <ferror@plt+0xd35c>
  410120:	ldr	w2, [x19, #144]
  410124:	add	w2, w2, #0x2
  410128:	add	x0, x0, w2, sxtw
  41012c:	sub	x2, x1, x0
  410130:	mov	x3, #0xa                   	// #10
  410134:	cmp	x2, #0xa
  410138:	csel	x2, x2, x3, cc  // cc = lo, ul, last
  41013c:	cmp	x1, x21
  410140:	b.cc	410158 <ferror@plt+0xd388>  // b.lo, b.ul, b.last
  410144:	sub	x2, x21, x2
  410148:	cmp	x0, x2
  41014c:	b.ls	410158 <ferror@plt+0xd388>  // b.plast
  410150:	sub	w0, w0, w2
  410154:	str	w0, [x19, #148]
  410158:	ldr	w0, [x19, #148]
  41015c:	tbz	w0, #31, 410170 <ferror@plt+0xd3a0>
  410160:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  410164:	mov	w1, #0x386                 	// #902
  410168:	add	x2, x2, #0xb35
  41016c:	b	40fd90 <ferror@plt+0xcfc0>
  410170:	ldrb	w0, [x20, #228]
  410174:	cbz	w0, 41029c <ferror@plt+0xd4cc>
  410178:	ldr	w0, [x19, #148]
  41017c:	add	w21, w0, w21
  410180:	cmp	w21, #0x63
  410184:	b.le	4101f0 <ferror@plt+0xd420>
  410188:	mov	x0, x19
  41018c:	mov	w1, #0x20                  	// #32
  410190:	bl	40f0bc <ferror@plt+0xc2ec>
  410194:	mov	w22, #0xa                   	// #10
  410198:	ldr	x0, [x19, #8]
  41019c:	mov	w1, #0x20                  	// #32
  4101a0:	mov	w23, #0x64                  	// #100
  4101a4:	bl	41358c <ferror@plt+0x107bc>
  4101a8:	ldr	w20, [x19, #148]
  4101ac:	add	w20, w20, #0x1
  4101b0:	cmp	w21, w20
  4101b4:	ldr	x0, [x19, #8]
  4101b8:	b.lt	4101ec <ferror@plt+0xd41c>  // b.tstop
  4101bc:	sdiv	w1, w20, w22
  4101c0:	msub	w1, w1, w22, w20
  4101c4:	cbnz	w1, 4101e4 <ferror@plt+0xd414>
  4101c8:	sdiv	w2, w20, w23
  4101cc:	sdiv	w1, w2, w22
  4101d0:	msub	w1, w1, w22, w2
  4101d4:	add	w1, w1, #0x30
  4101d8:	add	w20, w20, #0x1
  4101dc:	bl	41358c <ferror@plt+0x107bc>
  4101e0:	b	4101b0 <ferror@plt+0xd3e0>
  4101e4:	mov	w1, #0x20                  	// #32
  4101e8:	b	4101d8 <ferror@plt+0xd408>
  4101ec:	bl	413530 <ferror@plt+0x10760>
  4101f0:	mov	x0, x19
  4101f4:	mov	w1, #0x20                  	// #32
  4101f8:	bl	40f0bc <ferror@plt+0xc2ec>
  4101fc:	mov	w22, #0xa                   	// #10
  410200:	ldr	x0, [x19, #8]
  410204:	mov	w1, #0x20                  	// #32
  410208:	bl	41358c <ferror@plt+0x107bc>
  41020c:	ldr	w20, [x19, #148]
  410210:	add	w20, w20, #0x1
  410214:	cmp	w21, w20
  410218:	ldr	x0, [x19, #8]
  41021c:	b.lt	41024c <ferror@plt+0xd47c>  // b.tstop
  410220:	sdiv	w2, w20, w22
  410224:	msub	w1, w2, w22, w20
  410228:	cbnz	w1, 410244 <ferror@plt+0xd474>
  41022c:	sdiv	w1, w2, w22
  410230:	msub	w1, w1, w22, w2
  410234:	add	w1, w1, #0x30
  410238:	add	w20, w20, #0x1
  41023c:	bl	41358c <ferror@plt+0x107bc>
  410240:	b	410214 <ferror@plt+0xd444>
  410244:	mov	w1, #0x20                  	// #32
  410248:	b	410238 <ferror@plt+0xd468>
  41024c:	bl	413530 <ferror@plt+0x10760>
  410250:	mov	w22, #0xa                   	// #10
  410254:	mov	x0, x19
  410258:	mov	w1, #0x20                  	// #32
  41025c:	bl	40f0bc <ferror@plt+0xc2ec>
  410260:	ldr	x0, [x19, #8]
  410264:	mov	w1, #0x20                  	// #32
  410268:	bl	41358c <ferror@plt+0x107bc>
  41026c:	ldr	w20, [x19, #148]
  410270:	add	w20, w20, #0x1
  410274:	cmp	w21, w20
  410278:	ldr	x0, [x19, #8]
  41027c:	b.lt	410298 <ferror@plt+0xd4c8>  // b.tstop
  410280:	sdiv	w1, w20, w22
  410284:	msub	w1, w1, w22, w20
  410288:	add	w20, w20, #0x1
  41028c:	add	w1, w1, #0x30
  410290:	bl	41358c <ferror@plt+0x107bc>
  410294:	b	410274 <ferror@plt+0xd4a4>
  410298:	bl	413530 <ferror@plt+0x10760>
  41029c:	ldp	x19, x20, [sp, #16]
  4102a0:	ldp	x21, x22, [sp, #32]
  4102a4:	ldp	x23, x24, [sp, #48]
  4102a8:	ldp	x25, x26, [sp, #64]
  4102ac:	ldr	x27, [sp, #80]
  4102b0:	ldp	x29, x30, [sp], #144
  4102b4:	ret
  4102b8:	stp	x29, x30, [sp, #-224]!
  4102bc:	mov	x2, x0
  4102c0:	mov	w3, #0x4                   	// #4
  4102c4:	mov	x29, sp
  4102c8:	stp	x19, x20, [sp, #16]
  4102cc:	mov	x20, x0
  4102d0:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  4102d4:	stp	x21, x22, [sp, #32]
  4102d8:	mov	w21, w1
  4102dc:	mov	w22, #0x1                   	// #1
  4102e0:	ldr	x1, [x0, #960]
  4102e4:	add	x0, sp, #0x48
  4102e8:	bl	40fb3c <ferror@plt+0xcd6c>
  4102ec:	stp	w21, w22, [sp, #56]
  4102f0:	mov	w3, w22
  4102f4:	add	x1, sp, #0x38
  4102f8:	add	x0, sp, #0x48
  4102fc:	mov	w2, #0x0                   	// #0
  410300:	bl	40f7c0 <ferror@plt+0xc9f0>
  410304:	mov	w19, w0
  410308:	tst	w0, #0xff
  41030c:	b.eq	410324 <ferror@plt+0xd554>  // b.none
  410310:	mov	w2, w22
  410314:	mov	w1, w21
  410318:	mov	x0, x20
  41031c:	mov	x3, #0x0                   	// #0
  410320:	bl	42cd2c <ferror@plt+0x29f5c>
  410324:	add	x0, sp, #0x48
  410328:	bl	40f634 <ferror@plt+0xc864>
  41032c:	mov	w0, w19
  410330:	ldp	x19, x20, [sp, #16]
  410334:	ldp	x21, x22, [sp, #32]
  410338:	ldp	x29, x30, [sp], #224
  41033c:	ret
  410340:	stp	x29, x30, [sp, #-464]!
  410344:	mov	x29, sp
  410348:	stp	x19, x20, [sp, #16]
  41034c:	mov	x20, x0
  410350:	ldr	x0, [x0]
  410354:	stp	x21, x22, [sp, #32]
  410358:	mov	x21, x1
  41035c:	mov	w22, w2
  410360:	stp	x23, x24, [sp, #48]
  410364:	stp	x25, x26, [sp, #64]
  410368:	stp	x27, x28, [sp, #80]
  41036c:	bl	413530 <ferror@plt+0x10760>
  410370:	mov	w1, #0x0                   	// #0
  410374:	mov	x0, x21
  410378:	bl	42cc18 <ferror@plt+0x29e48>
  41037c:	ldrb	w1, [x20, #108]
  410380:	cbz	w1, 4113c0 <ferror@plt+0xe5f0>
  410384:	cmp	w0, #0x1
  410388:	b.ls	4113c0 <ferror@plt+0xe5f0>  // b.plast
  41038c:	ldr	w1, [x20, #200]
  410390:	cmp	w1, w0
  410394:	b.ne	4103a0 <ferror@plt+0xd5d0>  // b.any
  410398:	ldr	w1, [x21, #120]
  41039c:	cbz	w1, 4113c0 <ferror@plt+0xe5f0>
  4103a0:	str	w0, [x20, #200]
  4103a4:	add	x19, sp, #0x138
  4103a8:	ldr	x0, [x20]
  4103ac:	add	x26, x19, #0x38
  4103b0:	bl	413280 <ferror@plt+0x104b0>
  4103b4:	str	x0, [sp, #136]
  4103b8:	ldr	x0, [x20]
  4103bc:	mov	x1, #0x0                   	// #0
  4103c0:	bl	413244 <ferror@plt+0x10474>
  4103c4:	mov	x2, x21
  4103c8:	mov	x21, #0x0                   	// #0
  4103cc:	mov	w3, w22
  4103d0:	mov	x1, x20
  4103d4:	mov	x0, x19
  4103d8:	bl	40fb3c <ferror@plt+0xcd6c>
  4103dc:	ldr	x24, [sp, #448]
  4103e0:	cbz	x24, 4113ac <ferror@plt+0xe5dc>
  4103e4:	ldr	w0, [x24, #4]
  4103e8:	cmp	w0, w21
  4103ec:	b.le	4113ac <ferror@plt+0xe5dc>
  4103f0:	add	x0, x21, #0x1
  4103f4:	str	x0, [sp, #168]
  4103f8:	lsl	x22, x0, #3
  4103fc:	add	x23, x24, x0, lsl #3
  410400:	ldrb	w0, [x20, #223]
  410404:	cbz	w0, 4104dc <ferror@plt+0xd70c>
  410408:	cbz	w21, 410454 <ferror@plt+0xd684>
  41040c:	ldrb	w0, [sp, #426]
  410410:	cbnz	w0, 41042c <ferror@plt+0xd65c>
  410414:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  410418:	add	x2, x2, #0xb3c
  41041c:	mov	w1, #0x408                 	// #1032
  410420:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  410424:	add	x0, x0, #0xab3
  410428:	bl	402de0 <ferror@plt+0x10>
  41042c:	mov	w21, #0x0                   	// #0
  410430:	ldr	w1, [sp, #456]
  410434:	ldr	x0, [sp, #320]
  410438:	cmp	w1, w21
  41043c:	b.lt	410450 <ferror@plt+0xd680>  // b.tstop
  410440:	mov	w1, #0x2e                  	// #46
  410444:	add	w21, w21, #0x1
  410448:	bl	41358c <ferror@plt+0x107bc>
  41044c:	b	410430 <ferror@plt+0xd660>
  410450:	bl	413530 <ferror@plt+0x10760>
  410454:	ldr	w0, [x23, #4]
  410458:	ldr	w23, [x24, x22]
  41045c:	str	x0, [sp, #144]
  410460:	ldr	x0, [sp, #144]
  410464:	cmp	x23, x0
  410468:	b.gt	4113a4 <ferror@plt+0xe5d4>
  41046c:	ldr	x0, [sp, #336]
  410470:	mov	w1, w23
  410474:	mov	w21, w23
  410478:	mov	w27, w23
  41047c:	bl	417c50 <ferror@plt+0x14e80>
  410480:	str	x1, [sp, #96]
  410484:	mov	x22, x0
  410488:	cbz	x0, 411368 <ferror@plt+0xe598>
  41048c:	add	x25, x19, #0x38
  410490:	mov	w24, #0x0                   	// #0
  410494:	ldr	x0, [sp, #440]
  410498:	cbz	x0, 4106b4 <ferror@plt+0xd8e4>
  41049c:	ldr	w1, [x0, #4]
  4104a0:	cmp	w1, w24
  4104a4:	b.ls	4106b4 <ferror@plt+0xd8e4>  // b.plast
  4104a8:	add	x0, x0, w24, uxtw #3
  4104ac:	ldr	x28, [x0, #8]
  4104b0:	mov	x0, x28
  4104b4:	bl	42d0fc <ferror@plt+0x2a32c>
  4104b8:	tst	w0, #0xff
  4104bc:	b.eq	4106ac <ferror@plt+0xd8dc>  // b.none
  4104c0:	ldp	w1, w0, [x28]
  4104c4:	cmp	w1, w0
  4104c8:	b.eq	410624 <ferror@plt+0xd854>  // b.none
  4104cc:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4104d0:	mov	w1, #0x638                 	// #1592
  4104d4:	add	x2, x2, #0xb6e
  4104d8:	b	410420 <ferror@plt+0xd650>
  4104dc:	ldr	w0, [sp, #344]
  4104e0:	cmp	w21, #0x0
  4104e4:	b.gt	4104f4 <ferror@plt+0xd724>
  4104e8:	ldr	w1, [x24, #12]
  4104ec:	cmp	w1, w0
  4104f0:	b.ge	410454 <ferror@plt+0xd684>  // b.tcont
  4104f4:	add	x21, x24, x21, lsl #3
  4104f8:	ldr	w4, [x21, #8]
  4104fc:	cmp	w0, w4
  410500:	b.cc	410524 <ferror@plt+0xd754>  // b.lo, b.ul, b.last
  410504:	ldr	w1, [x21, #12]
  410508:	cmp	w0, w1
  41050c:	b.hi	410524 <ferror@plt+0xd754>  // b.pmore
  410510:	ldp	x0, x1, [sp, #336]
  410514:	stp	x0, x1, [sp, #240]
  410518:	ldp	x0, x1, [sp, #352]
  41051c:	stp	x0, x1, [sp, #256]
  410520:	b	410590 <ferror@plt+0xd7c0>
  410524:	ldr	x3, [sp, #432]
  410528:	mov	w1, #0x0                   	// #0
  41052c:	mov	x5, #0x28                  	// #40
  410530:	cbz	x3, 4105b4 <ferror@plt+0xd7e4>
  410534:	ldr	w0, [x3, #4]
  410538:	cmp	w1, w0
  41053c:	b.cs	4105b4 <ferror@plt+0xd7e4>  // b.hs, b.nlast
  410540:	mov	w0, w1
  410544:	madd	x0, x0, x5, x3
  410548:	ldr	w2, [x0, #8]
  41054c:	cmp	w2, w4
  410550:	b.cc	410560 <ferror@plt+0xd790>  // b.lo, b.ul, b.last
  410554:	ldr	w6, [x21, #12]
  410558:	cmp	w2, w6
  41055c:	b.ls	410568 <ferror@plt+0xd798>  // b.plast
  410560:	add	w1, w1, #0x1
  410564:	b	410530 <ferror@plt+0xd760>
  410568:	ldp	x4, x5, [sp, #336]
  41056c:	stp	x4, x5, [sp, #272]
  410570:	ldr	w0, [x0, #12]
  410574:	str	w2, [sp, #280]
  410578:	str	w0, [sp, #284]
  41057c:	ldp	x4, x5, [sp, #352]
  410580:	stp	x4, x5, [sp, #256]
  410584:	ldp	x0, x1, [sp, #272]
  410588:	stp	x0, x1, [sp, #240]
  41058c:	stp	x4, x5, [sp, #288]
  410590:	ldp	x0, x1, [sp, #240]
  410594:	stp	x0, x1, [sp, #208]
  410598:	ldp	x0, x1, [sp, #256]
  41059c:	stp	x0, x1, [sp, #224]
  4105a0:	ldr	x2, [x20, #144]
  4105a4:	add	x1, sp, #0xd0
  4105a8:	mov	x0, x20
  4105ac:	blr	x2
  4105b0:	b	410454 <ferror@plt+0xd684>
  4105b4:	mov	w25, #0x0                   	// #0
  4105b8:	ldr	x0, [sp, #440]
  4105bc:	cbz	x0, 410614 <ferror@plt+0xd844>
  4105c0:	ldr	w1, [x0, #4]
  4105c4:	cmp	w1, w25
  4105c8:	b.ls	410614 <ferror@plt+0xd844>  // b.plast
  4105cc:	add	x0, x0, w25, uxtw #3
  4105d0:	add	x8, sp, #0x110
  4105d4:	ldr	x0, [x0, #8]
  4105d8:	ldr	w0, [x0]
  4105dc:	bl	417064 <ferror@plt+0x14294>
  4105e0:	ldr	w1, [x21, #8]
  4105e4:	ldr	w0, [sp, #280]
  4105e8:	cmp	w0, w1
  4105ec:	b.cc	4105fc <ferror@plt+0xd82c>  // b.lo, b.ul, b.last
  4105f0:	ldr	w1, [x21, #12]
  4105f4:	cmp	w0, w1
  4105f8:	b.ls	410604 <ferror@plt+0xd834>  // b.plast
  4105fc:	add	w25, w25, #0x1
  410600:	b	4105b8 <ferror@plt+0xd7e8>
  410604:	ldp	x0, x1, [sp, #272]
  410608:	stp	x0, x1, [sp, #240]
  41060c:	ldp	x0, x1, [sp, #288]
  410610:	b	41051c <ferror@plt+0xd74c>
  410614:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  410618:	mov	w1, #0x449                 	// #1097
  41061c:	add	x2, x2, #0xb58
  410620:	b	410420 <ferror@plt+0xd650>
  410624:	ldr	x1, [sp, #336]
  410628:	mov	w2, w27
  41062c:	mov	x0, x28
  410630:	bl	42cff0 <ferror@plt+0x2a220>
  410634:	tst	w0, #0xff
  410638:	b.eq	4106ac <ferror@plt+0xd8dc>  // b.none
  41063c:	mov	x0, x25
  410640:	bl	40f26c <ferror@plt+0xc49c>
  410644:	mov	x0, x19
  410648:	mov	w1, #0x2b                  	// #43
  41064c:	bl	40f0bc <ferror@plt+0xc2ec>
  410650:	ldr	x0, [sp, #320]
  410654:	mov	w1, #0x2b                  	// #43
  410658:	bl	41358c <ferror@plt+0x107bc>
  41065c:	mov	x0, x25
  410660:	mov	w1, #0xfffffffe            	// #-2
  410664:	bl	40f14c <ferror@plt+0xc37c>
  410668:	mov	x2, #0x0                   	// #0
  41066c:	ldr	x0, [x28, #16]
  410670:	sub	x0, x0, #0x1
  410674:	cmp	x0, x2
  410678:	b.ls	41069c <ferror@plt+0xd8cc>  // b.plast
  41067c:	ldr	x0, [x28, #8]
  410680:	str	x2, [sp, #104]
  410684:	ldrb	w1, [x0, x2]
  410688:	ldr	x0, [sp, #320]
  41068c:	bl	41358c <ferror@plt+0x107bc>
  410690:	ldr	x2, [sp, #104]
  410694:	add	x2, x2, #0x1
  410698:	b	41066c <ferror@plt+0xd89c>
  41069c:	mov	x0, x25
  4106a0:	bl	40f26c <ferror@plt+0xc49c>
  4106a4:	ldr	x0, [sp, #320]
  4106a8:	bl	413530 <ferror@plt+0x10760>
  4106ac:	add	w24, w24, #0x1
  4106b0:	b	410494 <ferror@plt+0xd6c4>
  4106b4:	add	x0, x19, #0x38
  4106b8:	bl	40f26c <ferror@plt+0xc49c>
  4106bc:	ldrsw	x28, [sp, #96]
  4106c0:	sub	x2, x22, #0x1
  4106c4:	str	w28, [sp, #104]
  4106c8:	cmp	w28, #0x0
  4106cc:	b.le	410714 <ferror@plt+0xd944>
  4106d0:	ldrb	w0, [x2, x28]
  4106d4:	sub	x28, x28, #0x1
  4106d8:	and	w1, w0, #0xfffffffb
  4106dc:	cmp	w0, #0x20
  4106e0:	ccmp	w1, #0x9, #0x4, ne  // ne = any
  4106e4:	b.eq	4106c4 <ferror@plt+0xd8f4>  // b.none
  4106e8:	ldr	w0, [sp, #104]
  4106ec:	add	x0, x22, w0, sxtw
  4106f0:	ldurb	w0, [x0, #-1]
  4106f4:	and	w1, w0, #0xfffffffb
  4106f8:	cmp	w0, #0x20
  4106fc:	ccmp	w1, #0x9, #0x4, ne  // ne = any
  410700:	b.ne	410734 <ferror@plt+0xd964>  // b.any
  410704:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  410708:	mov	w1, #0x2bb                 	// #699
  41070c:	add	x2, x2, #0xb83
  410710:	b	410420 <ferror@plt+0xd650>
  410714:	ldr	w0, [sp, #104]
  410718:	cmp	w0, #0x0
  41071c:	b.ge	410730 <ferror@plt+0xd960>  // b.tcont
  410720:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  410724:	mov	w1, #0x2b9                 	// #697
  410728:	add	x2, x2, #0xb83
  41072c:	b	410420 <ferror@plt+0xd650>
  410730:	b.ne	4106e8 <ferror@plt+0xd918>  // b.any
  410734:	ldrsw	x0, [sp, #460]
  410738:	add	x0, x22, x0
  41073c:	str	x0, [sp, #96]
  410740:	ldrb	w0, [sp, #426]
  410744:	cbz	w0, 41082c <ferror@plt+0xda5c>
  410748:	mov	w0, w27
  41074c:	bl	40e2a0 <ferror@plt+0xb4d0>
  410750:	mov	w25, w0
  410754:	mov	w22, #0x0                   	// #0
  410758:	ldr	w1, [sp, #456]
  41075c:	ldr	x0, [sp, #320]
  410760:	sub	w1, w1, w25
  410764:	cmp	w1, w22
  410768:	b.le	41077c <ferror@plt+0xd9ac>
  41076c:	mov	w1, #0x20                  	// #32
  410770:	add	w22, w22, #0x1
  410774:	bl	41358c <ferror@plt+0x107bc>
  410778:	b	410758 <ferror@plt+0xd988>
  41077c:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  410780:	mov	w2, w21
  410784:	add	x1, x1, #0xbae
  410788:	bl	414f80 <ferror@plt+0x121b0>
  41078c:	ldr	w2, [sp, #460]
  410790:	add	x22, x19, #0x38
  410794:	mov	w25, #0x0                   	// #0
  410798:	mov	w28, #0x7fffffff            	// #2147483647
  41079c:	add	w24, w2, #0x1
  4107a0:	ldr	w0, [sp, #104]
  4107a4:	cmp	w24, w0
  4107a8:	b.gt	410850 <ferror@plt+0xda80>
  4107ac:	ldrb	w0, [sp, #424]
  4107b0:	cbz	w0, 4107e4 <ferror@plt+0xda14>
  4107b4:	add	x5, sp, #0x110
  4107b8:	mov	w2, w24
  4107bc:	mov	w1, w21
  4107c0:	mov	x0, x19
  4107c4:	mov	w4, #0x7fffffff            	// #2147483647
  4107c8:	mov	w3, #0x0                   	// #0
  4107cc:	bl	40f3f4 <ferror@plt+0xc624>
  4107d0:	tst	w0, #0xff
  4107d4:	b.eq	41083c <ferror@plt+0xda6c>  // b.none
  4107d8:	ldr	w1, [sp, #272]
  4107dc:	mov	x0, x22
  4107e0:	bl	40f14c <ferror@plt+0xc37c>
  4107e4:	ldr	x0, [sp, #96]
  4107e8:	ldrb	w1, [x0]
  4107ec:	ands	w3, w1, #0xffffffdf
  4107f0:	and	w0, w1, #0xfffffffb
  4107f4:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  4107f8:	b.eq	410848 <ferror@plt+0xda78>  // b.none
  4107fc:	mov	w0, #0x7fffffff            	// #2147483647
  410800:	mov	w25, w24
  410804:	cmp	w28, w0
  410808:	b.ne	410810 <ferror@plt+0xda40>  // b.any
  41080c:	mov	w28, w24
  410810:	ldr	x0, [sp, #320]
  410814:	add	w24, w24, #0x1
  410818:	bl	41358c <ferror@plt+0x107bc>
  41081c:	ldr	x0, [sp, #96]
  410820:	add	x0, x0, #0x1
  410824:	str	x0, [sp, #96]
  410828:	b	4107a0 <ferror@plt+0xd9d0>
  41082c:	ldr	x0, [sp, #320]
  410830:	mov	w1, #0x20                  	// #32
  410834:	bl	41358c <ferror@plt+0x107bc>
  410838:	b	41078c <ferror@plt+0xd9bc>
  41083c:	mov	x0, x22
  410840:	bl	40f26c <ferror@plt+0xc49c>
  410844:	b	4107e4 <ferror@plt+0xda14>
  410848:	mov	w1, #0x20                  	// #32
  41084c:	b	410810 <ferror@plt+0xda40>
  410850:	mov	x0, x19
  410854:	bl	40f274 <ferror@plt+0xc4a4>
  410858:	ldr	x3, [sp, #432]
  41085c:	mov	w2, #0x0                   	// #0
  410860:	add	x0, x3, #0x8
  410864:	mov	x1, x0
  410868:	cbz	x3, 4109d0 <ferror@plt+0xdc00>
  41086c:	ldr	w4, [x3, #4]
  410870:	cmp	w4, w2
  410874:	b.ls	4109d0 <ferror@plt+0xdc00>  // b.plast
  410878:	ldr	w5, [x1, #16]
  41087c:	cmp	w5, #0x2
  410880:	b.eq	4109d0 <ferror@plt+0xdc00>  // b.none
  410884:	ldr	w6, [x1]
  410888:	ldr	w5, [x1, #8]
  41088c:	cmp	w6, w5
  410890:	b.ls	4108a4 <ferror@plt+0xdad4>  // b.plast
  410894:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  410898:	mov	w1, #0x215                 	// #533
  41089c:	add	x2, x2, #0xbb4
  4108a0:	b	410420 <ferror@plt+0xd650>
  4108a4:	cmp	w6, w21
  4108a8:	b.hi	41098c <ferror@plt+0xdbbc>  // b.pmore
  4108ac:	cmp	w5, w21
  4108b0:	b.cc	41098c <ferror@plt+0xdbbc>  // b.lo, b.ul, b.last
  4108b4:	ldr	w22, [sp, #348]
  4108b8:	add	w3, w25, #0x1
  4108bc:	mov	w1, #0x0                   	// #0
  4108c0:	add	w22, w22, #0x1
  4108c4:	ldr	w2, [x0]
  4108c8:	cmp	w2, w21
  4108cc:	b.hi	4108ec <ferror@plt+0xdb1c>  // b.pmore
  4108d0:	ldr	w2, [x0, #8]
  4108d4:	cmp	w2, w21
  4108d8:	b.ne	410998 <ferror@plt+0xdbc8>  // b.any
  4108dc:	ldr	w2, [x0, #12]
  4108e0:	cmp	w2, w22
  4108e4:	b.lt	4108ec <ferror@plt+0xdb1c>  // b.tstop
  4108e8:	add	w22, w2, #0x1
  4108ec:	add	w1, w1, #0x1
  4108f0:	add	x0, x0, #0x28
  4108f4:	cmp	w4, w1
  4108f8:	b.ne	4108c4 <ferror@plt+0xdaf4>  // b.any
  4108fc:	mov	x0, x19
  410900:	mov	w1, #0x20                  	// #32
  410904:	bl	40f0bc <ferror@plt+0xc2ec>
  410908:	ldr	x0, [sp, #320]
  41090c:	mov	w1, #0x20                  	// #32
  410910:	bl	41358c <ferror@plt+0x107bc>
  410914:	ldr	w24, [sp, #460]
  410918:	add	x0, x19, #0x38
  41091c:	str	x0, [sp, #96]
  410920:	add	w24, w24, #0x1
  410924:	cmp	w24, w22
  410928:	b.ge	4109c8 <ferror@plt+0xdbf8>  // b.tcont
  41092c:	add	x5, sp, #0x110
  410930:	mov	w4, w25
  410934:	mov	w3, w28
  410938:	mov	w2, w24
  41093c:	mov	w1, w21
  410940:	mov	x0, x19
  410944:	bl	40f3f4 <ferror@plt+0xc624>
  410948:	tst	w0, #0xff
  41094c:	b.eq	4109b8 <ferror@plt+0xdbe8>  // b.none
  410950:	ldr	w1, [sp, #272]
  410954:	ldr	x0, [sp, #96]
  410958:	bl	40f14c <ferror@plt+0xc37c>
  41095c:	ldrb	w0, [sp, #276]
  410960:	cbz	w0, 4109b0 <ferror@plt+0xdbe0>
  410964:	ldr	w0, [sp, #272]
  410968:	cmp	w0, #0x2
  41096c:	b.gt	4109a8 <ferror@plt+0xdbd8>
  410970:	ldr	x1, [sp, #312]
  410974:	add	x0, x1, w0, sxtw
  410978:	ldrb	w1, [x0, #116]
  41097c:	ldr	x0, [sp, #320]
  410980:	add	w24, w24, #0x1
  410984:	bl	41358c <ferror@plt+0x107bc>
  410988:	b	410924 <ferror@plt+0xdb54>
  41098c:	add	w2, w2, #0x1
  410990:	add	x1, x1, #0x28
  410994:	b	410868 <ferror@plt+0xda98>
  410998:	b.ls	4108ec <ferror@plt+0xdb1c>  // b.plast
  41099c:	cmp	w25, w22
  4109a0:	csel	w22, w22, w3, lt  // lt = tstop
  4109a4:	b	4108ec <ferror@plt+0xdb1c>
  4109a8:	mov	w1, #0x5e                  	// #94
  4109ac:	b	41097c <ferror@plt+0xdbac>
  4109b0:	mov	w1, #0x7e                  	// #126
  4109b4:	b	41097c <ferror@plt+0xdbac>
  4109b8:	ldr	x0, [sp, #96]
  4109bc:	bl	40f26c <ferror@plt+0xc49c>
  4109c0:	mov	w1, #0x20                  	// #32
  4109c4:	b	41097c <ferror@plt+0xdbac>
  4109c8:	mov	x0, x19
  4109cc:	bl	40f274 <ferror@plt+0xc4a4>
  4109d0:	ldrb	w0, [sp, #425]
  4109d4:	str	w0, [sp, #96]
  4109d8:	cbz	w0, 410b8c <ferror@plt+0xddbc>
  4109dc:	mov	w22, #0x0                   	// #0
  4109e0:	str	xzr, [sp, #240]
  4109e4:	ldr	x0, [sp, #432]
  4109e8:	cbz	x0, 410b7c <ferror@plt+0xddac>
  4109ec:	ldr	w1, [x0, #4]
  4109f0:	cmp	w1, w22
  4109f4:	b.ls	410b7c <ferror@plt+0xddac>  // b.plast
  4109f8:	mov	w2, w22
  4109fc:	mov	x1, #0x28                  	// #40
  410a00:	madd	x24, x2, x1, x0
  410a04:	ldr	x0, [x24, #40]
  410a08:	cbz	x0, 410b74 <ferror@plt+0xdda4>
  410a0c:	ldr	w1, [x24, #28]
  410a10:	cmp	w1, w21
  410a14:	b.ne	410b74 <ferror@plt+0xdda4>  // b.any
  410a18:	ldr	w3, [x24, #32]
  410a1c:	ldr	w1, [sp, #460]
  410a20:	cmp	w3, w1
  410a24:	b.le	410b74 <ferror@plt+0xdda4>
  410a28:	ldr	x1, [x0]
  410a2c:	ldr	x3, [x1, #16]
  410a30:	ldr	w1, [x24, #36]
  410a34:	blr	x3
  410a38:	stp	x0, x1, [sp, #192]
  410a3c:	mov	x4, #0x0                   	// #0
  410a40:	mov	x3, x0
  410a44:	bfxil	x4, x1, #0, #8
  410a48:	cbz	x0, 410b74 <ferror@plt+0xdda4>
  410a4c:	ldr	w1, [x24, #32]
  410a50:	str	w1, [sp, #104]
  410a54:	str	x3, [sp, #280]
  410a58:	strb	w4, [sp, #288]
  410a5c:	bl	402700 <strlen@plt>
  410a60:	str	x0, [sp, #112]
  410a64:	ldr	x25, [sp, #240]
  410a68:	cbz	x25, 410b08 <ferror@plt+0xdd38>
  410a6c:	ldp	w0, w24, [x25]
  410a70:	ubfx	x0, x0, #0, #31
  410a74:	cmp	w0, w24
  410a78:	b.ne	410b24 <ferror@plt+0xdd54>  // b.any
  410a7c:	ldrsb	w0, [x25, #3]
  410a80:	tbz	w0, #31, 410b08 <ferror@plt+0xdd38>
  410a84:	ldr	w28, [sp, #96]
  410a88:	add	w1, w24, #0x1
  410a8c:	str	xzr, [sp, #240]
  410a90:	ldr	x0, [sp, #240]
  410a94:	bl	40f318 <ferror@plt+0xc548>
  410a98:	mov	w2, w0
  410a9c:	mov	x1, #0x8                   	// #8
  410aa0:	mov	w0, #0x28                  	// #40
  410aa4:	umaddl	x1, w2, w0, x1
  410aa8:	ldr	x0, [sp, #240]
  410aac:	cbz	x0, 410b18 <ferror@plt+0xdd48>
  410ab0:	ldr	w6, [x0, #4]
  410ab4:	stp	w6, w2, [sp, #124]
  410ab8:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  410abc:	ldp	w6, w2, [sp, #124]
  410ac0:	str	x0, [sp, #240]
  410ac4:	and	w2, w2, #0x7fffffff
  410ac8:	stp	w2, w6, [x0]
  410acc:	cbz	w28, 410b24 <ferror@plt+0xdd54>
  410ad0:	mov	w2, w24
  410ad4:	mov	x1, #0x8                   	// #8
  410ad8:	cbz	w2, 410b20 <ferror@plt+0xdd50>
  410adc:	add	x8, x25, x1
  410ae0:	add	x5, x0, x1
  410ae4:	sub	w2, w2, #0x1
  410ae8:	add	x1, x1, #0x28
  410aec:	ldp	x6, x7, [x8]
  410af0:	stp	x6, x7, [x5]
  410af4:	ldp	x6, x7, [x8, #16]
  410af8:	stp	x6, x7, [x5, #16]
  410afc:	ldr	x6, [x8, #32]
  410b00:	str	x6, [x5, #32]
  410b04:	b	410ad8 <ferror@plt+0xdd08>
  410b08:	mov	w28, #0x0                   	// #0
  410b0c:	mov	w24, #0x0                   	// #0
  410b10:	mov	w1, #0x1                   	// #1
  410b14:	b	410a90 <ferror@plt+0xdcc0>
  410b18:	mov	w6, #0x0                   	// #0
  410b1c:	b	410ab4 <ferror@plt+0xdce4>
  410b20:	str	w24, [x0, #4]
  410b24:	ldr	x0, [sp, #240]
  410b28:	mov	x3, #0x8                   	// #8
  410b2c:	ldr	w1, [x0, #4]
  410b30:	add	w2, w1, #0x1
  410b34:	str	w2, [x0, #4]
  410b38:	ldr	w2, [sp, #104]
  410b3c:	str	w2, [sp, #276]
  410b40:	ldr	x2, [sp, #112]
  410b44:	str	x2, [sp, #296]
  410b48:	mov	w2, #0x28                  	// #40
  410b4c:	str	w22, [sp, #272]
  410b50:	str	wzr, [sp, #304]
  410b54:	umaddl	x1, w1, w2, x3
  410b58:	ldp	x2, x3, [sp, #272]
  410b5c:	add	x0, x0, x1
  410b60:	stp	x2, x3, [x0]
  410b64:	ldp	x2, x3, [sp, #288]
  410b68:	stp	x2, x3, [x0, #16]
  410b6c:	ldr	w1, [sp, #304]
  410b70:	str	w1, [x0, #32]
  410b74:	add	w22, w22, #0x1
  410b78:	b	4109e4 <ferror@plt+0xdc14>
  410b7c:	ldr	x0, [sp, #240]
  410b80:	cbnz	x0, 410cb0 <ferror@plt+0xdee0>
  410b84:	add	x0, sp, #0xf0
  410b88:	bl	40ef2c <ferror@plt+0xc15c>
  410b8c:	ldr	x0, [sp, #336]
  410b90:	mov	x22, #0x0                   	// #0
  410b94:	str	wzr, [sp, #96]
  410b98:	str	x0, [sp, #152]
  410b9c:	ldr	x0, [sp, #440]
  410ba0:	cbz	x0, 411228 <ferror@plt+0xe458>
  410ba4:	ldr	w1, [x0, #4]
  410ba8:	ldr	w2, [sp, #96]
  410bac:	cmp	w1, w2
  410bb0:	b.ls	411228 <ferror@plt+0xe458>  // b.plast
  410bb4:	ldr	x1, [sp, #96]
  410bb8:	add	x0, x0, w1, uxtw #3
  410bbc:	ldr	x24, [x0, #8]
  410bc0:	mov	x0, x24
  410bc4:	bl	42d0fc <ferror@plt+0x2a32c>
  410bc8:	ands	w0, w0, #0xff
  410bcc:	str	w0, [sp, #112]
  410bd0:	b.ne	4110dc <ferror@plt+0xe30c>  // b.any
  410bd4:	ldr	x1, [sp, #336]
  410bd8:	mov	w2, w27
  410bdc:	mov	x0, x24
  410be0:	bl	42cff0 <ferror@plt+0x2a220>
  410be4:	ands	w0, w0, #0xff
  410be8:	str	w0, [sp, #160]
  410bec:	b.eq	4110dc <ferror@plt+0xe30c>  // b.none
  410bf0:	ldr	w0, [x24]
  410bf4:	add	x8, sp, #0x110
  410bf8:	bl	417064 <ferror@plt+0x14294>
  410bfc:	ldr	w28, [sp, #284]
  410c00:	ldr	w0, [x24, #4]
  410c04:	add	x8, sp, #0x110
  410c08:	bl	417064 <ferror@plt+0x14294>
  410c0c:	ldr	w2, [sp, #284]
  410c10:	mov	w1, w28
  410c14:	add	x0, sp, #0x110
  410c18:	sub	w2, w2, #0x1
  410c1c:	bl	40f080 <ferror@plt+0xc2b0>
  410c20:	ldr	w0, [sp, #272]
  410c24:	add	x8, sp, #0x110
  410c28:	str	w0, [sp, #104]
  410c2c:	ldr	w0, [sp, #276]
  410c30:	str	w0, [sp, #124]
  410c34:	ldr	w0, [x24]
  410c38:	bl	417064 <ferror@plt+0x14294>
  410c3c:	ldr	w25, [sp, #284]
  410c40:	ldr	x0, [x24, #16]
  410c44:	sub	w2, w25, #0x1
  410c48:	ldr	w3, [x24]
  410c4c:	add	w28, w2, w0
  410c50:	ldr	w0, [x24, #4]
  410c54:	cmp	w3, w0
  410c58:	b.ne	410ed0 <ferror@plt+0xe100>  // b.any
  410c5c:	mov	w2, w28
  410c60:	add	x0, sp, #0x110
  410c64:	mov	w1, w25
  410c68:	bl	40f080 <ferror@plt+0xc2b0>
  410c6c:	ldr	w28, [sp, #272]
  410c70:	ldr	w0, [sp, #276]
  410c74:	str	w0, [sp, #128]
  410c78:	cbz	x22, 4110ec <ferror@plt+0xe31c>
  410c7c:	ldr	w0, [x22, #4]
  410c80:	cbz	w0, 4110ec <ferror@plt+0xe31c>
  410c84:	sub	w0, w0, #0x1
  410c88:	ldr	w1, [sp, #104]
  410c8c:	add	x0, x22, x0, lsl #3
  410c90:	ldr	x25, [x0, #8]
  410c94:	ldr	w0, [x25]
  410c98:	cmp	w1, w0
  410c9c:	b.ge	410eec <ferror@plt+0xe11c>  // b.tcont
  410ca0:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  410ca4:	mov	w1, #0x77a                 	// #1914
  410ca8:	add	x2, x2, #0xbd7
  410cac:	b	410420 <ferror@plt+0xd650>
  410cb0:	ldr	w1, [x0, #4]
  410cb4:	cbz	w1, 410b84 <ferror@plt+0xddb4>
  410cb8:	cmp	w1, #0x1
  410cbc:	b.ls	410cd8 <ferror@plt+0xdf08>  // b.plast
  410cc0:	adrp	x3, 40f000 <ferror@plt+0xc230>
  410cc4:	mov	w1, w1
  410cc8:	add	x3, x3, #0x574
  410ccc:	add	x0, x0, #0x8
  410cd0:	mov	x2, #0x28                  	// #40
  410cd4:	bl	419474 <ferror@plt+0x166a4>
  410cd8:	ldr	x2, [sp, #240]
  410cdc:	cbz	x2, 410d30 <ferror@plt+0xdf60>
  410ce0:	ldr	w0, [x2, #4]
  410ce4:	sub	w0, w0, #0x1
  410ce8:	mov	w4, #0x7fffffff            	// #2147483647
  410cec:	mov	w25, #0x1                   	// #1
  410cf0:	mov	x6, #0x28                  	// #40
  410cf4:	cbz	x2, 410d38 <ferror@plt+0xdf68>
  410cf8:	ldr	w1, [x2, #4]
  410cfc:	cmp	w1, w0
  410d00:	b.ls	410d38 <ferror@plt+0xdf68>  // b.plast
  410d04:	mov	w1, w0
  410d08:	sub	w0, w0, #0x1
  410d0c:	madd	x1, x1, x6, x2
  410d10:	ldr	x3, [x1, #32]
  410d14:	ldr	w5, [x1, #12]
  410d18:	add	x3, x3, w5, sxtw
  410d1c:	cmp	x3, w4, sxtw
  410d20:	mov	w4, w5
  410d24:	cinc	w25, w25, cs  // cs = hs, nlast
  410d28:	str	w25, [x1, #40]
  410d2c:	b	410cf4 <ferror@plt+0xdf24>
  410d30:	mov	w0, #0x0                   	// #0
  410d34:	b	410ce4 <ferror@plt+0xdf14>
  410d38:	mov	w28, #0x0                   	// #0
  410d3c:	mov	w24, #0x0                   	// #0
  410d40:	mov	x0, x19
  410d44:	mov	w1, #0x20                  	// #32
  410d48:	bl	40f0bc <ferror@plt+0xc2ec>
  410d4c:	ldr	x0, [sp, #320]
  410d50:	mov	w1, #0x20                  	// #32
  410d54:	bl	41358c <ferror@plt+0x107bc>
  410d58:	ldr	w0, [sp, #460]
  410d5c:	mov	w4, #0x0                   	// #0
  410d60:	add	w0, w0, #0x1
  410d64:	str	w0, [sp, #272]
  410d68:	ldr	x22, [sp, #240]
  410d6c:	cbz	x22, 410e80 <ferror@plt+0xe0b0>
  410d70:	ldr	w0, [x22, #4]
  410d74:	cmp	w0, w4
  410d78:	b.ls	410e80 <ferror@plt+0xe0b0>  // b.plast
  410d7c:	mov	w5, w4
  410d80:	mov	x0, #0x28                  	// #40
  410d84:	madd	x5, x5, x0, x22
  410d88:	ldr	w0, [x5, #40]
  410d8c:	cmp	w0, w24
  410d90:	b.lt	410e80 <ferror@plt+0xe0b0>  // b.tstop
  410d94:	mov	w0, #0x28                  	// #40
  410d98:	umull	x0, w4, w0
  410d9c:	add	x22, x22, x0
  410da0:	ldr	w2, [x22, #12]
  410da4:	b.ne	410e1c <ferror@plt+0xe04c>  // b.any
  410da8:	ldr	w0, [sp, #272]
  410dac:	cmp	w2, w0
  410db0:	b.ge	410dc4 <ferror@plt+0xdff4>  // b.tcont
  410db4:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  410db8:	mov	w1, #0x609                 	// #1545
  410dbc:	add	x2, x2, #0xbc6
  410dc0:	b	410420 <ferror@plt+0xd650>
  410dc4:	mov	w3, #0x1                   	// #1
  410dc8:	add	x1, sp, #0x110
  410dcc:	add	x0, sp, #0x138
  410dd0:	str	w4, [sp, #96]
  410dd4:	str	x5, [sp, #104]
  410dd8:	bl	40f29c <ferror@plt+0xc4cc>
  410ddc:	ldr	w1, [x22, #8]
  410de0:	mov	x0, x26
  410de4:	bl	40f14c <ferror@plt+0xc37c>
  410de8:	ldr	x1, [x22, #16]
  410dec:	ldr	x0, [sp, #320]
  410df0:	bl	413938 <ferror@plt+0x10b68>
  410df4:	mov	x0, x26
  410df8:	bl	40f26c <ferror@plt+0xc49c>
  410dfc:	ldr	x5, [sp, #104]
  410e00:	ldr	w0, [sp, #272]
  410e04:	ldr	x1, [x5, #32]
  410e08:	add	w0, w0, w1
  410e0c:	ldr	w4, [sp, #96]
  410e10:	str	w0, [sp, #272]
  410e14:	add	w4, w4, #0x1
  410e18:	b	410d68 <ferror@plt+0xdf98>
  410e1c:	cmp	w2, w28
  410e20:	b.eq	410e14 <ferror@plt+0xe044>  // b.none
  410e24:	ldr	w0, [sp, #272]
  410e28:	cmp	w2, w0
  410e2c:	b.ge	410e40 <ferror@plt+0xe070>  // b.tcont
  410e30:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  410e34:	mov	w1, #0x612                 	// #1554
  410e38:	add	x2, x2, #0xbc6
  410e3c:	b	410420 <ferror@plt+0xd650>
  410e40:	mov	w3, #0x1                   	// #1
  410e44:	add	x1, sp, #0x110
  410e48:	add	x0, sp, #0x138
  410e4c:	str	w4, [sp, #96]
  410e50:	bl	40f29c <ferror@plt+0xc4cc>
  410e54:	ldr	w1, [x22, #8]
  410e58:	mov	x0, x26
  410e5c:	bl	40f14c <ferror@plt+0xc37c>
  410e60:	ldr	x0, [sp, #320]
  410e64:	mov	w1, #0x7c                  	// #124
  410e68:	bl	41358c <ferror@plt+0x107bc>
  410e6c:	mov	x0, x26
  410e70:	bl	40f26c <ferror@plt+0xc49c>
  410e74:	ldr	w28, [sp, #272]
  410e78:	add	w0, w28, #0x1
  410e7c:	b	410e0c <ferror@plt+0xe03c>
  410e80:	mov	x0, x19
  410e84:	add	w24, w24, #0x1
  410e88:	bl	40f274 <ferror@plt+0xc4a4>
  410e8c:	cmp	w25, w24
  410e90:	b.ge	410d40 <ferror@plt+0xdf70>  // b.tcont
  410e94:	mov	x22, #0x0                   	// #0
  410e98:	mov	x24, #0x28                  	// #40
  410e9c:	ldr	x0, [sp, #240]
  410ea0:	cbz	x0, 410b84 <ferror@plt+0xddb4>
  410ea4:	ldr	w1, [x0, #4]
  410ea8:	cmp	w1, w22
  410eac:	b.ls	410b84 <ferror@plt+0xddb4>  // b.plast
  410eb0:	madd	x0, x22, x24, x0
  410eb4:	add	x1, x0, #0x8
  410eb8:	ldrb	w0, [x0, #24]
  410ebc:	cbz	w0, 410ec8 <ferror@plt+0xe0f8>
  410ec0:	ldr	x0, [x1, #8]
  410ec4:	bl	402b30 <free@plt>
  410ec8:	add	x22, x22, #0x1
  410ecc:	b	410e9c <ferror@plt+0xe0cc>
  410ed0:	add	x8, sp, #0x110
  410ed4:	bl	417064 <ferror@plt+0x14294>
  410ed8:	ldr	w0, [sp, #284]
  410edc:	sub	w0, w0, #0x1
  410ee0:	cmp	w28, w0
  410ee4:	csel	w2, w28, w0, ge  // ge = tcont
  410ee8:	b	410c60 <ferror@plt+0xde90>
  410eec:	ldr	w0, [x25, #8]
  410ef0:	cmp	w28, w0
  410ef4:	b.ge	410f08 <ferror@plt+0xe138>  // b.tcont
  410ef8:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  410efc:	mov	w1, #0x77c                 	// #1916
  410f00:	add	x2, x2, #0xbd7
  410f04:	b	410420 <ferror@plt+0xd650>
  410f08:	ldr	w0, [x25, #12]
  410f0c:	cmp	w28, w0
  410f10:	b.gt	4110ec <ferror@plt+0xe31c>
  410f14:	ldr	w1, [x25, #4]
  410f18:	sub	w2, w28, #0x1
  410f1c:	add	x0, sp, #0xf0
  410f20:	add	w1, w1, #0x1
  410f24:	bl	40f080 <ferror@plt+0xc2b0>
  410f28:	ldr	x0, [sp, #152]
  410f2c:	mov	w1, w27
  410f30:	bl	417c50 <ferror@plt+0x14e80>
  410f34:	mov	x8, x0
  410f38:	mov	x7, x1
  410f3c:	cbz	x0, 4110ec <ferror@plt+0xe31c>
  410f40:	ldr	w5, [sp, #244]
  410f44:	cmp	w5, w1
  410f48:	b.ge	4110ec <ferror@plt+0xe31c>  // b.tcont
  410f4c:	ldr	x6, [x25, #24]
  410f50:	tbz	w6, #31, 410f64 <ferror@plt+0xe194>
  410f54:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  410f58:	mov	w1, #0x792                 	// #1938
  410f5c:	add	x2, x2, #0xbd7
  410f60:	b	410420 <ferror@plt+0xd650>
  410f64:	ldr	w0, [sp, #240]
  410f68:	add	w4, w5, #0x1
  410f6c:	subs	w0, w4, w0
  410f70:	str	w0, [sp, #104]
  410f74:	b.pl	410f88 <ferror@plt+0xe1b8>  // b.nfrst
  410f78:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  410f7c:	mov	w1, #0x794                 	// #1940
  410f80:	add	x2, x2, #0xbd7
  410f84:	b	410420 <ferror@plt+0xd650>
  410f88:	ldr	w0, [sp, #104]
  410f8c:	ldr	x4, [x24, #16]
  410f90:	add	w0, w0, w6
  410f94:	str	w0, [sp, #112]
  410f98:	adds	w4, w0, w4
  410f9c:	b.pl	410fb0 <ferror@plt+0xe1e0>  // b.nfrst
  410fa0:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  410fa4:	mov	w1, #0x796                 	// #1942
  410fa8:	add	x2, x2, #0xbd7
  410fac:	b	410420 <ferror@plt+0xd650>
  410fb0:	ldr	x0, [x25, #32]
  410fb4:	sxtw	x28, w4
  410fb8:	add	x5, x28, #0x1
  410fbc:	cmp	x0, x5
  410fc0:	b.cs	410ff0 <ferror@plt+0xe220>  // b.hs, b.nlast
  410fc4:	ldr	x0, [x25, #16]
  410fc8:	lsl	x1, x5, #1
  410fcc:	str	x1, [sp, #128]
  410fd0:	str	x6, [sp, #160]
  410fd4:	stp	x8, x7, [sp, #176]
  410fd8:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  410fdc:	ldp	x8, x7, [sp, #176]
  410fe0:	str	x0, [x25, #16]
  410fe4:	ldr	x6, [sp, #160]
  410fe8:	ldr	x1, [sp, #128]
  410fec:	str	x1, [x25, #32]
  410ff0:	ldp	w2, w0, [sp, #240]
  410ff4:	add	w5, w0, #0x1
  410ff8:	sub	w5, w5, w2
  410ffc:	subs	w2, w2, #0x1
  411000:	b.pl	41101c <ferror@plt+0xe24c>  // b.nfrst
  411004:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  411008:	add	x2, x2, #0xbe0
  41100c:	mov	w1, #0x44                  	// #68
  411010:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  411014:	add	x0, x0, #0xbe8
  411018:	b	410428 <ferror@plt+0xd658>
  41101c:	cmp	w2, w7
  411020:	b.lt	411034 <ferror@plt+0xe264>  // b.tstop
  411024:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  411028:	mov	w1, #0x45                  	// #69
  41102c:	add	x2, x2, #0xbe0
  411030:	b	411010 <ferror@plt+0xe240>
  411034:	tbz	w5, #31, 411048 <ferror@plt+0xe278>
  411038:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  41103c:	mov	w1, #0x46                  	// #70
  411040:	add	x2, x2, #0xbe0
  411044:	b	411010 <ferror@plt+0xe240>
  411048:	cmp	w0, w7
  41104c:	b.le	411060 <ferror@plt+0xe290>
  411050:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  411054:	mov	w1, #0x47                  	// #71
  411058:	add	x2, x2, #0xbe0
  41105c:	b	411010 <ferror@plt+0xe240>
  411060:	sxtw	x5, w5
  411064:	add	x2, x8, w2, sxtw
  411068:	mov	w1, w6
  41106c:	mov	x0, x25
  411070:	stp	x2, x5, [sp, #272]
  411074:	add	x2, sp, #0x110
  411078:	bl	40f340 <ferror@plt+0xc570>
  41107c:	ldp	x1, x0, [x24, #8]
  411080:	stp	x1, x0, [sp, #272]
  411084:	ldr	w1, [sp, #112]
  411088:	mov	x0, x25
  41108c:	add	x2, sp, #0x110
  411090:	bl	40f340 <ferror@plt+0xc570>
  411094:	str	x28, [x25, #24]
  411098:	ldr	x0, [x25, #32]
  41109c:	cmp	x28, x0
  4110a0:	b.cc	4110b4 <ferror@plt+0xe2e4>  // b.lo, b.ul, b.last
  4110a4:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4110a8:	mov	w1, #0x732                 	// #1842
  4110ac:	add	x2, x2, #0xbfa
  4110b0:	b	410420 <ferror@plt+0xd650>
  4110b4:	ldr	x0, [x25, #16]
  4110b8:	ldr	w1, [sp, #104]
  4110bc:	strb	wzr, [x0, x28]
  4110c0:	ldr	w0, [sp, #124]
  4110c4:	str	w0, [x25, #4]
  4110c8:	ldr	x0, [x24, #16]
  4110cc:	add	x0, x0, w1, sxtw
  4110d0:	ldr	w1, [x25, #12]
  4110d4:	add	w0, w1, w0
  4110d8:	str	w0, [x25, #12]
  4110dc:	ldr	w0, [sp, #96]
  4110e0:	add	w0, w0, #0x1
  4110e4:	str	w0, [sp, #96]
  4110e8:	b	410b9c <ferror@plt+0xddcc>
  4110ec:	ldp	x2, x1, [x24, #8]
  4110f0:	mov	x0, #0x28                  	// #40
  4110f4:	stp	x1, x2, [sp, #176]
  4110f8:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  4110fc:	mov	x24, x0
  411100:	ldr	w0, [sp, #104]
  411104:	ldr	x2, [sp, #184]
  411108:	str	w0, [x24]
  41110c:	ldr	w0, [sp, #124]
  411110:	str	w0, [x24, #4]
  411114:	ldr	w0, [sp, #128]
  411118:	str	w28, [x24, #8]
  41111c:	str	w0, [x24, #12]
  411120:	mov	x0, x2
  411124:	bl	445390 <_obstack_memory_used@@Base+0x98c>
  411128:	ldr	x1, [sp, #176]
  41112c:	stp	x0, x1, [x24, #16]
  411130:	add	x1, x1, #0x1
  411134:	str	x1, [x24, #32]
  411138:	cbz	x22, 4111e0 <ferror@plt+0xe410>
  41113c:	ldp	w0, w3, [x22]
  411140:	ubfx	x0, x0, #0, #31
  411144:	cmp	w0, w3
  411148:	b.ne	411220 <ferror@plt+0xe450>  // b.any
  41114c:	ldrsb	w0, [x22, #3]
  411150:	tbz	w0, #31, 4111f0 <ferror@plt+0xe420>
  411154:	ldr	w0, [sp, #160]
  411158:	add	w1, w3, #0x1
  41115c:	mov	x2, #0x0                   	// #0
  411160:	str	w0, [sp, #112]
  411164:	mov	x0, x2
  411168:	str	x2, [sp, #104]
  41116c:	str	w3, [sp, #124]
  411170:	bl	40f318 <ferror@plt+0xc548>
  411174:	ldr	x2, [sp, #104]
  411178:	mov	w28, w0
  41117c:	ldr	w3, [sp, #124]
  411180:	ubfiz	x1, x28, #3, #32
  411184:	add	x1, x1, #0x8
  411188:	cbz	x2, 4111f8 <ferror@plt+0xe428>
  41118c:	ldr	w4, [x2, #4]
  411190:	mov	x0, x2
  411194:	str	w3, [sp, #104]
  411198:	str	w4, [sp, #124]
  41119c:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  4111a0:	mov	x1, x0
  4111a4:	ldr	w0, [sp, #112]
  4111a8:	ldr	w4, [sp, #124]
  4111ac:	and	w28, w28, #0x7fffffff
  4111b0:	ldr	w3, [sp, #104]
  4111b4:	stp	w28, w4, [x1]
  4111b8:	cbz	w0, 411204 <ferror@plt+0xe434>
  4111bc:	mov	w4, w3
  4111c0:	mov	x0, #0x0                   	// #0
  4111c4:	add	x2, x0, #0x1
  4111c8:	cmp	x4, x0
  4111cc:	b.eq	411200 <ferror@plt+0xe430>  // b.none
  4111d0:	ldr	x0, [x22, x2, lsl #3]
  4111d4:	str	x0, [x1, x2, lsl #3]
  4111d8:	mov	x0, x2
  4111dc:	b	4111c4 <ferror@plt+0xe3f4>
  4111e0:	mov	x2, #0x0                   	// #0
  4111e4:	mov	w3, #0x0                   	// #0
  4111e8:	mov	w1, #0x1                   	// #1
  4111ec:	b	411164 <ferror@plt+0xe394>
  4111f0:	mov	x2, x22
  4111f4:	b	4111e4 <ferror@plt+0xe414>
  4111f8:	mov	w4, #0x0                   	// #0
  4111fc:	b	411190 <ferror@plt+0xe3c0>
  411200:	str	w3, [x1, #4]
  411204:	ldr	w0, [x1, #4]
  411208:	mov	x22, x1
  41120c:	add	w2, w0, #0x1
  411210:	str	w2, [x1, #4]
  411214:	add	x0, x1, w0, uxtw #3
  411218:	str	x24, [x0, #8]
  41121c:	b	4110dc <ferror@plt+0xe30c>
  411220:	mov	x1, x22
  411224:	b	411204 <ferror@plt+0xe434>
  411228:	ldr	w0, [sp, #460]
  41122c:	str	w0, [sp, #272]
  411230:	cbz	x22, 411334 <ferror@plt+0xe564>
  411234:	ldr	w0, [x22, #4]
  411238:	cbz	w0, 411248 <ferror@plt+0xe478>
  41123c:	mov	x0, x19
  411240:	mov	w1, #0x20                  	// #32
  411244:	bl	40f0bc <ferror@plt+0xc2ec>
  411248:	add	x25, x19, #0x38
  41124c:	mov	w27, #0x0                   	// #0
  411250:	ldr	w0, [x22, #4]
  411254:	cmp	w27, w0
  411258:	b.cs	411334 <ferror@plt+0xe564>  // b.hs, b.nlast
  41125c:	add	x0, x22, w27, uxtw #3
  411260:	ldr	x24, [x0, #8]
  411264:	ldp	w28, w4, [x24]
  411268:	add	w0, w4, #0x1
  41126c:	cmp	w28, w0
  411270:	b.eq	4112cc <ferror@plt+0xe4fc>  // b.none
  411274:	ldr	x2, [sp, #432]
  411278:	mov	w1, #0x0                   	// #0
  41127c:	add	x0, x2, #0x8
  411280:	cbz	x2, 4113e4 <ferror@plt+0xe614>
  411284:	ldr	w3, [x2, #4]
  411288:	cmp	w3, w1
  41128c:	b.ls	4113e4 <ferror@plt+0xe614>  // b.plast
  411290:	ldr	w3, [x0]
  411294:	cmp	w21, w3
  411298:	b.ne	4112c0 <ferror@plt+0xe4f0>  // b.any
  41129c:	ldr	w3, [x0, #4]
  4112a0:	cmp	w28, w3
  4112a4:	b.ne	4112c0 <ferror@plt+0xe4f0>  // b.any
  4112a8:	ldr	w3, [x0, #8]
  4112ac:	cmp	w21, w3
  4112b0:	b.ne	4112c0 <ferror@plt+0xe4f0>  // b.any
  4112b4:	ldr	w3, [x0, #12]
  4112b8:	cmp	w4, w3
  4112bc:	b.eq	4113dc <ferror@plt+0xe60c>  // b.none
  4112c0:	add	w1, w1, #0x1
  4112c4:	add	x0, x0, #0x28
  4112c8:	b	411280 <ferror@plt+0xe4b0>
  4112cc:	ldr	w2, [x24, #8]
  4112d0:	mov	w3, #0x1                   	// #1
  4112d4:	add	x1, sp, #0x110
  4112d8:	mov	x0, x19
  4112dc:	bl	40f29c <ferror@plt+0xc4cc>
  4112e0:	mov	x0, x25
  4112e4:	mov	w1, #0xfffffffe            	// #-2
  4112e8:	bl	40f14c <ferror@plt+0xc37c>
  4112ec:	ldr	x1, [x24, #16]
  4112f0:	ldr	x0, [sp, #320]
  4112f4:	bl	413938 <ferror@plt+0x10b68>
  4112f8:	mov	x0, x25
  4112fc:	bl	40f26c <ferror@plt+0xc49c>
  411300:	ldr	x1, [x24, #24]
  411304:	ldr	w0, [sp, #272]
  411308:	add	w0, w0, w1
  41130c:	str	w0, [sp, #272]
  411310:	add	w27, w27, #0x1
  411314:	b	411250 <ferror@plt+0xe480>
  411318:	mov	x0, x25
  41131c:	bl	40f26c <ferror@plt+0xc49c>
  411320:	ldr	x0, [x24, #24]
  411324:	cbz	x0, 411310 <ferror@plt+0xe540>
  411328:	mov	w2, w28
  41132c:	mov	w3, #0x1                   	// #1
  411330:	b	4112d4 <ferror@plt+0xe504>
  411334:	mov	w21, #0x0                   	// #0
  411338:	add	x1, sp, #0x110
  41133c:	mov	x0, x19
  411340:	mov	w3, #0x0                   	// #0
  411344:	mov	w2, #0x0                   	// #0
  411348:	bl	40f29c <ferror@plt+0xc4cc>
  41134c:	cbz	x22, 411368 <ferror@plt+0xe598>
  411350:	ldr	w0, [x22, #4]
  411354:	cmp	w21, w0
  411358:	b.cc	411370 <ferror@plt+0xe5a0>  // b.lo, b.ul, b.last
  41135c:	ldrsb	w0, [x22, #3]
  411360:	tbz	w0, #31, 411398 <ferror@plt+0xe5c8>
  411364:	str	wzr, [x22, #4]
  411368:	add	x23, x23, #0x1
  41136c:	b	410460 <ferror@plt+0xd690>
  411370:	add	x0, x22, w21, uxtw #3
  411374:	ldr	x24, [x0, #8]
  411378:	cbz	x24, 411390 <ferror@plt+0xe5c0>
  41137c:	ldr	x0, [x24, #16]
  411380:	bl	402b30 <free@plt>
  411384:	mov	x0, x24
  411388:	mov	x1, #0x28                  	// #40
  41138c:	bl	445778 <_obstack_memory_used@@Base+0xd74>
  411390:	add	w21, w21, #0x1
  411394:	b	41134c <ferror@plt+0xe57c>
  411398:	mov	x0, x22
  41139c:	bl	402b30 <free@plt>
  4113a0:	b	411368 <ferror@plt+0xe598>
  4113a4:	ldr	x21, [sp, #168]
  4113a8:	b	4103dc <ferror@plt+0xd60c>
  4113ac:	ldr	x0, [x20]
  4113b0:	ldr	x1, [sp, #136]
  4113b4:	bl	413244 <ferror@plt+0x10474>
  4113b8:	mov	x0, x19
  4113bc:	bl	40f634 <ferror@plt+0xc864>
  4113c0:	ldp	x19, x20, [sp, #16]
  4113c4:	ldp	x21, x22, [sp, #32]
  4113c8:	ldp	x23, x24, [sp, #48]
  4113cc:	ldp	x25, x26, [sp, #64]
  4113d0:	ldp	x27, x28, [sp, #80]
  4113d4:	ldp	x29, x30, [sp], #464
  4113d8:	ret
  4113dc:	ldr	x0, [x24, #24]
  4113e0:	cbnz	x0, 411328 <ferror@plt+0xe558>
  4113e4:	mov	w2, w28
  4113e8:	mov	w3, #0x1                   	// #1
  4113ec:	add	x1, sp, #0x110
  4113f0:	mov	x0, x19
  4113f4:	str	w4, [sp, #96]
  4113f8:	bl	40f29c <ferror@plt+0xc4cc>
  4113fc:	mov	x0, x25
  411400:	mov	w1, #0xfffffffd            	// #-3
  411404:	bl	40f14c <ferror@plt+0xc37c>
  411408:	ldr	w4, [sp, #96]
  41140c:	ldr	w0, [sp, #272]
  411410:	str	w4, [sp, #96]
  411414:	cmp	w4, w0
  411418:	b.lt	411318 <ferror@plt+0xe548>  // b.tstop
  41141c:	ldr	x0, [sp, #320]
  411420:	mov	w1, #0x2d                  	// #45
  411424:	bl	41358c <ferror@plt+0x107bc>
  411428:	ldr	w0, [sp, #272]
  41142c:	add	w0, w0, #0x1
  411430:	str	w0, [sp, #272]
  411434:	b	411408 <ferror@plt+0xe638>
  411438:	mov	w4, w1
  41143c:	tst	w2, #0xff
  411440:	b.eq	41145c <ferror@plt+0xe68c>  // b.none
  411444:	cbz	x0, 411454 <ferror@plt+0xe684>
  411448:	ldr	w0, [x0, #4]
  41144c:	add	w0, w0, w4
  411450:	ret
  411454:	mov	w0, #0x0                   	// #0
  411458:	b	41144c <ferror@plt+0xe67c>
  41145c:	b	40f318 <ferror@plt+0xc548>
  411460:	stp	x29, x30, [sp, #-64]!
  411464:	and	w2, w2, #0xff
  411468:	mov	x29, sp
  41146c:	stp	x23, x24, [sp, #48]
  411470:	ldr	x23, [x0]
  411474:	stp	x19, x20, [sp, #16]
  411478:	mov	x20, x0
  41147c:	stp	x21, x22, [sp, #32]
  411480:	cbz	x23, 4114a0 <ferror@plt+0xe6d0>
  411484:	ldp	w0, w21, [x23]
  411488:	ubfx	x0, x0, #0, #31
  41148c:	sub	w0, w0, w21
  411490:	cmp	w1, w0
  411494:	b.hi	4114b0 <ferror@plt+0xe6e0>  // b.pmore
  411498:	mov	w19, #0x0                   	// #0
  41149c:	b	411534 <ferror@plt+0xe764>
  4114a0:	mov	w19, #0x0                   	// #0
  4114a4:	cbz	w1, 411534 <ferror@plt+0xe764>
  4114a8:	mov	w21, #0x0                   	// #0
  4114ac:	b	4114c4 <ferror@plt+0xe6f4>
  4114b0:	ldrsb	w0, [x23, #3]
  4114b4:	tbz	w0, #31, 411520 <ferror@plt+0xe750>
  4114b8:	add	w1, w1, w21
  4114bc:	mov	w19, #0x1                   	// #1
  4114c0:	str	xzr, [x20]
  4114c4:	ldr	x0, [x20]
  4114c8:	bl	411438 <ferror@plt+0xe668>
  4114cc:	mov	w22, w0
  4114d0:	ldr	x0, [x20]
  4114d4:	ubfiz	x1, x22, #3, #32
  4114d8:	add	x1, x1, #0x8
  4114dc:	cbz	x0, 411528 <ferror@plt+0xe758>
  4114e0:	ldr	w24, [x0, #4]
  4114e4:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  4114e8:	str	x0, [x20]
  4114ec:	and	w22, w22, #0x7fffffff
  4114f0:	stp	w22, w24, [x0]
  4114f4:	mov	x1, x0
  4114f8:	cbz	w19, 41154c <ferror@plt+0xe77c>
  4114fc:	mov	w3, w21
  411500:	mov	x0, #0x0                   	// #0
  411504:	add	x2, x0, #0x1
  411508:	cmp	x0, x3
  41150c:	b.eq	411530 <ferror@plt+0xe760>  // b.none
  411510:	ldr	x0, [x23, x2, lsl #3]
  411514:	str	x0, [x1, x2, lsl #3]
  411518:	mov	x0, x2
  41151c:	b	411504 <ferror@plt+0xe734>
  411520:	mov	w19, #0x0                   	// #0
  411524:	b	4114a8 <ferror@plt+0xe6d8>
  411528:	mov	w24, #0x0                   	// #0
  41152c:	b	4114e4 <ferror@plt+0xe714>
  411530:	str	w21, [x1, #4]
  411534:	mov	w0, w19
  411538:	ldp	x19, x20, [sp, #16]
  41153c:	ldp	x21, x22, [sp, #32]
  411540:	ldp	x23, x24, [sp, #48]
  411544:	ldp	x29, x30, [sp], #64
  411548:	ret
  41154c:	mov	w19, #0x1                   	// #1
  411550:	b	411534 <ferror@plt+0xe764>
  411554:	sub	w0, w0, w1
  411558:	ret
  41155c:	stp	x29, x30, [sp, #-48]!
  411560:	and	w1, w1, #0xff
  411564:	mov	x29, sp
  411568:	stp	x19, x20, [sp, #16]
  41156c:	mov	x20, #0x0                   	// #0
  411570:	mov	x19, x0
  411574:	stp	x21, x22, [sp, #32]
  411578:	mov	x21, x2
  41157c:	mov	w22, w3
  411580:	bl	41358c <ferror@plt+0x107bc>
  411584:	cmp	w22, w20
  411588:	b.le	4115a0 <ferror@plt+0xe7d0>
  41158c:	ldrb	w1, [x21, x20]
  411590:	mov	x0, x19
  411594:	add	x20, x20, #0x1
  411598:	bl	41358c <ferror@plt+0x107bc>
  41159c:	b	411584 <ferror@plt+0xe7b4>
  4115a0:	mov	x0, x19
  4115a4:	mov	w1, #0xa                   	// #10
  4115a8:	ldp	x19, x20, [sp, #16]
  4115ac:	ldp	x21, x22, [sp, #32]
  4115b0:	ldp	x29, x30, [sp], #48
  4115b4:	b	41358c <ferror@plt+0x107bc>
  4115b8:	mov	x2, x0
  4115bc:	mov	x0, x1
  4115c0:	cbz	x2, 4115cc <ferror@plt+0xe7fc>
  4115c4:	mov	x16, x2
  4115c8:	br	x16
  4115cc:	ret
  4115d0:	mov	x1, x0
  4115d4:	mov	w2, #0x1                   	// #1
  4115d8:	strb	w2, [x1], #8
  4115dc:	str	xzr, [x0, #8]
  4115e0:	adrp	x0, 402000 <_ZGTtnam@plt-0x690>
  4115e4:	add	x0, x0, #0xad0
  4115e8:	stp	x0, xzr, [x1, #8]
  4115ec:	adrp	x0, 411000 <ferror@plt+0xe230>
  4115f0:	add	x0, x0, #0xb60
  4115f4:	str	x0, [x1, #24]
  4115f8:	ret
  4115fc:	mov	x2, x0
  411600:	str	x1, [x2], #8
  411604:	adrp	x1, 411000 <ferror@plt+0xe230>
  411608:	add	x1, x1, #0x554
  41160c:	str	xzr, [x0, #8]
  411610:	stp	x1, xzr, [x2, #8]
  411614:	adrp	x1, 411000 <ferror@plt+0xe230>
  411618:	add	x1, x1, #0x754
  41161c:	str	x1, [x2, #24]
  411620:	mov	w1, #0xffffffff            	// #-1
  411624:	str	w1, [x0, #40]
  411628:	ret
  41162c:	stp	x29, x30, [sp, #-32]!
  411630:	mov	x29, sp
  411634:	stp	x19, x20, [sp, #16]
  411638:	cbnz	x1, 411654 <ferror@plt+0xe884>
  41163c:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  411640:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  411644:	add	x2, x2, #0xc12
  411648:	add	x0, x0, #0xc20
  41164c:	mov	w1, #0x296                 	// #662
  411650:	bl	402de0 <ferror@plt+0x10>
  411654:	mov	x19, x0
  411658:	ldr	w0, [x0, #40]
  41165c:	mov	x20, x1
  411660:	cmn	w0, #0x1
  411664:	b.ne	411690 <ferror@plt+0xe8c0>  // b.any
  411668:	str	wzr, [x19, #40]
  41166c:	ldr	x0, [x19]
  411670:	ldr	w1, [x19, #40]
  411674:	add	w1, w1, #0x1
  411678:	bl	417c50 <ferror@plt+0x14e80>
  41167c:	cbz	x0, 411690 <ferror@plt+0xe8c0>
  411680:	ldr	w0, [x19, #40]
  411684:	add	w0, w0, #0x1
  411688:	str	w0, [x19, #40]
  41168c:	b	41166c <ferror@plt+0xe89c>
  411690:	ldr	x0, [x19]
  411694:	bl	4171e0 <ferror@plt+0x14410>
  411698:	strb	w0, [x20]
  41169c:	ldr	w0, [x19, #40]
  4116a0:	ldp	x19, x20, [sp, #16]
  4116a4:	ldp	x29, x30, [sp], #32
  4116a8:	ret
  4116ac:	stp	x29, x30, [sp, #-48]!
  4116b0:	mov	x29, sp
  4116b4:	stp	x19, x20, [sp, #16]
  4116b8:	mov	x19, x0
  4116bc:	mov	w20, #0x0                   	// #0
  4116c0:	ldr	x0, [x0, #8]
  4116c4:	str	x21, [sp, #32]
  4116c8:	bl	402b30 <free@plt>
  4116cc:	ldr	x0, [x19, #32]
  4116d0:	cbz	x0, 411700 <ferror@plt+0xe930>
  4116d4:	ldr	w1, [x0, #4]
  4116d8:	cmp	w20, w1
  4116dc:	b.cs	4116f4 <ferror@plt+0xe924>  // b.hs, b.nlast
  4116e0:	add	x1, x0, w20, uxtw #3
  4116e4:	ldr	x21, [x1, #8]
  4116e8:	cbnz	x21, 411724 <ferror@plt+0xe954>
  4116ec:	add	w20, w20, #0x1
  4116f0:	b	4116cc <ferror@plt+0xe8fc>
  4116f4:	ldrsb	w1, [x0, #3]
  4116f8:	tbz	w1, #31, 41173c <ferror@plt+0xe96c>
  4116fc:	str	wzr, [x0, #4]
  411700:	ldr	x0, [x19, #24]
  411704:	cbz	x0, 411714 <ferror@plt+0xe944>
  411708:	ldrsb	w1, [x0, #3]
  41170c:	tbz	w1, #31, 411744 <ferror@plt+0xe974>
  411710:	str	wzr, [x0, #4]
  411714:	ldp	x19, x20, [sp, #16]
  411718:	ldr	x21, [sp, #32]
  41171c:	ldp	x29, x30, [sp], #48
  411720:	ret
  411724:	ldr	x0, [x21]
  411728:	bl	402b30 <free@plt>
  41172c:	mov	x0, x21
  411730:	mov	x1, #0x10                  	// #16
  411734:	bl	445778 <_obstack_memory_used@@Base+0xd74>
  411738:	b	4116ec <ferror@plt+0xe91c>
  41173c:	bl	402b30 <free@plt>
  411740:	b	411700 <ferror@plt+0xe930>
  411744:	ldp	x19, x20, [sp, #16]
  411748:	ldr	x21, [sp, #32]
  41174c:	ldp	x29, x30, [sp], #48
  411750:	b	402b30 <free@plt>
  411754:	cbz	x0, 411780 <ferror@plt+0xe9b0>
  411758:	stp	x29, x30, [sp, #-32]!
  41175c:	mov	x29, sp
  411760:	str	x19, [sp, #16]
  411764:	mov	x19, x0
  411768:	bl	4116ac <ferror@plt+0xe8dc>
  41176c:	mov	x0, x19
  411770:	mov	x1, #0x28                  	// #40
  411774:	ldr	x19, [sp, #16]
  411778:	ldp	x29, x30, [sp], #32
  41177c:	b	445778 <_obstack_memory_used@@Base+0xd74>
  411780:	ret
  411784:	ldr	x3, [x0, #24]
  411788:	mov	w0, w1
  41178c:	mov	w1, #0x0                   	// #0
  411790:	add	x2, x3, #0xc
  411794:	cbz	x3, 4117c4 <ferror@plt+0xe9f4>
  411798:	ldr	w4, [x3, #4]
  41179c:	cmp	w4, w1
  4117a0:	b.ls	4117c4 <ferror@plt+0xe9f4>  // b.plast
  4117a4:	ldur	w4, [x2, #-4]
  4117a8:	cmp	w0, w4
  4117ac:	b.lt	4117b8 <ferror@plt+0xe9e8>  // b.tstop
  4117b0:	ldr	w4, [x2]
  4117b4:	add	w0, w0, w4
  4117b8:	add	w1, w1, #0x1
  4117bc:	add	x2, x2, #0x8
  4117c0:	b	411794 <ferror@plt+0xe9c4>
  4117c4:	ret
  4117c8:	ldr	x0, [x0, #32]
  4117cc:	cbz	x0, 4117dc <ferror@plt+0xea0c>
  4117d0:	ldr	w0, [x0, #4]
  4117d4:	add	w0, w0, #0x1
  4117d8:	ret
  4117dc:	mov	w0, #0x0                   	// #0
  4117e0:	b	4117d4 <ferror@plt+0xea04>
  4117e4:	stp	x29, x30, [sp, #-48]!
  4117e8:	mov	x29, sp
  4117ec:	stp	x19, x20, [sp, #16]
  4117f0:	mov	x20, x0
  4117f4:	mov	x19, x1
  4117f8:	str	x21, [sp, #32]
  4117fc:	mov	w21, #0x0                   	// #0
  411800:	ldr	x1, [x20, #32]
  411804:	cbz	x1, 411838 <ferror@plt+0xea68>
  411808:	ldr	w0, [x1, #4]
  41180c:	cmp	w21, w0
  411810:	b.cs	411838 <ferror@plt+0xea68>  // b.hs, b.nlast
  411814:	add	x1, x1, w21, uxtw #3
  411818:	add	w21, w21, #0x1
  41181c:	ldr	x0, [x1, #8]
  411820:	ldr	x1, [x0]
  411824:	mov	x0, x19
  411828:	bl	413938 <ferror@plt+0x10b68>
  41182c:	mov	x0, x19
  411830:	bl	413530 <ferror@plt+0x10760>
  411834:	b	411800 <ferror@plt+0xea30>
  411838:	mov	x0, x19
  41183c:	ldr	x1, [x20, #8]
  411840:	ldp	x19, x20, [sp, #16]
  411844:	ldr	x21, [sp, #32]
  411848:	ldp	x29, x30, [sp], #48
  41184c:	b	413938 <ferror@plt+0x10b68>
  411850:	stp	x29, x30, [sp, #-48]!
  411854:	mov	x29, sp
  411858:	stp	x19, x20, [sp, #16]
  41185c:	mov	x19, x0
  411860:	mov	x20, x1
  411864:	str	x21, [sp, #32]
  411868:	mov	w21, #0x0                   	// #0
  41186c:	ldr	x0, [x19, #32]
  411870:	cbz	x0, 4118a4 <ferror@plt+0xead4>
  411874:	ldr	w1, [x0, #4]
  411878:	cmp	w21, w1
  41187c:	b.cs	4118a4 <ferror@plt+0xead4>  // b.hs, b.nlast
  411880:	add	x0, x0, w21, uxtw #3
  411884:	mov	w1, #0x2b                  	// #43
  411888:	add	w21, w21, #0x1
  41188c:	ldr	x0, [x0, #8]
  411890:	ldr	w3, [x0, #8]
  411894:	ldr	x2, [x0]
  411898:	mov	x0, x20
  41189c:	bl	41155c <ferror@plt+0xe78c>
  4118a0:	b	41186c <ferror@plt+0xea9c>
  4118a4:	mov	x0, x19
  4118a8:	bl	412750 <ferror@plt+0xf980>
  4118ac:	ldr	w3, [x19, #16]
  4118b0:	tst	w0, #0xff
  4118b4:	ldr	x2, [x19, #8]
  4118b8:	b.eq	4118d4 <ferror@plt+0xeb04>  // b.none
  4118bc:	mov	w1, #0x2b                  	// #43
  4118c0:	mov	x0, x20
  4118c4:	ldp	x19, x20, [sp, #16]
  4118c8:	ldr	x21, [sp, #32]
  4118cc:	ldp	x29, x30, [sp], #48
  4118d0:	b	41155c <ferror@plt+0xe78c>
  4118d4:	mov	w1, #0x20                  	// #32
  4118d8:	b	4118c0 <ferror@plt+0xeaf0>
  4118dc:	stp	x29, x30, [sp, #-32]!
  4118e0:	mov	x29, sp
  4118e4:	stp	x19, x20, [sp, #16]
  4118e8:	mov	x20, x0
  4118ec:	ldr	w0, [x0, #20]
  4118f0:	cmp	w0, w1
  4118f4:	b.gt	411914 <ferror@plt+0xeb44>
  4118f8:	add	w1, w1, #0x1
  4118fc:	ldr	x0, [x20, #8]
  411900:	lsl	w19, w1, #1
  411904:	sxtw	x1, w19
  411908:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  41190c:	str	x0, [x20, #8]
  411910:	str	w19, [x20, #20]
  411914:	ldp	x19, x20, [sp, #16]
  411918:	ldp	x29, x30, [sp], #32
  41191c:	ret
  411920:	ldp	w1, w2, [x0, #16]
  411924:	cmp	w1, w2
  411928:	b.lt	41194c <ferror@plt+0xeb7c>  // b.tstop
  41192c:	stp	x29, x30, [sp, #-16]!
  411930:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  411934:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  411938:	mov	x29, sp
  41193c:	add	x2, x2, #0xbfa
  411940:	add	x0, x0, #0xc20
  411944:	mov	w1, #0x36b                 	// #875
  411948:	bl	402de0 <ferror@plt+0x10>
  41194c:	ldr	x0, [x0, #8]
  411950:	strb	wzr, [x0, w1, sxtw]
  411954:	ret
  411958:	stp	x29, x30, [sp, #-32]!
  41195c:	mov	x29, sp
  411960:	stp	x19, x20, [sp, #16]
  411964:	mov	x19, x0
  411968:	mov	x0, x1
  41196c:	mov	w1, w2
  411970:	str	w2, [x19]
  411974:	stp	xzr, xzr, [x19, #8]
  411978:	stp	xzr, xzr, [x19, #24]
  41197c:	bl	417c50 <ferror@plt+0x14e80>
  411980:	cbz	x0, 4119b4 <ferror@plt+0xebe4>
  411984:	str	w1, [x19, #16]
  411988:	mov	x20, x0
  41198c:	mov	x0, x19
  411990:	bl	4118dc <ferror@plt+0xeb0c>
  411994:	ldrsw	x2, [x19, #16]
  411998:	mov	x1, x20
  41199c:	ldr	x0, [x19, #8]
  4119a0:	bl	4026a0 <memcpy@plt>
  4119a4:	mov	x0, x19
  4119a8:	ldp	x19, x20, [sp, #16]
  4119ac:	ldp	x29, x30, [sp], #32
  4119b0:	b	411920 <ferror@plt+0xeb50>
  4119b4:	ldp	x19, x20, [sp, #16]
  4119b8:	ldp	x29, x30, [sp], #32
  4119bc:	ret
  4119c0:	stp	x29, x30, [sp, #-112]!
  4119c4:	mov	w5, w2
  4119c8:	cmp	w4, #0x1
  4119cc:	mov	x29, sp
  4119d0:	stp	x19, x20, [sp, #16]
  4119d4:	mov	x19, x0
  4119d8:	mov	w20, w4
  4119dc:	stp	x21, x22, [sp, #32]
  4119e0:	stp	x23, x24, [sp, #48]
  4119e4:	stp	x25, x26, [sp, #64]
  4119e8:	mov	x25, x3
  4119ec:	str	x27, [sp, #80]
  4119f0:	b.le	411a58 <ferror@plt+0xec88>
  4119f4:	add	x0, x3, w4, sxtw
  4119f8:	ldurb	w0, [x0, #-1]
  4119fc:	cmp	w0, #0xa
  411a00:	b.ne	411a58 <ferror@plt+0xec88>  // b.any
  411a04:	mov	x0, #0x10                  	// #16
  411a08:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  411a0c:	mov	x21, x0
  411a10:	sub	w20, w20, #0x1
  411a14:	mov	x0, x25
  411a18:	sxtw	x1, w20
  411a1c:	bl	445408 <_obstack_memory_used@@Base+0xa04>
  411a20:	str	x0, [x21]
  411a24:	add	x1, sp, #0x68
  411a28:	str	w20, [x21, #8]
  411a2c:	add	x0, x19, #0x20
  411a30:	str	x21, [sp, #104]
  411a34:	bl	412770 <ferror@plt+0xf9a0>
  411a38:	mov	w0, #0x1                   	// #1
  411a3c:	ldp	x19, x20, [sp, #16]
  411a40:	ldp	x21, x22, [sp, #32]
  411a44:	ldp	x23, x24, [sp, #48]
  411a48:	ldp	x25, x26, [sp, #64]
  411a4c:	ldr	x27, [sp, #80]
  411a50:	ldp	x29, x30, [sp], #112
  411a54:	ret
  411a58:	mov	x0, x19
  411a5c:	bl	411784 <ferror@plt+0xe9b4>
  411a60:	mov	w24, w0
  411a64:	mov	w1, w5
  411a68:	mov	x0, x19
  411a6c:	bl	411784 <ferror@plt+0xe9b4>
  411a70:	subs	w23, w24, #0x1
  411a74:	sub	w22, w0, #0x1
  411a78:	b.pl	411a94 <ferror@plt+0xecc4>  // b.nfrst
  411a7c:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  411a80:	add	x2, x2, #0xc39
  411a84:	mov	w1, #0x2fa                 	// #762
  411a88:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  411a8c:	add	x0, x0, #0xc20
  411a90:	bl	402de0 <ferror@plt+0x10>
  411a94:	tbz	w22, #31, 411aa8 <ferror@plt+0xecd8>
  411a98:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  411a9c:	mov	w1, #0x2fb                 	// #763
  411aa0:	add	x2, x2, #0xc39
  411aa4:	b	411a88 <ferror@plt+0xecb8>
  411aa8:	cmp	w24, w0
  411aac:	b.gt	411b58 <ferror@plt+0xed88>
  411ab0:	ldr	w1, [x19, #16]
  411ab4:	cmp	w1, w23
  411ab8:	b.lt	411b58 <ferror@plt+0xed88>  // b.tstop
  411abc:	cmp	w1, w22
  411ac0:	b.lt	411b58 <ferror@plt+0xed88>  // b.tstop
  411ac4:	sub	w21, w0, w24
  411ac8:	add	w1, w1, w20
  411acc:	sub	w26, w1, w21
  411ad0:	mov	x0, x19
  411ad4:	mov	w1, w26
  411ad8:	bl	4118dc <ferror@plt+0xeb0c>
  411adc:	ldr	x0, [x19, #8]
  411ae0:	sxtw	x3, w22
  411ae4:	ldrsw	x2, [x19, #16]
  411ae8:	add	x1, x0, w22, sxtw
  411aec:	add	x4, x0, x2
  411af0:	cmp	x1, x4
  411af4:	b.ls	411b08 <ferror@plt+0xed38>  // b.plast
  411af8:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  411afc:	mov	w1, #0x30b                 	// #779
  411b00:	add	x2, x2, #0xc39
  411b04:	b	411a88 <ferror@plt+0xecb8>
  411b08:	sxtw	x22, w20
  411b0c:	sxtw	x27, w23
  411b10:	add	x23, x22, w23, sxtw
  411b14:	sub	x2, x2, x3
  411b18:	add	x0, x0, x23
  411b1c:	bl	4026b0 <memmove@plt>
  411b20:	ldr	x0, [x19, #8]
  411b24:	mov	x1, x25
  411b28:	mov	x2, x22
  411b2c:	sub	w20, w20, w21
  411b30:	add	x0, x0, x27
  411b34:	bl	4026a0 <memcpy@plt>
  411b38:	str	w26, [x19, #16]
  411b3c:	mov	x0, x19
  411b40:	bl	411920 <ferror@plt+0xeb50>
  411b44:	stp	w24, w20, [sp, #104]
  411b48:	add	x1, sp, #0x68
  411b4c:	add	x0, x19, #0x18
  411b50:	bl	412894 <ferror@plt+0xfac4>
  411b54:	b	411a38 <ferror@plt+0xec68>
  411b58:	mov	w0, #0x0                   	// #0
  411b5c:	b	411a3c <ferror@plt+0xec6c>
  411b60:	cbz	x0, 411b94 <ferror@plt+0xedc4>
  411b64:	stp	x29, x30, [sp, #-32]!
  411b68:	mov	x29, sp
  411b6c:	str	x19, [sp, #16]
  411b70:	mov	x19, x0
  411b74:	add	x0, x0, #0x8
  411b78:	ldr	x1, [x19, #8]
  411b7c:	bl	4129b4 <ferror@plt+0xfbe4>
  411b80:	mov	x0, x19
  411b84:	mov	x1, #0x30                  	// #48
  411b88:	ldr	x19, [sp, #16]
  411b8c:	ldp	x29, x30, [sp], #32
  411b90:	b	445778 <_obstack_memory_used@@Base+0xd74>
  411b94:	ret
  411b98:	stp	x29, x30, [sp, #-48]!
  411b9c:	mov	x29, sp
  411ba0:	stp	x19, x20, [sp, #16]
  411ba4:	str	x21, [sp, #32]
  411ba8:	cbnz	x1, 411bc4 <ferror@plt+0xedf4>
  411bac:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  411bb0:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  411bb4:	add	x2, x2, #0xc45
  411bb8:	add	x0, x0, #0xc20
  411bbc:	mov	w1, #0x140                 	// #320
  411bc0:	bl	402de0 <ferror@plt+0x10>
  411bc4:	mov	x19, x0
  411bc8:	add	x21, x0, #0x8
  411bcc:	mov	x20, x1
  411bd0:	mov	x0, x21
  411bd4:	bl	412a94 <ferror@plt+0xfcc4>
  411bd8:	ldr	x2, [x19, #8]
  411bdc:	cbnz	x2, 411bf4 <ferror@plt+0xee24>
  411be0:	mov	x0, #0x0                   	// #0
  411be4:	ldp	x19, x20, [sp, #16]
  411be8:	ldr	x21, [sp, #32]
  411bec:	ldp	x29, x30, [sp], #48
  411bf0:	ret
  411bf4:	ldr	x0, [x2]
  411bf8:	mov	x1, x20
  411bfc:	ldr	x3, [x21, #8]
  411c00:	blr	x3
  411c04:	cbnz	w0, 411be0 <ferror@plt+0xee10>
  411c08:	ldr	x0, [x19, #8]
  411c0c:	cbz	x0, 411be0 <ferror@plt+0xee10>
  411c10:	ldr	x0, [x0, #8]
  411c14:	b	411be4 <ferror@plt+0xee14>
  411c18:	stp	x29, x30, [sp, #-48]!
  411c1c:	mov	x29, sp
  411c20:	stp	x19, x20, [sp, #16]
  411c24:	stp	x21, x22, [sp, #32]
  411c28:	cbnz	x1, 411c44 <ferror@plt+0xee74>
  411c2c:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  411c30:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  411c34:	add	x2, x2, #0xc4e
  411c38:	add	x0, x0, #0xc20
  411c3c:	mov	w1, #0x149                 	// #329
  411c40:	bl	402de0 <ferror@plt+0x10>
  411c44:	mov	x20, x0
  411c48:	mov	x21, x1
  411c4c:	bl	411b98 <ferror@plt+0xedc8>
  411c50:	mov	x19, x0
  411c54:	cbnz	x0, 411cdc <ferror@plt+0xef0c>
  411c58:	mov	x0, #0x30                  	// #48
  411c5c:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  411c60:	mov	x19, x0
  411c64:	str	x21, [x0], #8
  411c68:	adrp	x1, 411000 <ferror@plt+0xe230>
  411c6c:	add	x1, x1, #0x554
  411c70:	add	x22, x20, #0x8
  411c74:	str	xzr, [x19, #8]
  411c78:	stp	x1, xzr, [x0, #8]
  411c7c:	adrp	x1, 411000 <ferror@plt+0xe230>
  411c80:	add	x1, x1, #0x754
  411c84:	str	x1, [x0, #24]
  411c88:	mov	w0, #0xffffffff            	// #-1
  411c8c:	str	w0, [x19, #40]
  411c90:	mov	x1, x21
  411c94:	mov	x0, x22
  411c98:	bl	412a94 <ferror@plt+0xfcc4>
  411c9c:	ldr	x2, [x20, #8]
  411ca0:	cbz	x2, 411cf0 <ferror@plt+0xef20>
  411ca4:	ldr	x0, [x2]
  411ca8:	mov	x1, x21
  411cac:	ldr	x3, [x20, #16]
  411cb0:	blr	x3
  411cb4:	mov	w22, w0
  411cb8:	ldr	x0, [x20, #8]
  411cbc:	cbz	x0, 411cf8 <ferror@plt+0xef28>
  411cc0:	cbnz	w22, 411cf8 <ferror@plt+0xef28>
  411cc4:	ldr	x1, [x20, #32]
  411cc8:	cbz	x1, 411cd4 <ferror@plt+0xef04>
  411ccc:	ldr	x0, [x0, #8]
  411cd0:	blr	x1
  411cd4:	ldr	x0, [x20, #8]
  411cd8:	str	x19, [x0, #8]
  411cdc:	mov	x0, x19
  411ce0:	ldp	x19, x20, [sp, #16]
  411ce4:	ldp	x21, x22, [sp, #32]
  411ce8:	ldp	x29, x30, [sp], #48
  411cec:	ret
  411cf0:	mov	w22, #0x0                   	// #0
  411cf4:	b	411cb8 <ferror@plt+0xeee8>
  411cf8:	mov	x0, #0x28                  	// #40
  411cfc:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  411d00:	ldr	x1, [x20, #8]
  411d04:	stp	x21, x19, [x0]
  411d08:	cbnz	x1, 411d18 <ferror@plt+0xef48>
  411d0c:	stp	xzr, xzr, [x0, #16]
  411d10:	str	x0, [x20, #8]
  411d14:	b	411cdc <ferror@plt+0xef0c>
  411d18:	tbz	w22, #31, 411d2c <ferror@plt+0xef5c>
  411d1c:	ldr	x2, [x1, #24]
  411d20:	stp	x1, x2, [x0, #16]
  411d24:	str	xzr, [x1, #24]
  411d28:	b	411d10 <ferror@plt+0xef40>
  411d2c:	ldr	x2, [x1, #16]
  411d30:	stp	x2, x1, [x0, #16]
  411d34:	str	xzr, [x1, #16]
  411d38:	b	411d10 <ferror@plt+0xef40>
  411d3c:	add	x0, x0, #0x8
  411d40:	b	412dd8 <ferror@plt+0x10008>
  411d44:	stp	x29, x30, [sp, #-32]!
  411d48:	add	x0, x0, #0x8
  411d4c:	mov	x29, sp
  411d50:	str	x19, [sp, #16]
  411d54:	mov	w19, w2
  411d58:	bl	412dd8 <ferror@plt+0x10008>
  411d5c:	cbz	x0, 411d70 <ferror@plt+0xefa0>
  411d60:	mov	w1, w19
  411d64:	ldr	x19, [sp, #16]
  411d68:	ldp	x29, x30, [sp], #32
  411d6c:	b	411784 <ferror@plt+0xe9b4>
  411d70:	mov	w0, w19
  411d74:	ldr	x19, [sp, #16]
  411d78:	ldp	x29, x30, [sp], #32
  411d7c:	ret
  411d80:	stp	x29, x30, [sp, #-32]!
  411d84:	mov	x29, sp
  411d88:	stp	x19, x20, [sp, #16]
  411d8c:	mov	w20, w2
  411d90:	mov	w19, w3
  411d94:	bl	411b98 <ferror@plt+0xedc8>
  411d98:	cbz	x0, 411db0 <ferror@plt+0xefe0>
  411d9c:	mov	w2, w19
  411da0:	mov	w1, w20
  411da4:	ldp	x19, x20, [sp, #16]
  411da8:	ldp	x29, x30, [sp], #32
  411dac:	b	411d44 <ferror@plt+0xef74>
  411db0:	mov	w0, w19
  411db4:	ldp	x19, x20, [sp, #16]
  411db8:	ldp	x29, x30, [sp], #32
  411dbc:	ret
  411dc0:	stp	x29, x30, [sp, #-112]!
  411dc4:	mov	x29, sp
  411dc8:	stp	x19, x20, [sp, #16]
  411dcc:	mov	x19, x1
  411dd0:	add	x1, sp, #0x6f
  411dd4:	stp	x21, x22, [sp, #32]
  411dd8:	mov	w20, #0x1                   	// #1
  411ddc:	stp	x23, x24, [sp, #48]
  411de0:	mov	x23, x0
  411de4:	stp	x25, x26, [sp, #64]
  411de8:	add	x26, x0, #0x8
  411dec:	str	x27, [sp, #80]
  411df0:	bl	41162c <ferror@plt+0xe85c>
  411df4:	mov	w22, w0
  411df8:	mov	x27, #0x80000000            	// #2147483648
  411dfc:	cmp	w20, w22
  411e00:	b.gt	411ecc <ferror@plt+0xf0fc>
  411e04:	mov	w1, w20
  411e08:	mov	x0, x26
  411e0c:	bl	412dd8 <ferror@plt+0x10008>
  411e10:	cbz	x0, 411e38 <ferror@plt+0xf068>
  411e14:	mov	x1, x19
  411e18:	bl	4117e4 <ferror@plt+0xea14>
  411e1c:	cmp	w20, w22
  411e20:	b.ge	411e30 <ferror@plt+0xf060>  // b.tcont
  411e24:	mov	x0, x19
  411e28:	mov	w1, #0xa                   	// #10
  411e2c:	bl	41358c <ferror@plt+0x107bc>
  411e30:	add	w20, w20, #0x1
  411e34:	b	411dfc <ferror@plt+0xf02c>
  411e38:	ldr	x0, [x23]
  411e3c:	mov	w1, w20
  411e40:	bl	417c50 <ferror@plt+0x14e80>
  411e44:	mov	x24, x0
  411e48:	mov	x25, x1
  411e4c:	cbnz	x0, 411e70 <ferror@plt+0xf0a0>
  411e50:	mov	w0, #0x0                   	// #0
  411e54:	ldp	x19, x20, [sp, #16]
  411e58:	ldp	x21, x22, [sp, #32]
  411e5c:	ldp	x23, x24, [sp, #48]
  411e60:	ldp	x25, x26, [sp, #64]
  411e64:	ldr	x27, [sp, #80]
  411e68:	ldp	x29, x30, [sp], #112
  411e6c:	ret
  411e70:	mov	x21, #0x0                   	// #0
  411e74:	cmp	x21, x25
  411e78:	b.cs	411e1c <ferror@plt+0xf04c>  // b.hs, b.nlast
  411e7c:	cmp	x21, x27
  411e80:	b.ne	411e9c <ferror@plt+0xf0cc>  // b.any
  411e84:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  411e88:	add	x2, x2, #0xc61
  411e8c:	mov	w1, #0x3d                  	// #61
  411e90:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  411e94:	add	x0, x0, #0xbe8
  411e98:	bl	402de0 <ferror@plt+0x10>
  411e9c:	sxtw	x0, w21
  411ea0:	cmp	x25, w21, sxtw
  411ea4:	b.hi	411eb8 <ferror@plt+0xf0e8>  // b.pmore
  411ea8:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  411eac:	mov	w1, #0x3e                  	// #62
  411eb0:	add	x2, x2, #0xc61
  411eb4:	b	411e90 <ferror@plt+0xf0c0>
  411eb8:	ldrb	w1, [x24, x0]
  411ebc:	add	x21, x21, #0x1
  411ec0:	mov	x0, x19
  411ec4:	bl	41358c <ferror@plt+0x107bc>
  411ec8:	b	411e74 <ferror@plt+0xf0a4>
  411ecc:	ldrb	w0, [sp, #111]
  411ed0:	cbnz	w0, 411e54 <ferror@plt+0xf084>
  411ed4:	mov	x0, x19
  411ed8:	mov	w1, #0xa                   	// #10
  411edc:	bl	41358c <ferror@plt+0x107bc>
  411ee0:	mov	w0, #0x1                   	// #1
  411ee4:	b	411e54 <ferror@plt+0xf084>
  411ee8:	stp	x29, x30, [sp, #-64]!
  411eec:	mov	x29, sp
  411ef0:	stp	x19, x20, [sp, #16]
  411ef4:	mov	x19, x1
  411ef8:	mov	w20, w2
  411efc:	stp	x21, x22, [sp, #32]
  411f00:	mov	x21, x0
  411f04:	ldrb	w0, [x19, #67]
  411f08:	mov	w22, w20
  411f0c:	stp	x23, x24, [sp, #48]
  411f10:	add	x24, x21, #0x8
  411f14:	mov	w23, w3
  411f18:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  411f1c:	add	x1, x1, #0xa78
  411f20:	bl	40eb1c <ferror@plt+0xbd4c>
  411f24:	mov	x1, x0
  411f28:	mov	x0, x19
  411f2c:	bl	413938 <ferror@plt+0x10b68>
  411f30:	cmp	w22, w23
  411f34:	b.gt	411f94 <ferror@plt+0xf1c4>
  411f38:	mov	w1, w22
  411f3c:	mov	x0, x24
  411f40:	bl	412dd8 <ferror@plt+0x10008>
  411f44:	cbnz	x0, 411f60 <ferror@plt+0xf190>
  411f48:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  411f4c:	add	x2, x2, #0xc6c
  411f50:	mov	w1, #0x239                 	// #569
  411f54:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  411f58:	add	x0, x0, #0xc20
  411f5c:	bl	402de0 <ferror@plt+0x10>
  411f60:	bl	412750 <ferror@plt+0xf980>
  411f64:	tst	w0, #0xff
  411f68:	b.eq	411f8c <ferror@plt+0xf1bc>  // b.none
  411f6c:	ldr	x0, [x21]
  411f70:	mov	w1, w22
  411f74:	bl	417c50 <ferror@plt+0x14e80>
  411f78:	mov	w3, w1
  411f7c:	mov	x2, x0
  411f80:	mov	w1, #0x2d                  	// #45
  411f84:	mov	x0, x19
  411f88:	bl	41155c <ferror@plt+0xe78c>
  411f8c:	add	w22, w22, #0x1
  411f90:	b	411f30 <ferror@plt+0xf160>
  411f94:	ldrb	w0, [x19, #67]
  411f98:	add	x21, x21, #0x8
  411f9c:	bl	40ee38 <ferror@plt+0xc068>
  411fa0:	mov	x1, x0
  411fa4:	mov	x0, x19
  411fa8:	bl	413938 <ferror@plt+0x10b68>
  411fac:	ldrb	w0, [x19, #67]
  411fb0:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  411fb4:	add	x1, x1, #0xa84
  411fb8:	bl	40eb1c <ferror@plt+0xbd4c>
  411fbc:	mov	x1, x0
  411fc0:	mov	x0, x19
  411fc4:	bl	413938 <ferror@plt+0x10b68>
  411fc8:	cmp	w20, w23
  411fcc:	b.gt	412000 <ferror@plt+0xf230>
  411fd0:	mov	w1, w20
  411fd4:	mov	x0, x21
  411fd8:	bl	412dd8 <ferror@plt+0x10008>
  411fdc:	cbnz	x0, 411ff0 <ferror@plt+0xf220>
  411fe0:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  411fe4:	mov	w1, #0x24b                 	// #587
  411fe8:	add	x2, x2, #0xc6c
  411fec:	b	411f54 <ferror@plt+0xf184>
  411ff0:	mov	x1, x19
  411ff4:	add	w20, w20, #0x1
  411ff8:	bl	411850 <ferror@plt+0xea80>
  411ffc:	b	411fc8 <ferror@plt+0xf1f8>
  412000:	ldrb	w0, [x19, #67]
  412004:	bl	40ee38 <ferror@plt+0xc068>
  412008:	mov	x1, x0
  41200c:	mov	x0, x19
  412010:	ldp	x19, x20, [sp, #16]
  412014:	ldp	x21, x22, [sp, #32]
  412018:	ldp	x23, x24, [sp, #48]
  41201c:	ldp	x29, x30, [sp], #64
  412020:	b	413938 <ferror@plt+0x10b68>
  412024:	stp	x29, x30, [sp, #-48]!
  412028:	mov	x29, sp
  41202c:	stp	x19, x20, [sp, #16]
  412030:	mov	w19, w1
  412034:	mov	w20, #0x0                   	// #0
  412038:	stp	x21, x22, [sp, #32]
  41203c:	mov	w21, w2
  412040:	add	x22, x0, #0x8
  412044:	cmp	w19, w21
  412048:	b.gt	412074 <ferror@plt+0xf2a4>
  41204c:	mov	w1, w19
  412050:	mov	x0, x22
  412054:	bl	412dd8 <ferror@plt+0x10008>
  412058:	cbz	x0, 41206c <ferror@plt+0xf29c>
  41205c:	bl	4117c8 <ferror@plt+0xe9f8>
  412060:	add	w20, w20, w0
  412064:	add	w19, w19, #0x1
  412068:	b	412044 <ferror@plt+0xf274>
  41206c:	add	w20, w20, #0x1
  412070:	b	412064 <ferror@plt+0xf294>
  412074:	mov	w0, w20
  412078:	ldp	x19, x20, [sp, #16]
  41207c:	ldp	x21, x22, [sp, #32]
  412080:	ldp	x29, x30, [sp], #48
  412084:	ret
  412088:	stp	x29, x30, [sp, #-80]!
  41208c:	mov	x29, sp
  412090:	stp	x19, x20, [sp, #16]
  412094:	mov	x20, x1
  412098:	mov	w19, w2
  41209c:	mov	w1, w19
  4120a0:	stp	x21, x22, [sp, #32]
  4120a4:	mov	w21, w4
  4120a8:	mov	x22, x0
  4120ac:	stp	x23, x24, [sp, #48]
  4120b0:	sub	w24, w3, w2
  4120b4:	mov	w23, w3
  4120b8:	mov	w2, w3
  4120bc:	stp	x25, x26, [sp, #64]
  4120c0:	bl	412024 <ferror@plt+0xf254>
  4120c4:	mov	w25, w0
  4120c8:	ldrb	w0, [x20, #67]
  4120cc:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4120d0:	add	x1, x1, #0xa6e
  4120d4:	add	w24, w24, #0x1
  4120d8:	add	x26, x22, #0x8
  4120dc:	bl	40eb1c <ferror@plt+0xbd4c>
  4120e0:	mov	x1, x0
  4120e4:	mov	x0, x20
  4120e8:	bl	413938 <ferror@plt+0x10b68>
  4120ec:	mov	w5, w25
  4120f0:	mov	w4, w21
  4120f4:	mov	w3, w24
  4120f8:	mov	w2, w19
  4120fc:	mov	x0, x20
  412100:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  412104:	add	x1, x1, #0xc87
  412108:	bl	414f80 <ferror@plt+0x121b0>
  41210c:	ldrb	w0, [x20, #67]
  412110:	bl	40ee38 <ferror@plt+0xc068>
  412114:	mov	x1, x0
  412118:	mov	x0, x20
  41211c:	bl	413938 <ferror@plt+0x10b68>
  412120:	cmp	w19, w23
  412124:	b.gt	412198 <ferror@plt+0xf3c8>
  412128:	mov	w1, w19
  41212c:	mov	x0, x26
  412130:	bl	412dd8 <ferror@plt+0x10008>
  412134:	cbz	x0, 412170 <ferror@plt+0xf3a0>
  412138:	mov	w21, w19
  41213c:	mov	w1, w21
  412140:	mov	x0, x26
  412144:	bl	412dd8 <ferror@plt+0x10008>
  412148:	cbz	x0, 412154 <ferror@plt+0xf384>
  41214c:	add	w21, w21, #0x1
  412150:	b	41213c <ferror@plt+0xf36c>
  412154:	sub	w3, w21, #0x1
  412158:	mov	w2, w19
  41215c:	mov	x1, x20
  412160:	mov	x0, x22
  412164:	bl	411ee8 <ferror@plt+0xf118>
  412168:	mov	w19, w21
  41216c:	b	412120 <ferror@plt+0xf350>
  412170:	ldr	x0, [x22]
  412174:	mov	w1, w19
  412178:	add	w21, w19, #0x1
  41217c:	bl	417c50 <ferror@plt+0x14e80>
  412180:	mov	w3, w1
  412184:	mov	x2, x0
  412188:	mov	w1, #0x20                  	// #32
  41218c:	mov	x0, x20
  412190:	bl	41155c <ferror@plt+0xe78c>
  412194:	b	412168 <ferror@plt+0xf398>
  412198:	sub	w0, w25, w24
  41219c:	ldp	x19, x20, [sp, #16]
  4121a0:	ldp	x21, x22, [sp, #32]
  4121a4:	ldp	x23, x24, [sp, #48]
  4121a8:	ldp	x25, x26, [sp, #64]
  4121ac:	ldp	x29, x30, [sp], #80
  4121b0:	ret
  4121b4:	stp	x29, x30, [sp, #-112]!
  4121b8:	tst	w2, #0xff
  4121bc:	mov	x29, sp
  4121c0:	stp	x19, x20, [sp, #16]
  4121c4:	mov	x20, x1
  4121c8:	stp	x21, x22, [sp, #32]
  4121cc:	mov	x21, x0
  4121d0:	stp	x23, x24, [sp, #48]
  4121d4:	stp	x25, x26, [sp, #64]
  4121d8:	stp	x27, x28, [sp, #80]
  4121dc:	b.eq	412238 <ferror@plt+0xf468>  // b.none
  4121e0:	ldrb	w0, [x20, #67]
  4121e4:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4121e8:	add	x1, x1, #0xa60
  4121ec:	bl	40eb1c <ferror@plt+0xbd4c>
  4121f0:	mov	x1, x0
  4121f4:	mov	x0, x20
  4121f8:	bl	413938 <ferror@plt+0x10b68>
  4121fc:	ldr	x2, [x21]
  412200:	mov	x0, x20
  412204:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  412208:	add	x1, x1, #0xc9c
  41220c:	bl	414f80 <ferror@plt+0x121b0>
  412210:	ldr	x2, [x21]
  412214:	mov	x0, x20
  412218:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  41221c:	add	x1, x1, #0xca4
  412220:	bl	414f80 <ferror@plt+0x121b0>
  412224:	ldrb	w0, [x20, #67]
  412228:	bl	40ee38 <ferror@plt+0xc068>
  41222c:	mov	x1, x0
  412230:	mov	x0, x20
  412234:	bl	413938 <ferror@plt+0x10b68>
  412238:	ldr	x19, [x21, #8]
  41223c:	add	x26, x21, #0x8
  412240:	cbz	x19, 412254 <ferror@plt+0xf484>
  412244:	mov	x0, x19
  412248:	ldr	x19, [x19, #16]
  41224c:	cbnz	x19, 412244 <ferror@plt+0xf474>
  412250:	ldr	x19, [x0, #8]
  412254:	add	x1, sp, #0x6f
  412258:	mov	x0, x21
  41225c:	bl	41162c <ferror@plt+0xe85c>
  412260:	mov	w24, w0
  412264:	mov	w25, #0x0                   	// #0
  412268:	mov	w27, #0x1                   	// #1
  41226c:	cbz	x19, 412318 <ferror@plt+0xf548>
  412270:	ldr	w22, [x19]
  412274:	sub	w22, w22, #0x3
  412278:	cmp	w22, #0x0
  41227c:	csel	w22, w22, w27, gt
  412280:	ldr	w1, [x19]
  412284:	mov	x0, x26
  412288:	bl	412d6c <ferror@plt+0xff9c>
  41228c:	ldr	w23, [x19]
  412290:	cbz	x0, 4122c4 <ferror@plt+0xf4f4>
  412294:	ldr	x28, [x0, #8]
  412298:	mov	x0, x19
  41229c:	bl	412750 <ferror@plt+0xf980>
  4122a0:	and	w0, w0, #0xff
  4122a4:	cbz	x28, 4122c4 <ferror@plt+0xf4f4>
  4122a8:	cmp	w0, #0x0
  4122ac:	ldr	w1, [x28]
  4122b0:	cinc	w0, w23, ne  // ne = any
  4122b4:	add	w0, w0, #0x2
  4122b8:	sub	w1, w1, #0x3
  4122bc:	cmp	w1, w0
  4122c0:	b.le	412310 <ferror@plt+0xf540>
  4122c4:	mov	x0, x19
  4122c8:	bl	412750 <ferror@plt+0xf980>
  4122cc:	tst	w0, #0xff
  4122d0:	add	w4, w25, w22
  4122d4:	cinc	w3, w23, ne  // ne = any
  4122d8:	mov	x1, x20
  4122dc:	add	w3, w3, #0x2
  4122e0:	mov	w2, w22
  4122e4:	cmp	w3, w24
  4122e8:	mov	x0, x21
  4122ec:	csel	w3, w3, w24, le
  4122f0:	bl	412088 <ferror@plt+0xf2b8>
  4122f4:	add	w25, w25, w0
  4122f8:	ldr	w1, [x19]
  4122fc:	mov	x0, x26
  412300:	bl	412d6c <ferror@plt+0xff9c>
  412304:	cbz	x0, 412318 <ferror@plt+0xf548>
  412308:	ldr	x19, [x0, #8]
  41230c:	b	41226c <ferror@plt+0xf49c>
  412310:	mov	x19, x28
  412314:	b	412280 <ferror@plt+0xf4b0>
  412318:	ldp	x19, x20, [sp, #16]
  41231c:	ldp	x21, x22, [sp, #32]
  412320:	ldp	x23, x24, [sp, #48]
  412324:	ldp	x25, x26, [sp, #64]
  412328:	ldp	x27, x28, [sp, #80]
  41232c:	ldp	x29, x30, [sp], #112
  412330:	ret
  412334:	stp	x29, x30, [sp, #-48]!
  412338:	mov	x29, sp
  41233c:	stp	x21, x22, [sp, #32]
  412340:	mov	x21, x1
  412344:	ldrb	w1, [x0]
  412348:	stp	x19, x20, [sp, #16]
  41234c:	cbz	w1, 412394 <ferror@plt+0xf5c4>
  412350:	ldr	x20, [x0, #8]
  412354:	and	w22, w2, #0xff
  412358:	mov	x19, #0x0                   	// #0
  41235c:	cbz	x20, 412374 <ferror@plt+0xf5a4>
  412360:	ldr	x0, [x20, #16]
  412364:	str	x19, [x20, #32]
  412368:	mov	x19, x20
  41236c:	mov	x20, x0
  412370:	b	41235c <ferror@plt+0xf58c>
  412374:	cbz	x19, 412394 <ferror@plt+0xf5c4>
  412378:	ldr	x0, [x19, #8]
  41237c:	mov	w2, w22
  412380:	mov	x1, x21
  412384:	ldr	x20, [x19, #32]
  412388:	bl	4121b4 <ferror@plt+0xf3e4>
  41238c:	ldr	x0, [x19, #24]
  412390:	b	412368 <ferror@plt+0xf598>
  412394:	ldp	x19, x20, [sp, #16]
  412398:	ldp	x21, x22, [sp, #32]
  41239c:	ldp	x29, x30, [sp], #48
  4123a0:	ret
  4123a4:	stp	x29, x30, [sp, #-48]!
  4123a8:	mov	x29, sp
  4123ac:	stp	x21, x22, [sp, #32]
  4123b0:	add	x22, x0, #0x8
  4123b4:	mov	w21, w1
  4123b8:	stp	x19, x20, [sp, #16]
  4123bc:	mov	x20, x0
  4123c0:	mov	x0, x22
  4123c4:	bl	412dd8 <ferror@plt+0x10008>
  4123c8:	mov	x19, x0
  4123cc:	cbnz	x0, 412408 <ferror@plt+0xf638>
  4123d0:	mov	x0, #0x28                  	// #40
  4123d4:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  4123d8:	ldr	x1, [x20]
  4123dc:	mov	x19, x0
  4123e0:	mov	w2, w21
  4123e4:	bl	411958 <ferror@plt+0xeb88>
  4123e8:	ldr	x0, [x19, #8]
  4123ec:	cbnz	x0, 41241c <ferror@plt+0xf64c>
  4123f0:	mov	x0, x19
  4123f4:	bl	4116ac <ferror@plt+0xe8dc>
  4123f8:	mov	x0, x19
  4123fc:	mov	x19, #0x0                   	// #0
  412400:	mov	x1, #0x28                  	// #40
  412404:	bl	445778 <_obstack_memory_used@@Base+0xd74>
  412408:	mov	x0, x19
  41240c:	ldp	x19, x20, [sp, #16]
  412410:	ldp	x21, x22, [sp, #32]
  412414:	ldp	x29, x30, [sp], #48
  412418:	ret
  41241c:	mov	x0, x22
  412420:	mov	w1, w21
  412424:	bl	412c00 <ferror@plt+0xfe30>
  412428:	ldr	x0, [x20, #8]
  41242c:	cbz	x0, 412468 <ferror@plt+0xf698>
  412430:	ldr	w0, [x0]
  412434:	mov	w1, w21
  412438:	ldr	x2, [x22, #8]
  41243c:	blr	x2
  412440:	mov	w22, w0
  412444:	ldr	x0, [x20, #8]
  412448:	cbz	x0, 412470 <ferror@plt+0xf6a0>
  41244c:	cbnz	w22, 412470 <ferror@plt+0xf6a0>
  412450:	ldr	x1, [x0, #8]
  412454:	ldr	x0, [x20, #32]
  412458:	bl	4115b8 <ferror@plt+0xe7e8>
  41245c:	ldr	x0, [x20, #8]
  412460:	str	x19, [x0, #8]
  412464:	b	412408 <ferror@plt+0xf638>
  412468:	mov	w22, #0x0                   	// #0
  41246c:	b	412444 <ferror@plt+0xf674>
  412470:	mov	x0, #0x28                  	// #40
  412474:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  412478:	ldr	x1, [x20, #8]
  41247c:	str	w21, [x0]
  412480:	str	x19, [x0, #8]
  412484:	cbnz	x1, 412494 <ferror@plt+0xf6c4>
  412488:	stp	xzr, xzr, [x0, #16]
  41248c:	str	x0, [x20, #8]
  412490:	b	412408 <ferror@plt+0xf638>
  412494:	tbz	w22, #31, 4124a8 <ferror@plt+0xf6d8>
  412498:	ldr	x2, [x1, #24]
  41249c:	stp	x1, x2, [x0, #16]
  4124a0:	str	xzr, [x1, #24]
  4124a4:	b	41248c <ferror@plt+0xf6bc>
  4124a8:	ldr	x2, [x1, #16]
  4124ac:	stp	x2, x1, [x0, #16]
  4124b0:	str	xzr, [x1, #16]
  4124b4:	b	41248c <ferror@plt+0xf6bc>
  4124b8:	stp	x29, x30, [sp, #-48]!
  4124bc:	mov	x29, sp
  4124c0:	stp	x19, x20, [sp, #16]
  4124c4:	mov	w19, w2
  4124c8:	mov	w20, w3
  4124cc:	stp	x21, x22, [sp, #32]
  4124d0:	mov	x21, x4
  4124d4:	mov	w22, w5
  4124d8:	bl	4123a4 <ferror@plt+0xf5d4>
  4124dc:	cbz	x0, 412500 <ferror@plt+0xf730>
  4124e0:	mov	w4, w22
  4124e4:	mov	x3, x21
  4124e8:	mov	w2, w20
  4124ec:	mov	w1, w19
  4124f0:	ldp	x19, x20, [sp, #16]
  4124f4:	ldp	x21, x22, [sp, #32]
  4124f8:	ldp	x29, x30, [sp], #48
  4124fc:	b	4119c0 <ferror@plt+0xebf0>
  412500:	mov	w0, #0x0                   	// #0
  412504:	ldp	x19, x20, [sp, #16]
  412508:	ldp	x21, x22, [sp, #32]
  41250c:	ldp	x29, x30, [sp], #48
  412510:	ret
  412514:	stp	x29, x30, [sp, #-128]!
  412518:	mov	x29, sp
  41251c:	stp	x19, x20, [sp, #16]
  412520:	mov	x20, x0
  412524:	ldr	w0, [x1]
  412528:	mov	x19, x1
  41252c:	add	x8, sp, #0x40
  412530:	stp	x21, x22, [sp, #32]
  412534:	str	x23, [sp, #48]
  412538:	bl	417064 <ferror@plt+0x14294>
  41253c:	ldr	w0, [x19, #4]
  412540:	add	x8, sp, #0x60
  412544:	ldp	w23, w22, [sp, #72]
  412548:	ldr	x21, [sp, #64]
  41254c:	bl	417064 <ferror@plt+0x14294>
  412550:	ldr	x1, [sp, #96]
  412554:	cmp	x1, x21
  412558:	b.ne	4125ac <ferror@plt+0xf7dc>  // b.any
  41255c:	ldr	w21, [sp, #104]
  412560:	cmp	w21, w23
  412564:	b.ne	4125ac <ferror@plt+0xf7dc>  // b.any
  412568:	cbz	w22, 4125ac <ferror@plt+0xf7dc>
  41256c:	ldr	w23, [sp, #108]
  412570:	cbz	w23, 4125ac <ferror@plt+0xf7dc>
  412574:	mov	x0, x20
  412578:	bl	411c18 <ferror@plt+0xee48>
  41257c:	ldrb	w1, [x20]
  412580:	cbz	w1, 4125ac <ferror@plt+0xf7dc>
  412584:	ldr	w5, [x19, #16]
  412588:	mov	w3, w23
  41258c:	mov	w2, w22
  412590:	mov	w1, w21
  412594:	ldr	x4, [x19, #8]
  412598:	ldp	x19, x20, [sp, #16]
  41259c:	ldp	x21, x22, [sp, #32]
  4125a0:	ldr	x23, [sp, #48]
  4125a4:	ldp	x29, x30, [sp], #128
  4125a8:	b	4124b8 <ferror@plt+0xf6e8>
  4125ac:	mov	w0, #0x0                   	// #0
  4125b0:	ldp	x19, x20, [sp, #16]
  4125b4:	ldp	x21, x22, [sp, #32]
  4125b8:	ldr	x23, [sp, #48]
  4125bc:	ldp	x29, x30, [sp], #128
  4125c0:	ret
  4125c4:	stp	x29, x30, [sp, #-64]!
  4125c8:	mov	x29, sp
  4125cc:	stp	x19, x20, [sp, #16]
  4125d0:	mov	x20, x0
  4125d4:	ldrb	w0, [x0]
  4125d8:	stp	x21, x22, [sp, #32]
  4125dc:	str	x23, [sp, #48]
  4125e0:	cbz	w0, 4125f4 <ferror@plt+0xf824>
  4125e4:	ldrb	w0, [x1, #160]
  4125e8:	mov	x21, x1
  4125ec:	cbz	w0, 412608 <ferror@plt+0xf838>
  4125f0:	strb	wzr, [x20]
  4125f4:	ldp	x19, x20, [sp, #16]
  4125f8:	ldp	x21, x22, [sp, #32]
  4125fc:	ldr	x23, [sp, #48]
  412600:	ldp	x29, x30, [sp], #64
  412604:	ret
  412608:	add	x22, x1, #0x78
  41260c:	mov	w19, #0x0                   	// #0
  412610:	mov	x23, #0xfffffffffffffff0    	// #-16
  412614:	ldr	w0, [x21, #120]
  412618:	cmp	w19, w0
  41261c:	b.cs	4125f4 <ferror@plt+0xf824>  // b.hs, b.nlast
  412620:	sxtw	x2, w19
  412624:	cmp	w19, #0x1
  412628:	b.gt	412654 <ferror@plt+0xf884>
  41262c:	add	x2, x2, #0x1
  412630:	add	x2, x22, x2, lsl #3
  412634:	ldr	x1, [x2]
  412638:	mov	x0, x20
  41263c:	bl	412514 <ferror@plt+0xf744>
  412640:	tst	w0, #0xff
  412644:	b.ne	41264c <ferror@plt+0xf87c>  // b.any
  412648:	strb	wzr, [x20]
  41264c:	add	w19, w19, #0x1
  412650:	b	412614 <ferror@plt+0xf844>
  412654:	ldr	x3, [x22, #32]
  412658:	add	x2, x23, w19, sxtw #3
  41265c:	add	x2, x3, x2
  412660:	b	412634 <ferror@plt+0xf864>
  412664:	stp	x29, x30, [sp, #-112]!
  412668:	mov	x29, sp
  41266c:	stp	x19, x20, [sp, #16]
  412670:	mov	x19, x0
  412674:	ldrb	w0, [x0]
  412678:	cbz	w0, 4126c4 <ferror@plt+0xf8f4>
  41267c:	and	w20, w1, #0xff
  412680:	add	x0, sp, #0x28
  412684:	mov	w1, #0x0                   	// #0
  412688:	bl	4132bc <ferror@plt+0x104ec>
  41268c:	mov	w2, w20
  412690:	add	x1, sp, #0x28
  412694:	mov	x0, x19
  412698:	bl	412334 <ferror@plt+0xf564>
  41269c:	add	x0, sp, #0x28
  4126a0:	bl	413324 <ferror@plt+0x10554>
  4126a4:	bl	445390 <_obstack_memory_used@@Base+0x98c>
  4126a8:	mov	x19, x0
  4126ac:	add	x0, sp, #0x28
  4126b0:	bl	413174 <ferror@plt+0x103a4>
  4126b4:	mov	x0, x19
  4126b8:	ldp	x19, x20, [sp, #16]
  4126bc:	ldp	x29, x30, [sp], #112
  4126c0:	ret
  4126c4:	mov	x19, #0x0                   	// #0
  4126c8:	b	4126b4 <ferror@plt+0xf8e4>
  4126cc:	stp	x29, x30, [sp, #-112]!
  4126d0:	mov	w1, #0x0                   	// #0
  4126d4:	mov	x29, sp
  4126d8:	str	x19, [sp, #16]
  4126dc:	mov	x19, x0
  4126e0:	add	x0, sp, #0x28
  4126e4:	bl	4132bc <ferror@plt+0x104ec>
  4126e8:	add	x1, sp, #0x28
  4126ec:	mov	x0, x19
  4126f0:	bl	411dc0 <ferror@plt+0xeff0>
  4126f4:	tst	w0, #0xff
  4126f8:	b.eq	412724 <ferror@plt+0xf954>  // b.none
  4126fc:	add	x0, sp, #0x28
  412700:	bl	413324 <ferror@plt+0x10554>
  412704:	bl	445390 <_obstack_memory_used@@Base+0x98c>
  412708:	mov	x19, x0
  41270c:	add	x0, sp, #0x28
  412710:	bl	413174 <ferror@plt+0x103a4>
  412714:	mov	x0, x19
  412718:	ldr	x19, [sp, #16]
  41271c:	ldp	x29, x30, [sp], #112
  412720:	ret
  412724:	mov	x19, #0x0                   	// #0
  412728:	b	41270c <ferror@plt+0xf93c>
  41272c:	ldrb	w2, [x0]
  412730:	cbz	w2, 412748 <ferror@plt+0xf978>
  412734:	stp	x29, x30, [sp, #-16]!
  412738:	mov	x29, sp
  41273c:	bl	411c18 <ferror@plt+0xee48>
  412740:	ldp	x29, x30, [sp], #16
  412744:	b	4126cc <ferror@plt+0xf8fc>
  412748:	mov	x0, #0x0                   	// #0
  41274c:	ret
  412750:	ldr	x0, [x0, #24]
  412754:	cbz	x0, 412768 <ferror@plt+0xf998>
  412758:	ldr	w0, [x0, #4]
  41275c:	cmp	w0, #0x0
  412760:	cset	w0, ne  // ne = any
  412764:	ret
  412768:	mov	w0, #0x0                   	// #0
  41276c:	b	41275c <ferror@plt+0xf98c>
  412770:	stp	x29, x30, [sp, #-80]!
  412774:	mov	x29, sp
  412778:	stp	x21, x22, [sp, #32]
  41277c:	ldr	x22, [x0]
  412780:	stp	x19, x20, [sp, #16]
  412784:	mov	x20, x0
  412788:	stp	x23, x24, [sp, #48]
  41278c:	mov	x23, x1
  412790:	str	x25, [sp, #64]
  412794:	cbz	x22, 412828 <ferror@plt+0xfa58>
  412798:	ldp	w0, w21, [x22]
  41279c:	ubfx	x0, x0, #0, #31
  4127a0:	cmp	w0, w21
  4127a4:	b.ne	412854 <ferror@plt+0xfa84>  // b.any
  4127a8:	ldrsb	w0, [x22, #3]
  4127ac:	tbz	w0, #31, 412828 <ferror@plt+0xfa58>
  4127b0:	add	w2, w21, #0x1
  4127b4:	mov	w24, #0x1                   	// #1
  4127b8:	str	xzr, [x20]
  4127bc:	ldr	x0, [x20]
  4127c0:	cbz	x0, 412838 <ferror@plt+0xfa68>
  4127c4:	ldr	w1, [x0, #4]
  4127c8:	ldr	w0, [x0]
  4127cc:	add	w1, w2, w1
  4127d0:	and	w0, w0, #0x7fffffff
  4127d4:	bl	4156fc <ferror@plt+0x1292c>
  4127d8:	mov	w19, w0
  4127dc:	ldr	x0, [x20]
  4127e0:	ubfiz	x1, x19, #3, #32
  4127e4:	add	x1, x1, #0x8
  4127e8:	cbz	x0, 412848 <ferror@plt+0xfa78>
  4127ec:	ldr	w25, [x0, #4]
  4127f0:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  4127f4:	str	x0, [x20]
  4127f8:	and	w2, w19, #0x7fffffff
  4127fc:	stp	w2, w25, [x0]
  412800:	cbz	w24, 412854 <ferror@plt+0xfa84>
  412804:	mov	w3, w21
  412808:	mov	x1, #0x0                   	// #0
  41280c:	add	x2, x1, #0x1
  412810:	cmp	x3, x1
  412814:	b.eq	412850 <ferror@plt+0xfa80>  // b.none
  412818:	ldr	x1, [x22, x2, lsl #3]
  41281c:	str	x1, [x0, x2, lsl #3]
  412820:	mov	x1, x2
  412824:	b	41280c <ferror@plt+0xfa3c>
  412828:	mov	w24, #0x0                   	// #0
  41282c:	mov	w21, #0x0                   	// #0
  412830:	mov	w2, #0x1                   	// #1
  412834:	b	4127bc <ferror@plt+0xf9ec>
  412838:	cmp	w2, #0x4
  41283c:	mov	w19, #0x4                   	// #4
  412840:	csel	w19, w2, w19, cs  // cs = hs, nlast
  412844:	b	4127dc <ferror@plt+0xfa0c>
  412848:	mov	w25, #0x0                   	// #0
  41284c:	b	4127f0 <ferror@plt+0xfa20>
  412850:	str	w21, [x0, #4]
  412854:	ldr	x0, [x20]
  412858:	ldr	x3, [x23]
  41285c:	ldr	w1, [x0, #4]
  412860:	ldp	x19, x20, [sp, #16]
  412864:	add	w2, w1, #0x1
  412868:	ldp	x21, x22, [sp, #32]
  41286c:	ldp	x23, x24, [sp, #48]
  412870:	ldr	x25, [sp, #64]
  412874:	str	w2, [x0, #4]
  412878:	add	x2, x0, w1, uxtw #3
  41287c:	ubfiz	x1, x1, #3, #32
  412880:	add	x1, x1, #0x8
  412884:	add	x0, x0, x1
  412888:	str	x3, [x2, #8]
  41288c:	ldp	x29, x30, [sp], #80
  412890:	ret
  412894:	stp	x29, x30, [sp, #-80]!
  412898:	mov	x29, sp
  41289c:	stp	x21, x22, [sp, #32]
  4128a0:	ldr	x22, [x0]
  4128a4:	stp	x19, x20, [sp, #16]
  4128a8:	mov	x20, x0
  4128ac:	stp	x23, x24, [sp, #48]
  4128b0:	mov	x23, x1
  4128b4:	str	x25, [sp, #64]
  4128b8:	cbz	x22, 41294c <ferror@plt+0xfb7c>
  4128bc:	ldp	w0, w21, [x22]
  4128c0:	ubfx	x0, x0, #0, #31
  4128c4:	cmp	w0, w21
  4128c8:	b.ne	412978 <ferror@plt+0xfba8>  // b.any
  4128cc:	ldrsb	w0, [x22, #3]
  4128d0:	tbz	w0, #31, 41294c <ferror@plt+0xfb7c>
  4128d4:	add	w2, w21, #0x1
  4128d8:	mov	w24, #0x1                   	// #1
  4128dc:	str	xzr, [x20]
  4128e0:	ldr	x0, [x20]
  4128e4:	cbz	x0, 41295c <ferror@plt+0xfb8c>
  4128e8:	ldr	w1, [x0, #4]
  4128ec:	ldr	w0, [x0]
  4128f0:	add	w1, w2, w1
  4128f4:	and	w0, w0, #0x7fffffff
  4128f8:	bl	4156fc <ferror@plt+0x1292c>
  4128fc:	mov	w19, w0
  412900:	ldr	x0, [x20]
  412904:	ubfiz	x1, x19, #3, #32
  412908:	add	x1, x1, #0x8
  41290c:	cbz	x0, 41296c <ferror@plt+0xfb9c>
  412910:	ldr	w25, [x0, #4]
  412914:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  412918:	str	x0, [x20]
  41291c:	and	w2, w19, #0x7fffffff
  412920:	stp	w2, w25, [x0]
  412924:	cbz	w24, 412978 <ferror@plt+0xfba8>
  412928:	mov	w3, w21
  41292c:	mov	x1, #0x0                   	// #0
  412930:	add	x2, x1, #0x1
  412934:	cmp	x3, x1
  412938:	b.eq	412974 <ferror@plt+0xfba4>  // b.none
  41293c:	ldr	x1, [x22, x2, lsl #3]
  412940:	str	x1, [x0, x2, lsl #3]
  412944:	mov	x1, x2
  412948:	b	412930 <ferror@plt+0xfb60>
  41294c:	mov	w24, #0x0                   	// #0
  412950:	mov	w21, #0x0                   	// #0
  412954:	mov	w2, #0x1                   	// #1
  412958:	b	4128e0 <ferror@plt+0xfb10>
  41295c:	cmp	w2, #0x4
  412960:	mov	w19, #0x4                   	// #4
  412964:	csel	w19, w2, w19, cs  // cs = hs, nlast
  412968:	b	412900 <ferror@plt+0xfb30>
  41296c:	mov	w25, #0x0                   	// #0
  412970:	b	412914 <ferror@plt+0xfb44>
  412974:	str	w21, [x0, #4]
  412978:	ldr	x2, [x20]
  41297c:	ldr	x3, [x23]
  412980:	ldr	w1, [x2, #4]
  412984:	ldp	x19, x20, [sp, #16]
  412988:	add	w0, w1, #0x1
  41298c:	ubfiz	x1, x1, #3, #32
  412990:	ldp	x21, x22, [sp, #32]
  412994:	ldp	x23, x24, [sp, #48]
  412998:	ldr	x25, [sp, #64]
  41299c:	str	w0, [x2, #4]
  4129a0:	add	x0, x1, #0x8
  4129a4:	str	x3, [x2, x0]
  4129a8:	add	x0, x2, x0
  4129ac:	ldp	x29, x30, [sp], #80
  4129b0:	ret
  4129b4:	cbz	x1, 412a90 <ferror@plt+0xfcc0>
  4129b8:	stp	x29, x30, [sp, #-48]!
  4129bc:	mov	x29, sp
  4129c0:	stp	x19, x20, [sp, #16]
  4129c4:	mov	x19, x1
  4129c8:	ldr	x1, [x0, #16]
  4129cc:	stp	x21, x22, [sp, #32]
  4129d0:	mov	x21, x0
  4129d4:	cbz	x1, 4129e0 <ferror@plt+0xfc10>
  4129d8:	ldr	w0, [x19]
  4129dc:	blr	x1
  4129e0:	ldr	x1, [x19, #8]
  4129e4:	ldr	x0, [x21, #24]
  4129e8:	bl	4115b8 <ferror@plt+0xe7e8>
  4129ec:	str	xzr, [x19, #32]
  4129f0:	mov	x20, x19
  4129f4:	mov	x19, #0x0                   	// #0
  4129f8:	ldr	x0, [x20, #16]
  4129fc:	cbz	x0, 412a2c <ferror@plt+0xfc5c>
  412a00:	ldr	x1, [x21, #16]
  412a04:	cbz	x1, 412a10 <ferror@plt+0xfc40>
  412a08:	ldr	w0, [x0]
  412a0c:	blr	x1
  412a10:	ldr	x0, [x20, #16]
  412a14:	ldr	x1, [x0, #8]
  412a18:	ldr	x0, [x21, #24]
  412a1c:	bl	4115b8 <ferror@plt+0xe7e8>
  412a20:	ldr	x0, [x20, #16]
  412a24:	str	x19, [x0, #32]
  412a28:	mov	x19, x0
  412a2c:	ldr	x0, [x20, #24]
  412a30:	cbz	x0, 412a60 <ferror@plt+0xfc90>
  412a34:	ldr	x1, [x21, #16]
  412a38:	cbz	x1, 412a44 <ferror@plt+0xfc74>
  412a3c:	ldr	w0, [x0]
  412a40:	blr	x1
  412a44:	ldr	x0, [x20, #24]
  412a48:	ldr	x1, [x0, #8]
  412a4c:	ldr	x0, [x21, #24]
  412a50:	bl	4115b8 <ferror@plt+0xe7e8>
  412a54:	ldr	x0, [x20, #24]
  412a58:	str	x19, [x0, #32]
  412a5c:	mov	x19, x0
  412a60:	ldr	x22, [x20, #32]
  412a64:	mov	x0, x20
  412a68:	mov	x1, #0x28                  	// #40
  412a6c:	bl	445778 <_obstack_memory_used@@Base+0xd74>
  412a70:	cbz	x22, 412a7c <ferror@plt+0xfcac>
  412a74:	mov	x20, x22
  412a78:	b	4129f8 <ferror@plt+0xfc28>
  412a7c:	cbnz	x19, 4129f0 <ferror@plt+0xfc20>
  412a80:	ldp	x19, x20, [sp, #16]
  412a84:	ldp	x21, x22, [sp, #32]
  412a88:	ldp	x29, x30, [sp], #48
  412a8c:	ret
  412a90:	ret
  412a94:	stp	x29, x30, [sp, #-64]!
  412a98:	mov	x29, sp
  412a9c:	stp	x21, x22, [sp, #32]
  412aa0:	mov	x21, x0
  412aa4:	ldr	x0, [x0]
  412aa8:	stp	x19, x20, [sp, #16]
  412aac:	str	x23, [sp, #48]
  412ab0:	mov	x23, x1
  412ab4:	cbz	x0, 412b0c <ferror@plt+0xfd3c>
  412ab8:	ldp	x20, x2, [x21]
  412abc:	mov	x0, x23
  412ac0:	ldr	x1, [x20]
  412ac4:	blr	x2
  412ac8:	mov	w22, w0
  412acc:	cmp	w0, #0x0
  412ad0:	cbz	w0, 412b0c <ferror@plt+0xfd3c>
  412ad4:	ldp	x0, x19, [x20, #16]
  412ad8:	csel	x19, x19, x0, ge  // ge = tcont
  412adc:	cbz	x19, 412b0c <ferror@plt+0xfd3c>
  412ae0:	ldr	x1, [x19]
  412ae4:	mov	x0, x23
  412ae8:	ldr	x2, [x21, #8]
  412aec:	blr	x2
  412af0:	cmp	w0, #0x0
  412af4:	cbnz	w0, 412b20 <ferror@plt+0xfd50>
  412af8:	tbz	w22, #31, 412b70 <ferror@plt+0xfda0>
  412afc:	ldr	x0, [x19, #24]
  412b00:	str	x20, [x19, #24]
  412b04:	str	x0, [x20, #16]
  412b08:	str	x19, [x21]
  412b0c:	ldp	x19, x20, [sp, #16]
  412b10:	ldp	x21, x22, [sp, #32]
  412b14:	ldr	x23, [sp, #48]
  412b18:	ldp	x29, x30, [sp], #64
  412b1c:	ret
  412b20:	b.ge	412b68 <ferror@plt+0xfd98>  // b.tcont
  412b24:	ldr	x1, [x19, #16]
  412b28:	cbz	x1, 412af8 <ferror@plt+0xfd28>
  412b2c:	lsr	w3, w22, #31
  412b30:	lsr	w2, w0, #31
  412b34:	cmp	w3, #0x0
  412b38:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  412b3c:	b.eq	412b80 <ferror@plt+0xfdb0>  // b.none
  412b40:	ldr	x0, [x19, #16]
  412b44:	ldr	x1, [x0, #24]
  412b48:	str	x19, [x0, #24]
  412b4c:	str	x1, [x19, #16]
  412b50:	str	x0, [x20, #16]
  412b54:	ldr	x1, [x0, #24]
  412b58:	str	x20, [x0, #24]
  412b5c:	str	x1, [x20, #16]
  412b60:	str	x0, [x21]
  412b64:	b	412ab8 <ferror@plt+0xfce8>
  412b68:	ldr	x1, [x19, #24]
  412b6c:	b	412b28 <ferror@plt+0xfd58>
  412b70:	ldr	x0, [x19, #16]
  412b74:	str	x20, [x19, #16]
  412b78:	str	x0, [x20, #24]
  412b7c:	b	412b08 <ferror@plt+0xfd38>
  412b80:	cmp	w22, #0x0
  412b84:	cset	w1, gt
  412b88:	cmp	w0, #0x0
  412b8c:	cset	w0, gt
  412b90:	cmp	w1, #0x0
  412b94:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  412b98:	b.eq	412bc0 <ferror@plt+0xfdf0>  // b.none
  412b9c:	ldr	x0, [x19, #24]
  412ba0:	ldr	x1, [x0, #16]
  412ba4:	str	x19, [x0, #16]
  412ba8:	str	x1, [x19, #24]
  412bac:	str	x0, [x20, #24]
  412bb0:	ldr	x1, [x0, #16]
  412bb4:	str	x20, [x0, #16]
  412bb8:	str	x1, [x20, #24]
  412bbc:	b	412b60 <ferror@plt+0xfd90>
  412bc0:	cmp	w3, #0x0
  412bc4:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  412bc8:	b.eq	412be0 <ferror@plt+0xfe10>  // b.none
  412bcc:	ldr	x0, [x19, #24]
  412bd0:	ldr	x1, [x0, #16]
  412bd4:	str	x19, [x0, #16]
  412bd8:	str	x1, [x19, #24]
  412bdc:	b	412b50 <ferror@plt+0xfd80>
  412be0:	cmp	w2, #0x0
  412be4:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  412be8:	b.eq	412ab8 <ferror@plt+0xfce8>  // b.none
  412bec:	ldr	x0, [x19, #16]
  412bf0:	ldr	x1, [x0, #24]
  412bf4:	str	x19, [x0, #24]
  412bf8:	str	x1, [x19, #16]
  412bfc:	b	412bac <ferror@plt+0xfddc>
  412c00:	stp	x29, x30, [sp, #-64]!
  412c04:	mov	x29, sp
  412c08:	stp	x21, x22, [sp, #32]
  412c0c:	mov	x21, x0
  412c10:	ldr	x0, [x0]
  412c14:	stp	x19, x20, [sp, #16]
  412c18:	str	x23, [sp, #48]
  412c1c:	mov	w23, w1
  412c20:	cbz	x0, 412c78 <ferror@plt+0xfea8>
  412c24:	ldp	x20, x2, [x21]
  412c28:	mov	w0, w23
  412c2c:	ldr	w1, [x20]
  412c30:	blr	x2
  412c34:	mov	w22, w0
  412c38:	cmp	w0, #0x0
  412c3c:	cbz	w0, 412c78 <ferror@plt+0xfea8>
  412c40:	ldp	x0, x19, [x20, #16]
  412c44:	csel	x19, x19, x0, ge  // ge = tcont
  412c48:	cbz	x19, 412c78 <ferror@plt+0xfea8>
  412c4c:	ldr	w1, [x19]
  412c50:	mov	w0, w23
  412c54:	ldr	x2, [x21, #8]
  412c58:	blr	x2
  412c5c:	cmp	w0, #0x0
  412c60:	cbnz	w0, 412c8c <ferror@plt+0xfebc>
  412c64:	tbz	w22, #31, 412cdc <ferror@plt+0xff0c>
  412c68:	ldr	x0, [x19, #24]
  412c6c:	str	x20, [x19, #24]
  412c70:	str	x0, [x20, #16]
  412c74:	str	x19, [x21]
  412c78:	ldp	x19, x20, [sp, #16]
  412c7c:	ldp	x21, x22, [sp, #32]
  412c80:	ldr	x23, [sp, #48]
  412c84:	ldp	x29, x30, [sp], #64
  412c88:	ret
  412c8c:	b.ge	412cd4 <ferror@plt+0xff04>  // b.tcont
  412c90:	ldr	x1, [x19, #16]
  412c94:	cbz	x1, 412c64 <ferror@plt+0xfe94>
  412c98:	lsr	w3, w22, #31
  412c9c:	lsr	w2, w0, #31
  412ca0:	cmp	w3, #0x0
  412ca4:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  412ca8:	b.eq	412cec <ferror@plt+0xff1c>  // b.none
  412cac:	ldr	x0, [x19, #16]
  412cb0:	ldr	x1, [x0, #24]
  412cb4:	str	x19, [x0, #24]
  412cb8:	str	x1, [x19, #16]
  412cbc:	str	x0, [x20, #16]
  412cc0:	ldr	x1, [x0, #24]
  412cc4:	str	x20, [x0, #24]
  412cc8:	str	x1, [x20, #16]
  412ccc:	str	x0, [x21]
  412cd0:	b	412c24 <ferror@plt+0xfe54>
  412cd4:	ldr	x1, [x19, #24]
  412cd8:	b	412c94 <ferror@plt+0xfec4>
  412cdc:	ldr	x0, [x19, #16]
  412ce0:	str	x20, [x19, #16]
  412ce4:	str	x0, [x20, #24]
  412ce8:	b	412c74 <ferror@plt+0xfea4>
  412cec:	cmp	w22, #0x0
  412cf0:	cset	w1, gt
  412cf4:	cmp	w0, #0x0
  412cf8:	cset	w0, gt
  412cfc:	cmp	w1, #0x0
  412d00:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  412d04:	b.eq	412d2c <ferror@plt+0xff5c>  // b.none
  412d08:	ldr	x0, [x19, #24]
  412d0c:	ldr	x1, [x0, #16]
  412d10:	str	x19, [x0, #16]
  412d14:	str	x1, [x19, #24]
  412d18:	str	x0, [x20, #24]
  412d1c:	ldr	x1, [x0, #16]
  412d20:	str	x20, [x0, #16]
  412d24:	str	x1, [x20, #24]
  412d28:	b	412ccc <ferror@plt+0xfefc>
  412d2c:	cmp	w3, #0x0
  412d30:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  412d34:	b.eq	412d4c <ferror@plt+0xff7c>  // b.none
  412d38:	ldr	x0, [x19, #24]
  412d3c:	ldr	x1, [x0, #16]
  412d40:	str	x19, [x0, #16]
  412d44:	str	x1, [x19, #24]
  412d48:	b	412cbc <ferror@plt+0xfeec>
  412d4c:	cmp	w2, #0x0
  412d50:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  412d54:	b.eq	412c24 <ferror@plt+0xfe54>  // b.none
  412d58:	ldr	x0, [x19, #16]
  412d5c:	ldr	x1, [x0, #24]
  412d60:	str	x19, [x0, #24]
  412d64:	str	x1, [x19, #16]
  412d68:	b	412d18 <ferror@plt+0xff48>
  412d6c:	ldr	x2, [x0]
  412d70:	cbz	x2, 412dd0 <ferror@plt+0x10000>
  412d74:	stp	x29, x30, [sp, #-32]!
  412d78:	mov	x29, sp
  412d7c:	stp	x19, x20, [sp, #16]
  412d80:	mov	x19, x0
  412d84:	mov	w20, w1
  412d88:	bl	412c00 <ferror@plt+0xfe30>
  412d8c:	ldp	x0, x2, [x19]
  412d90:	mov	w1, w20
  412d94:	ldr	w0, [x0]
  412d98:	blr	x2
  412d9c:	cmp	w0, #0x0
  412da0:	ldr	x0, [x19]
  412da4:	b.gt	412dbc <ferror@plt+0xffec>
  412da8:	ldr	x1, [x0, #24]
  412dac:	cbz	x1, 412dc8 <ferror@plt+0xfff8>
  412db0:	mov	x0, x1
  412db4:	ldr	x1, [x1, #16]
  412db8:	cbnz	x1, 412db0 <ferror@plt+0xffe0>
  412dbc:	ldp	x19, x20, [sp, #16]
  412dc0:	ldp	x29, x30, [sp], #32
  412dc4:	ret
  412dc8:	mov	x0, #0x0                   	// #0
  412dcc:	b	412dbc <ferror@plt+0xffec>
  412dd0:	mov	x0, #0x0                   	// #0
  412dd4:	ret
  412dd8:	stp	x29, x30, [sp, #-32]!
  412ddc:	mov	x29, sp
  412de0:	stp	x19, x20, [sp, #16]
  412de4:	mov	x19, x0
  412de8:	mov	w20, w1
  412dec:	bl	412c00 <ferror@plt+0xfe30>
  412df0:	ldr	x0, [x19]
  412df4:	cbnz	x0, 412e08 <ferror@plt+0x10038>
  412df8:	mov	x0, #0x0                   	// #0
  412dfc:	ldp	x19, x20, [sp, #16]
  412e00:	ldp	x29, x30, [sp], #32
  412e04:	ret
  412e08:	ldr	w0, [x0]
  412e0c:	mov	w1, w20
  412e10:	ldr	x2, [x19, #8]
  412e14:	blr	x2
  412e18:	cbnz	w0, 412df8 <ferror@plt+0x10028>
  412e1c:	ldr	x0, [x19]
  412e20:	cbz	x0, 412df8 <ferror@plt+0x10028>
  412e24:	ldr	x0, [x0, #8]
  412e28:	b	412dfc <ferror@plt+0x1002c>
  412e2c:	mov	x0, x1
  412e30:	mov	x1, x2
  412e34:	stp	x29, x30, [sp, #-16]!
  412e38:	mov	x29, sp
  412e3c:	ldrb	w2, [x2, #8]
  412e40:	ldr	x1, [x1]
  412e44:	bl	4121b4 <ferror@plt+0xf3e4>
  412e48:	mov	w0, #0x0                   	// #0
  412e4c:	ldp	x29, x30, [sp], #16
  412e50:	ret
  412e54:	ldrb	w3, [x0]
  412e58:	cbnz	x1, 412e7c <ferror@plt+0x100ac>
  412e5c:	stp	x29, x30, [sp, #-16]!
  412e60:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  412e64:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  412e68:	mov	x29, sp
  412e6c:	add	x2, x2, #0xcac
  412e70:	add	x0, x0, #0xcbd
  412e74:	mov	w1, #0x71b                 	// #1819
  412e78:	bl	402de0 <ferror@plt+0x10>
  412e7c:	tbz	w3, #7, 412f58 <ferror@plt+0x10188>
  412e80:	mov	w4, w3
  412e84:	mov	x5, x0
  412e88:	mov	x0, #0x0                   	// #0
  412e8c:	tbz	w4, #7, 412e9c <ferror@plt+0x100cc>
  412e90:	add	x0, x0, #0x1
  412e94:	lsl	w4, w4, #1
  412e98:	b	412e8c <ferror@plt+0x100bc>
  412e9c:	sub	x4, x0, #0x2
  412ea0:	cmp	x4, #0x4
  412ea4:	ccmp	x0, x1, #0x2, ls  // ls = plast
  412ea8:	b.ls	412ebc <ferror@plt+0x100ec>  // b.plast
  412eac:	mov	w0, #0xffffffff            	// #-1
  412eb0:	str	w0, [x2]
  412eb4:	mov	w0, #0x0                   	// #0
  412eb8:	ret
  412ebc:	mov	w1, #0x7                   	// #7
  412ec0:	sub	w4, w1, w0
  412ec4:	mov	w1, #0x1                   	// #1
  412ec8:	lsl	w1, w1, w4
  412ecc:	sub	w1, w1, #0x1
  412ed0:	and	w1, w1, w3
  412ed4:	mov	x3, #0x1                   	// #1
  412ed8:	ldrb	w4, [x5, x3]
  412edc:	and	w6, w4, #0xc0
  412ee0:	cmp	w6, #0x80
  412ee4:	b.ne	412eac <ferror@plt+0x100dc>  // b.any
  412ee8:	and	w4, w4, #0x3f
  412eec:	add	x3, x3, #0x1
  412ef0:	orr	w1, w4, w1, lsl #6
  412ef4:	cmp	x0, x3
  412ef8:	b.hi	412ed8 <ferror@plt+0x10108>  // b.pmore
  412efc:	cmp	w1, #0x7f
  412f00:	b.ls	412eac <ferror@plt+0x100dc>  // b.plast
  412f04:	cmp	w1, #0x7ff
  412f08:	ccmp	x0, #0x2, #0x0, ls  // ls = plast
  412f0c:	b.hi	412eac <ferror@plt+0x100dc>  // b.pmore
  412f10:	mov	w3, #0xffff                	// #65535
  412f14:	cmp	w1, w3
  412f18:	ccmp	x0, #0x3, #0x0, ls  // ls = plast
  412f1c:	b.hi	412eac <ferror@plt+0x100dc>  // b.pmore
  412f20:	mov	w3, #0x1fffff              	// #2097151
  412f24:	cmp	w1, w3
  412f28:	ccmp	x0, #0x4, #0x0, ls  // ls = plast
  412f2c:	b.hi	412eac <ferror@plt+0x100dc>  // b.pmore
  412f30:	mov	w3, #0x3ffffff             	// #67108863
  412f34:	cmp	w1, w3
  412f38:	ccmp	x0, #0x6, #0x0, ls  // ls = plast
  412f3c:	b.eq	412eac <ferror@plt+0x100dc>  // b.none
  412f40:	mov	w3, #0xffff2800            	// #-55296
  412f44:	add	w3, w1, w3
  412f48:	cmp	w3, #0x7ff
  412f4c:	b.ls	412eac <ferror@plt+0x100dc>  // b.plast
  412f50:	str	w1, [x2]
  412f54:	ret
  412f58:	mov	w0, #0x1                   	// #1
  412f5c:	str	w3, [x2]
  412f60:	ret
  412f64:	stp	x29, x30, [sp, #-32]!
  412f68:	mov	x29, sp
  412f6c:	stp	x19, x20, [sp, #16]
  412f70:	mov	x19, x0
  412f74:	ldr	w20, [x0, #40]
  412f78:	cmp	w20, #0x0
  412f7c:	b.le	412f8c <ferror@plt+0x101bc>
  412f80:	ldr	w0, [x0, #36]
  412f84:	cmp	w0, #0x1
  412f88:	b.hi	412f9c <ferror@plt+0x101cc>  // b.pmore
  412f8c:	str	w20, [x19, #28]
  412f90:	ldp	x19, x20, [sp, #16]
  412f94:	ldp	x29, x30, [sp], #32
  412f98:	ret
  412f9c:	ldr	x0, [x19, #16]
  412fa0:	cbz	x0, 412fbc <ferror@plt+0x101ec>
  412fa4:	bl	402700 <strlen@plt>
  412fa8:	sub	w0, w20, w0
  412fac:	add	w1, w20, #0x20
  412fb0:	cmp	w0, #0x20
  412fb4:	csel	w20, w1, w20, lt  // lt = tstop
  412fb8:	b	412f8c <ferror@plt+0x101bc>
  412fbc:	mov	w0, #0x0                   	// #0
  412fc0:	b	412fa8 <ferror@plt+0x101d8>
  412fc4:	stp	x29, x30, [sp, #-64]!
  412fc8:	mov	x29, sp
  412fcc:	stp	x19, x20, [sp, #16]
  412fd0:	mov	x20, x0
  412fd4:	ldr	x19, [x0, #176]
  412fd8:	stp	x21, x22, [sp, #32]
  412fdc:	mov	x22, x1
  412fe0:	ldp	x1, x0, [x19, #24]
  412fe4:	str	x23, [sp, #48]
  412fe8:	sxtw	x23, w2
  412fec:	mov	x21, x23
  412ff0:	sub	x0, x0, x1
  412ff4:	cmp	x0, w23, sxtw
  412ff8:	b.cs	413008 <ferror@plt+0x10238>  // b.hs, b.nlast
  412ffc:	mov	x1, x23
  413000:	mov	x0, x19
  413004:	bl	444840 <_obstack_newchunk@@Base>
  413008:	ldr	x0, [x19, #24]
  41300c:	mov	x2, x23
  413010:	mov	x1, x22
  413014:	bl	4026a0 <memcpy@plt>
  413018:	ldr	x0, [x19, #24]
  41301c:	add	x0, x0, x23
  413020:	str	x0, [x19, #24]
  413024:	mov	x0, #0x0                   	// #0
  413028:	cmp	w21, w0
  41302c:	b.le	413058 <ferror@plt+0x10288>
  413030:	ldrb	w1, [x22, x0]
  413034:	cmp	w1, #0xa
  413038:	b.eq	413050 <ferror@plt+0x10280>  // b.none
  41303c:	ldr	w2, [x20, #200]
  413040:	add	w2, w2, #0x1
  413044:	add	x0, x0, #0x1
  413048:	str	w2, [x20, #200]
  41304c:	b	413028 <ferror@plt+0x10258>
  413050:	mov	w2, #0x0                   	// #0
  413054:	b	413044 <ferror@plt+0x10274>
  413058:	ldp	x19, x20, [sp, #16]
  41305c:	ldp	x21, x22, [sp, #32]
  413060:	ldr	x23, [sp, #48]
  413064:	ldp	x29, x30, [sp], #64
  413068:	ret
  41306c:	ldr	x0, [x0, #32]
  413070:	b	42ce28 <ferror@plt+0x2a058>
  413074:	cbnz	w1, 413080 <ferror@plt+0x102b0>
  413078:	ldr	x0, [x0, #32]
  41307c:	b	42cc18 <ferror@plt+0x29e48>
  413080:	mov	w0, #0x0                   	// #0
  413084:	ret
  413088:	stp	x29, x30, [sp, #-48]!
  41308c:	adrp	x1, 495000 <_obstack_memory_used@@Base+0x505fc>
  413090:	add	x2, x0, #0x14c
  413094:	mov	x29, sp
  413098:	stp	x19, x20, [sp, #16]
  41309c:	add	x19, x0, #0x58
  4130a0:	str	x21, [sp, #32]
  4130a4:	stp	xzr, xzr, [x0]
  4130a8:	stp	xzr, xzr, [x0, #16]
  4130ac:	stp	xzr, xzr, [x0, #32]
  4130b0:	stp	xzr, xzr, [x0, #48]
  4130b4:	stp	xzr, xzr, [x0, #64]
  4130b8:	str	xzr, [x0, #80]
  4130bc:	stp	xzr, xzr, [x0, #88]
  4130c0:	ldr	x1, [x1, #1440]
  4130c4:	stp	xzr, xzr, [x19, #16]
  4130c8:	stp	xzr, xzr, [x19, #32]
  4130cc:	stp	xzr, xzr, [x19, #48]
  4130d0:	stp	xzr, xzr, [x19, #64]
  4130d4:	str	xzr, [x19, #80]
  4130d8:	str	x1, [x0, #192]
  4130dc:	add	x1, x0, #0xcc
  4130e0:	stp	x0, xzr, [x0, #176]
  4130e4:	str	wzr, [x0, #200]
  4130e8:	strb	wzr, [x1], #1
  4130ec:	cmp	x2, x1
  4130f0:	b.ne	4130e8 <ferror@plt+0x10318>  // b.any
  4130f4:	mov	w1, #0x1                   	// #1
  4130f8:	strb	w1, [x0, #332]
  4130fc:	adrp	x21, 418000 <ferror@plt+0x15230>
  413100:	adrp	x20, 418000 <ferror@plt+0x15230>
  413104:	add	x21, x21, #0xeb8
  413108:	add	x20, x20, #0xe90
  41310c:	mov	x4, x21
  413110:	mov	x3, x20
  413114:	mov	x2, #0x0                   	// #0
  413118:	mov	x1, #0x0                   	// #0
  41311c:	bl	444814 <_obstack_begin@@Base>
  413120:	mov	x4, x21
  413124:	mov	x3, x20
  413128:	mov	x0, x19
  41312c:	mov	x2, #0x0                   	// #0
  413130:	ldp	x19, x20, [sp, #16]
  413134:	mov	x1, #0x0                   	// #0
  413138:	ldr	x21, [sp, #32]
  41313c:	ldp	x29, x30, [sp], #48
  413140:	b	444814 <_obstack_begin@@Base>
  413144:	stp	x29, x30, [sp, #-32]!
  413148:	mov	x1, #0x0                   	// #0
  41314c:	mov	x29, sp
  413150:	str	x19, [sp, #16]
  413154:	mov	x19, x0
  413158:	add	x0, x0, #0x58
  41315c:	bl	444990 <_obstack_free@@Base>
  413160:	mov	x0, x19
  413164:	mov	x1, #0x0                   	// #0
  413168:	ldr	x19, [sp, #16]
  41316c:	ldp	x29, x30, [sp], #32
  413170:	b	444990 <_obstack_free@@Base>
  413174:	stp	x29, x30, [sp, #-32]!
  413178:	mov	x29, sp
  41317c:	str	x19, [sp, #16]
  413180:	mov	x19, x0
  413184:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  413188:	add	x0, x0, #0xdc0
  41318c:	str	x0, [x19]
  413190:	ldr	x0, [x19, #56]
  413194:	cbz	x0, 4131a4 <ferror@plt+0x103d4>
  413198:	ldr	x1, [x0]
  41319c:	ldr	x1, [x1, #8]
  4131a0:	blr	x1
  4131a4:	ldr	x0, [x19, #8]
  4131a8:	bl	413144 <ferror@plt+0x10374>
  4131ac:	ldr	x0, [x19, #8]
  4131b0:	bl	402b30 <free@plt>
  4131b4:	ldr	x0, [x19, #16]
  4131b8:	ldr	x19, [sp, #16]
  4131bc:	ldp	x29, x30, [sp], #32
  4131c0:	b	402b30 <free@plt>
  4131c4:	stp	x29, x30, [sp, #-32]!
  4131c8:	mov	x29, sp
  4131cc:	str	x19, [sp, #16]
  4131d0:	mov	x19, x0
  4131d4:	bl	413174 <ferror@plt+0x103a4>
  4131d8:	mov	x0, x19
  4131dc:	mov	x1, #0x48                  	// #72
  4131e0:	ldr	x19, [sp, #16]
  4131e4:	ldp	x29, x30, [sp], #32
  4131e8:	b	445778 <_obstack_memory_used@@Base+0xd74>
  4131ec:	str	w1, [x0, #40]
  4131f0:	b	412f64 <ferror@plt+0x10194>
  4131f4:	stp	x29, x30, [sp, #-32]!
  4131f8:	mov	x29, sp
  4131fc:	str	x19, [sp, #16]
  413200:	mov	x19, x0
  413204:	ldr	x0, [x0, #8]
  413208:	ldr	x0, [x0, #176]
  41320c:	ldp	x2, x1, [x0, #8]
  413210:	cmp	x2, x1
  413214:	b.cs	41323c <ferror@plt+0x1046c>  // b.hs, b.nlast
  413218:	ldr	x2, [x0, #32]
  41321c:	cmp	x2, x1
  413220:	b.ls	41323c <ferror@plt+0x1046c>  // b.plast
  413224:	str	x1, [x0, #24]
  413228:	ldr	x0, [x19, #8]
  41322c:	ldr	x19, [sp, #16]
  413230:	str	wzr, [x0, #200]
  413234:	ldp	x29, x30, [sp], #32
  413238:	ret
  41323c:	bl	444990 <_obstack_free@@Base>
  413240:	b	413228 <ferror@plt+0x10458>
  413244:	stp	x29, x30, [sp, #-32]!
  413248:	mov	x29, sp
  41324c:	stp	x19, x20, [sp, #16]
  413250:	mov	x19, x0
  413254:	mov	x20, x1
  413258:	ldr	x0, [x0, #16]
  41325c:	bl	402b30 <free@plt>
  413260:	str	x20, [x19, #16]
  413264:	mov	x0, x19
  413268:	bl	412f64 <ferror@plt+0x10194>
  41326c:	str	wzr, [x19, #32]
  413270:	strb	wzr, [x19, #64]
  413274:	ldp	x19, x20, [sp, #16]
  413278:	ldp	x29, x30, [sp], #32
  41327c:	ret
  413280:	mov	x1, x0
  413284:	ldr	x0, [x0, #16]
  413288:	str	xzr, [x1, #16]
  41328c:	ret
  413290:	stp	x29, x30, [sp, #-32]!
  413294:	mov	x29, sp
  413298:	str	x19, [sp, #16]
  41329c:	mov	x19, x0
  4132a0:	ldr	x0, [x0, #16]
  4132a4:	cbz	x0, 4132b0 <ferror@plt+0x104e0>
  4132a8:	bl	402b30 <free@plt>
  4132ac:	str	xzr, [x19, #16]
  4132b0:	ldr	x19, [sp, #16]
  4132b4:	ldp	x29, x30, [sp], #32
  4132b8:	ret
  4132bc:	stp	x29, x30, [sp, #-48]!
  4132c0:	mov	x29, sp
  4132c4:	stp	x19, x20, [sp, #16]
  4132c8:	mov	x19, x0
  4132cc:	mov	w20, w1
  4132d0:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4132d4:	mov	x1, #0x150                 	// #336
  4132d8:	add	x0, x0, #0xdc0
  4132dc:	str	x0, [x19]
  4132e0:	mov	x0, #0x1                   	// #1
  4132e4:	str	x21, [sp, #32]
  4132e8:	bl	4452a0 <_obstack_memory_used@@Base+0x89c>
  4132ec:	mov	x21, x0
  4132f0:	bl	413088 <ferror@plt+0x102b8>
  4132f4:	stp	x21, xzr, [x19, #8]
  4132f8:	mov	w0, #0x10000               	// #65536
  4132fc:	stp	xzr, xzr, [x19, #24]
  413300:	mov	x1, #0x0                   	// #0
  413304:	str	w20, [x19, #40]
  413308:	stp	xzr, xzr, [x19, #48]
  41330c:	str	w0, [x19, #64]
  413310:	mov	x0, x19
  413314:	ldp	x19, x20, [sp, #16]
  413318:	ldr	x21, [sp, #32]
  41331c:	ldp	x29, x30, [sp], #48
  413320:	b	413244 <ferror@plt+0x10474>
  413324:	stp	x29, x30, [sp, #-32]!
  413328:	mov	x29, sp
  41332c:	stp	x19, x20, [sp, #16]
  413330:	ldr	x20, [x0, #8]
  413334:	ldr	x19, [x20, #176]
  413338:	ldp	x0, x1, [x19, #24]
  41333c:	cmp	x1, x0
  413340:	b.ne	413350 <ferror@plt+0x10580>  // b.any
  413344:	mov	x0, x19
  413348:	mov	x1, #0x1                   	// #1
  41334c:	bl	444840 <_obstack_newchunk@@Base>
  413350:	ldr	x0, [x19, #24]
  413354:	add	x1, x0, #0x1
  413358:	str	x1, [x19, #24]
  41335c:	strb	wzr, [x0]
  413360:	ldr	x0, [x20, #176]
  413364:	ldp	x19, x20, [sp, #16]
  413368:	ldp	x29, x30, [sp], #32
  41336c:	ldr	x0, [x0, #16]
  413370:	ret
  413374:	stp	x29, x30, [sp, #-32]!
  413378:	mov	x29, sp
  41337c:	str	x19, [sp, #16]
  413380:	mov	x19, x0
  413384:	bl	413324 <ferror@plt+0x10554>
  413388:	ldr	x1, [x19, #8]
  41338c:	ldr	x1, [x1, #192]
  413390:	bl	402710 <fputs@plt>
  413394:	mov	x0, x19
  413398:	ldr	x19, [sp, #16]
  41339c:	ldp	x29, x30, [sp], #32
  4133a0:	b	4131f4 <ferror@plt+0x10424>
  4133a4:	ldr	x1, [x0, #8]
  4133a8:	strb	wzr, [x0, #64]
  4133ac:	ldrb	w1, [x1, #332]
  4133b0:	str	wzr, [x0, #32]
  4133b4:	cbz	w1, 4133e0 <ferror@plt+0x10610>
  4133b8:	stp	x29, x30, [sp, #-32]!
  4133bc:	mov	x29, sp
  4133c0:	str	x19, [sp, #16]
  4133c4:	mov	x19, x0
  4133c8:	bl	413374 <ferror@plt+0x105a4>
  4133cc:	ldr	x0, [x19, #8]
  4133d0:	ldr	x19, [sp, #16]
  4133d4:	ldp	x29, x30, [sp], #32
  4133d8:	ldr	x0, [x0, #192]
  4133dc:	b	402bb0 <fflush@plt>
  4133e0:	ret
  4133e4:	stp	x29, x30, [sp, #-32]!
  4133e8:	mov	x29, sp
  4133ec:	str	x19, [sp, #16]
  4133f0:	mov	x19, x0
  4133f4:	str	wzr, [x0, #32]
  4133f8:	strb	wzr, [x0, #64]
  4133fc:	bl	413374 <ferror@plt+0x105a4>
  413400:	ldr	x0, [x19, #8]
  413404:	ldr	x19, [sp, #16]
  413408:	ldp	x29, x30, [sp], #32
  41340c:	ldr	x0, [x0, #192]
  413410:	b	402bb0 <fflush@plt>
  413414:	stp	x29, x30, [sp, #-64]!
  413418:	mov	x29, sp
  41341c:	stp	x19, x20, [sp, #16]
  413420:	mov	x20, x0
  413424:	stp	x21, x22, [sp, #32]
  413428:	adrp	x22, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  41342c:	add	x22, x22, #0xcd6
  413430:	str	x23, [sp, #48]
  413434:	and	w23, w1, #0xff
  413438:	bl	413324 <ferror@plt+0x10554>
  41343c:	mov	x19, x0
  413440:	ldr	x0, [x20, #8]
  413444:	ldr	x21, [x0, #192]
  413448:	ldrb	w2, [x19]
  41344c:	cbz	w2, 4134e8 <ferror@plt+0x10718>
  413450:	cmp	w2, #0x22
  413454:	b.eq	4134b8 <ferror@plt+0x106e8>  // b.none
  413458:	b.hi	413474 <ferror@plt+0x106a4>  // b.pmore
  41345c:	cmp	w2, #0xa
  413460:	b.eq	4134ac <ferror@plt+0x106dc>  // b.none
  413464:	cmp	w2, #0x20
  413468:	b.ne	41349c <ferror@plt+0x106cc>  // b.any
  41346c:	cbz	w23, 41349c <ferror@plt+0x106cc>
  413470:	b	4134b8 <ferror@plt+0x106e8>
  413474:	cmp	w2, #0x5c
  413478:	b.eq	4134c8 <ferror@plt+0x106f8>  // b.none
  41347c:	b.hi	41348c <ferror@plt+0x106bc>  // b.pmore
  413480:	and	w2, w2, #0xfffffffd
  413484:	cmp	w2, #0x3c
  413488:	b	413468 <ferror@plt+0x10698>
  41348c:	sub	w2, w2, #0x7b
  413490:	and	w2, w2, #0xff
  413494:	cmp	w2, #0x2
  413498:	b.ls	41346c <ferror@plt+0x1069c>  // b.plast
  41349c:	ldrb	w0, [x19], #1
  4134a0:	mov	x1, x21
  4134a4:	bl	4027d0 <fputc@plt>
  4134a8:	b	413448 <ferror@plt+0x10678>
  4134ac:	mov	x1, x21
  4134b0:	mov	x0, x22
  4134b4:	bl	402710 <fputs@plt>
  4134b8:	mov	x1, x21
  4134bc:	mov	w0, #0x5c                  	// #92
  4134c0:	bl	4027d0 <fputc@plt>
  4134c4:	b	41349c <ferror@plt+0x106cc>
  4134c8:	ldrb	w0, [x19, #1]
  4134cc:	cbnz	w0, 4134b8 <ferror@plt+0x106e8>
  4134d0:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4134d4:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4134d8:	add	x2, x2, #0xcd9
  4134dc:	add	x0, x0, #0xcbd
  4134e0:	mov	w1, #0x378                 	// #888
  4134e4:	bl	402de0 <ferror@plt+0x10>
  4134e8:	mov	x0, x20
  4134ec:	ldp	x19, x20, [sp, #16]
  4134f0:	ldp	x21, x22, [sp, #32]
  4134f4:	ldr	x23, [sp, #48]
  4134f8:	ldp	x29, x30, [sp], #64
  4134fc:	b	4131f4 <ferror@plt+0x10424>
  413500:	ldr	x0, [x0, #8]
  413504:	ldr	x0, [x0, #176]
  413508:	ldp	x2, x1, [x0, #16]
  41350c:	sub	x0, x1, #0x1
  413510:	cmp	x2, x1
  413514:	csel	x0, x0, xzr, ne  // ne = any
  413518:	ret
  41351c:	ldr	x2, [x0, #8]
  413520:	ldr	w1, [x0, #28]
  413524:	ldr	w0, [x2, #200]
  413528:	sub	w0, w1, w0
  41352c:	ret
  413530:	stp	x29, x30, [sp, #-32]!
  413534:	mov	x29, sp
  413538:	stp	x19, x20, [sp, #16]
  41353c:	mov	x19, x0
  413540:	ldr	x0, [x0, #8]
  413544:	ldr	x20, [x0, #176]
  413548:	ldp	x0, x1, [x20, #24]
  41354c:	cmp	x1, x0
  413550:	b.ne	413560 <ferror@plt+0x10790>  // b.any
  413554:	mov	x0, x20
  413558:	mov	x1, #0x1                   	// #1
  41355c:	bl	444840 <_obstack_newchunk@@Base>
  413560:	ldr	x0, [x20, #24]
  413564:	add	x1, x0, #0x1
  413568:	str	x1, [x20, #24]
  41356c:	mov	w1, #0xa                   	// #10
  413570:	strb	w1, [x0]
  413574:	strb	wzr, [x19, #65]
  413578:	ldr	x0, [x19, #8]
  41357c:	ldp	x19, x20, [sp, #16]
  413580:	str	wzr, [x0, #200]
  413584:	ldp	x29, x30, [sp], #32
  413588:	ret
  41358c:	stp	x29, x30, [sp, #-48]!
  413590:	mov	x29, sp
  413594:	stp	x19, x20, [sp, #16]
  413598:	mov	x19, x0
  41359c:	str	x21, [sp, #32]
  4135a0:	mov	w21, w1
  4135a4:	ldr	w1, [x0, #40]
  4135a8:	cmp	w1, #0x0
  4135ac:	b.gt	4135f4 <ferror@plt+0x10824>
  4135b0:	ldr	x0, [x19, #8]
  4135b4:	ldr	x20, [x0, #176]
  4135b8:	ldp	x0, x1, [x20, #24]
  4135bc:	cmp	x1, x0
  4135c0:	b.ne	4135d0 <ferror@plt+0x10800>  // b.any
  4135c4:	mov	x0, x20
  4135c8:	mov	x1, #0x1                   	// #1
  4135cc:	bl	444840 <_obstack_newchunk@@Base>
  4135d0:	ldr	x0, [x20, #24]
  4135d4:	add	x1, x0, #0x1
  4135d8:	str	x1, [x20, #24]
  4135dc:	strb	w21, [x0]
  4135e0:	ldr	x1, [x19, #8]
  4135e4:	ldr	w0, [x1, #200]
  4135e8:	add	w0, w0, #0x1
  4135ec:	str	w0, [x1, #200]
  4135f0:	b	413624 <ferror@plt+0x10854>
  4135f4:	ldr	x2, [x0, #8]
  4135f8:	ldr	w1, [x0, #28]
  4135fc:	ldr	w2, [x2, #200]
  413600:	sub	w1, w1, w2
  413604:	cmp	w1, #0x0
  413608:	b.gt	4135b0 <ferror@plt+0x107e0>
  41360c:	bl	413530 <ferror@plt+0x10760>
  413610:	and	x1, x21, #0xff
  413614:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  413618:	add	x0, x0, #0xb08
  41361c:	ldrh	w0, [x0, x1, lsl #1]
  413620:	tbz	w0, #6, 4135b0 <ferror@plt+0x107e0>
  413624:	ldp	x19, x20, [sp, #16]
  413628:	ldr	x21, [sp, #32]
  41362c:	ldp	x29, x30, [sp], #48
  413630:	ret
  413634:	stp	x29, x30, [sp, #-48]!
  413638:	mov	x29, sp
  41363c:	str	x21, [sp, #32]
  413640:	ldr	w21, [x0, #32]
  413644:	stp	x19, x20, [sp, #16]
  413648:	mov	x19, x0
  41364c:	mov	w20, #0x0                   	// #0
  413650:	cmp	w20, w21
  413654:	b.ge	41366c <ferror@plt+0x1089c>  // b.tcont
  413658:	mov	x0, x19
  41365c:	mov	w1, #0x20                  	// #32
  413660:	add	w20, w20, #0x1
  413664:	bl	41358c <ferror@plt+0x107bc>
  413668:	b	413650 <ferror@plt+0x10880>
  41366c:	ldp	x19, x20, [sp, #16]
  413670:	ldr	x21, [sp, #32]
  413674:	ldp	x29, x30, [sp], #48
  413678:	ret
  41367c:	stp	x29, x30, [sp, #-32]!
  413680:	mov	x29, sp
  413684:	stp	x19, x20, [sp, #16]
  413688:	ldr	x20, [x0, #16]
  41368c:	cbz	x20, 4136a4 <ferror@plt+0x108d4>
  413690:	ldr	w1, [x0, #36]
  413694:	mov	x19, x0
  413698:	cbz	w1, 4136b0 <ferror@plt+0x108e0>
  41369c:	cmp	w1, #0x2
  4136a0:	b.eq	4136d0 <ferror@plt+0x10900>  // b.none
  4136a4:	ldp	x19, x20, [sp, #16]
  4136a8:	ldp	x29, x30, [sp], #32
  4136ac:	ret
  4136b0:	ldrb	w1, [x0, #64]
  4136b4:	cbz	w1, 4136c4 <ferror@plt+0x108f4>
  4136b8:	ldp	x19, x20, [sp, #16]
  4136bc:	ldp	x29, x30, [sp], #32
  4136c0:	b	413634 <ferror@plt+0x10864>
  4136c4:	ldr	w0, [x0, #32]
  4136c8:	add	w0, w0, #0x3
  4136cc:	str	w0, [x19, #32]
  4136d0:	mov	x0, x20
  4136d4:	bl	402700 <strlen@plt>
  4136d8:	mov	w2, w0
  4136dc:	mov	x1, x20
  4136e0:	ldr	x0, [x19, #8]
  4136e4:	bl	412fc4 <ferror@plt+0x101f4>
  4136e8:	mov	w0, #0x1                   	// #1
  4136ec:	strb	w0, [x19, #64]
  4136f0:	b	4136a4 <ferror@plt+0x108d4>
  4136f4:	stp	x29, x30, [sp, #-48]!
  4136f8:	mov	x29, sp
  4136fc:	stp	x19, x20, [sp, #16]
  413700:	mov	x19, x1
  413704:	mov	x20, x0
  413708:	ldr	x1, [x0, #8]
  41370c:	ldr	w1, [x1, #200]
  413710:	str	x21, [sp, #32]
  413714:	mov	x21, x2
  413718:	cbnz	w1, 413748 <ferror@plt+0x10978>
  41371c:	bl	41367c <ferror@plt+0x108ac>
  413720:	ldr	w0, [x20, #40]
  413724:	cmp	w0, #0x0
  413728:	b.le	413748 <ferror@plt+0x10978>
  41372c:	cmp	x19, x21
  413730:	b.eq	413748 <ferror@plt+0x10978>  // b.none
  413734:	ldrb	w0, [x19]
  413738:	cmp	w0, #0x20
  41373c:	b.ne	413748 <ferror@plt+0x10978>  // b.any
  413740:	add	x19, x19, #0x1
  413744:	b	41372c <ferror@plt+0x1095c>
  413748:	sub	w2, w21, w19
  41374c:	mov	x1, x19
  413750:	ldr	x0, [x20, #8]
  413754:	ldp	x19, x20, [sp, #16]
  413758:	ldr	x21, [sp, #32]
  41375c:	ldp	x29, x30, [sp], #48
  413760:	b	412fc4 <ferror@plt+0x101f4>
  413764:	ldr	w3, [x0, #40]
  413768:	cmp	w3, #0x0
  41376c:	b.le	413850 <ferror@plt+0x10a80>
  413770:	stp	x29, x30, [sp, #-64]!
  413774:	mov	x29, sp
  413778:	stp	x19, x20, [sp, #16]
  41377c:	mov	x20, x0
  413780:	stp	x21, x22, [sp, #32]
  413784:	mov	x21, x1
  413788:	mov	x22, x2
  41378c:	str	x23, [sp, #48]
  413790:	adrp	x23, 46c000 <_obstack_memory_used@@Base+0x275fc>
  413794:	add	x23, x23, #0xb08
  413798:	cmp	x22, x21
  41379c:	b.eq	413854 <ferror@plt+0x10a84>  // b.none
  4137a0:	mov	x19, x21
  4137a4:	ldrb	w1, [x19]
  4137a8:	ldrb	w0, [x19]
  4137ac:	ldrh	w1, [x23, x1, lsl #1]
  4137b0:	tbnz	w1, #0, 4137c8 <ferror@plt+0x109f8>
  4137b4:	cmp	w0, #0xa
  4137b8:	b.eq	4137c8 <ferror@plt+0x109f8>  // b.none
  4137bc:	add	x19, x19, #0x1
  4137c0:	cmp	x22, x19
  4137c4:	b.ne	4137a4 <ferror@plt+0x109d4>  // b.any
  4137c8:	ldr	x2, [x20, #8]
  4137cc:	sub	x0, x19, x21
  4137d0:	ldr	w1, [x20, #28]
  4137d4:	ldr	w2, [x2, #200]
  4137d8:	sub	w1, w1, w2
  4137dc:	cmp	x0, w1, sxtw
  4137e0:	b.lt	4137ec <ferror@plt+0x10a1c>  // b.tstop
  4137e4:	mov	x0, x20
  4137e8:	bl	413530 <ferror@plt+0x10760>
  4137ec:	mov	x2, x19
  4137f0:	mov	x1, x21
  4137f4:	mov	x0, x20
  4137f8:	bl	4136f4 <ferror@plt+0x10924>
  4137fc:	cmp	x22, x19
  413800:	b.eq	413848 <ferror@plt+0x10a78>  // b.none
  413804:	ldrb	w0, [x19]
  413808:	ldrh	w0, [x23, x0, lsl #1]
  41380c:	tbz	w0, #0, 413828 <ferror@plt+0x10a58>
  413810:	mov	x0, x20
  413814:	add	x19, x19, #0x1
  413818:	mov	w1, #0x20                  	// #32
  41381c:	bl	41358c <ferror@plt+0x107bc>
  413820:	cmp	x22, x19
  413824:	b.eq	413840 <ferror@plt+0x10a70>  // b.none
  413828:	ldrb	w0, [x19]
  41382c:	cmp	w0, #0xa
  413830:	b.ne	413840 <ferror@plt+0x10a70>  // b.any
  413834:	add	x19, x19, #0x1
  413838:	mov	x0, x20
  41383c:	bl	413530 <ferror@plt+0x10760>
  413840:	mov	x21, x19
  413844:	b	413798 <ferror@plt+0x109c8>
  413848:	mov	x21, x22
  41384c:	b	413798 <ferror@plt+0x109c8>
  413850:	b	4136f4 <ferror@plt+0x10924>
  413854:	ldp	x19, x20, [sp, #16]
  413858:	ldp	x21, x22, [sp, #32]
  41385c:	ldr	x23, [sp, #48]
  413860:	ldp	x29, x30, [sp], #64
  413864:	ret
  413868:	stp	x29, x30, [sp, #-96]!
  41386c:	cmn	x2, #0x1
  413870:	mov	x29, sp
  413874:	stp	x19, x20, [sp, #16]
  413878:	mov	x19, x1
  41387c:	stp	x21, x22, [sp, #32]
  413880:	mov	x22, x0
  413884:	stp	x23, x24, [sp, #48]
  413888:	stp	x25, x26, [sp, #64]
  41388c:	b.ne	41389c <ferror@plt+0x10acc>  // b.any
  413890:	mov	x0, x1
  413894:	bl	402700 <strlen@plt>
  413898:	mov	x2, x0
  41389c:	adrp	x24, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4138a0:	add	x21, x19, x2
  4138a4:	mov	x20, x19
  4138a8:	add	x24, x24, #0xb08
  4138ac:	add	x26, sp, #0x54
  4138b0:	adrp	x25, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4138b4:	cmp	x20, x21
  4138b8:	b.eq	413910 <ferror@plt+0x10b40>  // b.none
  4138bc:	mov	x23, x20
  4138c0:	ldrb	w0, [x23], #1
  4138c4:	ldrh	w0, [x24, x0, lsl #1]
  4138c8:	tbnz	w0, #4, 413908 <ferror@plt+0x10b38>
  4138cc:	cmp	x19, x20
  4138d0:	b.cs	4138e4 <ferror@plt+0x10b14>  // b.hs, b.nlast
  4138d4:	sub	x2, x20, #0x1
  4138d8:	mov	x1, x19
  4138dc:	mov	x0, x22
  4138e0:	bl	413764 <ferror@plt+0x10994>
  4138e4:	ldrb	w2, [x20]
  4138e8:	mov	x19, x23
  4138ec:	add	x1, x25, #0xcfe
  4138f0:	add	x0, sp, #0x50
  4138f4:	bl	4027a0 <sprintf@plt>
  4138f8:	mov	x2, x26
  4138fc:	add	x1, sp, #0x50
  413900:	mov	x0, x22
  413904:	bl	413764 <ferror@plt+0x10994>
  413908:	mov	x20, x23
  41390c:	b	4138b4 <ferror@plt+0x10ae4>
  413910:	mov	x2, x20
  413914:	mov	x1, x19
  413918:	mov	x0, x22
  41391c:	bl	413764 <ferror@plt+0x10994>
  413920:	ldp	x19, x20, [sp, #16]
  413924:	ldp	x21, x22, [sp, #32]
  413928:	ldp	x23, x24, [sp, #48]
  41392c:	ldp	x25, x26, [sp, #64]
  413930:	ldp	x29, x30, [sp], #96
  413934:	ret
  413938:	stp	x29, x30, [sp, #-32]!
  41393c:	mov	x29, sp
  413940:	stp	x19, x20, [sp, #16]
  413944:	mov	x19, x1
  413948:	mov	x20, x0
  41394c:	mov	x0, x1
  413950:	bl	402700 <strlen@plt>
  413954:	mov	x1, x19
  413958:	add	x2, x19, x0
  41395c:	mov	x0, x20
  413960:	ldp	x19, x20, [sp, #16]
  413964:	ldp	x29, x30, [sp], #32
  413968:	b	413764 <ferror@plt+0x10994>
  41396c:	stp	x29, x30, [sp, #-64]!
  413970:	mov	x29, sp
  413974:	stp	x19, x20, [sp, #16]
  413978:	ldr	x19, [x0, #8]
  41397c:	stp	x21, x22, [sp, #32]
  413980:	mov	x21, x0
  413984:	ldp	x0, x20, [x19, #176]
  413988:	str	x23, [sp, #48]
  41398c:	cmp	x0, x19
  413990:	b.eq	4139ac <ferror@plt+0x10bdc>  // b.none
  413994:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  413998:	add	x2, x2, #0xd05
  41399c:	mov	w1, #0x595                 	// #1429
  4139a0:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4139a4:	add	x0, x0, #0xcbd
  4139a8:	bl	402de0 <ferror@plt+0x10>
  4139ac:	ldr	w0, [x0, #200]
  4139b0:	add	x23, x20, #0x8
  4139b4:	mov	w22, #0x0                   	// #0
  4139b8:	cbz	w0, 4139cc <ferror@plt+0x10bfc>
  4139bc:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4139c0:	mov	w1, #0x596                 	// #1430
  4139c4:	add	x2, x2, #0xd05
  4139c8:	b	4139a0 <ferror@plt+0x10bd0>
  4139cc:	ldr	x1, [x23, w22, uxtw #3]
  4139d0:	cbz	x1, 4139e4 <ferror@plt+0x10c14>
  4139d4:	mov	x0, x21
  4139d8:	add	w22, w22, #0x1
  4139dc:	bl	413938 <ferror@plt+0x10b68>
  4139e0:	b	4139cc <ferror@plt+0x10bfc>
  4139e4:	ldr	x0, [x20]
  4139e8:	str	x0, [x19, #184]
  4139ec:	add	x0, x19, #0x58
  4139f0:	ldr	x1, [x0, #8]
  4139f4:	cmp	x1, x20
  4139f8:	b.cs	413a20 <ferror@plt+0x10c50>  // b.hs, b.nlast
  4139fc:	ldr	x1, [x0, #32]
  413a00:	cmp	x1, x20
  413a04:	b.ls	413a20 <ferror@plt+0x10c50>  // b.plast
  413a08:	ldp	x21, x22, [sp, #32]
  413a0c:	ldr	x23, [sp, #48]
  413a10:	stp	x20, x20, [x0, #16]
  413a14:	ldp	x19, x20, [sp, #16]
  413a18:	ldp	x29, x30, [sp], #64
  413a1c:	ret
  413a20:	mov	x1, x20
  413a24:	ldp	x19, x20, [sp, #16]
  413a28:	ldp	x21, x22, [sp, #32]
  413a2c:	ldr	x23, [sp, #48]
  413a30:	ldp	x29, x30, [sp], #64
  413a34:	b	444990 <_obstack_free@@Base>
  413a38:	ldr	w1, [x0, #24]
  413a3c:	cbz	w1, 413a68 <ferror@plt+0x10c98>
  413a40:	stp	x29, x30, [sp, #-32]!
  413a44:	mov	w1, #0x20                  	// #32
  413a48:	mov	x29, sp
  413a4c:	str	x19, [sp, #16]
  413a50:	mov	x19, x0
  413a54:	bl	41358c <ferror@plt+0x107bc>
  413a58:	str	wzr, [x19, #24]
  413a5c:	ldr	x19, [sp, #16]
  413a60:	ldp	x29, x30, [sp], #32
  413a64:	ret
  413a68:	ret
  413a6c:	stp	x29, x30, [sp, #-32]!
  413a70:	mov	x29, sp
  413a74:	str	x19, [sp, #16]
  413a78:	mov	x19, x0
  413a7c:	bl	413530 <ferror@plt+0x10760>
  413a80:	mov	x0, x19
  413a84:	bl	4133a4 <ferror@plt+0x105d4>
  413a88:	strb	wzr, [x19, #65]
  413a8c:	ldr	x19, [sp, #16]
  413a90:	ldp	x29, x30, [sp], #32
  413a94:	ret
  413a98:	stp	x29, x30, [sp, #-32]!
  413a9c:	mov	x29, sp
  413aa0:	ldr	w2, [x0, #32]
  413aa4:	str	x19, [sp, #16]
  413aa8:	mov	x19, x0
  413aac:	add	w2, w2, w1
  413ab0:	str	w2, [x0, #32]
  413ab4:	bl	413530 <ferror@plt+0x10760>
  413ab8:	mov	x0, x19
  413abc:	bl	413634 <ferror@plt+0x10864>
  413ac0:	strb	wzr, [x19, #65]
  413ac4:	ldr	x19, [sp, #16]
  413ac8:	ldp	x29, x30, [sp], #32
  413acc:	ret
  413ad0:	stp	x29, x30, [sp, #-32]!
  413ad4:	and	w1, w1, #0xff
  413ad8:	mov	x29, sp
  413adc:	str	x19, [sp, #16]
  413ae0:	mov	x19, x0
  413ae4:	bl	41358c <ferror@plt+0x107bc>
  413ae8:	mov	x0, x19
  413aec:	mov	w1, #0x20                  	// #32
  413af0:	ldr	x19, [sp, #16]
  413af4:	ldp	x29, x30, [sp], #32
  413af8:	b	41358c <ferror@plt+0x107bc>
  413afc:	stp	x29, x30, [sp, #-32]!
  413b00:	mov	x29, sp
  413b04:	stp	x19, x20, [sp, #16]
  413b08:	and	w20, w1, #0xff
  413b0c:	adrp	x1, 495000 <_obstack_memory_used@@Base+0x505fc>
  413b10:	mov	x19, x0
  413b14:	ldr	x1, [x1, #1344]
  413b18:	bl	413938 <ferror@plt+0x10b68>
  413b1c:	mov	w0, w20
  413b20:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  413b24:	add	x1, x1, #0xbff
  413b28:	bl	40eb1c <ferror@plt+0xbd4c>
  413b2c:	mov	x1, x0
  413b30:	mov	x0, x19
  413b34:	ldp	x19, x20, [sp, #16]
  413b38:	ldp	x29, x30, [sp], #32
  413b3c:	b	413938 <ferror@plt+0x10b68>
  413b40:	stp	x29, x30, [sp, #-32]!
  413b44:	mov	x29, sp
  413b48:	str	x19, [sp, #16]
  413b4c:	mov	x19, x0
  413b50:	mov	w0, w1
  413b54:	bl	40ee38 <ferror@plt+0xc068>
  413b58:	mov	x1, x0
  413b5c:	mov	x0, x19
  413b60:	bl	413938 <ferror@plt+0x10b68>
  413b64:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  413b68:	ldr	x1, [x0, #1352]
  413b6c:	mov	x0, x19
  413b70:	ldr	x19, [sp, #16]
  413b74:	ldp	x29, x30, [sp], #32
  413b78:	b	413938 <ferror@plt+0x10b68>
  413b7c:	sub	sp, sp, #0x1c0
  413b80:	stp	x29, x30, [sp, #16]
  413b84:	add	x29, sp, #0x10
  413b88:	stp	x19, x20, [sp, #32]
  413b8c:	mov	x19, x0
  413b90:	ldr	x0, [x0, #8]
  413b94:	stp	x25, x26, [sp, #80]
  413b98:	add	x26, x0, #0x58
  413b9c:	stp	x21, x22, [sp, #48]
  413ba0:	mov	x21, x1
  413ba4:	str	x0, [sp, #112]
  413ba8:	ldr	x1, [x26, #24]
  413bac:	stp	x23, x24, [sp, #64]
  413bb0:	ldr	x0, [x26, #32]
  413bb4:	stp	x27, x28, [sp, #96]
  413bb8:	sub	x0, x0, x1
  413bbc:	cmp	x0, #0x1e7
  413bc0:	b.hi	413bd0 <ferror@plt+0x10e00>  // b.pmore
  413bc4:	mov	x0, x26
  413bc8:	mov	x1, #0x1e8                 	// #488
  413bcc:	bl	444840 <_obstack_newchunk@@Base>
  413bd0:	ldp	x24, x1, [x26, #16]
  413bd4:	add	x1, x1, #0x1e8
  413bd8:	cmp	x1, x24
  413bdc:	b.ne	413bec <ferror@plt+0x10e1c>  // b.any
  413be0:	ldrb	w0, [x26, #80]
  413be4:	orr	w0, w0, #0x2
  413be8:	strb	w0, [x26, #80]
  413bec:	ldr	x0, [x26, #48]
  413bf0:	add	x25, sp, #0xd0
  413bf4:	ldr	x2, [x26, #32]
  413bf8:	add	x1, x1, x0
  413bfc:	bic	x0, x1, x0
  413c00:	mov	w22, #0x0                   	// #0
  413c04:	ldr	x1, [x26, #8]
  413c08:	mov	w23, #0x0                   	// #0
  413c0c:	sub	x3, x0, x1
  413c10:	sub	x1, x2, x1
  413c14:	cmp	x3, x1
  413c18:	mov	w1, #0x0                   	// #0
  413c1c:	csel	x0, x0, x2, ls  // ls = plast
  413c20:	stp	x0, x0, [x26, #16]
  413c24:	mov	x2, #0xf0                  	// #240
  413c28:	ldr	x0, [sp, #112]
  413c2c:	ldr	x0, [x0, #184]
  413c30:	str	x0, [x24]
  413c34:	ldr	x0, [sp, #112]
  413c38:	str	x24, [x0, #184]
  413c3c:	mov	x0, x25
  413c40:	add	x24, x24, #0x8
  413c44:	bl	402930 <memset@plt>
  413c48:	str	wzr, [sp, #128]
  413c4c:	ldr	x20, [x21]
  413c50:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  413c54:	add	x0, x0, #0x540
  413c58:	str	x0, [sp, #160]
  413c5c:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  413c60:	add	x0, x0, #0xbff
  413c64:	str	x0, [sp, #176]
  413c68:	str	wzr, [sp, #184]
  413c6c:	ldrb	w0, [x20]
  413c70:	cbz	w0, 41417c <ferror@plt+0x113ac>
  413c74:	ldrb	w0, [x20]
  413c78:	cbz	w0, 41417c <ferror@plt+0x113ac>
  413c7c:	cmp	w0, #0x25
  413c80:	b.eq	414da0 <ferror@plt+0x11fd0>  // b.none
  413c84:	ldp	x0, x1, [x26, #24]
  413c88:	cmp	x1, x0
  413c8c:	b.ne	413c9c <ferror@plt+0x10ecc>  // b.any
  413c90:	mov	x0, x26
  413c94:	mov	x1, #0x1                   	// #1
  413c98:	bl	444840 <_obstack_newchunk@@Base>
  413c9c:	ldr	x0, [x26, #24]
  413ca0:	add	x1, x0, #0x1
  413ca4:	str	x1, [x26, #24]
  413ca8:	ldrb	w1, [x20], #1
  413cac:	strb	w1, [x0]
  413cb0:	b	413c74 <ferror@plt+0x10ea4>
  413cb4:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  413cb8:	add	x2, x2, #0xd1e
  413cbc:	mov	w1, #0x41e                 	// #1054
  413cc0:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  413cc4:	add	x0, x0, #0xcbd
  413cc8:	bl	402de0 <ferror@plt+0x10>
  413ccc:	ldp	x0, x1, [x26, #24]
  413cd0:	cmp	x1, x0
  413cd4:	b.ne	413ce4 <ferror@plt+0x10f14>  // b.any
  413cd8:	mov	x0, x26
  413cdc:	mov	x1, #0x1                   	// #1
  413ce0:	bl	444840 <_obstack_newchunk@@Base>
  413ce4:	ldr	x0, [x26, #24]
  413ce8:	add	x1, x0, #0x1
  413cec:	str	x1, [x26, #24]
  413cf0:	mov	w1, #0x25                  	// #37
  413cf4:	strb	w1, [x0]
  413cf8:	add	x20, x20, #0x2
  413cfc:	b	413c6c <ferror@plt+0x10e9c>
  413d00:	ldrb	w0, [x19, #67]
  413d04:	bl	40ee38 <ferror@plt+0xc068>
  413d08:	mov	x27, x0
  413d0c:	bl	402700 <strlen@plt>
  413d10:	mov	x28, x0
  413d14:	ldp	x1, x0, [x26, #24]
  413d18:	sub	x0, x0, x1
  413d1c:	cmp	x28, x0
  413d20:	b.ls	413d30 <ferror@plt+0x10f60>  // b.plast
  413d24:	mov	x1, x28
  413d28:	mov	x0, x26
  413d2c:	bl	444840 <_obstack_newchunk@@Base>
  413d30:	ldr	x0, [x26, #24]
  413d34:	mov	x2, x28
  413d38:	mov	x1, x27
  413d3c:	bl	4026a0 <memcpy@plt>
  413d40:	ldr	x0, [x26, #24]
  413d44:	add	x0, x0, x28
  413d48:	str	x0, [x26, #24]
  413d4c:	adrp	x27, 495000 <_obstack_memory_used@@Base+0x505fc>
  413d50:	ldr	x0, [x27, #1352]
  413d54:	bl	402700 <strlen@plt>
  413d58:	mov	x28, x0
  413d5c:	ldp	x1, x0, [x26, #24]
  413d60:	sub	x0, x0, x1
  413d64:	cmp	x28, x0
  413d68:	b.ls	413d78 <ferror@plt+0x10fa8>  // b.plast
  413d6c:	mov	x1, x28
  413d70:	mov	x0, x26
  413d74:	bl	444840 <_obstack_newchunk@@Base>
  413d78:	ldr	x1, [x27, #1352]
  413d7c:	mov	x2, x28
  413d80:	ldr	x0, [x26, #24]
  413d84:	bl	4026a0 <memcpy@plt>
  413d88:	ldr	x0, [x26, #24]
  413d8c:	add	x0, x0, x28
  413d90:	str	x0, [x26, #24]
  413d94:	b	413cf8 <ferror@plt+0x10f28>
  413d98:	ldrb	w0, [x19, #67]
  413d9c:	bl	40ee38 <ferror@plt+0xc068>
  413da0:	b	414e68 <ferror@plt+0x12098>
  413da4:	ldp	x2, x1, [x26, #16]
  413da8:	add	w0, w22, #0x1
  413dac:	str	w0, [sp, #144]
  413db0:	ubfiz	x4, x22, #3, #32
  413db4:	cmp	x1, x2
  413db8:	b.ne	413dc8 <ferror@plt+0x10ff8>  // b.any
  413dbc:	ldrb	w0, [x26, #80]
  413dc0:	orr	w0, w0, #0x2
  413dc4:	strb	w0, [x26, #80]
  413dc8:	ldr	x0, [x26, #48]
  413dcc:	adrp	x27, 46c000 <_obstack_memory_used@@Base+0x275fc>
  413dd0:	ldr	x3, [x26, #32]
  413dd4:	add	x1, x1, x0
  413dd8:	bic	x0, x1, x0
  413ddc:	add	x27, x27, #0xb08
  413de0:	ldr	x1, [x26, #8]
  413de4:	add	x28, x20, #0x1
  413de8:	sub	x5, x0, x1
  413dec:	sub	x1, x3, x1
  413df0:	cmp	x5, x1
  413df4:	csel	x0, x0, x3, ls  // ls = plast
  413df8:	stp	x0, x0, [x26, #16]
  413dfc:	str	x2, [x24, x4]
  413e00:	ldrb	w0, [x20, #1]
  413e04:	ldrh	w0, [x27, x0, lsl #1]
  413e08:	tbz	w0, #2, 413e84 <ferror@plt+0x110b4>
  413e0c:	add	x1, sp, #0xc8
  413e10:	mov	x0, x28
  413e14:	mov	w2, #0xa                   	// #10
  413e18:	bl	4026f0 <strtoul@plt>
  413e1c:	ldr	x3, [sp, #200]
  413e20:	sub	w0, w0, #0x1
  413e24:	ldrb	w1, [x3]
  413e28:	cmp	w1, #0x24
  413e2c:	b.eq	413e40 <ferror@plt+0x11070>  // b.none
  413e30:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  413e34:	mov	w1, #0x45a                 	// #1114
  413e38:	add	x2, x2, #0xd1e
  413e3c:	b	413cc0 <ferror@plt+0x10ef0>
  413e40:	ldr	w1, [sp, #184]
  413e44:	add	x28, x3, #0x1
  413e48:	cbz	w1, 413e5c <ferror@plt+0x1108c>
  413e4c:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  413e50:	mov	w1, #0x45e                 	// #1118
  413e54:	add	x2, x2, #0xd1e
  413e58:	b	413cc0 <ferror@plt+0x10ef0>
  413e5c:	str	w23, [sp, #120]
  413e60:	mov	w23, w0
  413e64:	mov	w0, #0x1                   	// #1
  413e68:	str	w0, [sp, #128]
  413e6c:	cmp	w23, #0x1d
  413e70:	b.ls	413eb0 <ferror@plt+0x110e0>  // b.plast
  413e74:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  413e78:	mov	w1, #0x466                 	// #1126
  413e7c:	add	x2, x2, #0xd1e
  413e80:	b	413cc0 <ferror@plt+0x10ef0>
  413e84:	add	w0, w23, #0x1
  413e88:	str	w0, [sp, #120]
  413e8c:	ldr	w0, [sp, #128]
  413e90:	cbz	w0, 413ea4 <ferror@plt+0x110d4>
  413e94:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  413e98:	mov	w1, #0x464                 	// #1124
  413e9c:	add	x2, x2, #0xd1e
  413ea0:	b	413cc0 <ferror@plt+0x10ef0>
  413ea4:	mov	w0, #0x1                   	// #1
  413ea8:	str	w0, [sp, #184]
  413eac:	b	413e6c <ferror@plt+0x1109c>
  413eb0:	ubfiz	x0, x23, #3, #32
  413eb4:	ldr	x1, [x25, x0]
  413eb8:	cbz	x1, 413ecc <ferror@plt+0x110fc>
  413ebc:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  413ec0:	mov	w1, #0x467                 	// #1127
  413ec4:	add	x2, x2, #0xd1e
  413ec8:	b	413cc0 <ferror@plt+0x10ef0>
  413ecc:	ldr	x1, [sp, #144]
  413ed0:	ubfiz	x1, x1, #3, #32
  413ed4:	str	x1, [sp, #152]
  413ed8:	add	x1, x24, x1
  413edc:	str	x1, [x25, x0]
  413ee0:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  413ee4:	add	x0, x0, #0xd28
  413ee8:	str	x1, [sp, #136]
  413eec:	str	x0, [sp, #168]
  413ef0:	ldp	x0, x1, [x26, #24]
  413ef4:	cmp	x1, x0
  413ef8:	b.ne	413f08 <ferror@plt+0x11138>  // b.any
  413efc:	mov	x0, x26
  413f00:	mov	x1, #0x1                   	// #1
  413f04:	bl	444840 <_obstack_newchunk@@Base>
  413f08:	ldr	x0, [x26, #24]
  413f0c:	mov	x20, x28
  413f10:	add	x1, x0, #0x1
  413f14:	str	x1, [x26, #24]
  413f18:	ldrb	w1, [x28]
  413f1c:	strb	w1, [x0]
  413f20:	ldr	x0, [sp, #168]
  413f24:	ldrb	w1, [x20], #1
  413f28:	str	w1, [sp, #188]
  413f2c:	bl	402b60 <strchr@plt>
  413f30:	ldr	w1, [sp, #188]
  413f34:	cbnz	x0, 413fa0 <ferror@plt+0x111d0>
  413f38:	cmp	w1, #0x2e
  413f3c:	b.ne	4140f4 <ferror@plt+0x11324>  // b.any
  413f40:	ldrb	w1, [x20]
  413f44:	ldrb	w0, [x20]
  413f48:	ldrh	w1, [x27, x1, lsl #1]
  413f4c:	tbz	w1, #2, 413fa8 <ferror@plt+0x111d8>
  413f50:	ldp	x0, x1, [x26, #24]
  413f54:	cmp	x1, x0
  413f58:	b.ne	413f68 <ferror@plt+0x11198>  // b.any
  413f5c:	mov	x0, x26
  413f60:	mov	x1, #0x1                   	// #1
  413f64:	bl	444840 <_obstack_newchunk@@Base>
  413f68:	ldr	x0, [x26, #24]
  413f6c:	add	x1, x0, #0x1
  413f70:	str	x1, [x26, #24]
  413f74:	ldrb	w1, [x20]
  413f78:	strb	w1, [x0]
  413f7c:	ldrb	w0, [x20], #1
  413f80:	ldrh	w1, [x27, w0, sxtw #1]
  413f84:	tbnz	w1, #2, 413f50 <ferror@plt+0x11180>
  413f88:	cmp	w0, #0x73
  413f8c:	b.eq	4140f4 <ferror@plt+0x11324>  // b.none
  413f90:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  413f94:	mov	w1, #0x47c                 	// #1148
  413f98:	add	x2, x2, #0xd1e
  413f9c:	b	413cc0 <ferror@plt+0x10ef0>
  413fa0:	mov	x28, x20
  413fa4:	b	413ef0 <ferror@plt+0x11120>
  413fa8:	cmp	w0, #0x2a
  413fac:	b.eq	413fc0 <ferror@plt+0x111f0>  // b.none
  413fb0:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  413fb4:	mov	w1, #0x480                 	// #1152
  413fb8:	add	x2, x2, #0xd1e
  413fbc:	b	413cc0 <ferror@plt+0x10ef0>
  413fc0:	ldp	x0, x1, [x26, #24]
  413fc4:	cmp	x1, x0
  413fc8:	b.ne	413fd8 <ferror@plt+0x11208>  // b.any
  413fcc:	mov	x0, x26
  413fd0:	mov	x1, #0x1                   	// #1
  413fd4:	bl	444840 <_obstack_newchunk@@Base>
  413fd8:	ldr	x0, [x26, #24]
  413fdc:	add	x3, x28, #0x2
  413fe0:	add	x1, x0, #0x1
  413fe4:	str	x1, [x26, #24]
  413fe8:	mov	w1, #0x2a                  	// #42
  413fec:	strb	w1, [x0]
  413ff0:	ldrb	w0, [x20, #1]
  413ff4:	ldrh	w0, [x27, x0, lsl #1]
  413ff8:	tbz	w0, #2, 414088 <ferror@plt+0x112b8>
  413ffc:	add	x1, sp, #0xc8
  414000:	mov	x0, x3
  414004:	mov	w2, #0xa                   	// #10
  414008:	bl	4026f0 <strtoul@plt>
  41400c:	sub	w1, w0, #0x1
  414010:	cmp	w0, w23
  414014:	ldr	x3, [sp, #200]
  414018:	b.eq	41402c <ferror@plt+0x1125c>  // b.none
  41401c:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  414020:	mov	w1, #0x489                 	// #1161
  414024:	add	x2, x2, #0xd1e
  414028:	b	413cc0 <ferror@plt+0x10ef0>
  41402c:	ldr	w0, [sp, #184]
  414030:	cbz	w0, 414044 <ferror@plt+0x11274>
  414034:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  414038:	mov	w1, #0x48a                 	// #1162
  41403c:	add	x2, x2, #0xd1e
  414040:	b	413cc0 <ferror@plt+0x10ef0>
  414044:	ldrb	w0, [x3]
  414048:	cmp	w0, #0x24
  41404c:	b.eq	414060 <ferror@plt+0x11290>  // b.none
  414050:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  414054:	mov	w1, #0x48b                 	// #1163
  414058:	add	x2, x2, #0xd1e
  41405c:	b	413cc0 <ferror@plt+0x10ef0>
  414060:	add	x3, x3, #0x1
  414064:	ldr	x0, [sp, #136]
  414068:	str	x0, [x25, w1, uxtw #3]
  41406c:	ldrb	w0, [x3]
  414070:	cmp	w0, #0x73
  414074:	b.eq	4140bc <ferror@plt+0x112ec>  // b.none
  414078:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  41407c:	mov	w1, #0x496                 	// #1174
  414080:	add	x2, x2, #0xd1e
  414084:	b	413cc0 <ferror@plt+0x10ef0>
  414088:	ldr	w0, [sp, #128]
  41408c:	cbz	w0, 4140a0 <ferror@plt+0x112d0>
  414090:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  414094:	mov	w1, #0x492                 	// #1170
  414098:	add	x2, x2, #0xd1e
  41409c:	b	413cc0 <ferror@plt+0x10ef0>
  4140a0:	add	w23, w23, #0x1
  4140a4:	ldr	x0, [sp, #136]
  4140a8:	str	x0, [x25, x23, lsl #3]
  4140ac:	ldr	w0, [sp, #120]
  4140b0:	add	w0, w0, #0x1
  4140b4:	str	w0, [sp, #120]
  4140b8:	b	41406c <ferror@plt+0x1129c>
  4140bc:	ldp	x0, x1, [x26, #24]
  4140c0:	cmp	x1, x0
  4140c4:	b.ne	4140dc <ferror@plt+0x1130c>  // b.any
  4140c8:	mov	x0, x26
  4140cc:	mov	x1, #0x1                   	// #1
  4140d0:	str	x3, [sp, #136]
  4140d4:	bl	444840 <_obstack_newchunk@@Base>
  4140d8:	ldr	x3, [sp, #136]
  4140dc:	add	x20, x3, #0x1
  4140e0:	ldr	x0, [x26, #24]
  4140e4:	add	x1, x0, #0x1
  4140e8:	str	x1, [x26, #24]
  4140ec:	mov	w1, #0x73                  	// #115
  4140f0:	strb	w1, [x0]
  4140f4:	ldrb	w2, [x20]
  4140f8:	ldp	x1, x0, [x26, #24]
  4140fc:	cbz	w2, 414178 <ferror@plt+0x113a8>
  414100:	cmp	x1, x0
  414104:	b.ne	414114 <ferror@plt+0x11344>  // b.any
  414108:	mov	x0, x26
  41410c:	mov	x1, #0x1                   	// #1
  414110:	bl	444840 <_obstack_newchunk@@Base>
  414114:	ldr	x0, [x26, #24]
  414118:	add	w22, w22, #0x2
  41411c:	add	x1, x0, #0x1
  414120:	str	x1, [x26, #24]
  414124:	strb	wzr, [x0]
  414128:	ldp	x2, x1, [x26, #16]
  41412c:	cmp	x1, x2
  414130:	b.ne	414140 <ferror@plt+0x11370>  // b.any
  414134:	ldrb	w0, [x26, #80]
  414138:	orr	w0, w0, #0x2
  41413c:	strb	w0, [x26, #80]
  414140:	ldr	x0, [x26, #48]
  414144:	ldr	x3, [x26, #32]
  414148:	add	x1, x1, x0
  41414c:	bic	x0, x1, x0
  414150:	ldr	w23, [sp, #120]
  414154:	ldr	x1, [x26, #8]
  414158:	sub	x4, x0, x1
  41415c:	sub	x1, x3, x1
  414160:	cmp	x4, x1
  414164:	csel	x0, x0, x3, ls  // ls = plast
  414168:	stp	x0, x0, [x26, #16]
  41416c:	ldr	x0, [sp, #152]
  414170:	str	x2, [x24, x0]
  414174:	b	413c6c <ferror@plt+0x10e9c>
  414178:	ldr	w22, [sp, #144]
  41417c:	ldp	x0, x1, [x26, #24]
  414180:	cmp	x1, x0
  414184:	b.ne	414194 <ferror@plt+0x113c4>  // b.any
  414188:	mov	x0, x26
  41418c:	mov	x1, #0x1                   	// #1
  414190:	bl	444840 <_obstack_newchunk@@Base>
  414194:	ldr	x0, [x26, #24]
  414198:	cmp	w22, #0x3b
  41419c:	add	x1, x0, #0x1
  4141a0:	str	x1, [x26, #24]
  4141a4:	strb	wzr, [x0]
  4141a8:	b.ls	4141bc <ferror@plt+0x113ec>  // b.plast
  4141ac:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4141b0:	mov	w1, #0x4a4                 	// #1188
  4141b4:	add	x2, x2, #0xd1e
  4141b8:	b	413cc0 <ferror@plt+0x10ef0>
  4141bc:	ldp	x2, x1, [x26, #16]
  4141c0:	add	w4, w22, #0x1
  4141c4:	ubfiz	x22, x22, #3, #32
  4141c8:	cmp	x1, x2
  4141cc:	b.ne	4141dc <ferror@plt+0x1140c>  // b.any
  4141d0:	ldrb	w0, [x26, #80]
  4141d4:	orr	w0, w0, #0x2
  4141d8:	strb	w0, [x26, #80]
  4141dc:	ldr	x0, [x26, #48]
  4141e0:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  4141e4:	ldr	x3, [x26, #32]
  4141e8:	add	x1, x1, x0
  4141ec:	bic	x0, x1, x0
  4141f0:	add	x23, x23, #0x4e9
  4141f4:	ldr	x1, [x26, #8]
  4141f8:	mov	w20, #0x0                   	// #0
  4141fc:	sub	x5, x0, x1
  414200:	sub	x1, x3, x1
  414204:	cmp	x5, x1
  414208:	csel	x0, x0, x3, ls  // ls = plast
  41420c:	stp	x0, x0, [x26, #16]
  414210:	ldr	x0, [sp, #112]
  414214:	str	x2, [x24, x22]
  414218:	str	xzr, [x24, w4, uxtw #3]
  41421c:	mov	x22, #0x1                   	// #1
  414220:	str	x26, [x0, #176]
  414224:	ldur	x0, [x19, #36]
  414228:	stur	x22, [x19, #36]
  41422c:	str	x0, [sp, #120]
  414230:	ldr	x28, [x25, w20, uxtw #3]
  414234:	cbz	x28, 414d4c <ferror@plt+0x11f7c>
  414238:	ldr	x27, [x28]
  41423c:	mov	w6, #0x0                   	// #0
  414240:	mov	w5, #0x0                   	// #0
  414244:	mov	w4, #0x0                   	// #0
  414248:	mov	w24, #0x0                   	// #0
  41424c:	strb	wzr, [sp, #199]
  414250:	ldrb	w0, [x27]
  414254:	cmp	w0, #0x6c
  414258:	b.eq	4142fc <ferror@plt+0x1152c>  // b.none
  41425c:	b.hi	41428c <ferror@plt+0x114bc>  // b.pmore
  414260:	cmp	w0, #0x23
  414264:	b.eq	4142e8 <ferror@plt+0x11518>  // b.none
  414268:	cmp	w0, #0x2b
  41426c:	b.eq	4142d4 <ferror@plt+0x11504>  // b.none
  414270:	cmp	w24, #0x0
  414274:	ccmp	w4, #0x0, #0x4, ne  // ne = any
  414278:	b.eq	414334 <ferror@plt+0x11564>  // b.none
  41427c:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  414280:	mov	w1, #0x4dc                 	// #1244
  414284:	add	x2, x2, #0xd1e
  414288:	b	413cc0 <ferror@plt+0x10ef0>
  41428c:	cmp	w0, #0x71
  414290:	b.eq	4142b0 <ferror@plt+0x114e0>  // b.none
  414294:	cmp	w0, #0x77
  414298:	b.ne	414270 <ferror@plt+0x114a0>  // b.any
  41429c:	cbz	w4, 41432c <ferror@plt+0x1155c>
  4142a0:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4142a4:	mov	w1, #0x4cf                 	// #1231
  4142a8:	add	x2, x2, #0xd1e
  4142ac:	b	413cc0 <ferror@plt+0x10ef0>
  4142b0:	ldrb	w0, [sp, #199]
  4142b4:	cbz	w0, 4142c8 <ferror@plt+0x114f8>
  4142b8:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4142bc:	mov	w1, #0x4c0                 	// #1216
  4142c0:	add	x2, x2, #0xd1e
  4142c4:	b	413cc0 <ferror@plt+0x10ef0>
  4142c8:	strb	w22, [sp, #199]
  4142cc:	add	x27, x27, #0x1
  4142d0:	b	414250 <ferror@plt+0x11480>
  4142d4:	cbz	w5, 41431c <ferror@plt+0x1154c>
  4142d8:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4142dc:	mov	w1, #0x4c5                 	// #1221
  4142e0:	add	x2, x2, #0xd1e
  4142e4:	b	413cc0 <ferror@plt+0x10ef0>
  4142e8:	cbz	w6, 414324 <ferror@plt+0x11554>
  4142ec:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4142f0:	mov	w1, #0x4ca                 	// #1226
  4142f4:	add	x2, x2, #0xd1e
  4142f8:	b	413cc0 <ferror@plt+0x10ef0>
  4142fc:	cmp	w24, #0x1
  414300:	b.le	414314 <ferror@plt+0x11544>
  414304:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  414308:	mov	w1, #0x4d5                 	// #1237
  41430c:	add	x2, x2, #0xd1e
  414310:	b	413cc0 <ferror@plt+0x10ef0>
  414314:	add	w24, w24, #0x1
  414318:	b	4142cc <ferror@plt+0x114fc>
  41431c:	mov	w5, #0x1                   	// #1
  414320:	b	4142cc <ferror@plt+0x114fc>
  414324:	mov	w6, #0x1                   	// #1
  414328:	b	4142cc <ferror@plt+0x114fc>
  41432c:	mov	w4, #0x1                   	// #1
  414330:	b	4142cc <ferror@plt+0x114fc>
  414334:	ldrb	w0, [sp, #199]
  414338:	cbz	w0, 414360 <ferror@plt+0x11590>
  41433c:	ldrb	w1, [x19, #67]
  414340:	mov	x0, x19
  414344:	str	w4, [sp, #128]
  414348:	str	w6, [sp, #136]
  41434c:	str	w5, [sp, #184]
  414350:	bl	413afc <ferror@plt+0x10d2c>
  414354:	ldr	w4, [sp, #128]
  414358:	ldr	w6, [sp, #136]
  41435c:	ldr	w5, [sp, #184]
  414360:	ldrb	w0, [x27]
  414364:	cmp	w0, #0x2e
  414368:	b.eq	414bbc <ferror@plt+0x11dec>  // b.none
  41436c:	sub	w0, w0, #0x5a
  414370:	and	w1, w0, #0xff
  414374:	cmp	w1, #0x1e
  414378:	b.hi	414d00 <ferror@plt+0x11f30>  // b.pmore
  41437c:	cmp	w0, #0x1e
  414380:	b.hi	414d00 <ferror@plt+0x11f30>  // b.pmore
  414384:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  414388:	add	x1, x1, #0xd6c
  41438c:	ldrh	w0, [x1, w0, uxtw #1]
  414390:	adr	x1, 41439c <ferror@plt+0x115cc>
  414394:	add	x0, x1, w0, sxth #2
  414398:	br	x0
  41439c:	ldr	x2, [x21, #8]
  4143a0:	ldrb	w0, [x19, #67]
  4143a4:	ldr	w3, [x2, #24]
  4143a8:	ldr	x1, [x2]
  4143ac:	tbnz	w3, #31, 4143d4 <ferror@plt+0x11604>
  4143b0:	add	x3, x1, #0xf
  4143b4:	and	x3, x3, #0xfffffffffffffff8
  4143b8:	str	x3, [x2]
  4143bc:	ldr	x1, [x1]
  4143c0:	bl	40eb1c <ferror@plt+0xbd4c>
  4143c4:	mov	x1, x0
  4143c8:	mov	x0, x19
  4143cc:	bl	413938 <ferror@plt+0x10b68>
  4143d0:	b	414434 <ferror@plt+0x11664>
  4143d4:	add	w4, w3, #0x8
  4143d8:	str	w4, [x2, #24]
  4143dc:	cmp	w4, #0x0
  4143e0:	b.gt	4143b0 <ferror@plt+0x115e0>
  4143e4:	ldr	x1, [x2, #8]
  4143e8:	add	x1, x1, w3, sxtw
  4143ec:	b	4143bc <ferror@plt+0x115ec>
  4143f0:	ldr	x1, [x21, #8]
  4143f4:	ldr	w2, [x1, #24]
  4143f8:	ldr	x0, [x1]
  4143fc:	tbnz	w2, #31, 4144c0 <ferror@plt+0x116f0>
  414400:	add	x2, x0, #0xb
  414404:	and	x2, x2, #0xfffffffffffffff8
  414408:	str	x2, [x1]
  41440c:	ldr	w1, [x0]
  414410:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  414414:	add	x0, x0, #0xb08
  414418:	and	x2, x1, #0xff
  41441c:	ldrh	w0, [x0, x2, lsl #1]
  414420:	tbnz	w0, #4, 41442c <ferror@plt+0x1165c>
  414424:	ldrb	w0, [sp, #199]
  414428:	cbnz	w0, 4144dc <ferror@plt+0x1170c>
  41442c:	mov	x0, x19
  414430:	bl	41358c <ferror@plt+0x107bc>
  414434:	ldrb	w0, [sp, #199]
  414438:	cbz	w0, 414448 <ferror@plt+0x11678>
  41443c:	ldrb	w1, [x19, #67]
  414440:	mov	x0, x19
  414444:	bl	413b40 <ferror@plt+0x10d70>
  414448:	ldp	x0, x1, [x26, #24]
  41444c:	cmp	x1, x0
  414450:	b.ne	414460 <ferror@plt+0x11690>  // b.any
  414454:	mov	x0, x26
  414458:	mov	x1, #0x1                   	// #1
  41445c:	bl	444840 <_obstack_newchunk@@Base>
  414460:	ldr	x0, [x26, #24]
  414464:	ldr	x4, [x25, w20, uxtw #3]
  414468:	add	x1, x0, #0x1
  41446c:	str	x1, [x26, #24]
  414470:	strb	wzr, [x0]
  414474:	ldp	x2, x1, [x26, #16]
  414478:	cmp	x1, x2
  41447c:	b.ne	41448c <ferror@plt+0x116bc>  // b.any
  414480:	ldrb	w0, [x26, #80]
  414484:	orr	w0, w0, #0x2
  414488:	strb	w0, [x26, #80]
  41448c:	ldr	x0, [x26, #48]
  414490:	add	w20, w20, #0x1
  414494:	ldr	x3, [x26, #32]
  414498:	add	x1, x1, x0
  41449c:	bic	x0, x1, x0
  4144a0:	ldr	x1, [x26, #8]
  4144a4:	sub	x5, x0, x1
  4144a8:	sub	x1, x3, x1
  4144ac:	cmp	x5, x1
  4144b0:	csel	x0, x0, x3, ls  // ls = plast
  4144b4:	stp	x0, x0, [x26, #16]
  4144b8:	str	x2, [x4]
  4144bc:	b	414230 <ferror@plt+0x11460>
  4144c0:	add	w3, w2, #0x8
  4144c4:	str	w3, [x1, #24]
  4144c8:	cmp	w3, #0x0
  4144cc:	b.gt	414400 <ferror@plt+0x11630>
  4144d0:	ldr	x0, [x1, #8]
  4144d4:	add	x0, x0, w2, sxtw
  4144d8:	b	41440c <ferror@plt+0x1163c>
  4144dc:	strb	w1, [sp, #200]
  4144e0:	add	x1, sp, #0xc8
  4144e4:	mov	x2, #0x1                   	// #1
  4144e8:	strb	wzr, [sp, #201]
  4144ec:	mov	x0, x19
  4144f0:	bl	413868 <ferror@plt+0x10a98>
  4144f4:	b	414434 <ferror@plt+0x11664>
  4144f8:	cbz	w4, 414544 <ferror@plt+0x11774>
  4144fc:	ldr	x1, [x21, #8]
  414500:	ldr	w2, [x1, #24]
  414504:	ldr	x0, [x1]
  414508:	tbnz	w2, #31, 414528 <ferror@plt+0x11758>
  41450c:	add	x2, x0, #0xf
  414510:	and	x2, x2, #0xfffffffffffffff8
  414514:	str	x2, [x1]
  414518:	ldr	x1, [x0]
  41451c:	mov	x0, x19
  414520:	bl	4152a0 <ferror@plt+0x124d0>
  414524:	b	414434 <ferror@plt+0x11664>
  414528:	add	w3, w2, #0x8
  41452c:	str	w3, [x1, #24]
  414530:	cmp	w3, #0x0
  414534:	b.gt	41450c <ferror@plt+0x1173c>
  414538:	ldr	x0, [x1, #8]
  41453c:	add	x0, x0, w2, sxtw
  414540:	b	414518 <ferror@plt+0x11748>
  414544:	cmp	w24, #0x1
  414548:	b.eq	4145ac <ferror@plt+0x117dc>  // b.none
  41454c:	cmp	w24, #0x2
  414550:	b.eq	414608 <ferror@plt+0x11838>  // b.none
  414554:	cbnz	w24, 414434 <ferror@plt+0x11664>
  414558:	ldr	x2, [x21, #8]
  41455c:	ldr	x0, [x19, #8]
  414560:	ldr	w3, [x2, #24]
  414564:	add	x0, x0, #0xcc
  414568:	ldr	x1, [x2]
  41456c:	tbnz	w3, #31, 414590 <ferror@plt+0x117c0>
  414570:	add	x3, x1, #0xb
  414574:	and	x3, x3, #0xfffffffffffffff8
  414578:	str	x3, [x2]
  41457c:	ldr	w2, [x1]
  414580:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  414584:	add	x1, x1, #0x45c
  414588:	bl	4027a0 <sprintf@plt>
  41458c:	b	4145e0 <ferror@plt+0x11810>
  414590:	add	w4, w3, #0x8
  414594:	str	w4, [x2, #24]
  414598:	cmp	w4, #0x0
  41459c:	b.gt	414570 <ferror@plt+0x117a0>
  4145a0:	ldr	x1, [x2, #8]
  4145a4:	add	x1, x1, w3, sxtw
  4145a8:	b	41457c <ferror@plt+0x117ac>
  4145ac:	ldr	x2, [x21, #8]
  4145b0:	ldr	x0, [x19, #8]
  4145b4:	ldr	w3, [x2, #24]
  4145b8:	add	x0, x0, #0xcc
  4145bc:	ldr	x1, [x2]
  4145c0:	tbnz	w3, #31, 4145ec <ferror@plt+0x1181c>
  4145c4:	add	x3, x1, #0xf
  4145c8:	and	x3, x3, #0xfffffffffffffff8
  4145cc:	str	x3, [x2]
  4145d0:	ldr	x2, [x1]
  4145d4:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4145d8:	add	x1, x1, #0x1a9
  4145dc:	bl	4027a0 <sprintf@plt>
  4145e0:	ldr	x1, [x19, #8]
  4145e4:	add	x1, x1, #0xcc
  4145e8:	b	4143c8 <ferror@plt+0x115f8>
  4145ec:	add	w4, w3, #0x8
  4145f0:	str	w4, [x2, #24]
  4145f4:	cmp	w4, #0x0
  4145f8:	b.gt	4145c4 <ferror@plt+0x117f4>
  4145fc:	ldr	x1, [x2, #8]
  414600:	add	x1, x1, w3, sxtw
  414604:	b	4145d0 <ferror@plt+0x11800>
  414608:	ldr	x2, [x21, #8]
  41460c:	ldr	x0, [x19, #8]
  414610:	ldr	w3, [x2, #24]
  414614:	add	x0, x0, #0xcc
  414618:	ldr	x1, [x2]
  41461c:	tbnz	w3, #31, 41463c <ferror@plt+0x1186c>
  414620:	add	x3, x1, #0xf
  414624:	and	x3, x3, #0xfffffffffffffff8
  414628:	str	x3, [x2]
  41462c:	ldr	x2, [x1]
  414630:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  414634:	add	x1, x1, #0xd2e
  414638:	b	4145dc <ferror@plt+0x1180c>
  41463c:	add	w4, w3, #0x8
  414640:	str	w4, [x2, #24]
  414644:	cmp	w4, #0x0
  414648:	b.gt	414620 <ferror@plt+0x11850>
  41464c:	ldr	x1, [x2, #8]
  414650:	add	x1, x1, w3, sxtw
  414654:	b	41462c <ferror@plt+0x1185c>
  414658:	cbz	w4, 414690 <ferror@plt+0x118c0>
  41465c:	ldr	x2, [x21, #8]
  414660:	ldr	x0, [x19, #8]
  414664:	ldr	w3, [x2, #24]
  414668:	add	x0, x0, #0xcc
  41466c:	ldr	x1, [x2]
  414670:	tbnz	w3, #31, 4146f4 <ferror@plt+0x11924>
  414674:	add	x3, x1, #0xf
  414678:	and	x3, x3, #0xfffffffffffffff8
  41467c:	str	x3, [x2]
  414680:	ldr	x2, [x1]
  414684:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  414688:	add	x1, x1, #0xd33
  41468c:	b	4145dc <ferror@plt+0x1180c>
  414690:	cmp	w24, #0x1
  414694:	b.eq	41465c <ferror@plt+0x1188c>  // b.none
  414698:	cmp	w24, #0x2
  41469c:	b.eq	414710 <ferror@plt+0x11940>  // b.none
  4146a0:	cbnz	w24, 414434 <ferror@plt+0x11664>
  4146a4:	ldr	x2, [x21, #8]
  4146a8:	ldr	x0, [x19, #8]
  4146ac:	ldr	w3, [x2, #24]
  4146b0:	add	x0, x0, #0xcc
  4146b4:	ldr	x1, [x2]
  4146b8:	tbnz	w3, #31, 4146d8 <ferror@plt+0x11908>
  4146bc:	add	x3, x1, #0xb
  4146c0:	and	x3, x3, #0xfffffffffffffff8
  4146c4:	str	x3, [x2]
  4146c8:	ldr	w2, [x1]
  4146cc:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4146d0:	add	x1, x1, #0x708
  4146d4:	b	414588 <ferror@plt+0x117b8>
  4146d8:	add	w4, w3, #0x8
  4146dc:	str	w4, [x2, #24]
  4146e0:	cmp	w4, #0x0
  4146e4:	b.gt	4146bc <ferror@plt+0x118ec>
  4146e8:	ldr	x1, [x2, #8]
  4146ec:	add	x1, x1, w3, sxtw
  4146f0:	b	4146c8 <ferror@plt+0x118f8>
  4146f4:	add	w4, w3, #0x8
  4146f8:	str	w4, [x2, #24]
  4146fc:	cmp	w4, #0x0
  414700:	b.gt	414674 <ferror@plt+0x118a4>
  414704:	ldr	x1, [x2, #8]
  414708:	add	x1, x1, w3, sxtw
  41470c:	b	414680 <ferror@plt+0x118b0>
  414710:	ldr	x2, [x21, #8]
  414714:	ldr	x0, [x19, #8]
  414718:	ldr	w3, [x2, #24]
  41471c:	add	x0, x0, #0xcc
  414720:	ldr	x1, [x2]
  414724:	tbnz	w3, #31, 414744 <ferror@plt+0x11974>
  414728:	add	x3, x1, #0xf
  41472c:	and	x3, x3, #0xfffffffffffffff8
  414730:	str	x3, [x2]
  414734:	ldr	x2, [x1]
  414738:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  41473c:	add	x1, x1, #0xd37
  414740:	b	4145dc <ferror@plt+0x1180c>
  414744:	add	w4, w3, #0x8
  414748:	str	w4, [x2, #24]
  41474c:	cmp	w4, #0x0
  414750:	b.gt	414728 <ferror@plt+0x11958>
  414754:	ldr	x1, [x2, #8]
  414758:	add	x1, x1, w3, sxtw
  41475c:	b	414734 <ferror@plt+0x11964>
  414760:	ldrb	w3, [sp, #199]
  414764:	ldr	x1, [x21, #8]
  414768:	ldr	w2, [x1, #24]
  41476c:	ldr	x0, [x1]
  414770:	cbz	w3, 4147ac <ferror@plt+0x119dc>
  414774:	tbnz	w2, #31, 414790 <ferror@plt+0x119c0>
  414778:	add	x2, x0, #0xf
  41477c:	and	x2, x2, #0xfffffffffffffff8
  414780:	str	x2, [x1]
  414784:	mov	x2, #0xffffffffffffffff    	// #-1
  414788:	ldr	x1, [x0]
  41478c:	b	4144ec <ferror@plt+0x1171c>
  414790:	add	w3, w2, #0x8
  414794:	str	w3, [x1, #24]
  414798:	cmp	w3, #0x0
  41479c:	b.gt	414778 <ferror@plt+0x119a8>
  4147a0:	ldr	x0, [x1, #8]
  4147a4:	add	x0, x0, w2, sxtw
  4147a8:	b	414784 <ferror@plt+0x119b4>
  4147ac:	tbnz	w2, #31, 4147c4 <ferror@plt+0x119f4>
  4147b0:	add	x2, x0, #0xf
  4147b4:	and	x2, x2, #0xfffffffffffffff8
  4147b8:	str	x2, [x1]
  4147bc:	ldr	x1, [x0]
  4147c0:	b	4143c8 <ferror@plt+0x115f8>
  4147c4:	add	w3, w2, #0x8
  4147c8:	str	w3, [x1, #24]
  4147cc:	cmp	w3, #0x0
  4147d0:	b.gt	4147b0 <ferror@plt+0x119e0>
  4147d4:	ldr	x0, [x1, #8]
  4147d8:	add	x0, x0, w2, sxtw
  4147dc:	b	4147bc <ferror@plt+0x119ec>
  4147e0:	ldr	x2, [x21, #8]
  4147e4:	ldr	x0, [x19, #8]
  4147e8:	ldr	w3, [x2, #24]
  4147ec:	add	x0, x0, #0xcc
  4147f0:	ldr	x1, [x2]
  4147f4:	tbnz	w3, #31, 414814 <ferror@plt+0x11a44>
  4147f8:	add	x3, x1, #0xf
  4147fc:	and	x3, x3, #0xfffffffffffffff8
  414800:	str	x3, [x2]
  414804:	ldr	x2, [x1]
  414808:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  41480c:	add	x1, x1, #0xd3c
  414810:	b	4145dc <ferror@plt+0x1180c>
  414814:	add	w4, w3, #0x8
  414818:	str	w4, [x2, #24]
  41481c:	cmp	w4, #0x0
  414820:	b.gt	4147f8 <ferror@plt+0x11a28>
  414824:	ldr	x1, [x2, #8]
  414828:	add	x1, x1, w3, sxtw
  41482c:	b	414804 <ferror@plt+0x11a34>
  414830:	cbz	w4, 41485c <ferror@plt+0x11a8c>
  414834:	ldr	x2, [x21, #8]
  414838:	ldr	x0, [x19, #8]
  41483c:	ldr	w3, [x2, #24]
  414840:	add	x0, x0, #0xcc
  414844:	ldr	x1, [x2]
  414848:	tbnz	w3, #31, 4148c0 <ferror@plt+0x11af0>
  41484c:	add	x3, x1, #0xf
  414850:	and	x3, x3, #0xfffffffffffffff8
  414854:	str	x3, [x2]
  414858:	b	4148d8 <ferror@plt+0x11b08>
  41485c:	cmp	w24, #0x1
  414860:	b.eq	414834 <ferror@plt+0x11a64>  // b.none
  414864:	cmp	w24, #0x2
  414868:	b.eq	4148e8 <ferror@plt+0x11b18>  // b.none
  41486c:	cbnz	w24, 414434 <ferror@plt+0x11664>
  414870:	ldr	x2, [x21, #8]
  414874:	ldr	x0, [x19, #8]
  414878:	ldr	w3, [x2, #24]
  41487c:	add	x0, x0, #0xcc
  414880:	ldr	x1, [x2]
  414884:	tbnz	w3, #31, 4148a4 <ferror@plt+0x11ad4>
  414888:	add	x3, x1, #0xb
  41488c:	and	x3, x3, #0xfffffffffffffff8
  414890:	str	x3, [x2]
  414894:	ldr	w2, [x1]
  414898:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41489c:	add	x1, x1, #0x5a5
  4148a0:	b	414588 <ferror@plt+0x117b8>
  4148a4:	add	w4, w3, #0x8
  4148a8:	str	w4, [x2, #24]
  4148ac:	cmp	w4, #0x0
  4148b0:	b.gt	414888 <ferror@plt+0x11ab8>
  4148b4:	ldr	x1, [x2, #8]
  4148b8:	add	x1, x1, w3, sxtw
  4148bc:	b	414894 <ferror@plt+0x11ac4>
  4148c0:	add	w4, w3, #0x8
  4148c4:	str	w4, [x2, #24]
  4148c8:	cmp	w4, #0x0
  4148cc:	b.gt	41484c <ferror@plt+0x11a7c>
  4148d0:	ldr	x1, [x2, #8]
  4148d4:	add	x1, x1, w3, sxtw
  4148d8:	ldr	x2, [x1]
  4148dc:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4148e0:	add	x1, x1, #0xd3f
  4148e4:	b	4145dc <ferror@plt+0x1180c>
  4148e8:	ldr	x2, [x21, #8]
  4148ec:	ldr	x0, [x19, #8]
  4148f0:	ldr	w3, [x2, #24]
  4148f4:	add	x0, x0, #0xcc
  4148f8:	ldr	x1, [x2]
  4148fc:	tbnz	w3, #31, 41491c <ferror@plt+0x11b4c>
  414900:	add	x3, x1, #0xf
  414904:	and	x3, x3, #0xfffffffffffffff8
  414908:	str	x3, [x2]
  41490c:	ldr	x2, [x1]
  414910:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  414914:	add	x1, x1, #0xd43
  414918:	b	4145dc <ferror@plt+0x1180c>
  41491c:	add	w4, w3, #0x8
  414920:	str	w4, [x2, #24]
  414924:	cmp	w4, #0x0
  414928:	b.gt	414900 <ferror@plt+0x11b30>
  41492c:	ldr	x1, [x2, #8]
  414930:	add	x1, x1, w3, sxtw
  414934:	b	41490c <ferror@plt+0x11b3c>
  414938:	ldr	x2, [x21, #8]
  41493c:	ldr	x0, [x19, #8]
  414940:	ldr	w3, [x2, #28]
  414944:	add	x0, x0, #0xcc
  414948:	ldr	x1, [x2]
  41494c:	tbnz	w3, #31, 414970 <ferror@plt+0x11ba0>
  414950:	add	x3, x1, #0xf
  414954:	and	x3, x3, #0xfffffffffffffff8
  414958:	str	x3, [x2]
  41495c:	ldr	d0, [x1]
  414960:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  414964:	add	x1, x1, #0xd48
  414968:	bl	4027a0 <sprintf@plt>
  41496c:	b	4145e0 <ferror@plt+0x11810>
  414970:	add	w4, w3, #0x10
  414974:	str	w4, [x2, #28]
  414978:	cmp	w4, #0x0
  41497c:	b.gt	414950 <ferror@plt+0x11b80>
  414980:	ldr	x1, [x2, #16]
  414984:	add	x1, x1, w3, sxtw
  414988:	b	41495c <ferror@plt+0x11b8c>
  41498c:	ldr	x0, [x21, #8]
  414990:	ldr	w2, [x0, #24]
  414994:	ldr	x1, [x0]
  414998:	tbnz	w2, #31, 414a2c <ferror@plt+0x11c5c>
  41499c:	add	x2, x1, #0xf
  4149a0:	and	x2, x2, #0xfffffffffffffff8
  4149a4:	str	x2, [x0]
  4149a8:	ldr	w2, [x0, #24]
  4149ac:	ldr	x1, [x1]
  4149b0:	str	x1, [sp, #128]
  4149b4:	ldr	x1, [x0]
  4149b8:	tbnz	w2, #31, 414a48 <ferror@plt+0x11c78>
  4149bc:	add	x2, x1, #0xb
  4149c0:	and	x2, x2, #0xfffffffffffffff8
  4149c4:	str	x2, [x0]
  4149c8:	ldr	w24, [x1]
  4149cc:	mov	x27, #0x0                   	// #0
  4149d0:	sub	w28, w24, #0x1
  4149d4:	cmp	w24, w27
  4149d8:	b.ls	414434 <ferror@plt+0x11664>  // b.plast
  4149dc:	ldr	x1, [sp, #128]
  4149e0:	ldr	x0, [x19, #8]
  4149e4:	ldr	w2, [x1, x27, lsl #2]
  4149e8:	mov	x1, x23
  4149ec:	add	x0, x0, #0xcc
  4149f0:	bl	4027a0 <sprintf@plt>
  4149f4:	ldr	x1, [x19, #8]
  4149f8:	mov	x0, x19
  4149fc:	add	x1, x1, #0xcc
  414a00:	bl	413938 <ferror@plt+0x10b68>
  414a04:	cmp	w28, w27
  414a08:	b.ls	414a24 <ferror@plt+0x11c54>  // b.plast
  414a0c:	mov	x0, x19
  414a10:	mov	w1, #0x2c                  	// #44
  414a14:	bl	41358c <ferror@plt+0x107bc>
  414a18:	mov	x0, x19
  414a1c:	mov	w1, #0x20                  	// #32
  414a20:	bl	41358c <ferror@plt+0x107bc>
  414a24:	add	x27, x27, #0x1
  414a28:	b	4149d4 <ferror@plt+0x11c04>
  414a2c:	add	w3, w2, #0x8
  414a30:	str	w3, [x0, #24]
  414a34:	cmp	w3, #0x0
  414a38:	b.gt	41499c <ferror@plt+0x11bcc>
  414a3c:	ldr	x1, [x0, #8]
  414a40:	add	x1, x1, w2, sxtw
  414a44:	b	4149a8 <ferror@plt+0x11bd8>
  414a48:	add	w3, w2, #0x8
  414a4c:	str	w3, [x0, #24]
  414a50:	cmp	w3, #0x0
  414a54:	b.gt	4149bc <ferror@plt+0x11bec>
  414a58:	ldr	x1, [x0, #8]
  414a5c:	add	x1, x1, w2, sxtw
  414a60:	b	4149c8 <ferror@plt+0x11bf8>
  414a64:	cbz	w4, 414ab8 <ferror@plt+0x11ce8>
  414a68:	ldr	x2, [x21, #8]
  414a6c:	ldr	x0, [x19, #8]
  414a70:	ldr	w3, [x2, #24]
  414a74:	add	x0, x0, #0xcc
  414a78:	ldr	x1, [x2]
  414a7c:	tbnz	w3, #31, 414a9c <ferror@plt+0x11ccc>
  414a80:	add	x3, x1, #0xf
  414a84:	and	x3, x3, #0xfffffffffffffff8
  414a88:	str	x3, [x2]
  414a8c:	ldr	x2, [x1]
  414a90:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  414a94:	add	x1, x1, #0xd4b
  414a98:	b	4145dc <ferror@plt+0x1180c>
  414a9c:	add	w4, w3, #0x8
  414aa0:	str	w4, [x2, #24]
  414aa4:	cmp	w4, #0x0
  414aa8:	b.gt	414a80 <ferror@plt+0x11cb0>
  414aac:	ldr	x1, [x2, #8]
  414ab0:	add	x1, x1, w3, sxtw
  414ab4:	b	414a8c <ferror@plt+0x11cbc>
  414ab8:	cmp	w24, #0x1
  414abc:	b.eq	414b1c <ferror@plt+0x11d4c>  // b.none
  414ac0:	cmp	w24, #0x2
  414ac4:	b.eq	414b6c <ferror@plt+0x11d9c>  // b.none
  414ac8:	cbnz	w24, 414434 <ferror@plt+0x11664>
  414acc:	ldr	x2, [x21, #8]
  414ad0:	ldr	x0, [x19, #8]
  414ad4:	ldr	w3, [x2, #24]
  414ad8:	add	x0, x0, #0xcc
  414adc:	ldr	x1, [x2]
  414ae0:	tbnz	w3, #31, 414b00 <ferror@plt+0x11d30>
  414ae4:	add	x3, x1, #0xb
  414ae8:	and	x3, x3, #0xfffffffffffffff8
  414aec:	str	x3, [x2]
  414af0:	ldr	w2, [x1]
  414af4:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  414af8:	add	x1, x1, #0xd50
  414afc:	b	414588 <ferror@plt+0x117b8>
  414b00:	add	w4, w3, #0x8
  414b04:	str	w4, [x2, #24]
  414b08:	cmp	w4, #0x0
  414b0c:	b.gt	414ae4 <ferror@plt+0x11d14>
  414b10:	ldr	x1, [x2, #8]
  414b14:	add	x1, x1, w3, sxtw
  414b18:	b	414af0 <ferror@plt+0x11d20>
  414b1c:	ldr	x2, [x21, #8]
  414b20:	ldr	x0, [x19, #8]
  414b24:	ldr	w3, [x2, #24]
  414b28:	add	x0, x0, #0xcc
  414b2c:	ldr	x1, [x2]
  414b30:	tbnz	w3, #31, 414b50 <ferror@plt+0x11d80>
  414b34:	add	x3, x1, #0xf
  414b38:	and	x3, x3, #0xfffffffffffffff8
  414b3c:	str	x3, [x2]
  414b40:	ldr	x2, [x1]
  414b44:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  414b48:	add	x1, x1, #0xd53
  414b4c:	b	4145dc <ferror@plt+0x1180c>
  414b50:	add	w4, w3, #0x8
  414b54:	str	w4, [x2, #24]
  414b58:	cmp	w4, #0x0
  414b5c:	b.gt	414b34 <ferror@plt+0x11d64>
  414b60:	ldr	x1, [x2, #8]
  414b64:	add	x1, x1, w3, sxtw
  414b68:	b	414b40 <ferror@plt+0x11d70>
  414b6c:	ldr	x2, [x21, #8]
  414b70:	ldr	x0, [x19, #8]
  414b74:	ldr	w3, [x2, #24]
  414b78:	add	x0, x0, #0xcc
  414b7c:	ldr	x1, [x2]
  414b80:	tbnz	w3, #31, 414ba0 <ferror@plt+0x11dd0>
  414b84:	add	x3, x1, #0xf
  414b88:	and	x3, x3, #0xfffffffffffffff8
  414b8c:	str	x3, [x2]
  414b90:	ldr	x2, [x1]
  414b94:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  414b98:	add	x1, x1, #0xd57
  414b9c:	b	4145dc <ferror@plt+0x1180c>
  414ba0:	add	w4, w3, #0x8
  414ba4:	str	w4, [x2, #24]
  414ba8:	cmp	w4, #0x0
  414bac:	b.gt	414b84 <ferror@plt+0x11db4>
  414bb0:	ldr	x1, [x2, #8]
  414bb4:	add	x1, x1, w3, sxtw
  414bb8:	b	414b90 <ferror@plt+0x11dc0>
  414bbc:	ldrb	w2, [x27, #1]
  414bc0:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  414bc4:	add	x0, x0, #0xb08
  414bc8:	ldrb	w1, [x27, #1]
  414bcc:	ldrh	w0, [x0, x2, lsl #1]
  414bd0:	tbz	w0, #2, 414c04 <ferror@plt+0x11e34>
  414bd4:	add	x1, sp, #0xc8
  414bd8:	add	x0, x27, #0x1
  414bdc:	mov	w2, #0xa                   	// #10
  414be0:	bl	4026f0 <strtoul@plt>
  414be4:	ldr	x1, [sp, #200]
  414be8:	ldrb	w1, [x1]
  414bec:	cmp	w1, #0x73
  414bf0:	b.eq	414c94 <ferror@plt+0x11ec4>  // b.none
  414bf4:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  414bf8:	mov	w1, #0x54b                 	// #1355
  414bfc:	add	x2, x2, #0xd1e
  414c00:	b	413cc0 <ferror@plt+0x10ef0>
  414c04:	cmp	w1, #0x2a
  414c08:	b.eq	414c1c <ferror@plt+0x11e4c>  // b.none
  414c0c:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  414c10:	mov	w1, #0x54f                 	// #1359
  414c14:	add	x2, x2, #0xd1e
  414c18:	b	413cc0 <ferror@plt+0x10ef0>
  414c1c:	ldrb	w0, [x27, #2]
  414c20:	cmp	w0, #0x73
  414c24:	b.eq	414c38 <ferror@plt+0x11e68>  // b.none
  414c28:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  414c2c:	mov	w1, #0x551                 	// #1361
  414c30:	add	x2, x2, #0xd1e
  414c34:	b	413cc0 <ferror@plt+0x10ef0>
  414c38:	ldr	x1, [x21, #8]
  414c3c:	ldr	w2, [x1, #24]
  414c40:	ldr	x0, [x1]
  414c44:	tbnz	w2, #31, 414c78 <ferror@plt+0x11ea8>
  414c48:	add	x2, x0, #0xb
  414c4c:	and	x2, x2, #0xfffffffffffffff8
  414c50:	str	x2, [x1]
  414c54:	add	w20, w20, #0x1
  414c58:	ldr	w0, [x0]
  414c5c:	ldr	x1, [x25, w20, uxtw #3]
  414c60:	cmp	x28, x1
  414c64:	b.eq	414c94 <ferror@plt+0x11ec4>  // b.none
  414c68:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  414c6c:	mov	w1, #0x555                 	// #1365
  414c70:	add	x2, x2, #0xd1e
  414c74:	b	413cc0 <ferror@plt+0x10ef0>
  414c78:	add	w3, w2, #0x8
  414c7c:	str	w3, [x1, #24]
  414c80:	cmp	w3, #0x0
  414c84:	b.gt	414c48 <ferror@plt+0x11e78>
  414c88:	ldr	x0, [x1, #8]
  414c8c:	add	x0, x0, w2, sxtw
  414c90:	b	414c54 <ferror@plt+0x11e84>
  414c94:	ldr	x3, [x21, #8]
  414c98:	ldr	w1, [x3, #24]
  414c9c:	ldr	x2, [x3]
  414ca0:	tbnz	w1, #31, 414cd4 <ferror@plt+0x11f04>
  414ca4:	add	x1, x2, #0xf
  414ca8:	and	x1, x1, #0xfffffffffffffff8
  414cac:	str	x1, [x3]
  414cb0:	ldr	x24, [x2]
  414cb4:	tbz	w0, #31, 414cf0 <ferror@plt+0x11f20>
  414cb8:	mov	x0, x24
  414cbc:	bl	402700 <strlen@plt>
  414cc0:	add	x2, x24, x0
  414cc4:	mov	x1, x24
  414cc8:	mov	x0, x19
  414ccc:	bl	4136f4 <ferror@plt+0x10924>
  414cd0:	b	414434 <ferror@plt+0x11664>
  414cd4:	add	w4, w1, #0x8
  414cd8:	str	w4, [x3, #24]
  414cdc:	cmp	w4, #0x0
  414ce0:	b.gt	414ca4 <ferror@plt+0x11ed4>
  414ce4:	ldr	x2, [x3, #8]
  414ce8:	add	x2, x2, w1, sxtw
  414cec:	b	414cb0 <ferror@plt+0x11ee0>
  414cf0:	sxtw	x1, w0
  414cf4:	mov	x0, x24
  414cf8:	bl	402750 <strnlen@plt>
  414cfc:	b	414cc0 <ferror@plt+0x11ef0>
  414d00:	ldr	x9, [x19, #48]
  414d04:	cbnz	x9, 414d18 <ferror@plt+0x11f48>
  414d08:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  414d0c:	mov	w1, #0x56d                 	// #1389
  414d10:	add	x2, x2, #0xd1e
  414d14:	b	413cc0 <ferror@plt+0x10ef0>
  414d18:	str	x28, [sp]
  414d1c:	add	x7, sp, #0xc7
  414d20:	mov	w3, w24
  414d24:	mov	x2, x27
  414d28:	mov	x1, x21
  414d2c:	mov	x0, x19
  414d30:	blr	x9
  414d34:	tst	w0, #0xff
  414d38:	b.ne	414434 <ferror@plt+0x11664>  // b.any
  414d3c:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  414d40:	mov	w1, #0x571                 	// #1393
  414d44:	add	x2, x2, #0xd1e
  414d48:	b	413cc0 <ferror@plt+0x10ef0>
  414d4c:	ldr	x0, [x19, #56]
  414d50:	cbz	x0, 414d64 <ferror@plt+0x11f94>
  414d54:	ldr	x1, [x0]
  414d58:	ldr	x2, [x1, #16]
  414d5c:	mov	x1, x19
  414d60:	blr	x2
  414d64:	ldr	x0, [sp, #112]
  414d68:	ldp	x29, x30, [sp, #16]
  414d6c:	ldp	x21, x22, [sp, #48]
  414d70:	ldp	x23, x24, [sp, #64]
  414d74:	ldp	x25, x26, [sp, #80]
  414d78:	ldp	x27, x28, [sp, #96]
  414d7c:	str	x0, [x0, #176]
  414d80:	str	wzr, [x0, #200]
  414d84:	ldr	x0, [sp, #120]
  414d88:	str	wzr, [x19, #32]
  414d8c:	stur	x0, [x19, #36]
  414d90:	strb	wzr, [x19, #64]
  414d94:	ldp	x19, x20, [sp, #32]
  414d98:	add	sp, sp, #0x1c0
  414d9c:	ret
  414da0:	ldrb	w0, [x20, #1]
  414da4:	cmp	w0, #0x3e
  414da8:	b.eq	413d00 <ferror@plt+0x10f30>  // b.none
  414dac:	b.hi	414e9c <ferror@plt+0x120cc>  // b.pmore
  414db0:	cmp	w0, #0x27
  414db4:	b.eq	413d4c <ferror@plt+0x10f7c>  // b.none
  414db8:	b.hi	414e08 <ferror@plt+0x12038>  // b.pmore
  414dbc:	cbz	w0, 413cb4 <ferror@plt+0x10ee4>
  414dc0:	cmp	w0, #0x25
  414dc4:	b.eq	413ccc <ferror@plt+0x10efc>  // b.none
  414dc8:	ldp	x0, x1, [x26, #24]
  414dcc:	cmp	x1, x0
  414dd0:	b.ne	414de0 <ferror@plt+0x12010>  // b.any
  414dd4:	mov	x0, x26
  414dd8:	mov	x1, #0x1                   	// #1
  414ddc:	bl	444840 <_obstack_newchunk@@Base>
  414de0:	ldr	x0, [x26, #24]
  414de4:	cmp	w22, #0x3b
  414de8:	add	x1, x0, #0x1
  414dec:	str	x1, [x26, #24]
  414df0:	strb	wzr, [x0]
  414df4:	b.ls	413da4 <ferror@plt+0x10fd4>  // b.plast
  414df8:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  414dfc:	mov	w1, #0x450                 	// #1104
  414e00:	add	x2, x2, #0xd1e
  414e04:	b	413cc0 <ferror@plt+0x10ef0>
  414e08:	cmp	w0, #0x3c
  414e0c:	b.ne	414dc8 <ferror@plt+0x11ff8>  // b.any
  414e10:	ldr	x0, [sp, #160]
  414e14:	ldr	x0, [x0]
  414e18:	bl	402700 <strlen@plt>
  414e1c:	mov	x27, x0
  414e20:	ldp	x1, x0, [x26, #24]
  414e24:	sub	x0, x0, x1
  414e28:	cmp	x27, x0
  414e2c:	b.ls	414e3c <ferror@plt+0x1206c>  // b.plast
  414e30:	mov	x1, x27
  414e34:	mov	x0, x26
  414e38:	bl	444840 <_obstack_newchunk@@Base>
  414e3c:	ldr	x0, [sp, #160]
  414e40:	mov	x2, x27
  414e44:	ldr	x1, [x0]
  414e48:	ldr	x0, [x26, #24]
  414e4c:	bl	4026a0 <memcpy@plt>
  414e50:	ldr	x0, [x26, #24]
  414e54:	ldr	x1, [sp, #176]
  414e58:	add	x0, x0, x27
  414e5c:	str	x0, [x26, #24]
  414e60:	ldrb	w0, [x19, #67]
  414e64:	bl	40eb1c <ferror@plt+0xbd4c>
  414e68:	mov	x27, x0
  414e6c:	bl	402700 <strlen@plt>
  414e70:	mov	x28, x0
  414e74:	ldp	x1, x0, [x26, #24]
  414e78:	sub	x0, x0, x1
  414e7c:	cmp	x28, x0
  414e80:	b.ls	414e90 <ferror@plt+0x120c0>  // b.plast
  414e84:	mov	x1, x28
  414e88:	mov	x0, x26
  414e8c:	bl	444840 <_obstack_newchunk@@Base>
  414e90:	mov	x2, x28
  414e94:	mov	x1, x27
  414e98:	b	413d80 <ferror@plt+0x10fb0>
  414e9c:	cmp	w0, #0x52
  414ea0:	b.eq	413d98 <ferror@plt+0x10fc8>  // b.none
  414ea4:	cmp	w0, #0x6d
  414ea8:	b.ne	414dc8 <ferror@plt+0x11ff8>  // b.any
  414eac:	ldr	w0, [x21, #16]
  414eb0:	bl	4453c4 <_obstack_memory_used@@Base+0x9c0>
  414eb4:	b	414e68 <ferror@plt+0x12098>
  414eb8:	stp	x29, x30, [sp, #-32]!
  414ebc:	mov	x2, #0x1                   	// #1
  414ec0:	mov	x29, sp
  414ec4:	stp	x19, x20, [sp, #16]
  414ec8:	mov	x19, x0
  414ecc:	ldur	x20, [x0, #36]
  414ed0:	stur	x2, [x0, #36]
  414ed4:	bl	413b7c <ferror@plt+0x10dac>
  414ed8:	mov	x0, x19
  414edc:	bl	41396c <ferror@plt+0x10b9c>
  414ee0:	stur	x20, [x19, #36]
  414ee4:	ldp	x19, x20, [sp, #16]
  414ee8:	ldp	x29, x30, [sp], #32
  414eec:	ret
  414ef0:	stp	x29, x30, [sp, #-288]!
  414ef4:	mov	x29, sp
  414ef8:	stp	x19, x20, [sp, #16]
  414efc:	mov	x19, x0
  414f00:	add	x0, sp, #0x120
  414f04:	stp	x0, x0, [sp, #40]
  414f08:	add	x0, sp, #0xf0
  414f0c:	mov	x20, x1
  414f10:	str	x0, [sp, #56]
  414f14:	mov	w0, #0xffffffd0            	// #-48
  414f18:	str	w0, [sp, #64]
  414f1c:	mov	w0, #0xffffff80            	// #-128
  414f20:	str	w0, [sp, #68]
  414f24:	str	q0, [sp, #112]
  414f28:	str	q1, [sp, #128]
  414f2c:	str	q2, [sp, #144]
  414f30:	str	q3, [sp, #160]
  414f34:	str	q4, [sp, #176]
  414f38:	str	q5, [sp, #192]
  414f3c:	str	q6, [sp, #208]
  414f40:	str	q7, [sp, #224]
  414f44:	stp	x2, x3, [sp, #240]
  414f48:	stp	x4, x5, [sp, #256]
  414f4c:	stp	x6, x7, [sp, #272]
  414f50:	bl	402cf0 <__errno_location@plt>
  414f54:	ldr	w0, [x0]
  414f58:	str	w0, [sp, #88]
  414f5c:	add	x0, sp, #0x28
  414f60:	add	x1, sp, #0x48
  414f64:	str	x20, [sp, #72]
  414f68:	str	x0, [sp, #80]
  414f6c:	mov	x0, x19
  414f70:	bl	414eb8 <ferror@plt+0x120e8>
  414f74:	ldp	x19, x20, [sp, #16]
  414f78:	ldp	x29, x30, [sp], #288
  414f7c:	ret
  414f80:	stp	x29, x30, [sp, #-288]!
  414f84:	mov	x29, sp
  414f88:	stp	x19, x20, [sp, #16]
  414f8c:	mov	x19, x0
  414f90:	add	x0, sp, #0x120
  414f94:	stp	x0, x0, [sp, #40]
  414f98:	add	x0, sp, #0xf0
  414f9c:	mov	x20, x1
  414fa0:	str	x0, [sp, #56]
  414fa4:	mov	w0, #0xffffffd0            	// #-48
  414fa8:	str	w0, [sp, #64]
  414fac:	mov	w0, #0xffffff80            	// #-128
  414fb0:	str	w0, [sp, #68]
  414fb4:	str	q0, [sp, #112]
  414fb8:	str	q1, [sp, #128]
  414fbc:	str	q2, [sp, #144]
  414fc0:	str	q3, [sp, #160]
  414fc4:	str	q4, [sp, #176]
  414fc8:	str	q5, [sp, #192]
  414fcc:	str	q6, [sp, #208]
  414fd0:	str	q7, [sp, #224]
  414fd4:	stp	x2, x3, [sp, #240]
  414fd8:	stp	x4, x5, [sp, #256]
  414fdc:	stp	x6, x7, [sp, #272]
  414fe0:	bl	402cf0 <__errno_location@plt>
  414fe4:	add	x1, sp, #0x48
  414fe8:	ldr	w0, [x0]
  414fec:	str	w0, [sp, #88]
  414ff0:	add	x0, sp, #0x28
  414ff4:	str	x20, [sp, #72]
  414ff8:	str	x0, [sp, #80]
  414ffc:	mov	x0, x19
  415000:	bl	413b7c <ferror@plt+0x10dac>
  415004:	mov	x0, x19
  415008:	bl	41396c <ferror@plt+0x10b9c>
  41500c:	ldp	x19, x20, [sp, #16]
  415010:	ldp	x29, x30, [sp], #288
  415014:	ret
  415018:	stp	x29, x30, [sp, #-112]!
  41501c:	mov	x29, sp
  415020:	stp	x19, x20, [sp, #16]
  415024:	mov	x19, x0
  415028:	stp	x21, x22, [sp, #32]
  41502c:	mov	x21, #0x0                   	// #0
  415030:	mov	w22, #0x1                   	// #1
  415034:	stp	x23, x24, [sp, #48]
  415038:	stp	x25, x26, [sp, #64]
  41503c:	bl	402700 <strlen@plt>
  415040:	mov	x20, x0
  415044:	cmp	x21, x20
  415048:	b.cs	4150e4 <ferror@plt+0x12314>  // b.hs, b.nlast
  41504c:	sub	x1, x20, x21
  415050:	add	x2, sp, #0x68
  415054:	add	x0, x19, x21
  415058:	bl	412e54 <ferror@plt+0x10084>
  41505c:	sxtw	x1, w0
  415060:	cbz	w0, 41507c <ferror@plt+0x122ac>
  415064:	ldr	w0, [sp, #104]
  415068:	cmp	w0, #0x1f
  41506c:	b.ls	41507c <ferror@plt+0x122ac>  // b.plast
  415070:	sub	w0, w0, #0x7f
  415074:	cmp	w0, #0x20
  415078:	b.hi	4150d4 <ferror@plt+0x12304>  // b.pmore
  41507c:	adrp	x1, 495000 <_obstack_memory_used@@Base+0x505fc>
  415080:	lsl	x0, x20, #2
  415084:	add	x0, x0, #0x1
  415088:	adrp	x24, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  41508c:	ldr	x1, [x1, #1328]
  415090:	add	x24, x24, #0xd5c
  415094:	mov	x23, #0x0                   	// #0
  415098:	blr	x1
  41509c:	mov	x22, x0
  4150a0:	mov	x21, x0
  4150a4:	ldrb	w2, [x19, x23]
  4150a8:	sub	w0, w2, #0x20
  4150ac:	and	w0, w0, #0xff
  4150b0:	cmp	w0, #0x5e
  4150b4:	b.hi	415104 <ferror@plt+0x12334>  // b.pmore
  4150b8:	strb	w2, [x21], #1
  4150bc:	add	x23, x23, #0x1
  4150c0:	cmp	x20, x23
  4150c4:	b.ne	4150a4 <ferror@plt+0x122d4>  // b.any
  4150c8:	mov	x19, x22
  4150cc:	strb	wzr, [x21]
  4150d0:	b	4150e8 <ferror@plt+0x12318>
  4150d4:	cmp	x1, #0x2
  4150d8:	add	x21, x21, x1
  4150dc:	csel	w22, w22, wzr, cc  // cc = lo, ul, last
  4150e0:	b	415044 <ferror@plt+0x12274>
  4150e4:	cbz	w22, 415118 <ferror@plt+0x12348>
  4150e8:	mov	x0, x19
  4150ec:	ldp	x19, x20, [sp, #16]
  4150f0:	ldp	x21, x22, [sp, #32]
  4150f4:	ldp	x23, x24, [sp, #48]
  4150f8:	ldp	x25, x26, [sp, #64]
  4150fc:	ldp	x29, x30, [sp], #112
  415100:	ret
  415104:	mov	x0, x21
  415108:	mov	x1, x24
  41510c:	add	x21, x21, #0x4
  415110:	bl	4027a0 <sprintf@plt>
  415114:	b	4150bc <ferror@plt+0x122ec>
  415118:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  41511c:	ldrb	w25, [x0, #2360]
  415120:	cbnz	w25, 4150e8 <ferror@plt+0x12318>
  415124:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  415128:	adrp	x24, 495000 <_obstack_memory_used@@Base+0x505fc>
  41512c:	ldr	x0, [x0, #2352]
  415130:	cbz	x0, 415220 <ferror@plt+0x12450>
  415134:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  415138:	add	x1, x1, #0xec3
  41513c:	bl	402be0 <iconv_open@plt>
  415140:	mov	x22, x0
  415144:	cmn	x0, #0x1
  415148:	b.eq	415220 <ferror@plt+0x12450>  // b.none
  41514c:	lsl	x21, x20, #2
  415150:	add	x26, x24, #0x530
  415154:	add	x21, x21, #0x1
  415158:	ldr	x1, [x26]
  41515c:	sub	x0, x21, #0x1
  415160:	str	x19, [sp, #80]
  415164:	stp	x20, x0, [sp, #96]
  415168:	mov	x0, x21
  41516c:	blr	x1
  415170:	mov	x23, x0
  415174:	mov	x4, #0x0                   	// #0
  415178:	mov	x0, x22
  41517c:	mov	x3, #0x0                   	// #0
  415180:	mov	x2, #0x0                   	// #0
  415184:	mov	x1, #0x0                   	// #0
  415188:	str	x23, [sp, #88]
  41518c:	bl	402ae0 <iconv@plt>
  415190:	cmn	x0, #0x1
  415194:	b.eq	415214 <ferror@plt+0x12444>  // b.none
  415198:	add	x4, sp, #0x68
  41519c:	add	x3, sp, #0x58
  4151a0:	add	x2, sp, #0x60
  4151a4:	add	x1, sp, #0x50
  4151a8:	mov	x0, x22
  4151ac:	bl	402ae0 <iconv@plt>
  4151b0:	cmn	x0, #0x1
  4151b4:	b.eq	4151c0 <ferror@plt+0x123f0>  // b.none
  4151b8:	ldr	x1, [sp, #96]
  4151bc:	cbz	x1, 4151e4 <ferror@plt+0x12414>
  4151c0:	bl	402cf0 <__errno_location@plt>
  4151c4:	ldr	w0, [x0]
  4151c8:	cmp	w0, #0x7
  4151cc:	b.ne	415214 <ferror@plt+0x12444>  // b.any
  4151d0:	ldr	x1, [x26, #8]
  4151d4:	lsl	x21, x21, #1
  4151d8:	mov	x0, x23
  4151dc:	blr	x1
  4151e0:	b	415158 <ferror@plt+0x12388>
  4151e4:	cbnz	x0, 415214 <ferror@plt+0x12444>
  4151e8:	add	x4, sp, #0x68
  4151ec:	add	x3, sp, #0x58
  4151f0:	mov	x0, x22
  4151f4:	mov	x2, #0x0                   	// #0
  4151f8:	mov	x1, #0x0                   	// #0
  4151fc:	bl	402ae0 <iconv@plt>
  415200:	cmn	x0, #0x1
  415204:	b.eq	4151c0 <ferror@plt+0x123f0>  // b.none
  415208:	ldr	x0, [sp, #88]
  41520c:	mov	w25, #0x1                   	// #1
  415210:	strb	wzr, [x0]
  415214:	mov	x0, x22
  415218:	bl	402760 <iconv_close@plt>
  41521c:	cbnz	w25, 415298 <ferror@plt+0x124c8>
  415220:	ldr	x1, [x24, #1328]
  415224:	mov	x0, #0xa                   	// #10
  415228:	adrp	x24, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  41522c:	add	x24, x24, #0xd62
  415230:	mul	x0, x20, x0
  415234:	mov	x22, #0x0                   	// #0
  415238:	add	x0, x0, #0x1
  41523c:	blr	x1
  415240:	mov	x23, x0
  415244:	mov	x21, x0
  415248:	cmp	x22, x20
  41524c:	b.cs	415294 <ferror@plt+0x124c4>  // b.hs, b.nlast
  415250:	add	x2, sp, #0x68
  415254:	sub	x1, x20, x22
  415258:	add	x0, x19, x22
  41525c:	bl	412e54 <ferror@plt+0x10084>
  415260:	sxtw	x25, w0
  415264:	cmp	w0, #0x1
  415268:	b.ne	41527c <ferror@plt+0x124ac>  // b.any
  41526c:	ldrb	w0, [x19, x22]
  415270:	strb	w0, [x21], #1
  415274:	add	x22, x22, x25
  415278:	b	415248 <ferror@plt+0x12478>
  41527c:	ldr	w2, [sp, #104]
  415280:	mov	x1, x24
  415284:	mov	x0, x21
  415288:	add	x21, x21, #0xa
  41528c:	bl	4027a0 <sprintf@plt>
  415290:	b	415274 <ferror@plt+0x124a4>
  415294:	strb	wzr, [x21]
  415298:	mov	x19, x23
  41529c:	b	4150e8 <ferror@plt+0x12318>
  4152a0:	stp	x29, x30, [sp, #-32]!
  4152a4:	mov	x2, x1
  4152a8:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4152ac:	mov	x29, sp
  4152b0:	str	x19, [sp, #16]
  4152b4:	mov	x19, x0
  4152b8:	ldr	x0, [x0, #8]
  4152bc:	add	x1, x1, #0x1a9
  4152c0:	add	x0, x0, #0xcc
  4152c4:	bl	4027a0 <sprintf@plt>
  4152c8:	mov	x0, x19
  4152cc:	ldr	x1, [x19, #8]
  4152d0:	ldr	x19, [sp, #16]
  4152d4:	add	x1, x1, #0xcc
  4152d8:	ldp	x29, x30, [sp], #32
  4152dc:	b	413938 <ferror@plt+0x10b68>
  4152e0:	stp	x29, x30, [sp, #-32]!
  4152e4:	mov	x29, sp
  4152e8:	stp	x19, x20, [sp, #16]
  4152ec:	mov	x20, x1
  4152f0:	ldrh	w1, [x1, #2]
  4152f4:	cbnz	w1, 415308 <ferror@plt+0x12538>
  4152f8:	ldrh	w1, [x20]
  4152fc:	ldp	x19, x20, [sp, #16]
  415300:	ldp	x29, x30, [sp], #32
  415304:	b	4152a0 <ferror@plt+0x124d0>
  415308:	mov	x19, x0
  41530c:	mov	w1, #0x5b                  	// #91
  415310:	bl	41358c <ferror@plt+0x107bc>
  415314:	ldrh	w1, [x20]
  415318:	mov	x0, x19
  41531c:	bl	4152a0 <ferror@plt+0x124d0>
  415320:	mov	x0, x19
  415324:	mov	w1, #0x2c                  	// #44
  415328:	bl	41358c <ferror@plt+0x107bc>
  41532c:	ldrh	w1, [x20, #2]
  415330:	mov	x0, x19
  415334:	bl	4152a0 <ferror@plt+0x124d0>
  415338:	mov	x0, x19
  41533c:	mov	w1, #0x5d                  	// #93
  415340:	ldp	x19, x20, [sp, #16]
  415344:	ldp	x29, x30, [sp], #32
  415348:	b	41358c <ferror@plt+0x107bc>
  41534c:	stp	x29, x30, [sp, #-32]!
  415350:	mov	x29, sp
  415354:	stp	x19, x20, [sp, #16]
  415358:	mov	x20, x1
  41535c:	ldr	x1, [x1, #8]
  415360:	cbnz	x1, 415374 <ferror@plt+0x125a4>
  415364:	ldr	x1, [x20]
  415368:	ldp	x19, x20, [sp, #16]
  41536c:	ldp	x29, x30, [sp], #32
  415370:	b	4152a0 <ferror@plt+0x124d0>
  415374:	mov	x19, x0
  415378:	mov	w1, #0x5b                  	// #91
  41537c:	bl	41358c <ferror@plt+0x107bc>
  415380:	ldr	x1, [x20]
  415384:	mov	x0, x19
  415388:	bl	4152a0 <ferror@plt+0x124d0>
  41538c:	mov	x0, x19
  415390:	mov	w1, #0x2c                  	// #44
  415394:	bl	41358c <ferror@plt+0x107bc>
  415398:	ldr	x1, [x20, #8]
  41539c:	mov	x0, x19
  4153a0:	bl	4152a0 <ferror@plt+0x124d0>
  4153a4:	mov	x0, x19
  4153a8:	mov	w1, #0x5d                  	// #93
  4153ac:	ldp	x19, x20, [sp, #16]
  4153b0:	ldp	x29, x30, [sp], #32
  4153b4:	b	41358c <ferror@plt+0x107bc>
  4153b8:	stp	x29, x30, [sp, #-32]!
  4153bc:	mov	x29, sp
  4153c0:	stp	x19, x20, [sp, #16]
  4153c4:	mov	x20, x1
  4153c8:	ldr	x1, [x1, #8]
  4153cc:	cbnz	x1, 4153e0 <ferror@plt+0x12610>
  4153d0:	ldr	x1, [x20]
  4153d4:	ldp	x19, x20, [sp, #16]
  4153d8:	ldp	x29, x30, [sp], #32
  4153dc:	b	4152a0 <ferror@plt+0x124d0>
  4153e0:	mov	x19, x0
  4153e4:	mov	w1, #0x5b                  	// #91
  4153e8:	bl	41358c <ferror@plt+0x107bc>
  4153ec:	ldr	x1, [x20]
  4153f0:	mov	x0, x19
  4153f4:	bl	4152a0 <ferror@plt+0x124d0>
  4153f8:	mov	x0, x19
  4153fc:	mov	w1, #0x2c                  	// #44
  415400:	bl	41358c <ferror@plt+0x107bc>
  415404:	ldr	x1, [x20, #8]
  415408:	mov	x0, x19
  41540c:	bl	4152a0 <ferror@plt+0x124d0>
  415410:	mov	x0, x19
  415414:	mov	w1, #0x5d                  	// #93
  415418:	ldp	x19, x20, [sp, #16]
  41541c:	ldp	x29, x30, [sp], #32
  415420:	b	41358c <ferror@plt+0x107bc>
  415424:	stp	x29, x30, [sp, #-64]!
  415428:	mov	w0, #0x0                   	// #0
  41542c:	mov	x29, sp
  415430:	stp	x19, x20, [sp, #16]
  415434:	adrp	x19, 45e000 <_obstack_memory_used@@Base+0x195fc>
  415438:	add	x19, x19, #0xaff
  41543c:	mov	x1, x19
  415440:	stp	x21, x22, [sp, #32]
  415444:	adrp	x20, 495000 <_obstack_memory_used@@Base+0x505fc>
  415448:	stp	x23, x24, [sp, #48]
  41544c:	bl	402dc0 <setlocale@plt>
  415450:	mov	x1, x19
  415454:	mov	w0, #0x5                   	// #5
  415458:	bl	402dc0 <setlocale@plt>
  41545c:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  415460:	add	x1, x1, #0xdd0
  415464:	adrp	x19, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  415468:	add	x19, x19, #0xde2
  41546c:	mov	x0, x19
  415470:	bl	4028e0 <bindtextdomain@plt>
  415474:	mov	x0, x19
  415478:	adrp	x24, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  41547c:	adrp	x19, 495000 <_obstack_memory_used@@Base+0x505fc>
  415480:	bl	402ab0 <textdomain@plt>
  415484:	add	x24, x24, #0xde6
  415488:	add	x22, x19, #0x540
  41548c:	mov	x0, x24
  415490:	adrp	x23, 467000 <_obstack_memory_used@@Base+0x225fc>
  415494:	bl	402d80 <gettext@plt>
  415498:	add	x23, x23, #0x766
  41549c:	str	x0, [x19, #1344]
  4154a0:	mov	x0, x23
  4154a4:	bl	402d80 <gettext@plt>
  4154a8:	str	x0, [x22, #8]
  4154ac:	mov	w0, #0xe                   	// #14
  4154b0:	bl	402860 <nl_langinfo@plt>
  4154b4:	str	x0, [x20, #2352]
  4154b8:	cbz	x0, 4154f0 <ferror@plt+0x12720>
  4154bc:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4154c0:	mov	x21, x0
  4154c4:	add	x1, x1, #0xde8
  4154c8:	bl	402970 <strcasecmp@plt>
  4154cc:	cbz	w0, 4154e4 <ferror@plt+0x12714>
  4154d0:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4154d4:	mov	x0, x21
  4154d8:	add	x1, x1, #0xdee
  4154dc:	bl	402970 <strcasecmp@plt>
  4154e0:	cbnz	w0, 4154f0 <ferror@plt+0x12720>
  4154e4:	add	x0, x20, #0x930
  4154e8:	mov	w1, #0x1                   	// #1
  4154ec:	strb	w1, [x0, #8]
  4154f0:	ldr	x0, [x19, #1344]
  4154f4:	mov	x1, x24
  4154f8:	bl	402ad0 <strcmp@plt>
  4154fc:	cbnz	w0, 415538 <ferror@plt+0x12768>
  415500:	ldr	x0, [x22, #8]
  415504:	mov	x1, x23
  415508:	bl	402ad0 <strcmp@plt>
  41550c:	cbnz	w0, 415538 <ferror@plt+0x12768>
  415510:	add	x20, x20, #0x930
  415514:	str	x23, [x19, #1344]
  415518:	ldrb	w0, [x20, #8]
  41551c:	cbz	w0, 415538 <ferror@plt+0x12768>
  415520:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  415524:	add	x0, x0, #0xdf3
  415528:	str	x0, [x19, #1344]
  41552c:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  415530:	add	x0, x0, #0xdf7
  415534:	str	x0, [x22, #8]
  415538:	ldp	x19, x20, [sp, #16]
  41553c:	ldp	x21, x22, [sp, #32]
  415540:	ldp	x23, x24, [sp, #48]
  415544:	ldp	x29, x30, [sp], #64
  415548:	ret
  41554c:	stp	x29, x30, [sp, #-48]!
  415550:	mov	x2, #0x0                   	// #0
  415554:	mov	x1, x0
  415558:	mov	x29, sp
  41555c:	stp	x19, x20, [sp, #16]
  415560:	mov	x20, x0
  415564:	mov	x0, #0x0                   	// #0
  415568:	str	x21, [sp, #32]
  41556c:	bl	402720 <mbstowcs@plt>
  415570:	add	x2, x0, #0x1
  415574:	mov	x19, x0
  415578:	mov	x1, x20
  41557c:	lsl	x3, x2, #2
  415580:	add	x3, x3, #0xf
  415584:	and	x3, x3, #0xfffffffffffffff0
  415588:	sub	sp, sp, x3
  41558c:	mov	x21, sp
  415590:	mov	x0, x21
  415594:	bl	402720 <mbstowcs@plt>
  415598:	mov	x1, x19
  41559c:	mov	x0, x21
  4155a0:	bl	4028c0 <wcswidth@plt>
  4155a4:	mov	sp, x29
  4155a8:	sxtw	x0, w0
  4155ac:	ldp	x19, x20, [sp, #16]
  4155b0:	ldr	x21, [sp, #32]
  4155b4:	ldp	x29, x30, [sp], #48
  4155b8:	ret
  4155bc:	stp	x29, x30, [sp, #-32]!
  4155c0:	mov	x29, sp
  4155c4:	stp	x19, x20, [sp, #16]
  4155c8:	bl	41554c <ferror@plt+0x1277c>
  4155cc:	mov	x19, x0
  4155d0:	add	x0, x0, #0x1
  4155d4:	bl	44526c <_obstack_memory_used@@Base+0x868>
  4155d8:	mov	x20, x0
  4155dc:	mov	x2, x19
  4155e0:	mov	w1, #0x20                  	// #32
  4155e4:	bl	402930 <memset@plt>
  4155e8:	mov	x0, x20
  4155ec:	strb	wzr, [x20, x19]
  4155f0:	ldp	x19, x20, [sp, #16]
  4155f4:	ldp	x29, x30, [sp], #32
  4155f8:	ret
  4155fc:	stp	x29, x30, [sp, #-32]!
  415600:	tst	w0, #0xff
  415604:	mov	x29, sp
  415608:	str	x19, [sp, #16]
  41560c:	mov	x19, x1
  415610:	b.ne	41563c <ferror@plt+0x1286c>  // b.any
  415614:	mov	x0, x19
  415618:	mov	x1, #0x10                  	// #16
  41561c:	bl	4452a0 <_obstack_memory_used@@Base+0x89c>
  415620:	mov	x1, #0x0                   	// #0
  415624:	cmp	x19, x1
  415628:	b.eq	41566c <ferror@plt+0x1289c>  // b.none
  41562c:	lsl	x2, x1, #4
  415630:	add	x1, x1, #0x1
  415634:	str	xzr, [x0, x2]
  415638:	b	415624 <ferror@plt+0x12854>
  41563c:	lsl	x0, x19, #4
  415640:	mov	x3, #0x0                   	// #0
  415644:	mov	x2, #0x0                   	// #0
  415648:	mov	x1, #0x0                   	// #0
  41564c:	bl	40c0a8 <ferror@plt+0x92d8>
  415650:	cbnz	x0, 415620 <ferror@plt+0x12850>
  415654:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  415658:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  41565c:	add	x2, x2, #0x366
  415660:	add	x0, x0, #0x374
  415664:	mov	w1, #0x2b5                 	// #693
  415668:	bl	402de0 <ferror@plt+0x10>
  41566c:	ldr	x19, [sp, #16]
  415670:	ldp	x29, x30, [sp], #32
  415674:	ret
  415678:	stp	x29, x30, [sp, #-32]!
  41567c:	tst	w0, #0xff
  415680:	mov	x29, sp
  415684:	str	x19, [sp, #16]
  415688:	mov	x19, x1
  41568c:	b.ne	4156bc <ferror@plt+0x128ec>  // b.any
  415690:	mov	x0, x19
  415694:	mov	x1, #0x18                  	// #24
  415698:	bl	4452a0 <_obstack_memory_used@@Base+0x89c>
  41569c:	mov	x1, #0x0                   	// #0
  4156a0:	mov	x3, #0x18                  	// #24
  4156a4:	cmp	x19, x1
  4156a8:	b.eq	4156f0 <ferror@plt+0x12920>  // b.none
  4156ac:	mul	x2, x1, x3
  4156b0:	add	x1, x1, #0x1
  4156b4:	str	xzr, [x0, x2]
  4156b8:	b	4156a4 <ferror@plt+0x128d4>
  4156bc:	mov	x0, #0x18                  	// #24
  4156c0:	mov	x3, #0x0                   	// #0
  4156c4:	mov	x2, #0x0                   	// #0
  4156c8:	mov	x1, #0x0                   	// #0
  4156cc:	mul	x0, x19, x0
  4156d0:	bl	40c0a8 <ferror@plt+0x92d8>
  4156d4:	cbnz	x0, 41569c <ferror@plt+0x128cc>
  4156d8:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4156dc:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  4156e0:	add	x2, x2, #0x366
  4156e4:	add	x0, x0, #0x374
  4156e8:	mov	w1, #0x2b5                 	// #693
  4156ec:	bl	402de0 <ferror@plt+0x10>
  4156f0:	ldr	x19, [sp, #16]
  4156f4:	ldp	x29, x30, [sp], #32
  4156f8:	ret
  4156fc:	cmp	w0, w1
  415700:	b.cc	415724 <ferror@plt+0x12954>  // b.lo, b.ul, b.last
  415704:	stp	x29, x30, [sp, #-16]!
  415708:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  41570c:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  415710:	mov	x29, sp
  415714:	add	x2, x2, #0xdfb
  415718:	add	x0, x0, #0xe12
  41571c:	mov	w1, #0xa2                  	// #162
  415720:	bl	402de0 <ferror@plt+0x10>
  415724:	cbz	w0, 415748 <ferror@plt+0x12978>
  415728:	add	w2, w0, w0, lsl #1
  41572c:	lsl	w3, w0, #1
  415730:	cmp	w0, #0xf
  415734:	lsr	w2, w2, #1
  415738:	csel	w2, w2, w3, hi  // hi = pmore
  41573c:	cmp	w2, w1
  415740:	csel	w0, w2, w1, cs  // cs = hs, nlast
  415744:	ret
  415748:	mov	w2, #0x4                   	// #4
  41574c:	b	41573c <ferror@plt+0x1296c>
  415750:	mov	x2, #0x0                   	// #0
  415754:	mov	w1, #0x3                   	// #3
  415758:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  41575c:	add	x0, x0, #0x940
  415760:	b	4165d8 <ferror@plt+0x13808>
  415764:	stp	x29, x30, [sp, #-80]!
  415768:	mov	x29, sp
  41576c:	stp	x19, x20, [sp, #16]
  415770:	adrp	x20, 495000 <_obstack_memory_used@@Base+0x505fc>
  415774:	add	x20, x20, #0x940
  415778:	mov	x19, x1
  41577c:	stp	x21, x22, [sp, #32]
  415780:	mov	x22, x3
  415784:	ldr	x0, [x20, #48]
  415788:	stp	x23, x24, [sp, #48]
  41578c:	mov	x23, x2
  415790:	and	w24, w4, #0xff
  415794:	str	x1, [sp, #72]
  415798:	add	x1, sp, #0x48
  41579c:	bl	415e04 <ferror@plt+0x13034>
  4157a0:	cbnz	x0, 4157cc <ferror@plt+0x129fc>
  4157a4:	mov	x0, #0x20                  	// #32
  4157a8:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  4157ac:	mov	x2, x0
  4157b0:	mov	x0, #0x300000000           	// #12884901888
  4157b4:	mov	x1, x19
  4157b8:	stp	xzr, xzr, [x2]
  4157bc:	str	x0, [x2, #16]
  4157c0:	mov	x0, x20
  4157c4:	strb	wzr, [x2, #24]
  4157c8:	bl	416798 <ferror@plt+0x139c8>
  4157cc:	ldr	x0, [x20, #48]
  4157d0:	add	x1, sp, #0x48
  4157d4:	str	x19, [sp, #72]
  4157d8:	bl	415e04 <ferror@plt+0x13034>
  4157dc:	cbz	x0, 415868 <ferror@plt+0x12a98>
  4157e0:	ldr	x21, [x0]
  4157e4:	ldr	x2, [x21]
  4157e8:	cmp	x23, x2
  4157ec:	b.ls	415808 <ferror@plt+0x12a38>  // b.plast
  4157f0:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4157f4:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4157f8:	add	x2, x2, #0xe22
  4157fc:	add	x0, x0, #0xe33
  415800:	mov	w1, #0x97                  	// #151
  415804:	bl	402de0 <ferror@plt+0x10>
  415808:	sub	x2, x2, x23
  41580c:	str	x2, [x21]
  415810:	cbz	w24, 415848 <ferror@plt+0x12a78>
  415814:	ldr	x20, [x20, #48]
  415818:	ubfx	x2, x19, #3, #32
  41581c:	add	x1, sp, #0x48
  415820:	mov	w3, #0x0                   	// #0
  415824:	mov	x0, x20
  415828:	str	x19, [sp, #72]
  41582c:	bl	416200 <ferror@plt+0x13430>
  415830:	cbz	x0, 415848 <ferror@plt+0x12a78>
  415834:	mov	x1, #0x1                   	// #1
  415838:	str	x1, [x0]
  41583c:	ldr	x0, [x20, #24]
  415840:	add	x0, x0, x1
  415844:	str	x0, [x20, #24]
  415848:	ldr	x3, [x21, #32]
  41584c:	ldp	x19, x20, [sp, #16]
  415850:	sub	x22, x3, x22
  415854:	ldp	x23, x24, [sp, #48]
  415858:	str	x22, [x21, #32]
  41585c:	ldp	x21, x22, [sp, #32]
  415860:	ldp	x29, x30, [sp], #80
  415864:	ret
  415868:	ldr	x0, [x0, #32]
  41586c:	brk	#0x3e8
  415870:	stp	x29, x30, [sp, #-80]!
  415874:	mov	x0, #0x20                  	// #32
  415878:	mov	x29, sp
  41587c:	stp	x19, x20, [sp, #16]
  415880:	mul	x20, x2, x3
  415884:	mov	x19, x2
  415888:	stp	x21, x22, [sp, #32]
  41588c:	mov	x21, x3
  415890:	adrp	x22, 495000 <_obstack_memory_used@@Base+0x505fc>
  415894:	str	x23, [sp, #48]
  415898:	mov	x23, x1
  41589c:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  4158a0:	mov	x2, x0
  4158a4:	stp	xzr, xzr, [x0]
  4158a8:	add	x22, x22, #0x940
  4158ac:	mov	x0, #0x300000000           	// #12884901888
  4158b0:	str	x0, [x2, #16]
  4158b4:	mov	x1, x23
  4158b8:	strb	wzr, [x2, #24]
  4158bc:	mov	x0, x22
  4158c0:	bl	416798 <ferror@plt+0x139c8>
  4158c4:	str	x23, [sp, #72]
  4158c8:	ldr	x0, [x22, #48]
  4158cc:	add	x1, sp, #0x48
  4158d0:	bl	415e04 <ferror@plt+0x13034>
  4158d4:	cbz	x0, 41592c <ferror@plt+0x12b5c>
  4158d8:	ldr	x0, [x0]
  4158dc:	ldp	x1, x2, [x0]
  4158e0:	add	x2, x2, #0x1
  4158e4:	add	x1, x20, x1
  4158e8:	stp	x1, x2, [x0]
  4158ec:	ldr	x2, [x0, #16]
  4158f0:	cmp	x1, x2
  4158f4:	b.ls	4158fc <ferror@plt+0x12b2c>  // b.plast
  4158f8:	str	x1, [x0, #16]
  4158fc:	ldp	x2, x1, [x0, #32]
  415900:	str	x21, [x0, #48]
  415904:	add	x2, x19, x2
  415908:	str	x2, [x0, #32]
  41590c:	cmp	x2, x1
  415910:	b.ls	415918 <ferror@plt+0x12b48>  // b.plast
  415914:	str	x2, [x0, #40]
  415918:	ldp	x19, x20, [sp, #16]
  41591c:	ldp	x21, x22, [sp, #32]
  415920:	ldr	x23, [sp, #48]
  415924:	ldp	x29, x30, [sp], #80
  415928:	ret
  41592c:	str	xzr, [x0, #48]
  415930:	brk	#0x3e8
  415934:	ldr	x2, [x0, #8]
  415938:	ldr	x0, [x1, #8]
  41593c:	ldr	x3, [x2]
  415940:	ldr	x1, [x0]
  415944:	cmp	x3, x1
  415948:	b.ne	41596c <ferror@plt+0x12b9c>  // b.any
  41594c:	ldr	x1, [x0, #16]
  415950:	ldr	x3, [x2, #16]
  415954:	cmp	x3, x1
  415958:	b.ne	41596c <ferror@plt+0x12b9c>  // b.any
  41595c:	ldr	x0, [x0, #8]
  415960:	ldr	x1, [x2, #8]
  415964:	cmp	x1, x0
  415968:	b.eq	415980 <ferror@plt+0x12bb0>  // b.none
  41596c:	cset	w1, cc  // cc = lo, ul, last
  415970:	mov	w0, #0x1                   	// #1
  415974:	cmp	w1, #0x0
  415978:	cneg	w0, w0, eq  // eq = none
  41597c:	ret
  415980:	mov	w0, #0x0                   	// #0
  415984:	b	41597c <ferror@plt+0x12bac>
  415988:	stp	x29, x30, [sp, #-32]!
  41598c:	mov	x29, sp
  415990:	stp	x19, x20, [sp, #16]
  415994:	mov	x19, x0
  415998:	adrp	x20, 495000 <_obstack_memory_used@@Base+0x505fc>
  41599c:	sub	x19, x19, #0x1
  4159a0:	ldr	x1, [x20, #1440]
  4159a4:	cmn	x19, #0x1
  4159a8:	b.eq	4159b8 <ferror@plt+0x12be8>  // b.none
  4159ac:	mov	w0, #0x2d                  	// #45
  4159b0:	bl	4027d0 <fputc@plt>
  4159b4:	b	41599c <ferror@plt+0x12bcc>
  4159b8:	ldp	x19, x20, [sp, #16]
  4159bc:	mov	w0, #0xa                   	// #10
  4159c0:	ldp	x29, x30, [sp], #32
  4159c4:	b	4027d0 <fputc@plt>
  4159c8:	mov	x12, #0x1070                	// #4208
  4159cc:	sub	sp, sp, x12
  4159d0:	stp	x29, x30, [sp, #48]
  4159d4:	add	x29, sp, #0x30
  4159d8:	stp	x19, x20, [sp, #64]
  4159dc:	mov	x19, x0
  4159e0:	mov	x20, x1
  4159e4:	stp	x21, x22, [sp, #80]
  4159e8:	mov	x21, x2
  4159ec:	ldr	x22, [x1]
  4159f0:	str	x23, [sp, #96]
  4159f4:	adrp	x23, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4159f8:	add	x23, x23, #0xe99
  4159fc:	mov	x1, x23
  415a00:	mov	x0, x22
  415a04:	bl	402c80 <strstr@plt>
  415a08:	cbz	x0, 415a14 <ferror@plt+0x12c44>
  415a0c:	add	x22, x0, #0x4
  415a10:	b	4159fc <ferror@plt+0x12c2c>
  415a14:	ldr	w3, [x20, #16]
  415a18:	mov	x2, x22
  415a1c:	ldr	x4, [x20, #8]
  415a20:	add	x0, sp, #0x70
  415a24:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  415a28:	add	x1, x1, #0xe9e
  415a2c:	bl	4027a0 <sprintf@plt>
  415a30:	strb	wzr, [sp, #160]
  415a34:	ldr	x1, [x19]
  415a38:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  415a3c:	mov	x2, #0x27ff                	// #10239
  415a40:	ldr	x0, [x0, #1440]
  415a44:	cmp	x1, x2
  415a48:	ldr	x3, [x19, #48]
  415a4c:	b.ls	415b54 <ferror@plt+0x12d84>  // b.plast
  415a50:	mov	w2, #0x9fffff              	// #10485759
  415a54:	cmp	x1, x2
  415a58:	b.hi	415b48 <ferror@plt+0x12d78>  // b.pmore
  415a5c:	lsr	x4, x1, #10
  415a60:	mov	w5, #0x6b                  	// #107
  415a64:	ucvtf	d0, x1
  415a68:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  415a6c:	ldr	d2, [x21]
  415a70:	ldr	d1, [x1, #3928]
  415a74:	mov	x1, #0x27ff                	// #10239
  415a78:	ldr	x6, [x19, #16]
  415a7c:	ucvtf	d2, d2
  415a80:	fmul	d0, d0, d1
  415a84:	cmp	x6, x1
  415a88:	fdiv	d0, d0, d2
  415a8c:	fmov	d2, d1
  415a90:	b.ls	415b6c <ferror@plt+0x12d9c>  // b.plast
  415a94:	mov	w1, #0x9fffff              	// #10485759
  415a98:	cmp	x6, x1
  415a9c:	b.hi	415b60 <ferror@plt+0x12d90>  // b.pmore
  415aa0:	lsr	x6, x6, #10
  415aa4:	mov	w7, #0x6b                  	// #107
  415aa8:	ldr	d3, [x19, #8]
  415aac:	mov	x2, #0x27ff                	// #10239
  415ab0:	ldr	x1, [x19, #32]
  415ab4:	ucvtf	d1, d3
  415ab8:	cmp	x1, x2
  415abc:	fmul	d1, d1, d2
  415ac0:	ldr	d2, [x21, #8]
  415ac4:	ucvtf	d2, d2
  415ac8:	fdiv	d1, d1, d2
  415acc:	b.ls	415b80 <ferror@plt+0x12db0>  // b.plast
  415ad0:	mov	w2, #0x9fffff              	// #10485759
  415ad4:	cmp	x1, x2
  415ad8:	b.hi	415b74 <ferror@plt+0x12da4>  // b.pmore
  415adc:	lsr	x1, x1, #10
  415ae0:	mov	w8, #0x6b                  	// #107
  415ae4:	ldr	x2, [x19, #40]
  415ae8:	mov	x9, #0x27ff                	// #10239
  415aec:	cmp	x2, x9
  415af0:	b.ls	415b94 <ferror@plt+0x12dc4>  // b.plast
  415af4:	mov	w9, #0x9fffff              	// #10485759
  415af8:	cmp	x2, x9
  415afc:	b.hi	415b88 <ferror@plt+0x12db8>  // b.pmore
  415b00:	lsr	x2, x2, #10
  415b04:	mov	w9, #0x6b                  	// #107
  415b08:	str	d3, [sp]
  415b0c:	str	x1, [sp, #8]
  415b10:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  415b14:	str	w8, [sp, #16]
  415b18:	add	x1, x1, #0xea9
  415b1c:	str	x2, [sp, #24]
  415b20:	add	x2, sp, #0x70
  415b24:	str	w9, [sp, #32]
  415b28:	bl	402d90 <fprintf@plt>
  415b2c:	mov	x12, #0x1070                	// #4208
  415b30:	ldp	x29, x30, [sp, #48]
  415b34:	ldp	x19, x20, [sp, #64]
  415b38:	ldp	x21, x22, [sp, #80]
  415b3c:	ldr	x23, [sp, #96]
  415b40:	add	sp, sp, x12
  415b44:	ret
  415b48:	lsr	x4, x1, #20
  415b4c:	mov	w5, #0x4d                  	// #77
  415b50:	b	415a64 <ferror@plt+0x12c94>
  415b54:	mov	x4, x1
  415b58:	mov	w5, #0x20                  	// #32
  415b5c:	b	415a64 <ferror@plt+0x12c94>
  415b60:	lsr	x6, x6, #20
  415b64:	mov	w7, #0x4d                  	// #77
  415b68:	b	415aa8 <ferror@plt+0x12cd8>
  415b6c:	mov	w7, #0x20                  	// #32
  415b70:	b	415aa8 <ferror@plt+0x12cd8>
  415b74:	lsr	x1, x1, #20
  415b78:	mov	w8, #0x4d                  	// #77
  415b7c:	b	415ae4 <ferror@plt+0x12d14>
  415b80:	mov	w8, #0x20                  	// #32
  415b84:	b	415ae4 <ferror@plt+0x12d14>
  415b88:	lsr	x2, x2, #20
  415b8c:	mov	w9, #0x4d                  	// #77
  415b90:	b	415b08 <ferror@plt+0x12d38>
  415b94:	mov	w9, #0x20                  	// #32
  415b98:	b	415b08 <ferror@plt+0x12d38>
  415b9c:	sub	sp, sp, #0x20
  415ba0:	mov	x1, x0
  415ba4:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  415ba8:	mov	x2, #0x27ff                	// #10239
  415bac:	stp	x29, x30, [sp, #16]
  415bb0:	add	x29, sp, #0x10
  415bb4:	ldr	x3, [x1]
  415bb8:	ldr	x0, [x0, #1440]
  415bbc:	cmp	x3, x2
  415bc0:	b.ls	415c50 <ferror@plt+0x12e80>  // b.plast
  415bc4:	mov	w2, #0x9fffff              	// #10485759
  415bc8:	cmp	x3, x2
  415bcc:	b.hi	415c44 <ferror@plt+0x12e74>  // b.pmore
  415bd0:	lsr	x3, x3, #10
  415bd4:	mov	w4, #0x6b                  	// #107
  415bd8:	ldr	x5, [x1, #8]
  415bdc:	mov	x2, #0x27ff                	// #10239
  415be0:	cmp	x5, x2
  415be4:	b.ls	415c64 <ferror@plt+0x12e94>  // b.plast
  415be8:	mov	w2, #0x9fffff              	// #10485759
  415bec:	cmp	x5, x2
  415bf0:	b.hi	415c58 <ferror@plt+0x12e88>  // b.pmore
  415bf4:	lsr	x5, x5, #10
  415bf8:	mov	w6, #0x6b                  	// #107
  415bfc:	ldr	x7, [x1, #32]
  415c00:	mov	x1, #0x27ff                	// #10239
  415c04:	cmp	x7, x1
  415c08:	b.ls	415c78 <ferror@plt+0x12ea8>  // b.plast
  415c0c:	mov	w1, #0x9fffff              	// #10485759
  415c10:	cmp	x7, x1
  415c14:	b.hi	415c6c <ferror@plt+0x12e9c>  // b.pmore
  415c18:	lsr	x7, x7, #10
  415c1c:	mov	w1, #0x6b                  	// #107
  415c20:	str	w1, [sp]
  415c24:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  415c28:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  415c2c:	add	x2, x2, #0xee6
  415c30:	add	x1, x1, #0xeec
  415c34:	bl	402d90 <fprintf@plt>
  415c38:	ldp	x29, x30, [sp, #16]
  415c3c:	add	sp, sp, #0x20
  415c40:	ret
  415c44:	lsr	x3, x3, #20
  415c48:	mov	w4, #0x4d                  	// #77
  415c4c:	b	415bd8 <ferror@plt+0x12e08>
  415c50:	mov	w4, #0x20                  	// #32
  415c54:	b	415bd8 <ferror@plt+0x12e08>
  415c58:	lsr	x5, x5, #20
  415c5c:	mov	w6, #0x4d                  	// #77
  415c60:	b	415bfc <ferror@plt+0x12e2c>
  415c64:	mov	w6, #0x20                  	// #32
  415c68:	b	415bfc <ferror@plt+0x12e2c>
  415c6c:	lsr	x7, x7, #20
  415c70:	mov	w1, #0x4d                  	// #77
  415c74:	b	415c20 <ferror@plt+0x12e50>
  415c78:	mov	w1, #0x20                  	// #32
  415c7c:	b	415c20 <ferror@plt+0x12e50>
  415c80:	sub	sp, sp, #0x20
  415c84:	mov	x2, x0
  415c88:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  415c8c:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  415c90:	add	x1, x1, #0xf4a
  415c94:	adrp	x7, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  415c98:	stp	x29, x30, [sp, #16]
  415c9c:	add	x29, sp, #0x10
  415ca0:	add	x7, x7, #0xf05
  415ca4:	ldr	x0, [x0, #1440]
  415ca8:	str	x1, [sp]
  415cac:	adrp	x6, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  415cb0:	adrp	x5, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  415cb4:	add	x6, x6, #0xf10
  415cb8:	add	x5, x5, #0xf16
  415cbc:	adrp	x4, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  415cc0:	adrp	x3, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  415cc4:	add	x4, x4, #0xf1b
  415cc8:	add	x3, x3, #0xf20
  415ccc:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  415cd0:	add	x1, x1, #0xf2a
  415cd4:	bl	402d90 <fprintf@plt>
  415cd8:	ldp	x29, x30, [sp, #16]
  415cdc:	add	sp, sp, #0x20
  415ce0:	ret
  415ce4:	stp	x29, x30, [sp, #-64]!
  415ce8:	mov	x29, sp
  415cec:	stp	x19, x20, [sp, #16]
  415cf0:	mov	x20, x0
  415cf4:	mov	x0, #0x30                  	// #48
  415cf8:	stp	x21, x22, [sp, #32]
  415cfc:	adrp	x21, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  415d00:	add	x21, x21, #0x1b0
  415d04:	str	x23, [sp, #48]
  415d08:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  415d0c:	mov	x19, x0
  415d10:	strb	wzr, [x0, #44]
  415d14:	mov	x0, #0xd                   	// #13
  415d18:	stp	xzr, xzr, [x19, #16]
  415d1c:	str	xzr, [x19, #32]
  415d20:	bl	40bcbc <ferror@plt+0x8eec>
  415d24:	mov	w22, w0
  415d28:	ubfiz	x0, x22, #4, #32
  415d2c:	ldr	w23, [x21, x0]
  415d30:	mov	w0, #0x0                   	// #0
  415d34:	mov	x1, x23
  415d38:	bl	4155fc <ferror@plt+0x1282c>
  415d3c:	stp	x0, x23, [x19]
  415d40:	mov	x0, #0x30                  	// #48
  415d44:	str	w22, [x19, #40]
  415d48:	str	x19, [x20, #40]
  415d4c:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  415d50:	mov	x19, x0
  415d54:	strb	wzr, [x0, #44]
  415d58:	mov	x0, #0xd                   	// #13
  415d5c:	stp	xzr, xzr, [x19, #16]
  415d60:	str	xzr, [x19, #32]
  415d64:	bl	40bcbc <ferror@plt+0x8eec>
  415d68:	mov	w22, w0
  415d6c:	ubfiz	x0, x22, #4, #32
  415d70:	ldr	w23, [x21, x0]
  415d74:	mov	w0, #0x0                   	// #0
  415d78:	mov	x1, x23
  415d7c:	bl	415678 <ferror@plt+0x128a8>
  415d80:	stp	x0, x23, [x19]
  415d84:	mov	x0, #0x30                  	// #48
  415d88:	str	w22, [x19, #40]
  415d8c:	str	x19, [x20, #48]
  415d90:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  415d94:	mov	x19, x0
  415d98:	strb	wzr, [x0, #44]
  415d9c:	mov	x0, #0xd                   	// #13
  415da0:	stp	xzr, xzr, [x19, #16]
  415da4:	str	xzr, [x19, #32]
  415da8:	bl	40bcbc <ferror@plt+0x8eec>
  415dac:	mov	w22, w0
  415db0:	mov	x1, #0x18                  	// #24
  415db4:	ubfiz	x0, x22, #4, #32
  415db8:	ldr	w21, [x21, x0]
  415dbc:	mov	x0, x21
  415dc0:	bl	4452a0 <_obstack_memory_used@@Base+0x89c>
  415dc4:	mov	x1, #0x0                   	// #0
  415dc8:	mov	x3, #0x18                  	// #24
  415dcc:	cmp	x21, x1
  415dd0:	b.ls	415de4 <ferror@plt+0x13014>  // b.plast
  415dd4:	mul	x2, x1, x3
  415dd8:	add	x1, x1, #0x1
  415ddc:	str	xzr, [x0, x2]
  415de0:	b	415dcc <ferror@plt+0x12ffc>
  415de4:	ldr	x23, [sp, #48]
  415de8:	stp	x0, x21, [x19]
  415dec:	str	w22, [x19, #40]
  415df0:	ldp	x21, x22, [sp, #32]
  415df4:	str	x19, [x20]
  415df8:	ldp	x19, x20, [sp, #16]
  415dfc:	ldp	x29, x30, [sp], #64
  415e00:	ret
  415e04:	stp	x29, x30, [sp, #-80]!
  415e08:	mov	x29, sp
  415e0c:	stp	x19, x20, [sp, #16]
  415e10:	mov	x19, x0
  415e14:	ldr	w0, [x0, #32]
  415e18:	stp	x21, x22, [sp, #32]
  415e1c:	add	w0, w0, #0x1
  415e20:	ldr	x22, [x1]
  415e24:	stp	x23, x24, [sp, #48]
  415e28:	str	w0, [x19, #32]
  415e2c:	str	x25, [sp, #64]
  415e30:	asr	x24, x22, #3
  415e34:	ldr	w25, [x19, #40]
  415e38:	mov	w0, w24
  415e3c:	mov	w1, w25
  415e40:	bl	408c44 <ferror@plt+0x5e74>
  415e44:	mov	w20, w0
  415e48:	mov	w0, #0x18                  	// #24
  415e4c:	ldr	x21, [x19]
  415e50:	umull	x0, w20, w0
  415e54:	add	x2, x21, x0
  415e58:	ldr	x0, [x21, x0]
  415e5c:	cbz	x0, 415eb0 <ferror@plt+0x130e0>
  415e60:	cmp	x0, #0x1
  415e64:	b.eq	415e70 <ferror@plt+0x130a0>  // b.none
  415e68:	cmp	x22, x0
  415e6c:	b.eq	415eb0 <ferror@plt+0x130e0>  // b.none
  415e70:	mov	w1, w25
  415e74:	mov	w0, w24
  415e78:	bl	408c7c <ferror@plt+0x5eac>
  415e7c:	ldr	w1, [x19, #36]
  415e80:	mov	w4, #0x18                  	// #24
  415e84:	ldr	x23, [x19, #8]
  415e88:	add	w20, w20, w0
  415e8c:	add	w1, w1, #0x1
  415e90:	cmp	x23, w20, uxtw
  415e94:	b.hi	415e9c <ferror@plt+0x130cc>  // b.pmore
  415e98:	sub	w20, w20, w23
  415e9c:	umull	x3, w20, w4
  415ea0:	add	x2, x21, x3
  415ea4:	ldr	x3, [x21, x3]
  415ea8:	cbnz	x3, 415ed4 <ferror@plt+0x13104>
  415eac:	str	w1, [x19, #36]
  415eb0:	ldr	x0, [x2]
  415eb4:	cbz	x0, 415ebc <ferror@plt+0x130ec>
  415eb8:	add	x0, x2, #0x8
  415ebc:	ldp	x19, x20, [sp, #16]
  415ec0:	ldp	x21, x22, [sp, #32]
  415ec4:	ldp	x23, x24, [sp, #48]
  415ec8:	ldr	x25, [sp, #64]
  415ecc:	ldp	x29, x30, [sp], #80
  415ed0:	ret
  415ed4:	cmp	x3, #0x1
  415ed8:	b.eq	415e88 <ferror@plt+0x130b8>  // b.none
  415edc:	cmp	x22, x3
  415ee0:	b.ne	415e88 <ferror@plt+0x130b8>  // b.any
  415ee4:	b	415eac <ferror@plt+0x130dc>
  415ee8:	stp	x29, x30, [sp, #-48]!
  415eec:	mov	w2, #0x0                   	// #0
  415ef0:	mov	x1, #0x8                   	// #8
  415ef4:	mov	x29, sp
  415ef8:	str	x19, [sp, #16]
  415efc:	mov	x19, x0
  415f00:	ldr	x0, [x0]
  415f04:	str	x0, [sp, #40]
  415f08:	add	x0, sp, #0x28
  415f0c:	bl	4443b0 <ferror@plt+0x415e0>
  415f10:	ldr	x1, [x19, #8]
  415f14:	mov	w2, w0
  415f18:	add	x0, sp, #0x28
  415f1c:	str	x1, [sp, #40]
  415f20:	mov	x1, #0x8                   	// #8
  415f24:	bl	4443b0 <ferror@plt+0x415e0>
  415f28:	mov	w1, w0
  415f2c:	ldr	w0, [x19, #16]
  415f30:	bl	408bcc <ferror@plt+0x5dfc>
  415f34:	ldr	x19, [sp, #16]
  415f38:	ldp	x29, x30, [sp], #48
  415f3c:	ret
  415f40:	stp	x29, x30, [sp, #-96]!
  415f44:	mov	x29, sp
  415f48:	stp	x19, x20, [sp, #16]
  415f4c:	mov	x19, x0
  415f50:	stp	x21, x22, [sp, #32]
  415f54:	ldr	w21, [x0, #40]
  415f58:	ldp	x22, x20, [x0]
  415f5c:	stp	x23, x24, [sp, #48]
  415f60:	ldp	x1, x0, [x0, #16]
  415f64:	stp	x25, x26, [sp, #64]
  415f68:	str	x27, [sp, #80]
  415f6c:	add	x23, x22, x20, lsl #4
  415f70:	sub	x1, x1, x0
  415f74:	lsl	x0, x1, #1
  415f78:	cmp	x20, x1, lsl #1
  415f7c:	b.cc	415f94 <ferror@plt+0x131c4>  // b.lo, b.ul, b.last
  415f80:	lsl	w1, w1, #3
  415f84:	cmp	x20, x1
  415f88:	b.ls	415fac <ferror@plt+0x131dc>  // b.plast
  415f8c:	cmp	x20, #0x20
  415f90:	b.ls	415fac <ferror@plt+0x131dc>  // b.plast
  415f94:	bl	40bcbc <ferror@plt+0x8eec>
  415f98:	mov	w21, w0
  415f9c:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  415fa0:	add	x0, x0, #0x1b0
  415fa4:	ubfiz	x1, x21, #4, #32
  415fa8:	ldr	w20, [x0, x1]
  415fac:	ldrb	w0, [x19, #44]
  415fb0:	mov	x1, x20
  415fb4:	bl	4155fc <ferror@plt+0x1282c>
  415fb8:	stp	x0, x20, [x19]
  415fbc:	ldr	x0, [x19, #16]
  415fc0:	str	w21, [x19, #40]
  415fc4:	ldr	x1, [x19, #24]
  415fc8:	mov	x21, x22
  415fcc:	str	xzr, [x19, #24]
  415fd0:	sub	x0, x0, x1
  415fd4:	str	x0, [x19, #16]
  415fd8:	ldr	x0, [x21]
  415fdc:	cbz	x0, 41604c <ferror@plt+0x1327c>
  415fe0:	cmp	x0, #0x1
  415fe4:	b.eq	41604c <ferror@plt+0x1327c>  // b.none
  415fe8:	bl	415ee8 <ferror@plt+0x13118>
  415fec:	ldr	w27, [x19, #40]
  415ff0:	mov	w25, w0
  415ff4:	mov	w1, w27
  415ff8:	bl	408c44 <ferror@plt+0x5e74>
  415ffc:	mov	w20, w0
  416000:	ldr	x24, [x19]
  416004:	ubfiz	x0, x20, #4, #32
  416008:	add	x2, x24, x0
  41600c:	ldr	x0, [x24, x0]
  416010:	cbz	x0, 416044 <ferror@plt+0x13274>
  416014:	mov	w1, w27
  416018:	mov	w0, w25
  41601c:	ldr	x26, [x19, #8]
  416020:	bl	408c7c <ferror@plt+0x5eac>
  416024:	add	w20, w20, w0
  416028:	cmp	x26, w20, uxtw
  41602c:	b.hi	416034 <ferror@plt+0x13264>  // b.pmore
  416030:	sub	w20, w20, w26
  416034:	ubfiz	x1, x20, #4, #32
  416038:	add	x2, x24, x1
  41603c:	ldr	x1, [x24, x1]
  416040:	cbnz	x1, 416024 <ferror@plt+0x13254>
  416044:	ldp	x0, x1, [x21]
  416048:	stp	x0, x1, [x2]
  41604c:	add	x21, x21, #0x10
  416050:	cmp	x23, x21
  416054:	b.hi	415fd8 <ferror@plt+0x13208>  // b.pmore
  416058:	ldrb	w0, [x19, #44]
  41605c:	cbnz	w0, 416080 <ferror@plt+0x132b0>
  416060:	mov	x0, x22
  416064:	ldp	x19, x20, [sp, #16]
  416068:	ldp	x21, x22, [sp, #32]
  41606c:	ldp	x23, x24, [sp, #48]
  416070:	ldp	x25, x26, [sp, #64]
  416074:	ldr	x27, [sp, #80]
  416078:	ldp	x29, x30, [sp], #96
  41607c:	b	402b30 <free@plt>
  416080:	mov	x0, x22
  416084:	ldp	x19, x20, [sp, #16]
  416088:	ldp	x21, x22, [sp, #32]
  41608c:	ldp	x23, x24, [sp, #48]
  416090:	ldp	x25, x26, [sp, #64]
  416094:	ldr	x27, [sp, #80]
  416098:	ldp	x29, x30, [sp], #96
  41609c:	b	40c0d8 <ferror@plt+0x9308>
  4160a0:	stp	x29, x30, [sp, #-96]!
  4160a4:	mov	x29, sp
  4160a8:	stp	x19, x20, [sp, #16]
  4160ac:	mov	x19, x0
  4160b0:	stp	x21, x22, [sp, #32]
  4160b4:	ldr	w22, [x0, #40]
  4160b8:	stp	x23, x24, [sp, #48]
  4160bc:	ldp	x24, x20, [x0]
  4160c0:	stp	x25, x26, [sp, #64]
  4160c4:	mov	x25, #0x18                  	// #24
  4160c8:	ldp	x1, x0, [x0, #16]
  4160cc:	stp	x27, x28, [sp, #80]
  4160d0:	madd	x25, x20, x25, x24
  4160d4:	sub	x1, x1, x0
  4160d8:	lsl	x0, x1, #1
  4160dc:	cmp	x20, x1, lsl #1
  4160e0:	b.cc	4160f8 <ferror@plt+0x13328>  // b.lo, b.ul, b.last
  4160e4:	lsl	w1, w1, #3
  4160e8:	cmp	x20, x1
  4160ec:	b.ls	416110 <ferror@plt+0x13340>  // b.plast
  4160f0:	cmp	x20, #0x20
  4160f4:	b.ls	416110 <ferror@plt+0x13340>  // b.plast
  4160f8:	bl	40bcbc <ferror@plt+0x8eec>
  4160fc:	mov	w22, w0
  416100:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  416104:	add	x0, x0, #0x1b0
  416108:	ubfiz	x1, x22, #4, #32
  41610c:	ldr	w20, [x0, x1]
  416110:	ldrb	w0, [x19, #44]
  416114:	mov	x1, x20
  416118:	mov	x26, x24
  41611c:	mov	w27, #0x18                  	// #24
  416120:	bl	415678 <ferror@plt+0x128a8>
  416124:	mov	x23, x0
  416128:	ldp	x0, x1, [x19, #16]
  41612c:	stp	x23, x20, [x19]
  416130:	str	w22, [x19, #40]
  416134:	sub	x0, x0, x1
  416138:	stp	x0, xzr, [x19, #16]
  41613c:	ldr	x0, [x26]
  416140:	cbz	x0, 4161ac <ferror@plt+0x133dc>
  416144:	cmp	x0, #0x1
  416148:	b.eq	4161ac <ferror@plt+0x133dc>  // b.none
  41614c:	asr	x28, x0, #3
  416150:	mov	w1, w22
  416154:	mov	w0, w28
  416158:	bl	408c44 <ferror@plt+0x5e74>
  41615c:	mov	w21, w0
  416160:	umull	x0, w0, w27
  416164:	add	x2, x23, x0
  416168:	ldr	x0, [x23, x0]
  41616c:	cbz	x0, 41619c <ferror@plt+0x133cc>
  416170:	mov	w1, w22
  416174:	mov	w0, w28
  416178:	bl	408c7c <ferror@plt+0x5eac>
  41617c:	add	w21, w21, w0
  416180:	cmp	x20, w21, uxtw
  416184:	b.hi	41618c <ferror@plt+0x133bc>  // b.pmore
  416188:	sub	w21, w21, w20
  41618c:	umull	x1, w21, w27
  416190:	add	x2, x23, x1
  416194:	ldr	x1, [x23, x1]
  416198:	cbnz	x1, 41617c <ferror@plt+0x133ac>
  41619c:	ldp	x0, x1, [x26]
  4161a0:	stp	x0, x1, [x2]
  4161a4:	ldr	x0, [x26, #16]
  4161a8:	str	x0, [x2, #16]
  4161ac:	add	x26, x26, #0x18
  4161b0:	cmp	x25, x26
  4161b4:	b.hi	41613c <ferror@plt+0x1336c>  // b.pmore
  4161b8:	ldrb	w0, [x19, #44]
  4161bc:	cbnz	w0, 4161e0 <ferror@plt+0x13410>
  4161c0:	mov	x0, x24
  4161c4:	ldp	x19, x20, [sp, #16]
  4161c8:	ldp	x21, x22, [sp, #32]
  4161cc:	ldp	x23, x24, [sp, #48]
  4161d0:	ldp	x25, x26, [sp, #64]
  4161d4:	ldp	x27, x28, [sp, #80]
  4161d8:	ldp	x29, x30, [sp], #96
  4161dc:	b	402b30 <free@plt>
  4161e0:	mov	x0, x24
  4161e4:	ldp	x19, x20, [sp, #16]
  4161e8:	ldp	x21, x22, [sp, #32]
  4161ec:	ldp	x23, x24, [sp, #48]
  4161f0:	ldp	x25, x26, [sp, #64]
  4161f4:	ldp	x27, x28, [sp, #80]
  4161f8:	ldp	x29, x30, [sp], #96
  4161fc:	b	40c0d8 <ferror@plt+0x9308>
  416200:	stp	x29, x30, [sp, #-80]!
  416204:	cmp	w3, #0x1
  416208:	mov	x29, sp
  41620c:	stp	x19, x20, [sp, #16]
  416210:	mov	x19, x0
  416214:	stp	x21, x22, [sp, #32]
  416218:	mov	w22, w3
  41621c:	stp	x23, x24, [sp, #48]
  416220:	mov	x24, x1
  416224:	stp	x25, x26, [sp, #64]
  416228:	mov	w25, w2
  41622c:	b.ne	416244 <ferror@plt+0x13474>  // b.any
  416230:	ldp	x1, x2, [x0, #8]
  416234:	add	x1, x1, x1, lsl #1
  416238:	cmp	x1, x2, lsl #2
  41623c:	b.hi	416244 <ferror@plt+0x13474>  // b.pmore
  416240:	bl	4160a0 <ferror@plt+0x132d0>
  416244:	ldr	w0, [x19, #32]
  416248:	ldr	w26, [x19, #40]
  41624c:	add	w0, w0, #0x1
  416250:	str	w0, [x19, #32]
  416254:	mov	w1, w26
  416258:	mov	w0, w25
  41625c:	bl	408c44 <ferror@plt+0x5e74>
  416260:	mov	w21, w0
  416264:	mov	w0, #0x18                  	// #24
  416268:	ldr	x23, [x19]
  41626c:	umull	x0, w21, w0
  416270:	add	x20, x23, x0
  416274:	ldr	x0, [x23, x0]
  416278:	cbz	x0, 416344 <ferror@plt+0x13574>
  41627c:	cmp	x0, #0x1
  416280:	b.ne	4162d8 <ferror@plt+0x13508>  // b.any
  416284:	mov	w1, w26
  416288:	mov	w0, w25
  41628c:	bl	408c7c <ferror@plt+0x5eac>
  416290:	ldr	w3, [x19, #36]
  416294:	mov	x2, x20
  416298:	ldr	x4, [x19, #8]
  41629c:	mov	w6, #0x18                  	// #24
  4162a0:	add	w21, w21, w0
  4162a4:	add	w3, w3, #0x1
  4162a8:	cmp	x4, w21, uxtw
  4162ac:	b.hi	4162b4 <ferror@plt+0x134e4>  // b.pmore
  4162b0:	sub	w21, w21, w4
  4162b4:	umull	x1, w21, w6
  4162b8:	add	x20, x23, x1
  4162bc:	ldr	x1, [x23, x1]
  4162c0:	cbz	x1, 416318 <ferror@plt+0x13548>
  4162c4:	cmp	x1, #0x1
  4162c8:	b.ne	4162ec <ferror@plt+0x1351c>  // b.any
  4162cc:	cmp	x2, #0x0
  4162d0:	csel	x2, x2, x20, ne  // ne = any
  4162d4:	b	4162a0 <ferror@plt+0x134d0>
  4162d8:	ldr	x1, [x24]
  4162dc:	cmp	x0, x1
  4162e0:	b.eq	4162fc <ferror@plt+0x1352c>  // b.none
  4162e4:	mov	x20, #0x0                   	// #0
  4162e8:	b	416284 <ferror@plt+0x134b4>
  4162ec:	ldr	x5, [x24]
  4162f0:	cmp	x1, x5
  4162f4:	b.ne	4162a0 <ferror@plt+0x134d0>  // b.any
  4162f8:	str	w3, [x19, #36]
  4162fc:	mov	x0, x20
  416300:	ldp	x19, x20, [sp, #16]
  416304:	ldp	x21, x22, [sp, #32]
  416308:	ldp	x23, x24, [sp, #48]
  41630c:	ldp	x25, x26, [sp, #64]
  416310:	ldp	x29, x30, [sp], #80
  416314:	ret
  416318:	str	w3, [x19, #36]
  41631c:	cbnz	w22, 416328 <ferror@plt+0x13558>
  416320:	mov	x20, #0x0                   	// #0
  416324:	b	4162fc <ferror@plt+0x1352c>
  416328:	cbz	x2, 416348 <ferror@plt+0x13578>
  41632c:	ldr	x0, [x19, #24]
  416330:	mov	x20, x2
  416334:	sub	x0, x0, #0x1
  416338:	str	x0, [x19, #24]
  41633c:	str	xzr, [x2]
  416340:	b	4162fc <ferror@plt+0x1352c>
  416344:	cbz	w22, 416320 <ferror@plt+0x13550>
  416348:	ldr	x0, [x19, #16]
  41634c:	mov	w20, #0x18                  	// #24
  416350:	add	x0, x0, #0x1
  416354:	umaddl	x20, w21, w20, x23
  416358:	str	x0, [x19, #16]
  41635c:	b	4162fc <ferror@plt+0x1352c>
  416360:	ldr	x3, [x0, #8]
  416364:	ldr	x1, [x0]
  416368:	cmp	x1, x3
  41636c:	b.cs	41638c <ferror@plt+0x135bc>  // b.hs, b.nlast
  416370:	ldr	x2, [x1]
  416374:	cbz	x2, 416380 <ferror@plt+0x135b0>
  416378:	cmp	x2, #0x1
  41637c:	b.ne	416390 <ferror@plt+0x135c0>  // b.any
  416380:	add	x1, x1, #0x10
  416384:	str	x1, [x0]
  416388:	b	416364 <ferror@plt+0x13594>
  41638c:	stp	xzr, xzr, [x0]
  416390:	ret
  416394:	stp	x29, x30, [sp, #-32]!
  416398:	mov	x29, sp
  41639c:	ldp	x1, x0, [x0]
  4163a0:	add	x0, x1, x0, lsl #4
  4163a4:	stp	x1, x0, [sp, #16]
  4163a8:	add	x0, sp, #0x10
  4163ac:	bl	416360 <ferror@plt+0x13590>
  4163b0:	ldp	x0, x1, [sp, #16]
  4163b4:	ldp	x29, x30, [sp], #32
  4163b8:	ret
  4163bc:	stp	x29, x30, [sp, #-48]!
  4163c0:	mov	x29, sp
  4163c4:	stp	x19, x20, [sp, #16]
  4163c8:	mov	x19, x0
  4163cc:	ldr	x0, [x0, #40]
  4163d0:	bl	416394 <ferror@plt+0x135c4>
  4163d4:	stp	x0, x1, [sp, #32]
  4163d8:	ldr	x0, [sp, #32]
  4163dc:	cbz	x0, 416414 <ferror@plt+0x13644>
  4163e0:	ldr	x0, [x0]
  4163e4:	cbnz	x0, 416444 <ferror@plt+0x13674>
  4163e8:	ldr	x0, [sp, #32]
  4163ec:	ldr	x0, [x0, #8]
  4163f0:	cbz	x0, 4163fc <ferror@plt+0x1362c>
  4163f4:	mov	x1, #0x38                  	// #56
  4163f8:	bl	445778 <_obstack_memory_used@@Base+0xd74>
  4163fc:	ldr	x0, [sp, #32]
  416400:	add	x0, x0, #0x10
  416404:	str	x0, [sp, #32]
  416408:	add	x0, sp, #0x20
  41640c:	bl	416360 <ferror@plt+0x13590>
  416410:	b	4163d8 <ferror@plt+0x13608>
  416414:	ldr	x1, [sp, #40]
  416418:	cbnz	x1, 4163e0 <ferror@plt+0x13610>
  41641c:	ldr	x20, [x19, #40]
  416420:	cbnz	x20, 416450 <ferror@plt+0x13680>
  416424:	ldr	x20, [x19, #48]
  416428:	cbz	x20, 4164ac <ferror@plt+0x136dc>
  41642c:	ldr	x1, [x20, #8]
  416430:	sub	x0, x1, #0x1
  416434:	cmp	x1, x0
  416438:	b.ls	416490 <ferror@plt+0x136c0>  // b.plast
  41643c:	sub	x0, x0, #0x1
  416440:	b	416434 <ferror@plt+0x13664>
  416444:	mov	x1, #0x20                  	// #32
  416448:	bl	445778 <_obstack_memory_used@@Base+0xd74>
  41644c:	b	4163e8 <ferror@plt+0x13618>
  416450:	ldr	x1, [x20, #8]
  416454:	sub	x0, x1, #0x1
  416458:	cmp	x1, x0
  41645c:	b.ls	416468 <ferror@plt+0x13698>  // b.plast
  416460:	sub	x0, x0, #0x1
  416464:	b	416458 <ferror@plt+0x13688>
  416468:	ldrb	w1, [x20, #44]
  41646c:	ldr	x0, [x20]
  416470:	cbnz	w1, 416488 <ferror@plt+0x136b8>
  416474:	bl	402b30 <free@plt>
  416478:	mov	x0, x20
  41647c:	mov	x1, #0x30                  	// #48
  416480:	bl	445778 <_obstack_memory_used@@Base+0xd74>
  416484:	b	416424 <ferror@plt+0x13654>
  416488:	bl	40c0d8 <ferror@plt+0x9308>
  41648c:	b	416478 <ferror@plt+0x136a8>
  416490:	ldrb	w1, [x20, #44]
  416494:	ldr	x0, [x20]
  416498:	cbnz	w1, 4164cc <ferror@plt+0x136fc>
  41649c:	bl	402b30 <free@plt>
  4164a0:	mov	x0, x20
  4164a4:	mov	x1, #0x30                  	// #48
  4164a8:	bl	445778 <_obstack_memory_used@@Base+0xd74>
  4164ac:	ldr	x19, [x19]
  4164b0:	cbz	x19, 4164f0 <ferror@plt+0x13720>
  4164b4:	ldr	x1, [x19, #8]
  4164b8:	sub	x0, x1, #0x1
  4164bc:	cmp	x1, x0
  4164c0:	b.ls	4164d4 <ferror@plt+0x13704>  // b.plast
  4164c4:	sub	x0, x0, #0x1
  4164c8:	b	4164bc <ferror@plt+0x136ec>
  4164cc:	bl	40c0d8 <ferror@plt+0x9308>
  4164d0:	b	4164a0 <ferror@plt+0x136d0>
  4164d4:	ldrb	w1, [x19, #44]
  4164d8:	ldr	x0, [x19]
  4164dc:	cbnz	w1, 4164fc <ferror@plt+0x1372c>
  4164e0:	bl	402b30 <free@plt>
  4164e4:	mov	x0, x19
  4164e8:	mov	x1, #0x30                  	// #48
  4164ec:	bl	445778 <_obstack_memory_used@@Base+0xd74>
  4164f0:	ldp	x19, x20, [sp, #16]
  4164f4:	ldp	x29, x30, [sp], #48
  4164f8:	ret
  4164fc:	bl	40c0d8 <ferror@plt+0x9308>
  416500:	b	4164e4 <ferror@plt+0x13714>
  416504:	stp	x29, x30, [sp, #-80]!
  416508:	mov	x29, sp
  41650c:	str	x23, [sp, #48]
  416510:	mov	w23, w1
  416514:	ldr	x1, [x0, #40]
  416518:	stp	x21, x22, [sp, #32]
  41651c:	mov	x21, x0
  416520:	mov	x22, x2
  416524:	stp	x19, x20, [sp, #16]
  416528:	mov	x19, x3
  41652c:	ldp	x2, x0, [x1, #16]
  416530:	mov	x1, #0x10                  	// #16
  416534:	sub	x0, x2, x0
  416538:	bl	4452a0 <_obstack_memory_used@@Base+0x89c>
  41653c:	mov	x20, x0
  416540:	ldr	x0, [x21, #40]
  416544:	mov	w21, #0x0                   	// #0
  416548:	bl	416394 <ferror@plt+0x135c4>
  41654c:	stp	x0, x1, [sp, #64]
  416550:	ldr	x0, [sp, #64]
  416554:	cbz	x0, 416594 <ferror@plt+0x137c4>
  416558:	ldr	x2, [x0]
  41655c:	ldr	w1, [x2, #20]
  416560:	cmp	w1, w23
  416564:	b.ne	416580 <ferror@plt+0x137b0>  // b.any
  416568:	ubfiz	x1, x21, #4, #32
  41656c:	add	w21, w21, #0x1
  416570:	add	x3, x20, x1
  416574:	ldr	x4, [x0, #8]
  416578:	str	x2, [x20, x1]
  41657c:	str	x4, [x3, #8]
  416580:	add	x0, x0, #0x10
  416584:	str	x0, [sp, #64]
  416588:	add	x0, sp, #0x40
  41658c:	bl	416360 <ferror@plt+0x13590>
  416590:	b	416550 <ferror@plt+0x13780>
  416594:	ldr	x1, [sp, #72]
  416598:	cbnz	x1, 416558 <ferror@plt+0x13788>
  41659c:	mov	w1, w21
  4165a0:	cbnz	x19, 4165ac <ferror@plt+0x137dc>
  4165a4:	adrp	x19, 415000 <ferror@plt+0x12230>
  4165a8:	add	x19, x19, #0x934
  4165ac:	mov	x3, x19
  4165b0:	mov	x0, x20
  4165b4:	mov	x2, #0x10                  	// #16
  4165b8:	bl	419474 <ferror@plt+0x166a4>
  4165bc:	mov	x0, x20
  4165c0:	ldp	x19, x20, [sp, #16]
  4165c4:	ldr	x23, [sp, #48]
  4165c8:	str	w21, [x22]
  4165cc:	ldp	x21, x22, [sp, #32]
  4165d0:	ldp	x29, x30, [sp], #80
  4165d4:	ret
  4165d8:	stp	x29, x30, [sp, #-128]!
  4165dc:	mov	x29, sp
  4165e0:	stp	x21, x22, [sp, #32]
  4165e4:	adrp	x21, 495000 <_obstack_memory_used@@Base+0x505fc>
  4165e8:	mov	x22, x0
  4165ec:	stp	x19, x20, [sp, #16]
  4165f0:	mov	w19, w1
  4165f4:	mov	x20, x2
  4165f8:	ldr	x1, [x21, #1440]
  4165fc:	mov	w0, #0xa                   	// #10
  416600:	str	x23, [sp, #48]
  416604:	bl	4027d0 <fputc@plt>
  416608:	mov	x3, x20
  41660c:	add	x2, sp, #0x40
  416610:	mov	w1, w19
  416614:	mov	x0, x22
  416618:	bl	416504 <ferror@plt+0x13734>
  41661c:	mov	x20, x0
  416620:	add	x2, sp, #0x44
  416624:	mov	w1, w19
  416628:	mov	x0, x22
  41662c:	mov	x3, #0x0                   	// #0
  416630:	bl	416504 <ferror@plt+0x13734>
  416634:	stp	xzr, xzr, [sp, #72]
  416638:	mov	x1, #0x1                   	// #1
  41663c:	mov	w2, #0x0                   	// #0
  416640:	stp	xzr, x1, [sp, #88]
  416644:	stp	xzr, xzr, [sp, #104]
  416648:	str	xzr, [sp, #120]
  41664c:	ldr	w1, [sp, #68]
  416650:	cmp	w1, w2
  416654:	b.ls	4166b4 <ferror@plt+0x138e4>  // b.plast
  416658:	ubfiz	x1, x2, #4, #32
  41665c:	add	w2, w2, #0x1
  416660:	add	x1, x0, x1
  416664:	ldp	x6, x5, [sp, #80]
  416668:	ldr	x1, [x1, #8]
  41666c:	ldr	x4, [sp, #104]
  416670:	ldr	x3, [x1, #8]
  416674:	ldr	x7, [x1, #40]
  416678:	add	x6, x6, x3
  41667c:	ldr	x3, [x1, #16]
  416680:	add	x5, x5, x3
  416684:	ldr	x3, [x1, #32]
  416688:	add	x4, x4, x3
  41668c:	ldr	x3, [sp, #112]
  416690:	add	x3, x3, x7
  416694:	ldr	x7, [x1]
  416698:	stp	x5, xzr, [sp, #88]
  41669c:	ldr	x1, [sp, #72]
  4166a0:	stp	x4, x3, [sp, #104]
  4166a4:	add	x1, x1, x7
  4166a8:	stp	x1, x6, [sp, #72]
  4166ac:	str	xzr, [sp, #120]
  4166b0:	b	41664c <ferror@plt+0x1387c>
  4166b4:	bl	402b30 <free@plt>
  4166b8:	add	x23, x20, #0x8
  4166bc:	mov	x0, #0x8c                  	// #140
  4166c0:	bl	415988 <ferror@plt+0x12bb8>
  4166c4:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4166c8:	add	x0, x0, #0xf60
  4166cc:	ldr	x22, [x0, w19, uxtw #3]
  4166d0:	mov	x0, x22
  4166d4:	bl	415c80 <ferror@plt+0x12eb0>
  4166d8:	mov	x0, #0x8c                  	// #140
  4166dc:	bl	415988 <ferror@plt+0x12bb8>
  4166e0:	ldr	w19, [sp, #64]
  4166e4:	sub	w19, w19, #0x1
  4166e8:	sxtw	x19, w19
  4166ec:	tbnz	w19, #31, 41670c <ferror@plt+0x1393c>
  4166f0:	lsl	x0, x19, #4
  4166f4:	add	x2, sp, #0x48
  4166f8:	sub	x19, x19, #0x1
  4166fc:	ldr	x1, [x20, x0]
  416700:	ldr	x0, [x23, x0]
  416704:	bl	4159c8 <ferror@plt+0x12bf8>
  416708:	b	4166ec <ferror@plt+0x1391c>
  41670c:	mov	x0, #0x8c                  	// #140
  416710:	bl	415988 <ferror@plt+0x12bb8>
  416714:	mov	x0, x22
  416718:	bl	415c80 <ferror@plt+0x12eb0>
  41671c:	mov	x0, #0x8c                  	// #140
  416720:	bl	415988 <ferror@plt+0x12bb8>
  416724:	add	x0, sp, #0x48
  416728:	bl	415b9c <ferror@plt+0x12dcc>
  41672c:	mov	x0, #0x8c                  	// #140
  416730:	bl	415988 <ferror@plt+0x12bb8>
  416734:	mov	x0, x20
  416738:	bl	402b30 <free@plt>
  41673c:	ldr	x1, [x21, #1440]
  416740:	mov	w0, #0xa                   	// #10
  416744:	bl	4027d0 <fputc@plt>
  416748:	ldp	x19, x20, [sp, #16]
  41674c:	ldp	x21, x22, [sp, #32]
  416750:	ldr	x23, [sp, #48]
  416754:	ldp	x29, x30, [sp], #128
  416758:	ret
  41675c:	ldr	x3, [x0]
  416760:	ldr	x2, [x1]
  416764:	cmp	x3, x2
  416768:	b.ne	416790 <ferror@plt+0x139c0>  // b.any
  41676c:	ldr	x3, [x0, #8]
  416770:	ldr	x2, [x1, #8]
  416774:	cmp	x3, x2
  416778:	b.ne	416790 <ferror@plt+0x139c0>  // b.any
  41677c:	ldr	w2, [x0, #16]
  416780:	ldr	w0, [x1, #16]
  416784:	cmp	w2, w0
  416788:	cset	w0, eq  // eq = none
  41678c:	ret
  416790:	mov	w0, #0x0                   	// #0
  416794:	b	41678c <ferror@plt+0x139bc>
  416798:	stp	x29, x30, [sp, #-112]!
  41679c:	mov	x29, sp
  4167a0:	stp	x19, x20, [sp, #16]
  4167a4:	ldr	x20, [x0, #40]
  4167a8:	stp	x21, x22, [sp, #32]
  4167ac:	mov	x22, x2
  4167b0:	stp	x23, x24, [sp, #48]
  4167b4:	mov	x24, x0
  4167b8:	mov	x0, x2
  4167bc:	stp	x25, x26, [sp, #64]
  4167c0:	stp	x27, x28, [sp, #80]
  4167c4:	str	x1, [sp, #104]
  4167c8:	bl	415ee8 <ferror@plt+0x13118>
  4167cc:	ldr	w1, [x20, #32]
  4167d0:	mov	w25, w0
  4167d4:	ldr	w27, [x20, #40]
  4167d8:	add	w1, w1, #0x1
  4167dc:	str	w1, [x20, #32]
  4167e0:	mov	w1, w27
  4167e4:	bl	408c44 <ferror@plt+0x5e74>
  4167e8:	mov	w19, w0
  4167ec:	ldr	x21, [x20]
  4167f0:	ubfiz	x0, x19, #4, #32
  4167f4:	add	x23, x21, x0
  4167f8:	ldr	x0, [x21, x0]
  4167fc:	cbz	x0, 416870 <ferror@plt+0x13aa0>
  416800:	cmp	x0, #0x1
  416804:	b.eq	416818 <ferror@plt+0x13a48>  // b.none
  416808:	mov	x1, x22
  41680c:	bl	41675c <ferror@plt+0x1398c>
  416810:	tst	w0, #0xff
  416814:	b.ne	416870 <ferror@plt+0x13aa0>  // b.any
  416818:	mov	w0, w25
  41681c:	mov	w1, w27
  416820:	bl	408c7c <ferror@plt+0x5eac>
  416824:	mov	w25, w0
  416828:	ldr	x26, [x20, #8]
  41682c:	add	w19, w19, w25
  416830:	ldr	w0, [x20, #36]
  416834:	cmp	x26, w19, uxtw
  416838:	add	w0, w0, #0x1
  41683c:	str	w0, [x20, #36]
  416840:	b.hi	416848 <ferror@plt+0x13a78>  // b.pmore
  416844:	sub	w19, w19, w26
  416848:	ubfiz	x0, x19, #4, #32
  41684c:	add	x23, x21, x0
  416850:	ldr	x0, [x21, x0]
  416854:	cbz	x0, 416870 <ferror@plt+0x13aa0>
  416858:	cmp	x0, #0x1
  41685c:	b.eq	41682c <ferror@plt+0x13a5c>  // b.none
  416860:	mov	x1, x22
  416864:	bl	41675c <ferror@plt+0x1398c>
  416868:	tst	w0, #0xff
  41686c:	b.eq	41682c <ferror@plt+0x13a5c>  // b.none
  416870:	ldr	x0, [x23]
  416874:	cbz	x0, 4168f4 <ferror@plt+0x13b24>
  416878:	cbz	x22, 416888 <ferror@plt+0x13ab8>
  41687c:	mov	x0, x22
  416880:	mov	x1, #0x20                  	// #32
  416884:	bl	445778 <_obstack_memory_used@@Base+0xd74>
  416888:	ldr	x19, [x23, #8]
  41688c:	ldr	x0, [x19, #24]
  416890:	add	x0, x0, #0x1
  416894:	str	x0, [x19, #24]
  416898:	ldr	x0, [x24, #48]
  41689c:	add	x1, sp, #0x68
  4168a0:	bl	415e04 <ferror@plt+0x13034>
  4168a4:	cbnz	x0, 4168d4 <ferror@plt+0x13b04>
  4168a8:	ldr	x0, [x24, #48]
  4168ac:	add	x1, sp, #0x68
  4168b0:	ldr	x2, [sp, #104]
  4168b4:	mov	w3, #0x1                   	// #1
  4168b8:	ubfx	x2, x2, #3, #32
  4168bc:	bl	416200 <ferror@plt+0x13430>
  4168c0:	ldr	x1, [x0]
  4168c4:	cbnz	x1, 4168d0 <ferror@plt+0x13b00>
  4168c8:	ldr	x1, [sp, #104]
  4168cc:	str	x1, [x0]
  4168d0:	stp	x19, xzr, [x0, #8]
  4168d4:	mov	x0, x19
  4168d8:	ldp	x19, x20, [sp, #16]
  4168dc:	ldp	x21, x22, [sp, #32]
  4168e0:	ldp	x23, x24, [sp, #48]
  4168e4:	ldp	x25, x26, [sp, #64]
  4168e8:	ldp	x27, x28, [sp, #80]
  4168ec:	ldp	x29, x30, [sp], #112
  4168f0:	ret
  4168f4:	mov	x0, #0x38                  	// #56
  4168f8:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  4168fc:	mov	x19, x0
  416900:	mov	x0, #0x1                   	// #1
  416904:	ldr	x20, [x24, #40]
  416908:	stp	xzr, xzr, [x19]
  41690c:	stp	xzr, x0, [x19, #16]
  416910:	mov	x0, x22
  416914:	stp	xzr, xzr, [x19, #32]
  416918:	str	xzr, [x19, #48]
  41691c:	bl	415ee8 <ferror@plt+0x13118>
  416920:	mov	w25, w0
  416924:	ldp	x0, x1, [x20, #8]
  416928:	add	x0, x0, x0, lsl #1
  41692c:	cmp	x0, x1, lsl #2
  416930:	b.hi	41693c <ferror@plt+0x13b6c>  // b.pmore
  416934:	mov	x0, x20
  416938:	bl	415f40 <ferror@plt+0x13170>
  41693c:	ldr	w0, [x20, #32]
  416940:	ldr	w27, [x20, #40]
  416944:	add	w0, w0, #0x1
  416948:	str	w0, [x20, #32]
  41694c:	mov	w1, w27
  416950:	mov	w0, w25
  416954:	bl	408c44 <ferror@plt+0x5e74>
  416958:	mov	w21, w0
  41695c:	ldr	x26, [x20]
  416960:	ubfiz	x0, x21, #4, #32
  416964:	add	x23, x26, x0
  416968:	ldr	x0, [x26, x0]
  41696c:	cbz	x0, 416a28 <ferror@plt+0x13c58>
  416970:	cmp	x0, #0x1
  416974:	b.ne	4169d0 <ferror@plt+0x13c00>  // b.any
  416978:	mov	w1, w27
  41697c:	mov	w0, w25
  416980:	bl	408c7c <ferror@plt+0x5eac>
  416984:	mov	x25, x23
  416988:	ldr	x28, [x20, #8]
  41698c:	mov	w27, w0
  416990:	ldr	w0, [x20, #36]
  416994:	add	w21, w21, w27
  416998:	add	w0, w0, #0x1
  41699c:	str	w0, [x20, #36]
  4169a0:	cmp	x28, w21, uxtw
  4169a4:	b.hi	4169ac <ferror@plt+0x13bdc>  // b.pmore
  4169a8:	sub	w21, w21, w28
  4169ac:	ubfiz	x0, x21, #4, #32
  4169b0:	add	x23, x26, x0
  4169b4:	ldr	x0, [x26, x0]
  4169b8:	cbz	x0, 416a0c <ferror@plt+0x13c3c>
  4169bc:	cmp	x0, #0x1
  4169c0:	b.ne	4169e8 <ferror@plt+0x13c18>  // b.any
  4169c4:	cmp	x25, #0x0
  4169c8:	csel	x25, x25, x23, ne  // ne = any
  4169cc:	b	416990 <ferror@plt+0x13bc0>
  4169d0:	mov	x1, x22
  4169d4:	bl	41675c <ferror@plt+0x1398c>
  4169d8:	tst	w0, #0xff
  4169dc:	b.ne	4169f8 <ferror@plt+0x13c28>  // b.any
  4169e0:	mov	x23, #0x0                   	// #0
  4169e4:	b	416978 <ferror@plt+0x13ba8>
  4169e8:	mov	x1, x22
  4169ec:	bl	41675c <ferror@plt+0x1398c>
  4169f0:	tst	w0, #0xff
  4169f4:	b.eq	416990 <ferror@plt+0x13bc0>  // b.none
  4169f8:	ldr	x0, [x23]
  4169fc:	cbnz	x0, 416a04 <ferror@plt+0x13c34>
  416a00:	str	x22, [x23]
  416a04:	str	x19, [x23, #8]
  416a08:	b	416898 <ferror@plt+0x13ac8>
  416a0c:	cbz	x25, 416a28 <ferror@plt+0x13c58>
  416a10:	ldr	x0, [x20, #24]
  416a14:	mov	x23, x25
  416a18:	sub	x0, x0, #0x1
  416a1c:	str	x0, [x20, #24]
  416a20:	str	xzr, [x25]
  416a24:	b	4169f8 <ferror@plt+0x13c28>
  416a28:	ldr	x0, [x20, #16]
  416a2c:	ubfiz	x21, x21, #4, #32
  416a30:	add	x23, x26, x21
  416a34:	add	x0, x0, #0x1
  416a38:	str	x0, [x20, #16]
  416a3c:	b	4169f8 <ferror@plt+0x13c28>
  416a40:	stp	x29, x30, [sp, #-32]!
  416a44:	mov	x29, sp
  416a48:	stp	x19, x20, [sp, #16]
  416a4c:	mov	x19, x0
  416a50:	ldr	x0, [x0, #40]
  416a54:	cbz	x0, 416a84 <ferror@plt+0x13cb4>
  416a58:	ldr	x1, [x19, #32]
  416a5c:	cmp	x0, x1
  416a60:	b.eq	416a84 <ferror@plt+0x13cb4>  // b.none
  416a64:	ldr	x1, [x19, #48]
  416a68:	sub	x0, x0, #0x1
  416a6c:	cmp	x1, x0
  416a70:	b.cs	416a84 <ferror@plt+0x13cb4>  // b.hs, b.nlast
  416a74:	mov	w0, #0x0                   	// #0
  416a78:	ldp	x19, x20, [sp, #16]
  416a7c:	ldp	x29, x30, [sp], #32
  416a80:	ret
  416a84:	ldr	x0, [x19, #16]
  416a88:	bl	402a70 <feof@plt>
  416a8c:	cbnz	w0, 416a74 <ferror@plt+0x13ca4>
  416a90:	ldr	x0, [x19, #16]
  416a94:	bl	402dd0 <ferror@plt>
  416a98:	cbnz	w0, 416a74 <ferror@plt+0x13ca4>
  416a9c:	ldp	x1, x0, [x19, #32]
  416aa0:	cmp	x0, x1
  416aa4:	b.ne	416ac8 <ferror@plt+0x13cf8>  // b.any
  416aa8:	cmp	x0, #0x0
  416aac:	lsl	x20, x0, #1
  416ab0:	ldr	x0, [x19, #24]
  416ab4:	mov	x1, #0x1000                	// #4096
  416ab8:	csel	x20, x20, x1, ne  // ne = any
  416abc:	mov	x1, x20
  416ac0:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  416ac4:	stp	x0, x20, [x19, #24]
  416ac8:	mov	x1, #0x1                   	// #1
  416acc:	ldp	x3, x4, [x19, #16]
  416ad0:	ldp	x2, x0, [x19, #32]
  416ad4:	sub	x2, x2, x0
  416ad8:	add	x0, x4, x0
  416adc:	bl	402b00 <fread@plt>
  416ae0:	mov	x20, x0
  416ae4:	ldr	x0, [x19, #16]
  416ae8:	bl	402dd0 <ferror@plt>
  416aec:	cbnz	w0, 416a74 <ferror@plt+0x13ca4>
  416af0:	ldr	x0, [x19, #40]
  416af4:	cmp	x20, #0x0
  416af8:	add	x0, x0, x20
  416afc:	str	x0, [x19, #40]
  416b00:	cset	w0, ne  // ne = any
  416b04:	b	416a78 <ferror@plt+0x13ca8>
  416b08:	stp	x29, x30, [sp, #-112]!
  416b0c:	mov	x29, sp
  416b10:	stp	x19, x20, [sp, #16]
  416b14:	mov	w19, w0
  416b18:	mov	w20, w2
  416b1c:	stp	x21, x22, [sp, #32]
  416b20:	mov	x21, x8
  416b24:	stp	x23, x24, [sp, #48]
  416b28:	and	w24, w1, #0xff
  416b2c:	tbz	w0, #31, 416bc4 <ferror@plt+0x13df4>
  416b30:	adrp	x22, 495000 <_obstack_memory_used@@Base+0x505fc>
  416b34:	mov	w1, w0
  416b38:	ldr	x0, [x22, #2432]
  416b3c:	bl	42b130 <ferror@plt+0x28360>
  416b40:	mov	x23, x0
  416b44:	ldr	x0, [x22, #2432]
  416b48:	mov	w1, w19
  416b4c:	bl	42b148 <ferror@plt+0x28378>
  416b50:	mov	w19, w0
  416b54:	stp	xzr, xzr, [sp, #80]
  416b58:	cmp	w19, #0x1
  416b5c:	stp	xzr, xzr, [sp, #96]
  416b60:	b.ls	416c34 <ferror@plt+0x13e64>  // b.plast
  416b64:	adrp	x22, 495000 <_obstack_memory_used@@Base+0x505fc>
  416b68:	cbnz	w24, 416bcc <ferror@plt+0x13dfc>
  416b6c:	ldr	x0, [x22, #2432]
  416b70:	mov	w1, w19
  416b74:	mov	x2, #0x0                   	// #0
  416b78:	bl	42c418 <ferror@plt+0x29648>
  416b7c:	mov	w19, w0
  416b80:	mov	w2, #0x1                   	// #1
  416b84:	ldr	x0, [x22, #2432]
  416b88:	mov	w1, w19
  416b8c:	add	x3, sp, #0x48
  416b90:	bl	42bec4 <ferror@plt+0x290f4>
  416b94:	mov	w19, w0
  416b98:	cmp	w20, #0x1
  416b9c:	b.eq	416bd4 <ferror@plt+0x13e04>  // b.none
  416ba0:	cmp	w20, #0x2
  416ba4:	b.eq	416c0c <ferror@plt+0x13e3c>  // b.none
  416ba8:	cbz	w20, 416c20 <ferror@plt+0x13e50>
  416bac:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  416bb0:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  416bb4:	add	x2, x2, #0xf98
  416bb8:	add	x0, x0, #0xfaa
  416bbc:	mov	w1, #0xc7                  	// #199
  416bc0:	bl	402de0 <ferror@plt+0x10>
  416bc4:	mov	x23, #0x0                   	// #0
  416bc8:	b	416b54 <ferror@plt+0x13d84>
  416bcc:	mov	w2, #0x0                   	// #0
  416bd0:	b	416b84 <ferror@plt+0x13db4>
  416bd4:	mov	w1, w0
  416bd8:	ldr	x0, [x22, #2432]
  416bdc:	bl	42bbd0 <ferror@plt+0x28e00>
  416be0:	cmp	w19, w0
  416be4:	b.eq	416c20 <ferror@plt+0x13e50>  // b.none
  416be8:	mov	x8, x21
  416bec:	mov	w2, w20
  416bf0:	mov	w1, w24
  416bf4:	bl	416b08 <ferror@plt+0x13d38>
  416bf8:	ldp	x19, x20, [sp, #16]
  416bfc:	ldp	x21, x22, [sp, #32]
  416c00:	ldp	x23, x24, [sp, #48]
  416c04:	ldp	x29, x30, [sp], #112
  416c08:	ret
  416c0c:	mov	w1, w0
  416c10:	ldr	x0, [x22, #2432]
  416c14:	bl	42bbd0 <ferror@plt+0x28e00>
  416c18:	lsr	x0, x0, #32
  416c1c:	b	416be0 <ferror@plt+0x13e10>
  416c20:	ldr	x0, [x22, #2432]
  416c24:	add	x8, sp, #0x50
  416c28:	ldr	x1, [sp, #72]
  416c2c:	mov	w2, w19
  416c30:	bl	42c50c <ferror@plt+0x2973c>
  416c34:	str	x23, [sp, #96]
  416c38:	cmp	w19, #0x1
  416c3c:	b.hi	416c54 <ferror@plt+0x13e84>  // b.pmore
  416c40:	cbz	w19, 416c68 <ferror@plt+0x13e98>
  416c44:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  416c48:	add	x0, x0, #0x450
  416c4c:	bl	402d80 <gettext@plt>
  416c50:	str	x0, [sp, #80]
  416c54:	ldp	x0, x1, [sp, #80]
  416c58:	stp	x0, x1, [x21]
  416c5c:	ldp	x0, x1, [sp, #96]
  416c60:	stp	x0, x1, [x21, #16]
  416c64:	b	416bf8 <ferror@plt+0x13e28>
  416c68:	mov	x0, #0x0                   	// #0
  416c6c:	b	416c50 <ferror@plt+0x13e80>
  416c70:	stp	x29, x30, [sp, #-80]!
  416c74:	mov	x29, sp
  416c78:	stp	x23, x24, [sp, #48]
  416c7c:	mov	x23, x2
  416c80:	mov	w2, w1
  416c84:	stp	x19, x20, [sp, #16]
  416c88:	mov	w20, #0x1                   	// #1
  416c8c:	mov	x19, x0
  416c90:	stp	x21, x22, [sp, #32]
  416c94:	mov	w22, w3
  416c98:	mov	w3, #0x20                  	// #32
  416c9c:	str	x25, [sp, #64]
  416ca0:	mov	w25, #0xa                   	// #10
  416ca4:	mov	w24, w4
  416ca8:	mov	w21, w5
  416cac:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  416cb0:	add	x1, x1, #0xfbc
  416cb4:	bl	402d90 <fprintf@plt>
  416cb8:	mov	x1, x19
  416cbc:	mov	w0, #0x7c                  	// #124
  416cc0:	bl	4027d0 <fputc@plt>
  416cc4:	cmp	w20, w24
  416cc8:	b.ge	416cf8 <ferror@plt+0x13f28>  // b.tcont
  416ccc:	ldrb	w1, [x23, #7]
  416cd0:	lsl	w1, w20, w1
  416cd4:	add	w1, w1, w22
  416cd8:	add	w20, w20, #0x1
  416cdc:	udiv	w1, w1, w21
  416ce0:	sdiv	w0, w1, w25
  416ce4:	msub	w0, w0, w25, w1
  416ce8:	mov	x1, x19
  416cec:	add	w0, w0, #0x30
  416cf0:	bl	4027d0 <fputc@plt>
  416cf4:	b	416cc4 <ferror@plt+0x13ef4>
  416cf8:	mov	x1, x19
  416cfc:	mov	w0, #0xa                   	// #10
  416d00:	ldp	x19, x20, [sp, #16]
  416d04:	ldp	x21, x22, [sp, #32]
  416d08:	ldp	x23, x24, [sp, #48]
  416d0c:	ldr	x25, [sp, #64]
  416d10:	ldp	x29, x30, [sp], #80
  416d14:	b	4027d0 <fputc@plt>
  416d18:	stp	x29, x30, [sp, #-48]!
  416d1c:	mov	x29, sp
  416d20:	stp	x21, x22, [sp, #32]
  416d24:	mov	x21, x0
  416d28:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  416d2c:	stp	x19, x20, [sp, #16]
  416d30:	mov	x20, #0x0                   	// #0
  416d34:	ldr	x19, [x0, #2440]
  416d38:	add	x22, x19, #0x580
  416d3c:	ldr	x0, [x19, #8]
  416d40:	cbz	x0, 416d60 <ferror@plt+0x13f90>
  416d44:	mov	x1, x21
  416d48:	bl	402ad0 <strcmp@plt>
  416d4c:	cbnz	w0, 416d60 <ferror@plt+0x13f90>
  416d50:	ldr	w0, [x19]
  416d54:	mov	x20, x19
  416d58:	add	w0, w0, #0x1
  416d5c:	str	w0, [x19]
  416d60:	add	x19, x19, #0x58
  416d64:	cmp	x22, x19
  416d68:	b.ne	416d3c <ferror@plt+0x13f6c>  // b.any
  416d6c:	cbz	x20, 416d7c <ferror@plt+0x13fac>
  416d70:	ldr	w0, [x20]
  416d74:	add	w0, w0, #0x1
  416d78:	str	w0, [x20]
  416d7c:	mov	x0, x20
  416d80:	ldp	x19, x20, [sp, #16]
  416d84:	ldp	x21, x22, [sp, #32]
  416d88:	ldp	x29, x30, [sp], #48
  416d8c:	ret
  416d90:	stp	x29, x30, [sp, #-32]!
  416d94:	tst	w0, #0xff
  416d98:	mov	x29, sp
  416d9c:	str	x19, [sp, #16]
  416da0:	mov	x19, x1
  416da4:	b.ne	416dd0 <ferror@plt+0x14000>  // b.any
  416da8:	mov	x0, x19
  416dac:	mov	x1, #0x10                  	// #16
  416db0:	bl	4452a0 <_obstack_memory_used@@Base+0x89c>
  416db4:	mov	x1, #0x0                   	// #0
  416db8:	cmp	x19, x1
  416dbc:	b.eq	416e00 <ferror@plt+0x14030>  // b.none
  416dc0:	lsl	x2, x1, #4
  416dc4:	add	x1, x1, #0x1
  416dc8:	str	wzr, [x0, x2]
  416dcc:	b	416db8 <ferror@plt+0x13fe8>
  416dd0:	lsl	x0, x19, #4
  416dd4:	mov	x3, #0x0                   	// #0
  416dd8:	mov	x2, #0x0                   	// #0
  416ddc:	mov	x1, #0x0                   	// #0
  416de0:	bl	40c0a8 <ferror@plt+0x92d8>
  416de4:	cbnz	x0, 416db4 <ferror@plt+0x13fe4>
  416de8:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  416dec:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  416df0:	add	x2, x2, #0x366
  416df4:	add	x0, x0, #0x374
  416df8:	mov	w1, #0x2b5                 	// #693
  416dfc:	bl	402de0 <ferror@plt+0x10>
  416e00:	ldr	x19, [sp, #16]
  416e04:	ldp	x29, x30, [sp], #32
  416e08:	ret
  416e0c:	stp	x29, x30, [sp, #-48]!
  416e10:	mov	x29, sp
  416e14:	stp	x19, x20, [sp, #16]
  416e18:	mov	x19, x0
  416e1c:	mov	w20, w2
  416e20:	mov	x2, x1
  416e24:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  416e28:	add	x1, x1, #0xca8
  416e2c:	str	x21, [sp, #32]
  416e30:	mov	w21, w3
  416e34:	bl	402d90 <fprintf@plt>
  416e38:	mov	w3, w21
  416e3c:	mov	w2, w20
  416e40:	mov	x0, x19
  416e44:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  416e48:	add	x1, x1, #0xfc0
  416e4c:	bl	402d90 <fprintf@plt>
  416e50:	mov	x1, x19
  416e54:	mov	w0, #0xa                   	// #10
  416e58:	ldp	x19, x20, [sp, #16]
  416e5c:	ldr	x21, [sp, #32]
  416e60:	ldp	x29, x30, [sp], #48
  416e64:	b	4027d0 <fputc@plt>
  416e68:	mov	w1, #0x1                   	// #1
  416e6c:	str	wzr, [x0]
  416e70:	stp	xzr, xzr, [x0, #8]
  416e74:	stp	xzr, xzr, [x0, #24]
  416e78:	stp	xzr, xzr, [x0, #40]
  416e7c:	stp	xzr, xzr, [x0, #56]
  416e80:	strb	w1, [x0, #72]
  416e84:	str	xzr, [x0, #80]
  416e88:	ret
  416e8c:	stp	x29, x30, [sp, #-32]!
  416e90:	mov	x29, sp
  416e94:	str	x19, [sp, #16]
  416e98:	adrp	x19, 495000 <_obstack_memory_used@@Base+0x505fc>
  416e9c:	add	x19, x19, #0x980
  416ea0:	ldr	x0, [x19, #8]
  416ea4:	cbnz	x0, 416edc <ferror@plt+0x1410c>
  416ea8:	mov	x0, #0x588                 	// #1416
  416eac:	bl	445a20 <_obstack_memory_used@@Base+0x101c>
  416eb0:	mov	x3, x0
  416eb4:	mov	x1, x0
  416eb8:	mov	x0, #0x10                  	// #16
  416ebc:	add	x2, x1, #0x588
  416ec0:	str	x0, [x3], #8
  416ec4:	mov	x0, x3
  416ec8:	bl	416e68 <ferror@plt+0x14098>
  416ecc:	add	x0, x0, #0x58
  416ed0:	cmp	x2, x0
  416ed4:	b.ne	416ec8 <ferror@plt+0x140f8>  // b.any
  416ed8:	str	x3, [x19, #8]
  416edc:	ldr	x19, [sp, #16]
  416ee0:	ldp	x29, x30, [sp], #32
  416ee4:	ret
  416ee8:	stp	x29, x30, [sp, #-32]!
  416eec:	mov	x29, sp
  416ef0:	str	x19, [sp, #16]
  416ef4:	cbnz	x0, 416f10 <ferror@plt+0x14140>
  416ef8:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  416efc:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  416f00:	add	x2, x2, #0xfe7
  416f04:	add	x0, x0, #0xfaa
  416f08:	mov	w1, #0x133                 	// #307
  416f0c:	bl	402de0 <ferror@plt+0x10>
  416f10:	mov	x19, x0
  416f14:	bl	416e8c <ferror@plt+0x140bc>
  416f18:	mov	x0, x19
  416f1c:	bl	416d18 <ferror@plt+0x13f48>
  416f20:	mov	x19, x0
  416f24:	cbz	x0, 416f60 <ferror@plt+0x14190>
  416f28:	ldr	x0, [x0, #16]
  416f2c:	str	xzr, [x19, #8]
  416f30:	cbz	x0, 416f38 <ferror@plt+0x14168>
  416f34:	bl	402830 <fclose@plt>
  416f38:	ldr	x0, [x19, #80]
  416f3c:	str	xzr, [x19, #16]
  416f40:	stp	xzr, xzr, [x19, #40]
  416f44:	str	xzr, [x19, #56]
  416f48:	cbz	x0, 416f50 <ferror@plt+0x14180>
  416f4c:	str	wzr, [x0, #4]
  416f50:	mov	w0, #0x1                   	// #1
  416f54:	str	wzr, [x19]
  416f58:	str	xzr, [x19, #64]
  416f5c:	strb	w0, [x19, #72]
  416f60:	ldr	x19, [sp, #16]
  416f64:	ldp	x29, x30, [sp], #32
  416f68:	ret
  416f6c:	stp	x29, x30, [sp, #-32]!
  416f70:	mov	x29, sp
  416f74:	str	x19, [sp, #16]
  416f78:	mov	x19, x0
  416f7c:	ldr	x0, [x0, #16]
  416f80:	cbz	x0, 416f8c <ferror@plt+0x141bc>
  416f84:	bl	402830 <fclose@plt>
  416f88:	str	xzr, [x19, #16]
  416f8c:	ldr	x0, [x19, #24]
  416f90:	cbz	x0, 416f98 <ferror@plt+0x141c8>
  416f94:	bl	402b30 <free@plt>
  416f98:	ldr	x0, [x19, #80]
  416f9c:	cbz	x0, 416fac <ferror@plt+0x141dc>
  416fa0:	ldrsb	w1, [x0, #3]
  416fa4:	tbz	w1, #31, 416fb8 <ferror@plt+0x141e8>
  416fa8:	str	wzr, [x0, #4]
  416fac:	ldr	x19, [sp, #16]
  416fb0:	ldp	x29, x30, [sp], #32
  416fb4:	ret
  416fb8:	ldr	x19, [sp, #16]
  416fbc:	ldp	x29, x30, [sp], #32
  416fc0:	b	402b30 <free@plt>
  416fc4:	stp	x29, x30, [sp, #-32]!
  416fc8:	mov	x29, sp
  416fcc:	stp	x19, x20, [sp, #16]
  416fd0:	adrp	x20, 495000 <_obstack_memory_used@@Base+0x505fc>
  416fd4:	add	x20, x20, #0x980
  416fd8:	ldr	x0, [x20, #8]
  416fdc:	cbz	x0, 417024 <ferror@plt+0x14254>
  416fe0:	ldur	x19, [x0, #-8]
  416fe4:	mov	x1, #0x58                  	// #88
  416fe8:	madd	x19, x19, x1, x0
  416fec:	ldr	x0, [x20, #8]
  416ff0:	cmp	x0, x19
  416ff4:	b.eq	417008 <ferror@plt+0x14238>  // b.none
  416ff8:	sub	x19, x19, #0x58
  416ffc:	mov	x0, x19
  417000:	bl	416f6c <ferror@plt+0x1419c>
  417004:	b	416fec <ferror@plt+0x1421c>
  417008:	mov	x0, x19
  41700c:	mov	x2, #0x58                  	// #88
  417010:	ldr	x1, [x0, #-8]!
  417014:	mul	x1, x1, x2
  417018:	add	x1, x1, #0x8
  41701c:	bl	445780 <_obstack_memory_used@@Base+0xd7c>
  417020:	str	xzr, [x20, #8]
  417024:	ldp	x19, x20, [sp, #16]
  417028:	ldp	x29, x30, [sp], #32
  41702c:	ret
  417030:	stp	x29, x30, [sp, #-32]!
  417034:	mov	w1, w0
  417038:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  41703c:	mov	x29, sp
  417040:	ldr	x0, [x0, #2432]
  417044:	add	x3, sp, #0x18
  417048:	mov	w2, #0x1                   	// #1
  41704c:	str	xzr, [sp, #24]
  417050:	bl	42bec4 <ferror@plt+0x290f4>
  417054:	cmp	w0, #0x1
  417058:	cset	w0, eq  // eq = none
  41705c:	ldp	x29, x30, [sp], #32
  417060:	ret
  417064:	stp	x29, x30, [sp, #-16]!
  417068:	mov	w2, #0x0                   	// #0
  41706c:	mov	w1, #0x1                   	// #1
  417070:	mov	x29, sp
  417074:	bl	416b08 <ferror@plt+0x13d38>
  417078:	ldp	x29, x30, [sp], #16
  41707c:	ret
  417080:	stp	x29, x30, [sp, #-112]!
  417084:	mov	x29, sp
  417088:	stp	x19, x20, [sp, #16]
  41708c:	stp	x21, x22, [sp, #32]
  417090:	mov	x21, x0
  417094:	str	x23, [sp, #48]
  417098:	cbnz	x0, 4170cc <ferror@plt+0x142fc>
  41709c:	mov	x0, x21
  4170a0:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4170a4:	add	x1, x1, #0x45
  4170a8:	bl	402870 <fopen@plt>
  4170ac:	mov	x20, x0
  4170b0:	cbnz	x0, 4170e4 <ferror@plt+0x14314>
  4170b4:	mov	x0, x20
  4170b8:	ldp	x19, x20, [sp, #16]
  4170bc:	ldp	x21, x22, [sp, #32]
  4170c0:	ldr	x23, [sp, #48]
  4170c4:	ldp	x29, x30, [sp], #112
  4170c8:	ret
  4170cc:	bl	416e8c <ferror@plt+0x140bc>
  4170d0:	mov	x0, x21
  4170d4:	bl	416d18 <ferror@plt+0x13f48>
  4170d8:	mov	x20, x0
  4170dc:	cbnz	x0, 4170b4 <ferror@plt+0x142e4>
  4170e0:	b	41709c <ferror@plt+0x142cc>
  4170e4:	bl	416e8c <ferror@plt+0x140bc>
  4170e8:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  4170ec:	add	x1, x0, #0x980
  4170f0:	mov	x23, x0
  4170f4:	ldr	x19, [x1, #8]
  4170f8:	mov	x1, x19
  4170fc:	add	x3, x19, #0x580
  417100:	ldr	w22, [x1], #88
  417104:	ldr	w0, [x1]
  417108:	ldr	w4, [x19]
  41710c:	ldr	x2, [x1, #8]
  417110:	cmp	w0, w4
  417114:	b.cc	4171b0 <ferror@plt+0x143e0>  // b.lo, b.ul, b.last
  417118:	ldr	x4, [x19, #8]
  41711c:	cbz	x4, 417128 <ferror@plt+0x14358>
  417120:	cmp	x2, #0x0
  417124:	csel	x19, x19, x1, ne  // ne = any
  417128:	cmp	w22, w0
  41712c:	csel	w22, w22, w0, cs  // cs = hs, nlast
  417130:	cbz	x2, 417140 <ferror@plt+0x14370>
  417134:	add	x1, x1, #0x58
  417138:	cmp	x3, x1
  41713c:	b.ne	417104 <ferror@plt+0x14334>  // b.any
  417140:	ldr	x0, [x19, #16]
  417144:	str	x21, [x19, #8]
  417148:	cbz	x0, 417150 <ferror@plt+0x14380>
  41714c:	bl	402830 <fclose@plt>
  417150:	ldr	x0, [x19, #80]
  417154:	str	x20, [x19, #16]
  417158:	stp	xzr, xzr, [x19, #40]
  41715c:	str	xzr, [x19, #56]
  417160:	cbz	x0, 417168 <ferror@plt+0x14398>
  417164:	str	wzr, [x0, #4]
  417168:	ldr	x0, [x23, #2432]
  41716c:	add	w22, w22, #0x1
  417170:	str	w22, [x19]
  417174:	add	x2, sp, #0x4c
  417178:	mov	x1, x21
  41717c:	str	wzr, [sp, #76]
  417180:	bl	42c8a4 <ferror@plt+0x29ad4>
  417184:	tst	w0, #0xff
  417188:	b.eq	4171d8 <ferror@plt+0x14408>  // b.none
  41718c:	ldr	w0, [sp, #76]
  417190:	cmp	w0, #0x1
  417194:	b.hi	4171b8 <ferror@plt+0x143e8>  // b.pmore
  417198:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41719c:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4171a0:	add	x2, x2, #0x12
  4171a4:	add	x0, x0, #0xfaa
  4171a8:	mov	w1, #0x107                 	// #263
  4171ac:	bl	402de0 <ferror@plt+0x10>
  4171b0:	mov	x19, x1
  4171b4:	b	417128 <ferror@plt+0x14358>
  4171b8:	add	x8, sp, #0x50
  4171bc:	bl	417064 <ferror@plt+0x14294>
  4171c0:	ldrsw	x0, [sp, #88]
  4171c4:	mov	x20, x19
  4171c8:	str	x0, [x19, #64]
  4171cc:	mov	w0, #0x1                   	// #1
  4171d0:	strb	w0, [x19, #72]
  4171d4:	b	4170b4 <ferror@plt+0x142e4>
  4171d8:	mov	x0, #0x0                   	// #0
  4171dc:	b	4171c4 <ferror@plt+0x143f4>
  4171e0:	stp	x29, x30, [sp, #-16]!
  4171e4:	mov	x29, sp
  4171e8:	bl	417080 <ferror@plt+0x142b0>
  4171ec:	cbz	x0, 4171fc <ferror@plt+0x1442c>
  4171f0:	ldrb	w0, [x0, #72]
  4171f4:	ldp	x29, x30, [sp], #16
  4171f8:	ret
  4171fc:	mov	w0, #0x0                   	// #0
  417200:	b	4171f4 <ferror@plt+0x14424>
  417204:	stp	x29, x30, [sp, #-16]!
  417208:	mov	w2, w1
  41720c:	mov	w1, #0x0                   	// #0
  417210:	mov	x29, sp
  417214:	bl	416b08 <ferror@plt+0x13d38>
  417218:	ldp	x29, x30, [sp], #16
  41721c:	ret
  417220:	stp	x29, x30, [sp, #-16]!
  417224:	mov	x29, sp
  417228:	bl	417204 <ferror@plt+0x14434>
  41722c:	ldp	x29, x30, [sp], #16
  417230:	ret
  417234:	stp	x29, x30, [sp, #-32]!
  417238:	mov	w1, w0
  41723c:	mov	x29, sp
  417240:	stp	x19, x20, [sp, #16]
  417244:	adrp	x20, 495000 <_obstack_memory_used@@Base+0x505fc>
  417248:	mov	w19, w0
  41724c:	ldr	x0, [x20, #2432]
  417250:	bl	42be34 <ferror@plt+0x29064>
  417254:	cbz	w0, 417274 <ferror@plt+0x144a4>
  417258:	ldr	x0, [x20, #2432]
  41725c:	mov	w1, w19
  417260:	ldp	x19, x20, [sp, #16]
  417264:	mov	x3, #0x0                   	// #0
  417268:	ldp	x29, x30, [sp], #32
  41726c:	mov	w2, #0x0                   	// #0
  417270:	b	42bec4 <ferror@plt+0x290f4>
  417274:	mov	w0, w19
  417278:	ldp	x19, x20, [sp, #16]
  41727c:	ldp	x29, x30, [sp], #32
  417280:	ret
  417284:	mov	w1, w0
  417288:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  41728c:	mov	x3, #0x0                   	// #0
  417290:	mov	w2, #0x0                   	// #0
  417294:	ldr	x0, [x0, #2432]
  417298:	b	42bec4 <ferror@plt+0x290f4>
  41729c:	stp	x29, x30, [sp, #-48]!
  4172a0:	mov	x29, sp
  4172a4:	stp	x19, x20, [sp, #16]
  4172a8:	adrp	x19, 495000 <_obstack_memory_used@@Base+0x505fc>
  4172ac:	stp	x21, x22, [sp, #32]
  4172b0:	mov	w21, w1
  4172b4:	mov	w1, w0
  4172b8:	ldr	x0, [x19, #2432]
  4172bc:	mov	w22, w2
  4172c0:	bl	42bcb4 <ferror@plt+0x28ee4>
  4172c4:	mov	w20, w0
  4172c8:	ldr	x0, [x19, #2432]
  4172cc:	mov	w1, w21
  4172d0:	bl	42bbd0 <ferror@plt+0x28e00>
  4172d4:	mov	x21, x0
  4172d8:	ldr	x0, [x19, #2432]
  4172dc:	mov	w1, w22
  4172e0:	bl	42bbd0 <ferror@plt+0x28e00>
  4172e4:	bfxil	x0, x21, #0, #32
  4172e8:	mov	x2, x0
  4172ec:	mov	w1, w20
  4172f0:	ldr	x0, [x19, #2432]
  4172f4:	mov	x3, #0x0                   	// #0
  4172f8:	ldp	x19, x20, [sp, #16]
  4172fc:	ldp	x21, x22, [sp, #32]
  417300:	ldp	x29, x30, [sp], #48
  417304:	b	42b9d0 <ferror@plt+0x28c00>
  417308:	stp	x29, x30, [sp, #-32]!
  41730c:	mov	x29, sp
  417310:	stp	x19, x20, [sp, #16]
  417314:	adrp	x20, 495000 <_obstack_memory_used@@Base+0x505fc>
  417318:	mov	x19, x1
  41731c:	mov	w1, w0
  417320:	ldr	x0, [x20, #2432]
  417324:	bl	42bcb4 <ferror@plt+0x28ee4>
  417328:	mov	w1, w0
  41732c:	mov	x2, x19
  417330:	mov	x3, #0x0                   	// #0
  417334:	ldr	x0, [x20, #2432]
  417338:	ldp	x19, x20, [sp, #16]
  41733c:	ldp	x29, x30, [sp], #32
  417340:	b	42b9d0 <ferror@plt+0x28c00>
  417344:	stp	x29, x30, [sp, #-176]!
  417348:	mov	x29, sp
  41734c:	stp	x21, x22, [sp, #32]
  417350:	adrp	x22, 495000 <_obstack_memory_used@@Base+0x505fc>
  417354:	add	x1, sp, #0x48
  417358:	ldr	x0, [x22, #2432]
  41735c:	stp	x19, x20, [sp, #16]
  417360:	adrp	x19, 495000 <_obstack_memory_used@@Base+0x505fc>
  417364:	str	x23, [sp, #48]
  417368:	stp	xzr, xzr, [sp, #72]
  41736c:	stp	xzr, xzr, [sp, #88]
  417370:	stp	xzr, xzr, [sp, #104]
  417374:	stp	xzr, xzr, [sp, #120]
  417378:	stp	xzr, xzr, [sp, #136]
  41737c:	stp	xzr, xzr, [sp, #152]
  417380:	str	xzr, [sp, #168]
  417384:	bl	42c95c <ferror@plt+0x29b8c>
  417388:	ldp	x2, x0, [sp, #128]
  41738c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  417390:	ldr	x21, [sp, #88]
  417394:	add	x1, x1, #0x22
  417398:	ldr	x20, [sp, #144]
  41739c:	add	x21, x21, x2
  4173a0:	ldr	x2, [sp, #96]
  4173a4:	add	x23, x0, x20
  4173a8:	add	x21, x21, x20
  4173ac:	add	x0, x0, x2
  4173b0:	add	x20, x0, x20
  4173b4:	ldr	x0, [x19, #1440]
  4173b8:	ldr	x2, [sp, #104]
  4173bc:	bl	402d90 <fprintf@plt>
  4173c0:	ldr	x0, [sp, #104]
  4173c4:	cbz	x0, 4173e0 <ferror@plt+0x14610>
  4173c8:	ldr	x2, [sp, #112]
  4173cc:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  4173d0:	add	x1, x1, #0x57
  4173d4:	sdiv	x2, x2, x0
  4173d8:	ldr	x0, [x19, #1440]
  4173dc:	bl	402d90 <fprintf@plt>
  4173e0:	ldr	x1, [x19, #1440]
  4173e4:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  4173e8:	add	x0, x0, #0x8c
  4173ec:	bl	402710 <fputs@plt>
  4173f0:	ldr	x2, [sp, #80]
  4173f4:	mov	x1, #0x27ff                	// #10239
  4173f8:	ldr	x0, [x19, #1440]
  4173fc:	cmp	x2, x1
  417400:	b.gt	417660 <ferror@plt+0x14890>
  417404:	mov	w3, #0x20                  	// #32
  417408:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41740c:	add	x1, x1, #0xc4
  417410:	bl	402d90 <fprintf@plt>
  417414:	ldr	x2, [sp, #96]
  417418:	mov	x1, #0x27ff                	// #10239
  41741c:	ldr	x0, [x19, #1440]
  417420:	cmp	x2, x1
  417424:	b.gt	417684 <ferror@plt+0x148b4>
  417428:	mov	w3, #0x20                  	// #32
  41742c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  417430:	add	x1, x1, #0xf1
  417434:	bl	402d90 <fprintf@plt>
  417438:	ldr	x2, [sp, #72]
  41743c:	mov	x1, #0x27ff                	// #10239
  417440:	ldr	x0, [x19, #1440]
  417444:	cmp	x2, x1
  417448:	b.gt	4176a8 <ferror@plt+0x148d8>
  41744c:	mov	w3, #0x20                  	// #32
  417450:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  417454:	add	x1, x1, #0x11e
  417458:	bl	402d90 <fprintf@plt>
  41745c:	ldr	x2, [sp, #88]
  417460:	mov	x1, #0x27ff                	// #10239
  417464:	ldr	x0, [x19, #1440]
  417468:	cmp	x2, x1
  41746c:	b.gt	4176cc <ferror@plt+0x148fc>
  417470:	mov	w3, #0x20                  	// #32
  417474:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  417478:	add	x1, x1, #0x14b
  41747c:	bl	402d90 <fprintf@plt>
  417480:	ldr	x2, [sp, #120]
  417484:	mov	x1, #0x27ff                	// #10239
  417488:	ldr	x0, [x19, #1440]
  41748c:	cmp	x2, x1
  417490:	b.gt	4176f0 <ferror@plt+0x14920>
  417494:	mov	w3, #0x20                  	// #32
  417498:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41749c:	add	x1, x1, #0x178
  4174a0:	bl	402d90 <fprintf@plt>
  4174a4:	ldr	x2, [sp, #136]
  4174a8:	mov	x1, #0x27ff                	// #10239
  4174ac:	ldr	x0, [x19, #1440]
  4174b0:	cmp	x2, x1
  4174b4:	b.gt	417714 <ferror@plt+0x14944>
  4174b8:	mov	w3, #0x20                  	// #32
  4174bc:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  4174c0:	add	x1, x1, #0x1a5
  4174c4:	bl	402d90 <fprintf@plt>
  4174c8:	ldr	x2, [sp, #144]
  4174cc:	mov	x1, #0x27ff                	// #10239
  4174d0:	ldr	x0, [x19, #1440]
  4174d4:	cmp	x2, x1
  4174d8:	b.gt	417738 <ferror@plt+0x14968>
  4174dc:	mov	w3, #0x20                  	// #32
  4174e0:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  4174e4:	add	x1, x1, #0x1d2
  4174e8:	bl	402d90 <fprintf@plt>
  4174ec:	mov	x1, #0x27ff                	// #10239
  4174f0:	cmp	x23, x1
  4174f4:	ldr	x0, [x19, #1440]
  4174f8:	b.le	417768 <ferror@plt+0x14998>
  4174fc:	mov	w1, #0x9fffff              	// #10485759
  417500:	cmp	x23, x1
  417504:	b.gt	41775c <ferror@plt+0x1498c>
  417508:	asr	x2, x23, #10
  41750c:	mov	w3, #0x6b                  	// #107
  417510:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  417514:	add	x1, x1, #0x1ff
  417518:	bl	402d90 <fprintf@plt>
  41751c:	ldr	x2, [sp, #152]
  417520:	mov	x1, #0x27ff                	// #10239
  417524:	ldr	x0, [x19, #1440]
  417528:	cmp	x2, x1
  41752c:	b.gt	417774 <ferror@plt+0x149a4>
  417530:	mov	w3, #0x20                  	// #32
  417534:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  417538:	add	x1, x1, #0x22c
  41753c:	bl	402d90 <fprintf@plt>
  417540:	mov	x1, #0x27ff                	// #10239
  417544:	cmp	x21, x1
  417548:	ldr	x0, [x19, #1440]
  41754c:	b.le	4177a4 <ferror@plt+0x149d4>
  417550:	mov	w1, #0x9fffff              	// #10485759
  417554:	cmp	x21, x1
  417558:	b.gt	417798 <ferror@plt+0x149c8>
  41755c:	asr	x2, x21, #10
  417560:	mov	w3, #0x6b                  	// #107
  417564:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  417568:	add	x1, x1, #0x259
  41756c:	bl	402d90 <fprintf@plt>
  417570:	mov	x1, #0x27ff                	// #10239
  417574:	cmp	x20, x1
  417578:	ldr	x0, [x19, #1440]
  41757c:	b.le	4177bc <ferror@plt+0x149ec>
  417580:	mov	w1, #0x9fffff              	// #10485759
  417584:	cmp	x20, x1
  417588:	b.gt	4177b0 <ferror@plt+0x149e0>
  41758c:	asr	x2, x20, #10
  417590:	mov	w3, #0x6b                  	// #107
  417594:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  417598:	add	x1, x1, #0x286
  41759c:	bl	402d90 <fprintf@plt>
  4175a0:	ldr	x2, [sp, #160]
  4175a4:	mov	x1, #0x27ff                	// #10239
  4175a8:	ldr	x0, [x19, #1440]
  4175ac:	cmp	x2, x1
  4175b0:	b.gt	4177c8 <ferror@plt+0x149f8>
  4175b4:	mov	w3, #0x20                  	// #32
  4175b8:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  4175bc:	add	x1, x1, #0x2b3
  4175c0:	bl	402d90 <fprintf@plt>
  4175c4:	ldr	x2, [sp, #168]
  4175c8:	mov	x1, #0x27ff                	// #10239
  4175cc:	ldr	x0, [x19, #1440]
  4175d0:	cmp	x2, x1
  4175d4:	b.gt	4177ec <ferror@plt+0x14a1c>
  4175d8:	mov	w3, #0x20                  	// #32
  4175dc:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  4175e0:	add	x1, x1, #0x2e0
  4175e4:	bl	402d90 <fprintf@plt>
  4175e8:	ldr	x1, [x22, #2432]
  4175ec:	ldr	x0, [x19, #1440]
  4175f0:	ldr	w2, [x1, #124]
  4175f4:	mov	w1, #0x27ff                	// #10239
  4175f8:	cmp	w2, w1
  4175fc:	b.hi	417810 <ferror@plt+0x14a40>  // b.pmore
  417600:	mov	w2, w2
  417604:	mov	w3, #0x20                  	// #32
  417608:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41760c:	add	x1, x1, #0x30d
  417610:	bl	402d90 <fprintf@plt>
  417614:	ldr	x1, [x22, #2432]
  417618:	ldr	x0, [x19, #1440]
  41761c:	ldr	w2, [x1, #128]
  417620:	mov	w1, #0x27ff                	// #10239
  417624:	cmp	w2, w1
  417628:	b.hi	417834 <ferror@plt+0x14a64>  // b.pmore
  41762c:	mov	w2, w2
  417630:	mov	w3, #0x20                  	// #32
  417634:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  417638:	add	x1, x1, #0x33a
  41763c:	bl	402d90 <fprintf@plt>
  417640:	ldr	x1, [x19, #1440]
  417644:	mov	w0, #0xa                   	// #10
  417648:	bl	4027d0 <fputc@plt>
  41764c:	ldp	x19, x20, [sp, #16]
  417650:	ldp	x21, x22, [sp, #32]
  417654:	ldr	x23, [sp, #48]
  417658:	ldp	x29, x30, [sp], #176
  41765c:	ret
  417660:	mov	w1, #0x9fffff              	// #10485759
  417664:	cmp	x2, x1
  417668:	b.gt	417678 <ferror@plt+0x148a8>
  41766c:	asr	x2, x2, #10
  417670:	mov	w3, #0x6b                  	// #107
  417674:	b	417408 <ferror@plt+0x14638>
  417678:	asr	x2, x2, #20
  41767c:	mov	w3, #0x4d                  	// #77
  417680:	b	417408 <ferror@plt+0x14638>
  417684:	mov	w1, #0x9fffff              	// #10485759
  417688:	cmp	x2, x1
  41768c:	b.gt	41769c <ferror@plt+0x148cc>
  417690:	asr	x2, x2, #10
  417694:	mov	w3, #0x6b                  	// #107
  417698:	b	41742c <ferror@plt+0x1465c>
  41769c:	asr	x2, x2, #20
  4176a0:	mov	w3, #0x4d                  	// #77
  4176a4:	b	41742c <ferror@plt+0x1465c>
  4176a8:	mov	w1, #0x9fffff              	// #10485759
  4176ac:	cmp	x2, x1
  4176b0:	b.gt	4176c0 <ferror@plt+0x148f0>
  4176b4:	asr	x2, x2, #10
  4176b8:	mov	w3, #0x6b                  	// #107
  4176bc:	b	417450 <ferror@plt+0x14680>
  4176c0:	asr	x2, x2, #20
  4176c4:	mov	w3, #0x4d                  	// #77
  4176c8:	b	417450 <ferror@plt+0x14680>
  4176cc:	mov	w1, #0x9fffff              	// #10485759
  4176d0:	cmp	x2, x1
  4176d4:	b.gt	4176e4 <ferror@plt+0x14914>
  4176d8:	asr	x2, x2, #10
  4176dc:	mov	w3, #0x6b                  	// #107
  4176e0:	b	417474 <ferror@plt+0x146a4>
  4176e4:	asr	x2, x2, #20
  4176e8:	mov	w3, #0x4d                  	// #77
  4176ec:	b	417474 <ferror@plt+0x146a4>
  4176f0:	mov	w1, #0x9fffff              	// #10485759
  4176f4:	cmp	x2, x1
  4176f8:	b.gt	417708 <ferror@plt+0x14938>
  4176fc:	asr	x2, x2, #10
  417700:	mov	w3, #0x6b                  	// #107
  417704:	b	417498 <ferror@plt+0x146c8>
  417708:	asr	x2, x2, #20
  41770c:	mov	w3, #0x4d                  	// #77
  417710:	b	417498 <ferror@plt+0x146c8>
  417714:	mov	w1, #0x9fffff              	// #10485759
  417718:	cmp	x2, x1
  41771c:	b.gt	41772c <ferror@plt+0x1495c>
  417720:	asr	x2, x2, #10
  417724:	mov	w3, #0x6b                  	// #107
  417728:	b	4174bc <ferror@plt+0x146ec>
  41772c:	asr	x2, x2, #20
  417730:	mov	w3, #0x4d                  	// #77
  417734:	b	4174bc <ferror@plt+0x146ec>
  417738:	mov	w1, #0x9fffff              	// #10485759
  41773c:	cmp	x2, x1
  417740:	b.gt	417750 <ferror@plt+0x14980>
  417744:	asr	x2, x2, #10
  417748:	mov	w3, #0x6b                  	// #107
  41774c:	b	4174e0 <ferror@plt+0x14710>
  417750:	asr	x2, x2, #20
  417754:	mov	w3, #0x4d                  	// #77
  417758:	b	4174e0 <ferror@plt+0x14710>
  41775c:	asr	x2, x23, #20
  417760:	mov	w3, #0x4d                  	// #77
  417764:	b	417510 <ferror@plt+0x14740>
  417768:	mov	x2, x23
  41776c:	mov	w3, #0x20                  	// #32
  417770:	b	417510 <ferror@plt+0x14740>
  417774:	mov	w1, #0x9fffff              	// #10485759
  417778:	cmp	x2, x1
  41777c:	b.gt	41778c <ferror@plt+0x149bc>
  417780:	asr	x2, x2, #10
  417784:	mov	w3, #0x6b                  	// #107
  417788:	b	417534 <ferror@plt+0x14764>
  41778c:	asr	x2, x2, #20
  417790:	mov	w3, #0x4d                  	// #77
  417794:	b	417534 <ferror@plt+0x14764>
  417798:	asr	x2, x21, #20
  41779c:	mov	w3, #0x4d                  	// #77
  4177a0:	b	417564 <ferror@plt+0x14794>
  4177a4:	mov	x2, x21
  4177a8:	mov	w3, #0x20                  	// #32
  4177ac:	b	417564 <ferror@plt+0x14794>
  4177b0:	asr	x2, x20, #20
  4177b4:	mov	w3, #0x4d                  	// #77
  4177b8:	b	417594 <ferror@plt+0x147c4>
  4177bc:	mov	x2, x20
  4177c0:	mov	w3, #0x20                  	// #32
  4177c4:	b	417594 <ferror@plt+0x147c4>
  4177c8:	mov	w1, #0x9fffff              	// #10485759
  4177cc:	cmp	x2, x1
  4177d0:	b.gt	4177e0 <ferror@plt+0x14a10>
  4177d4:	asr	x2, x2, #10
  4177d8:	mov	w3, #0x6b                  	// #107
  4177dc:	b	4175b8 <ferror@plt+0x147e8>
  4177e0:	asr	x2, x2, #20
  4177e4:	mov	w3, #0x4d                  	// #77
  4177e8:	b	4175b8 <ferror@plt+0x147e8>
  4177ec:	mov	w1, #0x9fffff              	// #10485759
  4177f0:	cmp	x2, x1
  4177f4:	b.gt	417804 <ferror@plt+0x14a34>
  4177f8:	asr	x2, x2, #10
  4177fc:	mov	w3, #0x6b                  	// #107
  417800:	b	4175dc <ferror@plt+0x1480c>
  417804:	asr	x2, x2, #20
  417808:	mov	w3, #0x4d                  	// #77
  41780c:	b	4175dc <ferror@plt+0x1480c>
  417810:	mov	w1, #0x9fffff              	// #10485759
  417814:	cmp	w2, w1
  417818:	b.hi	417828 <ferror@plt+0x14a58>  // b.pmore
  41781c:	lsr	w2, w2, #10
  417820:	mov	w3, #0x6b                  	// #107
  417824:	b	417608 <ferror@plt+0x14838>
  417828:	lsr	w2, w2, #20
  41782c:	mov	w3, #0x4d                  	// #77
  417830:	b	417608 <ferror@plt+0x14838>
  417834:	mov	w1, #0x9fffff              	// #10485759
  417838:	cmp	w2, w1
  41783c:	b.hi	41784c <ferror@plt+0x14a7c>  // b.pmore
  417840:	lsr	w2, w2, #10
  417844:	mov	w3, #0x6b                  	// #107
  417848:	b	417634 <ferror@plt+0x14864>
  41784c:	lsr	w2, w2, #20
  417850:	mov	w3, #0x4d                  	// #77
  417854:	b	417634 <ferror@plt+0x14864>
  417858:	stp	x29, x30, [sp, #-48]!
  41785c:	mov	x3, #0x0                   	// #0
  417860:	mov	x29, sp
  417864:	stp	x19, x20, [sp, #16]
  417868:	mov	x20, x0
  41786c:	mov	w19, w1
  417870:	mov	x1, #0x0                   	// #0
  417874:	str	w19, [x20]
  417878:	sbfiz	x0, x19, #2, #32
  41787c:	str	x21, [sp, #32]
  417880:	mov	x21, x2
  417884:	mov	x2, #0x0                   	// #0
  417888:	bl	40c080 <ferror@plt+0x92b0>
  41788c:	mov	x3, #0x0                   	// #0
  417890:	str	x0, [x20, #8]
  417894:	cmp	w19, w3
  417898:	b.le	4178ac <ferror@plt+0x14adc>
  41789c:	ldr	w1, [x21, x3, lsl #2]
  4178a0:	str	w1, [x0, x3, lsl #2]
  4178a4:	add	x3, x3, #0x1
  4178a8:	b	417894 <ferror@plt+0x14ac4>
  4178ac:	ldp	x19, x20, [sp, #16]
  4178b0:	ldr	x21, [sp, #32]
  4178b4:	ldp	x29, x30, [sp], #48
  4178b8:	ret
  4178bc:	stp	x29, x30, [sp, #-64]!
  4178c0:	mov	x3, #0x1                   	// #1
  4178c4:	mov	x2, #0x0                   	// #0
  4178c8:	mov	x29, sp
  4178cc:	adrp	x1, 418000 <ferror@plt+0x15230>
  4178d0:	add	x1, x1, #0x974
  4178d4:	stp	x19, x20, [sp, #16]
  4178d8:	stp	x21, x22, [sp, #32]
  4178dc:	mov	x21, x0
  4178e0:	mov	x0, #0x30                  	// #48
  4178e4:	str	x23, [sp, #48]
  4178e8:	bl	40c080 <ferror@plt+0x92b0>
  4178ec:	mov	x19, x0
  4178f0:	mov	w23, #0x1                   	// #1
  4178f4:	strb	w23, [x0, #44]
  4178f8:	mov	x0, #0x40                  	// #64
  4178fc:	stp	xzr, xzr, [x19, #16]
  417900:	str	xzr, [x19, #32]
  417904:	bl	40bcbc <ferror@plt+0x8eec>
  417908:	mov	w20, w0
  41790c:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  417910:	add	x0, x0, #0x1b0
  417914:	ubfiz	x1, x20, #4, #32
  417918:	ldr	w22, [x0, x1]
  41791c:	mov	w0, w23
  417920:	mov	x1, x22
  417924:	bl	416d90 <ferror@plt+0x13fc0>
  417928:	ldr	x23, [sp, #48]
  41792c:	str	x19, [x21]
  417930:	stp	x0, x22, [x19]
  417934:	str	w20, [x19, #40]
  417938:	ldp	x19, x20, [sp, #16]
  41793c:	ldp	x21, x22, [sp, #32]
  417940:	ldp	x29, x30, [sp], #64
  417944:	ret
  417948:	stp	x29, x30, [sp, #-32]!
  41794c:	mov	w1, w0
  417950:	mov	x3, #0x0                   	// #0
  417954:	mov	x29, sp
  417958:	str	x19, [sp, #16]
  41795c:	adrp	x19, 495000 <_obstack_memory_used@@Base+0x505fc>
  417960:	mov	w2, #0x1                   	// #1
  417964:	ldr	x0, [x19, #2432]
  417968:	bl	42bec4 <ferror@plt+0x290f4>
  41796c:	mov	w1, w0
  417970:	ldr	x0, [x19, #2432]
  417974:	bl	42bbd0 <ferror@plt+0x28e00>
  417978:	ldr	x19, [sp, #16]
  41797c:	ldp	x29, x30, [sp], #32
  417980:	ret
  417984:	stp	x29, x30, [sp, #-80]!
  417988:	mov	x29, sp
  41798c:	stp	x19, x20, [sp, #16]
  417990:	stp	x21, x22, [sp, #32]
  417994:	stp	x23, x24, [sp, #48]
  417998:	stp	x25, x26, [sp, #64]
  41799c:	cbnz	x2, 4179b8 <ferror@plt+0x14be8>
  4179a0:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  4179a4:	add	x2, x2, #0x367
  4179a8:	mov	w1, #0x50d                 	// #1293
  4179ac:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4179b0:	add	x0, x0, #0xfaa
  4179b4:	bl	402de0 <ferror@plt+0x10>
  4179b8:	mov	x22, x3
  4179bc:	cbnz	x3, 4179d0 <ferror@plt+0x14c00>
  4179c0:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  4179c4:	mov	w1, #0x50e                 	// #1294
  4179c8:	add	x2, x2, #0x367
  4179cc:	b	4179ac <ferror@plt+0x14bdc>
  4179d0:	mov	x19, x0
  4179d4:	mov	x23, x2
  4179d8:	mov	w0, w1
  4179dc:	bl	417948 <ferror@plt+0x14b78>
  4179e0:	mov	w21, w0
  4179e4:	ldr	x20, [x19]
  4179e8:	ldr	w1, [x20, #32]
  4179ec:	ldr	w26, [x20, #40]
  4179f0:	add	w1, w1, #0x1
  4179f4:	str	w1, [x20, #32]
  4179f8:	mov	w1, w26
  4179fc:	bl	408c44 <ferror@plt+0x5e74>
  417a00:	mov	w19, w0
  417a04:	ldr	x24, [x20]
  417a08:	ubfiz	x0, x19, #4, #32
  417a0c:	add	x2, x24, x0
  417a10:	ldr	w0, [x24, x0]
  417a14:	cbz	w0, 417a64 <ferror@plt+0x14c94>
  417a18:	cmp	w21, w0
  417a1c:	b.eq	417a64 <ferror@plt+0x14c94>  // b.none
  417a20:	mov	w1, w26
  417a24:	mov	w0, w21
  417a28:	ldr	x25, [x20, #8]
  417a2c:	bl	408c7c <ferror@plt+0x5eac>
  417a30:	ldr	w1, [x20, #36]
  417a34:	add	w19, w19, w0
  417a38:	add	w1, w1, #0x1
  417a3c:	str	w1, [x20, #36]
  417a40:	cmp	x25, w19, uxtw
  417a44:	b.hi	417a4c <ferror@plt+0x14c7c>  // b.pmore
  417a48:	sub	w19, w19, w25
  417a4c:	ubfiz	x1, x19, #4, #32
  417a50:	add	x2, x24, x1
  417a54:	ldr	w1, [x24, x1]
  417a58:	cbz	w1, 417a64 <ferror@plt+0x14c94>
  417a5c:	cmp	w21, w1
  417a60:	b.ne	417a30 <ferror@plt+0x14c60>  // b.any
  417a64:	ldr	w0, [x2]
  417a68:	cbz	w0, 417a9c <ferror@plt+0x14ccc>
  417a6c:	ldr	x0, [x2, #8]
  417a70:	ldr	w1, [x0]
  417a74:	ldr	x0, [x0, #8]
  417a78:	str	w1, [x23]
  417a7c:	str	x0, [x22]
  417a80:	mov	w0, #0x1                   	// #1
  417a84:	ldp	x19, x20, [sp, #16]
  417a88:	ldp	x21, x22, [sp, #32]
  417a8c:	ldp	x23, x24, [sp, #48]
  417a90:	ldp	x25, x26, [sp, #64]
  417a94:	ldp	x29, x30, [sp], #80
  417a98:	ret
  417a9c:	mov	w0, #0x0                   	// #0
  417aa0:	b	417a84 <ferror@plt+0x14cb4>
  417aa4:	stp	x29, x30, [sp, #-112]!
  417aa8:	mov	x29, sp
  417aac:	stp	x19, x20, [sp, #16]
  417ab0:	mov	x19, x0
  417ab4:	stp	x21, x22, [sp, #32]
  417ab8:	mov	x22, x2
  417abc:	stp	x23, x24, [sp, #48]
  417ac0:	str	x25, [sp, #64]
  417ac4:	mov	x25, x1
  417ac8:	bl	416a40 <ferror@plt+0x13c70>
  417acc:	ldp	x2, x0, [x19, #40]
  417ad0:	subs	x2, x2, x0
  417ad4:	b.ne	417af4 <ferror@plt+0x14d24>  // b.any
  417ad8:	mov	w0, #0x0                   	// #0
  417adc:	ldp	x19, x20, [sp, #16]
  417ae0:	ldp	x21, x22, [sp, #32]
  417ae4:	ldp	x23, x24, [sp, #48]
  417ae8:	ldr	x25, [sp, #64]
  417aec:	ldp	x29, x30, [sp], #112
  417af0:	ret
  417af4:	ldr	x23, [x19, #24]
  417af8:	mov	w1, #0xa                   	// #10
  417afc:	add	x23, x23, x0
  417b00:	mov	x0, x23
  417b04:	bl	402c20 <memchr@plt>
  417b08:	mov	x21, x0
  417b0c:	cbnz	x0, 417b78 <ferror@plt+0x14da8>
  417b10:	mov	x0, x19
  417b14:	bl	416a40 <ferror@plt+0x13c70>
  417b18:	tst	w0, #0xff
  417b1c:	ldr	x20, [x19, #24]
  417b20:	ldr	x0, [x19, #40]
  417b24:	b.eq	417c40 <ferror@plt+0x14e70>  // b.none
  417b28:	ldr	x2, [x19, #48]
  417b2c:	mov	w1, #0xa                   	// #10
  417b30:	add	x23, x20, x2
  417b34:	sub	x2, x0, x2
  417b38:	mov	x0, x23
  417b3c:	bl	402c20 <memchr@plt>
  417b40:	mov	x20, x0
  417b44:	cbz	x0, 417b10 <ferror@plt+0x14d40>
  417b48:	add	x21, x0, #0x1
  417b4c:	strb	wzr, [x19, #72]
  417b50:	ldr	x0, [x19, #16]
  417b54:	bl	402dd0 <ferror@plt>
  417b58:	cbnz	w0, 417ad8 <ferror@plt+0x14d08>
  417b5c:	cbnz	x20, 417b88 <ferror@plt+0x14db8>
  417b60:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  417b64:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  417b68:	add	x2, x2, #0x380
  417b6c:	add	x0, x0, #0xfaa
  417b70:	mov	w1, #0x241                 	// #577
  417b74:	bl	402de0 <ferror@plt+0x10>
  417b78:	mov	x20, x0
  417b7c:	add	x21, x0, #0x1
  417b80:	strb	wzr, [x19, #72]
  417b84:	b	417b50 <ferror@plt+0x14d80>
  417b88:	ldp	x0, x4, [x19, #40]
  417b8c:	sub	x24, x20, x23
  417b90:	cmp	x4, x0
  417b94:	b.cs	417b9c <ferror@plt+0x14dcc>  // b.hs, b.nlast
  417b98:	str	x23, [x25]
  417b9c:	ldp	x1, x3, [x19, #56]
  417ba0:	add	x1, x1, #0x1
  417ba4:	str	x1, [x19, #56]
  417ba8:	cmp	x1, x3
  417bac:	b.hi	417bc4 <ferror@plt+0x14df4>  // b.pmore
  417bb0:	ldr	x0, [x19, #80]
  417bb4:	cbz	x0, 417c0c <ferror@plt+0x14e3c>
  417bb8:	ldr	w0, [x0, #4]
  417bbc:	cmp	w0, #0x63
  417bc0:	b.ls	417be8 <ferror@plt+0x14e18>  // b.plast
  417bc4:	cbz	x21, 417be0 <ferror@plt+0x14e10>
  417bc8:	ldr	x0, [x19, #24]
  417bcc:	sub	x21, x21, x0
  417bd0:	str	x21, [x19, #48]
  417bd4:	mov	w0, #0x1                   	// #1
  417bd8:	str	x24, [x22]
  417bdc:	b	417adc <ferror@plt+0x14d0c>
  417be0:	ldr	x21, [x19, #40]
  417be4:	b	417bd0 <ferror@plt+0x14e00>
  417be8:	cmp	x3, #0x64
  417bec:	b.ls	417c18 <ferror@plt+0x14e48>  // b.plast
  417bf0:	cbz	w0, 417c20 <ferror@plt+0x14e50>
  417bf4:	mov	x2, #0x64                  	// #100
  417bf8:	mul	x2, x1, x2
  417bfc:	udiv	x2, x2, x3
  417c00:	cmp	x2, w0, uxtw
  417c04:	b.cc	417bc4 <ferror@plt+0x14df4>  // b.lo, b.ul, b.last
  417c08:	b	417c20 <ferror@plt+0x14e50>
  417c0c:	cmp	x3, #0x64
  417c10:	b.hi	417c20 <ferror@plt+0x14e50>  // b.pmore
  417c14:	mov	w0, #0x0                   	// #0
  417c18:	cmp	x1, w0, uxtw
  417c1c:	b.ls	417bc4 <ferror@plt+0x14df4>  // b.plast
  417c20:	ldr	x0, [x19, #24]
  417c24:	stp	x1, x4, [sp, #88]
  417c28:	add	x1, sp, #0x58
  417c2c:	sub	x20, x20, x0
  417c30:	add	x0, x19, #0x50
  417c34:	str	x20, [sp, #104]
  417c38:	bl	418acc <ferror@plt+0x15cfc>
  417c3c:	b	417bc4 <ferror@plt+0x14df4>
  417c40:	add	x20, x20, x0
  417c44:	mov	w0, #0x1                   	// #1
  417c48:	strb	w0, [x19, #72]
  417c4c:	b	417b50 <ferror@plt+0x14d80>
  417c50:	stp	x29, x30, [sp, #-64]!
  417c54:	mov	x29, sp
  417c58:	stp	x19, x20, [sp, #16]
  417c5c:	str	xzr, [sp, #40]
  417c60:	cbnz	w1, 417c78 <ferror@plt+0x14ea8>
  417c64:	mov	x0, #0x0                   	// #0
  417c68:	mov	x1, #0x0                   	// #0
  417c6c:	ldp	x19, x20, [sp, #16]
  417c70:	ldp	x29, x30, [sp], #64
  417c74:	ret
  417c78:	mov	w19, w1
  417c7c:	bl	417080 <ferror@plt+0x142b0>
  417c80:	mov	x20, x0
  417c84:	cbz	x0, 417c64 <ferror@plt+0x14e94>
  417c88:	ldr	x1, [x20, #56]
  417c8c:	sxtw	x0, w19
  417c90:	cmp	x1, w19, sxtw
  417c94:	b.cc	417cd4 <ferror@plt+0x14f04>  // b.lo, b.ul, b.last
  417c98:	ldr	x2, [x20, #80]
  417c9c:	cbz	x2, 417cd0 <ferror@plt+0x14f00>
  417ca0:	ldr	w4, [x2, #4]
  417ca4:	cbz	w4, 417cd0 <ferror@plt+0x14f00>
  417ca8:	ldr	x3, [x20, #64]
  417cac:	cmp	x3, #0x64
  417cb0:	b.ls	417d00 <ferror@plt+0x14f30>  // b.plast
  417cb4:	cmp	x0, x3
  417cb8:	b.hi	417d4c <ferror@plt+0x14f7c>  // b.pmore
  417cbc:	mov	w1, #0x64                  	// #100
  417cc0:	smull	x19, w19, w1
  417cc4:	udiv	x19, x19, x3
  417cc8:	cmp	x19, w4, uxtw
  417ccc:	b.cc	417d54 <ferror@plt+0x14f84>  // b.lo, b.ul, b.last
  417cd0:	stp	xzr, xzr, [x20, #48]
  417cd4:	sub	x19, x0, #0x1
  417cd8:	ldr	x0, [x20, #56]
  417cdc:	add	x2, sp, #0x38
  417ce0:	cmp	x0, x19
  417ce4:	b.cs	417d84 <ferror@plt+0x14fb4>  // b.hs, b.nlast
  417ce8:	add	x1, sp, #0x30
  417cec:	mov	x0, x20
  417cf0:	bl	417aa4 <ferror@plt+0x14cd4>
  417cf4:	tst	w0, #0xff
  417cf8:	b.ne	417cd8 <ferror@plt+0x14f08>  // b.any
  417cfc:	b	417c64 <ferror@plt+0x14e94>
  417d00:	sub	w1, w19, #0x1
  417d04:	sub	w19, w3, #0x1
  417d08:	mov	w5, #0x18                  	// #24
  417d0c:	mov	x4, #0x8                   	// #8
  417d10:	cmp	x0, x3
  417d14:	umaddl	x1, w1, w5, x4
  417d18:	umaddl	x19, w19, w5, x4
  417d1c:	add	x1, x2, x1
  417d20:	add	x19, x2, x19
  417d24:	csel	x1, x19, x1, hi  // hi = pmore
  417d28:	ldr	x2, [x1]
  417d2c:	cmp	x0, x2
  417d30:	b.cs	417da8 <ferror@plt+0x14fd8>  // b.hs, b.nlast
  417d34:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  417d38:	add	x2, x2, #0x38e
  417d3c:	mov	w1, #0x2b2                 	// #690
  417d40:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  417d44:	add	x0, x0, #0xfaa
  417d48:	bl	402de0 <ferror@plt+0x10>
  417d4c:	sub	w19, w4, #0x1
  417d50:	b	417cc8 <ferror@plt+0x14ef8>
  417d54:	mov	x3, #0x18                  	// #24
  417d58:	madd	x1, x19, x3, x2
  417d5c:	mov	w19, w19
  417d60:	add	x1, x1, #0x8
  417d64:	madd	x19, x19, x3, x2
  417d68:	ldr	x2, [x19, #8]
  417d6c:	cmp	x0, x2
  417d70:	b.cs	417da8 <ferror@plt+0x14fd8>  // b.hs, b.nlast
  417d74:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  417d78:	mov	w1, #0x2c1                 	// #705
  417d7c:	add	x2, x2, #0x38e
  417d80:	b	417d40 <ferror@plt+0x14f70>
  417d84:	add	x1, sp, #0x28
  417d88:	mov	x0, x20
  417d8c:	bl	417aa4 <ferror@plt+0x14cd4>
  417d90:	tst	w0, #0xff
  417d94:	b.ne	417dcc <ferror@plt+0x14ffc>  // b.any
  417d98:	b	417c64 <ferror@plt+0x14e94>
  417d9c:	sub	x2, x2, #0x1
  417da0:	stp	x3, x2, [x20, #48]
  417da4:	b	417cd4 <ferror@plt+0x14f04>
  417da8:	ldp	x2, x3, [x1]
  417dac:	cmp	x0, x2
  417db0:	b.ne	417d9c <ferror@plt+0x14fcc>  // b.any
  417db4:	ldr	x0, [x20, #24]
  417db8:	add	x0, x0, x3
  417dbc:	str	x0, [sp, #40]
  417dc0:	ldr	x0, [x1, #16]
  417dc4:	sub	x3, x0, x3
  417dc8:	str	x3, [sp, #56]
  417dcc:	ldr	x0, [sp, #40]
  417dd0:	ldr	x1, [sp, #56]
  417dd4:	b	417c6c <ferror@plt+0x14e9c>
  417dd8:	stp	x29, x30, [sp, #-144]!
  417ddc:	mov	w3, #0x2                   	// #2
  417de0:	mov	w2, #0x0                   	// #0
  417de4:	mov	x29, sp
  417de8:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  417dec:	add	x1, x1, #0x3a4
  417df0:	stp	x19, x20, [sp, #16]
  417df4:	mov	x19, x0
  417df8:	stp	x21, x22, [sp, #32]
  417dfc:	stp	x23, x24, [sp, #48]
  417e00:	mov	w23, #0x0                   	// #0
  417e04:	stp	x25, x26, [sp, #64]
  417e08:	adrp	x26, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  417e0c:	stp	x27, x28, [sp, #80]
  417e10:	bl	416e0c <ferror@plt+0x1403c>
  417e14:	add	x0, x26, #0x488
  417e18:	str	x0, [sp, #96]
  417e1c:	adrp	x28, 495000 <_obstack_memory_used@@Base+0x505fc>
  417e20:	add	x25, x28, #0x980
  417e24:	ldr	x20, [x28, #2432]
  417e28:	ldr	w0, [x20, #12]
  417e2c:	cmp	w23, w0
  417e30:	b.cs	418138 <ferror@plt+0x15368>  // b.hs, b.nlast
  417e34:	sub	w0, w0, #0x1
  417e38:	cmp	w23, w0
  417e3c:	ldr	x27, [x20]
  417e40:	b.ne	417fb4 <ferror@plt+0x151e4>  // b.any
  417e44:	ldr	w24, [x20, #56]
  417e48:	mov	w22, #0x18                  	// #24
  417e4c:	mov	w2, w23
  417e50:	mov	x0, x19
  417e54:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  417e58:	smull	x22, w23, w22
  417e5c:	add	x1, x1, #0x3b7
  417e60:	bl	402d90 <fprintf@plt>
  417e64:	add	x20, x27, x22
  417e68:	mov	w3, w24
  417e6c:	mov	x0, x19
  417e70:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  417e74:	ldr	w2, [x27, x22]
  417e78:	add	x1, x1, #0xfc0
  417e7c:	bl	402d90 <fprintf@plt>
  417e80:	ldr	x2, [x20, #8]
  417e84:	mov	x0, x19
  417e88:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  417e8c:	add	x1, x1, #0x3c9
  417e90:	bl	402d90 <fprintf@plt>
  417e94:	ldr	w2, [x20, #16]
  417e98:	mov	x0, x19
  417e9c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  417ea0:	add	x1, x1, #0x3d5
  417ea4:	bl	402d90 <fprintf@plt>
  417ea8:	ldrb	w2, [x20, #6]
  417eac:	mov	x0, x19
  417eb0:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  417eb4:	add	x1, x1, #0x3ed
  417eb8:	bl	402d90 <fprintf@plt>
  417ebc:	ldrb	w0, [x20, #7]
  417ec0:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  417ec4:	ldrb	w2, [x20, #6]
  417ec8:	add	x1, x1, #0x40a
  417ecc:	sub	w2, w2, w0
  417ed0:	mov	x0, x19
  417ed4:	bl	402d90 <fprintf@plt>
  417ed8:	ldrb	w2, [x20, #7]
  417edc:	mov	x0, x19
  417ee0:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  417ee4:	add	x1, x1, #0x41d
  417ee8:	bl	402d90 <fprintf@plt>
  417eec:	ldrb	w2, [x20, #4]
  417ef0:	cmp	w2, #0x4
  417ef4:	b.hi	417fc8 <ferror@plt+0x151f8>  // b.pmore
  417ef8:	and	x1, x2, #0xff
  417efc:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  417f00:	add	x0, x0, #0x880
  417f04:	ldr	x3, [x0, x1, lsl #3]
  417f08:	mov	x0, x19
  417f0c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  417f10:	add	x1, x1, #0x42f
  417f14:	bl	402d90 <fprintf@plt>
  417f18:	ldr	x0, [x28, #2432]
  417f1c:	mov	x1, x20
  417f20:	bl	42b1c4 <ferror@plt+0x283f4>
  417f24:	mov	x21, x0
  417f28:	ldr	w2, [x20, #20]
  417f2c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  417f30:	mov	x0, x19
  417f34:	add	x1, x1, #0x442
  417f38:	bl	402d90 <fprintf@plt>
  417f3c:	cbz	x21, 417f6c <ferror@plt+0x1519c>
  417f40:	ldr	x0, [x28, #2432]
  417f44:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  417f48:	add	x1, x1, #0x45f
  417f4c:	ldr	x2, [x0]
  417f50:	mov	x0, x19
  417f54:	sub	x21, x21, x2
  417f58:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  417f5c:	movk	x2, #0xaaab
  417f60:	asr	x21, x21, #3
  417f64:	mul	w2, w21, w2
  417f68:	bl	402d90 <fprintf@plt>
  417f6c:	mov	x1, x19
  417f70:	mov	w0, #0xa                   	// #10
  417f74:	bl	4027d0 <fputc@plt>
  417f78:	ldr	w22, [x27, x22]
  417f7c:	mov	w27, #0x1                   	// #1
  417f80:	cmp	w22, w24
  417f84:	b.cs	418124 <ferror@plt+0x15354>  // b.hs, b.nlast
  417f88:	ldr	x0, [x25]
  417f8c:	mov	w1, w22
  417f90:	bl	42bc70 <ferror@plt+0x28ea0>
  417f94:	tst	w0, #0xff
  417f98:	b.ne	417fd4 <ferror@plt+0x15204>  // b.any
  417f9c:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  417fa0:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  417fa4:	add	x2, x2, #0x475
  417fa8:	add	x0, x0, #0xfaa
  417fac:	mov	w1, #0x454                 	// #1108
  417fb0:	bl	402de0 <ferror@plt+0x10>
  417fb4:	add	w0, w23, #0x1
  417fb8:	mov	w1, #0x18                  	// #24
  417fbc:	smull	x0, w0, w1
  417fc0:	ldr	w24, [x27, x0]
  417fc4:	b	417e48 <ferror@plt+0x15078>
  417fc8:	adrp	x3, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  417fcc:	add	x3, x3, #0x39c
  417fd0:	b	417f08 <ferror@plt+0x15138>
  417fd4:	ldr	x0, [x25]
  417fd8:	add	x8, sp, #0x70
  417fdc:	mov	w2, w22
  417fe0:	mov	x1, x20
  417fe4:	bl	42c50c <ferror@plt+0x2973c>
  417fe8:	ldr	w0, [sp, #124]
  417fec:	cbnz	w0, 418114 <ferror@plt+0x15344>
  417ff0:	ldr	x26, [sp, #112]
  417ff4:	ldr	w28, [sp, #120]
  417ff8:	mov	x0, x26
  417ffc:	mov	w1, w28
  418000:	bl	417c50 <ferror@plt+0x14e80>
  418004:	mov	x6, x0
  418008:	mov	x21, x1
  41800c:	cbz	x0, 418124 <ferror@plt+0x15354>
  418010:	mov	w5, w1
  418014:	mov	w4, w22
  418018:	ldr	x1, [sp, #96]
  41801c:	mov	w3, w28
  418020:	mov	x2, x26
  418024:	mov	x0, x19
  418028:	bl	402d90 <fprintf@plt>
  41802c:	ldrb	w0, [x20, #6]
  418030:	lsl	w0, w27, w0
  418034:	sub	w0, w0, #0x1
  418038:	sxtw	x4, w0
  41803c:	cmp	x21, w0, sxtw
  418040:	b.cs	418048 <ferror@plt+0x15278>  // b.hs, b.nlast
  418044:	add	x4, x21, #0x1
  418048:	mov	w0, w28
  41804c:	str	x4, [sp, #104]
  418050:	bl	40e2a0 <ferror@plt+0xb4d0>
  418054:	mov	w21, w0
  418058:	mov	w0, w22
  41805c:	bl	40e2a0 <ferror@plt+0xb4d0>
  418060:	mov	w28, w0
  418064:	mov	x0, x26
  418068:	bl	402700 <strlen@plt>
  41806c:	add	w0, w0, #0x6
  418070:	cmp	w21, #0x3
  418074:	mov	w1, #0x3                   	// #3
  418078:	csel	w21, w21, w1, ge  // ge = tcont
  41807c:	cmp	w28, #0x5
  418080:	ldr	x4, [sp, #104]
  418084:	mov	w2, #0x5                   	// #5
  418088:	csel	w1, w28, w2, ge  // ge = tcont
  41808c:	cmp	w24, #0x3e7
  418090:	add	w21, w21, w1
  418094:	mov	w28, w4
  418098:	add	w21, w21, w0
  41809c:	b.ls	4180b8 <ferror@plt+0x152e8>  // b.plast
  4180a0:	mov	w3, w22
  4180a4:	mov	x2, x20
  4180a8:	mov	w1, w21
  4180ac:	mov	x0, x19
  4180b0:	mov	w5, #0x3e8                 	// #1000
  4180b4:	bl	416c70 <ferror@plt+0x13ea0>
  4180b8:	cmp	w24, #0x63
  4180bc:	b.ls	4180dc <ferror@plt+0x1530c>  // b.plast
  4180c0:	mov	w4, w28
  4180c4:	mov	w3, w22
  4180c8:	mov	x2, x20
  4180cc:	mov	w1, w21
  4180d0:	mov	x0, x19
  4180d4:	mov	w5, #0x64                  	// #100
  4180d8:	bl	416c70 <ferror@plt+0x13ea0>
  4180dc:	mov	w4, w28
  4180e0:	mov	w3, w22
  4180e4:	mov	x2, x20
  4180e8:	mov	w1, w21
  4180ec:	mov	x0, x19
  4180f0:	mov	w5, #0xa                   	// #10
  4180f4:	bl	416c70 <ferror@plt+0x13ea0>
  4180f8:	mov	w4, w28
  4180fc:	mov	w3, w22
  418100:	mov	x2, x20
  418104:	mov	w1, w21
  418108:	mov	x0, x19
  41810c:	mov	w5, #0x1                   	// #1
  418110:	bl	416c70 <ferror@plt+0x13ea0>
  418114:	ldrb	w0, [x20, #7]
  418118:	lsl	w0, w27, w0
  41811c:	add	w22, w22, w0
  418120:	b	417f80 <ferror@plt+0x151b0>
  418124:	mov	x1, x19
  418128:	mov	w0, #0xa                   	// #10
  41812c:	add	w23, w23, #0x1
  418130:	bl	4027d0 <fputc@plt>
  418134:	b	417e1c <ferror@plt+0x1504c>
  418138:	mov	x0, x20
  41813c:	bl	4189a4 <ferror@plt+0x15bd4>
  418140:	ldr	w2, [x20, #56]
  418144:	mov	w3, w0
  418148:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41814c:	adrp	x24, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  418150:	adrp	x26, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  418154:	add	x1, x1, #0x49d
  418158:	mov	x0, x19
  41815c:	add	x24, x24, #0x4b3
  418160:	add	x26, x26, #0x51b
  418164:	mov	w23, #0x0                   	// #0
  418168:	bl	416e0c <ferror@plt+0x1403c>
  41816c:	ldr	x0, [x25]
  418170:	ldr	w20, [x0, #36]
  418174:	cmp	w23, w20
  418178:	b.cs	4182dc <ferror@plt+0x1550c>  // b.hs, b.nlast
  41817c:	sub	w20, w20, #0x1
  418180:	sub	w20, w20, w23
  418184:	ldr	x27, [x0, #24]
  418188:	sbfiz	x21, x20, #5, #32
  41818c:	add	x22, x27, x21
  418190:	mov	x0, x22
  418194:	bl	42b8a8 <ferror@plt+0x28ad8>
  418198:	mov	w2, w20
  41819c:	mov	x3, x0
  4181a0:	ldr	w4, [x22, #4]
  4181a4:	mov	x1, x24
  4181a8:	mov	x0, x19
  4181ac:	mov	w20, #0x0                   	// #0
  4181b0:	bl	402d90 <fprintf@plt>
  4181b4:	ldr	w2, [x27, x21]
  4181b8:	mov	x0, x19
  4181bc:	ldr	w3, [x22, #4]
  4181c0:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4181c4:	add	x1, x1, #0xfc0
  4181c8:	add	w3, w2, w3
  4181cc:	bl	402d90 <fprintf@plt>
  4181d0:	ldr	w2, [x22, #24]
  4181d4:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  4181d8:	add	x1, x1, #0x4cd
  4181dc:	mov	w0, w2
  4181e0:	bl	40d734 <ferror@plt+0xa964>
  4181e4:	ldr	w2, [x27, x21]
  4181e8:	adrp	x27, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  4181ec:	add	x27, x27, #0x58a
  4181f0:	mov	x0, x19
  4181f4:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  4181f8:	add	x1, x1, #0x4ec
  4181fc:	bl	402d90 <fprintf@plt>
  418200:	mov	x1, x19
  418204:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  418208:	add	x0, x0, #0x507
  41820c:	bl	402710 <fputs@plt>
  418210:	ldr	w0, [x22, #4]
  418214:	cmp	w20, w0
  418218:	b.cs	4182c8 <ferror@plt+0x154f8>  // b.hs, b.nlast
  41821c:	lsl	w0, w20, #1
  418220:	ubfiz	x2, x20, #3, #31
  418224:	ldr	x1, [x22, #16]
  418228:	add	w0, w0, #0x1
  41822c:	ldr	w21, [x1, x2]
  418230:	mov	w2, w20
  418234:	ldr	w28, [x1, x0, lsl #2]
  418238:	mov	x1, x26
  41823c:	mov	w3, w21
  418240:	mov	x0, x19
  418244:	mov	w4, w28
  418248:	bl	402d90 <fprintf@plt>
  41824c:	cmp	w21, w28
  418250:	b.ne	41829c <ferror@plt+0x154cc>  // b.any
  418254:	ldr	w3, [x22]
  418258:	cmp	w21, w3
  41825c:	b.cs	41827c <ferror@plt+0x154ac>  // b.hs, b.nlast
  418260:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  418264:	mov	w3, w21
  418268:	mov	w2, w20
  41826c:	add	x1, x1, #0x52b
  418270:	mov	w0, w21
  418274:	bl	40d734 <ferror@plt+0xa964>
  418278:	b	418294 <ferror@plt+0x154c4>
  41827c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  418280:	sub	w3, w21, w3
  418284:	mov	w2, w21
  418288:	add	x1, x1, #0x557
  41828c:	mov	x0, x19
  418290:	bl	402d90 <fprintf@plt>
  418294:	add	w20, w20, #0x1
  418298:	b	418210 <ferror@plt+0x15440>
  41829c:	mov	w3, w21
  4182a0:	mov	w2, w20
  4182a4:	mov	x1, x27
  4182a8:	mov	w0, w21
  4182ac:	bl	40d734 <ferror@plt+0xa964>
  4182b0:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  4182b4:	mov	w3, w28
  4182b8:	add	x1, x0, #0x5a8
  4182bc:	mov	w2, w20
  4182c0:	mov	w0, w21
  4182c4:	b	418274 <ferror@plt+0x154a4>
  4182c8:	mov	x1, x19
  4182cc:	mov	w0, #0xa                   	// #10
  4182d0:	add	w23, w23, #0x1
  4182d4:	bl	4027d0 <fputc@plt>
  4182d8:	b	41816c <ferror@plt+0x1539c>
  4182dc:	mov	x0, x19
  4182e0:	mov	w3, #0x80000000            	// #-2147483648
  4182e4:	mov	w2, #0x7fffffff            	// #2147483647
  4182e8:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  4182ec:	add	x1, x1, #0x5c6
  4182f0:	bl	416e0c <ferror@plt+0x1403c>
  4182f4:	mov	x0, x19
  4182f8:	mov	w3, #0xffffffff            	// #-1
  4182fc:	ldp	x19, x20, [sp, #16]
  418300:	mov	w2, #0x80000000            	// #-2147483648
  418304:	ldp	x21, x22, [sp, #32]
  418308:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41830c:	ldp	x23, x24, [sp, #48]
  418310:	add	x1, x1, #0x5d5
  418314:	ldp	x25, x26, [sp, #64]
  418318:	ldp	x27, x28, [sp, #80]
  41831c:	ldp	x29, x30, [sp], #144
  418320:	b	416e0c <ferror@plt+0x1403c>
  418324:	stp	x29, x30, [sp, #-272]!
  418328:	mov	x29, sp
  41832c:	stp	x19, x20, [sp, #16]
  418330:	stp	x21, x22, [sp, #32]
  418334:	stp	x23, x24, [sp, #48]
  418338:	stp	x25, x26, [sp, #64]
  41833c:	stp	x27, x28, [sp, #80]
  418340:	stp	w4, w5, [sp, #104]
  418344:	str	w3, [sp, #120]
  418348:	cbnz	x7, 418364 <ferror@plt+0x15594>
  41834c:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  418350:	add	x2, x2, #0x7e8
  418354:	mov	w1, #0x5fa                 	// #1530
  418358:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  41835c:	add	x0, x0, #0xfaa
  418360:	bl	402de0 <ferror@plt+0x10>
  418364:	mov	w19, w2
  418368:	mov	x22, x0
  41836c:	mov	x20, x1
  418370:	mov	w21, w6
  418374:	mov	x26, x7
  418378:	add	x0, sp, #0xb0
  41837c:	bl	41a3e4 <ferror@plt+0x17614>
  418380:	str	w19, [sp, #128]
  418384:	cbnz	x22, 418398 <ferror@plt+0x155c8>
  418388:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41838c:	mov	w1, #0x551                 	// #1361
  418390:	add	x2, x2, #0x803
  418394:	b	418358 <ferror@plt+0x15588>
  418398:	cbz	w19, 4187f4 <ferror@plt+0x15a24>
  41839c:	mov	x0, x22
  4183a0:	bl	42082c <ferror@plt+0x1da5c>
  4183a4:	ldrb	w0, [x0, #45]
  4183a8:	cmp	w0, #0x2
  4183ac:	b.ne	418800 <ferror@plt+0x15a30>  // b.any
  4183b0:	adrp	x19, 495000 <_obstack_memory_used@@Base+0x505fc>
  4183b4:	ldr	x0, [x19, #2432]
  4183b8:	ldrb	w0, [x0, #116]
  4183bc:	cbnz	w0, 41880c <ferror@plt+0x15a3c>
  4183c0:	mov	w0, #0x1                   	// #1
  4183c4:	str	w0, [sp, #132]
  4183c8:	add	x0, sp, #0x80
  4183cc:	str	x0, [sp, #136]
  4183d0:	cbz	x20, 4183e8 <ferror@plt+0x15618>
  4183d4:	ldr	w1, [sp, #128]
  4183d8:	add	x3, sp, #0x88
  4183dc:	add	x2, sp, #0x84
  4183e0:	mov	x0, x20
  4183e4:	bl	417984 <ferror@plt+0x14bb4>
  4183e8:	ldrsw	x1, [sp, #132]
  4183ec:	str	xzr, [sp, #144]
  4183f0:	cbz	w1, 418400 <ferror@plt+0x15630>
  4183f4:	add	x0, sp, #0x90
  4183f8:	mov	w2, #0x1                   	// #1
  4183fc:	bl	418b30 <ferror@plt+0x15d60>
  418400:	ldrsw	x1, [sp, #132]
  418404:	str	xzr, [sp, #152]
  418408:	cbz	w1, 418418 <ferror@plt+0x15648>
  41840c:	add	x0, sp, #0x98
  418410:	mov	w2, #0x1                   	// #1
  418414:	bl	418c20 <ferror@plt+0x15e50>
  418418:	mov	x24, #0x0                   	// #0
  41841c:	ldr	w3, [sp, #132]
  418420:	cmp	w3, w24
  418424:	b.le	418708 <ferror@plt+0x15938>
  418428:	ldr	x0, [sp, #136]
  41842c:	ldr	w1, [x0, x24, lsl #2]
  418430:	ldr	x0, [x19, #2432]
  418434:	bl	42bbd0 <ferror@plt+0x28e00>
  418438:	mov	x20, x0
  41843c:	lsr	x25, x0, #32
  418440:	ldr	x0, [x19, #2432]
  418444:	bl	4189a4 <ferror@plt+0x15bd4>
  418448:	cmp	w0, w20
  41844c:	b.hi	4184a4 <ferror@plt+0x156d4>  // b.pmore
  418450:	cmp	w20, w25
  418454:	b.eq	4184b8 <ferror@plt+0x156e8>  // b.none
  418458:	adrp	x19, 469000 <_obstack_memory_used@@Base+0x245fc>
  41845c:	add	x19, x19, #0x24
  418460:	ldr	x0, [sp, #152]
  418464:	cbz	x0, 418474 <ferror@plt+0x156a4>
  418468:	ldrsb	w1, [x0, #3]
  41846c:	tbz	w1, #31, 41873c <ferror@plt+0x1596c>
  418470:	str	wzr, [x0, #4]
  418474:	mov	w20, #0x0                   	// #0
  418478:	ldr	x0, [sp, #144]
  41847c:	cbz	x0, 418750 <ferror@plt+0x15980>
  418480:	ldr	w1, [x0, #4]
  418484:	cmp	w1, w20
  418488:	b.ls	418744 <ferror@plt+0x15974>  // b.plast
  41848c:	ubfiz	x1, x20, #4, #32
  418490:	add	w20, w20, #0x1
  418494:	add	x0, x0, x1
  418498:	ldr	x0, [x0, #16]
  41849c:	bl	402b30 <free@plt>
  4184a0:	b	418478 <ferror@plt+0x156a8>
  4184a4:	mov	w0, #0x5fffffff            	// #1610612735
  4184a8:	cmp	w20, w0
  4184ac:	b.hi	418690 <ferror@plt+0x158c0>  // b.pmore
  4184b0:	cmp	w25, w0
  4184b4:	b.hi	41869c <ferror@plt+0x158cc>  // b.pmore
  4184b8:	add	x8, sp, #0xd0
  4184bc:	mov	w0, w20
  4184c0:	mov	w1, #0x1                   	// #1
  4184c4:	bl	417204 <ferror@plt+0x14434>
  4184c8:	mov	w0, w25
  4184cc:	add	x8, sp, #0xf0
  4184d0:	ldp	w27, w23, [sp, #216]
  4184d4:	mov	w1, #0x2                   	// #2
  4184d8:	ldr	x28, [sp, #208]
  4184dc:	bl	417204 <ferror@plt+0x14434>
  4184e0:	ldr	x0, [sp, #240]
  4184e4:	ldr	w3, [sp, #252]
  4184e8:	cmp	x28, x0
  4184ec:	b.ne	4186a8 <ferror@plt+0x158d8>  // b.any
  4184f0:	ldr	w0, [sp, #248]
  4184f4:	cmp	w27, w0
  4184f8:	b.ne	4186b4 <ferror@plt+0x158e4>  // b.any
  4184fc:	str	w3, [sp, #112]
  418500:	cmp	w23, w3
  418504:	b.gt	4186c0 <ferror@plt+0x158f0>
  418508:	mov	w1, w27
  41850c:	mov	x0, x28
  418510:	bl	417c50 <ferror@plt+0x14e80>
  418514:	mov	x4, x1
  418518:	cbz	x0, 4186cc <ferror@plt+0x158fc>
  41851c:	ldr	w3, [sp, #112]
  418520:	sub	w2, w23, #0x1
  418524:	sub	w3, w3, w23
  418528:	sxtw	x5, w2
  41852c:	add	w3, w3, #0x1
  418530:	add	x6, x5, w3, sxtw
  418534:	sxtw	x1, w3
  418538:	cmp	x4, x6
  41853c:	b.cc	4186d8 <ferror@plt+0x15908>  // b.lo, b.ul, b.last
  418540:	tbz	w2, #31, 41855c <ferror@plt+0x1578c>
  418544:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  418548:	add	x2, x2, #0xbe0
  41854c:	mov	w1, #0x44                  	// #68
  418550:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  418554:	add	x0, x0, #0xbe8
  418558:	b	418360 <ferror@plt+0x15590>
  41855c:	cmp	w2, w4
  418560:	b.lt	418574 <ferror@plt+0x157a4>  // b.tstop
  418564:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  418568:	mov	w1, #0x45                  	// #69
  41856c:	add	x2, x2, #0xbe0
  418570:	b	418550 <ferror@plt+0x15780>
  418574:	add	w2, w3, w2
  418578:	cmp	w4, w2
  41857c:	b.ge	418590 <ferror@plt+0x157c0>  // b.tcont
  418580:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  418584:	mov	w1, #0x47                  	// #71
  418588:	add	x2, x2, #0xbe0
  41858c:	b	418550 <ferror@plt+0x15780>
  418590:	add	x0, x0, x5
  418594:	str	w3, [sp, #124]
  418598:	bl	445408 <_obstack_memory_used@@Base+0xa04>
  41859c:	mov	x4, x0
  4185a0:	mov	w2, #0x0                   	// #0
  4185a4:	mov	w1, #0x1                   	// #1
  4185a8:	add	x0, sp, #0x90
  4185ac:	str	x4, [sp, #112]
  4185b0:	bl	418b30 <ferror@plt+0x15d60>
  4185b4:	ldr	x2, [sp, #144]
  4185b8:	ldr	w3, [sp, #124]
  4185bc:	ldr	x4, [sp, #112]
  4185c0:	ldr	w1, [x2, #4]
  4185c4:	add	w0, w1, #0x1
  4185c8:	str	w0, [x2, #4]
  4185cc:	mov	x0, #0x8                   	// #8
  4185d0:	add	x1, x0, w1, uxtw #4
  4185d4:	add	x0, x2, x1
  4185d8:	str	w3, [x2, x1]
  4185dc:	add	x3, sp, #0xa0
  4185e0:	str	x4, [x0, #8]
  4185e4:	mov	w1, w20
  4185e8:	ldr	x0, [x19, #2432]
  4185ec:	mov	w2, #0x1                   	// #1
  4185f0:	bl	42bec4 <ferror@plt+0x290f4>
  4185f4:	ldr	x0, [x19, #2432]
  4185f8:	add	x3, sp, #0xa8
  4185fc:	mov	w1, w25
  418600:	mov	w2, #0x1                   	// #1
  418604:	bl	42bec4 <ferror@plt+0x290f4>
  418608:	ldr	x0, [sp, #160]
  41860c:	cbz	x0, 4186e4 <ferror@plt+0x15914>
  418610:	ldr	x1, [sp, #168]
  418614:	cbz	x1, 4186e4 <ferror@plt+0x15914>
  418618:	cmp	x0, x1
  41861c:	ldr	x2, [x0, #8]
  418620:	b.eq	418630 <ferror@plt+0x15860>  // b.none
  418624:	ldr	x0, [x1, #8]
  418628:	cmp	x0, x2
  41862c:	b.ne	4186f0 <ferror@plt+0x15920>  // b.any
  418630:	add	x24, x24, #0x1
  418634:	cmp	x28, x2
  418638:	b.ne	4186fc <ferror@plt+0x1592c>  // b.any
  41863c:	ldr	x0, [x19, #2432]
  418640:	mov	w3, w23
  418644:	mov	w2, w27
  418648:	bl	42b7b8 <ferror@plt+0x289e8>
  41864c:	mov	w1, w0
  418650:	ldr	x2, [x19, #2432]
  418654:	add	x0, sp, #0xc0
  418658:	bl	41a75c <ferror@plt+0x1798c>
  41865c:	mov	w2, #0x0                   	// #0
  418660:	mov	w1, #0x1                   	// #1
  418664:	add	x0, sp, #0x98
  418668:	bl	418c20 <ferror@plt+0x15e50>
  41866c:	ldr	x0, [sp, #152]
  418670:	ldr	w1, [x0, #4]
  418674:	add	w2, w1, #0x1
  418678:	str	w2, [x0, #4]
  41867c:	ubfiz	x1, x1, #4, #32
  418680:	add	x0, x0, x1
  418684:	ldp	x2, x3, [sp, #192]
  418688:	stp	x2, x3, [x0, #8]
  41868c:	b	41841c <ferror@plt+0x1564c>
  418690:	adrp	x19, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  418694:	add	x19, x19, #0x655
  418698:	b	418460 <ferror@plt+0x15690>
  41869c:	adrp	x19, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  4186a0:	add	x19, x19, #0x688
  4186a4:	b	418460 <ferror@plt+0x15690>
  4186a8:	adrp	x19, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  4186ac:	add	x19, x19, #0x6b9
  4186b0:	b	418460 <ferror@plt+0x15690>
  4186b4:	adrp	x19, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  4186b8:	add	x19, x19, #0x6e0
  4186bc:	b	418460 <ferror@plt+0x15690>
  4186c0:	adrp	x19, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  4186c4:	add	x19, x19, #0x707
  4186c8:	b	418460 <ferror@plt+0x15690>
  4186cc:	adrp	x19, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  4186d0:	add	x19, x19, #0x602
  4186d4:	b	418460 <ferror@plt+0x15690>
  4186d8:	adrp	x19, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  4186dc:	add	x19, x19, #0x724
  4186e0:	b	418460 <ferror@plt+0x15690>
  4186e4:	adrp	x19, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  4186e8:	add	x19, x19, #0x5e6
  4186ec:	b	418460 <ferror@plt+0x15690>
  4186f0:	adrp	x19, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  4186f4:	add	x19, x19, #0x61d
  4186f8:	b	418460 <ferror@plt+0x15690>
  4186fc:	adrp	x19, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  418700:	add	x19, x19, #0x73c
  418704:	b	418460 <ferror@plt+0x15690>
  418708:	ldr	x1, [sp, #144]
  41870c:	cbz	x1, 418714 <ferror@plt+0x15944>
  418710:	add	x1, x1, #0x8
  418714:	ldr	x2, [sp, #152]
  418718:	cbz	x2, 418720 <ferror@plt+0x15950>
  41871c:	add	x2, x2, #0x8
  418720:	ldr	w5, [sp, #120]
  418724:	add	x4, sp, #0xb0
  418728:	sxtw	x3, w3
  41872c:	mov	x0, x22
  418730:	bl	41de14 <ferror@plt+0x1b044>
  418734:	mov	x19, x0
  418738:	b	418460 <ferror@plt+0x15690>
  41873c:	bl	402b30 <free@plt>
  418740:	b	418474 <ferror@plt+0x156a4>
  418744:	ldrsb	w1, [x0, #3]
  418748:	tbz	w1, #31, 4187c8 <ferror@plt+0x159f8>
  41874c:	str	wzr, [x0, #4]
  418750:	cbnz	x19, 4187a0 <ferror@plt+0x159d0>
  418754:	ldr	w1, [sp, #104]
  418758:	ldr	w0, [sp, #184]
  41875c:	cmp	w1, w0
  418760:	b.ge	4187d0 <ferror@plt+0x15a00>  // b.tcont
  418764:	ldr	w1, [sp, #108]
  418768:	cmp	w1, w0
  41876c:	b.ge	4187dc <ferror@plt+0x15a0c>  // b.tcont
  418770:	cmp	w21, w0
  418774:	b.ge	4187e8 <ferror@plt+0x15a18>  // b.tcont
  418778:	ldr	x0, [sp, #176]
  41877c:	sbfiz	x5, x1, #3, #32
  418780:	ldr	w1, [sp, #104]
  418784:	add	x21, x0, w21, sxtw #3
  418788:	sbfiz	x4, x1, #3, #32
  41878c:	ldr	w1, [x0, x5]
  418790:	ldr	w2, [x21, #4]
  418794:	ldr	w0, [x0, x4]
  418798:	bl	41729c <ferror@plt+0x144cc>
  41879c:	str	w0, [x26]
  4187a0:	add	x0, sp, #0xb0
  4187a4:	bl	41a414 <ferror@plt+0x17644>
  4187a8:	mov	x0, x19
  4187ac:	ldp	x19, x20, [sp, #16]
  4187b0:	ldp	x21, x22, [sp, #32]
  4187b4:	ldp	x23, x24, [sp, #48]
  4187b8:	ldp	x25, x26, [sp, #64]
  4187bc:	ldp	x27, x28, [sp, #80]
  4187c0:	ldp	x29, x30, [sp], #272
  4187c4:	ret
  4187c8:	bl	402b30 <free@plt>
  4187cc:	b	418750 <ferror@plt+0x15980>
  4187d0:	adrp	x19, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  4187d4:	add	x19, x19, #0x765
  4187d8:	b	4187a0 <ferror@plt+0x159d0>
  4187dc:	adrp	x19, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  4187e0:	add	x19, x19, #0x77c
  4187e4:	b	4187a0 <ferror@plt+0x159d0>
  4187e8:	adrp	x19, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  4187ec:	add	x19, x19, #0x793
  4187f0:	b	4187a0 <ferror@plt+0x159d0>
  4187f4:	adrp	x19, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  4187f8:	add	x19, x19, #0x7a8
  4187fc:	b	4187a0 <ferror@plt+0x159d0>
  418800:	adrp	x19, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  418804:	add	x19, x19, #0x7b9
  418808:	b	4187a0 <ferror@plt+0x159d0>
  41880c:	adrp	x19, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  418810:	add	x19, x19, #0x7d4
  418814:	b	4187a0 <ferror@plt+0x159d0>
  418818:	stp	x29, x30, [sp, #-64]!
  41881c:	cmp	w1, #0x1
  418820:	mov	x29, sp
  418824:	stp	x19, x20, [sp, #16]
  418828:	stp	x21, x22, [sp, #32]
  41882c:	stp	x23, x24, [sp, #48]
  418830:	b.gt	41884c <ferror@plt+0x15a7c>
  418834:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  418838:	add	x2, x2, #0x820
  41883c:	mov	w1, #0x4f6                 	// #1270
  418840:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  418844:	add	x0, x0, #0xfaa
  418848:	bl	402de0 <ferror@plt+0x10>
  41884c:	mov	x19, x2
  418850:	cbnz	x2, 418864 <ferror@plt+0x15a94>
  418854:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  418858:	mov	w1, #0x4f7                 	// #1271
  41885c:	add	x2, x2, #0x820
  418860:	b	418840 <ferror@plt+0x15a70>
  418864:	mov	x22, x0
  418868:	ldr	w0, [x2]
  41886c:	mov	w20, w1
  418870:	bl	417948 <ferror@plt+0x14b78>
  418874:	mov	w21, w0
  418878:	mov	x3, #0x1                   	// #1
  41887c:	mov	x2, #0x0                   	// #0
  418880:	mov	x1, #0x0                   	// #0
  418884:	mov	x0, #0x10                  	// #16
  418888:	bl	40c080 <ferror@plt+0x92b0>
  41888c:	mov	x23, x0
  418890:	mov	w1, w20
  418894:	mov	x2, x19
  418898:	bl	417858 <ferror@plt+0x14a88>
  41889c:	ldr	x20, [x22]
  4188a0:	ldp	x1, x0, [x20, #8]
  4188a4:	add	x1, x1, x1, lsl #1
  4188a8:	cmp	x1, x0, lsl #2
  4188ac:	b.hi	4188b8 <ferror@plt+0x15ae8>  // b.pmore
  4188b0:	mov	x0, x20
  4188b4:	bl	418d10 <ferror@plt+0x15f40>
  4188b8:	ldr	w0, [x20, #32]
  4188bc:	ldr	w24, [x20, #40]
  4188c0:	add	w0, w0, #0x1
  4188c4:	str	w0, [x20, #32]
  4188c8:	mov	w1, w24
  4188cc:	mov	w0, w21
  4188d0:	bl	408c44 <ferror@plt+0x5e74>
  4188d4:	mov	w19, w0
  4188d8:	ldr	x22, [x20]
  4188dc:	ubfiz	x0, x19, #4, #32
  4188e0:	add	x2, x22, x0
  4188e4:	ldr	w0, [x22, x0]
  4188e8:	cbz	w0, 41895c <ferror@plt+0x15b8c>
  4188ec:	cmp	w21, w0
  4188f0:	b.eq	418938 <ferror@plt+0x15b68>  // b.none
  4188f4:	mov	w1, w24
  4188f8:	mov	w0, w21
  4188fc:	bl	408c7c <ferror@plt+0x5eac>
  418900:	ldr	x3, [x20, #8]
  418904:	add	w19, w19, w0
  418908:	ldr	w1, [x20, #36]
  41890c:	cmp	x3, w19, uxtw
  418910:	add	w1, w1, #0x1
  418914:	str	w1, [x20, #36]
  418918:	b.hi	418920 <ferror@plt+0x15b50>  // b.pmore
  41891c:	sub	w19, w19, w3
  418920:	ubfiz	x1, x19, #4, #32
  418924:	add	x2, x22, x1
  418928:	ldr	w1, [x22, x1]
  41892c:	cbz	w1, 41895c <ferror@plt+0x15b8c>
  418930:	cmp	w21, w1
  418934:	b.ne	418904 <ferror@plt+0x15b34>  // b.any
  418938:	ldr	w0, [x2]
  41893c:	cbnz	w0, 418944 <ferror@plt+0x15b74>
  418940:	str	w21, [x2]
  418944:	ldp	x19, x20, [sp, #16]
  418948:	ldp	x21, x22, [sp, #32]
  41894c:	str	x23, [x2, #8]
  418950:	ldp	x23, x24, [sp, #48]
  418954:	ldp	x29, x30, [sp], #64
  418958:	ret
  41895c:	ldr	x0, [x20, #16]
  418960:	ubfiz	x19, x19, #4, #32
  418964:	add	x2, x22, x19
  418968:	add	x0, x0, #0x1
  41896c:	str	x0, [x20, #16]
  418970:	b	418938 <ferror@plt+0x15b68>
  418974:	ldr	x2, [x0, #8]
  418978:	mov	x1, x0
  41897c:	sub	x0, x2, #0x1
  418980:	cmp	x2, x0
  418984:	b.ls	418990 <ferror@plt+0x15bc0>  // b.plast
  418988:	sub	x0, x0, #0x1
  41898c:	b	418980 <ferror@plt+0x15bb0>
  418990:	ldr	x0, [x1]
  418994:	ldrb	w1, [x1, #44]
  418998:	cbnz	w1, 4189a0 <ferror@plt+0x15bd0>
  41899c:	b	402b30 <free@plt>
  4189a0:	b	40c0d8 <ferror@plt+0x9308>
  4189a4:	ldr	w1, [x0, #36]
  4189a8:	cbz	w1, 4189c0 <ferror@plt+0x15bf0>
  4189ac:	sub	w1, w1, #0x1
  4189b0:	ldr	x0, [x0, #24]
  4189b4:	sbfiz	x1, x1, #5, #32
  4189b8:	ldr	w0, [x0, x1]
  4189bc:	ret
  4189c0:	mov	w0, #0x80000000            	// #-2147483648
  4189c4:	b	4189bc <ferror@plt+0x15bec>
  4189c8:	stp	x29, x30, [sp, #-64]!
  4189cc:	and	w2, w2, #0xff
  4189d0:	mov	x29, sp
  4189d4:	stp	x23, x24, [sp, #48]
  4189d8:	ldr	x23, [x0]
  4189dc:	stp	x19, x20, [sp, #16]
  4189e0:	mov	x20, x0
  4189e4:	stp	x21, x22, [sp, #32]
  4189e8:	cbz	x23, 418a08 <ferror@plt+0x15c38>
  4189ec:	ldp	w0, w21, [x23]
  4189f0:	ubfx	x0, x0, #0, #31
  4189f4:	sub	w0, w0, w21
  4189f8:	cmp	w1, w0
  4189fc:	b.hi	418a18 <ferror@plt+0x15c48>  // b.pmore
  418a00:	mov	w19, #0x0                   	// #0
  418a04:	b	418aac <ferror@plt+0x15cdc>
  418a08:	mov	w19, #0x0                   	// #0
  418a0c:	cbz	w1, 418aac <ferror@plt+0x15cdc>
  418a10:	mov	w21, #0x0                   	// #0
  418a14:	b	418a2c <ferror@plt+0x15c5c>
  418a18:	ldrsb	w0, [x23, #3]
  418a1c:	tbz	w0, #31, 418a98 <ferror@plt+0x15cc8>
  418a20:	add	w1, w1, w21
  418a24:	mov	w19, #0x1                   	// #1
  418a28:	str	xzr, [x20]
  418a2c:	ldr	x0, [x20]
  418a30:	bl	411438 <ferror@plt+0xe668>
  418a34:	mov	w22, w0
  418a38:	mov	w1, #0x18                  	// #24
  418a3c:	mov	x0, #0x8                   	// #8
  418a40:	umaddl	x1, w22, w1, x0
  418a44:	ldr	x0, [x20]
  418a48:	cbz	x0, 418aa0 <ferror@plt+0x15cd0>
  418a4c:	ldr	w24, [x0, #4]
  418a50:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  418a54:	str	x0, [x20]
  418a58:	and	w22, w22, #0x7fffffff
  418a5c:	stp	w22, w24, [x0]
  418a60:	mov	x1, x0
  418a64:	cbz	w19, 418ac4 <ferror@plt+0x15cf4>
  418a68:	mov	w2, w21
  418a6c:	mov	x0, #0x8                   	// #8
  418a70:	cbz	w2, 418aa8 <ferror@plt+0x15cd8>
  418a74:	add	x6, x23, x0
  418a78:	add	x3, x1, x0
  418a7c:	sub	w2, w2, #0x1
  418a80:	add	x0, x0, #0x18
  418a84:	ldp	x4, x5, [x6]
  418a88:	stp	x4, x5, [x3]
  418a8c:	ldr	x4, [x6, #16]
  418a90:	str	x4, [x3, #16]
  418a94:	b	418a70 <ferror@plt+0x15ca0>
  418a98:	mov	w19, #0x0                   	// #0
  418a9c:	b	418a10 <ferror@plt+0x15c40>
  418aa0:	mov	w24, #0x0                   	// #0
  418aa4:	b	418a50 <ferror@plt+0x15c80>
  418aa8:	str	w21, [x1, #4]
  418aac:	mov	w0, w19
  418ab0:	ldp	x19, x20, [sp, #16]
  418ab4:	ldp	x21, x22, [sp, #32]
  418ab8:	ldp	x23, x24, [sp, #48]
  418abc:	ldp	x29, x30, [sp], #64
  418ac0:	ret
  418ac4:	mov	w19, #0x1                   	// #1
  418ac8:	b	418aac <ferror@plt+0x15cdc>
  418acc:	stp	x29, x30, [sp, #-32]!
  418ad0:	mov	w2, #0x0                   	// #0
  418ad4:	mov	x29, sp
  418ad8:	stp	x19, x20, [sp, #16]
  418adc:	mov	x20, x0
  418ae0:	mov	x19, x1
  418ae4:	mov	w1, #0x1                   	// #1
  418ae8:	bl	4189c8 <ferror@plt+0x15bf8>
  418aec:	ldr	x0, [x20]
  418af0:	ldp	x4, x5, [x19]
  418af4:	ldr	w2, [x0, #4]
  418af8:	add	w1, w2, #0x1
  418afc:	mov	w3, w2
  418b00:	str	w1, [x0, #4]
  418b04:	mov	x1, #0x18                  	// #24
  418b08:	madd	x3, x3, x1, x0
  418b0c:	stp	x4, x5, [x3, #8]
  418b10:	ldr	x4, [x19, #16]
  418b14:	ldp	x19, x20, [sp, #16]
  418b18:	str	x4, [x3, #24]
  418b1c:	mov	x3, #0x8                   	// #8
  418b20:	ldp	x29, x30, [sp], #32
  418b24:	umaddl	x2, w2, w1, x3
  418b28:	add	x0, x0, x2
  418b2c:	ret
  418b30:	stp	x29, x30, [sp, #-64]!
  418b34:	and	w2, w2, #0xff
  418b38:	mov	x29, sp
  418b3c:	stp	x19, x20, [sp, #16]
  418b40:	ldr	x19, [x0]
  418b44:	stp	x21, x22, [sp, #32]
  418b48:	mov	x21, x0
  418b4c:	stp	x23, x24, [sp, #48]
  418b50:	cbz	x19, 418b70 <ferror@plt+0x15da0>
  418b54:	ldp	w0, w22, [x19]
  418b58:	ubfx	x0, x0, #0, #31
  418b5c:	sub	w0, w0, w22
  418b60:	cmp	w1, w0
  418b64:	b.hi	418b80 <ferror@plt+0x15db0>  // b.pmore
  418b68:	mov	w20, #0x0                   	// #0
  418b6c:	b	418c00 <ferror@plt+0x15e30>
  418b70:	mov	w20, #0x0                   	// #0
  418b74:	cbz	w1, 418c00 <ferror@plt+0x15e30>
  418b78:	mov	w22, #0x0                   	// #0
  418b7c:	b	418b94 <ferror@plt+0x15dc4>
  418b80:	ldrsb	w0, [x19, #3]
  418b84:	tbz	w0, #31, 418bec <ferror@plt+0x15e1c>
  418b88:	add	w1, w1, w22
  418b8c:	mov	w20, #0x1                   	// #1
  418b90:	str	xzr, [x21]
  418b94:	ldr	x0, [x21]
  418b98:	bl	411438 <ferror@plt+0xe668>
  418b9c:	mov	w23, w0
  418ba0:	mov	x1, #0x8                   	// #8
  418ba4:	add	x1, x1, w0, uxtw #4
  418ba8:	ldr	x0, [x21]
  418bac:	cbz	x0, 418bf4 <ferror@plt+0x15e24>
  418bb0:	ldr	w24, [x0, #4]
  418bb4:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  418bb8:	str	x0, [x21]
  418bbc:	and	w23, w23, #0x7fffffff
  418bc0:	stp	w23, w24, [x0]
  418bc4:	mov	x1, x0
  418bc8:	cbz	w20, 418c18 <ferror@plt+0x15e48>
  418bcc:	add	x2, x0, #0x8
  418bd0:	add	x19, x19, #0x8
  418bd4:	mov	w0, w22
  418bd8:	cbz	w0, 418bfc <ferror@plt+0x15e2c>
  418bdc:	ldp	x4, x5, [x19], #16
  418be0:	sub	w0, w0, #0x1
  418be4:	stp	x4, x5, [x2], #16
  418be8:	b	418bd8 <ferror@plt+0x15e08>
  418bec:	mov	w20, #0x0                   	// #0
  418bf0:	b	418b78 <ferror@plt+0x15da8>
  418bf4:	mov	w24, #0x0                   	// #0
  418bf8:	b	418bb4 <ferror@plt+0x15de4>
  418bfc:	str	w22, [x1, #4]
  418c00:	mov	w0, w20
  418c04:	ldp	x19, x20, [sp, #16]
  418c08:	ldp	x21, x22, [sp, #32]
  418c0c:	ldp	x23, x24, [sp, #48]
  418c10:	ldp	x29, x30, [sp], #64
  418c14:	ret
  418c18:	mov	w20, #0x1                   	// #1
  418c1c:	b	418c00 <ferror@plt+0x15e30>
  418c20:	stp	x29, x30, [sp, #-64]!
  418c24:	and	w2, w2, #0xff
  418c28:	mov	x29, sp
  418c2c:	stp	x19, x20, [sp, #16]
  418c30:	ldr	x19, [x0]
  418c34:	stp	x21, x22, [sp, #32]
  418c38:	mov	x21, x0
  418c3c:	stp	x23, x24, [sp, #48]
  418c40:	cbz	x19, 418c60 <ferror@plt+0x15e90>
  418c44:	ldp	w0, w22, [x19]
  418c48:	ubfx	x0, x0, #0, #31
  418c4c:	sub	w0, w0, w22
  418c50:	cmp	w1, w0
  418c54:	b.hi	418c70 <ferror@plt+0x15ea0>  // b.pmore
  418c58:	mov	w20, #0x0                   	// #0
  418c5c:	b	418cf0 <ferror@plt+0x15f20>
  418c60:	mov	w20, #0x0                   	// #0
  418c64:	cbz	w1, 418cf0 <ferror@plt+0x15f20>
  418c68:	mov	w22, #0x0                   	// #0
  418c6c:	b	418c84 <ferror@plt+0x15eb4>
  418c70:	ldrsb	w0, [x19, #3]
  418c74:	tbz	w0, #31, 418cdc <ferror@plt+0x15f0c>
  418c78:	add	w1, w1, w22
  418c7c:	mov	w20, #0x1                   	// #1
  418c80:	str	xzr, [x21]
  418c84:	ldr	x0, [x21]
  418c88:	bl	411438 <ferror@plt+0xe668>
  418c8c:	mov	w23, w0
  418c90:	mov	x1, #0x8                   	// #8
  418c94:	add	x1, x1, w0, uxtw #4
  418c98:	ldr	x0, [x21]
  418c9c:	cbz	x0, 418ce4 <ferror@plt+0x15f14>
  418ca0:	ldr	w24, [x0, #4]
  418ca4:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  418ca8:	str	x0, [x21]
  418cac:	and	w23, w23, #0x7fffffff
  418cb0:	stp	w23, w24, [x0]
  418cb4:	mov	x1, x0
  418cb8:	cbz	w20, 418d08 <ferror@plt+0x15f38>
  418cbc:	add	x2, x0, #0x8
  418cc0:	add	x19, x19, #0x8
  418cc4:	mov	w0, w22
  418cc8:	cbz	w0, 418cec <ferror@plt+0x15f1c>
  418ccc:	ldp	x4, x5, [x19], #16
  418cd0:	sub	w0, w0, #0x1
  418cd4:	stp	x4, x5, [x2], #16
  418cd8:	b	418cc8 <ferror@plt+0x15ef8>
  418cdc:	mov	w20, #0x0                   	// #0
  418ce0:	b	418c68 <ferror@plt+0x15e98>
  418ce4:	mov	w24, #0x0                   	// #0
  418ce8:	b	418ca4 <ferror@plt+0x15ed4>
  418cec:	str	w22, [x1, #4]
  418cf0:	mov	w0, w20
  418cf4:	ldp	x19, x20, [sp, #16]
  418cf8:	ldp	x21, x22, [sp, #32]
  418cfc:	ldp	x23, x24, [sp, #48]
  418d00:	ldp	x29, x30, [sp], #64
  418d04:	ret
  418d08:	mov	w20, #0x1                   	// #1
  418d0c:	b	418cf0 <ferror@plt+0x15f20>
  418d10:	stp	x29, x30, [sp, #-96]!
  418d14:	mov	x29, sp
  418d18:	stp	x19, x20, [sp, #16]
  418d1c:	mov	x19, x0
  418d20:	stp	x21, x22, [sp, #32]
  418d24:	ldr	w22, [x0, #40]
  418d28:	stp	x23, x24, [sp, #48]
  418d2c:	ldp	x24, x20, [x0]
  418d30:	stp	x25, x26, [sp, #64]
  418d34:	ldp	x1, x0, [x0, #16]
  418d38:	str	x27, [sp, #80]
  418d3c:	add	x25, x24, x20, lsl #4
  418d40:	sub	x1, x1, x0
  418d44:	lsl	x0, x1, #1
  418d48:	cmp	x20, x1, lsl #1
  418d4c:	b.cc	418d64 <ferror@plt+0x15f94>  // b.lo, b.ul, b.last
  418d50:	lsl	w1, w1, #3
  418d54:	cmp	x20, x1
  418d58:	b.ls	418d7c <ferror@plt+0x15fac>  // b.plast
  418d5c:	cmp	x20, #0x20
  418d60:	b.ls	418d7c <ferror@plt+0x15fac>  // b.plast
  418d64:	bl	40bcbc <ferror@plt+0x8eec>
  418d68:	mov	w22, w0
  418d6c:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  418d70:	add	x0, x0, #0x1b0
  418d74:	ubfiz	x1, x22, #4, #32
  418d78:	ldr	w20, [x0, x1]
  418d7c:	ldrb	w0, [x19, #44]
  418d80:	mov	x1, x20
  418d84:	mov	x26, x24
  418d88:	bl	416d90 <ferror@plt+0x13fc0>
  418d8c:	mov	x23, x0
  418d90:	ldp	x0, x1, [x19, #16]
  418d94:	stp	x23, x20, [x19]
  418d98:	str	w22, [x19, #40]
  418d9c:	sub	x0, x0, x1
  418da0:	stp	x0, xzr, [x19, #16]
  418da4:	ldr	w27, [x26]
  418da8:	cbz	w27, 418e00 <ferror@plt+0x16030>
  418dac:	mov	w1, w22
  418db0:	mov	w0, w27
  418db4:	bl	408c44 <ferror@plt+0x5e74>
  418db8:	mov	w21, w0
  418dbc:	ubfiz	x0, x21, #4, #32
  418dc0:	add	x2, x23, x0
  418dc4:	ldr	w0, [x23, x0]
  418dc8:	cbz	w0, 418df8 <ferror@plt+0x16028>
  418dcc:	mov	w1, w22
  418dd0:	mov	w0, w27
  418dd4:	bl	408c7c <ferror@plt+0x5eac>
  418dd8:	add	w21, w21, w0
  418ddc:	cmp	x20, w21, uxtw
  418de0:	b.hi	418de8 <ferror@plt+0x16018>  // b.pmore
  418de4:	sub	w21, w21, w20
  418de8:	ubfiz	x1, x21, #4, #32
  418dec:	add	x2, x23, x1
  418df0:	ldr	w1, [x23, x1]
  418df4:	cbnz	w1, 418dd8 <ferror@plt+0x16008>
  418df8:	ldp	x0, x1, [x26]
  418dfc:	stp	x0, x1, [x2]
  418e00:	add	x26, x26, #0x10
  418e04:	cmp	x25, x26
  418e08:	b.hi	418da4 <ferror@plt+0x15fd4>  // b.pmore
  418e0c:	ldrb	w0, [x19, #44]
  418e10:	cbnz	w0, 418e34 <ferror@plt+0x16064>
  418e14:	mov	x0, x24
  418e18:	ldp	x19, x20, [sp, #16]
  418e1c:	ldp	x21, x22, [sp, #32]
  418e20:	ldp	x23, x24, [sp, #48]
  418e24:	ldp	x25, x26, [sp, #64]
  418e28:	ldr	x27, [sp, #80]
  418e2c:	ldp	x29, x30, [sp], #96
  418e30:	b	402b30 <free@plt>
  418e34:	mov	x0, x24
  418e38:	ldp	x19, x20, [sp, #16]
  418e3c:	ldp	x21, x22, [sp, #32]
  418e40:	ldp	x23, x24, [sp, #48]
  418e44:	ldp	x25, x26, [sp, #64]
  418e48:	ldr	x27, [sp, #80]
  418e4c:	ldp	x29, x30, [sp], #96
  418e50:	b	40c0d8 <ferror@plt+0x9308>
  418e54:	str	xzr, [x0]
  418e58:	ret
  418e5c:	stp	x29, x30, [sp, #-32]!
  418e60:	mov	x29, sp
  418e64:	stp	x19, x20, [sp, #16]
  418e68:	mov	x19, x0
  418e6c:	ldr	x0, [x19]
  418e70:	cbz	x0, 418e84 <ferror@plt+0x160b4>
  418e74:	ldr	x20, [x0]
  418e78:	bl	402b30 <free@plt>
  418e7c:	str	x20, [x19]
  418e80:	b	418e6c <ferror@plt+0x1609c>
  418e84:	ldp	x19, x20, [sp, #16]
  418e88:	ldp	x29, x30, [sp], #32
  418e8c:	ret
  418e90:	cmp	x0, #0x10, lsl #12
  418e94:	b.ne	418ea4 <ferror@plt+0x160d4>  // b.any
  418e98:	adrp	x2, 495000 <_obstack_memory_used@@Base+0x505fc>
  418e9c:	ldr	x1, [x2, #2464]
  418ea0:	cbnz	x1, 418ea8 <ferror@plt+0x160d8>
  418ea4:	b	44526c <_obstack_memory_used@@Base+0x868>
  418ea8:	ldr	x0, [x1]
  418eac:	str	x0, [x2, #2464]
  418eb0:	mov	x0, x1
  418eb4:	ret
  418eb8:	ldr	x2, [x0]
  418ebc:	mov	x1, x0
  418ec0:	sub	x2, x2, x0
  418ec4:	cmp	x2, #0x10, lsl #12
  418ec8:	b.ne	418ee0 <ferror@plt+0x16110>  // b.any
  418ecc:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  418ed0:	ldr	x2, [x0, #2464]
  418ed4:	str	x2, [x1]
  418ed8:	str	x1, [x0, #2464]
  418edc:	ret
  418ee0:	b	402b30 <free@plt>
  418ee4:	stp	x29, x30, [sp, #-32]!
  418ee8:	mov	x29, sp
  418eec:	str	x19, [sp, #16]
  418ef0:	eor	x19, x1, x0
  418ef4:	blr	x2
  418ef8:	asr	w0, w0, #31
  418efc:	sxtw	x0, w0
  418f00:	and	x0, x0, x19
  418f04:	ldr	x19, [sp, #16]
  418f08:	ldp	x29, x30, [sp], #32
  418f0c:	ret
  418f10:	stp	x29, x30, [sp, #-96]!
  418f14:	mov	x29, sp
  418f18:	stp	x21, x22, [sp, #32]
  418f1c:	stp	x23, x24, [sp, #48]
  418f20:	mov	x23, x0
  418f24:	mov	x24, x3
  418f28:	ldp	x21, x0, [x1, #24]
  418f2c:	stp	x19, x20, [sp, #16]
  418f30:	mov	x19, x1
  418f34:	stp	x25, x26, [sp, #64]
  418f38:	mov	x25, x2
  418f3c:	str	x27, [sp, #80]
  418f40:	cmp	x0, x2
  418f44:	b.cc	4192d4 <ferror@plt+0x16504>  // b.lo, b.ul, b.last
  418f48:	ldr	x2, [x19]
  418f4c:	stp	x3, x25, [x19, #8]
  418f50:	add	x20, x23, x21
  418f54:	mov	x1, x23
  418f58:	mov	x0, x20
  418f5c:	bl	418ee4 <ferror@plt+0x16114>
  418f60:	add	x21, x23, x21, lsl #1
  418f64:	eor	x20, x20, x0
  418f68:	eor	x23, x23, x0
  418f6c:	ldr	x0, [x19, #16]
  418f70:	cmp	x0, #0x3
  418f74:	b.ne	418fa8 <ferror@plt+0x161d8>  // b.any
  418f78:	ldr	x2, [x19]
  418f7c:	mov	x1, x20
  418f80:	mov	x0, x21
  418f84:	bl	418ee4 <ferror@plt+0x16114>
  418f88:	eor	x20, x20, x0
  418f8c:	ldr	x2, [x19]
  418f90:	mov	x1, x23
  418f94:	eor	x21, x21, x0
  418f98:	mov	x0, x20
  418f9c:	bl	418ee4 <ferror@plt+0x16114>
  418fa0:	eor	x23, x23, x0
  418fa4:	eor	x20, x20, x0
  418fa8:	ldp	x1, x24, [x19, #16]
  418fac:	cmp	x1, #0x3
  418fb0:	b.hi	4190b4 <ferror@plt+0x162e4>  // b.pmore
  418fb4:	cmp	x24, #0x8
  418fb8:	b.ne	418ff8 <ferror@plt+0x16228>  // b.any
  418fbc:	cmp	x1, #0x3
  418fc0:	ldr	x2, [x20]
  418fc4:	ldr	x3, [x23]
  418fc8:	ldr	x0, [x19, #8]
  418fcc:	b.ne	418fd8 <ferror@plt+0x16208>  // b.any
  418fd0:	ldr	x1, [x21]
  418fd4:	str	x1, [x0, #16]
  418fd8:	stp	x3, x2, [x0]
  418fdc:	ldp	x19, x20, [sp, #16]
  418fe0:	ldp	x21, x22, [sp, #32]
  418fe4:	ldp	x23, x24, [sp, #48]
  418fe8:	ldp	x25, x26, [sp, #64]
  418fec:	ldr	x27, [sp, #80]
  418ff0:	ldp	x29, x30, [sp], #96
  418ff4:	ret
  418ff8:	cmp	x24, #0x4
  418ffc:	b.ne	419024 <ferror@plt+0x16254>  // b.any
  419000:	ldr	w2, [x20]
  419004:	cmp	x1, #0x3
  419008:	ldr	w3, [x23]
  41900c:	ldr	x0, [x19, #8]
  419010:	b.ne	41901c <ferror@plt+0x1624c>  // b.any
  419014:	ldr	w1, [x21]
  419018:	str	w1, [x0, #8]
  41901c:	stp	w3, w2, [x0]
  419020:	b	418fdc <ferror@plt+0x1620c>
  419024:	mov	x0, #0x0                   	// #0
  419028:	ldr	x2, [x19, #24]
  41902c:	add	x3, x0, #0x8
  419030:	cmp	x3, x2
  419034:	b.hi	419070 <ferror@plt+0x162a0>  // b.pmore
  419038:	ldp	x1, x6, [x19, #8]
  41903c:	ldr	x5, [x23, x0]
  419040:	ldr	x4, [x20, x0]
  419044:	add	x1, x1, x0
  419048:	cmp	x6, #0x3
  41904c:	b.ne	41905c <ferror@plt+0x1628c>  // b.any
  419050:	lsl	x2, x2, #1
  419054:	ldr	x0, [x21, x0]
  419058:	str	x0, [x1, x2]
  41905c:	str	x5, [x1]
  419060:	ldr	x0, [x19, #24]
  419064:	str	x4, [x1, x0]
  419068:	mov	x0, x3
  41906c:	b	419028 <ferror@plt+0x16258>
  419070:	ldr	x2, [x19, #24]
  419074:	cmp	x2, x0
  419078:	b.ls	418fdc <ferror@plt+0x1620c>  // b.plast
  41907c:	ldp	x1, x5, [x19, #8]
  419080:	ldrb	w4, [x23, x0]
  419084:	ldrb	w3, [x20, x0]
  419088:	add	x1, x1, x0
  41908c:	cmp	x5, #0x3
  419090:	b.ne	4190a0 <ferror@plt+0x162d0>  // b.any
  419094:	lsl	x2, x2, #1
  419098:	ldrb	w5, [x21, x0]
  41909c:	strb	w5, [x1, x2]
  4190a0:	strb	w4, [x1]
  4190a4:	add	x0, x0, #0x1
  4190a8:	ldr	x2, [x19, #24]
  4190ac:	strb	w3, [x1, x2]
  4190b0:	b	419070 <ferror@plt+0x162a0>
  4190b4:	add	x25, x21, x24
  4190b8:	cmp	x1, #0x5
  4190bc:	add	x24, x21, x24, lsl #1
  4190c0:	ldr	x2, [x19]
  4190c4:	b.ne	4190f4 <ferror@plt+0x16324>  // b.any
  4190c8:	mov	x1, x25
  4190cc:	mov	x0, x24
  4190d0:	bl	418ee4 <ferror@plt+0x16114>
  4190d4:	eor	x24, x24, x0
  4190d8:	ldr	x2, [x19]
  4190dc:	mov	x1, x21
  4190e0:	eor	x25, x25, x0
  4190e4:	mov	x0, x24
  4190e8:	bl	418ee4 <ferror@plt+0x16114>
  4190ec:	eor	x21, x0, x21
  4190f0:	eor	x24, x24, x0
  4190f4:	ldr	x2, [x19]
  4190f8:	mov	x1, x21
  4190fc:	mov	x0, x25
  419100:	bl	418ee4 <ferror@plt+0x16114>
  419104:	eor	x21, x21, x0
  419108:	eor	x25, x25, x0
  41910c:	ldr	x0, [x19, #16]
  419110:	cmp	x0, #0x5
  419114:	b.ne	419148 <ferror@plt+0x16378>  // b.any
  419118:	ldr	x2, [x19]
  41911c:	mov	x1, x23
  419120:	mov	x0, x25
  419124:	bl	418ee4 <ferror@plt+0x16114>
  419128:	eor	x23, x23, x0
  41912c:	ldr	x2, [x19]
  419130:	mov	x1, x20
  419134:	eor	x25, x25, x0
  419138:	mov	x0, x24
  41913c:	bl	418ee4 <ferror@plt+0x16114>
  419140:	eor	x20, x0, x20
  419144:	eor	x24, x24, x0
  419148:	ldr	x2, [x19]
  41914c:	mov	x1, x23
  419150:	mov	x0, x21
  419154:	bl	418ee4 <ferror@plt+0x16114>
  419158:	eor	x21, x21, x0
  41915c:	ldr	x2, [x19]
  419160:	mov	x1, x20
  419164:	eor	x23, x23, x0
  419168:	mov	x0, x25
  41916c:	bl	418ee4 <ferror@plt+0x16114>
  419170:	eor	x20, x20, x0
  419174:	ldr	x2, [x19]
  419178:	mov	x1, x20
  41917c:	eor	x25, x25, x0
  419180:	mov	x0, x21
  419184:	bl	418ee4 <ferror@plt+0x16114>
  419188:	eor	x1, x20, x0
  41918c:	eor	x21, x21, x0
  419190:	ldr	x0, [x19, #24]
  419194:	cmp	x0, #0x8
  419198:	b.ne	4191cc <ferror@plt+0x163fc>  // b.any
  41919c:	ldp	x0, x5, [x19, #8]
  4191a0:	ldr	x3, [x1]
  4191a4:	ldr	x2, [x21]
  4191a8:	cmp	x5, #0x5
  4191ac:	ldr	x4, [x23]
  4191b0:	ldr	x1, [x25]
  4191b4:	b.ne	4191c0 <ferror@plt+0x163f0>  // b.any
  4191b8:	ldr	x5, [x24]
  4191bc:	str	x5, [x0, #32]
  4191c0:	stp	x4, x3, [x0]
  4191c4:	stp	x2, x1, [x0, #16]
  4191c8:	b	418fdc <ferror@plt+0x1620c>
  4191cc:	cmp	x0, #0x4
  4191d0:	b.ne	419204 <ferror@plt+0x16434>  // b.any
  4191d4:	ldp	x0, x5, [x19, #8]
  4191d8:	ldr	w3, [x1]
  4191dc:	ldr	w2, [x21]
  4191e0:	ldr	w4, [x23]
  4191e4:	ldr	w1, [x25]
  4191e8:	cmp	x5, #0x5
  4191ec:	b.ne	4191f8 <ferror@plt+0x16428>  // b.any
  4191f0:	ldr	w5, [x24]
  4191f4:	str	w5, [x0, #16]
  4191f8:	stp	w4, w3, [x0]
  4191fc:	stp	w2, w1, [x0, #8]
  419200:	b	418fdc <ferror@plt+0x1620c>
  419204:	mov	x2, #0x0                   	// #0
  419208:	ldr	x3, [x19, #24]
  41920c:	add	x4, x2, #0x8
  419210:	cmp	x4, x3
  419214:	b.hi	419270 <ferror@plt+0x164a0>  // b.pmore
  419218:	ldp	x0, x9, [x19, #8]
  41921c:	ldr	x8, [x23, x2]
  419220:	ldr	x7, [x1, x2]
  419224:	add	x0, x0, x2
  419228:	cmp	x9, #0x5
  41922c:	ldr	x6, [x21, x2]
  419230:	ldr	x5, [x25, x2]
  419234:	b.ne	419244 <ferror@plt+0x16474>  // b.any
  419238:	lsl	x3, x3, #2
  41923c:	ldr	x2, [x24, x2]
  419240:	str	x2, [x0, x3]
  419244:	str	x8, [x0]
  419248:	ldr	x3, [x19, #24]
  41924c:	add	x2, x0, x3
  419250:	str	x7, [x0, x3]
  419254:	ldr	x0, [x19, #24]
  419258:	add	x3, x2, x0
  41925c:	str	x6, [x2, x0]
  419260:	mov	x2, x4
  419264:	ldr	x0, [x19, #24]
  419268:	str	x5, [x3, x0]
  41926c:	b	419208 <ferror@plt+0x16438>
  419270:	ldr	x3, [x19, #24]
  419274:	cmp	x3, x2
  419278:	b.ls	418fdc <ferror@plt+0x1620c>  // b.plast
  41927c:	ldp	x0, x8, [x19, #8]
  419280:	ldrb	w4, [x23, x2]
  419284:	ldrb	w7, [x1, x2]
  419288:	ldrb	w6, [x21, x2]
  41928c:	ldrb	w5, [x25, x2]
  419290:	add	x0, x0, x2
  419294:	cmp	x8, #0x5
  419298:	b.ne	4192a8 <ferror@plt+0x164d8>  // b.any
  41929c:	lsl	x3, x3, #2
  4192a0:	ldrb	w8, [x24, x2]
  4192a4:	strb	w8, [x0, x3]
  4192a8:	strb	w4, [x0]
  4192ac:	add	x2, x2, #0x1
  4192b0:	ldr	x4, [x19, #24]
  4192b4:	add	x3, x0, x4
  4192b8:	strb	w7, [x0, x4]
  4192bc:	ldr	x0, [x19, #24]
  4192c0:	add	x4, x3, x0
  4192c4:	strb	w6, [x3, x0]
  4192c8:	ldr	x0, [x19, #24]
  4192cc:	strb	w5, [x4, x0]
  4192d0:	b	419270 <ferror@plt+0x164a0>
  4192d4:	lsr	x26, x2, #1
  4192d8:	cmp	x23, x3
  4192dc:	csel	x20, x4, x23, eq  // eq = none
  4192e0:	sub	x2, x2, x2, lsr #1
  4192e4:	mul	x21, x26, x21
  4192e8:	add	x27, x23, x21
  4192ec:	add	x22, x3, x21
  4192f0:	mov	x3, x22
  4192f4:	mov	x0, x27
  4192f8:	bl	418f10 <ferror@plt+0x16140>
  4192fc:	mov	x2, x26
  419300:	mov	x1, x19
  419304:	mov	x0, x23
  419308:	mov	x4, x27
  41930c:	mov	x3, x20
  419310:	bl	418f10 <ferror@plt+0x16140>
  419314:	ldr	x2, [x19]
  419318:	mov	x0, x22
  41931c:	ldr	x1, [x19, #24]
  419320:	sub	x1, x21, x1
  419324:	add	x1, x20, x1
  419328:	blr	x2
  41932c:	tbz	w0, #31, 419390 <ferror@plt+0x165c0>
  419330:	ldr	x0, [x19, #24]
  419334:	cmp	x0, #0x8
  419338:	madd	x25, x0, x25, x24
  41933c:	b.ne	4193b8 <ferror@plt+0x165e8>  // b.any
  419340:	ldr	x2, [x19]
  419344:	mov	x1, x20
  419348:	mov	x0, x22
  41934c:	blr	x2
  419350:	asr	w0, w0, #31
  419354:	eor	x2, x22, x20
  419358:	sxtw	x1, w0
  41935c:	and	w0, w0, #0x8
  419360:	and	x2, x2, x1
  419364:	eor	x2, x20, x2
  419368:	add	x22, x22, w0, sxtw
  41936c:	ldr	x2, [x2]
  419370:	str	x2, [x24], #8
  419374:	cmp	x24, x22
  419378:	b.eq	418fdc <ferror@plt+0x1620c>  // b.none
  41937c:	mvn	x1, x1
  419380:	cmp	x25, x22
  419384:	and	x1, x1, #0x8
  419388:	add	x20, x20, x1
  41938c:	b.ne	419340 <ferror@plt+0x16570>  // b.any
  419390:	sub	x2, x22, x24
  419394:	mov	x1, x20
  419398:	mov	x0, x24
  41939c:	ldp	x19, x20, [sp, #16]
  4193a0:	ldp	x21, x22, [sp, #32]
  4193a4:	ldp	x23, x24, [sp, #48]
  4193a8:	ldp	x25, x26, [sp, #64]
  4193ac:	ldr	x27, [sp, #80]
  4193b0:	ldp	x29, x30, [sp], #96
  4193b4:	b	4026a0 <memcpy@plt>
  4193b8:	cmp	x0, #0x4
  4193bc:	b.ne	419414 <ferror@plt+0x16644>  // b.any
  4193c0:	ldr	x2, [x19]
  4193c4:	mov	x1, x20
  4193c8:	mov	x0, x22
  4193cc:	blr	x2
  4193d0:	asr	w0, w0, #31
  4193d4:	eor	x2, x22, x20
  4193d8:	sxtw	x1, w0
  4193dc:	and	w0, w0, #0x4
  4193e0:	and	x2, x2, x1
  4193e4:	eor	x2, x20, x2
  4193e8:	add	x22, x22, w0, sxtw
  4193ec:	ldr	w2, [x2]
  4193f0:	str	w2, [x24], #4
  4193f4:	cmp	x24, x22
  4193f8:	b.eq	418fdc <ferror@plt+0x1620c>  // b.none
  4193fc:	mvn	x1, x1
  419400:	cmp	x25, x22
  419404:	and	x1, x1, #0x4
  419408:	add	x20, x20, x1
  41940c:	b.ne	4193c0 <ferror@plt+0x165f0>  // b.any
  419410:	b	419390 <ferror@plt+0x165c0>
  419414:	ldr	x2, [x19]
  419418:	mov	x1, x20
  41941c:	mov	x0, x22
  419420:	blr	x2
  419424:	asr	w21, w0, #31
  419428:	ldr	x2, [x19, #24]
  41942c:	sxtw	x21, w21
  419430:	eor	x1, x22, x20
  419434:	mov	x0, x24
  419438:	and	x1, x1, x21
  41943c:	eor	x1, x20, x1
  419440:	bl	4026a0 <memcpy@plt>
  419444:	ldr	x1, [x19, #24]
  419448:	add	x24, x0, x1
  41944c:	and	x0, x21, x1
  419450:	add	x22, x22, x0
  419454:	cmp	x24, x22
  419458:	b.eq	418fdc <ferror@plt+0x1620c>  // b.none
  41945c:	mvn	x21, x21
  419460:	cmp	x25, x22
  419464:	and	x21, x21, x1
  419468:	add	x20, x20, x21
  41946c:	b.ne	419414 <ferror@plt+0x16644>  // b.any
  419470:	b	419390 <ferror@plt+0x165c0>
  419474:	cmp	x1, #0x1
  419478:	b.ls	419510 <ferror@plt+0x16740>  // b.plast
  41947c:	stp	x29, x30, [sp, #-352]!
  419480:	mov	x29, sp
  419484:	stp	x19, x20, [sp, #16]
  419488:	mov	x20, x1
  41948c:	stp	x21, x22, [sp, #32]
  419490:	mov	x21, x0
  419494:	tbz	x2, #63, 419500 <ferror@plt+0x16730>
  419498:	mvn	x2, x2
  41949c:	mov	x0, #0x3                   	// #3
  4194a0:	str	x0, [sp, #88]
  4194a4:	lsr	x0, x20, #1
  4194a8:	stp	x3, x21, [sp, #56]
  4194ac:	add	x22, sp, #0x60
  4194b0:	mul	x0, x0, x2
  4194b4:	stp	x20, x2, [sp, #72]
  4194b8:	cmp	x0, #0x100
  4194bc:	b.ls	419508 <ferror@plt+0x16738>  // b.plast
  4194c0:	bl	44526c <_obstack_memory_used@@Base+0x868>
  4194c4:	mov	x19, x0
  4194c8:	mov	x4, x19
  4194cc:	mov	x3, x21
  4194d0:	mov	x2, x20
  4194d4:	add	x1, sp, #0x38
  4194d8:	mov	x0, x21
  4194dc:	bl	418f10 <ferror@plt+0x16140>
  4194e0:	cmp	x19, x22
  4194e4:	b.eq	4194f0 <ferror@plt+0x16720>  // b.none
  4194e8:	mov	x0, x19
  4194ec:	bl	402b30 <free@plt>
  4194f0:	ldp	x19, x20, [sp, #16]
  4194f4:	ldp	x21, x22, [sp, #32]
  4194f8:	ldp	x29, x30, [sp], #352
  4194fc:	ret
  419500:	mov	x0, #0x5                   	// #5
  419504:	b	4194a0 <ferror@plt+0x166d0>
  419508:	mov	x19, x22
  41950c:	b	4194c8 <ferror@plt+0x166f8>
  419510:	ret
  419514:	mvn	x2, x2
  419518:	b	419474 <ferror@plt+0x166a4>
  41951c:	ldr	x6, [x1]
  419520:	cbz	x6, 419584 <ferror@plt+0x167b4>
  419524:	ldr	x5, [x0]
  419528:	ldrb	w3, [x5]
  41952c:	cmp	w3, #0x7f
  419530:	b.hi	419550 <ferror@plt+0x16780>  // b.pmore
  419534:	str	w3, [x2]
  419538:	sub	x6, x6, #0x1
  41953c:	str	x6, [x1]
  419540:	add	x5, x5, #0x1
  419544:	str	x5, [x0]
  419548:	mov	w0, #0x0                   	// #0
  41954c:	ret
  419550:	adrp	x7, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  419554:	add	x7, x7, #0x928
  419558:	add	x10, x7, #0x6
  41955c:	mov	x4, #0x1                   	// #1
  419560:	mov	x9, x4
  419564:	add	x4, x4, #0x1
  419568:	ldrb	w8, [x9, x7]
  41956c:	ldrb	w9, [x9, x10]
  419570:	bic	w11, w3, w8
  419574:	cmp	w11, w9
  419578:	b.ne	41958c <ferror@plt+0x167bc>  // b.any
  41957c:	cmp	x6, x4
  419580:	b.cs	41959c <ferror@plt+0x167cc>  // b.hs, b.nlast
  419584:	mov	w0, #0x16                  	// #22
  419588:	b	41954c <ferror@plt+0x1677c>
  41958c:	cmp	x4, #0x6
  419590:	b.ne	419560 <ferror@plt+0x16790>  // b.any
  419594:	mov	w0, #0x54                  	// #84
  419598:	b	41954c <ferror@plt+0x1677c>
  41959c:	and	w3, w3, w8
  4195a0:	add	x8, x5, #0x1
  4195a4:	add	x5, x5, x4
  4195a8:	ldrb	w7, [x8], #1
  4195ac:	and	w9, w7, #0xc0
  4195b0:	cmp	w9, #0x80
  4195b4:	b.ne	419594 <ferror@plt+0x167c4>  // b.any
  4195b8:	and	w7, w7, #0x3f
  4195bc:	cmp	x5, x8
  4195c0:	add	w3, w7, w3, lsl #6
  4195c4:	b.ne	4195a8 <ferror@plt+0x167d8>  // b.any
  4195c8:	sub	w8, w3, #0x80
  4195cc:	mov	w7, #0x7fffff80            	// #2147483520
  4195d0:	cmp	w8, w7
  4195d4:	b.cs	419594 <ferror@plt+0x167c4>  // b.hs, b.nlast
  4195d8:	cmp	w3, #0x7ff
  4195dc:	ccmp	x4, #0x2, #0x0, ls  // ls = plast
  4195e0:	b.hi	419594 <ferror@plt+0x167c4>  // b.pmore
  4195e4:	mov	w7, #0xffff                	// #65535
  4195e8:	cmp	w3, w7
  4195ec:	ccmp	x4, #0x3, #0x0, ls  // ls = plast
  4195f0:	b.hi	419594 <ferror@plt+0x167c4>  // b.pmore
  4195f4:	mov	w7, #0x1fffff              	// #2097151
  4195f8:	cmp	w3, w7
  4195fc:	ccmp	x4, #0x4, #0x0, ls  // ls = plast
  419600:	b.hi	419594 <ferror@plt+0x167c4>  // b.pmore
  419604:	mov	w7, #0x3ffffff             	// #67108863
  419608:	cmp	w3, w7
  41960c:	ccmp	x4, #0x5, #0x0, ls  // ls = plast
  419610:	b.hi	419594 <ferror@plt+0x167c4>  // b.pmore
  419614:	mov	w7, #0xffff2800            	// #-55296
  419618:	add	w7, w3, w7
  41961c:	cmp	w7, #0x7ff
  419620:	b.ls	419594 <ferror@plt+0x167c4>  // b.plast
  419624:	str	w3, [x2]
  419628:	sub	x4, x6, x4
  41962c:	str	x5, [x0]
  419630:	str	x4, [x1]
  419634:	b	419548 <ferror@plt+0x16778>
  419638:	sub	sp, sp, #0x10
  41963c:	cmp	w0, #0x7f
  419640:	ldr	x6, [x1]
  419644:	b.hi	4196d8 <ferror@plt+0x16908>  // b.pmore
  419648:	add	x3, sp, #0xd
  41964c:	mov	x4, #0x1                   	// #1
  419650:	strb	w0, [sp, #13]
  419654:	ldr	x0, [x2]
  419658:	cmp	x0, x4
  41965c:	b.cc	41971c <ferror@plt+0x1694c>  // b.lo, b.ul, b.last
  419660:	add	x0, sp, #0xe
  419664:	mov	x5, #0x0                   	// #0
  419668:	add	x7, x5, x3
  41966c:	cmp	x0, x7
  419670:	b.ls	4196f0 <ferror@plt+0x16920>  // b.plast
  419674:	ldrb	w7, [x3, x5]
  419678:	strb	w7, [x6, x5]
  41967c:	add	x5, x5, #0x1
  419680:	b	419668 <ferror@plt+0x16898>
  419684:	mov	x5, x9
  419688:	mov	x7, x4
  41968c:	and	w4, w0, #0x3f
  419690:	lsr	w0, w0, #6
  419694:	orr	w4, w4, #0xffffff80
  419698:	sturb	w4, [x5, #-1]
  41969c:	sub	x9, x5, #0x1
  4196a0:	add	x4, x7, #0x1
  4196a4:	cmp	w0, #0x3e
  4196a8:	b.hi	419684 <ferror@plt+0x168b4>  // b.pmore
  4196ac:	add	x8, x3, x4
  4196b0:	ldurb	w8, [x8, #-1]
  4196b4:	tst	w8, w0
  4196b8:	b.ne	419684 <ferror@plt+0x168b4>  // b.any
  4196bc:	adrp	x8, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  4196c0:	add	x8, x8, #0x92e
  4196c4:	sub	x3, x5, #0x2
  4196c8:	ldrb	w7, [x8, x7]
  4196cc:	orr	w0, w0, w7
  4196d0:	sturb	w0, [x5, #-2]
  4196d4:	b	419654 <ferror@plt+0x16884>
  4196d8:	adrp	x3, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  4196dc:	add	x3, x3, #0x928
  4196e0:	add	x5, sp, #0xe
  4196e4:	add	x3, x3, #0xc
  4196e8:	mov	x7, #0x1                   	// #1
  4196ec:	b	41968c <ferror@plt+0x168bc>
  4196f0:	ldr	x5, [x2]
  4196f4:	cmp	x3, x0
  4196f8:	sub	x4, x5, x4
  4196fc:	str	x4, [x2]
  419700:	sub	x2, x0, x3
  419704:	mov	w0, #0x0                   	// #0
  419708:	csel	x2, x2, xzr, ls  // ls = plast
  41970c:	add	x6, x6, x2
  419710:	str	x6, [x1]
  419714:	add	sp, sp, #0x10
  419718:	ret
  41971c:	mov	w0, #0x7                   	// #7
  419720:	b	419714 <ferror@plt+0x16944>
  419724:	stp	x29, x30, [sp, #-32]!
  419728:	mov	x12, x0
  41972c:	mov	x0, x1
  419730:	mov	x29, sp
  419734:	mov	x1, x2
  419738:	ldr	x2, [x4]
  41973c:	str	wzr, [sp, #28]
  419740:	cmp	x2, #0x3
  419744:	b.ls	4197bc <ferror@plt+0x169ec>  // b.plast
  419748:	mov	x14, x3
  41974c:	mov	x13, x4
  419750:	add	x2, sp, #0x1c
  419754:	bl	41951c <ferror@plt+0x1674c>
  419758:	cbnz	w0, 4197b4 <ferror@plt+0x169e4>
  41975c:	cmp	x12, #0x0
  419760:	mov	x1, #0x3                   	// #3
  419764:	ldr	x2, [x14]
  419768:	csel	x3, x1, xzr, ne  // ne = any
  41976c:	ldr	w4, [sp, #28]
  419770:	csel	x1, xzr, x1, ne  // ne = any
  419774:	strb	w4, [x2, x3]
  419778:	cinc	x4, x2, ne  // ne = any
  41977c:	ldr	w3, [sp, #28]
  419780:	lsr	w3, w3, #8
  419784:	strb	w3, [x4, #1]
  419788:	cinc	x3, x2, eq  // eq = none
  41978c:	ldrh	w4, [sp, #30]
  419790:	strb	w4, [x3, #1]
  419794:	ldrb	w3, [sp, #31]
  419798:	strb	w3, [x2, x1]
  41979c:	ldr	x1, [x14]
  4197a0:	add	x1, x1, #0x4
  4197a4:	str	x1, [x14]
  4197a8:	ldr	x1, [x13]
  4197ac:	sub	x1, x1, #0x4
  4197b0:	str	x1, [x13]
  4197b4:	ldp	x29, x30, [sp], #32
  4197b8:	ret
  4197bc:	mov	w0, #0x7                   	// #7
  4197c0:	b	4197b4 <ferror@plt+0x169e4>
  4197c4:	stp	x29, x30, [sp, #-48]!
  4197c8:	mov	x14, x1
  4197cc:	mov	x18, x0
  4197d0:	mov	x29, sp
  4197d4:	ldr	x15, [x3]
  4197d8:	mov	x13, x3
  4197dc:	mov	x12, x4
  4197e0:	mov	x1, x2
  4197e4:	mov	x0, x14
  4197e8:	stp	x19, x20, [sp, #16]
  4197ec:	str	wzr, [sp, #44]
  4197f0:	ldr	x19, [x2]
  4197f4:	add	x2, sp, #0x2c
  4197f8:	ldr	x20, [x14]
  4197fc:	bl	41951c <ferror@plt+0x1674c>
  419800:	cbnz	w0, 419820 <ferror@plt+0x16a50>
  419804:	ldr	w5, [sp, #44]
  419808:	mov	w2, #0x10ffff              	// #1114111
  41980c:	cmp	w5, w2
  419810:	b.ls	41982c <ferror@plt+0x16a5c>  // b.plast
  419814:	str	x20, [x14]
  419818:	mov	w0, #0x54                  	// #84
  41981c:	str	x19, [x1]
  419820:	ldp	x19, x20, [sp, #16]
  419824:	ldp	x29, x30, [sp], #48
  419828:	ret
  41982c:	mov	w3, #0xffff                	// #65535
  419830:	cmp	w5, w3
  419834:	ldr	x2, [x12]
  419838:	b.hi	41988c <ferror@plt+0x16abc>  // b.pmore
  41983c:	cmp	x2, #0x1
  419840:	b.hi	419854 <ferror@plt+0x16a84>  // b.pmore
  419844:	str	x20, [x14]
  419848:	mov	w0, #0x7                   	// #7
  41984c:	str	x19, [x1]
  419850:	b	419820 <ferror@plt+0x16a50>
  419854:	cmp	x18, #0x0
  419858:	cset	x1, ne  // ne = any
  41985c:	cset	x2, eq  // eq = none
  419860:	strb	w5, [x15, x1]
  419864:	ldr	w1, [sp, #44]
  419868:	lsr	w1, w1, #8
  41986c:	strb	w1, [x15, x2]
  419870:	ldr	x1, [x13]
  419874:	add	x1, x1, #0x2
  419878:	str	x1, [x13]
  41987c:	ldr	x1, [x12]
  419880:	sub	x1, x1, #0x2
  419884:	str	x1, [x12]
  419888:	b	419820 <ferror@plt+0x16a50>
  41988c:	cmp	x2, #0x3
  419890:	b.ls	419844 <ferror@plt+0x16a74>  // b.plast
  419894:	sub	w1, w5, #0x10, lsl #12
  419898:	cmp	x18, #0x0
  41989c:	mov	w2, #0xd800                	// #55296
  4198a0:	cset	x3, ne  // ne = any
  4198a4:	add	w1, w2, w1, lsr #10
  4198a8:	and	w5, w5, #0x3ff
  4198ac:	mov	w2, #0xdc00                	// #56320
  4198b0:	add	w5, w5, w2
  4198b4:	cset	x2, eq  // eq = none
  4198b8:	strb	w1, [x15, x3]
  4198bc:	add	x3, x3, #0x2
  4198c0:	lsr	w1, w1, #8
  4198c4:	strb	w1, [x15, x2]
  4198c8:	add	x2, x2, #0x2
  4198cc:	strb	w5, [x15, x3]
  4198d0:	lsr	w5, w5, #8
  4198d4:	strb	w5, [x15, x2]
  4198d8:	ldr	x1, [x13]
  4198dc:	add	x1, x1, #0x4
  4198e0:	str	x1, [x13]
  4198e4:	ldr	x1, [x12]
  4198e8:	sub	x1, x1, #0x4
  4198ec:	b	419884 <ferror@plt+0x16ab4>
  4198f0:	mov	w0, #0x1                   	// #1
  4198f4:	ret
  4198f8:	stp	x29, x30, [sp, #-96]!
  4198fc:	mov	x29, sp
  419900:	stp	x21, x22, [sp, #32]
  419904:	mov	x22, x1
  419908:	mov	x21, x2
  41990c:	mov	x1, x2
  419910:	stp	x19, x20, [sp, #16]
  419914:	mov	x19, x8
  419918:	stp	x23, x24, [sp, #48]
  41991c:	mov	x23, x0
  419920:	mov	x0, x22
  419924:	stp	x25, x26, [sp, #64]
  419928:	str	x27, [sp, #80]
  41992c:	bl	402970 <strcasecmp@plt>
  419930:	cbnz	w0, 41996c <ferror@plt+0x16b9c>
  419934:	adrp	x0, 419000 <ferror@plt+0x16230>
  419938:	add	x0, x0, #0xd4c
  41993c:	str	x0, [x19]
  419940:	mov	x0, #0xffffffffffffffff    	// #-1
  419944:	str	x0, [x19, #8]
  419948:	str	w0, [x19, #16]
  41994c:	mov	sp, x29
  419950:	ldp	x19, x20, [sp, #16]
  419954:	ldp	x21, x22, [sp, #32]
  419958:	ldp	x23, x24, [sp, #48]
  41995c:	ldp	x25, x26, [sp, #64]
  419960:	ldr	x27, [sp, #80]
  419964:	ldp	x29, x30, [sp], #96
  419968:	ret
  41996c:	mov	x0, x22
  419970:	bl	402700 <strlen@plt>
  419974:	mov	x20, x0
  419978:	mov	x0, x21
  41997c:	bl	402700 <strlen@plt>
  419980:	add	x20, x20, x0
  419984:	add	x20, x20, #0x11
  419988:	mov	x1, x21
  41998c:	and	x20, x20, #0xfffffffffffffff0
  419990:	mov	x24, #0x0                   	// #0
  419994:	sub	sp, sp, x20
  419998:	adrp	x20, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41999c:	add	x20, x20, #0x928
  4199a0:	mov	x25, sp
  4199a4:	add	x20, x20, #0x18
  4199a8:	mov	x0, x25
  4199ac:	mov	x27, #0x18                  	// #24
  4199b0:	bl	402bd0 <strcpy@plt>
  4199b4:	mov	x0, x25
  4199b8:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x225fc>
  4199bc:	add	x1, x1, #0x93f
  4199c0:	bl	402920 <strcat@plt>
  4199c4:	mov	x1, x22
  4199c8:	mov	x0, x25
  4199cc:	bl	402920 <strcat@plt>
  4199d0:	mul	x26, x24, x27
  4199d4:	mov	x0, x25
  4199d8:	ldr	x1, [x26, x20]
  4199dc:	bl	402970 <strcasecmp@plt>
  4199e0:	cbnz	w0, 419a00 <ferror@plt+0x16c30>
  4199e4:	add	x20, x20, x26
  4199e8:	ldr	x0, [x20, #8]
  4199ec:	str	x0, [x19]
  4199f0:	ldr	x0, [x20, #16]
  4199f4:	str	x0, [x19, #8]
  4199f8:	mov	w0, #0xffffffff            	// #-1
  4199fc:	b	419948 <ferror@plt+0x16b78>
  419a00:	add	x24, x24, #0x1
  419a04:	cmp	x24, #0x8
  419a08:	b.ne	4199d0 <ferror@plt+0x16c00>  // b.any
  419a0c:	adrp	x0, 419000 <ferror@plt+0x16230>
  419a10:	add	x0, x0, #0xa8c
  419a14:	mov	x1, x21
  419a18:	str	x0, [x19]
  419a1c:	mov	x0, x22
  419a20:	bl	402be0 <iconv_open@plt>
  419a24:	mov	w1, #0xffffffff            	// #-1
  419a28:	str	x0, [x19, #8]
  419a2c:	str	w1, [x19, #16]
  419a30:	cmn	x0, #0x1
  419a34:	b.ne	41994c <ferror@plt+0x16b7c>  // b.any
  419a38:	bl	402cf0 <__errno_location@plt>
  419a3c:	ldr	w0, [x0]
  419a40:	cmp	w0, #0x16
  419a44:	b.ne	419a74 <ferror@plt+0x16ca4>  // b.any
  419a48:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  419a4c:	mov	x4, x22
  419a50:	mov	x3, x21
  419a54:	add	x2, x2, #0x8d1
  419a58:	mov	x0, x23
  419a5c:	mov	w1, #0x3                   	// #3
  419a60:	bl	421610 <ferror@plt+0x1e840>
  419a64:	adrp	x0, 419000 <ferror@plt+0x16230>
  419a68:	add	x0, x0, #0xd4c
  419a6c:	str	x0, [x19]
  419a70:	b	41994c <ferror@plt+0x16b7c>
  419a74:	mov	x0, x23
  419a78:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  419a7c:	mov	w1, #0x3                   	// #3
  419a80:	add	x2, x2, #0x901
  419a84:	bl	421ab4 <ferror@plt+0x1ece4>
  419a88:	b	419a64 <ferror@plt+0x16c94>
  419a8c:	stp	x29, x30, [sp, #-80]!
  419a90:	mov	x4, #0x0                   	// #0
  419a94:	mov	x29, sp
  419a98:	stp	x19, x20, [sp, #16]
  419a9c:	mov	x20, x0
  419aa0:	mov	x19, x3
  419aa4:	mov	x3, #0x0                   	// #0
  419aa8:	stp	x21, x22, [sp, #32]
  419aac:	mov	x22, x1
  419ab0:	mov	x21, x2
  419ab4:	mov	x1, #0x0                   	// #0
  419ab8:	mov	x2, #0x0                   	// #0
  419abc:	bl	402ae0 <iconv@plt>
  419ac0:	cmn	x0, #0x1
  419ac4:	b.eq	419bac <ferror@plt+0x16ddc>  // b.none
  419ac8:	ldp	x1, x0, [x19]
  419acc:	ldr	x2, [x19, #16]
  419ad0:	add	x1, x1, x2
  419ad4:	sub	x0, x0, x2
  419ad8:	stp	x22, x1, [sp, #48]
  419adc:	stp	x21, x0, [sp, #64]
  419ae0:	add	x4, sp, #0x48
  419ae4:	add	x3, sp, #0x38
  419ae8:	add	x2, sp, #0x40
  419aec:	add	x1, sp, #0x30
  419af0:	mov	x0, x20
  419af4:	bl	402ae0 <iconv@plt>
  419af8:	ldr	x0, [sp, #64]
  419afc:	cbnz	x0, 419bb4 <ferror@plt+0x16de4>
  419b00:	add	x4, sp, #0x48
  419b04:	add	x3, sp, #0x38
  419b08:	mov	x0, x20
  419b0c:	mov	x2, #0x0                   	// #0
  419b10:	mov	x1, #0x0                   	// #0
  419b14:	bl	402ae0 <iconv@plt>
  419b18:	cmn	x0, #0x1
  419b1c:	b.eq	419b44 <ferror@plt+0x16d74>  // b.none
  419b20:	ldr	x0, [x19, #8]
  419b24:	ldr	x1, [sp, #72]
  419b28:	sub	x0, x0, x1
  419b2c:	str	x0, [x19, #16]
  419b30:	mov	w0, #0x1                   	// #1
  419b34:	ldp	x19, x20, [sp, #16]
  419b38:	ldp	x21, x22, [sp, #32]
  419b3c:	ldp	x29, x30, [sp], #80
  419b40:	ret
  419b44:	bl	402cf0 <__errno_location@plt>
  419b48:	ldr	w0, [x0]
  419b4c:	cmp	w0, #0x7
  419b50:	b.ne	419bac <ferror@plt+0x16ddc>  // b.any
  419b54:	ldr	x0, [sp, #72]
  419b58:	ldr	x1, [x19, #8]
  419b5c:	add	x0, x0, #0x100
  419b60:	str	x0, [sp, #72]
  419b64:	ldr	x0, [x19]
  419b68:	add	x1, x1, #0x100
  419b6c:	str	x1, [x19, #8]
  419b70:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  419b74:	str	x0, [x19]
  419b78:	ldr	x1, [x19, #8]
  419b7c:	add	x4, sp, #0x48
  419b80:	ldr	x2, [sp, #72]
  419b84:	add	x3, sp, #0x38
  419b88:	sub	x1, x1, x2
  419b8c:	mov	x2, #0x0                   	// #0
  419b90:	add	x0, x0, x1
  419b94:	mov	x1, #0x0                   	// #0
  419b98:	str	x0, [sp, #56]
  419b9c:	mov	x0, x20
  419ba0:	bl	402ae0 <iconv@plt>
  419ba4:	cmn	x0, #0x1
  419ba8:	b.ne	419b20 <ferror@plt+0x16d50>  // b.any
  419bac:	mov	w0, #0x0                   	// #0
  419bb0:	b	419b34 <ferror@plt+0x16d64>
  419bb4:	bl	402cf0 <__errno_location@plt>
  419bb8:	ldr	w0, [x0]
  419bbc:	cmp	w0, #0x7
  419bc0:	b.ne	419bac <ferror@plt+0x16ddc>  // b.any
  419bc4:	ldr	x0, [sp, #72]
  419bc8:	ldr	x1, [x19, #8]
  419bcc:	add	x0, x0, #0x100
  419bd0:	str	x0, [sp, #72]
  419bd4:	ldr	x0, [x19]
  419bd8:	add	x1, x1, #0x100
  419bdc:	str	x1, [x19, #8]
  419be0:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  419be4:	str	x0, [x19]
  419be8:	ldr	x1, [x19, #8]
  419bec:	ldr	x2, [sp, #72]
  419bf0:	sub	x1, x1, x2
  419bf4:	add	x0, x0, x1
  419bf8:	str	x0, [sp, #56]
  419bfc:	b	419ae0 <ferror@plt+0x16d10>
  419c00:	stp	x29, x30, [sp, #-80]!
  419c04:	mov	x29, sp
  419c08:	stp	x21, x22, [sp, #32]
  419c0c:	mov	x21, x0
  419c10:	mov	x22, x1
  419c14:	ldp	x1, x0, [x4]
  419c18:	str	x2, [sp, #48]
  419c1c:	ldr	x2, [x4, #16]
  419c20:	stp	x19, x20, [sp, #16]
  419c24:	mov	x19, x4
  419c28:	str	x3, [sp, #64]
  419c2c:	add	x1, x1, x2
  419c30:	sub	x0, x0, x2
  419c34:	str	x1, [sp, #56]
  419c38:	str	x0, [sp, #72]
  419c3c:	add	x4, sp, #0x48
  419c40:	add	x3, sp, #0x38
  419c44:	add	x2, sp, #0x40
  419c48:	add	x1, sp, #0x30
  419c4c:	mov	x0, x22
  419c50:	blr	x21
  419c54:	mov	w20, w0
  419c58:	ldr	x0, [sp, #64]
  419c5c:	cbz	x0, 419c7c <ferror@plt+0x16eac>
  419c60:	cbz	w20, 419c3c <ferror@plt+0x16e6c>
  419c64:	cmp	w20, #0x7
  419c68:	b.eq	419ca0 <ferror@plt+0x16ed0>  // b.none
  419c6c:	bl	402cf0 <__errno_location@plt>
  419c70:	str	w20, [x0]
  419c74:	mov	w0, #0x0                   	// #0
  419c78:	b	419c90 <ferror@plt+0x16ec0>
  419c7c:	ldr	x0, [x19, #8]
  419c80:	ldr	x1, [sp, #72]
  419c84:	sub	x0, x0, x1
  419c88:	str	x0, [x19, #16]
  419c8c:	mov	w0, #0x1                   	// #1
  419c90:	ldp	x19, x20, [sp, #16]
  419c94:	ldp	x21, x22, [sp, #32]
  419c98:	ldp	x29, x30, [sp], #80
  419c9c:	ret
  419ca0:	ldr	x0, [sp, #72]
  419ca4:	ldr	x2, [x19, #8]
  419ca8:	add	x0, x0, #0x100
  419cac:	str	x0, [sp, #72]
  419cb0:	ldr	x0, [x19]
  419cb4:	add	x1, x2, #0x100
  419cb8:	str	x1, [x19, #8]
  419cbc:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  419cc0:	str	x0, [x19]
  419cc4:	ldr	x2, [x19, #8]
  419cc8:	ldr	x1, [sp, #72]
  419ccc:	sub	x2, x2, x1
  419cd0:	add	x2, x0, x2
  419cd4:	str	x2, [sp, #56]
  419cd8:	b	419c3c <ferror@plt+0x16e6c>
  419cdc:	mov	x4, x3
  419ce0:	mov	x3, x2
  419ce4:	mov	x2, x1
  419ce8:	mov	x1, x0
  419cec:	adrp	x0, 419000 <ferror@plt+0x16230>
  419cf0:	add	x0, x0, #0xe78
  419cf4:	b	419c00 <ferror@plt+0x16e30>
  419cf8:	mov	x4, x3
  419cfc:	mov	x3, x2
  419d00:	mov	x2, x1
  419d04:	mov	x1, x0
  419d08:	adrp	x0, 419000 <ferror@plt+0x16230>
  419d0c:	add	x0, x0, #0xdc8
  419d10:	b	419c00 <ferror@plt+0x16e30>
  419d14:	mov	x4, x3
  419d18:	mov	x3, x2
  419d1c:	mov	x2, x1
  419d20:	mov	x1, x0
  419d24:	adrp	x0, 419000 <ferror@plt+0x16230>
  419d28:	add	x0, x0, #0x7c4
  419d2c:	b	419c00 <ferror@plt+0x16e30>
  419d30:	mov	x4, x3
  419d34:	mov	x3, x2
  419d38:	mov	x2, x1
  419d3c:	mov	x1, x0
  419d40:	adrp	x0, 419000 <ferror@plt+0x16230>
  419d44:	add	x0, x0, #0x724
  419d48:	b	419c00 <ferror@plt+0x16e30>
  419d4c:	stp	x29, x30, [sp, #-48]!
  419d50:	mov	x29, sp
  419d54:	ldr	x0, [x3, #16]
  419d58:	str	x21, [sp, #32]
  419d5c:	mov	x21, x1
  419d60:	stp	x19, x20, [sp, #16]
  419d64:	add	x0, x2, x0
  419d68:	ldr	x1, [x3, #8]
  419d6c:	mov	x20, x2
  419d70:	mov	x19, x3
  419d74:	cmp	x0, x1
  419d78:	b.ls	419d90 <ferror@plt+0x16fc0>  // b.plast
  419d7c:	add	x1, x0, x0, lsr #2
  419d80:	str	x1, [x3, #8]
  419d84:	ldr	x0, [x3]
  419d88:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  419d8c:	str	x0, [x19]
  419d90:	ldr	x3, [x19]
  419d94:	mov	x2, x20
  419d98:	ldr	x0, [x19, #16]
  419d9c:	mov	x1, x21
  419da0:	add	x0, x3, x0
  419da4:	bl	4026a0 <memcpy@plt>
  419da8:	ldr	x2, [x19, #16]
  419dac:	mov	w0, #0x1                   	// #1
  419db0:	ldr	x21, [sp, #32]
  419db4:	add	x2, x2, x20
  419db8:	str	x2, [x19, #16]
  419dbc:	ldp	x19, x20, [sp, #16]
  419dc0:	ldp	x29, x30, [sp], #48
  419dc4:	ret
  419dc8:	mov	x11, x1
  419dcc:	mov	x1, x3
  419dd0:	ldr	x3, [x2]
  419dd4:	mov	x10, x2
  419dd8:	cmp	x3, #0x3
  419ddc:	b.ls	419e68 <ferror@plt+0x17098>  // b.plast
  419de0:	ldr	x7, [x11]
  419de4:	cmp	x0, #0x0
  419de8:	mov	x2, x4
  419dec:	mov	x6, #0x3                   	// #3
  419df0:	cinc	x4, x7, eq  // eq = none
  419df4:	csel	x3, xzr, x6, ne  // ne = any
  419df8:	csel	x6, x6, xzr, ne  // ne = any
  419dfc:	ldrb	w4, [x4, #1]
  419e00:	ldrb	w3, [x7, x3]
  419e04:	ldrb	w0, [x7, x6]
  419e08:	lsl	w4, w4, #16
  419e0c:	add	w3, w4, w3, lsl #24
  419e10:	cinc	x4, x7, ne  // ne = any
  419e14:	ldrb	w5, [x4, #1]
  419e18:	add	w0, w0, w5, lsl #8
  419e1c:	add	w0, w0, w3
  419e20:	mov	w3, #0xffff2800            	// #-55296
  419e24:	add	w3, w0, w3
  419e28:	cmp	w3, #0x7ff
  419e2c:	mov	w3, #0x7ffffffe            	// #2147483646
  419e30:	ccmp	w0, w3, #0x2, hi  // hi = pmore
  419e34:	b.hi	419e70 <ferror@plt+0x170a0>  // b.pmore
  419e38:	stp	x29, x30, [sp, #-16]!
  419e3c:	mov	x29, sp
  419e40:	bl	419638 <ferror@plt+0x16868>
  419e44:	cbnz	w0, 419e60 <ferror@plt+0x17090>
  419e48:	ldr	x1, [x11]
  419e4c:	add	x1, x1, #0x4
  419e50:	str	x1, [x11]
  419e54:	ldr	x1, [x10]
  419e58:	sub	x1, x1, #0x4
  419e5c:	str	x1, [x10]
  419e60:	ldp	x29, x30, [sp], #16
  419e64:	ret
  419e68:	mov	w0, #0x16                  	// #22
  419e6c:	ret
  419e70:	mov	w0, #0x54                  	// #84
  419e74:	ret
  419e78:	mov	x12, x1
  419e7c:	mov	x1, x3
  419e80:	ldr	x3, [x2]
  419e84:	mov	x11, x2
  419e88:	ldr	x5, [x12]
  419e8c:	cmp	x3, #0x1
  419e90:	b.ls	419f58 <ferror@plt+0x17188>  // b.plast
  419e94:	cmp	x0, #0x0
  419e98:	mov	x2, x4
  419e9c:	cset	x4, eq  // eq = none
  419ea0:	mov	w7, #0xffff2400            	// #-56320
  419ea4:	ldrb	w10, [x5, x4]
  419ea8:	cset	x4, ne  // ne = any
  419eac:	ldrb	w4, [x5, x4]
  419eb0:	add	w10, w4, w10, lsl #8
  419eb4:	add	w4, w10, w7
  419eb8:	cmp	w4, #0x3ff
  419ebc:	b.ls	419f60 <ferror@plt+0x17190>  // b.plast
  419ec0:	mov	w4, #0xffff2800            	// #-55296
  419ec4:	add	w6, w10, w4
  419ec8:	cmp	w6, #0x3ff
  419ecc:	b.hi	419f08 <ferror@plt+0x17138>  // b.pmore
  419ed0:	cmp	x3, #0x3
  419ed4:	b.ls	419f58 <ferror@plt+0x17188>  // b.plast
  419ed8:	cmp	x0, #0x0
  419edc:	cinc	x3, x5, eq  // eq = none
  419ee0:	cinc	x5, x5, ne  // ne = any
  419ee4:	ldrb	w10, [x3, #2]
  419ee8:	ldrb	w0, [x5, #2]
  419eec:	add	w10, w0, w10, lsl #8
  419ef0:	add	w7, w10, w7
  419ef4:	cmp	w7, #0x3ff
  419ef8:	b.hi	419f60 <ferror@plt+0x17190>  // b.pmore
  419efc:	add	w10, w10, w6, lsl #10
  419f00:	mov	w0, #0x2400                	// #9216
  419f04:	add	w10, w10, w0
  419f08:	stp	x29, x30, [sp, #-16]!
  419f0c:	mov	w0, w10
  419f10:	mov	x29, sp
  419f14:	bl	419638 <ferror@plt+0x16868>
  419f18:	cbnz	w0, 419f40 <ferror@plt+0x17170>
  419f1c:	mov	w3, #0xffff                	// #65535
  419f20:	cmp	w10, w3
  419f24:	ldr	x2, [x11]
  419f28:	ldr	x1, [x12]
  419f2c:	b.hi	419f48 <ferror@plt+0x17178>  // b.pmore
  419f30:	sub	x2, x2, #0x2
  419f34:	add	x1, x1, #0x2
  419f38:	str	x1, [x12]
  419f3c:	str	x2, [x11]
  419f40:	ldp	x29, x30, [sp], #16
  419f44:	ret
  419f48:	add	x1, x1, #0x4
  419f4c:	sub	x2, x2, #0x4
  419f50:	str	x1, [x12]
  419f54:	b	419f3c <ferror@plt+0x1716c>
  419f58:	mov	w0, #0x16                  	// #22
  419f5c:	ret
  419f60:	mov	w0, #0x54                  	// #84
  419f64:	ret
  419f68:	sub	w1, w1, #0x39
  419f6c:	cmp	w1, #0x9
  419f70:	b.hi	419f8c <ferror@plt+0x171bc>  // b.pmore
  419f74:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  419f78:	add	x2, x2, #0xee8
  419f7c:	ldrb	w1, [x2, w1, uxtw]
  419f80:	adr	x2, 419f8c <ferror@plt+0x171bc>
  419f84:	add	x1, x2, w1, sxtb #2
  419f88:	br	x1
  419f8c:	add	x0, x0, #0x208
  419f90:	ldp	x2, x3, [x0]
  419f94:	stp	x2, x3, [x8]
  419f98:	ldr	x0, [x0, #16]
  419f9c:	str	x0, [x8, #16]
  419fa0:	ret
  419fa4:	add	x0, x0, #0x220
  419fa8:	b	419f90 <ferror@plt+0x171c0>
  419fac:	add	x0, x0, #0x238
  419fb0:	b	419f90 <ferror@plt+0x171c0>
  419fb4:	add	x0, x0, #0x250
  419fb8:	b	419f90 <ferror@plt+0x171c0>
  419fbc:	add	x0, x0, #0x268
  419fc0:	b	419f90 <ferror@plt+0x171c0>
  419fc4:	stp	x29, x30, [sp, #-80]!
  419fc8:	mov	x29, sp
  419fcc:	stp	x23, x24, [sp, #48]
  419fd0:	ldr	x23, [x0, #1216]
  419fd4:	stp	x19, x20, [sp, #16]
  419fd8:	mov	x19, x2
  419fdc:	stp	x21, x22, [sp, #32]
  419fe0:	mov	w20, w1
  419fe4:	cmp	x23, w3, sxtw
  419fe8:	ldr	x22, [x2, #16]
  419fec:	ldr	x2, [x2, #8]
  419ff0:	str	x25, [sp, #64]
  419ff4:	b.eq	41a098 <ferror@plt+0x172c8>  // b.none
  419ff8:	sxtw	x21, w3
  419ffc:	cmp	x23, #0x20
  41a000:	mov	x24, #0x20                  	// #32
  41a004:	ldrb	w25, [x0, #1242]
  41a008:	csel	x0, x23, x24, ls  // ls = plast
  41a00c:	mov	x24, #0x1                   	// #1
  41a010:	udiv	x21, x21, x23
  41a014:	lsl	x24, x24, x0
  41a018:	sub	x24, x24, #0x1
  41a01c:	add	x0, x21, x22
  41a020:	cmp	x0, x2
  41a024:	b.ls	41a03c <ferror@plt+0x1726c>  // b.plast
  41a028:	ldr	x0, [x19]
  41a02c:	add	x1, x2, #0x100
  41a030:	str	x1, [x19, #8]
  41a034:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  41a038:	str	x0, [x19]
  41a03c:	sub	x4, x21, #0x1
  41a040:	mov	x0, #0x0                   	// #0
  41a044:	cmp	x21, x0
  41a048:	b.eq	41a074 <ferror@plt+0x172a4>  // b.none
  41a04c:	ldr	x1, [x19]
  41a050:	sub	x2, x4, x0
  41a054:	cmp	w25, #0x0
  41a058:	and	w3, w20, w24
  41a05c:	csel	x2, x2, x0, ne  // ne = any
  41a060:	lsr	w20, w20, w23
  41a064:	add	x1, x1, x2
  41a068:	add	x0, x0, #0x1
  41a06c:	strb	w3, [x1, x22]
  41a070:	b	41a044 <ferror@plt+0x17274>
  41a074:	ldr	x0, [x19, #16]
  41a078:	add	x21, x0, x21
  41a07c:	str	x21, [x19, #16]
  41a080:	ldp	x19, x20, [sp, #16]
  41a084:	ldp	x21, x22, [sp, #32]
  41a088:	ldp	x23, x24, [sp, #48]
  41a08c:	ldr	x25, [sp, #64]
  41a090:	ldp	x29, x30, [sp], #80
  41a094:	ret
  41a098:	add	x22, x22, #0x1
  41a09c:	cmp	x22, x2
  41a0a0:	b.ls	41a0b8 <ferror@plt+0x172e8>  // b.plast
  41a0a4:	ldr	x0, [x19]
  41a0a8:	add	x1, x2, #0x100
  41a0ac:	str	x1, [x19, #8]
  41a0b0:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  41a0b4:	str	x0, [x19]
  41a0b8:	ldr	x1, [x19]
  41a0bc:	ldr	x0, [x19, #16]
  41a0c0:	add	x2, x0, #0x1
  41a0c4:	str	x2, [x19, #16]
  41a0c8:	strb	w20, [x1, x0]
  41a0cc:	b	41a080 <ferror@plt+0x172b0>
  41a0d0:	stp	x29, x30, [sp, #-96]!
  41a0d4:	mov	x29, sp
  41a0d8:	stp	x19, x20, [sp, #16]
  41a0dc:	mov	x19, x0
  41a0e0:	adrp	x20, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41a0e4:	stp	x21, x22, [sp, #32]
  41a0e8:	add	x20, x20, #0xec3
  41a0ec:	ldrb	w22, [x0, #1242]
  41a0f0:	ldr	x1, [x0, #1168]
  41a0f4:	ldr	x21, [x0, #1176]
  41a0f8:	ldr	x0, [x0, #1232]
  41a0fc:	str	x23, [sp, #48]
  41a100:	cmp	x0, #0x1f
  41a104:	b.ls	41a258 <ferror@plt+0x17488>  // b.plast
  41a108:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41a10c:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41a110:	cmp	w22, #0x0
  41a114:	add	x2, x2, #0xe75
  41a118:	add	x0, x0, #0xe84
  41a11c:	csel	x0, x0, x2, ne  // ne = any
  41a120:	cmp	x1, #0x0
  41a124:	add	x23, x19, #0x208
  41a128:	csel	x1, x1, x20, ne  // ne = any
  41a12c:	cmp	x21, #0x0
  41a130:	csel	x21, x21, x0, ne  // ne = any
  41a134:	add	x8, sp, #0x40
  41a138:	mov	x2, x20
  41a13c:	mov	x0, x19
  41a140:	bl	4198f8 <ferror@plt+0x16b28>
  41a144:	ldp	x0, x1, [sp, #64]
  41a148:	stp	x0, x1, [x23]
  41a14c:	add	x23, x19, #0x220
  41a150:	ldr	x0, [sp, #80]
  41a154:	str	x0, [x19, #536]
  41a158:	ldr	x0, [x19, #1216]
  41a15c:	str	w0, [x19, #536]
  41a160:	add	x8, sp, #0x40
  41a164:	mov	x2, x20
  41a168:	mov	x1, x20
  41a16c:	mov	x0, x19
  41a170:	bl	4198f8 <ferror@plt+0x16b28>
  41a174:	ldp	x0, x1, [sp, #64]
  41a178:	stp	x0, x1, [x23]
  41a17c:	cmp	w22, #0x0
  41a180:	ldr	x0, [sp, #80]
  41a184:	str	x0, [x19, #560]
  41a188:	ldr	x0, [x19, #1216]
  41a18c:	str	w0, [x19, #560]
  41a190:	add	x23, x19, #0x238
  41a194:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41a198:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41a19c:	add	x1, x1, #0xea2
  41a1a0:	add	x0, x0, #0xe93
  41a1a4:	add	x8, sp, #0x40
  41a1a8:	csel	x1, x1, x0, ne  // ne = any
  41a1ac:	mov	x2, x20
  41a1b0:	mov	x0, x19
  41a1b4:	bl	4198f8 <ferror@plt+0x16b28>
  41a1b8:	ldp	x0, x1, [sp, #64]
  41a1bc:	stp	x0, x1, [x23]
  41a1c0:	cmp	w22, #0x0
  41a1c4:	ldr	x0, [sp, #80]
  41a1c8:	str	x0, [x19, #584]
  41a1cc:	mov	w0, #0x10                  	// #16
  41a1d0:	str	w0, [x19, #584]
  41a1d4:	add	x22, x19, #0x250
  41a1d8:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41a1dc:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41a1e0:	add	x1, x1, #0xe84
  41a1e4:	add	x0, x0, #0xe75
  41a1e8:	add	x8, sp, #0x40
  41a1ec:	csel	x1, x1, x0, ne  // ne = any
  41a1f0:	mov	x2, x20
  41a1f4:	mov	x0, x19
  41a1f8:	bl	4198f8 <ferror@plt+0x16b28>
  41a1fc:	ldp	x0, x1, [sp, #64]
  41a200:	stp	x0, x1, [x22]
  41a204:	add	x22, x19, #0x268
  41a208:	ldr	x0, [sp, #80]
  41a20c:	str	x0, [x19, #608]
  41a210:	mov	w0, #0x20                  	// #32
  41a214:	str	w0, [x19, #608]
  41a218:	add	x8, sp, #0x40
  41a21c:	mov	x2, x20
  41a220:	mov	x1, x21
  41a224:	mov	x0, x19
  41a228:	bl	4198f8 <ferror@plt+0x16b28>
  41a22c:	ldp	x0, x1, [sp, #64]
  41a230:	stp	x0, x1, [x22]
  41a234:	ldr	x0, [sp, #80]
  41a238:	ldp	x21, x22, [sp, #32]
  41a23c:	ldr	x23, [sp, #48]
  41a240:	str	x0, [x19, #632]
  41a244:	ldr	x0, [x19, #1232]
  41a248:	str	w0, [x19, #632]
  41a24c:	ldp	x19, x20, [sp, #16]
  41a250:	ldp	x29, x30, [sp], #96
  41a254:	ret
  41a258:	cmp	x0, #0xf
  41a25c:	b.ls	41a278 <ferror@plt+0x174a8>  // b.plast
  41a260:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41a264:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41a268:	cmp	w22, #0x0
  41a26c:	add	x2, x2, #0xe93
  41a270:	add	x0, x0, #0xea2
  41a274:	b	41a11c <ferror@plt+0x1734c>
  41a278:	mov	x0, x20
  41a27c:	b	41a120 <ferror@plt+0x17350>
  41a280:	stp	x29, x30, [sp, #-32]!
  41a284:	mov	x29, sp
  41a288:	stp	x19, x20, [sp, #16]
  41a28c:	mov	x19, x0
  41a290:	adrp	x20, 419000 <ferror@plt+0x16230>
  41a294:	ldr	x0, [x0, #520]
  41a298:	add	x20, x20, #0xa8c
  41a29c:	cmp	x0, x20
  41a2a0:	b.ne	41a2ac <ferror@plt+0x174dc>  // b.any
  41a2a4:	ldr	x0, [x19, #528]
  41a2a8:	bl	402760 <iconv_close@plt>
  41a2ac:	ldr	x0, [x19, #544]
  41a2b0:	cmp	x0, x20
  41a2b4:	b.ne	41a2c0 <ferror@plt+0x174f0>  // b.any
  41a2b8:	ldr	x0, [x19, #552]
  41a2bc:	bl	402760 <iconv_close@plt>
  41a2c0:	ldr	x0, [x19, #568]
  41a2c4:	cmp	x0, x20
  41a2c8:	b.ne	41a2d4 <ferror@plt+0x17504>  // b.any
  41a2cc:	ldr	x0, [x19, #576]
  41a2d0:	bl	402760 <iconv_close@plt>
  41a2d4:	ldr	x0, [x19, #592]
  41a2d8:	cmp	x0, x20
  41a2dc:	b.ne	41a2e8 <ferror@plt+0x17518>  // b.any
  41a2e0:	ldr	x0, [x19, #600]
  41a2e4:	bl	402760 <iconv_close@plt>
  41a2e8:	ldr	x0, [x19, #616]
  41a2ec:	cmp	x0, x20
  41a2f0:	b.ne	41a304 <ferror@plt+0x17534>  // b.any
  41a2f4:	ldr	x0, [x19, #624]
  41a2f8:	ldp	x19, x20, [sp, #16]
  41a2fc:	ldp	x29, x30, [sp], #32
  41a300:	b	402760 <iconv_close@plt>
  41a304:	ldp	x19, x20, [sp, #16]
  41a308:	ldp	x29, x30, [sp], #32
  41a30c:	ret
  41a310:	stp	x29, x30, [sp, #-80]!
  41a314:	cmp	w1, #0x7e
  41a318:	mov	x29, sp
  41a31c:	stp	x19, x20, [sp, #16]
  41a320:	mov	w20, w1
  41a324:	str	x21, [sp, #32]
  41a328:	b.ls	41a344 <ferror@plt+0x17574>  // b.plast
  41a32c:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41a330:	add	x2, x2, #0x90c
  41a334:	mov	w3, w1
  41a338:	mov	w1, #0x4                   	// #4
  41a33c:	bl	421610 <ferror@plt+0x1e840>
  41a340:	b	41a398 <ferror@plt+0x175c8>
  41a344:	mov	x19, x0
  41a348:	mov	x21, #0x1                   	// #1
  41a34c:	mov	x0, x21
  41a350:	strb	w1, [sp, #48]
  41a354:	str	x21, [sp, #64]
  41a358:	bl	44526c <_obstack_memory_used@@Base+0x868>
  41a35c:	str	x0, [sp, #56]
  41a360:	add	x3, sp, #0x38
  41a364:	ldr	x4, [x19, #520]
  41a368:	str	xzr, [sp, #72]
  41a36c:	ldr	x0, [x19, #528]
  41a370:	mov	x2, x21
  41a374:	add	x1, sp, #0x30
  41a378:	blr	x4
  41a37c:	tst	w0, #0xff
  41a380:	b.ne	41a3b0 <ferror@plt+0x175e0>  // b.any
  41a384:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41a388:	mov	x0, x19
  41a38c:	add	x2, x2, #0x946
  41a390:	mov	w1, #0x4                   	// #4
  41a394:	bl	421ab4 <ferror@plt+0x1ece4>
  41a398:	mov	w19, #0x0                   	// #0
  41a39c:	mov	w0, w19
  41a3a0:	ldp	x19, x20, [sp, #16]
  41a3a4:	ldr	x21, [sp, #32]
  41a3a8:	ldp	x29, x30, [sp], #80
  41a3ac:	ret
  41a3b0:	ldr	x0, [sp, #72]
  41a3b4:	cmp	x0, #0x1
  41a3b8:	b.eq	41a3d4 <ferror@plt+0x17604>  // b.none
  41a3bc:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41a3c0:	mov	w3, w20
  41a3c4:	add	x2, x2, #0x96c
  41a3c8:	mov	x0, x19
  41a3cc:	mov	w1, #0x4                   	// #4
  41a3d0:	b	41a33c <ferror@plt+0x1756c>
  41a3d4:	ldr	x0, [sp, #56]
  41a3d8:	ldrb	w19, [x0]
  41a3dc:	bl	402b30 <free@plt>
  41a3e0:	b	41a39c <ferror@plt+0x175cc>
  41a3e4:	stp	x29, x30, [sp, #-32]!
  41a3e8:	mov	x29, sp
  41a3ec:	str	x19, [sp, #16]
  41a3f0:	mov	x19, x0
  41a3f4:	mov	x0, #0x800000000           	// #34359738368
  41a3f8:	stp	xzr, x0, [x19]
  41a3fc:	mov	x0, #0x40                  	// #64
  41a400:	bl	44526c <_obstack_memory_used@@Base+0x868>
  41a404:	str	x0, [x19]
  41a408:	ldr	x19, [sp, #16]
  41a40c:	ldp	x29, x30, [sp], #32
  41a410:	ret
  41a414:	ldr	x0, [x0]
  41a418:	b	402b30 <free@plt>
  41a41c:	stp	x29, x30, [sp, #-32]!
  41a420:	mov	x29, sp
  41a424:	stp	x19, x20, [sp, #16]
  41a428:	mov	x19, x0
  41a42c:	mov	x20, x1
  41a430:	ldr	w0, [x0, #12]
  41a434:	ldr	w1, [x19, #8]
  41a438:	cmp	w1, w0
  41a43c:	b.lt	41a458 <ferror@plt+0x17688>  // b.tstop
  41a440:	lsl	w0, w0, #1
  41a444:	str	w0, [x19, #12]
  41a448:	sbfiz	x1, x0, #3, #32
  41a44c:	ldr	x0, [x19]
  41a450:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  41a454:	str	x0, [x19]
  41a458:	ldr	w0, [x19, #8]
  41a45c:	ldr	x1, [x19]
  41a460:	add	w2, w0, #0x1
  41a464:	str	w2, [x19, #8]
  41a468:	str	x20, [x1, w0, sxtw #3]
  41a46c:	ldp	x19, x20, [sp, #16]
  41a470:	ldp	x29, x30, [sp], #32
  41a474:	ret
  41a478:	stp	x29, x30, [sp, #-64]!
  41a47c:	adrp	x13, 46c000 <_obstack_memory_used@@Base+0x275fc>
  41a480:	adrp	x14, 46c000 <_obstack_memory_used@@Base+0x275fc>
  41a484:	mov	x29, sp
  41a488:	stp	x19, x20, [sp, #16]
  41a48c:	mov	x19, x0
  41a490:	add	x0, x2, #0x10
  41a494:	and	x0, x0, #0xfffffffffffffff0
  41a498:	mov	x12, x1
  41a49c:	mov	x11, x2
  41a4a0:	add	x13, x13, #0xb08
  41a4a4:	add	x14, x14, #0x790
  41a4a8:	str	x21, [sp, #32]
  41a4ac:	sub	sp, sp, x0
  41a4b0:	mov	x10, #0x0                   	// #0
  41a4b4:	mov	x20, sp
  41a4b8:	str	x20, [x29, #48]
  41a4bc:	cmp	x10, x11
  41a4c0:	ldr	x1, [x29, #48]
  41a4c4:	b.cs	41a57c <ferror@plt+0x177ac>  // b.hs, b.nlast
  41a4c8:	ldrb	w0, [x12, x10]
  41a4cc:	cmp	w0, #0x5c
  41a4d0:	b.eq	41a4e8 <ferror@plt+0x17718>  // b.none
  41a4d4:	add	x2, x1, #0x1
  41a4d8:	str	x2, [x29, #48]
  41a4dc:	strb	w0, [x1]
  41a4e0:	add	x10, x10, #0x1
  41a4e4:	b	41a4bc <ferror@plt+0x176ec>
  41a4e8:	add	x0, x12, x10
  41a4ec:	mov	w2, #0x4                   	// #4
  41a4f0:	add	x10, x10, #0x2
  41a4f4:	ldrb	w0, [x0, #1]
  41a4f8:	cmp	w0, #0x75
  41a4fc:	mov	w0, #0x8                   	// #8
  41a500:	csel	w2, w2, w0, eq  // eq = none
  41a504:	sub	x0, x1, x20
  41a508:	sub	x0, x11, x0
  41a50c:	str	x0, [x29, #56]
  41a510:	mov	w0, #0x0                   	// #0
  41a514:	cmp	w2, #0x0
  41a518:	ccmp	x10, x11, #0x2, ne  // ne = any
  41a51c:	b.cs	41a540 <ferror@plt+0x17770>  // b.hs, b.nlast
  41a520:	ldrb	w3, [x12, x10]
  41a524:	ldrh	w4, [x13, x3, lsl #1]
  41a528:	tbz	w4, #8, 41a540 <ferror@plt+0x17770>
  41a52c:	ldrb	w3, [x14, x3]
  41a530:	add	x10, x10, #0x1
  41a534:	sub	w2, w2, #0x1
  41a538:	add	w0, w3, w0, lsl #4
  41a53c:	b	41a514 <ferror@plt+0x17744>
  41a540:	sub	x10, x10, #0x1
  41a544:	cmp	w0, #0x24
  41a548:	b.eq	41a4d4 <ferror@plt+0x17704>  // b.none
  41a54c:	add	x2, x29, #0x38
  41a550:	add	x1, x29, #0x30
  41a554:	bl	419638 <ferror@plt+0x16868>
  41a558:	mov	w21, w0
  41a55c:	cbz	w0, 41a4e0 <ferror@plt+0x17710>
  41a560:	bl	402cf0 <__errno_location@plt>
  41a564:	str	w21, [x0]
  41a568:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41a56c:	mov	x0, x19
  41a570:	add	x2, x2, #0x9a6
  41a574:	mov	w1, #0x3                   	// #3
  41a578:	bl	421ab4 <ferror@plt+0x1ece4>
  41a57c:	ldr	x0, [x19, #1088]
  41a580:	mov	x1, x20
  41a584:	ldr	x2, [x29, #48]
  41a588:	mov	w3, #0x1                   	// #1
  41a58c:	sub	x2, x2, x20
  41a590:	bl	431a84 <ferror@plt+0x2ecb4>
  41a594:	mov	sp, x29
  41a598:	ldp	x19, x20, [sp, #16]
  41a59c:	ldr	x21, [sp, #32]
  41a5a0:	ldp	x29, x30, [sp], #64
  41a5a4:	ret
  41a5a8:	stp	x29, x30, [sp, #-128]!
  41a5ac:	mov	x29, sp
  41a5b0:	stp	x23, x24, [sp, #48]
  41a5b4:	adrp	x24, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41a5b8:	add	x24, x24, #0xec3
  41a5bc:	mov	x23, x0
  41a5c0:	add	x8, sp, #0x50
  41a5c4:	stp	x19, x20, [sp, #16]
  41a5c8:	mov	x20, x2
  41a5cc:	mov	x19, x4
  41a5d0:	mov	x2, x1
  41a5d4:	mov	x1, x24
  41a5d8:	stp	x21, x22, [sp, #32]
  41a5dc:	mov	x22, x5
  41a5e0:	mov	x21, x6
  41a5e4:	stp	x25, x26, [sp, #64]
  41a5e8:	mov	x26, x3
  41a5ec:	bl	4198f8 <ferror@plt+0x16b28>
  41a5f0:	ldr	x25, [sp, #80]
  41a5f4:	adrp	x0, 419000 <ferror@plt+0x16230>
  41a5f8:	add	x0, x0, #0xd4c
  41a5fc:	cmp	x25, x0
  41a600:	b.ne	41a6c4 <ferror@plt+0x178f4>  // b.any
  41a604:	stp	x20, x26, [sp, #104]
  41a608:	str	x19, [sp, #120]
  41a60c:	ldp	x2, x0, [sp, #112]
  41a610:	add	x1, x0, #0x10
  41a614:	add	x0, x0, #0x1, lsl #12
  41a618:	cmp	x0, x2
  41a61c:	b.cc	41a628 <ferror@plt+0x17858>  // b.lo, b.ul, b.last
  41a620:	cmp	x2, x1
  41a624:	b.cs	41a634 <ferror@plt+0x17864>  // b.hs, b.nlast
  41a628:	ldr	x0, [sp, #104]
  41a62c:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  41a630:	str	x0, [sp, #104]
  41a634:	ldr	x0, [sp, #104]
  41a638:	ldr	x1, [sp, #120]
  41a63c:	add	x0, x0, x1
  41a640:	stp	xzr, xzr, [x0]
  41a644:	ldr	x0, [sp, #120]
  41a648:	ldr	x1, [sp, #104]
  41a64c:	cbz	x0, 41a740 <ferror@plt+0x17970>
  41a650:	add	x2, x1, x0
  41a654:	ldurb	w2, [x2, #-1]
  41a658:	cmp	w2, #0xd
  41a65c:	b.ne	41a740 <ferror@plt+0x17970>  // b.any
  41a660:	strb	w2, [x1, x0]
  41a664:	ldr	x0, [sp, #120]
  41a668:	str	x0, [x21]
  41a66c:	ldr	x1, [sp, #104]
  41a670:	cmp	x0, #0x2
  41a674:	b.ls	41a748 <ferror@plt+0x17978>  // b.plast
  41a678:	ldrb	w2, [x1]
  41a67c:	cmp	w2, #0xef
  41a680:	b.ne	41a748 <ferror@plt+0x17978>  // b.any
  41a684:	ldrb	w2, [x1, #1]
  41a688:	cmp	w2, #0xbb
  41a68c:	b.ne	41a748 <ferror@plt+0x17978>  // b.any
  41a690:	ldrb	w2, [x1, #2]
  41a694:	cmp	w2, #0xbf
  41a698:	b.ne	41a748 <ferror@plt+0x17978>  // b.any
  41a69c:	sub	x0, x0, #0x3
  41a6a0:	str	x0, [x21]
  41a6a4:	add	x0, x1, #0x3
  41a6a8:	ldp	x19, x20, [sp, #16]
  41a6ac:	ldp	x23, x24, [sp, #48]
  41a6b0:	ldp	x25, x26, [sp, #64]
  41a6b4:	str	x1, [x22]
  41a6b8:	ldp	x21, x22, [sp, #32]
  41a6bc:	ldp	x29, x30, [sp], #128
  41a6c0:	ret
  41a6c4:	cmp	x19, #0x10, lsl #12
  41a6c8:	mov	x0, #0x10000               	// #65536
  41a6cc:	ldr	x26, [sp, #88]
  41a6d0:	csel	x0, x19, x0, cs  // cs = hs, nlast
  41a6d4:	str	x0, [sp, #112]
  41a6d8:	bl	44526c <_obstack_memory_used@@Base+0x868>
  41a6dc:	str	x0, [sp, #104]
  41a6e0:	add	x3, sp, #0x68
  41a6e4:	str	xzr, [sp, #120]
  41a6e8:	mov	x2, x19
  41a6ec:	mov	x1, x20
  41a6f0:	mov	x0, x26
  41a6f4:	blr	x25
  41a6f8:	tst	w0, #0xff
  41a6fc:	b.ne	41a71c <ferror@plt+0x1794c>  // b.any
  41a700:	ldr	x3, [x23, #1184]
  41a704:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41a708:	mov	x4, x24
  41a70c:	add	x2, x2, #0x9cd
  41a710:	mov	x0, x23
  41a714:	mov	w1, #0x3                   	// #3
  41a718:	bl	421610 <ferror@plt+0x1e840>
  41a71c:	mov	x0, x20
  41a720:	bl	402b30 <free@plt>
  41a724:	adrp	x0, 419000 <ferror@plt+0x16230>
  41a728:	add	x0, x0, #0xa8c
  41a72c:	cmp	x25, x0
  41a730:	b.ne	41a60c <ferror@plt+0x1783c>  // b.any
  41a734:	mov	x0, x26
  41a738:	bl	402760 <iconv_close@plt>
  41a73c:	b	41a60c <ferror@plt+0x1783c>
  41a740:	mov	w2, #0xa                   	// #10
  41a744:	b	41a660 <ferror@plt+0x17890>
  41a748:	mov	x0, x1
  41a74c:	b	41a6a8 <ferror@plt+0x178d8>
  41a750:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41a754:	add	x0, x0, #0xec3
  41a758:	ret
  41a75c:	stp	x29, x30, [sp, #-32]!
  41a760:	mov	x29, sp
  41a764:	stp	x19, x20, [sp, #16]
  41a768:	mov	x20, x0
  41a76c:	mov	x19, x2
  41a770:	mov	x0, x2
  41a774:	str	x2, [x20, #8]
  41a778:	bl	42bbd0 <ferror@plt+0x28e00>
  41a77c:	mov	w1, w0
  41a780:	mov	x3, #0x0                   	// #0
  41a784:	mov	w2, #0x1                   	// #1
  41a788:	mov	x0, x19
  41a78c:	bl	42bec4 <ferror@plt+0x290f4>
  41a790:	mov	w1, w0
  41a794:	str	w1, [x20]
  41a798:	mov	x0, x19
  41a79c:	bl	42b8e4 <ferror@plt+0x28b14>
  41a7a0:	ldrb	w1, [x0, #7]
  41a7a4:	mov	w0, #0x1                   	// #1
  41a7a8:	lsl	w0, w0, w1
  41a7ac:	str	w0, [x20, #4]
  41a7b0:	ldp	x19, x20, [sp, #16]
  41a7b4:	ldp	x29, x30, [sp], #32
  41a7b8:	ret
  41a7bc:	mov	x1, x0
  41a7c0:	ldr	w0, [x0]
  41a7c4:	mov	w2, #0x60000000            	// #1610612736
  41a7c8:	cmp	w0, w2
  41a7cc:	b.hi	41a7dc <ferror@plt+0x17a0c>  // b.pmore
  41a7d0:	ldr	w2, [x1, #4]
  41a7d4:	add	w2, w2, w0
  41a7d8:	str	w2, [x1]
  41a7dc:	bfi	x0, x0, #32, #32
  41a7e0:	ret
  41a7e4:	stp	x29, x30, [sp, #-48]!
  41a7e8:	mov	x29, sp
  41a7ec:	stp	x19, x20, [sp, #16]
  41a7f0:	mov	x20, x0
  41a7f4:	mov	w19, #0x0                   	// #0
  41a7f8:	stp	x21, x22, [sp, #32]
  41a7fc:	mov	w22, w1
  41a800:	mov	x21, x2
  41a804:	cmp	w19, w22
  41a808:	b.ge	41a828 <ferror@plt+0x17a58>  // b.tcont
  41a80c:	mov	x0, x21
  41a810:	bl	41a7bc <ferror@plt+0x179ec>
  41a814:	add	w19, w19, #0x1
  41a818:	mov	x1, x0
  41a81c:	mov	x0, x20
  41a820:	bl	41a41c <ferror@plt+0x1764c>
  41a824:	b	41a804 <ferror@plt+0x17a34>
  41a828:	ldp	x19, x20, [sp, #16]
  41a82c:	ldp	x21, x22, [sp, #32]
  41a830:	ldp	x29, x30, [sp], #48
  41a834:	ret
  41a838:	stp	x29, x30, [sp, #-112]!
  41a83c:	mov	x29, sp
  41a840:	stp	x19, x20, [sp, #16]
  41a844:	mov	x20, x0
  41a848:	stp	x21, x22, [sp, #32]
  41a84c:	mov	x21, x4
  41a850:	stp	x23, x24, [sp, #48]
  41a854:	mov	w23, w3
  41a858:	mov	x24, x5
  41a85c:	stp	x25, x26, [sp, #64]
  41a860:	mov	x25, x1
  41a864:	mov	x26, x6
  41a868:	stp	x27, x28, [sp, #80]
  41a86c:	mov	x27, x7
  41a870:	ldr	x22, [x1]
  41a874:	str	x2, [sp, #104]
  41a878:	ldrb	w1, [x0, #1120]
  41a87c:	cbnz	w1, 41a90c <ferror@plt+0x17b3c>
  41a880:	ldrb	w2, [x0, #1152]
  41a884:	cbnz	w2, 41a90c <ferror@plt+0x17b3c>
  41a888:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41a88c:	add	x2, x2, #0x9e9
  41a890:	bl	421610 <ferror@plt+0x1e840>
  41a894:	ldurb	w0, [x22, #-1]
  41a898:	cmp	w0, #0x75
  41a89c:	b.eq	41a8bc <ferror@plt+0x17aec>  // b.none
  41a8a0:	cmp	w0, #0x55
  41a8a4:	b.eq	41a954 <ferror@plt+0x17b84>  // b.none
  41a8a8:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41a8ac:	mov	x0, x20
  41a8b0:	add	x2, x2, #0xa8e
  41a8b4:	mov	w1, #0x4                   	// #4
  41a8b8:	bl	421610 <ferror@plt+0x1e840>
  41a8bc:	mov	w3, #0x4                   	// #4
  41a8c0:	adrp	x4, 46c000 <_obstack_memory_used@@Base+0x275fc>
  41a8c4:	adrp	x6, 46c000 <_obstack_memory_used@@Base+0x275fc>
  41a8c8:	mov	x28, x22
  41a8cc:	add	x4, x4, #0xb08
  41a8d0:	add	x6, x6, #0x790
  41a8d4:	mov	w19, #0x0                   	// #0
  41a8d8:	ldrb	w0, [x28]
  41a8dc:	ldrb	w7, [x28]
  41a8e0:	ldrh	w0, [x4, x0, lsl #1]
  41a8e4:	tbz	w0, #8, 41a988 <ferror@plt+0x17bb8>
  41a8e8:	add	x28, x28, #0x1
  41a8ec:	cbz	x27, 41a96c <ferror@plt+0x17b9c>
  41a8f0:	cbnz	x26, 41a95c <ferror@plt+0x17b8c>
  41a8f4:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41a8f8:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41a8fc:	add	x2, x2, #0xaae
  41a900:	add	x0, x0, #0xabd
  41a904:	mov	w1, #0x434                 	// #1076
  41a908:	bl	402de0 <ferror@plt+0x10>
  41a90c:	ldrsb	w0, [x20, #1198]
  41a910:	cmp	w0, #0x0
  41a914:	b.le	41a92c <ferror@plt+0x17b5c>
  41a918:	cbnz	w1, 41a92c <ferror@plt+0x17b5c>
  41a91c:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41a920:	mov	x0, x20
  41a924:	add	x2, x2, #0xa21
  41a928:	b	41a890 <ferror@plt+0x17ac0>
  41a92c:	ldrb	w0, [x20, #1138]
  41a930:	cbz	w0, 41a894 <ferror@plt+0x17ac4>
  41a934:	cbnz	w23, 41a894 <ferror@plt+0x17ac4>
  41a938:	ldurb	w3, [x22, #-1]
  41a93c:	mov	x0, x20
  41a940:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41a944:	mov	w1, #0x6                   	// #6
  41a948:	add	x2, x2, #0xa5b
  41a94c:	bl	42167c <ferror@plt+0x1e8ac>
  41a950:	b	41a894 <ferror@plt+0x17ac4>
  41a954:	mov	w3, #0x8                   	// #8
  41a958:	b	41a8c0 <ferror@plt+0x17af0>
  41a95c:	mov	x0, x27
  41a960:	bl	41a7bc <ferror@plt+0x179ec>
  41a964:	lsr	x0, x0, #32
  41a968:	str	w0, [x26, #4]
  41a96c:	ldrb	w0, [x6, w7, sxtw]
  41a970:	subs	w3, w3, #0x1
  41a974:	add	w19, w0, w19, lsl #4
  41a978:	b.eq	41a988 <ferror@plt+0x17bb8>  // b.none
  41a97c:	ldr	x0, [sp, #104]
  41a980:	cmp	x28, x0
  41a984:	b.cc	41a8d8 <ferror@plt+0x17b08>  // b.lo, b.ul, b.last
  41a988:	cmp	w23, #0x0
  41a98c:	cset	w0, ne  // ne = any
  41a990:	cmp	w3, #0x0
  41a994:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  41a998:	b.eq	41a9c0 <ferror@plt+0x17bf0>  // b.none
  41a99c:	mov	w0, #0x0                   	// #0
  41a9a0:	str	wzr, [x24]
  41a9a4:	ldp	x19, x20, [sp, #16]
  41a9a8:	ldp	x21, x22, [sp, #32]
  41a9ac:	ldp	x23, x24, [sp, #48]
  41a9b0:	ldp	x25, x26, [sp, #64]
  41a9b4:	ldp	x27, x28, [sp, #80]
  41a9b8:	ldp	x29, x30, [sp], #112
  41a9bc:	ret
  41a9c0:	str	x28, [x25]
  41a9c4:	sub	x22, x22, #0x2
  41a9c8:	cbz	w3, 41a9f8 <ferror@plt+0x17c28>
  41a9cc:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41a9d0:	mov	x4, x22
  41a9d4:	sub	w3, w28, w22
  41a9d8:	add	x2, x2, #0xad4
  41a9dc:	mov	w19, #0x1                   	// #1
  41a9e0:	mov	x0, x20
  41a9e4:	mov	w1, #0x3                   	// #3
  41a9e8:	bl	421610 <ferror@plt+0x1e840>
  41a9ec:	mov	w0, #0x1                   	// #1
  41a9f0:	str	w19, [x24]
  41a9f4:	b	41a9a4 <ferror@plt+0x17bd4>
  41a9f8:	cmp	w19, #0x9f
  41a9fc:	b.hi	41aa74 <ferror@plt+0x17ca4>  // b.pmore
  41aa00:	ldrb	w1, [x20, #1120]
  41aa04:	cbnz	w1, 41aa1c <ferror@plt+0x17c4c>
  41aa08:	and	w1, w19, #0xffffffdf
  41aa0c:	cmp	w1, #0x40
  41aa10:	mov	w1, #0x24                  	// #36
  41aa14:	ccmp	w19, w1, #0x4, ne  // ne = any
  41aa18:	b.ne	41aa88 <ferror@plt+0x17cb8>  // b.any
  41aa1c:	cmp	w19, #0x24
  41aa20:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  41aa24:	b.ne	41aa9c <ferror@plt+0x17ccc>  // b.any
  41aa28:	cbz	w23, 41a9ec <ferror@plt+0x17c1c>
  41aa2c:	mov	w0, #0x10ffff              	// #1114111
  41aa30:	cmp	w19, w0
  41aa34:	b.hi	41d150 <ferror@plt+0x1a380>  // b.pmore
  41aa38:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41aa3c:	add	x2, x2, #0xa00
  41aa40:	mov	w3, #0x73c                 	// #1852
  41aa44:	mov	w0, #0x0                   	// #0
  41aa48:	mov	w4, #0x2                   	// #2
  41aa4c:	cmp	w3, w0
  41aa50:	b.eq	41aae4 <ferror@plt+0x17d14>  // b.none
  41aa54:	add	w1, w3, w0
  41aa58:	sdiv	w1, w1, w4
  41aa5c:	add	x6, x2, w1, sxtw #3
  41aa60:	ldr	w6, [x6, #4]
  41aa64:	cmp	w19, w6
  41aa68:	b.ls	41aadc <ferror@plt+0x17d0c>  // b.plast
  41aa6c:	add	w0, w1, #0x1
  41aa70:	b	41aa4c <ferror@plt+0x17c7c>
  41aa74:	tbnz	w19, #31, 41aa88 <ferror@plt+0x17cb8>
  41aa78:	mov	w18, #0xffff2800            	// #-55296
  41aa7c:	add	w0, w19, w18
  41aa80:	cmp	w0, #0x7ff
  41aa84:	b.hi	41aa28 <ferror@plt+0x17c58>  // b.pmore
  41aa88:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41aa8c:	mov	x4, x22
  41aa90:	sub	w3, w28, w22
  41aa94:	add	x2, x2, #0xafd
  41aa98:	b	41a9dc <ferror@plt+0x17c0c>
  41aa9c:	ldrb	w0, [x20, #1146]
  41aaa0:	cbz	w0, 41aa38 <ferror@plt+0x17c68>
  41aaa4:	ldrb	w0, [x20, #1148]
  41aaa8:	cbz	w0, 41aacc <ferror@plt+0x17cfc>
  41aaac:	ldrb	w0, [x20, #18]
  41aab0:	cbnz	w0, 41aacc <ferror@plt+0x17cfc>
  41aab4:	strb	wzr, [x20, #1148]
  41aab8:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41aabc:	mov	x0, x20
  41aac0:	add	x2, x2, #0xb25
  41aac4:	mov	w1, #0x2                   	// #2
  41aac8:	bl	421610 <ferror@plt+0x1e840>
  41aacc:	mov	w19, #0x24                  	// #36
  41aad0:	str	w19, [x21]
  41aad4:	strb	wzr, [x21, #4]
  41aad8:	b	41a9ec <ferror@plt+0x17c1c>
  41aadc:	mov	w3, w1
  41aae0:	b	41aa4c <ferror@plt+0x17c7c>
  41aae4:	ldrb	w1, [x20, #1154]
  41aae8:	cbz	w1, 41ab84 <ferror@plt+0x17db4>
  41aaec:	ldrb	w1, [x20, #1164]
  41aaf0:	cbnz	w1, 41ab8c <ferror@plt+0x17dbc>
  41aaf4:	ldrb	w1, [x20, #1152]
  41aaf8:	cbnz	w1, 41ab94 <ferror@plt+0x17dc4>
  41aafc:	ldrb	w1, [x20, #1120]
  41ab00:	mov	w3, #0x4                   	// #4
  41ab04:	cmp	w1, #0x0
  41ab08:	mov	w1, #0xd                   	// #13
  41ab0c:	csel	w1, w1, w3, eq  // eq = none
  41ab10:	sxtw	x3, w0
  41ab14:	sbfiz	x0, x0, #3, #32
  41ab18:	ldrh	w25, [x2, x0]
  41ab1c:	tst	w25, w1
  41ab20:	b.eq	41d150 <ferror@plt+0x1a380>  // b.none
  41ab24:	ldrb	w0, [x20, #1164]
  41ab28:	cbnz	w0, 41ab9c <ferror@plt+0x17dcc>
  41ab2c:	ldrb	w0, [x20, #1152]
  41ab30:	cmp	w0, #0x0
  41ab34:	cset	w26, ne  // ne = any
  41ab38:	lsl	w26, w26, #1
  41ab3c:	add	x2, x2, x3, lsl #3
  41ab40:	ldrb	w27, [x2, #2]
  41ab44:	cbz	w27, 41aba4 <ferror@plt+0x17dd4>
  41ab48:	ldrb	w0, [x21, #4]
  41ab4c:	cmp	w0, w27
  41ab50:	b.ls	41aba4 <ferror@plt+0x17dd4>  // b.plast
  41ab54:	mov	w0, #0x3                   	// #3
  41ab58:	str	w0, [x21, #8]
  41ab5c:	strb	w27, [x21, #4]
  41ab60:	tst	w25, w26
  41ab64:	b.eq	41a9ec <ferror@plt+0x17c1c>  // b.none
  41ab68:	cmp	w23, #0x1
  41ab6c:	b.ne	41a9ec <ferror@plt+0x17c1c>  // b.any
  41ab70:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41ab74:	mov	x4, x22
  41ab78:	sub	w3, w28, w22
  41ab7c:	add	x2, x2, #0xb97
  41ab80:	b	41d160 <ferror@plt+0x1a390>
  41ab84:	mov	w1, #0xd                   	// #13
  41ab88:	b	41ab10 <ferror@plt+0x17d40>
  41ab8c:	mov	w1, #0x8                   	// #8
  41ab90:	b	41ab10 <ferror@plt+0x17d40>
  41ab94:	mov	w1, #0x1                   	// #1
  41ab98:	b	41ab10 <ferror@plt+0x17d40>
  41ab9c:	mov	w26, #0x10                  	// #16
  41aba0:	b	41ab3c <ferror@plt+0x17d6c>
  41aba4:	tbz	w25, #8, 41d12c <ferror@plt+0x1a35c>
  41aba8:	mov	w17, #0xffffee9f            	// #-4449
  41abac:	add	w0, w19, w17
  41abb0:	ldr	w1, [x21]
  41abb4:	cmp	w0, #0x14
  41abb8:	b.hi	41abe4 <ferror@plt+0x17e14>  // b.pmore
  41abbc:	mov	w16, #0xffffef00            	// #-4352
  41abc0:	add	w1, w1, w16
  41abc4:	cmp	w1, #0x12
  41abc8:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41abcc:	ldr	w0, [x21, #8]
  41abd0:	mov	w1, #0x2                   	// #2
  41abd4:	cmp	w0, #0x2
  41abd8:	csel	w0, w0, w1, ge  // ge = tcont
  41abdc:	str	w0, [x21, #8]
  41abe0:	b	41ac18 <ferror@plt+0x17e48>
  41abe4:	mov	w15, #0xffffee58            	// #-4520
  41abe8:	add	w0, w19, w15
  41abec:	cmp	w0, #0x1a
  41abf0:	b.hi	41ac24 <ferror@plt+0x17e54>  // b.pmore
  41abf4:	mov	w14, #0xffff5400            	// #-44032
  41abf8:	add	w1, w1, w14
  41abfc:	mov	w0, #0x2ba3                	// #11171
  41ac00:	cmp	w1, w0
  41ac04:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41ac08:	mov	w2, #0x1c                  	// #28
  41ac0c:	udiv	w0, w1, w2
  41ac10:	msub	w1, w0, w2, w1
  41ac14:	cbz	w1, 41abcc <ferror@plt+0x17dfc>
  41ac18:	cbnz	w27, 41ab5c <ferror@plt+0x17d8c>
  41ac1c:	str	w19, [x21]
  41ac20:	b	41ab5c <ferror@plt+0x17d8c>
  41ac24:	cmp	w19, #0x345
  41ac28:	b.hi	41ac58 <ferror@plt+0x17e88>  // b.pmore
  41ac2c:	cmp	w19, #0x2ff
  41ac30:	b.ls	41ac94 <ferror@plt+0x17ec4>  // b.plast
  41ac34:	sub	w2, w19, #0x300
  41ac38:	cmp	w2, #0x45
  41ac3c:	b.hi	41ac94 <ferror@plt+0x17ec4>  // b.pmore
  41ac40:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41ac44:	add	x0, x0, #0xef4
  41ac48:	ldrh	w0, [x0, w2, uxtw #1]
  41ac4c:	adr	x2, 41ac58 <ferror@plt+0x17e88>
  41ac50:	add	x0, x2, w0, sxth #2
  41ac54:	br	x0
  41ac58:	cmp	w19, #0xcd5
  41ac5c:	b.eq	41cf6c <ferror@plt+0x1a19c>  // b.none
  41ac60:	b.hi	41ad18 <ferror@plt+0x17f48>  // b.pmore
  41ac64:	cmp	w19, #0xb3e
  41ac68:	b.eq	41cf24 <ferror@plt+0x1a154>  // b.none
  41ac6c:	b.hi	41accc <ferror@plt+0x17efc>  // b.pmore
  41ac70:	cmp	w19, #0x93c
  41ac74:	b.eq	41cee0 <ferror@plt+0x1a110>  // b.none
  41ac78:	b.hi	41acb0 <ferror@plt+0x17ee0>  // b.pmore
  41ac7c:	cmp	w19, #0x654
  41ac80:	b.eq	41ce6c <ferror@plt+0x1a09c>  // b.none
  41ac84:	cmp	w19, #0x655
  41ac88:	b.eq	41cec0 <ferror@plt+0x1a0f0>  // b.none
  41ac8c:	cmp	w19, #0x653
  41ac90:	b.eq	41ce60 <ferror@plt+0x1a090>  // b.none
  41ac94:	mov	w3, w19
  41ac98:	mov	x0, x20
  41ac9c:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41aca0:	mov	w1, #0x4                   	// #4
  41aca4:	add	x2, x2, #0xb41
  41aca8:	bl	421610 <ferror@plt+0x1e840>
  41acac:	b	41ac18 <ferror@plt+0x17e48>
  41acb0:	cmp	w19, #0x9be
  41acb4:	b.eq	41cf18 <ferror@plt+0x1a148>  // b.none
  41acb8:	cmp	w19, #0x9d7
  41acbc:	b.ne	41ac94 <ferror@plt+0x17ec4>  // b.any
  41acc0:	cmp	w1, #0x9c7
  41acc4:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41acc8:	b	41ae58 <ferror@plt+0x18088>
  41accc:	cmp	w19, #0xbd7
  41acd0:	b.eq	41cf4c <ferror@plt+0x1a17c>  // b.none
  41acd4:	b.hi	41acfc <ferror@plt+0x17f2c>  // b.pmore
  41acd8:	cmp	w19, #0xb57
  41acdc:	b.eq	41cf30 <ferror@plt+0x1a160>  // b.none
  41ace0:	cmp	w19, #0xbbe
  41ace4:	b.eq	41cf3c <ferror@plt+0x1a16c>  // b.none
  41ace8:	cmp	w19, #0xb56
  41acec:	b.ne	41ac94 <ferror@plt+0x17ec4>  // b.any
  41acf0:	cmp	w1, #0xb47
  41acf4:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41acf8:	b	41ae58 <ferror@plt+0x18088>
  41acfc:	cmp	w19, #0xc56
  41ad00:	b.eq	41cf60 <ferror@plt+0x1a190>  // b.none
  41ad04:	cmp	w19, #0xcc2
  41ad08:	b.ne	41ac94 <ferror@plt+0x17ec4>  // b.any
  41ad0c:	cmp	w1, #0xcc6
  41ad10:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41ad14:	b	41ae58 <ferror@plt+0x18088>
  41ad18:	mov	w0, #0x102e                	// #4142
  41ad1c:	cmp	w19, w0
  41ad20:	b.eq	41cfd0 <ferror@plt+0x1a200>  // b.none
  41ad24:	b.hi	41ad78 <ferror@plt+0x17fa8>  // b.pmore
  41ad28:	cmp	w19, #0xdca
  41ad2c:	b.eq	41cfac <ferror@plt+0x1a1dc>  // b.none
  41ad30:	b.hi	41ad58 <ferror@plt+0x17f88>  // b.pmore
  41ad34:	cmp	w19, #0xd3e
  41ad38:	b.eq	41cf90 <ferror@plt+0x1a1c0>  // b.none
  41ad3c:	cmp	w19, #0xd57
  41ad40:	b.eq	41cfa0 <ferror@plt+0x1a1d0>  // b.none
  41ad44:	cmp	w19, #0xcd6
  41ad48:	b.ne	41ac94 <ferror@plt+0x17ec4>  // b.any
  41ad4c:	cmp	w1, #0xcc6
  41ad50:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41ad54:	b	41ae58 <ferror@plt+0x18088>
  41ad58:	cmp	w19, #0xdcf
  41ad5c:	b.eq	41cfc0 <ferror@plt+0x1a1f0>  // b.none
  41ad60:	cmp	w19, #0xddf
  41ad64:	b.ne	41ac94 <ferror@plt+0x17ec4>  // b.any
  41ad68:	sub	w1, w1, #0xdd9
  41ad6c:	cmp	w1, #0x1
  41ad70:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41ad74:	b	41ae58 <ferror@plt+0x18088>
  41ad78:	mov	w0, #0x309a                	// #12442
  41ad7c:	cmp	w19, w0
  41ad80:	b.eq	41d09c <ferror@plt+0x1a2cc>  // b.none
  41ad84:	b.hi	41ade0 <ferror@plt+0x18010>  // b.pmore
  41ad88:	mov	w0, #0x1b35                	// #6965
  41ad8c:	cmp	w19, w0
  41ad90:	b.eq	41cfe0 <ferror@plt+0x1a210>  // b.none
  41ad94:	mov	w0, #0x3099                	// #12441
  41ad98:	cmp	w19, w0
  41ad9c:	b.ne	41ac94 <ferror@plt+0x17ec4>  // b.any
  41ada0:	mov	w0, #0x30db                	// #12507
  41ada4:	cmp	w1, w0
  41ada8:	b.hi	41d070 <ferror@plt+0x1a2a0>  // b.pmore
  41adac:	mov	w0, #0x309c                	// #12444
  41adb0:	cmp	w1, w0
  41adb4:	b.hi	41d048 <ferror@plt+0x1a278>  // b.pmore
  41adb8:	mov	w4, #0xffffcfba            	// #-12358
  41adbc:	add	w1, w1, w4
  41adc0:	cmp	w1, #0x35
  41adc4:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41adc8:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41adcc:	add	x0, x0, #0xf80
  41add0:	ldrb	w0, [x0, w1, uxtw]
  41add4:	adr	x1, 41ade0 <ferror@plt+0x18010>
  41add8:	add	x0, x1, w0, sxtb #2
  41addc:	br	x0
  41ade0:	mov	w0, #0x10ba                	// #4282
  41ade4:	movk	w0, #0x1, lsl #16
  41ade8:	cmp	w19, w0
  41adec:	b.eq	41d104 <ferror@plt+0x1a334>  // b.none
  41adf0:	add	w0, w0, #0x6d
  41adf4:	cmp	w19, w0
  41adf8:	b.ne	41ac94 <ferror@plt+0x17ec4>  // b.any
  41adfc:	sub	w1, w1, #0x11, lsl #12
  41ae00:	sub	w1, w1, #0x131
  41ae04:	cmp	w1, #0x1
  41ae08:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41ae0c:	b	41ae58 <ferror@plt+0x18088>
  41ae10:	cmp	w1, #0x3bf
  41ae14:	b.hi	41b00c <ferror@plt+0x1823c>  // b.pmore
  41ae18:	cmp	w1, #0x3b0
  41ae1c:	b.hi	41aecc <ferror@plt+0x180fc>  // b.pmore
  41ae20:	cmp	w1, #0x103
  41ae24:	b.hi	41afa4 <ferror@plt+0x181d4>  // b.pmore
  41ae28:	cmp	w1, #0xc9
  41ae2c:	b.hi	41af14 <ferror@plt+0x18144>  // b.pmore
  41ae30:	cmp	w1, #0x79
  41ae34:	b.hi	41af90 <ferror@plt+0x181c0>  // b.pmore
  41ae38:	cmp	w1, #0x64
  41ae3c:	b.hi	41af3c <ferror@plt+0x1816c>  // b.pmore
  41ae40:	cmp	w1, #0x59
  41ae44:	b.hi	41af84 <ferror@plt+0x181b4>  // b.pmore
  41ae48:	cmp	w1, #0x44
  41ae4c:	b.hi	41af60 <ferror@plt+0x18190>  // b.pmore
  41ae50:	cmp	w1, #0x41
  41ae54:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41ae58:	mov	w0, #0x3                   	// #3
  41ae5c:	str	w0, [x21, #8]
  41ae60:	b	41ac18 <ferror@plt+0x17e48>
  41ae64:	mov	w12, #0xffffe0b8            	// #-8008
  41ae68:	add	w1, w1, w12
  41ae6c:	mov	x0, #0x1                   	// #1
  41ae70:	lsl	x1, x0, x1
  41ae74:	mov	x0, #0x303                 	// #771
  41ae78:	movk	x0, #0x302, lsl #16
  41ae7c:	movk	x0, #0x3, lsl #32
  41ae80:	movk	x0, #0x300, lsl #48
  41ae84:	tst	x1, x0
  41ae88:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41ae8c:	b	41ae58 <ferror@plt+0x18088>
  41ae90:	mov	w11, #0xffffe0f8            	// #-7944
  41ae94:	add	w1, w1, w11
  41ae98:	mov	x0, #0x1                   	// #1
  41ae9c:	lsl	x1, x0, x1
  41aea0:	tst	x1, #0x303030303030303
  41aea4:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41aea8:	b	41ae58 <ferror@plt+0x18088>
  41aeac:	sub	w1, w1, #0x415
  41aeb0:	mov	x0, #0x1                   	// #1
  41aeb4:	lsl	x1, x0, x1
  41aeb8:	mov	x0, #0x9                   	// #9
  41aebc:	movk	x0, #0x9, lsl #32
  41aec0:	tst	x1, x0
  41aec4:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41aec8:	b	41ae58 <ferror@plt+0x18088>
  41aecc:	sub	w1, w1, #0x3b1
  41aed0:	cmp	w1, #0xe
  41aed4:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41aed8:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41aedc:	add	x0, x0, #0xfb8
  41aee0:	ldrh	w0, [x0, w1, uxtw #1]
  41aee4:	adr	x1, 41aef0 <ferror@plt+0x18120>
  41aee8:	add	x0, x1, w0, sxth #2
  41aeec:	br	x0
  41aef0:	sub	w1, w1, #0x391
  41aef4:	cmp	w1, #0xe
  41aef8:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41aefc:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41af00:	add	x0, x0, #0xfd8
  41af04:	ldrh	w0, [x0, w1, uxtw #1]
  41af08:	adr	x1, 41af14 <ferror@plt+0x18144>
  41af0c:	add	x0, x1, w0, sxth #2
  41af10:	br	x0
  41af14:	sub	w1, w1, #0xca
  41af18:	mov	x0, #0x1                   	// #1
  41af1c:	lsl	x1, x0, x1
  41af20:	mov	x0, #0x401                 	// #1025
  41af24:	movk	x0, #0x104, lsl #16
  41af28:	movk	x0, #0x401, lsl #32
  41af2c:	movk	x0, #0x304, lsl #48
  41af30:	tst	x1, x0
  41af34:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41af38:	b	41ae58 <ferror@plt+0x18088>
  41af3c:	sub	w1, w1, #0x65
  41af40:	cmp	w1, #0x14
  41af44:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41af48:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41af4c:	add	x0, x0, #0xff8
  41af50:	ldrh	w0, [x0, w1, uxtw #1]
  41af54:	adr	x1, 41af60 <ferror@plt+0x18190>
  41af58:	add	x0, x1, w0, sxth #2
  41af5c:	br	x0
  41af60:	sub	w1, w1, #0x45
  41af64:	cmp	w1, #0x14
  41af68:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41af6c:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41af70:	add	x0, x0, #0x24
  41af74:	ldrh	w0, [x0, w1, uxtw #1]
  41af78:	adr	x1, 41af84 <ferror@plt+0x181b4>
  41af7c:	add	x0, x1, w0, sxth #2
  41af80:	br	x0
  41af84:	cmp	w1, #0x61
  41af88:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41af8c:	b	41ae58 <ferror@plt+0x18088>
  41af90:	cmp	w1, #0xa8
  41af94:	b.eq	41ae58 <ferror@plt+0x18088>  // b.none
  41af98:	cmp	w1, #0xc2
  41af9c:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41afa0:	b	41ae58 <ferror@plt+0x18088>
  41afa4:	cmp	w1, #0x39f
  41afa8:	b.hi	41aff8 <ferror@plt+0x18228>  // b.pmore
  41afac:	cmp	w1, #0x390
  41afb0:	b.hi	41aef0 <ferror@plt+0x18120>  // b.pmore
  41afb4:	cmp	w1, #0x1a1
  41afb8:	b.hi	41afe8 <ferror@plt+0x18218>  // b.pmore
  41afbc:	cmp	w1, #0x19f
  41afc0:	b.hi	41ae58 <ferror@plt+0x18088>  // b.pmore
  41afc4:	cmp	w1, #0x113
  41afc8:	b.hi	41afd8 <ferror@plt+0x18208>  // b.pmore
  41afcc:	cmp	w1, #0x111
  41afd0:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41afd4:	b	41ae58 <ferror@plt+0x18088>
  41afd8:	sub	w1, w1, #0x14c
  41afdc:	cmp	w1, #0x1
  41afe0:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41afe4:	b	41ae58 <ferror@plt+0x18088>
  41afe8:	sub	w1, w1, #0x1af
  41afec:	cmp	w1, #0x1
  41aff0:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41aff4:	b	41ae58 <ferror@plt+0x18088>
  41aff8:	cmp	w1, #0x3a5
  41affc:	b.eq	41ae58 <ferror@plt+0x18088>  // b.none
  41b000:	cmp	w1, #0x3a9
  41b004:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41b008:	b	41ae58 <ferror@plt+0x18088>
  41b00c:	mov	w0, #0x1f81                	// #8065
  41b010:	cmp	w1, w0
  41b014:	b.hi	41b078 <ferror@plt+0x182a8>  // b.pmore
  41b018:	mov	w0, #0x1f47                	// #8007
  41b01c:	cmp	w1, w0
  41b020:	b.hi	41ae64 <ferror@plt+0x18094>  // b.pmore
  41b024:	mov	w0, #0x1f41                	// #8001
  41b028:	cmp	w1, w0
  41b02c:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41b030:	mov	w0, #0x1f07                	// #7943
  41b034:	cmp	w1, w0
  41b038:	b.hi	41ae90 <ferror@plt+0x180c0>  // b.pmore
  41b03c:	cmp	w1, #0x438
  41b040:	b.hi	41b064 <ferror@plt+0x18294>  // b.pmore
  41b044:	cmp	w1, #0x414
  41b048:	b.hi	41aeac <ferror@plt+0x180dc>  // b.pmore
  41b04c:	cmp	w1, #0x3c5
  41b050:	b.eq	41ae58 <ferror@plt+0x18088>  // b.none
  41b054:	sub	w1, w1, #0x3c9
  41b058:	cmp	w1, #0x2
  41b05c:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41b060:	b	41ae58 <ferror@plt+0x18088>
  41b064:	mov	w10, #0xffffe100            	// #-7936
  41b068:	add	w1, w1, w10
  41b06c:	cmp	w1, #0x1
  41b070:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41b074:	b	41ae58 <ferror@plt+0x18088>
  41b078:	mov	w0, #0x1fbf                	// #8127
  41b07c:	cmp	w1, w0
  41b080:	b.hi	41b0bc <ferror@plt+0x182ec>  // b.pmore
  41b084:	mov	w0, #0x1f87                	// #8071
  41b088:	cmp	w1, w0
  41b08c:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41b090:	mov	w13, #0xffffe078            	// #-8072
  41b094:	add	w1, w1, w13
  41b098:	mov	x0, #0x1                   	// #1
  41b09c:	lsl	x1, x0, x1
  41b0a0:	mov	x0, #0x303                 	// #771
  41b0a4:	movk	x0, #0x303, lsl #16
  41b0a8:	movk	x0, #0x803, lsl #32
  41b0ac:	movk	x0, #0x90, lsl #48
  41b0b0:	tst	x1, x0
  41b0b4:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41b0b8:	b	41ae58 <ferror@plt+0x18088>
  41b0bc:	mov	w9, #0xffffe03d            	// #-8131
  41b0c0:	add	w1, w1, w9
  41b0c4:	cmp	w1, #0x3b
  41b0c8:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41b0cc:	mov	x0, #0x1                   	// #1
  41b0d0:	lsl	x1, x0, x1
  41b0d4:	mov	x0, #0x201                 	// #513
  41b0d8:	movk	x0, #0xa01, lsl #48
  41b0dc:	tst	x1, x0
  41b0e0:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41b0e4:	b	41ae58 <ferror@plt+0x18088>
  41b0e8:	cmp	w1, #0x39f
  41b0ec:	b.hi	41b2b8 <ferror@plt+0x184e8>  // b.pmore
  41b0f0:	cmp	w1, #0x390
  41b0f4:	b.hi	41b1b0 <ferror@plt+0x183e0>  // b.pmore
  41b0f8:	cmp	w1, #0xa8
  41b0fc:	b.eq	41ae58 <ferror@plt+0x18088>  // b.none
  41b100:	b.hi	41b1f8 <ferror@plt+0x18428>  // b.pmore
  41b104:	sub	w1, w1, #0x41
  41b108:	cmp	w1, #0x39
  41b10c:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41b110:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41b114:	add	x0, x0, #0x50
  41b118:	ldrh	w0, [x0, w1, uxtw #1]
  41b11c:	adr	x1, 41b128 <ferror@plt+0x18358>
  41b120:	add	x0, x1, w0, sxth #2
  41b124:	br	x0
  41b128:	mov	w8, #0xffffe078            	// #-8072
  41b12c:	add	w1, w1, w8
  41b130:	mov	x0, #0x1                   	// #1
  41b134:	lsl	x1, x0, x1
  41b138:	mov	x0, #0x303                 	// #771
  41b13c:	movk	x0, #0x303, lsl #16
  41b140:	movk	x0, #0x803, lsl #32
  41b144:	movk	x0, #0x90, lsl #48
  41b148:	tst	x1, x0
  41b14c:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41b150:	b	41ae58 <ferror@plt+0x18088>
  41b154:	mov	w7, #0xffffe0f8            	// #-7944
  41b158:	add	w1, w1, w7
  41b15c:	mov	x0, #0x1                   	// #1
  41b160:	lsl	x1, x0, x1
  41b164:	tst	x1, #0x303030303030303
  41b168:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41b16c:	b	41ae58 <ferror@plt+0x18088>
  41b170:	sub	w1, w1, #0x3c5
  41b174:	mov	x0, #0x1                   	// #1
  41b178:	lsl	x1, x0, x1
  41b17c:	mov	x0, #0x2071                	// #8305
  41b180:	tst	x1, x0
  41b184:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41b188:	b	41ae58 <ferror@plt+0x18088>
  41b18c:	sub	w1, w1, #0x3b1
  41b190:	cmp	w1, #0xe
  41b194:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41b198:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41b19c:	add	x0, x0, #0xc4
  41b1a0:	ldrh	w0, [x0, w1, uxtw #1]
  41b1a4:	adr	x1, 41b1b0 <ferror@plt+0x183e0>
  41b1a8:	add	x0, x1, w0, sxth #2
  41b1ac:	br	x0
  41b1b0:	sub	w1, w1, #0x391
  41b1b4:	cmp	w1, #0xe
  41b1b8:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41b1bc:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41b1c0:	add	x0, x0, #0xe4
  41b1c4:	ldrh	w0, [x0, w1, uxtw #1]
  41b1c8:	adr	x1, 41b1d4 <ferror@plt+0x18404>
  41b1cc:	add	x0, x1, w0, sxth #2
  41b1d0:	br	x0
  41b1d4:	sub	w1, w1, #0xef
  41b1d8:	cmp	w1, #0x14
  41b1dc:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41b1e0:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41b1e4:	add	x0, x0, #0x104
  41b1e8:	ldrh	w0, [x0, w1, uxtw #1]
  41b1ec:	adr	x1, 41b1f8 <ferror@plt+0x18428>
  41b1f0:	add	x0, x1, w0, sxth #2
  41b1f4:	br	x0
  41b1f8:	cmp	w1, #0x103
  41b1fc:	b.hi	41b260 <ferror@plt+0x18490>  // b.pmore
  41b200:	cmp	w1, #0xee
  41b204:	b.hi	41b1d4 <ferror@plt+0x18404>  // b.pmore
  41b208:	cmp	w1, #0xcf
  41b20c:	b.hi	41b23c <ferror@plt+0x1846c>  // b.pmore
  41b210:	cmp	w1, #0xc1
  41b214:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41b218:	sub	w1, w1, #0xc2
  41b21c:	cmp	w1, #0xd
  41b220:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41b224:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41b228:	add	x0, x0, #0x130
  41b22c:	ldrh	w0, [x0, w1, uxtw #1]
  41b230:	adr	x1, 41b23c <ferror@plt+0x1846c>
  41b234:	add	x0, x1, w0, sxth #2
  41b238:	br	x0
  41b23c:	sub	w1, w1, #0xd4
  41b240:	cmp	w1, #0x16
  41b244:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41b248:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41b24c:	add	x0, x0, #0x14c
  41b250:	ldrh	w0, [x0, w1, uxtw #1]
  41b254:	adr	x1, 41b260 <ferror@plt+0x18490>
  41b258:	add	x0, x1, w0, sxth #2
  41b25c:	br	x0
  41b260:	cmp	w1, #0x169
  41b264:	b.hi	41b294 <ferror@plt+0x184c4>  // b.pmore
  41b268:	cmp	w1, #0x167
  41b26c:	b.hi	41ae58 <ferror@plt+0x18088>  // b.pmore
  41b270:	cmp	w1, #0x113
  41b274:	b.hi	41b284 <ferror@plt+0x184b4>  // b.pmore
  41b278:	cmp	w1, #0x111
  41b27c:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41b280:	b	41ae58 <ferror@plt+0x18088>
  41b284:	sub	w1, w1, #0x14c
  41b288:	cmp	w1, #0x1
  41b28c:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41b290:	b	41ae58 <ferror@plt+0x18088>
  41b294:	cmp	w1, #0x1a1
  41b298:	b.hi	41b2a8 <ferror@plt+0x184d8>  // b.pmore
  41b29c:	cmp	w1, #0x19f
  41b2a0:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41b2a4:	b	41ae58 <ferror@plt+0x18088>
  41b2a8:	sub	w1, w1, #0x1af
  41b2ac:	cmp	w1, #0x1
  41b2b0:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41b2b4:	b	41ae58 <ferror@plt+0x18088>
  41b2b8:	mov	w0, #0x1f41                	// #8001
  41b2bc:	cmp	w1, w0
  41b2c0:	b.hi	41b348 <ferror@plt+0x18578>  // b.pmore
  41b2c4:	mov	w0, #0x1f07                	// #7943
  41b2c8:	cmp	w1, w0
  41b2cc:	b.hi	41b154 <ferror@plt+0x18384>  // b.pmore
  41b2d0:	cmp	w1, #0x3d2
  41b2d4:	b.hi	41b304 <ferror@plt+0x18534>  // b.pmore
  41b2d8:	cmp	w1, #0x3c4
  41b2dc:	b.hi	41b170 <ferror@plt+0x183a0>  // b.pmore
  41b2e0:	cmp	w1, #0x3bf
  41b2e4:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41b2e8:	cmp	w1, #0x3b0
  41b2ec:	b.hi	41b18c <ferror@plt+0x183bc>  // b.pmore
  41b2f0:	cmp	w1, #0x3a5
  41b2f4:	b.eq	41ae58 <ferror@plt+0x18088>  // b.none
  41b2f8:	cmp	w1, #0x3a9
  41b2fc:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41b300:	b	41ae58 <ferror@plt+0x18088>
  41b304:	cmp	w1, #0x43a
  41b308:	b.hi	41b334 <ferror@plt+0x18564>  // b.pmore
  41b30c:	cmp	w1, #0x412
  41b310:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41b314:	sub	w1, w1, #0x413
  41b318:	mov	x0, #0x1                   	// #1
  41b31c:	lsl	x1, x0, x1
  41b320:	mov	x0, #0x81                  	// #129
  41b324:	movk	x0, #0x81, lsl #32
  41b328:	tst	x1, x0
  41b32c:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41b330:	b	41ae58 <ferror@plt+0x18088>
  41b334:	mov	w6, #0xffffe100            	// #-7936
  41b338:	add	w1, w1, w6
  41b33c:	cmp	w1, #0x1
  41b340:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41b344:	b	41ae58 <ferror@plt+0x18088>
  41b348:	mov	w0, #0x1fbf                	// #8127
  41b34c:	cmp	w1, w0
  41b350:	b.hi	41b394 <ferror@plt+0x185c4>  // b.pmore
  41b354:	mov	w0, #0x1f87                	// #8071
  41b358:	cmp	w1, w0
  41b35c:	b.hi	41b128 <ferror@plt+0x18358>  // b.pmore
  41b360:	mov	w5, #0xffffe0b8            	// #-8008
  41b364:	add	w1, w1, w5
  41b368:	cmp	w1, #0x39
  41b36c:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41b370:	mov	x0, #0x1                   	// #1
  41b374:	lsl	x1, x0, x1
  41b378:	mov	x0, #0x303                 	// #771
  41b37c:	movk	x0, #0x302, lsl #16
  41b380:	movk	x0, #0x3, lsl #32
  41b384:	movk	x0, #0x300, lsl #48
  41b388:	tst	x1, x0
  41b38c:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41b390:	b	41ae58 <ferror@plt+0x18088>
  41b394:	mov	w4, #0xffffe03d            	// #-8131
  41b398:	add	w1, w1, w4
  41b39c:	cmp	w1, #0x3b
  41b3a0:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41b3a4:	mov	x0, #0x1                   	// #1
  41b3a8:	lsl	x1, x0, x1
  41b3ac:	mov	x0, #0x201                 	// #513
  41b3b0:	movk	x0, #0xa01, lsl #48
  41b3b4:	tst	x1, x0
  41b3b8:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41b3bc:	b	41ae58 <ferror@plt+0x18088>
  41b3c0:	cmp	w1, #0x7a
  41b3c4:	b.hi	41b3f4 <ferror@plt+0x18624>  // b.pmore
  41b3c8:	cmp	w1, #0x40
  41b3cc:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41b3d0:	sub	w1, w1, #0x41
  41b3d4:	cmp	w1, #0x39
  41b3d8:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41b3dc:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41b3e0:	add	x0, x0, #0x17c
  41b3e4:	ldrh	w0, [x0, w1, uxtw #1]
  41b3e8:	adr	x1, 41b3f4 <ferror@plt+0x18624>
  41b3ec:	add	x0, x1, w0, sxth #2
  41b3f0:	br	x0
  41b3f4:	mov	w3, #0xffffe160            	// #-7840
  41b3f8:	add	w1, w1, w3
  41b3fc:	cmp	w1, #0x2d
  41b400:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41b404:	mov	x0, #0x1                   	// #1
  41b408:	lsl	x1, x0, x1
  41b40c:	mov	x0, #0x3                   	// #3
  41b410:	movk	x0, #0x300, lsl #16
  41b414:	movk	x0, #0x3000, lsl #32
  41b418:	tst	x1, x0
  41b41c:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41b420:	b	41ae58 <ferror@plt+0x18088>
  41b424:	cmp	w1, #0x79
  41b428:	b.hi	41b4cc <ferror@plt+0x186fc>  // b.pmore
  41b42c:	cmp	w1, #0x64
  41b430:	b.hi	41b478 <ferror@plt+0x186a8>  // b.pmore
  41b434:	cmp	w1, #0x59
  41b438:	b.hi	41b4c0 <ferror@plt+0x186f0>  // b.pmore
  41b43c:	cmp	w1, #0x44
  41b440:	b.hi	41b49c <ferror@plt+0x186cc>  // b.pmore
  41b444:	cmp	w1, #0x41
  41b448:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41b44c:	b	41ae58 <ferror@plt+0x18088>
  41b450:	sub	w1, w1, #0xca
  41b454:	mov	x0, #0x1                   	// #1
  41b458:	lsl	x1, x0, x1
  41b45c:	mov	x0, #0x401                 	// #1025
  41b460:	movk	x0, #0x100, lsl #16
  41b464:	movk	x0, #0x401, lsl #32
  41b468:	movk	x0, #0x300, lsl #48
  41b46c:	tst	x1, x0
  41b470:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41b474:	b	41ae58 <ferror@plt+0x18088>
  41b478:	sub	w1, w1, #0x65
  41b47c:	cmp	w1, #0x14
  41b480:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41b484:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41b488:	add	x0, x0, #0x1f0
  41b48c:	ldrh	w0, [x0, w1, uxtw #1]
  41b490:	adr	x1, 41b49c <ferror@plt+0x186cc>
  41b494:	add	x0, x1, w0, sxth #2
  41b498:	br	x0
  41b49c:	sub	w1, w1, #0x45
  41b4a0:	cmp	w1, #0x14
  41b4a4:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41b4a8:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41b4ac:	add	x0, x0, #0x21c
  41b4b0:	ldrh	w0, [x0, w1, uxtw #1]
  41b4b4:	adr	x1, 41b4c0 <ferror@plt+0x186f0>
  41b4b8:	add	x0, x1, w0, sxth #2
  41b4bc:	br	x0
  41b4c0:	cmp	w1, #0x61
  41b4c4:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41b4c8:	b	41ae58 <ferror@plt+0x18088>
  41b4cc:	cmp	w1, #0x103
  41b4d0:	b.hi	41b4e8 <ferror@plt+0x18718>  // b.pmore
  41b4d4:	cmp	w1, #0xc9
  41b4d8:	b.hi	41b450 <ferror@plt+0x18680>  // b.pmore
  41b4dc:	cmp	w1, #0xc2
  41b4e0:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41b4e4:	b	41ae58 <ferror@plt+0x18088>
  41b4e8:	cmp	w1, #0x1a1
  41b4ec:	b.hi	41b4fc <ferror@plt+0x1872c>  // b.pmore
  41b4f0:	cmp	w1, #0x19f
  41b4f4:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41b4f8:	b	41ae58 <ferror@plt+0x18088>
  41b4fc:	sub	w1, w1, #0x1af
  41b500:	cmp	w1, #0x1
  41b504:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41b508:	b	41ae58 <ferror@plt+0x18088>
  41b50c:	cmp	w1, #0xfc
  41b510:	b.hi	41b5fc <ferror@plt+0x1882c>  // b.pmore
  41b514:	cmp	w1, #0xc3
  41b518:	b.hi	41b588 <ferror@plt+0x187b8>  // b.pmore
  41b51c:	cmp	w1, #0x6f
  41b520:	b.hi	41b5e8 <ferror@plt+0x18818>  // b.pmore
  41b524:	cmp	w1, #0x60
  41b528:	b.hi	41b5b0 <ferror@plt+0x187e0>  // b.pmore
  41b52c:	cmp	w1, #0x4f
  41b530:	b.hi	41b5d4 <ferror@plt+0x18804>  // b.pmore
  41b534:	cmp	w1, #0x40
  41b538:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41b53c:	sub	w1, w1, #0x41
  41b540:	cmp	w1, #0xe
  41b544:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41b548:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41b54c:	add	x0, x0, #0x248
  41b550:	ldrh	w0, [x0, w1, uxtw #1]
  41b554:	adr	x1, 41b560 <ferror@plt+0x18790>
  41b558:	add	x0, x1, w0, sxth #2
  41b55c:	br	x0
  41b560:	sub	w1, w1, #0x391
  41b564:	mov	x0, #0x1                   	// #1
  41b568:	lsl	x1, x0, x1
  41b56c:	mov	x0, #0x101                 	// #257
  41b570:	movk	x0, #0x10, lsl #16
  41b574:	movk	x0, #0x101, lsl #32
  41b578:	movk	x0, #0x10, lsl #48
  41b57c:	tst	x1, x0
  41b580:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41b584:	b	41ae58 <ferror@plt+0x18088>
  41b588:	sub	w1, w1, #0xc4
  41b58c:	mov	x0, #0x1                   	// #1
  41b590:	lsl	x1, x0, x1
  41b594:	mov	x0, #0x5                   	// #5
  41b598:	movk	x0, #0x106, lsl #16
  41b59c:	movk	x0, #0x5, lsl #32
  41b5a0:	movk	x0, #0x106, lsl #48
  41b5a4:	tst	x1, x0
  41b5a8:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41b5ac:	b	41ae58 <ferror@plt+0x18088>
  41b5b0:	sub	w1, w1, #0x61
  41b5b4:	cmp	w1, #0xe
  41b5b8:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41b5bc:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41b5c0:	add	x0, x0, #0x268
  41b5c4:	ldrh	w0, [x0, w1, uxtw #1]
  41b5c8:	adr	x1, 41b5d4 <ferror@plt+0x18804>
  41b5cc:	add	x0, x1, w0, sxth #2
  41b5d0:	br	x0
  41b5d4:	cmp	w1, #0x55
  41b5d8:	b.eq	41ae58 <ferror@plt+0x18088>  // b.none
  41b5dc:	cmp	w1, #0x59
  41b5e0:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41b5e4:	b	41ae58 <ferror@plt+0x18088>
  41b5e8:	cmp	w1, #0x75
  41b5ec:	b.eq	41ae58 <ferror@plt+0x18088>  // b.none
  41b5f0:	cmp	w1, #0x79
  41b5f4:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41b5f8:	b	41ae58 <ferror@plt+0x18088>
  41b5fc:	cmp	w1, #0x3c5
  41b600:	b.hi	41b63c <ferror@plt+0x1886c>  // b.pmore
  41b604:	cmp	w1, #0x390
  41b608:	b.hi	41b560 <ferror@plt+0x18790>  // b.pmore
  41b60c:	cmp	w1, #0x227
  41b610:	b.hi	41b62c <ferror@plt+0x1885c>  // b.pmore
  41b614:	cmp	w1, #0x225
  41b618:	b.hi	41ae58 <ferror@plt+0x18088>  // b.pmore
  41b61c:	sub	w1, w1, #0x1ea
  41b620:	cmp	w1, #0x1
  41b624:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41b628:	b	41ae58 <ferror@plt+0x18088>
  41b62c:	sub	w1, w1, #0x22e
  41b630:	cmp	w1, #0x1
  41b634:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41b638:	b	41ae58 <ferror@plt+0x18088>
  41b63c:	mov	w0, #0x1e37                	// #7735
  41b640:	cmp	w1, w0
  41b644:	b.hi	41b67c <ferror@plt+0x188ac>  // b.pmore
  41b648:	mov	w0, #0x1e35                	// #7733
  41b64c:	cmp	w1, w0
  41b650:	b.hi	41ae58 <ferror@plt+0x18088>  // b.pmore
  41b654:	sub	w1, w1, #0x418
  41b658:	cmp	w1, #0x2b
  41b65c:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41b660:	mov	x0, #0x1                   	// #1
  41b664:	lsl	x1, x0, x1
  41b668:	mov	x0, #0x801                 	// #2049
  41b66c:	movk	x0, #0x801, lsl #32
  41b670:	tst	x1, x0
  41b674:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41b678:	b	41ae58 <ferror@plt+0x18088>
  41b67c:	mov	w0, #0x1fb3                	// #8115
  41b680:	cmp	w1, w0
  41b684:	b.eq	41ae58 <ferror@plt+0x18088>  // b.none
  41b688:	b.hi	41b6a0 <ferror@plt+0x188d0>  // b.pmore
  41b68c:	mov	w2, #0xffffe1a6            	// #-7770
  41b690:	add	w1, w1, w2
  41b694:	cmp	w1, #0x1
  41b698:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41b69c:	b	41ae58 <ferror@plt+0x18088>
  41b6a0:	mov	w0, #0x1fbc                	// #8124
  41b6a4:	cmp	w1, w0
  41b6a8:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41b6ac:	b	41ae58 <ferror@plt+0x18088>
  41b6b0:	cmp	w1, #0x3c5
  41b6b4:	b.hi	41b774 <ferror@plt+0x189a4>  // b.pmore
  41b6b8:	cmp	w1, #0x390
  41b6bc:	b.hi	41b704 <ferror@plt+0x18934>  // b.pmore
  41b6c0:	cmp	w1, #0x6f
  41b6c4:	b.hi	41b75c <ferror@plt+0x1898c>  // b.pmore
  41b6c8:	cmp	w1, #0x60
  41b6cc:	b.hi	41b72c <ferror@plt+0x1895c>  // b.pmore
  41b6d0:	cmp	w1, #0x4f
  41b6d4:	b.hi	41b750 <ferror@plt+0x18980>  // b.pmore
  41b6d8:	cmp	w1, #0x40
  41b6dc:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41b6e0:	sub	w1, w1, #0x41
  41b6e4:	cmp	w1, #0xe
  41b6e8:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41b6ec:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41b6f0:	add	x0, x0, #0x288
  41b6f4:	ldrh	w0, [x0, w1, uxtw #1]
  41b6f8:	adr	x1, 41b704 <ferror@plt+0x18934>
  41b6fc:	add	x0, x1, w0, sxth #2
  41b700:	br	x0
  41b704:	sub	w1, w1, #0x391
  41b708:	mov	x0, #0x1                   	// #1
  41b70c:	lsl	x1, x0, x1
  41b710:	mov	x0, #0x101                 	// #257
  41b714:	movk	x0, #0x10, lsl #16
  41b718:	movk	x0, #0x101, lsl #32
  41b71c:	movk	x0, #0x10, lsl #48
  41b720:	tst	x1, x0
  41b724:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41b728:	b	41ae58 <ferror@plt+0x18088>
  41b72c:	sub	w1, w1, #0x61
  41b730:	cmp	w1, #0xe
  41b734:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41b738:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41b73c:	add	x0, x0, #0x2a8
  41b740:	ldrh	w0, [x0, w1, uxtw #1]
  41b744:	adr	x1, 41b750 <ferror@plt+0x18980>
  41b748:	add	x0, x1, w0, sxth #2
  41b74c:	br	x0
  41b750:	cmp	w1, #0x55
  41b754:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41b758:	b	41ae58 <ferror@plt+0x18088>
  41b75c:	cmp	w1, #0x75
  41b760:	b.eq	41ae58 <ferror@plt+0x18088>  // b.none
  41b764:	sub	w1, w1, #0x228
  41b768:	cmp	w1, #0x1
  41b76c:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41b770:	b	41ae58 <ferror@plt+0x18088>
  41b774:	cmp	w1, #0x443
  41b778:	b.hi	41b7ac <ferror@plt+0x189dc>  // b.pmore
  41b77c:	cmp	w1, #0x40f
  41b780:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41b784:	sub	w1, w1, #0x410
  41b788:	mov	x0, #0x1                   	// #1
  41b78c:	lsl	x1, x0, x1
  41b790:	mov	x0, #0x161                 	// #353
  41b794:	movk	x0, #0x8, lsl #16
  41b798:	movk	x0, #0x161, lsl #32
  41b79c:	movk	x0, #0x8, lsl #48
  41b7a0:	tst	x1, x0
  41b7a4:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41b7a8:	b	41ae58 <ferror@plt+0x18088>
  41b7ac:	mov	w0, #0x1fb3                	// #8115
  41b7b0:	cmp	w1, w0
  41b7b4:	b.eq	41ae58 <ferror@plt+0x18088>  // b.none
  41b7b8:	b.hi	41b7d0 <ferror@plt+0x18a00>  // b.pmore
  41b7bc:	mov	w0, #0xffffe160            	// #-7840
  41b7c0:	add	w1, w1, w0
  41b7c4:	cmp	w1, #0x1
  41b7c8:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41b7cc:	b	41ae58 <ferror@plt+0x18088>
  41b7d0:	mov	w0, #0x1fbc                	// #8124
  41b7d4:	cmp	w1, w0
  41b7d8:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41b7dc:	b	41ae58 <ferror@plt+0x18088>
  41b7e0:	cmp	w1, #0x7a
  41b7e4:	b.hi	41b818 <ferror@plt+0x18a48>  // b.pmore
  41b7e8:	cmp	w1, #0x40
  41b7ec:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41b7f0:	sub	w1, w1, #0x41
  41b7f4:	mov	x0, #0x1                   	// #1
  41b7f8:	lsl	x1, x0, x1
  41b7fc:	mov	x0, #0xf1ff                	// #61951
  41b800:	movk	x0, #0x3ce, lsl #16
  41b804:	movk	x0, #0xf0ff, lsl #32
  41b808:	movk	x0, #0x3ce, lsl #48
  41b80c:	tst	x1, x0
  41b810:	b.ne	41ae58 <ferror@plt+0x18088>  // b.any
  41b814:	b	41ac18 <ferror@plt+0x17e48>
  41b818:	cmp	w1, #0x17f
  41b81c:	b.hi	41b848 <ferror@plt+0x18a78>  // b.pmore
  41b820:	cmp	w1, #0x159
  41b824:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41b828:	sub	w1, w1, #0x15a
  41b82c:	mov	x0, #0x1                   	// #1
  41b830:	lsl	x1, x0, x1
  41b834:	mov	x0, #0xc3                  	// #195
  41b838:	movk	x0, #0x20, lsl #32
  41b83c:	tst	x1, x0
  41b840:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41b844:	b	41ae58 <ferror@plt+0x18088>
  41b848:	mov	w30, #0xffffe19e            	// #-7778
  41b84c:	add	w1, w1, w30
  41b850:	cmp	w1, #0x1
  41b854:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41b858:	b	41ae58 <ferror@plt+0x18088>
  41b85c:	cmp	w1, #0x3d2
  41b860:	b.hi	41b960 <ferror@plt+0x18b90>  // b.pmore
  41b864:	cmp	w1, #0x398
  41b868:	b.hi	41b8f0 <ferror@plt+0x18b20>  // b.pmore
  41b86c:	cmp	w1, #0x79
  41b870:	b.hi	41b938 <ferror@plt+0x18b68>  // b.pmore
  41b874:	cmp	w1, #0x60
  41b878:	b.hi	41b914 <ferror@plt+0x18b44>  // b.pmore
  41b87c:	cmp	w1, #0x41
  41b880:	b.eq	41ae58 <ferror@plt+0x18088>  // b.none
  41b884:	sub	w1, w1, #0x45
  41b888:	cmp	w1, #0x14
  41b88c:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41b890:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41b894:	add	x0, x0, #0x2c8
  41b898:	ldrh	w0, [x0, w1, uxtw #1]
  41b89c:	adr	x1, 41b8a8 <ferror@plt+0x18ad8>
  41b8a0:	add	x0, x1, w0, sxth #2
  41b8a4:	br	x0
  41b8a8:	sub	w1, w1, #0x443
  41b8ac:	cmp	w1, #0xa
  41b8b0:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41b8b4:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41b8b8:	add	x0, x0, #0x2f4
  41b8bc:	ldrh	w0, [x0, w1, uxtw #1]
  41b8c0:	adr	x1, 41b8cc <ferror@plt+0x18afc>
  41b8c4:	add	x0, x1, w0, sxth #2
  41b8c8:	br	x0
  41b8cc:	sub	w1, w1, #0x427
  41b8d0:	cmp	w1, #0x11
  41b8d4:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41b8d8:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41b8dc:	add	x0, x0, #0x30c
  41b8e0:	ldrh	w0, [x0, w1, uxtw #1]
  41b8e4:	adr	x1, 41b8f0 <ferror@plt+0x18b20>
  41b8e8:	add	x0, x1, w0, sxth #2
  41b8ec:	br	x0
  41b8f0:	sub	w1, w1, #0x399
  41b8f4:	mov	x0, #0x1                   	// #1
  41b8f8:	lsl	x1, x0, x1
  41b8fc:	mov	x0, #0x1001                	// #4097
  41b900:	movk	x0, #0x1001, lsl #32
  41b904:	movk	x0, #0x200, lsl #48
  41b908:	tst	x1, x0
  41b90c:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41b910:	b	41ae58 <ferror@plt+0x18088>
  41b914:	sub	w1, w1, #0x61
  41b918:	cmp	w1, #0x18
  41b91c:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41b920:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41b924:	add	x0, x0, #0x330
  41b928:	ldrh	w0, [x0, w1, uxtw #1]
  41b92c:	adr	x1, 41b938 <ferror@plt+0x18b68>
  41b930:	add	x0, x1, w0, sxth #2
  41b934:	br	x0
  41b938:	cmp	w1, #0xf5
  41b93c:	b.eq	41ae58 <ferror@plt+0x18088>  // b.none
  41b940:	b.hi	41b950 <ferror@plt+0x18b80>  // b.pmore
  41b944:	cmp	w1, #0xd5
  41b948:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41b94c:	b	41ae58 <ferror@plt+0x18088>
  41b950:	sub	w1, w1, #0x16a
  41b954:	cmp	w1, #0x1
  41b958:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41b95c:	b	41ae58 <ferror@plt+0x18088>
  41b960:	cmp	w1, #0x438
  41b964:	b.hi	41b998 <ferror@plt+0x18bc8>  // b.pmore
  41b968:	cmp	w1, #0x426
  41b96c:	b.hi	41b8cc <ferror@plt+0x18afc>  // b.pmore
  41b970:	sub	w1, w1, #0x406
  41b974:	cmp	w1, #0x1d
  41b978:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41b97c:	mov	x0, #0x1                   	// #1
  41b980:	lsl	x1, x0, x1
  41b984:	mov	x0, #0x8401                	// #33793
  41b988:	movk	x0, #0x2107, lsl #16
  41b98c:	tst	x1, x0
  41b990:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41b994:	b	41ae58 <ferror@plt+0x18088>
  41b998:	cmp	w1, #0x44d
  41b99c:	b.hi	41b9b4 <ferror@plt+0x18be4>  // b.pmore
  41b9a0:	cmp	w1, #0x442
  41b9a4:	b.hi	41b8a8 <ferror@plt+0x18ad8>  // b.pmore
  41b9a8:	cmp	w1, #0x43e
  41b9ac:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41b9b0:	b	41ae58 <ferror@plt+0x18088>
  41b9b4:	cmp	w1, #0x4d9
  41b9b8:	b.hi	41b9d0 <ferror@plt+0x18c00>  // b.pmore
  41b9bc:	cmp	w1, #0x4d7
  41b9c0:	b.hi	41ae58 <ferror@plt+0x18088>  // b.pmore
  41b9c4:	cmp	w1, #0x456
  41b9c8:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41b9cc:	b	41ae58 <ferror@plt+0x18088>
  41b9d0:	sub	w1, w1, #0x4e8
  41b9d4:	cmp	w1, #0x1
  41b9d8:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41b9dc:	b	41ae58 <ferror@plt+0x18088>
  41b9e0:	cmp	w1, #0x79
  41b9e4:	b.hi	41ba40 <ferror@plt+0x18c70>  // b.pmore
  41b9e8:	cmp	w1, #0x40
  41b9ec:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41b9f0:	sub	w1, w1, #0x41
  41b9f4:	mov	x0, #0x1                   	// #1
  41b9f8:	lsl	x1, x0, x1
  41b9fc:	mov	x0, #0x4111                	// #16657
  41ba00:	movk	x0, #0x110, lsl #16
  41ba04:	movk	x0, #0x4111, lsl #32
  41ba08:	movk	x0, #0x110, lsl #48
  41ba0c:	tst	x1, x0
  41ba10:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41ba14:	b	41ae58 <ferror@plt+0x18088>
  41ba18:	sub	w1, w1, #0xca
  41ba1c:	mov	x0, #0x1                   	// #1
  41ba20:	lsl	x1, x0, x1
  41ba24:	mov	x0, #0x401                 	// #1025
  41ba28:	movk	x0, #0x100, lsl #16
  41ba2c:	movk	x0, #0x401, lsl #32
  41ba30:	movk	x0, #0x300, lsl #48
  41ba34:	tst	x1, x0
  41ba38:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41ba3c:	b	41ae58 <ferror@plt+0x18088>
  41ba40:	cmp	w1, #0x103
  41ba44:	b.hi	41ba5c <ferror@plt+0x18c8c>  // b.pmore
  41ba48:	cmp	w1, #0xc9
  41ba4c:	b.hi	41ba18 <ferror@plt+0x18c48>  // b.pmore
  41ba50:	cmp	w1, #0xc2
  41ba54:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41ba58:	b	41ae58 <ferror@plt+0x18088>
  41ba5c:	cmp	w1, #0x1a1
  41ba60:	b.hi	41ba70 <ferror@plt+0x18ca0>  // b.pmore
  41ba64:	cmp	w1, #0x19f
  41ba68:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41ba6c:	b	41ae58 <ferror@plt+0x18088>
  41ba70:	sub	w1, w1, #0x1af
  41ba74:	cmp	w1, #0x1
  41ba78:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41ba7c:	b	41ae58 <ferror@plt+0x18088>
  41ba80:	sub	w1, w1, #0x41
  41ba84:	cmp	w1, #0x38
  41ba88:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41ba8c:	mov	x0, #0x1                   	// #1
  41ba90:	lsl	x1, x0, x1
  41ba94:	mov	x0, #0x1                   	// #1
  41ba98:	movk	x0, #0x10, lsl #16
  41ba9c:	movk	x0, #0x1, lsl #32
  41baa0:	movk	x0, #0x150, lsl #48
  41baa4:	tst	x1, x0
  41baa8:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41baac:	b	41ae58 <ferror@plt+0x18088>
  41bab0:	cmp	w1, #0x75
  41bab4:	b.hi	41bae0 <ferror@plt+0x18d10>  // b.pmore
  41bab8:	cmp	w1, #0x4e
  41babc:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41bac0:	sub	w1, w1, #0x4f
  41bac4:	mov	x0, #0x1                   	// #1
  41bac8:	lsl	x1, x0, x1
  41bacc:	mov	x0, #0x41                  	// #65
  41bad0:	movk	x0, #0x41, lsl #32
  41bad4:	tst	x1, x0
  41bad8:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41badc:	b	41ae58 <ferror@plt+0x18088>
  41bae0:	cmp	w1, #0x423
  41bae4:	b.eq	41ae58 <ferror@plt+0x18088>  // b.none
  41bae8:	cmp	w1, #0x443
  41baec:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41baf0:	b	41ae58 <ferror@plt+0x18088>
  41baf4:	cmp	w1, #0x7a
  41baf8:	b.hi	41bb28 <ferror@plt+0x18d58>  // b.pmore
  41bafc:	cmp	w1, #0x40
  41bb00:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41bb04:	sub	w1, w1, #0x41
  41bb08:	cmp	w1, #0x39
  41bb0c:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41bb10:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41bb14:	add	x0, x0, #0x364
  41bb18:	ldrh	w0, [x0, w1, uxtw #1]
  41bb1c:	adr	x1, 41bb28 <ferror@plt+0x18d58>
  41bb20:	add	x0, x1, w0, sxth #2
  41bb24:	br	x0
  41bb28:	cmp	w1, #0x1b7
  41bb2c:	b.eq	41ae58 <ferror@plt+0x18088>  // b.none
  41bb30:	b.hi	41bb44 <ferror@plt+0x18d74>  // b.pmore
  41bb34:	and	w1, w1, #0xffffffdf
  41bb38:	cmp	w1, #0xdc
  41bb3c:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41bb40:	b	41ae58 <ferror@plt+0x18088>
  41bb44:	cmp	w1, #0x292
  41bb48:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41bb4c:	b	41ae58 <ferror@plt+0x18088>
  41bb50:	cmp	w1, #0x75
  41bb54:	b.hi	41bb88 <ferror@plt+0x18db8>  // b.pmore
  41bb58:	cmp	w1, #0x40
  41bb5c:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41bb60:	sub	w1, w1, #0x41
  41bb64:	mov	x0, #0x1                   	// #1
  41bb68:	lsl	x1, x0, x1
  41bb6c:	mov	x0, #0x4111                	// #16657
  41bb70:	movk	x0, #0x12, lsl #16
  41bb74:	movk	x0, #0x4111, lsl #32
  41bb78:	movk	x0, #0x12, lsl #48
  41bb7c:	tst	x1, x0
  41bb80:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41bb84:	b	41ae58 <ferror@plt+0x18088>
  41bb88:	sub	w1, w1, #0x474
  41bb8c:	cmp	w1, #0x1
  41bb90:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41bb94:	b	41ae58 <ferror@plt+0x18088>
  41bb98:	sub	w1, w1, #0x41
  41bb9c:	cmp	w1, #0x34
  41bba0:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41bba4:	mov	x0, #0x1                   	// #1
  41bba8:	lsl	x1, x0, x1
  41bbac:	mov	x0, #0x4111                	// #16657
  41bbb0:	movk	x0, #0x12, lsl #16
  41bbb4:	movk	x0, #0x4111, lsl #32
  41bbb8:	movk	x0, #0x12, lsl #48
  41bbbc:	tst	x1, x0
  41bbc0:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41bbc4:	b	41ae58 <ferror@plt+0x18088>
  41bbc8:	cmp	w1, #0x3c9
  41bbcc:	b.hi	41bc74 <ferror@plt+0x18ea4>  // b.pmore
  41bbd0:	cmp	w1, #0x3be
  41bbd4:	b.hi	41bc2c <ferror@plt+0x18e5c>  // b.pmore
  41bbd8:	cmp	w1, #0x3a9
  41bbdc:	b.eq	41ae58 <ferror@plt+0x18088>  // b.none
  41bbe0:	b.hi	41bc50 <ferror@plt+0x18e80>  // b.pmore
  41bbe4:	sub	w1, w1, #0x391
  41bbe8:	cmp	w1, #0xe
  41bbec:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41bbf0:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41bbf4:	add	x0, x0, #0x3d8
  41bbf8:	ldrh	w0, [x0, w1, uxtw #1]
  41bbfc:	adr	x1, 41bc08 <ferror@plt+0x18e38>
  41bc00:	add	x0, x1, w0, sxth #2
  41bc04:	br	x0
  41bc08:	mov	w18, #0xffffe03d            	// #-8131
  41bc0c:	add	w1, w1, w18
  41bc10:	mov	x0, #0x1                   	// #1
  41bc14:	lsl	x1, x0, x1
  41bc18:	mov	x0, #0x201                 	// #513
  41bc1c:	movk	x0, #0x201, lsl #48
  41bc20:	tst	x1, x0
  41bc24:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41bc28:	b	41ae58 <ferror@plt+0x18088>
  41bc2c:	sub	w1, w1, #0x3bf
  41bc30:	cmp	w1, #0xa
  41bc34:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41bc38:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41bc3c:	add	x0, x0, #0x3f8
  41bc40:	ldrh	w0, [x0, w1, uxtw #1]
  41bc44:	adr	x1, 41bc50 <ferror@plt+0x18e80>
  41bc48:	add	x0, x1, w0, sxth #2
  41bc4c:	br	x0
  41bc50:	sub	w1, w1, #0x3b1
  41bc54:	cmp	w1, #0x8
  41bc58:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41bc5c:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41bc60:	add	x0, x0, #0x410
  41bc64:	ldrh	w0, [x0, w1, uxtw #1]
  41bc68:	adr	x1, 41bc74 <ferror@plt+0x18ea4>
  41bc6c:	add	x0, x1, w0, sxth #2
  41bc70:	br	x0
  41bc74:	mov	w0, #0x1ffc                	// #8188
  41bc78:	cmp	w1, w0
  41bc7c:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41bc80:	mov	w0, #0x1fc2                	// #8130
  41bc84:	cmp	w1, w0
  41bc88:	b.hi	41bc08 <ferror@plt+0x18e38>  // b.pmore
  41bc8c:	mov	w0, #0x1fb3                	// #8115
  41bc90:	cmp	w1, w0
  41bc94:	b.eq	41ae58 <ferror@plt+0x18088>  // b.none
  41bc98:	mov	w0, #0x1fbc                	// #8124
  41bc9c:	cmp	w1, w0
  41bca0:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41bca4:	b	41ae58 <ferror@plt+0x18088>
  41bca8:	cmp	w1, #0x3b9
  41bcac:	b.hi	41bd34 <ferror@plt+0x18f64>  // b.pmore
  41bcb0:	cmp	w1, #0x3b0
  41bcb4:	b.hi	41bcec <ferror@plt+0x18f1c>  // b.pmore
  41bcb8:	cmp	w1, #0x399
  41bcbc:	b.hi	41bd10 <ferror@plt+0x18f40>  // b.pmore
  41bcc0:	cmp	w1, #0x390
  41bcc4:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41bcc8:	sub	w1, w1, #0x391
  41bccc:	cmp	w1, #0x8
  41bcd0:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41bcd4:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41bcd8:	add	x0, x0, #0x424
  41bcdc:	ldrh	w0, [x0, w1, uxtw #1]
  41bce0:	adr	x1, 41bcec <ferror@plt+0x18f1c>
  41bce4:	add	x0, x1, w0, sxth #2
  41bce8:	br	x0
  41bcec:	sub	w1, w1, #0x3b1
  41bcf0:	cmp	w1, #0x8
  41bcf4:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41bcf8:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41bcfc:	add	x0, x0, #0x438
  41bd00:	ldrh	w0, [x0, w1, uxtw #1]
  41bd04:	adr	x1, 41bd10 <ferror@plt+0x18f40>
  41bd08:	add	x0, x1, w0, sxth #2
  41bd0c:	br	x0
  41bd10:	sub	w1, w1, #0x39f
  41bd14:	cmp	w1, #0xa
  41bd18:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41bd1c:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41bd20:	add	x0, x0, #0x44c
  41bd24:	ldrh	w0, [x0, w1, uxtw #1]
  41bd28:	adr	x1, 41bd34 <ferror@plt+0x18f64>
  41bd2c:	add	x0, x1, w0, sxth #2
  41bd30:	br	x0
  41bd34:	mov	w0, #0x1fbc                	// #8124
  41bd38:	cmp	w1, w0
  41bd3c:	b.eq	41ae58 <ferror@plt+0x18088>  // b.none
  41bd40:	b.hi	41bd88 <ferror@plt+0x18fb8>  // b.pmore
  41bd44:	cmp	w1, #0x3c9
  41bd48:	b.hi	41bd78 <ferror@plt+0x18fa8>  // b.pmore
  41bd4c:	cmp	w1, #0x3be
  41bd50:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41bd54:	sub	w1, w1, #0x3bf
  41bd58:	cmp	w1, #0xa
  41bd5c:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41bd60:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41bd64:	add	x0, x0, #0x464
  41bd68:	ldrh	w0, [x0, w1, uxtw #1]
  41bd6c:	adr	x1, 41bd78 <ferror@plt+0x18fa8>
  41bd70:	add	x0, x1, w0, sxth #2
  41bd74:	br	x0
  41bd78:	mov	w0, #0x1fb3                	// #8115
  41bd7c:	cmp	w1, w0
  41bd80:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41bd84:	b	41ae58 <ferror@plt+0x18088>
  41bd88:	mov	w17, #0xffffe03d            	// #-8131
  41bd8c:	add	w1, w1, w17
  41bd90:	cmp	w1, #0x39
  41bd94:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41bd98:	mov	x0, #0x1                   	// #1
  41bd9c:	lsl	x1, x0, x1
  41bda0:	mov	x0, #0x201                 	// #513
  41bda4:	movk	x0, #0x201, lsl #48
  41bda8:	tst	x1, x0
  41bdac:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41bdb0:	b	41ae58 <ferror@plt+0x18088>
  41bdb4:	cmp	w1, #0x171
  41bdb8:	b.hi	41be2c <ferror@plt+0x1905c>  // b.pmore
  41bdbc:	cmp	w1, #0x167
  41bdc0:	b.hi	41ae58 <ferror@plt+0x18088>  // b.pmore
  41bdc4:	cmp	w1, #0xfc
  41bdc8:	b.hi	41be1c <ferror@plt+0x1904c>  // b.pmore
  41bdcc:	cmp	w1, #0xd1
  41bdd0:	b.hi	41bdfc <ferror@plt+0x1902c>  // b.pmore
  41bdd4:	sub	w1, w1, #0x4f
  41bdd8:	cmp	w1, #0x26
  41bddc:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41bde0:	mov	x0, #0x1                   	// #1
  41bde4:	lsl	x1, x0, x1
  41bde8:	mov	x0, #0x41                  	// #65
  41bdec:	movk	x0, #0x41, lsl #32
  41bdf0:	tst	x1, x0
  41bdf4:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41bdf8:	b	41ae58 <ferror@plt+0x18088>
  41bdfc:	sub	w1, w1, #0xd2
  41be00:	mov	x0, #0x1                   	// #1
  41be04:	lsl	x1, x0, x1
  41be08:	mov	x0, #0x79f                 	// #1951
  41be0c:	movk	x0, #0x79f, lsl #32
  41be10:	tst	x1, x0
  41be14:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41be18:	b	41ae58 <ferror@plt+0x18088>
  41be1c:	sub	w1, w1, #0x14c
  41be20:	cmp	w1, #0x5
  41be24:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41be28:	b	41ae58 <ferror@plt+0x18088>
  41be2c:	mov	w0, #0x1e53                	// #7763
  41be30:	cmp	w1, w0
  41be34:	b.hi	41be80 <ferror@plt+0x190b0>  // b.pmore
  41be38:	mov	w0, #0x1e4b                	// #7755
  41be3c:	cmp	w1, w0
  41be40:	b.hi	41ae58 <ferror@plt+0x18088>  // b.pmore
  41be44:	cmp	w1, #0x1dc
  41be48:	b.hi	41be58 <ferror@plt+0x19088>  // b.pmore
  41be4c:	cmp	w1, #0x1d0
  41be50:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41be54:	b	41ae58 <ferror@plt+0x18088>
  41be58:	sub	w1, w1, #0x20c
  41be5c:	cmp	w1, #0x25
  41be60:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41be64:	mov	x0, #0x1                   	// #1
  41be68:	lsl	x1, x0, x1
  41be6c:	mov	x0, #0x3fc0000000          	// #273804165120
  41be70:	movk	x0, #0xf0f
  41be74:	tst	x1, x0
  41be78:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41be7c:	b	41ae58 <ferror@plt+0x18088>
  41be80:	mov	w0, #0x1ed9                	// #7897
  41be84:	cmp	w1, w0
  41be88:	b.hi	41beac <ferror@plt+0x190dc>  // b.pmore
  41be8c:	mov	w0, #0x1ecb                	// #7883
  41be90:	cmp	w1, w0
  41be94:	b.hi	41ae58 <ferror@plt+0x18088>  // b.pmore
  41be98:	mov	w16, #0xffffe18e            	// #-7794
  41be9c:	add	w1, w1, w16
  41bea0:	cmp	w1, #0x9
  41bea4:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41bea8:	b	41ae58 <ferror@plt+0x18088>
  41beac:	mov	w15, #0xffffe11c            	// #-7908
  41beb0:	add	w1, w1, w15
  41beb4:	cmp	w1, #0x3
  41beb8:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41bebc:	b	41ae58 <ferror@plt+0x18088>
  41bec0:	cmp	w1, #0x1a1
  41bec4:	b.hi	41c044 <ferror@plt+0x19274>  // b.pmore
  41bec8:	cmp	w1, #0x167
  41becc:	b.hi	41bf90 <ferror@plt+0x191c0>  // b.pmore
  41bed0:	cmp	w1, #0x103
  41bed4:	b.hi	41bfec <ferror@plt+0x1921c>  // b.pmore
  41bed8:	cmp	w1, #0xc7
  41bedc:	b.hi	41bfb4 <ferror@plt+0x191e4>  // b.pmore
  41bee0:	cmp	w1, #0x7a
  41bee4:	b.hi	41bfdc <ferror@plt+0x1920c>  // b.pmore
  41bee8:	cmp	w1, #0x40
  41beec:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41bef0:	sub	w1, w1, #0x41
  41bef4:	cmp	w1, #0x39
  41bef8:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41befc:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41bf00:	add	x0, x0, #0x47c
  41bf04:	ldrh	w0, [x0, w1, uxtw #1]
  41bf08:	adr	x1, 41bf14 <ferror@plt+0x19144>
  41bf0c:	add	x0, x1, w0, sxth #2
  41bf10:	br	x0
  41bf14:	mov	w14, #0xffffe172            	// #-7822
  41bf18:	add	w1, w1, w14
  41bf1c:	mov	x0, #0x1                   	// #1
  41bf20:	lsl	x1, x0, x1
  41bf24:	mov	x0, #0xe0f                 	// #3599
  41bf28:	movk	x0, #0x3ff0, lsl #16
  41bf2c:	movk	x0, #0xf0ff, lsl #32
  41bf30:	movk	x0, #0xff, lsl #48
  41bf34:	tst	x1, x0
  41bf38:	b.ne	41ae58 <ferror@plt+0x18088>  // b.any
  41bf3c:	b	41ac18 <ferror@plt+0x17e48>
  41bf40:	mov	w12, #0xffffe1de            	// #-7714
  41bf44:	add	w1, w1, w12
  41bf48:	mov	x0, #0x1                   	// #1
  41bf4c:	lsl	x1, x0, x1
  41bf50:	mov	x0, #0xf033                	// #61491
  41bf54:	movk	x0, #0xf000, lsl #16
  41bf58:	movk	x0, #0xfc0c, lsl #32
  41bf5c:	movk	x0, #0x3, lsl #48
  41bf60:	tst	x1, x0
  41bf64:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41bf68:	b	41ae58 <ferror@plt+0x18088>
  41bf6c:	sub	w1, w1, #0x1f8
  41bf70:	mov	x0, #0x1                   	// #1
  41bf74:	lsl	x1, x0, x1
  41bf78:	mov	x0, #0xffffffffffffff0f    	// #-241
  41bf7c:	movk	x0, #0xc0c0, lsl #32
  41bf80:	movk	x0, #0xffc, lsl #48
  41bf84:	tst	x1, x0
  41bf88:	b.ne	41ae58 <ferror@plt+0x18088>  // b.any
  41bf8c:	b	41ac18 <ferror@plt+0x17e48>
  41bf90:	sub	w1, w1, #0x168
  41bf94:	mov	x0, #0x1                   	// #1
  41bf98:	lsl	x1, x0, x1
  41bf9c:	mov	x0, #0xf3ff                	// #62463
  41bfa0:	movk	x0, #0x7f, lsl #16
  41bfa4:	movk	x0, #0x300, lsl #48
  41bfa8:	tst	x1, x0
  41bfac:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41bfb0:	b	41ae58 <ferror@plt+0x18088>
  41bfb4:	sub	w1, w1, #0xc8
  41bfb8:	mov	x0, #0x1                   	// #1
  41bfbc:	lsl	x1, x0, x1
  41bfc0:	mov	x0, #0x7eff                	// #32511
  41bfc4:	movk	x0, #0x3f3e, lsl #16
  41bfc8:	movk	x0, #0x7eff, lsl #32
  41bfcc:	movk	x0, #0xfbe, lsl #48
  41bfd0:	tst	x1, x0
  41bfd4:	b.ne	41ae58 <ferror@plt+0x18088>  // b.any
  41bfd8:	b	41ac18 <ferror@plt+0x17e48>
  41bfdc:	sub	w1, w1, #0xc0
  41bfe0:	cmp	w1, #0x5
  41bfe4:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41bfe8:	b	41ae58 <ferror@plt+0x18088>
  41bfec:	cmp	w1, #0x125
  41bff0:	b.hi	41c020 <ferror@plt+0x19250>  // b.pmore
  41bff4:	cmp	w1, #0x10d
  41bff8:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41bffc:	sub	w1, w1, #0x10e
  41c000:	cmp	w1, #0x17
  41c004:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41c008:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41c00c:	add	x0, x0, #0x4f0
  41c010:	ldrh	w0, [x0, w1, uxtw #1]
  41c014:	adr	x1, 41c020 <ferror@plt+0x19250>
  41c018:	add	x0, x1, w0, sxth #2
  41c01c:	br	x0
  41c020:	sub	w1, w1, #0x128
  41c024:	cmp	w1, #0x3d
  41c028:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41c02c:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41c030:	add	x0, x0, #0x520
  41c034:	ldrh	w0, [x0, w1, uxtw #1]
  41c038:	adr	x1, 41c044 <ferror@plt+0x19274>
  41c03c:	add	x0, x1, w0, sxth #2
  41c040:	br	x0
  41c044:	mov	w0, #0x1e53                	// #7763
  41c048:	cmp	w1, w0
  41c04c:	b.hi	41c0c8 <ferror@plt+0x192f8>  // b.pmore
  41c050:	mov	w0, #0x1e21                	// #7713
  41c054:	cmp	w1, w0
  41c058:	b.hi	41bf40 <ferror@plt+0x19170>  // b.pmore
  41c05c:	cmp	w1, #0x233
  41c060:	b.hi	41c09c <ferror@plt+0x192cc>  // b.pmore
  41c064:	cmp	w1, #0x1f7
  41c068:	b.hi	41bf6c <ferror@plt+0x1919c>  // b.pmore
  41c06c:	sub	w1, w1, #0x1af
  41c070:	cmp	w1, #0x3a
  41c074:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41c078:	mov	x0, #0x1                   	// #1
  41c07c:	lsl	x1, x0, x1
  41c080:	mov	x0, #0x3                   	// #3
  41c084:	movk	x0, #0xc000, lsl #16
  41c088:	movk	x0, #0xbfff, lsl #32
  41c08c:	movk	x0, #0x607, lsl #48
  41c090:	tst	x1, x0
  41c094:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41c098:	b	41ae58 <ferror@plt+0x18088>
  41c09c:	mov	w11, #0xffffe1fe            	// #-7682
  41c0a0:	add	w1, w1, w11
  41c0a4:	cmp	w1, #0x15
  41c0a8:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41c0ac:	mov	x0, #0x1                   	// #1
  41c0b0:	lsl	x1, x0, x1
  41c0b4:	mov	x0, #0x303                 	// #771
  41c0b8:	movk	x0, #0x3c, lsl #16
  41c0bc:	tst	x1, x0
  41c0c0:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41c0c4:	b	41ae58 <ferror@plt+0x18088>
  41c0c8:	mov	w0, #0x1ec5                	// #7877
  41c0cc:	cmp	w1, w0
  41c0d0:	b.hi	41c150 <ferror@plt+0x19380>  // b.pmore
  41c0d4:	mov	w0, #0x1e8d                	// #7821
  41c0d8:	cmp	w1, w0
  41c0dc:	b.hi	41bf14 <ferror@plt+0x19144>  // b.pmore
  41c0e0:	mov	w0, #0x1e6b                	// #7787
  41c0e4:	cmp	w1, w0
  41c0e8:	b.hi	41c120 <ferror@plt+0x19350>  // b.pmore
  41c0ec:	mov	w0, #0x1e57                	// #7767
  41c0f0:	cmp	w1, w0
  41c0f4:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41c0f8:	mov	w13, #0xffffe1a8            	// #-7768
  41c0fc:	add	w1, w1, w13
  41c100:	cmp	w1, #0x13
  41c104:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41c108:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41c10c:	add	x0, x0, #0x59c
  41c110:	ldrh	w0, [x0, w1, uxtw #1]
  41c114:	adr	x1, 41c120 <ferror@plt+0x19350>
  41c118:	add	x0, x1, w0, sxth #2
  41c11c:	br	x0
  41c120:	mov	w0, #0x1e7d                	// #7805
  41c124:	cmp	w1, w0
  41c128:	b.hi	41c13c <ferror@plt+0x1936c>  // b.pmore
  41c12c:	mov	w0, #0x1e77                	// #7799
  41c130:	cmp	w1, w0
  41c134:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41c138:	b	41ae58 <ferror@plt+0x18088>
  41c13c:	mov	w10, #0xffffe180            	// #-7808
  41c140:	add	w1, w1, w10
  41c144:	cmp	w1, #0x7
  41c148:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41c14c:	b	41ae58 <ferror@plt+0x18088>
  41c150:	mov	w9, #0xffffe138            	// #-7880
  41c154:	add	w1, w1, w9
  41c158:	cmp	w1, #0x31
  41c15c:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41c160:	mov	x0, #0x1                   	// #1
  41c164:	lsl	x1, x0, x1
  41c168:	mov	x0, #0xffc3                	// #65475
  41c16c:	movk	x0, #0xc3fc, lsl #16
  41c170:	movk	x0, #0xccff, lsl #32
  41c174:	movk	x0, #0x3, lsl #48
  41c178:	tst	x1, x0
  41c17c:	b.ne	41ae58 <ferror@plt+0x18088>  // b.any
  41c180:	b	41ac18 <ferror@plt+0x17e48>
  41c184:	cmp	w1, #0x171
  41c188:	b.hi	41c1c4 <ferror@plt+0x193f4>  // b.pmore
  41c18c:	cmp	w1, #0x167
  41c190:	b.hi	41ae58 <ferror@plt+0x18088>  // b.pmore
  41c194:	cmp	w1, #0xdc
  41c198:	b.hi	41c1b4 <ferror@plt+0x193e4>  // b.pmore
  41c19c:	cmp	w1, #0xd8
  41c1a0:	b.hi	41ae58 <ferror@plt+0x18088>  // b.pmore
  41c1a4:	and	w1, w1, #0xffffffdf
  41c1a8:	cmp	w1, #0x55
  41c1ac:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41c1b0:	b	41ae58 <ferror@plt+0x18088>
  41c1b4:	sub	w1, w1, #0xf9
  41c1b8:	cmp	w1, #0x3
  41c1bc:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41c1c0:	b	41ae58 <ferror@plt+0x18088>
  41c1c4:	mov	w0, #0x1e7b                	// #7803
  41c1c8:	cmp	w1, w0
  41c1cc:	b.hi	41c200 <ferror@plt+0x19430>  // b.pmore
  41c1d0:	mov	w0, #0x1e77                	// #7799
  41c1d4:	cmp	w1, w0
  41c1d8:	b.hi	41ae58 <ferror@plt+0x18088>  // b.pmore
  41c1dc:	cmp	w1, #0x1dc
  41c1e0:	b.hi	41c1f0 <ferror@plt+0x19420>  // b.pmore
  41c1e4:	cmp	w1, #0x1d2
  41c1e8:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41c1ec:	b	41ae58 <ferror@plt+0x18088>
  41c1f0:	sub	w1, w1, #0x214
  41c1f4:	cmp	w1, #0x3
  41c1f8:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41c1fc:	b	41ae58 <ferror@plt+0x18088>
  41c200:	mov	w8, #0xffffe11a            	// #-7910
  41c204:	add	w1, w1, w8
  41c208:	cmp	w1, #0x1
  41c20c:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41c210:	b	41ae58 <ferror@plt+0x18088>
  41c214:	cmp	w1, #0x1e1
  41c218:	b.hi	41c280 <ferror@plt+0x194b0>  // b.pmore
  41c21c:	cmp	w1, #0x1dd
  41c220:	b.hi	41ae58 <ferror@plt+0x18088>  // b.pmore
  41c224:	cmp	w1, #0xe5
  41c228:	b.hi	41c25c <ferror@plt+0x1948c>  // b.pmore
  41c22c:	cmp	w1, #0xdf
  41c230:	b.hi	41ae58 <ferror@plt+0x18088>  // b.pmore
  41c234:	cmp	w1, #0x61
  41c238:	b.eq	41ae58 <ferror@plt+0x18088>  // b.none
  41c23c:	b.hi	41c24c <ferror@plt+0x1947c>  // b.pmore
  41c240:	cmp	w1, #0x41
  41c244:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41c248:	b	41ae58 <ferror@plt+0x18088>
  41c24c:	sub	w1, w1, #0xc0
  41c250:	cmp	w1, #0x5
  41c254:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41c258:	b	41ae58 <ferror@plt+0x18088>
  41c25c:	cmp	w1, #0x103
  41c260:	b.hi	41c270 <ferror@plt+0x194a0>  // b.pmore
  41c264:	cmp	w1, #0xff
  41c268:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41c26c:	b	41ae58 <ferror@plt+0x18088>
  41c270:	sub	w1, w1, #0x1cd
  41c274:	cmp	w1, #0x1
  41c278:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41c27c:	b	41ae58 <ferror@plt+0x18088>
  41c280:	cmp	w1, #0x227
  41c284:	b.hi	41c2b0 <ferror@plt+0x194e0>  // b.pmore
  41c288:	cmp	w1, #0x1f9
  41c28c:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41c290:	sub	w1, w1, #0x1fa
  41c294:	mov	x0, #0x1                   	// #1
  41c298:	lsl	x1, x0, x1
  41c29c:	mov	x0, #0x3c3                 	// #963
  41c2a0:	movk	x0, #0x3000, lsl #32
  41c2a4:	tst	x1, x0
  41c2a8:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41c2ac:	b	41ae58 <ferror@plt+0x18088>
  41c2b0:	mov	w0, #0x1eab                	// #7851
  41c2b4:	cmp	w1, w0
  41c2b8:	b.hi	41c2cc <ferror@plt+0x194fc>  // b.pmore
  41c2bc:	mov	w0, #0x1ea1                	// #7841
  41c2c0:	cmp	w1, w0
  41c2c4:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41c2c8:	b	41ae58 <ferror@plt+0x18088>
  41c2cc:	mov	w7, #0xffffe152            	// #-7854
  41c2d0:	add	w1, w1, w7
  41c2d4:	cmp	w1, #0x7
  41c2d8:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41c2dc:	b	41ae58 <ferror@plt+0x18088>
  41c2e0:	cmp	w1, #0x165
  41c2e4:	b.hi	41c330 <ferror@plt+0x19560>  // b.pmore
  41c2e8:	cmp	w1, #0x159
  41c2ec:	b.hi	41c304 <ferror@plt+0x19534>  // b.pmore
  41c2f0:	cmp	w1, #0x54
  41c2f4:	b.hi	41c320 <ferror@plt+0x19550>  // b.pmore
  41c2f8:	cmp	w1, #0x52
  41c2fc:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41c300:	b	41ae58 <ferror@plt+0x18088>
  41c304:	sub	w1, w1, #0x15a
  41c308:	mov	x0, #0x1                   	// #1
  41c30c:	lsl	x1, x0, x1
  41c310:	mov	x0, #0xccf                 	// #3279
  41c314:	tst	x1, x0
  41c318:	b.ne	41ae58 <ferror@plt+0x18088>  // b.any
  41c31c:	b	41ac18 <ferror@plt+0x17e48>
  41c320:	sub	w1, w1, #0x73
  41c324:	cmp	w1, #0x1
  41c328:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41c32c:	b	41ae58 <ferror@plt+0x18088>
  41c330:	mov	w6, #0xffffe1a0            	// #-7776
  41c334:	add	w1, w1, w6
  41c338:	cmp	w1, #0x37
  41c33c:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41c340:	mov	x0, #0x1                   	// #1
  41c344:	lsl	x1, x0, x1
  41c348:	mov	x0, #0xcf3                 	// #3315
  41c34c:	movk	x0, #0x80, lsl #48
  41c350:	tst	x1, x0
  41c354:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41c358:	b	41ae58 <ferror@plt+0x18088>
  41c35c:	cmp	w1, #0x165
  41c360:	b.hi	41c448 <ferror@plt+0x19678>  // b.pmore
  41c364:	cmp	w1, #0x138
  41c368:	b.hi	41c3cc <ferror@plt+0x195fc>  // b.pmore
  41c36c:	cmp	w1, #0x74
  41c370:	b.hi	41c418 <ferror@plt+0x19648>  // b.pmore
  41c374:	cmp	w1, #0x42
  41c378:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41c37c:	sub	w1, w1, #0x43
  41c380:	cmp	w1, #0x31
  41c384:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41c388:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41c38c:	add	x0, x0, #0x5c4
  41c390:	ldrh	w0, [x0, w1, uxtw #1]
  41c394:	adr	x1, 41c3a0 <ferror@plt+0x195d0>
  41c398:	add	x0, x1, w0, sxth #2
  41c39c:	br	x0
  41c3a0:	mov	w5, #0xffffe1f6            	// #-7690
  41c3a4:	add	w1, w1, w5
  41c3a8:	mov	x0, #0x1                   	// #1
  41c3ac:	lsl	x1, x0, x1
  41c3b0:	mov	x0, #0xff3f                	// #65343
  41c3b4:	movk	x0, #0x3fc3, lsl #16
  41c3b8:	movk	x0, #0xffc3, lsl #32
  41c3bc:	movk	x0, #0xf, lsl #48
  41c3c0:	tst	x1, x0
  41c3c4:	b.ne	41ae58 <ferror@plt+0x18088>  // b.any
  41c3c8:	b	41ac18 <ferror@plt+0x17e48>
  41c3cc:	sub	w1, w1, #0x139
  41c3d0:	cmp	w1, #0x2c
  41c3d4:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41c3d8:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41c3dc:	add	x0, x0, #0x628
  41c3e0:	ldrh	w0, [x0, w1, uxtw #1]
  41c3e4:	adr	x1, 41c3f0 <ferror@plt+0x19620>
  41c3e8:	add	x0, x1, w0, sxth #2
  41c3ec:	br	x0
  41c3f0:	sub	w1, w1, #0xe8
  41c3f4:	mov	x0, #0x1                   	// #1
  41c3f8:	lsl	x1, x0, x1
  41c3fc:	mov	x0, #0x20f                 	// #527
  41c400:	movk	x0, #0xc000, lsl #16
  41c404:	movk	x0, #0xfcff, lsl #32
  41c408:	movk	x0, #0x33fc, lsl #48
  41c40c:	tst	x1, x0
  41c410:	b.ne	41ae58 <ferror@plt+0x18088>  // b.any
  41c414:	b	41ac18 <ferror@plt+0x17e48>
  41c418:	cmp	w1, #0x125
  41c41c:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41c420:	cmp	w1, #0xe7
  41c424:	b.hi	41c3f0 <ferror@plt+0x19620>  // b.pmore
  41c428:	cmp	w1, #0xcb
  41c42c:	b.hi	41c43c <ferror@plt+0x1966c>  // b.pmore
  41c430:	cmp	w1, #0xc7
  41c434:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41c438:	b	41ae58 <ferror@plt+0x18088>
  41c43c:	cmp	w1, #0xd1
  41c440:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41c444:	b	41ae58 <ferror@plt+0x18088>
  41c448:	mov	w0, #0x1e3d                	// #7741
  41c44c:	cmp	w1, w0
  41c450:	b.hi	41c490 <ferror@plt+0x196c0>  // b.pmore
  41c454:	mov	w0, #0x1e09                	// #7689
  41c458:	cmp	w1, w0
  41c45c:	b.hi	41c3a0 <ferror@plt+0x195d0>  // b.pmore
  41c460:	sub	w1, w1, #0x1e6
  41c464:	cmp	w1, #0x39
  41c468:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41c46c:	mov	x0, #0x1                   	// #1
  41c470:	lsl	x1, x0, x1
  41c474:	mov	x0, #0xc00f                	// #49167
  41c478:	movk	x0, #0xc00c, lsl #16
  41c47c:	movk	x0, #0x3c03, lsl #32
  41c480:	movk	x0, #0x33c, lsl #48
  41c484:	tst	x1, x0
  41c488:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41c48c:	b	41ae58 <ferror@plt+0x18088>
  41c490:	mov	w0, #0x1e97                	// #7831
  41c494:	cmp	w1, w0
  41c498:	b.hi	41c4d8 <ferror@plt+0x19708>  // b.pmore
  41c49c:	mov	w0, #0x1e95                	// #7829
  41c4a0:	cmp	w1, w0
  41c4a4:	b.hi	41ae58 <ferror@plt+0x18088>  // b.pmore
  41c4a8:	mov	w0, #0x1e4b                	// #7755
  41c4ac:	cmp	w1, w0
  41c4b0:	b.hi	41c4c4 <ferror@plt+0x196f4>  // b.pmore
  41c4b4:	mov	w0, #0x1e43                	// #7747
  41c4b8:	cmp	w1, w0
  41c4bc:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41c4c0:	b	41ae58 <ferror@plt+0x18088>
  41c4c4:	mov	w4, #0xffffe1a8            	// #-7768
  41c4c8:	add	w1, w1, w4
  41c4cc:	cmp	w1, #0x19
  41c4d0:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41c4d4:	b	41ae58 <ferror@plt+0x18088>
  41c4d8:	mov	w3, #0xffffe148            	// #-7864
  41c4dc:	add	w1, w1, w3
  41c4e0:	cmp	w1, #0xf
  41c4e4:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41c4e8:	b	41ae58 <ferror@plt+0x18088>
  41c4ec:	cmp	w1, #0x151
  41c4f0:	b.hi	41c600 <ferror@plt+0x19830>  // b.pmore
  41c4f4:	cmp	w1, #0x119
  41c4f8:	b.hi	41c58c <ferror@plt+0x197bc>  // b.pmore
  41c4fc:	cmp	w1, #0xd6
  41c500:	b.hi	41c5d0 <ferror@plt+0x19800>  // b.pmore
  41c504:	cmp	w1, #0xbf
  41c508:	b.hi	41c5b0 <ferror@plt+0x197e0>  // b.pmore
  41c50c:	sub	w1, w1, #0x41
  41c510:	cmp	w1, #0x34
  41c514:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41c518:	mov	x0, #0x1                   	// #1
  41c51c:	lsl	x1, x0, x1
  41c520:	mov	x0, #0x4111                	// #16657
  41c524:	movk	x0, #0x10, lsl #16
  41c528:	movk	x0, #0x4111, lsl #32
  41c52c:	movk	x0, #0x10, lsl #48
  41c530:	tst	x1, x0
  41c534:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41c538:	b	41ae58 <ferror@plt+0x18088>
  41c53c:	sub	w1, w1, #0x1fa
  41c540:	mov	x0, #0x1                   	// #1
  41c544:	lsl	x1, x0, x1
  41c548:	mov	x0, #0xffc3                	// #65475
  41c54c:	movk	x0, #0x3c3f, lsl #16
  41c550:	movk	x0, #0x3000, lsl #32
  41c554:	movk	x0, #0xff, lsl #48
  41c558:	tst	x1, x0
  41c55c:	b.ne	41ae58 <ferror@plt+0x18088>  // b.any
  41c560:	b	41ac18 <ferror@plt+0x17e48>
  41c564:	sub	w1, w1, #0x1af
  41c568:	mov	x0, #0x1                   	// #1
  41c56c:	lsl	x1, x0, x1
  41c570:	mov	x0, #0x3                   	// #3
  41c574:	movk	x0, #0xc000, lsl #16
  41c578:	movk	x0, #0xbfff, lsl #32
  41c57c:	movk	x0, #0x7, lsl #48
  41c580:	tst	x1, x0
  41c584:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41c588:	b	41ae58 <ferror@plt+0x18088>
  41c58c:	sub	w1, w1, #0x11a
  41c590:	mov	x0, #0x1                   	// #1
  41c594:	lsl	x1, x0, x1
  41c598:	mov	x0, #0xc003                	// #49155
  41c59c:	movk	x0, #0x4f, lsl #16
  41c5a0:	movk	x0, #0xfc, lsl #48
  41c5a4:	tst	x1, x0
  41c5a8:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41c5ac:	b	41ae58 <ferror@plt+0x18088>
  41c5b0:	sub	w1, w1, #0xc0
  41c5b4:	mov	x0, #0x1                   	// #1
  41c5b8:	lsl	x1, x0, x1
  41c5bc:	mov	x0, #0xff3f                	// #65343
  41c5c0:	movk	x0, #0x7c, lsl #16
  41c5c4:	tst	x1, x0
  41c5c8:	b.ne	41ae58 <ferror@plt+0x18088>  // b.any
  41c5cc:	b	41ac18 <ferror@plt+0x17e48>
  41c5d0:	sub	w1, w1, #0xd9
  41c5d4:	cmp	w1, #0x3e
  41c5d8:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41c5dc:	mov	x0, #0x1                   	// #1
  41c5e0:	lsl	x1, x0, x1
  41c5e4:	mov	x0, #0x9f8f                	// #40847
  41c5e8:	movk	x0, #0x3e7f, lsl #16
  41c5ec:	movk	x0, #0x78f, lsl #32
  41c5f0:	movk	x0, #0x7e00, lsl #48
  41c5f4:	tst	x1, x0
  41c5f8:	b.ne	41ae58 <ferror@plt+0x18088>  // b.any
  41c5fc:	b	41ac18 <ferror@plt+0x17e48>
  41c600:	cmp	w1, #0x231
  41c604:	b.hi	41c644 <ferror@plt+0x19874>  // b.pmore
  41c608:	cmp	w1, #0x1f9
  41c60c:	b.hi	41c53c <ferror@plt+0x1976c>  // b.pmore
  41c610:	cmp	w1, #0x1e1
  41c614:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41c618:	cmp	w1, #0x1ae
  41c61c:	b.hi	41c564 <ferror@plt+0x19794>  // b.pmore
  41c620:	cmp	w1, #0x171
  41c624:	b.hi	41c634 <ferror@plt+0x19864>  // b.pmore
  41c628:	cmp	w1, #0x167
  41c62c:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41c630:	b	41ae58 <ferror@plt+0x18088>
  41c634:	sub	w1, w1, #0x1a0
  41c638:	cmp	w1, #0x1
  41c63c:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41c640:	b	41ae58 <ferror@plt+0x18088>
  41c644:	mov	w0, #0x1e53                	// #7763
  41c648:	cmp	w1, w0
  41c64c:	b.hi	41c68c <ferror@plt+0x198bc>  // b.pmore
  41c650:	mov	w0, #0x1e4b                	// #7755
  41c654:	cmp	w1, w0
  41c658:	b.hi	41ae58 <ferror@plt+0x18088>  // b.pmore
  41c65c:	mov	w2, #0xffffe200            	// #-7680
  41c660:	add	w1, w1, w2
  41c664:	cmp	w1, #0x2f
  41c668:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41c66c:	mov	x0, #0x1                   	// #1
  41c670:	lsl	x1, x0, x1
  41c674:	mov	x0, #0x3                   	// #3
  41c678:	movk	x0, #0xff0, lsl #16
  41c67c:	movk	x0, #0xf000, lsl #32
  41c680:	tst	x1, x0
  41c684:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41c688:	b	41ae58 <ferror@plt+0x18088>
  41c68c:	mov	w0, #0x1e7b                	// #7803
  41c690:	cmp	w1, w0
  41c694:	b.hi	41c6a8 <ferror@plt+0x198d8>  // b.pmore
  41c698:	mov	w0, #0x1e71                	// #7793
  41c69c:	cmp	w1, w0
  41c6a0:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41c6a4:	b	41ae58 <ferror@plt+0x18088>
  41c6a8:	mov	w0, #0xffffe160            	// #-7840
  41c6ac:	add	w1, w1, w0
  41c6b0:	cmp	w1, #0x51
  41c6b4:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41c6b8:	b	41ae58 <ferror@plt+0x18088>
  41c6bc:	cmp	w1, #0x148
  41c6c0:	b.hi	41c7ec <ferror@plt+0x19a1c>  // b.pmore
  41c6c4:	cmp	w1, #0x138
  41c6c8:	b.hi	41c754 <ferror@plt+0x19984>  // b.pmore
  41c6cc:	cmp	w1, #0xdc
  41c6d0:	b.hi	41c7bc <ferror@plt+0x199ec>  // b.pmore
  41c6d4:	cmp	w1, #0xc7
  41c6d8:	b.hi	41c778 <ferror@plt+0x199a8>  // b.pmore
  41c6dc:	cmp	w1, #0x55
  41c6e0:	b.hi	41c798 <ferror@plt+0x199c8>  // b.pmore
  41c6e4:	cmp	w1, #0x43
  41c6e8:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41c6ec:	sub	w1, w1, #0x44
  41c6f0:	cmp	w1, #0x11
  41c6f4:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41c6f8:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41c6fc:	add	x0, x0, #0x684
  41c700:	ldrh	w0, [x0, w1, uxtw #1]
  41c704:	adr	x1, 41c710 <ferror@plt+0x19940>
  41c708:	add	x0, x1, w0, sxth #2
  41c70c:	br	x0
  41c710:	mov	w18, #0xffffe1f6            	// #-7690
  41c714:	add	w1, w1, w18
  41c718:	mov	x0, #0x1                   	// #1
  41c71c:	lsl	x1, x0, x1
  41c720:	mov	x0, #0x3c03                	// #15363
  41c724:	movk	x0, #0xc00, lsl #48
  41c728:	tst	x1, x0
  41c72c:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41c730:	b	41ae58 <ferror@plt+0x18088>
  41c734:	sub	w1, w1, #0x1f8
  41c738:	mov	x0, #0x1                   	// #1
  41c73c:	lsl	x1, x0, x1
  41c740:	mov	x0, #0xf003                	// #61443
  41c744:	movk	x0, #0xf000, lsl #16
  41c748:	tst	x1, x0
  41c74c:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41c750:	b	41ae58 <ferror@plt+0x18088>
  41c754:	sub	w1, w1, #0x139
  41c758:	cmp	w1, #0xf
  41c75c:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41c760:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41c764:	add	x0, x0, #0x6a8
  41c768:	ldrh	w0, [x0, w1, uxtw #1]
  41c76c:	adr	x1, 41c778 <ferror@plt+0x199a8>
  41c770:	add	x0, x1, w0, sxth #2
  41c774:	br	x0
  41c778:	sub	w1, w1, #0xc8
  41c77c:	mov	x0, #0x1                   	// #1
  41c780:	lsl	x1, x0, x1
  41c784:	mov	x0, #0x20f                 	// #527
  41c788:	movk	x0, #0x1e, lsl #16
  41c78c:	tst	x1, x0
  41c790:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41c794:	b	41ae58 <ferror@plt+0x18088>
  41c798:	sub	w1, w1, #0x64
  41c79c:	cmp	w1, #0x11
  41c7a0:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41c7a4:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41c7a8:	add	x0, x0, #0x6c8
  41c7ac:	ldrh	w0, [x0, w1, uxtw #1]
  41c7b0:	adr	x1, 41c7bc <ferror@plt+0x199ec>
  41c7b4:	add	x0, x1, w0, sxth #2
  41c7b8:	br	x0
  41c7bc:	sub	w1, w1, #0xe8
  41c7c0:	cmp	w1, #0x33
  41c7c4:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41c7c8:	mov	x0, #0x1                   	// #1
  41c7cc:	lsl	x1, x0, x1
  41c7d0:	mov	x0, #0x20f                 	// #527
  41c7d4:	movk	x0, #0x1e, lsl #16
  41c7d8:	movk	x0, #0xfcc0, lsl #32
  41c7dc:	movk	x0, #0xc, lsl #48
  41c7e0:	tst	x1, x0
  41c7e4:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41c7e8:	b	41ae58 <ferror@plt+0x18088>
  41c7ec:	mov	w0, #0x1e45                	// #7749
  41c7f0:	cmp	w1, w0
  41c7f4:	b.hi	41c844 <ferror@plt+0x19a74>  // b.pmore
  41c7f8:	mov	w0, #0x1e09                	// #7689
  41c7fc:	cmp	w1, w0
  41c800:	b.hi	41c710 <ferror@plt+0x19940>  // b.pmore
  41c804:	cmp	w1, #0x217
  41c808:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41c80c:	cmp	w1, #0x1f7
  41c810:	b.hi	41c734 <ferror@plt+0x19964>  // b.pmore
  41c814:	cmp	w1, #0x171
  41c818:	b.hi	41c834 <ferror@plt+0x19a64>  // b.pmore
  41c81c:	cmp	w1, #0x167
  41c820:	b.hi	41ae58 <ferror@plt+0x18088>  // b.pmore
  41c824:	sub	w1, w1, #0x164
  41c828:	cmp	w1, #0x1
  41c82c:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41c830:	b	41ae58 <ferror@plt+0x18088>
  41c834:	sub	w1, w1, #0x1d3
  41c838:	cmp	w1, #0x9
  41c83c:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41c840:	b	41ae58 <ferror@plt+0x18088>
  41c844:	mov	w0, #0x1e97                	// #7831
  41c848:	cmp	w1, w0
  41c84c:	b.hi	41c884 <ferror@plt+0x19ab4>  // b.pmore
  41c850:	mov	w0, #0x1e69                	// #7785
  41c854:	cmp	w1, w0
  41c858:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41c85c:	mov	w30, #0xffffe196            	// #-7786
  41c860:	add	w1, w1, w30
  41c864:	mov	x0, #0x1                   	// #1
  41c868:	lsl	x1, x0, x1
  41c86c:	mov	x0, #0xc003                	// #49155
  41c870:	movk	x0, #0x3, lsl #16
  41c874:	movk	x0, #0x2000, lsl #32
  41c878:	tst	x1, x0
  41c87c:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41c880:	b	41ae58 <ferror@plt+0x18088>
  41c884:	mov	w0, #0x1ec5                	// #7877
  41c888:	cmp	w1, w0
  41c88c:	b.hi	41c8a0 <ferror@plt+0x19ad0>  // b.pmore
  41c890:	mov	w0, #0x1eb9                	// #7865
  41c894:	cmp	w1, w0
  41c898:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41c89c:	b	41ae58 <ferror@plt+0x18088>
  41c8a0:	mov	w17, #0xffffe11a            	// #-7910
  41c8a4:	add	w1, w1, w17
  41c8a8:	cmp	w1, #0x1
  41c8ac:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41c8b0:	b	41ae58 <ferror@plt+0x18088>
  41c8b4:	cmp	w1, #0x21f
  41c8b8:	b.hi	41c8ec <ferror@plt+0x19b1c>  // b.pmore
  41c8bc:	cmp	w1, #0x21d
  41c8c0:	b.hi	41ae58 <ferror@plt+0x18088>  // b.pmore
  41c8c4:	cmp	w1, #0x68
  41c8c8:	b.eq	41ae58 <ferror@plt+0x18088>  // b.none
  41c8cc:	b.hi	41c8dc <ferror@plt+0x19b0c>  // b.pmore
  41c8d0:	cmp	w1, #0x48
  41c8d4:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41c8d8:	b	41ae58 <ferror@plt+0x18088>
  41c8dc:	sub	w1, w1, #0x124
  41c8e0:	cmp	w1, #0x1
  41c8e4:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41c8e8:	b	41ae58 <ferror@plt+0x18088>
  41c8ec:	mov	w0, #0x1e23                	// #7715
  41c8f0:	cmp	w1, w0
  41c8f4:	b.hi	41c908 <ferror@plt+0x19b38>  // b.pmore
  41c8f8:	mov	w0, #0x1e21                	// #7713
  41c8fc:	cmp	w1, w0
  41c900:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41c904:	b	41ae58 <ferror@plt+0x18088>
  41c908:	mov	w16, #0xffffe1da            	// #-7718
  41c90c:	add	w1, w1, w16
  41c910:	cmp	w1, #0x1
  41c914:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41c918:	b	41ae58 <ferror@plt+0x18088>
  41c91c:	cmp	w1, #0x130
  41c920:	b.hi	41c9d8 <ferror@plt+0x19c08>  // b.pmore
  41c924:	cmp	w1, #0xf8
  41c928:	b.hi	41c988 <ferror@plt+0x19bb8>  // b.pmore
  41c92c:	cmp	w1, #0x75
  41c930:	b.hi	41c9b0 <ferror@plt+0x19be0>  // b.pmore
  41c934:	cmp	w1, #0x44
  41c938:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41c93c:	sub	w1, w1, #0x45
  41c940:	mov	x0, #0x1                   	// #1
  41c944:	lsl	x1, x0, x1
  41c948:	mov	x0, #0x11                  	// #17
  41c94c:	movk	x0, #0x1, lsl #16
  41c950:	movk	x0, #0x11, lsl #32
  41c954:	movk	x0, #0x1, lsl #48
  41c958:	tst	x1, x0
  41c95c:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41c960:	b	41ae58 <ferror@plt+0x18088>
  41c964:	mov	w15, #0xffffe146            	// #-7866
  41c968:	add	w1, w1, w15
  41c96c:	mov	x0, #0x1                   	// #1
  41c970:	lsl	x1, x0, x1
  41c974:	mov	x0, #0xcfff                	// #53247
  41c978:	movk	x0, #0x3000, lsl #32
  41c97c:	tst	x1, x0
  41c980:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41c984:	b	41ae58 <ferror@plt+0x18088>
  41c988:	sub	w1, w1, #0xf9
  41c98c:	mov	x0, #0x1                   	// #1
  41c990:	lsl	x1, x0, x1
  41c994:	mov	x0, #0xf                   	// #15
  41c998:	movk	x0, #0x7e00, lsl #16
  41c99c:	movk	x0, #0x8006, lsl #32
  41c9a0:	movk	x0, #0x9f, lsl #48
  41c9a4:	tst	x1, x0
  41c9a8:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41c9ac:	b	41ae58 <ferror@plt+0x18088>
  41c9b0:	sub	w1, w1, #0xc8
  41c9b4:	cmp	w1, #0x27
  41c9b8:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41c9bc:	mov	x0, #0x1                   	// #1
  41c9c0:	lsl	x1, x0, x1
  41c9c4:	mov	x0, #0xff000000ff          	// #1095216660735
  41c9c8:	movk	x0, #0x1e, lsl #16
  41c9cc:	tst	x1, x0
  41c9d0:	b.ne	41ae58 <ferror@plt+0x18088>  // b.any
  41c9d4:	b	41ac18 <ferror@plt+0x17e48>
  41c9d8:	mov	w0, #0x1e17                	// #7703
  41c9dc:	cmp	w1, w0
  41c9e0:	b.hi	41ca48 <ferror@plt+0x19c78>  // b.pmore
  41c9e4:	mov	w0, #0x1e13                	// #7699
  41c9e8:	cmp	w1, w0
  41c9ec:	b.hi	41ae58 <ferror@plt+0x18088>  // b.pmore
  41c9f0:	cmp	w1, #0x1dc
  41c9f4:	b.hi	41ca24 <ferror@plt+0x19c54>  // b.pmore
  41c9f8:	cmp	w1, #0x1d2
  41c9fc:	b.hi	41ae58 <ferror@plt+0x18088>  // b.pmore
  41ca00:	cmp	w1, #0x171
  41ca04:	b.hi	41ca14 <ferror@plt+0x19c44>  // b.pmore
  41ca08:	cmp	w1, #0x167
  41ca0c:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41ca10:	b	41ae58 <ferror@plt+0x18088>
  41ca14:	sub	w1, w1, #0x1cf
  41ca18:	cmp	w1, #0x1
  41ca1c:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41ca20:	b	41ae58 <ferror@plt+0x18088>
  41ca24:	cmp	w1, #0x20b
  41ca28:	b.hi	41ca38 <ferror@plt+0x19c68>  // b.pmore
  41ca2c:	cmp	w1, #0x203
  41ca30:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41ca34:	b	41ae58 <ferror@plt+0x18088>
  41ca38:	sub	w1, w1, #0x214
  41ca3c:	cmp	w1, #0x3
  41ca40:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41ca44:	b	41ae58 <ferror@plt+0x18088>
  41ca48:	mov	w0, #0x1ee7                	// #7911
  41ca4c:	cmp	w1, w0
  41ca50:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41ca54:	mov	w0, #0x1eb9                	// #7865
  41ca58:	cmp	w1, w0
  41ca5c:	b.hi	41c964 <ferror@plt+0x19b94>  // b.pmore
  41ca60:	mov	w0, #0x1e2f                	// #7727
  41ca64:	cmp	w1, w0
  41ca68:	b.hi	41ca7c <ferror@plt+0x19cac>  // b.pmore
  41ca6c:	mov	w0, #0x1e2d                	// #7725
  41ca70:	cmp	w1, w0
  41ca74:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41ca78:	b	41ae58 <ferror@plt+0x18088>
  41ca7c:	mov	w14, #0xffffe188            	// #-7800
  41ca80:	add	w1, w1, w14
  41ca84:	cmp	w1, #0x3
  41ca88:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41ca8c:	b	41ae58 <ferror@plt+0x18088>
  41ca90:	cmp	w1, #0x159
  41ca94:	b.hi	41cbbc <ferror@plt+0x19dec>  // b.pmore
  41ca98:	cmp	w1, #0x138
  41ca9c:	b.hi	41cb34 <ferror@plt+0x19d64>  // b.pmore
  41caa0:	cmp	w1, #0x7a
  41caa4:	b.hi	41cb88 <ferror@plt+0x19db8>  // b.pmore
  41caa8:	cmp	w1, #0x61
  41caac:	b.hi	41cb58 <ferror@plt+0x19d88>  // b.pmore
  41cab0:	cmp	w1, #0x54
  41cab4:	b.hi	41cb7c <ferror@plt+0x19dac>  // b.pmore
  41cab8:	cmp	w1, #0x41
  41cabc:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41cac0:	sub	w1, w1, #0x42
  41cac4:	cmp	w1, #0x12
  41cac8:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41cacc:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41cad0:	add	x0, x0, #0x6ec
  41cad4:	ldrh	w0, [x0, w1, uxtw #1]
  41cad8:	adr	x1, 41cae4 <ferror@plt+0x19d14>
  41cadc:	add	x0, x1, w0, sxth #2
  41cae0:	br	x0
  41cae4:	mov	w13, #0xffffe1dd            	// #-7715
  41cae8:	add	w1, w1, w13
  41caec:	mov	x0, #0x1                   	// #1
  41caf0:	lsl	x1, x0, x1
  41caf4:	mov	x0, #0x6011                	// #24593
  41caf8:	movk	x0, #0x6, lsl #32
  41cafc:	movk	x0, #0x60, lsl #48
  41cb00:	tst	x1, x0
  41cb04:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41cb08:	b	41ae58 <ferror@plt+0x18088>
  41cb0c:	sub	w1, w1, #0x1e8
  41cb10:	mov	x0, #0x1                   	// #1
  41cb14:	lsl	x1, x0, x1
  41cb18:	mov	x0, #0x3                   	// #3
  41cb1c:	movk	x0, #0x3, lsl #16
  41cb20:	movk	x0, #0xf00, lsl #32
  41cb24:	movk	x0, #0x80, lsl #48
  41cb28:	tst	x1, x0
  41cb2c:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41cb30:	b	41ae58 <ferror@plt+0x18088>
  41cb34:	sub	w1, w1, #0x139
  41cb38:	cmp	w1, #0x20
  41cb3c:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41cb40:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41cb44:	add	x0, x0, #0x714
  41cb48:	ldrh	w0, [x0, w1, uxtw #1]
  41cb4c:	adr	x1, 41cb58 <ferror@plt+0x19d88>
  41cb50:	add	x0, x1, w0, sxth #2
  41cb54:	br	x0
  41cb58:	sub	w1, w1, #0x62
  41cb5c:	cmp	w1, #0x18
  41cb60:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41cb64:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41cb68:	add	x0, x0, #0x758
  41cb6c:	ldrh	w0, [x0, w1, uxtw #1]
  41cb70:	adr	x1, 41cb7c <ferror@plt+0x19dac>
  41cb74:	add	x0, x1, w0, sxth #2
  41cb78:	br	x0
  41cb7c:	cmp	w1, #0x5a
  41cb80:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41cb84:	b	41ae58 <ferror@plt+0x18088>
  41cb88:	cmp	w1, #0xd1
  41cb8c:	b.eq	41ae58 <ferror@plt+0x18088>  // b.none
  41cb90:	sub	w1, w1, #0xf1
  41cb94:	cmp	w1, #0x34
  41cb98:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41cb9c:	mov	x0, #0x1                   	// #1
  41cba0:	lsl	x1, x0, x1
  41cba4:	mov	x0, #0x1                   	// #1
  41cba8:	movk	x0, #0x6000, lsl #16
  41cbac:	movk	x0, #0x10, lsl #48
  41cbb0:	tst	x1, x0
  41cbb4:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41cbb8:	b	41ae58 <ferror@plt+0x18088>
  41cbbc:	mov	w0, #0x1e59                	// #7769
  41cbc0:	cmp	w1, w0
  41cbc4:	b.hi	41cc38 <ferror@plt+0x19e68>  // b.pmore
  41cbc8:	mov	w0, #0x1e22                	// #7714
  41cbcc:	cmp	w1, w0
  41cbd0:	b.hi	41cae4 <ferror@plt+0x19d14>  // b.pmore
  41cbd4:	cmp	w1, #0x21f
  41cbd8:	b.hi	41cc08 <ferror@plt+0x19e38>  // b.pmore
  41cbdc:	cmp	w1, #0x1e7
  41cbe0:	b.hi	41cb0c <ferror@plt+0x19d3c>  // b.pmore
  41cbe4:	cmp	w1, #0x165
  41cbe8:	b.hi	41cbf8 <ferror@plt+0x19e28>  // b.pmore
  41cbec:	cmp	w1, #0x163
  41cbf0:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41cbf4:	b	41ae58 <ferror@plt+0x18088>
  41cbf8:	sub	w1, w1, #0x179
  41cbfc:	cmp	w1, #0x5
  41cc00:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41cc04:	b	41ae58 <ferror@plt+0x18088>
  41cc08:	mov	w0, #0x1e03                	// #7683
  41cc0c:	cmp	w1, w0
  41cc10:	b.hi	41cc24 <ferror@plt+0x19e54>  // b.pmore
  41cc14:	mov	w0, #0x1e01                	// #7681
  41cc18:	cmp	w1, w0
  41cc1c:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41cc20:	b	41ae58 <ferror@plt+0x18088>
  41cc24:	mov	w12, #0xffffe1f6            	// #-7690
  41cc28:	add	w1, w1, w12
  41cc2c:	cmp	w1, #0x1
  41cc30:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41cc34:	b	41ae58 <ferror@plt+0x18088>
  41cc38:	mov	w11, #0xffffe196            	// #-7786
  41cc3c:	add	w1, w1, w11
  41cc40:	cmp	w1, #0x2d
  41cc44:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41cc48:	mov	x0, #0x1                   	// #1
  41cc4c:	lsl	x1, x0, x1
  41cc50:	mov	x0, #0x3                   	// #3
  41cc54:	movk	x0, #0x20c0, lsl #32
  41cc58:	tst	x1, x0
  41cc5c:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41cc60:	b	41ae58 <ferror@plt+0x18088>
  41cc64:	mov	w0, #0x1f81                	// #8065
  41cc68:	cmp	w1, w0
  41cc6c:	b.hi	41cd08 <ferror@plt+0x19f38>  // b.pmore
  41cc70:	mov	w0, #0x1f4f                	// #8015
  41cc74:	cmp	w1, w0
  41cc78:	b.hi	41ccc4 <ferror@plt+0x19ef4>  // b.pmore
  41cc7c:	mov	w0, #0x1f39                	// #7993
  41cc80:	cmp	w1, w0
  41cc84:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41cc88:	mov	w0, #0x1eff                	// #7935
  41cc8c:	cmp	w1, w0
  41cc90:	b.hi	41ccec <ferror@plt+0x19f1c>  // b.pmore
  41cc94:	cmp	w1, #0xa8
  41cc98:	b.eq	41ae58 <ferror@plt+0x18088>  // b.none
  41cc9c:	sub	w1, w1, #0x3b1
  41cca0:	cmp	w1, #0x1a
  41cca4:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41cca8:	mov	x0, #0x1                   	// #1
  41ccac:	lsl	x1, x0, x1
  41ccb0:	mov	x0, #0x141                 	// #321
  41ccb4:	movk	x0, #0x710, lsl #16
  41ccb8:	tst	x1, x0
  41ccbc:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41ccc0:	b	41ae58 <ferror@plt+0x18088>
  41ccc4:	mov	w9, #0xffffe0b0            	// #-8016
  41ccc8:	add	w1, w1, w9
  41cccc:	mov	x0, #0x1                   	// #1
  41ccd0:	lsl	x1, x0, x1
  41ccd4:	mov	x0, #0x203                 	// #515
  41ccd8:	movk	x0, #0x303, lsl #16
  41ccdc:	movk	x0, #0x3, lsl #48
  41cce0:	tst	x1, x0
  41cce4:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41cce8:	b	41ae58 <ferror@plt+0x18088>
  41ccec:	mov	x0, #0x1                   	// #1
  41ccf0:	lsl	x1, x0, x1
  41ccf4:	mov	x0, #0x303030303030303     	// #217020518514230019
  41ccf8:	movk	x0, #0x0, lsl #16
  41ccfc:	tst	x1, x0
  41cd00:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41cd04:	b	41ae58 <ferror@plt+0x18088>
  41cd08:	mov	w0, #0x1fbf                	// #8127
  41cd0c:	cmp	w1, w0
  41cd10:	b.hi	41cd4c <ferror@plt+0x19f7c>  // b.pmore
  41cd14:	mov	w0, #0x1f87                	// #8071
  41cd18:	cmp	w1, w0
  41cd1c:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41cd20:	mov	w10, #0xffffe078            	// #-8072
  41cd24:	add	w1, w1, w10
  41cd28:	mov	x0, #0x1                   	// #1
  41cd2c:	lsl	x1, x0, x1
  41cd30:	mov	x0, #0x303                 	// #771
  41cd34:	movk	x0, #0x303, lsl #16
  41cd38:	movk	x0, #0x803, lsl #32
  41cd3c:	movk	x0, #0x80, lsl #48
  41cd40:	tst	x1, x0
  41cd44:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41cd48:	b	41ae58 <ferror@plt+0x18088>
  41cd4c:	mov	w8, #0xffffe03d            	// #-8131
  41cd50:	add	w1, w1, w8
  41cd54:	cmp	w1, #0x3b
  41cd58:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41cd5c:	mov	x0, #0x1                   	// #1
  41cd60:	lsl	x1, x0, x1
  41cd64:	mov	x0, #0x1                   	// #1
  41cd68:	movk	x0, #0x801, lsl #48
  41cd6c:	tst	x1, x0
  41cd70:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41cd74:	b	41ae58 <ferror@plt+0x18088>
  41cd78:	cmp	w1, #0x3ce
  41cd7c:	b.eq	41ae58 <ferror@plt+0x18088>  // b.none
  41cd80:	b.hi	41cdd8 <ferror@plt+0x1a008>  // b.pmore
  41cd84:	cmp	w1, #0x3b7
  41cd88:	b.hi	41cdcc <ferror@plt+0x19ffc>  // b.pmore
  41cd8c:	cmp	w1, #0x3a8
  41cd90:	b.hi	41cda8 <ferror@plt+0x19fd8>  // b.pmore
  41cd94:	cmp	w1, #0x391
  41cd98:	b.eq	41ae58 <ferror@plt+0x18088>  // b.none
  41cd9c:	cmp	w1, #0x397
  41cda0:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41cda4:	b	41ae58 <ferror@plt+0x18088>
  41cda8:	sub	w1, w1, #0x3a9
  41cdac:	cmp	w1, #0xe
  41cdb0:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41cdb4:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41cdb8:	add	x0, x0, #0x78c
  41cdbc:	ldrh	w0, [x0, w1, uxtw #1]
  41cdc0:	adr	x1, 41cdcc <ferror@plt+0x19ffc>
  41cdc4:	add	x0, x1, w0, sxth #2
  41cdc8:	br	x0
  41cdcc:	cmp	w1, #0x3c9
  41cdd0:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41cdd4:	b	41ae58 <ferror@plt+0x18088>
  41cdd8:	mov	w0, #0x1f7c                	// #8060
  41cddc:	cmp	w1, w0
  41cde0:	b.eq	41ae58 <ferror@plt+0x18088>  // b.none
  41cde4:	b.hi	41ce40 <ferror@plt+0x1a070>  // b.pmore
  41cde8:	mov	w0, #0x1f70                	// #8048
  41cdec:	cmp	w1, w0
  41cdf0:	b.hi	41ce30 <ferror@plt+0x1a060>  // b.pmore
  41cdf4:	mov	w0, #0x1f5f                	// #8031
  41cdf8:	cmp	w1, w0
  41cdfc:	b.hi	41ae58 <ferror@plt+0x18088>  // b.pmore
  41ce00:	mov	w0, #0x1f0f                	// #7951
  41ce04:	cmp	w1, w0
  41ce08:	b.hi	41ce1c <ferror@plt+0x1a04c>  // b.pmore
  41ce0c:	mov	w0, #0x1eff                	// #7935
  41ce10:	cmp	w1, w0
  41ce14:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41ce18:	b	41ae58 <ferror@plt+0x18088>
  41ce1c:	mov	w7, #0xffffe0e0            	// #-7968
  41ce20:	add	w1, w1, w7
  41ce24:	cmp	w1, #0xf
  41ce28:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41ce2c:	b	41ae58 <ferror@plt+0x18088>
  41ce30:	mov	w0, #0x1f74                	// #8052
  41ce34:	cmp	w1, w0
  41ce38:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41ce3c:	b	41ae58 <ferror@plt+0x18088>
  41ce40:	mov	w0, #0x1fc6                	// #8134
  41ce44:	cmp	w1, w0
  41ce48:	b.eq	41ae58 <ferror@plt+0x18088>  // b.none
  41ce4c:	and	w1, w1, #0xffffffbf
  41ce50:	mov	w0, #0x1fb6                	// #8118
  41ce54:	cmp	w1, w0
  41ce58:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41ce5c:	b	41ae58 <ferror@plt+0x18088>
  41ce60:	cmp	w1, #0x627
  41ce64:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41ce68:	b	41ae58 <ferror@plt+0x18088>
  41ce6c:	cmp	w1, #0x64a
  41ce70:	b.hi	41ce9c <ferror@plt+0x1a0cc>  // b.pmore
  41ce74:	cmp	w1, #0x626
  41ce78:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41ce7c:	sub	w1, w1, #0x627
  41ce80:	mov	x0, #0x1                   	// #1
  41ce84:	lsl	x1, x0, x1
  41ce88:	mov	x0, #0x1                   	// #1
  41ce8c:	movk	x0, #0xa, lsl #32
  41ce90:	tst	x1, x0
  41ce94:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41ce98:	b	41ae58 <ferror@plt+0x18088>
  41ce9c:	sub	w1, w1, #0x6c1
  41cea0:	cmp	w1, #0x14
  41cea4:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41cea8:	mov	x0, #0x1                   	// #1
  41ceac:	lsl	x1, x0, x1
  41ceb0:	add	x0, x0, #0x120, lsl #12
  41ceb4:	tst	x1, x0
  41ceb8:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41cebc:	b	41ae58 <ferror@plt+0x18088>
  41cec0:	cmp	w1, #0x623
  41cec4:	b.hi	41ced4 <ferror@plt+0x1a104>  // b.pmore
  41cec8:	cmp	w1, #0x621
  41cecc:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41ced0:	b	41ae58 <ferror@plt+0x18088>
  41ced4:	cmp	w1, #0x627
  41ced8:	b.eq	41ae58 <ferror@plt+0x18088>  // b.none
  41cedc:	b	41ac18 <ferror@plt+0x17e48>
  41cee0:	cmp	w1, #0x917
  41cee4:	b.hi	41cef4 <ferror@plt+0x1a124>  // b.pmore
  41cee8:	cmp	w1, #0x914
  41ceec:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41cef0:	b	41ae58 <ferror@plt+0x18088>
  41cef4:	sub	w1, w1, #0x91c
  41cef8:	cmp	w1, #0x17
  41cefc:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41cf00:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41cf04:	add	x0, x0, #0x7ac
  41cf08:	ldrh	w0, [x0, w1, uxtw #1]
  41cf0c:	adr	x1, 41cf18 <ferror@plt+0x1a148>
  41cf10:	add	x0, x1, w0, sxth #2
  41cf14:	br	x0
  41cf18:	cmp	w1, #0x9c7
  41cf1c:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41cf20:	b	41ae58 <ferror@plt+0x18088>
  41cf24:	cmp	w1, #0xb47
  41cf28:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41cf2c:	b	41ae58 <ferror@plt+0x18088>
  41cf30:	cmp	w1, #0xb47
  41cf34:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41cf38:	b	41ae58 <ferror@plt+0x18088>
  41cf3c:	sub	w1, w1, #0xbc6
  41cf40:	cmp	w1, #0x1
  41cf44:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41cf48:	b	41ae58 <ferror@plt+0x18088>
  41cf4c:	cmp	w1, #0xb92
  41cf50:	b.eq	41ae58 <ferror@plt+0x18088>  // b.none
  41cf54:	cmp	w1, #0xbc6
  41cf58:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41cf5c:	b	41ae58 <ferror@plt+0x18088>
  41cf60:	cmp	w1, #0xc46
  41cf64:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41cf68:	b	41ae58 <ferror@plt+0x18088>
  41cf6c:	sub	w1, w1, #0xcbf
  41cf70:	cmp	w1, #0xb
  41cf74:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41cf78:	mov	x0, #0x1                   	// #1
  41cf7c:	lsl	x1, x0, x1
  41cf80:	mov	x0, #0x881                 	// #2177
  41cf84:	tst	x1, x0
  41cf88:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41cf8c:	b	41ae58 <ferror@plt+0x18088>
  41cf90:	sub	w1, w1, #0xd46
  41cf94:	cmp	w1, #0x1
  41cf98:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41cf9c:	b	41ae58 <ferror@plt+0x18088>
  41cfa0:	cmp	w1, #0xd46
  41cfa4:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41cfa8:	b	41ae58 <ferror@plt+0x18088>
  41cfac:	cmp	w1, #0xdd9
  41cfb0:	b.eq	41ae58 <ferror@plt+0x18088>  // b.none
  41cfb4:	cmp	w1, #0xddc
  41cfb8:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41cfbc:	b	41ae58 <ferror@plt+0x18088>
  41cfc0:	sub	w1, w1, #0xdd9
  41cfc4:	cmp	w1, #0x1
  41cfc8:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41cfcc:	b	41ae58 <ferror@plt+0x18088>
  41cfd0:	mov	w0, #0x1025                	// #4133
  41cfd4:	cmp	w1, w0
  41cfd8:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41cfdc:	b	41ae58 <ferror@plt+0x18088>
  41cfe0:	mov	w0, #0x1b11                	// #6929
  41cfe4:	cmp	w1, w0
  41cfe8:	b.hi	41d020 <ferror@plt+0x1a250>  // b.pmore
  41cfec:	mov	w0, #0x1b04                	// #6916
  41cff0:	cmp	w1, w0
  41cff4:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41cff8:	mov	w6, #0xffffe4fb            	// #-6917
  41cffc:	add	w1, w1, w6
  41d000:	cmp	w1, #0xc
  41d004:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41d008:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41d00c:	add	x0, x0, #0x7dc
  41d010:	ldrh	w0, [x0, w1, uxtw #1]
  41d014:	adr	x1, 41d020 <ferror@plt+0x1a250>
  41d018:	add	x0, x1, w0, sxth #2
  41d01c:	br	x0
  41d020:	mov	w5, #0xffffe4c6            	// #-6970
  41d024:	add	w1, w1, w5
  41d028:	cmp	w1, #0x8
  41d02c:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41d030:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41d034:	add	x0, x0, #0x7f8
  41d038:	ldrh	w0, [x0, w1, uxtw #1]
  41d03c:	adr	x1, 41d048 <ferror@plt+0x1a278>
  41d040:	add	x0, x1, w0, sxth #2
  41d044:	br	x0
  41d048:	mov	w3, #0xffffcf63            	// #-12445
  41d04c:	add	w1, w1, w3
  41d050:	cmp	w1, #0x3e
  41d054:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41d058:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41d05c:	add	x0, x0, #0x80c
  41d060:	ldrh	w0, [x0, w1, uxtw #1]
  41d064:	adr	x1, 41d070 <ferror@plt+0x1a2a0>
  41d068:	add	x0, x1, w0, sxth #2
  41d06c:	br	x0
  41d070:	mov	w0, #0x30f2                	// #12530
  41d074:	cmp	w1, w0
  41d078:	b.hi	41d08c <ferror@plt+0x1a2bc>  // b.pmore
  41d07c:	mov	w0, #0x30ee                	// #12526
  41d080:	cmp	w1, w0
  41d084:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41d088:	b	41ae58 <ferror@plt+0x18088>
  41d08c:	mov	w0, #0x30fd                	// #12541
  41d090:	cmp	w1, w0
  41d094:	b.ne	41ac18 <ferror@plt+0x17e48>  // b.any
  41d098:	b	41ae58 <ferror@plt+0x18088>
  41d09c:	mov	w0, #0x307b                	// #12411
  41d0a0:	cmp	w1, w0
  41d0a4:	b.hi	41d0dc <ferror@plt+0x1a30c>  // b.pmore
  41d0a8:	mov	w0, #0x306e                	// #12398
  41d0ac:	cmp	w1, w0
  41d0b0:	b.ls	41ac18 <ferror@plt+0x17e48>  // b.plast
  41d0b4:	mov	w2, #0xffffcf91            	// #-12399
  41d0b8:	add	w1, w1, w2
  41d0bc:	cmp	w1, #0xc
  41d0c0:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41d0c4:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41d0c8:	add	x0, x0, #0x88c
  41d0cc:	ldrh	w0, [x0, w1, uxtw #1]
  41d0d0:	adr	x1, 41d0dc <ferror@plt+0x1a30c>
  41d0d4:	add	x0, x1, w0, sxth #2
  41d0d8:	br	x0
  41d0dc:	mov	w0, #0xffffcf31            	// #-12495
  41d0e0:	add	w1, w1, w0
  41d0e4:	cmp	w1, #0xc
  41d0e8:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41d0ec:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41d0f0:	add	x0, x0, #0x8a8
  41d0f4:	ldrh	w0, [x0, w1, uxtw #1]
  41d0f8:	adr	x1, 41d104 <ferror@plt+0x1a334>
  41d0fc:	add	x0, x1, w0, sxth #2
  41d100:	br	x0
  41d104:	sub	w1, w1, #0x11, lsl #12
  41d108:	sub	w1, w1, #0x99
  41d10c:	cmp	w1, #0xc
  41d110:	b.hi	41ac18 <ferror@plt+0x17e48>  // b.pmore
  41d114:	mov	x0, #0x1                   	// #1
  41d118:	lsl	x1, x0, x1
  41d11c:	mov	x0, #0x1005                	// #4101
  41d120:	tst	x1, x0
  41d124:	b.eq	41ac18 <ferror@plt+0x17e48>  // b.none
  41d128:	b	41ae58 <ferror@plt+0x18088>
  41d12c:	tbnz	w25, #7, 41ac18 <ferror@plt+0x17e48>
  41d130:	tbz	w25, #6, 41d148 <ferror@plt+0x1a378>
  41d134:	ldr	w0, [x21, #8]
  41d138:	cmp	w0, #0x0
  41d13c:	csinc	w0, w0, wzr, gt
  41d140:	str	w0, [x21, #8]
  41d144:	b	41ac18 <ferror@plt+0x17e48>
  41d148:	tbnz	w25, #5, 41abcc <ferror@plt+0x17dfc>
  41d14c:	b	41ae58 <ferror@plt+0x18088>
  41d150:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41d154:	mov	x4, x22
  41d158:	sub	w3, w28, w22
  41d15c:	add	x2, x2, #0xb60
  41d160:	mov	x0, x20
  41d164:	mov	w1, #0x3                   	// #3
  41d168:	bl	421610 <ferror@plt+0x1e840>
  41d16c:	b	41a9ec <ferror@plt+0x17c1c>
  41d170:	stp	x29, x30, [sp, #-336]!
  41d174:	mov	x29, sp
  41d178:	add	x8, sp, #0x118
  41d17c:	stp	x19, x20, [sp, #16]
  41d180:	stp	x21, x22, [sp, #32]
  41d184:	mov	x21, x0
  41d188:	stp	x23, x24, [sp, #48]
  41d18c:	mov	x24, x1
  41d190:	mov	w1, w4
  41d194:	stp	x25, x26, [sp, #64]
  41d198:	mov	x26, x3
  41d19c:	stp	x27, x28, [sp, #80]
  41d1a0:	str	x5, [sp, #160]
  41d1a4:	str	x2, [sp, #176]
  41d1a8:	bl	419f68 <ferror@plt+0x17198>
  41d1ac:	ldr	x0, [sp, #280]
  41d1b0:	str	x0, [sp, #104]
  41d1b4:	ldr	x0, [sp, #288]
  41d1b8:	cmp	x6, #0x0
  41d1bc:	str	x0, [sp, #136]
  41d1c0:	ldr	w0, [sp, #296]
  41d1c4:	str	w0, [sp, #168]
  41d1c8:	cset	w0, ne  // ne = any
  41d1cc:	str	w0, [sp, #124]
  41d1d0:	ldr	x0, [sp, #160]
  41d1d4:	ldr	w1, [sp, #124]
  41d1d8:	cmp	x0, #0x0
  41d1dc:	cset	w0, ne  // ne = any
  41d1e0:	cmp	w0, w1
  41d1e4:	b.eq	41d200 <ferror@plt+0x1a430>  // b.none
  41d1e8:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41d1ec:	add	x2, x2, #0xbdb
  41d1f0:	mov	w1, #0x5fc                 	// #1532
  41d1f4:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41d1f8:	add	x0, x0, #0xabd
  41d1fc:	bl	402de0 <ferror@plt+0x10>
  41d200:	mov	x23, x6
  41d204:	cbz	x26, 41d228 <ferror@plt+0x1a458>
  41d208:	ldr	w0, [x24]
  41d20c:	mov	w1, #0x100                 	// #256
  41d210:	cmp	w0, #0x100
  41d214:	csel	w0, w0, w1, cs  // cs = hs, nlast
  41d218:	str	x0, [sp, #264]
  41d21c:	bl	44526c <_obstack_memory_used@@Base+0x868>
  41d220:	str	x0, [sp, #256]
  41d224:	str	xzr, [sp, #272]
  41d228:	cmp	x26, #0x0
  41d22c:	add	x0, sp, #0x100
  41d230:	csel	x27, x0, xzr, ne  // ne = any
  41d234:	ldrsw	x0, [sp, #168]
  41d238:	mov	x1, #0x20                  	// #32
  41d23c:	add	x24, x24, #0x8
  41d240:	cmp	x0, #0x20
  41d244:	mov	x20, #0x0                   	// #0
  41d248:	csel	x0, x0, x1, ls  // ls = plast
  41d24c:	mov	x1, #0x1                   	// #1
  41d250:	str	xzr, [sp, #128]
  41d254:	lsl	x0, x1, x0
  41d258:	sub	x0, x0, #0x1
  41d25c:	str	x0, [sp, #152]
  41d260:	ldr	w0, [sp, #152]
  41d264:	str	w0, [sp, #172]
  41d268:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  41d26c:	add	x0, x0, #0x790
  41d270:	str	x0, [sp, #192]
  41d274:	ldr	x0, [sp, #128]
  41d278:	ldr	x1, [sp, #176]
  41d27c:	cmp	x0, x1
  41d280:	b.eq	41d9c0 <ferror@plt+0x1abf0>  // b.none
  41d284:	ldr	x0, [sp, #160]
  41d288:	cbz	x0, 41d298 <ferror@plt+0x1a4c8>
  41d28c:	ldr	x0, [sp, #128]
  41d290:	ldr	x1, [sp, #160]
  41d294:	add	x20, x1, x0, lsl #4
  41d298:	ldr	x19, [x24]
  41d29c:	ldrb	w0, [x19]
  41d2a0:	cmp	w0, #0x75
  41d2a4:	b.ne	41d31c <ferror@plt+0x1a54c>  // b.any
  41d2a8:	cbz	x20, 41d2b4 <ferror@plt+0x1a4e4>
  41d2ac:	mov	x0, x20
  41d2b0:	bl	41a7bc <ferror@plt+0x179ec>
  41d2b4:	ldrb	w0, [x19, #1]
  41d2b8:	cmp	w0, #0x38
  41d2bc:	b.eq	41d2c8 <ferror@plt+0x1a4f8>  // b.none
  41d2c0:	add	x19, x19, #0x1
  41d2c4:	b	41d2d8 <ferror@plt+0x1a508>
  41d2c8:	add	x19, x19, #0x2
  41d2cc:	cbz	x20, 41d2d8 <ferror@plt+0x1a508>
  41d2d0:	mov	x0, x20
  41d2d4:	bl	41a7bc <ferror@plt+0x179ec>
  41d2d8:	ldrb	w0, [x19]
  41d2dc:	cmp	w0, #0x52
  41d2e0:	b.ne	41d3f0 <ferror@plt+0x1a620>  // b.any
  41d2e4:	add	x19, x19, #0x2
  41d2e8:	cbz	x20, 41d2fc <ferror@plt+0x1a52c>
  41d2ec:	mov	x0, x20
  41d2f0:	bl	41a7bc <ferror@plt+0x179ec>
  41d2f4:	mov	x0, x20
  41d2f8:	bl	41a7bc <ferror@plt+0x179ec>
  41d2fc:	mov	x22, x19
  41d300:	ldrb	w0, [x22], #1
  41d304:	cmp	w0, #0x28
  41d308:	b.eq	41d330 <ferror@plt+0x1a560>  // b.none
  41d30c:	cbz	x20, 41d300 <ferror@plt+0x1a530>
  41d310:	mov	x0, x20
  41d314:	bl	41a7bc <ferror@plt+0x179ec>
  41d318:	b	41d300 <ferror@plt+0x1a530>
  41d31c:	cmp	w0, #0x4c
  41d320:	b.eq	41d2c0 <ferror@plt+0x1a4f0>  // b.none
  41d324:	cmp	w0, #0x55
  41d328:	b.ne	41d2d8 <ferror@plt+0x1a508>  // b.any
  41d32c:	b	41d2c0 <ferror@plt+0x1a4f0>
  41d330:	cbz	x20, 41d33c <ferror@plt+0x1a56c>
  41d334:	mov	x0, x20
  41d338:	bl	41a7bc <ferror@plt+0x179ec>
  41d33c:	ldr	x4, [x24]
  41d340:	sub	x19, x22, x19
  41d344:	ldur	w0, [x24, #-8]
  41d348:	add	x28, x4, x0
  41d34c:	add	x0, x19, #0x1
  41d350:	add	x0, x22, x0
  41d354:	cmp	x28, x0
  41d358:	b.cc	41d364 <ferror@plt+0x1a594>  // b.lo, b.ul, b.last
  41d35c:	mvn	x19, x19
  41d360:	add	x28, x28, x19
  41d364:	cbnz	x26, 41d380 <ferror@plt+0x1a5b0>
  41d368:	cbnz	x20, 41d3b8 <ferror@plt+0x1a5e8>
  41d36c:	ldr	x0, [sp, #128]
  41d370:	add	x24, x24, #0x10
  41d374:	add	x0, x0, #0x1
  41d378:	str	x0, [sp, #128]
  41d37c:	b	41d274 <ferror@plt+0x1a4a4>
  41d380:	ldr	x4, [sp, #104]
  41d384:	add	x3, sp, #0x100
  41d388:	ldr	x0, [sp, #136]
  41d38c:	sub	x2, x28, x22
  41d390:	mov	x1, x22
  41d394:	blr	x4
  41d398:	tst	w0, #0xff
  41d39c:	b.ne	41d368 <ferror@plt+0x1a598>  // b.any
  41d3a0:	mov	x0, x21
  41d3a4:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41d3a8:	mov	w1, #0x3                   	// #3
  41d3ac:	add	x2, x2, #0x946
  41d3b0:	bl	421ab4 <ferror@plt+0x1ece4>
  41d3b4:	b	41d428 <ferror@plt+0x1a658>
  41d3b8:	ldr	x1, [sp, #104]
  41d3bc:	adrp	x0, 419000 <ferror@plt+0x16230>
  41d3c0:	add	x0, x0, #0xd4c
  41d3c4:	cmp	x1, x0
  41d3c8:	b.eq	41d3dc <ferror@plt+0x1a60c>  // b.none
  41d3cc:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41d3d0:	mov	w1, #0x641                 	// #1601
  41d3d4:	add	x2, x2, #0xbdb
  41d3d8:	b	41d1f4 <ferror@plt+0x1a424>
  41d3dc:	mov	x2, x20
  41d3e0:	sub	w1, w28, w22
  41d3e4:	mov	x0, x23
  41d3e8:	bl	41a7e4 <ferror@plt+0x17a14>
  41d3ec:	b	41d36c <ferror@plt+0x1a59c>
  41d3f0:	cmp	w0, #0x22
  41d3f4:	b.eq	41d454 <ferror@plt+0x1a684>  // b.none
  41d3f8:	cmp	w0, #0x27
  41d3fc:	b.eq	41d454 <ferror@plt+0x1a684>  // b.none
  41d400:	cbnz	x23, 41d414 <ferror@plt+0x1a644>
  41d404:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41d408:	mov	w1, #0x64d                 	// #1613
  41d40c:	add	x2, x2, #0xbdb
  41d410:	b	41d1f4 <ferror@plt+0x1a424>
  41d414:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41d418:	mov	x0, x21
  41d41c:	add	x2, x2, #0xbf2
  41d420:	mov	w1, #0x3                   	// #3
  41d424:	bl	421610 <ferror@plt+0x1e840>
  41d428:	cbz	x26, 41d434 <ferror@plt+0x1a664>
  41d42c:	ldr	x0, [sp, #256]
  41d430:	bl	402b30 <free@plt>
  41d434:	mov	w0, #0x0                   	// #0
  41d438:	ldp	x19, x20, [sp, #16]
  41d43c:	ldp	x21, x22, [sp, #32]
  41d440:	ldp	x23, x24, [sp, #48]
  41d444:	ldp	x25, x26, [sp, #64]
  41d448:	ldp	x27, x28, [sp, #80]
  41d44c:	ldp	x29, x30, [sp], #336
  41d450:	ret
  41d454:	add	x19, x19, #0x1
  41d458:	cbz	x20, 41d464 <ferror@plt+0x1a694>
  41d45c:	mov	x0, x20
  41d460:	bl	41a7bc <ferror@plt+0x179ec>
  41d464:	ldur	w0, [x24, #-8]
  41d468:	ldr	x1, [x24]
  41d46c:	sub	x0, x0, #0x1
  41d470:	add	x0, x1, x0
  41d474:	str	x0, [sp, #112]
  41d478:	adrp	x0, 419000 <ferror@plt+0x16230>
  41d47c:	add	x0, x0, #0xd4c
  41d480:	str	x0, [sp, #184]
  41d484:	mov	x22, x19
  41d488:	ldr	x0, [sp, #112]
  41d48c:	cmp	x22, x0
  41d490:	b.cs	41dab4 <ferror@plt+0x1ace4>  // b.hs, b.nlast
  41d494:	ldrb	w0, [x22]
  41d498:	cmp	w0, #0x5c
  41d49c:	b.eq	41da14 <ferror@plt+0x1ac44>  // b.none
  41d4a0:	add	x22, x22, #0x1
  41d4a4:	b	41d488 <ferror@plt+0x1a6b8>
  41d4a8:	ldr	x4, [sp, #104]
  41d4ac:	add	x3, sp, #0x100
  41d4b0:	ldr	x0, [sp, #136]
  41d4b4:	sub	x2, x22, x19
  41d4b8:	mov	x1, x19
  41d4bc:	blr	x4
  41d4c0:	tst	w0, #0xff
  41d4c4:	b.ne	41da20 <ferror@plt+0x1ac50>  // b.any
  41d4c8:	b	41d3a0 <ferror@plt+0x1a5d0>
  41d4cc:	ldr	x0, [sp, #104]
  41d4d0:	ldr	x1, [sp, #184]
  41d4d4:	cmp	x0, x1
  41d4d8:	b.eq	41d4ec <ferror@plt+0x1a71c>  // b.none
  41d4dc:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41d4e0:	mov	w1, #0x66c                 	// #1644
  41d4e4:	add	x2, x2, #0xbdb
  41d4e8:	b	41d1f4 <ferror@plt+0x1a424>
  41d4ec:	mov	x2, x20
  41d4f0:	sub	w1, w22, w19
  41d4f4:	mov	x0, x23
  41d4f8:	bl	41a7e4 <ferror@plt+0x17a14>
  41d4fc:	b	41da24 <ferror@plt+0x1ac54>
  41d500:	sub	w1, w3, #0x55
  41d504:	cmp	w1, #0x26
  41d508:	b.hi	41da84 <ferror@plt+0x1acb4>  // b.pmore
  41d50c:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41d510:	add	x5, x22, #0x2
  41d514:	add	x0, x0, #0x8c4
  41d518:	ldrh	w0, [x0, w1, uxtw #1]
  41d51c:	adr	x1, 41d528 <ferror@plt+0x1a758>
  41d520:	add	x0, x1, w0, sxth #2
  41d524:	br	x0
  41d528:	cmp	w1, #0x6
  41d52c:	b.hi	41da84 <ferror@plt+0x1acb4>  // b.pmore
  41d530:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1d5fc>
  41d534:	add	x0, x0, #0x914
  41d538:	ldrh	w0, [x0, w1, uxtw #1]
  41d53c:	adr	x1, 41d548 <ferror@plt+0x1a778>
  41d540:	add	x0, x1, w0, sxth #2
  41d544:	br	x0
  41d548:	cmp	w3, #0x3f
  41d54c:	b.eq	41d8d8 <ferror@plt+0x1ab08>  // b.none
  41d550:	cmp	w3, #0x45
  41d554:	b.ne	41da84 <ferror@plt+0x1acb4>  // b.any
  41d558:	ldrb	w0, [x21, #1154]
  41d55c:	cbz	w0, 41d574 <ferror@plt+0x1a7a4>
  41d560:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41d564:	mov	x0, x21
  41d568:	add	x2, x2, #0xd20
  41d56c:	mov	w1, #0x2                   	// #2
  41d570:	bl	421610 <ferror@plt+0x1e840>
  41d574:	mov	w0, #0x1b                  	// #27
  41d578:	b	41d93c <ferror@plt+0x1ab6c>
  41d57c:	ldr	x0, [sp, #144]
  41d580:	cmp	x20, #0x0
  41d584:	ldr	w1, [sp, #124]
  41d588:	add	x22, sp, #0xd8
  41d58c:	str	wzr, [sp, #304]
  41d590:	bfi	x25, x0, #32, #32
  41d594:	mov	x0, #0x6                   	// #6
  41d598:	stp	x19, x25, [sp, #224]
  41d59c:	stp	x22, x0, [sp, #240]
  41d5a0:	cset	w0, ne  // ne = any
  41d5a4:	cmp	w0, w1
  41d5a8:	strb	wzr, [sp, #308]
  41d5ac:	str	wzr, [sp, #312]
  41d5b0:	b.eq	41d5c4 <ferror@plt+0x1a7f4>  // b.none
  41d5b4:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41d5b8:	mov	w1, #0x48d                 	// #1165
  41d5bc:	add	x2, x2, #0xc05
  41d5c0:	b	41d1f4 <ferror@plt+0x1a424>
  41d5c4:	str	x5, [sp, #224]
  41d5c8:	cbz	x20, 41d5dc <ferror@plt+0x1a80c>
  41d5cc:	mov	x0, x20
  41d5d0:	bl	41a7bc <ferror@plt+0x179ec>
  41d5d4:	lsr	x0, x0, #32
  41d5d8:	str	w0, [sp, #236]
  41d5dc:	ldr	x2, [sp, #112]
  41d5e0:	mov	x7, x20
  41d5e4:	add	x6, sp, #0xe8
  41d5e8:	add	x5, sp, #0xd4
  41d5ec:	add	x4, sp, #0x130
  41d5f0:	add	x1, sp, #0xe0
  41d5f4:	mov	w3, #0x0                   	// #0
  41d5f8:	mov	x0, x21
  41d5fc:	bl	41a838 <ferror@plt+0x17a68>
  41d600:	ldr	w0, [sp, #212]
  41d604:	add	x2, sp, #0xf8
  41d608:	add	x1, sp, #0xf0
  41d60c:	bl	419638 <ferror@plt+0x16868>
  41d610:	mov	w19, w0
  41d614:	cbz	w0, 41d63c <ferror@plt+0x1a86c>
  41d618:	bl	402cf0 <__errno_location@plt>
  41d61c:	str	w19, [x0]
  41d620:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41d624:	mov	x0, x21
  41d628:	add	x2, x2, #0x9a6
  41d62c:	mov	w1, #0x3                   	// #3
  41d630:	bl	421ab4 <ferror@plt+0x1ece4>
  41d634:	ldr	x19, [sp, #224]
  41d638:	b	41d484 <ferror@plt+0x1a6b4>
  41d63c:	cbz	x27, 41d67c <ferror@plt+0x1a8ac>
  41d640:	ldr	x0, [sp, #248]
  41d644:	mov	x2, #0x6                   	// #6
  41d648:	ldr	x4, [sp, #104]
  41d64c:	sub	x2, x2, x0
  41d650:	ldr	x0, [sp, #136]
  41d654:	mov	x3, x27
  41d658:	mov	x1, x22
  41d65c:	blr	x4
  41d660:	tst	w0, #0xff
  41d664:	b.ne	41d67c <ferror@plt+0x1a8ac>  // b.any
  41d668:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41d66c:	mov	x0, x21
  41d670:	add	x2, x2, #0xc11
  41d674:	mov	w1, #0x3                   	// #3
  41d678:	bl	421ab4 <ferror@plt+0x1ece4>
  41d67c:	cbz	x20, 41d634 <ferror@plt+0x1a864>
  41d680:	ldr	x0, [sp, #248]
  41d684:	mov	w22, #0x6                   	// #6
  41d688:	sub	w22, w22, w0
  41d68c:	cmp	w22, w19
  41d690:	b.le	41d634 <ferror@plt+0x1a864>
  41d694:	ldr	x1, [sp, #232]
  41d698:	mov	x0, x23
  41d69c:	add	w19, w19, #0x1
  41d6a0:	bl	41a41c <ferror@plt+0x1764c>
  41d6a4:	b	41d68c <ferror@plt+0x1a8bc>
  41d6a8:	ldr	x0, [sp, #144]
  41d6ac:	cmp	x20, #0x0
  41d6b0:	ldr	w1, [sp, #124]
  41d6b4:	bfi	x25, x0, #32, #32
  41d6b8:	cset	w0, ne  // ne = any
  41d6bc:	mov	x28, x25
  41d6c0:	cmp	w0, w1
  41d6c4:	b.eq	41d6d8 <ferror@plt+0x1a908>  // b.none
  41d6c8:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41d6cc:	mov	w1, #0x4f9                 	// #1273
  41d6d0:	add	x2, x2, #0xc3b
  41d6d4:	b	41d1f4 <ferror@plt+0x1a424>
  41d6d8:	ldrb	w0, [x21, #1138]
  41d6dc:	cbz	w0, 41d6fc <ferror@plt+0x1a92c>
  41d6e0:	mov	x0, x21
  41d6e4:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41d6e8:	mov	w1, #0x6                   	// #6
  41d6ec:	add	x2, x2, #0xc47
  41d6f0:	str	x5, [sp, #200]
  41d6f4:	bl	42167c <ferror@plt+0x1e8ac>
  41d6f8:	ldr	x5, [sp, #200]
  41d6fc:	mov	x19, x5
  41d700:	cbz	x20, 41d714 <ferror@plt+0x1a944>
  41d704:	mov	x0, x20
  41d708:	bl	41a7bc <ferror@plt+0x179ec>
  41d70c:	lsr	x0, x0, #32
  41d710:	bfi	x28, x0, #32, #32
  41d714:	mov	w0, #0x0                   	// #0
  41d718:	mov	w3, #0x0                   	// #0
  41d71c:	mov	w22, #0x0                   	// #0
  41d720:	ldr	x1, [sp, #112]
  41d724:	cmp	x1, x19
  41d728:	b.ls	41d76c <ferror@plt+0x1a99c>  // b.plast
  41d72c:	ldrb	w1, [x19]
  41d730:	ldr	x2, [sp, #192]
  41d734:	ldrb	w5, [x2, x1]
  41d738:	cmp	w5, #0x63
  41d73c:	b.eq	41d76c <ferror@plt+0x1a99c>  // b.none
  41d740:	add	x19, x19, #0x1
  41d744:	cbz	x20, 41d758 <ferror@plt+0x1a988>
  41d748:	mov	x0, x20
  41d74c:	bl	41a7bc <ferror@plt+0x179ec>
  41d750:	lsr	x0, x0, #32
  41d754:	bfi	x28, x0, #32, #32
  41d758:	and	w0, w22, #0xf0000000
  41d75c:	add	w22, w5, w22, lsl #4
  41d760:	orr	w3, w3, w0
  41d764:	mov	w0, #0x1                   	// #1
  41d768:	b	41d720 <ferror@plt+0x1a950>
  41d76c:	cbnz	w0, 41d788 <ferror@plt+0x1a9b8>
  41d770:	mov	x0, x21
  41d774:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41d778:	mov	w1, #0x3                   	// #3
  41d77c:	add	x2, x2, #0xc79
  41d780:	bl	421610 <ferror@plt+0x1e840>
  41d784:	b	41d484 <ferror@plt+0x1a6b4>
  41d788:	ldr	w0, [sp, #152]
  41d78c:	and	w0, w22, w0
  41d790:	cmp	x0, w22, uxtw
  41d794:	cset	w0, ne  // ne = any
  41d798:	orr	w0, w0, w3
  41d79c:	cbz	w0, 41d7bc <ferror@plt+0x1a9ec>
  41d7a0:	mov	x0, x21
  41d7a4:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41d7a8:	mov	w1, #0x2                   	// #2
  41d7ac:	add	x2, x2, #0xc9e
  41d7b0:	bl	421610 <ferror@plt+0x1e840>
  41d7b4:	ldr	w0, [sp, #172]
  41d7b8:	and	w22, w22, w0
  41d7bc:	cbz	x27, 41d7d4 <ferror@plt+0x1aa04>
  41d7c0:	ldr	w3, [sp, #168]
  41d7c4:	mov	x2, x27
  41d7c8:	mov	w1, w22
  41d7cc:	mov	x0, x21
  41d7d0:	bl	419fc4 <ferror@plt+0x171f4>
  41d7d4:	cbz	x23, 41d484 <ferror@plt+0x1a6b4>
  41d7d8:	mov	x1, x28
  41d7dc:	mov	x0, x23
  41d7e0:	bl	41a41c <ferror@plt+0x1764c>
  41d7e4:	b	41d484 <ferror@plt+0x1a6b4>
  41d7e8:	ldr	x0, [sp, #144]
  41d7ec:	cmp	x20, #0x0
  41d7f0:	ldr	w1, [sp, #124]
  41d7f4:	bfi	x25, x0, #32, #32
  41d7f8:	cset	w0, ne  // ne = any
  41d7fc:	mov	x4, x25
  41d800:	cmp	w0, w1
  41d804:	b.ne	41d860 <ferror@plt+0x1aa90>  // b.any
  41d808:	add	x5, x22, #0x4
  41d80c:	mov	w22, #0x0                   	// #0
  41d810:	ldr	x0, [sp, #112]
  41d814:	cmp	x0, x19
  41d818:	b.ls	41d870 <ferror@plt+0x1aaa0>  // b.plast
  41d81c:	cmp	x5, x19
  41d820:	b.eq	41d870 <ferror@plt+0x1aaa0>  // b.none
  41d824:	ldrb	w3, [x19]
  41d828:	sub	w0, w3, #0x30
  41d82c:	cmp	w0, #0x7
  41d830:	b.hi	41d870 <ferror@plt+0x1aaa0>  // b.pmore
  41d834:	add	x19, x19, #0x1
  41d838:	cbz	x20, 41d854 <ferror@plt+0x1aa84>
  41d83c:	mov	x0, x20
  41d840:	str	x4, [sp, #200]
  41d844:	bl	41a7bc <ferror@plt+0x179ec>
  41d848:	lsr	x0, x0, #32
  41d84c:	ldr	x4, [sp, #200]
  41d850:	bfi	x4, x0, #32, #32
  41d854:	add	w22, w3, w22, lsl #3
  41d858:	sub	w22, w22, #0x30
  41d85c:	b	41d810 <ferror@plt+0x1aa40>
  41d860:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41d864:	mov	w1, #0x540                 	// #1344
  41d868:	add	x2, x2, #0xcbf
  41d86c:	b	41d1f4 <ferror@plt+0x1a424>
  41d870:	ldr	w0, [sp, #152]
  41d874:	and	w0, w22, w0
  41d878:	cmp	x0, w22, uxtw
  41d87c:	b.eq	41d8a4 <ferror@plt+0x1aad4>  // b.none
  41d880:	mov	x0, x21
  41d884:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41d888:	mov	w1, #0x2                   	// #2
  41d88c:	add	x2, x2, #0xccb
  41d890:	str	x4, [sp, #200]
  41d894:	bl	421610 <ferror@plt+0x1e840>
  41d898:	ldr	w0, [sp, #172]
  41d89c:	ldr	x4, [sp, #200]
  41d8a0:	and	w22, w22, w0
  41d8a4:	cbz	x27, 41d8c4 <ferror@plt+0x1aaf4>
  41d8a8:	ldr	w3, [sp, #168]
  41d8ac:	mov	x2, x27
  41d8b0:	mov	w1, w22
  41d8b4:	mov	x0, x21
  41d8b8:	str	x4, [sp, #200]
  41d8bc:	bl	419fc4 <ferror@plt+0x171f4>
  41d8c0:	ldr	x4, [sp, #200]
  41d8c4:	cbz	x23, 41d484 <ferror@plt+0x1a6b4>
  41d8c8:	mov	x1, x4
  41d8cc:	b	41d7dc <ferror@plt+0x1aa0c>
  41d8d0:	ldrb	w0, [x21, #1154]
  41d8d4:	cbnz	w0, 41da84 <ferror@plt+0x1acb4>
  41d8d8:	cbz	x27, 41d910 <ferror@plt+0x1ab40>
  41d8dc:	ldr	x4, [sp, #104]
  41d8e0:	mov	x3, x27
  41d8e4:	ldr	x0, [sp, #136]
  41d8e8:	add	x1, sp, #0xd3
  41d8ec:	mov	x2, #0x1                   	// #1
  41d8f0:	blr	x4
  41d8f4:	tst	w0, #0xff
  41d8f8:	b.ne	41d910 <ferror@plt+0x1ab40>  // b.any
  41d8fc:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41d900:	mov	x0, x21
  41d904:	add	x2, x2, #0xd86
  41d908:	mov	w1, #0x3                   	// #3
  41d90c:	bl	421ab4 <ferror@plt+0x1ece4>
  41d910:	cbz	x20, 41d930 <ferror@plt+0x1ab60>
  41d914:	mov	x0, x20
  41d918:	bl	41a7bc <ferror@plt+0x179ec>
  41d91c:	lsr	x0, x0, #32
  41d920:	bfi	x25, x0, #32, #32
  41d924:	mov	x0, x23
  41d928:	mov	x1, x25
  41d92c:	bl	41a41c <ferror@plt+0x1764c>
  41d930:	add	x19, x22, #0x2
  41d934:	b	41d484 <ferror@plt+0x1a6b4>
  41d938:	mov	w0, #0x8                   	// #8
  41d93c:	strb	w0, [sp, #211]
  41d940:	b	41d8d8 <ferror@plt+0x1ab08>
  41d944:	mov	w0, #0xc                   	// #12
  41d948:	b	41d93c <ferror@plt+0x1ab6c>
  41d94c:	mov	w0, #0xa                   	// #10
  41d950:	b	41d93c <ferror@plt+0x1ab6c>
  41d954:	mov	w0, #0xd                   	// #13
  41d958:	b	41d93c <ferror@plt+0x1ab6c>
  41d95c:	mov	w0, #0x9                   	// #9
  41d960:	b	41d93c <ferror@plt+0x1ab6c>
  41d964:	mov	w0, #0xb                   	// #11
  41d968:	b	41d93c <ferror@plt+0x1ab6c>
  41d96c:	ldrb	w0, [x21, #1138]
  41d970:	cbz	w0, 41d988 <ferror@plt+0x1abb8>
  41d974:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41d978:	mov	x0, x21
  41d97c:	add	x2, x2, #0xcee
  41d980:	mov	w1, #0x6                   	// #6
  41d984:	bl	42167c <ferror@plt+0x1e8ac>
  41d988:	mov	w0, #0x7                   	// #7
  41d98c:	b	41d93c <ferror@plt+0x1ab6c>
  41d990:	mov	w2, w3
  41d994:	add	x0, sp, #0x130
  41d998:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  41d99c:	add	x1, x1, #0xd5d
  41d9a0:	bl	4027a0 <sprintf@plt>
  41d9a4:	add	x3, sp, #0x130
  41d9a8:	mov	x0, x21
  41d9ac:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41d9b0:	mov	w1, #0x2                   	// #2
  41d9b4:	add	x2, x2, #0xd67
  41d9b8:	bl	421610 <ferror@plt+0x1e840>
  41d9bc:	b	41d8d8 <ferror@plt+0x1ab08>
  41d9c0:	cbz	x26, 41d9f4 <ferror@plt+0x1ac24>
  41d9c4:	ldr	w3, [sp, #168]
  41d9c8:	add	x2, sp, #0x100
  41d9cc:	mov	x0, x21
  41d9d0:	mov	w1, #0x0                   	// #0
  41d9d4:	bl	419fc4 <ferror@plt+0x171f4>
  41d9d8:	ldr	x0, [sp, #256]
  41d9dc:	ldr	x1, [sp, #272]
  41d9e0:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  41d9e4:	str	x0, [x26, #8]
  41d9e8:	str	x0, [sp, #256]
  41d9ec:	ldr	x0, [sp, #272]
  41d9f0:	str	w0, [x26]
  41d9f4:	cbz	x20, 41da0c <ferror@plt+0x1ac3c>
  41d9f8:	mov	x0, x20
  41d9fc:	bl	41a7bc <ferror@plt+0x179ec>
  41da00:	mov	x1, x0
  41da04:	mov	x0, x23
  41da08:	bl	41a41c <ferror@plt+0x1764c>
  41da0c:	mov	w0, #0x1                   	// #1
  41da10:	b	41d438 <ferror@plt+0x1a668>
  41da14:	cmp	x19, x22
  41da18:	b.cs	41da30 <ferror@plt+0x1ac60>  // b.hs, b.nlast
  41da1c:	cbnz	x26, 41d4a8 <ferror@plt+0x1a6d8>
  41da20:	cbnz	x20, 41d4cc <ferror@plt+0x1a6fc>
  41da24:	ldr	x0, [sp, #112]
  41da28:	cmp	x22, x0
  41da2c:	b.cs	41d36c <ferror@plt+0x1a59c>  // b.hs, b.nlast
  41da30:	add	x19, x22, #0x1
  41da34:	cbz	x20, 41da4c <ferror@plt+0x1ac7c>
  41da38:	mov	x0, x20
  41da3c:	bl	41a7bc <ferror@plt+0x179ec>
  41da40:	mov	x25, x0
  41da44:	lsr	x0, x0, #32
  41da48:	str	x0, [sp, #144]
  41da4c:	ldrb	w3, [x22, #1]
  41da50:	strb	w3, [sp, #211]
  41da54:	cmp	w3, #0x7b
  41da58:	b.hi	41da84 <ferror@plt+0x1acb4>  // b.pmore
  41da5c:	cmp	w3, #0x54
  41da60:	b.hi	41d500 <ferror@plt+0x1a730>  // b.pmore
  41da64:	cmp	w3, #0x37
  41da68:	b.hi	41d548 <ferror@plt+0x1a778>  // b.pmore
  41da6c:	cmp	w3, #0x2f
  41da70:	b.hi	41d7e8 <ferror@plt+0x1aa18>  // b.pmore
  41da74:	sub	w1, w3, #0x22
  41da78:	and	w0, w1, #0xff
  41da7c:	cmp	w0, #0x6
  41da80:	b.ls	41d528 <ferror@plt+0x1a758>  // b.plast
  41da84:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  41da88:	add	x0, x0, #0xb08
  41da8c:	mov	w1, #0xac                  	// #172
  41da90:	ldrh	w0, [x0, w3, sxtw #1]
  41da94:	tst	w1, w0
  41da98:	b.eq	41d990 <ferror@plt+0x1abc0>  // b.none
  41da9c:	mov	x0, x21
  41daa0:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41daa4:	mov	w1, #0x2                   	// #2
  41daa8:	add	x2, x2, #0xd48
  41daac:	bl	421610 <ferror@plt+0x1e840>
  41dab0:	b	41d8d8 <ferror@plt+0x1ab08>
  41dab4:	cmp	x19, x22
  41dab8:	b.cc	41da1c <ferror@plt+0x1ac4c>  // b.lo, b.ul, b.last
  41dabc:	b	41d36c <ferror@plt+0x1a59c>
  41dac0:	mov	x6, #0x0                   	// #0
  41dac4:	mov	x5, #0x0                   	// #0
  41dac8:	b	41d170 <ferror@plt+0x1a3a0>
  41dacc:	stp	x29, x30, [sp, #-64]!
  41dad0:	mov	w4, #0x3e                  	// #62
  41dad4:	mov	x29, sp
  41dad8:	ldr	x5, [x0, #536]
  41dadc:	str	x19, [sp, #16]
  41dae0:	add	x19, x0, #0x208
  41dae4:	str	x5, [sp, #56]
  41dae8:	adrp	x5, 419000 <ferror@plt+0x16230>
  41daec:	add	x5, x5, #0xd4c
  41daf0:	ldp	x6, x7, [x19]
  41daf4:	str	x5, [x0, #520]
  41daf8:	mov	x5, #0xffffffffffffffff    	// #-1
  41dafc:	str	x5, [x0, #528]
  41db00:	ldr	x5, [x0, #1216]
  41db04:	str	w5, [x0, #536]
  41db08:	stp	x6, x7, [sp, #40]
  41db0c:	bl	41dac0 <ferror@plt+0x1acf0>
  41db10:	ldp	x2, x3, [sp, #40]
  41db14:	stp	x2, x3, [x19]
  41db18:	ldr	x1, [sp, #56]
  41db1c:	str	x1, [x19, #16]
  41db20:	ldr	x19, [sp, #16]
  41db24:	ldp	x29, x30, [sp], #64
  41db28:	ret
  41db2c:	stp	x29, x30, [sp, #-128]!
  41db30:	mov	x29, sp
  41db34:	ldrb	w4, [x1, #4]
  41db38:	stp	x21, x22, [sp, #32]
  41db3c:	mov	x22, x1
  41db40:	and	w1, w4, #0xfffffffb
  41db44:	cmp	w1, #0x38
  41db48:	stp	x23, x24, [sp, #48]
  41db4c:	mov	x23, x2
  41db50:	cset	w2, ne  // ne = any
  41db54:	cmp	w4, #0x3c
  41db58:	stp	x19, x20, [sp, #16]
  41db5c:	and	w19, w1, #0xff
  41db60:	cset	w1, eq  // eq = none
  41db64:	mov	x24, x3
  41db68:	add	w2, w2, #0x2
  41db6c:	ldr	w3, [x22, #8]
  41db70:	add	w1, w2, w1, lsl #1
  41db74:	stp	x25, x26, [sp, #64]
  41db78:	str	wzr, [sp, #88]
  41db7c:	cmp	x3, w1, sxtw
  41db80:	str	xzr, [sp, #96]
  41db84:	b.ne	41dbc0 <ferror@plt+0x1adf0>  // b.any
  41db88:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41db8c:	mov	w1, #0x3                   	// #3
  41db90:	add	x2, x2, #0xdbc
  41db94:	bl	421610 <ferror@plt+0x1e840>
  41db98:	str	wzr, [x23]
  41db9c:	mov	w19, #0x0                   	// #0
  41dba0:	str	wzr, [x24]
  41dba4:	mov	w0, w19
  41dba8:	ldp	x19, x20, [sp, #16]
  41dbac:	ldp	x21, x22, [sp, #32]
  41dbb0:	ldp	x23, x24, [sp, #48]
  41dbb4:	ldp	x25, x26, [sp, #64]
  41dbb8:	ldp	x29, x30, [sp], #128
  41dbbc:	ret
  41dbc0:	mov	x20, x0
  41dbc4:	add	x3, sp, #0x58
  41dbc8:	add	x1, x22, #0x8
  41dbcc:	mov	x2, #0x1                   	// #1
  41dbd0:	bl	41dac0 <ferror@plt+0x1acf0>
  41dbd4:	tst	w0, #0xff
  41dbd8:	b.eq	41db98 <ferror@plt+0x1adc8>  // b.none
  41dbdc:	ldr	w25, [sp, #88]
  41dbe0:	cmp	w19, #0x38
  41dbe4:	ldr	x4, [sp, #96]
  41dbe8:	b.eq	41dd10 <ferror@plt+0x1af40>  // b.none
  41dbec:	ldrb	w6, [x20, #1242]
  41dbf0:	mov	x0, x20
  41dbf4:	ldrb	w21, [x22, #4]
  41dbf8:	add	x8, sp, #0x68
  41dbfc:	mov	w25, w25
  41dc00:	mov	w19, #0x0                   	// #0
  41dc04:	mov	w1, w21
  41dc08:	bl	419f68 <ferror@plt+0x17198>
  41dc0c:	ldrsw	x26, [sp, #120]
  41dc10:	ldr	x3, [x20, #1216]
  41dc14:	mov	x1, #0x20                  	// #32
  41dc18:	cmp	x3, #0x20
  41dc1c:	csel	x0, x3, x1, ls  // ls = plast
  41dc20:	mov	x1, #0x1                   	// #1
  41dc24:	lsl	x1, x1, x0
  41dc28:	sub	x1, x1, #0x1
  41dc2c:	udiv	x0, x26, x3
  41dc30:	sub	x2, x25, x0, lsl #1
  41dc34:	lsl	x7, x0, #1
  41dc38:	add	x5, x4, x2
  41dc3c:	add	x0, x0, x2
  41dc40:	add	x0, x4, x0
  41dc44:	mov	x4, x5
  41dc48:	cmp	x0, x5
  41dc4c:	b.eq	41dc78 <ferror@plt+0x1aea8>  // b.none
  41dc50:	cbz	w6, 41dc70 <ferror@plt+0x1aea0>
  41dc54:	ldrb	w2, [x4]
  41dc58:	and	w2, w2, w1
  41dc5c:	lsl	w19, w19, w3
  41dc60:	add	x4, x4, #0x1
  41dc64:	orr	w19, w2, w19
  41dc68:	sub	x0, x0, #0x1
  41dc6c:	b	41dc48 <ferror@plt+0x1ae78>
  41dc70:	ldurb	w2, [x0, #-1]
  41dc74:	b	41dc58 <ferror@plt+0x1ae88>
  41dc78:	cmp	x25, x7
  41dc7c:	b.ls	41dc94 <ferror@plt+0x1aec4>  // b.plast
  41dc80:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41dc84:	mov	x0, x20
  41dc88:	add	x2, x2, #0xdd5
  41dc8c:	mov	w1, #0x0                   	// #0
  41dc90:	bl	421610 <ferror@plt+0x1e840>
  41dc94:	sub	w21, w21, #0x3a
  41dc98:	cmp	x26, #0x1f
  41dc9c:	b.hi	41dcd0 <ferror@plt+0x1af00>  // b.pmore
  41dca0:	mov	x1, #0x1                   	// #1
  41dca4:	cmp	w21, #0x1
  41dca8:	lsl	x0, x1, x26
  41dcac:	b.ls	41dcc8 <ferror@plt+0x1aef8>  // b.plast
  41dcb0:	ldrb	w2, [x20, #1241]
  41dcb4:	cbnz	w2, 41dcc8 <ferror@plt+0x1aef8>
  41dcb8:	sub	w26, w26, #0x1
  41dcbc:	lsl	w26, w1, w26
  41dcc0:	tst	w26, w19
  41dcc4:	b.ne	41dce0 <ferror@plt+0x1af10>  // b.any
  41dcc8:	sub	x0, x0, #0x1
  41dccc:	and	w19, w19, w0
  41dcd0:	cmp	w21, #0x1
  41dcd4:	b.hi	41dce8 <ferror@plt+0x1af18>  // b.pmore
  41dcd8:	mov	w0, #0x1                   	// #1
  41dcdc:	b	41dcec <ferror@plt+0x1af1c>
  41dce0:	neg	x0, x0
  41dce4:	orr	w19, w19, w0
  41dce8:	ldrb	w0, [x20, #1241]
  41dcec:	str	w0, [x24]
  41dcf0:	mov	w0, #0x1                   	// #1
  41dcf4:	str	w0, [x23]
  41dcf8:	ldr	x1, [x22, #16]
  41dcfc:	ldr	x0, [sp, #96]
  41dd00:	cmp	x0, x1
  41dd04:	b.eq	41dba4 <ferror@plt+0x1add4>  // b.none
  41dd08:	bl	402b30 <free@plt>
  41dd0c:	b	41dba4 <ferror@plt+0x1add4>
  41dd10:	ldr	x21, [x20, #1216]
  41dd14:	mov	x1, #0x20                  	// #32
  41dd18:	ldr	x26, [x20, #1224]
  41dd1c:	cmp	x21, #0x20
  41dd20:	csel	x0, x21, x1, ls  // ls = plast
  41dd24:	mov	x1, #0x1                   	// #1
  41dd28:	sub	w25, w25, #0x1
  41dd2c:	mov	w19, #0x0                   	// #0
  41dd30:	udiv	x26, x26, x21
  41dd34:	lsl	x1, x1, x0
  41dd38:	sub	x1, x1, #0x1
  41dd3c:	mov	x2, #0x0                   	// #0
  41dd40:	cmp	x25, x2
  41dd44:	b.ls	41dd6c <ferror@plt+0x1af9c>  // b.plast
  41dd48:	ldrb	w0, [x4, x2]
  41dd4c:	cmp	x21, #0x1f
  41dd50:	and	w0, w0, w1
  41dd54:	b.hi	41dd60 <ferror@plt+0x1af90>  // b.pmore
  41dd58:	lsl	w19, w19, w21
  41dd5c:	orr	w0, w0, w19
  41dd60:	add	x2, x2, #0x1
  41dd64:	mov	w19, w0
  41dd68:	b	41dd40 <ferror@plt+0x1af70>
  41dd6c:	cmp	x26, x25
  41dd70:	b.cs	41ddcc <ferror@plt+0x1affc>  // b.hs, b.nlast
  41dd74:	mov	x0, x20
  41dd78:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41dd7c:	mov	w1, #0x0                   	// #0
  41dd80:	add	x2, x2, #0xdd5
  41dd84:	bl	421610 <ferror@plt+0x1e840>
  41dd88:	cmp	x26, #0x1
  41dd8c:	b.hi	41ddf4 <ferror@plt+0x1b024>  // b.pmore
  41dd90:	ldrb	w2, [x20, #1240]
  41dd94:	cmp	x21, #0x1f
  41dd98:	b.hi	41ddc0 <ferror@plt+0x1aff0>  // b.pmore
  41dd9c:	mov	w1, #0x1                   	// #1
  41dda0:	lsl	w0, w1, w21
  41dda4:	cbnz	w2, 41ddb8 <ferror@plt+0x1afe8>
  41dda8:	sub	w21, w21, #0x1
  41ddac:	lsl	w21, w1, w21
  41ddb0:	tst	w21, w19
  41ddb4:	b.ne	41de08 <ferror@plt+0x1b038>  // b.any
  41ddb8:	sub	w0, w0, #0x1
  41ddbc:	and	w19, w19, w0
  41ddc0:	str	w26, [x23]
  41ddc4:	str	w2, [x24]
  41ddc8:	b	41dcf8 <ferror@plt+0x1af28>
  41ddcc:	cmp	x25, #0x1
  41ddd0:	b.ls	41de00 <ferror@plt+0x1b030>  // b.plast
  41ddd4:	ldrb	w0, [x20, #1137]
  41ddd8:	cbz	w0, 41ddf0 <ferror@plt+0x1b020>
  41dddc:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41dde0:	mov	x0, x20
  41dde4:	add	x2, x2, #0xdfe
  41dde8:	mov	w1, #0x5                   	// #5
  41ddec:	bl	42167c <ferror@plt+0x1e8ac>
  41ddf0:	mov	x26, x25
  41ddf4:	mov	w2, #0x0                   	// #0
  41ddf8:	ldr	x21, [x20, #1224]
  41ddfc:	b	41dd94 <ferror@plt+0x1afc4>
  41de00:	mov	x26, x25
  41de04:	b	41dd90 <ferror@plt+0x1afc0>
  41de08:	neg	w0, w0
  41de0c:	orr	w19, w19, w0
  41de10:	b	41ddc0 <ferror@plt+0x1aff0>
  41de14:	stp	x29, x30, [sp, #-64]!
  41de18:	mov	x7, x1
  41de1c:	mov	x10, x2
  41de20:	mov	x9, x3
  41de24:	mov	x29, sp
  41de28:	mov	w1, w5
  41de2c:	add	x8, sp, #0x28
  41de30:	stp	x19, x20, [sp, #16]
  41de34:	mov	x19, x0
  41de38:	bl	419f68 <ferror@plt+0x17198>
  41de3c:	ldr	x1, [sp, #40]
  41de40:	adrp	x0, 419000 <ferror@plt+0x16230>
  41de44:	add	x0, x0, #0xd4c
  41de48:	cmp	x1, x0
  41de4c:	b.ne	41dea0 <ferror@plt+0x1b0d0>  // b.any
  41de50:	adrp	x0, 419000 <ferror@plt+0x16230>
  41de54:	add	x0, x0, #0x8f0
  41de58:	ldr	x20, [x19, #1000]
  41de5c:	str	x0, [x19, #1000]
  41de60:	mov	x6, x4
  41de64:	mov	x1, x7
  41de68:	mov	w4, w5
  41de6c:	mov	x2, x9
  41de70:	mov	x5, x10
  41de74:	mov	x0, x19
  41de78:	mov	x3, #0x0                   	// #0
  41de7c:	bl	41d170 <ferror@plt+0x1a3a0>
  41de80:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41de84:	tst	w0, #0xff
  41de88:	add	x0, x1, #0xe51
  41de8c:	str	x20, [x19, #1000]
  41de90:	csel	x0, x0, xzr, eq  // eq = none
  41de94:	ldp	x19, x20, [sp, #16]
  41de98:	ldp	x29, x30, [sp], #64
  41de9c:	ret
  41dea0:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  41dea4:	add	x0, x0, #0xe21
  41dea8:	b	41de94 <ferror@plt+0x1b0c4>
  41deac:	ldrb	w0, [x1, #18]
  41deb0:	mov	w3, #0xffffffcd            	// #-51
  41deb4:	str	xzr, [x1, #24]
  41deb8:	and	w0, w0, #0xfffffffc
  41debc:	strb	w0, [x1, #18]
  41dec0:	ldrh	w0, [x1, #18]
  41dec4:	ubfx	x2, x0, #2, #8
  41dec8:	and	w2, w2, w3
  41decc:	bfi	w0, w2, #2, #8
  41ded0:	strh	w0, [x1, #18]
  41ded4:	mov	w0, #0x1                   	// #1
  41ded8:	ret
  41dedc:	stp	x29, x30, [sp, #-32]!
  41dee0:	mov	x29, sp
  41dee4:	stp	x19, x20, [sp, #16]
  41dee8:	mov	x19, x0
  41deec:	mov	w20, #0x0                   	// #0
  41def0:	cbz	x19, 41df14 <ferror@plt+0x1b144>
  41def4:	ldrb	w0, [x19, #16]
  41def8:	cbz	w0, 41df08 <ferror@plt+0x1b138>
  41defc:	ldr	x0, [x19, #24]
  41df00:	bl	41dedc <ferror@plt+0x1b10c>
  41df04:	add	w20, w20, w0
  41df08:	add	w20, w20, #0x1
  41df0c:	ldr	x19, [x19]
  41df10:	b	41def0 <ferror@plt+0x1b120>
  41df14:	mov	w0, w20
  41df18:	ldp	x19, x20, [sp, #16]
  41df1c:	ldp	x29, x30, [sp], #32
  41df20:	ret
  41df24:	stp	x29, x30, [sp, #-32]!
  41df28:	mov	x29, sp
  41df2c:	stp	x19, x20, [sp, #16]
  41df30:	mov	x19, x0
  41df34:	and	w20, w1, #0xff
  41df38:	bl	42aac4 <ferror@plt+0x27cf4>
  41df3c:	ldrb	w2, [x0, #4]
  41df40:	cmp	w2, #0x35
  41df44:	b.ne	41dfb0 <ferror@plt+0x1b1e0>  // b.any
  41df48:	ldr	x0, [x0, #8]
  41df4c:	cbz	w20, 41df98 <ferror@plt+0x1b1c8>
  41df50:	ldr	x1, [x19, #1248]
  41df54:	cmp	x1, x0
  41df58:	b.ne	41df74 <ferror@plt+0x1b1a4>  // b.any
  41df5c:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  41df60:	add	x2, x2, #0x3e8
  41df64:	mov	x0, x19
  41df68:	mov	w1, #0x3                   	// #3
  41df6c:	bl	421610 <ferror@plt+0x1e840>
  41df70:	b	41dfd4 <ferror@plt+0x1b204>
  41df74:	ldr	x1, [x19, #1288]
  41df78:	cmp	x1, x0
  41df7c:	b.eq	41df8c <ferror@plt+0x1b1bc>  // b.none
  41df80:	ldr	x1, [x19, #1296]
  41df84:	cmp	x1, x0
  41df88:	b.ne	41df98 <ferror@plt+0x1b1c8>  // b.any
  41df8c:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  41df90:	add	x2, x2, #0x411
  41df94:	b	41df64 <ferror@plt+0x1b194>
  41df98:	ldrh	w1, [x0, #18]
  41df9c:	tst	x1, #0x8
  41dfa0:	csel	x0, x0, xzr, eq  // eq = none
  41dfa4:	ldp	x19, x20, [sp, #16]
  41dfa8:	ldp	x29, x30, [sp], #32
  41dfac:	ret
  41dfb0:	ldrh	w1, [x0, #6]
  41dfb4:	tbz	w1, #4, 41dfdc <ferror@plt+0x1b20c>
  41dfb8:	ldr	x0, [x0, #8]
  41dfbc:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  41dfc0:	add	x2, x2, #0x442
  41dfc4:	ldr	x3, [x0]
  41dfc8:	mov	x0, x19
  41dfcc:	mov	w1, #0x3                   	// #3
  41dfd0:	bl	421610 <ferror@plt+0x1e840>
  41dfd4:	mov	x0, #0x0                   	// #0
  41dfd8:	b	41dfa4 <ferror@plt+0x1b1d4>
  41dfdc:	cmp	w2, #0x16
  41dfe0:	b.ne	41dff8 <ferror@plt+0x1b228>  // b.any
  41dfe4:	ldr	x0, [x19, #144]
  41dfe8:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  41dfec:	add	x2, x2, #0x482
  41dff0:	ldr	x3, [x0, #8]
  41dff4:	b	41dfc8 <ferror@plt+0x1b1f8>
  41dff8:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  41dffc:	add	x2, x2, #0x4a7
  41e000:	b	41df64 <ferror@plt+0x1b194>
  41e004:	stp	x29, x30, [sp, #-32]!
  41e008:	mov	x29, sp
  41e00c:	stp	x19, x20, [sp, #16]
  41e010:	mov	w19, w1
  41e014:	mov	x20, x0
  41e018:	bl	42aac4 <ferror@plt+0x27cf4>
  41e01c:	mov	x1, x0
  41e020:	ldrb	w0, [x0, #4]
  41e024:	cmp	w0, #0x37
  41e028:	b.ne	41e074 <ferror@plt+0x1b2a4>  // b.any
  41e02c:	ldr	w0, [x1, #8]
  41e030:	cmp	w0, #0x1
  41e034:	b.ne	41e07c <ferror@plt+0x1b2ac>  // b.any
  41e038:	ldr	x0, [x1, #16]
  41e03c:	ldrb	w2, [x0]
  41e040:	sub	w0, w2, #0x30
  41e044:	cmp	w0, w19
  41e048:	ccmp	w0, #0x4, #0x2, hi  // hi = pmore
  41e04c:	b.hi	41e07c <ferror@plt+0x1b2ac>  // b.pmore
  41e050:	cmp	w0, #0x4
  41e054:	ccmp	w19, #0x3, #0x4, eq  // eq = none
  41e058:	b.ne	41e07c <ferror@plt+0x1b2ac>  // b.any
  41e05c:	cmp	w19, #0x0
  41e060:	ccmp	w0, #0x2, #0x0, ne  // ne = any
  41e064:	b.eq	41e07c <ferror@plt+0x1b2ac>  // b.none
  41e068:	ldp	x19, x20, [sp, #16]
  41e06c:	ldp	x29, x30, [sp], #32
  41e070:	ret
  41e074:	cmp	w0, #0x16
  41e078:	b.eq	41e09c <ferror@plt+0x1b2cc>  // b.none
  41e07c:	mov	x0, x20
  41e080:	bl	42947c <ferror@plt+0x266ac>
  41e084:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  41e088:	mov	x3, x0
  41e08c:	add	x2, x2, #0x4c7
  41e090:	mov	x0, x20
  41e094:	mov	w1, #0x3                   	// #3
  41e098:	bl	421610 <ferror@plt+0x1e840>
  41e09c:	mov	w0, #0x0                   	// #0
  41e0a0:	b	41e068 <ferror@plt+0x1b298>
  41e0a4:	stp	x29, x30, [sp, #-32]!
  41e0a8:	mov	x29, sp
  41e0ac:	str	x19, [sp, #16]
  41e0b0:	mov	x19, x0
  41e0b4:	mov	x0, x19
  41e0b8:	bl	430978 <ferror@plt+0x2dba8>
  41e0bc:	ldrb	w1, [x0, #4]
  41e0c0:	cmp	w1, #0x53
  41e0c4:	b.eq	41e0b4 <ferror@plt+0x1b2e4>  // b.none
  41e0c8:	ldr	x19, [sp, #16]
  41e0cc:	ldp	x29, x30, [sp], #32
  41e0d0:	ret
  41e0d4:	stp	x29, x30, [sp, #-48]!
  41e0d8:	mov	x29, sp
  41e0dc:	stp	x19, x20, [sp, #16]
  41e0e0:	mov	x19, x0
  41e0e4:	mov	w0, #0x1                   	// #1
  41e0e8:	strb	w0, [x19, #23]
  41e0ec:	str	x21, [sp, #32]
  41e0f0:	adrp	x21, 466000 <_obstack_memory_used@@Base+0x215fc>
  41e0f4:	add	x21, x21, #0x510
  41e0f8:	mov	x0, x19
  41e0fc:	bl	42aac4 <ferror@plt+0x27cf4>
  41e100:	ldrb	w1, [x0, #4]
  41e104:	cmp	w1, #0x16
  41e108:	b.eq	41e128 <ferror@plt+0x1b358>  // b.none
  41e10c:	cmp	w1, #0x35
  41e110:	b.eq	41e13c <ferror@plt+0x1b36c>  // b.none
  41e114:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  41e118:	mov	x0, x19
  41e11c:	add	x2, x2, #0x4eb
  41e120:	mov	w1, #0x3                   	// #3
  41e124:	bl	421610 <ferror@plt+0x1e840>
  41e128:	strb	wzr, [x19, #23]
  41e12c:	ldp	x19, x20, [sp, #16]
  41e130:	ldr	x21, [sp, #32]
  41e134:	ldp	x29, x30, [sp], #48
  41e138:	ret
  41e13c:	ldr	x20, [x0, #8]
  41e140:	ldrh	w0, [x20, #18]
  41e144:	tbnz	w0, #3, 41e0f8 <ferror@plt+0x1b328>
  41e148:	ldrb	w0, [x20, #18]
  41e14c:	tbz	w0, #1, 41e164 <ferror@plt+0x1b394>
  41e150:	ldr	x3, [x20]
  41e154:	mov	x2, x21
  41e158:	mov	x0, x19
  41e15c:	mov	w1, #0x0                   	// #0
  41e160:	bl	421610 <ferror@plt+0x1e840>
  41e164:	mov	x0, x20
  41e168:	bl	42e554 <ferror@plt+0x2b784>
  41e16c:	ldrh	w0, [x20, #18]
  41e170:	orr	w0, w0, #0x18
  41e174:	strh	w0, [x20, #18]
  41e178:	b	41e0f8 <ferror@plt+0x1b328>
  41e17c:	stp	x29, x30, [sp, #-64]!
  41e180:	mov	x29, sp
  41e184:	stp	x19, x20, [sp, #16]
  41e188:	add	x19, x0, #0x18
  41e18c:	stp	x21, x22, [sp, #32]
  41e190:	mov	x22, x1
  41e194:	str	x23, [sp, #48]
  41e198:	mov	x23, #0x18                  	// #24
  41e19c:	ldr	x21, [x19]
  41e1a0:	cbz	x21, 41e1f8 <ferror@plt+0x1b428>
  41e1a4:	ldr	w1, [x21, #12]
  41e1a8:	ldr	w0, [x22, #12]
  41e1ac:	cmp	w1, w0
  41e1b0:	b.eq	41e1bc <ferror@plt+0x1b3ec>  // b.none
  41e1b4:	ldr	x19, [x19]
  41e1b8:	b	41e19c <ferror@plt+0x1b3cc>
  41e1bc:	mov	w20, #0x0                   	// #0
  41e1c0:	ldr	w0, [x21, #12]
  41e1c4:	cmp	w0, w20
  41e1c8:	b.ls	41e1ec <ferror@plt+0x1b41c>  // b.plast
  41e1cc:	mov	w0, w20
  41e1d0:	madd	x0, x0, x23, x23
  41e1d4:	add	x1, x22, x0
  41e1d8:	add	x0, x21, x0
  41e1dc:	bl	428194 <ferror@plt+0x253c4>
  41e1e0:	cbz	w0, 41e1ec <ferror@plt+0x1b41c>
  41e1e4:	add	w20, w20, #0x1
  41e1e8:	b	41e1c0 <ferror@plt+0x1b3f0>
  41e1ec:	ldr	w0, [x21, #12]
  41e1f0:	cmp	w0, w20
  41e1f4:	b.ne	41e1b4 <ferror@plt+0x1b3e4>  // b.any
  41e1f8:	mov	x0, x19
  41e1fc:	ldp	x19, x20, [sp, #16]
  41e200:	ldp	x21, x22, [sp, #32]
  41e204:	ldr	x23, [sp, #48]
  41e208:	ldp	x29, x30, [sp], #64
  41e20c:	ret
  41e210:	stp	x29, x30, [sp, #-48]!
  41e214:	mov	x29, sp
  41e218:	stp	x19, x20, [sp, #16]
  41e21c:	mov	x19, x0
  41e220:	and	w20, w1, #0xff
  41e224:	bl	42aac4 <ferror@plt+0x27cf4>
  41e228:	ldrb	w4, [x0, #4]
  41e22c:	cmp	w4, #0x3e
  41e230:	b.eq	41e26c <ferror@plt+0x1b49c>  // b.none
  41e234:	cmp	w20, #0x0
  41e238:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  41e23c:	adrp	x3, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  41e240:	add	x0, x0, #0x858
  41e244:	add	x3, x3, #0x680
  41e248:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  41e24c:	csel	x3, x3, x0, ne  // ne = any
  41e250:	add	x2, x2, #0x52e
  41e254:	mov	x0, x19
  41e258:	mov	w1, #0x3                   	// #3
  41e25c:	bl	421610 <ferror@plt+0x1e840>
  41e260:	ldp	x19, x20, [sp, #16]
  41e264:	ldp	x29, x30, [sp], #48
  41e268:	ret
  41e26c:	add	x1, x0, #0x8
  41e270:	add	x3, sp, #0x20
  41e274:	mov	x0, x19
  41e278:	mov	x2, #0x1                   	// #1
  41e27c:	bl	41dacc <ferror@plt+0x1acfc>
  41e280:	tst	w0, #0xff
  41e284:	b.eq	41e234 <ferror@plt+0x1b464>  // b.none
  41e288:	ldr	w0, [sp, #32]
  41e28c:	cbz	w0, 41e234 <ferror@plt+0x1b464>
  41e290:	ldr	x3, [sp, #40]
  41e294:	cmp	w20, #0x0
  41e298:	mov	x0, x19
  41e29c:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  41e2a0:	mov	w1, #0x3                   	// #3
  41e2a4:	add	x2, x2, #0xf8c
  41e2a8:	csel	w1, w1, wzr, ne  // ne = any
  41e2ac:	bl	421610 <ferror@plt+0x1e840>
  41e2b0:	ldr	x0, [sp, #40]
  41e2b4:	bl	402b30 <free@plt>
  41e2b8:	b	41e260 <ferror@plt+0x1b490>
  41e2bc:	mov	w1, #0x1                   	// #1
  41e2c0:	b	41e210 <ferror@plt+0x1b440>
  41e2c4:	mov	w1, #0x0                   	// #0
  41e2c8:	b	41e210 <ferror@plt+0x1b440>
  41e2cc:	stp	x29, x30, [sp, #-64]!
  41e2d0:	mov	x29, sp
  41e2d4:	stp	x19, x20, [sp, #16]
  41e2d8:	mov	x20, #0x0                   	// #0
  41e2dc:	stp	x21, x22, [sp, #32]
  41e2e0:	mov	x21, x0
  41e2e4:	mov	x0, #0x400                 	// #1024
  41e2e8:	stp	x23, x24, [sp, #48]
  41e2ec:	bl	44526c <_obstack_memory_used@@Base+0x868>
  41e2f0:	mov	x19, x0
  41e2f4:	mov	x24, #0x400                 	// #1024
  41e2f8:	mov	w23, #0x20                  	// #32
  41e2fc:	mov	x0, x21
  41e300:	bl	41e0a4 <ferror@plt+0x1b2d4>
  41e304:	ldrb	w1, [x0, #4]
  41e308:	mov	x22, x0
  41e30c:	cmp	w1, #0x2
  41e310:	b.eq	41e330 <ferror@plt+0x1b560>  // b.none
  41e314:	cmp	w1, #0x16
  41e318:	b.ne	41e34c <ferror@plt+0x1b57c>  // b.any
  41e31c:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  41e320:	mov	x0, x21
  41e324:	add	x2, x2, #0x551
  41e328:	mov	w1, #0x3                   	// #3
  41e32c:	bl	421610 <ferror@plt+0x1e840>
  41e330:	strb	wzr, [x19, x20]
  41e334:	mov	x0, x19
  41e338:	ldp	x19, x20, [sp, #16]
  41e33c:	ldp	x21, x22, [sp, #32]
  41e340:	ldp	x23, x24, [sp, #48]
  41e344:	ldp	x29, x30, [sp], #64
  41e348:	ret
  41e34c:	bl	427dbc <ferror@plt+0x24fec>
  41e350:	add	w1, w0, #0x2
  41e354:	add	x0, x20, x1
  41e358:	cmp	x0, x24
  41e35c:	b.ls	41e378 <ferror@plt+0x1b5a8>  // b.plast
  41e360:	add	x1, x24, x1
  41e364:	mov	x0, x19
  41e368:	lsl	x24, x1, #1
  41e36c:	mov	x1, x24
  41e370:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  41e374:	mov	x19, x0
  41e378:	ldrh	w0, [x22, #6]
  41e37c:	tbz	w0, #0, 41e388 <ferror@plt+0x1b5b8>
  41e380:	strb	w23, [x19, x20]
  41e384:	add	x20, x20, #0x1
  41e388:	add	x2, x19, x20
  41e38c:	mov	x1, x22
  41e390:	mov	x0, x21
  41e394:	mov	w3, #0x1                   	// #1
  41e398:	bl	427e74 <ferror@plt+0x250a4>
  41e39c:	sub	x20, x0, x19
  41e3a0:	b	41e2fc <ferror@plt+0x1b52c>
  41e3a4:	stp	x29, x30, [sp, #-64]!
  41e3a8:	mov	x29, sp
  41e3ac:	stp	x19, x20, [sp, #16]
  41e3b0:	mov	x19, x0
  41e3b4:	ldr	x0, [x0, #448]
  41e3b8:	stp	x21, x22, [sp, #32]
  41e3bc:	mov	w21, w1
  41e3c0:	str	x23, [sp, #48]
  41e3c4:	mov	w22, w2
  41e3c8:	ldur	w23, [x0, #-24]
  41e3cc:	cbz	w3, 41e448 <ferror@plt+0x1b678>
  41e3d0:	ldr	x0, [x19, #144]
  41e3d4:	ldr	x1, [x0, #8]
  41e3d8:	ldrb	w0, [x19, #24]
  41e3dc:	add	w0, w0, #0x1
  41e3e0:	strb	w0, [x19, #24]
  41e3e4:	mov	x0, x19
  41e3e8:	bl	428580 <ferror@plt+0x257b0>
  41e3ec:	mov	x20, x0
  41e3f0:	ldrb	w0, [x19, #24]
  41e3f4:	cmp	w22, #0x0
  41e3f8:	adrp	x4, 466000 <_obstack_memory_used@@Base+0x215fc>
  41e3fc:	add	x4, x4, #0xf8c
  41e400:	sub	w0, w0, #0x1
  41e404:	strb	w0, [x19, #24]
  41e408:	cset	w0, ne  // ne = any
  41e40c:	cmp	w0, #0x0
  41e410:	ccmp	w21, #0x1, #0x0, ne  // ne = any
  41e414:	b.ne	41e450 <ferror@plt+0x1b680>  // b.any
  41e418:	mov	x5, x20
  41e41c:	mov	w2, w23
  41e420:	mov	w1, w22
  41e424:	mov	x0, x19
  41e428:	mov	w3, #0x0                   	// #0
  41e42c:	bl	421924 <ferror@plt+0x1eb54>
  41e430:	mov	x0, x20
  41e434:	ldp	x19, x20, [sp, #16]
  41e438:	ldp	x21, x22, [sp, #32]
  41e43c:	ldr	x23, [sp, #48]
  41e440:	ldp	x29, x30, [sp], #64
  41e444:	b	402b30 <free@plt>
  41e448:	mov	x1, #0x0                   	// #0
  41e44c:	b	41e3d8 <ferror@plt+0x1b608>
  41e450:	cmp	w21, #0x0
  41e454:	mov	x5, x20
  41e458:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  41e45c:	mov	w2, w23
  41e460:	mov	w3, #0x0                   	// #0
  41e464:	b.eq	41e478 <ferror@plt+0x1b6a8>  // b.none
  41e468:	mov	w1, w22
  41e46c:	mov	x0, x19
  41e470:	bl	42183c <ferror@plt+0x1ea6c>
  41e474:	b	41e430 <ferror@plt+0x1b660>
  41e478:	mov	w1, w21
  41e47c:	mov	x0, x19
  41e480:	bl	4217cc <ferror@plt+0x1e9fc>
  41e484:	b	41e430 <ferror@plt+0x1b660>
  41e488:	mov	w3, #0x1                   	// #1
  41e48c:	mov	w2, #0x12                  	// #18
  41e490:	mov	w1, w3
  41e494:	b	41e3a4 <ferror@plt+0x1b5d4>
  41e498:	mov	w3, #0x1                   	// #1
  41e49c:	mov	w2, #0x0                   	// #0
  41e4a0:	mov	w1, #0x3                   	// #3
  41e4a4:	b	41e3a4 <ferror@plt+0x1b5d4>
  41e4a8:	stp	x29, x30, [sp, #-64]!
  41e4ac:	mov	x29, sp
  41e4b0:	stp	x19, x20, [sp, #16]
  41e4b4:	add	x19, x0, #0x328
  41e4b8:	mov	x20, x0
  41e4bc:	stp	x21, x22, [sp, #32]
  41e4c0:	mov	w22, w1
  41e4c4:	mov	x21, x3
  41e4c8:	stp	x23, x24, [sp, #48]
  41e4cc:	mov	w23, w2
  41e4d0:	ldr	x24, [x0]
  41e4d4:	ldp	x1, x0, [x19, #24]
  41e4d8:	sub	x0, x0, x1
  41e4dc:	cmp	x0, #0x1f
  41e4e0:	b.hi	41e4f0 <ferror@plt+0x1b720>  // b.pmore
  41e4e4:	mov	x0, x19
  41e4e8:	mov	x1, #0x20                  	// #32
  41e4ec:	bl	444840 <_obstack_newchunk@@Base>
  41e4f0:	ldp	x0, x3, [x19, #16]
  41e4f4:	add	x3, x3, #0x20
  41e4f8:	cmp	x3, x0
  41e4fc:	b.ne	41e50c <ferror@plt+0x1b73c>  // b.any
  41e500:	ldrb	w1, [x19, #80]
  41e504:	orr	w1, w1, #0x2
  41e508:	strb	w1, [x19, #80]
  41e50c:	ldr	x4, [x19, #48]
  41e510:	ldr	x1, [x19, #8]
  41e514:	add	x3, x3, x4
  41e518:	ldr	x2, [x19, #32]
  41e51c:	bic	x4, x3, x4
  41e520:	sub	x3, x4, x1
  41e524:	sub	x1, x2, x1
  41e528:	cmp	x3, x1
  41e52c:	ldr	w1, [x20, #48]
  41e530:	csel	x4, x4, x2, ls  // ls = plast
  41e534:	stp	x4, x4, [x19, #16]
  41e538:	mov	w2, #0x1                   	// #1
  41e53c:	str	w1, [x0, #8]
  41e540:	sub	w3, w2, w22
  41e544:	ldr	x1, [x24, #96]
  41e548:	str	x1, [x0]
  41e54c:	and	w3, w3, w2
  41e550:	ldrb	w1, [x20, #18]
  41e554:	cmp	w1, #0x0
  41e558:	cset	w1, ne  // ne = any
  41e55c:	strb	w1, [x0, #25]
  41e560:	ldrb	w1, [x20, #440]
  41e564:	csel	w3, w3, w2, eq  // eq = none
  41e568:	strb	w3, [x0, #24]
  41e56c:	str	w23, [x0, #28]
  41e570:	cbz	w1, 41e5a0 <ferror@plt+0x1b7d0>
  41e574:	ldr	x1, [x20, #424]
  41e578:	cmp	x1, #0x0
  41e57c:	csel	x21, x21, xzr, eq  // eq = none
  41e580:	str	x21, [x0, #16]
  41e584:	strb	w22, [x20, #18]
  41e588:	ldp	x19, x20, [sp, #16]
  41e58c:	ldp	x21, x22, [sp, #32]
  41e590:	str	x0, [x24, #96]
  41e594:	ldp	x23, x24, [sp, #48]
  41e598:	ldp	x29, x30, [sp], #64
  41e59c:	ret
  41e5a0:	mov	x21, #0x0                   	// #0
  41e5a4:	b	41e580 <ferror@plt+0x1b7b0>
  41e5a8:	stp	x29, x30, [sp, #-32]!
  41e5ac:	mov	x29, sp
  41e5b0:	str	x19, [sp, #16]
  41e5b4:	mov	x19, x0
  41e5b8:	ldrb	w1, [x0, #18]
  41e5bc:	cbnz	w1, 41e5e8 <ferror@plt+0x1b818>
  41e5c0:	mov	w1, #0x1                   	// #1
  41e5c4:	bl	42363c <ferror@plt+0x2086c>
  41e5c8:	and	w1, w0, #0xff
  41e5cc:	eor	w1, w1, #0x1
  41e5d0:	mov	x0, x19
  41e5d4:	mov	w2, #0x4                   	// #4
  41e5d8:	ldr	x3, [x19, #432]
  41e5dc:	ldr	x19, [sp, #16]
  41e5e0:	ldp	x29, x30, [sp], #32
  41e5e4:	b	41e4a8 <ferror@plt+0x1b6d8>
  41e5e8:	mov	w1, #0x1                   	// #1
  41e5ec:	b	41e5d0 <ferror@plt+0x1b800>
  41e5f0:	stp	x29, x30, [sp, #-32]!
  41e5f4:	mov	w1, #0x1                   	// #1
  41e5f8:	mov	x29, sp
  41e5fc:	stp	x19, x20, [sp, #16]
  41e600:	mov	x19, x0
  41e604:	bl	41df24 <ferror@plt+0x1b154>
  41e608:	cbz	x0, 41e670 <ferror@plt+0x1b8a0>
  41e60c:	mov	x20, x0
  41e610:	ldrb	w0, [x19, #1124]
  41e614:	ldr	x1, [x19, #1024]
  41e618:	cmp	w0, #0x0
  41e61c:	cset	w0, eq  // eq = none
  41e620:	strb	w0, [x19, #21]
  41e624:	cbz	x1, 41e630 <ferror@plt+0x1b860>
  41e628:	mov	x0, x19
  41e62c:	blr	x1
  41e630:	mov	x1, x20
  41e634:	mov	x0, x19
  41e638:	bl	42e710 <ferror@plt+0x2b940>
  41e63c:	tst	w0, #0xff
  41e640:	b.eq	41e65c <ferror@plt+0x1b88c>  // b.none
  41e644:	ldr	x3, [x19, #936]
  41e648:	cbz	x3, 41e65c <ferror@plt+0x1b88c>
  41e64c:	ldr	w1, [x19, #48]
  41e650:	mov	x2, x20
  41e654:	mov	x0, x19
  41e658:	blr	x3
  41e65c:	ldrh	w0, [x20, #18]
  41e660:	ubfx	x1, x0, #2, #8
  41e664:	and	w1, w1, #0xffffffdf
  41e668:	bfi	w0, w1, #2, #8
  41e66c:	strh	w0, [x20, #18]
  41e670:	ldp	x19, x20, [sp, #16]
  41e674:	ldp	x29, x30, [sp], #32
  41e678:	ret
  41e67c:	stp	x29, x30, [sp, #-48]!
  41e680:	mov	x29, sp
  41e684:	ldr	x1, [x0, #144]
  41e688:	stp	x19, x20, [sp, #16]
  41e68c:	mov	x19, x0
  41e690:	str	x21, [sp, #32]
  41e694:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x215fc>
  41e698:	add	x0, x0, #0xcc0
  41e69c:	cmp	x1, x0
  41e6a0:	b.eq	41e720 <ferror@plt+0x1b950>  // b.none
  41e6a4:	cbz	x1, 41e73c <ferror@plt+0x1b96c>
  41e6a8:	ldrb	w20, [x1, #19]
  41e6ac:	eor	x20, x20, #0x10
  41e6b0:	ubfx	w20, w20, #4, #1
  41e6b4:	ldrb	w2, [x19, #18]
  41e6b8:	cmp	w2, #0x0
  41e6bc:	add	x2, x0, #0x60
  41e6c0:	cset	w21, ne  // ne = any
  41e6c4:	cmp	x1, x2
  41e6c8:	b.ne	41e744 <ferror@plt+0x1b974>  // b.any
  41e6cc:	mov	w0, #0x1                   	// #1
  41e6d0:	strb	wzr, [x19, #18]
  41e6d4:	strb	w0, [x19, #20]
  41e6d8:	cbz	w20, 41e6e8 <ferror@plt+0x1b918>
  41e6dc:	ldrb	w0, [x19, #24]
  41e6e0:	add	w0, w0, #0x1
  41e6e4:	strb	w0, [x19, #24]
  41e6e8:	mov	x0, x19
  41e6ec:	mov	w2, #0x0                   	// #0
  41e6f0:	mov	x1, #0x0                   	// #0
  41e6f4:	bl	432554 <ferror@plt+0x2f784>
  41e6f8:	cbz	w20, 41e708 <ferror@plt+0x1b938>
  41e6fc:	ldrb	w0, [x19, #24]
  41e700:	sub	w0, w0, #0x1
  41e704:	strb	w0, [x19, #24]
  41e708:	ldr	x1, [x19, #1312]
  41e70c:	strb	w21, [x19, #18]
  41e710:	ldr	x2, [x19, #1328]
  41e714:	mov	x0, x19
  41e718:	sub	x2, x2, x1
  41e71c:	bl	4324f4 <ferror@plt+0x2f724>
  41e720:	ldrb	w0, [x19, #24]
  41e724:	add	w0, w0, #0x1
  41e728:	strb	w0, [x19, #24]
  41e72c:	ldp	x19, x20, [sp, #16]
  41e730:	ldr	x21, [sp, #32]
  41e734:	ldp	x29, x30, [sp], #48
  41e738:	ret
  41e73c:	mov	w20, #0x0                   	// #0
  41e740:	b	41e6b4 <ferror@plt+0x1b8e4>
  41e744:	add	x0, x0, #0xd8
  41e748:	cmp	x1, x0
  41e74c:	b.eq	41e6cc <ferror@plt+0x1b8fc>  // b.none
  41e750:	strb	wzr, [x19, #20]
  41e754:	b	41e6d8 <ferror@plt+0x1b908>
  41e758:	stp	x29, x30, [sp, #-48]!
  41e75c:	mov	x29, sp
  41e760:	stp	x19, x20, [sp, #16]
  41e764:	mov	x20, x1
  41e768:	mov	x19, x2
  41e76c:	stp	x21, x22, [sp, #32]
  41e770:	mov	x21, x0
  41e774:	cbz	x20, 41e7c4 <ferror@plt+0x1b9f4>
  41e778:	ldrb	w0, [x20, #16]
  41e77c:	cbz	w0, 41e794 <ferror@plt+0x1b9c4>
  41e780:	ldr	x1, [x20, #24]
  41e784:	mov	x2, x19
  41e788:	mov	x0, x21
  41e78c:	bl	41e758 <ferror@plt+0x1b988>
  41e790:	mov	x19, x0
  41e794:	ldr	x22, [x19]
  41e798:	mov	x0, x22
  41e79c:	bl	402700 <strlen@plt>
  41e7a0:	mov	x1, x22
  41e7a4:	mov	w2, w0
  41e7a8:	mov	x0, x21
  41e7ac:	bl	426c40 <ferror@plt+0x23e70>
  41e7b0:	str	x0, [x20, #8]
  41e7b4:	ldr	x0, [x19], #8
  41e7b8:	bl	402b30 <free@plt>
  41e7bc:	ldr	x20, [x20]
  41e7c0:	b	41e774 <ferror@plt+0x1b9a4>
  41e7c4:	mov	x0, x19
  41e7c8:	ldp	x19, x20, [sp, #16]
  41e7cc:	ldp	x21, x22, [sp, #32]
  41e7d0:	ldp	x29, x30, [sp], #48
  41e7d4:	ret
  41e7d8:	stp	x29, x30, [sp, #-32]!
  41e7dc:	mov	x29, sp
  41e7e0:	stp	x19, x20, [sp, #16]
  41e7e4:	mov	x20, x0
  41e7e8:	cbz	x20, 41e82c <ferror@plt+0x1ba5c>
  41e7ec:	ldrb	w0, [x20, #16]
  41e7f0:	cbz	w0, 41e800 <ferror@plt+0x1ba30>
  41e7f4:	ldr	x0, [x20, #24]
  41e7f8:	bl	41e7d8 <ferror@plt+0x1ba08>
  41e7fc:	mov	x1, x0
  41e800:	ldr	x0, [x20, #8]
  41e804:	mov	x19, x1
  41e808:	ldr	w3, [x0, #8]
  41e80c:	ldr	x0, [x0]
  41e810:	mov	w1, w3
  41e814:	add	w2, w3, #0x1
  41e818:	bl	445334 <_obstack_memory_used@@Base+0x930>
  41e81c:	str	x0, [x19], #8
  41e820:	ldr	x20, [x20]
  41e824:	mov	x1, x19
  41e828:	b	41e7e8 <ferror@plt+0x1ba18>
  41e82c:	mov	x0, x1
  41e830:	ldp	x19, x20, [sp, #16]
  41e834:	ldp	x29, x30, [sp], #32
  41e838:	ret
  41e83c:	stp	x29, x30, [sp, #-48]!
  41e840:	mov	x29, sp
  41e844:	stp	x19, x20, [sp, #16]
  41e848:	mov	x19, x0
  41e84c:	str	x21, [sp, #32]
  41e850:	bl	41e0a4 <ferror@plt+0x1b2d4>
  41e854:	mov	x20, x0
  41e858:	ldrb	w0, [x0, #4]
  41e85c:	cmp	w0, #0x16
  41e860:	b.ne	41e870 <ferror@plt+0x1baa0>  // b.any
  41e864:	mov	x0, x19
  41e868:	mov	w1, #0x1                   	// #1
  41e86c:	bl	42e2d4 <ferror@plt+0x2b504>
  41e870:	ldrb	w0, [x20, #4]
  41e874:	cmp	w0, #0x14
  41e878:	b.ne	41e8e4 <ferror@plt+0x1bb14>  // b.any
  41e87c:	mov	x0, x19
  41e880:	bl	41e0a4 <ferror@plt+0x1b2d4>
  41e884:	mov	x20, x0
  41e888:	ldrb	w0, [x0, #4]
  41e88c:	cmp	w0, #0x16
  41e890:	b.ne	41e8a0 <ferror@plt+0x1bad0>  // b.any
  41e894:	mov	x0, x19
  41e898:	mov	w1, #0x1                   	// #1
  41e89c:	bl	42e2d4 <ferror@plt+0x2b504>
  41e8a0:	ldrb	w0, [x20, #4]
  41e8a4:	sub	w0, w0, #0x3e
  41e8a8:	and	w0, w0, #0xff
  41e8ac:	cmp	w0, #0x4
  41e8b0:	b.hi	41e8e4 <ferror@plt+0x1bb14>  // b.pmore
  41e8b4:	mov	x0, x19
  41e8b8:	bl	41e0a4 <ferror@plt+0x1b2d4>
  41e8bc:	mov	x21, x0
  41e8c0:	ldrb	w0, [x0, #4]
  41e8c4:	cmp	w0, #0x16
  41e8c8:	b.ne	41e8d8 <ferror@plt+0x1bb08>  // b.any
  41e8cc:	mov	x0, x19
  41e8d0:	mov	w1, #0x1                   	// #1
  41e8d4:	bl	42e2d4 <ferror@plt+0x2b504>
  41e8d8:	ldrb	w0, [x21, #4]
  41e8dc:	cmp	w0, #0x15
  41e8e0:	b.eq	41e8e8 <ferror@plt+0x1bb18>  // b.none
  41e8e4:	mov	x20, #0x0                   	// #0
  41e8e8:	mov	x0, x20
  41e8ec:	ldp	x19, x20, [sp, #16]
  41e8f0:	ldr	x21, [sp, #32]
  41e8f4:	ldp	x29, x30, [sp], #48
  41e8f8:	ret
  41e8fc:	stp	x29, x30, [sp, #-32]!
  41e900:	mov	x29, sp
  41e904:	stp	x19, x20, [sp, #16]
  41e908:	mov	w20, w2
  41e90c:	ldr	x2, [x0, #448]
  41e910:	ldurb	w2, [x2, #-20]
  41e914:	cmp	w2, #0x16
  41e918:	b.eq	41e964 <ferror@plt+0x1bb94>  // b.none
  41e91c:	mov	x19, x0
  41e920:	and	w1, w1, #0xff
  41e924:	cbz	w1, 41e95c <ferror@plt+0x1bb8c>
  41e928:	bl	430978 <ferror@plt+0x2dba8>
  41e92c:	ldrb	w0, [x0, #4]
  41e930:	cmp	w0, #0x16
  41e934:	b.eq	41e964 <ferror@plt+0x1bb94>  // b.none
  41e938:	ldr	x0, [x19, #144]
  41e93c:	mov	w1, w20
  41e940:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  41e944:	add	x2, x2, #0x571
  41e948:	ldr	x3, [x0, #8]
  41e94c:	mov	x0, x19
  41e950:	ldp	x19, x20, [sp, #16]
  41e954:	ldp	x29, x30, [sp], #32
  41e958:	b	4216ec <ferror@plt+0x1e91c>
  41e95c:	bl	42aac4 <ferror@plt+0x27cf4>
  41e960:	b	41e92c <ferror@plt+0x1bb5c>
  41e964:	ldp	x19, x20, [sp, #16]
  41e968:	ldp	x29, x30, [sp], #32
  41e96c:	ret
  41e970:	mov	w2, #0x0                   	// #0
  41e974:	b	41e8fc <ferror@plt+0x1bb2c>
  41e978:	stp	x29, x30, [sp, #-32]!
  41e97c:	mov	x29, sp
  41e980:	str	x19, [sp, #16]
  41e984:	mov	x19, x0
  41e988:	bl	430978 <ferror@plt+0x2dba8>
  41e98c:	ldrb	w1, [x0, #4]
  41e990:	cmp	w1, #0x3e
  41e994:	b.eq	41e9c8 <ferror@plt+0x1bbf8>  // b.none
  41e998:	ldr	x0, [x19, #144]
  41e99c:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  41e9a0:	mov	w1, #0x3                   	// #3
  41e9a4:	add	x2, x2, #0x596
  41e9a8:	ldr	x3, [x0, #8]
  41e9ac:	mov	x0, x19
  41e9b0:	bl	421610 <ferror@plt+0x1e840>
  41e9b4:	mov	x0, x19
  41e9b8:	mov	w1, #0x0                   	// #0
  41e9bc:	ldr	x19, [sp, #16]
  41e9c0:	ldp	x29, x30, [sp], #32
  41e9c4:	b	41e970 <ferror@plt+0x1bba0>
  41e9c8:	ldr	x3, [x19, #952]
  41e9cc:	cbz	x3, 41e9b4 <ferror@plt+0x1bbe4>
  41e9d0:	ldr	w1, [x19, #48]
  41e9d4:	add	x2, x0, #0x8
  41e9d8:	mov	x0, x19
  41e9dc:	blr	x3
  41e9e0:	b	41e9b4 <ferror@plt+0x1bbe4>
  41e9e4:	stp	x29, x30, [sp, #-96]!
  41e9e8:	mov	x29, sp
  41e9ec:	stp	x21, x22, [sp, #32]
  41e9f0:	mov	x21, x3
  41e9f4:	adrp	x22, 466000 <_obstack_memory_used@@Base+0x215fc>
  41e9f8:	stp	x19, x20, [sp, #16]
  41e9fc:	mov	x19, x0
  41ea00:	add	x22, x22, #0xcc0
  41ea04:	stp	x23, x24, [sp, #48]
  41ea08:	mov	x24, x1
  41ea0c:	mov	x23, x2
  41ea10:	stp	x25, x26, [sp, #64]
  41ea14:	stp	x27, x28, [sp, #80]
  41ea18:	bl	41e0a4 <ferror@plt+0x1b2d4>
  41ea1c:	mov	x20, x0
  41ea20:	ldr	w0, [x0]
  41ea24:	str	w0, [x21]
  41ea28:	ldrb	w0, [x20, #4]
  41ea2c:	cmp	w0, #0x3e
  41ea30:	b.ne	41ea90 <ferror@plt+0x1bcc0>  // b.any
  41ea34:	ldr	x0, [x20, #16]
  41ea38:	ldrb	w0, [x0]
  41ea3c:	cmp	w0, #0x52
  41ea40:	b.ne	41ea98 <ferror@plt+0x1bcc8>  // b.any
  41ea44:	ldr	x0, [x19, #144]
  41ea48:	add	x22, x22, #0x108
  41ea4c:	cmp	x0, x22
  41ea50:	b.eq	41eb20 <ferror@plt+0x1bd50>  // b.none
  41ea54:	ldr	x3, [x0, #8]
  41ea58:	mov	x21, #0x0                   	// #0
  41ea5c:	mov	x0, x19
  41ea60:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  41ea64:	mov	w1, #0x3                   	// #3
  41ea68:	add	x2, x2, #0x5be
  41ea6c:	bl	421610 <ferror@plt+0x1e840>
  41ea70:	mov	x0, x21
  41ea74:	ldp	x19, x20, [sp, #16]
  41ea78:	ldp	x21, x22, [sp, #32]
  41ea7c:	ldp	x23, x24, [sp, #48]
  41ea80:	ldp	x25, x26, [sp, #64]
  41ea84:	ldp	x27, x28, [sp, #80]
  41ea88:	ldp	x29, x30, [sp], #96
  41ea8c:	ret
  41ea90:	cmp	w0, #0x44
  41ea94:	b.ne	41eb04 <ferror@plt+0x1bd34>  // b.any
  41ea98:	ldr	w0, [x20, #8]
  41ea9c:	sub	w0, w0, #0x1
  41eaa0:	bl	44526c <_obstack_memory_used@@Base+0x868>
  41eaa4:	ldr	x1, [x20, #16]
  41eaa8:	mov	x21, x0
  41eaac:	ldr	w2, [x20, #8]
  41eab0:	add	x1, x1, #0x1
  41eab4:	sub	w2, w2, #0x2
  41eab8:	bl	4026a0 <memcpy@plt>
  41eabc:	ldr	w0, [x20, #8]
  41eac0:	sub	w0, w0, #0x2
  41eac4:	strb	wzr, [x21, x0]
  41eac8:	ldrb	w0, [x20, #4]
  41eacc:	cmp	w0, #0x44
  41ead0:	cset	w0, eq  // eq = none
  41ead4:	str	w0, [x24]
  41ead8:	add	x22, x22, #0x108
  41eadc:	ldr	x0, [x19, #144]
  41eae0:	cmp	x0, x22
  41eae4:	b.eq	41ea70 <ferror@plt+0x1bca0>  // b.none
  41eae8:	cbz	x23, 41eaf4 <ferror@plt+0x1bd24>
  41eaec:	ldrb	w0, [x19, #1123]
  41eaf0:	cbz	w0, 41eb2c <ferror@plt+0x1bd5c>
  41eaf4:	mov	x0, x19
  41eaf8:	mov	w1, #0x1                   	// #1
  41eafc:	bl	41e970 <ferror@plt+0x1bba0>
  41eb00:	b	41ea70 <ferror@plt+0x1bca0>
  41eb04:	cmp	w0, #0x3
  41eb08:	b.ne	41ea44 <ferror@plt+0x1bc74>  // b.any
  41eb0c:	mov	x0, x19
  41eb10:	bl	41e2cc <ferror@plt+0x1b4fc>
  41eb14:	mov	x21, x0
  41eb18:	mov	w0, #0x1                   	// #1
  41eb1c:	b	41ead4 <ferror@plt+0x1bd04>
  41eb20:	adrp	x3, 466000 <_obstack_memory_used@@Base+0x215fc>
  41eb24:	add	x3, x3, #0x5ac
  41eb28:	b	41ea58 <ferror@plt+0x1bc88>
  41eb2c:	mov	x0, #0x40                  	// #64
  41eb30:	bl	44526c <_obstack_memory_used@@Base+0x868>
  41eb34:	mov	x20, x0
  41eb38:	ldr	x0, [x19, #448]
  41eb3c:	ldurb	w0, [x0, #-20]
  41eb40:	cmp	w0, #0x16
  41eb44:	b.ne	41eb58 <ferror@plt+0x1bd88>  // b.any
  41eb48:	mov	x22, #0x0                   	// #0
  41eb4c:	str	xzr, [x20, x22, lsl #3]
  41eb50:	str	x20, [x23]
  41eb54:	b	41ea70 <ferror@plt+0x1bca0>
  41eb58:	adrp	x26, 466000 <_obstack_memory_used@@Base+0x215fc>
  41eb5c:	add	x26, x26, #0x571
  41eb60:	mov	x25, #0x8                   	// #8
  41eb64:	mov	x22, #0x0                   	// #0
  41eb68:	mov	x0, x19
  41eb6c:	bl	42aac4 <ferror@plt+0x27cf4>
  41eb70:	mov	x24, x0
  41eb74:	ldrb	w0, [x0, #4]
  41eb78:	cmp	w0, #0x16
  41eb7c:	b.eq	41eb4c <ferror@plt+0x1bd7c>  // b.none
  41eb80:	cmp	w0, #0x4f
  41eb84:	b.eq	41eba4 <ferror@plt+0x1bdd4>  // b.none
  41eb88:	ldr	x0, [x19, #144]
  41eb8c:	mov	x2, x26
  41eb90:	mov	w1, #0x2                   	// #2
  41eb94:	ldr	x3, [x0, #8]
  41eb98:	mov	x0, x19
  41eb9c:	bl	421610 <ferror@plt+0x1e840>
  41eba0:	b	41eb68 <ferror@plt+0x1bd98>
  41eba4:	add	x27, x22, #0x1
  41eba8:	cmp	x27, x25
  41ebac:	b.cc	41ebc8 <ferror@plt+0x1bdf8>  // b.lo, b.ul, b.last
  41ebb0:	lsl	x28, x25, #1
  41ebb4:	lsl	x1, x25, #4
  41ebb8:	mov	x0, x20
  41ebbc:	mov	x25, x28
  41ebc0:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  41ebc4:	mov	x20, x0
  41ebc8:	str	x24, [x20, x22, lsl #3]
  41ebcc:	mov	x22, x27
  41ebd0:	b	41eb68 <ferror@plt+0x1bd98>
  41ebd4:	stp	x29, x30, [sp, #-48]!
  41ebd8:	mov	x2, #0x0                   	// #0
  41ebdc:	mov	x29, sp
  41ebe0:	add	x3, sp, #0x2c
  41ebe4:	add	x1, sp, #0x28
  41ebe8:	stp	x19, x20, [sp, #16]
  41ebec:	mov	x19, x0
  41ebf0:	bl	41e9e4 <ferror@plt+0x1bc14>
  41ebf4:	cbz	x0, 41ec34 <ferror@plt+0x1be64>
  41ebf8:	ldr	w2, [sp, #40]
  41ebfc:	mov	x1, x0
  41ec00:	mov	x20, x0
  41ec04:	mov	x0, x19
  41ec08:	bl	42677c <ferror@plt+0x239ac>
  41ec0c:	cmp	w0, #0x0
  41ec10:	b.ge	41ec40 <ferror@plt+0x1be70>  // b.tcont
  41ec14:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  41ec18:	mov	x3, x20
  41ec1c:	add	x2, x2, #0x5e3
  41ec20:	mov	x0, x19
  41ec24:	mov	w1, #0x0                   	// #0
  41ec28:	bl	421610 <ferror@plt+0x1e840>
  41ec2c:	mov	x0, x20
  41ec30:	bl	402b30 <free@plt>
  41ec34:	ldp	x19, x20, [sp, #16]
  41ec38:	ldp	x29, x30, [sp], #48
  41ec3c:	ret
  41ec40:	b.eq	41ec2c <ferror@plt+0x1be5c>  // b.none
  41ec44:	mov	x3, x20
  41ec48:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  41ec4c:	add	x2, x2, #0x5fe
  41ec50:	mov	w1, #0x0                   	// #0
  41ec54:	mov	x0, x19
  41ec58:	bl	421610 <ferror@plt+0x1e840>
  41ec5c:	mov	x0, x19
  41ec60:	bl	430978 <ferror@plt+0x2dba8>
  41ec64:	ldrb	w0, [x0, #4]
  41ec68:	cmp	w0, #0x16
  41ec6c:	b.eq	41ec2c <ferror@plt+0x1be5c>  // b.none
  41ec70:	mov	x0, x19
  41ec74:	mov	w1, #0x1                   	// #1
  41ec78:	bl	42e2d4 <ferror@plt+0x2b504>
  41ec7c:	mov	x0, x19
  41ec80:	mov	w3, #0x0                   	// #0
  41ec84:	mov	w2, #0x0                   	// #0
  41ec88:	mov	w1, #0x0                   	// #0
  41ec8c:	bl	41e3a4 <ferror@plt+0x1b5d4>
  41ec90:	b	41ec2c <ferror@plt+0x1be5c>
  41ec94:	stp	x29, x30, [sp, #-32]!
  41ec98:	mov	x29, sp
  41ec9c:	ldr	x1, [x0, #40]
  41eca0:	ldr	w1, [x1, #48]
  41eca4:	str	x19, [sp, #16]
  41eca8:	mov	x19, x0
  41ecac:	cmp	w1, #0x1
  41ecb0:	b.ne	41ecc4 <ferror@plt+0x1bef4>  // b.any
  41ecb4:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  41ecb8:	mov	w1, #0x0                   	// #0
  41ecbc:	add	x2, x2, #0x61c
  41ecc0:	bl	421610 <ferror@plt+0x1e840>
  41ecc4:	mov	x0, x19
  41ecc8:	mov	w1, #0x0                   	// #0
  41eccc:	bl	41e970 <ferror@plt+0x1bba0>
  41ecd0:	ldr	x0, [x19]
  41ecd4:	ldr	x1, [x0, #80]
  41ecd8:	mov	x0, x19
  41ecdc:	ldr	x19, [sp, #16]
  41ece0:	ldp	x29, x30, [sp], #32
  41ece4:	b	426274 <ferror@plt+0x234a4>
  41ece8:	stp	x29, x30, [sp, #-32]!
  41ecec:	mov	w1, #0x1                   	// #1
  41ecf0:	mov	x29, sp
  41ecf4:	stp	x19, x20, [sp, #16]
  41ecf8:	mov	x19, x0
  41ecfc:	bl	41df24 <ferror@plt+0x1b154>
  41ed00:	cbz	x0, 41ed78 <ferror@plt+0x1bfa8>
  41ed04:	ldr	x1, [x19, #1024]
  41ed08:	mov	x20, x0
  41ed0c:	cbz	x1, 41ed18 <ferror@plt+0x1bf48>
  41ed10:	mov	x0, x19
  41ed14:	blr	x1
  41ed18:	ldr	x3, [x19, #944]
  41ed1c:	cbz	x3, 41ed30 <ferror@plt+0x1bf60>
  41ed20:	ldr	w1, [x19, #48]
  41ed24:	mov	x2, x20
  41ed28:	mov	x0, x19
  41ed2c:	blr	x3
  41ed30:	ldrb	w0, [x20, #18]
  41ed34:	tbz	w0, #1, 41ed78 <ferror@plt+0x1bfa8>
  41ed38:	ldrh	w1, [x20, #18]
  41ed3c:	tbz	w1, #5, 41ed8c <ferror@plt+0x1bfbc>
  41ed40:	ldr	x3, [x20]
  41ed44:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  41ed48:	mov	x0, x19
  41ed4c:	add	x2, x2, #0x636
  41ed50:	mov	w1, #0x0                   	// #0
  41ed54:	bl	421610 <ferror@plt+0x1e840>
  41ed58:	ldrb	w0, [x19, #1151]
  41ed5c:	cbz	w0, 41ed70 <ferror@plt+0x1bfa0>
  41ed60:	mov	x1, x20
  41ed64:	mov	x0, x19
  41ed68:	mov	x2, #0x0                   	// #0
  41ed6c:	bl	42d988 <ferror@plt+0x2abb8>
  41ed70:	mov	x0, x20
  41ed74:	bl	42e554 <ferror@plt+0x2b784>
  41ed78:	mov	x0, x19
  41ed7c:	mov	w1, #0x0                   	// #0
  41ed80:	ldp	x19, x20, [sp, #16]
  41ed84:	ldp	x29, x30, [sp], #32
  41ed88:	b	41e970 <ferror@plt+0x1bba0>
  41ed8c:	and	w0, w0, #0x3
  41ed90:	cmp	w0, #0x3
  41ed94:	b.ne	41ed58 <ferror@plt+0x1bf88>  // b.any
  41ed98:	ldrb	w0, [x19, #1143]
  41ed9c:	cbz	w0, 41ed58 <ferror@plt+0x1bf88>
  41eda0:	ldr	w2, [x19, #48]
  41eda4:	mov	x0, x19
  41eda8:	ldr	x5, [x20]
  41edac:	adrp	x4, 466000 <_obstack_memory_used@@Base+0x215fc>
  41edb0:	mov	w3, #0x0                   	// #0
  41edb4:	add	x4, x4, #0x636
  41edb8:	mov	w1, #0xb                   	// #11
  41edbc:	bl	42183c <ferror@plt+0x1ea6c>
  41edc0:	b	41ed58 <ferror@plt+0x1bf88>
  41edc4:	stp	x29, x30, [sp, #-48]!
  41edc8:	mov	x29, sp
  41edcc:	stp	x19, x20, [sp, #16]
  41edd0:	mov	x20, x0
  41edd4:	str	x21, [sp, #32]
  41edd8:	ldrb	w1, [x0, #18]
  41eddc:	cbz	w1, 41ee08 <ferror@plt+0x1c038>
  41ede0:	mov	x19, #0x0                   	// #0
  41ede4:	mov	w21, #0x1                   	// #1
  41ede8:	mov	x3, x19
  41edec:	mov	w1, w21
  41edf0:	mov	x0, x20
  41edf4:	mov	w2, #0x6                   	// #6
  41edf8:	ldp	x19, x20, [sp, #16]
  41edfc:	ldr	x21, [sp, #32]
  41ee00:	ldp	x29, x30, [sp], #48
  41ee04:	b	41e4a8 <ferror@plt+0x1b6d8>
  41ee08:	mov	w1, #0x0                   	// #0
  41ee0c:	bl	41df24 <ferror@plt+0x1b154>
  41ee10:	mov	x19, x0
  41ee14:	cbz	x0, 41ede0 <ferror@plt+0x1c010>
  41ee18:	ldrh	w21, [x0, #18]
  41ee1c:	ldrb	w0, [x0, #18]
  41ee20:	ubfx	x2, x21, #2, #8
  41ee24:	eor	x21, x21, #0x100
  41ee28:	tst	x0, #0x2
  41ee2c:	and	w0, w0, #0x3
  41ee30:	ubfx	w21, w21, #8, #1
  41ee34:	csel	w21, w21, wzr, ne  // ne = any
  41ee38:	cmp	w0, #0x2
  41ee3c:	b.ne	41ee50 <ferror@plt+0x1c080>  // b.any
  41ee40:	ldr	x1, [x19, #24]
  41ee44:	ldrb	w0, [x1, #19]
  41ee48:	orr	w0, w0, #0x20
  41ee4c:	strb	w0, [x1, #19]
  41ee50:	tbnz	w2, #5, 41ee60 <ferror@plt+0x1c090>
  41ee54:	mov	x1, x19
  41ee58:	mov	x0, x20
  41ee5c:	bl	42f154 <ferror@plt+0x2c384>
  41ee60:	ldr	x3, [x20, #1032]
  41ee64:	cbz	x3, 41ee78 <ferror@plt+0x1c0a8>
  41ee68:	ldr	w1, [x20, #48]
  41ee6c:	mov	x2, x19
  41ee70:	mov	x0, x20
  41ee74:	blr	x3
  41ee78:	mov	x0, x20
  41ee7c:	mov	w1, #0x0                   	// #0
  41ee80:	bl	41e970 <ferror@plt+0x1bba0>
  41ee84:	b	41ede8 <ferror@plt+0x1c018>
  41ee88:	stp	x29, x30, [sp, #-32]!
  41ee8c:	mov	x29, sp
  41ee90:	str	x19, [sp, #16]
  41ee94:	mov	x19, x0
  41ee98:	ldr	x0, [x19, #136]
  41ee9c:	ldr	x0, [x0, #8]
  41eea0:	cbz	x0, 41eeb0 <ferror@plt+0x1c0e0>
  41eea4:	mov	x0, x19
  41eea8:	bl	42e164 <ferror@plt+0x2b394>
  41eeac:	b	41ee98 <ferror@plt+0x1c0c8>
  41eeb0:	ldr	x0, [x19, #448]
  41eeb4:	ldurb	w0, [x0, #-20]
  41eeb8:	cmp	w0, #0x16
  41eebc:	b.eq	41eed0 <ferror@plt+0x1c100>  // b.none
  41eec0:	mov	x0, x19
  41eec4:	bl	42aac4 <ferror@plt+0x27cf4>
  41eec8:	ldrb	w0, [x0, #4]
  41eecc:	b	41eeb8 <ferror@plt+0x1c0e8>
  41eed0:	ldr	x19, [sp, #16]
  41eed4:	ldp	x29, x30, [sp], #32
  41eed8:	ret
  41eedc:	stp	x29, x30, [sp, #-64]!
  41eee0:	mov	x29, sp
  41eee4:	stp	x19, x20, [sp, #16]
  41eee8:	add	x3, sp, #0x34
  41eeec:	mov	x19, x0
  41eef0:	str	x21, [sp, #32]
  41eef4:	mov	w21, w1
  41eef8:	add	x2, sp, #0x38
  41eefc:	str	xzr, [sp, #56]
  41ef00:	ldrb	w1, [x0, #1123]
  41ef04:	cmp	w1, #0x0
  41ef08:	cset	w1, eq  // eq = none
  41ef0c:	strb	w1, [x0, #21]
  41ef10:	add	x1, sp, #0x30
  41ef14:	bl	41e9e4 <ferror@plt+0x1bc14>
  41ef18:	mov	x20, x0
  41ef1c:	cbz	x0, 41ef4c <ferror@plt+0x1c17c>
  41ef20:	ldrb	w0, [x0]
  41ef24:	cbnz	w0, 41ef70 <ferror@plt+0x1c1a0>
  41ef28:	ldr	x0, [x19, #144]
  41ef2c:	adrp	x4, 466000 <_obstack_memory_used@@Base+0x215fc>
  41ef30:	ldr	w2, [sp, #52]
  41ef34:	add	x4, x4, #0x646
  41ef38:	mov	w3, #0x0                   	// #0
  41ef3c:	mov	w1, #0x3                   	// #3
  41ef40:	ldr	x5, [x0, #8]
  41ef44:	mov	x0, x19
  41ef48:	bl	4217cc <ferror@plt+0x1e9fc>
  41ef4c:	mov	x0, x20
  41ef50:	bl	402b30 <free@plt>
  41ef54:	ldr	x0, [sp, #56]
  41ef58:	cbz	x0, 41ef60 <ferror@plt+0x1c190>
  41ef5c:	bl	402b30 <free@plt>
  41ef60:	ldp	x19, x20, [sp, #16]
  41ef64:	ldr	x21, [sp, #32]
  41ef68:	ldp	x29, x30, [sp], #64
  41ef6c:	ret
  41ef70:	ldr	x0, [x19, #40]
  41ef74:	ldr	w0, [x0, #48]
  41ef78:	cmp	w0, #0xc7
  41ef7c:	b.ls	41ef98 <ferror@plt+0x1c1c8>  // b.plast
  41ef80:	mov	x0, x19
  41ef84:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  41ef88:	mov	w1, #0x3                   	// #3
  41ef8c:	add	x2, x2, #0x65c
  41ef90:	bl	421610 <ferror@plt+0x1e840>
  41ef94:	b	41ef4c <ferror@plt+0x1c17c>
  41ef98:	mov	x0, x19
  41ef9c:	bl	41ee88 <ferror@plt+0x1c0b8>
  41efa0:	ldr	x6, [x19, #928]
  41efa4:	cbz	x6, 41efc8 <ferror@plt+0x1c1f8>
  41efa8:	ldr	x0, [x19, #144]
  41efac:	mov	x3, x20
  41efb0:	ldr	w1, [x19, #48]
  41efb4:	ldr	w4, [sp, #48]
  41efb8:	ldr	x2, [x0, #8]
  41efbc:	mov	x0, x19
  41efc0:	ldr	x5, [sp, #56]
  41efc4:	blr	x6
  41efc8:	ldp	w2, w4, [sp, #48]
  41efcc:	mov	w3, w21
  41efd0:	mov	x1, x20
  41efd4:	mov	x0, x19
  41efd8:	bl	426284 <ferror@plt+0x234b4>
  41efdc:	b	41ef4c <ferror@plt+0x1c17c>
  41efe0:	mov	w1, #0x2                   	// #2
  41efe4:	b	41eedc <ferror@plt+0x1c10c>
  41efe8:	stp	x29, x30, [sp, #-32]!
  41efec:	mov	x29, sp
  41eff0:	ldr	x1, [x0, #40]
  41eff4:	ldr	w1, [x1, #48]
  41eff8:	str	x19, [sp, #16]
  41effc:	mov	x19, x0
  41f000:	cmp	w1, #0x1
  41f004:	b.ne	41f02c <ferror@plt+0x1c25c>  // b.any
  41f008:	mov	w1, #0x0                   	// #0
  41f00c:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  41f010:	add	x2, x2, #0x677
  41f014:	bl	421610 <ferror@plt+0x1e840>
  41f018:	mov	w1, #0x0                   	// #0
  41f01c:	mov	x0, x19
  41f020:	ldr	x19, [sp, #16]
  41f024:	ldp	x29, x30, [sp], #32
  41f028:	b	41eedc <ferror@plt+0x1c10c>
  41f02c:	mov	w1, #0x1                   	// #1
  41f030:	b	41f01c <ferror@plt+0x1c24c>
  41f034:	mov	w1, #0x0                   	// #0
  41f038:	b	41eedc <ferror@plt+0x1c10c>
  41f03c:	stp	x29, x30, [sp, #-32]!
  41f040:	mov	x29, sp
  41f044:	str	x19, [sp, #16]
  41f048:	mov	x19, x0
  41f04c:	ldrb	w3, [x0, #1160]
  41f050:	ldrb	w2, [x0, #32]
  41f054:	cbz	w3, 41f0ac <ferror@plt+0x1c2dc>
  41f058:	cbnz	w2, 41f068 <ferror@plt+0x1c298>
  41f05c:	ldrb	w0, [x0, #24]
  41f060:	sub	w0, w0, #0x1
  41f064:	strb	w0, [x19, #24]
  41f068:	ldr	x1, [x19, #144]
  41f06c:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x215fc>
  41f070:	add	x0, x0, #0xcc0
  41f074:	cmp	x1, x0
  41f078:	b.eq	41f084 <ferror@plt+0x1c2b4>  // b.none
  41f07c:	mov	x0, x19
  41f080:	bl	432528 <ferror@plt+0x2f758>
  41f084:	ldrb	w0, [x19, #1123]
  41f088:	strb	wzr, [x19, #16]
  41f08c:	cmp	w0, #0x0
  41f090:	sturh	wzr, [x19, #19]
  41f094:	cset	w0, eq  // eq = none
  41f098:	strb	w0, [x19, #21]
  41f09c:	str	xzr, [x19, #144]
  41f0a0:	ldr	x19, [sp, #16]
  41f0a4:	ldp	x29, x30, [sp], #32
  41f0a8:	ret
  41f0ac:	cbnz	w2, 41f084 <ferror@plt+0x1c2b4>
  41f0b0:	cbz	w1, 41f084 <ferror@plt+0x1c2b4>
  41f0b4:	bl	41ee88 <ferror@plt+0x1c0b8>
  41f0b8:	ldr	w0, [x19, #500]
  41f0bc:	cbnz	w0, 41f084 <ferror@plt+0x1c2b4>
  41f0c0:	add	x0, x19, #0x1c8
  41f0c4:	str	x0, [x19, #488]
  41f0c8:	ldr	x0, [x19, #472]
  41f0cc:	str	x0, [x19, #448]
  41f0d0:	b	41f084 <ferror@plt+0x1c2b4>
  41f0d4:	stp	x29, x30, [sp, #-64]!
  41f0d8:	mov	x29, sp
  41f0dc:	stp	x19, x20, [sp, #16]
  41f0e0:	mov	x20, x0
  41f0e4:	stp	x21, x22, [sp, #32]
  41f0e8:	str	x23, [sp, #48]
  41f0ec:	bl	41e83c <ferror@plt+0x1ba6c>
  41f0f0:	cbnz	x0, 41f140 <ferror@plt+0x1c370>
  41f0f4:	ldr	x0, [x20, #448]
  41f0f8:	adrp	x4, 466000 <_obstack_memory_used@@Base+0x215fc>
  41f0fc:	add	x4, x4, #0x69c
  41f100:	mov	w3, #0x0                   	// #0
  41f104:	mov	w1, #0x3                   	// #3
  41f108:	ldur	w2, [x0, #-24]
  41f10c:	mov	x0, x20
  41f110:	bl	4217cc <ferror@plt+0x1e9fc>
  41f114:	mov	w1, #0x0                   	// #0
  41f118:	mov	x0, x20
  41f11c:	bl	41e970 <ferror@plt+0x1bba0>
  41f120:	mov	x0, x20
  41f124:	bl	41ee88 <ferror@plt+0x1c0b8>
  41f128:	mov	sp, x29
  41f12c:	ldp	x19, x20, [sp, #16]
  41f130:	ldp	x21, x22, [sp, #32]
  41f134:	ldr	x23, [sp, #48]
  41f138:	ldp	x29, x30, [sp], #64
  41f13c:	ret
  41f140:	ldr	w2, [x0, #8]
  41f144:	ldr	x0, [x0, #16]
  41f148:	add	w1, w2, #0x2
  41f14c:	add	x1, x1, #0xf
  41f150:	mov	w2, w2
  41f154:	and	x1, x1, #0x1fffffff0
  41f158:	sub	x2, x2, #0x1
  41f15c:	sub	sp, sp, x1
  41f160:	ldrb	w1, [x0]
  41f164:	mov	x22, sp
  41f168:	add	x2, x0, x2
  41f16c:	cmp	w1, #0x4c
  41f170:	cset	x1, eq  // eq = none
  41f174:	add	x1, x1, #0x1
  41f178:	add	x1, x0, x1
  41f17c:	mov	x0, x22
  41f180:	cmp	x1, x2
  41f184:	b.cs	41f1b8 <ferror@plt+0x1c3e8>  // b.hs, b.nlast
  41f188:	ldrb	w3, [x1]
  41f18c:	cmp	w3, #0x5c
  41f190:	b.ne	41f1ac <ferror@plt+0x1c3dc>  // b.any
  41f194:	ldrb	w3, [x1, #1]
  41f198:	cmp	w3, #0x5c
  41f19c:	b.eq	41f1a8 <ferror@plt+0x1c3d8>  // b.none
  41f1a0:	cmp	w3, #0x22
  41f1a4:	b.ne	41f1ac <ferror@plt+0x1c3dc>  // b.any
  41f1a8:	add	x1, x1, #0x1
  41f1ac:	ldrb	w3, [x1], #1
  41f1b0:	strb	w3, [x0], #1
  41f1b4:	b	41f180 <ferror@plt+0x1c3b0>
  41f1b8:	strb	wzr, [x0]
  41f1bc:	mov	w1, #0x0                   	// #0
  41f1c0:	mov	x0, x20
  41f1c4:	bl	41e970 <ferror@plt+0x1bba0>
  41f1c8:	mov	x0, x20
  41f1cc:	bl	41ee88 <ferror@plt+0x1c0b8>
  41f1d0:	mov	x0, #0x20                  	// #32
  41f1d4:	bl	44526c <_obstack_memory_used@@Base+0x868>
  41f1d8:	mov	x19, x0
  41f1dc:	stp	xzr, xzr, [x0]
  41f1e0:	stp	xzr, xzr, [x0, #16]
  41f1e4:	mov	x0, x22
  41f1e8:	bl	402700 <strlen@plt>
  41f1ec:	add	x0, x0, #0x1
  41f1f0:	bl	44526c <_obstack_memory_used@@Base+0x868>
  41f1f4:	mov	x21, x0
  41f1f8:	mov	x1, x22
  41f1fc:	str	x0, [x19, #8]
  41f200:	bl	402bd0 <strcpy@plt>
  41f204:	ldr	x0, [x20, #1400]
  41f208:	mov	x1, x21
  41f20c:	str	x0, [x19]
  41f210:	mov	x0, x20
  41f214:	bl	427a0c <ferror@plt+0x24c3c>
  41f218:	mov	x22, x0
  41f21c:	ldrb	w0, [x0, #18]
  41f220:	tst	x0, #0x3
  41f224:	b.ne	41f23c <ferror@plt+0x1c46c>  // b.any
  41f228:	ldrb	w0, [x19, #28]
  41f22c:	orr	w0, w0, #0x4
  41f230:	strb	w0, [x19, #28]
  41f234:	str	x19, [x20, #1400]
  41f238:	b	41f128 <ferror@plt+0x1c358>
  41f23c:	mov	x1, x22
  41f240:	mov	x0, x20
  41f244:	bl	430a10 <ferror@plt+0x2dc40>
  41f248:	mov	x23, x0
  41f24c:	bl	402700 <strlen@plt>
  41f250:	mov	x21, x0
  41f254:	add	x0, x0, #0x2
  41f258:	bl	44526c <_obstack_memory_used@@Base+0x868>
  41f25c:	add	x3, x0, x21
  41f260:	mov	w1, #0xa                   	// #10
  41f264:	strb	w1, [x0, x21]
  41f268:	str	x0, [x19, #16]
  41f26c:	strb	wzr, [x3, #1]
  41f270:	ldr	x1, [x22, #24]
  41f274:	ldrb	w3, [x1, #19]
  41f278:	ldr	w2, [x1, #8]
  41f27c:	str	w2, [x19, #24]
  41f280:	ubfx	x2, x3, #5, #1
  41f284:	ldrb	w1, [x19, #28]
  41f288:	ubfx	x3, x3, #4, #1
  41f28c:	ubfiz	w2, w2, #1, #7
  41f290:	orr	w2, w2, w3
  41f294:	bfxil	w1, w2, #0, #2
  41f298:	mov	x2, x21
  41f29c:	strb	w1, [x19, #28]
  41f2a0:	mov	x1, x23
  41f2a4:	bl	4026a0 <memcpy@plt>
  41f2a8:	b	41f234 <ferror@plt+0x1c464>
  41f2ac:	stp	x29, x30, [sp, #-32]!
  41f2b0:	mov	x29, sp
  41f2b4:	ldr	x1, [x0]
  41f2b8:	stp	x19, x20, [sp, #16]
  41f2bc:	ldr	x19, [x1, #96]
  41f2c0:	cbnz	x19, 41f2dc <ferror@plt+0x1c50c>
  41f2c4:	ldp	x19, x20, [sp, #16]
  41f2c8:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  41f2cc:	ldp	x29, x30, [sp], #32
  41f2d0:	add	x2, x2, #0x6c1
  41f2d4:	mov	w1, #0x3                   	// #3
  41f2d8:	b	421610 <ferror@plt+0x1e840>
  41f2dc:	ldr	w1, [x19, #28]
  41f2e0:	mov	x20, x0
  41f2e4:	cmp	w1, #0x5
  41f2e8:	b.ne	41f318 <ferror@plt+0x1c548>  // b.any
  41f2ec:	mov	w1, #0x3                   	// #3
  41f2f0:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  41f2f4:	add	x2, x2, #0x6d3
  41f2f8:	bl	421610 <ferror@plt+0x1e840>
  41f2fc:	ldr	w2, [x19, #8]
  41f300:	adrp	x4, 466000 <_obstack_memory_used@@Base+0x215fc>
  41f304:	mov	x0, x20
  41f308:	add	x4, x4, #0x6e5
  41f30c:	mov	w3, #0x0                   	// #0
  41f310:	mov	w1, #0x3                   	// #3
  41f314:	bl	4217cc <ferror@plt+0x1e9fc>
  41f318:	mov	w0, #0x9                   	// #9
  41f31c:	str	w0, [x19, #28]
  41f320:	ldrb	w0, [x19, #24]
  41f324:	cbz	w0, 41f340 <ferror@plt+0x1c570>
  41f328:	mov	w0, #0x1                   	// #1
  41f32c:	strb	w0, [x20, #18]
  41f330:	str	xzr, [x19, #16]
  41f334:	ldp	x19, x20, [sp, #16]
  41f338:	ldp	x29, x30, [sp], #32
  41f33c:	ret
  41f340:	mov	w1, #0x0                   	// #0
  41f344:	mov	x0, x20
  41f348:	bl	42363c <ferror@plt+0x2086c>
  41f34c:	eor	w1, w0, #0x1
  41f350:	strb	w1, [x20, #18]
  41f354:	strb	w0, [x19, #24]
  41f358:	b	41f330 <ferror@plt+0x1c560>
  41f35c:	stp	x29, x30, [sp, #-48]!
  41f360:	mov	x29, sp
  41f364:	str	x21, [sp, #32]
  41f368:	ldr	x21, [x0]
  41f36c:	stp	x19, x20, [sp, #16]
  41f370:	ldr	x20, [x21, #96]
  41f374:	cbnz	x20, 41f394 <ferror@plt+0x1c5c4>
  41f378:	ldp	x19, x20, [sp, #16]
  41f37c:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  41f380:	ldr	x21, [sp, #32]
  41f384:	add	x2, x2, #0x700
  41f388:	ldp	x29, x30, [sp], #48
  41f38c:	mov	w1, #0x3                   	// #3
  41f390:	b	421610 <ferror@plt+0x1e840>
  41f394:	ldrb	w1, [x20, #25]
  41f398:	mov	x19, x0
  41f39c:	cbnz	w1, 41f3b4 <ferror@plt+0x1c5e4>
  41f3a0:	ldrb	w1, [x0, #1140]
  41f3a4:	cbz	w1, 41f3b4 <ferror@plt+0x1c5e4>
  41f3a8:	mov	w2, #0x8                   	// #8
  41f3ac:	mov	w1, #0x0                   	// #0
  41f3b0:	bl	41e8fc <ferror@plt+0x1bb2c>
  41f3b4:	ldr	x0, [x20]
  41f3b8:	cbnz	x0, 41f3d0 <ferror@plt+0x1c600>
  41f3bc:	ldr	x1, [x20, #16]
  41f3c0:	cbz	x1, 41f3d0 <ferror@plt+0x1c600>
  41f3c4:	mov	w2, #0x1                   	// #1
  41f3c8:	str	x1, [x19, #424]
  41f3cc:	strb	w2, [x19, #440]
  41f3d0:	str	x0, [x21, #96]
  41f3d4:	ldrb	w0, [x20, #25]
  41f3d8:	strb	w0, [x19, #18]
  41f3dc:	add	x0, x19, #0x328
  41f3e0:	ldr	x1, [x0, #8]
  41f3e4:	cmp	x1, x20
  41f3e8:	b.cs	41f40c <ferror@plt+0x1c63c>  // b.hs, b.nlast
  41f3ec:	ldr	x1, [x0, #32]
  41f3f0:	cmp	x1, x20
  41f3f4:	b.ls	41f40c <ferror@plt+0x1c63c>  // b.plast
  41f3f8:	ldr	x21, [sp, #32]
  41f3fc:	stp	x20, x20, [x0, #16]
  41f400:	ldp	x19, x20, [sp, #16]
  41f404:	ldp	x29, x30, [sp], #48
  41f408:	ret
  41f40c:	mov	x1, x20
  41f410:	ldp	x19, x20, [sp, #16]
  41f414:	ldr	x21, [sp, #32]
  41f418:	ldp	x29, x30, [sp], #48
  41f41c:	b	444990 <_obstack_free@@Base>
  41f420:	ldr	x1, [x0, #40]
  41f424:	ldr	w1, [x1, #48]
  41f428:	cmp	w1, #0x1
  41f42c:	b.ne	41f440 <ferror@plt+0x1c670>  // b.any
  41f430:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  41f434:	mov	w1, #0x0                   	// #0
  41f438:	add	x2, x2, #0x713
  41f43c:	b	421610 <ferror@plt+0x1e840>
  41f440:	stp	x29, x30, [sp, #-32]!
  41f444:	mov	w1, #0x0                   	// #0
  41f448:	mov	x29, sp
  41f44c:	str	x19, [sp, #16]
  41f450:	mov	x19, x0
  41f454:	bl	41e970 <ferror@plt+0x1bba0>
  41f458:	mov	x0, x19
  41f45c:	bl	41ee88 <ferror@plt+0x1c0b8>
  41f460:	mov	x0, x19
  41f464:	mov	w2, #0x0                   	// #0
  41f468:	ldr	x19, [sp, #16]
  41f46c:	mov	w1, #0x1                   	// #1
  41f470:	ldp	x29, x30, [sp], #32
  41f474:	b	426660 <ferror@plt+0x23890>
  41f478:	stp	x29, x30, [sp, #-96]!
  41f47c:	mov	x29, sp
  41f480:	stp	x19, x20, [sp, #16]
  41f484:	mov	w20, w1
  41f488:	mov	x19, x0
  41f48c:	stp	x21, x22, [sp, #32]
  41f490:	stp	x23, x24, [sp, #48]
  41f494:	mov	x24, x2
  41f498:	stp	x25, x26, [sp, #64]
  41f49c:	stp	x27, x28, [sp, #80]
  41f4a0:	ldrb	w1, [x0, #24]
  41f4a4:	add	w1, w1, #0x1
  41f4a8:	strb	w1, [x0, #24]
  41f4ac:	str	xzr, [x2]
  41f4b0:	bl	430978 <ferror@plt+0x2dba8>
  41f4b4:	mov	x21, x0
  41f4b8:	ldrb	w0, [x0, #4]
  41f4bc:	cmp	w0, #0x16
  41f4c0:	b.ne	41f4dc <ferror@plt+0x1c70c>  // b.any
  41f4c4:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  41f4c8:	add	x2, x2, #0x746
  41f4cc:	mov	x0, x19
  41f4d0:	mov	w1, #0x3                   	// #3
  41f4d4:	bl	421610 <ferror@plt+0x1e840>
  41f4d8:	b	41f504 <ferror@plt+0x1c734>
  41f4dc:	ldr	w22, [x21]
  41f4e0:	cmp	w0, #0x35
  41f4e4:	b.eq	41f534 <ferror@plt+0x1c764>  // b.none
  41f4e8:	adrp	x4, 466000 <_obstack_memory_used@@Base+0x215fc>
  41f4ec:	add	x4, x4, #0x762
  41f4f0:	mov	w2, w22
  41f4f4:	mov	x0, x19
  41f4f8:	mov	w3, #0x0                   	// #0
  41f4fc:	mov	w1, #0x3                   	// #3
  41f500:	bl	4217cc <ferror@plt+0x1e9fc>
  41f504:	mov	x0, #0x0                   	// #0
  41f508:	ldrb	w1, [x19, #24]
  41f50c:	sub	w1, w1, #0x1
  41f510:	strb	w1, [x19, #24]
  41f514:	mov	sp, x29
  41f518:	ldp	x19, x20, [sp, #16]
  41f51c:	ldp	x21, x22, [sp, #32]
  41f520:	ldp	x23, x24, [sp, #48]
  41f524:	ldp	x25, x26, [sp, #64]
  41f528:	ldp	x27, x28, [sp, #80]
  41f52c:	ldp	x29, x30, [sp], #96
  41f530:	ret
  41f534:	mov	x0, x19
  41f538:	bl	430978 <ferror@plt+0x2dba8>
  41f53c:	ldrb	w0, [x0, #4]
  41f540:	cmp	w0, #0x14
  41f544:	b.eq	41f5c8 <ferror@plt+0x1c7f8>  // b.none
  41f548:	cmp	w20, #0x4
  41f54c:	b.ne	41f5ac <ferror@plt+0x1c7dc>  // b.any
  41f550:	mov	x0, x19
  41f554:	mov	w1, #0x1                   	// #1
  41f558:	bl	42e2d4 <ferror@plt+0x2b504>
  41f55c:	ldr	x0, [x21, #8]
  41f560:	mov	w1, #0x23                  	// #35
  41f564:	ldr	w2, [x0, #8]
  41f568:	add	w0, w2, #0x1
  41f56c:	add	w22, w2, #0x1
  41f570:	add	x0, x0, #0xf
  41f574:	mov	w2, w2
  41f578:	and	x0, x0, #0x1fffffff0
  41f57c:	sub	sp, sp, x0
  41f580:	mov	x20, sp
  41f584:	mov	x0, x20
  41f588:	strb	w1, [x0], #1
  41f58c:	ldr	x1, [x21, #8]
  41f590:	ldr	x1, [x1]
  41f594:	bl	4026a0 <memcpy@plt>
  41f598:	mov	w2, w22
  41f59c:	mov	x1, x20
  41f5a0:	mov	x0, x19
  41f5a4:	bl	426c40 <ferror@plt+0x23e70>
  41f5a8:	b	41f508 <ferror@plt+0x1c738>
  41f5ac:	cmp	w20, #0x11
  41f5b0:	b.ne	41f5bc <ferror@plt+0x1c7ec>  // b.any
  41f5b4:	cmp	w0, #0x16
  41f5b8:	b.eq	41f55c <ferror@plt+0x1c78c>  // b.none
  41f5bc:	adrp	x4, 466000 <_obstack_memory_used@@Base+0x215fc>
  41f5c0:	add	x4, x4, #0x782
  41f5c4:	b	41f4f0 <ferror@plt+0x1c720>
  41f5c8:	ldr	x1, [x19, #56]
  41f5cc:	ldr	x0, [x1, #24]
  41f5d0:	ldr	x1, [x1, #16]
  41f5d4:	sub	x0, x0, x1
  41f5d8:	cmp	x0, #0x2f
  41f5dc:	b.hi	41f5f0 <ferror@plt+0x1c820>  // b.pmore
  41f5e0:	add	x1, x19, #0x38
  41f5e4:	mov	x0, x19
  41f5e8:	mov	x2, #0x30                  	// #48
  41f5ec:	bl	42885c <ferror@plt+0x25a8c>
  41f5f0:	ldr	x0, [x19, #56]
  41f5f4:	mov	w1, #0x1                   	// #1
  41f5f8:	add	x28, x19, #0x38
  41f5fc:	mov	w22, #0x0                   	// #0
  41f600:	mov	w26, #0x18                  	// #24
  41f604:	mov	x27, #0x48                  	// #72
  41f608:	ldr	x2, [x0, #16]
  41f60c:	mov	x0, x19
  41f610:	mov	x25, #0x18                  	// #24
  41f614:	bl	42e6a0 <ferror@plt+0x2b8d0>
  41f618:	mov	x20, x0
  41f61c:	str	xzr, [x0]
  41f620:	mov	x0, x19
  41f624:	bl	430978 <ferror@plt+0x2dba8>
  41f628:	mov	x23, x0
  41f62c:	ldrb	w0, [x0, #4]
  41f630:	cmp	w0, #0x15
  41f634:	b.eq	41f6a0 <ferror@plt+0x1c8d0>  // b.none
  41f638:	cmp	w0, #0x16
  41f63c:	b.ne	41f64c <ferror@plt+0x1c87c>  // b.any
  41f640:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  41f644:	add	x2, x2, #0x79e
  41f648:	b	41f4cc <ferror@plt+0x1c6fc>
  41f64c:	ldr	x1, [x19, #56]
  41f650:	ldr	x0, [x1, #24]
  41f654:	ldr	x1, [x1, #16]
  41f658:	sub	x0, x0, x1
  41f65c:	umaddl	x1, w22, w26, x27
  41f660:	cmp	x0, x1
  41f664:	b.cs	41f678 <ferror@plt+0x1c8a8>  // b.hs, b.nlast
  41f668:	mov	x1, x28
  41f66c:	mov	x0, x19
  41f670:	mov	x2, #0x18                  	// #24
  41f674:	bl	42885c <ferror@plt+0x25a8c>
  41f678:	ldr	x0, [x19, #56]
  41f67c:	mov	w2, w22
  41f680:	add	w22, w22, #0x1
  41f684:	ldr	x20, [x0, #16]
  41f688:	ldp	x0, x1, [x23]
  41f68c:	madd	x2, x2, x25, x20
  41f690:	stp	x0, x1, [x2, #24]
  41f694:	ldr	x0, [x23, #16]
  41f698:	str	x0, [x2, #40]
  41f69c:	b	41f620 <ferror@plt+0x1c850>
  41f6a0:	cbnz	w22, 41f6b0 <ferror@plt+0x1c8e0>
  41f6a4:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  41f6a8:	add	x2, x2, #0x7bd
  41f6ac:	b	41f4cc <ferror@plt+0x1c6fc>
  41f6b0:	ldrh	w0, [x20, #30]
  41f6b4:	str	w22, [x20, #12]
  41f6b8:	and	w0, w0, #0xfffffffe
  41f6bc:	strh	w0, [x20, #30]
  41f6c0:	str	x20, [x24]
  41f6c4:	b	41f55c <ferror@plt+0x1c78c>
  41f6c8:	stp	x29, x30, [sp, #-48]!
  41f6cc:	mov	w1, #0x11                  	// #17
  41f6d0:	mov	x29, sp
  41f6d4:	add	x2, sp, #0x28
  41f6d8:	str	x19, [sp, #16]
  41f6dc:	mov	x19, x0
  41f6e0:	bl	41f478 <ferror@plt+0x1c6a8>
  41f6e4:	cbz	x0, 41f710 <ferror@plt+0x1c940>
  41f6e8:	ldr	x1, [sp, #40]
  41f6ec:	cbz	x1, 41f71c <ferror@plt+0x1c94c>
  41f6f0:	bl	41e17c <ferror@plt+0x1b3ac>
  41f6f4:	ldr	x1, [x0]
  41f6f8:	cbz	x1, 41f704 <ferror@plt+0x1c934>
  41f6fc:	ldr	x1, [x1]
  41f700:	str	x1, [x0]
  41f704:	mov	x0, x19
  41f708:	mov	w1, #0x0                   	// #0
  41f70c:	bl	41e970 <ferror@plt+0x1bba0>
  41f710:	ldr	x19, [sp, #16]
  41f714:	ldp	x29, x30, [sp], #48
  41f718:	ret
  41f71c:	bl	42e554 <ferror@plt+0x2b784>
  41f720:	b	41f710 <ferror@plt+0x1c940>
  41f724:	stp	x29, x30, [sp, #-48]!
  41f728:	mov	w1, #0x10                  	// #16
  41f72c:	mov	x29, sp
  41f730:	add	x2, sp, #0x28
  41f734:	stp	x19, x20, [sp, #16]
  41f738:	mov	x20, x0
  41f73c:	bl	41f478 <ferror@plt+0x1c6a8>
  41f740:	cbz	x0, 41f774 <ferror@plt+0x1c9a4>
  41f744:	ldr	x1, [sp, #40]
  41f748:	mov	x19, x0
  41f74c:	bl	41e17c <ferror@plt+0x1b3ac>
  41f750:	ldr	x0, [x0]
  41f754:	cbz	x0, 41f780 <ferror@plt+0x1c9b0>
  41f758:	ldr	x3, [x19]
  41f75c:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  41f760:	mov	x0, x20
  41f764:	add	x2, x2, #0x7d9
  41f768:	add	x3, x3, #0x1
  41f76c:	mov	w1, #0x0                   	// #0
  41f770:	bl	421610 <ferror@plt+0x1e840>
  41f774:	ldp	x19, x20, [sp, #16]
  41f778:	ldp	x29, x30, [sp], #48
  41f77c:	ret
  41f780:	ldr	x0, [sp, #40]
  41f784:	mov	x1, #0x18                  	// #24
  41f788:	ldr	w0, [x0, #12]
  41f78c:	madd	x1, x0, x1, x1
  41f790:	mov	x0, x20
  41f794:	bl	42ad60 <ferror@plt+0x27f90>
  41f798:	str	x0, [sp, #40]
  41f79c:	ldr	x1, [x19, #24]
  41f7a0:	str	x1, [x0]
  41f7a4:	str	x0, [x19, #24]
  41f7a8:	mov	w1, #0x0                   	// #0
  41f7ac:	mov	x0, x20
  41f7b0:	bl	41e970 <ferror@plt+0x1bba0>
  41f7b4:	b	41f774 <ferror@plt+0x1c9a4>
  41f7b8:	stp	x29, x30, [sp, #-48]!
  41f7bc:	mov	x29, sp
  41f7c0:	stp	x19, x20, [sp, #16]
  41f7c4:	mov	x19, x0
  41f7c8:	str	x21, [sp, #32]
  41f7cc:	ldrb	w1, [x0, #18]
  41f7d0:	cbz	w1, 41f7f8 <ferror@plt+0x1ca28>
  41f7d4:	mov	w21, #0x1                   	// #1
  41f7d8:	mov	w1, w21
  41f7dc:	mov	x0, x19
  41f7e0:	ldp	x19, x20, [sp, #16]
  41f7e4:	mov	x3, #0x0                   	// #0
  41f7e8:	ldr	x21, [sp, #32]
  41f7ec:	mov	w2, #0x3                   	// #3
  41f7f0:	ldp	x29, x30, [sp], #48
  41f7f4:	b	41e4a8 <ferror@plt+0x1b6d8>
  41f7f8:	mov	w1, #0x0                   	// #0
  41f7fc:	bl	41df24 <ferror@plt+0x1b154>
  41f800:	mov	x20, x0
  41f804:	cbz	x0, 41f7d4 <ferror@plt+0x1ca04>
  41f808:	ldrh	w21, [x0, #18]
  41f80c:	ldrb	w0, [x0, #18]
  41f810:	ubfx	x2, x21, #2, #8
  41f814:	ubfx	x21, x21, #8, #1
  41f818:	tst	x0, #0x2
  41f81c:	and	w0, w0, #0x3
  41f820:	csinc	w21, w21, wzr, ne  // ne = any
  41f824:	cmp	w0, #0x2
  41f828:	b.ne	41f83c <ferror@plt+0x1ca6c>  // b.any
  41f82c:	ldr	x1, [x20, #24]
  41f830:	ldrb	w0, [x1, #19]
  41f834:	orr	w0, w0, #0x20
  41f838:	strb	w0, [x1, #19]
  41f83c:	tbnz	w2, #5, 41f84c <ferror@plt+0x1ca7c>
  41f840:	mov	x1, x20
  41f844:	mov	x0, x19
  41f848:	bl	42f154 <ferror@plt+0x2c384>
  41f84c:	ldr	x3, [x19, #1032]
  41f850:	cbz	x3, 41f864 <ferror@plt+0x1ca94>
  41f854:	ldr	w1, [x19, #48]
  41f858:	mov	x2, x20
  41f85c:	mov	x0, x19
  41f860:	blr	x3
  41f864:	mov	x0, x19
  41f868:	mov	w1, #0x0                   	// #0
  41f86c:	bl	41e970 <ferror@plt+0x1bba0>
  41f870:	b	41f7d8 <ferror@plt+0x1ca08>
  41f874:	stp	x29, x30, [sp, #-32]!
  41f878:	mov	x29, sp
  41f87c:	ldr	x1, [x0]
  41f880:	stp	x19, x20, [sp, #16]
  41f884:	ldr	x19, [x1, #96]
  41f888:	cbnz	x19, 41f8a4 <ferror@plt+0x1cad4>
  41f88c:	ldp	x19, x20, [sp, #16]
  41f890:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  41f894:	ldp	x29, x30, [sp], #32
  41f898:	add	x2, x2, #0x7ea
  41f89c:	mov	w1, #0x3                   	// #3
  41f8a0:	b	421610 <ferror@plt+0x1e840>
  41f8a4:	ldr	w1, [x19, #28]
  41f8a8:	mov	x20, x0
  41f8ac:	cmp	w1, #0x5
  41f8b0:	b.ne	41f8e0 <ferror@plt+0x1cb10>  // b.any
  41f8b4:	mov	w1, #0x3                   	// #3
  41f8b8:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  41f8bc:	add	x2, x2, #0x7fc
  41f8c0:	bl	421610 <ferror@plt+0x1e840>
  41f8c4:	ldr	w2, [x19, #8]
  41f8c8:	adrp	x4, 466000 <_obstack_memory_used@@Base+0x215fc>
  41f8cc:	mov	x0, x20
  41f8d0:	add	x4, x4, #0x6e5
  41f8d4:	mov	w3, #0x0                   	// #0
  41f8d8:	mov	w1, #0x3                   	// #3
  41f8dc:	bl	4217cc <ferror@plt+0x1e9fc>
  41f8e0:	mov	w0, #0x5                   	// #5
  41f8e4:	str	w0, [x19, #28]
  41f8e8:	ldrb	w0, [x19, #24]
  41f8ec:	strb	w0, [x20, #18]
  41f8f0:	mov	w0, #0x1                   	// #1
  41f8f4:	strb	w0, [x19, #24]
  41f8f8:	ldrb	w0, [x19, #25]
  41f8fc:	str	xzr, [x19, #16]
  41f900:	cbnz	w0, 41f924 <ferror@plt+0x1cb54>
  41f904:	ldrb	w0, [x20, #1140]
  41f908:	cbz	w0, 41f924 <ferror@plt+0x1cb54>
  41f90c:	mov	x0, x20
  41f910:	mov	w2, #0x8                   	// #8
  41f914:	ldp	x19, x20, [sp, #16]
  41f918:	mov	w1, #0x0                   	// #0
  41f91c:	ldp	x29, x30, [sp], #32
  41f920:	b	41e8fc <ferror@plt+0x1bb2c>
  41f924:	ldp	x19, x20, [sp, #16]
  41f928:	ldp	x29, x30, [sp], #32
  41f92c:	ret
  41f930:	stp	x29, x30, [sp, #-80]!
  41f934:	mov	x29, sp
  41f938:	stp	x19, x20, [sp, #16]
  41f93c:	mov	x19, x0
  41f940:	stp	x21, x22, [sp, #32]
  41f944:	ldrb	w1, [x0, #24]
  41f948:	str	wzr, [sp, #52]
  41f94c:	add	w1, w1, #0x1
  41f950:	strb	w1, [x0, #24]
  41f954:	add	x1, sp, #0x34
  41f958:	bl	430a0c <ferror@plt+0x2dc3c>
  41f95c:	mov	x21, x0
  41f960:	ldp	x0, x1, [x0]
  41f964:	stp	x0, x1, [sp, #56]
  41f968:	ldr	x0, [x21, #16]
  41f96c:	str	x0, [sp, #72]
  41f970:	ldrb	w0, [x21, #4]
  41f974:	cmp	w0, #0x35
  41f978:	b.ne	41f9f8 <ferror@plt+0x1cc28>  // b.any
  41f97c:	ldr	x0, [x21, #8]
  41f980:	ldr	x20, [x19, #896]
  41f984:	cbz	x20, 41f9f8 <ferror@plt+0x1cc28>
  41f988:	ldr	x1, [x20, #8]
  41f98c:	cmp	x0, x1
  41f990:	b.eq	41fb00 <ferror@plt+0x1cd30>  // b.none
  41f994:	ldr	x20, [x20]
  41f998:	b	41f984 <ferror@plt+0x1cbb4>
  41f99c:	ldr	x3, [x19, #904]
  41f9a0:	cbz	x3, 41f9b4 <ferror@plt+0x1cbe4>
  41f9a4:	mov	x1, x21
  41f9a8:	mov	x0, x19
  41f9ac:	mov	w2, #0x0                   	// #0
  41f9b0:	blr	x3
  41f9b4:	ldrb	w0, [x20, #19]
  41f9b8:	cbz	w0, 41f9c8 <ferror@plt+0x1cbf8>
  41f9bc:	ldrb	w0, [x19, #24]
  41f9c0:	sub	w0, w0, #0x1
  41f9c4:	strb	w0, [x19, #24]
  41f9c8:	ldr	x1, [x20, #24]
  41f9cc:	mov	x0, x19
  41f9d0:	blr	x1
  41f9d4:	ldrb	w0, [x20, #19]
  41f9d8:	cbnz	w0, 41faf0 <ferror@plt+0x1cd20>
  41f9dc:	ldrb	w0, [x19, #24]
  41f9e0:	sub	w0, w0, #0x1
  41f9e4:	strb	w0, [x19, #24]
  41f9e8:	ldp	x19, x20, [sp, #16]
  41f9ec:	ldp	x21, x22, [sp, #32]
  41f9f0:	ldp	x29, x30, [sp], #80
  41f9f4:	ret
  41f9f8:	mov	w1, #0x1                   	// #1
  41f9fc:	ldr	x0, [x19, #960]
  41fa00:	cbz	x0, 41f9dc <ferror@plt+0x1cc0c>
  41fa04:	cmp	w1, #0x1
  41fa08:	b.eq	41fa18 <ferror@plt+0x1cc48>  // b.none
  41fa0c:	ldr	x0, [x19, #136]
  41fa10:	ldr	x0, [x0, #8]
  41fa14:	cbnz	x0, 41fa34 <ferror@plt+0x1cc64>
  41fa18:	mov	x0, x19
  41fa1c:	bl	42e2d4 <ferror@plt+0x2b504>
  41fa20:	ldr	w1, [x19, #48]
  41fa24:	mov	x0, x19
  41fa28:	ldr	x2, [x19, #960]
  41fa2c:	blr	x2
  41fa30:	b	41f9dc <ferror@plt+0x1cc0c>
  41fa34:	mov	x0, #0x30                  	// #48
  41fa38:	bl	44526c <_obstack_memory_used@@Base+0x868>
  41fa3c:	mov	x2, x0
  41fa40:	mov	w3, #0x2                   	// #2
  41fa44:	ldp	x0, x1, [sp, #56]
  41fa48:	stp	x0, x1, [x2]
  41fa4c:	ldr	x1, [sp, #72]
  41fa50:	str	x1, [x2, #16]
  41fa54:	lsr	x0, x0, #48
  41fa58:	orr	w0, w0, #0x400
  41fa5c:	strh	w0, [x2, #6]
  41fa60:	mov	x0, x19
  41fa64:	ldp	x4, x5, [x21]
  41fa68:	stp	x4, x5, [x2, #24]
  41fa6c:	ldr	x1, [x21, #16]
  41fa70:	str	x1, [x2, #40]
  41fa74:	ldrh	w1, [x2, #30]
  41fa78:	orr	w1, w1, #0x400
  41fa7c:	strh	w1, [x2, #30]
  41fa80:	mov	x1, #0x0                   	// #0
  41fa84:	bl	42df04 <ferror@plt+0x2b134>
  41fa88:	b	41fa20 <ferror@plt+0x1cc50>
  41fa8c:	mov	x20, #0x0                   	// #0
  41fa90:	cbnz	w22, 41faa4 <ferror@plt+0x1ccd4>
  41fa94:	mov	x21, x0
  41fa98:	mov	w1, #0x2                   	// #2
  41fa9c:	b	41f9fc <ferror@plt+0x1cc2c>
  41faa0:	cbz	w22, 41fab4 <ferror@plt+0x1cce4>
  41faa4:	ldrb	w1, [x19, #24]
  41faa8:	add	w1, w1, #0x1
  41faac:	strb	w1, [x19, #24]
  41fab0:	cbz	x20, 41fa94 <ferror@plt+0x1ccc4>
  41fab4:	ldrb	w0, [x20, #18]
  41fab8:	cbz	w0, 41f99c <ferror@plt+0x1cbcc>
  41fabc:	ldr	w0, [sp, #52]
  41fac0:	str	w0, [x19, #152]
  41fac4:	mov	w0, #0x51                  	// #81
  41fac8:	strb	w0, [x19, #156]
  41facc:	ldrh	w0, [x21, #6]
  41fad0:	strh	w0, [x19, #158]
  41fad4:	ldr	w0, [x20, #24]
  41fad8:	str	w0, [x19, #160]
  41fadc:	mov	w0, #0x1                   	// #1
  41fae0:	strb	w0, [x19, #32]
  41fae4:	ldrb	w0, [x20, #19]
  41fae8:	strb	w0, [x19, #33]
  41faec:	cbnz	w0, 41f9dc <ferror@plt+0x1cc0c>
  41faf0:	ldrb	w0, [x19, #24]
  41faf4:	add	w0, w0, #0x1
  41faf8:	strb	w0, [x19, #24]
  41fafc:	b	41f9dc <ferror@plt+0x1cc0c>
  41fb00:	ldrb	w0, [x20, #16]
  41fb04:	cbz	w0, 41fab4 <ferror@plt+0x1cce4>
  41fb08:	ldrb	w22, [x20, #19]
  41fb0c:	cbz	w22, 41fb1c <ferror@plt+0x1cd4c>
  41fb10:	ldrb	w0, [x19, #24]
  41fb14:	sub	w0, w0, #0x1
  41fb18:	strb	w0, [x19, #24]
  41fb1c:	mov	x0, x19
  41fb20:	bl	430978 <ferror@plt+0x2dba8>
  41fb24:	ldrb	w1, [x0, #4]
  41fb28:	cmp	w1, #0x35
  41fb2c:	b.ne	41fa8c <ferror@plt+0x1ccbc>  // b.any
  41fb30:	ldr	x1, [x0, #8]
  41fb34:	ldr	x20, [x20, #24]
  41fb38:	cbz	x20, 41fa8c <ferror@plt+0x1ccbc>
  41fb3c:	ldr	x2, [x20, #8]
  41fb40:	cmp	x1, x2
  41fb44:	b.eq	41faa0 <ferror@plt+0x1ccd0>  // b.none
  41fb48:	ldr	x20, [x20]
  41fb4c:	b	41fb38 <ferror@plt+0x1cd68>
  41fb50:	stp	x29, x30, [sp, #-64]!
  41fb54:	mov	x29, sp
  41fb58:	stp	x19, x20, [sp, #16]
  41fb5c:	mov	x20, x1
  41fb60:	stp	x21, x22, [sp, #32]
  41fb64:	mov	x22, x2
  41fb68:	stp	x23, x24, [sp, #48]
  41fb6c:	mov	x24, x0
  41fb70:	and	w23, w3, #0xff
  41fb74:	cbz	x1, 41fbb0 <ferror@plt+0x1cde0>
  41fb78:	mov	x0, x1
  41fb7c:	bl	402700 <strlen@plt>
  41fb80:	mov	x1, x20
  41fb84:	mov	w2, w0
  41fb88:	mov	x0, x24
  41fb8c:	bl	426c40 <ferror@plt+0x23e70>
  41fb90:	ldr	x5, [x24, #896]
  41fb94:	mov	x21, x0
  41fb98:	cbz	x5, 41fc50 <ferror@plt+0x1ce80>
  41fb9c:	ldr	x0, [x5, #8]
  41fba0:	cmp	x21, x0
  41fba4:	b.eq	41fcc0 <ferror@plt+0x1cef0>  // b.none
  41fba8:	ldr	x5, [x5]
  41fbac:	b	41fb98 <ferror@plt+0x1cdc8>
  41fbb0:	add	x19, x0, #0x380
  41fbb4:	cbz	w23, 41fc88 <ferror@plt+0x1ceb8>
  41fbb8:	mov	x3, x2
  41fbbc:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  41fbc0:	add	x2, x2, #0x853
  41fbc4:	mov	w1, #0x4                   	// #4
  41fbc8:	bl	421610 <ferror@plt+0x1e840>
  41fbcc:	b	41fcf0 <ferror@plt+0x1cf20>
  41fbd0:	cbz	x20, 41fbf4 <ferror@plt+0x1ce24>
  41fbd4:	mov	x4, x22
  41fbd8:	mov	x3, x20
  41fbdc:	mov	x0, x24
  41fbe0:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  41fbe4:	mov	w1, #0x4                   	// #4
  41fbe8:	add	x2, x2, #0x8c9
  41fbec:	bl	421610 <ferror@plt+0x1e840>
  41fbf0:	b	41fcec <ferror@plt+0x1cf1c>
  41fbf4:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  41fbf8:	mov	x3, x22
  41fbfc:	add	x2, x2, #0x8ed
  41fc00:	mov	x0, x24
  41fc04:	mov	w1, #0x4                   	// #4
  41fc08:	b	41fbc8 <ferror@plt+0x1cdf8>
  41fc0c:	ldrb	w0, [x1, #16]
  41fc10:	cbz	w0, 41fbd0 <ferror@plt+0x1ce00>
  41fc14:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  41fc18:	add	x2, x2, #0x890
  41fc1c:	ldr	x3, [x21]
  41fc20:	b	41fce0 <ferror@plt+0x1cf10>
  41fc24:	mov	x0, x24
  41fc28:	mov	x1, #0x20                  	// #32
  41fc2c:	bl	42ad08 <ferror@plt+0x27f38>
  41fc30:	mov	x20, x0
  41fc34:	stp	xzr, xzr, [x0]
  41fc38:	stp	xzr, xzr, [x0, #16]
  41fc3c:	ldr	x0, [x19]
  41fc40:	str	x0, [x20]
  41fc44:	str	x20, [x19]
  41fc48:	str	x21, [x20, #8]
  41fc4c:	b	41fcf0 <ferror@plt+0x1cf20>
  41fc50:	mov	x1, #0x20                  	// #32
  41fc54:	mov	x0, x24
  41fc58:	bl	42ad08 <ferror@plt+0x27f38>
  41fc5c:	stp	xzr, xzr, [x0]
  41fc60:	mov	x5, x0
  41fc64:	stp	xzr, xzr, [x0, #16]
  41fc68:	ldr	x1, [x24, #896]
  41fc6c:	str	x1, [x0]
  41fc70:	str	x0, [x24, #896]
  41fc74:	mov	w1, #0x1                   	// #1
  41fc78:	str	x21, [x0, #8]
  41fc7c:	strb	w1, [x0, #16]
  41fc80:	strb	w23, [x0, #19]
  41fc84:	add	x19, x5, #0x18
  41fc88:	mov	x0, x22
  41fc8c:	bl	402700 <strlen@plt>
  41fc90:	mov	x1, x22
  41fc94:	mov	w2, w0
  41fc98:	mov	x0, x24
  41fc9c:	bl	426c40 <ferror@plt+0x23e70>
  41fca0:	ldr	x1, [x19]
  41fca4:	mov	x21, x0
  41fca8:	cbz	x1, 41fc24 <ferror@plt+0x1ce54>
  41fcac:	ldr	x0, [x1, #8]
  41fcb0:	cmp	x21, x0
  41fcb4:	b.eq	41fc0c <ferror@plt+0x1ce3c>  // b.none
  41fcb8:	ldr	x1, [x1]
  41fcbc:	b	41fca8 <ferror@plt+0x1ced8>
  41fcc0:	ldrb	w1, [x5, #16]
  41fcc4:	cbz	w1, 41fc14 <ferror@plt+0x1ce44>
  41fcc8:	ldrb	w0, [x5, #19]
  41fccc:	cmp	w0, w23
  41fcd0:	b.eq	41fc84 <ferror@plt+0x1ceb4>  // b.none
  41fcd4:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  41fcd8:	mov	x3, x20
  41fcdc:	add	x2, x2, #0x80e
  41fce0:	mov	x0, x24
  41fce4:	mov	w1, #0x4                   	// #4
  41fce8:	bl	421610 <ferror@plt+0x1e840>
  41fcec:	mov	x20, #0x0                   	// #0
  41fcf0:	mov	x0, x20
  41fcf4:	ldp	x19, x20, [sp, #16]
  41fcf8:	ldp	x21, x22, [sp, #32]
  41fcfc:	ldp	x23, x24, [sp, #48]
  41fd00:	ldp	x29, x30, [sp], #64
  41fd04:	ret
  41fd08:	stp	x29, x30, [sp, #-32]!
  41fd0c:	mov	x29, sp
  41fd10:	str	x19, [sp, #16]
  41fd14:	mov	x19, x3
  41fd18:	mov	w3, #0x0                   	// #0
  41fd1c:	bl	41fb50 <ferror@plt+0x1cd80>
  41fd20:	mov	w1, #0x1                   	// #1
  41fd24:	strb	w1, [x0, #17]
  41fd28:	str	x19, [x0, #24]
  41fd2c:	ldr	x19, [sp, #16]
  41fd30:	ldp	x29, x30, [sp], #32
  41fd34:	ret
  41fd38:	stp	x29, x30, [sp, #-240]!
  41fd3c:	mov	x29, sp
  41fd40:	stp	x19, x20, [sp, #16]
  41fd44:	mov	x19, x0
  41fd48:	stp	x21, x22, [sp, #32]
  41fd4c:	stp	x23, x24, [sp, #48]
  41fd50:	mov	w24, w1
  41fd54:	ldrb	w22, [x0, #27]
  41fd58:	ldrb	w23, [x0, #25]
  41fd5c:	cbz	w22, 41fd64 <ferror@plt+0x1cf94>
  41fd60:	strb	wzr, [x0, #24]
  41fd64:	cbz	w23, 41fd88 <ferror@plt+0x1cfb8>
  41fd68:	ldrb	w0, [x19, #1154]
  41fd6c:	cbz	w0, 41fd84 <ferror@plt+0x1cfb4>
  41fd70:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  41fd74:	mov	x0, x19
  41fd78:	add	x2, x2, #0x90e
  41fd7c:	mov	w1, #0x2                   	// #2
  41fd80:	bl	421610 <ferror@plt+0x1e840>
  41fd84:	strh	wzr, [x19, #24]
  41fd88:	mov	w0, #0x1                   	// #1
  41fd8c:	strb	w0, [x19, #16]
  41fd90:	mov	w0, #0x53                  	// #83
  41fd94:	strb	w0, [x19, #156]
  41fd98:	ldr	x0, [x19, #40]
  41fd9c:	strb	wzr, [x19, #21]
  41fda0:	ldr	w0, [x0, #60]
  41fda4:	str	w0, [x19, #48]
  41fda8:	mov	x0, x19
  41fdac:	bl	42aac4 <ferror@plt+0x27cf4>
  41fdb0:	mov	x21, x0
  41fdb4:	ldrb	w0, [x0, #4]
  41fdb8:	cmp	w0, #0x35
  41fdbc:	b.ne	41fe74 <ferror@plt+0x1d0a4>  // b.any
  41fdc0:	ldr	x0, [x21, #8]
  41fdc4:	ldrb	w20, [x0, #16]
  41fdc8:	tbz	w20, #0, 41fff8 <ferror@plt+0x1d228>
  41fdcc:	ubfx	x20, x20, #1, #7
  41fdd0:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x215fc>
  41fdd4:	add	x0, x0, #0xcc0
  41fdd8:	mov	w1, #0x18                  	// #24
  41fddc:	umaddl	x20, w20, w1, x0
  41fde0:	ldrb	w1, [x20, #19]
  41fde4:	tbnz	w1, #1, 41fdec <ferror@plt+0x1d01c>
  41fde8:	strb	wzr, [x19, #440]
  41fdec:	ldrb	w0, [x19, #1155]
  41fdf0:	cbz	w0, 41fec8 <ferror@plt+0x1d0f8>
  41fdf4:	ldrb	w2, [x19, #1244]
  41fdf8:	cbnz	w2, 41fec8 <ferror@plt+0x1d0f8>
  41fdfc:	cbz	w24, 41fec4 <ferror@plt+0x1d0f4>
  41fe00:	mov	w21, #0x0                   	// #0
  41fe04:	mov	x20, #0x0                   	// #0
  41fe08:	ldrb	w0, [x19, #1160]
  41fe0c:	str	x20, [x19, #144]
  41fe10:	cbz	w0, 41fe1c <ferror@plt+0x1d04c>
  41fe14:	mov	x0, x19
  41fe18:	bl	41e67c <ferror@plt+0x1b8ac>
  41fe1c:	cbz	x20, 4200c4 <ferror@plt+0x1d2f4>
  41fe20:	ldr	x0, [x19, #144]
  41fe24:	ldr	x1, [x0]
  41fe28:	mov	x0, x19
  41fe2c:	blr	x1
  41fe30:	mov	w1, w21
  41fe34:	mov	x0, x19
  41fe38:	bl	41f03c <ferror@plt+0x1c26c>
  41fe3c:	cbz	w23, 41fe50 <ferror@plt+0x1d080>
  41fe40:	ldrb	w0, [x19, #32]
  41fe44:	cbnz	w0, 41fe50 <ferror@plt+0x1d080>
  41fe48:	mov	w0, #0x201                 	// #513
  41fe4c:	strh	w0, [x19, #24]
  41fe50:	cbz	w22, 41fe5c <ferror@plt+0x1d08c>
  41fe54:	mov	w0, #0x1                   	// #1
  41fe58:	strb	w0, [x19, #24]
  41fe5c:	mov	w0, w21
  41fe60:	ldp	x19, x20, [sp, #16]
  41fe64:	ldp	x21, x22, [sp, #32]
  41fe68:	ldp	x23, x24, [sp, #48]
  41fe6c:	ldp	x29, x30, [sp], #240
  41fe70:	ret
  41fe74:	cmp	w0, #0x37
  41fe78:	b.ne	41fff0 <ferror@plt+0x1d220>  // b.any
  41fe7c:	ldr	w0, [x19, #1116]
  41fe80:	cmp	w0, #0x15
  41fe84:	b.eq	41fe00 <ferror@plt+0x1d030>  // b.none
  41fe88:	ldrb	w0, [x19, #1154]
  41fe8c:	adrp	x20, 466000 <_obstack_memory_used@@Base+0x215fc>
  41fe90:	add	x20, x20, #0xcc0
  41fe94:	cbz	w0, 41febc <ferror@plt+0x1d0ec>
  41fe98:	ldrb	w0, [x19, #1155]
  41fe9c:	cbnz	w0, 41febc <ferror@plt+0x1d0ec>
  41fea0:	ldrb	w0, [x19, #18]
  41fea4:	cbnz	w0, 41febc <ferror@plt+0x1d0ec>
  41fea8:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  41feac:	mov	x0, x19
  41feb0:	add	x2, x2, #0x94b
  41feb4:	mov	w1, #0x2                   	// #2
  41feb8:	bl	421610 <ferror@plt+0x1e840>
  41febc:	add	x20, x20, #0x1c8
  41fec0:	b	41fde0 <ferror@plt+0x1d010>
  41fec4:	tbz	w1, #3, 41fe00 <ferror@plt+0x1d030>
  41fec8:	and	w2, w1, #0x4
  41fecc:	strb	w2, [x19, #17]
  41fed0:	strb	w2, [x19, #19]
  41fed4:	cbnz	w0, 41ff58 <ferror@plt+0x1d188>
  41fed8:	ldrb	w0, [x19, #18]
  41fedc:	cbnz	w0, 41ff28 <ferror@plt+0x1d158>
  41fee0:	ldrb	w0, [x20, #18]
  41fee4:	cmp	w0, #0x2
  41fee8:	b.ne	41ff70 <ferror@plt+0x1d1a0>  // b.any
  41feec:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x215fc>
  41fef0:	add	x0, x0, #0xcc0
  41fef4:	add	x0, x0, #0x168
  41fef8:	cmp	x20, x0
  41fefc:	b.ne	41ff08 <ferror@plt+0x1d138>  // b.any
  41ff00:	ldrb	w0, [x19, #1122]
  41ff04:	cbnz	w0, 41ff28 <ferror@plt+0x1d158>
  41ff08:	ldrb	w0, [x19, #1154]
  41ff0c:	cbz	w0, 41ff70 <ferror@plt+0x1d1a0>
  41ff10:	ldr	x3, [x20, #8]
  41ff14:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  41ff18:	mov	x0, x19
  41ff1c:	add	x2, x2, #0x976
  41ff20:	mov	w1, #0x2                   	// #2
  41ff24:	bl	421610 <ferror@plt+0x1e840>
  41ff28:	ldrb	w0, [x19, #1138]
  41ff2c:	cbz	w0, 41ff58 <ferror@plt+0x1d188>
  41ff30:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x215fc>
  41ff34:	add	x0, x0, #0xcc0
  41ff38:	add	x0, x0, #0xd8
  41ff3c:	cmp	x20, x0
  41ff40:	b.ne	41ffb4 <ferror@plt+0x1d1e4>  // b.any
  41ff44:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  41ff48:	mov	x0, x19
  41ff4c:	add	x2, x2, #0x9af
  41ff50:	mov	w1, #0x6                   	// #6
  41ff54:	bl	42167c <ferror@plt+0x1e8ac>
  41ff58:	ldrb	w0, [x19, #18]
  41ff5c:	cbz	w0, 4200bc <ferror@plt+0x1d2ec>
  41ff60:	ldrb	w0, [x20, #19]
  41ff64:	tbnz	w0, #0, 4200bc <ferror@plt+0x1d2ec>
  41ff68:	mov	w21, #0x1                   	// #1
  41ff6c:	b	41fe04 <ferror@plt+0x1d034>
  41ff70:	tbnz	w1, #5, 41ff90 <ferror@plt+0x1d1c0>
  41ff74:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x215fc>
  41ff78:	add	x0, x0, #0xcc0
  41ff7c:	add	x0, x0, #0x168
  41ff80:	cmp	x20, x0
  41ff84:	b.ne	41ff28 <ferror@plt+0x1d158>  // b.any
  41ff88:	ldrb	w0, [x19, #1122]
  41ff8c:	cbnz	w0, 41ff28 <ferror@plt+0x1d158>
  41ff90:	ldrb	w0, [x19, #1132]
  41ff94:	cbz	w0, 41ff28 <ferror@plt+0x1d158>
  41ff98:	ldr	x3, [x20, #8]
  41ff9c:	mov	x0, x19
  41ffa0:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  41ffa4:	mov	w1, #0x1                   	// #1
  41ffa8:	add	x2, x2, #0x98d
  41ffac:	bl	42167c <ferror@plt+0x1e8ac>
  41ffb0:	b	41ff28 <ferror@plt+0x1d158>
  41ffb4:	ldrb	w0, [x20, #18]
  41ffb8:	cbz	w24, 41ffdc <ferror@plt+0x1d20c>
  41ffbc:	cbnz	w0, 41ff58 <ferror@plt+0x1d188>
  41ffc0:	ldr	x3, [x20, #8]
  41ffc4:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  41ffc8:	add	x2, x2, #0x9d8
  41ffcc:	mov	x0, x19
  41ffd0:	mov	w1, #0x6                   	// #6
  41ffd4:	bl	42167c <ferror@plt+0x1e8ac>
  41ffd8:	b	41ff58 <ferror@plt+0x1d188>
  41ffdc:	cbz	w0, 41ff58 <ferror@plt+0x1d188>
  41ffe0:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  41ffe4:	add	x2, x2, #0xa06
  41ffe8:	ldr	x3, [x20, #8]
  41ffec:	b	41ffcc <ferror@plt+0x1d1fc>
  41fff0:	cmp	w0, #0x16
  41fff4:	b.eq	41ff68 <ferror@plt+0x1d198>  // b.none
  41fff8:	ldr	w0, [x19, #1116]
  41fffc:	cmp	w0, #0x15
  420000:	b.eq	41fe00 <ferror@plt+0x1d030>  // b.none
  420004:	ldrb	w0, [x19, #18]
  420008:	cbnz	w0, 41ff68 <ferror@plt+0x1d198>
  42000c:	mov	x1, x21
  420010:	mov	x0, x19
  420014:	bl	42947c <ferror@plt+0x266ac>
  420018:	mov	x20, x0
  42001c:	ldr	x3, [x19, #1064]
  420020:	cbz	x3, 4200a0 <ferror@plt+0x1d2d0>
  420024:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  420028:	add	x2, x2, #0xcc0
  42002c:	mov	x1, x0
  420030:	add	x2, x2, #0x1e0
  420034:	mov	x0, x19
  420038:	blr	x3
  42003c:	mov	x24, x0
  420040:	cbz	x0, 4200a0 <ferror@plt+0x1d2d0>
  420044:	ldr	w2, [x21]
  420048:	mov	x3, #0x0                   	// #0
  42004c:	ldr	x1, [x19, #40]
  420050:	add	x0, sp, #0x48
  420054:	bl	42cdec <ferror@plt+0x2a01c>
  420058:	ldr	w1, [x21]
  42005c:	ldr	x0, [x19, #40]
  420060:	bl	42bbd0 <ferror@plt+0x28e00>
  420064:	mov	x1, x0
  420068:	mov	x2, x24
  42006c:	add	x0, sp, #0x48
  420070:	bl	42d3d0 <ferror@plt+0x2a600>
  420074:	mov	x5, x24
  420078:	mov	x4, x20
  42007c:	add	x2, sp, #0x48
  420080:	adrp	x3, 466000 <_obstack_memory_used@@Base+0x215fc>
  420084:	add	x3, x3, #0xa3f
  420088:	mov	w1, #0x3                   	// #3
  42008c:	mov	x0, x19
  420090:	bl	421a48 <ferror@plt+0x1ec78>
  420094:	add	x0, sp, #0x48
  420098:	bl	42cb80 <ferror@plt+0x29db0>
  42009c:	b	41ff68 <ferror@plt+0x1d198>
  4200a0:	mov	x3, x20
  4200a4:	mov	x0, x19
  4200a8:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  4200ac:	mov	w1, #0x3                   	// #3
  4200b0:	add	x2, x2, #0xa76
  4200b4:	bl	421610 <ferror@plt+0x1e840>
  4200b8:	b	41ff68 <ferror@plt+0x1d198>
  4200bc:	mov	w21, #0x1                   	// #1
  4200c0:	b	41fe08 <ferror@plt+0x1d038>
  4200c4:	cbnz	w21, 41fe30 <ferror@plt+0x1d060>
  4200c8:	mov	x0, x19
  4200cc:	mov	w1, #0x1                   	// #1
  4200d0:	bl	42e2d4 <ferror@plt+0x2b504>
  4200d4:	b	41fe30 <ferror@plt+0x1d060>
  4200d8:	mov	x2, #0x0                   	// #0
  4200dc:	adrp	x1, 41d000 <ferror@plt+0x1a230>
  4200e0:	add	x1, x1, #0xeac
  4200e4:	b	426dc4 <ferror@plt+0x23ff4>
  4200e8:	stp	x29, x30, [sp, #-32]!
  4200ec:	mov	x29, sp
  4200f0:	stp	x19, x20, [sp, #16]
  4200f4:	mov	x19, x0
  4200f8:	mov	w0, w4
  4200fc:	mov	w4, w3
  420100:	mov	x3, x2
  420104:	mov	w2, w0
  420108:	ldr	x0, [x19, #40]
  42010c:	bl	42b230 <ferror@plt+0x28460>
  420110:	mov	x20, x0
  420114:	cbz	x0, 420128 <ferror@plt+0x1d358>
  420118:	ldr	w1, [x0, #16]
  42011c:	mov	w2, #0x7f                  	// #127
  420120:	ldr	x0, [x19, #40]
  420124:	bl	42b50c <ferror@plt+0x2873c>
  420128:	ldr	x2, [x19, #912]
  42012c:	cbz	x2, 420148 <ferror@plt+0x1d378>
  420130:	mov	x1, x20
  420134:	mov	x0, x19
  420138:	ldp	x19, x20, [sp, #16]
  42013c:	mov	x16, x2
  420140:	ldp	x29, x30, [sp], #32
  420144:	br	x16
  420148:	ldp	x19, x20, [sp, #16]
  42014c:	ldp	x29, x30, [sp], #32
  420150:	ret
  420154:	stp	x29, x30, [sp, #-96]!
  420158:	mov	w3, #0x18                  	// #24
  42015c:	mov	x29, sp
  420160:	stp	x21, x22, [sp, #32]
  420164:	ldr	x21, [x0, #40]
  420168:	stp	x19, x20, [sp, #16]
  42016c:	mov	x19, x0
  420170:	stp	x23, x24, [sp, #48]
  420174:	ldr	w1, [x21, #12]
  420178:	ldr	x2, [x21]
  42017c:	sub	w1, w1, #0x1
  420180:	smaddl	x1, w1, w3, x2
  420184:	ldr	x23, [x1, #8]
  420188:	str	x25, [sp, #64]
  42018c:	ldrb	w20, [x1, #5]
  420190:	mov	w1, #0x1                   	// #1
  420194:	bl	42e2d4 <ferror@plt+0x2b504>
  420198:	mov	x0, x19
  42019c:	bl	430978 <ferror@plt+0x2dba8>
  4201a0:	mov	x1, x0
  4201a4:	ldrb	w0, [x0, #4]
  4201a8:	cmp	w0, #0x37
  4201ac:	b.ne	4201f0 <ferror@plt+0x1d420>  // b.any
  4201b0:	ldr	w6, [x1, #8]
  4201b4:	adrp	x3, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4201b8:	ldr	x5, [x1, #16]
  4201bc:	add	x3, x3, #0xb08
  4201c0:	mov	x2, #0x0                   	// #0
  4201c4:	mov	w24, #0x0                   	// #0
  4201c8:	mov	w4, #0xa                   	// #10
  4201cc:	cmp	x6, x2
  4201d0:	b.eq	4202c8 <ferror@plt+0x1d4f8>  // b.none
  4201d4:	ldrb	w0, [x5, x2]
  4201d8:	add	x2, x2, #0x1
  4201dc:	ldrh	w7, [x3, w0, sxtw #1]
  4201e0:	tbz	w7, #2, 4201f0 <ferror@plt+0x1d420>
  4201e4:	madd	w24, w24, w4, w0
  4201e8:	sub	w24, w24, #0x30
  4201ec:	b	4201cc <ferror@plt+0x1d3fc>
  4201f0:	mov	x0, x19
  4201f4:	bl	42947c <ferror@plt+0x266ac>
  4201f8:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  4201fc:	mov	x3, x0
  420200:	add	x2, x2, #0xa9a
  420204:	mov	x0, x19
  420208:	mov	w1, #0x3                   	// #3
  42020c:	bl	421610 <ferror@plt+0x1e840>
  420210:	ldp	x19, x20, [sp, #16]
  420214:	ldp	x21, x22, [sp, #32]
  420218:	ldp	x23, x24, [sp, #48]
  42021c:	ldr	x25, [sp, #64]
  420220:	ldp	x29, x30, [sp], #96
  420224:	ret
  420228:	cmp	w0, #0x2
  42022c:	b.ne	420248 <ferror@plt+0x1d478>  // b.any
  420230:	mov	w1, w0
  420234:	mov	w25, #0x1                   	// #1
  420238:	mov	x0, x19
  42023c:	bl	41e004 <ferror@plt+0x1b234>
  420240:	mov	w20, w0
  420244:	b	420340 <ferror@plt+0x1d570>
  420248:	mov	w25, #0x3                   	// #3
  42024c:	b	420340 <ferror@plt+0x1d570>
  420250:	mov	w20, #0x0                   	// #0
  420254:	b	420360 <ferror@plt+0x1d590>
  420258:	cmp	w4, #0x16
  42025c:	b.eq	420278 <ferror@plt+0x1d4a8>  // b.none
  420260:	mov	x0, x19
  420264:	bl	42947c <ferror@plt+0x266ac>
  420268:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  42026c:	mov	x3, x0
  420270:	add	x2, x2, #0xac1
  420274:	b	420204 <ferror@plt+0x1d434>
  420278:	mov	w25, #0x3                   	// #3
  42027c:	b	420374 <ferror@plt+0x1d5a4>
  420280:	cbz	x0, 420294 <ferror@plt+0x1d4c4>
  420284:	ldr	x0, [x0, #8]
  420288:	mov	x1, x23
  42028c:	bl	4436a0 <ferror@plt+0x408d0>
  420290:	cbnz	w0, 4203ac <ferror@plt+0x1d5dc>
  420294:	ldr	x1, [x19, #40]
  420298:	mov	w4, w20
  42029c:	mov	w3, w24
  4202a0:	mov	x2, x23
  4202a4:	ldr	w0, [x1, #56]
  4202a8:	sub	w0, w0, #0x1
  4202ac:	str	w0, [x1, #56]
  4202b0:	mov	x0, x19
  4202b4:	mov	w1, w25
  4202b8:	bl	4200e8 <ferror@plt+0x1d318>
  4202bc:	mov	w0, #0x1                   	// #1
  4202c0:	strb	w0, [x21, #116]
  4202c4:	b	420210 <ferror@plt+0x1d440>
  4202c8:	mov	x0, x19
  4202cc:	bl	430978 <ferror@plt+0x2dba8>
  4202d0:	ldrb	w4, [x0, #4]
  4202d4:	mov	x1, x0
  4202d8:	cmp	w4, #0x3e
  4202dc:	b.ne	420258 <ferror@plt+0x1d488>  // b.any
  4202e0:	add	x3, sp, #0x50
  4202e4:	add	x1, x1, #0x8
  4202e8:	mov	x0, x19
  4202ec:	mov	x2, #0x1                   	// #1
  4202f0:	str	wzr, [sp, #80]
  4202f4:	str	xzr, [sp, #88]
  4202f8:	bl	41dacc <ferror@plt+0x1acfc>
  4202fc:	tst	w0, #0xff
  420300:	b.eq	420308 <ferror@plt+0x1d538>  // b.none
  420304:	ldr	x23, [sp, #88]
  420308:	mov	x0, x19
  42030c:	mov	w1, #0x0                   	// #0
  420310:	bl	41e004 <ferror@plt+0x1b234>
  420314:	mov	w20, w0
  420318:	cmp	w0, #0x1
  42031c:	b.ne	420228 <ferror@plt+0x1d458>  // b.any
  420320:	mov	x1, x23
  420324:	mov	x0, x19
  420328:	bl	426640 <ferror@plt+0x23870>
  42032c:	mov	w25, #0x0                   	// #0
  420330:	mov	w1, w20
  420334:	mov	x0, x19
  420338:	bl	41e004 <ferror@plt+0x1b234>
  42033c:	mov	w20, w0
  420340:	cmp	w20, #0x3
  420344:	b.ne	420250 <ferror@plt+0x1d480>  // b.any
  420348:	mov	w1, w20
  42034c:	mov	x0, x19
  420350:	bl	41e004 <ferror@plt+0x1b234>
  420354:	cmp	w0, #0x4
  420358:	cset	w20, eq  // eq = none
  42035c:	add	w20, w20, #0x1
  420360:	ldr	x0, [x19]
  420364:	mov	w1, #0x0                   	// #0
  420368:	strb	w20, [x0, #106]
  42036c:	mov	x0, x19
  420370:	bl	41e970 <ferror@plt+0x1bba0>
  420374:	mov	x0, x19
  420378:	bl	41ee88 <ferror@plt+0x1c0b8>
  42037c:	cmp	w25, #0x1
  420380:	b.ne	420294 <ferror@plt+0x1d4c4>  // b.any
  420384:	ldr	w22, [x21, #12]
  420388:	mov	w0, #0x18                  	// #24
  42038c:	ldr	x1, [x21]
  420390:	sub	w22, w22, #0x1
  420394:	smaddl	x22, w22, w0, x1
  420398:	mov	x0, x21
  42039c:	mov	x1, x22
  4203a0:	bl	42b1c4 <ferror@plt+0x283f4>
  4203a4:	ldr	w1, [x22, #20]
  4203a8:	cbnz	w1, 420280 <ferror@plt+0x1d4b0>
  4203ac:	mov	x3, x23
  4203b0:	mov	x0, x19
  4203b4:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  4203b8:	mov	w1, #0x0                   	// #0
  4203bc:	add	x2, x2, #0xade
  4203c0:	bl	42167c <ferror@plt+0x1e8ac>
  4203c4:	b	420210 <ferror@plt+0x1d440>
  4203c8:	stp	x29, x30, [sp, #-80]!
  4203cc:	mov	w3, #0x18                  	// #24
  4203d0:	mov	x29, sp
  4203d4:	stp	x21, x22, [sp, #32]
  4203d8:	ldr	x21, [x0, #40]
  4203dc:	stp	x19, x20, [sp, #16]
  4203e0:	mov	x19, x0
  4203e4:	stp	x23, x24, [sp, #48]
  4203e8:	mov	w24, #0x7fffffff            	// #2147483647
  4203ec:	ldr	w1, [x21, #12]
  4203f0:	ldr	x2, [x21]
  4203f4:	sub	w1, w1, #0x1
  4203f8:	smaddl	x1, w1, w3, x2
  4203fc:	ldrb	w22, [x1, #5]
  420400:	ldr	x23, [x1, #8]
  420404:	ldrb	w1, [x0, #1152]
  420408:	cmp	w1, #0x0
  42040c:	mov	w1, #0x7fff                	// #32767
  420410:	csel	w24, w24, w1, ne  // ne = any
  420414:	bl	430978 <ferror@plt+0x2dba8>
  420418:	mov	x1, x0
  42041c:	ldrb	w0, [x0, #4]
  420420:	cmp	w0, #0x37
  420424:	b.ne	420480 <ferror@plt+0x1d6b0>  // b.any
  420428:	ldr	w8, [x1, #8]
  42042c:	adrp	x4, 46c000 <_obstack_memory_used@@Base+0x275fc>
  420430:	ldr	x5, [x1, #16]
  420434:	add	x4, x4, #0xb08
  420438:	mov	x2, #0x0                   	// #0
  42043c:	mov	w3, #0x0                   	// #0
  420440:	mov	w20, #0x0                   	// #0
  420444:	mov	w7, #0xa                   	// #10
  420448:	mov	w6, #0x1                   	// #1
  42044c:	cmp	x8, x2
  420450:	b.eq	420590 <ferror@plt+0x1d7c0>  // b.none
  420454:	ldrb	w9, [x5, x2]
  420458:	ldrb	w0, [x5, x2]
  42045c:	ldrh	w9, [x4, x9, lsl #1]
  420460:	tbz	w9, #2, 4204b0 <ferror@plt+0x1d6e0>
  420464:	madd	w0, w20, w7, w0
  420468:	add	x2, x2, #0x1
  42046c:	sub	w0, w0, #0x30
  420470:	cmp	w20, w0
  420474:	mov	w20, w0
  420478:	csel	w3, w3, w6, ls  // ls = plast
  42047c:	b	42044c <ferror@plt+0x1d67c>
  420480:	cmp	w0, #0x16
  420484:	b.ne	4204b0 <ferror@plt+0x1d6e0>  // b.any
  420488:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  42048c:	mov	x0, x19
  420490:	add	x2, x2, #0xb14
  420494:	mov	w1, #0x3                   	// #3
  420498:	bl	421610 <ferror@plt+0x1e840>
  42049c:	ldp	x19, x20, [sp, #16]
  4204a0:	ldp	x21, x22, [sp, #32]
  4204a4:	ldp	x23, x24, [sp, #48]
  4204a8:	ldp	x29, x30, [sp], #80
  4204ac:	ret
  4204b0:	mov	x0, x19
  4204b4:	bl	42947c <ferror@plt+0x266ac>
  4204b8:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  4204bc:	mov	x3, x0
  4204c0:	add	x2, x2, #0xb37
  4204c4:	mov	x0, x19
  4204c8:	mov	w1, #0x3                   	// #3
  4204cc:	bl	421610 <ferror@plt+0x1e840>
  4204d0:	b	42049c <ferror@plt+0x1d6cc>
  4204d4:	cbz	w20, 4204e4 <ferror@plt+0x1d714>
  4204d8:	cmp	w24, w20
  4204dc:	b.cc	4204e4 <ferror@plt+0x1d714>  // b.lo, b.ul, b.last
  4204e0:	cbz	w3, 4204f8 <ferror@plt+0x1d728>
  4204e4:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  4204e8:	add	x2, x2, #0xb62
  4204ec:	mov	w1, #0x2                   	// #2
  4204f0:	mov	x0, x19
  4204f4:	bl	421610 <ferror@plt+0x1e840>
  4204f8:	mov	x0, x19
  4204fc:	bl	430978 <ferror@plt+0x2dba8>
  420500:	ldrb	w4, [x0, #4]
  420504:	mov	x1, x0
  420508:	cmp	w4, #0x3e
  42050c:	b.ne	420570 <ferror@plt+0x1d7a0>  // b.any
  420510:	add	x1, x0, #0x8
  420514:	add	x3, sp, #0x40
  420518:	mov	x0, x19
  42051c:	mov	x2, #0x1                   	// #1
  420520:	str	wzr, [sp, #64]
  420524:	str	xzr, [sp, #72]
  420528:	bl	41dacc <ferror@plt+0x1acfc>
  42052c:	tst	w0, #0xff
  420530:	b.eq	420538 <ferror@plt+0x1d768>  // b.none
  420534:	ldr	x23, [sp, #72]
  420538:	mov	x0, x19
  42053c:	mov	w1, #0x1                   	// #1
  420540:	bl	41e970 <ferror@plt+0x1bba0>
  420544:	mov	x0, x19
  420548:	bl	41ee88 <ferror@plt+0x1c0b8>
  42054c:	mov	x0, x19
  420550:	mov	w4, w22
  420554:	mov	w3, w20
  420558:	mov	x2, x23
  42055c:	mov	w1, #0x3                   	// #3
  420560:	bl	4200e8 <ferror@plt+0x1d318>
  420564:	mov	w0, #0x1                   	// #1
  420568:	strb	w0, [x21, #116]
  42056c:	b	42049c <ferror@plt+0x1d6cc>
  420570:	cmp	w4, #0x16
  420574:	b.eq	420544 <ferror@plt+0x1d774>  // b.none
  420578:	mov	x0, x19
  42057c:	bl	42947c <ferror@plt+0x266ac>
  420580:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  420584:	mov	x3, x0
  420588:	add	x2, x2, #0xac1
  42058c:	b	4204c4 <ferror@plt+0x1d6f4>
  420590:	ldrb	w0, [x19, #1154]
  420594:	cbnz	w0, 4204d4 <ferror@plt+0x1d704>
  420598:	cbz	w3, 4204f8 <ferror@plt+0x1d728>
  42059c:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  4205a0:	mov	w1, #0x0                   	// #0
  4205a4:	add	x2, x2, #0xb62
  4205a8:	b	4204f0 <ferror@plt+0x1d720>
  4205ac:	cbnz	x3, 4205c0 <ferror@plt+0x1d7f0>
  4205b0:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  4205b4:	mov	w1, #0x4                   	// #4
  4205b8:	add	x2, x2, #0xb7b
  4205bc:	b	421610 <ferror@plt+0x1e840>
  4205c0:	stp	x29, x30, [sp, #-32]!
  4205c4:	mov	x29, sp
  4205c8:	stp	x19, x20, [sp, #16]
  4205cc:	mov	x19, x3
  4205d0:	and	w20, w4, #0xff
  4205d4:	mov	w3, #0x0                   	// #0
  4205d8:	bl	41fb50 <ferror@plt+0x1cd80>
  4205dc:	cbz	x0, 4205e8 <ferror@plt+0x1d818>
  4205e0:	strb	w20, [x0, #19]
  4205e4:	str	x19, [x0, #24]
  4205e8:	ldp	x19, x20, [sp, #16]
  4205ec:	ldp	x29, x30, [sp], #32
  4205f0:	ret
  4205f4:	stp	x29, x30, [sp, #-32]!
  4205f8:	mov	x29, sp
  4205fc:	stp	x19, x20, [sp, #16]
  420600:	mov	w19, w3
  420604:	and	w20, w4, #0xff
  420608:	mov	w3, w5
  42060c:	bl	41fb50 <ferror@plt+0x1cd80>
  420610:	cbz	x0, 420624 <ferror@plt+0x1d854>
  420614:	mov	w1, #0x1                   	// #1
  420618:	strb	w1, [x0, #18]
  42061c:	strb	w20, [x0, #19]
  420620:	str	w19, [x0, #24]
  420624:	ldp	x19, x20, [sp, #16]
  420628:	ldp	x29, x30, [sp], #32
  42062c:	ret
  420630:	stp	x29, x30, [sp, #-32]!
  420634:	mov	x1, #0x0                   	// #0
  420638:	adrp	x3, 41e000 <ferror@plt+0x1b230>
  42063c:	mov	x29, sp
  420640:	add	x3, x3, #0xc94
  420644:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  420648:	add	x2, x2, #0xba0
  42064c:	stp	x19, x20, [sp, #16]
  420650:	mov	x19, x0
  420654:	bl	41fd08 <ferror@plt+0x1cf38>
  420658:	adrp	x20, 466000 <_obstack_memory_used@@Base+0x215fc>
  42065c:	mov	x0, x19
  420660:	mov	x1, #0x0                   	// #0
  420664:	adrp	x3, 41f000 <ferror@plt+0x1c230>
  420668:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  42066c:	add	x3, x3, #0xd4
  420670:	add	x2, x2, #0xba5
  420674:	bl	41fd08 <ferror@plt+0x1cf38>
  420678:	add	x20, x20, #0xbc1
  42067c:	mov	x0, x19
  420680:	mov	x1, #0x0                   	// #0
  420684:	adrp	x3, 420000 <ferror@plt+0x1d230>
  420688:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  42068c:	add	x3, x3, #0xaa0
  420690:	add	x2, x2, #0xbb0
  420694:	bl	41fd08 <ferror@plt+0x1cf38>
  420698:	mov	x1, x20
  42069c:	mov	x0, x19
  4206a0:	adrp	x3, 41e000 <ferror@plt+0x1b230>
  4206a4:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  4206a8:	add	x3, x3, #0xd4
  4206ac:	add	x2, x2, #0xbba
  4206b0:	bl	41fd08 <ferror@plt+0x1cf38>
  4206b4:	mov	x1, x20
  4206b8:	mov	x0, x19
  4206bc:	adrp	x3, 41f000 <ferror@plt+0x1c230>
  4206c0:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  4206c4:	add	x3, x3, #0x420
  4206c8:	add	x2, x2, #0xbc5
  4206cc:	bl	41fd08 <ferror@plt+0x1cf38>
  4206d0:	mov	x1, x20
  4206d4:	mov	x0, x19
  4206d8:	adrp	x3, 41e000 <ferror@plt+0x1b230>
  4206dc:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  4206e0:	add	x3, x3, #0xbd4
  4206e4:	add	x2, x2, #0x5b3
  4206e8:	bl	41fd08 <ferror@plt+0x1cf38>
  4206ec:	mov	x1, x20
  4206f0:	mov	x0, x19
  4206f4:	adrp	x3, 41e000 <ferror@plt+0x1b230>
  4206f8:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4206fc:	add	x3, x3, #0x2c4
  420700:	add	x2, x2, #0x858
  420704:	bl	41fd08 <ferror@plt+0x1cf38>
  420708:	mov	x1, x20
  42070c:	mov	x0, x19
  420710:	ldp	x19, x20, [sp, #16]
  420714:	adrp	x3, 41e000 <ferror@plt+0x1b230>
  420718:	ldp	x29, x30, [sp], #32
  42071c:	add	x3, x3, #0x2bc
  420720:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  420724:	add	x2, x2, #0x680
  420728:	b	41fd08 <ferror@plt+0x1cf38>
  42072c:	stp	x29, x30, [sp, #-32]!
  420730:	mov	x29, sp
  420734:	stp	x19, x20, [sp, #16]
  420738:	mov	x20, x0
  42073c:	ldr	x0, [x0, #896]
  420740:	bl	41dedc <ferror@plt+0x1b10c>
  420744:	sbfiz	x0, x0, #3, #32
  420748:	bl	44526c <_obstack_memory_used@@Base+0x868>
  42074c:	mov	x19, x0
  420750:	mov	x1, x0
  420754:	ldr	x0, [x20, #896]
  420758:	bl	41e7d8 <ferror@plt+0x1ba08>
  42075c:	mov	x0, x19
  420760:	ldp	x19, x20, [sp, #16]
  420764:	ldp	x29, x30, [sp], #32
  420768:	ret
  42076c:	stp	x29, x30, [sp, #-32]!
  420770:	mov	x2, x1
  420774:	mov	x29, sp
  420778:	str	x19, [sp, #16]
  42077c:	mov	x19, x1
  420780:	ldr	x1, [x0, #896]
  420784:	bl	41e758 <ferror@plt+0x1b988>
  420788:	mov	x0, x19
  42078c:	ldr	x19, [sp, #16]
  420790:	ldp	x29, x30, [sp], #32
  420794:	b	402b30 <free@plt>
  420798:	stp	x29, x30, [sp, #-64]!
  42079c:	mov	x29, sp
  4207a0:	str	x21, [sp, #32]
  4207a4:	mov	x21, x1
  4207a8:	add	x2, sp, #0x38
  4207ac:	mov	w1, #0x4                   	// #4
  4207b0:	stp	x19, x20, [sp, #16]
  4207b4:	mov	x20, x0
  4207b8:	bl	41f478 <ferror@plt+0x1c6a8>
  4207bc:	str	wzr, [x21]
  4207c0:	mov	x19, x0
  4207c4:	cbz	x0, 42080c <ferror@plt+0x1da3c>
  4207c8:	ldr	x1, [x0, #24]
  4207cc:	cbz	x1, 4207ec <ferror@plt+0x1da1c>
  4207d0:	ldr	x1, [sp, #56]
  4207d4:	cbz	x1, 420804 <ferror@plt+0x1da34>
  4207d8:	bl	41e17c <ferror@plt+0x1b3ac>
  4207dc:	ldr	x0, [x0]
  4207e0:	cmp	x0, #0x0
  4207e4:	cset	w0, ne  // ne = any
  4207e8:	str	w0, [x21]
  4207ec:	cmp	x19, #0x0
  4207f0:	cset	w0, eq  // eq = none
  4207f4:	ldp	x19, x20, [sp, #16]
  4207f8:	ldr	x21, [sp, #32]
  4207fc:	ldp	x29, x30, [sp], #64
  420800:	ret
  420804:	mov	w0, #0x1                   	// #1
  420808:	b	4207e8 <ferror@plt+0x1da18>
  42080c:	ldr	x0, [x20, #448]
  420810:	ldurb	w0, [x0, #-20]
  420814:	cmp	w0, #0x16
  420818:	b.ne	4207ec <ferror@plt+0x1da1c>  // b.any
  42081c:	mov	x0, x20
  420820:	mov	w1, #0x1                   	// #1
  420824:	bl	42e2d4 <ferror@plt+0x2b504>
  420828:	b	4207ec <ferror@plt+0x1da1c>
  42082c:	add	x0, x0, #0x458
  420830:	ret
  420834:	add	x0, x0, #0x388
  420838:	ret
  42083c:	stp	x29, x30, [sp, #-16]!
  420840:	mov	x2, #0xb8                  	// #184
  420844:	add	x0, x0, #0x388
  420848:	mov	x29, sp
  42084c:	bl	4026a0 <memcpy@plt>
  420850:	ldp	x29, x30, [sp], #16
  420854:	ret
  420858:	stp	x29, x30, [sp, #-32]!
  42085c:	mov	x29, sp
  420860:	str	x19, [sp, #16]
  420864:	mov	x19, x0
  420868:	ldr	x0, [x0, #712]
  42086c:	cbnz	x0, 420878 <ferror@plt+0x1daa8>
  420870:	bl	431034 <ferror@plt+0x2e264>
  420874:	str	x0, [x19, #712]
  420878:	ldr	x0, [x19, #712]
  42087c:	ldr	x19, [sp, #16]
  420880:	ldp	x29, x30, [sp], #32
  420884:	ret
  420888:	stp	x29, x30, [sp, #-64]!
  42088c:	mov	x29, sp
  420890:	stp	x19, x20, [sp, #16]
  420894:	add	x19, x0, #0x328
  420898:	mov	w20, w3
  42089c:	stp	x21, x22, [sp, #32]
  4208a0:	mov	x21, x1
  4208a4:	mov	x22, x2
  4208a8:	ldr	x1, [x19, #24]
  4208ac:	str	x23, [sp, #48]
  4208b0:	mov	x23, x0
  4208b4:	ldr	x0, [x19, #32]
  4208b8:	sub	x0, x0, x1
  4208bc:	cmp	x0, #0xc7
  4208c0:	b.hi	4208d0 <ferror@plt+0x1db00>  // b.pmore
  4208c4:	mov	x0, x19
  4208c8:	mov	x1, #0xc8                  	// #200
  4208cc:	bl	444840 <_obstack_newchunk@@Base>
  4208d0:	ldp	x4, x5, [x19, #16]
  4208d4:	add	x5, x5, #0xc8
  4208d8:	cmp	x5, x4
  4208dc:	b.ne	4208ec <ferror@plt+0x1db1c>  // b.any
  4208e0:	ldrb	w0, [x19, #80]
  4208e4:	orr	w0, w0, #0x2
  4208e8:	strb	w0, [x19, #80]
  4208ec:	ldr	x3, [x19, #48]
  4208f0:	and	w20, w20, #0x1
  4208f4:	ldr	x0, [x19, #8]
  4208f8:	add	x5, x5, x3
  4208fc:	ldr	x1, [x19, #32]
  420900:	bic	x3, x5, x3
  420904:	sub	x2, x3, x0
  420908:	ubfiz	w20, w20, #9, #7
  42090c:	sub	x0, x1, x0
  420910:	orr	w20, w20, #0x1
  420914:	cmp	x2, x0
  420918:	mov	x0, x4
  42091c:	csel	x3, x3, x1, ls  // ls = plast
  420920:	stp	x3, x3, [x19, #16]
  420924:	mov	x2, #0xc8                  	// #200
  420928:	mov	w1, #0x0                   	// #0
  42092c:	bl	402930 <memset@plt>
  420930:	mov	x4, x0
  420934:	ldr	x0, [x23]
  420938:	mov	w1, #0xfffffd00            	// #-768
  42093c:	str	x0, [x4, #72]
  420940:	ldrh	w0, [x4, #104]
  420944:	stp	x21, x21, [x4, #16]
  420948:	add	x21, x21, x22
  42094c:	and	w0, w0, w1
  420950:	orr	w20, w20, w0
  420954:	strh	w20, [x4, #104]
  420958:	mov	x0, x4
  42095c:	ldp	x19, x20, [sp, #16]
  420960:	str	x21, [x4, #32]
  420964:	ldp	x21, x22, [sp, #32]
  420968:	str	x4, [x23]
  42096c:	ldr	x23, [sp, #48]
  420970:	ldp	x29, x30, [sp], #64
  420974:	ret
  420978:	stp	x29, x30, [sp, #-80]!
  42097c:	mov	x29, sp
  420980:	stp	x19, x20, [sp, #16]
  420984:	mov	x20, x0
  420988:	ldr	x19, [x0]
  42098c:	stp	x21, x22, [sp, #32]
  420990:	adrp	x22, 466000 <_obstack_memory_used@@Base+0x215fc>
  420994:	add	x22, x22, #0xbd3
  420998:	stp	x23, x24, [sp, #48]
  42099c:	adrp	x24, 466000 <_obstack_memory_used@@Base+0x215fc>
  4209a0:	add	x24, x24, #0xcc0
  4209a4:	ldr	x23, [x19, #80]
  4209a8:	ldr	x21, [x19, #96]
  4209ac:	str	x25, [sp, #64]
  4209b0:	mov	x25, #0x18                  	// #24
  4209b4:	cbz	x21, 4209e4 <ferror@plt+0x1dc14>
  4209b8:	ldrsw	x0, [x21, #28]
  4209bc:	mov	x4, x22
  4209c0:	ldr	w2, [x21, #8]
  4209c4:	mov	w3, #0x0                   	// #0
  4209c8:	mov	w1, #0x3                   	// #3
  4209cc:	madd	x0, x0, x25, x24
  4209d0:	ldr	x5, [x0, #8]
  4209d4:	mov	x0, x20
  4209d8:	bl	4217cc <ferror@plt+0x1e9fc>
  4209dc:	ldr	x21, [x21]
  4209e0:	b	4209b4 <ferror@plt+0x1dbe4>
  4209e4:	strb	wzr, [x20, #18]
  4209e8:	ldr	x0, [x19, #72]
  4209ec:	ldr	x21, [x19, #40]
  4209f0:	str	x0, [x20]
  4209f4:	ldr	x0, [x19, #48]
  4209f8:	bl	402b30 <free@plt>
  4209fc:	ldr	x1, [x20, #816]
  420a00:	add	x0, x20, #0x328
  420a04:	cmp	x1, x19
  420a08:	b.cs	420a5c <ferror@plt+0x1dc8c>  // b.hs, b.nlast
  420a0c:	ldr	x1, [x0, #32]
  420a10:	cmp	x1, x19
  420a14:	b.ls	420a5c <ferror@plt+0x1dc8c>  // b.plast
  420a18:	stp	x19, x19, [x0, #16]
  420a1c:	cbz	x23, 420a68 <ferror@plt+0x1dc98>
  420a20:	mov	x2, x21
  420a24:	mov	x1, x23
  420a28:	mov	x0, x20
  420a2c:	bl	426838 <ferror@plt+0x23a68>
  420a30:	mov	x0, x20
  420a34:	mov	w4, #0x0                   	// #0
  420a38:	ldp	x19, x20, [sp, #16]
  420a3c:	mov	w3, #0x0                   	// #0
  420a40:	ldp	x21, x22, [sp, #32]
  420a44:	mov	x2, #0x0                   	// #0
  420a48:	ldp	x23, x24, [sp, #48]
  420a4c:	mov	w1, #0x1                   	// #1
  420a50:	ldr	x25, [sp, #64]
  420a54:	ldp	x29, x30, [sp], #80
  420a58:	b	4200e8 <ferror@plt+0x1d318>
  420a5c:	mov	x1, x19
  420a60:	bl	444990 <_obstack_free@@Base>
  420a64:	b	420a1c <ferror@plt+0x1dc4c>
  420a68:	cbz	x21, 420a88 <ferror@plt+0x1dcb8>
  420a6c:	mov	x0, x21
  420a70:	ldp	x19, x20, [sp, #16]
  420a74:	ldp	x21, x22, [sp, #32]
  420a78:	ldp	x23, x24, [sp, #48]
  420a7c:	ldr	x25, [sp, #64]
  420a80:	ldp	x29, x30, [sp], #80
  420a84:	b	402b30 <free@plt>
  420a88:	ldp	x19, x20, [sp, #16]
  420a8c:	ldp	x21, x22, [sp, #32]
  420a90:	ldp	x23, x24, [sp, #48]
  420a94:	ldr	x25, [sp, #64]
  420a98:	ldp	x29, x30, [sp], #80
  420a9c:	ret
  420aa0:	stp	x29, x30, [sp, #-64]!
  420aa4:	mov	x29, sp
  420aa8:	stp	x19, x20, [sp, #16]
  420aac:	mov	x19, x0
  420ab0:	stp	x21, x22, [sp, #32]
  420ab4:	ldr	x20, [x0, #1400]
  420ab8:	str	x23, [sp, #48]
  420abc:	bl	41e83c <ferror@plt+0x1ba6c>
  420ac0:	cbnz	x0, 420b10 <ferror@plt+0x1dd40>
  420ac4:	ldr	x0, [x19, #448]
  420ac8:	adrp	x4, 466000 <_obstack_memory_used@@Base+0x215fc>
  420acc:	add	x4, x4, #0xbe4
  420ad0:	mov	w3, #0x0                   	// #0
  420ad4:	mov	w1, #0x3                   	// #3
  420ad8:	ldur	w2, [x0, #-24]
  420adc:	mov	x0, x19
  420ae0:	bl	4217cc <ferror@plt+0x1e9fc>
  420ae4:	mov	w1, #0x0                   	// #0
  420ae8:	mov	x0, x19
  420aec:	bl	41e970 <ferror@plt+0x1bba0>
  420af0:	mov	x0, x19
  420af4:	bl	41ee88 <ferror@plt+0x1c0b8>
  420af8:	mov	sp, x29
  420afc:	ldp	x19, x20, [sp, #16]
  420b00:	ldp	x21, x22, [sp, #32]
  420b04:	ldr	x23, [sp, #48]
  420b08:	ldp	x29, x30, [sp], #64
  420b0c:	ret
  420b10:	ldr	w1, [x0, #8]
  420b14:	add	w2, w1, #0x2
  420b18:	mov	w1, w1
  420b1c:	add	x2, x2, #0xf
  420b20:	sub	x1, x1, #0x1
  420b24:	and	x2, x2, #0x1fffffff0
  420b28:	sub	sp, sp, x2
  420b2c:	ldr	x2, [x0, #16]
  420b30:	mov	x23, sp
  420b34:	add	x1, x2, x1
  420b38:	ldrb	w0, [x2]
  420b3c:	cmp	w0, #0x4c
  420b40:	cset	x0, eq  // eq = none
  420b44:	add	x0, x0, #0x1
  420b48:	add	x0, x2, x0
  420b4c:	mov	x2, x23
  420b50:	cmp	x0, x1
  420b54:	b.cs	420b88 <ferror@plt+0x1ddb8>  // b.hs, b.nlast
  420b58:	ldrb	w3, [x0]
  420b5c:	cmp	w3, #0x5c
  420b60:	b.ne	420b7c <ferror@plt+0x1ddac>  // b.any
  420b64:	ldrb	w3, [x0, #1]
  420b68:	cmp	w3, #0x5c
  420b6c:	b.eq	420b78 <ferror@plt+0x1dda8>  // b.none
  420b70:	cmp	w3, #0x22
  420b74:	b.ne	420b7c <ferror@plt+0x1ddac>  // b.any
  420b78:	add	x0, x0, #0x1
  420b7c:	ldrb	w3, [x0], #1
  420b80:	strb	w3, [x2], #1
  420b84:	b	420b50 <ferror@plt+0x1dd80>
  420b88:	strb	wzr, [x2]
  420b8c:	mov	w1, #0x0                   	// #0
  420b90:	mov	x21, #0x0                   	// #0
  420b94:	mov	x0, x19
  420b98:	bl	41e970 <ferror@plt+0x1bba0>
  420b9c:	mov	x0, x19
  420ba0:	bl	41ee88 <ferror@plt+0x1c0b8>
  420ba4:	cbz	x20, 420af8 <ferror@plt+0x1dd28>
  420ba8:	ldr	x22, [x20, #8]
  420bac:	mov	x1, x23
  420bb0:	mov	x0, x22
  420bb4:	bl	402ad0 <strcmp@plt>
  420bb8:	ldr	x1, [x20]
  420bbc:	cbnz	w0, 420ccc <ferror@plt+0x1defc>
  420bc0:	cbnz	x21, 420cd8 <ferror@plt+0x1df08>
  420bc4:	str	x1, [x19, #1400]
  420bc8:	mov	x1, x22
  420bcc:	mov	x0, x19
  420bd0:	bl	427a0c <ferror@plt+0x24c3c>
  420bd4:	mov	x21, x0
  420bd8:	cbz	x0, 420d1c <ferror@plt+0x1df4c>
  420bdc:	ldr	x1, [x19, #1024]
  420be0:	cbz	x1, 420bec <ferror@plt+0x1de1c>
  420be4:	mov	x0, x19
  420be8:	blr	x1
  420bec:	ldrb	w0, [x21, #18]
  420bf0:	tbz	w0, #1, 420c2c <ferror@plt+0x1de5c>
  420bf4:	ldr	x3, [x19, #944]
  420bf8:	cbz	x3, 420c0c <ferror@plt+0x1de3c>
  420bfc:	ldr	w1, [x19, #48]
  420c00:	mov	x2, x21
  420c04:	mov	x0, x19
  420c08:	blr	x3
  420c0c:	ldrb	w0, [x19, #1151]
  420c10:	cbz	w0, 420c24 <ferror@plt+0x1de54>
  420c14:	mov	x1, x21
  420c18:	mov	x0, x19
  420c1c:	mov	x2, #0x0                   	// #0
  420c20:	bl	42d988 <ferror@plt+0x2abb8>
  420c24:	mov	x0, x21
  420c28:	bl	42e554 <ferror@plt+0x2b784>
  420c2c:	ldrb	w0, [x20, #28]
  420c30:	tbnz	w0, #2, 420d1c <ferror@plt+0x1df4c>
  420c34:	ldr	x21, [x20, #16]
  420c38:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x215fc>
  420c3c:	add	x1, x1, #0xc08
  420c40:	mov	x0, x21
  420c44:	bl	402cc0 <strcspn@plt>
  420c48:	sxtw	x23, w0
  420c4c:	mov	x1, x21
  420c50:	mov	w2, w23
  420c54:	mov	x0, x19
  420c58:	bl	426c40 <ferror@plt+0x23e70>
  420c5c:	mov	x22, x0
  420c60:	ldr	x21, [x20, #16]
  420c64:	mov	w1, #0xa                   	// #10
  420c68:	add	x21, x21, x23
  420c6c:	mov	x0, x21
  420c70:	bl	402b60 <strchr@plt>
  420c74:	mov	x1, x21
  420c78:	sub	x2, x0, x21
  420c7c:	mov	w3, #0x1                   	// #1
  420c80:	mov	x0, x19
  420c84:	bl	420888 <ferror@plt+0x1dab8>
  420c88:	mov	x21, x0
  420c8c:	cbz	x0, 420d38 <ferror@plt+0x1df68>
  420c90:	mov	x0, x19
  420c94:	bl	4272e8 <ferror@plt+0x24518>
  420c98:	mov	w0, #0x1                   	// #1
  420c9c:	strb	w0, [x21, #106]
  420ca0:	mov	x1, x22
  420ca4:	mov	x0, x19
  420ca8:	bl	42e710 <ferror@plt+0x2b940>
  420cac:	tst	w0, #0xff
  420cb0:	b.ne	420ce0 <ferror@plt+0x1df10>  // b.any
  420cb4:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  420cb8:	add	x2, x2, #0xc0c
  420cbc:	mov	w1, #0x9a8                 	// #2472
  420cc0:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x215fc>
  420cc4:	add	x0, x0, #0xc1f
  420cc8:	bl	402de0 <ferror@plt+0x10>
  420ccc:	mov	x21, x20
  420cd0:	mov	x20, x1
  420cd4:	b	420ba4 <ferror@plt+0x1ddd4>
  420cd8:	str	x1, [x21]
  420cdc:	b	420bc8 <ferror@plt+0x1ddf8>
  420ce0:	mov	x0, x19
  420ce4:	bl	420978 <ferror@plt+0x1dba8>
  420ce8:	ldr	x2, [x22, #24]
  420cec:	ldrb	w1, [x20, #28]
  420cf0:	ldr	w0, [x20, #24]
  420cf4:	str	w0, [x2, #8]
  420cf8:	ubfx	x0, x1, #1, #1
  420cfc:	ubfx	x1, x1, #0, #1
  420d00:	ubfiz	w0, w0, #5, #3
  420d04:	ubfiz	w1, w1, #4, #4
  420d08:	orr	w0, w0, w1
  420d0c:	ldrb	w1, [x2, #19]
  420d10:	and	w1, w1, #0xffffffcf
  420d14:	orr	w0, w0, w1
  420d18:	strb	w0, [x2, #19]
  420d1c:	ldr	x0, [x20, #16]
  420d20:	bl	402b30 <free@plt>
  420d24:	ldr	x0, [x20, #8]
  420d28:	bl	402b30 <free@plt>
  420d2c:	mov	x0, x20
  420d30:	bl	402b30 <free@plt>
  420d34:	b	420af8 <ferror@plt+0x1dd28>
  420d38:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  420d3c:	mov	w1, #0x9ac                 	// #2476
  420d40:	add	x2, x2, #0xc0c
  420d44:	b	420cc0 <ferror@plt+0x1def0>
  420d48:	stp	x29, x30, [sp, #-96]!
  420d4c:	mov	x29, sp
  420d50:	stp	x23, x24, [sp, #48]
  420d54:	mov	w23, w2
  420d58:	ldr	w2, [x1]
  420d5c:	ldr	x1, [x1, #8]
  420d60:	stp	x19, x20, [sp, #16]
  420d64:	mov	x19, x0
  420d68:	sub	w0, w2, #0x1
  420d6c:	stp	x21, x22, [sp, #32]
  420d70:	add	x0, x0, #0xf
  420d74:	stp	x25, x26, [sp, #64]
  420d78:	and	x0, x0, #0x1fffffff0
  420d7c:	mov	w2, w2
  420d80:	stp	x27, x28, [sp, #80]
  420d84:	sub	sp, sp, x0
  420d88:	mov	x21, sp
  420d8c:	ldrb	w0, [x1]
  420d90:	sub	x2, x2, #0x1
  420d94:	mov	x20, x21
  420d98:	cmp	w0, #0x4c
  420d9c:	cset	x0, eq  // eq = none
  420da0:	add	x0, x0, #0x1
  420da4:	add	x0, x1, x0
  420da8:	add	x1, x1, x2
  420dac:	cmp	x0, x1
  420db0:	b.cs	420de4 <ferror@plt+0x1e014>  // b.hs, b.nlast
  420db4:	ldrb	w2, [x0]
  420db8:	cmp	w2, #0x5c
  420dbc:	b.ne	420dd8 <ferror@plt+0x1e008>  // b.any
  420dc0:	ldrb	w2, [x0, #1]
  420dc4:	cmp	w2, #0x5c
  420dc8:	b.eq	420dd4 <ferror@plt+0x1e004>  // b.none
  420dcc:	cmp	w2, #0x22
  420dd0:	b.ne	420dd8 <ferror@plt+0x1e008>  // b.any
  420dd4:	add	x0, x0, #0x1
  420dd8:	ldrb	w2, [x0], #1
  420ddc:	strb	w2, [x20], #1
  420de0:	b	420dac <ferror@plt+0x1dfdc>
  420de4:	mov	w0, #0xa                   	// #10
  420de8:	strb	w0, [x20]
  420dec:	mov	x1, #0x38                  	// #56
  420df0:	mov	x0, #0x1                   	// #1
  420df4:	ldr	x26, [x19, #136]
  420df8:	ldr	x25, [x19, #448]
  420dfc:	ldr	x24, [x19, #488]
  420e00:	bl	4452a0 <_obstack_memory_used@@Base+0x89c>
  420e04:	str	x0, [x19, #136]
  420e08:	mov	x1, x21
  420e0c:	sub	x2, x20, x21
  420e10:	mov	x0, x19
  420e14:	mov	w3, #0x1                   	// #1
  420e18:	bl	420888 <ferror@plt+0x1dab8>
  420e1c:	ldr	x0, [x19]
  420e20:	ldr	x1, [x0, #72]
  420e24:	cbz	x1, 420e30 <ferror@plt+0x1e060>
  420e28:	ldr	x1, [x1, #80]
  420e2c:	str	x1, [x0, #80]
  420e30:	mov	w0, #0x1                   	// #1
  420e34:	strb	w0, [x19, #16]
  420e38:	mov	w0, #0x53                  	// #83
  420e3c:	strb	w0, [x19, #156]
  420e40:	ldr	x0, [x19, #40]
  420e44:	strb	wzr, [x19, #21]
  420e48:	add	x21, x19, #0x98
  420e4c:	ldr	w0, [x0, #60]
  420e50:	str	w0, [x19, #48]
  420e54:	mov	x0, x19
  420e58:	bl	4272e8 <ferror@plt+0x24518>
  420e5c:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x215fc>
  420e60:	add	x0, x0, #0xcc0
  420e64:	add	x0, x0, #0x108
  420e68:	ldr	x20, [x19, #144]
  420e6c:	str	x0, [x19, #144]
  420e70:	mov	x0, x19
  420e74:	bl	41f930 <ferror@plt+0x1cb60>
  420e78:	mov	x0, x19
  420e7c:	mov	w1, #0x1                   	// #1
  420e80:	bl	41f03c <ferror@plt+0x1c26c>
  420e84:	str	x20, [x19, #144]
  420e88:	ldrb	w0, [x19, #156]
  420e8c:	cmp	w0, #0x51
  420e90:	b.ne	420f80 <ferror@plt+0x1e1b0>  // b.any
  420e94:	mov	x0, #0x4b0                 	// #1200
  420e98:	bl	44526c <_obstack_memory_used@@Base+0x868>
  420e9c:	mov	x20, x0
  420ea0:	mov	w22, #0x32                  	// #50
  420ea4:	ldp	x0, x1, [x19, #152]
  420ea8:	mov	x27, #0x18                  	// #24
  420eac:	stp	x0, x1, [x20]
  420eb0:	ldr	x0, [x21, #16]
  420eb4:	mov	x21, #0x0                   	// #0
  420eb8:	str	x0, [x20, #16]
  420ebc:	mov	x0, x19
  420ec0:	bl	430978 <ferror@plt+0x2dba8>
  420ec4:	madd	x4, x21, x27, x27
  420ec8:	add	x28, x21, #0x1
  420ecc:	ldp	x2, x3, [x0]
  420ed0:	add	x1, x20, x4
  420ed4:	add	w21, w21, #0x2
  420ed8:	stp	x2, x3, [x1]
  420edc:	ldr	x0, [x0, #16]
  420ee0:	str	x0, [x1, #16]
  420ee4:	ldrh	w0, [x1, #6]
  420ee8:	str	w23, [x20, x4]
  420eec:	orr	w0, w0, #0x400
  420ef0:	strh	w0, [x1, #6]
  420ef4:	ldrb	w0, [x1, #4]
  420ef8:	cmp	w0, #0x52
  420efc:	b.ne	420f58 <ferror@plt+0x1e188>  // b.any
  420f00:	ldr	x0, [x19]
  420f04:	str	xzr, [x0, #80]
  420f08:	mov	x0, x19
  420f0c:	bl	420978 <ferror@plt+0x1dba8>
  420f10:	ldr	x0, [x19, #136]
  420f14:	bl	402b30 <free@plt>
  420f18:	str	x26, [x19, #136]
  420f1c:	str	x25, [x19, #448]
  420f20:	mov	w3, w21
  420f24:	str	x24, [x19, #488]
  420f28:	mov	x2, x20
  420f2c:	mov	x0, x19
  420f30:	mov	x1, #0x0                   	// #0
  420f34:	bl	42df04 <ferror@plt+0x2b134>
  420f38:	mov	sp, x29
  420f3c:	ldp	x19, x20, [sp, #16]
  420f40:	ldp	x21, x22, [sp, #32]
  420f44:	ldp	x23, x24, [sp, #48]
  420f48:	ldp	x25, x26, [sp, #64]
  420f4c:	ldp	x27, x28, [sp, #80]
  420f50:	ldp	x29, x30, [sp], #96
  420f54:	ret
  420f58:	cmp	w22, w21
  420f5c:	b.ne	420f78 <ferror@plt+0x1e1a8>  // b.any
  420f60:	add	w22, w22, w22, lsl #1
  420f64:	mov	x0, x20
  420f68:	asr	w22, w22, #1
  420f6c:	smull	x1, w22, w27
  420f70:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  420f74:	mov	x20, x0
  420f78:	mov	x21, x28
  420f7c:	b	420ebc <ferror@plt+0x1e0ec>
  420f80:	mov	x0, #0x18                  	// #24
  420f84:	bl	44526c <_obstack_memory_used@@Base+0x868>
  420f88:	mov	x20, x0
  420f8c:	ldp	x0, x1, [x19, #152]
  420f90:	ldr	x3, [x19, #904]
  420f94:	stp	x0, x1, [x20]
  420f98:	ldr	x0, [x21, #16]
  420f9c:	str	x0, [x20, #16]
  420fa0:	cbz	x3, 420fb4 <ferror@plt+0x1e1e4>
  420fa4:	ldr	x1, [x19, #448]
  420fa8:	mov	x0, x19
  420fac:	mov	w2, #0x0                   	// #0
  420fb0:	blr	x3
  420fb4:	mov	w21, #0x1                   	// #1
  420fb8:	b	420f00 <ferror@plt+0x1e130>
  420fbc:	stp	x29, x30, [sp, #-32]!
  420fc0:	mov	x29, sp
  420fc4:	stp	x19, x20, [sp, #16]
  420fc8:	mov	x19, x0
  420fcc:	mov	w20, w1
  420fd0:	bl	41e83c <ferror@plt+0x1ba6c>
  420fd4:	mov	w1, #0x53                  	// #83
  420fd8:	strb	w1, [x19, #156]
  420fdc:	cbz	x0, 421000 <ferror@plt+0x1e230>
  420fe0:	add	x1, x0, #0x8
  420fe4:	mov	w2, w20
  420fe8:	mov	x0, x19
  420fec:	bl	420d48 <ferror@plt+0x1df78>
  420ff0:	mov	w0, #0x1                   	// #1
  420ff4:	ldp	x19, x20, [sp, #16]
  420ff8:	ldp	x29, x30, [sp], #32
  420ffc:	ret
  421000:	mov	x0, x19
  421004:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  421008:	mov	w1, #0x3                   	// #3
  42100c:	add	x2, x2, #0xc39
  421010:	bl	421610 <ferror@plt+0x1e840>
  421014:	mov	w0, #0x0                   	// #0
  421018:	b	420ff4 <ferror@plt+0x1e224>
  42101c:	stp	x29, x30, [sp, #-32]!
  421020:	mov	x29, sp
  421024:	stp	x19, x20, [sp, #16]
  421028:	mov	x19, x0
  42102c:	mov	w20, w1
  421030:	mov	x1, x2
  421034:	mov	x2, x3
  421038:	mov	w3, #0x1                   	// #1
  42103c:	bl	420888 <ferror@plt+0x1dab8>
  421040:	mov	w0, #0x1                   	// #1
  421044:	strb	w0, [x19, #16]
  421048:	mov	w0, #0x53                  	// #83
  42104c:	strb	w0, [x19, #156]
  421050:	ldr	x0, [x19, #40]
  421054:	strb	wzr, [x19, #21]
  421058:	ldr	w0, [x0, #60]
  42105c:	str	w0, [x19, #48]
  421060:	mov	x0, x19
  421064:	bl	4272e8 <ferror@plt+0x24518>
  421068:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x215fc>
  42106c:	add	x1, x1, #0xcc0
  421070:	mov	w0, #0x18                  	// #24
  421074:	smaddl	x20, w20, w0, x1
  421078:	ldrb	w0, [x19, #1160]
  42107c:	str	x20, [x19, #144]
  421080:	cbz	w0, 42108c <ferror@plt+0x1e2bc>
  421084:	mov	x0, x19
  421088:	bl	41e67c <ferror@plt+0x1b8ac>
  42108c:	ldr	x0, [x19, #144]
  421090:	ldr	x1, [x0]
  421094:	mov	x0, x19
  421098:	blr	x1
  42109c:	mov	x0, x19
  4210a0:	mov	w1, #0x1                   	// #1
  4210a4:	bl	41f03c <ferror@plt+0x1c26c>
  4210a8:	mov	x0, x19
  4210ac:	ldp	x19, x20, [sp, #16]
  4210b0:	ldp	x29, x30, [sp], #32
  4210b4:	b	420978 <ferror@plt+0x1dba8>
  4210b8:	stp	x29, x30, [sp, #-48]!
  4210bc:	mov	x29, sp
  4210c0:	stp	x19, x20, [sp, #16]
  4210c4:	stp	x21, x22, [sp, #32]
  4210c8:	mov	x21, x1
  4210cc:	mov	x22, x0
  4210d0:	mov	x0, x1
  4210d4:	bl	402700 <strlen@plt>
  4210d8:	mov	x19, x0
  4210dc:	add	x0, x0, #0x12
  4210e0:	and	x0, x0, #0xfffffffffffffff0
  4210e4:	mov	x2, x19
  4210e8:	sub	sp, sp, x0
  4210ec:	mov	x1, x21
  4210f0:	mov	x20, sp
  4210f4:	mov	x0, x20
  4210f8:	bl	4026a0 <memcpy@plt>
  4210fc:	mov	x0, x21
  421100:	mov	w1, #0x3d                  	// #61
  421104:	bl	402b60 <strchr@plt>
  421108:	mov	w2, #0x20                  	// #32
  42110c:	cbz	x0, 421148 <ferror@plt+0x1e378>
  421110:	sub	x1, x0, x21
  421114:	strb	w2, [x20, x1]
  421118:	mov	w0, #0xa                   	// #10
  42111c:	mov	x3, x19
  421120:	mov	x2, x20
  421124:	mov	w1, #0x0                   	// #0
  421128:	strb	w0, [x20, x19]
  42112c:	mov	x0, x22
  421130:	bl	42101c <ferror@plt+0x1e24c>
  421134:	mov	sp, x29
  421138:	ldp	x19, x20, [sp, #16]
  42113c:	ldp	x21, x22, [sp, #32]
  421140:	ldp	x29, x30, [sp], #48
  421144:	ret
  421148:	add	x0, x19, #0x1
  42114c:	strb	w2, [x20, x19]
  421150:	mov	w1, #0x31                  	// #49
  421154:	add	x19, x19, #0x2
  421158:	strb	w1, [x20, x0]
  42115c:	b	421118 <ferror@plt+0x1e348>
  421160:	stp	x29, x30, [sp, #-272]!
  421164:	mov	x29, sp
  421168:	stp	x19, x20, [sp, #16]
  42116c:	mov	x20, x0
  421170:	mov	x0, x1
  421174:	add	x1, sp, #0x110
  421178:	stp	x1, x1, [sp, #64]
  42117c:	add	x1, sp, #0xe0
  421180:	str	x1, [sp, #80]
  421184:	mov	w1, #0xffffffd0            	// #-48
  421188:	str	w1, [sp, #88]
  42118c:	mov	w1, #0xffffff80            	// #-128
  421190:	str	w1, [sp, #92]
  421194:	add	x1, sp, #0x20
  421198:	stp	x2, x3, [sp, #224]
  42119c:	ldp	x2, x3, [sp, #64]
  4211a0:	stp	x2, x3, [sp, #32]
  4211a4:	ldp	x2, x3, [sp, #80]
  4211a8:	stp	x2, x3, [sp, #48]
  4211ac:	str	q0, [sp, #96]
  4211b0:	str	q1, [sp, #112]
  4211b4:	str	q2, [sp, #128]
  4211b8:	str	q3, [sp, #144]
  4211bc:	str	q4, [sp, #160]
  4211c0:	str	q5, [sp, #176]
  4211c4:	str	q6, [sp, #192]
  4211c8:	str	q7, [sp, #208]
  4211cc:	stp	x4, x5, [sp, #240]
  4211d0:	stp	x6, x7, [sp, #256]
  4211d4:	bl	445440 <_obstack_memory_used@@Base+0xa3c>
  4211d8:	mov	x1, x0
  4211dc:	mov	x19, x0
  4211e0:	mov	x0, x20
  4211e4:	bl	4210b8 <ferror@plt+0x1e2e8>
  4211e8:	mov	x0, x19
  4211ec:	bl	402b30 <free@plt>
  4211f0:	ldp	x19, x20, [sp, #16]
  4211f4:	ldp	x29, x30, [sp], #272
  4211f8:	ret
  4211fc:	stp	x29, x30, [sp, #-48]!
  421200:	mov	x29, sp
  421204:	stp	x19, x20, [sp, #16]
  421208:	mov	x20, x1
  42120c:	str	x21, [sp, #32]
  421210:	mov	x21, x0
  421214:	mov	x0, x1
  421218:	bl	402700 <strlen@plt>
  42121c:	mov	x19, x0
  421220:	add	x0, x0, #0x10
  421224:	and	x0, x0, #0xfffffffffffffff0
  421228:	mov	x2, x19
  42122c:	sub	sp, sp, x0
  421230:	mov	x1, x20
  421234:	mov	x4, sp
  421238:	mov	x0, x4
  42123c:	bl	4026a0 <memcpy@plt>
  421240:	mov	x4, x0
  421244:	mov	w0, #0xa                   	// #10
  421248:	mov	x3, x19
  42124c:	mov	x2, x4
  421250:	mov	w1, #0x0                   	// #0
  421254:	strb	w0, [x4, x19]
  421258:	mov	x0, x21
  42125c:	bl	42101c <ferror@plt+0x1e24c>
  421260:	mov	sp, x29
  421264:	ldp	x19, x20, [sp, #16]
  421268:	ldr	x21, [sp, #32]
  42126c:	ldp	x29, x30, [sp], #48
  421270:	ret
  421274:	stp	x29, x30, [sp, #-48]!
  421278:	mov	x29, sp
  42127c:	stp	x19, x20, [sp, #16]
  421280:	mov	x20, x1
  421284:	str	x21, [sp, #32]
  421288:	mov	x21, x0
  42128c:	mov	x0, x1
  421290:	bl	402700 <strlen@plt>
  421294:	mov	x19, x0
  421298:	add	x0, x0, #0x10
  42129c:	and	x0, x0, #0xfffffffffffffff0
  4212a0:	mov	x2, x19
  4212a4:	sub	sp, sp, x0
  4212a8:	mov	x1, x20
  4212ac:	mov	x4, sp
  4212b0:	mov	x0, x4
  4212b4:	bl	4026a0 <memcpy@plt>
  4212b8:	mov	x4, x0
  4212bc:	mov	w0, #0xa                   	// #10
  4212c0:	mov	x3, x19
  4212c4:	mov	x2, x4
  4212c8:	mov	w1, #0x7                   	// #7
  4212cc:	strb	w0, [x4, x19]
  4212d0:	mov	x0, x21
  4212d4:	bl	42101c <ferror@plt+0x1e24c>
  4212d8:	mov	sp, x29
  4212dc:	ldp	x19, x20, [sp, #16]
  4212e0:	ldr	x21, [sp, #32]
  4212e4:	ldp	x29, x30, [sp], #48
  4212e8:	ret
  4212ec:	stp	x29, x30, [sp, #-64]!
  4212f0:	mov	x29, sp
  4212f4:	stp	x19, x20, [sp, #16]
  4212f8:	stp	x21, x22, [sp, #32]
  4212fc:	mov	x21, x1
  421300:	mov	x22, x0
  421304:	mov	x0, x1
  421308:	str	x23, [sp, #48]
  42130c:	mov	w23, w2
  421310:	bl	402700 <strlen@plt>
  421314:	mov	w1, #0x3d                  	// #61
  421318:	mov	x19, x0
  42131c:	mov	x0, x21
  421320:	bl	402b60 <strchr@plt>
  421324:	mov	x20, x0
  421328:	add	x0, x19, #0x11
  42132c:	and	x0, x0, #0xfffffffffffffff0
  421330:	mov	x2, x19
  421334:	sub	sp, sp, x0
  421338:	mov	x1, x21
  42133c:	mov	x4, sp
  421340:	mov	x0, x4
  421344:	bl	4026a0 <memcpy@plt>
  421348:	mov	x4, x0
  42134c:	cbz	x20, 421368 <ferror@plt+0x1e598>
  421350:	sub	x20, x20, x21
  421354:	mov	w0, #0x28                  	// #40
  421358:	strb	w0, [x4, x20]
  42135c:	mov	w0, #0x29                  	// #41
  421360:	strb	w0, [x4, x19]
  421364:	add	x19, x19, #0x1
  421368:	mov	w0, #0xa                   	// #10
  42136c:	strb	w0, [x4, x19]
  421370:	mov	x3, x19
  421374:	mov	w1, w23
  421378:	mov	x0, x22
  42137c:	mov	x2, x4
  421380:	bl	42101c <ferror@plt+0x1e24c>
  421384:	mov	sp, x29
  421388:	ldp	x19, x20, [sp, #16]
  42138c:	ldp	x21, x22, [sp, #32]
  421390:	ldr	x23, [sp, #48]
  421394:	ldp	x29, x30, [sp], #64
  421398:	ret
  42139c:	mov	w2, #0x10                  	// #16
  4213a0:	b	4212ec <ferror@plt+0x1e51c>
  4213a4:	mov	w2, #0x11                  	// #17
  4213a8:	b	4212ec <ferror@plt+0x1e51c>
  4213ac:	stp	x29, x30, [sp, #-48]!
  4213b0:	mov	x29, sp
  4213b4:	stp	x19, x20, [sp, #16]
  4213b8:	adrp	x19, 466000 <_obstack_memory_used@@Base+0x215fc>
  4213bc:	add	x19, x19, #0xcc0
  4213c0:	str	x21, [sp, #32]
  4213c4:	mov	x21, x0
  4213c8:	mov	w20, #0x0                   	// #0
  4213cc:	ldrh	w2, [x19, #16]
  4213d0:	mov	x0, x21
  4213d4:	ldr	x1, [x19, #8]
  4213d8:	add	x19, x19, #0x18
  4213dc:	bl	426c40 <ferror@plt+0x23e70>
  4213e0:	ubfiz	w1, w20, #1, #7
  4213e4:	add	w20, w20, #0x1
  4213e8:	orr	w1, w1, #0x1
  4213ec:	strb	w1, [x0, #16]
  4213f0:	cmp	w20, #0x13
  4213f4:	b.ne	4213cc <ferror@plt+0x1e5fc>  // b.any
  4213f8:	ldp	x19, x20, [sp, #16]
  4213fc:	ldr	x21, [sp, #32]
  421400:	ldp	x29, x30, [sp], #48
  421404:	ret
  421408:	b	41e2cc <ferror@plt+0x1b4fc>
  42140c:	stp	x29, x30, [sp, #-64]!
  421410:	mov	x29, sp
  421414:	stp	x23, x24, [sp, #48]
  421418:	ldr	x24, [x0, #1000]
  42141c:	stp	x19, x20, [sp, #16]
  421420:	stp	x21, x22, [sp, #32]
  421424:	cbnz	x24, 421440 <ferror@plt+0x1e670>
  421428:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  42142c:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x215fc>
  421430:	add	x2, x2, #0xf40
  421434:	add	x0, x0, #0xf52
  421438:	mov	w1, #0x29                  	// #41
  42143c:	bl	402de0 <ferror@plt+0x10>
  421440:	mov	x19, x0
  421444:	mov	w20, w1
  421448:	mov	w21, w2
  42144c:	mov	x22, x3
  421450:	mov	x1, x4
  421454:	mov	x23, x5
  421458:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x215fc>
  42145c:	add	x0, x0, #0xf68
  421460:	bl	402b20 <dgettext@plt>
  421464:	mov	x4, x0
  421468:	mov	x5, x23
  42146c:	mov	x3, x22
  421470:	mov	w2, w21
  421474:	mov	w1, w20
  421478:	mov	x0, x19
  42147c:	mov	x16, x24
  421480:	ldp	x19, x20, [sp, #16]
  421484:	ldp	x21, x22, [sp, #32]
  421488:	ldp	x23, x24, [sp, #48]
  42148c:	ldp	x29, x30, [sp], #64
  421490:	br	x16
  421494:	stp	x29, x30, [sp, #-240]!
  421498:	mov	x29, sp
  42149c:	stp	x19, x20, [sp, #16]
  4214a0:	mov	w20, w1
  4214a4:	mov	x19, x0
  4214a8:	stp	x21, x22, [sp, #32]
  4214ac:	mov	w21, w2
  4214b0:	mov	x22, x3
  4214b4:	ldr	x1, [x0, #40]
  4214b8:	str	x23, [sp, #48]
  4214bc:	mov	x23, x4
  4214c0:	ldrb	w0, [x0, #1160]
  4214c4:	cbz	w0, 421528 <ferror@plt+0x1e758>
  4214c8:	ldrb	w0, [x19, #16]
  4214cc:	cbz	w0, 421520 <ferror@plt+0x1e750>
  4214d0:	ldr	w2, [x19, #48]
  4214d4:	add	x0, sp, #0x48
  4214d8:	mov	x3, #0x0                   	// #0
  4214dc:	bl	42cdec <ferror@plt+0x2a01c>
  4214e0:	mov	x5, x23
  4214e4:	mov	x4, x22
  4214e8:	add	x3, sp, #0x48
  4214ec:	mov	w2, w21
  4214f0:	mov	w1, w20
  4214f4:	mov	x0, x19
  4214f8:	bl	42140c <ferror@plt+0x1e63c>
  4214fc:	mov	w19, w0
  421500:	add	x0, sp, #0x48
  421504:	bl	42cb80 <ferror@plt+0x29db0>
  421508:	mov	w0, w19
  42150c:	ldp	x19, x20, [sp, #16]
  421510:	ldp	x21, x22, [sp, #32]
  421514:	ldr	x23, [sp, #48]
  421518:	ldp	x29, x30, [sp], #240
  42151c:	ret
  421520:	ldr	w2, [x1, #60]
  421524:	b	4214d4 <ferror@plt+0x1e704>
  421528:	ldr	x2, [x19, #488]
  42152c:	ldr	x0, [x19, #448]
  421530:	ldr	x2, [x2, #16]
  421534:	cmp	x0, x2
  421538:	b.eq	421544 <ferror@plt+0x1e774>  // b.none
  42153c:	ldur	w2, [x0, #-24]
  421540:	b	4214d4 <ferror@plt+0x1e704>
  421544:	mov	w2, #0x0                   	// #0
  421548:	b	4214d4 <ferror@plt+0x1e704>
  42154c:	stp	x29, x30, [sp, #-240]!
  421550:	mov	x29, sp
  421554:	stp	x19, x20, [sp, #16]
  421558:	mov	x19, x0
  42155c:	ldr	x0, [x0, #1000]
  421560:	stp	x21, x22, [sp, #32]
  421564:	stp	x23, x24, [sp, #48]
  421568:	cbnz	x0, 421584 <ferror@plt+0x1e7b4>
  42156c:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  421570:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x215fc>
  421574:	add	x2, x2, #0xf6f
  421578:	add	x0, x0, #0xf52
  42157c:	mov	w1, #0x9f                  	// #159
  421580:	bl	402de0 <ferror@plt+0x10>
  421584:	mov	w21, w1
  421588:	mov	w22, w2
  42158c:	ldr	x1, [x19, #40]
  421590:	mov	w2, w3
  421594:	mov	w20, w4
  421598:	mov	x24, x5
  42159c:	mov	x23, x6
  4215a0:	add	x0, sp, #0x48
  4215a4:	mov	x3, #0x0                   	// #0
  4215a8:	bl	42cdec <ferror@plt+0x2a01c>
  4215ac:	cbz	w20, 4215bc <ferror@plt+0x1e7ec>
  4215b0:	mov	w1, w20
  4215b4:	add	x0, sp, #0x48
  4215b8:	bl	42cd20 <ferror@plt+0x29f50>
  4215bc:	ldr	x20, [x19, #1000]
  4215c0:	mov	x1, x24
  4215c4:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x215fc>
  4215c8:	add	x0, x0, #0xf68
  4215cc:	bl	402b20 <dgettext@plt>
  4215d0:	mov	x4, x0
  4215d4:	mov	x5, x23
  4215d8:	add	x3, sp, #0x48
  4215dc:	mov	w2, w22
  4215e0:	mov	w1, w21
  4215e4:	mov	x0, x19
  4215e8:	blr	x20
  4215ec:	mov	w19, w0
  4215f0:	add	x0, sp, #0x48
  4215f4:	bl	42cb80 <ferror@plt+0x29db0>
  4215f8:	mov	w0, w19
  4215fc:	ldp	x19, x20, [sp, #16]
  421600:	ldp	x21, x22, [sp, #32]
  421604:	ldp	x23, x24, [sp, #48]
  421608:	ldp	x29, x30, [sp], #240
  42160c:	ret
  421610:	stp	x29, x30, [sp, #-224]!
  421614:	mov	x29, sp
  421618:	stp	x3, x4, [sp, #184]
  42161c:	add	x3, sp, #0xe0
  421620:	add	x4, sp, #0x10
  421624:	stp	x3, x3, [sp, #16]
  421628:	add	x3, sp, #0xb0
  42162c:	str	x3, [sp, #32]
  421630:	mov	w3, #0xffffffd8            	// #-40
  421634:	str	w3, [sp, #40]
  421638:	mov	w3, #0xffffff80            	// #-128
  42163c:	str	w3, [sp, #44]
  421640:	mov	x3, x2
  421644:	mov	w2, #0x0                   	// #0
  421648:	str	q0, [sp, #48]
  42164c:	str	q1, [sp, #64]
  421650:	str	q2, [sp, #80]
  421654:	str	q3, [sp, #96]
  421658:	str	q4, [sp, #112]
  42165c:	str	q5, [sp, #128]
  421660:	str	q6, [sp, #144]
  421664:	str	q7, [sp, #160]
  421668:	stp	x5, x6, [sp, #200]
  42166c:	str	x7, [sp, #216]
  421670:	bl	421494 <ferror@plt+0x1e6c4>
  421674:	ldp	x29, x30, [sp], #224
  421678:	ret
  42167c:	stp	x29, x30, [sp, #-224]!
  421680:	mov	x29, sp
  421684:	stp	x3, x4, [sp, #184]
  421688:	add	x3, sp, #0xe0
  42168c:	add	x4, sp, #0x10
  421690:	stp	x3, x3, [sp, #16]
  421694:	add	x3, sp, #0xb0
  421698:	str	x3, [sp, #32]
  42169c:	mov	w3, #0xffffffd8            	// #-40
  4216a0:	str	w3, [sp, #40]
  4216a4:	mov	w3, #0xffffff80            	// #-128
  4216a8:	str	w3, [sp, #44]
  4216ac:	mov	x3, x2
  4216b0:	mov	w2, w1
  4216b4:	mov	w1, #0x0                   	// #0
  4216b8:	str	q0, [sp, #48]
  4216bc:	str	q1, [sp, #64]
  4216c0:	str	q2, [sp, #80]
  4216c4:	str	q3, [sp, #96]
  4216c8:	str	q4, [sp, #112]
  4216cc:	str	q5, [sp, #128]
  4216d0:	str	q6, [sp, #144]
  4216d4:	str	q7, [sp, #160]
  4216d8:	stp	x5, x6, [sp, #200]
  4216dc:	str	x7, [sp, #216]
  4216e0:	bl	421494 <ferror@plt+0x1e6c4>
  4216e4:	ldp	x29, x30, [sp], #224
  4216e8:	ret
  4216ec:	stp	x29, x30, [sp, #-224]!
  4216f0:	mov	x29, sp
  4216f4:	stp	x3, x4, [sp, #184]
  4216f8:	add	x3, sp, #0xe0
  4216fc:	add	x4, sp, #0x10
  421700:	stp	x3, x3, [sp, #16]
  421704:	add	x3, sp, #0xb0
  421708:	str	x3, [sp, #32]
  42170c:	mov	w3, #0xffffffd8            	// #-40
  421710:	str	w3, [sp, #40]
  421714:	mov	w3, #0xffffff80            	// #-128
  421718:	str	w3, [sp, #44]
  42171c:	mov	x3, x2
  421720:	mov	w2, w1
  421724:	mov	w1, #0x2                   	// #2
  421728:	str	q0, [sp, #48]
  42172c:	str	q1, [sp, #64]
  421730:	str	q2, [sp, #80]
  421734:	str	q3, [sp, #96]
  421738:	str	q4, [sp, #112]
  42173c:	str	q5, [sp, #128]
  421740:	str	q6, [sp, #144]
  421744:	str	q7, [sp, #160]
  421748:	stp	x5, x6, [sp, #200]
  42174c:	str	x7, [sp, #216]
  421750:	bl	421494 <ferror@plt+0x1e6c4>
  421754:	ldp	x29, x30, [sp], #224
  421758:	ret
  42175c:	stp	x29, x30, [sp, #-224]!
  421760:	mov	x29, sp
  421764:	stp	x3, x4, [sp, #184]
  421768:	add	x3, sp, #0xe0
  42176c:	add	x4, sp, #0x10
  421770:	stp	x3, x3, [sp, #16]
  421774:	add	x3, sp, #0xb0
  421778:	str	x3, [sp, #32]
  42177c:	mov	w3, #0xffffffd8            	// #-40
  421780:	str	w3, [sp, #40]
  421784:	mov	w3, #0xffffff80            	// #-128
  421788:	str	w3, [sp, #44]
  42178c:	mov	x3, x2
  421790:	mov	w2, w1
  421794:	mov	w1, #0x1                   	// #1
  421798:	str	q0, [sp, #48]
  42179c:	str	q1, [sp, #64]
  4217a0:	str	q2, [sp, #80]
  4217a4:	str	q3, [sp, #96]
  4217a8:	str	q4, [sp, #112]
  4217ac:	str	q5, [sp, #128]
  4217b0:	str	q6, [sp, #144]
  4217b4:	str	q7, [sp, #160]
  4217b8:	stp	x5, x6, [sp, #200]
  4217bc:	str	x7, [sp, #216]
  4217c0:	bl	421494 <ferror@plt+0x1e6c4>
  4217c4:	ldp	x29, x30, [sp], #224
  4217c8:	ret
  4217cc:	stp	x29, x30, [sp, #-208]!
  4217d0:	mov	x29, sp
  4217d4:	stp	x5, x6, [sp, #184]
  4217d8:	add	x5, sp, #0xd0
  4217dc:	add	x6, sp, #0x10
  4217e0:	stp	x5, x5, [sp, #16]
  4217e4:	add	x5, sp, #0xb0
  4217e8:	str	x5, [sp, #32]
  4217ec:	mov	w5, #0xffffffe8            	// #-24
  4217f0:	str	w5, [sp, #40]
  4217f4:	mov	w5, #0xffffff80            	// #-128
  4217f8:	str	w5, [sp, #44]
  4217fc:	mov	x5, x4
  421800:	mov	w4, w3
  421804:	mov	w3, w2
  421808:	mov	w2, #0x0                   	// #0
  42180c:	str	q0, [sp, #48]
  421810:	str	q1, [sp, #64]
  421814:	str	q2, [sp, #80]
  421818:	str	q3, [sp, #96]
  42181c:	str	q4, [sp, #112]
  421820:	str	q5, [sp, #128]
  421824:	str	q6, [sp, #144]
  421828:	str	q7, [sp, #160]
  42182c:	str	x7, [sp, #200]
  421830:	bl	42154c <ferror@plt+0x1e77c>
  421834:	ldp	x29, x30, [sp], #208
  421838:	ret
  42183c:	stp	x29, x30, [sp, #-208]!
  421840:	mov	x29, sp
  421844:	stp	x5, x6, [sp, #184]
  421848:	add	x5, sp, #0xd0
  42184c:	add	x6, sp, #0x10
  421850:	stp	x5, x5, [sp, #16]
  421854:	add	x5, sp, #0xb0
  421858:	str	x5, [sp, #32]
  42185c:	mov	w5, #0xffffffe8            	// #-24
  421860:	str	w5, [sp, #40]
  421864:	mov	w5, #0xffffff80            	// #-128
  421868:	str	w5, [sp, #44]
  42186c:	mov	x5, x4
  421870:	mov	w4, w3
  421874:	mov	w3, w2
  421878:	mov	w2, w1
  42187c:	mov	w1, #0x0                   	// #0
  421880:	str	q0, [sp, #48]
  421884:	str	q1, [sp, #64]
  421888:	str	q2, [sp, #80]
  42188c:	str	q3, [sp, #96]
  421890:	str	q4, [sp, #112]
  421894:	str	q5, [sp, #128]
  421898:	str	q6, [sp, #144]
  42189c:	str	q7, [sp, #160]
  4218a0:	str	x7, [sp, #200]
  4218a4:	bl	42154c <ferror@plt+0x1e77c>
  4218a8:	ldp	x29, x30, [sp], #208
  4218ac:	ret
  4218b0:	stp	x29, x30, [sp, #-208]!
  4218b4:	mov	x29, sp
  4218b8:	stp	x5, x6, [sp, #184]
  4218bc:	add	x5, sp, #0xd0
  4218c0:	add	x6, sp, #0x10
  4218c4:	stp	x5, x5, [sp, #16]
  4218c8:	add	x5, sp, #0xb0
  4218cc:	str	x5, [sp, #32]
  4218d0:	mov	w5, #0xffffffe8            	// #-24
  4218d4:	str	w5, [sp, #40]
  4218d8:	mov	w5, #0xffffff80            	// #-128
  4218dc:	str	w5, [sp, #44]
  4218e0:	mov	x5, x4
  4218e4:	mov	w4, w3
  4218e8:	mov	w3, w2
  4218ec:	mov	w2, w1
  4218f0:	mov	w1, #0x2                   	// #2
  4218f4:	str	q0, [sp, #48]
  4218f8:	str	q1, [sp, #64]
  4218fc:	str	q2, [sp, #80]
  421900:	str	q3, [sp, #96]
  421904:	str	q4, [sp, #112]
  421908:	str	q5, [sp, #128]
  42190c:	str	q6, [sp, #144]
  421910:	str	q7, [sp, #160]
  421914:	str	x7, [sp, #200]
  421918:	bl	42154c <ferror@plt+0x1e77c>
  42191c:	ldp	x29, x30, [sp], #208
  421920:	ret
  421924:	stp	x29, x30, [sp, #-208]!
  421928:	mov	x29, sp
  42192c:	stp	x5, x6, [sp, #184]
  421930:	add	x5, sp, #0xd0
  421934:	add	x6, sp, #0x10
  421938:	stp	x5, x5, [sp, #16]
  42193c:	add	x5, sp, #0xb0
  421940:	str	x5, [sp, #32]
  421944:	mov	w5, #0xffffffe8            	// #-24
  421948:	str	w5, [sp, #40]
  42194c:	mov	w5, #0xffffff80            	// #-128
  421950:	str	w5, [sp, #44]
  421954:	mov	x5, x4
  421958:	mov	w4, w3
  42195c:	mov	w3, w2
  421960:	mov	w2, w1
  421964:	mov	w1, #0x1                   	// #1
  421968:	str	q0, [sp, #48]
  42196c:	str	q1, [sp, #64]
  421970:	str	q2, [sp, #80]
  421974:	str	q3, [sp, #96]
  421978:	str	q4, [sp, #112]
  42197c:	str	q5, [sp, #128]
  421980:	str	q6, [sp, #144]
  421984:	str	q7, [sp, #160]
  421988:	str	x7, [sp, #200]
  42198c:	bl	42154c <ferror@plt+0x1e77c>
  421990:	ldp	x29, x30, [sp], #208
  421994:	ret
  421998:	stp	x29, x30, [sp, #-416]!
  42199c:	mov	x29, sp
  4219a0:	stp	x19, x20, [sp, #16]
  4219a4:	mov	x19, x0
  4219a8:	mov	w20, w1
  4219ac:	str	q0, [sp, #256]
  4219b0:	add	x0, sp, #0x1a0
  4219b4:	str	q1, [sp, #272]
  4219b8:	str	q2, [sp, #288]
  4219bc:	str	q3, [sp, #304]
  4219c0:	str	q4, [sp, #320]
  4219c4:	str	q5, [sp, #336]
  4219c8:	str	q6, [sp, #352]
  4219cc:	str	q7, [sp, #368]
  4219d0:	stp	x4, x5, [sp, #384]
  4219d4:	stp	x6, x7, [sp, #400]
  4219d8:	ldr	x1, [x19, #40]
  4219dc:	stp	x0, x0, [sp, #56]
  4219e0:	add	x0, sp, #0x180
  4219e4:	str	x0, [sp, #72]
  4219e8:	mov	w0, #0xffffffe0            	// #-32
  4219ec:	str	w0, [sp, #80]
  4219f0:	mov	w0, #0xffffff80            	// #-128
  4219f4:	str	x21, [sp, #32]
  4219f8:	mov	x21, x3
  4219fc:	mov	x3, #0x0                   	// #0
  421a00:	str	w0, [sp, #84]
  421a04:	add	x0, sp, #0x58
  421a08:	bl	42cdec <ferror@plt+0x2a01c>
  421a0c:	add	x5, sp, #0x38
  421a10:	mov	x4, x21
  421a14:	add	x3, sp, #0x58
  421a18:	mov	w1, w20
  421a1c:	mov	w2, #0x0                   	// #0
  421a20:	mov	x0, x19
  421a24:	bl	42140c <ferror@plt+0x1e63c>
  421a28:	mov	w19, w0
  421a2c:	add	x0, sp, #0x58
  421a30:	bl	42cb80 <ferror@plt+0x29db0>
  421a34:	mov	w0, w19
  421a38:	ldp	x19, x20, [sp, #16]
  421a3c:	ldr	x21, [sp, #32]
  421a40:	ldp	x29, x30, [sp], #416
  421a44:	ret
  421a48:	stp	x29, x30, [sp, #-208]!
  421a4c:	mov	x29, sp
  421a50:	stp	x4, x5, [sp, #176]
  421a54:	add	x4, sp, #0xd0
  421a58:	add	x5, sp, #0x10
  421a5c:	stp	x4, x4, [sp, #16]
  421a60:	add	x4, sp, #0xb0
  421a64:	str	x4, [sp, #32]
  421a68:	mov	w4, #0xffffffe0            	// #-32
  421a6c:	str	w4, [sp, #40]
  421a70:	mov	w4, #0xffffff80            	// #-128
  421a74:	str	w4, [sp, #44]
  421a78:	mov	x4, x3
  421a7c:	mov	x3, x2
  421a80:	mov	w2, #0x0                   	// #0
  421a84:	str	q0, [sp, #48]
  421a88:	str	q1, [sp, #64]
  421a8c:	str	q2, [sp, #80]
  421a90:	str	q3, [sp, #96]
  421a94:	str	q4, [sp, #112]
  421a98:	str	q5, [sp, #128]
  421a9c:	str	q6, [sp, #144]
  421aa0:	str	q7, [sp, #160]
  421aa4:	stp	x6, x7, [sp, #192]
  421aa8:	bl	42140c <ferror@plt+0x1e63c>
  421aac:	ldp	x29, x30, [sp], #208
  421ab0:	ret
  421ab4:	stp	x29, x30, [sp, #-48]!
  421ab8:	mov	x29, sp
  421abc:	stp	x19, x20, [sp, #16]
  421ac0:	mov	w20, w1
  421ac4:	mov	x1, x2
  421ac8:	mov	x19, x0
  421acc:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x215fc>
  421ad0:	add	x0, x0, #0xf68
  421ad4:	str	x21, [sp, #32]
  421ad8:	bl	402b20 <dgettext@plt>
  421adc:	mov	x21, x0
  421ae0:	bl	402cf0 <__errno_location@plt>
  421ae4:	ldr	w0, [x0]
  421ae8:	bl	4453c4 <_obstack_memory_used@@Base+0x9c0>
  421aec:	mov	x4, x0
  421af0:	mov	x3, x21
  421af4:	mov	w1, w20
  421af8:	mov	x0, x19
  421afc:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x215fc>
  421b00:	ldp	x19, x20, [sp, #16]
  421b04:	add	x2, x2, #0xf88
  421b08:	ldr	x21, [sp, #32]
  421b0c:	ldp	x29, x30, [sp], #48
  421b10:	b	421610 <ferror@plt+0x1e840>
  421b14:	stp	x29, x30, [sp, #-48]!
  421b18:	mov	x29, sp
  421b1c:	stp	x19, x20, [sp, #16]
  421b20:	mov	x20, x0
  421b24:	stp	x21, x22, [sp, #32]
  421b28:	mov	w21, w1
  421b2c:	mov	w22, w3
  421b30:	ldrb	w0, [x2]
  421b34:	cbnz	w0, 421b88 <ferror@plt+0x1edb8>
  421b38:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  421b3c:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x215fc>
  421b40:	add	x1, x1, #0xc8c
  421b44:	add	x0, x0, #0xf68
  421b48:	bl	402b20 <dgettext@plt>
  421b4c:	mov	x19, x0
  421b50:	bl	402cf0 <__errno_location@plt>
  421b54:	ldr	w0, [x0]
  421b58:	bl	4453c4 <_obstack_memory_used@@Base+0x9c0>
  421b5c:	mov	x5, x0
  421b60:	mov	x4, x19
  421b64:	mov	w2, w22
  421b68:	mov	w1, w21
  421b6c:	mov	x0, x20
  421b70:	ldp	x19, x20, [sp, #16]
  421b74:	adrp	x3, 466000 <_obstack_memory_used@@Base+0x215fc>
  421b78:	ldp	x21, x22, [sp, #32]
  421b7c:	add	x3, x3, #0xf88
  421b80:	ldp	x29, x30, [sp], #48
  421b84:	b	421998 <ferror@plt+0x1ebc8>
  421b88:	mov	x19, x2
  421b8c:	b	421b50 <ferror@plt+0x1ed80>
  421b90:	mov	x7, x0
  421b94:	cmp	x2, #0x2
  421b98:	b.ne	421bd4 <ferror@plt+0x1ee04>  // b.any
  421b9c:	ldrb	w3, [x1]
  421ba0:	and	w0, w3, #0xffffffdf
  421ba4:	cmp	w0, #0x44
  421ba8:	b.ne	421bd4 <ferror@plt+0x1ee04>  // b.any
  421bac:	ldrb	w0, [x1, #1]
  421bb0:	cmp	w0, #0x64
  421bb4:	b.eq	421c20 <ferror@plt+0x1ee50>  // b.none
  421bb8:	b.hi	421be4 <ferror@plt+0x1ee14>  // b.pmore
  421bbc:	cmp	w0, #0x46
  421bc0:	b.eq	421c10 <ferror@plt+0x1ee40>  // b.none
  421bc4:	cmp	w0, #0x4c
  421bc8:	b.eq	421c38 <ferror@plt+0x1ee68>  // b.none
  421bcc:	cmp	w0, #0x44
  421bd0:	b.eq	421c2c <ferror@plt+0x1ee5c>  // b.none
  421bd4:	ldrb	w16, [x7, #1163]
  421bd8:	cbnz	w16, 421cb8 <ferror@plt+0x1eee8>
  421bdc:	mov	x5, x2
  421be0:	b	421c48 <ferror@plt+0x1ee78>
  421be4:	cmp	w0, #0x66
  421be8:	b.eq	421c00 <ferror@plt+0x1ee30>  // b.none
  421bec:	cmp	w0, #0x6c
  421bf0:	b.ne	421bd4 <ferror@plt+0x1ee04>  // b.any
  421bf4:	cmp	w3, #0x44
  421bf8:	mov	w0, #0x4040                	// #16448
  421bfc:	b	421c08 <ferror@plt+0x1ee38>
  421c00:	cmp	w3, #0x44
  421c04:	mov	w0, #0x4010                	// #16400
  421c08:	csel	w0, wzr, w0, eq  // eq = none
  421c0c:	ret
  421c10:	cmp	w3, #0x44
  421c14:	mov	w0, #0x4010                	// #16400
  421c18:	csel	w0, wzr, w0, ne  // ne = any
  421c1c:	ret
  421c20:	cmp	w3, #0x44
  421c24:	mov	w0, #0x4020                	// #16416
  421c28:	b	421c08 <ferror@plt+0x1ee38>
  421c2c:	cmp	w3, #0x44
  421c30:	mov	w0, #0x4020                	// #16416
  421c34:	b	421c18 <ferror@plt+0x1ee48>
  421c38:	cmp	w3, #0x44
  421c3c:	mov	w0, #0x4040                	// #16448
  421c40:	b	421c18 <ferror@plt+0x1ee48>
  421c44:	mov	x5, #0x0                   	// #0
  421c48:	stp	x29, x30, [sp, #-48]!
  421c4c:	adrp	x18, 466000 <_obstack_memory_used@@Base+0x215fc>
  421c50:	adrp	x30, 466000 <_obstack_memory_used@@Base+0x215fc>
  421c54:	mov	x29, sp
  421c58:	mov	x6, x1
  421c5c:	add	x18, x18, #0xfa4
  421c60:	add	x30, x30, #0xf90
  421c64:	mov	x3, #0x0                   	// #0
  421c68:	mov	x12, #0x0                   	// #0
  421c6c:	mov	x11, #0x0                   	// #0
  421c70:	mov	x10, #0x0                   	// #0
  421c74:	mov	x9, #0x0                   	// #0
  421c78:	mov	x8, #0x0                   	// #0
  421c7c:	mov	x15, #0x0                   	// #0
  421c80:	mov	x14, #0x0                   	// #0
  421c84:	mov	x4, #0x0                   	// #0
  421c88:	stp	x19, x20, [sp, #16]
  421c8c:	mov	x19, #0xa                   	// #10
  421c90:	str	x21, [sp, #32]
  421c94:	sub	x0, x5, #0x1
  421c98:	cbz	x5, 421ea4 <ferror@plt+0x1f0d4>
  421c9c:	ldrb	w5, [x6]
  421ca0:	cmp	w5, #0x57
  421ca4:	b.hi	421dcc <ferror@plt+0x1effc>  // b.pmore
  421ca8:	cmp	w5, #0x43
  421cac:	b.hi	421db0 <ferror@plt+0x1efe0>  // b.pmore
  421cb0:	mov	w0, #0x0                   	// #0
  421cb4:	b	421fa0 <ferror@plt+0x1f1d0>
  421cb8:	cbz	x2, 421c44 <ferror@plt+0x1ee74>
  421cbc:	sub	x3, x2, #0x1
  421cc0:	ldrb	w4, [x1, x3]
  421cc4:	cmp	w4, #0x6b
  421cc8:	b.eq	421d4c <ferror@plt+0x1ef7c>  // b.none
  421ccc:	b.hi	421d3c <ferror@plt+0x1ef6c>  // b.pmore
  421cd0:	cmp	w4, #0x4b
  421cd4:	b.eq	421d4c <ferror@plt+0x1ef7c>  // b.none
  421cd8:	cmp	w4, #0x52
  421cdc:	mov	x0, #0x100000              	// #1048576
  421ce0:	b.ne	421bdc <ferror@plt+0x1ee0c>  // b.any
  421ce4:	cmp	x2, #0x1
  421ce8:	b.eq	422000 <ferror@plt+0x1f230>  // b.none
  421cec:	ldrb	w4, [x1]
  421cf0:	and	w4, w4, #0xffffffdf
  421cf4:	and	w4, w4, #0xff
  421cf8:	cmp	w4, #0x55
  421cfc:	b.ne	421d14 <ferror@plt+0x1ef44>  // b.any
  421d00:	orr	x0, x0, #0x1000
  421d04:	cmp	x3, #0x1
  421d08:	b.eq	422000 <ferror@plt+0x1f230>  // b.none
  421d0c:	sub	x3, x2, #0x2
  421d10:	add	x1, x1, #0x1
  421d14:	ldrb	w2, [x1]
  421d18:	cmp	w2, #0x68
  421d1c:	b.eq	421d6c <ferror@plt+0x1ef9c>  // b.none
  421d20:	b.hi	421d54 <ferror@plt+0x1ef84>  // b.pmore
  421d24:	cmp	w2, #0x48
  421d28:	b.eq	421d6c <ferror@plt+0x1ef9c>  // b.none
  421d2c:	cmp	w2, #0x4c
  421d30:	b.eq	421d90 <ferror@plt+0x1efc0>  // b.none
  421d34:	mov	w0, #0x0                   	// #0
  421d38:	ret
  421d3c:	cmp	w4, #0x72
  421d40:	b.ne	421bdc <ferror@plt+0x1ee0c>  // b.any
  421d44:	mov	x0, #0x100000              	// #1048576
  421d48:	b	421ce4 <ferror@plt+0x1ef14>
  421d4c:	mov	x0, #0x200000              	// #2097152
  421d50:	b	421ce4 <ferror@plt+0x1ef14>
  421d54:	cmp	w2, #0x6c
  421d58:	b.ne	421d34 <ferror@plt+0x1ef64>  // b.any
  421d5c:	cmp	x3, #0x1
  421d60:	b.ne	421d78 <ferror@plt+0x1efa8>  // b.any
  421d64:	orr	w0, w0, #0x20
  421d68:	ret
  421d6c:	orr	x0, x0, #0x10
  421d70:	cmp	x3, #0x1
  421d74:	b	421c18 <ferror@plt+0x1ee48>
  421d78:	cmp	x3, #0x2
  421d7c:	b.ne	421d34 <ferror@plt+0x1ef64>  // b.any
  421d80:	ldrb	w1, [x1, #1]
  421d84:	orr	x0, x0, #0x40
  421d88:	cmp	w1, #0x6c
  421d8c:	b	421c18 <ferror@plt+0x1ee48>
  421d90:	cmp	x3, #0x1
  421d94:	b.eq	421d64 <ferror@plt+0x1ef94>  // b.none
  421d98:	cmp	x3, #0x2
  421d9c:	b.ne	421d34 <ferror@plt+0x1ef64>  // b.any
  421da0:	ldrb	w1, [x1, #1]
  421da4:	orr	x0, x0, #0x40
  421da8:	cmp	w1, #0x4c
  421dac:	b	421c18 <ferror@plt+0x1ee48>
  421db0:	sub	w5, w5, #0x44
  421db4:	cmp	w5, #0x13
  421db8:	b.hi	421cb0 <ferror@plt+0x1eee0>  // b.pmore
  421dbc:	ldrb	w5, [x30, w5, uxtw]
  421dc0:	adr	x13, 421dcc <ferror@plt+0x1effc>
  421dc4:	add	x5, x13, w5, sxtb #2
  421dc8:	br	x5
  421dcc:	sub	w5, w5, #0x64
  421dd0:	and	w13, w5, #0xff
  421dd4:	cmp	w13, #0x13
  421dd8:	b.hi	421cb0 <ferror@plt+0x1eee0>  // b.pmore
  421ddc:	cmp	w5, #0x13
  421de0:	b.hi	421cb0 <ferror@plt+0x1eee0>  // b.pmore
  421de4:	ldrb	w5, [x18, w5, uxtw]
  421de8:	adr	x13, 421df4 <ferror@plt+0x1f024>
  421dec:	add	x5, x13, w5, sxtb #2
  421df0:	br	x5
  421df4:	add	x5, x4, #0x1
  421df8:	cbz	x0, 421e6c <ferror@plt+0x1f09c>
  421dfc:	ldrb	w13, [x7, #1120]
  421e00:	cbnz	w13, 421e6c <ferror@plt+0x1f09c>
  421e04:	ldrb	w13, [x6, #1]
  421e08:	sub	w13, w13, #0x31
  421e0c:	and	w13, w13, #0xff
  421e10:	cmp	w13, #0x8
  421e14:	b.hi	421e6c <ferror@plt+0x1f09c>  // b.pmore
  421e18:	cbnz	x3, 421e6c <ferror@plt+0x1f09c>
  421e1c:	ldrb	w20, [x6, #1]
  421e20:	mov	x17, x0
  421e24:	mov	x13, x6
  421e28:	sub	x0, x0, #0x1
  421e2c:	sub	w5, w20, #0x30
  421e30:	add	x6, x6, #0x1
  421e34:	and	w21, w5, #0xff
  421e38:	cmp	w21, #0x9
  421e3c:	b.hi	421fec <ferror@plt+0x1f21c>  // b.pmore
  421e40:	cmp	x3, #0xef
  421e44:	b.hi	421e5c <ferror@plt+0x1f08c>  // b.pmore
  421e48:	sxtw	x5, w5
  421e4c:	madd	x3, x3, x19, x5
  421e50:	cbnz	x0, 421e1c <ferror@plt+0x1f04c>
  421e54:	mov	x13, x6
  421e58:	mov	x17, #0x0                   	// #0
  421e5c:	add	x11, x11, #0x1
  421e60:	mov	x5, x4
  421e64:	mov	x0, x17
  421e68:	mov	x6, x13
  421e6c:	mov	x4, x5
  421e70:	add	x6, x6, #0x1
  421e74:	mov	x5, x0
  421e78:	b	421c94 <ferror@plt+0x1eec4>
  421e7c:	add	x14, x14, #0x1
  421e80:	b	421ff8 <ferror@plt+0x1f228>
  421e84:	add	x15, x15, #0x1
  421e88:	b	421ff8 <ferror@plt+0x1f228>
  421e8c:	add	x8, x8, #0x1
  421e90:	b	421ff8 <ferror@plt+0x1f228>
  421e94:	add	x9, x9, #0x1
  421e98:	b	421ff8 <ferror@plt+0x1f228>
  421e9c:	add	x10, x10, #0x1
  421ea0:	b	421ff8 <ferror@plt+0x1f228>
  421ea4:	add	x0, x8, x9
  421ea8:	add	x5, x11, x12
  421eac:	add	x5, x5, x0
  421eb0:	add	x0, x14, x15
  421eb4:	add	x5, x5, x0
  421eb8:	add	x5, x5, x4
  421ebc:	cmp	x5, #0x1
  421ec0:	b.hi	421cb0 <ferror@plt+0x1eee0>  // b.pmore
  421ec4:	cmp	x10, #0x1
  421ec8:	b.hi	421cb0 <ferror@plt+0x1eee0>  // b.pmore
  421ecc:	cmp	x3, #0xf0
  421ed0:	b.hi	421cb0 <ferror@plt+0x1eee0>  // b.pmore
  421ed4:	cmp	x3, #0x20
  421ed8:	ccmp	x12, #0x0, #0x4, ne  // ne = any
  421edc:	b.eq	421ef0 <ferror@plt+0x1f120>  // b.none
  421ee0:	cmp	x3, #0x40
  421ee4:	mov	x0, #0x80                  	// #128
  421ee8:	ccmp	x3, x0, #0x4, ne  // ne = any
  421eec:	b.ne	421cb0 <ferror@plt+0x1eee0>  // b.any
  421ef0:	cmp	x11, #0x0
  421ef4:	cset	w0, ne  // ne = any
  421ef8:	cmp	w0, #0x0
  421efc:	ccmp	x3, #0x10, #0x4, ne  // ne = any
  421f00:	b.eq	421f0c <ferror@plt+0x1f13c>  // b.none
  421f04:	tst	x3, #0x1f
  421f08:	b.ne	421cb0 <ferror@plt+0x1eee0>  // b.any
  421f0c:	cmp	x3, #0x60
  421f10:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  421f14:	b.ne	421cb0 <ferror@plt+0x1eee0>  // b.any
  421f18:	cbz	x10, 421f64 <ferror@plt+0x1f194>
  421f1c:	cbz	w16, 421cb0 <ferror@plt+0x1eee0>
  421f20:	ldrb	w0, [x7, #1120]
  421f24:	cbz	w0, 421f64 <ferror@plt+0x1f194>
  421f28:	ldr	w0, [x7, #1116]
  421f2c:	cmp	w0, #0xe
  421f30:	b.le	421f64 <ferror@plt+0x1f194>
  421f34:	ldrb	w0, [x1]
  421f38:	cmp	w0, #0x69
  421f3c:	b.ne	421f64 <ferror@plt+0x1f194>  // b.any
  421f40:	cmp	x2, #0x1
  421f44:	b.eq	421cb0 <ferror@plt+0x1eee0>  // b.none
  421f48:	cmp	x2, #0x2
  421f4c:	b.ne	421f64 <ferror@plt+0x1f194>  // b.any
  421f50:	ldrb	w0, [x1, #1]
  421f54:	cmp	w0, #0x66
  421f58:	b.eq	421cb0 <ferror@plt+0x1eee0>  // b.none
  421f5c:	cmp	w0, #0x6c
  421f60:	b.eq	421cb0 <ferror@plt+0x1eee0>  // b.none
  421f64:	orr	x0, x8, x9
  421f68:	cbz	x0, 421f70 <ferror@plt+0x1f1a0>
  421f6c:	cbz	w16, 421cb0 <ferror@plt+0x1eee0>
  421f70:	cmp	x10, #0x0
  421f74:	cset	w0, ne  // ne = any
  421f78:	lsl	w0, w0, #13
  421f7c:	cbnz	x4, 421fc4 <ferror@plt+0x1f1f4>
  421f80:	cbnz	x14, 421fcc <ferror@plt+0x1f1fc>
  421f84:	cbnz	x15, 421fd4 <ferror@plt+0x1f204>
  421f88:	cbnz	x8, 421fdc <ferror@plt+0x1f20c>
  421f8c:	cbnz	x9, 421fe4 <ferror@plt+0x1f214>
  421f90:	lsl	w3, w3, #24
  421f94:	cbz	x11, 421fb0 <ferror@plt+0x1f1e0>
  421f98:	orr	w3, w3, #0x400000
  421f9c:	orr	w0, w0, w3
  421fa0:	ldp	x19, x20, [sp, #16]
  421fa4:	ldr	x21, [sp, #32]
  421fa8:	ldp	x29, x30, [sp], #48
  421fac:	ret
  421fb0:	orr	w3, w3, #0x800000
  421fb4:	cmp	x12, #0x0
  421fb8:	mov	w1, #0x8000                	// #32768
  421fbc:	csel	w3, w3, w1, ne  // ne = any
  421fc0:	b	421f9c <ferror@plt+0x1f1cc>
  421fc4:	mov	w3, #0x10                  	// #16
  421fc8:	b	421f9c <ferror@plt+0x1f1cc>
  421fcc:	mov	w3, #0x20                  	// #32
  421fd0:	b	421f9c <ferror@plt+0x1f1cc>
  421fd4:	mov	w3, #0x40                  	// #64
  421fd8:	b	421f9c <ferror@plt+0x1f1cc>
  421fdc:	mov	w3, #0x10000               	// #65536
  421fe0:	b	421f9c <ferror@plt+0x1f1cc>
  421fe4:	mov	w3, #0x20000               	// #131072
  421fe8:	b	421f9c <ferror@plt+0x1f1cc>
  421fec:	cmp	w20, #0x78
  421ff0:	b.ne	421e5c <ferror@plt+0x1f08c>  // b.any
  421ff4:	add	x12, x12, #0x1
  421ff8:	mov	x5, x4
  421ffc:	b	421e6c <ferror@plt+0x1f09c>
  422000:	ret
  422004:	add	x5, x1, x2
  422008:	mov	x7, #0x0                   	// #0
  42200c:	mov	x4, #0x0                   	// #0
  422010:	mov	x6, #0x0                   	// #0
  422014:	mov	x9, #0x1                   	// #1
  422018:	cmp	x5, x1
  42201c:	b.eq	422084 <ferror@plt+0x1f2b4>  // b.none
  422020:	ldurb	w8, [x5, #-1]
  422024:	sub	w3, w8, #0x49
  422028:	and	w3, w3, #0xff
  42202c:	cmp	w3, #0x2c
  422030:	b.hi	42207c <ferror@plt+0x1f2ac>  // b.pmore
  422034:	lsl	x3, x9, x3
  422038:	tst	x3, #0x300000003
  42203c:	b.ne	42205c <ferror@plt+0x1f28c>  // b.any
  422040:	tst	x3, #0x800000008
  422044:	b.ne	422064 <ferror@plt+0x1f294>  // b.any
  422048:	tst	x3, #0x100000001000
  42204c:	b.eq	42207c <ferror@plt+0x1f2ac>  // b.none
  422050:	add	x6, x6, #0x1
  422054:	sub	x5, x5, #0x1
  422058:	b	422018 <ferror@plt+0x1f248>
  42205c:	add	x7, x7, #0x1
  422060:	b	422054 <ferror@plt+0x1f284>
  422064:	add	x4, x4, #0x1
  422068:	cmp	x4, #0x2
  42206c:	b.ne	422054 <ferror@plt+0x1f284>  // b.any
  422070:	ldrb	w3, [x5]
  422074:	cmp	w3, w8
  422078:	b.eq	422054 <ferror@plt+0x1f284>  // b.none
  42207c:	mov	w0, #0x0                   	// #0
  422080:	b	422110 <ferror@plt+0x1f340>
  422084:	cmp	x4, #0x2
  422088:	ccmp	x6, #0x1, #0x2, ls  // ls = plast
  42208c:	b.hi	42207c <ferror@plt+0x1f2ac>  // b.pmore
  422090:	cmp	x7, #0x1
  422094:	b.hi	42207c <ferror@plt+0x1f2ac>  // b.pmore
  422098:	cbz	x7, 4220e8 <ferror@plt+0x1f318>
  42209c:	ldrb	w3, [x0, #1163]
  4220a0:	cbz	w3, 42207c <ferror@plt+0x1f2ac>
  4220a4:	ldrb	w3, [x0, #1120]
  4220a8:	cbz	w3, 4220e0 <ferror@plt+0x1f310>
  4220ac:	ldr	w0, [x0, #1116]
  4220b0:	cmp	w0, #0xe
  4220b4:	b.le	4220e0 <ferror@plt+0x1f310>
  4220b8:	ldrb	w0, [x1]
  4220bc:	cmp	w0, #0x69
  4220c0:	b.ne	4220e0 <ferror@plt+0x1f310>  // b.any
  4220c4:	cmp	x2, #0x1
  4220c8:	b.eq	42207c <ferror@plt+0x1f2ac>  // b.none
  4220cc:	cmp	x2, #0x2
  4220d0:	b.ne	4220e0 <ferror@plt+0x1f310>  // b.any
  4220d4:	ldrb	w0, [x1, #1]
  4220d8:	cmp	w0, #0x6c
  4220dc:	b.eq	42207c <ferror@plt+0x1f2ac>  // b.none
  4220e0:	mov	w1, #0x2000                	// #8192
  4220e4:	b	4220ec <ferror@plt+0x1f31c>
  4220e8:	mov	w1, #0x0                   	// #0
  4220ec:	cmp	x6, #0x0
  4220f0:	cset	w0, ne  // ne = any
  4220f4:	orr	w0, w1, w0, lsl #12
  4220f8:	cbz	x4, 422114 <ferror@plt+0x1f344>
  4220fc:	cmp	x4, #0x1
  422100:	mov	w1, #0x20                  	// #32
  422104:	mov	w2, #0x40                  	// #64
  422108:	csel	w1, w1, w2, eq  // eq = none
  42210c:	orr	w0, w0, w1
  422110:	ret
  422114:	mov	w1, #0x10                  	// #16
  422118:	b	42210c <ferror@plt+0x1f33c>
  42211c:	cmp	x1, #0x40
  422120:	ldp	x2, x3, [x0]
  422124:	b.ls	422158 <ferror@plt+0x1f388>  // b.plast
  422128:	sub	x1, x1, #0x40
  42212c:	cmp	x1, #0x3f
  422130:	b.hi	422140 <ferror@plt+0x1f370>  // b.pmore
  422134:	mov	x4, #0xffffffffffffffff    	// #-1
  422138:	lsl	x1, x4, x1
  42213c:	bic	x2, x2, x1
  422140:	stp	x2, x3, [x0]
  422144:	ldp	x2, x3, [x0]
  422148:	stp	x2, x3, [x8]
  42214c:	ldr	x0, [x0, #16]
  422150:	str	x0, [x8, #16]
  422154:	ret
  422158:	b.eq	422168 <ferror@plt+0x1f398>  // b.none
  42215c:	mov	x2, #0xffffffffffffffff    	// #-1
  422160:	lsl	x1, x2, x1
  422164:	bic	x3, x3, x1
  422168:	mov	x2, #0x0                   	// #0
  42216c:	b	422140 <ferror@plt+0x1f370>
  422170:	stp	x29, x30, [sp, #-80]!
  422174:	mov	x5, x0
  422178:	mov	x7, x8
  42217c:	mov	x29, sp
  422180:	ldp	x6, x9, [x0]
  422184:	add	x8, sp, #0x30
  422188:	negs	x2, x9
  42218c:	neg	x0, x6
  422190:	csinv	x0, x0, x6, eq  // eq = none
  422194:	stp	x0, x2, [x5]
  422198:	ldp	x2, x3, [x5]
  42219c:	stp	x2, x3, [sp, #16]
  4221a0:	ldr	x0, [x5, #16]
  4221a4:	str	x0, [sp, #32]
  4221a8:	add	x0, sp, #0x10
  4221ac:	bl	42211c <ferror@plt+0x1f34c>
  4221b0:	ldp	x1, x0, [sp, #48]
  4221b4:	stp	x1, x0, [x5]
  4221b8:	ldr	x0, [sp, #64]
  4221bc:	str	x0, [x5, #16]
  4221c0:	ldr	x2, [x5, #8]
  4221c4:	ands	w0, w0, #0xff
  4221c8:	b.ne	422204 <ferror@plt+0x1f434>  // b.any
  4221cc:	cmp	x9, x2
  4221d0:	b.ne	4221e8 <ferror@plt+0x1f418>  // b.any
  4221d4:	cmp	x6, x1
  4221d8:	b.ne	4221e8 <ferror@plt+0x1f418>  // b.any
  4221dc:	orr	x6, x6, x9
  4221e0:	cmp	x6, #0x0
  4221e4:	cset	w0, ne  // ne = any
  4221e8:	strb	w0, [x5, #17]
  4221ec:	ldp	x0, x1, [x5]
  4221f0:	stp	x0, x1, [x7]
  4221f4:	ldr	x0, [x5, #16]
  4221f8:	str	x0, [x7, #16]
  4221fc:	ldp	x29, x30, [sp], #80
  422200:	ret
  422204:	mov	w0, #0x0                   	// #0
  422208:	b	4221e8 <ferror@plt+0x1f418>
  42220c:	and	x4, x1, #0xffffffff
  422210:	and	x2, x0, #0xffffffff
  422214:	lsr	x1, x1, #32
  422218:	lsr	x0, x0, #32
  42221c:	mul	x3, x0, x1
  422220:	mul	x1, x2, x1
  422224:	mul	x2, x2, x4
  422228:	mul	x0, x4, x0
  42222c:	lsl	x4, x1, #32
  422230:	adds	x2, x2, x4
  422234:	b.cs	422278 <ferror@plt+0x1f4a8>  // b.hs, b.nlast
  422238:	str	x3, [x8]
  42223c:	lsl	x3, x0, #32
  422240:	adds	x2, x2, x3
  422244:	str	x2, [x8, #8]
  422248:	b.cc	422258 <ferror@plt+0x1f488>  // b.lo, b.ul, b.last
  42224c:	ldr	x2, [x8]
  422250:	add	x2, x2, #0x1
  422254:	str	x2, [x8]
  422258:	lsr	x0, x0, #32
  42225c:	add	x1, x0, x1, lsr #32
  422260:	ldr	x0, [x8]
  422264:	add	x1, x0, x1
  422268:	mov	w0, #0x1                   	// #1
  42226c:	str	x1, [x8]
  422270:	strh	w0, [x8, #16]
  422274:	ret
  422278:	add	x3, x3, #0x1
  42227c:	b	422238 <ferror@plt+0x1f468>
  422280:	stp	x29, x30, [sp, #-80]!
  422284:	mov	x29, sp
  422288:	stp	x19, x20, [sp, #16]
  42228c:	mov	x19, x0
  422290:	stp	x21, x22, [sp, #32]
  422294:	mov	x22, x8
  422298:	stp	x23, x24, [sp, #48]
  42229c:	mov	w24, w1
  4222a0:	str	x25, [sp, #64]
  4222a4:	strh	wzr, [x8, #16]
  4222a8:	ldrb	w1, [x0, #26]
  4222ac:	stp	xzr, xzr, [x8]
  4222b0:	add	w1, w1, #0x1
  4222b4:	strb	w1, [x0, #26]
  4222b8:	bl	430978 <ferror@plt+0x2dba8>
  4222bc:	mov	x20, x0
  4222c0:	ldrb	w0, [x0, #4]
  4222c4:	cmp	w0, #0x14
  4222c8:	b.ne	4223bc <ferror@plt+0x1f5ec>  // b.any
  4222cc:	mov	x0, x19
  4222d0:	bl	430978 <ferror@plt+0x2dba8>
  4222d4:	mov	x20, x0
  4222d8:	mov	w25, #0x1                   	// #1
  4222dc:	ldrb	w0, [x20, #4]
  4222e0:	cmp	w0, #0x3e
  4222e4:	b.eq	4223c4 <ferror@plt+0x1f5f4>  // b.none
  4222e8:	cmp	w0, #0x44
  4222ec:	b.ne	4223cc <ferror@plt+0x1f5fc>  // b.any
  4222f0:	mov	w23, #0x1                   	// #1
  4222f4:	ldr	w0, [x20, #8]
  4222f8:	sub	w0, w0, #0x1
  4222fc:	bl	44526c <_obstack_memory_used@@Base+0x868>
  422300:	ldr	x1, [x20, #16]
  422304:	mov	x21, x0
  422308:	ldr	w2, [x20, #8]
  42230c:	add	x1, x1, #0x1
  422310:	sub	w2, w2, #0x2
  422314:	bl	4026a0 <memcpy@plt>
  422318:	ldr	w0, [x20, #8]
  42231c:	mov	w2, w23
  422320:	sub	w0, w0, #0x2
  422324:	strb	wzr, [x21, x0]
  422328:	ldr	x20, [x20, #8]
  42232c:	mov	w3, w24
  422330:	mov	x1, x21
  422334:	mov	x0, x19
  422338:	bl	426b1c <ferror@plt+0x23d4c>
  42233c:	tst	w0, #0xff
  422340:	b.eq	42234c <ferror@plt+0x1f57c>  // b.none
  422344:	mov	x0, #0x1                   	// #1
  422348:	str	x0, [x22, #8]
  42234c:	mov	x0, x21
  422350:	bl	402b30 <free@plt>
  422354:	cbz	w25, 422390 <ferror@plt+0x1f5c0>
  422358:	ldr	x0, [x19, #448]
  42235c:	ldurb	w0, [x0, #-20]
  422360:	cmp	w0, #0x16
  422364:	b.eq	422390 <ferror@plt+0x1f5c0>  // b.none
  422368:	mov	x0, x19
  42236c:	bl	430978 <ferror@plt+0x2dba8>
  422370:	ldrb	w0, [x0, #4]
  422374:	cmp	w0, #0x15
  422378:	b.eq	422390 <ferror@plt+0x1f5c0>  // b.none
  42237c:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  422380:	mov	x0, x19
  422384:	add	x2, x2, #0x6c
  422388:	mov	w1, #0x3                   	// #3
  42238c:	bl	421610 <ferror@plt+0x1e840>
  422390:	cbz	x20, 422398 <ferror@plt+0x1f5c8>
  422394:	str	x20, [x19, #432]
  422398:	ldrb	w0, [x19, #26]
  42239c:	sub	w0, w0, #0x1
  4223a0:	strb	w0, [x19, #26]
  4223a4:	ldp	x19, x20, [sp, #16]
  4223a8:	ldp	x21, x22, [sp, #32]
  4223ac:	ldp	x23, x24, [sp, #48]
  4223b0:	ldr	x25, [sp, #64]
  4223b4:	ldp	x29, x30, [sp], #80
  4223b8:	ret
  4223bc:	mov	w25, #0x0                   	// #0
  4223c0:	b	4222dc <ferror@plt+0x1f50c>
  4223c4:	mov	w23, #0x0                   	// #0
  4223c8:	b	4222f4 <ferror@plt+0x1f524>
  4223cc:	cmp	w0, #0x3
  4223d0:	b.ne	4223f0 <ferror@plt+0x1f620>  // b.any
  4223d4:	mov	x0, x19
  4223d8:	bl	421408 <ferror@plt+0x1e638>
  4223dc:	mov	x21, x0
  4223e0:	cbnz	x0, 422408 <ferror@plt+0x1f638>
  4223e4:	cbz	w25, 422398 <ferror@plt+0x1f5c8>
  4223e8:	mov	x20, #0x0                   	// #0
  4223ec:	b	422358 <ferror@plt+0x1f588>
  4223f0:	mov	x0, x19
  4223f4:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  4223f8:	mov	w1, #0x3                   	// #3
  4223fc:	add	x2, x2, #0x38
  422400:	bl	421610 <ferror@plt+0x1e840>
  422404:	b	4223e4 <ferror@plt+0x1f614>
  422408:	mov	x20, #0x0                   	// #0
  42240c:	mov	w2, #0x1                   	// #1
  422410:	b	42232c <ferror@plt+0x1f55c>
  422414:	sub	w3, w2, #0x41
  422418:	cmp	x2, #0x41
  42241c:	lsr	x3, x0, x3
  422420:	sub	w0, w2, #0x1
  422424:	mvn	x3, x3
  422428:	lsr	x0, x1, x0
  42242c:	mvn	x0, x0
  422430:	and	w3, w3, #0x1
  422434:	and	w0, w0, #0x1
  422438:	csel	w0, w0, w3, cc  // cc = lo, ul, last
  42243c:	ret
  422440:	stp	x29, x30, [sp, #-80]!
  422444:	mov	x5, x0
  422448:	mov	x7, x1
  42244c:	mov	x29, sp
  422450:	ldp	x4, x1, [x0]
  422454:	mov	x9, x8
  422458:	ldrb	w0, [x0, #16]
  42245c:	mov	x6, x2
  422460:	cbnz	w0, 42251c <ferror@plt+0x1f74c>
  422464:	mov	x2, x7
  422468:	mov	x0, x4
  42246c:	bl	422414 <ferror@plt+0x1f644>
  422470:	and	x3, x0, #0xff
  422474:	eor	x3, x3, #0x1
  422478:	neg	x3, x3
  42247c:	cmp	x7, x6
  422480:	b.ls	42253c <ferror@plt+0x1f76c>  // b.plast
  422484:	cmp	x7, #0x3f
  422488:	b.hi	422524 <ferror@plt+0x1f754>  // b.pmore
  42248c:	lsl	x0, x3, x7
  422490:	mov	x4, x3
  422494:	orr	x1, x1, x0
  422498:	cmp	x6, #0x3f
  42249c:	b.ls	4224ac <ferror@plt+0x1f6dc>  // b.plast
  4224a0:	mov	x1, x4
  4224a4:	sub	x6, x6, #0x40
  4224a8:	mov	x4, x3
  4224ac:	cbz	x6, 4224d0 <ferror@plt+0x1f700>
  4224b0:	mov	w0, #0x40                  	// #64
  4224b4:	sub	w0, w0, w6
  4224b8:	lsr	x1, x1, x6
  4224bc:	lsl	x2, x4, x0
  4224c0:	orr	x1, x1, x2
  4224c4:	lsr	x4, x4, x6
  4224c8:	lsl	x3, x3, x0
  4224cc:	orr	x4, x4, x3
  4224d0:	stp	x4, x1, [x5]
  4224d4:	add	x8, sp, #0x30
  4224d8:	ldp	x0, x1, [x5]
  4224dc:	stp	x0, x1, [sp, #16]
  4224e0:	ldr	x0, [x5, #16]
  4224e4:	mov	x1, x7
  4224e8:	str	x0, [sp, #32]
  4224ec:	add	x0, sp, #0x10
  4224f0:	bl	42211c <ferror@plt+0x1f34c>
  4224f4:	ldp	x0, x1, [sp, #48]
  4224f8:	stp	x0, x1, [x5]
  4224fc:	ldr	x2, [sp, #64]
  422500:	str	x2, [x5, #16]
  422504:	strb	wzr, [x5, #17]
  422508:	stp	x0, x1, [x9]
  42250c:	ldr	x0, [x5, #16]
  422510:	str	x0, [x9, #16]
  422514:	ldp	x29, x30, [sp], #80
  422518:	ret
  42251c:	mov	x3, #0x0                   	// #0
  422520:	b	42247c <ferror@plt+0x1f6ac>
  422524:	cmp	x7, #0x7f
  422528:	b.hi	422498 <ferror@plt+0x1f6c8>  // b.pmore
  42252c:	sub	w0, w7, #0x40
  422530:	lsl	x0, x3, x0
  422534:	orr	x4, x4, x0
  422538:	b	422498 <ferror@plt+0x1f6c8>
  42253c:	mov	x1, x3
  422540:	mov	x4, x3
  422544:	b	4224d0 <ferror@plt+0x1f700>
  422548:	mov	x14, x8
  42254c:	mov	x10, x0
  422550:	cmp	x2, x1
  422554:	ldp	x13, x15, [x0]
  422558:	b.cc	4225a0 <ferror@plt+0x1f7d0>  // b.lo, b.ul, b.last
  42255c:	ldrb	w11, [x0, #16]
  422560:	cbnz	w11, 422598 <ferror@plt+0x1f7c8>
  422564:	orr	x13, x13, x15
  422568:	cmp	x13, #0x0
  42256c:	cset	w0, ne  // ne = any
  422570:	mov	x18, #0x0                   	// #0
  422574:	mov	x12, #0x0                   	// #0
  422578:	stp	x12, x18, [x10]
  42257c:	strb	w11, [x10, #16]
  422580:	strb	w0, [x10, #17]
  422584:	ldp	x0, x1, [x10]
  422588:	stp	x0, x1, [x14]
  42258c:	ldr	x0, [x10, #16]
  422590:	str	x0, [x14, #16]
  422594:	ret
  422598:	mov	w0, #0x0                   	// #0
  42259c:	b	422570 <ferror@plt+0x1f7a0>
  4225a0:	stp	x29, x30, [sp, #-112]!
  4225a4:	mov	x6, x1
  4225a8:	mov	x5, x2
  4225ac:	mov	x29, sp
  4225b0:	cmp	x2, #0x3f
  4225b4:	b.ls	42266c <ferror@plt+0x1f89c>  // b.plast
  4225b8:	sub	x2, x2, #0x40
  4225bc:	mov	x0, x15
  4225c0:	mov	x1, #0x0                   	// #0
  4225c4:	cbz	x2, 4225dc <ferror@plt+0x1f80c>
  4225c8:	neg	w3, w2
  4225cc:	lsl	x0, x0, x2
  4225d0:	lsr	x3, x1, x3
  4225d4:	orr	x0, x3, x0
  4225d8:	lsl	x1, x1, x2
  4225dc:	stp	x0, x1, [x10]
  4225e0:	add	x8, sp, #0x30
  4225e4:	ldp	x0, x1, [x10]
  4225e8:	stp	x0, x1, [sp, #16]
  4225ec:	ldr	x0, [x10, #16]
  4225f0:	mov	x1, x6
  4225f4:	str	x0, [sp, #32]
  4225f8:	add	x0, sp, #0x10
  4225fc:	bl	42211c <ferror@plt+0x1f34c>
  422600:	ldp	x12, x0, [sp, #48]
  422604:	ldr	x11, [sp, #64]
  422608:	stp	x12, x0, [x10]
  42260c:	str	x11, [x10, #16]
  422610:	ands	w11, w11, #0xff
  422614:	mov	x18, x0
  422618:	b.ne	422680 <ferror@plt+0x1f8b0>  // b.any
  42261c:	add	x0, sp, #0x30
  422620:	add	x8, sp, #0x58
  422624:	mov	x2, x5
  422628:	mov	x1, x6
  42262c:	bl	422440 <ferror@plt+0x1f670>
  422630:	ldr	x0, [sp, #96]
  422634:	cmp	x0, x15
  422638:	b.ne	422678 <ferror@plt+0x1f8a8>  // b.any
  42263c:	ldr	x0, [sp, #88]
  422640:	cmp	x0, x13
  422644:	cset	w0, ne  // ne = any
  422648:	stp	x12, x18, [x10]
  42264c:	strb	w11, [x10, #16]
  422650:	strb	w0, [x10, #17]
  422654:	ldp	x0, x1, [x10]
  422658:	stp	x0, x1, [x14]
  42265c:	ldr	x0, [x10, #16]
  422660:	str	x0, [x14, #16]
  422664:	ldp	x29, x30, [sp], #112
  422668:	ret
  42266c:	mov	x1, x15
  422670:	mov	x0, x13
  422674:	b	4225c4 <ferror@plt+0x1f7f4>
  422678:	mov	w0, #0x1                   	// #1
  42267c:	b	422648 <ferror@plt+0x1f878>
  422680:	mov	w0, #0x0                   	// #0
  422684:	b	422648 <ferror@plt+0x1f878>
  422688:	stp	x29, x30, [sp, #-160]!
  42268c:	cmp	w3, #0x5
  422690:	mov	x29, sp
  422694:	stp	x19, x20, [sp, #16]
  422698:	mov	x19, x1
  42269c:	stp	x21, x22, [sp, #32]
  4226a0:	ldrb	w21, [x2, #16]
  4226a4:	stp	x23, x24, [sp, #48]
  4226a8:	mov	x23, x8
  4226ac:	ldp	x9, x7, [x1]
  4226b0:	ldrb	w1, [x1, #16]
  4226b4:	ldp	x20, x22, [x2]
  4226b8:	ldr	x10, [x0, #1208]
  4226bc:	b.eq	4227ec <ferror@plt+0x1fa1c>  // b.none
  4226c0:	mov	x24, x2
  4226c4:	mov	w11, w3
  4226c8:	b.hi	422710 <ferror@plt+0x1f940>  // b.pmore
  4226cc:	cmp	w3, #0x4
  4226d0:	b.eq	4228b8 <ferror@plt+0x1fae8>  // b.none
  4226d4:	ldrb	w1, [x0, #1154]
  4226d8:	cbz	w1, 4226fc <ferror@plt+0x1f92c>
  4226dc:	ldrb	w1, [x0, #1152]
  4226e0:	cbz	w1, 4226ec <ferror@plt+0x1f91c>
  4226e4:	ldr	w1, [x0, #28]
  4226e8:	cbnz	w1, 4226fc <ferror@plt+0x1f92c>
  4226ec:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  4226f0:	mov	w1, #0x15                  	// #21
  4226f4:	add	x2, x2, #0x90
  4226f8:	bl	4216ec <ferror@plt+0x1e91c>
  4226fc:	ldp	x0, x1, [x24]
  422700:	stp	x0, x1, [x19]
  422704:	ldr	x0, [x24, #16]
  422708:	str	x0, [x19, #16]
  42270c:	b	4227cc <ferror@plt+0x1f9fc>
  422710:	sub	w1, w3, #0xc
  422714:	cmp	w1, #0x1
  422718:	b.hi	4226d4 <ferror@plt+0x1f904>  // b.pmore
  42271c:	cbnz	w21, 422780 <ferror@plt+0x1f9b0>
  422720:	mov	x2, x10
  422724:	mov	x1, x22
  422728:	mov	x0, x20
  42272c:	bl	422414 <ferror@plt+0x1f644>
  422730:	tst	w0, #0xff
  422734:	b.ne	422780 <ferror@plt+0x1f9b0>  // b.any
  422738:	cmp	w11, #0xd
  42273c:	add	x8, sp, #0x60
  422740:	cset	w11, ne  // ne = any
  422744:	ldp	x0, x1, [x24]
  422748:	add	w11, w11, #0xc
  42274c:	stp	x0, x1, [sp, #64]
  422750:	mov	x1, x10
  422754:	ldr	x0, [x24, #16]
  422758:	str	x0, [sp, #80]
  42275c:	add	x0, sp, #0x40
  422760:	bl	422170 <ferror@plt+0x1f3a0>
  422764:	ldr	x20, [sp, #96]
  422768:	str	x20, [x24]
  42276c:	ldr	x0, [sp, #104]
  422770:	str	x0, [x24, #8]
  422774:	ldr	x22, [x24, #8]
  422778:	ldr	x0, [sp, #112]
  42277c:	str	x0, [x24, #16]
  422780:	ldp	x2, x3, [x19]
  422784:	stp	x2, x3, [sp, #64]
  422788:	cmp	x20, #0x0
  42278c:	ldr	x0, [x19, #16]
  422790:	str	x0, [sp, #80]
  422794:	csinv	x22, x22, xzr, eq  // eq = none
  422798:	add	x8, sp, #0x60
  42279c:	cmp	w11, #0xd
  4227a0:	mov	x2, x22
  4227a4:	mov	x1, x10
  4227a8:	add	x0, sp, #0x40
  4227ac:	b.ne	4227e4 <ferror@plt+0x1fa14>  // b.any
  4227b0:	bl	422548 <ferror@plt+0x1f778>
  4227b4:	ldp	x20, x0, [sp, #96]
  4227b8:	ldr	x21, [sp, #112]
  4227bc:	str	x21, [x19, #16]
  4227c0:	stp	x20, x0, [x19]
  4227c4:	and	w21, w21, #0xff
  4227c8:	mov	x22, x0
  4227cc:	stp	x20, x22, [x19]
  4227d0:	strb	w21, [x19, #16]
  4227d4:	ldp	x0, x1, [x19]
  4227d8:	stp	x0, x1, [x23]
  4227dc:	ldr	x0, [x19, #16]
  4227e0:	b	4228a0 <ferror@plt+0x1fad0>
  4227e4:	bl	422440 <ferror@plt+0x1f670>
  4227e8:	b	4227b4 <ferror@plt+0x1f9e4>
  4227ec:	subs	x0, x7, x22
  4227f0:	strb	wzr, [sp, #153]
  4227f4:	cmp	x7, x22
  4227f8:	add	x8, sp, #0x60
  4227fc:	sbc	x2, x9, x20
  422800:	stp	x2, x0, [sp, #136]
  422804:	cmp	w1, #0x0
  422808:	csinc	w21, w21, wzr, eq  // eq = none
  42280c:	strb	w21, [sp, #152]
  422810:	ldp	x0, x1, [sp, #136]
  422814:	stp	x0, x1, [sp, #64]
  422818:	ldr	x0, [sp, #152]
  42281c:	mov	x1, x10
  422820:	str	x0, [sp, #80]
  422824:	add	x0, sp, #0x40
  422828:	bl	42211c <ferror@plt+0x1f34c>
  42282c:	ldp	x0, x1, [sp, #96]
  422830:	stp	x0, x1, [sp, #136]
  422834:	ldr	x1, [sp, #112]
  422838:	str	x1, [sp, #152]
  42283c:	ldr	x8, [sp, #144]
  422840:	mov	x6, x0
  422844:	ands	w4, w1, #0xff
  422848:	ubfx	w0, w1, #8, #8
  42284c:	b.ne	422890 <ferror@plt+0x1fac0>  // b.any
  422850:	mov	x1, x7
  422854:	mov	x2, x10
  422858:	mov	x0, x9
  42285c:	bl	422414 <ferror@plt+0x1f644>
  422860:	and	w5, w0, #0xff
  422864:	mov	x1, x22
  422868:	mov	x0, x20
  42286c:	bl	422414 <ferror@plt+0x1f644>
  422870:	cmp	w5, w0, uxtb
  422874:	b.eq	42288c <ferror@plt+0x1fabc>  // b.none
  422878:	mov	x1, x8
  42287c:	mov	x0, x6
  422880:	bl	422414 <ferror@plt+0x1f644>
  422884:	and	w1, w0, #0xff
  422888:	eor	w4, w1, w5
  42288c:	mov	w0, w4
  422890:	strb	w0, [sp, #153]
  422894:	ldp	x0, x1, [sp, #136]
  422898:	stp	x0, x1, [x23]
  42289c:	ldr	x0, [sp, #152]
  4228a0:	ldp	x19, x20, [sp, #16]
  4228a4:	ldp	x21, x22, [sp, #32]
  4228a8:	str	x0, [x23, #16]
  4228ac:	ldp	x23, x24, [sp, #48]
  4228b0:	ldp	x29, x30, [sp], #160
  4228b4:	ret
  4228b8:	adds	x2, x7, x22
  4228bc:	add	x0, x9, x20
  4228c0:	cset	x3, cs  // cs = hs, nlast
  4228c4:	cmp	w1, #0x0
  4228c8:	add	x0, x0, x3
  4228cc:	stp	x0, x2, [sp, #136]
  4228d0:	csinc	w21, w21, wzr, eq  // eq = none
  4228d4:	strb	w21, [sp, #152]
  4228d8:	add	x8, sp, #0x60
  4228dc:	strb	wzr, [sp, #153]
  4228e0:	ldp	x0, x1, [sp, #136]
  4228e4:	stp	x0, x1, [sp, #64]
  4228e8:	ldr	x0, [sp, #152]
  4228ec:	mov	x1, x10
  4228f0:	str	x0, [sp, #80]
  4228f4:	add	x0, sp, #0x40
  4228f8:	bl	42211c <ferror@plt+0x1f34c>
  4228fc:	ldp	x0, x1, [sp, #96]
  422900:	stp	x0, x1, [sp, #136]
  422904:	ldr	x1, [sp, #112]
  422908:	str	x1, [sp, #152]
  42290c:	ldr	x8, [sp, #144]
  422910:	mov	x5, x0
  422914:	ands	w4, w1, #0xff
  422918:	ubfx	w0, w1, #8, #8
  42291c:	b.ne	422890 <ferror@plt+0x1fac0>  // b.any
  422920:	mov	x1, x7
  422924:	mov	x2, x10
  422928:	mov	x0, x9
  42292c:	bl	422414 <ferror@plt+0x1f644>
  422930:	and	w6, w0, #0xff
  422934:	mov	x1, x22
  422938:	mov	x0, x20
  42293c:	bl	422414 <ferror@plt+0x1f644>
  422940:	and	w7, w0, #0xff
  422944:	cmp	w6, w0, uxtb
  422948:	b.ne	42288c <ferror@plt+0x1fabc>  // b.any
  42294c:	mov	x1, x8
  422950:	mov	x0, x5
  422954:	bl	422414 <ferror@plt+0x1f644>
  422958:	and	w1, w0, #0xff
  42295c:	eor	w4, w1, w7
  422960:	b	42288c <ferror@plt+0x1fabc>
  422964:	mov	x9, x0
  422968:	mov	x8, x1
  42296c:	mov	x7, x3
  422970:	tst	w2, #0xff
  422974:	b.ne	4229d8 <ferror@plt+0x1fc08>  // b.any
  422978:	and	w5, w5, #0xff
  42297c:	cbnz	w5, 4229d8 <ferror@plt+0x1fc08>
  422980:	stp	x29, x30, [sp, #-16]!
  422984:	mov	x2, x6
  422988:	mov	x29, sp
  42298c:	bl	422414 <ferror@plt+0x1f644>
  422990:	and	w5, w0, #0xff
  422994:	mov	x1, x4
  422998:	mov	x0, x7
  42299c:	bl	422414 <ferror@plt+0x1f644>
  4229a0:	cmp	w5, w0, uxtb
  4229a4:	b.ne	4229bc <ferror@plt+0x1fbec>  // b.any
  4229a8:	cmp	x9, x7
  4229ac:	b.hi	4229c8 <ferror@plt+0x1fbf8>  // b.pmore
  4229b0:	b.ne	4229d0 <ferror@plt+0x1fc00>  // b.any
  4229b4:	cmp	x8, x4
  4229b8:	cset	w5, cs  // cs = hs, nlast
  4229bc:	mov	w0, w5
  4229c0:	ldp	x29, x30, [sp], #16
  4229c4:	ret
  4229c8:	mov	w5, #0x1                   	// #1
  4229cc:	b	4229bc <ferror@plt+0x1fbec>
  4229d0:	mov	w5, #0x0                   	// #0
  4229d4:	b	4229bc <ferror@plt+0x1fbec>
  4229d8:	cmp	x9, x7
  4229dc:	b.hi	4229f4 <ferror@plt+0x1fc24>  // b.pmore
  4229e0:	b.ne	4229fc <ferror@plt+0x1fc2c>  // b.any
  4229e4:	cmp	x8, x4
  4229e8:	cset	w5, cs  // cs = hs, nlast
  4229ec:	mov	w0, w5
  4229f0:	ret
  4229f4:	mov	w5, #0x1                   	// #1
  4229f8:	b	4229ec <ferror@plt+0x1fc1c>
  4229fc:	mov	w5, #0x0                   	// #0
  422a00:	b	4229ec <ferror@plt+0x1fc1c>
  422a04:	b	421b90 <ferror@plt+0x1edc0>
  422a08:	b	422004 <ferror@plt+0x1f234>
  422a0c:	cmp	w0, #0x4a
  422a10:	b.eq	422a3c <ferror@plt+0x1fc6c>  // b.none
  422a14:	cmp	w0, #0x4b
  422a18:	b.eq	422a44 <ferror@plt+0x1fc74>  // b.none
  422a1c:	cmp	w0, #0x4c
  422a20:	b.eq	422a4c <ferror@plt+0x1fc7c>  // b.none
  422a24:	cmp	w0, #0x4d
  422a28:	b.eq	422a54 <ferror@plt+0x1fc84>  // b.none
  422a2c:	cmp	w0, #0x4e
  422a30:	mov	w1, #0x42                  	// #66
  422a34:	csel	w0, w0, w1, ne  // ne = any
  422a38:	ret
  422a3c:	mov	w0, #0x3e                  	// #62
  422a40:	b	422a38 <ferror@plt+0x1fc68>
  422a44:	mov	w0, #0x3f                  	// #63
  422a48:	b	422a38 <ferror@plt+0x1fc68>
  422a4c:	mov	w0, #0x40                  	// #64
  422a50:	b	422a38 <ferror@plt+0x1fc68>
  422a54:	mov	w0, #0x41                  	// #65
  422a58:	b	422a38 <ferror@plt+0x1fc68>
  422a5c:	cmp	w0, #0x3e
  422a60:	b.eq	422a8c <ferror@plt+0x1fcbc>  // b.none
  422a64:	cmp	w0, #0x3f
  422a68:	b.eq	422a94 <ferror@plt+0x1fcc4>  // b.none
  422a6c:	cmp	w0, #0x40
  422a70:	b.eq	422a9c <ferror@plt+0x1fccc>  // b.none
  422a74:	cmp	w0, #0x41
  422a78:	b.eq	422aa4 <ferror@plt+0x1fcd4>  // b.none
  422a7c:	cmp	w0, #0x42
  422a80:	mov	w1, #0x4e                  	// #78
  422a84:	csel	w0, w0, w1, ne  // ne = any
  422a88:	ret
  422a8c:	mov	w0, #0x4a                  	// #74
  422a90:	b	422a88 <ferror@plt+0x1fcb8>
  422a94:	mov	w0, #0x4b                  	// #75
  422a98:	b	422a88 <ferror@plt+0x1fcb8>
  422a9c:	mov	w0, #0x4c                  	// #76
  422aa0:	b	422a88 <ferror@plt+0x1fcb8>
  422aa4:	mov	w0, #0x4d                  	// #77
  422aa8:	b	422a88 <ferror@plt+0x1fcb8>
  422aac:	cmp	w0, #0x45
  422ab0:	b.eq	422adc <ferror@plt+0x1fd0c>  // b.none
  422ab4:	cmp	w0, #0x46
  422ab8:	b.eq	422ae4 <ferror@plt+0x1fd14>  // b.none
  422abc:	cmp	w0, #0x47
  422ac0:	b.eq	422aec <ferror@plt+0x1fd1c>  // b.none
  422ac4:	cmp	w0, #0x48
  422ac8:	b.eq	422af4 <ferror@plt+0x1fd24>  // b.none
  422acc:	cmp	w0, #0x49
  422ad0:	mov	w1, #0x3c                  	// #60
  422ad4:	csel	w0, w0, w1, ne  // ne = any
  422ad8:	ret
  422adc:	mov	w0, #0x38                  	// #56
  422ae0:	b	422ad8 <ferror@plt+0x1fd08>
  422ae4:	mov	w0, #0x39                  	// #57
  422ae8:	b	422ad8 <ferror@plt+0x1fd08>
  422aec:	mov	w0, #0x3a                  	// #58
  422af0:	b	422ad8 <ferror@plt+0x1fd08>
  422af4:	mov	w0, #0x3b                  	// #59
  422af8:	b	422ad8 <ferror@plt+0x1fd08>
  422afc:	cmp	w0, #0x38
  422b00:	b.eq	422b2c <ferror@plt+0x1fd5c>  // b.none
  422b04:	cmp	w0, #0x39
  422b08:	b.eq	422b34 <ferror@plt+0x1fd64>  // b.none
  422b0c:	cmp	w0, #0x3a
  422b10:	b.eq	422b3c <ferror@plt+0x1fd6c>  // b.none
  422b14:	cmp	w0, #0x3b
  422b18:	b.eq	422b44 <ferror@plt+0x1fd74>  // b.none
  422b1c:	cmp	w0, #0x3c
  422b20:	mov	w1, #0x49                  	// #73
  422b24:	csel	w0, w0, w1, ne  // ne = any
  422b28:	ret
  422b2c:	mov	w0, #0x45                  	// #69
  422b30:	b	422b28 <ferror@plt+0x1fd58>
  422b34:	mov	w0, #0x46                  	// #70
  422b38:	b	422b28 <ferror@plt+0x1fd58>
  422b3c:	mov	w0, #0x47                  	// #71
  422b40:	b	422b28 <ferror@plt+0x1fd58>
  422b44:	mov	w0, #0x48                  	// #72
  422b48:	b	422b28 <ferror@plt+0x1fd58>
  422b4c:	sub	w0, w0, #0x4a
  422b50:	cmp	w0, #0x4
  422b54:	cset	w0, ls  // ls = plast
  422b58:	ret
  422b5c:	sub	w0, w0, #0x45
  422b60:	cmp	w0, #0x4
  422b64:	cset	w0, ls  // ls = plast
  422b68:	ret
  422b6c:	ldr	w2, [x0, #8]
  422b70:	mov	x1, #0x0                   	// #0
  422b74:	ldr	x0, [x0, #16]
  422b78:	cmp	w2, w1
  422b7c:	b.ls	422ba0 <ferror@plt+0x1fdd0>  // b.plast
  422b80:	ldrb	w3, [x0, x1]
  422b84:	cmp	w3, #0x27
  422b88:	b.eq	422bb0 <ferror@plt+0x1fde0>  // b.none
  422b8c:	add	x4, x1, #0x1
  422b90:	cmp	w3, #0x22
  422b94:	b.eq	422bb0 <ferror@plt+0x1fde0>  // b.none
  422b98:	mov	x1, x4
  422b9c:	b	422b78 <ferror@plt+0x1fda8>
  422ba0:	cmp	w2, w1
  422ba4:	b.ne	422bb0 <ferror@plt+0x1fde0>  // b.any
  422ba8:	add	x0, x0, x1
  422bac:	ret
  422bb0:	ldrb	w3, [x0, x1]
  422bb4:	cbz	w2, 422bc8 <ferror@plt+0x1fdf8>
  422bb8:	sub	w1, w2, #0x1
  422bbc:	ldrb	w4, [x0, w1, uxtw]
  422bc0:	cmp	w4, w3
  422bc4:	b.ne	422bd0 <ferror@plt+0x1fe00>  // b.any
  422bc8:	add	x0, x0, w2, uxtw
  422bcc:	b	422bac <ferror@plt+0x1fddc>
  422bd0:	mov	w2, w1
  422bd4:	b	422bb4 <ferror@plt+0x1fde4>
  422bd8:	stp	x29, x30, [sp, #-96]!
  422bdc:	mov	x29, sp
  422be0:	stp	x19, x20, [sp, #16]
  422be4:	mov	x19, x0
  422be8:	stp	x21, x22, [sp, #32]
  422bec:	mov	w22, w3
  422bf0:	stp	x23, x24, [sp, #48]
  422bf4:	stp	x25, x26, [sp, #64]
  422bf8:	mov	x25, x2
  422bfc:	ldr	x5, [x1, #16]
  422c00:	str	x27, [sp, #80]
  422c04:	cbz	x2, 422c0c <ferror@plt+0x1fe3c>
  422c08:	str	xzr, [x2]
  422c0c:	ldr	w24, [x1, #8]
  422c10:	cmp	w24, #0x1
  422c14:	b.eq	423188 <ferror@plt+0x203b8>  // b.none
  422c18:	mov	x21, x5
  422c1c:	ldrb	w0, [x21], #1
  422c20:	cmp	w0, #0x30
  422c24:	b.ne	422d38 <ferror@plt+0x1ff68>  // b.any
  422c28:	ldrb	w0, [x5, #1]
  422c2c:	and	w0, w0, #0xffffffdf
  422c30:	and	w0, w0, #0xff
  422c34:	cmp	w0, #0x58
  422c38:	b.ne	422d08 <ferror@plt+0x1ff38>  // b.any
  422c3c:	ldrb	w0, [x5, #2]
  422c40:	cmp	w0, #0x2e
  422c44:	b.eq	422c58 <ferror@plt+0x1fe88>  // b.none
  422c48:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  422c4c:	add	x1, x1, #0xb08
  422c50:	ldrh	w1, [x1, w0, sxtw #1]
  422c54:	tbz	w1, #8, 422cb8 <ferror@plt+0x1fee8>
  422c58:	add	x21, x5, #0x2
  422c5c:	mov	w23, #0x10                  	// #16
  422c60:	adrp	x27, 46c000 <_obstack_memory_used@@Base+0x275fc>
  422c64:	adrp	x6, 46c000 <_obstack_memory_used@@Base+0x275fc>
  422c68:	add	x27, x27, #0xb08
  422c6c:	add	x6, x6, #0x790
  422c70:	mov	w1, #0x0                   	// #0
  422c74:	mov	w4, #0x0                   	// #0
  422c78:	mov	w20, #0x0                   	// #0
  422c7c:	mov	w26, #0x0                   	// #0
  422c80:	mov	x3, x21
  422c84:	ldrb	w2, [x3], #1
  422c88:	mov	x0, x2
  422c8c:	ldrh	w2, [x27, x2, lsl #1]
  422c90:	tbnz	w2, #2, 422ca0 <ferror@plt+0x1fed0>
  422c94:	tbz	w2, #8, 422d60 <ferror@plt+0x1ff90>
  422c98:	cmp	w23, #0x10
  422c9c:	b.ne	422d60 <ferror@plt+0x1ff90>  // b.any
  422ca0:	ldrb	w0, [x6, w0, sxtw]
  422ca4:	mov	w1, #0x0                   	// #0
  422ca8:	mov	w4, #0x1                   	// #1
  422cac:	cmp	w26, w0
  422cb0:	csel	w26, w26, w0, cs  // cs = hs, nlast
  422cb4:	b	422d50 <ferror@plt+0x1ff80>
  422cb8:	cmp	w0, #0x27
  422cbc:	b.ne	422d44 <ferror@plt+0x1ff74>  // b.any
  422cc0:	ldrb	w0, [x19, #1166]
  422cc4:	cbz	w0, 422d44 <ferror@plt+0x1ff74>
  422cc8:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  422ccc:	add	x4, x4, #0x15a
  422cd0:	mov	w2, w22
  422cd4:	mov	x0, x19
  422cd8:	mov	w3, #0x0                   	// #0
  422cdc:	mov	w1, #0x3                   	// #3
  422ce0:	bl	4217cc <ferror@plt+0x1e9fc>
  422ce4:	mov	w20, #0x0                   	// #0
  422ce8:	mov	w0, w20
  422cec:	ldp	x19, x20, [sp, #16]
  422cf0:	ldp	x21, x22, [sp, #32]
  422cf4:	ldp	x23, x24, [sp, #48]
  422cf8:	ldp	x25, x26, [sp, #64]
  422cfc:	ldr	x27, [sp, #80]
  422d00:	ldp	x29, x30, [sp], #96
  422d04:	ret
  422d08:	cmp	w0, #0x42
  422d0c:	b.ne	422d44 <ferror@plt+0x1ff74>  // b.any
  422d10:	ldrb	w1, [x5, #2]
  422d14:	sub	w0, w1, #0x30
  422d18:	and	w0, w0, #0xff
  422d1c:	cmp	w0, #0x1
  422d20:	b.hi	422d30 <ferror@plt+0x1ff60>  // b.pmore
  422d24:	add	x21, x5, #0x2
  422d28:	mov	w23, #0x2                   	// #2
  422d2c:	b	422c60 <ferror@plt+0x1fe90>
  422d30:	cmp	w1, #0x27
  422d34:	b	422cbc <ferror@plt+0x1feec>
  422d38:	mov	x21, x5
  422d3c:	mov	w23, #0xa                   	// #10
  422d40:	b	422c60 <ferror@plt+0x1fe90>
  422d44:	mov	w23, #0x8                   	// #8
  422d48:	b	422c60 <ferror@plt+0x1fe90>
  422d4c:	mov	w1, #0x1                   	// #1
  422d50:	mov	x21, x3
  422d54:	b	422c80 <ferror@plt+0x1feb0>
  422d58:	mov	w20, #0x1                   	// #1
  422d5c:	b	422d50 <ferror@plt+0x1ff80>
  422d60:	cmp	w0, #0x27
  422d64:	b.ne	422d80 <ferror@plt+0x1ffb0>  // b.any
  422d68:	ldrb	w2, [x19, #1166]
  422d6c:	cbz	w2, 4232f8 <ferror@plt+0x20528>
  422d70:	cbz	w1, 422d4c <ferror@plt+0x1ff7c>
  422d74:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  422d78:	add	x4, x4, #0x17f
  422d7c:	b	422cd0 <ferror@plt+0x1ff00>
  422d80:	cmp	w0, #0x2e
  422d84:	b.ne	422dbc <ferror@plt+0x1ffec>  // b.any
  422d88:	cbnz	w1, 422da0 <ferror@plt+0x1ffd0>
  422d8c:	ldrb	w0, [x3]
  422d90:	cmp	w0, #0x27
  422d94:	b.ne	422dac <ferror@plt+0x1ffdc>  // b.any
  422d98:	ldrb	w0, [x19, #1166]
  422d9c:	cbz	w0, 422dac <ferror@plt+0x1ffdc>
  422da0:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  422da4:	add	x4, x4, #0x199
  422da8:	b	422cd0 <ferror@plt+0x1ff00>
  422dac:	cbz	w20, 422d58 <ferror@plt+0x1ff88>
  422db0:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  422db4:	add	x4, x4, #0x1c3
  422db8:	b	422cd0 <ferror@plt+0x1ff00>
  422dbc:	cmp	w23, #0xa
  422dc0:	b.hi	423300 <ferror@plt+0x20530>  // b.pmore
  422dc4:	and	w0, w0, #0xffffffdf
  422dc8:	cmp	w0, #0x45
  422dcc:	b.ne	422dfc <ferror@plt+0x2002c>  // b.any
  422dd0:	cbnz	w1, 422de8 <ferror@plt+0x20018>
  422dd4:	ldrb	w0, [x3]
  422dd8:	cmp	w0, #0x27
  422ddc:	b.ne	422df4 <ferror@plt+0x20024>  // b.any
  422de0:	ldrb	w0, [x19, #1166]
  422de4:	cbz	w0, 422df4 <ferror@plt+0x20024>
  422de8:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  422dec:	add	x4, x4, #0x1e5
  422df0:	b	422cd0 <ferror@plt+0x1ff00>
  422df4:	mov	x21, x3
  422df8:	mov	w20, #0x2                   	// #2
  422dfc:	cmp	w1, #0x0
  422e00:	ccmp	w20, #0x2, #0x4, ne  // ne = any
  422e04:	b.eq	422e14 <ferror@plt+0x20044>  // b.none
  422e08:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  422e0c:	add	x4, x4, #0x20a
  422e10:	b	422cd0 <ferror@plt+0x1ff00>
  422e14:	cmp	w20, #0x0
  422e18:	add	x24, x5, w24, uxtw
  422e1c:	ccmp	w23, #0x10, #0x4, eq  // eq = none
  422e20:	b.eq	422ee8 <ferror@plt+0x20118>  // b.none
  422e24:	sub	x2, x24, x21
  422e28:	mov	x1, x21
  422e2c:	mov	x0, x19
  422e30:	bl	421b90 <ferror@plt+0x1edc0>
  422e34:	tst	w0, #0x300000
  422e38:	b.eq	423218 <ferror@plt+0x20448>  // b.none
  422e3c:	orr	w20, w0, #0x2
  422e40:	cmp	w23, #0x8
  422e44:	mov	w0, #0xa                   	// #10
  422e48:	csel	w23, w23, w0, ne  // ne = any
  422e4c:	ldrb	w0, [x19, #1154]
  422e50:	cbz	w0, 422e70 <ferror@plt+0x200a0>
  422e54:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  422e58:	mov	w2, w22
  422e5c:	add	x4, x4, #0x231
  422e60:	mov	x0, x19
  422e64:	mov	w3, #0x0                   	// #0
  422e68:	mov	w1, #0x2                   	// #2
  422e6c:	bl	4217cc <ferror@plt+0x1e9fc>
  422e70:	tbz	w20, #13, 422e98 <ferror@plt+0x200c8>
  422e74:	ldrb	w0, [x19, #1154]
  422e78:	cbz	w0, 422e98 <ferror@plt+0x200c8>
  422e7c:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  422e80:	mov	w2, w22
  422e84:	add	x4, x4, #0x4a9
  422e88:	mov	x0, x19
  422e8c:	mov	w3, #0x0                   	// #0
  422e90:	mov	w1, #0x2                   	// #2
  422e94:	bl	4217cc <ferror@plt+0x1e9fc>
  422e98:	cmp	w23, #0x2
  422e9c:	b.ne	423178 <ferror@plt+0x203a8>  // b.any
  422ea0:	ldrb	w0, [x19, #1165]
  422ea4:	cbnz	w0, 422ee0 <ferror@plt+0x20110>
  422ea8:	ldrb	w0, [x19, #1154]
  422eac:	cbz	w0, 422ee0 <ferror@plt+0x20110>
  422eb0:	ldrb	w1, [x19, #1120]
  422eb4:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x225fc>
  422eb8:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  422ebc:	add	x0, x0, #0x135
  422ec0:	cmp	w1, #0x0
  422ec4:	add	x4, x4, #0xff
  422ec8:	csel	x4, x4, x0, ne  // ne = any
  422ecc:	mov	w2, w22
  422ed0:	mov	w1, w23
  422ed4:	mov	x0, x19
  422ed8:	mov	w3, #0x0                   	// #0
  422edc:	bl	4217cc <ferror@plt+0x1e9fc>
  422ee0:	orr	w20, w20, #0x800
  422ee4:	b	422ce8 <ferror@plt+0x1ff18>
  422ee8:	cmp	w20, #0x0
  422eec:	ccmp	w23, #0x8, #0x0, ne  // ne = any
  422ef0:	b.eq	423190 <ferror@plt+0x203c0>  // b.none
  422ef4:	cmp	w26, w23
  422ef8:	b.cc	422f38 <ferror@plt+0x20168>  // b.lo, b.ul, b.last
  422efc:	cmp	w23, #0x2
  422f00:	b.ne	422f28 <ferror@plt+0x20158>  // b.any
  422f04:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  422f08:	add	w5, w26, #0x30
  422f0c:	add	x4, x4, #0x25b
  422f10:	mov	w2, w22
  422f14:	mov	x0, x19
  422f18:	mov	w3, #0x0                   	// #0
  422f1c:	mov	w1, #0x3                   	// #3
  422f20:	bl	4217cc <ferror@plt+0x1e9fc>
  422f24:	b	422ce4 <ferror@plt+0x1ff14>
  422f28:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  422f2c:	add	w5, w26, #0x30
  422f30:	add	x4, x4, #0x281
  422f34:	b	422f10 <ferror@plt+0x20140>
  422f38:	cbz	w20, 423220 <ferror@plt+0x20450>
  422f3c:	cmp	w23, #0x2
  422f40:	b.ne	42319c <ferror@plt+0x203cc>  // b.any
  422f44:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  422f48:	add	x4, x4, #0x2a6
  422f4c:	b	422cd0 <ferror@plt+0x1ff00>
  422f50:	b.ne	4231cc <ferror@plt+0x203fc>  // b.any
  422f54:	ldrb	w0, [x19, #1154]
  422f58:	cbz	w0, 422f88 <ferror@plt+0x201b8>
  422f5c:	ldrb	w0, [x19, #1127]
  422f60:	cbnz	w0, 422f88 <ferror@plt+0x201b8>
  422f64:	ldrb	w0, [x19, #1120]
  422f68:	cbz	w0, 422f9c <ferror@plt+0x201cc>
  422f6c:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  422f70:	add	x4, x4, #0x2fb
  422f74:	mov	w2, w22
  422f78:	mov	x0, x19
  422f7c:	mov	w3, #0x0                   	// #0
  422f80:	mov	w1, #0x2                   	// #2
  422f84:	bl	4217cc <ferror@plt+0x1e9fc>
  422f88:	cmp	w20, #0x2
  422f8c:	b.eq	4231d4 <ferror@plt+0x20404>  // b.none
  422f90:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  422f94:	add	x4, x4, #0x366
  422f98:	b	422cd0 <ferror@plt+0x1ff00>
  422f9c:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  422fa0:	add	x4, x4, #0x326
  422fa4:	b	422f74 <ferror@plt+0x201a4>
  422fa8:	ldrb	w0, [x21]
  422fac:	cmp	w0, #0x27
  422fb0:	b.ne	423058 <ferror@plt+0x20288>  // b.any
  422fb4:	ldrb	w0, [x19, #1166]
  422fb8:	cmp	w0, #0x0
  422fbc:	cset	w1, ne  // ne = any
  422fc0:	ldrb	w0, [x21, #1]!
  422fc4:	ldrh	w2, [x27, w0, sxtw #1]
  422fc8:	tbnz	w2, #2, 422fa8 <ferror@plt+0x201d8>
  422fcc:	cmp	w0, #0x27
  422fd0:	b.ne	422fdc <ferror@plt+0x2020c>  // b.any
  422fd4:	ldrb	w0, [x19, #1166]
  422fd8:	cbnz	w0, 422fa8 <ferror@plt+0x201d8>
  422fdc:	cbnz	w1, 422e08 <ferror@plt+0x20038>
  422fe0:	sub	x26, x24, x21
  422fe4:	mov	x1, x21
  422fe8:	mov	x2, x26
  422fec:	mov	x0, x19
  422ff0:	bl	421b90 <ferror@plt+0x1edc0>
  422ff4:	mov	w20, w0
  422ff8:	cbnz	w0, 423088 <ferror@plt+0x202b8>
  422ffc:	ldrb	w0, [x19, #1161]
  423000:	cbz	w0, 423060 <ferror@plt+0x20290>
  423004:	cbz	x25, 42300c <ferror@plt+0x2023c>
  423008:	str	x21, [x25]
  42300c:	mov	w20, #0x40                  	// #64
  423010:	cmp	x21, x24
  423014:	movk	w20, #0x100, lsl #16
  423018:	b.eq	4230bc <ferror@plt+0x202ec>  // b.none
  42301c:	ldrb	w0, [x19, #1138]
  423020:	cbz	w0, 423090 <ferror@plt+0x202c0>
  423024:	mov	x0, x19
  423028:	bl	42e24c <ferror@plt+0x2b47c>
  42302c:	cbnz	w0, 423090 <ferror@plt+0x202c0>
  423030:	mov	x6, x21
  423034:	mov	w5, w26
  423038:	mov	w2, w22
  42303c:	mov	x0, x19
  423040:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  423044:	mov	w3, #0x0                   	// #0
  423048:	add	x4, x4, #0x3c4
  42304c:	mov	w1, #0x6                   	// #6
  423050:	bl	42183c <ferror@plt+0x1ea6c>
  423054:	b	423090 <ferror@plt+0x202c0>
  423058:	mov	w1, #0x0                   	// #0
  42305c:	b	422fc0 <ferror@plt+0x201f0>
  423060:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  423064:	mov	x6, x21
  423068:	mov	w5, w26
  42306c:	add	x4, x4, #0x399
  423070:	mov	w2, w22
  423074:	mov	x0, x19
  423078:	mov	w3, #0x0                   	// #0
  42307c:	mov	w1, #0x3                   	// #3
  423080:	bl	4217cc <ferror@plt+0x1e9fc>
  423084:	b	422ce8 <ferror@plt+0x1ff18>
  423088:	cmp	x21, x24
  42308c:	b.ne	42301c <ferror@plt+0x2024c>  // b.any
  423090:	cmp	w20, #0x20
  423094:	b.ne	4230bc <ferror@plt+0x202ec>  // b.any
  423098:	ldrb	w0, [x19, #1154]
  42309c:	cbz	w0, 4230bc <ferror@plt+0x202ec>
  4230a0:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  4230a4:	mov	w2, w22
  4230a8:	add	x4, x4, #0x3ec
  4230ac:	mov	x0, x19
  4230b0:	mov	w3, #0x0                   	// #0
  4230b4:	mov	w1, #0x2                   	// #2
  4230b8:	bl	4217cc <ferror@plt+0x1e9fc>
  4230bc:	and	w24, w20, #0x4000
  4230c0:	tbz	w20, #14, 4230f4 <ferror@plt+0x20324>
  4230c4:	cmp	w23, #0xa
  4230c8:	b.eq	4230f4 <ferror@plt+0x20324>  // b.none
  4230cc:	mov	x6, x21
  4230d0:	mov	w5, w26
  4230d4:	mov	w2, w22
  4230d8:	mov	x0, x19
  4230dc:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  4230e0:	mov	w3, #0x0                   	// #0
  4230e4:	add	x4, x4, #0x41a
  4230e8:	mov	w1, #0x3                   	// #3
  4230ec:	bl	4217cc <ferror@plt+0x1e9fc>
  4230f0:	b	422ce4 <ferror@plt+0x1ff14>
  4230f4:	tst	w20, #0x300000
  4230f8:	b.eq	423120 <ferror@plt+0x20350>  // b.none
  4230fc:	ldrb	w0, [x19, #1154]
  423100:	cbz	w0, 423148 <ferror@plt+0x20378>
  423104:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  423108:	mov	w2, w22
  42310c:	add	x4, x4, #0x231
  423110:	mov	x0, x19
  423114:	mov	w3, #0x0                   	// #0
  423118:	mov	w1, #0x2                   	// #2
  42311c:	bl	4217cc <ferror@plt+0x1e9fc>
  423120:	cbz	w24, 423148 <ferror@plt+0x20378>
  423124:	ldrb	w0, [x19, #1154]
  423128:	cbz	w0, 423148 <ferror@plt+0x20378>
  42312c:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  423130:	mov	w2, w22
  423134:	add	x4, x4, #0x453
  423138:	mov	x0, x19
  42313c:	mov	w3, #0x0                   	// #0
  423140:	mov	w1, #0x2                   	// #2
  423144:	bl	4217cc <ferror@plt+0x1e9fc>
  423148:	orr	w20, w20, #0x2
  42314c:	b	422e70 <ferror@plt+0x200a0>
  423150:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  423154:	mov	x6, x21
  423158:	mov	w5, w24
  42315c:	add	x4, x4, #0x47f
  423160:	b	423070 <ferror@plt+0x202a0>
  423164:	mov	w1, #0x7                   	// #7
  423168:	b	423288 <ferror@plt+0x204b8>
  42316c:	mov	x0, x19
  423170:	bl	4218b0 <ferror@plt+0x1eae0>
  423174:	b	4232f0 <ferror@plt+0x20520>
  423178:	cmp	w23, #0xa
  42317c:	b.ne	4231b8 <ferror@plt+0x203e8>  // b.any
  423180:	orr	w20, w20, #0x100
  423184:	b	422ce8 <ferror@plt+0x1ff18>
  423188:	mov	w20, #0x111                 	// #273
  42318c:	b	422ce8 <ferror@plt+0x1ff18>
  423190:	cmp	w26, #0x9
  423194:	b.hi	422f28 <ferror@plt+0x20158>  // b.pmore
  423198:	mov	w23, #0xa                   	// #10
  42319c:	cmp	w23, #0x10
  4231a0:	eor	w4, w4, #0x1
  4231a4:	csel	w4, w4, wzr, eq  // eq = none
  4231a8:	cbz	w4, 422f50 <ferror@plt+0x20180>
  4231ac:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  4231b0:	add	x4, x4, #0x2d0
  4231b4:	b	422cd0 <ferror@plt+0x1ff00>
  4231b8:	orr	w0, w20, #0x400
  4231bc:	cmp	w23, #0x10
  4231c0:	orr	w20, w20, #0x200
  4231c4:	csel	w20, w20, w0, eq  // eq = none
  4231c8:	b	422ce8 <ferror@plt+0x1ff18>
  4231cc:	cmp	w20, #0x2
  4231d0:	b.ne	422fdc <ferror@plt+0x2020c>  // b.any
  4231d4:	ldrb	w0, [x21]
  4231d8:	cmp	w0, #0x2b
  4231dc:	b.eq	4231e8 <ferror@plt+0x20418>  // b.none
  4231e0:	cmp	w0, #0x2d
  4231e4:	b.ne	4231ec <ferror@plt+0x2041c>  // b.any
  4231e8:	add	x21, x21, #0x1
  4231ec:	ldrb	w1, [x21]
  4231f0:	ldrb	w0, [x21]
  4231f4:	ldrh	w1, [x27, x1, lsl #1]
  4231f8:	tbnz	w1, #2, 422fa8 <ferror@plt+0x201d8>
  4231fc:	cmp	w0, #0x27
  423200:	b.ne	42320c <ferror@plt+0x2043c>  // b.any
  423204:	ldrb	w0, [x19, #1166]
  423208:	cbnz	w0, 422de8 <ferror@plt+0x20018>
  42320c:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  423210:	add	x4, x4, #0x34f
  423214:	b	422cd0 <ferror@plt+0x1ff00>
  423218:	cmp	w26, w23
  42321c:	b.cs	422efc <ferror@plt+0x2012c>  // b.hs, b.nlast
  423220:	sub	x24, x24, x21
  423224:	mov	x1, x21
  423228:	mov	x2, x24
  42322c:	mov	x0, x19
  423230:	bl	422004 <ferror@plt+0x1f234>
  423234:	mov	w20, w0
  423238:	cbnz	w0, 423254 <ferror@plt+0x20484>
  42323c:	ldrb	w0, [x19, #1161]
  423240:	cbz	w0, 423150 <ferror@plt+0x20380>
  423244:	cbz	x25, 42324c <ferror@plt+0x2047c>
  423248:	str	x21, [x25]
  42324c:	mov	w20, #0x1040                	// #4160
  423250:	movk	w20, #0x100, lsl #16
  423254:	ldrb	w0, [x19, #1138]
  423258:	and	w25, w20, #0xf0
  42325c:	cbz	w0, 4232a8 <ferror@plt+0x204d8>
  423260:	mov	x0, x19
  423264:	bl	42e24c <ferror@plt+0x2b47c>
  423268:	cbnz	w0, 4232a8 <ferror@plt+0x204d8>
  42326c:	and	w0, w20, #0x3000
  423270:	cmp	w25, #0x40
  423274:	b.ne	423280 <ferror@plt+0x204b0>  // b.any
  423278:	ldrb	w1, [x19, #1139]
  42327c:	cbnz	w1, 423164 <ferror@plt+0x20394>
  423280:	cbz	w0, 4232a8 <ferror@plt+0x204d8>
  423284:	mov	w1, #0x6                   	// #6
  423288:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  42328c:	mov	x6, x21
  423290:	mov	w5, w24
  423294:	add	x4, x4, #0x3c4
  423298:	mov	w2, w22
  42329c:	mov	x0, x19
  4232a0:	mov	w3, #0x0                   	// #0
  4232a4:	bl	42183c <ferror@plt+0x1ea6c>
  4232a8:	cmp	w25, #0x40
  4232ac:	b.ne	4232f0 <ferror@plt+0x20520>  // b.any
  4232b0:	ldrb	w0, [x19, #1139]
  4232b4:	cbz	w0, 4232f0 <ferror@plt+0x20520>
  4232b8:	ldrb	w1, [x19, #1120]
  4232bc:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x225fc>
  4232c0:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  4232c4:	add	x0, x0, #0xd9
  4232c8:	cmp	w1, #0x0
  4232cc:	add	x4, x4, #0xb1
  4232d0:	csel	x4, x4, x0, ne  // ne = any
  4232d4:	ldrb	w0, [x19, #1152]
  4232d8:	mov	w2, w22
  4232dc:	mov	w3, #0x0                   	// #0
  4232e0:	mov	w1, #0x7                   	// #7
  4232e4:	cbz	w0, 42316c <ferror@plt+0x2039c>
  4232e8:	mov	x0, x19
  4232ec:	bl	42183c <ferror@plt+0x1ea6c>
  4232f0:	orr	w20, w20, #0x1
  4232f4:	b	422e70 <ferror@plt+0x200a0>
  4232f8:	cmp	w23, #0xa
  4232fc:	b.ls	422dfc <ferror@plt+0x2002c>  // b.plast
  423300:	cmp	w23, #0x10
  423304:	b.ne	422dfc <ferror@plt+0x2002c>  // b.any
  423308:	and	w0, w0, #0xffffffdf
  42330c:	cmp	w0, #0x50
  423310:	b	422dcc <ferror@plt+0x1fffc>
  423314:	stp	x29, x30, [sp, #-128]!
  423318:	mov	w10, w2
  42331c:	mov	x7, x0
  423320:	mov	x29, sp
  423324:	stp	x19, x20, [sp, #16]
  423328:	ubfx	x0, x10, #12, #1
  42332c:	ldr	w11, [x1, #8]
  423330:	stp	xzr, xzr, [x8]
  423334:	mov	x19, x8
  423338:	cmp	w11, #0x1
  42333c:	strb	w0, [x8, #16]
  423340:	strb	wzr, [x8, #17]
  423344:	ldr	x0, [x1, #16]
  423348:	b.ne	423368 <ferror@plt+0x20598>  // b.any
  42334c:	ldrb	w0, [x0]
  423350:	sub	w0, w0, #0x30
  423354:	sxtw	x0, w0
  423358:	str	x0, [x8, #8]
  42335c:	ldp	x19, x20, [sp, #16]
  423360:	ldp	x29, x30, [sp], #128
  423364:	ret
  423368:	and	w1, w2, #0xf00
  42336c:	cmp	w1, #0x400
  423370:	ldr	x18, [x7, #1208]
  423374:	b.ne	4234dc <ferror@plt+0x2070c>  // b.any
  423378:	add	x9, x0, #0x1
  42337c:	mov	w6, #0x8                   	// #8
  423380:	neg	w5, w18
  423384:	mov	x1, #0xffffffffffffffff    	// #-1
  423388:	cmp	x18, #0x40
  42338c:	mov	w15, w6
  423390:	lsr	x5, x1, x5
  423394:	csel	x1, x5, x1, cc  // cc = lo, ul, last
  423398:	mov	x5, #0x1                   	// #1
  42339c:	adrp	x13, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4233a0:	sub	x5, x5, w6, uxtw
  4233a4:	adrp	x14, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4233a8:	add	x5, x5, x1
  4233ac:	add	x11, x0, w11, uxtw
  4233b0:	add	x13, x13, #0xb08
  4233b4:	add	x14, x14, #0x790
  4233b8:	mov	w12, #0x0                   	// #0
  4233bc:	udiv	x5, x5, x15
  4233c0:	add	x5, x5, #0x1
  4233c4:	cmp	x9, x11
  4233c8:	b.cs	423558 <ferror@plt+0x20788>  // b.hs, b.nlast
  4233cc:	ldrb	w1, [x9]
  4233d0:	ldrb	w0, [x9]
  4233d4:	ldrh	w1, [x13, x1, lsl #1]
  4233d8:	tbnz	w1, #2, 4233e8 <ferror@plt+0x20618>
  4233dc:	cmp	w6, #0x10
  4233e0:	b.ne	423510 <ferror@plt+0x20740>  // b.any
  4233e4:	tbz	w1, #8, 423510 <ferror@plt+0x20740>
  4233e8:	ldr	x4, [x19, #8]
  4233ec:	ldrb	w0, [x14, w0, sxtw]
  4233f0:	cmp	x4, x5
  4233f4:	b.cc	423528 <ferror@plt+0x20758>  // b.lo, b.ul, b.last
  4233f8:	ldrb	w17, [x19, #16]
  4233fc:	cmp	w6, #0x2
  423400:	ldr	x1, [x19]
  423404:	b.eq	423534 <ferror@plt+0x20764>  // b.none
  423408:	cmp	w6, #0x10
  42340c:	cset	w5, eq  // eq = none
  423410:	add	w5, w5, #0x3
  423414:	mov	w2, #0x40                  	// #64
  423418:	sub	w2, w2, w5
  42341c:	lsl	x8, x4, x5
  423420:	cmp	w6, #0xa
  423424:	lsl	x5, x1, x5
  423428:	lsr	x3, x4, x2
  42342c:	orr	x5, x5, x3
  423430:	b.ne	42353c <ferror@plt+0x2076c>  // b.any
  423434:	lsr	x3, x4, #63
  423438:	lsl	x16, x4, #1
  42343c:	add	x3, x3, x1, lsl #1
  423440:	adds	x4, x0, x16
  423444:	cinc	x3, x3, cs  // cs = hs, nlast
  423448:	adds	x20, x8, x4
  42344c:	cinc	x3, x3, cs  // cs = hs, nlast
  423450:	adds	x5, x5, x3
  423454:	b.cs	423548 <ferror@plt+0x20778>  // b.hs, b.nlast
  423458:	lsr	x1, x1, x2
  42345c:	cmp	x1, #0x0
  423460:	cset	w0, ne  // ne = any
  423464:	stp	x5, x20, [sp, #104]
  423468:	add	x8, sp, #0x40
  42346c:	strb	w17, [sp, #120]
  423470:	strb	w0, [sp, #121]
  423474:	ldp	x0, x1, [sp, #104]
  423478:	stp	x0, x1, [sp, #32]
  42347c:	ldr	x0, [sp, #120]
  423480:	mov	x1, x18
  423484:	str	x0, [sp, #48]
  423488:	add	x0, sp, #0x20
  42348c:	bl	42211c <ferror@plt+0x1f34c>
  423490:	ldp	x1, x0, [sp, #64]
  423494:	stp	x1, x0, [sp, #104]
  423498:	ldr	x0, [sp, #80]
  42349c:	str	x0, [sp, #120]
  4234a0:	ldr	x2, [sp, #112]
  4234a4:	ubfx	w0, w0, #8, #8
  4234a8:	cmp	x20, x2
  4234ac:	b.ne	423550 <ferror@plt+0x20780>  // b.any
  4234b0:	cmp	x5, x1
  4234b4:	csinc	w0, w0, wzr, eq  // eq = none
  4234b8:	strb	w0, [sp, #121]
  4234bc:	mov	x5, #0x0                   	// #0
  4234c0:	ldp	x0, x1, [sp, #104]
  4234c4:	stp	x0, x1, [x19]
  4234c8:	ldr	x0, [sp, #120]
  4234cc:	str	x0, [x19, #16]
  4234d0:	ubfx	w0, w0, #8, #8
  4234d4:	orr	w12, w0, w12
  4234d8:	b	423520 <ferror@plt+0x20750>
  4234dc:	cmp	w1, #0x200
  4234e0:	b.ne	4234f0 <ferror@plt+0x20720>  // b.any
  4234e4:	add	x9, x0, #0x2
  4234e8:	mov	w6, #0x10                  	// #16
  4234ec:	b	423380 <ferror@plt+0x205b0>
  4234f0:	cmp	w1, #0x800
  4234f4:	b.ne	423504 <ferror@plt+0x20734>  // b.any
  4234f8:	add	x9, x0, #0x2
  4234fc:	mov	w6, #0x2                   	// #2
  423500:	b	423380 <ferror@plt+0x205b0>
  423504:	mov	x9, x0
  423508:	mov	w6, #0xa                   	// #10
  42350c:	b	423380 <ferror@plt+0x205b0>
  423510:	cmp	w0, #0x27
  423514:	b.ne	423558 <ferror@plt+0x20788>  // b.any
  423518:	ldrb	w0, [x7, #1166]
  42351c:	cbz	w0, 423558 <ferror@plt+0x20788>
  423520:	add	x9, x9, #0x1
  423524:	b	4233c4 <ferror@plt+0x205f4>
  423528:	madd	x4, x15, x4, x0
  42352c:	str	x4, [x19, #8]
  423530:	b	423520 <ferror@plt+0x20750>
  423534:	mov	w5, #0x1                   	// #1
  423538:	b	423414 <ferror@plt+0x20644>
  42353c:	mov	x16, #0x0                   	// #0
  423540:	mov	x3, #0x0                   	// #0
  423544:	b	423440 <ferror@plt+0x20670>
  423548:	mov	w0, #0x1                   	// #1
  42354c:	b	423464 <ferror@plt+0x20694>
  423550:	mov	w0, #0x1                   	// #1
  423554:	b	4234b8 <ferror@plt+0x206e8>
  423558:	cbz	w12, 423578 <ferror@plt+0x207a8>
  42355c:	tbnz	w10, #24, 423578 <ferror@plt+0x207a8>
  423560:	mov	x0, x7
  423564:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  423568:	mov	w1, #0x2                   	// #2
  42356c:	add	x2, x2, #0x4d1
  423570:	bl	421610 <ferror@plt+0x1e840>
  423574:	b	42335c <ferror@plt+0x2058c>
  423578:	ldrb	w0, [x19, #16]
  42357c:	cbnz	w0, 42335c <ferror@plt+0x2058c>
  423580:	ldrb	w0, [x7, #1160]
  423584:	cbz	w0, 423590 <ferror@plt+0x207c0>
  423588:	ldrb	w0, [x7, #16]
  42358c:	cbnz	w0, 42335c <ferror@plt+0x2058c>
  423590:	ldp	x0, x1, [x19]
  423594:	mov	x2, x18
  423598:	bl	422414 <ferror@plt+0x1f644>
  42359c:	tst	w0, #0xff
  4235a0:	b.ne	42335c <ferror@plt+0x2058c>  // b.any
  4235a4:	cmp	w6, #0xa
  4235a8:	b.ne	4235cc <ferror@plt+0x207fc>  // b.any
  4235ac:	ldrb	w0, [x7, #1152]
  4235b0:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  4235b4:	add	x2, x2, #0x4fc
  4235b8:	cmp	w0, #0x0
  4235bc:	mov	x0, x7
  4235c0:	cset	w1, ne  // ne = any
  4235c4:	lsl	w1, w1, #1
  4235c8:	bl	421610 <ferror@plt+0x1e840>
  4235cc:	mov	w0, #0x1                   	// #1
  4235d0:	strb	w0, [x19, #16]
  4235d4:	b	42335c <ferror@plt+0x2058c>
  4235d8:	stp	x29, x30, [sp, #-48]!
  4235dc:	mov	x1, #0xcccccccccccccccc    	// #-3689348814741910324
  4235e0:	movk	x1, #0xcccd
  4235e4:	mov	x29, sp
  4235e8:	stp	x19, x20, [sp, #16]
  4235ec:	mov	x20, x0
  4235f0:	ldr	x0, [x0, #1096]
  4235f4:	str	x21, [sp, #32]
  4235f8:	ldr	x21, [x20, #1104]
  4235fc:	sub	x21, x21, x0
  423600:	asr	x19, x21, #3
  423604:	mul	x19, x19, x1
  423608:	mov	x1, #0x50                  	// #80
  42360c:	add	x19, x19, #0xa
  423610:	mul	x19, x19, x1
  423614:	mov	x1, x19
  423618:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  42361c:	add	x19, x0, x19
  423620:	str	x0, [x20, #1096]
  423624:	str	x19, [x20, #1104]
  423628:	add	x0, x0, x21
  42362c:	ldp	x19, x20, [sp, #16]
  423630:	ldr	x21, [sp, #32]
  423634:	ldp	x29, x30, [sp], #48
  423638:	ret
  42363c:	stp	x29, x30, [sp, #-400]!
  423640:	mov	x29, sp
  423644:	stp	x27, x28, [sp, #80]
  423648:	mov	x28, x0
  42364c:	and	w0, w1, #0xff
  423650:	stp	x19, x20, [sp, #16]
  423654:	ldr	x19, [x28, #1096]
  423658:	stp	x21, x22, [sp, #32]
  42365c:	mov	w21, #0x1                   	// #1
  423660:	stp	x23, x24, [sp, #48]
  423664:	stp	x25, x26, [sp, #64]
  423668:	str	wzr, [x28, #28]
  42366c:	str	xzr, [x28, #432]
  423670:	stp	wzr, wzr, [sp, #128]
  423674:	str	w0, [sp, #136]
  423678:	mov	w0, #0x16                  	// #22
  42367c:	str	w0, [x19, #36]
  423680:	str	wzr, [sp, #276]
  423684:	ldr	w0, [sp, #128]
  423688:	add	x1, sp, #0x114
  42368c:	add	w0, w0, #0x1
  423690:	str	w0, [sp, #128]
  423694:	mov	x0, x28
  423698:	bl	430a0c <ferror@plt+0x2dc3c>
  42369c:	ldrb	w20, [x0, #4]
  4236a0:	mov	x23, x0
  4236a4:	ldr	w22, [sp, #276]
  4236a8:	cmp	w20, #0x5
  4236ac:	b.eq	423c34 <ferror@plt+0x20e64>  // b.none
  4236b0:	b.hi	423700 <ferror@plt+0x20930>  // b.pmore
  4236b4:	cmp	w20, #0x1
  4236b8:	b.eq	423bc4 <ferror@plt+0x20df4>  // b.none
  4236bc:	cmp	w20, #0x4
  4236c0:	b.eq	423c24 <ferror@plt+0x20e54>  // b.none
  4236c4:	sub	w0, w20, #0x1
  4236c8:	cmp	w0, #0x19
  4236cc:	b.ls	423bd4 <ferror@plt+0x20e04>  // b.plast
  4236d0:	mov	x1, x23
  4236d4:	mov	x0, x28
  4236d8:	bl	42947c <ferror@plt+0x266ac>
  4236dc:	mov	x5, x0
  4236e0:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  4236e4:	add	x4, x4, #0x70d
  4236e8:	mov	w2, w22
  4236ec:	mov	w3, #0x0                   	// #0
  4236f0:	mov	w1, #0x3                   	// #3
  4236f4:	mov	x0, x28
  4236f8:	bl	4217cc <ferror@plt+0x1e9fc>
  4236fc:	b	423c1c <ferror@plt+0x20e4c>
  423700:	cmp	w20, #0x35
  423704:	b.eq	423714 <ferror@plt+0x20944>  // b.none
  423708:	b.hi	423764 <ferror@plt+0x20994>  // b.pmore
  42370c:	cmp	w20, #0x25
  423710:	b.ne	4236c4 <ferror@plt+0x208f4>  // b.any
  423714:	cbnz	w21, 423778 <ferror@plt+0x209a8>
  423718:	mov	x1, x23
  42371c:	mov	x0, x28
  423720:	bl	42947c <ferror@plt+0x266ac>
  423724:	mov	x5, x0
  423728:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  42372c:	mov	w2, w22
  423730:	add	x4, x4, #0x533
  423734:	mov	x0, x28
  423738:	mov	w3, #0x0                   	// #0
  42373c:	mov	w1, #0x3                   	// #3
  423740:	bl	4217cc <ferror@plt+0x1e9fc>
  423744:	mov	w0, w21
  423748:	ldp	x19, x20, [sp, #16]
  42374c:	ldp	x21, x22, [sp, #32]
  423750:	ldp	x23, x24, [sp, #48]
  423754:	ldp	x25, x26, [sp, #64]
  423758:	ldp	x27, x28, [sp, #80]
  42375c:	ldp	x29, x30, [sp], #400
  423760:	ret
  423764:	sub	w0, w20, #0x37
  423768:	and	w0, w0, #0xff
  42376c:	cmp	w0, #0x5
  423770:	b.ls	423714 <ferror@plt+0x20944>  // b.plast
  423774:	b	4236c4 <ferror@plt+0x208f4>
  423778:	str	wzr, [sp, #328]
  42377c:	cmp	w20, #0x37
  423780:	b.eq	423850 <ferror@plt+0x20a80>  // b.none
  423784:	b.hi	4237b0 <ferror@plt+0x209e0>  // b.pmore
  423788:	cmp	w20, #0x25
  42378c:	b.eq	423b5c <ferror@plt+0x20d8c>  // b.none
  423790:	cmp	w20, #0x35
  423794:	b.eq	4238f0 <ferror@plt+0x20b20>  // b.none
  423798:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  42379c:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x225fc>
  4237a0:	add	x2, x2, #0x6ee
  4237a4:	add	x0, x0, #0x6f9
  4237a8:	mov	w1, #0x4ad                 	// #1197
  4237ac:	bl	402de0 <ferror@plt+0x10>
  4237b0:	sub	w20, w20, #0x38
  4237b4:	and	w20, w20, #0xff
  4237b8:	cmp	w20, #0x4
  4237bc:	b.hi	423798 <ferror@plt+0x209c8>  // b.pmore
  4237c0:	add	x2, sp, #0x130
  4237c4:	mov	x1, x23
  4237c8:	add	x3, sp, #0x148
  4237cc:	mov	x0, x28
  4237d0:	bl	41db2c <ferror@plt+0x1ad5c>
  4237d4:	mov	w1, w0
  4237d8:	ldr	w2, [sp, #328]
  4237dc:	cbnz	w2, 423b1c <ferror@plt+0x20d4c>
  4237e0:	tbz	w0, #31, 423b1c <ferror@plt+0x20d4c>
  4237e4:	orr	x1, x1, #0xffffffff00000000
  4237e8:	mov	x0, #0xffffffffffffffff    	// #-1
  4237ec:	stp	x0, x1, [sp, #352]
  4237f0:	add	x8, sp, #0xf0
  4237f4:	ldp	x0, x1, [sp, #352]
  4237f8:	stp	x0, x1, [sp, #208]
  4237fc:	ldr	x1, [x28, #1208]
  423800:	strh	wzr, [sp, #368]
  423804:	ldr	x0, [sp, #368]
  423808:	str	x0, [sp, #224]
  42380c:	add	x0, sp, #0xd0
  423810:	bl	42211c <ferror@plt+0x1f34c>
  423814:	ldp	x2, x0, [sp, #240]
  423818:	stp	x2, x0, [sp, #352]
  42381c:	ldr	x0, [sp, #256]
  423820:	str	x0, [sp, #368]
  423824:	ldr	x1, [sp, #360]
  423828:	ubfx	w0, w0, #8, #8
  42382c:	ldr	w3, [sp, #328]
  423830:	strb	w0, [sp, #369]
  423834:	cmp	w3, #0x0
  423838:	stp	x2, x1, [sp, #352]
  42383c:	cset	w3, ne  // ne = any
  423840:	strb	w3, [sp, #368]
  423844:	ldr	x4, [sp, #368]
  423848:	str	x4, [sp, #392]
  42384c:	b	4239ac <ferror@plt+0x20bdc>
  423850:	mov	w3, w22
  423854:	mov	x1, x23
  423858:	mov	x0, x28
  42385c:	mov	x2, #0x0                   	// #0
  423860:	bl	422bd8 <ferror@plt+0x1fe08>
  423864:	str	w0, [sp, #304]
  423868:	tbz	w0, #24, 423880 <ferror@plt+0x20ab0>
  42386c:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  423870:	mov	x0, x28
  423874:	add	x2, x2, #0x55d
  423878:	mov	w1, #0x3                   	// #3
  42387c:	bl	421610 <ferror@plt+0x1e840>
  423880:	ldr	w2, [sp, #304]
  423884:	and	w0, w2, #0xf
  423888:	cmp	w0, #0x1
  42388c:	b.eq	4238c0 <ferror@plt+0x20af0>  // b.none
  423890:	cmp	w0, #0x2
  423894:	b.ne	4238b4 <ferror@plt+0x20ae4>  // b.any
  423898:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  42389c:	add	x4, x4, #0x58d
  4238a0:	mov	w2, w22
  4238a4:	mov	x0, x28
  4238a8:	mov	w3, #0x0                   	// #0
  4238ac:	mov	w1, #0x3                   	// #3
  4238b0:	bl	4217cc <ferror@plt+0x1e9fc>
  4238b4:	mov	w0, #0x0                   	// #0
  4238b8:	mov	x1, #0x0                   	// #0
  4238bc:	b	423b20 <ferror@plt+0x20d50>
  4238c0:	tbnz	w2, #13, 4238e4 <ferror@plt+0x20b14>
  4238c4:	add	x8, sp, #0x178
  4238c8:	mov	x1, x23
  4238cc:	mov	x0, x28
  4238d0:	bl	423314 <ferror@plt+0x20544>
  4238d4:	ldrb	w3, [sp, #392]
  4238d8:	ldrb	w0, [sp, #393]
  4238dc:	ldp	x2, x1, [sp, #376]
  4238e0:	b	4239ac <ferror@plt+0x20bdc>
  4238e4:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  4238e8:	add	x4, x4, #0x5ba
  4238ec:	b	4238a0 <ferror@plt+0x20ad0>
  4238f0:	ldr	x1, [x23, #8]
  4238f4:	ldr	x0, [x28, #1248]
  4238f8:	cmp	x1, x0
  4238fc:	b.ne	423abc <ferror@plt+0x20cec>  // b.any
  423900:	ldrb	w0, [x28, #24]
  423904:	ldr	x21, [x28, #136]
  423908:	add	w0, w0, #0x1
  42390c:	strb	w0, [x28, #24]
  423910:	mov	x0, x28
  423914:	bl	430978 <ferror@plt+0x2dba8>
  423918:	mov	x20, x0
  42391c:	ldrb	w0, [x0, #4]
  423920:	cmp	w0, #0x14
  423924:	b.ne	4239d4 <ferror@plt+0x20c04>  // b.any
  423928:	mov	x0, x28
  42392c:	bl	430978 <ferror@plt+0x2dba8>
  423930:	mov	x20, x0
  423934:	mov	w0, #0x1                   	// #1
  423938:	ldrb	w1, [x20, #4]
  42393c:	cmp	w1, #0x35
  423940:	b.ne	423a50 <ferror@plt+0x20c80>  // b.any
  423944:	ldr	x20, [x20, #8]
  423948:	cbz	w0, 4239dc <ferror@plt+0x20c0c>
  42394c:	mov	x0, x28
  423950:	bl	430978 <ferror@plt+0x2dba8>
  423954:	ldrb	w0, [x0, #4]
  423958:	cmp	w0, #0x15
  42395c:	b.eq	4239dc <ferror@plt+0x20c0c>  // b.none
  423960:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  423964:	mov	x0, x28
  423968:	add	x2, x2, #0x5e6
  42396c:	mov	w1, #0x3                   	// #3
  423970:	bl	421610 <ferror@plt+0x1e840>
  423974:	mov	x20, #0x0                   	// #0
  423978:	ldrb	w0, [x28, #24]
  42397c:	sub	w0, w0, #0x1
  423980:	strb	w0, [x28, #24]
  423984:	cbz	x20, 423ab4 <ferror@plt+0x20ce4>
  423988:	ldrb	w0, [x20, #18]
  42398c:	tbz	w0, #1, 423ab4 <ferror@plt+0x20ce4>
  423990:	ldrh	w1, [x20, #18]
  423994:	eor	x1, x1, #0x100
  423998:	ubfx	w1, w1, #8, #1
  42399c:	and	x1, x1, #0xff
  4239a0:	mov	w0, #0x0                   	// #0
  4239a4:	mov	w3, #0x0                   	// #0
  4239a8:	mov	x2, #0x0                   	// #0
  4239ac:	strb	w0, [sp, #393]
  4239b0:	add	x0, sp, #0x250
  4239b4:	stp	x2, x1, [sp, #376]
  4239b8:	mov	w21, #0x0                   	// #0
  4239bc:	strb	w3, [sp, #392]
  4239c0:	ldp	x0, x1, [x0, #-216]
  4239c4:	stp	x0, x1, [x19, #8]
  4239c8:	ldr	x0, [sp, #392]
  4239cc:	str	x0, [x19, #24]
  4239d0:	b	423684 <ferror@plt+0x208b4>
  4239d4:	mov	w0, #0x0                   	// #0
  4239d8:	b	423938 <ferror@plt+0x20b68>
  4239dc:	cbz	x20, 423974 <ferror@plt+0x20ba4>
  4239e0:	ldr	x0, [x28, #136]
  4239e4:	cmp	x21, x0
  4239e8:	b.ne	4239f8 <ferror@plt+0x20c28>  // b.any
  4239ec:	add	x0, x28, #0x50
  4239f0:	cmp	x21, x0
  4239f4:	b.eq	423a14 <ferror@plt+0x20c44>  // b.none
  4239f8:	ldrb	w0, [x28, #1150]
  4239fc:	cbz	w0, 423a14 <ferror@plt+0x20c44>
  423a00:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  423a04:	mov	x0, x28
  423a08:	add	x2, x2, #0x65b
  423a0c:	mov	w1, #0x18                  	// #24
  423a10:	bl	4216ec <ferror@plt+0x1e91c>
  423a14:	ldrb	w0, [x20, #18]
  423a18:	and	w0, w0, #0x3
  423a1c:	cmp	w0, #0x2
  423a20:	b.ne	423a34 <ferror@plt+0x20c64>  // b.any
  423a24:	ldr	x1, [x20, #24]
  423a28:	ldrb	w0, [x1, #19]
  423a2c:	orr	w0, w0, #0x20
  423a30:	strb	w0, [x1, #19]
  423a34:	ldrh	w0, [x20, #18]
  423a38:	tbnz	w0, #7, 423a48 <ferror@plt+0x20c78>
  423a3c:	mov	x1, x20
  423a40:	mov	x0, x28
  423a44:	bl	42f154 <ferror@plt+0x2c384>
  423a48:	str	x20, [x28, #432]
  423a4c:	b	423978 <ferror@plt+0x20ba8>
  423a50:	mov	x0, x28
  423a54:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  423a58:	mov	w1, #0x3                   	// #3
  423a5c:	add	x2, x2, #0x602
  423a60:	bl	421610 <ferror@plt+0x1e840>
  423a64:	ldrh	w0, [x20, #6]
  423a68:	tbz	w0, #4, 423974 <ferror@plt+0x20ba4>
  423a6c:	ldrb	w0, [x20, #4]
  423a70:	mov	x1, x20
  423a74:	strb	w0, [sp, #380]
  423a78:	mov	x0, x28
  423a7c:	strh	wzr, [sp, #382]
  423a80:	bl	42947c <ferror@plt+0x266ac>
  423a84:	add	x1, sp, #0x178
  423a88:	mov	x20, x0
  423a8c:	mov	x0, x28
  423a90:	bl	42947c <ferror@plt+0x266ac>
  423a94:	mov	x3, x20
  423a98:	mov	x4, x0
  423a9c:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  423aa0:	mov	x0, x28
  423aa4:	add	x2, x2, #0x62c
  423aa8:	mov	w1, #0x3                   	// #3
  423aac:	bl	421610 <ferror@plt+0x1e840>
  423ab0:	b	423974 <ferror@plt+0x20ba4>
  423ab4:	mov	w1, #0x0                   	// #0
  423ab8:	b	42399c <ferror@plt+0x20bcc>
  423abc:	ldr	x0, [x28, #1288]
  423ac0:	cmp	x1, x0
  423ac4:	b.ne	423adc <ferror@plt+0x20d0c>  // b.any
  423ac8:	add	x8, sp, #0x178
  423acc:	mov	w1, #0x0                   	// #0
  423ad0:	mov	x0, x28
  423ad4:	bl	422280 <ferror@plt+0x1f4b0>
  423ad8:	b	4238d4 <ferror@plt+0x20b04>
  423adc:	ldr	x0, [x28, #1296]
  423ae0:	cmp	x1, x0
  423ae4:	b.ne	423af4 <ferror@plt+0x20d24>  // b.any
  423ae8:	add	x8, sp, #0x178
  423aec:	mov	w1, #0x1                   	// #1
  423af0:	b	423ad0 <ferror@plt+0x20d00>
  423af4:	ldrb	w0, [x28, #1120]
  423af8:	cbz	w0, 423b28 <ferror@plt+0x20d58>
  423afc:	ldr	x0, [x28, #1256]
  423b00:	cmp	x1, x0
  423b04:	b.eq	423b14 <ferror@plt+0x20d44>  // b.none
  423b08:	ldr	x2, [x28, #1264]
  423b0c:	cmp	x1, x2
  423b10:	b.ne	423b28 <ferror@plt+0x20d58>  // b.any
  423b14:	cmp	x1, x0
  423b18:	cset	x1, eq  // eq = none
  423b1c:	mov	w0, #0x0                   	// #0
  423b20:	mov	x2, #0x0                   	// #0
  423b24:	b	42382c <ferror@plt+0x20a5c>
  423b28:	ldrb	w0, [x28, #1149]
  423b2c:	cbz	w0, 4238b8 <ferror@plt+0x20ae8>
  423b30:	ldr	w0, [x28, #28]
  423b34:	cbnz	w0, 4238b4 <ferror@plt+0x20ae4>
  423b38:	ldr	x5, [x1]
  423b3c:	mov	w2, w22
  423b40:	mov	x0, x28
  423b44:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  423b48:	mov	w3, #0x0                   	// #0
  423b4c:	add	x4, x4, #0x685
  423b50:	mov	w1, #0xd                   	// #13
  423b54:	bl	42183c <ferror@plt+0x1ea6c>
  423b58:	b	4238b4 <ferror@plt+0x20ae4>
  423b5c:	ldrb	w0, [x28, #18]
  423b60:	cbnz	w0, 423b88 <ferror@plt+0x20db8>
  423b64:	ldrb	w0, [x28, #1154]
  423b68:	cbz	w0, 423b9c <ferror@plt+0x20dcc>
  423b6c:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  423b70:	mov	w2, w22
  423b74:	add	x4, x4, #0x6a9
  423b78:	mov	x0, x28
  423b7c:	mov	w3, #0x0                   	// #0
  423b80:	mov	w1, #0x2                   	// #2
  423b84:	bl	4217cc <ferror@plt+0x1e9fc>
  423b88:	add	x1, sp, #0x130
  423b8c:	mov	x0, x28
  423b90:	bl	420798 <ferror@plt+0x1d9c8>
  423b94:	ldr	w1, [sp, #304]
  423b98:	b	423b1c <ferror@plt+0x20d4c>
  423b9c:	ldrb	w0, [x28, #1132]
  423ba0:	cbz	w0, 423b88 <ferror@plt+0x20db8>
  423ba4:	mov	w2, w22
  423ba8:	mov	x0, x28
  423bac:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  423bb0:	mov	w3, #0x0                   	// #0
  423bb4:	add	x4, x4, #0x6c8
  423bb8:	mov	w1, #0x1                   	// #1
  423bbc:	bl	42183c <ferror@plt+0x1ea6c>
  423bc0:	b	423b88 <ferror@plt+0x20db8>
  423bc4:	ldr	w0, [sp, #128]
  423bc8:	cmp	w0, #0x1
  423bcc:	cset	w0, eq  // eq = none
  423bd0:	str	w0, [sp, #132]
  423bd4:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x215fc>
  423bd8:	add	x0, x0, #0xffe
  423bdc:	str	x0, [sp, #112]
  423be0:	add	x0, x0, w20, sxtw #1
  423be4:	sxtw	x2, w20
  423be8:	ldrb	w1, [x0, #1]
  423bec:	tbz	w1, #0, 423c40 <ferror@plt+0x20e70>
  423bf0:	cbz	w21, 423718 <ferror@plt+0x20948>
  423bf4:	ldr	w0, [x19, #36]
  423bf8:	sub	w0, w0, #0x1
  423bfc:	cmp	w0, #0x1b
  423c00:	b.ls	423cf4 <ferror@plt+0x20f24>  // b.plast
  423c04:	ldr	w3, [x19, #36]
  423c08:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  423c0c:	mov	x0, x28
  423c10:	add	x2, x2, #0x7c3
  423c14:	mov	w1, #0x4                   	// #4
  423c18:	bl	421610 <ferror@plt+0x1e840>
  423c1c:	mov	w21, #0x0                   	// #0
  423c20:	b	423744 <ferror@plt+0x20974>
  423c24:	cmp	w21, #0x0
  423c28:	mov	w0, #0x1b                  	// #27
  423c2c:	csel	w20, w20, w0, eq  // eq = none
  423c30:	b	423bd4 <ferror@plt+0x20e04>
  423c34:	cmp	w21, #0x0
  423c38:	mov	w0, #0x1c                  	// #28
  423c3c:	b	423c2c <ferror@plt+0x20e5c>
  423c40:	cbz	w21, 423bf4 <ferror@plt+0x20e24>
  423c44:	ldr	w0, [x19, #36]
  423c48:	cmp	w20, #0x15
  423c4c:	b.ne	423c6c <ferror@plt+0x20e9c>  // b.any
  423c50:	cmp	w0, #0x14
  423c54:	b.ne	423ca4 <ferror@plt+0x20ed4>  // b.any
  423c58:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  423c5c:	add	x4, x4, #0x741
  423c60:	mov	w2, w22
  423c64:	mov	w3, #0x0                   	// #0
  423c68:	b	42496c <ferror@plt+0x21b9c>
  423c6c:	cmp	w20, #0x16
  423c70:	b.ne	423ca4 <ferror@plt+0x20ed4>  // b.any
  423c74:	cmp	w0, #0x16
  423c78:	b.ne	423ca4 <ferror@plt+0x20ed4>  // b.any
  423c7c:	ldr	w1, [sp, #136]
  423c80:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x225fc>
  423c84:	adrp	x5, 467000 <_obstack_memory_used@@Base+0x225fc>
  423c88:	add	x0, x0, #0x52d
  423c8c:	add	x5, x5, #0xad
  423c90:	cmp	w1, #0x0
  423c94:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  423c98:	csel	x5, x5, x0, ne  // ne = any
  423c9c:	add	x4, x4, #0x768
  423ca0:	b	4236e8 <ferror@plt+0x20918>
  423ca4:	and	w0, w0, #0xfffffffd
  423ca8:	cmp	w0, #0x14
  423cac:	b.eq	423ccc <ferror@plt+0x20efc>  // b.none
  423cb0:	ldr	x1, [x19]
  423cb4:	mov	x0, x28
  423cb8:	bl	42947c <ferror@plt+0x266ac>
  423cbc:	mov	x5, x0
  423cc0:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  423cc4:	add	x4, x4, #0x77e
  423cc8:	b	4236e8 <ferror@plt+0x20918>
  423ccc:	sub	w0, w20, #0x15
  423cd0:	cmp	w0, #0x1
  423cd4:	b.ls	423bf4 <ferror@plt+0x20e24>  // b.plast
  423cd8:	mov	x1, x23
  423cdc:	mov	x0, x28
  423ce0:	bl	42947c <ferror@plt+0x266ac>
  423ce4:	mov	x5, x0
  423ce8:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  423cec:	add	x4, x4, #0x7a1
  423cf0:	b	4236e8 <ferror@plt+0x20918>
  423cf4:	cmp	w20, #0x14
  423cf8:	b.eq	424a8c <ferror@plt+0x21cbc>  // b.none
  423cfc:	lsl	x0, x2, #1
  423d00:	ubfx	x1, x1, #1, #1
  423d04:	ldr	x2, [sp, #112]
  423d08:	ldrb	w0, [x2, x0]
  423d0c:	sub	w0, w0, w1
  423d10:	str	w0, [sp, #140]
  423d14:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x225fc>
  423d18:	add	x0, x0, #0x810
  423d1c:	str	x0, [sp, #144]
  423d20:	ldrsw	x0, [x19, #36]
  423d24:	ldr	x2, [sp, #112]
  423d28:	lsl	x1, x0, #1
  423d2c:	add	x0, x2, x0, lsl #1
  423d30:	ldrb	w1, [x2, x1]
  423d34:	ldr	w2, [sp, #140]
  423d38:	cmp	w2, w1
  423d3c:	b.cs	424a2c <ferror@plt+0x21c5c>  // b.hs, b.nlast
  423d40:	ldrb	w1, [x28, #1141]
  423d44:	cbz	w1, 423da8 <ferror@plt+0x20fd8>
  423d48:	ldrb	w0, [x0, #1]
  423d4c:	tbz	w0, #2, 423da8 <ferror@plt+0x20fd8>
  423d50:	ldrb	w0, [x19, #24]
  423d54:	ldurb	w1, [x19, #-16]
  423d58:	cmp	w1, w0
  423d5c:	b.eq	423da8 <ferror@plt+0x20fd8>  // b.none
  423d60:	ldr	x2, [x28, #1208]
  423d64:	cbz	w0, 423dd8 <ferror@plt+0x21008>
  423d68:	ldp	x0, x1, [x19, #-32]
  423d6c:	bl	422414 <ferror@plt+0x1f644>
  423d70:	tst	w0, #0xff
  423d74:	b.ne	423da8 <ferror@plt+0x20fd8>  // b.any
  423d78:	ldr	x1, [x19]
  423d7c:	mov	x0, x28
  423d80:	ldur	w24, [x19, #-8]
  423d84:	bl	42947c <ferror@plt+0x266ac>
  423d88:	mov	x5, x0
  423d8c:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  423d90:	add	x4, x4, #0x7dc
  423d94:	mov	w2, w24
  423d98:	mov	x0, x28
  423d9c:	mov	w3, #0x0                   	// #0
  423da0:	mov	w1, #0x0                   	// #0
  423da4:	bl	4217cc <ferror@plt+0x1e9fc>
  423da8:	ldr	w0, [x19, #36]
  423dac:	str	w0, [sp, #96]
  423db0:	mov	w0, w0
  423db4:	sub	w1, w0, #0x1
  423db8:	cmp	w1, #0x1b
  423dbc:	b.hi	423c04 <ferror@plt+0x20e34>  // b.pmore
  423dc0:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x215fc>
  423dc4:	add	x0, x0, #0xfb8
  423dc8:	ldrh	w0, [x0, w1, uxtw #1]
  423dcc:	adr	x1, 423dd8 <ferror@plt+0x21008>
  423dd0:	add	x0, x1, w0, sxth #2
  423dd4:	br	x0
  423dd8:	ldp	x0, x1, [x19, #8]
  423ddc:	bl	422414 <ferror@plt+0x1f644>
  423de0:	tst	w0, #0xff
  423de4:	b.ne	423da8 <ferror@plt+0x20fd8>  // b.any
  423de8:	ldr	x1, [x19]
  423dec:	mov	x0, x28
  423df0:	ldr	w24, [x19, #32]
  423df4:	bl	42947c <ferror@plt+0x266ac>
  423df8:	mov	x5, x0
  423dfc:	ldr	x4, [sp, #144]
  423e00:	b	423d94 <ferror@plt+0x20fc4>
  423e04:	ldp	x0, x1, [x19, #8]
  423e08:	stp	x0, x1, [sp, #352]
  423e0c:	ldr	w1, [sp, #96]
  423e10:	ldr	x0, [x19, #24]
  423e14:	str	x0, [sp, #368]
  423e18:	ldrb	w26, [x19, #24]
  423e1c:	cmp	w1, #0x1b
  423e20:	ldrb	w0, [x19, #25]
  423e24:	ldp	x25, x27, [x19, #8]
  423e28:	b.eq	423e90 <ferror@plt+0x210c0>  // b.none
  423e2c:	cmp	w1, #0x1c
  423e30:	b.eq	423ebc <ferror@plt+0x210ec>  // b.none
  423e34:	cmp	w1, #0xe
  423e38:	b.ne	423f64 <ferror@plt+0x21194>  // b.any
  423e3c:	mvn	x25, x25
  423e40:	str	x25, [sp, #352]
  423e44:	mvn	x25, x27
  423e48:	str	x25, [sp, #360]
  423e4c:	strb	w0, [sp, #369]
  423e50:	add	x8, sp, #0xf0
  423e54:	ldp	x0, x1, [sp, #352]
  423e58:	stp	x0, x1, [sp, #208]
  423e5c:	ldr	x1, [x28, #1208]
  423e60:	strb	w26, [sp, #368]
  423e64:	ldr	x0, [sp, #368]
  423e68:	str	x0, [sp, #224]
  423e6c:	add	x0, sp, #0xd0
  423e70:	bl	42211c <ferror@plt+0x1f34c>
  423e74:	ldp	x25, x0, [sp, #240]
  423e78:	stp	x25, x0, [sp, #352]
  423e7c:	ldr	x26, [sp, #256]
  423e80:	str	x26, [sp, #368]
  423e84:	mov	x27, x0
  423e88:	and	w26, w26, #0xff
  423e8c:	b	423eb4 <ferror@plt+0x210e4>
  423e90:	ldrb	w0, [x28, #1138]
  423e94:	cbz	w0, 423f04 <ferror@plt+0x21134>
  423e98:	ldr	w0, [x28, #28]
  423e9c:	cbnz	w0, 423eb4 <ferror@plt+0x210e4>
  423ea0:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  423ea4:	mov	x0, x28
  423ea8:	add	x2, x2, #0x845
  423eac:	mov	w1, #0x6                   	// #6
  423eb0:	bl	42167c <ferror@plt+0x1e8ac>
  423eb4:	mov	w0, #0x0                   	// #0
  423eb8:	b	423f04 <ferror@plt+0x21134>
  423ebc:	stp	x25, x27, [sp, #352]
  423ec0:	add	x8, sp, #0xf0
  423ec4:	strb	w0, [sp, #369]
  423ec8:	ldp	x0, x1, [sp, #352]
  423ecc:	stp	x0, x1, [sp, #208]
  423ed0:	ldr	x1, [x28, #1208]
  423ed4:	strb	w26, [sp, #368]
  423ed8:	ldr	x0, [sp, #368]
  423edc:	str	x0, [sp, #224]
  423ee0:	add	x0, sp, #0xd0
  423ee4:	bl	422170 <ferror@plt+0x1f3a0>
  423ee8:	ldp	x25, x0, [sp, #240]
  423eec:	stp	x25, x0, [sp, #352]
  423ef0:	ldr	x0, [sp, #256]
  423ef4:	str	x0, [sp, #368]
  423ef8:	ldr	x27, [sp, #360]
  423efc:	and	w26, w0, #0xff
  423f00:	ubfx	w0, w0, #8, #8
  423f04:	add	x2, sp, #0x250
  423f08:	stp	x25, x27, [sp, #352]
  423f0c:	strb	w26, [sp, #368]
  423f10:	strb	w0, [sp, #369]
  423f14:	ldp	x0, x1, [sp, #352]
  423f18:	stp	x0, x1, [x2, #-216]
  423f1c:	ldr	x2, [sp, #368]
  423f20:	str	x2, [sp, #392]
  423f24:	stp	x0, x1, [x19, #-32]
  423f28:	ldr	x0, [sp, #392]
  423f2c:	stur	x0, [x19, #-16]
  423f30:	ldr	w0, [x19, #32]
  423f34:	stur	w0, [x19, #-8]
  423f38:	ldurb	w0, [x19, #-15]
  423f3c:	sub	x24, x19, #0x28
  423f40:	cbz	w0, 424924 <ferror@plt+0x21b54>
  423f44:	ldr	w0, [x28, #28]
  423f48:	cbnz	w0, 424924 <ferror@plt+0x21b54>
  423f4c:	mov	x0, x28
  423f50:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  423f54:	mov	w1, #0x2                   	// #2
  423f58:	add	x2, x2, #0x8bf
  423f5c:	bl	421610 <ferror@plt+0x1e840>
  423f60:	b	424924 <ferror@plt+0x21b54>
  423f64:	orr	x25, x25, x27
  423f68:	mov	w0, #0x0                   	// #0
  423f6c:	cmp	x25, #0x0
  423f70:	mov	w26, #0x0                   	// #0
  423f74:	cset	x27, eq  // eq = none
  423f78:	mov	x25, #0x0                   	// #0
  423f7c:	b	423f04 <ferror@plt+0x21134>
  423f80:	ldp	x0, x1, [x19, #-32]
  423f84:	stp	x0, x1, [sp, #208]
  423f88:	ldr	w3, [sp, #96]
  423f8c:	ldur	x0, [x19, #-16]
  423f90:	str	x0, [sp, #224]
  423f94:	add	x8, sp, #0xf0
  423f98:	add	x2, sp, #0xb0
  423f9c:	ldp	x0, x1, [x19, #8]
  423fa0:	stp	x0, x1, [sp, #176]
  423fa4:	ldr	x0, [x19, #24]
  423fa8:	add	x1, sp, #0xd0
  423fac:	str	x0, [sp, #192]
  423fb0:	mov	x0, x28
  423fb4:	bl	422688 <ferror@plt+0x1f8b8>
  423fb8:	ldp	x0, x1, [sp, #240]
  423fbc:	stp	x0, x1, [x19, #-32]
  423fc0:	ldr	x0, [sp, #256]
  423fc4:	b	423f2c <ferror@plt+0x2115c>
  423fc8:	ldp	x11, x13, [x19, #-32]
  423fcc:	sub	x10, x19, #0x28
  423fd0:	ldp	x12, x4, [x19, #8]
  423fd4:	ldurb	w2, [x19, #-16]
  423fd8:	ldrb	w5, [x19, #24]
  423fdc:	ldr	x6, [x28, #1208]
  423fe0:	ldp	x0, x1, [x19, #-32]
  423fe4:	stp	x0, x1, [sp, #352]
  423fe8:	mov	x3, x12
  423fec:	ldr	x0, [x10, #24]
  423ff0:	mov	x1, x13
  423ff4:	str	x0, [sp, #368]
  423ff8:	mov	x0, x11
  423ffc:	bl	422964 <ferror@plt+0x1fb94>
  424000:	and	w2, w0, #0xff
  424004:	ldr	w1, [sp, #96]
  424008:	cmp	w1, #0x19
  42400c:	b.ne	424048 <ferror@plt+0x21278>  // b.any
  424010:	and	x2, x0, #0xff
  424014:	stp	xzr, x2, [sp, #352]
  424018:	add	x2, sp, #0x250
  42401c:	strh	wzr, [sp, #368]
  424020:	ldp	x0, x1, [sp, #352]
  424024:	stp	x0, x1, [x2, #-216]
  424028:	ldr	x2, [sp, #368]
  42402c:	str	x2, [sp, #392]
  424030:	stp	x0, x1, [x10, #8]
  424034:	ldr	x0, [sp, #392]
  424038:	str	x0, [x10, #24]
  42403c:	ldr	w0, [x19, #32]
  424040:	str	w0, [x10, #32]
  424044:	b	423f38 <ferror@plt+0x21168>
  424048:	ldr	w0, [sp, #96]
  42404c:	cmp	w0, #0x3
  424050:	b.ne	424060 <ferror@plt+0x21290>  // b.any
  424054:	eor	w2, w2, #0x1
  424058:	and	x2, x2, #0xff
  42405c:	b	424014 <ferror@plt+0x21244>
  424060:	ldr	w0, [sp, #96]
  424064:	cmp	w0, #0x2
  424068:	b.ne	424084 <ferror@plt+0x212b4>  // b.any
  42406c:	cbz	w2, 424058 <ferror@plt+0x21288>
  424070:	cmp	x4, x13
  424074:	b.ne	424058 <ferror@plt+0x21288>  // b.any
  424078:	cmp	x12, x11
  42407c:	cset	w2, ne  // ne = any
  424080:	b	424058 <ferror@plt+0x21288>
  424084:	cbz	w2, 42409c <ferror@plt+0x212cc>
  424088:	cmp	x4, x13
  42408c:	b.ne	4240a4 <ferror@plt+0x212d4>  // b.any
  424090:	cmp	x12, x11
  424094:	cset	w2, eq  // eq = none
  424098:	b	424058 <ferror@plt+0x21288>
  42409c:	mov	w2, #0x1                   	// #1
  4240a0:	b	424058 <ferror@plt+0x21288>
  4240a4:	mov	w2, #0x0                   	// #0
  4240a8:	b	424058 <ferror@plt+0x21288>
  4240ac:	ldp	x2, x6, [x19, #8]
  4240b0:	sub	x1, x19, #0x28
  4240b4:	ldp	x4, x5, [x19, #-32]
  4240b8:	stp	x4, x5, [sp, #352]
  4240bc:	ldur	x3, [x19, #-24]
  4240c0:	ldr	x0, [x1, #24]
  4240c4:	str	x0, [sp, #368]
  4240c8:	cmp	x6, x3
  4240cc:	ldur	x0, [x19, #-32]
  4240d0:	b.ne	424124 <ferror@plt+0x21354>  // b.any
  4240d4:	cmp	x2, x0
  4240d8:	cset	w0, eq  // eq = none
  4240dc:	ldr	w2, [sp, #96]
  4240e0:	cmp	w2, #0x18
  4240e4:	b.ne	4240ec <ferror@plt+0x2131c>  // b.any
  4240e8:	eor	w0, w0, #0x1
  4240ec:	and	x0, x0, #0xff
  4240f0:	stp	xzr, x0, [sp, #352]
  4240f4:	add	x0, sp, #0x250
  4240f8:	strh	wzr, [sp, #368]
  4240fc:	ldp	x2, x3, [sp, #352]
  424100:	stp	x2, x3, [x0, #-216]
  424104:	ldr	x0, [sp, #368]
  424108:	str	x0, [sp, #392]
  42410c:	stp	x2, x3, [x1, #8]
  424110:	ldr	x0, [sp, #392]
  424114:	str	x0, [x1, #24]
  424118:	ldr	w0, [x19, #32]
  42411c:	str	w0, [x1, #32]
  424120:	b	423f38 <ferror@plt+0x21168>
  424124:	mov	w0, #0x0                   	// #0
  424128:	b	4240dc <ferror@plt+0x2130c>
  42412c:	sub	x4, x19, #0x28
  424130:	ldrb	w6, [x19, #24]
  424134:	ldp	x2, x3, [x19, #-32]
  424138:	stp	x2, x3, [sp, #352]
  42413c:	ldr	x2, [x4, #24]
  424140:	str	x2, [sp, #368]
  424144:	ldurb	w2, [x19, #-16]
  424148:	ldp	x3, x5, [x19, #-32]
  42414c:	cmp	w2, #0x0
  424150:	csel	w2, w2, w6, ne  // ne = any
  424154:	ldr	w6, [sp, #96]
  424158:	ldp	x1, x0, [x19, #8]
  42415c:	cmp	w6, #0x9
  424160:	b.ne	4241a4 <ferror@plt+0x213d4>  // b.any
  424164:	and	x0, x0, x5
  424168:	and	x1, x1, x3
  42416c:	stp	x1, x0, [sp, #352]
  424170:	strb	w2, [sp, #368]
  424174:	add	x2, sp, #0x250
  424178:	strb	wzr, [sp, #369]
  42417c:	ldp	x0, x1, [sp, #352]
  424180:	stp	x0, x1, [x2, #-216]
  424184:	ldr	x2, [sp, #368]
  424188:	str	x2, [sp, #392]
  42418c:	stp	x0, x1, [x4, #8]
  424190:	ldr	x0, [sp, #392]
  424194:	str	x0, [x4, #24]
  424198:	ldr	w0, [x19, #32]
  42419c:	str	w0, [x4, #32]
  4241a0:	b	423f38 <ferror@plt+0x21168>
  4241a4:	ldr	w6, [sp, #96]
  4241a8:	cmp	w6, #0xa
  4241ac:	b.ne	4241bc <ferror@plt+0x213ec>  // b.any
  4241b0:	orr	x0, x0, x5
  4241b4:	orr	x1, x1, x3
  4241b8:	b	42416c <ferror@plt+0x2139c>
  4241bc:	eor	x0, x0, x5
  4241c0:	eor	x1, x1, x3
  4241c4:	b	42416c <ferror@plt+0x2139c>
  4241c8:	sub	x13, x19, #0x28
  4241cc:	add	x2, sp, #0x200
  4241d0:	ldp	x0, x1, [x19, #-32]
  4241d4:	stp	x0, x1, [sp, #304]
  4241d8:	ldr	x0, [x13, #24]
  4241dc:	str	x0, [sp, #320]
  4241e0:	ldr	x18, [x28, #1208]
  4241e4:	ldp	x0, x1, [x19, #8]
  4241e8:	ldurb	w15, [x19, #-16]
  4241ec:	ldp	x14, x24, [x19, #-32]
  4241f0:	stp	x0, x1, [x2, #-184]
  4241f4:	ldr	x0, [x19, #24]
  4241f8:	str	x0, [sp, #344]
  4241fc:	ldp	x11, x25, [x19, #8]
  424200:	cbnz	w15, 424418 <ferror@plt+0x21648>
  424204:	ldrb	w12, [x19, #24]
  424208:	cbnz	w12, 4242c4 <ferror@plt+0x214f4>
  42420c:	mov	x2, x18
  424210:	mov	x1, x24
  424214:	mov	x0, x14
  424218:	bl	422414 <ferror@plt+0x1f644>
  42421c:	tst	w0, #0xff
  424220:	b.ne	424410 <ferror@plt+0x21640>  // b.any
  424224:	stp	x14, x24, [sp, #304]
  424228:	add	x8, sp, #0xf0
  42422c:	strb	wzr, [sp, #320]
  424230:	ldp	x0, x1, [sp, #304]
  424234:	stp	x0, x1, [sp, #208]
  424238:	ldr	x0, [sp, #320]
  42423c:	mov	x1, x18
  424240:	str	x0, [sp, #224]
  424244:	add	x0, sp, #0xd0
  424248:	bl	422170 <ferror@plt+0x1f3a0>
  42424c:	ldp	x14, x0, [sp, #240]
  424250:	stp	x14, x0, [sp, #304]
  424254:	mov	w15, #0x1                   	// #1
  424258:	ldr	x24, [sp, #312]
  42425c:	ldr	x0, [sp, #256]
  424260:	str	x0, [sp, #320]
  424264:	mov	x2, x18
  424268:	mov	x1, x25
  42426c:	mov	x0, x11
  424270:	bl	422414 <ferror@plt+0x1f644>
  424274:	tst	w0, #0xff
  424278:	b.ne	4242c4 <ferror@plt+0x214f4>  // b.any
  42427c:	add	x0, sp, #0x200
  424280:	stp	x11, x25, [sp, #328]
  424284:	eor	w15, w15, #0x1
  424288:	strb	wzr, [sp, #344]
  42428c:	add	x8, sp, #0xf0
  424290:	ldp	x0, x1, [x0, #-184]
  424294:	stp	x0, x1, [sp, #208]
  424298:	ldr	x0, [sp, #344]
  42429c:	mov	x1, x18
  4242a0:	str	x0, [sp, #224]
  4242a4:	add	x0, sp, #0xd0
  4242a8:	bl	422170 <ferror@plt+0x1f3a0>
  4242ac:	ldp	x11, x0, [sp, #240]
  4242b0:	stp	x11, x0, [sp, #328]
  4242b4:	mov	w12, #0x0                   	// #0
  4242b8:	ldr	x25, [sp, #336]
  4242bc:	ldr	x0, [sp, #256]
  4242c0:	str	x0, [sp, #344]
  4242c4:	cbz	x14, 424424 <ferror@plt+0x21654>
  4242c8:	cmp	x11, #0x0
  4242cc:	cset	w10, ne  // ne = any
  4242d0:	add	x8, sp, #0x178
  4242d4:	mov	x1, x25
  4242d8:	mov	x0, x24
  4242dc:	bl	42220c <ferror@plt+0x1f43c>
  4242e0:	ldp	x9, x5, [sp, #376]
  4242e4:	mov	x0, x14
  4242e8:	add	x8, sp, #0x160
  4242ec:	mov	x1, x25
  4242f0:	bl	42220c <ferror@plt+0x1f43c>
  4242f4:	mov	x1, x11
  4242f8:	ldr	x0, [sp, #360]
  4242fc:	mov	w6, #0x1                   	// #1
  424300:	add	x8, sp, #0x160
  424304:	add	x9, x9, x0
  424308:	ldr	x0, [sp, #352]
  42430c:	cmp	x0, #0x0
  424310:	mov	x0, x24
  424314:	csel	w10, w10, w6, eq  // eq = none
  424318:	bl	42220c <ferror@plt+0x1f43c>
  42431c:	ldr	x0, [sp, #360]
  424320:	add	x8, sp, #0xf0
  424324:	add	x9, x9, x0
  424328:	str	x9, [sp, #376]
  42432c:	ldr	x0, [sp, #352]
  424330:	cmp	x0, #0x0
  424334:	add	x0, sp, #0x250
  424338:	csel	w10, w10, w6, eq  // eq = none
  42433c:	ldp	x0, x1, [x0, #-216]
  424340:	stp	x0, x1, [sp, #208]
  424344:	ldr	x0, [sp, #392]
  424348:	mov	x1, x18
  42434c:	str	x0, [sp, #224]
  424350:	add	x0, sp, #0xd0
  424354:	bl	42211c <ferror@plt+0x1f34c>
  424358:	ldp	x4, x0, [sp, #240]
  42435c:	stp	x4, x0, [sp, #376]
  424360:	ldr	x0, [sp, #256]
  424364:	str	x0, [sp, #392]
  424368:	ldr	x1, [sp, #384]
  42436c:	cmp	x5, x1
  424370:	b.ne	42442c <ferror@plt+0x2165c>  // b.any
  424374:	cmp	x9, x4
  424378:	csel	w10, w10, w6, eq  // eq = none
  42437c:	cbz	w15, 4243b8 <ferror@plt+0x215e8>
  424380:	add	x0, sp, #0x250
  424384:	add	x8, sp, #0xf0
  424388:	ldp	x0, x1, [x0, #-216]
  42438c:	stp	x0, x1, [sp, #208]
  424390:	ldr	x0, [sp, #392]
  424394:	mov	x1, x18
  424398:	str	x0, [sp, #224]
  42439c:	add	x0, sp, #0xd0
  4243a0:	bl	422170 <ferror@plt+0x1f3a0>
  4243a4:	ldp	x4, x0, [sp, #240]
  4243a8:	stp	x4, x0, [sp, #376]
  4243ac:	ldr	x1, [sp, #384]
  4243b0:	ldr	x0, [sp, #256]
  4243b4:	str	x0, [sp, #392]
  4243b8:	cbnz	w12, 424434 <ferror@plt+0x21664>
  4243bc:	cbnz	w10, 4243e4 <ferror@plt+0x21614>
  4243c0:	mov	x2, x18
  4243c4:	mov	x0, x4
  4243c8:	bl	422414 <ferror@plt+0x1f644>
  4243cc:	eor	w15, w15, #0x1
  4243d0:	cmp	w15, w0, uxtb
  4243d4:	b.eq	4243e4 <ferror@plt+0x21614>  // b.none
  4243d8:	orr	x0, x1, x4
  4243dc:	cmp	x0, #0x0
  4243e0:	cset	w10, ne  // ne = any
  4243e4:	add	x0, sp, #0x250
  4243e8:	stp	x4, x1, [sp, #376]
  4243ec:	strb	w12, [sp, #392]
  4243f0:	strb	w10, [sp, #393]
  4243f4:	ldp	x0, x1, [x0, #-216]
  4243f8:	stp	x0, x1, [x13, #8]
  4243fc:	ldr	x0, [sp, #392]
  424400:	str	x0, [x13, #24]
  424404:	ldr	w0, [x19, #32]
  424408:	str	w0, [x13, #32]
  42440c:	b	423f38 <ferror@plt+0x21168>
  424410:	mov	w15, w12
  424414:	b	424264 <ferror@plt+0x21494>
  424418:	mov	w12, w15
  42441c:	mov	w15, #0x0                   	// #0
  424420:	b	4242c4 <ferror@plt+0x214f4>
  424424:	mov	w10, #0x0                   	// #0
  424428:	b	4242d0 <ferror@plt+0x21500>
  42442c:	mov	w10, w6
  424430:	b	42437c <ferror@plt+0x215ac>
  424434:	mov	w10, #0x0                   	// #0
  424438:	b	4243e4 <ferror@plt+0x21614>
  42443c:	sub	x0, x19, #0x28
  424440:	add	x2, sp, #0x200
  424444:	str	x0, [sp, #120]
  424448:	ldp	x0, x1, [x19, #-32]
  42444c:	stp	x0, x1, [x2, #-232]
  424450:	ldurb	w26, [x19, #-16]
  424454:	ldur	x0, [x19, #-16]
  424458:	str	x0, [sp, #296]
  42445c:	ldp	x0, x1, [x19, #8]
  424460:	str	w26, [sp, #104]
  424464:	ldurb	w7, [x19, #-15]
  424468:	ldr	w12, [x19, #32]
  42446c:	ldp	x27, x25, [x19, #-32]
  424470:	stp	x0, x1, [sp, #304]
  424474:	ldr	x0, [x19, #24]
  424478:	str	x0, [sp, #320]
  42447c:	ldr	x24, [x28, #1208]
  424480:	ldp	x14, x15, [x19, #8]
  424484:	cbnz	w26, 4245b0 <ferror@plt+0x217e0>
  424488:	ldrb	w0, [x19, #24]
  42448c:	str	w0, [sp, #100]
  424490:	cbnz	w0, 4245bc <ferror@plt+0x217ec>
  424494:	mov	x2, x24
  424498:	mov	x1, x25
  42449c:	mov	x0, x27
  4244a0:	str	w7, [sp, #104]
  4244a4:	bl	422414 <ferror@plt+0x1f644>
  4244a8:	tst	w0, #0xff
  4244ac:	ldr	w7, [sp, #104]
  4244b0:	b.ne	4245a8 <ferror@plt+0x217d8>  // b.any
  4244b4:	add	x0, sp, #0x200
  4244b8:	stp	x27, x25, [sp, #280]
  4244bc:	add	x8, sp, #0xf0
  4244c0:	strb	wzr, [sp, #296]
  4244c4:	strb	w7, [sp, #297]
  4244c8:	ldp	x0, x1, [x0, #-232]
  4244cc:	stp	x0, x1, [sp, #208]
  4244d0:	ldr	x0, [sp, #296]
  4244d4:	mov	x1, x24
  4244d8:	str	x0, [sp, #224]
  4244dc:	add	x0, sp, #0xd0
  4244e0:	bl	422170 <ferror@plt+0x1f3a0>
  4244e4:	ldp	x10, x0, [sp, #240]
  4244e8:	stp	x10, x0, [sp, #280]
  4244ec:	ldr	x9, [sp, #256]
  4244f0:	str	x9, [sp, #296]
  4244f4:	mov	x27, x10
  4244f8:	and	w26, w9, #0xff
  4244fc:	ubfx	w7, w9, #8, #8
  424500:	mov	x25, x0
  424504:	mov	w0, #0x1                   	// #1
  424508:	str	w0, [sp, #108]
  42450c:	mov	x2, x24
  424510:	mov	x1, x15
  424514:	mov	x0, x14
  424518:	str	w7, [sp, #104]
  42451c:	bl	422414 <ferror@plt+0x1f644>
  424520:	tst	w0, #0xff
  424524:	ldr	w7, [sp, #104]
  424528:	b.ne	4245c4 <ferror@plt+0x217f4>  // b.any
  42452c:	ldr	w0, [sp, #108]
  424530:	add	x8, sp, #0xf0
  424534:	stp	x14, x15, [sp, #304]
  424538:	eor	w0, w0, #0x1
  42453c:	str	w0, [sp, #104]
  424540:	strb	wzr, [sp, #320]
  424544:	ldp	x0, x1, [sp, #304]
  424548:	stp	x0, x1, [sp, #208]
  42454c:	ldr	x0, [sp, #320]
  424550:	mov	x1, x24
  424554:	str	w7, [sp, #152]
  424558:	str	x0, [sp, #224]
  42455c:	add	x0, sp, #0xd0
  424560:	bl	422170 <ferror@plt+0x1f3a0>
  424564:	str	wzr, [sp, #100]
  424568:	ldp	x14, x0, [sp, #240]
  42456c:	stp	x14, x0, [sp, #304]
  424570:	ldr	w7, [sp, #152]
  424574:	ldr	x15, [sp, #312]
  424578:	ldr	x0, [sp, #256]
  42457c:	str	x0, [sp, #320]
  424580:	cbz	x14, 4245d0 <ferror@plt+0x21800>
  424584:	sub	w2, w24, #0x41
  424588:	mov	x1, #0x1                   	// #1
  42458c:	sub	x0, x24, #0x1
  424590:	lsl	x1, x1, x2
  424594:	tst	x14, x1
  424598:	b.ne	424668 <ferror@plt+0x21898>  // b.any
  42459c:	sub	x0, x0, #0x1
  4245a0:	lsr	x1, x1, #1
  4245a4:	b	424594 <ferror@plt+0x217c4>
  4245a8:	str	wzr, [sp, #108]
  4245ac:	b	42450c <ferror@plt+0x2173c>
  4245b0:	stp	w26, wzr, [sp, #100]
  4245b4:	str	wzr, [sp, #108]
  4245b8:	b	424580 <ferror@plt+0x217b0>
  4245bc:	str	wzr, [sp, #108]
  4245c0:	b	424580 <ferror@plt+0x217b0>
  4245c4:	ldr	w0, [sp, #108]
  4245c8:	str	w0, [sp, #104]
  4245cc:	b	424580 <ferror@plt+0x217b0>
  4245d0:	cbz	x15, 424600 <ferror@plt+0x21830>
  4245d4:	sub	x1, x24, #0x41
  4245d8:	sub	x13, x24, #0x1
  4245dc:	cmp	x24, #0x40
  4245e0:	csel	x0, x1, x13, hi  // hi = pmore
  4245e4:	mov	x1, #0x1                   	// #1
  4245e8:	lsl	x1, x1, x0
  4245ec:	tst	x15, x1
  4245f0:	b.ne	424668 <ferror@plt+0x21898>  // b.any
  4245f4:	sub	x0, x0, #0x1
  4245f8:	lsr	x1, x1, #1
  4245fc:	b	4245ec <ferror@plt+0x2181c>
  424600:	ldr	w0, [x28, #28]
  424604:	cbnz	w0, 42462c <ferror@plt+0x2185c>
  424608:	mov	w2, w12
  42460c:	mov	x0, x28
  424610:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  424614:	mov	w3, #0x0                   	// #0
  424618:	add	x4, x4, #0x873
  42461c:	mov	w1, #0x3                   	// #3
  424620:	str	w7, [sp, #96]
  424624:	bl	4217cc <ferror@plt+0x1e9fc>
  424628:	ldr	w7, [sp, #96]
  42462c:	strb	w26, [sp, #296]
  424630:	strb	w7, [sp, #297]
  424634:	stp	x27, x25, [sp, #280]
  424638:	ldr	x0, [sp, #296]
  42463c:	str	x0, [sp, #392]
  424640:	add	x0, sp, #0x250
  424644:	stp	x27, x25, [sp, #376]
  424648:	ldr	x2, [sp, #120]
  42464c:	strb	w26, [sp, #392]
  424650:	strb	w7, [sp, #393]
  424654:	ldp	x0, x1, [x0, #-216]
  424658:	stp	x0, x1, [x2, #8]
  42465c:	mov	x1, x2
  424660:	ldr	x0, [sp, #392]
  424664:	b	424114 <ferror@plt+0x21344>
  424668:	stp	x14, x15, [sp, #304]
  42466c:	sub	x13, x24, #0x1
  424670:	sub	x13, x13, x0
  424674:	ldp	x2, x3, [sp, #304]
  424678:	mov	w0, #0x1                   	// #1
  42467c:	strb	w0, [sp, #320]
  424680:	add	x8, sp, #0x160
  424684:	add	x0, sp, #0xf0
  424688:	str	x13, [sp, #152]
  42468c:	ldr	x1, [sp, #320]
  424690:	str	w7, [sp, #160]
  424694:	stp	x2, x3, [sp, #240]
  424698:	mov	x2, x13
  42469c:	str	x1, [sp, #256]
  4246a0:	mov	x1, x24
  4246a4:	bl	422548 <ferror@plt+0x1f778>
  4246a8:	ldp	x26, x4, [sp, #352]
  4246ac:	mov	x18, x25
  4246b0:	ldr	w7, [sp, #160]
  4246b4:	mov	x12, x27
  4246b8:	ldr	x13, [sp, #152]
  4246bc:	mov	x25, #0x0                   	// #0
  4246c0:	mov	x27, #0x0                   	// #0
  4246c4:	mov	w15, #0x1                   	// #1
  4246c8:	ldrb	w5, [sp, #368]
  4246cc:	mov	x6, x24
  4246d0:	mov	x3, x26
  4246d4:	mov	w2, w15
  4246d8:	mov	x1, x18
  4246dc:	mov	x0, x12
  4246e0:	str	x4, [sp, #152]
  4246e4:	str	w7, [sp, #160]
  4246e8:	str	x13, [sp, #168]
  4246ec:	bl	422964 <ferror@plt+0x1fb94>
  4246f0:	ldr	w7, [sp, #160]
  4246f4:	tst	w0, #0xff
  4246f8:	add	x8, sp, #0xf0
  4246fc:	ldr	x4, [sp, #152]
  424700:	ldr	x13, [sp, #168]
  424704:	b.eq	42478c <ferror@plt+0x219bc>  // b.none
  424708:	add	x0, sp, #0x200
  42470c:	stp	x12, x18, [sp, #280]
  424710:	add	x2, sp, #0xb0
  424714:	strb	w15, [sp, #296]
  424718:	mov	w3, #0x5                   	// #5
  42471c:	strb	w7, [sp, #297]
  424720:	stp	x26, x4, [sp, #352]
  424724:	ldp	x0, x1, [x0, #-232]
  424728:	stp	x0, x1, [sp, #208]
  42472c:	ldr	x0, [sp, #296]
  424730:	str	x0, [sp, #224]
  424734:	ldp	x0, x1, [sp, #352]
  424738:	stp	x0, x1, [sp, #176]
  42473c:	ldr	x0, [sp, #368]
  424740:	add	x1, sp, #0xd0
  424744:	str	x13, [sp, #160]
  424748:	str	x0, [sp, #192]
  42474c:	mov	x0, x28
  424750:	bl	422688 <ferror@plt+0x1f8b8>
  424754:	ldp	x4, x13, [sp, #152]
  424758:	ldp	x12, x0, [sp, #240]
  42475c:	stp	x12, x0, [sp, #280]
  424760:	ldr	x9, [sp, #256]
  424764:	str	x9, [sp, #296]
  424768:	cmp	x13, #0x3f
  42476c:	mov	x18, x0
  424770:	and	w15, w9, #0xff
  424774:	ubfx	w7, w9, #8, #8
  424778:	b.ls	4247a4 <ferror@plt+0x219d4>  // b.plast
  42477c:	sub	w0, w13, #0x40
  424780:	mov	x1, #0x1                   	// #1
  424784:	lsl	x0, x1, x0
  424788:	orr	x27, x27, x0
  42478c:	sub	x13, x13, #0x1
  424790:	cmn	x13, #0x1
  424794:	b.eq	4247b4 <ferror@plt+0x219e4>  // b.none
  424798:	extr	x4, x26, x4, #1
  42479c:	lsr	x26, x26, #1
  4247a0:	b	4246c8 <ferror@plt+0x218f8>
  4247a4:	mov	x0, #0x1                   	// #1
  4247a8:	lsl	x0, x0, x13
  4247ac:	orr	x25, x25, x0
  4247b0:	b	42478c <ferror@plt+0x219bc>
  4247b4:	ldp	w0, w26, [sp, #96]
  4247b8:	cmp	w0, #0x7
  4247bc:	b.ne	424870 <ferror@plt+0x21aa0>  // b.any
  4247c0:	cbnz	w26, 424868 <ferror@plt+0x21a98>
  4247c4:	ldr	w0, [sp, #104]
  4247c8:	cbz	w0, 424860 <ferror@plt+0x21a90>
  4247cc:	add	x0, sp, #0x200
  4247d0:	stp	x27, x25, [sp, #328]
  4247d4:	add	x8, sp, #0xf0
  4247d8:	strh	wzr, [sp, #344]
  4247dc:	ldp	x0, x1, [x0, #-184]
  4247e0:	stp	x0, x1, [sp, #208]
  4247e4:	ldr	x0, [sp, #344]
  4247e8:	mov	x1, x24
  4247ec:	str	x0, [sp, #224]
  4247f0:	add	x0, sp, #0xd0
  4247f4:	bl	422170 <ferror@plt+0x1f3a0>
  4247f8:	ldp	x10, x0, [sp, #240]
  4247fc:	stp	x10, x0, [sp, #328]
  424800:	ldr	x5, [sp, #256]
  424804:	str	x5, [sp, #344]
  424808:	mov	x27, x10
  42480c:	mov	x25, x0
  424810:	and	w26, w5, #0xff
  424814:	mov	x1, x25
  424818:	mov	x2, x24
  42481c:	mov	x0, x27
  424820:	bl	422414 <ferror@plt+0x1f644>
  424824:	ldr	w1, [sp, #104]
  424828:	eor	w1, w1, #0x1
  42482c:	and	w1, w1, #0xff
  424830:	cmp	w1, w0, uxtb
  424834:	b.eq	424848 <ferror@plt+0x21a78>  // b.none
  424838:	orr	x0, x27, x25
  42483c:	cmp	x0, #0x0
  424840:	cset	w0, ne  // ne = any
  424844:	str	w0, [sp, #100]
  424848:	ldr	w7, [sp, #100]
  42484c:	strb	w26, [sp, #344]
  424850:	strb	w7, [sp, #345]
  424854:	stp	x27, x25, [sp, #328]
  424858:	ldr	x0, [sp, #344]
  42485c:	b	42463c <ferror@plt+0x2186c>
  424860:	ldr	w26, [sp, #104]
  424864:	b	424814 <ferror@plt+0x21a44>
  424868:	mov	w7, #0x0                   	// #0
  42486c:	b	42484c <ferror@plt+0x21a7c>
  424870:	ldr	w0, [sp, #108]
  424874:	cbz	w0, 4248e4 <ferror@plt+0x21b14>
  424878:	add	x0, sp, #0x200
  42487c:	stp	x12, x18, [sp, #280]
  424880:	add	x8, sp, #0xf0
  424884:	strb	w26, [sp, #296]
  424888:	strb	wzr, [sp, #297]
  42488c:	ldp	x0, x1, [x0, #-232]
  424890:	stp	x0, x1, [sp, #208]
  424894:	ldr	x0, [sp, #296]
  424898:	mov	x1, x24
  42489c:	str	x0, [sp, #224]
  4248a0:	add	x0, sp, #0xd0
  4248a4:	bl	422170 <ferror@plt+0x1f3a0>
  4248a8:	ldp	x12, x0, [sp, #240]
  4248ac:	stp	x12, x0, [sp, #280]
  4248b0:	ldr	x9, [sp, #256]
  4248b4:	str	x9, [sp, #296]
  4248b8:	mov	x18, x0
  4248bc:	and	w26, w9, #0xff
  4248c0:	ubfx	w7, w9, #8, #8
  4248c4:	strb	w26, [sp, #296]
  4248c8:	mov	x25, x18
  4248cc:	strb	w7, [sp, #297]
  4248d0:	mov	x27, x12
  4248d4:	stp	x12, x18, [sp, #280]
  4248d8:	ldr	x0, [sp, #296]
  4248dc:	str	x0, [sp, #392]
  4248e0:	b	424640 <ferror@plt+0x21870>
  4248e4:	mov	w7, #0x0                   	// #0
  4248e8:	b	4248c4 <ferror@plt+0x21af4>
  4248ec:	ldp	x1, x0, [x19, #-32]
  4248f0:	sub	x24, x19, #0x28
  4248f4:	orr	x0, x0, x1
  4248f8:	cbz	x0, 424b68 <ferror@plt+0x21d98>
  4248fc:	ldr	w0, [x28, #28]
  424900:	sub	w0, w0, #0x1
  424904:	str	w0, [x28, #28]
  424908:	mov	w0, #0x1                   	// #1
  42490c:	and	x0, x0, #0xff
  424910:	stp	xzr, x0, [x24, #8]
  424914:	ldr	w0, [x19, #32]
  424918:	strb	wzr, [x24, #24]
  42491c:	strb	wzr, [x24, #25]
  424920:	str	w0, [x24, #32]
  424924:	mov	x19, x24
  424928:	b	423d20 <ferror@plt+0x20f50>
  42492c:	ldp	x1, x0, [x19, #-32]
  424930:	sub	x24, x19, #0x28
  424934:	orr	x0, x0, x1
  424938:	cbnz	x0, 424b68 <ferror@plt+0x21d98>
  42493c:	ldr	w0, [x28, #28]
  424940:	sub	w0, w0, #0x1
  424944:	str	w0, [x28, #28]
  424948:	mov	w0, #0x0                   	// #0
  42494c:	b	42490c <ferror@plt+0x21b3c>
  424950:	cmp	w20, #0x15
  424954:	b.eq	42497c <ferror@plt+0x21bac>  // b.none
  424958:	ldr	x0, [x19]
  42495c:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  424960:	add	x4, x4, #0x88b
  424964:	mov	w3, #0x0                   	// #0
  424968:	ldr	w2, [x0]
  42496c:	mov	x0, x28
  424970:	mov	w1, #0x3                   	// #3
  424974:	bl	4217cc <ferror@plt+0x1e9fc>
  424978:	b	423c1c <ferror@plt+0x20e4c>
  42497c:	ldr	x1, [x19, #24]
  424980:	sub	x0, x19, #0x28
  424984:	stur	x1, [x19, #-16]
  424988:	ldr	w1, [x19, #32]
  42498c:	ldp	x2, x3, [x19, #8]
  424990:	stp	x2, x3, [x19, #-32]
  424994:	stur	w1, [x19, #-8]
  424998:	mov	x19, x0
  42499c:	b	423684 <ferror@plt+0x208b4>
  4249a0:	ldp	x1, x0, [x19, #-72]
  4249a4:	sub	x24, x19, #0x50
  4249a8:	add	x4, x24, #0x8
  4249ac:	orr	x0, x0, x1
  4249b0:	sub	x1, x19, #0x28
  4249b4:	cbz	x0, 4249f0 <ferror@plt+0x21c20>
  4249b8:	ldr	w0, [x28, #28]
  4249bc:	ldp	x2, x3, [x19, #-32]
  4249c0:	sub	w0, w0, #0x1
  4249c4:	str	w0, [x28, #28]
  4249c8:	stp	x2, x3, [x19, #-72]
  4249cc:	ldr	x0, [x1, #24]
  4249d0:	str	x0, [x4, #16]
  4249d4:	ldur	w0, [x19, #-8]
  4249d8:	stur	w0, [x19, #-48]
  4249dc:	ldrb	w0, [x1, #24]
  4249e0:	cbnz	w0, 4249e8 <ferror@plt+0x21c18>
  4249e4:	ldrb	w0, [x19, #24]
  4249e8:	strb	w0, [x24, #24]
  4249ec:	b	424924 <ferror@plt+0x21b54>
  4249f0:	ldp	x2, x3, [x19, #8]
  4249f4:	stp	x2, x3, [x19, #-72]
  4249f8:	ldr	x0, [x19, #24]
  4249fc:	str	x0, [x4, #16]
  424a00:	ldr	w0, [x19, #32]
  424a04:	b	4249d8 <ferror@plt+0x21c08>
  424a08:	sub	w0, w20, #0x12
  424a0c:	cmp	w0, #0x1
  424a10:	b.ls	424b00 <ferror@plt+0x21d30>  // b.plast
  424a14:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  424a18:	add	x2, x2, #0x8a5
  424a1c:	mov	x0, x28
  424a20:	mov	w1, #0x3                   	// #3
  424a24:	bl	421610 <ferror@plt+0x1e840>
  424a28:	b	423c1c <ferror@plt+0x20e4c>
  424a2c:	cmp	w20, #0x15
  424a30:	b.ne	424b00 <ferror@plt+0x21d30>  // b.any
  424a34:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  424a38:	add	x2, x2, #0x8eb
  424a3c:	b	424a1c <ferror@plt+0x21c4c>
  424a40:	sub	w1, w20, #0xf
  424a44:	cmp	w1, #0x6
  424a48:	b.hi	424a8c <ferror@plt+0x21cbc>  // b.pmore
  424a4c:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x215fc>
  424a50:	add	x0, x0, #0xff0
  424a54:	ldrh	w0, [x0, w1, uxtw #1]
  424a58:	adr	x1, 424a64 <ferror@plt+0x21c94>
  424a5c:	add	x0, x1, w0, sxth #2
  424a60:	br	x0
  424a64:	ldp	x1, x0, [x19, #8]
  424a68:	orr	x0, x0, x1
  424a6c:	cbz	x0, 424a8c <ferror@plt+0x21cbc>
  424a70:	ldr	w0, [x28, #28]
  424a74:	add	w0, w0, #0x1
  424a78:	str	w0, [x28, #28]
  424a7c:	b	424a8c <ferror@plt+0x21cbc>
  424a80:	ldp	x1, x0, [x19, #8]
  424a84:	orr	x0, x0, x1
  424a88:	cbz	x0, 424a70 <ferror@plt+0x21ca0>
  424a8c:	ldr	x0, [x28, #1104]
  424a90:	add	x19, x19, #0x28
  424a94:	cmp	x0, x19
  424a98:	b.ne	424aa8 <ferror@plt+0x21cd8>  // b.any
  424a9c:	mov	x0, x28
  424aa0:	bl	4235d8 <ferror@plt+0x20808>
  424aa4:	mov	x19, x0
  424aa8:	mov	w21, #0x1                   	// #1
  424aac:	str	x23, [x19]
  424ab0:	stp	w22, w20, [x19, #32]
  424ab4:	b	423684 <ferror@plt+0x208b4>
  424ab8:	ldr	w0, [x19, #36]
  424abc:	cmp	w0, #0x11
  424ac0:	b.eq	424ad0 <ferror@plt+0x21d00>  // b.none
  424ac4:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  424ac8:	add	x4, x4, #0x905
  424acc:	b	423c60 <ferror@plt+0x20e90>
  424ad0:	ldp	x2, x1, [x19, #-32]
  424ad4:	ldr	w0, [x28, #28]
  424ad8:	orr	x1, x1, x2
  424adc:	sub	w2, w0, #0x1
  424ae0:	cmp	x1, #0x0
  424ae4:	csinc	w0, w2, w0, eq  // eq = none
  424ae8:	b	424a78 <ferror@plt+0x21ca8>
  424aec:	ldp	x1, x0, [x19, #8]
  424af0:	orr	x0, x0, x1
  424af4:	cmp	x0, #0x0
  424af8:	cset	w21, ne  // ne = any
  424afc:	b	423744 <ferror@plt+0x20974>
  424b00:	cmp	w20, #0x16
  424b04:	b.ne	424a40 <ferror@plt+0x21c70>  // b.any
  424b08:	ldr	x0, [x28, #432]
  424b0c:	cbz	x0, 424b28 <ferror@plt+0x21d58>
  424b10:	ldp	w1, w0, [sp, #128]
  424b14:	eor	w0, w0, #0x1
  424b18:	cmp	w1, #0x3
  424b1c:	csinc	w0, w0, wzr, eq  // eq = none
  424b20:	cbz	w0, 424b28 <ferror@plt+0x21d58>
  424b24:	str	xzr, [x28, #432]
  424b28:	ldr	x0, [x28, #1096]
  424b2c:	cmp	x0, x19
  424b30:	b.eq	424aec <ferror@plt+0x21d1c>  // b.none
  424b34:	ldr	w1, [sp, #136]
  424b38:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x225fc>
  424b3c:	adrp	x5, 467000 <_obstack_memory_used@@Base+0x225fc>
  424b40:	add	x0, x0, #0x52d
  424b44:	cmp	w1, #0x0
  424b48:	add	x5, x5, #0xad
  424b4c:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  424b50:	ldr	w2, [x19, #32]
  424b54:	add	x4, x4, #0x920
  424b58:	csel	x5, x5, x0, ne  // ne = any
  424b5c:	mov	w3, #0x0                   	// #0
  424b60:	mov	w1, #0x4                   	// #4
  424b64:	b	4236f4 <ferror@plt+0x20924>
  424b68:	ldp	x1, x0, [x19, #8]
  424b6c:	orr	x0, x0, x1
  424b70:	cmp	x0, #0x0
  424b74:	cset	w0, ne  // ne = any
  424b78:	b	42490c <ferror@plt+0x21b3c>
  424b7c:	ldrb	w4, [x0, #16]
  424b80:	ldp	x2, x3, [x0]
  424b84:	cbnz	w4, 424bb8 <ferror@plt+0x21de8>
  424b88:	cmp	x1, #0x40
  424b8c:	b.ls	424bd0 <ferror@plt+0x21e00>  // b.plast
  424b90:	sub	x1, x1, #0x40
  424b94:	cmp	x1, #0x3f
  424b98:	b.hi	424bb8 <ferror@plt+0x21de8>  // b.pmore
  424b9c:	sub	w4, w1, #0x1
  424ba0:	lsr	x4, x2, x4
  424ba4:	tbz	w4, #0, 424bb8 <ferror@plt+0x21de8>
  424ba8:	neg	w1, w1
  424bac:	mov	x4, #0xffffffffffffffff    	// #-1
  424bb0:	lsr	x1, x4, x1
  424bb4:	orn	x2, x2, x1
  424bb8:	stp	x2, x3, [x0]
  424bbc:	ldp	x2, x3, [x0]
  424bc0:	stp	x2, x3, [x8]
  424bc4:	ldr	x0, [x0, #16]
  424bc8:	str	x0, [x8, #16]
  424bcc:	ret
  424bd0:	sub	w4, w1, #0x1
  424bd4:	lsr	x4, x3, x4
  424bd8:	tbz	w4, #0, 424bb8 <ferror@plt+0x21de8>
  424bdc:	cmp	x1, #0x40
  424be0:	mov	x2, #0xffffffffffffffff    	// #-1
  424be4:	b.eq	424bb8 <ferror@plt+0x21de8>  // b.none
  424be8:	neg	w1, w1
  424bec:	lsr	x1, x2, x1
  424bf0:	orn	x3, x3, x1
  424bf4:	b	424bb8 <ferror@plt+0x21de8>
  424bf8:	ldr	x1, [x0, #24]
  424bfc:	ldr	x0, [x0, #8]
  424c00:	cbz	x0, 424c0c <ferror@plt+0x21e3c>
  424c04:	ldr	x0, [x1]
  424c08:	b	44438c <ferror@plt+0x415bc>
  424c0c:	ldr	x0, [x1, #8]
  424c10:	b	424c08 <ferror@plt+0x21e38>
  424c14:	stp	x29, x30, [sp, #-32]!
  424c18:	mov	x29, sp
  424c1c:	str	x19, [sp, #16]
  424c20:	mov	x19, x0
  424c24:	ldr	x0, [x0, #48]
  424c28:	bl	402b30 <free@plt>
  424c2c:	ldr	x0, [x19]
  424c30:	bl	402b30 <free@plt>
  424c34:	ldr	x0, [x19, #8]
  424c38:	bl	402b30 <free@plt>
  424c3c:	mov	x0, x19
  424c40:	ldr	x19, [sp, #16]
  424c44:	ldp	x29, x30, [sp], #32
  424c48:	b	402b30 <free@plt>
  424c4c:	stp	x29, x30, [sp, #-32]!
  424c50:	mov	x29, sp
  424c54:	ldr	x0, [x0]
  424c58:	stp	x19, x20, [sp, #16]
  424c5c:	mov	x19, x1
  424c60:	ldr	x1, [x0, #8]
  424c64:	cbz	x1, 424cbc <ferror@plt+0x21eec>
  424c68:	ldr	x20, [x0, #24]
  424c6c:	ldrb	w0, [x20, #210]
  424c70:	cbnz	w0, 424cbc <ferror@plt+0x21eec>
  424c74:	ldr	x0, [x20, #56]
  424c78:	cbnz	x0, 424cbc <ferror@plt+0x21eec>
  424c7c:	ldrh	w0, [x20, #208]
  424c80:	cmp	w0, #0x1
  424c84:	b.ne	424cbc <ferror@plt+0x21eec>  // b.any
  424c88:	ldrb	w0, [x20, #212]
  424c8c:	cbnz	w0, 424cbc <ferror@plt+0x21eec>
  424c90:	ldr	x0, [x19]
  424c94:	cbnz	x0, 424ca8 <ferror@plt+0x21ed8>
  424c98:	ldr	x0, [x19, #8]
  424c9c:	mov	x1, #0x8                   	// #8
  424ca0:	bl	4452a0 <_obstack_memory_used@@Base+0x89c>
  424ca4:	stp	x0, xzr, [x19]
  424ca8:	ldp	x1, x0, [x19]
  424cac:	add	x2, x0, #0x1
  424cb0:	str	x2, [x19, #8]
  424cb4:	ldr	x2, [x20, #8]
  424cb8:	str	x2, [x1, x0, lsl #3]
  424cbc:	mov	w0, #0x1                   	// #1
  424cc0:	ldp	x19, x20, [sp, #16]
  424cc4:	ldp	x29, x30, [sp], #32
  424cc8:	ret
  424ccc:	stp	x29, x30, [sp, #-16]!
  424cd0:	mov	x29, sp
  424cd4:	bl	4436a0 <ferror@plt+0x408d0>
  424cd8:	cmp	w0, #0x0
  424cdc:	cset	w0, eq  // eq = none
  424ce0:	ldp	x29, x30, [sp], #16
  424ce4:	ret
  424ce8:	stp	x29, x30, [sp, #-16]!
  424cec:	mov	x29, sp
  424cf0:	ldr	x2, [x0, #24]
  424cf4:	ldr	x0, [x0, #8]
  424cf8:	cbz	x0, 424d14 <ferror@plt+0x21f44>
  424cfc:	ldr	x0, [x2]
  424d00:	bl	4436a0 <ferror@plt+0x408d0>
  424d04:	cmp	w0, #0x0
  424d08:	cset	w0, eq  // eq = none
  424d0c:	ldp	x29, x30, [sp], #16
  424d10:	ret
  424d14:	ldr	x0, [x2, #8]
  424d18:	b	424d00 <ferror@plt+0x21f30>
  424d1c:	stp	x29, x30, [sp, #-64]!
  424d20:	mov	x29, sp
  424d24:	stp	x19, x20, [sp, #16]
  424d28:	ldr	w19, [x1, #16]
  424d2c:	stp	x21, x22, [sp, #32]
  424d30:	mov	x22, x1
  424d34:	str	x23, [sp, #48]
  424d38:	mov	x23, x0
  424d3c:	bl	402700 <strlen@plt>
  424d40:	mov	x21, x0
  424d44:	add	x0, x19, #0x2
  424d48:	add	x0, x0, x21
  424d4c:	bl	44526c <_obstack_memory_used@@Base+0x868>
  424d50:	ldr	x1, [x22, #8]
  424d54:	mov	x20, x0
  424d58:	mov	x2, x19
  424d5c:	bl	4026a0 <memcpy@plt>
  424d60:	cbz	x19, 424d80 <ferror@plt+0x21fb0>
  424d64:	add	x0, x20, x19
  424d68:	ldurb	w0, [x0, #-1]
  424d6c:	cmp	w0, #0x2f
  424d70:	b.eq	424d80 <ferror@plt+0x21fb0>  // b.none
  424d74:	mov	w0, #0x2f                  	// #47
  424d78:	strb	w0, [x20, x19]
  424d7c:	add	x19, x19, #0x1
  424d80:	add	x2, x21, #0x1
  424d84:	mov	x1, x23
  424d88:	add	x0, x20, x19
  424d8c:	bl	4026a0 <memcpy@plt>
  424d90:	mov	x0, x20
  424d94:	ldp	x19, x20, [sp, #16]
  424d98:	ldp	x21, x22, [sp, #32]
  424d9c:	ldr	x23, [sp, #48]
  424da0:	ldp	x29, x30, [sp], #64
  424da4:	ret
  424da8:	stp	x29, x30, [sp, #-80]!
  424dac:	mov	x29, sp
  424db0:	stp	x19, x20, [sp, #16]
  424db4:	stp	x21, x22, [sp, #32]
  424db8:	mov	w21, w0
  424dbc:	mov	x0, #0x15                  	// #21
  424dc0:	stp	x23, x24, [sp, #48]
  424dc4:	mov	x23, x1
  424dc8:	adrp	x24, 46c000 <_obstack_memory_used@@Base+0x275fc>
  424dcc:	str	x25, [sp, #64]
  424dd0:	bl	44526c <_obstack_memory_used@@Base+0x868>
  424dd4:	add	x24, x24, #0xb08
  424dd8:	mov	x20, x0
  424ddc:	and	x0, x21, #0xff
  424de0:	mov	x19, x20
  424de4:	ldrh	w0, [x24, x0, lsl #1]
  424de8:	tst	w0, #0xc00
  424dec:	b.ne	424e4c <ferror@plt+0x2207c>  // b.any
  424df0:	mov	w22, #0x14                  	// #20
  424df4:	strb	w21, [x19], #1
  424df8:	mov	x0, x23
  424dfc:	bl	4029e0 <getc_unlocked@plt>
  424e00:	mov	w21, w0
  424e04:	cmn	w0, #0x1
  424e08:	b.eq	424e4c <ferror@plt+0x2207c>  // b.none
  424e0c:	and	x0, x0, #0xff
  424e10:	ldrh	w0, [x24, x0, lsl #1]
  424e14:	tst	w0, #0xc00
  424e18:	b.ne	424e4c <ferror@plt+0x2207c>  // b.any
  424e1c:	sub	x25, x19, x20
  424e20:	cmp	x25, w22, sxtw
  424e24:	b.ne	424e44 <ferror@plt+0x22074>  // b.any
  424e28:	lsl	w22, w22, #1
  424e2c:	mov	x0, x20
  424e30:	add	w1, w22, #0x1
  424e34:	sxtw	x1, w1
  424e38:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  424e3c:	mov	x20, x0
  424e40:	add	x19, x0, x25
  424e44:	strb	w21, [x19], #1
  424e48:	b	424df8 <ferror@plt+0x22028>
  424e4c:	strb	wzr, [x19]
  424e50:	mov	x1, x23
  424e54:	mov	w0, w21
  424e58:	bl	402b40 <ungetc@plt>
  424e5c:	mov	x0, x20
  424e60:	ldp	x19, x20, [sp, #16]
  424e64:	ldp	x21, x22, [sp, #32]
  424e68:	ldp	x23, x24, [sp, #48]
  424e6c:	ldr	x25, [sp, #64]
  424e70:	ldp	x29, x30, [sp], #80
  424e74:	ret
  424e78:	stp	x29, x30, [sp, #-80]!
  424e7c:	mov	x29, sp
  424e80:	stp	x19, x20, [sp, #16]
  424e84:	mov	x20, x0
  424e88:	ldr	w19, [x0, #16]
  424e8c:	stp	x21, x22, [sp, #32]
  424e90:	add	x0, x19, #0x1b
  424e94:	ldr	x1, [x20, #8]
  424e98:	and	x0, x0, #0x1fffffff0
  424e9c:	stp	x23, x24, [sp, #48]
  424ea0:	mov	x2, x19
  424ea4:	stp	x25, x26, [sp, #64]
  424ea8:	sub	sp, sp, x0
  424eac:	mov	x21, sp
  424eb0:	mov	x0, x21
  424eb4:	bl	4026a0 <memcpy@plt>
  424eb8:	cbz	x19, 424ed8 <ferror@plt+0x22108>
  424ebc:	add	x0, x21, x19
  424ec0:	ldurb	w0, [x0, #-1]
  424ec4:	cmp	w0, #0x2f
  424ec8:	b.eq	424ed8 <ferror@plt+0x22108>  // b.none
  424ecc:	mov	w0, #0x2f                  	// #47
  424ed0:	strb	w0, [x21, x19]
  424ed4:	add	x19, x19, #0x1
  424ed8:	add	x0, x21, x19
  424edc:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x225fc>
  424ee0:	add	x1, x1, #0xa48
  424ee4:	bl	402bd0 <strcpy@plt>
  424ee8:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  424eec:	add	x1, x1, #0x45
  424ef0:	mov	x0, x21
  424ef4:	bl	4437a4 <ferror@plt+0x409d4>
  424ef8:	mov	x21, x0
  424efc:	mov	x0, #0x48                  	// #72
  424f00:	bl	44526c <_obstack_memory_used@@Base+0x868>
  424f04:	str	x0, [x20, #32]
  424f08:	mov	x19, #0x0                   	// #0
  424f0c:	cbnz	x21, 424ff0 <ferror@plt+0x22220>
  424f10:	ldr	x0, [x20, #32]
  424f14:	str	xzr, [x0, x19, lsl #3]
  424f18:	mov	sp, x29
  424f1c:	ldp	x19, x20, [sp, #16]
  424f20:	ldp	x21, x22, [sp, #32]
  424f24:	ldp	x23, x24, [sp, #48]
  424f28:	ldp	x25, x26, [sp, #64]
  424f2c:	ldp	x29, x30, [sp], #80
  424f30:	ret
  424f34:	mov	x19, x25
  424f38:	mov	x0, x21
  424f3c:	bl	4029e0 <getc_unlocked@plt>
  424f40:	mov	w22, w0
  424f44:	cmn	w0, #0x1
  424f48:	b.eq	425018 <ferror@plt+0x22248>  // b.none
  424f4c:	and	x0, x0, #0xff
  424f50:	ldrh	w0, [x24, x0, lsl #1]
  424f54:	tst	w0, #0xc00
  424f58:	b.ne	424f38 <ferror@plt+0x22168>  // b.any
  424f5c:	add	x25, x19, #0x2
  424f60:	cmp	x25, x23
  424f64:	b.ls	424f7c <ferror@plt+0x221ac>  // b.plast
  424f68:	ldr	x0, [x20, #32]
  424f6c:	add	x23, x23, #0x8
  424f70:	lsl	x1, x23, #3
  424f74:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  424f78:	str	x0, [x20, #32]
  424f7c:	ldr	x26, [x20, #32]
  424f80:	lsl	x19, x19, #3
  424f84:	mov	x1, x21
  424f88:	mov	w0, w22
  424f8c:	bl	424da8 <ferror@plt+0x21fd8>
  424f90:	str	x0, [x26, x19]
  424f94:	mov	x0, x21
  424f98:	bl	4029e0 <getc_unlocked@plt>
  424f9c:	cmn	w0, #0x1
  424fa0:	b.eq	424fb0 <ferror@plt+0x221e0>  // b.none
  424fa4:	and	x1, x0, #0xff
  424fa8:	ldrh	w1, [x24, x1, lsl #1]
  424fac:	tbnz	w1, #0, 424f94 <ferror@plt+0x221c4>
  424fb0:	mov	x1, x21
  424fb4:	bl	424da8 <ferror@plt+0x21fd8>
  424fb8:	ldrb	w1, [x0]
  424fbc:	mov	x22, x0
  424fc0:	add	x19, x19, #0x8
  424fc4:	cmp	w1, #0x2f
  424fc8:	ldr	x26, [x20, #32]
  424fcc:	b.ne	425000 <ferror@plt+0x22230>  // b.any
  424fd0:	str	x0, [x26, x19]
  424fd4:	mov	x0, x21
  424fd8:	bl	4029e0 <getc_unlocked@plt>
  424fdc:	cmp	w0, #0xa
  424fe0:	b.eq	424f34 <ferror@plt+0x22164>  // b.none
  424fe4:	cmn	w0, #0x1
  424fe8:	b.ne	424fd4 <ferror@plt+0x22204>  // b.any
  424fec:	b	424f34 <ferror@plt+0x22164>
  424ff0:	adrp	x24, 46c000 <_obstack_memory_used@@Base+0x275fc>
  424ff4:	mov	x23, #0x9                   	// #9
  424ff8:	add	x24, x24, #0xb08
  424ffc:	b	424f38 <ferror@plt+0x22168>
  425000:	mov	x1, x20
  425004:	bl	424d1c <ferror@plt+0x21f4c>
  425008:	str	x0, [x26, x19]
  42500c:	mov	x0, x22
  425010:	bl	402b30 <free@plt>
  425014:	b	424fd4 <ferror@plt+0x22204>
  425018:	mov	x0, x21
  42501c:	bl	402830 <fclose@plt>
  425020:	b	424f10 <ferror@plt+0x22140>
  425024:	ldr	x0, [x0]
  425028:	ldr	x1, [x1]
  42502c:	b	402ad0 <strcmp@plt>
  425030:	stp	x29, x30, [sp, #-32]!
  425034:	mov	x29, sp
  425038:	str	x19, [sp, #16]
  42503c:	mov	x19, x0
  425040:	ldr	x0, [x0, #8]
  425044:	ldrb	w1, [x0]
  425048:	cbnz	w1, 42508c <ferror@plt+0x222bc>
  42504c:	str	wzr, [x19, #200]
  425050:	ldr	w0, [x19, #200]
  425054:	cmn	w0, #0x1
  425058:	b.eq	4250d0 <ferror@plt+0x22300>  // b.none
  42505c:	add	x1, x19, #0x48
  425060:	bl	45ea88 <_obstack_memory_used@@Base+0x1a084>
  425064:	cbnz	w0, 4250ac <ferror@plt+0x222dc>
  425068:	ldr	w0, [x19, #88]
  42506c:	and	w0, w0, #0xf000
  425070:	cmp	w0, #0x4, lsl #12
  425074:	b.eq	4250a0 <ferror@plt+0x222d0>  // b.none
  425078:	mov	w0, #0x1                   	// #1
  42507c:	str	wzr, [x19, #204]
  425080:	ldr	x19, [sp, #16]
  425084:	ldp	x29, x30, [sp], #32
  425088:	ret
  42508c:	mov	w2, #0x1b6                 	// #438
  425090:	mov	w1, #0x100                 	// #256
  425094:	bl	4028a0 <open@plt>
  425098:	str	w0, [x19, #200]
  42509c:	b	425050 <ferror@plt+0x22280>
  4250a0:	bl	402cf0 <__errno_location@plt>
  4250a4:	mov	w1, #0x2                   	// #2
  4250a8:	str	w1, [x0]
  4250ac:	ldr	w0, [x19, #200]
  4250b0:	bl	402a00 <close@plt>
  4250b4:	mov	w0, #0xffffffff            	// #-1
  4250b8:	str	w0, [x19, #200]
  4250bc:	bl	402cf0 <__errno_location@plt>
  4250c0:	ldr	w0, [x0]
  4250c4:	str	w0, [x19, #204]
  4250c8:	mov	w0, #0x0                   	// #0
  4250cc:	b	425080 <ferror@plt+0x222b0>
  4250d0:	bl	402cf0 <__errno_location@plt>
  4250d4:	ldr	w1, [x0]
  4250d8:	cmp	w1, #0x14
  4250dc:	b.ne	4250bc <ferror@plt+0x222ec>  // b.any
  4250e0:	mov	w1, #0x2                   	// #2
  4250e4:	str	w1, [x0]
  4250e8:	b	4250bc <ferror@plt+0x222ec>
  4250ec:	stp	x29, x30, [sp, #-80]!
  4250f0:	mov	x29, sp
  4250f4:	stp	x19, x20, [sp, #16]
  4250f8:	mov	x20, x0
  4250fc:	mov	x19, x1
  425100:	stp	x21, x22, [sp, #32]
  425104:	mov	x0, x1
  425108:	mov	x22, x2
  42510c:	stp	x23, x24, [sp, #48]
  425110:	stp	x25, x26, [sp, #64]
  425114:	ldr	x24, [x1, #8]
  425118:	str	x2, [x1, #8]
  42511c:	bl	425030 <ferror@plt+0x22260>
  425120:	ands	w21, w0, #0xff
  425124:	b.eq	4251b0 <ferror@plt+0x223e0>  // b.none
  425128:	ldr	w2, [x19, #200]
  42512c:	mov	x1, x22
  425130:	ldr	x3, [x20, #968]
  425134:	mov	x0, x20
  425138:	blr	x3
  42513c:	and	w21, w0, #0x1
  425140:	mov	w25, w21
  425144:	tbnz	w0, #0, 425158 <ferror@plt+0x22388>
  425148:	ldr	w0, [x19, #200]
  42514c:	bl	402a00 <close@plt>
  425150:	mov	w0, #0xffffffff            	// #-1
  425154:	str	w0, [x19, #200]
  425158:	ldrb	w0, [x20, #1131]
  42515c:	cbz	w0, 4251b0 <ferror@plt+0x223e0>
  425160:	mov	w23, #0x1                   	// #1
  425164:	adrp	x26, 495000 <_obstack_memory_used@@Base+0x505fc>
  425168:	ldr	x1, [x20, #40]
  42516c:	ldr	x0, [x26, #1440]
  425170:	ldr	w1, [x1, #48]
  425174:	cmp	w1, w23
  425178:	b.ls	425190 <ferror@plt+0x223c0>  // b.plast
  42517c:	mov	x1, x0
  425180:	add	w23, w23, #0x1
  425184:	mov	w0, #0x2e                  	// #46
  425188:	bl	402810 <putc_unlocked@plt>
  42518c:	b	425168 <ferror@plt+0x22398>
  425190:	cmp	w25, #0x0
  425194:	mov	w1, #0x78                  	// #120
  425198:	mov	w2, #0x21                  	// #33
  42519c:	mov	x3, x22
  4251a0:	csel	w2, w2, w1, ne  // ne = any
  4251a4:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x225fc>
  4251a8:	add	x1, x1, #0x937
  4251ac:	bl	402d90 <fprintf@plt>
  4251b0:	mov	w0, w21
  4251b4:	ldp	x21, x22, [sp, #32]
  4251b8:	ldp	x25, x26, [sp, #64]
  4251bc:	str	x24, [x19, #8]
  4251c0:	ldp	x19, x20, [sp, #16]
  4251c4:	ldp	x23, x24, [sp, #48]
  4251c8:	ldp	x29, x30, [sp], #80
  4251cc:	ret
  4251d0:	stp	x29, x30, [sp, #-64]!
  4251d4:	mov	x29, sp
  4251d8:	stp	x19, x20, [sp, #16]
  4251dc:	mov	x19, x0
  4251e0:	mov	x20, x1
  4251e4:	ldr	x0, [x0, #40]
  4251e8:	stp	x21, x22, [sp, #32]
  4251ec:	mov	w21, w3
  4251f0:	stp	x23, x24, [sp, #48]
  4251f4:	mov	w23, w2
  4251f8:	ldr	w0, [x0, #60]
  4251fc:	cmp	w0, #0x1
  425200:	b.ls	42528c <ferror@plt+0x224bc>  // b.plast
  425204:	ldr	x0, [x19]
  425208:	cbz	x0, 42528c <ferror@plt+0x224bc>
  42520c:	ldrb	w22, [x0, #106]
  425210:	ldrb	w0, [x19, #26]
  425214:	cbnz	w0, 4252b8 <ferror@plt+0x224e8>
  425218:	bl	402cf0 <__errno_location@plt>
  42521c:	orr	w22, w22, w23
  425220:	ldr	w1, [x20, #204]
  425224:	cmp	w22, #0x0
  425228:	ldr	w24, [x19, #1200]
  42522c:	str	w1, [x0]
  425230:	cset	w0, ne  // ne = any
  425234:	cmp	w24, w0
  425238:	b.le	425294 <ferror@plt+0x224c4>
  42523c:	ldrb	w0, [x19, #1204]
  425240:	cbz	w0, 425260 <ferror@plt+0x22490>
  425244:	cmp	w1, #0x2
  425248:	b.ne	425260 <ferror@plt+0x22490>  // b.any
  42524c:	ldr	x1, [x20]
  425250:	ldr	x0, [x19, #712]
  425254:	bl	431230 <ferror@plt+0x2e460>
  425258:	ldrb	w0, [x19, #1207]
  42525c:	cbz	w0, 4252b8 <ferror@plt+0x224e8>
  425260:	ldr	x2, [x20, #8]
  425264:	cbnz	x2, 42526c <ferror@plt+0x2249c>
  425268:	ldr	x2, [x20]
  42526c:	mov	w3, w21
  425270:	mov	w1, #0x6                   	// #6
  425274:	mov	x0, x19
  425278:	ldp	x19, x20, [sp, #16]
  42527c:	ldp	x21, x22, [sp, #32]
  425280:	ldp	x23, x24, [sp, #48]
  425284:	ldp	x29, x30, [sp], #64
  425288:	b	421b14 <ferror@plt+0x1ed44>
  42528c:	mov	w22, #0x0                   	// #0
  425290:	b	425210 <ferror@plt+0x22440>
  425294:	cbz	w24, 425260 <ferror@plt+0x22490>
  425298:	ldrb	w0, [x19, #1207]
  42529c:	cbnz	w0, 425260 <ferror@plt+0x22490>
  4252a0:	ldr	x2, [x20, #8]
  4252a4:	cbnz	x2, 4252ac <ferror@plt+0x224dc>
  4252a8:	ldr	x2, [x20]
  4252ac:	mov	w3, w21
  4252b0:	mov	w1, #0x0                   	// #0
  4252b4:	b	425274 <ferror@plt+0x224a4>
  4252b8:	ldp	x19, x20, [sp, #16]
  4252bc:	ldp	x21, x22, [sp, #32]
  4252c0:	ldp	x23, x24, [sp, #48]
  4252c4:	ldp	x29, x30, [sp], #64
  4252c8:	ret
  4252cc:	mov	x2, #0x20                  	// #32
  4252d0:	b	402a90 <memcmp@plt>
  4252d4:	stp	x29, x30, [sp, #-32]!
  4252d8:	mov	x29, sp
  4252dc:	str	x19, [sp, #16]
  4252e0:	mov	x19, x0
  4252e4:	ldr	x0, [x0, #312]
  4252e8:	ldr	w0, [x0]
  4252ec:	cmp	w0, #0x7f
  4252f0:	b.ne	42530c <ferror@plt+0x2253c>  // b.any
  4252f4:	mov	x0, #0xff0                 	// #4080
  4252f8:	bl	44526c <_obstack_memory_used@@Base+0x868>
  4252fc:	ldr	x1, [x19, #312]
  425300:	str	wzr, [x0]
  425304:	str	x1, [x0, #8]
  425308:	str	x0, [x19, #312]
  42530c:	ldr	x0, [x19, #312]
  425310:	ldr	x19, [sp, #16]
  425314:	ldr	w1, [x0]
  425318:	add	w2, w1, #0x1
  42531c:	str	w2, [x0]
  425320:	ubfiz	x1, x1, #5, #32
  425324:	add	x1, x1, #0x10
  425328:	add	x0, x0, x1
  42532c:	ldp	x29, x30, [sp], #32
  425330:	ret
  425334:	stp	x29, x30, [sp, #-64]!
  425338:	mov	x29, sp
  42533c:	stp	x19, x20, [sp, #16]
  425340:	mov	x20, x0
  425344:	mov	x0, x1
  425348:	stp	x21, x22, [sp, #32]
  42534c:	mov	x21, x1
  425350:	ldr	x19, [x20, #304]
  425354:	str	x23, [sp, #48]
  425358:	mov	w23, w2
  42535c:	bl	44438c <ferror@plt+0x415bc>
  425360:	mov	x1, x21
  425364:	mov	w2, w0
  425368:	mov	w3, #0x1                   	// #1
  42536c:	mov	x0, x19
  425370:	bl	444004 <ferror@plt+0x41234>
  425374:	mov	x22, x0
  425378:	ldr	x0, [x0]
  42537c:	cbz	x0, 4253ac <ferror@plt+0x225dc>
  425380:	ldr	x1, [x0, #8]
  425384:	cbnz	x1, 4253a4 <ferror@plt+0x225d4>
  425388:	ldr	x19, [x0, #24]
  42538c:	mov	x0, x19
  425390:	ldp	x19, x20, [sp, #16]
  425394:	ldp	x21, x22, [sp, #32]
  425398:	ldr	x23, [sp, #48]
  42539c:	ldp	x29, x30, [sp], #64
  4253a0:	ret
  4253a4:	ldr	x0, [x0]
  4253a8:	b	42537c <ferror@plt+0x225ac>
  4253ac:	mov	x1, #0x40                  	// #64
  4253b0:	mov	x0, #0x1                   	// #1
  4253b4:	bl	4452a0 <_obstack_memory_used@@Base+0x89c>
  4253b8:	mov	x19, x0
  4253bc:	ldr	x0, [x20, #200]
  4253c0:	stp	x0, x21, [x19]
  4253c4:	mov	x0, x21
  4253c8:	bl	402700 <strlen@plt>
  4253cc:	str	w0, [x19, #16]
  4253d0:	strb	w23, [x19, #20]
  4253d4:	mov	x0, x20
  4253d8:	str	xzr, [x19, #40]
  4253dc:	bl	4252d4 <ferror@plt+0x22504>
  4253e0:	ldr	x1, [x22]
  4253e4:	stp	x1, xzr, [x0]
  4253e8:	ldr	x1, [x20, #40]
  4253ec:	ldr	w1, [x1, #56]
  4253f0:	str	w1, [x0, #16]
  4253f4:	str	x19, [x0, #24]
  4253f8:	str	x0, [x22]
  4253fc:	b	42538c <ferror@plt+0x225bc>
  425400:	stp	x29, x30, [sp, #-48]!
  425404:	mov	x29, sp
  425408:	stp	x19, x20, [sp, #16]
  42540c:	mov	x19, x0
  425410:	stp	x21, x22, [sp, #32]
  425414:	ldrb	w0, [x1]
  425418:	cmp	w0, #0x2f
  42541c:	b.ne	425438 <ferror@plt+0x22668>  // b.any
  425420:	add	x20, x19, #0xd8
  425424:	mov	x0, x20
  425428:	ldp	x19, x20, [sp, #16]
  42542c:	ldp	x21, x22, [sp, #32]
  425430:	ldp	x29, x30, [sp], #48
  425434:	ret
  425438:	ldr	x0, [x19]
  42543c:	cbnz	x0, 425484 <ferror@plt+0x226b4>
  425440:	ldr	x20, [x19, #288]
  425444:	cmp	w3, #0x1
  425448:	b.ne	42548c <ferror@plt+0x226bc>  // b.any
  42544c:	ldr	x0, [x20, #64]
  425450:	cbz	x0, 425514 <ferror@plt+0x22744>
  425454:	add	x3, x19, #0xd8
  425458:	cmp	x0, x3
  42545c:	b.eq	425514 <ferror@plt+0x22744>  // b.none
  425460:	ldr	x20, [x0]
  425464:	cbnz	x20, 425424 <ferror@plt+0x22654>
  425468:	mov	x3, x1
  42546c:	mov	x0, x19
  425470:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  425474:	mov	w1, #0x3                   	// #3
  425478:	add	x2, x2, #0x941
  42547c:	bl	421610 <ferror@plt+0x1e840>
  425480:	b	425424 <ferror@plt+0x22654>
  425484:	ldr	x20, [x0, #80]
  425488:	b	425444 <ferror@plt+0x22674>
  42548c:	cbz	w2, 425498 <ferror@plt+0x226c8>
  425490:	ldr	x20, [x19, #208]
  425494:	b	425464 <ferror@plt+0x22694>
  425498:	cmp	w3, #0x3
  42549c:	b.ne	425518 <ferror@plt+0x22748>  // b.any
  4254a0:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x225fc>
  4254a4:	add	x1, x1, #0x93e
  4254a8:	mov	w2, #0x0                   	// #0
  4254ac:	mov	x0, x19
  4254b0:	ldp	x19, x20, [sp, #16]
  4254b4:	ldp	x21, x22, [sp, #32]
  4254b8:	ldp	x29, x30, [sp], #48
  4254bc:	b	425334 <ferror@plt+0x22564>
  4254c0:	ldr	x0, [x20, #24]
  4254c4:	cbnz	x0, 4254f8 <ferror@plt+0x22728>
  4254c8:	ldr	x0, [x20, #8]
  4254cc:	bl	4446b4 <ferror@plt+0x418e4>
  4254d0:	ldr	x21, [x20, #8]
  4254d4:	sub	x21, x0, x21
  4254d8:	add	x0, x21, #0x1
  4254dc:	bl	44526c <_obstack_memory_used@@Base+0x868>
  4254e0:	ldr	x1, [x20, #8]
  4254e4:	mov	x22, x0
  4254e8:	mov	x2, x21
  4254ec:	bl	4026a0 <memcpy@plt>
  4254f0:	strb	wzr, [x22, x21]
  4254f4:	str	x22, [x20, #24]
  4254f8:	ldr	x0, [x19]
  4254fc:	ldr	x1, [x20, #24]
  425500:	cbz	x0, 42550c <ferror@plt+0x2273c>
  425504:	ldrb	w2, [x0, #106]
  425508:	b	4254ac <ferror@plt+0x226dc>
  42550c:	mov	w2, #0x0                   	// #0
  425510:	b	4254ac <ferror@plt+0x226dc>
  425514:	cbnz	w2, 425490 <ferror@plt+0x226c0>
  425518:	ldrb	w0, [x19, #416]
  42551c:	cbz	w0, 4254c0 <ferror@plt+0x226f0>
  425520:	ldr	x20, [x19, #200]
  425524:	b	425464 <ferror@plt+0x22694>
  425528:	stp	x29, x30, [sp, #-48]!
  42552c:	mov	x2, #0x8                   	// #8
  425530:	mov	x29, sp
  425534:	stp	x19, x20, [sp, #16]
  425538:	mov	x19, x0
  42553c:	mov	x20, x1
  425540:	str	x21, [sp, #32]
  425544:	bl	402a90 <memcmp@plt>
  425548:	cbnz	w0, 425598 <ferror@plt+0x227c8>
  42554c:	ldrb	w0, [x19, #24]
  425550:	add	x21, x19, #0x8
  425554:	cbnz	w0, 425574 <ferror@plt+0x227a4>
  425558:	ldr	x0, [x19, #32]
  42555c:	mov	x2, x21
  425560:	ldr	x1, [x0, #120]
  425564:	ldr	x0, [x0, #40]
  425568:	bl	44126c <ferror@plt+0x3e49c>
  42556c:	mov	w0, #0x1                   	// #1
  425570:	strb	w0, [x19, #24]
  425574:	add	x1, x20, #0x8
  425578:	mov	x0, x21
  42557c:	mov	x2, #0x10                  	// #16
  425580:	bl	402a90 <memcmp@plt>
  425584:	cbnz	w0, 425598 <ferror@plt+0x227c8>
  425588:	ldrb	w1, [x19, #25]
  42558c:	cbnz	w1, 425598 <ferror@plt+0x227c8>
  425590:	ldrb	w0, [x20, #24]
  425594:	eor	w0, w0, #0x1
  425598:	ldp	x19, x20, [sp, #16]
  42559c:	ldr	x21, [sp, #32]
  4255a0:	ldp	x29, x30, [sp], #48
  4255a4:	ret
  4255a8:	stp	x29, x30, [sp, #-80]!
  4255ac:	mov	x29, sp
  4255b0:	stp	x19, x20, [sp, #16]
  4255b4:	ldrb	w20, [x1, #213]
  4255b8:	stp	x21, x22, [sp, #32]
  4255bc:	stp	x23, x24, [sp, #48]
  4255c0:	stp	x25, x26, [sp, #64]
  4255c4:	cbnz	w20, 425614 <ferror@plt+0x22844>
  4255c8:	ldrb	w24, [x1, #211]
  4255cc:	mov	x19, x1
  4255d0:	cbnz	w24, 425614 <ferror@plt+0x22844>
  4255d4:	mov	x22, x0
  4255d8:	ldr	w0, [x1, #204]
  4255dc:	cbnz	w0, 425614 <ferror@plt+0x22844>
  4255e0:	ldr	w0, [x1, #200]
  4255e4:	mov	w25, w2
  4255e8:	cmn	w0, #0x1
  4255ec:	b.ne	425630 <ferror@plt+0x22860>  // b.any
  4255f0:	mov	x0, x1
  4255f4:	bl	425030 <ferror@plt+0x22260>
  4255f8:	ands	w20, w0, #0xff
  4255fc:	b.ne	425630 <ferror@plt+0x22860>  // b.any
  425600:	mov	w3, w25
  425604:	mov	x1, x19
  425608:	mov	x0, x22
  42560c:	mov	w2, #0x0                   	// #0
  425610:	bl	4251d0 <ferror@plt+0x22400>
  425614:	mov	w0, w20
  425618:	ldp	x19, x20, [sp, #16]
  42561c:	ldp	x21, x22, [sp, #32]
  425620:	ldp	x23, x24, [sp, #48]
  425624:	ldp	x25, x26, [sp, #64]
  425628:	ldp	x29, x30, [sp], #80
  42562c:	ret
  425630:	ldr	w26, [x19, #88]
  425634:	and	w26, w26, #0xf000
  425638:	cmp	w26, #0x6, lsl #12
  42563c:	b.ne	425680 <ferror@plt+0x228b0>  // b.any
  425640:	ldr	x4, [x19, #8]
  425644:	adrp	x3, 467000 <_obstack_memory_used@@Base+0x225fc>
  425648:	mov	w2, w25
  42564c:	add	x3, x3, #0x96b
  425650:	mov	x0, x22
  425654:	mov	w1, #0x3                   	// #3
  425658:	bl	421998 <ferror@plt+0x1ebc8>
  42565c:	ldr	w0, [x19, #200]
  425660:	eor	w24, w24, #0x1
  425664:	strb	w24, [x19, #211]
  425668:	bl	402a00 <close@plt>
  42566c:	ldrb	w20, [x19, #211]
  425670:	mov	w0, #0xffffffff            	// #-1
  425674:	str	w0, [x19, #200]
  425678:	eor	w20, w20, #0x1
  42567c:	b	425614 <ferror@plt+0x22844>
  425680:	cmp	w26, #0x8, lsl #12
  425684:	b.ne	4256e0 <ferror@plt+0x22910>  // b.any
  425688:	ldr	x21, [x19, #120]
  42568c:	add	x0, x21, #0x10
  425690:	bl	44526c <_obstack_memory_used@@Base+0x868>
  425694:	mov	x20, x0
  425698:	mov	x23, #0x0                   	// #0
  42569c:	ldr	w0, [x19, #200]
  4256a0:	sub	x2, x21, x23
  4256a4:	add	x1, x20, x23
  4256a8:	bl	402c10 <read@plt>
  4256ac:	cmp	x0, #0x0
  4256b0:	b.le	4256e8 <ferror@plt+0x22918>
  4256b4:	add	x23, x23, x0
  4256b8:	cmp	x21, x23
  4256bc:	b.ne	42569c <ferror@plt+0x228cc>  // b.any
  4256c0:	cmp	w26, #0x8, lsl #12
  4256c4:	b.eq	425734 <ferror@plt+0x22964>  // b.none
  4256c8:	lsl	x21, x21, #1
  4256cc:	mov	x0, x20
  4256d0:	add	x1, x21, #0x10
  4256d4:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  4256d8:	mov	x20, x0
  4256dc:	b	42569c <ferror@plt+0x228cc>
  4256e0:	mov	x21, #0x2000                	// #8192
  4256e4:	b	42568c <ferror@plt+0x228bc>
  4256e8:	b.eq	42570c <ferror@plt+0x2293c>  // b.none
  4256ec:	ldr	x2, [x19, #8]
  4256f0:	mov	w3, w25
  4256f4:	mov	w1, #0x3                   	// #3
  4256f8:	mov	x0, x22
  4256fc:	bl	421b14 <ferror@plt+0x1ed44>
  425700:	mov	x0, x20
  425704:	bl	402b30 <free@plt>
  425708:	b	42565c <ferror@plt+0x2288c>
  42570c:	cmp	w26, #0x8, lsl #12
  425710:	ccmp	x23, x21, #0x4, eq  // eq = none
  425714:	b.eq	425734 <ferror@plt+0x22964>  // b.none
  425718:	ldr	x4, [x19, #8]
  42571c:	adrp	x3, 467000 <_obstack_memory_used@@Base+0x225fc>
  425720:	mov	w2, w25
  425724:	add	x3, x3, #0x980
  425728:	mov	x0, x22
  42572c:	mov	w1, #0x0                   	// #0
  425730:	bl	421998 <ferror@plt+0x1ebc8>
  425734:	ldr	x1, [x22, #1184]
  425738:	add	x6, x19, #0x78
  42573c:	add	x5, x19, #0x30
  425740:	mov	x4, x23
  425744:	add	x3, x21, #0x10
  425748:	mov	x2, x20
  42574c:	mov	x0, x22
  425750:	bl	41a5a8 <ferror@plt+0x177d8>
  425754:	mov	w24, #0x1                   	// #1
  425758:	str	x0, [x19, #40]
  42575c:	mov	w0, #0x1                   	// #1
  425760:	strb	w0, [x19, #213]
  425764:	b	42565c <ferror@plt+0x2288c>
  425768:	ldr	w0, [x0, #204]
  42576c:	cmp	w0, #0x0
  425770:	cset	w0, ne  // ne = any
  425774:	ret
  425778:	stp	x29, x30, [sp, #-304]!
  42577c:	mov	x29, sp
  425780:	stp	x19, x20, [sp, #16]
  425784:	mov	x20, x0
  425788:	stp	x21, x22, [sp, #32]
  42578c:	and	w21, w3, #0xff
  425790:	stp	x23, x24, [sp, #48]
  425794:	mov	x24, x2
  425798:	stp	x25, x26, [sp, #64]
  42579c:	mov	x25, x1
  4257a0:	and	w1, w5, #0xff
  4257a4:	stp	x27, x28, [sp, #80]
  4257a8:	mov	w27, w6
  4257ac:	str	w1, [sp, #120]
  4257b0:	str	w4, [sp, #156]
  4257b4:	cbnz	x2, 4257cc <ferror@plt+0x229fc>
  4257b8:	adrp	x3, 467000 <_obstack_memory_used@@Base+0x225fc>
  4257bc:	mov	w2, w6
  4257c0:	add	x3, x3, #0x99c
  4257c4:	mov	w1, #0x4                   	// #4
  4257c8:	bl	421998 <ferror@plt+0x1ebc8>
  4257cc:	ldr	x19, [x20, #296]
  4257d0:	mov	x0, x25
  4257d4:	bl	44438c <ferror@plt+0x415bc>
  4257d8:	mov	w2, w0
  4257dc:	mov	x1, x25
  4257e0:	mov	x0, x19
  4257e4:	mov	w3, #0x1                   	// #1
  4257e8:	bl	444004 <ferror@plt+0x41234>
  4257ec:	mov	x22, x0
  4257f0:	ldr	x0, [x0]
  4257f4:	cbz	x0, 425d90 <ferror@plt+0x22fc0>
  4257f8:	ldr	x1, [x0, #8]
  4257fc:	cmp	x24, x1
  425800:	b.eq	425d88 <ferror@plt+0x22fb8>  // b.none
  425804:	ldr	x0, [x0]
  425808:	b	4257f4 <ferror@plt+0x22a24>
  42580c:	mov	w0, #0x0                   	// #0
  425810:	b	425de0 <ferror@plt+0x23010>
  425814:	ldr	w0, [sp, #120]
  425818:	b	425de0 <ferror@plt+0x23010>
  42581c:	add	x21, x21, #0x2
  425820:	b	425e30 <ferror@plt+0x23060>
  425824:	ldrb	w0, [x28]
  425828:	cmp	w0, #0x2f
  42582c:	b.eq	4258f8 <ferror@plt+0x22b28>  // b.none
  425830:	mov	x0, x28
  425834:	mov	w1, #0x2f                  	// #47
  425838:	bl	402b60 <strchr@plt>
  42583c:	cmp	x0, #0x0
  425840:	mov	x21, x0
  425844:	ccmp	x28, x0, #0x4, ne  // ne = any
  425848:	b.eq	4258f8 <ferror@plt+0x22b28>  // b.none
  42584c:	ldr	w5, [x23, #16]
  425850:	sub	x6, x0, x28
  425854:	add	x6, x6, #0x1
  425858:	str	x6, [sp, #168]
  42585c:	add	x5, x5, x6
  425860:	str	x5, [sp, #136]
  425864:	add	x0, x5, #0x2
  425868:	bl	44526c <_obstack_memory_used@@Base+0x868>
  42586c:	str	x0, [sp, #128]
  425870:	ldr	w2, [x23, #16]
  425874:	ldr	x1, [x23, #8]
  425878:	add	x7, x0, x2
  42587c:	stp	x2, x7, [sp, #104]
  425880:	bl	4026a0 <memcpy@plt>
  425884:	ldr	w0, [x23, #16]
  425888:	ldr	x7, [sp, #112]
  42588c:	ldp	x4, x5, [sp, #128]
  425890:	ldr	x6, [sp, #168]
  425894:	cbz	w0, 4258c0 <ferror@plt+0x22af0>
  425898:	ldr	x1, [x23, #8]
  42589c:	sub	w0, w0, #0x1
  4258a0:	ldrb	w0, [x1, x0]
  4258a4:	cmp	w0, #0x2f
  4258a8:	b.eq	4258c0 <ferror@plt+0x22af0>  // b.none
  4258ac:	ldr	x2, [sp, #104]
  4258b0:	add	x5, x5, #0x1
  4258b4:	add	x7, x7, #0x1
  4258b8:	mov	w0, #0x2f                  	// #47
  4258bc:	strb	w0, [x4, x2]
  4258c0:	mov	x2, x6
  4258c4:	mov	x1, x28
  4258c8:	mov	x0, x7
  4258cc:	stp	x5, x4, [sp, #104]
  4258d0:	bl	4026a0 <memcpy@plt>
  4258d4:	ldp	x5, x4, [sp, #104]
  4258d8:	mov	x0, x20
  4258dc:	add	x28, x21, #0x1
  4258e0:	strb	wzr, [x4, x5]
  4258e4:	mov	x1, x4
  4258e8:	ldrb	w2, [x23, #20]
  4258ec:	bl	425334 <ferror@plt+0x22564>
  4258f0:	mov	x23, x0
  4258f4:	b	425e1c <ferror@plt+0x2304c>
  4258f8:	ldr	x1, [x19, #64]
  4258fc:	ldr	x0, [x19]
  425900:	ldr	x2, [x1, #40]
  425904:	cbz	x2, 425924 <ferror@plt+0x22b54>
  425908:	blr	x2
  42590c:	mov	x21, x0
  425910:	cbnz	x0, 425e5c <ferror@plt+0x2308c>
  425914:	mov	w0, #0x2                   	// #2
  425918:	str	xzr, [x19, #8]
  42591c:	str	w0, [x19, #204]
  425920:	b	425ec8 <ferror@plt+0x230f8>
  425924:	bl	424d1c <ferror@plt+0x21f4c>
  425928:	b	42590c <ferror@plt+0x22b3c>
  42592c:	mov	x0, x21
  425930:	mov	x21, x23
  425934:	bl	402b30 <free@plt>
  425938:	b	425ea0 <ferror@plt+0x230d0>
  42593c:	ldr	x0, [x19]
  425940:	str	x21, [x19, #8]
  425944:	ldrb	w0, [x0]
  425948:	cbz	w0, 425a00 <ferror@plt+0x22c30>
  42594c:	ldr	x0, [x20, #968]
  425950:	cbz	x0, 425a00 <ferror@plt+0x22c30>
  425954:	ldr	x0, [x20, #280]
  425958:	cbz	x0, 425974 <ferror@plt+0x22ba4>
  42595c:	ldrb	w1, [x0, #214]
  425960:	cbz	w1, 42596c <ferror@plt+0x22b9c>
  425964:	ldr	x0, [x0, #32]
  425968:	b	425958 <ferror@plt+0x22b88>
  42596c:	ldrb	w0, [x0, #212]
  425970:	cbz	w0, 425a00 <ferror@plt+0x22c30>
  425974:	mov	x0, x21
  425978:	bl	402700 <strlen@plt>
  42597c:	mov	x28, x0
  425980:	add	x0, x0, #0x5
  425984:	str	x0, [sp, #104]
  425988:	bl	44526c <_obstack_memory_used@@Base+0x868>
  42598c:	mov	x1, x21
  425990:	mov	x23, x0
  425994:	mov	x2, x28
  425998:	bl	4026a0 <memcpy@plt>
  42599c:	add	x0, x23, x28
  4259a0:	str	x0, [sp, #136]
  4259a4:	ldp	x1, x0, [sp, #136]
  4259a8:	ldr	w0, [x0]
  4259ac:	str	w0, [x23, x28]
  4259b0:	ldr	x0, [sp, #144]
  4259b4:	ldrb	w0, [x0, #4]
  4259b8:	strb	w0, [x1, #4]
  4259bc:	add	x1, sp, #0xb0
  4259c0:	mov	x0, x23
  4259c4:	bl	45ea78 <_obstack_memory_used@@Base+0x1a074>
  4259c8:	cbnz	w0, 4259f8 <ferror@plt+0x22c28>
  4259cc:	ldr	w0, [sp, #192]
  4259d0:	and	w0, w0, #0xf000
  4259d4:	cmp	w0, #0x4, lsl #12
  4259d8:	b.eq	425af8 <ferror@plt+0x22d28>  // b.none
  4259dc:	mov	x1, x19
  4259e0:	mov	x2, x23
  4259e4:	mov	x0, x20
  4259e8:	bl	4250ec <ferror@plt+0x2231c>
  4259ec:	and	w1, w0, #0xff
  4259f0:	cbnz	w1, 425d80 <ferror@plt+0x22fb0>
  4259f4:	mov	w26, #0x1                   	// #1
  4259f8:	mov	x0, x23
  4259fc:	bl	402b30 <free@plt>
  425a00:	mov	x0, x19
  425a04:	bl	425030 <ferror@plt+0x22260>
  425a08:	tst	w0, #0xff
  425a0c:	b.ne	425a30 <ferror@plt+0x22c60>  // b.any
  425a10:	ldr	w0, [x19, #204]
  425a14:	cmp	w0, #0x2
  425a18:	b.eq	425bd4 <ferror@plt+0x22e04>  // b.none
  425a1c:	mov	w3, w27
  425a20:	mov	w2, #0x0                   	// #0
  425a24:	mov	x1, x19
  425a28:	mov	x0, x20
  425a2c:	bl	4251d0 <ferror@plt+0x22400>
  425a30:	ldr	x0, [x20, #280]
  425a34:	mov	x21, #0x0                   	// #0
  425a38:	str	x0, [x19, #32]
  425a3c:	str	x19, [x20, #280]
  425a40:	mov	x0, x20
  425a44:	bl	4252d4 <ferror@plt+0x22504>
  425a48:	ldr	x1, [x22]
  425a4c:	stp	x1, x24, [x0]
  425a50:	ldr	x1, [x20, #40]
  425a54:	ldr	w1, [x1, #56]
  425a58:	str	w1, [x0, #16]
  425a5c:	str	x19, [x0, #24]
  425a60:	str	x0, [x22]
  425a64:	ldr	w0, [sp, #152]
  425a68:	cbz	w0, 425aac <ferror@plt+0x22cdc>
  425a6c:	ldr	x0, [x20, #208]
  425a70:	cmp	x0, x24
  425a74:	b.eq	425aac <ferror@plt+0x22cdc>  // b.none
  425a78:	cmp	x0, x21
  425a7c:	b.eq	425aac <ferror@plt+0x22cdc>  // b.none
  425a80:	mov	x0, x20
  425a84:	bl	4252d4 <ferror@plt+0x22504>
  425a88:	ldr	x1, [x22]
  425a8c:	str	x1, [x0]
  425a90:	ldr	x1, [x20, #208]
  425a94:	str	x1, [x0, #8]
  425a98:	ldr	x1, [x20, #40]
  425a9c:	ldr	w1, [x1, #56]
  425aa0:	str	w1, [x0, #16]
  425aa4:	str	x19, [x0, #24]
  425aa8:	str	x0, [x22]
  425aac:	ldr	w0, [sp, #124]
  425ab0:	cbz	w0, 425f2c <ferror@plt+0x2315c>
  425ab4:	ldr	x0, [x20, #200]
  425ab8:	cmp	x0, x24
  425abc:	b.eq	425f2c <ferror@plt+0x2315c>  // b.none
  425ac0:	cmp	x0, x21
  425ac4:	b.eq	425f2c <ferror@plt+0x2315c>  // b.none
  425ac8:	mov	x0, x20
  425acc:	bl	4252d4 <ferror@plt+0x22504>
  425ad0:	ldr	x1, [x22]
  425ad4:	str	x1, [x0]
  425ad8:	ldr	x1, [x20, #200]
  425adc:	str	x1, [x0, #8]
  425ae0:	ldr	x1, [x20, #40]
  425ae4:	ldr	w1, [x1, #56]
  425ae8:	str	w1, [x0, #16]
  425aec:	str	x19, [x0, #24]
  425af0:	str	x0, [x22]
  425af4:	b	425f2c <ferror@plt+0x2315c>
  425af8:	mov	x0, x23
  425afc:	bl	4027b0 <opendir@plt>
  425b00:	str	x0, [sp, #112]
  425b04:	cbz	x0, 4259f4 <ferror@plt+0x22c24>
  425b08:	ldr	x1, [sp, #136]
  425b0c:	mov	w0, #0x2f                  	// #47
  425b10:	ldr	x26, [sp, #104]
  425b14:	strb	w0, [x1, #4]
  425b18:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x265fc>
  425b1c:	add	x0, x0, #0xebf
  425b20:	str	x0, [sp, #136]
  425b24:	ldr	x0, [sp, #112]
  425b28:	bl	402990 <readdir@plt>
  425b2c:	cbz	x0, 425bcc <ferror@plt+0x22dfc>
  425b30:	ldr	x1, [sp, #160]
  425b34:	add	x28, x0, #0x13
  425b38:	mov	x0, x28
  425b3c:	bl	402ad0 <strcmp@plt>
  425b40:	cbz	w0, 425b24 <ferror@plt+0x22d54>
  425b44:	ldr	x1, [sp, #136]
  425b48:	mov	x0, x28
  425b4c:	bl	402ad0 <strcmp@plt>
  425b50:	cbz	w0, 425b24 <ferror@plt+0x22d54>
  425b54:	mov	x0, x28
  425b58:	bl	402700 <strlen@plt>
  425b5c:	add	x2, x0, #0x1
  425b60:	ldr	x0, [sp, #104]
  425b64:	add	x0, x0, x2
  425b68:	cmp	x0, x26
  425b6c:	b.ls	425b90 <ferror@plt+0x22dc0>  // b.plast
  425b70:	add	x26, x26, #0x40
  425b74:	mov	x0, x23
  425b78:	add	x26, x2, x26
  425b7c:	str	x2, [sp, #168]
  425b80:	mov	x1, x26
  425b84:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  425b88:	ldr	x2, [sp, #168]
  425b8c:	mov	x23, x0
  425b90:	ldr	x0, [sp, #104]
  425b94:	mov	x1, x28
  425b98:	add	x0, x23, x0
  425b9c:	bl	4026a0 <memcpy@plt>
  425ba0:	mov	x1, x19
  425ba4:	mov	x2, x23
  425ba8:	mov	x0, x20
  425bac:	bl	4250ec <ferror@plt+0x2231c>
  425bb0:	ands	w1, w0, #0xff
  425bb4:	b.eq	425b24 <ferror@plt+0x22d54>  // b.none
  425bb8:	ldr	x0, [sp, #112]
  425bbc:	str	w1, [sp, #104]
  425bc0:	bl	4029d0 <closedir@plt>
  425bc4:	ldr	w1, [sp, #104]
  425bc8:	b	4259f0 <ferror@plt+0x22c20>
  425bcc:	mov	w1, #0x0                   	// #0
  425bd0:	b	425bb8 <ferror@plt+0x22de8>
  425bd4:	add	x23, x20, #0x148
  425bd8:	mov	x0, x21
  425bdc:	bl	402700 <strlen@plt>
  425be0:	add	x1, x0, #0x1
  425be4:	mov	x28, x0
  425be8:	ldp	x2, x0, [x23, #24]
  425bec:	sub	x0, x0, x2
  425bf0:	cmp	x0, x1
  425bf4:	b.cs	425c00 <ferror@plt+0x22e30>  // b.hs, b.nlast
  425bf8:	mov	x0, x23
  425bfc:	bl	444840 <_obstack_newchunk@@Base>
  425c00:	ldr	x0, [x23, #24]
  425c04:	mov	x2, x28
  425c08:	mov	x1, x21
  425c0c:	bl	4026a0 <memcpy@plt>
  425c10:	ldr	x1, [x23, #24]
  425c14:	add	x0, x1, x28
  425c18:	add	x0, x0, #0x1
  425c1c:	str	x0, [x23, #24]
  425c20:	strb	wzr, [x1, x28]
  425c24:	ldp	x28, x2, [x23, #16]
  425c28:	cmp	x28, x2
  425c2c:	b.ne	425c3c <ferror@plt+0x22e6c>  // b.any
  425c30:	ldrb	w0, [x23, #80]
  425c34:	orr	w0, w0, #0x2
  425c38:	strb	w0, [x23, #80]
  425c3c:	ldr	x0, [x23, #48]
  425c40:	ldr	x1, [x23, #32]
  425c44:	add	x2, x2, x0
  425c48:	bic	x0, x2, x0
  425c4c:	ldr	x2, [x23, #8]
  425c50:	sub	x3, x0, x2
  425c54:	sub	x2, x1, x2
  425c58:	cmp	x3, x2
  425c5c:	csel	x0, x0, x1, ls  // ls = plast
  425c60:	stp	x0, x0, [x23, #16]
  425c64:	mov	x0, x21
  425c68:	bl	402b30 <free@plt>
  425c6c:	ldr	w2, [sp, #128]
  425c70:	mov	x1, x28
  425c74:	ldr	x0, [x20, #320]
  425c78:	mov	w3, #0x1                   	// #1
  425c7c:	bl	444004 <ferror@plt+0x41234>
  425c80:	str	x28, [x0]
  425c84:	ldr	x0, [x19]
  425c88:	str	x0, [x19, #8]
  425c8c:	b	425ec8 <ferror@plt+0x230f8>
  425c90:	ldr	x0, [x19, #8]
  425c94:	bl	402b30 <free@plt>
  425c98:	ldr	x0, [x19]
  425c9c:	str	x0, [x19, #8]
  425ca0:	cbz	w26, 425cdc <ferror@plt+0x22f0c>
  425ca4:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  425ca8:	add	x2, x2, #0x9b8
  425cac:	mov	w1, #0x3                   	// #3
  425cb0:	mov	x0, x20
  425cb4:	bl	421610 <ferror@plt+0x1e840>
  425cb8:	mov	x0, x20
  425cbc:	bl	42082c <ferror@plt+0x1da5c>
  425cc0:	ldrb	w0, [x0, #84]
  425cc4:	cbnz	w0, 425cdc <ferror@plt+0x22f0c>
  425cc8:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  425ccc:	mov	x0, x20
  425cd0:	add	x2, x2, #0x9f0
  425cd4:	mov	w1, #0x3                   	// #3
  425cd8:	bl	421610 <ferror@plt+0x1e840>
  425cdc:	ldr	w0, [sp, #120]
  425ce0:	cbz	w0, 425d14 <ferror@plt+0x22f44>
  425ce4:	ldr	x0, [x19]
  425ce8:	bl	402b30 <free@plt>
  425cec:	mov	x0, x19
  425cf0:	bl	402b30 <free@plt>
  425cf4:	ldr	x0, [x22]
  425cf8:	cbnz	x0, 425d0c <ferror@plt+0x22f3c>
  425cfc:	str	x19, [x22]
  425d00:	mov	x1, x22
  425d04:	ldr	x0, [x20, #296]
  425d08:	bl	444244 <ferror@plt+0x41474>
  425d0c:	mov	x19, #0x0                   	// #0
  425d10:	b	425f2c <ferror@plt+0x2315c>
  425d14:	ldr	w2, [sp, #156]
  425d18:	mov	w3, w27
  425d1c:	b	425a24 <ferror@plt+0x22c54>
  425d20:	ldr	x1, [x20, #208]
  425d24:	cmp	x0, x1
  425d28:	b.eq	425d5c <ferror@plt+0x22f8c>  // b.none
  425d2c:	ldr	x1, [x20, #200]
  425d30:	cmp	x0, x1
  425d34:	b.ne	425e0c <ferror@plt+0x2303c>  // b.any
  425d38:	mov	w1, #0x1                   	// #1
  425d3c:	str	w1, [sp, #124]
  425d40:	ldr	x23, [x22]
  425d44:	cbz	x23, 425e0c <ferror@plt+0x2303c>
  425d48:	ldr	x21, [x23, #8]
  425d4c:	cmp	x0, x21
  425d50:	b.eq	425d68 <ferror@plt+0x22f98>  // b.none
  425d54:	ldr	x23, [x23]
  425d58:	b	425d44 <ferror@plt+0x22f74>
  425d5c:	mov	w1, #0x1                   	// #1
  425d60:	str	w1, [sp, #152]
  425d64:	b	425d40 <ferror@plt+0x22f70>
  425d68:	ldr	x0, [x19]
  425d6c:	bl	402b30 <free@plt>
  425d70:	mov	x0, x19
  425d74:	bl	402b30 <free@plt>
  425d78:	ldr	x19, [x23, #24]
  425d7c:	b	425a40 <ferror@plt+0x22c70>
  425d80:	str	x23, [x19, #16]
  425d84:	b	425a30 <ferror@plt+0x22c60>
  425d88:	ldr	x19, [x0, #24]
  425d8c:	b	425f2c <ferror@plt+0x2315c>
  425d90:	mov	x1, #0xd8                  	// #216
  425d94:	mov	x0, #0x1                   	// #1
  425d98:	bl	4452a0 <_obstack_memory_used@@Base+0x89c>
  425d9c:	mov	x19, x0
  425da0:	ldr	x0, [x20]
  425da4:	str	x24, [x19, #64]
  425da8:	cmp	x0, #0x0
  425dac:	cset	w0, eq  // eq = none
  425db0:	strb	w0, [x19, #212]
  425db4:	mov	w0, #0xffffffff            	// #-1
  425db8:	str	w0, [x19, #200]
  425dbc:	mov	x0, x25
  425dc0:	bl	445390 <_obstack_memory_used@@Base+0x98c>
  425dc4:	str	x0, [x19]
  425dc8:	ldr	w0, [sp, #120]
  425dcc:	cbnz	w0, 425814 <ferror@plt+0x22a44>
  425dd0:	ldr	x0, [x20]
  425dd4:	cbz	x0, 42580c <ferror@plt+0x22a3c>
  425dd8:	ldr	x0, [x0, #80]
  425ddc:	ldrb	w0, [x0, #214]
  425de0:	strb	w0, [x19, #214]
  425de4:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x225fc>
  425de8:	add	x0, x0, #0xa17
  425dec:	str	wzr, [sp, #124]
  425df0:	str	x0, [sp, #144]
  425df4:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x265fc>
  425df8:	add	x0, x0, #0xec0
  425dfc:	str	wzr, [sp, #152]
  425e00:	str	x0, [sp, #160]
  425e04:	mov	w26, #0x0                   	// #0
  425e08:	cbnz	w21, 425a30 <ferror@plt+0x22c60>
  425e0c:	ldrb	w0, [x20, #1145]
  425e10:	cbz	w0, 4258f8 <ferror@plt+0x22b28>
  425e14:	ldr	x28, [x19]
  425e18:	ldr	x23, [x19, #64]
  425e1c:	ldr	x0, [x23, #32]
  425e20:	cbnz	x0, 425e2c <ferror@plt+0x2305c>
  425e24:	mov	x0, x23
  425e28:	bl	424e78 <ferror@plt+0x220a8>
  425e2c:	mov	x21, #0x0                   	// #0
  425e30:	ldr	x0, [x23, #32]
  425e34:	ldr	x0, [x0, x21, lsl #3]
  425e38:	cbz	x0, 425824 <ferror@plt+0x22a54>
  425e3c:	mov	x1, x28
  425e40:	bl	4436a0 <ferror@plt+0x408d0>
  425e44:	cbnz	w0, 42581c <ferror@plt+0x22a4c>
  425e48:	ldr	x0, [x23, #32]
  425e4c:	add	x2, x21, #0x1
  425e50:	ldr	x0, [x0, x2, lsl #3]
  425e54:	bl	445390 <_obstack_memory_used@@Base+0x98c>
  425e58:	mov	x21, x0
  425e5c:	ldrb	w0, [x20, #1245]
  425e60:	cbz	w0, 425ea0 <ferror@plt+0x230d0>
  425e64:	ldr	x0, [x19, #64]
  425e68:	ldrb	w0, [x0, #20]
  425e6c:	cbz	w0, 425ea0 <ferror@plt+0x230d0>
  425e70:	mov	x0, x21
  425e74:	bl	4446b8 <ferror@plt+0x418e8>
  425e78:	mov	x23, x0
  425e7c:	cbz	x0, 425e98 <ferror@plt+0x230c8>
  425e80:	bl	402700 <strlen@plt>
  425e84:	mov	x28, x0
  425e88:	mov	x0, x21
  425e8c:	bl	402700 <strlen@plt>
  425e90:	cmp	x28, x0
  425e94:	b.cc	42592c <ferror@plt+0x22b5c>  // b.lo, b.ul, b.last
  425e98:	mov	x0, x23
  425e9c:	bl	402b30 <free@plt>
  425ea0:	mov	x0, x21
  425ea4:	bl	44438c <ferror@plt+0x415bc>
  425ea8:	mov	w2, w0
  425eac:	str	w0, [sp, #128]
  425eb0:	ldr	x0, [x20, #320]
  425eb4:	mov	x1, x21
  425eb8:	bl	443eec <ferror@plt+0x4111c>
  425ebc:	cbz	x0, 42593c <ferror@plt+0x22b6c>
  425ec0:	mov	w0, #0x2                   	// #2
  425ec4:	str	w0, [x19, #204]
  425ec8:	ldr	x0, [x19, #64]
  425ecc:	ldr	x0, [x0]
  425ed0:	str	x0, [x19, #64]
  425ed4:	cbnz	x0, 425d20 <ferror@plt+0x22f50>
  425ed8:	ldr	x3, [x20, #984]
  425edc:	cbz	x3, 425ca0 <ferror@plt+0x22ed0>
  425ee0:	add	x2, x19, #0x40
  425ee4:	mov	x1, x25
  425ee8:	mov	x0, x20
  425eec:	blr	x3
  425ef0:	str	x0, [x19, #8]
  425ef4:	cbz	x0, 425c98 <ferror@plt+0x22ec8>
  425ef8:	mov	x0, x19
  425efc:	bl	425030 <ferror@plt+0x22260>
  425f00:	tst	w0, #0xff
  425f04:	b.eq	425c90 <ferror@plt+0x22ec0>  // b.none
  425f08:	ldr	x0, [x20, #280]
  425f0c:	str	x0, [x19, #32]
  425f10:	str	x19, [x20, #280]
  425f14:	ldr	x0, [x22]
  425f18:	cbnz	x0, 425f2c <ferror@plt+0x2315c>
  425f1c:	str	x19, [x22]
  425f20:	mov	x1, x22
  425f24:	ldr	x0, [x20, #296]
  425f28:	bl	444244 <ferror@plt+0x41474>
  425f2c:	mov	x0, x19
  425f30:	ldp	x19, x20, [sp, #16]
  425f34:	ldp	x21, x22, [sp, #32]
  425f38:	ldp	x23, x24, [sp, #48]
  425f3c:	ldp	x25, x26, [sp, #64]
  425f40:	ldp	x27, x28, [sp, #80]
  425f44:	ldp	x29, x30, [sp], #304
  425f48:	ret
  425f4c:	stp	x29, x30, [sp, #-160]!
  425f50:	mov	x29, sp
  425f54:	stp	x23, x24, [sp, #48]
  425f58:	ldrb	w23, [x1, #210]
  425f5c:	stp	x19, x20, [sp, #16]
  425f60:	stp	x21, x22, [sp, #32]
  425f64:	stp	x25, x26, [sp, #64]
  425f68:	stp	x27, x28, [sp, #80]
  425f6c:	cbz	w23, 425f78 <ferror@plt+0x231a8>
  425f70:	mov	w23, #0x0                   	// #0
  425f74:	b	425fc4 <ferror@plt+0x231f4>
  425f78:	mov	x20, x0
  425f7c:	mov	x19, x1
  425f80:	and	w25, w2, #0xff
  425f84:	mov	w26, w3
  425f88:	cbnz	w25, 425fe4 <ferror@plt+0x23214>
  425f8c:	ldr	x0, [x19, #56]
  425f90:	cbnz	x0, 425ffc <ferror@plt+0x2322c>
  425f94:	ldr	x1, [x19, #16]
  425f98:	cbz	x1, 426008 <ferror@plt+0x23238>
  425f9c:	ldr	w2, [x19, #200]
  425fa0:	mov	x0, x20
  425fa4:	ldr	x3, [x19, #8]
  425fa8:	ldr	x4, [x20, #976]
  425fac:	blr	x4
  425fb0:	mov	w0, #0xffffffff            	// #-1
  425fb4:	str	w0, [x19, #200]
  425fb8:	ldr	x0, [x19, #16]
  425fbc:	bl	402b30 <free@plt>
  425fc0:	str	xzr, [x19, #16]
  425fc4:	mov	w0, w23
  425fc8:	ldp	x19, x20, [sp, #16]
  425fcc:	ldp	x21, x22, [sp, #32]
  425fd0:	ldp	x23, x24, [sp, #48]
  425fd4:	ldp	x25, x26, [sp, #64]
  425fd8:	ldp	x27, x28, [sp, #80]
  425fdc:	ldp	x29, x30, [sp], #160
  425fe0:	ret
  425fe4:	mov	w0, #0x1                   	// #1
  425fe8:	strb	w0, [x20, #417]
  425fec:	strb	w0, [x1, #210]
  425ff0:	ldrh	w0, [x1, #208]
  425ff4:	cbz	w0, 425f8c <ferror@plt+0x231bc>
  425ff8:	b	425f70 <ferror@plt+0x231a0>
  425ffc:	ldrb	w0, [x0, #18]
  426000:	tbz	w0, #1, 425f94 <ferror@plt+0x231c4>
  426004:	b	425f70 <ferror@plt+0x231a0>
  426008:	mov	w2, w26
  42600c:	mov	x1, x19
  426010:	mov	x0, x20
  426014:	bl	4255a8 <ferror@plt+0x227d8>
  426018:	ands	w24, w0, #0xff
  42601c:	b.eq	425f70 <ferror@plt+0x231a0>  // b.none
  426020:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  426024:	ldr	x1, [x0, #2472]
  426028:	cbz	x1, 42607c <ferror@plt+0x232ac>
  42602c:	cbnz	w25, 426038 <ferror@plt+0x23268>
  426030:	ldrb	w0, [x1, #8]
  426034:	cbz	w0, 42607c <ferror@plt+0x232ac>
  426038:	ldr	x0, [x19, #120]
  42603c:	str	x0, [sp, #120]
  426040:	adrp	x4, 425000 <ferror@plt+0x22230>
  426044:	add	x0, sp, #0x78
  426048:	ldr	x2, [x1], #16
  42604c:	add	x4, x4, #0x528
  426050:	mov	x3, #0x20                  	// #32
  426054:	strb	wzr, [sp, #144]
  426058:	strb	w25, [sp, #145]
  42605c:	str	x19, [sp, #152]
  426060:	bl	402960 <bsearch@plt>
  426064:	cbz	x0, 42607c <ferror@plt+0x232ac>
  426068:	cbnz	w25, 425f70 <ferror@plt+0x231a0>
  42606c:	mov	w0, #0x1                   	// #1
  426070:	strb	w0, [x20, #417]
  426074:	strb	w0, [x19, #210]
  426078:	b	425f70 <ferror@plt+0x231a0>
  42607c:	ldrb	w0, [x20, #417]
  426080:	cbz	w0, 4261a0 <ferror@plt+0x233d0>
  426084:	ldr	x21, [x20, #280]
  426088:	mov	w27, #0xffffffff            	// #-1
  42608c:	cbz	x21, 4261a0 <ferror@plt+0x233d0>
  426090:	cmp	x19, x21
  426094:	b.ne	4260a0 <ferror@plt+0x232d0>  // b.any
  426098:	ldr	x21, [x21, #32]
  42609c:	b	42608c <ferror@plt+0x232bc>
  4260a0:	cbnz	w25, 4260ac <ferror@plt+0x232dc>
  4260a4:	ldrb	w0, [x21, #210]
  4260a8:	cbz	w0, 426098 <ferror@plt+0x232c8>
  4260ac:	ldr	w0, [x21, #204]
  4260b0:	cbnz	w0, 426098 <ferror@plt+0x232c8>
  4260b4:	ldr	x0, [x19, #160]
  4260b8:	ldr	x1, [x21, #160]
  4260bc:	cmp	x1, x0
  4260c0:	b.ne	426098 <ferror@plt+0x232c8>  // b.any
  4260c4:	ldr	x0, [x19, #120]
  4260c8:	ldr	x1, [x21, #120]
  4260cc:	cmp	x1, x0
  4260d0:	b.ne	426098 <ferror@plt+0x232c8>  // b.any
  4260d4:	ldr	x0, [x21, #40]
  4260d8:	cbz	x0, 426190 <ferror@plt+0x233c0>
  4260dc:	ldrb	w0, [x21, #213]
  4260e0:	cbnz	w0, 426190 <ferror@plt+0x233c0>
  4260e4:	ldr	x2, [x21, #64]
  4260e8:	mov	x1, #0xd8                  	// #216
  4260ec:	mov	x0, #0x1                   	// #1
  4260f0:	str	x2, [sp, #104]
  4260f4:	ldr	x28, [x21]
  4260f8:	bl	4452a0 <_obstack_memory_used@@Base+0x89c>
  4260fc:	mov	x22, x0
  426100:	ldr	x0, [x20]
  426104:	ldr	x2, [sp, #104]
  426108:	cmp	x0, #0x0
  42610c:	cset	w0, eq  // eq = none
  426110:	str	x2, [x22, #64]
  426114:	str	w27, [x22, #200]
  426118:	strb	w0, [x22, #212]
  42611c:	mov	x0, x28
  426120:	bl	445390 <_obstack_memory_used@@Base+0x98c>
  426124:	str	x0, [x22]
  426128:	ldr	x0, [x21, #8]
  42612c:	str	x0, [x22, #8]
  426130:	mov	w2, w26
  426134:	mov	x1, x22
  426138:	mov	x0, x20
  42613c:	bl	4255a8 <ferror@plt+0x227d8>
  426140:	ands	w28, w0, #0xff
  426144:	b.eq	42616c <ferror@plt+0x2339c>  // b.none
  426148:	ldr	x0, [x19, #120]
  42614c:	ldr	x2, [x22, #120]
  426150:	cmp	x2, x0
  426154:	b.ne	426198 <ferror@plt+0x233c8>  // b.any
  426158:	ldr	x1, [x19, #40]
  42615c:	ldr	x0, [x22, #40]
  426160:	bl	402a90 <memcmp@plt>
  426164:	cmp	w0, #0x0
  426168:	cset	w28, eq  // eq = none
  42616c:	ldr	x0, [x21, #40]
  426170:	cbz	x0, 426188 <ferror@plt+0x233b8>
  426174:	ldrb	w0, [x21, #213]
  426178:	cbnz	w0, 426188 <ferror@plt+0x233b8>
  42617c:	str	xzr, [x22, #8]
  426180:	mov	x0, x22
  426184:	bl	424c14 <ferror@plt+0x21e44>
  426188:	cbz	w28, 426098 <ferror@plt+0x232c8>
  42618c:	b	425f70 <ferror@plt+0x231a0>
  426190:	mov	x22, x21
  426194:	b	426130 <ferror@plt+0x23360>
  426198:	mov	w28, #0x0                   	// #0
  42619c:	b	42616c <ferror@plt+0x2339c>
  4261a0:	ldr	x1, [x20]
  4261a4:	cbz	x1, 42626c <ferror@plt+0x2349c>
  4261a8:	ldr	x0, [x19, #64]
  4261ac:	cbz	x0, 42626c <ferror@plt+0x2349c>
  4261b0:	ldrb	w4, [x1, #106]
  4261b4:	ldrb	w21, [x0, #20]
  4261b8:	cmp	w21, w4, uxtb
  4261bc:	csel	w21, w21, w4, cs  // cs = hs, nlast
  4261c0:	and	w21, w21, #0xff
  4261c4:	cmp	w21, #0x0
  4261c8:	ldr	w1, [x20, #1200]
  4261cc:	cset	w0, ne  // ne = any
  4261d0:	cmp	w1, w0
  4261d4:	b.le	4261fc <ferror@plt+0x2342c>
  4261d8:	ldrh	w0, [x19, #208]
  4261dc:	cbnz	w0, 4261fc <ferror@plt+0x2342c>
  4261e0:	ldrb	w0, [x19, #212]
  4261e4:	cbz	w0, 4261f0 <ferror@plt+0x23420>
  4261e8:	ldrb	w0, [x20, #1206]
  4261ec:	cbnz	w0, 4261fc <ferror@plt+0x2342c>
  4261f0:	ldr	x1, [x19, #8]
  4261f4:	ldr	x0, [x20, #712]
  4261f8:	bl	431230 <ferror@plt+0x2e460>
  4261fc:	ldrh	w0, [x19, #208]
  426200:	strb	wzr, [x19, #213]
  426204:	add	w0, w0, #0x1
  426208:	strh	w0, [x19, #208]
  42620c:	ldr	x1, [x19, #40]
  426210:	ldrb	w0, [x20, #1155]
  426214:	ldr	x2, [x19, #120]
  426218:	cbz	w0, 426224 <ferror@plt+0x23454>
  42621c:	ldrb	w23, [x20, #1244]
  426220:	eor	w23, w23, #0x1
  426224:	mov	w3, w23
  426228:	mov	x0, x20
  42622c:	bl	420888 <ferror@plt+0x1dab8>
  426230:	strb	w21, [x0, #106]
  426234:	mov	w4, w21
  426238:	mov	w23, w24
  42623c:	ldr	x2, [x19, #8]
  426240:	mov	w3, #0x1                   	// #1
  426244:	ldr	x1, [x19, #48]
  426248:	str	x1, [x0, #40]
  42624c:	str	x19, [x0, #80]
  426250:	mov	w0, #0x1                   	// #1
  426254:	str	xzr, [x20, #424]
  426258:	mov	w1, #0x0                   	// #0
  42625c:	strb	w0, [x20, #440]
  426260:	mov	x0, x20
  426264:	bl	4200e8 <ferror@plt+0x1d318>
  426268:	b	425fc4 <ferror@plt+0x231f4>
  42626c:	mov	w21, #0x0                   	// #0
  426270:	b	4261c4 <ferror@plt+0x233f4>
  426274:	mov	w2, #0x1                   	// #1
  426278:	strb	w2, [x0, #417]
  42627c:	strb	w2, [x1, #210]
  426280:	ret
  426284:	stp	x29, x30, [sp, #-64]!
  426288:	cmp	w3, #0x3
  42628c:	mov	x29, sp
  426290:	stp	x19, x20, [sp, #16]
  426294:	mov	x19, x0
  426298:	mov	w20, w3
  42629c:	stp	x21, x22, [sp, #32]
  4262a0:	mov	x21, x1
  4262a4:	mov	w22, w4
  4262a8:	stp	x23, x24, [sp, #48]
  4262ac:	mov	w24, w2
  4262b0:	b.ne	4262cc <ferror@plt+0x234fc>  // b.any
  4262b4:	ldr	x1, [x19, #488]
  4262b8:	ldr	x0, [x0, #448]
  4262bc:	ldr	x1, [x1, #16]
  4262c0:	cmp	x0, x1
  4262c4:	b.eq	4262cc <ferror@plt+0x234fc>  // b.none
  4262c8:	stur	wzr, [x0, #-24]
  4262cc:	mov	w2, w24
  4262d0:	mov	w3, w20
  4262d4:	mov	x1, x21
  4262d8:	mov	x0, x19
  4262dc:	bl	425400 <ferror@plt+0x22630>
  4262e0:	mov	x2, x0
  4262e4:	cbnz	x0, 426300 <ferror@plt+0x23530>
  4262e8:	mov	w0, #0x0                   	// #0
  4262ec:	ldp	x19, x20, [sp, #16]
  4262f0:	ldp	x21, x22, [sp, #32]
  4262f4:	ldp	x23, x24, [sp, #48]
  4262f8:	ldp	x29, x30, [sp], #64
  4262fc:	ret
  426300:	cmp	w20, #0x4
  426304:	mov	x1, x21
  426308:	cset	w23, eq  // eq = none
  42630c:	mov	w6, w22
  426310:	mov	w5, w23
  426314:	mov	w4, w24
  426318:	mov	x0, x19
  42631c:	mov	w3, #0x0                   	// #0
  426320:	bl	425778 <ferror@plt+0x229a8>
  426324:	cmp	x0, #0x0
  426328:	mov	x21, x0
  42632c:	csel	w23, w23, wzr, eq  // eq = none
  426330:	cbnz	w23, 4262e8 <ferror@plt+0x23518>
  426334:	ldr	x0, [x0, #16]
  426338:	cbz	x0, 42637c <ferror@plt+0x235ac>
  42633c:	mov	w23, #0x0                   	// #0
  426340:	cmp	w20, #0x2
  426344:	mov	x1, x21
  426348:	cset	w2, eq  // eq = none
  42634c:	mov	w3, w22
  426350:	mov	x0, x19
  426354:	bl	425f4c <ferror@plt+0x2317c>
  426358:	and	w0, w0, #0xff
  42635c:	eor	w1, w0, #0x1
  426360:	tst	w23, w1
  426364:	b.eq	4262ec <ferror@plt+0x2351c>  // b.none
  426368:	ldr	x1, [x19, #40]
  42636c:	ldr	w0, [x1, #56]
  426370:	add	w0, w0, #0x1
  426374:	str	w0, [x1, #56]
  426378:	b	4262e8 <ferror@plt+0x23518>
  42637c:	ldr	w0, [x21, #204]
  426380:	cbnz	w0, 42633c <ferror@plt+0x2356c>
  426384:	sub	w0, w20, #0x3
  426388:	cmp	w0, #0x1
  42638c:	b.ls	42633c <ferror@plt+0x2356c>  // b.plast
  426390:	ldr	x0, [x19, #40]
  426394:	ldr	w1, [x0, #56]
  426398:	bl	42bd88 <ferror@plt+0x28fb8>
  42639c:	mov	w23, w0
  4263a0:	ldr	x0, [x19, #40]
  4263a4:	mov	w1, w22
  4263a8:	bl	42bd88 <ferror@plt+0x28fb8>
  4263ac:	cmp	w23, w0
  4263b0:	b.le	42633c <ferror@plt+0x2356c>
  4263b4:	ldr	x1, [x19, #40]
  4263b8:	mov	w23, #0x1                   	// #1
  4263bc:	ldr	w0, [x1, #56]
  4263c0:	sub	w0, w0, #0x1
  4263c4:	str	w0, [x1, #56]
  4263c8:	b	426340 <ferror@plt+0x23570>
  4263cc:	stp	x29, x30, [sp, #-32]!
  4263d0:	mov	x29, sp
  4263d4:	stp	x19, x20, [sp, #16]
  4263d8:	mov	x19, x1
  4263dc:	ldr	x20, [x0, #296]
  4263e0:	mov	x0, x1
  4263e4:	bl	44438c <ferror@plt+0x415bc>
  4263e8:	mov	w2, w0
  4263ec:	mov	x1, x19
  4263f0:	mov	x0, x20
  4263f4:	bl	443eec <ferror@plt+0x4111c>
  4263f8:	cbz	x0, 426418 <ferror@plt+0x23648>
  4263fc:	ldr	x1, [x0, #8]
  426400:	cbz	x1, 426410 <ferror@plt+0x23640>
  426404:	ldr	x1, [x0, #24]
  426408:	ldr	w1, [x1, #204]
  42640c:	cbz	w1, 426418 <ferror@plt+0x23648>
  426410:	ldr	x0, [x0]
  426414:	b	4263f8 <ferror@plt+0x23628>
  426418:	cmp	x0, #0x0
  42641c:	cset	w0, ne  // ne = any
  426420:	ldp	x19, x20, [sp, #16]
  426424:	ldp	x29, x30, [sp], #32
  426428:	ret
  42642c:	stp	x29, x30, [sp, #-48]!
  426430:	mov	x29, sp
  426434:	stp	x21, x22, [sp, #32]
  426438:	mov	x21, x0
  42643c:	ldr	x22, [x0, #296]
  426440:	mov	x0, x1
  426444:	stp	x19, x20, [sp, #16]
  426448:	mov	x19, x1
  42644c:	mov	w20, w2
  426450:	bl	44438c <ferror@plt+0x415bc>
  426454:	mov	w2, w0
  426458:	mov	x1, x19
  42645c:	mov	x0, x22
  426460:	bl	443eec <ferror@plt+0x4111c>
  426464:	mov	x19, x0
  426468:	tbz	w20, #31, 42647c <ferror@plt+0x236ac>
  42646c:	ldr	x0, [x21, #40]
  426470:	mov	w1, w20
  426474:	bl	42b148 <ferror@plt+0x28378>
  426478:	mov	w20, w0
  42647c:	cbz	x19, 4264a8 <ferror@plt+0x236d8>
  426480:	ldr	x0, [x19, #8]
  426484:	cbz	x0, 4264a0 <ferror@plt+0x236d0>
  426488:	ldr	x0, [x19, #24]
  42648c:	ldr	w0, [x0, #204]
  426490:	cbnz	w0, 4264a0 <ferror@plt+0x236d0>
  426494:	ldr	w0, [x19, #16]
  426498:	cmp	w0, w20
  42649c:	b.ls	4264a8 <ferror@plt+0x236d8>  // b.plast
  4264a0:	ldr	x19, [x19]
  4264a4:	b	42647c <ferror@plt+0x236ac>
  4264a8:	cmp	x19, #0x0
  4264ac:	cset	w0, ne  // ne = any
  4264b0:	ldp	x19, x20, [sp, #16]
  4264b4:	ldp	x21, x22, [sp, #32]
  4264b8:	ldp	x29, x30, [sp], #48
  4264bc:	ret
  4264c0:	stp	x29, x30, [sp, #-64]!
  4264c4:	mov	x3, #0x0                   	// #0
  4264c8:	mov	x29, sp
  4264cc:	stp	x19, x20, [sp, #16]
  4264d0:	mov	x19, x0
  4264d4:	adrp	x20, 402000 <_ZGTtnam@plt-0x690>
  4264d8:	add	x20, x20, #0xb30
  4264dc:	stp	x21, x22, [sp, #32]
  4264e0:	adrp	x21, 445000 <_obstack_memory_used@@Base+0x5fc>
  4264e4:	adrp	x22, 424000 <ferror@plt+0x21230>
  4264e8:	add	x21, x21, #0x2a0
  4264ec:	add	x22, x22, #0xbf8
  4264f0:	str	x23, [sp, #48]
  4264f4:	adrp	x23, 424000 <ferror@plt+0x21230>
  4264f8:	add	x23, x23, #0xce8
  4264fc:	mov	x5, x20
  426500:	mov	x4, x21
  426504:	mov	x1, x22
  426508:	mov	x2, x23
  42650c:	mov	x0, #0x7f                  	// #127
  426510:	bl	443cf4 <ferror@plt+0x40f24>
  426514:	str	x0, [x19, #296]
  426518:	mov	x5, x20
  42651c:	mov	x4, x21
  426520:	mov	x2, x23
  426524:	mov	x1, x22
  426528:	mov	x3, #0x0                   	// #0
  42652c:	mov	x0, #0x7f                  	// #127
  426530:	bl	443cf4 <ferror@plt+0x40f24>
  426534:	str	x0, [x19, #304]
  426538:	mov	x0, #0xff0                 	// #4080
  42653c:	bl	44526c <_obstack_memory_used@@Base+0x868>
  426540:	str	wzr, [x0]
  426544:	ldr	x1, [x19, #312]
  426548:	str	x1, [x0, #8]
  42654c:	str	x0, [x19, #312]
  426550:	mov	x5, x20
  426554:	mov	x4, x21
  426558:	mov	x3, #0x0                   	// #0
  42655c:	adrp	x2, 424000 <ferror@plt+0x21230>
  426560:	adrp	x1, 444000 <ferror@plt+0x41230>
  426564:	add	x2, x2, #0xccc
  426568:	add	x1, x1, #0x38c
  42656c:	mov	x0, #0x7f                  	// #127
  426570:	bl	443cf4 <ferror@plt+0x40f24>
  426574:	ldp	x21, x22, [sp, #32]
  426578:	mov	x4, x20
  42657c:	ldr	x23, [sp, #48]
  426580:	str	x0, [x19, #320]
  426584:	add	x0, x19, #0x148
  426588:	adrp	x3, 445000 <_obstack_memory_used@@Base+0x5fc>
  42658c:	ldp	x19, x20, [sp, #16]
  426590:	add	x3, x3, #0x26c
  426594:	ldp	x29, x30, [sp], #64
  426598:	mov	x2, #0x0                   	// #0
  42659c:	mov	x1, #0x0                   	// #0
  4265a0:	b	444814 <_obstack_begin@@Base>
  4265a4:	stp	x29, x30, [sp, #-32]!
  4265a8:	mov	x29, sp
  4265ac:	stp	x19, x20, [sp, #16]
  4265b0:	mov	x19, x0
  4265b4:	ldr	x0, [x0, #296]
  4265b8:	bl	443d3c <ferror@plt+0x40f6c>
  4265bc:	ldr	x0, [x19, #304]
  4265c0:	bl	443d3c <ferror@plt+0x40f6c>
  4265c4:	ldr	x0, [x19, #320]
  4265c8:	bl	443d3c <ferror@plt+0x40f6c>
  4265cc:	add	x0, x19, #0x148
  4265d0:	mov	x1, #0x0                   	// #0
  4265d4:	bl	444990 <_obstack_free@@Base>
  4265d8:	ldr	x0, [x19, #312]
  4265dc:	cbz	x0, 4265f0 <ferror@plt+0x23820>
  4265e0:	ldr	x20, [x0, #8]
  4265e4:	bl	402b30 <free@plt>
  4265e8:	mov	x0, x20
  4265ec:	b	4265dc <ferror@plt+0x2380c>
  4265f0:	ldr	x0, [x19, #280]
  4265f4:	cbz	x0, 426608 <ferror@plt+0x23838>
  4265f8:	ldr	x19, [x0, #32]
  4265fc:	bl	424c14 <ferror@plt+0x21e44>
  426600:	mov	x0, x19
  426604:	b	4265f4 <ferror@plt+0x23824>
  426608:	ldp	x19, x20, [sp, #16]
  42660c:	ldp	x29, x30, [sp], #32
  426610:	ret
  426614:	stp	x29, x30, [sp, #-32]!
  426618:	mov	x29, sp
  42661c:	str	x19, [sp, #16]
  426620:	mov	x19, x0
  426624:	bl	4265a4 <ferror@plt+0x237d4>
  426628:	mov	x0, x19
  42662c:	str	xzr, [x19, #280]
  426630:	str	xzr, [x19, #312]
  426634:	ldr	x19, [sp, #16]
  426638:	ldp	x29, x30, [sp], #32
  42663c:	b	4264c0 <ferror@plt+0x236f0>
  426640:	ldr	x2, [x0]
  426644:	mov	w6, #0x0                   	// #0
  426648:	mov	w5, #0x0                   	// #0
  42664c:	mov	w4, #0x0                   	// #0
  426650:	mov	w3, #0x1                   	// #1
  426654:	ldr	x2, [x2, #80]
  426658:	ldr	x2, [x2, #64]
  42665c:	b	425778 <ferror@plt+0x229a8>
  426660:	ldr	x3, [x0, #40]
  426664:	mov	w4, w1
  426668:	mov	w5, #0x18                  	// #24
  42666c:	ldr	w1, [x3, #12]
  426670:	ldr	x6, [x3]
  426674:	sub	w1, w1, #0x1
  426678:	smull	x1, w1, w5
  42667c:	add	x5, x6, x1
  426680:	cbz	w4, 426690 <ferror@plt+0x238c0>
  426684:	cmp	w2, #0x0
  426688:	cset	w4, ne  // ne = any
  42668c:	add	w4, w4, #0x1
  426690:	ldr	x2, [x0]
  426694:	strb	w4, [x2, #106]
  426698:	ldr	w3, [x3, #60]
  42669c:	ldr	w1, [x6, x1]
  4266a0:	ldr	x2, [x5, #8]
  4266a4:	sub	w1, w3, w1
  4266a8:	ldrb	w3, [x5, #6]
  4266ac:	lsr	w1, w1, w3
  4266b0:	ldr	w3, [x5, #16]
  4266b4:	add	w3, w1, w3
  4266b8:	mov	w1, #0x2                   	// #2
  4266bc:	b	4200e8 <ferror@plt+0x1d318>
  4266c0:	mov	w4, #0x0                   	// #0
  4266c4:	mov	w3, #0x1                   	// #1
  4266c8:	b	4200e8 <ferror@plt+0x1d318>
  4266cc:	stp	x29, x30, [sp, #-48]!
  4266d0:	mov	x29, sp
  4266d4:	stp	x19, x20, [sp, #16]
  4266d8:	mov	x19, x0
  4266dc:	ldr	x0, [x0, #296]
  4266e0:	str	xzr, [sp, #32]
  4266e4:	bl	443b48 <ferror@plt+0x40d78>
  4266e8:	str	x0, [sp, #40]
  4266ec:	ldr	x0, [x19, #296]
  4266f0:	add	x2, sp, #0x20
  4266f4:	adrp	x1, 424000 <ferror@plt+0x21230>
  4266f8:	add	x1, x1, #0xc4c
  4266fc:	bl	444310 <ferror@plt+0x41540>
  426700:	ldr	x0, [sp, #32]
  426704:	cbz	x0, 426770 <ferror@plt+0x239a0>
  426708:	ldr	x1, [sp, #40]
  42670c:	adrp	x3, 425000 <ferror@plt+0x22230>
  426710:	add	x3, x3, #0x24
  426714:	mov	x2, #0x8                   	// #8
  426718:	adrp	x19, 495000 <_obstack_memory_used@@Base+0x505fc>
  42671c:	mov	x20, #0x0                   	// #0
  426720:	bl	4027e0 <qsort@plt>
  426724:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x225fc>
  426728:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x215fc>
  42672c:	add	x1, x1, #0xa1c
  426730:	add	x0, x0, #0xf68
  426734:	bl	402b20 <dgettext@plt>
  426738:	ldr	x1, [x19, #1440]
  42673c:	bl	402ca0 <fputs_unlocked@plt>
  426740:	ldp	x0, x1, [sp, #32]
  426744:	cmp	x1, x20
  426748:	b.ls	42676c <ferror@plt+0x2399c>  // b.plast
  42674c:	ldr	x1, [x19, #1440]
  426750:	ldr	x0, [x0, x20, lsl #3]
  426754:	add	x20, x20, #0x1
  426758:	bl	402ca0 <fputs_unlocked@plt>
  42675c:	ldr	x1, [x19, #1440]
  426760:	mov	w0, #0xa                   	// #10
  426764:	bl	402810 <putc_unlocked@plt>
  426768:	b	426740 <ferror@plt+0x23970>
  42676c:	bl	402b30 <free@plt>
  426770:	ldp	x19, x20, [sp, #16]
  426774:	ldp	x29, x30, [sp], #48
  426778:	ret
  42677c:	stp	x29, x30, [sp, #-48]!
  426780:	mov	w3, #0x0                   	// #0
  426784:	mov	x29, sp
  426788:	stp	x19, x20, [sp, #16]
  42678c:	mov	x20, x0
  426790:	mov	x19, x1
  426794:	str	x21, [sp, #32]
  426798:	mov	w21, w2
  42679c:	bl	425400 <ferror@plt+0x22630>
  4267a0:	cbnz	x0, 4267b8 <ferror@plt+0x239e8>
  4267a4:	mov	w0, #0xffffffff            	// #-1
  4267a8:	ldp	x19, x20, [sp, #16]
  4267ac:	ldr	x21, [sp, #32]
  4267b0:	ldp	x29, x30, [sp], #48
  4267b4:	ret
  4267b8:	mov	x2, x0
  4267bc:	mov	x1, x19
  4267c0:	mov	w4, w21
  4267c4:	mov	x0, x20
  4267c8:	mov	w6, #0x0                   	// #0
  4267cc:	mov	w5, #0x0                   	// #0
  4267d0:	mov	w3, #0x0                   	// #0
  4267d4:	bl	425778 <ferror@plt+0x229a8>
  4267d8:	mov	x19, x0
  4267dc:	ldr	w0, [x0, #204]
  4267e0:	cbnz	w0, 4267a4 <ferror@plt+0x239d4>
  4267e4:	ldr	w0, [x19, #200]
  4267e8:	cmn	w0, #0x1
  4267ec:	b.eq	4267fc <ferror@plt+0x23a2c>  // b.none
  4267f0:	bl	402a00 <close@plt>
  4267f4:	mov	w0, #0xffffffff            	// #-1
  4267f8:	str	w0, [x19, #200]
  4267fc:	ldr	x0, [x20]
  426800:	ldr	x1, [x19, #160]
  426804:	ldr	x0, [x0, #80]
  426808:	ldr	x0, [x0, #160]
  42680c:	cmp	x1, x0
  426810:	cset	w0, gt
  426814:	b	4267a8 <ferror@plt+0x239d8>
  426818:	mov	w4, #0x0                   	// #0
  42681c:	mov	w3, #0x3                   	// #3
  426820:	mov	w2, #0x0                   	// #0
  426824:	b	426284 <ferror@plt+0x234b4>
  426828:	mov	w4, #0x0                   	// #0
  42682c:	mov	w3, #0x4                   	// #4
  426830:	mov	w2, #0x1                   	// #1
  426834:	b	426284 <ferror@plt+0x234b4>
  426838:	mov	x3, x0
  42683c:	mov	x0, x2
  426840:	ldrb	w2, [x3, #440]
  426844:	cbz	w2, 426858 <ferror@plt+0x23a88>
  426848:	ldr	x2, [x1, #56]
  42684c:	cbnz	x2, 426858 <ferror@plt+0x23a88>
  426850:	ldr	x2, [x3, #424]
  426854:	str	x2, [x1, #56]
  426858:	strb	wzr, [x3, #440]
  42685c:	cbz	x0, 426878 <ferror@plt+0x23aa8>
  426860:	ldr	x2, [x1, #48]
  426864:	cmp	x2, x0
  426868:	b.ne	426874 <ferror@plt+0x23aa4>  // b.any
  42686c:	stp	xzr, xzr, [x1, #40]
  426870:	strb	wzr, [x1, #213]
  426874:	b	402b30 <free@plt>
  426878:	ret
  42687c:	ldr	x0, [x0]
  426880:	ret
  426884:	add	x0, x0, #0x48
  426888:	ret
  42688c:	stp	x29, x30, [sp, #-48]!
  426890:	cmp	w3, #0x0
  426894:	mov	x29, sp
  426898:	stp	x19, x20, [sp, #16]
  42689c:	mov	x20, x0
  4268a0:	cset	w0, ne  // ne = any
  4268a4:	mov	x19, x1
  4268a8:	stp	x1, x1, [x20, #200]
  4268ac:	strb	w0, [x20, #416]
  4268b0:	str	x21, [sp, #32]
  4268b4:	mov	x21, x2
  4268b8:	cbz	x19, 4268e0 <ferror@plt+0x23b10>
  4268bc:	ldr	x0, [x19, #8]
  4268c0:	str	xzr, [x19, #32]
  4268c4:	bl	402700 <strlen@plt>
  4268c8:	str	w0, [x19, #16]
  4268cc:	cmp	x19, x21
  4268d0:	b.ne	4268d8 <ferror@plt+0x23b08>  // b.any
  4268d4:	str	x19, [x20, #208]
  4268d8:	ldr	x19, [x19]
  4268dc:	b	4268b8 <ferror@plt+0x23ae8>
  4268e0:	ldp	x19, x20, [sp, #16]
  4268e4:	ldr	x21, [sp, #32]
  4268e8:	ldp	x29, x30, [sp], #48
  4268ec:	ret
  4268f0:	ldr	x0, [x0, #8]
  4268f4:	ret
  4268f8:	ldr	x0, [x0, #64]
  4268fc:	ret
  426900:	ldr	x0, [x0]
  426904:	ret
  426908:	ldr	x0, [x0, #80]
  42690c:	ret
  426910:	ldr	x0, [x0, #72]
  426914:	ret
  426918:	stp	x29, x30, [sp, #-80]!
  42691c:	mov	x29, sp
  426920:	stp	x23, x24, [sp, #48]
  426924:	mov	x23, x0
  426928:	mov	x24, x1
  42692c:	mov	x0, #0x0                   	// #0
  426930:	stp	x19, x20, [sp, #16]
  426934:	ldr	x1, [x23, #280]
  426938:	stp	x21, x22, [sp, #32]
  42693c:	stp	x25, x26, [sp, #64]
  426940:	cbz	x1, 426950 <ferror@plt+0x23b80>
  426944:	add	x0, x0, #0x1
  426948:	ldr	x1, [x1, #32]
  42694c:	b	426940 <ferror@plt+0x23b70>
  426950:	lsl	x0, x0, #5
  426954:	adrp	x25, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  426958:	add	x1, x0, #0x10
  42695c:	mov	x0, #0x1                   	// #1
  426960:	bl	4452a0 <_obstack_memory_used@@Base+0x89c>
  426964:	add	x25, x25, #0x3b5
  426968:	ldr	x19, [x23, #280]
  42696c:	mov	x20, x0
  426970:	str	xzr, [x0]
  426974:	strb	wzr, [x0, #8]
  426978:	ldr	x21, [x20]
  42697c:	cbz	x19, 426a64 <ferror@plt+0x23c94>
  426980:	ldrb	w0, [x19, #211]
  426984:	cbnz	w0, 4269e4 <ferror@plt+0x23c14>
  426988:	ldr	w0, [x19, #204]
  42698c:	cbnz	w0, 4269e4 <ferror@plt+0x23c14>
  426990:	ldrh	w0, [x19, #208]
  426994:	cbz	w0, 4269e4 <ferror@plt+0x23c14>
  426998:	add	x0, x21, #0x1
  42699c:	ldrb	w1, [x19, #210]
  4269a0:	str	x0, [x20]
  4269a4:	add	x0, x20, x0, lsl #5
  4269a8:	strb	w1, [x0, #8]
  4269ac:	ldrb	w0, [x20, #8]
  4269b0:	ldrb	w1, [x19, #210]
  4269b4:	orr	w0, w0, w1
  4269b8:	strb	w0, [x20, #8]
  4269bc:	ldrb	w0, [x19, #213]
  4269c0:	cbz	w0, 4269ec <ferror@plt+0x23c1c>
  4269c4:	ldr	x0, [x19, #40]
  4269c8:	add	x2, x20, x21, lsl #5
  4269cc:	ldr	x1, [x19, #120]
  4269d0:	add	x2, x2, #0x18
  4269d4:	bl	44126c <ferror@plt+0x3e49c>
  4269d8:	add	x21, x20, x21, lsl #5
  4269dc:	ldr	x0, [x19, #120]
  4269e0:	str	x0, [x21, #16]
  4269e4:	ldr	x19, [x19, #32]
  4269e8:	b	426978 <ferror@plt+0x23ba8>
  4269ec:	ldr	w26, [x19, #200]
  4269f0:	mov	x0, x19
  4269f4:	bl	425030 <ferror@plt+0x22260>
  4269f8:	ands	w22, w0, #0xff
  4269fc:	b.ne	426a38 <ferror@plt+0x23c68>  // b.any
  426a00:	mov	x1, x19
  426a04:	mov	x0, x23
  426a08:	mov	w3, #0x0                   	// #0
  426a0c:	mov	w2, #0x0                   	// #0
  426a10:	bl	4251d0 <ferror@plt+0x22400>
  426a14:	mov	x0, x20
  426a18:	bl	402b30 <free@plt>
  426a1c:	mov	w0, w22
  426a20:	ldp	x19, x20, [sp, #16]
  426a24:	ldp	x21, x22, [sp, #32]
  426a28:	ldp	x23, x24, [sp, #48]
  426a2c:	ldp	x25, x26, [sp, #64]
  426a30:	ldp	x29, x30, [sp], #80
  426a34:	ret
  426a38:	ldr	w0, [x19, #200]
  426a3c:	mov	x1, x25
  426a40:	bl	4437cc <ferror@plt+0x409fc>
  426a44:	mov	x22, x0
  426a48:	add	x1, x20, x21, lsl #5
  426a4c:	add	x1, x1, #0x18
  426a50:	bl	4412b4 <ferror@plt+0x3e4e4>
  426a54:	mov	x0, x22
  426a58:	bl	402830 <fclose@plt>
  426a5c:	str	w26, [x19, #200]
  426a60:	b	4269d8 <ferror@plt+0x23c08>
  426a64:	mov	x1, x21
  426a68:	add	x0, x20, #0x10
  426a6c:	mov	x2, #0x20                  	// #32
  426a70:	lsl	x21, x21, #5
  426a74:	adrp	x3, 425000 <ferror@plt+0x22230>
  426a78:	add	x3, x3, #0x2cc
  426a7c:	bl	4027e0 <qsort@plt>
  426a80:	mov	x3, x24
  426a84:	add	x1, x21, #0x10
  426a88:	mov	x0, x20
  426a8c:	mov	x2, #0x1                   	// #1
  426a90:	bl	4026e0 <fwrite_unlocked@plt>
  426a94:	cmp	x0, #0x1
  426a98:	cset	w22, eq  // eq = none
  426a9c:	b	426a14 <ferror@plt+0x23c44>
  426aa0:	stp	x29, x30, [sp, #-80]!
  426aa4:	mov	x3, x1
  426aa8:	mov	x2, #0x1                   	// #1
  426aac:	mov	x29, sp
  426ab0:	add	x0, sp, #0x20
  426ab4:	str	x19, [sp, #16]
  426ab8:	mov	x19, x1
  426abc:	mov	x1, #0x10                  	// #16
  426ac0:	bl	402a80 <fread_unlocked@plt>
  426ac4:	cmp	x0, #0x1
  426ac8:	b.ne	426b14 <ferror@plt+0x23d44>  // b.any
  426acc:	ldr	x0, [sp, #32]
  426ad0:	lsl	x0, x0, #5
  426ad4:	add	x0, x0, #0x10
  426ad8:	bl	44526c <_obstack_memory_used@@Base+0x868>
  426adc:	adrp	x1, 495000 <_obstack_memory_used@@Base+0x505fc>
  426ae0:	ldp	x2, x3, [sp, #32]
  426ae4:	str	x0, [x1, #2472]
  426ae8:	stp	x2, x3, [x0], #16
  426aec:	mov	x1, #0x20                  	// #32
  426af0:	mov	x3, x19
  426af4:	ldr	x2, [sp, #32]
  426af8:	bl	402a80 <fread_unlocked@plt>
  426afc:	ldr	x1, [sp, #32]
  426b00:	cmp	x1, x0
  426b04:	cset	w0, eq  // eq = none
  426b08:	ldr	x19, [sp, #16]
  426b0c:	ldp	x29, x30, [sp], #80
  426b10:	ret
  426b14:	mov	w0, #0x0                   	// #0
  426b18:	b	426b08 <ferror@plt+0x23d38>
  426b1c:	stp	x29, x30, [sp, #-48]!
  426b20:	mov	x29, sp
  426b24:	stp	x19, x20, [sp, #16]
  426b28:	mov	x19, x0
  426b2c:	mov	x20, x1
  426b30:	str	x21, [sp, #32]
  426b34:	mov	w21, w2
  426b38:	bl	425400 <ferror@plt+0x22630>
  426b3c:	mov	x2, x0
  426b40:	mov	w4, w21
  426b44:	mov	x1, x20
  426b48:	mov	x0, x19
  426b4c:	mov	w6, #0x0                   	// #0
  426b50:	mov	w5, #0x0                   	// #0
  426b54:	mov	w3, #0x0                   	// #0
  426b58:	bl	425778 <ferror@plt+0x229a8>
  426b5c:	ldr	w0, [x0, #204]
  426b60:	ldp	x19, x20, [sp, #16]
  426b64:	cmp	w0, #0x2
  426b68:	cset	w0, ne  // ne = any
  426b6c:	ldr	x21, [sp, #32]
  426b70:	ldp	x29, x30, [sp], #48
  426b74:	ret
  426b78:	stp	x29, x30, [sp, #-32]!
  426b7c:	mov	x29, sp
  426b80:	str	x19, [sp, #16]
  426b84:	ldr	x19, [x0, #120]
  426b88:	add	x19, x19, #0x2d0
  426b8c:	ldp	x1, x0, [x19, #24]
  426b90:	sub	x0, x0, x1
  426b94:	cmp	x0, #0x1f
  426b98:	b.hi	426ba8 <ferror@plt+0x23dd8>  // b.pmore
  426b9c:	mov	x0, x19
  426ba0:	mov	x1, #0x20                  	// #32
  426ba4:	bl	444840 <_obstack_newchunk@@Base>
  426ba8:	ldp	x0, x2, [x19, #16]
  426bac:	add	x2, x2, #0x20
  426bb0:	cmp	x2, x0
  426bb4:	b.ne	426bc4 <ferror@plt+0x23df4>  // b.any
  426bb8:	ldrb	w1, [x19, #80]
  426bbc:	orr	w1, w1, #0x2
  426bc0:	strb	w1, [x19, #80]
  426bc4:	ldr	x1, [x19, #48]
  426bc8:	ldr	x3, [x19, #32]
  426bcc:	add	x2, x2, x1
  426bd0:	bic	x1, x2, x1
  426bd4:	ldr	x2, [x19, #8]
  426bd8:	sub	x4, x1, x2
  426bdc:	sub	x2, x3, x2
  426be0:	cmp	x4, x2
  426be4:	csel	x1, x1, x3, ls  // ls = plast
  426be8:	stp	x1, x1, [x19, #16]
  426bec:	stp	xzr, xzr, [x0]
  426bf0:	stp	xzr, xzr, [x0, #16]
  426bf4:	ldr	x19, [sp, #16]
  426bf8:	ldp	x29, x30, [sp], #32
  426bfc:	ret
  426c00:	stp	x29, x30, [sp, #-32]!
  426c04:	mov	x29, sp
  426c08:	str	x19, [sp, #16]
  426c0c:	mov	x19, x0
  426c10:	ldrb	w0, [x0, #1304]
  426c14:	cbz	w0, 426c34 <ferror@plt+0x23e64>
  426c18:	ldr	x0, [x19, #1088]
  426c1c:	bl	431784 <ferror@plt+0x2e9b4>
  426c20:	add	x0, x19, #0x2d0
  426c24:	mov	x1, #0x0                   	// #0
  426c28:	ldr	x19, [sp, #16]
  426c2c:	ldp	x29, x30, [sp], #32
  426c30:	b	444990 <_obstack_free@@Base>
  426c34:	ldr	x19, [sp, #16]
  426c38:	ldp	x29, x30, [sp], #32
  426c3c:	ret
  426c40:	ldr	x0, [x0, #1088]
  426c44:	mov	w2, w2
  426c48:	mov	w3, #0x1                   	// #1
  426c4c:	b	431a84 <ferror@plt+0x2ecb4>
  426c50:	stp	x29, x30, [sp, #-32]!
  426c54:	mov	x29, sp
  426c58:	stp	x19, x20, [sp, #16]
  426c5c:	mov	x19, x0
  426c60:	cbnz	x1, 426d88 <ferror@plt+0x23fb8>
  426c64:	mov	w0, #0x1                   	// #1
  426c68:	strb	w0, [x19, #1304]
  426c6c:	mov	w0, #0xd                   	// #13
  426c70:	bl	431710 <ferror@plt+0x2e940>
  426c74:	mov	x20, x0
  426c78:	adrp	x0, 426000 <ferror@plt+0x23230>
  426c7c:	add	x0, x0, #0xb78
  426c80:	adrp	x4, 402000 <_ZGTtnam@plt-0x690>
  426c84:	adrp	x3, 445000 <_obstack_memory_used@@Base+0x5fc>
  426c88:	str	x0, [x20, #96]
  426c8c:	add	x4, x4, #0xb30
  426c90:	add	x3, x3, #0x26c
  426c94:	add	x0, x19, #0x2d0
  426c98:	mov	x2, #0x0                   	// #0
  426c9c:	mov	x1, #0x0                   	// #0
  426ca0:	bl	444814 <_obstack_begin@@Base>
  426ca4:	str	x19, [x20, #120]
  426ca8:	mov	x0, x19
  426cac:	str	x20, [x19, #1088]
  426cb0:	bl	4213ac <ferror@plt+0x1e5dc>
  426cb4:	mov	x0, x19
  426cb8:	bl	420630 <ferror@plt+0x1d860>
  426cbc:	mov	x0, x19
  426cc0:	mov	w2, #0x7                   	// #7
  426cc4:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  426cc8:	add	x1, x1, #0x53
  426ccc:	bl	426c40 <ferror@plt+0x23e70>
  426cd0:	str	x0, [x19, #1248]
  426cd4:	mov	w2, #0x4                   	// #4
  426cd8:	mov	x0, x19
  426cdc:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  426ce0:	add	x1, x1, #0x4d
  426ce4:	bl	426c40 <ferror@plt+0x23e70>
  426ce8:	str	x0, [x19, #1256]
  426cec:	mov	w2, #0x5                   	// #5
  426cf0:	mov	x0, x19
  426cf4:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  426cf8:	add	x1, x1, #0x52
  426cfc:	bl	426c40 <ferror@plt+0x23e70>
  426d00:	str	x0, [x19, #1264]
  426d04:	mov	w2, #0xb                   	// #11
  426d08:	mov	x0, x19
  426d0c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x225fc>
  426d10:	add	x1, x1, #0xa53
  426d14:	bl	426c40 <ferror@plt+0x23e70>
  426d18:	str	x0, [x19, #1272]
  426d1c:	mov	w2, #0xa                   	// #10
  426d20:	ldrh	w1, [x0, #18]
  426d24:	orr	w1, w1, #0x10
  426d28:	strh	w1, [x0, #18]
  426d2c:	mov	x0, x19
  426d30:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  426d34:	add	x1, x1, #0x2be
  426d38:	bl	426c40 <ferror@plt+0x23e70>
  426d3c:	str	x0, [x19, #1280]
  426d40:	mov	w2, #0xf                   	// #15
  426d44:	ldrh	w1, [x0, #18]
  426d48:	orr	w1, w1, #0x10
  426d4c:	strh	w1, [x0, #18]
  426d50:	mov	x0, x19
  426d54:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x225fc>
  426d58:	add	x1, x1, #0xa5f
  426d5c:	bl	426c40 <ferror@plt+0x23e70>
  426d60:	str	x0, [x19, #1288]
  426d64:	mov	w2, #0x14                  	// #20
  426d68:	mov	x0, x19
  426d6c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x225fc>
  426d70:	add	x1, x1, #0xa6f
  426d74:	bl	426c40 <ferror@plt+0x23e70>
  426d78:	str	x0, [x19, #1296]
  426d7c:	ldp	x19, x20, [sp, #16]
  426d80:	ldp	x29, x30, [sp], #32
  426d84:	ret
  426d88:	mov	x20, x1
  426d8c:	b	426ca4 <ferror@plt+0x23ed4>
  426d90:	stp	x29, x30, [sp, #-16]!
  426d94:	sxtw	x2, w2
  426d98:	mov	w3, #0x0                   	// #0
  426d9c:	mov	x29, sp
  426da0:	ldr	x0, [x0, #1088]
  426da4:	bl	431a84 <ferror@plt+0x2ecb4>
  426da8:	cbz	x0, 426dbc <ferror@plt+0x23fec>
  426dac:	ldrb	w0, [x0, #18]
  426db0:	ubfx	x0, x0, #1, #1
  426db4:	ldp	x29, x30, [sp], #16
  426db8:	ret
  426dbc:	mov	w0, #0x0                   	// #0
  426dc0:	b	426db4 <ferror@plt+0x23fe4>
  426dc4:	ldr	x0, [x0, #1088]
  426dc8:	b	431abc <ferror@plt+0x2ecec>
  426dcc:	stp	x29, x30, [sp, #-48]!
  426dd0:	mov	x29, sp
  426dd4:	stp	x19, x20, [sp, #16]
  426dd8:	mov	x19, x0
  426ddc:	mov	w20, w2
  426de0:	str	x21, [sp, #32]
  426de4:	mov	x21, x1
  426de8:	ldr	w1, [x0, #64]
  426dec:	ldr	w0, [x0, #60]
  426df0:	cmp	w0, w1
  426df4:	b.ne	426e14 <ferror@plt+0x24044>  // b.any
  426df8:	add	w0, w0, #0x64
  426dfc:	lsl	w0, w0, #1
  426e00:	str	w0, [x19, #64]
  426e04:	lsl	x1, x0, #4
  426e08:	ldr	x0, [x19, #48]
  426e0c:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  426e10:	str	x0, [x19, #48]
  426e14:	ldr	w0, [x19, #60]
  426e18:	ldr	x2, [x19, #48]
  426e1c:	ubfiz	x1, x0, #4, #32
  426e20:	add	w0, w0, #0x1
  426e24:	add	x3, x2, x1
  426e28:	str	x21, [x2, x1]
  426e2c:	ldr	x21, [sp, #32]
  426e30:	str	w20, [x3, #8]
  426e34:	str	w0, [x19, #60]
  426e38:	ldp	x19, x20, [sp, #16]
  426e3c:	ldp	x29, x30, [sp], #48
  426e40:	ret
  426e44:	stp	x29, x30, [sp, #-48]!
  426e48:	mov	x4, x2
  426e4c:	mov	x29, sp
  426e50:	str	x19, [sp, #16]
  426e54:	ldr	x19, [x0]
  426e58:	ldr	x5, [x19]
  426e5c:	ldrb	w2, [x5]
  426e60:	cmp	w2, #0x24
  426e64:	b.ne	426ea4 <ferror@plt+0x240d4>  // b.any
  426e68:	ldrb	w1, [x0, #1146]
  426e6c:	cbz	w1, 426f10 <ferror@plt+0x24140>
  426e70:	add	x5, x5, #0x1
  426e74:	str	x5, [x19]
  426e78:	ldrb	w1, [x0, #1148]
  426e7c:	cbz	w1, 426e9c <ferror@plt+0x240cc>
  426e80:	ldrb	w1, [x0, #18]
  426e84:	cbnz	w1, 426e9c <ferror@plt+0x240cc>
  426e88:	strb	wzr, [x0, #1148]
  426e8c:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  426e90:	mov	w1, #0x2                   	// #2
  426e94:	add	x2, x2, #0xb25
  426e98:	bl	421610 <ferror@plt+0x1e840>
  426e9c:	mov	w0, #0x1                   	// #1
  426ea0:	b	426f04 <ferror@plt+0x24134>
  426ea4:	ldrb	w3, [x0, #1147]
  426ea8:	cbz	w3, 426f10 <ferror@plt+0x24140>
  426eac:	cmp	w2, #0x5c
  426eb0:	b.ne	426f10 <ferror@plt+0x24140>  // b.any
  426eb4:	ldrb	w6, [x5, #1]
  426eb8:	and	w6, w6, #0xffffffdf
  426ebc:	and	w6, w6, #0xff
  426ec0:	cmp	w6, #0x55
  426ec4:	b.ne	426f10 <ferror@plt+0x24140>  // b.any
  426ec8:	ldr	x2, [x19, #32]
  426ecc:	add	x5, x5, #0x2
  426ed0:	str	x5, [x19]
  426ed4:	mov	x7, #0x0                   	// #0
  426ed8:	add	x5, sp, #0x2c
  426edc:	mov	x6, #0x0                   	// #0
  426ee0:	mov	w3, #0x2                   	// #2
  426ee4:	sub	w3, w3, w1
  426ee8:	mov	x1, x19
  426eec:	bl	41a838 <ferror@plt+0x17a68>
  426ef0:	ands	w0, w0, #0xff
  426ef4:	b.ne	426f04 <ferror@plt+0x24134>  // b.any
  426ef8:	ldr	x1, [x19]
  426efc:	sub	x1, x1, #0x2
  426f00:	str	x1, [x19]
  426f04:	ldr	x19, [sp, #16]
  426f08:	ldp	x29, x30, [sp], #48
  426f0c:	ret
  426f10:	mov	w0, #0x0                   	// #0
  426f14:	b	426f04 <ferror@plt+0x24134>
  426f18:	ldrb	w5, [x1]
  426f1c:	mov	w3, #0x0                   	// #0
  426f20:	mov	w4, w5
  426f24:	tbz	w4, #7, 426f34 <ferror@plt+0x24164>
  426f28:	add	w3, w3, #0x1
  426f2c:	lsl	w4, w4, #1
  426f30:	b	426f24 <ferror@plt+0x24154>
  426f34:	mov	w2, #0x7f                  	// #127
  426f38:	asr	w2, w2, w3
  426f3c:	and	w2, w2, w5
  426f40:	mov	w5, #0x1                   	// #1
  426f44:	sub	w5, w5, w1
  426f48:	sxtw	x2, w2
  426f4c:	add	w4, w5, w1
  426f50:	cmp	w4, w3
  426f54:	b.ge	426f90 <ferror@plt+0x241c0>  // b.tcont
  426f58:	ldrb	w4, [x1, #1]!
  426f5c:	and	x6, x4, #0x3f
  426f60:	and	w4, w4, #0xffffffc0
  426f64:	orr	x2, x6, x2, lsl #6
  426f68:	cmp	w4, #0x80
  426f6c:	b.eq	426f4c <ferror@plt+0x2417c>  // b.none
  426f70:	stp	x29, x30, [sp, #-16]!
  426f74:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  426f78:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x225fc>
  426f7c:	mov	x29, sp
  426f80:	add	x2, x2, #0xa84
  426f84:	add	x0, x0, #0xa90
  426f88:	mov	w1, #0xc89                 	// #3209
  426f8c:	bl	402de0 <ferror@plt+0x10>
  426f90:	mov	w1, #0x555c                	// #21852
  426f94:	adrp	x5, 467000 <_obstack_memory_used@@Base+0x225fc>
  426f98:	add	x5, x5, #0xaa3
  426f9c:	strh	w1, [x0], #2
  426fa0:	mov	w1, #0x1c                  	// #28
  426fa4:	lsr	x4, x2, x1
  426fa8:	and	x4, x4, #0xf
  426fac:	sub	w1, w1, #0x4
  426fb0:	cmn	w1, #0x4
  426fb4:	ldrb	w4, [x5, x4]
  426fb8:	strb	w4, [x0], #1
  426fbc:	b.ne	426fa4 <ferror@plt+0x241d4>  // b.any
  426fc0:	sxtw	x0, w3
  426fc4:	ret
  426fc8:	ldrb	w1, [x0, #1154]
  426fcc:	cbz	w1, 426ff8 <ferror@plt+0x24228>
  426fd0:	ldrb	w1, [x0, #1167]
  426fd4:	cbnz	w1, 426ff8 <ferror@plt+0x24228>
  426fd8:	ldr	x1, [x0]
  426fdc:	cbz	x1, 426fe8 <ferror@plt+0x24218>
  426fe0:	ldrb	w1, [x1, #106]
  426fe4:	cbnz	w1, 42700c <ferror@plt+0x2423c>
  426fe8:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  426fec:	add	x2, x2, #0xab4
  426ff0:	mov	w1, #0x2                   	// #2
  426ff4:	b	421610 <ferror@plt+0x1e840>
  426ff8:	ldrb	w1, [x0, #22]
  426ffc:	cbnz	w1, 42700c <ferror@plt+0x2423c>
  427000:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  427004:	add	x2, x2, #0xadc
  427008:	b	426ff0 <ferror@plt+0x24220>
  42700c:	ret
  427010:	stp	x29, x30, [sp, #-64]!
  427014:	ands	w2, w2, #0xff
  427018:	mov	x29, sp
  42701c:	stp	x19, x20, [sp, #16]
  427020:	mov	x19, x0
  427024:	mov	x20, x3
  427028:	stp	x21, x22, [sp, #32]
  42702c:	mov	x21, x1
  427030:	stp	x23, x24, [sp, #48]
  427034:	mov	x24, x4
  427038:	ldrb	w23, [x1]
  42703c:	ldr	x1, [x0]
  427040:	sub	w23, w23, #0x71
  427044:	ldr	x22, [x1]
  427048:	b.ne	42708c <ferror@plt+0x242bc>  // b.any
  42704c:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  427050:	add	x0, x0, #0xb08
  427054:	mov	w5, #0x204                 	// #516
  427058:	mov	w4, #0x43                  	// #67
  42705c:	ldrb	w6, [x22]
  427060:	ldrb	w3, [x22]
  427064:	ldrh	w6, [x0, x6, lsl #1]
  427068:	tst	w5, w6
  42706c:	b.eq	427080 <ferror@plt+0x242b0>  // b.none
  427070:	madd	w23, w23, w4, w3
  427074:	add	x22, x22, #0x1
  427078:	sub	w23, w23, #0x71
  42707c:	b	42705c <ferror@plt+0x2428c>
  427080:	ldurb	w0, [x22, #-1]
  427084:	str	w0, [x20]
  427088:	strb	wzr, [x20, #4]
  42708c:	str	x22, [x1]
  427090:	cbz	w2, 4270d0 <ferror@plt+0x24300>
  427094:	adrp	x22, 46c000 <_obstack_memory_used@@Base+0x275fc>
  427098:	add	x22, x22, #0xb08
  42709c:	mov	w23, #0x204                 	// #516
  4270a0:	ldr	x1, [x19]
  4270a4:	ldr	x0, [x1]
  4270a8:	ldrb	w3, [x0]
  4270ac:	ldrb	w2, [x0]
  4270b0:	ldrh	w3, [x22, x3, lsl #1]
  4270b4:	tst	w23, w3
  4270b8:	b.eq	4271c0 <ferror@plt+0x243f0>  // b.none
  4270bc:	str	w2, [x20]
  4270c0:	add	x0, x0, #0x1
  4270c4:	strb	wzr, [x20, #4]
  4270c8:	str	x0, [x1]
  4270cc:	b	4270a0 <ferror@plt+0x242d0>
  4270d0:	mov	x2, x20
  4270d4:	mov	x0, x19
  4270d8:	mov	w1, #0x0                   	// #0
  4270dc:	bl	426e44 <ferror@plt+0x24074>
  4270e0:	tst	w0, #0xff
  4270e4:	b.ne	427094 <ferror@plt+0x242c4>  // b.any
  4270e8:	ldr	x0, [x19, #1088]
  4270ec:	sub	x3, x22, x21
  4270f0:	add	w3, w23, w3
  4270f4:	sub	w2, w22, w21
  4270f8:	mov	x1, x21
  4270fc:	mov	w4, #0x1                   	// #1
  427100:	bl	4317bc <ferror@plt+0x2e9ec>
  427104:	mov	x20, x0
  427108:	str	x0, [x24]
  42710c:	ldrh	w0, [x20, #18]
  427110:	ubfx	x1, x0, #2, #8
  427114:	tbz	w0, #4, 4271a8 <ferror@plt+0x243d8>
  427118:	ldrb	w0, [x19, #18]
  42711c:	cbnz	w0, 4271a8 <ferror@plt+0x243d8>
  427120:	tbz	w1, #1, 427144 <ferror@plt+0x24374>
  427124:	ldrb	w0, [x19, #23]
  427128:	cbnz	w0, 427144 <ferror@plt+0x24374>
  42712c:	ldr	x3, [x20]
  427130:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  427134:	mov	x0, x19
  427138:	add	x2, x2, #0xb22
  42713c:	mov	w1, #0x3                   	// #3
  427140:	bl	421610 <ferror@plt+0x1e840>
  427144:	ldr	x0, [x19, #1272]
  427148:	cmp	x0, x20
  42714c:	b.ne	427174 <ferror@plt+0x243a4>  // b.any
  427150:	ldrb	w0, [x19, #22]
  427154:	cbnz	w0, 427174 <ferror@plt+0x243a4>
  427158:	ldrb	w0, [x19, #1120]
  42715c:	cbz	w0, 427214 <ferror@plt+0x24444>
  427160:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  427164:	add	x2, x2, #0xb3f
  427168:	mov	x0, x19
  42716c:	mov	w1, #0x2                   	// #2
  427170:	bl	421610 <ferror@plt+0x1e840>
  427174:	ldr	x0, [x19, #1280]
  427178:	cmp	x0, x20
  42717c:	b.ne	427188 <ferror@plt+0x243b8>  // b.any
  427180:	mov	x0, x19
  427184:	bl	426fc8 <ferror@plt+0x241f8>
  427188:	ldrh	w0, [x20, #18]
  42718c:	tbz	w0, #9, 4271a8 <ferror@plt+0x243d8>
  427190:	ldr	x3, [x20]
  427194:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  427198:	mov	x0, x19
  42719c:	add	x2, x2, #0xbcb
  4271a0:	mov	w1, #0xf                   	// #15
  4271a4:	bl	42167c <ferror@plt+0x1e8ac>
  4271a8:	mov	x0, x20
  4271ac:	ldp	x19, x20, [sp, #16]
  4271b0:	ldp	x21, x22, [sp, #32]
  4271b4:	ldp	x23, x24, [sp, #48]
  4271b8:	ldp	x29, x30, [sp], #64
  4271bc:	ret
  4271c0:	mov	x2, x20
  4271c4:	mov	x0, x19
  4271c8:	mov	w1, #0x0                   	// #0
  4271cc:	bl	426e44 <ferror@plt+0x24074>
  4271d0:	tst	w0, #0xff
  4271d4:	b.ne	4270a0 <ferror@plt+0x242d0>  // b.any
  4271d8:	ldr	x0, [x19]
  4271dc:	mov	x1, x21
  4271e0:	ldr	x2, [x0]
  4271e4:	mov	x0, x19
  4271e8:	sub	x2, x2, x21
  4271ec:	bl	41a478 <ferror@plt+0x176a8>
  4271f0:	mov	x20, x0
  4271f4:	mov	x1, x21
  4271f8:	ldr	x0, [x19]
  4271fc:	ldr	x2, [x0]
  427200:	mov	x0, x19
  427204:	sub	w2, w2, w21
  427208:	bl	426c40 <ferror@plt+0x23e70>
  42720c:	str	x0, [x24]
  427210:	b	42710c <ferror@plt+0x2433c>
  427214:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  427218:	add	x2, x2, #0xb86
  42721c:	b	427168 <ferror@plt+0x24398>
  427220:	ldrb	w2, [x1]
  427224:	adrp	x4, 46c000 <_obstack_memory_used@@Base+0x275fc>
  427228:	add	x4, x4, #0xb08
  42722c:	ldrb	w3, [x1]
  427230:	ldrh	w2, [x4, x2, lsl #1]
  427234:	tbnz	w2, #9, 42724c <ferror@plt+0x2447c>
  427238:	mov	w0, #0x0                   	// #0
  42723c:	ret
  427240:	mov	w0, #0x0                   	// #0
  427244:	ldp	x29, x30, [sp], #16
  427248:	ret
  42724c:	sub	w3, w3, #0x71
  427250:	add	x2, x1, #0x1
  427254:	stp	x29, x30, [sp, #-16]!
  427258:	mov	w7, #0x204                 	// #516
  42725c:	mov	w6, #0x43                  	// #67
  427260:	mov	x29, sp
  427264:	ldrb	w8, [x2]
  427268:	ldrb	w5, [x2]
  42726c:	ldrh	w8, [x4, x8, lsl #1]
  427270:	tst	w7, w8
  427274:	b.eq	427288 <ferror@plt+0x244b8>  // b.none
  427278:	madd	w3, w3, w6, w5
  42727c:	add	x2, x2, #0x1
  427280:	sub	w3, w3, #0x71
  427284:	b	427264 <ferror@plt+0x24494>
  427288:	ldr	x0, [x0]
  42728c:	sub	x2, x2, x1
  427290:	add	w3, w3, w2
  427294:	mov	w4, #0x0                   	// #0
  427298:	bl	4317bc <ferror@plt+0x2e9ec>
  42729c:	cbz	x0, 427240 <ferror@plt+0x24470>
  4272a0:	ldrb	w0, [x0, #18]
  4272a4:	ubfx	x0, x0, #1, #1
  4272a8:	b	427244 <ferror@plt+0x24474>
  4272ac:	ldrb	w2, [x0, #4]
  4272b0:	cmp	w2, #0x35
  4272b4:	b.ne	4272dc <ferror@plt+0x2450c>  // b.any
  4272b8:	stp	x29, x30, [sp, #-16]!
  4272bc:	mov	x29, sp
  4272c0:	ldr	x0, [x0, #8]
  4272c4:	ldr	x0, [x0]
  4272c8:	bl	402ad0 <strcmp@plt>
  4272cc:	cmp	w0, #0x0
  4272d0:	cset	w0, eq  // eq = none
  4272d4:	ldp	x29, x30, [sp], #16
  4272d8:	ret
  4272dc:	mov	w0, #0x0                   	// #0
  4272e0:	ret
  4272e4:	ret
  4272e8:	stp	x29, x30, [sp, #-96]!
  4272ec:	mov	x29, sp
  4272f0:	stp	x23, x24, [sp, #48]
  4272f4:	ldr	x24, [x0]
  4272f8:	stp	x21, x22, [sp, #32]
  4272fc:	mov	x22, x0
  427300:	stp	x19, x20, [sp, #16]
  427304:	ldrb	w0, [x24, #105]
  427308:	stp	x25, x26, [sp, #64]
  42730c:	ldr	x23, [x24, #16]
  427310:	str	x27, [sp, #80]
  427314:	stp	x23, x23, [x24]
  427318:	str	xzr, [x24, #56]
  42731c:	strb	wzr, [x24, #104]
  427320:	tbz	w0, #1, 427354 <ferror@plt+0x24584>
  427324:	ldrb	w0, [x23]
  427328:	mov	x19, x23
  42732c:	add	x23, x23, #0x1
  427330:	cmp	w0, #0xa
  427334:	b.eq	42734c <ferror@plt+0x2457c>  // b.none
  427338:	cmp	w0, #0xd
  42733c:	b.ne	427324 <ferror@plt+0x24554>  // b.any
  427340:	ldr	x0, [x24, #32]
  427344:	cmp	x0, x19
  427348:	b.ne	427694 <ferror@plt+0x248c4>  // b.any
  42734c:	mov	x23, x19
  427350:	b	42757c <ferror@plt+0x247ac>
  427354:	adrp	x21, 495000 <_obstack_memory_used@@Base+0x505fc>
  427358:	mov	x20, #0x0                   	// #0
  42735c:	movi	v2.16b, #0xa
  427360:	add	x21, x21, #0x9bc
  427364:	movi	v3.16b, #0xd
  427368:	mov	x25, #0x1000                	// #4096
  42736c:	b	4273e8 <ferror@plt+0x24618>
  427370:	ldr	q1, [x23]
  427374:	cmeq	v6.16b, v1.16b, v3.16b
  427378:	cmeq	v0.16b, v1.16b, v2.16b
  42737c:	orr	v0.16b, v0.16b, v6.16b
  427380:	cmeq	v6.16b, v1.16b, v5.16b
  427384:	cmeq	v1.16b, v1.16b, v4.16b
  427388:	orr	v0.16b, v0.16b, v6.16b
  42738c:	orr	v0.16b, v0.16b, v1.16b
  427390:	addp	d1, v0.2d
  427394:	fmov	x0, d1
  427398:	cbnz	x0, 4273a4 <ferror@plt+0x245d4>
  42739c:	ldr	q1, [x1, #16]!
  4273a0:	b	427374 <ferror@plt+0x245a4>
  4273a4:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x235fc>
  4273a8:	cmp	x1, x23
  4273ac:	csel	x23, x23, x1, cc  // cc = lo, ul, last
  4273b0:	ldr	q1, [x0, #2128]
  4273b4:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x235fc>
  4273b8:	and	v0.16b, v0.16b, v1.16b
  4273bc:	ldr	q1, [x0, #2144]
  4273c0:	uaddlp	v0.8h, v0.16b
  4273c4:	ushl	v0.8h, v0.8h, v1.8h
  4273c8:	addv	h0, v0.8h
  4273cc:	umov	w19, v0.h[0]
  4273d0:	rbit	w19, w19
  4273d4:	clz	w19, w19
  4273d8:	add	x19, x23, w19, sxtw
  4273dc:	b	427468 <ferror@plt+0x24698>
  4273e0:	mov	x19, x20
  4273e4:	mov	x20, x19
  4273e8:	and	x0, x23, #0xfff
  4273ec:	and	x1, x23, #0xfffffffffffffff0
  4273f0:	movi	v5.16b, #0x5c
  4273f4:	sub	x0, x25, x0
  4273f8:	movi	v4.16b, #0x3f
  4273fc:	cmp	x0, #0xf
  427400:	b.hi	427370 <ferror@plt+0x245a0>  // b.pmore
  427404:	ldr	q1, [x1]
  427408:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x235fc>
  42740c:	and	w2, w23, #0xf
  427410:	mov	w3, #0xffffffff            	// #-1
  427414:	cmeq	v6.16b, v1.16b, v3.16b
  427418:	lsl	w3, w3, w2
  42741c:	cmeq	v0.16b, v1.16b, v2.16b
  427420:	orr	v0.16b, v0.16b, v6.16b
  427424:	cmeq	v6.16b, v1.16b, v5.16b
  427428:	cmeq	v1.16b, v1.16b, v4.16b
  42742c:	orr	v0.16b, v0.16b, v6.16b
  427430:	orr	v0.16b, v0.16b, v1.16b
  427434:	ldr	q1, [x0, #2128]
  427438:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x235fc>
  42743c:	and	v0.16b, v0.16b, v1.16b
  427440:	ldr	q1, [x0, #2144]
  427444:	uaddlp	v0.8h, v0.16b
  427448:	ushl	v0.8h, v0.8h, v1.8h
  42744c:	addv	h0, v0.8h
  427450:	umov	w2, v0.h[0]
  427454:	ands	w19, w3, w2
  427458:	b.eq	42739c <ferror@plt+0x245cc>  // b.none
  42745c:	rbit	w19, w19
  427460:	clz	w19, w19
  427464:	add	x19, x1, w19, sxtw
  427468:	mov	x23, x19
  42746c:	ldrb	w0, [x23], #1
  427470:	cmp	w0, #0x5c
  427474:	b.eq	4273e4 <ferror@plt+0x24614>  // b.none
  427478:	cmp	w0, #0x3f
  42747c:	b.ne	427554 <ferror@plt+0x24784>  // b.any
  427480:	ldrb	w0, [x19, #1]
  427484:	cmp	w0, #0x3f
  427488:	b.ne	4273e0 <ferror@plt+0x24610>  // b.any
  42748c:	ldrb	w0, [x19, #2]
  427490:	ldrb	w2, [x19, #2]
  427494:	ldrb	w0, [x21, x0]
  427498:	cbz	w0, 4273e0 <ferror@plt+0x24610>
  42749c:	mov	x0, x24
  4274a0:	mov	x1, x19
  4274a4:	bl	426dcc <ferror@plt+0x23ffc>
  4274a8:	movi	v2.16b, #0xa
  4274ac:	ldrb	w0, [x22, #1125]
  4274b0:	movi	v3.16b, #0xd
  4274b4:	cbz	w0, 4273e0 <ferror@plt+0x24610>
  4274b8:	ldrb	w0, [x19, #2]
  4274bc:	mov	x23, x19
  4274c0:	ldrb	w0, [x21, x0]
  4274c4:	strb	w0, [x23], #2
  4274c8:	adrp	x25, 495000 <_obstack_memory_used@@Base+0x505fc>
  4274cc:	adrp	x26, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4274d0:	mov	x27, x19
  4274d4:	mov	x21, x23
  4274d8:	add	x25, x25, #0x9bc
  4274dc:	add	x26, x26, #0xb08
  4274e0:	ldrb	w1, [x21, #1]
  4274e4:	add	x20, x21, #0x1
  4274e8:	strb	w1, [x27, #1]
  4274ec:	add	x19, x19, #0x1
  4274f0:	cmp	w1, #0xa
  4274f4:	ccmp	w1, #0xd, #0x4, ne  // ne = any
  4274f8:	b.ne	427648 <ferror@plt+0x24878>  // b.any
  4274fc:	cmp	w1, #0xd
  427500:	ldr	x23, [x24, #32]
  427504:	b.ne	427520 <ferror@plt+0x24750>  // b.any
  427508:	cmp	x20, x23
  42750c:	b.eq	42757c <ferror@plt+0x247ac>  // b.none
  427510:	ldrb	w0, [x21, #2]
  427514:	cmp	w0, #0xa
  427518:	b.ne	427528 <ferror@plt+0x24758>  // b.any
  42751c:	add	x20, x21, #0x2
  427520:	cmp	x20, x23
  427524:	b.eq	42757c <ferror@plt+0x247ac>  // b.none
  427528:	ldr	x1, [x24, #16]
  42752c:	mov	x23, x20
  427530:	mov	x21, x19
  427534:	cmp	x1, x21
  427538:	b.eq	42757c <ferror@plt+0x247ac>  // b.none
  42753c:	ldurb	w2, [x21, #-1]
  427540:	ldurb	w0, [x21, #-1]
  427544:	ldrh	w2, [x26, x2, lsl #1]
  427548:	tbz	w2, #11, 427610 <ferror@plt+0x24840>
  42754c:	sub	x21, x21, #0x1
  427550:	b	427534 <ferror@plt+0x24764>
  427554:	ldr	x1, [x24, #32]
  427558:	cmp	x1, x19
  42755c:	b.eq	42734c <ferror@plt+0x2457c>  // b.none
  427560:	cmp	w0, #0xd
  427564:	b.ne	4275b8 <ferror@plt+0x247e8>  // b.any
  427568:	ldrb	w0, [x19, #1]
  42756c:	cmp	w0, #0xa
  427570:	b.ne	4275b8 <ferror@plt+0x247e8>  // b.any
  427574:	cmp	x1, x23
  427578:	b.ne	4275bc <ferror@plt+0x247ec>  // b.any
  42757c:	mov	x1, x19
  427580:	mov	w0, #0xa                   	// #10
  427584:	add	x23, x23, #0x1
  427588:	mov	w2, #0xa                   	// #10
  42758c:	strb	w0, [x1], #1
  427590:	mov	x0, x24
  427594:	bl	426dcc <ferror@plt+0x23ffc>
  427598:	ldp	x19, x20, [sp, #16]
  42759c:	ldp	x21, x22, [sp, #32]
  4275a0:	ldp	x25, x26, [sp, #64]
  4275a4:	ldr	x27, [sp, #80]
  4275a8:	str	x23, [x24, #16]
  4275ac:	ldp	x23, x24, [sp, #48]
  4275b0:	ldp	x29, x30, [sp], #96
  4275b4:	ret
  4275b8:	mov	x23, x19
  4275bc:	cbz	x20, 42757c <ferror@plt+0x247ac>
  4275c0:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4275c4:	mov	x1, x19
  4275c8:	add	x0, x0, #0xb08
  4275cc:	ldurb	w2, [x1, #-1]
  4275d0:	mov	x21, x1
  4275d4:	sub	x1, x1, #0x1
  4275d8:	ldrh	w2, [x0, x2, lsl #1]
  4275dc:	tbnz	w2, #11, 4275cc <ferror@plt+0x247fc>
  4275e0:	cmp	x20, x1
  4275e4:	b.ne	42757c <ferror@plt+0x247ac>  // b.any
  4275e8:	cmp	x21, x19
  4275ec:	mov	w0, #0x5c                  	// #92
  4275f0:	mov	x1, x20
  4275f4:	mov	w2, #0x20                  	// #32
  4275f8:	sub	x19, x21, #0x2
  4275fc:	csel	w2, w2, w0, ne  // ne = any
  427600:	mov	x0, x24
  427604:	bl	426dcc <ferror@plt+0x23ffc>
  427608:	str	x20, [x24, #16]
  42760c:	b	4274c8 <ferror@plt+0x246f8>
  427610:	cmp	w0, #0x5c
  427614:	b.ne	42757c <ferror@plt+0x247ac>  // b.any
  427618:	cmp	x21, x19
  42761c:	sub	x23, x21, #0x1
  427620:	sub	x19, x21, #0x2
  427624:	mov	x1, x23
  427628:	mov	w2, #0x20                  	// #32
  42762c:	csel	w2, w2, w0, ne  // ne = any
  427630:	mov	x0, x24
  427634:	bl	426dcc <ferror@plt+0x23ffc>
  427638:	str	x23, [x24, #16]
  42763c:	mov	x27, x19
  427640:	mov	x21, x20
  427644:	b	4274e0 <ferror@plt+0x24710>
  427648:	cmp	w1, #0x3f
  42764c:	b.ne	42763c <ferror@plt+0x2486c>  // b.any
  427650:	ldrb	w0, [x21, #2]
  427654:	cmp	w0, #0x3f
  427658:	b.ne	42763c <ferror@plt+0x2486c>  // b.any
  42765c:	ldrb	w0, [x21, #3]
  427660:	ldrb	w2, [x21, #3]
  427664:	ldrb	w0, [x25, x0]
  427668:	cbz	w0, 42763c <ferror@plt+0x2486c>
  42766c:	mov	x0, x24
  427670:	mov	x1, x19
  427674:	bl	426dcc <ferror@plt+0x23ffc>
  427678:	ldrb	w0, [x22, #1125]
  42767c:	cbz	w0, 42763c <ferror@plt+0x2486c>
  427680:	mov	x20, x21
  427684:	ldrb	w0, [x20, #3]!
  427688:	ldrb	w0, [x25, x0]
  42768c:	strb	w0, [x27, #1]
  427690:	b	42763c <ferror@plt+0x2486c>
  427694:	ldrb	w0, [x19, #1]
  427698:	cmp	w0, #0xa
  42769c:	csel	x23, x23, x19, eq  // eq = none
  4276a0:	b	42757c <ferror@plt+0x247ac>
  4276a4:	stp	x29, x30, [sp, #-96]!
  4276a8:	mov	x29, sp
  4276ac:	stp	x19, x20, [sp, #16]
  4276b0:	mov	x19, x0
  4276b4:	stp	x21, x22, [sp, #32]
  4276b8:	mov	w22, w1
  4276bc:	stp	x23, x24, [sp, #48]
  4276c0:	adrp	x23, 467000 <_obstack_memory_used@@Base+0x225fc>
  4276c4:	adrp	x24, 495000 <_obstack_memory_used@@Base+0x505fc>
  4276c8:	add	x23, x23, #0xc26
  4276cc:	add	x24, x24, #0x9bc
  4276d0:	stp	x25, x26, [sp, #64]
  4276d4:	mov	w25, #0x18                  	// #24
  4276d8:	ldr	x20, [x0]
  4276dc:	str	x27, [sp, #80]
  4276e0:	ldr	w1, [x20, #56]
  4276e4:	ldr	x27, [x20, #48]
  4276e8:	ubfiz	x26, x1, #4, #32
  4276ec:	ldr	x3, [x20]
  4276f0:	add	x2, x27, x26
  4276f4:	ldr	x0, [x27, x26]
  4276f8:	cmp	x0, x3
  4276fc:	b.hi	42789c <ferror@plt+0x24acc>  // b.pmore
  427700:	add	w1, w1, #0x1
  427704:	ldr	w5, [x2, #8]
  427708:	str	w1, [x20, #56]
  42770c:	add	x21, x0, #0x1
  427710:	ldr	x1, [x20, #8]
  427714:	cmp	w5, #0x5c
  427718:	sub	x21, x21, x1
  42771c:	b.eq	42774c <ferror@plt+0x2497c>  // b.none
  427720:	cmp	w5, #0x20
  427724:	b.ne	4277cc <ferror@plt+0x249fc>  // b.any
  427728:	cbnz	w22, 42774c <ferror@plt+0x2497c>
  42772c:	ldr	x0, [x19, #40]
  427730:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  427734:	mov	w3, w21
  427738:	add	x4, x4, #0xbfd
  42773c:	mov	w1, #0x0                   	// #0
  427740:	ldr	w2, [x0, #60]
  427744:	mov	x0, x19
  427748:	bl	4217cc <ferror@plt+0x1e9fc>
  42774c:	ldr	x1, [x20, #16]
  427750:	ldr	x0, [x20, #32]
  427754:	cmp	x1, x0
  427758:	b.ls	427780 <ferror@plt+0x249b0>  // b.plast
  42775c:	ldr	x0, [x19, #40]
  427760:	mov	x4, x23
  427764:	mov	w3, w21
  427768:	mov	w1, #0x2                   	// #2
  42776c:	ldr	w2, [x0, #60]
  427770:	mov	x0, x19
  427774:	bl	4217cc <ferror@plt+0x1e9fc>
  427778:	ldr	x0, [x20, #32]
  42777c:	str	x0, [x20, #16]
  427780:	ldr	x0, [x27, x26]
  427784:	str	x0, [x20, #8]
  427788:	ldr	x0, [x19, #40]
  42778c:	ldr	w2, [x0, #12]
  427790:	ldr	x1, [x0]
  427794:	sub	w2, w2, #0x1
  427798:	ldr	w3, [x0, #60]
  42779c:	smull	x2, w2, w25
  4277a0:	add	x4, x1, x2
  4277a4:	ldr	w1, [x1, x2]
  4277a8:	mov	w2, #0x0                   	// #0
  4277ac:	sub	w3, w3, w1
  4277b0:	ldrb	w1, [x4, #6]
  4277b4:	lsr	w3, w3, w1
  4277b8:	ldr	w1, [x4, #16]
  4277bc:	add	w1, w1, #0x1
  4277c0:	add	w1, w3, w1
  4277c4:	bl	42b50c <ferror@plt+0x2873c>
  4277c8:	b	4276e0 <ferror@plt+0x24910>
  4277cc:	ldrb	w6, [x24, w5, uxtw]
  4277d0:	cbz	w6, 427880 <ferror@plt+0x24ab0>
  4277d4:	ldrb	w1, [x19, #1136]
  4277d8:	cbz	w1, 4276e0 <ferror@plt+0x24910>
  4277dc:	cbz	w22, 4277fc <ferror@plt+0x24a2c>
  4277e0:	cmp	w5, #0x2f
  4277e4:	b.ne	4276e0 <ferror@plt+0x24910>  // b.any
  4277e8:	ldrb	w1, [x19, #1125]
  4277ec:	cbz	w1, 427828 <ferror@plt+0x24a58>
  4277f0:	ldr	x1, [x2, #16]
  4277f4:	cmp	x0, x1
  4277f8:	b.ne	4276e0 <ferror@plt+0x24910>  // b.any
  4277fc:	ldr	x0, [x19, #40]
  427800:	ldr	w2, [x0, #60]
  427804:	ldrb	w0, [x19, #1125]
  427808:	cbz	w0, 427864 <ferror@plt+0x24a94>
  42780c:	mov	w3, w21
  427810:	mov	x0, x19
  427814:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  427818:	mov	w1, #0x4                   	// #4
  42781c:	add	x4, x4, #0xc47
  427820:	bl	42183c <ferror@plt+0x1ea6c>
  427824:	b	4276e0 <ferror@plt+0x24910>
  427828:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  42782c:	add	x0, x0, #0x3
  427830:	add	x1, x1, #0xb08
  427834:	ldrb	w4, [x0]
  427838:	ldrb	w3, [x0]
  42783c:	ldrh	w4, [x1, x4, lsl #1]
  427840:	tbz	w4, #11, 42784c <ferror@plt+0x24a7c>
  427844:	add	x0, x0, #0x1
  427848:	b	427834 <ferror@plt+0x24a64>
  42784c:	cmp	w3, #0xa
  427850:	b.ne	4276e0 <ferror@plt+0x24910>  // b.any
  427854:	ldr	x1, [x2, #16]
  427858:	cmp	x0, x1
  42785c:	b.cs	4276e0 <ferror@plt+0x24910>  // b.hs, b.nlast
  427860:	b	4277fc <ferror@plt+0x24a2c>
  427864:	mov	w3, w21
  427868:	mov	x0, x19
  42786c:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  427870:	mov	w1, #0x4                   	// #4
  427874:	add	x4, x4, #0xc65
  427878:	bl	42183c <ferror@plt+0x1ea6c>
  42787c:	b	4276e0 <ferror@plt+0x24910>
  427880:	cbz	w5, 4276e0 <ferror@plt+0x24910>
  427884:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  427888:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x225fc>
  42788c:	add	x2, x2, #0xc95
  427890:	add	x0, x0, #0xa90
  427894:	mov	w1, #0x48b                 	// #1163
  427898:	bl	402de0 <ferror@plt+0x10>
  42789c:	ldp	x19, x20, [sp, #16]
  4278a0:	ldp	x21, x22, [sp, #32]
  4278a4:	ldp	x23, x24, [sp, #48]
  4278a8:	ldp	x25, x26, [sp, #64]
  4278ac:	ldr	x27, [sp, #80]
  4278b0:	ldp	x29, x30, [sp], #96
  4278b4:	ret
  4278b8:	stp	x29, x30, [sp, #-64]!
  4278bc:	mov	x29, sp
  4278c0:	stp	x19, x20, [sp, #16]
  4278c4:	mov	x19, x0
  4278c8:	ldr	x20, [x0]
  4278cc:	stp	x21, x22, [sp, #32]
  4278d0:	adrp	x22, 467000 <_obstack_memory_used@@Base+0x225fc>
  4278d4:	add	x22, x22, #0xcad
  4278d8:	ldr	x1, [x20]
  4278dc:	str	x23, [sp, #48]
  4278e0:	mov	w23, #0x18                  	// #24
  4278e4:	mov	x0, x1
  4278e8:	add	x1, x1, #0x2
  4278ec:	ldrb	w2, [x0, #1]!
  4278f0:	cmp	w2, #0x2f
  4278f4:	csel	x1, x1, x0, eq  // eq = none
  4278f8:	mov	x21, x1
  4278fc:	ldrb	w0, [x21], #1
  427900:	cmp	w0, #0x2f
  427904:	b.ne	427960 <ferror@plt+0x24b90>  // b.any
  427908:	ldurb	w0, [x1, #-1]
  42790c:	cmp	w0, #0x2a
  427910:	b.eq	4279dc <ferror@plt+0x24c0c>  // b.none
  427914:	ldrb	w0, [x19, #1133]
  427918:	cbz	w0, 427958 <ferror@plt+0x24b88>
  42791c:	ldrb	w0, [x1, #1]
  427920:	cmp	w0, #0x2a
  427924:	b.ne	427958 <ferror@plt+0x24b88>  // b.any
  427928:	ldrb	w0, [x1, #2]
  42792c:	cmp	w0, #0x2f
  427930:	b.eq	427958 <ferror@plt+0x24b88>  // b.none
  427934:	ldr	x0, [x19, #40]
  427938:	mov	x4, x22
  42793c:	ldr	x3, [x20, #8]
  427940:	mov	w1, #0x2                   	// #2
  427944:	ldr	w2, [x0, #60]
  427948:	mov	x0, x19
  42794c:	str	x21, [x20]
  427950:	sub	w3, w21, w3
  427954:	bl	42183c <ferror@plt+0x1ea6c>
  427958:	mov	x1, x21
  42795c:	b	4278f8 <ferror@plt+0x24b28>
  427960:	cmp	w0, #0xa
  427964:	b.ne	427958 <ferror@plt+0x24b88>  // b.any
  427968:	str	x1, [x20]
  42796c:	mov	x0, x19
  427970:	mov	w1, #0x1                   	// #1
  427974:	bl	4276a4 <ferror@plt+0x248d4>
  427978:	ldr	x1, [x20, #16]
  42797c:	ldr	x0, [x20, #32]
  427980:	cmp	x1, x0
  427984:	b.cs	427a04 <ferror@plt+0x24c34>  // b.hs, b.nlast
  427988:	mov	x0, x19
  42798c:	bl	4272e8 <ferror@plt+0x24518>
  427990:	ldr	x0, [x19, #40]
  427994:	ldp	x2, x6, [x20, #8]
  427998:	ldr	w3, [x0, #12]
  42799c:	ldr	x5, [x0]
  4279a0:	sub	w3, w3, #0x1
  4279a4:	ldr	w1, [x0, #60]
  4279a8:	sub	w2, w6, w2
  4279ac:	smull	x3, w3, w23
  4279b0:	add	x4, x5, x3
  4279b4:	ldr	w3, [x5, x3]
  4279b8:	sub	w3, w1, w3
  4279bc:	ldrb	w1, [x4, #6]
  4279c0:	lsr	w3, w3, w1
  4279c4:	ldr	w1, [x4, #16]
  4279c8:	add	w1, w1, #0x1
  4279cc:	add	w1, w3, w1
  4279d0:	bl	42b50c <ferror@plt+0x2873c>
  4279d4:	ldr	x21, [x20]
  4279d8:	b	427958 <ferror@plt+0x24b88>
  4279dc:	str	x21, [x20]
  4279e0:	mov	x0, x19
  4279e4:	mov	w1, #0x1                   	// #1
  4279e8:	bl	4276a4 <ferror@plt+0x248d4>
  4279ec:	mov	w0, #0x0                   	// #0
  4279f0:	ldp	x19, x20, [sp, #16]
  4279f4:	ldp	x21, x22, [sp, #32]
  4279f8:	ldr	x23, [sp, #48]
  4279fc:	ldp	x29, x30, [sp], #64
  427a00:	ret
  427a04:	mov	w0, #0x1                   	// #1
  427a08:	b	4279f0 <ferror@plt+0x24c20>
  427a0c:	stp	x29, x30, [sp, #-32]!
  427a10:	mov	x2, x1
  427a14:	adrp	x4, 46c000 <_obstack_memory_used@@Base+0x275fc>
  427a18:	mov	x29, sp
  427a1c:	stp	x19, x20, [sp, #16]
  427a20:	mov	x19, x0
  427a24:	add	x4, x4, #0xb08
  427a28:	ldrb	w0, [x2], #1
  427a2c:	mov	w6, #0x204                 	// #516
  427a30:	mov	w5, #0x43                  	// #67
  427a34:	sub	w0, w0, #0x71
  427a38:	ldrb	w7, [x2]
  427a3c:	ldrb	w3, [x2]
  427a40:	ldrh	w7, [x4, x7, lsl #1]
  427a44:	tst	w6, w7
  427a48:	b.eq	427a5c <ferror@plt+0x24c8c>  // b.none
  427a4c:	madd	w0, w0, w5, w3
  427a50:	add	x2, x2, #0x1
  427a54:	sub	w0, w0, #0x71
  427a58:	b	427a38 <ferror@plt+0x24c68>
  427a5c:	sub	x3, x2, x1
  427a60:	mov	w4, #0x1                   	// #1
  427a64:	add	w3, w0, w3
  427a68:	sub	w2, w2, w1
  427a6c:	ldr	x0, [x19, #1088]
  427a70:	bl	4317bc <ferror@plt+0x2e9ec>
  427a74:	mov	x20, x0
  427a78:	ldrh	w0, [x0, #18]
  427a7c:	ubfx	x1, x0, #2, #8
  427a80:	tbz	w0, #4, 427b14 <ferror@plt+0x24d44>
  427a84:	ldrb	w0, [x19, #18]
  427a88:	cbnz	w0, 427b14 <ferror@plt+0x24d44>
  427a8c:	tbz	w1, #1, 427ab0 <ferror@plt+0x24ce0>
  427a90:	ldrb	w0, [x19, #23]
  427a94:	cbnz	w0, 427ab0 <ferror@plt+0x24ce0>
  427a98:	ldr	x3, [x20]
  427a9c:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  427aa0:	mov	x0, x19
  427aa4:	add	x2, x2, #0xb22
  427aa8:	mov	w1, #0x3                   	// #3
  427aac:	bl	421610 <ferror@plt+0x1e840>
  427ab0:	ldr	x0, [x19, #1272]
  427ab4:	cmp	x20, x0
  427ab8:	b.ne	427ae0 <ferror@plt+0x24d10>  // b.any
  427abc:	ldrb	w0, [x19, #22]
  427ac0:	cbnz	w0, 427ae0 <ferror@plt+0x24d10>
  427ac4:	ldrb	w0, [x19, #1120]
  427ac8:	cbz	w0, 427b24 <ferror@plt+0x24d54>
  427acc:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  427ad0:	add	x2, x2, #0xb3f
  427ad4:	mov	x0, x19
  427ad8:	mov	w1, #0x2                   	// #2
  427adc:	bl	421610 <ferror@plt+0x1e840>
  427ae0:	ldr	x0, [x19, #1280]
  427ae4:	cmp	x20, x0
  427ae8:	b.ne	427af4 <ferror@plt+0x24d24>  // b.any
  427aec:	mov	x0, x19
  427af0:	bl	426fc8 <ferror@plt+0x241f8>
  427af4:	ldrh	w0, [x20, #18]
  427af8:	tbz	w0, #9, 427b14 <ferror@plt+0x24d44>
  427afc:	ldr	x3, [x20]
  427b00:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  427b04:	mov	x0, x19
  427b08:	add	x2, x2, #0xbcb
  427b0c:	mov	w1, #0xf                   	// #15
  427b10:	bl	42167c <ferror@plt+0x1e8ac>
  427b14:	mov	x0, x20
  427b18:	ldp	x19, x20, [sp, #16]
  427b1c:	ldp	x29, x30, [sp], #32
  427b20:	ret
  427b24:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  427b28:	add	x2, x2, #0xb86
  427b2c:	b	427ad4 <ferror@plt+0x24d04>
  427b30:	add	x0, x0, #0x568
  427b34:	ret
  427b38:	stp	x29, x30, [sp, #-32]!
  427b3c:	mov	x29, sp
  427b40:	stp	x19, x20, [sp, #16]
  427b44:	mov	w20, #0x18                  	// #24
  427b48:	mov	x19, x0
  427b4c:	umull	x20, w1, w20
  427b50:	mov	x0, x20
  427b54:	bl	44526c <_obstack_memory_used@@Base+0x868>
  427b58:	add	x1, x0, x20
  427b5c:	str	xzr, [x19]
  427b60:	stp	x0, x1, [x19, #16]
  427b64:	ldp	x19, x20, [sp, #16]
  427b68:	ldp	x29, x30, [sp], #32
  427b6c:	ret
  427b70:	stp	x29, x30, [sp, #-32]!
  427b74:	mov	x29, sp
  427b78:	str	x19, [sp, #16]
  427b7c:	mov	x19, x0
  427b80:	ldr	x0, [x0]
  427b84:	cbnz	x0, 427ba0 <ferror@plt+0x24dd0>
  427b88:	mov	x0, #0x20                  	// #32
  427b8c:	bl	44526c <_obstack_memory_used@@Base+0x868>
  427b90:	str	x0, [x19]
  427b94:	mov	w1, #0xfa                  	// #250
  427b98:	str	x19, [x0, #8]
  427b9c:	bl	427b38 <ferror@plt+0x24d68>
  427ba0:	ldr	x0, [x19]
  427ba4:	ldr	x19, [sp, #16]
  427ba8:	ldp	x29, x30, [sp], #32
  427bac:	ret
  427bb0:	ldr	w1, [x0, #48]
  427bb4:	cmp	w1, #0x1
  427bb8:	b.ne	427bdc <ferror@plt+0x24e0c>  // b.any
  427bbc:	ldr	x1, [x0, #24]
  427bc0:	ldr	x0, [x0, #16]
  427bc4:	sub	x0, x1, x0
  427bc8:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  427bcc:	movk	x1, #0xaaab
  427bd0:	asr	x0, x0, #3
  427bd4:	mul	w0, w0, w1
  427bd8:	ret
  427bdc:	tst	w1, #0xfffffffd
  427be0:	b.ne	427bf8 <ferror@plt+0x24e28>  // b.any
  427be4:	ldr	x1, [x0, #24]
  427be8:	ldr	x0, [x0, #16]
  427bec:	sub	x0, x1, x0
  427bf0:	ubfx	x0, x0, #3, #32
  427bf4:	ret
  427bf8:	stp	x29, x30, [sp, #-16]!
  427bfc:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  427c00:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x225fc>
  427c04:	mov	x29, sp
  427c08:	add	x2, x2, #0xcc1
  427c0c:	add	x0, x0, #0xa90
  427c10:	mov	w1, #0x99f                 	// #2463
  427c14:	bl	402de0 <ferror@plt+0x10>
  427c18:	stp	x29, x30, [sp, #-64]!
  427c1c:	mov	x29, sp
  427c20:	stp	x19, x20, [sp, #16]
  427c24:	mov	x19, x0
  427c28:	stp	x21, x22, [sp, #32]
  427c2c:	ldr	w21, [x0, #496]
  427c30:	ldr	x0, [x0, #488]
  427c34:	stp	x23, x24, [sp, #48]
  427c38:	ldr	x23, [x19, #448]
  427c3c:	ldr	x22, [x0, #24]
  427c40:	sub	x22, x22, x23
  427c44:	cbz	x21, 427cf4 <ferror@plt+0x24f24>
  427c48:	asr	x20, x22, #3
  427c4c:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  427c50:	movk	x2, #0xaaab
  427c54:	mul	x20, x20, x2
  427c58:	cmp	x20, x21
  427c5c:	b.gt	427ca4 <ferror@plt+0x24ed4>
  427c60:	bl	427b70 <ferror@plt+0x24da0>
  427c64:	mov	x24, x0
  427c68:	cmp	x20, x21
  427c6c:	b.ge	427c88 <ferror@plt+0x24eb8>  // b.tcont
  427c70:	sub	x2, x21, x20
  427c74:	mov	x0, #0x18                  	// #24
  427c78:	ldr	x1, [x24, #16]
  427c7c:	mul	x2, x2, x0
  427c80:	add	x0, x1, x0
  427c84:	bl	4026b0 <memmove@plt>
  427c88:	ldr	x1, [x19, #488]
  427c8c:	ldr	x0, [x24, #16]
  427c90:	ldr	x1, [x1, #24]
  427c94:	ldp	x2, x3, [x1, #-24]
  427c98:	stp	x2, x3, [x0]
  427c9c:	ldur	x1, [x1, #-8]
  427ca0:	str	x1, [x0, #16]
  427ca4:	cmp	x22, #0x18
  427ca8:	b.le	427cf4 <ferror@plt+0x24f24>
  427cac:	sub	x20, x20, #0x1
  427cb0:	mov	x2, #0x18                  	// #24
  427cb4:	cmp	x20, x21
  427cb8:	csel	x20, x20, x21, le
  427cbc:	ldr	x1, [x19, #448]
  427cc0:	mul	x2, x20, x2
  427cc4:	add	x0, x1, #0x18
  427cc8:	bl	4026b0 <memmove@plt>
  427ccc:	ldr	x0, [x19, #448]
  427cd0:	ldp	x21, x22, [sp, #32]
  427cd4:	add	x1, x0, #0x18
  427cd8:	str	x1, [x19, #448]
  427cdc:	ldur	w1, [x23, #-24]
  427ce0:	ldp	x19, x20, [sp, #16]
  427ce4:	ldp	x23, x24, [sp, #48]
  427ce8:	str	w1, [x0]
  427cec:	ldp	x29, x30, [sp], #64
  427cf0:	ret
  427cf4:	cbnz	x22, 427ccc <ferror@plt+0x24efc>
  427cf8:	ldr	x0, [x19, #488]
  427cfc:	ldr	x1, [x19, #448]
  427d00:	ldr	x2, [x0, #24]
  427d04:	cmp	x2, x1
  427d08:	b.ne	427ccc <ferror@plt+0x24efc>  // b.any
  427d0c:	bl	427b70 <ferror@plt+0x24da0>
  427d10:	str	x0, [x19, #488]
  427d14:	ldr	x0, [x0, #16]
  427d18:	str	x0, [x19, #448]
  427d1c:	b	427ccc <ferror@plt+0x24efc>
  427d20:	stp	x29, x30, [sp, #-32]!
  427d24:	mov	x29, sp
  427d28:	stp	x19, x20, [sp, #16]
  427d2c:	mov	x19, x0
  427d30:	ldrb	w0, [x0, #16]
  427d34:	cbnz	w0, 427dac <ferror@plt+0x24fdc>
  427d38:	ldr	x0, [x19]
  427d3c:	ldrb	w20, [x0, #104]
  427d40:	cbz	w20, 427db4 <ferror@plt+0x24fe4>
  427d44:	ldr	x3, [x0, #16]
  427d48:	ldr	x2, [x0, #32]
  427d4c:	cmp	x3, x2
  427d50:	b.cs	427d6c <ferror@plt+0x24f9c>  // b.hs, b.nlast
  427d54:	mov	x0, x19
  427d58:	bl	4272e8 <ferror@plt+0x24518>
  427d5c:	mov	w0, w20
  427d60:	ldp	x19, x20, [sp, #16]
  427d64:	ldp	x29, x30, [sp], #32
  427d68:	ret
  427d6c:	ldrb	w1, [x19, #25]
  427d70:	cbnz	w1, 427dac <ferror@plt+0x24fdc>
  427d74:	ldr	x1, [x0, #24]
  427d78:	cmp	x2, x1
  427d7c:	ldrb	w1, [x0, #105]
  427d80:	b.eq	427d94 <ferror@plt+0x24fc4>  // b.none
  427d84:	cmp	x3, x2
  427d88:	b.ls	427d94 <ferror@plt+0x24fc4>  // b.plast
  427d8c:	tbnz	w1, #1, 427d94 <ferror@plt+0x24fc4>
  427d90:	str	x2, [x0, #16]
  427d94:	mov	x0, x19
  427d98:	ubfx	x20, x1, #2, #1
  427d9c:	bl	420978 <ferror@plt+0x1dba8>
  427da0:	ldr	x0, [x19]
  427da4:	cbz	x0, 427dac <ferror@plt+0x24fdc>
  427da8:	cbz	w20, 427d38 <ferror@plt+0x24f68>
  427dac:	mov	w20, #0x0                   	// #0
  427db0:	b	427d5c <ferror@plt+0x24f8c>
  427db4:	mov	w20, #0x1                   	// #1
  427db8:	b	427d5c <ferror@plt+0x24f8c>
  427dbc:	ldrb	w1, [x0, #4]
  427dc0:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x235fc>
  427dc4:	add	x2, x2, #0x2d8
  427dc8:	lsl	x1, x1, #4
  427dcc:	ldr	w1, [x2, x1]
  427dd0:	cmp	w1, #0x1
  427dd4:	b.eq	427de8 <ferror@plt+0x25018>  // b.none
  427dd8:	cmp	w1, #0x2
  427ddc:	b.ne	427dfc <ferror@plt+0x2502c>  // b.any
  427de0:	ldr	w0, [x0, #8]
  427de4:	ret
  427de8:	ldr	x0, [x0, #8]
  427dec:	mov	w1, #0xa                   	// #10
  427df0:	ldr	w0, [x0, #8]
  427df4:	mul	w0, w0, w1
  427df8:	b	427de4 <ferror@plt+0x25014>
  427dfc:	mov	w0, #0x6                   	// #6
  427e00:	b	427de4 <ferror@plt+0x25014>
  427e04:	stp	x29, x30, [sp, #-48]!
  427e08:	mov	x29, sp
  427e0c:	stp	x21, x22, [sp, #32]
  427e10:	mov	x21, x1
  427e14:	ldr	x22, [x1]
  427e18:	stp	x19, x20, [sp, #16]
  427e1c:	mov	x19, x0
  427e20:	mov	x20, #0x0                   	// #0
  427e24:	ldr	w0, [x21, #8]
  427e28:	cmp	x0, x20
  427e2c:	b.ls	427e60 <ferror@plt+0x25090>  // b.plast
  427e30:	ldrb	w0, [x22, x20]
  427e34:	add	x1, x22, x20
  427e38:	tbz	w0, #7, 427e58 <ferror@plt+0x25088>
  427e3c:	sub	x20, x20, #0x1
  427e40:	mov	x0, x19
  427e44:	add	x19, x19, #0xa
  427e48:	bl	426f18 <ferror@plt+0x24148>
  427e4c:	add	x20, x0, x20
  427e50:	add	x20, x20, #0x1
  427e54:	b	427e24 <ferror@plt+0x25054>
  427e58:	strb	w0, [x19], #1
  427e5c:	b	427e50 <ferror@plt+0x25080>
  427e60:	mov	x0, x19
  427e64:	ldp	x19, x20, [sp, #16]
  427e68:	ldp	x21, x22, [sp, #32]
  427e6c:	ldp	x29, x30, [sp], #48
  427e70:	ret
  427e74:	stp	x29, x30, [sp, #-32]!
  427e78:	mov	x29, sp
  427e7c:	stp	x19, x20, [sp, #16]
  427e80:	mov	x20, x1
  427e84:	mov	x19, x2
  427e88:	ldrb	w4, [x1, #4]
  427e8c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x235fc>
  427e90:	ldrb	w2, [x20, #4]
  427e94:	add	x1, x1, #0x2d8
  427e98:	lsl	x5, x2, #4
  427e9c:	ldr	w6, [x1, x5]
  427ea0:	cmp	w6, #0x3
  427ea4:	b.hi	427f28 <ferror@plt+0x25158>  // b.pmore
  427ea8:	adrp	x5, 468000 <_obstack_memory_used@@Base+0x235fc>
  427eac:	and	w3, w3, #0xff
  427eb0:	add	x5, x5, #0x1a8
  427eb4:	ldrb	w5, [x5, w6, uxtw]
  427eb8:	adr	x6, 427ec4 <ferror@plt+0x250f4>
  427ebc:	add	x5, x6, w5, sxtb #2
  427ec0:	br	x5
  427ec4:	ldrh	w0, [x20, #6]
  427ec8:	tbz	w0, #1, 427ef4 <ferror@plt+0x25124>
  427ecc:	add	x1, x1, #0x540
  427ed0:	sub	w4, w4, #0x25
  427ed4:	ldr	x2, [x1, w4, sxtw #3]
  427ed8:	mov	x0, #0x0                   	// #0
  427edc:	ldrb	w1, [x2, x0]
  427ee0:	add	x3, x19, x0
  427ee4:	cbz	w1, 427f80 <ferror@plt+0x251b0>
  427ee8:	strb	w1, [x19, x0]
  427eec:	add	x0, x0, #0x1
  427ef0:	b	427edc <ferror@plt+0x2510c>
  427ef4:	tbnz	w0, #4, 427f04 <ferror@plt+0x25134>
  427ef8:	add	x1, x1, x2, lsl #4
  427efc:	ldr	x2, [x1, #8]
  427f00:	b	427ed8 <ferror@plt+0x25108>
  427f04:	cbz	w3, 427f38 <ferror@plt+0x25168>
  427f08:	ldr	x0, [x20, #16]
  427f0c:	ldr	w2, [x0, #8]
  427f10:	ldr	x1, [x0]
  427f14:	mov	x0, x19
  427f18:	bl	4026a0 <memcpy@plt>
  427f1c:	ldr	x0, [x20, #16]
  427f20:	ldr	w0, [x0, #8]
  427f24:	add	x19, x19, x0
  427f28:	mov	x0, x19
  427f2c:	ldp	x19, x20, [sp, #16]
  427f30:	ldp	x29, x30, [sp], #32
  427f34:	ret
  427f38:	mov	x0, x19
  427f3c:	ldr	x1, [x20, #8]
  427f40:	ldp	x19, x20, [sp, #16]
  427f44:	ldp	x29, x30, [sp], #32
  427f48:	b	427e04 <ferror@plt+0x25034>
  427f4c:	ldr	w2, [x20, #8]
  427f50:	mov	x0, x19
  427f54:	ldr	x1, [x20, #16]
  427f58:	bl	4026a0 <memcpy@plt>
  427f5c:	ldr	w0, [x20, #8]
  427f60:	b	427f24 <ferror@plt+0x25154>
  427f64:	add	x1, x1, x2, lsl #4
  427f68:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  427f6c:	add	x2, x2, #0xce6
  427f70:	ldr	x3, [x1, #8]
  427f74:	mov	w1, #0x4                   	// #4
  427f78:	bl	421610 <ferror@plt+0x1e840>
  427f7c:	b	427f28 <ferror@plt+0x25158>
  427f80:	mov	x19, x3
  427f84:	b	427f28 <ferror@plt+0x25158>
  427f88:	stp	x29, x30, [sp, #-48]!
  427f8c:	mov	x29, sp
  427f90:	stp	x19, x20, [sp, #16]
  427f94:	mov	x20, x0
  427f98:	stp	x21, x22, [sp, #32]
  427f9c:	mov	x21, x1
  427fa0:	ldr	w1, [x0, #1192]
  427fa4:	ldr	w0, [x2]
  427fa8:	cmp	w1, w0
  427fac:	b.ge	428034 <ferror@plt+0x25264>  // b.tcont
  427fb0:	ldrb	w0, [x20, #18]
  427fb4:	cbnz	w0, 428034 <ferror@plt+0x25264>
  427fb8:	mov	x22, x2
  427fbc:	mov	x0, x21
  427fc0:	bl	427dbc <ferror@plt+0x24fec>
  427fc4:	mov	w0, w0
  427fc8:	bl	44526c <_obstack_memory_used@@Base+0x868>
  427fcc:	mov	x19, x0
  427fd0:	mov	x2, x0
  427fd4:	mov	x1, x21
  427fd8:	mov	x0, x20
  427fdc:	mov	w3, #0x0                   	// #0
  427fe0:	bl	427e74 <ferror@plt+0x250a4>
  427fe4:	sub	x5, x0, x19
  427fe8:	ldr	w0, [x22]
  427fec:	mov	x6, x19
  427ff0:	cmp	w0, #0x1
  427ff4:	b.ne	428028 <ferror@plt+0x25258>  // b.any
  427ff8:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  427ffc:	add	x4, x4, #0xcfb
  428000:	ldr	w2, [x21]
  428004:	mov	x0, x20
  428008:	mov	w3, #0x0                   	// #0
  42800c:	mov	w1, #0x10                  	// #16
  428010:	bl	42183c <ferror@plt+0x1ea6c>
  428014:	mov	x0, x19
  428018:	ldp	x19, x20, [sp, #16]
  42801c:	ldp	x21, x22, [sp, #32]
  428020:	ldp	x29, x30, [sp], #48
  428024:	b	402b30 <free@plt>
  428028:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  42802c:	add	x4, x4, #0xd11
  428030:	b	428000 <ferror@plt+0x25230>
  428034:	ldp	x19, x20, [sp, #16]
  428038:	ldp	x21, x22, [sp, #32]
  42803c:	ldp	x29, x30, [sp], #48
  428040:	ret
  428044:	mov	w2, w0
  428048:	and	w3, w1, #0xff
  42804c:	tst	w1, #0x2
  428050:	b.eq	42806c <ferror@plt+0x2529c>  // b.none
  428054:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x235fc>
  428058:	add	x0, x0, #0x2d8
  42805c:	sub	w2, w2, #0x25
  428060:	add	x0, x0, #0x540
  428064:	ldr	x0, [x0, w2, sxtw #3]
  428068:	ret
  42806c:	tbz	w3, #4, 428074 <ferror@plt+0x252a4>
  428070:	b	433a44 <ferror@plt+0x30c74>
  428074:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x235fc>
  428078:	add	x0, x0, #0x2d8
  42807c:	add	x2, x0, w2, sxtw #4
  428080:	ldr	x0, [x2, #8]
  428084:	b	428068 <ferror@plt+0x25298>
  428088:	stp	x29, x30, [sp, #-64]!
  42808c:	mov	x29, sp
  428090:	stp	x19, x20, [sp, #16]
  428094:	mov	x20, x0
  428098:	ldrb	w2, [x0, #4]
  42809c:	stp	x21, x22, [sp, #32]
  4280a0:	mov	x21, x1
  4280a4:	ldrb	w1, [x20, #4]
  4280a8:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x235fc>
  4280ac:	add	x0, x0, #0x2d8
  4280b0:	lsl	x3, x1, #4
  4280b4:	add	x1, x0, x1, lsl #4
  4280b8:	ldr	w3, [x0, x3]
  4280bc:	cmp	w3, #0x1
  4280c0:	b.eq	428114 <ferror@plt+0x25344>  // b.none
  4280c4:	cmp	w3, #0x2
  4280c8:	b.eq	42817c <ferror@plt+0x253ac>  // b.none
  4280cc:	cbnz	w3, 4280f8 <ferror@plt+0x25328>
  4280d0:	ldrh	w3, [x20, #6]
  4280d4:	tbz	w3, #1, 428108 <ferror@plt+0x25338>
  4280d8:	add	x0, x0, #0x540
  4280dc:	sub	w1, w2, #0x25
  4280e0:	ldr	x19, [x0, w1, sxtw #3]
  4280e4:	ldrb	w0, [x19]
  4280e8:	mov	x1, x21
  4280ec:	bl	402810 <putc_unlocked@plt>
  4280f0:	ldrb	w0, [x19, #1]!
  4280f4:	cbnz	w0, 4280e8 <ferror@plt+0x25318>
  4280f8:	ldp	x19, x20, [sp, #16]
  4280fc:	ldp	x21, x22, [sp, #32]
  428100:	ldp	x29, x30, [sp], #64
  428104:	ret
  428108:	tbnz	w3, #4, 428114 <ferror@plt+0x25344>
  42810c:	ldr	x19, [x1, #8]
  428110:	b	4280e4 <ferror@plt+0x25314>
  428114:	ldr	x0, [x20, #8]
  428118:	mov	x19, #0x0                   	// #0
  42811c:	ldr	x22, [x0]
  428120:	ldr	x0, [x20, #8]
  428124:	ldr	w1, [x0, #8]
  428128:	cmp	x1, x19
  42812c:	b.ls	4280f8 <ferror@plt+0x25328>  // b.plast
  428130:	ldrb	w2, [x22, x19]
  428134:	add	x1, x22, x19
  428138:	tbz	w2, #7, 428168 <ferror@plt+0x25398>
  42813c:	add	x0, sp, #0x30
  428140:	sub	x19, x19, #0x1
  428144:	bl	426f18 <ferror@plt+0x24148>
  428148:	add	x19, x0, x19
  42814c:	mov	x3, x21
  428150:	add	x0, sp, #0x30
  428154:	mov	x2, #0xa                   	// #10
  428158:	mov	x1, #0x1                   	// #1
  42815c:	bl	4026e0 <fwrite_unlocked@plt>
  428160:	add	x19, x19, #0x1
  428164:	b	428120 <ferror@plt+0x25350>
  428168:	ldr	x0, [x0]
  42816c:	mov	x1, x21
  428170:	ldrb	w0, [x0, x19]
  428174:	bl	402c60 <fputc_unlocked@plt>
  428178:	b	428160 <ferror@plt+0x25390>
  42817c:	ldr	w2, [x20, #8]
  428180:	mov	x3, x21
  428184:	ldr	x0, [x20, #16]
  428188:	mov	x1, #0x1                   	// #1
  42818c:	bl	4026e0 <fwrite_unlocked@plt>
  428190:	b	4280f8 <ferror@plt+0x25328>
  428194:	ldr	w3, [x0, #4]
  428198:	ldr	w2, [x1, #4]
  42819c:	and	w3, w3, #0xffff00ff
  4281a0:	and	w2, w2, #0xffff00ff
  4281a4:	cmp	w3, w2
  4281a8:	b.ne	428270 <ferror@plt+0x254a0>  // b.any
  4281ac:	ldrb	w2, [x0, #4]
  4281b0:	adrp	x3, 468000 <_obstack_memory_used@@Base+0x235fc>
  4281b4:	add	x3, x3, #0x2d8
  4281b8:	ldrb	w4, [x0, #4]
  4281bc:	lsl	x2, x2, #4
  4281c0:	ldr	w2, [x3, x2]
  4281c4:	cmp	w2, #0x2
  4281c8:	b.eq	428238 <ferror@plt+0x25468>  // b.none
  4281cc:	cmp	w2, #0x3
  4281d0:	b.eq	4281f8 <ferror@plt+0x25428>  // b.none
  4281d4:	cmp	w2, #0x1
  4281d8:	b.eq	428228 <ferror@plt+0x25458>  // b.none
  4281dc:	cmp	w4, #0x26
  4281e0:	b.ne	428220 <ferror@plt+0x25450>  // b.any
  4281e4:	ldr	w2, [x0, #8]
  4281e8:	ldr	w0, [x1, #8]
  4281ec:	cmp	w2, w0
  4281f0:	cset	w0, eq  // eq = none
  4281f4:	ret
  4281f8:	cmp	w4, #0x50
  4281fc:	b.ne	428220 <ferror@plt+0x25450>  // b.any
  428200:	ldr	w3, [x0, #8]
  428204:	ldr	w2, [x1, #8]
  428208:	cmp	w3, w2
  42820c:	b.ne	428270 <ferror@plt+0x254a0>  // b.any
  428210:	ldr	x2, [x0, #16]
  428214:	ldr	x0, [x1, #16]
  428218:	cmp	x2, x0
  42821c:	b	4281f0 <ferror@plt+0x25420>
  428220:	mov	w0, #0x1                   	// #1
  428224:	ret
  428228:	ldr	x3, [x0, #8]
  42822c:	ldr	x2, [x1, #8]
  428230:	cmp	x3, x2
  428234:	b	42820c <ferror@plt+0x2543c>
  428238:	ldr	w2, [x0, #8]
  42823c:	ldr	w3, [x1, #8]
  428240:	cmp	w2, w3
  428244:	b.ne	428270 <ferror@plt+0x254a0>  // b.any
  428248:	stp	x29, x30, [sp, #-16]!
  42824c:	mov	w2, w2
  428250:	mov	x29, sp
  428254:	ldr	x0, [x0, #16]
  428258:	ldr	x1, [x1, #16]
  42825c:	bl	402a90 <memcmp@plt>
  428260:	cmp	w0, #0x0
  428264:	cset	w0, eq  // eq = none
  428268:	ldp	x29, x30, [sp], #16
  42826c:	ret
  428270:	mov	w0, #0x0                   	// #0
  428274:	ret
  428278:	mov	x7, x0
  42827c:	ldrh	w0, [x1, #6]
  428280:	ldrb	w5, [x1, #4]
  428284:	mov	w4, #0x35                  	// #53
  428288:	ldrb	w8, [x2, #4]
  42828c:	adrp	x6, 468000 <_obstack_memory_used@@Base+0x235fc>
  428290:	tst	x0, #0x10
  428294:	ldrh	w0, [x2, #6]
  428298:	csel	w5, w5, w4, eq  // eq = none
  42829c:	add	x6, x6, #0x2d8
  4282a0:	tst	x0, #0x10
  4282a4:	csel	w4, w8, w4, eq  // eq = none
  4282a8:	tbz	w0, #1, 4282e4 <ferror@plt+0x25514>
  4282ac:	add	x0, x6, #0x540
  4282b0:	sub	w3, w4, #0x25
  4282b4:	ldr	x0, [x0, w3, sxtw #3]
  4282b8:	ldrb	w3, [x0]
  4282bc:	cmp	w5, #0xd
  4282c0:	cset	w0, le
  4282c4:	cmp	w3, #0x3d
  4282c8:	csel	w0, w0, wzr, eq  // eq = none
  4282cc:	cbnz	w0, 428508 <ferror@plt+0x25738>
  4282d0:	cmp	w5, #0x12
  4282d4:	b.hi	428340 <ferror@plt+0x25570>  // b.pmore
  4282d8:	cmp	w5, #0x1
  4282dc:	b.hi	42831c <ferror@plt+0x2554c>  // b.pmore
  4282e0:	ret
  4282e4:	sbfiz	x3, x4, #4, #32
  4282e8:	add	x0, x6, w4, sxtw #4
  4282ec:	ldr	w3, [x6, x3]
  4282f0:	cbnz	w3, 4282fc <ferror@plt+0x2552c>
  4282f4:	ldr	x0, [x0, #8]
  4282f8:	b	4282b8 <ferror@plt+0x254e8>
  4282fc:	mov	w3, #0xffffffff            	// #-1
  428300:	b	4282bc <ferror@plt+0x254ec>
  428304:	adrp	x9, 468000 <_obstack_memory_used@@Base+0x235fc>
  428308:	add	x9, x9, #0x1ac
  42830c:	ldrb	w5, [x9, w5, uxtw]
  428310:	adr	x9, 42831c <ferror@plt+0x2554c>
  428314:	add	x5, x9, w5, sxtb #2
  428318:	br	x5
  42831c:	sub	w5, w5, #0x2
  428320:	cmp	w5, #0x10
  428324:	b.hi	428354 <ferror@plt+0x25584>  // b.pmore
  428328:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x235fc>
  42832c:	add	x0, x0, #0x1c0
  428330:	ldrb	w0, [x0, w5, uxtw]
  428334:	adr	x1, 428340 <ferror@plt+0x25570>
  428338:	add	x0, x1, w0, sxtb #2
  42833c:	br	x0
  428340:	cmp	w5, #0x25
  428344:	b.eq	4283f0 <ferror@plt+0x25620>  // b.none
  428348:	sub	w5, w5, #0x2f
  42834c:	cmp	w5, #0x13
  428350:	b.ls	428304 <ferror@plt+0x25534>  // b.plast
  428354:	mov	w0, #0x0                   	// #0
  428358:	b	4282e0 <ferror@plt+0x25510>
  42835c:	cmp	w3, #0x3e
  428360:	cset	w0, eq  // eq = none
  428364:	b	4282e0 <ferror@plt+0x25510>
  428368:	mov	x0, #0x2000000000          	// #137438953472
  42836c:	cmp	w3, #0x3d
  428370:	movk	x0, #0x1400, lsl #48
  428374:	lsr	x0, x0, x3
  428378:	mvn	x0, x0
  42837c:	and	w0, w0, #0x1
  428380:	csinc	w0, w0, wzr, cc  // cc = lo, ul, last
  428384:	eor	w0, w0, #0x1
  428388:	b	4282e0 <ferror@plt+0x25510>
  42838c:	cmp	w3, #0x2b
  428390:	b	428360 <ferror@plt+0x25590>
  428394:	cmp	w3, #0x2d
  428398:	mov	w0, #0x3e                  	// #62
  42839c:	ccmp	w3, w0, #0x4, ne  // ne = any
  4283a0:	b	428360 <ferror@plt+0x25590>
  4283a4:	cmp	w3, #0x2f
  4283a8:	mov	w0, #0x2a                  	// #42
  4283ac:	b	42839c <ferror@plt+0x255cc>
  4283b0:	cmp	w3, #0x26
  4283b4:	b	428360 <ferror@plt+0x25590>
  4283b8:	cmp	w3, #0x7c
  4283bc:	b	428360 <ferror@plt+0x25590>
  4283c0:	and	w3, w3, #0xfffffffb
  4283c4:	cmp	w3, #0x3a
  4283c8:	b	428360 <ferror@plt+0x25590>
  4283cc:	cmp	w3, #0x2a
  4283d0:	b	428360 <ferror@plt+0x25590>
  4283d4:	cmp	w3, #0x2e
  4283d8:	cset	w0, eq  // eq = none
  4283dc:	cmp	w3, #0x25
  4283e0:	csinc	w0, w0, wzr, ne  // ne = any
  4283e4:	cbnz	w0, 4282e0 <ferror@plt+0x25510>
  4283e8:	cmp	w4, #0x37
  4283ec:	b	428360 <ferror@plt+0x25590>
  4283f0:	cmp	w3, #0x23
  4283f4:	ccmp	w3, w5, #0x4, ne  // ne = any
  4283f8:	b	428360 <ferror@plt+0x25590>
  4283fc:	cmp	w4, #0x37
  428400:	b.ne	428450 <ferror@plt+0x25680>  // b.any
  428404:	ldr	w5, [x2, #8]
  428408:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  42840c:	add	x1, x1, #0xb08
  428410:	mov	x0, #0x0                   	// #0
  428414:	mov	w6, #0x204                 	// #516
  428418:	cmp	w5, w0
  42841c:	b.ls	428508 <ferror@plt+0x25738>  // b.plast
  428420:	ldr	x3, [x2, #16]
  428424:	ldrb	w8, [x3, x0]
  428428:	ldrb	w3, [x3, x0]
  42842c:	ldrh	w3, [x1, x3, lsl #1]
  428430:	tst	w6, w3
  428434:	b.ne	428448 <ferror@plt+0x25678>  // b.any
  428438:	cmp	w8, #0x24
  42843c:	b.ne	428464 <ferror@plt+0x25694>  // b.any
  428440:	ldrb	w3, [x7, #1146]
  428444:	cbz	w3, 428464 <ferror@plt+0x25694>
  428448:	add	x0, x0, #0x1
  42844c:	b	428418 <ferror@plt+0x25648>
  428450:	cmp	w4, #0x35
  428454:	cset	w0, eq  // eq = none
  428458:	cmp	w4, #0x38
  42845c:	csinc	w0, w0, wzr, ne  // ne = any
  428460:	cbnz	w0, 4282e0 <ferror@plt+0x25510>
  428464:	cmp	w4, #0x3e
  428468:	b	428360 <ferror@plt+0x25590>
  42846c:	and	w4, w4, #0xfffffffd
  428470:	cmp	w4, #0x35
  428474:	b.eq	428508 <ferror@plt+0x25738>  // b.none
  428478:	cmp	w3, #0x2b
  42847c:	b.eq	428508 <ferror@plt+0x25738>  // b.none
  428480:	sub	w3, w3, #0x2d
  428484:	cmp	w3, #0x1
  428488:	cset	w0, ls  // ls = plast
  42848c:	b	4282e0 <ferror@plt+0x25510>
  428490:	ldr	x1, [x1, #16]
  428494:	ldrb	w1, [x1]
  428498:	cmp	w1, #0x5c
  42849c:	b.ne	4284a8 <ferror@plt+0x256d8>  // b.any
  4284a0:	cmp	w4, #0x35
  4284a4:	b.eq	428508 <ferror@plt+0x25738>  // b.none
  4284a8:	ldrb	w2, [x7, #1122]
  4284ac:	cbz	w2, 4282e0 <ferror@plt+0x25510>
  4284b0:	cmp	w1, #0x40
  4284b4:	b.ne	4282e0 <ferror@plt+0x25510>  // b.any
  4284b8:	cmp	w4, #0x35
  4284bc:	cset	w0, eq  // eq = none
  4284c0:	cmp	w4, #0x3e
  4284c4:	csinc	w0, w0, wzr, ne  // ne = any
  4284c8:	b	4282e0 <ferror@plt+0x25510>
  4284cc:	ldrb	w1, [x7, #1161]
  4284d0:	cbz	w1, 4282e0 <ferror@plt+0x25510>
  4284d4:	cmp	w4, #0x35
  4284d8:	b.eq	428508 <ferror@plt+0x25738>  // b.none
  4284dc:	sbfiz	x8, x8, #4, #32
  4284e0:	ldr	w1, [x6, x8]
  4284e4:	cmp	w1, #0x2
  4284e8:	b.ne	4282e0 <ferror@plt+0x25510>  // b.any
  4284ec:	ldr	x0, [x2, #16]
  4284f0:	ldrb	w1, [x0]
  4284f4:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4284f8:	add	x0, x0, #0xb08
  4284fc:	ldrh	w0, [x0, x1, lsl #1]
  428500:	ubfx	x0, x0, #9, #1
  428504:	b	4282e0 <ferror@plt+0x25510>
  428508:	mov	w0, #0x1                   	// #1
  42850c:	b	4282e0 <ferror@plt+0x25510>
  428510:	stp	x29, x30, [sp, #-48]!
  428514:	mov	x29, sp
  428518:	stp	x19, x20, [sp, #16]
  42851c:	mov	x20, x1
  428520:	str	x21, [sp, #32]
  428524:	mov	x21, x0
  428528:	bl	430978 <ferror@plt+0x2dba8>
  42852c:	mov	x19, x0
  428530:	ldrb	w0, [x19, #4]
  428534:	mov	x1, x20
  428538:	cmp	w0, #0x16
  42853c:	b.eq	42856c <ferror@plt+0x2579c>  // b.none
  428540:	mov	x0, x19
  428544:	bl	428088 <ferror@plt+0x252b8>
  428548:	mov	x0, x21
  42854c:	bl	430978 <ferror@plt+0x2dba8>
  428550:	mov	x19, x0
  428554:	ldrh	w0, [x0, #6]
  428558:	tbz	w0, #0, 428530 <ferror@plt+0x25760>
  42855c:	mov	x1, x20
  428560:	mov	w0, #0x20                  	// #32
  428564:	bl	402810 <putc_unlocked@plt>
  428568:	b	428530 <ferror@plt+0x25760>
  42856c:	ldp	x19, x20, [sp, #16]
  428570:	mov	w0, #0xa                   	// #10
  428574:	ldr	x21, [sp, #32]
  428578:	ldp	x29, x30, [sp], #48
  42857c:	b	402810 <putc_unlocked@plt>
  428580:	stp	x29, x30, [sp, #-80]!
  428584:	mov	x29, sp
  428588:	stp	x19, x20, [sp, #16]
  42858c:	stp	x21, x22, [sp, #32]
  428590:	mov	x22, x0
  428594:	mov	x21, x1
  428598:	stp	x23, x24, [sp, #48]
  42859c:	str	x25, [sp, #64]
  4285a0:	cbz	x1, 428668 <ferror@plt+0x25898>
  4285a4:	mov	x0, x1
  4285a8:	bl	402700 <strlen@plt>
  4285ac:	mov	w19, w0
  4285b0:	add	w0, w19, #0x78
  4285b4:	add	w23, w19, #0x78
  4285b8:	bl	44526c <_obstack_memory_used@@Base+0x868>
  4285bc:	mov	x20, x0
  4285c0:	cbz	x21, 4285d8 <ferror@plt+0x25808>
  4285c4:	add	w19, w19, #0x2
  4285c8:	mov	x2, x21
  4285cc:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x225fc>
  4285d0:	add	x1, x1, #0xd26
  4285d4:	bl	4027a0 <sprintf@plt>
  4285d8:	mov	x0, x22
  4285dc:	bl	430978 <ferror@plt+0x2dba8>
  4285e0:	mov	x21, x0
  4285e4:	mov	w25, #0x20                  	// #32
  4285e8:	ldrb	w0, [x21, #4]
  4285ec:	mov	w24, w19
  4285f0:	cmp	w0, #0x16
  4285f4:	b.eq	428670 <ferror@plt+0x258a0>  // b.none
  4285f8:	add	w19, w19, #0x2
  4285fc:	mov	x0, x21
  428600:	bl	427dbc <ferror@plt+0x24fec>
  428604:	add	w19, w19, w0
  428608:	cmp	w19, w23
  42860c:	b.ls	42862c <ferror@plt+0x2585c>  // b.plast
  428610:	lsl	w1, w23, #1
  428614:	mov	x0, x20
  428618:	cmp	w19, w1
  42861c:	csel	w23, w19, w1, cs  // cs = hs, nlast
  428620:	csel	w1, w19, w1, cs  // cs = hs, nlast
  428624:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  428628:	mov	x20, x0
  42862c:	add	x2, x20, x24
  428630:	mov	x1, x21
  428634:	mov	w3, #0x0                   	// #0
  428638:	mov	x0, x22
  42863c:	bl	427e74 <ferror@plt+0x250a4>
  428640:	sub	x24, x0, x20
  428644:	mov	x0, x22
  428648:	bl	430978 <ferror@plt+0x2dba8>
  42864c:	mov	x21, x0
  428650:	ldrh	w0, [x0, #6]
  428654:	mov	w19, w24
  428658:	tbz	w0, #0, 4285e8 <ferror@plt+0x25818>
  42865c:	add	w19, w24, #0x1
  428660:	strb	w25, [x20, w24, uxtw]
  428664:	b	4285e8 <ferror@plt+0x25818>
  428668:	mov	w19, #0x0                   	// #0
  42866c:	b	4285b0 <ferror@plt+0x257e0>
  428670:	strb	wzr, [x20, x24]
  428674:	mov	x0, x20
  428678:	ldp	x19, x20, [sp, #16]
  42867c:	ldp	x21, x22, [sp, #32]
  428680:	ldp	x23, x24, [sp, #48]
  428684:	ldr	x25, [sp, #64]
  428688:	ldp	x29, x30, [sp], #80
  42868c:	ret
  428690:	mov	x2, x1
  428694:	mov	x3, x2
  428698:	ldr	x2, [x2]
  42869c:	cbnz	x2, 428694 <ferror@plt+0x258c4>
  4286a0:	ldr	x2, [x0, #72]
  4286a4:	str	x2, [x3]
  4286a8:	str	x1, [x0, #72]
  4286ac:	ret
  4286b0:	add	x3, x1, x1, lsl #1
  4286b4:	add	x5, x0, #0x48
  4286b8:	mov	x2, #0x1f40                	// #8000
  4286bc:	ldr	x0, [x0, #72]
  4286c0:	add	x3, x2, x3, lsr #1
  4286c4:	cbnz	x0, 428710 <ferror@plt+0x25940>
  4286c8:	stp	x29, x30, [sp, #-32]!
  4286cc:	mov	x29, sp
  4286d0:	str	x19, [sp, #16]
  4286d4:	mov	x19, #0x1f40                	// #8000
  4286d8:	cmp	x1, x19
  4286dc:	csel	x19, x1, x19, cs  // cs = hs, nlast
  4286e0:	add	x19, x19, #0x7
  4286e4:	and	x19, x19, #0xfffffffffffffff8
  4286e8:	add	x0, x19, #0x20
  4286ec:	bl	44526c <_obstack_memory_used@@Base+0x868>
  4286f0:	mov	x1, x0
  4286f4:	add	x0, x0, x19
  4286f8:	stp	x1, x1, [x0, #8]
  4286fc:	str	x0, [x0, #24]
  428700:	str	xzr, [x1, x19]
  428704:	ldr	x19, [sp, #16]
  428708:	ldp	x29, x30, [sp], #32
  42870c:	ret
  428710:	ldr	x4, [x0, #8]
  428714:	ldr	x2, [x0, #24]
  428718:	sub	x2, x2, x4
  42871c:	cmp	x2, x1
  428720:	b.cc	42872c <ferror@plt+0x2595c>  // b.lo, b.ul, b.last
  428724:	cmp	x3, x2
  428728:	b.cs	428738 <ferror@plt+0x25968>  // b.hs, b.nlast
  42872c:	mov	x5, x0
  428730:	ldr	x0, [x0]
  428734:	b	4286c4 <ferror@plt+0x258f4>
  428738:	ldr	x1, [x0]
  42873c:	str	x1, [x5]
  428740:	str	xzr, [x0]
  428744:	str	x4, [x0, #16]
  428748:	ret
  42874c:	stp	x29, x30, [sp, #-32]!
  428750:	mov	x29, sp
  428754:	stp	x19, x20, [sp, #16]
  428758:	mov	x19, x1
  42875c:	ldp	x1, x3, [x1, #16]
  428760:	sub	x1, x3, x1
  428764:	add	x1, x2, x1, lsl #1
  428768:	bl	4286b0 <ferror@plt+0x258e0>
  42876c:	ldp	x1, x2, [x19, #16]
  428770:	mov	x20, x0
  428774:	ldr	x0, [x0, #8]
  428778:	str	x20, [x19]
  42877c:	sub	x2, x2, x1
  428780:	bl	4026a0 <memcpy@plt>
  428784:	mov	x0, x20
  428788:	ldp	x19, x20, [sp, #16]
  42878c:	ldp	x29, x30, [sp], #32
  428790:	ret
  428794:	stp	x29, x30, [sp, #-80]!
  428798:	mov	x29, sp
  42879c:	stp	x21, x22, [sp, #32]
  4287a0:	ldr	x22, [x3]
  4287a4:	stp	x19, x20, [sp, #16]
  4287a8:	mov	x20, x2
  4287ac:	stp	x23, x24, [sp, #48]
  4287b0:	mov	x23, x1
  4287b4:	mov	x24, x4
  4287b8:	stp	x25, x26, [sp, #64]
  4287bc:	mov	x25, x3
  4287c0:	ldr	x19, [x4]
  4287c4:	cbnz	x22, 428814 <ferror@plt+0x25a44>
  4287c8:	mov	x1, x2
  4287cc:	bl	4286b0 <ferror@plt+0x258e0>
  4287d0:	mov	x22, x0
  4287d4:	mov	x19, x0
  4287d8:	ldr	x0, [x19, #16]
  4287dc:	mov	x2, x20
  4287e0:	mov	x1, x23
  4287e4:	bl	4026a0 <memcpy@plt>
  4287e8:	ldr	x2, [x19, #16]
  4287ec:	add	x20, x2, x20
  4287f0:	str	x20, [x19, #16]
  4287f4:	str	x22, [x25]
  4287f8:	ldp	x21, x22, [sp, #32]
  4287fc:	ldp	x25, x26, [sp, #64]
  428800:	str	x19, [x24]
  428804:	ldp	x19, x20, [sp, #16]
  428808:	ldp	x23, x24, [sp, #48]
  42880c:	ldp	x29, x30, [sp], #80
  428810:	ret
  428814:	mov	x26, x0
  428818:	ldp	x0, x21, [x19, #16]
  42881c:	sub	x21, x21, x0
  428820:	cmp	x21, x2
  428824:	b.cs	4287d8 <ferror@plt+0x25a08>  // b.hs, b.nlast
  428828:	mov	x2, x21
  42882c:	bl	4026a0 <memcpy@plt>
  428830:	ldr	x0, [x19, #16]
  428834:	sub	x20, x20, x21
  428838:	mov	x1, x19
  42883c:	mov	x2, x20
  428840:	add	x0, x0, x21
  428844:	str	x0, [x19, #16]
  428848:	add	x23, x23, x21
  42884c:	mov	x0, x26
  428850:	bl	42874c <ferror@plt+0x2597c>
  428854:	mov	x19, x0
  428858:	b	4287d8 <ferror@plt+0x25a08>
  42885c:	stp	x29, x30, [sp, #-48]!
  428860:	mov	x29, sp
  428864:	stp	x19, x20, [sp, #16]
  428868:	ldr	x20, [x1]
  42886c:	str	x21, [sp, #32]
  428870:	mov	x21, x1
  428874:	ldp	x1, x3, [x20, #16]
  428878:	sub	x1, x3, x1
  42887c:	add	x1, x2, x1, lsl #1
  428880:	bl	4286b0 <ferror@plt+0x258e0>
  428884:	ldp	x1, x2, [x20, #16]
  428888:	mov	x19, x0
  42888c:	ldr	x0, [x0, #8]
  428890:	sub	x2, x2, x1
  428894:	bl	4026a0 <memcpy@plt>
  428898:	str	x20, [x19]
  42889c:	str	x19, [x21]
  4288a0:	ldp	x19, x20, [sp, #16]
  4288a4:	ldr	x21, [sp, #32]
  4288a8:	ldp	x29, x30, [sp], #48
  4288ac:	ret
  4288b0:	cbnz	x0, 4288b8 <ferror@plt+0x25ae8>
  4288b4:	ret
  4288b8:	stp	x29, x30, [sp, #-32]!
  4288bc:	mov	x29, sp
  4288c0:	str	x19, [sp, #16]
  4288c4:	ldp	x19, x0, [x0]
  4288c8:	bl	402b30 <free@plt>
  4288cc:	mov	x0, x19
  4288d0:	cbnz	x19, 4288c4 <ferror@plt+0x25af4>
  4288d4:	ldr	x19, [sp, #16]
  4288d8:	ldp	x29, x30, [sp], #32
  4288dc:	ret
  4288e0:	stp	x29, x30, [sp, #-32]!
  4288e4:	mov	x29, sp
  4288e8:	ldr	x2, [x0, #64]
  4288ec:	stp	x19, x20, [sp, #16]
  4288f0:	mov	x19, x1
  4288f4:	ldp	x3, x4, [x2, #16]
  4288f8:	sub	x4, x4, x3
  4288fc:	cmp	x4, x1
  428900:	b.cs	428920 <ferror@plt+0x25b50>  // b.hs, b.nlast
  428904:	mov	x20, x0
  428908:	bl	4286b0 <ferror@plt+0x258e0>
  42890c:	mov	x2, x0
  428910:	ldr	x3, [x0, #16]
  428914:	ldr	x0, [x20, #64]
  428918:	str	x0, [x2]
  42891c:	str	x2, [x20, #64]
  428920:	add	x19, x3, x19
  428924:	str	x19, [x2, #16]
  428928:	mov	x0, x3
  42892c:	ldp	x19, x20, [sp, #16]
  428930:	ldp	x29, x30, [sp], #32
  428934:	ret
  428938:	stp	x29, x30, [sp, #-64]!
  42893c:	mov	x29, sp
  428940:	stp	x23, x24, [sp, #48]
  428944:	mov	w24, w3
  428948:	mov	x23, x2
  42894c:	stp	x19, x20, [sp, #16]
  428950:	mov	x19, x1
  428954:	add	w1, w24, #0x1
  428958:	stp	x21, x22, [sp, #32]
  42895c:	mov	w22, w4
  428960:	bl	4288e0 <ferror@plt+0x25b10>
  428964:	mov	x21, x0
  428968:	mov	x2, x24
  42896c:	mov	x1, x23
  428970:	bl	4026a0 <memcpy@plt>
  428974:	mov	x20, x24
  428978:	strb	wzr, [x21, x24]
  42897c:	strb	w22, [x19, #4]
  428980:	ldp	x23, x24, [sp, #48]
  428984:	str	w20, [x19, #8]
  428988:	str	x21, [x19, #16]
  42898c:	ldp	x19, x20, [sp, #16]
  428990:	ldp	x21, x22, [sp, #32]
  428994:	ldp	x29, x30, [sp], #64
  428998:	ret
  42899c:	stp	x29, x30, [sp, #-208]!
  4289a0:	mov	x29, sp
  4289a4:	stp	x19, x20, [sp, #16]
  4289a8:	mov	x19, x2
  4289ac:	stp	x21, x22, [sp, #32]
  4289b0:	mov	x21, x1
  4289b4:	mov	w1, #0x55                  	// #85
  4289b8:	stp	x23, x24, [sp, #48]
  4289bc:	stp	x25, x26, [sp, #64]
  4289c0:	stp	x27, x28, [sp, #80]
  4289c4:	mov	x27, x0
  4289c8:	ldrb	w0, [x2]
  4289cc:	cmp	w0, #0x4c
  4289d0:	ccmp	w0, w1, #0x4, ne  // ne = any
  4289d4:	b.ne	428a88 <ferror@plt+0x25cb8>  // b.any
  4289d8:	ldrb	w22, [x2, #1]
  4289dc:	add	x6, x2, #0x2
  4289e0:	cmp	w22, #0x52
  4289e4:	b.ne	429210 <ferror@plt+0x26440>  // b.any
  4289e8:	ldr	x1, [x27]
  4289ec:	stp	xzr, xzr, [sp, #144]
  4289f0:	cmp	w0, #0x4c
  4289f4:	ldr	w8, [x1, #56]
  4289f8:	ldr	x1, [x1, #48]
  4289fc:	add	x28, x1, x8, lsl #4
  428a00:	b.eq	428abc <ferror@plt+0x25cec>  // b.none
  428a04:	cmp	w0, #0x55
  428a08:	b.eq	428ac4 <ferror@plt+0x25cf4>  // b.none
  428a0c:	cmp	w0, #0x75
  428a10:	b.ne	428acc <ferror@plt+0x25cfc>  // b.any
  428a14:	ldrb	w0, [x19, #1]
  428a18:	mov	w22, #0x42                  	// #66
  428a1c:	cmp	w0, #0x38
  428a20:	mov	w0, #0x40                  	// #64
  428a24:	csel	w22, w22, w0, eq  // eq = none
  428a28:	add	x25, x6, #0x1
  428a2c:	mov	x24, x19
  428a30:	sub	x0, x25, x19
  428a34:	mov	x23, #0x0                   	// #0
  428a38:	mov	x20, #0x0                   	// #0
  428a3c:	stp	wzr, wzr, [sp, #100]
  428a40:	str	wzr, [sp, #108]
  428a44:	str	x0, [sp, #112]
  428a48:	ldr	x0, [x28]
  428a4c:	cmp	x0, x25
  428a50:	b.cc	428aec <ferror@plt+0x25d1c>  // b.lo, b.ul, b.last
  428a54:	adrp	x26, 45e000 <_obstack_memory_used@@Base+0x195fc>
  428a58:	add	x26, x26, #0xafe
  428a5c:	ldr	x0, [x28]
  428a60:	cmp	x25, x0
  428a64:	b.ne	428dc8 <ferror@plt+0x25ff8>  // b.any
  428a68:	ldr	w0, [x28, #8]
  428a6c:	cmp	w0, #0x20
  428a70:	b.eq	428af8 <ferror@plt+0x25d28>  // b.none
  428a74:	cmp	w0, #0x5c
  428a78:	b.eq	428af8 <ferror@plt+0x25d28>  // b.none
  428a7c:	cbnz	w0, 428c00 <ferror@plt+0x25e30>
  428a80:	add	x28, x28, #0x10
  428a84:	b	428a5c <ferror@plt+0x25c8c>
  428a88:	cmp	w0, #0x75
  428a8c:	b.eq	428a9c <ferror@plt+0x25ccc>  // b.none
  428a90:	mov	w22, w0
  428a94:	add	x6, x2, #0x1
  428a98:	b	4289e0 <ferror@plt+0x25c10>
  428a9c:	ldrb	w22, [x2, #1]
  428aa0:	cmp	w22, #0x38
  428aa4:	b.eq	428ab0 <ferror@plt+0x25ce0>  // b.none
  428aa8:	add	x6, x2, #0x2
  428aac:	b	4289e0 <ferror@plt+0x25c10>
  428ab0:	ldrb	w22, [x2, #2]
  428ab4:	add	x6, x2, #0x3
  428ab8:	b	4289e0 <ferror@plt+0x25c10>
  428abc:	mov	w22, #0x3f                  	// #63
  428ac0:	b	428a28 <ferror@plt+0x25c58>
  428ac4:	mov	w22, #0x41                  	// #65
  428ac8:	b	428a28 <ferror@plt+0x25c58>
  428acc:	mov	w22, #0x3e                  	// #62
  428ad0:	b	428a28 <ferror@plt+0x25c58>
  428ad4:	mov	w0, #0x2                   	// #2
  428ad8:	mov	x26, #0x0                   	// #0
  428adc:	str	w0, [sp, #100]
  428ae0:	str	wzr, [sp, #108]
  428ae4:	mov	x23, x26
  428ae8:	b	428a48 <ferror@plt+0x25c78>
  428aec:	add	x28, x28, #0x10
  428af0:	mov	x26, x23
  428af4:	b	428ae4 <ferror@plt+0x25d14>
  428af8:	sub	x5, x25, x24
  428afc:	mov	x1, x24
  428b00:	mov	x2, x5
  428b04:	add	x4, sp, #0x98
  428b08:	add	x3, sp, #0x90
  428b0c:	mov	x0, x27
  428b10:	str	x5, [sp, #120]
  428b14:	bl	428794 <ferror@plt+0x259c4>
  428b18:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  428b1c:	add	x24, x1, #0x701
  428b20:	mov	x2, #0x1                   	// #1
  428b24:	add	x4, sp, #0x98
  428b28:	add	x3, sp, #0x90
  428b2c:	mov	x1, x24
  428b30:	mov	x0, x27
  428b34:	bl	428794 <ferror@plt+0x259c4>
  428b38:	ldr	x5, [sp, #120]
  428b3c:	add	x20, x20, #0x1
  428b40:	cmp	x23, #0x10
  428b44:	add	x2, x20, x5
  428b48:	b.hi	428b64 <ferror@plt+0x25d94>  // b.pmore
  428b4c:	cmp	x25, x24
  428b50:	b.eq	428b64 <ferror@plt+0x25d94>  // b.none
  428b54:	add	x1, sp, #0xb8
  428b58:	mov	w0, #0x5c                  	// #92
  428b5c:	strb	w0, [x1, x23]
  428b60:	add	x23, x23, #0x1
  428b64:	ldr	w24, [x28, #8]
  428b68:	add	x20, x2, #0x1
  428b6c:	cmp	w24, #0x20
  428b70:	b.ne	428bf8 <ferror@plt+0x25e28>  // b.any
  428b74:	mov	x0, x27
  428b78:	add	x4, sp, #0x98
  428b7c:	add	x3, sp, #0x90
  428b80:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  428b84:	mov	x2, #0x1                   	// #1
  428b88:	add	x1, x1, #0x3d6
  428b8c:	bl	428794 <ferror@plt+0x259c4>
  428b90:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x245fc>
  428b94:	cmp	x23, #0x10
  428b98:	add	x1, x0, #0x3d6
  428b9c:	b.hi	428bb4 <ferror@plt+0x25de4>  // b.pmore
  428ba0:	cmp	x25, x1
  428ba4:	b.eq	428bb4 <ferror@plt+0x25de4>  // b.none
  428ba8:	add	x0, sp, #0xb8
  428bac:	strb	w24, [x0, x23]
  428bb0:	add	x23, x23, #0x1
  428bb4:	add	x4, sp, #0x98
  428bb8:	add	x3, sp, #0x90
  428bbc:	mov	x1, x26
  428bc0:	mov	x0, x27
  428bc4:	mov	x2, #0x1                   	// #1
  428bc8:	bl	428794 <ferror@plt+0x259c4>
  428bcc:	add	x20, x20, #0x1
  428bd0:	mov	x24, x25
  428bd4:	cmp	x23, #0x10
  428bd8:	b.hi	428a80 <ferror@plt+0x25cb0>  // b.pmore
  428bdc:	cmp	x25, x26
  428be0:	b.eq	428a80 <ferror@plt+0x25cb0>  // b.none
  428be4:	add	x1, sp, #0xb8
  428be8:	mov	w0, #0xa                   	// #10
  428bec:	strb	w0, [x1, x23]
  428bf0:	add	x23, x23, #0x1
  428bf4:	b	428a80 <ferror@plt+0x25cb0>
  428bf8:	mov	x20, x2
  428bfc:	b	428bb4 <ferror@plt+0x25de4>
  428c00:	adrp	x1, 495000 <_obstack_memory_used@@Base+0x505fc>
  428c04:	add	x1, x1, #0x9bc
  428c08:	ldrb	w1, [x1, w0, uxtw]
  428c0c:	cbz	w1, 428db8 <ferror@plt+0x25fe8>
  428c10:	str	wzr, [x28, #8]
  428c14:	strb	w0, [sp, #143]
  428c18:	ldrb	w0, [x27, #1125]
  428c1c:	cbz	w0, 428a80 <ferror@plt+0x25cb0>
  428c20:	sub	x2, x25, x24
  428c24:	mov	x1, x24
  428c28:	add	x4, sp, #0x98
  428c2c:	add	x3, sp, #0x90
  428c30:	mov	x0, x27
  428c34:	str	x2, [sp, #120]
  428c38:	bl	428794 <ferror@plt+0x259c4>
  428c3c:	ldr	x2, [sp, #120]
  428c40:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  428c44:	add	x24, x1, #0x42f
  428c48:	add	x4, sp, #0x98
  428c4c:	add	x3, sp, #0x90
  428c50:	mov	x1, x24
  428c54:	mov	x0, x27
  428c58:	add	x20, x20, x2
  428c5c:	mov	x2, #0x2                   	// #2
  428c60:	bl	428794 <ferror@plt+0x259c4>
  428c64:	cmp	x23, #0x10
  428c68:	b.hi	428c84 <ferror@plt+0x25eb4>  // b.pmore
  428c6c:	cmp	x25, x24
  428c70:	b.eq	428c84 <ferror@plt+0x25eb4>  // b.none
  428c74:	add	x1, sp, #0xb8
  428c78:	mov	w0, #0x3f3f                	// #16191
  428c7c:	strh	w0, [x1, x23]
  428c80:	add	x23, x23, #0x2
  428c84:	ldrb	w0, [sp, #143]
  428c88:	add	x20, x20, #0x3
  428c8c:	cmp	w0, #0x2f
  428c90:	b.ne	428d18 <ferror@plt+0x25f48>  // b.any
  428c94:	ldr	x0, [x28, #16]
  428c98:	cmp	x25, x0
  428c9c:	b.ne	428d18 <ferror@plt+0x25f48>  // b.any
  428ca0:	ldr	w0, [x28, #24]
  428ca4:	cmp	w0, #0x5c
  428ca8:	b.eq	428ccc <ferror@plt+0x25efc>  // b.none
  428cac:	cmp	w0, #0x20
  428cb0:	b.eq	428ccc <ferror@plt+0x25efc>  // b.none
  428cb4:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  428cb8:	add	x2, x2, #0xd2b
  428cbc:	mov	w1, #0x6e1                 	// #1761
  428cc0:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x225fc>
  428cc4:	add	x0, x0, #0xa90
  428cc8:	bl	402de0 <ferror@plt+0x10>
  428ccc:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x225fc>
  428cd0:	add	x24, x1, #0x93f
  428cd4:	mov	x2, #0x1                   	// #1
  428cd8:	add	x4, sp, #0x98
  428cdc:	add	x3, sp, #0x90
  428ce0:	mov	x1, x24
  428ce4:	mov	x0, x27
  428ce8:	bl	428794 <ferror@plt+0x259c4>
  428cec:	mov	x2, x20
  428cf0:	cmp	x23, #0x10
  428cf4:	b.hi	428d10 <ferror@plt+0x25f40>  // b.pmore
  428cf8:	cmp	x25, x24
  428cfc:	b.eq	428d10 <ferror@plt+0x25f40>  // b.none
  428d00:	add	x1, sp, #0xb8
  428d04:	mov	w0, #0x2f                  	// #47
  428d08:	strb	w0, [x1, x23]
  428d0c:	add	x23, x23, #0x1
  428d10:	add	x28, x28, #0x10
  428d14:	b	428b64 <ferror@plt+0x25d94>
  428d18:	add	x26, sp, #0x8f
  428d1c:	add	x4, sp, #0x98
  428d20:	add	x3, sp, #0x90
  428d24:	mov	x1, x26
  428d28:	mov	x0, x27
  428d2c:	mov	x2, #0x1                   	// #1
  428d30:	bl	428794 <ferror@plt+0x259c4>
  428d34:	add	x25, x25, #0x1
  428d38:	cmp	x23, #0x10
  428d3c:	b.hi	428d58 <ferror@plt+0x25f88>  // b.pmore
  428d40:	cmp	x25, x26
  428d44:	b.eq	428d58 <ferror@plt+0x25f88>  // b.none
  428d48:	add	x1, sp, #0xb8
  428d4c:	ldrb	w0, [sp, #143]
  428d50:	strb	w0, [x1, x23]
  428d54:	add	x23, x23, #0x1
  428d58:	ldrb	w0, [sp, #143]
  428d5c:	mov	x24, x25
  428d60:	ldr	w1, [sp, #100]
  428d64:	cbnz	w1, 428ef8 <ferror@plt+0x26128>
  428d68:	ldr	w0, [sp, #104]
  428d6c:	mov	x3, #0xffffffff77ffffff    	// #-2281701377
  428d70:	mov	x4, #0xfcee00000000        	// #278099132416000
  428d74:	mov	x2, #0x1                   	// #1
  428d78:	movk	x3, #0x3fff, lsl #48
  428d7c:	movk	x4, #0xffff, lsl #48
  428d80:	str	w0, [sp, #104]
  428d84:	cmp	x23, x0
  428d88:	b.ls	428af0 <ferror@plt+0x25d20>  // b.plast
  428d8c:	add	x1, sp, #0xb8
  428d90:	ldrb	w5, [x1, x0]
  428d94:	add	x1, sp, #0xa0
  428d98:	cmp	w5, #0x3f
  428d9c:	strb	w5, [x1, x0]
  428da0:	b.hi	428de4 <ferror@plt+0x26014>  // b.pmore
  428da4:	cmp	w5, #0x20
  428da8:	b.ls	428e00 <ferror@plt+0x26030>  // b.plast
  428dac:	lsl	x1, x2, x5
  428db0:	tst	x1, x4
  428db4:	b	428dfc <ferror@plt+0x2602c>
  428db8:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  428dbc:	mov	w1, #0x6f0                 	// #1776
  428dc0:	add	x2, x2, #0xd2b
  428dc4:	b	428cc0 <ferror@plt+0x25ef0>
  428dc8:	ldrb	w0, [x25], #1
  428dcc:	cmp	x23, #0x10
  428dd0:	b.hi	428d60 <ferror@plt+0x25f90>  // b.pmore
  428dd4:	add	x1, sp, #0xb8
  428dd8:	strb	w0, [x1, x23]
  428ddc:	add	x23, x23, #0x1
  428de0:	b	428d60 <ferror@plt+0x25f90>
  428de4:	sub	w1, w5, #0x41
  428de8:	and	w1, w1, #0xff
  428dec:	cmp	w1, #0x3d
  428df0:	b.hi	428e00 <ferror@plt+0x26030>  // b.pmore
  428df4:	lsl	x1, x2, x1
  428df8:	tst	x1, x3
  428dfc:	b.ne	428e98 <ferror@plt+0x260c8>  // b.any
  428e00:	cmp	w5, #0x28
  428e04:	b.eq	428ed8 <ferror@plt+0x26108>  // b.none
  428e08:	ldr	x0, [x27]
  428e0c:	ldr	w2, [x21]
  428e10:	ldr	x3, [x0, #8]
  428e14:	ldr	w0, [sp, #104]
  428e18:	sub	x3, x25, x3
  428e1c:	add	w3, w3, #0x1
  428e20:	cmp	w0, #0x10
  428e24:	b.ne	428eac <ferror@plt+0x260dc>  // b.any
  428e28:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  428e2c:	add	x4, x4, #0xd3a
  428e30:	mov	x0, x27
  428e34:	mov	w1, #0x3                   	// #3
  428e38:	bl	4217cc <ferror@plt+0x1e9fc>
  428e3c:	ldr	x0, [sp, #112]
  428e40:	mov	x2, x19
  428e44:	ldr	x1, [x27]
  428e48:	sub	x0, x0, #0x1
  428e4c:	add	x0, x19, x0
  428e50:	mov	w4, #0x3d                  	// #61
  428e54:	str	x0, [x1]
  428e58:	mov	x1, x21
  428e5c:	ldr	w0, [sp, #112]
  428e60:	sub	w3, w0, #0x1
  428e64:	mov	x0, x27
  428e68:	bl	428938 <ferror@plt+0x25b68>
  428e6c:	ldr	x1, [sp, #144]
  428e70:	cbz	x1, 428e7c <ferror@plt+0x260ac>
  428e74:	mov	x0, x27
  428e78:	bl	428690 <ferror@plt+0x258c0>
  428e7c:	ldp	x19, x20, [sp, #16]
  428e80:	ldp	x21, x22, [sp, #32]
  428e84:	ldp	x23, x24, [sp, #48]
  428e88:	ldp	x25, x26, [sp, #64]
  428e8c:	ldp	x27, x28, [sp, #80]
  428e90:	ldp	x29, x30, [sp], #208
  428e94:	ret
  428e98:	ldr	w1, [sp, #104]
  428e9c:	cmp	w1, #0xf
  428ea0:	b.hi	428e00 <ferror@plt+0x26030>  // b.pmore
  428ea4:	add	x0, x0, #0x1
  428ea8:	b	428d80 <ferror@plt+0x25fb0>
  428eac:	cmp	w5, #0xa
  428eb0:	b.ne	428ec0 <ferror@plt+0x260f0>  // b.any
  428eb4:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  428eb8:	add	x4, x4, #0xd69
  428ebc:	b	428e30 <ferror@plt+0x26060>
  428ec0:	mov	x0, x27
  428ec4:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  428ec8:	mov	w1, #0x3                   	// #3
  428ecc:	add	x4, x4, #0xd92
  428ed0:	bl	4217cc <ferror@plt+0x1e9fc>
  428ed4:	b	428e3c <ferror@plt+0x2606c>
  428ed8:	ldr	w1, [sp, #104]
  428edc:	add	x2, sp, #0xa0
  428ee0:	mov	w0, #0x22                  	// #34
  428ee4:	mov	x26, #0x11                  	// #17
  428ee8:	strb	w0, [x2, w1, uxtw]
  428eec:	mov	w0, #0x1                   	// #1
  428ef0:	str	w0, [sp, #100]
  428ef4:	b	428ae4 <ferror@plt+0x25d14>
  428ef8:	ldr	w1, [sp, #100]
  428efc:	cmp	w1, #0x2
  428f00:	b.ne	428f50 <ferror@plt+0x26180>  // b.any
  428f04:	ldr	w26, [sp, #108]
  428f08:	ldr	w1, [sp, #104]
  428f0c:	str	w26, [sp, #108]
  428f10:	cmp	w1, w26
  428f14:	b.cc	428fb0 <ferror@plt+0x261e0>  // b.lo, b.ul, b.last
  428f18:	cmp	x26, x23
  428f1c:	b.cs	429464 <ferror@plt+0x26694>  // b.hs, b.nlast
  428f20:	add	x1, sp, #0xb8
  428f24:	add	x2, sp, #0xa0
  428f28:	ldrb	w1, [x1, x26]
  428f2c:	add	x26, x26, #0x1
  428f30:	add	x2, x26, x2
  428f34:	ldurb	w2, [x2, #-1]
  428f38:	cmp	w2, w1
  428f3c:	b.eq	428f08 <ferror@plt+0x26138>  // b.none
  428f40:	mov	w1, #0x1                   	// #1
  428f44:	mov	x26, #0x11                  	// #17
  428f48:	str	w1, [sp, #100]
  428f4c:	b	428f54 <ferror@plt+0x26184>
  428f50:	mov	x26, x23
  428f54:	cmp	w0, #0x29
  428f58:	b.eq	428ad4 <ferror@plt+0x25d04>  // b.none
  428f5c:	cmp	w0, #0xa
  428f60:	b.ne	428ae4 <ferror@plt+0x25d14>  // b.any
  428f64:	ldrb	w0, [x27, #16]
  428f68:	sub	x23, x25, #0x1
  428f6c:	cbnz	w0, 428f8c <ferror@plt+0x261bc>
  428f70:	ldrb	w0, [x27, #25]
  428f74:	cbz	w0, 429040 <ferror@plt+0x26270>
  428f78:	ldr	x0, [x27]
  428f7c:	ldr	x1, [x0, #16]
  428f80:	ldr	x0, [x0, #32]
  428f84:	cmp	x1, x0
  428f88:	b.cc	429040 <ferror@plt+0x26270>  // b.lo, b.ul, b.last
  428f8c:	ldr	w2, [x21]
  428f90:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  428f94:	mov	x25, x23
  428f98:	add	x4, x4, #0xdc1
  428f9c:	mov	x0, x27
  428fa0:	mov	w3, #0x0                   	// #0
  428fa4:	mov	w1, #0x3                   	// #3
  428fa8:	mov	w22, #0x3d                  	// #61
  428fac:	bl	4217cc <ferror@plt+0x1e9fc>
  428fb0:	ldrb	w0, [x27, #1161]
  428fb4:	cbz	w0, 429010 <ferror@plt+0x26240>
  428fb8:	ldrb	w0, [x25]
  428fbc:	cmp	w0, #0x5f
  428fc0:	b.ne	428fd0 <ferror@plt+0x26200>  // b.any
  428fc4:	ldrb	w0, [x25, #1]
  428fc8:	cmp	w0, #0x5f
  428fcc:	b.ne	429150 <ferror@plt+0x26380>  // b.any
  428fd0:	mov	x1, x25
  428fd4:	add	x0, x27, #0x440
  428fd8:	bl	427220 <ferror@plt+0x24450>
  428fdc:	tst	w0, #0xff
  428fe0:	b.eq	429150 <ferror@plt+0x26380>  // b.none
  428fe4:	ldrb	w0, [x27, #1162]
  428fe8:	cbz	w0, 429010 <ferror@plt+0x26240>
  428fec:	ldrb	w0, [x27, #18]
  428ff0:	cbnz	w0, 429010 <ferror@plt+0x26240>
  428ff4:	ldr	w2, [x21]
  428ff8:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  428ffc:	mov	x0, x27
  429000:	add	x4, x4, #0xdd9
  429004:	mov	w3, #0x0                   	// #0
  429008:	mov	w1, #0x13                  	// #19
  42900c:	bl	42183c <ferror@plt+0x1ea6c>
  429010:	ldr	x0, [x27]
  429014:	str	x25, [x0]
  429018:	sub	x25, x25, x24
  42901c:	ldr	x0, [sp, #144]
  429020:	cbnz	x0, 429190 <ferror@plt+0x263c0>
  429024:	mov	w4, w22
  429028:	mov	w3, w25
  42902c:	mov	x2, x24
  429030:	mov	x1, x21
  429034:	mov	x0, x27
  429038:	bl	428938 <ferror@plt+0x25b68>
  42903c:	b	428e7c <ferror@plt+0x260ac>
  429040:	sub	x25, x25, x24
  429044:	mov	x1, x24
  429048:	mov	x0, x27
  42904c:	add	x4, sp, #0x98
  429050:	add	x3, sp, #0x90
  429054:	mov	x2, x25
  429058:	bl	428794 <ferror@plt+0x259c4>
  42905c:	add	x20, x20, x25
  429060:	ldr	x0, [x27]
  429064:	ldr	x1, [x0]
  429068:	ldr	x0, [x0, #32]
  42906c:	cmp	x1, x0
  429070:	b.cs	4290b8 <ferror@plt+0x262e8>  // b.hs, b.nlast
  429074:	ldr	x0, [x27, #40]
  429078:	mov	w1, #0x18                  	// #24
  42907c:	ldr	w2, [x0, #12]
  429080:	ldr	w3, [x0, #60]
  429084:	sub	w2, w2, #0x1
  429088:	smull	x2, w2, w1
  42908c:	ldr	x1, [x0]
  429090:	add	x4, x1, x2
  429094:	ldr	w1, [x1, x2]
  429098:	mov	w2, #0x0                   	// #0
  42909c:	sub	w3, w3, w1
  4290a0:	ldrb	w1, [x4, #6]
  4290a4:	lsr	w3, w3, w1
  4290a8:	ldr	w1, [x4, #16]
  4290ac:	add	w1, w1, #0x1
  4290b0:	add	w1, w3, w1
  4290b4:	bl	42b50c <ferror@plt+0x2873c>
  4290b8:	ldr	x0, [x27]
  4290bc:	mov	w1, #0x1                   	// #1
  4290c0:	str	x23, [x0]
  4290c4:	strb	w1, [x0, #104]
  4290c8:	mov	w1, #0x0                   	// #0
  4290cc:	mov	x0, x27
  4290d0:	bl	4276a4 <ferror@plt+0x248d4>
  4290d4:	mov	x0, x27
  4290d8:	bl	427d20 <ferror@plt+0x24f50>
  4290dc:	tst	w0, #0xff
  4290e0:	b.ne	429134 <ferror@plt+0x26364>  // b.any
  4290e4:	mov	w0, #0x16                  	// #22
  4290e8:	strb	w0, [x21, #4]
  4290ec:	ldr	x0, [x27, #40]
  4290f0:	ldr	x1, [sp, #144]
  4290f4:	ldr	w0, [x0, #60]
  4290f8:	ldr	w5, [x21]
  4290fc:	str	w0, [x21]
  429100:	mov	w0, #0x40                  	// #64
  429104:	strh	w0, [x21, #6]
  429108:	cbz	x1, 429114 <ferror@plt+0x26344>
  42910c:	mov	x0, x27
  429110:	bl	428690 <ferror@plt+0x258c0>
  429114:	mov	w2, w5
  429118:	mov	x0, x27
  42911c:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  429120:	mov	w3, #0x0                   	// #0
  429124:	add	x4, x4, #0xdc1
  429128:	mov	w1, #0x3                   	// #3
  42912c:	bl	4217cc <ferror@plt+0x1e9fc>
  429130:	b	428e7c <ferror@plt+0x260ac>
  429134:	ldr	x0, [x27]
  429138:	ldr	w8, [x0, #56]
  42913c:	ldr	x24, [x0]
  429140:	ldr	x0, [x0, #48]
  429144:	mov	x25, x24
  429148:	add	x28, x0, x8, lsl #4
  42914c:	b	428ae4 <ferror@plt+0x25d14>
  429150:	ldrb	w0, [x25]
  429154:	adrp	x19, 46c000 <_obstack_memory_used@@Base+0x275fc>
  429158:	add	x19, x19, #0xb08
  42915c:	ldrh	w0, [x19, x0, lsl #1]
  429160:	tbz	w0, #9, 429010 <ferror@plt+0x26240>
  429164:	mov	w0, w22
  429168:	add	x25, x25, #0x1
  42916c:	bl	422a5c <ferror@plt+0x1fc8c>
  429170:	mov	w22, w0
  429174:	mov	w0, #0x204                 	// #516
  429178:	ldrb	w1, [x25]
  42917c:	ldrh	w1, [x19, x1, lsl #1]
  429180:	tst	w0, w1
  429184:	b.eq	429010 <ferror@plt+0x26240>  // b.none
  429188:	add	x25, x25, #0x1
  42918c:	b	429178 <ferror@plt+0x263a8>
  429190:	add	x1, x20, #0x1
  429194:	mov	x0, x27
  429198:	add	x1, x1, x25
  42919c:	bl	4288e0 <ferror@plt+0x25b10>
  4291a0:	mov	x19, x0
  4291a4:	add	w20, w20, w25
  4291a8:	ldr	x0, [sp, #144]
  4291ac:	strb	w22, [x21, #4]
  4291b0:	str	w20, [x21, #8]
  4291b4:	str	x19, [x21, #16]
  4291b8:	str	x0, [sp, #152]
  4291bc:	ldr	x0, [sp, #152]
  4291c0:	cbz	x0, 4291ec <ferror@plt+0x2641c>
  4291c4:	ldp	x1, x2, [x0, #8]
  4291c8:	mov	x0, x19
  4291cc:	sub	x2, x2, x1
  4291d0:	bl	4026a0 <memcpy@plt>
  4291d4:	ldr	x0, [sp, #152]
  4291d8:	ldp	x2, x1, [x0, #8]
  4291dc:	ldr	x0, [x0]
  4291e0:	sub	x1, x1, x2
  4291e4:	add	x19, x19, x1
  4291e8:	b	4291b8 <ferror@plt+0x263e8>
  4291ec:	ldr	x1, [sp, #144]
  4291f0:	mov	x0, x27
  4291f4:	bl	428690 <ferror@plt+0x258c0>
  4291f8:	mov	x2, x25
  4291fc:	mov	x1, x24
  429200:	mov	x0, x19
  429204:	bl	4026a0 <memcpy@plt>
  429208:	strb	wzr, [x19, x25]
  42920c:	b	428e7c <ferror@plt+0x260ac>
  429210:	cmp	w22, #0x22
  429214:	b.ne	42927c <ferror@plt+0x264ac>  // b.any
  429218:	cmp	w0, #0x4c
  42921c:	b.eq	4292b0 <ferror@plt+0x264e0>  // b.none
  429220:	cmp	w0, #0x55
  429224:	b.eq	4292b8 <ferror@plt+0x264e8>  // b.none
  429228:	cmp	w0, #0x75
  42922c:	b.ne	4292c0 <ferror@plt+0x264f0>  // b.any
  429230:	ldrb	w0, [x19, #1]
  429234:	mov	w20, #0x42                  	// #66
  429238:	cmp	w0, #0x38
  42923c:	mov	w0, #0x40                  	// #64
  429240:	csel	w20, w20, w0, eq  // eq = none
  429244:	mov	w0, #0x0                   	// #0
  429248:	mov	w2, #0x1                   	// #1
  42924c:	mov	x23, x6
  429250:	ldrb	w1, [x23], #1
  429254:	cmp	w1, #0x5c
  429258:	b.ne	4292ec <ferror@plt+0x2651c>  // b.any
  42925c:	ldrb	w1, [x27, #19]
  429260:	cbnz	w1, 429274 <ferror@plt+0x264a4>
  429264:	ldrb	w1, [x6, #1]
  429268:	cmp	w1, #0xa
  42926c:	b.eq	429274 <ferror@plt+0x264a4>  // b.none
  429270:	add	x23, x6, #0x2
  429274:	mov	x6, x23
  429278:	b	42924c <ferror@plt+0x2647c>
  42927c:	cmp	w22, #0x27
  429280:	b.ne	4292c8 <ferror@plt+0x264f8>  // b.any
  429284:	cmp	w0, #0x4c
  429288:	b.eq	4292d4 <ferror@plt+0x26504>  // b.none
  42928c:	cmp	w0, #0x55
  429290:	b.eq	4292dc <ferror@plt+0x2650c>  // b.none
  429294:	cmp	w0, #0x75
  429298:	b.ne	4292e4 <ferror@plt+0x26514>  // b.any
  42929c:	ldrb	w0, [x19, #1]
  4292a0:	mov	w20, #0x3c                  	// #60
  4292a4:	cmp	w0, #0x38
  4292a8:	mov	w0, #0x3a                  	// #58
  4292ac:	b	429240 <ferror@plt+0x26470>
  4292b0:	mov	w20, #0x3f                  	// #63
  4292b4:	b	429244 <ferror@plt+0x26474>
  4292b8:	mov	w20, #0x41                  	// #65
  4292bc:	b	429244 <ferror@plt+0x26474>
  4292c0:	mov	w20, #0x3e                  	// #62
  4292c4:	b	429244 <ferror@plt+0x26474>
  4292c8:	mov	w20, #0x44                  	// #68
  4292cc:	mov	w22, #0x3e                  	// #62
  4292d0:	b	429244 <ferror@plt+0x26474>
  4292d4:	mov	w20, #0x39                  	// #57
  4292d8:	b	429244 <ferror@plt+0x26474>
  4292dc:	mov	w20, #0x3b                  	// #59
  4292e0:	b	429244 <ferror@plt+0x26474>
  4292e4:	mov	w20, #0x38                  	// #56
  4292e8:	b	429244 <ferror@plt+0x26474>
  4292ec:	cmp	w1, w22
  4292f0:	b.eq	42931c <ferror@plt+0x2654c>  // b.none
  4292f4:	cmp	w1, #0xa
  4292f8:	b.ne	429310 <ferror@plt+0x26540>  // b.any
  4292fc:	cmp	w22, #0x3e
  429300:	b.ne	42946c <ferror@plt+0x2669c>  // b.any
  429304:	mov	w0, #0x3                   	// #3
  429308:	strb	w0, [x21, #4]
  42930c:	b	428e7c <ferror@plt+0x260ac>
  429310:	cmp	w1, #0x0
  429314:	csel	w0, w0, w2, ne  // ne = any
  429318:	b	429274 <ferror@plt+0x264a4>
  42931c:	cbz	w0, 42933c <ferror@plt+0x2656c>
  429320:	ldrb	w0, [x27, #18]
  429324:	cbnz	w0, 42933c <ferror@plt+0x2656c>
  429328:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  42932c:	mov	x0, x27
  429330:	add	x2, x2, #0xe2c
  429334:	mov	w1, #0x0                   	// #0
  429338:	bl	421610 <ferror@plt+0x1e840>
  42933c:	cmp	w20, #0x3d
  429340:	b.ne	42936c <ferror@plt+0x2659c>  // b.any
  429344:	ldr	w0, [x27, #1116]
  429348:	cmp	w0, #0x15
  42934c:	b.eq	429368 <ferror@plt+0x26598>  // b.none
  429350:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  429354:	mov	w3, w22
  429358:	add	x2, x2, #0xe53
  42935c:	mov	x0, x27
  429360:	mov	w1, #0x2                   	// #2
  429364:	bl	421610 <ferror@plt+0x1e840>
  429368:	mov	w20, #0x3d                  	// #61
  42936c:	ldrb	w0, [x27, #1161]
  429370:	cbz	w0, 429428 <ferror@plt+0x26658>
  429374:	ldrb	w0, [x23]
  429378:	cmp	w0, #0x5f
  42937c:	b.ne	42938c <ferror@plt+0x265bc>  // b.any
  429380:	ldrb	w0, [x23, #1]
  429384:	cmp	w0, #0x5f
  429388:	b.ne	4293e4 <ferror@plt+0x26614>  // b.any
  42938c:	mov	x1, x23
  429390:	add	x0, x27, #0x440
  429394:	bl	427220 <ferror@plt+0x24450>
  429398:	tst	w0, #0xff
  42939c:	b.eq	4293e4 <ferror@plt+0x26614>  // b.none
  4293a0:	ldrb	w0, [x27, #1162]
  4293a4:	cbz	w0, 4293cc <ferror@plt+0x265fc>
  4293a8:	ldrb	w0, [x27, #18]
  4293ac:	cbnz	w0, 4293cc <ferror@plt+0x265fc>
  4293b0:	ldr	w2, [x21]
  4293b4:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  4293b8:	add	x4, x4, #0xdd9
  4293bc:	mov	w3, #0x0                   	// #0
  4293c0:	mov	w1, #0x13                  	// #19
  4293c4:	mov	x0, x27
  4293c8:	bl	42183c <ferror@plt+0x1ea6c>
  4293cc:	ldr	x0, [x27]
  4293d0:	mov	w4, w20
  4293d4:	sub	w3, w23, w19
  4293d8:	mov	x2, x19
  4293dc:	str	x23, [x0]
  4293e0:	b	429030 <ferror@plt+0x26260>
  4293e4:	ldrb	w0, [x23]
  4293e8:	adrp	x22, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4293ec:	add	x22, x22, #0xb08
  4293f0:	ldrh	w0, [x22, x0, lsl #1]
  4293f4:	tbz	w0, #9, 4293cc <ferror@plt+0x265fc>
  4293f8:	mov	w0, w20
  4293fc:	add	x23, x23, #0x1
  429400:	bl	422afc <ferror@plt+0x1fd2c>
  429404:	bl	422a5c <ferror@plt+0x1fc8c>
  429408:	mov	w20, w0
  42940c:	mov	w0, #0x204                 	// #516
  429410:	ldrb	w1, [x23]
  429414:	ldrh	w1, [x22, x1, lsl #1]
  429418:	tst	w0, w1
  42941c:	b.eq	4293cc <ferror@plt+0x265fc>  // b.none
  429420:	add	x23, x23, #0x1
  429424:	b	429410 <ferror@plt+0x26640>
  429428:	ldrb	w0, [x27, #1199]
  42942c:	cbz	w0, 4293cc <ferror@plt+0x265fc>
  429430:	mov	x1, x23
  429434:	add	x0, x27, #0x440
  429438:	bl	427220 <ferror@plt+0x24450>
  42943c:	tst	w0, #0xff
  429440:	b.eq	4293cc <ferror@plt+0x265fc>  // b.none
  429444:	ldrb	w0, [x27, #18]
  429448:	cbnz	w0, 4293cc <ferror@plt+0x265fc>
  42944c:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  429450:	ldr	w2, [x21]
  429454:	add	x4, x4, #0xe74
  429458:	mov	w3, #0x0                   	// #0
  42945c:	mov	w1, #0x17                  	// #23
  429460:	b	4293c4 <ferror@plt+0x265f4>
  429464:	b.ne	428f40 <ferror@plt+0x26170>  // b.any
  429468:	b	428ae4 <ferror@plt+0x25d14>
  42946c:	mov	x23, x6
  429470:	cbz	w0, 429344 <ferror@plt+0x26574>
  429474:	mov	w20, #0x3d                  	// #61
  429478:	b	429320 <ferror@plt+0x26550>
  42947c:	stp	x29, x30, [sp, #-48]!
  429480:	mov	x29, sp
  429484:	stp	x19, x20, [sp, #16]
  429488:	mov	x20, x0
  42948c:	mov	x0, x1
  429490:	str	x21, [sp, #32]
  429494:	mov	x21, x1
  429498:	bl	427dbc <ferror@plt+0x24fec>
  42949c:	add	w1, w0, #0x1
  4294a0:	mov	x0, x20
  4294a4:	bl	4288e0 <ferror@plt+0x25b10>
  4294a8:	mov	x1, x21
  4294ac:	mov	x19, x0
  4294b0:	mov	x2, x0
  4294b4:	mov	w3, #0x0                   	// #0
  4294b8:	mov	x0, x20
  4294bc:	bl	427e74 <ferror@plt+0x250a4>
  4294c0:	strb	wzr, [x0]
  4294c4:	mov	x0, x19
  4294c8:	ldp	x19, x20, [sp, #16]
  4294cc:	ldr	x21, [sp, #32]
  4294d0:	ldp	x29, x30, [sp], #48
  4294d4:	ret
  4294d8:	stp	x29, x30, [sp, #-80]!
  4294dc:	mov	x29, sp
  4294e0:	stp	x19, x20, [sp, #16]
  4294e4:	mov	x20, x0
  4294e8:	ldr	x0, [x0]
  4294ec:	stp	x23, x24, [sp, #48]
  4294f0:	adrp	x24, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4294f4:	add	x24, x24, #0xb08
  4294f8:	stp	x21, x22, [sp, #32]
  4294fc:	mov	x21, x1
  429500:	ldr	x23, [x0]
  429504:	mov	x22, x2
  429508:	stp	x25, x26, [sp, #64]
  42950c:	mov	w25, #0x204                 	// #516
  429510:	sub	x23, x23, #0x1
  429514:	mov	w26, #0x2d                  	// #45
  429518:	ldr	x2, [x20]
  42951c:	ldr	x3, [x2]
  429520:	mov	x19, x3
  429524:	ldrb	w0, [x19]
  429528:	ldrb	w1, [x19]
  42952c:	ldrh	w0, [x24, x0, lsl #1]
  429530:	tst	w25, w0
  429534:	b.ne	429550 <ferror@plt+0x26780>  // b.any
  429538:	cmp	w1, #0x2e
  42953c:	b.eq	429550 <ferror@plt+0x26780>  // b.none
  429540:	cmp	w1, #0x27
  429544:	b.ne	429560 <ferror@plt+0x26790>  // b.any
  429548:	ldrb	w0, [x20, #1166]
  42954c:	cbz	w0, 429590 <ferror@plt+0x267c0>
  429550:	add	x19, x19, #0x1
  429554:	str	w1, [x22]
  429558:	strb	wzr, [x22, #4]
  42955c:	b	429524 <ferror@plt+0x26754>
  429560:	cmp	w1, #0x2b
  429564:	ccmp	w1, w26, #0x4, ne  // ne = any
  429568:	b.ne	429590 <ferror@plt+0x267c0>  // b.any
  42956c:	ldurb	w0, [x19, #-1]
  429570:	and	w0, w0, #0xffffffdf
  429574:	and	w0, w0, #0xff
  429578:	cmp	w0, #0x45
  42957c:	b.eq	429550 <ferror@plt+0x26780>  // b.none
  429580:	cmp	w0, #0x50
  429584:	b.ne	429590 <ferror@plt+0x267c0>  // b.any
  429588:	ldrb	w0, [x20, #1127]
  42958c:	b	42954c <ferror@plt+0x2677c>
  429590:	cmp	x3, x19
  429594:	b.cs	4295b4 <ferror@plt+0x267e4>  // b.hs, b.nlast
  429598:	ldurb	w0, [x19, #-1]
  42959c:	cmp	w0, #0x27
  4295a0:	b.ne	4295b4 <ferror@plt+0x267e4>  // b.any
  4295a4:	ldrb	w0, [x20, #1166]
  4295a8:	cbz	w0, 4295b4 <ferror@plt+0x267e4>
  4295ac:	sub	x19, x19, #0x1
  4295b0:	b	429590 <ferror@plt+0x267c0>
  4295b4:	str	x19, [x2]
  4295b8:	mov	x0, x20
  4295bc:	mov	x2, x22
  4295c0:	mov	w1, #0x0                   	// #0
  4295c4:	bl	426e44 <ferror@plt+0x24074>
  4295c8:	tst	w0, #0xff
  4295cc:	b.ne	429518 <ferror@plt+0x26748>  // b.any
  4295d0:	sub	x19, x19, x23
  4295d4:	str	w19, [x21]
  4295d8:	add	w1, w19, #0x1
  4295dc:	mov	x0, x20
  4295e0:	bl	4288e0 <ferror@plt+0x25b10>
  4295e4:	mov	x19, x0
  4295e8:	ldr	w2, [x21]
  4295ec:	mov	x1, x23
  4295f0:	bl	4026a0 <memcpy@plt>
  4295f4:	ldr	w0, [x21]
  4295f8:	strb	wzr, [x19, x0]
  4295fc:	ldp	x23, x24, [sp, #48]
  429600:	ldp	x25, x26, [sp, #64]
  429604:	str	x19, [x21, #8]
  429608:	ldp	x19, x20, [sp, #16]
  42960c:	ldp	x21, x22, [sp, #32]
  429610:	ldp	x29, x30, [sp], #80
  429614:	ret
  429618:	stp	x29, x30, [sp, #-128]!
  42961c:	mov	x29, sp
  429620:	stp	x19, x20, [sp, #16]
  429624:	mov	x20, x0
  429628:	ldr	x19, [x0, #448]
  42962c:	stp	x21, x22, [sp, #32]
  429630:	add	x0, x19, #0x18
  429634:	stp	x23, x24, [sp, #48]
  429638:	mov	w23, #0x0                   	// #0
  42963c:	stp	x25, x26, [sp, #64]
  429640:	adrp	x25, 467000 <_obstack_memory_used@@Base+0x225fc>
  429644:	stp	x27, x28, [sp, #80]
  429648:	str	x0, [x20, #448]
  42964c:	add	x0, x25, #0xeb6
  429650:	str	x0, [sp, #96]
  429654:	ldr	x21, [x20]
  429658:	strh	wzr, [x19, #6]
  42965c:	ldrb	w0, [x21, #104]
  429660:	cbz	w0, 429728 <ferror@plt+0x26958>
  429664:	ldrb	w0, [x20, #32]
  429668:	cbz	w0, 4296ac <ferror@plt+0x268dc>
  42966c:	mov	w0, #0x52                  	// #82
  429670:	strb	w0, [x19, #4]
  429674:	strb	wzr, [x20, #32]
  429678:	ldrb	w0, [x20, #33]
  42967c:	cbnz	w0, 42968c <ferror@plt+0x268bc>
  429680:	ldrb	w0, [x20, #24]
  429684:	sub	w0, w0, #0x1
  429688:	strb	w0, [x20, #24]
  42968c:	mov	x0, x19
  429690:	ldp	x19, x20, [sp, #16]
  429694:	ldp	x21, x22, [sp, #32]
  429698:	ldp	x23, x24, [sp, #48]
  42969c:	ldp	x25, x26, [sp, #64]
  4296a0:	ldp	x27, x28, [sp, #80]
  4296a4:	ldp	x29, x30, [sp], #128
  4296a8:	ret
  4296ac:	mov	x0, x20
  4296b0:	bl	427d20 <ferror@plt+0x24f50>
  4296b4:	tst	w0, #0xff
  4296b8:	b.ne	4296e4 <ferror@plt+0x26914>  // b.any
  4296bc:	mov	w0, #0x16                  	// #22
  4296c0:	strb	w0, [x19, #4]
  4296c4:	ldrb	w0, [x20, #16]
  4296c8:	cbnz	w0, 42968c <ferror@plt+0x268bc>
  4296cc:	ldr	x0, [x20, #40]
  4296d0:	ldr	w0, [x0, #60]
  4296d4:	str	w0, [x19]
  4296d8:	mov	w0, #0x40                  	// #64
  4296dc:	strh	w0, [x19, #6]
  4296e0:	b	42968c <ferror@plt+0x268bc>
  4296e4:	ldr	x0, [x20]
  4296e8:	cmp	x0, x21
  4296ec:	ldr	w0, [x20, #500]
  4296f0:	csel	w23, w23, wzr, eq  // eq = none
  4296f4:	cbnz	w0, 42970c <ferror@plt+0x2693c>
  4296f8:	ldr	x19, [x20, #472]
  4296fc:	add	x0, x20, #0x1c8
  429700:	str	x0, [x20, #488]
  429704:	add	x0, x19, #0x18
  429708:	str	x0, [x20, #448]
  42970c:	mov	w1, #0x40                  	// #64
  429710:	strh	w1, [x19, #6]
  429714:	ldrb	w0, [x20, #25]
  429718:	cmp	w0, #0x2
  42971c:	mov	w0, #0x41                  	// #65
  429720:	csel	w0, w0, w1, eq  // eq = none
  429724:	strh	w0, [x19, #6]
  429728:	ldr	x27, [x20]
  42972c:	adrp	x24, 468000 <_obstack_memory_used@@Base+0x235fc>
  429730:	ldr	x0, [x20, #40]
  429734:	add	x24, x24, #0x1d4
  429738:	ldr	w0, [x0, #60]
  42973c:	str	w0, [x19]
  429740:	ldr	w0, [x27, #56]
  429744:	ldr	x2, [x27, #48]
  429748:	lsl	x0, x0, #4
  42974c:	ldr	x1, [x27]
  429750:	ldr	x0, [x2, x0]
  429754:	cmp	x1, x0
  429758:	b.cc	42977c <ferror@plt+0x269ac>  // b.lo, b.ul, b.last
  42975c:	ldr	x0, [x20, #8]
  429760:	cbnz	x0, 42977c <ferror@plt+0x269ac>
  429764:	mov	x0, x20
  429768:	mov	w1, #0x0                   	// #0
  42976c:	bl	4276a4 <ferror@plt+0x248d4>
  429770:	ldr	x0, [x20, #40]
  429774:	ldr	w0, [x0, #60]
  429778:	str	w0, [x19]
  42977c:	ldr	x1, [x27]
  429780:	add	x0, x1, #0x1
  429784:	str	x0, [x27]
  429788:	ldrb	w21, [x1]
  42978c:	ldr	w1, [x20, #1408]
  429790:	mov	w22, w21
  429794:	cbz	w1, 4297b4 <ferror@plt+0x269e4>
  429798:	str	w1, [x19]
  42979c:	cmp	w21, #0x7e
  4297a0:	b.hi	42aaa4 <ferror@plt+0x27cd4>  // b.pmore
  4297a4:	ldrh	w0, [x24, w21, uxtw #1]
  4297a8:	adr	x1, 4297b4 <ferror@plt+0x269e4>
  4297ac:	add	x0, x1, w0, sxth #2
  4297b0:	br	x0
  4297b4:	ldr	x1, [x27, #8]
  4297b8:	sub	w1, w0, w1
  4297bc:	ldr	x0, [x20, #40]
  4297c0:	bl	42b70c <ferror@plt+0x2893c>
  4297c4:	str	w0, [x19]
  4297c8:	b	42979c <ferror@plt+0x269cc>
  4297cc:	ldrh	w0, [x19, #6]
  4297d0:	adrp	x6, 467000 <_obstack_memory_used@@Base+0x225fc>
  4297d4:	ldr	x21, [x20]
  4297d8:	adrp	x28, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4297dc:	add	x26, x6, #0xeac
  4297e0:	add	x28, x28, #0xb08
  4297e4:	orr	w0, w0, #0x1
  4297e8:	mov	w25, #0x0                   	// #0
  4297ec:	strh	w0, [x19, #6]
  4297f0:	cmp	w22, #0x20
  4297f4:	ccmp	w22, #0x9, #0x4, ne  // ne = any
  4297f8:	b.eq	429840 <ferror@plt+0x26a70>  // b.none
  4297fc:	cbz	w22, 429884 <ferror@plt+0x26ab4>
  429800:	ldrb	w0, [x20, #16]
  429804:	cbz	w0, 429840 <ferror@plt+0x26a70>
  429808:	ldrb	w0, [x20, #1154]
  42980c:	cbz	w0, 429840 <ferror@plt+0x26a70>
  429810:	ldr	x0, [x20, #40]
  429814:	cmp	w22, #0xc
  429818:	ldr	x2, [sp, #96]
  42981c:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  429820:	ldp	x3, x1, [x21]
  429824:	csel	x5, x26, x2, eq  // eq = none
  429828:	ldr	w2, [x0, #60]
  42982c:	add	x4, x4, #0xed2
  429830:	mov	x0, x20
  429834:	sub	w3, w3, w1
  429838:	mov	w1, #0x2                   	// #2
  42983c:	bl	4217cc <ferror@plt+0x1e9fc>
  429840:	ldr	x0, [x21]
  429844:	add	x1, x0, #0x1
  429848:	str	x1, [x21]
  42984c:	ldrb	w22, [x0]
  429850:	ldrb	w0, [x0]
  429854:	ldrh	w0, [x28, x0, lsl #1]
  429858:	tbnz	w0, #11, 4297f0 <ferror@plt+0x26a20>
  42985c:	cbz	w25, 429874 <ferror@plt+0x26aa4>
  429860:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  429864:	mov	x0, x20
  429868:	add	x2, x2, #0xef0
  42986c:	mov	w1, #0x0                   	// #0
  429870:	bl	421610 <ferror@plt+0x1e840>
  429874:	ldr	x0, [x21]
  429878:	sub	x0, x0, #0x1
  42987c:	str	x0, [x21]
  429880:	b	429740 <ferror@plt+0x26970>
  429884:	mov	w25, #0x1                   	// #1
  429888:	b	429840 <ferror@plt+0x26a70>
  42988c:	ldr	x1, [x27]
  429890:	ldr	x0, [x27, #32]
  429894:	cmp	x1, x0
  429898:	b.cs	4298e0 <ferror@plt+0x26b10>  // b.hs, b.nlast
  42989c:	ldr	x0, [x20, #40]
  4298a0:	mov	w1, #0x18                  	// #24
  4298a4:	ldr	w2, [x0, #12]
  4298a8:	ldr	w3, [x0, #60]
  4298ac:	sub	w2, w2, #0x1
  4298b0:	smull	x2, w2, w1
  4298b4:	ldr	x1, [x0]
  4298b8:	add	x4, x1, x2
  4298bc:	ldr	w1, [x1, x2]
  4298c0:	mov	w2, #0x0                   	// #0
  4298c4:	sub	w3, w3, w1
  4298c8:	ldrb	w1, [x4, #6]
  4298cc:	lsr	w3, w3, w1
  4298d0:	ldr	w1, [x4, #16]
  4298d4:	add	w1, w1, #0x1
  4298d8:	add	w1, w3, w1
  4298dc:	bl	42b50c <ferror@plt+0x2873c>
  4298e0:	mov	w0, #0x1                   	// #1
  4298e4:	strb	w0, [x27, #104]
  4298e8:	b	429654 <ferror@plt+0x26884>
  4298ec:	cmp	w21, #0x4c
  4298f0:	b.eq	42990c <ferror@plt+0x26b3c>  // b.none
  4298f4:	ldrb	w0, [x20, #1130]
  4298f8:	cbnz	w0, 42990c <ferror@plt+0x26b3c>
  4298fc:	cmp	w21, #0x52
  429900:	b.eq	429924 <ferror@plt+0x26b54>  // b.none
  429904:	ldrb	w0, [x20, #1128]
  429908:	cbz	w0, 429924 <ferror@plt+0x26b54>
  42990c:	ldr	x2, [x27]
  429910:	ldrb	w0, [x2]
  429914:	cmp	w0, #0x27
  429918:	b.ne	429a1c <ferror@plt+0x26c4c>  // b.any
  42991c:	cmp	w21, #0x52
  429920:	b.ne	429a48 <ferror@plt+0x26c78>  // b.any
  429924:	mov	w0, #0x35                  	// #53
  429928:	strb	w0, [x19, #4]
  42992c:	strb	wzr, [sp, #116]
  429930:	add	x4, x19, #0x10
  429934:	add	x3, sp, #0x70
  429938:	mov	w2, #0x0                   	// #0
  42993c:	ldr	x1, [x27]
  429940:	mov	x0, x20
  429944:	str	wzr, [sp, #112]
  429948:	sub	x1, x1, #0x1
  42994c:	str	wzr, [sp, #120]
  429950:	bl	427010 <ferror@plt+0x24240>
  429954:	str	x0, [x19, #8]
  429958:	mov	x1, x19
  42995c:	mov	x0, x20
  429960:	add	x2, sp, #0x78
  429964:	bl	427f88 <ferror@plt+0x251b8>
  429968:	ldr	x1, [x19, #8]
  42996c:	ldrh	w0, [x1, #18]
  429970:	tbz	w0, #2, 42998c <ferror@plt+0x26bbc>
  429974:	ldrh	w0, [x19, #6]
  429978:	orr	w0, w0, #0x10
  42997c:	strh	w0, [x19, #6]
  429980:	ldrb	w0, [x1, #16]
  429984:	ubfx	x0, x0, #1, #7
  429988:	strb	w0, [x19, #4]
  42998c:	cbz	w23, 42999c <ferror@plt+0x26bcc>
  429990:	ldrh	w0, [x19, #6]
  429994:	orr	w0, w0, #0x20
  429998:	strh	w0, [x19, #6]
  42999c:	ldr	w0, [x19]
  4299a0:	cmp	w0, #0x1
  4299a4:	b.ls	42968c <ferror@plt+0x268bc>  // b.plast
  4299a8:	ldrb	w0, [x19, #4]
  4299ac:	cmp	w0, #0x16
  4299b0:	b.eq	42968c <ferror@plt+0x268bc>  // b.none
  4299b4:	ldr	w0, [x27, #56]
  4299b8:	ldr	x2, [x27, #48]
  4299bc:	lsl	x0, x0, #4
  4299c0:	ldr	x1, [x27]
  4299c4:	ldr	x0, [x2, x0]
  4299c8:	cmp	x1, x0
  4299cc:	b.cc	4299e4 <ferror@plt+0x26c14>  // b.lo, b.ul, b.last
  4299d0:	ldr	x0, [x20, #8]
  4299d4:	cbnz	x0, 4299e4 <ferror@plt+0x26c14>
  4299d8:	mov	x0, x20
  4299dc:	mov	w1, #0x0                   	// #0
  4299e0:	bl	4276a4 <ferror@plt+0x248d4>
  4299e4:	ldp	x1, x0, [x27]
  4299e8:	ldr	w21, [x19]
  4299ec:	sub	w1, w1, w0
  4299f0:	ldr	x0, [x20, #40]
  4299f4:	bl	42b70c <ferror@plt+0x2893c>
  4299f8:	mov	x2, #0x0                   	// #0
  4299fc:	ldr	w1, [x19]
  429a00:	bfxil	x2, x21, #0, #32
  429a04:	mov	x3, #0x0                   	// #0
  429a08:	bfi	x2, x0, #32, #32
  429a0c:	ldr	x0, [x20, #40]
  429a10:	bl	42b9d0 <ferror@plt+0x28c00>
  429a14:	str	w0, [x19]
  429a18:	b	42968c <ferror@plt+0x268bc>
  429a1c:	cmp	w0, #0x22
  429a20:	b.eq	429a48 <ferror@plt+0x26c78>  // b.none
  429a24:	cmp	w0, #0x52
  429a28:	b.ne	429a5c <ferror@plt+0x26c8c>  // b.any
  429a2c:	cmp	w21, #0x52
  429a30:	b.eq	429924 <ferror@plt+0x26b54>  // b.none
  429a34:	ldrb	w0, [x2, #1]
  429a38:	cmp	w0, #0x22
  429a3c:	b.ne	429924 <ferror@plt+0x26b54>  // b.any
  429a40:	ldrb	w0, [x20, #1130]
  429a44:	cbz	w0, 429924 <ferror@plt+0x26b54>
  429a48:	sub	x2, x2, #0x1
  429a4c:	mov	x1, x19
  429a50:	mov	x0, x20
  429a54:	bl	42899c <ferror@plt+0x25bcc>
  429a58:	b	42999c <ferror@plt+0x26bcc>
  429a5c:	cmp	w0, #0x38
  429a60:	b.ne	429924 <ferror@plt+0x26b54>  // b.any
  429a64:	cmp	w21, #0x75
  429a68:	b.ne	429924 <ferror@plt+0x26b54>  // b.any
  429a6c:	ldrb	w0, [x2, #1]
  429a70:	cmp	w0, #0x22
  429a74:	b.eq	429a48 <ferror@plt+0x26c78>  // b.none
  429a78:	cmp	w0, #0x27
  429a7c:	b.ne	429a88 <ferror@plt+0x26cb8>  // b.any
  429a80:	ldrb	w0, [x20, #1129]
  429a84:	b	429a44 <ferror@plt+0x26c74>
  429a88:	cmp	w0, #0x52
  429a8c:	b.ne	429924 <ferror@plt+0x26b54>  // b.any
  429a90:	ldrb	w0, [x2, #2]
  429a94:	b	429a38 <ferror@plt+0x26c68>
  429a98:	ldr	x2, [x27]
  429a9c:	b	429a48 <ferror@plt+0x26c78>
  429aa0:	ldr	x22, [x27]
  429aa4:	ldrb	w24, [x22]
  429aa8:	cmp	w24, #0x2a
  429aac:	b.ne	429af4 <ferror@plt+0x26d24>  // b.any
  429ab0:	mov	x0, x20
  429ab4:	bl	4278b8 <ferror@plt+0x24ae8>
  429ab8:	tst	w0, #0xff
  429abc:	b.eq	429ad4 <ferror@plt+0x26d04>  // b.none
  429ac0:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  429ac4:	mov	x0, x20
  429ac8:	add	x2, x2, #0xf0a
  429acc:	mov	w1, #0x3                   	// #3
  429ad0:	bl	421610 <ferror@plt+0x1e840>
  429ad4:	ldrb	w0, [x20, #1144]
  429ad8:	add	x21, x22, #0x1
  429adc:	cmp	w0, #0x2
  429ae0:	b.eq	429ca8 <ferror@plt+0x26ed8>  // b.none
  429ae4:	b.hi	429c58 <ferror@plt+0x26e88>  // b.pmore
  429ae8:	cmp	w0, #0x1
  429aec:	csinc	w23, w23, wzr, ne  // ne = any
  429af0:	b	429c68 <ferror@plt+0x26e98>
  429af4:	cmp	w24, #0x2f
  429af8:	b.ne	429c3c <ferror@plt+0x26e6c>  // b.any
  429afc:	ldrb	w0, [x20, #1160]
  429b00:	cbnz	w0, 429be0 <ferror@plt+0x26e10>
  429b04:	ldr	x0, [x20]
  429b08:	cbz	x0, 429b14 <ferror@plt+0x26d44>
  429b0c:	ldrb	w0, [x0, #106]
  429b10:	cbnz	w0, 429b68 <ferror@plt+0x26d98>
  429b14:	ldr	w0, [x20, #1116]
  429b18:	cbnz	w0, 429b90 <ferror@plt+0x26dc0>
  429b1c:	ldrb	w1, [x20, #1154]
  429b20:	cbz	w1, 429b90 <ferror@plt+0x26dc0>
  429b24:	ldrb	w1, [x27, #105]
  429b28:	tbnz	w1, #0, 429b90 <ferror@plt+0x26dc0>
  429b2c:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  429b30:	add	x2, x2, #0xf1f
  429b34:	mov	w1, #0x2                   	// #2
  429b38:	mov	x0, x20
  429b3c:	bl	421610 <ferror@plt+0x1e840>
  429b40:	tst	w0, #0xff
  429b44:	b.eq	429b5c <ferror@plt+0x26d8c>  // b.none
  429b48:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  429b4c:	mov	x0, x20
  429b50:	add	x2, x2, #0xf4d
  429b54:	mov	w1, #0x5                   	// #5
  429b58:	bl	421610 <ferror@plt+0x1e840>
  429b5c:	ldrb	w0, [x27, #105]
  429b60:	orr	w0, w0, #0x1
  429b64:	strb	w0, [x27, #105]
  429b68:	ldr	x0, [x20, #40]
  429b6c:	ldr	x1, [x20]
  429b70:	ldr	w21, [x0, #60]
  429b74:	ldr	x0, [x1]
  429b78:	ldrb	w2, [x0]
  429b7c:	cmp	w2, #0xa
  429b80:	b.eq	429c00 <ferror@plt+0x26e30>  // b.none
  429b84:	add	x0, x0, #0x1
  429b88:	str	x0, [x1]
  429b8c:	b	429b74 <ferror@plt+0x26da4>
  429b90:	ldrsb	w1, [x20, #1198]
  429b94:	cmp	w1, #0x0
  429b98:	b.le	429bbc <ferror@plt+0x26dec>
  429b9c:	ldrb	w1, [x20, #1120]
  429ba0:	cbnz	w1, 429bbc <ferror@plt+0x26dec>
  429ba4:	ldrb	w1, [x27, #105]
  429ba8:	tbnz	w1, #0, 429bbc <ferror@plt+0x26dec>
  429bac:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  429bb0:	mov	w1, #0x0                   	// #0
  429bb4:	add	x2, x2, #0xf7e
  429bb8:	b	429b38 <ferror@plt+0x26d68>
  429bbc:	sub	w0, w0, #0x5
  429bc0:	cmp	w0, #0x1
  429bc4:	b.hi	429b68 <ferror@plt+0x26d98>  // b.pmore
  429bc8:	ldrb	w0, [x22, #1]
  429bcc:	cmp	w0, #0x2a
  429bd0:	b.eq	429be0 <ferror@plt+0x26e10>  // b.none
  429bd4:	ldr	w0, [x20, #16]
  429bd8:	tst	w0, #0xff00ff
  429bdc:	b.eq	429be8 <ferror@plt+0x26e18>  // b.none
  429be0:	mov	w0, #0x7                   	// #7
  429be4:	b	429c50 <ferror@plt+0x26e80>
  429be8:	ldrb	w0, [x27, #105]
  429bec:	tbnz	w0, #0, 429b68 <ferror@plt+0x26d98>
  429bf0:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  429bf4:	mov	w1, #0x3                   	// #3
  429bf8:	add	x2, x2, #0xf1f
  429bfc:	b	429b38 <ferror@plt+0x26d68>
  429c00:	mov	x0, x20
  429c04:	mov	w1, #0x1                   	// #1
  429c08:	bl	4276a4 <ferror@plt+0x248d4>
  429c0c:	ldr	x0, [x20, #40]
  429c10:	ldr	w0, [x0, #60]
  429c14:	cmp	w21, w0
  429c18:	b.eq	429ad4 <ferror@plt+0x26d04>  // b.none
  429c1c:	ldrb	w0, [x20, #1133]
  429c20:	cbz	w0, 429ad4 <ferror@plt+0x26d04>
  429c24:	mov	x0, x20
  429c28:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x225fc>
  429c2c:	mov	w1, #0x2                   	// #2
  429c30:	add	x2, x2, #0xfab
  429c34:	bl	42167c <ferror@plt+0x1e8ac>
  429c38:	b	429ad4 <ferror@plt+0x26d04>
  429c3c:	cmp	w24, #0x3d
  429c40:	b.ne	429be0 <ferror@plt+0x26e10>  // b.any
  429c44:	add	x22, x22, #0x1
  429c48:	mov	w0, #0x1e                  	// #30
  429c4c:	str	x22, [x27]
  429c50:	strb	w0, [x19, #4]
  429c54:	b	42999c <ferror@plt+0x26bcc>
  429c58:	sub	w1, w0, #0x3
  429c5c:	and	w1, w1, #0xff
  429c60:	cmp	w1, #0x1
  429c64:	b.ls	429de8 <ferror@plt+0x27018>  // b.plast
  429c68:	ldr	x4, [x20, #1072]
  429c6c:	cbz	x4, 429c90 <ferror@plt+0x26ec0>
  429c70:	ldr	x0, [x20]
  429c74:	sub	x2, x22, #0x1
  429c78:	ldr	w1, [x19]
  429c7c:	ldr	x3, [x0]
  429c80:	mov	x0, x20
  429c84:	sub	x3, x3, x22
  429c88:	add	x3, x3, #0x1
  429c8c:	blr	x4
  429c90:	ldrb	w0, [x20, #21]
  429c94:	cbnz	w0, 42a340 <ferror@plt+0x27570>
  429c98:	ldrh	w0, [x19, #6]
  429c9c:	orr	w0, w0, #0x1
  429ca0:	strh	w0, [x19, #6]
  429ca4:	b	42972c <ferror@plt+0x2695c>
  429ca8:	ldr	x0, [x20]
  429cac:	ldr	x1, [x0]
  429cb0:	sub	x0, x1, x21
  429cb4:	cmp	x0, #0x7
  429cb8:	b.ls	429c68 <ferror@plt+0x26e98>  // b.plast
  429cbc:	ldrb	w0, [x21]
  429cc0:	and	w0, w0, #0xffffffdf
  429cc4:	and	w0, w0, #0xff
  429cc8:	cmp	w0, #0x46
  429ccc:	b.ne	429d40 <ferror@plt+0x26f70>  // b.any
  429cd0:	ldrb	w0, [x21, #1]
  429cd4:	and	w0, w0, #0xffffffdf
  429cd8:	and	w0, w0, #0xff
  429cdc:	cmp	w0, #0x41
  429ce0:	b.ne	429d40 <ferror@plt+0x26f70>  // b.any
  429ce4:	ldrb	w0, [x21, #2]
  429ce8:	and	w0, w0, #0xffffffdf
  429cec:	and	w0, w0, #0xff
  429cf0:	cmp	w0, #0x4c
  429cf4:	b.ne	429d40 <ferror@plt+0x26f70>  // b.any
  429cf8:	ldrb	w0, [x21, #3]
  429cfc:	and	w0, w0, #0xffffffdf
  429d00:	and	w0, w0, #0xff
  429d04:	cmp	w0, #0x4c
  429d08:	b.ne	429d40 <ferror@plt+0x26f70>  // b.any
  429d0c:	mov	x2, x21
  429d10:	add	x21, x21, #0x5
  429d14:	ldrb	w0, [x2, #4]!
  429d18:	and	w0, w0, #0xffffffdf
  429d1c:	and	w0, w0, #0xff
  429d20:	cmp	w0, #0x53
  429d24:	csel	x21, x21, x2, eq  // eq = none
  429d28:	ldrb	w0, [x21]
  429d2c:	cmp	w0, #0x2d
  429d30:	b.ls	429d48 <ferror@plt+0x26f78>  // b.plast
  429d34:	and	w0, w0, #0xffffffdf
  429d38:	cmp	w0, #0x54
  429d3c:	b.eq	429d60 <ferror@plt+0x26f90>  // b.none
  429d40:	add	x21, x21, #0x1
  429d44:	b	429cb0 <ferror@plt+0x26ee0>
  429d48:	mov	x2, #0x200                 	// #512
  429d4c:	movk	x2, #0x2001, lsl #32
  429d50:	lsr	x0, x2, x0
  429d54:	tbz	w0, #0, 429d40 <ferror@plt+0x26f70>
  429d58:	add	x21, x21, #0x1
  429d5c:	b	429d28 <ferror@plt+0x26f58>
  429d60:	ldrb	w0, [x21, #1]
  429d64:	and	w0, w0, #0xffffffdf
  429d68:	and	w0, w0, #0xff
  429d6c:	cmp	w0, #0x48
  429d70:	b.ne	429d40 <ferror@plt+0x26f70>  // b.any
  429d74:	ldrb	w0, [x21, #2]
  429d78:	and	w0, w0, #0xffffffdf
  429d7c:	and	w0, w0, #0xff
  429d80:	cmp	w0, #0x52
  429d84:	b.ne	429d40 <ferror@plt+0x26f70>  // b.any
  429d88:	ldrb	w0, [x21, #3]
  429d8c:	and	w0, w0, #0xffffffdf
  429d90:	and	w0, w0, #0xff
  429d94:	cmp	w0, #0x55
  429d98:	b.eq	429de0 <ferror@plt+0x27010>  // b.none
  429d9c:	cmp	w0, #0x4f
  429da0:	b.ne	429d40 <ferror@plt+0x26f70>  // b.any
  429da4:	ldrb	w0, [x21, #4]
  429da8:	and	w0, w0, #0xffffffdf
  429dac:	and	w0, w0, #0xff
  429db0:	cmp	w0, #0x55
  429db4:	b.ne	429d40 <ferror@plt+0x26f70>  // b.any
  429db8:	ldrb	w0, [x21, #5]
  429dbc:	and	w0, w0, #0xffffffdf
  429dc0:	and	w0, w0, #0xff
  429dc4:	cmp	w0, #0x47
  429dc8:	b.ne	429d40 <ferror@plt+0x26f70>  // b.any
  429dcc:	ldrb	w0, [x21, #6]
  429dd0:	and	w0, w0, #0xffffffdf
  429dd4:	and	w0, w0, #0xff
  429dd8:	cmp	w0, #0x48
  429ddc:	b.ne	429d40 <ferror@plt+0x26f70>  // b.any
  429de0:	mov	w23, #0x1                   	// #1
  429de4:	b	429c68 <ferror@plt+0x26e98>
  429de8:	ldrb	w28, [x22, #1]
  429dec:	cmp	w28, #0x2d
  429df0:	b.eq	429dfc <ferror@plt+0x2702c>  // b.none
  429df4:	cmp	w28, #0x40
  429df8:	b.ne	429e78 <ferror@plt+0x270a8>  // b.any
  429dfc:	ldr	x0, [x20]
  429e00:	ldr	x0, [x0]
  429e04:	sub	x0, x0, x21
  429e08:	sub	x0, x0, #0x1
  429e0c:	cmp	x0, #0xa
  429e10:	b.ls	429c68 <ferror@plt+0x26e98>  // b.plast
  429e14:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x225fc>
  429e18:	add	x0, x22, #0x2
  429e1c:	add	x1, x1, #0xfc3
  429e20:	mov	x2, #0xb                   	// #11
  429e24:	bl	402a90 <memcmp@plt>
  429e28:	cbnz	w0, 429c68 <ferror@plt+0x26e98>
  429e2c:	cmp	w28, #0x40
  429e30:	b.ne	429e70 <ferror@plt+0x270a0>  // b.any
  429e34:	ldrb	w0, [x22, #13]
  429e38:	cmp	w0, #0x40
  429e3c:	b.ne	429c68 <ferror@plt+0x26e98>  // b.any
  429e40:	mov	x0, #0xc                   	// #12
  429e44:	add	x0, x0, #0x1
  429e48:	add	x21, x21, x0
  429e4c:	ldrb	w1, [x22]
  429e50:	ldrb	w0, [x21]
  429e54:	cmp	w1, #0x2a
  429e58:	b.ne	42a338 <ferror@plt+0x27568>  // b.any
  429e5c:	cmp	w0, #0x2a
  429e60:	b.ne	429c68 <ferror@plt+0x26e98>  // b.any
  429e64:	ldrb	w0, [x21, #1]
  429e68:	cmp	w0, #0x2f
  429e6c:	b	429aec <ferror@plt+0x26d1c>
  429e70:	mov	x0, #0xb                   	// #11
  429e74:	b	429e44 <ferror@plt+0x27074>
  429e78:	cmp	w28, #0x6c
  429e7c:	b.ne	429ed0 <ferror@plt+0x27100>  // b.any
  429e80:	ldr	x0, [x20]
  429e84:	ldr	x0, [x0]
  429e88:	sub	x21, x0, x21
  429e8c:	sub	x21, x21, #0x1
  429e90:	cmp	x21, #0xf
  429e94:	b.ls	429c68 <ferror@plt+0x26e98>  // b.plast
  429e98:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x225fc>
  429e9c:	add	x0, x22, #0x2
  429ea0:	add	x1, x1, #0xfbe
  429ea4:	mov	x2, #0x10                  	// #16
  429ea8:	bl	402a90 <memcmp@plt>
  429eac:	cbnz	w0, 429c68 <ferror@plt+0x26e98>
  429eb0:	add	x21, x22, #0x12
  429eb4:	ldrb	w0, [x21]
  429eb8:	cmp	w0, #0x20
  429ebc:	b.eq	429ec8 <ferror@plt+0x270f8>  // b.none
  429ec0:	cmp	w0, #0x9
  429ec4:	b.ne	429e4c <ferror@plt+0x2707c>  // b.any
  429ec8:	add	x21, x21, #0x1
  429ecc:	b	429eb4 <ferror@plt+0x270e4>
  429ed0:	cmp	w0, #0x4
  429ed4:	b.eq	429efc <ferror@plt+0x2712c>  // b.none
  429ed8:	mov	x0, #0x200                 	// #512
  429edc:	movk	x0, #0x4003, lsl #32
  429ee0:	ldrb	w28, [x21]
  429ee4:	cmp	w28, #0x2e
  429ee8:	b.hi	429f9c <ferror@plt+0x271cc>  // b.pmore
  429eec:	lsr	x1, x0, x28
  429ef0:	tbz	w1, #0, 429f9c <ferror@plt+0x271cc>
  429ef4:	add	x21, x21, #0x1
  429ef8:	b	429ee0 <ferror@plt+0x27110>
  429efc:	ldrb	w0, [x21]
  429f00:	cmp	w0, #0x20
  429f04:	b.eq	429f10 <ferror@plt+0x27140>  // b.none
  429f08:	cmp	w0, #0x9
  429f0c:	b.ne	429f18 <ferror@plt+0x27148>  // b.any
  429f10:	add	x21, x21, #0x1
  429f14:	b	429efc <ferror@plt+0x2712c>
  429f18:	ldr	x0, [x20]
  429f1c:	ldr	x28, [x0]
  429f20:	sub	x0, x28, x21
  429f24:	cmp	x0, #0x7
  429f28:	b.ls	429c68 <ferror@plt+0x26e98>  // b.plast
  429f2c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x225fc>
  429f30:	mov	x0, x21
  429f34:	add	x1, x1, #0xfcf
  429f38:	mov	x2, #0x7                   	// #7
  429f3c:	bl	402a90 <memcmp@plt>
  429f40:	cbnz	w0, 429c68 <ferror@plt+0x26e98>
  429f44:	ldrb	w0, [x21, #7]
  429f48:	cmp	w0, #0x55
  429f4c:	b.ne	429f70 <ferror@plt+0x271a0>  // b.any
  429f50:	add	x21, x21, #0x8
  429f54:	ldrb	w0, [x21]
  429f58:	cmp	w0, #0x20
  429f5c:	b.eq	429f68 <ferror@plt+0x27198>  // b.none
  429f60:	cmp	w0, #0x9
  429f64:	b.ne	429e4c <ferror@plt+0x2707c>  // b.any
  429f68:	add	x21, x21, #0x1
  429f6c:	b	429f54 <ferror@plt+0x27184>
  429f70:	add	x0, x21, #0x7
  429f74:	sub	x28, x28, x0
  429f78:	cmp	x28, #0x3
  429f7c:	b.ls	429c68 <ferror@plt+0x26e98>  // b.plast
  429f80:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x225fc>
  429f84:	mov	x2, #0x4                   	// #4
  429f88:	add	x1, x1, #0xecd
  429f8c:	bl	402a90 <memcmp@plt>
  429f90:	cbnz	w0, 429c68 <ferror@plt+0x26e98>
  429f94:	add	x21, x21, #0xb
  429f98:	b	429f54 <ferror@plt+0x27184>
  429f9c:	and	w0, w28, #0xffffffdf
  429fa0:	and	w1, w0, #0xff
  429fa4:	cmp	w0, #0x45
  429fa8:	b.ne	42a194 <ferror@plt+0x273c4>  // b.any
  429fac:	ldr	x0, [x20]
  429fb0:	ldr	x0, [x0]
  429fb4:	sub	x0, x0, x21
  429fb8:	cmp	x0, #0xc
  429fbc:	b.ls	429c68 <ferror@plt+0x26e98>  // b.plast
  429fc0:	add	x25, x21, #0x1
  429fc4:	cmp	w28, #0x45
  429fc8:	b.ne	429fe4 <ferror@plt+0x27214>  // b.any
  429fcc:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x225fc>
  429fd0:	mov	x0, x25
  429fd4:	add	x1, x1, #0xfd7
  429fd8:	mov	x2, #0x3                   	// #3
  429fdc:	bl	402a90 <memcmp@plt>
  429fe0:	cbz	w0, 42a18c <ferror@plt+0x273bc>
  429fe4:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  429fe8:	mov	x0, x25
  429fec:	add	x1, x1, #0x54
  429ff0:	mov	x2, #0x3                   	// #3
  429ff4:	bl	402a90 <memcmp@plt>
  429ff8:	cbnz	w0, 429c68 <ferror@plt+0x26e98>
  429ffc:	mov	w26, #0x0                   	// #0
  42a000:	mov	x0, x21
  42a004:	add	x21, x21, #0x5
  42a008:	ldrb	w1, [x0, #4]!
  42a00c:	cmp	w1, #0x2c
  42a010:	csel	x21, x21, x0, eq  // eq = none
  42a014:	ldrb	w0, [x21]
  42a018:	cmp	w0, #0x20
  42a01c:	b.ne	429c68 <ferror@plt+0x26e98>  // b.any
  42a020:	ldrb	w25, [x21, #1]
  42a024:	add	x3, x21, #0x1
  42a028:	cbz	w26, 42a034 <ferror@plt+0x27264>
  42a02c:	cmp	w25, #0x66
  42a030:	b.eq	429c68 <ferror@plt+0x26e98>  // b.none
  42a034:	cmp	w28, #0x65
  42a038:	b.ne	42a044 <ferror@plt+0x27274>  // b.any
  42a03c:	cmp	w25, #0x46
  42a040:	b.eq	429c68 <ferror@plt+0x26e98>  // b.none
  42a044:	and	w0, w25, #0xffffffdf
  42a048:	cmp	w0, #0x46
  42a04c:	b.ne	429c68 <ferror@plt+0x26e98>  // b.any
  42a050:	ldr	x0, [x20]
  42a054:	ldr	x28, [x0]
  42a058:	sub	x0, x28, x3
  42a05c:	cmp	x0, #0x7
  42a060:	b.ls	429c68 <ferror@plt+0x26e98>  // b.plast
  42a064:	cmp	w25, #0x46
  42a068:	b.ne	42a08c <ferror@plt+0x272bc>  // b.any
  42a06c:	add	x0, x3, #0x1
  42a070:	mov	x2, #0x3                   	// #3
  42a074:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x225fc>
  42a078:	add	x1, x1, #0xffa
  42a07c:	str	x3, [sp, #104]
  42a080:	bl	402a90 <memcmp@plt>
  42a084:	ldr	x3, [sp, #104]
  42a088:	cbz	w0, 42a268 <ferror@plt+0x27498>
  42a08c:	cbnz	w26, 429c68 <ferror@plt+0x26e98>
  42a090:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x225fc>
  42a094:	add	x0, x3, #0x1
  42a098:	add	x1, x1, #0xffe
  42a09c:	mov	x2, #0x3                   	// #3
  42a0a0:	str	x3, [sp, #104]
  42a0a4:	bl	402a90 <memcmp@plt>
  42a0a8:	cbnz	w0, 429c68 <ferror@plt+0x26e98>
  42a0ac:	ldr	x3, [sp, #104]
  42a0b0:	mov	w1, #0x73                  	// #115
  42a0b4:	ldrb	w0, [x3, #4]
  42a0b8:	cmp	w0, w1
  42a0bc:	b.ne	42a278 <ferror@plt+0x274a8>  // b.any
  42a0c0:	ldrb	w1, [x3, #5]
  42a0c4:	cmp	w1, #0x20
  42a0c8:	b.ne	42a278 <ferror@plt+0x274a8>  // b.any
  42a0cc:	add	x21, x3, #0x6
  42a0d0:	cmp	w25, #0x66
  42a0d4:	b.eq	42a0e4 <ferror@plt+0x27314>  // b.none
  42a0d8:	ldrb	w0, [x21]
  42a0dc:	cmp	w0, #0x54
  42a0e0:	b.eq	42a0f4 <ferror@plt+0x27324>  // b.none
  42a0e4:	cbnz	w26, 429c68 <ferror@plt+0x26e98>
  42a0e8:	ldrb	w0, [x21]
  42a0ec:	cmp	w0, #0x74
  42a0f0:	b.ne	429c68 <ferror@plt+0x26e98>  // b.any
  42a0f4:	sub	x28, x28, x21
  42a0f8:	cmp	x28, #0x3
  42a0fc:	b.ls	429c68 <ferror@plt+0x26e98>  // b.plast
  42a100:	add	x3, x21, #0x1
  42a104:	cmp	w26, #0x0
  42a108:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x225fc>
  42a10c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x225fc>
  42a110:	add	x0, x0, #0xec7
  42a114:	add	x1, x1, #0xec3
  42a118:	csel	x1, x1, x0, ne  // ne = any
  42a11c:	mov	x2, #0x3                   	// #3
  42a120:	mov	x0, x3
  42a124:	str	x3, [sp, #104]
  42a128:	bl	402a90 <memcmp@plt>
  42a12c:	cbz	w0, 42a2b0 <ferror@plt+0x274e0>
  42a130:	cmp	x28, #0x6
  42a134:	b.ls	429c68 <ferror@plt+0x26e98>  // b.plast
  42a138:	ldr	x3, [sp, #104]
  42a13c:	cmp	w26, #0x0
  42a140:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x225fc>
  42a144:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x225fc>
  42a148:	add	x0, x0, #0xfc8
  42a14c:	add	x1, x1, #0xecb
  42a150:	csel	x1, x1, x0, ne  // ne = any
  42a154:	mov	x2, #0x6                   	// #6
  42a158:	mov	x0, x3
  42a15c:	bl	402a90 <memcmp@plt>
  42a160:	cbnz	w0, 429c68 <ferror@plt+0x26e98>
  42a164:	add	x21, x21, #0x7
  42a168:	mov	x1, #0x200                 	// #512
  42a16c:	movk	x1, #0x4003, lsl #32
  42a170:	ldrb	w0, [x21]
  42a174:	cmp	w0, #0x2e
  42a178:	b.hi	429e4c <ferror@plt+0x2707c>  // b.pmore
  42a17c:	lsr	x2, x1, x0
  42a180:	tbz	w2, #0, 42a2b8 <ferror@plt+0x274e8>
  42a184:	add	x21, x21, #0x1
  42a188:	b	42a170 <ferror@plt+0x273a0>
  42a18c:	mov	w26, #0x1                   	// #1
  42a190:	b	42a000 <ferror@plt+0x27230>
  42a194:	cmp	w1, #0x49
  42a198:	b.ne	42a258 <ferror@plt+0x27488>  // b.any
  42a19c:	ldr	x0, [x20]
  42a1a0:	ldr	x0, [x0]
  42a1a4:	sub	x0, x0, x21
  42a1a8:	cmp	x0, #0x13
  42a1ac:	b.ls	429c68 <ferror@plt+0x26e98>  // b.plast
  42a1b0:	add	x25, x21, #0x1
  42a1b4:	cmp	w28, #0x49
  42a1b8:	b.ne	42a1d4 <ferror@plt+0x27404>  // b.any
  42a1bc:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x225fc>
  42a1c0:	mov	x0, x25
  42a1c4:	add	x1, x1, #0xfdb
  42a1c8:	mov	x2, #0xa                   	// #10
  42a1cc:	bl	402a90 <memcmp@plt>
  42a1d0:	cbz	w0, 42a21c <ferror@plt+0x2744c>
  42a1d4:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x225fc>
  42a1d8:	mov	x0, x25
  42a1dc:	add	x1, x1, #0xfe6
  42a1e0:	mov	x2, #0xa                   	// #10
  42a1e4:	bl	402a90 <memcmp@plt>
  42a1e8:	cbnz	w0, 429c68 <ferror@plt+0x26e98>
  42a1ec:	mov	w26, #0x0                   	// #0
  42a1f0:	ldrb	w0, [x21, #11]
  42a1f4:	cmp	w0, #0x20
  42a1f8:	b.ne	42a224 <ferror@plt+0x27454>  // b.any
  42a1fc:	ldrb	w0, [x21, #12]
  42a200:	add	x3, x21, #0xc
  42a204:	cbz	w26, 42a210 <ferror@plt+0x27440>
  42a208:	cmp	w0, #0x66
  42a20c:	b.eq	429c68 <ferror@plt+0x26e98>  // b.none
  42a210:	ldrb	w25, [x3]
  42a214:	cmp	w28, #0x69
  42a218:	b	42a038 <ferror@plt+0x27268>
  42a21c:	mov	w26, #0x1                   	// #1
  42a220:	b	42a1f0 <ferror@plt+0x27420>
  42a224:	add	x0, x21, #0xb
  42a228:	cbz	w26, 42a248 <ferror@plt+0x27478>
  42a22c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x225fc>
  42a230:	add	x1, x1, #0xff1
  42a234:	mov	x2, #0x4                   	// #4
  42a238:	bl	402a90 <memcmp@plt>
  42a23c:	cbnz	w0, 429c68 <ferror@plt+0x26e98>
  42a240:	add	x3, x21, #0xe
  42a244:	b	42a210 <ferror@plt+0x27440>
  42a248:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x225fc>
  42a24c:	mov	x2, #0x3                   	// #3
  42a250:	add	x1, x1, #0xff6
  42a254:	b	42a238 <ferror@plt+0x27468>
  42a258:	mov	w25, w28
  42a25c:	mov	x3, x21
  42a260:	mov	w26, #0x0                   	// #0
  42a264:	b	42a044 <ferror@plt+0x27274>
  42a268:	ldrb	w0, [x3, #4]
  42a26c:	mov	w26, #0x1                   	// #1
  42a270:	mov	w1, #0x53                  	// #83
  42a274:	b	42a0b8 <ferror@plt+0x272e8>
  42a278:	cmp	w0, #0x20
  42a27c:	b.eq	42a288 <ferror@plt+0x274b8>  // b.none
  42a280:	cmp	w0, #0x2d
  42a284:	b.ne	42a290 <ferror@plt+0x274c0>  // b.any
  42a288:	add	x21, x3, #0x5
  42a28c:	b	42a0d0 <ferror@plt+0x27300>
  42a290:	cmp	w26, #0x0
  42a294:	mov	w1, #0x54                  	// #84
  42a298:	mov	w2, #0x74                  	// #116
  42a29c:	csel	w1, w1, w2, ne  // ne = any
  42a2a0:	cmp	w0, w1
  42a2a4:	b.ne	429c68 <ferror@plt+0x26e98>  // b.any
  42a2a8:	add	x21, x3, #0x4
  42a2ac:	b	42a0d0 <ferror@plt+0x27300>
  42a2b0:	add	x21, x21, #0x4
  42a2b4:	b	42a168 <ferror@plt+0x27398>
  42a2b8:	cmp	w0, #0x2d
  42a2bc:	b.ne	429e4c <ferror@plt+0x2707c>  // b.any
  42a2c0:	ldrb	w1, [x22]
  42a2c4:	add	x0, x21, #0x1
  42a2c8:	cmp	w1, #0x2a
  42a2cc:	b.ne	42a314 <ferror@plt+0x27544>  // b.any
  42a2d0:	add	x0, x21, #0x2
  42a2d4:	ldurb	w1, [x0, #-1]
  42a2d8:	sub	x21, x0, #0x1
  42a2dc:	cmp	w1, #0x2a
  42a2e0:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  42a2e4:	b.eq	42a300 <ferror@plt+0x27530>  // b.none
  42a2e8:	cmp	w1, #0xa
  42a2ec:	b.eq	429e4c <ferror@plt+0x2707c>  // b.none
  42a2f0:	cmp	w1, #0xd
  42a2f4:	b.eq	429e4c <ferror@plt+0x2707c>  // b.none
  42a2f8:	add	x0, x0, #0x1
  42a2fc:	b	42a2d4 <ferror@plt+0x27504>
  42a300:	cmp	w1, #0x2a
  42a304:	b.ne	429e4c <ferror@plt+0x2707c>  // b.any
  42a308:	ldrb	w1, [x0]
  42a30c:	cmp	w1, #0x2f
  42a310:	b	42a2f4 <ferror@plt+0x27524>
  42a314:	mov	x21, x0
  42a318:	mov	x1, #0x2401                	// #9217
  42a31c:	ldrb	w0, [x21]
  42a320:	cmp	w0, #0xd
  42a324:	b.hi	42a330 <ferror@plt+0x27560>  // b.pmore
  42a328:	lsr	x0, x1, x0
  42a32c:	tbnz	w0, #0, 429e4c <ferror@plt+0x2707c>
  42a330:	add	x21, x21, #0x1
  42a334:	b	42a31c <ferror@plt+0x2754c>
  42a338:	cmp	w0, #0xa
  42a33c:	b	429aec <ferror@plt+0x26d1c>
  42a340:	cbz	w23, 42a350 <ferror@plt+0x27580>
  42a344:	ldrh	w0, [x19, #6]
  42a348:	orr	w0, w0, #0x20
  42a34c:	strh	w0, [x19, #6]
  42a350:	ldr	x0, [x20]
  42a354:	ldr	x25, [x0]
  42a358:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  42a35c:	add	x0, x0, #0xb08
  42a360:	ldurb	w1, [x25, #-1]
  42a364:	sub	w25, w25, w22
  42a368:	ldrh	w0, [x0, x1, lsl #1]
  42a36c:	tst	x0, #0x400
  42a370:	ldrb	w0, [x20, #16]
  42a374:	cinc	w25, w25, eq  // eq = none
  42a378:	cbnz	w0, 42a384 <ferror@plt+0x275b4>
  42a37c:	ldrb	w0, [x20, #25]
  42a380:	cbz	w0, 42a440 <ferror@plt+0x27670>
  42a384:	add	w21, w25, #0x2
  42a388:	cmp	w24, #0x2f
  42a38c:	csel	w21, w21, w25, eq  // eq = none
  42a390:	mov	w1, w21
  42a394:	mov	x0, x20
  42a398:	bl	4288e0 <ferror@plt+0x25b10>
  42a39c:	mov	x23, x0
  42a3a0:	mov	w0, #0x4f                  	// #79
  42a3a4:	strb	w0, [x19, #4]
  42a3a8:	mov	x0, x23
  42a3ac:	str	w21, [x19, #8]
  42a3b0:	str	x23, [x19, #16]
  42a3b4:	mov	w1, #0x2f                  	// #47
  42a3b8:	sub	w2, w25, #0x1
  42a3bc:	strb	w1, [x0], #1
  42a3c0:	mov	x1, x22
  42a3c4:	bl	4026a0 <memcpy@plt>
  42a3c8:	ldrb	w0, [x20, #16]
  42a3cc:	cbnz	w0, 42a3d8 <ferror@plt+0x27608>
  42a3d0:	ldrb	w0, [x20, #25]
  42a3d4:	cbz	w0, 42a448 <ferror@plt+0x27678>
  42a3d8:	cmp	w24, #0x2f
  42a3dc:	b.ne	42a448 <ferror@plt+0x27678>  // b.any
  42a3e0:	sub	w2, w21, #0x2
  42a3e4:	sub	w21, w21, #0x1
  42a3e8:	mov	w0, #0x2a                  	// #42
  42a3ec:	strb	w0, [x23, #1]
  42a3f0:	mov	w1, #0x2                   	// #2
  42a3f4:	mov	w3, #0x7c                  	// #124
  42a3f8:	strb	w0, [x23, w2, uxtw]
  42a3fc:	add	x0, x23, #0x2
  42a400:	strb	w24, [x23, x21]
  42a404:	cmp	w2, w1
  42a408:	b.ls	42a448 <ferror@plt+0x27678>  // b.plast
  42a40c:	ldrb	w4, [x0]
  42a410:	add	w1, w1, #0x1
  42a414:	cmp	w4, #0x2f
  42a418:	b.ne	42a438 <ferror@plt+0x27668>  // b.any
  42a41c:	ldurb	w4, [x0, #-1]
  42a420:	cmp	w4, #0x2a
  42a424:	b.eq	42a434 <ferror@plt+0x27664>  // b.none
  42a428:	ldrb	w4, [x23, w1, uxtw]
  42a42c:	cmp	w4, #0x2a
  42a430:	b.ne	42a438 <ferror@plt+0x27668>  // b.any
  42a434:	strb	w3, [x0]
  42a438:	add	x0, x0, #0x1
  42a43c:	b	42a404 <ferror@plt+0x27634>
  42a440:	mov	w21, w25
  42a444:	b	42a390 <ferror@plt+0x275c0>
  42a448:	ldr	w0, [x20, #1396]
  42a44c:	cbnz	w0, 42a464 <ferror@plt+0x27694>
  42a450:	mov	w0, #0x100                 	// #256
  42a454:	str	w0, [x20, #1396]
  42a458:	mov	x0, #0x1000                	// #4096
  42a45c:	bl	44526c <_obstack_memory_used@@Base+0x868>
  42a460:	str	x0, [x20, #1384]
  42a464:	ldr	w1, [x20, #1392]
  42a468:	ldr	w0, [x20, #1396]
  42a46c:	cmp	w1, w0
  42a470:	b.ne	42a48c <ferror@plt+0x276bc>  // b.any
  42a474:	ldr	x0, [x20, #1384]
  42a478:	lsl	w1, w1, #1
  42a47c:	str	w1, [x20, #1396]
  42a480:	sbfiz	x1, x1, #4, #32
  42a484:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  42a488:	str	x0, [x20, #1384]
  42a48c:	ldrsw	x22, [x20, #1392]
  42a490:	ldr	w21, [x19, #8]
  42a494:	ldr	x23, [x20, #1384]
  42a498:	add	w0, w21, #0x1
  42a49c:	lsl	x22, x22, #4
  42a4a0:	sxtw	x21, w21
  42a4a4:	sxtw	x0, w0
  42a4a8:	bl	44526c <_obstack_memory_used@@Base+0x868>
  42a4ac:	ldr	x3, [x20, #1384]
  42a4b0:	str	x0, [x23, x22]
  42a4b4:	ldrsw	x0, [x20, #1392]
  42a4b8:	mov	x2, x21
  42a4bc:	ldr	x1, [x19, #16]
  42a4c0:	lsl	x0, x0, #4
  42a4c4:	ldr	x0, [x3, x0]
  42a4c8:	bl	4026a0 <memcpy@plt>
  42a4cc:	ldrsw	x0, [x20, #1392]
  42a4d0:	ldr	x1, [x20, #1384]
  42a4d4:	lsl	x0, x0, #4
  42a4d8:	ldr	x0, [x1, x0]
  42a4dc:	strb	wzr, [x0, x21]
  42a4e0:	ldr	x1, [x20, #1384]
  42a4e4:	ldr	w0, [x20, #1392]
  42a4e8:	ldr	w2, [x19]
  42a4ec:	add	x1, x1, w0, sxtw #4
  42a4f0:	add	w0, w0, #0x1
  42a4f4:	str	w2, [x1, #8]
  42a4f8:	str	w0, [x20, #1392]
  42a4fc:	b	42999c <ferror@plt+0x26bcc>
  42a500:	ldrb	w0, [x20, #19]
  42a504:	cbnz	w0, 42a530 <ferror@plt+0x27760>
  42a508:	mov	w0, #0x3                   	// #3
  42a50c:	strb	w0, [x19, #4]
  42a510:	ldr	x0, [x27]
  42a514:	ldrb	w1, [x0]
  42a518:	cmp	w1, #0x3d
  42a51c:	b.ne	42a554 <ferror@plt+0x27784>  // b.any
  42a520:	add	x0, x0, #0x1
  42a524:	str	x0, [x27]
  42a528:	mov	w0, #0x1a                  	// #26
  42a52c:	b	429c50 <ferror@plt+0x26e80>
  42a530:	ldr	x2, [x27]
  42a534:	mov	x0, x20
  42a538:	mov	x1, x19
  42a53c:	sub	x2, x2, #0x1
  42a540:	bl	42899c <ferror@plt+0x25bcc>
  42a544:	ldrb	w0, [x19, #4]
  42a548:	cmp	w0, #0x3
  42a54c:	b.ne	42999c <ferror@plt+0x26bcc>  // b.any
  42a550:	b	42a508 <ferror@plt+0x27738>
  42a554:	cmp	w1, #0x3c
  42a558:	b.ne	42a588 <ferror@plt+0x277b8>  // b.any
  42a55c:	add	x1, x0, #0x1
  42a560:	str	x1, [x27]
  42a564:	mov	w1, #0xd                   	// #13
  42a568:	strb	w1, [x19, #4]
  42a56c:	ldrb	w1, [x0, #1]
  42a570:	cmp	w1, #0x3d
  42a574:	b.ne	42999c <ferror@plt+0x26bcc>  // b.any
  42a578:	add	x0, x0, #0x2
  42a57c:	str	x0, [x27]
  42a580:	mov	w0, #0x24                  	// #36
  42a584:	b	429c50 <ferror@plt+0x26e80>
  42a588:	ldrb	w2, [x20, #1126]
  42a58c:	cbz	w2, 42999c <ferror@plt+0x26bcc>
  42a590:	cmp	w1, #0x3a
  42a594:	b.ne	42a5ec <ferror@plt+0x2781c>  // b.any
  42a598:	ldrb	w1, [x20, #1120]
  42a59c:	cbz	w1, 42a5d0 <ferror@plt+0x27800>
  42a5a0:	ldr	w1, [x20, #1116]
  42a5a4:	sub	w1, w1, #0xb
  42a5a8:	cmp	w1, #0x1
  42a5ac:	b.ls	42a5d0 <ferror@plt+0x27800>  // b.plast
  42a5b0:	ldrb	w1, [x0, #1]
  42a5b4:	cmp	w1, #0x3a
  42a5b8:	b.ne	42a5d0 <ferror@plt+0x27800>  // b.any
  42a5bc:	ldrb	w1, [x0, #2]
  42a5c0:	and	w1, w1, #0xfffffffb
  42a5c4:	and	w1, w1, #0xff
  42a5c8:	cmp	w1, #0x3a
  42a5cc:	b.ne	42999c <ferror@plt+0x26bcc>  // b.any
  42a5d0:	add	x0, x0, #0x1
  42a5d4:	str	x0, [x27]
  42a5d8:	ldrh	w0, [x19, #6]
  42a5dc:	orr	w0, w0, #0x2
  42a5e0:	strh	w0, [x19, #6]
  42a5e4:	mov	w0, #0x27                  	// #39
  42a5e8:	b	429c50 <ferror@plt+0x26e80>
  42a5ec:	cmp	w1, #0x25
  42a5f0:	b.ne	42999c <ferror@plt+0x26bcc>  // b.any
  42a5f4:	add	x0, x0, #0x1
  42a5f8:	str	x0, [x27]
  42a5fc:	ldrh	w0, [x19, #6]
  42a600:	orr	w0, w0, #0x2
  42a604:	strh	w0, [x19, #6]
  42a608:	mov	w0, #0x29                  	// #41
  42a60c:	b	429c50 <ferror@plt+0x26e80>
  42a610:	mov	w0, #0x2                   	// #2
  42a614:	strb	w0, [x19, #4]
  42a618:	ldr	x0, [x27]
  42a61c:	ldrb	w1, [x0]
  42a620:	cmp	w1, #0x3d
  42a624:	b.ne	42a638 <ferror@plt+0x27868>  // b.any
  42a628:	add	x0, x0, #0x1
  42a62c:	str	x0, [x27]
  42a630:	mov	w0, #0x19                  	// #25
  42a634:	b	429c50 <ferror@plt+0x26e80>
  42a638:	cmp	w1, #0x3e
  42a63c:	b.ne	42999c <ferror@plt+0x26bcc>  // b.any
  42a640:	add	x1, x0, #0x1
  42a644:	str	x1, [x27]
  42a648:	mov	w1, #0xc                   	// #12
  42a64c:	strb	w1, [x19, #4]
  42a650:	ldrb	w1, [x0, #1]
  42a654:	cmp	w1, #0x3d
  42a658:	b.ne	42999c <ferror@plt+0x26bcc>  // b.any
  42a65c:	add	x0, x0, #0x2
  42a660:	str	x0, [x27]
  42a664:	mov	w0, #0x23                  	// #35
  42a668:	b	429c50 <ferror@plt+0x26e80>
  42a66c:	mov	w0, #0x8                   	// #8
  42a670:	strb	w0, [x19, #4]
  42a674:	ldr	x0, [x27]
  42a678:	ldrb	w1, [x0]
  42a67c:	cmp	w1, #0x3d
  42a680:	b.ne	42a694 <ferror@plt+0x278c4>  // b.any
  42a684:	add	x0, x0, #0x1
  42a688:	str	x0, [x27]
  42a68c:	mov	w0, #0x1f                  	// #31
  42a690:	b	429c50 <ferror@plt+0x26e80>
  42a694:	ldrb	w2, [x20, #1126]
  42a698:	cbz	w2, 42999c <ferror@plt+0x26bcc>
  42a69c:	cmp	w1, #0x3a
  42a6a0:	b.ne	42a6f0 <ferror@plt+0x27920>  // b.any
  42a6a4:	add	x1, x0, #0x1
  42a6a8:	str	x1, [x27]
  42a6ac:	ldrh	w1, [x19, #6]
  42a6b0:	orr	w1, w1, #0x2
  42a6b4:	strh	w1, [x19, #6]
  42a6b8:	mov	w1, #0x25                  	// #37
  42a6bc:	strb	w1, [x19, #4]
  42a6c0:	ldrb	w1, [x0, #1]
  42a6c4:	cmp	w1, #0x25
  42a6c8:	b.ne	42999c <ferror@plt+0x26bcc>  // b.any
  42a6cc:	ldrb	w1, [x0, #2]
  42a6d0:	cmp	w1, #0x3a
  42a6d4:	b.ne	42999c <ferror@plt+0x26bcc>  // b.any
  42a6d8:	add	x0, x0, #0x3
  42a6dc:	str	x0, [x27]
  42a6e0:	mov	w0, #0x26                  	// #38
  42a6e4:	strb	w0, [x19, #4]
  42a6e8:	str	wzr, [x19, #8]
  42a6ec:	b	42999c <ferror@plt+0x26bcc>
  42a6f0:	cmp	w1, #0x3e
  42a6f4:	b.ne	42999c <ferror@plt+0x26bcc>  // b.any
  42a6f8:	add	x0, x0, #0x1
  42a6fc:	str	x0, [x27]
  42a700:	ldrh	w0, [x19, #6]
  42a704:	orr	w0, w0, #0x2
  42a708:	strh	w0, [x19, #6]
  42a70c:	mov	w0, #0x2a                  	// #42
  42a710:	b	429c50 <ferror@plt+0x26e80>
  42a714:	mov	w0, #0x30                  	// #48
  42a718:	strb	w0, [x19, #4]
  42a71c:	ldr	x0, [x27]
  42a720:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  42a724:	add	x1, x1, #0xb08
  42a728:	ldrb	w3, [x0]
  42a72c:	ldrb	w2, [x0]
  42a730:	ldrh	w1, [x1, x3, lsl #1]
  42a734:	tbz	w1, #2, 42a770 <ferror@plt+0x279a0>
  42a738:	str	wzr, [sp, #112]
  42a73c:	mov	w0, #0x37                  	// #55
  42a740:	strb	wzr, [sp, #116]
  42a744:	add	x2, sp, #0x70
  42a748:	str	wzr, [sp, #120]
  42a74c:	add	x1, x19, #0x8
  42a750:	strb	w0, [x19, #4]
  42a754:	mov	x0, x20
  42a758:	bl	4294d8 <ferror@plt+0x26708>
  42a75c:	add	x2, sp, #0x78
  42a760:	mov	x1, x19
  42a764:	mov	x0, x20
  42a768:	bl	427f88 <ferror@plt+0x251b8>
  42a76c:	b	42999c <ferror@plt+0x26bcc>
  42a770:	cmp	w2, #0x2e
  42a774:	b.ne	42a794 <ferror@plt+0x279c4>  // b.any
  42a778:	ldrb	w1, [x0, #1]
  42a77c:	cmp	w1, #0x2e
  42a780:	b.ne	42999c <ferror@plt+0x26bcc>  // b.any
  42a784:	add	x0, x0, #0x2
  42a788:	str	x0, [x27]
  42a78c:	mov	w0, #0x2c                  	// #44
  42a790:	b	429c50 <ferror@plt+0x26e80>
  42a794:	cmp	w2, #0x2a
  42a798:	b.ne	42999c <ferror@plt+0x26bcc>  // b.any
  42a79c:	ldrb	w1, [x20, #1120]
  42a7a0:	cbz	w1, 42999c <ferror@plt+0x26bcc>
  42a7a4:	add	x0, x0, #0x1
  42a7a8:	str	x0, [x27]
  42a7ac:	mov	w0, #0x33                  	// #51
  42a7b0:	b	429c50 <ferror@plt+0x26e80>
  42a7b4:	mov	w0, #0x4                   	// #4
  42a7b8:	strb	w0, [x19, #4]
  42a7bc:	ldr	x0, [x27]
  42a7c0:	ldrb	w1, [x0]
  42a7c4:	cmp	w1, #0x2b
  42a7c8:	b.ne	42a7dc <ferror@plt+0x27a0c>  // b.any
  42a7cc:	add	x0, x0, #0x1
  42a7d0:	str	x0, [x27]
  42a7d4:	mov	w0, #0x2d                  	// #45
  42a7d8:	b	429c50 <ferror@plt+0x26e80>
  42a7dc:	cmp	w1, #0x3d
  42a7e0:	b.ne	42999c <ferror@plt+0x26bcc>  // b.any
  42a7e4:	add	x0, x0, #0x1
  42a7e8:	str	x0, [x27]
  42a7ec:	mov	w0, #0x1b                  	// #27
  42a7f0:	b	429c50 <ferror@plt+0x26e80>
  42a7f4:	mov	w0, #0x5                   	// #5
  42a7f8:	strb	w0, [x19, #4]
  42a7fc:	ldr	x0, [x27]
  42a800:	ldrb	w1, [x0]
  42a804:	cmp	w1, #0x3e
  42a808:	b.ne	42a840 <ferror@plt+0x27a70>  // b.any
  42a80c:	add	x1, x0, #0x1
  42a810:	str	x1, [x27]
  42a814:	mov	w1, #0x2f                  	// #47
  42a818:	strb	w1, [x19, #4]
  42a81c:	ldrb	w1, [x0, #1]
  42a820:	cmp	w1, #0x2a
  42a824:	b.ne	42999c <ferror@plt+0x26bcc>  // b.any
  42a828:	ldrb	w1, [x20, #1120]
  42a82c:	cbz	w1, 42999c <ferror@plt+0x26bcc>
  42a830:	add	x0, x0, #0x2
  42a834:	str	x0, [x27]
  42a838:	mov	w0, #0x32                  	// #50
  42a83c:	b	429c50 <ferror@plt+0x26e80>
  42a840:	cmp	w1, #0x2d
  42a844:	b.ne	42a858 <ferror@plt+0x27a88>  // b.any
  42a848:	add	x0, x0, #0x1
  42a84c:	str	x0, [x27]
  42a850:	mov	w0, #0x2e                  	// #46
  42a854:	b	429c50 <ferror@plt+0x26e80>
  42a858:	cmp	w1, #0x3d
  42a85c:	b.ne	42999c <ferror@plt+0x26bcc>  // b.any
  42a860:	add	x0, x0, #0x1
  42a864:	str	x0, [x27]
  42a868:	mov	w0, #0x1c                  	// #28
  42a86c:	b	429c50 <ferror@plt+0x26e80>
  42a870:	mov	w0, #0x9                   	// #9
  42a874:	strb	w0, [x19, #4]
  42a878:	ldr	x0, [x27]
  42a87c:	ldrb	w1, [x0]
  42a880:	cmp	w1, #0x26
  42a884:	b.ne	42a898 <ferror@plt+0x27ac8>  // b.any
  42a888:	add	x0, x0, #0x1
  42a88c:	str	x0, [x27]
  42a890:	mov	w0, #0xf                   	// #15
  42a894:	b	429c50 <ferror@plt+0x26e80>
  42a898:	cmp	w1, #0x3d
  42a89c:	b.ne	42999c <ferror@plt+0x26bcc>  // b.any
  42a8a0:	add	x0, x0, #0x1
  42a8a4:	str	x0, [x27]
  42a8a8:	mov	w0, #0x20                  	// #32
  42a8ac:	b	429c50 <ferror@plt+0x26e80>
  42a8b0:	mov	w0, #0xa                   	// #10
  42a8b4:	strb	w0, [x19, #4]
  42a8b8:	ldr	x0, [x27]
  42a8bc:	ldrb	w1, [x0]
  42a8c0:	cmp	w1, #0x7c
  42a8c4:	b.ne	42a8d8 <ferror@plt+0x27b08>  // b.any
  42a8c8:	add	x0, x0, #0x1
  42a8cc:	str	x0, [x27]
  42a8d0:	mov	w0, #0x10                  	// #16
  42a8d4:	b	429c50 <ferror@plt+0x26e80>
  42a8d8:	cmp	w1, #0x3d
  42a8dc:	b.ne	42999c <ferror@plt+0x26bcc>  // b.any
  42a8e0:	add	x0, x0, #0x1
  42a8e4:	str	x0, [x27]
  42a8e8:	mov	w0, #0x21                  	// #33
  42a8ec:	b	429c50 <ferror@plt+0x26e80>
  42a8f0:	mov	w0, #0x12                  	// #18
  42a8f4:	strb	w0, [x19, #4]
  42a8f8:	ldr	x0, [x27]
  42a8fc:	ldrb	w1, [x0]
  42a900:	cmp	w1, #0x3a
  42a904:	b.ne	42a920 <ferror@plt+0x27b50>  // b.any
  42a908:	ldrb	w1, [x20, #1120]
  42a90c:	cbz	w1, 42999c <ferror@plt+0x26bcc>
  42a910:	add	x0, x0, #0x1
  42a914:	str	x0, [x27]
  42a918:	mov	w0, #0x31                  	// #49
  42a91c:	b	429c50 <ferror@plt+0x26e80>
  42a920:	cmp	w1, #0x3e
  42a924:	b.ne	42999c <ferror@plt+0x26bcc>  // b.any
  42a928:	ldrb	w1, [x20, #1126]
  42a92c:	cbz	w1, 42999c <ferror@plt+0x26bcc>
  42a930:	add	x0, x0, #0x1
  42a934:	str	x0, [x27]
  42a938:	ldrh	w0, [x19, #6]
  42a93c:	orr	w0, w0, #0x2
  42a940:	strh	w0, [x19, #6]
  42a944:	mov	w0, #0x28                  	// #40
  42a948:	b	429c50 <ferror@plt+0x26e80>
  42a94c:	mov	w0, #0x6                   	// #6
  42a950:	strb	w0, [x19, #4]
  42a954:	ldr	x0, [x27]
  42a958:	ldrb	w1, [x0]
  42a95c:	cmp	w1, #0x3d
  42a960:	b.ne	42999c <ferror@plt+0x26bcc>  // b.any
  42a964:	add	x0, x0, #0x1
  42a968:	str	x0, [x27]
  42a96c:	mov	w0, #0x1d                  	// #29
  42a970:	b	429c50 <ferror@plt+0x26e80>
  42a974:	ldr	x0, [x27]
  42a978:	strb	wzr, [x19, #4]
  42a97c:	ldrb	w1, [x0]
  42a980:	cmp	w1, #0x3d
  42a984:	b.ne	42999c <ferror@plt+0x26bcc>  // b.any
  42a988:	add	x0, x0, #0x1
  42a98c:	str	x0, [x27]
  42a990:	mov	w0, #0x17                  	// #23
  42a994:	b	429c50 <ferror@plt+0x26e80>
  42a998:	mov	w0, #0x1                   	// #1
  42a99c:	strb	w0, [x19, #4]
  42a9a0:	ldr	x0, [x27]
  42a9a4:	ldrb	w1, [x0]
  42a9a8:	cmp	w1, #0x3d
  42a9ac:	b.ne	42999c <ferror@plt+0x26bcc>  // b.any
  42a9b0:	add	x0, x0, #0x1
  42a9b4:	str	x0, [x27]
  42a9b8:	mov	w0, #0x18                  	// #24
  42a9bc:	b	429c50 <ferror@plt+0x26e80>
  42a9c0:	mov	w0, #0xb                   	// #11
  42a9c4:	strb	w0, [x19, #4]
  42a9c8:	ldr	x0, [x27]
  42a9cc:	ldrb	w1, [x0]
  42a9d0:	cmp	w1, #0x3d
  42a9d4:	b.ne	42999c <ferror@plt+0x26bcc>  // b.any
  42a9d8:	add	x0, x0, #0x1
  42a9dc:	str	x0, [x27]
  42a9e0:	mov	w0, #0x22                  	// #34
  42a9e4:	b	429c50 <ferror@plt+0x26e80>
  42a9e8:	mov	w0, #0x25                  	// #37
  42a9ec:	strb	w0, [x19, #4]
  42a9f0:	ldr	x0, [x27]
  42a9f4:	ldrb	w1, [x0]
  42a9f8:	cmp	w1, #0x23
  42a9fc:	b.ne	42a6e8 <ferror@plt+0x27918>  // b.any
  42aa00:	add	x0, x0, #0x1
  42aa04:	b	42a6dc <ferror@plt+0x2790c>
  42aa08:	mov	w0, #0x11                  	// #17
  42aa0c:	b	429c50 <ferror@plt+0x26e80>
  42aa10:	mov	w0, #0xe                   	// #14
  42aa14:	b	429c50 <ferror@plt+0x26e80>
  42aa18:	mov	w0, #0x13                  	// #19
  42aa1c:	b	429c50 <ferror@plt+0x26e80>
  42aa20:	mov	w0, #0x14                  	// #20
  42aa24:	b	429c50 <ferror@plt+0x26e80>
  42aa28:	mov	w0, #0x15                  	// #21
  42aa2c:	b	429c50 <ferror@plt+0x26e80>
  42aa30:	mov	w0, #0x2b                  	// #43
  42aa34:	b	429c50 <ferror@plt+0x26e80>
  42aa38:	mov	w0, #0x34                  	// #52
  42aa3c:	b	429c50 <ferror@plt+0x26e80>
  42aa40:	ldr	x21, [x27]
  42aa44:	add	x2, sp, #0x70
  42aa48:	mov	x0, x20
  42aa4c:	mov	w1, #0x1                   	// #1
  42aa50:	sub	x21, x21, #0x1
  42aa54:	str	x21, [x27]
  42aa58:	str	wzr, [sp, #112]
  42aa5c:	strb	wzr, [sp, #116]
  42aa60:	str	wzr, [sp, #120]
  42aa64:	bl	426e44 <ferror@plt+0x24074>
  42aa68:	tst	w0, #0xff
  42aa6c:	b.eq	42aa98 <ferror@plt+0x27cc8>  // b.none
  42aa70:	mov	w0, #0x35                  	// #53
  42aa74:	strb	w0, [x19, #4]
  42aa78:	add	x4, x19, #0x10
  42aa7c:	add	x3, sp, #0x70
  42aa80:	mov	x1, x21
  42aa84:	mov	x0, x20
  42aa88:	mov	w2, #0x1                   	// #1
  42aa8c:	bl	427010 <ferror@plt+0x24240>
  42aa90:	str	x0, [x19, #8]
  42aa94:	b	42a75c <ferror@plt+0x2798c>
  42aa98:	ldr	x0, [x27]
  42aa9c:	add	x0, x0, #0x1
  42aaa0:	str	x0, [x27]
  42aaa4:	ldr	x2, [x27]
  42aaa8:	mov	x1, x19
  42aaac:	mov	x0, x20
  42aab0:	mov	w4, #0x3d                  	// #61
  42aab4:	sub	x2, x2, #0x1
  42aab8:	mov	w3, #0x1                   	// #1
  42aabc:	bl	428938 <ferror@plt+0x25b68>
  42aac0:	b	42999c <ferror@plt+0x26bcc>
  42aac4:	stp	x29, x30, [sp, #-48]!
  42aac8:	mov	x29, sp
  42aacc:	stp	x19, x20, [sp, #16]
  42aad0:	mov	x19, x0
  42aad4:	str	x21, [sp, #32]
  42aad8:	add	x21, x0, #0x98
  42aadc:	ldr	x0, [x19, #488]
  42aae0:	ldr	x2, [x19, #448]
  42aae4:	ldr	x1, [x0, #24]
  42aae8:	cmp	x2, x1
  42aaec:	b.ne	42ab00 <ferror@plt+0x27d30>  // b.any
  42aaf0:	bl	427b70 <ferror@plt+0x24da0>
  42aaf4:	str	x0, [x19, #488]
  42aaf8:	ldr	x0, [x0, #16]
  42aafc:	str	x0, [x19, #448]
  42ab00:	ldr	x0, [x19, #488]
  42ab04:	ldr	x20, [x19, #448]
  42ab08:	ldr	x1, [x0, #16]
  42ab0c:	cmp	x20, x1
  42ab10:	b.cc	42ab20 <ferror@plt+0x27d50>  // b.lo, b.ul, b.last
  42ab14:	ldr	x0, [x0, #24]
  42ab18:	cmp	x20, x0
  42ab1c:	b.cc	42ab38 <ferror@plt+0x27d68>  // b.lo, b.ul, b.last
  42ab20:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x235fc>
  42ab24:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x225fc>
  42ab28:	add	x2, x2, #0x2
  42ab2c:	add	x0, x0, #0xa90
  42ab30:	mov	w1, #0xa1d                 	// #2589
  42ab34:	bl	402de0 <ferror@plt+0x10>
  42ab38:	ldr	w0, [x19, #496]
  42ab3c:	cbz	w0, 42abec <ferror@plt+0x27e1c>
  42ab40:	sub	w0, w0, #0x1
  42ab44:	str	w0, [x19, #496]
  42ab48:	add	x0, x20, #0x18
  42ab4c:	str	x0, [x19, #448]
  42ab50:	ldrh	w1, [x20, #6]
  42ab54:	tbz	w1, #6, 42abb0 <ferror@plt+0x27de0>
  42ab58:	ldrb	w0, [x20, #4]
  42ab5c:	cmp	w0, #0x25
  42ab60:	b.ne	42abfc <ferror@plt+0x27e2c>  // b.any
  42ab64:	ldrb	w0, [x19, #25]
  42ab68:	cmp	w0, #0x1
  42ab6c:	b.eq	42abfc <ferror@plt+0x27e2c>  // b.none
  42ab70:	and	w1, w1, #0x1
  42ab74:	mov	x0, x19
  42ab78:	bl	41fd38 <ferror@plt+0x1cf68>
  42ab7c:	cbz	w0, 42ab90 <ferror@plt+0x27dc0>
  42ab80:	ldrb	w0, [x19, #156]
  42ab84:	cmp	w0, #0x53
  42ab88:	b.eq	42aadc <ferror@plt+0x27d0c>  // b.none
  42ab8c:	mov	x20, x21
  42ab90:	ldr	x3, [x19, #904]
  42ab94:	cbz	x3, 42abb0 <ferror@plt+0x27de0>
  42ab98:	ldrb	w0, [x19, #18]
  42ab9c:	cbnz	w0, 42abb0 <ferror@plt+0x27de0>
  42aba0:	ldrb	w2, [x19, #25]
  42aba4:	mov	x1, x20
  42aba8:	mov	x0, x19
  42abac:	blr	x3
  42abb0:	ldrb	w0, [x19, #16]
  42abb4:	cbnz	w0, 42abd8 <ferror@plt+0x27e08>
  42abb8:	ldrb	w0, [x19, #32]
  42abbc:	cbnz	w0, 42abd8 <ferror@plt+0x27e08>
  42abc0:	ldrb	w0, [x19, #18]
  42abc4:	strb	wzr, [x19, #440]
  42abc8:	cbz	w0, 42abd8 <ferror@plt+0x27e08>
  42abcc:	ldrb	w0, [x20, #4]
  42abd0:	cmp	w0, #0x16
  42abd4:	b.ne	42aadc <ferror@plt+0x27d0c>  // b.any
  42abd8:	mov	x0, x20
  42abdc:	ldp	x19, x20, [sp, #16]
  42abe0:	ldr	x21, [sp, #32]
  42abe4:	ldp	x29, x30, [sp], #48
  42abe8:	ret
  42abec:	mov	x0, x19
  42abf0:	bl	429618 <ferror@plt+0x26848>
  42abf4:	mov	x20, x0
  42abf8:	b	42ab50 <ferror@plt+0x27d80>
  42abfc:	ldrb	w0, [x19, #32]
  42ac00:	cbnz	w0, 42ab8c <ferror@plt+0x27dbc>
  42ac04:	b	42ab90 <ferror@plt+0x27dc0>
  42ac08:	stp	x29, x30, [sp, #-64]!
  42ac0c:	mov	x29, sp
  42ac10:	stp	x19, x20, [sp, #16]
  42ac14:	mov	x19, x0
  42ac18:	mov	w20, w1
  42ac1c:	stp	x21, x22, [sp, #32]
  42ac20:	ldr	x21, [x0, #136]
  42ac24:	str	x23, [sp, #48]
  42ac28:	ldr	x22, [x21, #8]
  42ac2c:	cbz	x22, 42aca8 <ferror@plt+0x27ed8>
  42ac30:	mov	x0, x21
  42ac34:	bl	427bb0 <ferror@plt+0x24de0>
  42ac38:	cmp	w0, w20
  42ac3c:	b.le	42ac9c <ferror@plt+0x27ecc>
  42ac40:	ldr	w0, [x21, #48]
  42ac44:	cmp	w0, #0x1
  42ac48:	b.ne	42ac70 <ferror@plt+0x27ea0>  // b.any
  42ac4c:	ldr	x0, [x21, #16]
  42ac50:	mov	w21, #0x18                  	// #24
  42ac54:	smaddl	x21, w20, w21, x0
  42ac58:	mov	x0, x21
  42ac5c:	ldp	x19, x20, [sp, #16]
  42ac60:	ldp	x21, x22, [sp, #32]
  42ac64:	ldr	x23, [sp, #48]
  42ac68:	ldp	x29, x30, [sp], #64
  42ac6c:	ret
  42ac70:	tst	w0, #0xfffffffd
  42ac74:	b.ne	42ac84 <ferror@plt+0x27eb4>  // b.any
  42ac78:	ldr	x0, [x21, #16]
  42ac7c:	ldr	x21, [x0, w20, sxtw #3]
  42ac80:	b	42ac58 <ferror@plt+0x27e88>
  42ac84:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x235fc>
  42ac88:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x225fc>
  42ac8c:	add	x2, x2, #0x11
  42ac90:	add	x0, x0, #0xa90
  42ac94:	mov	w1, #0x9ad                 	// #2477
  42ac98:	bl	402de0 <ferror@plt+0x10>
  42ac9c:	sub	w20, w20, w0
  42aca0:	mov	x21, x22
  42aca4:	b	42ac28 <ferror@plt+0x27e58>
  42aca8:	ldr	w0, [x19, #500]
  42acac:	mov	w22, w20
  42acb0:	ldr	x23, [x19, #904]
  42acb4:	add	w0, w0, #0x1
  42acb8:	str	w0, [x19, #500]
  42acbc:	str	xzr, [x19, #904]
  42acc0:	mov	x0, x19
  42acc4:	bl	42aac4 <ferror@plt+0x27cf4>
  42acc8:	mov	x21, x0
  42accc:	mov	w0, w22
  42acd0:	sub	w22, w22, #0x1
  42acd4:	ldrb	w1, [x21, #4]
  42acd8:	cmp	w1, #0x16
  42acdc:	b.eq	42ace8 <ferror@plt+0x27f18>  // b.none
  42ace0:	cbnz	w0, 42acc0 <ferror@plt+0x27ef0>
  42ace4:	mov	w22, #0xffffffff            	// #-1
  42ace8:	mov	x0, x19
  42acec:	sub	w1, w20, w22
  42acf0:	bl	42e284 <ferror@plt+0x2b4b4>
  42acf4:	str	x23, [x19, #904]
  42acf8:	ldr	w0, [x19, #500]
  42acfc:	sub	w0, w0, #0x1
  42ad00:	str	w0, [x19, #500]
  42ad04:	b	42ac58 <ferror@plt+0x27e88>
  42ad08:	stp	x29, x30, [sp, #-32]!
  42ad0c:	mov	x29, sp
  42ad10:	ldr	x2, [x0, #56]
  42ad14:	stp	x19, x20, [sp, #16]
  42ad18:	mov	x19, x1
  42ad1c:	ldp	x3, x4, [x2, #16]
  42ad20:	sub	x4, x4, x3
  42ad24:	cmp	x4, x1
  42ad28:	b.cs	42ad48 <ferror@plt+0x27f78>  // b.hs, b.nlast
  42ad2c:	mov	x20, x0
  42ad30:	bl	4286b0 <ferror@plt+0x258e0>
  42ad34:	mov	x2, x0
  42ad38:	ldr	x3, [x0, #16]
  42ad3c:	ldr	x0, [x20, #56]
  42ad40:	str	x0, [x2]
  42ad44:	str	x2, [x20, #56]
  42ad48:	add	x19, x3, x19
  42ad4c:	str	x19, [x2, #16]
  42ad50:	mov	x0, x3
  42ad54:	ldp	x19, x20, [sp, #16]
  42ad58:	ldp	x29, x30, [sp], #32
  42ad5c:	ret
  42ad60:	stp	x29, x30, [sp, #-48]!
  42ad64:	mov	x29, sp
  42ad68:	stp	x19, x20, [sp, #16]
  42ad6c:	mov	x19, x1
  42ad70:	ldr	x1, [x0, #56]
  42ad74:	ldr	x0, [x0, #1088]
  42ad78:	ldr	x2, [x0, #104]
  42ad7c:	str	x21, [sp, #32]
  42ad80:	ldr	x21, [x1, #16]
  42ad84:	cbz	x2, 42adb4 <ferror@plt+0x27fe4>
  42ad88:	mov	x0, x19
  42ad8c:	blr	x2
  42ad90:	mov	x2, x19
  42ad94:	mov	x20, x0
  42ad98:	mov	x1, x21
  42ad9c:	bl	4026a0 <memcpy@plt>
  42ada0:	mov	x0, x20
  42ada4:	ldp	x19, x20, [sp, #16]
  42ada8:	ldr	x21, [sp, #32]
  42adac:	ldp	x29, x30, [sp], #48
  42adb0:	ret
  42adb4:	add	x19, x21, x19
  42adb8:	mov	x20, x21
  42adbc:	str	x19, [x1, #16]
  42adc0:	b	42ada0 <ferror@plt+0x27fd0>
  42adc4:	ldrb	w1, [x0, #4]
  42adc8:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x235fc>
  42adcc:	ldrb	w0, [x0, #4]
  42add0:	add	x2, x2, #0x2d8
  42add4:	lsl	x0, x0, #4
  42add8:	ldr	w0, [x2, x0]
  42addc:	cmp	w0, #0x3
  42ade0:	b.hi	42adfc <ferror@plt+0x2802c>  // b.pmore
  42ade4:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x235fc>
  42ade8:	add	x2, x2, #0x2d4
  42adec:	ldrb	w2, [x2, w0, uxtw]
  42adf0:	adr	x3, 42adfc <ferror@plt+0x2802c>
  42adf4:	add	x2, x3, w2, sxtb #2
  42adf8:	br	x2
  42adfc:	mov	w0, #0x6                   	// #6
  42ae00:	ret
  42ae04:	cmp	w1, #0x26
  42ae08:	mov	w0, #0x4                   	// #4
  42ae0c:	mov	w1, #0x6                   	// #6
  42ae10:	csel	w0, w0, w1, eq  // eq = none
  42ae14:	b	42ae00 <ferror@plt+0x28030>
  42ae18:	cmp	w1, #0x50
  42ae1c:	b.eq	42ae00 <ferror@plt+0x28030>  // b.none
  42ae20:	cmp	w1, #0x53
  42ae24:	b.eq	42ae40 <ferror@plt+0x28070>  // b.none
  42ae28:	cmp	w1, #0x51
  42ae2c:	cset	w0, ne  // ne = any
  42ae30:	add	w0, w0, #0x5
  42ae34:	b	42ae00 <ferror@plt+0x28030>
  42ae38:	mov	w0, #0x0                   	// #0
  42ae3c:	b	42ae00 <ferror@plt+0x28030>
  42ae40:	mov	w0, #0x1                   	// #1
  42ae44:	b	42ae00 <ferror@plt+0x28030>
  42ae48:	str	w1, [x0, #1408]
  42ae4c:	ret
  42ae50:	str	wzr, [x0, #1408]
  42ae54:	ret
  42ae58:	ldp	w2, w1, [x0]
  42ae5c:	ldr	x3, [x0, #16]
  42ae60:	add	w2, w2, w1
  42ae64:	ldr	w1, [x0, #8]
  42ae68:	add	w0, w1, w3
  42ae6c:	add	w0, w2, w0
  42ae70:	ret
  42ae74:	ldr	x3, [x0]
  42ae78:	ldr	x2, [x1]
  42ae7c:	cmp	x3, x2
  42ae80:	b.ne	42aea8 <ferror@plt+0x280d8>  // b.any
  42ae84:	ldr	w3, [x0, #8]
  42ae88:	ldr	w2, [x1, #8]
  42ae8c:	cmp	w3, w2
  42ae90:	b.ne	42aea8 <ferror@plt+0x280d8>  // b.any
  42ae94:	ldr	x2, [x0, #16]
  42ae98:	ldr	x0, [x1, #16]
  42ae9c:	cmp	x2, x0
  42aea0:	cset	w0, eq  // eq = none
  42aea4:	ret
  42aea8:	mov	w0, #0x0                   	// #0
  42aeac:	b	42aea4 <ferror@plt+0x280d4>
  42aeb0:	ldr	x2, [x0]
  42aeb4:	ldr	x1, [x1]
  42aeb8:	add	x2, x2, x1
  42aebc:	str	x2, [x0]
  42aec0:	mov	w0, #0x1                   	// #1
  42aec4:	ret
  42aec8:	mov	x3, x0
  42aecc:	tbz	w1, #31, 42aee4 <ferror@plt+0x28114>
  42aed0:	and	w1, w1, #0x7fffffff
  42aed4:	mov	w0, #0x18                  	// #24
  42aed8:	umull	x1, w1, w0
  42aedc:	ldr	x0, [x3, #104]
  42aee0:	ldr	w1, [x0, x1]
  42aee4:	cmp	x3, #0x0
  42aee8:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  42aeec:	b.ls	42af74 <ferror@plt+0x281a4>  // b.plast
  42aef0:	ldr	w2, [x3, #16]
  42aef4:	mov	w4, #0x18                  	// #24
  42aef8:	ldr	x6, [x3]
  42aefc:	smull	x4, w2, w4
  42af00:	add	x0, x6, x4
  42af04:	ldr	w4, [x6, x4]
  42af08:	cmp	w1, w4
  42af0c:	b.cc	42af30 <ferror@plt+0x28160>  // b.lo, b.ul, b.last
  42af10:	ldr	w4, [x3, #12]
  42af14:	add	w5, w2, #0x1
  42af18:	cmp	w5, w4
  42af1c:	b.eq	42af2c <ferror@plt+0x2815c>  // b.none
  42af20:	ldr	w5, [x0, #24]
  42af24:	cmp	w1, w5
  42af28:	b.cs	42af38 <ferror@plt+0x28168>  // b.hs, b.nlast
  42af2c:	ret
  42af30:	mov	w4, w2
  42af34:	mov	w2, #0x0                   	// #0
  42af38:	mov	w0, #0x18                  	// #24
  42af3c:	sub	w5, w4, w2
  42af40:	cmp	w5, #0x1
  42af44:	b.ls	42af68 <ferror@plt+0x28198>  // b.plast
  42af48:	add	w5, w2, w4
  42af4c:	lsr	w5, w5, #1
  42af50:	umull	x7, w5, w0
  42af54:	ldr	w7, [x6, x7]
  42af58:	cmp	w1, w7
  42af5c:	csel	w2, w2, w5, cc  // cc = lo, ul, last
  42af60:	csel	w4, w5, w4, cc  // cc = lo, ul, last
  42af64:	b	42af3c <ferror@plt+0x2816c>
  42af68:	smaddl	x0, w2, w0, x6
  42af6c:	str	w2, [x3, #16]
  42af70:	b	42af2c <ferror@plt+0x2815c>
  42af74:	mov	x0, #0x0                   	// #0
  42af78:	b	42af2c <ferror@plt+0x2815c>
  42af7c:	stp	x29, x30, [sp, #-80]!
  42af80:	mov	x29, sp
  42af84:	stp	x19, x20, [sp, #16]
  42af88:	mov	x19, x0
  42af8c:	mov	w0, #0x6fffffff            	// #1879048191
  42af90:	stp	x21, x22, [sp, #32]
  42af94:	cmp	w1, w0
  42af98:	mov	w21, w1
  42af9c:	stp	x23, x24, [sp, #48]
  42afa0:	stp	x25, x26, [sp, #64]
  42afa4:	b.ls	42b070 <ferror@plt+0x282a0>  // b.plast
  42afa8:	ldp	w0, w20, [x19, #32]
  42afac:	add	x25, x19, #0x24
  42afb0:	cmp	w0, w20
  42afb4:	b.ne	42b03c <ferror@plt+0x2826c>  // b.any
  42afb8:	add	x26, x19, #0x20
  42afbc:	cmp	w0, #0x0
  42afc0:	mov	w1, #0x80                  	// #128
  42afc4:	csel	w0, w0, w1, ne  // ne = any
  42afc8:	mov	w1, #0x6fffffff            	// #1879048191
  42afcc:	cmp	w21, w1
  42afd0:	lsl	w0, w0, #1
  42afd4:	b.ls	42b088 <ferror@plt+0x282b8>  // b.plast
  42afd8:	ldr	x24, [x19, #24]
  42afdc:	mov	x22, #0x20                  	// #32
  42afe0:	mul	x0, x0, x22
  42afe4:	ldr	x1, [x19, #80]
  42afe8:	blr	x1
  42afec:	udiv	x23, x0, x22
  42aff0:	mov	x0, x24
  42aff4:	ldr	x2, [x19, #72]
  42aff8:	and	x1, x23, #0xffffffff
  42affc:	mul	x1, x1, x22
  42b000:	blr	x2
  42b004:	mov	x24, x0
  42b008:	sub	w2, w23, w20
  42b00c:	mov	w0, w20
  42b010:	mov	w1, #0x0                   	// #0
  42b014:	mul	x2, x2, x22
  42b018:	madd	x0, x0, x22, x24
  42b01c:	bl	402930 <memset@plt>
  42b020:	mov	w0, #0x6fffffff            	// #1879048191
  42b024:	cmp	w21, w0
  42b028:	b.ls	42b094 <ferror@plt+0x282c4>  // b.plast
  42b02c:	str	x24, [x19, #24]
  42b030:	str	w23, [x26]
  42b034:	cmp	w21, w0
  42b038:	b.ls	42b09c <ferror@plt+0x282cc>  // b.plast
  42b03c:	ubfiz	x0, x20, #5, #32
  42b040:	ldr	x20, [x19, #24]
  42b044:	add	x0, x20, x0
  42b048:	ldr	w1, [x25]
  42b04c:	ldp	x19, x20, [sp, #16]
  42b050:	add	w1, w1, #0x1
  42b054:	ldp	x23, x24, [sp, #48]
  42b058:	str	w1, [x25]
  42b05c:	ldp	x25, x26, [sp, #64]
  42b060:	str	w21, [x0]
  42b064:	ldp	x21, x22, [sp, #32]
  42b068:	ldp	x29, x30, [sp], #80
  42b06c:	ret
  42b070:	ldp	w0, w20, [x19, #8]
  42b074:	add	x25, x19, #0xc
  42b078:	cmp	w0, w20
  42b07c:	b.ne	42b09c <ferror@plt+0x282cc>  // b.any
  42b080:	add	x26, x19, #0x8
  42b084:	b	42afbc <ferror@plt+0x281ec>
  42b088:	mov	x22, #0x18                  	// #24
  42b08c:	ldr	x24, [x19]
  42b090:	b	42afe0 <ferror@plt+0x28210>
  42b094:	str	x24, [x19]
  42b098:	b	42b030 <ferror@plt+0x28260>
  42b09c:	ldr	x0, [x19]
  42b0a0:	mov	w1, #0x18                  	// #24
  42b0a4:	umaddl	x0, w20, w1, x0
  42b0a8:	b	42b048 <ferror@plt+0x28278>
  42b0ac:	ldr	x0, [x0, #88]
  42b0b0:	cbz	x0, 42b0b8 <ferror@plt+0x282e8>
  42b0b4:	b	443d3c <ferror@plt+0x40f6c>
  42b0b8:	ret
  42b0bc:	stp	x29, x30, [sp, #-48]!
  42b0c0:	mov	x3, #0x0                   	// #0
  42b0c4:	adrp	x2, 42a000 <ferror@plt+0x27230>
  42b0c8:	mov	x29, sp
  42b0cc:	stp	x19, x20, [sp, #16]
  42b0d0:	mov	x19, x0
  42b0d4:	add	x2, x2, #0xe74
  42b0d8:	adrp	x1, 42a000 <ferror@plt+0x27230>
  42b0dc:	mov	x0, #0x64                  	// #100
  42b0e0:	add	x1, x1, #0xe58
  42b0e4:	mov	w20, #0x0                   	// #0
  42b0e8:	str	x21, [sp, #32]
  42b0ec:	bl	443d14 <ferror@plt+0x40f44>
  42b0f0:	mov	w21, #0x18                  	// #24
  42b0f4:	str	x0, [x19, #88]
  42b0f8:	ldr	w0, [x19, #96]
  42b0fc:	cmp	w0, w20
  42b100:	b.ls	42b120 <ferror@plt+0x28350>  // b.plast
  42b104:	ldr	x1, [x19, #104]
  42b108:	mov	w2, #0x1                   	// #1
  42b10c:	ldr	x0, [x19, #88]
  42b110:	umaddl	x1, w20, w21, x1
  42b114:	add	w20, w20, #0x1
  42b118:	bl	444174 <ferror@plt+0x413a4>
  42b11c:	b	42b0f8 <ferror@plt+0x28328>
  42b120:	ldp	x19, x20, [sp, #16]
  42b124:	ldr	x21, [sp, #32]
  42b128:	ldp	x29, x30, [sp], #48
  42b12c:	ret
  42b130:	ldr	x0, [x0, #104]
  42b134:	and	w1, w1, #0x7fffffff
  42b138:	mov	w2, #0x18                  	// #24
  42b13c:	umaddl	x1, w1, w2, x0
  42b140:	ldr	x0, [x1, #16]
  42b144:	ret
  42b148:	and	w1, w1, #0x7fffffff
  42b14c:	mov	w2, #0x18                  	// #24
  42b150:	ldr	x0, [x0, #104]
  42b154:	umull	x1, w1, w2
  42b158:	ldr	w0, [x0, x1]
  42b15c:	ret
  42b160:	stp	x29, x30, [sp, #-32]!
  42b164:	mov	x2, #0x88                  	// #136
  42b168:	mov	x29, sp
  42b16c:	stp	x19, x20, [sp, #16]
  42b170:	mov	x19, x0
  42b174:	mov	w20, w1
  42b178:	mov	w1, #0x0                   	// #0
  42b17c:	bl	402930 <memset@plt>
  42b180:	adrp	x0, 445000 <_obstack_memory_used@@Base+0x5fc>
  42b184:	add	x0, x0, #0x2f0
  42b188:	str	x0, [x19, #72]
  42b18c:	mov	x0, #0x100000001           	// #4294967297
  42b190:	str	x0, [x19, #56]
  42b194:	mov	x3, #0x0                   	// #0
  42b198:	adrp	x2, 42a000 <ferror@plt+0x27230>
  42b19c:	adrp	x1, 42a000 <ferror@plt+0x27230>
  42b1a0:	add	x2, x2, #0xe74
  42b1a4:	add	x1, x1, #0xe58
  42b1a8:	mov	x0, #0x64                  	// #100
  42b1ac:	bl	443d14 <ferror@plt+0x40f44>
  42b1b0:	str	x0, [x19, #88]
  42b1b4:	str	w20, [x19, #112]
  42b1b8:	ldp	x19, x20, [sp, #16]
  42b1bc:	ldp	x29, x30, [sp], #32
  42b1c0:	ret
  42b1c4:	ldr	w1, [x1, #20]
  42b1c8:	b	42aec8 <ferror@plt+0x280f8>
  42b1cc:	stp	x29, x30, [sp, #-48]!
  42b1d0:	mov	x29, sp
  42b1d4:	stp	x19, x20, [sp, #16]
  42b1d8:	mov	x20, x0
  42b1dc:	stp	x21, x22, [sp, #32]
  42b1e0:	adrp	x21, 468000 <_obstack_memory_used@@Base+0x235fc>
  42b1e4:	bl	42d510 <ferror@plt+0x2a740>
  42b1e8:	add	x21, x21, #0x87f
  42b1ec:	mov	x19, x0
  42b1f0:	adrp	x22, 495000 <_obstack_memory_used@@Base+0x505fc>
  42b1f4:	ldr	w0, [x19, #20]
  42b1f8:	cbz	w0, 42b220 <ferror@plt+0x28450>
  42b1fc:	ldr	x0, [x22, #1440]
  42b200:	mov	x1, x21
  42b204:	ldr	x2, [x19, #8]
  42b208:	bl	402d90 <fprintf@plt>
  42b20c:	mov	x1, x19
  42b210:	mov	x0, x20
  42b214:	bl	42b1c4 <ferror@plt+0x283f4>
  42b218:	mov	x19, x0
  42b21c:	b	42b1f4 <ferror@plt+0x28424>
  42b220:	ldp	x19, x20, [sp, #16]
  42b224:	ldp	x21, x22, [sp, #32]
  42b228:	ldp	x29, x30, [sp], #48
  42b22c:	ret
  42b230:	stp	x29, x30, [sp, #-80]!
  42b234:	mov	x29, sp
  42b238:	stp	x19, x20, [sp, #16]
  42b23c:	mov	x19, x0
  42b240:	stp	x21, x22, [sp, #32]
  42b244:	mov	w22, w4
  42b248:	ldr	w21, [x0, #56]
  42b24c:	stp	x23, x24, [sp, #48]
  42b250:	mov	w0, #0x5fffffff            	// #1610612735
  42b254:	mov	w24, w1
  42b258:	str	x25, [sp, #64]
  42b25c:	mov	w23, w2
  42b260:	cmp	w21, w0
  42b264:	mov	x25, x3
  42b268:	b.hi	42b2d0 <ferror@plt+0x28500>  // b.pmore
  42b26c:	ldr	w1, [x19, #120]
  42b270:	mov	w0, #0x1                   	// #1
  42b274:	lsl	w0, w0, w1
  42b278:	add	w21, w0, w21
  42b27c:	cbz	w1, 42b288 <ferror@plt+0x284b8>
  42b280:	neg	w0, w0
  42b284:	and	w21, w21, w0
  42b288:	cmp	w24, #0x1
  42b28c:	b.ne	42b2d8 <ferror@plt+0x28508>  // b.any
  42b290:	mov	x0, x19
  42b294:	bl	42d510 <ferror@plt+0x2a740>
  42b298:	ldr	w0, [x0, #20]
  42b29c:	cbnz	w0, 42b2d8 <ferror@plt+0x28508>
  42b2a0:	cbnz	x25, 42b2d8 <ferror@plt+0x28508>
  42b2a4:	ldr	w0, [x19, #48]
  42b2a8:	mov	x20, #0x0                   	// #0
  42b2ac:	sub	w0, w0, #0x1
  42b2b0:	str	w0, [x19, #48]
  42b2b4:	mov	x0, x20
  42b2b8:	ldp	x19, x20, [sp, #16]
  42b2bc:	ldp	x21, x22, [sp, #32]
  42b2c0:	ldp	x23, x24, [sp, #48]
  42b2c4:	ldr	x25, [sp, #64]
  42b2c8:	ldp	x29, x30, [sp], #80
  42b2cc:	ret
  42b2d0:	add	w21, w21, #0x1
  42b2d4:	b	42b288 <ferror@plt+0x284b8>
  42b2d8:	mov	w0, #0x6fffffff            	// #1879048191
  42b2dc:	cmp	w21, w0
  42b2e0:	csel	w21, w21, wzr, ls  // ls = plast
  42b2e4:	mov	x0, x19
  42b2e8:	mov	w1, w21
  42b2ec:	bl	42af7c <ferror@plt+0x281ac>
  42b2f0:	strb	w24, [x0, #4]
  42b2f4:	mov	x20, x0
  42b2f8:	cmp	w24, #0x3
  42b2fc:	cbz	x25, 42b318 <ferror@plt+0x28548>
  42b300:	ldrb	w0, [x25]
  42b304:	cbnz	w0, 42b318 <ferror@plt+0x28548>
  42b308:	b.ne	42b3e0 <ferror@plt+0x28610>  // b.any
  42b30c:	mov	w24, #0x2                   	// #2
  42b310:	mov	x0, #0x0                   	// #0
  42b314:	b	42b358 <ferror@plt+0x28588>
  42b318:	b.eq	42b30c <ferror@plt+0x2853c>  // b.none
  42b31c:	cmp	w24, #0x1
  42b320:	b.ne	42b310 <ferror@plt+0x28540>  // b.any
  42b324:	sub	x1, x20, #0x18
  42b328:	mov	x0, x19
  42b32c:	bl	42b1c4 <ferror@plt+0x283f4>
  42b330:	cbnz	x25, 42b358 <ferror@plt+0x28588>
  42b334:	ldr	w4, [x0]
  42b338:	ldr	w22, [x0, #24]
  42b33c:	ldrb	w23, [x0, #5]
  42b340:	sub	w22, w22, w4
  42b344:	ldrb	w4, [x0, #6]
  42b348:	ldr	x25, [x0, #8]
  42b34c:	lsr	w22, w22, w4
  42b350:	ldr	w4, [x0, #16]
  42b354:	add	w22, w22, w4
  42b358:	strb	w23, [x20, #5]
  42b35c:	str	w22, [x20, #16]
  42b360:	str	x25, [x20, #8]
  42b364:	ldr	w2, [x19, #12]
  42b368:	sub	w2, w2, #0x1
  42b36c:	str	w2, [x19, #16]
  42b370:	strh	wzr, [x20, #6]
  42b374:	stp	w21, w21, [x19, #56]
  42b378:	str	wzr, [x19, #64]
  42b37c:	cbnz	w24, 42b408 <ferror@plt+0x28638>
  42b380:	ldr	w21, [x19, #48]
  42b384:	cbz	w21, 42b3ec <ferror@plt+0x2861c>
  42b388:	ldr	w0, [x20]
  42b38c:	mov	w1, #0xffffffff            	// #-1
  42b390:	ldur	w2, [x20, #-24]
  42b394:	ldurb	w3, [x20, #-18]
  42b398:	sub	w0, w0, #0x1
  42b39c:	sub	w0, w0, w2
  42b3a0:	lsl	w1, w1, w3
  42b3a4:	and	w0, w0, w1
  42b3a8:	add	w0, w0, w2
  42b3ac:	str	w0, [x20, #20]
  42b3b0:	add	w21, w21, #0x1
  42b3b4:	ldrb	w0, [x19, #52]
  42b3b8:	str	w21, [x19, #48]
  42b3bc:	cbz	w0, 42b2b4 <ferror@plt+0x284e4>
  42b3c0:	adrp	x19, 495000 <_obstack_memory_used@@Base+0x505fc>
  42b3c4:	ldr	x0, [x19, #1440]
  42b3c8:	subs	w21, w21, #0x1
  42b3cc:	b.eq	42b3f4 <ferror@plt+0x28624>  // b.none
  42b3d0:	mov	x1, x0
  42b3d4:	mov	w0, #0x2e                  	// #46
  42b3d8:	bl	402810 <putc_unlocked@plt>
  42b3dc:	b	42b3c4 <ferror@plt+0x285f4>
  42b3e0:	adrp	x25, 468000 <_obstack_memory_used@@Base+0x235fc>
  42b3e4:	add	x25, x25, #0x8ab
  42b3e8:	b	42b31c <ferror@plt+0x2854c>
  42b3ec:	mov	w0, #0x0                   	// #0
  42b3f0:	b	42b3ac <ferror@plt+0x285dc>
  42b3f4:	ldr	x2, [x20, #8]
  42b3f8:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  42b3fc:	add	x1, x1, #0xca7
  42b400:	bl	402d90 <fprintf@plt>
  42b404:	b	42b2b4 <ferror@plt+0x284e4>
  42b408:	cmp	w24, #0x2
  42b40c:	b.ne	42b41c <ferror@plt+0x2864c>  // b.any
  42b410:	ldur	w0, [x20, #-4]
  42b414:	str	w0, [x20, #20]
  42b418:	b	42b2b4 <ferror@plt+0x284e4>
  42b41c:	cmp	w24, #0x1
  42b420:	b.ne	42b2b4 <ferror@plt+0x284e4>  // b.any
  42b424:	ldr	w1, [x19, #48]
  42b428:	sub	w1, w1, #0x1
  42b42c:	str	w1, [x19, #48]
  42b430:	ldr	w0, [x0, #20]
  42b434:	b	42b414 <ferror@plt+0x28644>
  42b438:	ldr	x0, [x0, #24]
  42b43c:	cmp	x0, #0x0
  42b440:	cset	w0, ne  // ne = any
  42b444:	ret
  42b448:	stp	x29, x30, [sp, #-64]!
  42b44c:	mov	x29, sp
  42b450:	stp	x19, x20, [sp, #16]
  42b454:	mov	w20, w3
  42b458:	stp	x21, x22, [sp, #32]
  42b45c:	mov	x21, x0
  42b460:	mov	w22, w2
  42b464:	str	x23, [sp, #48]
  42b468:	mov	x23, x1
  42b46c:	bl	4189a4 <ferror@plt+0x15bd4>
  42b470:	sub	w1, w0, w20
  42b474:	mov	w0, #0x6fffffff            	// #1879048191
  42b478:	cmp	w1, w0
  42b47c:	b.ls	42b4e0 <ferror@plt+0x28710>  // b.plast
  42b480:	mov	x0, x21
  42b484:	bl	42af7c <ferror@plt+0x281ac>
  42b488:	mov	x19, x0
  42b48c:	mov	x0, #0x0                   	// #0
  42b490:	ldr	x2, [x21, #72]
  42b494:	str	w20, [x19, #4]
  42b498:	ubfiz	x20, x20, #3, #31
  42b49c:	str	x23, [x19, #8]
  42b4a0:	mov	x1, x20
  42b4a4:	blr	x2
  42b4a8:	str	x0, [x19, #16]
  42b4ac:	str	w22, [x19, #24]
  42b4b0:	mov	x2, x20
  42b4b4:	mov	w1, #0x0                   	// #0
  42b4b8:	bl	402930 <memset@plt>
  42b4bc:	ldr	w0, [x21, #36]
  42b4c0:	sub	w0, w0, #0x1
  42b4c4:	str	w0, [x21, #40]
  42b4c8:	mov	x0, x19
  42b4cc:	ldp	x19, x20, [sp, #16]
  42b4d0:	ldp	x21, x22, [sp, #32]
  42b4d4:	ldr	x23, [sp, #48]
  42b4d8:	ldp	x29, x30, [sp], #64
  42b4dc:	ret
  42b4e0:	mov	x19, #0x0                   	// #0
  42b4e4:	b	42b4c8 <ferror@plt+0x286f8>
  42b4e8:	ldr	x5, [x0, #16]
  42b4ec:	lsl	w4, w1, #1
  42b4f0:	ubfiz	x6, x1, #3, #31
  42b4f4:	add	w4, w4, #0x1
  42b4f8:	str	w2, [x5, x6]
  42b4fc:	str	w3, [x5, x4, lsl #2]
  42b500:	ldr	w0, [x0]
  42b504:	add	w0, w1, w0
  42b508:	ret
  42b50c:	stp	x29, x30, [sp, #-96]!
  42b510:	mov	x29, sp
  42b514:	stp	x19, x20, [sp, #16]
  42b518:	mov	x20, x0
  42b51c:	stp	x21, x22, [sp, #32]
  42b520:	mov	w22, w1
  42b524:	stp	x23, x24, [sp, #48]
  42b528:	stp	x25, x26, [sp, #64]
  42b52c:	mov	w25, w2
  42b530:	str	x27, [sp, #80]
  42b534:	bl	42d510 <ferror@plt+0x2a740>
  42b538:	mov	x19, x0
  42b53c:	ldrb	w0, [x0, #6]
  42b540:	ldp	w1, w4, [x20, #56]
  42b544:	ldr	w5, [x19]
  42b548:	ldr	w24, [x19, #16]
  42b54c:	sub	w5, w4, w5
  42b550:	ldrb	w27, [x19, #7]
  42b554:	lsr	w5, w5, w0
  42b558:	add	w5, w5, w24
  42b55c:	subs	w3, w22, w5
  42b560:	b.mi	42b61c <ferror@plt+0x2884c>  // b.first
  42b564:	cmp	w3, #0xa
  42b568:	b.le	42b578 <ferror@plt+0x287a8>
  42b56c:	mul	w2, w3, w0
  42b570:	cmp	w2, #0x3e8
  42b574:	b.gt	42b61c <ferror@plt+0x2884c>
  42b578:	sub	w6, w0, w27
  42b57c:	mov	w2, #0x1                   	// #1
  42b580:	lsl	w2, w2, w6
  42b584:	cmp	w2, w25
  42b588:	b.ls	42b61c <ferror@plt+0x2884c>  // b.plast
  42b58c:	cmp	w25, #0x50
  42b590:	ccmp	w6, #0x9, #0x4, ls  // ls = plast
  42b594:	b.gt	42b61c <ferror@plt+0x2884c>
  42b598:	mov	w2, #0x50000000            	// #1342177280
  42b59c:	cmp	w1, w2
  42b5a0:	b.ls	42b5e8 <ferror@plt+0x28818>  // b.plast
  42b5a4:	cbnz	w27, 42b61c <ferror@plt+0x2884c>
  42b5a8:	mov	w2, #0x60000000            	// #1610612736
  42b5ac:	ldr	w6, [x20, #64]
  42b5b0:	cmp	w1, w2
  42b5b4:	b.ls	42b5e8 <ferror@plt+0x28818>  // b.plast
  42b5b8:	mov	w2, #0x6fffffff            	// #1879048191
  42b5bc:	cmp	w1, w2
  42b5c0:	cbnz	w6, 42b6f8 <ferror@plt+0x28928>
  42b5c4:	b.ls	42b5e8 <ferror@plt+0x28818>  // b.plast
  42b5c8:	mov	w0, #0x0                   	// #0
  42b5cc:	ldp	x19, x20, [sp, #16]
  42b5d0:	ldp	x21, x22, [sp, #32]
  42b5d4:	ldp	x23, x24, [sp, #48]
  42b5d8:	ldp	x25, x26, [sp, #64]
  42b5dc:	ldr	x27, [sp, #80]
  42b5e0:	ldp	x29, x30, [sp], #96
  42b5e4:	ret
  42b5e8:	ldr	w26, [x20, #64]
  42b5ec:	lsl	w3, w3, w0
  42b5f0:	add	w0, w3, w4
  42b5f4:	mov	w1, #0x6fffffff            	// #1879048191
  42b5f8:	cmp	w0, w1
  42b5fc:	b.hi	42b5c8 <ferror@plt+0x287f8>  // b.pmore
  42b600:	ldr	w1, [x20, #56]
  42b604:	str	w0, [x20, #60]
  42b608:	cmp	w1, w0
  42b60c:	b.cs	42b614 <ferror@plt+0x28844>  // b.hs, b.nlast
  42b610:	str	w0, [x20, #56]
  42b614:	str	w26, [x20, #64]
  42b618:	b	42b5cc <ferror@plt+0x287fc>
  42b61c:	cmp	w25, #0x1, lsl #12
  42b620:	mov	w0, #0x60000000            	// #1610612736
  42b624:	ccmp	w1, w0, #0x2, ls  // ls = plast
  42b628:	b.ls	42b6bc <ferror@plt+0x288ec>  // b.plast
  42b62c:	mov	w0, #0x6fffffff            	// #1879048191
  42b630:	cmp	w1, w0
  42b634:	b.hi	42b5c8 <ferror@plt+0x287f8>  // b.pmore
  42b638:	mov	w23, #0x0                   	// #0
  42b63c:	mov	w21, #0x0                   	// #0
  42b640:	mov	w26, #0x0                   	// #0
  42b644:	tbnz	w3, #31, 42b680 <ferror@plt+0x288b0>
  42b648:	cmp	w24, w5
  42b64c:	b.ne	42b680 <ferror@plt+0x288b0>  // b.any
  42b650:	mov	x0, x19
  42b654:	bl	42d528 <ferror@plt+0x2a758>
  42b658:	sub	w1, w21, w23
  42b65c:	lsr	w0, w0, w1
  42b660:	cbnz	w0, 42b680 <ferror@plt+0x288b0>
  42b664:	sub	w24, w22, w24
  42b668:	mov	w0, #0x20                  	// #32
  42b66c:	sub	w0, w0, w21
  42b670:	lsr	x24, x24, x0
  42b674:	cbnz	x24, 42b680 <ferror@plt+0x288b0>
  42b678:	cmp	w27, w23
  42b67c:	b.le	42b69c <ferror@plt+0x288cc>
  42b680:	ldrb	w2, [x19, #5]
  42b684:	mov	w4, w22
  42b688:	ldr	x3, [x19, #8]
  42b68c:	mov	x0, x20
  42b690:	mov	w1, #0x2                   	// #2
  42b694:	bl	42b230 <ferror@plt+0x28460>
  42b698:	mov	x19, x0
  42b69c:	ldr	w2, [x19, #16]
  42b6a0:	ldr	w0, [x19]
  42b6a4:	sub	w2, w22, w2
  42b6a8:	strb	w21, [x19, #6]
  42b6ac:	strb	w23, [x19, #7]
  42b6b0:	lsl	w2, w2, w21
  42b6b4:	add	w0, w2, w0
  42b6b8:	b	42b5f4 <ferror@plt+0x28824>
  42b6bc:	mov	w0, #0x50000000            	// #1342177280
  42b6c0:	cmp	w1, w0
  42b6c4:	b.hi	42b6e8 <ferror@plt+0x28918>  // b.pmore
  42b6c8:	ldr	w23, [x20, #120]
  42b6cc:	mov	w21, #0x7                   	// #7
  42b6d0:	mov	w0, #0x1                   	// #1
  42b6d4:	lsl	w26, w0, w21
  42b6d8:	cmp	w26, w25
  42b6dc:	b.hi	42b6f0 <ferror@plt+0x28920>  // b.pmore
  42b6e0:	add	w21, w21, #0x1
  42b6e4:	b	42b6d4 <ferror@plt+0x28904>
  42b6e8:	mov	w23, #0x0                   	// #0
  42b6ec:	b	42b6cc <ferror@plt+0x288fc>
  42b6f0:	add	w21, w21, w23
  42b6f4:	b	42b644 <ferror@plt+0x28874>
  42b6f8:	b.hi	42b5c8 <ferror@plt+0x287f8>  // b.pmore
  42b6fc:	mov	w23, #0x0                   	// #0
  42b700:	mov	w21, #0x0                   	// #0
  42b704:	mov	w26, #0x0                   	// #0
  42b708:	b	42b648 <ferror@plt+0x28878>
  42b70c:	stp	x29, x30, [sp, #-48]!
  42b710:	mov	x29, sp
  42b714:	stp	x19, x20, [sp, #16]
  42b718:	mov	x20, x0
  42b71c:	ldr	w19, [x0, #60]
  42b720:	str	x21, [sp, #32]
  42b724:	mov	w21, w1
  42b728:	ldr	w1, [x0, #64]
  42b72c:	cmp	w1, w21
  42b730:	b.hi	42b780 <ferror@plt+0x289b0>  // b.pmore
  42b734:	cmp	w21, #0x1, lsl #12
  42b738:	mov	w1, #0x60000000            	// #1610612736
  42b73c:	ccmp	w19, w1, #0x2, ls  // ls = plast
  42b740:	b.hi	42b7a4 <ferror@plt+0x289d4>  // b.pmore
  42b744:	bl	42d510 <ferror@plt+0x2a740>
  42b748:	ldr	w1, [x0]
  42b74c:	add	w2, w21, #0x32
  42b750:	sub	w19, w19, w1
  42b754:	ldrb	w1, [x0, #6]
  42b758:	lsr	w19, w19, w1
  42b75c:	ldr	w1, [x0, #16]
  42b760:	mov	x0, x20
  42b764:	add	w1, w19, w1
  42b768:	bl	42b50c <ferror@plt+0x2873c>
  42b76c:	mov	w19, w0
  42b770:	mov	x0, x20
  42b774:	bl	42d510 <ferror@plt+0x2a740>
  42b778:	ldrb	w0, [x0, #6]
  42b77c:	cbz	w0, 42b7a4 <ferror@plt+0x289d4>
  42b780:	mov	x0, x20
  42b784:	bl	42d510 <ferror@plt+0x2a740>
  42b788:	ldrb	w1, [x0, #7]
  42b78c:	ldr	w0, [x20, #56]
  42b790:	lsl	w21, w21, w1
  42b794:	add	w19, w19, w21
  42b798:	cmp	w0, w19
  42b79c:	b.hi	42b7a4 <ferror@plt+0x289d4>  // b.pmore
  42b7a0:	str	w19, [x20, #56]
  42b7a4:	mov	w0, w19
  42b7a8:	ldp	x19, x20, [sp, #16]
  42b7ac:	ldr	x21, [sp, #32]
  42b7b0:	ldp	x29, x30, [sp], #48
  42b7b4:	ret
  42b7b8:	stp	x29, x30, [sp, #-32]!
  42b7bc:	mov	x29, sp
  42b7c0:	stp	x19, x20, [sp, #16]
  42b7c4:	mov	x20, x0
  42b7c8:	ldr	w19, [x1, #16]
  42b7cc:	ldrb	w0, [x1, #6]
  42b7d0:	sub	w19, w2, w19
  42b7d4:	ldr	w2, [x1]
  42b7d8:	lsl	w19, w19, w0
  42b7dc:	add	w19, w19, w2
  42b7e0:	mov	w2, #0x60000000            	// #1610612736
  42b7e4:	cmp	w19, w2
  42b7e8:	b.hi	42b808 <ferror@plt+0x28a38>  // b.pmore
  42b7ec:	mov	w2, #0x1                   	// #1
  42b7f0:	lsl	w2, w2, w0
  42b7f4:	ldrb	w0, [x1, #7]
  42b7f8:	sub	w2, w2, #0x1
  42b7fc:	and	w3, w2, w3
  42b800:	lsl	w3, w3, w0
  42b804:	add	w19, w19, w3
  42b808:	mov	x0, x20
  42b80c:	bl	4189a4 <ferror@plt+0x15bd4>
  42b810:	cmp	w19, w0
  42b814:	b.cc	42b81c <ferror@plt+0x28a4c>  // b.lo, b.ul, b.last
  42b818:	sub	w19, w0, #0x1
  42b81c:	ldr	w0, [x20, #56]
  42b820:	cmp	w0, w19
  42b824:	b.cs	42b82c <ferror@plt+0x28a5c>  // b.hs, b.nlast
  42b828:	str	w19, [x20, #56]
  42b82c:	mov	w0, w19
  42b830:	ldp	x19, x20, [sp, #16]
  42b834:	ldp	x29, x30, [sp], #32
  42b838:	ret
  42b83c:	cbz	x0, 42b854 <ferror@plt+0x28a84>
  42b840:	ldr	w1, [x0]
  42b844:	mov	w0, #0x6fffffff            	// #1879048191
  42b848:	cmp	w1, w0
  42b84c:	cset	w0, hi  // hi = pmore
  42b850:	ret
  42b854:	mov	w0, #0x0                   	// #0
  42b858:	b	42b850 <ferror@plt+0x28a80>
  42b85c:	mov	x3, x1
  42b860:	mov	w1, w2
  42b864:	tbz	w2, #31, 42b890 <ferror@plt+0x28ac0>
  42b868:	stp	x29, x30, [sp, #-16]!
  42b86c:	mov	x29, sp
  42b870:	bl	42b148 <ferror@plt+0x28378>
  42b874:	ldr	w2, [x3]
  42b878:	ldp	x29, x30, [sp], #16
  42b87c:	sub	w2, w0, w2
  42b880:	ldr	x0, [x3, #16]
  42b884:	ubfiz	x2, x2, #3, #31
  42b888:	ldr	w0, [x0, x2]
  42b88c:	ret
  42b890:	ldr	w2, [x3]
  42b894:	ldr	x0, [x3, #16]
  42b898:	sub	w2, w1, w2
  42b89c:	ubfiz	x2, x2, #3, #31
  42b8a0:	ldr	w0, [x0, x2]
  42b8a4:	ret
  42b8a8:	ldr	x0, [x0, #8]
  42b8ac:	ldr	x0, [x0]
  42b8b0:	ret
  42b8b4:	tbz	w1, #31, 42b8cc <ferror@plt+0x28afc>
  42b8b8:	and	w1, w1, #0x7fffffff
  42b8bc:	mov	w2, #0x18                  	// #24
  42b8c0:	ldr	x0, [x0, #104]
  42b8c4:	umull	x1, w1, w2
  42b8c8:	ldr	w1, [x0, x1]
  42b8cc:	mov	w0, #0x90000000            	// #-1879048192
  42b8d0:	add	w1, w1, w0
  42b8d4:	mov	w0, #0xfffffff             	// #268435455
  42b8d8:	cmp	w1, w0
  42b8dc:	cset	w0, ls  // ls = plast
  42b8e0:	ret
  42b8e4:	stp	x29, x30, [sp, #-16]!
  42b8e8:	mov	x4, x0
  42b8ec:	mov	w3, w1
  42b8f0:	mov	x29, sp
  42b8f4:	tbz	w1, #31, 42b90c <ferror@plt+0x28b3c>
  42b8f8:	and	w3, w1, #0x7fffffff
  42b8fc:	mov	w1, #0x18                  	// #24
  42b900:	ldr	x0, [x0, #104]
  42b904:	umull	x3, w3, w1
  42b908:	ldr	w3, [x0, x3]
  42b90c:	mov	w1, w3
  42b910:	mov	x0, x4
  42b914:	bl	42b8b4 <ferror@plt+0x28ae4>
  42b918:	tst	w0, #0xff
  42b91c:	b.eq	42b9c0 <ferror@plt+0x28bf0>  // b.none
  42b920:	tbz	w3, #31, 42b998 <ferror@plt+0x28bc8>
  42b924:	and	w3, w3, #0x7fffffff
  42b928:	mov	w1, #0x18                  	// #24
  42b92c:	ldr	x0, [x4, #104]
  42b930:	umull	x3, w3, w1
  42b934:	ldr	w3, [x0, x3]
  42b938:	ldp	w1, w2, [x4, #36]
  42b93c:	ldr	x5, [x4, #24]
  42b940:	sbfiz	x6, x2, #5, #32
  42b944:	add	x0, x5, x6
  42b948:	ldr	w6, [x5, x6]
  42b94c:	cmp	w6, w3
  42b950:	b.hi	42b96c <ferror@plt+0x28b9c>  // b.pmore
  42b954:	cbz	w2, 42b9b8 <ferror@plt+0x28be8>
  42b958:	ldur	w1, [x0, #-32]
  42b95c:	cmp	w1, w3
  42b960:	b.hi	42b9b8 <ferror@plt+0x28be8>  // b.pmore
  42b964:	sub	w1, w2, #0x1
  42b968:	mov	w2, #0x0                   	// #0
  42b96c:	cmp	w1, w2
  42b970:	b.ls	42b9ac <ferror@plt+0x28bdc>  // b.plast
  42b974:	add	w0, w1, w2
  42b978:	lsr	w6, w0, #1
  42b97c:	lsr	w0, w0, #1
  42b980:	lsl	x0, x0, #5
  42b984:	ldr	w0, [x5, x0]
  42b988:	cmp	w0, w3
  42b98c:	b.ls	42b9a4 <ferror@plt+0x28bd4>  // b.plast
  42b990:	add	w2, w6, #0x1
  42b994:	b	42b96c <ferror@plt+0x28b9c>
  42b998:	cbnz	x4, 42b938 <ferror@plt+0x28b68>
  42b99c:	mov	x0, #0x0                   	// #0
  42b9a0:	b	42b9b8 <ferror@plt+0x28be8>
  42b9a4:	mov	w1, w6
  42b9a8:	b	42b96c <ferror@plt+0x28b9c>
  42b9ac:	str	w1, [x4, #40]
  42b9b0:	sbfiz	x1, x1, #5, #32
  42b9b4:	add	x0, x5, x1
  42b9b8:	ldp	x29, x30, [sp], #16
  42b9bc:	ret
  42b9c0:	ldp	x29, x30, [sp], #16
  42b9c4:	mov	w1, w3
  42b9c8:	mov	x0, x4
  42b9cc:	b	42aec8 <ferror@plt+0x280f8>
  42b9d0:	stp	x29, x30, [sp, #-96]!
  42b9d4:	mov	x29, sp
  42b9d8:	stp	x19, x20, [sp, #16]
  42b9dc:	mov	x19, x0
  42b9e0:	mov	w20, w1
  42b9e4:	stp	x21, x22, [sp, #32]
  42b9e8:	mov	x22, x2
  42b9ec:	str	x23, [sp, #48]
  42b9f0:	mov	x23, x3
  42b9f4:	tbz	w1, #31, 42ba0c <ferror@plt+0x28c3c>
  42b9f8:	and	w20, w1, #0x7fffffff
  42b9fc:	mov	w1, #0x18                  	// #24
  42ba00:	ldr	x0, [x0, #104]
  42ba04:	umull	x20, w20, w1
  42ba08:	ldr	w20, [x0, x20]
  42ba0c:	cmp	w20, #0x0
  42ba10:	ccmp	x23, #0x0, #0x0, eq  // eq = none
  42ba14:	b.eq	42bbb8 <ferror@plt+0x28de8>  // b.none
  42ba18:	lsr	x21, x22, #32
  42ba1c:	mov	w0, w21
  42ba20:	cbnz	x23, 42bac4 <ferror@plt+0x28cf4>
  42ba24:	cmp	w20, w22
  42ba28:	b.ne	42bab8 <ferror@plt+0x28ce8>  // b.any
  42ba2c:	cmp	w21, w20
  42ba30:	b.cc	42bab8 <ferror@plt+0x28ce8>  // b.lo, b.ul, b.last
  42ba34:	cmp	w20, #0x1
  42ba38:	b.ls	42ba9c <ferror@plt+0x28ccc>  // b.plast
  42ba3c:	mov	w0, #0x4fffffff            	// #1342177279
  42ba40:	cmp	w20, w0
  42ba44:	b.hi	42bbc0 <ferror@plt+0x28df0>  // b.pmore
  42ba48:	mov	x0, x19
  42ba4c:	bl	4189a4 <ferror@plt+0x15bd4>
  42ba50:	cmp	w20, w0
  42ba54:	b.cs	42bbc0 <ferror@plt+0x28df0>  // b.hs, b.nlast
  42ba58:	cmp	w21, w0
  42ba5c:	b.cs	42bbc0 <ferror@plt+0x28df0>  // b.hs, b.nlast
  42ba60:	mov	w1, w20
  42ba64:	mov	x0, x19
  42ba68:	bl	42b8e4 <ferror@plt+0x28b14>
  42ba6c:	ldrb	w2, [x0, #7]
  42ba70:	sub	w0, w21, w20
  42ba74:	mov	w1, #0x1                   	// #1
  42ba78:	lsr	w0, w0, w2
  42ba7c:	lsl	w1, w1, w2
  42ba80:	cmp	w1, w0
  42ba84:	b.ls	42bbc0 <ferror@plt+0x28df0>  // b.plast
  42ba88:	ldr	w1, [x19, #124]
  42ba8c:	orr	w0, w20, w0
  42ba90:	add	w1, w1, #0x1
  42ba94:	str	w1, [x19, #124]
  42ba98:	b	42baa4 <ferror@plt+0x28cd4>
  42ba9c:	cmp	w21, w20
  42baa0:	b.ne	42bab8 <ferror@plt+0x28ce8>  // b.any
  42baa4:	ldp	x19, x20, [sp, #16]
  42baa8:	ldp	x21, x22, [sp, #32]
  42baac:	ldr	x23, [sp, #48]
  42bab0:	ldp	x29, x30, [sp], #96
  42bab4:	ret
  42bab8:	ldr	w0, [x19, #128]
  42babc:	add	w0, w0, #0x1
  42bac0:	str	w0, [x19, #128]
  42bac4:	ldr	x0, [x19, #88]
  42bac8:	add	x1, sp, #0x48
  42bacc:	mov	w2, #0x1                   	// #1
  42bad0:	stp	w20, w22, [sp, #72]
  42bad4:	str	w21, [sp, #80]
  42bad8:	str	x23, [sp, #88]
  42badc:	bl	444174 <ferror@plt+0x413a4>
  42bae0:	mov	x20, x0
  42bae4:	ldr	x0, [x0]
  42bae8:	cbnz	x0, 42bb94 <ferror@plt+0x28dc4>
  42baec:	ldp	w0, w1, [x19, #96]
  42baf0:	cmp	w0, w1
  42baf4:	b.cc	42bb5c <ferror@plt+0x28d8c>  // b.lo, b.ul, b.last
  42baf8:	ldr	x2, [x19, #72]
  42bafc:	cbnz	x2, 42bb08 <ferror@plt+0x28d38>
  42bb00:	adrp	x2, 445000 <_obstack_memory_used@@Base+0x5fc>
  42bb04:	add	x2, x2, #0x2f0
  42bb08:	cmp	w1, #0x0
  42bb0c:	lsl	w0, w1, #1
  42bb10:	mov	w1, #0x80                  	// #128
  42bb14:	csel	w0, w0, w1, ne  // ne = any
  42bb18:	mov	w1, #0x18                  	// #24
  42bb1c:	str	w0, [x19, #100]
  42bb20:	ldr	x21, [x19, #104]
  42bb24:	umull	x1, w0, w1
  42bb28:	mov	x0, x21
  42bb2c:	blr	x2
  42bb30:	sub	x1, x0, x21
  42bb34:	str	x1, [sp, #64]
  42bb38:	str	x0, [x19, #104]
  42bb3c:	ldr	w0, [x19, #100]
  42bb40:	cmp	w0, #0x80
  42bb44:	b.ls	42bb5c <ferror@plt+0x28d8c>  // b.plast
  42bb48:	ldr	x0, [x19, #88]
  42bb4c:	adrp	x1, 42a000 <ferror@plt+0x27230>
  42bb50:	add	x2, sp, #0x40
  42bb54:	add	x1, x1, #0xeb0
  42bb58:	bl	444310 <ferror@plt+0x41540>
  42bb5c:	ldr	w2, [x19, #96]
  42bb60:	mov	w0, #0x18                  	// #24
  42bb64:	umull	x1, w2, w0
  42bb68:	add	w2, w2, #0x1
  42bb6c:	ldr	x0, [x19, #104]
  42bb70:	add	x0, x0, x1
  42bb74:	str	x0, [x20]
  42bb78:	str	w2, [x19, #96]
  42bb7c:	ldr	x0, [x19, #104]
  42bb80:	ldp	x2, x3, [sp, #72]
  42bb84:	add	x0, x0, x1
  42bb88:	stp	x2, x3, [x0]
  42bb8c:	ldr	x1, [sp, #88]
  42bb90:	str	x1, [x0, #16]
  42bb94:	ldr	x0, [x20]
  42bb98:	ldr	x1, [x19, #104]
  42bb9c:	sub	x0, x0, x1
  42bba0:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  42bba4:	movk	x1, #0xaaab
  42bba8:	asr	x0, x0, #3
  42bbac:	mul	x0, x0, x1
  42bbb0:	orr	w0, w0, #0x80000000
  42bbb4:	b	42baa4 <ferror@plt+0x28cd4>
  42bbb8:	mov	w0, #0x0                   	// #0
  42bbbc:	b	42baa4 <ferror@plt+0x28cd4>
  42bbc0:	cmp	w21, w22
  42bbc4:	b.ne	42bab8 <ferror@plt+0x28ce8>  // b.any
  42bbc8:	mov	w0, w21
  42bbcc:	b	42baa4 <ferror@plt+0x28cd4>
  42bbd0:	stp	x29, x30, [sp, #-32]!
  42bbd4:	mov	x29, sp
  42bbd8:	stp	x19, x20, [sp, #16]
  42bbdc:	mov	x20, x0
  42bbe0:	mov	w19, w1
  42bbe4:	tbz	w1, #31, 42bc08 <ferror@plt+0x28e38>
  42bbe8:	and	w19, w1, #0x7fffffff
  42bbec:	mov	w0, #0x18                  	// #24
  42bbf0:	ldr	x1, [x20, #104]
  42bbf4:	umaddl	x19, w19, w0, x1
  42bbf8:	ldur	x0, [x19, #4]
  42bbfc:	ldp	x19, x20, [sp, #16]
  42bc00:	ldp	x29, x30, [sp], #32
  42bc04:	ret
  42bc08:	cmp	w1, #0x1
  42bc0c:	b.ls	42bc64 <ferror@plt+0x28e94>  // b.plast
  42bc10:	bl	4189a4 <ferror@plt+0x15bd4>
  42bc14:	cmp	w0, w19
  42bc18:	b.ls	42bc64 <ferror@plt+0x28e94>  // b.plast
  42bc1c:	mov	w0, #0x50000000            	// #1342177280
  42bc20:	cmp	w19, w0
  42bc24:	b.hi	42bc64 <ferror@plt+0x28e94>  // b.pmore
  42bc28:	mov	w1, w19
  42bc2c:	mov	x0, x20
  42bc30:	bl	42b8e4 <ferror@plt+0x28b14>
  42bc34:	ldrb	w3, [x0, #7]
  42bc38:	mov	w1, #0x1                   	// #1
  42bc3c:	mov	x0, #0x0                   	// #0
  42bc40:	lsl	w1, w1, w3
  42bc44:	sub	w1, w1, #0x1
  42bc48:	and	w2, w1, w19
  42bc4c:	bic	w19, w19, w1
  42bc50:	lsl	w2, w2, w3
  42bc54:	bfxil	x0, x19, #0, #32
  42bc58:	add	w19, w2, w19
  42bc5c:	bfi	x0, x19, #32, #32
  42bc60:	b	42bbfc <ferror@plt+0x28e2c>
  42bc64:	mov	x0, #0x0                   	// #0
  42bc68:	bfxil	x0, x19, #0, #32
  42bc6c:	b	42bc5c <ferror@plt+0x28e8c>
  42bc70:	tbnz	w1, #31, 42bca4 <ferror@plt+0x28ed4>
  42bc74:	mov	w8, w1
  42bc78:	stp	x29, x30, [sp, #-16]!
  42bc7c:	mov	x29, sp
  42bc80:	bl	42b8e4 <ferror@plt+0x28b14>
  42bc84:	cbz	x0, 42bcac <ferror@plt+0x28edc>
  42bc88:	ldrb	w1, [x0, #7]
  42bc8c:	mov	w0, #0xffffffff            	// #-1
  42bc90:	lsl	w0, w0, w1
  42bc94:	bics	wzr, w8, w0
  42bc98:	cset	w0, eq  // eq = none
  42bc9c:	ldp	x29, x30, [sp], #16
  42bca0:	ret
  42bca4:	mov	w0, #0x0                   	// #0
  42bca8:	ret
  42bcac:	mov	w0, #0x1                   	// #1
  42bcb0:	b	42bc9c <ferror@plt+0x28ecc>
  42bcb4:	stp	x29, x30, [sp, #-32]!
  42bcb8:	mov	x29, sp
  42bcbc:	stp	x19, x20, [sp, #16]
  42bcc0:	mov	x20, x0
  42bcc4:	mov	w19, w1
  42bcc8:	tbz	w1, #31, 42bce0 <ferror@plt+0x28f10>
  42bccc:	and	w19, w1, #0x7fffffff
  42bcd0:	mov	w1, #0x18                  	// #24
  42bcd4:	ldr	x0, [x0, #104]
  42bcd8:	umull	x19, w19, w1
  42bcdc:	ldr	w19, [x0, x19]
  42bce0:	mov	x0, x20
  42bce4:	bl	4189a4 <ferror@plt+0x15bd4>
  42bce8:	cmp	w0, w19
  42bcec:	b.ls	42bd14 <ferror@plt+0x28f44>  // b.plast
  42bcf0:	cmp	w19, #0x1
  42bcf4:	b.ls	42bd14 <ferror@plt+0x28f44>  // b.plast
  42bcf8:	mov	w1, w19
  42bcfc:	mov	x0, x20
  42bd00:	bl	42b8e4 <ferror@plt+0x28b14>
  42bd04:	ldrb	w1, [x0, #7]
  42bd08:	mov	w0, #0xffffffff            	// #-1
  42bd0c:	lsl	w0, w0, w1
  42bd10:	and	w19, w19, w0
  42bd14:	mov	w0, w19
  42bd18:	ldp	x19, x20, [sp, #16]
  42bd1c:	ldp	x29, x30, [sp], #32
  42bd20:	ret
  42bd24:	stp	x29, x30, [sp, #-16]!
  42bd28:	mov	x10, x0
  42bd2c:	mov	x9, x2
  42bd30:	mov	x29, sp
  42bd34:	tbz	w1, #31, 42bd4c <ferror@plt+0x28f7c>
  42bd38:	and	w1, w1, #0x7fffffff
  42bd3c:	mov	w0, #0x18                  	// #24
  42bd40:	umull	x1, w1, w0
  42bd44:	ldr	x0, [x10, #104]
  42bd48:	ldr	w1, [x0, x1]
  42bd4c:	mov	w8, w1
  42bd50:	mov	w1, w8
  42bd54:	mov	x0, x10
  42bd58:	bl	42b8e4 <ferror@plt+0x28b14>
  42bd5c:	mov	x2, x0
  42bd60:	bl	42b83c <ferror@plt+0x28a6c>
  42bd64:	tst	w0, #0xff
  42bd68:	b.eq	42bd74 <ferror@plt+0x28fa4>  // b.none
  42bd6c:	ldr	w8, [x2, #24]
  42bd70:	b	42bd50 <ferror@plt+0x28f80>
  42bd74:	cbz	x9, 42bd7c <ferror@plt+0x28fac>
  42bd78:	str	x2, [x9]
  42bd7c:	mov	w0, w8
  42bd80:	ldp	x29, x30, [sp], #16
  42bd84:	ret
  42bd88:	stp	x29, x30, [sp, #-32]!
  42bd8c:	mov	x29, sp
  42bd90:	str	xzr, [sp, #24]
  42bd94:	tbz	w1, #31, 42bdac <ferror@plt+0x28fdc>
  42bd98:	and	w1, w1, #0x7fffffff
  42bd9c:	mov	w2, #0x18                  	// #24
  42bda0:	umull	x1, w1, w2
  42bda4:	ldr	x2, [x0, #104]
  42bda8:	ldr	w1, [x2, x1]
  42bdac:	cmp	w1, #0x1
  42bdb0:	b.ls	42bde0 <ferror@plt+0x29010>  // b.plast
  42bdb4:	add	x2, sp, #0x18
  42bdb8:	bl	42bd24 <ferror@plt+0x28f54>
  42bdbc:	ldr	x1, [sp, #24]
  42bdc0:	ldr	w2, [x1]
  42bdc4:	sub	w0, w0, w2
  42bdc8:	ldrb	w2, [x1, #6]
  42bdcc:	ldr	w1, [x1, #16]
  42bdd0:	lsr	w0, w0, w2
  42bdd4:	add	w0, w0, w1
  42bdd8:	ldp	x29, x30, [sp], #32
  42bddc:	ret
  42bde0:	mov	w0, #0x0                   	// #0
  42bde4:	b	42bdd8 <ferror@plt+0x29008>
  42bde8:	stp	x29, x30, [sp, #-32]!
  42bdec:	mov	x29, sp
  42bdf0:	str	xzr, [sp, #24]
  42bdf4:	tbz	w1, #31, 42be0c <ferror@plt+0x2903c>
  42bdf8:	and	w1, w1, #0x7fffffff
  42bdfc:	mov	w2, #0x18                  	// #24
  42be00:	umull	x1, w1, w2
  42be04:	ldr	x2, [x0, #104]
  42be08:	ldr	w1, [x2, x1]
  42be0c:	cmp	w1, #0x1
  42be10:	b.ls	42be2c <ferror@plt+0x2905c>  // b.plast
  42be14:	add	x2, sp, #0x18
  42be18:	bl	42bd24 <ferror@plt+0x28f54>
  42be1c:	ldr	x0, [sp, #24]
  42be20:	ldr	x0, [x0, #8]
  42be24:	ldp	x29, x30, [sp], #32
  42be28:	ret
  42be2c:	mov	x0, #0x0                   	// #0
  42be30:	b	42be24 <ferror@plt+0x29054>
  42be34:	mov	x9, x0
  42be38:	mov	w8, w1
  42be3c:	tbz	w1, #31, 42be54 <ferror@plt+0x29084>
  42be40:	and	w8, w1, #0x7fffffff
  42be44:	mov	w1, #0x18                  	// #24
  42be48:	ldr	x0, [x0, #104]
  42be4c:	umull	x8, w8, w1
  42be50:	ldr	w8, [x0, x8]
  42be54:	cmp	w8, #0x1
  42be58:	b.ls	42bebc <ferror@plt+0x290ec>  // b.plast
  42be5c:	stp	x29, x30, [sp, #-16]!
  42be60:	mov	x29, sp
  42be64:	b	42be88 <ferror@plt+0x290b8>
  42be68:	mov	w2, w8
  42be6c:	mov	x1, x4
  42be70:	mov	x0, x9
  42be74:	bl	42b85c <ferror@plt+0x28a8c>
  42be78:	mov	w8, w0
  42be7c:	cmp	w0, #0x1
  42be80:	b.hi	42be88 <ferror@plt+0x290b8>  // b.pmore
  42be84:	ldr	w8, [x4, #24]
  42be88:	mov	w1, w8
  42be8c:	mov	x0, x9
  42be90:	bl	42b8e4 <ferror@plt+0x28b14>
  42be94:	mov	x4, x0
  42be98:	cbz	x0, 42beb4 <ferror@plt+0x290e4>
  42be9c:	bl	42b83c <ferror@plt+0x28a6c>
  42bea0:	tst	w0, #0xff
  42bea4:	b.ne	42be68 <ferror@plt+0x29098>  // b.any
  42bea8:	ldrb	w0, [x4, #5]
  42beac:	ldp	x29, x30, [sp], #16
  42beb0:	ret
  42beb4:	mov	w0, #0x0                   	// #0
  42beb8:	b	42beac <ferror@plt+0x290dc>
  42bebc:	mov	w0, #0x0                   	// #0
  42bec0:	ret
  42bec4:	mov	x11, x0
  42bec8:	mov	w8, w1
  42becc:	mov	x10, x3
  42bed0:	tbz	w1, #31, 42bf00 <ferror@plt+0x29130>
  42bed4:	and	w0, w1, #0x7fffffff
  42bed8:	mov	w1, #0x18                  	// #24
  42bedc:	umull	x0, w0, w1
  42bee0:	ldr	x1, [x11, #104]
  42bee4:	ldr	w0, [x1, x0]
  42bee8:	cmp	w0, #0x1
  42beec:	b.hi	42bf08 <ferror@plt+0x29138>  // b.pmore
  42bef0:	cbz	x10, 42bef8 <ferror@plt+0x29128>
  42bef4:	str	xzr, [x10]
  42bef8:	mov	w0, w8
  42befc:	ret
  42bf00:	mov	w0, w1
  42bf04:	b	42bee8 <ferror@plt+0x29118>
  42bf08:	stp	x29, x30, [sp, #-16]!
  42bf0c:	cmp	w2, #0x1
  42bf10:	mov	x29, sp
  42bf14:	b.ne	42bf4c <ferror@plt+0x2917c>  // b.any
  42bf18:	mov	w9, #0x6fffffff            	// #1879048191
  42bf1c:	mov	w1, w8
  42bf20:	mov	x0, x11
  42bf24:	bl	42b8e4 <ferror@plt+0x28b14>
  42bf28:	mov	x1, x0
  42bf2c:	cbz	x0, 42bf3c <ferror@plt+0x2916c>
  42bf30:	ldr	w0, [x0]
  42bf34:	cmp	w0, w9
  42bf38:	b.hi	42bfac <ferror@plt+0x291dc>  // b.pmore
  42bf3c:	cbnz	x10, 42bfc0 <ferror@plt+0x291f0>
  42bf40:	mov	w0, w8
  42bf44:	ldp	x29, x30, [sp], #16
  42bf48:	ret
  42bf4c:	cmp	w2, #0x2
  42bf50:	b.ne	42bf94 <ferror@plt+0x291c4>  // b.any
  42bf54:	mov	w12, #0x6fffffff            	// #1879048191
  42bf58:	tbz	w8, #31, 42bfc8 <ferror@plt+0x291f8>
  42bf5c:	mov	w1, w8
  42bf60:	mov	x0, x11
  42bf64:	bl	42b148 <ferror@plt+0x28378>
  42bf68:	mov	w9, w0
  42bf6c:	mov	w1, w9
  42bf70:	mov	x0, x11
  42bf74:	bl	42b8e4 <ferror@plt+0x28b14>
  42bf78:	cbz	x0, 42bf88 <ferror@plt+0x291b8>
  42bf7c:	ldr	w1, [x0]
  42bf80:	cmp	w1, w12
  42bf84:	b.hi	42bfd0 <ferror@plt+0x29200>  // b.pmore
  42bf88:	cbz	x10, 42bf40 <ferror@plt+0x29170>
  42bf8c:	str	x0, [x10]
  42bf90:	b	42bf40 <ferror@plt+0x29170>
  42bf94:	cbnz	w2, 42bfe8 <ferror@plt+0x29218>
  42bf98:	ldp	x29, x30, [sp], #16
  42bf9c:	mov	x2, x10
  42bfa0:	mov	w1, w8
  42bfa4:	mov	x0, x11
  42bfa8:	b	42bd24 <ferror@plt+0x28f54>
  42bfac:	mov	w2, w8
  42bfb0:	mov	x0, x11
  42bfb4:	bl	42b85c <ferror@plt+0x28a8c>
  42bfb8:	mov	w8, w0
  42bfbc:	b	42bf1c <ferror@plt+0x2914c>
  42bfc0:	str	x1, [x10]
  42bfc4:	b	42bf40 <ferror@plt+0x29170>
  42bfc8:	mov	w9, w8
  42bfcc:	b	42bf6c <ferror@plt+0x2919c>
  42bfd0:	sub	w9, w9, w1
  42bfd4:	ldr	x0, [x0, #16]
  42bfd8:	lsl	w9, w9, #1
  42bfdc:	add	w9, w9, #0x1
  42bfe0:	ldr	w8, [x0, x9, lsl #2]
  42bfe4:	b	42bf58 <ferror@plt+0x29188>
  42bfe8:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x235fc>
  42bfec:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x235fc>
  42bff0:	add	x2, x2, #0x8b3
  42bff4:	add	x0, x0, #0x8cc
  42bff8:	mov	w1, #0x621                 	// #1569
  42bffc:	bl	402de0 <ferror@plt+0x10>
  42c000:	stp	x29, x30, [sp, #-80]!
  42c004:	mov	x29, sp
  42c008:	stp	x19, x20, [sp, #16]
  42c00c:	mov	x20, x0
  42c010:	mov	w19, w1
  42c014:	stp	x21, x22, [sp, #32]
  42c018:	mov	w22, w2
  42c01c:	str	x23, [sp, #48]
  42c020:	str	xzr, [sp, #72]
  42c024:	tbz	w1, #31, 42c03c <ferror@plt+0x2926c>
  42c028:	and	w19, w1, #0x7fffffff
  42c02c:	mov	w1, #0x18                  	// #24
  42c030:	ldr	x0, [x0, #104]
  42c034:	umull	x19, w19, w1
  42c038:	ldr	w19, [x0, x19]
  42c03c:	mov	w1, w19
  42c040:	mov	x0, x20
  42c044:	bl	42b8b4 <ferror@plt+0x28ae4>
  42c048:	tst	w0, #0xff
  42c04c:	b.ne	42c0f0 <ferror@plt+0x29320>  // b.any
  42c050:	cmp	w22, #0x0
  42c054:	ccmp	w19, #0x1, #0x0, ne  // ne = any
  42c058:	b.ls	42c0f0 <ferror@plt+0x29320>  // b.plast
  42c05c:	mov	w1, w19
  42c060:	add	x3, sp, #0x48
  42c064:	mov	x0, x20
  42c068:	mov	w2, #0x1                   	// #1
  42c06c:	bl	42bec4 <ferror@plt+0x290f4>
  42c070:	mov	w19, w0
  42c074:	ldr	x0, [sp, #72]
  42c078:	ldrb	w1, [x0, #7]
  42c07c:	ldr	w21, [x0]
  42c080:	lsl	w1, w22, w1
  42c084:	add	w1, w1, w19
  42c088:	cmp	w1, w21
  42c08c:	b.ls	42c0f0 <ferror@plt+0x29320>  // b.plast
  42c090:	ldrb	w2, [x0, #6]
  42c094:	sub	w21, w19, w21
  42c098:	mov	w1, w19
  42c09c:	lsr	w21, w21, w2
  42c0a0:	ldr	w2, [x0, #16]
  42c0a4:	add	w21, w21, w2
  42c0a8:	bl	42d528 <ferror@plt+0x2a758>
  42c0ac:	mov	w23, w0
  42c0b0:	mov	x0, x20
  42c0b4:	bl	42d510 <ferror@plt+0x2a740>
  42c0b8:	ldr	x1, [sp, #72]
  42c0bc:	cmp	x1, x0
  42c0c0:	ldrb	w2, [x1, #7]
  42c0c4:	b.eq	42c108 <ferror@plt+0x29338>  // b.none
  42c0c8:	ldr	w0, [x1, #24]
  42c0cc:	lsl	w3, w22, w2
  42c0d0:	add	w3, w3, w19
  42c0d4:	cmp	w3, w0
  42c0d8:	b.cc	42c108 <ferror@plt+0x29338>  // b.lo, b.ul, b.last
  42c0dc:	add	x0, x1, #0x18
  42c0e0:	str	x0, [sp, #72]
  42c0e4:	ldr	w0, [x1, #40]
  42c0e8:	cmp	w0, w21
  42c0ec:	b.ls	42c0b0 <ferror@plt+0x292e0>  // b.plast
  42c0f0:	mov	w0, w19
  42c0f4:	ldp	x19, x20, [sp, #16]
  42c0f8:	ldp	x21, x22, [sp, #32]
  42c0fc:	ldr	x23, [sp, #48]
  42c100:	ldp	x29, x30, [sp], #80
  42c104:	ret
  42c108:	ldrb	w0, [x1, #6]
  42c10c:	add	w3, w22, w23
  42c110:	sub	w2, w0, w2
  42c114:	mov	w0, #0x1                   	// #1
  42c118:	lsl	w0, w0, w2
  42c11c:	cmp	w0, w3
  42c120:	b.ls	42c0f0 <ferror@plt+0x29320>  // b.plast
  42c124:	mov	w2, w21
  42c128:	mov	x0, x20
  42c12c:	bl	42b7b8 <ferror@plt+0x289e8>
  42c130:	mov	w8, w0
  42c134:	ldr	w0, [x20, #56]
  42c138:	cmp	w0, w8
  42c13c:	b.cc	42c0f0 <ferror@plt+0x29320>  // b.lo, b.ul, b.last
  42c140:	mov	w1, w8
  42c144:	mov	x0, x20
  42c148:	bl	42b8e4 <ferror@plt+0x28b14>
  42c14c:	ldr	x1, [sp, #72]
  42c150:	cmp	x1, x0
  42c154:	csel	w19, w19, w8, ne  // ne = any
  42c158:	b	42c0f0 <ferror@plt+0x29320>
  42c15c:	stp	x29, x30, [sp, #-64]!
  42c160:	mov	x29, sp
  42c164:	stp	x19, x20, [sp, #16]
  42c168:	stp	x21, x22, [sp, #32]
  42c16c:	mov	x21, x0
  42c170:	mov	w22, w2
  42c174:	stp	x23, x24, [sp, #48]
  42c178:	mov	w23, w1
  42c17c:	tbz	w1, #31, 42c268 <ferror@plt+0x29498>
  42c180:	bl	42b148 <ferror@plt+0x28378>
  42c184:	mov	w20, w0
  42c188:	tbz	w22, #31, 42c270 <ferror@plt+0x294a0>
  42c18c:	mov	w1, w22
  42c190:	mov	x0, x21
  42c194:	bl	42b148 <ferror@plt+0x28378>
  42c198:	mov	w19, w0
  42c19c:	cmp	w20, w19
  42c1a0:	b.eq	42c2f8 <ferror@plt+0x29528>  // b.none
  42c1a4:	mov	w1, w20
  42c1a8:	mov	x0, x21
  42c1ac:	bl	42b8b4 <ferror@plt+0x28ae4>
  42c1b0:	ands	w24, w0, #0xff
  42c1b4:	b.eq	42c1d0 <ferror@plt+0x29400>  // b.none
  42c1b8:	mov	w1, w20
  42c1bc:	mov	x0, x21
  42c1c0:	mov	x3, #0x0                   	// #0
  42c1c4:	mov	w2, #0x0                   	// #0
  42c1c8:	bl	42bec4 <ferror@plt+0x290f4>
  42c1cc:	mov	w20, w0
  42c1d0:	mov	w1, w19
  42c1d4:	mov	x0, x21
  42c1d8:	bl	42b8b4 <ferror@plt+0x28ae4>
  42c1dc:	tst	w0, #0xff
  42c1e0:	b.eq	42c2b8 <ferror@plt+0x294e8>  // b.none
  42c1e4:	mov	w1, w19
  42c1e8:	mov	x0, x21
  42c1ec:	mov	x3, #0x0                   	// #0
  42c1f0:	mov	w2, #0x0                   	// #0
  42c1f4:	bl	42bec4 <ferror@plt+0x290f4>
  42c1f8:	mov	w19, w0
  42c1fc:	cmp	w0, w20
  42c200:	b.ne	42c2b8 <ferror@plt+0x294e8>  // b.any
  42c204:	cbz	w24, 42c2b8 <ferror@plt+0x294e8>
  42c208:	mov	w1, w23
  42c20c:	mov	x0, x21
  42c210:	bl	42b8e4 <ferror@plt+0x28b14>
  42c214:	mov	x9, x0
  42c218:	mov	w1, w22
  42c21c:	mov	x0, x21
  42c220:	bl	42b8e4 <ferror@plt+0x28b14>
  42c224:	mov	x8, x0
  42c228:	mov	x0, x9
  42c22c:	bl	42b83c <ferror@plt+0x28a6c>
  42c230:	tst	w0, #0xff
  42c234:	b.eq	42c278 <ferror@plt+0x294a8>  // b.none
  42c238:	mov	x0, x8
  42c23c:	bl	42b83c <ferror@plt+0x28a6c>
  42c240:	tst	w0, #0xff
  42c244:	b.eq	42c278 <ferror@plt+0x294a8>  // b.none
  42c248:	cmp	x9, x8
  42c24c:	b.eq	42c280 <ferror@plt+0x294b0>  // b.none
  42c250:	ldr	w0, [x8]
  42c254:	ldr	w1, [x9]
  42c258:	cmp	w1, w0
  42c25c:	b.cc	42c2a0 <ferror@plt+0x294d0>  // b.lo, b.ul, b.last
  42c260:	ldr	w22, [x8, #24]
  42c264:	b	42c218 <ferror@plt+0x29448>
  42c268:	mov	w20, w1
  42c26c:	b	42c188 <ferror@plt+0x293b8>
  42c270:	mov	w19, w22
  42c274:	b	42c19c <ferror@plt+0x293cc>
  42c278:	cmp	x9, x8
  42c27c:	b.ne	42c288 <ferror@plt+0x294b8>  // b.any
  42c280:	sub	w0, w22, w23
  42c284:	cbnz	x8, 42c2e4 <ferror@plt+0x29514>
  42c288:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x235fc>
  42c28c:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x235fc>
  42c290:	add	x2, x2, #0x8e4
  42c294:	add	x0, x0, #0x8cc
  42c298:	mov	w1, #0x549                 	// #1353
  42c29c:	bl	402de0 <ferror@plt+0x10>
  42c2a0:	ldr	w23, [x9, #24]
  42c2a4:	mov	x0, x21
  42c2a8:	mov	w1, w23
  42c2ac:	bl	42b8e4 <ferror@plt+0x28b14>
  42c2b0:	mov	x9, x0
  42c2b4:	b	42c228 <ferror@plt+0x29458>
  42c2b8:	tbz	w20, #31, 42c2cc <ferror@plt+0x294fc>
  42c2bc:	mov	w1, w20
  42c2c0:	mov	x0, x21
  42c2c4:	bl	42b148 <ferror@plt+0x28378>
  42c2c8:	mov	w20, w0
  42c2cc:	tbz	w19, #31, 42c2e0 <ferror@plt+0x29510>
  42c2d0:	mov	w1, w19
  42c2d4:	mov	x0, x21
  42c2d8:	bl	42b148 <ferror@plt+0x28378>
  42c2dc:	mov	w19, w0
  42c2e0:	sub	w0, w19, w20
  42c2e4:	ldp	x19, x20, [sp, #16]
  42c2e8:	ldp	x21, x22, [sp, #32]
  42c2ec:	ldp	x23, x24, [sp, #48]
  42c2f0:	ldp	x29, x30, [sp], #64
  42c2f4:	ret
  42c2f8:	mov	w0, #0x0                   	// #0
  42c2fc:	b	42c2e4 <ferror@plt+0x29514>
  42c300:	stp	x29, x30, [sp, #-16]!
  42c304:	mov	x9, x0
  42c308:	mov	x29, sp
  42c30c:	tbz	w1, #31, 42c390 <ferror@plt+0x295c0>
  42c310:	bl	42b148 <ferror@plt+0x28378>
  42c314:	mov	w8, w0
  42c318:	mov	w1, w8
  42c31c:	mov	x0, x9
  42c320:	bl	42b8b4 <ferror@plt+0x28ae4>
  42c324:	ands	w0, w0, #0xff
  42c328:	b.eq	42c388 <ferror@plt+0x295b8>  // b.none
  42c32c:	mov	w1, w8
  42c330:	mov	x0, x9
  42c334:	bl	42b8e4 <ferror@plt+0x28b14>
  42c338:	mov	x5, x0
  42c33c:	mov	w4, w8
  42c340:	mov	w2, w8
  42c344:	mov	x1, x0
  42c348:	mov	x0, x9
  42c34c:	bl	42b85c <ferror@plt+0x28a8c>
  42c350:	mov	w8, w0
  42c354:	mov	w1, w0
  42c358:	mov	x0, x9
  42c35c:	bl	42b8b4 <ferror@plt+0x28ae4>
  42c360:	tst	w0, #0xff
  42c364:	b.ne	42c32c <ferror@plt+0x2955c>  // b.any
  42c368:	ldr	w2, [x5]
  42c36c:	ldr	x0, [x5, #16]
  42c370:	sub	w4, w4, w2
  42c374:	lsl	w4, w4, #1
  42c378:	add	w4, w4, #0x1
  42c37c:	ldr	w0, [x0, x4, lsl #2]
  42c380:	cmp	w0, w8
  42c384:	cset	w0, eq  // eq = none
  42c388:	ldp	x29, x30, [sp], #16
  42c38c:	ret
  42c390:	mov	w8, w1
  42c394:	b	42c318 <ferror@plt+0x29548>
  42c398:	stp	x29, x30, [sp, #-16]!
  42c39c:	mov	x9, x0
  42c3a0:	mov	x10, x2
  42c3a4:	mov	x29, sp
  42c3a8:	ldr	x11, [x2]
  42c3ac:	tbz	w1, #31, 42c3c4 <ferror@plt+0x295f4>
  42c3b0:	and	w1, w1, #0x7fffffff
  42c3b4:	mov	w0, #0x18                  	// #24
  42c3b8:	umull	x1, w1, w0
  42c3bc:	ldr	x0, [x9, #104]
  42c3c0:	ldr	w1, [x0, x1]
  42c3c4:	mov	w2, w1
  42c3c8:	mov	x0, x9
  42c3cc:	mov	x1, x11
  42c3d0:	bl	42b85c <ferror@plt+0x28a8c>
  42c3d4:	mov	w8, w0
  42c3d8:	mov	w1, w0
  42c3dc:	mov	x0, x9
  42c3e0:	bl	42b8e4 <ferror@plt+0x28b14>
  42c3e4:	mov	x3, x0
  42c3e8:	bl	42b83c <ferror@plt+0x28a6c>
  42c3ec:	tst	w0, #0xff
  42c3f0:	b.ne	42c408 <ferror@plt+0x29638>  // b.any
  42c3f4:	ldr	w8, [x11, #24]
  42c3f8:	mov	x0, x9
  42c3fc:	mov	w1, w8
  42c400:	bl	42b8e4 <ferror@plt+0x28b14>
  42c404:	mov	x3, x0
  42c408:	ldp	x29, x30, [sp], #16
  42c40c:	mov	w0, w8
  42c410:	str	x3, [x10]
  42c414:	ret
  42c418:	stp	x29, x30, [sp, #-64]!
  42c41c:	mov	x29, sp
  42c420:	stp	x19, x20, [sp, #16]
  42c424:	mov	x20, x0
  42c428:	mov	w19, w1
  42c42c:	str	x21, [sp, #32]
  42c430:	mov	x21, x2
  42c434:	stp	xzr, xzr, [sp, #48]
  42c438:	tbz	w1, #31, 42c450 <ferror@plt+0x29680>
  42c43c:	and	w19, w1, #0x7fffffff
  42c440:	mov	w1, #0x18                  	// #24
  42c444:	ldr	x0, [x0, #104]
  42c448:	umull	x19, w19, w1
  42c44c:	ldr	w19, [x0, x19]
  42c450:	mov	w1, w19
  42c454:	mov	x0, x20
  42c458:	bl	42b8e4 <ferror@plt+0x28b14>
  42c45c:	str	x0, [sp, #48]
  42c460:	bl	42b83c <ferror@plt+0x28a6c>
  42c464:	tst	w0, #0xff
  42c468:	b.eq	42c4f8 <ferror@plt+0x29728>  // b.none
  42c46c:	add	x3, sp, #0x38
  42c470:	mov	w1, w19
  42c474:	mov	x0, x20
  42c478:	mov	w2, #0x1                   	// #1
  42c47c:	bl	42bec4 <ferror@plt+0x290f4>
  42c480:	mov	w3, w0
  42c484:	cmp	w0, #0x1
  42c488:	b.ls	42c498 <ferror@plt+0x296c8>  // b.plast
  42c48c:	ldr	x0, [sp, #56]
  42c490:	ldrb	w0, [x0, #5]
  42c494:	cbz	w0, 42c4f8 <ferror@plt+0x29728>
  42c498:	ldr	x2, [sp, #48]
  42c49c:	mov	x0, x2
  42c4a0:	bl	42b83c <ferror@plt+0x28a6c>
  42c4a4:	tst	w0, #0xff
  42c4a8:	b.eq	42c4f0 <ferror@plt+0x29720>  // b.none
  42c4ac:	cmp	w3, #0x1
  42c4b0:	b.ls	42c4c0 <ferror@plt+0x296f0>  // b.plast
  42c4b4:	ldr	x0, [sp, #56]
  42c4b8:	ldrb	w0, [x0, #5]
  42c4bc:	cbz	w0, 42c4f0 <ferror@plt+0x29720>
  42c4c0:	mov	w1, w19
  42c4c4:	add	x2, sp, #0x30
  42c4c8:	mov	x0, x20
  42c4cc:	bl	42c398 <ferror@plt+0x295c8>
  42c4d0:	add	x3, sp, #0x38
  42c4d4:	mov	w1, w0
  42c4d8:	mov	w19, w0
  42c4dc:	mov	w2, #0x1                   	// #1
  42c4e0:	mov	x0, x20
  42c4e4:	bl	42bec4 <ferror@plt+0x290f4>
  42c4e8:	mov	w3, w0
  42c4ec:	b	42c498 <ferror@plt+0x296c8>
  42c4f0:	cbz	x21, 42c4f8 <ferror@plt+0x29728>
  42c4f4:	str	x2, [x21]
  42c4f8:	mov	w0, w19
  42c4fc:	ldp	x19, x20, [sp, #16]
  42c500:	ldr	x21, [sp, #32]
  42c504:	ldp	x29, x30, [sp], #64
  42c508:	ret
  42c50c:	stp	x29, x30, [sp, #-32]!
  42c510:	mov	w3, w2
  42c514:	mov	x29, sp
  42c518:	stp	x19, x20, [sp, #16]
  42c51c:	mov	x19, x8
  42c520:	mov	x20, x1
  42c524:	stp	xzr, xzr, [x8]
  42c528:	stp	xzr, xzr, [x8, #16]
  42c52c:	tbz	w2, #31, 42c550 <ferror@plt+0x29780>
  42c530:	and	w3, w2, #0x7fffffff
  42c534:	mov	w1, #0x18                  	// #24
  42c538:	umull	x3, w3, w1
  42c53c:	ldr	x1, [x0, #104]
  42c540:	add	x2, x1, x3
  42c544:	ldr	w3, [x1, x3]
  42c548:	ldr	x2, [x2, #16]
  42c54c:	str	x2, [x8, #16]
  42c550:	cmp	w3, #0x1
  42c554:	b.ls	42c5d8 <ferror@plt+0x29808>  // b.plast
  42c558:	cbnz	x20, 42c574 <ferror@plt+0x297a4>
  42c55c:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x235fc>
  42c560:	add	x2, x2, #0x8fe
  42c564:	mov	w1, #0x6bd                 	// #1725
  42c568:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x235fc>
  42c56c:	add	x0, x0, #0x8cc
  42c570:	bl	402de0 <ferror@plt+0x10>
  42c574:	mov	w1, w3
  42c578:	bl	42b8b4 <ferror@plt+0x28ae4>
  42c57c:	tst	w0, #0xff
  42c580:	b.eq	42c594 <ferror@plt+0x297c4>  // b.none
  42c584:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x235fc>
  42c588:	mov	w1, #0x6c5                 	// #1733
  42c58c:	add	x2, x2, #0x8fe
  42c590:	b	42c568 <ferror@plt+0x29798>
  42c594:	ldr	x0, [x20, #8]
  42c598:	str	x0, [x19]
  42c59c:	ldr	w0, [x20]
  42c5a0:	ldrb	w1, [x20, #6]
  42c5a4:	sub	w0, w3, w0
  42c5a8:	lsr	w0, w0, w1
  42c5ac:	ldr	w1, [x20, #16]
  42c5b0:	add	w0, w0, w1
  42c5b4:	mov	w1, w3
  42c5b8:	str	w0, [x19, #8]
  42c5bc:	mov	x0, x20
  42c5c0:	bl	42d528 <ferror@plt+0x2a758>
  42c5c4:	str	w0, [x19, #12]
  42c5c8:	ldrb	w0, [x20, #5]
  42c5cc:	cmp	w0, #0x0
  42c5d0:	cset	w0, ne  // ne = any
  42c5d4:	strb	w0, [x19, #24]
  42c5d8:	ldp	x19, x20, [sp, #16]
  42c5dc:	ldp	x29, x30, [sp], #32
  42c5e0:	ret
  42c5e4:	stp	x29, x30, [sp, #-96]!
  42c5e8:	mov	x29, sp
  42c5ec:	stp	x19, x20, [sp, #16]
  42c5f0:	mov	x20, x0
  42c5f4:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x235fc>
  42c5f8:	add	x0, x0, #0xa58
  42c5fc:	stp	x21, x22, [sp, #32]
  42c600:	mov	x21, x1
  42c604:	and	w22, w3, #0xff
  42c608:	ldp	x4, x5, [x0]
  42c60c:	stp	x4, x5, [sp, #56]
  42c610:	ldp	x4, x5, [x0, #16]
  42c614:	stp	x4, x5, [sp, #72]
  42c618:	ldr	x0, [x0, #32]
  42c61c:	str	x0, [sp, #88]
  42c620:	cbnz	x20, 42c62c <ferror@plt+0x2985c>
  42c624:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  42c628:	ldr	x20, [x0, #1440]
  42c62c:	cbnz	w22, 42c700 <ferror@plt+0x29930>
  42c630:	ldr	x0, [x21]
  42c634:	mov	w19, #0x18                  	// #24
  42c638:	smaddl	x19, w2, w19, x0
  42c63c:	ldrb	w0, [x19, #4]
  42c640:	ldr	w4, [x19]
  42c644:	cmp	w0, #0x4
  42c648:	b.hi	42c714 <ferror@plt+0x29944>  // b.pmore
  42c64c:	add	x1, sp, #0x60
  42c650:	add	x0, x1, w0, uxtb #3
  42c654:	ldur	x5, [x0, #-40]
  42c658:	cbnz	w22, 42c720 <ferror@plt+0x29950>
  42c65c:	ldrb	w1, [x19, #5]
  42c660:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x235fc>
  42c664:	adrp	x6, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  42c668:	add	x0, x0, #0x916
  42c66c:	cmp	w1, #0x0
  42c670:	add	x6, x6, #0x9cb
  42c674:	csel	x6, x6, x0, eq  // eq = none
  42c678:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x235fc>
  42c67c:	mov	x3, x19
  42c680:	add	x1, x1, #0x91f
  42c684:	mov	x0, x20
  42c688:	bl	402d90 <fprintf@plt>
  42c68c:	cbnz	w22, 42c73c <ferror@plt+0x2996c>
  42c690:	mov	x1, x19
  42c694:	mov	x0, x21
  42c698:	bl	42b1c4 <ferror@plt+0x283f4>
  42c69c:	mov	x22, x0
  42c6a0:	ldr	w3, [x19, #16]
  42c6a4:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x235fc>
  42c6a8:	ldr	x2, [x19, #8]
  42c6ac:	add	x1, x1, #0x94f
  42c6b0:	mov	x0, x20
  42c6b4:	bl	402d90 <fprintf@plt>
  42c6b8:	cbz	x22, 42c72c <ferror@plt+0x2995c>
  42c6bc:	ldr	x2, [x21]
  42c6c0:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  42c6c4:	movk	x0, #0xaaab
  42c6c8:	sub	x2, x22, x2
  42c6cc:	ldr	x3, [x22, #8]
  42c6d0:	asr	x2, x2, #3
  42c6d4:	mul	w2, w2, w0
  42c6d8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x235fc>
  42c6dc:	mov	x0, x20
  42c6e0:	add	x1, x1, #0x95c
  42c6e4:	bl	402d90 <fprintf@plt>
  42c6e8:	mov	x1, x20
  42c6ec:	mov	w0, #0xa                   	// #10
  42c6f0:	ldp	x19, x20, [sp, #16]
  42c6f4:	ldp	x21, x22, [sp, #32]
  42c6f8:	ldp	x29, x30, [sp], #96
  42c6fc:	b	4027d0 <fputc@plt>
  42c700:	ldr	x0, [x21, #24]
  42c704:	sbfiz	x19, x2, #5, #32
  42c708:	add	x19, x0, x19
  42c70c:	mov	w0, #0x4                   	// #4
  42c710:	b	42c640 <ferror@plt+0x29870>
  42c714:	adrp	x5, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  42c718:	add	x5, x5, #0x42e
  42c71c:	b	42c658 <ferror@plt+0x29888>
  42c720:	adrp	x6, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  42c724:	add	x6, x6, #0x9cb
  42c728:	b	42c678 <ferror@plt+0x298a8>
  42c72c:	adrp	x3, 468000 <_obstack_memory_used@@Base+0x235fc>
  42c730:	mov	w2, #0xffffffff            	// #-1
  42c734:	add	x3, x3, #0x91a
  42c738:	b	42c6d8 <ferror@plt+0x29908>
  42c73c:	ldr	x0, [x19, #8]
  42c740:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x235fc>
  42c744:	ldr	w3, [x19, #4]
  42c748:	add	x1, x1, #0x974
  42c74c:	ldr	x2, [x0]
  42c750:	mov	x0, x20
  42c754:	bl	402d90 <fprintf@plt>
  42c758:	b	42c6e8 <ferror@plt+0x29918>
  42c75c:	sub	sp, sp, #0x80
  42c760:	stp	x29, x30, [sp, #32]
  42c764:	add	x29, sp, #0x20
  42c768:	stp	x19, x20, [sp, #48]
  42c76c:	mov	w19, w1
  42c770:	stp	x21, x22, [sp, #64]
  42c774:	stp	x23, x24, [sp, #80]
  42c778:	mov	x24, x0
  42c77c:	mov	x23, x2
  42c780:	str	x25, [sp, #96]
  42c784:	tbz	w1, #31, 42c79c <ferror@plt+0x299cc>
  42c788:	and	w19, w1, #0x7fffffff
  42c78c:	mov	w1, #0x18                  	// #24
  42c790:	ldr	x0, [x0, #104]
  42c794:	umull	x19, w19, w1
  42c798:	ldr	w19, [x0, x19]
  42c79c:	cbz	w19, 42c848 <ferror@plt+0x29a78>
  42c7a0:	add	x3, sp, #0x78
  42c7a4:	mov	w1, w19
  42c7a8:	mov	x0, x24
  42c7ac:	mov	w2, #0x2                   	// #2
  42c7b0:	bl	42bec4 <ferror@plt+0x290f4>
  42c7b4:	mov	w22, w0
  42c7b8:	ldr	x21, [sp, #120]
  42c7bc:	cbz	x21, 42c864 <ferror@plt+0x29a94>
  42c7c0:	ldr	w20, [x21]
  42c7c4:	mov	w1, w0
  42c7c8:	ldrb	w4, [x21, #6]
  42c7cc:	mov	x0, x21
  42c7d0:	sub	w20, w22, w20
  42c7d4:	lsr	w20, w20, w4
  42c7d8:	ldr	w4, [x21, #16]
  42c7dc:	add	w20, w20, w4
  42c7e0:	bl	42d528 <ferror@plt+0x2a758>
  42c7e4:	mov	w8, w0
  42c7e8:	ldrb	w0, [x21, #5]
  42c7ec:	ldr	x25, [x21, #8]
  42c7f0:	cmp	w0, #0x0
  42c7f4:	cset	w9, ne  // ne = any
  42c7f8:	cmp	w19, w22
  42c7fc:	b.ne	42c884 <ferror@plt+0x29ab4>  // b.any
  42c800:	mov	x1, x21
  42c804:	mov	x0, x24
  42c808:	bl	42b1c4 <ferror@plt+0x283f4>
  42c80c:	cbz	x0, 42c894 <ferror@plt+0x29ac4>
  42c810:	ldr	x3, [x0, #8]
  42c814:	mov	w1, #0x0                   	// #0
  42c818:	ldr	x7, [sp, #120]
  42c81c:	str	w1, [sp]
  42c820:	str	w19, [sp, #8]
  42c824:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x235fc>
  42c828:	str	w22, [sp, #16]
  42c82c:	mov	w6, w9
  42c830:	mov	w5, w8
  42c834:	mov	w4, w20
  42c838:	mov	x2, x25
  42c83c:	mov	x0, x23
  42c840:	add	x1, x1, #0x996
  42c844:	bl	402d90 <fprintf@plt>
  42c848:	ldp	x29, x30, [sp, #32]
  42c84c:	ldp	x19, x20, [sp, #48]
  42c850:	ldp	x21, x22, [sp, #64]
  42c854:	ldp	x23, x24, [sp, #80]
  42c858:	ldr	x25, [sp, #96]
  42c85c:	add	sp, sp, #0x80
  42c860:	ret
  42c864:	adrp	x3, 45e000 <_obstack_memory_used@@Base+0x195fc>
  42c868:	add	x3, x3, #0xaff
  42c86c:	mov	w1, #0xffffffff            	// #-1
  42c870:	mov	x25, x3
  42c874:	mov	w9, w1
  42c878:	mov	w8, w1
  42c87c:	mov	w20, w1
  42c880:	b	42c818 <ferror@plt+0x29a48>
  42c884:	adrp	x3, 468000 <_obstack_memory_used@@Base+0x235fc>
  42c888:	mov	w1, #0x1                   	// #1
  42c88c:	add	x3, x3, #0x98b
  42c890:	b	42c818 <ferror@plt+0x29a48>
  42c894:	adrp	x3, 468000 <_obstack_memory_used@@Base+0x235fc>
  42c898:	mov	w1, #0x0                   	// #0
  42c89c:	add	x3, x3, #0x98f
  42c8a0:	b	42c818 <ferror@plt+0x29a48>
  42c8a4:	cbnz	x0, 42c8c8 <ferror@plt+0x29af8>
  42c8a8:	mov	w0, #0x0                   	// #0
  42c8ac:	ret
  42c8b0:	mov	w0, #0x0                   	// #0
  42c8b4:	ldp	x19, x20, [sp, #16]
  42c8b8:	ldp	x21, x22, [sp, #32]
  42c8bc:	ldp	x23, x24, [sp, #48]
  42c8c0:	ldp	x29, x30, [sp], #64
  42c8c4:	ret
  42c8c8:	stp	x29, x30, [sp, #-64]!
  42c8cc:	mov	x29, sp
  42c8d0:	stp	x19, x20, [sp, #16]
  42c8d4:	mov	x19, x0
  42c8d8:	ldr	w20, [x0, #12]
  42c8dc:	stp	x21, x22, [sp, #32]
  42c8e0:	stp	x23, x24, [sp, #48]
  42c8e4:	cbz	w20, 42c8b0 <ferror@plt+0x29ae0>
  42c8e8:	sub	w20, w20, #0x1
  42c8ec:	mov	x24, x1
  42c8f0:	mov	x23, x2
  42c8f4:	mov	x21, #0x18                  	// #24
  42c8f8:	sxtw	x22, w20
  42c8fc:	tbnz	w20, #31, 42c8b0 <ferror@plt+0x29ae0>
  42c900:	ldr	x0, [x19]
  42c904:	madd	x0, x22, x21, x0
  42c908:	ldr	x0, [x0, #8]
  42c90c:	cbnz	x0, 42c91c <ferror@plt+0x29b4c>
  42c910:	sub	w20, w20, #0x1
  42c914:	sub	x22, x22, #0x1
  42c918:	b	42c8fc <ferror@plt+0x29b2c>
  42c91c:	mov	x1, x24
  42c920:	bl	4436a0 <ferror@plt+0x408d0>
  42c924:	cbnz	w0, 42c910 <ferror@plt+0x29b40>
  42c928:	ldr	w0, [x19, #12]
  42c92c:	sub	w0, w0, #0x1
  42c930:	cmp	w0, w20
  42c934:	b.ne	42c948 <ferror@plt+0x29b78>  // b.any
  42c938:	ldr	w0, [x19, #56]
  42c93c:	str	w0, [x23]
  42c940:	mov	w0, #0x1                   	// #1
  42c944:	b	42c8b4 <ferror@plt+0x29ae4>
  42c948:	madd	x21, x22, x21, x21
  42c94c:	ldr	x0, [x19]
  42c950:	ldr	w0, [x0, x21]
  42c954:	sub	w0, w0, #0x1
  42c958:	b	42c93c <ferror@plt+0x29b6c>
  42c95c:	ldp	w7, w8, [x0, #8]
  42c960:	mov	w2, #0x18                  	// #24
  42c964:	ldp	w12, w3, [x0, #32]
  42c968:	mov	x11, #0x0                   	// #0
  42c96c:	umull	x15, w7, w2
  42c970:	mov	x10, #0x0                   	// #0
  42c974:	umull	x6, w8, w2
  42c978:	sub	w4, w3, #0x1
  42c97c:	ldr	x2, [x0, #24]
  42c980:	sbfiz	x4, x4, #5, #32
  42c984:	lsl	x12, x12, #5
  42c988:	add	x4, x2, x4
  42c98c:	cbz	x2, 42c9d4 <ferror@plt+0x29c04>
  42c990:	cmp	x2, x4
  42c994:	b.hi	42c9d4 <ferror@plt+0x29c04>  // b.pmore
  42c998:	ldr	w9, [x2, #4]
  42c99c:	mov	w5, #0x0                   	// #0
  42c9a0:	lsl	w9, w9, #1
  42c9a4:	add	x10, x10, w9, uxtw #2
  42c9a8:	cmp	w9, w5
  42c9ac:	b.ls	42ca28 <ferror@plt+0x29c58>  // b.plast
  42c9b0:	ldr	x14, [x2, #16]
  42c9b4:	add	w13, w5, #0x1
  42c9b8:	ldr	w16, [x14, w5, uxtw #2]
  42c9bc:	ldr	w13, [x14, x13, lsl #2]
  42c9c0:	cmp	w16, w13
  42c9c4:	b.ne	42c9cc <ferror@plt+0x29bfc>  // b.any
  42c9c8:	add	x11, x11, #0x4
  42c9cc:	add	w5, w5, #0x2
  42c9d0:	b	42c9a8 <ferror@plt+0x29bd8>
  42c9d4:	adrp	x2, 495000 <_obstack_memory_used@@Base+0x505fc>
  42c9d8:	mov	w3, w3
  42c9dc:	stp	x3, x12, [x1, #48]
  42c9e0:	mov	w7, w7
  42c9e4:	ldr	w2, [x2, #2484]
  42c9e8:	str	x2, [x1, #32]
  42c9ec:	lsl	x3, x3, #5
  42c9f0:	adrp	x2, 495000 <_obstack_memory_used@@Base+0x505fc>
  42c9f4:	str	x3, [x1, #64]
  42c9f8:	mov	w3, #0x18                  	// #24
  42c9fc:	mov	w8, w8
  42ca00:	ldr	w2, [x2, #2480]
  42ca04:	str	x2, [x1, #40]
  42ca08:	ldr	w2, [x0, #100]
  42ca0c:	ldr	w0, [x0, #96]
  42ca10:	stp	x7, x8, [x1]
  42ca14:	umull	x2, w2, w3
  42ca18:	stp	x15, x6, [x1, #16]
  42ca1c:	stp	x10, x11, [x1, #72]
  42ca20:	stp	x2, x0, [x1, #88]
  42ca24:	ret
  42ca28:	add	x2, x2, #0x20
  42ca2c:	b	42c98c <ferror@plt+0x29bbc>
  42ca30:	cbz	x1, 42cb7c <ferror@plt+0x29dac>
  42ca34:	stp	x29, x30, [sp, #-64]!
  42ca38:	mov	x29, sp
  42ca3c:	stp	x19, x20, [sp, #16]
  42ca40:	mov	x19, x0
  42ca44:	mov	x20, x1
  42ca48:	stp	x21, x22, [sp, #32]
  42ca4c:	mov	w22, w3
  42ca50:	str	x23, [sp, #48]
  42ca54:	mov	w23, w2
  42ca58:	cbnz	x0, 42ca64 <ferror@plt+0x29c94>
  42ca5c:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  42ca60:	ldr	x19, [x0, #1440]
  42ca64:	mov	x0, x19
  42ca68:	ldr	w2, [x20, #12]
  42ca6c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x235fc>
  42ca70:	add	x1, x1, #0x9c7
  42ca74:	bl	402d90 <fprintf@plt>
  42ca78:	ldr	w2, [x20, #36]
  42ca7c:	mov	x0, x19
  42ca80:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x235fc>
  42ca84:	add	x1, x1, #0x9e0
  42ca88:	bl	402d90 <fprintf@plt>
  42ca8c:	ldr	w2, [x20, #48]
  42ca90:	mov	x0, x19
  42ca94:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x235fc>
  42ca98:	add	x1, x1, #0x9f9
  42ca9c:	bl	402d90 <fprintf@plt>
  42caa0:	ldr	w2, [x20, #56]
  42caa4:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x235fc>
  42caa8:	mov	x0, x19
  42caac:	add	x1, x1, #0xa12
  42cab0:	bl	402d90 <fprintf@plt>
  42cab4:	cbz	w23, 42cb04 <ferror@plt+0x29d34>
  42cab8:	mov	w21, #0x0                   	// #0
  42cabc:	mov	x1, x19
  42cac0:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x235fc>
  42cac4:	add	x0, x0, #0xa2b
  42cac8:	bl	402710 <fputs@plt>
  42cacc:	ldr	w0, [x20, #12]
  42cad0:	cmp	w0, w21
  42cad4:	b.ls	42caf8 <ferror@plt+0x29d28>  // b.plast
  42cad8:	mov	w2, w21
  42cadc:	mov	x1, x20
  42cae0:	mov	x0, x19
  42cae4:	add	w21, w21, #0x1
  42cae8:	mov	w3, #0x0                   	// #0
  42caec:	bl	42c5e4 <ferror@plt+0x29814>
  42caf0:	cmp	w23, w21
  42caf4:	b.ne	42cacc <ferror@plt+0x29cfc>  // b.any
  42caf8:	mov	x1, x19
  42cafc:	mov	w0, #0xa                   	// #10
  42cb00:	bl	4027d0 <fputc@plt>
  42cb04:	cbz	w22, 42cb68 <ferror@plt+0x29d98>
  42cb08:	mov	w21, #0x0                   	// #0
  42cb0c:	mov	x1, x19
  42cb10:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x235fc>
  42cb14:	add	x0, x0, #0xa40
  42cb18:	bl	402710 <fputs@plt>
  42cb1c:	ldr	w0, [x20, #36]
  42cb20:	cmp	w0, w21
  42cb24:	b.hi	42cb44 <ferror@plt+0x29d74>  // b.pmore
  42cb28:	mov	x1, x19
  42cb2c:	mov	w0, #0xa                   	// #10
  42cb30:	ldp	x19, x20, [sp, #16]
  42cb34:	ldp	x21, x22, [sp, #32]
  42cb38:	ldr	x23, [sp, #48]
  42cb3c:	ldp	x29, x30, [sp], #64
  42cb40:	b	4027d0 <fputc@plt>
  42cb44:	mov	w2, w21
  42cb48:	mov	x1, x20
  42cb4c:	mov	x0, x19
  42cb50:	add	w21, w21, #0x1
  42cb54:	mov	w3, #0x1                   	// #1
  42cb58:	bl	42c5e4 <ferror@plt+0x29814>
  42cb5c:	cmp	w22, w21
  42cb60:	b.ne	42cb1c <ferror@plt+0x29d4c>  // b.any
  42cb64:	b	42cb28 <ferror@plt+0x29d58>
  42cb68:	ldp	x19, x20, [sp, #16]
  42cb6c:	ldp	x21, x22, [sp, #32]
  42cb70:	ldr	x23, [sp, #48]
  42cb74:	ldp	x29, x30, [sp], #64
  42cb78:	ret
  42cb7c:	ret
  42cb80:	stp	x29, x30, [sp, #-64]!
  42cb84:	mov	x29, sp
  42cb88:	stp	x19, x20, [sp, #16]
  42cb8c:	mov	x20, x0
  42cb90:	mov	w19, #0x0                   	// #0
  42cb94:	stp	x21, x22, [sp, #32]
  42cb98:	add	x21, x0, #0x78
  42cb9c:	str	x23, [sp, #48]
  42cba0:	mov	x23, #0xfffffffffffffff0    	// #-16
  42cba4:	ldr	w0, [x20, #120]
  42cba8:	cmp	w19, w0
  42cbac:	b.cs	42cbf8 <ferror@plt+0x29e28>  // b.hs, b.nlast
  42cbb0:	sxtw	x1, w19
  42cbb4:	cmp	w19, #0x1
  42cbb8:	b.gt	42cbe8 <ferror@plt+0x29e18>
  42cbbc:	add	x1, x1, #0x1
  42cbc0:	add	x1, x21, x1, lsl #3
  42cbc4:	ldr	x22, [x1]
  42cbc8:	cbz	x22, 42cbe0 <ferror@plt+0x29e10>
  42cbcc:	ldr	x0, [x22, #8]
  42cbd0:	bl	402b30 <free@plt>
  42cbd4:	mov	x0, x22
  42cbd8:	mov	x1, #0x18                  	// #24
  42cbdc:	bl	445778 <_obstack_memory_used@@Base+0xd74>
  42cbe0:	add	w19, w19, #0x1
  42cbe4:	b	42cba4 <ferror@plt+0x29dd4>
  42cbe8:	ldr	x2, [x21, #32]
  42cbec:	add	x1, x23, w19, sxtw #3
  42cbf0:	add	x1, x2, x1
  42cbf4:	b	42cbc4 <ferror@plt+0x29df4>
  42cbf8:	ldr	x0, [x21, #32]
  42cbfc:	bl	402b30 <free@plt>
  42cc00:	ldp	x21, x22, [sp, #32]
  42cc04:	ldr	x23, [sp, #48]
  42cc08:	ldr	x0, [x20, #72]
  42cc0c:	ldp	x19, x20, [sp, #16]
  42cc10:	ldp	x29, x30, [sp], #64
  42cc14:	b	402b30 <free@plt>
  42cc18:	sbfiz	x2, x1, #4, #32
  42cc1c:	cmp	w1, #0x2
  42cc20:	add	x0, x0, #0x8
  42cc24:	b.gt	42cc38 <ferror@plt+0x29e68>
  42cc28:	add	x2, x2, #0x8
  42cc2c:	add	x0, x0, x2
  42cc30:	ldr	w0, [x0]
  42cc34:	ret
  42cc38:	sub	x2, x2, #0x30
  42cc3c:	ldr	x0, [x0, #64]
  42cc40:	b	42cc2c <ferror@plt+0x29e5c>
  42cc44:	sbfiz	x2, x1, #4, #32
  42cc48:	cmp	w1, #0x2
  42cc4c:	add	x0, x0, #0x8
  42cc50:	b.gt	42cc60 <ferror@plt+0x29e90>
  42cc54:	add	x2, x2, #0x8
  42cc58:	add	x0, x0, x2
  42cc5c:	ret
  42cc60:	sub	x2, x2, #0x30
  42cc64:	ldr	x0, [x0, #64]
  42cc68:	b	42cc58 <ferror@plt+0x29e88>
  42cc6c:	sbfiz	x2, x1, #4, #32
  42cc70:	cmp	w1, #0x2
  42cc74:	add	x0, x0, #0x8
  42cc78:	b.gt	42cc88 <ferror@plt+0x29eb8>
  42cc7c:	add	x2, x2, #0x8
  42cc80:	add	x0, x0, x2
  42cc84:	ret
  42cc88:	sub	x2, x2, #0x30
  42cc8c:	ldr	x0, [x0, #64]
  42cc90:	b	42cc80 <ferror@plt+0x29eb0>
  42cc94:	stp	x29, x30, [sp, #-80]!
  42cc98:	mov	x29, sp
  42cc9c:	stp	x19, x20, [sp, #16]
  42cca0:	mov	x20, x8
  42cca4:	str	x21, [sp, #32]
  42cca8:	cbnz	w1, 42cd10 <ferror@plt+0x29f40>
  42ccac:	ldrb	w2, [x0, #84]
  42ccb0:	mov	x19, x0
  42ccb4:	add	x21, x0, #0x58
  42ccb8:	cbnz	w2, 42ccf0 <ferror@plt+0x29f20>
  42ccbc:	bl	42cc18 <ferror@plt+0x29e48>
  42ccc0:	mov	w1, #0x0                   	// #0
  42ccc4:	add	x8, sp, #0x30
  42ccc8:	bl	417204 <ferror@plt+0x14434>
  42cccc:	ldp	x0, x1, [sp, #48]
  42ccd0:	stp	x0, x1, [x19, #88]
  42ccd4:	ldp	x0, x1, [sp, #64]
  42ccd8:	stp	x0, x1, [x21, #16]
  42ccdc:	ldr	w0, [x19, #80]
  42cce0:	cbz	w0, 42cce8 <ferror@plt+0x29f18>
  42cce4:	str	w0, [x19, #100]
  42cce8:	mov	w0, #0x1                   	// #1
  42ccec:	strb	w0, [x19, #84]
  42ccf0:	ldp	x0, x1, [x19, #88]
  42ccf4:	stp	x0, x1, [x20]
  42ccf8:	ldp	x0, x1, [x21, #16]
  42ccfc:	stp	x0, x1, [x20, #16]
  42cd00:	ldp	x19, x20, [sp, #16]
  42cd04:	ldr	x21, [sp, #32]
  42cd08:	ldp	x29, x30, [sp], #80
  42cd0c:	ret
  42cd10:	bl	42cc18 <ferror@plt+0x29e48>
  42cd14:	mov	w1, #0x0                   	// #0
  42cd18:	bl	417204 <ferror@plt+0x14434>
  42cd1c:	b	42cd00 <ferror@plt+0x29f30>
  42cd20:	str	w1, [x0, #80]
  42cd24:	strb	wzr, [x0, #84]
  42cd28:	ret
  42cd2c:	stp	x29, x30, [sp, #-64]!
  42cd30:	mov	x29, sp
  42cd34:	ldr	w4, [x0, #8]
  42cd38:	stp	x19, x20, [sp, #16]
  42cd3c:	add	x20, x0, #0x8
  42cd40:	cmp	w4, #0x2
  42cd44:	stp	x21, x22, [sp, #32]
  42cd48:	mov	w22, w2
  42cd4c:	mov	x21, x3
  42cd50:	str	x23, [sp, #48]
  42cd54:	mov	w23, w1
  42cd58:	add	w1, w4, #0x1
  42cd5c:	str	w1, [x0, #8]
  42cd60:	b.gt	42cd90 <ferror@plt+0x29fc0>
  42cd64:	mov	x0, #0x8                   	// #8
  42cd68:	add	x4, x0, w4, sxtw #4
  42cd6c:	add	x0, x20, x4
  42cd70:	str	w23, [x20, x4]
  42cd74:	str	w2, [x0, #4]
  42cd78:	str	x3, [x0, #8]
  42cd7c:	ldp	x19, x20, [sp, #16]
  42cd80:	ldp	x21, x22, [sp, #32]
  42cd84:	ldr	x23, [sp, #48]
  42cd88:	ldp	x29, x30, [sp], #64
  42cd8c:	ret
  42cd90:	ldr	x0, [x20, #64]
  42cd94:	sub	w19, w4, #0x3
  42cd98:	cbnz	x0, 42cdcc <ferror@plt+0x29ffc>
  42cd9c:	mov	w0, #0x10                  	// #16
  42cda0:	str	w0, [x20, #56]
  42cda4:	mov	x0, #0x100                 	// #256
  42cda8:	bl	44526c <_obstack_memory_used@@Base+0x868>
  42cdac:	str	x0, [x20, #64]
  42cdb0:	ldr	x0, [x20, #64]
  42cdb4:	sbfiz	x1, x19, #4, #32
  42cdb8:	add	x4, x0, w19, sxtw #4
  42cdbc:	str	w23, [x0, x1]
  42cdc0:	str	w22, [x4, #4]
  42cdc4:	str	x21, [x4, #8]
  42cdc8:	b	42cd7c <ferror@plt+0x29fac>
  42cdcc:	ldr	w4, [x20, #56]
  42cdd0:	cmp	w19, w4
  42cdd4:	b.lt	42cdb0 <ferror@plt+0x29fe0>  // b.tstop
  42cdd8:	lsl	w4, w4, #1
  42cddc:	str	w4, [x20, #56]
  42cde0:	sbfiz	x1, x4, #4, #32
  42cde4:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  42cde8:	b	42cdac <ferror@plt+0x29fdc>
  42cdec:	mov	x5, x1
  42cdf0:	mov	w1, w2
  42cdf4:	mov	x2, x0
  42cdf8:	str	x5, [x2], #8
  42cdfc:	str	wzr, [x0, #8]
  42ce00:	str	wzr, [x2, #56]
  42ce04:	str	xzr, [x2, #64]
  42ce08:	mov	w2, #0x0                   	// #0
  42ce0c:	str	wzr, [x0, #80]
  42ce10:	strb	wzr, [x0, #84]
  42ce14:	str	wzr, [x0, #120]
  42ce18:	str	wzr, [x0, #144]
  42ce1c:	str	xzr, [x0, #152]
  42ce20:	strh	wzr, [x0, #160]
  42ce24:	b	42cd2c <ferror@plt+0x29f5c>
  42ce28:	stp	x29, x30, [sp, #-32]!
  42ce2c:	mov	x29, sp
  42ce30:	stp	x19, x20, [sp, #16]
  42ce34:	mov	w19, w1
  42ce38:	mov	w1, w2
  42ce3c:	mov	w2, w3
  42ce40:	ldr	w3, [x0, #8]
  42ce44:	mov	x20, x0
  42ce48:	cmp	w3, w19
  42ce4c:	b.ne	42ce6c <ferror@plt+0x2a09c>  // b.any
  42ce50:	mov	x3, #0x0                   	// #0
  42ce54:	bl	42cd2c <ferror@plt+0x29f5c>
  42ce58:	cbnz	w19, 42ce60 <ferror@plt+0x2a090>
  42ce5c:	strb	wzr, [x20, #84]
  42ce60:	ldp	x19, x20, [sp, #16]
  42ce64:	ldp	x29, x30, [sp], #32
  42ce68:	ret
  42ce6c:	sbfiz	x4, x19, #4, #32
  42ce70:	cmp	w19, #0x2
  42ce74:	add	x5, x0, #0x8
  42ce78:	b.gt	42ce8c <ferror@plt+0x2a0bc>
  42ce7c:	add	x4, x4, #0x8
  42ce80:	add	x4, x5, x4
  42ce84:	stp	w1, w2, [x4]
  42ce88:	b	42ce58 <ferror@plt+0x2a088>
  42ce8c:	sub	x6, x4, #0x30
  42ce90:	ldr	x4, [x5, #64]
  42ce94:	add	x4, x4, x6
  42ce98:	b	42ce84 <ferror@plt+0x2a0b4>
  42ce9c:	ldr	w2, [x0, #120]
  42cea0:	cbz	w2, 42cedc <ferror@plt+0x2a10c>
  42cea4:	sub	w2, w2, #0x1
  42cea8:	add	x3, x0, #0x78
  42ceac:	cmp	w2, #0x1
  42ceb0:	sxtw	x1, w2
  42ceb4:	b.gt	42cec8 <ferror@plt+0x2a0f8>
  42ceb8:	add	x0, x1, #0x1
  42cebc:	add	x0, x3, x0, lsl #3
  42cec0:	ldr	x0, [x0]
  42cec4:	ret
  42cec8:	mov	x0, #0xfffffffffffffff0    	// #-16
  42cecc:	add	x2, x0, w2, sxtw #3
  42ced0:	ldr	x0, [x3, #32]
  42ced4:	add	x0, x0, x2
  42ced8:	b	42cec0 <ferror@plt+0x2a0f0>
  42cedc:	mov	x0, #0x0                   	// #0
  42cee0:	b	42cec4 <ferror@plt+0x2a0f4>
  42cee4:	stp	x29, x30, [sp, #-64]!
  42cee8:	mov	x29, sp
  42ceec:	stp	x19, x20, [sp, #16]
  42cef0:	mov	x19, x0
  42cef4:	mov	w0, #0x1                   	// #1
  42cef8:	stp	x21, x22, [sp, #32]
  42cefc:	add	x22, x19, #0x78
  42cf00:	mov	w20, #0x0                   	// #0
  42cf04:	strb	w0, [x19, #160]
  42cf08:	str	x23, [sp, #48]
  42cf0c:	mov	x23, #0xfffffffffffffff0    	// #-16
  42cf10:	ldr	w0, [x19, #120]
  42cf14:	cmp	w20, w0
  42cf18:	b.cs	42cf64 <ferror@plt+0x2a194>  // b.hs, b.nlast
  42cf1c:	sxtw	x1, w20
  42cf20:	cmp	w20, #0x1
  42cf24:	b.gt	42cf54 <ferror@plt+0x2a184>
  42cf28:	add	x1, x1, #0x1
  42cf2c:	add	x1, x22, x1, lsl #3
  42cf30:	ldr	x21, [x1]
  42cf34:	cbz	x21, 42cf4c <ferror@plt+0x2a17c>
  42cf38:	ldr	x0, [x21, #8]
  42cf3c:	bl	402b30 <free@plt>
  42cf40:	mov	x0, x21
  42cf44:	mov	x1, #0x18                  	// #24
  42cf48:	bl	445778 <_obstack_memory_used@@Base+0xd74>
  42cf4c:	add	w20, w20, #0x1
  42cf50:	b	42cf10 <ferror@plt+0x2a140>
  42cf54:	ldr	x2, [x22, #32]
  42cf58:	add	x1, x23, w20, sxtw #3
  42cf5c:	add	x1, x2, x1
  42cf60:	b	42cf30 <ferror@plt+0x2a160>
  42cf64:	ldp	x21, x22, [sp, #32]
  42cf68:	ldr	x23, [sp, #48]
  42cf6c:	str	wzr, [x19, #120]
  42cf70:	ldp	x19, x20, [sp, #16]
  42cf74:	ldp	x29, x30, [sp], #64
  42cf78:	ret
  42cf7c:	ldrb	w2, [x0, #160]
  42cf80:	cbnz	w2, 42cfac <ferror@plt+0x2a1dc>
  42cf84:	mov	w3, #0x60000000            	// #1610612736
  42cf88:	cmp	w1, w3
  42cf8c:	b.ls	42cfac <ferror@plt+0x2a1dc>  // b.plast
  42cf90:	stp	x29, x30, [sp, #-16]!
  42cf94:	mov	x29, sp
  42cf98:	bl	42cee4 <ferror@plt+0x2a114>
  42cf9c:	mov	w2, #0x1                   	// #1
  42cfa0:	mov	w0, w2
  42cfa4:	ldp	x29, x30, [sp], #16
  42cfa8:	ret
  42cfac:	mov	w0, w2
  42cfb0:	ret
  42cfb4:	stp	x29, x30, [sp, #-32]!
  42cfb8:	mov	x29, sp
  42cfbc:	stp	x19, x20, [sp, #16]
  42cfc0:	mov	x19, x0
  42cfc4:	mov	x20, x3
  42cfc8:	mov	x0, x3
  42cfcc:	stp	w1, w2, [x19]
  42cfd0:	bl	445390 <_obstack_memory_used@@Base+0x98c>
  42cfd4:	str	x0, [x19, #8]
  42cfd8:	mov	x0, x20
  42cfdc:	bl	402700 <strlen@plt>
  42cfe0:	str	x0, [x19, #16]
  42cfe4:	ldp	x19, x20, [sp, #16]
  42cfe8:	ldp	x29, x30, [sp], #32
  42cfec:	ret
  42cff0:	stp	x29, x30, [sp, #-112]!
  42cff4:	mov	x29, sp
  42cff8:	stp	x19, x20, [sp, #16]
  42cffc:	mov	x20, x0
  42d000:	ldr	w0, [x0]
  42d004:	mov	w19, w2
  42d008:	add	x8, sp, #0x30
  42d00c:	stp	x21, x22, [sp, #32]
  42d010:	mov	x21, x1
  42d014:	mov	w1, #0x1                   	// #1
  42d018:	bl	417204 <ferror@plt+0x14434>
  42d01c:	ldr	x22, [sp, #48]
  42d020:	cmp	x22, x21
  42d024:	b.eq	42d03c <ferror@plt+0x2a26c>  // b.none
  42d028:	mov	w0, #0x0                   	// #0
  42d02c:	ldp	x19, x20, [sp, #16]
  42d030:	ldp	x21, x22, [sp, #32]
  42d034:	ldp	x29, x30, [sp], #112
  42d038:	ret
  42d03c:	ldr	w0, [sp, #56]
  42d040:	cmp	w0, w19
  42d044:	b.gt	42d028 <ferror@plt+0x2a258>
  42d048:	ldr	w0, [x20, #4]
  42d04c:	add	x8, sp, #0x50
  42d050:	mov	w1, #0x1                   	// #1
  42d054:	bl	417204 <ferror@plt+0x14434>
  42d058:	ldr	x0, [sp, #80]
  42d05c:	cmp	x0, x22
  42d060:	b.ne	42d028 <ferror@plt+0x2a258>  // b.any
  42d064:	ldr	w0, [sp, #88]
  42d068:	cmp	w0, w19
  42d06c:	cset	w0, ge  // ge = tcont
  42d070:	b	42d02c <ferror@plt+0x2a25c>
  42d074:	stp	x29, x30, [sp, #-48]!
  42d078:	mov	x29, sp
  42d07c:	stp	x19, x20, [sp, #16]
  42d080:	mov	x19, x0
  42d084:	ldr	w0, [x0, #4]
  42d088:	str	x21, [sp, #32]
  42d08c:	cmp	w0, w1
  42d090:	b.ne	42d0f4 <ferror@plt+0x2a324>  // b.any
  42d094:	str	w2, [x19, #4]
  42d098:	mov	x21, x3
  42d09c:	mov	x0, x3
  42d0a0:	bl	402700 <strlen@plt>
  42d0a4:	mov	x20, x0
  42d0a8:	ldp	x0, x1, [x19, #8]
  42d0ac:	add	x1, x1, #0x1
  42d0b0:	add	x1, x1, x20
  42d0b4:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  42d0b8:	ldr	x3, [x19, #16]
  42d0bc:	str	x0, [x19, #8]
  42d0c0:	mov	x2, x20
  42d0c4:	mov	x1, x21
  42d0c8:	add	x0, x0, x3
  42d0cc:	bl	4026a0 <memcpy@plt>
  42d0d0:	ldp	x0, x2, [x19, #8]
  42d0d4:	add	x20, x20, x2
  42d0d8:	str	x20, [x19, #16]
  42d0dc:	strb	wzr, [x0, x20]
  42d0e0:	mov	w0, #0x1                   	// #1
  42d0e4:	ldp	x19, x20, [sp, #16]
  42d0e8:	ldr	x21, [sp, #32]
  42d0ec:	ldp	x29, x30, [sp], #48
  42d0f0:	ret
  42d0f4:	mov	w0, #0x0                   	// #0
  42d0f8:	b	42d0e4 <ferror@plt+0x2a314>
  42d0fc:	ldr	x1, [x0, #16]
  42d100:	cbz	x1, 42d11c <ferror@plt+0x2a34c>
  42d104:	ldr	x0, [x0, #8]
  42d108:	add	x0, x0, x1
  42d10c:	ldurb	w0, [x0, #-1]
  42d110:	cmp	w0, #0xa
  42d114:	cset	w0, eq  // eq = none
  42d118:	ret
  42d11c:	mov	w0, #0x0                   	// #0
  42d120:	b	42d118 <ferror@plt+0x2a348>
  42d124:	stp	x29, x30, [sp, #-128]!
  42d128:	mov	x29, sp
  42d12c:	stp	x19, x20, [sp, #16]
  42d130:	mov	x19, x0
  42d134:	mov	w20, w2
  42d138:	stp	x21, x22, [sp, #32]
  42d13c:	mov	w21, w1
  42d140:	str	x23, [sp, #48]
  42d144:	mov	x23, x3
  42d148:	bl	42cf7c <ferror@plt+0x2a1ac>
  42d14c:	tst	w0, #0xff
  42d150:	b.ne	42d270 <ferror@plt+0x2a4a0>  // b.any
  42d154:	mov	w1, w20
  42d158:	mov	x0, x19
  42d15c:	bl	42cf7c <ferror@plt+0x2a1ac>
  42d160:	tst	w0, #0xff
  42d164:	b.ne	42d270 <ferror@plt+0x2a4a0>  // b.any
  42d168:	add	x8, sp, #0x40
  42d16c:	mov	w0, w21
  42d170:	mov	w1, #0x1                   	// #1
  42d174:	bl	417204 <ferror@plt+0x14434>
  42d178:	mov	w0, w20
  42d17c:	mov	w1, #0x1                   	// #1
  42d180:	ldr	w22, [sp, #76]
  42d184:	add	x8, sp, #0x60
  42d188:	bl	417204 <ferror@plt+0x14434>
  42d18c:	ldr	x1, [sp, #64]
  42d190:	ldr	x0, [sp, #96]
  42d194:	cmp	x1, x0
  42d198:	b.eq	42d1b4 <ferror@plt+0x2a3e4>  // b.none
  42d19c:	mov	x0, x19
  42d1a0:	ldp	x19, x20, [sp, #16]
  42d1a4:	ldp	x21, x22, [sp, #32]
  42d1a8:	ldr	x23, [sp, #48]
  42d1ac:	ldp	x29, x30, [sp], #128
  42d1b0:	b	42cee4 <ferror@plt+0x2a114>
  42d1b4:	ldr	w1, [sp, #72]
  42d1b8:	ldr	w0, [sp, #104]
  42d1bc:	cmp	w1, w0
  42d1c0:	b.ne	42d19c <ferror@plt+0x2a3cc>  // b.any
  42d1c4:	ldr	w0, [sp, #108]
  42d1c8:	cmp	w0, w22
  42d1cc:	b.lt	42d19c <ferror@plt+0x2a3cc>  // b.tstop
  42d1d0:	mov	x0, x23
  42d1d4:	mov	w1, #0xa                   	// #10
  42d1d8:	bl	402b60 <strchr@plt>
  42d1dc:	cbz	x0, 42d1f8 <ferror@plt+0x2a428>
  42d1e0:	cmp	w21, w20
  42d1e4:	b.ne	42d19c <ferror@plt+0x2a3cc>  // b.any
  42d1e8:	cmp	w22, #0x1
  42d1ec:	b.ne	42d19c <ferror@plt+0x2a3cc>  // b.any
  42d1f0:	ldrb	w0, [x0, #1]
  42d1f4:	cbnz	w0, 42d19c <ferror@plt+0x2a3cc>
  42d1f8:	mov	x0, x19
  42d1fc:	bl	42ce9c <ferror@plt+0x2a0cc>
  42d200:	mov	x4, x0
  42d204:	cbnz	x0, 42d248 <ferror@plt+0x2a478>
  42d208:	mov	x0, #0x18                  	// #24
  42d20c:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  42d210:	mov	w2, w20
  42d214:	mov	x22, x0
  42d218:	mov	w1, w21
  42d21c:	mov	x3, x23
  42d220:	bl	42cfb4 <ferror@plt+0x2a1e4>
  42d224:	add	x20, x19, #0x78
  42d228:	ldr	w1, [x19, #120]
  42d22c:	add	w0, w1, #0x1
  42d230:	str	w0, [x19, #120]
  42d234:	cmp	w1, #0x1
  42d238:	b.gt	42d284 <ferror@plt+0x2a4b4>
  42d23c:	add	x1, x20, w1, sxtw #3
  42d240:	str	x22, [x1, #8]
  42d244:	b	42d270 <ferror@plt+0x2a4a0>
  42d248:	bl	42d0fc <ferror@plt+0x2a32c>
  42d24c:	tst	w0, #0xff
  42d250:	b.ne	42d208 <ferror@plt+0x2a438>  // b.any
  42d254:	mov	x3, x23
  42d258:	mov	w2, w20
  42d25c:	mov	w1, w21
  42d260:	mov	x0, x4
  42d264:	bl	42d074 <ferror@plt+0x2a2a4>
  42d268:	tst	w0, #0xff
  42d26c:	b.eq	42d208 <ferror@plt+0x2a438>  // b.none
  42d270:	ldp	x19, x20, [sp, #16]
  42d274:	ldp	x21, x22, [sp, #32]
  42d278:	ldr	x23, [sp, #48]
  42d27c:	ldp	x29, x30, [sp], #128
  42d280:	ret
  42d284:	ldr	x0, [x20, #32]
  42d288:	sub	w19, w1, #0x2
  42d28c:	cbnz	x0, 42d2b0 <ferror@plt+0x2a4e0>
  42d290:	mov	w0, #0x10                  	// #16
  42d294:	str	w0, [x20, #24]
  42d298:	mov	x0, #0x80                  	// #128
  42d29c:	bl	44526c <_obstack_memory_used@@Base+0x868>
  42d2a0:	str	x0, [x20, #32]
  42d2a4:	ldr	x0, [x20, #32]
  42d2a8:	str	x22, [x0, w19, sxtw #3]
  42d2ac:	b	42d270 <ferror@plt+0x2a4a0>
  42d2b0:	ldr	w1, [x20, #24]
  42d2b4:	cmp	w19, w1
  42d2b8:	b.lt	42d2a4 <ferror@plt+0x2a4d4>  // b.tstop
  42d2bc:	lsl	w1, w1, #1
  42d2c0:	str	w1, [x20, #24]
  42d2c4:	sbfiz	x1, x1, #3, #32
  42d2c8:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  42d2cc:	b	42d2a0 <ferror@plt+0x2a4d0>
  42d2d0:	stp	x29, x30, [sp, #-32]!
  42d2d4:	mov	x29, sp
  42d2d8:	stp	x19, x20, [sp, #16]
  42d2dc:	mov	x19, x0
  42d2e0:	mov	x20, x2
  42d2e4:	ldr	x0, [x0]
  42d2e8:	bl	42bbd0 <ferror@plt+0x28e00>
  42d2ec:	mov	x1, x0
  42d2f0:	mov	x3, x20
  42d2f4:	mov	w2, w0
  42d2f8:	mov	x0, x19
  42d2fc:	ldp	x19, x20, [sp, #16]
  42d300:	ldp	x29, x30, [sp], #32
  42d304:	b	42d124 <ferror@plt+0x2a354>
  42d308:	mov	x4, x1
  42d30c:	mov	x3, x0
  42d310:	stp	x29, x30, [sp, #-16]!
  42d314:	mov	w1, #0x0                   	// #0
  42d318:	mov	x29, sp
  42d31c:	bl	42cc18 <ferror@plt+0x29e48>
  42d320:	mov	w1, w0
  42d324:	ldp	x29, x30, [sp], #16
  42d328:	mov	x2, x4
  42d32c:	mov	x0, x3
  42d330:	b	42d2d0 <ferror@plt+0x2a500>
  42d334:	stp	x29, x30, [sp, #-48]!
  42d338:	mov	x29, sp
  42d33c:	stp	x19, x20, [sp, #16]
  42d340:	mov	x19, x0
  42d344:	ldr	x0, [x0]
  42d348:	str	x21, [sp, #32]
  42d34c:	mov	x21, x2
  42d350:	bl	42bbd0 <ferror@plt+0x28e00>
  42d354:	lsr	x20, x0, #32
  42d358:	ldr	x0, [x19]
  42d35c:	mov	w1, w20
  42d360:	mov	w2, #0x1                   	// #1
  42d364:	bl	42c000 <ferror@plt+0x29230>
  42d368:	cmp	w20, w0
  42d36c:	b.ne	42d384 <ferror@plt+0x2a5b4>  // b.any
  42d370:	mov	x0, x19
  42d374:	ldp	x19, x20, [sp, #16]
  42d378:	ldr	x21, [sp, #32]
  42d37c:	ldp	x29, x30, [sp], #48
  42d380:	b	42cee4 <ferror@plt+0x2a114>
  42d384:	mov	w2, w0
  42d388:	mov	x3, x21
  42d38c:	mov	w1, w0
  42d390:	mov	x0, x19
  42d394:	ldp	x19, x20, [sp, #16]
  42d398:	ldr	x21, [sp, #32]
  42d39c:	ldp	x29, x30, [sp], #48
  42d3a0:	b	42d124 <ferror@plt+0x2a354>
  42d3a4:	mov	x4, x1
  42d3a8:	mov	x3, x0
  42d3ac:	stp	x29, x30, [sp, #-16]!
  42d3b0:	mov	w1, #0x0                   	// #0
  42d3b4:	mov	x29, sp
  42d3b8:	bl	42cc18 <ferror@plt+0x29e48>
  42d3bc:	mov	w1, w0
  42d3c0:	ldp	x29, x30, [sp], #16
  42d3c4:	mov	x2, x4
  42d3c8:	mov	x0, x3
  42d3cc:	b	42d334 <ferror@plt+0x2a564>
  42d3d0:	stp	x29, x30, [sp, #-48]!
  42d3d4:	mov	x29, sp
  42d3d8:	stp	x19, x20, [sp, #16]
  42d3dc:	mov	x19, x0
  42d3e0:	mov	x20, x1
  42d3e4:	ldr	x0, [x0]
  42d3e8:	stp	x21, x22, [sp, #32]
  42d3ec:	mov	x22, x2
  42d3f0:	bl	42bcb4 <ferror@plt+0x28ee4>
  42d3f4:	mov	w21, w0
  42d3f8:	ldr	x0, [x19]
  42d3fc:	lsr	x1, x20, #32
  42d400:	bl	42bcb4 <ferror@plt+0x28ee4>
  42d404:	mov	w20, w0
  42d408:	mov	w1, w0
  42d40c:	mov	w2, #0x1                   	// #1
  42d410:	ldr	x0, [x19]
  42d414:	bl	42c000 <ferror@plt+0x29230>
  42d418:	cmp	w20, w0
  42d41c:	b.ne	42d434 <ferror@plt+0x2a664>  // b.any
  42d420:	mov	x0, x19
  42d424:	ldp	x19, x20, [sp, #16]
  42d428:	ldp	x21, x22, [sp, #32]
  42d42c:	ldp	x29, x30, [sp], #48
  42d430:	b	42cee4 <ferror@plt+0x2a114>
  42d434:	mov	w2, w0
  42d438:	mov	x3, x22
  42d43c:	mov	w1, w21
  42d440:	mov	x0, x19
  42d444:	ldp	x19, x20, [sp, #16]
  42d448:	ldp	x21, x22, [sp, #32]
  42d44c:	ldp	x29, x30, [sp], #48
  42d450:	b	42d124 <ferror@plt+0x2a354>
  42d454:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x195fc>
  42d458:	add	x2, x2, #0xaff
  42d45c:	b	42d3d0 <ferror@plt+0x2a600>
  42d460:	stp	x29, x30, [sp, #-32]!
  42d464:	mov	x29, sp
  42d468:	str	x19, [sp, #16]
  42d46c:	mov	x19, x0
  42d470:	ldr	x0, [x0]
  42d474:	bl	42bbd0 <ferror@plt+0x28e00>
  42d478:	mov	x1, x0
  42d47c:	mov	x0, x19
  42d480:	ldr	x19, [sp, #16]
  42d484:	ldp	x29, x30, [sp], #32
  42d488:	b	42d454 <ferror@plt+0x2a684>
  42d48c:	mov	x3, x0
  42d490:	stp	x29, x30, [sp, #-16]!
  42d494:	mov	w1, #0x0                   	// #0
  42d498:	mov	x29, sp
  42d49c:	bl	42cc18 <ferror@plt+0x29e48>
  42d4a0:	mov	w1, w0
  42d4a4:	ldp	x29, x30, [sp], #16
  42d4a8:	mov	x0, x3
  42d4ac:	b	42d460 <ferror@plt+0x2a690>
  42d4b0:	stp	x29, x30, [sp, #-32]!
  42d4b4:	mov	x29, sp
  42d4b8:	stp	x19, x20, [sp, #16]
  42d4bc:	mov	x19, x0
  42d4c0:	mov	x20, x2
  42d4c4:	ldr	x0, [x0]
  42d4c8:	bl	42bbd0 <ferror@plt+0x28e00>
  42d4cc:	mov	x1, x0
  42d4d0:	mov	x2, x20
  42d4d4:	mov	x0, x19
  42d4d8:	ldp	x19, x20, [sp, #16]
  42d4dc:	ldp	x29, x30, [sp], #32
  42d4e0:	b	42d3d0 <ferror@plt+0x2a600>
  42d4e4:	mov	x4, x1
  42d4e8:	mov	x3, x0
  42d4ec:	stp	x29, x30, [sp, #-16]!
  42d4f0:	mov	w1, #0x0                   	// #0
  42d4f4:	mov	x29, sp
  42d4f8:	bl	42cc18 <ferror@plt+0x29e48>
  42d4fc:	mov	w1, w0
  42d500:	ldp	x29, x30, [sp], #16
  42d504:	mov	x2, x4
  42d508:	mov	x0, x3
  42d50c:	b	42d4b0 <ferror@plt+0x2a6e0>
  42d510:	ldr	w1, [x0, #12]
  42d514:	mov	w2, #0x18                  	// #24
  42d518:	ldr	x0, [x0]
  42d51c:	sub	w1, w1, #0x1
  42d520:	smaddl	x0, w1, w2, x0
  42d524:	ret
  42d528:	ldrb	w3, [x0, #6]
  42d52c:	mov	w2, #0x1                   	// #1
  42d530:	lsl	w2, w2, w3
  42d534:	ldr	w3, [x0]
  42d538:	sub	w2, w2, #0x1
  42d53c:	ldrb	w0, [x0, #7]
  42d540:	sub	w1, w1, w3
  42d544:	and	w2, w2, w1
  42d548:	lsr	w0, w2, w0
  42d54c:	ret
  42d550:	mov	x4, x0
  42d554:	cmp	w2, #0x1
  42d558:	b.eq	42d570 <ferror@plt+0x2a7a0>  // b.none
  42d55c:	ldp	x0, x5, [x0]
  42d560:	cmp	w2, #0x2
  42d564:	csel	x0, x0, x5, ne  // ne = any
  42d568:	cbnz	x0, 42d580 <ferror@plt+0x2a7b0>
  42d56c:	ret
  42d570:	add	x0, x0, #0x10
  42d574:	cbnz	x3, 42d5a4 <ferror@plt+0x2a7d4>
  42d578:	add	x0, x0, x1, lsl #3
  42d57c:	b	42d56c <ferror@plt+0x2a79c>
  42d580:	cbz	x3, 42d578 <ferror@plt+0x2a7a8>
  42d584:	cbnz	w2, 42d598 <ferror@plt+0x2a7c8>
  42d588:	ldr	x2, [x4, #32]
  42d58c:	add	x2, x2, x1, lsl #2
  42d590:	str	x2, [x3]
  42d594:	b	42d578 <ferror@plt+0x2a7a8>
  42d598:	b.ne	42d5a4 <ferror@plt+0x2a7d4>  // b.any
  42d59c:	ldr	x2, [x4, #40]
  42d5a0:	b	42d58c <ferror@plt+0x2a7bc>
  42d5a4:	ldr	x2, [x0, x1, lsl #3]
  42d5a8:	b	42d590 <ferror@plt+0x2a7c0>
  42d5ac:	stp	x29, x30, [sp, #-32]!
  42d5b0:	mov	x7, x1
  42d5b4:	mov	w6, w2
  42d5b8:	tst	w5, #0xff
  42d5bc:	mov	x29, sp
  42d5c0:	mov	x1, x3
  42d5c4:	add	x3, sp, #0x18
  42d5c8:	mov	w2, w4
  42d5cc:	csel	x3, x3, xzr, ne  // ne = any
  42d5d0:	str	xzr, [sp, #24]
  42d5d4:	bl	42d550 <ferror@plt+0x2a780>
  42d5d8:	str	x7, [x0]
  42d5dc:	ldr	x0, [sp, #24]
  42d5e0:	cbz	x0, 42d5e8 <ferror@plt+0x2a818>
  42d5e4:	str	w6, [x0]
  42d5e8:	ldp	x29, x30, [sp], #32
  42d5ec:	ret
  42d5f0:	and	w1, w1, #0xff
  42d5f4:	strb	w1, [x0]
  42d5f8:	str	w2, [x0, #4]
  42d5fc:	mov	x6, x0
  42d600:	stp	x4, xzr, [x0, #8]
  42d604:	cbz	w1, 42d638 <ferror@plt+0x2a868>
  42d608:	stp	x29, x30, [sp, #-32]!
  42d60c:	mov	x0, x3
  42d610:	mov	x1, #0x0                   	// #0
  42d614:	mov	x29, sp
  42d618:	add	x3, sp, #0x18
  42d61c:	str	xzr, [sp, #24]
  42d620:	bl	42d550 <ferror@plt+0x2a780>
  42d624:	cbz	x0, 42d62c <ferror@plt+0x2a85c>
  42d628:	ldr	x0, [sp, #24]
  42d62c:	str	x0, [x6, #16]
  42d630:	ldp	x29, x30, [sp], #32
  42d634:	ret
  42d638:	ret
  42d63c:	cbz	x0, 42d654 <ferror@plt+0x2a884>
  42d640:	ldr	w1, [x0, #48]
  42d644:	ldr	x0, [x0, #40]
  42d648:	cmp	w1, #0x2
  42d64c:	b.ne	42d654 <ferror@plt+0x2a884>  // b.any
  42d650:	ldr	x0, [x0]
  42d654:	ret
  42d658:	stp	x29, x30, [sp, #-32]!
  42d65c:	mov	x29, sp
  42d660:	str	x19, [sp, #16]
  42d664:	mov	x19, x1
  42d668:	bl	427c18 <ferror@plt+0x24e48>
  42d66c:	strh	wzr, [x0, #6]
  42d670:	mov	w1, #0x53                  	// #83
  42d674:	strb	w1, [x0, #4]
  42d678:	str	x19, [x0, #8]
  42d67c:	ldr	x19, [sp, #16]
  42d680:	ldp	x29, x30, [sp], #32
  42d684:	ret
  42d688:	stp	x29, x30, [sp, #-48]!
  42d68c:	mov	x29, sp
  42d690:	stp	x19, x20, [sp, #16]
  42d694:	mov	x20, x0
  42d698:	str	x21, [sp, #32]
  42d69c:	lsl	x21, x1, #3
  42d6a0:	cbz	x2, 42d6b4 <ferror@plt+0x2a8e4>
  42d6a4:	mov	x19, x2
  42d6a8:	lsl	x0, x1, #4
  42d6ac:	bl	44526c <_obstack_memory_used@@Base+0x868>
  42d6b0:	str	x0, [x19]
  42d6b4:	mov	x1, x21
  42d6b8:	mov	x0, x20
  42d6bc:	ldp	x19, x20, [sp, #16]
  42d6c0:	ldr	x21, [sp, #32]
  42d6c4:	ldp	x29, x30, [sp], #48
  42d6c8:	b	4286b0 <ferror@plt+0x258e0>
  42d6cc:	stp	x29, x30, [sp, #-32]!
  42d6d0:	add	x1, x1, x2
  42d6d4:	mov	x29, sp
  42d6d8:	ldr	x4, [x0, #56]
  42d6dc:	ldr	x3, [x4, #24]
  42d6e0:	ldr	x4, [x4, #16]
  42d6e4:	str	x19, [sp, #16]
  42d6e8:	mov	x19, x0
  42d6ec:	sub	x3, x3, x4
  42d6f0:	cmp	x3, x1
  42d6f4:	b.cs	42d700 <ferror@plt+0x2a930>  // b.hs, b.nlast
  42d6f8:	add	x1, x0, #0x38
  42d6fc:	bl	42885c <ferror@plt+0x25a8c>
  42d700:	ldr	x0, [x19, #56]
  42d704:	ldr	x19, [sp, #16]
  42d708:	ldp	x29, x30, [sp], #32
  42d70c:	ldr	x0, [x0, #16]
  42d710:	ret
  42d714:	ldr	w1, [x0, #4]
  42d718:	tst	w1, #0xfffffffd
  42d71c:	b.ne	42d740 <ferror@plt+0x2a970>  // b.any
  42d720:	ldr	x1, [x0, #8]
  42d724:	add	x1, x1, #0x8
  42d728:	str	x1, [x0, #8]
  42d72c:	ldrb	w1, [x0]
  42d730:	cbz	w1, 42d740 <ferror@plt+0x2a970>
  42d734:	ldr	x1, [x0, #16]
  42d738:	add	x1, x1, #0x4
  42d73c:	str	x1, [x0, #16]
  42d740:	ret
  42d744:	stp	x29, x30, [sp, #-32]!
  42d748:	mov	x29, sp
  42d74c:	str	x19, [sp, #16]
  42d750:	mov	x19, x0
  42d754:	ldr	x0, [x0]
  42d758:	ldr	x0, [x0]
  42d75c:	cbnz	x0, 42d784 <ferror@plt+0x2a9b4>
  42d760:	mov	x0, #0x38                  	// #56
  42d764:	bl	44526c <_obstack_memory_used@@Base+0x868>
  42d768:	ldr	x1, [x19]
  42d76c:	stp	xzr, xzr, [x0]
  42d770:	str	x1, [x0, #8]
  42d774:	stp	xzr, xzr, [x0, #16]
  42d778:	stp	xzr, xzr, [x0, #32]
  42d77c:	str	xzr, [x0, #48]
  42d780:	str	x0, [x1]
  42d784:	str	x0, [x19]
  42d788:	ldr	x19, [sp, #16]
  42d78c:	ldp	x29, x30, [sp], #32
  42d790:	ret
  42d794:	stp	x29, x30, [sp, #-64]!
  42d798:	mov	x6, x0
  42d79c:	mov	x29, sp
  42d7a0:	stp	x19, x20, [sp, #16]
  42d7a4:	stp	x21, x22, [sp, #32]
  42d7a8:	mov	x22, x4
  42d7ac:	mov	w21, w5
  42d7b0:	stp	x23, x24, [sp, #48]
  42d7b4:	mov	x24, x2
  42d7b8:	mov	x23, x3
  42d7bc:	cbnz	x1, 42d814 <ferror@plt+0x2aa44>
  42d7c0:	ldr	x0, [x0, #136]
  42d7c4:	bl	42d63c <ferror@plt+0x2a86c>
  42d7c8:	mov	x20, x0
  42d7cc:	add	x0, x6, #0x88
  42d7d0:	bl	42d744 <ferror@plt+0x2a974>
  42d7d4:	mov	x19, x0
  42d7d8:	mov	w0, #0x2                   	// #2
  42d7dc:	add	x21, x22, w21, uxtw #3
  42d7e0:	str	x24, [x19, #32]
  42d7e4:	str	w0, [x19, #48]
  42d7e8:	mov	x0, #0x18                  	// #24
  42d7ec:	bl	44526c <_obstack_memory_used@@Base+0x868>
  42d7f0:	stp	x20, x23, [x0]
  42d7f4:	str	x23, [x0, #16]
  42d7f8:	ldp	x23, x24, [sp, #48]
  42d7fc:	stp	x22, x21, [x19, #16]
  42d800:	str	x0, [x19, #40]
  42d804:	ldp	x19, x20, [sp, #16]
  42d808:	ldp	x21, x22, [sp, #32]
  42d80c:	ldp	x29, x30, [sp], #64
  42d810:	ret
  42d814:	mov	x20, x1
  42d818:	b	42d7cc <ferror@plt+0x2a9fc>
  42d81c:	stp	x29, x30, [sp, #-32]!
  42d820:	mov	x29, sp
  42d824:	stp	x19, x20, [sp, #16]
  42d828:	mov	x19, x1
  42d82c:	mov	x20, x2
  42d830:	bl	427c18 <ferror@plt+0x24e48>
  42d834:	ldr	x1, [x19]
  42d838:	ldrb	w1, [x1, #4]
  42d83c:	strb	w1, [x0, #4]
  42d840:	ldr	x1, [x19]
  42d844:	ldp	x2, x3, [x1, #8]
  42d848:	stp	x2, x3, [x0, #8]
  42d84c:	ldrh	w2, [x20]
  42d850:	ldr	x1, [x19]
  42d854:	tbz	w2, #3, 42d874 <ferror@plt+0x2aaa4>
  42d858:	ldrh	w2, [x1, #6]
  42d85c:	orr	w2, w2, #0x8
  42d860:	strh	w2, [x0, #6]
  42d864:	str	x0, [x19]
  42d868:	ldp	x19, x20, [sp, #16]
  42d86c:	ldp	x29, x30, [sp], #32
  42d870:	ret
  42d874:	ldrh	w2, [x1, #6]
  42d878:	and	w2, w2, #0xfffffff7
  42d87c:	and	w2, w2, #0xffff
  42d880:	b	42d860 <ferror@plt+0x2aa90>
  42d884:	stp	x29, x30, [sp, #-64]!
  42d888:	mov	x29, sp
  42d88c:	stp	x19, x20, [sp, #16]
  42d890:	ldr	x19, [x0, #16]
  42d894:	str	x23, [sp, #48]
  42d898:	mov	x23, x2
  42d89c:	mov	w2, w3
  42d8a0:	mov	w3, w4
  42d8a4:	stp	x21, x22, [sp, #32]
  42d8a8:	mov	x21, x0
  42d8ac:	ldr	x4, [x0, #24]
  42d8b0:	cmp	x19, x4
  42d8b4:	b.ls	42d8d0 <ferror@plt+0x2ab00>  // b.plast
  42d8b8:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x235fc>
  42d8bc:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x235fc>
  42d8c0:	add	x2, x2, #0xb28
  42d8c4:	add	x0, x0, #0xb3e
  42d8c8:	mov	w1, #0x953                 	// #2387
  42d8cc:	bl	402de0 <ferror@plt+0x10>
  42d8d0:	mov	x22, x1
  42d8d4:	cbz	x1, 42d900 <ferror@plt+0x2ab30>
  42d8d8:	ldr	x20, [x21, #8]
  42d8dc:	mov	x0, x5
  42d8e0:	sub	x20, x19, x20
  42d8e4:	ubfx	x20, x20, #3, #32
  42d8e8:	lsl	x20, x20, #2
  42d8ec:	cbz	x5, 42d8fc <ferror@plt+0x2ab2c>
  42d8f0:	mov	w1, w6
  42d8f4:	bl	42b4e8 <ferror@plt+0x28718>
  42d8f8:	mov	w2, w0
  42d8fc:	str	w2, [x22, x20]
  42d900:	mov	x0, x19
  42d904:	ldp	x19, x20, [sp, #16]
  42d908:	str	x23, [x0], #8
  42d90c:	ldr	x23, [sp, #48]
  42d910:	str	x0, [x21, #16]
  42d914:	ldp	x21, x22, [sp, #32]
  42d918:	ldp	x29, x30, [sp], #64
  42d91c:	ret
  42d920:	ldrb	w2, [x0, #19]
  42d924:	mov	x1, x0
  42d928:	ldr	w0, [x0, #12]
  42d92c:	tbz	w2, #6, 42d950 <ferror@plt+0x2ab80>
  42d930:	mov	x4, #0x18                  	// #24
  42d934:	sub	w3, w0, #0x1
  42d938:	cbz	w0, 42d950 <ferror@plt+0x2ab80>
  42d93c:	mov	w2, w3
  42d940:	madd	x2, x2, x4, x1
  42d944:	ldrb	w2, [x2, #28]
  42d948:	cmp	w2, #0x26
  42d94c:	b.eq	42d954 <ferror@plt+0x2ab84>  // b.none
  42d950:	ret
  42d954:	mov	w0, w3
  42d958:	b	42d934 <ferror@plt+0x2ab64>
  42d95c:	cbz	x1, 42d980 <ferror@plt+0x2abb0>
  42d960:	ldr	x2, [x0, #16]
  42d964:	ldr	x0, [x0, #8]
  42d968:	cmp	x2, x0
  42d96c:	b.eq	42d980 <ferror@plt+0x2abb0>  // b.none
  42d970:	sub	x2, x2, #0x8
  42d974:	cmp	x1, x2
  42d978:	cset	w0, eq  // eq = none
  42d97c:	ret
  42d980:	mov	w0, #0x0                   	// #0
  42d984:	b	42d97c <ferror@plt+0x2abac>
  42d988:	stp	x29, x30, [sp, #-48]!
  42d98c:	mov	x29, sp
  42d990:	stp	x19, x20, [sp, #16]
  42d994:	mov	x20, x0
  42d998:	ldrb	w0, [x1, #18]
  42d99c:	str	x21, [sp, #32]
  42d9a0:	and	w0, w0, #0x3
  42d9a4:	cmp	w0, #0x2
  42d9a8:	b.ne	42d9f0 <ferror@plt+0x2ac20>  // b.any
  42d9ac:	ldr	x21, [x1, #24]
  42d9b0:	mov	x19, x1
  42d9b4:	ldrb	w0, [x21, #19]
  42d9b8:	tbnz	w0, #5, 42d9f0 <ferror@plt+0x2ac20>
  42d9bc:	ldr	w1, [x21, #8]
  42d9c0:	ldr	x0, [x20, #40]
  42d9c4:	bl	42b8e4 <ferror@plt+0x28b14>
  42d9c8:	ldr	w0, [x0, #20]
  42d9cc:	cbnz	w0, 42d9f0 <ferror@plt+0x2ac20>
  42d9d0:	ldr	w2, [x21, #8]
  42d9d4:	adrp	x4, 468000 <_obstack_memory_used@@Base+0x235fc>
  42d9d8:	ldr	x5, [x19]
  42d9dc:	add	x4, x4, #0xb53
  42d9e0:	mov	x0, x20
  42d9e4:	mov	w3, #0x0                   	// #0
  42d9e8:	mov	w1, #0xe                   	// #14
  42d9ec:	bl	42183c <ferror@plt+0x1ea6c>
  42d9f0:	mov	w0, #0x1                   	// #1
  42d9f4:	ldp	x19, x20, [sp, #16]
  42d9f8:	ldr	x21, [sp, #32]
  42d9fc:	ldp	x29, x30, [sp], #48
  42da00:	ret
  42da04:	mov	w2, w2
  42da08:	mov	x4, #0x0                   	// #0
  42da0c:	mov	w5, #0x5c                  	// #92
  42da10:	cmp	x4, x2
  42da14:	b.eq	42da48 <ferror@plt+0x2ac78>  // b.none
  42da18:	ldrb	w3, [x1, x4]
  42da1c:	cmp	w3, #0x22
  42da20:	b.eq	42da38 <ferror@plt+0x2ac68>  // b.none
  42da24:	cmp	w3, #0x5c
  42da28:	b.eq	42da38 <ferror@plt+0x2ac68>  // b.none
  42da2c:	cmp	w3, #0xa
  42da30:	b.ne	42da3c <ferror@plt+0x2ac6c>  // b.any
  42da34:	mov	w3, #0x6e                  	// #110
  42da38:	strb	w5, [x0], #1
  42da3c:	add	x4, x4, #0x1
  42da40:	strb	w3, [x0], #1
  42da44:	b	42da10 <ferror@plt+0x2ac40>
  42da48:	ret
  42da4c:	stp	x29, x30, [sp, #-80]!
  42da50:	mov	x29, sp
  42da54:	stp	x19, x20, [sp, #16]
  42da58:	mov	x19, x0
  42da5c:	ldr	w0, [x1, #24]
  42da60:	stp	x21, x22, [sp, #32]
  42da64:	mov	x21, x1
  42da68:	cmp	w0, #0xa
  42da6c:	stp	x23, x24, [sp, #48]
  42da70:	b.hi	42da90 <ferror@plt+0x2acc0>  // b.pmore
  42da74:	mov	w1, w2
  42da78:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x245fc>
  42da7c:	add	x2, x2, #0x330
  42da80:	ldrh	w2, [x2, w0, uxtw #1]
  42da84:	adr	x3, 42da90 <ferror@plt+0x2acc0>
  42da88:	add	x2, x3, w2, sxth #2
  42da8c:	br	x2
  42da90:	ldr	x3, [x21]
  42da94:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x235fc>
  42da98:	mov	x0, x19
  42da9c:	add	x2, x2, #0xb6a
  42daa0:	mov	w1, #0x4                   	// #4
  42daa4:	bl	421610 <ferror@plt+0x1e840>
  42daa8:	mov	w20, #0x1                   	// #1
  42daac:	b	42dc1c <ferror@plt+0x2ae4c>
  42dab0:	ldrb	w0, [x19, #1134]
  42dab4:	cbz	w0, 42dad0 <ferror@plt+0x2ad00>
  42dab8:	ldr	x3, [x21]
  42dabc:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x235fc>
  42dac0:	mov	x0, x19
  42dac4:	add	x2, x2, #0xb86
  42dac8:	mov	w1, #0x14                  	// #20
  42dacc:	bl	42167c <ferror@plt+0x1e8ac>
  42dad0:	mov	x0, x19
  42dad4:	bl	426900 <ferror@plt+0x23b30>
  42dad8:	ldr	x1, [x0, #88]
  42dadc:	mov	x20, x0
  42dae0:	cbnz	x1, 42db38 <ferror@plt+0x2ad68>
  42dae4:	bl	426908 <ferror@plt+0x23b38>
  42dae8:	cbz	x0, 42db38 <ferror@plt+0x2ad68>
  42daec:	bl	426884 <ferror@plt+0x23ab4>
  42daf0:	cbz	x0, 42db44 <ferror@plt+0x2ad74>
  42daf4:	add	x0, x0, #0x58
  42daf8:	bl	402820 <localtime@plt>
  42dafc:	cbz	x0, 42db44 <ferror@plt+0x2ad74>
  42db00:	bl	402c50 <asctime@plt>
  42db04:	mov	x23, x0
  42db08:	bl	402700 <strlen@plt>
  42db0c:	add	x1, x0, #0x2
  42db10:	mov	x22, x0
  42db14:	mov	x0, x19
  42db18:	bl	4288e0 <ferror@plt+0x25b10>
  42db1c:	mov	x21, x0
  42db20:	mov	w24, #0x22                  	// #34
  42db24:	strb	w24, [x0], #1
  42db28:	mov	x1, x23
  42db2c:	bl	402bd0 <strcpy@plt>
  42db30:	strb	w24, [x21, x22]
  42db34:	str	x21, [x20, #88]
  42db38:	ldr	x21, [x20, #88]
  42db3c:	cbnz	x21, 42dbd0 <ferror@plt+0x2ae00>
  42db40:	b	42daa8 <ferror@plt+0x2acd8>
  42db44:	mov	x0, x19
  42db48:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x235fc>
  42db4c:	mov	w1, #0x0                   	// #0
  42db50:	add	x2, x2, #0xbb3
  42db54:	bl	421ab4 <ferror@plt+0x1ece4>
  42db58:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x235fc>
  42db5c:	add	x0, x0, #0xbd6
  42db60:	str	x0, [x20, #88]
  42db64:	b	42db38 <ferror@plt+0x2ad68>
  42db68:	cmp	w0, #0x2
  42db6c:	b.ne	42dbe8 <ferror@plt+0x2ae18>  // b.any
  42db70:	ldr	x0, [x19, #40]
  42db74:	ldr	w1, [x0, #60]
  42db78:	bl	42bde8 <ferror@plt+0x29018>
  42db7c:	mov	x20, x0
  42db80:	ldr	x1, [x19, #1080]
  42db84:	cbz	x1, 42db94 <ferror@plt+0x2adc4>
  42db88:	mov	x0, x20
  42db8c:	blr	x1
  42db90:	mov	x20, x0
  42db94:	mov	x0, x20
  42db98:	bl	402700 <strlen@plt>
  42db9c:	lsl	w1, w0, #1
  42dba0:	mov	x22, x0
  42dba4:	add	w1, w1, #0x3
  42dba8:	mov	x0, x19
  42dbac:	bl	4288e0 <ferror@plt+0x25b10>
  42dbb0:	mov	x21, x0
  42dbb4:	mov	w1, #0x22                  	// #34
  42dbb8:	strb	w1, [x0], #1
  42dbbc:	mov	w2, w22
  42dbc0:	mov	x1, x20
  42dbc4:	bl	42da04 <ferror@plt+0x2ac34>
  42dbc8:	mov	w1, #0x22                  	// #34
  42dbcc:	strh	w1, [x0]
  42dbd0:	mov	x0, x21
  42dbd4:	ldp	x19, x20, [sp, #16]
  42dbd8:	ldp	x21, x22, [sp, #32]
  42dbdc:	ldp	x23, x24, [sp, #48]
  42dbe0:	ldp	x29, x30, [sp], #80
  42dbe4:	ret
  42dbe8:	ldr	x0, [x19, #288]
  42dbec:	bl	42687c <ferror@plt+0x23aac>
  42dbf0:	mov	x20, x0
  42dbf4:	cbnz	x0, 42db80 <ferror@plt+0x2adb0>
  42dbf8:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x235fc>
  42dbfc:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x235fc>
  42dc00:	add	x2, x2, #0xbf1
  42dc04:	add	x0, x0, #0xb3e
  42dc08:	mov	w1, #0x1c5                 	// #453
  42dc0c:	bl	402de0 <ferror@plt+0x10>
  42dc10:	ldr	x0, [x19, #40]
  42dc14:	ldr	w20, [x0, #48]
  42dc18:	sub	w20, w20, #0x1
  42dc1c:	mov	x0, x19
  42dc20:	mov	x1, #0x15                  	// #21
  42dc24:	bl	4288e0 <ferror@plt+0x25b10>
  42dc28:	mov	x21, x0
  42dc2c:	mov	w2, w20
  42dc30:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  42dc34:	add	x1, x1, #0x5a5
  42dc38:	bl	4027a0 <sprintf@plt>
  42dc3c:	b	42dbd0 <ferror@plt+0x2ae00>
  42dc40:	ldrb	w2, [x19, #1160]
  42dc44:	ldr	x0, [x19, #40]
  42dc48:	cbz	w2, 42dc60 <ferror@plt+0x2ae90>
  42dc4c:	ldr	w1, [x0, #60]
  42dc50:	ldr	x0, [x19, #40]
  42dc54:	bl	42bd88 <ferror@plt+0x28fb8>
  42dc58:	mov	w20, w0
  42dc5c:	b	42dc1c <ferror@plt+0x2ae4c>
  42dc60:	mov	x3, #0x0                   	// #0
  42dc64:	mov	w2, #0x0                   	// #0
  42dc68:	bl	42bec4 <ferror@plt+0x290f4>
  42dc6c:	mov	w1, w0
  42dc70:	b	42dc50 <ferror@plt+0x2ae80>
  42dc74:	ldr	x0, [x19]
  42dc78:	cbz	x0, 42daa8 <ferror@plt+0x2acd8>
  42dc7c:	ldrb	w0, [x0, #106]
  42dc80:	cmp	w0, #0x0
  42dc84:	cset	w20, eq  // eq = none
  42dc88:	b	42dc1c <ferror@plt+0x2ae4c>
  42dc8c:	ldrb	w0, [x19, #1134]
  42dc90:	cbz	w0, 42dcac <ferror@plt+0x2aedc>
  42dc94:	ldr	x3, [x21]
  42dc98:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x235fc>
  42dc9c:	mov	x0, x19
  42dca0:	add	x2, x2, #0xb86
  42dca4:	mov	w1, #0x14                  	// #20
  42dca8:	bl	42167c <ferror@plt+0x1e8ac>
  42dcac:	ldr	x0, [x19, #640]
  42dcb0:	cbnz	x0, 42dd48 <ferror@plt+0x2af78>
  42dcb4:	ldr	x0, [x19, #656]
  42dcb8:	cmn	x0, #0x2
  42dcbc:	b.ne	42dcd4 <ferror@plt+0x2af04>  // b.any
  42dcc0:	ldr	x1, [x19, #1056]
  42dcc4:	cbz	x1, 42dd5c <ferror@plt+0x2af8c>
  42dcc8:	mov	x0, x19
  42dccc:	blr	x1
  42dcd0:	str	x0, [x19, #656]
  42dcd4:	ldr	x0, [x19, #656]
  42dcd8:	tbnz	x0, #63, 42dd5c <ferror@plt+0x2af8c>
  42dcdc:	add	x0, x19, #0x290
  42dce0:	bl	402980 <gmtime@plt>
  42dce4:	mov	x20, x0
  42dce8:	cbz	x0, 42dd90 <ferror@plt+0x2afc0>
  42dcec:	mov	x1, #0xe                   	// #14
  42dcf0:	mov	x0, x19
  42dcf4:	bl	4288e0 <ferror@plt+0x25b10>
  42dcf8:	ldrsw	x2, [x20, #16]
  42dcfc:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  42dd00:	add	x1, x1, #0x348
  42dd04:	ldr	w3, [x20, #12]
  42dd08:	ldr	w4, [x20, #20]
  42dd0c:	str	x0, [x19, #640]
  42dd10:	ldr	x2, [x1, x2, lsl #3]
  42dd14:	add	w4, w4, #0x76c
  42dd18:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x235fc>
  42dd1c:	add	x1, x1, #0xc09
  42dd20:	bl	4027a0 <sprintf@plt>
  42dd24:	mov	x1, #0xb                   	// #11
  42dd28:	mov	x0, x19
  42dd2c:	bl	4288e0 <ferror@plt+0x25b10>
  42dd30:	ldp	w4, w3, [x20]
  42dd34:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x235fc>
  42dd38:	ldr	w2, [x20, #8]
  42dd3c:	add	x1, x1, #0xc16
  42dd40:	str	x0, [x19, #648]
  42dd44:	bl	4027a0 <sprintf@plt>
  42dd48:	ldr	w0, [x21, #24]
  42dd4c:	cmp	w0, #0x1
  42dd50:	b.ne	42ddc0 <ferror@plt+0x2aff0>  // b.any
  42dd54:	ldr	x21, [x19, #640]
  42dd58:	b	42db3c <ferror@plt+0x2ad6c>
  42dd5c:	bl	402cf0 <__errno_location@plt>
  42dd60:	mov	x20, x0
  42dd64:	mov	x0, #0x0                   	// #0
  42dd68:	str	wzr, [x20]
  42dd6c:	bl	402880 <time@plt>
  42dd70:	str	x0, [sp, #72]
  42dd74:	cmn	x0, #0x1
  42dd78:	b.ne	42dd84 <ferror@plt+0x2afb4>  // b.any
  42dd7c:	ldr	w0, [x20]
  42dd80:	cbnz	w0, 42dd90 <ferror@plt+0x2afc0>
  42dd84:	add	x0, sp, #0x48
  42dd88:	bl	402820 <localtime@plt>
  42dd8c:	b	42dce4 <ferror@plt+0x2af14>
  42dd90:	mov	x0, x19
  42dd94:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x235fc>
  42dd98:	mov	w1, #0x0                   	// #0
  42dd9c:	add	x2, x2, #0xc27
  42dda0:	bl	421ab4 <ferror@plt+0x1ece4>
  42dda4:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x235fc>
  42dda8:	add	x0, x0, #0xc49
  42ddac:	str	x0, [x19, #640]
  42ddb0:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x235fc>
  42ddb4:	add	x0, x0, #0xc57
  42ddb8:	str	x0, [x19, #648]
  42ddbc:	b	42dd48 <ferror@plt+0x2af78>
  42ddc0:	ldr	x21, [x19, #648]
  42ddc4:	b	42db3c <ferror@plt+0x2ad6c>
  42ddc8:	ldrb	w0, [x19, #1244]
  42ddcc:	cbz	w0, 42ddec <ferror@plt+0x2b01c>
  42ddd0:	ldrb	w0, [x19, #16]
  42ddd4:	cbz	w0, 42ddec <ferror@plt+0x2b01c>
  42ddd8:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x235fc>
  42dddc:	mov	x0, x19
  42dde0:	add	x2, x2, #0xc62
  42dde4:	mov	w1, #0x3                   	// #3
  42dde8:	bl	421610 <ferror@plt+0x1e840>
  42ddec:	ldr	w20, [x19, #1376]
  42ddf0:	add	w0, w20, #0x1
  42ddf4:	str	w0, [x19, #1376]
  42ddf8:	b	42dc1c <ferror@plt+0x2ae4c>
  42ddfc:	ldr	x1, [x19, #1040]
  42de00:	mov	x0, x19
  42de04:	blr	x1
  42de08:	b	42dc58 <ferror@plt+0x2ae88>
  42de0c:	ldrh	w4, [x1, #16]
  42de10:	cmp	w4, w3
  42de14:	b.eq	42defc <ferror@plt+0x2b12c>  // b.none
  42de18:	stp	x29, x30, [sp, #-48]!
  42de1c:	mov	x29, sp
  42de20:	stp	x19, x20, [sp, #16]
  42de24:	mov	x19, x0
  42de28:	mov	x20, x2
  42de2c:	str	x21, [sp, #32]
  42de30:	mov	x21, x1
  42de34:	b.ls	42dee0 <ferror@plt+0x2b110>  // b.plast
  42de38:	add	w1, w3, #0x1
  42de3c:	cmp	w4, w1
  42de40:	b.ne	42de98 <ferror@plt+0x2b0c8>  // b.any
  42de44:	ldrb	w1, [x21, #19]
  42de48:	tbz	w1, #3, 42de98 <ferror@plt+0x2b0c8>
  42de4c:	ldrb	w2, [x0, #1154]
  42de50:	cbz	w2, 42de78 <ferror@plt+0x2b0a8>
  42de54:	tbnz	w1, #4, 42de78 <ferror@plt+0x2b0a8>
  42de58:	ldrb	w1, [x0, #1167]
  42de5c:	cbnz	w1, 42de78 <ferror@plt+0x2b0a8>
  42de60:	ldrb	w1, [x0, #1120]
  42de64:	cbz	w1, 42de8c <ferror@plt+0x2b0bc>
  42de68:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x235fc>
  42de6c:	add	x2, x2, #0xc9f
  42de70:	mov	w1, #0x2                   	// #2
  42de74:	bl	421610 <ferror@plt+0x1e840>
  42de78:	mov	w0, #0x1                   	// #1
  42de7c:	ldp	x19, x20, [sp, #16]
  42de80:	ldr	x21, [sp, #32]
  42de84:	ldp	x29, x30, [sp], #48
  42de88:	ret
  42de8c:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x235fc>
  42de90:	add	x2, x2, #0xcea
  42de94:	b	42de70 <ferror@plt+0x2b0a0>
  42de98:	mov	w5, w3
  42de9c:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x235fc>
  42dea0:	ldr	x3, [x20]
  42dea4:	add	x2, x2, #0xd33
  42dea8:	mov	x0, x19
  42deac:	mov	w1, #0x3                   	// #3
  42deb0:	bl	421610 <ferror@plt+0x1e840>
  42deb4:	ldr	w2, [x21, #8]
  42deb8:	cmp	w2, #0x2
  42debc:	b.ls	42ded8 <ferror@plt+0x2b108>  // b.plast
  42dec0:	ldr	x4, [x20]
  42dec4:	adrp	x3, 468000 <_obstack_memory_used@@Base+0x235fc>
  42dec8:	mov	x0, x19
  42decc:	add	x3, x3, #0xd99
  42ded0:	mov	w1, #0x5                   	// #5
  42ded4:	bl	421998 <ferror@plt+0x1ebc8>
  42ded8:	mov	w0, #0x0                   	// #0
  42dedc:	b	42de7c <ferror@plt+0x2b0ac>
  42dee0:	mov	w5, w4
  42dee4:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x235fc>
  42dee8:	mov	w4, w3
  42deec:	add	x2, x2, #0xd67
  42def0:	mov	w1, #0x3                   	// #3
  42def4:	ldr	x3, [x20]
  42def8:	b	42deb0 <ferror@plt+0x2b0e0>
  42defc:	mov	w0, #0x1                   	// #1
  42df00:	ret
  42df04:	stp	x29, x30, [sp, #-48]!
  42df08:	mov	x4, x0
  42df0c:	mov	x29, sp
  42df10:	stp	x19, x20, [sp, #16]
  42df14:	mov	w20, w3
  42df18:	str	x21, [sp, #32]
  42df1c:	mov	x21, x2
  42df20:	cbnz	x1, 42df60 <ferror@plt+0x2b190>
  42df24:	ldr	x0, [x0, #136]
  42df28:	bl	42d63c <ferror@plt+0x2a86c>
  42df2c:	mov	x19, x0
  42df30:	add	x0, x4, #0x88
  42df34:	bl	42d744 <ferror@plt+0x2a974>
  42df38:	mov	w2, #0x18                  	// #24
  42df3c:	mov	w1, #0x1                   	// #1
  42df40:	stp	xzr, x19, [x0, #32]
  42df44:	umaddl	x20, w20, w2, x21
  42df48:	stp	x21, x20, [x0, #16]
  42df4c:	str	w1, [x0, #48]
  42df50:	ldp	x19, x20, [sp, #16]
  42df54:	ldr	x21, [sp, #32]
  42df58:	ldp	x29, x30, [sp], #48
  42df5c:	ret
  42df60:	mov	x19, x1
  42df64:	b	42df30 <ferror@plt+0x2b160>
  42df68:	stp	x29, x30, [sp, #-80]!
  42df6c:	mov	x29, sp
  42df70:	stp	x19, x20, [sp, #16]
  42df74:	mov	x19, x0
  42df78:	stp	x21, x22, [sp, #32]
  42df7c:	str	x23, [sp, #48]
  42df80:	mov	w23, w2
  42df84:	mov	w2, w3
  42df88:	ldr	w3, [x1, #24]
  42df8c:	cmp	w3, #0x7
  42df90:	b.ne	42dfbc <ferror@plt+0x2b1ec>  // b.any
  42df94:	ldrb	w1, [x0, #16]
  42df98:	cbnz	w1, 42e104 <ferror@plt+0x2b334>
  42df9c:	mov	w1, w23
  42dfa0:	bl	420fbc <ferror@plt+0x1e1ec>
  42dfa4:	mov	sp, x29
  42dfa8:	ldp	x19, x20, [sp, #16]
  42dfac:	ldp	x21, x22, [sp, #32]
  42dfb0:	ldr	x23, [sp, #48]
  42dfb4:	ldp	x29, x30, [sp], #80
  42dfb8:	ret
  42dfbc:	mov	x20, x1
  42dfc0:	bl	42da4c <ferror@plt+0x2ac7c>
  42dfc4:	mov	x22, x0
  42dfc8:	bl	402700 <strlen@plt>
  42dfcc:	mov	x21, x0
  42dfd0:	add	x0, x0, #0x10
  42dfd4:	and	x0, x0, #0xfffffffffffffff0
  42dfd8:	mov	x2, x21
  42dfdc:	sub	sp, sp, x0
  42dfe0:	mov	x1, x22
  42dfe4:	mov	x4, sp
  42dfe8:	mov	x0, x4
  42dfec:	bl	4026a0 <memcpy@plt>
  42dff0:	mov	x4, x0
  42dff4:	mov	x2, x21
  42dff8:	mov	x1, x4
  42dffc:	mov	w0, #0xa                   	// #10
  42e000:	mov	w3, #0x1                   	// #1
  42e004:	strb	w0, [x4, x21]
  42e008:	mov	x0, x19
  42e00c:	bl	420888 <ferror@plt+0x1dab8>
  42e010:	mov	x0, x19
  42e014:	bl	4272e8 <ferror@plt+0x24518>
  42e018:	mov	x0, x19
  42e01c:	bl	427c18 <ferror@plt+0x24e48>
  42e020:	str	x0, [x19, #448]
  42e024:	mov	x0, x19
  42e028:	bl	429618 <ferror@plt+0x26848>
  42e02c:	mov	x21, x0
  42e030:	ldr	x0, [x19, #136]
  42e034:	ldr	w0, [x0, #48]
  42e038:	str	w23, [x21]
  42e03c:	cmp	w0, #0x2
  42e040:	b.ne	42e0ec <ferror@plt+0x2b31c>  // b.any
  42e044:	add	x2, x29, #0x48
  42e048:	mov	x1, #0x1                   	// #1
  42e04c:	mov	x0, x19
  42e050:	str	xzr, [x29, #72]
  42e054:	bl	42d688 <ferror@plt+0x2a8b8>
  42e058:	mov	x22, x0
  42e05c:	ldr	x0, [x19, #40]
  42e060:	mov	w2, w23
  42e064:	mov	x1, x20
  42e068:	mov	w3, #0x1                   	// #1
  42e06c:	bl	42b448 <ferror@plt+0x28678>
  42e070:	mov	x5, x0
  42e074:	ldr	x1, [x19, #40]
  42e078:	mov	x2, x21
  42e07c:	mov	x0, x22
  42e080:	mov	w6, #0x0                   	// #0
  42e084:	ldr	w4, [x1, #112]
  42e088:	ldr	x1, [x29, #72]
  42e08c:	mov	w3, w4
  42e090:	bl	42d884 <ferror@plt+0x2aab4>
  42e094:	ldr	x4, [x22, #8]
  42e098:	mov	x2, x22
  42e09c:	ldr	x3, [x29, #72]
  42e0a0:	mov	x1, x20
  42e0a4:	mov	x0, x19
  42e0a8:	mov	w5, #0x1                   	// #1
  42e0ac:	bl	42d794 <ferror@plt+0x2a9c4>
  42e0b0:	ldr	x0, [x19]
  42e0b4:	ldr	x1, [x0]
  42e0b8:	ldr	x0, [x0, #32]
  42e0bc:	cmp	x1, x0
  42e0c0:	b.eq	42e0dc <ferror@plt+0x2b30c>  // b.none
  42e0c4:	ldr	x3, [x20]
  42e0c8:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x235fc>
  42e0cc:	mov	x0, x19
  42e0d0:	add	x2, x2, #0xb6a
  42e0d4:	mov	w1, #0x4                   	// #4
  42e0d8:	bl	421610 <ferror@plt+0x1e840>
  42e0dc:	mov	x0, x19
  42e0e0:	bl	420978 <ferror@plt+0x1dba8>
  42e0e4:	mov	w0, #0x1                   	// #1
  42e0e8:	b	42dfa4 <ferror@plt+0x2b1d4>
  42e0ec:	mov	x2, x21
  42e0f0:	mov	x0, x19
  42e0f4:	mov	w3, #0x1                   	// #1
  42e0f8:	mov	x1, #0x0                   	// #0
  42e0fc:	bl	42df04 <ferror@plt+0x2b134>
  42e100:	b	42e0b0 <ferror@plt+0x2b2e0>
  42e104:	mov	w0, #0x0                   	// #0
  42e108:	b	42dfa4 <ferror@plt+0x2b1d4>
  42e10c:	stp	x29, x30, [sp, #-48]!
  42e110:	add	x0, x0, #0x88
  42e114:	mov	x29, sp
  42e118:	stp	x19, x20, [sp, #16]
  42e11c:	mov	x20, x1
  42e120:	mov	x19, x2
  42e124:	str	x21, [sp, #32]
  42e128:	mov	x21, x3
  42e12c:	bl	42d744 <ferror@plt+0x2a974>
  42e130:	str	x19, [x0, #16]
  42e134:	mov	w1, #0x1                   	// #1
  42e138:	add	x19, x19, x21
  42e13c:	stp	xzr, x20, [x0, #32]
  42e140:	str	w1, [x0, #48]
  42e144:	ldr	x21, [sp, #32]
  42e148:	str	x19, [x0, #24]
  42e14c:	ldrh	w0, [x20, #18]
  42e150:	orr	w0, w0, #0x40
  42e154:	strh	w0, [x20, #18]
  42e158:	ldp	x19, x20, [sp, #16]
  42e15c:	ldp	x29, x30, [sp], #48
  42e160:	ret
  42e164:	stp	x29, x30, [sp, #-48]!
  42e168:	mov	x29, sp
  42e16c:	stp	x19, x20, [sp, #16]
  42e170:	ldr	x19, [x0, #136]
  42e174:	stp	x21, x22, [sp, #32]
  42e178:	mov	x21, x0
  42e17c:	add	x0, x0, #0x50
  42e180:	cmp	x19, x0
  42e184:	b.ne	42e1a0 <ferror@plt+0x2b3d0>  // b.any
  42e188:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x235fc>
  42e18c:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x235fc>
  42e190:	add	x2, x2, #0xdb1
  42e194:	add	x0, x0, #0xb3e
  42e198:	mov	w1, #0x9eb                 	// #2539
  42e19c:	bl	402de0 <ferror@plt+0x10>
  42e1a0:	ldr	x20, [x19, #40]
  42e1a4:	cbz	x20, 42e220 <ferror@plt+0x2b450>
  42e1a8:	ldr	w0, [x19, #48]
  42e1ac:	cmp	w0, #0x2
  42e1b0:	b.ne	42e1e4 <ferror@plt+0x2b414>  // b.any
  42e1b4:	ldr	x0, [x19, #32]
  42e1b8:	ldr	x22, [x20]
  42e1bc:	cbz	x0, 42e1cc <ferror@plt+0x2b3fc>
  42e1c0:	ldr	x0, [x20, #8]
  42e1c4:	cbz	x0, 42e1cc <ferror@plt+0x2b3fc>
  42e1c8:	bl	402b30 <free@plt>
  42e1cc:	mov	x0, x20
  42e1d0:	bl	402b30 <free@plt>
  42e1d4:	str	xzr, [x19, #40]
  42e1d8:	mov	x20, #0x0                   	// #0
  42e1dc:	cbz	x22, 42e208 <ferror@plt+0x2b438>
  42e1e0:	mov	x20, x22
  42e1e4:	ldr	x0, [x19, #8]
  42e1e8:	bl	42d63c <ferror@plt+0x2a86c>
  42e1ec:	cmp	x20, x0
  42e1f0:	b.eq	42e208 <ferror@plt+0x2b438>  // b.none
  42e1f4:	ldrh	w0, [x20, #18]
  42e1f8:	ubfx	x1, x0, #2, #8
  42e1fc:	and	w1, w1, #0xffffffef
  42e200:	bfi	w0, w1, #2, #8
  42e204:	strh	w0, [x20, #18]
  42e208:	ldr	x0, [x21, #184]
  42e20c:	cmp	x0, x20
  42e210:	b.ne	42e220 <ferror@plt+0x2b450>  // b.any
  42e214:	ldr	x0, [x19, #8]
  42e218:	cbnz	x0, 42e220 <ferror@plt+0x2b450>
  42e21c:	str	xzr, [x21, #184]
  42e220:	ldr	x0, [x19, #32]
  42e224:	cbz	x0, 42e22c <ferror@plt+0x2b45c>
  42e228:	bl	4288b0 <ferror@plt+0x25ae0>
  42e22c:	ldr	x0, [x19, #8]
  42e230:	str	x0, [x21, #136]
  42e234:	ldp	x21, x22, [sp, #32]
  42e238:	str	xzr, [x0]
  42e23c:	mov	x0, x19
  42e240:	ldp	x19, x20, [sp, #16]
  42e244:	ldp	x29, x30, [sp], #48
  42e248:	b	402b30 <free@plt>
  42e24c:	ldr	x1, [x0, #136]
  42e250:	ldr	x0, [x1, #40]
  42e254:	ldr	w1, [x1, #48]
  42e258:	cmp	w1, #0x2
  42e25c:	b.ne	42e264 <ferror@plt+0x2b494>  // b.any
  42e260:	ldr	x0, [x0]
  42e264:	cbz	x0, 42e27c <ferror@plt+0x2b4ac>
  42e268:	ldr	x0, [x0, #24]
  42e26c:	cbz	x0, 42e27c <ferror@plt+0x2b4ac>
  42e270:	ldrb	w0, [x0, #19]
  42e274:	ubfx	x0, x0, #4, #1
  42e278:	ret
  42e27c:	mov	w0, #0x0                   	// #0
  42e280:	b	42e278 <ferror@plt+0x2b4a8>
  42e284:	ldr	w2, [x0, #496]
  42e288:	add	w2, w2, w1
  42e28c:	str	w2, [x0, #496]
  42e290:	sub	w1, w1, #0x1
  42e294:	cmn	w1, #0x1
  42e298:	b.eq	42e2d0 <ferror@plt+0x2b500>  // b.none
  42e29c:	ldr	x3, [x0, #488]
  42e2a0:	ldr	x2, [x0, #448]
  42e2a4:	ldr	x4, [x3, #16]
  42e2a8:	sub	x2, x2, #0x18
  42e2ac:	str	x2, [x0, #448]
  42e2b0:	cmp	x2, x4
  42e2b4:	b.ne	42e290 <ferror@plt+0x2b4c0>  // b.any
  42e2b8:	ldr	x2, [x3, #8]
  42e2bc:	cbz	x2, 42e290 <ferror@plt+0x2b4c0>
  42e2c0:	str	x2, [x0, #488]
  42e2c4:	ldr	x2, [x2, #24]
  42e2c8:	str	x2, [x0, #448]
  42e2cc:	b	42e290 <ferror@plt+0x2b4c0>
  42e2d0:	ret
  42e2d4:	ldr	x2, [x0, #136]
  42e2d8:	ldr	x4, [x2, #8]
  42e2dc:	cbnz	x4, 42e2e4 <ferror@plt+0x2b514>
  42e2e0:	b	42e284 <ferror@plt+0x2b4b4>
  42e2e4:	stp	x29, x30, [sp, #-16]!
  42e2e8:	cmp	w1, #0x1
  42e2ec:	mov	x29, sp
  42e2f0:	b.eq	42e30c <ferror@plt+0x2b53c>  // b.none
  42e2f4:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x235fc>
  42e2f8:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x235fc>
  42e2fc:	add	x2, x2, #0xdc2
  42e300:	add	x0, x0, #0xb3e
  42e304:	mov	w1, #0xb8f                 	// #2959
  42e308:	bl	402de0 <ferror@plt+0x10>
  42e30c:	ldr	w0, [x2, #48]
  42e310:	cmp	w0, #0x1
  42e314:	b.ne	42e32c <ferror@plt+0x2b55c>  // b.any
  42e318:	ldr	x0, [x2, #16]
  42e31c:	sub	x0, x0, #0x18
  42e320:	str	x0, [x2, #16]
  42e324:	ldp	x29, x30, [sp], #16
  42e328:	ret
  42e32c:	cbnz	w0, 42e33c <ferror@plt+0x2b56c>
  42e330:	ldr	x0, [x2, #16]
  42e334:	sub	x0, x0, #0x8
  42e338:	b	42e320 <ferror@plt+0x2b550>
  42e33c:	cmp	w0, #0x2
  42e340:	b.ne	42e380 <ferror@plt+0x2b5b0>  // b.any
  42e344:	ldr	x0, [x2, #16]
  42e348:	sub	x0, x0, #0x8
  42e34c:	str	x0, [x2, #16]
  42e350:	ldr	x0, [x2, #40]
  42e354:	cbz	x0, 42e368 <ferror@plt+0x2b598>
  42e358:	ldr	x1, [x0, #16]
  42e35c:	sub	x1, x1, #0x4
  42e360:	str	x1, [x0, #16]
  42e364:	b	42e324 <ferror@plt+0x2b554>
  42e368:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x235fc>
  42e36c:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x235fc>
  42e370:	add	x2, x2, #0xdc2
  42e374:	add	x0, x0, #0xb3e
  42e378:	mov	w1, #0xb9e                 	// #2974
  42e37c:	bl	402de0 <ferror@plt+0x10>
  42e380:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x235fc>
  42e384:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x235fc>
  42e388:	add	x2, x2, #0xdc2
  42e38c:	add	x0, x0, #0xb3e
  42e390:	mov	w1, #0xba1                 	// #2977
  42e394:	bl	402de0 <ferror@plt+0x10>
  42e398:	stp	x29, x30, [sp, #-80]!
  42e39c:	mov	x29, sp
  42e3a0:	stp	x19, x20, [sp, #16]
  42e3a4:	mov	x19, x0
  42e3a8:	ldr	x0, [x2]
  42e3ac:	stp	x21, x22, [sp, #32]
  42e3b0:	mov	x21, x2
  42e3b4:	mov	x22, x3
  42e3b8:	stp	x23, x24, [sp, #48]
  42e3bc:	mov	w23, w1
  42e3c0:	stp	x25, x26, [sp, #64]
  42e3c4:	bl	427dbc <ferror@plt+0x24fec>
  42e3c8:	mov	w20, w0
  42e3cc:	mov	x0, x22
  42e3d0:	bl	427dbc <ferror@plt+0x24fec>
  42e3d4:	add	w20, w20, w0
  42e3d8:	mov	w3, #0x1                   	// #1
  42e3dc:	add	w20, w20, #0x1
  42e3e0:	mov	x0, x19
  42e3e4:	add	x20, x20, #0xf
  42e3e8:	ldr	x1, [x21]
  42e3ec:	and	x20, x20, #0x1fffffff0
  42e3f0:	sub	sp, sp, x20
  42e3f4:	mov	x25, sp
  42e3f8:	mov	x2, x25
  42e3fc:	bl	427e74 <ferror@plt+0x250a4>
  42e400:	mov	x24, x0
  42e404:	ldr	x0, [x21]
  42e408:	ldrb	w0, [x0, #4]
  42e40c:	cmp	w0, #0x7
  42e410:	b.ne	42e520 <ferror@plt+0x2b750>  // b.any
  42e414:	ldrb	w0, [x22, #4]
  42e418:	mov	x2, x24
  42e41c:	cbz	w0, 42e428 <ferror@plt+0x2b658>
  42e420:	mov	w0, #0x20                  	// #32
  42e424:	strb	w0, [x2], #1
  42e428:	ldrb	w0, [x22, #4]
  42e42c:	cmp	w0, #0x53
  42e430:	b.eq	42e448 <ferror@plt+0x2b678>  // b.none
  42e434:	mov	x1, x22
  42e438:	mov	x0, x19
  42e43c:	mov	w3, #0x1                   	// #1
  42e440:	bl	427e74 <ferror@plt+0x250a4>
  42e444:	mov	x2, x0
  42e448:	mov	x1, x25
  42e44c:	mov	w0, #0xa                   	// #10
  42e450:	strb	w0, [x2]
  42e454:	sub	x2, x2, x25
  42e458:	mov	w3, #0x1                   	// #1
  42e45c:	mov	x0, x19
  42e460:	bl	420888 <ferror@plt+0x1dab8>
  42e464:	mov	x0, x19
  42e468:	bl	4272e8 <ferror@plt+0x24518>
  42e46c:	mov	x0, x19
  42e470:	bl	427c18 <ferror@plt+0x24e48>
  42e474:	str	x0, [x19, #448]
  42e478:	mov	x0, x19
  42e47c:	bl	429618 <ferror@plt+0x26848>
  42e480:	mov	x20, x0
  42e484:	ldr	x0, [x19]
  42e488:	ldr	x1, [x0]
  42e48c:	ldr	x0, [x0, #32]
  42e490:	cmp	x1, x0
  42e494:	b.eq	42e528 <ferror@plt+0x2b758>  // b.none
  42e498:	ldr	w26, [x20]
  42e49c:	mov	x0, x19
  42e4a0:	bl	420978 <ferror@plt+0x1dba8>
  42e4a4:	mov	x0, x19
  42e4a8:	mov	w1, #0x1                   	// #1
  42e4ac:	bl	42e2d4 <ferror@plt+0x2b504>
  42e4b0:	strb	wzr, [x24]
  42e4b4:	ldr	x0, [x21]
  42e4b8:	ldp	x2, x3, [x0]
  42e4bc:	stp	x2, x3, [x20]
  42e4c0:	ldr	x0, [x0, #16]
  42e4c4:	str	x0, [x20, #16]
  42e4c8:	ldrh	w0, [x20, #6]
  42e4cc:	str	x20, [x21]
  42e4d0:	and	w0, w0, #0xfffffff7
  42e4d4:	strh	w0, [x20, #6]
  42e4d8:	ldr	w0, [x19, #1116]
  42e4dc:	str	w26, [x20]
  42e4e0:	cmp	w0, #0x15
  42e4e4:	b.eq	42e518 <ferror@plt+0x2b748>  // b.none
  42e4e8:	mov	x1, x22
  42e4ec:	mov	x0, x19
  42e4f0:	bl	42947c <ferror@plt+0x266ac>
  42e4f4:	mov	x6, x0
  42e4f8:	adrp	x4, 468000 <_obstack_memory_used@@Base+0x235fc>
  42e4fc:	mov	x5, x25
  42e500:	add	x4, x4, #0xdd5
  42e504:	mov	w2, w23
  42e508:	mov	x0, x19
  42e50c:	mov	w3, #0x0                   	// #0
  42e510:	mov	w1, #0x3                   	// #3
  42e514:	bl	4217cc <ferror@plt+0x1e9fc>
  42e518:	mov	w0, #0x0                   	// #0
  42e51c:	b	42e538 <ferror@plt+0x2b768>
  42e520:	mov	x2, x24
  42e524:	b	42e428 <ferror@plt+0x2b658>
  42e528:	str	x20, [x21]
  42e52c:	mov	x0, x19
  42e530:	bl	420978 <ferror@plt+0x1dba8>
  42e534:	mov	w0, #0x1                   	// #1
  42e538:	mov	sp, x29
  42e53c:	ldp	x19, x20, [sp, #16]
  42e540:	ldp	x21, x22, [sp, #32]
  42e544:	ldp	x23, x24, [sp, #48]
  42e548:	ldp	x25, x26, [sp, #64]
  42e54c:	ldp	x29, x30, [sp], #80
  42e550:	ret
  42e554:	ldrb	w1, [x0, #18]
  42e558:	str	xzr, [x0, #24]
  42e55c:	and	w1, w1, #0xfffffffc
  42e560:	strb	w1, [x0, #18]
  42e564:	ldrh	w1, [x0, #18]
  42e568:	ubfx	x2, x1, #2, #8
  42e56c:	and	w2, w2, #0xffffffcf
  42e570:	bfi	w1, w2, #2, #8
  42e574:	strh	w1, [x0, #18]
  42e578:	ret
  42e57c:	stp	x29, x30, [sp, #-64]!
  42e580:	mov	x29, sp
  42e584:	stp	x19, x20, [sp, #16]
  42e588:	mov	w20, w1
  42e58c:	ldrb	w1, [x2, #18]
  42e590:	stp	x21, x22, [sp, #32]
  42e594:	mov	x19, x2
  42e598:	and	w1, w1, #0x3
  42e59c:	stp	x23, x24, [sp, #48]
  42e5a0:	cmp	w1, #0x1
  42e5a4:	b.ne	42e5d4 <ferror@plt+0x2b804>  // b.any
  42e5a8:	ldr	x3, [x19]
  42e5ac:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x235fc>
  42e5b0:	mov	w1, #0x3                   	// #3
  42e5b4:	add	x2, x2, #0xe15
  42e5b8:	bl	421610 <ferror@plt+0x1e840>
  42e5bc:	mov	w0, #0x0                   	// #0
  42e5c0:	ldp	x19, x20, [sp, #16]
  42e5c4:	ldp	x21, x22, [sp, #32]
  42e5c8:	ldp	x23, x24, [sp, #48]
  42e5cc:	ldp	x29, x30, [sp], #64
  42e5d0:	ret
  42e5d4:	mov	w22, #0x18                  	// #24
  42e5d8:	mov	x21, x0
  42e5dc:	ldr	w0, [x0, #512]
  42e5e0:	mov	x24, x3
  42e5e4:	madd	w22, w20, w22, w22
  42e5e8:	add	w23, w20, #0x1
  42e5ec:	cmp	w0, w22
  42e5f0:	b.cs	42e608 <ferror@plt+0x2b838>  // b.hs, b.nlast
  42e5f4:	ldr	x0, [x21, #504]
  42e5f8:	mov	w1, w22
  42e5fc:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  42e600:	str	x0, [x21, #504]
  42e604:	str	w22, [x21, #512]
  42e608:	mov	w0, #0x18                  	// #24
  42e60c:	ldr	x2, [x21, #504]
  42e610:	umull	x0, w20, w0
  42e614:	ubfiz	x20, x20, #3, #32
  42e618:	add	x1, x2, x0
  42e61c:	str	x19, [x2, x0]
  42e620:	mov	x2, #0x8                   	// #8
  42e624:	ldr	x0, [x19, #24]
  42e628:	str	x0, [x1, #8]
  42e62c:	ldrb	w0, [x19, #18]
  42e630:	and	w0, w0, #0x3
  42e634:	str	w0, [x1, #16]
  42e638:	mov	x1, x20
  42e63c:	mov	x0, x21
  42e640:	bl	42d6cc <ferror@plt+0x2a8fc>
  42e644:	str	x24, [x0, x20]
  42e648:	ldrb	w1, [x19, #18]
  42e64c:	mov	w0, #0x1                   	// #1
  42e650:	strh	w23, [x19, #24]
  42e654:	bfxil	w1, w0, #0, #2
  42e658:	strb	w1, [x19, #18]
  42e65c:	b	42e5c0 <ferror@plt+0x2b7f0>
  42e660:	mov	w6, #0x18                  	// #24
  42e664:	sub	w1, w1, #0x1
  42e668:	cmn	w1, #0x1
  42e66c:	b.eq	42e69c <ferror@plt+0x2b8cc>  // b.none
  42e670:	umull	x2, w1, w6
  42e674:	ldr	x4, [x0, #504]
  42e678:	add	x3, x4, x2
  42e67c:	ldr	x2, [x4, x2]
  42e680:	ldr	w5, [x3, #16]
  42e684:	ldrb	w4, [x2, #18]
  42e688:	bfxil	w4, w5, #0, #2
  42e68c:	strb	w4, [x2, #18]
  42e690:	ldr	x3, [x3, #8]
  42e694:	str	x3, [x2, #24]
  42e698:	b	42e664 <ferror@plt+0x2b894>
  42e69c:	ret
  42e6a0:	mov	x3, x0
  42e6a4:	mov	x0, x2
  42e6a8:	mov	x5, #0x9300000000000000    	// #-7854277750134145024
  42e6ac:	ldr	w2, [x3, #48]
  42e6b0:	str	xzr, [x0]
  42e6b4:	str	w2, [x0, #8]
  42e6b8:	ldur	x4, [x0, #12]
  42e6bc:	ldrb	w2, [x3, #1151]
  42e6c0:	and	x4, x4, x5
  42e6c4:	cmp	w2, #0x0
  42e6c8:	cset	x2, eq  // eq = none
  42e6cc:	orr	x2, x4, x2, lsl #61
  42e6d0:	stur	x2, [x0, #12]
  42e6d4:	ldr	x2, [x3]
  42e6d8:	cbz	x2, 42e708 <ferror@plt+0x2b938>
  42e6dc:	ldrb	w2, [x2, #106]
  42e6e0:	cmp	w2, #0x0
  42e6e4:	cset	w2, ne  // ne = any
  42e6e8:	and	w1, w1, #0x3
  42e6ec:	mov	w3, #0xffffffec            	// #-20
  42e6f0:	orr	w2, w1, w2, lsl #4
  42e6f4:	ldrb	w1, [x0, #19]
  42e6f8:	and	w1, w1, w3
  42e6fc:	orr	w2, w2, w1
  42e700:	strb	w2, [x0, #19]
  42e704:	ret
  42e708:	mov	w2, #0x0                   	// #0
  42e70c:	b	42e6e8 <ferror@plt+0x2b918>
  42e710:	stp	x29, x30, [sp, #-192]!
  42e714:	mov	x29, sp
  42e718:	stp	x19, x20, [sp, #16]
  42e71c:	mov	x19, x0
  42e720:	stp	x21, x22, [sp, #32]
  42e724:	mov	x22, x1
  42e728:	stp	x23, x24, [sp, #48]
  42e72c:	stp	x25, x26, [sp, #64]
  42e730:	stp	x27, x28, [sp, #80]
  42e734:	ldrb	w1, [x0, #1160]
  42e738:	cbz	w1, 42e7e0 <ferror@plt+0x2ba10>
  42e73c:	bl	4331c0 <ferror@plt+0x303f0>
  42e740:	mov	x20, x0
  42e744:	cbz	x20, 42f124 <ferror@plt+0x2c354>
  42e748:	ldrb	w0, [x22, #18]
  42e74c:	tbz	w0, #1, 42f050 <ferror@plt+0x2c280>
  42e750:	ldrb	w0, [x19, #1151]
  42e754:	cbz	w0, 42e768 <ferror@plt+0x2b998>
  42e758:	mov	x1, x22
  42e75c:	mov	x0, x19
  42e760:	mov	x2, #0x0                   	// #0
  42e764:	bl	42d988 <ferror@plt+0x2abb8>
  42e768:	ldrh	w0, [x22, #18]
  42e76c:	ubfx	x1, x0, #2, #8
  42e770:	tbz	w0, #5, 42ef7c <ferror@plt+0x2c1ac>
  42e774:	ldrb	w0, [x22, #18]
  42e778:	and	w0, w0, #0x3
  42e77c:	cmp	w0, #0x3
  42e780:	b.eq	42ef9c <ferror@plt+0x2c1cc>  // b.none
  42e784:	mov	w1, #0x0                   	// #0
  42e788:	ldr	w2, [x19, #48]
  42e78c:	mov	x0, x19
  42e790:	ldr	x5, [x22]
  42e794:	adrp	x4, 469000 <_obstack_memory_used@@Base+0x245fc>
  42e798:	mov	w3, #0x0                   	// #0
  42e79c:	add	x4, x4, #0x4c
  42e7a0:	bl	4218b0 <ferror@plt+0x1eae0>
  42e7a4:	tst	w0, #0xff
  42e7a8:	b.eq	42f048 <ferror@plt+0x2c278>  // b.none
  42e7ac:	ldrb	w0, [x22, #18]
  42e7b0:	and	w0, w0, #0x3
  42e7b4:	cmp	w0, #0x2
  42e7b8:	b.ne	42f048 <ferror@plt+0x2c278>  // b.any
  42e7bc:	ldr	x0, [x22, #24]
  42e7c0:	adrp	x4, 469000 <_obstack_memory_used@@Base+0x245fc>
  42e7c4:	mov	w3, #0x0                   	// #0
  42e7c8:	add	x4, x4, #0x5b
  42e7cc:	mov	w1, #0x5                   	// #5
  42e7d0:	ldr	w2, [x0, #8]
  42e7d4:	mov	x0, x19
  42e7d8:	bl	4217cc <ferror@plt+0x1e9fc>
  42e7dc:	b	42f048 <ferror@plt+0x2c278>
  42e7e0:	add	x1, sp, #0x80
  42e7e4:	ldr	x20, [x0, #448]
  42e7e8:	str	x1, [x0, #448]
  42e7ec:	bl	429618 <ferror@plt+0x26848>
  42e7f0:	mov	x21, x0
  42e7f4:	ldrh	w0, [x0, #6]
  42e7f8:	str	x20, [x19, #448]
  42e7fc:	tbnz	w0, #0, 42ea7c <ferror@plt+0x2bcac>
  42e800:	ldrb	w0, [x21, #4]
  42e804:	cmp	w0, #0x14
  42e808:	b.ne	42ea34 <ferror@plt+0x2bc64>  // b.any
  42e80c:	adrp	x20, 468000 <_obstack_memory_used@@Base+0x235fc>
  42e810:	adrp	x24, 468000 <_obstack_memory_used@@Base+0x235fc>
  42e814:	add	x20, x20, #0xec6
  42e818:	add	x24, x24, #0xe98
  42e81c:	mov	w25, #0x0                   	// #0
  42e820:	mov	w21, #0x0                   	// #0
  42e824:	mov	w23, #0x0                   	// #0
  42e828:	mov	x0, x19
  42e82c:	bl	42aac4 <ferror@plt+0x27cf4>
  42e830:	ldrb	w2, [x0, #4]
  42e834:	mov	x1, x0
  42e838:	cmp	w2, #0x2c
  42e83c:	b.eq	42e968 <ferror@plt+0x2bb98>  // b.none
  42e840:	b.hi	42e8d8 <ferror@plt+0x2bb08>  // b.pmore
  42e844:	cmp	w2, #0x13
  42e848:	b.eq	42e958 <ferror@plt+0x2bb88>  // b.none
  42e84c:	cmp	w2, #0x15
  42e850:	b.eq	42e940 <ferror@plt+0x2bb70>  // b.none
  42e854:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x245fc>
  42e858:	add	x0, x0, #0x348
  42e85c:	ldp	x4, x5, [x0, #96]
  42e860:	stp	x4, x5, [sp, #152]
  42e864:	ldp	x4, x5, [x0, #112]
  42e868:	stp	x4, x5, [sp, #168]
  42e86c:	ldr	x0, [x0, #128]
  42e870:	str	x0, [sp, #184]
  42e874:	cbnz	w25, 42e90c <ferror@plt+0x2bb3c>
  42e878:	cmp	w2, #0x16
  42e87c:	b.ne	42e8fc <ferror@plt+0x2bb2c>  // b.any
  42e880:	add	w21, w21, #0x2
  42e884:	mov	x3, #0x0                   	// #0
  42e888:	add	x0, sp, #0x98
  42e88c:	mov	x20, #0x0                   	// #0
  42e890:	mov	w1, #0x3                   	// #3
  42e894:	ldr	x2, [x0, w21, uxtw #3]
  42e898:	mov	x0, x19
  42e89c:	bl	421610 <ferror@plt+0x1e840>
  42e8a0:	mov	w21, #0x0                   	// #0
  42e8a4:	strb	wzr, [x19, #22]
  42e8a8:	mov	w1, w23
  42e8ac:	mov	x0, x19
  42e8b0:	bl	42e660 <ferror@plt+0x2b890>
  42e8b4:	cbnz	w21, 42e744 <ferror@plt+0x2b974>
  42e8b8:	mov	w0, w21
  42e8bc:	ldp	x19, x20, [sp, #16]
  42e8c0:	ldp	x21, x22, [sp, #32]
  42e8c4:	ldp	x23, x24, [sp, #48]
  42e8c8:	ldp	x25, x26, [sp, #64]
  42e8cc:	ldp	x27, x28, [sp, #80]
  42e8d0:	ldp	x29, x30, [sp], #192
  42e8d4:	ret
  42e8d8:	cmp	w2, #0x35
  42e8dc:	b.eq	42e918 <ferror@plt+0x2bb48>  // b.none
  42e8e0:	cmp	w2, #0x4f
  42e8e4:	b.ne	42e854 <ferror@plt+0x2ba84>  // b.any
  42e8e8:	ldrb	w0, [x19, #1124]
  42e8ec:	cbz	w0, 42e828 <ferror@plt+0x2ba58>
  42e8f0:	b	42e854 <ferror@plt+0x2ba84>
  42e8f4:	mov	w21, w25
  42e8f8:	b	42e854 <ferror@plt+0x2ba84>
  42e8fc:	mov	x0, x19
  42e900:	bl	42947c <ferror@plt+0x266ac>
  42e904:	mov	x3, x0
  42e908:	b	42e888 <ferror@plt+0x2bab8>
  42e90c:	mov	x3, #0x0                   	// #0
  42e910:	mov	w21, #0x4                   	// #4
  42e914:	b	42e888 <ferror@plt+0x2bab8>
  42e918:	cbnz	w21, 42e854 <ferror@plt+0x2ba84>
  42e91c:	cbnz	w25, 42e854 <ferror@plt+0x2ba84>
  42e920:	ldp	x2, x3, [x1, #8]
  42e924:	mov	x0, x19
  42e928:	mov	w1, w23
  42e92c:	bl	42e57c <ferror@plt+0x2b7ac>
  42e930:	ands	w21, w0, #0xff
  42e934:	b.eq	42ef74 <ferror@plt+0x2c1a4>  // b.none
  42e938:	add	w23, w23, #0x1
  42e93c:	b	42e828 <ferror@plt+0x2ba58>
  42e940:	cmp	w23, #0x0
  42e944:	ccmp	w21, #0x0, #0x0, ne  // ne = any
  42e948:	b.ne	42f12c <ferror@plt+0x2c35c>  // b.any
  42e94c:	cbnz	w25, 42f12c <ferror@plt+0x2c35c>
  42e950:	mov	w21, #0x0                   	// #0
  42e954:	b	42e854 <ferror@plt+0x2ba84>
  42e958:	cbz	w21, 42e854 <ferror@plt+0x2ba84>
  42e95c:	cbnz	w25, 42e8f4 <ferror@plt+0x2bb24>
  42e960:	mov	w21, #0x0                   	// #0
  42e964:	b	42e828 <ferror@plt+0x2ba58>
  42e968:	cbnz	w25, 42e854 <ferror@plt+0x2ba84>
  42e96c:	cbnz	w21, 42ea04 <ferror@plt+0x2bc34>
  42e970:	ldr	x3, [x19, #1272]
  42e974:	mov	w1, w23
  42e978:	mov	x0, x19
  42e97c:	add	w23, w23, #0x1
  42e980:	mov	x2, x3
  42e984:	bl	42e57c <ferror@plt+0x2b7ac>
  42e988:	mov	w0, #0x1                   	// #1
  42e98c:	strb	w0, [x19, #22]
  42e990:	ldrb	w0, [x19, #1152]
  42e994:	cbnz	w0, 42e9d8 <ferror@plt+0x2bc08>
  42e998:	ldrb	w0, [x19, #1154]
  42e99c:	cbz	w0, 42e9d8 <ferror@plt+0x2bc08>
  42e9a0:	ldrb	w0, [x19, #1142]
  42e9a4:	cbz	w0, 42e9d8 <ferror@plt+0x2bc08>
  42e9a8:	ldrb	w1, [x19, #1120]
  42e9ac:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x235fc>
  42e9b0:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x235fc>
  42e9b4:	add	x0, x0, #0xe67
  42e9b8:	cmp	w1, #0x0
  42e9bc:	add	x2, x2, #0xe34
  42e9c0:	csel	x2, x2, x0, ne  // ne = any
  42e9c4:	mov	w1, #0xa                   	// #10
  42e9c8:	mov	x0, x19
  42e9cc:	bl	4216ec <ferror@plt+0x1e91c>
  42e9d0:	mov	w25, #0x1                   	// #1
  42e9d4:	b	42e828 <ferror@plt+0x2ba58>
  42e9d8:	ldrsb	w0, [x19, #1198]
  42e9dc:	cmp	w0, #0x0
  42e9e0:	b.le	42e9d0 <ferror@plt+0x2bc00>
  42e9e4:	ldrb	w0, [x19, #1120]
  42e9e8:	cbnz	w0, 42e9d0 <ferror@plt+0x2bc00>
  42e9ec:	mov	x0, x19
  42e9f0:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x235fc>
  42e9f4:	mov	w1, #0x0                   	// #0
  42e9f8:	add	x2, x2, #0xe67
  42e9fc:	bl	421610 <ferror@plt+0x1e840>
  42ea00:	b	42e9d0 <ferror@plt+0x2bc00>
  42ea04:	ldrb	w0, [x19, #1154]
  42ea08:	cbz	w0, 42ea2c <ferror@plt+0x2bc5c>
  42ea0c:	ldrb	w0, [x19, #1142]
  42ea10:	cbz	w0, 42ea2c <ferror@plt+0x2bc5c>
  42ea14:	ldrb	w0, [x19, #1120]
  42ea18:	mov	w1, #0xa                   	// #10
  42ea1c:	cmp	w0, #0x0
  42ea20:	mov	x0, x19
  42ea24:	csel	x2, x24, x20, ne  // ne = any
  42ea28:	bl	4216ec <ferror@plt+0x1e91c>
  42ea2c:	mov	w25, w21
  42ea30:	b	42e828 <ferror@plt+0x2ba58>
  42ea34:	cmp	w0, #0x16
  42ea38:	b.eq	42ea7c <ferror@plt+0x2bcac>  // b.none
  42ea3c:	cmp	w0, #0x4f
  42ea40:	b.ne	42ea4c <ferror@plt+0x2bc7c>  // b.any
  42ea44:	ldrb	w1, [x19, #1124]
  42ea48:	cbz	w1, 42ea7c <ferror@plt+0x2bcac>
  42ea4c:	ldrb	w1, [x19, #1152]
  42ea50:	cbz	w1, 42ec30 <ferror@plt+0x2be60>
  42ea54:	ldrb	w1, [x19, #1120]
  42ea58:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x235fc>
  42ea5c:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x235fc>
  42ea60:	add	x0, x0, #0xf25
  42ea64:	cmp	w1, #0x0
  42ea68:	add	x2, x2, #0xef2
  42ea6c:	csel	x2, x2, x0, ne  // ne = any
  42ea70:	mov	w1, #0x2                   	// #2
  42ea74:	mov	x0, x19
  42ea78:	bl	421610 <ferror@plt+0x1e840>
  42ea7c:	mov	w25, #0x0                   	// #0
  42ea80:	mov	w23, #0x0                   	// #0
  42ea84:	mov	x24, #0x0                   	// #0
  42ea88:	mov	x2, #0x30                  	// #48
  42ea8c:	mov	x1, #0x0                   	// #0
  42ea90:	mov	x0, x19
  42ea94:	bl	42d6cc <ferror@plt+0x2a8fc>
  42ea98:	mov	w1, #0x0                   	// #0
  42ea9c:	mov	x2, x0
  42eaa0:	mov	x0, x19
  42eaa4:	bl	42e6a0 <ferror@plt+0x2b8d0>
  42eaa8:	mov	x20, x0
  42eaac:	cbnz	x21, 42ec7c <ferror@plt+0x2beac>
  42eab0:	strh	w23, [x0, #16]
  42eab4:	ubfiz	w0, w25, #3, #1
  42eab8:	orr	w0, w0, #0x4
  42eabc:	str	x24, [x20]
  42eac0:	ldrb	w1, [x20, #19]
  42eac4:	and	w1, w1, #0xfffffff3
  42eac8:	orr	w0, w0, w1
  42eacc:	strb	w0, [x20, #19]
  42ead0:	ldrb	w0, [x20, #19]
  42ead4:	mov	w1, #0x1                   	// #1
  42ead8:	str	x19, [sp, #152]
  42eadc:	adrp	x26, 46c000 <_obstack_memory_used@@Base+0x275fc>
  42eae0:	strb	w1, [sp, #160]
  42eae4:	add	x26, x26, #0xb08
  42eae8:	ubfx	x0, x0, #3, #1
  42eaec:	strb	w0, [sp, #161]
  42eaf0:	strb	wzr, [sp, #162]
  42eaf4:	mov	w24, #0x0                   	// #0
  42eaf8:	str	wzr, [sp, #164]
  42eafc:	mov	w25, #0x0                   	// #0
  42eb00:	str	xzr, [sp, #168]
  42eb04:	cbnz	x21, 42eb90 <ferror@plt+0x2bdc0>
  42eb08:	ldr	w1, [x20, #12]
  42eb0c:	mov	x21, #0x18                  	// #24
  42eb10:	mov	x0, x19
  42eb14:	mov	x2, x21
  42eb18:	madd	x1, x1, x21, x21
  42eb1c:	bl	42d6cc <ferror@plt+0x2a8fc>
  42eb20:	mov	x20, x0
  42eb24:	ldr	x28, [x19, #448]
  42eb28:	mov	x0, x19
  42eb2c:	ldr	w2, [x20, #12]
  42eb30:	madd	x21, x2, x21, x21
  42eb34:	add	x21, x20, x21
  42eb38:	str	x21, [x19, #448]
  42eb3c:	bl	429618 <ferror@plt+0x26848>
  42eb40:	ldrb	w1, [x0, #4]
  42eb44:	str	x28, [x19, #448]
  42eb48:	cmp	w1, #0x35
  42eb4c:	b.ne	42eca0 <ferror@plt+0x2bed0>  // b.any
  42eb50:	ldr	x3, [x0, #8]
  42eb54:	ldrb	w2, [x3, #18]
  42eb58:	and	w2, w2, #0x3
  42eb5c:	cmp	w2, #0x1
  42eb60:	b.ne	42eca0 <ferror@plt+0x2bed0>  // b.any
  42eb64:	mov	w1, #0x50                  	// #80
  42eb68:	strb	w1, [x0, #4]
  42eb6c:	ldrh	w1, [x3, #24]
  42eb70:	str	w1, [x0, #8]
  42eb74:	ldr	w21, [x20, #12]
  42eb78:	add	w0, w21, #0x1
  42eb7c:	str	w0, [x20, #12]
  42eb80:	mov	w0, w21
  42eb84:	mov	x21, #0x18                  	// #24
  42eb88:	madd	x21, x0, x21, x21
  42eb8c:	add	x21, x20, x21
  42eb90:	ldr	w1, [x20, #12]
  42eb94:	cmp	w1, #0x1
  42eb98:	b.ls	42ec14 <ferror@plt+0x2be44>  // b.plast
  42eb9c:	ldurb	w0, [x21, #-20]
  42eba0:	sub	x4, x21, #0x18
  42eba4:	cmp	w0, #0x25
  42eba8:	b.ne	42ec14 <ferror@plt+0x2be44>  // b.any
  42ebac:	ldrb	w0, [x20, #19]
  42ebb0:	tbz	w0, #2, 42ec14 <ferror@plt+0x2be44>
  42ebb4:	ldrb	w0, [x21, #4]
  42ebb8:	cmp	w0, #0x50
  42ebbc:	b.ne	42edcc <ferror@plt+0x2bffc>  // b.any
  42ebc0:	ldrh	w0, [x21, #6]
  42ebc4:	tbz	w0, #0, 42ebd0 <ferror@plt+0x2be00>
  42ebc8:	orr	w0, w0, #0x200
  42ebcc:	strh	w0, [x21, #6]
  42ebd0:	ldrh	w2, [x4, #6]
  42ebd4:	tbz	w2, #1, 42ebe4 <ferror@plt+0x2be14>
  42ebd8:	ldrh	w0, [x21, #6]
  42ebdc:	orr	w0, w0, #0x100
  42ebe0:	strh	w0, [x21, #6]
  42ebe4:	ldrh	w0, [x21, #6]
  42ebe8:	and	w2, w2, #0x1
  42ebec:	sub	w1, w1, #0x1
  42ebf0:	and	w0, w0, #0xfffffffe
  42ebf4:	orr	w0, w0, #0x4
  42ebf8:	orr	w0, w0, w2
  42ebfc:	strh	w0, [x21, #6]
  42ec00:	ldp	x2, x3, [x21]
  42ec04:	stp	x2, x3, [x4]
  42ec08:	ldr	x0, [x21, #16]
  42ec0c:	str	x0, [x4, #16]
  42ec10:	str	w1, [x20, #12]
  42ec14:	ldrb	w0, [x21, #4]
  42ec18:	cmp	w0, #0x16
  42ec1c:	b.ne	42eebc <ferror@plt+0x2c0ec>  // b.any
  42ec20:	cbz	w25, 42edf0 <ferror@plt+0x2c020>
  42ec24:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x235fc>
  42ec28:	add	x2, x2, #0xffe
  42ec2c:	b	42ede0 <ferror@plt+0x2c010>
  42ec30:	cmp	w0, #0x3d
  42ec34:	b.eq	42ec60 <ferror@plt+0x2be90>  // b.none
  42ec38:	b.hi	42ec58 <ferror@plt+0x2be88>  // b.pmore
  42ec3c:	and	w0, w0, #0xfffffffd
  42ec40:	cmp	w0, #0x34
  42ec44:	cset	w1, eq  // eq = none
  42ec48:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x235fc>
  42ec4c:	add	x2, x2, #0xf73
  42ec50:	lsl	w1, w1, #1
  42ec54:	b	42ea74 <ferror@plt+0x2bca4>
  42ec58:	cmp	w0, #0x43
  42ec5c:	b	42ec44 <ferror@plt+0x2be74>
  42ec60:	ldr	x0, [x21, #16]
  42ec64:	ldrb	w1, [x0]
  42ec68:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x235fc>
  42ec6c:	add	x0, x0, #0xf56
  42ec70:	bl	402b60 <strchr@plt>
  42ec74:	cmp	x0, #0x0
  42ec78:	b	42ec44 <ferror@plt+0x2be74>
  42ec7c:	ldp	x2, x3, [x21]
  42ec80:	stp	x2, x3, [x20, #24]
  42ec84:	add	x0, x0, #0x18
  42ec88:	ldr	x1, [x21, #16]
  42ec8c:	mov	x21, x0
  42ec90:	mov	w0, #0x1                   	// #1
  42ec94:	str	w0, [x20, #12]
  42ec98:	str	x1, [x20, #40]
  42ec9c:	b	42ead0 <ferror@plt+0x2bd00>
  42eca0:	ldrb	w2, [x19, #1138]
  42eca4:	cbz	w2, 42eb74 <ferror@plt+0x2bda4>
  42eca8:	ldrh	w2, [x20, #16]
  42ecac:	cbz	w2, 42eb74 <ferror@plt+0x2bda4>
  42ecb0:	cmp	w1, #0x3e
  42ecb4:	b.eq	42ecc0 <ferror@plt+0x2bef0>  // b.none
  42ecb8:	cmp	w1, #0x38
  42ecbc:	b.ne	42eb74 <ferror@plt+0x2bda4>  // b.any
  42ecc0:	ldr	w1, [x0, #8]
  42ecc4:	ldr	x2, [x0, #16]
  42ecc8:	sub	x1, x1, #0x1
  42eccc:	add	x27, x2, x1
  42ecd0:	add	x4, x2, #0x1
  42ecd4:	cmp	x27, x4
  42ecd8:	b.ls	42eb74 <ferror@plt+0x2bda4>  // b.plast
  42ecdc:	ldrb	w1, [x4]
  42ece0:	ldrb	w0, [x4]
  42ece4:	ldrh	w1, [x26, x1, lsl #1]
  42ece8:	tbnz	w1, #9, 42ed88 <ferror@plt+0x2bfb8>
  42ecec:	cmp	w0, #0x24
  42ecf0:	b.ne	42ecfc <ferror@plt+0x2bf2c>  // b.any
  42ecf4:	ldrb	w0, [x19, #1146]
  42ecf8:	cbnz	w0, 42ed88 <ferror@plt+0x2bfb8>
  42ecfc:	add	x4, x4, #0x1
  42ed00:	cmp	x27, x4
  42ed04:	b.ne	42ecdc <ferror@plt+0x2bf0c>  // b.any
  42ed08:	mov	x4, x27
  42ed0c:	mov	x28, x27
  42ed10:	sub	x2, x28, x4
  42ed14:	ldrh	w8, [x20, #16]
  42ed18:	mov	w7, w2
  42ed1c:	and	x2, x2, #0xffffffff
  42ed20:	mov	x21, #0x0                   	// #0
  42ed24:	cmp	w8, w21
  42ed28:	b.ls	42ed80 <ferror@plt+0x2bfb0>  // b.plast
  42ed2c:	ldr	x0, [x20]
  42ed30:	ldr	x0, [x0, x21, lsl #3]
  42ed34:	ldr	w1, [x0, #8]
  42ed38:	cmp	w7, w1
  42ed3c:	b.ne	42edc4 <ferror@plt+0x2bff4>  // b.any
  42ed40:	ldr	x3, [x0]
  42ed44:	mov	x0, x4
  42ed48:	stp	x4, x3, [sp, #96]
  42ed4c:	mov	x1, x3
  42ed50:	str	x2, [sp, #112]
  42ed54:	stp	w7, w8, [sp, #120]
  42ed58:	bl	402a90 <memcmp@plt>
  42ed5c:	ldp	w7, w8, [sp, #120]
  42ed60:	ldp	x4, x3, [sp, #96]
  42ed64:	ldr	x2, [sp, #112]
  42ed68:	cbnz	w0, 42edc4 <ferror@plt+0x2bff4>
  42ed6c:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x235fc>
  42ed70:	mov	w1, #0x6                   	// #6
  42ed74:	add	x2, x0, #0xf9b
  42ed78:	mov	x0, x19
  42ed7c:	bl	42167c <ferror@plt+0x1e8ac>
  42ed80:	mov	x4, x28
  42ed84:	b	42ecd4 <ferror@plt+0x2bf04>
  42ed88:	mov	x28, x4
  42ed8c:	cmp	x27, x28
  42ed90:	b.ls	42ed10 <ferror@plt+0x2bf40>  // b.plast
  42ed94:	ldrb	w1, [x28]
  42ed98:	mov	w2, #0x204                 	// #516
  42ed9c:	ldrb	w0, [x28]
  42eda0:	ldrh	w1, [x26, x1, lsl #1]
  42eda4:	tst	w2, w1
  42eda8:	b.ne	42edbc <ferror@plt+0x2bfec>  // b.any
  42edac:	cmp	w0, #0x24
  42edb0:	b.ne	42ed10 <ferror@plt+0x2bf40>  // b.any
  42edb4:	ldrb	w0, [x19, #1146]
  42edb8:	cbz	w0, 42ed10 <ferror@plt+0x2bf40>
  42edbc:	add	x28, x28, #0x1
  42edc0:	b	42ed8c <ferror@plt+0x2bfbc>
  42edc4:	add	x21, x21, #0x1
  42edc8:	b	42ed24 <ferror@plt+0x2bf54>
  42edcc:	ldr	w0, [x19, #1116]
  42edd0:	cmp	w0, #0x15
  42edd4:	b.eq	42ec14 <ferror@plt+0x2be44>  // b.none
  42edd8:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x235fc>
  42eddc:	add	x2, x2, #0xfd5
  42ede0:	mov	x0, x19
  42ede4:	mov	w1, #0x3                   	// #3
  42ede8:	bl	421610 <ferror@plt+0x1e840>
  42edec:	b	42e8a0 <ferror@plt+0x2bad0>
  42edf0:	ldrb	w0, [sp, #161]
  42edf4:	cbz	w0, 42ee18 <ferror@plt+0x2c048>
  42edf8:	ldr	w0, [sp, #164]
  42edfc:	cbz	w0, 42ee20 <ferror@plt+0x2c050>
  42ee00:	ldr	w2, [sp, #172]
  42ee04:	adrp	x3, 469000 <_obstack_memory_used@@Base+0x245fc>
  42ee08:	ldr	x0, [sp, #152]
  42ee0c:	add	x3, x3, #0x34
  42ee10:	mov	w1, #0x3                   	// #3
  42ee14:	bl	421998 <ferror@plt+0x1ebc8>
  42ee18:	ldr	w0, [sp, #164]
  42ee1c:	cbnz	w0, 42e8a0 <ferror@plt+0x2bad0>
  42ee20:	ldr	w1, [x20, #12]
  42ee24:	mov	x0, #0x18                  	// #24
  42ee28:	sub	w1, w1, #0x1
  42ee2c:	str	w1, [x20, #12]
  42ee30:	madd	x1, x1, x0, x0
  42ee34:	mov	x0, x19
  42ee38:	bl	42ad60 <ferror@plt+0x27f90>
  42ee3c:	mov	x20, x0
  42ee40:	ldr	w0, [x0, #12]
  42ee44:	cbnz	w0, 42ef34 <ferror@plt+0x2c164>
  42ee48:	cbz	w24, 42ef6c <ferror@plt+0x2c19c>
  42ee4c:	mov	w21, #0x18                  	// #24
  42ee50:	mov	x1, #0x0                   	// #0
  42ee54:	mov	x0, x19
  42ee58:	umull	x24, w24, w21
  42ee5c:	mov	x2, x24
  42ee60:	bl	42d6cc <ferror@plt+0x2a8fc>
  42ee64:	add	x7, x20, #0x18
  42ee68:	mov	x1, x0
  42ee6c:	mov	w2, w21
  42ee70:	mov	w3, #0x0                   	// #0
  42ee74:	mov	w6, #0x0                   	// #0
  42ee78:	mov	w5, #0x0                   	// #0
  42ee7c:	ldr	w4, [x20, #12]
  42ee80:	umaddl	x0, w6, w2, x7
  42ee84:	cmp	w4, w3
  42ee88:	b.eq	42ef58 <ferror@plt+0x2c188>  // b.none
  42ee8c:	umaddl	x4, w3, w2, x7
  42ee90:	ldrb	w8, [x4, #4]
  42ee94:	cmp	w8, #0x26
  42ee98:	ldp	x8, x9, [x4]
  42ee9c:	b.ne	42ef44 <ferror@plt+0x2c174>  // b.any
  42eea0:	umaddl	x0, w5, w2, x1
  42eea4:	add	w5, w5, #0x1
  42eea8:	stp	x8, x9, [x0]
  42eeac:	ldr	x4, [x4, #16]
  42eeb0:	str	x4, [x0, #16]
  42eeb4:	add	w3, w3, #0x1
  42eeb8:	b	42ee7c <ferror@plt+0x2c0ac>
  42eebc:	cmp	w0, #0x26
  42eec0:	b.ne	42ef2c <ferror@plt+0x2c15c>  // b.any
  42eec4:	ldr	w0, [x20, #12]
  42eec8:	cmp	w0, #0x1
  42eecc:	b.eq	42ec24 <ferror@plt+0x2be54>  // b.none
  42eed0:	sub	w0, w0, #0x1
  42eed4:	cbz	w25, 42eef4 <ferror@plt+0x2c124>
  42eed8:	add	w24, w24, #0x1
  42eedc:	str	w0, [x21, #8]
  42eee0:	mov	x1, x21
  42eee4:	add	x0, sp, #0x98
  42eee8:	bl	430cd4 <ferror@plt+0x2df04>
  42eeec:	cbnz	w0, 42eb08 <ferror@plt+0x2bd38>
  42eef0:	b	42e8a0 <ferror@plt+0x2bad0>
  42eef4:	ldrh	w3, [x21, #6]
  42eef8:	mov	w4, #0x108                 	// #264
  42eefc:	ldurh	w1, [x21, #-18]
  42ef00:	str	w0, [x20, #12]
  42ef04:	tst	x3, #0x2
  42ef08:	orr	w0, w1, #0x8
  42ef0c:	orr	w1, w1, w4
  42ef10:	csel	w0, w0, w1, eq  // eq = none
  42ef14:	sturh	w0, [x21, #-18]
  42ef18:	tbz	w3, #0, 42ef24 <ferror@plt+0x2c154>
  42ef1c:	orr	w0, w0, #0x200
  42ef20:	sturh	w0, [x21, #-18]
  42ef24:	mov	w25, #0x1                   	// #1
  42ef28:	b	42eee0 <ferror@plt+0x2c110>
  42ef2c:	mov	w25, #0x0                   	// #0
  42ef30:	b	42eee0 <ferror@plt+0x2c110>
  42ef34:	ldrh	w0, [x20, #30]
  42ef38:	and	w0, w0, #0xfffffffe
  42ef3c:	strh	w0, [x20, #30]
  42ef40:	b	42ee48 <ferror@plt+0x2c078>
  42ef44:	stp	x8, x9, [x0]
  42ef48:	add	w6, w6, #0x1
  42ef4c:	ldr	x4, [x4, #16]
  42ef50:	str	x4, [x0, #16]
  42ef54:	b	42eeb4 <ferror@plt+0x2c0e4>
  42ef58:	mov	x2, x24
  42ef5c:	bl	4026a0 <memcpy@plt>
  42ef60:	ldrb	w0, [x20, #19]
  42ef64:	orr	w0, w0, #0x40
  42ef68:	strb	w0, [x20, #19]
  42ef6c:	mov	w21, #0x1                   	// #1
  42ef70:	b	42e8a4 <ferror@plt+0x2bad4>
  42ef74:	mov	x20, #0x0                   	// #0
  42ef78:	b	42e8a4 <ferror@plt+0x2bad4>
  42ef7c:	ldrb	w0, [x22, #18]
  42ef80:	and	w0, w0, #0x3
  42ef84:	cmp	w0, #0x3
  42ef88:	b.ne	42efb0 <ferror@plt+0x2c1e0>  // b.any
  42ef8c:	ldrb	w0, [x19, #1143]
  42ef90:	cbz	w0, 42f048 <ferror@plt+0x2c278>
  42ef94:	mov	w1, #0xb                   	// #11
  42ef98:	b	42e788 <ferror@plt+0x2b9b8>
  42ef9c:	ldrh	w0, [x22, #18]
  42efa0:	mov	w1, #0xb                   	// #11
  42efa4:	tst	x0, #0x20
  42efa8:	csel	w1, w1, wzr, eq  // eq = none
  42efac:	b	42e788 <ferror@plt+0x2b9b8>
  42efb0:	tbnz	w1, #6, 42f048 <ferror@plt+0x2c278>
  42efb4:	ldr	x24, [x22, #24]
  42efb8:	ldrb	w2, [x24, #18]
  42efbc:	cbz	w2, 42efd8 <ferror@plt+0x2c208>
  42efc0:	ldr	x3, [x19, #1048]
  42efc4:	sub	w2, w2, #0x1
  42efc8:	mov	x1, x24
  42efcc:	mov	x0, x19
  42efd0:	blr	x3
  42efd4:	strb	wzr, [x24, #18]
  42efd8:	ldrh	w1, [x24, #16]
  42efdc:	ldrh	w0, [x20, #16]
  42efe0:	cmp	w0, w1
  42efe4:	b.ne	42e774 <ferror@plt+0x2b9a4>  // b.any
  42efe8:	ldrb	w1, [x24, #19]
  42efec:	ldrb	w2, [x20, #19]
  42eff0:	eor	w2, w1, w2
  42eff4:	tst	w2, #0xc
  42eff8:	b.ne	42e774 <ferror@plt+0x2b9a4>  // b.any
  42effc:	mov	w2, w0
  42f000:	sub	w0, w0, #0x1
  42f004:	cbz	w2, 42f028 <ferror@plt+0x2c258>
  42f008:	ldr	x4, [x20]
  42f00c:	ubfiz	x2, x0, #3, #32
  42f010:	ldr	x3, [x24]
  42f014:	ldr	x3, [x3, x2]
  42f018:	ldr	x2, [x4, x2]
  42f01c:	cmp	x3, x2
  42f020:	b.eq	42effc <ferror@plt+0x2c22c>  // b.none
  42f024:	b	42e774 <ferror@plt+0x2b9a4>
  42f028:	and	w1, w1, #0x3
  42f02c:	cmp	w1, #0x2
  42f030:	b.ne	42f0e4 <ferror@plt+0x2c314>  // b.any
  42f034:	mov	x1, x20
  42f038:	mov	x0, x24
  42f03c:	bl	433404 <ferror@plt+0x30634>
  42f040:	tst	w0, #0xff
  42f044:	b.ne	42e774 <ferror@plt+0x2b9a4>  // b.any
  42f048:	mov	x0, x22
  42f04c:	bl	42e554 <ferror@plt+0x2b784>
  42f050:	ldrb	w0, [x22, #18]
  42f054:	mov	w1, #0x2                   	// #2
  42f058:	ldr	x19, [x22]
  42f05c:	str	x20, [x22, #24]
  42f060:	bfxil	w0, w1, #0, #2
  42f064:	strb	w0, [x22, #18]
  42f068:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  42f06c:	mov	x0, x19
  42f070:	add	x1, x1, #0x8b
  42f074:	mov	x2, #0x7                   	// #7
  42f078:	bl	4028d0 <strncmp@plt>
  42f07c:	cbnz	w0, 42f0c8 <ferror@plt+0x2c2f8>
  42f080:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  42f084:	mov	x0, x19
  42f088:	add	x1, x1, #0x93
  42f08c:	bl	402ad0 <strcmp@plt>
  42f090:	cbz	w0, 42f0c8 <ferror@plt+0x2c2f8>
  42f094:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  42f098:	mov	x0, x19
  42f09c:	add	x1, x1, #0xa8
  42f0a0:	bl	402ad0 <strcmp@plt>
  42f0a4:	cbz	w0, 42f0c8 <ferror@plt+0x2c2f8>
  42f0a8:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  42f0ac:	mov	x0, x19
  42f0b0:	add	x1, x1, #0xbc
  42f0b4:	bl	402ad0 <strcmp@plt>
  42f0b8:	cbz	w0, 42f0c8 <ferror@plt+0x2c2f8>
  42f0bc:	ldrh	w0, [x22, #18]
  42f0c0:	orr	w0, w0, #0x20
  42f0c4:	strh	w0, [x22, #18]
  42f0c8:	ldrh	w0, [x22, #18]
  42f0cc:	mov	w21, #0x1                   	// #1
  42f0d0:	ubfx	x1, x0, #2, #8
  42f0d4:	and	w1, w1, #0xffffffbf
  42f0d8:	bfi	w0, w1, #2, #8
  42f0dc:	strh	w0, [x22, #18]
  42f0e0:	b	42e8b8 <ferror@plt+0x2bae8>
  42f0e4:	ldr	w0, [x20, #12]
  42f0e8:	ldr	w21, [x24, #12]
  42f0ec:	cmp	w21, w0
  42f0f0:	b.ne	42e774 <ferror@plt+0x2b9a4>  // b.any
  42f0f4:	sub	w21, w21, #0x1
  42f0f8:	mov	x23, #0x18                  	// #24
  42f0fc:	cmn	w21, #0x1
  42f100:	b.eq	42f048 <ferror@plt+0x2c278>  // b.none
  42f104:	mov	w0, w21
  42f108:	sub	w21, w21, #0x1
  42f10c:	madd	x0, x0, x23, x23
  42f110:	add	x1, x20, x0
  42f114:	add	x0, x24, x0
  42f118:	bl	428194 <ferror@plt+0x253c4>
  42f11c:	cbnz	w0, 42f0fc <ferror@plt+0x2c32c>
  42f120:	b	42e774 <ferror@plt+0x2b9a4>
  42f124:	mov	w21, #0x0                   	// #0
  42f128:	b	42e8b8 <ferror@plt+0x2bae8>
  42f12c:	ubfiz	x1, x23, #3, #32
  42f130:	mov	x0, x19
  42f134:	mov	x21, #0x0                   	// #0
  42f138:	bl	42ad60 <ferror@plt+0x27f90>
  42f13c:	mov	x24, x0
  42f140:	b	42ea88 <ferror@plt+0x2bcb8>
  42f144:	ldr	x0, [x1, #24]
  42f148:	add	w2, w2, #0x1
  42f14c:	strb	w2, [x0, #18]
  42f150:	ret
  42f154:	stp	x29, x30, [sp, #-48]!
  42f158:	mov	x29, sp
  42f15c:	stp	x19, x20, [sp, #16]
  42f160:	mov	x19, x0
  42f164:	mov	x20, x1
  42f168:	str	x21, [sp, #32]
  42f16c:	ldrh	w2, [x1, #18]
  42f170:	orr	w2, w2, #0x80
  42f174:	strh	w2, [x1, #18]
  42f178:	and	w2, w2, #0x3
  42f17c:	cmp	w2, #0x2
  42f180:	b.eq	42f1a4 <ferror@plt+0x2c3d4>  // b.none
  42f184:	cmp	w2, #0x3
  42f188:	b.eq	42f1c4 <ferror@plt+0x2c3f4>  // b.none
  42f18c:	cbnz	w2, 42f1ec <ferror@plt+0x2c41c>
  42f190:	ldr	x3, [x0, #1016]
  42f194:	cbz	x3, 42f204 <ferror@plt+0x2c434>
  42f198:	mov	x2, x1
  42f19c:	ldr	w1, [x0, #48]
  42f1a0:	b	42f1d8 <ferror@plt+0x2c408>
  42f1a4:	ldr	x21, [x1, #24]
  42f1a8:	ldrb	w2, [x21, #18]
  42f1ac:	cbz	w2, 42f1c4 <ferror@plt+0x2c3f4>
  42f1b0:	ldr	x3, [x0, #1048]
  42f1b4:	sub	w2, w2, #0x1
  42f1b8:	mov	x1, x21
  42f1bc:	blr	x3
  42f1c0:	strb	wzr, [x21, #18]
  42f1c4:	ldr	x3, [x19, #1008]
  42f1c8:	cbz	x3, 42f204 <ferror@plt+0x2c434>
  42f1cc:	ldr	w1, [x19, #48]
  42f1d0:	mov	x2, x20
  42f1d4:	mov	x0, x19
  42f1d8:	ldp	x19, x20, [sp, #16]
  42f1dc:	mov	x16, x3
  42f1e0:	ldr	x21, [sp, #32]
  42f1e4:	ldp	x29, x30, [sp], #48
  42f1e8:	br	x16
  42f1ec:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x245fc>
  42f1f0:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x235fc>
  42f1f4:	add	x2, x2, #0xd3
  42f1f8:	add	x0, x0, #0xb3e
  42f1fc:	mov	w1, #0xe0b                 	// #3595
  42f200:	bl	402de0 <ferror@plt+0x10>
  42f204:	ldp	x19, x20, [sp, #16]
  42f208:	ldr	x21, [sp, #32]
  42f20c:	ldp	x29, x30, [sp], #48
  42f210:	ret
  42f214:	stp	x29, x30, [sp, #-272]!
  42f218:	mov	x29, sp
  42f21c:	stp	x19, x20, [sp, #16]
  42f220:	mov	x20, x1
  42f224:	mov	x19, x0
  42f228:	stp	x21, x22, [sp, #32]
  42f22c:	mov	w1, #0x1                   	// #1
  42f230:	stp	x23, x24, [sp, #48]
  42f234:	stp	x25, x26, [sp, #64]
  42f238:	stp	x27, x28, [sp, #80]
  42f23c:	strb	wzr, [x0, #19]
  42f240:	strb	w1, [x0, #192]
  42f244:	strb	wzr, [x0, #440]
  42f248:	ldrb	w0, [x20, #18]
  42f24c:	str	x2, [sp, #176]
  42f250:	str	w3, [sp, #200]
  42f254:	and	w0, w0, #0x3
  42f258:	cmp	w0, #0x2
  42f25c:	b.ne	4304bc <ferror@plt+0x2d6ec>  // b.any
  42f260:	ldr	x0, [x20, #24]
  42f264:	str	x0, [sp, #104]
  42f268:	ldrb	w0, [x0, #19]
  42f26c:	tbz	w0, #2, 4303d4 <ferror@plt+0x2d604>
  42f270:	ldrb	w0, [x19, #24]
  42f274:	mov	x21, #0x0                   	// #0
  42f278:	strb	w1, [x19, #25]
  42f27c:	add	w0, w0, #0x1
  42f280:	strb	w0, [x19, #24]
  42f284:	ldr	w0, [x19, #500]
  42f288:	add	w0, w0, #0x1
  42f28c:	str	w0, [x19, #500]
  42f290:	mov	x0, x19
  42f294:	bl	430978 <ferror@plt+0x2dba8>
  42f298:	ldrb	w1, [x0, #4]
  42f29c:	cmp	w1, #0x53
  42f2a0:	b.ne	42f2c8 <ferror@plt+0x2c4f8>  // b.any
  42f2a4:	cbz	x21, 42f2c0 <ferror@plt+0x2c4f0>
  42f2a8:	ldrh	w1, [x21, #6]
  42f2ac:	tbnz	w1, #0, 42f290 <ferror@plt+0x2c4c0>
  42f2b0:	ldr	x1, [x0, #8]
  42f2b4:	cmp	x1, #0x0
  42f2b8:	csel	x21, x21, x0, ne  // ne = any
  42f2bc:	b	42f290 <ferror@plt+0x2c4c0>
  42f2c0:	mov	x21, x0
  42f2c4:	b	42f290 <ferror@plt+0x2c4c0>
  42f2c8:	cmp	w1, #0x14
  42f2cc:	b.ne	42f728 <ferror@plt+0x2c958>  // b.any
  42f2d0:	mov	w0, #0x2                   	// #2
  42f2d4:	strb	w0, [x19, #25]
  42f2d8:	mov	w1, #0x1c0                 	// #448
  42f2dc:	ldrb	w0, [x19, #1157]
  42f2e0:	ldr	x25, [x20, #24]
  42f2e4:	str	w0, [sp, #136]
  42f2e8:	mov	x0, x19
  42f2ec:	ldrh	w21, [x25, #16]
  42f2f0:	cmp	w21, #0x0
  42f2f4:	csinc	w21, w21, wzr, ne  // ne = any
  42f2f8:	umull	x1, w21, w1
  42f2fc:	bl	4286b0 <ferror@plt+0x258e0>
  42f300:	str	x0, [sp, #112]
  42f304:	mov	w2, #0x30                  	// #48
  42f308:	mov	w1, #0x0                   	// #0
  42f30c:	ldr	x26, [x0, #8]
  42f310:	umull	x21, w21, w2
  42f314:	mov	x0, x26
  42f318:	mov	x2, x21
  42f31c:	bl	402930 <memset@plt>
  42f320:	add	x21, x26, x21
  42f324:	ldr	x0, [sp, #112]
  42f328:	mov	x22, x26
  42f32c:	str	wzr, [sp, #124]
  42f330:	mov	x24, x0
  42f334:	str	x21, [x0, #16]
  42f338:	mov	x21, #0x0                   	// #0
  42f33c:	ldr	w0, [sp, #124]
  42f340:	add	w0, w0, #0x1
  42f344:	str	w0, [sp, #124]
  42f348:	ldr	x0, [x24, #16]
  42f34c:	str	x0, [x22]
  42f350:	ldr	w0, [sp, #136]
  42f354:	cbz	w0, 42f364 <ferror@plt+0x2c594>
  42f358:	mov	x0, #0xc8                  	// #200
  42f35c:	bl	44526c <_obstack_memory_used@@Base+0x868>
  42f360:	str	x0, [x22, #32]
  42f364:	mov	w0, #0x32                  	// #50
  42f368:	mov	w23, #0x0                   	// #0
  42f36c:	mov	w27, #0x0                   	// #0
  42f370:	str	w0, [sp, #128]
  42f374:	ldr	x1, [x22]
  42f378:	add	w0, w23, #0x2
  42f37c:	add	w28, w23, #0x2
  42f380:	add	x0, x1, x0, lsl #3
  42f384:	ldr	x1, [x24, #24]
  42f388:	cmp	x1, x0
  42f38c:	b.cs	42f3ac <ferror@plt+0x2c5dc>  // b.hs, b.nlast
  42f390:	mov	x1, x24
  42f394:	mov	x0, x19
  42f398:	mov	x2, #0x1f40                	// #8000
  42f39c:	bl	42874c <ferror@plt+0x2597c>
  42f3a0:	mov	x24, x0
  42f3a4:	ldr	x0, [x0, #16]
  42f3a8:	str	x0, [x22]
  42f3ac:	ldr	w0, [sp, #136]
  42f3b0:	cbz	w0, 42f3dc <ferror@plt+0x2c60c>
  42f3b4:	ldr	w0, [sp, #128]
  42f3b8:	cmp	w28, w0
  42f3bc:	b.ls	42f3dc <ferror@plt+0x2c60c>  // b.plast
  42f3c0:	add	w0, w0, #0x3e8
  42f3c4:	str	w0, [sp, #128]
  42f3c8:	ldr	x0, [sp, #128]
  42f3cc:	ubfiz	x1, x0, #2, #32
  42f3d0:	ldr	x0, [x22, #32]
  42f3d4:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  42f3d8:	str	x0, [x22, #32]
  42f3dc:	add	x1, sp, #0xf8
  42f3e0:	mov	x0, x19
  42f3e4:	bl	43051c <ferror@plt+0x2d74c>
  42f3e8:	mov	x28, x0
  42f3ec:	ldrb	w0, [x0, #4]
  42f3f0:	cmp	w0, #0x53
  42f3f4:	b.ne	42f428 <ferror@plt+0x2c658>  // b.any
  42f3f8:	cbz	w23, 42f374 <ferror@plt+0x2c5a4>
  42f3fc:	ldrb	w0, [x19, #1157]
  42f400:	mov	w3, w23
  42f404:	ldr	w2, [sp, #248]
  42f408:	mov	x1, x28
  42f40c:	cmp	w0, #0x0
  42f410:	add	w23, w23, #0x1
  42f414:	cset	w5, ne  // ne = any
  42f418:	mov	x0, x22
  42f41c:	mov	w4, #0x0                   	// #0
  42f420:	bl	42d5ac <ferror@plt+0x2a7dc>
  42f424:	b	42f374 <ferror@plt+0x2c5a4>
  42f428:	cmp	w0, #0x14
  42f42c:	b.ne	42f438 <ferror@plt+0x2c668>  // b.any
  42f430:	add	w27, w27, #0x1
  42f434:	b	42f3fc <ferror@plt+0x2c62c>
  42f438:	cmp	w0, #0x15
  42f43c:	b.ne	42f450 <ferror@plt+0x2c680>  // b.any
  42f440:	sub	w0, w27, #0x1
  42f444:	cbz	w27, 42f474 <ferror@plt+0x2c6a4>
  42f448:	mov	w27, w0
  42f44c:	b	42f3fc <ferror@plt+0x2c62c>
  42f450:	cmp	w0, #0x13
  42f454:	b.ne	42f550 <ferror@plt+0x2c780>  // b.any
  42f458:	cbnz	w27, 42f3fc <ferror@plt+0x2c62c>
  42f45c:	ldrb	w0, [x25, #19]
  42f460:	tbz	w0, #3, 42f474 <ferror@plt+0x2c6a4>
  42f464:	ldrh	w0, [x25, #16]
  42f468:	ldr	w1, [sp, #124]
  42f46c:	cmp	w1, w0
  42f470:	b.eq	42f3fc <ferror@plt+0x2c62c>  // b.none
  42f474:	cbz	w23, 42f490 <ferror@plt+0x2c6c0>
  42f478:	ldr	x1, [x22]
  42f47c:	sub	w0, w23, #0x1
  42f480:	ldr	x1, [x1, w0, uxtw #3]
  42f484:	ldrb	w1, [x1, #4]
  42f488:	cmp	w1, #0x53
  42f48c:	b.eq	42f620 <ferror@plt+0x2c850>  // b.none
  42f490:	ldr	w2, [x19, #688]
  42f494:	add	x1, x19, #0x2b0
  42f498:	str	w23, [x22, #24]
  42f49c:	mov	w3, w23
  42f4a0:	mov	w4, #0x0                   	// #0
  42f4a4:	ldrb	w0, [x19, #1157]
  42f4a8:	cmp	w0, #0x0
  42f4ac:	mov	x0, x22
  42f4b0:	cset	w5, ne  // ne = any
  42f4b4:	bl	42d5ac <ferror@plt+0x2a7dc>
  42f4b8:	ldrh	w1, [x25, #16]
  42f4bc:	ldr	w0, [sp, #124]
  42f4c0:	cmp	w0, w1
  42f4c4:	b.hi	42f4e4 <ferror@plt+0x2c714>  // b.pmore
  42f4c8:	ldr	x0, [x22]
  42f4cc:	add	w23, w23, #0x1
  42f4d0:	add	x23, x0, x23, lsl #3
  42f4d4:	mov	x0, x22
  42f4d8:	add	x22, x22, #0x30
  42f4dc:	str	x23, [x24, #16]
  42f4e0:	csel	x22, x22, x0, ne  // ne = any
  42f4e4:	ldrb	w2, [x28, #4]
  42f4e8:	sub	w0, w2, #0x15
  42f4ec:	and	w0, w0, #0xff
  42f4f0:	cmp	w0, #0x1
  42f4f4:	b.hi	42f33c <ferror@plt+0x2c56c>  // b.pmore
  42f4f8:	cmp	w2, #0x16
  42f4fc:	b.ne	42f628 <ferror@plt+0x2c858>  // b.any
  42f500:	ldr	x0, [x19, #136]
  42f504:	ldr	x0, [x0, #8]
  42f508:	cbnz	x0, 42f514 <ferror@plt+0x2c744>
  42f50c:	ldrb	w0, [x19, #16]
  42f510:	cbz	w0, 42f520 <ferror@plt+0x2c750>
  42f514:	mov	x0, x19
  42f518:	mov	w1, #0x1                   	// #1
  42f51c:	bl	42e2d4 <ferror@plt+0x2b504>
  42f520:	ldr	x3, [x20]
  42f524:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x245fc>
  42f528:	mov	x0, x19
  42f52c:	add	x2, x2, #0xe9
  42f530:	mov	w1, #0x3                   	// #3
  42f534:	bl	421610 <ferror@plt+0x1e840>
  42f538:	ldr	x1, [sp, #112]
  42f53c:	mov	x0, x19
  42f540:	bl	428690 <ferror@plt+0x258c0>
  42f544:	str	wzr, [sp, #124]
  42f548:	str	xzr, [sp, #112]
  42f54c:	b	42f69c <ferror@plt+0x2c8cc>
  42f550:	cmp	w0, #0x16
  42f554:	b.eq	42f474 <ferror@plt+0x2c6a4>  // b.none
  42f558:	cmp	w0, #0x25
  42f55c:	b.ne	42f56c <ferror@plt+0x2c79c>  // b.any
  42f560:	ldrh	w0, [x28, #6]
  42f564:	tbz	w0, #6, 42f3fc <ferror@plt+0x2c62c>
  42f568:	b	42f474 <ferror@plt+0x2c6a4>
  42f56c:	cmp	w0, #0x51
  42f570:	b.ne	42f3fc <ferror@plt+0x2c62c>  // b.any
  42f574:	mov	x0, x19
  42f578:	bl	427c18 <ferror@plt+0x24e48>
  42f57c:	ldp	x2, x3, [x28]
  42f580:	stp	x2, x3, [x0]
  42f584:	ldr	x1, [x28, #16]
  42f588:	mov	x28, x0
  42f58c:	str	x1, [x0, #16]
  42f590:	cbz	x21, 42f5f0 <ferror@plt+0x2c820>
  42f594:	ldp	x1, x0, [x21, #16]
  42f598:	sub	x0, x0, x1
  42f59c:	cmp	x0, #0x7
  42f5a0:	b.ls	42f604 <ferror@plt+0x2c834>  // b.plast
  42f5a4:	ldr	x0, [x21, #16]
  42f5a8:	str	x28, [x0], #8
  42f5ac:	str	x0, [x21, #16]
  42f5b0:	ldrb	w0, [x28, #4]
  42f5b4:	cmp	w0, #0x52
  42f5b8:	b.eq	42f5d8 <ferror@plt+0x2c808>  // b.none
  42f5bc:	add	x1, sp, #0xf8
  42f5c0:	mov	x0, x19
  42f5c4:	bl	43051c <ferror@plt+0x2d74c>
  42f5c8:	mov	x28, x0
  42f5cc:	ldrb	w0, [x0, #4]
  42f5d0:	cmp	w0, #0x16
  42f5d4:	b.ne	42f590 <ferror@plt+0x2c7c0>  // b.any
  42f5d8:	mov	w0, #0x201                 	// #513
  42f5dc:	strh	w0, [x19, #24]
  42f5e0:	ldrb	w0, [x28, #4]
  42f5e4:	cmp	w0, #0x16
  42f5e8:	b.eq	42f474 <ferror@plt+0x2c6a4>  // b.none
  42f5ec:	b	42f374 <ferror@plt+0x2c5a4>
  42f5f0:	mov	x0, x19
  42f5f4:	mov	x1, #0x100                 	// #256
  42f5f8:	bl	4286b0 <ferror@plt+0x258e0>
  42f5fc:	mov	x21, x0
  42f600:	b	42f5a4 <ferror@plt+0x2c7d4>
  42f604:	ldr	x0, [x21, #8]
  42f608:	sub	x1, x1, x0
  42f60c:	mov	x0, x19
  42f610:	lsl	x1, x1, #1
  42f614:	bl	4286b0 <ferror@plt+0x258e0>
  42f618:	str	x21, [x0]
  42f61c:	b	42f5fc <ferror@plt+0x2c82c>
  42f620:	mov	w23, w0
  42f624:	b	42f474 <ferror@plt+0x2c6a4>
  42f628:	ldr	w0, [sp, #124]
  42f62c:	cmp	w0, #0x1
  42f630:	b.ne	42f720 <ferror@plt+0x2c950>  // b.any
  42f634:	cbnz	w1, 42f720 <ferror@plt+0x2c950>
  42f638:	ldr	w0, [x26, #24]
  42f63c:	cmp	w0, #0x0
  42f640:	cset	w22, ne  // ne = any
  42f644:	mov	w3, w22
  42f648:	mov	x2, x20
  42f64c:	mov	x1, x25
  42f650:	mov	x0, x19
  42f654:	bl	42de0c <ferror@plt+0x2b03c>
  42f658:	tst	w0, #0xff
  42f65c:	b.eq	42f538 <ferror@plt+0x2c768>  // b.none
  42f660:	ldrb	w0, [x25, #19]
  42f664:	tbz	w0, #3, 42f69c <ferror@plt+0x2c8cc>
  42f668:	ldrh	w1, [x25, #16]
  42f66c:	cmp	w22, w1
  42f670:	b.cc	42f68c <ferror@plt+0x2c8bc>  // b.lo, b.ul, b.last
  42f674:	cmp	w22, #0x1
  42f678:	b.ne	42f69c <ferror@plt+0x2c8cc>  // b.any
  42f67c:	ldr	w0, [x26, #24]
  42f680:	cbnz	w0, 42f69c <ferror@plt+0x2c8cc>
  42f684:	ldrb	w0, [x19, #1153]
  42f688:	cbnz	w0, 42f69c <ferror@plt+0x2c8cc>
  42f68c:	mov	w0, #0x30                  	// #48
  42f690:	mov	x2, #0xffffffffffffffd0    	// #-48
  42f694:	umaddl	x0, w0, w1, x2
  42f698:	str	xzr, [x26, x0]
  42f69c:	ldr	w0, [x19, #500]
  42f6a0:	strb	wzr, [x19, #25]
  42f6a4:	sub	w0, w0, #0x1
  42f6a8:	str	w0, [x19, #500]
  42f6ac:	ldrb	w0, [x19, #24]
  42f6b0:	sub	w0, w0, #0x1
  42f6b4:	strb	w0, [x19, #24]
  42f6b8:	ldr	x0, [sp, #112]
  42f6bc:	cbnz	x0, 42f770 <ferror@plt+0x2c9a0>
  42f6c0:	ldrb	w0, [x19, #1138]
  42f6c4:	cbz	w0, 42f6ec <ferror@plt+0x2c91c>
  42f6c8:	ldr	x0, [x20, #24]
  42f6cc:	ldrb	w0, [x0, #19]
  42f6d0:	tbnz	w0, #4, 42f6ec <ferror@plt+0x2c91c>
  42f6d4:	ldr	x3, [x20]
  42f6d8:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x245fc>
  42f6dc:	mov	x0, x19
  42f6e0:	add	x2, x2, #0x118
  42f6e4:	mov	w1, #0x6                   	// #6
  42f6e8:	bl	42167c <ferror@plt+0x1e8ac>
  42f6ec:	cbz	x21, 42f6fc <ferror@plt+0x2c92c>
  42f6f0:	mov	x1, x21
  42f6f4:	mov	x0, x19
  42f6f8:	bl	428690 <ferror@plt+0x258c0>
  42f6fc:	mov	w0, #0x0                   	// #0
  42f700:	strb	wzr, [x19, #192]
  42f704:	ldp	x19, x20, [sp, #16]
  42f708:	ldp	x21, x22, [sp, #32]
  42f70c:	ldp	x23, x24, [sp, #48]
  42f710:	ldp	x25, x26, [sp, #64]
  42f714:	ldp	x27, x28, [sp, #80]
  42f718:	ldp	x29, x30, [sp], #272
  42f71c:	ret
  42f720:	ldr	w22, [sp, #124]
  42f724:	b	42f644 <ferror@plt+0x2c874>
  42f728:	cmp	w1, #0x16
  42f72c:	b.ne	42f748 <ferror@plt+0x2c978>  // b.any
  42f730:	add	x1, x19, #0x2b0
  42f734:	cmp	x0, x1
  42f738:	b.eq	42f748 <ferror@plt+0x2c978>  // b.none
  42f73c:	mov	x21, #0x0                   	// #0
  42f740:	str	wzr, [sp, #124]
  42f744:	b	42f548 <ferror@plt+0x2c778>
  42f748:	mov	x0, x19
  42f74c:	mov	w1, #0x1                   	// #1
  42f750:	bl	42e2d4 <ferror@plt+0x2b504>
  42f754:	cbz	x21, 42f73c <ferror@plt+0x2c96c>
  42f758:	mov	x2, x21
  42f75c:	mov	x0, x19
  42f760:	mov	w3, #0x1                   	// #1
  42f764:	mov	x1, #0x0                   	// #0
  42f768:	bl	42df04 <ferror@plt+0x2b134>
  42f76c:	b	42f73c <ferror@plt+0x2c96c>
  42f770:	ldr	x0, [sp, #104]
  42f774:	ldrh	w0, [x0, #16]
  42f778:	cbz	w0, 430278 <ferror@plt+0x2d4a8>
  42f77c:	ldr	x0, [sp, #112]
  42f780:	str	xzr, [sp, #216]
  42f784:	ldr	x0, [x0, #8]
  42f788:	str	x0, [sp, #136]
  42f78c:	ldr	x0, [sp, #104]
  42f790:	bl	42d920 <ferror@plt+0x2ab50>
  42f794:	mov	w25, w0
  42f798:	mov	w23, w0
  42f79c:	ldr	x0, [sp, #104]
  42f7a0:	add	x0, x0, #0x18
  42f7a4:	str	x0, [sp, #128]
  42f7a8:	mov	w0, #0x18                  	// #24
  42f7ac:	ldr	x1, [sp, #128]
  42f7b0:	mov	x24, x1
  42f7b4:	umaddl	x0, w25, w0, x1
  42f7b8:	str	x0, [sp, #160]
  42f7bc:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x245fc>
  42f7c0:	add	x0, x0, #0x15e
  42f7c4:	str	x0, [sp, #184]
  42f7c8:	ldr	x0, [sp, #160]
  42f7cc:	cmp	x0, x24
  42f7d0:	b.ls	42fc0c <ferror@plt+0x2ce3c>  // b.plast
  42f7d4:	ldrb	w0, [x24, #4]
  42f7d8:	cmp	w0, #0x50
  42f7dc:	b.ne	42fc04 <ferror@plt+0x2ce34>  // b.any
  42f7e0:	ldr	w26, [x24, #8]
  42f7e4:	add	w0, w23, #0x2
  42f7e8:	str	w0, [sp, #144]
  42f7ec:	mov	w0, #0x30                  	// #48
  42f7f0:	sub	w26, w26, #0x1
  42f7f4:	add	w25, w25, #0x2
  42f7f8:	umull	x26, w26, w0
  42f7fc:	ldr	x0, [sp, #136]
  42f800:	add	x22, x0, x26
  42f804:	ldrh	w0, [x24, #6]
  42f808:	tbz	w0, #2, 42fa90 <ferror@plt+0x2ccc0>
  42f80c:	ldr	x0, [x22, #16]
  42f810:	cbnz	x0, 42fa84 <ferror@plt+0x2ccb4>
  42f814:	ldr	x1, [x19, #64]
  42f818:	ldr	x0, [x1, #24]
  42f81c:	ldr	x1, [x1, #16]
  42f820:	sub	x0, x0, x1
  42f824:	cmp	x0, #0x2
  42f828:	b.hi	42f83c <ferror@plt+0x2ca6c>  // b.pmore
  42f82c:	add	x1, x19, #0x40
  42f830:	mov	x0, x19
  42f834:	mov	x2, #0x3                   	// #3
  42f838:	bl	42885c <ferror@plt+0x25a8c>
  42f83c:	mov	x1, x19
  42f840:	mov	x26, #0x0                   	// #0
  42f844:	mov	w23, #0x0                   	// #0
  42f848:	str	wzr, [sp, #152]
  42f84c:	ldr	x0, [x1, #64]!
  42f850:	str	x1, [sp, #168]
  42f854:	ldr	x28, [x0, #16]
  42f858:	mov	w0, #0x22                  	// #34
  42f85c:	strb	w0, [x28], #1
  42f860:	ldr	w0, [x22, #24]
  42f864:	ldr	w1, [sp, #152]
  42f868:	cmp	w0, w1
  42f86c:	b.ls	42fa28 <ferror@plt+0x2cc58>  // b.plast
  42f870:	ldr	x0, [x22]
  42f874:	ldr	x27, [x0, w1, uxtw #3]
  42f878:	ldrb	w0, [x27, #4]
  42f87c:	cmp	w0, #0x53
  42f880:	b.ne	42f8ac <ferror@plt+0x2cadc>  // b.any
  42f884:	cbz	x26, 42f898 <ferror@plt+0x2cac8>
  42f888:	ldrh	w0, [x26, #6]
  42f88c:	tbnz	w0, #0, 42f89c <ferror@plt+0x2cacc>
  42f890:	ldr	x0, [x27, #8]
  42f894:	cbnz	x0, 42f89c <ferror@plt+0x2cacc>
  42f898:	ldr	x26, [x27, #8]
  42f89c:	ldr	w0, [sp, #152]
  42f8a0:	add	w0, w0, #0x1
  42f8a4:	str	w0, [sp, #152]
  42f8a8:	b	42f860 <ferror@plt+0x2ca90>
  42f8ac:	sub	w1, w0, #0x3e
  42f8b0:	and	w1, w1, #0xff
  42f8b4:	cmp	w1, #0x4
  42f8b8:	b.hi	42f9d4 <ferror@plt+0x2cc04>  // b.pmore
  42f8bc:	mov	w5, #0x1                   	// #1
  42f8c0:	mov	x0, x27
  42f8c4:	str	w5, [sp, #192]
  42f8c8:	bl	427dbc <ferror@plt+0x24fec>
  42f8cc:	mov	w2, w0
  42f8d0:	ldr	w5, [sp, #192]
  42f8d4:	cbz	w5, 42f8dc <ferror@plt+0x2cb0c>
  42f8d8:	lsl	x2, x2, #2
  42f8dc:	ldr	x1, [x19, #64]
  42f8e0:	add	x2, x2, #0x3
  42f8e4:	ldr	x0, [x1, #24]
  42f8e8:	sub	x0, x0, x28
  42f8ec:	cmp	x2, x0
  42f8f0:	b.ls	42f924 <ferror@plt+0x2cb54>  // b.plast
  42f8f4:	ldr	x0, [x1, #16]
  42f8f8:	str	x2, [sp, #192]
  42f8fc:	ldr	x1, [sp, #168]
  42f900:	sub	x28, x28, x0
  42f904:	mov	x0, x19
  42f908:	str	w5, [sp, #204]
  42f90c:	bl	42885c <ferror@plt+0x25a8c>
  42f910:	ldr	x0, [x19, #64]
  42f914:	ldr	w5, [sp, #204]
  42f918:	ldr	x2, [sp, #192]
  42f91c:	ldr	x0, [x0, #16]
  42f920:	add	x28, x0, x28
  42f924:	ldr	x1, [x19, #64]
  42f928:	sub	x0, x28, #0x1
  42f92c:	ldr	x1, [x1, #16]
  42f930:	cmp	x1, x0
  42f934:	b.eq	42f958 <ferror@plt+0x2cb88>  // b.none
  42f938:	cmp	x26, #0x0
  42f93c:	csel	x26, x26, x27, ne  // ne = any
  42f940:	ldrh	w0, [x26, #6]
  42f944:	tbz	w0, #0, 42f958 <ferror@plt+0x2cb88>
  42f948:	mov	x4, x28
  42f94c:	mov	w0, #0x20                  	// #32
  42f950:	strb	w0, [x4], #1
  42f954:	mov	x28, x4
  42f958:	cbz	w5, 42fa00 <ferror@plt+0x2cc30>
  42f95c:	mov	x1, x2
  42f960:	mov	x0, x19
  42f964:	bl	4286b0 <ferror@plt+0x258e0>
  42f968:	mov	x26, x0
  42f96c:	mov	x1, x27
  42f970:	mov	w3, #0x1                   	// #1
  42f974:	mov	x0, x19
  42f978:	ldr	x6, [x26, #16]
  42f97c:	str	x6, [sp, #192]
  42f980:	mov	x2, x6
  42f984:	bl	427e74 <ferror@plt+0x250a4>
  42f988:	ldr	x6, [sp, #192]
  42f98c:	sub	w2, w0, w6
  42f990:	mov	x1, x6
  42f994:	mov	x0, x28
  42f998:	bl	42da04 <ferror@plt+0x2ac34>
  42f99c:	mov	x1, x26
  42f9a0:	mov	x28, x0
  42f9a4:	mov	x0, x19
  42f9a8:	bl	428690 <ferror@plt+0x258c0>
  42f9ac:	ldrb	w0, [x27, #4]
  42f9b0:	cmp	w0, #0x3d
  42f9b4:	b.ne	42fa1c <ferror@plt+0x2cc4c>  // b.any
  42f9b8:	ldr	x0, [x27, #16]
  42f9bc:	ldrb	w0, [x0]
  42f9c0:	cmp	w0, #0x5c
  42f9c4:	b.ne	42fa1c <ferror@plt+0x2cc4c>  // b.any
  42f9c8:	add	w23, w23, #0x1
  42f9cc:	mov	x26, #0x0                   	// #0
  42f9d0:	b	42f89c <ferror@plt+0x2cacc>
  42f9d4:	sub	w1, w0, #0x38
  42f9d8:	and	w1, w1, #0xff
  42f9dc:	cmp	w1, #0x4
  42f9e0:	b.ls	42f8bc <ferror@plt+0x2caec>  // b.plast
  42f9e4:	bl	422b4c <ferror@plt+0x1fd7c>
  42f9e8:	tst	w0, #0xff
  42f9ec:	b.ne	42f8bc <ferror@plt+0x2caec>  // b.any
  42f9f0:	ldrb	w0, [x27, #4]
  42f9f4:	bl	422b5c <ferror@plt+0x1fd8c>
  42f9f8:	and	w5, w0, #0xff
  42f9fc:	b	42f8c0 <ferror@plt+0x2caf0>
  42fa00:	mov	x2, x28
  42fa04:	mov	x1, x27
  42fa08:	mov	x0, x19
  42fa0c:	mov	w3, #0x1                   	// #1
  42fa10:	bl	427e74 <ferror@plt+0x250a4>
  42fa14:	mov	x28, x0
  42fa18:	b	42f9ac <ferror@plt+0x2cbdc>
  42fa1c:	mov	x26, #0x0                   	// #0
  42fa20:	mov	w23, #0x0                   	// #0
  42fa24:	b	42f89c <ferror@plt+0x2cacc>
  42fa28:	tbz	w23, #0, 42fa40 <ferror@plt+0x2cc70>
  42fa2c:	ldr	x2, [sp, #184]
  42fa30:	mov	x0, x19
  42fa34:	sub	x28, x28, #0x1
  42fa38:	mov	w1, #0x0                   	// #0
  42fa3c:	bl	421610 <ferror@plt+0x1e840>
  42fa40:	mov	x4, x28
  42fa44:	mov	w0, #0x22                  	// #34
  42fa48:	add	x26, x28, #0x1
  42fa4c:	strb	w0, [x4], #2
  42fa50:	ldr	x0, [x19, #64]
  42fa54:	ldr	x23, [x0, #16]
  42fa58:	str	x4, [x0, #16]
  42fa5c:	mov	x0, x19
  42fa60:	sub	x26, x26, x23
  42fa64:	bl	427c18 <ferror@plt+0x24e48>
  42fa68:	mov	w1, #0x3e                  	// #62
  42fa6c:	strb	wzr, [x23, w26, uxtw]
  42fa70:	strb	w1, [x0, #4]
  42fa74:	strh	wzr, [x0, #6]
  42fa78:	str	w26, [x0, #8]
  42fa7c:	str	x23, [x0, #16]
  42fa80:	str	x0, [x22, #16]
  42fa84:	ldr	w23, [sp, #144]
  42fa88:	add	x24, x24, #0x18
  42fa8c:	b	42f7c8 <ferror@plt+0x2c9f8>
  42fa90:	tbnz	w0, #3, 42faa8 <ferror@plt+0x2ccd8>
  42fa94:	ldr	x0, [sp, #128]
  42fa98:	cmp	x0, x24
  42fa9c:	b.eq	42fabc <ferror@plt+0x2ccec>  // b.none
  42faa0:	ldurh	w0, [x24, #-18]
  42faa4:	tbz	w0, #3, 42fabc <ferror@plt+0x2ccec>
  42faa8:	ldr	w27, [x22, #24]
  42faac:	add	w23, w23, #0x1
  42fab0:	add	w0, w23, w27
  42fab4:	str	w0, [sp, #144]
  42fab8:	b	42fa84 <ferror@plt+0x2ccb4>
  42fabc:	ldr	x0, [x22, #8]
  42fac0:	cbnz	x0, 42fbf8 <ferror@plt+0x2ce28>
  42fac4:	ldr	w0, [x22, #24]
  42fac8:	cbz	w0, 42fbf8 <ferror@plt+0x2ce28>
  42facc:	ldrb	w0, [x19, #1138]
  42fad0:	strb	wzr, [x19, #1138]
  42fad4:	cmp	w0, #0x0
  42fad8:	ldrb	w27, [x19, #1157]
  42fadc:	cset	w28, ne  // ne = any
  42fae0:	mov	x0, #0x800                 	// #2048
  42fae4:	bl	44526c <_obstack_memory_used@@Base+0x868>
  42fae8:	str	x0, [x22, #8]
  42faec:	ldrb	w0, [x19, #1157]
  42faf0:	cbz	w0, 42fb00 <ferror@plt+0x2cd30>
  42faf4:	mov	x0, #0x400                 	// #1024
  42faf8:	bl	44526c <_obstack_memory_used@@Base+0x868>
  42fafc:	str	x0, [x22, #40]
  42fb00:	ldr	x0, [sp, #136]
  42fb04:	ldr	x4, [x0, x26]
  42fb08:	ldr	w26, [x22, #24]
  42fb0c:	add	w26, w26, #0x1
  42fb10:	cbz	w27, 42fbc0 <ferror@plt+0x2cdf0>
  42fb14:	ldr	x3, [x22, #32]
  42fb18:	mov	w5, w26
  42fb1c:	mov	x0, x19
  42fb20:	mov	x2, #0x0                   	// #0
  42fb24:	mov	x1, #0x0                   	// #0
  42fb28:	bl	42d794 <ferror@plt+0x2a9c4>
  42fb2c:	mov	x26, #0x100                 	// #256
  42fb30:	ldr	w27, [x22, #28]
  42fb34:	add	w27, w27, #0x1
  42fb38:	cmp	x27, x26
  42fb3c:	b.ls	42fb74 <ferror@plt+0x2cda4>  // b.plast
  42fb40:	ldr	x0, [x22, #8]
  42fb44:	lsl	x1, x27, #4
  42fb48:	lsl	x26, x27, #1
  42fb4c:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  42fb50:	str	x0, [x22, #8]
  42fb54:	ldrb	w0, [x19, #1157]
  42fb58:	cbz	w0, 42fb74 <ferror@plt+0x2cda4>
  42fb5c:	ldr	x0, [x22, #40]
  42fb60:	lsl	x1, x27, #3
  42fb64:	cbnz	x0, 42fbe4 <ferror@plt+0x2ce14>
  42fb68:	mov	x0, x1
  42fb6c:	bl	44526c <_obstack_memory_used@@Base+0x868>
  42fb70:	str	x0, [x22, #40]
  42fb74:	add	x1, sp, #0xf8
  42fb78:	mov	x0, x19
  42fb7c:	bl	43051c <ferror@plt+0x2d74c>
  42fb80:	mov	x1, x0
  42fb84:	ldrb	w0, [x0, #4]
  42fb88:	cmp	w0, #0x16
  42fb8c:	b.eq	42fbec <ferror@plt+0x2ce1c>  // b.none
  42fb90:	ldrb	w0, [x19, #1157]
  42fb94:	mov	w4, #0x2                   	// #2
  42fb98:	ldr	w3, [x22, #28]
  42fb9c:	ldr	w2, [sp, #248]
  42fba0:	cmp	w0, #0x0
  42fba4:	cset	w5, ne  // ne = any
  42fba8:	mov	x0, x22
  42fbac:	bl	42d5ac <ferror@plt+0x2a7dc>
  42fbb0:	ldr	w0, [x22, #28]
  42fbb4:	add	w0, w0, #0x1
  42fbb8:	str	w0, [x22, #28]
  42fbbc:	b	42fb30 <ferror@plt+0x2cd60>
  42fbc0:	add	x0, x19, #0x88
  42fbc4:	str	x4, [sp, #144]
  42fbc8:	bl	42d744 <ferror@plt+0x2a974>
  42fbcc:	stp	xzr, xzr, [x0, #32]
  42fbd0:	ldr	x4, [sp, #144]
  42fbd4:	str	wzr, [x0, #48]
  42fbd8:	add	x26, x4, w26, uxtw #3
  42fbdc:	stp	x4, x26, [x0, #16]
  42fbe0:	b	42fb2c <ferror@plt+0x2cd5c>
  42fbe4:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  42fbe8:	b	42fb70 <ferror@plt+0x2cda0>
  42fbec:	mov	x0, x19
  42fbf0:	bl	42e164 <ferror@plt+0x2b394>
  42fbf4:	strb	w28, [x19, #1138]
  42fbf8:	ldr	w27, [x22, #28]
  42fbfc:	add	w23, w23, #0x1
  42fc00:	b	42fab0 <ferror@plt+0x2cce0>
  42fc04:	str	w23, [sp, #144]
  42fc08:	b	42fa84 <ferror@plt+0x2ccb4>
  42fc0c:	ldrb	w0, [x19, #1157]
  42fc10:	add	x2, sp, #0xd8
  42fc14:	mov	w1, w23
  42fc18:	str	w0, [sp, #144]
  42fc1c:	cmp	w0, #0x0
  42fc20:	mov	x0, x19
  42fc24:	csel	x2, x2, xzr, ne  // ne = any
  42fc28:	bl	42d688 <ferror@plt+0x2a8b8>
  42fc2c:	mov	x24, x0
  42fc30:	ldr	x0, [x0, #8]
  42fc34:	str	x0, [sp, #152]
  42fc38:	ldr	w0, [sp, #144]
  42fc3c:	cbz	w0, 42fd5c <ferror@plt+0x2cf8c>
  42fc40:	cmp	w0, #0x1
  42fc44:	ldr	w2, [sp, #200]
  42fc48:	ldr	x0, [x19, #40]
  42fc4c:	csel	w3, w23, w25, ne  // ne = any
  42fc50:	mov	x1, x20
  42fc54:	bl	42b448 <ferror@plt+0x28678>
  42fc58:	mov	x27, x0
  42fc5c:	ldr	x0, [sp, #104]
  42fc60:	mov	x2, #0xffffffffffffffd0    	// #-48
  42fc64:	ldr	x22, [sp, #128]
  42fc68:	mov	x23, #0x0                   	// #0
  42fc6c:	ldrh	w3, [x0, #16]
  42fc70:	mov	w26, #0x0                   	// #0
  42fc74:	ldrb	w1, [x0, #19]
  42fc78:	mov	w0, #0x30                  	// #48
  42fc7c:	str	x19, [sp, #224]
  42fc80:	strb	wzr, [sp, #234]
  42fc84:	umaddl	x0, w0, w3, x2
  42fc88:	ubfx	x1, x1, #3, #1
  42fc8c:	ldr	x2, [sp, #136]
  42fc90:	strb	w1, [sp, #233]
  42fc94:	str	wzr, [sp, #236]
  42fc98:	add	x0, x2, x0
  42fc9c:	str	xzr, [sp, #240]
  42fca0:	ldr	w0, [x0, #24]
  42fca4:	cmp	w0, #0x0
  42fca8:	cset	w0, ne  // ne = any
  42fcac:	strb	w0, [sp, #232]
  42fcb0:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x245fc>
  42fcb4:	add	x0, x0, #0x1d9
  42fcb8:	str	x0, [sp, #168]
  42fcbc:	ldr	x0, [sp, #160]
  42fcc0:	cmp	x0, x22
  42fcc4:	b.ls	43022c <ferror@plt+0x2d45c>  // b.plast
  42fcc8:	mov	x1, x22
  42fccc:	add	x0, sp, #0xe0
  42fcd0:	bl	430cd4 <ferror@plt+0x2df04>
  42fcd4:	cmp	w0, #0x2
  42fcd8:	b.eq	42fe18 <ferror@plt+0x2d048>  // b.none
  42fcdc:	cmp	w0, #0x3
  42fce0:	b.ne	42fd64 <ferror@plt+0x2cf94>  // b.any
  42fce4:	ldr	x0, [sp, #128]
  42fce8:	cmp	x0, x22
  42fcec:	b.eq	42fd44 <ferror@plt+0x2cf74>  // b.none
  42fcf0:	ldurh	w0, [x22, #-18]
  42fcf4:	tbnz	w0, #3, 42fd44 <ferror@plt+0x2cf74>
  42fcf8:	mov	x1, x22
  42fcfc:	mov	x0, x19
  42fd00:	bl	42d658 <ferror@plt+0x2a888>
  42fd04:	mov	x2, x0
  42fd08:	ldr	x1, [sp, #128]
  42fd0c:	mov	x5, x27
  42fd10:	ldrb	w0, [x19, #1157]
  42fd14:	sub	x6, x22, x1
  42fd18:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  42fd1c:	movk	x1, #0xaaab
  42fd20:	ldr	w4, [x2]
  42fd24:	asr	x6, x6, #3
  42fd28:	cmp	w0, #0x2
  42fd2c:	mov	w3, w4
  42fd30:	mov	x0, x24
  42fd34:	mul	x6, x6, x1
  42fd38:	ldr	x1, [sp, #216]
  42fd3c:	csel	w6, w6, w26, cc  // cc = lo, ul, last
  42fd40:	bl	42d884 <ferror@plt+0x2aab4>
  42fd44:	ldp	x1, x0, [x24, #8]
  42fd48:	sub	x23, x0, #0x8
  42fd4c:	cmp	x0, x1
  42fd50:	csel	x23, x23, xzr, ne  // ne = any
  42fd54:	add	x22, x22, #0x18
  42fd58:	b	42fcbc <ferror@plt+0x2ceec>
  42fd5c:	mov	x27, #0x0                   	// #0
  42fd60:	b	42fc5c <ferror@plt+0x2ce8c>
  42fd64:	cmp	w0, #0x4
  42fd68:	b.ne	42fd54 <ferror@plt+0x2cf84>  // b.any
  42fd6c:	ldp	x2, x1, [x24, #8]
  42fd70:	cmp	x1, x2
  42fd74:	b.eq	42fdc0 <ferror@plt+0x2cff0>  // b.none
  42fd78:	sub	x1, x1, #0x8
  42fd7c:	cmp	x1, #0x0
  42fd80:	ccmp	x1, x23, #0x4, ne  // ne = any
  42fd84:	b.eq	42fdc4 <ferror@plt+0x2cff4>  // b.none
  42fd88:	ldr	x0, [x1]
  42fd8c:	ldrb	w0, [x0, #4]
  42fd90:	cmp	w0, #0x53
  42fd94:	b.ne	42fdc4 <ferror@plt+0x2cff4>  // b.any
  42fd98:	ldr	x0, [x24, #16]
  42fd9c:	cmp	x2, x0
  42fda0:	b.cs	42fdac <ferror@plt+0x2cfdc>  // b.hs, b.nlast
  42fda4:	sub	x0, x0, #0x8
  42fda8:	str	x0, [x24, #16]
  42fdac:	ldr	x0, [x24, #16]
  42fdb0:	sub	x1, x0, #0x8
  42fdb4:	cmp	x2, x0
  42fdb8:	csel	x1, x1, xzr, ne  // ne = any
  42fdbc:	b	42fd7c <ferror@plt+0x2cfac>
  42fdc0:	mov	x1, #0x0                   	// #0
  42fdc4:	ldrh	w0, [x22, #6]
  42fdc8:	tbz	w0, #3, 42fdf4 <ferror@plt+0x2d024>
  42fdcc:	cbz	x1, 42fdec <ferror@plt+0x2d01c>
  42fdd0:	ldr	x0, [x1]
  42fdd4:	ldrb	w0, [x0, #4]
  42fdd8:	cmp	w0, #0x53
  42fddc:	b.eq	42fdec <ferror@plt+0x2d01c>  // b.none
  42fde0:	add	x2, x22, #0x6
  42fde4:	mov	x0, x19
  42fde8:	bl	42d81c <ferror@plt+0x2aa4c>
  42fdec:	mov	x23, #0x0                   	// #0
  42fdf0:	b	42fd54 <ferror@plt+0x2cf84>
  42fdf4:	ldr	w4, [x19, #664]
  42fdf8:	add	x2, x19, #0x298
  42fdfc:	ldr	x1, [sp, #216]
  42fe00:	mov	x0, x24
  42fe04:	mov	w3, w4
  42fe08:	mov	w6, #0x0                   	// #0
  42fe0c:	mov	x5, #0x0                   	// #0
  42fe10:	bl	42d884 <ferror@plt+0x2aab4>
  42fe14:	b	42fdec <ferror@plt+0x2d01c>
  42fe18:	ldrb	w0, [x22, #4]
  42fe1c:	ldrb	w1, [x19, #1157]
  42fe20:	cmp	w0, #0x50
  42fe24:	b.eq	42fe6c <ferror@plt+0x2d09c>  // b.none
  42fe28:	ldr	x0, [sp, #128]
  42fe2c:	cmp	w1, #0x2
  42fe30:	ldr	w4, [x22]
  42fe34:	mov	x5, x27
  42fe38:	sub	x6, x22, x0
  42fe3c:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  42fe40:	movk	x0, #0xaaab
  42fe44:	mov	x2, x22
  42fe48:	asr	x6, x6, #3
  42fe4c:	mov	w3, w4
  42fe50:	ldr	x1, [sp, #216]
  42fe54:	mul	x6, x6, x0
  42fe58:	mov	x0, x24
  42fe5c:	csel	w6, w6, w26, cc  // cc = lo, ul, last
  42fe60:	add	w26, w26, #0x1
  42fe64:	bl	42d884 <ferror@plt+0x2aab4>
  42fe68:	b	42fd54 <ferror@plt+0x2cf84>
  42fe6c:	ldr	w0, [x22, #8]
  42fe70:	mov	w2, #0x30                  	// #48
  42fe74:	cmp	w1, #0x0
  42fe78:	sub	w0, w0, #0x1
  42fe7c:	cset	w1, ne  // ne = any
  42fe80:	umull	x0, w0, w2
  42fe84:	ldr	x2, [sp, #136]
  42fe88:	add	x3, x2, x0
  42fe8c:	ldrh	w2, [x22, #6]
  42fe90:	tbz	w2, #2, 430038 <ferror@plt+0x2d268>
  42fe94:	mov	x28, #0x0                   	// #0
  42fe98:	mov	w25, #0x1                   	// #1
  42fe9c:	add	x4, x3, #0x10
  42fea0:	add	x0, sp, #0xf8
  42fea4:	mov	w2, #0x1                   	// #1
  42fea8:	bl	42d5f0 <ferror@plt+0x2a820>
  42feac:	ldrb	w0, [x19, #16]
  42feb0:	cbz	w0, 42febc <ferror@plt+0x2d0ec>
  42feb4:	ldrb	w0, [x19, #17]
  42feb8:	cbz	w0, 42ff30 <ferror@plt+0x2d160>
  42febc:	ldr	x0, [sp, #128]
  42fec0:	cmp	x0, x22
  42fec4:	b.eq	42ff30 <ferror@plt+0x2d160>  // b.none
  42fec8:	ldurh	w0, [x22, #-18]
  42fecc:	tbnz	w0, #3, 42ff30 <ferror@plt+0x2d160>
  42fed0:	mov	x1, x23
  42fed4:	mov	x0, x24
  42fed8:	bl	42d95c <ferror@plt+0x2ab8c>
  42fedc:	tst	w0, #0xff
  42fee0:	b.ne	42ff30 <ferror@plt+0x2d160>  // b.any
  42fee4:	mov	x1, x22
  42fee8:	mov	x0, x19
  42feec:	bl	42d658 <ferror@plt+0x2a888>
  42fef0:	mov	x2, x0
  42fef4:	ldr	x1, [sp, #128]
  42fef8:	mov	x5, x27
  42fefc:	ldrb	w0, [x19, #1157]
  42ff00:	sub	x6, x22, x1
  42ff04:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  42ff08:	movk	x1, #0xaaab
  42ff0c:	ldr	w4, [x2]
  42ff10:	asr	x6, x6, #3
  42ff14:	cmp	w0, #0x2
  42ff18:	mov	w3, w4
  42ff1c:	mov	x0, x24
  42ff20:	mul	x6, x6, x1
  42ff24:	ldr	x1, [sp, #216]
  42ff28:	csel	w6, w6, w26, cc  // cc = lo, ul, last
  42ff2c:	bl	42d884 <ferror@plt+0x2aab4>
  42ff30:	cbz	w25, 430168 <ferror@plt+0x2d398>
  42ff34:	ldr	x0, [sp, #128]
  42ff38:	mov	w9, #0x0                   	// #0
  42ff3c:	sub	x8, x22, x0
  42ff40:	mov	w0, #0xaaab                	// #43691
  42ff44:	movk	w0, #0xaaaa, lsl #16
  42ff48:	asr	x8, x8, #3
  42ff4c:	mul	w8, w8, w0
  42ff50:	ldr	w0, [sp, #144]
  42ff54:	add	w6, w26, w9
  42ff58:	ldr	x1, [sp, #216]
  42ff5c:	cmp	w0, #0x1
  42ff60:	ldrb	w0, [x19, #1157]
  42ff64:	csel	w6, w6, w26, gt
  42ff68:	cmp	w0, #0x1
  42ff6c:	ldr	x0, [sp, #256]
  42ff70:	csel	w6, w6, w8, hi  // hi = pmore
  42ff74:	cbz	x0, 430158 <ferror@plt+0x2d388>
  42ff78:	ldr	x2, [x0]
  42ff7c:	ldrb	w3, [sp, #248]
  42ff80:	cbz	w3, 430160 <ferror@plt+0x2d390>
  42ff84:	ldr	x0, [sp, #264]
  42ff88:	mov	x5, x27
  42ff8c:	ldr	w3, [x0]
  42ff90:	mov	x0, x24
  42ff94:	ldr	w4, [x22]
  42ff98:	str	w8, [sp, #184]
  42ff9c:	str	w9, [sp, #192]
  42ffa0:	bl	42d884 <ferror@plt+0x2aab4>
  42ffa4:	add	x0, sp, #0xf8
  42ffa8:	bl	42d714 <ferror@plt+0x2a944>
  42ffac:	ldr	w9, [sp, #192]
  42ffb0:	ldr	w8, [sp, #184]
  42ffb4:	add	w9, w9, #0x1
  42ffb8:	cmp	w25, w9
  42ffbc:	b.ne	42ff50 <ferror@plt+0x2d180>  // b.any
  42ffc0:	ldrh	w0, [x22, #6]
  42ffc4:	tbz	w0, #3, 42ffd8 <ferror@plt+0x2d208>
  42ffc8:	ldp	x1, x0, [x24, #8]
  42ffcc:	sub	x7, x0, #0x8
  42ffd0:	cmp	x0, x1
  42ffd4:	csel	x28, x7, xzr, ne  // ne = any
  42ffd8:	ldrb	w0, [x19, #16]
  42ffdc:	cbnz	w0, 43001c <ferror@plt+0x2d24c>
  42ffe0:	ldrh	w0, [x22, #6]
  42ffe4:	tbnz	w0, #3, 43001c <ferror@plt+0x2d24c>
  42ffe8:	mov	x1, x23
  42ffec:	mov	x0, x24
  42fff0:	bl	42d95c <ferror@plt+0x2ab8c>
  42fff4:	tst	w0, #0xff
  42fff8:	b.ne	43001c <ferror@plt+0x2d24c>  // b.any
  42fffc:	ldr	w4, [x19, #664]
  430000:	add	x2, x19, #0x298
  430004:	ldr	x1, [sp, #216]
  430008:	mov	x0, x24
  43000c:	mov	w3, w4
  430010:	mov	w6, #0x0                   	// #0
  430014:	mov	x5, #0x0                   	// #0
  430018:	bl	42d884 <ferror@plt+0x2aab4>
  43001c:	cbz	x28, 430030 <ferror@plt+0x2d260>
  430020:	add	x2, x22, #0x6
  430024:	mov	x1, x28
  430028:	mov	x0, x19
  43002c:	bl	42d81c <ferror@plt+0x2aa4c>
  430030:	add	w26, w26, w25
  430034:	b	42fd54 <ferror@plt+0x2cf84>
  430038:	tbz	w2, #3, 43005c <ferror@plt+0x2d28c>
  43003c:	ldr	x2, [sp, #136]
  430040:	ldr	w25, [x3, #24]
  430044:	ldr	x4, [x2, x0]
  430048:	add	x0, sp, #0xf8
  43004c:	mov	w2, #0x0                   	// #0
  430050:	bl	42d5f0 <ferror@plt+0x2a820>
  430054:	mov	x28, #0x0                   	// #0
  430058:	b	42feac <ferror@plt+0x2d0dc>
  43005c:	ldr	x2, [sp, #128]
  430060:	cmp	x2, x22
  430064:	b.eq	430104 <ferror@plt+0x2d334>  // b.none
  430068:	ldurh	w2, [x22, #-18]
  43006c:	tbz	w2, #3, 430104 <ferror@plt+0x2d334>
  430070:	ldr	x2, [sp, #136]
  430074:	ldr	w25, [x3, #24]
  430078:	ldr	x4, [x2, x0]
  43007c:	add	x0, sp, #0xf8
  430080:	mov	w2, #0x0                   	// #0
  430084:	bl	42d5f0 <ferror@plt+0x2a820>
  430088:	ldp	x1, x0, [x24, #8]
  43008c:	sub	x2, x0, x1
  430090:	tst	x2, #0x7fffffff8
  430094:	b.eq	430054 <ferror@plt+0x2d284>  // b.none
  430098:	cmp	x0, x1
  43009c:	b.eq	430508 <ferror@plt+0x2d738>  // b.none
  4300a0:	ldur	x2, [x0, #-8]
  4300a4:	sub	x28, x0, #0x8
  4300a8:	ldrb	w2, [x2, #4]
  4300ac:	cmp	w2, #0x13
  4300b0:	b.ne	4300f4 <ferror@plt+0x2d324>  // b.any
  4300b4:	ldr	x2, [sp, #104]
  4300b8:	ldrb	w2, [x2, #19]
  4300bc:	tbz	w2, #3, 4300f4 <ferror@plt+0x2d324>
  4300c0:	ldr	x2, [sp, #104]
  4300c4:	ldr	w3, [x22, #8]
  4300c8:	ldrh	w2, [x2, #16]
  4300cc:	cmp	w3, w2
  4300d0:	b.ne	4300f4 <ferror@plt+0x2d324>  // b.any
  4300d4:	ldr	x2, [sp, #256]
  4300d8:	cbz	x2, 4300e4 <ferror@plt+0x2d314>
  4300dc:	ldr	x2, [x2]
  4300e0:	cbnz	x2, 42feac <ferror@plt+0x2d0dc>
  4300e4:	cmp	x0, x1
  4300e8:	b.ls	430054 <ferror@plt+0x2d284>  // b.plast
  4300ec:	str	x28, [x24, #16]
  4300f0:	b	430054 <ferror@plt+0x2d284>
  4300f4:	cmp	w25, #0x0
  4300f8:	ccmp	x23, x28, #0x4, eq  // eq = none
  4300fc:	csel	x28, x28, xzr, ne  // ne = any
  430100:	b	42feac <ferror@plt+0x2d0dc>
  430104:	ldr	x4, [x3, #8]
  430108:	mov	w2, #0x2                   	// #2
  43010c:	ldr	w25, [x3, #28]
  430110:	add	x0, sp, #0xf8
  430114:	bl	42d5f0 <ferror@plt+0x2a820>
  430118:	mov	x1, x23
  43011c:	mov	x0, x24
  430120:	bl	42d95c <ferror@plt+0x2ab8c>
  430124:	tst	w0, #0xff
  430128:	b.eq	430054 <ferror@plt+0x2d284>  // b.none
  43012c:	cbz	w25, 430054 <ferror@plt+0x2d284>
  430130:	ldr	x0, [sp, #256]
  430134:	cbz	x0, 430514 <ferror@plt+0x2d744>
  430138:	ldr	x0, [x0]
  43013c:	ldrb	w0, [x0, #4]
  430140:	cmp	w0, #0x53
  430144:	b.ne	430054 <ferror@plt+0x2d284>  // b.any
  430148:	add	x0, sp, #0xf8
  43014c:	sub	w25, w25, #0x1
  430150:	bl	42d714 <ferror@plt+0x2a944>
  430154:	b	43012c <ferror@plt+0x2d35c>
  430158:	mov	x2, #0x0                   	// #0
  43015c:	b	42ff7c <ferror@plt+0x2d1ac>
  430160:	ldr	x0, [x0]
  430164:	b	42ff88 <ferror@plt+0x2d1b8>
  430168:	ldrb	w0, [x19, #1154]
  43016c:	cbz	w0, 430194 <ferror@plt+0x2d3c4>
  430170:	ldrb	w0, [x19, #1152]
  430174:	cbnz	w0, 430194 <ferror@plt+0x2d3c4>
  430178:	ldr	x0, [sp, #104]
  43017c:	ldrb	w0, [x0, #19]
  430180:	tbnz	w0, #4, 430194 <ferror@plt+0x2d3c4>
  430184:	ldr	x0, [x19]
  430188:	cbz	x0, 4301e0 <ferror@plt+0x2d410>
  43018c:	ldrb	w0, [x0, #106]
  430190:	cbz	w0, 4301e0 <ferror@plt+0x2d410>
  430194:	ldrsb	w0, [x19, #1198]
  430198:	cmp	w0, #0x0
  43019c:	b.le	42ffd8 <ferror@plt+0x2d208>
  4301a0:	ldrb	w0, [x19, #1120]
  4301a4:	cbnz	w0, 42ffd8 <ferror@plt+0x2d208>
  4301a8:	ldr	x0, [sp, #104]
  4301ac:	ldrb	w0, [x0, #19]
  4301b0:	tbnz	w0, #4, 42ffd8 <ferror@plt+0x2d208>
  4301b4:	ldr	x0, [x19]
  4301b8:	cbz	x0, 4301c4 <ferror@plt+0x2d3f4>
  4301bc:	ldrb	w0, [x0, #106]
  4301c0:	cbnz	w0, 42ffd8 <ferror@plt+0x2d208>
  4301c4:	ldr	w4, [x22, #8]
  4301c8:	mov	x0, x19
  4301cc:	ldr	x3, [x20]
  4301d0:	mov	w1, #0x16                  	// #22
  4301d4:	ldr	x2, [sp, #168]
  4301d8:	bl	42167c <ferror@plt+0x1e8ac>
  4301dc:	b	42ffd8 <ferror@plt+0x2d208>
  4301e0:	ldrb	w0, [x19, #1120]
  4301e4:	cbz	w0, 430208 <ferror@plt+0x2d438>
  4301e8:	ldr	w4, [x22, #8]
  4301ec:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x245fc>
  4301f0:	ldr	x3, [x20]
  4301f4:	add	x2, x2, #0x189
  4301f8:	mov	w1, #0x15                  	// #21
  4301fc:	mov	x0, x19
  430200:	bl	4216ec <ferror@plt+0x1e91c>
  430204:	b	42ffd8 <ferror@plt+0x2d208>
  430208:	ldrsb	w0, [x19, #1198]
  43020c:	cmp	w0, #0x0
  430210:	cbz	w0, 42ffd8 <ferror@plt+0x2d208>
  430214:	cset	w1, gt
  430218:	ldr	w4, [x22, #8]
  43021c:	add	w1, w1, #0x15
  430220:	ldr	x3, [x20]
  430224:	ldr	x2, [sp, #168]
  430228:	b	4301fc <ferror@plt+0x2d42c>
  43022c:	ldp	x5, x22, [x24, #8]
  430230:	ldr	w0, [sp, #144]
  430234:	sub	x22, x22, x5
  430238:	lsr	x22, x22, #3
  43023c:	cbz	w0, 4302d0 <ferror@plt+0x2d500>
  430240:	ldr	x4, [sp, #152]
  430244:	mov	w5, w22
  430248:	ldr	x3, [sp, #216]
  43024c:	mov	x2, x24
  430250:	mov	x1, x20
  430254:	mov	x0, x19
  430258:	bl	42d794 <ferror@plt+0x2a9c4>
  43025c:	ldp	x1, x0, [x24, #8]
  430260:	adrp	x2, 495000 <_obstack_memory_used@@Base+0x505fc>
  430264:	sub	x0, x0, x1
  430268:	ldr	w1, [x2, #2480]
  43026c:	lsr	x0, x0, #3
  430270:	add	w0, w1, w0
  430274:	str	w0, [x2, #2480]
  430278:	ldr	x0, [sp, #112]
  43027c:	mov	w23, #0x0                   	// #0
  430280:	ldr	x22, [x0, #8]
  430284:	add	x22, x22, #0x8
  430288:	ldr	w0, [sp, #124]
  43028c:	cmp	w23, w0
  430290:	b.eq	4302f0 <ferror@plt+0x2d520>  // b.none
  430294:	ldr	x0, [x22]
  430298:	cbz	x0, 4302a4 <ferror@plt+0x2d4d4>
  43029c:	bl	402b30 <free@plt>
  4302a0:	str	xzr, [x22]
  4302a4:	ldr	x0, [x22, #24]
  4302a8:	cbz	x0, 4302b4 <ferror@plt+0x2d4e4>
  4302ac:	bl	402b30 <free@plt>
  4302b0:	str	xzr, [x22, #24]
  4302b4:	ldr	x0, [x22, #32]
  4302b8:	cbz	x0, 4302c4 <ferror@plt+0x2d4f4>
  4302bc:	bl	402b30 <free@plt>
  4302c0:	str	xzr, [x22, #32]
  4302c4:	add	w23, w23, #0x1
  4302c8:	add	x22, x22, #0x30
  4302cc:	b	430288 <ferror@plt+0x2d4b8>
  4302d0:	add	x0, x19, #0x88
  4302d4:	bl	42d744 <ferror@plt+0x2a974>
  4302d8:	ldr	x1, [sp, #152]
  4302dc:	stp	x24, x20, [x0, #32]
  4302e0:	str	wzr, [x0, #48]
  4302e4:	add	x22, x1, w22, uxtw #3
  4302e8:	stp	x1, x22, [x0, #16]
  4302ec:	b	43025c <ferror@plt+0x2d48c>
  4302f0:	ldr	x0, [sp, #112]
  4302f4:	bl	4288b0 <ferror@plt+0x25ae0>
  4302f8:	ldrh	w0, [x20, #18]
  4302fc:	ubfx	x1, x0, #2, #8
  430300:	orr	w2, w1, #0x10
  430304:	bfi	w0, w2, #2, #8
  430308:	strh	w0, [x20, #18]
  43030c:	tbnz	w1, #5, 43031c <ferror@plt+0x2d54c>
  430310:	mov	x1, x20
  430314:	mov	x0, x19
  430318:	bl	42f154 <ferror@plt+0x2c384>
  43031c:	ldr	x3, [x19, #1032]
  430320:	cbz	x3, 430334 <ferror@plt+0x2d564>
  430324:	ldr	w1, [sp, #200]
  430328:	mov	x2, x20
  43032c:	mov	x0, x19
  430330:	blr	x3
  430334:	ldr	x0, [sp, #104]
  430338:	ldr	x1, [sp, #104]
  43033c:	ldrb	w0, [x0, #19]
  430340:	orr	w0, w0, #0x20
  430344:	strb	w0, [x1, #19]
  430348:	ldrh	w0, [x1, #16]
  43034c:	cbnz	w0, 430408 <ferror@plt+0x2d638>
  430350:	mov	x0, x1
  430354:	bl	42d920 <ferror@plt+0x2ab50>
  430358:	mov	w24, w0
  43035c:	ldr	x0, [sp, #104]
  430360:	add	x22, x0, #0x18
  430364:	ldrb	w0, [x19, #1157]
  430368:	cbz	w0, 430498 <ferror@plt+0x2d6c8>
  43036c:	add	x2, sp, #0xf8
  430370:	mov	w1, w24
  430374:	mov	x0, x19
  430378:	str	xzr, [sp, #248]
  43037c:	bl	42d688 <ferror@plt+0x2a8b8>
  430380:	mov	x23, x0
  430384:	ldr	w2, [sp, #200]
  430388:	mov	w3, w24
  43038c:	ldr	x0, [x19, #40]
  430390:	mov	x1, x20
  430394:	mov	w25, #0x0                   	// #0
  430398:	bl	42b448 <ferror@plt+0x28678>
  43039c:	mov	x26, x0
  4303a0:	cmp	w24, w25
  4303a4:	ldr	x1, [sp, #248]
  4303a8:	b.eq	4303dc <ferror@plt+0x2d60c>  // b.none
  4303ac:	ldr	w4, [x22]
  4303b0:	mov	w6, w25
  4303b4:	mov	x2, x22
  4303b8:	mov	x5, x26
  4303bc:	mov	x0, x23
  4303c0:	mov	w3, w4
  4303c4:	add	w25, w25, #0x1
  4303c8:	add	x22, x22, #0x18
  4303cc:	bl	42d884 <ferror@plt+0x2aab4>
  4303d0:	b	4303a0 <ferror@plt+0x2d5d0>
  4303d4:	mov	x21, #0x0                   	// #0
  4303d8:	b	4302f8 <ferror@plt+0x2d528>
  4303dc:	ldr	x4, [x23, #8]
  4303e0:	mov	x3, x1
  4303e4:	mov	w5, w24
  4303e8:	mov	x2, x23
  4303ec:	mov	x1, x20
  4303f0:	mov	x0, x19
  4303f4:	bl	42d794 <ferror@plt+0x2a9c4>
  4303f8:	adrp	x1, 495000 <_obstack_memory_used@@Base+0x505fc>
  4303fc:	ldr	w0, [x1, #2480]
  430400:	add	w24, w0, w24
  430404:	str	w24, [x1, #2480]
  430408:	cbz	x21, 4304b0 <ferror@plt+0x2d6e0>
  43040c:	ldrb	w0, [x19, #16]
  430410:	cbnz	w0, 430434 <ferror@plt+0x2d664>
  430414:	ldr	x1, [sp, #176]
  430418:	mov	x0, x19
  43041c:	bl	42d658 <ferror@plt+0x2a888>
  430420:	mov	x2, x0
  430424:	mov	w3, #0x1                   	// #1
  430428:	mov	x0, x19
  43042c:	mov	x1, #0x0                   	// #0
  430430:	bl	42df04 <ferror@plt+0x2b134>
  430434:	adrp	x23, 495000 <_obstack_memory_used@@Base+0x505fc>
  430438:	add	x25, x19, #0x88
  43043c:	add	x23, x23, #0x9b0
  430440:	mov	x24, x21
  430444:	mov	x0, x25
  430448:	ldr	x21, [x21]
  43044c:	ldp	x22, x20, [x24, #8]
  430450:	str	xzr, [x24]
  430454:	bl	42d744 <ferror@plt+0x2a974>
  430458:	str	x22, [x0, #16]
  43045c:	stp	x24, xzr, [x0, #32]
  430460:	sub	x20, x20, x22
  430464:	str	wzr, [x0, #48]
  430468:	asr	x20, x20, #3
  43046c:	add	x22, x22, w20, uxtw #3
  430470:	str	x22, [x0, #24]
  430474:	ldrb	w0, [x19, #1157]
  430478:	cbnz	w0, 430488 <ferror@plt+0x2d6b8>
  43047c:	ldr	w0, [x23]
  430480:	add	w20, w0, w20
  430484:	str	w20, [x23]
  430488:	cbnz	x21, 430440 <ferror@plt+0x2d670>
  43048c:	mov	w0, #0x2                   	// #2
  430490:	strb	wzr, [x19, #192]
  430494:	b	42f704 <ferror@plt+0x2c934>
  430498:	mov	w3, w24
  43049c:	mov	x2, x22
  4304a0:	mov	x1, x20
  4304a4:	mov	x0, x19
  4304a8:	bl	42df04 <ferror@plt+0x2b134>
  4304ac:	b	4303f8 <ferror@plt+0x2d628>
  4304b0:	mov	w0, #0x1                   	// #1
  4304b4:	strb	wzr, [x19, #192]
  4304b8:	b	42f704 <ferror@plt+0x2c934>
  4304bc:	ldr	x1, [x19, #184]
  4304c0:	strb	wzr, [x19, #192]
  4304c4:	ldrb	w0, [x1, #18]
  4304c8:	and	w0, w0, #0x3
  4304cc:	cmp	w0, #0x2
  4304d0:	b.ne	4304e8 <ferror@plt+0x2d718>  // b.any
  4304d4:	ldr	x0, [x1, #24]
  4304d8:	ldrb	w0, [x0, #19]
  4304dc:	tbz	w0, #2, 4304e8 <ferror@plt+0x2d718>
  4304e0:	ldrb	w0, [x19, #1157]
  4304e4:	cbnz	w0, 430500 <ferror@plt+0x2d730>
  4304e8:	ldr	w3, [x19, #176]
  4304ec:	ldr	w2, [sp, #200]
  4304f0:	mov	x1, x20
  4304f4:	mov	x0, x19
  4304f8:	bl	42df68 <ferror@plt+0x2b198>
  4304fc:	b	42f704 <ferror@plt+0x2c934>
  430500:	ldr	w3, [sp, #200]
  430504:	b	4304ec <ferror@plt+0x2d71c>
  430508:	mov	x0, #0x0                   	// #0
  43050c:	ldr	x0, [x0]
  430510:	brk	#0x3e8
  430514:	ldrb	w0, [x0, #4]
  430518:	b	430510 <ferror@plt+0x2d740>
  43051c:	stp	x29, x30, [sp, #-112]!
  430520:	mov	x29, sp
  430524:	stp	x19, x20, [sp, #16]
  430528:	mov	x19, x0
  43052c:	stp	x23, x24, [sp, #48]
  430530:	mov	x24, x1
  430534:	stp	x25, x26, [sp, #64]
  430538:	adrp	x25, 495000 <_obstack_memory_used@@Base+0x505fc>
  43053c:	add	x25, x25, #0x9b0
  430540:	ldrb	w26, [x0, #192]
  430544:	stp	x21, x22, [sp, #32]
  430548:	mov	w22, #0x0                   	// #0
  43054c:	str	x27, [sp, #80]
  430550:	ldr	x21, [x19, #136]
  430554:	ldr	x0, [x21, #8]
  430558:	cbnz	x0, 430640 <ferror@plt+0x2d870>
  43055c:	mov	x0, x19
  430560:	bl	42aac4 <ferror@plt+0x27cf4>
  430564:	ldr	w22, [x0]
  430568:	mov	x20, x0
  43056c:	ldrb	w1, [x19, #16]
  430570:	ldrb	w0, [x20, #4]
  430574:	cbz	w1, 430580 <ferror@plt+0x2d7b0>
  430578:	cmp	w0, #0x4f
  43057c:	b.eq	430550 <ferror@plt+0x2d780>  // b.none
  430580:	cmp	w0, #0x35
  430584:	b.ne	430680 <ferror@plt+0x2d8b0>  // b.any
  430588:	ldr	x4, [x20, #8]
  43058c:	ldrb	w0, [x4, #18]
  430590:	tst	x0, #0x3
  430594:	b.eq	430680 <ferror@plt+0x2d8b0>  // b.none
  430598:	ldrh	w0, [x20, #6]
  43059c:	tbnz	w0, #10, 430680 <ferror@plt+0x2d8b0>
  4305a0:	ldrh	w0, [x4, #18]
  4305a4:	ubfx	x2, x0, #2, #8
  4305a8:	tbnz	w0, #6, 430950 <ferror@plt+0x2db80>
  4305ac:	ldrb	w0, [x19, #192]
  4305b0:	cbnz	w0, 4305cc <ferror@plt+0x2d7fc>
  4305b4:	ldr	x0, [x19, #136]
  4305b8:	bl	42d63c <ferror@plt+0x2a86c>
  4305bc:	cbnz	x0, 4305cc <ferror@plt+0x2d7fc>
  4305c0:	ldr	w0, [x20]
  4305c4:	str	w0, [x19, #176]
  4305c8:	str	x4, [x19, #184]
  4305cc:	ldrb	w0, [x19, #24]
  4305d0:	cbnz	w0, 430680 <ferror@plt+0x2d8b0>
  4305d4:	tbz	w2, #6, 430940 <ferror@plt+0x2db70>
  4305d8:	ldr	x0, [x19, #992]
  4305dc:	cbz	x0, 430680 <ferror@plt+0x2d8b0>
  4305e0:	mov	w1, #0x0                   	// #0
  4305e4:	mov	x0, x19
  4305e8:	bl	42ac08 <ferror@plt+0x27e38>
  4305ec:	ldrb	w1, [x0, #4]
  4305f0:	cmp	w1, #0x53
  4305f4:	b.eq	4308f0 <ferror@plt+0x2db20>  // b.none
  4305f8:	ldrb	w21, [x0, #6]
  4305fc:	and	w21, w21, #0x1
  430600:	ldr	x2, [x19, #992]
  430604:	mov	x1, x20
  430608:	mov	x0, x19
  43060c:	blr	x2
  430610:	mov	x1, x0
  430614:	cbz	x0, 4308f8 <ferror@plt+0x2db28>
  430618:	mov	w3, w22
  43061c:	mov	x2, x20
  430620:	mov	x0, x19
  430624:	bl	42f214 <ferror@plt+0x2c444>
  430628:	cbz	w0, 430680 <ferror@plt+0x2d8b0>
  43062c:	ldrb	w1, [x19, #16]
  430630:	cbnz	w1, 430550 <ferror@plt+0x2d780>
  430634:	cmp	w0, #0x2
  430638:	b.eq	430550 <ferror@plt+0x2d780>  // b.none
  43063c:	b	4308c4 <ferror@plt+0x2daf4>
  430640:	ldr	w2, [x21, #48]
  430644:	cmp	w2, #0x1
  430648:	b.ne	4306ec <ferror@plt+0x2d91c>  // b.any
  43064c:	ldp	x20, x0, [x21, #16]
  430650:	cmp	x20, x0
  430654:	b.ne	43072c <ferror@plt+0x2d95c>  // b.any
  430658:	ldr	x0, [x21, #40]
  43065c:	cbz	x0, 43066c <ferror@plt+0x2d89c>
  430660:	ldr	w0, [x25, #4]
  430664:	add	w0, w0, #0x1
  430668:	str	w0, [x25, #4]
  43066c:	mov	x0, x19
  430670:	bl	42e164 <ferror@plt+0x2b394>
  430674:	ldrb	w0, [x19, #16]
  430678:	cbnz	w0, 430550 <ferror@plt+0x2d780>
  43067c:	add	x20, x19, #0x298
  430680:	cbz	x24, 4306c8 <ferror@plt+0x2d8f8>
  430684:	cbnz	w22, 43068c <ferror@plt+0x2d8bc>
  430688:	ldr	w22, [x20]
  43068c:	str	w22, [x24]
  430690:	ldrb	w0, [x19, #1157]
  430694:	cbnz	w0, 4306ac <ferror@plt+0x2d8dc>
  430698:	ldr	x0, [x19, #136]
  43069c:	bl	42d63c <ferror@plt+0x2a86c>
  4306a0:	cbz	x0, 4306ac <ferror@plt+0x2d8dc>
  4306a4:	ldr	w0, [x19, #176]
  4306a8:	str	w0, [x24]
  4306ac:	ldrb	w1, [x19, #1160]
  4306b0:	ldr	w0, [x24]
  4306b4:	cbz	w1, 4306c4 <ferror@plt+0x2d8f4>
  4306b8:	ldrb	w1, [x19, #16]
  4306bc:	cbz	w1, 4306c4 <ferror@plt+0x2d8f4>
  4306c0:	ldr	w0, [x19, #48]
  4306c4:	str	w0, [x24]
  4306c8:	strb	w26, [x19, #192]
  4306cc:	mov	x0, x20
  4306d0:	ldp	x19, x20, [sp, #16]
  4306d4:	ldp	x21, x22, [sp, #32]
  4306d8:	ldp	x23, x24, [sp, #48]
  4306dc:	ldp	x25, x26, [sp, #64]
  4306e0:	ldr	x27, [sp, #80]
  4306e4:	ldp	x29, x30, [sp], #112
  4306e8:	ret
  4306ec:	tst	w2, #0xfffffffd
  4306f0:	b.ne	430714 <ferror@plt+0x2d944>  // b.any
  4306f4:	ldp	x0, x1, [x21, #16]
  4306f8:	cmp	x0, x1
  4306fc:	b.eq	430658 <ferror@plt+0x2d888>  // b.none
  430700:	add	x3, x0, #0x8
  430704:	cbnz	w2, 4307a4 <ferror@plt+0x2d9d4>
  430708:	ldr	x20, [x0]
  43070c:	ldr	w22, [x20]
  430710:	b	4307c8 <ferror@plt+0x2d9f8>
  430714:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x245fc>
  430718:	add	x2, x2, #0x227
  43071c:	mov	w1, #0xa2f                 	// #2607
  430720:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x235fc>
  430724:	add	x0, x0, #0xb3e
  430728:	bl	402de0 <ferror@plt+0x10>
  43072c:	mov	x0, x20
  430730:	ldr	w22, [x0], #24
  430734:	str	x0, [x21, #16]
  430738:	ldrh	w0, [x20, #6]
  43073c:	tbz	w0, #3, 43056c <ferror@plt+0x2d79c>
  430740:	mov	x0, x21
  430744:	str	x20, [sp, #96]
  430748:	bl	42d63c <ferror@plt+0x2a86c>
  43074c:	cbz	x0, 4307e0 <ferror@plt+0x2da10>
  430750:	cmp	w2, #0x2
  430754:	b.ne	4307f0 <ferror@plt+0x2da20>  // b.any
  430758:	ldr	x0, [x21, #40]
  43075c:	ldr	x0, [x0, #16]
  430760:	ldur	w27, [x0, #-4]
  430764:	mov	x23, #0x0                   	// #0
  430768:	ldr	w0, [x21, #48]
  43076c:	cmp	w0, #0x1
  430770:	b.ne	4307f8 <ferror@plt+0x2da28>  // b.any
  430774:	ldr	x23, [x21, #16]
  430778:	add	x0, x23, #0x18
  43077c:	str	x0, [x21, #16]
  430780:	ldrb	w0, [x23, #4]
  430784:	cmp	w0, #0x53
  430788:	b.ne	43083c <ferror@plt+0x2da6c>  // b.any
  43078c:	ldrh	w0, [x23, #6]
  430790:	tbz	w0, #3, 43083c <ferror@plt+0x2da6c>
  430794:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x245fc>
  430798:	mov	w1, #0x380                 	// #896
  43079c:	add	x2, x2, #0x25e
  4307a0:	b	430720 <ferror@plt+0x2d950>
  4307a4:	cmp	w2, #0x2
  4307a8:	b.ne	4307d0 <ferror@plt+0x2da00>  // b.any
  4307ac:	ldr	x1, [x21, #40]
  4307b0:	ldr	x20, [x0]
  4307b4:	ldr	x0, [x1, #8]
  4307b8:	cbz	x0, 43070c <ferror@plt+0x2d93c>
  4307bc:	ldr	x0, [x1, #16]
  4307c0:	ldr	w22, [x0], #4
  4307c4:	str	x0, [x1, #16]
  4307c8:	str	x3, [x21, #16]
  4307cc:	b	430738 <ferror@plt+0x2d968>
  4307d0:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x245fc>
  4307d4:	mov	w1, #0xa59                 	// #2649
  4307d8:	add	x2, x2, #0x23e
  4307dc:	b	430720 <ferror@plt+0x2d950>
  4307e0:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x245fc>
  4307e4:	mov	w1, #0x352                 	// #850
  4307e8:	add	x2, x2, #0x25e
  4307ec:	b	430720 <ferror@plt+0x2d950>
  4307f0:	ldr	w27, [x19, #176]
  4307f4:	b	430764 <ferror@plt+0x2d994>
  4307f8:	cbnz	w0, 430810 <ferror@plt+0x2da40>
  4307fc:	ldr	x0, [x21, #16]
  430800:	add	x1, x0, #0x8
  430804:	str	x1, [x21, #16]
  430808:	ldr	x23, [x0]
  43080c:	b	430780 <ferror@plt+0x2d9b0>
  430810:	cmp	w0, #0x2
  430814:	b.ne	430780 <ferror@plt+0x2d9b0>  // b.any
  430818:	ldr	x0, [x21, #16]
  43081c:	add	x1, x0, #0x8
  430820:	str	x1, [x21, #16]
  430824:	ldr	x1, [x21, #40]
  430828:	ldr	x23, [x0]
  43082c:	ldr	x0, [x1, #16]
  430830:	add	x0, x0, #0x4
  430834:	str	x0, [x1, #16]
  430838:	b	430780 <ferror@plt+0x2d9b0>
  43083c:	mov	x3, x23
  430840:	add	x2, sp, #0x60
  430844:	mov	w1, w27
  430848:	mov	x0, x19
  43084c:	bl	42e398 <ferror@plt+0x2b5c8>
  430850:	tst	w0, #0xff
  430854:	b.eq	430860 <ferror@plt+0x2da90>  // b.none
  430858:	ldrh	w0, [x23, #6]
  43085c:	tbnz	w0, #3, 430768 <ferror@plt+0x2d998>
  430860:	ldr	w0, [x21, #48]
  430864:	cmp	w0, #0x2
  430868:	b.ne	4308d8 <ferror@plt+0x2db08>  // b.any
  43086c:	add	x2, sp, #0x68
  430870:	mov	x1, #0x1                   	// #1
  430874:	mov	x0, x19
  430878:	str	xzr, [sp, #104]
  43087c:	bl	42d688 <ferror@plt+0x2a8b8>
  430880:	mov	x23, x0
  430884:	ldp	x2, x1, [sp, #96]
  430888:	mov	w3, w27
  43088c:	mov	x5, #0x0                   	// #0
  430890:	mov	w4, #0x0                   	// #0
  430894:	mov	w6, #0x0                   	// #0
  430898:	bl	42d884 <ferror@plt+0x2aab4>
  43089c:	ldr	x0, [x21, #40]
  4308a0:	mov	x2, x23
  4308a4:	ldr	x4, [x23, #8]
  4308a8:	mov	w5, #0x1                   	// #1
  4308ac:	ldr	x1, [x0]
  4308b0:	mov	x0, x19
  4308b4:	ldr	x3, [sp, #104]
  4308b8:	bl	42d794 <ferror@plt+0x2a9c4>
  4308bc:	ldrb	w0, [x19, #16]
  4308c0:	cbnz	w0, 430550 <ferror@plt+0x2d780>
  4308c4:	mov	x1, x20
  4308c8:	mov	x0, x19
  4308cc:	bl	42d658 <ferror@plt+0x2a888>
  4308d0:	mov	x20, x0
  4308d4:	b	430680 <ferror@plt+0x2d8b0>
  4308d8:	ldr	x2, [sp, #96]
  4308dc:	mov	x0, x19
  4308e0:	mov	w3, #0x1                   	// #1
  4308e4:	mov	x1, #0x0                   	// #0
  4308e8:	bl	42df04 <ferror@plt+0x2b134>
  4308ec:	b	4308bc <ferror@plt+0x2daec>
  4308f0:	mov	w21, #0x1                   	// #1
  4308f4:	b	430600 <ferror@plt+0x2d830>
  4308f8:	cbz	w21, 430680 <ferror@plt+0x2d8b0>
  4308fc:	mov	w1, #0x0                   	// #0
  430900:	mov	x0, x19
  430904:	bl	42ac08 <ferror@plt+0x27e38>
  430908:	mov	x1, x0
  43090c:	ldrb	w0, [x0, #4]
  430910:	cmp	w0, #0x53
  430914:	b.eq	430680 <ferror@plt+0x2d8b0>  // b.none
  430918:	ldrh	w0, [x1, #6]
  43091c:	tbnz	w0, #0, 430680 <ferror@plt+0x2d8b0>
  430920:	mov	x0, x19
  430924:	bl	42d658 <ferror@plt+0x2a888>
  430928:	mov	w3, #0x1                   	// #1
  43092c:	mov	x2, x0
  430930:	mov	x1, #0x0                   	// #0
  430934:	mov	x0, x19
  430938:	bl	42df04 <ferror@plt+0x2b134>
  43093c:	b	430680 <ferror@plt+0x2d8b0>
  430940:	mov	w3, w22
  430944:	mov	x2, x20
  430948:	mov	x1, x4
  43094c:	b	430620 <ferror@plt+0x2d850>
  430950:	mov	x0, x19
  430954:	bl	427c18 <ferror@plt+0x24e48>
  430958:	ldrb	w1, [x20, #4]
  43095c:	strb	w1, [x0, #4]
  430960:	ldrh	w1, [x20, #6]
  430964:	ldp	x2, x3, [x20, #8]
  430968:	orr	w1, w1, #0x400
  43096c:	strh	w1, [x0, #6]
  430970:	stp	x2, x3, [x0, #8]
  430974:	b	4308d0 <ferror@plt+0x2db00>
  430978:	mov	x1, #0x0                   	// #0
  43097c:	b	43051c <ferror@plt+0x2d74c>
  430980:	stp	x29, x30, [sp, #-32]!
  430984:	mov	x29, sp
  430988:	ldr	x1, [x0]
  43098c:	str	x19, [sp, #16]
  430990:	mov	x19, x0
  430994:	ldrb	w0, [x1, #105]
  430998:	orr	w0, w0, #0x4
  43099c:	strb	w0, [x1, #105]
  4309a0:	ldrb	w0, [x19, #27]
  4309a4:	add	w0, w0, #0x1
  4309a8:	strb	w0, [x19, #27]
  4309ac:	ldrb	w0, [x19, #24]
  4309b0:	add	w0, w0, #0x1
  4309b4:	strb	w0, [x19, #24]
  4309b8:	ldrb	w0, [x19, #1160]
  4309bc:	cbz	w0, 4309f4 <ferror@plt+0x2dc24>
  4309c0:	mov	x0, x19
  4309c4:	bl	433040 <ferror@plt+0x30270>
  4309c8:	tst	w0, #0xff
  4309cc:	b.ne	4309c0 <ferror@plt+0x2dbf0>  // b.any
  4309d0:	ldrb	w0, [x19, #27]
  4309d4:	sub	w0, w0, #0x1
  4309d8:	strb	w0, [x19, #27]
  4309dc:	ldrb	w0, [x19, #24]
  4309e0:	sub	w0, w0, #0x1
  4309e4:	strb	w0, [x19, #24]
  4309e8:	ldr	x19, [sp, #16]
  4309ec:	ldp	x29, x30, [sp], #32
  4309f0:	ret
  4309f4:	mov	x0, x19
  4309f8:	bl	430978 <ferror@plt+0x2dba8>
  4309fc:	ldrb	w0, [x0, #4]
  430a00:	cmp	w0, #0x16
  430a04:	b.ne	4309f4 <ferror@plt+0x2dc24>  // b.any
  430a08:	b	4309d0 <ferror@plt+0x2dc00>
  430a0c:	b	43051c <ferror@plt+0x2d74c>
  430a10:	stp	x29, x30, [sp, #-96]!
  430a14:	mov	x29, sp
  430a18:	stp	x19, x20, [sp, #16]
  430a1c:	mov	x20, x0
  430a20:	ldr	w19, [x1, #8]
  430a24:	stp	x23, x24, [sp, #48]
  430a28:	mov	w0, #0xa                   	// #10
  430a2c:	mov	x24, x1
  430a30:	ldr	x23, [x1, #24]
  430a34:	mul	w19, w19, w0
  430a38:	stp	x21, x22, [sp, #32]
  430a3c:	ldrb	w0, [x23, #19]
  430a40:	stp	x25, x26, [sp, #64]
  430a44:	stp	x27, x28, [sp, #80]
  430a48:	tbz	w0, #2, 430a7c <ferror@plt+0x2dcac>
  430a4c:	ldrh	w2, [x23, #16]
  430a50:	add	w19, w19, #0x6
  430a54:	mov	x0, #0x0                   	// #0
  430a58:	cmp	w2, w0
  430a5c:	b.ls	430a80 <ferror@plt+0x2dcb0>  // b.plast
  430a60:	ldr	x1, [x23]
  430a64:	ldr	x1, [x1, x0, lsl #3]
  430a68:	add	x0, x0, #0x1
  430a6c:	ldr	w1, [x1, #8]
  430a70:	add	w1, w1, #0x1
  430a74:	add	w19, w19, w1
  430a78:	b	430a58 <ferror@plt+0x2dc88>
  430a7c:	add	w19, w19, #0x2
  430a80:	ldrb	w0, [x20, #1160]
  430a84:	cbz	w0, 430b3c <ferror@plt+0x2dd6c>
  430a88:	mov	x0, x23
  430a8c:	bl	4330a8 <ferror@plt+0x302d8>
  430a90:	add	w19, w19, w0
  430a94:	ldr	w0, [x20, #512]
  430a98:	cmp	w0, w19
  430a9c:	b.cs	430ab4 <ferror@plt+0x2dce4>  // b.hs, b.nlast
  430aa0:	ldr	x0, [x20, #504]
  430aa4:	mov	w1, w19
  430aa8:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  430aac:	str	x0, [x20, #504]
  430ab0:	str	w19, [x20, #512]
  430ab4:	ldr	x0, [x20, #504]
  430ab8:	mov	x1, x24
  430abc:	bl	427e04 <ferror@plt+0x25034>
  430ac0:	mov	x19, x0
  430ac4:	ldrb	w0, [x23, #19]
  430ac8:	tbz	w0, #2, 430bd4 <ferror@plt+0x2de04>
  430acc:	mov	w0, #0x28                  	// #40
  430ad0:	mov	x21, #0x0                   	// #0
  430ad4:	mov	w26, #0x2e2e                	// #11822
  430ad8:	mov	w25, #0x2e                  	// #46
  430adc:	mov	w27, #0x2c                  	// #44
  430ae0:	strb	w0, [x19], #1
  430ae4:	ldrh	w0, [x23, #16]
  430ae8:	mov	w24, w21
  430aec:	cmp	w21, w0
  430af0:	b.cs	430bcc <ferror@plt+0x2ddfc>  // b.hs, b.nlast
  430af4:	ldr	x0, [x23]
  430af8:	ldr	x22, [x0, x21, lsl #3]
  430afc:	ldr	x0, [x20, #1272]
  430b00:	cmp	x0, x22
  430b04:	b.eq	430b20 <ferror@plt+0x2dd50>  // b.none
  430b08:	ldr	w2, [x22, #8]
  430b0c:	mov	x0, x19
  430b10:	ldr	x1, [x22]
  430b14:	bl	4026a0 <memcpy@plt>
  430b18:	ldr	w0, [x22, #8]
  430b1c:	add	x19, x19, x0
  430b20:	ldrh	w0, [x23, #16]
  430b24:	add	w24, w24, #0x1
  430b28:	cmp	w0, w24
  430b2c:	b.ls	430bb0 <ferror@plt+0x2dde0>  // b.plast
  430b30:	strb	w27, [x19], #1
  430b34:	add	x21, x21, #0x1
  430b38:	b	430ae4 <ferror@plt+0x2dd14>
  430b3c:	mov	x0, x23
  430b40:	add	x21, x23, #0x18
  430b44:	bl	42d920 <ferror@plt+0x2ab50>
  430b48:	mov	w25, w0
  430b4c:	mov	w22, #0x0                   	// #0
  430b50:	mov	x26, #0x18                  	// #24
  430b54:	cmp	w22, w25
  430b58:	b.eq	430a94 <ferror@plt+0x2dcc4>  // b.none
  430b5c:	mov	w0, w22
  430b60:	madd	x0, x0, x26, x23
  430b64:	ldrb	w0, [x0, #28]
  430b68:	cmp	w0, #0x50
  430b6c:	b.ne	430ba4 <ferror@plt+0x2ddd4>  // b.any
  430b70:	ldr	x0, [x21, #16]
  430b74:	ldr	w0, [x0, #8]
  430b78:	ldrh	w2, [x21, #6]
  430b7c:	add	w19, w19, w0
  430b80:	ubfx	x0, x2, #2, #1
  430b84:	add	w19, w19, w0
  430b88:	tbz	w2, #3, 430b90 <ferror@plt+0x2ddc0>
  430b8c:	add	w19, w19, #0x3
  430b90:	and	w2, w2, #0x1
  430b94:	add	w22, w22, #0x1
  430b98:	add	w19, w19, w2
  430b9c:	add	x21, x21, #0x18
  430ba0:	b	430b54 <ferror@plt+0x2dd84>
  430ba4:	mov	x0, x21
  430ba8:	bl	427dbc <ferror@plt+0x24fec>
  430bac:	b	430b78 <ferror@plt+0x2dda8>
  430bb0:	ldrb	w0, [x23, #19]
  430bb4:	tbz	w0, #3, 430b34 <ferror@plt+0x2dd64>
  430bb8:	mov	x0, x19
  430bbc:	strh	w26, [x0], #3
  430bc0:	strb	w25, [x19, #2]
  430bc4:	mov	x19, x0
  430bc8:	b	430b34 <ferror@plt+0x2dd64>
  430bcc:	mov	w0, #0x29                  	// #41
  430bd0:	strb	w0, [x19], #1
  430bd4:	mov	w21, #0x20                  	// #32
  430bd8:	strb	w21, [x19], #1
  430bdc:	ldrb	w0, [x20, #1160]
  430be0:	cbz	w0, 430c18 <ferror@plt+0x2de48>
  430be4:	mov	x1, x19
  430be8:	mov	x0, x23
  430bec:	bl	433104 <ferror@plt+0x30334>
  430bf0:	mov	x19, x0
  430bf4:	strb	wzr, [x19]
  430bf8:	ldp	x21, x22, [sp, #32]
  430bfc:	ldp	x23, x24, [sp, #48]
  430c00:	ldp	x25, x26, [sp, #64]
  430c04:	ldp	x27, x28, [sp, #80]
  430c08:	ldr	x0, [x20, #504]
  430c0c:	ldp	x19, x20, [sp, #16]
  430c10:	ldp	x29, x30, [sp], #96
  430c14:	ret
  430c18:	ldr	w0, [x23, #12]
  430c1c:	cbz	w0, 430bf4 <ferror@plt+0x2de24>
  430c20:	mov	x0, x23
  430c24:	add	x27, x23, #0x18
  430c28:	bl	42d920 <ferror@plt+0x2ab50>
  430c2c:	mov	w22, w0
  430c30:	mov	w28, #0x0                   	// #0
  430c34:	mov	w24, #0x23                  	// #35
  430c38:	mov	x25, #0x18                  	// #24
  430c3c:	mov	w26, #0x2320                	// #8992
  430c40:	cmp	w28, w22
  430c44:	b.eq	430bf4 <ferror@plt+0x2de24>  // b.none
  430c48:	ldrh	w0, [x27, #6]
  430c4c:	tbz	w0, #0, 430c54 <ferror@plt+0x2de84>
  430c50:	strb	w21, [x19], #1
  430c54:	ldrh	w0, [x27, #6]
  430c58:	tbz	w0, #2, 430c60 <ferror@plt+0x2de90>
  430c5c:	strb	w24, [x19], #1
  430c60:	mov	w0, w28
  430c64:	madd	x0, x0, x25, x23
  430c68:	ldrb	w0, [x0, #28]
  430c6c:	cmp	w0, #0x50
  430c70:	b.ne	430cb8 <ferror@plt+0x2dee8>  // b.any
  430c74:	ldr	x0, [x27, #16]
  430c78:	ldr	w2, [x0, #8]
  430c7c:	ldr	x1, [x0]
  430c80:	mov	x0, x19
  430c84:	bl	4026a0 <memcpy@plt>
  430c88:	ldr	x0, [x27, #16]
  430c8c:	ldr	w0, [x0, #8]
  430c90:	add	x19, x19, x0
  430c94:	ldrh	w0, [x27, #6]
  430c98:	tbz	w0, #3, 430cac <ferror@plt+0x2dedc>
  430c9c:	mov	x0, x19
  430ca0:	strh	w26, [x0], #3
  430ca4:	strb	w24, [x19, #2]
  430ca8:	mov	x19, x0
  430cac:	add	w28, w28, #0x1
  430cb0:	add	x27, x27, #0x18
  430cb4:	b	430c40 <ferror@plt+0x2de70>
  430cb8:	mov	x2, x19
  430cbc:	mov	x1, x27
  430cc0:	mov	x0, x20
  430cc4:	mov	w3, #0x1                   	// #1
  430cc8:	bl	427e74 <ferror@plt+0x250a4>
  430ccc:	mov	x19, x0
  430cd0:	b	430c94 <ferror@plt+0x2dec4>
  430cd4:	mov	x4, x0
  430cd8:	ldrb	w0, [x0, #9]
  430cdc:	cbz	w0, 430e30 <ferror@plt+0x2e060>
  430ce0:	stp	x29, x30, [sp, #-16]!
  430ce4:	mov	x29, sp
  430ce8:	ldrb	w2, [x1, #4]
  430cec:	ldr	w3, [x4, #12]
  430cf0:	cmp	w2, #0x35
  430cf4:	b.ne	430d48 <ferror@plt+0x2df78>  // b.any
  430cf8:	ldr	x0, [x4]
  430cfc:	ldr	x6, [x1, #8]
  430d00:	ldr	x5, [x0, #1280]
  430d04:	cmp	x6, x5
  430d08:	b.ne	430e00 <ferror@plt+0x2e030>  // b.any
  430d0c:	ldr	w2, [x1]
  430d10:	cmp	w3, #0x0
  430d14:	b.le	430d30 <ferror@plt+0x2df60>
  430d18:	adrp	x3, 469000 <_obstack_memory_used@@Base+0x245fc>
  430d1c:	add	x3, x3, #0x29f
  430d20:	mov	w1, #0x3                   	// #3
  430d24:	bl	421998 <ferror@plt+0x1ebc8>
  430d28:	mov	w0, #0x0                   	// #0
  430d2c:	b	430d40 <ferror@plt+0x2df70>
  430d30:	add	w0, w3, #0x1
  430d34:	str	w0, [x4, #12]
  430d38:	mov	w0, #0x3                   	// #3
  430d3c:	str	w2, [x4, #20]
  430d40:	ldp	x29, x30, [sp], #16
  430d44:	ret
  430d48:	cmp	w3, #0x1
  430d4c:	b.ne	430e08 <ferror@plt+0x2e038>  // b.any
  430d50:	cmp	w2, #0x14
  430d54:	b.eq	430d70 <ferror@plt+0x2dfa0>  // b.none
  430d58:	ldr	w2, [x4, #20]
  430d5c:	adrp	x3, 469000 <_obstack_memory_used@@Base+0x245fc>
  430d60:	add	x3, x3, #0x2c9
  430d64:	mov	w1, #0x3                   	// #3
  430d68:	ldr	x0, [x4]
  430d6c:	b	430d24 <ferror@plt+0x2df54>
  430d70:	mov	w0, #0x2                   	// #2
  430d74:	str	w0, [x4, #12]
  430d78:	mov	w0, #0x1                   	// #1
  430d7c:	b	430d40 <ferror@plt+0x2df70>
  430d80:	mov	w0, #0x3                   	// #3
  430d84:	str	w0, [x4, #12]
  430d88:	ldrb	w3, [x4, #10]
  430d8c:	cmp	w2, #0x26
  430d90:	strb	wzr, [x4, #10]
  430d94:	b.ne	430db8 <ferror@plt+0x2dfe8>  // b.any
  430d98:	mov	w0, #0x1                   	// #1
  430d9c:	strb	w0, [x4, #10]
  430da0:	ldr	w0, [x1]
  430da4:	str	w0, [x4, #16]
  430da8:	ldrb	w0, [x4, #8]
  430dac:	cbz	w0, 430d78 <ferror@plt+0x2dfa8>
  430db0:	mov	w0, #0x2                   	// #2
  430db4:	b	430d40 <ferror@plt+0x2df70>
  430db8:	cmp	w2, #0x14
  430dbc:	b.ne	430dd0 <ferror@plt+0x2e000>  // b.any
  430dc0:	ldr	w0, [x4, #12]
  430dc4:	add	w0, w0, #0x1
  430dc8:	str	w0, [x4, #12]
  430dcc:	b	430da8 <ferror@plt+0x2dfd8>
  430dd0:	cmp	w2, #0x15
  430dd4:	b.ne	430da8 <ferror@plt+0x2dfd8>  // b.any
  430dd8:	ldr	w0, [x4, #12]
  430ddc:	sub	w2, w0, #0x1
  430de0:	cmp	w0, #0x3
  430de4:	b.eq	430df0 <ferror@plt+0x2e020>  // b.none
  430de8:	str	w2, [x4, #12]
  430dec:	b	430da8 <ferror@plt+0x2dfd8>
  430df0:	str	wzr, [x4, #12]
  430df4:	cbnz	w3, 430e20 <ferror@plt+0x2e050>
  430df8:	mov	w0, #0x4                   	// #4
  430dfc:	b	430d40 <ferror@plt+0x2df70>
  430e00:	cmp	w3, #0x1
  430e04:	b.eq	430d58 <ferror@plt+0x2df88>  // b.none
  430e08:	cmp	w3, #0x1
  430e0c:	b.le	430db0 <ferror@plt+0x2dfe0>
  430e10:	cmp	w3, #0x2
  430e14:	b.ne	430d88 <ferror@plt+0x2dfb8>  // b.any
  430e18:	cmp	w2, #0x26
  430e1c:	b.ne	430d80 <ferror@plt+0x2dfb0>  // b.any
  430e20:	adrp	x3, 469000 <_obstack_memory_used@@Base+0x245fc>
  430e24:	ldr	w2, [x1]
  430e28:	add	x3, x3, #0x2fc
  430e2c:	b	430d64 <ferror@plt+0x2df94>
  430e30:	mov	w0, #0x2                   	// #2
  430e34:	ret
  430e38:	stp	x29, x30, [sp, #-48]!
  430e3c:	mov	x29, sp
  430e40:	stp	x19, x20, [sp, #16]
  430e44:	mov	x20, x0
  430e48:	mov	x19, x1
  430e4c:	ldr	x0, [x0, #32]
  430e50:	stp	x21, x22, [sp, #32]
  430e54:	cbz	x0, 430eb0 <ferror@plt+0x2e0e0>
  430e58:	mov	w21, #0x0                   	// #0
  430e5c:	ldr	w0, [x20, #48]
  430e60:	cmp	w0, w21
  430e64:	b.ls	430eb0 <ferror@plt+0x2e0e0>  // b.plast
  430e68:	ldp	x0, x1, [x20, #32]
  430e6c:	ubfiz	x22, x21, #3, #32
  430e70:	ldr	x2, [x1, x22]
  430e74:	mov	x1, x19
  430e78:	ldr	x0, [x0, x22]
  430e7c:	bl	4436a4 <ferror@plt+0x408d4>
  430e80:	cbnz	w0, 430efc <ferror@plt+0x2e12c>
  430e84:	ldr	x0, [x20, #40]
  430e88:	ldr	x0, [x0, x22]
  430e8c:	add	x1, x19, x0
  430e90:	ldrb	w2, [x19, x0]
  430e94:	cmp	w2, #0x2f
  430e98:	b.ne	430efc <ferror@plt+0x2e12c>  // b.any
  430e9c:	ldrb	w2, [x1, #1]
  430ea0:	cmp	w2, #0x2e
  430ea4:	b.eq	430ee4 <ferror@plt+0x2e114>  // b.none
  430ea8:	add	x0, x0, #0x1
  430eac:	add	x19, x19, x0
  430eb0:	mov	x0, x19
  430eb4:	ldrb	w1, [x0]
  430eb8:	cmp	w1, #0x2e
  430ebc:	b.ne	430f04 <ferror@plt+0x2e134>  // b.any
  430ec0:	ldrb	w1, [x0, #1]
  430ec4:	cmp	w1, #0x2f
  430ec8:	b.ne	430f04 <ferror@plt+0x2e134>  // b.any
  430ecc:	add	x0, x0, #0x2
  430ed0:	ldrb	w1, [x0]
  430ed4:	cmp	w1, #0x2f
  430ed8:	b.ne	430eb4 <ferror@plt+0x2e0e4>  // b.any
  430edc:	add	x0, x0, #0x1
  430ee0:	b	430ed0 <ferror@plt+0x2e100>
  430ee4:	ldrb	w2, [x1, #2]
  430ee8:	cmp	w2, #0x2e
  430eec:	b.ne	430ea8 <ferror@plt+0x2e0d8>  // b.any
  430ef0:	ldrb	w1, [x1, #3]
  430ef4:	cmp	w1, #0x2f
  430ef8:	b.ne	430ea8 <ferror@plt+0x2e0d8>  // b.any
  430efc:	add	w21, w21, #0x1
  430f00:	b	430e5c <ferror@plt+0x2e08c>
  430f04:	ldp	x19, x20, [sp, #16]
  430f08:	ldp	x21, x22, [sp, #32]
  430f0c:	ldp	x29, x30, [sp], #48
  430f10:	ret
  430f14:	stp	x29, x30, [sp, #-32]!
  430f18:	mov	x3, x0
  430f1c:	mov	w1, #0x0                   	// #0
  430f20:	mov	x29, sp
  430f24:	str	x19, [sp, #16]
  430f28:	mov	x19, x0
  430f2c:	ldrb	w2, [x3]
  430f30:	add	w0, w1, #0x1
  430f34:	cbz	w2, 430f8c <ferror@plt+0x2e1bc>
  430f38:	cmp	w2, #0x24
  430f3c:	b.hi	430f80 <ferror@plt+0x2e1b0>  // b.pmore
  430f40:	cmp	w2, #0x22
  430f44:	b.hi	430f7c <ferror@plt+0x2e1ac>  // b.pmore
  430f48:	cmp	w2, #0x9
  430f4c:	b.eq	430f58 <ferror@plt+0x2e188>  // b.none
  430f50:	cmp	w2, #0x20
  430f54:	b.ne	430f80 <ferror@plt+0x2e1b0>  // b.any
  430f58:	sub	x0, x3, #0x1
  430f5c:	add	w1, w1, #0x1
  430f60:	cmp	x0, x19
  430f64:	b.cc	430f80 <ferror@plt+0x2e1b0>  // b.lo, b.ul, b.last
  430f68:	ldrb	w2, [x0]
  430f6c:	cmp	w2, #0x5c
  430f70:	b.ne	430f80 <ferror@plt+0x2e1b0>  // b.any
  430f74:	sub	x0, x0, #0x1
  430f78:	b	430f5c <ferror@plt+0x2e18c>
  430f7c:	mov	w1, w0
  430f80:	add	x3, x3, #0x1
  430f84:	add	w1, w1, #0x1
  430f88:	b	430f2c <ferror@plt+0x2e15c>
  430f8c:	sxtw	x0, w0
  430f90:	bl	44526c <_obstack_memory_used@@Base+0x868>
  430f94:	mov	x3, x19
  430f98:	mov	x1, x0
  430f9c:	mov	w5, #0x5c                  	// #92
  430fa0:	ldrb	w2, [x3]
  430fa4:	cbz	w2, 431024 <ferror@plt+0x2e254>
  430fa8:	add	x4, x1, #0x1
  430fac:	cmp	w2, #0x23
  430fb0:	b.eq	43101c <ferror@plt+0x2e24c>  // b.none
  430fb4:	b.hi	430fd4 <ferror@plt+0x2e204>  // b.pmore
  430fb8:	cmp	w2, #0x9
  430fbc:	b.eq	430fe8 <ferror@plt+0x2e218>  // b.none
  430fc0:	cmp	w2, #0x20
  430fc4:	b.eq	430fe8 <ferror@plt+0x2e218>  // b.none
  430fc8:	add	x3, x3, #0x1
  430fcc:	strb	w2, [x1], #1
  430fd0:	b	430fa0 <ferror@plt+0x2e1d0>
  430fd4:	cmp	w2, #0x24
  430fd8:	b.ne	430fc8 <ferror@plt+0x2e1f8>  // b.any
  430fdc:	strb	w2, [x1]
  430fe0:	mov	x1, x4
  430fe4:	b	430fc8 <ferror@plt+0x2e1f8>
  430fe8:	sub	x4, x3, #0x1
  430fec:	mov	x6, x1
  430ff0:	cmp	x4, x19
  430ff4:	add	x1, x1, #0x1
  430ff8:	b.cc	431014 <ferror@plt+0x2e244>  // b.lo, b.ul, b.last
  430ffc:	ldrb	w7, [x4]
  431000:	cmp	w7, #0x5c
  431004:	b.ne	431014 <ferror@plt+0x2e244>  // b.any
  431008:	sub	x4, x4, #0x1
  43100c:	sturb	w7, [x1, #-1]
  431010:	b	430fec <ferror@plt+0x2e21c>
  431014:	strb	w5, [x6]
  431018:	b	430fc8 <ferror@plt+0x2e1f8>
  43101c:	strb	w5, [x1]
  431020:	b	430fe0 <ferror@plt+0x2e210>
  431024:	strb	wzr, [x1]
  431028:	ldr	x19, [sp, #16]
  43102c:	ldp	x29, x30, [sp], #32
  431030:	ret
  431034:	mov	x1, #0x38                  	// #56
  431038:	mov	x0, #0x1                   	// #1
  43103c:	b	4452a0 <_obstack_memory_used@@Base+0x89c>
  431040:	stp	x29, x30, [sp, #-32]!
  431044:	mov	x29, sp
  431048:	stp	x19, x20, [sp, #16]
  43104c:	mov	x19, x0
  431050:	ldr	x0, [x0]
  431054:	cbz	x0, 431080 <ferror@plt+0x2e2b0>
  431058:	mov	w20, #0x0                   	// #0
  43105c:	ldr	w1, [x19, #8]
  431060:	ldr	x0, [x19]
  431064:	cmp	w1, w20
  431068:	b.ls	43107c <ferror@plt+0x2e2ac>  // b.plast
  43106c:	ldr	x0, [x0, w20, uxtw #3]
  431070:	add	w20, w20, #0x1
  431074:	bl	402b30 <free@plt>
  431078:	b	43105c <ferror@plt+0x2e28c>
  43107c:	bl	402b30 <free@plt>
  431080:	ldr	x0, [x19, #16]
  431084:	cbz	x0, 4310b0 <ferror@plt+0x2e2e0>
  431088:	mov	w20, #0x0                   	// #0
  43108c:	ldr	w1, [x19, #24]
  431090:	ldr	x0, [x19, #16]
  431094:	cmp	w1, w20
  431098:	b.ls	4310ac <ferror@plt+0x2e2dc>  // b.plast
  43109c:	ldr	x0, [x0, w20, uxtw #3]
  4310a0:	add	w20, w20, #0x1
  4310a4:	bl	402b30 <free@plt>
  4310a8:	b	43108c <ferror@plt+0x2e2bc>
  4310ac:	bl	402b30 <free@plt>
  4310b0:	ldr	x0, [x19, #32]
  4310b4:	cbz	x0, 4310e8 <ferror@plt+0x2e318>
  4310b8:	mov	w20, #0x0                   	// #0
  4310bc:	ldr	w1, [x19, #48]
  4310c0:	ldr	x0, [x19, #32]
  4310c4:	cmp	w1, w20
  4310c8:	b.ls	4310dc <ferror@plt+0x2e30c>  // b.plast
  4310cc:	ldr	x0, [x0, w20, uxtw #3]
  4310d0:	add	w20, w20, #0x1
  4310d4:	bl	402b30 <free@plt>
  4310d8:	b	4310bc <ferror@plt+0x2e2ec>
  4310dc:	bl	402b30 <free@plt>
  4310e0:	ldr	x0, [x19, #40]
  4310e4:	bl	402b30 <free@plt>
  4310e8:	mov	x0, x19
  4310ec:	ldp	x19, x20, [sp, #16]
  4310f0:	ldp	x29, x30, [sp], #32
  4310f4:	b	402b30 <free@plt>
  4310f8:	stp	x29, x30, [sp, #-48]!
  4310fc:	mov	x29, sp
  431100:	stp	x19, x20, [sp, #16]
  431104:	mov	x19, x0
  431108:	mov	w20, w2
  43110c:	str	x21, [sp, #32]
  431110:	mov	x21, x1
  431114:	ldr	w1, [x0, #12]
  431118:	ldr	w0, [x0, #8]
  43111c:	cmp	w0, w1
  431120:	b.ne	431140 <ferror@plt+0x2e370>  // b.any
  431124:	add	w0, w0, #0x2
  431128:	lsl	w0, w0, #1
  43112c:	str	w0, [x19, #12]
  431130:	lsl	x1, x0, #3
  431134:	ldr	x0, [x19]
  431138:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  43113c:	str	x0, [x19]
  431140:	mov	x1, x21
  431144:	mov	x0, x19
  431148:	bl	430e38 <ferror@plt+0x2e068>
  43114c:	cbz	w20, 431178 <ferror@plt+0x2e3a8>
  431150:	bl	430f14 <ferror@plt+0x2e144>
  431154:	ldr	w1, [x19, #8]
  431158:	ldr	x2, [x19]
  43115c:	add	w3, w1, #0x1
  431160:	ldr	x21, [sp, #32]
  431164:	str	w3, [x19, #8]
  431168:	str	x0, [x2, w1, uxtw #3]
  43116c:	ldp	x19, x20, [sp, #16]
  431170:	ldp	x29, x30, [sp], #48
  431174:	ret
  431178:	bl	445390 <_obstack_memory_used@@Base+0x98c>
  43117c:	b	431154 <ferror@plt+0x2e384>
  431180:	ldr	w2, [x0, #8]
  431184:	cbnz	w2, 43122c <ferror@plt+0x2e45c>
  431188:	stp	x29, x30, [sp, #-48]!
  43118c:	mov	x29, sp
  431190:	stp	x19, x20, [sp, #16]
  431194:	str	x21, [sp, #32]
  431198:	ldrb	w2, [x1]
  43119c:	cbnz	w2, 4311c4 <ferror@plt+0x2e3f4>
  4311a0:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x235fc>
  4311a4:	add	x1, x1, #0x6a
  4311a8:	mov	w2, #0x1                   	// #1
  4311ac:	bl	4310f8 <ferror@plt+0x2e328>
  4311b0:	mov	sp, x29
  4311b4:	ldp	x19, x20, [sp, #16]
  4311b8:	ldr	x21, [sp, #32]
  4311bc:	ldp	x29, x30, [sp], #48
  4311c0:	ret
  4311c4:	mov	x20, x0
  4311c8:	mov	x0, x1
  4311cc:	bl	4446b4 <ferror@plt+0x418e4>
  4311d0:	mov	x21, x0
  4311d4:	bl	402700 <strlen@plt>
  4311d8:	add	x2, x0, #0x12
  4311dc:	and	x2, x2, #0xfffffffffffffff0
  4311e0:	mov	x1, x21
  4311e4:	sub	sp, sp, x2
  4311e8:	mov	x19, sp
  4311ec:	mov	x0, x19
  4311f0:	bl	402bd0 <strcpy@plt>
  4311f4:	mov	x0, x19
  4311f8:	mov	w1, #0x2e                  	// #46
  4311fc:	bl	402a10 <strrchr@plt>
  431200:	cbnz	x0, 431210 <ferror@plt+0x2e440>
  431204:	mov	x0, x19
  431208:	bl	402700 <strlen@plt>
  43120c:	add	x0, x19, x0
  431210:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  431214:	add	x1, x1, #0x3d0
  431218:	bl	402bd0 <strcpy@plt>
  43121c:	mov	x1, x19
  431220:	mov	x0, x20
  431224:	mov	w2, #0x1                   	// #1
  431228:	b	4311ac <ferror@plt+0x2e3dc>
  43122c:	ret
  431230:	stp	x29, x30, [sp, #-32]!
  431234:	mov	x29, sp
  431238:	stp	x19, x20, [sp, #16]
  43123c:	mov	x19, x0
  431240:	bl	430e38 <ferror@plt+0x2e068>
  431244:	bl	430f14 <ferror@plt+0x2e144>
  431248:	mov	x20, x0
  43124c:	ldp	w1, w0, [x19, #24]
  431250:	cmp	w1, w0
  431254:	b.ne	431274 <ferror@plt+0x2e4a4>  // b.any
  431258:	add	w1, w1, #0x4
  43125c:	ldr	x0, [x19, #16]
  431260:	lsl	w1, w1, #1
  431264:	str	w1, [x19, #28]
  431268:	lsl	x1, x1, #3
  43126c:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  431270:	str	x0, [x19, #16]
  431274:	ldr	w0, [x19, #24]
  431278:	ldr	x1, [x19, #16]
  43127c:	add	w2, w0, #0x1
  431280:	str	w2, [x19, #24]
  431284:	str	x20, [x1, w0, uxtw #3]
  431288:	ldp	x19, x20, [sp, #16]
  43128c:	ldp	x29, x30, [sp], #32
  431290:	ret
  431294:	stp	x29, x30, [sp, #-64]!
  431298:	mov	x29, sp
  43129c:	stp	x19, x20, [sp, #16]
  4312a0:	mov	x19, x0
  4312a4:	stp	x21, x22, [sp, #32]
  4312a8:	mov	x21, x1
  4312ac:	str	x23, [sp, #48]
  4312b0:	ldrb	w0, [x21]
  4312b4:	cbz	w0, 431368 <ferror@plt+0x2e598>
  4312b8:	mov	x20, x21
  4312bc:	ldrb	w0, [x20]
  4312c0:	cbz	w0, 4312d4 <ferror@plt+0x2e504>
  4312c4:	cmp	w0, #0x3a
  4312c8:	b.eq	4312d4 <ferror@plt+0x2e504>  // b.none
  4312cc:	add	x20, x20, #0x1
  4312d0:	b	4312bc <ferror@plt+0x2e4ec>
  4312d4:	sub	x22, x20, x21
  4312d8:	add	x0, x22, #0x1
  4312dc:	bl	44526c <_obstack_memory_used@@Base+0x868>
  4312e0:	mov	x23, x0
  4312e4:	mov	x2, x22
  4312e8:	mov	x1, x21
  4312ec:	bl	4026a0 <memcpy@plt>
  4312f0:	ldrb	w0, [x20]
  4312f4:	strb	wzr, [x23, x22]
  4312f8:	cmp	w0, #0x3a
  4312fc:	b.ne	431304 <ferror@plt+0x2e534>  // b.any
  431300:	add	x20, x20, #0x1
  431304:	ldp	w1, w0, [x19, #48]
  431308:	cmp	w1, w0
  43130c:	b.ne	431340 <ferror@plt+0x2e570>  // b.any
  431310:	add	w1, w1, #0x4
  431314:	ldr	x0, [x19, #32]
  431318:	lsl	w1, w1, #1
  43131c:	str	w1, [x19, #52]
  431320:	lsl	x1, x1, #3
  431324:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  431328:	str	x0, [x19, #32]
  43132c:	ldr	x0, [x19, #40]
  431330:	ldr	w1, [x19, #52]
  431334:	lsl	x1, x1, #3
  431338:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  43133c:	str	x0, [x19, #40]
  431340:	ldr	w1, [x19, #48]
  431344:	mov	x21, x20
  431348:	ldr	x2, [x19, #32]
  43134c:	ubfiz	x0, x1, #3, #32
  431350:	add	w1, w1, #0x1
  431354:	str	x23, [x2, x0]
  431358:	ldr	x2, [x19, #40]
  43135c:	str	x22, [x2, x0]
  431360:	str	w1, [x19, #48]
  431364:	b	4312b0 <ferror@plt+0x2e4e0>
  431368:	ldp	x19, x20, [sp, #16]
  43136c:	ldp	x21, x22, [sp, #32]
  431370:	ldr	x23, [sp, #48]
  431374:	ldp	x29, x30, [sp], #64
  431378:	ret
  43137c:	stp	x29, x30, [sp, #-80]!
  431380:	mov	x29, sp
  431384:	stp	x21, x22, [sp, #32]
  431388:	mov	x22, x0
  43138c:	sub	w0, w2, #0x1
  431390:	cmp	w0, #0x20
  431394:	mov	w0, #0x22                  	// #34
  431398:	csel	w21, w2, w0, hi  // hi = pmore
  43139c:	stp	x19, x20, [sp, #16]
  4313a0:	mov	x20, x1
  4313a4:	stp	x25, x26, [sp, #64]
  4313a8:	adrp	x25, 469000 <_obstack_memory_used@@Base+0x245fc>
  4313ac:	add	x25, x25, #0x3d3
  4313b0:	mov	w19, #0x0                   	// #0
  4313b4:	stp	x23, x24, [sp, #48]
  4313b8:	mov	w23, #0x0                   	// #0
  4313bc:	ldr	w0, [x22, #8]
  4313c0:	cmp	w0, w23
  4313c4:	b.ls	431428 <ferror@plt+0x2e658>  // b.plast
  4313c8:	ldr	x0, [x22]
  4313cc:	ubfiz	x26, x23, #3, #32
  4313d0:	ldr	x0, [x0, x26]
  4313d4:	bl	402700 <strlen@plt>
  4313d8:	mov	x24, x0
  4313dc:	add	w19, w19, w0
  4313e0:	cbz	w23, 431400 <ferror@plt+0x2e630>
  4313e4:	cmp	w21, #0x0
  4313e8:	mov	x1, x20
  4313ec:	ccmp	w21, w19, #0x2, ne  // ne = any
  4313f0:	b.cs	431418 <ferror@plt+0x2e648>  // b.hs, b.nlast
  4313f4:	add	w19, w24, #0x1
  4313f8:	mov	x0, x25
  4313fc:	bl	402ca0 <fputs_unlocked@plt>
  431400:	ldr	x0, [x22]
  431404:	mov	x1, x20
  431408:	add	w23, w23, #0x1
  43140c:	ldr	x0, [x0, x26]
  431410:	bl	402ca0 <fputs_unlocked@plt>
  431414:	b	4313bc <ferror@plt+0x2e5ec>
  431418:	mov	w0, #0x20                  	// #32
  43141c:	add	w19, w19, #0x1
  431420:	bl	402810 <putc_unlocked@plt>
  431424:	b	431400 <ferror@plt+0x2e630>
  431428:	adrp	x25, 469000 <_obstack_memory_used@@Base+0x245fc>
  43142c:	add	w19, w19, #0x1
  431430:	add	x25, x25, #0x3d3
  431434:	mov	w23, #0x0                   	// #0
  431438:	mov	x1, x20
  43143c:	mov	w0, #0x3a                  	// #58
  431440:	bl	402810 <putc_unlocked@plt>
  431444:	ldr	w0, [x22, #24]
  431448:	cmp	w0, w23
  43144c:	b.ls	4314ac <ferror@plt+0x2e6dc>  // b.plast
  431450:	ldr	x0, [x22, #16]
  431454:	ubfiz	x26, x23, #3, #32
  431458:	ldr	x0, [x0, x26]
  43145c:	bl	402700 <strlen@plt>
  431460:	add	w19, w19, w0
  431464:	cmp	w21, #0x0
  431468:	mov	x24, x0
  43146c:	ccmp	w21, w19, #0x2, ne  // ne = any
  431470:	mov	x1, x20
  431474:	b.cs	43149c <ferror@plt+0x2e6cc>  // b.hs, b.nlast
  431478:	add	w19, w24, #0x1
  43147c:	mov	x0, x25
  431480:	bl	402ca0 <fputs_unlocked@plt>
  431484:	ldr	x0, [x22, #16]
  431488:	mov	x1, x20
  43148c:	add	w23, w23, #0x1
  431490:	ldr	x0, [x0, x26]
  431494:	bl	402ca0 <fputs_unlocked@plt>
  431498:	b	431444 <ferror@plt+0x2e674>
  43149c:	mov	w0, #0x20                  	// #32
  4314a0:	add	w19, w19, #0x1
  4314a4:	bl	402810 <putc_unlocked@plt>
  4314a8:	b	431484 <ferror@plt+0x2e6b4>
  4314ac:	mov	x1, x20
  4314b0:	mov	w0, #0xa                   	// #10
  4314b4:	ldp	x19, x20, [sp, #16]
  4314b8:	ldp	x21, x22, [sp, #32]
  4314bc:	ldp	x23, x24, [sp, #48]
  4314c0:	ldp	x25, x26, [sp, #64]
  4314c4:	ldp	x29, x30, [sp], #80
  4314c8:	b	402810 <putc_unlocked@plt>
  4314cc:	stp	x29, x30, [sp, #-48]!
  4314d0:	mov	x29, sp
  4314d4:	stp	x19, x20, [sp, #16]
  4314d8:	mov	x19, x1
  4314dc:	mov	w20, #0x1                   	// #1
  4314e0:	str	x21, [sp, #32]
  4314e4:	mov	x21, x0
  4314e8:	ldr	w0, [x21, #24]
  4314ec:	cmp	w0, w20
  4314f0:	b.ls	431530 <ferror@plt+0x2e760>  // b.plast
  4314f4:	mov	x1, x19
  4314f8:	mov	w0, #0xa                   	// #10
  4314fc:	bl	402810 <putc_unlocked@plt>
  431500:	ldr	x0, [x21, #16]
  431504:	mov	x1, x19
  431508:	ldr	x0, [x0, w20, uxtw #3]
  43150c:	add	w20, w20, #0x1
  431510:	bl	402ca0 <fputs_unlocked@plt>
  431514:	mov	x1, x19
  431518:	mov	w0, #0x3a                  	// #58
  43151c:	bl	402810 <putc_unlocked@plt>
  431520:	mov	x1, x19
  431524:	mov	w0, #0xa                   	// #10
  431528:	bl	402810 <putc_unlocked@plt>
  43152c:	b	4314e8 <ferror@plt+0x2e718>
  431530:	ldp	x19, x20, [sp, #16]
  431534:	ldr	x21, [sp, #32]
  431538:	ldp	x29, x30, [sp], #48
  43153c:	ret
  431540:	stp	x29, x30, [sp, #-64]!
  431544:	mov	x3, x1
  431548:	mov	x2, #0x1                   	// #1
  43154c:	mov	x29, sp
  431550:	stp	x19, x20, [sp, #16]
  431554:	mov	x19, x0
  431558:	mov	x20, x1
  43155c:	add	x0, x0, #0x18
  431560:	mov	x1, #0x4                   	// #4
  431564:	stp	x21, x22, [sp, #32]
  431568:	bl	4026e0 <fwrite_unlocked@plt>
  43156c:	cmp	x0, #0x1
  431570:	b.ne	4315dc <ferror@plt+0x2e80c>  // b.any
  431574:	mov	w21, #0x0                   	// #0
  431578:	ldr	w0, [x19, #24]
  43157c:	cmp	w0, w21
  431580:	b.ls	4315f0 <ferror@plt+0x2e820>  // b.plast
  431584:	ldr	x0, [x19, #16]
  431588:	ubfiz	x22, x21, #3, #32
  43158c:	ldr	x0, [x0, x22]
  431590:	bl	402700 <strlen@plt>
  431594:	str	x0, [sp, #56]
  431598:	mov	x2, #0x1                   	// #1
  43159c:	mov	x3, x20
  4315a0:	add	x0, sp, #0x38
  4315a4:	mov	x1, #0x8                   	// #8
  4315a8:	bl	4026e0 <fwrite_unlocked@plt>
  4315ac:	mov	x2, x0
  4315b0:	cmp	x0, #0x1
  4315b4:	b.ne	4315dc <ferror@plt+0x2e80c>  // b.any
  4315b8:	ldr	x0, [x19, #16]
  4315bc:	mov	x3, x20
  4315c0:	ldr	x1, [sp, #56]
  4315c4:	ldr	x0, [x0, x22]
  4315c8:	bl	4026e0 <fwrite_unlocked@plt>
  4315cc:	cmp	x0, #0x1
  4315d0:	b.ne	4315dc <ferror@plt+0x2e80c>  // b.any
  4315d4:	add	w21, w21, #0x1
  4315d8:	b	431578 <ferror@plt+0x2e7a8>
  4315dc:	mov	w0, #0xffffffff            	// #-1
  4315e0:	ldp	x19, x20, [sp, #16]
  4315e4:	ldp	x21, x22, [sp, #32]
  4315e8:	ldp	x29, x30, [sp], #64
  4315ec:	ret
  4315f0:	mov	w0, #0x0                   	// #0
  4315f4:	b	4315e0 <ferror@plt+0x2e810>
  4315f8:	stp	x29, x30, [sp, #-80]!
  4315fc:	mov	x3, x1
  431600:	mov	x29, sp
  431604:	stp	x19, x20, [sp, #16]
  431608:	mov	x20, x1
  43160c:	mov	x1, #0x1                   	// #1
  431610:	stp	x21, x22, [sp, #32]
  431614:	mov	x21, x2
  431618:	mov	x2, #0x4                   	// #4
  43161c:	stp	x23, x24, [sp, #48]
  431620:	mov	x24, x0
  431624:	add	x0, sp, #0x44
  431628:	bl	402a80 <fread_unlocked@plt>
  43162c:	cmp	x0, #0x4
  431630:	b.ne	431678 <ferror@plt+0x2e8a8>  // b.any
  431634:	mov	x0, #0x200                 	// #512
  431638:	bl	44526c <_obstack_memory_used@@Base+0x868>
  43163c:	mov	x19, x0
  431640:	mov	x23, #0x200                 	// #512
  431644:	mov	w22, #0x0                   	// #0
  431648:	ldr	w0, [sp, #68]
  43164c:	cmp	w0, w22
  431650:	b.ls	4316f0 <ferror@plt+0x2e920>  // b.plast
  431654:	mov	x3, x20
  431658:	add	x0, sp, #0x48
  43165c:	mov	x2, #0x8                   	// #8
  431660:	mov	x1, #0x1                   	// #1
  431664:	bl	402a80 <fread_unlocked@plt>
  431668:	cmp	x0, #0x8
  43166c:	b.eq	431680 <ferror@plt+0x2e8b0>  // b.none
  431670:	mov	x0, x19
  431674:	bl	402b30 <free@plt>
  431678:	mov	w0, #0xffffffff            	// #-1
  43167c:	b	4316fc <ferror@plt+0x2e92c>
  431680:	ldr	x0, [sp, #72]
  431684:	add	x1, x0, #0x1
  431688:	cmp	x1, x23
  43168c:	b.ls	4316a4 <ferror@plt+0x2e8d4>  // b.plast
  431690:	add	x23, x0, #0x80
  431694:	mov	x0, x19
  431698:	mov	x1, x23
  43169c:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  4316a0:	mov	x19, x0
  4316a4:	ldr	x2, [sp, #72]
  4316a8:	mov	x1, #0x1                   	// #1
  4316ac:	mov	x3, x20
  4316b0:	mov	x0, x19
  4316b4:	bl	402a80 <fread_unlocked@plt>
  4316b8:	ldr	x1, [sp, #72]
  4316bc:	cmp	x0, x1
  4316c0:	b.ne	431670 <ferror@plt+0x2e8a0>  // b.any
  4316c4:	strb	wzr, [x19, x0]
  4316c8:	cbz	x21, 4316e8 <ferror@plt+0x2e918>
  4316cc:	mov	x1, x21
  4316d0:	mov	x0, x19
  4316d4:	bl	4436a0 <ferror@plt+0x408d0>
  4316d8:	cbz	w0, 4316e8 <ferror@plt+0x2e918>
  4316dc:	mov	x1, x19
  4316e0:	mov	x0, x24
  4316e4:	bl	431230 <ferror@plt+0x2e460>
  4316e8:	add	w22, w22, #0x1
  4316ec:	b	431648 <ferror@plt+0x2e878>
  4316f0:	mov	x0, x19
  4316f4:	bl	402b30 <free@plt>
  4316f8:	mov	w0, #0x0                   	// #0
  4316fc:	ldp	x19, x20, [sp, #16]
  431700:	ldp	x21, x22, [sp, #32]
  431704:	ldp	x23, x24, [sp, #48]
  431708:	ldp	x29, x30, [sp], #80
  43170c:	ret
  431710:	stp	x29, x30, [sp, #-48]!
  431714:	mov	x1, #0x90                  	// #144
  431718:	mov	x29, sp
  43171c:	str	x21, [sp, #32]
  431720:	mov	w21, #0x1                   	// #1
  431724:	stp	x19, x20, [sp, #16]
  431728:	lsl	w20, w21, w0
  43172c:	mov	x0, #0x1                   	// #1
  431730:	bl	4452a0 <_obstack_memory_used@@Base+0x89c>
  431734:	mov	x19, x0
  431738:	adrp	x4, 402000 <_ZGTtnam@plt-0x690>
  43173c:	adrp	x3, 445000 <_obstack_memory_used@@Base+0x5fc>
  431740:	add	x4, x4, #0xb30
  431744:	add	x3, x3, #0x26c
  431748:	mov	x2, #0x0                   	// #0
  43174c:	mov	x1, #0x0                   	// #0
  431750:	bl	444814 <_obstack_begin@@Base>
  431754:	str	xzr, [x19, #48]
  431758:	mov	w0, w20
  43175c:	mov	x1, #0x8                   	// #8
  431760:	bl	4452a0 <_obstack_memory_used@@Base+0x89c>
  431764:	str	x0, [x19, #88]
  431768:	mov	x0, x19
  43176c:	str	w20, [x19, #112]
  431770:	strb	w21, [x19, #136]
  431774:	ldp	x19, x20, [sp, #16]
  431778:	ldr	x21, [sp, #32]
  43177c:	ldp	x29, x30, [sp], #48
  431780:	ret
  431784:	stp	x29, x30, [sp, #-32]!
  431788:	mov	x1, #0x0                   	// #0
  43178c:	mov	x29, sp
  431790:	str	x19, [sp, #16]
  431794:	mov	x19, x0
  431798:	bl	444990 <_obstack_free@@Base>
  43179c:	ldrb	w0, [x19, #136]
  4317a0:	cbz	w0, 4317ac <ferror@plt+0x2e9dc>
  4317a4:	ldr	x0, [x19, #88]
  4317a8:	bl	402b30 <free@plt>
  4317ac:	mov	x0, x19
  4317b0:	ldr	x19, [sp, #16]
  4317b4:	ldp	x29, x30, [sp], #32
  4317b8:	b	402b30 <free@plt>
  4317bc:	stp	x29, x30, [sp, #-112]!
  4317c0:	mov	x29, sp
  4317c4:	stp	x19, x20, [sp, #16]
  4317c8:	mov	x19, x0
  4317cc:	stp	x25, x26, [sp, #64]
  4317d0:	mov	x26, x1
  4317d4:	ldr	w25, [x0, #112]
  4317d8:	ldr	w0, [x0, #128]
  4317dc:	stp	x21, x22, [sp, #32]
  4317e0:	mov	x21, x2
  4317e4:	add	w0, w0, #0x1
  4317e8:	stp	x23, x24, [sp, #48]
  4317ec:	mov	w22, w3
  4317f0:	stp	x27, x28, [sp, #80]
  4317f4:	sub	w27, w25, #0x1
  4317f8:	and	w24, w27, w3
  4317fc:	ldr	x28, [x19, #88]
  431800:	str	w0, [x19, #128]
  431804:	and	w0, w27, w3
  431808:	str	w4, [sp, #104]
  43180c:	ldr	x20, [x28, x0, lsl #3]
  431810:	cbz	x20, 431a78 <ferror@plt+0x2eca8>
  431814:	cmn	x20, #0x1
  431818:	b.eq	431848 <ferror@plt+0x2ea78>  // b.none
  43181c:	ldr	w0, [x20, #12]
  431820:	cmp	w0, w3
  431824:	b.ne	431840 <ferror@plt+0x2ea70>  // b.any
  431828:	ldr	w0, [x20, #8]
  43182c:	cmp	w0, w2
  431830:	b.ne	431840 <ferror@plt+0x2ea70>  // b.any
  431834:	ldr	x0, [x20]
  431838:	bl	402a90 <memcmp@plt>
  43183c:	cbz	w0, 4318c0 <ferror@plt+0x2eaf0>
  431840:	mov	w23, w25
  431844:	b	43184c <ferror@plt+0x2ea7c>
  431848:	mov	w23, w24
  43184c:	add	w4, w22, w22, lsl #4
  431850:	and	w4, w4, w27
  431854:	orr	w4, w4, #0x1
  431858:	ldr	w0, [x19, #132]
  43185c:	add	w0, w0, #0x1
  431860:	str	w0, [x19, #132]
  431864:	add	w0, w24, w4
  431868:	and	w24, w27, w0
  43186c:	and	w0, w27, w0
  431870:	ldr	x20, [x28, x0, lsl #3]
  431874:	cbz	x20, 4318e0 <ferror@plt+0x2eb10>
  431878:	cmn	x20, #0x1
  43187c:	b.ne	43188c <ferror@plt+0x2eabc>  // b.any
  431880:	cmp	w23, w25
  431884:	csel	w23, w23, w24, eq  // eq = none
  431888:	b	431858 <ferror@plt+0x2ea88>
  43188c:	ldr	w0, [x20, #12]
  431890:	cmp	w0, w22
  431894:	b.ne	431858 <ferror@plt+0x2ea88>  // b.any
  431898:	ldr	w0, [x20, #8]
  43189c:	cmp	w0, w21
  4318a0:	b.ne	431858 <ferror@plt+0x2ea88>  // b.any
  4318a4:	ldr	x0, [x20]
  4318a8:	mov	x2, x21
  4318ac:	mov	x1, x26
  4318b0:	str	w4, [sp, #108]
  4318b4:	bl	402a90 <memcmp@plt>
  4318b8:	ldr	w4, [sp, #108]
  4318bc:	cbnz	w0, 431858 <ferror@plt+0x2ea88>
  4318c0:	mov	x0, x20
  4318c4:	ldp	x19, x20, [sp, #16]
  4318c8:	ldp	x21, x22, [sp, #32]
  4318cc:	ldp	x23, x24, [sp, #48]
  4318d0:	ldp	x25, x26, [sp, #64]
  4318d4:	ldp	x27, x28, [sp, #80]
  4318d8:	ldp	x29, x30, [sp], #112
  4318dc:	ret
  4318e0:	ldr	w0, [sp, #104]
  4318e4:	cbnz	w0, 4318f0 <ferror@plt+0x2eb20>
  4318e8:	mov	x20, #0x0                   	// #0
  4318ec:	b	4318c0 <ferror@plt+0x2eaf0>
  4318f0:	cmp	w23, w25
  4318f4:	csel	w24, w24, w23, eq  // eq = none
  4318f8:	ldr	x1, [x19, #96]
  4318fc:	mov	x0, x19
  431900:	blr	x1
  431904:	mov	x20, x0
  431908:	ldr	x0, [x19, #88]
  43190c:	ldr	x1, [x19, #104]
  431910:	str	x20, [x0, w24, uxtw #3]
  431914:	add	x0, x21, #0x1
  431918:	stp	w21, w22, [x20, #8]
  43191c:	cbz	x1, 4319f0 <ferror@plt+0x2ec20>
  431920:	blr	x1
  431924:	mov	x22, x0
  431928:	mov	x2, x21
  43192c:	mov	x1, x26
  431930:	bl	4026a0 <memcpy@plt>
  431934:	strb	wzr, [x22, x21]
  431938:	str	x22, [x20]
  43193c:	ldp	w0, w1, [x19, #112]
  431940:	add	w1, w1, #0x1
  431944:	str	w1, [x19, #116]
  431948:	lsl	w22, w0, #1
  43194c:	add	w0, w0, w0, lsl #1
  431950:	cmp	w0, w1, lsl #2
  431954:	b.hi	4318c0 <ferror@plt+0x2eaf0>  // b.pmore
  431958:	mov	w0, w22
  43195c:	mov	x1, #0x8                   	// #8
  431960:	bl	4452a0 <_obstack_memory_used@@Base+0x89c>
  431964:	mov	x21, x0
  431968:	ldr	x0, [x19, #88]
  43196c:	sub	w2, w22, #0x1
  431970:	ldr	w5, [x19, #112]
  431974:	mov	x3, x0
  431978:	add	x5, x0, x5, lsl #3
  43197c:	ldr	x7, [x3]
  431980:	sub	x1, x7, #0x1
  431984:	cmn	x1, #0x3
  431988:	b.hi	4319c4 <ferror@plt+0x2ebf4>  // b.pmore
  43198c:	ldr	w1, [x7, #12]
  431990:	and	w4, w2, w1
  431994:	and	w6, w2, w1
  431998:	ldr	x4, [x21, x4, lsl #3]
  43199c:	cbz	x4, 4319c0 <ferror@plt+0x2ebf0>
  4319a0:	add	w1, w1, w1, lsl #4
  4319a4:	and	w1, w1, w2
  4319a8:	orr	w1, w1, #0x1
  4319ac:	add	w4, w1, w6
  4319b0:	and	w6, w2, w4
  4319b4:	and	w4, w2, w4
  4319b8:	ldr	x4, [x21, x4, lsl #3]
  4319bc:	cbnz	x4, 4319ac <ferror@plt+0x2ebdc>
  4319c0:	str	x7, [x21, w6, uxtw #3]
  4319c4:	add	x3, x3, #0x8
  4319c8:	cmp	x5, x3
  4319cc:	b.hi	43197c <ferror@plt+0x2ebac>  // b.pmore
  4319d0:	ldrb	w1, [x19, #136]
  4319d4:	cbz	w1, 4319dc <ferror@plt+0x2ec0c>
  4319d8:	bl	402b30 <free@plt>
  4319dc:	mov	w0, #0x1                   	// #1
  4319e0:	str	x21, [x19, #88]
  4319e4:	str	w22, [x19, #112]
  4319e8:	strb	w0, [x19, #136]
  4319ec:	b	4318c0 <ferror@plt+0x2eaf0>
  4319f0:	ldp	x2, x1, [x19, #24]
  4319f4:	sub	x1, x1, x2
  4319f8:	cmp	x1, x0
  4319fc:	b.cs	431a0c <ferror@plt+0x2ec3c>  // b.hs, b.nlast
  431a00:	mov	x1, x0
  431a04:	mov	x0, x19
  431a08:	bl	444840 <_obstack_newchunk@@Base>
  431a0c:	ldr	x0, [x19, #24]
  431a10:	mov	x2, x21
  431a14:	mov	x1, x26
  431a18:	bl	4026a0 <memcpy@plt>
  431a1c:	ldr	x1, [x19, #24]
  431a20:	add	x0, x1, x21
  431a24:	add	x0, x0, #0x1
  431a28:	str	x0, [x19, #24]
  431a2c:	strb	wzr, [x1, x21]
  431a30:	ldp	x2, x1, [x19, #16]
  431a34:	cmp	x1, x2
  431a38:	b.ne	431a48 <ferror@plt+0x2ec78>  // b.any
  431a3c:	ldrb	w0, [x19, #80]
  431a40:	orr	w0, w0, #0x2
  431a44:	strb	w0, [x19, #80]
  431a48:	ldr	x0, [x19, #48]
  431a4c:	ldr	x3, [x19, #32]
  431a50:	add	x1, x1, x0
  431a54:	bic	x0, x1, x0
  431a58:	ldr	x1, [x19, #8]
  431a5c:	sub	x4, x0, x1
  431a60:	sub	x1, x3, x1
  431a64:	cmp	x4, x1
  431a68:	csel	x0, x0, x3, ls  // ls = plast
  431a6c:	stp	x0, x0, [x19, #16]
  431a70:	str	x2, [x20]
  431a74:	b	43193c <ferror@plt+0x2eb6c>
  431a78:	ldr	w0, [sp, #104]
  431a7c:	cbnz	w0, 4318f8 <ferror@plt+0x2eb28>
  431a80:	b	4318e8 <ferror@plt+0x2eb18>
  431a84:	mov	w4, w3
  431a88:	mov	x6, #0x0                   	// #0
  431a8c:	mov	w5, #0x0                   	// #0
  431a90:	mov	w7, #0x43                  	// #67
  431a94:	cmp	x2, x6
  431a98:	b.eq	431ab4 <ferror@plt+0x2ece4>  // b.none
  431a9c:	mul	w5, w5, w7
  431aa0:	ldrb	w3, [x1, x6]
  431aa4:	add	x6, x6, #0x1
  431aa8:	sub	w5, w5, #0x71
  431aac:	add	w5, w3, w5
  431ab0:	b	431a94 <ferror@plt+0x2ecc4>
  431ab4:	add	w3, w5, w2
  431ab8:	b	4317bc <ferror@plt+0x2e9ec>
  431abc:	stp	x29, x30, [sp, #-64]!
  431ac0:	mov	x29, sp
  431ac4:	stp	x19, x20, [sp, #16]
  431ac8:	mov	x19, x0
  431acc:	ldr	x20, [x0, #88]
  431ad0:	str	x23, [sp, #48]
  431ad4:	ldr	w23, [x0, #112]
  431ad8:	stp	x21, x22, [sp, #32]
  431adc:	mov	x21, x1
  431ae0:	mov	x22, x2
  431ae4:	add	x23, x20, x23, lsl #3
  431ae8:	ldr	x1, [x20]
  431aec:	sub	x0, x1, #0x1
  431af0:	cmn	x0, #0x3
  431af4:	b.ls	431b18 <ferror@plt+0x2ed48>  // b.plast
  431af8:	add	x20, x20, #0x8
  431afc:	cmp	x23, x20
  431b00:	b.hi	431ae8 <ferror@plt+0x2ed18>  // b.pmore
  431b04:	ldp	x19, x20, [sp, #16]
  431b08:	ldp	x21, x22, [sp, #32]
  431b0c:	ldr	x23, [sp, #48]
  431b10:	ldp	x29, x30, [sp], #64
  431b14:	ret
  431b18:	ldr	x0, [x19, #120]
  431b1c:	mov	x2, x22
  431b20:	blr	x21
  431b24:	cbnz	w0, 431af8 <ferror@plt+0x2ed28>
  431b28:	b	431b04 <ferror@plt+0x2ed34>
  431b2c:	stp	x29, x30, [sp, #-64]!
  431b30:	mov	x29, sp
  431b34:	stp	x19, x20, [sp, #16]
  431b38:	mov	x20, x0
  431b3c:	ldr	x19, [x0, #88]
  431b40:	stp	x21, x22, [sp, #32]
  431b44:	ldr	w21, [x0, #112]
  431b48:	mov	x22, x1
  431b4c:	stp	x23, x24, [sp, #48]
  431b50:	mov	x23, x2
  431b54:	add	x21, x19, x21, lsl #3
  431b58:	mov	x24, #0xffffffffffffffff    	// #-1
  431b5c:	ldr	x1, [x19]
  431b60:	sub	x0, x1, #0x1
  431b64:	cmn	x0, #0x3
  431b68:	b.hi	431b80 <ferror@plt+0x2edb0>  // b.pmore
  431b6c:	ldr	x0, [x20, #120]
  431b70:	mov	x2, x23
  431b74:	blr	x22
  431b78:	cbz	w0, 431b80 <ferror@plt+0x2edb0>
  431b7c:	str	x24, [x19]
  431b80:	add	x19, x19, #0x8
  431b84:	cmp	x21, x19
  431b88:	b.hi	431b5c <ferror@plt+0x2ed8c>  // b.pmore
  431b8c:	ldp	x19, x20, [sp, #16]
  431b90:	ldp	x21, x22, [sp, #32]
  431b94:	ldp	x23, x24, [sp, #48]
  431b98:	ldp	x29, x30, [sp], #64
  431b9c:	ret
  431ba0:	stp	x29, x30, [sp, #-64]!
  431ba4:	mov	x29, sp
  431ba8:	stp	x19, x20, [sp, #16]
  431bac:	mov	x19, x0
  431bb0:	ldrb	w0, [x0, #136]
  431bb4:	stp	x21, x22, [sp, #32]
  431bb8:	mov	w20, w3
  431bbc:	mov	x22, x1
  431bc0:	str	x23, [sp, #48]
  431bc4:	mov	w21, w2
  431bc8:	and	w23, w4, #0xff
  431bcc:	cbz	w0, 431bd8 <ferror@plt+0x2ee08>
  431bd0:	ldr	x0, [x19, #88]
  431bd4:	bl	402b30 <free@plt>
  431bd8:	strb	w23, [x19, #136]
  431bdc:	ldr	x23, [sp, #48]
  431be0:	str	x22, [x19, #88]
  431be4:	stp	w21, w20, [x19, #112]
  431be8:	ldp	x19, x20, [sp, #16]
  431bec:	ldp	x21, x22, [sp, #32]
  431bf0:	ldp	x29, x30, [sp], #64
  431bf4:	ret
  431bf8:	stp	x29, x30, [sp, #-112]!
  431bfc:	mov	x29, sp
  431c00:	ldr	w1, [x0, #112]
  431c04:	stp	x21, x22, [sp, #32]
  431c08:	mov	x22, x0
  431c0c:	ldr	x0, [x0, #88]
  431c10:	stp	d8, d9, [sp, #80]
  431c14:	movi	d9, #0x0
  431c18:	lsl	x21, x1, #3
  431c1c:	stp	x19, x20, [sp, #16]
  431c20:	add	x1, x0, x1, lsl #3
  431c24:	mov	x19, #0x0                   	// #0
  431c28:	stp	x23, x24, [sp, #48]
  431c2c:	mov	x24, #0x0                   	// #0
  431c30:	mov	x23, #0x0                   	// #0
  431c34:	stp	x25, x26, [sp, #64]
  431c38:	mov	x25, #0x0                   	// #0
  431c3c:	str	d10, [sp, #96]
  431c40:	ldr	x2, [x0]
  431c44:	cmn	x2, #0x1
  431c48:	b.ne	431dec <ferror@plt+0x2f01c>  // b.any
  431c4c:	add	x25, x25, #0x1
  431c50:	add	x0, x0, #0x8
  431c54:	cmp	x1, x0
  431c58:	b.hi	431c40 <ferror@plt+0x2ee70>  // b.pmore
  431c5c:	adrp	x20, 495000 <_obstack_memory_used@@Base+0x505fc>
  431c60:	ldr	w26, [x22, #116]
  431c64:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x245fc>
  431c68:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  431c6c:	ldr	x0, [x20, #1440]
  431c70:	add	x2, x2, #0x3d8
  431c74:	add	x1, x1, #0x3e1
  431c78:	mov	w3, w26
  431c7c:	bl	402d90 <fprintf@plt>
  431c80:	ucvtf	d0, x23
  431c84:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  431c88:	fmov	d1, x0
  431c8c:	ucvtf	d10, w26
  431c90:	ldr	x0, [x20, #1440]
  431c94:	mov	x3, x23
  431c98:	fmul	d0, d0, d1
  431c9c:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x245fc>
  431ca0:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  431ca4:	add	x2, x2, #0x3f8
  431ca8:	add	x1, x1, #0x405
  431cac:	adrp	x23, 469000 <_obstack_memory_used@@Base+0x245fc>
  431cb0:	add	x23, x23, #0x3ee
  431cb4:	fdiv	d0, d0, d10
  431cb8:	bl	402d90 <fprintf@plt>
  431cbc:	ldr	w3, [x22, #112]
  431cc0:	mov	x1, x23
  431cc4:	ldr	x0, [x20, #1440]
  431cc8:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x245fc>
  431ccc:	add	x2, x2, #0x418
  431cd0:	bl	402d90 <fprintf@plt>
  431cd4:	ldr	x0, [x20, #1440]
  431cd8:	mov	x3, x25
  431cdc:	mov	x1, x23
  431ce0:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x245fc>
  431ce4:	add	x2, x2, #0x41f
  431ce8:	adrp	x25, 469000 <_obstack_memory_used@@Base+0x245fc>
  431cec:	bl	402d90 <fprintf@plt>
  431cf0:	add	x25, x25, #0x433
  431cf4:	ldr	x0, [x22, #104]
  431cf8:	cbz	x0, 431e2c <ferror@plt+0x2f05c>
  431cfc:	mov	x1, #0x27ff                	// #10239
  431d00:	cmp	x19, x1
  431d04:	ldr	x0, [x20, #1440]
  431d08:	b.ls	431e20 <ferror@plt+0x2f050>  // b.plast
  431d0c:	mov	w1, #0x9fffff              	// #10485759
  431d10:	cmp	x19, x1
  431d14:	b.hi	431e14 <ferror@plt+0x2f044>  // b.pmore
  431d18:	lsr	x3, x19, #10
  431d1c:	mov	w4, #0x6b                  	// #107
  431d20:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x245fc>
  431d24:	mov	x1, x25
  431d28:	add	x2, x2, #0x428
  431d2c:	bl	402d90 <fprintf@plt>
  431d30:	mov	x1, #0x27ff                	// #10239
  431d34:	cmp	x21, x1
  431d38:	ldr	x0, [x20, #1440]
  431d3c:	b.ls	431ecc <ferror@plt+0x2f0fc>  // b.plast
  431d40:	mov	w1, #0x9fffff              	// #10485759
  431d44:	cmp	x21, x1
  431d48:	b.hi	431ec0 <ferror@plt+0x2f0f0>  // b.pmore
  431d4c:	lsr	x21, x21, #10
  431d50:	mov	w4, #0x6b                  	// #107
  431d54:	mov	x3, x21
  431d58:	mov	x1, x25
  431d5c:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x245fc>
  431d60:	add	x2, x2, #0x46b
  431d64:	bl	402d90 <fprintf@plt>
  431d68:	ldr	w0, [x22, #132]
  431d6c:	ucvtf	d8, x19
  431d70:	adrp	x19, 469000 <_obstack_memory_used@@Base+0x245fc>
  431d74:	add	x19, x19, #0x484
  431d78:	mov	x1, x19
  431d7c:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x245fc>
  431d80:	ucvtf	d1, w0
  431d84:	ldr	w0, [x22, #128]
  431d88:	fdiv	d8, d8, d10
  431d8c:	add	x2, x2, #0x477
  431d90:	ucvtf	d0, w0
  431d94:	ldr	x0, [x20, #1440]
  431d98:	fdiv	d0, d1, d0
  431d9c:	bl	402d90 <fprintf@plt>
  431da0:	ldr	w0, [x22, #128]
  431da4:	mov	x1, x19
  431da8:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x245fc>
  431dac:	add	x2, x2, #0x48f
  431db0:	ucvtf	d0, w0
  431db4:	ldr	x0, [x20, #1440]
  431db8:	fdiv	d0, d10, d0
  431dbc:	bl	402d90 <fprintf@plt>
  431dc0:	fdiv	d0, d9, d10
  431dc4:	ldr	x0, [x20, #1440]
  431dc8:	fmsub	d0, d8, d8, d0
  431dcc:	fcmpe	d0, #0.0
  431dd0:	b.pl	431ed4 <ferror@plt+0x2f104>  // b.nfrst
  431dd4:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x245fc>
  431dd8:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x245fc>
  431ddc:	add	x2, x2, #0x49b
  431de0:	add	x0, x0, #0x4a7
  431de4:	mov	w1, #0x165                 	// #357
  431de8:	bl	402de0 <ferror@plt+0x10>
  431dec:	cbz	x2, 431c50 <ferror@plt+0x2ee80>
  431df0:	ldr	w2, [x2, #8]
  431df4:	add	x23, x23, #0x1
  431df8:	mov	w3, w2
  431dfc:	ucvtf	d0, w2
  431e00:	cmp	x24, w2, uxtw
  431e04:	add	x19, x19, w2, uxtw
  431e08:	csel	x24, x24, x3, cs  // cs = hs, nlast
  431e0c:	fmadd	d9, d0, d0, d9
  431e10:	b	431c50 <ferror@plt+0x2ee80>
  431e14:	lsr	x3, x19, #20
  431e18:	mov	w4, #0x4d                  	// #77
  431e1c:	b	431d20 <ferror@plt+0x2ef50>
  431e20:	mov	x3, x19
  431e24:	mov	w4, #0x20                  	// #32
  431e28:	b	431d20 <ferror@plt+0x2ef50>
  431e2c:	mov	x0, x22
  431e30:	bl	444a04 <_obstack_memory_used@@Base>
  431e34:	mov	x1, #0x27ff                	// #10239
  431e38:	sub	x5, x0, x19
  431e3c:	cmp	x19, x1
  431e40:	ldr	x0, [x20, #1440]
  431e44:	b.ls	431ea0 <ferror@plt+0x2f0d0>  // b.plast
  431e48:	mov	w1, #0x9fffff              	// #10485759
  431e4c:	cmp	x19, x1
  431e50:	b.hi	431e94 <ferror@plt+0x2f0c4>  // b.pmore
  431e54:	lsr	x3, x19, #10
  431e58:	mov	w4, #0x6b                  	// #107
  431e5c:	mov	x1, #0x27ff                	// #10239
  431e60:	cmp	x5, x1
  431e64:	b.ls	431eb8 <ferror@plt+0x2f0e8>  // b.plast
  431e68:	mov	w1, #0x9fffff              	// #10485759
  431e6c:	cmp	x5, x1
  431e70:	b.hi	431eac <ferror@plt+0x2f0dc>  // b.pmore
  431e74:	lsr	x5, x5, #10
  431e78:	mov	w6, #0x6b                  	// #107
  431e7c:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x245fc>
  431e80:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  431e84:	add	x2, x2, #0x43f
  431e88:	add	x1, x1, #0x44e
  431e8c:	bl	402d90 <fprintf@plt>
  431e90:	b	431d30 <ferror@plt+0x2ef60>
  431e94:	lsr	x3, x19, #20
  431e98:	mov	w4, #0x4d                  	// #77
  431e9c:	b	431e5c <ferror@plt+0x2f08c>
  431ea0:	mov	x3, x19
  431ea4:	mov	w4, #0x20                  	// #32
  431ea8:	b	431e5c <ferror@plt+0x2f08c>
  431eac:	lsr	x5, x5, #20
  431eb0:	mov	w6, #0x4d                  	// #77
  431eb4:	b	431e7c <ferror@plt+0x2f0ac>
  431eb8:	mov	w6, #0x20                  	// #32
  431ebc:	b	431e7c <ferror@plt+0x2f0ac>
  431ec0:	lsr	x21, x21, #20
  431ec4:	mov	w4, #0x4d                  	// #77
  431ec8:	b	431d54 <ferror@plt+0x2ef84>
  431ecc:	mov	w4, #0x20                  	// #32
  431ed0:	b	431d54 <ferror@plt+0x2ef84>
  431ed4:	fcmp	d0, #0.0
  431ed8:	b.eq	431f4c <ferror@plt+0x2f17c>  // b.none
  431edc:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  431ee0:	fmov	d1, d0
  431ee4:	ldr	d3, [x1, #1272]
  431ee8:	fnmsub	d2, d1, d1, d0
  431eec:	fadd	d4, d1, d1
  431ef0:	fdiv	d2, d2, d4
  431ef4:	fcmpe	d2, d3
  431ef8:	fsub	d1, d1, d2
  431efc:	b.gt	431ee8 <ferror@plt+0x2f118>
  431f00:	fmov	d0, d8
  431f04:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x245fc>
  431f08:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  431f0c:	add	x2, x2, #0x4bd
  431f10:	add	x1, x1, #0x4c9
  431f14:	bl	402d90 <fprintf@plt>
  431f18:	ldr	x0, [x20, #1440]
  431f1c:	mov	x3, x24
  431f20:	mov	x1, x23
  431f24:	ldr	d10, [sp, #96]
  431f28:	ldp	x19, x20, [sp, #16]
  431f2c:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x245fc>
  431f30:	ldp	x21, x22, [sp, #32]
  431f34:	add	x2, x2, #0x4e5
  431f38:	ldp	x23, x24, [sp, #48]
  431f3c:	ldp	x25, x26, [sp, #64]
  431f40:	ldp	d8, d9, [sp, #80]
  431f44:	ldp	x29, x30, [sp], #112
  431f48:	b	402d90 <fprintf@plt>
  431f4c:	movi	d1, #0x0
  431f50:	b	431f00 <ferror@plt+0x2f130>
  431f54:	ldp	w3, w2, [x0, #36]
  431f58:	add	w2, w2, #0x1
  431f5c:	str	w2, [x0, #40]
  431f60:	cmp	w2, w3
  431f64:	b.hi	431f70 <ferror@plt+0x2f1a0>  // b.pmore
  431f68:	ldr	x0, [x0, #8]
  431f6c:	str	x1, [x0, w2, uxtw #3]
  431f70:	ret
  431f74:	ldrb	w6, [x3]
  431f78:	adrp	x7, 46c000 <_obstack_memory_used@@Base+0x275fc>
  431f7c:	mov	x4, x0
  431f80:	add	x7, x7, #0xb08
  431f84:	mov	w8, #0x20                  	// #32
  431f88:	cbz	x2, 432000 <ferror@plt+0x2f230>
  431f8c:	ldrb	w9, [x1]
  431f90:	ldrb	w5, [x1]
  431f94:	ldrh	w9, [x7, x9, lsl #1]
  431f98:	tst	w9, #0xc00
  431f9c:	b.eq	431fcc <ferror@plt+0x2f1fc>  // b.none
  431fa0:	cbnz	w6, 43200c <ferror@plt+0x2f23c>
  431fa4:	add	x1, x1, #0x1
  431fa8:	subs	x2, x2, #0x1
  431fac:	b.eq	431fc0 <ferror@plt+0x2f1f0>  // b.none
  431fb0:	ldrb	w5, [x1]
  431fb4:	ldrh	w5, [x7, x5, lsl #1]
  431fb8:	tst	w5, #0xc00
  431fbc:	b.ne	431fa4 <ferror@plt+0x2f1d4>  // b.any
  431fc0:	strb	w8, [x4]
  431fc4:	add	x4, x4, #0x1
  431fc8:	b	431f88 <ferror@plt+0x2f1b8>
  431fcc:	cmp	w5, #0x27
  431fd0:	b.eq	431fdc <ferror@plt+0x2f20c>  // b.none
  431fd4:	cmp	w5, #0x22
  431fd8:	b.ne	431fe8 <ferror@plt+0x2f218>  // b.any
  431fdc:	cbz	w6, 431ff8 <ferror@plt+0x2f228>
  431fe0:	cmp	w5, w6
  431fe4:	csel	w6, w6, wzr, ne  // ne = any
  431fe8:	add	x1, x1, #0x1
  431fec:	sub	x2, x2, #0x1
  431ff0:	strb	w5, [x4]
  431ff4:	b	431fc4 <ferror@plt+0x2f1f4>
  431ff8:	mov	w6, w5
  431ffc:	b	431fe8 <ferror@plt+0x2f218>
  432000:	sub	x0, x4, x0
  432004:	strb	w6, [x3]
  432008:	ret
  43200c:	cmp	w5, #0x27
  432010:	b.eq	431fe0 <ferror@plt+0x2f210>  // b.none
  432014:	cmp	w5, #0x22
  432018:	b.ne	431fe8 <ferror@plt+0x2f218>  // b.any
  43201c:	b	431fe0 <ferror@plt+0x2f210>
  432020:	stp	x29, x30, [sp, #-64]!
  432024:	mov	x29, sp
  432028:	stp	x19, x20, [sp, #16]
  43202c:	mov	x20, x1
  432030:	mov	x19, x0
  432034:	stp	x21, x22, [sp, #32]
  432038:	ldr	x1, [x0, #1312]
  43203c:	ldr	x21, [x0, #1328]
  432040:	sub	x21, x21, x1
  432044:	ldrh	w1, [x20, #16]
  432048:	str	x23, [sp, #48]
  43204c:	cbnz	w1, 43208c <ferror@plt+0x2f2bc>
  432050:	add	x1, x21, #0x1
  432054:	bl	4288e0 <ferror@plt+0x25b10>
  432058:	ldr	x1, [x19, #1312]
  43205c:	mov	x22, x0
  432060:	mov	x2, x21
  432064:	bl	4026a0 <memcpy@plt>
  432068:	mov	w0, #0xa                   	// #10
  43206c:	strb	w0, [x22, x21]
  432070:	str	w21, [x20, #12]
  432074:	str	x22, [x20, #24]
  432078:	ldp	x19, x20, [sp, #16]
  43207c:	ldp	x21, x22, [sp, #32]
  432080:	ldr	x23, [sp, #48]
  432084:	ldp	x29, x30, [sp], #64
  432088:	ret
  43208c:	ldr	x3, [x0, #56]
  432090:	mov	w22, w2
  432094:	add	x23, x21, #0xd
  432098:	ldr	w2, [x20, #12]
  43209c:	and	x23, x23, #0xfffffffffffffff8
  4320a0:	ldr	x1, [x3, #24]
  4320a4:	add	x2, x2, x23
  4320a8:	ldr	x3, [x3, #16]
  4320ac:	sub	x1, x1, x3
  4320b0:	cmp	x2, x1
  4320b4:	b.ls	4320c0 <ferror@plt+0x2f2f0>  // b.plast
  4320b8:	add	x1, x0, #0x38
  4320bc:	bl	42885c <ferror@plt+0x25a8c>
  4320c0:	ldr	x0, [x19, #56]
  4320c4:	ldr	w2, [x20, #12]
  4320c8:	ldr	x1, [x0, #16]
  4320cc:	str	x1, [x20, #24]
  4320d0:	add	x0, x1, x2
  4320d4:	str	w21, [x1, x2]
  4320d8:	add	x0, x0, #0x6
  4320dc:	ldr	x1, [x19, #1312]
  4320e0:	sturh	w22, [x0, #-2]
  4320e4:	mov	x2, x21
  4320e8:	bl	4026a0 <memcpy@plt>
  4320ec:	ldr	x0, [x19, #1312]
  4320f0:	str	x0, [x19, #1328]
  4320f4:	ldr	w0, [x20, #12]
  4320f8:	add	w0, w0, w23
  4320fc:	str	w0, [x20, #12]
  432100:	cbnz	w22, 432078 <ferror@plt+0x2f2a8>
  432104:	ldr	x1, [x19, #56]
  432108:	ldr	x2, [x1, #16]
  43210c:	add	x0, x2, w0, uxtw
  432110:	str	x0, [x1, #16]
  432114:	b	432078 <ferror@plt+0x2f2a8>
  432118:	stp	x29, x30, [sp, #-48]!
  43211c:	mov	x29, sp
  432120:	stp	x19, x20, [sp, #16]
  432124:	mov	x20, x0
  432128:	add	x19, x1, #0x3
  43212c:	str	x21, [sp, #32]
  432130:	ldr	x21, [x0, #1328]
  432134:	ldr	x0, [x0, #1320]
  432138:	sub	x0, x0, x21
  43213c:	cmp	x0, x19
  432140:	b.cs	432174 <ferror@plt+0x2f3a4>  // b.hs, b.nlast
  432144:	ldr	x0, [x20, #1312]
  432148:	sub	x21, x21, x0
  43214c:	add	x19, x19, x21
  432150:	add	x19, x19, x19, lsl #1
  432154:	lsr	x19, x19, #1
  432158:	mov	x1, x19
  43215c:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  432160:	add	x19, x0, x19
  432164:	str	x0, [x20, #1312]
  432168:	add	x0, x0, x21
  43216c:	str	x19, [x20, #1320]
  432170:	str	x0, [x20, #1328]
  432174:	ldp	x19, x20, [sp, #16]
  432178:	ldr	x21, [sp, #32]
  43217c:	ldp	x29, x30, [sp], #48
  432180:	ret
  432184:	stp	x29, x30, [sp, #-64]!
  432188:	mov	x29, sp
  43218c:	ldrb	w2, [x1, #18]
  432190:	stp	x19, x20, [sp, #16]
  432194:	mov	x20, x1
  432198:	and	w2, w2, #0x3
  43219c:	stp	x21, x22, [sp, #32]
  4321a0:	cmp	w2, #0x3
  4321a4:	mov	x22, x0
  4321a8:	str	x23, [sp, #48]
  4321ac:	b.ne	43220c <ferror@plt+0x2f43c>  // b.any
  4321b0:	mov	w2, #0x0                   	// #0
  4321b4:	bl	42da4c <ferror@plt+0x2ac7c>
  4321b8:	mov	x23, x0
  4321bc:	bl	402700 <strlen@plt>
  4321c0:	mov	x19, x0
  4321c4:	add	x1, x0, #0x1
  4321c8:	mov	x0, x22
  4321cc:	bl	4288e0 <ferror@plt+0x25b10>
  4321d0:	mov	x21, x0
  4321d4:	mov	x2, x19
  4321d8:	mov	x1, x23
  4321dc:	bl	4026a0 <memcpy@plt>
  4321e0:	mov	w0, #0xa                   	// #10
  4321e4:	strb	w0, [x21, x19]
  4321e8:	mov	x3, x19
  4321ec:	mov	x2, x21
  4321f0:	mov	x1, x20
  4321f4:	mov	x0, x22
  4321f8:	ldp	x19, x20, [sp, #16]
  4321fc:	ldp	x21, x22, [sp, #32]
  432200:	ldr	x23, [sp, #48]
  432204:	ldp	x29, x30, [sp], #64
  432208:	b	42e10c <ferror@plt+0x2b33c>
  43220c:	ldr	x0, [x1, #24]
  432210:	ldrb	w1, [x0, #19]
  432214:	ldr	w19, [x0, #12]
  432218:	orr	w1, w1, #0x20
  43221c:	strb	w1, [x0, #19]
  432220:	ldr	x21, [x0, #24]
  432224:	b	4321e8 <ferror@plt+0x2f418>
  432228:	stp	x29, x30, [sp, #-32]!
  43222c:	mov	w3, #0x204                 	// #516
  432230:	mov	x29, sp
  432234:	stp	x19, x20, [sp, #16]
  432238:	mov	x19, x0
  43223c:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  432240:	add	x0, x0, #0xb08
  432244:	ldr	x20, [x19, #1328]
  432248:	ldrb	w2, [x1], #1
  43224c:	strb	w2, [x20], #1
  432250:	ldrb	w2, [x1]
  432254:	ldrh	w2, [x0, x2, lsl #1]
  432258:	tst	w3, w2
  43225c:	b.ne	432248 <ferror@plt+0x2f478>  // b.any
  432260:	ldr	x0, [x19, #136]
  432264:	mov	w3, #0x1                   	// #1
  432268:	str	x1, [x0, #16]
  43226c:	ldr	x0, [x19, #1088]
  432270:	ldr	x1, [x19, #1328]
  432274:	sub	x2, x20, x1
  432278:	bl	431a84 <ferror@plt+0x2ecb4>
  43227c:	str	x20, [x19, #1328]
  432280:	ldp	x19, x20, [sp, #16]
  432284:	ldp	x29, x30, [sp], #32
  432288:	ret
  43228c:	stp	x29, x30, [sp, #-64]!
  432290:	mov	x29, sp
  432294:	stp	x19, x20, [sp, #16]
  432298:	mov	x20, x1
  43229c:	mov	x19, x0
  4322a0:	ldr	x1, [x0, #40]
  4322a4:	stp	x23, x24, [sp, #48]
  4322a8:	mov	w23, w2
  4322ac:	stp	x21, x22, [sp, #32]
  4322b0:	ldr	w24, [x1, #60]
  4322b4:	ldr	x1, [x0, #136]
  4322b8:	ldr	x22, [x0]
  4322bc:	ldr	x1, [x1, #8]
  4322c0:	str	x20, [x22]
  4322c4:	cbz	x1, 43235c <ferror@plt+0x2f58c>
  4322c8:	mov	x1, x20
  4322cc:	add	x0, x20, #0x2
  4322d0:	ldrb	w2, [x1, #1]!
  4322d4:	cmp	w2, #0x2f
  4322d8:	csel	x0, x0, x1, eq  // eq = none
  4322dc:	mov	x1, x0
  4322e0:	ldrb	w3, [x1], #1
  4322e4:	cmp	w3, #0x2f
  4322e8:	b.ne	43232c <ferror@plt+0x2f55c>  // b.any
  4322ec:	ldurb	w0, [x1, #-2]
  4322f0:	cmp	w0, #0x2a
  4322f4:	b.ne	432324 <ferror@plt+0x2f554>  // b.any
  4322f8:	mov	w21, #0x0                   	// #0
  4322fc:	str	x1, [x22]
  432300:	ldrb	w1, [x19, #16]
  432304:	ldr	x0, [x19, #1328]
  432308:	cbz	w1, 43238c <ferror@plt+0x2f5bc>
  43230c:	cbz	w23, 43236c <ferror@plt+0x2f59c>
  432310:	ldrb	w1, [x19, #1124]
  432314:	cbz	w1, 432394 <ferror@plt+0x2f5c4>
  432318:	sub	x0, x0, #0x1
  43231c:	str	x0, [x19, #1328]
  432320:	b	432374 <ferror@plt+0x2f5a4>
  432324:	mov	x0, x1
  432328:	b	4322dc <ferror@plt+0x2f50c>
  43232c:	cmp	w3, #0xa
  432330:	b.ne	432324 <ferror@plt+0x2f554>  // b.any
  432334:	str	x0, [x22]
  432338:	mov	w2, w24
  43233c:	mov	x0, x19
  432340:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x225fc>
  432344:	mov	w3, #0x0                   	// #0
  432348:	add	x4, x4, #0xf0a
  43234c:	mov	w1, #0x3                   	// #3
  432350:	mov	w21, #0x1                   	// #1
  432354:	bl	4217cc <ferror@plt+0x1e9fc>
  432358:	b	432300 <ferror@plt+0x2f530>
  43235c:	bl	4278b8 <ferror@plt+0x24ae8>
  432360:	ands	w21, w0, #0xff
  432364:	b.eq	432300 <ferror@plt+0x2f530>  // b.none
  432368:	b	432338 <ferror@plt+0x2f568>
  43236c:	mov	w1, #0x20                  	// #32
  432370:	sturb	w1, [x0, #-1]
  432374:	ldr	x0, [x22]
  432378:	ldp	x19, x20, [sp, #16]
  43237c:	ldp	x21, x22, [sp, #32]
  432380:	ldp	x23, x24, [sp, #48]
  432384:	ldp	x29, x30, [sp], #64
  432388:	ret
  43238c:	ldrb	w1, [x19, #1123]
  432390:	b	432314 <ferror@plt+0x2f544>
  432394:	ldr	x23, [x22]
  432398:	mov	x1, x20
  43239c:	sub	x23, x23, x20
  4323a0:	mov	x2, x23
  4323a4:	bl	4026a0 <memcpy@plt>
  4323a8:	ldr	x1, [x19, #1328]
  4323ac:	add	x0, x1, x23
  4323b0:	cbz	w21, 43231c <ferror@plt+0x2f54c>
  4323b4:	add	x0, x0, #0x1
  4323b8:	str	x0, [x19, #1328]
  4323bc:	mov	w0, #0x2a                  	// #42
  4323c0:	strb	w0, [x1, x23]
  4323c4:	ldr	x0, [x19, #1328]
  4323c8:	add	x1, x0, #0x1
  4323cc:	str	x1, [x19, #1328]
  4323d0:	mov	w1, #0x2f                  	// #47
  4323d4:	strb	w1, [x0]
  4323d8:	b	432374 <ferror@plt+0x2f5a4>
  4323dc:	stp	x29, x30, [sp, #-48]!
  4323e0:	mov	x29, sp
  4323e4:	stp	x19, x20, [sp, #16]
  4323e8:	mov	x19, x0
  4323ec:	mov	w20, w2
  4323f0:	ldr	x3, [x0, #1328]
  4323f4:	str	x21, [sp, #32]
  4323f8:	adrp	x21, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4323fc:	add	x21, x21, #0xb08
  432400:	mov	x0, x1
  432404:	ldrb	w5, [x1], #1
  432408:	mov	x4, x3
  43240c:	strb	w5, [x3], #1
  432410:	mov	x2, x5
  432414:	ldrh	w5, [x21, x5, lsl #1]
  432418:	tbnz	w5, #11, 432400 <ferror@plt+0x2f630>
  43241c:	cmp	w2, #0x2f
  432420:	b.ne	432450 <ferror@plt+0x2f680>  // b.any
  432424:	ldrb	w2, [x0, #1]
  432428:	cmp	w2, #0x2a
  43242c:	b.ne	432450 <ferror@plt+0x2f680>  // b.any
  432430:	cbz	w20, 432450 <ferror@plt+0x2f680>
  432434:	str	x3, [x19, #1328]
  432438:	mov	x0, x19
  43243c:	mov	w2, #0x0                   	// #0
  432440:	bl	43228c <ferror@plt+0x2f4bc>
  432444:	mov	x1, x0
  432448:	ldr	x3, [x19, #1328]
  43244c:	b	432400 <ferror@plt+0x2f630>
  432450:	ldr	x21, [sp, #32]
  432454:	str	x4, [x19, #1328]
  432458:	ldp	x19, x20, [sp, #16]
  43245c:	ldp	x29, x30, [sp], #48
  432460:	ret
  432464:	ldrh	w2, [x1, #18]
  432468:	tbz	w2, #6, 4324b4 <ferror@plt+0x2f6e4>
  43246c:	ldrb	w2, [x1, #18]
  432470:	and	w2, w2, #0x3
  432474:	cmp	w2, #0x3
  432478:	b.ne	4324bc <ferror@plt+0x2f6ec>  // b.any
  43247c:	ldr	w2, [x1, #24]
  432480:	cmp	w2, #0xa
  432484:	cset	w2, eq  // eq = none
  432488:	cbz	w2, 4324cc <ferror@plt+0x2f6fc>
  43248c:	ldr	x2, [x0, #136]
  432490:	mov	x3, #0x0                   	// #0
  432494:	ldr	x4, [x2, #40]
  432498:	add	x3, x3, #0x1
  43249c:	cmp	x4, x1
  4324a0:	b.ne	4324ac <ferror@plt+0x2f6dc>  // b.any
  4324a4:	cmp	x3, #0x14
  4324a8:	b.hi	4324cc <ferror@plt+0x2f6fc>  // b.pmore
  4324ac:	ldr	x2, [x2, #8]
  4324b0:	cbnz	x2, 432494 <ferror@plt+0x2f6c4>
  4324b4:	mov	w0, #0x0                   	// #0
  4324b8:	ret
  4324bc:	ldr	x2, [x1, #24]
  4324c0:	ldrb	w2, [x2, #19]
  4324c4:	ubfx	x2, x2, #2, #1
  4324c8:	b	432488 <ferror@plt+0x2f6b8>
  4324cc:	stp	x29, x30, [sp, #-16]!
  4324d0:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x245fc>
  4324d4:	add	x2, x2, #0x500
  4324d8:	mov	x29, sp
  4324dc:	ldr	x3, [x1]
  4324e0:	mov	w1, #0x3                   	// #3
  4324e4:	bl	421610 <ferror@plt+0x1e840>
  4324e8:	mov	w0, #0x1                   	// #1
  4324ec:	ldp	x29, x30, [sp], #16
  4324f0:	ret
  4324f4:	ldr	x3, [x0]
  4324f8:	ldr	x4, [x3]
  4324fc:	str	x4, [x0, #1344]
  432500:	ldr	x4, [x3, #32]
  432504:	str	x4, [x0, #1352]
  432508:	ldr	x4, [x3, #16]
  43250c:	str	x3, [x0, #8]
  432510:	str	x4, [x0, #1360]
  432514:	stp	x1, x1, [x3]
  432518:	add	x1, x1, x2
  43251c:	str	x1, [x3, #32]
  432520:	strb	wzr, [x3, #104]
  432524:	ret
  432528:	ldr	x1, [x0, #8]
  43252c:	ldr	x2, [x0, #1344]
  432530:	str	x2, [x1]
  432534:	ldr	x2, [x0, #1352]
  432538:	str	x2, [x1, #32]
  43253c:	ldr	x2, [x0, #1360]
  432540:	str	x2, [x1, #8]
  432544:	mov	w2, #0x1                   	// #1
  432548:	strb	w2, [x1, #104]
  43254c:	str	xzr, [x0, #8]
  432550:	ret
  432554:	stp	x29, x30, [sp, #-256]!
  432558:	mov	x29, sp
  43255c:	stp	x19, x20, [sp, #16]
  432560:	stp	x21, x22, [sp, #32]
  432564:	stp	x23, x24, [sp, #48]
  432568:	stp	x25, x26, [sp, #64]
  43256c:	mov	x26, x0
  432570:	mov	x25, x1
  432574:	stp	x27, x28, [sp, #80]
  432578:	ldrb	w0, [x0, #19]
  43257c:	ldr	x1, [x26]
  432580:	cmp	w0, #0x0
  432584:	cset	w0, ne  // ne = any
  432588:	str	w0, [sp, #112]
  43258c:	ldr	x0, [x26, #136]
  432590:	ldr	x3, [x1]
  432594:	stp	xzr, xzr, [sp, #176]
  432598:	ldr	x1, [x1, #32]
  43259c:	str	xzr, [sp, #192]
  4325a0:	str	wzr, [sp, #200]
  4325a4:	stp	x3, x1, [x0, #16]
  4325a8:	ands	w0, w2, #0xff
  4325ac:	str	x3, [sp, #104]
  4325b0:	str	w0, [sp, #116]
  4325b4:	stp	xzr, xzr, [sp, #160]
  4325b8:	b.ne	4325d0 <ferror@plt+0x2f800>  // b.any
  4325bc:	ldr	x0, [x26, #1312]
  4325c0:	str	x0, [x26, #1328]
  4325c4:	ldr	x0, [x26, #40]
  4325c8:	ldr	w0, [x0, #60]
  4325cc:	str	w0, [x26, #1336]
  4325d0:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x245fc>
  4325d4:	mov	w27, #0x0                   	// #0
  4325d8:	add	x0, x0, #0x554
  4325dc:	mov	w20, #0x0                   	// #0
  4325e0:	mov	w23, #0x0                   	// #0
  4325e4:	str	x0, [sp, #120]
  4325e8:	ldr	x22, [x26, #136]
  4325ec:	mov	x0, x26
  4325f0:	ldp	x28, x1, [x22, #16]
  4325f4:	sub	x1, x1, x28
  4325f8:	bl	432118 <ferror@plt+0x2f348>
  4325fc:	ldr	x24, [x26, #1328]
  432600:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  432604:	add	x0, x0, #0xb08
  432608:	str	x0, [sp, #128]
  43260c:	ldr	x0, [x22, #8]
  432610:	cbnz	x0, 432648 <ferror@plt+0x2f878>
  432614:	ldr	w0, [sp, #116]
  432618:	cbnz	w0, 432648 <ferror@plt+0x2f878>
  43261c:	ldr	x0, [x26]
  432620:	ldr	w1, [x0, #56]
  432624:	ldr	x4, [x0, #48]
  432628:	lsl	x1, x1, #4
  43262c:	ldr	x1, [x4, x1]
  432630:	cmp	x1, x28
  432634:	b.hi	432648 <ferror@plt+0x2f878>  // b.pmore
  432638:	str	x28, [x0]
  43263c:	mov	w1, #0x0                   	// #0
  432640:	mov	x0, x26
  432644:	bl	4276a4 <ferror@plt+0x248d4>
  432648:	mov	x19, x28
  43264c:	mov	x21, x24
  432650:	ldrb	w0, [x19], #1
  432654:	strb	w0, [x21], #1
  432658:	cmp	w0, #0x2f
  43265c:	b.hi	4326fc <ferror@plt+0x2f92c>  // b.pmore
  432660:	cmp	w0, #0x1f
  432664:	b.hi	4326c4 <ferror@plt+0x2f8f4>  // b.pmore
  432668:	cmp	w0, #0xc
  43266c:	b.ls	4326e4 <ferror@plt+0x2f914>  // b.plast
  432670:	ldrb	w0, [x26, #16]
  432674:	cbnz	w0, 43267c <ferror@plt+0x2f8ac>
  432678:	strb	wzr, [x26, #440]
  43267c:	cmp	w27, #0x8
  432680:	b.hi	43269c <ferror@plt+0x2f8cc>  // b.pmore
  432684:	mov	x0, #0x16b                 	// #363
  432688:	lsr	x0, x0, x27
  43268c:	mvn	x0, x0
  432690:	and	w1, w0, #0x1
  432694:	str	w1, [sp, #112]
  432698:	tbz	w0, #0, 4326bc <ferror@plt+0x2f8ec>
  43269c:	str	wzr, [sp, #112]
  4326a0:	b	4326a8 <ferror@plt+0x2f8d8>
  4326a4:	mov	w27, #0x6                   	// #6
  4326a8:	mov	x24, x21
  4326ac:	mov	x28, x19
  4326b0:	b	43260c <ferror@plt+0x2f83c>
  4326b4:	mov	w27, #0x3                   	// #3
  4326b8:	b	4326a8 <ferror@plt+0x2f8d8>
  4326bc:	mov	w27, #0x0                   	// #0
  4326c0:	b	4326a8 <ferror@plt+0x2f8d8>
  4326c4:	sub	w1, w0, #0x20
  4326c8:	cmp	w1, #0xf
  4326cc:	b.hi	432670 <ferror@plt+0x2f8a0>  // b.pmore
  4326d0:	ldr	x2, [sp, #120]
  4326d4:	ldrh	w1, [x2, w1, uxtw #1]
  4326d8:	adr	x2, 4326e4 <ferror@plt+0x2f914>
  4326dc:	add	x1, x2, w1, sxth #2
  4326e0:	br	x1
  4326e4:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  4326e8:	add	x1, x1, #0x574
  4326ec:	ldrb	w0, [x1, w0, uxtw]
  4326f0:	adr	x1, 4326fc <ferror@plt+0x2f92c>
  4326f4:	add	x0, x1, w0, sxtb #2
  4326f8:	br	x0
  4326fc:	cmp	w0, #0x3e
  432700:	b.eq	432878 <ferror@plt+0x2faa8>  // b.none
  432704:	b.hi	432724 <ferror@plt+0x2f954>  // b.pmore
  432708:	cmp	w0, #0x3c
  43270c:	b.ne	432670 <ferror@plt+0x2f8a0>  // b.any
  432710:	ldr	w0, [sp, #112]
  432714:	cmp	w0, #0x0
  432718:	mov	w0, #0x3e                  	// #62
  43271c:	csel	w20, w20, w0, eq  // eq = none
  432720:	b	432670 <ferror@plt+0x2f8a0>
  432724:	cmp	w0, #0x5c
  432728:	b.eq	432898 <ferror@plt+0x2fac8>  // b.none
  43272c:	b.hi	4327b4 <ferror@plt+0x2f9e4>  // b.pmore
  432730:	sub	w0, w0, #0x41
  432734:	and	w0, w0, #0xff
  432738:	cmp	w0, #0x19
  43273c:	b.hi	432670 <ferror@plt+0x2f8a0>  // b.pmore
  432740:	ldrb	w0, [x26, #18]
  432744:	cbnz	w0, 432670 <ferror@plt+0x2f8a0>
  432748:	cmp	w20, #0x0
  43274c:	ccmp	x25, #0x0, #0x0, ne  // ne = any
  432750:	b.eq	432670 <ferror@plt+0x2f8a0>  // b.none
  432754:	str	x24, [x26, #1328]
  432758:	mov	x1, x28
  43275c:	mov	x0, x26
  432760:	bl	432228 <ferror@plt+0x2f458>
  432764:	mov	x28, x0
  432768:	ldrb	w0, [x0, #18]
  43276c:	ldr	x19, [x22, #16]
  432770:	ldr	x21, [x26, #1328]
  432774:	tbz	w0, #1, 432900 <ferror@plt+0x2fb30>
  432778:	cmp	w27, #0x1
  43277c:	b.hi	432900 <ferror@plt+0x2fb30>  // b.pmore
  432780:	ldrb	w1, [x26, #24]
  432784:	cbz	w1, 432940 <ferror@plt+0x2fb70>
  432788:	cbz	x25, 43290c <ferror@plt+0x2fb3c>
  43278c:	and	w0, w0, #0x3
  432790:	cmp	w0, #0x1
  432794:	b.ne	432904 <ferror@plt+0x2fb34>  // b.any
  432798:	ldrh	w2, [x28, #24]
  43279c:	mov	x1, x25
  4327a0:	str	x24, [x26, #1328]
  4327a4:	mov	x0, x26
  4327a8:	bl	432020 <ferror@plt+0x2f250>
  4327ac:	ldr	x21, [x26, #1312]
  4327b0:	b	432670 <ferror@plt+0x2f8a0>
  4327b4:	cmp	w0, #0x5f
  4327b8:	b.eq	432740 <ferror@plt+0x2f970>  // b.none
  4327bc:	sub	w0, w0, #0x61
  4327c0:	b	432734 <ferror@plt+0x2f964>
  4327c4:	ldr	x0, [x22, #8]
  4327c8:	str	x24, [x26, #1328]
  4327cc:	cbz	x0, 4327dc <ferror@plt+0x2fa0c>
  4327d0:	mov	x0, x26
  4327d4:	bl	42e164 <ferror@plt+0x2b394>
  4327d8:	b	4325e8 <ferror@plt+0x2f818>
  4327dc:	ldr	x0, [x26]
  4327e0:	ldr	w1, [sp, #116]
  4327e4:	str	x19, [x0]
  4327e8:	cbnz	w1, 433038 <ferror@plt+0x30268>
  4327ec:	mov	w1, #0x1                   	// #1
  4327f0:	strb	w1, [x0, #104]
  4327f4:	ldr	x0, [x26, #40]
  4327f8:	mov	w1, #0x18                  	// #24
  4327fc:	ldr	w2, [x0, #12]
  432800:	ldr	w4, [x0, #60]
  432804:	sub	w2, w2, #0x1
  432808:	smull	x2, w2, w1
  43280c:	ldr	x1, [x0]
  432810:	add	x5, x1, x2
  432814:	ldr	w1, [x1, x2]
  432818:	mov	w2, #0x0                   	// #0
  43281c:	sub	w4, w4, w1
  432820:	ldrb	w1, [x5, #6]
  432824:	lsr	w4, w4, w1
  432828:	ldr	w1, [x5, #16]
  43282c:	add	w1, w1, #0x1
  432830:	add	w1, w4, w1
  432834:	bl	42b50c <ferror@plt+0x2873c>
  432838:	sub	w0, w27, #0x1
  43283c:	cmp	w0, #0x1
  432840:	b.hi	433038 <ferror@plt+0x30268>  // b.pmore
  432844:	ldrb	w0, [x26, #16]
  432848:	cbnz	w0, 433038 <ferror@plt+0x30268>
  43284c:	mov	x0, x26
  432850:	bl	427d20 <ferror@plt+0x24f50>
  432854:	tst	w0, #0xff
  432858:	b.eq	433038 <ferror@plt+0x30268>  // b.none
  43285c:	cmp	w27, #0x2
  432860:	b.ne	43286c <ferror@plt+0x2fa9c>  // b.any
  432864:	mov	w0, #0x20                  	// #32
  432868:	strb	w0, [x24]
  43286c:	ldr	x0, [x26]
  432870:	ldr	x19, [x0]
  432874:	b	4326a8 <ferror@plt+0x2f8d8>
  432878:	cmp	w20, #0x3e
  43287c:	csel	w20, w20, wzr, ne  // ne = any
  432880:	b	432670 <ferror@plt+0x2f8a0>
  432884:	cmp	w20, w0
  432888:	b.eq	432a7c <ferror@plt+0x2fcac>  // b.none
  43288c:	cmp	w20, #0x0
  432890:	csel	w20, w20, w0, ne  // ne = any
  432894:	b	432670 <ferror@plt+0x2f8a0>
  432898:	ldrb	w1, [x28, #1]
  43289c:	sub	w0, w1, #0x22
  4328a0:	and	w0, w0, #0xff
  4328a4:	cmp	w0, #0x3a
  4328a8:	b.hi	432670 <ferror@plt+0x2f8a0>  // b.pmore
  4328ac:	mov	x2, #0x21                  	// #33
  4328b0:	movk	x2, #0x400, lsl #48
  4328b4:	lsr	x0, x2, x0
  4328b8:	tbz	w0, #0, 432670 <ferror@plt+0x2f8a0>
  4328bc:	add	x19, x28, #0x2
  4328c0:	add	x21, x24, #0x2
  4328c4:	strb	w1, [x24, #1]
  4328c8:	b	432670 <ferror@plt+0x2f8a0>
  4328cc:	cbnz	w20, 432670 <ferror@plt+0x2f8a0>
  4328d0:	ldrb	w0, [x28, #1]
  4328d4:	cmp	w0, #0x2a
  4328d8:	b.ne	432670 <ferror@plt+0x2f8a0>  // b.any
  4328dc:	cmp	x25, #0x0
  4328e0:	str	x21, [x26, #1328]
  4328e4:	mov	x1, x19
  4328e8:	cset	w2, ne  // ne = any
  4328ec:	mov	x0, x26
  4328f0:	bl	43228c <ferror@plt+0x2f4bc>
  4328f4:	mov	x19, x0
  4328f8:	ldr	x21, [x26, #1328]
  4328fc:	b	4326a8 <ferror@plt+0x2f8d8>
  432900:	cbnz	x25, 43278c <ferror@plt+0x2f9bc>
  432904:	cmp	w27, #0x5
  432908:	b.eq	4326a4 <ferror@plt+0x2f8d4>  // b.none
  43290c:	ldrb	w0, [x26, #20]
  432910:	cbz	w0, 432670 <ferror@plt+0x2f8a0>
  432914:	ldr	x0, [x26, #1248]
  432918:	cmp	x0, x28
  43291c:	b.eq	4326b4 <ferror@plt+0x2f8e4>  // b.none
  432920:	ldr	x0, [x26, #1288]
  432924:	cmp	x0, x28
  432928:	b.eq	432938 <ferror@plt+0x2fb68>  // b.none
  43292c:	ldr	x0, [x26, #1296]
  432930:	cmp	x0, x28
  432934:	b.ne	432670 <ferror@plt+0x2f8a0>  // b.any
  432938:	mov	w27, #0x8                   	// #8
  43293c:	b	4326a8 <ferror@plt+0x2f8d8>
  432940:	strb	wzr, [x26, #440]
  432944:	and	w0, w0, #0x3
  432948:	cmp	w0, #0x3
  43294c:	b.ne	432964 <ferror@plt+0x2fb94>  // b.any
  432950:	ldr	w0, [x28, #24]
  432954:	cmp	w0, #0xa
  432958:	b.ne	4329c4 <ferror@plt+0x2fbf4>  // b.any
  43295c:	mov	w27, #0x1                   	// #1
  432960:	b	432974 <ferror@plt+0x2fba4>
  432964:	ldr	x0, [x28, #24]
  432968:	ldrb	w1, [x0, #19]
  43296c:	tbz	w1, #2, 4329c4 <ferror@plt+0x2fbf4>
  432970:	ldrh	w27, [x0, #16]
  432974:	ldr	x1, [sp, #160]
  432978:	cbz	x1, 432984 <ferror@plt+0x2fbb4>
  43297c:	mov	x0, x26
  432980:	bl	428690 <ferror@plt+0x258c0>
  432984:	add	w1, w27, #0x1
  432988:	mov	x0, x26
  43298c:	ubfiz	x1, x1, #3, #17
  432990:	bl	4286b0 <ferror@plt+0x258e0>
  432994:	str	x0, [sp, #160]
  432998:	ldr	x0, [x0, #16]
  43299c:	stp	x0, x28, [sp, #168]
  4329a0:	ldr	x0, [x26, #1312]
  4329a4:	stp	w27, wzr, [sp, #196]
  4329a8:	mov	w27, #0x1                   	// #1
  4329ac:	sub	x24, x24, x0
  4329b0:	str	x24, [sp, #184]
  4329b4:	ldr	x0, [x26, #40]
  4329b8:	ldr	w0, [x0, #60]
  4329bc:	str	w0, [sp, #192]
  4329c0:	b	4326a8 <ferror@plt+0x2f8d8>
  4329c4:	mov	x1, x28
  4329c8:	mov	x0, x26
  4329cc:	bl	432464 <ferror@plt+0x2f694>
  4329d0:	tst	w0, #0xff
  4329d4:	b.ne	432670 <ferror@plt+0x2f8a0>  // b.any
  4329d8:	str	x24, [x26, #1328]
  4329dc:	mov	x1, x28
  4329e0:	mov	x0, x26
  4329e4:	mov	w27, #0x0                   	// #0
  4329e8:	bl	432184 <ferror@plt+0x2f3b4>
  4329ec:	b	4325e8 <ferror@plt+0x2f818>
  4329f0:	cbnz	w20, 432670 <ferror@plt+0x2f8a0>
  4329f4:	add	w23, w23, #0x1
  4329f8:	cmp	w27, #0x1
  4329fc:	b.ne	432a34 <ferror@plt+0x2fc64>  // b.any
  432a00:	ldr	x1, [sp, #176]
  432a04:	mov	x0, x26
  432a08:	bl	432464 <ferror@plt+0x2f694>
  432a0c:	tst	w0, #0xff
  432a10:	b.ne	433014 <ferror@plt+0x30244>  // b.any
  432a14:	ldr	x1, [sp, #168]
  432a18:	mov	w23, w27
  432a1c:	ldr	x0, [sp, #184]
  432a20:	mov	w27, #0x2                   	// #2
  432a24:	ldr	x21, [x26, #1312]
  432a28:	str	x0, [x1]
  432a2c:	add	x21, x21, x0
  432a30:	b	432670 <ferror@plt+0x2f8a0>
  432a34:	cmp	w27, #0x6
  432a38:	b.eq	43301c <ferror@plt+0x3024c>  // b.none
  432a3c:	cmp	w27, #0x3
  432a40:	b.eq	433024 <ferror@plt+0x30254>  // b.none
  432a44:	cmp	w27, #0x8
  432a48:	mov	w0, #0x9                   	// #9
  432a4c:	csel	w27, w27, w0, ne  // ne = any
  432a50:	b	432670 <ferror@plt+0x2f8a0>
  432a54:	cmp	w20, #0x0
  432a58:	ccmp	w27, #0x2, #0x0, eq  // eq = none
  432a5c:	b.ne	432670 <ferror@plt+0x2f8a0>  // b.any
  432a60:	cmp	w23, #0x1
  432a64:	b.ne	432a78 <ferror@plt+0x2fca8>  // b.any
  432a68:	ldr	x1, [x26, #1312]
  432a6c:	add	x0, sp, #0xa0
  432a70:	sub	x1, x21, x1
  432a74:	bl	431f54 <ferror@plt+0x2f184>
  432a78:	mov	w27, #0x2                   	// #2
  432a7c:	mov	w20, #0x0                   	// #0
  432a80:	b	432670 <ferror@plt+0x2f8a0>
  432a84:	cbnz	w20, 432670 <ferror@plt+0x2f8a0>
  432a88:	subs	w23, w23, #0x1
  432a8c:	ccmp	w27, #0x2, #0x0, eq  // eq = none
  432a90:	b.ne	432e88 <ferror@plt+0x300b8>  // b.any
  432a94:	ldr	x2, [sp, #176]
  432a98:	ldr	x1, [x26, #1312]
  432a9c:	ldrb	w0, [x2, #18]
  432aa0:	sub	x1, x21, x1
  432aa4:	and	w0, w0, #0x3
  432aa8:	cmp	w0, #0x3
  432aac:	b.ne	432c78 <ferror@plt+0x2fea8>  // b.any
  432ab0:	add	x0, sp, #0xa0
  432ab4:	bl	431f54 <ferror@plt+0x2f184>
  432ab8:	ldp	w0, w3, [sp, #196]
  432abc:	stp	xzr, xzr, [sp, #224]
  432ac0:	add	x1, sp, #0xd0
  432ac4:	ldr	x2, [sp, #176]
  432ac8:	stp	xzr, xzr, [sp, #208]
  432acc:	strh	w0, [sp, #224]
  432ad0:	mov	x0, x26
  432ad4:	stp	xzr, xzr, [sp, #240]
  432ad8:	bl	42de0c <ferror@plt+0x2b03c>
  432adc:	tst	w0, #0xff
  432ae0:	b.eq	43302c <ferror@plt+0x3025c>  // b.none
  432ae4:	ldr	x0, [sp, #168]
  432ae8:	mov	w24, #0xa                   	// #10
  432aec:	ldr	x1, [sp, #184]
  432af0:	ldp	x2, x21, [x0]
  432af4:	ldr	x0, [x26, #1312]
  432af8:	add	x0, x0, x1
  432afc:	str	x0, [x26, #1328]
  432b00:	str	x19, [x22, #16]
  432b04:	sub	x21, x21, x2
  432b08:	add	x1, x21, #0x2
  432b0c:	mov	x0, x26
  432b10:	bl	4288e0 <ferror@plt+0x25b10>
  432b14:	mov	x23, x0
  432b18:	mov	w1, #0x28                  	// #40
  432b1c:	strb	w1, [x0], #1
  432b20:	mov	x2, x21
  432b24:	add	x21, x21, #0x1
  432b28:	ldr	x1, [sp, #168]
  432b2c:	ldr	x3, [x26, #1312]
  432b30:	ldr	x1, [x1]
  432b34:	add	x1, x3, x1
  432b38:	bl	4026a0 <memcpy@plt>
  432b3c:	strb	w24, [x23, x21]
  432b40:	add	x0, x23, x21
  432b44:	mov	w2, #0x1                   	// #1
  432b48:	ldp	x1, x27, [x26]
  432b4c:	ldr	x21, [x22, #24]
  432b50:	ldrb	w28, [x1, #104]
  432b54:	strb	wzr, [x1, #104]
  432b58:	ldp	x8, x5, [x1]
  432b5c:	stp	x23, x23, [x1]
  432b60:	ldr	x7, [x1, #32]
  432b64:	str	x0, [x1, #32]
  432b68:	stp	x7, x8, [sp, #144]
  432b6c:	ldrb	w0, [x26, #16]
  432b70:	strb	w2, [x26, #16]
  432b74:	cmp	w0, #0x0
  432b78:	mov	x0, x26
  432b7c:	ldr	x9, [x22, #8]
  432b80:	str	x1, [x26, #8]
  432b84:	str	xzr, [x22, #8]
  432b88:	cset	w23, ne  // ne = any
  432b8c:	mov	x1, #0x0                   	// #0
  432b90:	stp	x9, x5, [sp, #128]
  432b94:	bl	432554 <ferror@plt+0x2f784>
  432b98:	strb	w23, [x26, #16]
  432b9c:	mov	x0, x26
  432ba0:	mov	x1, #0x1                   	// #1
  432ba4:	bl	432118 <ferror@plt+0x2f348>
  432ba8:	ldr	x0, [x26, #1328]
  432bac:	strb	w24, [x0]
  432bb0:	ldr	x1, [x26]
  432bb4:	ldr	x2, [sp, #184]
  432bb8:	ldr	x0, [x26, #1312]
  432bbc:	add	x0, x0, x2
  432bc0:	ldr	x2, [x26, #1328]
  432bc4:	stp	x0, x0, [x1]
  432bc8:	str	x2, [x1, #32]
  432bcc:	ldr	x1, [sp, #176]
  432bd0:	stp	x0, x2, [x22, #16]
  432bd4:	mov	w2, #0x0                   	// #0
  432bd8:	ldrb	w0, [x26, #24]
  432bdc:	add	w0, w0, #0x1
  432be0:	strb	w0, [x26, #24]
  432be4:	mov	x0, x26
  432be8:	bl	42da4c <ferror@plt+0x2ac7c>
  432bec:	mov	x23, x0
  432bf0:	ldrb	w1, [x26, #24]
  432bf4:	ldp	x9, x5, [sp, #128]
  432bf8:	sub	w1, w1, #0x1
  432bfc:	strb	w1, [x26, #24]
  432c00:	ldr	x1, [x26]
  432c04:	ldp	x7, x8, [sp, #144]
  432c08:	ldr	x2, [sp, #184]
  432c0c:	str	x9, [x22, #8]
  432c10:	stp	x8, x5, [x1]
  432c14:	str	x7, [x1, #32]
  432c18:	strb	w28, [x1, #104]
  432c1c:	ldr	x1, [x26, #1312]
  432c20:	str	x27, [x26, #8]
  432c24:	add	x1, x1, x2
  432c28:	str	x1, [x26, #1328]
  432c2c:	stp	x19, x21, [x22, #16]
  432c30:	bl	402700 <strlen@plt>
  432c34:	mov	x19, x0
  432c38:	add	x1, x0, #0x1
  432c3c:	mov	x0, x26
  432c40:	bl	4288e0 <ferror@plt+0x25b10>
  432c44:	mov	x21, x0
  432c48:	mov	x2, x19
  432c4c:	mov	x1, x23
  432c50:	bl	4026a0 <memcpy@plt>
  432c54:	strb	w24, [x21, x19]
  432c58:	mov	x3, x19
  432c5c:	mov	x2, x21
  432c60:	mov	x0, x26
  432c64:	ldr	x1, [sp, #176]
  432c68:	bl	42e10c <ferror@plt+0x2b33c>
  432c6c:	mov	w27, #0x0                   	// #0
  432c70:	mov	w23, #0x0                   	// #0
  432c74:	b	4325e8 <ferror@plt+0x2f818>
  432c78:	ldr	x4, [x2, #24]
  432c7c:	ldrb	w0, [x4, #19]
  432c80:	orr	w0, w0, #0x20
  432c84:	strb	w0, [x4, #19]
  432c88:	add	x0, sp, #0xa0
  432c8c:	bl	431f54 <ferror@plt+0x2f184>
  432c90:	ldr	w0, [sp, #200]
  432c94:	cmp	w0, #0x1
  432c98:	b.ne	432cc0 <ferror@plt+0x2fef0>  // b.any
  432c9c:	ldrh	w0, [x4, #16]
  432ca0:	cbnz	w0, 432cc0 <ferror@plt+0x2fef0>
  432ca4:	ldr	x0, [sp, #184]
  432ca8:	add	x1, x0, #0x1
  432cac:	ldr	x0, [x26, #1312]
  432cb0:	add	x0, x0, x1
  432cb4:	cmp	x21, x0
  432cb8:	b.ne	432cc0 <ferror@plt+0x2fef0>  // b.any
  432cbc:	str	wzr, [sp, #200]
  432cc0:	ldr	w3, [sp, #200]
  432cc4:	mov	x1, x4
  432cc8:	ldr	x2, [sp, #176]
  432ccc:	mov	x0, x26
  432cd0:	bl	42de0c <ferror@plt+0x2b03c>
  432cd4:	tst	w0, #0xff
  432cd8:	b.eq	43302c <ferror@plt+0x3025c>  // b.none
  432cdc:	ldr	x1, [sp, #184]
  432ce0:	ldr	x0, [x26, #1312]
  432ce4:	add	x0, x0, x1
  432ce8:	ldr	x1, [sp, #176]
  432cec:	ldr	x21, [x1, #24]
  432cf0:	str	x0, [x26, #1328]
  432cf4:	ldrh	w0, [x21, #16]
  432cf8:	str	x19, [x22, #16]
  432cfc:	cbnz	w0, 432d0c <ferror@plt+0x2ff3c>
  432d00:	mov	x0, x26
  432d04:	bl	432184 <ferror@plt+0x2f3b4>
  432d08:	b	432c6c <ferror@plt+0x2fe9c>
  432d0c:	ldr	x4, [x21, #24]
  432d10:	mov	x1, #0x0                   	// #0
  432d14:	ldr	x5, [sp, #168]
  432d18:	ldrh	w0, [x4, #4]
  432d1c:	ldr	w2, [x4]
  432d20:	add	x1, x2, x1
  432d24:	cbz	w0, 432d54 <ferror@plt+0x2ff84>
  432d28:	ubfiz	x0, x0, #3, #16
  432d2c:	add	x2, x2, #0xd
  432d30:	and	x2, x2, #0xfffffffffffffff8
  432d34:	add	x4, x4, x2
  432d38:	ldr	x3, [x5, x0]
  432d3c:	add	x0, x5, x0
  432d40:	sub	x3, x3, #0x1
  432d44:	ldur	x0, [x0, #-8]
  432d48:	sub	x0, x3, x0
  432d4c:	add	x1, x1, x0, lsl #1
  432d50:	b	432d18 <ferror@plt+0x2ff48>
  432d54:	add	x1, x1, #0x1
  432d58:	mov	x0, x26
  432d5c:	bl	4286b0 <ferror@plt+0x258e0>
  432d60:	mov	x19, x0
  432d64:	ldr	x1, [x0, #16]
  432d68:	mov	w7, #0x0                   	// #0
  432d6c:	ldr	x0, [x21, #24]
  432d70:	mov	x3, #0x0                   	// #0
  432d74:	mov	w10, #0x5c                  	// #92
  432d78:	mov	x5, x0
  432d7c:	mov	x2, #0x0                   	// #0
  432d80:	ldr	w4, [x5], #6
  432d84:	add	x3, x3, x4
  432d88:	cmp	x4, x2
  432d8c:	b.eq	432dac <ferror@plt+0x2ffdc>  // b.none
  432d90:	ldrb	w8, [x5, x2]
  432d94:	cmp	w8, #0x22
  432d98:	b.ne	432da0 <ferror@plt+0x2ffd0>  // b.any
  432d9c:	eor	w7, w7, #0x1
  432da0:	strb	w8, [x1, x2]
  432da4:	add	x2, x2, #0x1
  432da8:	b	432d88 <ferror@plt+0x2ffb8>
  432dac:	ldrh	w2, [x0, #4]
  432db0:	add	x1, x1, x4
  432db4:	cbz	w2, 432e64 <ferror@plt+0x30094>
  432db8:	ldr	x8, [sp, #168]
  432dbc:	ubfiz	x2, x2, #3, #16
  432dc0:	ldr	x5, [x26, #1312]
  432dc4:	add	x4, x8, x2
  432dc8:	ldr	x2, [x8, x2]
  432dcc:	mov	w8, #0x0                   	// #0
  432dd0:	ldur	x4, [x4, #-8]
  432dd4:	sub	x2, x2, #0x1
  432dd8:	add	x4, x5, x4
  432ddc:	add	x5, x5, x2
  432de0:	mov	x2, x4
  432de4:	cmp	x2, x5
  432de8:	b.eq	432e50 <ferror@plt+0x30080>  // b.none
  432dec:	cbz	w7, 432e28 <ferror@plt+0x30058>
  432df0:	ldrb	w9, [x2]
  432df4:	add	x11, x1, #0x1
  432df8:	add	x12, x3, #0x1
  432dfc:	cmp	w9, #0x22
  432e00:	b.ne	432e38 <ferror@plt+0x30068>  // b.any
  432e04:	cmp	x4, x2
  432e08:	b.cs	432e1c <ferror@plt+0x3004c>  // b.hs, b.nlast
  432e0c:	ldurb	w3, [x2, #-1]
  432e10:	cmp	w3, #0x5c
  432e14:	b.eq	432e1c <ferror@plt+0x3004c>  // b.none
  432e18:	eor	w8, w8, #0x1
  432e1c:	mov	x3, x12
  432e20:	strb	w10, [x1]
  432e24:	mov	x1, x11
  432e28:	ldrb	w9, [x2], #1
  432e2c:	add	x3, x3, #0x1
  432e30:	strb	w9, [x1], #1
  432e34:	b	432de4 <ferror@plt+0x30014>
  432e38:	cbz	w8, 432e28 <ferror@plt+0x30058>
  432e3c:	cmp	w9, #0x5c
  432e40:	b.ne	432e28 <ferror@plt+0x30058>  // b.any
  432e44:	mov	x3, x12
  432e48:	strb	w9, [x1]
  432e4c:	b	432e24 <ferror@plt+0x30054>
  432e50:	ldr	w2, [x0]
  432e54:	add	x2, x2, #0xd
  432e58:	and	x2, x2, #0xfffffffffffffff8
  432e5c:	add	x0, x0, x2
  432e60:	b	432d78 <ferror@plt+0x2ffa8>
  432e64:	mov	w0, #0xa                   	// #10
  432e68:	strb	w0, [x1]
  432e6c:	mov	x0, x26
  432e70:	ldr	x2, [x19, #16]
  432e74:	ldr	x1, [sp, #176]
  432e78:	bl	42e10c <ferror@plt+0x2b33c>
  432e7c:	ldr	x0, [x26, #136]
  432e80:	str	x19, [x0, #32]
  432e84:	b	432c6c <ferror@plt+0x2fe9c>
  432e88:	cmp	w27, #0x9
  432e8c:	b.hi	432670 <ferror@plt+0x2f8a0>  // b.pmore
  432e90:	mov	x0, #0x290                 	// #656
  432e94:	lsr	x0, x0, x27
  432e98:	tst	x0, #0x1
  432e9c:	csel	w27, w27, wzr, eq  // eq = none
  432ea0:	b	432670 <ferror@plt+0x2f8a0>
  432ea4:	ldr	x0, [sp, #104]
  432ea8:	cmp	x0, x28
  432eac:	b.ne	432fe4 <ferror@plt+0x30214>  // b.any
  432eb0:	ldr	x0, [x26, #136]
  432eb4:	ldr	x0, [x0, #8]
  432eb8:	cbnz	x0, 432fe4 <ferror@plt+0x30214>
  432ebc:	ldrb	w0, [x26, #16]
  432ec0:	cbnz	w0, 432fe4 <ferror@plt+0x30214>
  432ec4:	str	x21, [x26, #1328]
  432ec8:	mov	x1, x19
  432ecc:	mov	x0, x26
  432ed0:	mov	w2, #0x1                   	// #1
  432ed4:	bl	4323dc <ferror@plt+0x2f60c>
  432ed8:	mov	x19, x0
  432edc:	ldrb	w0, [x0]
  432ee0:	ldr	x21, [x26, #1328]
  432ee4:	cmp	w0, #0xa
  432ee8:	b.ne	432f9c <ferror@plt+0x301cc>  // b.any
  432eec:	ldr	x0, [x26]
  432ef0:	mov	w1, #0x1                   	// #1
  432ef4:	strb	w1, [x0, #104]
  432ef8:	mov	w1, #0x18                  	// #24
  432efc:	ldr	x0, [x26, #40]
  432f00:	ldr	w2, [x0, #12]
  432f04:	ldr	w4, [x0, #60]
  432f08:	sub	w2, w2, #0x1
  432f0c:	smull	x2, w2, w1
  432f10:	ldr	x1, [x0]
  432f14:	add	x5, x1, x2
  432f18:	ldr	w1, [x1, x2]
  432f1c:	mov	w2, #0x0                   	// #0
  432f20:	sub	w4, w4, w1
  432f24:	ldrb	w1, [x5, #6]
  432f28:	lsr	w4, w4, w1
  432f2c:	ldr	w1, [x5, #16]
  432f30:	add	w1, w1, #0x1
  432f34:	add	w1, w4, w1
  432f38:	bl	42b50c <ferror@plt+0x2873c>
  432f3c:	mov	w19, #0x0                   	// #0
  432f40:	ldr	x1, [sp, #160]
  432f44:	cbz	x1, 432f50 <ferror@plt+0x30180>
  432f48:	mov	x0, x26
  432f4c:	bl	428690 <ferror@plt+0x258c0>
  432f50:	cmp	w27, #0x2
  432f54:	b.ne	432f7c <ferror@plt+0x301ac>  // b.any
  432f58:	ldr	x0, [sp, #176]
  432f5c:	adrp	x4, 469000 <_obstack_memory_used@@Base+0x245fc>
  432f60:	ldr	w2, [sp, #192]
  432f64:	add	x4, x4, #0xe9
  432f68:	mov	w3, #0x0                   	// #0
  432f6c:	mov	w1, #0x3                   	// #3
  432f70:	ldr	x5, [x0]
  432f74:	mov	x0, x26
  432f78:	bl	4217cc <ferror@plt+0x1e9fc>
  432f7c:	mov	w0, w19
  432f80:	ldp	x19, x20, [sp, #16]
  432f84:	ldp	x21, x22, [sp, #32]
  432f88:	ldp	x23, x24, [sp, #48]
  432f8c:	ldp	x25, x26, [sp, #64]
  432f90:	ldp	x27, x28, [sp, #80]
  432f94:	ldp	x29, x30, [sp], #256
  432f98:	ret
  432f9c:	ldr	x1, [sp, #128]
  432fa0:	ldrh	w1, [x1, w0, sxtw #1]
  432fa4:	tbz	w1, #2, 432fcc <ferror@plt+0x301fc>
  432fa8:	ldr	w2, [x26, #1116]
  432fac:	cmp	w2, #0x15
  432fb0:	b.eq	432fcc <ferror@plt+0x301fc>  // b.none
  432fb4:	ldr	x0, [x26]
  432fb8:	mov	w1, #0x0                   	// #0
  432fbc:	str	x19, [x0]
  432fc0:	mov	x0, x26
  432fc4:	bl	41fd38 <ferror@plt+0x1cf68>
  432fc8:	b	432f3c <ferror@plt+0x3016c>
  432fcc:	tbnz	w1, #9, 432ffc <ferror@plt+0x3022c>
  432fd0:	cmp	w0, #0x24
  432fd4:	b.eq	432ff4 <ferror@plt+0x30224>  // b.none
  432fd8:	ldr	w0, [x26, #1116]
  432fdc:	cmp	w0, #0x15
  432fe0:	b.ne	432fb4 <ferror@plt+0x301e4>  // b.any
  432fe4:	ldrb	w0, [x26, #20]
  432fe8:	cbz	w0, 432670 <ferror@plt+0x2f8a0>
  432fec:	mov	w27, #0x5                   	// #5
  432ff0:	b	4326a8 <ferror@plt+0x2f8d8>
  432ff4:	ldrb	w0, [x26, #1146]
  432ff8:	cbz	w0, 432fd8 <ferror@plt+0x30208>
  432ffc:	mov	x1, x19
  433000:	mov	x0, x26
  433004:	bl	432228 <ferror@plt+0x2f458>
  433008:	ldrb	w0, [x0, #16]
  43300c:	tbz	w0, #0, 432fd8 <ferror@plt+0x30208>
  433010:	b	432fb4 <ferror@plt+0x301e4>
  433014:	mov	w27, #0x0                   	// #0
  433018:	b	432670 <ferror@plt+0x2f8a0>
  43301c:	mov	w27, #0x7                   	// #7
  433020:	b	432670 <ferror@plt+0x2f8a0>
  433024:	mov	w27, #0x4                   	// #4
  433028:	b	432670 <ferror@plt+0x2f8a0>
  43302c:	mov	w27, #0x0                   	// #0
  433030:	mov	w23, #0x0                   	// #0
  433034:	b	432670 <ferror@plt+0x2f8a0>
  433038:	mov	w19, #0x1                   	// #1
  43303c:	b	432f40 <ferror@plt+0x30170>
  433040:	stp	x29, x30, [sp, #-32]!
  433044:	mov	x29, sp
  433048:	str	x19, [sp, #16]
  43304c:	mov	x19, x0
  433050:	ldr	x0, [x19]
  433054:	ldrb	w0, [x0, #104]
  433058:	cbnz	w0, 43308c <ferror@plt+0x302bc>
  43305c:	mov	x0, x19
  433060:	mov	w2, #0x0                   	// #0
  433064:	mov	x1, #0x0                   	// #0
  433068:	bl	432554 <ferror@plt+0x2f784>
  43306c:	tst	w0, #0xff
  433070:	b.eq	433050 <ferror@plt+0x30280>  // b.none
  433074:	ldrb	w0, [x19, #18]
  433078:	cbnz	w0, 433050 <ferror@plt+0x30280>
  43307c:	ldr	x0, [x19]
  433080:	cmp	x0, #0x0
  433084:	cset	w0, ne  // ne = any
  433088:	b	43309c <ferror@plt+0x302cc>
  43308c:	mov	x0, x19
  433090:	bl	427d20 <ferror@plt+0x24f50>
  433094:	ands	w0, w0, #0xff
  433098:	b.ne	43305c <ferror@plt+0x3028c>  // b.any
  43309c:	ldr	x19, [sp, #16]
  4330a0:	ldp	x29, x30, [sp], #32
  4330a4:	ret
  4330a8:	mov	x1, x0
  4330ac:	ldrb	w0, [x0, #19]
  4330b0:	tbz	w0, #2, 4330fc <ferror@plt+0x3032c>
  4330b4:	ldrh	w0, [x1, #16]
  4330b8:	cbz	w0, 4330fc <ferror@plt+0x3032c>
  4330bc:	ldr	x3, [x1, #24]
  4330c0:	mov	x0, #0x0                   	// #0
  4330c4:	mov	x6, #0xfffffffffffffff8    	// #-8
  4330c8:	ldrh	w4, [x3, #4]
  4330cc:	ldr	w2, [x3]
  4330d0:	add	x0, x2, x0
  4330d4:	cbz	w4, 433100 <ferror@plt+0x30330>
  4330d8:	ldr	x5, [x1]
  4330dc:	add	x4, x6, w4, uxtw #3
  4330e0:	add	x2, x2, #0xd
  4330e4:	and	x2, x2, #0xfffffffffffffff8
  4330e8:	ldr	x4, [x5, x4]
  4330ec:	add	x3, x3, x2
  4330f0:	ldr	w4, [x4, #8]
  4330f4:	add	x0, x4, x0
  4330f8:	b	4330c8 <ferror@plt+0x302f8>
  4330fc:	ldr	w0, [x1, #12]
  433100:	ret
  433104:	stp	x29, x30, [sp, #-48]!
  433108:	mov	x3, x1
  43310c:	mov	x29, sp
  433110:	stp	x19, x20, [sp, #16]
  433114:	mov	x19, x0
  433118:	ldr	x20, [x0, #24]
  43311c:	stp	x21, x22, [sp, #32]
  433120:	ldrb	w0, [x0, #19]
  433124:	tbz	w0, #2, 433194 <ferror@plt+0x303c4>
  433128:	ldrh	w0, [x19, #16]
  43312c:	cbz	w0, 433194 <ferror@plt+0x303c4>
  433130:	mov	x21, #0xfffffffffffffff8    	// #-8
  433134:	mov	x1, x20
  433138:	mov	x0, x3
  43313c:	ldr	w2, [x1], #6
  433140:	bl	4026a0 <memcpy@plt>
  433144:	mov	x3, x0
  433148:	ldrh	w0, [x20, #4]
  43314c:	ldr	w1, [x20]
  433150:	add	x3, x3, x1
  433154:	cbz	w0, 4331ac <ferror@plt+0x303dc>
  433158:	ldr	x1, [x19]
  43315c:	add	x0, x21, w0, uxtw #3
  433160:	ldr	x22, [x1, x0]
  433164:	mov	x0, x3
  433168:	ldr	w2, [x22, #8]
  43316c:	ldr	x1, [x22]
  433170:	bl	4026a0 <memcpy@plt>
  433174:	mov	x3, x0
  433178:	ldr	w0, [x20]
  43317c:	ldr	w1, [x22, #8]
  433180:	add	x0, x0, #0xd
  433184:	and	x0, x0, #0xfffffffffffffff8
  433188:	add	x3, x3, x1
  43318c:	add	x20, x20, x0
  433190:	b	433134 <ferror@plt+0x30364>
  433194:	ldr	w2, [x19, #12]
  433198:	mov	x1, x20
  43319c:	mov	x0, x3
  4331a0:	bl	4026a0 <memcpy@plt>
  4331a4:	ldr	w1, [x19, #12]
  4331a8:	add	x3, x0, x1
  4331ac:	mov	x0, x3
  4331b0:	ldp	x19, x20, [sp, #16]
  4331b4:	ldp	x21, x22, [sp, #32]
  4331b8:	ldp	x29, x30, [sp], #48
  4331bc:	ret
  4331c0:	stp	x29, x30, [sp, #-64]!
  4331c4:	mov	x29, sp
  4331c8:	ldr	x2, [x0]
  4331cc:	stp	x21, x22, [sp, #32]
  4331d0:	ldr	x21, [x0, #136]
  4331d4:	stp	x19, x20, [sp, #16]
  4331d8:	mov	x19, x0
  4331dc:	stp	x23, x24, [sp, #48]
  4331e0:	ldr	x1, [x0, #1312]
  4331e4:	str	x1, [x0, #1328]
  4331e8:	ldr	x1, [x2]
  4331ec:	ldr	x2, [x2, #32]
  4331f0:	stp	x1, x2, [x21, #16]
  4331f4:	sub	x1, x2, x1
  4331f8:	bl	432118 <ferror@plt+0x2f348>
  4331fc:	ldr	x0, [x21, #16]
  433200:	ldrb	w0, [x0]
  433204:	cmp	w0, #0x28
  433208:	b.ne	4333c0 <ferror@plt+0x305f0>  // b.any
  43320c:	ldr	x0, [x19, #136]
  433210:	adrp	x24, 46c000 <_obstack_memory_used@@Base+0x275fc>
  433214:	add	x24, x24, #0xb08
  433218:	mov	w22, #0x0                   	// #0
  43321c:	ldr	x1, [x0, #16]
  433220:	add	x1, x1, #0x1
  433224:	mov	x0, x19
  433228:	mov	w2, #0x1                   	// #1
  43322c:	bl	4323dc <ferror@plt+0x2f60c>
  433230:	mov	x20, x0
  433234:	ldrb	w0, [x0]
  433238:	ldrb	w1, [x20]
  43323c:	ldrh	w1, [x24, x1, lsl #1]
  433240:	tbnz	w1, #9, 433254 <ferror@plt+0x30484>
  433244:	cmp	w0, #0x24
  433248:	b.ne	4333ac <ferror@plt+0x305dc>  // b.any
  43324c:	ldrb	w0, [x19, #1146]
  433250:	cbz	w0, 4332b4 <ferror@plt+0x304e4>
  433254:	mov	x1, x20
  433258:	mov	x0, x19
  43325c:	bl	432228 <ferror@plt+0x2f458>
  433260:	mov	x3, x0
  433264:	mov	x2, x0
  433268:	mov	w1, w22
  43326c:	mov	x0, x19
  433270:	bl	42e57c <ferror@plt+0x2b7ac>
  433274:	ands	w23, w0, #0xff
  433278:	b.eq	4332b4 <ferror@plt+0x304e4>  // b.none
  43327c:	ldr	x0, [x19, #136]
  433280:	mov	w2, #0x1                   	// #1
  433284:	add	w22, w22, #0x1
  433288:	ldr	x1, [x0, #16]
  43328c:	mov	x0, x19
  433290:	bl	4323dc <ferror@plt+0x2f60c>
  433294:	mov	x20, x0
  433298:	ldrb	w0, [x0]
  43329c:	cmp	w0, #0x2c
  4332a0:	b.ne	4332ac <ferror@plt+0x304dc>  // b.any
  4332a4:	add	x1, x20, #0x1
  4332a8:	b	433224 <ferror@plt+0x30454>
  4332ac:	cmp	w0, #0x29
  4332b0:	b.eq	4332cc <ferror@plt+0x304fc>  // b.none
  4332b4:	mov	w23, #0x0                   	// #0
  4332b8:	mov	x0, x19
  4332bc:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x245fc>
  4332c0:	mov	w1, #0x3                   	// #3
  4332c4:	add	x2, x2, #0x52f
  4332c8:	bl	421610 <ferror@plt+0x1e840>
  4332cc:	ldr	x0, [x19, #136]
  4332d0:	ldrb	w1, [x20]
  4332d4:	cmp	w1, #0x29
  4332d8:	cinc	x20, x20, eq  // eq = none
  4332dc:	str	x20, [x0, #16]
  4332e0:	cbz	w23, 4333d0 <ferror@plt+0x30600>
  4332e4:	ubfiz	x1, x22, #3, #32
  4332e8:	mov	x0, x19
  4332ec:	bl	42ad60 <ferror@plt+0x27f90>
  4332f0:	mov	x23, x0
  4332f4:	mov	w24, #0x1                   	// #1
  4332f8:	mov	x1, #0x30                  	// #48
  4332fc:	mov	x0, x19
  433300:	bl	42ad08 <ferror@plt+0x27f38>
  433304:	mov	x2, x0
  433308:	mov	w1, #0x2                   	// #2
  43330c:	mov	x0, x19
  433310:	bl	42e6a0 <ferror@plt+0x2b8d0>
  433314:	mov	x20, x0
  433318:	strh	w22, [x0, #16]
  43331c:	ldrb	w0, [x0, #19]
  433320:	str	x23, [x20]
  433324:	bfi	w0, w24, #2, #1
  433328:	strb	w0, [x20, #19]
  43332c:	ldrb	w2, [x19, #1124]
  433330:	mov	x0, x19
  433334:	ldr	x23, [x19]
  433338:	ldr	x1, [x21, #16]
  43333c:	bl	4323dc <ferror@plt+0x2f60c>
  433340:	str	x0, [x23]
  433344:	mov	x1, x20
  433348:	mov	w2, #0x0                   	// #0
  43334c:	ldrb	w0, [x19, #24]
  433350:	add	w0, w0, #0x1
  433354:	strb	w0, [x19, #24]
  433358:	mov	x0, x19
  43335c:	bl	432554 <ferror@plt+0x2f784>
  433360:	ldrb	w0, [x19, #24]
  433364:	mov	w1, w22
  433368:	sub	w0, w0, #0x1
  43336c:	strb	w0, [x19, #24]
  433370:	mov	x0, x19
  433374:	bl	42e660 <ferror@plt+0x2b890>
  433378:	cbz	x20, 4333ec <ferror@plt+0x3061c>
  43337c:	ldr	x2, [x19, #1312]
  433380:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  433384:	ldr	x0, [x19, #1328]
  433388:	add	x1, x1, #0xb08
  43338c:	cmp	x0, x2
  433390:	b.ls	4333d8 <ferror@plt+0x30608>  // b.plast
  433394:	ldurb	w3, [x0, #-1]
  433398:	ldrh	w3, [x1, x3, lsl #1]
  43339c:	tst	w3, #0xc00
  4333a0:	b.eq	4333d8 <ferror@plt+0x30608>  // b.none
  4333a4:	sub	x0, x0, #0x1
  4333a8:	b	43338c <ferror@plt+0x305bc>
  4333ac:	cmp	w0, #0x29
  4333b0:	b.ne	4332b4 <ferror@plt+0x304e4>  // b.any
  4333b4:	cbnz	w22, 4332b4 <ferror@plt+0x304e4>
  4333b8:	mov	w23, #0x1                   	// #1
  4333bc:	b	4332cc <ferror@plt+0x304fc>
  4333c0:	mov	w22, #0x0                   	// #0
  4333c4:	mov	x23, #0x0                   	// #0
  4333c8:	mov	w24, #0x0                   	// #0
  4333cc:	b	4332f8 <ferror@plt+0x30528>
  4333d0:	mov	x20, #0x0                   	// #0
  4333d4:	b	43332c <ferror@plt+0x3055c>
  4333d8:	str	x0, [x19, #1328]
  4333dc:	mov	x1, x20
  4333e0:	mov	x0, x19
  4333e4:	mov	w2, #0x0                   	// #0
  4333e8:	bl	432020 <ferror@plt+0x2f250>
  4333ec:	mov	x0, x20
  4333f0:	ldp	x19, x20, [sp, #16]
  4333f4:	ldp	x21, x22, [sp, #32]
  4333f8:	ldp	x23, x24, [sp, #48]
  4333fc:	ldp	x29, x30, [sp], #64
  433400:	ret
  433404:	stp	x29, x30, [sp, #-64]!
  433408:	mov	x29, sp
  43340c:	stp	x21, x22, [sp, #32]
  433410:	mov	x21, x1
  433414:	ldr	w1, [x0, #12]
  433418:	stp	x19, x20, [sp, #16]
  43341c:	mov	x20, x0
  433420:	ldr	w0, [x21, #12]
  433424:	add	w0, w1, w0
  433428:	bl	44526c <_obstack_memory_used@@Base+0x868>
  43342c:	ldrh	w1, [x20, #16]
  433430:	mov	x19, x0
  433434:	ldr	w2, [x20, #12]
  433438:	strb	wzr, [sp, #62]
  43343c:	strb	wzr, [sp, #63]
  433440:	add	x22, x0, x2
  433444:	cbz	w1, 4334f4 <ferror@plt+0x30724>
  433448:	ldr	x20, [x20, #24]
  43344c:	ldr	x21, [x21, #24]
  433450:	ldrh	w1, [x20, #4]
  433454:	ldrh	w0, [x21, #4]
  433458:	cmp	w1, w0
  43345c:	b.eq	433480 <ferror@plt+0x306b0>  // b.none
  433460:	mov	w20, #0x1                   	// #1
  433464:	mov	x0, x19
  433468:	bl	402b30 <free@plt>
  43346c:	mov	w0, w20
  433470:	ldp	x19, x20, [sp, #16]
  433474:	ldp	x21, x22, [sp, #32]
  433478:	ldp	x29, x30, [sp], #64
  43347c:	ret
  433480:	mov	x1, x20
  433484:	add	x3, sp, #0x3e
  433488:	mov	x0, x19
  43348c:	ldr	w2, [x1], #6
  433490:	bl	431f74 <ferror@plt+0x2f1a4>
  433494:	mov	x10, x0
  433498:	mov	x1, x21
  43349c:	add	x3, sp, #0x3f
  4334a0:	mov	x0, x22
  4334a4:	ldr	w2, [x1], #6
  4334a8:	bl	431f74 <ferror@plt+0x2f1a4>
  4334ac:	cmp	x10, x0
  4334b0:	b.ne	433460 <ferror@plt+0x30690>  // b.any
  4334b4:	mov	x2, x10
  4334b8:	mov	x1, x22
  4334bc:	mov	x0, x19
  4334c0:	bl	402a90 <memcmp@plt>
  4334c4:	cbnz	w0, 433460 <ferror@plt+0x30690>
  4334c8:	ldrh	w0, [x20, #4]
  4334cc:	cbz	w0, 43353c <ferror@plt+0x3076c>
  4334d0:	ldr	w0, [x20]
  4334d4:	add	x0, x0, #0xd
  4334d8:	and	x0, x0, #0xfffffffffffffff8
  4334dc:	add	x20, x20, x0
  4334e0:	ldr	w0, [x21]
  4334e4:	add	x0, x0, #0xd
  4334e8:	and	x0, x0, #0xfffffffffffffff8
  4334ec:	add	x21, x21, x0
  4334f0:	b	433450 <ferror@plt+0x30680>
  4334f4:	ldr	x1, [x20, #24]
  4334f8:	add	x3, sp, #0x3e
  4334fc:	bl	431f74 <ferror@plt+0x2f1a4>
  433500:	mov	x10, x0
  433504:	ldr	w2, [x21, #12]
  433508:	add	x3, sp, #0x3f
  43350c:	ldr	x1, [x21, #24]
  433510:	mov	x0, x22
  433514:	bl	431f74 <ferror@plt+0x2f1a4>
  433518:	cmp	x10, x0
  43351c:	b.ne	433460 <ferror@plt+0x30690>  // b.any
  433520:	mov	x2, x10
  433524:	mov	x1, x22
  433528:	mov	x0, x19
  43352c:	bl	402a90 <memcmp@plt>
  433530:	cmp	w0, #0x0
  433534:	cset	w20, ne  // ne = any
  433538:	b	433464 <ferror@plt+0x30694>
  43353c:	mov	w20, #0x0                   	// #0
  433540:	b	433464 <ferror@plt+0x30694>
  433544:	stp	x29, x30, [sp, #-48]!
  433548:	mov	x29, sp
  43354c:	stp	x19, x20, [sp, #16]
  433550:	mov	x19, x0
  433554:	str	x21, [sp, #32]
  433558:	bl	429618 <ferror@plt+0x26848>
  43355c:	ldrb	w0, [x0, #4]
  433560:	cmp	w0, #0x25
  433564:	b.eq	433588 <ferror@plt+0x307b8>  // b.none
  433568:	mov	w1, #0x1                   	// #1
  43356c:	mov	x0, x19
  433570:	bl	42e2d4 <ferror@plt+0x2b504>
  433574:	mov	sp, x29
  433578:	ldp	x19, x20, [sp, #16]
  43357c:	ldr	x21, [sp, #32]
  433580:	ldp	x29, x30, [sp], #48
  433584:	ret
  433588:	mov	x0, x19
  43358c:	bl	429618 <ferror@plt+0x26848>
  433590:	ldrb	w0, [x0, #4]
  433594:	cmp	w0, #0x37
  433598:	b.eq	4335a4 <ferror@plt+0x307d4>  // b.none
  43359c:	mov	w1, #0x2                   	// #2
  4335a0:	b	43356c <ferror@plt+0x3079c>
  4335a4:	mov	x0, x19
  4335a8:	bl	429618 <ferror@plt+0x26848>
  4335ac:	mov	x20, x0
  4335b0:	ldrb	w0, [x0, #4]
  4335b4:	cmp	w0, #0x3e
  4335b8:	b.ne	4335ec <ferror@plt+0x3081c>  // b.any
  4335bc:	ldr	w2, [x20, #8]
  4335c0:	cmp	w2, #0x4
  4335c4:	b.ls	4335ec <ferror@plt+0x3081c>  // b.plast
  4335c8:	ldr	x1, [x20, #16]
  4335cc:	sub	w0, w2, #0x2
  4335d0:	ldrb	w0, [x1, x0]
  4335d4:	cmp	w0, #0x2f
  4335d8:	b.ne	4335ec <ferror@plt+0x3081c>  // b.any
  4335dc:	sub	w0, w2, #0x3
  4335e0:	ldrb	w3, [x1, x0]
  4335e4:	cmp	w3, #0x2f
  4335e8:	b.eq	4335f4 <ferror@plt+0x30824>  // b.none
  4335ec:	mov	w1, #0x3                   	// #3
  4335f0:	b	43356c <ferror@plt+0x3079c>
  4335f4:	ldr	x21, [x19, #920]
  4335f8:	cbz	x21, 433574 <ferror@plt+0x307a4>
  4335fc:	add	x0, x0, #0xf
  433600:	sub	w2, w2, #0x4
  433604:	and	x0, x0, #0x1fffffff0
  433608:	add	x1, x1, #0x1
  43360c:	sub	sp, sp, x0
  433610:	mov	x3, sp
  433614:	mov	x0, x3
  433618:	bl	4026a0 <memcpy@plt>
  43361c:	mov	x3, x0
  433620:	mov	x1, x0
  433624:	ldr	w0, [x20, #8]
  433628:	sub	w0, w0, #0x4
  43362c:	strb	wzr, [x3, x0]
  433630:	mov	x0, x19
  433634:	blr	x21
  433638:	b	433574 <ferror@plt+0x307a4>
  43363c:	str	w1, [x0, #1116]
  433640:	sxtw	x1, w1
  433644:	mov	x2, #0xf                   	// #15
  433648:	adrp	x3, 469000 <_obstack_memory_used@@Base+0x245fc>
  43364c:	add	x3, x3, #0x790
  433650:	mul	x2, x1, x2
  433654:	add	x1, x3, x2
  433658:	ldrb	w2, [x3, x2]
  43365c:	strb	w2, [x0, #1152]
  433660:	ldrb	w2, [x1, #1]
  433664:	strb	w2, [x0, #1120]
  433668:	ldrb	w2, [x1, #2]
  43366c:	strb	w2, [x0, #1127]
  433670:	ldrb	w2, [x1, #3]
  433674:	strb	w2, [x0, #1147]
  433678:	ldrb	w2, [x1, #4]
  43367c:	strb	w2, [x0, #1164]
  433680:	ldrb	w2, [x1, #5]
  433684:	strb	w2, [x0, #1153]
  433688:	ldrb	w2, [x1, #6]
  43368c:	strb	w2, [x0, #1126]
  433690:	ldrb	w2, [x1, #7]
  433694:	strb	w2, [x0, #1128]
  433698:	ldrb	w2, [x1, #8]
  43369c:	strb	w2, [x0, #1130]
  4336a0:	ldrb	w2, [x1, #9]
  4336a4:	strb	w2, [x0, #1161]
  4336a8:	add	x2, x0, #0x400
  4336ac:	ldrh	w3, [x1, #10]
  4336b0:	sturh	w3, [x2, #141]
  4336b4:	ldrb	w2, [x1, #12]
  4336b8:	strb	w2, [x0, #1125]
  4336bc:	ldrb	w2, [x1, #13]
  4336c0:	ldrb	w1, [x1, #14]
  4336c4:	strb	w2, [x0, #1129]
  4336c8:	strb	w1, [x0, #1167]
  4336cc:	ret
  4336d0:	stp	x29, x30, [sp, #-64]!
  4336d4:	mov	x29, sp
  4336d8:	str	x23, [sp, #48]
  4336dc:	mov	w23, w0
  4336e0:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  4336e4:	stp	x21, x22, [sp, #32]
  4336e8:	mov	x21, x1
  4336ec:	ldr	w1, [x0, #2488]
  4336f0:	mov	x22, x2
  4336f4:	stp	x19, x20, [sp, #16]
  4336f8:	cbnz	w1, 433758 <ferror@plt+0x30988>
  4336fc:	mov	w1, #0x1                   	// #1
  433700:	add	x19, x0, #0x9b8
  433704:	str	w1, [x0, #2488]
  433708:	bl	4272e4 <ferror@plt+0x24514>
  43370c:	mov	w0, #0x7c                  	// #124
  433710:	strb	w0, [x19, #37]
  433714:	mov	w0, #0x5b5e                	// #23390
  433718:	sturh	w0, [x19, #43]
  43371c:	mov	w0, #0x5d                  	// #93
  433720:	strb	w0, [x19, #45]
  433724:	mov	w0, #0x5c                  	// #92
  433728:	strb	w0, [x19, #51]
  43372c:	mov	w0, #0x237b                	// #9083
  433730:	strh	w0, [x19, #64]
  433734:	mov	w0, #0x7d                  	// #125
  433738:	strb	w0, [x19, #66]
  43373c:	mov	w0, #0x7e                  	// #126
  433740:	strb	w0, [x19, #49]
  433744:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  433748:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x215fc>
  43374c:	add	x1, x1, #0xdd0
  433750:	add	x0, x0, #0xf68
  433754:	bl	4028e0 <bindtextdomain@plt>
  433758:	mov	x1, #0x588                 	// #1416
  43375c:	mov	x0, #0x1                   	// #1
  433760:	bl	4452a0 <_obstack_memory_used@@Base+0x89c>
  433764:	stp	xzr, xzr, [x0, #80]
  433768:	mov	x19, x0
  43376c:	stp	xzr, xzr, [x0, #96]
  433770:	add	x20, x0, #0x50
  433774:	mov	w1, w23
  433778:	stp	xzr, xzr, [x0, #112]
  43377c:	str	xzr, [x0, #128]
  433780:	bl	43363c <ferror@plt+0x3086c>
  433784:	add	x2, x0, #0x400
  433788:	mov	w1, #0x101                 	// #257
  43378c:	mov	w0, #0x8                   	// #8
  433790:	mov	w4, #0x102                 	// #258
  433794:	mov	w3, #0x100                 	// #256
  433798:	sturh	w1, [x2, #99]
  43379c:	str	w0, [x19, #1112]
  4337a0:	mov	w0, #0xff                  	// #255
  4337a4:	strh	w4, [x19, #1136]
  4337a8:	strh	w0, [x19, #1198]
  4337ac:	mov	w0, #0x1                   	// #1
  4337b0:	strb	w0, [x19, #1132]
  4337b4:	sturh	w3, [x2, #115]
  4337b8:	strh	w1, [x19, #1142]
  4337bc:	strb	wzr, [x19, #1144]
  4337c0:	strb	w0, [x19, #1146]
  4337c4:	strb	w0, [x19, #1148]
  4337c8:	sturh	w4, [x2, #133]
  4337cc:	mov	w2, #0x1                   	// #1
  4337d0:	strh	w1, [x19, #1162]
  4337d4:	mov	x1, #0x40                  	// #64
  4337d8:	str	x1, [x19, #1208]
  4337dc:	mov	x1, #0x8                   	// #8
  4337e0:	strb	wzr, [x19, #1134]
  4337e4:	str	w2, [x19, #1192]
  4337e8:	str	x1, [x19, #1216]
  4337ec:	mov	x1, #0x20                  	// #32
  4337f0:	str	x1, [x19, #1224]
  4337f4:	str	x1, [x19, #1232]
  4337f8:	strh	w3, [x19, #1240]
  4337fc:	strb	w0, [x19, #1242]
  433800:	strb	w2, [x19, #1245]
  433804:	bl	41a750 <ferror@plt+0x17980>
  433808:	str	x0, [x19, #1168]
  43380c:	str	xzr, [x19, #1176]
  433810:	bl	41a750 <ferror@plt+0x17980>
  433814:	str	x0, [x19, #1184]
  433818:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x195fc>
  43381c:	add	x0, x0, #0xaff
  433820:	str	x0, [x19, #224]
  433824:	mov	w1, #0xfa                  	// #250
  433828:	ldrb	w0, [x19, #1123]
  43382c:	str	x22, [x19, #40]
  433830:	add	x22, x19, #0x1c8
  433834:	cmp	w0, #0x0
  433838:	str	xzr, [x19, #672]
  43383c:	cset	w0, eq  // eq = none
  433840:	strb	w0, [x19, #21]
  433844:	mov	w0, #0x53                  	// #83
  433848:	strb	w0, [x19, #668]
  43384c:	mov	w0, #0x16                  	// #22
  433850:	strb	w0, [x19, #692]
  433854:	strh	wzr, [x19, #694]
  433858:	mov	x0, x22
  43385c:	bl	427b38 <ferror@plt+0x24d68>
  433860:	stp	xzr, xzr, [x19, #80]
  433864:	mov	x1, #0x0                   	// #0
  433868:	ldr	x0, [x19, #472]
  43386c:	str	xzr, [x19, #120]
  433870:	str	x20, [x19, #136]
  433874:	str	x0, [x19, #448]
  433878:	mov	x0, x19
  43387c:	str	x22, [x19, #488]
  433880:	bl	4286b0 <ferror@plt+0x258e0>
  433884:	str	x0, [x19, #56]
  433888:	mov	x1, #0x0                   	// #0
  43388c:	mov	x0, x19
  433890:	bl	4286b0 <ferror@plt+0x258e0>
  433894:	str	x0, [x19, #64]
  433898:	mov	x0, #0xfffffffffffffffe    	// #-2
  43389c:	str	x0, [x19, #656]
  4338a0:	str	xzr, [x19, #1400]
  4338a4:	mov	x0, x19
  4338a8:	str	wzr, [x19, #1408]
  4338ac:	bl	4235d8 <ferror@plt+0x20808>
  4338b0:	adrp	x4, 402000 <_ZGTtnam@plt-0x690>
  4338b4:	adrp	x3, 445000 <_obstack_memory_used@@Base+0x5fc>
  4338b8:	add	x4, x4, #0xb30
  4338bc:	add	x3, x3, #0x26c
  4338c0:	mov	x2, #0x0                   	// #0
  4338c4:	mov	x1, #0x0                   	// #0
  4338c8:	add	x0, x19, #0x328
  4338cc:	bl	444814 <_obstack_begin@@Base>
  4338d0:	mov	x0, x19
  4338d4:	bl	4264c0 <ferror@plt+0x236f0>
  4338d8:	mov	x1, x21
  4338dc:	mov	x0, x19
  4338e0:	bl	426c50 <ferror@plt+0x23e80>
  4338e4:	mov	x0, x19
  4338e8:	ldp	x19, x20, [sp, #16]
  4338ec:	ldp	x21, x22, [sp, #32]
  4338f0:	ldr	x23, [sp, #48]
  4338f4:	ldp	x29, x30, [sp], #64
  4338f8:	ret
  4338fc:	str	x1, [x0, #40]
  433900:	ret
  433904:	stp	x29, x30, [sp, #-48]!
  433908:	mov	x29, sp
  43390c:	stp	x19, x20, [sp, #16]
  433910:	mov	x19, x0
  433914:	ldr	x0, [x0, #1096]
  433918:	stp	x21, x22, [sp, #32]
  43391c:	bl	402b30 <free@plt>
  433920:	ldr	x0, [x19]
  433924:	cbz	x0, 433934 <ferror@plt+0x30b64>
  433928:	mov	x0, x19
  43392c:	bl	420978 <ferror@plt+0x1dba8>
  433930:	b	433920 <ferror@plt+0x30b50>
  433934:	ldr	x0, [x19, #1312]
  433938:	bl	402b30 <free@plt>
  43393c:	ldr	x0, [x19, #504]
  433940:	cbz	x0, 433950 <ferror@plt+0x30b80>
  433944:	bl	402b30 <free@plt>
  433948:	str	xzr, [x19, #504]
  43394c:	str	wzr, [x19, #512]
  433950:	ldr	x0, [x19, #712]
  433954:	cbz	x0, 43395c <ferror@plt+0x30b8c>
  433958:	bl	431040 <ferror@plt+0x2e270>
  43395c:	mov	x1, #0x0                   	// #0
  433960:	add	x0, x19, #0x328
  433964:	bl	444990 <_obstack_free@@Base>
  433968:	add	x22, x19, #0x1c8
  43396c:	mov	x0, x19
  433970:	bl	426c00 <ferror@plt+0x23e30>
  433974:	mov	x0, x19
  433978:	bl	4265a4 <ferror@plt+0x237d4>
  43397c:	mov	x0, x19
  433980:	bl	41a280 <ferror@plt+0x174b0>
  433984:	ldr	x0, [x19, #56]
  433988:	mov	x20, x22
  43398c:	bl	4288b0 <ferror@plt+0x25ae0>
  433990:	ldr	x0, [x19, #64]
  433994:	bl	4288b0 <ferror@plt+0x25ae0>
  433998:	ldr	x0, [x19, #72]
  43399c:	bl	4288b0 <ferror@plt+0x25ae0>
  4339a0:	mov	x21, x20
  4339a4:	ldr	x20, [x20]
  4339a8:	ldr	x0, [x21, #16]
  4339ac:	bl	402b30 <free@plt>
  4339b0:	cmp	x22, x21
  4339b4:	b.eq	4339c0 <ferror@plt+0x30bf0>  // b.none
  4339b8:	mov	x0, x21
  4339bc:	bl	402b30 <free@plt>
  4339c0:	cbnz	x20, 4339a0 <ferror@plt+0x30bd0>
  4339c4:	ldr	x0, [x19, #80]
  4339c8:	cbz	x0, 4339dc <ferror@plt+0x30c0c>
  4339cc:	ldr	x20, [x0]
  4339d0:	bl	402b30 <free@plt>
  4339d4:	mov	x0, x20
  4339d8:	b	4339c8 <ferror@plt+0x30bf8>
  4339dc:	ldr	x0, [x19, #1384]
  4339e0:	cbz	x0, 433a28 <ferror@plt+0x30c58>
  4339e4:	mov	x20, #0x0                   	// #0
  4339e8:	ldr	w1, [x19, #1392]
  4339ec:	ldr	x0, [x19, #1384]
  4339f0:	cmp	w1, w20
  4339f4:	b.le	433a24 <ferror@plt+0x30c54>
  4339f8:	lsl	x1, x20, #4
  4339fc:	add	x20, x20, #0x1
  433a00:	ldr	x0, [x0, x1]
  433a04:	bl	402b30 <free@plt>
  433a08:	b	4339e8 <ferror@plt+0x30c18>
  433a0c:	ldr	x20, [x19, #1400]
  433a10:	ldr	x0, [x20]
  433a14:	str	x0, [x19, #1400]
  433a18:	ldr	x0, [x20, #8]
  433a1c:	bl	402b30 <free@plt>
  433a20:	mov	x0, x20
  433a24:	bl	402b30 <free@plt>
  433a28:	ldr	x0, [x19, #1400]
  433a2c:	cbnz	x0, 433a0c <ferror@plt+0x30c3c>
  433a30:	mov	x0, x19
  433a34:	ldp	x19, x20, [sp, #16]
  433a38:	ldp	x21, x22, [sp, #32]
  433a3c:	ldp	x29, x30, [sp], #48
  433a40:	b	402b30 <free@plt>
  433a44:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  433a48:	add	x1, x1, #0x790
  433a4c:	add	x1, x1, #0x150
  433a50:	mov	x2, #0xb                   	// #11
  433a54:	ldrh	w3, [x1, #10]
  433a58:	cmp	w3, w0
  433a5c:	b.ne	433a68 <ferror@plt+0x30c98>  // b.any
  433a60:	ldr	x0, [x1]
  433a64:	ret
  433a68:	add	x1, x1, #0x10
  433a6c:	subs	x2, x2, #0x1
  433a70:	b.ne	433a54 <ferror@plt+0x30c84>  // b.any
  433a74:	mov	x0, #0x0                   	// #0
  433a78:	b	433a64 <ferror@plt+0x30c94>
  433a7c:	stp	x29, x30, [sp, #-48]!
  433a80:	mov	x29, sp
  433a84:	stp	x19, x20, [sp, #16]
  433a88:	mov	x20, x0
  433a8c:	str	x21, [sp, #32]
  433a90:	ldrb	w0, [x0, #1160]
  433a94:	cbnz	w0, 433b28 <ferror@plt+0x30d58>
  433a98:	ldrb	w0, [x20, #1243]
  433a9c:	cbz	w0, 433b30 <ferror@plt+0x30d60>
  433aa0:	ldrb	w0, [x20, #1153]
  433aa4:	cmp	w0, #0x0
  433aa8:	cset	x0, eq  // eq = none
  433aac:	add	x0, x0, #0xb
  433ab0:	adrp	x19, 469000 <_obstack_memory_used@@Base+0x245fc>
  433ab4:	add	x19, x19, #0x790
  433ab8:	add	x19, x19, #0x200
  433abc:	add	x21, x19, x0, lsl #4
  433ac0:	cmp	x21, x19
  433ac4:	b.ls	433b38 <ferror@plt+0x30d68>  // b.plast
  433ac8:	ldrh	w0, [x19, #10]
  433acc:	cmp	w0, #0xa
  433ad0:	b.ne	433ae8 <ferror@plt+0x30d18>  // b.any
  433ad4:	ldr	w0, [x20, #1116]
  433ad8:	cmp	w0, #0x15
  433adc:	b.eq	433b20 <ferror@plt+0x30d50>  // b.none
  433ae0:	ldr	x0, [x20, #1040]
  433ae4:	cbz	x0, 433b20 <ferror@plt+0x30d50>
  433ae8:	ldrh	w2, [x19, #8]
  433aec:	mov	x0, x20
  433af0:	ldr	x1, [x19]
  433af4:	bl	426c40 <ferror@plt+0x23e70>
  433af8:	ldrb	w1, [x0, #18]
  433afc:	orr	w1, w1, #0x3
  433b00:	strb	w1, [x0, #18]
  433b04:	ldrb	w1, [x19, #12]
  433b08:	cbz	w1, 433b18 <ferror@plt+0x30d48>
  433b0c:	ldrh	w1, [x0, #18]
  433b10:	orr	w1, w1, #0x20
  433b14:	strh	w1, [x0, #18]
  433b18:	ldrh	w1, [x19, #10]
  433b1c:	str	w1, [x0, #24]
  433b20:	add	x19, x19, #0x10
  433b24:	b	433ac0 <ferror@plt+0x30cf0>
  433b28:	mov	x0, #0xa                   	// #10
  433b2c:	b	433ab0 <ferror@plt+0x30ce0>
  433b30:	mov	x0, #0xb                   	// #11
  433b34:	b	433ab0 <ferror@plt+0x30ce0>
  433b38:	ldp	x19, x20, [sp, #16]
  433b3c:	ldr	x21, [sp, #32]
  433b40:	ldp	x29, x30, [sp], #48
  433b44:	ret
  433b48:	stp	x29, x30, [sp, #-32]!
  433b4c:	mov	x29, sp
  433b50:	stp	x19, x20, [sp, #16]
  433b54:	mov	x19, x0
  433b58:	mov	w20, w1
  433b5c:	bl	433a7c <ferror@plt+0x30cac>
  433b60:	ldrb	w0, [x19, #1160]
  433b64:	cbnz	w0, 433b88 <ferror@plt+0x30db8>
  433b68:	ldrb	w0, [x19, #1243]
  433b6c:	cbz	w0, 433b78 <ferror@plt+0x30da8>
  433b70:	ldrb	w0, [x19, #1153]
  433b74:	cbz	w0, 433b88 <ferror@plt+0x30db8>
  433b78:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  433b7c:	mov	x0, x19
  433b80:	add	x1, x1, #0x581
  433b84:	bl	4211fc <ferror@plt+0x1e42c>
  433b88:	ldrb	w1, [x19, #1120]
  433b8c:	ldr	w0, [x19, #1116]
  433b90:	cbz	w1, 433c78 <ferror@plt+0x30ea8>
  433b94:	sub	w1, w0, #0x13
  433b98:	cmp	w1, #0x1
  433b9c:	b.hi	433c24 <ferror@plt+0x30e54>  // b.pmore
  433ba0:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  433ba4:	add	x1, x1, #0x58c
  433ba8:	mov	x0, x19
  433bac:	bl	4211fc <ferror@plt+0x1e42c>
  433bb0:	ldrb	w0, [x19, #1128]
  433bb4:	cbz	w0, 433bf0 <ferror@plt+0x30e20>
  433bb8:	ldrb	w0, [x19, #1120]
  433bbc:	cbz	w0, 433bd0 <ferror@plt+0x30e00>
  433bc0:	ldr	w0, [x19, #1116]
  433bc4:	sub	w0, w0, #0xb
  433bc8:	cmp	w0, #0x1
  433bcc:	b.ls	433bf0 <ferror@plt+0x30e20>  // b.plast
  433bd0:	mov	x0, x19
  433bd4:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  433bd8:	add	x1, x1, #0x67d
  433bdc:	bl	4211fc <ferror@plt+0x1e42c>
  433be0:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  433be4:	mov	x0, x19
  433be8:	add	x1, x1, #0x68f
  433bec:	bl	4211fc <ferror@plt+0x1e42c>
  433bf0:	cbz	w20, 433d08 <ferror@plt+0x30f38>
  433bf4:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  433bf8:	add	x1, x1, #0x6a1
  433bfc:	mov	x0, x19
  433c00:	bl	4211fc <ferror@plt+0x1e42c>
  433c04:	ldrb	w0, [x19, #1122]
  433c08:	cbz	w0, 433d14 <ferror@plt+0x30f44>
  433c0c:	mov	x0, x19
  433c10:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  433c14:	ldp	x19, x20, [sp, #16]
  433c18:	add	x1, x1, #0x6c5
  433c1c:	ldp	x29, x30, [sp], #32
  433c20:	b	4211fc <ferror@plt+0x1e42c>
  433c24:	sub	w1, w0, #0x11
  433c28:	cmp	w1, #0x1
  433c2c:	b.hi	433c3c <ferror@plt+0x30e6c>  // b.pmore
  433c30:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  433c34:	add	x1, x1, #0x5a0
  433c38:	b	433ba8 <ferror@plt+0x30dd8>
  433c3c:	sub	w1, w0, #0xf
  433c40:	cmp	w1, #0x1
  433c44:	b.hi	433c54 <ferror@plt+0x30e84>  // b.pmore
  433c48:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  433c4c:	add	x1, x1, #0x5b4
  433c50:	b	433ba8 <ferror@plt+0x30dd8>
  433c54:	sub	w0, w0, #0xd
  433c58:	cmp	w0, #0x1
  433c5c:	b.hi	433c6c <ferror@plt+0x30e9c>  // b.pmore
  433c60:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  433c64:	add	x1, x1, #0x5c8
  433c68:	b	433ba8 <ferror@plt+0x30dd8>
  433c6c:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  433c70:	add	x1, x1, #0x5dc
  433c74:	b	433ba8 <ferror@plt+0x30dd8>
  433c78:	cmp	w0, #0x15
  433c7c:	b.ne	433c8c <ferror@plt+0x30ebc>  // b.any
  433c80:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  433c84:	add	x1, x1, #0x5f0
  433c88:	b	433ba8 <ferror@plt+0x30dd8>
  433c8c:	cmp	w0, #0x6
  433c90:	b.ne	433ca0 <ferror@plt+0x30ed0>  // b.any
  433c94:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  433c98:	add	x1, x1, #0x600
  433c9c:	b	433ba8 <ferror@plt+0x30dd8>
  433ca0:	cmp	w0, #0xa
  433ca4:	b.eq	433cb0 <ferror@plt+0x30ee0>  // b.none
  433ca8:	cmp	w0, #0x4
  433cac:	b.ne	433cbc <ferror@plt+0x30eec>  // b.any
  433cb0:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  433cb4:	add	x1, x1, #0x619
  433cb8:	b	433ba8 <ferror@plt+0x30dd8>
  433cbc:	cmp	w0, #0x9
  433cc0:	b.eq	433ccc <ferror@plt+0x30efc>  // b.none
  433cc4:	cmp	w0, #0x3
  433cc8:	b.ne	433cd8 <ferror@plt+0x30f08>  // b.any
  433ccc:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  433cd0:	add	x1, x1, #0x632
  433cd4:	b	433ba8 <ferror@plt+0x30dd8>
  433cd8:	cmp	w0, #0x8
  433cdc:	b.eq	433ce8 <ferror@plt+0x30f18>  // b.none
  433ce0:	cmp	w0, #0x2
  433ce4:	b.ne	433cf4 <ferror@plt+0x30f24>  // b.any
  433ce8:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  433cec:	add	x1, x1, #0x64b
  433cf0:	b	433ba8 <ferror@plt+0x30dd8>
  433cf4:	ldrb	w0, [x19, #1152]
  433cf8:	cbz	w0, 433bb0 <ferror@plt+0x30de0>
  433cfc:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  433d00:	add	x1, x1, #0x664
  433d04:	b	433ba8 <ferror@plt+0x30dd8>
  433d08:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  433d0c:	add	x1, x1, #0x6b3
  433d10:	b	433bfc <ferror@plt+0x30e2c>
  433d14:	ldp	x19, x20, [sp, #16]
  433d18:	ldp	x29, x30, [sp], #32
  433d1c:	ret
  433d20:	stp	x29, x30, [sp, #-48]!
  433d24:	mov	x29, sp
  433d28:	stp	x19, x20, [sp, #16]
  433d2c:	mov	x19, x0
  433d30:	stp	x21, x22, [sp, #32]
  433d34:	ldrb	w0, [x0, #1120]
  433d38:	cbz	w0, 433d40 <ferror@plt+0x30f70>
  433d3c:	strb	wzr, [x19, #1138]
  433d40:	ldrb	w1, [x19, #1155]
  433d44:	cbz	w1, 433d5c <ferror@plt+0x30f8c>
  433d48:	ldrb	w1, [x19, #1244]
  433d4c:	cbnz	w1, 433d58 <ferror@plt+0x30f88>
  433d50:	mov	w1, #0x1                   	// #1
  433d54:	strb	w1, [x19, #24]
  433d58:	strb	wzr, [x19, #1160]
  433d5c:	ldrb	w1, [x19, #1136]
  433d60:	cmp	w1, #0x2
  433d64:	b.ne	433d78 <ferror@plt+0x30fa8>  // b.any
  433d68:	ldrb	w1, [x19, #1125]
  433d6c:	cmp	w1, #0x0
  433d70:	cset	w1, eq  // eq = none
  433d74:	strb	w1, [x19, #1136]
  433d78:	ldrb	w1, [x19, #1160]
  433d7c:	cbz	w1, 433d88 <ferror@plt+0x30fb8>
  433d80:	strb	wzr, [x19, #1125]
  433d84:	strb	wzr, [x19, #1136]
  433d88:	cbz	w0, 433e04 <ferror@plt+0x31034>
  433d8c:	ldrb	w0, [x19, #1158]
  433d90:	cmp	w0, #0x0
  433d94:	cset	w21, ne  // ne = any
  433d98:	ldrb	w0, [x19, #1159]
  433d9c:	cbz	w0, 433e0c <ferror@plt+0x3103c>
  433da0:	mov	w0, #0x84                  	// #132
  433da4:	orr	w21, w21, w0
  433da8:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x245fc>
  433dac:	add	x20, x20, #0x790
  433db0:	add	x20, x20, #0x150
  433db4:	mov	x22, #0xb                   	// #11
  433db8:	ldrh	w2, [x20, #8]
  433dbc:	mov	x0, x19
  433dc0:	ldr	x1, [x20]
  433dc4:	add	x20, x20, #0x10
  433dc8:	bl	426c40 <ferror@plt+0x23e70>
  433dcc:	ldrh	w1, [x0, #18]
  433dd0:	subs	x22, x22, #0x1
  433dd4:	ubfx	x2, x1, #2, #8
  433dd8:	orr	w2, w21, w2
  433ddc:	bfi	w1, w2, #2, #8
  433de0:	strh	w1, [x0, #18]
  433de4:	ldrb	w1, [x0, #16]
  433de8:	and	w1, w1, #0xfffffffe
  433dec:	strb	w1, [x0, #16]
  433df0:	ldurh	w2, [x20, #-6]
  433df4:	bfi	w1, w2, #1, #7
  433df8:	strb	w1, [x0, #16]
  433dfc:	b.ne	433db8 <ferror@plt+0x30fe8>  // b.any
  433e00:	b	433e10 <ferror@plt+0x31040>
  433e04:	mov	w21, #0x0                   	// #0
  433e08:	b	433d98 <ferror@plt+0x30fc8>
  433e0c:	cbnz	w21, 433da8 <ferror@plt+0x30fd8>
  433e10:	ldp	x19, x20, [sp, #16]
  433e14:	ldp	x21, x22, [sp, #32]
  433e18:	ldp	x29, x30, [sp], #48
  433e1c:	ret
  433e20:	stp	x29, x30, [sp, #-48]!
  433e24:	mov	x29, sp
  433e28:	stp	x19, x20, [sp, #16]
  433e2c:	mov	x19, x0
  433e30:	ldr	w0, [x0, #1200]
  433e34:	str	x21, [sp, #32]
  433e38:	mov	x20, x1
  433e3c:	cbz	w0, 433e5c <ferror@plt+0x3108c>
  433e40:	ldr	x0, [x19, #712]
  433e44:	cbnz	x0, 433e50 <ferror@plt+0x31080>
  433e48:	bl	431034 <ferror@plt+0x2e264>
  433e4c:	str	x0, [x19, #712]
  433e50:	ldr	x0, [x19, #712]
  433e54:	mov	x1, x20
  433e58:	bl	431180 <ferror@plt+0x2e3b0>
  433e5c:	add	x2, x19, #0xd8
  433e60:	mov	x1, x20
  433e64:	mov	w6, #0x0                   	// #0
  433e68:	mov	w5, #0x0                   	// #0
  433e6c:	mov	w4, #0x0                   	// #0
  433e70:	mov	w3, #0x0                   	// #0
  433e74:	mov	x0, x19
  433e78:	bl	425778 <ferror@plt+0x229a8>
  433e7c:	str	x0, [x19, #288]
  433e80:	bl	425768 <ferror@plt+0x22998>
  433e84:	tst	w0, #0xff
  433e88:	b.ne	433f4c <ferror@plt+0x3117c>  // b.any
  433e8c:	ldr	x1, [x19, #288]
  433e90:	mov	x0, x19
  433e94:	mov	w3, #0x0                   	// #0
  433e98:	mov	w2, #0x0                   	// #0
  433e9c:	bl	425f4c <ferror@plt+0x2317c>
  433ea0:	ldrb	w0, [x19, #1155]
  433ea4:	cbz	w0, 433f28 <ferror@plt+0x31158>
  433ea8:	mov	x0, x19
  433eac:	bl	429618 <ferror@plt+0x26848>
  433eb0:	mov	x20, x0
  433eb4:	ldrb	w0, [x0, #4]
  433eb8:	cmp	w0, #0x25
  433ebc:	b.ne	433f3c <ferror@plt+0x3116c>  // b.any
  433ec0:	mov	w0, #0x1                   	// #1
  433ec4:	strb	w0, [x19, #16]
  433ec8:	mov	x0, x19
  433ecc:	bl	429618 <ferror@plt+0x26848>
  433ed0:	mov	x21, x0
  433ed4:	mov	w1, #0x1                   	// #1
  433ed8:	mov	x0, x19
  433edc:	bl	42e2d4 <ferror@plt+0x2b504>
  433ee0:	strb	wzr, [x19, #16]
  433ee4:	ldrb	w0, [x21, #4]
  433ee8:	cmp	w0, #0x37
  433eec:	b.ne	433f3c <ferror@plt+0x3116c>  // b.any
  433ef0:	ldrh	w1, [x20, #6]
  433ef4:	mov	x0, x19
  433ef8:	and	w1, w1, #0x1
  433efc:	bl	41fd38 <ferror@plt+0x1cf68>
  433f00:	cbz	w0, 433f3c <ferror@plt+0x3116c>
  433f04:	mov	x0, x19
  433f08:	bl	433544 <ferror@plt+0x30774>
  433f0c:	ldr	x1, [x19, #40]
  433f10:	mov	w2, #0x18                  	// #24
  433f14:	ldr	w0, [x1, #12]
  433f18:	ldr	x1, [x1]
  433f1c:	sub	w0, w0, #0x1
  433f20:	smaddl	x0, w0, w2, x1
  433f24:	ldr	x20, [x0, #8]
  433f28:	mov	x0, x20
  433f2c:	ldp	x19, x20, [sp, #16]
  433f30:	ldr	x21, [sp, #32]
  433f34:	ldp	x29, x30, [sp], #48
  433f38:	ret
  433f3c:	mov	x0, x19
  433f40:	mov	w1, #0x1                   	// #1
  433f44:	bl	42e2d4 <ferror@plt+0x2b504>
  433f48:	b	433f0c <ferror@plt+0x3113c>
  433f4c:	mov	x20, #0x0                   	// #0
  433f50:	b	433f28 <ferror@plt+0x31158>
  433f54:	stp	x29, x30, [sp, #-32]!
  433f58:	mov	x29, sp
  433f5c:	stp	x19, x20, [sp, #16]
  433f60:	mov	x20, x1
  433f64:	mov	x19, x0
  433f68:	ldrb	w1, [x0, #1151]
  433f6c:	cbz	w1, 433f80 <ferror@plt+0x311b0>
  433f70:	adrp	x1, 42d000 <ferror@plt+0x2a230>
  433f74:	mov	x2, #0x0                   	// #0
  433f78:	add	x1, x1, #0x988
  433f7c:	bl	426dc4 <ferror@plt+0x23ff4>
  433f80:	ldr	x0, [x19]
  433f84:	cbz	x0, 433f94 <ferror@plt+0x311c4>
  433f88:	mov	x0, x19
  433f8c:	bl	420978 <ferror@plt+0x1dba8>
  433f90:	b	433f80 <ferror@plt+0x311b0>
  433f94:	ldr	w0, [x19, #1200]
  433f98:	cbz	w0, 433fc4 <ferror@plt+0x311f4>
  433f9c:	cbz	x20, 433fc4 <ferror@plt+0x311f4>
  433fa0:	ldr	x0, [x19, #712]
  433fa4:	mov	x1, x20
  433fa8:	mov	w2, #0x48                  	// #72
  433fac:	bl	43137c <ferror@plt+0x2e5ac>
  433fb0:	ldrb	w0, [x19, #1205]
  433fb4:	cbz	w0, 433fc4 <ferror@plt+0x311f4>
  433fb8:	ldr	x0, [x19, #712]
  433fbc:	mov	x1, x20
  433fc0:	bl	4314cc <ferror@plt+0x2e6fc>
  433fc4:	ldrb	w0, [x19, #1131]
  433fc8:	cbz	w0, 433fdc <ferror@plt+0x3120c>
  433fcc:	mov	x0, x19
  433fd0:	ldp	x19, x20, [sp, #16]
  433fd4:	ldp	x29, x30, [sp], #32
  433fd8:	b	4266cc <ferror@plt+0x238fc>
  433fdc:	ldp	x19, x20, [sp, #16]
  433fe0:	ldp	x29, x30, [sp], #32
  433fe4:	ret
  433fe8:	stp	x29, x30, [sp, #-112]!
  433fec:	mov	x29, sp
  433ff0:	stp	x19, x20, [sp, #16]
  433ff4:	add	x20, sp, #0x28
  433ff8:	stp	xzr, xzr, [sp, #48]
  433ffc:	str	x0, [sp, #40]
  434000:	mov	x0, x20
  434004:	str	w1, [sp, #48]
  434008:	mov	x1, #0x48                  	// #72
  43400c:	stp	xzr, xzr, [sp, #64]
  434010:	stp	xzr, xzr, [sp, #80]
  434014:	stp	xzr, xzr, [sp, #96]
  434018:	bl	434290 <ferror@plt+0x314c0>
  43401c:	mov	x19, x0
  434020:	cbz	x0, 434030 <ferror@plt+0x31260>
  434024:	mov	x1, x20
  434028:	mov	x2, #0x48                  	// #72
  43402c:	bl	4026a0 <memcpy@plt>
  434030:	mov	x0, x19
  434034:	ldp	x19, x20, [sp, #16]
  434038:	ldp	x29, x30, [sp], #112
  43403c:	ret
  434040:	stp	x29, x30, [sp, #-48]!
  434044:	mov	x29, sp
  434048:	str	x19, [sp, #16]
  43404c:	mov	x19, x1
  434050:	add	x1, sp, #0x2c
  434054:	str	wzr, [sp, #44]
  434058:	bl	45c808 <_obstack_memory_used@@Base+0x17e04>
  43405c:	mov	x1, x0
  434060:	ldr	w0, [x19]
  434064:	cmp	w0, #0x0
  434068:	b.le	434084 <ferror@plt+0x312b4>
  43406c:	sub	w0, w0, #0x1
  434070:	str	w0, [x19]
  434074:	mov	w0, #0x0                   	// #0
  434078:	ldr	x19, [sp, #16]
  43407c:	ldp	x29, x30, [sp], #48
  434080:	ret
  434084:	ldr	w0, [sp, #44]
  434088:	ldr	w2, [x19, #44]
  43408c:	cmp	w0, #0x0
  434090:	cset	x0, eq  // eq = none
  434094:	sub	x1, x1, x0
  434098:	ldr	x5, [x19, #16]
  43409c:	ldr	x0, [x19, #32]
  4340a0:	cbnz	w2, 4340cc <ferror@plt+0x312fc>
  4340a4:	mov	x4, #0x0                   	// #0
  4340a8:	mov	w3, #0x0                   	// #0
  4340ac:	mov	x2, #0x0                   	// #0
  4340b0:	blr	x5
  4340b4:	str	w0, [x19, #40]
  4340b8:	ldr	w0, [x19, #40]
  4340bc:	cmp	w0, #0x0
  4340c0:	mov	w0, #0x5                   	// #5
  4340c4:	csel	w0, wzr, w0, eq  // eq = none
  4340c8:	b	434078 <ferror@plt+0x312a8>
  4340cc:	mov	x4, x0
  4340d0:	mov	x2, x5
  4340d4:	ldr	x0, [x19, #8]
  4340d8:	ldr	x3, [x19, #24]
  4340dc:	bl	434728 <ferror@plt+0x31958>
  4340e0:	b	4340b4 <ferror@plt+0x312e4>
  4340e4:	stp	x29, x30, [sp, #-80]!
  4340e8:	add	w1, w1, #0x1
  4340ec:	mov	x29, sp
  4340f0:	str	x19, [sp, #16]
  4340f4:	mov	x19, x0
  4340f8:	str	w1, [sp, #32]
  4340fc:	mov	x1, #0x1000                	// #4096
  434100:	stp	x0, x2, [sp, #40]
  434104:	mov	x2, #0x0                   	// #0
  434108:	stp	x3, x4, [sp, #56]
  43410c:	mov	x3, #0x0                   	// #0
  434110:	str	wzr, [sp, #72]
  434114:	bl	434290 <ferror@plt+0x314c0>
  434118:	cbnz	x0, 434140 <ferror@plt+0x31370>
  43411c:	str	wzr, [sp, #76]
  434120:	add	x1, sp, #0x20
  434124:	adrp	x0, 434000 <ferror@plt+0x31230>
  434128:	add	x0, x0, #0x40
  43412c:	bl	45ce50 <_obstack_memory_used@@Base+0x1844c>
  434130:	ldr	w0, [sp, #72]
  434134:	ldr	x19, [sp, #16]
  434138:	ldp	x29, x30, [sp], #80
  43413c:	ret
  434140:	mov	x1, x0
  434144:	mov	x4, #0x0                   	// #0
  434148:	mov	x0, x19
  43414c:	mov	x3, #0x0                   	// #0
  434150:	mov	x2, #0x1000                	// #4096
  434154:	bl	4341d4 <ferror@plt+0x31404>
  434158:	mov	w0, #0x1                   	// #1
  43415c:	str	w0, [sp, #76]
  434160:	b	434120 <ferror@plt+0x31350>
  434164:	ldr	x4, [x0, #64]
  434168:	add	x5, x0, #0x40
  43416c:	mov	x3, #0x0                   	// #0
  434170:	mov	x6, #0x0                   	// #0
  434174:	cbnz	x4, 4341a8 <ferror@plt+0x313d8>
  434178:	cmp	x6, #0xf
  43417c:	b.ls	434198 <ferror@plt+0x313c8>  // b.plast
  434180:	ldr	x4, [x3]
  434184:	ldr	x5, [x4, #8]
  434188:	cmp	x5, x2
  43418c:	b.cs	4341a4 <ferror@plt+0x313d4>  // b.hs, b.nlast
  434190:	ldr	x4, [x4]
  434194:	str	x4, [x3]
  434198:	ldr	x3, [x0, #64]
  43419c:	stp	x3, x2, [x1]
  4341a0:	str	x1, [x0, #64]
  4341a4:	ret
  4341a8:	cbz	x3, 4341c0 <ferror@plt+0x313f0>
  4341ac:	ldr	x7, [x3]
  4341b0:	ldr	x8, [x4, #8]
  4341b4:	ldr	x7, [x7, #8]
  4341b8:	cmp	x8, x7
  4341bc:	csel	x5, x5, x3, cc  // cc = lo, ul, last
  4341c0:	mov	x3, x5
  4341c4:	add	x6, x6, #0x1
  4341c8:	mov	x5, x4
  4341cc:	ldr	x4, [x4]
  4341d0:	b	434174 <ferror@plt+0x313a4>
  4341d4:	stp	x29, x30, [sp, #-48]!
  4341d8:	mov	x29, sp
  4341dc:	stp	x19, x20, [sp, #16]
  4341e0:	mov	x19, x0
  4341e4:	mov	x20, x2
  4341e8:	str	x21, [sp, #32]
  4341ec:	mov	x0, #0xffff                	// #65535
  4341f0:	mov	x21, x1
  4341f4:	cmp	x2, x0
  4341f8:	b.hi	43424c <ferror@plt+0x3147c>  // b.pmore
  4341fc:	ldr	w0, [x19, #8]
  434200:	cbz	w0, 434284 <ferror@plt+0x314b4>
  434204:	add	x0, x19, #0x3c
  434208:	mov	w2, #0x1                   	// #1
  43420c:	ldxr	w1, [x0]
  434210:	stxr	w3, w2, [x0]
  434214:	cbnz	w3, 43420c <ferror@plt+0x3143c>
  434218:	dmb	ish
  43421c:	cbnz	w1, 434274 <ferror@plt+0x314a4>
  434220:	cmp	x20, #0xf
  434224:	b.ls	434238 <ferror@plt+0x31468>  // b.plast
  434228:	mov	x2, x20
  43422c:	mov	x1, x21
  434230:	mov	x0, x19
  434234:	bl	434164 <ferror@plt+0x31394>
  434238:	ldr	w0, [x19, #8]
  43423c:	cbz	w0, 434274 <ferror@plt+0x314a4>
  434240:	add	x19, x19, #0x3c
  434244:	stlr	wzr, [x19]
  434248:	b	434274 <ferror@plt+0x314a4>
  43424c:	bl	4029b0 <getpagesize@plt>
  434250:	sxtw	x0, w0
  434254:	sub	x0, x0, #0x1
  434258:	orr	x1, x21, x20
  43425c:	tst	x0, x1
  434260:	b.ne	4341fc <ferror@plt+0x3142c>  // b.any
  434264:	mov	x1, x20
  434268:	mov	x0, x21
  43426c:	bl	402ba0 <munmap@plt>
  434270:	cbnz	w0, 4341fc <ferror@plt+0x3142c>
  434274:	ldp	x19, x20, [sp, #16]
  434278:	ldr	x21, [sp, #32]
  43427c:	ldp	x29, x30, [sp], #48
  434280:	ret
  434284:	cmp	x20, #0xf
  434288:	b.hi	434228 <ferror@plt+0x31458>  // b.pmore
  43428c:	b	434274 <ferror@plt+0x314a4>
  434290:	stp	x29, x30, [sp, #-64]!
  434294:	mov	x29, sp
  434298:	stp	x21, x22, [sp, #32]
  43429c:	mov	x21, x0
  4342a0:	ldr	w0, [x0, #8]
  4342a4:	stp	x19, x20, [sp, #16]
  4342a8:	mov	x19, x1
  4342ac:	stp	x23, x24, [sp, #48]
  4342b0:	mov	x23, x2
  4342b4:	mov	x24, x3
  4342b8:	cbnz	w0, 43432c <ferror@plt+0x3155c>
  4342bc:	ldr	x20, [x21, #64]
  4342c0:	add	x0, x21, #0x40
  4342c4:	cbz	x20, 434300 <ferror@plt+0x31530>
  4342c8:	ldp	x1, x2, [x20]
  4342cc:	cmp	x2, x19
  4342d0:	b.cc	4343ac <ferror@plt+0x315dc>  // b.lo, b.ul, b.last
  4342d4:	add	x19, x19, #0x7
  4342d8:	str	x1, [x0]
  4342dc:	and	x19, x19, #0xfffffffffffffff8
  4342e0:	cmp	x2, x19
  4342e4:	b.ls	434300 <ferror@plt+0x31530>  // b.plast
  4342e8:	sub	x2, x2, x19
  4342ec:	cmp	x2, #0xf
  4342f0:	b.ls	434300 <ferror@plt+0x31530>  // b.plast
  4342f4:	add	x1, x20, x19
  4342f8:	mov	x0, x21
  4342fc:	bl	434164 <ferror@plt+0x31394>
  434300:	ldr	w0, [x21, #8]
  434304:	cbz	w0, 434310 <ferror@plt+0x31540>
  434308:	add	x0, x21, #0x3c
  43430c:	stlr	wzr, [x0]
  434310:	cbz	x20, 434348 <ferror@plt+0x31578>
  434314:	mov	x0, x20
  434318:	ldp	x19, x20, [sp, #16]
  43431c:	ldp	x21, x22, [sp, #32]
  434320:	ldp	x23, x24, [sp, #48]
  434324:	ldp	x29, x30, [sp], #64
  434328:	ret
  43432c:	add	x0, x21, #0x3c
  434330:	mov	w2, #0x1                   	// #1
  434334:	ldxr	w1, [x0]
  434338:	stxr	w3, w2, [x0]
  43433c:	cbnz	w3, 434334 <ferror@plt+0x31564>
  434340:	dmb	ish
  434344:	cbz	w1, 4342bc <ferror@plt+0x314ec>
  434348:	bl	4029b0 <getpagesize@plt>
  43434c:	sub	x22, x19, #0x1
  434350:	sxtw	x2, w0
  434354:	add	x0, x22, w0, sxtw
  434358:	neg	x22, x2
  43435c:	mov	x5, #0x0                   	// #0
  434360:	and	x22, x0, x22
  434364:	mov	w4, #0xffffffff            	// #-1
  434368:	mov	x1, x22
  43436c:	mov	w3, #0x22                  	// #34
  434370:	mov	w2, #0x3                   	// #3
  434374:	mov	x0, #0x0                   	// #0
  434378:	bl	402af0 <mmap@plt>
  43437c:	mov	x20, x0
  434380:	cmn	x0, #0x1
  434384:	b.ne	4343b8 <ferror@plt+0x315e8>  // b.any
  434388:	cbz	x23, 4343a4 <ferror@plt+0x315d4>
  43438c:	bl	402cf0 <__errno_location@plt>
  434390:	ldr	w2, [x0]
  434394:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  434398:	mov	x0, x24
  43439c:	add	x1, x1, #0xa50
  4343a0:	blr	x23
  4343a4:	mov	x20, #0x0                   	// #0
  4343a8:	b	434314 <ferror@plt+0x31544>
  4343ac:	mov	x0, x20
  4343b0:	mov	x20, x1
  4343b4:	b	4342c4 <ferror@plt+0x314f4>
  4343b8:	add	x19, x19, #0x7
  4343bc:	and	x19, x19, #0xfffffffffffffff8
  4343c0:	cmp	x22, x19
  4343c4:	b.ls	434314 <ferror@plt+0x31544>  // b.plast
  4343c8:	add	x1, x0, x19
  4343cc:	mov	x4, x24
  4343d0:	mov	x3, x23
  4343d4:	sub	x2, x22, x19
  4343d8:	mov	x0, x21
  4343dc:	bl	4341d4 <ferror@plt+0x31404>
  4343e0:	b	434314 <ferror@plt+0x31544>
  4343e4:	stp	x29, x30, [sp, #-96]!
  4343e8:	mov	x29, sp
  4343ec:	stp	x23, x24, [sp, #48]
  4343f0:	mov	x23, x0
  4343f4:	ldr	x0, [x4, #16]
  4343f8:	stp	x19, x20, [sp, #16]
  4343fc:	mov	x19, x4
  434400:	stp	x21, x22, [sp, #32]
  434404:	cmp	x0, x1
  434408:	mov	x22, x1
  43440c:	stp	x25, x26, [sp, #64]
  434410:	str	x27, [sp, #80]
  434414:	b.cs	434490 <ferror@plt+0x316c0>  // b.hs, b.nlast
  434418:	ldr	x0, [x4, #8]
  43441c:	mov	x24, x2
  434420:	mov	x25, x3
  434424:	add	x21, x1, x0
  434428:	cbnz	x0, 4344c8 <ferror@plt+0x316f8>
  43442c:	lsl	x20, x21, #4
  434430:	mov	x3, x25
  434434:	mov	x2, x24
  434438:	mov	x1, x20
  43443c:	mov	x0, x23
  434440:	bl	434290 <ferror@plt+0x314c0>
  434444:	mov	x21, x0
  434448:	cbz	x0, 4344a8 <ferror@plt+0x316d8>
  43444c:	ldr	x26, [x19]
  434450:	cbz	x26, 434480 <ferror@plt+0x316b0>
  434454:	ldr	x27, [x19, #8]
  434458:	mov	x1, x26
  43445c:	mov	x2, x27
  434460:	bl	4026a0 <memcpy@plt>
  434464:	ldr	x2, [x19, #16]
  434468:	mov	x4, x25
  43446c:	mov	x3, x24
  434470:	mov	x1, x26
  434474:	mov	x0, x23
  434478:	add	x2, x27, x2
  43447c:	bl	4341d4 <ferror@plt+0x31404>
  434480:	ldr	x0, [x19, #8]
  434484:	str	x21, [x19]
  434488:	sub	x20, x20, x0
  43448c:	str	x20, [x19, #16]
  434490:	ldp	x21, x0, [x19]
  434494:	ldr	x1, [x19, #16]
  434498:	add	x21, x21, x0
  43449c:	add	x0, x0, x22
  4344a0:	sub	x22, x1, x22
  4344a4:	stp	x0, x22, [x19, #8]
  4344a8:	mov	x0, x21
  4344ac:	ldp	x19, x20, [sp, #16]
  4344b0:	ldp	x21, x22, [sp, #32]
  4344b4:	ldp	x23, x24, [sp, #48]
  4344b8:	ldp	x25, x26, [sp, #64]
  4344bc:	ldr	x27, [sp, #80]
  4344c0:	ldp	x29, x30, [sp], #96
  4344c4:	ret
  4344c8:	bl	4029b0 <getpagesize@plt>
  4344cc:	lsl	x20, x21, #1
  4344d0:	sxtw	x1, w0
  4344d4:	cmp	x21, w0, sxtw
  4344d8:	b.cs	4344e8 <ferror@plt+0x31718>  // b.hs, b.nlast
  4344dc:	cmp	x1, x20
  4344e0:	csel	x20, x1, x20, ls  // ls = plast
  4344e4:	b	434430 <ferror@plt+0x31660>
  4344e8:	sub	x20, x20, #0x1
  4344ec:	add	x20, x20, x1
  4344f0:	neg	x1, x1
  4344f4:	and	x20, x20, x1
  4344f8:	b	434430 <ferror@plt+0x31660>
  4344fc:	ldp	x0, x2, [x1]
  434500:	add	x2, x0, x2
  434504:	stp	x2, xzr, [x1]
  434508:	ret
  43450c:	stp	x29, x30, [sp, #-32]!
  434510:	mov	x29, sp
  434514:	ldr	x5, [x1, #8]
  434518:	str	x19, [sp, #16]
  43451c:	mov	x19, x1
  434520:	add	x1, x5, #0x7
  434524:	and	x1, x1, #0xfffffffffffffff8
  434528:	ldr	x4, [x19, #16]
  43452c:	ldr	x6, [x19]
  434530:	add	x5, x5, x4
  434534:	mov	x4, x3
  434538:	mov	x3, x2
  43453c:	sub	x2, x5, x1
  434540:	add	x1, x6, x1
  434544:	bl	4341d4 <ferror@plt+0x31404>
  434548:	str	xzr, [x19, #16]
  43454c:	ldr	x0, [x19, #8]
  434550:	cbnz	x0, 434558 <ferror@plt+0x31788>
  434554:	str	xzr, [x19]
  434558:	mov	w0, #0x1                   	// #1
  43455c:	ldr	x19, [sp, #16]
  434560:	ldp	x29, x30, [sp], #32
  434564:	ret
  434568:	stp	x29, x30, [sp, #-160]!
  43456c:	mov	x29, sp
  434570:	stp	x19, x20, [sp, #16]
  434574:	mov	x19, x0
  434578:	ldr	w0, [x0, #8]
  43457c:	stp	x21, x22, [sp, #32]
  434580:	mov	x21, x1
  434584:	mov	x22, x2
  434588:	stp	x23, x24, [sp, #48]
  43458c:	stp	x25, x26, [sp, #64]
  434590:	cbnz	w0, 4345fc <ferror@plt+0x3182c>
  434594:	ldr	w0, [x19, #56]
  434598:	cbnz	w0, 4345e0 <ferror@plt+0x31810>
  43459c:	ldr	x0, [x19, #24]
  4345a0:	str	x0, [sp, #88]
  4345a4:	ldr	x0, [sp, #88]
  4345a8:	cbnz	x0, 4346ec <ferror@plt+0x3191c>
  4345ac:	adrp	x23, 469000 <_obstack_memory_used@@Base+0x245fc>
  4345b0:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x245fc>
  4345b4:	add	x25, sp, #0x54
  4345b8:	add	x23, x23, #0xae4
  4345bc:	add	x24, x24, #0xa68
  4345c0:	mov	w26, #0x0                   	// #0
  4345c4:	sub	w0, w26, #0x1
  4345c8:	cmp	w0, #0x3
  4345cc:	b.hi	43461c <ferror@plt+0x3184c>  // b.pmore
  4345d0:	ldrb	w0, [x23, w0, uxtw]
  4345d4:	adr	x1, 4345e0 <ferror@plt+0x31810>
  4345d8:	add	x0, x1, w0, sxtb #2
  4345dc:	br	x0
  4345e0:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  4345e4:	mov	x0, x22
  4345e8:	add	x1, x1, #0xa77
  4345ec:	mov	w2, #0xffffffff            	// #-1
  4345f0:	blr	x21
  4345f4:	mov	w0, #0x0                   	// #0
  4345f8:	b	434678 <ferror@plt+0x318a8>
  4345fc:	add	x0, x19, #0x38
  434600:	ldar	w0, [x0]
  434604:	cbnz	w0, 4345e0 <ferror@plt+0x31810>
  434608:	ldr	w0, [x19, #8]
  43460c:	cbz	w0, 43459c <ferror@plt+0x317cc>
  434610:	add	x0, x19, #0x18
  434614:	ldar	x0, [x0]
  434618:	b	4345a0 <ferror@plt+0x317d0>
  43461c:	ldr	x20, [x19]
  434620:	cbz	x20, 434648 <ferror@plt+0x31878>
  434624:	mov	x2, x22
  434628:	mov	x3, x25
  43462c:	mov	x1, x21
  434630:	mov	x0, x20
  434634:	bl	43482c <ferror@plt+0x31a5c>
  434638:	mov	w2, w0
  43463c:	tbz	w0, #31, 4346f4 <ferror@plt+0x31924>
  434640:	ldr	w0, [sp, #84]
  434644:	cbz	w0, 434668 <ferror@plt+0x31898>
  434648:	add	w26, w26, #0x1
  43464c:	cmp	w26, #0x5
  434650:	b.ne	4345c4 <ferror@plt+0x317f4>  // b.any
  434654:	ldr	x1, [x19]
  434658:	cbz	x1, 4346c8 <ferror@plt+0x318f8>
  43465c:	mov	w2, #0x2                   	// #2
  434660:	mov	x0, x22
  434664:	blr	x21
  434668:	ldr	w0, [x19, #8]
  43466c:	cbnz	w0, 4346d8 <ferror@plt+0x31908>
  434670:	mov	w1, #0x1                   	// #1
  434674:	str	w1, [x19, #56]
  434678:	ldp	x19, x20, [sp, #16]
  43467c:	ldp	x21, x22, [sp, #32]
  434680:	ldp	x23, x24, [sp, #48]
  434684:	ldp	x25, x26, [sp, #64]
  434688:	ldp	x29, x30, [sp], #160
  43468c:	ret
  434690:	bl	402850 <getpid@plt>
  434694:	add	x20, sp, #0x60
  434698:	sxtw	x3, w0
  43469c:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x245fc>
  4346a0:	mov	x0, x20
  4346a4:	add	x2, x2, #0xa9d
  4346a8:	mov	x1, #0x40                  	// #64
  4346ac:	bl	402800 <snprintf@plt>
  4346b0:	b	434624 <ferror@plt+0x31854>
  4346b4:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x245fc>
  4346b8:	add	x20, x20, #0xa55
  4346bc:	b	434624 <ferror@plt+0x31854>
  4346c0:	mov	x20, x24
  4346c4:	b	434624 <ferror@plt+0x31854>
  4346c8:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  4346cc:	mov	w2, #0x0                   	// #0
  4346d0:	add	x1, x1, #0xab4
  4346d4:	b	434660 <ferror@plt+0x31890>
  4346d8:	mov	w0, #0x1                   	// #1
  4346dc:	add	x19, x19, #0x38
  4346e0:	stlr	w0, [x19]
  4346e4:	b	4345f4 <ferror@plt+0x31824>
  4346e8:	str	x1, [x19, #24]
  4346ec:	mov	w0, #0x1                   	// #1
  4346f0:	b	434678 <ferror@plt+0x318a8>
  4346f4:	add	x5, sp, #0x58
  4346f8:	mov	x4, x22
  4346fc:	mov	x3, x21
  434700:	mov	x1, x20
  434704:	mov	x0, x19
  434708:	bl	437344 <ferror@plt+0x34574>
  43470c:	cbz	w0, 434668 <ferror@plt+0x31898>
  434710:	ldr	w0, [x19, #8]
  434714:	ldr	x1, [sp, #88]
  434718:	cbz	w0, 4346e8 <ferror@plt+0x31918>
  43471c:	add	x19, x19, #0x18
  434720:	stlr	x1, [x19]
  434724:	b	4346ec <ferror@plt+0x3191c>
  434728:	stp	x29, x30, [sp, #-64]!
  43472c:	mov	x29, sp
  434730:	stp	x19, x20, [sp, #16]
  434734:	mov	x19, x0
  434738:	mov	x20, x3
  43473c:	stp	x21, x22, [sp, #32]
  434740:	mov	x22, x1
  434744:	mov	x21, x4
  434748:	mov	x1, x3
  43474c:	str	x23, [sp, #48]
  434750:	mov	x23, x2
  434754:	mov	x2, x4
  434758:	bl	434568 <ferror@plt+0x31798>
  43475c:	cbz	w0, 434798 <ferror@plt+0x319c8>
  434760:	ldr	w0, [x19, #56]
  434764:	cbnz	w0, 434798 <ferror@plt+0x319c8>
  434768:	mov	x4, x21
  43476c:	mov	x3, x20
  434770:	mov	x2, x23
  434774:	mov	x1, x22
  434778:	mov	x0, x19
  43477c:	ldr	x5, [x19, #24]
  434780:	ldp	x19, x20, [sp, #16]
  434784:	mov	x16, x5
  434788:	ldp	x21, x22, [sp, #32]
  43478c:	ldr	x23, [sp, #48]
  434790:	ldp	x29, x30, [sp], #64
  434794:	br	x16
  434798:	mov	w0, #0x0                   	// #0
  43479c:	ldp	x19, x20, [sp, #16]
  4347a0:	ldp	x21, x22, [sp, #32]
  4347a4:	ldr	x23, [sp, #48]
  4347a8:	ldp	x29, x30, [sp], #64
  4347ac:	ret
  4347b0:	stp	x29, x30, [sp, #-64]!
  4347b4:	mov	x29, sp
  4347b8:	stp	x19, x20, [sp, #16]
  4347bc:	mov	x19, x0
  4347c0:	mov	x20, x3
  4347c4:	stp	x21, x22, [sp, #32]
  4347c8:	mov	x22, x1
  4347cc:	mov	x21, x4
  4347d0:	mov	x1, x3
  4347d4:	str	x23, [sp, #48]
  4347d8:	mov	x23, x2
  4347dc:	mov	x2, x4
  4347e0:	bl	434568 <ferror@plt+0x31798>
  4347e4:	cbz	w0, 434810 <ferror@plt+0x31a40>
  4347e8:	ldr	w0, [x19, #56]
  4347ec:	cbnz	w0, 434824 <ferror@plt+0x31a54>
  4347f0:	ldr	x5, [x19, #40]
  4347f4:	mov	x0, x19
  4347f8:	mov	x4, x21
  4347fc:	mov	x3, x20
  434800:	mov	x2, x23
  434804:	mov	x1, x22
  434808:	blr	x5
  43480c:	mov	w0, #0x1                   	// #1
  434810:	ldp	x19, x20, [sp, #16]
  434814:	ldp	x21, x22, [sp, #32]
  434818:	ldr	x23, [sp, #48]
  43481c:	ldp	x29, x30, [sp], #64
  434820:	ret
  434824:	mov	w0, #0x0                   	// #0
  434828:	b	434810 <ferror@plt+0x31a40>
  43482c:	stp	x29, x30, [sp, #-64]!
  434830:	mov	x29, sp
  434834:	stp	x19, x20, [sp, #16]
  434838:	mov	x20, x3
  43483c:	stp	x21, x22, [sp, #32]
  434840:	mov	x21, x0
  434844:	mov	x22, x1
  434848:	str	x23, [sp, #48]
  43484c:	mov	x23, x2
  434850:	cbz	x3, 434858 <ferror@plt+0x31a88>
  434854:	str	wzr, [x3]
  434858:	mov	x0, x21
  43485c:	mov	w1, #0x80000               	// #524288
  434860:	bl	4028a0 <open@plt>
  434864:	mov	w19, w0
  434868:	tbz	w0, #31, 4348b4 <ferror@plt+0x31ae4>
  43486c:	bl	402cf0 <__errno_location@plt>
  434870:	ldr	w2, [x0]
  434874:	cbz	x20, 4348a4 <ferror@plt+0x31ad4>
  434878:	cmp	w2, #0x2
  43487c:	b.ne	4348a4 <ferror@plt+0x31ad4>  // b.any
  434880:	mov	w0, #0x1                   	// #1
  434884:	str	w0, [x20]
  434888:	mov	w19, #0xffffffff            	// #-1
  43488c:	mov	w0, w19
  434890:	ldp	x19, x20, [sp, #16]
  434894:	ldp	x21, x22, [sp, #32]
  434898:	ldr	x23, [sp, #48]
  43489c:	ldp	x29, x30, [sp], #64
  4348a0:	ret
  4348a4:	mov	x1, x21
  4348a8:	mov	x0, x23
  4348ac:	blr	x22
  4348b0:	b	434888 <ferror@plt+0x31ab8>
  4348b4:	mov	w2, #0x1                   	// #1
  4348b8:	mov	w1, #0x2                   	// #2
  4348bc:	bl	402b90 <fcntl@plt>
  4348c0:	b	43488c <ferror@plt+0x31abc>
  4348c4:	stp	x29, x30, [sp, #-32]!
  4348c8:	mov	x29, sp
  4348cc:	stp	x19, x20, [sp, #16]
  4348d0:	mov	x19, x1
  4348d4:	mov	x20, x2
  4348d8:	bl	402a00 <close@plt>
  4348dc:	tbz	w0, #31, 434908 <ferror@plt+0x31b38>
  4348e0:	bl	402cf0 <__errno_location@plt>
  4348e4:	ldr	w2, [x0]
  4348e8:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  4348ec:	mov	x0, x20
  4348f0:	add	x1, x1, #0xae8
  4348f4:	blr	x19
  4348f8:	mov	w0, #0x0                   	// #0
  4348fc:	ldp	x19, x20, [sp, #16]
  434900:	ldp	x29, x30, [sp], #32
  434904:	ret
  434908:	mov	w0, #0x1                   	// #1
  43490c:	b	4348fc <ferror@plt+0x31b2c>
  434910:	stp	x29, x30, [sp, #-16]!
  434914:	mov	x0, x4
  434918:	mov	w2, #0xffffffff            	// #-1
  43491c:	mov	x29, sp
  434920:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  434924:	add	x1, x1, #0xaee
  434928:	blr	x3
  43492c:	mov	w0, #0x0                   	// #0
  434930:	ldp	x29, x30, [sp], #16
  434934:	ret
  434938:	mov	x16, x3
  43493c:	mov	x0, x4
  434940:	mov	w2, #0xffffffff            	// #-1
  434944:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  434948:	add	x1, x1, #0xb0e
  43494c:	br	x16
  434950:	ldr	x2, [x0, #8]
  434954:	ldr	x1, [x1, #8]
  434958:	cmp	x2, x1
  43495c:	cset	w0, hi  // hi = pmore
  434960:	csinv	w0, w0, wzr, cs  // cs = hs, nlast
  434964:	ret
  434968:	ldr	x2, [x0]
  43496c:	ldr	x0, [x1, #8]
  434970:	cmp	x0, x2
  434974:	b.hi	43498c <ferror@plt+0x31bbc>  // b.pmore
  434978:	ldr	x1, [x1, #16]
  43497c:	add	x0, x0, x1
  434980:	cmp	x0, x2
  434984:	cset	w0, ls  // ls = plast
  434988:	ret
  43498c:	mov	w0, #0xffffffff            	// #-1
  434990:	b	434988 <ferror@plt+0x31bb8>
  434994:	stp	x29, x30, [sp, #-192]!
  434998:	mov	x4, #0x0                   	// #0
  43499c:	mov	x29, sp
  4349a0:	add	x6, sp, #0xa0
  4349a4:	add	x8, sp, #0x80
  4349a8:	stp	x19, x20, [sp, #16]
  4349ac:	add	x20, x2, #0x1, lsl #12
  4349b0:	add	x19, sp, #0x60
  4349b4:	stp	x21, x22, [sp, #32]
  4349b8:	stp	x23, x24, [sp, #48]
  4349bc:	str	x25, [sp, #64]
  4349c0:	stp	xzr, xzr, [sp, #96]
  4349c4:	stp	xzr, xzr, [sp, #112]
  4349c8:	ldrb	w7, [x0, x4]
  4349cc:	cmp	w7, #0xf
  4349d0:	b.ls	4349f0 <ferror@plt+0x31c20>  // b.plast
  4349d4:	mov	w0, #0x0                   	// #0
  4349d8:	ldp	x19, x20, [sp, #16]
  4349dc:	ldp	x21, x22, [sp, #32]
  4349e0:	ldp	x23, x24, [sp, #48]
  4349e4:	ldr	x25, [sp, #64]
  4349e8:	ldp	x29, x30, [sp], #192
  4349ec:	ret
  4349f0:	sbfiz	x5, x7, #1, #32
  4349f4:	ldrh	w7, [x19, w7, sxtw #1]
  4349f8:	and	w2, w4, #0xffff
  4349fc:	cbnz	w7, 434b5c <ferror@plt+0x31d8c>
  434a00:	strh	w2, [x8, x5]
  434a04:	strh	w2, [x6, x5]
  434a08:	ldrb	w2, [x0, x4]
  434a0c:	add	x4, x4, #0x1
  434a10:	cmp	x1, x4
  434a14:	lsl	x2, x2, #1
  434a18:	ldrh	w5, [x19, x2]
  434a1c:	add	w5, w5, #0x1
  434a20:	strh	w5, [x19, x2]
  434a24:	b.ne	4349c8 <ferror@plt+0x31bf8>  // b.any
  434a28:	mov	x0, x3
  434a2c:	mov	w1, #0x0                   	// #0
  434a30:	mov	x2, #0x800                 	// #2048
  434a34:	bl	402930 <memset@plt>
  434a38:	add	x12, sp, #0x80
  434a3c:	mov	x3, x0
  434a40:	mov	x0, #0x1                   	// #1
  434a44:	mov	w11, w0
  434a48:	mov	w1, #0x0                   	// #0
  434a4c:	ldrh	w4, [x19, x0, lsl #1]
  434a50:	cbz	w4, 434a8c <ferror@plt+0x31cbc>
  434a54:	lsl	w5, w11, w0
  434a58:	cmp	w5, w4
  434a5c:	b.cc	4349d4 <ferror@plt+0x31c04>  // b.lo, b.ul, b.last
  434a60:	ubfiz	w2, w0, #9, #7
  434a64:	sub	w9, w0, #0x1
  434a68:	sub	w2, w2, #0x200
  434a6c:	ldrh	w6, [x12, x0, lsl #1]
  434a70:	sxtw	x8, w5
  434a74:	and	w2, w2, #0xffff
  434a78:	and	x5, x4, #0xffff
  434a7c:	lsl	w9, w11, w9
  434a80:	mov	x7, #0x0                   	// #0
  434a84:	cmp	x5, x7
  434a88:	b.hi	434b70 <ferror@plt+0x31da0>  // b.pmore
  434a8c:	add	x0, x0, #0x1
  434a90:	cmp	x0, #0x9
  434a94:	b.ne	434a4c <ferror@plt+0x31c7c>  // b.any
  434a98:	add	x10, sp, #0x50
  434a9c:	mov	x6, #0x0                   	// #0
  434aa0:	mov	w9, #0x1                   	// #1
  434aa4:	ldrh	w2, [x19, x0, lsl #1]
  434aa8:	cbz	w2, 434ac8 <ferror@plt+0x31cf8>
  434aac:	sub	w11, w0, #0x1
  434ab0:	mov	w4, #0x0                   	// #0
  434ab4:	strh	w1, [x6, x10]
  434ab8:	mov	w7, w4
  434abc:	cmp	x0, w4, uxtw
  434ac0:	b.hi	434bdc <ferror@plt+0x31e0c>  // b.pmore
  434ac4:	cbnz	w2, 4349d4 <ferror@plt+0x31c04>
  434ac8:	add	x0, x0, #0x1
  434acc:	add	x6, x6, #0x2
  434ad0:	cmp	x0, #0x10
  434ad4:	b.ne	434aa4 <ferror@plt+0x31cd4>  // b.any
  434ad8:	add	x17, sp, #0x80
  434adc:	add	x18, sp, #0x50
  434ae0:	mov	x11, #0x6                   	// #6
  434ae4:	mov	x8, #0x0                   	// #0
  434ae8:	mov	x0, #0xf                   	// #15
  434aec:	mov	w12, #0x1                   	// #1
  434af0:	ldrh	w2, [x19, x0, lsl #1]
  434af4:	cbz	w2, 434b44 <ferror@plt+0x31d74>
  434af8:	sub	w1, w0, #0x8
  434afc:	ubfiz	w15, w0, #9, #7
  434b00:	sub	w13, w15, #0x1, lsl #12
  434b04:	sub	w14, w0, #0x1
  434b08:	ldrh	w9, [x17, x0, lsl #1]
  434b0c:	lsl	w1, w12, w1
  434b10:	ldrh	w7, [x18, x11, lsl #1]
  434b14:	sub	x16, x0, #0x8
  434b18:	and	w13, w13, #0xffff
  434b1c:	and	x2, x2, #0xffff
  434b20:	sxtw	x30, w1
  434b24:	mov	w6, w1
  434b28:	lsl	w14, w12, w14
  434b2c:	mov	x1, #0x0                   	// #0
  434b30:	mov	x21, #0x0                   	// #0
  434b34:	mov	x5, #0x100                 	// #256
  434b38:	mov	x10, #0x0                   	// #0
  434b3c:	cmp	x2, x10
  434b40:	b.hi	434c28 <ferror@plt+0x31e58>  // b.pmore
  434b44:	sub	x0, x0, #0x1
  434b48:	sub	x11, x11, #0x1
  434b4c:	cmp	x0, #0x8
  434b50:	b.ne	434af0 <ferror@plt+0x31d20>  // b.any
  434b54:	mov	w0, #0x1                   	// #1
  434b58:	b	4349d8 <ferror@plt+0x31c08>
  434b5c:	ldrh	w5, [x6, x5]
  434b60:	strh	w2, [x20, x5, lsl #1]
  434b64:	ldrb	w5, [x0, x4]
  434b68:	strh	w2, [x6, x5, lsl #1]
  434b6c:	b	434a08 <ferror@plt+0x31c38>
  434b70:	tst	w6, #0xfe00
  434b74:	b.ne	4349d4 <ferror@plt+0x31c04>  // b.any
  434b78:	orr	w10, w2, w6
  434b7c:	mov	w4, w1
  434b80:	cmp	x4, #0xff
  434b84:	b.ls	434bc0 <ferror@plt+0x31df0>  // b.plast
  434b88:	add	x7, x7, #0x1
  434b8c:	cmp	x7, x5
  434b90:	b.cs	434b9c <ferror@plt+0x31dcc>  // b.hs, b.nlast
  434b94:	ubfiz	x6, x6, #1, #16
  434b98:	ldrh	w6, [x20, x6]
  434b9c:	mov	w4, w9
  434ba0:	tst	w1, w4
  434ba4:	b.ne	434bd4 <ferror@plt+0x31e04>  // b.any
  434ba8:	cbz	w4, 434bb8 <ferror@plt+0x31de8>
  434bac:	sub	w10, w4, #0x1
  434bb0:	and	w1, w10, w1
  434bb4:	add	w4, w4, w1
  434bb8:	mov	w1, w4
  434bbc:	b	434a84 <ferror@plt+0x31cb4>
  434bc0:	ldrh	w13, [x3, x4, lsl #1]
  434bc4:	cbnz	w13, 4349d4 <ferror@plt+0x31c04>
  434bc8:	strh	w10, [x3, x4, lsl #1]
  434bcc:	add	x4, x4, x8
  434bd0:	b	434b80 <ferror@plt+0x31db0>
  434bd4:	lsr	w4, w4, #1
  434bd8:	b	434ba0 <ferror@plt+0x31dd0>
  434bdc:	lsr	w5, w2, w4
  434be0:	tbz	w5, #0, 434c10 <ferror@plt+0x31e40>
  434be4:	sub	w5, w11, w4
  434be8:	sub	x7, x0, x7
  434bec:	mov	w8, #0x0                   	// #0
  434bf0:	lsl	w5, w9, w5
  434bf4:	cmp	x7, w8, uxtw
  434bf8:	b.ls	434c08 <ferror@plt+0x31e38>  // b.plast
  434bfc:	tst	w1, w5
  434c00:	b.ne	434c18 <ferror@plt+0x31e48>  // b.any
  434c04:	add	w1, w1, w5
  434c08:	lsl	w5, w9, w4
  434c0c:	bic	w2, w2, w5
  434c10:	add	w4, w4, #0x1
  434c14:	b	434ab8 <ferror@plt+0x31ce8>
  434c18:	bic	w1, w1, w5
  434c1c:	add	w8, w8, #0x1
  434c20:	lsr	w5, w5, #1
  434c24:	b	434bf4 <ferror@plt+0x31e24>
  434c28:	and	x22, x7, #0xff
  434c2c:	cmp	x5, w7, uxtb
  434c30:	b.eq	434ccc <ferror@plt+0x31efc>  // b.none
  434c34:	ldrh	w1, [x3, x22, lsl #1]
  434c38:	lsl	x4, x22, #1
  434c3c:	cbnz	w1, 434cb4 <ferror@plt+0x31ee4>
  434c40:	tst	x8, #0xfffffffffffffe00
  434c44:	b.ne	4349d4 <ferror@plt+0x31c04>  // b.any
  434c48:	add	w1, w15, w8
  434c4c:	mov	x21, x8
  434c50:	add	x8, x30, x8
  434c54:	strh	w1, [x3, x4]
  434c58:	mov	x1, x16
  434c5c:	add	x5, x3, x21, lsl #1
  434c60:	orr	w24, w13, w9
  434c64:	lsr	w4, w7, #8
  434c68:	add	x5, x5, #0x200
  434c6c:	lsl	w23, w12, w1
  434c70:	cmp	x23, x4
  434c74:	b.hi	434cd4 <ferror@plt+0x31f04>  // b.pmore
  434c78:	add	x10, x10, #0x1
  434c7c:	cmp	x10, x2
  434c80:	b.cs	434c8c <ferror@plt+0x31ebc>  // b.hs, b.nlast
  434c84:	ubfiz	x9, x9, #1, #16
  434c88:	ldrh	w9, [x20, x9]
  434c8c:	mov	w4, w14
  434c90:	tst	w7, w4
  434c94:	b.ne	434ce8 <ferror@plt+0x31f18>  // b.any
  434c98:	cbz	w4, 434ca8 <ferror@plt+0x31ed8>
  434c9c:	sub	w5, w4, #0x1
  434ca0:	and	w7, w5, w7
  434ca4:	add	w4, w4, w7
  434ca8:	mov	x5, x22
  434cac:	mov	w7, w4
  434cb0:	b	434b3c <ferror@plt+0x31d6c>
  434cb4:	tbz	w1, #12, 4349d4 <ferror@plt+0x31c04>
  434cb8:	and	x21, x1, #0x1ff
  434cbc:	ubfx	x1, x1, #9, #3
  434cc0:	cmp	x1, x16
  434cc4:	b.cs	434c5c <ferror@plt+0x31e8c>  // b.hs, b.nlast
  434cc8:	b	4349d4 <ferror@plt+0x31c04>
  434ccc:	mov	x22, x5
  434cd0:	b	434c5c <ferror@plt+0x31e8c>
  434cd4:	ldrh	w25, [x5, x4, lsl #1]
  434cd8:	cbnz	w25, 4349d4 <ferror@plt+0x31c04>
  434cdc:	strh	w24, [x5, x4, lsl #1]
  434ce0:	add	x4, x4, x6
  434ce4:	b	434c70 <ferror@plt+0x31ea0>
  434ce8:	lsr	w4, w4, #1
  434cec:	b	434c90 <ferror@plt+0x31ec0>
  434cf0:	ldr	w4, [x3]
  434cf4:	mov	x6, x1
  434cf8:	cmp	w4, #0xe
  434cfc:	b.hi	434d34 <ferror@plt+0x31f64>  // b.pmore
  434d00:	ldr	x1, [x0]
  434d04:	ldr	x7, [x2]
  434d08:	sub	x6, x6, x1
  434d0c:	cmp	x6, #0x3
  434d10:	b.le	434d3c <ferror@plt+0x31f6c>
  434d14:	ldr	w5, [x1], #4
  434d18:	lsl	x5, x5, x4
  434d1c:	orr	x5, x5, x7
  434d20:	prfm	pldl1strm, [x1]
  434d24:	add	w4, w4, #0x20
  434d28:	str	x1, [x0]
  434d2c:	str	x5, [x2]
  434d30:	str	w4, [x3]
  434d34:	mov	w0, #0x1                   	// #1
  434d38:	ret
  434d3c:	mov	w0, #0x0                   	// #0
  434d40:	b	434d38 <ferror@plt+0x31f68>
  434d44:	stp	x29, x30, [sp, #-80]!
  434d48:	mov	x29, sp
  434d4c:	str	x1, [sp, #72]
  434d50:	ldr	w1, [x0, #8]
  434d54:	stp	x19, x20, [sp, #16]
  434d58:	mov	x20, x2
  434d5c:	stp	x21, x22, [sp, #32]
  434d60:	mov	x21, x4
  434d64:	str	x23, [sp, #48]
  434d68:	cbnz	w1, 434dcc <ferror@plt+0x31ffc>
  434d6c:	ldr	x19, [x0, #48]
  434d70:	adrp	x22, 434000 <ferror@plt+0x31230>
  434d74:	add	x23, sp, #0x48
  434d78:	add	x22, x22, #0x968
  434d7c:	cbnz	x19, 434dac <ferror@plt+0x31fdc>
  434d80:	mov	x4, #0x0                   	// #0
  434d84:	mov	x3, #0x0                   	// #0
  434d88:	mov	x2, #0x0                   	// #0
  434d8c:	ldr	x1, [sp, #72]
  434d90:	mov	x0, x21
  434d94:	blr	x20
  434d98:	ldp	x19, x20, [sp, #16]
  434d9c:	ldp	x21, x22, [sp, #32]
  434da0:	ldr	x23, [sp, #48]
  434da4:	ldp	x29, x30, [sp], #80
  434da8:	ret
  434dac:	ldp	x1, x2, [x19, #8]
  434db0:	mov	x4, x22
  434db4:	mov	x0, x23
  434db8:	mov	x3, #0x18                  	// #24
  434dbc:	bl	402960 <bsearch@plt>
  434dc0:	cbnz	x0, 434dfc <ferror@plt+0x3202c>
  434dc4:	ldr	x19, [x19]
  434dc8:	b	434d7c <ferror@plt+0x31fac>
  434dcc:	adrp	x22, 434000 <ferror@plt+0x31230>
  434dd0:	add	x19, x0, #0x30
  434dd4:	add	x22, x22, #0x968
  434dd8:	add	x23, sp, #0x48
  434ddc:	ldar	x19, [x19]
  434de0:	cbz	x19, 434d80 <ferror@plt+0x31fb0>
  434de4:	ldp	x1, x2, [x19, #8]
  434de8:	mov	x4, x22
  434dec:	mov	x0, x23
  434df0:	mov	x3, #0x18                  	// #24
  434df4:	bl	402960 <bsearch@plt>
  434df8:	cbz	x0, 434ddc <ferror@plt+0x3200c>
  434dfc:	ldp	x2, x3, [x0]
  434e00:	ldr	x4, [x0, #16]
  434e04:	b	434d8c <ferror@plt+0x31fbc>
  434e08:	stp	x29, x30, [sp, #-144]!
  434e0c:	mov	x29, sp
  434e10:	stp	x27, x28, [sp, #80]
  434e14:	add	x28, x2, x4
  434e18:	mov	x27, x5
  434e1c:	stp	x19, x20, [sp, #16]
  434e20:	mov	x20, x6
  434e24:	stp	x21, x22, [sp, #32]
  434e28:	mov	x22, x2
  434e2c:	mov	x21, x7
  434e30:	stp	x23, x24, [sp, #48]
  434e34:	mov	x23, x0
  434e38:	mov	x0, x5
  434e3c:	stp	x25, x26, [sp, #64]
  434e40:	mov	x25, x4
  434e44:	stp	x3, x1, [sp, #112]
  434e48:	bl	402700 <strlen@plt>
  434e4c:	mov	x24, x0
  434e50:	add	x0, x28, x0
  434e54:	mov	x3, x21
  434e58:	add	x26, x0, #0x1
  434e5c:	mov	x2, x20
  434e60:	mov	x1, x26
  434e64:	str	x0, [sp, #104]
  434e68:	mov	x0, x23
  434e6c:	bl	434290 <ferror@plt+0x314c0>
  434e70:	cbz	x0, 434f00 <ferror@plt+0x32130>
  434e74:	ldr	x8, [sp, #120]
  434e78:	mov	x19, x0
  434e7c:	mov	x2, x22
  434e80:	mov	x1, x8
  434e84:	bl	4026a0 <memcpy@plt>
  434e88:	ldr	x1, [sp, #112]
  434e8c:	mov	x2, x25
  434e90:	add	x0, x19, x22
  434e94:	bl	4026a0 <memcpy@plt>
  434e98:	mov	x2, x24
  434e9c:	mov	x1, x27
  434ea0:	add	x0, x19, x28
  434ea4:	bl	4026a0 <memcpy@plt>
  434ea8:	ldr	x0, [sp, #104]
  434eac:	add	x3, sp, #0x8c
  434eb0:	mov	x2, x21
  434eb4:	mov	x1, x20
  434eb8:	strb	wzr, [x19, x0]
  434ebc:	mov	x0, x19
  434ec0:	bl	43482c <ferror@plt+0x31a5c>
  434ec4:	mov	w22, w0
  434ec8:	mov	x4, x21
  434ecc:	mov	x3, x20
  434ed0:	mov	x2, x26
  434ed4:	mov	x1, x19
  434ed8:	mov	x0, x23
  434edc:	bl	4341d4 <ferror@plt+0x31404>
  434ee0:	mov	w0, w22
  434ee4:	ldp	x19, x20, [sp, #16]
  434ee8:	ldp	x21, x22, [sp, #32]
  434eec:	ldp	x23, x24, [sp, #48]
  434ef0:	ldp	x25, x26, [sp, #64]
  434ef4:	ldp	x27, x28, [sp, #80]
  434ef8:	ldp	x29, x30, [sp], #144
  434efc:	ret
  434f00:	mov	w22, #0xffffffff            	// #-1
  434f04:	b	434ee0 <ferror@plt+0x32110>
  434f08:	stp	x29, x30, [sp, #-256]!
  434f0c:	mov	x29, sp
  434f10:	stp	x21, x22, [sp, #32]
  434f14:	mov	x21, x3
  434f18:	mov	x22, x4
  434f1c:	stp	x25, x26, [sp, #64]
  434f20:	mov	x25, x1
  434f24:	mov	x26, x2
  434f28:	stp	x19, x20, [sp, #16]
  434f2c:	mov	x20, x0
  434f30:	add	x0, sp, #0x80
  434f34:	stp	x23, x24, [sp, #48]
  434f38:	mov	x24, #0x0                   	// #0
  434f3c:	mov	x23, #0x0                   	// #0
  434f40:	stp	x27, x28, [sp, #80]
  434f44:	str	x0, [sp, #112]
  434f48:	ldr	x1, [sp, #112]
  434f4c:	mov	x0, x25
  434f50:	bl	45ea98 <_obstack_memory_used@@Base+0x1a094>
  434f54:	tbnz	w0, #31, 434fb4 <ferror@plt+0x321e4>
  434f58:	ldr	w0, [sp, #144]
  434f5c:	and	w0, w0, #0xf000
  434f60:	cmp	w0, #0xa, lsl #12
  434f64:	b.ne	434fb4 <ferror@plt+0x321e4>  // b.any
  434f68:	mov	x27, #0x80                  	// #128
  434f6c:	mov	x3, x22
  434f70:	mov	x2, x21
  434f74:	mov	x1, x27
  434f78:	mov	x0, x20
  434f7c:	bl	434290 <ferror@plt+0x314c0>
  434f80:	mov	x28, x0
  434f84:	cbz	x0, 434fb4 <ferror@plt+0x321e4>
  434f88:	mov	x1, x0
  434f8c:	mov	x2, x27
  434f90:	mov	x0, x25
  434f94:	bl	402780 <readlink@plt>
  434f98:	tbz	x0, #63, 4350a0 <ferror@plt+0x322d0>
  434f9c:	mov	x4, x22
  434fa0:	mov	x3, x21
  434fa4:	mov	x2, x27
  434fa8:	mov	x1, x28
  434fac:	mov	x0, x20
  434fb0:	bl	4341d4 <ferror@plt+0x31404>
  434fb4:	mov	x0, x25
  434fb8:	mov	w1, #0x2f                  	// #47
  434fbc:	bl	402a10 <strrchr@plt>
  434fc0:	adrp	x3, 45e000 <_obstack_memory_used@@Base+0x195fc>
  434fc4:	cbz	x0, 4351b0 <ferror@plt+0x323e0>
  434fc8:	add	x0, x0, #0x1
  434fcc:	sub	x27, x0, x25
  434fd0:	mov	x7, x22
  434fd4:	mov	x6, x21
  434fd8:	mov	x5, x26
  434fdc:	add	x3, x3, #0xaff
  434fe0:	mov	x2, x27
  434fe4:	mov	x1, x25
  434fe8:	mov	x0, x20
  434fec:	mov	x4, #0x0                   	// #0
  434ff0:	bl	434e08 <ferror@plt+0x32038>
  434ff4:	mov	w19, w0
  434ff8:	tbz	w0, #31, 43505c <ferror@plt+0x3228c>
  434ffc:	mov	x7, x22
  435000:	mov	x6, x21
  435004:	mov	x5, x26
  435008:	mov	x2, x27
  43500c:	mov	x1, x25
  435010:	mov	x0, x20
  435014:	mov	x4, #0x7                   	// #7
  435018:	adrp	x3, 469000 <_obstack_memory_used@@Base+0x245fc>
  43501c:	add	x3, x3, #0xb30
  435020:	bl	434e08 <ferror@plt+0x32038>
  435024:	mov	w19, w0
  435028:	tbz	w0, #31, 43505c <ferror@plt+0x3228c>
  43502c:	mov	x7, x22
  435030:	mov	x6, x21
  435034:	mov	x5, x26
  435038:	mov	x4, x27
  43503c:	mov	x3, x25
  435040:	mov	x0, x20
  435044:	mov	x2, #0xf                   	// #15
  435048:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  43504c:	add	x1, x1, #0xb38
  435050:	bl	434e08 <ferror@plt+0x32038>
  435054:	cmp	w0, #0x0
  435058:	csinv	w19, w0, wzr, ge  // ge = tcont
  43505c:	cmp	x23, #0x0
  435060:	ccmp	x24, #0x0, #0x4, ne  // ne = any
  435064:	b.eq	435080 <ferror@plt+0x322b0>  // b.none
  435068:	mov	x4, x22
  43506c:	mov	x3, x21
  435070:	mov	x2, x24
  435074:	mov	x1, x23
  435078:	mov	x0, x20
  43507c:	bl	4341d4 <ferror@plt+0x31404>
  435080:	mov	w0, w19
  435084:	ldp	x19, x20, [sp, #16]
  435088:	ldp	x21, x22, [sp, #32]
  43508c:	ldp	x23, x24, [sp, #48]
  435090:	ldp	x25, x26, [sp, #64]
  435094:	ldp	x27, x28, [sp, #80]
  435098:	ldp	x29, x30, [sp], #256
  43509c:	ret
  4350a0:	sub	x1, x27, #0x1
  4350a4:	cmp	x1, x0
  4350a8:	b.ls	4350e8 <ferror@plt+0x32318>  // b.plast
  4350ac:	strb	wzr, [x28, x0]
  4350b0:	ldrb	w0, [x28]
  4350b4:	cmp	w0, #0x2f
  4350b8:	b.ne	435108 <ferror@plt+0x32338>  // b.any
  4350bc:	cbz	x23, 4350d8 <ferror@plt+0x32308>
  4350c0:	mov	x4, x22
  4350c4:	mov	x3, x21
  4350c8:	mov	x2, x24
  4350cc:	mov	x1, x23
  4350d0:	mov	x0, x20
  4350d4:	bl	4341d4 <ferror@plt+0x31404>
  4350d8:	mov	x24, x27
  4350dc:	mov	x23, x28
  4350e0:	mov	x25, x28
  4350e4:	b	434f48 <ferror@plt+0x32178>
  4350e8:	mov	x2, x27
  4350ec:	mov	x4, x22
  4350f0:	mov	x3, x21
  4350f4:	mov	x1, x28
  4350f8:	mov	x0, x20
  4350fc:	lsl	x27, x27, #1
  435100:	bl	4341d4 <ferror@plt+0x31404>
  435104:	b	434f6c <ferror@plt+0x3219c>
  435108:	mov	x0, x25
  43510c:	mov	w1, #0x2f                  	// #47
  435110:	bl	402a10 <strrchr@plt>
  435114:	cbz	x0, 4350bc <ferror@plt+0x322ec>
  435118:	add	x0, x0, #0x1
  43511c:	sub	x19, x0, x25
  435120:	mov	x0, x28
  435124:	bl	402700 <strlen@plt>
  435128:	add	x1, x19, #0x1
  43512c:	mov	x3, x22
  435130:	add	x0, x1, x0
  435134:	mov	x2, x21
  435138:	mov	x1, x0
  43513c:	str	x0, [sp, #104]
  435140:	mov	x0, x20
  435144:	bl	434290 <ferror@plt+0x314c0>
  435148:	str	x0, [sp, #120]
  43514c:	cbz	x0, 4351bc <ferror@plt+0x323ec>
  435150:	mov	x2, x19
  435154:	mov	x1, x25
  435158:	bl	4026a0 <memcpy@plt>
  43515c:	mov	x0, x28
  435160:	bl	402700 <strlen@plt>
  435164:	mov	x2, x0
  435168:	ldr	x7, [sp, #120]
  43516c:	mov	x1, x28
  435170:	add	x19, x7, x19
  435174:	mov	x0, x19
  435178:	bl	4026a0 <memcpy@plt>
  43517c:	mov	x0, x28
  435180:	bl	402700 <strlen@plt>
  435184:	strb	wzr, [x19, x0]
  435188:	mov	x2, x27
  43518c:	mov	x1, x28
  435190:	mov	x4, x22
  435194:	mov	x3, x21
  435198:	mov	x0, x20
  43519c:	bl	4341d4 <ferror@plt+0x31404>
  4351a0:	ldr	x7, [sp, #120]
  4351a4:	ldr	x27, [sp, #104]
  4351a8:	mov	x28, x7
  4351ac:	b	4350bc <ferror@plt+0x322ec>
  4351b0:	add	x25, x3, #0xaff
  4351b4:	mov	x27, #0x0                   	// #0
  4351b8:	b	434fd0 <ferror@plt+0x32200>
  4351bc:	mov	w19, #0xffffffff            	// #-1
  4351c0:	b	43505c <ferror@plt+0x3228c>
  4351c4:	stp	x29, x30, [sp, #-240]!
  4351c8:	mov	x29, sp
  4351cc:	stp	x21, x22, [sp, #32]
  4351d0:	add	x21, x0, x1
  4351d4:	mov	x22, x2
  4351d8:	stp	x0, x1, [sp, #128]
  4351dc:	str	x0, [sp, #200]
  4351e0:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x245fc>
  4351e4:	add	x0, x0, #0xd3c
  4351e8:	stp	x19, x20, [sp, #16]
  4351ec:	mov	x19, x3
  4351f0:	mov	x20, x3
  4351f4:	stp	x25, x26, [sp, #64]
  4351f8:	mov	x26, x4
  4351fc:	stp	x27, x28, [sp, #80]
  435200:	add	x27, x3, x4
  435204:	str	x0, [sp, #144]
  435208:	add	x0, x0, #0x200
  43520c:	stp	x23, x24, [sp, #48]
  435210:	str	x0, [sp, #152]
  435214:	add	x0, sp, #0xd8
  435218:	str	x0, [sp, #96]
  43521c:	ldr	x0, [sp, #200]
  435220:	sub	x1, x21, x0
  435224:	cmp	x1, #0x4
  435228:	b.gt	435254 <ferror@plt+0x32484>
  43522c:	cmp	x27, x20
  435230:	b.eq	435c58 <ferror@plt+0x32e88>  // b.none
  435234:	mov	w0, #0x0                   	// #0
  435238:	ldp	x19, x20, [sp, #16]
  43523c:	ldp	x21, x22, [sp, #32]
  435240:	ldp	x23, x24, [sp, #48]
  435244:	ldp	x25, x26, [sp, #64]
  435248:	ldp	x27, x28, [sp, #80]
  43524c:	ldp	x29, x30, [sp], #240
  435250:	ret
  435254:	ldrb	w1, [x0]
  435258:	and	w2, w1, #0xf
  43525c:	cmp	w2, #0x8
  435260:	b.ne	435234 <ferror@plt+0x32464>  // b.any
  435264:	cmp	w1, #0x7f
  435268:	b.hi	435234 <ferror@plt+0x32464>  // b.pmore
  43526c:	ldrb	w2, [x0, #1]
  435270:	ldrh	w1, [x0]
  435274:	rev16	w1, w1
  435278:	tbnz	w2, #5, 435234 <ferror@plt+0x32464>
  43527c:	and	x1, x1, #0xffff
  435280:	mov	x3, #0x1f                  	// #31
  435284:	udiv	x2, x1, x3
  435288:	msub	x1, x2, x3, x1
  43528c:	cbnz	x1, 435234 <ferror@plt+0x32464>
  435290:	add	x0, x0, #0x2
  435294:	str	wzr, [sp, #196]
  435298:	stp	x0, xzr, [sp, #200]
  43529c:	ldr	x0, [sp, #200]
  4352a0:	tst	x0, #0x3
  4352a4:	b.ne	4353b4 <ferror@plt+0x325e4>  // b.any
  4352a8:	add	x23, sp, #0xc4
  4352ac:	add	x24, sp, #0xd0
  4352b0:	add	x25, sp, #0xc8
  4352b4:	mov	x3, x23
  4352b8:	mov	x2, x24
  4352bc:	mov	x1, x21
  4352c0:	mov	x0, x25
  4352c4:	bl	434cf0 <ferror@plt+0x31f20>
  4352c8:	cbz	w0, 435234 <ferror@plt+0x32464>
  4352cc:	ldr	x0, [sp, #208]
  4352d0:	str	x0, [sp, #104]
  4352d4:	ldr	w0, [sp, #104]
  4352d8:	ubfx	w1, w0, #1, #2
  4352dc:	ldr	x0, [sp, #104]
  4352e0:	cmp	w1, #0x3
  4352e4:	lsr	x0, x0, #3
  4352e8:	str	x0, [sp, #208]
  4352ec:	ldr	w0, [sp, #196]
  4352f0:	sub	w0, w0, #0x3
  4352f4:	str	w0, [sp, #196]
  4352f8:	b.eq	435234 <ferror@plt+0x32464>  // b.none
  4352fc:	cbnz	w1, 435408 <ferror@plt+0x32638>
  435300:	ldr	x1, [sp, #200]
  435304:	mov	w2, #0x0                   	// #0
  435308:	mov	x3, x1
  43530c:	cmp	w0, #0x8
  435310:	sub	x1, x1, #0x1
  435314:	b.hi	4353d8 <ferror@plt+0x32608>  // b.pmore
  435318:	cbz	w2, 435320 <ferror@plt+0x32550>
  43531c:	str	x3, [sp, #200]
  435320:	ldr	x1, [sp, #200]
  435324:	str	wzr, [sp, #196]
  435328:	str	xzr, [sp, #208]
  43532c:	sub	x0, x21, x1
  435330:	cmp	x0, #0x3
  435334:	b.le	435234 <ferror@plt+0x32464>
  435338:	ldrb	w0, [x1]
  43533c:	add	x1, x1, #0x4
  435340:	ldurb	w2, [x1, #-3]
  435344:	ldurb	w3, [x1, #-2]
  435348:	orr	w2, w0, w2, lsl #8
  43534c:	ldurb	w0, [x1, #-1]
  435350:	str	x1, [sp, #200]
  435354:	orr	w0, w3, w0, lsl #8
  435358:	mvn	w0, w0
  43535c:	cmp	w2, w0, uxth
  435360:	b.ne	435234 <ferror@plt+0x32464>  // b.any
  435364:	sub	x0, x21, x1
  435368:	cmp	w2, w0
  43536c:	b.hi	435234 <ferror@plt+0x32464>  // b.pmore
  435370:	sub	x0, x27, x20
  435374:	cmp	w2, w0
  435378:	b.hi	435234 <ferror@plt+0x32464>  // b.pmore
  43537c:	and	x23, x2, #0xffff
  435380:	mov	x0, x20
  435384:	mov	x2, x23
  435388:	bl	4026a0 <memcpy@plt>
  43538c:	ldr	x2, [sp, #200]
  435390:	add	x20, x20, x23
  435394:	add	x2, x2, x23
  435398:	str	x2, [sp, #200]
  43539c:	ldr	x0, [sp, #200]
  4353a0:	tst	x0, #0x3
  4353a4:	b.ne	4353e4 <ferror@plt+0x32614>  // b.any
  4353a8:	ldr	x0, [sp, #104]
  4353ac:	tbz	w0, #0, 4352a8 <ferror@plt+0x324d8>
  4353b0:	b	43521c <ferror@plt+0x3244c>
  4353b4:	ldrb	w2, [x0], #1
  4353b8:	ldr	w1, [sp, #196]
  4353bc:	lsl	x3, x2, x1
  4353c0:	add	w1, w1, #0x8
  4353c4:	ldr	x2, [sp, #208]
  4353c8:	str	w1, [sp, #196]
  4353cc:	orr	x2, x2, x3
  4353d0:	stp	x0, x2, [sp, #200]
  4353d4:	b	43529c <ferror@plt+0x324cc>
  4353d8:	sub	w0, w0, #0x8
  4353dc:	mov	w2, #0x1                   	// #1
  4353e0:	b	435308 <ferror@plt+0x32538>
  4353e4:	ldrb	w2, [x0], #1
  4353e8:	ldr	w1, [sp, #196]
  4353ec:	lsl	x3, x2, x1
  4353f0:	add	w1, w1, #0x8
  4353f4:	ldr	x2, [sp, #208]
  4353f8:	str	w1, [sp, #196]
  4353fc:	orr	x2, x2, x3
  435400:	stp	x0, x2, [sp, #200]
  435404:	b	43539c <ferror@plt+0x325cc>
  435408:	cmp	w1, #0x1
  43540c:	b.eq	4359b4 <ferror@plt+0x32be4>  // b.none
  435410:	mov	x1, x21
  435414:	mov	x0, x25
  435418:	bl	434cf0 <ferror@plt+0x31f20>
  43541c:	cbz	w0, 435234 <ferror@plt+0x32464>
  435420:	ldr	x0, [sp, #208]
  435424:	and	w28, w0, #0x1f
  435428:	ubfx	w1, w0, #5, #5
  43542c:	ubfx	w8, w0, #10, #4
  435430:	lsr	x0, x0, #14
  435434:	str	x0, [sp, #208]
  435438:	ldr	w0, [sp, #196]
  43543c:	add	w1, w1, #0x1
  435440:	add	w28, w28, #0x101
  435444:	str	w1, [sp, #112]
  435448:	sub	w0, w0, #0xe
  43544c:	str	w0, [sp, #196]
  435450:	cmp	w28, #0x11e
  435454:	mov	w0, w1
  435458:	add	w8, w8, #0x4
  43545c:	ccmp	w0, #0x1e, #0x2, ls  // ls = plast
  435460:	b.hi	435234 <ferror@plt+0x32464>  // b.pmore
  435464:	ldr	x0, [sp, #96]
  435468:	mov	x1, x21
  43546c:	stp	xzr, xzr, [x0]
  435470:	strh	wzr, [x0, #16]
  435474:	strb	wzr, [x0, #18]
  435478:	mov	x0, x25
  43547c:	bl	434cf0 <ferror@plt+0x31f20>
  435480:	cbz	w0, 435234 <ferror@plt+0x32464>
  435484:	ldr	x0, [sp, #208]
  435488:	cmp	w8, #0x4
  43548c:	and	w1, w0, #0x7
  435490:	strb	w1, [sp, #232]
  435494:	ubfx	w1, w0, #3, #3
  435498:	strb	w1, [sp, #233]
  43549c:	ubfx	w1, w0, #6, #3
  4354a0:	strb	w1, [sp, #234]
  4354a4:	ubfx	w1, w0, #9, #3
  4354a8:	strb	w1, [sp, #216]
  4354ac:	ldr	w1, [sp, #196]
  4354b0:	lsr	x2, x0, #12
  4354b4:	str	x2, [sp, #208]
  4354b8:	sub	w3, w1, #0xc
  4354bc:	str	w3, [sp, #196]
  4354c0:	b.eq	4356fc <ferror@plt+0x3292c>  // b.none
  4354c4:	and	w2, w2, #0x7
  4354c8:	lsr	x0, x0, #15
  4354cc:	sub	w1, w1, #0xf
  4354d0:	str	w1, [sp, #196]
  4354d4:	str	x0, [sp, #208]
  4354d8:	cmp	w8, #0x5
  4354dc:	strb	w2, [sp, #224]
  4354e0:	b.eq	4356fc <ferror@plt+0x3292c>  // b.none
  4354e4:	mov	x3, x23
  4354e8:	mov	x2, x24
  4354ec:	mov	x1, x21
  4354f0:	mov	x0, x25
  4354f4:	bl	434cf0 <ferror@plt+0x31f20>
  4354f8:	cbz	w0, 435234 <ferror@plt+0x32464>
  4354fc:	ldr	x0, [sp, #208]
  435500:	cmp	w8, #0x6
  435504:	and	w1, w0, #0x7
  435508:	strb	w1, [sp, #223]
  43550c:	ldr	w1, [sp, #196]
  435510:	lsr	x2, x0, #3
  435514:	str	x2, [sp, #208]
  435518:	sub	w3, w1, #0x3
  43551c:	str	w3, [sp, #196]
  435520:	b.eq	4356fc <ferror@plt+0x3292c>  // b.none
  435524:	and	w2, w2, #0x7
  435528:	sub	w3, w1, #0x6
  43552c:	str	w3, [sp, #196]
  435530:	cmp	w8, #0x7
  435534:	strb	w2, [sp, #225]
  435538:	lsr	x2, x0, #6
  43553c:	str	x2, [sp, #208]
  435540:	b.eq	4356fc <ferror@plt+0x3292c>  // b.none
  435544:	and	w2, w2, #0x7
  435548:	sub	w3, w1, #0x9
  43554c:	str	w3, [sp, #196]
  435550:	cmp	w8, #0x8
  435554:	strb	w2, [sp, #222]
  435558:	lsr	x2, x0, #9
  43555c:	str	x2, [sp, #208]
  435560:	b.eq	4356fc <ferror@plt+0x3292c>  // b.none
  435564:	and	w2, w2, #0x7
  435568:	sub	w3, w1, #0xc
  43556c:	str	w3, [sp, #196]
  435570:	cmp	w8, #0x9
  435574:	strb	w2, [sp, #226]
  435578:	lsr	x2, x0, #12
  43557c:	str	x2, [sp, #208]
  435580:	b.eq	4356fc <ferror@plt+0x3292c>  // b.none
  435584:	and	w2, w2, #0x7
  435588:	lsr	x0, x0, #15
  43558c:	sub	w1, w1, #0xf
  435590:	str	w1, [sp, #196]
  435594:	str	x0, [sp, #208]
  435598:	cmp	w8, #0xa
  43559c:	strb	w2, [sp, #221]
  4355a0:	b.eq	4356fc <ferror@plt+0x3292c>  // b.none
  4355a4:	mov	x3, x23
  4355a8:	mov	x2, x24
  4355ac:	mov	x1, x21
  4355b0:	mov	x0, x25
  4355b4:	bl	434cf0 <ferror@plt+0x31f20>
  4355b8:	cbz	w0, 435234 <ferror@plt+0x32464>
  4355bc:	ldr	x0, [sp, #208]
  4355c0:	cmp	w8, #0xb
  4355c4:	and	w1, w0, #0x7
  4355c8:	strb	w1, [sp, #227]
  4355cc:	ldr	w1, [sp, #196]
  4355d0:	lsr	x2, x0, #3
  4355d4:	str	x2, [sp, #208]
  4355d8:	sub	w3, w1, #0x3
  4355dc:	str	w3, [sp, #196]
  4355e0:	b.eq	4356fc <ferror@plt+0x3292c>  // b.none
  4355e4:	and	w2, w2, #0x7
  4355e8:	sub	w3, w1, #0x6
  4355ec:	str	w3, [sp, #196]
  4355f0:	cmp	w8, #0xc
  4355f4:	strb	w2, [sp, #220]
  4355f8:	lsr	x2, x0, #6
  4355fc:	str	x2, [sp, #208]
  435600:	b.eq	4356fc <ferror@plt+0x3292c>  // b.none
  435604:	and	w2, w2, #0x7
  435608:	sub	w3, w1, #0x9
  43560c:	str	w3, [sp, #196]
  435610:	cmp	w8, #0xd
  435614:	strb	w2, [sp, #228]
  435618:	lsr	x2, x0, #9
  43561c:	str	x2, [sp, #208]
  435620:	b.eq	4356fc <ferror@plt+0x3292c>  // b.none
  435624:	and	w2, w2, #0x7
  435628:	sub	w3, w1, #0xc
  43562c:	str	w3, [sp, #196]
  435630:	cmp	w8, #0xe
  435634:	strb	w2, [sp, #219]
  435638:	lsr	x2, x0, #12
  43563c:	str	x2, [sp, #208]
  435640:	b.eq	4356fc <ferror@plt+0x3292c>  // b.none
  435644:	and	w2, w2, #0x7
  435648:	lsr	x0, x0, #15
  43564c:	sub	w1, w1, #0xf
  435650:	str	w1, [sp, #196]
  435654:	str	x0, [sp, #208]
  435658:	cmp	w8, #0xf
  43565c:	strb	w2, [sp, #229]
  435660:	b.eq	4356fc <ferror@plt+0x3292c>  // b.none
  435664:	mov	x3, x23
  435668:	mov	x2, x24
  43566c:	mov	x1, x21
  435670:	mov	x0, x25
  435674:	bl	434cf0 <ferror@plt+0x31f20>
  435678:	cbz	w0, 435234 <ferror@plt+0x32464>
  43567c:	ldr	x0, [sp, #208]
  435680:	cmp	w8, #0x10
  435684:	and	w1, w0, #0x7
  435688:	strb	w1, [sp, #218]
  43568c:	ldr	w1, [sp, #196]
  435690:	lsr	x2, x0, #3
  435694:	str	x2, [sp, #208]
  435698:	sub	w3, w1, #0x3
  43569c:	str	w3, [sp, #196]
  4356a0:	b.eq	4356fc <ferror@plt+0x3292c>  // b.none
  4356a4:	and	w2, w2, #0x7
  4356a8:	sub	w3, w1, #0x6
  4356ac:	str	w3, [sp, #196]
  4356b0:	cmp	w8, #0x11
  4356b4:	strb	w2, [sp, #230]
  4356b8:	lsr	x2, x0, #6
  4356bc:	str	x2, [sp, #208]
  4356c0:	b.eq	4356fc <ferror@plt+0x3292c>  // b.none
  4356c4:	and	w2, w2, #0x7
  4356c8:	sub	w3, w1, #0x9
  4356cc:	str	w3, [sp, #196]
  4356d0:	cmp	w8, #0x12
  4356d4:	strb	w2, [sp, #217]
  4356d8:	lsr	x2, x0, #9
  4356dc:	str	x2, [sp, #208]
  4356e0:	b.eq	4356fc <ferror@plt+0x3292c>  // b.none
  4356e4:	and	w2, w2, #0x7
  4356e8:	lsr	x0, x0, #12
  4356ec:	sub	w1, w1, #0xc
  4356f0:	str	w1, [sp, #196]
  4356f4:	str	x0, [sp, #208]
  4356f8:	strb	w2, [sp, #231]
  4356fc:	ldr	x0, [sp, #96]
  435700:	mov	x3, x22
  435704:	mov	x2, x22
  435708:	mov	x1, #0x13                  	// #19
  43570c:	bl	434994 <ferror@plt+0x31bc4>
  435710:	cbz	w0, 435234 <ferror@plt+0x32464>
  435714:	mov	x0, #0x1278                	// #4728
  435718:	add	x6, x22, x0
  43571c:	ldr	w0, [sp, #112]
  435720:	mov	x4, x6
  435724:	str	x0, [sp, #120]
  435728:	add	x5, x28, x0
  43572c:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x245fc>
  435730:	add	x5, x6, x5
  435734:	add	x0, x0, #0xd34
  435738:	str	x0, [sp, #112]
  43573c:	cmp	x5, x4
  435740:	b.hi	435804 <ferror@plt+0x32a34>  // b.pmore
  435744:	add	x0, x22, #0x1, lsl #12
  435748:	ldrb	w0, [x0, #888]
  43574c:	cbz	w0, 435234 <ferror@plt+0x32464>
  435750:	mov	x3, x22
  435754:	mov	x2, x22
  435758:	mov	x1, x28
  43575c:	mov	x0, x6
  435760:	str	x6, [sp, #160]
  435764:	bl	434994 <ferror@plt+0x31bc4>
  435768:	cbz	w0, 435234 <ferror@plt+0x32464>
  43576c:	ldr	x1, [sp, #120]
  435770:	add	x0, x22, #0x800
  435774:	ldr	x6, [sp, #160]
  435778:	mov	x3, x0
  43577c:	mov	x2, x22
  435780:	str	x0, [sp, #112]
  435784:	add	x0, x6, x28
  435788:	bl	434994 <ferror@plt+0x31bc4>
  43578c:	cbz	w0, 435234 <ferror@plt+0x32464>
  435790:	str	x22, [sp, #120]
  435794:	mov	x3, x23
  435798:	mov	x2, x24
  43579c:	mov	x1, x21
  4357a0:	mov	x0, x25
  4357a4:	bl	434cf0 <ferror@plt+0x31f20>
  4357a8:	cbz	w0, 435234 <ferror@plt+0x32464>
  4357ac:	ldr	x3, [sp, #208]
  4357b0:	ldr	x1, [sp, #120]
  4357b4:	and	x0, x3, #0xff
  4357b8:	ldrh	w2, [x1, x0, lsl #1]
  4357bc:	ldr	w0, [sp, #196]
  4357c0:	and	w4, w2, #0x1ff
  4357c4:	ubfx	x1, x2, #9, #3
  4357c8:	tbnz	w2, #12, 4359c8 <ferror@plt+0x32bf8>
  4357cc:	add	w2, w1, #0x1
  4357d0:	mov	w28, w4
  4357d4:	sub	w0, w0, #0x1
  4357d8:	lsr	x3, x3, x2
  4357dc:	str	x3, [sp, #208]
  4357e0:	sub	w0, w0, w1
  4357e4:	str	w0, [sp, #196]
  4357e8:	cmp	w28, #0xff
  4357ec:	b.hi	435a04 <ferror@plt+0x32c34>  // b.pmore
  4357f0:	cmp	x27, x20
  4357f4:	b.eq	435234 <ferror@plt+0x32464>  // b.none
  4357f8:	strb	w28, [x20], #1
  4357fc:	prfm	pstl1keep, [x20]
  435800:	b	435794 <ferror@plt+0x329c4>
  435804:	mov	x3, x23
  435808:	mov	x2, x24
  43580c:	mov	x1, x21
  435810:	mov	x0, x25
  435814:	stp	x6, x5, [sp, #160]
  435818:	str	x4, [sp, #176]
  43581c:	bl	434cf0 <ferror@plt+0x31f20>
  435820:	cbz	w0, 435234 <ferror@plt+0x32464>
  435824:	ldr	x0, [sp, #208]
  435828:	and	x1, x0, #0xff
  43582c:	ldrh	w3, [x22, x1, lsl #1]
  435830:	tbnz	w3, #12, 435234 <ferror@plt+0x32464>
  435834:	ubfx	x2, x3, #9, #3
  435838:	tst	w3, #0x1f0
  43583c:	add	w1, w2, #0x1
  435840:	ldp	x6, x5, [sp, #160]
  435844:	lsr	x0, x0, x1
  435848:	ldr	w1, [sp, #196]
  43584c:	str	x0, [sp, #208]
  435850:	sub	w1, w1, w2
  435854:	sub	w2, w1, #0x1
  435858:	str	w2, [sp, #196]
  43585c:	and	w2, w3, #0x1ff
  435860:	ldr	x4, [sp, #176]
  435864:	b.ne	435870 <ferror@plt+0x32aa0>  // b.any
  435868:	strb	w2, [x4], #1
  43586c:	b	43573c <ferror@plt+0x3296c>
  435870:	cmp	w2, #0x10
  435874:	b.ne	4358e4 <ferror@plt+0x32b14>  // b.any
  435878:	cmp	x6, x4
  43587c:	b.eq	435234 <ferror@plt+0x32464>  // b.none
  435880:	and	w2, w0, #0x3
  435884:	sub	w1, w1, #0x3
  435888:	lsr	x0, x0, #2
  43588c:	str	w1, [sp, #196]
  435890:	str	x0, [sp, #208]
  435894:	add	w2, w2, #0x3
  435898:	sub	x0, x5, x4
  43589c:	cmp	w2, w0
  4358a0:	b.hi	435234 <ferror@plt+0x32464>  // b.pmore
  4358a4:	ldurb	w0, [x4, #-1]
  4358a8:	cmp	w2, #0x5
  4358ac:	b.eq	4358dc <ferror@plt+0x32b0c>  // b.none
  4358b0:	cmp	w2, #0x6
  4358b4:	b.eq	4358d8 <ferror@plt+0x32b08>  // b.none
  4358b8:	cmp	w2, #0x4
  4358bc:	b.ne	4358c4 <ferror@plt+0x32af4>  // b.any
  4358c0:	strb	w0, [x4], #1
  4358c4:	add	x4, x4, #0x3
  4358c8:	sturb	w0, [x4, #-3]
  4358cc:	sturb	w0, [x4, #-2]
  4358d0:	sturb	w0, [x4, #-1]
  4358d4:	b	43573c <ferror@plt+0x3296c>
  4358d8:	strb	w0, [x4], #1
  4358dc:	strb	w0, [x4], #1
  4358e0:	b	4358c0 <ferror@plt+0x32af0>
  4358e4:	cmp	w2, #0x11
  4358e8:	b.ne	435960 <ferror@plt+0x32b90>  // b.any
  4358ec:	and	w2, w0, #0x7
  4358f0:	sub	w1, w1, #0x4
  4358f4:	lsr	x0, x0, #3
  4358f8:	str	w1, [sp, #196]
  4358fc:	str	x0, [sp, #208]
  435900:	add	w3, w2, #0x3
  435904:	sub	x0, x5, x4
  435908:	cmp	w3, w0
  43590c:	b.hi	435234 <ferror@plt+0x32464>  // b.pmore
  435910:	sub	w0, w2, #0x1
  435914:	cmp	w0, #0x6
  435918:	b.hi	43594c <ferror@plt+0x32b7c>  // b.pmore
  43591c:	ldr	x1, [sp, #112]
  435920:	ldrb	w0, [x1, w0, uxtw]
  435924:	adr	x1, 435930 <ferror@plt+0x32b60>
  435928:	add	x0, x1, w0, sxtb #2
  43592c:	br	x0
  435930:	strb	wzr, [x4], #1
  435934:	strb	wzr, [x4], #1
  435938:	strb	wzr, [x4], #1
  43593c:	strb	wzr, [x4], #1
  435940:	strb	wzr, [x4], #1
  435944:	strb	wzr, [x4], #1
  435948:	strb	wzr, [x4], #1
  43594c:	mov	x0, x4
  435950:	strh	wzr, [x0], #3
  435954:	strb	wzr, [x4, #2]
  435958:	mov	x4, x0
  43595c:	b	43573c <ferror@plt+0x3296c>
  435960:	str	x6, [sp, #176]
  435964:	cmp	w2, #0x12
  435968:	b.ne	435234 <ferror@plt+0x32464>  // b.any
  43596c:	and	w2, w0, #0x7f
  435970:	sub	w1, w1, #0x8
  435974:	lsr	x0, x0, #7
  435978:	str	x5, [sp, #168]
  43597c:	str	w1, [sp, #196]
  435980:	add	w2, w2, #0xb
  435984:	str	x0, [sp, #208]
  435988:	sub	x0, x5, x4
  43598c:	cmp	w2, w0
  435990:	b.hi	435234 <ferror@plt+0x32464>  // b.pmore
  435994:	mov	x0, x4
  435998:	mov	w1, #0x0                   	// #0
  43599c:	str	x2, [sp, #160]
  4359a0:	bl	402930 <memset@plt>
  4359a4:	ldp	x2, x5, [sp, #160]
  4359a8:	ldr	x6, [sp, #176]
  4359ac:	add	x4, x0, x2
  4359b0:	b	43573c <ferror@plt+0x3296c>
  4359b4:	ldr	x0, [sp, #144]
  4359b8:	str	x0, [sp, #112]
  4359bc:	ldr	x0, [sp, #152]
  4359c0:	str	x0, [sp, #120]
  4359c4:	b	435794 <ferror@plt+0x329c4>
  4359c8:	mov	w2, #0x1                   	// #1
  4359cc:	add	w4, w4, #0x100
  4359d0:	lsl	w1, w2, w1
  4359d4:	sub	w1, w1, #0x1
  4359d8:	and	x1, x1, x3, lsr #8
  4359dc:	sub	w0, w0, #0x8
  4359e0:	ldr	x2, [sp, #120]
  4359e4:	add	x1, x1, w4, sxtw
  4359e8:	ldrh	w4, [x2, x1, lsl #1]
  4359ec:	and	w28, w4, #0x1ff
  4359f0:	ubfx	x1, x4, #9, #3
  4359f4:	add	w2, w1, #0x8
  4359f8:	lsr	x3, x3, x2
  4359fc:	str	x3, [sp, #208]
  435a00:	b	4357e0 <ferror@plt+0x32a10>
  435a04:	cmp	w28, #0x100
  435a08:	b.eq	4353a8 <ferror@plt+0x325d8>  // b.none
  435a0c:	cmp	w28, #0x108
  435a10:	b.hi	435a9c <ferror@plt+0x32ccc>  // b.pmore
  435a14:	sub	w28, w28, #0xfe
  435a18:	mov	x3, x23
  435a1c:	mov	x2, x24
  435a20:	mov	x1, x21
  435a24:	mov	x0, x25
  435a28:	bl	434cf0 <ferror@plt+0x31f20>
  435a2c:	cbz	w0, 435234 <ferror@plt+0x32464>
  435a30:	ldr	x2, [sp, #208]
  435a34:	ldr	x1, [sp, #112]
  435a38:	and	x0, x2, #0xff
  435a3c:	ldrh	w5, [x1, x0, lsl #1]
  435a40:	ldr	w0, [sp, #196]
  435a44:	and	w3, w5, #0x1ff
  435a48:	ubfx	x1, x5, #9, #3
  435a4c:	tbnz	w5, #12, 435b1c <ferror@plt+0x32d4c>
  435a50:	mov	w8, w3
  435a54:	sub	w0, w0, #0x1
  435a58:	add	w3, w1, #0x1
  435a5c:	sub	w0, w0, w1
  435a60:	lsr	x2, x2, x3
  435a64:	str	x2, [sp, #208]
  435a68:	str	w0, [sp, #196]
  435a6c:	cbnz	w8, 435b5c <ferror@plt+0x32d8c>
  435a70:	cmp	x19, x20
  435a74:	b.eq	435234 <ferror@plt+0x32464>  // b.none
  435a78:	sub	x0, x27, x20
  435a7c:	cmp	w28, w0
  435a80:	b.hi	435234 <ferror@plt+0x32464>  // b.pmore
  435a84:	ldurb	w1, [x20, #-1]
  435a88:	mov	x2, x28
  435a8c:	mov	x0, x20
  435a90:	bl	402930 <memset@plt>
  435a94:	add	x20, x20, x28
  435a98:	b	435794 <ferror@plt+0x329c4>
  435a9c:	cmp	w28, #0x11d
  435aa0:	b.eq	435b14 <ferror@plt+0x32d44>  // b.none
  435aa4:	b.hi	435234 <ferror@plt+0x32464>  // b.pmore
  435aa8:	mov	x3, x23
  435aac:	mov	x2, x24
  435ab0:	mov	x1, x21
  435ab4:	mov	x0, x25
  435ab8:	bl	434cf0 <ferror@plt+0x31f20>
  435abc:	cbz	w0, 435234 <ferror@plt+0x32464>
  435ac0:	sub	w4, w28, #0x109
  435ac4:	mov	w2, #0x1                   	// #1
  435ac8:	ldr	x3, [sp, #208]
  435acc:	lsr	w0, w4, #2
  435ad0:	add	w1, w0, #0x1
  435ad4:	and	w4, w4, #0x3
  435ad8:	lsl	w4, w4, w1
  435adc:	add	w8, w4, #0xb
  435ae0:	lsl	w4, w2, w0
  435ae4:	mov	w0, #0xffffffff            	// #-1
  435ae8:	sub	w4, w4, #0x1
  435aec:	lsl	w2, w0, w1
  435af0:	ldr	w0, [sp, #196]
  435af4:	bic	w2, w3, w2
  435af8:	add	w4, w2, w4, lsl #3
  435afc:	lsr	x3, x3, x1
  435b00:	add	w28, w4, w8
  435b04:	sub	w1, w0, w1
  435b08:	str	w1, [sp, #196]
  435b0c:	str	x3, [sp, #208]
  435b10:	b	435a18 <ferror@plt+0x32c48>
  435b14:	mov	x28, #0x102                 	// #258
  435b18:	b	435a18 <ferror@plt+0x32c48>
  435b1c:	mov	w4, #0x1                   	// #1
  435b20:	add	w3, w3, #0x100
  435b24:	lsl	w1, w4, w1
  435b28:	sub	w1, w1, #0x1
  435b2c:	and	x1, x1, x2, lsr #8
  435b30:	sub	w0, w0, #0x8
  435b34:	add	x1, x1, w3, sxtw
  435b38:	ldr	x3, [sp, #112]
  435b3c:	ldrh	w3, [x3, x1, lsl #1]
  435b40:	and	w8, w3, #0x1ff
  435b44:	ubfx	x5, x3, #9, #3
  435b48:	add	w1, w5, #0x8
  435b4c:	sub	w0, w0, w5
  435b50:	lsr	x2, x2, x1
  435b54:	str	x2, [sp, #208]
  435b58:	b	435a68 <ferror@plt+0x32c98>
  435b5c:	cmp	w8, #0x1d
  435b60:	b.hi	435234 <ferror@plt+0x32464>  // b.pmore
  435b64:	cmp	w8, #0x3
  435b68:	b.hi	435bac <ferror@plt+0x32ddc>  // b.pmore
  435b6c:	add	w3, w8, #0x1
  435b70:	sub	x0, x20, x19
  435b74:	cmp	w3, w0
  435b78:	b.hi	435234 <ferror@plt+0x32464>  // b.pmore
  435b7c:	sub	x0, x27, x20
  435b80:	cmp	w28, w0
  435b84:	b.hi	435234 <ferror@plt+0x32464>  // b.pmore
  435b88:	mov	w5, w3
  435b8c:	cmp	w28, w3
  435b90:	neg	x5, x5
  435b94:	b.hi	435c18 <ferror@plt+0x32e48>  // b.pmore
  435b98:	mov	x2, x28
  435b9c:	add	x1, x20, x5
  435ba0:	mov	x0, x20
  435ba4:	bl	4026a0 <memcpy@plt>
  435ba8:	b	435a94 <ferror@plt+0x32cc4>
  435bac:	mov	x3, x23
  435bb0:	mov	x2, x24
  435bb4:	mov	x1, x21
  435bb8:	mov	x0, x25
  435bbc:	bl	434cf0 <ferror@plt+0x31f20>
  435bc0:	cbz	w0, 435234 <ferror@plt+0x32464>
  435bc4:	sub	w3, w8, #0x4
  435bc8:	ldr	x5, [sp, #208]
  435bcc:	lsr	w0, w3, #1
  435bd0:	add	w2, w0, #0x1
  435bd4:	and	w3, w3, #0x1
  435bd8:	lsl	w3, w3, w2
  435bdc:	add	w1, w3, #0x5
  435be0:	mov	w3, #0x1                   	// #1
  435be4:	lsl	w3, w3, w0
  435be8:	mov	w0, #0xffffffff            	// #-1
  435bec:	sub	w3, w3, #0x1
  435bf0:	lsl	w0, w0, w2
  435bf4:	bic	w0, w5, w0
  435bf8:	lsr	x5, x5, x2
  435bfc:	add	w3, w0, w3, lsl #2
  435c00:	ldr	w0, [sp, #196]
  435c04:	add	w3, w3, w1
  435c08:	str	x5, [sp, #208]
  435c0c:	sub	w2, w0, w2
  435c10:	str	w2, [sp, #196]
  435c14:	b	435b70 <ferror@plt+0x32da0>
  435c18:	cmp	w3, w28
  435c1c:	add	x1, x20, x5
  435c20:	csel	w6, w3, w28, ls  // ls = plast
  435c24:	csel	w2, w3, w28, ls  // ls = plast
  435c28:	mov	x0, x20
  435c2c:	stp	x5, x2, [sp, #160]
  435c30:	str	w3, [sp, #176]
  435c34:	str	w6, [sp, #188]
  435c38:	bl	4026a0 <memcpy@plt>
  435c3c:	ldp	x5, x2, [sp, #160]
  435c40:	ldr	w6, [sp, #188]
  435c44:	ldr	w3, [sp, #176]
  435c48:	subs	w28, w28, w6
  435c4c:	add	x20, x20, x2
  435c50:	b.ne	435c18 <ferror@plt+0x32e48>  // b.any
  435c54:	b	435794 <ferror@plt+0x329c4>
  435c58:	ldp	x1, x0, [sp, #128]
  435c5c:	mov	w8, #0x0                   	// #0
  435c60:	sub	x0, x0, #0x4
  435c64:	add	x0, x1, x0
  435c68:	ldrb	w1, [x0], #1
  435c6c:	cmp	x21, x0
  435c70:	orr	w8, w1, w8, lsl #8
  435c74:	b.ne	435c68 <ferror@plt+0x32e98>  // b.any
  435c78:	mov	w13, #0x0                   	// #0
  435c7c:	mov	w12, #0x1                   	// #1
  435c80:	mov	x15, #0x15af                	// #5551
  435c84:	mov	x14, #0x15b0                	// #5552
  435c88:	mov	w1, #0xfff1                	// #65521
  435c8c:	cmp	x26, x15
  435c90:	b.hi	435ce0 <ferror@plt+0x32f10>  // b.pmore
  435c94:	and	x14, x26, #0xfffffffffffffff0
  435c98:	lsr	x4, x26, #4
  435c9c:	add	x14, x19, x14
  435ca0:	cmp	x19, x14
  435ca4:	b.ne	435dc8 <ferror@plt+0x32ff8>  // b.any
  435ca8:	mov	x0, #0xfffffffffffffff0    	// #-16
  435cac:	mov	x3, #0x0                   	// #0
  435cb0:	madd	x26, x4, x0, x26
  435cb4:	cmp	x26, w3, uxtw
  435cb8:	b.hi	435e90 <ferror@plt+0x330c0>  // b.pmore
  435cbc:	mov	w2, #0xfff1                	// #65521
  435cc0:	udiv	w1, w13, w2
  435cc4:	udiv	w0, w12, w2
  435cc8:	msub	w1, w1, w2, w13
  435ccc:	msub	w2, w0, w2, w12
  435cd0:	add	w1, w2, w1, lsl #16
  435cd4:	cmp	w1, w8
  435cd8:	cset	w0, eq  // eq = none
  435cdc:	b	435238 <ferror@plt+0x32468>
  435ce0:	add	x16, x19, x14
  435ce4:	ldrb	w11, [x19]
  435ce8:	add	x19, x19, #0x10
  435cec:	ldurb	w24, [x19, #-15]
  435cf0:	ldurb	w4, [x19, #-14]
  435cf4:	add	w11, w11, w12
  435cf8:	add	w24, w24, w11
  435cfc:	ldurb	w10, [x19, #-12]
  435d00:	add	w3, w4, w24
  435d04:	ldurb	w4, [x19, #-13]
  435d08:	ldurb	w23, [x19, #-11]
  435d0c:	add	w11, w11, w24
  435d10:	add	w25, w4, w3
  435d14:	ldurb	w9, [x19, #-10]
  435d18:	add	w10, w10, w25
  435d1c:	ldurb	w22, [x19, #-9]
  435d20:	add	w23, w23, w10
  435d24:	ldurb	w7, [x19, #-8]
  435d28:	add	w9, w9, w23
  435d2c:	ldurb	w21, [x19, #-7]
  435d30:	add	w22, w22, w9
  435d34:	ldurb	w6, [x19, #-6]
  435d38:	add	w7, w7, w22
  435d3c:	ldurb	w20, [x19, #-5]
  435d40:	add	w21, w21, w7
  435d44:	ldurb	w5, [x19, #-4]
  435d48:	add	w6, w6, w21
  435d4c:	ldurb	w18, [x19, #-3]
  435d50:	add	w20, w20, w6
  435d54:	ldurb	w4, [x19, #-2]
  435d58:	add	w5, w5, w20
  435d5c:	add	w10, w10, w23
  435d60:	add	w18, w18, w5
  435d64:	add	w9, w9, w22
  435d68:	add	w0, w4, w18
  435d6c:	add	w4, w3, w25
  435d70:	add	w4, w4, w11
  435d74:	ldurb	w17, [x19, #-1]
  435d78:	add	w4, w4, w10
  435d7c:	add	w7, w7, w21
  435d80:	add	w4, w4, w9
  435d84:	add	w6, w6, w20
  435d88:	add	w2, w4, w7
  435d8c:	add	w5, w5, w18
  435d90:	add	w2, w2, w6
  435d94:	add	w4, w17, w0, lsl #1
  435d98:	add	w2, w2, w5
  435d9c:	add	w12, w17, w0
  435da0:	add	w2, w2, w4
  435da4:	cmp	x19, x16
  435da8:	add	w13, w13, w2
  435dac:	b.ne	435ce4 <ferror@plt+0x32f14>  // b.any
  435db0:	udiv	w0, w12, w1
  435db4:	sub	x26, x26, x14
  435db8:	msub	w12, w0, w1, w12
  435dbc:	udiv	w0, w13, w1
  435dc0:	msub	w13, w0, w1, w13
  435dc4:	b	435c8c <ferror@plt+0x32ebc>
  435dc8:	ldrb	w1, [x19]
  435dcc:	add	x19, x19, #0x10
  435dd0:	ldurb	w11, [x19, #-15]
  435dd4:	add	w2, w1, w12
  435dd8:	ldurb	w22, [x19, #-14]
  435ddc:	add	w11, w11, w2
  435de0:	ldurb	w10, [x19, #-13]
  435de4:	ldurb	w21, [x19, #-12]
  435de8:	add	w22, w22, w11
  435dec:	ldurb	w9, [x19, #-11]
  435df0:	add	w10, w10, w22
  435df4:	ldurb	w20, [x19, #-10]
  435df8:	add	w21, w21, w10
  435dfc:	ldurb	w7, [x19, #-9]
  435e00:	add	w9, w9, w21
  435e04:	ldurb	w18, [x19, #-8]
  435e08:	add	w20, w20, w9
  435e0c:	ldurb	w6, [x19, #-7]
  435e10:	add	w7, w7, w20
  435e14:	ldurb	w17, [x19, #-6]
  435e18:	add	w18, w18, w7
  435e1c:	add	w1, w2, w13
  435e20:	ldurb	w5, [x19, #-5]
  435e24:	add	w6, w6, w18
  435e28:	add	w11, w11, w22
  435e2c:	ldurb	w16, [x19, #-2]
  435e30:	add	w17, w17, w6
  435e34:	ldurb	w15, [x19, #-4]
  435e38:	add	w1, w1, w11
  435e3c:	ldurb	w3, [x19, #-3]
  435e40:	add	w10, w10, w21
  435e44:	add	w5, w5, w17
  435e48:	add	w1, w1, w10
  435e4c:	add	w9, w9, w20
  435e50:	add	w15, w15, w5
  435e54:	add	w1, w1, w9
  435e58:	add	w7, w7, w18
  435e5c:	add	w3, w3, w15
  435e60:	add	w0, w1, w7
  435e64:	add	w6, w6, w17
  435e68:	ldurb	w2, [x19, #-1]
  435e6c:	add	w0, w0, w6
  435e70:	add	w5, w5, w15
  435e74:	add	w12, w16, w3
  435e78:	add	w0, w0, w5
  435e7c:	add	w3, w16, w3, lsl #1
  435e80:	add	w12, w2, w12
  435e84:	add	w0, w0, w3
  435e88:	add	w13, w12, w0
  435e8c:	b	435ca0 <ferror@plt+0x32ed0>
  435e90:	ldrb	w0, [x19, x3]
  435e94:	add	x3, x3, #0x1
  435e98:	add	w12, w12, w0
  435e9c:	add	w13, w13, w12
  435ea0:	b	435cb4 <ferror@plt+0x32ee4>
  435ea4:	stp	x29, x30, [sp, #-80]!
  435ea8:	mov	x29, sp
  435eac:	stp	x21, x22, [sp, #32]
  435eb0:	mov	x21, x1
  435eb4:	mov	x22, x7
  435eb8:	stp	x23, x24, [sp, #48]
  435ebc:	mov	x24, x2
  435ec0:	mov	x23, x6
  435ec4:	mov	x2, x4
  435ec8:	str	x25, [sp, #64]
  435ecc:	mov	x25, x3
  435ed0:	mov	x3, x5
  435ed4:	add	x5, x21, #0x4
  435ed8:	mov	x1, #0x0                   	// #0
  435edc:	stp	x19, x20, [sp, #16]
  435ee0:	mov	x19, #0x0                   	// #0
  435ee4:	ldrb	w4, [x5, x1]
  435ee8:	add	x1, x1, #0x1
  435eec:	cmp	x1, #0x8
  435ef0:	orr	x19, x4, x19, lsl #8
  435ef4:	b.ne	435ee4 <ferror@plt+0x33114>  // b.any
  435ef8:	mov	x1, x19
  435efc:	bl	434290 <ferror@plt+0x314c0>
  435f00:	mov	x20, x0
  435f04:	cbz	x0, 435f34 <ferror@plt+0x33164>
  435f08:	mov	x3, x0
  435f0c:	mov	x4, x19
  435f10:	mov	x2, x25
  435f14:	sub	x1, x24, #0xc
  435f18:	add	x0, x21, #0xc
  435f1c:	bl	4351c4 <ferror@plt+0x323f4>
  435f20:	cbz	w0, 435f2c <ferror@plt+0x3315c>
  435f24:	str	x20, [x23]
  435f28:	str	x19, [x22]
  435f2c:	mov	w0, #0x1                   	// #1
  435f30:	b	435f38 <ferror@plt+0x33168>
  435f34:	mov	w0, #0x0                   	// #0
  435f38:	ldp	x19, x20, [sp, #16]
  435f3c:	ldp	x21, x22, [sp, #32]
  435f40:	ldp	x23, x24, [sp, #48]
  435f44:	ldr	x25, [sp, #64]
  435f48:	ldp	x29, x30, [sp], #80
  435f4c:	ret
  435f50:	sub	sp, sp, #0x4a0
  435f54:	stp	x29, x30, [sp, #80]
  435f58:	add	x29, sp, #0x50
  435f5c:	stp	x27, x28, [sp, #160]
  435f60:	mov	x27, x0
  435f64:	ldr	w0, [sp, #1208]
  435f68:	stp	x19, x20, [sp, #96]
  435f6c:	mov	x19, x4
  435f70:	mov	x20, x5
  435f74:	stp	x21, x22, [sp, #112]
  435f78:	stp	x23, x24, [sp, #128]
  435f7c:	mov	w24, w2
  435f80:	stp	x25, x26, [sp, #144]
  435f84:	stp	x3, x7, [sp, #240]
  435f88:	str	x6, [sp, #272]
  435f8c:	str	x1, [sp, #296]
  435f90:	cbnz	w0, 435fa0 <ferror@plt+0x331d0>
  435f94:	ldr	x0, [sp, #1184]
  435f98:	str	wzr, [x7]
  435f9c:	str	wzr, [x0]
  435fa0:	add	x25, sp, #0x198
  435fa4:	mov	x5, x20
  435fa8:	mov	x6, x25
  435fac:	mov	x4, x19
  435fb0:	mov	w1, w24
  435fb4:	mov	x0, x27
  435fb8:	mov	x3, #0x40                  	// #64
  435fbc:	mov	x2, #0x0                   	// #0
  435fc0:	bl	4374b4 <ferror@plt+0x346e4>
  435fc4:	cbz	w0, 436068 <ferror@plt+0x33298>
  435fc8:	ldr	x0, [sp, #408]
  435fcc:	add	x1, sp, #0x200
  435fd0:	ldp	x2, x3, [x0]
  435fd4:	stp	x2, x3, [x1, #160]
  435fd8:	ldrb	w4, [x0, #6]
  435fdc:	ldp	x2, x3, [x0, #16]
  435fe0:	stp	x2, x3, [x1, #176]
  435fe4:	ldrb	w23, [x0, #4]
  435fe8:	ldp	x2, x3, [x0, #32]
  435fec:	stp	x2, x3, [x1, #192]
  435ff0:	add	x1, sp, #0x2d0
  435ff4:	ldp	x2, x3, [x0, #48]
  435ff8:	str	w4, [sp, #184]
  435ffc:	stp	x2, x3, [x1]
  436000:	ldrb	w1, [x0, #5]
  436004:	str	w1, [sp, #316]
  436008:	mov	x3, x20
  43600c:	ldrh	w1, [x0, #18]
  436010:	mov	x2, x19
  436014:	str	w1, [sp, #376]
  436018:	ldr	w1, [x0, #48]
  43601c:	ldrh	w26, [x0, #16]
  436020:	ldrh	w28, [x0, #60]
  436024:	ldrh	w22, [x0, #62]
  436028:	str	w1, [sp, #336]
  43602c:	mov	x1, x25
  436030:	ldr	x21, [x0, #40]
  436034:	mov	x0, x27
  436038:	bl	437570 <ferror@plt+0x347a0>
  43603c:	ldr	w1, [sp, #672]
  436040:	mov	w0, #0x457f                	// #17791
  436044:	movk	w0, #0x464c, lsl #16
  436048:	ldr	w4, [sp, #184]
  43604c:	cmp	w1, w0
  436050:	b.eq	436074 <ferror@plt+0x332a4>  // b.none
  436054:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  436058:	add	x1, x1, #0xb48
  43605c:	mov	w2, #0x0                   	// #0
  436060:	mov	x0, x20
  436064:	blr	x19
  436068:	mov	w28, #0x0                   	// #0
  43606c:	mov	x22, #0x0                   	// #0
  436070:	b	4363d0 <ferror@plt+0x33600>
  436074:	cmp	w4, #0x1
  436078:	b.eq	43608c <ferror@plt+0x332bc>  // b.none
  43607c:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  436080:	mov	w2, #0x0                   	// #0
  436084:	add	x1, x1, #0xb63
  436088:	b	436060 <ferror@plt+0x33290>
  43608c:	cmp	w23, #0x2
  436090:	b.eq	4360a4 <ferror@plt+0x332d4>  // b.none
  436094:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  436098:	mov	w2, #0x0                   	// #0
  43609c:	add	x1, x1, #0xb8f
  4360a0:	b	436060 <ferror@plt+0x33290>
  4360a4:	ldr	w0, [sp, #316]
  4360a8:	sub	w0, w0, #0x1
  4360ac:	and	w0, w0, #0xff
  4360b0:	cmp	w0, #0x1
  4360b4:	b.ls	4360c8 <ferror@plt+0x332f8>  // b.plast
  4360b8:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  4360bc:	mov	w2, #0x0                   	// #0
  4360c0:	add	x1, x1, #0xbb7
  4360c4:	b	436060 <ferror@plt+0x33290>
  4360c8:	ldr	w0, [sp, #1200]
  4360cc:	cbz	w0, 4360d8 <ferror@plt+0x33308>
  4360d0:	cmp	w26, #0x3
  4360d4:	b.eq	4370fc <ferror@plt+0x3432c>  // b.none
  4360d8:	mov	w0, w28
  4360dc:	str	w28, [sp, #192]
  4360e0:	cmp	w0, #0x0
  4360e4:	mov	w25, #0xffff                	// #65535
  4360e8:	ccmp	w22, w25, #0x4, ne  // ne = any
  4360ec:	b.ne	43616c <ferror@plt+0x3339c>  // b.any
  4360f0:	cbz	x21, 43616c <ferror@plt+0x3339c>
  4360f4:	add	x23, sp, #0x360
  4360f8:	mov	x5, x20
  4360fc:	mov	x6, x23
  436100:	mov	x4, x19
  436104:	mov	x2, x21
  436108:	mov	w1, w24
  43610c:	mov	x0, x27
  436110:	mov	x3, #0x8                   	// #8
  436114:	bl	4374b4 <ferror@plt+0x346e4>
  436118:	cbz	w0, 436068 <ferror@plt+0x33298>
  43611c:	ldr	w1, [sp, #192]
  436120:	ldr	x0, [sp, #864]
  436124:	cbnz	w1, 436138 <ferror@plt+0x33368>
  436128:	ldr	w1, [x0, #32]
  43612c:	cmp	w22, w25
  436130:	str	w1, [sp, #192]
  436134:	b.ne	436158 <ferror@plt+0x33388>  // b.any
  436138:	ldr	w22, [x0, #40]
  43613c:	ldr	w0, [sp, #192]
  436140:	cmp	w22, w0
  436144:	mov	w0, #0xffff                	// #65535
  436148:	ccmp	w22, w0, #0x0, cs  // cs = hs, nlast
  43614c:	mov	w0, w22
  436150:	sub	w22, w22, #0x100
  436154:	csel	w22, w22, w0, hi  // hi = pmore
  436158:	mov	x3, x20
  43615c:	mov	x2, x19
  436160:	mov	x1, x23
  436164:	mov	x0, x27
  436168:	bl	437570 <ferror@plt+0x347a0>
  43616c:	ldr	w0, [sp, #192]
  436170:	add	x6, sp, #0x1b0
  436174:	mov	x5, x20
  436178:	mov	x4, x19
  43617c:	sub	w3, w0, #0x1
  436180:	add	x2, x21, #0x40
  436184:	mov	w1, w24
  436188:	mov	x0, x27
  43618c:	lsl	x3, x3, #6
  436190:	bl	4374b4 <ferror@plt+0x346e4>
  436194:	cbz	w0, 436068 <ferror@plt+0x33298>
  436198:	ldr	x0, [sp, #432]
  43619c:	sub	w22, w22, #0x1
  4361a0:	str	x0, [sp, #264]
  4361a4:	add	x6, sp, #0x1c8
  4361a8:	mov	x5, x20
  4361ac:	mov	x4, x19
  4361b0:	add	x22, x0, x22, lsl #6
  4361b4:	mov	w1, w24
  4361b8:	ldr	x2, [x22, #24]
  4361bc:	ldr	x0, [x22, #32]
  4361c0:	str	x0, [sp, #320]
  4361c4:	mov	x3, x0
  4361c8:	mov	x0, x27
  4361cc:	bl	4374b4 <ferror@plt+0x346e4>
  4361d0:	mov	w21, w0
  4361d4:	cbz	w0, 437104 <ferror@plt+0x34334>
  4361d8:	add	x3, sp, #0x360
  4361dc:	mov	x2, #0x140                 	// #320
  4361e0:	ldr	x0, [sp, #456]
  4361e4:	mov	w1, #0x0                   	// #0
  4361e8:	str	x0, [sp, #344]
  4361ec:	mov	x0, x3
  4361f0:	bl	402930 <memset@plt>
  4361f4:	mov	x3, x0
  4361f8:	mov	w0, #0x1                   	// #1
  4361fc:	str	w0, [sp, #208]
  436200:	adrp	x0, 493000 <_obstack_memory_used@@Base+0x4e5fc>
  436204:	add	x0, x0, #0x9b8
  436208:	ldr	x23, [sp, #264]
  43620c:	str	x0, [sp, #352]
  436210:	add	x0, sp, #0x270
  436214:	mov	x22, #0x0                   	// #0
  436218:	mov	w26, #0x0                   	// #0
  43621c:	mov	w25, #0x0                   	// #0
  436220:	str	wzr, [sp, #184]
  436224:	str	wzr, [sp, #200]
  436228:	str	wzr, [sp, #216]
  43622c:	str	xzr, [sp, #224]
  436230:	str	xzr, [sp, #256]
  436234:	str	xzr, [sp, #280]
  436238:	str	wzr, [sp, #288]
  43623c:	str	wzr, [sp, #292]
  436240:	str	xzr, [sp, #304]
  436244:	str	wzr, [sp, #312]
  436248:	str	x0, [sp, #328]
  43624c:	add	x0, x0, #0x18
  436250:	str	x3, [sp, #360]
  436254:	str	x0, [sp, #368]
  436258:	ldr	w0, [sp, #192]
  43625c:	ldr	w1, [sp, #208]
  436260:	cmp	w0, w1
  436264:	b.hi	4362c4 <ferror@plt+0x334f4>  // b.pmore
  436268:	ldr	w0, [sp, #200]
  43626c:	ldr	w1, [sp, #288]
  436270:	cmp	w0, #0x0
  436274:	csel	w0, w0, w1, ne  // ne = any
  436278:	str	w0, [sp, #200]
  43627c:	cmp	w0, #0x0
  436280:	ldr	w0, [sp, #1208]
  436284:	eor	w0, w0, #0x1
  436288:	and	w0, w0, #0x1
  43628c:	csel	w0, w0, wzr, ne  // ne = any
  436290:	cbz	w0, 436b38 <ferror@plt+0x33d68>
  436294:	ldr	w0, [sp, #200]
  436298:	sub	w21, w0, #0x1
  43629c:	ldr	x0, [sp, #264]
  4362a0:	add	x21, x0, x21, lsl #6
  4362a4:	ldr	w0, [sp, #192]
  4362a8:	ldr	w23, [x21, #40]
  4362ac:	cmp	w0, w23
  4362b0:	b.hi	436708 <ferror@plt+0x33938>  // b.pmore
  4362b4:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  4362b8:	mov	w2, #0x0                   	// #0
  4362bc:	add	x1, x1, #0xc39
  4362c0:	b	436300 <ferror@plt+0x33530>
  4362c4:	ldr	w0, [x23, #4]
  4362c8:	cmp	w0, #0x2
  4362cc:	b.eq	436420 <ferror@plt+0x33650>  // b.none
  4362d0:	cmp	w0, #0xb
  4362d4:	ldr	w1, [sp, #208]
  4362d8:	ldr	w0, [sp, #288]
  4362dc:	csel	w0, w0, w1, ne  // ne = any
  4362e0:	str	w0, [sp, #288]
  4362e4:	ldr	x1, [sp, #320]
  4362e8:	ldr	w0, [x23]
  4362ec:	cmp	x0, x1
  4362f0:	b.cc	43642c <ferror@plt+0x3365c>  // b.lo, b.ul, b.last
  4362f4:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  4362f8:	add	x1, x1, #0xbde
  4362fc:	mov	w2, #0x0                   	// #0
  436300:	mov	w28, #0x0                   	// #0
  436304:	mov	x0, x20
  436308:	blr	x19
  43630c:	mov	w7, #0x0                   	// #0
  436310:	mov	w21, #0x1                   	// #1
  436314:	mov	x3, x20
  436318:	mov	x2, x19
  43631c:	add	x1, sp, #0x1b0
  436320:	mov	x0, x27
  436324:	str	w7, [sp, #192]
  436328:	bl	437570 <ferror@plt+0x347a0>
  43632c:	ldr	w7, [sp, #192]
  436330:	cbz	w21, 436350 <ferror@plt+0x33580>
  436334:	mov	x3, x20
  436338:	mov	x2, x19
  43633c:	add	x1, sp, #0x1c8
  436340:	mov	x0, x27
  436344:	str	w7, [sp, #192]
  436348:	bl	437570 <ferror@plt+0x347a0>
  43634c:	ldr	w7, [sp, #192]
  436350:	cbz	w7, 436368 <ferror@plt+0x33598>
  436354:	mov	x3, x20
  436358:	mov	x2, x19
  43635c:	add	x1, sp, #0x1e0
  436360:	mov	x0, x27
  436364:	bl	437570 <ferror@plt+0x347a0>
  436368:	cbz	w28, 436384 <ferror@plt+0x335b4>
  43636c:	mov	w28, #0x0                   	// #0
  436370:	mov	x3, x20
  436374:	mov	x2, x19
  436378:	add	x1, sp, #0x1f8
  43637c:	mov	x0, x27
  436380:	bl	437570 <ferror@plt+0x347a0>
  436384:	cbz	w26, 43639c <ferror@plt+0x335cc>
  436388:	mov	x3, x20
  43638c:	mov	x2, x19
  436390:	add	x1, sp, #0x228
  436394:	mov	x0, x27
  436398:	bl	437570 <ferror@plt+0x347a0>
  43639c:	ldr	w0, [sp, #184]
  4363a0:	cbz	w0, 4363b8 <ferror@plt+0x335e8>
  4363a4:	mov	x3, x20
  4363a8:	mov	x2, x19
  4363ac:	add	x1, sp, #0x240
  4363b0:	mov	x0, x27
  4363b4:	bl	437570 <ferror@plt+0x347a0>
  4363b8:	cbz	w25, 4363d0 <ferror@plt+0x33600>
  4363bc:	mov	x3, x20
  4363c0:	mov	x2, x19
  4363c4:	add	x1, sp, #0x210
  4363c8:	mov	x0, x27
  4363cc:	bl	437570 <ferror@plt+0x347a0>
  4363d0:	cbz	w28, 4363e8 <ferror@plt+0x33618>
  4363d4:	mov	x3, x20
  4363d8:	mov	x2, x19
  4363dc:	add	x1, sp, #0x2e0
  4363e0:	mov	x0, x27
  4363e4:	bl	437570 <ferror@plt+0x347a0>
  4363e8:	cbz	x22, 436400 <ferror@plt+0x33630>
  4363ec:	mov	x3, x20
  4363f0:	mov	x2, x19
  4363f4:	add	x1, x22, #0x18
  4363f8:	mov	x0, x27
  4363fc:	bl	437570 <ferror@plt+0x347a0>
  436400:	cmn	w24, #0x1
  436404:	b.eq	436418 <ferror@plt+0x33648>  // b.none
  436408:	mov	x2, x20
  43640c:	mov	x1, x19
  436410:	mov	w0, w24
  436414:	bl	4348c4 <ferror@plt+0x31af4>
  436418:	mov	w22, #0x0                   	// #0
  43641c:	b	436b9c <ferror@plt+0x33dcc>
  436420:	ldr	w0, [sp, #208]
  436424:	str	w0, [sp, #200]
  436428:	b	4362e4 <ferror@plt+0x33514>
  43642c:	ldr	x1, [sp, #344]
  436430:	mov	x21, #0x0                   	// #0
  436434:	add	x0, x1, x0
  436438:	str	x0, [sp, #232]
  43643c:	ldr	x0, [sp, #352]
  436440:	ldr	x1, [x0, x21, lsl #3]
  436444:	ldr	x0, [sp, #232]
  436448:	bl	402ad0 <strcmp@plt>
  43644c:	cbnz	w0, 4365f0 <ferror@plt+0x33820>
  436450:	ldr	x2, [sp, #360]
  436454:	sbfiz	x0, x21, #5, #32
  436458:	ldr	x1, [x23, #24]
  43645c:	str	x1, [x2, x0]
  436460:	add	x1, sp, #0x368
  436464:	ldr	x2, [x23, #32]
  436468:	str	x2, [x1, x0]
  43646c:	add	x2, sp, #0x378
  436470:	ldr	x1, [x23, #8]
  436474:	ubfx	w1, w1, #11, #1
  436478:	str	w1, [x2, x0]
  43647c:	ldr	w0, [sp, #1208]
  436480:	ldr	x1, [sp, #1216]
  436484:	eor	w0, w0, #0x1
  436488:	and	w0, w0, #0x1
  43648c:	cmp	x1, #0x0
  436490:	csinc	w0, w0, wzr, eq  // eq = none
  436494:	cbz	w0, 436570 <ferror@plt+0x337a0>
  436498:	cbnz	w25, 436570 <ferror@plt+0x337a0>
  43649c:	ldr	x0, [sp, #232]
  4364a0:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  4364a4:	add	x1, x1, #0xbfc
  4364a8:	bl	402ad0 <strcmp@plt>
  4364ac:	mov	w7, w0
  4364b0:	cbnz	w0, 436570 <ferror@plt+0x337a0>
  4364b4:	ldp	x2, x3, [x23, #24]
  4364b8:	add	x6, sp, #0x210
  4364bc:	mov	x5, x20
  4364c0:	mov	x4, x19
  4364c4:	mov	w1, w24
  4364c8:	mov	x0, x27
  4364cc:	str	w7, [sp, #380]
  4364d0:	bl	4374b4 <ferror@plt+0x346e4>
  4364d4:	mov	w28, w0
  4364d8:	cbz	w0, 43630c <ferror@plt+0x3353c>
  4364dc:	ldr	x21, [sp, #528]
  4364e0:	ldr	w7, [sp, #380]
  4364e4:	ldr	w0, [x21, #8]
  4364e8:	cmp	w0, #0x3
  4364ec:	b.ne	436538 <ferror@plt+0x33768>  // b.any
  4364f0:	ldr	w0, [x21]
  4364f4:	cmp	w0, #0x4
  4364f8:	b.ne	436538 <ferror@plt+0x33768>  // b.any
  4364fc:	add	x0, x21, #0xc
  436500:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  436504:	add	x1, x1, #0xc0f
  436508:	str	w7, [sp, #380]
  43650c:	bl	402ad0 <strcmp@plt>
  436510:	ldr	w7, [sp, #380]
  436514:	cbnz	w0, 436538 <ferror@plt+0x33768>
  436518:	ldr	w0, [x21, #4]
  43651c:	ldr	x2, [x23, #32]
  436520:	add	w1, w0, #0x10
  436524:	cmp	x2, x1
  436528:	b.hi	436538 <ferror@plt+0x33768>  // b.pmore
  43652c:	add	x1, x21, #0x10
  436530:	str	w0, [sp, #216]
  436534:	str	x1, [sp, #256]
  436538:	ldr	w0, [sp, #1224]
  43653c:	cbz	w0, 43656c <ferror@plt+0x3379c>
  436540:	ldr	w0, [sp, #216]
  436544:	ldr	w1, [sp, #1224]
  436548:	cmp	w0, w1
  43654c:	b.ne	437120 <ferror@plt+0x34350>  // b.any
  436550:	mov	x2, x0
  436554:	str	w7, [sp, #380]
  436558:	ldr	x0, [sp, #256]
  43655c:	ldr	x1, [sp, #1216]
  436560:	bl	402a90 <memcmp@plt>
  436564:	ldr	w7, [sp, #380]
  436568:	cbnz	w0, 437120 <ferror@plt+0x34350>
  43656c:	mov	w25, #0x1                   	// #1
  436570:	ldr	w0, [sp, #1208]
  436574:	orr	w0, w26, w0
  436578:	cbnz	w0, 436604 <ferror@plt+0x33834>
  43657c:	ldr	x0, [sp, #232]
  436580:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  436584:	add	x1, x1, #0xc13
  436588:	bl	402ad0 <strcmp@plt>
  43658c:	cbnz	w0, 436600 <ferror@plt+0x33830>
  436590:	ldp	x2, x3, [x23, #24]
  436594:	add	x6, sp, #0x228
  436598:	mov	x5, x20
  43659c:	mov	x4, x19
  4365a0:	mov	w1, w24
  4365a4:	mov	x0, x27
  4365a8:	bl	4374b4 <ferror@plt+0x346e4>
  4365ac:	mov	w7, w0
  4365b0:	cbz	w0, 43712c <ferror@plt+0x3435c>
  4365b4:	ldr	x26, [x23, #32]
  4365b8:	ldr	x21, [sp, #552]
  4365bc:	mov	x1, x26
  4365c0:	mov	x0, x21
  4365c4:	bl	402750 <strnlen@plt>
  4365c8:	add	x0, x0, #0x3
  4365cc:	and	x0, x0, #0xfffffffffffffffc
  4365d0:	add	x1, x0, #0x4
  4365d4:	cmp	x26, x1
  4365d8:	b.cc	4365e8 <ferror@plt+0x33818>  // b.lo, b.ul, b.last
  4365dc:	ldr	w0, [x21, x0]
  4365e0:	str	x21, [sp, #280]
  4365e4:	str	w0, [sp, #292]
  4365e8:	mov	w26, #0x1                   	// #1
  4365ec:	b	436604 <ferror@plt+0x33834>
  4365f0:	add	x21, x21, #0x1
  4365f4:	cmp	x21, #0xa
  4365f8:	b.ne	43643c <ferror@plt+0x3366c>  // b.any
  4365fc:	b	43647c <ferror@plt+0x336ac>
  436600:	mov	w26, #0x0                   	// #0
  436604:	ldr	w0, [sp, #184]
  436608:	cbnz	w0, 436680 <ferror@plt+0x338b0>
  43660c:	ldr	x0, [sp, #232]
  436610:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  436614:	add	x1, x1, #0xc22
  436618:	bl	402ad0 <strcmp@plt>
  43661c:	cbnz	w0, 436680 <ferror@plt+0x338b0>
  436620:	ldp	x2, x3, [x23, #24]
  436624:	add	x6, sp, #0x240
  436628:	mov	x5, x20
  43662c:	mov	x4, x19
  436630:	mov	w1, w24
  436634:	mov	x0, x27
  436638:	bl	4374b4 <ferror@plt+0x346e4>
  43663c:	mov	w7, w0
  436640:	cbz	w0, 437130 <ferror@plt+0x34360>
  436644:	ldr	x0, [sp, #576]
  436648:	str	x0, [sp, #224]
  43664c:	ldr	x21, [x23, #32]
  436650:	mov	x1, x21
  436654:	bl	402750 <strnlen@plt>
  436658:	cmp	x21, x0
  43665c:	b.ls	436678 <ferror@plt+0x338a8>  // b.plast
  436660:	ldr	x1, [sp, #224]
  436664:	add	x0, x0, #0x1
  436668:	add	x1, x1, x0
  43666c:	sub	w0, w21, w0
  436670:	str	x1, [sp, #304]
  436674:	str	w0, [sp, #312]
  436678:	mov	w0, #0x1                   	// #1
  43667c:	str	w0, [sp, #184]
  436680:	ldr	w0, [sp, #376]
  436684:	cmp	w0, #0x15
  436688:	b.ne	4366f4 <ferror@plt+0x33924>  // b.any
  43668c:	ldr	x0, [sp, #336]
  436690:	tbnz	w0, #1, 4366f4 <ferror@plt+0x33924>
  436694:	ldr	w21, [x23, #4]
  436698:	cmp	w21, #0x1
  43669c:	b.ne	4366f4 <ferror@plt+0x33924>  // b.any
  4366a0:	ldr	x0, [sp, #232]
  4366a4:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  4366a8:	add	x1, x1, #0xc34
  4366ac:	bl	402ad0 <strcmp@plt>
  4366b0:	cbnz	w0, 4366f4 <ferror@plt+0x33924>
  4366b4:	ldp	x2, x3, [x23, #24]
  4366b8:	mov	x5, x20
  4366bc:	ldr	x6, [sp, #368]
  4366c0:	mov	x4, x19
  4366c4:	mov	w1, w24
  4366c8:	mov	x0, x27
  4366cc:	bl	4374b4 <ferror@plt+0x346e4>
  4366d0:	mov	w7, w0
  4366d4:	cbz	w0, 437138 <ferror@plt+0x34368>
  4366d8:	ldr	x0, [x23, #16]
  4366dc:	str	x0, [sp, #624]
  4366e0:	ldr	x22, [sp, #328]
  4366e4:	ldr	x0, [sp, #648]
  4366e8:	str	x0, [sp, #632]
  4366ec:	ldr	x0, [x23, #32]
  4366f0:	str	x0, [sp, #640]
  4366f4:	ldr	w0, [sp, #208]
  4366f8:	add	x23, x23, #0x40
  4366fc:	add	w0, w0, #0x1
  436700:	str	w0, [sp, #208]
  436704:	b	436258 <ferror@plt+0x33488>
  436708:	ldp	x2, x3, [x21, #24]
  43670c:	add	x6, sp, #0x1e0
  436710:	mov	x5, x20
  436714:	mov	x4, x19
  436718:	mov	w1, w24
  43671c:	mov	x0, x27
  436720:	bl	4374b4 <ferror@plt+0x346e4>
  436724:	mov	w7, w0
  436728:	cbz	w0, 437130 <ferror@plt+0x34360>
  43672c:	ldr	x0, [sp, #264]
  436730:	sub	w7, w23, #0x1
  436734:	add	x6, sp, #0x1f8
  436738:	mov	x5, x20
  43673c:	mov	x4, x19
  436740:	mov	w1, w24
  436744:	add	x7, x0, x7, lsl #6
  436748:	mov	x0, x27
  43674c:	str	x7, [sp, #192]
  436750:	ldp	x2, x3, [x7, #24]
  436754:	bl	4374b4 <ferror@plt+0x346e4>
  436758:	mov	w28, w0
  43675c:	cbz	w0, 437140 <ferror@plt+0x34370>
  436760:	mov	x3, x20
  436764:	mov	x2, x19
  436768:	mov	x0, x27
  43676c:	mov	x1, #0x18                  	// #24
  436770:	bl	434290 <ferror@plt+0x314c0>
  436774:	mov	x28, x0
  436778:	cbz	x0, 436908 <ferror@plt+0x33b38>
  43677c:	ldr	x0, [x21, #32]
  436780:	mov	x1, #0x18                  	// #24
  436784:	ldr	x7, [sp, #192]
  436788:	mov	x5, #0x0                   	// #0
  43678c:	udiv	x0, x0, x1
  436790:	ldr	x23, [sp, #480]
  436794:	ldr	x7, [x7, #32]
  436798:	mov	x4, x23
  43679c:	madd	x0, x0, x1, x23
  4367a0:	ldr	x8, [sp, #504]
  4367a4:	cmp	x0, x4
  4367a8:	b.ne	43686c <ferror@plt+0x33a9c>  // b.any
  4367ac:	mov	x9, #0x18                  	// #24
  4367b0:	mov	x3, x20
  4367b4:	mov	x2, x19
  4367b8:	mov	x0, x27
  4367bc:	mul	x6, x5, x9
  4367c0:	str	x8, [sp, #208]
  4367c4:	stp	x6, x5, [sp, #192]
  4367c8:	mov	x1, x6
  4367cc:	str	x7, [sp, #232]
  4367d0:	str	x4, [sp, #264]
  4367d4:	bl	434290 <ferror@plt+0x314c0>
  4367d8:	mov	x21, x0
  4367dc:	cbz	x0, 4368f0 <ferror@plt+0x33b20>
  4367e0:	ldp	x6, x5, [sp, #192]
  4367e4:	mov	x9, #0x18                  	// #24
  4367e8:	ldr	x8, [sp, #208]
  4367ec:	mov	w2, w9
  4367f0:	ldr	x7, [sp, #232]
  4367f4:	mov	w3, #0x0                   	// #0
  4367f8:	ldr	x4, [sp, #264]
  4367fc:	cmp	x4, x23
  436800:	b.ne	436894 <ferror@plt+0x33ac4>  // b.any
  436804:	mov	x1, x5
  436808:	mov	x0, x21
  43680c:	mov	x2, #0x18                  	// #24
  436810:	adrp	x3, 434000 <ferror@plt+0x31230>
  436814:	add	x3, x3, #0x950
  436818:	str	x5, [sp, #192]
  43681c:	bl	43a5bc <ferror@plt+0x377ec>
  436820:	stp	xzr, x21, [x28]
  436824:	add	x1, sp, #0x1e0
  436828:	ldr	x5, [sp, #192]
  43682c:	str	x5, [x28, #16]
  436830:	mov	x0, x27
  436834:	mov	x3, x20
  436838:	mov	x2, x19
  43683c:	bl	437570 <ferror@plt+0x347a0>
  436840:	ldr	x1, [sp, #248]
  436844:	mov	w0, #0x1                   	// #1
  436848:	str	w0, [x1]
  43684c:	add	x1, x27, #0x30
  436850:	ldr	w0, [x27, #8]
  436854:	cbz	w0, 436978 <ferror@plt+0x33ba8>
  436858:	mov	x0, x1
  43685c:	ldar	x2, [x0]
  436860:	cbz	x2, 436b18 <ferror@plt+0x33d48>
  436864:	mov	x0, x2
  436868:	b	43685c <ferror@plt+0x33a8c>
  43686c:	ldrb	w1, [x4, #4]
  436870:	and	w1, w1, #0xf
  436874:	sub	w1, w1, #0x1
  436878:	cmp	w1, #0x1
  43687c:	b.hi	43688c <ferror@plt+0x33abc>  // b.pmore
  436880:	ldrh	w1, [x4, #6]
  436884:	cbz	w1, 43688c <ferror@plt+0x33abc>
  436888:	add	x5, x5, #0x1
  43688c:	add	x4, x4, #0x18
  436890:	b	4367a4 <ferror@plt+0x339d4>
  436894:	ldrb	w0, [x23, #4]
  436898:	and	w0, w0, #0xf
  43689c:	sub	w0, w0, #0x1
  4368a0:	cmp	w0, #0x1
  4368a4:	b.hi	436970 <ferror@plt+0x33ba0>  // b.pmore
  4368a8:	ldrh	w0, [x23, #6]
  4368ac:	cbz	w0, 436970 <ferror@plt+0x33ba0>
  4368b0:	ldr	w0, [x23]
  4368b4:	cmp	x7, x0
  4368b8:	b.hi	436918 <ferror@plt+0x33b48>  // b.pmore
  4368bc:	str	x6, [sp, #192]
  4368c0:	mov	x0, x20
  4368c4:	mov	w2, #0x0                   	// #0
  4368c8:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  4368cc:	add	x1, x1, #0xc63
  4368d0:	blr	x19
  4368d4:	ldr	x6, [sp, #192]
  4368d8:	mov	x4, x20
  4368dc:	mov	x3, x19
  4368e0:	mov	x1, x21
  4368e4:	mov	x0, x27
  4368e8:	mov	x2, x6
  4368ec:	bl	4341d4 <ferror@plt+0x31404>
  4368f0:	mov	x4, x20
  4368f4:	mov	x3, x19
  4368f8:	mov	x1, x28
  4368fc:	mov	x0, x27
  436900:	mov	x2, #0x18                  	// #24
  436904:	bl	4341d4 <ferror@plt+0x31404>
  436908:	mov	w28, #0x1                   	// #1
  43690c:	mov	w7, w28
  436910:	mov	w21, w28
  436914:	b	436314 <ferror@plt+0x33544>
  436918:	umull	x1, w3, w2
  43691c:	add	x0, x8, x0
  436920:	add	x10, x21, x1
  436924:	str	x0, [x21, x1]
  436928:	ldr	x1, [x23, #8]
  43692c:	cbz	x22, 436958 <ferror@plt+0x33b88>
  436930:	ldr	x0, [x22]
  436934:	cmp	x0, x1
  436938:	b.hi	436958 <ferror@plt+0x33b88>  // b.pmore
  43693c:	ldr	x9, [x22, #16]
  436940:	add	x9, x0, x9
  436944:	cmp	x9, x1
  436948:	b.ls	436958 <ferror@plt+0x33b88>  // b.plast
  43694c:	sub	x1, x1, x0
  436950:	ldr	x0, [x22, #8]
  436954:	ldr	x1, [x0, x1]
  436958:	add	w3, w3, #0x1
  43695c:	ldr	x0, [sp, #240]
  436960:	add	x1, x0, x1
  436964:	str	x1, [x10, #8]
  436968:	ldr	x0, [x23, #16]
  43696c:	str	x0, [x10, #16]
  436970:	add	x23, x23, #0x18
  436974:	b	4367fc <ferror@plt+0x33a2c>
  436978:	ldr	x0, [x27, #48]
  43697c:	cbnz	x0, 436b0c <ferror@plt+0x33d3c>
  436980:	str	x28, [x1]
  436984:	mov	w0, #0x1                   	// #1
  436988:	str	w0, [sp, #192]
  43698c:	mov	x3, x20
  436990:	mov	x2, x19
  436994:	add	x1, sp, #0x1b0
  436998:	mov	x0, x27
  43699c:	bl	437570 <ferror@plt+0x347a0>
  4369a0:	mov	x0, x27
  4369a4:	mov	x3, x20
  4369a8:	mov	x2, x19
  4369ac:	add	x1, sp, #0x1c8
  4369b0:	bl	437570 <ferror@plt+0x347a0>
  4369b4:	ldr	x0, [sp, #256]
  4369b8:	cbz	x0, 436bc0 <ferror@plt+0x33df0>
  4369bc:	ldr	w21, [sp, #216]
  4369c0:	mov	x5, #0x21                  	// #33
  4369c4:	mov	x3, x20
  4369c8:	mov	x2, x19
  4369cc:	mov	x0, x27
  4369d0:	add	x23, x5, w21, uxtw #1
  4369d4:	mov	x1, x23
  4369d8:	bl	434290 <ferror@plt+0x314c0>
  4369dc:	mov	x28, x0
  4369e0:	cbz	x0, 436bc0 <ferror@plt+0x33df0>
  4369e4:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x245fc>
  4369e8:	add	x0, x0, #0xc84
  4369ec:	mov	w6, #0x2f                  	// #47
  4369f0:	ldp	x2, x3, [x0]
  4369f4:	stp	x2, x3, [x28]
  4369f8:	ldr	x1, [x0, #16]
  4369fc:	str	x1, [x28, #16]
  436a00:	ldrb	w0, [x0, #24]
  436a04:	add	x1, x28, #0x19
  436a08:	mov	x2, #0x0                   	// #0
  436a0c:	strb	w0, [x28, #24]
  436a10:	cmp	x21, x2
  436a14:	b.hi	436b40 <ferror@plt+0x33d70>  // b.pmore
  436a18:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x245fc>
  436a1c:	add	x0, x0, #0xc9e
  436a20:	strb	wzr, [x1, #6]
  436a24:	add	x3, sp, #0x2e0
  436a28:	ldr	w2, [x0]
  436a2c:	ldrh	w0, [x0, #4]
  436a30:	str	w2, [x1]
  436a34:	mov	x2, x20
  436a38:	strh	w0, [x1, #4]
  436a3c:	mov	x1, x19
  436a40:	mov	x0, x28
  436a44:	bl	43482c <ferror@plt+0x31a5c>
  436a48:	mov	w21, w0
  436a4c:	mov	x4, x20
  436a50:	mov	x3, x19
  436a54:	mov	x2, x23
  436a58:	mov	x1, x28
  436a5c:	mov	x0, x27
  436a60:	bl	4341d4 <ferror@plt+0x31404>
  436a64:	tbnz	w21, #31, 436bc0 <ferror@plt+0x33df0>
  436a68:	mov	x3, x20
  436a6c:	mov	x2, x19
  436a70:	add	x1, sp, #0x210
  436a74:	mov	x0, x27
  436a78:	bl	437570 <ferror@plt+0x347a0>
  436a7c:	cbz	w26, 436a94 <ferror@plt+0x33cc4>
  436a80:	mov	x3, x20
  436a84:	mov	x2, x19
  436a88:	add	x1, sp, #0x228
  436a8c:	mov	x0, x27
  436a90:	bl	437570 <ferror@plt+0x347a0>
  436a94:	ldr	w0, [sp, #184]
  436a98:	cbz	w0, 436ab0 <ferror@plt+0x33ce0>
  436a9c:	mov	x3, x20
  436aa0:	mov	x2, x19
  436aa4:	add	x1, sp, #0x240
  436aa8:	mov	x0, x27
  436aac:	bl	437570 <ferror@plt+0x347a0>
  436ab0:	ldp	x3, x7, [sp, #240]
  436ab4:	mov	w0, #0x1                   	// #1
  436ab8:	ldr	x6, [sp, #272]
  436abc:	str	w0, [sp, #24]
  436ac0:	ldr	x0, [sp, #1184]
  436ac4:	str	x0, [sp]
  436ac8:	str	xzr, [sp, #8]
  436acc:	mov	w2, w21
  436ad0:	str	wzr, [sp, #16]
  436ad4:	mov	x5, x20
  436ad8:	str	xzr, [sp, #32]
  436adc:	mov	x4, x19
  436ae0:	str	wzr, [sp, #40]
  436ae4:	mov	x0, x27
  436ae8:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x195fc>
  436aec:	add	x1, x1, #0xaff
  436af0:	bl	435f50 <ferror@plt+0x33180>
  436af4:	mov	w22, w0
  436af8:	mov	x2, x20
  436afc:	mov	x1, x19
  436b00:	tbz	w0, #31, 436b94 <ferror@plt+0x33dc4>
  436b04:	mov	w0, w21
  436b08:	b	436b98 <ferror@plt+0x33dc8>
  436b0c:	mov	x1, x0
  436b10:	ldr	x0, [x0]
  436b14:	b	43697c <ferror@plt+0x33bac>
  436b18:	ldxr	x2, [x0]
  436b1c:	cbnz	x2, 436b28 <ferror@plt+0x33d58>
  436b20:	stlxr	w3, x28, [x0]
  436b24:	cbnz	w3, 436b18 <ferror@plt+0x33d48>
  436b28:	dmb	ish
  436b2c:	cmp	x2, #0x0
  436b30:	b.eq	436984 <ferror@plt+0x33bb4>  // b.none
  436b34:	b	436858 <ferror@plt+0x33a88>
  436b38:	str	wzr, [sp, #192]
  436b3c:	b	43698c <ferror@plt+0x33bbc>
  436b40:	ldr	x0, [sp, #256]
  436b44:	ldrb	w0, [x0, x2]
  436b48:	lsr	w4, w0, #4
  436b4c:	and	w0, w0, #0xf
  436b50:	cmp	w4, #0x9
  436b54:	add	w7, w4, #0x30
  436b58:	add	w3, w4, #0x57
  436b5c:	add	w4, w0, #0x30
  436b60:	csel	w3, w3, w7, hi  // hi = pmore
  436b64:	cmp	w0, #0x9
  436b68:	strb	w3, [x1]
  436b6c:	add	w3, w0, #0x57
  436b70:	csel	w0, w3, w4, hi  // hi = pmore
  436b74:	strb	w0, [x1, #1]
  436b78:	cbz	x2, 436b88 <ferror@plt+0x33db8>
  436b7c:	add	x1, x1, #0x2
  436b80:	add	x2, x2, #0x1
  436b84:	b	436a10 <ferror@plt+0x33c40>
  436b88:	add	x1, x1, #0x3
  436b8c:	sturb	w6, [x1, #-1]
  436b90:	b	436b80 <ferror@plt+0x33db0>
  436b94:	mov	w0, w24
  436b98:	bl	4348c4 <ferror@plt+0x31af4>
  436b9c:	mov	w0, w22
  436ba0:	ldp	x29, x30, [sp, #80]
  436ba4:	ldp	x19, x20, [sp, #96]
  436ba8:	ldp	x21, x22, [sp, #112]
  436bac:	ldp	x23, x24, [sp, #128]
  436bb0:	ldp	x25, x26, [sp, #144]
  436bb4:	ldp	x27, x28, [sp, #160]
  436bb8:	add	sp, sp, #0x4a0
  436bbc:	ret
  436bc0:	cbz	w25, 436bd8 <ferror@plt+0x33e08>
  436bc4:	mov	x3, x20
  436bc8:	mov	x2, x19
  436bcc:	add	x1, sp, #0x210
  436bd0:	mov	x0, x27
  436bd4:	bl	437570 <ferror@plt+0x347a0>
  436bd8:	cbz	x22, 436bf0 <ferror@plt+0x33e20>
  436bdc:	mov	x3, x20
  436be0:	mov	x2, x19
  436be4:	add	x1, x22, #0x18
  436be8:	mov	x0, x27
  436bec:	bl	437570 <ferror@plt+0x347a0>
  436bf0:	ldr	x0, [sp, #280]
  436bf4:	cbz	x0, 436c54 <ferror@plt+0x33e84>
  436bf8:	ldr	x1, [sp, #296]
  436bfc:	mov	x2, x0
  436c00:	mov	x4, x20
  436c04:	mov	x3, x19
  436c08:	mov	x0, x27
  436c0c:	bl	434f08 <ferror@plt+0x32138>
  436c10:	mov	w21, w0
  436c14:	tbnz	w0, #31, 436c54 <ferror@plt+0x33e84>
  436c18:	ldr	w1, [sp, #292]
  436c1c:	cbz	w1, 436a80 <ferror@plt+0x33cb0>
  436c20:	add	x1, sp, #0x2e0
  436c24:	bl	45ea88 <_obstack_memory_used@@Base+0x1a084>
  436c28:	tbz	w0, #31, 436d0c <ferror@plt+0x33f3c>
  436c2c:	bl	402cf0 <__errno_location@plt>
  436c30:	ldr	w2, [x0]
  436c34:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  436c38:	mov	x0, x20
  436c3c:	add	x1, x1, #0xca5
  436c40:	blr	x19
  436c44:	mov	x2, x20
  436c48:	mov	x1, x19
  436c4c:	mov	w0, w21
  436c50:	bl	4348c4 <ferror@plt+0x31af4>
  436c54:	cbz	w26, 436c6c <ferror@plt+0x33e9c>
  436c58:	mov	x3, x20
  436c5c:	mov	x2, x19
  436c60:	add	x1, sp, #0x228
  436c64:	mov	x0, x27
  436c68:	bl	437570 <ferror@plt+0x347a0>
  436c6c:	ldr	x0, [sp, #224]
  436c70:	str	xzr, [sp, #392]
  436c74:	cbz	x0, 436d98 <ferror@plt+0x33fc8>
  436c78:	ldr	x1, [sp, #296]
  436c7c:	mov	x2, x0
  436c80:	mov	x4, x20
  436c84:	mov	x3, x19
  436c88:	mov	x0, x27
  436c8c:	bl	434f08 <ferror@plt+0x32138>
  436c90:	mov	w21, w0
  436c94:	tbnz	w0, #31, 436d98 <ferror@plt+0x33fc8>
  436c98:	mov	w2, w0
  436c9c:	ldr	w0, [sp, #312]
  436ca0:	str	w0, [sp, #40]
  436ca4:	mov	x5, x20
  436ca8:	ldr	x0, [sp, #304]
  436cac:	str	x0, [sp, #32]
  436cb0:	ldp	x3, x7, [sp, #240]
  436cb4:	mov	w0, #0x1                   	// #1
  436cb8:	str	w0, [sp, #24]
  436cbc:	add	x0, sp, #0x188
  436cc0:	ldr	x6, [sp, #272]
  436cc4:	str	x0, [sp, #8]
  436cc8:	ldr	x1, [sp, #296]
  436ccc:	mov	x4, x19
  436cd0:	ldr	x0, [sp, #1184]
  436cd4:	str	x0, [sp]
  436cd8:	str	wzr, [sp, #16]
  436cdc:	mov	x0, x27
  436ce0:	bl	435f50 <ferror@plt+0x33180>
  436ce4:	mov	w22, w0
  436ce8:	mov	x3, x20
  436cec:	mov	x2, x19
  436cf0:	add	x1, sp, #0x240
  436cf4:	mov	x0, x27
  436cf8:	bl	437570 <ferror@plt+0x347a0>
  436cfc:	tbz	w22, #31, 436db4 <ferror@plt+0x33fe4>
  436d00:	mov	x2, x20
  436d04:	mov	x1, x19
  436d08:	b	436b04 <ferror@plt+0x33d34>
  436d0c:	ldr	x3, [sp, #784]
  436d10:	add	x25, sp, #0x258
  436d14:	mov	x6, x25
  436d18:	mov	x5, x20
  436d1c:	mov	x4, x19
  436d20:	mov	w1, w21
  436d24:	mov	x0, x27
  436d28:	mov	x2, #0x0                   	// #0
  436d2c:	bl	4374b4 <ferror@plt+0x346e4>
  436d30:	cbz	w0, 436c44 <ferror@plt+0x33e74>
  436d34:	ldr	x2, [sp, #600]
  436d38:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x245fc>
  436d3c:	ldr	x3, [sp, #784]
  436d40:	add	x0, x0, #0xd3c
  436d44:	add	x0, x0, #0x4e0
  436d48:	mov	w22, #0xffffffff            	// #-1
  436d4c:	add	x3, x2, x3
  436d50:	cmp	x3, x2
  436d54:	b.hi	436d80 <ferror@plt+0x33fb0>  // b.pmore
  436d58:	mov	x0, x27
  436d5c:	mov	x3, x20
  436d60:	mov	x2, x19
  436d64:	mov	x1, x25
  436d68:	bl	437570 <ferror@plt+0x347a0>
  436d6c:	mvn	w22, w22
  436d70:	ldr	w0, [sp, #292]
  436d74:	cmp	w0, w22
  436d78:	b.eq	436a80 <ferror@plt+0x33cb0>  // b.none
  436d7c:	b	436c44 <ferror@plt+0x33e74>
  436d80:	ldrb	w1, [x2], #1
  436d84:	eor	w1, w1, w22
  436d88:	and	x1, x1, #0xff
  436d8c:	ldr	w1, [x0, x1, lsl #2]
  436d90:	eor	w22, w1, w22, lsr #8
  436d94:	b	436d50 <ferror@plt+0x33f80>
  436d98:	ldr	w0, [sp, #184]
  436d9c:	cbz	w0, 436db4 <ferror@plt+0x33fe4>
  436da0:	mov	x3, x20
  436da4:	mov	x2, x19
  436da8:	add	x1, sp, #0x240
  436dac:	mov	x0, x27
  436db0:	bl	437570 <ferror@plt+0x347a0>
  436db4:	add	x21, sp, #0x360
  436db8:	mov	w22, #0xa                   	// #10
  436dbc:	mov	x1, x21
  436dc0:	mov	x3, #0x0                   	// #0
  436dc4:	mov	x25, #0x0                   	// #0
  436dc8:	ldr	x2, [x1, #8]
  436dcc:	cbz	x2, 436dec <ferror@plt+0x3401c>
  436dd0:	ldr	x0, [x1]
  436dd4:	cbz	x25, 436e24 <ferror@plt+0x34054>
  436dd8:	cmp	x0, x25
  436ddc:	csel	x25, x25, x0, ge  // ge = tcont
  436de0:	add	x0, x0, x2
  436de4:	cmp	x3, x0
  436de8:	csel	x3, x3, x0, ge  // ge = tcont
  436dec:	add	x1, x1, #0x20
  436df0:	subs	w22, w22, #0x1
  436df4:	b.ne	436dc8 <ferror@plt+0x33ff8>  // b.any
  436df8:	cmp	x25, #0x0
  436dfc:	ccmp	x3, #0x0, #0x4, ne  // ne = any
  436e00:	b.ne	436e2c <ferror@plt+0x3405c>  // b.any
  436e04:	mov	x2, x20
  436e08:	mov	x1, x19
  436e0c:	mov	w0, w24
  436e10:	bl	4348c4 <ferror@plt+0x31af4>
  436e14:	mov	w28, w0
  436e18:	cbz	w0, 437158 <ferror@plt+0x34388>
  436e1c:	mov	w22, #0x1                   	// #1
  436e20:	b	436b9c <ferror@plt+0x33dcc>
  436e24:	mov	x25, x0
  436e28:	b	436de0 <ferror@plt+0x34010>
  436e2c:	add	x26, sp, #0x2e0
  436e30:	mov	x5, x20
  436e34:	mov	x6, x26
  436e38:	mov	x4, x19
  436e3c:	sub	x3, x3, x25
  436e40:	mov	x2, x25
  436e44:	mov	w1, w24
  436e48:	mov	x0, x27
  436e4c:	bl	4374b4 <ferror@plt+0x346e4>
  436e50:	mov	w28, w0
  436e54:	cbz	w0, 437158 <ferror@plt+0x34388>
  436e58:	mov	x2, x20
  436e5c:	mov	x1, x19
  436e60:	mov	w0, w24
  436e64:	bl	4348c4 <ferror@plt+0x31af4>
  436e68:	cbz	w0, 437154 <ferror@plt+0x34384>
  436e6c:	ldr	x3, [sp, #736]
  436e70:	mov	x0, x21
  436e74:	mov	w2, #0x0                   	// #0
  436e78:	ldr	x1, [x0, #8]
  436e7c:	cbnz	x1, 437088 <ferror@plt+0x342b8>
  436e80:	str	xzr, [x0, #16]
  436e84:	add	w2, w2, #0x1
  436e88:	add	x0, x0, #0x20
  436e8c:	cmp	w2, #0xa
  436e90:	b.ne	436e78 <ferror@plt+0x340a8>  // b.any
  436e94:	adrp	x25, 469000 <_obstack_memory_used@@Base+0x245fc>
  436e98:	add	x0, x25, #0xcab
  436e9c:	mov	x28, x21
  436ea0:	str	x0, [sp, #184]
  436ea4:	add	x0, sp, #0x258
  436ea8:	mov	w24, #0x5                   	// #5
  436eac:	mov	x23, #0x0                   	// #0
  436eb0:	str	x0, [sp, #200]
  436eb4:	add	x0, sp, #0x190
  436eb8:	str	x0, [sp, #208]
  436ebc:	ldr	x0, [x28, #8]
  436ec0:	cbnz	x0, 436f10 <ferror@plt+0x34140>
  436ec4:	ldr	x25, [x28, #168]
  436ec8:	cbz	x25, 436f10 <ferror@plt+0x34140>
  436ecc:	cbnz	x23, 436eec <ferror@plt+0x3411c>
  436ed0:	mov	x3, x20
  436ed4:	mov	x2, x19
  436ed8:	mov	x0, x27
  436edc:	mov	x1, #0x13b4                	// #5044
  436ee0:	bl	434290 <ferror@plt+0x314c0>
  436ee4:	mov	x23, x0
  436ee8:	cbz	x0, 4370e8 <ferror@plt+0x34318>
  436eec:	str	xzr, [sp, #400]
  436ef0:	cmp	x25, #0xb
  436ef4:	str	xzr, [sp, #600]
  436ef8:	b.hi	4370a4 <ferror@plt+0x342d4>  // b.pmore
  436efc:	ldr	x0, [sp, #400]
  436f00:	str	x0, [x28, #16]
  436f04:	ldr	x0, [sp, #600]
  436f08:	str	x0, [x28, #8]
  436f0c:	str	wzr, [x28, #24]
  436f10:	add	x28, x28, #0x20
  436f14:	subs	w24, w24, #0x1
  436f18:	b.ne	436ebc <ferror@plt+0x340ec>  // b.any
  436f1c:	mov	w0, #0x5                   	// #5
  436f20:	str	w0, [sp, #184]
  436f24:	ldr	x28, [x21, #8]
  436f28:	cbz	x28, 436fbc <ferror@plt+0x341ec>
  436f2c:	ldr	w0, [x21, #24]
  436f30:	cbz	w0, 436fbc <ferror@plt+0x341ec>
  436f34:	cbnz	x23, 436f54 <ferror@plt+0x34184>
  436f38:	mov	x3, x20
  436f3c:	mov	x2, x19
  436f40:	mov	x0, x27
  436f44:	mov	x1, #0x13b4                	// #5044
  436f48:	bl	434290 <ferror@plt+0x314c0>
  436f4c:	mov	x23, x0
  436f50:	cbz	x0, 4370e8 <ferror@plt+0x34318>
  436f54:	cmp	x28, #0x17
  436f58:	b.ls	437148 <ferror@plt+0x34378>  // b.plast
  436f5c:	ldr	x24, [x21, #16]
  436f60:	ldr	w8, [x24]
  436f64:	cmp	w8, #0x1
  436f68:	b.ne	437148 <ferror@plt+0x34378>  // b.any
  436f6c:	ldr	x1, [x24, #8]
  436f70:	mov	x3, x20
  436f74:	mov	x2, x19
  436f78:	mov	x0, x27
  436f7c:	str	w8, [sp, #200]
  436f80:	bl	434290 <ferror@plt+0x314c0>
  436f84:	mov	x25, x0
  436f88:	ldr	w8, [sp, #200]
  436f8c:	cbz	x0, 437174 <ferror@plt+0x343a4>
  436f90:	ldr	x4, [x24, #8]
  436f94:	mov	x3, x0
  436f98:	mov	x2, x23
  436f9c:	sub	x1, x28, #0x18
  436fa0:	add	x0, x24, #0x18
  436fa4:	bl	4351c4 <ferror@plt+0x323f4>
  436fa8:	cbz	w0, 437148 <ferror@plt+0x34378>
  436fac:	ldr	x0, [x24, #8]
  436fb0:	sub	w22, w22, #0x1
  436fb4:	stp	x0, x25, [x21, #8]
  436fb8:	str	wzr, [x21, #24]
  436fbc:	ldr	w0, [sp, #184]
  436fc0:	add	x21, x21, #0x20
  436fc4:	subs	w0, w0, #0x1
  436fc8:	str	w0, [sp, #184]
  436fcc:	b.ne	436f24 <ferror@plt+0x34154>  // b.any
  436fd0:	cbz	x23, 436fec <ferror@plt+0x3421c>
  436fd4:	mov	x4, x20
  436fd8:	mov	x3, x19
  436fdc:	mov	x1, x23
  436fe0:	mov	x0, x27
  436fe4:	mov	x2, #0x13b4                	// #5044
  436fe8:	bl	4341d4 <ferror@plt+0x31404>
  436fec:	cbnz	w22, 4370f4 <ferror@plt+0x34324>
  436ff0:	mov	w28, #0x0                   	// #0
  436ff4:	mov	x3, x20
  436ff8:	mov	x2, x19
  436ffc:	mov	x1, x26
  437000:	mov	x0, x27
  437004:	bl	437570 <ferror@plt+0x347a0>
  437008:	add	x0, sp, #0x368
  43700c:	ldr	x1, [sp, #240]
  437010:	ldp	x3, x2, [x0]
  437014:	ldp	x5, x4, [x0, #32]
  437018:	stp	x19, x20, [sp, #48]
  43701c:	ldr	x0, [sp, #1192]
  437020:	str	x0, [sp, #72]
  437024:	ldr	x0, [sp, #272]
  437028:	str	x0, [sp, #64]
  43702c:	ldr	x0, [sp, #392]
  437030:	str	x0, [sp, #40]
  437034:	ldr	w0, [sp, #316]
  437038:	ldr	x7, [sp, #936]
  43703c:	cmp	w0, #0x2
  437040:	cset	w0, eq  // eq = none
  437044:	str	w0, [sp, #32]
  437048:	ldr	x0, [sp, #1000]
  43704c:	str	x0, [sp, #24]
  437050:	ldr	x0, [sp, #1008]
  437054:	str	x0, [sp, #16]
  437058:	ldr	x6, [sp, #944]
  43705c:	ldr	x0, [sp, #968]
  437060:	str	x0, [sp, #8]
  437064:	ldr	x0, [sp, #976]
  437068:	str	x0, [sp]
  43706c:	mov	x0, x27
  437070:	bl	439e8c <ferror@plt+0x370bc>
  437074:	cbz	w0, 4370ec <ferror@plt+0x3431c>
  437078:	ldr	x0, [sp, #1184]
  43707c:	mov	w22, #0x1                   	// #1
  437080:	str	w22, [x0]
  437084:	b	436b9c <ferror@plt+0x33dcc>
  437088:	ldr	x1, [x0]
  43708c:	cmp	w2, #0x5
  437090:	cinc	w22, w22, cc  // cc = lo, ul, last
  437094:	sub	x1, x1, x25
  437098:	add	x1, x3, x1
  43709c:	str	x1, [x0, #16]
  4370a0:	b	436e84 <ferror@plt+0x340b4>
  4370a4:	ldr	x11, [x28, #176]
  4370a8:	mov	x2, #0x4                   	// #4
  4370ac:	ldr	x1, [sp, #184]
  4370b0:	mov	x0, x11
  4370b4:	str	x11, [sp, #216]
  4370b8:	bl	402a90 <memcmp@plt>
  4370bc:	cbnz	w0, 436efc <ferror@plt+0x3412c>
  4370c0:	ldp	x7, x6, [sp, #200]
  4370c4:	mov	x5, x20
  4370c8:	ldr	x11, [sp, #216]
  4370cc:	mov	x4, x19
  4370d0:	mov	x3, x23
  4370d4:	mov	x2, x25
  4370d8:	mov	x0, x27
  4370dc:	mov	x1, x11
  4370e0:	bl	435ea4 <ferror@plt+0x330d4>
  4370e4:	cbnz	w0, 436efc <ferror@plt+0x3412c>
  4370e8:	mov	w28, #0x1                   	// #1
  4370ec:	mov	w24, #0xffffffff            	// #-1
  4370f0:	b	437158 <ferror@plt+0x34388>
  4370f4:	mov	w28, #0x1                   	// #1
  4370f8:	b	437008 <ferror@plt+0x34238>
  4370fc:	mov	w22, #0xffffffff            	// #-1
  437100:	b	436b9c <ferror@plt+0x33dcc>
  437104:	mov	w26, #0x0                   	// #0
  437108:	mov	w25, #0x0                   	// #0
  43710c:	mov	w28, #0x0                   	// #0
  437110:	mov	w7, #0x0                   	// #0
  437114:	mov	x22, #0x0                   	// #0
  437118:	str	wzr, [sp, #184]
  43711c:	b	436314 <ferror@plt+0x33544>
  437120:	mov	w28, #0x0                   	// #0
  437124:	mov	w25, #0x1                   	// #1
  437128:	b	436310 <ferror@plt+0x33540>
  43712c:	mov	w26, #0x0                   	// #0
  437130:	mov	w28, #0x0                   	// #0
  437134:	b	436310 <ferror@plt+0x33540>
  437138:	mov	w28, #0x0                   	// #0
  43713c:	b	436314 <ferror@plt+0x33544>
  437140:	mov	w7, #0x1                   	// #1
  437144:	b	436310 <ferror@plt+0x33540>
  437148:	mov	x0, #0x0                   	// #0
  43714c:	mov	x25, #0x0                   	// #0
  437150:	b	436fb0 <ferror@plt+0x341e0>
  437154:	mov	w28, #0x1                   	// #1
  437158:	ldr	w0, [sp, #192]
  43715c:	cbz	w0, 43606c <ferror@plt+0x3329c>
  437160:	mov	w26, #0x0                   	// #0
  437164:	mov	x22, #0x0                   	// #0
  437168:	mov	w25, #0x0                   	// #0
  43716c:	str	wzr, [sp, #184]
  437170:	b	436370 <ferror@plt+0x335a0>
  437174:	mov	w28, w8
  437178:	b	4370ec <ferror@plt+0x3431c>
  43717c:	sub	sp, sp, #0x70
  437180:	stp	x29, x30, [sp, #48]
  437184:	add	x29, sp, #0x30
  437188:	ldr	x1, [x0, #8]
  43718c:	stp	x19, x20, [sp, #64]
  437190:	mov	x20, x0
  437194:	ldr	w0, [x2, #56]
  437198:	mov	x19, x2
  43719c:	str	x21, [sp, #80]
  4371a0:	cmn	w0, #0x1
  4371a4:	cbz	x1, 4371b0 <ferror@plt+0x343e0>
  4371a8:	ldrb	w1, [x1]
  4371ac:	cbnz	w1, 437220 <ferror@plt+0x34450>
  4371b0:	b.eq	43724c <ferror@plt+0x3447c>  // b.none
  4371b4:	ldr	x21, [x19, #48]
  4371b8:	mov	w1, #0xffffffff            	// #-1
  4371bc:	str	w1, [x19, #56]
  4371c0:	mov	w2, w0
  4371c4:	add	x1, sp, #0x64
  4371c8:	ldp	x0, x4, [x19]
  4371cc:	add	x6, sp, #0x68
  4371d0:	ldr	x3, [x20]
  4371d4:	ldr	x5, [x19, #16]
  4371d8:	ldr	x7, [x19, #32]
  4371dc:	stp	x1, xzr, [sp]
  4371e0:	mov	x1, x21
  4371e4:	str	wzr, [sp, #16]
  4371e8:	str	wzr, [sp, #24]
  4371ec:	str	xzr, [sp, #32]
  4371f0:	str	wzr, [sp, #40]
  4371f4:	bl	435f50 <ferror@plt+0x33180>
  4371f8:	cbz	w0, 43724c <ferror@plt+0x3447c>
  4371fc:	ldr	w0, [sp, #100]
  437200:	cbz	w0, 43724c <ferror@plt+0x3447c>
  437204:	ldr	x0, [x19, #40]
  437208:	mov	w1, #0x1                   	// #1
  43720c:	str	w1, [x0]
  437210:	ldr	x0, [x19, #24]
  437214:	ldr	x1, [sp, #104]
  437218:	str	x1, [x0]
  43721c:	b	43724c <ferror@plt+0x3447c>
  437220:	b.eq	437234 <ferror@plt+0x34464>  // b.none
  437224:	ldp	x1, x2, [x2, #8]
  437228:	bl	4348c4 <ferror@plt+0x31af4>
  43722c:	mov	w0, #0xffffffff            	// #-1
  437230:	str	w0, [x19, #56]
  437234:	ldp	x1, x2, [x19, #8]
  437238:	add	x3, sp, #0x60
  43723c:	ldr	x21, [x20, #8]
  437240:	mov	x0, x21
  437244:	bl	43482c <ferror@plt+0x31a5c>
  437248:	tbz	w0, #31, 4371c0 <ferror@plt+0x343f0>
  43724c:	mov	w0, #0x0                   	// #0
  437250:	ldp	x29, x30, [sp, #48]
  437254:	ldp	x19, x20, [sp, #64]
  437258:	ldr	x21, [sp, #80]
  43725c:	add	sp, sp, #0x70
  437260:	ret
  437264:	stp	x29, x30, [sp, #-80]!
  437268:	mov	x29, sp
  43726c:	stp	x21, x22, [sp, #32]
  437270:	mov	x21, x3
  437274:	mov	x22, x4
  437278:	mov	x3, x4
  43727c:	stp	x19, x20, [sp, #16]
  437280:	mov	x19, x1
  437284:	mov	x1, #0x13b4                	// #5044
  437288:	stp	x23, x24, [sp, #48]
  43728c:	mov	x24, x2
  437290:	mov	x23, x0
  437294:	mov	x2, x21
  437298:	stp	x25, x26, [sp, #64]
  43729c:	mov	x25, x5
  4372a0:	mov	x26, x6
  4372a4:	bl	434290 <ferror@plt+0x314c0>
  4372a8:	cbz	x0, 43733c <ferror@plt+0x3456c>
  4372ac:	str	xzr, [x25]
  4372b0:	mov	x20, x0
  4372b4:	str	xzr, [x26]
  4372b8:	cmp	x24, #0xb
  4372bc:	b.ls	437334 <ferror@plt+0x34564>  // b.plast
  4372c0:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  4372c4:	mov	x0, x19
  4372c8:	add	x1, x1, #0xcab
  4372cc:	mov	x2, #0x4                   	// #4
  4372d0:	bl	402a90 <memcmp@plt>
  4372d4:	cbnz	w0, 437334 <ferror@plt+0x34564>
  4372d8:	mov	x1, x19
  4372dc:	mov	x7, x26
  4372e0:	mov	x6, x25
  4372e4:	mov	x5, x22
  4372e8:	mov	x4, x21
  4372ec:	mov	x3, x20
  4372f0:	mov	x2, x24
  4372f4:	mov	x0, x23
  4372f8:	bl	435ea4 <ferror@plt+0x330d4>
  4372fc:	mov	w19, w0
  437300:	mov	x4, x22
  437304:	mov	x3, x21
  437308:	mov	x1, x20
  43730c:	mov	x0, x23
  437310:	mov	x2, #0x13b4                	// #5044
  437314:	bl	4341d4 <ferror@plt+0x31404>
  437318:	mov	w0, w19
  43731c:	ldp	x19, x20, [sp, #16]
  437320:	ldp	x21, x22, [sp, #32]
  437324:	ldp	x23, x24, [sp, #48]
  437328:	ldp	x25, x26, [sp, #64]
  43732c:	ldp	x29, x30, [sp], #80
  437330:	ret
  437334:	mov	w19, #0x1                   	// #1
  437338:	b	437300 <ferror@plt+0x34530>
  43733c:	mov	w19, #0x0                   	// #0
  437340:	b	437318 <ferror@plt+0x34548>
  437344:	sub	sp, sp, #0xe0
  437348:	stp	x29, x30, [sp, #48]
  43734c:	add	x29, sp, #0x30
  437350:	stp	x23, x24, [sp, #96]
  437354:	mov	x23, x3
  437358:	mov	x24, x1
  43735c:	stp	x27, x28, [sp, #128]
  437360:	adrp	x28, 434000 <ferror@plt+0x31230>
  437364:	add	x3, x28, #0x910
  437368:	str	wzr, [sp, #24]
  43736c:	add	x27, sp, #0x98
  437370:	str	xzr, [sp, #32]
  437374:	mov	x6, x27
  437378:	str	wzr, [sp, #40]
  43737c:	stp	x25, x26, [sp, #112]
  437380:	add	x25, sp, #0x94
  437384:	add	x26, sp, #0x90
  437388:	stp	x25, xzr, [sp]
  43738c:	mov	x7, x26
  437390:	str	x3, [sp, #152]
  437394:	mov	w3, #0x1                   	// #1
  437398:	str	w3, [sp, #16]
  43739c:	mov	x3, #0x0                   	// #0
  4373a0:	stp	x19, x20, [sp, #64]
  4373a4:	mov	x20, x5
  4373a8:	mov	x19, x0
  4373ac:	mov	x5, x4
  4373b0:	stp	x21, x22, [sp, #80]
  4373b4:	mov	x22, x4
  4373b8:	mov	w21, w2
  4373bc:	mov	x4, x23
  4373c0:	bl	435f50 <ferror@plt+0x33180>
  4373c4:	cbz	w0, 437474 <ferror@plt+0x346a4>
  4373c8:	cmp	w0, #0x0
  4373cc:	add	x1, sp, #0xa0
  4373d0:	csinv	w21, w21, wzr, lt  // lt = tstop
  4373d4:	adrp	x0, 437000 <ferror@plt+0x34230>
  4373d8:	add	x0, x0, #0x17c
  4373dc:	stp	x19, x23, [sp, #160]
  4373e0:	stp	x22, x27, [sp, #176]
  4373e4:	stp	x26, x25, [sp, #192]
  4373e8:	str	x24, [sp, #208]
  4373ec:	str	w21, [sp, #216]
  4373f0:	bl	402b10 <dl_iterate_phdr@plt>
  4373f4:	ldr	w0, [x19, #8]
  4373f8:	ldr	w1, [sp, #144]
  4373fc:	cbnz	w0, 43742c <ferror@plt+0x3465c>
  437400:	cbz	w1, 437418 <ferror@plt+0x34648>
  437404:	adrp	x0, 434000 <ferror@plt+0x31230>
  437408:	add	x0, x0, #0xd44
  43740c:	str	x0, [x19, #40]
  437410:	ldr	x0, [x19, #24]
  437414:	b	437450 <ferror@plt+0x34680>
  437418:	ldr	x0, [x19, #40]
  43741c:	cbnz	x0, 437410 <ferror@plt+0x34640>
  437420:	adrp	x0, 434000 <ferror@plt+0x31230>
  437424:	add	x0, x0, #0x938
  437428:	b	43740c <ferror@plt+0x3463c>
  43742c:	add	x0, x19, #0x28
  437430:	cbz	w1, 437494 <ferror@plt+0x346c4>
  437434:	adrp	x1, 434000 <ferror@plt+0x31230>
  437438:	add	x1, x1, #0xd44
  43743c:	stlr	x1, [x0]
  437440:	ldr	w0, [x19, #8]
  437444:	cbz	w0, 437410 <ferror@plt+0x34640>
  437448:	add	x19, x19, #0x18
  43744c:	ldar	x0, [x19]
  437450:	str	x0, [x20]
  437454:	ldr	x0, [x20]
  437458:	cbz	x0, 437468 <ferror@plt+0x34698>
  43745c:	add	x28, x28, #0x910
  437460:	cmp	x0, x28
  437464:	b.ne	437470 <ferror@plt+0x346a0>  // b.any
  437468:	ldr	x0, [sp, #152]
  43746c:	str	x0, [x20]
  437470:	mov	w0, #0x1                   	// #1
  437474:	ldp	x29, x30, [sp, #48]
  437478:	ldp	x19, x20, [sp, #64]
  43747c:	ldp	x21, x22, [sp, #80]
  437480:	ldp	x23, x24, [sp, #96]
  437484:	ldp	x25, x26, [sp, #112]
  437488:	ldp	x27, x28, [sp, #128]
  43748c:	add	sp, sp, #0xe0
  437490:	ret
  437494:	adrp	x1, 434000 <ferror@plt+0x31230>
  437498:	add	x1, x1, #0x938
  43749c:	ldxr	x2, [x0]
  4374a0:	cbnz	x2, 4374ac <ferror@plt+0x346dc>
  4374a4:	stlxr	w3, x1, [x0]
  4374a8:	cbnz	w3, 43749c <ferror@plt+0x346cc>
  4374ac:	dmb	ish
  4374b0:	b	437440 <ferror@plt+0x34670>
  4374b4:	stp	x29, x30, [sp, #-80]!
  4374b8:	mov	x29, sp
  4374bc:	stp	x19, x20, [sp, #16]
  4374c0:	sub	x19, x3, #0x1
  4374c4:	stp	x21, x22, [sp, #32]
  4374c8:	mov	x21, x4
  4374cc:	mov	x22, x5
  4374d0:	stp	x23, x24, [sp, #48]
  4374d4:	mov	x24, x2
  4374d8:	mov	x23, x6
  4374dc:	str	x25, [sp, #64]
  4374e0:	mov	w25, w1
  4374e4:	bl	4029b0 <getpagesize@plt>
  4374e8:	sxtw	x0, w0
  4374ec:	mov	w4, w25
  4374f0:	mov	w3, #0x2                   	// #2
  4374f4:	mov	w2, #0x1                   	// #1
  4374f8:	udiv	x20, x24, x0
  4374fc:	msub	w20, w20, w0, w24
  437500:	add	x1, x0, x20
  437504:	neg	x0, x0
  437508:	add	x19, x19, x1
  43750c:	sub	x5, x24, x20
  437510:	and	x19, x0, x19
  437514:	mov	x0, #0x0                   	// #0
  437518:	mov	x1, x19
  43751c:	bl	402af0 <mmap@plt>
  437520:	cmn	x0, #0x1
  437524:	b.ne	43755c <ferror@plt+0x3478c>  // b.any
  437528:	bl	402cf0 <__errno_location@plt>
  43752c:	ldr	w2, [x0]
  437530:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  437534:	mov	x0, x22
  437538:	add	x1, x1, #0xa50
  43753c:	blr	x21
  437540:	mov	w0, #0x0                   	// #0
  437544:	ldp	x19, x20, [sp, #16]
  437548:	ldp	x21, x22, [sp, #32]
  43754c:	ldp	x23, x24, [sp, #48]
  437550:	ldr	x25, [sp, #64]
  437554:	ldp	x29, x30, [sp], #80
  437558:	ret
  43755c:	add	x20, x0, x20
  437560:	stp	x20, x0, [x23]
  437564:	mov	w0, #0x1                   	// #1
  437568:	str	x19, [x23, #16]
  43756c:	b	437544 <ferror@plt+0x34774>
  437570:	mov	x4, x1
  437574:	stp	x29, x30, [sp, #-32]!
  437578:	mov	x29, sp
  43757c:	ldr	x0, [x4, #8]
  437580:	stp	x19, x20, [sp, #16]
  437584:	mov	x19, x2
  437588:	ldr	x1, [x1, #16]
  43758c:	mov	x20, x3
  437590:	bl	402ba0 <munmap@plt>
  437594:	tbz	w0, #31, 4375bc <ferror@plt+0x347ec>
  437598:	bl	402cf0 <__errno_location@plt>
  43759c:	ldr	w2, [x0]
  4375a0:	mov	x16, x19
  4375a4:	mov	x0, x20
  4375a8:	ldp	x19, x20, [sp, #16]
  4375ac:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x255fc>
  4375b0:	ldp	x29, x30, [sp], #32
  4375b4:	add	x1, x1, #0x61c
  4375b8:	br	x16
  4375bc:	ldp	x19, x20, [sp, #16]
  4375c0:	ldp	x29, x30, [sp], #32
  4375c4:	ret
  4375c8:	sub	w1, w1, #0x1
  4375cc:	cmp	w1, #0x7
  4375d0:	b.hi	437614 <ferror@plt+0x34844>  // b.pmore
  4375d4:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x255fc>
  4375d8:	add	x2, x2, #0x624
  4375dc:	ldrb	w1, [x2, w1, uxtw]
  4375e0:	adr	x2, 4375ec <ferror@plt+0x3481c>
  4375e4:	add	x1, x2, w1, sxtb #2
  4375e8:	br	x1
  4375ec:	cmp	x0, #0xff
  4375f0:	cset	w0, eq  // eq = none
  4375f4:	ret
  4375f8:	mov	x1, #0xffff                	// #65535
  4375fc:	cmp	x0, x1
  437600:	b	4375f0 <ferror@plt+0x34820>
  437604:	mov	x1, #0xffffffff            	// #4294967295
  437608:	b	4375fc <ferror@plt+0x3482c>
  43760c:	cmn	x0, #0x1
  437610:	b	4375f0 <ferror@plt+0x34820>
  437614:	mov	w0, #0x0                   	// #0
  437618:	b	4375f4 <ferror@plt+0x34824>
  43761c:	ldr	x1, [x1]
  437620:	ldr	x0, [x0]
  437624:	ldr	x2, [x1, #24]
  437628:	cmp	x2, x0
  43762c:	b.hi	437640 <ferror@plt+0x34870>  // b.pmore
  437630:	ldr	x1, [x1, #32]
  437634:	cmp	x1, x0
  437638:	cset	w0, ls  // ls = plast
  43763c:	ret
  437640:	mov	w0, #0xffffffff            	// #-1
  437644:	b	43763c <ferror@plt+0x3486c>
  437648:	ldr	x0, [x0]
  43764c:	ldr	x2, [x1]
  437650:	cmp	x2, x0
  437654:	b.hi	437668 <ferror@plt+0x34898>  // b.pmore
  437658:	ldr	x1, [x1, #8]
  43765c:	cmp	x1, x0
  437660:	cset	w0, ls  // ls = plast
  437664:	ret
  437668:	mov	w0, #0xffffffff            	// #-1
  43766c:	b	437664 <ferror@plt+0x34894>
  437670:	ldr	x0, [x0]
  437674:	ldr	x2, [x1]
  437678:	cmp	x2, x0
  43767c:	b.hi	437690 <ferror@plt+0x348c0>  // b.pmore
  437680:	ldr	x1, [x1, #8]
  437684:	cmp	x1, x0
  437688:	cset	w0, ls  // ls = plast
  43768c:	ret
  437690:	mov	w0, #0xffffffff            	// #-1
  437694:	b	43768c <ferror@plt+0x348bc>
  437698:	ldr	x0, [x0]
  43769c:	ldr	x2, [x1]
  4376a0:	cmp	x2, x0
  4376a4:	b.hi	4376b8 <ferror@plt+0x348e8>  // b.pmore
  4376a8:	ldr	x1, [x1, #24]
  4376ac:	cmp	x1, x0
  4376b0:	cset	w0, ls  // ls = plast
  4376b4:	ret
  4376b8:	mov	w0, #0xffffffff            	// #-1
  4376bc:	b	4376b4 <ferror@plt+0x348e4>
  4376c0:	ldr	x2, [x0]
  4376c4:	ldr	x1, [x1]
  4376c8:	cmp	x2, x1
  4376cc:	cset	w0, hi  // hi = pmore
  4376d0:	csinv	w0, w0, wzr, cs  // cs = hs, nlast
  4376d4:	ret
  4376d8:	stp	x29, x30, [sp, #-80]!
  4376dc:	mov	x29, sp
  4376e0:	stp	x21, x22, [sp, #32]
  4376e4:	mov	x21, x2
  4376e8:	ldr	x2, [x1, #32]
  4376ec:	stp	x19, x20, [sp, #16]
  4376f0:	str	x23, [sp, #48]
  4376f4:	str	x0, [sp, #72]
  4376f8:	cbnz	x2, 437714 <ferror@plt+0x34944>
  4376fc:	mov	w0, #0x0                   	// #0
  437700:	ldp	x19, x20, [sp, #16]
  437704:	ldp	x21, x22, [sp, #32]
  437708:	ldr	x23, [sp, #48]
  43770c:	ldp	x29, x30, [sp], #80
  437710:	ret
  437714:	mov	x22, x1
  437718:	mov	x23, x3
  43771c:	ldr	x1, [x1, #24]
  437720:	mov	x20, x4
  437724:	mov	x19, x5
  437728:	add	x0, sp, #0x48
  43772c:	adrp	x4, 437000 <ferror@plt+0x34230>
  437730:	mov	x3, #0x18                  	// #24
  437734:	add	x4, x4, #0x648
  437738:	bl	402960 <bsearch@plt>
  43773c:	mov	x6, x0
  437740:	cbz	x0, 4376fc <ferror@plt+0x3492c>
  437744:	ldp	x2, x3, [x22, #24]
  437748:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  43774c:	ldr	x0, [sp, #72]
  437750:	movk	x4, #0xaaab
  437754:	sub	x1, x6, x2
  437758:	asr	x1, x1, #3
  43775c:	mul	x1, x1, x4
  437760:	add	x1, x1, #0x1
  437764:	cmp	x1, x3
  437768:	b.cs	437784 <ferror@plt+0x349b4>  // b.hs, b.nlast
  43776c:	ldr	x1, [x6, #24]
  437770:	cmp	x1, x0
  437774:	b.hi	437784 <ferror@plt+0x349b4>  // b.pmore
  437778:	ldr	x1, [x6, #32]
  43777c:	cmp	x0, x1
  437780:	b.cc	4377d4 <ferror@plt+0x34a04>  // b.lo, b.ul, b.last
  437784:	ldr	x22, [x6, #16]
  437788:	mov	x5, x19
  43778c:	mov	x4, x20
  437790:	mov	x3, x23
  437794:	mov	x2, x21
  437798:	mov	x1, x22
  43779c:	bl	4376d8 <ferror@plt+0x34908>
  4377a0:	cbnz	w0, 437700 <ferror@plt+0x34930>
  4377a4:	ldr	w3, [x19]
  4377a8:	mov	x0, x23
  4377ac:	ldr	x2, [x20]
  4377b0:	ldr	x4, [x22]
  4377b4:	ldr	x1, [sp, #72]
  4377b8:	blr	x21
  4377bc:	cbnz	w0, 437700 <ferror@plt+0x34930>
  4377c0:	ldr	x1, [x22, #8]
  4377c4:	str	x1, [x20]
  4377c8:	ldr	w1, [x22, #16]
  4377cc:	str	w1, [x19]
  4377d0:	b	437700 <ferror@plt+0x34930>
  4377d4:	add	x6, x6, #0x18
  4377d8:	b	437754 <ferror@plt+0x34984>
  4377dc:	stp	x29, x30, [sp, #-48]!
  4377e0:	mov	x29, sp
  4377e4:	stp	x19, x20, [sp, #16]
  4377e8:	mov	x19, x2
  4377ec:	mov	x2, x3
  4377f0:	stp	x21, x22, [sp, #32]
  4377f4:	mov	x3, x4
  4377f8:	mov	x21, x5
  4377fc:	ldp	x22, x20, [x19]
  437800:	add	x22, x1, x22
  437804:	add	x20, x1, x20
  437808:	ldr	x1, [x5, #24]
  43780c:	cbz	x1, 43786c <ferror@plt+0x34a9c>
  437810:	mov	x4, #0x18                  	// #24
  437814:	ldr	x5, [x5]
  437818:	mul	x1, x1, x4
  43781c:	sub	x1, x1, #0x18
  437820:	add	x1, x5, x1
  437824:	ldr	x4, [x1, #8]
  437828:	cmp	x22, x4
  43782c:	b.eq	43783c <ferror@plt+0x34a6c>  // b.none
  437830:	add	x5, x4, #0x1
  437834:	cmp	x22, x5
  437838:	b.ne	43786c <ferror@plt+0x34a9c>  // b.any
  43783c:	ldr	x5, [x1, #16]
  437840:	ldr	x6, [x19, #16]
  437844:	cmp	x6, x5
  437848:	b.ne	43786c <ferror@plt+0x34a9c>  // b.any
  43784c:	cmp	x20, x4
  437850:	b.ls	437858 <ferror@plt+0x34a88>  // b.plast
  437854:	str	x20, [x1, #8]
  437858:	mov	w0, #0x1                   	// #1
  43785c:	ldp	x19, x20, [sp, #16]
  437860:	ldp	x21, x22, [sp, #32]
  437864:	ldp	x29, x30, [sp], #48
  437868:	ret
  43786c:	mov	x4, x21
  437870:	mov	x1, #0x18                  	// #24
  437874:	bl	4343e4 <ferror@plt+0x31614>
  437878:	cbz	x0, 4378a0 <ferror@plt+0x34ad0>
  43787c:	stp	x22, x20, [x19]
  437880:	ldp	x2, x3, [x19]
  437884:	stp	x2, x3, [x0]
  437888:	ldr	x1, [x19, #16]
  43788c:	str	x1, [x0, #16]
  437890:	ldr	x0, [x21, #24]
  437894:	add	x0, x0, #0x1
  437898:	str	x0, [x21, #24]
  43789c:	b	437858 <ferror@plt+0x34a88>
  4378a0:	mov	w0, #0x0                   	// #0
  4378a4:	b	43785c <ferror@plt+0x34a8c>
  4378a8:	stp	x29, x30, [sp, #-240]!
  4378ac:	mov	x3, x1
  4378b0:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x255fc>
  4378b4:	mov	x29, sp
  4378b8:	stp	x19, x20, [sp, #16]
  4378bc:	mov	x19, x0
  4378c0:	add	x20, sp, #0x28
  4378c4:	ldp	x4, x0, [x0]
  4378c8:	add	x2, x2, #0x6a0
  4378cc:	ldr	x5, [x19, #16]
  4378d0:	mov	x1, #0xc8                  	// #200
  4378d4:	sub	w5, w5, w0
  4378d8:	mov	x0, x20
  4378dc:	bl	402800 <snprintf@plt>
  4378e0:	ldp	x3, x0, [x19, #40]
  4378e4:	mov	x1, x20
  4378e8:	mov	w2, #0x0                   	// #0
  4378ec:	blr	x3
  4378f0:	ldp	x19, x20, [sp, #16]
  4378f4:	ldp	x29, x30, [sp], #240
  4378f8:	ret
  4378fc:	stp	x29, x30, [sp, #-48]!
  437900:	mov	x29, sp
  437904:	stp	x19, x20, [sp, #16]
  437908:	mov	x20, x2
  43790c:	mov	x19, x1
  437910:	ldr	x2, [x1, #32]
  437914:	stp	x21, x22, [sp, #32]
  437918:	mov	x22, x0
  43791c:	mov	x21, x3
  437920:	cbz	x2, 437938 <ferror@plt+0x34b68>
  437924:	ldr	x1, [x1, #40]
  437928:	mov	x4, x3
  43792c:	lsl	x2, x2, #3
  437930:	mov	x3, x20
  437934:	bl	4341d4 <ferror@plt+0x31404>
  437938:	mov	x4, x21
  43793c:	mov	x3, x20
  437940:	mov	x0, x22
  437944:	ldp	x21, x22, [sp, #32]
  437948:	ldp	x2, x1, [x19, #48]
  43794c:	ldp	x19, x20, [sp, #16]
  437950:	ldp	x29, x30, [sp], #48
  437954:	lsl	x2, x2, #3
  437958:	b	4341d4 <ferror@plt+0x31404>
  43795c:	stp	x29, x30, [sp, #-64]!
  437960:	mov	x29, sp
  437964:	stp	x19, x20, [sp, #16]
  437968:	mov	x20, x0
  43796c:	mov	x19, x1
  437970:	stp	x21, x22, [sp, #32]
  437974:	mov	x21, x2
  437978:	mov	x22, x3
  43797c:	str	x23, [sp, #48]
  437980:	mov	x23, #0x0                   	// #0
  437984:	ldp	x2, x1, [x19]
  437988:	cmp	x2, x23
  43798c:	b.hi	4379bc <ferror@plt+0x34bec>  // b.pmore
  437990:	mov	x4, x22
  437994:	mov	x3, x21
  437998:	mov	x0, x20
  43799c:	lsl	x2, x2, #5
  4379a0:	bl	4341d4 <ferror@plt+0x31404>
  4379a4:	ldp	x21, x22, [sp, #32]
  4379a8:	ldr	x23, [sp, #48]
  4379ac:	stp	xzr, xzr, [x19]
  4379b0:	ldp	x19, x20, [sp, #16]
  4379b4:	ldp	x29, x30, [sp], #64
  4379b8:	ret
  4379bc:	add	x1, x1, x23, lsl #5
  4379c0:	mov	x4, x22
  4379c4:	mov	x3, x21
  4379c8:	mov	x0, x20
  4379cc:	add	x23, x23, #0x1
  4379d0:	ldp	x2, x1, [x1, #16]
  4379d4:	lsl	x2, x2, #3
  4379d8:	bl	4341d4 <ferror@plt+0x31404>
  4379dc:	b	437984 <ferror@plt+0x34bb4>
  4379e0:	ldr	x3, [x0]
  4379e4:	ldr	x2, [x1]
  4379e8:	cmp	x3, x2
  4379ec:	b.cc	437a30 <ferror@plt+0x34c60>  // b.lo, b.ul, b.last
  4379f0:	b.hi	437a28 <ferror@plt+0x34c58>  // b.pmore
  4379f4:	ldr	x3, [x0, #8]
  4379f8:	ldr	x2, [x1, #8]
  4379fc:	cmp	x3, x2
  437a00:	b.cc	437a28 <ferror@plt+0x34c58>  // b.lo, b.ul, b.last
  437a04:	b.hi	437a30 <ferror@plt+0x34c60>  // b.pmore
  437a08:	ldr	x0, [x0, #16]
  437a0c:	ldr	x2, [x0, #56]
  437a10:	ldr	x0, [x1, #16]
  437a14:	ldr	x1, [x0, #56]
  437a18:	cmp	x2, x1
  437a1c:	cset	w0, gt
  437a20:	csinv	w0, w0, wzr, ge  // ge = tcont
  437a24:	ret
  437a28:	mov	w0, #0x1                   	// #1
  437a2c:	b	437a24 <ferror@plt+0x34c54>
  437a30:	mov	w0, #0xffffffff            	// #-1
  437a34:	b	437a24 <ferror@plt+0x34c54>
  437a38:	ldr	x3, [x0]
  437a3c:	ldr	x2, [x1]
  437a40:	cmp	x3, x2
  437a44:	b.cc	437a64 <ferror@plt+0x34c94>  // b.lo, b.ul, b.last
  437a48:	b.hi	437a6c <ferror@plt+0x34c9c>  // b.pmore
  437a4c:	ldr	w2, [x0, #20]
  437a50:	ldr	w1, [x1, #20]
  437a54:	cmp	w2, w1
  437a58:	cset	w0, gt
  437a5c:	csinv	w0, w0, wzr, ge  // ge = tcont
  437a60:	ret
  437a64:	mov	w0, #0xffffffff            	// #-1
  437a68:	b	437a60 <ferror@plt+0x34c90>
  437a6c:	mov	w0, #0x1                   	// #1
  437a70:	b	437a60 <ferror@plt+0x34c90>
  437a74:	stp	x29, x30, [sp, #-80]!
  437a78:	mov	x5, x0
  437a7c:	mov	x29, sp
  437a80:	stp	x19, x20, [sp, #16]
  437a84:	mov	x20, x2
  437a88:	ldr	x2, [x0]
  437a8c:	str	x21, [sp, #32]
  437a90:	sub	x0, x1, #0x1
  437a94:	mov	x21, x3
  437a98:	cmp	x0, x2
  437a9c:	b.cs	437abc <ferror@plt+0x34cec>  // b.hs, b.nlast
  437aa0:	lsl	x0, x1, #5
  437aa4:	ldr	x3, [x5, #8]
  437aa8:	sub	x0, x0, #0x20
  437aac:	add	x19, x3, x0
  437ab0:	ldr	x0, [x3, x0]
  437ab4:	cmp	x0, x1
  437ab8:	b.eq	437afc <ferror@plt+0x34d2c>  // b.none
  437abc:	add	x0, sp, #0x30
  437ac0:	str	x1, [sp, #48]
  437ac4:	ldr	x1, [x5, #8]
  437ac8:	stp	xzr, xzr, [sp, #56]
  437acc:	adrp	x4, 437000 <ferror@plt+0x34230>
  437ad0:	str	xzr, [x0, #24]
  437ad4:	add	x4, x4, #0x6c0
  437ad8:	mov	x3, #0x20                  	// #32
  437adc:	bl	402960 <bsearch@plt>
  437ae0:	mov	x19, x0
  437ae4:	cbnz	x0, 437afc <ferror@plt+0x34d2c>
  437ae8:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x255fc>
  437aec:	mov	x0, x21
  437af0:	add	x1, x1, #0x6af
  437af4:	mov	w2, #0x0                   	// #0
  437af8:	blr	x20
  437afc:	mov	x0, x19
  437b00:	ldp	x19, x20, [sp, #16]
  437b04:	ldr	x21, [sp, #32]
  437b08:	ldp	x29, x30, [sp], #80
  437b0c:	ret
  437b10:	stp	x29, x30, [sp, #-64]!
  437b14:	mov	x29, sp
  437b18:	stp	x19, x20, [sp, #16]
  437b1c:	mov	x19, x7
  437b20:	mov	w20, w4
  437b24:	ldr	x7, [x7, #24]
  437b28:	stp	x21, x22, [sp, #32]
  437b2c:	mov	x22, x2
  437b30:	str	x23, [sp, #48]
  437b34:	mov	x21, x3
  437b38:	mov	x2, x5
  437b3c:	mov	x3, x6
  437b40:	mov	x23, x1
  437b44:	cbz	x7, 437b80 <ferror@plt+0x34db0>
  437b48:	mov	x1, #0x18                  	// #24
  437b4c:	ldr	x4, [x19]
  437b50:	mul	x7, x7, x1
  437b54:	sub	x7, x7, #0x18
  437b58:	add	x1, x4, x7
  437b5c:	ldr	x4, [x4, x7]
  437b60:	cmp	x4, x22
  437b64:	b.ne	437b80 <ferror@plt+0x34db0>  // b.any
  437b68:	ldr	x4, [x1, #8]
  437b6c:	cmp	x4, x21
  437b70:	b.ne	437b80 <ferror@plt+0x34db0>  // b.any
  437b74:	ldr	w1, [x1, #16]
  437b78:	cmp	w1, w20
  437b7c:	b.eq	437bac <ferror@plt+0x34ddc>  // b.none
  437b80:	mov	x4, x19
  437b84:	mov	x1, #0x18                  	// #24
  437b88:	bl	4343e4 <ferror@plt+0x31614>
  437b8c:	cbz	x0, 437bc4 <ferror@plt+0x34df4>
  437b90:	ldr	x2, [x23]
  437b94:	ldr	x1, [x19, #24]
  437b98:	add	x22, x2, x22
  437b9c:	stp	x22, x21, [x0]
  437ba0:	stp	w20, w1, [x0, #16]
  437ba4:	add	x1, x1, #0x1
  437ba8:	str	x1, [x19, #24]
  437bac:	mov	w0, #0x1                   	// #1
  437bb0:	ldp	x19, x20, [sp, #16]
  437bb4:	ldp	x21, x22, [sp, #32]
  437bb8:	ldr	x23, [sp, #48]
  437bbc:	ldp	x29, x30, [sp], #64
  437bc0:	ret
  437bc4:	mov	w0, #0x0                   	// #0
  437bc8:	b	437bb0 <ferror@plt+0x34de0>
  437bcc:	stp	x29, x30, [sp, #-48]!
  437bd0:	mov	x29, sp
  437bd4:	stp	x21, x22, [sp, #32]
  437bd8:	mov	x21, x3
  437bdc:	add	x21, x21, x1
  437be0:	stp	x19, x20, [sp, #16]
  437be4:	add	x20, x4, x1
  437be8:	mov	x22, x2
  437bec:	ldr	x1, [x7, #24]
  437bf0:	mov	x2, x5
  437bf4:	mov	x3, x6
  437bf8:	mov	x19, x7
  437bfc:	cbz	x1, 437c58 <ferror@plt+0x34e88>
  437c00:	mov	x4, #0x18                  	// #24
  437c04:	mul	x1, x1, x4
  437c08:	ldr	x4, [x7]
  437c0c:	sub	x1, x1, #0x18
  437c10:	add	x1, x4, x1
  437c14:	ldr	x4, [x1, #8]
  437c18:	cmp	x21, x4
  437c1c:	b.eq	437c2c <ferror@plt+0x34e5c>  // b.none
  437c20:	add	x5, x4, #0x1
  437c24:	cmp	x21, x5
  437c28:	b.ne	437c58 <ferror@plt+0x34e88>  // b.any
  437c2c:	ldr	x5, [x1, #16]
  437c30:	cmp	x5, x22
  437c34:	b.ne	437c58 <ferror@plt+0x34e88>  // b.any
  437c38:	cmp	x20, x4
  437c3c:	b.ls	437c44 <ferror@plt+0x34e74>  // b.plast
  437c40:	str	x20, [x1, #8]
  437c44:	mov	w0, #0x1                   	// #1
  437c48:	ldp	x19, x20, [sp, #16]
  437c4c:	ldp	x21, x22, [sp, #32]
  437c50:	ldp	x29, x30, [sp], #48
  437c54:	ret
  437c58:	mov	x4, x19
  437c5c:	mov	x1, #0x18                  	// #24
  437c60:	bl	4343e4 <ferror@plt+0x31614>
  437c64:	cbz	x0, 437c80 <ferror@plt+0x34eb0>
  437c68:	stp	x21, x20, [x0]
  437c6c:	str	x22, [x0, #16]
  437c70:	ldr	x0, [x19, #24]
  437c74:	add	x0, x0, #0x1
  437c78:	str	x0, [x19, #24]
  437c7c:	b	437c44 <ferror@plt+0x34e74>
  437c80:	mov	w0, #0x0                   	// #0
  437c84:	b	437c48 <ferror@plt+0x34e78>
  437c88:	stp	x29, x30, [sp, #-32]!
  437c8c:	mov	x29, sp
  437c90:	ldr	x2, [x0, #24]
  437c94:	stp	x19, x20, [sp, #16]
  437c98:	mov	x19, x0
  437c9c:	cmp	x1, x2
  437ca0:	b.hi	437cc8 <ferror@plt+0x34ef8>  // b.pmore
  437ca4:	ldr	x0, [x0, #16]
  437ca8:	mov	w20, #0x1                   	// #1
  437cac:	add	x0, x0, x1
  437cb0:	sub	x1, x2, x1
  437cb4:	stp	x0, x1, [x19, #16]
  437cb8:	mov	w0, w20
  437cbc:	ldp	x19, x20, [sp, #16]
  437cc0:	ldp	x29, x30, [sp], #32
  437cc4:	ret
  437cc8:	ldr	w20, [x0, #56]
  437ccc:	cbnz	w20, 437ce8 <ferror@plt+0x34f18>
  437cd0:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x255fc>
  437cd4:	add	x1, x1, #0x6c9
  437cd8:	bl	4378a8 <ferror@plt+0x34ad8>
  437cdc:	mov	w0, #0x1                   	// #1
  437ce0:	str	w0, [x19, #56]
  437ce4:	b	437cb8 <ferror@plt+0x34ee8>
  437ce8:	mov	w20, #0x0                   	// #0
  437cec:	b	437cb8 <ferror@plt+0x34ee8>
  437cf0:	stp	x29, x30, [sp, #-32]!
  437cf4:	mov	x1, #0x4                   	// #4
  437cf8:	mov	x29, sp
  437cfc:	stp	x19, x20, [sp, #16]
  437d00:	mov	x19, x0
  437d04:	ldr	x20, [x0, #16]
  437d08:	bl	437c88 <ferror@plt+0x34eb8>
  437d0c:	cbz	w0, 437d2c <ferror@plt+0x34f5c>
  437d10:	ldr	w1, [x19, #32]
  437d14:	ldr	w0, [x20]
  437d18:	cbz	w1, 437d20 <ferror@plt+0x34f50>
  437d1c:	rev	w0, w0
  437d20:	ldp	x19, x20, [sp, #16]
  437d24:	ldp	x29, x30, [sp], #32
  437d28:	ret
  437d2c:	mov	w0, #0x0                   	// #0
  437d30:	b	437d20 <ferror@plt+0x34f50>
  437d34:	stp	x29, x30, [sp, #-32]!
  437d38:	mov	x1, #0x8                   	// #8
  437d3c:	mov	x29, sp
  437d40:	stp	x19, x20, [sp, #16]
  437d44:	mov	x19, x0
  437d48:	ldr	x20, [x0, #16]
  437d4c:	bl	437c88 <ferror@plt+0x34eb8>
  437d50:	cbz	w0, 437d70 <ferror@plt+0x34fa0>
  437d54:	ldr	w1, [x19, #32]
  437d58:	ldr	x0, [x20]
  437d5c:	cbz	w1, 437d64 <ferror@plt+0x34f94>
  437d60:	rev	x0, x0
  437d64:	ldp	x19, x20, [sp, #16]
  437d68:	ldp	x29, x30, [sp], #32
  437d6c:	ret
  437d70:	mov	x0, #0x0                   	// #0
  437d74:	b	437d64 <ferror@plt+0x34f94>
  437d78:	cbz	w1, 437d80 <ferror@plt+0x34fb0>
  437d7c:	b	437d34 <ferror@plt+0x34f64>
  437d80:	stp	x29, x30, [sp, #-16]!
  437d84:	mov	x29, sp
  437d88:	bl	437cf0 <ferror@plt+0x34f20>
  437d8c:	mov	w0, w0
  437d90:	ldp	x29, x30, [sp], #16
  437d94:	ret
  437d98:	stp	x29, x30, [sp, #-32]!
  437d9c:	mov	x1, #0x2                   	// #2
  437da0:	mov	x29, sp
  437da4:	stp	x19, x20, [sp, #16]
  437da8:	mov	x19, x0
  437dac:	ldr	x20, [x0, #16]
  437db0:	bl	437c88 <ferror@plt+0x34eb8>
  437db4:	cbz	w0, 437de0 <ferror@plt+0x35010>
  437db8:	ldrb	w1, [x20, #1]
  437dbc:	ldrb	w0, [x20]
  437dc0:	ldr	w3, [x19, #32]
  437dc4:	orr	w2, w1, w0, lsl #8
  437dc8:	cmp	w3, #0x0
  437dcc:	orr	w0, w0, w1, lsl #8
  437dd0:	csel	w0, w0, w2, eq  // eq = none
  437dd4:	ldp	x19, x20, [sp, #16]
  437dd8:	ldp	x29, x30, [sp], #32
  437ddc:	ret
  437de0:	mov	w0, #0x0                   	// #0
  437de4:	b	437dd4 <ferror@plt+0x35004>
  437de8:	stp	x29, x30, [sp, #-32]!
  437dec:	mov	x1, #0x1                   	// #1
  437df0:	mov	x29, sp
  437df4:	str	x19, [sp, #16]
  437df8:	ldr	x19, [x0, #16]
  437dfc:	bl	437c88 <ferror@plt+0x34eb8>
  437e00:	cbz	w0, 437e14 <ferror@plt+0x35044>
  437e04:	ldrb	w0, [x19]
  437e08:	ldr	x19, [sp, #16]
  437e0c:	ldp	x29, x30, [sp], #32
  437e10:	ret
  437e14:	mov	w0, #0x0                   	// #0
  437e18:	b	437e08 <ferror@plt+0x35038>
  437e1c:	stp	x29, x30, [sp, #-16]!
  437e20:	sub	w1, w1, #0x1
  437e24:	cmp	w1, #0x7
  437e28:	mov	x29, sp
  437e2c:	b.hi	437e78 <ferror@plt+0x350a8>  // b.pmore
  437e30:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x255fc>
  437e34:	add	x2, x2, #0x62c
  437e38:	ldrb	w1, [x2, w1, uxtw]
  437e3c:	adr	x2, 437e48 <ferror@plt+0x35078>
  437e40:	add	x1, x2, w1, sxtb #2
  437e44:	br	x1
  437e48:	bl	437de8 <ferror@plt+0x35018>
  437e4c:	and	x0, x0, #0xff
  437e50:	ldp	x29, x30, [sp], #16
  437e54:	ret
  437e58:	bl	437d98 <ferror@plt+0x34fc8>
  437e5c:	and	x0, x0, #0xffff
  437e60:	b	437e50 <ferror@plt+0x35080>
  437e64:	bl	437cf0 <ferror@plt+0x34f20>
  437e68:	mov	w0, w0
  437e6c:	b	437e50 <ferror@plt+0x35080>
  437e70:	ldp	x29, x30, [sp], #16
  437e74:	b	437d34 <ferror@plt+0x34f64>
  437e78:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x255fc>
  437e7c:	add	x1, x1, #0x6d9
  437e80:	bl	4378a8 <ferror@plt+0x34ad8>
  437e84:	mov	x0, #0x0                   	// #0
  437e88:	b	437e50 <ferror@plt+0x35080>
  437e8c:	stp	x29, x30, [sp, #-64]!
  437e90:	mov	x29, sp
  437e94:	stp	x19, x20, [sp, #16]
  437e98:	mov	x19, x0
  437e9c:	mov	x20, #0x0                   	// #0
  437ea0:	stp	x21, x22, [sp, #32]
  437ea4:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x255fc>
  437ea8:	add	x22, x22, #0x6fa
  437eac:	mov	w21, #0x0                   	// #0
  437eb0:	stp	x23, x24, [sp, #48]
  437eb4:	mov	w24, #0x0                   	// #0
  437eb8:	mov	x0, x19
  437ebc:	mov	x1, #0x1                   	// #1
  437ec0:	ldr	x23, [x19, #16]
  437ec4:	bl	437c88 <ferror@plt+0x34eb8>
  437ec8:	cbz	w0, 437f1c <ferror@plt+0x3514c>
  437ecc:	ldrb	w23, [x23]
  437ed0:	cmp	w21, #0x3f
  437ed4:	b.hi	437f04 <ferror@plt+0x35134>  // b.pmore
  437ed8:	and	x0, x23, #0x7f
  437edc:	lsl	x0, x0, x21
  437ee0:	orr	x20, x20, x0
  437ee4:	add	w21, w21, #0x7
  437ee8:	tbnz	w23, #7, 437eb8 <ferror@plt+0x350e8>
  437eec:	mov	x0, x20
  437ef0:	ldp	x19, x20, [sp, #16]
  437ef4:	ldp	x21, x22, [sp, #32]
  437ef8:	ldp	x23, x24, [sp, #48]
  437efc:	ldp	x29, x30, [sp], #64
  437f00:	ret
  437f04:	cbnz	w24, 437ee4 <ferror@plt+0x35114>
  437f08:	mov	x1, x22
  437f0c:	mov	x0, x19
  437f10:	mov	w24, #0x1                   	// #1
  437f14:	bl	4378a8 <ferror@plt+0x34ad8>
  437f18:	b	437ee4 <ferror@plt+0x35114>
  437f1c:	mov	x20, #0x0                   	// #0
  437f20:	b	437eec <ferror@plt+0x3511c>
  437f24:	stp	x29, x30, [sp, #-64]!
  437f28:	mov	x29, sp
  437f2c:	stp	x21, x22, [sp, #32]
  437f30:	mov	x21, x0
  437f34:	stp	x23, x24, [sp, #48]
  437f38:	adrp	x23, 46a000 <_obstack_memory_used@@Base+0x255fc>
  437f3c:	add	x23, x23, #0x6f3
  437f40:	mov	w24, #0x0                   	// #0
  437f44:	stp	x19, x20, [sp, #16]
  437f48:	mov	w20, #0x0                   	// #0
  437f4c:	mov	x19, #0x0                   	// #0
  437f50:	mov	x0, x21
  437f54:	mov	x1, #0x1                   	// #1
  437f58:	ldr	x22, [x21, #16]
  437f5c:	bl	437c88 <ferror@plt+0x34eb8>
  437f60:	cbz	w0, 437fcc <ferror@plt+0x351fc>
  437f64:	ldrb	w22, [x22]
  437f68:	cmp	w20, #0x3f
  437f6c:	b.hi	437fb4 <ferror@plt+0x351e4>  // b.pmore
  437f70:	and	x0, x22, #0x7f
  437f74:	lsl	x0, x0, x20
  437f78:	orr	x19, x19, x0
  437f7c:	add	w20, w20, #0x7
  437f80:	tbnz	w22, #7, 437f50 <ferror@plt+0x35180>
  437f84:	tbz	w22, #6, 437f9c <ferror@plt+0x351cc>
  437f88:	cmp	w20, #0x3f
  437f8c:	b.hi	437f9c <ferror@plt+0x351cc>  // b.pmore
  437f90:	mov	x0, #0xffffffffffffffff    	// #-1
  437f94:	lsl	x20, x0, x20
  437f98:	orr	x19, x19, x20
  437f9c:	mov	x0, x19
  437fa0:	ldp	x19, x20, [sp, #16]
  437fa4:	ldp	x21, x22, [sp, #32]
  437fa8:	ldp	x23, x24, [sp, #48]
  437fac:	ldp	x29, x30, [sp], #64
  437fb0:	ret
  437fb4:	cbnz	w24, 437f7c <ferror@plt+0x351ac>
  437fb8:	mov	x1, x23
  437fbc:	mov	x0, x21
  437fc0:	mov	w24, #0x1                   	// #1
  437fc4:	bl	4378a8 <ferror@plt+0x34ad8>
  437fc8:	b	437f7c <ferror@plt+0x351ac>
  437fcc:	mov	x0, #0x0                   	// #0
  437fd0:	b	437fa0 <ferror@plt+0x351d0>
  437fd4:	stp	x29, x30, [sp, #-32]!
  437fd8:	mov	x29, sp
  437fdc:	stp	x19, x20, [sp, #16]
  437fe0:	mov	x19, x0
  437fe4:	ldp	x20, x1, [x0, #16]
  437fe8:	mov	x0, x20
  437fec:	bl	402750 <strnlen@plt>
  437ff0:	add	x1, x0, #0x1
  437ff4:	mov	x0, x19
  437ff8:	bl	437c88 <ferror@plt+0x34eb8>
  437ffc:	cmp	w0, #0x0
  438000:	csel	x0, x20, xzr, ne  // ne = any
  438004:	ldp	x19, x20, [sp, #16]
  438008:	ldp	x29, x30, [sp], #32
  43800c:	ret
  438010:	stp	x29, x30, [sp, #-96]!
  438014:	mov	x29, sp
  438018:	stp	x19, x20, [sp, #16]
  43801c:	mov	x20, x1
  438020:	ldr	x19, [sp, #96]
  438024:	stp	x21, x22, [sp, #32]
  438028:	mov	w21, w2
  43802c:	mov	x22, x7
  438030:	stp	x23, x24, [sp, #48]
  438034:	mov	x23, x5
  438038:	mov	x24, x6
  43803c:	stp	x25, x26, [sp, #64]
  438040:	mov	w26, w3
  438044:	mov	w25, w4
  438048:	str	x27, [sp, #80]
  43804c:	adrp	x27, 46a000 <_obstack_memory_used@@Base+0x255fc>
  438050:	add	x27, x27, #0x634
  438054:	stp	xzr, xzr, [x19]
  438058:	cmp	w0, #0x20
  43805c:	b.hi	438080 <ferror@plt+0x352b0>  // b.pmore
  438060:	cbz	w0, 4380a0 <ferror@plt+0x352d0>
  438064:	sub	w0, w0, #0x1
  438068:	cmp	w0, #0x1f
  43806c:	b.hi	4380a0 <ferror@plt+0x352d0>  // b.pmore
  438070:	ldrh	w0, [x27, w0, uxtw #1]
  438074:	adr	x1, 438080 <ferror@plt+0x352b0>
  438078:	add	x0, x1, w0, sxth #2
  43807c:	br	x0
  438080:	mov	w1, #0x1f20                	// #7968
  438084:	cmp	w0, w1
  438088:	b.eq	4382fc <ferror@plt+0x3552c>  // b.none
  43808c:	b.hi	4380ac <ferror@plt+0x352dc>  // b.pmore
  438090:	mov	w1, #0xffffe0ff            	// #-7937
  438094:	add	w0, w0, w1
  438098:	cmp	w0, #0x1
  43809c:	b.ls	4382f4 <ferror@plt+0x35524>  // b.plast
  4380a0:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x255fc>
  4380a4:	add	x1, x1, #0x750
  4380a8:	b	43823c <ferror@plt+0x3546c>
  4380ac:	mov	w1, #0x1f21                	// #7969
  4380b0:	cmp	w0, w1
  4380b4:	b.ne	4380a0 <ferror@plt+0x352d0>  // b.any
  4380b8:	mov	w1, w21
  4380bc:	mov	x0, x20
  4380c0:	bl	437d78 <ferror@plt+0x34fa8>
  4380c4:	cbz	x22, 438310 <ferror@plt+0x35540>
  4380c8:	ldr	x1, [x22, #112]
  4380cc:	cmp	x1, x0
  4380d0:	b.hi	438328 <ferror@plt+0x35558>  // b.pmore
  4380d4:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x255fc>
  4380d8:	add	x1, x1, #0x72e
  4380dc:	b	43823c <ferror@plt+0x3546c>
  4380e0:	mov	w21, #0x1                   	// #1
  4380e4:	str	w21, [x19]
  4380e8:	mov	w1, w25
  4380ec:	mov	x0, x20
  4380f0:	bl	437e1c <ferror@plt+0x3504c>
  4380f4:	b	438218 <ferror@plt+0x35448>
  4380f8:	mov	w0, #0xa                   	// #10
  4380fc:	str	w0, [x19]
  438100:	mov	x0, x20
  438104:	bl	437d98 <ferror@plt+0x34fc8>
  438108:	and	x1, x0, #0xffff
  43810c:	mov	x0, x20
  438110:	ldp	x19, x20, [sp, #16]
  438114:	ldp	x21, x22, [sp, #32]
  438118:	ldp	x23, x24, [sp, #48]
  43811c:	ldp	x25, x26, [sp, #64]
  438120:	ldr	x27, [sp, #80]
  438124:	ldp	x29, x30, [sp], #96
  438128:	b	437c88 <ferror@plt+0x34eb8>
  43812c:	mov	w0, #0xa                   	// #10
  438130:	str	w0, [x19]
  438134:	mov	x0, x20
  438138:	bl	437cf0 <ferror@plt+0x34f20>
  43813c:	mov	w1, w0
  438140:	b	43810c <ferror@plt+0x3533c>
  438144:	mov	w0, #0x2                   	// #2
  438148:	str	w0, [x19]
  43814c:	mov	x0, x20
  438150:	bl	437d98 <ferror@plt+0x34fc8>
  438154:	and	x0, x0, #0xffff
  438158:	b	438218 <ferror@plt+0x35448>
  43815c:	mov	w0, #0x2                   	// #2
  438160:	str	w0, [x19]
  438164:	mov	x0, x20
  438168:	bl	437cf0 <ferror@plt+0x34f20>
  43816c:	mov	w0, w0
  438170:	b	438218 <ferror@plt+0x35448>
  438174:	mov	w0, #0x2                   	// #2
  438178:	str	w0, [x19]
  43817c:	mov	x0, x20
  438180:	bl	437d34 <ferror@plt+0x34f64>
  438184:	b	438218 <ferror@plt+0x35448>
  438188:	mov	w0, #0x4                   	// #4
  43818c:	str	w0, [x19]
  438190:	mov	x0, x20
  438194:	bl	437fd4 <ferror@plt+0x35204>
  438198:	cmp	x0, #0x0
  43819c:	str	x0, [x19, #8]
  4381a0:	cset	w0, ne  // ne = any
  4381a4:	ldp	x19, x20, [sp, #16]
  4381a8:	ldp	x21, x22, [sp, #32]
  4381ac:	ldp	x23, x24, [sp, #48]
  4381b0:	ldp	x25, x26, [sp, #64]
  4381b4:	ldr	x27, [sp, #80]
  4381b8:	ldp	x29, x30, [sp], #96
  4381bc:	ret
  4381c0:	mov	w0, #0xa                   	// #10
  4381c4:	str	w0, [x19]
  4381c8:	mov	x0, x20
  4381cc:	bl	437e8c <ferror@plt+0x350bc>
  4381d0:	mov	x1, x0
  4381d4:	b	43810c <ferror@plt+0x3533c>
  4381d8:	mov	w0, #0xa                   	// #10
  4381dc:	str	w0, [x19]
  4381e0:	mov	x0, x20
  4381e4:	bl	437de8 <ferror@plt+0x35018>
  4381e8:	and	x1, x0, #0xff
  4381ec:	b	43810c <ferror@plt+0x3533c>
  4381f0:	mov	w0, #0x2                   	// #2
  4381f4:	str	w0, [x19]
  4381f8:	mov	x0, x20
  4381fc:	bl	437de8 <ferror@plt+0x35018>
  438200:	and	x0, x0, #0xff
  438204:	b	438218 <ferror@plt+0x35448>
  438208:	mov	w0, #0x3                   	// #3
  43820c:	str	w0, [x19]
  438210:	mov	x0, x20
  438214:	bl	437f24 <ferror@plt+0x35154>
  438218:	str	x0, [x19, #8]
  43821c:	b	438314 <ferror@plt+0x35544>
  438220:	mov	w1, w21
  438224:	mov	x0, x20
  438228:	bl	437d78 <ferror@plt+0x34fa8>
  43822c:	cmp	x24, x0
  438230:	b.hi	43824c <ferror@plt+0x3547c>  // b.pmore
  438234:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x255fc>
  438238:	add	x1, x1, #0x714
  43823c:	mov	x0, x20
  438240:	bl	4378a8 <ferror@plt+0x34ad8>
  438244:	mov	w0, #0x0                   	// #0
  438248:	b	4381a4 <ferror@plt+0x353d4>
  43824c:	mov	w1, #0x4                   	// #4
  438250:	add	x0, x23, x0
  438254:	str	w1, [x19]
  438258:	b	438218 <ferror@plt+0x35448>
  43825c:	mov	w0, #0x2                   	// #2
  438260:	str	w0, [x19]
  438264:	mov	x0, x20
  438268:	bl	437e8c <ferror@plt+0x350bc>
  43826c:	b	438218 <ferror@plt+0x35448>
  438270:	mov	w0, #0x6                   	// #6
  438274:	str	w0, [x19]
  438278:	cmp	w26, #0x2
  43827c:	b.eq	4380e8 <ferror@plt+0x35318>  // b.none
  438280:	mov	w1, w21
  438284:	mov	x0, x20
  438288:	bl	437d78 <ferror@plt+0x34fa8>
  43828c:	b	438218 <ferror@plt+0x35448>
  438290:	mov	w0, #0x5                   	// #5
  438294:	b	4381f4 <ferror@plt+0x35424>
  438298:	mov	w0, #0x5                   	// #5
  43829c:	b	438148 <ferror@plt+0x35378>
  4382a0:	mov	w0, #0x5                   	// #5
  4382a4:	b	438160 <ferror@plt+0x35390>
  4382a8:	mov	w0, #0x5                   	// #5
  4382ac:	b	438178 <ferror@plt+0x353a8>
  4382b0:	mov	w0, #0x5                   	// #5
  4382b4:	b	438260 <ferror@plt+0x35490>
  4382b8:	mov	x0, x20
  4382bc:	bl	437e8c <ferror@plt+0x350bc>
  4382c0:	b	438054 <ferror@plt+0x35284>
  4382c4:	mov	w0, #0x8                   	// #8
  4382c8:	str	w0, [x19]
  4382cc:	b	438280 <ferror@plt+0x354b0>
  4382d0:	mov	w0, #0xb                   	// #11
  4382d4:	b	4381c4 <ferror@plt+0x353f4>
  4382d8:	mov	w0, #0x2                   	// #2
  4382dc:	str	w0, [x19]
  4382e0:	mov	x0, #0x1                   	// #1
  4382e4:	str	x0, [x19, #8]
  4382e8:	b	4381a4 <ferror@plt+0x353d4>
  4382ec:	mov	w0, #0x9                   	// #9
  4382f0:	b	438178 <ferror@plt+0x353a8>
  4382f4:	mov	w0, #0x8                   	// #8
  4382f8:	b	438260 <ferror@plt+0x35490>
  4382fc:	mov	w1, w21
  438300:	mov	x0, x20
  438304:	bl	437d78 <ferror@plt+0x34fa8>
  438308:	str	x0, [x19, #8]
  43830c:	cbnz	x22, 43831c <ferror@plt+0x3554c>
  438310:	str	wzr, [x19]
  438314:	mov	w0, #0x1                   	// #1
  438318:	b	4381a4 <ferror@plt+0x353d4>
  43831c:	mov	w0, #0x7                   	// #7
  438320:	str	w0, [x19]
  438324:	b	438314 <ferror@plt+0x35544>
  438328:	mov	w1, #0x4                   	// #4
  43832c:	str	w1, [x19]
  438330:	ldr	x1, [x22, #104]
  438334:	add	x0, x1, x0
  438338:	b	438218 <ferror@plt+0x35448>
  43833c:	sub	sp, sp, #0x170
  438340:	stp	x29, x30, [sp, #48]
  438344:	add	x29, sp, #0x30
  438348:	stp	x21, x22, [sp, #80]
  43834c:	ldp	x21, x22, [sp, #376]
  438350:	stp	x19, x20, [sp, #64]
  438354:	mov	x20, x2
  438358:	ldr	x19, [sp, #392]
  43835c:	stp	x23, x24, [sp, #96]
  438360:	add	x23, sp, #0xf0
  438364:	stp	x25, x26, [sp, #112]
  438368:	mov	x25, x0
  43836c:	mov	x26, x1
  438370:	stp	x27, x28, [sp, #128]
  438374:	add	x27, sp, #0x130
  438378:	stp	x5, x6, [sp, #160]
  43837c:	stp	x3, x4, [sp, #176]
  438380:	str	w7, [sp, #224]
  438384:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x255fc>
  438388:	add	x0, x0, #0x674
  43838c:	str	x0, [sp, #192]
  438390:	ldr	x0, [x20, #24]
  438394:	cbz	x0, 4383a8 <ferror@plt+0x355d8>
  438398:	mov	x0, x20
  43839c:	bl	437e8c <ferror@plt+0x350bc>
  4383a0:	mov	x1, x0
  4383a4:	cbnz	x0, 4383cc <ferror@plt+0x355fc>
  4383a8:	mov	w0, #0x1                   	// #1
  4383ac:	ldp	x29, x30, [sp, #48]
  4383b0:	ldp	x19, x20, [sp, #64]
  4383b4:	ldp	x21, x22, [sp, #80]
  4383b8:	ldp	x23, x24, [sp, #96]
  4383bc:	ldp	x25, x26, [sp, #112]
  4383c0:	ldp	x27, x28, [sp, #128]
  4383c4:	add	sp, sp, #0x170
  4383c8:	ret
  4383cc:	mov	x3, x22
  4383d0:	mov	x2, x21
  4383d4:	add	x0, x19, #0x58
  4383d8:	bl	437a74 <ferror@plt+0x34ca4>
  4383dc:	mov	x28, x0
  4383e0:	cbnz	x0, 4383ec <ferror@plt+0x3561c>
  4383e4:	mov	w0, #0x0                   	// #0
  4383e8:	b	4383ac <ferror@plt+0x355dc>
  4383ec:	ldr	x0, [sp, #408]
  4383f0:	cbz	x0, 438400 <ferror@plt+0x35630>
  4383f4:	ldr	x1, [sp, #408]
  4383f8:	ldr	w0, [x28, #8]
  4383fc:	str	w0, [x1]
  438400:	mov	x11, #0x0                   	// #0
  438404:	mov	x9, #0x0                   	// #0
  438408:	mov	w12, #0x0                   	// #0
  43840c:	mov	x10, #0x0                   	// #0
  438410:	mov	x24, #0x0                   	// #0
  438414:	stp	wzr, wzr, [sp, #148]
  438418:	str	wzr, [sp, #156]
  43841c:	ldr	x0, [x28, #16]
  438420:	cmp	x0, x11
  438424:	b.hi	43847c <ferror@plt+0x356ac>  // b.pmore
  438428:	ldr	w0, [x28, #8]
  43842c:	cmp	w0, #0x2e
  438430:	ccmp	w0, #0x11, #0x4, ne  // ne = any
  438434:	b.eq	4385f4 <ferror@plt+0x35824>  // b.none
  438438:	ldr	w0, [x28, #12]
  43843c:	cbz	w0, 438390 <ferror@plt+0x355c0>
  438440:	ldp	x5, x6, [sp, #160]
  438444:	stp	x21, x22, [sp, #8]
  438448:	ldr	w7, [sp, #224]
  43844c:	ldp	x3, x4, [sp, #176]
  438450:	str	xzr, [sp, #40]
  438454:	ldr	x0, [sp, #400]
  438458:	stp	x19, x0, [sp, #24]
  43845c:	mov	x2, x20
  438460:	ldr	x0, [sp, #368]
  438464:	str	x0, [sp]
  438468:	mov	x1, x26
  43846c:	mov	x0, x25
  438470:	bl	43833c <ferror@plt+0x3556c>
  438474:	cbnz	w0, 438384 <ferror@plt+0x355b4>
  438478:	b	4383e4 <ferror@plt+0x35614>
  43847c:	ldr	x0, [x28, #24]
  438480:	str	x27, [sp]
  438484:	ldp	x5, x6, [sp, #176]
  438488:	lsl	x13, x11, #3
  43848c:	add	x0, x0, x11, lsl #3
  438490:	ldr	w4, [x19, #48]
  438494:	ldp	w3, w2, [x19, #40]
  438498:	mov	x1, x20
  43849c:	ldr	w0, [x0, #4]
  4384a0:	ldr	x7, [sp, #368]
  4384a4:	stp	x11, x13, [sp, #200]
  4384a8:	str	x10, [sp, #216]
  4384ac:	str	w12, [sp, #228]
  4384b0:	str	x9, [sp, #232]
  4384b4:	bl	438010 <ferror@plt+0x35240>
  4384b8:	cbz	w0, 4383ac <ferror@plt+0x355dc>
  4384bc:	ldp	x11, x13, [sp, #200]
  4384c0:	ldr	x0, [x28, #24]
  4384c4:	ldr	w12, [sp, #228]
  4384c8:	ldr	x10, [sp, #216]
  4384cc:	ldr	w0, [x0, x13]
  4384d0:	ldr	x9, [sp, #232]
  4384d4:	cmp	w0, #0x1b
  4384d8:	b.hi	438514 <ferror@plt+0x35744>  // b.pmore
  4384dc:	cmp	w0, #0xf
  4384e0:	b.hi	4384f4 <ferror@plt+0x35724>  // b.pmore
  4384e4:	cmp	w0, #0x3
  4384e8:	b.eq	4385ac <ferror@plt+0x357dc>  // b.none
  4384ec:	add	x11, x11, #0x1
  4384f0:	b	43841c <ferror@plt+0x3564c>
  4384f4:	sub	w0, w0, #0x10
  4384f8:	cmp	w0, #0xb
  4384fc:	b.hi	4384ec <ferror@plt+0x3571c>  // b.pmore
  438500:	ldr	x1, [sp, #192]
  438504:	ldrb	w0, [x1, w0, uxtw]
  438508:	adr	x1, 438514 <ferror@plt+0x35744>
  43850c:	add	x0, x1, w0, sxtb #2
  438510:	br	x0
  438514:	cmp	w0, #0x55
  438518:	b.ne	4384ec <ferror@plt+0x3571c>  // b.any
  43851c:	ldr	w0, [sp, #304]
  438520:	cmp	w0, #0x2
  438524:	ccmp	w0, #0x8, #0x4, ne  // ne = any
  438528:	b.ne	4384ec <ferror@plt+0x3571c>  // b.any
  43852c:	mov	w0, #0x1                   	// #1
  438530:	str	w0, [sp, #156]
  438534:	ldr	x9, [sp, #312]
  438538:	b	4384ec <ferror@plt+0x3571c>
  43853c:	ldr	w0, [sp, #304]
  438540:	cmp	w0, #0x1
  438544:	b.ne	4384ec <ferror@plt+0x3571c>  // b.any
  438548:	str	w0, [sp, #152]
  43854c:	ldr	x24, [sp, #312]
  438550:	b	4384ec <ferror@plt+0x3571c>
  438554:	ldr	w0, [sp, #304]
  438558:	cmp	w0, #0x1
  43855c:	b.ne	43856c <ferror@plt+0x3579c>  // b.any
  438560:	str	w0, [sp, #148]
  438564:	ldr	x10, [sp, #312]
  438568:	b	4384ec <ferror@plt+0x3571c>
  43856c:	cmp	w0, #0x2
  438570:	b.ne	4384ec <ferror@plt+0x3571c>  // b.any
  438574:	mov	w12, #0x1                   	// #1
  438578:	str	w12, [sp, #148]
  43857c:	ldr	x10, [sp, #312]
  438580:	b	4384ec <ferror@plt+0x3571c>
  438584:	ldr	w0, [x28, #8]
  438588:	cmp	w0, #0x11
  43858c:	b.ne	4384ec <ferror@plt+0x3571c>  // b.any
  438590:	ldr	w0, [sp, #304]
  438594:	cmp	w0, #0x2
  438598:	ccmp	w0, #0x8, #0x4, ne  // ne = any
  43859c:	b.ne	4384ec <ferror@plt+0x3571c>  // b.any
  4385a0:	ldr	x0, [sp, #312]
  4385a4:	str	x0, [x19, #56]
  4385a8:	b	4384ec <ferror@plt+0x3571c>
  4385ac:	ldr	w0, [x28, #8]
  4385b0:	cmp	w0, #0x11
  4385b4:	b.ne	4384ec <ferror@plt+0x3571c>  // b.any
  4385b8:	ldr	w0, [sp, #304]
  4385bc:	cmp	w0, #0x4
  4385c0:	b.ne	4384ec <ferror@plt+0x3571c>  // b.any
  4385c4:	ldr	x0, [sp, #312]
  4385c8:	str	x0, [x19, #64]
  4385cc:	b	4384ec <ferror@plt+0x3571c>
  4385d0:	ldr	w0, [x28, #8]
  4385d4:	cmp	w0, #0x11
  4385d8:	b.ne	4384ec <ferror@plt+0x3571c>  // b.any
  4385dc:	ldr	w0, [sp, #304]
  4385e0:	cmp	w0, #0x4
  4385e4:	b.ne	4384ec <ferror@plt+0x3571c>  // b.any
  4385e8:	ldr	x0, [sp, #312]
  4385ec:	str	x0, [x19, #72]
  4385f0:	b	4384ec <ferror@plt+0x3571c>
  4385f4:	ldr	w0, [sp, #156]
  4385f8:	cbz	w0, 43871c <ferror@plt+0x3594c>
  4385fc:	ldr	x0, [sp, #168]
  438600:	cmp	x9, x0
  438604:	b.cc	438620 <ferror@plt+0x35850>  // b.lo, b.ul, b.last
  438608:	mov	x0, x22
  43860c:	mov	w2, #0x0                   	// #0
  438610:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x255fc>
  438614:	add	x1, x1, #0x7f9
  438618:	blr	x21
  43861c:	b	4383e4 <ferror@plt+0x35614>
  438620:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x245fc>
  438624:	add	x0, x0, #0xcd6
  438628:	str	x0, [sp, #304]
  43862c:	ldr	x0, [sp, #160]
  438630:	str	x0, [sp, #312]
  438634:	stp	x21, x22, [sp, #344]
  438638:	add	x0, x0, x9
  43863c:	str	x0, [sp, #320]
  438640:	ldr	x0, [sp, #168]
  438644:	str	wzr, [sp, #360]
  438648:	sub	x9, x0, x9
  43864c:	ldr	w0, [sp, #224]
  438650:	str	x9, [sp, #328]
  438654:	str	w0, [sp, #336]
  438658:	ldr	w0, [sp, #360]
  43865c:	cbnz	w0, 4383e4 <ferror@plt+0x35614>
  438660:	ldr	w1, [x19, #48]
  438664:	mov	x0, x27
  438668:	bl	437e1c <ferror@plt+0x3504c>
  43866c:	mov	x2, x0
  438670:	ldr	w1, [x19, #48]
  438674:	mov	x0, x27
  438678:	str	x2, [sp, #200]
  43867c:	bl	437e1c <ferror@plt+0x3504c>
  438680:	mov	x3, x0
  438684:	ldr	x2, [sp, #200]
  438688:	orr	x0, x2, x0
  43868c:	cbz	x0, 4386f0 <ferror@plt+0x35920>
  438690:	ldr	w1, [x19, #48]
  438694:	mov	x0, x2
  438698:	bl	4375c8 <ferror@plt+0x347f8>
  43869c:	ldr	x2, [sp, #200]
  4386a0:	cbnz	w0, 4386e8 <ferror@plt+0x35918>
  4386a4:	add	x0, sp, #0x200
  4386a8:	add	x2, x2, x24
  4386ac:	add	x3, x3, x24
  4386b0:	stp	x2, x3, [sp, #280]
  4386b4:	mov	x4, x22
  4386b8:	ldr	x5, [sp, #400]
  4386bc:	str	x19, [sp, #296]
  4386c0:	ldp	x0, x1, [x0, #-232]
  4386c4:	mov	x3, x21
  4386c8:	mov	x2, x23
  4386cc:	stp	x0, x1, [x23]
  4386d0:	mov	x1, x26
  4386d4:	mov	x0, x25
  4386d8:	str	x19, [x23, #16]
  4386dc:	bl	4377dc <ferror@plt+0x34a0c>
  4386e0:	cbnz	w0, 438658 <ferror@plt+0x35888>
  4386e4:	b	4383ac <ferror@plt+0x355dc>
  4386e8:	mov	x24, x3
  4386ec:	b	438658 <ferror@plt+0x35888>
  4386f0:	ldr	w0, [sp, #360]
  4386f4:	cbnz	w0, 4383e4 <ferror@plt+0x35614>
  4386f8:	ldr	w0, [x28, #8]
  4386fc:	cmp	w0, #0x11
  438700:	b.ne	438438 <ferror@plt+0x35668>  // b.any
  438704:	ldr	w0, [sp, #156]
  438708:	cbnz	w0, 4383a8 <ferror@plt+0x355d8>
  43870c:	ldp	w1, w0, [sp, #148]
  438710:	tst	w0, w1
  438714:	b.eq	438438 <ferror@plt+0x35668>  // b.none
  438718:	b	4383a8 <ferror@plt+0x355d8>
  43871c:	ldp	w1, w0, [sp, #148]
  438720:	tst	w0, w1
  438724:	b.eq	4386f8 <ferror@plt+0x35928>  // b.none
  438728:	cbz	w12, 438730 <ferror@plt+0x35960>
  43872c:	add	x10, x10, x24
  438730:	stp	x24, x10, [sp, #304]
  438734:	mov	x4, x22
  438738:	mov	x3, x21
  43873c:	ldr	x5, [sp, #400]
  438740:	str	x19, [sp, #320]
  438744:	ldp	x0, x1, [x27]
  438748:	mov	x2, x23
  43874c:	stp	x0, x1, [x23]
  438750:	mov	x1, x26
  438754:	mov	x0, x25
  438758:	str	x19, [x23, #16]
  43875c:	bl	4377dc <ferror@plt+0x34a0c>
  438760:	cbnz	w0, 4386f8 <ferror@plt+0x35928>
  438764:	b	4383ac <ferror@plt+0x355dc>
  438768:	ldr	x3, [x0]
  43876c:	ldr	x2, [x1]
  438770:	cmp	x3, x2
  438774:	b.cc	4387ac <ferror@plt+0x359dc>  // b.lo, b.ul, b.last
  438778:	b.hi	4387a4 <ferror@plt+0x359d4>  // b.pmore
  43877c:	ldr	x3, [x0, #8]
  438780:	ldr	x2, [x1, #8]
  438784:	cmp	x3, x2
  438788:	b.cc	4387a4 <ferror@plt+0x359d4>  // b.lo, b.ul, b.last
  43878c:	b.hi	4387ac <ferror@plt+0x359dc>  // b.pmore
  438790:	ldr	x0, [x0, #16]
  438794:	ldr	x1, [x1, #16]
  438798:	ldr	x0, [x0]
  43879c:	ldr	x1, [x1]
  4387a0:	b	402ad0 <strcmp@plt>
  4387a4:	mov	w0, #0x1                   	// #1
  4387a8:	ret
  4387ac:	mov	w0, #0xffffffff            	// #-1
  4387b0:	b	4387a8 <ferror@plt+0x359d8>
  4387b4:	sub	sp, sp, #0xd0
  4387b8:	stp	x29, x30, [sp, #16]
  4387bc:	add	x29, sp, #0x10
  4387c0:	stp	x21, x22, [sp, #48]
  4387c4:	mov	x21, x0
  4387c8:	ldr	x0, [x1, #16]
  4387cc:	stp	x19, x20, [sp, #32]
  4387d0:	stp	x23, x24, [sp, #64]
  4387d4:	cmp	x0, x2
  4387d8:	mov	x23, x3
  4387dc:	stp	x25, x26, [sp, #80]
  4387e0:	mov	x24, x4
  4387e4:	stp	x27, x28, [sp, #96]
  4387e8:	b.hi	438800 <ferror@plt+0x35a30>  // b.pmore
  4387ec:	ldr	x4, [x1, #8]
  4387f0:	sub	x5, x2, x0
  4387f4:	mov	x20, x1
  4387f8:	cmp	x5, x4
  4387fc:	b.cc	43881c <ferror@plt+0x35a4c>  // b.lo, b.ul, b.last
  438800:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x255fc>
  438804:	mov	x0, x24
  438808:	add	x1, x1, #0x768
  43880c:	mov	w2, #0x0                   	// #0
  438810:	blr	x23
  438814:	mov	x19, #0x0                   	// #0
  438818:	b	438930 <ferror@plt+0x35b60>
  43881c:	ldr	x1, [x21, #56]
  438820:	adrp	x3, 469000 <_obstack_memory_used@@Base+0x245fc>
  438824:	add	x3, x3, #0xcb0
  438828:	stp	x3, x1, [sp, #144]
  43882c:	add	x0, x0, x4
  438830:	ldr	x1, [x20]
  438834:	sub	x0, x0, x2
  438838:	add	x26, sp, #0x90
  43883c:	str	x0, [sp, #168]
  438840:	add	x1, x1, x5
  438844:	ldr	w0, [x21, #120]
  438848:	str	x1, [sp, #160]
  43884c:	str	w0, [sp, #176]
  438850:	mov	x0, x26
  438854:	stp	x23, x24, [sp, #184]
  438858:	str	wzr, [sp, #200]
  43885c:	bl	437e8c <ferror@plt+0x350bc>
  438860:	mov	x1, x0
  438864:	cbnz	x0, 43887c <ferror@plt+0x35aac>
  438868:	mov	x0, x26
  43886c:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x255fc>
  438870:	add	x1, x1, #0x796
  438874:	bl	4378a8 <ferror@plt+0x34ad8>
  438878:	b	438814 <ferror@plt+0x35a44>
  43887c:	mov	x3, x24
  438880:	mov	x2, x23
  438884:	add	x0, x20, #0x58
  438888:	bl	437a74 <ferror@plt+0x34ca4>
  43888c:	mov	x22, x0
  438890:	cbz	x0, 438814 <ferror@plt+0x35a44>
  438894:	add	x27, sp, #0x80
  438898:	mov	x25, #0x0                   	// #0
  43889c:	mov	x19, #0x0                   	// #0
  4388a0:	mov	w28, #0x2007                	// #8199
  4388a4:	ldr	x0, [x22, #16]
  4388a8:	cmp	x0, x25
  4388ac:	b.ls	438930 <ferror@plt+0x35b60>  // b.plast
  4388b0:	ldr	x0, [x22, #24]
  4388b4:	lsl	x8, x25, #3
  4388b8:	ldr	x7, [x21, #8]
  4388bc:	mov	x1, x26
  4388c0:	add	x0, x0, x25, lsl #3
  4388c4:	str	x8, [sp, #120]
  4388c8:	ldp	x5, x6, [x21, #104]
  4388cc:	str	x27, [sp]
  4388d0:	ldr	w0, [x0, #4]
  4388d4:	ldp	w3, w2, [x20, #40]
  4388d8:	ldr	w4, [x20, #48]
  4388dc:	bl	438010 <ferror@plt+0x35240>
  4388e0:	cbz	w0, 438814 <ferror@plt+0x35a44>
  4388e4:	ldr	x0, [x22, #24]
  4388e8:	ldr	x8, [sp, #120]
  4388ec:	add	x1, x0, x8
  4388f0:	ldr	w0, [x0, x8]
  4388f4:	cmp	w0, #0x47
  4388f8:	b.eq	43896c <ferror@plt+0x35b9c>  // b.none
  4388fc:	b.hi	438910 <ferror@plt+0x35b40>  // b.pmore
  438900:	cmp	w0, #0x3
  438904:	b.eq	438954 <ferror@plt+0x35b84>  // b.none
  438908:	add	x25, x25, #0x1
  43890c:	b	4388a4 <ferror@plt+0x35ad4>
  438910:	cmp	w0, #0x6e
  438914:	b.eq	438920 <ferror@plt+0x35b50>  // b.none
  438918:	cmp	w0, w28
  43891c:	b.ne	438908 <ferror@plt+0x35b38>  // b.any
  438920:	ldr	w0, [sp, #128]
  438924:	cmp	w0, #0x4
  438928:	b.ne	438908 <ferror@plt+0x35b38>  // b.any
  43892c:	ldr	x19, [sp, #136]
  438930:	mov	x0, x19
  438934:	ldp	x29, x30, [sp, #16]
  438938:	ldp	x19, x20, [sp, #32]
  43893c:	ldp	x21, x22, [sp, #48]
  438940:	ldp	x23, x24, [sp, #64]
  438944:	ldp	x25, x26, [sp, #80]
  438948:	ldp	x27, x28, [sp, #96]
  43894c:	add	sp, sp, #0xd0
  438950:	ret
  438954:	cbnz	x19, 438908 <ferror@plt+0x35b38>
  438958:	ldr	w0, [sp, #128]
  43895c:	cmp	w0, #0x4
  438960:	b.ne	438908 <ferror@plt+0x35b38>  // b.any
  438964:	ldr	x19, [sp, #136]
  438968:	b	438908 <ferror@plt+0x35b38>
  43896c:	ldr	w0, [x1, #4]
  438970:	cmp	w0, #0x20
  438974:	b.eq	438908 <ferror@plt+0x35b38>  // b.none
  438978:	mov	x4, x24
  43897c:	mov	x3, x23
  438980:	mov	x2, x27
  438984:	mov	x1, x20
  438988:	mov	x0, x21
  43898c:	bl	43899c <ferror@plt+0x35bcc>
  438990:	cmp	x0, #0x0
  438994:	csel	x19, x19, x0, eq  // eq = none
  438998:	b	438908 <ferror@plt+0x35b38>
  43899c:	stp	x29, x30, [sp, #-64]!
  4389a0:	mov	x29, sp
  4389a4:	stp	x19, x20, [sp, #16]
  4389a8:	mov	x19, x2
  4389ac:	ldr	w2, [x2]
  4389b0:	stp	x21, x22, [sp, #32]
  4389b4:	mov	x20, x0
  4389b8:	mov	x21, x3
  4389bc:	mov	x22, x4
  4389c0:	cmp	w2, #0x6
  4389c4:	b.ne	438a28 <ferror@plt+0x35c58>  // b.any
  4389c8:	ldp	x1, x2, [x20, #40]
  4389cc:	adrp	x4, 437000 <ferror@plt+0x34230>
  4389d0:	ldr	x0, [x19, #8]
  4389d4:	add	x4, x4, #0x61c
  4389d8:	mov	x3, #0x8                   	// #8
  4389dc:	str	x0, [sp, #56]
  4389e0:	add	x0, sp, #0x38
  4389e4:	bl	402960 <bsearch@plt>
  4389e8:	cbz	x0, 4389f8 <ferror@plt+0x35c28>
  4389ec:	ldr	x1, [x0]
  4389f0:	cbnz	x1, 438a08 <ferror@plt+0x35c38>
  4389f4:	mov	x0, #0x0                   	// #0
  4389f8:	ldp	x19, x20, [sp, #16]
  4389fc:	ldp	x21, x22, [sp, #32]
  438a00:	ldp	x29, x30, [sp], #64
  438a04:	ret
  438a08:	ldr	x2, [x19, #8]
  438a0c:	mov	x4, x22
  438a10:	ldr	x0, [x1, #24]
  438a14:	mov	x3, x21
  438a18:	sub	x2, x2, x0
  438a1c:	mov	x0, x20
  438a20:	bl	4387b4 <ferror@plt+0x359e4>
  438a24:	b	4389f8 <ferror@plt+0x35c28>
  438a28:	cmp	w2, #0x2
  438a2c:	ccmp	w2, #0x5, #0x4, ne  // ne = any
  438a30:	b.ne	438a3c <ferror@plt+0x35c6c>  // b.any
  438a34:	ldr	x2, [x19, #8]
  438a38:	b	438a20 <ferror@plt+0x35c50>
  438a3c:	cmp	w2, #0x7
  438a40:	b.ne	4389f4 <ferror@plt+0x35c24>  // b.any
  438a44:	ldr	x0, [x0, #8]
  438a48:	adrp	x4, 437000 <ferror@plt+0x34230>
  438a4c:	mov	x3, #0x8                   	// #8
  438a50:	add	x4, x4, #0x61c
  438a54:	ldp	x1, x2, [x0, #40]
  438a58:	ldr	x0, [x19, #8]
  438a5c:	str	x0, [sp, #56]
  438a60:	add	x0, sp, #0x38
  438a64:	bl	402960 <bsearch@plt>
  438a68:	cbz	x0, 4389f8 <ferror@plt+0x35c28>
  438a6c:	ldr	x1, [x0]
  438a70:	cbz	x1, 4389f4 <ferror@plt+0x35c24>
  438a74:	ldr	x2, [x19, #8]
  438a78:	mov	x4, x22
  438a7c:	ldr	x0, [x1, #24]
  438a80:	mov	x3, x21
  438a84:	sub	x2, x2, x0
  438a88:	ldr	x0, [x20, #8]
  438a8c:	b	438a20 <ferror@plt+0x35c50>
  438a90:	sub	sp, sp, #0x120
  438a94:	stp	x29, x30, [sp, #16]
  438a98:	add	x29, sp, #0x10
  438a9c:	stp	x19, x20, [sp, #32]
  438aa0:	mov	x19, x6
  438aa4:	mov	x20, x7
  438aa8:	stp	x21, x22, [sp, #48]
  438aac:	mov	x21, x1
  438ab0:	mov	x22, x2
  438ab4:	stp	x25, x26, [sp, #80]
  438ab8:	mov	x25, x4
  438abc:	add	x26, sp, #0xe0
  438ac0:	stp	x23, x24, [sp, #64]
  438ac4:	mov	x24, x0
  438ac8:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x195fc>
  438acc:	add	x0, x0, #0xaff
  438ad0:	stp	x27, x28, [sp, #96]
  438ad4:	stp	x3, x5, [sp, #128]
  438ad8:	str	x0, [sp, #160]
  438adc:	ldr	x0, [x25, #24]
  438ae0:	cbz	x0, 438af4 <ferror@plt+0x35d24>
  438ae4:	mov	x0, x25
  438ae8:	bl	437e8c <ferror@plt+0x350bc>
  438aec:	mov	x1, x0
  438af0:	cbnz	x0, 438b18 <ferror@plt+0x35d48>
  438af4:	mov	w0, #0x1                   	// #1
  438af8:	ldp	x29, x30, [sp, #16]
  438afc:	ldp	x19, x20, [sp, #32]
  438b00:	ldp	x21, x22, [sp, #48]
  438b04:	ldp	x23, x24, [sp, #64]
  438b08:	ldp	x25, x26, [sp, #80]
  438b0c:	ldp	x27, x28, [sp, #96]
  438b10:	add	sp, sp, #0x120
  438b14:	ret
  438b18:	mov	x3, x20
  438b1c:	mov	x2, x19
  438b20:	add	x0, x22, #0x58
  438b24:	bl	437a74 <ferror@plt+0x34ca4>
  438b28:	mov	x23, x0
  438b2c:	cbnz	x0, 438b38 <ferror@plt+0x35d68>
  438b30:	mov	w0, #0x0                   	// #0
  438b34:	b	438af8 <ferror@plt+0x35d28>
  438b38:	ldr	w0, [x0, #8]
  438b3c:	cmp	w0, #0x2e
  438b40:	ccmp	w0, #0x3, #0x4, ne  // ne = any
  438b44:	b.eq	439064 <ferror@plt+0x36294>  // b.none
  438b48:	cmp	w0, #0x1d
  438b4c:	b.ne	438c1c <ferror@plt+0x35e4c>  // b.any
  438b50:	ldr	x0, [sp, #296]
  438b54:	mov	x3, x20
  438b58:	mov	x2, x19
  438b5c:	mov	x1, #0x28                  	// #40
  438b60:	str	x0, [sp, #120]
  438b64:	mov	x0, x24
  438b68:	bl	434290 <ferror@plt+0x314c0>
  438b6c:	mov	x27, x0
  438b70:	cbz	x0, 438b30 <ferror@plt+0x35d60>
  438b74:	mov	w28, #0x1                   	// #1
  438b78:	stp	xzr, xzr, [x0]
  438b7c:	stp	xzr, xzr, [x0, #16]
  438b80:	str	xzr, [x0, #32]
  438b84:	mov	w10, #0x0                   	// #0
  438b88:	mov	x14, #0x0                   	// #0
  438b8c:	mov	w13, #0x0                   	// #0
  438b90:	mov	x12, #0x0                   	// #0
  438b94:	mov	x15, #0x0                   	// #0
  438b98:	mov	x11, #0x0                   	// #0
  438b9c:	stp	wzr, wzr, [sp, #148]
  438ba0:	str	wzr, [sp, #216]
  438ba4:	ldr	x0, [x23, #16]
  438ba8:	cmp	x0, x11
  438bac:	b.hi	438c30 <ferror@plt+0x35e60>  // b.pmore
  438bb0:	cbz	w28, 438bd8 <ferror@plt+0x35e08>
  438bb4:	ldr	x0, [x27]
  438bb8:	cbnz	x0, 438e98 <ferror@plt+0x360c8>
  438bbc:	mov	w28, #0x0                   	// #0
  438bc0:	mov	x4, x20
  438bc4:	mov	x3, x19
  438bc8:	mov	x1, x27
  438bcc:	mov	x0, x24
  438bd0:	mov	x2, #0x28                  	// #40
  438bd4:	bl	4341d4 <ferror@plt+0x31404>
  438bd8:	ldr	w0, [x23, #12]
  438bdc:	cbz	w0, 438adc <ferror@plt+0x35d0c>
  438be0:	cbnz	w28, 438fe8 <ferror@plt+0x36218>
  438be4:	ldp	x3, x5, [sp, #128]
  438be8:	mov	x7, x20
  438bec:	ldr	x0, [sp, #296]
  438bf0:	str	x0, [sp, #8]
  438bf4:	ldr	x0, [sp, #288]
  438bf8:	str	x0, [sp]
  438bfc:	mov	x6, x19
  438c00:	mov	x4, x25
  438c04:	mov	x2, x22
  438c08:	mov	x1, x21
  438c0c:	mov	x0, x24
  438c10:	bl	438a90 <ferror@plt+0x35cc0>
  438c14:	cbnz	w0, 438adc <ferror@plt+0x35d0c>
  438c18:	b	438b30 <ferror@plt+0x35d60>
  438c1c:	ldr	x0, [sp, #288]
  438c20:	mov	w28, #0x0                   	// #0
  438c24:	mov	x27, #0x0                   	// #0
  438c28:	str	x0, [sp, #120]
  438c2c:	b	438b84 <ferror@plt+0x35db4>
  438c30:	ldr	x0, [x23, #24]
  438c34:	lsl	x18, x11, #3
  438c38:	ldp	w3, w2, [x22, #40]
  438c3c:	mov	x1, x25
  438c40:	add	x0, x0, x11, lsl #3
  438c44:	ldr	w4, [x22, #48]
  438c48:	ldr	x7, [x21, #8]
  438c4c:	stp	x11, x18, [sp, #168]
  438c50:	ldp	x5, x6, [x21, #104]
  438c54:	str	x26, [sp]
  438c58:	stp	x15, x12, [sp, #184]
  438c5c:	ldr	w0, [x0, #4]
  438c60:	str	w13, [sp, #200]
  438c64:	str	x14, [sp, #208]
  438c68:	str	w10, [sp, #220]
  438c6c:	bl	438010 <ferror@plt+0x35240>
  438c70:	cbz	w0, 438b30 <ferror@plt+0x35d60>
  438c74:	ldr	w0, [x23, #8]
  438c78:	ldr	w13, [sp, #200]
  438c7c:	ldr	w10, [sp, #220]
  438c80:	cmp	w0, #0x11
  438c84:	ldp	x11, x18, [sp, #168]
  438c88:	ldp	x15, x12, [sp, #184]
  438c8c:	ldr	x14, [sp, #208]
  438c90:	b.ne	438cb8 <ferror@plt+0x35ee8>  // b.any
  438c94:	ldr	x0, [x23, #24]
  438c98:	ldr	w0, [x0, x18]
  438c9c:	cmp	w0, #0x11
  438ca0:	b.ne	438cb8 <ferror@plt+0x35ee8>  // b.any
  438ca4:	ldr	w0, [sp, #224]
  438ca8:	cmp	w0, #0x1
  438cac:	b.ne	438cb8 <ferror@plt+0x35ee8>  // b.any
  438cb0:	ldr	x0, [sp, #232]
  438cb4:	str	x0, [sp, #128]
  438cb8:	cbz	w28, 438cf0 <ferror@plt+0x35f20>
  438cbc:	ldr	x0, [x23, #24]
  438cc0:	add	x1, x0, x18
  438cc4:	ldr	w0, [x0, x18]
  438cc8:	cmp	w0, #0x55
  438ccc:	b.eq	438e7c <ferror@plt+0x360ac>  // b.none
  438cd0:	b.hi	438d60 <ferror@plt+0x35f90>  // b.pmore
  438cd4:	cmp	w0, #0x12
  438cd8:	b.eq	438e50 <ferror@plt+0x36080>  // b.none
  438cdc:	b.hi	438cf8 <ferror@plt+0x35f28>  // b.pmore
  438ce0:	cmp	w0, #0x3
  438ce4:	b.eq	438e18 <ferror@plt+0x36048>  // b.none
  438ce8:	cmp	w0, #0x11
  438cec:	b.eq	438e38 <ferror@plt+0x36068>  // b.none
  438cf0:	add	x11, x11, #0x1
  438cf4:	b	438ba4 <ferror@plt+0x35dd4>
  438cf8:	cmp	w0, #0x31
  438cfc:	b.eq	438d08 <ferror@plt+0x35f38>  // b.none
  438d00:	cmp	w0, #0x47
  438d04:	b.ne	438cf0 <ferror@plt+0x35f20>  // b.any
  438d08:	cbnz	w10, 438cf0 <ferror@plt+0x35f20>
  438d0c:	ldr	w0, [x1, #4]
  438d10:	cmp	w0, #0x20
  438d14:	b.eq	438d58 <ferror@plt+0x35f88>  // b.none
  438d18:	mov	x4, x20
  438d1c:	mov	x3, x19
  438d20:	mov	x2, x26
  438d24:	mov	x1, x22
  438d28:	mov	x0, x21
  438d2c:	stp	x11, x15, [sp, #168]
  438d30:	str	x12, [sp, #184]
  438d34:	str	w13, [sp, #192]
  438d38:	str	x14, [sp, #200]
  438d3c:	bl	43899c <ferror@plt+0x35bcc>
  438d40:	ldr	w13, [sp, #192]
  438d44:	ldp	x11, x15, [sp, #168]
  438d48:	ldr	x12, [sp, #184]
  438d4c:	ldr	x14, [sp, #200]
  438d50:	cbz	x0, 438d58 <ferror@plt+0x35f88>
  438d54:	str	x0, [x27]
  438d58:	mov	w10, #0x0                   	// #0
  438d5c:	b	438cf0 <ferror@plt+0x35f20>
  438d60:	cmp	w0, #0x59
  438d64:	b.eq	438e00 <ferror@plt+0x36030>  // b.none
  438d68:	b.hi	438d94 <ferror@plt+0x35fc4>  // b.pmore
  438d6c:	cmp	w0, #0x58
  438d70:	b.ne	438cf0 <ferror@plt+0x35f20>  // b.any
  438d74:	ldr	w0, [sp, #224]
  438d78:	cmp	w0, #0x2
  438d7c:	b.ne	438cf0 <ferror@plt+0x35f20>  // b.any
  438d80:	ldr	x0, [sp, #232]
  438d84:	cbnz	x0, 438dc4 <ferror@plt+0x35ff4>
  438d88:	ldr	x0, [sp, #160]
  438d8c:	str	x0, [x27, #8]
  438d90:	b	438cf0 <ferror@plt+0x35f20>
  438d94:	cmp	w0, #0x6e
  438d98:	b.eq	438da8 <ferror@plt+0x35fd8>  // b.none
  438d9c:	mov	w1, #0x2007                	// #8199
  438da0:	cmp	w0, w1
  438da4:	b.ne	438cf0 <ferror@plt+0x35f20>  // b.any
  438da8:	ldr	w0, [sp, #224]
  438dac:	cmp	w0, #0x4
  438db0:	b.ne	438cf0 <ferror@plt+0x35f20>  // b.any
  438db4:	ldr	x0, [sp, #232]
  438db8:	mov	w10, w28
  438dbc:	str	x0, [x27]
  438dc0:	b	438cf0 <ferror@plt+0x35f20>
  438dc4:	ldr	x2, [sp, #136]
  438dc8:	sub	x1, x0, #0x1
  438dcc:	ldr	x2, [x2, #48]
  438dd0:	cmp	x1, x2
  438dd4:	b.cc	438dec <ferror@plt+0x3601c>  // b.lo, b.ul, b.last
  438dd8:	mov	x0, x25
  438ddc:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x255fc>
  438de0:	add	x1, x1, #0x7bf
  438de4:	bl	4378a8 <ferror@plt+0x34ad8>
  438de8:	b	438b30 <ferror@plt+0x35d60>
  438dec:	ldr	x1, [sp, #136]
  438df0:	ldr	x1, [x1, #56]
  438df4:	add	x0, x1, x0, lsl #3
  438df8:	ldur	x0, [x0, #-8]
  438dfc:	b	438d8c <ferror@plt+0x35fbc>
  438e00:	ldr	w0, [sp, #224]
  438e04:	cmp	w0, #0x2
  438e08:	b.ne	438cf0 <ferror@plt+0x35f20>  // b.any
  438e0c:	ldr	x0, [sp, #232]
  438e10:	str	w0, [x27, #16]
  438e14:	b	438cf0 <ferror@plt+0x35f20>
  438e18:	ldr	x0, [x27]
  438e1c:	cbnz	x0, 438cf0 <ferror@plt+0x35f20>
  438e20:	ldr	w0, [sp, #224]
  438e24:	cmp	w0, #0x4
  438e28:	b.ne	438cf0 <ferror@plt+0x35f20>  // b.any
  438e2c:	ldr	x0, [sp, #232]
  438e30:	str	x0, [x27]
  438e34:	b	438cf0 <ferror@plt+0x35f20>
  438e38:	ldr	w0, [sp, #224]
  438e3c:	cmp	w0, #0x1
  438e40:	b.ne	438cf0 <ferror@plt+0x35f20>  // b.any
  438e44:	str	w28, [sp, #152]
  438e48:	ldr	x15, [sp, #232]
  438e4c:	b	438cf0 <ferror@plt+0x35f20>
  438e50:	ldr	w0, [sp, #224]
  438e54:	cmp	w0, #0x1
  438e58:	b.ne	438e68 <ferror@plt+0x36098>  // b.any
  438e5c:	ldr	x12, [sp, #232]
  438e60:	mov	w13, w28
  438e64:	b	438cf0 <ferror@plt+0x35f20>
  438e68:	cmp	w0, #0x2
  438e6c:	b.ne	438cf0 <ferror@plt+0x35f20>  // b.any
  438e70:	str	w28, [sp, #216]
  438e74:	ldr	x12, [sp, #232]
  438e78:	b	438e60 <ferror@plt+0x36090>
  438e7c:	ldr	w0, [sp, #224]
  438e80:	cmp	w0, #0x2
  438e84:	ccmp	w0, #0x8, #0x4, ne  // ne = any
  438e88:	b.ne	438cf0 <ferror@plt+0x35f20>  // b.any
  438e8c:	str	w28, [sp, #148]
  438e90:	ldr	x14, [sp, #232]
  438e94:	b	438cf0 <ferror@plt+0x35f20>
  438e98:	ldr	w0, [sp, #148]
  438e9c:	cbz	w0, 438f88 <ferror@plt+0x361b8>
  438ea0:	ldr	x0, [x21, #96]
  438ea4:	cmp	x14, x0
  438ea8:	b.cc	438ec4 <ferror@plt+0x360f4>  // b.lo, b.ul, b.last
  438eac:	mov	x0, x20
  438eb0:	mov	w2, #0x0                   	// #0
  438eb4:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x255fc>
  438eb8:	add	x1, x1, #0x7f0
  438ebc:	blr	x19
  438ec0:	b	438b30 <ferror@plt+0x35d60>
  438ec4:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  438ec8:	add	x1, x1, #0xcd6
  438ecc:	str	x1, [sp, #224]
  438ed0:	ldr	x1, [x21, #88]
  438ed4:	str	x1, [sp, #232]
  438ed8:	ldr	x28, [sp, #128]
  438edc:	add	x1, x1, x14
  438ee0:	sub	x14, x0, x14
  438ee4:	ldr	w0, [x21, #120]
  438ee8:	stp	x1, x14, [sp, #240]
  438eec:	str	w0, [sp, #256]
  438ef0:	stp	x19, x20, [sp, #264]
  438ef4:	str	wzr, [sp, #280]
  438ef8:	ldr	w0, [sp, #280]
  438efc:	cbnz	w0, 438b30 <ferror@plt+0x35d60>
  438f00:	ldr	w1, [x22, #48]
  438f04:	mov	x0, x26
  438f08:	bl	437e1c <ferror@plt+0x3504c>
  438f0c:	mov	x3, x0
  438f10:	ldr	w1, [x22, #48]
  438f14:	mov	x0, x26
  438f18:	str	x3, [sp, #152]
  438f1c:	bl	437e1c <ferror@plt+0x3504c>
  438f20:	mov	x4, x0
  438f24:	ldr	x3, [sp, #152]
  438f28:	orr	x0, x3, x0
  438f2c:	cbz	x0, 438f78 <ferror@plt+0x361a8>
  438f30:	ldr	w1, [x22, #48]
  438f34:	mov	x0, x3
  438f38:	bl	4375c8 <ferror@plt+0x347f8>
  438f3c:	ldr	x3, [sp, #152]
  438f40:	cbnz	w0, 438f70 <ferror@plt+0x361a0>
  438f44:	ldr	x1, [x21, #16]
  438f48:	mov	x6, x20
  438f4c:	ldr	x7, [sp, #120]
  438f50:	mov	x5, x19
  438f54:	add	x4, x4, x28
  438f58:	add	x3, x3, x28
  438f5c:	mov	x2, x27
  438f60:	mov	x0, x24
  438f64:	bl	437bcc <ferror@plt+0x34dfc>
  438f68:	cbnz	w0, 438ef8 <ferror@plt+0x36128>
  438f6c:	b	438b30 <ferror@plt+0x35d60>
  438f70:	mov	x28, x4
  438f74:	b	438ef8 <ferror@plt+0x36128>
  438f78:	ldr	w0, [sp, #280]
  438f7c:	cbnz	w0, 438b30 <ferror@plt+0x35d60>
  438f80:	ldr	w28, [sp, #148]
  438f84:	b	438bd8 <ferror@plt+0x35e08>
  438f88:	ldr	w0, [sp, #152]
  438f8c:	ands	w28, w0, w13
  438f90:	b.eq	438fcc <ferror@plt+0x361fc>  // b.none
  438f94:	ldr	w0, [sp, #216]
  438f98:	cbz	w0, 438fa0 <ferror@plt+0x361d0>
  438f9c:	add	x12, x12, x15
  438fa0:	ldr	x1, [x21, #16]
  438fa4:	mov	x6, x20
  438fa8:	ldr	x7, [sp, #120]
  438fac:	mov	x5, x19
  438fb0:	mov	x4, x12
  438fb4:	mov	x3, x15
  438fb8:	mov	x2, x27
  438fbc:	mov	x0, x24
  438fc0:	bl	437bcc <ferror@plt+0x34dfc>
  438fc4:	cbnz	w0, 438bd8 <ferror@plt+0x35e08>
  438fc8:	b	438b30 <ferror@plt+0x35d60>
  438fcc:	mov	x4, x20
  438fd0:	mov	x3, x19
  438fd4:	mov	x1, x27
  438fd8:	mov	x0, x24
  438fdc:	mov	x2, #0x28                  	// #40
  438fe0:	bl	4341d4 <ferror@plt+0x31404>
  438fe4:	b	438bd8 <ferror@plt+0x35e08>
  438fe8:	ldp	x3, x5, [sp, #128]
  438fec:	stp	xzr, xzr, [x26]
  438ff0:	mov	x7, x20
  438ff4:	stp	xzr, xzr, [x26, #16]
  438ff8:	mov	x6, x19
  438ffc:	mov	x4, x25
  439000:	ldr	x0, [sp, #288]
  439004:	stp	x0, x26, [sp]
  439008:	mov	x2, x22
  43900c:	mov	x1, x21
  439010:	mov	x0, x24
  439014:	bl	438a90 <ferror@plt+0x35cc0>
  439018:	cbz	w0, 438b30 <ferror@plt+0x35d60>
  43901c:	ldr	x0, [sp, #248]
  439020:	cbz	x0, 438adc <ferror@plt+0x35d0c>
  439024:	mov	x3, x20
  439028:	mov	x2, x19
  43902c:	mov	x1, x26
  439030:	mov	x0, x24
  439034:	bl	43450c <ferror@plt+0x3173c>
  439038:	cbz	w0, 438b30 <ferror@plt+0x35d60>
  43903c:	ldr	x1, [sp, #248]
  439040:	adrp	x3, 438000 <ferror@plt+0x35230>
  439044:	ldr	x23, [sp, #224]
  439048:	add	x3, x3, #0x768
  43904c:	mov	x2, #0x18                  	// #24
  439050:	mov	x0, x23
  439054:	bl	43a5bc <ferror@plt+0x377ec>
  439058:	ldr	x0, [sp, #248]
  43905c:	stp	x23, x0, [x27, #24]
  439060:	b	438adc <ferror@plt+0x35d0c>
  439064:	cmp	w0, #0x1d
  439068:	ldp	x1, x0, [sp, #288]
  43906c:	csel	x0, x0, x1, eq  // eq = none
  439070:	b	438b54 <ferror@plt+0x35d84>
  439074:	sub	sp, sp, #0x1d0
  439078:	stp	x29, x30, [sp, #16]
  43907c:	add	x29, sp, #0x10
  439080:	str	x2, [sp, #232]
  439084:	ldr	x2, [x1, #32]
  439088:	stp	x19, x20, [sp, #32]
  43908c:	stp	x21, x22, [sp, #48]
  439090:	mov	x21, x0
  439094:	mov	w0, #0x1                   	// #1
  439098:	stp	x23, x24, [sp, #64]
  43909c:	mov	x23, x1
  4390a0:	stp	x25, x26, [sp, #80]
  4390a4:	stp	x27, x28, [sp, #96]
  4390a8:	str	w0, [x6]
  4390ac:	str	x3, [sp, #144]
  4390b0:	str	x6, [sp, #168]
  4390b4:	cbz	x2, 439244 <ferror@plt+0x36474>
  4390b8:	ldr	x1, [x1, #24]
  4390bc:	add	x0, sp, #0xe8
  4390c0:	mov	x24, x4
  4390c4:	mov	x22, x5
  4390c8:	adrp	x4, 437000 <ferror@plt+0x34230>
  4390cc:	mov	x3, #0x18                  	// #24
  4390d0:	add	x4, x4, #0x670
  4390d4:	str	x0, [sp, #176]
  4390d8:	bl	402960 <bsearch@plt>
  4390dc:	mov	x20, x0
  4390e0:	cbz	x0, 439244 <ferror@plt+0x36474>
  4390e4:	ldp	x2, x3, [x23, #24]
  4390e8:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4390ec:	ldr	x1, [sp, #232]
  4390f0:	movk	x4, #0xaaab
  4390f4:	sub	x0, x20, x2
  4390f8:	asr	x0, x0, #3
  4390fc:	mul	x0, x0, x4
  439100:	add	x0, x0, #0x1
  439104:	cmp	x0, x3
  439108:	b.cs	439124 <ferror@plt+0x36354>  // b.hs, b.nlast
  43910c:	ldr	x0, [x20, #24]
  439110:	cmp	x0, x1
  439114:	b.hi	439124 <ferror@plt+0x36354>  // b.pmore
  439118:	ldr	x0, [x20, #32]
  43911c:	cmp	x1, x0
  439120:	b.cc	439270 <ferror@plt+0x364a0>  // b.lo, b.ul, b.last
  439124:	ldr	x0, [x20, #16]
  439128:	ldr	w3, [x21, #8]
  43912c:	ldr	x1, [x0, #104]
  439130:	str	x0, [sp, #120]
  439134:	ldr	x0, [x23, #24]
  439138:	cmp	x0, x20
  43913c:	b.cs	43915c <ferror@plt+0x3638c>  // b.hs, b.nlast
  439140:	ldur	x2, [x20, #-24]
  439144:	ldr	x0, [sp, #232]
  439148:	cmp	x2, x0
  43914c:	b.hi	43915c <ferror@plt+0x3638c>  // b.pmore
  439150:	ldur	x2, [x20, #-16]
  439154:	cmp	x0, x2
  439158:	b.cc	439278 <ferror@plt+0x364a8>  // b.lo, b.ul, b.last
  43915c:	ldr	w0, [x21, #8]
  439160:	cbz	w0, 439170 <ferror@plt+0x363a0>
  439164:	ldr	x0, [sp, #120]
  439168:	add	x0, x0, #0x68
  43916c:	ldar	x1, [x0]
  439170:	cbnz	x1, 439d78 <ferror@plt+0x36fa8>
  439174:	ldr	x0, [x20, #16]
  439178:	stp	xzr, xzr, [sp, #272]
  43917c:	stp	xzr, xzr, [sp, #288]
  439180:	stp	xzr, xzr, [sp, #304]
  439184:	stp	xzr, xzr, [sp, #320]
  439188:	str	x0, [sp, #152]
  43918c:	ldr	x2, [x0, #56]
  439190:	stp	xzr, xzr, [sp, #240]
  439194:	ldr	x0, [x23, #80]
  439198:	stp	xzr, xzr, [sp, #256]
  43919c:	cmp	x2, x0
  4391a0:	b.cc	439298 <ferror@plt+0x364c8>  // b.lo, b.ul, b.last
  4391a4:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x255fc>
  4391a8:	mov	x0, x22
  4391ac:	add	x1, x1, #0x814
  4391b0:	mov	w2, #0x0                   	// #0
  4391b4:	blr	x24
  4391b8:	ldp	x1, x0, [sp, #248]
  4391bc:	mov	x3, x22
  4391c0:	mov	x2, x24
  4391c4:	mov	x19, #0x0                   	// #0
  4391c8:	mov	x26, #0x0                   	// #0
  4391cc:	mov	x25, #0x0                   	// #0
  4391d0:	add	x0, x0, x1
  4391d4:	add	x1, sp, #0xf0
  4391d8:	stp	xzr, x0, [sp, #248]
  4391dc:	mov	x0, x21
  4391e0:	bl	43450c <ferror@plt+0x3173c>
  4391e4:	add	x1, sp, #0x110
  4391e8:	mov	x0, x21
  4391ec:	mov	x3, x22
  4391f0:	mov	x2, x24
  4391f4:	bl	4378fc <ferror@plt+0x34b2c>
  4391f8:	mov	x1, #0xffffffffffffffff    	// #-1
  4391fc:	mov	w0, #0x0                   	// #0
  439200:	ldr	w2, [x21, #8]
  439204:	cbnz	w2, 439bb4 <ferror@plt+0x36de4>
  439208:	ldr	x2, [sp, #120]
  43920c:	stp	x1, x26, [x2, #104]
  439210:	stp	x19, x25, [x2, #120]
  439214:	cmn	x1, #0x1
  439218:	b.ne	439be8 <ferror@plt+0x36e18>  // b.any
  43921c:	cbz	w0, 439d80 <ferror@plt+0x36fb0>
  439220:	ldr	x3, [sp, #144]
  439224:	mov	x5, x22
  439228:	ldr	x6, [sp, #168]
  43922c:	mov	x4, x24
  439230:	ldr	x2, [sp, #232]
  439234:	mov	x1, x23
  439238:	mov	x0, x21
  43923c:	bl	439074 <ferror@plt+0x362a4>
  439240:	b	439250 <ferror@plt+0x36480>
  439244:	ldr	x0, [sp, #168]
  439248:	str	wzr, [x0]
  43924c:	mov	w0, #0x0                   	// #0
  439250:	ldp	x29, x30, [sp, #16]
  439254:	ldp	x19, x20, [sp, #32]
  439258:	ldp	x21, x22, [sp, #48]
  43925c:	ldp	x23, x24, [sp, #64]
  439260:	ldp	x25, x26, [sp, #80]
  439264:	ldp	x27, x28, [sp, #96]
  439268:	add	sp, sp, #0x1d0
  43926c:	ret
  439270:	add	x20, x20, #0x18
  439274:	b	4390f4 <ferror@plt+0x36324>
  439278:	cbz	w3, 439288 <ferror@plt+0x364b8>
  43927c:	ldr	x0, [sp, #120]
  439280:	add	x0, x0, #0x68
  439284:	ldar	x1, [x0]
  439288:	cmn	x1, #0x1
  43928c:	b.ne	43915c <ferror@plt+0x3638c>  // b.any
  439290:	sub	x20, x20, #0x18
  439294:	b	439124 <ferror@plt+0x36354>
  439298:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  43929c:	add	x1, x1, #0xcbc
  4392a0:	str	x1, [sp, #336]
  4392a4:	sub	x0, x0, x2
  4392a8:	ldr	x1, [x23, #72]
  4392ac:	str	x1, [sp, #344]
  4392b0:	add	x19, sp, #0x150
  4392b4:	str	x0, [sp, #360]
  4392b8:	add	x1, x1, x2
  4392bc:	ldr	w0, [x23, #120]
  4392c0:	str	x1, [sp, #352]
  4392c4:	str	w0, [sp, #368]
  4392c8:	mov	x0, x19
  4392cc:	stp	x24, x22, [sp, #376]
  4392d0:	str	wzr, [sp, #392]
  4392d4:	bl	437cf0 <ferror@plt+0x34f20>
  4392d8:	mov	x1, #0xffffffff            	// #4294967295
  4392dc:	mov	w2, w0
  4392e0:	cmp	x1, w0, uxtw
  4392e4:	b.ne	43932c <ferror@plt+0x3655c>  // b.any
  4392e8:	mov	x0, x19
  4392ec:	bl	437d34 <ferror@plt+0x34f64>
  4392f0:	mov	x2, x0
  4392f4:	mov	w25, #0x1                   	// #1
  4392f8:	mov	x0, x19
  4392fc:	str	x2, [sp, #360]
  439300:	bl	437d98 <ferror@plt+0x34fc8>
  439304:	and	w0, w0, #0xffff
  439308:	str	w0, [sp, #272]
  43930c:	sub	w0, w0, #0x2
  439310:	cmp	w0, #0x2
  439314:	b.ls	439334 <ferror@plt+0x36564>  // b.plast
  439318:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x255fc>
  43931c:	add	x1, x1, #0x832
  439320:	mov	x0, x19
  439324:	bl	4378a8 <ferror@plt+0x34ad8>
  439328:	b	4391b8 <ferror@plt+0x363e8>
  43932c:	mov	w25, #0x0                   	// #0
  439330:	b	4392f8 <ferror@plt+0x36528>
  439334:	mov	w1, w25
  439338:	mov	x0, x19
  43933c:	bl	437d78 <ferror@plt+0x34fa8>
  439340:	add	x25, sp, #0x190
  439344:	ldp	x2, x3, [sp, #336]
  439348:	stp	x2, x3, [sp, #400]
  43934c:	mov	x1, x0
  439350:	ldp	x2, x3, [sp, #352]
  439354:	stp	x2, x3, [sp, #416]
  439358:	mov	x0, x19
  43935c:	ldp	x2, x3, [sp, #368]
  439360:	stp	x2, x3, [sp, #432]
  439364:	ldp	x2, x3, [sp, #384]
  439368:	str	x1, [sp, #424]
  43936c:	stp	x2, x3, [sp, #448]
  439370:	bl	437c88 <ferror@plt+0x34eb8>
  439374:	cbz	w0, 4391b8 <ferror@plt+0x363e8>
  439378:	mov	x0, x25
  43937c:	bl	437de8 <ferror@plt+0x35018>
  439380:	and	w0, w0, #0xff
  439384:	str	w0, [sp, #276]
  439388:	ldr	w0, [sp, #272]
  43938c:	cmp	w0, #0x3
  439390:	b.gt	439578 <ferror@plt+0x367a8>
  439394:	mov	w0, #0x1                   	// #1
  439398:	str	w0, [sp, #280]
  43939c:	mov	x0, x25
  4393a0:	bl	437de8 <ferror@plt+0x35018>
  4393a4:	mov	x0, x25
  4393a8:	mov	x1, #0x1                   	// #1
  4393ac:	ldr	x26, [sp, #416]
  4393b0:	bl	437c88 <ferror@plt+0x34eb8>
  4393b4:	cbz	w0, 439588 <ferror@plt+0x367b8>
  4393b8:	ldrb	w0, [x26]
  4393bc:	eor	w0, w0, #0xffffff80
  4393c0:	sub	w0, w0, #0x80
  4393c4:	sxtb	w0, w0
  4393c8:	str	w0, [sp, #284]
  4393cc:	mov	x0, x25
  4393d0:	bl	437de8 <ferror@plt+0x35018>
  4393d4:	and	w0, w0, #0xff
  4393d8:	str	w0, [sp, #288]
  4393dc:	mov	x0, x25
  4393e0:	bl	437de8 <ferror@plt+0x35018>
  4393e4:	and	w1, w0, #0xff
  4393e8:	ldr	x0, [sp, #416]
  4393ec:	str	w1, [sp, #292]
  4393f0:	sub	w1, w1, #0x1
  4393f4:	str	x0, [sp, #296]
  4393f8:	mov	x0, x25
  4393fc:	bl	437c88 <ferror@plt+0x34eb8>
  439400:	cbz	w0, 4391b8 <ferror@plt+0x363e8>
  439404:	ldp	x26, x28, [sp, #416]
  439408:	str	xzr, [sp, #304]
  43940c:	add	x28, x26, x28
  439410:	cmp	x28, x26
  439414:	ldr	x27, [sp, #304]
  439418:	b.ls	439424 <ferror@plt+0x36654>  // b.plast
  43941c:	ldrb	w0, [x26]
  439420:	cbnz	w0, 439590 <ferror@plt+0x367c0>
  439424:	str	xzr, [sp, #312]
  439428:	cbnz	x27, 4395b0 <ferror@plt+0x367e0>
  43942c:	mov	x26, #0x0                   	// #0
  439430:	ldr	x0, [sp, #416]
  439434:	ldrb	w0, [x0]
  439438:	cbnz	w0, 4395cc <ferror@plt+0x367fc>
  43943c:	mov	x0, x25
  439440:	mov	x1, #0x1                   	// #1
  439444:	bl	437c88 <ferror@plt+0x34eb8>
  439448:	cbz	w0, 4391b8 <ferror@plt+0x363e8>
  43944c:	ldp	x26, x27, [sp, #416]
  439450:	str	xzr, [sp, #320]
  439454:	add	x27, x26, x27
  439458:	cmp	x27, x26
  43945c:	b.ls	439468 <ferror@plt+0x36698>  // b.plast
  439460:	ldrb	w0, [x26]
  439464:	cbnz	w0, 4395f8 <ferror@plt+0x36828>
  439468:	ldp	x2, x3, [sp, #376]
  43946c:	mov	x0, x21
  439470:	ldr	x1, [sp, #320]
  439474:	lsl	x1, x1, #3
  439478:	bl	434290 <ferror@plt+0x314c0>
  43947c:	str	x0, [sp, #328]
  439480:	cbz	x0, 4391b8 <ferror@plt+0x363e8>
  439484:	mov	x28, #0x0                   	// #0
  439488:	ldr	x1, [sp, #416]
  43948c:	ldr	w0, [sp, #456]
  439490:	ldrb	w1, [x1]
  439494:	cbnz	w1, 439670 <ferror@plt+0x368a0>
  439498:	cbnz	w0, 4391b8 <ferror@plt+0x363e8>
  43949c:	ldr	x0, [sp, #320]
  4394a0:	cbz	x0, 43976c <ferror@plt+0x3699c>
  4394a4:	ldr	x0, [sp, #328]
  4394a8:	ldr	x0, [x0]
  4394ac:	str	x0, [sp, #160]
  4394b0:	mov	w0, #0x1                   	// #1
  4394b4:	str	w0, [sp, #136]
  4394b8:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x255fc>
  4394bc:	add	x0, x0, #0x688
  4394c0:	ldr	x27, [sp, #160]
  4394c4:	str	x0, [sp, #200]
  4394c8:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x195fc>
  4394cc:	add	x0, x0, #0xaff
  4394d0:	mov	x26, #0x0                   	// #0
  4394d4:	str	wzr, [sp, #128]
  4394d8:	str	x0, [sp, #208]
  4394dc:	add	x0, sp, #0xf0
  4394e0:	str	x0, [sp, #192]
  4394e4:	ldr	x0, [sp, #360]
  4394e8:	cbnz	x0, 439778 <ferror@plt+0x369a8>
  4394ec:	ldr	w0, [sp, #392]
  4394f0:	cbnz	w0, 4391b8 <ferror@plt+0x363e8>
  4394f4:	ldr	x0, [sp, #264]
  4394f8:	cbz	x0, 4391b8 <ferror@plt+0x363e8>
  4394fc:	add	x26, sp, #0xf0
  439500:	mov	x3, x22
  439504:	mov	x4, x26
  439508:	mov	x2, x24
  43950c:	mov	x0, x21
  439510:	mov	x1, #0x18                  	// #24
  439514:	bl	4343e4 <ferror@plt+0x31614>
  439518:	cbz	x0, 4391b8 <ferror@plt+0x363e8>
  43951c:	mov	x1, #0xffffffffffffffff    	// #-1
  439520:	stp	x1, xzr, [x0]
  439524:	mov	x3, x22
  439528:	str	xzr, [x0, #16]
  43952c:	mov	x2, x24
  439530:	mov	x1, x26
  439534:	mov	x0, x21
  439538:	bl	43450c <ferror@plt+0x3173c>
  43953c:	cbz	w0, 4391b8 <ferror@plt+0x363e8>
  439540:	ldr	x0, [sp, #240]
  439544:	mov	x2, #0x18                  	// #24
  439548:	ldr	x1, [sp, #264]
  43954c:	adrp	x3, 437000 <ferror@plt+0x34230>
  439550:	add	x3, x3, #0xa38
  439554:	str	x0, [sp, #128]
  439558:	bl	43a5bc <ferror@plt+0x377ec>
  43955c:	ldr	w0, [x21, #8]
  439560:	ldr	x2, [x20, #16]
  439564:	ldr	x26, [sp, #264]
  439568:	cbnz	w0, 439a94 <ferror@plt+0x36cc4>
  43956c:	add	x8, x23, #0x80
  439570:	mov	x28, x8
  439574:	b	439aa4 <ferror@plt+0x36cd4>
  439578:	mov	x0, x25
  43957c:	bl	437de8 <ferror@plt+0x35018>
  439580:	and	w0, w0, #0xff
  439584:	b	439398 <ferror@plt+0x365c8>
  439588:	mov	w0, #0x0                   	// #0
  43958c:	b	4393c8 <ferror@plt+0x365f8>
  439590:	sub	x1, x28, x26
  439594:	mov	x0, x26
  439598:	bl	402750 <strnlen@plt>
  43959c:	add	x0, x0, #0x1
  4395a0:	add	x27, x27, #0x1
  4395a4:	add	x26, x26, x0
  4395a8:	str	x27, [sp, #304]
  4395ac:	b	439410 <ferror@plt+0x36640>
  4395b0:	ldp	x2, x3, [sp, #376]
  4395b4:	lsl	x1, x27, #3
  4395b8:	mov	x0, x21
  4395bc:	bl	434290 <ferror@plt+0x314c0>
  4395c0:	str	x0, [sp, #312]
  4395c4:	cbnz	x0, 43942c <ferror@plt+0x3665c>
  4395c8:	b	4391b8 <ferror@plt+0x363e8>
  4395cc:	ldr	w0, [sp, #456]
  4395d0:	cbnz	w0, 4391b8 <ferror@plt+0x363e8>
  4395d4:	ldr	x27, [sp, #312]
  4395d8:	mov	x0, x25
  4395dc:	bl	437fd4 <ferror@plt+0x35204>
  4395e0:	str	x0, [x27, x26]
  4395e4:	ldr	x0, [sp, #312]
  4395e8:	ldr	x0, [x0, x26]
  4395ec:	add	x26, x26, #0x8
  4395f0:	cbnz	x0, 439430 <ferror@plt+0x36660>
  4395f4:	b	4391b8 <ferror@plt+0x363e8>
  4395f8:	sub	x1, x27, x26
  4395fc:	mov	x0, x26
  439600:	bl	402750 <strnlen@plt>
  439604:	add	x2, x0, #0x1
  439608:	add	x0, x26, x0
  43960c:	mov	x1, #0x1                   	// #1
  439610:	ldrsb	w3, [x0, x1]
  439614:	tbnz	w3, #31, 439658 <ferror@plt+0x36888>
  439618:	add	x1, x2, x1
  43961c:	mov	x0, #0x1                   	// #1
  439620:	add	x26, x26, x1
  439624:	sub	x2, x26, #0x1
  439628:	ldrsb	w1, [x2, x0]
  43962c:	tbnz	w1, #31, 439660 <ferror@plt+0x36890>
  439630:	add	x26, x26, x0
  439634:	mov	x0, #0x1                   	// #1
  439638:	sub	x2, x26, #0x1
  43963c:	ldrsb	w1, [x2, x0]
  439640:	tbnz	w1, #31, 439668 <ferror@plt+0x36898>
  439644:	add	x26, x26, x0
  439648:	ldr	x0, [sp, #320]
  43964c:	add	x0, x0, #0x1
  439650:	str	x0, [sp, #320]
  439654:	b	439458 <ferror@plt+0x36688>
  439658:	add	x1, x1, #0x1
  43965c:	b	439610 <ferror@plt+0x36840>
  439660:	add	x0, x0, #0x1
  439664:	b	439628 <ferror@plt+0x36858>
  439668:	add	x0, x0, #0x1
  43966c:	b	43963c <ferror@plt+0x3686c>
  439670:	cbnz	w0, 4391b8 <ferror@plt+0x363e8>
  439674:	mov	x0, x25
  439678:	bl	437fd4 <ferror@plt+0x35204>
  43967c:	mov	x27, x0
  439680:	cbz	x0, 4391b8 <ferror@plt+0x363e8>
  439684:	mov	x0, x25
  439688:	bl	437e8c <ferror@plt+0x350bc>
  43968c:	ldrb	w1, [x27]
  439690:	cmp	w1, #0x2f
  439694:	b.eq	4396a8 <ferror@plt+0x368d8>  // b.none
  439698:	cbnz	x0, 4396c8 <ferror@plt+0x368f8>
  43969c:	ldr	x0, [sp, #152]
  4396a0:	ldr	x4, [x0, #72]
  4396a4:	cbnz	x4, 4396e4 <ferror@plt+0x36914>
  4396a8:	ldr	x0, [sp, #328]
  4396ac:	str	x27, [x0, x28]
  4396b0:	mov	x0, x25
  4396b4:	bl	437e8c <ferror@plt+0x350bc>
  4396b8:	mov	x0, x25
  4396bc:	add	x28, x28, #0x8
  4396c0:	bl	437e8c <ferror@plt+0x350bc>
  4396c4:	b	439488 <ferror@plt+0x366b8>
  4396c8:	ldr	x2, [sp, #304]
  4396cc:	sub	x1, x0, #0x1
  4396d0:	cmp	x1, x2
  4396d4:	b.cs	439760 <ferror@plt+0x36990>  // b.hs, b.nlast
  4396d8:	ldr	x1, [sp, #312]
  4396dc:	add	x0, x1, x0, lsl #3
  4396e0:	ldur	x4, [x0, #-8]
  4396e4:	mov	x0, x4
  4396e8:	str	x4, [sp, #160]
  4396ec:	bl	402700 <strlen@plt>
  4396f0:	mov	x26, x0
  4396f4:	mov	x0, x27
  4396f8:	bl	402700 <strlen@plt>
  4396fc:	add	x1, x26, x0
  439700:	ldp	x2, x3, [sp, #376]
  439704:	add	x1, x1, #0x2
  439708:	str	x0, [sp, #128]
  43970c:	mov	x0, x21
  439710:	bl	434290 <ferror@plt+0x314c0>
  439714:	str	x0, [sp, #136]
  439718:	cbz	x0, 4391b8 <ferror@plt+0x363e8>
  43971c:	ldr	x4, [sp, #160]
  439720:	mov	x2, x26
  439724:	mov	x1, x4
  439728:	bl	4026a0 <memcpy@plt>
  43972c:	ldp	x1, x3, [sp, #128]
  439730:	mov	w0, #0x2f                  	// #47
  439734:	str	x3, [sp, #128]
  439738:	strb	w0, [x3, x26]
  43973c:	add	x0, x26, #0x1
  439740:	add	x2, x1, #0x1
  439744:	add	x0, x3, x0
  439748:	mov	x1, x27
  43974c:	bl	4026a0 <memcpy@plt>
  439750:	ldr	x0, [sp, #328]
  439754:	ldr	x3, [sp, #128]
  439758:	str	x3, [x0, x28]
  43975c:	b	4396b0 <ferror@plt+0x368e0>
  439760:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x255fc>
  439764:	add	x1, x1, #0x852
  439768:	b	439320 <ferror@plt+0x36550>
  43976c:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x195fc>
  439770:	add	x0, x0, #0xaff
  439774:	b	4394ac <ferror@plt+0x366dc>
  439778:	mov	x0, x19
  43977c:	bl	437de8 <ferror@plt+0x35018>
  439780:	ldr	w2, [sp, #292]
  439784:	and	w1, w0, #0xff
  439788:	cmp	w2, w0, uxtb
  43978c:	b.hi	4397fc <ferror@plt+0x36a2c>  // b.pmore
  439790:	ldr	w5, [sp, #288]
  439794:	sub	w1, w1, w2
  439798:	ldr	w0, [sp, #128]
  43979c:	ldr	w3, [sp, #276]
  4397a0:	ldr	x7, [sp, #192]
  4397a4:	udiv	w2, w1, w5
  4397a8:	add	w4, w2, w0
  4397ac:	ldr	w0, [sp, #280]
  4397b0:	msub	w1, w2, w5, w1
  4397b4:	ldr	w2, [sp, #284]
  4397b8:	ldp	x5, x6, [sp, #376]
  4397bc:	mul	w3, w4, w3
  4397c0:	add	w1, w1, w2
  4397c4:	udiv	w3, w3, w0
  4397c8:	add	x26, x26, x3
  4397cc:	udiv	w3, w4, w0
  4397d0:	msub	w0, w3, w0, w4
  4397d4:	str	w0, [sp, #128]
  4397d8:	ldr	w0, [sp, #136]
  4397dc:	add	w4, w0, w1
  4397e0:	str	w4, [sp, #136]
  4397e4:	mov	x3, x27
  4397e8:	mov	x2, x26
  4397ec:	add	x1, x23, #0x10
  4397f0:	mov	x0, x21
  4397f4:	bl	437b10 <ferror@plt+0x34d40>
  4397f8:	b	4394e4 <ferror@plt+0x36714>
  4397fc:	cbnz	w1, 439950 <ferror@plt+0x36b80>
  439800:	mov	x0, x19
  439804:	bl	437e8c <ferror@plt+0x350bc>
  439808:	mov	x28, x0
  43980c:	mov	x0, x19
  439810:	bl	437de8 <ferror@plt+0x35018>
  439814:	and	w2, w0, #0xff
  439818:	sub	w2, w2, #0x1
  43981c:	cmp	w2, #0x3
  439820:	b.hi	43993c <ferror@plt+0x36b6c>  // b.pmore
  439824:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x255fc>
  439828:	add	x0, x0, #0x680
  43982c:	ldrh	w0, [x0, w2, uxtw #1]
  439830:	adr	x1, 43983c <ferror@plt+0x36a6c>
  439834:	add	x0, x1, w0, sxth #2
  439838:	br	x0
  43983c:	ldr	x0, [sp, #152]
  439840:	ldr	w1, [x0, #48]
  439844:	mov	x0, x19
  439848:	bl	437e1c <ferror@plt+0x3504c>
  43984c:	mov	x26, x0
  439850:	b	4394e4 <ferror@plt+0x36714>
  439854:	mov	x0, x19
  439858:	bl	437fd4 <ferror@plt+0x35204>
  43985c:	mov	x27, x0
  439860:	cbz	x0, 4391b8 <ferror@plt+0x363e8>
  439864:	mov	x0, x19
  439868:	bl	437e8c <ferror@plt+0x350bc>
  43986c:	mov	x28, x0
  439870:	mov	x0, x19
  439874:	bl	437e8c <ferror@plt+0x350bc>
  439878:	mov	x0, x19
  43987c:	bl	437e8c <ferror@plt+0x350bc>
  439880:	ldrb	w0, [x27]
  439884:	cmp	w0, #0x2f
  439888:	b.eq	4394e4 <ferror@plt+0x36714>  // b.none
  43988c:	cbnz	w28, 439914 <ferror@plt+0x36b44>
  439890:	ldr	x0, [sp, #152]
  439894:	ldr	x4, [x0, #72]
  439898:	mov	x0, x4
  43989c:	str	x4, [sp, #224]
  4398a0:	bl	402700 <strlen@plt>
  4398a4:	mov	x28, x0
  4398a8:	mov	x0, x27
  4398ac:	bl	402700 <strlen@plt>
  4398b0:	add	x1, x28, x0
  4398b4:	ldp	x2, x3, [sp, #376]
  4398b8:	add	x1, x1, #0x2
  4398bc:	str	x0, [sp, #184]
  4398c0:	mov	x0, x21
  4398c4:	bl	434290 <ferror@plt+0x314c0>
  4398c8:	str	x0, [sp, #216]
  4398cc:	cbz	x0, 4391b8 <ferror@plt+0x363e8>
  4398d0:	ldr	x4, [sp, #224]
  4398d4:	mov	x2, x28
  4398d8:	mov	x1, x4
  4398dc:	bl	4026a0 <memcpy@plt>
  4398e0:	ldr	x3, [sp, #216]
  4398e4:	mov	w0, #0x2f                  	// #47
  4398e8:	ldr	x1, [sp, #184]
  4398ec:	str	x3, [sp, #184]
  4398f0:	strb	w0, [x3, x28]
  4398f4:	add	x0, x28, #0x1
  4398f8:	add	x2, x1, #0x1
  4398fc:	add	x0, x3, x0
  439900:	mov	x1, x27
  439904:	bl	4026a0 <memcpy@plt>
  439908:	ldr	x3, [sp, #184]
  43990c:	mov	x27, x3
  439910:	b	4394e4 <ferror@plt+0x36714>
  439914:	ldr	x0, [sp, #304]
  439918:	sub	w28, w28, #0x1
  43991c:	cmp	x28, x0
  439920:	b.cs	439930 <ferror@plt+0x36b60>  // b.hs, b.nlast
  439924:	ldr	x0, [sp, #312]
  439928:	ldr	x4, [x0, x28, lsl #3]
  43992c:	b	439898 <ferror@plt+0x36ac8>
  439930:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x255fc>
  439934:	add	x1, x1, #0x888
  439938:	b	439320 <ferror@plt+0x36550>
  43993c:	sub	x1, x28, #0x1
  439940:	mov	x0, x19
  439944:	bl	437c88 <ferror@plt+0x34eb8>
  439948:	cbnz	w0, 4394e4 <ferror@plt+0x36714>
  43994c:	b	4391b8 <ferror@plt+0x363e8>
  439950:	sub	w1, w1, #0x1
  439954:	cmp	w1, #0xb
  439958:	b.hi	439a58 <ferror@plt+0x36c88>  // b.pmore
  43995c:	ldr	x0, [sp, #200]
  439960:	ldrh	w0, [x0, w1, uxtw #1]
  439964:	adr	x1, 439970 <ferror@plt+0x36ba0>
  439968:	add	x0, x1, w0, sxth #2
  43996c:	br	x0
  439970:	ldr	w4, [sp, #136]
  439974:	ldr	x7, [sp, #192]
  439978:	ldp	x5, x6, [sp, #376]
  43997c:	b	4397e4 <ferror@plt+0x36a14>
  439980:	mov	x0, x19
  439984:	bl	437e8c <ferror@plt+0x350bc>
  439988:	ldr	w1, [sp, #128]
  43998c:	ldr	w2, [sp, #280]
  439990:	add	x0, x0, w1, uxtw
  439994:	ldr	w1, [sp, #276]
  439998:	mul	x1, x1, x0
  43999c:	udiv	x1, x1, x2
  4399a0:	add	x26, x26, x1
  4399a4:	udiv	x1, x0, x2
  4399a8:	msub	w0, w1, w2, w0
  4399ac:	str	w0, [sp, #128]
  4399b0:	b	4394e4 <ferror@plt+0x36714>
  4399b4:	mov	x0, x19
  4399b8:	bl	437f24 <ferror@plt+0x35154>
  4399bc:	ldr	w1, [sp, #136]
  4399c0:	add	w0, w1, w0
  4399c4:	str	w0, [sp, #136]
  4399c8:	b	4394e4 <ferror@plt+0x36714>
  4399cc:	mov	x0, x19
  4399d0:	bl	437e8c <ferror@plt+0x350bc>
  4399d4:	cbz	x0, 439a8c <ferror@plt+0x36cbc>
  4399d8:	ldr	x2, [sp, #320]
  4399dc:	sub	x1, x0, #0x1
  4399e0:	cmp	x1, x2
  4399e4:	b.cc	4399f4 <ferror@plt+0x36c24>  // b.lo, b.ul, b.last
  4399e8:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x255fc>
  4399ec:	add	x1, x1, #0x8b7
  4399f0:	b	439320 <ferror@plt+0x36550>
  4399f4:	ldr	x1, [sp, #328]
  4399f8:	add	x0, x1, x0, lsl #3
  4399fc:	ldur	x27, [x0, #-8]
  439a00:	b	4394e4 <ferror@plt+0x36714>
  439a04:	ldr	w1, [sp, #288]
  439a08:	mov	w0, #0xff                  	// #255
  439a0c:	sub	w0, w0, w2
  439a10:	ldr	w2, [sp, #280]
  439a14:	udiv	w0, w0, w1
  439a18:	ldr	w1, [sp, #128]
  439a1c:	add	w0, w0, w1
  439a20:	ldr	w1, [sp, #276]
  439a24:	mul	w1, w0, w1
  439a28:	udiv	w1, w1, w2
  439a2c:	add	x26, x26, x1
  439a30:	udiv	w1, w0, w2
  439a34:	b	4399a8 <ferror@plt+0x36bd8>
  439a38:	mov	x0, x19
  439a3c:	bl	437d98 <ferror@plt+0x34fc8>
  439a40:	add	x26, x26, w0, uxth
  439a44:	str	wzr, [sp, #128]
  439a48:	b	4394e4 <ferror@plt+0x36714>
  439a4c:	mov	x0, x19
  439a50:	bl	437e8c <ferror@plt+0x350bc>
  439a54:	b	4394e4 <ferror@plt+0x36714>
  439a58:	ldr	x0, [sp, #296]
  439a5c:	ldrb	w28, [x0, w1, uxtw]
  439a60:	cbz	w28, 4394e4 <ferror@plt+0x36714>
  439a64:	mov	x0, x19
  439a68:	sub	w28, w28, #0x1
  439a6c:	bl	437e8c <ferror@plt+0x350bc>
  439a70:	b	439a60 <ferror@plt+0x36c90>
  439a74:	mov	w0, #0x1                   	// #1
  439a78:	mov	x26, #0x0                   	// #0
  439a7c:	str	wzr, [sp, #128]
  439a80:	str	w0, [sp, #136]
  439a84:	ldr	x27, [sp, #160]
  439a88:	b	4394e4 <ferror@plt+0x36714>
  439a8c:	ldr	x27, [sp, #208]
  439a90:	b	4394e4 <ferror@plt+0x36714>
  439a94:	mov	x8, x19
  439a98:	mov	x28, #0x0                   	// #0
  439a9c:	stp	xzr, xzr, [sp, #336]
  439aa0:	stp	xzr, xzr, [sp, #352]
  439aa4:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x245fc>
  439aa8:	add	x0, x0, #0xcb0
  439aac:	str	x0, [sp, #400]
  439ab0:	ldr	x0, [x23, #56]
  439ab4:	str	x0, [sp, #408]
  439ab8:	ldr	x0, [x2]
  439abc:	str	x0, [sp, #416]
  439ac0:	ldr	x0, [x2, #8]
  439ac4:	add	x27, sp, #0x110
  439ac8:	str	x0, [sp, #424]
  439acc:	ldr	w0, [x23, #120]
  439ad0:	str	w0, [sp, #432]
  439ad4:	stp	x24, x22, [sp, #440]
  439ad8:	str	wzr, [sp, #456]
  439adc:	ldr	x0, [sp, #424]
  439ae0:	cbnz	x0, 439b4c <ferror@plt+0x36d7c>
  439ae4:	ldr	x25, [x8, #24]
  439ae8:	cbz	x25, 439b84 <ferror@plt+0x36db4>
  439aec:	cbnz	x28, 439b90 <ferror@plt+0x36dc0>
  439af0:	mov	x3, x22
  439af4:	mov	x2, x24
  439af8:	mov	x1, x19
  439afc:	mov	x0, x21
  439b00:	str	x8, [sp, #136]
  439b04:	bl	43450c <ferror@plt+0x3173c>
  439b08:	cbz	w0, 439b84 <ferror@plt+0x36db4>
  439b0c:	ldr	x8, [sp, #136]
  439b10:	ldr	x19, [x8]
  439b14:	adrp	x3, 438000 <ferror@plt+0x35230>
  439b18:	mov	x1, x25
  439b1c:	add	x3, x3, #0x768
  439b20:	mov	x0, x19
  439b24:	mov	x2, #0x18                  	// #24
  439b28:	bl	43a5bc <ferror@plt+0x377ec>
  439b2c:	mov	x1, x27
  439b30:	mov	x0, x21
  439b34:	mov	x3, x22
  439b38:	mov	x2, x24
  439b3c:	bl	4378fc <ferror@plt+0x34b2c>
  439b40:	mov	w0, #0x1                   	// #1
  439b44:	ldr	x1, [sp, #128]
  439b48:	b	439200 <ferror@plt+0x36430>
  439b4c:	stp	x8, x8, [sp]
  439b50:	mov	x7, x22
  439b54:	mov	x6, x24
  439b58:	mov	x5, x27
  439b5c:	mov	x4, x25
  439b60:	mov	x1, x23
  439b64:	mov	x0, x21
  439b68:	mov	x3, #0x0                   	// #0
  439b6c:	str	x2, [sp, #136]
  439b70:	str	x8, [sp, #152]
  439b74:	bl	438a90 <ferror@plt+0x35cc0>
  439b78:	ldr	x2, [sp, #136]
  439b7c:	ldr	x8, [sp, #152]
  439b80:	cbnz	w0, 439adc <ferror@plt+0x36d0c>
  439b84:	mov	x25, #0x0                   	// #0
  439b88:	mov	x19, #0x0                   	// #0
  439b8c:	b	439b2c <ferror@plt+0x36d5c>
  439b90:	mov	x3, x22
  439b94:	mov	x2, x24
  439b98:	mov	x1, x28
  439b9c:	mov	x0, x21
  439ba0:	bl	4344fc <ferror@plt+0x3172c>
  439ba4:	mov	x19, x0
  439ba8:	cbz	x0, 439b84 <ferror@plt+0x36db4>
  439bac:	str	xzr, [x28, #24]
  439bb0:	b	439b14 <ferror@plt+0x36d44>
  439bb4:	ldr	x2, [sp, #120]
  439bb8:	add	x2, x2, #0x70
  439bbc:	stlr	x26, [x2]
  439bc0:	ldr	x2, [sp, #120]
  439bc4:	add	x2, x2, #0x78
  439bc8:	stlr	x19, [x2]
  439bcc:	ldr	x2, [sp, #120]
  439bd0:	add	x2, x2, #0x80
  439bd4:	stlr	x25, [x2]
  439bd8:	ldr	x2, [sp, #120]
  439bdc:	add	x2, x2, #0x68
  439be0:	stlr	x1, [x2]
  439be4:	b	439214 <ferror@plt+0x36444>
  439be8:	ldr	x0, [x20, #16]
  439bec:	adrp	x4, 437000 <ferror@plt+0x34230>
  439bf0:	mov	x3, #0x18                  	// #24
  439bf4:	add	x4, x4, #0x698
  439bf8:	ldr	x2, [x0, #112]
  439bfc:	ldr	x0, [sp, #176]
  439c00:	bl	402960 <bsearch@plt>
  439c04:	mov	x19, x0
  439c08:	ldr	x0, [x20, #16]
  439c0c:	cbnz	x19, 439cb4 <ferror@plt+0x36ee4>
  439c10:	ldr	x1, [x0, #80]
  439c14:	cbnz	x1, 439ca0 <ferror@plt+0x36ed0>
  439c18:	ldr	x25, [x0, #64]
  439c1c:	cbz	x25, 439c98 <ferror@plt+0x36ec8>
  439c20:	ldrb	w1, [x25]
  439c24:	cmp	w1, #0x2f
  439c28:	b.eq	439c98 <ferror@plt+0x36ec8>  // b.none
  439c2c:	ldr	x26, [x0, #72]
  439c30:	cbz	x26, 439c98 <ferror@plt+0x36ec8>
  439c34:	mov	x0, x25
  439c38:	bl	402700 <strlen@plt>
  439c3c:	mov	x23, x0
  439c40:	mov	x0, x26
  439c44:	bl	402700 <strlen@plt>
  439c48:	add	x1, x23, x0
  439c4c:	mov	x19, x0
  439c50:	mov	x3, x22
  439c54:	mov	x0, x21
  439c58:	mov	x2, x24
  439c5c:	add	x1, x1, #0x2
  439c60:	bl	434290 <ferror@plt+0x314c0>
  439c64:	mov	x21, x0
  439c68:	cbz	x0, 439244 <ferror@plt+0x36474>
  439c6c:	mov	x2, x19
  439c70:	mov	x1, x26
  439c74:	bl	4026a0 <memcpy@plt>
  439c78:	mov	x1, x25
  439c7c:	mov	x25, x21
  439c80:	mov	w0, #0x2f                  	// #47
  439c84:	strb	w0, [x21, x19]
  439c88:	add	x19, x19, #0x1
  439c8c:	add	x2, x23, #0x1
  439c90:	add	x0, x21, x19
  439c94:	bl	4026a0 <memcpy@plt>
  439c98:	ldr	x0, [x20, #16]
  439c9c:	str	x25, [x0, #80]
  439ca0:	ldr	x0, [x20, #16]
  439ca4:	mov	x4, #0x0                   	// #0
  439ca8:	mov	w3, #0x0                   	// #0
  439cac:	ldr	x2, [x0, #80]
  439cb0:	b	439d8c <ferror@plt+0x36fbc>
  439cb4:	ldr	x2, [x0, #128]
  439cb8:	cbnz	x2, 439ccc <ferror@plt+0x36efc>
  439cbc:	ldr	w3, [x19, #16]
  439cc0:	mov	x4, #0x0                   	// #0
  439cc4:	ldr	x2, [x19, #8]
  439cc8:	b	439d8c <ferror@plt+0x36fbc>
  439ccc:	ldr	x1, [x0, #120]
  439cd0:	adrp	x4, 437000 <ferror@plt+0x34230>
  439cd4:	ldr	x0, [sp, #176]
  439cd8:	add	x4, x4, #0x648
  439cdc:	mov	x3, #0x18                  	// #24
  439ce0:	bl	402960 <bsearch@plt>
  439ce4:	mov	x1, x0
  439ce8:	cbz	x0, 439cbc <ferror@plt+0x36eec>
  439cec:	ldr	x0, [x20, #16]
  439cf0:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  439cf4:	movk	x5, #0xaaab
  439cf8:	ldp	x3, x4, [x0, #120]
  439cfc:	ldr	x0, [sp, #232]
  439d00:	sub	x2, x1, x3
  439d04:	asr	x2, x2, #3
  439d08:	mul	x2, x2, x5
  439d0c:	add	x2, x2, #0x1
  439d10:	cmp	x2, x4
  439d14:	b.cs	439d30 <ferror@plt+0x36f60>  // b.hs, b.nlast
  439d18:	ldr	x2, [x1, #24]
  439d1c:	cmp	x2, x0
  439d20:	b.hi	439d30 <ferror@plt+0x36f60>  // b.pmore
  439d24:	ldr	x2, [x1, #32]
  439d28:	cmp	x0, x2
  439d2c:	b.cc	439d70 <ferror@plt+0x36fa0>  // b.lo, b.ul, b.last
  439d30:	ldr	x2, [sp, #144]
  439d34:	add	x5, sp, #0x150
  439d38:	ldr	x20, [x1, #16]
  439d3c:	add	x4, sp, #0x190
  439d40:	ldr	x1, [x19, #8]
  439d44:	str	x1, [sp, #400]
  439d48:	ldr	w1, [x19, #16]
  439d4c:	mov	x3, x22
  439d50:	str	w1, [sp, #336]
  439d54:	mov	x1, x20
  439d58:	bl	4376d8 <ferror@plt+0x34908>
  439d5c:	cbnz	w0, 439250 <ferror@plt+0x36480>
  439d60:	ldr	w3, [sp, #336]
  439d64:	ldr	x4, [x20]
  439d68:	ldr	x2, [sp, #400]
  439d6c:	b	439d8c <ferror@plt+0x36fbc>
  439d70:	add	x1, x1, #0x18
  439d74:	b	439d00 <ferror@plt+0x36f30>
  439d78:	cmn	x1, #0x1
  439d7c:	b.ne	439be8 <ferror@plt+0x36e18>  // b.any
  439d80:	mov	x4, #0x0                   	// #0
  439d84:	mov	w3, #0x0                   	// #0
  439d88:	mov	x2, #0x0                   	// #0
  439d8c:	ldr	x5, [sp, #144]
  439d90:	mov	x0, x22
  439d94:	ldr	x1, [sp, #232]
  439d98:	blr	x5
  439d9c:	b	439250 <ferror@plt+0x36480>
  439da0:	stp	x29, x30, [sp, #-96]!
  439da4:	mov	x29, sp
  439da8:	stp	x19, x20, [sp, #16]
  439dac:	mov	x19, x0
  439db0:	ldr	w0, [x0, #8]
  439db4:	stp	x21, x22, [sp, #32]
  439db8:	mov	x21, x2
  439dbc:	mov	x22, x4
  439dc0:	stp	x23, x24, [sp, #48]
  439dc4:	mov	x23, x1
  439dc8:	mov	x24, x3
  439dcc:	str	x25, [sp, #64]
  439dd0:	cbnz	w0, 439e4c <ferror@plt+0x3707c>
  439dd4:	ldr	x20, [x19, #32]
  439dd8:	add	x25, sp, #0x5c
  439ddc:	cbnz	x20, 439dfc <ferror@plt+0x3702c>
  439de0:	mov	x1, x23
  439de4:	mov	x0, x22
  439de8:	mov	x4, #0x0                   	// #0
  439dec:	mov	w3, #0x0                   	// #0
  439df0:	mov	x2, #0x0                   	// #0
  439df4:	blr	x21
  439df8:	b	439e2c <ferror@plt+0x3705c>
  439dfc:	mov	x6, x25
  439e00:	mov	x5, x22
  439e04:	mov	x4, x24
  439e08:	mov	x3, x21
  439e0c:	mov	x2, x23
  439e10:	mov	x1, x20
  439e14:	mov	x0, x19
  439e18:	bl	439074 <ferror@plt+0x362a4>
  439e1c:	cbnz	w0, 439e2c <ferror@plt+0x3705c>
  439e20:	ldr	w0, [sp, #92]
  439e24:	cbz	w0, 439e44 <ferror@plt+0x37074>
  439e28:	mov	w0, #0x0                   	// #0
  439e2c:	ldp	x19, x20, [sp, #16]
  439e30:	ldp	x21, x22, [sp, #32]
  439e34:	ldp	x23, x24, [sp, #48]
  439e38:	ldr	x25, [sp, #64]
  439e3c:	ldp	x29, x30, [sp], #96
  439e40:	ret
  439e44:	ldr	x20, [x20]
  439e48:	b	439ddc <ferror@plt+0x3700c>
  439e4c:	add	x20, x19, #0x20
  439e50:	add	x25, sp, #0x5c
  439e54:	ldar	x20, [x20]
  439e58:	cbz	x20, 439de0 <ferror@plt+0x37010>
  439e5c:	mov	x6, x25
  439e60:	mov	x5, x22
  439e64:	mov	x4, x24
  439e68:	mov	x3, x21
  439e6c:	mov	x2, x23
  439e70:	mov	x1, x20
  439e74:	mov	x0, x19
  439e78:	bl	439074 <ferror@plt+0x362a4>
  439e7c:	cbnz	w0, 439e2c <ferror@plt+0x3705c>
  439e80:	ldr	w0, [sp, #92]
  439e84:	cbz	w0, 439e54 <ferror@plt+0x37084>
  439e88:	b	439e28 <ferror@plt+0x37058>
  439e8c:	sub	sp, sp, #0x290
  439e90:	stp	x29, x30, [sp, #48]
  439e94:	add	x29, sp, #0x30
  439e98:	stp	x19, x20, [sp, #64]
  439e9c:	mov	x20, x0
  439ea0:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x245fc>
  439ea4:	add	x0, x0, #0xcb0
  439ea8:	stp	x21, x22, [sp, #80]
  439eac:	add	x21, sp, #0x250
  439eb0:	stp	x23, x24, [sp, #96]
  439eb4:	add	x24, sp, #0x1d0
  439eb8:	stp	x25, x26, [sp, #112]
  439ebc:	add	x25, sp, #0x190
  439ec0:	stp	x27, x28, [sp, #128]
  439ec4:	str	x2, [sp, #176]
  439ec8:	stp	x1, x3, [sp, #192]
  439ecc:	stp	x6, x7, [sp, #208]
  439ed0:	stp	x4, x5, [sp, #256]
  439ed4:	stp	xzr, xzr, [sp, #336]
  439ed8:	stp	xzr, xzr, [sp, #352]
  439edc:	stp	xzr, xzr, [sp, #368]
  439ee0:	stp	xzr, xzr, [sp, #384]
  439ee4:	stp	x0, x2, [sp, #400]
  439ee8:	stp	x2, x3, [sp, #416]
  439eec:	ldr	x22, [sp, #704]
  439ef0:	ldr	x23, [sp, #712]
  439ef4:	ldr	w0, [sp, #688]
  439ef8:	str	w0, [sp, #432]
  439efc:	add	x0, sp, #0x200
  439f00:	stp	xzr, xzr, [sp, #144]
  439f04:	stp	xzr, xzr, [x0, #-200]
  439f08:	add	x0, sp, #0x138
  439f0c:	str	x0, [sp, #272]
  439f10:	str	xzr, [sp, #328]
  439f14:	stp	x22, x23, [sp, #440]
  439f18:	str	wzr, [sp, #456]
  439f1c:	ldr	x0, [sp, #424]
  439f20:	ldr	w26, [sp, #456]
  439f24:	cbnz	x0, 439f84 <ferror@plt+0x371b4>
  439f28:	cbnz	w26, 43a020 <ferror@plt+0x37250>
  439f2c:	add	x0, sp, #0x200
  439f30:	mov	x3, x23
  439f34:	mov	x2, x22
  439f38:	ldp	x0, x1, [x0, #-200]
  439f3c:	stp	x0, x1, [sp, #368]
  439f40:	ldr	x0, [sp, #328]
  439f44:	str	x0, [sp, #384]
  439f48:	ldr	x0, [sp, #144]
  439f4c:	add	x1, sp, #0x150
  439f50:	str	x0, [sp, #392]
  439f54:	mov	x0, x20
  439f58:	bl	43450c <ferror@plt+0x3173c>
  439f5c:	cbnz	w0, 43a460 <ferror@plt+0x37690>
  439f60:	mov	w0, #0x0                   	// #0
  439f64:	ldp	x29, x30, [sp, #48]
  439f68:	ldp	x19, x20, [sp, #64]
  439f6c:	ldp	x21, x22, [sp, #80]
  439f70:	ldp	x23, x24, [sp, #96]
  439f74:	ldp	x25, x26, [sp, #112]
  439f78:	ldp	x27, x28, [sp, #128]
  439f7c:	add	sp, sp, #0x290
  439f80:	ret
  439f84:	cbnz	w26, 43a020 <ferror@plt+0x37250>
  439f88:	ldr	x0, [sp, #416]
  439f8c:	str	x0, [sp, #224]
  439f90:	mov	x0, x25
  439f94:	bl	437cf0 <ferror@plt+0x34f20>
  439f98:	mov	w1, w0
  439f9c:	str	x1, [sp, #160]
  439fa0:	mov	x1, #0xffffffff            	// #4294967295
  439fa4:	cmp	x1, w0, uxtw
  439fa8:	b.ne	439fbc <ferror@plt+0x371ec>  // b.any
  439fac:	mov	x0, x25
  439fb0:	mov	w26, #0x1                   	// #1
  439fb4:	bl	437d34 <ferror@plt+0x34f64>
  439fb8:	str	x0, [sp, #160]
  439fbc:	ldp	x0, x1, [x25]
  439fc0:	stp	x0, x1, [x24]
  439fc4:	ldp	x0, x1, [x25, #16]
  439fc8:	stp	x0, x1, [x24, #16]
  439fcc:	ldp	x0, x1, [x25, #32]
  439fd0:	stp	x0, x1, [x24, #32]
  439fd4:	ldp	x0, x1, [x25, #48]
  439fd8:	stp	x0, x1, [x24, #48]
  439fdc:	ldr	x0, [sp, #160]
  439fe0:	str	x0, [sp, #488]
  439fe4:	mov	x1, x0
  439fe8:	mov	x0, x25
  439fec:	bl	437c88 <ferror@plt+0x34eb8>
  439ff0:	cbz	w0, 43a020 <ferror@plt+0x37250>
  439ff4:	mov	x0, x24
  439ff8:	bl	437d98 <ferror@plt+0x34fc8>
  439ffc:	and	w0, w0, #0xffff
  43a000:	str	w0, [sp, #248]
  43a004:	sub	w0, w0, #0x2
  43a008:	cmp	w0, #0x2
  43a00c:	b.ls	43a0bc <ferror@plt+0x372ec>  // b.plast
  43a010:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x255fc>
  43a014:	mov	x0, x24
  43a018:	add	x1, x1, #0x8e2
  43a01c:	bl	4378a8 <ferror@plt+0x34ad8>
  43a020:	ldr	x0, [sp, #144]
  43a024:	cbz	x0, 43a090 <ferror@plt+0x372c0>
  43a028:	ldr	x21, [sp, #312]
  43a02c:	mov	x19, #0x0                   	// #0
  43a030:	ldr	x1, [x21, x19, lsl #3]
  43a034:	mov	x3, x23
  43a038:	mov	x2, x22
  43a03c:	mov	x0, x20
  43a040:	add	x1, x1, #0x58
  43a044:	bl	43795c <ferror@plt+0x34b8c>
  43a048:	ldr	x1, [x21, x19, lsl #3]
  43a04c:	mov	x0, x20
  43a050:	mov	x4, x23
  43a054:	mov	x3, x22
  43a058:	mov	x2, #0x88                  	// #136
  43a05c:	add	x19, x19, #0x1
  43a060:	bl	4341d4 <ferror@plt+0x31404>
  43a064:	ldr	x0, [sp, #144]
  43a068:	cmp	x0, x19
  43a06c:	b.ne	43a030 <ferror@plt+0x37260>  // b.any
  43a070:	ldp	x1, x0, [sp, #320]
  43a074:	mov	x3, x23
  43a078:	mov	x2, x22
  43a07c:	add	x0, x0, x1
  43a080:	add	x1, sp, #0x138
  43a084:	stp	xzr, x0, [sp, #320]
  43a088:	mov	x0, x20
  43a08c:	bl	43450c <ferror@plt+0x3173c>
  43a090:	ldr	x0, [sp, #360]
  43a094:	cbz	x0, 439f60 <ferror@plt+0x37190>
  43a098:	ldp	x1, x0, [sp, #344]
  43a09c:	mov	x3, x23
  43a0a0:	mov	x2, x22
  43a0a4:	add	x0, x0, x1
  43a0a8:	add	x1, sp, #0x150
  43a0ac:	stp	xzr, x0, [sp, #344]
  43a0b0:	mov	x0, x20
  43a0b4:	bl	43450c <ferror@plt+0x3173c>
  43a0b8:	b	439f60 <ferror@plt+0x37190>
  43a0bc:	ldr	x4, [sp, #272]
  43a0c0:	mov	x3, x23
  43a0c4:	mov	x2, x22
  43a0c8:	mov	x0, x20
  43a0cc:	mov	x1, #0x8                   	// #8
  43a0d0:	bl	4343e4 <ferror@plt+0x31614>
  43a0d4:	mov	x27, x0
  43a0d8:	cbz	x0, 43a020 <ferror@plt+0x37250>
  43a0dc:	mov	x3, x23
  43a0e0:	mov	x2, x22
  43a0e4:	mov	x0, x20
  43a0e8:	mov	x1, #0x88                  	// #136
  43a0ec:	bl	434290 <ferror@plt+0x314c0>
  43a0f0:	mov	x19, x0
  43a0f4:	cbz	x0, 43a020 <ferror@plt+0x37250>
  43a0f8:	ldr	x0, [sp, #144]
  43a0fc:	str	x19, [x27]
  43a100:	stp	xzr, xzr, [x19, #88]
  43a104:	mov	w1, w26
  43a108:	add	x0, x0, #0x1
  43a10c:	str	x0, [sp, #144]
  43a110:	add	x0, x19, #0x58
  43a114:	str	x0, [sp, #232]
  43a118:	mov	x0, x24
  43a11c:	bl	437d78 <ferror@plt+0x34fa8>
  43a120:	stp	xzr, xzr, [x19, #88]
  43a124:	ldr	x1, [sp, #216]
  43a128:	cmp	x1, x0
  43a12c:	b.hi	43a148 <ferror@plt+0x37378>  // b.pmore
  43a130:	mov	x0, x23
  43a134:	mov	w2, #0x0                   	// #0
  43a138:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x255fc>
  43a13c:	add	x1, x1, #0x8fd
  43a140:	blr	x22
  43a144:	b	43a020 <ferror@plt+0x37250>
  43a148:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  43a14c:	add	x1, x1, #0xcc8
  43a150:	str	x1, [sp, #528]
  43a154:	mov	x27, #0x0                   	// #0
  43a158:	ldr	x1, [sp, #208]
  43a15c:	str	x1, [sp, #536]
  43a160:	str	x22, [sp, #568]
  43a164:	add	x1, x1, x0
  43a168:	str	x1, [sp, #544]
  43a16c:	ldr	x1, [sp, #216]
  43a170:	str	x23, [sp, #576]
  43a174:	str	wzr, [sp, #584]
  43a178:	sub	x0, x1, x0
  43a17c:	str	x0, [sp, #552]
  43a180:	ldr	w0, [sp, #688]
  43a184:	str	w0, [sp, #560]
  43a188:	add	x0, sp, #0x200
  43a18c:	ldp	x0, x1, [x0, #16]
  43a190:	stp	x0, x1, [x21]
  43a194:	add	x0, sp, #0x200
  43a198:	ldp	x0, x1, [x0, #32]
  43a19c:	stp	x0, x1, [x21, #16]
  43a1a0:	add	x0, sp, #0x200
  43a1a4:	ldp	x0, x1, [x0, #48]
  43a1a8:	stp	x0, x1, [x21, #32]
  43a1ac:	add	x0, sp, #0x200
  43a1b0:	ldp	x0, x1, [x0, #64]
  43a1b4:	stp	x0, x1, [x21, #48]
  43a1b8:	mov	x0, x21
  43a1bc:	bl	437e8c <ferror@plt+0x350bc>
  43a1c0:	ldr	w1, [sp, #648]
  43a1c4:	cbnz	x0, 43a2c4 <ferror@plt+0x374f4>
  43a1c8:	cbnz	w1, 43a020 <ferror@plt+0x37250>
  43a1cc:	cbz	x27, 43a3a4 <ferror@plt+0x375d4>
  43a1d0:	lsl	x28, x27, #5
  43a1d4:	mov	x3, x23
  43a1d8:	mov	x2, x22
  43a1dc:	mov	x1, x28
  43a1e0:	mov	x0, x20
  43a1e4:	bl	434290 <ferror@plt+0x314c0>
  43a1e8:	str	x0, [x19, #96]
  43a1ec:	cbz	x0, 43a020 <ferror@plt+0x37250>
  43a1f0:	str	x27, [x19, #88]
  43a1f4:	add	x27, sp, #0x210
  43a1f8:	mov	x2, x28
  43a1fc:	mov	x28, #0x0                   	// #0
  43a200:	mov	w1, #0x0                   	// #0
  43a204:	bl	402930 <memset@plt>
  43a208:	ldr	w0, [sp, #584]
  43a20c:	cbnz	w0, 43a378 <ferror@plt+0x375a8>
  43a210:	mov	x0, x27
  43a214:	bl	437e8c <ferror@plt+0x350bc>
  43a218:	str	x0, [sp, #184]
  43a21c:	cbz	x0, 43a390 <ferror@plt+0x375c0>
  43a220:	mov	x0, x27
  43a224:	bl	437e8c <ferror@plt+0x350bc>
  43a228:	str	x0, [sp, #240]
  43a22c:	mov	x0, x27
  43a230:	bl	437de8 <ferror@plt+0x35018>
  43a234:	and	w0, w0, #0xff
  43a238:	str	w0, [sp, #252]
  43a23c:	ldp	x0, x1, [x27]
  43a240:	stp	x0, x1, [x21]
  43a244:	ldp	x0, x1, [x27, #16]
  43a248:	stp	x0, x1, [x21, #16]
  43a24c:	ldp	x0, x1, [x27, #32]
  43a250:	stp	x0, x1, [x21, #32]
  43a254:	ldp	x0, x1, [x27, #48]
  43a258:	stp	x0, x1, [x21, #48]
  43a25c:	mov	x1, #0x0                   	// #0
  43a260:	mov	x0, x21
  43a264:	str	x1, [sp, #280]
  43a268:	bl	437e8c <ferror@plt+0x350bc>
  43a26c:	str	x0, [sp, #168]
  43a270:	ldr	x1, [sp, #280]
  43a274:	cbnz	x0, 43a300 <ferror@plt+0x37530>
  43a278:	cbnz	x1, 43a318 <ferror@plt+0x37548>
  43a27c:	mov	x0, x27
  43a280:	bl	437e8c <ferror@plt+0x350bc>
  43a284:	mov	x0, x27
  43a288:	bl	437e8c <ferror@plt+0x350bc>
  43a28c:	mov	x1, #0x0                   	// #0
  43a290:	ldr	x2, [x19, #96]
  43a294:	ldr	x3, [sp, #184]
  43a298:	add	x0, x2, x28
  43a29c:	str	x3, [x2, x28]
  43a2a0:	add	x28, x28, #0x20
  43a2a4:	ldr	w2, [sp, #240]
  43a2a8:	str	w2, [x0, #8]
  43a2ac:	ldr	w2, [sp, #252]
  43a2b0:	str	w2, [x0, #12]
  43a2b4:	ldr	x2, [sp, #168]
  43a2b8:	str	x2, [x0, #16]
  43a2bc:	str	x1, [x0, #24]
  43a2c0:	b	43a208 <ferror@plt+0x37438>
  43a2c4:	cbnz	w1, 43a020 <ferror@plt+0x37250>
  43a2c8:	mov	x0, x21
  43a2cc:	bl	437e8c <ferror@plt+0x350bc>
  43a2d0:	add	x27, x27, #0x1
  43a2d4:	mov	x0, x21
  43a2d8:	bl	437de8 <ferror@plt+0x35018>
  43a2dc:	mov	x0, x21
  43a2e0:	bl	437e8c <ferror@plt+0x350bc>
  43a2e4:	cbnz	x0, 43a2f4 <ferror@plt+0x37524>
  43a2e8:	mov	x0, x21
  43a2ec:	bl	437e8c <ferror@plt+0x350bc>
  43a2f0:	b	43a1b8 <ferror@plt+0x373e8>
  43a2f4:	mov	x0, x21
  43a2f8:	bl	437e8c <ferror@plt+0x350bc>
  43a2fc:	b	43a2dc <ferror@plt+0x3750c>
  43a300:	add	x1, x1, #0x1
  43a304:	mov	x0, x21
  43a308:	str	x1, [sp, #168]
  43a30c:	bl	437e8c <ferror@plt+0x350bc>
  43a310:	ldr	x1, [sp, #168]
  43a314:	b	43a260 <ferror@plt+0x37490>
  43a318:	lsl	x1, x1, #3
  43a31c:	mov	x3, x23
  43a320:	mov	x2, x22
  43a324:	mov	x0, x20
  43a328:	bl	434290 <ferror@plt+0x314c0>
  43a32c:	mov	x1, x0
  43a330:	cbz	x0, 43a378 <ferror@plt+0x375a8>
  43a334:	mov	x2, x0
  43a338:	mov	x0, x27
  43a33c:	stp	x1, x2, [sp, #288]
  43a340:	bl	437e8c <ferror@plt+0x350bc>
  43a344:	mov	x3, x0
  43a348:	mov	x0, x27
  43a34c:	str	x3, [sp, #280]
  43a350:	bl	437e8c <ferror@plt+0x350bc>
  43a354:	ldp	x3, x1, [sp, #280]
  43a358:	cbz	x3, 43a290 <ferror@plt+0x374c0>
  43a35c:	ldr	x2, [sp, #296]
  43a360:	stp	w3, w0, [x2]
  43a364:	add	x2, x2, #0x8
  43a368:	ldr	x0, [sp, #168]
  43a36c:	add	x0, x0, #0x1
  43a370:	str	x0, [sp, #168]
  43a374:	b	43a338 <ferror@plt+0x37568>
  43a378:	ldr	x1, [sp, #232]
  43a37c:	mov	x3, x23
  43a380:	mov	x2, x22
  43a384:	mov	x0, x20
  43a388:	bl	43795c <ferror@plt+0x34b8c>
  43a38c:	b	43a020 <ferror@plt+0x37250>
  43a390:	ldp	x1, x0, [x19, #88]
  43a394:	adrp	x3, 437000 <ferror@plt+0x34230>
  43a398:	mov	x2, #0x20                  	// #32
  43a39c:	add	x3, x3, #0x6c0
  43a3a0:	bl	43a5bc <ferror@plt+0x377ec>
  43a3a4:	mov	x0, x24
  43a3a8:	bl	437de8 <ferror@plt+0x35018>
  43a3ac:	and	w2, w0, #0xff
  43a3b0:	mov	x1, #0x4                   	// #4
  43a3b4:	ldr	x0, [sp, #152]
  43a3b8:	cmp	w26, #0x0
  43a3bc:	str	x0, [x19, #24]
  43a3c0:	mov	x0, #0xc                   	// #12
  43a3c4:	csel	x0, x0, x1, ne  // ne = any
  43a3c8:	stp	w26, w2, [x19, #44]
  43a3cc:	ldr	x1, [sp, #160]
  43a3d0:	stp	xzr, xzr, [x19, #56]
  43a3d4:	ldr	w7, [sp, #688]
  43a3d8:	add	x0, x0, x1
  43a3dc:	stp	xzr, xzr, [x19, #72]
  43a3e0:	mov	x2, x24
  43a3e4:	ldr	x1, [sp, #152]
  43a3e8:	stp	xzr, xzr, [x19, #104]
  43a3ec:	add	x0, x1, x0
  43a3f0:	str	x0, [x19, #32]
  43a3f4:	str	x0, [sp, #152]
  43a3f8:	ldr	x0, [sp, #488]
  43a3fc:	str	x0, [x19, #8]
  43a400:	ldr	x0, [sp, #224]
  43a404:	stp	xzr, xzr, [x19, #120]
  43a408:	ldr	x1, [sp, #480]
  43a40c:	str	x1, [x19]
  43a410:	sub	x1, x1, x0
  43a414:	ldr	w0, [sp, #248]
  43a418:	str	x1, [x19, #16]
  43a41c:	add	x1, sp, #0x290
  43a420:	str	w0, [x19, #40]
  43a424:	add	x0, sp, #0x150
  43a428:	stp	x19, x0, [sp, #24]
  43a42c:	ldr	x0, [sp, #696]
  43a430:	str	x0, [sp]
  43a434:	stp	x22, x23, [sp, #8]
  43a438:	mov	x0, x20
  43a43c:	str	x21, [sp, #40]
  43a440:	ldp	x5, x6, [x1]
  43a444:	ldp	x3, x4, [x1, #16]
  43a448:	ldr	x1, [sp, #192]
  43a44c:	bl	43833c <ferror@plt+0x3556c>
  43a450:	cbz	w0, 43a020 <ferror@plt+0x37250>
  43a454:	ldr	w0, [sp, #520]
  43a458:	cbz	w0, 439f1c <ferror@plt+0x3714c>
  43a45c:	b	43a020 <ferror@plt+0x37250>
  43a460:	mov	x3, x23
  43a464:	mov	x2, x22
  43a468:	add	x1, sp, #0x170
  43a46c:	mov	x0, x20
  43a470:	bl	43450c <ferror@plt+0x3173c>
  43a474:	cbz	w0, 439f60 <ferror@plt+0x37190>
  43a478:	ldp	x19, x25, [sp, #360]
  43a47c:	mov	x2, #0x18                  	// #24
  43a480:	ldr	x21, [sp, #336]
  43a484:	adrp	x3, 437000 <ferror@plt+0x34230>
  43a488:	add	x3, x3, #0x9e0
  43a48c:	mov	x0, x21
  43a490:	mov	x1, x19
  43a494:	ldr	x24, [sp, #392]
  43a498:	bl	43a5bc <ferror@plt+0x377ec>
  43a49c:	mov	x3, x23
  43a4a0:	mov	x2, x22
  43a4a4:	mov	x0, x20
  43a4a8:	mov	x1, #0xa0                  	// #160
  43a4ac:	bl	434290 <ferror@plt+0x314c0>
  43a4b0:	cbz	x0, 439f60 <ferror@plt+0x37190>
  43a4b4:	ldr	x1, [sp, #696]
  43a4b8:	stp	xzr, x1, [x0]
  43a4bc:	ldr	x1, [sp, #192]
  43a4c0:	str	x1, [x0, #16]
  43a4c4:	ldr	x1, [sp, #176]
  43a4c8:	str	x1, [x0, #56]
  43a4cc:	ldr	x1, [sp, #200]
  43a4d0:	str	x1, [x0, #64]
  43a4d4:	ldr	x1, [sp, #256]
  43a4d8:	str	x1, [x0, #72]
  43a4dc:	ldr	x1, [sp, #264]
  43a4e0:	str	x1, [x0, #80]
  43a4e4:	ldr	x1, [sp, #656]
  43a4e8:	str	x1, [x0, #88]
  43a4ec:	ldr	x1, [sp, #664]
  43a4f0:	str	x1, [x0, #96]
  43a4f4:	ldr	x1, [sp, #672]
  43a4f8:	str	x1, [x0, #104]
  43a4fc:	ldr	x1, [sp, #680]
  43a500:	str	x1, [x0, #112]
  43a504:	ldr	w1, [sp, #688]
  43a508:	str	w1, [x0, #120]
  43a50c:	ldr	x1, [sp, #728]
  43a510:	stp	x21, x19, [x0, #24]
  43a514:	stp	x25, x24, [x0, #40]
  43a518:	stp	xzr, xzr, [x0, #128]
  43a51c:	stp	xzr, xzr, [x0, #144]
  43a520:	cbz	x1, 43a528 <ferror@plt+0x37758>
  43a524:	str	x0, [x1]
  43a528:	ldr	w1, [x20, #8]
  43a52c:	add	x2, x20, #0x20
  43a530:	cbnz	w1, 43a580 <ferror@plt+0x377b0>
  43a534:	ldr	x1, [x20, #32]
  43a538:	cbnz	x1, 43a558 <ferror@plt+0x37788>
  43a53c:	str	x0, [x2]
  43a540:	ldr	x1, [sp, #720]
  43a544:	adrp	x0, 439000 <ferror@plt+0x36230>
  43a548:	add	x0, x0, #0xda0
  43a54c:	str	x0, [x1]
  43a550:	mov	w0, #0x1                   	// #1
  43a554:	b	439f64 <ferror@plt+0x37194>
  43a558:	mov	x2, x1
  43a55c:	ldr	x1, [x1]
  43a560:	b	43a538 <ferror@plt+0x37768>
  43a564:	ldxr	x3, [x1]
  43a568:	cbnz	x3, 43a574 <ferror@plt+0x377a4>
  43a56c:	stlxr	w4, x0, [x1]
  43a570:	cbnz	w4, 43a564 <ferror@plt+0x37794>
  43a574:	dmb	ish
  43a578:	cmp	x3, #0x0
  43a57c:	b.eq	43a540 <ferror@plt+0x37770>  // b.none
  43a580:	mov	x1, x2
  43a584:	ldar	x3, [x1]
  43a588:	cbz	x3, 43a564 <ferror@plt+0x37794>
  43a58c:	mov	x1, x3
  43a590:	b	43a584 <ferror@plt+0x377b4>
  43a594:	mov	x3, #0x0                   	// #0
  43a598:	cmp	x3, x2
  43a59c:	b.ne	43a5a4 <ferror@plt+0x377d4>  // b.any
  43a5a0:	ret
  43a5a4:	ldrb	w5, [x1, x3]
  43a5a8:	ldrb	w4, [x0, x3]
  43a5ac:	strb	w5, [x0, x3]
  43a5b0:	strb	w4, [x1, x3]
  43a5b4:	add	x3, x3, #0x1
  43a5b8:	b	43a598 <ferror@plt+0x377c8>
  43a5bc:	stp	x29, x30, [sp, #-80]!
  43a5c0:	mov	x29, sp
  43a5c4:	stp	x19, x20, [sp, #16]
  43a5c8:	mov	x20, x0
  43a5cc:	mov	x19, x2
  43a5d0:	stp	x21, x22, [sp, #32]
  43a5d4:	mov	x22, x1
  43a5d8:	stp	x23, x24, [sp, #48]
  43a5dc:	mov	x24, x3
  43a5e0:	str	x25, [sp, #64]
  43a5e4:	cmp	x22, #0x1
  43a5e8:	b.ls	43a6b8 <ferror@plt+0x378e8>  // b.plast
  43a5ec:	lsr	x1, x22, #1
  43a5f0:	add	x25, x20, x19
  43a5f4:	mov	x21, #0x0                   	// #0
  43a5f8:	mov	x23, #0x1                   	// #1
  43a5fc:	mov	x2, x19
  43a600:	mov	x0, x20
  43a604:	madd	x1, x1, x19, x20
  43a608:	bl	43a594 <ferror@plt+0x377c4>
  43a60c:	mov	x1, x25
  43a610:	mov	x0, x20
  43a614:	blr	x24
  43a618:	cmp	w0, #0x0
  43a61c:	b.le	43a63c <ferror@plt+0x3786c>
  43a620:	add	x21, x21, #0x1
  43a624:	cmp	x21, x23
  43a628:	b.eq	43a63c <ferror@plt+0x3786c>  // b.none
  43a62c:	madd	x0, x21, x19, x20
  43a630:	mov	x2, x19
  43a634:	mov	x1, x25
  43a638:	bl	43a594 <ferror@plt+0x377c4>
  43a63c:	add	x23, x23, #0x1
  43a640:	add	x25, x25, x19
  43a644:	cmp	x22, x23
  43a648:	b.ne	43a60c <ferror@plt+0x3783c>  // b.any
  43a64c:	madd	x1, x21, x19, x19
  43a650:	sub	x23, x22, #0x1
  43a654:	sub	x23, x23, x21
  43a658:	add	x25, x20, x1
  43a65c:	cbnz	x21, 43a680 <ferror@plt+0x378b0>
  43a660:	mov	x3, x24
  43a664:	mov	x2, x19
  43a668:	mov	x1, x21
  43a66c:	mov	x0, x20
  43a670:	bl	43a5bc <ferror@plt+0x377ec>
  43a674:	mov	x20, x25
  43a678:	mov	x22, x23
  43a67c:	b	43a5e4 <ferror@plt+0x37814>
  43a680:	sub	x1, x1, x19
  43a684:	mov	x2, x19
  43a688:	add	x1, x20, x1
  43a68c:	mov	x0, x20
  43a690:	bl	43a594 <ferror@plt+0x377c4>
  43a694:	cmp	x22, x21, lsl #1
  43a698:	b.hi	43a660 <ferror@plt+0x37890>  // b.pmore
  43a69c:	mov	x1, x23
  43a6a0:	mov	x0, x25
  43a6a4:	mov	x3, x24
  43a6a8:	mov	x25, x20
  43a6ac:	mov	x23, x21
  43a6b0:	bl	43a5bc <ferror@plt+0x377ec>
  43a6b4:	b	43a674 <ferror@plt+0x378a4>
  43a6b8:	ldp	x19, x20, [sp, #16]
  43a6bc:	ldp	x21, x22, [sp, #32]
  43a6c0:	ldp	x23, x24, [sp, #48]
  43a6c4:	ldr	x25, [sp, #64]
  43a6c8:	ldp	x29, x30, [sp], #80
  43a6cc:	ret
  43a6d0:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x255fc>
  43a6d4:	mov	w2, w0
  43a6d8:	add	x1, x1, #0xb00
  43a6dc:	ldr	w0, [x1, #8]
  43a6e0:	cbz	w0, 43a6f8 <ferror@plt+0x37928>
  43a6e4:	cmp	w0, w2
  43a6e8:	b.ne	43a6fc <ferror@plt+0x3792c>  // b.any
  43a6ec:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  43a6f0:	str	w2, [x0, #1360]
  43a6f4:	mov	w0, w2
  43a6f8:	ret
  43a6fc:	add	x1, x1, #0x18
  43a700:	b	43a6dc <ferror@plt+0x3790c>
  43a704:	stp	x29, x30, [sp, #-48]!
  43a708:	mov	x29, sp
  43a70c:	stp	x19, x20, [sp, #16]
  43a710:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x255fc>
  43a714:	mov	x20, x0
  43a718:	add	x19, x19, #0xb00
  43a71c:	str	x21, [sp, #32]
  43a720:	ldr	w21, [x19, #8]
  43a724:	cbnz	w21, 43a73c <ferror@plt+0x3796c>
  43a728:	mov	w0, w21
  43a72c:	ldp	x19, x20, [sp, #16]
  43a730:	ldr	x21, [sp, #32]
  43a734:	ldp	x29, x30, [sp], #48
  43a738:	ret
  43a73c:	ldr	x1, [x19]
  43a740:	mov	x0, x20
  43a744:	bl	402ad0 <strcmp@plt>
  43a748:	cbz	w0, 43a728 <ferror@plt+0x37958>
  43a74c:	add	x19, x19, #0x18
  43a750:	b	43a720 <ferror@plt+0x37950>
  43a754:	stp	x29, x30, [sp, #-32]!
  43a758:	mov	x29, sp
  43a75c:	str	x19, [sp, #16]
  43a760:	bl	440520 <ferror@plt+0x3d750>
  43a764:	mov	x19, x0
  43a768:	cbz	x0, 43a77c <ferror@plt+0x379ac>
  43a76c:	bl	444aac <_obstack_memory_used@@Base+0xa8>
  43a770:	cbz	w0, 43a78c <ferror@plt+0x379bc>
  43a774:	mov	x0, x19
  43a778:	bl	444e44 <_obstack_memory_used@@Base+0x440>
  43a77c:	mov	x0, x19
  43a780:	ldr	x19, [sp, #16]
  43a784:	ldp	x29, x30, [sp], #32
  43a788:	ret
  43a78c:	mov	x0, x19
  43a790:	mov	x19, #0x0                   	// #0
  43a794:	bl	402b30 <free@plt>
  43a798:	b	43a77c <ferror@plt+0x379ac>
  43a79c:	stp	x29, x30, [sp, #-112]!
  43a7a0:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x255fc>
  43a7a4:	mov	x2, #0x5                   	// #5
  43a7a8:	mov	x29, sp
  43a7ac:	add	x1, x1, #0x946
  43a7b0:	stp	x19, x20, [sp, #16]
  43a7b4:	mov	x20, x0
  43a7b8:	stp	x21, x22, [sp, #32]
  43a7bc:	stp	x23, x24, [sp, #48]
  43a7c0:	stp	x25, x26, [sp, #64]
  43a7c4:	stp	x27, x28, [sp, #80]
  43a7c8:	bl	4028d0 <strncmp@plt>
  43a7cc:	cbnz	w0, 43a7d4 <ferror@plt+0x37a04>
  43a7d0:	add	x20, x20, #0x5
  43a7d4:	ldrb	w0, [x20]
  43a7d8:	adrp	x26, 46c000 <_obstack_memory_used@@Base+0x275fc>
  43a7dc:	add	x26, x26, #0xb08
  43a7e0:	ldrh	w0, [x26, x0, lsl #1]
  43a7e4:	tbz	w0, #3, 43ac54 <ferror@plt+0x37e84>
  43a7e8:	mov	x0, x20
  43a7ec:	bl	402700 <strlen@plt>
  43a7f0:	add	w0, w0, #0x8
  43a7f4:	adrp	x23, 46a000 <_obstack_memory_used@@Base+0x255fc>
  43a7f8:	add	x23, x23, #0xb00
  43a7fc:	adrp	x24, 46a000 <_obstack_memory_used@@Base+0x255fc>
  43a800:	sxtw	x0, w0
  43a804:	mov	x19, x20
  43a808:	bl	44526c <_obstack_memory_used@@Base+0x868>
  43a80c:	add	x23, x23, #0xc0
  43a810:	mov	x22, x0
  43a814:	mov	x25, x0
  43a818:	add	x24, x24, #0x927
  43a81c:	ldrb	w1, [x19]
  43a820:	ldrb	w0, [x19]
  43a824:	ldrh	w1, [x26, x1, lsl #1]
  43a828:	tbz	w1, #3, 43a890 <ferror@plt+0x37ac0>
  43a82c:	ldrb	w0, [x19], #1
  43a830:	strb	w0, [x25], #1
  43a834:	ldrb	w1, [x19]
  43a838:	ldrb	w0, [x19]
  43a83c:	ldrh	w1, [x26, x1, lsl #1]
  43a840:	tst	w1, #0xc
  43a844:	b.ne	43a82c <ferror@plt+0x37a5c>  // b.any
  43a848:	cmp	w0, #0x5f
  43a84c:	b.ne	43a860 <ferror@plt+0x37a90>  // b.any
  43a850:	ldrb	w0, [x19, #1]
  43a854:	ldrh	w0, [x26, x0, lsl #1]
  43a858:	tst	w0, #0xc
  43a85c:	b.ne	43a82c <ferror@plt+0x37a5c>  // b.any
  43a860:	ldrb	w0, [x19]
  43a864:	cmp	w0, #0x54
  43a868:	b.ne	43a97c <ferror@plt+0x37bac>  // b.any
  43a86c:	ldrb	w1, [x19, #1]
  43a870:	cmp	w1, #0x4b
  43a874:	b.ne	43a98c <ferror@plt+0x37bbc>  // b.any
  43a878:	ldrb	w0, [x19, #2]
  43a87c:	cmp	w0, #0x42
  43a880:	b.ne	43a954 <ferror@plt+0x37b84>  // b.any
  43a884:	ldrb	w0, [x19, #3]
  43a888:	cbnz	w0, 43a898 <ferror@plt+0x37ac8>
  43a88c:	b	43ab30 <ferror@plt+0x37d60>
  43a890:	cmp	w0, #0x4f
  43a894:	b.eq	43a8d0 <ferror@plt+0x37b00>  // b.none
  43a898:	mov	x0, x22
  43a89c:	bl	402b30 <free@plt>
  43a8a0:	mov	x0, x20
  43a8a4:	bl	402700 <strlen@plt>
  43a8a8:	add	w0, w0, #0x3
  43a8ac:	sxtw	x0, w0
  43a8b0:	bl	44526c <_obstack_memory_used@@Base+0x868>
  43a8b4:	ldrb	w1, [x20]
  43a8b8:	mov	x22, x0
  43a8bc:	cmp	w1, #0x3c
  43a8c0:	b.ne	43ac5c <ferror@plt+0x37e8c>  // b.any
  43a8c4:	mov	x1, x20
  43a8c8:	bl	402bd0 <strcpy@plt>
  43a8cc:	b	43ab34 <ferror@plt+0x37d64>
  43a8d0:	mov	x21, #0x0                   	// #0
  43a8d4:	lsl	x0, x21, #4
  43a8d8:	mov	w3, w21
  43a8dc:	ldr	x28, [x0, x23]
  43a8e0:	cbz	x28, 43a898 <ferror@plt+0x37ac8>
  43a8e4:	mov	x0, x28
  43a8e8:	str	w3, [sp, #108]
  43a8ec:	bl	402700 <strlen@plt>
  43a8f0:	mov	x2, x0
  43a8f4:	mov	x27, x0
  43a8f8:	mov	x1, x28
  43a8fc:	mov	x0, x19
  43a900:	bl	4028d0 <strncmp@plt>
  43a904:	ldr	w3, [sp, #108]
  43a908:	add	x21, x21, #0x1
  43a90c:	cbnz	w0, 43a8d4 <ferror@plt+0x37b04>
  43a910:	add	x3, x23, w3, sxtw #4
  43a914:	add	x19, x19, x27
  43a918:	mov	w27, #0x22                  	// #34
  43a91c:	ldr	x28, [x3, #8]
  43a920:	mov	x0, x28
  43a924:	bl	402700 <strlen@plt>
  43a928:	mov	x3, x25
  43a92c:	mov	x21, x0
  43a930:	mov	x2, x0
  43a934:	mov	x1, x28
  43a938:	strb	w27, [x3], #1
  43a93c:	mov	x0, x3
  43a940:	bl	4026a0 <memcpy@plt>
  43a944:	add	x25, x0, x21
  43a948:	strb	w27, [x0, x21]
  43a94c:	add	x25, x25, #0x1
  43a950:	b	43a860 <ferror@plt+0x37a90>
  43a954:	cmp	w0, #0x5f
  43a958:	b.ne	43a898 <ferror@plt+0x37ac8>  // b.any
  43a95c:	ldrb	w0, [x19, #3]
  43a960:	cmp	w0, #0x5f
  43a964:	b.ne	43a898 <ferror@plt+0x37ac8>  // b.any
  43a968:	add	x21, x19, #0x4
  43a96c:	mov	w0, #0x2e                  	// #46
  43a970:	mov	x19, x21
  43a974:	strb	w0, [x25], #1
  43a978:	b	43a81c <ferror@plt+0x37a4c>
  43a97c:	cmp	w0, #0x45
  43a980:	b.ne	43a98c <ferror@plt+0x37bbc>  // b.any
  43a984:	ldrb	w1, [x19, #1]
  43a988:	cbz	w1, 43a898 <ferror@plt+0x37ac8>
  43a98c:	cmp	w0, #0x4e
  43a990:	cset	w1, eq  // eq = none
  43a994:	cmp	w0, #0x50
  43a998:	ccmp	w1, #0x0, #0x0, ne  // ne = any
  43a99c:	b.eq	43a9a8 <ferror@plt+0x37bd8>  // b.none
  43a9a0:	ldrb	w2, [x19, #1]
  43a9a4:	cbz	w2, 43ab30 <ferror@plt+0x37d60>
  43a9a8:	cmp	w0, #0x53
  43a9ac:	ccmp	w1, #0x0, #0x0, ne  // ne = any
  43a9b0:	b.eq	43a9bc <ferror@plt+0x37bec>  // b.none
  43a9b4:	ldrb	w1, [x19, #1]
  43a9b8:	cbz	w1, 43a898 <ferror@plt+0x37ac8>
  43a9bc:	cmp	w0, #0x58
  43a9c0:	b.ne	43a9dc <ferror@plt+0x37c0c>  // b.any
  43a9c4:	add	x19, x19, #0x1
  43a9c8:	mov	w1, #0x62                  	// #98
  43a9cc:	ldrb	w0, [x19]
  43a9d0:	cmp	w0, #0x6e
  43a9d4:	ccmp	w0, w1, #0x4, ne  // ne = any
  43a9d8:	b.eq	43aa28 <ferror@plt+0x37c58>  // b.none
  43a9dc:	ldrb	w0, [x19]
  43a9e0:	cmp	w0, #0x53
  43a9e4:	b.ne	43aaf4 <ferror@plt+0x37d24>  // b.any
  43a9e8:	ldrb	w0, [x19, #1]
  43a9ec:	cbz	w0, 43aa5c <ferror@plt+0x37c8c>
  43a9f0:	ldrb	w1, [x19, #2]
  43a9f4:	cmp	w1, #0x5f
  43a9f8:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  43a9fc:	b.ne	43aa5c <ferror@plt+0x37c8c>  // b.any
  43aa00:	cmp	w0, #0x52
  43aa04:	b.eq	43aae0 <ferror@plt+0x37d10>  // b.none
  43aa08:	b.hi	43aa30 <ferror@plt+0x37c60>  // b.pmore
  43aa0c:	cmp	w0, #0x49
  43aa10:	b.eq	43aae8 <ferror@plt+0x37d18>  // b.none
  43aa14:	cmp	w0, #0x4f
  43aa18:	b.ne	43a898 <ferror@plt+0x37ac8>  // b.any
  43aa1c:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x255fc>
  43aa20:	add	x21, x21, #0x91f
  43aa24:	b	43aa40 <ferror@plt+0x37c70>
  43aa28:	add	x19, x19, #0x1
  43aa2c:	b	43a9cc <ferror@plt+0x37bfc>
  43aa30:	cmp	w0, #0x57
  43aa34:	b.ne	43a898 <ferror@plt+0x37ac8>  // b.any
  43aa38:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x255fc>
  43aa3c:	add	x21, x21, #0x92d
  43aa40:	mov	x1, x21
  43aa44:	mov	x0, x25
  43aa48:	bl	402bd0 <strcpy@plt>
  43aa4c:	add	x19, x19, #0x2
  43aa50:	mov	x0, x21
  43aa54:	bl	402700 <strlen@plt>
  43aa58:	add	x25, x25, x0
  43aa5c:	ldrb	w0, [x19]
  43aa60:	cmp	w0, #0x5f
  43aa64:	b.ne	43aab0 <ferror@plt+0x37ce0>  // b.any
  43aa68:	ldrb	w0, [x19, #1]
  43aa6c:	cmp	w0, #0x5f
  43aa70:	b.ne	43ac10 <ferror@plt+0x37e40>  // b.any
  43aa74:	ldrb	w1, [x19, #2]
  43aa78:	add	x21, x19, #0x2
  43aa7c:	ldrb	w0, [x19, #2]
  43aa80:	ldrh	w1, [x26, x1, lsl #1]
  43aa84:	tbz	w1, #2, 43ab90 <ferror@plt+0x37dc0>
  43aa88:	ldrb	w1, [x21, #1]
  43aa8c:	add	x19, x21, #0x1
  43aa90:	ldrb	w0, [x21, #1]
  43aa94:	ldrh	w1, [x26, x1, lsl #1]
  43aa98:	tbnz	w1, #2, 43ab60 <ferror@plt+0x37d90>
  43aa9c:	cmp	w0, #0x5f
  43aaa0:	b.ne	43ab68 <ferror@plt+0x37d98>  // b.any
  43aaa4:	ldrb	w0, [x19, #1]
  43aaa8:	ldrh	w0, [x26, x0, lsl #1]
  43aaac:	tbnz	w0, #2, 43ab60 <ferror@plt+0x37d90>
  43aab0:	ldrb	w0, [x19]
  43aab4:	cmp	w0, #0x2e
  43aab8:	b.ne	43aad8 <ferror@plt+0x37d08>  // b.any
  43aabc:	ldrb	w0, [x19, #1]
  43aac0:	ldrh	w0, [x26, x0, lsl #1]
  43aac4:	tbz	w0, #2, 43a898 <ferror@plt+0x37ac8>
  43aac8:	add	x19, x19, #0x2
  43aacc:	ldrb	w0, [x19]
  43aad0:	ldrh	w0, [x26, x0, lsl #1]
  43aad4:	tbnz	w0, #2, 43ac4c <ferror@plt+0x37e7c>
  43aad8:	ldrb	w0, [x19]
  43aadc:	b	43a888 <ferror@plt+0x37ab8>
  43aae0:	mov	x21, x24
  43aae4:	b	43aa40 <ferror@plt+0x37c70>
  43aae8:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x255fc>
  43aaec:	add	x21, x21, #0x918
  43aaf0:	b	43aa40 <ferror@plt+0x37c70>
  43aaf4:	cmp	w0, #0x44
  43aaf8:	b.ne	43aa5c <ferror@plt+0x37c8c>  // b.any
  43aafc:	ldrb	w0, [x19, #1]
  43ab00:	cmp	w0, #0x41
  43ab04:	b.eq	43ab54 <ferror@plt+0x37d84>  // b.none
  43ab08:	cmp	w0, #0x46
  43ab0c:	b.ne	43a898 <ferror@plt+0x37ac8>  // b.any
  43ab10:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x255fc>
  43ab14:	add	x19, x19, #0x93c
  43ab18:	mov	x1, x19
  43ab1c:	mov	x0, x25
  43ab20:	bl	402bd0 <strcpy@plt>
  43ab24:	mov	x0, x19
  43ab28:	bl	402700 <strlen@plt>
  43ab2c:	add	x25, x25, x0
  43ab30:	strb	wzr, [x25]
  43ab34:	mov	x0, x22
  43ab38:	ldp	x19, x20, [sp, #16]
  43ab3c:	ldp	x21, x22, [sp, #32]
  43ab40:	ldp	x23, x24, [sp, #48]
  43ab44:	ldp	x25, x26, [sp, #64]
  43ab48:	ldp	x27, x28, [sp, #80]
  43ab4c:	ldp	x29, x30, [sp], #112
  43ab50:	ret
  43ab54:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x255fc>
  43ab58:	add	x19, x19, #0x934
  43ab5c:	b	43ab18 <ferror@plt+0x37d48>
  43ab60:	mov	x21, x19
  43ab64:	b	43aa88 <ferror@plt+0x37cb8>
  43ab68:	cmp	w0, #0x58
  43ab6c:	b.ne	43aab0 <ferror@plt+0x37ce0>  // b.any
  43ab70:	add	x19, x21, #0x2
  43ab74:	mov	w1, #0x62                  	// #98
  43ab78:	ldrb	w0, [x19]
  43ab7c:	cmp	w0, #0x6e
  43ab80:	ccmp	w0, w1, #0x4, ne  // ne = any
  43ab84:	b.ne	43aab0 <ferror@plt+0x37ce0>  // b.any
  43ab88:	add	x19, x19, #0x1
  43ab8c:	b	43ab78 <ferror@plt+0x37da8>
  43ab90:	cmp	w0, #0x5f
  43ab94:	b.ne	43a96c <ferror@plt+0x37b9c>  // b.any
  43ab98:	ldrb	w0, [x19, #3]
  43ab9c:	cmp	w0, #0x5f
  43aba0:	b.eq	43a96c <ferror@plt+0x37b9c>  // b.none
  43aba4:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x255fc>
  43aba8:	add	x19, x19, #0xb00
  43abac:	add	x19, x19, #0x200
  43abb0:	mov	x23, #0x0                   	// #0
  43abb4:	lsl	x0, x23, #4
  43abb8:	mov	w26, w23
  43abbc:	ldr	x24, [x0, x19]
  43abc0:	cbz	x24, 43a898 <ferror@plt+0x37ac8>
  43abc4:	mov	x0, x24
  43abc8:	bl	402700 <strlen@plt>
  43abcc:	mov	x1, x24
  43abd0:	mov	x2, x0
  43abd4:	add	x23, x23, #0x1
  43abd8:	mov	x0, x21
  43abdc:	bl	4028d0 <strncmp@plt>
  43abe0:	cbnz	w0, 43abb4 <ferror@plt+0x37de4>
  43abe4:	add	x19, x19, w26, sxtw #4
  43abe8:	ldr	x20, [x19, #8]
  43abec:	mov	x0, x20
  43abf0:	bl	402700 <strlen@plt>
  43abf4:	mov	x19, x0
  43abf8:	mov	x2, x0
  43abfc:	mov	x1, x20
  43ac00:	mov	x0, x25
  43ac04:	add	x25, x25, x19
  43ac08:	bl	4026a0 <memcpy@plt>
  43ac0c:	b	43ab30 <ferror@plt+0x37d60>
  43ac10:	cmp	w0, #0x42
  43ac14:	mov	w1, #0x45                  	// #69
  43ac18:	ccmp	w0, w1, #0x4, ne  // ne = any
  43ac1c:	b.ne	43a898 <ferror@plt+0x37ac8>  // b.any
  43ac20:	add	x19, x19, #0x2
  43ac24:	ldrb	w1, [x19]
  43ac28:	ldrb	w0, [x19]
  43ac2c:	ldrh	w1, [x26, x1, lsl #1]
  43ac30:	tbnz	w1, #2, 43ac44 <ferror@plt+0x37e74>
  43ac34:	cmp	w0, #0x73
  43ac38:	b.ne	43a898 <ferror@plt+0x37ac8>  // b.any
  43ac3c:	ldrb	w0, [x19, #1]
  43ac40:	b	43a888 <ferror@plt+0x37ab8>
  43ac44:	add	x19, x19, #0x1
  43ac48:	b	43ac24 <ferror@plt+0x37e54>
  43ac4c:	add	x19, x19, #0x1
  43ac50:	b	43aacc <ferror@plt+0x37cfc>
  43ac54:	mov	x22, #0x0                   	// #0
  43ac58:	b	43a898 <ferror@plt+0x37ac8>
  43ac5c:	mov	x2, x20
  43ac60:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x255fc>
  43ac64:	add	x1, x1, #0x94c
  43ac68:	bl	4027a0 <sprintf@plt>
  43ac6c:	b	43ab34 <ferror@plt+0x37d64>
  43ac70:	stp	x29, x30, [sp, #-48]!
  43ac74:	mov	x29, sp
  43ac78:	stp	x19, x20, [sp, #16]
  43ac7c:	mov	w19, w1
  43ac80:	adrp	x1, 495000 <_obstack_memory_used@@Base+0x505fc>
  43ac84:	str	x21, [sp, #32]
  43ac88:	ldr	w1, [x1, #1360]
  43ac8c:	cmn	w1, #0x1
  43ac90:	b.ne	43aca4 <ferror@plt+0x37ed4>  // b.any
  43ac94:	ldp	x19, x20, [sp, #16]
  43ac98:	ldr	x21, [sp, #32]
  43ac9c:	ldp	x29, x30, [sp], #48
  43aca0:	b	445390 <_obstack_memory_used@@Base+0x98c>
  43aca4:	mov	x21, x0
  43aca8:	mov	w0, #0xc104                	// #49412
  43acac:	movk	w0, #0x3, lsl #16
  43acb0:	tst	w19, w0
  43acb4:	b.ne	43acc0 <ferror@plt+0x37ef0>  // b.any
  43acb8:	and	w1, w1, w0
  43acbc:	orr	w19, w19, w1
  43acc0:	mov	w0, #0x4100                	// #16640
  43acc4:	movk	w0, #0x2, lsl #16
  43acc8:	tst	w19, w0
  43accc:	b.ne	43ad00 <ferror@plt+0x37f30>  // b.any
  43acd0:	tbz	w19, #2, 43ace4 <ferror@plt+0x37f14>
  43acd4:	mov	x0, x21
  43acd8:	bl	44053c <ferror@plt+0x3d76c>
  43acdc:	mov	x20, x0
  43ace0:	cbnz	x0, 43ad28 <ferror@plt+0x37f58>
  43ace4:	tbz	w19, #15, 43ad58 <ferror@plt+0x37f88>
  43ace8:	mov	w1, w19
  43acec:	mov	x0, x21
  43acf0:	ldp	x19, x20, [sp, #16]
  43acf4:	ldr	x21, [sp, #32]
  43acf8:	ldp	x29, x30, [sp], #48
  43acfc:	b	43a79c <ferror@plt+0x379cc>
  43ad00:	mov	w1, w19
  43ad04:	mov	x0, x21
  43ad08:	bl	440520 <ferror@plt+0x3d750>
  43ad0c:	mov	x20, x0
  43ad10:	tbnz	w19, #14, 43ad28 <ferror@plt+0x37f58>
  43ad14:	cbz	x0, 43ad50 <ferror@plt+0x37f80>
  43ad18:	bl	444aac <_obstack_memory_used@@Base+0xa8>
  43ad1c:	cbz	w0, 43ad3c <ferror@plt+0x37f6c>
  43ad20:	mov	x0, x20
  43ad24:	bl	444e44 <_obstack_memory_used@@Base+0x440>
  43ad28:	mov	x0, x20
  43ad2c:	ldp	x19, x20, [sp, #16]
  43ad30:	ldr	x21, [sp, #32]
  43ad34:	ldp	x29, x30, [sp], #48
  43ad38:	ret
  43ad3c:	tbz	w19, #17, 43ad28 <ferror@plt+0x37f58>
  43ad40:	mov	x0, x20
  43ad44:	bl	402b30 <free@plt>
  43ad48:	mov	x20, #0x0                   	// #0
  43ad4c:	b	43ad28 <ferror@plt+0x37f58>
  43ad50:	tbz	w19, #17, 43acd0 <ferror@plt+0x37f00>
  43ad54:	b	43ad48 <ferror@plt+0x37f78>
  43ad58:	tbz	w19, #16, 43ad48 <ferror@plt+0x37f78>
  43ad5c:	mov	w1, w19
  43ad60:	mov	x0, x21
  43ad64:	ldp	x19, x20, [sp, #16]
  43ad68:	ldr	x21, [sp, #32]
  43ad6c:	ldp	x29, x30, [sp], #48
  43ad70:	b	4435e0 <ferror@plt+0x40810>
  43ad74:	sub	w0, w0, #0x1c
  43ad78:	cmp	w0, #0x34
  43ad7c:	b.hi	43ad9c <ferror@plt+0x37fcc>  // b.pmore
  43ad80:	mov	x1, #0x1                   	// #1
  43ad84:	lsl	x0, x1, x0
  43ad88:	mov	x1, #0x1f                  	// #31
  43ad8c:	movk	x1, #0x1a, lsl #48
  43ad90:	tst	x0, x1
  43ad94:	cset	w0, ne  // ne = any
  43ad98:	ret
  43ad9c:	mov	w0, #0x0                   	// #0
  43ada0:	b	43ad98 <ferror@plt+0x37fc8>
  43ada4:	mov	x1, x0
  43ada8:	ldp	w2, w0, [x0, #40]
  43adac:	cmp	w2, w0
  43adb0:	b.ge	43add0 <ferror@plt+0x38000>  // b.tcont
  43adb4:	ldr	x3, [x1, #32]
  43adb8:	mov	w0, #0x18                  	// #24
  43adbc:	smaddl	x0, w2, w0, x3
  43adc0:	add	w2, w2, #0x1
  43adc4:	str	wzr, [x0, #4]
  43adc8:	str	w2, [x1, #40]
  43adcc:	ret
  43add0:	mov	x0, #0x0                   	// #0
  43add4:	b	43adcc <ferror@plt+0x37ffc>
  43add8:	mov	x5, x2
  43addc:	sub	w2, w1, #0x1
  43ade0:	cmp	w2, #0x4f
  43ade4:	b.hi	43ae14 <ferror@plt+0x38044>  // b.pmore
  43ade8:	mov	w6, w1
  43adec:	mov	x4, x3
  43adf0:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x255fc>
  43adf4:	add	x1, x1, #0xd60
  43adf8:	ldrb	w1, [x1, w2, uxtw]
  43adfc:	adr	x2, 43ae08 <ferror@plt+0x38038>
  43ae00:	add	x1, x2, w1, sxtb #2
  43ae04:	br	x1
  43ae08:	cmp	x5, #0x0
  43ae0c:	ccmp	x3, #0x0, #0x4, ne  // ne = any
  43ae10:	b.ne	43ae20 <ferror@plt+0x38050>  // b.any
  43ae14:	mov	x0, #0x0                   	// #0
  43ae18:	ret
  43ae1c:	cbz	x5, 43ae14 <ferror@plt+0x38044>
  43ae20:	stp	x29, x30, [sp, #-16]!
  43ae24:	mov	x29, sp
  43ae28:	bl	43ada4 <ferror@plt+0x37fd4>
  43ae2c:	cbz	x0, 43ae38 <ferror@plt+0x38068>
  43ae30:	str	w6, [x0]
  43ae34:	stp	x5, x4, [x0, #8]
  43ae38:	ldp	x29, x30, [sp], #16
  43ae3c:	ret
  43ae40:	cbnz	x3, 43ae20 <ferror@plt+0x38050>
  43ae44:	b	43ae14 <ferror@plt+0x38044>
  43ae48:	mov	x4, x1
  43ae4c:	stp	x29, x30, [sp, #-16]!
  43ae50:	mov	x29, sp
  43ae54:	bl	43ada4 <ferror@plt+0x37fd4>
  43ae58:	cbz	x0, 43ae68 <ferror@plt+0x38098>
  43ae5c:	mov	w1, #0x27                  	// #39
  43ae60:	str	w1, [x0]
  43ae64:	str	x4, [x0, #8]
  43ae68:	ldp	x29, x30, [sp], #16
  43ae6c:	ret
  43ae70:	ldr	x4, [x0, #24]
  43ae74:	mov	x2, x1
  43ae78:	mov	w3, #0x4f                  	// #79
  43ae7c:	ldrb	w1, [x4]
  43ae80:	cmp	w1, #0x52
  43ae84:	ccmp	w1, w3, #0x4, ne  // ne = any
  43ae88:	b.ne	43aec0 <ferror@plt+0x380f0>  // b.any
  43ae8c:	ldr	w3, [x0, #72]
  43ae90:	cmp	w1, #0x52
  43ae94:	b.ne	43aeb4 <ferror@plt+0x380e4>  // b.any
  43ae98:	add	w3, w3, #0x2
  43ae9c:	mov	w1, #0x1f                  	// #31
  43aea0:	add	x4, x4, #0x1
  43aea4:	str	x4, [x0, #24]
  43aea8:	str	w3, [x0, #72]
  43aeac:	mov	x3, #0x0                   	// #0
  43aeb0:	b	43add8 <ferror@plt+0x38008>
  43aeb4:	add	w3, w3, #0x3
  43aeb8:	mov	w1, #0x20                  	// #32
  43aebc:	b	43aea0 <ferror@plt+0x380d0>
  43aec0:	mov	x0, x2
  43aec4:	ret
  43aec8:	cbz	x1, 43aef0 <ferror@plt+0x38120>
  43aecc:	ldp	w2, w3, [x0, #56]
  43aed0:	cmp	w2, w3
  43aed4:	b.ge	43aef0 <ferror@plt+0x38120>  // b.tcont
  43aed8:	ldr	x3, [x0, #48]
  43aedc:	str	x1, [x3, w2, sxtw #3]
  43aee0:	add	w2, w2, #0x1
  43aee4:	str	w2, [x0, #56]
  43aee8:	mov	w0, #0x1                   	// #1
  43aeec:	ret
  43aef0:	mov	w0, #0x0                   	// #0
  43aef4:	b	43aeec <ferror@plt+0x3811c>
  43aef8:	stp	x29, x30, [sp, #-32]!
  43aefc:	mov	x29, sp
  43af00:	stp	x19, x20, [sp, #16]
  43af04:	mov	x19, x1
  43af08:	mov	x20, x0
  43af0c:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x255fc>
  43af10:	add	x1, x1, #0xdb0
  43af14:	cbz	x19, 43af7c <ferror@plt+0x381ac>
  43af18:	ldr	w0, [x19]
  43af1c:	sub	w0, w0, #0x1
  43af20:	cmp	w0, #0x4f
  43af24:	b.hi	43af7c <ferror@plt+0x381ac>  // b.pmore
  43af28:	ldrb	w0, [x1, w0, uxtw]
  43af2c:	adr	x2, 43af38 <ferror@plt+0x38168>
  43af30:	add	x0, x2, w0, sxtb #2
  43af34:	br	x0
  43af38:	ldr	w0, [x20, #364]
  43af3c:	add	w0, w0, #0x1
  43af40:	str	w0, [x20, #364]
  43af44:	ldr	w0, [x20, #308]
  43af48:	cmp	w0, #0x800
  43af4c:	b.gt	43af7c <ferror@plt+0x381ac>
  43af50:	ldr	x1, [x19, #8]
  43af54:	add	w0, w0, #0x1
  43af58:	str	w0, [x20, #308]
  43af5c:	mov	x0, x20
  43af60:	bl	43aef8 <ferror@plt+0x38128>
  43af64:	ldr	x1, [x19, #16]
  43af68:	mov	x0, x20
  43af6c:	bl	43aef8 <ferror@plt+0x38128>
  43af70:	ldr	w0, [x20, #308]
  43af74:	sub	w0, w0, #0x1
  43af78:	str	w0, [x20, #308]
  43af7c:	ldp	x19, x20, [sp, #16]
  43af80:	ldp	x29, x30, [sp], #32
  43af84:	ret
  43af88:	ldr	x0, [x19, #8]
  43af8c:	ldr	w0, [x0]
  43af90:	cmp	w0, #0x5
  43af94:	b.ne	43af44 <ferror@plt+0x38174>  // b.any
  43af98:	ldr	w0, [x20, #348]
  43af9c:	add	w0, w0, #0x1
  43afa0:	str	w0, [x20, #348]
  43afa4:	b	43af44 <ferror@plt+0x38174>
  43afa8:	ldr	x19, [x19, #16]
  43afac:	b	43af14 <ferror@plt+0x38144>
  43afb0:	ldr	x19, [x19, #8]
  43afb4:	b	43af14 <ferror@plt+0x38144>
  43afb8:	stp	x29, x30, [sp, #-32]!
  43afbc:	mov	x29, sp
  43afc0:	ldr	x1, [x0, #256]
  43afc4:	str	x19, [sp, #16]
  43afc8:	mov	x19, x0
  43afcc:	strb	wzr, [x0, x1]
  43afd0:	ldp	x3, x2, [x0, #272]
  43afd4:	blr	x3
  43afd8:	str	xzr, [x19, #256]
  43afdc:	ldr	x0, [x19, #320]
  43afe0:	add	x0, x0, #0x1
  43afe4:	str	x0, [x19, #320]
  43afe8:	ldr	x19, [sp, #16]
  43afec:	ldp	x29, x30, [sp], #32
  43aff0:	ret
  43aff4:	stp	x29, x30, [sp, #-32]!
  43aff8:	mov	x29, sp
  43affc:	stp	x19, x20, [sp, #16]
  43b000:	and	w20, w1, #0xff
  43b004:	mov	x19, x0
  43b008:	ldr	x1, [x0, #256]
  43b00c:	cmp	x1, #0xff
  43b010:	b.ne	43b018 <ferror@plt+0x38248>  // b.any
  43b014:	bl	43afb8 <ferror@plt+0x381e8>
  43b018:	ldr	x0, [x19, #256]
  43b01c:	add	x1, x0, #0x1
  43b020:	str	x1, [x19, #256]
  43b024:	strb	w20, [x19, x0]
  43b028:	strb	w20, [x19, #264]
  43b02c:	ldp	x19, x20, [sp, #16]
  43b030:	ldp	x29, x30, [sp], #32
  43b034:	ret
  43b038:	stp	x29, x30, [sp, #-48]!
  43b03c:	mov	x29, sp
  43b040:	stp	x19, x20, [sp, #16]
  43b044:	mov	x19, x1
  43b048:	add	x20, x1, x2
  43b04c:	str	x21, [sp, #32]
  43b050:	mov	x21, x0
  43b054:	cmp	x19, x20
  43b058:	b.ne	43b06c <ferror@plt+0x3829c>  // b.any
  43b05c:	ldp	x19, x20, [sp, #16]
  43b060:	ldr	x21, [sp, #32]
  43b064:	ldp	x29, x30, [sp], #48
  43b068:	ret
  43b06c:	ldrb	w1, [x19], #1
  43b070:	mov	x0, x21
  43b074:	bl	43aff4 <ferror@plt+0x38224>
  43b078:	b	43b054 <ferror@plt+0x38284>
  43b07c:	mov	x1, x0
  43b080:	mov	w0, #0x0                   	// #0
  43b084:	cbz	x1, 43b09c <ferror@plt+0x382cc>
  43b088:	ldr	w2, [x1]
  43b08c:	cmp	w2, #0x2f
  43b090:	b.ne	43b09c <ferror@plt+0x382cc>  // b.any
  43b094:	ldr	x2, [x1, #8]
  43b098:	cbnz	x2, 43b0a0 <ferror@plt+0x382d0>
  43b09c:	ret
  43b0a0:	add	w0, w0, #0x1
  43b0a4:	ldr	x1, [x1, #16]
  43b0a8:	b	43b084 <ferror@plt+0x382b4>
  43b0ac:	stp	x29, x30, [sp, #-32]!
  43b0b0:	mov	x29, sp
  43b0b4:	stp	x19, x20, [sp, #16]
  43b0b8:	mov	x20, x0
  43b0bc:	mov	x19, x1
  43b0c0:	mov	x0, x1
  43b0c4:	bl	402700 <strlen@plt>
  43b0c8:	mov	x1, x19
  43b0cc:	mov	x2, x0
  43b0d0:	mov	x0, x20
  43b0d4:	ldp	x19, x20, [sp, #16]
  43b0d8:	ldp	x29, x30, [sp], #32
  43b0dc:	b	43b038 <ferror@plt+0x38268>
  43b0e0:	stp	x29, x30, [sp, #-64]!
  43b0e4:	mov	w2, w1
  43b0e8:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  43b0ec:	mov	x29, sp
  43b0f0:	add	x1, x1, #0x45c
  43b0f4:	str	x19, [sp, #16]
  43b0f8:	mov	x19, x0
  43b0fc:	add	x0, sp, #0x20
  43b100:	bl	4027a0 <sprintf@plt>
  43b104:	add	x1, sp, #0x20
  43b108:	mov	x0, x19
  43b10c:	bl	43b0ac <ferror@plt+0x382dc>
  43b110:	ldr	x19, [sp, #16]
  43b114:	ldp	x29, x30, [sp], #64
  43b118:	ret
  43b11c:	mov	x1, x0
  43b120:	ldr	x0, [x0]
  43b124:	ldrb	w3, [x0]
  43b128:	cmp	w3, #0x6e
  43b12c:	b.ne	43b168 <ferror@plt+0x38398>  // b.any
  43b130:	add	x2, x0, #0x1
  43b134:	str	x2, [x1]
  43b138:	mov	w5, #0x1                   	// #1
  43b13c:	ldrb	w3, [x0, #1]
  43b140:	mov	w0, #0x0                   	// #0
  43b144:	mov	w6, #0x7fffffff            	// #2147483647
  43b148:	mov	w4, #0xa                   	// #10
  43b14c:	sub	w2, w3, #0x30
  43b150:	and	w7, w2, #0xff
  43b154:	cmp	w7, #0x9
  43b158:	b.ls	43b170 <ferror@plt+0x383a0>  // b.plast
  43b15c:	cbz	w5, 43b164 <ferror@plt+0x38394>
  43b160:	neg	w0, w0
  43b164:	ret
  43b168:	mov	w5, #0x0                   	// #0
  43b16c:	b	43b140 <ferror@plt+0x38370>
  43b170:	sub	w2, w6, w2
  43b174:	udiv	w2, w2, w4
  43b178:	cmp	w2, w0
  43b17c:	b.lt	43b19c <ferror@plt+0x383cc>  // b.tstop
  43b180:	ldr	x2, [x1]
  43b184:	madd	w0, w0, w4, w3
  43b188:	add	x3, x2, #0x1
  43b18c:	str	x3, [x1]
  43b190:	sub	w0, w0, #0x30
  43b194:	ldrb	w3, [x2, #1]
  43b198:	b	43b14c <ferror@plt+0x3837c>
  43b19c:	mov	w0, #0xffffffff            	// #-1
  43b1a0:	b	43b164 <ferror@plt+0x38394>
  43b1a4:	mov	x4, x0
  43b1a8:	stp	x29, x30, [sp, #-16]!
  43b1ac:	mov	x29, sp
  43b1b0:	bl	43ada4 <ferror@plt+0x37fd4>
  43b1b4:	mov	x8, x0
  43b1b8:	cbz	x0, 43b1d4 <ferror@plt+0x38404>
  43b1bc:	mov	w0, #0x42                  	// #66
  43b1c0:	str	w0, [x8]
  43b1c4:	add	x0, x4, #0x18
  43b1c8:	bl	43b11c <ferror@plt+0x3834c>
  43b1cc:	sxtw	x0, w0
  43b1d0:	str	x0, [x8, #8]
  43b1d4:	mov	x0, x8
  43b1d8:	ldp	x29, x30, [sp], #16
  43b1dc:	ret
  43b1e0:	mov	x8, x0
  43b1e4:	ldr	x0, [x0, #24]
  43b1e8:	ldrb	w0, [x0]
  43b1ec:	cmp	w0, #0x5f
  43b1f0:	b.eq	43b244 <ferror@plt+0x38474>  // b.none
  43b1f4:	cmp	w0, #0x6e
  43b1f8:	b.ne	43b210 <ferror@plt+0x38440>  // b.any
  43b1fc:	mov	w0, #0xffffffff            	// #-1
  43b200:	ret
  43b204:	mov	w0, #0xffffffff            	// #-1
  43b208:	ldp	x29, x30, [sp], #16
  43b20c:	ret
  43b210:	stp	x29, x30, [sp, #-16]!
  43b214:	add	x0, x8, #0x18
  43b218:	mov	x29, sp
  43b21c:	bl	43b11c <ferror@plt+0x3834c>
  43b220:	adds	w0, w0, #0x1
  43b224:	b.mi	43b204 <ferror@plt+0x38434>  // b.first
  43b228:	ldr	x1, [x8, #24]
  43b22c:	ldrb	w2, [x1]
  43b230:	cmp	w2, #0x5f
  43b234:	b.ne	43b204 <ferror@plt+0x38434>  // b.any
  43b238:	add	x1, x1, #0x1
  43b23c:	str	x1, [x8, #24]
  43b240:	b	43b208 <ferror@plt+0x38438>
  43b244:	ldr	x1, [x8, #24]
  43b248:	mov	w0, #0x0                   	// #0
  43b24c:	ldrb	w2, [x1]
  43b250:	cmp	w2, #0x5f
  43b254:	b.ne	43b1fc <ferror@plt+0x3842c>  // b.any
  43b258:	add	x1, x1, #0x1
  43b25c:	str	x1, [x8, #24]
  43b260:	ret
  43b264:	ldr	x1, [x0, #24]
  43b268:	ldrb	w2, [x1]
  43b26c:	cmp	w2, #0x54
  43b270:	b.eq	43b288 <ferror@plt+0x384b8>  // b.none
  43b274:	mov	x0, #0x0                   	// #0
  43b278:	ret
  43b27c:	mov	x0, #0x0                   	// #0
  43b280:	ldp	x29, x30, [sp], #16
  43b284:	ret
  43b288:	stp	x29, x30, [sp, #-16]!
  43b28c:	add	x1, x1, #0x1
  43b290:	mov	x9, x0
  43b294:	mov	x29, sp
  43b298:	str	x1, [x0, #24]
  43b29c:	bl	43b1e0 <ferror@plt+0x38410>
  43b2a0:	sxtw	x4, w0
  43b2a4:	tbnz	w4, #31, 43b27c <ferror@plt+0x384ac>
  43b2a8:	mov	x0, x9
  43b2ac:	bl	43ada4 <ferror@plt+0x37fd4>
  43b2b0:	cbz	x0, 43b280 <ferror@plt+0x384b0>
  43b2b4:	mov	w1, #0x5                   	// #5
  43b2b8:	str	w1, [x0]
  43b2bc:	str	x4, [x0, #8]
  43b2c0:	b	43b280 <ferror@plt+0x384b0>
  43b2c4:	mov	x8, x0
  43b2c8:	cbnz	w1, 43b2f8 <ferror@plt+0x38528>
  43b2cc:	ldr	x0, [x0, #24]
  43b2d0:	ldrb	w1, [x0]
  43b2d4:	cbnz	w1, 43b2ec <ferror@plt+0x3851c>
  43b2d8:	mov	w0, #0x0                   	// #0
  43b2dc:	ret
  43b2e0:	mov	w0, #0x0                   	// #0
  43b2e4:	ldp	x29, x30, [sp], #16
  43b2e8:	ret
  43b2ec:	add	x1, x0, #0x1
  43b2f0:	str	x1, [x8, #24]
  43b2f4:	ldrb	w1, [x0]
  43b2f8:	stp	x29, x30, [sp, #-16]!
  43b2fc:	cmp	w1, #0x68
  43b300:	mov	x29, sp
  43b304:	b.ne	43b330 <ferror@plt+0x38560>  // b.any
  43b308:	add	x0, x8, #0x18
  43b30c:	bl	43b11c <ferror@plt+0x3834c>
  43b310:	ldr	x0, [x8, #24]
  43b314:	ldrb	w1, [x0]
  43b318:	cmp	w1, #0x5f
  43b31c:	b.ne	43b2e0 <ferror@plt+0x38510>  // b.any
  43b320:	add	x0, x0, #0x1
  43b324:	str	x0, [x8, #24]
  43b328:	mov	w0, #0x1                   	// #1
  43b32c:	b	43b2e4 <ferror@plt+0x38514>
  43b330:	cmp	w1, #0x76
  43b334:	b.ne	43b2e0 <ferror@plt+0x38510>  // b.any
  43b338:	add	x9, x8, #0x18
  43b33c:	mov	x0, x9
  43b340:	bl	43b11c <ferror@plt+0x3834c>
  43b344:	ldr	x0, [x8, #24]
  43b348:	ldrb	w1, [x0]
  43b34c:	cmp	w1, #0x5f
  43b350:	b.ne	43b2e0 <ferror@plt+0x38510>  // b.any
  43b354:	add	x0, x0, #0x1
  43b358:	str	x0, [x8, #24]
  43b35c:	mov	x0, x9
  43b360:	b	43b30c <ferror@plt+0x3853c>
  43b364:	ldrb	w2, [x0]
  43b368:	sub	w1, w2, #0x4b
  43b36c:	and	w1, w1, #0xff
  43b370:	cmp	w1, #0x27
  43b374:	b.ls	43b388 <ferror@plt+0x385b8>  // b.plast
  43b378:	cmp	w2, #0x44
  43b37c:	b.eq	43b39c <ferror@plt+0x385cc>  // b.none
  43b380:	mov	w0, #0x0                   	// #0
  43b384:	ret
  43b388:	mov	x0, #0x801                 	// #2049
  43b38c:	movk	x0, #0x80, lsl #32
  43b390:	lsr	x0, x0, x1
  43b394:	and	w0, w0, #0x1
  43b398:	b	43b384 <ferror@plt+0x385b4>
  43b39c:	ldrb	w0, [x0, #1]
  43b3a0:	and	w1, w0, #0xffffffdf
  43b3a4:	sub	w0, w0, #0x77
  43b3a8:	and	w0, w0, #0xff
  43b3ac:	cmp	w1, #0x4f
  43b3b0:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  43b3b4:	cset	w0, ls  // ls = plast
  43b3b8:	b	43b384 <ferror@plt+0x385b4>
  43b3bc:	ldr	x0, [x0]
  43b3c0:	ldrb	w1, [x0, #1]
  43b3c4:	cmp	w1, #0x63
  43b3c8:	b.ne	43b3f4 <ferror@plt+0x38624>  // b.any
  43b3cc:	ldrb	w0, [x0]
  43b3d0:	sub	w1, w0, #0x63
  43b3d4:	and	w1, w1, #0xff
  43b3d8:	cmp	w1, #0x1
  43b3dc:	b.ls	43b3fc <ferror@plt+0x3862c>  // b.plast
  43b3e0:	sub	w0, w0, #0x72
  43b3e4:	and	w0, w0, #0xff
  43b3e8:	cmp	w0, #0x1
  43b3ec:	cset	w0, ls  // ls = plast
  43b3f0:	ret
  43b3f4:	mov	w0, #0x0                   	// #0
  43b3f8:	b	43b3f0 <ferror@plt+0x38620>
  43b3fc:	mov	w0, #0x1                   	// #1
  43b400:	b	43b3f0 <ferror@plt+0x38620>
  43b404:	mov	x8, x0
  43b408:	ldr	x0, [x0, #24]
  43b40c:	ldrb	w1, [x0]
  43b410:	cmp	w1, #0x5f
  43b414:	b.eq	43b420 <ferror@plt+0x38650>  // b.none
  43b418:	mov	w0, #0x1                   	// #1
  43b41c:	ret
  43b420:	stp	x29, x30, [sp, #-16]!
  43b424:	add	x1, x0, #0x1
  43b428:	mov	x29, sp
  43b42c:	str	x1, [x8, #24]
  43b430:	ldrb	w1, [x0, #1]
  43b434:	cmp	w1, #0x5f
  43b438:	b.ne	43b484 <ferror@plt+0x386b4>  // b.any
  43b43c:	add	x0, x0, #0x2
  43b440:	mov	w9, #0x2                   	// #2
  43b444:	str	x0, [x8, #24]
  43b448:	add	x0, x8, #0x18
  43b44c:	bl	43b11c <ferror@plt+0x3834c>
  43b450:	tbnz	w0, #31, 43b48c <ferror@plt+0x386bc>
  43b454:	cmp	w9, #0x1
  43b458:	ccmp	w0, #0x9, #0x4, gt
  43b45c:	b.le	43b478 <ferror@plt+0x386a8>
  43b460:	ldr	x0, [x8, #24]
  43b464:	ldrb	w1, [x0]
  43b468:	cmp	w1, #0x5f
  43b46c:	b.ne	43b48c <ferror@plt+0x386bc>  // b.any
  43b470:	add	x0, x0, #0x1
  43b474:	str	x0, [x8, #24]
  43b478:	mov	w0, #0x1                   	// #1
  43b47c:	ldp	x29, x30, [sp], #16
  43b480:	ret
  43b484:	mov	w9, #0x1                   	// #1
  43b488:	b	43b448 <ferror@plt+0x38678>
  43b48c:	mov	w0, #0x0                   	// #0
  43b490:	b	43b47c <ferror@plt+0x386ac>
  43b494:	cbnz	x0, 43b49c <ferror@plt+0x386cc>
  43b498:	ret
  43b49c:	ldr	w2, [x0]
  43b4a0:	cmp	w2, #0x2f
  43b4a4:	b.ne	43b4c8 <ferror@plt+0x386f8>  // b.any
  43b4a8:	cmp	w1, #0x0
  43b4ac:	b.le	43b4bc <ferror@plt+0x386ec>
  43b4b0:	sub	w1, w1, #0x1
  43b4b4:	ldr	x0, [x0, #16]
  43b4b8:	b	43b494 <ferror@plt+0x386c4>
  43b4bc:	b.ne	43b4c8 <ferror@plt+0x386f8>  // b.any
  43b4c0:	ldr	x0, [x0, #8]
  43b4c4:	b	43b498 <ferror@plt+0x386c8>
  43b4c8:	mov	x0, #0x0                   	// #0
  43b4cc:	b	43b498 <ferror@plt+0x386c8>
  43b4d0:	stp	x29, x30, [sp, #-32]!
  43b4d4:	mov	x29, sp
  43b4d8:	stp	x19, x20, [sp, #16]
  43b4dc:	mov	x19, x0
  43b4e0:	ldr	w0, [x0, #24]
  43b4e4:	cbnz	w0, 43b528 <ferror@plt+0x38758>
  43b4e8:	ldr	x20, [x19, #16]
  43b4ec:	mov	x0, #0x2                   	// #2
  43b4f0:	cmp	x20, #0x0
  43b4f4:	csel	x20, x20, x0, ne  // ne = any
  43b4f8:	cmp	x20, x1
  43b4fc:	b.cc	43b534 <ferror@plt+0x38764>  // b.lo, b.ul, b.last
  43b500:	ldr	x0, [x19]
  43b504:	mov	x1, x20
  43b508:	bl	4029a0 <realloc@plt>
  43b50c:	cbnz	x0, 43b53c <ferror@plt+0x3876c>
  43b510:	ldr	x0, [x19]
  43b514:	bl	402b30 <free@plt>
  43b518:	stp	xzr, xzr, [x19]
  43b51c:	mov	w0, #0x1                   	// #1
  43b520:	str	xzr, [x19, #16]
  43b524:	str	w0, [x19, #24]
  43b528:	ldp	x19, x20, [sp, #16]
  43b52c:	ldp	x29, x30, [sp], #32
  43b530:	ret
  43b534:	lsl	x20, x20, #1
  43b538:	b	43b4f8 <ferror@plt+0x38728>
  43b53c:	str	x0, [x19]
  43b540:	str	x20, [x19, #16]
  43b544:	b	43b528 <ferror@plt+0x38758>
  43b548:	stp	x29, x30, [sp, #-48]!
  43b54c:	mov	x29, sp
  43b550:	str	x21, [sp, #32]
  43b554:	mov	x21, x0
  43b558:	ldr	x0, [x2, #8]
  43b55c:	stp	x19, x20, [sp, #16]
  43b560:	mov	x20, x1
  43b564:	add	x1, x1, #0x1
  43b568:	mov	x19, x2
  43b56c:	add	x1, x1, x0
  43b570:	ldr	x0, [x2, #16]
  43b574:	cmp	x1, x0
  43b578:	b.ls	43b584 <ferror@plt+0x387b4>  // b.plast
  43b57c:	mov	x0, x2
  43b580:	bl	43b4d0 <ferror@plt+0x38700>
  43b584:	ldr	w0, [x19, #24]
  43b588:	cbnz	w0, 43b5b8 <ferror@plt+0x387e8>
  43b58c:	ldp	x3, x0, [x19]
  43b590:	mov	x2, x20
  43b594:	mov	x1, x21
  43b598:	add	x0, x3, x0
  43b59c:	bl	4026a0 <memcpy@plt>
  43b5a0:	ldp	x0, x1, [x19]
  43b5a4:	add	x0, x0, x20
  43b5a8:	strb	wzr, [x0, x1]
  43b5ac:	ldr	x1, [x19, #8]
  43b5b0:	add	x20, x1, x20
  43b5b4:	str	x20, [x19, #8]
  43b5b8:	ldp	x19, x20, [sp, #16]
  43b5bc:	ldr	x21, [sp, #32]
  43b5c0:	ldp	x29, x30, [sp], #48
  43b5c4:	ret
  43b5c8:	mov	x2, x0
  43b5cc:	ldr	x0, [x0, #288]
  43b5d0:	cbnz	x0, 43b5e0 <ferror@plt+0x38810>
  43b5d4:	mov	w1, #0x1                   	// #1
  43b5d8:	str	w1, [x2, #304]
  43b5dc:	ret
  43b5e0:	ldr	x1, [x1]
  43b5e4:	ldr	x0, [x0, #8]
  43b5e8:	ldr	x0, [x0, #16]
  43b5ec:	tbnz	w1, #31, 43b5dc <ferror@plt+0x3880c>
  43b5f0:	b	43b494 <ferror@plt+0x386c4>
  43b5f4:	stp	x29, x30, [sp, #-64]!
  43b5f8:	mov	x29, sp
  43b5fc:	str	x23, [sp, #48]
  43b600:	mov	x23, #0x8001                	// #32769
  43b604:	movk	x23, #0x410, lsl #16
  43b608:	stp	x19, x20, [sp, #16]
  43b60c:	movk	x23, #0xc600, lsl #32
  43b610:	mov	x20, x0
  43b614:	mov	x19, x1
  43b618:	stp	x21, x22, [sp, #32]
  43b61c:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x255fc>
  43b620:	add	x21, x21, #0xe00
  43b624:	mov	x22, #0x1                   	// #1
  43b628:	movk	x23, #0x19, lsl #48
  43b62c:	cbz	x19, 43b6b4 <ferror@plt+0x388e4>
  43b630:	ldr	w1, [x19]
  43b634:	cmp	w1, #0x8
  43b638:	b.ls	43b674 <ferror@plt+0x388a4>  // b.plast
  43b63c:	sub	w1, w1, #0x18
  43b640:	cmp	w1, #0x34
  43b644:	b.ls	43b65c <ferror@plt+0x3888c>  // b.plast
  43b648:	ldr	x1, [x19, #8]
  43b64c:	mov	x0, x20
  43b650:	bl	43b5f4 <ferror@plt+0x38824>
  43b654:	cbz	x0, 43b66c <ferror@plt+0x3889c>
  43b658:	b	43b6a0 <ferror@plt+0x388d0>
  43b65c:	lsl	x1, x22, x1
  43b660:	tst	x1, x23
  43b664:	b.ne	43b6b4 <ferror@plt+0x388e4>  // b.any
  43b668:	tbz	w1, #27, 43b648 <ferror@plt+0x38878>
  43b66c:	ldr	x19, [x19, #16]
  43b670:	b	43b62c <ferror@plt+0x3885c>
  43b674:	ldrb	w0, [x21, w1, uxtw]
  43b678:	adr	x1, 43b684 <ferror@plt+0x388b4>
  43b67c:	add	x0, x1, w0, sxtb #2
  43b680:	br	x0
  43b684:	add	x1, x19, #0x8
  43b688:	mov	x0, x20
  43b68c:	bl	43b5c8 <ferror@plt+0x387f8>
  43b690:	cbz	x0, 43b6b4 <ferror@plt+0x388e4>
  43b694:	ldr	w1, [x0]
  43b698:	cmp	w1, #0x2f
  43b69c:	b.ne	43b6b4 <ferror@plt+0x388e4>  // b.any
  43b6a0:	ldp	x19, x20, [sp, #16]
  43b6a4:	ldp	x21, x22, [sp, #32]
  43b6a8:	ldr	x23, [sp, #48]
  43b6ac:	ldp	x29, x30, [sp], #64
  43b6b0:	ret
  43b6b4:	mov	x0, #0x0                   	// #0
  43b6b8:	b	43b6a0 <ferror@plt+0x388d0>
  43b6bc:	stp	x29, x30, [sp, #-224]!
  43b6c0:	mov	x29, sp
  43b6c4:	stp	x19, x20, [sp, #16]
  43b6c8:	mov	x19, x0
  43b6cc:	stp	x21, x22, [sp, #32]
  43b6d0:	stp	x23, x24, [sp, #48]
  43b6d4:	str	x25, [sp, #64]
  43b6d8:	cbnz	x2, 43b6fc <ferror@plt+0x3892c>
  43b6dc:	mov	w0, #0x1                   	// #1
  43b6e0:	str	w0, [x19, #304]
  43b6e4:	ldp	x19, x20, [sp, #16]
  43b6e8:	ldp	x21, x22, [sp, #32]
  43b6ec:	ldp	x23, x24, [sp, #48]
  43b6f0:	ldr	x25, [sp, #64]
  43b6f4:	ldp	x29, x30, [sp], #224
  43b6f8:	ret
  43b6fc:	ldr	w22, [x0, #304]
  43b700:	cbnz	w22, 43b6e4 <ferror@plt+0x38914>
  43b704:	ldr	w0, [x2]
  43b708:	mov	x20, x2
  43b70c:	cmp	w0, #0x50
  43b710:	b.hi	43c8c4 <ferror@plt+0x39af4>  // b.pmore
  43b714:	mov	w21, w1
  43b718:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x255fc>
  43b71c:	add	x1, x1, #0xe0c
  43b720:	ldrh	w1, [x1, w0, uxtw #1]
  43b724:	adr	x2, 43b730 <ferror@plt+0x38960>
  43b728:	add	x1, x2, w1, sxth #2
  43b72c:	br	x1
  43b730:	ldrsw	x2, [x20, #16]
  43b734:	ldr	x20, [x20, #8]
  43b738:	tbnz	w21, #2, 43b74c <ferror@plt+0x3897c>
  43b73c:	mov	x1, x20
  43b740:	mov	x0, x19
  43b744:	bl	43b038 <ferror@plt+0x38268>
  43b748:	b	43b6e4 <ferror@plt+0x38914>
  43b74c:	add	x21, x20, x2
  43b750:	cmp	x21, x20
  43b754:	b.ls	43b6e4 <ferror@plt+0x38914>  // b.plast
  43b758:	sub	x0, x21, x20
  43b75c:	ldrb	w3, [x20]
  43b760:	cmp	x0, #0x3
  43b764:	b.le	43b798 <ferror@plt+0x389c8>
  43b768:	cmp	w3, #0x5f
  43b76c:	b.ne	43b798 <ferror@plt+0x389c8>  // b.any
  43b770:	ldrb	w0, [x20, #1]
  43b774:	cmp	w0, #0x5f
  43b778:	b.ne	43b798 <ferror@plt+0x389c8>  // b.any
  43b77c:	ldrb	w0, [x20, #2]
  43b780:	cmp	w0, #0x55
  43b784:	b.ne	43b798 <ferror@plt+0x389c8>  // b.any
  43b788:	add	x22, x20, #0x3
  43b78c:	mov	x1, #0x0                   	// #0
  43b790:	cmp	x21, x22
  43b794:	b.hi	43b7ac <ferror@plt+0x389dc>  // b.pmore
  43b798:	mov	w1, w3
  43b79c:	mov	x0, x19
  43b7a0:	mov	x22, x20
  43b7a4:	bl	43aff4 <ferror@plt+0x38224>
  43b7a8:	b	43b814 <ferror@plt+0x38a44>
  43b7ac:	ldrb	w2, [x22]
  43b7b0:	sub	w0, w2, #0x30
  43b7b4:	and	w4, w0, #0xff
  43b7b8:	cmp	w4, #0x9
  43b7bc:	b.ls	43b7d4 <ferror@plt+0x38a04>  // b.plast
  43b7c0:	sub	w0, w2, #0x41
  43b7c4:	and	w0, w0, #0xff
  43b7c8:	cmp	w0, #0x5
  43b7cc:	b.hi	43b7e4 <ferror@plt+0x38a14>  // b.pmore
  43b7d0:	sub	w0, w2, #0x37
  43b7d4:	sxtw	x0, w0
  43b7d8:	add	x22, x22, #0x1
  43b7dc:	add	x1, x0, x1, lsl #4
  43b7e0:	b	43b790 <ferror@plt+0x389c0>
  43b7e4:	sub	w0, w2, #0x61
  43b7e8:	and	w0, w0, #0xff
  43b7ec:	cmp	w0, #0x5
  43b7f0:	b.hi	43b7fc <ferror@plt+0x38a2c>  // b.pmore
  43b7f4:	sub	w0, w2, #0x57
  43b7f8:	b	43b7d4 <ferror@plt+0x38a04>
  43b7fc:	cmp	w2, #0x5f
  43b800:	b.ne	43b798 <ferror@plt+0x389c8>  // b.any
  43b804:	cmp	x1, #0xff
  43b808:	b.hi	43b798 <ferror@plt+0x389c8>  // b.pmore
  43b80c:	mov	x0, x19
  43b810:	bl	43aff4 <ferror@plt+0x38224>
  43b814:	add	x20, x22, #0x1
  43b818:	b	43b750 <ferror@plt+0x38980>
  43b81c:	ldr	x2, [x20, #8]
  43b820:	mov	w1, w21
  43b824:	mov	x0, x19
  43b828:	bl	43cecc <ferror@plt+0x3a0fc>
  43b82c:	mov	x0, x19
  43b830:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43b834:	add	x1, x1, #0xc40
  43b838:	bl	43b0ac <ferror@plt+0x382dc>
  43b83c:	ldr	x2, [x20, #16]
  43b840:	mov	w1, w21
  43b844:	mov	x0, x19
  43b848:	bl	43cecc <ferror@plt+0x3a0fc>
  43b84c:	mov	x0, x19
  43b850:	mov	w1, #0x5d                  	// #93
  43b854:	bl	43aff4 <ferror@plt+0x38224>
  43b858:	b	43b6e4 <ferror@plt+0x38914>
  43b85c:	ldr	x2, [x20, #8]
  43b860:	mov	w1, w21
  43b864:	mov	x0, x19
  43b868:	bl	43cecc <ferror@plt+0x3a0fc>
  43b86c:	tbnz	w21, #2, 43b8d8 <ferror@plt+0x38b08>
  43b870:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43b874:	mov	x0, x19
  43b878:	add	x1, x1, #0xc55
  43b87c:	bl	43b0ac <ferror@plt+0x382dc>
  43b880:	ldr	x20, [x20, #16]
  43b884:	ldr	w0, [x20]
  43b888:	cmp	w0, #0x47
  43b88c:	b.ne	43b8c4 <ferror@plt+0x38af4>  // b.any
  43b890:	mov	x0, x19
  43b894:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43b898:	add	x1, x1, #0xc46
  43b89c:	bl	43b0ac <ferror@plt+0x382dc>
  43b8a0:	ldr	w1, [x20, #16]
  43b8a4:	mov	x0, x19
  43b8a8:	add	w1, w1, #0x1
  43b8ac:	bl	43b0e0 <ferror@plt+0x38310>
  43b8b0:	mov	x0, x19
  43b8b4:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43b8b8:	add	x1, x1, #0xc54
  43b8bc:	bl	43b0ac <ferror@plt+0x382dc>
  43b8c0:	ldr	x20, [x20, #8]
  43b8c4:	mov	x2, x20
  43b8c8:	mov	w1, w21
  43b8cc:	mov	x0, x19
  43b8d0:	bl	43cecc <ferror@plt+0x3a0fc>
  43b8d4:	b	43b6e4 <ferror@plt+0x38914>
  43b8d8:	mov	x0, x19
  43b8dc:	mov	w1, #0x2e                  	// #46
  43b8e0:	bl	43aff4 <ferror@plt+0x38224>
  43b8e4:	b	43b880 <ferror@plt+0x38ab0>
  43b8e8:	add	x3, sp, #0x60
  43b8ec:	mov	w23, #0x0                   	// #0
  43b8f0:	mov	x2, x3
  43b8f4:	ldr	x22, [x20, #8]
  43b8f8:	ldr	x24, [x19, #296]
  43b8fc:	str	xzr, [x19, #296]
  43b900:	cbz	x22, 43b90c <ferror@plt+0x38b3c>
  43b904:	cmp	w23, #0x4
  43b908:	b.ne	43b918 <ferror@plt+0x38b48>  // b.any
  43b90c:	mov	w0, #0x1                   	// #1
  43b910:	str	w0, [x19, #304]
  43b914:	b	43b6e4 <ferror@plt+0x38914>
  43b918:	str	wzr, [x3, #16]
  43b91c:	add	w23, w23, #0x1
  43b920:	ldp	x4, x0, [x19, #288]
  43b924:	stp	x0, x22, [x3]
  43b928:	ldr	w5, [x22]
  43b92c:	str	x4, [x3, #24]
  43b930:	str	x3, [x19, #296]
  43b934:	mov	w0, w5
  43b938:	bl	43ad74 <ferror@plt+0x37fa4>
  43b93c:	add	x3, x3, #0x20
  43b940:	cbz	w0, 43ce1c <ferror@plt+0x3a04c>
  43b944:	ldr	x22, [x22, #8]
  43b948:	b	43b900 <ferror@plt+0x38b30>
  43b94c:	cmp	w23, #0x4
  43b950:	b.eq	43b90c <ferror@plt+0x38b3c>  // b.none
  43b954:	ldp	x0, x1, [x2, #-32]
  43b958:	stur	x22, [x2, #-24]
  43b95c:	stp	x0, x1, [x2]
  43b960:	sub	x3, x2, #0x20
  43b964:	add	w23, w23, #0x1
  43b968:	ldp	x0, x1, [x2, #-16]
  43b96c:	stur	wzr, [x2, #-16]
  43b970:	stp	x4, x3, [x2, #-8]
  43b974:	stp	x0, x1, [x2, #16]
  43b978:	ldr	x22, [x22, #8]
  43b97c:	str	x2, [x19, #296]
  43b980:	add	x2, x2, #0x20
  43b984:	b	43ce44 <ferror@plt+0x3a074>
  43b988:	ldr	x22, [x20, #8]
  43b98c:	ldr	x24, [x19, #296]
  43b990:	str	xzr, [x19, #296]
  43b994:	ldr	x23, [x19, #368]
  43b998:	str	x20, [x19, #368]
  43b99c:	tbz	w21, #2, 43b9f8 <ferror@plt+0x38c28>
  43b9a0:	ldr	w0, [x22]
  43b9a4:	cbnz	w0, 43b9f8 <ferror@plt+0x38c28>
  43b9a8:	ldr	w0, [x22, #16]
  43b9ac:	cmp	w0, #0x6
  43b9b0:	b.ne	43b9f8 <ferror@plt+0x38c28>  // b.any
  43b9b4:	ldr	x0, [x22, #8]
  43b9b8:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43b9bc:	mov	x2, #0x6                   	// #6
  43b9c0:	add	x1, x1, #0xc58
  43b9c4:	bl	4028d0 <strncmp@plt>
  43b9c8:	cbnz	w0, 43b9f8 <ferror@plt+0x38c28>
  43b9cc:	ldr	x2, [x20, #16]
  43b9d0:	mov	w1, w21
  43b9d4:	mov	x0, x19
  43b9d8:	bl	43cecc <ferror@plt+0x3a0fc>
  43b9dc:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  43b9e0:	mov	x0, x19
  43b9e4:	add	x1, x1, #0xc69
  43b9e8:	bl	43b0ac <ferror@plt+0x382dc>
  43b9ec:	str	x24, [x19, #296]
  43b9f0:	str	x23, [x19, #368]
  43b9f4:	b	43b6e4 <ferror@plt+0x38914>
  43b9f8:	mov	x0, x19
  43b9fc:	mov	x2, x22
  43ba00:	mov	w1, w21
  43ba04:	bl	43cecc <ferror@plt+0x3a0fc>
  43ba08:	ldrb	w0, [x19, #264]
  43ba0c:	cmp	w0, #0x3c
  43ba10:	b.ne	43ba20 <ferror@plt+0x38c50>  // b.any
  43ba14:	mov	x0, x19
  43ba18:	mov	w1, #0x20                  	// #32
  43ba1c:	bl	43aff4 <ferror@plt+0x38224>
  43ba20:	mov	x0, x19
  43ba24:	mov	w1, #0x3c                  	// #60
  43ba28:	bl	43aff4 <ferror@plt+0x38224>
  43ba2c:	ldr	x2, [x20, #16]
  43ba30:	mov	x0, x19
  43ba34:	mov	w1, w21
  43ba38:	bl	43cecc <ferror@plt+0x3a0fc>
  43ba3c:	ldrb	w0, [x19, #264]
  43ba40:	cmp	w0, #0x3e
  43ba44:	b.ne	43ba54 <ferror@plt+0x38c84>  // b.any
  43ba48:	mov	x0, x19
  43ba4c:	mov	w1, #0x20                  	// #32
  43ba50:	bl	43aff4 <ferror@plt+0x38224>
  43ba54:	mov	x0, x19
  43ba58:	mov	w1, #0x3e                  	// #62
  43ba5c:	bl	43aff4 <ferror@plt+0x38224>
  43ba60:	b	43b9ec <ferror@plt+0x38c1c>
  43ba64:	ldr	w0, [x19, #312]
  43ba68:	cbz	w0, 43ba94 <ferror@plt+0x38cc4>
  43ba6c:	mov	x0, x19
  43ba70:	mov	x2, #0x5                   	// #5
  43ba74:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43ba78:	add	x1, x1, #0xc5f
  43ba7c:	bl	43b038 <ferror@plt+0x38268>
  43ba80:	ldr	x1, [x20, #8]
  43ba84:	mov	x0, x19
  43ba88:	add	w1, w1, #0x1
  43ba8c:	bl	43b0e0 <ferror@plt+0x38310>
  43ba90:	b	43b6e4 <ferror@plt+0x38914>
  43ba94:	add	x1, x20, #0x8
  43ba98:	mov	x0, x19
  43ba9c:	bl	43b5c8 <ferror@plt+0x387f8>
  43baa0:	mov	x2, x0
  43baa4:	cbz	x0, 43b6dc <ferror@plt+0x3890c>
  43baa8:	ldr	w1, [x0]
  43baac:	cmp	w1, #0x2f
  43bab0:	b.ne	43bac8 <ferror@plt+0x38cf8>  // b.any
  43bab4:	ldr	w1, [x19, #316]
  43bab8:	tbnz	w1, #31, 43bac8 <ferror@plt+0x38cf8>
  43babc:	bl	43b494 <ferror@plt+0x386c4>
  43bac0:	mov	x2, x0
  43bac4:	cbz	x0, 43b6dc <ferror@plt+0x3890c>
  43bac8:	ldr	x20, [x19, #288]
  43bacc:	mov	w1, w21
  43bad0:	ldr	x0, [x20]
  43bad4:	str	x0, [x19, #288]
  43bad8:	mov	x0, x19
  43badc:	bl	43cecc <ferror@plt+0x3a0fc>
  43bae0:	str	x20, [x19, #288]
  43bae4:	b	43b6e4 <ferror@plt+0x38914>
  43bae8:	mov	x0, x19
  43baec:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43baf0:	add	x1, x1, #0xc65
  43baf4:	bl	43b0ac <ferror@plt+0x382dc>
  43baf8:	ldr	x2, [x20, #8]
  43bafc:	mov	w1, w21
  43bb00:	mov	x0, x19
  43bb04:	bl	43cecc <ferror@plt+0x3a0fc>
  43bb08:	b	43b6e4 <ferror@plt+0x38914>
  43bb0c:	ldr	x2, [x20, #16]
  43bb10:	mov	w1, w21
  43bb14:	mov	x0, x19
  43bb18:	bl	43cecc <ferror@plt+0x3a0fc>
  43bb1c:	b	43b6e4 <ferror@plt+0x38914>
  43bb20:	mov	x0, x19
  43bb24:	mov	w1, #0x7e                  	// #126
  43bb28:	bl	43aff4 <ferror@plt+0x38224>
  43bb2c:	ldr	x2, [x20, #16]
  43bb30:	mov	w1, w21
  43bb34:	mov	x0, x19
  43bb38:	bl	43cecc <ferror@plt+0x3a0fc>
  43bb3c:	b	43b6e4 <ferror@plt+0x38914>
  43bb40:	mov	x0, x19
  43bb44:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43bb48:	add	x1, x1, #0xc9a
  43bb4c:	bl	43b0ac <ferror@plt+0x382dc>
  43bb50:	ldr	x2, [x20, #8]
  43bb54:	mov	w1, w21
  43bb58:	mov	x0, x19
  43bb5c:	bl	43cecc <ferror@plt+0x3a0fc>
  43bb60:	b	43b6e4 <ferror@plt+0x38914>
  43bb64:	mov	x0, x19
  43bb68:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43bb6c:	add	x1, x1, #0xc84
  43bb70:	bl	43b0ac <ferror@plt+0x382dc>
  43bb74:	ldr	x2, [x20, #8]
  43bb78:	mov	w1, w21
  43bb7c:	mov	x0, x19
  43bb80:	bl	43cecc <ferror@plt+0x3a0fc>
  43bb84:	b	43b6e4 <ferror@plt+0x38914>
  43bb88:	mov	x0, x19
  43bb8c:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43bb90:	add	x1, x1, #0xc8d
  43bb94:	bl	43b0ac <ferror@plt+0x382dc>
  43bb98:	ldr	x2, [x20, #8]
  43bb9c:	mov	w1, w21
  43bba0:	mov	x0, x19
  43bba4:	bl	43cecc <ferror@plt+0x3a0fc>
  43bba8:	mov	x0, x19
  43bbac:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43bbb0:	add	x1, x1, #0xca6
  43bbb4:	bl	43b0ac <ferror@plt+0x382dc>
  43bbb8:	ldr	x2, [x20, #16]
  43bbbc:	mov	w1, w21
  43bbc0:	mov	x0, x19
  43bbc4:	bl	43cecc <ferror@plt+0x3a0fc>
  43bbc8:	b	43b6e4 <ferror@plt+0x38914>
  43bbcc:	mov	x0, x19
  43bbd0:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43bbd4:	add	x1, x1, #0xcab
  43bbd8:	bl	43b0ac <ferror@plt+0x382dc>
  43bbdc:	ldr	x2, [x20, #8]
  43bbe0:	mov	w1, w21
  43bbe4:	mov	x0, x19
  43bbe8:	bl	43cecc <ferror@plt+0x3a0fc>
  43bbec:	b	43b6e4 <ferror@plt+0x38914>
  43bbf0:	mov	x0, x19
  43bbf4:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43bbf8:	add	x1, x1, #0xcb9
  43bbfc:	bl	43b0ac <ferror@plt+0x382dc>
  43bc00:	ldr	x2, [x20, #8]
  43bc04:	mov	w1, w21
  43bc08:	mov	x0, x19
  43bc0c:	bl	43cecc <ferror@plt+0x3a0fc>
  43bc10:	b	43b6e4 <ferror@plt+0x38914>
  43bc14:	mov	x0, x19
  43bc18:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43bc1c:	add	x1, x1, #0xccc
  43bc20:	bl	43b0ac <ferror@plt+0x382dc>
  43bc24:	ldr	x2, [x20, #8]
  43bc28:	mov	w1, w21
  43bc2c:	mov	x0, x19
  43bc30:	bl	43cecc <ferror@plt+0x3a0fc>
  43bc34:	b	43b6e4 <ferror@plt+0x38914>
  43bc38:	mov	x0, x19
  43bc3c:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43bc40:	add	x1, x1, #0xcdd
  43bc44:	bl	43b0ac <ferror@plt+0x382dc>
  43bc48:	ldr	x2, [x20, #8]
  43bc4c:	mov	w1, w21
  43bc50:	mov	x0, x19
  43bc54:	bl	43cecc <ferror@plt+0x3a0fc>
  43bc58:	b	43b6e4 <ferror@plt+0x38914>
  43bc5c:	mov	x0, x19
  43bc60:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43bc64:	add	x1, x1, #0xce1
  43bc68:	bl	43b0ac <ferror@plt+0x382dc>
  43bc6c:	ldr	x2, [x20, #8]
  43bc70:	mov	w1, w21
  43bc74:	mov	x0, x19
  43bc78:	bl	43cecc <ferror@plt+0x3a0fc>
  43bc7c:	b	43b6e4 <ferror@plt+0x38914>
  43bc80:	mov	x0, x19
  43bc84:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43bc88:	add	x1, x1, #0xcf3
  43bc8c:	bl	43b0ac <ferror@plt+0x382dc>
  43bc90:	ldr	x2, [x20, #8]
  43bc94:	mov	w1, w21
  43bc98:	mov	x0, x19
  43bc9c:	bl	43cecc <ferror@plt+0x3a0fc>
  43bca0:	b	43b6e4 <ferror@plt+0x38914>
  43bca4:	mov	x0, x19
  43bca8:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43bcac:	add	x1, x1, #0xd0e
  43bcb0:	bl	43b0ac <ferror@plt+0x382dc>
  43bcb4:	ldr	x2, [x20, #8]
  43bcb8:	mov	w1, w21
  43bcbc:	mov	x0, x19
  43bcc0:	bl	43cecc <ferror@plt+0x3a0fc>
  43bcc4:	b	43b6e4 <ferror@plt+0x38914>
  43bcc8:	mov	x0, x19
  43bccc:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43bcd0:	add	x1, x1, #0xd1e
  43bcd4:	bl	43b0ac <ferror@plt+0x382dc>
  43bcd8:	ldr	x2, [x20, #8]
  43bcdc:	mov	w1, w21
  43bce0:	mov	x0, x19
  43bce4:	bl	43cecc <ferror@plt+0x3a0fc>
  43bce8:	b	43b6e4 <ferror@plt+0x38914>
  43bcec:	mov	x0, x19
  43bcf0:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43bcf4:	add	x1, x1, #0xd32
  43bcf8:	bl	43b0ac <ferror@plt+0x382dc>
  43bcfc:	ldr	x2, [x20, #8]
  43bd00:	mov	w1, w21
  43bd04:	mov	x0, x19
  43bd08:	bl	43cecc <ferror@plt+0x3a0fc>
  43bd0c:	b	43b6e4 <ferror@plt+0x38914>
  43bd10:	mov	x0, x19
  43bd14:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43bd18:	add	x1, x1, #0xd49
  43bd1c:	bl	43b0ac <ferror@plt+0x382dc>
  43bd20:	ldr	x2, [x20, #8]
  43bd24:	mov	w1, w21
  43bd28:	mov	x0, x19
  43bd2c:	bl	43cecc <ferror@plt+0x3a0fc>
  43bd30:	b	43b6e4 <ferror@plt+0x38914>
  43bd34:	mov	x0, x19
  43bd38:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43bd3c:	add	x1, x1, #0xd63
  43bd40:	bl	43b0ac <ferror@plt+0x382dc>
  43bd44:	ldr	x2, [x20, #16]
  43bd48:	mov	w1, w21
  43bd4c:	mov	x0, x19
  43bd50:	bl	43cecc <ferror@plt+0x3a0fc>
  43bd54:	mov	x0, x19
  43bd58:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43bd5c:	add	x1, x1, #0xc87
  43bd60:	bl	43b0ac <ferror@plt+0x382dc>
  43bd64:	ldr	x2, [x20, #8]
  43bd68:	mov	w1, w21
  43bd6c:	mov	x0, x19
  43bd70:	bl	43cecc <ferror@plt+0x3a0fc>
  43bd74:	b	43b6e4 <ferror@plt+0x38914>
  43bd78:	mov	x0, x19
  43bd7c:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43bd80:	add	x1, x1, #0xd79
  43bd84:	bl	43b0ac <ferror@plt+0x382dc>
  43bd88:	ldr	x2, [x20, #8]
  43bd8c:	mov	w1, w21
  43bd90:	mov	x0, x19
  43bd94:	bl	43cecc <ferror@plt+0x3a0fc>
  43bd98:	b	43b6e4 <ferror@plt+0x38914>
  43bd9c:	mov	x0, x19
  43bda0:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43bda4:	add	x1, x1, #0xd8f
  43bda8:	bl	43b0ac <ferror@plt+0x382dc>
  43bdac:	ldr	x2, [x20, #8]
  43bdb0:	mov	w1, w21
  43bdb4:	mov	x0, x19
  43bdb8:	bl	43cecc <ferror@plt+0x3a0fc>
  43bdbc:	b	43b6e4 <ferror@plt+0x38914>
  43bdc0:	mov	x0, x19
  43bdc4:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43bdc8:	add	x1, x1, #0xd8b
  43bdcc:	bl	43b0ac <ferror@plt+0x382dc>
  43bdd0:	ldr	x2, [x20, #8]
  43bdd4:	mov	w1, w21
  43bdd8:	mov	x0, x19
  43bddc:	bl	43cecc <ferror@plt+0x3a0fc>
  43bde0:	b	43b6e4 <ferror@plt+0x38914>
  43bde4:	ldrsw	x2, [x20, #16]
  43bde8:	mov	x0, x19
  43bdec:	ldr	x1, [x20, #8]
  43bdf0:	bl	43b038 <ferror@plt+0x38268>
  43bdf4:	b	43b6e4 <ferror@plt+0x38914>
  43bdf8:	ldr	x2, [x19, #296]
  43bdfc:	cbnz	x2, 43be60 <ferror@plt+0x39090>
  43be00:	mov	w22, #0x0                   	// #0
  43be04:	ldr	x0, [x19, #296]
  43be08:	stp	x0, x20, [sp, #96]
  43be0c:	add	x0, sp, #0x60
  43be10:	str	x0, [x19, #296]
  43be14:	ldr	x0, [x19, #288]
  43be18:	str	wzr, [sp, #112]
  43be1c:	str	x0, [sp, #120]
  43be20:	cbnz	x2, 43be28 <ferror@plt+0x39058>
  43be24:	ldr	x2, [x20, #8]
  43be28:	mov	x0, x19
  43be2c:	mov	w1, w21
  43be30:	bl	43cecc <ferror@plt+0x3a0fc>
  43be34:	ldr	w0, [sp, #112]
  43be38:	cbnz	w0, 43be4c <ferror@plt+0x3907c>
  43be3c:	mov	x2, x20
  43be40:	mov	w1, w21
  43be44:	mov	x0, x19
  43be48:	bl	43cf58 <ferror@plt+0x3a188>
  43be4c:	ldr	x0, [sp, #96]
  43be50:	str	x0, [x19, #296]
  43be54:	cbz	w22, 43b6e4 <ferror@plt+0x38914>
  43be58:	str	x23, [x19, #288]
  43be5c:	b	43b6e4 <ferror@plt+0x38914>
  43be60:	ldr	w22, [x2, #16]
  43be64:	cbnz	w22, 43be98 <ferror@plt+0x390c8>
  43be68:	ldr	x1, [x2, #8]
  43be6c:	ldr	w1, [x1]
  43be70:	sub	w3, w1, #0x19
  43be74:	cmp	w3, #0x2
  43be78:	b.hi	43c010 <ferror@plt+0x39240>  // b.pmore
  43be7c:	cmp	w0, w1
  43be80:	b.ne	43be98 <ferror@plt+0x390c8>  // b.any
  43be84:	ldr	x2, [x20, #8]
  43be88:	mov	w1, w21
  43be8c:	mov	x0, x19
  43be90:	bl	43cecc <ferror@plt+0x3a0fc>
  43be94:	b	43b6e4 <ferror@plt+0x38914>
  43be98:	ldr	x2, [x2]
  43be9c:	b	43bdfc <ferror@plt+0x3902c>
  43bea0:	ldr	w22, [x19, #312]
  43bea4:	ldr	x2, [x20, #8]
  43bea8:	cbnz	w22, 43bfe0 <ferror@plt+0x39210>
  43beac:	ldr	w0, [x2]
  43beb0:	cmp	w0, #0x5
  43beb4:	b.ne	43bfe4 <ferror@plt+0x39214>  // b.any
  43beb8:	ldr	w0, [x19, #344]
  43bebc:	mov	x1, #0x0                   	// #0
  43bec0:	cmp	w0, w1
  43bec4:	b.gt	43bee0 <ferror@plt+0x39110>
  43bec8:	ldr	w1, [x19, #348]
  43becc:	cmp	w0, w1
  43bed0:	b.lt	43bf08 <ferror@plt+0x39138>  // b.tstop
  43bed4:	mov	w0, #0x1                   	// #1
  43bed8:	str	w0, [x19, #304]
  43bedc:	b	43b6e4 <ferror@plt+0x38914>
  43bee0:	ldr	x4, [x19, #336]
  43bee4:	lsl	x3, x1, #4
  43bee8:	ldr	x3, [x4, x3]
  43beec:	add	x5, x4, x1, lsl #4
  43bef0:	add	x1, x1, #0x1
  43bef4:	cmp	x2, x3
  43bef8:	b.ne	43bec0 <ferror@plt+0x390f0>  // b.any
  43befc:	ldr	x1, [x19, #328]
  43bf00:	mov	x0, x1
  43bf04:	b	43bfc8 <ferror@plt+0x391f8>
  43bf08:	ldr	x3, [x19, #336]
  43bf0c:	sbfiz	x4, x0, #4, #32
  43bf10:	add	x1, x3, w0, sxtw #4
  43bf14:	add	w0, w0, #0x1
  43bf18:	str	w0, [x19, #344]
  43bf1c:	add	x0, x1, #0x8
  43bf20:	str	x2, [x3, x4]
  43bf24:	ldr	x4, [x19, #288]
  43bf28:	cbnz	x4, 43bf70 <ferror@plt+0x391a0>
  43bf2c:	str	xzr, [x0]
  43bf30:	add	x1, x2, #0x8
  43bf34:	mov	x0, x19
  43bf38:	bl	43b5c8 <ferror@plt+0x387f8>
  43bf3c:	mov	x2, x0
  43bf40:	cbz	x0, 43bf64 <ferror@plt+0x39194>
  43bf44:	ldr	w1, [x0]
  43bf48:	cmp	w1, #0x2f
  43bf4c:	b.ne	43bfe4 <ferror@plt+0x39214>  // b.any
  43bf50:	ldr	w1, [x19, #316]
  43bf54:	tbnz	w1, #31, 43bfe4 <ferror@plt+0x39214>
  43bf58:	bl	43b494 <ferror@plt+0x386c4>
  43bf5c:	mov	x2, x0
  43bf60:	cbnz	x0, 43bfe4 <ferror@plt+0x39214>
  43bf64:	cbz	w22, 43b6dc <ferror@plt+0x3890c>
  43bf68:	str	x23, [x19, #288]
  43bf6c:	b	43b6dc <ferror@plt+0x3890c>
  43bf70:	ldr	w3, [x19, #360]
  43bf74:	ldr	w1, [x19, #364]
  43bf78:	cmp	w3, w1
  43bf7c:	b.ge	43bed4 <ferror@plt+0x39104>  // b.tcont
  43bf80:	ldr	x1, [x19, #352]
  43bf84:	add	x1, x1, w3, sxtw #4
  43bf88:	add	w3, w3, #0x1
  43bf8c:	str	w3, [x19, #360]
  43bf90:	ldr	x3, [x4, #8]
  43bf94:	str	x3, [x1, #8]
  43bf98:	str	x1, [x0]
  43bf9c:	mov	x0, x1
  43bfa0:	ldr	x4, [x4]
  43bfa4:	b	43bf28 <ferror@plt+0x39158>
  43bfa8:	ldr	x3, [x0]
  43bfac:	cmp	x3, x2
  43bfb0:	b.eq	43bf30 <ferror@plt+0x39160>  // b.none
  43bfb4:	cmp	x3, x20
  43bfb8:	b.ne	43bfc4 <ferror@plt+0x391f4>  // b.any
  43bfbc:	cmp	x0, x1
  43bfc0:	b.ne	43bf30 <ferror@plt+0x39160>  // b.any
  43bfc4:	ldr	x0, [x0, #8]
  43bfc8:	cbnz	x0, 43bfa8 <ferror@plt+0x391d8>
  43bfcc:	ldr	x0, [x5, #8]
  43bfd0:	mov	w22, #0x1                   	// #1
  43bfd4:	ldr	x23, [x19, #288]
  43bfd8:	str	x0, [x19, #288]
  43bfdc:	b	43bf30 <ferror@plt+0x39160>
  43bfe0:	mov	w22, #0x0                   	// #0
  43bfe4:	ldr	w0, [x2]
  43bfe8:	cmp	w0, #0x23
  43bfec:	b.eq	43c018 <ferror@plt+0x39248>  // b.none
  43bff0:	ldr	w1, [x20]
  43bff4:	cmp	w0, w1
  43bff8:	b.eq	43c018 <ferror@plt+0x39248>  // b.none
  43bffc:	cmp	w0, #0x24
  43c000:	b.ne	43c010 <ferror@plt+0x39240>  // b.any
  43c004:	ldr	x2, [x2, #8]
  43c008:	b	43be04 <ferror@plt+0x39034>
  43c00c:	mov	w22, #0x0                   	// #0
  43c010:	mov	x2, #0x0                   	// #0
  43c014:	b	43be04 <ferror@plt+0x39034>
  43c018:	mov	x20, x2
  43c01c:	b	43c010 <ferror@plt+0x39240>
  43c020:	ldr	x0, [x20, #8]
  43c024:	tbnz	w21, #2, 43c03c <ferror@plt+0x3926c>
  43c028:	ldrsw	x2, [x0, #8]
  43c02c:	ldr	x1, [x0]
  43c030:	mov	x0, x19
  43c034:	bl	43b038 <ferror@plt+0x38268>
  43c038:	b	43b6e4 <ferror@plt+0x38914>
  43c03c:	ldrsw	x2, [x0, #24]
  43c040:	ldr	x1, [x0, #16]
  43c044:	mov	x0, x19
  43c048:	bl	43b038 <ferror@plt+0x38268>
  43c04c:	b	43b6e4 <ferror@plt+0x38914>
  43c050:	ldr	x2, [x20, #8]
  43c054:	mov	w1, w21
  43c058:	mov	x0, x19
  43c05c:	bl	43cecc <ferror@plt+0x3a0fc>
  43c060:	b	43b6e4 <ferror@plt+0x38914>
  43c064:	and	w22, w21, #0x20
  43c068:	tbz	w21, #5, 43c080 <ferror@plt+0x392b0>
  43c06c:	ldr	x3, [x19, #296]
  43c070:	add	x2, x20, #0x10
  43c074:	and	w1, w21, #0xffffff9f
  43c078:	mov	x0, x19
  43c07c:	bl	43d120 <ferror@plt+0x3a350>
  43c080:	ldr	x2, [x20, #8]
  43c084:	cbz	x2, 43c0f8 <ferror@plt+0x39328>
  43c088:	and	w1, w21, #0xffffff9f
  43c08c:	cbz	w22, 43c09c <ferror@plt+0x392cc>
  43c090:	mov	x0, x19
  43c094:	bl	43cecc <ferror@plt+0x3a0fc>
  43c098:	b	43b6e4 <ferror@plt+0x38914>
  43c09c:	tbnz	w21, #6, 43c0e0 <ferror@plt+0x39310>
  43c0a0:	ldr	x0, [x19, #296]
  43c0a4:	stp	x0, x20, [sp, #96]
  43c0a8:	add	x0, sp, #0x60
  43c0ac:	str	x0, [x19, #296]
  43c0b0:	ldr	x0, [x19, #288]
  43c0b4:	str	wzr, [sp, #112]
  43c0b8:	str	x0, [sp, #120]
  43c0bc:	mov	x0, x19
  43c0c0:	bl	43cecc <ferror@plt+0x3a0fc>
  43c0c4:	ldr	x0, [sp, #96]
  43c0c8:	str	x0, [x19, #296]
  43c0cc:	ldr	w0, [sp, #112]
  43c0d0:	cbnz	w0, 43b6e4 <ferror@plt+0x38914>
  43c0d4:	mov	x0, x19
  43c0d8:	mov	w1, #0x20                  	// #32
  43c0dc:	bl	43aff4 <ferror@plt+0x38224>
  43c0e0:	ldr	x3, [x19, #296]
  43c0e4:	add	x2, x20, #0x10
  43c0e8:	and	w1, w21, #0xffffff9f
  43c0ec:	mov	x0, x19
  43c0f0:	bl	43d120 <ferror@plt+0x3a350>
  43c0f4:	b	43b6e4 <ferror@plt+0x38914>
  43c0f8:	cbnz	w22, 43b6e4 <ferror@plt+0x38914>
  43c0fc:	b	43c0e0 <ferror@plt+0x39310>
  43c100:	ldp	x0, x23, [x19, #288]
  43c104:	mov	w22, #0x1                   	// #1
  43c108:	mov	w6, w22
  43c10c:	str	x0, [sp, #120]
  43c110:	add	x4, sp, #0x60
  43c114:	stp	x23, x20, [sp, #96]
  43c118:	str	wzr, [sp, #112]
  43c11c:	mov	x0, x23
  43c120:	str	x4, [x19, #296]
  43c124:	cbz	x0, 43c13c <ferror@plt+0x3936c>
  43c128:	ldr	x1, [x0, #8]
  43c12c:	ldr	w1, [x1]
  43c130:	sub	w1, w1, #0x19
  43c134:	cmp	w1, #0x2
  43c138:	b.ls	43c17c <ferror@plt+0x393ac>  // b.plast
  43c13c:	ldr	x2, [x20, #16]
  43c140:	mov	x0, x19
  43c144:	mov	w1, w21
  43c148:	bl	43cecc <ferror@plt+0x3a0fc>
  43c14c:	str	x23, [x19, #296]
  43c150:	ldr	w0, [sp, #112]
  43c154:	cbnz	w0, 43b6e4 <ferror@plt+0x38914>
  43c158:	add	x23, sp, #0x68
  43c15c:	cmp	w22, #0x1
  43c160:	b.ne	43c1cc <ferror@plt+0x393fc>  // b.any
  43c164:	ldr	x3, [x19, #296]
  43c168:	add	x2, x20, #0x8
  43c16c:	mov	w1, w21
  43c170:	mov	x0, x19
  43c174:	bl	43d3d4 <ferror@plt+0x3a604>
  43c178:	b	43b6e4 <ferror@plt+0x38914>
  43c17c:	ldr	w1, [x0, #16]
  43c180:	cbnz	w1, 43c1c4 <ferror@plt+0x393f4>
  43c184:	cmp	w22, #0x3
  43c188:	b.ls	43c198 <ferror@plt+0x393c8>  // b.plast
  43c18c:	mov	w0, #0x1                   	// #1
  43c190:	str	w0, [x19, #304]
  43c194:	b	43b6e4 <ferror@plt+0x38914>
  43c198:	ubfiz	x5, x22, #5, #32
  43c19c:	add	w22, w22, #0x1
  43c1a0:	add	x1, x4, x5
  43c1a4:	ldp	x2, x3, [x0]
  43c1a8:	stp	x2, x3, [x1]
  43c1ac:	ldp	x2, x3, [x0, #16]
  43c1b0:	stp	x2, x3, [x1, #16]
  43c1b4:	ldr	x2, [x19, #296]
  43c1b8:	str	x2, [x4, x5]
  43c1bc:	str	x1, [x19, #296]
  43c1c0:	str	w6, [x0, #16]
  43c1c4:	ldr	x0, [x0]
  43c1c8:	b	43c124 <ferror@plt+0x39354>
  43c1cc:	sub	w22, w22, #0x1
  43c1d0:	mov	w1, w21
  43c1d4:	ubfiz	x0, x22, #5, #32
  43c1d8:	ldr	x2, [x23, x0]
  43c1dc:	mov	x0, x19
  43c1e0:	bl	43cf58 <ferror@plt+0x3a188>
  43c1e4:	b	43c15c <ferror@plt+0x3938c>
  43c1e8:	ldr	x2, [x20, #16]
  43c1ec:	mov	w1, w21
  43c1f0:	ldr	x0, [x19, #296]
  43c1f4:	stp	x0, x20, [sp, #96]
  43c1f8:	add	x0, sp, #0x60
  43c1fc:	str	x0, [x19, #296]
  43c200:	ldr	x0, [x19, #288]
  43c204:	str	wzr, [sp, #112]
  43c208:	str	x0, [sp, #120]
  43c20c:	mov	x0, x19
  43c210:	bl	43cecc <ferror@plt+0x3a0fc>
  43c214:	ldr	w0, [sp, #112]
  43c218:	cbnz	w0, 43c22c <ferror@plt+0x3945c>
  43c21c:	mov	x2, x20
  43c220:	mov	w1, w21
  43c224:	mov	x0, x19
  43c228:	bl	43cf58 <ferror@plt+0x3a188>
  43c22c:	ldr	x0, [sp, #96]
  43c230:	str	x0, [x19, #296]
  43c234:	b	43b6e4 <ferror@plt+0x38914>
  43c238:	ldrsh	w0, [x20, #18]
  43c23c:	cbz	w0, 43c250 <ferror@plt+0x39480>
  43c240:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43c244:	mov	x0, x19
  43c248:	add	x1, x1, #0xda6
  43c24c:	bl	43b0ac <ferror@plt+0x382dc>
  43c250:	ldr	x2, [x20, #8]
  43c254:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43c258:	add	x0, x0, #0x18
  43c25c:	add	x0, x0, #0x100
  43c260:	ldr	x1, [x2, #8]
  43c264:	cmp	x1, x0
  43c268:	b.eq	43c284 <ferror@plt+0x394b4>  // b.none
  43c26c:	mov	w1, w21
  43c270:	mov	x0, x19
  43c274:	bl	43cecc <ferror@plt+0x3a0fc>
  43c278:	mov	x0, x19
  43c27c:	mov	w1, #0x20                  	// #32
  43c280:	bl	43aff4 <ferror@plt+0x38224>
  43c284:	ldrsh	w0, [x20, #16]
  43c288:	cbz	w0, 43c2a0 <ferror@plt+0x394d0>
  43c28c:	mov	x0, x19
  43c290:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43c294:	add	x1, x1, #0xdac
  43c298:	bl	43b0ac <ferror@plt+0x382dc>
  43c29c:	b	43b6e4 <ferror@plt+0x38914>
  43c2a0:	mov	x0, x19
  43c2a4:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43c2a8:	add	x1, x1, #0xdb3
  43c2ac:	bl	43b0ac <ferror@plt+0x382dc>
  43c2b0:	b	43b6e4 <ferror@plt+0x38914>
  43c2b4:	ldr	x2, [x20, #8]
  43c2b8:	cbz	x2, 43c2c8 <ferror@plt+0x394f8>
  43c2bc:	mov	w1, w21
  43c2c0:	mov	x0, x19
  43c2c4:	bl	43cecc <ferror@plt+0x3a0fc>
  43c2c8:	ldr	x0, [x20, #16]
  43c2cc:	cbz	x0, 43b6e4 <ferror@plt+0x38914>
  43c2d0:	ldr	x0, [x19, #256]
  43c2d4:	cmp	x0, #0xfd
  43c2d8:	b.ls	43c2e4 <ferror@plt+0x39514>  // b.plast
  43c2dc:	mov	x0, x19
  43c2e0:	bl	43afb8 <ferror@plt+0x381e8>
  43c2e4:	mov	x0, x19
  43c2e8:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  43c2ec:	add	x1, x1, #0x75
  43c2f0:	bl	43b0ac <ferror@plt+0x382dc>
  43c2f4:	ldr	x2, [x20, #16]
  43c2f8:	mov	x0, x19
  43c2fc:	mov	w1, w21
  43c300:	ldr	x22, [x19, #256]
  43c304:	ldr	x23, [x19, #320]
  43c308:	bl	43cecc <ferror@plt+0x3a0fc>
  43c30c:	ldr	x0, [x19, #320]
  43c310:	cmp	x0, x23
  43c314:	b.ne	43b6e4 <ferror@plt+0x38914>  // b.any
  43c318:	ldr	x0, [x19, #256]
  43c31c:	cmp	x0, x22
  43c320:	b.ne	43b6e4 <ferror@plt+0x38914>  // b.any
  43c324:	sub	x0, x0, #0x2
  43c328:	str	x0, [x19, #256]
  43c32c:	b	43b6e4 <ferror@plt+0x38914>
  43c330:	ldp	x2, x20, [x20, #8]
  43c334:	cbz	x2, 43c344 <ferror@plt+0x39574>
  43c338:	mov	w1, w21
  43c33c:	mov	x0, x19
  43c340:	bl	43cecc <ferror@plt+0x3a0fc>
  43c344:	mov	x0, x19
  43c348:	mov	w1, #0x7b                  	// #123
  43c34c:	bl	43aff4 <ferror@plt+0x38224>
  43c350:	mov	x2, x20
  43c354:	mov	w1, w21
  43c358:	mov	x0, x19
  43c35c:	bl	43cecc <ferror@plt+0x3a0fc>
  43c360:	mov	x0, x19
  43c364:	mov	w1, #0x7d                  	// #125
  43c368:	bl	43aff4 <ferror@plt+0x38224>
  43c36c:	b	43b6e4 <ferror@plt+0x38914>
  43c370:	ldr	x21, [x20, #8]
  43c374:	mov	x0, x19
  43c378:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x225fc>
  43c37c:	add	x1, x1, #0x86a
  43c380:	ldr	w20, [x21, #16]
  43c384:	bl	43b0ac <ferror@plt+0x382dc>
  43c388:	ldr	x0, [x21, #8]
  43c38c:	ldrb	w0, [x0]
  43c390:	sub	w0, w0, #0x61
  43c394:	and	w0, w0, #0xff
  43c398:	cmp	w0, #0x19
  43c39c:	b.hi	43c3ac <ferror@plt+0x395dc>  // b.pmore
  43c3a0:	mov	x0, x19
  43c3a4:	mov	w1, #0x20                  	// #32
  43c3a8:	bl	43aff4 <ferror@plt+0x38224>
  43c3ac:	ldr	x1, [x21, #8]
  43c3b0:	add	x0, x1, w20, sxtw
  43c3b4:	ldurb	w0, [x0, #-1]
  43c3b8:	cmp	w0, #0x20
  43c3bc:	cset	w0, eq  // eq = none
  43c3c0:	sub	w20, w20, w0
  43c3c4:	mov	x0, x19
  43c3c8:	sxtw	x2, w20
  43c3cc:	bl	43b038 <ferror@plt+0x38268>
  43c3d0:	b	43b6e4 <ferror@plt+0x38914>
  43c3d4:	mov	x0, x19
  43c3d8:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43c3dc:	add	x1, x1, #0xdba
  43c3e0:	bl	43b0ac <ferror@plt+0x382dc>
  43c3e4:	ldr	x2, [x20, #16]
  43c3e8:	mov	w1, w21
  43c3ec:	mov	x0, x19
  43c3f0:	bl	43cecc <ferror@plt+0x3a0fc>
  43c3f4:	b	43b6e4 <ferror@plt+0x38914>
  43c3f8:	mov	x0, x19
  43c3fc:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43c400:	add	x1, x1, #0xdba
  43c404:	bl	43b0ac <ferror@plt+0x382dc>
  43c408:	ldr	x0, [x19, #368]
  43c40c:	cbz	x0, 43c420 <ferror@plt+0x39650>
  43c410:	ldr	x1, [x19, #288]
  43c414:	stp	x1, x0, [sp, #96]
  43c418:	add	x1, sp, #0x60
  43c41c:	str	x1, [x19, #288]
  43c420:	ldr	x2, [x20, #8]
  43c424:	ldr	w0, [x2]
  43c428:	cmp	w0, #0x4
  43c42c:	b.eq	43c450 <ferror@plt+0x39680>  // b.none
  43c430:	mov	x0, x19
  43c434:	mov	w1, w21
  43c438:	bl	43cecc <ferror@plt+0x3a0fc>
  43c43c:	ldr	x0, [x19, #368]
  43c440:	cbz	x0, 43b6e4 <ferror@plt+0x38914>
  43c444:	ldr	x0, [sp, #96]
  43c448:	str	x0, [x19, #288]
  43c44c:	b	43b6e4 <ferror@plt+0x38914>
  43c450:	ldr	x2, [x2, #8]
  43c454:	mov	x0, x19
  43c458:	mov	w1, w21
  43c45c:	bl	43cecc <ferror@plt+0x3a0fc>
  43c460:	ldr	x0, [x19, #368]
  43c464:	cbz	x0, 43c470 <ferror@plt+0x396a0>
  43c468:	ldr	x0, [sp, #96]
  43c46c:	str	x0, [x19, #288]
  43c470:	ldrb	w0, [x19, #264]
  43c474:	cmp	w0, #0x3c
  43c478:	b.ne	43c488 <ferror@plt+0x396b8>  // b.any
  43c47c:	mov	x0, x19
  43c480:	mov	w1, #0x20                  	// #32
  43c484:	bl	43aff4 <ferror@plt+0x38224>
  43c488:	mov	x0, x19
  43c48c:	mov	w1, #0x3c                  	// #60
  43c490:	bl	43aff4 <ferror@plt+0x38224>
  43c494:	ldr	x0, [x20, #8]
  43c498:	mov	w1, w21
  43c49c:	ldr	x2, [x0, #16]
  43c4a0:	mov	x0, x19
  43c4a4:	bl	43cecc <ferror@plt+0x3a0fc>
  43c4a8:	ldrb	w0, [x19, #264]
  43c4ac:	cmp	w0, #0x3e
  43c4b0:	b.ne	43c4c0 <ferror@plt+0x396f0>  // b.any
  43c4b4:	mov	x0, x19
  43c4b8:	mov	w1, #0x20                  	// #32
  43c4bc:	bl	43aff4 <ferror@plt+0x38224>
  43c4c0:	mov	x0, x19
  43c4c4:	mov	w1, #0x3e                  	// #62
  43c4c8:	bl	43aff4 <ferror@plt+0x38224>
  43c4cc:	b	43b6e4 <ferror@plt+0x38914>
  43c4d0:	ldr	x2, [x20, #8]
  43c4d4:	mov	w1, w21
  43c4d8:	mov	x0, x19
  43c4dc:	bl	43d4bc <ferror@plt+0x3a6ec>
  43c4e0:	b	43b6e4 <ferror@plt+0x38914>
  43c4e4:	ldp	x23, x20, [x20, #8]
  43c4e8:	ldr	w0, [x23]
  43c4ec:	cmp	w0, #0x32
  43c4f0:	b.ne	43c5a0 <ferror@plt+0x397d0>  // b.any
  43c4f4:	ldr	x0, [x23, #8]
  43c4f8:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x255fc>
  43c4fc:	add	x1, x1, #0x92a
  43c500:	ldr	x22, [x0]
  43c504:	mov	x0, x22
  43c508:	bl	402ad0 <strcmp@plt>
  43c50c:	cbnz	w0, 43c53c <ferror@plt+0x3976c>
  43c510:	ldr	w0, [x20]
  43c514:	cmp	w0, #0x3
  43c518:	b.ne	43c53c <ferror@plt+0x3976c>  // b.any
  43c51c:	ldr	x0, [x20, #8]
  43c520:	ldr	w1, [x0]
  43c524:	cmp	w1, #0x1
  43c528:	b.ne	43c53c <ferror@plt+0x3976c>  // b.any
  43c52c:	ldr	x1, [x20, #16]
  43c530:	ldr	w1, [x1]
  43c534:	cmp	w1, #0x29
  43c538:	csel	x20, x20, x0, ne  // ne = any
  43c53c:	ldr	w0, [x20]
  43c540:	cmp	w0, #0x39
  43c544:	b.ne	43c56c <ferror@plt+0x3979c>  // b.any
  43c548:	ldr	x2, [x20, #8]
  43c54c:	mov	w1, w21
  43c550:	mov	x0, x19
  43c554:	bl	43d4dc <ferror@plt+0x3a70c>
  43c558:	mov	x2, x23
  43c55c:	mov	w1, w21
  43c560:	mov	x0, x19
  43c564:	bl	43d4bc <ferror@plt+0x3a6ec>
  43c568:	b	43b6e4 <ferror@plt+0x38914>
  43c56c:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  43c570:	mov	x0, x22
  43c574:	add	x1, x1, #0x458
  43c578:	bl	402ad0 <strcmp@plt>
  43c57c:	cbnz	w0, 43c5d4 <ferror@plt+0x39804>
  43c580:	mov	x1, x20
  43c584:	mov	x0, x19
  43c588:	bl	43b5f4 <ferror@plt+0x38824>
  43c58c:	bl	43b07c <ferror@plt+0x382ac>
  43c590:	mov	w1, w0
  43c594:	mov	x0, x19
  43c598:	bl	43b0e0 <ferror@plt+0x38310>
  43c59c:	b	43b6e4 <ferror@plt+0x38914>
  43c5a0:	cmp	w0, #0x34
  43c5a4:	b.eq	43c640 <ferror@plt+0x39870>  // b.none
  43c5a8:	mov	x22, #0x0                   	// #0
  43c5ac:	mov	x2, x23
  43c5b0:	mov	w1, w21
  43c5b4:	mov	x0, x19
  43c5b8:	bl	43d4bc <ferror@plt+0x3a6ec>
  43c5bc:	cbnz	x22, 43c66c <ferror@plt+0x3989c>
  43c5c0:	mov	x2, x20
  43c5c4:	mov	w1, w21
  43c5c8:	mov	x0, x19
  43c5cc:	bl	43d4dc <ferror@plt+0x3a70c>
  43c5d0:	b	43b6e4 <ferror@plt+0x38914>
  43c5d4:	mov	x0, x22
  43c5d8:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43c5dc:	add	x1, x1, #0xdc4
  43c5e0:	bl	402ad0 <strcmp@plt>
  43c5e4:	mov	w3, w0
  43c5e8:	cbnz	w0, 43c5ac <ferror@plt+0x397dc>
  43c5ec:	ldr	w0, [x20]
  43c5f0:	cmp	w0, #0x2f
  43c5f4:	b.ne	43c628 <ferror@plt+0x39858>  // b.any
  43c5f8:	ldr	x0, [x20, #8]
  43c5fc:	cbz	x0, 43c628 <ferror@plt+0x39858>
  43c600:	ldr	w1, [x0]
  43c604:	cmp	w1, #0x4b
  43c608:	b.ne	43c638 <ferror@plt+0x39868>  // b.any
  43c60c:	ldr	x1, [x0, #8]
  43c610:	mov	x0, x19
  43c614:	bl	43b5f4 <ferror@plt+0x38824>
  43c618:	bl	43b07c <ferror@plt+0x382ac>
  43c61c:	add	w3, w3, w0
  43c620:	ldr	x20, [x20, #16]
  43c624:	cbnz	x20, 43c5ec <ferror@plt+0x3981c>
  43c628:	mov	w1, w3
  43c62c:	mov	x0, x19
  43c630:	bl	43b0e0 <ferror@plt+0x38310>
  43c634:	b	43b6e4 <ferror@plt+0x38914>
  43c638:	add	w3, w3, #0x1
  43c63c:	b	43c620 <ferror@plt+0x39850>
  43c640:	mov	x0, x19
  43c644:	mov	w1, #0x28                  	// #40
  43c648:	bl	43aff4 <ferror@plt+0x38224>
  43c64c:	ldr	x2, [x23, #8]
  43c650:	mov	w1, w21
  43c654:	mov	x0, x19
  43c658:	bl	43cecc <ferror@plt+0x3a0fc>
  43c65c:	mov	x0, x19
  43c660:	mov	w1, #0x29                  	// #41
  43c664:	bl	43aff4 <ferror@plt+0x38224>
  43c668:	b	43c5c0 <ferror@plt+0x397f0>
  43c66c:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43c670:	mov	x0, x22
  43c674:	add	x1, x1, #0xdc7
  43c678:	bl	402ad0 <strcmp@plt>
  43c67c:	cbnz	w0, 43c694 <ferror@plt+0x398c4>
  43c680:	mov	x2, x20
  43c684:	mov	w1, w21
  43c688:	mov	x0, x19
  43c68c:	bl	43cecc <ferror@plt+0x3a0fc>
  43c690:	b	43b6e4 <ferror@plt+0x38914>
  43c694:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  43c698:	mov	x0, x22
  43c69c:	add	x1, x1, #0x17b
  43c6a0:	bl	402ad0 <strcmp@plt>
  43c6a4:	cbnz	w0, 43c5c0 <ferror@plt+0x397f0>
  43c6a8:	mov	x0, x19
  43c6ac:	mov	w1, #0x28                  	// #40
  43c6b0:	bl	43aff4 <ferror@plt+0x38224>
  43c6b4:	mov	x2, x20
  43c6b8:	mov	w1, w21
  43c6bc:	mov	x0, x19
  43c6c0:	bl	43cecc <ferror@plt+0x3a0fc>
  43c6c4:	mov	x0, x19
  43c6c8:	mov	w1, #0x29                  	// #41
  43c6cc:	bl	43aff4 <ferror@plt+0x38224>
  43c6d0:	b	43b6e4 <ferror@plt+0x38914>
  43c6d4:	ldr	x0, [x20, #16]
  43c6d8:	ldr	w0, [x0]
  43c6dc:	cmp	w0, #0x39
  43c6e0:	b.ne	43b6dc <ferror@plt+0x3890c>  // b.any
  43c6e4:	ldr	x2, [x20, #8]
  43c6e8:	ldr	x0, [x2, #8]
  43c6ec:	bl	43b3bc <ferror@plt+0x385ec>
  43c6f0:	cbz	w0, 43c754 <ferror@plt+0x39984>
  43c6f4:	mov	w1, w21
  43c6f8:	mov	x0, x19
  43c6fc:	bl	43d4bc <ferror@plt+0x3a6ec>
  43c700:	mov	x0, x19
  43c704:	mov	w1, #0x3c                  	// #60
  43c708:	bl	43aff4 <ferror@plt+0x38224>
  43c70c:	ldr	x0, [x20, #16]
  43c710:	mov	w1, w21
  43c714:	ldr	x2, [x0, #8]
  43c718:	mov	x0, x19
  43c71c:	bl	43cecc <ferror@plt+0x3a0fc>
  43c720:	mov	x0, x19
  43c724:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43c728:	add	x1, x1, #0xdca
  43c72c:	bl	43b0ac <ferror@plt+0x382dc>
  43c730:	ldr	x0, [x20, #16]
  43c734:	mov	w1, w21
  43c738:	ldr	x2, [x0, #16]
  43c73c:	mov	x0, x19
  43c740:	bl	43cecc <ferror@plt+0x3a0fc>
  43c744:	mov	x0, x19
  43c748:	mov	w1, #0x29                  	// #41
  43c74c:	bl	43aff4 <ferror@plt+0x38224>
  43c750:	b	43b6e4 <ferror@plt+0x38914>
  43c754:	mov	x2, x20
  43c758:	mov	w1, w21
  43c75c:	mov	x0, x19
  43c760:	bl	43d568 <ferror@plt+0x3a798>
  43c764:	cbnz	w0, 43b6e4 <ferror@plt+0x38914>
  43c768:	ldr	x0, [x20, #8]
  43c76c:	ldr	w1, [x0]
  43c770:	cmp	w1, #0x32
  43c774:	b.ne	43c7a4 <ferror@plt+0x399d4>  // b.any
  43c778:	ldr	x0, [x0, #8]
  43c77c:	ldr	w1, [x0, #16]
  43c780:	cmp	w1, #0x1
  43c784:	b.ne	43c7a4 <ferror@plt+0x399d4>  // b.any
  43c788:	ldr	x0, [x0, #8]
  43c78c:	ldrb	w0, [x0]
  43c790:	cmp	w0, #0x3e
  43c794:	b.ne	43c7a4 <ferror@plt+0x399d4>  // b.any
  43c798:	mov	x0, x19
  43c79c:	mov	w1, #0x28                  	// #40
  43c7a0:	bl	43aff4 <ferror@plt+0x38224>
  43c7a4:	ldr	x0, [x20, #8]
  43c7a8:	adrp	x22, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43c7ac:	add	x22, x22, #0xdcd
  43c7b0:	mov	x1, x22
  43c7b4:	ldr	x0, [x0, #8]
  43c7b8:	ldr	x0, [x0]
  43c7bc:	bl	402ad0 <strcmp@plt>
  43c7c0:	ldr	x1, [x20, #16]
  43c7c4:	ldr	x2, [x1, #8]
  43c7c8:	cbnz	w0, 43c7f4 <ferror@plt+0x39a24>
  43c7cc:	ldr	w0, [x2]
  43c7d0:	cmp	w0, #0x3
  43c7d4:	b.ne	43c7f4 <ferror@plt+0x39a24>  // b.any
  43c7d8:	ldr	x0, [x2, #16]
  43c7dc:	ldr	w0, [x0]
  43c7e0:	cmp	w0, #0x29
  43c7e4:	b.eq	43c7f0 <ferror@plt+0x39a20>  // b.none
  43c7e8:	mov	w0, #0x1                   	// #1
  43c7ec:	str	w0, [x19, #304]
  43c7f0:	ldr	x2, [x2, #8]
  43c7f4:	mov	w1, w21
  43c7f8:	mov	x0, x19
  43c7fc:	bl	43d4dc <ferror@plt+0x3a70c>
  43c800:	ldr	x23, [x20, #8]
  43c804:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x1a5fc>
  43c808:	add	x1, x1, #0xc89
  43c80c:	ldr	x0, [x23, #8]
  43c810:	ldr	x24, [x0]
  43c814:	mov	x0, x24
  43c818:	bl	402ad0 <strcmp@plt>
  43c81c:	cbnz	w0, 43c88c <ferror@plt+0x39abc>
  43c820:	mov	x0, x19
  43c824:	mov	w1, #0x5b                  	// #91
  43c828:	bl	43aff4 <ferror@plt+0x38224>
  43c82c:	ldr	x0, [x20, #16]
  43c830:	mov	w1, w21
  43c834:	ldr	x2, [x0, #16]
  43c838:	mov	x0, x19
  43c83c:	bl	43cecc <ferror@plt+0x3a0fc>
  43c840:	mov	x0, x19
  43c844:	mov	w1, #0x5d                  	// #93
  43c848:	bl	43aff4 <ferror@plt+0x38224>
  43c84c:	ldr	x0, [x20, #8]
  43c850:	ldr	w1, [x0]
  43c854:	cmp	w1, #0x32
  43c858:	b.ne	43b6e4 <ferror@plt+0x38914>  // b.any
  43c85c:	ldr	x0, [x0, #8]
  43c860:	ldr	w1, [x0, #16]
  43c864:	cmp	w1, #0x1
  43c868:	b.ne	43b6e4 <ferror@plt+0x38914>  // b.any
  43c86c:	ldr	x0, [x0, #8]
  43c870:	ldrb	w0, [x0]
  43c874:	cmp	w0, #0x3e
  43c878:	b.ne	43b6e4 <ferror@plt+0x38914>  // b.any
  43c87c:	mov	x0, x19
  43c880:	mov	w1, #0x29                  	// #41
  43c884:	bl	43aff4 <ferror@plt+0x38224>
  43c888:	b	43b6e4 <ferror@plt+0x38914>
  43c88c:	mov	x1, x22
  43c890:	mov	x0, x24
  43c894:	bl	402ad0 <strcmp@plt>
  43c898:	cbz	w0, 43c8ac <ferror@plt+0x39adc>
  43c89c:	mov	x2, x23
  43c8a0:	mov	w1, w21
  43c8a4:	mov	x0, x19
  43c8a8:	bl	43d4bc <ferror@plt+0x3a6ec>
  43c8ac:	ldr	x0, [x20, #16]
  43c8b0:	mov	w1, w21
  43c8b4:	ldr	x2, [x0, #16]
  43c8b8:	mov	x0, x19
  43c8bc:	bl	43d4dc <ferror@plt+0x3a70c>
  43c8c0:	b	43c84c <ferror@plt+0x39a7c>
  43c8c4:	mov	w0, #0x1                   	// #1
  43c8c8:	str	w0, [x19, #304]
  43c8cc:	b	43b6e4 <ferror@plt+0x38914>
  43c8d0:	ldr	x0, [x20, #16]
  43c8d4:	ldr	w1, [x0]
  43c8d8:	cmp	w1, #0x3b
  43c8dc:	b.ne	43b6dc <ferror@plt+0x3890c>  // b.any
  43c8e0:	ldr	x0, [x0, #16]
  43c8e4:	ldr	w0, [x0]
  43c8e8:	cmp	w0, #0x3c
  43c8ec:	b.ne	43b6dc <ferror@plt+0x3890c>  // b.any
  43c8f0:	mov	x2, x20
  43c8f4:	mov	w1, w21
  43c8f8:	mov	x0, x19
  43c8fc:	bl	43d568 <ferror@plt+0x3a798>
  43c900:	cbnz	w0, 43b6e4 <ferror@plt+0x38914>
  43c904:	ldp	x24, x0, [x20, #8]
  43c908:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43c90c:	add	x1, x1, #0xdd0
  43c910:	ldp	x22, x0, [x0, #8]
  43c914:	ldp	x23, x20, [x0, #8]
  43c918:	ldr	x0, [x24, #8]
  43c91c:	ldr	x0, [x0]
  43c920:	bl	402ad0 <strcmp@plt>
  43c924:	cbnz	w0, 43c97c <ferror@plt+0x39bac>
  43c928:	mov	x2, x22
  43c92c:	mov	w1, w21
  43c930:	mov	x0, x19
  43c934:	bl	43d4dc <ferror@plt+0x3a70c>
  43c938:	mov	x2, x24
  43c93c:	mov	w1, w21
  43c940:	mov	x0, x19
  43c944:	bl	43d4bc <ferror@plt+0x3a6ec>
  43c948:	mov	x2, x23
  43c94c:	mov	w1, w21
  43c950:	mov	x0, x19
  43c954:	bl	43d4dc <ferror@plt+0x3a70c>
  43c958:	mov	x0, x19
  43c95c:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43c960:	add	x1, x1, #0xdd3
  43c964:	bl	43b0ac <ferror@plt+0x382dc>
  43c968:	mov	x2, x20
  43c96c:	mov	w1, w21
  43c970:	mov	x0, x19
  43c974:	bl	43d4dc <ferror@plt+0x3a70c>
  43c978:	b	43b6e4 <ferror@plt+0x38914>
  43c97c:	mov	x0, x19
  43c980:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43c984:	add	x1, x1, #0xdd7
  43c988:	bl	43b0ac <ferror@plt+0x382dc>
  43c98c:	ldr	x0, [x22, #8]
  43c990:	cbz	x0, 43c9b0 <ferror@plt+0x39be0>
  43c994:	mov	x2, x22
  43c998:	mov	w1, w21
  43c99c:	mov	x0, x19
  43c9a0:	bl	43d4dc <ferror@plt+0x3a70c>
  43c9a4:	mov	x0, x19
  43c9a8:	mov	w1, #0x20                  	// #32
  43c9ac:	bl	43aff4 <ferror@plt+0x38224>
  43c9b0:	mov	x2, x23
  43c9b4:	mov	w1, w21
  43c9b8:	mov	x0, x19
  43c9bc:	bl	43cecc <ferror@plt+0x3a0fc>
  43c9c0:	cbz	x20, 43b6e4 <ferror@plt+0x38914>
  43c9c4:	mov	x2, x20
  43c9c8:	mov	w1, w21
  43c9cc:	mov	x0, x19
  43c9d0:	bl	43d4dc <ferror@plt+0x3a70c>
  43c9d4:	b	43b6e4 <ferror@plt+0x38914>
  43c9d8:	ldr	x1, [x20, #8]
  43c9dc:	ldr	w2, [x1]
  43c9e0:	cmp	w2, #0x27
  43c9e4:	b.ne	43cb90 <ferror@plt+0x39dc0>  // b.any
  43c9e8:	ldr	x1, [x1, #8]
  43c9ec:	ldr	w22, [x1, #28]
  43c9f0:	cmp	w22, #0x6
  43c9f4:	b.hi	43ca50 <ferror@plt+0x39c80>  // b.pmore
  43c9f8:	cbz	w22, 43ca58 <ferror@plt+0x39c88>
  43c9fc:	ldr	x1, [x20, #16]
  43ca00:	ldr	w1, [x1]
  43ca04:	cbnz	w1, 43ca58 <ferror@plt+0x39c88>
  43ca08:	cmp	w0, #0x3e
  43ca0c:	b.ne	43ca1c <ferror@plt+0x39c4c>  // b.any
  43ca10:	mov	x0, x19
  43ca14:	mov	w1, #0x2d                  	// #45
  43ca18:	bl	43aff4 <ferror@plt+0x38224>
  43ca1c:	ldr	x2, [x20, #16]
  43ca20:	mov	w1, w21
  43ca24:	mov	x0, x19
  43ca28:	sub	w22, w22, #0x2
  43ca2c:	bl	43cecc <ferror@plt+0x3a0fc>
  43ca30:	cmp	w22, #0x4
  43ca34:	b.hi	43b6e4 <ferror@plt+0x38914>  // b.pmore
  43ca38:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x255fc>
  43ca3c:	add	x0, x0, #0xeb0
  43ca40:	ldrb	w0, [x0, w22, uxtw]
  43ca44:	adr	x1, 43ca50 <ferror@plt+0x39c80>
  43ca48:	add	x0, x1, w0, sxtb #2
  43ca4c:	br	x0
  43ca50:	cmp	w22, #0x7
  43ca54:	b.eq	43cb30 <ferror@plt+0x39d60>  // b.none
  43ca58:	mov	x0, x19
  43ca5c:	mov	w1, #0x28                  	// #40
  43ca60:	bl	43aff4 <ferror@plt+0x38224>
  43ca64:	ldr	x2, [x20, #8]
  43ca68:	mov	w1, w21
  43ca6c:	mov	x0, x19
  43ca70:	bl	43cecc <ferror@plt+0x3a0fc>
  43ca74:	mov	x0, x19
  43ca78:	mov	w1, #0x29                  	// #41
  43ca7c:	bl	43aff4 <ferror@plt+0x38224>
  43ca80:	ldr	w0, [x20]
  43ca84:	cmp	w0, #0x3e
  43ca88:	b.ne	43ca98 <ferror@plt+0x39cc8>  // b.any
  43ca8c:	mov	x0, x19
  43ca90:	mov	w1, #0x2d                  	// #45
  43ca94:	bl	43aff4 <ferror@plt+0x38224>
  43ca98:	cmp	w22, #0x8
  43ca9c:	b.ne	43caac <ferror@plt+0x39cdc>  // b.any
  43caa0:	mov	x0, x19
  43caa4:	mov	w1, #0x5b                  	// #91
  43caa8:	bl	43aff4 <ferror@plt+0x38224>
  43caac:	ldr	x2, [x20, #16]
  43cab0:	mov	w1, w21
  43cab4:	mov	x0, x19
  43cab8:	bl	43cecc <ferror@plt+0x3a0fc>
  43cabc:	cmp	w22, #0x8
  43cac0:	b.ne	43b6e4 <ferror@plt+0x38914>  // b.any
  43cac4:	mov	x0, x19
  43cac8:	mov	w1, #0x5d                  	// #93
  43cacc:	bl	43aff4 <ferror@plt+0x38224>
  43cad0:	b	43b6e4 <ferror@plt+0x38914>
  43cad4:	mov	x0, x19
  43cad8:	mov	w1, #0x75                  	// #117
  43cadc:	bl	43aff4 <ferror@plt+0x38224>
  43cae0:	b	43b6e4 <ferror@plt+0x38914>
  43cae4:	mov	x0, x19
  43cae8:	mov	w1, #0x6c                  	// #108
  43caec:	bl	43aff4 <ferror@plt+0x38224>
  43caf0:	b	43b6e4 <ferror@plt+0x38914>
  43caf4:	mov	x0, x19
  43caf8:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  43cafc:	add	x1, x1, #0x288
  43cb00:	bl	43b0ac <ferror@plt+0x382dc>
  43cb04:	b	43b6e4 <ferror@plt+0x38914>
  43cb08:	mov	x0, x19
  43cb0c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x225fc>
  43cb10:	add	x1, x1, #0xfff
  43cb14:	bl	43b0ac <ferror@plt+0x382dc>
  43cb18:	b	43b6e4 <ferror@plt+0x38914>
  43cb1c:	mov	x0, x19
  43cb20:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  43cb24:	add	x1, x1, #0x59
  43cb28:	bl	43b0ac <ferror@plt+0x382dc>
  43cb2c:	b	43b6e4 <ferror@plt+0x38914>
  43cb30:	ldr	x1, [x20, #16]
  43cb34:	ldr	w2, [x1]
  43cb38:	cbnz	w2, 43ca58 <ferror@plt+0x39c88>
  43cb3c:	ldr	w2, [x1, #16]
  43cb40:	cmp	w2, #0x1
  43cb44:	b.ne	43ca58 <ferror@plt+0x39c88>  // b.any
  43cb48:	cmp	w0, #0x3d
  43cb4c:	b.ne	43ca58 <ferror@plt+0x39c88>  // b.any
  43cb50:	ldr	x0, [x1, #8]
  43cb54:	ldrb	w0, [x0]
  43cb58:	cmp	w0, #0x30
  43cb5c:	b.eq	43cb7c <ferror@plt+0x39dac>  // b.none
  43cb60:	cmp	w0, #0x31
  43cb64:	b.ne	43ca58 <ferror@plt+0x39c88>  // b.any
  43cb68:	mov	x0, x19
  43cb6c:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  43cb70:	add	x1, x1, #0x4d
  43cb74:	bl	43b0ac <ferror@plt+0x382dc>
  43cb78:	b	43b6e4 <ferror@plt+0x38914>
  43cb7c:	mov	x0, x19
  43cb80:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  43cb84:	add	x1, x1, #0x52
  43cb88:	bl	43b0ac <ferror@plt+0x382dc>
  43cb8c:	b	43b6e4 <ferror@plt+0x38914>
  43cb90:	mov	w22, #0x0                   	// #0
  43cb94:	b	43ca58 <ferror@plt+0x39c88>
  43cb98:	ldr	w1, [x20, #8]
  43cb9c:	mov	x0, x19
  43cba0:	bl	43b0e0 <ferror@plt+0x38310>
  43cba4:	b	43b6e4 <ferror@plt+0x38914>
  43cba8:	mov	x0, x19
  43cbac:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43cbb0:	add	x1, x1, #0xddc
  43cbb4:	bl	43b0ac <ferror@plt+0x382dc>
  43cbb8:	ldr	x2, [x20, #8]
  43cbbc:	mov	w1, w21
  43cbc0:	mov	x0, x19
  43cbc4:	bl	43cecc <ferror@plt+0x3a0fc>
  43cbc8:	b	43b6e4 <ferror@plt+0x38914>
  43cbcc:	ldr	x2, [x20, #8]
  43cbd0:	mov	w1, w21
  43cbd4:	mov	x0, x19
  43cbd8:	bl	43cecc <ferror@plt+0x3a0fc>
  43cbdc:	ldr	x2, [x20, #16]
  43cbe0:	mov	w1, w21
  43cbe4:	mov	x0, x19
  43cbe8:	bl	43cecc <ferror@plt+0x3a0fc>
  43cbec:	b	43b6e4 <ferror@plt+0x38914>
  43cbf0:	ldrb	w1, [x20, #8]
  43cbf4:	mov	x0, x19
  43cbf8:	bl	43aff4 <ferror@plt+0x38224>
  43cbfc:	b	43b6e4 <ferror@plt+0x38914>
  43cc00:	mov	x0, x19
  43cc04:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43cc08:	add	x1, x1, #0xdeb
  43cc0c:	bl	43b0ac <ferror@plt+0x382dc>
  43cc10:	ldr	x2, [x20, #8]
  43cc14:	mov	w1, w21
  43cc18:	mov	x0, x19
  43cc1c:	bl	43cecc <ferror@plt+0x3a0fc>
  43cc20:	mov	x0, x19
  43cc24:	mov	w1, #0x29                  	// #41
  43cc28:	bl	43aff4 <ferror@plt+0x38224>
  43cc2c:	b	43b6e4 <ferror@plt+0x38914>
  43cc30:	ldr	x1, [x20, #8]
  43cc34:	mov	x0, x19
  43cc38:	bl	43b5f4 <ferror@plt+0x38824>
  43cc3c:	cbnz	x0, 43cc64 <ferror@plt+0x39e94>
  43cc40:	ldr	x2, [x20, #8]
  43cc44:	mov	w1, w21
  43cc48:	mov	x0, x19
  43cc4c:	bl	43d4dc <ferror@plt+0x3a70c>
  43cc50:	mov	x0, x19
  43cc54:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43cc58:	add	x1, x1, #0xebe
  43cc5c:	bl	43b0ac <ferror@plt+0x382dc>
  43cc60:	b	43b6e4 <ferror@plt+0x38914>
  43cc64:	bl	43b07c <ferror@plt+0x382ac>
  43cc68:	mov	w23, w0
  43cc6c:	sub	w25, w0, #0x1
  43cc70:	ldr	x24, [x20, #8]
  43cc74:	adrp	x20, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  43cc78:	add	x20, x20, #0x75
  43cc7c:	cmp	w22, w23
  43cc80:	b.ge	43b6e4 <ferror@plt+0x38914>  // b.tcont
  43cc84:	str	w22, [x19, #316]
  43cc88:	mov	x2, x24
  43cc8c:	mov	w1, w21
  43cc90:	mov	x0, x19
  43cc94:	bl	43cecc <ferror@plt+0x3a0fc>
  43cc98:	cmp	w25, w22
  43cc9c:	b.le	43ccac <ferror@plt+0x39edc>
  43cca0:	mov	x1, x20
  43cca4:	mov	x0, x19
  43cca8:	bl	43b0ac <ferror@plt+0x382dc>
  43ccac:	add	w22, w22, #0x1
  43ccb0:	b	43cc7c <ferror@plt+0x39eac>
  43ccb4:	ldr	x20, [x20, #8]
  43ccb8:	cbnz	x20, 43ccd0 <ferror@plt+0x39f00>
  43ccbc:	mov	x0, x19
  43ccc0:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  43ccc4:	add	x1, x1, #0x42c
  43ccc8:	bl	43b0ac <ferror@plt+0x382dc>
  43cccc:	b	43b6e4 <ferror@plt+0x38914>
  43ccd0:	mov	x0, x19
  43ccd4:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43ccd8:	add	x1, x1, #0xdf6
  43ccdc:	bl	43b0ac <ferror@plt+0x382dc>
  43cce0:	mov	w1, w20
  43cce4:	mov	x0, x19
  43cce8:	bl	43b0e0 <ferror@plt+0x38310>
  43ccec:	mov	x0, x19
  43ccf0:	mov	w1, #0x7d                  	// #125
  43ccf4:	bl	43aff4 <ferror@plt+0x38224>
  43ccf8:	b	43b6e4 <ferror@plt+0x38914>
  43ccfc:	mov	x0, x19
  43cd00:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43cd04:	add	x1, x1, #0xdfd
  43cd08:	bl	43b0ac <ferror@plt+0x382dc>
  43cd0c:	ldr	x2, [x20, #8]
  43cd10:	mov	w1, w21
  43cd14:	mov	x0, x19
  43cd18:	bl	43cecc <ferror@plt+0x3a0fc>
  43cd1c:	b	43b6e4 <ferror@plt+0x38914>
  43cd20:	mov	x0, x19
  43cd24:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43cd28:	add	x1, x1, #0xe1b
  43cd2c:	bl	43b0ac <ferror@plt+0x382dc>
  43cd30:	ldr	x2, [x20, #8]
  43cd34:	mov	w1, w21
  43cd38:	mov	x0, x19
  43cd3c:	bl	43cecc <ferror@plt+0x3a0fc>
  43cd40:	b	43b6e4 <ferror@plt+0x38914>
  43cd44:	mov	x0, x19
  43cd48:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43cd4c:	add	x1, x1, #0xe38
  43cd50:	bl	43b0ac <ferror@plt+0x382dc>
  43cd54:	ldr	w0, [x19, #312]
  43cd58:	mov	w1, w21
  43cd5c:	ldr	x2, [x20, #8]
  43cd60:	add	w0, w0, #0x1
  43cd64:	str	w0, [x19, #312]
  43cd68:	mov	x0, x19
  43cd6c:	bl	43cecc <ferror@plt+0x3a0fc>
  43cd70:	ldr	w0, [x19, #312]
  43cd74:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43cd78:	add	x1, x1, #0xe41
  43cd7c:	sub	w0, w0, #0x1
  43cd80:	str	w0, [x19, #312]
  43cd84:	mov	x0, x19
  43cd88:	bl	43b0ac <ferror@plt+0x382dc>
  43cd8c:	ldr	w1, [x20, #16]
  43cd90:	mov	x0, x19
  43cd94:	add	w1, w1, #0x1
  43cd98:	bl	43b0e0 <ferror@plt+0x38310>
  43cd9c:	mov	x0, x19
  43cda0:	mov	w1, #0x7d                  	// #125
  43cda4:	bl	43aff4 <ferror@plt+0x38224>
  43cda8:	b	43b6e4 <ferror@plt+0x38914>
  43cdac:	mov	x0, x19
  43cdb0:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43cdb4:	add	x1, x1, #0xe44
  43cdb8:	bl	43b0ac <ferror@plt+0x382dc>
  43cdbc:	ldr	x1, [x20, #8]
  43cdc0:	mov	x0, x19
  43cdc4:	add	w1, w1, #0x1
  43cdc8:	bl	43b0e0 <ferror@plt+0x38310>
  43cdcc:	mov	x0, x19
  43cdd0:	mov	w1, #0x7d                  	// #125
  43cdd4:	bl	43aff4 <ferror@plt+0x38224>
  43cdd8:	b	43b6e4 <ferror@plt+0x38914>
  43cddc:	ldr	x2, [x20, #8]
  43cde0:	mov	w1, w21
  43cde4:	mov	x0, x19
  43cde8:	bl	43cecc <ferror@plt+0x3a0fc>
  43cdec:	mov	x0, x19
  43cdf0:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43cdf4:	add	x1, x1, #0xe53
  43cdf8:	bl	43b0ac <ferror@plt+0x382dc>
  43cdfc:	ldr	x2, [x20, #16]
  43ce00:	mov	w1, w21
  43ce04:	mov	x0, x19
  43ce08:	bl	43cecc <ferror@plt+0x3a0fc>
  43ce0c:	mov	x0, x19
  43ce10:	mov	w1, #0x5d                  	// #93
  43ce14:	bl	43aff4 <ferror@plt+0x38224>
  43ce18:	b	43b6e4 <ferror@plt+0x38914>
  43ce1c:	cmp	w5, #0x2
  43ce20:	b.ne	43ce50 <ferror@plt+0x3a080>  // b.any
  43ce24:	ldr	x22, [x22, #16]
  43ce28:	ldr	w0, [x22]
  43ce2c:	cmp	w0, #0x47
  43ce30:	b.ne	43ce3c <ferror@plt+0x3a06c>  // b.any
  43ce34:	ldr	x22, [x22, #8]
  43ce38:	cbz	x22, 43b90c <ferror@plt+0x38b3c>
  43ce3c:	ubfiz	x0, x23, #5, #32
  43ce40:	add	x2, x2, x0
  43ce44:	ldr	w0, [x22]
  43ce48:	bl	43ad74 <ferror@plt+0x37fa4>
  43ce4c:	cbnz	w0, 43b94c <ferror@plt+0x38b7c>
  43ce50:	ldr	w0, [x22]
  43ce54:	cmp	w0, #0x4
  43ce58:	b.ne	43ce68 <ferror@plt+0x3a098>  // b.any
  43ce5c:	add	x0, sp, #0x50
  43ce60:	stp	x4, x22, [sp, #80]
  43ce64:	str	x0, [x19, #288]
  43ce68:	ldr	x2, [x20, #16]
  43ce6c:	mov	x0, x19
  43ce70:	mov	w1, w21
  43ce74:	bl	43cecc <ferror@plt+0x3a0fc>
  43ce78:	ldr	w0, [x22]
  43ce7c:	cmp	w0, #0x4
  43ce80:	b.ne	43ce8c <ferror@plt+0x3a0bc>  // b.any
  43ce84:	ldr	x0, [sp, #80]
  43ce88:	str	x0, [x19, #288]
  43ce8c:	add	x22, sp, #0x70
  43ce90:	add	x25, sp, #0x68
  43ce94:	sub	w23, w23, #0x1
  43ce98:	ubfiz	x20, x23, #5, #32
  43ce9c:	ldr	w0, [x22, x20]
  43cea0:	cbnz	w0, 43cec0 <ferror@plt+0x3a0f0>
  43cea4:	mov	x0, x19
  43cea8:	mov	w1, #0x20                  	// #32
  43ceac:	bl	43aff4 <ferror@plt+0x38224>
  43ceb0:	ldr	x2, [x25, x20]
  43ceb4:	mov	w1, w21
  43ceb8:	mov	x0, x19
  43cebc:	bl	43cf58 <ferror@plt+0x3a188>
  43cec0:	cbnz	w23, 43ce94 <ferror@plt+0x3a0c4>
  43cec4:	str	x24, [x19, #296]
  43cec8:	b	43b6e4 <ferror@plt+0x38914>
  43cecc:	stp	x29, x30, [sp, #-48]!
  43ced0:	mov	x29, sp
  43ced4:	stp	x19, x20, [sp, #16]
  43ced8:	mov	x19, x0
  43cedc:	cbz	x2, 43cefc <ferror@plt+0x3a12c>
  43cee0:	ldr	w4, [x2, #4]
  43cee4:	mov	x20, x2
  43cee8:	cmp	w4, #0x1
  43ceec:	b.gt	43cefc <ferror@plt+0x3a12c>
  43cef0:	ldr	w3, [x0, #308]
  43cef4:	cmp	w3, #0x400
  43cef8:	b.le	43cf10 <ferror@plt+0x3a140>
  43cefc:	mov	w0, #0x1                   	// #1
  43cf00:	str	w0, [x19, #304]
  43cf04:	ldp	x19, x20, [sp, #16]
  43cf08:	ldp	x29, x30, [sp], #48
  43cf0c:	ret
  43cf10:	add	w4, w4, #0x1
  43cf14:	add	w3, w3, #0x1
  43cf18:	str	w4, [x2, #4]
  43cf1c:	str	w3, [x0, #308]
  43cf20:	ldr	x3, [x0, #328]
  43cf24:	stp	x2, x3, [sp, #32]
  43cf28:	add	x3, sp, #0x20
  43cf2c:	str	x3, [x0, #328]
  43cf30:	bl	43b6bc <ferror@plt+0x388ec>
  43cf34:	ldr	x0, [sp, #40]
  43cf38:	str	x0, [x19, #328]
  43cf3c:	ldr	w0, [x20, #4]
  43cf40:	sub	w0, w0, #0x1
  43cf44:	str	w0, [x20, #4]
  43cf48:	ldr	w0, [x19, #308]
  43cf4c:	sub	w0, w0, #0x1
  43cf50:	str	w0, [x19, #308]
  43cf54:	b	43cf04 <ferror@plt+0x3a134>
  43cf58:	stp	x29, x30, [sp, #-48]!
  43cf5c:	mov	x29, sp
  43cf60:	stp	x19, x20, [sp, #16]
  43cf64:	mov	x20, x2
  43cf68:	ldr	w2, [x2]
  43cf6c:	str	x21, [sp, #32]
  43cf70:	cmp	w2, #0x3
  43cf74:	b.eq	43d0dc <ferror@plt+0x3a30c>  // b.none
  43cf78:	sub	w2, w2, #0x19
  43cf7c:	mov	x19, x0
  43cf80:	mov	w21, w1
  43cf84:	cmp	w2, #0x37
  43cf88:	b.hi	43d108 <ferror@plt+0x3a338>  // b.pmore
  43cf8c:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x255fc>
  43cf90:	add	x0, x0, #0xeb8
  43cf94:	ldrb	w0, [x0, w2, uxtw]
  43cf98:	adr	x1, 43cfa4 <ferror@plt+0x3a1d4>
  43cf9c:	add	x0, x1, w0, sxtb #2
  43cfa0:	br	x0
  43cfa4:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43cfa8:	add	x1, x1, #0xe5c
  43cfac:	mov	x0, x19
  43cfb0:	ldp	x19, x20, [sp, #16]
  43cfb4:	ldr	x21, [sp, #32]
  43cfb8:	ldp	x29, x30, [sp], #48
  43cfbc:	b	43b0ac <ferror@plt+0x382dc>
  43cfc0:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43cfc4:	add	x1, x1, #0xe66
  43cfc8:	b	43cfac <ferror@plt+0x3a1dc>
  43cfcc:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43cfd0:	add	x1, x1, #0xe70
  43cfd4:	b	43cfac <ferror@plt+0x3a1dc>
  43cfd8:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43cfdc:	add	x1, x1, #0xe77
  43cfe0:	b	43cfac <ferror@plt+0x3a1dc>
  43cfe4:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43cfe8:	add	x1, x1, #0xe89
  43cfec:	mov	x0, x19
  43cff0:	bl	43b0ac <ferror@plt+0x382dc>
  43cff4:	ldr	x0, [x20, #16]
  43cff8:	cbz	x0, 43d110 <ferror@plt+0x3a340>
  43cffc:	mov	x0, x19
  43d000:	mov	w1, #0x28                  	// #40
  43d004:	bl	43aff4 <ferror@plt+0x38224>
  43d008:	ldr	x2, [x20, #16]
  43d00c:	mov	w1, w21
  43d010:	mov	x0, x19
  43d014:	bl	43cecc <ferror@plt+0x3a0fc>
  43d018:	mov	w1, #0x29                  	// #41
  43d01c:	b	43d050 <ferror@plt+0x3a280>
  43d020:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43d024:	add	x1, x1, #0xe93
  43d028:	b	43cfec <ferror@plt+0x3a21c>
  43d02c:	mov	x0, x19
  43d030:	mov	w1, #0x20                  	// #32
  43d034:	bl	43aff4 <ferror@plt+0x38224>
  43d038:	ldr	x2, [x20, #16]
  43d03c:	mov	w1, w21
  43d040:	mov	x0, x19
  43d044:	b	43d0e0 <ferror@plt+0x3a310>
  43d048:	tbnz	w21, #2, 43d110 <ferror@plt+0x3a340>
  43d04c:	mov	w1, #0x2a                  	// #42
  43d050:	mov	x0, x19
  43d054:	ldp	x19, x20, [sp, #16]
  43d058:	ldr	x21, [sp, #32]
  43d05c:	ldp	x29, x30, [sp], #48
  43d060:	b	43aff4 <ferror@plt+0x38224>
  43d064:	mov	x0, x19
  43d068:	mov	w1, #0x20                  	// #32
  43d06c:	bl	43aff4 <ferror@plt+0x38224>
  43d070:	mov	w1, #0x26                  	// #38
  43d074:	b	43d050 <ferror@plt+0x3a280>
  43d078:	mov	x0, x19
  43d07c:	mov	w1, #0x20                  	// #32
  43d080:	bl	43aff4 <ferror@plt+0x38224>
  43d084:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x235fc>
  43d088:	add	x1, x1, #0x36
  43d08c:	b	43cfac <ferror@plt+0x3a1dc>
  43d090:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43d094:	add	x1, x1, #0xe9a
  43d098:	b	43cfac <ferror@plt+0x3a1dc>
  43d09c:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43d0a0:	add	x1, x1, #0xea3
  43d0a4:	b	43cfac <ferror@plt+0x3a1dc>
  43d0a8:	ldrb	w0, [x19, #264]
  43d0ac:	cmp	w0, #0x28
  43d0b0:	b.eq	43d0c0 <ferror@plt+0x3a2f0>  // b.none
  43d0b4:	mov	x0, x19
  43d0b8:	mov	w1, #0x20                  	// #32
  43d0bc:	bl	43aff4 <ferror@plt+0x38224>
  43d0c0:	ldr	x2, [x20, #8]
  43d0c4:	mov	w1, w21
  43d0c8:	mov	x0, x19
  43d0cc:	bl	43cecc <ferror@plt+0x3a0fc>
  43d0d0:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43d0d4:	add	x1, x1, #0xeae
  43d0d8:	b	43cfac <ferror@plt+0x3a1dc>
  43d0dc:	ldr	x2, [x20, #8]
  43d0e0:	ldp	x19, x20, [sp, #16]
  43d0e4:	ldr	x21, [sp, #32]
  43d0e8:	ldp	x29, x30, [sp], #48
  43d0ec:	b	43cecc <ferror@plt+0x3a0fc>
  43d0f0:	mov	x0, x19
  43d0f4:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43d0f8:	add	x1, x1, #0xeb2
  43d0fc:	bl	43b0ac <ferror@plt+0x382dc>
  43d100:	ldr	x2, [x20, #8]
  43d104:	b	43d00c <ferror@plt+0x3a23c>
  43d108:	mov	x2, x20
  43d10c:	b	43d03c <ferror@plt+0x3a26c>
  43d110:	ldp	x19, x20, [sp, #16]
  43d114:	ldr	x21, [sp, #32]
  43d118:	ldp	x29, x30, [sp], #48
  43d11c:	ret
  43d120:	stp	x29, x30, [sp, #-64]!
  43d124:	mov	x29, sp
  43d128:	stp	x19, x20, [sp, #16]
  43d12c:	mov	x19, x0
  43d130:	mov	w20, w1
  43d134:	mov	x0, x3
  43d138:	stp	x21, x22, [sp, #32]
  43d13c:	mov	x22, x2
  43d140:	mov	x21, x3
  43d144:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x255fc>
  43d148:	add	x2, x2, #0xef0
  43d14c:	stp	x23, x24, [sp, #48]
  43d150:	cbnz	x0, 43d15c <ferror@plt+0x3a38c>
  43d154:	mov	w23, #0x0                   	// #0
  43d158:	b	43d1cc <ferror@plt+0x3a3fc>
  43d15c:	ldr	w1, [x0, #16]
  43d160:	cbnz	w1, 43d154 <ferror@plt+0x3a384>
  43d164:	ldr	x1, [x0, #8]
  43d168:	ldr	w1, [x1]
  43d16c:	sub	w1, w1, #0x19
  43d170:	cmp	w1, #0x12
  43d174:	b.hi	43d188 <ferror@plt+0x3a3b8>  // b.pmore
  43d178:	ldrb	w1, [x2, w1, uxtw]
  43d17c:	adr	x3, 43d188 <ferror@plt+0x3a3b8>
  43d180:	add	x1, x3, w1, sxtb #2
  43d184:	br	x1
  43d188:	ldr	x0, [x0]
  43d18c:	b	43d150 <ferror@plt+0x3a380>
  43d190:	ldrb	w0, [x19, #264]
  43d194:	and	w0, w0, #0xfffffffd
  43d198:	and	w0, w0, #0xff
  43d19c:	cmp	w0, #0x28
  43d1a0:	b.eq	43d1bc <ferror@plt+0x3a3ec>  // b.none
  43d1a4:	ldrb	w0, [x19, #264]
  43d1a8:	cmp	w0, #0x20
  43d1ac:	b.eq	43d1bc <ferror@plt+0x3a3ec>  // b.none
  43d1b0:	mov	x0, x19
  43d1b4:	mov	w1, #0x20                  	// #32
  43d1b8:	bl	43aff4 <ferror@plt+0x38224>
  43d1bc:	mov	w23, #0x1                   	// #1
  43d1c0:	mov	x0, x19
  43d1c4:	mov	w1, #0x28                  	// #40
  43d1c8:	bl	43aff4 <ferror@plt+0x38224>
  43d1cc:	ldr	x24, [x19, #296]
  43d1d0:	str	xzr, [x19, #296]
  43d1d4:	mov	x2, x21
  43d1d8:	mov	w1, w20
  43d1dc:	mov	x0, x19
  43d1e0:	mov	w3, #0x0                   	// #0
  43d1e4:	bl	43d250 <ferror@plt+0x3a480>
  43d1e8:	cbz	w23, 43d1f8 <ferror@plt+0x3a428>
  43d1ec:	mov	x0, x19
  43d1f0:	mov	w1, #0x29                  	// #41
  43d1f4:	bl	43aff4 <ferror@plt+0x38224>
  43d1f8:	mov	x0, x19
  43d1fc:	mov	w1, #0x28                  	// #40
  43d200:	bl	43aff4 <ferror@plt+0x38224>
  43d204:	ldr	x2, [x22]
  43d208:	cbz	x2, 43d218 <ferror@plt+0x3a448>
  43d20c:	mov	w1, w20
  43d210:	mov	x0, x19
  43d214:	bl	43cecc <ferror@plt+0x3a0fc>
  43d218:	mov	x0, x19
  43d21c:	mov	w1, #0x29                  	// #41
  43d220:	bl	43aff4 <ferror@plt+0x38224>
  43d224:	mov	x2, x21
  43d228:	mov	w1, w20
  43d22c:	mov	x0, x19
  43d230:	mov	w3, #0x1                   	// #1
  43d234:	bl	43d250 <ferror@plt+0x3a480>
  43d238:	ldp	x21, x22, [sp, #32]
  43d23c:	str	x24, [x19, #296]
  43d240:	ldp	x19, x20, [sp, #16]
  43d244:	ldp	x23, x24, [sp, #48]
  43d248:	ldp	x29, x30, [sp], #64
  43d24c:	ret
  43d250:	stp	x29, x30, [sp, #-64]!
  43d254:	mov	x29, sp
  43d258:	stp	x19, x20, [sp, #16]
  43d25c:	mov	x19, x0
  43d260:	mov	x20, x2
  43d264:	stp	x21, x22, [sp, #32]
  43d268:	mov	w21, w1
  43d26c:	stp	x23, x24, [sp, #48]
  43d270:	mov	w23, w3
  43d274:	mov	w24, #0x1                   	// #1
  43d278:	cbz	x20, 43d2dc <ferror@plt+0x3a50c>
  43d27c:	ldr	w0, [x19, #304]
  43d280:	cbnz	w0, 43d2dc <ferror@plt+0x3a50c>
  43d284:	ldr	w0, [x20, #16]
  43d288:	cbnz	w0, 43d2a4 <ferror@plt+0x3a4d4>
  43d28c:	ldr	x2, [x20, #8]
  43d290:	ldr	w4, [x2]
  43d294:	cbnz	w23, 43d2ac <ferror@plt+0x3a4dc>
  43d298:	mov	w0, w4
  43d29c:	bl	43ad74 <ferror@plt+0x37fa4>
  43d2a0:	cbz	w0, 43d2ac <ferror@plt+0x3a4dc>
  43d2a4:	ldr	x20, [x20]
  43d2a8:	b	43d278 <ferror@plt+0x3a4a8>
  43d2ac:	ldr	x0, [x20, #24]
  43d2b0:	cmp	w4, #0x29
  43d2b4:	ldr	x22, [x19, #288]
  43d2b8:	str	w24, [x20, #16]
  43d2bc:	str	x0, [x19, #288]
  43d2c0:	b.ne	43d2f0 <ferror@plt+0x3a520>  // b.any
  43d2c4:	ldr	x3, [x20]
  43d2c8:	add	x2, x2, #0x10
  43d2cc:	mov	w1, w21
  43d2d0:	mov	x0, x19
  43d2d4:	bl	43d120 <ferror@plt+0x3a350>
  43d2d8:	str	x22, [x19, #288]
  43d2dc:	ldp	x19, x20, [sp, #16]
  43d2e0:	ldp	x21, x22, [sp, #32]
  43d2e4:	ldp	x23, x24, [sp, #48]
  43d2e8:	ldp	x29, x30, [sp], #64
  43d2ec:	ret
  43d2f0:	cmp	w4, #0x2a
  43d2f4:	b.ne	43d310 <ferror@plt+0x3a540>  // b.any
  43d2f8:	ldr	x3, [x20]
  43d2fc:	add	x2, x2, #0x8
  43d300:	mov	w1, w21
  43d304:	mov	x0, x19
  43d308:	bl	43d3d4 <ferror@plt+0x3a604>
  43d30c:	b	43d2d8 <ferror@plt+0x3a508>
  43d310:	cmp	w4, #0x2
  43d314:	b.ne	43d3c0 <ferror@plt+0x3a5f0>  // b.any
  43d318:	ldr	x2, [x2, #8]
  43d31c:	mov	w1, w21
  43d320:	ldr	x23, [x19, #296]
  43d324:	str	xzr, [x19, #296]
  43d328:	mov	x0, x19
  43d32c:	bl	43cecc <ferror@plt+0x3a0fc>
  43d330:	str	x23, [x19, #296]
  43d334:	tbnz	w21, #2, 43d3b0 <ferror@plt+0x3a5e0>
  43d338:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43d33c:	mov	x0, x19
  43d340:	add	x1, x1, #0xc55
  43d344:	bl	43b0ac <ferror@plt+0x382dc>
  43d348:	ldr	x0, [x20, #8]
  43d34c:	ldr	x20, [x0, #16]
  43d350:	ldr	w0, [x20]
  43d354:	cmp	w0, #0x47
  43d358:	b.ne	43d390 <ferror@plt+0x3a5c0>  // b.any
  43d35c:	mov	x0, x19
  43d360:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43d364:	add	x1, x1, #0xc46
  43d368:	bl	43b0ac <ferror@plt+0x382dc>
  43d36c:	ldr	w1, [x20, #16]
  43d370:	mov	x0, x19
  43d374:	add	w1, w1, #0x1
  43d378:	bl	43b0e0 <ferror@plt+0x38310>
  43d37c:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43d380:	mov	x0, x19
  43d384:	add	x1, x1, #0xc54
  43d388:	bl	43b0ac <ferror@plt+0x382dc>
  43d38c:	ldr	x20, [x20, #8]
  43d390:	ldr	w0, [x20]
  43d394:	bl	43ad74 <ferror@plt+0x37fa4>
  43d398:	cbnz	w0, 43d38c <ferror@plt+0x3a5bc>
  43d39c:	mov	x2, x20
  43d3a0:	mov	w1, w21
  43d3a4:	mov	x0, x19
  43d3a8:	bl	43cecc <ferror@plt+0x3a0fc>
  43d3ac:	b	43d2d8 <ferror@plt+0x3a508>
  43d3b0:	mov	x0, x19
  43d3b4:	mov	w1, #0x2e                  	// #46
  43d3b8:	bl	43aff4 <ferror@plt+0x38224>
  43d3bc:	b	43d348 <ferror@plt+0x3a578>
  43d3c0:	mov	w1, w21
  43d3c4:	mov	x0, x19
  43d3c8:	bl	43cf58 <ferror@plt+0x3a188>
  43d3cc:	str	x22, [x19, #288]
  43d3d0:	b	43d2a4 <ferror@plt+0x3a4d4>
  43d3d4:	stp	x29, x30, [sp, #-64]!
  43d3d8:	mov	x29, sp
  43d3dc:	stp	x19, x20, [sp, #16]
  43d3e0:	mov	x19, x0
  43d3e4:	stp	x21, x22, [sp, #32]
  43d3e8:	mov	w21, w1
  43d3ec:	stp	x23, x24, [sp, #48]
  43d3f0:	mov	x24, x2
  43d3f4:	cbnz	x3, 43d440 <ferror@plt+0x3a670>
  43d3f8:	mov	x0, x19
  43d3fc:	mov	w1, #0x20                  	// #32
  43d400:	bl	43aff4 <ferror@plt+0x38224>
  43d404:	mov	x0, x19
  43d408:	mov	w1, #0x5b                  	// #91
  43d40c:	bl	43aff4 <ferror@plt+0x38224>
  43d410:	ldr	x2, [x24]
  43d414:	cbz	x2, 43d424 <ferror@plt+0x3a654>
  43d418:	mov	w1, w21
  43d41c:	mov	x0, x19
  43d420:	bl	43cecc <ferror@plt+0x3a0fc>
  43d424:	mov	x0, x19
  43d428:	mov	w1, #0x5d                  	// #93
  43d42c:	ldp	x19, x20, [sp, #16]
  43d430:	ldp	x21, x22, [sp, #32]
  43d434:	ldp	x23, x24, [sp, #48]
  43d438:	ldp	x29, x30, [sp], #64
  43d43c:	b	43aff4 <ferror@plt+0x38224>
  43d440:	mov	x20, x3
  43d444:	mov	x0, x3
  43d448:	ldr	w22, [x0, #16]
  43d44c:	cbnz	w22, 43d478 <ferror@plt+0x3a6a8>
  43d450:	ldr	x0, [x0, #8]
  43d454:	ldr	w0, [x0]
  43d458:	cmp	w0, #0x2a
  43d45c:	b.eq	43d4b4 <ferror@plt+0x3a6e4>  // b.none
  43d460:	mov	x0, x19
  43d464:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43d468:	mov	w23, #0x1                   	// #1
  43d46c:	add	x1, x1, #0xdf3
  43d470:	bl	43b0ac <ferror@plt+0x382dc>
  43d474:	b	43d484 <ferror@plt+0x3a6b4>
  43d478:	ldr	x0, [x0]
  43d47c:	cbnz	x0, 43d448 <ferror@plt+0x3a678>
  43d480:	mov	w23, #0x0                   	// #0
  43d484:	mov	w22, #0x1                   	// #1
  43d488:	mov	x2, x20
  43d48c:	mov	w1, w21
  43d490:	mov	x0, x19
  43d494:	mov	w3, #0x0                   	// #0
  43d498:	bl	43d250 <ferror@plt+0x3a480>
  43d49c:	cbz	w23, 43d4ac <ferror@plt+0x3a6dc>
  43d4a0:	mov	x0, x19
  43d4a4:	mov	w1, #0x29                  	// #41
  43d4a8:	bl	43aff4 <ferror@plt+0x38224>
  43d4ac:	cbnz	w22, 43d3f8 <ferror@plt+0x3a628>
  43d4b0:	b	43d404 <ferror@plt+0x3a634>
  43d4b4:	mov	w23, #0x0                   	// #0
  43d4b8:	b	43d488 <ferror@plt+0x3a6b8>
  43d4bc:	ldr	w4, [x2]
  43d4c0:	cmp	w4, #0x32
  43d4c4:	b.ne	43d4d8 <ferror@plt+0x3a708>  // b.any
  43d4c8:	ldr	x1, [x2, #8]
  43d4cc:	ldrsw	x2, [x1, #16]
  43d4d0:	ldr	x1, [x1, #8]
  43d4d4:	b	43b038 <ferror@plt+0x38268>
  43d4d8:	b	43cecc <ferror@plt+0x3a0fc>
  43d4dc:	stp	x29, x30, [sp, #-48]!
  43d4e0:	mov	x29, sp
  43d4e4:	stp	x19, x20, [sp, #16]
  43d4e8:	mov	x19, x0
  43d4ec:	mov	x20, x2
  43d4f0:	stp	x21, x22, [sp, #32]
  43d4f4:	mov	w21, w1
  43d4f8:	ldr	w1, [x2]
  43d4fc:	cmp	w1, #0x31
  43d500:	b.hi	43d514 <ferror@plt+0x3a744>  // b.pmore
  43d504:	mov	x0, #0x43                  	// #67
  43d508:	movk	x0, #0x2, lsl #48
  43d50c:	lsr	x0, x0, x1
  43d510:	tbnz	w0, #0, 43d550 <ferror@plt+0x3a780>
  43d514:	mov	w22, #0x0                   	// #0
  43d518:	mov	x0, x19
  43d51c:	mov	w1, #0x28                  	// #40
  43d520:	bl	43aff4 <ferror@plt+0x38224>
  43d524:	mov	x2, x20
  43d528:	mov	w1, w21
  43d52c:	mov	x0, x19
  43d530:	bl	43cecc <ferror@plt+0x3a0fc>
  43d534:	cbnz	w22, 43d558 <ferror@plt+0x3a788>
  43d538:	mov	x0, x19
  43d53c:	mov	w1, #0x29                  	// #41
  43d540:	ldp	x19, x20, [sp, #16]
  43d544:	ldp	x21, x22, [sp, #32]
  43d548:	ldp	x29, x30, [sp], #48
  43d54c:	b	43aff4 <ferror@plt+0x38224>
  43d550:	mov	w22, #0x1                   	// #1
  43d554:	b	43d524 <ferror@plt+0x3a754>
  43d558:	ldp	x19, x20, [sp, #16]
  43d55c:	ldp	x21, x22, [sp, #32]
  43d560:	ldp	x29, x30, [sp], #48
  43d564:	ret
  43d568:	stp	x29, x30, [sp, #-64]!
  43d56c:	mov	x29, sp
  43d570:	stp	x19, x20, [sp, #16]
  43d574:	mov	x19, x0
  43d578:	mov	w20, w1
  43d57c:	ldr	x0, [x2, #8]
  43d580:	stp	x21, x22, [sp, #32]
  43d584:	stp	x23, x24, [sp, #48]
  43d588:	ldr	x0, [x0, #8]
  43d58c:	ldr	x0, [x0]
  43d590:	ldrb	w1, [x0]
  43d594:	cmp	w1, #0x66
  43d598:	b.ne	43d6e4 <ferror@plt+0x3a914>  // b.any
  43d59c:	ldr	x1, [x2, #16]
  43d5a0:	ldp	x22, x21, [x1, #8]
  43d5a4:	ldr	w1, [x21]
  43d5a8:	cmp	w1, #0x3c
  43d5ac:	b.ne	43d600 <ferror@plt+0x3a830>  // b.any
  43d5b0:	ldr	x23, [x21, #16]
  43d5b4:	ldr	x21, [x21, #8]
  43d5b8:	mov	w1, #0xffffffff            	// #-1
  43d5bc:	ldr	w24, [x19, #316]
  43d5c0:	str	w1, [x19, #316]
  43d5c4:	ldrb	w0, [x0, #1]
  43d5c8:	cmp	w0, #0x6c
  43d5cc:	b.eq	43d650 <ferror@plt+0x3a880>  // b.none
  43d5d0:	b.hi	43d608 <ferror@plt+0x3a838>  // b.pmore
  43d5d4:	cmp	w0, #0x4c
  43d5d8:	b.eq	43d690 <ferror@plt+0x3a8c0>  // b.none
  43d5dc:	cmp	w0, #0x52
  43d5e0:	b.eq	43d690 <ferror@plt+0x3a8c0>  // b.none
  43d5e4:	mov	w0, #0x1                   	// #1
  43d5e8:	str	w24, [x19, #316]
  43d5ec:	ldp	x19, x20, [sp, #16]
  43d5f0:	ldp	x21, x22, [sp, #32]
  43d5f4:	ldp	x23, x24, [sp, #48]
  43d5f8:	ldp	x29, x30, [sp], #64
  43d5fc:	ret
  43d600:	mov	x23, #0x0                   	// #0
  43d604:	b	43d5b8 <ferror@plt+0x3a7e8>
  43d608:	cmp	w0, #0x72
  43d60c:	b.ne	43d5e4 <ferror@plt+0x3a814>  // b.any
  43d610:	mov	x0, x19
  43d614:	mov	w1, #0x28                  	// #40
  43d618:	bl	43aff4 <ferror@plt+0x38224>
  43d61c:	mov	x2, x21
  43d620:	mov	w1, w20
  43d624:	mov	x0, x19
  43d628:	bl	43d4dc <ferror@plt+0x3a70c>
  43d62c:	mov	x2, x22
  43d630:	mov	w1, w20
  43d634:	mov	x0, x19
  43d638:	bl	43d4bc <ferror@plt+0x3a6ec>
  43d63c:	mov	x0, x19
  43d640:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43d644:	add	x1, x1, #0xec2
  43d648:	bl	43b0ac <ferror@plt+0x382dc>
  43d64c:	b	43d5e4 <ferror@plt+0x3a814>
  43d650:	mov	x0, x19
  43d654:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43d658:	add	x1, x1, #0xebd
  43d65c:	bl	43b0ac <ferror@plt+0x382dc>
  43d660:	mov	x2, x22
  43d664:	mov	w1, w20
  43d668:	mov	x0, x19
  43d66c:	bl	43d4bc <ferror@plt+0x3a6ec>
  43d670:	mov	x2, x21
  43d674:	mov	w1, w20
  43d678:	mov	x0, x19
  43d67c:	bl	43d4dc <ferror@plt+0x3a70c>
  43d680:	mov	x0, x19
  43d684:	mov	w1, #0x29                  	// #41
  43d688:	bl	43aff4 <ferror@plt+0x38224>
  43d68c:	b	43d5e4 <ferror@plt+0x3a814>
  43d690:	mov	x0, x19
  43d694:	mov	w1, #0x28                  	// #40
  43d698:	bl	43aff4 <ferror@plt+0x38224>
  43d69c:	mov	x2, x21
  43d6a0:	mov	w1, w20
  43d6a4:	mov	x0, x19
  43d6a8:	bl	43d4dc <ferror@plt+0x3a70c>
  43d6ac:	mov	x2, x22
  43d6b0:	mov	w1, w20
  43d6b4:	mov	x0, x19
  43d6b8:	bl	43d4bc <ferror@plt+0x3a6ec>
  43d6bc:	mov	x0, x19
  43d6c0:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43d6c4:	add	x1, x1, #0xebe
  43d6c8:	bl	43b0ac <ferror@plt+0x382dc>
  43d6cc:	mov	x2, x22
  43d6d0:	mov	w1, w20
  43d6d4:	mov	x0, x19
  43d6d8:	bl	43d4bc <ferror@plt+0x3a6ec>
  43d6dc:	mov	x2, x23
  43d6e0:	b	43d674 <ferror@plt+0x3a8a4>
  43d6e4:	mov	w0, #0x0                   	// #0
  43d6e8:	b	43d5ec <ferror@plt+0x3a81c>
  43d6ec:	cmp	x0, #0x0
  43d6f0:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  43d6f4:	b.eq	43d710 <ferror@plt+0x3a940>  // b.none
  43d6f8:	cmp	w2, #0x0
  43d6fc:	b.le	43d710 <ferror@plt+0x3a940>
  43d700:	stp	xzr, x1, [x0]
  43d704:	str	w2, [x0, #16]
  43d708:	mov	w0, #0x1                   	// #1
  43d70c:	ret
  43d710:	mov	w0, #0x0                   	// #0
  43d714:	b	43d70c <ferror@plt+0x3a93c>
  43d718:	mov	x4, x1
  43d71c:	mov	w5, w2
  43d720:	stp	x29, x30, [sp, #-16]!
  43d724:	mov	x29, sp
  43d728:	bl	43ada4 <ferror@plt+0x37fd4>
  43d72c:	mov	x3, x0
  43d730:	mov	w2, w5
  43d734:	mov	x1, x4
  43d738:	bl	43d6ec <ferror@plt+0x3a91c>
  43d73c:	cmp	w0, #0x0
  43d740:	csel	x0, x3, xzr, ne  // ne = any
  43d744:	ldp	x29, x30, [sp], #16
  43d748:	ret
  43d74c:	stp	x29, x30, [sp, #-48]!
  43d750:	mov	x29, sp
  43d754:	stp	x19, x20, [sp, #16]
  43d758:	mov	x19, x0
  43d75c:	add	x0, x0, #0x18
  43d760:	str	x21, [sp, #32]
  43d764:	bl	43b11c <ferror@plt+0x3834c>
  43d768:	cmp	w0, #0x0
  43d76c:	b.le	43d84c <ferror@plt+0x3aa7c>
  43d770:	mov	w20, w0
  43d774:	sxtw	x1, w0
  43d778:	ldr	x0, [x19, #8]
  43d77c:	ldr	x21, [x19, #24]
  43d780:	sub	x0, x0, x21
  43d784:	cmp	x0, w20, sxtw
  43d788:	b.lt	43d844 <ferror@plt+0x3aa74>  // b.tstop
  43d78c:	ldr	w2, [x19, #16]
  43d790:	add	x0, x21, x1
  43d794:	str	x0, [x19, #24]
  43d798:	tbz	w2, #2, 43d7b0 <ferror@plt+0x3a9e0>
  43d79c:	ldrb	w1, [x21, x1]
  43d7a0:	cmp	w1, #0x24
  43d7a4:	b.ne	43d7b0 <ferror@plt+0x3a9e0>  // b.any
  43d7a8:	add	x0, x0, #0x1
  43d7ac:	str	x0, [x19, #24]
  43d7b0:	cmp	w20, #0x9
  43d7b4:	b.le	43d838 <ferror@plt+0x3aa68>
  43d7b8:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43d7bc:	mov	x0, x21
  43d7c0:	add	x1, x1, #0xec7
  43d7c4:	mov	x2, #0x8                   	// #8
  43d7c8:	bl	402a90 <memcmp@plt>
  43d7cc:	cbnz	w0, 43d838 <ferror@plt+0x3aa68>
  43d7d0:	ldrb	w0, [x21, #8]
  43d7d4:	sub	w0, w0, #0x24
  43d7d8:	and	w0, w0, #0xff
  43d7dc:	cmp	w0, #0x3b
  43d7e0:	b.hi	43d838 <ferror@plt+0x3aa68>  // b.pmore
  43d7e4:	mov	x1, #0x401                 	// #1025
  43d7e8:	movk	x1, #0x800, lsl #48
  43d7ec:	lsr	x0, x1, x0
  43d7f0:	tbz	w0, #0, 43d838 <ferror@plt+0x3aa68>
  43d7f4:	ldrb	w0, [x21, #9]
  43d7f8:	cmp	w0, #0x4e
  43d7fc:	b.ne	43d838 <ferror@plt+0x3aa68>  // b.any
  43d800:	ldr	w0, [x19, #72]
  43d804:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43d808:	add	x1, x1, #0xed0
  43d80c:	mov	w2, #0x15                  	// #21
  43d810:	add	w0, w0, #0x16
  43d814:	sub	w20, w0, w20
  43d818:	str	w20, [x19, #72]
  43d81c:	mov	x0, x19
  43d820:	bl	43d718 <ferror@plt+0x3a948>
  43d824:	str	x0, [x19, #64]
  43d828:	ldp	x19, x20, [sp, #16]
  43d82c:	ldr	x21, [sp, #32]
  43d830:	ldp	x29, x30, [sp], #48
  43d834:	ret
  43d838:	mov	w2, w20
  43d83c:	mov	x1, x21
  43d840:	b	43d81c <ferror@plt+0x3aa4c>
  43d844:	mov	x0, #0x0                   	// #0
  43d848:	b	43d824 <ferror@plt+0x3aa54>
  43d84c:	mov	x0, #0x0                   	// #0
  43d850:	b	43d828 <ferror@plt+0x3aa58>
  43d854:	stp	x29, x30, [sp, #-48]!
  43d858:	mov	x29, sp
  43d85c:	str	x21, [sp, #32]
  43d860:	ldr	x21, [x0, #64]
  43d864:	stp	x19, x20, [sp, #16]
  43d868:	mov	x19, x0
  43d86c:	mov	x20, x1
  43d870:	ldr	x0, [x19, #24]
  43d874:	ldrb	w1, [x0]
  43d878:	cmp	w1, #0x42
  43d87c:	b.eq	43d898 <ferror@plt+0x3aac8>  // b.none
  43d880:	str	x21, [x19, #64]
  43d884:	mov	x0, x20
  43d888:	ldp	x19, x20, [sp, #16]
  43d88c:	ldr	x21, [sp, #32]
  43d890:	ldp	x29, x30, [sp], #48
  43d894:	ret
  43d898:	add	x0, x0, #0x1
  43d89c:	str	x0, [x19, #24]
  43d8a0:	mov	x0, x19
  43d8a4:	bl	43d74c <ferror@plt+0x3a97c>
  43d8a8:	mov	x3, x0
  43d8ac:	mov	x2, x20
  43d8b0:	mov	x0, x19
  43d8b4:	mov	w1, #0x4c                  	// #76
  43d8b8:	bl	43add8 <ferror@plt+0x38008>
  43d8bc:	mov	x20, x0
  43d8c0:	b	43d870 <ferror@plt+0x3aaa0>
  43d8c4:	stp	x29, x30, [sp, #-32]!
  43d8c8:	mov	x29, sp
  43d8cc:	ldr	x2, [x0, #24]
  43d8d0:	str	x19, [sp, #16]
  43d8d4:	mov	x19, x0
  43d8d8:	ldrb	w0, [x2]
  43d8dc:	cmp	w0, #0x53
  43d8e0:	b.ne	43da9c <ferror@plt+0x3accc>  // b.any
  43d8e4:	add	x0, x2, #0x1
  43d8e8:	str	x0, [x19, #24]
  43d8ec:	ldrb	w0, [x2, #1]
  43d8f0:	cbz	w0, 43d9c4 <ferror@plt+0x3abf4>
  43d8f4:	add	x0, x2, #0x2
  43d8f8:	str	x0, [x19, #24]
  43d8fc:	ldrb	w0, [x2, #1]
  43d900:	sub	w2, w0, #0x30
  43d904:	and	w2, w2, #0xff
  43d908:	cmp	w2, #0x2f
  43d90c:	b.hi	43d9c4 <ferror@plt+0x3abf4>  // b.pmore
  43d910:	mov	w3, #0xfffe03ff            	// #-130049
  43d914:	movk	x3, #0x87ff, lsl #32
  43d918:	lsr	x2, x3, x2
  43d91c:	tbz	w2, #0, 43d9c4 <ferror@plt+0x3abf4>
  43d920:	cmp	w0, #0x5f
  43d924:	b.ne	43d99c <ferror@plt+0x3abcc>  // b.any
  43d928:	mov	w0, #0x0                   	// #0
  43d92c:	ldr	w1, [x19, #56]
  43d930:	cmp	w1, w0
  43d934:	b.ls	43da9c <ferror@plt+0x3accc>  // b.plast
  43d938:	ldr	x1, [x19, #48]
  43d93c:	ldr	x1, [x1, w0, uxtw #3]
  43d940:	mov	x0, x1
  43d944:	ldr	x19, [sp, #16]
  43d948:	ldp	x29, x30, [sp], #32
  43d94c:	ret
  43d950:	mov	w2, w1
  43d954:	sub	w1, w0, #0x30
  43d958:	and	w1, w1, #0xff
  43d95c:	cmp	w1, #0x9
  43d960:	b.hi	43d9a8 <ferror@plt+0x3abd8>  // b.pmore
  43d964:	madd	w0, w2, w3, w0
  43d968:	sub	w1, w0, #0x30
  43d96c:	cmp	w2, w1
  43d970:	b.hi	43da9c <ferror@plt+0x3accc>  // b.pmore
  43d974:	ldr	x2, [x19, #24]
  43d978:	ldrb	w0, [x2]
  43d97c:	cbz	w0, 43d950 <ferror@plt+0x3ab80>
  43d980:	add	x0, x2, #0x1
  43d984:	str	x0, [x19, #24]
  43d988:	ldrb	w0, [x2]
  43d98c:	cmp	w0, #0x5f
  43d990:	b.ne	43d950 <ferror@plt+0x3ab80>  // b.any
  43d994:	add	w0, w1, #0x1
  43d998:	b	43d92c <ferror@plt+0x3ab5c>
  43d99c:	mov	w2, #0x0                   	// #0
  43d9a0:	mov	w3, #0x24                  	// #36
  43d9a4:	b	43d954 <ferror@plt+0x3ab84>
  43d9a8:	sub	w1, w0, #0x41
  43d9ac:	and	w1, w1, #0xff
  43d9b0:	cmp	w1, #0x19
  43d9b4:	b.hi	43da9c <ferror@plt+0x3accc>  // b.pmore
  43d9b8:	madd	w0, w2, w3, w0
  43d9bc:	sub	w1, w0, #0x37
  43d9c0:	b	43d96c <ferror@plt+0x3ab9c>
  43d9c4:	ldr	w5, [x19, #16]
  43d9c8:	and	w1, w1, #0x1
  43d9cc:	ands	w2, w5, #0x8
  43d9d0:	csel	w1, w1, wzr, eq  // eq = none
  43d9d4:	ubfx	x5, x5, #3, #1
  43d9d8:	cbz	w1, 43d9f4 <ferror@plt+0x3ac24>
  43d9dc:	ldr	x1, [x19, #24]
  43d9e0:	ldrb	w1, [x1]
  43d9e4:	sub	w1, w1, #0x43
  43d9e8:	and	w1, w1, #0xff
  43d9ec:	cmp	w1, #0x1
  43d9f0:	csinc	w5, w5, wzr, hi  // hi = pmore
  43d9f4:	adrp	x4, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43d9f8:	add	x4, x4, #0x18
  43d9fc:	add	x4, x4, #0x440
  43da00:	mov	x1, #0x7                   	// #7
  43da04:	ldrb	w2, [x4]
  43da08:	cmp	w2, w0
  43da0c:	b.ne	43dab0 <ferror@plt+0x3ace0>  // b.any
  43da10:	ldr	x6, [x4, #40]
  43da14:	cbz	x6, 43da3c <ferror@plt+0x3ac6c>
  43da18:	ldr	w7, [x4, #48]
  43da1c:	mov	x0, x19
  43da20:	bl	43ada4 <ferror@plt+0x37fd4>
  43da24:	cbz	x0, 43da38 <ferror@plt+0x3ac68>
  43da28:	mov	w1, #0x18                  	// #24
  43da2c:	str	w1, [x0]
  43da30:	str	x6, [x0, #8]
  43da34:	str	w7, [x0, #16]
  43da38:	str	x0, [x19, #64]
  43da3c:	cbz	w5, 43daa4 <ferror@plt+0x3acd4>
  43da40:	ldr	x5, [x4, #24]
  43da44:	ldr	w4, [x4, #32]
  43da48:	ldr	w0, [x19, #72]
  43da4c:	add	w0, w0, w4
  43da50:	str	w0, [x19, #72]
  43da54:	mov	x0, x19
  43da58:	bl	43ada4 <ferror@plt+0x37fd4>
  43da5c:	mov	x1, x0
  43da60:	cbz	x0, 43da74 <ferror@plt+0x3aca4>
  43da64:	mov	w0, #0x18                  	// #24
  43da68:	str	w0, [x1]
  43da6c:	str	x5, [x1, #8]
  43da70:	str	w4, [x1, #16]
  43da74:	ldr	x0, [x19, #24]
  43da78:	ldrb	w0, [x0]
  43da7c:	cmp	w0, #0x42
  43da80:	b.ne	43d940 <ferror@plt+0x3ab70>  // b.any
  43da84:	mov	x0, x19
  43da88:	bl	43d854 <ferror@plt+0x3aa84>
  43da8c:	mov	x1, x0
  43da90:	mov	x0, x19
  43da94:	bl	43aec8 <ferror@plt+0x380f8>
  43da98:	cbnz	w0, 43d940 <ferror@plt+0x3ab70>
  43da9c:	mov	x1, #0x0                   	// #0
  43daa0:	b	43d940 <ferror@plt+0x3ab70>
  43daa4:	ldr	x5, [x4, #8]
  43daa8:	ldr	w4, [x4, #16]
  43daac:	b	43da48 <ferror@plt+0x3ac78>
  43dab0:	add	x4, x4, #0x38
  43dab4:	subs	x1, x1, #0x1
  43dab8:	b.ne	43da04 <ferror@plt+0x3ac34>  // b.any
  43dabc:	b	43da9c <ferror@plt+0x3accc>
  43dac0:	cmp	x0, #0x0
  43dac4:	ccmp	w1, #0x0, #0x1, ne  // ne = any
  43dac8:	b.lt	43dae8 <ferror@plt+0x3ad18>  // b.tstop
  43dacc:	cbz	x2, 43dae8 <ferror@plt+0x3ad18>
  43dad0:	mov	x3, #0x33                  	// #51
  43dad4:	str	x3, [x0]
  43dad8:	str	w1, [x0, #8]
  43dadc:	str	x2, [x0, #16]
  43dae0:	mov	w0, #0x1                   	// #1
  43dae4:	ret
  43dae8:	mov	w0, #0x0                   	// #0
  43daec:	b	43dae4 <ferror@plt+0x3ad14>
  43daf0:	cmp	x0, #0x0
  43daf4:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  43daf8:	b.eq	43db20 <ferror@plt+0x3ad50>  // b.none
  43dafc:	sub	w3, w1, #0x1
  43db00:	cmp	w3, #0x4
  43db04:	b.hi	43db20 <ferror@plt+0x3ad50>  // b.pmore
  43db08:	mov	x3, #0x7                   	// #7
  43db0c:	str	x3, [x0]
  43db10:	str	w1, [x0, #8]
  43db14:	str	x2, [x0, #16]
  43db18:	mov	w0, #0x1                   	// #1
  43db1c:	ret
  43db20:	mov	w0, #0x0                   	// #0
  43db24:	b	43db1c <ferror@plt+0x3ad4c>
  43db28:	cmp	x0, #0x0
  43db2c:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  43db30:	b.eq	43db58 <ferror@plt+0x3ad88>  // b.none
  43db34:	sub	w3, w1, #0x1
  43db38:	cmp	w3, #0x4
  43db3c:	b.hi	43db58 <ferror@plt+0x3ad88>  // b.pmore
  43db40:	mov	x3, #0x8                   	// #8
  43db44:	str	x3, [x0]
  43db48:	str	w1, [x0, #8]
  43db4c:	str	x2, [x0, #16]
  43db50:	mov	w0, #0x1                   	// #1
  43db54:	ret
  43db58:	mov	w0, #0x0                   	// #0
  43db5c:	b	43db54 <ferror@plt+0x3ad84>
  43db60:	stp	x29, x30, [sp, #-80]!
  43db64:	mov	x29, sp
  43db68:	ldr	x3, [x0, #24]
  43db6c:	stp	x19, x20, [sp, #16]
  43db70:	mov	x19, x0
  43db74:	mov	x0, x3
  43db78:	stp	x21, x22, [sp, #32]
  43db7c:	str	x23, [sp, #48]
  43db80:	bl	43b364 <ferror@plt+0x38594>
  43db84:	cbz	w0, 43dc20 <ferror@plt+0x3ae50>
  43db88:	add	x1, sp, #0x48
  43db8c:	mov	x0, x19
  43db90:	mov	w2, #0x0                   	// #0
  43db94:	bl	43fdc4 <ferror@plt+0x3cff4>
  43db98:	mov	x20, x0
  43db9c:	cbnz	x0, 43dbb8 <ferror@plt+0x3ade8>
  43dba0:	mov	x0, #0x0                   	// #0
  43dba4:	ldp	x19, x20, [sp, #16]
  43dba8:	ldp	x21, x22, [sp, #32]
  43dbac:	ldr	x23, [sp, #48]
  43dbb0:	ldp	x29, x30, [sp], #80
  43dbb4:	ret
  43dbb8:	ldr	x0, [x19, #24]
  43dbbc:	ldrb	w0, [x0]
  43dbc0:	cmp	w0, #0x46
  43dbc4:	mov	x0, x19
  43dbc8:	b.ne	43dc18 <ferror@plt+0x3ae48>  // b.any
  43dbcc:	bl	43e868 <ferror@plt+0x3ba98>
  43dbd0:	str	x0, [x20]
  43dbd4:	ldr	x0, [x20]
  43dbd8:	cbz	x0, 43dba0 <ferror@plt+0x3add0>
  43dbdc:	ldr	w1, [x0]
  43dbe0:	sub	w1, w1, #0x1f
  43dbe4:	cmp	w1, #0x1
  43dbe8:	b.hi	43dc04 <ferror@plt+0x3ae34>  // b.pmore
  43dbec:	ldr	x2, [sp, #72]
  43dbf0:	ldr	x1, [x0, #8]
  43dbf4:	str	x2, [x0, #8]
  43dbf8:	ldr	x0, [x20]
  43dbfc:	str	x0, [sp, #72]
  43dc00:	str	x1, [x20]
  43dc04:	ldr	x1, [sp, #72]
  43dc08:	mov	x0, x19
  43dc0c:	bl	43aec8 <ferror@plt+0x380f8>
  43dc10:	cbnz	w0, 43dc88 <ferror@plt+0x3aeb8>
  43dc14:	b	43dba0 <ferror@plt+0x3add0>
  43dc18:	bl	43db60 <ferror@plt+0x3ad90>
  43dc1c:	b	43dbd0 <ferror@plt+0x3ae00>
  43dc20:	ldrb	w1, [x3]
  43dc24:	sub	w2, w1, #0x30
  43dc28:	cmp	w2, #0x4a
  43dc2c:	b.hi	43dba0 <ferror@plt+0x3add0>  // b.pmore
  43dc30:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x255fc>
  43dc34:	add	x0, x0, #0xf04
  43dc38:	ldrh	w0, [x0, w2, uxtw #1]
  43dc3c:	adr	x2, 43dc48 <ferror@plt+0x3ae78>
  43dc40:	add	x0, x2, w0, sxth #2
  43dc44:	br	x0
  43dc48:	sub	w1, w1, #0x61
  43dc4c:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43dc50:	add	x0, x0, #0x18
  43dc54:	sbfiz	x1, x1, #5, #32
  43dc58:	add	x1, x0, x1
  43dc5c:	mov	x0, x19
  43dc60:	bl	43ae48 <ferror@plt+0x38078>
  43dc64:	str	x0, [sp, #72]
  43dc68:	ldr	x1, [x0, #8]
  43dc6c:	ldr	w0, [x19, #72]
  43dc70:	ldr	w1, [x1, #8]
  43dc74:	add	w0, w0, w1
  43dc78:	str	w0, [x19, #72]
  43dc7c:	ldr	x0, [x19, #24]
  43dc80:	add	x0, x0, #0x1
  43dc84:	str	x0, [x19, #24]
  43dc88:	ldr	x0, [sp, #72]
  43dc8c:	b	43dba4 <ferror@plt+0x3add4>
  43dc90:	add	x3, x3, #0x1
  43dc94:	str	x3, [x19, #24]
  43dc98:	mov	x0, x19
  43dc9c:	bl	43d74c <ferror@plt+0x3a97c>
  43dca0:	mov	x2, x0
  43dca4:	mov	x3, #0x0                   	// #0
  43dca8:	mov	w1, #0x28                  	// #40
  43dcac:	mov	x0, x19
  43dcb0:	bl	43add8 <ferror@plt+0x38008>
  43dcb4:	b	43dcc0 <ferror@plt+0x3aef0>
  43dcb8:	mov	x0, x19
  43dcbc:	bl	43e868 <ferror@plt+0x3ba98>
  43dcc0:	str	x0, [sp, #72]
  43dcc4:	b	43dc04 <ferror@plt+0x3ae34>
  43dcc8:	mov	x0, x19
  43dccc:	bl	43e920 <ferror@plt+0x3bb50>
  43dcd0:	b	43dcc0 <ferror@plt+0x3aef0>
  43dcd4:	add	x1, x3, #0x1
  43dcd8:	str	x1, [x19, #24]
  43dcdc:	ldrb	w0, [x3, #1]
  43dce0:	cmp	w0, #0x5f
  43dce4:	b.eq	43dd40 <ferror@plt+0x3af70>  // b.none
  43dce8:	sub	w0, w0, #0x30
  43dcec:	and	w0, w0, #0xff
  43dcf0:	cmp	w0, #0x9
  43dcf4:	b.hi	43dd34 <ferror@plt+0x3af64>  // b.pmore
  43dcf8:	ldr	x0, [x19, #24]
  43dcfc:	add	x2, x0, #0x1
  43dd00:	str	x2, [x19, #24]
  43dd04:	ldrb	w0, [x0, #1]
  43dd08:	sub	w0, w0, #0x30
  43dd0c:	and	w0, w0, #0xff
  43dd10:	cmp	w0, #0x9
  43dd14:	b.ls	43dcf8 <ferror@plt+0x3af28>  // b.plast
  43dd18:	sub	w2, w2, w1
  43dd1c:	mov	x0, x19
  43dd20:	bl	43d718 <ferror@plt+0x3a948>
  43dd24:	mov	x20, x0
  43dd28:	cbnz	x0, 43dd44 <ferror@plt+0x3af74>
  43dd2c:	mov	x0, #0x0                   	// #0
  43dd30:	b	43dcc0 <ferror@plt+0x3aef0>
  43dd34:	mov	x0, x19
  43dd38:	bl	43fb68 <ferror@plt+0x3cd98>
  43dd3c:	b	43dd24 <ferror@plt+0x3af54>
  43dd40:	mov	x20, #0x0                   	// #0
  43dd44:	ldr	x0, [x19, #24]
  43dd48:	ldrb	w1, [x0]
  43dd4c:	cmp	w1, #0x5f
  43dd50:	b.ne	43dd2c <ferror@plt+0x3af5c>  // b.any
  43dd54:	add	x0, x0, #0x1
  43dd58:	str	x0, [x19, #24]
  43dd5c:	mov	x0, x19
  43dd60:	bl	43db60 <ferror@plt+0x3ad90>
  43dd64:	mov	x3, x0
  43dd68:	mov	x2, x20
  43dd6c:	mov	w1, #0x2a                  	// #42
  43dd70:	b	43dcac <ferror@plt+0x3aedc>
  43dd74:	add	x3, x3, #0x1
  43dd78:	str	x3, [x19, #24]
  43dd7c:	mov	x0, x19
  43dd80:	bl	43db60 <ferror@plt+0x3ad90>
  43dd84:	mov	x20, x0
  43dd88:	cbz	x0, 43dd2c <ferror@plt+0x3af5c>
  43dd8c:	mov	x0, x19
  43dd90:	bl	43db60 <ferror@plt+0x3ad90>
  43dd94:	mov	x3, x0
  43dd98:	cbz	x0, 43dd2c <ferror@plt+0x3af5c>
  43dd9c:	mov	x2, x20
  43dda0:	mov	w1, #0x2b                  	// #43
  43dda4:	b	43dcac <ferror@plt+0x3aedc>
  43dda8:	mov	x0, x19
  43ddac:	bl	43b264 <ferror@plt+0x38494>
  43ddb0:	ldr	x20, [x19, #24]
  43ddb4:	str	x0, [sp, #72]
  43ddb8:	mov	x1, x0
  43ddbc:	ldrb	w0, [x20]
  43ddc0:	cmp	w0, #0x49
  43ddc4:	b.ne	43dc04 <ferror@plt+0x3ae34>  // b.any
  43ddc8:	ldr	w0, [x19, #80]
  43ddcc:	cbnz	w0, 43ddf4 <ferror@plt+0x3b024>
  43ddd0:	mov	x0, x19
  43ddd4:	bl	43aec8 <ferror@plt+0x380f8>
  43ddd8:	cbz	w0, 43dba0 <ferror@plt+0x3add0>
  43dddc:	ldr	x20, [sp, #72]
  43dde0:	mov	x0, x19
  43dde4:	bl	43fce4 <ferror@plt+0x3cf14>
  43dde8:	mov	x3, x0
  43ddec:	mov	x2, x20
  43ddf0:	b	43de34 <ferror@plt+0x3b064>
  43ddf4:	ldr	w23, [x19, #40]
  43ddf8:	mov	x0, x19
  43ddfc:	ldr	w22, [x19, #56]
  43de00:	ldr	w21, [x19, #72]
  43de04:	bl	43fce4 <ferror@plt+0x3cf14>
  43de08:	mov	x4, x0
  43de0c:	ldr	x0, [x19, #24]
  43de10:	ldrb	w0, [x0]
  43de14:	cmp	w0, #0x49
  43de18:	b.ne	43de3c <ferror@plt+0x3b06c>  // b.any
  43de1c:	ldr	x1, [sp, #72]
  43de20:	mov	x0, x19
  43de24:	bl	43aec8 <ferror@plt+0x380f8>
  43de28:	cbz	w0, 43dba0 <ferror@plt+0x3add0>
  43de2c:	ldr	x2, [sp, #72]
  43de30:	mov	x3, x4
  43de34:	mov	w1, #0x4                   	// #4
  43de38:	b	43dcac <ferror@plt+0x3aedc>
  43de3c:	str	x20, [x19, #24]
  43de40:	str	w23, [x19, #40]
  43de44:	str	w22, [x19, #56]
  43de48:	str	w21, [x19, #72]
  43de4c:	b	43dc04 <ferror@plt+0x3ae34>
  43de50:	ldrb	w0, [x3, #1]
  43de54:	sub	w0, w0, #0x30
  43de58:	and	w0, w0, #0xff
  43de5c:	cmp	w0, #0x2f
  43de60:	b.hi	43de74 <ferror@plt+0x3b0a4>  // b.pmore
  43de64:	mov	w1, #0xfffe03ff            	// #-130049
  43de68:	movk	x1, #0x87ff, lsl #32
  43de6c:	lsr	x0, x1, x0
  43de70:	tbnz	w0, #0, 43de94 <ferror@plt+0x3b0c4>
  43de74:	mov	x0, x19
  43de78:	bl	43e920 <ferror@plt+0x3bb50>
  43de7c:	str	x0, [sp, #72]
  43de80:	cbz	x0, 43dc04 <ferror@plt+0x3ae34>
  43de84:	ldr	w0, [x0]
  43de88:	cmp	w0, #0x18
  43de8c:	b.ne	43dc04 <ferror@plt+0x3ae34>  // b.any
  43de90:	b	43dc88 <ferror@plt+0x3aeb8>
  43de94:	mov	x0, x19
  43de98:	mov	w1, #0x0                   	// #0
  43de9c:	bl	43d8c4 <ferror@plt+0x3aaf4>
  43dea0:	mov	x20, x0
  43dea4:	ldr	x0, [x19, #24]
  43dea8:	str	x20, [sp, #72]
  43deac:	ldrb	w0, [x0]
  43deb0:	cmp	w0, #0x49
  43deb4:	b.ne	43dc88 <ferror@plt+0x3aeb8>  // b.any
  43deb8:	b	43dde0 <ferror@plt+0x3b010>
  43debc:	add	x3, x3, #0x1
  43dec0:	str	x3, [x19, #24]
  43dec4:	mov	x0, x19
  43dec8:	bl	43db60 <ferror@plt+0x3ad90>
  43decc:	mov	x2, x0
  43ded0:	mov	x3, #0x0                   	// #0
  43ded4:	mov	w1, #0x24                  	// #36
  43ded8:	b	43dcac <ferror@plt+0x3aedc>
  43dedc:	add	x3, x3, #0x1
  43dee0:	str	x3, [x19, #24]
  43dee4:	mov	x0, x19
  43dee8:	bl	43db60 <ferror@plt+0x3ad90>
  43deec:	mov	x2, x0
  43def0:	mov	x3, #0x0                   	// #0
  43def4:	mov	w1, #0x22                  	// #34
  43def8:	b	43dcac <ferror@plt+0x3aedc>
  43defc:	add	x3, x3, #0x1
  43df00:	str	x3, [x19, #24]
  43df04:	mov	x0, x19
  43df08:	bl	43db60 <ferror@plt+0x3ad90>
  43df0c:	mov	x2, x0
  43df10:	mov	x3, #0x0                   	// #0
  43df14:	mov	w1, #0x23                  	// #35
  43df18:	b	43dcac <ferror@plt+0x3aedc>
  43df1c:	add	x3, x3, #0x1
  43df20:	str	x3, [x19, #24]
  43df24:	mov	x0, x19
  43df28:	bl	43db60 <ferror@plt+0x3ad90>
  43df2c:	mov	x2, x0
  43df30:	mov	x3, #0x0                   	// #0
  43df34:	mov	w1, #0x25                  	// #37
  43df38:	b	43dcac <ferror@plt+0x3aedc>
  43df3c:	add	x3, x3, #0x1
  43df40:	str	x3, [x19, #24]
  43df44:	mov	x0, x19
  43df48:	bl	43db60 <ferror@plt+0x3ad90>
  43df4c:	mov	x2, x0
  43df50:	mov	x3, #0x0                   	// #0
  43df54:	mov	w1, #0x26                  	// #38
  43df58:	b	43dcac <ferror@plt+0x3aedc>
  43df5c:	add	x3, x3, #0x1
  43df60:	str	x3, [x19, #24]
  43df64:	mov	x0, x19
  43df68:	bl	43d74c <ferror@plt+0x3a97c>
  43df6c:	mov	x20, x0
  43df70:	ldr	x0, [x19, #24]
  43df74:	str	x20, [sp, #72]
  43df78:	ldrb	w0, [x0]
  43df7c:	cmp	w0, #0x49
  43df80:	b.ne	43dfa4 <ferror@plt+0x3b1d4>  // b.any
  43df84:	mov	x0, x19
  43df88:	bl	43fce4 <ferror@plt+0x3cf14>
  43df8c:	mov	x2, x20
  43df90:	mov	x3, x0
  43df94:	mov	w1, #0x4                   	// #4
  43df98:	mov	x0, x19
  43df9c:	bl	43add8 <ferror@plt+0x38008>
  43dfa0:	str	x0, [sp, #72]
  43dfa4:	mov	x0, x19
  43dfa8:	bl	43db60 <ferror@plt+0x3ad90>
  43dfac:	mov	w1, #0x21                  	// #33
  43dfb0:	mov	x2, x0
  43dfb4:	ldr	x3, [sp, #72]
  43dfb8:	b	43dcac <ferror@plt+0x3aedc>
  43dfbc:	add	x0, x3, #0x1
  43dfc0:	str	x0, [x19, #24]
  43dfc4:	ldrb	w0, [x3, #1]
  43dfc8:	cbz	w0, 43dba0 <ferror@plt+0x3add0>
  43dfcc:	add	x0, x3, #0x2
  43dfd0:	str	x0, [x19, #24]
  43dfd4:	ldrb	w0, [x3, #1]
  43dfd8:	cmp	w0, #0x46
  43dfdc:	b.eq	43e134 <ferror@plt+0x3b364>  // b.none
  43dfe0:	sub	w0, w0, #0x54
  43dfe4:	and	w1, w0, #0xff
  43dfe8:	cmp	w1, #0x22
  43dfec:	b.hi	43dba0 <ferror@plt+0x3add0>  // b.pmore
  43dff0:	cmp	w0, #0x22
  43dff4:	b.hi	43dba0 <ferror@plt+0x3add0>  // b.pmore
  43dff8:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x255fc>
  43dffc:	add	x1, x1, #0xf9c
  43e000:	ldrh	w0, [x1, w0, uxtw #1]
  43e004:	adr	x1, 43e010 <ferror@plt+0x3b240>
  43e008:	add	x0, x1, w0, sxth #2
  43e00c:	br	x0
  43e010:	mov	x0, x19
  43e014:	bl	43fb68 <ferror@plt+0x3cd98>
  43e018:	mov	x3, #0x0                   	// #0
  43e01c:	mov	x2, x0
  43e020:	mov	w1, #0x43                  	// #67
  43e024:	mov	x0, x19
  43e028:	bl	43add8 <ferror@plt+0x38008>
  43e02c:	str	x0, [sp, #72]
  43e030:	cbz	x0, 43dc04 <ferror@plt+0x3ae34>
  43e034:	ldr	x0, [x19, #24]
  43e038:	ldrb	w1, [x0]
  43e03c:	cbnz	w1, 43e048 <ferror@plt+0x3b278>
  43e040:	str	xzr, [sp, #72]
  43e044:	b	43dc04 <ferror@plt+0x3ae34>
  43e048:	add	x1, x0, #0x1
  43e04c:	str	x1, [x19, #24]
  43e050:	ldrb	w0, [x0]
  43e054:	cmp	w0, #0x45
  43e058:	b.ne	43e040 <ferror@plt+0x3b270>  // b.any
  43e05c:	b	43dc04 <ferror@plt+0x3ae34>
  43e060:	mov	x0, x19
  43e064:	bl	43db60 <ferror@plt+0x3ad90>
  43e068:	mov	x3, #0x0                   	// #0
  43e06c:	mov	x2, x0
  43e070:	mov	w1, #0x4b                  	// #75
  43e074:	b	43dcac <ferror@plt+0x3aedc>
  43e078:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x255fc>
  43e07c:	add	x1, x1, #0xa2b
  43e080:	mov	w2, #0x4                   	// #4
  43e084:	mov	x0, x19
  43e088:	bl	43d718 <ferror@plt+0x3a948>
  43e08c:	str	x0, [sp, #72]
  43e090:	b	43dc88 <ferror@plt+0x3aeb8>
  43e094:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43e098:	mov	w2, #0xe                   	// #14
  43e09c:	add	x1, x1, #0xee6
  43e0a0:	b	43e084 <ferror@plt+0x3b2b4>
  43e0a4:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43e0a8:	add	x1, x1, #0x18
  43e0ac:	add	x1, x1, #0x340
  43e0b0:	mov	x0, x19
  43e0b4:	bl	43ae48 <ferror@plt+0x38078>
  43e0b8:	str	x0, [sp, #72]
  43e0bc:	ldr	x1, [x0, #8]
  43e0c0:	ldr	w0, [x19, #72]
  43e0c4:	ldr	w1, [x1, #8]
  43e0c8:	add	w0, w0, w1
  43e0cc:	str	w0, [x19, #72]
  43e0d0:	b	43dc88 <ferror@plt+0x3aeb8>
  43e0d4:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43e0d8:	add	x1, x1, #0x18
  43e0dc:	add	x1, x1, #0x360
  43e0e0:	b	43e0b0 <ferror@plt+0x3b2e0>
  43e0e4:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43e0e8:	add	x1, x1, #0x18
  43e0ec:	add	x1, x1, #0x380
  43e0f0:	b	43e0b0 <ferror@plt+0x3b2e0>
  43e0f4:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43e0f8:	add	x1, x1, #0x18
  43e0fc:	add	x1, x1, #0x3a0
  43e100:	b	43e0b0 <ferror@plt+0x3b2e0>
  43e104:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43e108:	add	x1, x1, #0x18
  43e10c:	add	x1, x1, #0x3c0
  43e110:	b	43e0b0 <ferror@plt+0x3b2e0>
  43e114:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43e118:	add	x1, x1, #0x18
  43e11c:	add	x1, x1, #0x3e0
  43e120:	b	43e0b0 <ferror@plt+0x3b2e0>
  43e124:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43e128:	add	x1, x1, #0x18
  43e12c:	add	x1, x1, #0x400
  43e130:	b	43e0b0 <ferror@plt+0x3b2e0>
  43e134:	mov	x0, x19
  43e138:	bl	43ada4 <ferror@plt+0x37fd4>
  43e13c:	mov	w1, #0x2c                  	// #44
  43e140:	str	x0, [sp, #72]
  43e144:	str	w1, [x0]
  43e148:	ldr	x1, [x19, #24]
  43e14c:	ldrb	w1, [x1]
  43e150:	sub	w1, w1, #0x30
  43e154:	and	w1, w1, #0xff
  43e158:	cmp	w1, #0x9
  43e15c:	cset	w2, ls  // ls = plast
  43e160:	strh	w2, [x0, #16]
  43e164:	b.hi	43e170 <ferror@plt+0x3b3a0>  // b.pmore
  43e168:	add	x0, x19, #0x18
  43e16c:	bl	43b11c <ferror@plt+0x3834c>
  43e170:	ldr	x20, [sp, #72]
  43e174:	mov	x0, x19
  43e178:	bl	43db60 <ferror@plt+0x3ad90>
  43e17c:	str	x0, [x20, #8]
  43e180:	ldr	x0, [sp, #72]
  43e184:	ldr	x0, [x0, #8]
  43e188:	cbz	x0, 43dba0 <ferror@plt+0x3add0>
  43e18c:	add	x0, x19, #0x18
  43e190:	bl	43b11c <ferror@plt+0x3834c>
  43e194:	ldr	x1, [x19, #24]
  43e198:	ldrb	w0, [x1]
  43e19c:	cbz	w0, 43e1ac <ferror@plt+0x3b3dc>
  43e1a0:	add	x0, x1, #0x1
  43e1a4:	str	x0, [x19, #24]
  43e1a8:	ldrb	w0, [x1]
  43e1ac:	cmp	w0, #0x73
  43e1b0:	ldr	x0, [sp, #72]
  43e1b4:	cset	w1, eq  // eq = none
  43e1b8:	strh	w1, [x0, #18]
  43e1bc:	b	43dc88 <ferror@plt+0x3aeb8>
  43e1c0:	ldrb	w0, [x3, #2]
  43e1c4:	cmp	w0, #0x5f
  43e1c8:	b.ne	43e224 <ferror@plt+0x3b454>  // b.any
  43e1cc:	add	x3, x3, #0x3
  43e1d0:	str	x3, [x19, #24]
  43e1d4:	mov	x0, x19
  43e1d8:	bl	43fb68 <ferror@plt+0x3cd98>
  43e1dc:	mov	x20, x0
  43e1e0:	cbz	x0, 43e21c <ferror@plt+0x3b44c>
  43e1e4:	ldr	x0, [x19, #24]
  43e1e8:	ldrb	w1, [x0]
  43e1ec:	cmp	w1, #0x5f
  43e1f0:	b.ne	43e230 <ferror@plt+0x3b460>  // b.any
  43e1f4:	add	x0, x0, #0x1
  43e1f8:	str	x0, [x19, #24]
  43e1fc:	mov	x0, x19
  43e200:	bl	43db60 <ferror@plt+0x3ad90>
  43e204:	mov	x3, x0
  43e208:	mov	x2, x20
  43e20c:	mov	x0, x19
  43e210:	mov	w1, #0x2d                  	// #45
  43e214:	bl	43add8 <ferror@plt+0x38008>
  43e218:	mov	x20, x0
  43e21c:	str	x20, [sp, #72]
  43e220:	b	43dc04 <ferror@plt+0x3ae34>
  43e224:	mov	x0, x19
  43e228:	bl	43b1a4 <ferror@plt+0x383d4>
  43e22c:	b	43e1dc <ferror@plt+0x3b40c>
  43e230:	mov	x20, #0x0                   	// #0
  43e234:	b	43e21c <ferror@plt+0x3b44c>
  43e238:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43e23c:	add	x1, x1, #0x18
  43e240:	add	x1, x1, #0x420
  43e244:	b	43e0b0 <ferror@plt+0x3b2e0>
  43e248:	stp	x29, x30, [sp, #-64]!
  43e24c:	mov	x29, sp
  43e250:	stp	x19, x20, [sp, #16]
  43e254:	mov	x19, x0
  43e258:	add	x20, sp, #0x38
  43e25c:	str	x21, [sp, #32]
  43e260:	mov	w21, #0x4f                  	// #79
  43e264:	str	xzr, [sp, #56]
  43e268:	ldr	x1, [x19, #24]
  43e26c:	ldrb	w0, [x1]
  43e270:	cmp	w0, #0x45
  43e274:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  43e278:	b.eq	43e2e0 <ferror@plt+0x3b510>  // b.none
  43e27c:	cmp	w0, #0x2e
  43e280:	b.eq	43e2e0 <ferror@plt+0x3b510>  // b.none
  43e284:	cmp	w0, #0x52
  43e288:	ccmp	w0, w21, #0x4, ne  // ne = any
  43e28c:	b.ne	43e29c <ferror@plt+0x3b4cc>  // b.any
  43e290:	ldrb	w0, [x1, #1]
  43e294:	cmp	w0, #0x45
  43e298:	b.eq	43e2e0 <ferror@plt+0x3b510>  // b.none
  43e29c:	mov	x0, x19
  43e2a0:	bl	43db60 <ferror@plt+0x3ad90>
  43e2a4:	mov	x2, x0
  43e2a8:	cbnz	x0, 43e2c0 <ferror@plt+0x3b4f0>
  43e2ac:	mov	x0, #0x0                   	// #0
  43e2b0:	ldp	x19, x20, [sp, #16]
  43e2b4:	ldr	x21, [sp, #32]
  43e2b8:	ldp	x29, x30, [sp], #64
  43e2bc:	ret
  43e2c0:	mov	x0, x19
  43e2c4:	mov	x3, #0x0                   	// #0
  43e2c8:	mov	w1, #0x2e                  	// #46
  43e2cc:	bl	43add8 <ferror@plt+0x38008>
  43e2d0:	str	x0, [x20]
  43e2d4:	cbz	x0, 43e2ac <ferror@plt+0x3b4dc>
  43e2d8:	add	x20, x0, #0x10
  43e2dc:	b	43e268 <ferror@plt+0x3b498>
  43e2e0:	ldr	x0, [sp, #56]
  43e2e4:	cbz	x0, 43e2ac <ferror@plt+0x3b4dc>
  43e2e8:	ldr	x1, [x0, #16]
  43e2ec:	cbnz	x1, 43e2b0 <ferror@plt+0x3b4e0>
  43e2f0:	ldr	x1, [x0, #8]
  43e2f4:	ldr	w2, [x1]
  43e2f8:	cmp	w2, #0x27
  43e2fc:	b.ne	43e2b0 <ferror@plt+0x3b4e0>  // b.any
  43e300:	ldr	x2, [x1, #8]
  43e304:	ldr	w1, [x2, #28]
  43e308:	cmp	w1, #0x9
  43e30c:	b.ne	43e2b0 <ferror@plt+0x3b4e0>  // b.any
  43e310:	ldr	w2, [x2, #8]
  43e314:	ldr	w1, [x19, #72]
  43e318:	sub	w1, w1, w2
  43e31c:	str	w1, [x19, #72]
  43e320:	str	xzr, [x0, #8]
  43e324:	b	43e2b0 <ferror@plt+0x3b4e0>
  43e328:	stp	x29, x30, [sp, #-32]!
  43e32c:	mov	x29, sp
  43e330:	stp	x19, x20, [sp, #16]
  43e334:	mov	x19, x0
  43e338:	ldr	x0, [x0, #24]
  43e33c:	ldrb	w2, [x0]
  43e340:	cbz	w2, 43e350 <ferror@plt+0x3b580>
  43e344:	add	x1, x0, #0x1
  43e348:	str	x1, [x19, #24]
  43e34c:	ldrb	w2, [x0]
  43e350:	ldr	x0, [x19, #24]
  43e354:	ldrb	w3, [x0]
  43e358:	cbz	w3, 43e414 <ferror@plt+0x3b644>
  43e35c:	add	x1, x0, #0x1
  43e360:	str	x1, [x19, #24]
  43e364:	cmp	w2, #0x76
  43e368:	ldrb	w3, [x0]
  43e36c:	b.ne	43e3bc <ferror@plt+0x3b5ec>  // b.any
  43e370:	sub	w20, w3, #0x30
  43e374:	and	w0, w20, #0xff
  43e378:	cmp	w0, #0x9
  43e37c:	b.hi	43e414 <ferror@plt+0x3b644>  // b.pmore
  43e380:	mov	x0, x19
  43e384:	bl	43d74c <ferror@plt+0x3a97c>
  43e388:	mov	x5, x0
  43e38c:	mov	x0, x19
  43e390:	bl	43ada4 <ferror@plt+0x37fd4>
  43e394:	mov	x4, x0
  43e398:	mov	x2, x5
  43e39c:	mov	w1, w20
  43e3a0:	bl	43dac0 <ferror@plt+0x3acf0>
  43e3a4:	cbnz	w0, 43e3ac <ferror@plt+0x3b5dc>
  43e3a8:	mov	x4, #0x0                   	// #0
  43e3ac:	mov	x0, x4
  43e3b0:	ldp	x19, x20, [sp, #16]
  43e3b4:	ldp	x29, x30, [sp], #32
  43e3b8:	ret
  43e3bc:	cmp	w2, #0x63
  43e3c0:	mov	w0, #0x76                  	// #118
  43e3c4:	ccmp	w3, w0, #0x0, eq  // eq = none
  43e3c8:	b.ne	43e414 <ferror@plt+0x3b644>  // b.any
  43e3cc:	ldp	w0, w20, [x19, #76]
  43e3d0:	cmp	w0, #0x0
  43e3d4:	cset	w0, eq  // eq = none
  43e3d8:	str	w0, [x19, #80]
  43e3dc:	mov	x0, x19
  43e3e0:	bl	43db60 <ferror@plt+0x3ad90>
  43e3e4:	mov	x2, x0
  43e3e8:	ldr	w0, [x19, #80]
  43e3ec:	mov	x3, #0x0                   	// #0
  43e3f0:	cbz	w0, 43e40c <ferror@plt+0x3b63c>
  43e3f4:	mov	w1, #0x35                  	// #53
  43e3f8:	mov	x0, x19
  43e3fc:	bl	43add8 <ferror@plt+0x38008>
  43e400:	mov	x4, x0
  43e404:	str	w20, [x19, #80]
  43e408:	b	43e3ac <ferror@plt+0x3b5dc>
  43e40c:	mov	w1, #0x34                  	// #52
  43e410:	b	43e3f8 <ferror@plt+0x3b628>
  43e414:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43e418:	add	x1, x1, #0x18
  43e41c:	add	x1, x1, #0x5c8
  43e420:	mov	w5, #0x43                  	// #67
  43e424:	mov	w4, #0x0                   	// #0
  43e428:	mov	w7, #0x2                   	// #2
  43e42c:	mov	w8, #0x18                  	// #24
  43e430:	sub	w0, w5, w4
  43e434:	sdiv	w0, w0, w7
  43e438:	add	w0, w0, w4
  43e43c:	smull	x6, w0, w8
  43e440:	add	x9, x1, x6
  43e444:	ldr	x6, [x1, x6]
  43e448:	ldrb	w10, [x6]
  43e44c:	cmp	w10, w2
  43e450:	b.ne	43e480 <ferror@plt+0x3b6b0>  // b.any
  43e454:	ldrb	w6, [x6, #1]
  43e458:	cmp	w6, w3
  43e45c:	b.ne	43e480 <ferror@plt+0x3b6b0>  // b.any
  43e460:	mov	x0, x19
  43e464:	bl	43ada4 <ferror@plt+0x37fd4>
  43e468:	mov	x4, x0
  43e46c:	cbz	x0, 43e3ac <ferror@plt+0x3b5dc>
  43e470:	mov	w0, #0x32                  	// #50
  43e474:	str	w0, [x4]
  43e478:	str	x9, [x4, #8]
  43e47c:	b	43e3ac <ferror@plt+0x3b5dc>
  43e480:	b.hi	43e48c <ferror@plt+0x3b6bc>  // b.pmore
  43e484:	add	w4, w0, #0x1
  43e488:	mov	w0, w5
  43e48c:	cmp	w4, w0
  43e490:	b.eq	43e3a8 <ferror@plt+0x3b5d8>  // b.none
  43e494:	mov	w5, w0
  43e498:	b	43e430 <ferror@plt+0x3b660>
  43e49c:	stp	x29, x30, [sp, #-48]!
  43e4a0:	mov	x29, sp
  43e4a4:	ldr	x3, [x0, #24]
  43e4a8:	stp	x19, x20, [sp, #16]
  43e4ac:	mov	x20, x0
  43e4b0:	str	x21, [sp, #32]
  43e4b4:	ldrb	w1, [x3]
  43e4b8:	sub	w2, w1, #0x30
  43e4bc:	and	w2, w2, #0xff
  43e4c0:	cmp	w2, #0x9
  43e4c4:	b.hi	43e4f8 <ferror@plt+0x3b728>  // b.pmore
  43e4c8:	bl	43d74c <ferror@plt+0x3a97c>
  43e4cc:	mov	x19, x0
  43e4d0:	ldr	x0, [x20, #24]
  43e4d4:	ldrb	w0, [x0]
  43e4d8:	cmp	w0, #0x42
  43e4dc:	b.ne	43e6e8 <ferror@plt+0x3b918>  // b.any
  43e4e0:	mov	x1, x19
  43e4e4:	mov	x0, x20
  43e4e8:	ldp	x19, x20, [sp, #16]
  43e4ec:	ldr	x21, [sp, #32]
  43e4f0:	ldp	x29, x30, [sp], #48
  43e4f4:	b	43d854 <ferror@plt+0x3aa84>
  43e4f8:	sub	w2, w1, #0x61
  43e4fc:	and	w2, w2, #0xff
  43e500:	cmp	w2, #0x19
  43e504:	b.hi	43e58c <ferror@plt+0x3b7bc>  // b.pmore
  43e508:	cmp	w1, #0x6f
  43e50c:	b.ne	43e524 <ferror@plt+0x3b754>  // b.any
  43e510:	ldrb	w0, [x3, #1]
  43e514:	cmp	w0, #0x6e
  43e518:	b.ne	43e524 <ferror@plt+0x3b754>  // b.any
  43e51c:	add	x3, x3, #0x2
  43e520:	str	x3, [x20, #24]
  43e524:	mov	x0, x20
  43e528:	bl	43e328 <ferror@plt+0x3b558>
  43e52c:	mov	x19, x0
  43e530:	cbz	x0, 43e5dc <ferror@plt+0x3b80c>
  43e534:	ldr	w0, [x0]
  43e538:	cmp	w0, #0x32
  43e53c:	b.ne	43e4d0 <ferror@plt+0x3b700>  // b.any
  43e540:	ldr	x2, [x19, #8]
  43e544:	ldr	w0, [x20, #72]
  43e548:	ldr	w1, [x2, #16]
  43e54c:	add	w0, w0, #0x7
  43e550:	add	w0, w0, w1
  43e554:	str	w0, [x20, #72]
  43e558:	ldr	x0, [x2]
  43e55c:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43e560:	add	x1, x1, #0xef5
  43e564:	bl	402ad0 <strcmp@plt>
  43e568:	cbnz	w0, 43e4d0 <ferror@plt+0x3b700>
  43e56c:	mov	x0, x20
  43e570:	bl	43d74c <ferror@plt+0x3a97c>
  43e574:	mov	x2, x19
  43e578:	mov	x3, x0
  43e57c:	mov	w1, #0x37                  	// #55
  43e580:	mov	x0, x20
  43e584:	bl	43add8 <ferror@plt+0x38008>
  43e588:	b	43e4cc <ferror@plt+0x3b6fc>
  43e58c:	sub	w2, w1, #0x43
  43e590:	and	w2, w2, #0xff
  43e594:	cmp	w2, #0x1
  43e598:	b.hi	43e6c8 <ferror@plt+0x3b8f8>  // b.pmore
  43e59c:	ldr	x5, [x0, #64]
  43e5a0:	cbz	x5, 43e5c8 <ferror@plt+0x3b7f8>
  43e5a4:	ldr	w0, [x5]
  43e5a8:	cbnz	w0, 43e5c0 <ferror@plt+0x3b7f0>
  43e5ac:	ldr	w1, [x5, #16]
  43e5b0:	ldr	w0, [x20, #72]
  43e5b4:	add	w0, w0, w1
  43e5b8:	str	w0, [x20, #72]
  43e5bc:	b	43e5c8 <ferror@plt+0x3b7f8>
  43e5c0:	cmp	w0, #0x18
  43e5c4:	b.eq	43e5ac <ferror@plt+0x3b7dc>  // b.none
  43e5c8:	ldrb	w0, [x3]
  43e5cc:	cmp	w0, #0x43
  43e5d0:	b.eq	43e5e4 <ferror@plt+0x3b814>  // b.none
  43e5d4:	cmp	w0, #0x44
  43e5d8:	b.eq	43e658 <ferror@plt+0x3b888>  // b.none
  43e5dc:	mov	x19, #0x0                   	// #0
  43e5e0:	b	43e4d0 <ferror@plt+0x3b700>
  43e5e4:	ldrb	w0, [x3, #1]
  43e5e8:	cmp	w0, #0x49
  43e5ec:	b.ne	43e650 <ferror@plt+0x3b880>  // b.any
  43e5f0:	add	x3, x3, #0x1
  43e5f4:	str	x3, [x20, #24]
  43e5f8:	mov	w3, #0x1                   	// #1
  43e5fc:	ldr	x0, [x20, #24]
  43e600:	ldrb	w1, [x0, #1]
  43e604:	sub	w2, w1, #0x31
  43e608:	and	w2, w2, #0xff
  43e60c:	cmp	w2, #0x4
  43e610:	b.hi	43e5dc <ferror@plt+0x3b80c>  // b.pmore
  43e614:	add	x0, x0, #0x2
  43e618:	str	x0, [x20, #24]
  43e61c:	sub	w21, w1, #0x30
  43e620:	cbz	w3, 43e62c <ferror@plt+0x3b85c>
  43e624:	mov	x0, x20
  43e628:	bl	43db60 <ferror@plt+0x3ad90>
  43e62c:	ldr	x4, [x20, #64]
  43e630:	mov	x0, x20
  43e634:	bl	43ada4 <ferror@plt+0x37fd4>
  43e638:	mov	x19, x0
  43e63c:	mov	x2, x4
  43e640:	mov	w1, w21
  43e644:	bl	43daf0 <ferror@plt+0x3ad20>
  43e648:	cbnz	w0, 43e4d0 <ferror@plt+0x3b700>
  43e64c:	b	43e5dc <ferror@plt+0x3b80c>
  43e650:	mov	w3, #0x0                   	// #0
  43e654:	b	43e5fc <ferror@plt+0x3b82c>
  43e658:	ldrb	w0, [x3, #1]
  43e65c:	sub	w0, w0, #0x30
  43e660:	cmp	w0, #0x5
  43e664:	b.hi	43e5dc <ferror@plt+0x3b80c>  // b.pmore
  43e668:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x255fc>
  43e66c:	add	x1, x1, #0xfe4
  43e670:	ldrb	w0, [x1, w0, uxtw]
  43e674:	adr	x1, 43e680 <ferror@plt+0x3b8b0>
  43e678:	add	x0, x1, w0, sxtb #2
  43e67c:	br	x0
  43e680:	mov	w4, #0x2                   	// #2
  43e684:	add	x3, x3, #0x2
  43e688:	str	x3, [x20, #24]
  43e68c:	mov	x0, x20
  43e690:	bl	43ada4 <ferror@plt+0x37fd4>
  43e694:	mov	x19, x0
  43e698:	mov	x2, x5
  43e69c:	mov	w1, w4
  43e6a0:	bl	43db28 <ferror@plt+0x3ad58>
  43e6a4:	b	43e648 <ferror@plt+0x3b878>
  43e6a8:	mov	w4, #0x3                   	// #3
  43e6ac:	b	43e684 <ferror@plt+0x3b8b4>
  43e6b0:	mov	w4, #0x4                   	// #4
  43e6b4:	b	43e684 <ferror@plt+0x3b8b4>
  43e6b8:	mov	w4, #0x5                   	// #5
  43e6bc:	b	43e684 <ferror@plt+0x3b8b4>
  43e6c0:	mov	w4, #0x1                   	// #1
  43e6c4:	b	43e684 <ferror@plt+0x3b8b4>
  43e6c8:	cmp	w1, #0x4c
  43e6cc:	b.ne	43e70c <ferror@plt+0x3b93c>  // b.any
  43e6d0:	add	x3, x3, #0x1
  43e6d4:	str	x3, [x0, #24]
  43e6d8:	bl	43d74c <ferror@plt+0x3a97c>
  43e6dc:	mov	x19, x0
  43e6e0:	cbnz	x0, 43e6fc <ferror@plt+0x3b92c>
  43e6e4:	mov	x19, #0x0                   	// #0
  43e6e8:	mov	x0, x19
  43e6ec:	ldp	x19, x20, [sp, #16]
  43e6f0:	ldr	x21, [sp, #32]
  43e6f4:	ldp	x29, x30, [sp], #48
  43e6f8:	ret
  43e6fc:	mov	x0, x20
  43e700:	bl	43b404 <ferror@plt+0x38634>
  43e704:	cbnz	w0, 43e4d0 <ferror@plt+0x3b700>
  43e708:	b	43e6e4 <ferror@plt+0x3b914>
  43e70c:	cmp	w1, #0x55
  43e710:	b.ne	43e6e4 <ferror@plt+0x3b914>  // b.any
  43e714:	ldrb	w1, [x3, #1]
  43e718:	cmp	w1, #0x6c
  43e71c:	b.eq	43e770 <ferror@plt+0x3b9a0>  // b.none
  43e720:	cmp	w1, #0x74
  43e724:	b.ne	43e6e4 <ferror@plt+0x3b914>  // b.any
  43e728:	add	x1, x3, #0x1
  43e72c:	str	x1, [x0, #24]
  43e730:	ldrb	w1, [x3, #1]
  43e734:	cmp	w1, #0x74
  43e738:	b.ne	43e5dc <ferror@plt+0x3b80c>  // b.any
  43e73c:	add	x3, x3, #0x2
  43e740:	str	x3, [x0, #24]
  43e744:	bl	43b1e0 <ferror@plt+0x38410>
  43e748:	sxtw	x4, w0
  43e74c:	tbnz	w4, #31, 43e5dc <ferror@plt+0x3b80c>
  43e750:	mov	x0, x20
  43e754:	bl	43ada4 <ferror@plt+0x37fd4>
  43e758:	mov	x19, x0
  43e75c:	cbz	x0, 43e7e0 <ferror@plt+0x3ba10>
  43e760:	mov	w0, #0x48                  	// #72
  43e764:	str	w0, [x19]
  43e768:	str	x4, [x19, #8]
  43e76c:	b	43e7e0 <ferror@plt+0x3ba10>
  43e770:	add	x1, x3, #0x1
  43e774:	str	x1, [x0, #24]
  43e778:	ldrb	w1, [x3, #1]
  43e77c:	cmp	w1, #0x6c
  43e780:	b.ne	43e5dc <ferror@plt+0x3b80c>  // b.any
  43e784:	add	x3, x3, #0x2
  43e788:	str	x3, [x0, #24]
  43e78c:	bl	43e248 <ferror@plt+0x3b478>
  43e790:	mov	x9, x0
  43e794:	cbz	x0, 43e5dc <ferror@plt+0x3b80c>
  43e798:	ldr	x0, [x20, #24]
  43e79c:	ldrb	w1, [x0]
  43e7a0:	cmp	w1, #0x45
  43e7a4:	b.ne	43e5dc <ferror@plt+0x3b80c>  // b.any
  43e7a8:	add	x0, x0, #0x1
  43e7ac:	str	x0, [x20, #24]
  43e7b0:	mov	x0, x20
  43e7b4:	bl	43b1e0 <ferror@plt+0x38410>
  43e7b8:	mov	w4, w0
  43e7bc:	tbnz	w0, #31, 43e5dc <ferror@plt+0x3b80c>
  43e7c0:	mov	x0, x20
  43e7c4:	bl	43ada4 <ferror@plt+0x37fd4>
  43e7c8:	mov	x19, x0
  43e7cc:	cbz	x0, 43e7e0 <ferror@plt+0x3ba10>
  43e7d0:	mov	w0, #0x46                  	// #70
  43e7d4:	str	w0, [x19]
  43e7d8:	str	x9, [x19, #8]
  43e7dc:	str	w4, [x19, #16]
  43e7e0:	mov	x1, x19
  43e7e4:	mov	x0, x20
  43e7e8:	bl	43aec8 <ferror@plt+0x380f8>
  43e7ec:	b	43e648 <ferror@plt+0x3b878>
  43e7f0:	stp	x29, x30, [sp, #-32]!
  43e7f4:	mov	x29, sp
  43e7f8:	stp	x19, x20, [sp, #16]
  43e7fc:	mov	x19, x0
  43e800:	ldr	x0, [x0, #24]
  43e804:	ldrb	w2, [x0]
  43e808:	cmp	w2, #0x4a
  43e80c:	b.ne	43e838 <ferror@plt+0x3ba68>  // b.any
  43e810:	add	x0, x0, #0x1
  43e814:	str	x0, [x19, #24]
  43e818:	mov	x0, x19
  43e81c:	bl	43db60 <ferror@plt+0x3ad90>
  43e820:	mov	x20, x0
  43e824:	cbnz	x0, 43e840 <ferror@plt+0x3ba70>
  43e828:	mov	x0, #0x0                   	// #0
  43e82c:	ldp	x19, x20, [sp, #16]
  43e830:	ldp	x29, x30, [sp], #32
  43e834:	ret
  43e838:	cbnz	w1, 43e818 <ferror@plt+0x3ba48>
  43e83c:	mov	x20, #0x0                   	// #0
  43e840:	mov	x0, x19
  43e844:	bl	43e248 <ferror@plt+0x3b478>
  43e848:	mov	x3, x0
  43e84c:	cbz	x0, 43e828 <ferror@plt+0x3ba58>
  43e850:	mov	x2, x20
  43e854:	mov	x0, x19
  43e858:	ldp	x19, x20, [sp, #16]
  43e85c:	mov	w1, #0x29                  	// #41
  43e860:	ldp	x29, x30, [sp], #32
  43e864:	b	43add8 <ferror@plt+0x38008>
  43e868:	stp	x29, x30, [sp, #-32]!
  43e86c:	mov	x29, sp
  43e870:	str	x19, [sp, #16]
  43e874:	mov	x19, x0
  43e878:	ldr	w0, [x0, #16]
  43e87c:	tbnz	w0, #18, 43e894 <ferror@plt+0x3bac4>
  43e880:	ldr	w0, [x19, #84]
  43e884:	cmp	w0, #0x800
  43e888:	b.hi	43e918 <ferror@plt+0x3bb48>  // b.pmore
  43e88c:	add	w0, w0, #0x1
  43e890:	str	w0, [x19, #84]
  43e894:	ldr	x0, [x19, #24]
  43e898:	ldrb	w1, [x0]
  43e89c:	cmp	w1, #0x46
  43e8a0:	b.eq	43e8c8 <ferror@plt+0x3baf8>  // b.none
  43e8a4:	mov	x0, #0x0                   	// #0
  43e8a8:	ldr	w1, [x19, #16]
  43e8ac:	tbnz	w1, #18, 43e8bc <ferror@plt+0x3baec>
  43e8b0:	ldr	w1, [x19, #84]
  43e8b4:	sub	w1, w1, #0x1
  43e8b8:	str	w1, [x19, #84]
  43e8bc:	ldr	x19, [sp, #16]
  43e8c0:	ldp	x29, x30, [sp], #32
  43e8c4:	ret
  43e8c8:	add	x1, x0, #0x1
  43e8cc:	str	x1, [x19, #24]
  43e8d0:	add	x0, x0, #0x2
  43e8d4:	ldurb	w2, [x0, #-1]
  43e8d8:	cmp	w2, #0x59
  43e8dc:	csel	x0, x0, x1, eq  // eq = none
  43e8e0:	str	x0, [x19, #24]
  43e8e4:	mov	w1, #0x1                   	// #1
  43e8e8:	mov	x0, x19
  43e8ec:	bl	43e7f0 <ferror@plt+0x3ba20>
  43e8f0:	mov	x1, x0
  43e8f4:	mov	x0, x19
  43e8f8:	bl	43ae70 <ferror@plt+0x380a0>
  43e8fc:	ldr	x1, [x19, #24]
  43e900:	ldrb	w2, [x1]
  43e904:	cmp	w2, #0x45
  43e908:	b.ne	43e8a4 <ferror@plt+0x3bad4>  // b.any
  43e90c:	add	x1, x1, #0x1
  43e910:	str	x1, [x19, #24]
  43e914:	b	43e8a8 <ferror@plt+0x3bad8>
  43e918:	mov	x0, #0x0                   	// #0
  43e91c:	b	43e8bc <ferror@plt+0x3baec>
  43e920:	stp	x29, x30, [sp, #-96]!
  43e924:	mov	x29, sp
  43e928:	ldr	x1, [x0, #24]
  43e92c:	stp	x19, x20, [sp, #16]
  43e930:	stp	x21, x22, [sp, #32]
  43e934:	stp	x23, x24, [sp, #48]
  43e938:	str	x25, [sp, #64]
  43e93c:	ldrb	w2, [x1]
  43e940:	cmp	w2, #0x55
  43e944:	b.eq	43ecac <ferror@plt+0x3bedc>  // b.none
  43e948:	mov	x19, x0
  43e94c:	b.hi	43e990 <ferror@plt+0x3bbc0>  // b.pmore
  43e950:	cmp	w2, #0x4e
  43e954:	b.eq	43ea34 <ferror@plt+0x3bc64>  // b.none
  43e958:	cmp	w2, #0x53
  43e95c:	b.eq	43ecb8 <ferror@plt+0x3bee8>  // b.none
  43e960:	mov	x0, x19
  43e964:	bl	43e49c <ferror@plt+0x3b6cc>
  43e968:	mov	x20, x0
  43e96c:	ldr	x0, [x19, #24]
  43e970:	ldrb	w0, [x0]
  43e974:	cmp	w0, #0x49
  43e978:	b.ne	43ec00 <ferror@plt+0x3be30>  // b.any
  43e97c:	mov	x1, x20
  43e980:	mov	x0, x19
  43e984:	bl	43aec8 <ferror@plt+0x380f8>
  43e988:	cbnz	w0, 43ece8 <ferror@plt+0x3bf18>
  43e98c:	b	43ea50 <ferror@plt+0x3bc80>
  43e990:	cmp	w2, #0x5a
  43e994:	b.ne	43e960 <ferror@plt+0x3bb90>  // b.any
  43e998:	add	x1, x1, #0x1
  43e99c:	str	x1, [x0, #24]
  43e9a0:	mov	w1, #0x0                   	// #0
  43e9a4:	bl	43ed50 <ferror@plt+0x3bf80>
  43e9a8:	mov	x20, x0
  43e9ac:	cbz	x0, 43ea50 <ferror@plt+0x3bc80>
  43e9b0:	ldr	x1, [x19, #24]
  43e9b4:	ldrb	w0, [x1]
  43e9b8:	cmp	w0, #0x45
  43e9bc:	b.ne	43ea50 <ferror@plt+0x3bc80>  // b.any
  43e9c0:	add	x0, x1, #0x1
  43e9c4:	str	x0, [x19, #24]
  43e9c8:	ldrb	w0, [x1, #1]
  43e9cc:	cmp	w0, #0x73
  43e9d0:	b.ne	43ec1c <ferror@plt+0x3be4c>  // b.any
  43e9d4:	add	x1, x1, #0x2
  43e9d8:	str	x1, [x19, #24]
  43e9dc:	mov	x0, x19
  43e9e0:	bl	43b404 <ferror@plt+0x38634>
  43e9e4:	cbz	w0, 43ea50 <ferror@plt+0x3bc80>
  43e9e8:	mov	x0, x19
  43e9ec:	mov	w2, #0xe                   	// #14
  43e9f0:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x215fc>
  43e9f4:	add	x1, x1, #0xc57
  43e9f8:	bl	43d718 <ferror@plt+0x3a948>
  43e9fc:	mov	x3, x0
  43ea00:	ldr	w0, [x20]
  43ea04:	cmp	w0, #0x3
  43ea08:	b.ne	43ea20 <ferror@plt+0x3bc50>  // b.any
  43ea0c:	ldr	x0, [x20, #16]
  43ea10:	ldr	w1, [x0]
  43ea14:	cmp	w1, #0x29
  43ea18:	b.ne	43ea20 <ferror@plt+0x3bc50>  // b.any
  43ea1c:	str	xzr, [x0, #8]
  43ea20:	mov	x2, x20
  43ea24:	mov	w1, #0x2                   	// #2
  43ea28:	mov	x0, x19
  43ea2c:	bl	43add8 <ferror@plt+0x38008>
  43ea30:	b	43ecb0 <ferror@plt+0x3bee0>
  43ea34:	add	x1, x1, #0x1
  43ea38:	str	x1, [x0, #24]
  43ea3c:	mov	w2, #0x1                   	// #1
  43ea40:	add	x1, sp, #0x58
  43ea44:	bl	43fdc4 <ferror@plt+0x3cff4>
  43ea48:	mov	x21, x0
  43ea4c:	cbnz	x0, 43ea58 <ferror@plt+0x3bc88>
  43ea50:	mov	x20, #0x0                   	// #0
  43ea54:	b	43ec00 <ferror@plt+0x3be30>
  43ea58:	mov	x24, #0x3ff                 	// #1023
  43ea5c:	mov	x0, x19
  43ea60:	mov	x1, #0x0                   	// #0
  43ea64:	movk	x24, #0x1008, lsl #16
  43ea68:	bl	43ae70 <ferror@plt+0x380a0>
  43ea6c:	mov	x22, x0
  43ea70:	mov	x25, #0x0                   	// #0
  43ea74:	mov	w23, #0x1                   	// #1
  43ea78:	movk	x24, #0x20, lsl #32
  43ea7c:	ldr	x1, [x19, #24]
  43ea80:	ldrb	w20, [x1]
  43ea84:	cbnz	w20, 43ea90 <ferror@plt+0x3bcc0>
  43ea88:	str	xzr, [x21]
  43ea8c:	b	43ea50 <ferror@plt+0x3bc80>
  43ea90:	cmp	w20, #0x44
  43ea94:	b.ne	43eae8 <ferror@plt+0x3bd18>  // b.any
  43ea98:	ldrb	w0, [x1, #1]
  43ea9c:	and	w0, w0, #0xffffffdf
  43eaa0:	and	w0, w0, #0xff
  43eaa4:	cmp	w0, #0x54
  43eaa8:	mov	x0, x19
  43eaac:	b.ne	43eae0 <ferror@plt+0x3bd10>  // b.any
  43eab0:	bl	43db60 <ferror@plt+0x3ad90>
  43eab4:	mov	x4, x0
  43eab8:	cbnz	x25, 43eb54 <ferror@plt+0x3bd84>
  43eabc:	ldr	x0, [x19, #24]
  43eac0:	ldrb	w0, [x0]
  43eac4:	cmp	w0, #0x45
  43eac8:	b.eq	43eb3c <ferror@plt+0x3bd6c>  // b.none
  43eacc:	mov	x1, x4
  43ead0:	mov	x0, x19
  43ead4:	bl	43aec8 <ferror@plt+0x380f8>
  43ead8:	cbnz	w0, 43eb3c <ferror@plt+0x3bd6c>
  43eadc:	b	43ea88 <ferror@plt+0x3bcb8>
  43eae0:	bl	43e49c <ferror@plt+0x3b6cc>
  43eae4:	b	43eab4 <ferror@plt+0x3bce4>
  43eae8:	sub	w0, w20, #0x30
  43eaec:	and	w2, w0, #0xff
  43eaf0:	cmp	w2, #0x26
  43eaf4:	lsr	x0, x24, x0
  43eaf8:	sub	w2, w20, #0x61
  43eafc:	mvn	x0, x0
  43eb00:	and	w2, w2, #0xff
  43eb04:	and	w0, w0, #0x1
  43eb08:	csel	w0, w0, w23, cc  // cc = lo, ul, last
  43eb0c:	cmp	w2, #0x19
  43eb10:	cset	w2, ls  // ls = plast
  43eb14:	eor	w0, w0, #0x1
  43eb18:	orr	w0, w2, w0
  43eb1c:	cbnz	w0, 43eb44 <ferror@plt+0x3bd74>
  43eb20:	cmp	w20, #0x53
  43eb24:	b.ne	43eb5c <ferror@plt+0x3bd8c>  // b.any
  43eb28:	mov	x0, x19
  43eb2c:	mov	w1, #0x1                   	// #1
  43eb30:	bl	43d8c4 <ferror@plt+0x3aaf4>
  43eb34:	mov	x4, x0
  43eb38:	cbnz	x25, 43eb54 <ferror@plt+0x3bd84>
  43eb3c:	mov	x25, x4
  43eb40:	b	43ea7c <ferror@plt+0x3bcac>
  43eb44:	mov	x0, x19
  43eb48:	bl	43e49c <ferror@plt+0x3b6cc>
  43eb4c:	mov	x4, x0
  43eb50:	cbz	x25, 43eb8c <ferror@plt+0x3bdbc>
  43eb54:	mov	w1, #0x1                   	// #1
  43eb58:	b	43eb78 <ferror@plt+0x3bda8>
  43eb5c:	cmp	w20, #0x49
  43eb60:	b.ne	43eb98 <ferror@plt+0x3bdc8>  // b.any
  43eb64:	cbz	x25, 43ea88 <ferror@plt+0x3bcb8>
  43eb68:	mov	x0, x19
  43eb6c:	bl	43fce4 <ferror@plt+0x3cf14>
  43eb70:	mov	x4, x0
  43eb74:	mov	w1, #0x4                   	// #4
  43eb78:	mov	x3, x4
  43eb7c:	mov	x2, x25
  43eb80:	mov	x0, x19
  43eb84:	bl	43add8 <ferror@plt+0x38008>
  43eb88:	mov	x4, x0
  43eb8c:	cmp	w20, #0x53
  43eb90:	b.ne	43eabc <ferror@plt+0x3bcec>  // b.any
  43eb94:	b	43eb3c <ferror@plt+0x3bd6c>
  43eb98:	cmp	w20, #0x54
  43eb9c:	b.ne	43ebac <ferror@plt+0x3bddc>  // b.any
  43eba0:	mov	x0, x19
  43eba4:	bl	43b264 <ferror@plt+0x38494>
  43eba8:	b	43eab4 <ferror@plt+0x3bce4>
  43ebac:	cmp	w20, #0x45
  43ebb0:	b.eq	43ebd0 <ferror@plt+0x3be00>  // b.none
  43ebb4:	cmp	w20, #0x4d
  43ebb8:	b.ne	43ea88 <ferror@plt+0x3bcb8>  // b.any
  43ebbc:	cbz	x25, 43ea88 <ferror@plt+0x3bcb8>
  43ebc0:	add	x1, x1, #0x1
  43ebc4:	mov	x4, x25
  43ebc8:	str	x1, [x19, #24]
  43ebcc:	b	43eb3c <ferror@plt+0x3bd6c>
  43ebd0:	str	x25, [x21]
  43ebd4:	cbz	x25, 43ea50 <ferror@plt+0x3bc80>
  43ebd8:	cbz	x22, 43ebe8 <ferror@plt+0x3be18>
  43ebdc:	ldr	x0, [sp, #88]
  43ebe0:	str	x0, [x22, #8]
  43ebe4:	str	x22, [sp, #88]
  43ebe8:	ldrb	w0, [x1]
  43ebec:	cmp	w0, #0x45
  43ebf0:	b.ne	43ea50 <ferror@plt+0x3bc80>  // b.any
  43ebf4:	ldr	x20, [sp, #88]
  43ebf8:	add	x1, x1, #0x1
  43ebfc:	str	x1, [x19, #24]
  43ec00:	mov	x0, x20
  43ec04:	ldp	x19, x20, [sp, #16]
  43ec08:	ldp	x21, x22, [sp, #32]
  43ec0c:	ldp	x23, x24, [sp, #48]
  43ec10:	ldr	x25, [sp, #64]
  43ec14:	ldp	x29, x30, [sp], #96
  43ec18:	ret
  43ec1c:	cmp	w0, #0x64
  43ec20:	b.ne	43ec5c <ferror@plt+0x3be8c>  // b.any
  43ec24:	add	x1, x1, #0x2
  43ec28:	str	x1, [x19, #24]
  43ec2c:	mov	x0, x19
  43ec30:	bl	43b1e0 <ferror@plt+0x38410>
  43ec34:	mov	w21, w0
  43ec38:	tbnz	w0, #31, 43ea50 <ferror@plt+0x3bc80>
  43ec3c:	mov	x0, x19
  43ec40:	bl	43e920 <ferror@plt+0x3bb50>
  43ec44:	mov	x10, x0
  43ec48:	cbnz	x0, 43ec64 <ferror@plt+0x3be94>
  43ec4c:	cmn	w21, #0x1
  43ec50:	b.ne	43ec88 <ferror@plt+0x3beb8>  // b.any
  43ec54:	mov	x3, x10
  43ec58:	b	43ea00 <ferror@plt+0x3bc30>
  43ec5c:	mov	w21, #0xffffffff            	// #-1
  43ec60:	b	43ec3c <ferror@plt+0x3be6c>
  43ec64:	ldr	w0, [x0]
  43ec68:	cmp	w0, #0x46
  43ec6c:	b.eq	43ec4c <ferror@plt+0x3be7c>  // b.none
  43ec70:	cmp	w0, #0x48
  43ec74:	b.eq	43ec4c <ferror@plt+0x3be7c>  // b.none
  43ec78:	mov	x0, x19
  43ec7c:	bl	43b404 <ferror@plt+0x38634>
  43ec80:	cbnz	w0, 43ec4c <ferror@plt+0x3be7c>
  43ec84:	b	43ea50 <ferror@plt+0x3bc80>
  43ec88:	mov	x0, x19
  43ec8c:	bl	43ada4 <ferror@plt+0x37fd4>
  43ec90:	mov	x3, x0
  43ec94:	cbz	x0, 43ea00 <ferror@plt+0x3bc30>
  43ec98:	mov	w0, #0x47                  	// #71
  43ec9c:	str	w0, [x3]
  43eca0:	str	x10, [x3, #8]
  43eca4:	str	w21, [x3, #16]
  43eca8:	b	43ea00 <ferror@plt+0x3bc30>
  43ecac:	bl	43e49c <ferror@plt+0x3b6cc>
  43ecb0:	mov	x20, x0
  43ecb4:	b	43ec00 <ferror@plt+0x3be30>
  43ecb8:	ldrb	w2, [x1, #1]
  43ecbc:	cmp	w2, #0x74
  43ecc0:	b.eq	43ed00 <ferror@plt+0x3bf30>  // b.none
  43ecc4:	mov	w1, #0x0                   	// #0
  43ecc8:	bl	43d8c4 <ferror@plt+0x3aaf4>
  43eccc:	mov	x20, x0
  43ecd0:	mov	w0, #0x1                   	// #1
  43ecd4:	ldr	x1, [x19, #24]
  43ecd8:	ldrb	w1, [x1]
  43ecdc:	cmp	w1, #0x49
  43ece0:	b.ne	43ec00 <ferror@plt+0x3be30>  // b.any
  43ece4:	cbz	w0, 43e97c <ferror@plt+0x3bbac>
  43ece8:	mov	x0, x19
  43ecec:	bl	43fce4 <ferror@plt+0x3cf14>
  43ecf0:	mov	x2, x20
  43ecf4:	mov	x3, x0
  43ecf8:	mov	w1, #0x4                   	// #4
  43ecfc:	b	43ea28 <ferror@plt+0x3bc58>
  43ed00:	add	x1, x1, #0x2
  43ed04:	str	x1, [x0, #24]
  43ed08:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43ed0c:	add	x1, x1, #0xef8
  43ed10:	mov	w2, #0x3                   	// #3
  43ed14:	bl	43d718 <ferror@plt+0x3a948>
  43ed18:	mov	x20, x0
  43ed1c:	mov	x0, x19
  43ed20:	bl	43e49c <ferror@plt+0x3b6cc>
  43ed24:	mov	x3, x0
  43ed28:	mov	x2, x20
  43ed2c:	mov	x0, x19
  43ed30:	mov	w1, #0x1                   	// #1
  43ed34:	bl	43add8 <ferror@plt+0x38008>
  43ed38:	mov	x20, x0
  43ed3c:	ldr	w0, [x19, #72]
  43ed40:	add	w0, w0, #0x3
  43ed44:	str	w0, [x19, #72]
  43ed48:	mov	w0, #0x0                   	// #0
  43ed4c:	b	43ecd4 <ferror@plt+0x3bf04>
  43ed50:	stp	x29, x30, [sp, #-48]!
  43ed54:	mov	w3, #0x54                  	// #84
  43ed58:	mov	x29, sp
  43ed5c:	ldr	x2, [x0, #24]
  43ed60:	stp	x19, x20, [sp, #16]
  43ed64:	mov	x19, x0
  43ed68:	str	x21, [sp, #32]
  43ed6c:	mov	w21, w1
  43ed70:	ldrb	w1, [x2]
  43ed74:	cmp	w1, #0x47
  43ed78:	ccmp	w1, w3, #0x4, ne  // ne = any
  43ed7c:	b.ne	43f1f8 <ferror@plt+0x3c428>  // b.any
  43ed80:	ldr	w3, [x0, #72]
  43ed84:	add	w1, w3, #0x14
  43ed88:	str	w1, [x0, #72]
  43ed8c:	ldrb	w1, [x2]
  43ed90:	cmp	w1, #0x54
  43ed94:	b.ne	43edc0 <ferror@plt+0x3bff0>  // b.any
  43ed98:	add	x1, x2, #0x1
  43ed9c:	str	x1, [x0, #24]
  43eda0:	ldrb	w1, [x2, #1]
  43eda4:	cbnz	w1, 43ee20 <ferror@plt+0x3c050>
  43eda8:	mov	x20, #0x0                   	// #0
  43edac:	mov	x0, x20
  43edb0:	ldp	x19, x20, [sp, #16]
  43edb4:	ldr	x21, [sp, #32]
  43edb8:	ldp	x29, x30, [sp], #48
  43edbc:	ret
  43edc0:	cmp	w1, #0x47
  43edc4:	b.ne	43eda8 <ferror@plt+0x3bfd8>  // b.any
  43edc8:	add	x1, x2, #0x1
  43edcc:	str	x1, [x0, #24]
  43edd0:	ldrb	w1, [x2, #1]
  43edd4:	cbz	w1, 43eda8 <ferror@plt+0x3bfd8>
  43edd8:	add	x1, x2, #0x2
  43eddc:	str	x1, [x0, #24]
  43ede0:	ldrb	w1, [x2, #1]
  43ede4:	cmp	w1, #0x54
  43ede8:	b.eq	43f144 <ferror@plt+0x3c374>  // b.none
  43edec:	b.hi	43f044 <ferror@plt+0x3c274>  // b.pmore
  43edf0:	cmp	w1, #0x41
  43edf4:	b.eq	43f12c <ferror@plt+0x3c35c>  // b.none
  43edf8:	cmp	w1, #0x52
  43edfc:	b.ne	43eda8 <ferror@plt+0x3bfd8>  // b.any
  43ee00:	bl	43e920 <ferror@plt+0x3bb50>
  43ee04:	mov	x9, x0
  43ee08:	mov	x0, x19
  43ee0c:	bl	43b1a4 <ferror@plt+0x383d4>
  43ee10:	mov	x3, x0
  43ee14:	mov	x2, x9
  43ee18:	mov	w1, #0x16                  	// #22
  43ee1c:	b	43eecc <ferror@plt+0x3c0fc>
  43ee20:	add	x1, x2, #0x2
  43ee24:	str	x1, [x0, #24]
  43ee28:	ldrb	w1, [x2, #1]
  43ee2c:	cmp	w1, #0x57
  43ee30:	b.hi	43ee60 <ferror@plt+0x3c090>  // b.pmore
  43ee34:	cmp	w1, #0x40
  43ee38:	b.ls	43eda8 <ferror@plt+0x3bfd8>  // b.plast
  43ee3c:	sub	w1, w1, #0x41
  43ee40:	cmp	w1, #0x16
  43ee44:	b.hi	43eda8 <ferror@plt+0x3bfd8>  // b.pmore
  43ee48:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x255fc>
  43ee4c:	add	x0, x0, #0xfec
  43ee50:	ldrb	w0, [x0, w1, uxtw]
  43ee54:	adr	x1, 43ee60 <ferror@plt+0x3c090>
  43ee58:	add	x0, x1, w0, sxtb #2
  43ee5c:	br	x0
  43ee60:	cmp	w1, #0x68
  43ee64:	b.eq	43ef30 <ferror@plt+0x3c160>  // b.none
  43ee68:	cmp	w1, #0x76
  43ee6c:	b.eq	43ef54 <ferror@plt+0x3c184>  // b.none
  43ee70:	cmp	w1, #0x63
  43ee74:	b.ne	43eda8 <ferror@plt+0x3bfd8>  // b.any
  43ee78:	mov	w1, #0x0                   	// #0
  43ee7c:	bl	43b2c4 <ferror@plt+0x384f4>
  43ee80:	cbz	w0, 43eda8 <ferror@plt+0x3bfd8>
  43ee84:	mov	x0, x19
  43ee88:	mov	w1, #0x0                   	// #0
  43ee8c:	bl	43b2c4 <ferror@plt+0x384f4>
  43ee90:	cbz	w0, 43eda8 <ferror@plt+0x3bfd8>
  43ee94:	mov	w1, #0x0                   	// #0
  43ee98:	mov	x0, x19
  43ee9c:	bl	43ed50 <ferror@plt+0x3bf80>
  43eea0:	mov	x2, x0
  43eea4:	mov	x3, #0x0                   	// #0
  43eea8:	mov	w1, #0x11                  	// #17
  43eeac:	b	43eecc <ferror@plt+0x3c0fc>
  43eeb0:	add	w3, w3, #0xf
  43eeb4:	str	w3, [x19, #72]
  43eeb8:	mov	x0, x19
  43eebc:	bl	43db60 <ferror@plt+0x3ad90>
  43eec0:	mov	x2, x0
  43eec4:	mov	x3, #0x0                   	// #0
  43eec8:	mov	w1, #0x9                   	// #9
  43eecc:	mov	x0, x19
  43eed0:	ldp	x19, x20, [sp, #16]
  43eed4:	ldr	x21, [sp, #32]
  43eed8:	ldp	x29, x30, [sp], #48
  43eedc:	b	43add8 <ferror@plt+0x38008>
  43eee0:	add	w3, w3, #0xa
  43eee4:	str	w3, [x19, #72]
  43eee8:	mov	x0, x19
  43eeec:	bl	43db60 <ferror@plt+0x3ad90>
  43eef0:	mov	x2, x0
  43eef4:	mov	x3, #0x0                   	// #0
  43eef8:	mov	w1, #0xa                   	// #10
  43eefc:	b	43eecc <ferror@plt+0x3c0fc>
  43ef00:	mov	x0, x19
  43ef04:	bl	43db60 <ferror@plt+0x3ad90>
  43ef08:	mov	x3, #0x0                   	// #0
  43ef0c:	mov	x2, x0
  43ef10:	mov	w1, #0xc                   	// #12
  43ef14:	b	43eecc <ferror@plt+0x3c0fc>
  43ef18:	mov	x0, x19
  43ef1c:	bl	43db60 <ferror@plt+0x3ad90>
  43ef20:	mov	x3, #0x0                   	// #0
  43ef24:	mov	x2, x0
  43ef28:	mov	w1, #0xd                   	// #13
  43ef2c:	b	43eecc <ferror@plt+0x3c0fc>
  43ef30:	bl	43b2c4 <ferror@plt+0x384f4>
  43ef34:	cbz	w0, 43eda8 <ferror@plt+0x3bfd8>
  43ef38:	mov	w1, #0x0                   	// #0
  43ef3c:	mov	x0, x19
  43ef40:	bl	43ed50 <ferror@plt+0x3bf80>
  43ef44:	mov	x2, x0
  43ef48:	mov	x3, #0x0                   	// #0
  43ef4c:	mov	w1, #0xf                   	// #15
  43ef50:	b	43eecc <ferror@plt+0x3c0fc>
  43ef54:	bl	43b2c4 <ferror@plt+0x384f4>
  43ef58:	cbz	w0, 43eda8 <ferror@plt+0x3bfd8>
  43ef5c:	mov	w1, #0x0                   	// #0
  43ef60:	mov	x0, x19
  43ef64:	bl	43ed50 <ferror@plt+0x3bf80>
  43ef68:	mov	x2, x0
  43ef6c:	mov	x3, #0x0                   	// #0
  43ef70:	mov	w1, #0x10                  	// #16
  43ef74:	b	43eecc <ferror@plt+0x3c0fc>
  43ef78:	mov	x0, x19
  43ef7c:	bl	43db60 <ferror@plt+0x3ad90>
  43ef80:	mov	x20, x0
  43ef84:	add	x0, x19, #0x18
  43ef88:	bl	43b11c <ferror@plt+0x3834c>
  43ef8c:	tbnz	w0, #31, 43eda8 <ferror@plt+0x3bfd8>
  43ef90:	ldr	x1, [x19, #24]
  43ef94:	ldrb	w0, [x1]
  43ef98:	cmp	w0, #0x5f
  43ef9c:	b.ne	43eda8 <ferror@plt+0x3bfd8>  // b.any
  43efa0:	add	x1, x1, #0x1
  43efa4:	str	x1, [x19, #24]
  43efa8:	mov	x0, x19
  43efac:	bl	43db60 <ferror@plt+0x3ad90>
  43efb0:	mov	x2, x0
  43efb4:	ldr	w1, [x19, #72]
  43efb8:	mov	x3, x20
  43efbc:	add	w1, w1, #0x5
  43efc0:	str	w1, [x19, #72]
  43efc4:	mov	w1, #0xb                   	// #11
  43efc8:	b	43eecc <ferror@plt+0x3c0fc>
  43efcc:	mov	x0, x19
  43efd0:	bl	43db60 <ferror@plt+0x3ad90>
  43efd4:	mov	x3, #0x0                   	// #0
  43efd8:	mov	x2, x0
  43efdc:	mov	w1, #0xe                   	// #14
  43efe0:	b	43eecc <ferror@plt+0x3c0fc>
  43efe4:	mov	x0, x19
  43efe8:	bl	43db60 <ferror@plt+0x3ad90>
  43efec:	mov	x3, #0x0                   	// #0
  43eff0:	mov	x2, x0
  43eff4:	mov	w1, #0x12                  	// #18
  43eff8:	b	43eecc <ferror@plt+0x3c0fc>
  43effc:	mov	x0, x19
  43f000:	bl	43e920 <ferror@plt+0x3bb50>
  43f004:	mov	x3, #0x0                   	// #0
  43f008:	mov	x2, x0
  43f00c:	mov	w1, #0x14                  	// #20
  43f010:	b	43eecc <ferror@plt+0x3c0fc>
  43f014:	mov	x0, x19
  43f018:	bl	43e920 <ferror@plt+0x3bb50>
  43f01c:	mov	x3, #0x0                   	// #0
  43f020:	mov	x2, x0
  43f024:	mov	w1, #0x15                  	// #21
  43f028:	b	43eecc <ferror@plt+0x3c0fc>
  43f02c:	mov	x0, x19
  43f030:	bl	43fb98 <ferror@plt+0x3cdc8>
  43f034:	mov	x3, #0x0                   	// #0
  43f038:	mov	x2, x0
  43f03c:	mov	w1, #0x30                  	// #48
  43f040:	b	43eecc <ferror@plt+0x3c0fc>
  43f044:	cmp	w1, #0x56
  43f048:	b.eq	43f118 <ferror@plt+0x3c348>  // b.none
  43f04c:	cmp	w1, #0x72
  43f050:	b.ne	43eda8 <ferror@plt+0x3bfd8>  // b.any
  43f054:	add	x0, x0, #0x18
  43f058:	bl	43b11c <ferror@plt+0x3834c>
  43f05c:	cmp	w0, #0x1
  43f060:	b.le	43eda8 <ferror@plt+0x3bfd8>
  43f064:	ldr	x1, [x19, #24]
  43f068:	ldrb	w2, [x1]
  43f06c:	cbz	w2, 43eda8 <ferror@plt+0x3bfd8>
  43f070:	add	x7, x1, #0x1
  43f074:	str	x7, [x19, #24]
  43f078:	ldrb	w1, [x1]
  43f07c:	cmp	w1, #0x5f
  43f080:	b.ne	43eda8 <ferror@plt+0x3bfd8>  // b.any
  43f084:	sub	w8, w0, #0x1
  43f088:	mov	x9, #0x0                   	// #0
  43f08c:	mov	w10, #0x41                  	// #65
  43f090:	ldrb	w0, [x7]
  43f094:	cbz	w0, 43eda8 <ferror@plt+0x3bfd8>
  43f098:	cmp	w0, #0x24
  43f09c:	b.ne	43f1ac <ferror@plt+0x3c3dc>  // b.any
  43f0a0:	ldrb	w4, [x7, #1]
  43f0a4:	cmp	w4, #0x53
  43f0a8:	b.eq	43f19c <ferror@plt+0x3c3cc>  // b.none
  43f0ac:	cmp	w4, #0x5f
  43f0b0:	b.eq	43f1a4 <ferror@plt+0x3c3d4>  // b.none
  43f0b4:	cmp	w4, #0x24
  43f0b8:	b.ne	43eda8 <ferror@plt+0x3bfd8>  // b.any
  43f0bc:	mov	x0, x19
  43f0c0:	bl	43ada4 <ferror@plt+0x37fd4>
  43f0c4:	cbz	x0, 43f0d0 <ferror@plt+0x3c300>
  43f0c8:	str	w10, [x0]
  43f0cc:	str	w4, [x0, #8]
  43f0d0:	ldr	x7, [x19, #24]
  43f0d4:	sub	w8, w8, #0x2
  43f0d8:	add	x7, x7, #0x2
  43f0dc:	str	x7, [x19, #24]
  43f0e0:	cbz	x0, 43eda8 <ferror@plt+0x3bfd8>
  43f0e4:	cbz	x9, 43f100 <ferror@plt+0x3c330>
  43f0e8:	mov	x3, x0
  43f0ec:	mov	x2, x9
  43f0f0:	mov	x0, x19
  43f0f4:	mov	w1, #0x40                  	// #64
  43f0f8:	bl	43add8 <ferror@plt+0x38008>
  43f0fc:	cbz	x0, 43eda8 <ferror@plt+0x3bfd8>
  43f100:	cmp	w8, #0x0
  43f104:	b.gt	43f194 <ferror@plt+0x3c3c4>
  43f108:	mov	x2, x0
  43f10c:	mov	x3, #0x0                   	// #0
  43f110:	mov	w1, #0x3f                  	// #63
  43f114:	b	43eecc <ferror@plt+0x3c0fc>
  43f118:	bl	43e920 <ferror@plt+0x3bb50>
  43f11c:	mov	x2, x0
  43f120:	mov	x3, #0x0                   	// #0
  43f124:	mov	w1, #0x13                  	// #19
  43f128:	b	43eecc <ferror@plt+0x3c0fc>
  43f12c:	mov	w1, #0x0                   	// #0
  43f130:	bl	43ed50 <ferror@plt+0x3bf80>
  43f134:	mov	x3, #0x0                   	// #0
  43f138:	mov	x2, x0
  43f13c:	mov	w1, #0x17                  	// #23
  43f140:	b	43eecc <ferror@plt+0x3c0fc>
  43f144:	ldrb	w1, [x2, #2]
  43f148:	cbz	w1, 43f178 <ferror@plt+0x3c3a8>
  43f14c:	add	x1, x2, #0x3
  43f150:	str	x1, [x0, #24]
  43f154:	ldrb	w1, [x2, #2]
  43f158:	cmp	w1, #0x6e
  43f15c:	b.ne	43f178 <ferror@plt+0x3c3a8>  // b.any
  43f160:	mov	w1, #0x0                   	// #0
  43f164:	bl	43ed50 <ferror@plt+0x3bf80>
  43f168:	mov	x3, #0x0                   	// #0
  43f16c:	mov	x2, x0
  43f170:	mov	w1, #0x4a                  	// #74
  43f174:	b	43eecc <ferror@plt+0x3c0fc>
  43f178:	mov	w1, #0x0                   	// #0
  43f17c:	mov	x0, x19
  43f180:	bl	43ed50 <ferror@plt+0x3bf80>
  43f184:	mov	x2, x0
  43f188:	mov	x3, #0x0                   	// #0
  43f18c:	mov	w1, #0x49                  	// #73
  43f190:	b	43eecc <ferror@plt+0x3c0fc>
  43f194:	mov	x9, x0
  43f198:	b	43f090 <ferror@plt+0x3c2c0>
  43f19c:	mov	w4, #0x2f                  	// #47
  43f1a0:	b	43f0bc <ferror@plt+0x3c2ec>
  43f1a4:	mov	w4, #0x2e                  	// #46
  43f1a8:	b	43f0bc <ferror@plt+0x3c2ec>
  43f1ac:	mov	x0, #0x0                   	// #0
  43f1b0:	ldrb	w1, [x7, x0]
  43f1b4:	mov	w6, w0
  43f1b8:	cbz	w1, 43f1d4 <ferror@plt+0x3c404>
  43f1bc:	cmp	w1, #0x24
  43f1c0:	b.eq	43f1d4 <ferror@plt+0x3c404>  // b.none
  43f1c4:	add	x0, x0, #0x1
  43f1c8:	add	w6, w6, #0x1
  43f1cc:	cmp	w8, w0
  43f1d0:	b.gt	43f1b0 <ferror@plt+0x3c3e0>
  43f1d4:	mov	x1, x7
  43f1d8:	mov	w2, w6
  43f1dc:	mov	x0, x19
  43f1e0:	bl	43d718 <ferror@plt+0x3a948>
  43f1e4:	ldr	x7, [x19, #24]
  43f1e8:	sub	w8, w8, w6
  43f1ec:	add	x7, x7, w6, sxtw
  43f1f0:	str	x7, [x19, #24]
  43f1f4:	b	43f0e0 <ferror@plt+0x3c310>
  43f1f8:	bl	43e920 <ferror@plt+0x3bb50>
  43f1fc:	mov	x20, x0
  43f200:	cbz	x0, 43eda8 <ferror@plt+0x3bfd8>
  43f204:	cbz	w21, 43f210 <ferror@plt+0x3c440>
  43f208:	ldr	w0, [x19, #16]
  43f20c:	tbz	w0, #0, 43f260 <ferror@plt+0x3c490>
  43f210:	ldr	x0, [x19, #24]
  43f214:	ldrb	w0, [x0]
  43f218:	cmp	w0, #0x45
  43f21c:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  43f220:	b.eq	43edac <ferror@plt+0x3bfdc>  // b.none
  43f224:	mov	x3, #0x1f                  	// #31
  43f228:	mov	x2, x20
  43f22c:	mov	x1, #0x1                   	// #1
  43f230:	movk	x3, #0x1a, lsl #48
  43f234:	ldr	w0, [x2]
  43f238:	cmp	w0, #0x4
  43f23c:	b.eq	43f2b4 <ferror@plt+0x3c4e4>  // b.none
  43f240:	b.hi	43f294 <ferror@plt+0x3c4c4>  // b.pmore
  43f244:	cmp	w0, #0x2
  43f248:	b.ne	43f254 <ferror@plt+0x3c484>  // b.any
  43f24c:	ldr	x2, [x2, #16]
  43f250:	cbnz	x2, 43f234 <ferror@plt+0x3c464>
  43f254:	mov	w1, #0x0                   	// #0
  43f258:	b	43f2f0 <ferror@plt+0x3c520>
  43f25c:	ldr	x20, [x20, #8]
  43f260:	ldr	w2, [x20]
  43f264:	mov	w0, w2
  43f268:	bl	43ad74 <ferror@plt+0x37fa4>
  43f26c:	cbnz	w0, 43f25c <ferror@plt+0x3c48c>
  43f270:	cmp	w2, #0x2
  43f274:	b.ne	43edac <ferror@plt+0x3bfdc>  // b.any
  43f278:	ldr	x2, [x20, #16]
  43f27c:	ldr	w0, [x2]
  43f280:	bl	43ad74 <ferror@plt+0x37fa4>
  43f284:	cbz	w0, 43edac <ferror@plt+0x3bfdc>
  43f288:	ldr	x0, [x2, #8]
  43f28c:	str	x0, [x20, #16]
  43f290:	b	43f278 <ferror@plt+0x3c4a8>
  43f294:	sub	w0, w0, #0x1c
  43f298:	cmp	w0, #0x34
  43f29c:	b.hi	43f254 <ferror@plt+0x3c484>  // b.pmore
  43f2a0:	lsl	x0, x1, x0
  43f2a4:	tst	x0, x3
  43f2a8:	b.eq	43f254 <ferror@plt+0x3c484>  // b.none
  43f2ac:	ldr	x2, [x2, #8]
  43f2b0:	b	43f250 <ferror@plt+0x3c480>
  43f2b4:	ldr	x1, [x2, #8]
  43f2b8:	cbz	x1, 43f2dc <ferror@plt+0x3c50c>
  43f2bc:	ldr	w0, [x1]
  43f2c0:	cmp	w0, #0x8
  43f2c4:	b.hi	43f2e4 <ferror@plt+0x3c514>  // b.pmore
  43f2c8:	cmp	w0, #0x6
  43f2cc:	b.hi	43f334 <ferror@plt+0x3c564>  // b.pmore
  43f2d0:	sub	w0, w0, #0x1
  43f2d4:	cmp	w0, #0x1
  43f2d8:	b.ls	43f32c <ferror@plt+0x3c55c>  // b.plast
  43f2dc:	mov	w0, #0x0                   	// #0
  43f2e0:	b	43f2ec <ferror@plt+0x3c51c>
  43f2e4:	cmp	w0, #0x35
  43f2e8:	cset	w0, eq  // eq = none
  43f2ec:	eor	w1, w0, #0x1
  43f2f0:	mov	x0, x19
  43f2f4:	bl	43e7f0 <ferror@plt+0x3ba20>
  43f2f8:	mov	x3, x0
  43f2fc:	cbz	x0, 43eda8 <ferror@plt+0x3bfd8>
  43f300:	cbnz	w21, 43f320 <ferror@plt+0x3c550>
  43f304:	ldr	w0, [x20]
  43f308:	cmp	w0, #0x2
  43f30c:	b.ne	43f320 <ferror@plt+0x3c550>  // b.any
  43f310:	ldr	w0, [x3]
  43f314:	cmp	w0, #0x29
  43f318:	b.ne	43f320 <ferror@plt+0x3c550>  // b.any
  43f31c:	str	xzr, [x3, #8]
  43f320:	mov	x2, x20
  43f324:	mov	w1, #0x3                   	// #3
  43f328:	b	43eecc <ferror@plt+0x3c0fc>
  43f32c:	ldr	x1, [x1, #16]
  43f330:	b	43f2b8 <ferror@plt+0x3c4e8>
  43f334:	mov	w0, #0x1                   	// #1
  43f338:	b	43f2ec <ferror@plt+0x3c51c>
  43f33c:	stp	x29, x30, [sp, #-32]!
  43f340:	mov	x29, sp
  43f344:	stp	x19, x20, [sp, #16]
  43f348:	mov	x19, x0
  43f34c:	mov	w20, w1
  43f350:	ldr	x0, [x0, #24]
  43f354:	ldrb	w1, [x0]
  43f358:	cmp	w1, #0x5f
  43f35c:	b.ne	43f3dc <ferror@plt+0x3c60c>  // b.any
  43f360:	add	x0, x0, #0x1
  43f364:	str	x0, [x19, #24]
  43f368:	ldr	x0, [x19, #24]
  43f36c:	ldrb	w1, [x0]
  43f370:	cmp	w1, #0x5a
  43f374:	b.ne	43f3e0 <ferror@plt+0x3c610>  // b.any
  43f378:	add	x0, x0, #0x1
  43f37c:	str	x0, [x19, #24]
  43f380:	mov	w1, w20
  43f384:	mov	x0, x19
  43f388:	bl	43ed50 <ferror@plt+0x3bf80>
  43f38c:	mov	x6, x0
  43f390:	cbz	w20, 43f3e4 <ferror@plt+0x3c614>
  43f394:	ldr	w0, [x19, #16]
  43f398:	tbz	w0, #0, 43f3e4 <ferror@plt+0x3c614>
  43f39c:	ldr	x1, [x19, #24]
  43f3a0:	ldrb	w0, [x1]
  43f3a4:	cmp	w0, #0x2e
  43f3a8:	b.ne	43f3e4 <ferror@plt+0x3c614>  // b.any
  43f3ac:	ldrb	w0, [x1, #1]
  43f3b0:	sub	w2, w0, #0x61
  43f3b4:	cmp	w0, #0x5f
  43f3b8:	and	w2, w2, #0xff
  43f3bc:	ccmp	w2, #0x19, #0x0, ne  // ne = any
  43f3c0:	b.ls	43f3f4 <ferror@plt+0x3c624>  // b.plast
  43f3c4:	sub	w0, w0, #0x30
  43f3c8:	and	w0, w0, #0xff
  43f3cc:	cmp	w0, #0x9
  43f3d0:	b.hi	43f3e4 <ferror@plt+0x3c614>  // b.pmore
  43f3d4:	mov	x2, x1
  43f3d8:	b	43f410 <ferror@plt+0x3c640>
  43f3dc:	cbz	w20, 43f368 <ferror@plt+0x3c598>
  43f3e0:	mov	x6, #0x0                   	// #0
  43f3e4:	mov	x0, x6
  43f3e8:	ldp	x19, x20, [sp, #16]
  43f3ec:	ldp	x29, x30, [sp], #32
  43f3f0:	ret
  43f3f4:	add	x2, x1, #0x2
  43f3f8:	ldrb	w3, [x2]
  43f3fc:	sub	w0, w3, #0x61
  43f400:	cmp	w3, #0x5f
  43f404:	and	w0, w0, #0xff
  43f408:	ccmp	w0, #0x19, #0x0, ne  // ne = any
  43f40c:	b.ls	43f448 <ferror@plt+0x3c678>  // b.plast
  43f410:	ldrb	w0, [x2]
  43f414:	cmp	w0, #0x2e
  43f418:	b.eq	43f450 <ferror@plt+0x3c680>  // b.none
  43f41c:	str	x2, [x19, #24]
  43f420:	mov	x0, x19
  43f424:	sub	w2, w2, w1
  43f428:	bl	43d718 <ferror@plt+0x3a948>
  43f42c:	mov	x3, x0
  43f430:	mov	x2, x6
  43f434:	mov	x0, x19
  43f438:	mov	w1, #0x4e                  	// #78
  43f43c:	bl	43add8 <ferror@plt+0x38008>
  43f440:	mov	x6, x0
  43f444:	b	43f39c <ferror@plt+0x3c5cc>
  43f448:	add	x2, x2, #0x1
  43f44c:	b	43f3f8 <ferror@plt+0x3c628>
  43f450:	ldrb	w0, [x2, #1]
  43f454:	sub	w0, w0, #0x30
  43f458:	and	w0, w0, #0xff
  43f45c:	cmp	w0, #0x9
  43f460:	b.hi	43f41c <ferror@plt+0x3c64c>  // b.pmore
  43f464:	add	x2, x2, #0x2
  43f468:	ldrb	w0, [x2]
  43f46c:	sub	w0, w0, #0x30
  43f470:	and	w0, w0, #0xff
  43f474:	cmp	w0, #0x9
  43f478:	b.hi	43f410 <ferror@plt+0x3c640>  // b.pmore
  43f47c:	add	x2, x2, #0x1
  43f480:	b	43f468 <ferror@plt+0x3c698>
  43f484:	ldr	x1, [x0, #24]
  43f488:	ldrb	w2, [x1]
  43f48c:	cmp	w2, #0x4c
  43f490:	b.eq	43f4ac <ferror@plt+0x3c6dc>  // b.none
  43f494:	mov	x0, #0x0                   	// #0
  43f498:	ret
  43f49c:	mov	x0, #0x0                   	// #0
  43f4a0:	ldr	x19, [sp, #16]
  43f4a4:	ldp	x29, x30, [sp], #32
  43f4a8:	ret
  43f4ac:	stp	x29, x30, [sp, #-32]!
  43f4b0:	add	x2, x1, #0x1
  43f4b4:	mov	x29, sp
  43f4b8:	str	x19, [sp, #16]
  43f4bc:	mov	x19, x0
  43f4c0:	str	x2, [x0, #24]
  43f4c4:	mov	w2, #0x5a                  	// #90
  43f4c8:	ldrb	w1, [x1, #1]
  43f4cc:	cmp	w1, #0x5f
  43f4d0:	ccmp	w1, w2, #0x4, ne  // ne = any
  43f4d4:	b.ne	43f4fc <ferror@plt+0x3c72c>  // b.any
  43f4d8:	mov	w1, #0x0                   	// #0
  43f4dc:	bl	43f33c <ferror@plt+0x3c56c>
  43f4e0:	ldr	x1, [x19, #24]
  43f4e4:	ldrb	w2, [x1]
  43f4e8:	cmp	w2, #0x45
  43f4ec:	b.ne	43f49c <ferror@plt+0x3c6cc>  // b.any
  43f4f0:	add	x1, x1, #0x1
  43f4f4:	str	x1, [x19, #24]
  43f4f8:	b	43f4a0 <ferror@plt+0x3c6d0>
  43f4fc:	bl	43db60 <ferror@plt+0x3ad90>
  43f500:	mov	x6, x0
  43f504:	cbz	x0, 43f49c <ferror@plt+0x3c6cc>
  43f508:	ldr	w0, [x0]
  43f50c:	cmp	w0, #0x27
  43f510:	b.ne	43f530 <ferror@plt+0x3c760>  // b.any
  43f514:	ldr	x1, [x6, #8]
  43f518:	ldr	w0, [x1, #28]
  43f51c:	cbz	w0, 43f530 <ferror@plt+0x3c760>
  43f520:	ldr	w1, [x1, #8]
  43f524:	ldr	w0, [x19, #72]
  43f528:	sub	w0, w0, w1
  43f52c:	str	w0, [x19, #72]
  43f530:	ldr	x0, [x19, #24]
  43f534:	ldrb	w1, [x0]
  43f538:	cmp	w1, #0x6e
  43f53c:	b.ne	43f584 <ferror@plt+0x3c7b4>  // b.any
  43f540:	add	x0, x0, #0x1
  43f544:	mov	w7, #0x3e                  	// #62
  43f548:	str	x0, [x19, #24]
  43f54c:	ldr	x1, [x19, #24]
  43f550:	ldr	x2, [x19, #24]
  43f554:	ldrb	w0, [x2]
  43f558:	cmp	w0, #0x45
  43f55c:	b.ne	43f58c <ferror@plt+0x3c7bc>  // b.any
  43f560:	sub	w2, w2, w1
  43f564:	mov	x0, x19
  43f568:	bl	43d718 <ferror@plt+0x3a948>
  43f56c:	mov	x3, x0
  43f570:	mov	x2, x6
  43f574:	mov	w1, w7
  43f578:	mov	x0, x19
  43f57c:	bl	43add8 <ferror@plt+0x38008>
  43f580:	b	43f4e0 <ferror@plt+0x3c710>
  43f584:	mov	w7, #0x3d                  	// #61
  43f588:	b	43f54c <ferror@plt+0x3c77c>
  43f58c:	cbz	w0, 43f49c <ferror@plt+0x3c6cc>
  43f590:	add	x2, x2, #0x1
  43f594:	str	x2, [x19, #24]
  43f598:	b	43f550 <ferror@plt+0x3c780>
  43f59c:	ldr	x1, [x0, #24]
  43f5a0:	ldrb	w2, [x1]
  43f5a4:	cmp	w2, #0x4c
  43f5a8:	b.ne	43f5b0 <ferror@plt+0x3c7e0>  // b.any
  43f5ac:	b	43f484 <ferror@plt+0x3c6b4>
  43f5b0:	cmp	w2, #0x54
  43f5b4:	b.ne	43f5bc <ferror@plt+0x3c7ec>  // b.any
  43f5b8:	b	43b264 <ferror@plt+0x38494>
  43f5bc:	stp	x29, x30, [sp, #-48]!
  43f5c0:	cmp	w2, #0x73
  43f5c4:	mov	x29, sp
  43f5c8:	stp	x19, x20, [sp, #16]
  43f5cc:	mov	x19, x0
  43f5d0:	stp	x21, x22, [sp, #32]
  43f5d4:	b.ne	43f678 <ferror@plt+0x3c8a8>  // b.any
  43f5d8:	ldrb	w3, [x1, #1]
  43f5dc:	cmp	w3, #0x72
  43f5e0:	b.ne	43f654 <ferror@plt+0x3c884>  // b.any
  43f5e4:	add	x1, x1, #0x2
  43f5e8:	str	x1, [x0, #24]
  43f5ec:	bl	43db60 <ferror@plt+0x3ad90>
  43f5f0:	mov	x20, x0
  43f5f4:	mov	x0, x19
  43f5f8:	bl	43e49c <ferror@plt+0x3b6cc>
  43f5fc:	mov	x21, x0
  43f600:	ldr	x0, [x19, #24]
  43f604:	ldrb	w0, [x0]
  43f608:	cmp	w0, #0x49
  43f60c:	b.eq	43f630 <ferror@plt+0x3c860>  // b.none
  43f610:	mov	x3, x21
  43f614:	mov	x2, x20
  43f618:	mov	w1, #0x1                   	// #1
  43f61c:	mov	x0, x19
  43f620:	ldp	x19, x20, [sp, #16]
  43f624:	ldp	x21, x22, [sp, #32]
  43f628:	ldp	x29, x30, [sp], #48
  43f62c:	b	43add8 <ferror@plt+0x38008>
  43f630:	mov	x0, x19
  43f634:	bl	43fce4 <ferror@plt+0x3cf14>
  43f638:	mov	x3, x0
  43f63c:	mov	x2, x21
  43f640:	mov	x0, x19
  43f644:	mov	w1, #0x4                   	// #4
  43f648:	bl	43add8 <ferror@plt+0x38008>
  43f64c:	mov	x3, x0
  43f650:	b	43f614 <ferror@plt+0x3c844>
  43f654:	cmp	w3, #0x70
  43f658:	b.ne	43f764 <ferror@plt+0x3c994>  // b.any
  43f65c:	add	x1, x1, #0x2
  43f660:	str	x1, [x0, #24]
  43f664:	bl	43f59c <ferror@plt+0x3c7cc>
  43f668:	mov	x2, x0
  43f66c:	mov	x3, #0x0                   	// #0
  43f670:	mov	w1, #0x4b                  	// #75
  43f674:	b	43f61c <ferror@plt+0x3c84c>
  43f678:	cmp	w2, #0x66
  43f67c:	b.ne	43f700 <ferror@plt+0x3c930>  // b.any
  43f680:	ldrb	w3, [x1, #1]
  43f684:	cmp	w3, #0x70
  43f688:	b.ne	43f764 <ferror@plt+0x3c994>  // b.any
  43f68c:	add	x2, x1, #0x2
  43f690:	str	x2, [x0, #24]
  43f694:	ldrb	w2, [x1, #2]
  43f698:	cmp	w2, #0x54
  43f69c:	b.ne	43f6e0 <ferror@plt+0x3c910>  // b.any
  43f6a0:	add	x1, x1, #0x3
  43f6a4:	mov	w4, #0x0                   	// #0
  43f6a8:	str	x1, [x0, #24]
  43f6ac:	mov	x0, x19
  43f6b0:	bl	43ada4 <ferror@plt+0x37fd4>
  43f6b4:	mov	x20, x0
  43f6b8:	cbz	x0, 43f6cc <ferror@plt+0x3c8fc>
  43f6bc:	sxtw	x4, w4
  43f6c0:	mov	w0, #0x6                   	// #6
  43f6c4:	str	w0, [x20]
  43f6c8:	str	x4, [x20, #8]
  43f6cc:	mov	x0, x20
  43f6d0:	ldp	x19, x20, [sp, #16]
  43f6d4:	ldp	x21, x22, [sp, #32]
  43f6d8:	ldp	x29, x30, [sp], #48
  43f6dc:	ret
  43f6e0:	bl	43b1e0 <ferror@plt+0x38410>
  43f6e4:	mvn	x1, x0
  43f6e8:	tst	x1, #0x7fffffff
  43f6ec:	b.ne	43f6f8 <ferror@plt+0x3c928>  // b.any
  43f6f0:	mov	x20, #0x0                   	// #0
  43f6f4:	b	43f6cc <ferror@plt+0x3c8fc>
  43f6f8:	add	w4, w0, #0x1
  43f6fc:	b	43f6ac <ferror@plt+0x3c8dc>
  43f700:	sub	w0, w2, #0x30
  43f704:	and	w0, w0, #0xff
  43f708:	cmp	w0, #0x9
  43f70c:	b.ls	43f72c <ferror@plt+0x3c95c>  // b.plast
  43f710:	cmp	w2, #0x6f
  43f714:	b.ne	43f764 <ferror@plt+0x3c994>  // b.any
  43f718:	ldrb	w0, [x1, #1]
  43f71c:	cmp	w0, #0x6e
  43f720:	b.ne	43f7cc <ferror@plt+0x3c9fc>  // b.any
  43f724:	add	x1, x1, #0x2
  43f728:	str	x1, [x19, #24]
  43f72c:	mov	x0, x19
  43f730:	bl	43e49c <ferror@plt+0x3b6cc>
  43f734:	mov	x20, x0
  43f738:	cbz	x0, 43f6f0 <ferror@plt+0x3c920>
  43f73c:	ldr	x0, [x19, #24]
  43f740:	ldrb	w0, [x0]
  43f744:	cmp	w0, #0x49
  43f748:	b.ne	43f6cc <ferror@plt+0x3c8fc>  // b.any
  43f74c:	mov	x0, x19
  43f750:	bl	43fce4 <ferror@plt+0x3cf14>
  43f754:	mov	x2, x20
  43f758:	mov	x3, x0
  43f75c:	mov	w1, #0x4                   	// #4
  43f760:	b	43f61c <ferror@plt+0x3c84c>
  43f764:	cmp	w2, #0x69
  43f768:	mov	w0, #0x74                  	// #116
  43f76c:	ccmp	w2, w0, #0x4, ne  // ne = any
  43f770:	b.ne	43f7cc <ferror@plt+0x3c9fc>  // b.any
  43f774:	ldrb	w0, [x1, #1]
  43f778:	cmp	w0, #0x6c
  43f77c:	b.ne	43f7cc <ferror@plt+0x3c9fc>  // b.any
  43f780:	add	x1, x1, #0x2
  43f784:	str	x1, [x19, #24]
  43f788:	cmp	w2, #0x74
  43f78c:	b.ne	43f7c4 <ferror@plt+0x3c9f4>  // b.any
  43f790:	mov	x0, x19
  43f794:	bl	43db60 <ferror@plt+0x3ad90>
  43f798:	mov	x20, x0
  43f79c:	ldr	x0, [x19, #24]
  43f7a0:	ldrb	w0, [x0, #1]
  43f7a4:	cbz	w0, 43f6f0 <ferror@plt+0x3c920>
  43f7a8:	mov	w1, #0x45                  	// #69
  43f7ac:	mov	x0, x19
  43f7b0:	bl	43fd10 <ferror@plt+0x3cf40>
  43f7b4:	mov	x3, x0
  43f7b8:	mov	x2, x20
  43f7bc:	mov	w1, #0x31                  	// #49
  43f7c0:	b	43f61c <ferror@plt+0x3c84c>
  43f7c4:	mov	x20, #0x0                   	// #0
  43f7c8:	b	43f79c <ferror@plt+0x3c9cc>
  43f7cc:	mov	x0, x19
  43f7d0:	bl	43e328 <ferror@plt+0x3b558>
  43f7d4:	mov	x20, x0
  43f7d8:	cbz	x0, 43f6f0 <ferror@plt+0x3c920>
  43f7dc:	ldr	w0, [x0]
  43f7e0:	cmp	w0, #0x32
  43f7e4:	b.ne	43f834 <ferror@plt+0x3ca64>  // b.any
  43f7e8:	ldr	x0, [x20, #8]
  43f7ec:	ldr	x21, [x0]
  43f7f0:	ldr	w0, [x0, #16]
  43f7f4:	sub	w1, w0, #0x2
  43f7f8:	ldr	w0, [x19, #72]
  43f7fc:	add	w0, w0, w1
  43f800:	str	w0, [x19, #72]
  43f804:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  43f808:	mov	x0, x21
  43f80c:	add	x1, x1, #0x17b
  43f810:	bl	402ad0 <strcmp@plt>
  43f814:	ldr	x1, [x20, #8]
  43f818:	cbnz	w0, 43f86c <ferror@plt+0x3ca9c>
  43f81c:	mov	x0, x19
  43f820:	bl	43db60 <ferror@plt+0x3ad90>
  43f824:	mov	x3, x0
  43f828:	mov	x2, x20
  43f82c:	mov	w1, #0x37                  	// #55
  43f830:	b	43f61c <ferror@plt+0x3c84c>
  43f834:	cmp	w0, #0x34
  43f838:	b.eq	43f914 <ferror@plt+0x3cb44>  // b.none
  43f83c:	b.hi	43f6f0 <ferror@plt+0x3c920>  // b.pmore
  43f840:	cmp	w0, #0x33
  43f844:	b.ne	43f6f0 <ferror@plt+0x3c920>  // b.any
  43f848:	ldr	w1, [x20, #8]
  43f84c:	cmp	w1, #0x3
  43f850:	b.hi	43f6f0 <ferror@plt+0x3c920>  // b.pmore
  43f854:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43f858:	add	x0, x0, #0x4
  43f85c:	ldrb	w0, [x0, w1, uxtw]
  43f860:	adr	x1, 43f86c <ferror@plt+0x3ca9c>
  43f864:	add	x0, x1, w0, sxtb #2
  43f868:	br	x0
  43f86c:	ldr	w22, [x1, #20]
  43f870:	cmp	w22, #0x3
  43f874:	b.hi	43f6f0 <ferror@plt+0x3c920>  // b.pmore
  43f878:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43f87c:	add	x0, x0, #0x8
  43f880:	ldrb	w0, [x0, w22, uxtw]
  43f884:	adr	x1, 43f890 <ferror@plt+0x3cac0>
  43f888:	add	x0, x1, w0, sxtb #2
  43f88c:	br	x0
  43f890:	mov	x2, x20
  43f894:	mov	x3, #0x0                   	// #0
  43f898:	mov	w1, #0x36                  	// #54
  43f89c:	b	43f61c <ferror@plt+0x3c84c>
  43f8a0:	ldrb	w0, [x21]
  43f8a4:	mov	w1, #0x6d                  	// #109
  43f8a8:	cmp	w0, #0x70
  43f8ac:	ccmp	w0, w1, #0x4, ne  // ne = any
  43f8b0:	b.ne	43f8d8 <ferror@plt+0x3cb08>  // b.any
  43f8b4:	ldrb	w1, [x21, #1]
  43f8b8:	cmp	w1, w0
  43f8bc:	b.ne	43f8d8 <ferror@plt+0x3cb08>  // b.any
  43f8c0:	ldr	x0, [x19, #24]
  43f8c4:	ldrb	w1, [x0]
  43f8c8:	cmp	w1, #0x5f
  43f8cc:	b.ne	43f8dc <ferror@plt+0x3cb0c>  // b.any
  43f8d0:	add	x0, x0, #0x1
  43f8d4:	str	x0, [x19, #24]
  43f8d8:	mov	w22, #0x0                   	// #0
  43f8dc:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43f8e0:	mov	x0, x21
  43f8e4:	add	x1, x1, #0xdc4
  43f8e8:	bl	402ad0 <strcmp@plt>
  43f8ec:	cbnz	w0, 43f940 <ferror@plt+0x3cb70>
  43f8f0:	mov	x0, x19
  43f8f4:	bl	43fc2c <ferror@plt+0x3ce5c>
  43f8f8:	mov	x3, x0
  43f8fc:	cbz	w22, 43f828 <ferror@plt+0x3ca58>
  43f900:	mov	x2, x0
  43f904:	mov	w1, #0x39                  	// #57
  43f908:	mov	x0, x19
  43f90c:	bl	43add8 <ferror@plt+0x38008>
  43f910:	b	43f824 <ferror@plt+0x3ca54>
  43f914:	ldr	x0, [x19, #24]
  43f918:	ldrb	w1, [x0]
  43f91c:	cmp	w1, #0x5f
  43f920:	b.ne	43f93c <ferror@plt+0x3cb6c>  // b.any
  43f924:	add	x0, x0, #0x1
  43f928:	str	x0, [x19, #24]
  43f92c:	mov	w1, #0x45                  	// #69
  43f930:	mov	x0, x19
  43f934:	bl	43fd10 <ferror@plt+0x3cf40>
  43f938:	b	43f824 <ferror@plt+0x3ca54>
  43f93c:	mov	w22, #0x0                   	// #0
  43f940:	mov	x0, x19
  43f944:	bl	43f59c <ferror@plt+0x3c7cc>
  43f948:	b	43f8f8 <ferror@plt+0x3cb28>
  43f94c:	ldr	x0, [x20, #8]
  43f950:	bl	43b3bc <ferror@plt+0x385ec>
  43f954:	cbz	w0, 43f9ac <ferror@plt+0x3cbdc>
  43f958:	mov	x0, x19
  43f95c:	bl	43db60 <ferror@plt+0x3ad90>
  43f960:	mov	x22, x0
  43f964:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43f968:	mov	x0, x21
  43f96c:	add	x1, x1, #0xdcd
  43f970:	bl	402ad0 <strcmp@plt>
  43f974:	cbnz	w0, 43f9cc <ferror@plt+0x3cbfc>
  43f978:	mov	x0, x19
  43f97c:	mov	w1, #0x45                  	// #69
  43f980:	bl	43fd10 <ferror@plt+0x3cf40>
  43f984:	mov	x21, x0
  43f988:	mov	x3, x21
  43f98c:	mov	x2, x22
  43f990:	mov	w1, #0x39                  	// #57
  43f994:	mov	x0, x19
  43f998:	bl	43add8 <ferror@plt+0x38008>
  43f99c:	mov	x3, x0
  43f9a0:	mov	x2, x20
  43f9a4:	mov	w1, #0x38                  	// #56
  43f9a8:	b	43f61c <ferror@plt+0x3c84c>
  43f9ac:	ldrb	w0, [x21]
  43f9b0:	cmp	w0, #0x66
  43f9b4:	mov	x0, x19
  43f9b8:	b.ne	43f9c4 <ferror@plt+0x3cbf4>  // b.any
  43f9bc:	bl	43e328 <ferror@plt+0x3b558>
  43f9c0:	b	43f960 <ferror@plt+0x3cb90>
  43f9c4:	bl	43f59c <ferror@plt+0x3c7cc>
  43f9c8:	b	43f960 <ferror@plt+0x3cb90>
  43f9cc:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43f9d0:	mov	x0, x21
  43f9d4:	add	x1, x1, #0xefc
  43f9d8:	bl	402ad0 <strcmp@plt>
  43f9dc:	cbz	w0, 43f9f4 <ferror@plt+0x3cc24>
  43f9e0:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43f9e4:	mov	x0, x21
  43f9e8:	add	x1, x1, #0xe90
  43f9ec:	bl	402ad0 <strcmp@plt>
  43f9f0:	cbnz	w0, 43fa30 <ferror@plt+0x3cc60>
  43f9f4:	mov	x0, x19
  43f9f8:	bl	43e49c <ferror@plt+0x3b6cc>
  43f9fc:	mov	x21, x0
  43fa00:	ldr	x0, [x19, #24]
  43fa04:	ldrb	w0, [x0]
  43fa08:	cmp	w0, #0x49
  43fa0c:	b.ne	43f988 <ferror@plt+0x3cbb8>  // b.any
  43fa10:	mov	x0, x19
  43fa14:	bl	43fce4 <ferror@plt+0x3cf14>
  43fa18:	mov	x2, x21
  43fa1c:	mov	x3, x0
  43fa20:	mov	w1, #0x4                   	// #4
  43fa24:	mov	x0, x19
  43fa28:	bl	43add8 <ferror@plt+0x38008>
  43fa2c:	b	43f984 <ferror@plt+0x3cbb4>
  43fa30:	mov	x0, x19
  43fa34:	bl	43f59c <ferror@plt+0x3c7cc>
  43fa38:	b	43f984 <ferror@plt+0x3cbb4>
  43fa3c:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  43fa40:	mov	x0, x21
  43fa44:	add	x1, x1, #0xdd0
  43fa48:	bl	402ad0 <strcmp@plt>
  43fa4c:	cbnz	w0, 43faac <ferror@plt+0x3ccdc>
  43fa50:	mov	x0, x19
  43fa54:	bl	43f59c <ferror@plt+0x3c7cc>
  43fa58:	mov	x21, x0
  43fa5c:	mov	x0, x19
  43fa60:	bl	43f59c <ferror@plt+0x3c7cc>
  43fa64:	mov	x22, x0
  43fa68:	mov	x0, x19
  43fa6c:	bl	43f59c <ferror@plt+0x3c7cc>
  43fa70:	cbz	x0, 43f6f0 <ferror@plt+0x3c920>
  43fa74:	mov	x3, x0
  43fa78:	mov	x2, x22
  43fa7c:	mov	w1, #0x3c                  	// #60
  43fa80:	mov	x0, x19
  43fa84:	bl	43add8 <ferror@plt+0x38008>
  43fa88:	mov	x3, x0
  43fa8c:	mov	x2, x21
  43fa90:	mov	w1, #0x3b                  	// #59
  43fa94:	mov	x0, x19
  43fa98:	bl	43add8 <ferror@plt+0x38008>
  43fa9c:	mov	x2, x20
  43faa0:	mov	x3, x0
  43faa4:	mov	w1, #0x3a                  	// #58
  43faa8:	b	43f61c <ferror@plt+0x3c84c>
  43faac:	ldrb	w0, [x21]
  43fab0:	cmp	w0, #0x66
  43fab4:	b.ne	43fac4 <ferror@plt+0x3ccf4>  // b.any
  43fab8:	mov	x0, x19
  43fabc:	bl	43e328 <ferror@plt+0x3b558>
  43fac0:	b	43fa58 <ferror@plt+0x3cc88>
  43fac4:	cmp	w0, #0x6e
  43fac8:	b.ne	43f6f0 <ferror@plt+0x3c920>  // b.any
  43facc:	ldrb	w0, [x21, #1]
  43fad0:	mov	w1, #0x61                  	// #97
  43fad4:	cmp	w0, #0x77
  43fad8:	ccmp	w0, w1, #0x4, ne  // ne = any
  43fadc:	b.ne	43f6f0 <ferror@plt+0x3c920>  // b.any
  43fae0:	mov	w1, #0x5f                  	// #95
  43fae4:	mov	x0, x19
  43fae8:	bl	43fd10 <ferror@plt+0x3cf40>
  43faec:	mov	x21, x0
  43faf0:	mov	x0, x19
  43faf4:	bl	43db60 <ferror@plt+0x3ad90>
  43faf8:	mov	x22, x0
  43fafc:	ldr	x0, [x19, #24]
  43fb00:	ldrb	w1, [x0]
  43fb04:	cmp	w1, #0x45
  43fb08:	b.ne	43fb1c <ferror@plt+0x3cd4c>  // b.any
  43fb0c:	add	x0, x0, #0x1
  43fb10:	str	x0, [x19, #24]
  43fb14:	mov	x0, #0x0                   	// #0
  43fb18:	b	43fa74 <ferror@plt+0x3cca4>
  43fb1c:	cmp	w1, #0x70
  43fb20:	b.ne	43fb48 <ferror@plt+0x3cd78>  // b.any
  43fb24:	ldrb	w1, [x0, #1]
  43fb28:	cmp	w1, #0x69
  43fb2c:	b.ne	43f6f0 <ferror@plt+0x3c920>  // b.any
  43fb30:	add	x0, x0, #0x2
  43fb34:	str	x0, [x19, #24]
  43fb38:	mov	w1, #0x45                  	// #69
  43fb3c:	mov	x0, x19
  43fb40:	bl	43fd10 <ferror@plt+0x3cf40>
  43fb44:	b	43fa74 <ferror@plt+0x3cca4>
  43fb48:	cmp	w1, #0x69
  43fb4c:	b.ne	43f6f0 <ferror@plt+0x3c920>  // b.any
  43fb50:	ldrb	w0, [x0, #1]
  43fb54:	cmp	w0, #0x6c
  43fb58:	b.ne	43f6f0 <ferror@plt+0x3c920>  // b.any
  43fb5c:	mov	x0, x19
  43fb60:	bl	43f59c <ferror@plt+0x3c7cc>
  43fb64:	b	43fa74 <ferror@plt+0x3cca4>
  43fb68:	stp	x29, x30, [sp, #-32]!
  43fb6c:	mov	w1, #0x1                   	// #1
  43fb70:	mov	x29, sp
  43fb74:	stp	x19, x20, [sp, #16]
  43fb78:	mov	x19, x0
  43fb7c:	ldr	w20, [x0, #76]
  43fb80:	str	w1, [x0, #76]
  43fb84:	bl	43f59c <ferror@plt+0x3c7cc>
  43fb88:	str	w20, [x19, #76]
  43fb8c:	ldp	x19, x20, [sp, #16]
  43fb90:	ldp	x29, x30, [sp], #32
  43fb94:	ret
  43fb98:	ldr	x2, [x0, #24]
  43fb9c:	ldrb	w1, [x2]
  43fba0:	cmp	w1, #0x4c
  43fba4:	b.eq	43fc14 <ferror@plt+0x3ce44>  // b.none
  43fba8:	stp	x29, x30, [sp, #-32]!
  43fbac:	mov	x29, sp
  43fbb0:	str	x19, [sp, #16]
  43fbb4:	mov	x19, x0
  43fbb8:	b.hi	43fbdc <ferror@plt+0x3ce0c>  // b.pmore
  43fbbc:	sub	w1, w1, #0x49
  43fbc0:	and	w1, w1, #0xff
  43fbc4:	cmp	w1, #0x1
  43fbc8:	b.ls	43fc18 <ferror@plt+0x3ce48>  // b.plast
  43fbcc:	mov	x0, x19
  43fbd0:	ldr	x19, [sp, #16]
  43fbd4:	ldp	x29, x30, [sp], #32
  43fbd8:	b	43db60 <ferror@plt+0x3ad90>
  43fbdc:	cmp	w1, #0x58
  43fbe0:	b.ne	43fbcc <ferror@plt+0x3cdfc>  // b.any
  43fbe4:	add	x2, x2, #0x1
  43fbe8:	str	x2, [x0, #24]
  43fbec:	bl	43fb68 <ferror@plt+0x3cd98>
  43fbf0:	ldr	x1, [x19, #24]
  43fbf4:	ldrb	w2, [x1]
  43fbf8:	cmp	w2, #0x45
  43fbfc:	b.ne	43fc24 <ferror@plt+0x3ce54>  // b.any
  43fc00:	add	x1, x1, #0x1
  43fc04:	str	x1, [x19, #24]
  43fc08:	ldr	x19, [sp, #16]
  43fc0c:	ldp	x29, x30, [sp], #32
  43fc10:	ret
  43fc14:	b	43f484 <ferror@plt+0x3c6b4>
  43fc18:	ldr	x19, [sp, #16]
  43fc1c:	ldp	x29, x30, [sp], #32
  43fc20:	b	43fce4 <ferror@plt+0x3cf14>
  43fc24:	mov	x0, #0x0                   	// #0
  43fc28:	b	43fc08 <ferror@plt+0x3ce38>
  43fc2c:	stp	x29, x30, [sp, #-64]!
  43fc30:	mov	x29, sp
  43fc34:	ldr	x1, [x0, #24]
  43fc38:	stp	x19, x20, [sp, #16]
  43fc3c:	mov	x19, x0
  43fc40:	str	x21, [sp, #32]
  43fc44:	ldr	x21, [x0, #64]
  43fc48:	ldrb	w2, [x1]
  43fc4c:	cmp	w2, #0x45
  43fc50:	b.ne	43fc78 <ferror@plt+0x3cea8>  // b.any
  43fc54:	add	x1, x1, #0x1
  43fc58:	mov	x3, #0x0                   	// #0
  43fc5c:	ldr	x21, [sp, #32]
  43fc60:	str	x1, [x0, #24]
  43fc64:	ldp	x19, x20, [sp, #16]
  43fc68:	mov	x2, #0x0                   	// #0
  43fc6c:	ldp	x29, x30, [sp], #64
  43fc70:	mov	w1, #0x2f                  	// #47
  43fc74:	b	43add8 <ferror@plt+0x38008>
  43fc78:	add	x20, sp, #0x38
  43fc7c:	str	xzr, [sp, #56]
  43fc80:	mov	x0, x19
  43fc84:	bl	43fb98 <ferror@plt+0x3cdc8>
  43fc88:	mov	x2, x0
  43fc8c:	cbnz	x0, 43fca4 <ferror@plt+0x3ced4>
  43fc90:	mov	x0, #0x0                   	// #0
  43fc94:	ldp	x19, x20, [sp, #16]
  43fc98:	ldr	x21, [sp, #32]
  43fc9c:	ldp	x29, x30, [sp], #64
  43fca0:	ret
  43fca4:	mov	x0, x19
  43fca8:	mov	x3, #0x0                   	// #0
  43fcac:	mov	w1, #0x2f                  	// #47
  43fcb0:	bl	43add8 <ferror@plt+0x38008>
  43fcb4:	str	x0, [x20]
  43fcb8:	cbz	x0, 43fc90 <ferror@plt+0x3cec0>
  43fcbc:	add	x20, x0, #0x10
  43fcc0:	ldr	x0, [x19, #24]
  43fcc4:	ldrb	w1, [x0]
  43fcc8:	cmp	w1, #0x45
  43fccc:	b.ne	43fc80 <ferror@plt+0x3ceb0>  // b.any
  43fcd0:	add	x0, x0, #0x1
  43fcd4:	str	x0, [x19, #24]
  43fcd8:	str	x21, [x19, #64]
  43fcdc:	ldr	x0, [sp, #56]
  43fce0:	b	43fc94 <ferror@plt+0x3cec4>
  43fce4:	ldr	x3, [x0, #24]
  43fce8:	ldrb	w1, [x3]
  43fcec:	sub	w1, w1, #0x49
  43fcf0:	and	w1, w1, #0xff
  43fcf4:	cmp	w1, #0x1
  43fcf8:	b.hi	43fd08 <ferror@plt+0x3cf38>  // b.pmore
  43fcfc:	add	x3, x3, #0x1
  43fd00:	str	x3, [x0, #24]
  43fd04:	b	43fc2c <ferror@plt+0x3ce5c>
  43fd08:	mov	x0, #0x0                   	// #0
  43fd0c:	ret
  43fd10:	stp	x29, x30, [sp, #-64]!
  43fd14:	mov	x29, sp
  43fd18:	ldr	x2, [x0, #24]
  43fd1c:	stp	x19, x20, [sp, #16]
  43fd20:	mov	x19, x0
  43fd24:	str	x21, [sp, #32]
  43fd28:	str	xzr, [sp, #56]
  43fd2c:	ldrb	w3, [x2]
  43fd30:	cmp	w3, w1, uxtb
  43fd34:	b.ne	43fd5c <ferror@plt+0x3cf8c>  // b.any
  43fd38:	add	x2, x2, #0x1
  43fd3c:	mov	x3, #0x0                   	// #0
  43fd40:	ldr	x21, [sp, #32]
  43fd44:	str	x2, [x0, #24]
  43fd48:	ldp	x19, x20, [sp, #16]
  43fd4c:	mov	w1, #0x2e                  	// #46
  43fd50:	ldp	x29, x30, [sp], #64
  43fd54:	mov	x2, #0x0                   	// #0
  43fd58:	b	43add8 <ferror@plt+0x38008>
  43fd5c:	and	w21, w1, #0xff
  43fd60:	add	x20, sp, #0x38
  43fd64:	mov	x0, x19
  43fd68:	bl	43fb68 <ferror@plt+0x3cd98>
  43fd6c:	mov	x2, x0
  43fd70:	cbnz	x0, 43fd88 <ferror@plt+0x3cfb8>
  43fd74:	mov	x0, #0x0                   	// #0
  43fd78:	ldp	x19, x20, [sp, #16]
  43fd7c:	ldr	x21, [sp, #32]
  43fd80:	ldp	x29, x30, [sp], #64
  43fd84:	ret
  43fd88:	mov	x0, x19
  43fd8c:	mov	x3, #0x0                   	// #0
  43fd90:	mov	w1, #0x2e                  	// #46
  43fd94:	bl	43add8 <ferror@plt+0x38008>
  43fd98:	str	x0, [x20]
  43fd9c:	cbz	x0, 43fd74 <ferror@plt+0x3cfa4>
  43fda0:	add	x20, x0, #0x10
  43fda4:	ldr	x0, [x19, #24]
  43fda8:	ldrb	w1, [x0]
  43fdac:	cmp	w1, w21
  43fdb0:	b.ne	43fd64 <ferror@plt+0x3cf94>  // b.any
  43fdb4:	add	x0, x0, #0x1
  43fdb8:	str	x0, [x19, #24]
  43fdbc:	ldr	x0, [sp, #56]
  43fdc0:	b	43fd78 <ferror@plt+0x3cfa8>
  43fdc4:	stp	x29, x30, [sp, #-80]!
  43fdc8:	cmp	w2, #0x0
  43fdcc:	mov	x29, sp
  43fdd0:	stp	x19, x20, [sp, #16]
  43fdd4:	mov	x19, x0
  43fdd8:	mov	x20, x1
  43fddc:	ldr	x0, [x0, #24]
  43fde0:	stp	x21, x22, [sp, #32]
  43fde4:	mov	w21, w2
  43fde8:	stp	x23, x24, [sp, #48]
  43fdec:	mov	x22, x1
  43fdf0:	mov	w24, #0x1d                  	// #29
  43fdf4:	str	x25, [sp, #64]
  43fdf8:	mov	w25, #0x1e                  	// #30
  43fdfc:	mov	w23, #0x1c                  	// #28
  43fe00:	ldrb	w3, [x0]
  43fe04:	mov	w0, #0x1b                  	// #27
  43fe08:	csel	w25, w25, w0, ne  // ne = any
  43fe0c:	mov	w0, #0x1a                  	// #26
  43fe10:	csel	w24, w24, w0, ne  // ne = any
  43fe14:	mov	w0, #0x19                  	// #25
  43fe18:	csel	w23, w23, w0, ne  // ne = any
  43fe1c:	ldr	x4, [x19, #24]
  43fe20:	mov	x0, x4
  43fe24:	bl	43b364 <ferror@plt+0x38594>
  43fe28:	cbnz	w0, 43fe80 <ferror@plt+0x3d0b0>
  43fe2c:	cmp	w3, #0x46
  43fe30:	eor	w21, w21, #0x1
  43fe34:	cset	w0, eq  // eq = none
  43fe38:	tst	w21, w0
  43fe3c:	b.eq	43ffec <ferror@plt+0x3d21c>  // b.none
  43fe40:	mov	w1, #0x1d                  	// #29
  43fe44:	mov	w2, #0x1e                  	// #30
  43fe48:	mov	w3, #0x1c                  	// #28
  43fe4c:	cmp	x22, x20
  43fe50:	b.eq	43feec <ferror@plt+0x3d11c>  // b.none
  43fe54:	ldr	x20, [x20]
  43fe58:	ldr	w0, [x20]
  43fe5c:	cmp	w0, #0x1a
  43fe60:	b.eq	43fff4 <ferror@plt+0x3d224>  // b.none
  43fe64:	cmp	w0, #0x1b
  43fe68:	b.eq	43fffc <ferror@plt+0x3d22c>  // b.none
  43fe6c:	cmp	w0, #0x19
  43fe70:	b.ne	43fe78 <ferror@plt+0x3d0a8>  // b.any
  43fe74:	str	w3, [x20]
  43fe78:	add	x20, x20, #0x8
  43fe7c:	b	43fe4c <ferror@plt+0x3d07c>
  43fe80:	add	x0, x4, #0x1
  43fe84:	str	x0, [x19, #24]
  43fe88:	cmp	w3, #0x72
  43fe8c:	b.ne	43fea8 <ferror@plt+0x3d0d8>  // b.any
  43fe90:	ldr	w0, [x19, #72]
  43fe94:	mov	w1, w23
  43fe98:	add	w0, w0, #0x9
  43fe9c:	str	w0, [x19, #72]
  43fea0:	mov	x3, #0x0                   	// #0
  43fea4:	b	43ff30 <ferror@plt+0x3d160>
  43fea8:	cmp	w3, #0x56
  43feac:	b.ne	43fec4 <ferror@plt+0x3d0f4>  // b.any
  43feb0:	ldr	w0, [x19, #72]
  43feb4:	mov	w1, w24
  43feb8:	add	w0, w0, #0x9
  43febc:	str	w0, [x19, #72]
  43fec0:	b	43fea0 <ferror@plt+0x3d0d0>
  43fec4:	cmp	w3, #0x4b
  43fec8:	b.ne	43fee0 <ferror@plt+0x3d110>  // b.any
  43fecc:	ldr	w0, [x19, #72]
  43fed0:	mov	w1, w25
  43fed4:	add	w0, w0, #0x6
  43fed8:	str	w0, [x19, #72]
  43fedc:	b	43fea0 <ferror@plt+0x3d0d0>
  43fee0:	ldrb	w0, [x4, #1]
  43fee4:	cbnz	w0, 43ff08 <ferror@plt+0x3d138>
  43fee8:	mov	x20, #0x0                   	// #0
  43feec:	mov	x0, x20
  43fef0:	ldp	x19, x20, [sp, #16]
  43fef4:	ldp	x21, x22, [sp, #32]
  43fef8:	ldp	x23, x24, [sp, #48]
  43fefc:	ldr	x25, [sp, #64]
  43ff00:	ldp	x29, x30, [sp], #80
  43ff04:	ret
  43ff08:	add	x0, x4, #0x2
  43ff0c:	str	x0, [x19, #24]
  43ff10:	ldrb	w0, [x4, #1]
  43ff14:	cmp	w0, #0x78
  43ff18:	b.ne	43ff54 <ferror@plt+0x3d184>  // b.any
  43ff1c:	ldr	w0, [x19, #72]
  43ff20:	mov	x3, #0x0                   	// #0
  43ff24:	mov	w1, #0x4d                  	// #77
  43ff28:	add	w0, w0, #0x11
  43ff2c:	str	w0, [x19, #72]
  43ff30:	mov	x0, x19
  43ff34:	mov	x2, #0x0                   	// #0
  43ff38:	bl	43add8 <ferror@plt+0x38008>
  43ff3c:	str	x0, [x22]
  43ff40:	cbz	x0, 43fee8 <ferror@plt+0x3d118>
  43ff44:	add	x22, x0, #0x8
  43ff48:	ldr	x0, [x19, #24]
  43ff4c:	ldrb	w3, [x0]
  43ff50:	b	43fe1c <ferror@plt+0x3d04c>
  43ff54:	and	w2, w0, #0xffffffdf
  43ff58:	and	w1, w2, #0xff
  43ff5c:	cmp	w2, #0x4f
  43ff60:	b.ne	43ffa8 <ferror@plt+0x3d1d8>  // b.any
  43ff64:	ldr	w2, [x19, #72]
  43ff68:	cmp	w0, #0x4f
  43ff6c:	add	w2, w2, #0x9
  43ff70:	str	w2, [x19, #72]
  43ff74:	b.ne	43fea0 <ferror@plt+0x3d0d0>  // b.any
  43ff78:	mov	x0, x19
  43ff7c:	bl	43fb68 <ferror@plt+0x3cd98>
  43ff80:	mov	x3, x0
  43ff84:	cbz	x0, 43fee8 <ferror@plt+0x3d118>
  43ff88:	ldr	x0, [x19, #24]
  43ff8c:	ldrb	w1, [x0]
  43ff90:	cmp	w1, #0x45
  43ff94:	b.ne	43fee8 <ferror@plt+0x3d118>  // b.any
  43ff98:	add	x0, x0, #0x1
  43ff9c:	mov	w1, #0x4f                  	// #79
  43ffa0:	str	x0, [x19, #24]
  43ffa4:	b	43ff30 <ferror@plt+0x3d160>
  43ffa8:	cmp	w0, #0x77
  43ffac:	b.ne	43fee8 <ferror@plt+0x3d118>  // b.any
  43ffb0:	ldr	w0, [x19, #72]
  43ffb4:	add	w0, w0, #0x6
  43ffb8:	str	w0, [x19, #72]
  43ffbc:	mov	x0, x19
  43ffc0:	bl	43e248 <ferror@plt+0x3b478>
  43ffc4:	mov	x3, x0
  43ffc8:	cbz	x0, 43fee8 <ferror@plt+0x3d118>
  43ffcc:	ldr	x0, [x19, #24]
  43ffd0:	ldrb	w1, [x0]
  43ffd4:	cmp	w1, #0x45
  43ffd8:	b.ne	43fee8 <ferror@plt+0x3d118>  // b.any
  43ffdc:	add	x0, x0, #0x1
  43ffe0:	mov	w1, #0x50                  	// #80
  43ffe4:	str	x0, [x19, #24]
  43ffe8:	b	43ff30 <ferror@plt+0x3d160>
  43ffec:	mov	x20, x22
  43fff0:	b	43feec <ferror@plt+0x3d11c>
  43fff4:	str	w1, [x20]
  43fff8:	b	43fe78 <ferror@plt+0x3d0a8>
  43fffc:	str	w2, [x20]
  440000:	b	43fe78 <ferror@plt+0x3d0a8>
  440004:	stp	x29, x30, [sp, #-416]!
  440008:	mov	w4, w0
  44000c:	mov	x5, x1
  440010:	mov	x29, sp
  440014:	str	x19, [sp, #16]
  440018:	add	x0, x29, #0x28
  44001c:	str	xzr, [x29, #296]
  440020:	strb	wzr, [x29, #304]
  440024:	stp	x2, x3, [x29, #312]
  440028:	stp	xzr, xzr, [x29, #328]
  44002c:	stp	xzr, xzr, [x29, #344]
  440030:	stp	xzr, xzr, [x29, #360]
  440034:	stp	xzr, xzr, [x29, #376]
  440038:	stp	xzr, xzr, [x29, #392]
  44003c:	bl	43aef8 <ferror@plt+0x38128>
  440040:	ldr	w0, [x29, #348]
  440044:	cmp	w0, #0x7ff
  440048:	b.gt	440050 <ferror@plt+0x3d280>
  44004c:	str	wzr, [x29, #348]
  440050:	ldr	w3, [x29, #388]
  440054:	mov	w0, #0x1                   	// #1
  440058:	ldr	w2, [x29, #404]
  44005c:	mov	x19, sp
  440060:	cmp	w3, #0x0
  440064:	str	xzr, [x29, #408]
  440068:	mul	w2, w3, w2
  44006c:	csel	w3, w3, w0, gt
  440070:	str	w2, [x29, #404]
  440074:	cmp	w2, #0x0
  440078:	sub	sp, sp, w3, sxtw #4
  44007c:	csel	w2, w2, w0, gt
  440080:	mov	x1, sp
  440084:	str	x1, [x29, #376]
  440088:	mov	w1, w4
  44008c:	sub	sp, sp, w2, sxtw #4
  440090:	mov	x2, x5
  440094:	mov	x0, sp
  440098:	str	x0, [x29, #392]
  44009c:	add	x0, x29, #0x28
  4400a0:	bl	43cecc <ferror@plt+0x3a0fc>
  4400a4:	add	x0, x29, #0x28
  4400a8:	mov	sp, x19
  4400ac:	bl	43afb8 <ferror@plt+0x381e8>
  4400b0:	ldr	w0, [x29, #344]
  4400b4:	mov	sp, x29
  4400b8:	cmp	w0, #0x0
  4400bc:	cset	w0, eq  // eq = none
  4400c0:	ldr	x19, [sp, #16]
  4400c4:	ldp	x29, x30, [sp], #416
  4400c8:	ret
  4400cc:	stp	x29, x30, [sp, #-80]!
  4400d0:	mov	x29, sp
  4400d4:	stp	x19, x20, [sp, #16]
  4400d8:	mov	w20, w0
  4400dc:	mov	x19, x3
  4400e0:	str	x21, [sp, #32]
  4400e4:	mov	x21, x1
  4400e8:	stp	xzr, xzr, [sp, #48]
  4400ec:	str	xzr, [sp, #64]
  4400f0:	str	wzr, [sp, #72]
  4400f4:	cbz	w2, 440104 <ferror@plt+0x3d334>
  4400f8:	sxtw	x1, w2
  4400fc:	add	x0, sp, #0x30
  440100:	bl	43b4d0 <ferror@plt+0x38700>
  440104:	adrp	x2, 43b000 <ferror@plt+0x38230>
  440108:	add	x3, sp, #0x30
  44010c:	add	x2, x2, #0x548
  440110:	mov	x1, x21
  440114:	mov	w0, w20
  440118:	bl	440004 <ferror@plt+0x3d234>
  44011c:	cbnz	w0, 440140 <ferror@plt+0x3d370>
  440120:	ldr	x0, [sp, #48]
  440124:	bl	402b30 <free@plt>
  440128:	str	xzr, [x19]
  44012c:	mov	x0, #0x0                   	// #0
  440130:	ldp	x19, x20, [sp, #16]
  440134:	ldr	x21, [sp, #32]
  440138:	ldp	x29, x30, [sp], #80
  44013c:	ret
  440140:	ldr	w0, [sp, #72]
  440144:	cmp	w0, #0x0
  440148:	ldr	x0, [sp, #64]
  44014c:	csinc	x0, x0, xzr, eq  // eq = none
  440150:	str	x0, [x19]
  440154:	ldr	x0, [sp, #48]
  440158:	b	440130 <ferror@plt+0x3d360>
  44015c:	add	x4, x0, x2
  440160:	stp	x0, x4, [x3]
  440164:	str	w1, [x3, #16]
  440168:	str	x0, [x3, #24]
  44016c:	lsl	w0, w2, #1
  440170:	str	wzr, [x3, #40]
  440174:	str	w0, [x3, #44]
  440178:	stp	wzr, w2, [x3, #56]
  44017c:	stp	xzr, xzr, [x3, #64]
  440180:	str	xzr, [x3, #80]
  440184:	ret
  440188:	stp	x29, x30, [sp, #-176]!
  44018c:	mov	x29, sp
  440190:	stp	x19, x20, [sp, #16]
  440194:	mov	x19, x0
  440198:	stp	x21, x22, [sp, #32]
  44019c:	mov	w21, w1
  4401a0:	mov	x22, x2
  4401a4:	stp	x23, x24, [sp, #48]
  4401a8:	mov	x23, x3
  4401ac:	str	x25, [sp, #64]
  4401b0:	ldrb	w0, [x0]
  4401b4:	cmp	w0, #0x5f
  4401b8:	b.ne	4401c8 <ferror@plt+0x3d3f8>  // b.any
  4401bc:	ldrb	w0, [x19, #1]
  4401c0:	cmp	w0, #0x5a
  4401c4:	b.eq	44033c <ferror@plt+0x3d56c>  // b.none
  4401c8:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  4401cc:	mov	x0, x19
  4401d0:	add	x1, x1, #0xec7
  4401d4:	mov	x2, #0x8                   	// #8
  4401d8:	bl	4028d0 <strncmp@plt>
  4401dc:	cbnz	w0, 440318 <ferror@plt+0x3d548>
  4401e0:	ldrb	w0, [x19, #8]
  4401e4:	sub	w0, w0, #0x24
  4401e8:	and	w0, w0, #0xff
  4401ec:	cmp	w0, #0x3b
  4401f0:	b.hi	440318 <ferror@plt+0x3d548>  // b.pmore
  4401f4:	mov	x1, #0x401                 	// #1025
  4401f8:	movk	x1, #0x800, lsl #48
  4401fc:	lsr	x0, x1, x0
  440200:	tbz	w0, #0, 440318 <ferror@plt+0x3d548>
  440204:	ldrb	w0, [x19, #9]
  440208:	mov	w1, #0x49                  	// #73
  44020c:	cmp	w0, #0x44
  440210:	ccmp	w0, w1, #0x4, ne  // ne = any
  440214:	b.ne	440318 <ferror@plt+0x3d548>  // b.any
  440218:	ldrb	w1, [x19, #10]
  44021c:	cmp	w1, #0x5f
  440220:	b.ne	440318 <ferror@plt+0x3d548>  // b.any
  440224:	cmp	w0, #0x49
  440228:	cset	w20, ne  // ne = any
  44022c:	add	w20, w20, #0x2
  440230:	mov	x0, x19
  440234:	bl	402700 <strlen@plt>
  440238:	add	x3, x29, #0x58
  44023c:	mov	x2, x0
  440240:	mov	w1, w21
  440244:	mov	x0, x19
  440248:	bl	44015c <ferror@plt+0x3d38c>
  44024c:	ldr	w0, [x29, #132]
  440250:	tbnz	w21, #18, 44025c <ferror@plt+0x3d48c>
  440254:	cmp	w0, #0x800
  440258:	b.hi	44031c <ferror@plt+0x3d54c>  // b.pmore
  44025c:	mov	w1, #0x18                  	// #24
  440260:	mov	x24, sp
  440264:	cmp	w20, #0x1
  440268:	smull	x0, w0, w1
  44026c:	add	x0, x0, #0xf
  440270:	and	x0, x0, #0xfffffffffffffff0
  440274:	sub	sp, sp, x0
  440278:	ldrsw	x0, [x29, #148]
  44027c:	mov	x1, sp
  440280:	str	x1, [x29, #120]
  440284:	lsl	x0, x0, #3
  440288:	add	x0, x0, #0xf
  44028c:	and	x0, x0, #0xfffffffffffffff0
  440290:	sub	sp, sp, x0
  440294:	mov	x0, sp
  440298:	str	x0, [x29, #136]
  44029c:	b.eq	440388 <ferror@plt+0x3d5b8>  // b.none
  4402a0:	sub	w0, w20, #0x2
  4402a4:	cmp	w0, #0x1
  4402a8:	b.hi	44034c <ferror@plt+0x3d57c>  // b.pmore
  4402ac:	ldr	x0, [x29, #112]
  4402b0:	cmp	w20, #0x2
  4402b4:	cset	w19, ne  // ne = any
  4402b8:	add	x25, x0, #0xb
  4402bc:	str	x25, [x29, #112]
  4402c0:	add	w19, w19, #0x44
  4402c4:	ldrb	w1, [x0, #11]
  4402c8:	cmp	w1, #0x5f
  4402cc:	b.eq	440398 <ferror@plt+0x3d5c8>  // b.none
  4402d0:	mov	x0, x25
  4402d4:	bl	402700 <strlen@plt>
  4402d8:	mov	x1, x25
  4402dc:	mov	w2, w0
  4402e0:	add	x0, x29, #0x58
  4402e4:	bl	43d718 <ferror@plt+0x3a948>
  4402e8:	mov	x2, x0
  4402ec:	mov	w1, w19
  4402f0:	mov	x3, #0x0                   	// #0
  4402f4:	add	x0, x29, #0x58
  4402f8:	bl	43add8 <ferror@plt+0x38008>
  4402fc:	mov	x19, x0
  440300:	ldr	x20, [x29, #112]
  440304:	mov	x0, x20
  440308:	bl	402700 <strlen@plt>
  44030c:	add	x20, x20, x0
  440310:	str	x20, [x29, #112]
  440314:	b	440358 <ferror@plt+0x3d588>
  440318:	tbnz	w21, #4, 440344 <ferror@plt+0x3d574>
  44031c:	mov	w0, #0x0                   	// #0
  440320:	mov	sp, x29
  440324:	ldp	x19, x20, [sp, #16]
  440328:	ldp	x21, x22, [sp, #32]
  44032c:	ldp	x23, x24, [sp, #48]
  440330:	ldr	x25, [sp, #64]
  440334:	ldp	x29, x30, [sp], #176
  440338:	ret
  44033c:	mov	w20, #0x1                   	// #1
  440340:	b	440230 <ferror@plt+0x3d460>
  440344:	mov	w20, #0x0                   	// #0
  440348:	b	440230 <ferror@plt+0x3d460>
  44034c:	add	x0, x29, #0x58
  440350:	bl	43db60 <ferror@plt+0x3ad90>
  440354:	mov	x19, x0
  440358:	tbz	w21, #0, 440368 <ferror@plt+0x3d598>
  44035c:	ldr	x0, [x29, #112]
  440360:	ldrb	w0, [x0]
  440364:	cbnz	w0, 4403bc <ferror@plt+0x3d5ec>
  440368:	cbz	x19, 4403bc <ferror@plt+0x3d5ec>
  44036c:	mov	x3, x23
  440370:	mov	x2, x22
  440374:	mov	x1, x19
  440378:	mov	w0, w21
  44037c:	bl	440004 <ferror@plt+0x3d234>
  440380:	mov	sp, x24
  440384:	b	440320 <ferror@plt+0x3d550>
  440388:	mov	w1, w20
  44038c:	add	x0, x29, #0x58
  440390:	bl	43f33c <ferror@plt+0x3c56c>
  440394:	b	440354 <ferror@plt+0x3d584>
  440398:	ldrb	w1, [x0, #12]
  44039c:	cmp	w1, #0x5a
  4403a0:	b.ne	4402d0 <ferror@plt+0x3d500>  // b.any
  4403a4:	add	x0, x0, #0xd
  4403a8:	mov	w1, #0x0                   	// #0
  4403ac:	str	x0, [x29, #112]
  4403b0:	add	x0, x29, #0x58
  4403b4:	bl	43ed50 <ferror@plt+0x3bf80>
  4403b8:	b	4402e8 <ferror@plt+0x3d518>
  4403bc:	mov	w0, #0x0                   	// #0
  4403c0:	b	440380 <ferror@plt+0x3d5b0>
  4403c4:	stp	x29, x30, [sp, #-64]!
  4403c8:	mov	x29, sp
  4403cc:	add	x3, sp, #0x20
  4403d0:	str	x19, [sp, #16]
  4403d4:	mov	x19, x2
  4403d8:	adrp	x2, 43b000 <ferror@plt+0x38230>
  4403dc:	add	x2, x2, #0x548
  4403e0:	stp	xzr, xzr, [sp, #32]
  4403e4:	str	xzr, [sp, #48]
  4403e8:	str	wzr, [sp, #56]
  4403ec:	bl	440188 <ferror@plt+0x3d3b8>
  4403f0:	cbnz	w0, 440410 <ferror@plt+0x3d640>
  4403f4:	ldr	x0, [sp, #32]
  4403f8:	bl	402b30 <free@plt>
  4403fc:	str	xzr, [x19]
  440400:	mov	x0, #0x0                   	// #0
  440404:	ldr	x19, [sp, #16]
  440408:	ldp	x29, x30, [sp], #64
  44040c:	ret
  440410:	ldr	w0, [sp, #56]
  440414:	cmp	w0, #0x0
  440418:	ldr	x0, [sp, #48]
  44041c:	csinc	x0, x0, xzr, eq  // eq = none
  440420:	str	x0, [x19]
  440424:	ldr	x0, [sp, #32]
  440428:	b	440404 <ferror@plt+0x3d634>
  44042c:	stp	x29, x30, [sp, #-144]!
  440430:	mov	x29, sp
  440434:	stp	x19, x20, [sp, #16]
  440438:	mov	x19, x1
  44043c:	mov	x20, x2
  440440:	str	x21, [sp, #32]
  440444:	mov	x21, x0
  440448:	str	wzr, [x1]
  44044c:	str	wzr, [x2]
  440450:	bl	402700 <strlen@plt>
  440454:	mov	x2, x0
  440458:	add	x3, x29, #0x38
  44045c:	mov	x0, x21
  440460:	mov	w1, #0x4000                	// #16384
  440464:	bl	44015c <ferror@plt+0x3d38c>
  440468:	ldr	w0, [x29, #100]
  44046c:	mov	w1, #0x18                  	// #24
  440470:	smull	x0, w0, w1
  440474:	add	x0, x0, #0xf
  440478:	and	x0, x0, #0xfffffffffffffff0
  44047c:	sub	sp, sp, x0
  440480:	ldrsw	x0, [x29, #116]
  440484:	mov	x1, sp
  440488:	str	x1, [x29, #88]
  44048c:	mov	w1, #0x1                   	// #1
  440490:	lsl	x0, x0, #3
  440494:	add	x0, x0, #0xf
  440498:	and	x0, x0, #0xfffffffffffffff0
  44049c:	sub	sp, sp, x0
  4404a0:	mov	x0, sp
  4404a4:	str	x0, [x29, #104]
  4404a8:	add	x0, x29, #0x38
  4404ac:	bl	43f33c <ferror@plt+0x3c56c>
  4404b0:	adrp	x2, 46b000 <_obstack_memory_used@@Base+0x265fc>
  4404b4:	add	x2, x2, #0xc
  4404b8:	cbz	x0, 4404f8 <ferror@plt+0x3d728>
  4404bc:	ldr	w1, [x0]
  4404c0:	sub	w1, w1, #0x1
  4404c4:	cmp	w1, #0x7
  4404c8:	b.hi	440518 <ferror@plt+0x3d748>  // b.pmore
  4404cc:	ldrb	w1, [x2, w1, uxtw]
  4404d0:	adr	x3, 4404dc <ferror@plt+0x3d70c>
  4404d4:	add	x1, x3, w1, sxtb #2
  4404d8:	br	x1
  4404dc:	ldr	x0, [x0, #8]
  4404e0:	b	4404b8 <ferror@plt+0x3d6e8>
  4404e4:	ldr	x0, [x0, #16]
  4404e8:	b	4404b8 <ferror@plt+0x3d6e8>
  4404ec:	ldr	w0, [x0, #8]
  4404f0:	str	w0, [x19]
  4404f4:	mov	w0, #0x1                   	// #1
  4404f8:	mov	sp, x29
  4404fc:	ldp	x19, x20, [sp, #16]
  440500:	ldr	x21, [sp, #32]
  440504:	ldp	x29, x30, [sp], #144
  440508:	ret
  44050c:	ldr	w0, [x0, #8]
  440510:	str	w0, [x20]
  440514:	b	4404f4 <ferror@plt+0x3d724>
  440518:	mov	w0, #0x0                   	// #0
  44051c:	b	4404f8 <ferror@plt+0x3d728>
  440520:	stp	x29, x30, [sp, #-32]!
  440524:	mov	x29, sp
  440528:	add	x2, sp, #0x18
  44052c:	bl	4403c4 <ferror@plt+0x3d5f4>
  440530:	ldp	x29, x30, [sp], #32
  440534:	ret
  440538:	b	440188 <ferror@plt+0x3d3b8>
  44053c:	stp	x29, x30, [sp, #-32]!
  440540:	mov	w1, #0x25                  	// #37
  440544:	mov	x29, sp
  440548:	add	x2, sp, #0x18
  44054c:	bl	4403c4 <ferror@plt+0x3d5f4>
  440550:	ldp	x29, x30, [sp], #32
  440554:	ret
  440558:	mov	x3, x2
  44055c:	mov	x2, x1
  440560:	mov	w1, #0x25                  	// #37
  440564:	b	440188 <ferror@plt+0x3d3b8>
  440568:	stp	x29, x30, [sp, #-32]!
  44056c:	mov	x29, sp
  440570:	add	x2, sp, #0x1c
  440574:	add	x1, sp, #0x18
  440578:	bl	44042c <ferror@plt+0x3d65c>
  44057c:	cmp	w0, #0x0
  440580:	ldr	w0, [sp, #24]
  440584:	ldp	x29, x30, [sp], #32
  440588:	csel	w0, w0, wzr, ne  // ne = any
  44058c:	ret
  440590:	stp	x29, x30, [sp, #-32]!
  440594:	mov	x29, sp
  440598:	add	x2, sp, #0x1c
  44059c:	add	x1, sp, #0x18
  4405a0:	bl	44042c <ferror@plt+0x3d65c>
  4405a4:	cmp	w0, #0x0
  4405a8:	ldr	w0, [sp, #28]
  4405ac:	ldp	x29, x30, [sp], #32
  4405b0:	csel	w0, w0, wzr, ne  // ne = any
  4405b4:	ret
  4405b8:	mov	x1, #0x2301                	// #8961
  4405bc:	str	xzr, [x0, #16]
  4405c0:	movk	x1, #0x6745, lsl #16
  4405c4:	str	wzr, [x0, #24]
  4405c8:	movk	x1, #0xab89, lsl #32
  4405cc:	movk	x1, #0xefcd, lsl #48
  4405d0:	str	x1, [x0]
  4405d4:	mov	x1, #0xdcfe                	// #56574
  4405d8:	movk	x1, #0x98ba, lsl #16
  4405dc:	movk	x1, #0x5476, lsl #32
  4405e0:	movk	x1, #0x1032, lsl #48
  4405e4:	str	x1, [x0, #8]
  4405e8:	ret
  4405ec:	mov	x2, x0
  4405f0:	mov	x0, x1
  4405f4:	ldp	x3, x1, [x2]
  4405f8:	stp	x3, x1, [x0]
  4405fc:	ret
  440600:	stp	x29, x30, [sp, #-112]!
  440604:	and	x3, x1, #0xfffffffffffffffc
  440608:	add	x3, x0, x3
  44060c:	mov	x29, sp
  440610:	ldr	w4, [x2, #16]
  440614:	lsr	x5, x1, #32
  440618:	str	x3, [sp, #104]
  44061c:	add	w4, w4, w1
  440620:	ldr	w3, [x2, #20]
  440624:	stp	x21, x22, [sp, #32]
  440628:	cmp	x1, w4, uxtw
  44062c:	stp	x23, x24, [sp, #48]
  440630:	add	w3, w3, w5
  440634:	cinc	w1, w3, hi  // hi = pmore
  440638:	ldp	w23, w24, [x2, #8]
  44063c:	stp	x25, x26, [sp, #64]
  440640:	ldp	w26, w22, [x2]
  440644:	stp	x27, x28, [sp, #80]
  440648:	mov	w27, #0xcde6                	// #52710
  44064c:	mov	w28, #0x7d6                 	// #2006
  440650:	movk	w27, #0x21e1, lsl #16
  440654:	movk	w28, #0xc337, lsl #16
  440658:	stp	x19, x20, [sp, #16]
  44065c:	str	w4, [x2, #16]
  440660:	str	w1, [x2, #20]
  440664:	mov	w1, #0xa478                	// #42104
  440668:	movk	w1, #0xd76a, lsl #16
  44066c:	add	w5, w26, w1
  440670:	mov	w1, #0xb756                	// #46934
  440674:	movk	w1, #0xe8c7, lsl #16
  440678:	add	w4, w24, w1
  44067c:	mov	w1, #0x70db                	// #28891
  440680:	movk	w1, #0x2420, lsl #16
  440684:	add	w8, w23, w1
  440688:	mov	w1, #0xceee                	// #52974
  44068c:	movk	w1, #0xc1bd, lsl #16
  440690:	add	w10, w22, w1
  440694:	ldr	x1, [sp, #104]
  440698:	cmp	x0, x1
  44069c:	b.cc	4406c4 <ferror@plt+0x3d8f4>  // b.lo, b.ul, b.last
  4406a0:	stp	w26, w22, [x2]
  4406a4:	stp	w23, w24, [x2, #8]
  4406a8:	ldp	x19, x20, [sp, #16]
  4406ac:	ldp	x21, x22, [sp, #32]
  4406b0:	ldp	x23, x24, [sp, #48]
  4406b4:	ldp	x25, x26, [sp, #64]
  4406b8:	ldp	x27, x28, [sp, #80]
  4406bc:	ldp	x29, x30, [sp], #112
  4406c0:	ret
  4406c4:	ldp	w14, w7, [x0]
  4406c8:	eor	w3, w23, w24
  4406cc:	and	w3, w3, w22
  4406d0:	mov	w6, #0xfaf                 	// #4015
  4406d4:	eor	w3, w3, w24
  4406d8:	movk	w6, #0xf57c, lsl #16
  4406dc:	add	w3, w3, w14
  4406e0:	ldr	w11, [x0, #20]
  4406e4:	add	w3, w3, w5
  4406e8:	ldr	w20, [x0, #36]
  4406ec:	ldp	w16, w9, [x0, #8]
  4406f0:	ror	w3, w3, #25
  4406f4:	add	w1, w22, w3
  4406f8:	eor	w3, w22, w23
  4406fc:	and	w3, w3, w1
  440700:	mov	w12, #0xffff5bb1            	// #-42063
  440704:	eor	w3, w3, w23
  440708:	mov	w17, #0xd7be                	// #55230
  44070c:	add	w3, w3, w7
  440710:	movk	w17, #0x895c, lsl #16
  440714:	add	w3, w3, w4
  440718:	mov	w19, #0x7193                	// #29075
  44071c:	movk	w19, #0xfd98, lsl #16
  440720:	mov	w21, #0x438e                	// #17294
  440724:	movk	w21, #0xa679, lsl #16
  440728:	ror	w3, w3, #20
  44072c:	add	w5, w1, w3
  440730:	eor	w3, w22, w1
  440734:	and	w3, w3, w5
  440738:	mov	w25, #0x821                 	// #2081
  44073c:	eor	w3, w3, w22
  440740:	movk	w25, #0x49b4, lsl #16
  440744:	add	w3, w3, w16
  440748:	add	x0, x0, #0x40
  44074c:	add	w3, w3, w8
  440750:	ror	w3, w3, #15
  440754:	add	w4, w5, w3
  440758:	eor	w3, w1, w5
  44075c:	and	w3, w3, w4
  440760:	eor	w3, w3, w1
  440764:	add	w3, w3, w9
  440768:	add	w3, w3, w10
  44076c:	ror	w3, w3, #10
  440770:	add	w13, w4, w3
  440774:	eor	w3, w5, w4
  440778:	and	w3, w3, w13
  44077c:	eor	w3, w3, w5
  440780:	add	w3, w3, w1
  440784:	ldur	w1, [x0, #-48]
  440788:	add	w6, w1, w6
  44078c:	add	w3, w6, w3
  440790:	ror	w3, w3, #25
  440794:	add	w6, w13, w3
  440798:	eor	w3, w4, w13
  44079c:	and	w3, w3, w6
  4407a0:	eor	w3, w3, w4
  4407a4:	add	w3, w3, w5
  4407a8:	mov	w5, #0xc62a                	// #50730
  4407ac:	movk	w5, #0x4787, lsl #16
  4407b0:	add	w18, w11, w5
  4407b4:	add	w3, w18, w3
  4407b8:	mov	w5, #0x4613                	// #17939
  4407bc:	movk	w5, #0xa830, lsl #16
  4407c0:	ror	w3, w3, #20
  4407c4:	add	w18, w6, w3
  4407c8:	eor	w3, w13, w6
  4407cc:	and	w3, w3, w18
  4407d0:	eor	w3, w3, w13
  4407d4:	add	w3, w3, w4
  4407d8:	ldur	w4, [x0, #-40]
  4407dc:	add	w5, w4, w5
  4407e0:	add	w5, w5, w3
  4407e4:	eor	w3, w6, w18
  4407e8:	ror	w5, w5, #15
  4407ec:	add	w8, w18, w5
  4407f0:	mov	w5, #0x9501                	// #38145
  4407f4:	and	w3, w3, w8
  4407f8:	movk	w5, #0xfd46, lsl #16
  4407fc:	eor	w3, w3, w6
  440800:	add	w3, w3, w13
  440804:	ldur	w13, [x0, #-36]
  440808:	add	w5, w13, w5
  44080c:	add	w5, w5, w3
  440810:	eor	w3, w18, w8
  440814:	ror	w5, w5, #10
  440818:	add	w15, w8, w5
  44081c:	mov	w5, #0x98d8                	// #39128
  440820:	and	w3, w3, w15
  440824:	movk	w5, #0x6980, lsl #16
  440828:	eor	w3, w3, w18
  44082c:	add	w3, w3, w6
  440830:	ldur	w6, [x0, #-32]
  440834:	add	w10, w6, w5
  440838:	mov	w5, #0xf7af                	// #63407
  44083c:	add	w10, w10, w3
  440840:	eor	w3, w8, w15
  440844:	movk	w5, #0x8b44, lsl #16
  440848:	ror	w10, w10, #25
  44084c:	add	w10, w15, w10
  440850:	and	w3, w3, w10
  440854:	eor	w3, w3, w8
  440858:	add	w3, w3, w18
  44085c:	add	w18, w20, w5
  440860:	add	w3, w18, w3
  440864:	eor	w5, w15, w10
  440868:	ror	w18, w3, #20
  44086c:	add	w3, w10, w18
  440870:	and	w5, w5, w3
  440874:	eor	w5, w5, w15
  440878:	add	w5, w5, w8
  44087c:	ldur	w8, [x0, #-24]
  440880:	add	w12, w8, w12
  440884:	add	w12, w12, w5
  440888:	eor	w5, w10, w3
  44088c:	ror	w12, w12, #15
  440890:	add	w12, w3, w12
  440894:	and	w5, w5, w12
  440898:	eor	w5, w5, w10
  44089c:	add	w5, w5, w15
  4408a0:	ldur	w15, [x0, #-20]
  4408a4:	add	w18, w15, w17
  4408a8:	eor	w17, w3, w12
  4408ac:	add	w5, w18, w5
  4408b0:	ror	w18, w5, #10
  4408b4:	add	w5, w12, w18
  4408b8:	mov	w18, #0x1122                	// #4386
  4408bc:	and	w17, w17, w5
  4408c0:	movk	w18, #0x6b90, lsl #16
  4408c4:	eor	w17, w17, w3
  4408c8:	add	w17, w17, w10
  4408cc:	ldur	w10, [x0, #-16]
  4408d0:	add	w18, w10, w18
  4408d4:	add	w17, w18, w17
  4408d8:	eor	w18, w12, w5
  4408dc:	ror	w17, w17, #25
  4408e0:	add	w17, w5, w17
  4408e4:	and	w18, w18, w17
  4408e8:	eor	w18, w18, w12
  4408ec:	add	w18, w18, w3
  4408f0:	ldur	w3, [x0, #-12]
  4408f4:	add	w19, w3, w19
  4408f8:	add	w19, w19, w18
  4408fc:	eor	w18, w5, w17
  440900:	ror	w19, w19, #20
  440904:	add	w19, w17, w19
  440908:	and	w18, w18, w19
  44090c:	eor	w18, w18, w5
  440910:	add	w18, w18, w12
  440914:	ldur	w12, [x0, #-8]
  440918:	add	w21, w12, w21
  44091c:	add	w21, w21, w18
  440920:	eor	w18, w17, w19
  440924:	ror	w21, w21, #15
  440928:	add	w21, w19, w21
  44092c:	and	w18, w18, w21
  440930:	eor	w18, w18, w17
  440934:	add	w18, w18, w5
  440938:	ldur	w5, [x0, #-4]
  44093c:	add	w25, w5, w25
  440940:	add	w18, w25, w18
  440944:	ror	w18, w18, #10
  440948:	add	w18, w21, w18
  44094c:	eor	w25, w21, w18
  440950:	and	w25, w25, w19
  440954:	eor	w25, w25, w21
  440958:	add	w17, w25, w17
  44095c:	mov	w25, #0x2562                	// #9570
  440960:	movk	w25, #0xf61e, lsl #16
  440964:	add	w25, w7, w25
  440968:	add	w17, w25, w17
  44096c:	ror	w17, w17, #27
  440970:	add	w17, w18, w17
  440974:	eor	w25, w18, w17
  440978:	and	w25, w25, w21
  44097c:	eor	w25, w25, w18
  440980:	add	w19, w25, w19
  440984:	mov	w25, #0xb340                	// #45888
  440988:	movk	w25, #0xc040, lsl #16
  44098c:	add	w25, w4, w25
  440990:	add	w19, w25, w19
  440994:	ror	w19, w19, #23
  440998:	add	w19, w17, w19
  44099c:	eor	w25, w17, w19
  4409a0:	and	w25, w25, w18
  4409a4:	eor	w25, w25, w17
  4409a8:	add	w21, w25, w21
  4409ac:	mov	w25, #0x5a51                	// #23121
  4409b0:	movk	w25, #0x265e, lsl #16
  4409b4:	add	w25, w15, w25
  4409b8:	add	w21, w25, w21
  4409bc:	ror	w21, w21, #18
  4409c0:	add	w21, w19, w21
  4409c4:	eor	w25, w19, w21
  4409c8:	and	w25, w25, w17
  4409cc:	eor	w25, w25, w19
  4409d0:	add	w18, w25, w18
  4409d4:	mov	w25, #0xc7aa                	// #51114
  4409d8:	movk	w25, #0xe9b6, lsl #16
  4409dc:	add	w25, w14, w25
  4409e0:	add	w18, w25, w18
  4409e4:	ror	w18, w18, #12
  4409e8:	add	w18, w21, w18
  4409ec:	eor	w25, w21, w18
  4409f0:	and	w25, w25, w19
  4409f4:	eor	w25, w25, w21
  4409f8:	add	w17, w25, w17
  4409fc:	mov	w25, #0x105d                	// #4189
  440a00:	movk	w25, #0xd62f, lsl #16
  440a04:	add	w25, w11, w25
  440a08:	add	w17, w25, w17
  440a0c:	ror	w17, w17, #27
  440a10:	add	w17, w18, w17
  440a14:	eor	w25, w18, w17
  440a18:	and	w25, w25, w21
  440a1c:	eor	w25, w25, w18
  440a20:	add	w19, w25, w19
  440a24:	mov	w25, #0x1453                	// #5203
  440a28:	movk	w25, #0x244, lsl #16
  440a2c:	add	w25, w8, w25
  440a30:	add	w19, w25, w19
  440a34:	ror	w19, w19, #23
  440a38:	add	w19, w17, w19
  440a3c:	eor	w25, w17, w19
  440a40:	and	w25, w25, w18
  440a44:	eor	w25, w25, w17
  440a48:	add	w21, w25, w21
  440a4c:	mov	w25, #0xe681                	// #59009
  440a50:	movk	w25, #0xd8a1, lsl #16
  440a54:	add	w25, w5, w25
  440a58:	add	w21, w25, w21
  440a5c:	ror	w21, w21, #18
  440a60:	add	w21, w19, w21
  440a64:	eor	w25, w19, w21
  440a68:	and	w25, w25, w17
  440a6c:	eor	w25, w25, w19
  440a70:	add	w18, w25, w18
  440a74:	mov	w25, #0xfbc8                	// #64456
  440a78:	movk	w25, #0xe7d3, lsl #16
  440a7c:	add	w25, w1, w25
  440a80:	add	w18, w25, w18
  440a84:	ror	w18, w18, #12
  440a88:	add	w18, w21, w18
  440a8c:	eor	w25, w21, w18
  440a90:	and	w25, w25, w19
  440a94:	eor	w25, w25, w21
  440a98:	add	w17, w25, w17
  440a9c:	add	w25, w20, w27
  440aa0:	add	w17, w25, w17
  440aa4:	ror	w17, w17, #27
  440aa8:	add	w17, w18, w17
  440aac:	eor	w25, w18, w17
  440ab0:	and	w25, w25, w21
  440ab4:	eor	w25, w25, w18
  440ab8:	add	w19, w25, w19
  440abc:	add	w25, w12, w28
  440ac0:	add	w19, w25, w19
  440ac4:	ror	w19, w19, #23
  440ac8:	add	w19, w17, w19
  440acc:	eor	w25, w17, w19
  440ad0:	and	w25, w25, w18
  440ad4:	eor	w25, w25, w17
  440ad8:	add	w21, w25, w21
  440adc:	mov	w25, #0xd87                 	// #3463
  440ae0:	movk	w25, #0xf4d5, lsl #16
  440ae4:	add	w25, w9, w25
  440ae8:	add	w21, w25, w21
  440aec:	ror	w21, w21, #18
  440af0:	add	w21, w19, w21
  440af4:	eor	w25, w19, w21
  440af8:	and	w25, w25, w17
  440afc:	eor	w25, w25, w19
  440b00:	add	w18, w25, w18
  440b04:	mov	w25, #0x14ed                	// #5357
  440b08:	movk	w25, #0x455a, lsl #16
  440b0c:	add	w25, w6, w25
  440b10:	add	w18, w25, w18
  440b14:	ror	w18, w18, #12
  440b18:	add	w18, w21, w18
  440b1c:	eor	w25, w21, w18
  440b20:	and	w25, w25, w19
  440b24:	eor	w25, w25, w21
  440b28:	add	w17, w25, w17
  440b2c:	mov	w25, #0xe905                	// #59653
  440b30:	movk	w25, #0xa9e3, lsl #16
  440b34:	add	w25, w3, w25
  440b38:	add	w17, w25, w17
  440b3c:	ror	w17, w17, #27
  440b40:	add	w17, w18, w17
  440b44:	eor	w25, w18, w17
  440b48:	and	w25, w25, w21
  440b4c:	eor	w25, w25, w18
  440b50:	add	w19, w25, w19
  440b54:	mov	w25, #0xa3f8                	// #41976
  440b58:	movk	w25, #0xfcef, lsl #16
  440b5c:	add	w25, w16, w25
  440b60:	add	w19, w25, w19
  440b64:	ror	w19, w19, #23
  440b68:	add	w19, w17, w19
  440b6c:	eor	w25, w17, w19
  440b70:	and	w25, w25, w18
  440b74:	eor	w25, w25, w17
  440b78:	add	w21, w25, w21
  440b7c:	mov	w25, #0x2d9                 	// #729
  440b80:	movk	w25, #0x676f, lsl #16
  440b84:	add	w25, w13, w25
  440b88:	add	w21, w25, w21
  440b8c:	ror	w21, w21, #18
  440b90:	add	w21, w19, w21
  440b94:	eor	w25, w19, w21
  440b98:	and	w30, w25, w17
  440b9c:	eor	w30, w30, w19
  440ba0:	add	w18, w30, w18
  440ba4:	mov	w30, #0x4c8a                	// #19594
  440ba8:	movk	w30, #0x8d2a, lsl #16
  440bac:	add	w30, w10, w30
  440bb0:	add	w18, w30, w18
  440bb4:	ror	w18, w18, #12
  440bb8:	add	w18, w21, w18
  440bbc:	eor	w25, w25, w18
  440bc0:	add	w17, w25, w17
  440bc4:	sub	w25, w11, #0x5c, lsl #12
  440bc8:	sub	w25, w25, #0x6be
  440bcc:	add	w17, w25, w17
  440bd0:	eor	w25, w21, w18
  440bd4:	ror	w17, w17, #28
  440bd8:	add	w17, w18, w17
  440bdc:	eor	w25, w25, w17
  440be0:	add	w19, w25, w19
  440be4:	mov	w25, #0xf681                	// #63105
  440be8:	movk	w25, #0x8771, lsl #16
  440bec:	add	w25, w6, w25
  440bf0:	add	w19, w25, w19
  440bf4:	eor	w25, w18, w17
  440bf8:	ror	w19, w19, #21
  440bfc:	add	w19, w17, w19
  440c00:	eor	w25, w25, w19
  440c04:	add	w21, w25, w21
  440c08:	mov	w25, #0x6122                	// #24866
  440c0c:	movk	w25, #0x6d9d, lsl #16
  440c10:	add	w25, w15, w25
  440c14:	add	w21, w25, w21
  440c18:	eor	w25, w17, w19
  440c1c:	ror	w21, w21, #16
  440c20:	add	w21, w19, w21
  440c24:	eor	w25, w25, w21
  440c28:	add	w18, w25, w18
  440c2c:	mov	w25, #0x380c                	// #14348
  440c30:	movk	w25, #0xfde5, lsl #16
  440c34:	add	w25, w12, w25
  440c38:	add	w25, w25, w18
  440c3c:	eor	w18, w19, w21
  440c40:	ror	w25, w25, #9
  440c44:	add	w25, w21, w25
  440c48:	eor	w18, w18, w25
  440c4c:	add	w17, w18, w17
  440c50:	mov	w18, #0xea44                	// #59972
  440c54:	movk	w18, #0xa4be, lsl #16
  440c58:	add	w18, w7, w18
  440c5c:	add	w17, w18, w17
  440c60:	eor	w18, w21, w25
  440c64:	ror	w17, w17, #28
  440c68:	add	w17, w25, w17
  440c6c:	eor	w18, w18, w17
  440c70:	add	w19, w18, w19
  440c74:	mov	w18, #0xcfa9                	// #53161
  440c78:	movk	w18, #0x4bde, lsl #16
  440c7c:	add	w18, w1, w18
  440c80:	add	w19, w18, w19
  440c84:	eor	w18, w25, w17
  440c88:	ror	w19, w19, #21
  440c8c:	add	w19, w17, w19
  440c90:	eor	w18, w18, w19
  440c94:	add	w21, w18, w21
  440c98:	mov	w18, #0x4b60                	// #19296
  440c9c:	movk	w18, #0xf6bb, lsl #16
  440ca0:	add	w18, w13, w18
  440ca4:	add	w18, w18, w21
  440ca8:	eor	w21, w17, w19
  440cac:	ror	w18, w18, #16
  440cb0:	add	w18, w19, w18
  440cb4:	eor	w21, w21, w18
  440cb8:	add	w25, w21, w25
  440cbc:	mov	w21, #0xbc70                	// #48240
  440cc0:	movk	w21, #0xbebf, lsl #16
  440cc4:	add	w21, w8, w21
  440cc8:	add	w25, w21, w25
  440ccc:	eor	w21, w19, w18
  440cd0:	sub	w8, w8, #0x100, lsl #12
  440cd4:	sub	w8, w8, #0xb83
  440cd8:	ror	w25, w25, #9
  440cdc:	add	w25, w18, w25
  440ce0:	eor	w21, w21, w25
  440ce4:	add	w17, w21, w17
  440ce8:	mov	w21, #0x7ec6                	// #32454
  440cec:	movk	w21, #0x289b, lsl #16
  440cf0:	add	w21, w3, w21
  440cf4:	add	w21, w21, w17
  440cf8:	eor	w17, w18, w25
  440cfc:	ror	w21, w21, #28
  440d00:	add	w21, w25, w21
  440d04:	eor	w17, w17, w21
  440d08:	add	w19, w17, w19
  440d0c:	mov	w17, #0x27fa                	// #10234
  440d10:	movk	w17, #0xeaa1, lsl #16
  440d14:	add	w17, w14, w17
  440d18:	add	w17, w17, w19
  440d1c:	eor	w19, w25, w21
  440d20:	ror	w17, w17, #21
  440d24:	add	w17, w21, w17
  440d28:	eor	w19, w19, w17
  440d2c:	add	w18, w19, w18
  440d30:	mov	w19, #0x3085                	// #12421
  440d34:	movk	w19, #0xd4ef, lsl #16
  440d38:	add	w19, w9, w19
  440d3c:	add	w19, w19, w18
  440d40:	eor	w18, w21, w17
  440d44:	ror	w19, w19, #16
  440d48:	add	w19, w17, w19
  440d4c:	eor	w18, w18, w19
  440d50:	add	w25, w18, w25
  440d54:	mov	w18, #0x1d05                	// #7429
  440d58:	movk	w18, #0x488, lsl #16
  440d5c:	add	w18, w4, w18
  440d60:	add	w25, w18, w25
  440d64:	eor	w18, w17, w19
  440d68:	ror	w25, w25, #9
  440d6c:	add	w25, w19, w25
  440d70:	eor	w18, w18, w25
  440d74:	add	w21, w18, w21
  440d78:	mov	w18, #0xd039                	// #53305
  440d7c:	movk	w18, #0xd9d4, lsl #16
  440d80:	add	w18, w20, w18
  440d84:	add	w18, w18, w21
  440d88:	eor	w21, w19, w25
  440d8c:	ror	w18, w18, #28
  440d90:	add	w18, w25, w18
  440d94:	eor	w21, w21, w18
  440d98:	add	w17, w21, w17
  440d9c:	mov	w21, #0x99e5                	// #39397
  440da0:	movk	w21, #0xe6db, lsl #16
  440da4:	add	w21, w10, w21
  440da8:	add	w21, w21, w17
  440dac:	eor	w17, w25, w18
  440db0:	ror	w21, w21, #21
  440db4:	add	w21, w18, w21
  440db8:	eor	w17, w17, w21
  440dbc:	add	w19, w17, w19
  440dc0:	mov	w17, #0x7cf8                	// #31992
  440dc4:	movk	w17, #0x1fa2, lsl #16
  440dc8:	add	w17, w5, w17
  440dcc:	add	w19, w17, w19
  440dd0:	eor	w17, w18, w21
  440dd4:	ror	w19, w19, #16
  440dd8:	add	w19, w21, w19
  440ddc:	eor	w17, w17, w19
  440de0:	add	w25, w17, w25
  440de4:	mov	w17, #0x5665                	// #22117
  440de8:	movk	w17, #0xc4ac, lsl #16
  440dec:	add	w17, w16, w17
  440df0:	add	w17, w17, w25
  440df4:	ror	w17, w17, #9
  440df8:	add	w17, w19, w17
  440dfc:	orn	w25, w17, w21
  440e00:	eor	w25, w25, w19
  440e04:	add	w18, w25, w18
  440e08:	mov	w25, #0x2244                	// #8772
  440e0c:	movk	w25, #0xf429, lsl #16
  440e10:	add	w14, w14, w25
  440e14:	add	w18, w14, w18
  440e18:	ror	w18, w18, #26
  440e1c:	add	w18, w17, w18
  440e20:	orn	w14, w18, w19
  440e24:	eor	w14, w14, w17
  440e28:	add	w21, w14, w21
  440e2c:	mov	w14, #0xff97                	// #65431
  440e30:	movk	w14, #0x432a, lsl #16
  440e34:	add	w13, w13, w14
  440e38:	add	w21, w13, w21
  440e3c:	ror	w21, w21, #22
  440e40:	add	w21, w18, w21
  440e44:	orn	w13, w21, w17
  440e48:	eor	w13, w13, w18
  440e4c:	add	w19, w13, w19
  440e50:	mov	w13, #0x23a7                	// #9127
  440e54:	movk	w13, #0xab94, lsl #16
  440e58:	add	w12, w12, w13
  440e5c:	add	w19, w12, w19
  440e60:	ror	w19, w19, #17
  440e64:	add	w19, w21, w19
  440e68:	orn	w12, w19, w18
  440e6c:	eor	w12, w12, w21
  440e70:	add	w17, w12, w17
  440e74:	mov	w12, #0xa039                	// #41017
  440e78:	movk	w12, #0xfc93, lsl #16
  440e7c:	add	w11, w11, w12
  440e80:	add	w17, w11, w17
  440e84:	ror	w17, w17, #11
  440e88:	add	w17, w19, w17
  440e8c:	orn	w11, w17, w21
  440e90:	eor	w11, w11, w19
  440e94:	add	w18, w11, w18
  440e98:	mov	w11, #0x59c3                	// #22979
  440e9c:	movk	w11, #0x655b, lsl #16
  440ea0:	add	w10, w10, w11
  440ea4:	add	w18, w10, w18
  440ea8:	ror	w18, w18, #26
  440eac:	add	w18, w17, w18
  440eb0:	orn	w10, w18, w19
  440eb4:	eor	w10, w10, w17
  440eb8:	add	w21, w10, w21
  440ebc:	mov	w10, #0xcc92                	// #52370
  440ec0:	movk	w10, #0x8f0c, lsl #16
  440ec4:	add	w9, w9, w10
  440ec8:	add	w21, w9, w21
  440ecc:	ror	w21, w21, #22
  440ed0:	add	w21, w18, w21
  440ed4:	orn	w9, w21, w17
  440ed8:	eor	w9, w9, w18
  440edc:	add	w19, w9, w19
  440ee0:	add	w8, w8, w19
  440ee4:	ror	w8, w8, #17
  440ee8:	add	w8, w21, w8
  440eec:	orn	w9, w8, w18
  440ef0:	eor	w9, w9, w21
  440ef4:	add	w17, w9, w17
  440ef8:	mov	w9, #0x5dd1                	// #24017
  440efc:	movk	w9, #0x8584, lsl #16
  440f00:	add	w7, w7, w9
  440f04:	add	w17, w7, w17
  440f08:	ror	w17, w17, #11
  440f0c:	add	w17, w8, w17
  440f10:	orn	w7, w17, w21
  440f14:	eor	w7, w7, w8
  440f18:	add	w18, w7, w18
  440f1c:	mov	w7, #0x7e4f                	// #32335
  440f20:	movk	w7, #0x6fa8, lsl #16
  440f24:	add	w6, w6, w7
  440f28:	add	w18, w6, w18
  440f2c:	ror	w18, w18, #26
  440f30:	add	w18, w17, w18
  440f34:	orn	w6, w18, w8
  440f38:	eor	w6, w6, w17
  440f3c:	add	w21, w6, w21
  440f40:	mov	w6, #0xe6e0                	// #59104
  440f44:	movk	w6, #0xfe2c, lsl #16
  440f48:	add	w5, w5, w6
  440f4c:	add	w21, w5, w21
  440f50:	ror	w21, w21, #22
  440f54:	add	w21, w18, w21
  440f58:	orn	w5, w21, w17
  440f5c:	eor	w5, w5, w18
  440f60:	add	w8, w5, w8
  440f64:	mov	w5, #0x4314                	// #17172
  440f68:	movk	w5, #0xa301, lsl #16
  440f6c:	add	w4, w4, w5
  440f70:	add	w8, w4, w8
  440f74:	ror	w8, w8, #17
  440f78:	add	w8, w21, w8
  440f7c:	orn	w4, w8, w18
  440f80:	eor	w4, w4, w21
  440f84:	add	w17, w4, w17
  440f88:	mov	w4, #0x11a1                	// #4513
  440f8c:	movk	w4, #0x4e08, lsl #16
  440f90:	add	w3, w3, w4
  440f94:	add	w17, w3, w17
  440f98:	ror	w17, w17, #11
  440f9c:	add	w17, w8, w17
  440fa0:	orn	w3, w17, w21
  440fa4:	eor	w3, w3, w8
  440fa8:	add	w18, w3, w18
  440fac:	mov	w3, #0x7e82                	// #32386
  440fb0:	movk	w3, #0xf753, lsl #16
  440fb4:	add	w1, w1, w3
  440fb8:	add	w18, w1, w18
  440fbc:	ror	w18, w18, #26
  440fc0:	add	w18, w17, w18
  440fc4:	orn	w1, w18, w8
  440fc8:	add	w26, w26, w18
  440fcc:	eor	w1, w1, w17
  440fd0:	add	w21, w1, w21
  440fd4:	mov	w1, #0xf235                	// #62005
  440fd8:	movk	w1, #0xbd3a, lsl #16
  440fdc:	add	w15, w15, w1
  440fe0:	add	w21, w15, w21
  440fe4:	ror	w21, w21, #22
  440fe8:	add	w21, w18, w21
  440fec:	orn	w1, w21, w17
  440ff0:	add	w24, w24, w21
  440ff4:	eor	w1, w1, w18
  440ff8:	add	w8, w1, w8
  440ffc:	mov	w1, #0xd2bb                	// #53947
  441000:	movk	w1, #0x2ad7, lsl #16
  441004:	add	w16, w16, w1
  441008:	add	w8, w16, w8
  44100c:	ror	w8, w8, #17
  441010:	add	w8, w21, w8
  441014:	orn	w1, w8, w18
  441018:	add	w23, w23, w8
  44101c:	eor	w1, w1, w21
  441020:	add	w17, w1, w17
  441024:	mov	w1, #0xd391                	// #54161
  441028:	movk	w1, #0xeb86, lsl #16
  44102c:	add	w20, w20, w1
  441030:	add	w17, w20, w17
  441034:	ror	w17, w17, #11
  441038:	add	w17, w8, w17
  44103c:	add	w22, w22, w17
  441040:	b	440664 <ferror@plt+0x3d894>
  441044:	stp	x29, x30, [sp, #-48]!
  441048:	mov	x29, sp
  44104c:	stp	x19, x20, [sp, #16]
  441050:	mov	x19, x0
  441054:	ldr	w0, [x0, #24]
  441058:	stp	x21, x22, [sp, #32]
  44105c:	mov	x22, x1
  441060:	ldr	w2, [x19, #16]
  441064:	adds	w2, w2, w0
  441068:	str	w2, [x19, #16]
  44106c:	b.cc	44107c <ferror@plt+0x3e2ac>  // b.lo, b.ul, b.last
  441070:	ldr	w1, [x19, #20]
  441074:	add	w1, w1, #0x1
  441078:	str	w1, [x19, #20]
  44107c:	cmp	w0, #0x38
  441080:	mov	w20, #0x78                  	// #120
  441084:	mov	w21, w0
  441088:	sub	w1, w20, w0
  44108c:	mov	w20, #0x38                  	// #56
  441090:	sub	w20, w20, w0
  441094:	csel	x20, x20, x1, cc  // cc = lo, ul, last
  441098:	add	x0, x21, #0x1c
  44109c:	mov	x2, x20
  4410a0:	add	x0, x19, x0
  4410a4:	add	x20, x20, x21
  4410a8:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4410ac:	add	x1, x1, #0x21c
  4410b0:	bl	4026a0 <memcpy@plt>
  4410b4:	ldr	w2, [x19, #16]
  4410b8:	add	x1, x19, x20
  4410bc:	lsl	w0, w2, #3
  4410c0:	str	w0, [x1, #28]
  4410c4:	ldr	w0, [x19, #20]
  4410c8:	extr	w0, w0, w2, #29
  4410cc:	str	w0, [x1, #32]
  4410d0:	mov	x2, x19
  4410d4:	add	x1, x20, #0x8
  4410d8:	add	x0, x19, #0x1c
  4410dc:	bl	440600 <ferror@plt+0x3d830>
  4410e0:	mov	x1, x22
  4410e4:	mov	x0, x19
  4410e8:	ldp	x19, x20, [sp, #16]
  4410ec:	ldp	x21, x22, [sp, #32]
  4410f0:	ldp	x29, x30, [sp], #48
  4410f4:	b	4405ec <ferror@plt+0x3d81c>
  4410f8:	stp	x29, x30, [sp, #-80]!
  4410fc:	mov	x29, sp
  441100:	stp	x21, x22, [sp, #32]
  441104:	ldr	w21, [x2, #24]
  441108:	stp	x19, x20, [sp, #16]
  44110c:	mov	x19, x1
  441110:	stp	x23, x24, [sp, #48]
  441114:	stp	x25, x26, [sp, #64]
  441118:	mov	x26, x0
  44111c:	mov	x25, x2
  441120:	cbz	w21, 4411a4 <ferror@plt+0x3e3d4>
  441124:	mov	x20, #0x80                  	// #128
  441128:	mov	w22, w21
  44112c:	sub	x20, x20, w21, uxtw
  441130:	add	x0, x22, #0x1c
  441134:	cmp	x20, x1
  441138:	add	x0, x25, x0
  44113c:	csel	x20, x20, x1, ls  // ls = plast
  441140:	mov	x1, x26
  441144:	mov	x2, x20
  441148:	add	x22, x22, x20
  44114c:	bl	4026a0 <memcpy@plt>
  441150:	ldr	w1, [x25, #24]
  441154:	cmp	x22, #0x40
  441158:	add	w1, w1, w20
  44115c:	str	w1, [x25, #24]
  441160:	b.ls	44119c <ferror@plt+0x3e3cc>  // b.plast
  441164:	add	x23, x25, #0x1c
  441168:	and	x24, x22, #0xffffffffffffffc0
  44116c:	mov	x2, x25
  441170:	mov	x1, x24
  441174:	mov	x0, x23
  441178:	bl	440600 <ferror@plt+0x3d830>
  44117c:	add	x1, x24, #0x1c
  441180:	add	w21, w21, w20
  441184:	and	x2, x22, #0x3f
  441188:	add	x1, x25, x1
  44118c:	mov	x0, x23
  441190:	and	w21, w21, #0x3f
  441194:	bl	4026a0 <memcpy@plt>
  441198:	str	w21, [x25, #24]
  44119c:	add	x26, x26, x20
  4411a0:	sub	x19, x19, x20
  4411a4:	cmp	x19, #0x40
  4411a8:	b.ls	441250 <ferror@plt+0x3e480>  // b.plast
  4411ac:	tst	x26, #0x3
  4411b0:	b.eq	441234 <ferror@plt+0x3e464>  // b.none
  4411b4:	mov	x20, x26
  4411b8:	add	x21, x25, #0x1c
  4411bc:	add	x22, x26, x19
  4411c0:	ldp	x0, x1, [x20]
  4411c4:	stp	x0, x1, [x21]
  4411c8:	mov	x2, x25
  4411cc:	ldp	x0, x1, [x20, #16]
  4411d0:	stp	x0, x1, [x21, #16]
  4411d4:	add	x20, x20, #0x40
  4411d8:	ldp	x0, x1, [x20, #-32]
  4411dc:	stp	x0, x1, [x21, #32]
  4411e0:	ldp	x0, x1, [x20, #-16]
  4411e4:	stp	x0, x1, [x21, #48]
  4411e8:	mov	x0, x21
  4411ec:	mov	x1, #0x40                  	// #64
  4411f0:	bl	440600 <ferror@plt+0x3d830>
  4411f4:	sub	x0, x22, x20
  4411f8:	cmp	x0, #0x40
  4411fc:	b.hi	4411c0 <ferror@plt+0x3e3f0>  // b.pmore
  441200:	sub	x3, x19, #0x41
  441204:	sub	x19, x19, #0x40
  441208:	mov	x1, #0xffffffffffffffc0    	// #-64
  44120c:	lsr	x3, x3, #6
  441210:	add	x0, x3, #0x1
  441214:	madd	x19, x3, x1, x19
  441218:	add	x26, x26, x0, lsl #6
  44121c:	mov	x2, x19
  441220:	mov	x1, x26
  441224:	add	x0, x25, #0x1c
  441228:	bl	4026a0 <memcpy@plt>
  44122c:	str	w19, [x25, #24]
  441230:	b	441254 <ferror@plt+0x3e484>
  441234:	and	x20, x19, #0xffffffffffffffc0
  441238:	mov	x0, x26
  44123c:	and	x19, x19, #0x3f
  441240:	add	x26, x26, x20
  441244:	mov	x2, x25
  441248:	mov	x1, x20
  44124c:	bl	440600 <ferror@plt+0x3d830>
  441250:	cbnz	x19, 44121c <ferror@plt+0x3e44c>
  441254:	ldp	x19, x20, [sp, #16]
  441258:	ldp	x21, x22, [sp, #32]
  44125c:	ldp	x23, x24, [sp, #48]
  441260:	ldp	x25, x26, [sp, #64]
  441264:	ldp	x29, x30, [sp], #80
  441268:	ret
  44126c:	stp	x29, x30, [sp, #-192]!
  441270:	mov	x3, x0
  441274:	mov	x4, x1
  441278:	mov	x29, sp
  44127c:	add	x0, sp, #0x20
  441280:	str	x19, [sp, #16]
  441284:	mov	x19, x2
  441288:	bl	4405b8 <ferror@plt+0x3d7e8>
  44128c:	add	x2, sp, #0x20
  441290:	mov	x1, x4
  441294:	mov	x0, x3
  441298:	bl	4410f8 <ferror@plt+0x3e328>
  44129c:	mov	x1, x19
  4412a0:	add	x0, sp, #0x20
  4412a4:	bl	441044 <ferror@plt+0x3e274>
  4412a8:	ldr	x19, [sp, #16]
  4412ac:	ldp	x29, x30, [sp], #192
  4412b0:	ret
  4412b4:	mov	x12, #0x1120                	// #4384
  4412b8:	sub	sp, sp, x12
  4412bc:	stp	x29, x30, [sp]
  4412c0:	mov	x29, sp
  4412c4:	stp	x21, x22, [sp, #32]
  4412c8:	mov	x22, #0x1000                	// #4096
  4412cc:	mov	x21, x1
  4412d0:	stp	x19, x20, [sp, #16]
  4412d4:	mov	x20, x0
  4412d8:	add	x0, sp, #0x38
  4412dc:	bl	4405b8 <ferror@plt+0x3d7e8>
  4412e0:	mov	x19, #0x0                   	// #0
  4412e4:	add	x0, sp, #0xd8
  4412e8:	sub	x2, x22, x19
  4412ec:	add	x0, x0, x19
  4412f0:	mov	x3, x20
  4412f4:	mov	x1, #0x1                   	// #1
  4412f8:	bl	402b00 <fread@plt>
  4412fc:	add	x19, x19, x0
  441300:	cmp	x19, #0xfff
  441304:	ccmp	x0, #0x0, #0x4, ls  // ls = plast
  441308:	b.ne	4412e4 <ferror@plt+0x3e514>  // b.any
  44130c:	cbnz	x0, 441328 <ferror@plt+0x3e558>
  441310:	mov	x0, x20
  441314:	bl	402dd0 <ferror@plt>
  441318:	mov	w20, w0
  44131c:	cbz	w0, 44133c <ferror@plt+0x3e56c>
  441320:	mov	w20, #0x1                   	// #1
  441324:	b	44135c <ferror@plt+0x3e58c>
  441328:	add	x2, sp, #0x38
  44132c:	add	x0, sp, #0xd8
  441330:	mov	x1, #0x1000                	// #4096
  441334:	bl	440600 <ferror@plt+0x3d830>
  441338:	b	4412e0 <ferror@plt+0x3e510>
  44133c:	cbz	x19, 441350 <ferror@plt+0x3e580>
  441340:	add	x2, sp, #0x38
  441344:	mov	x1, x19
  441348:	add	x0, sp, #0xd8
  44134c:	bl	4410f8 <ferror@plt+0x3e328>
  441350:	mov	x1, x21
  441354:	add	x0, sp, #0x38
  441358:	bl	441044 <ferror@plt+0x3e274>
  44135c:	mov	w0, w20
  441360:	mov	x12, #0x1120                	// #4384
  441364:	ldp	x29, x30, [sp]
  441368:	ldp	x19, x20, [sp, #16]
  44136c:	ldp	x21, x22, [sp, #32]
  441370:	add	sp, sp, x12
  441374:	ret
  441378:	stp	x29, x30, [sp, #-48]!
  44137c:	mov	x29, sp
  441380:	stp	x19, x20, [sp, #16]
  441384:	mov	x19, x0
  441388:	str	x21, [sp, #32]
  44138c:	cbz	x0, 4413c8 <ferror@plt+0x3e5f8>
  441390:	mov	x1, #0x0                   	// #0
  441394:	ldr	x2, [x19, x1, lsl #3]
  441398:	add	w0, w1, #0x1
  44139c:	add	x1, x1, #0x1
  4413a0:	cbnz	x2, 441394 <ferror@plt+0x3e5c4>
  4413a4:	sbfiz	x0, x0, #3, #32
  4413a8:	bl	44526c <_obstack_memory_used@@Base+0x868>
  4413ac:	mov	x20, x0
  4413b0:	mov	x21, #0x0                   	// #0
  4413b4:	ldr	x0, [x19, x21]
  4413b8:	add	x1, x20, x21
  4413bc:	cbnz	x0, 4413dc <ferror@plt+0x3e60c>
  4413c0:	mov	x19, x20
  4413c4:	str	xzr, [x1]
  4413c8:	mov	x0, x19
  4413cc:	ldp	x19, x20, [sp, #16]
  4413d0:	ldr	x21, [sp, #32]
  4413d4:	ldp	x29, x30, [sp], #48
  4413d8:	ret
  4413dc:	bl	445390 <_obstack_memory_used@@Base+0x98c>
  4413e0:	str	x0, [x20, x21]
  4413e4:	add	x21, x21, #0x8
  4413e8:	b	4413b4 <ferror@plt+0x3e5e4>
  4413ec:	cbnz	x0, 441414 <ferror@plt+0x3e644>
  4413f0:	ret
  4413f4:	add	x20, x20, #0x8
  4413f8:	bl	402b30 <free@plt>
  4413fc:	ldr	x0, [x20]
  441400:	cbnz	x0, 4413f4 <ferror@plt+0x3e624>
  441404:	mov	x0, x19
  441408:	ldp	x19, x20, [sp, #16]
  44140c:	ldp	x29, x30, [sp], #32
  441410:	b	402b30 <free@plt>
  441414:	stp	x29, x30, [sp, #-32]!
  441418:	mov	x29, sp
  44141c:	stp	x19, x20, [sp, #16]
  441420:	mov	x19, x0
  441424:	mov	x20, x0
  441428:	b	4413fc <ferror@plt+0x3e62c>
  44142c:	stp	x29, x30, [sp, #-112]!
  441430:	mov	x29, sp
  441434:	stp	x19, x20, [sp, #16]
  441438:	mov	x19, x0
  44143c:	stp	x21, x22, [sp, #32]
  441440:	stp	x23, x24, [sp, #48]
  441444:	stp	x25, x26, [sp, #64]
  441448:	stp	x27, x28, [sp, #80]
  44144c:	cbz	x0, 441510 <ferror@plt+0x3e740>
  441450:	bl	402700 <strlen@plt>
  441454:	adrp	x22, 46c000 <_obstack_memory_used@@Base+0x275fc>
  441458:	add	x0, x0, #0x1
  44145c:	add	x22, x22, #0xb08
  441460:	bl	44526c <_obstack_memory_used@@Base+0x868>
  441464:	mov	x21, x0
  441468:	mov	x26, #0x0                   	// #0
  44146c:	mov	x20, #0x0                   	// #0
  441470:	mov	w27, #0x0                   	// #0
  441474:	mov	w25, #0x0                   	// #0
  441478:	mov	w23, #0x0                   	// #0
  44147c:	mov	w24, #0x0                   	// #0
  441480:	ldrb	w0, [x19]
  441484:	ldrh	w0, [x22, x0, lsl #1]
  441488:	tbnz	w0, #6, 441530 <ferror@plt+0x3e760>
  44148c:	cbz	w27, 44149c <ferror@plt+0x3e6cc>
  441490:	sub	w0, w27, #0x1
  441494:	cmp	w0, w26
  441498:	b.gt	4414b4 <ferror@plt+0x3e6e4>
  44149c:	cbnz	x20, 441538 <ferror@plt+0x3e768>
  4414a0:	mov	x0, #0x40                  	// #64
  4414a4:	bl	44526c <_obstack_memory_used@@Base+0x868>
  4414a8:	mov	x20, x0
  4414ac:	mov	w27, #0x8                   	// #8
  4414b0:	str	xzr, [x20, x26, lsl #3]
  4414b4:	mov	w2, w25
  4414b8:	mov	x1, x21
  4414bc:	ldrb	w0, [x19]
  4414c0:	cbnz	w0, 441550 <ferror@plt+0x3e780>
  4414c4:	mov	w25, w2
  4414c8:	strb	wzr, [x1]
  4414cc:	lsl	x1, x26, #3
  4414d0:	mov	x0, x21
  4414d4:	str	x1, [sp, #104]
  4414d8:	add	x28, x20, x26, lsl #3
  4414dc:	bl	445390 <_obstack_memory_used@@Base+0x98c>
  4414e0:	ldr	x1, [sp, #104]
  4414e4:	str	x0, [x20, x1]
  4414e8:	str	xzr, [x28, #8]
  4414ec:	ldrb	w1, [x19]
  4414f0:	ldrb	w0, [x19]
  4414f4:	ldrh	w1, [x22, x1, lsl #1]
  4414f8:	tbnz	w1, #6, 4415fc <ferror@plt+0x3e82c>
  4414fc:	add	x26, x26, #0x1
  441500:	cbnz	w0, 441480 <ferror@plt+0x3e6b0>
  441504:	mov	x19, x20
  441508:	mov	x0, x21
  44150c:	bl	402b30 <free@plt>
  441510:	mov	x0, x19
  441514:	ldp	x19, x20, [sp, #16]
  441518:	ldp	x21, x22, [sp, #32]
  44151c:	ldp	x23, x24, [sp, #48]
  441520:	ldp	x25, x26, [sp, #64]
  441524:	ldp	x27, x28, [sp, #80]
  441528:	ldp	x29, x30, [sp], #112
  44152c:	ret
  441530:	add	x19, x19, #0x1
  441534:	b	441480 <ferror@plt+0x3e6b0>
  441538:	lsl	w27, w27, #1
  44153c:	mov	x0, x20
  441540:	sbfiz	x1, x27, #3, #32
  441544:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  441548:	mov	x20, x0
  44154c:	b	4414b0 <ferror@plt+0x3e6e0>
  441550:	ldrh	w3, [x22, w0, sxtw #1]
  441554:	tbz	w3, #6, 441564 <ferror@plt+0x3e794>
  441558:	orr	w25, w24, w23
  44155c:	orr	w25, w25, w2
  441560:	cbz	w25, 4415f0 <ferror@plt+0x3e820>
  441564:	cbz	w2, 441578 <ferror@plt+0x3e7a8>
  441568:	mov	w2, #0x0                   	// #0
  44156c:	strb	w0, [x1], #1
  441570:	add	x19, x19, #0x1
  441574:	b	4414bc <ferror@plt+0x3e6ec>
  441578:	cmp	w0, #0x5c
  44157c:	b.eq	4415cc <ferror@plt+0x3e7fc>  // b.none
  441580:	cbz	w24, 441594 <ferror@plt+0x3e7c4>
  441584:	cmp	w0, #0x27
  441588:	b.eq	4415c4 <ferror@plt+0x3e7f4>  // b.none
  44158c:	strb	w0, [x1], #1
  441590:	b	441570 <ferror@plt+0x3e7a0>
  441594:	cbz	w23, 4415ac <ferror@plt+0x3e7dc>
  441598:	cmp	w0, #0x22
  44159c:	b.ne	441568 <ferror@plt+0x3e798>  // b.any
  4415a0:	mov	w2, w24
  4415a4:	mov	w23, #0x0                   	// #0
  4415a8:	b	441570 <ferror@plt+0x3e7a0>
  4415ac:	cmp	w0, #0x27
  4415b0:	b.eq	4415d4 <ferror@plt+0x3e804>  // b.none
  4415b4:	cmp	w0, #0x22
  4415b8:	b.eq	4415e0 <ferror@plt+0x3e810>  // b.none
  4415bc:	mov	w2, w23
  4415c0:	strb	w0, [x1], #1
  4415c4:	mov	w24, #0x0                   	// #0
  4415c8:	b	441570 <ferror@plt+0x3e7a0>
  4415cc:	mov	w2, #0x1                   	// #1
  4415d0:	b	441570 <ferror@plt+0x3e7a0>
  4415d4:	mov	w2, w23
  4415d8:	mov	w24, #0x1                   	// #1
  4415dc:	b	441570 <ferror@plt+0x3e7a0>
  4415e0:	mov	w2, w23
  4415e4:	mov	w24, w23
  4415e8:	mov	w23, #0x1                   	// #1
  4415ec:	b	441570 <ferror@plt+0x3e7a0>
  4415f0:	mov	w23, #0x0                   	// #0
  4415f4:	mov	w24, #0x0                   	// #0
  4415f8:	b	4414c8 <ferror@plt+0x3e6f8>
  4415fc:	add	x19, x19, #0x1
  441600:	b	4414ec <ferror@plt+0x3e71c>
  441604:	cbz	x1, 4416d0 <ferror@plt+0x3e900>
  441608:	stp	x29, x30, [sp, #-64]!
  44160c:	mov	x29, sp
  441610:	stp	x19, x20, [sp, #16]
  441614:	mov	x20, x0
  441618:	mov	x19, x1
  44161c:	stp	x23, x24, [sp, #48]
  441620:	adrp	x23, 46c000 <_obstack_memory_used@@Base+0x275fc>
  441624:	mov	x24, #0x21                  	// #33
  441628:	add	x23, x23, #0xb08
  44162c:	movk	x24, #0x400, lsl #48
  441630:	stp	x21, x22, [sp, #32]
  441634:	ldr	x21, [x20]
  441638:	cbnz	x21, 4416ac <ferror@plt+0x3e8dc>
  44163c:	mov	w0, #0x0                   	// #0
  441640:	b	44167c <ferror@plt+0x3e8ac>
  441644:	ldrh	w0, [x23, w22, sxtw #1]
  441648:	tbnz	w0, #6, 441690 <ferror@plt+0x3e8c0>
  44164c:	sub	w1, w22, #0x22
  441650:	and	w1, w1, #0xff
  441654:	cmp	w1, #0x3a
  441658:	b.hi	441664 <ferror@plt+0x3e894>  // b.pmore
  44165c:	lsr	x1, x24, x1
  441660:	tbnz	w1, #0, 441690 <ferror@plt+0x3e8c0>
  441664:	mov	x1, x19
  441668:	mov	w0, w22
  44166c:	bl	4027d0 <fputc@plt>
  441670:	cmn	w0, #0x1
  441674:	b.ne	4416a8 <ferror@plt+0x3e8d8>  // b.any
  441678:	mov	w0, #0x1                   	// #1
  44167c:	ldp	x19, x20, [sp, #16]
  441680:	ldp	x21, x22, [sp, #32]
  441684:	ldp	x23, x24, [sp, #48]
  441688:	ldp	x29, x30, [sp], #64
  44168c:	ret
  441690:	mov	x1, x19
  441694:	mov	w0, #0x5c                  	// #92
  441698:	bl	4027d0 <fputc@plt>
  44169c:	cmn	w0, #0x1
  4416a0:	b.ne	441664 <ferror@plt+0x3e894>  // b.any
  4416a4:	b	441678 <ferror@plt+0x3e8a8>
  4416a8:	add	x21, x21, #0x1
  4416ac:	ldrb	w22, [x21]
  4416b0:	cbnz	w22, 441644 <ferror@plt+0x3e874>
  4416b4:	mov	x1, x19
  4416b8:	mov	w0, #0xa                   	// #10
  4416bc:	bl	4027d0 <fputc@plt>
  4416c0:	cmn	w0, #0x1
  4416c4:	b.eq	441678 <ferror@plt+0x3e8a8>  // b.none
  4416c8:	add	x20, x20, #0x8
  4416cc:	b	441634 <ferror@plt+0x3e864>
  4416d0:	mov	w0, #0x1                   	// #1
  4416d4:	ret
  4416d8:	stp	x29, x30, [sp, #-256]!
  4416dc:	mov	x29, sp
  4416e0:	stp	x27, x28, [sp, #80]
  4416e4:	ldr	x28, [x1]
  4416e8:	stp	x19, x20, [sp, #16]
  4416ec:	mov	x19, x1
  4416f0:	stp	x21, x22, [sp, #32]
  4416f4:	mov	x21, x0
  4416f8:	mov	w0, #0x7d0                 	// #2000
  4416fc:	stp	x23, x24, [sp, #48]
  441700:	stp	x25, x26, [sp, #64]
  441704:	mov	w26, #0x0                   	// #0
  441708:	str	w0, [sp, #100]
  44170c:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  441710:	add	x0, x0, #0xb08
  441714:	str	x0, [sp, #112]
  441718:	ldr	w0, [x21]
  44171c:	add	w22, w26, #0x1
  441720:	cmp	w0, w22
  441724:	b.gt	441744 <ferror@plt+0x3e974>
  441728:	ldp	x19, x20, [sp, #16]
  44172c:	ldp	x21, x22, [sp, #32]
  441730:	ldp	x23, x24, [sp, #48]
  441734:	ldp	x25, x26, [sp, #64]
  441738:	ldp	x27, x28, [sp, #80]
  44173c:	ldp	x29, x30, [sp], #256
  441740:	ret
  441744:	ldr	x0, [x19]
  441748:	sbfiz	x25, x22, #3, #32
  44174c:	sxtw	x1, w22
  441750:	str	x1, [sp, #104]
  441754:	ldr	x20, [x0, x25]
  441758:	ldrb	w1, [x20]
  44175c:	cmp	w1, #0x40
  441760:	b.ne	441940 <ferror@plt+0x3eb70>  // b.any
  441764:	ldr	w1, [sp, #100]
  441768:	subs	w1, w1, #0x1
  44176c:	str	w1, [sp, #100]
  441770:	b.ne	441794 <ferror@plt+0x3e9c4>  // b.any
  441774:	ldr	x2, [x0]
  441778:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44177c:	add	x1, x1, #0x25c
  441780:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  441784:	ldr	x0, [x0, #1440]
  441788:	bl	402d90 <fprintf@plt>
  44178c:	mov	w0, #0x1                   	// #1
  441790:	bl	445190 <_obstack_memory_used@@Base+0x78c>
  441794:	add	x20, x20, #0x1
  441798:	add	x1, sp, #0x80
  44179c:	mov	x0, x20
  4417a0:	bl	45ea78 <_obstack_memory_used@@Base+0x1a074>
  4417a4:	tbnz	w0, #31, 441940 <ferror@plt+0x3eb70>
  4417a8:	ldr	w0, [sp, #144]
  4417ac:	and	w0, w0, #0xf000
  4417b0:	cmp	w0, #0x4, lsl #12
  4417b4:	b.ne	4417cc <ferror@plt+0x3e9fc>  // b.any
  4417b8:	ldr	x0, [x19]
  4417bc:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4417c0:	add	x1, x1, #0x285
  4417c4:	ldr	x2, [x0]
  4417c8:	b	441780 <ferror@plt+0x3e9b0>
  4417cc:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4417d0:	add	x1, x0, #0x45
  4417d4:	mov	x0, x20
  4417d8:	bl	402870 <fopen@plt>
  4417dc:	mov	x20, x0
  4417e0:	cbz	x0, 441940 <ferror@plt+0x3eb70>
  4417e4:	mov	w2, #0x2                   	// #2
  4417e8:	mov	x1, #0x0                   	// #0
  4417ec:	bl	402a40 <fseek@plt>
  4417f0:	cmn	w0, #0x1
  4417f4:	b.eq	441938 <ferror@plt+0x3eb68>  // b.none
  4417f8:	mov	x0, x20
  4417fc:	bl	402790 <ftell@plt>
  441800:	mov	x24, x0
  441804:	cmn	x0, #0x1
  441808:	b.eq	441938 <ferror@plt+0x3eb68>  // b.none
  44180c:	mov	x0, x20
  441810:	mov	w2, #0x0                   	// #0
  441814:	mov	x1, #0x0                   	// #0
  441818:	bl	402a40 <fseek@plt>
  44181c:	cmn	w0, #0x1
  441820:	b.eq	441938 <ferror@plt+0x3eb68>  // b.none
  441824:	add	x0, x24, #0x1
  441828:	bl	44526c <_obstack_memory_used@@Base+0x868>
  44182c:	mov	x3, x20
  441830:	mov	x23, x0
  441834:	mov	x2, x24
  441838:	mov	x1, #0x1                   	// #1
  44183c:	bl	402b00 <fread@plt>
  441840:	mov	x27, x0
  441844:	cmp	x24, x0
  441848:	b.ne	44192c <ferror@plt+0x3eb5c>  // b.any
  44184c:	mov	x0, x23
  441850:	strb	wzr, [x23, x27]
  441854:	ldrb	w1, [x0]
  441858:	cbz	w1, 441958 <ferror@plt+0x3eb88>
  44185c:	ldr	x2, [sp, #112]
  441860:	ldrh	w1, [x2, w1, sxtw #1]
  441864:	tbnz	w1, #6, 441948 <ferror@plt+0x3eb78>
  441868:	mov	x0, x23
  44186c:	bl	44142c <ferror@plt+0x3e65c>
  441870:	mov	x24, x0
  441874:	ldr	x0, [x19]
  441878:	cmp	x0, x28
  44187c:	b.ne	44188c <ferror@plt+0x3eabc>  // b.any
  441880:	mov	x0, x28
  441884:	bl	441378 <ferror@plt+0x3e5a8>
  441888:	str	x0, [x19]
  44188c:	mov	x27, #0x0                   	// #0
  441890:	ldr	x0, [x24, x27, lsl #3]
  441894:	lsl	x4, x27, #3
  441898:	cbnz	x0, 441950 <ferror@plt+0x3eb80>
  44189c:	ldr	x0, [x19]
  4418a0:	str	x4, [sp, #120]
  4418a4:	ldr	x0, [x0, x25]
  4418a8:	bl	402b30 <free@plt>
  4418ac:	ldrsw	x1, [x21]
  4418b0:	ldr	x0, [x19]
  4418b4:	add	x1, x1, #0x1
  4418b8:	add	x1, x1, x27
  4418bc:	lsl	x1, x1, #3
  4418c0:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  4418c4:	ldr	x3, [sp, #104]
  4418c8:	add	x1, x25, #0x8
  4418cc:	ldr	w2, [x21]
  4418d0:	add	x1, x0, x1
  4418d4:	add	x5, x3, x27
  4418d8:	str	x0, [x19]
  4418dc:	sub	w2, w2, w22
  4418e0:	mov	w22, w26
  4418e4:	add	x0, x0, x5, lsl #3
  4418e8:	sbfiz	x2, x2, #3, #32
  4418ec:	bl	4026b0 <memmove@plt>
  4418f0:	ldr	x4, [sp, #120]
  4418f4:	mov	x1, x24
  4418f8:	ldr	x0, [x19]
  4418fc:	mov	x2, x4
  441900:	add	x0, x0, x25
  441904:	bl	4026a0 <memcpy@plt>
  441908:	ldr	w0, [x21]
  44190c:	sub	w0, w0, #0x1
  441910:	add	w3, w0, w27
  441914:	str	w3, [x21]
  441918:	mov	x0, x24
  44191c:	bl	402b30 <free@plt>
  441920:	mov	x0, x23
  441924:	bl	402b30 <free@plt>
  441928:	b	441938 <ferror@plt+0x3eb68>
  44192c:	mov	x0, x20
  441930:	bl	402dd0 <ferror@plt>
  441934:	cbz	w0, 44184c <ferror@plt+0x3ea7c>
  441938:	mov	x0, x20
  44193c:	bl	402830 <fclose@plt>
  441940:	mov	w26, w22
  441944:	b	441718 <ferror@plt+0x3e948>
  441948:	add	x0, x0, #0x1
  44194c:	b	441854 <ferror@plt+0x3ea84>
  441950:	add	x27, x27, #0x1
  441954:	b	441890 <ferror@plt+0x3eac0>
  441958:	mov	x0, #0x8                   	// #8
  44195c:	bl	44526c <_obstack_memory_used@@Base+0x868>
  441960:	mov	x24, x0
  441964:	str	xzr, [x0]
  441968:	b	441874 <ferror@plt+0x3eaa4>
  44196c:	cbz	x0, 44198c <ferror@plt+0x3ebbc>
  441970:	sub	x1, x0, #0x8
  441974:	mov	x2, #0x0                   	// #0
  441978:	mov	w0, w2
  44197c:	add	x2, x2, #0x1
  441980:	ldr	x3, [x1, x2, lsl #3]
  441984:	cbnz	x3, 441978 <ferror@plt+0x3eba8>
  441988:	ret
  44198c:	mov	w0, #0x0                   	// #0
  441990:	b	441988 <ferror@plt+0x3ebb8>
  441994:	ldp	x1, x2, [x0]
  441998:	subs	x0, x2, x1
  44199c:	csel	w0, w0, wzr, ne  // ne = any
  4419a0:	ret
  4419a4:	mov	w3, w1
  4419a8:	mov	x4, x0
  4419ac:	stp	x29, x30, [sp, #-16]!
  4419b0:	mov	x29, sp
  4419b4:	bl	441994 <ferror@plt+0x3ebc4>
  4419b8:	cmp	w3, w0
  4419bc:	b.pl	4419cc <ferror@plt+0x3ebfc>  // b.nfrst
  4419c0:	ldr	x1, [x4]
  4419c4:	add	x3, x1, w3, sxtw
  4419c8:	str	x3, [x4, #8]
  4419cc:	ldp	x29, x30, [sp], #16
  4419d0:	ret
  4419d4:	stp	x29, x30, [sp, #-32]!
  4419d8:	mov	x29, sp
  4419dc:	str	x19, [sp, #16]
  4419e0:	mov	x19, x0
  4419e4:	ldr	x0, [x0]
  4419e8:	cbz	x0, 4419f8 <ferror@plt+0x3ec28>
  4419ec:	bl	402b30 <free@plt>
  4419f0:	stp	xzr, xzr, [x19]
  4419f4:	str	xzr, [x19, #16]
  4419f8:	ldr	x19, [sp, #16]
  4419fc:	ldp	x29, x30, [sp], #32
  441a00:	ret
  441a04:	ldrb	w2, [x0]
  441a08:	adrp	x3, 46c000 <_obstack_memory_used@@Base+0x275fc>
  441a0c:	add	x3, x3, #0xb08
  441a10:	ldrh	w2, [x3, x2, lsl #1]
  441a14:	tbz	w2, #2, 441a3c <ferror@plt+0x3ec6c>
  441a18:	mov	x5, #0xa                   	// #10
  441a1c:	str	xzr, [x1]
  441a20:	ldrb	w4, [x0]
  441a24:	ldrb	w2, [x0]
  441a28:	ldrh	w4, [x3, x4, lsl #1]
  441a2c:	tbnz	w4, #2, 441a44 <ferror@plt+0x3ec74>
  441a30:	cbz	w2, 441a3c <ferror@plt+0x3ec6c>
  441a34:	ldr	x1, [x1]
  441a38:	tbz	x1, #63, 441a40 <ferror@plt+0x3ec70>
  441a3c:	mov	x0, #0x0                   	// #0
  441a40:	ret
  441a44:	ldr	x2, [x1]
  441a48:	mul	x4, x2, x5
  441a4c:	str	x4, [x1]
  441a50:	ldrb	w2, [x0], #1
  441a54:	sub	w2, w2, #0x30
  441a58:	add	x2, x4, w2, sxtw
  441a5c:	str	x2, [x1]
  441a60:	b	441a20 <ferror@plt+0x3ec50>
  441a64:	and	w0, w0, #0xff
  441a68:	sub	w0, w0, #0x46
  441a6c:	and	w0, w0, #0xff
  441a70:	cmp	w0, #0x13
  441a74:	b.hi	441a90 <ferror@plt+0x3ecc0>  // b.pmore
  441a78:	mov	x1, #0x1                   	// #1
  441a7c:	lsl	x0, x1, x0
  441a80:	add	x1, x1, #0xb9, lsl #12
  441a84:	tst	x0, x1
  441a88:	cset	w0, ne  // ne = any
  441a8c:	ret
  441a90:	mov	w0, #0x0                   	// #0
  441a94:	b	441a8c <ferror@plt+0x3ecbc>
  441a98:	stp	x29, x30, [sp, #-48]!
  441a9c:	mov	x29, sp
  441aa0:	stp	x19, x20, [sp, #16]
  441aa4:	mov	x20, x0
  441aa8:	ldr	x0, [x0]
  441aac:	str	x21, [sp, #32]
  441ab0:	cbnz	x0, 441ae8 <ferror@plt+0x3ed18>
  441ab4:	cmp	w1, #0x20
  441ab8:	mov	w19, #0x20                  	// #32
  441abc:	csel	w1, w1, w19, ge  // ge = tcont
  441ac0:	sxtw	x19, w1
  441ac4:	mov	x0, x19
  441ac8:	bl	44526c <_obstack_memory_used@@Base+0x868>
  441acc:	stp	x0, x0, [x20]
  441ad0:	add	x0, x0, x19
  441ad4:	str	x0, [x20, #16]
  441ad8:	ldp	x19, x20, [sp, #16]
  441adc:	ldr	x21, [sp, #32]
  441ae0:	ldp	x29, x30, [sp], #48
  441ae4:	ret
  441ae8:	ldp	x21, x2, [x20, #8]
  441aec:	sub	x2, x2, x21
  441af0:	cmp	x2, w1, sxtw
  441af4:	b.ge	441ad8 <ferror@plt+0x3ed08>  // b.tcont
  441af8:	sub	x21, x21, x0
  441afc:	add	w19, w1, w21
  441b00:	lsl	w19, w19, #1
  441b04:	sxtw	x19, w19
  441b08:	mov	x1, x19
  441b0c:	bl	4452f0 <_obstack_memory_used@@Base+0x8ec>
  441b10:	add	x21, x0, w21, sxtw
  441b14:	stp	x0, x21, [x20]
  441b18:	b	441ad0 <ferror@plt+0x3ed00>
  441b1c:	stp	x29, x30, [sp, #-48]!
  441b20:	mov	x29, sp
  441b24:	stp	x19, x20, [sp, #16]
  441b28:	mov	x20, x0
  441b2c:	mov	x0, x1
  441b30:	str	x21, [sp, #32]
  441b34:	mov	x21, x1
  441b38:	bl	402700 <strlen@plt>
  441b3c:	mov	w1, w0
  441b40:	mov	x19, x0
  441b44:	mov	x0, x20
  441b48:	bl	441a98 <ferror@plt+0x3ecc8>
  441b4c:	ldr	x0, [x20, #8]
  441b50:	sxtw	x19, w19
  441b54:	mov	x2, x19
  441b58:	mov	x1, x21
  441b5c:	bl	4026a0 <memcpy@plt>
  441b60:	ldr	x2, [x20, #8]
  441b64:	ldr	x21, [sp, #32]
  441b68:	add	x2, x2, x19
  441b6c:	str	x2, [x20, #8]
  441b70:	ldp	x19, x20, [sp, #16]
  441b74:	ldp	x29, x30, [sp], #48
  441b78:	ret
  441b7c:	stp	x29, x30, [sp, #-48]!
  441b80:	mov	x29, sp
  441b84:	stp	x19, x20, [sp, #16]
  441b88:	mov	x20, x0
  441b8c:	mov	x19, x1
  441b90:	stp	x21, x22, [sp, #32]
  441b94:	adrp	x21, 46c000 <_obstack_memory_used@@Base+0x275fc>
  441b98:	adrp	x22, 46c000 <_obstack_memory_used@@Base+0x275fc>
  441b9c:	add	x21, x21, #0x2c1
  441ba0:	add	x22, x22, #0x2b9
  441ba4:	ldrb	w0, [x19]
  441ba8:	cbz	w0, 441c38 <ferror@plt+0x3ee68>
  441bac:	cmp	w0, #0x78
  441bb0:	b.eq	441bf4 <ferror@plt+0x3ee24>  // b.none
  441bb4:	b.hi	441bdc <ferror@plt+0x3ee0c>  // b.pmore
  441bb8:	cmp	w0, #0x4e
  441bbc:	b.eq	441c20 <ferror@plt+0x3ee50>  // b.none
  441bc0:	cmp	w0, #0x4f
  441bc4:	b.eq	441c0c <ferror@plt+0x3ee3c>  // b.none
  441bc8:	mov	x0, x19
  441bcc:	ldp	x19, x20, [sp, #16]
  441bd0:	ldp	x21, x22, [sp, #32]
  441bd4:	ldp	x29, x30, [sp], #48
  441bd8:	ret
  441bdc:	cmp	w0, #0x79
  441be0:	b.ne	441bc8 <ferror@plt+0x3edf8>  // b.any
  441be4:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  441be8:	add	x19, x19, #0x1
  441bec:	add	x1, x1, #0x2ae
  441bf0:	b	441c00 <ferror@plt+0x3ee30>
  441bf4:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  441bf8:	add	x19, x19, #0x1
  441bfc:	add	x1, x1, #0xe70
  441c00:	mov	x0, x20
  441c04:	bl	441b1c <ferror@plt+0x3ed4c>
  441c08:	b	441bc8 <ferror@plt+0x3edf8>
  441c0c:	add	x19, x19, #0x1
  441c10:	mov	x1, x22
  441c14:	mov	x0, x20
  441c18:	bl	441b1c <ferror@plt+0x3ed4c>
  441c1c:	b	441ba4 <ferror@plt+0x3edd4>
  441c20:	ldrb	w0, [x19, #1]
  441c24:	cmp	w0, #0x67
  441c28:	b.ne	441c38 <ferror@plt+0x3ee68>  // b.any
  441c2c:	add	x19, x19, #0x2
  441c30:	mov	x1, x21
  441c34:	b	441c14 <ferror@plt+0x3ee44>
  441c38:	mov	x19, #0x0                   	// #0
  441c3c:	b	441bc8 <ferror@plt+0x3edf8>
  441c40:	stp	x29, x30, [sp, #-32]!
  441c44:	mov	x29, sp
  441c48:	str	x19, [sp, #16]
  441c4c:	mov	x19, x1
  441c50:	cbz	x1, 441c98 <ferror@plt+0x3eec8>
  441c54:	ldrb	w1, [x1]
  441c58:	cbz	w1, 441cfc <ferror@plt+0x3ef2c>
  441c5c:	cmp	w1, #0x46
  441c60:	b.eq	441c94 <ferror@plt+0x3eec4>  // b.none
  441c64:	sub	w1, w1, #0x52
  441c68:	and	w2, w1, #0xff
  441c6c:	cmp	w2, #0x7
  441c70:	b.hi	441cfc <ferror@plt+0x3ef2c>  // b.pmore
  441c74:	cmp	w1, #0x7
  441c78:	b.hi	441cfc <ferror@plt+0x3ef2c>  // b.pmore
  441c7c:	adrp	x2, 46c000 <_obstack_memory_used@@Base+0x275fc>
  441c80:	add	x2, x2, #0x4cc
  441c84:	ldrb	w1, [x2, w1, uxtw]
  441c88:	adr	x2, 441c94 <ferror@plt+0x3eec4>
  441c8c:	add	x1, x2, w1, sxtb #2
  441c90:	br	x1
  441c94:	add	x19, x19, #0x1
  441c98:	mov	x0, x19
  441c9c:	ldr	x19, [sp, #16]
  441ca0:	ldp	x29, x30, [sp], #32
  441ca4:	ret
  441ca8:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  441cac:	add	x19, x19, #0x1
  441cb0:	add	x1, x1, #0x2c8
  441cb4:	bl	441b1c <ferror@plt+0x3ed4c>
  441cb8:	b	441c98 <ferror@plt+0x3eec8>
  441cbc:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  441cc0:	add	x19, x19, #0x1
  441cc4:	add	x1, x1, #0x2d3
  441cc8:	b	441cb4 <ferror@plt+0x3eee4>
  441ccc:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  441cd0:	add	x19, x19, #0x1
  441cd4:	add	x1, x1, #0x2e4
  441cd8:	b	441cb4 <ferror@plt+0x3eee4>
  441cdc:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  441ce0:	add	x19, x19, #0x1
  441ce4:	add	x1, x1, #0x2f4
  441ce8:	b	441cb4 <ferror@plt+0x3eee4>
  441cec:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  441cf0:	add	x19, x19, #0x1
  441cf4:	add	x1, x1, #0x301
  441cf8:	b	441cb4 <ferror@plt+0x3eee4>
  441cfc:	mov	x19, #0x0                   	// #0
  441d00:	b	441c98 <ferror@plt+0x3eec8>
  441d04:	stp	x29, x30, [sp, #-64]!
  441d08:	mov	x29, sp
  441d0c:	stp	x19, x20, [sp, #16]
  441d10:	mov	x19, x0
  441d14:	mov	x0, x1
  441d18:	stp	x21, x22, [sp, #32]
  441d1c:	str	x23, [sp, #48]
  441d20:	cbz	x1, 441d54 <ferror@plt+0x3ef84>
  441d24:	ldrb	w1, [x1]
  441d28:	cbz	w1, 441df8 <ferror@plt+0x3f028>
  441d2c:	adrp	x21, 46c000 <_obstack_memory_used@@Base+0x275fc>
  441d30:	adrp	x22, 46c000 <_obstack_memory_used@@Base+0x275fc>
  441d34:	mov	x20, x0
  441d38:	add	x21, x21, #0x4d4
  441d3c:	add	x22, x22, #0x355
  441d40:	adrp	x23, 46c000 <_obstack_memory_used@@Base+0x275fc>
  441d44:	ldrb	w1, [x20]
  441d48:	mov	x0, x20
  441d4c:	cmp	w1, #0x4e
  441d50:	b.eq	441d68 <ferror@plt+0x3ef98>  // b.none
  441d54:	ldp	x19, x20, [sp, #16]
  441d58:	ldp	x21, x22, [sp, #32]
  441d5c:	ldr	x23, [sp, #48]
  441d60:	ldp	x29, x30, [sp], #64
  441d64:	ret
  441d68:	ldrb	w1, [x20, #1]
  441d6c:	sub	w1, w1, #0x61
  441d70:	cmp	w1, #0xb
  441d74:	b.hi	441df8 <ferror@plt+0x3f028>  // b.pmore
  441d78:	ldrb	w1, [x21, w1, uxtw]
  441d7c:	adr	x2, 441d88 <ferror@plt+0x3efb8>
  441d80:	add	x1, x2, w1, sxtb #2
  441d84:	br	x1
  441d88:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  441d8c:	add	x1, x1, #0x316
  441d90:	mov	x0, x19
  441d94:	add	x20, x20, #0x2
  441d98:	bl	441b1c <ferror@plt+0x3ed4c>
  441d9c:	b	441d44 <ferror@plt+0x3ef74>
  441da0:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  441da4:	add	x1, x1, #0x31c
  441da8:	b	441d90 <ferror@plt+0x3efc0>
  441dac:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  441db0:	add	x1, x1, #0x325
  441db4:	b	441d90 <ferror@plt+0x3efc0>
  441db8:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  441dbc:	add	x1, x1, #0x32a
  441dc0:	b	441d90 <ferror@plt+0x3efc0>
  441dc4:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  441dc8:	add	x1, x1, #0x335
  441dcc:	b	441d90 <ferror@plt+0x3efc0>
  441dd0:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  441dd4:	add	x1, x1, #0x33f
  441dd8:	b	441d90 <ferror@plt+0x3efc0>
  441ddc:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  441de0:	add	x1, x1, #0x346
  441de4:	b	441d90 <ferror@plt+0x3efc0>
  441de8:	add	x1, x23, #0x34d
  441dec:	b	441d90 <ferror@plt+0x3efc0>
  441df0:	mov	x1, x22
  441df4:	b	441d90 <ferror@plt+0x3efc0>
  441df8:	mov	x0, #0x0                   	// #0
  441dfc:	b	441d54 <ferror@plt+0x3ef84>
  441e00:	stp	x29, x30, [sp, #-48]!
  441e04:	mov	x29, sp
  441e08:	stp	x19, x20, [sp, #16]
  441e0c:	mov	x19, x0
  441e10:	str	x21, [sp, #32]
  441e14:	ldrb	w0, [x1]
  441e18:	cbz	w0, 441e68 <ferror@plt+0x3f098>
  441e1c:	mov	x21, x1
  441e20:	mov	x0, x1
  441e24:	bl	402700 <strlen@plt>
  441e28:	mov	x1, x0
  441e2c:	sxtw	x20, w0
  441e30:	cbz	w0, 441e68 <ferror@plt+0x3f098>
  441e34:	mov	x0, x19
  441e38:	bl	441a98 <ferror@plt+0x3ecc8>
  441e3c:	ldr	x3, [x19, #8]
  441e40:	sub	x3, x3, #0x1
  441e44:	ldr	x0, [x19]
  441e48:	cmp	x3, x0
  441e4c:	b.cs	441e78 <ferror@plt+0x3f0a8>  // b.hs, b.nlast
  441e50:	mov	x2, x20
  441e54:	mov	x1, x21
  441e58:	bl	4026a0 <memcpy@plt>
  441e5c:	ldr	x2, [x19, #8]
  441e60:	add	x2, x2, x20
  441e64:	str	x2, [x19, #8]
  441e68:	ldp	x19, x20, [sp, #16]
  441e6c:	ldr	x21, [sp, #32]
  441e70:	ldp	x29, x30, [sp], #48
  441e74:	ret
  441e78:	ldrb	w0, [x3]
  441e7c:	strb	w0, [x3, x20]
  441e80:	b	441e40 <ferror@plt+0x3f070>
  441e84:	stp	x29, x30, [sp, #-48]!
  441e88:	mov	x29, sp
  441e8c:	stp	x19, x20, [sp, #16]
  441e90:	mov	x20, x0
  441e94:	sxtw	x19, w2
  441e98:	str	x21, [sp, #32]
  441e9c:	mov	x21, x1
  441ea0:	mov	w1, w19
  441ea4:	bl	441a98 <ferror@plt+0x3ecc8>
  441ea8:	ldr	x0, [x20, #8]
  441eac:	mov	x2, x19
  441eb0:	mov	x1, x21
  441eb4:	bl	4026a0 <memcpy@plt>
  441eb8:	ldr	x2, [x20, #8]
  441ebc:	ldr	x21, [sp, #32]
  441ec0:	add	x2, x2, x19
  441ec4:	str	x2, [x20, #8]
  441ec8:	ldp	x19, x20, [sp, #16]
  441ecc:	ldp	x29, x30, [sp], #48
  441ed0:	ret
  441ed4:	cbz	w2, 441edc <ferror@plt+0x3f10c>
  441ed8:	b	441e84 <ferror@plt+0x3f0b4>
  441edc:	ret
  441ee0:	stp	x29, x30, [sp, #-96]!
  441ee4:	mov	x29, sp
  441ee8:	stp	x21, x22, [sp, #32]
  441eec:	and	w21, w2, #0xff
  441ef0:	stp	x19, x20, [sp, #16]
  441ef4:	mov	x19, x0
  441ef8:	mov	x0, x1
  441efc:	and	w1, w21, #0xfffffffd
  441f00:	stp	x23, x24, [sp, #48]
  441f04:	cmp	w1, #0x75
  441f08:	cset	w23, eq  // eq = none
  441f0c:	cmp	w21, #0x61
  441f10:	csinc	w23, w23, wzr, ne  // ne = any
  441f14:	cbz	w23, 44208c <ferror@plt+0x3f2bc>
  441f18:	add	x1, sp, #0x48
  441f1c:	bl	441a04 <ferror@plt+0x3ec34>
  441f20:	mov	x20, x0
  441f24:	cbz	x0, 441f78 <ferror@plt+0x3f1a8>
  441f28:	adrp	x22, 467000 <_obstack_memory_used@@Base+0x225fc>
  441f2c:	add	x22, x22, #0x766
  441f30:	mov	x1, x22
  441f34:	mov	x0, x19
  441f38:	bl	441b1c <ferror@plt+0x3ed4c>
  441f3c:	add	x24, sp, #0x50
  441f40:	cmp	w21, #0x61
  441f44:	b.ne	441f90 <ferror@plt+0x3f1c0>  // b.any
  441f48:	ldr	x0, [sp, #72]
  441f4c:	sub	x1, x0, #0x20
  441f50:	cmp	x1, #0x5e
  441f54:	b.hi	441fac <ferror@plt+0x3f1dc>  // b.pmore
  441f58:	mov	x1, x24
  441f5c:	mov	w2, #0x1                   	// #1
  441f60:	strb	w0, [sp, #80]
  441f64:	mov	x0, x19
  441f68:	bl	441e84 <ferror@plt+0x3f0b4>
  441f6c:	mov	x1, x22
  441f70:	mov	x0, x19
  441f74:	bl	441b1c <ferror@plt+0x3ed4c>
  441f78:	mov	x0, x20
  441f7c:	ldp	x19, x20, [sp, #16]
  441f80:	ldp	x21, x22, [sp, #32]
  441f84:	ldp	x23, x24, [sp, #48]
  441f88:	ldp	x29, x30, [sp], #96
  441f8c:	ret
  441f90:	cmp	w21, #0x77
  441f94:	b.eq	44203c <ferror@plt+0x3f26c>  // b.none
  441f98:	b.hi	441fa4 <ferror@plt+0x3f1d4>  // b.pmore
  441f9c:	cmp	w21, #0x75
  441fa0:	b.eq	442024 <ferror@plt+0x3f254>  // b.none
  441fa4:	mov	w0, #0x0                   	// #0
  441fa8:	b	441fc0 <ferror@plt+0x3f1f0>
  441fac:	mov	x0, x19
  441fb0:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  441fb4:	add	x1, x1, #0x35c
  441fb8:	bl	441b1c <ferror@plt+0x3ed4c>
  441fbc:	mov	w0, #0x2                   	// #2
  441fc0:	ldr	x2, [sp, #72]
  441fc4:	sub	w0, w0, #0x9
  441fc8:	mov	x4, #0x9                   	// #9
  441fcc:	mov	w5, #0x0                   	// #0
  441fd0:	add	w3, w0, w4
  441fd4:	add	w1, w4, #0x1
  441fd8:	cmp	x2, #0x0
  441fdc:	b.gt	442054 <ferror@plt+0x3f284>
  441fe0:	cbz	w5, 441fe8 <ferror@plt+0x3f218>
  441fe4:	str	x2, [sp, #72]
  441fe8:	sxtw	x2, w1
  441fec:	mov	w0, w3
  441ff0:	mov	w4, #0x30                  	// #48
  441ff4:	sub	x2, x2, #0x1
  441ff8:	cmp	w0, #0x0
  441ffc:	b.gt	442080 <ferror@plt+0x3f2b0>
  442000:	cmp	w3, #0x0
  442004:	mov	x0, x19
  442008:	csel	w3, w3, wzr, ge  // ge = tcont
  44200c:	mov	w2, #0xa                   	// #10
  442010:	sub	w1, w1, w3
  442014:	sub	w2, w2, w1
  442018:	add	x1, x24, w1, sxtw
  44201c:	bl	441ed4 <ferror@plt+0x3f104>
  442020:	b	441f6c <ferror@plt+0x3f19c>
  442024:	mov	x0, x19
  442028:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44202c:	add	x1, x1, #0x35f
  442030:	bl	441b1c <ferror@plt+0x3ed4c>
  442034:	mov	w0, #0x4                   	// #4
  442038:	b	441fc0 <ferror@plt+0x3f1f0>
  44203c:	mov	x0, x19
  442040:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  442044:	add	x1, x1, #0x362
  442048:	bl	441b1c <ferror@plt+0x3ed4c>
  44204c:	mov	w0, #0x8                   	// #8
  442050:	b	441fc0 <ferror@plt+0x3f1f0>
  442054:	and	x5, x2, #0xf
  442058:	and	w1, w2, #0xf
  44205c:	add	w3, w1, #0x57
  442060:	cmp	x5, #0xa
  442064:	add	w1, w1, #0x30
  442068:	asr	x2, x2, #4
  44206c:	csel	w1, w1, w3, lt  // lt = tstop
  442070:	mov	w5, w23
  442074:	strb	w1, [x24, x4]
  442078:	sub	x4, x4, #0x1
  44207c:	b	441fd0 <ferror@plt+0x3f200>
  442080:	sub	w0, w0, #0x1
  442084:	strb	w4, [x24, x2]
  442088:	b	441ff4 <ferror@plt+0x3f224>
  44208c:	cmp	w21, #0x62
  442090:	b.ne	4420c4 <ferror@plt+0x3f2f4>  // b.any
  442094:	add	x1, sp, #0x50
  442098:	bl	441a04 <ferror@plt+0x3ec34>
  44209c:	mov	x20, x0
  4420a0:	cbz	x0, 441f78 <ferror@plt+0x3f1a8>
  4420a4:	ldr	x2, [sp, #80]
  4420a8:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4420ac:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4420b0:	add	x0, x0, #0x52
  4420b4:	add	x1, x1, #0x4d
  4420b8:	cmp	x2, #0x0
  4420bc:	csel	x1, x1, x0, ne  // ne = any
  4420c0:	b	441f70 <ferror@plt+0x3f1a0>
  4420c4:	ldrb	w2, [x0]
  4420c8:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4420cc:	add	x1, x1, #0xb08
  4420d0:	ldrh	w2, [x1, x2, lsl #1]
  4420d4:	tbz	w2, #2, 442144 <ferror@plt+0x3f374>
  4420d8:	mov	x2, #0x0                   	// #0
  4420dc:	add	x2, x2, #0x1
  4420e0:	add	x20, x0, x2
  4420e4:	ldrb	w3, [x0, x2]
  4420e8:	ldrh	w3, [x1, x3, lsl #1]
  4420ec:	tbnz	w3, #2, 4420dc <ferror@plt+0x3f30c>
  4420f0:	mov	x1, x0
  4420f4:	sub	w21, w21, #0x68
  4420f8:	mov	x0, x19
  4420fc:	bl	441ed4 <ferror@plt+0x3f104>
  442100:	cmp	w21, #0xc
  442104:	b.hi	441f78 <ferror@plt+0x3f1a8>  // b.pmore
  442108:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44210c:	add	x0, x0, #0x4e0
  442110:	ldrb	w0, [x0, w21, uxtw]
  442114:	adr	x1, 442120 <ferror@plt+0x3f350>
  442118:	add	x0, x1, w0, sxtb #2
  44211c:	br	x0
  442120:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  442124:	add	x1, x1, #0x5a6
  442128:	b	441f70 <ferror@plt+0x3f1a0>
  44212c:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  442130:	add	x1, x1, #0x630
  442134:	b	441f70 <ferror@plt+0x3f1a0>
  442138:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44213c:	add	x1, x1, #0x365
  442140:	b	441f70 <ferror@plt+0x3f1a0>
  442144:	mov	x20, #0x0                   	// #0
  442148:	b	441f78 <ferror@plt+0x3f1a8>
  44214c:	stp	x29, x30, [sp, #-48]!
  442150:	mov	x2, #0x3                   	// #3
  442154:	mov	x29, sp
  442158:	stp	x19, x20, [sp, #16]
  44215c:	mov	x19, x1
  442160:	mov	x20, x0
  442164:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  442168:	mov	x0, x19
  44216c:	add	x1, x1, #0x368
  442170:	stp	x21, x22, [sp, #32]
  442174:	bl	4028d0 <strncmp@plt>
  442178:	cbnz	w0, 4421a4 <ferror@plt+0x3f3d4>
  44217c:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  442180:	add	x1, x1, #0x36c
  442184:	add	x19, x19, #0x3
  442188:	mov	x0, x20
  44218c:	bl	441b1c <ferror@plt+0x3ed4c>
  442190:	mov	x0, x19
  442194:	ldp	x19, x20, [sp, #16]
  442198:	ldp	x21, x22, [sp, #32]
  44219c:	ldp	x29, x30, [sp], #48
  4421a0:	ret
  4421a4:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4421a8:	mov	x0, x19
  4421ac:	add	x1, x1, #0x371
  4421b0:	mov	x2, #0x3                   	// #3
  4421b4:	bl	4028d0 <strncmp@plt>
  4421b8:	cbnz	w0, 4421c8 <ferror@plt+0x3f3f8>
  4421bc:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4421c0:	add	x1, x1, #0x376
  4421c4:	b	442184 <ferror@plt+0x3f3b4>
  4421c8:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4421cc:	mov	x0, x19
  4421d0:	add	x1, x1, #0x370
  4421d4:	mov	x2, #0x4                   	// #4
  4421d8:	bl	4028d0 <strncmp@plt>
  4421dc:	cbnz	w0, 4421f8 <ferror@plt+0x3f428>
  4421e0:	mov	x0, x20
  4421e4:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4421e8:	add	x19, x19, #0x4
  4421ec:	add	x1, x1, #0x375
  4421f0:	bl	441b1c <ferror@plt+0x3ed4c>
  4421f4:	b	442190 <ferror@plt+0x3f3c0>
  4421f8:	ldrb	w0, [x19]
  4421fc:	cmp	w0, #0x4e
  442200:	b.ne	442218 <ferror@plt+0x3f448>  // b.any
  442204:	add	x19, x19, #0x1
  442208:	mov	x0, x20
  44220c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x235fc>
  442210:	add	x1, x1, #0x6a
  442214:	bl	441b1c <ferror@plt+0x3ed4c>
  442218:	ldrb	w0, [x19]
  44221c:	adrp	x22, 46c000 <_obstack_memory_used@@Base+0x275fc>
  442220:	add	x22, x22, #0xb08
  442224:	ldrh	w0, [x22, x0, lsl #1]
  442228:	tbnz	w0, #8, 442234 <ferror@plt+0x3f464>
  44222c:	mov	x19, #0x0                   	// #0
  442230:	b	442190 <ferror@plt+0x3f3c0>
  442234:	mov	x0, x20
  442238:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44223c:	add	x21, x19, #0x1
  442240:	add	x1, x1, #0x37a
  442244:	bl	441b1c <ferror@plt+0x3ed4c>
  442248:	mov	w2, #0x1                   	// #1
  44224c:	mov	x1, x19
  442250:	mov	x0, x20
  442254:	bl	441e84 <ferror@plt+0x3f0b4>
  442258:	mov	x0, x20
  44225c:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  442260:	add	x1, x1, #0xec0
  442264:	bl	441b1c <ferror@plt+0x3ed4c>
  442268:	ldrb	w1, [x21]
  44226c:	ldrb	w0, [x21]
  442270:	ldrh	w1, [x22, x1, lsl #1]
  442274:	tbnz	w1, #8, 4422d8 <ferror@plt+0x3f508>
  442278:	cmp	w0, #0x50
  44227c:	b.ne	44222c <ferror@plt+0x3f45c>  // b.any
  442280:	mov	x0, x20
  442284:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  442288:	add	x1, x1, #0xd3d
  44228c:	bl	441b1c <ferror@plt+0x3ed4c>
  442290:	ldrb	w0, [x21, #1]
  442294:	add	x19, x21, #0x1
  442298:	cmp	w0, #0x4e
  44229c:	b.ne	4422b4 <ferror@plt+0x3f4e4>  // b.any
  4422a0:	add	x19, x21, #0x2
  4422a4:	mov	x0, x20
  4422a8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x235fc>
  4422ac:	add	x1, x1, #0x6a
  4422b0:	bl	441b1c <ferror@plt+0x3ed4c>
  4422b4:	ldrb	w0, [x19]
  4422b8:	ldrh	w0, [x22, x0, lsl #1]
  4422bc:	tbz	w0, #2, 442190 <ferror@plt+0x3f3c0>
  4422c0:	mov	x1, x19
  4422c4:	mov	x0, x20
  4422c8:	mov	w2, #0x1                   	// #1
  4422cc:	add	x19, x19, #0x1
  4422d0:	bl	441e84 <ferror@plt+0x3f0b4>
  4422d4:	b	4422b4 <ferror@plt+0x3f4e4>
  4422d8:	mov	x1, x21
  4422dc:	mov	x0, x20
  4422e0:	mov	w2, #0x1                   	// #1
  4422e4:	add	x21, x21, #0x1
  4422e8:	bl	441e84 <ferror@plt+0x3f0b4>
  4422ec:	b	442268 <ferror@plt+0x3f498>
  4422f0:	stp	x29, x30, [sp, #-80]!
  4422f4:	mov	x29, sp
  4422f8:	stp	x19, x20, [sp, #16]
  4422fc:	stp	x21, x22, [sp, #32]
  442300:	stp	x23, x24, [sp, #48]
  442304:	cbnz	x1, 442310 <ferror@plt+0x3f540>
  442308:	mov	x19, #0x0                   	// #0
  44230c:	b	442364 <ferror@plt+0x3f594>
  442310:	mov	x19, x1
  442314:	ldrb	w1, [x1]
  442318:	cbz	w1, 442308 <ferror@plt+0x3f538>
  44231c:	mov	x20, x0
  442320:	cmp	w1, #0x6e
  442324:	b.hi	442464 <ferror@plt+0x3f694>  // b.pmore
  442328:	and	w21, w3, #0xff
  44232c:	cmp	w1, #0x60
  442330:	b.hi	44237c <ferror@plt+0x3f5ac>  // b.pmore
  442334:	cmp	w1, #0x4e
  442338:	b.eq	44250c <ferror@plt+0x3f73c>  // b.none
  44233c:	b.hi	442400 <ferror@plt+0x3f630>  // b.pmore
  442340:	cmp	w1, #0x39
  442344:	b.hi	4423a0 <ferror@plt+0x3f5d0>  // b.pmore
  442348:	cmp	w1, #0x2f
  44234c:	b.ls	442308 <ferror@plt+0x3f538>  // b.plast
  442350:	mov	w2, w21
  442354:	mov	x1, x19
  442358:	mov	x0, x20
  44235c:	bl	441ee0 <ferror@plt+0x3f110>
  442360:	mov	x19, x0
  442364:	mov	x0, x19
  442368:	ldp	x19, x20, [sp, #16]
  44236c:	ldp	x21, x22, [sp, #32]
  442370:	ldp	x23, x24, [sp, #48]
  442374:	ldp	x29, x30, [sp], #80
  442378:	ret
  44237c:	sub	w2, w1, #0x61
  442380:	cmp	w2, #0xd
  442384:	b.hi	442308 <ferror@plt+0x3f538>  // b.pmore
  442388:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44238c:	add	x0, x0, #0x4f0
  442390:	ldrb	w0, [x0, w2, uxtw]
  442394:	adr	x2, 4423a0 <ferror@plt+0x3f5d0>
  442398:	add	x0, x2, w0, sxtb #2
  44239c:	br	x0
  4423a0:	cmp	w1, #0x41
  4423a4:	b.ne	442308 <ferror@plt+0x3f538>  // b.any
  4423a8:	add	x0, x19, #0x1
  4423ac:	add	x1, sp, #0x48
  4423b0:	cmp	w21, #0x48
  4423b4:	b.ne	442724 <ferror@plt+0x3f954>  // b.any
  4423b8:	bl	441a04 <ferror@plt+0x3ec34>
  4423bc:	mov	x19, x0
  4423c0:	cbz	x0, 442364 <ferror@plt+0x3f594>
  4423c4:	adrp	x21, 468000 <_obstack_memory_used@@Base+0x235fc>
  4423c8:	adrp	x22, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4423cc:	add	x21, x21, #0x198
  4423d0:	add	x22, x22, #0x75
  4423d4:	mov	x0, x20
  4423d8:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4423dc:	add	x1, x1, #0x646
  4423e0:	bl	441b1c <ferror@plt+0x3ed4c>
  4423e4:	ldr	x0, [sp, #72]
  4423e8:	sub	x1, x0, #0x1
  4423ec:	str	x1, [sp, #72]
  4423f0:	cbnz	x0, 4426d0 <ferror@plt+0x3f900>
  4423f4:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4423f8:	add	x1, x1, #0xc6a
  4423fc:	b	442500 <ferror@plt+0x3f730>
  442400:	cmp	w1, #0x53
  442404:	b.ne	442308 <ferror@plt+0x3f538>  // b.any
  442408:	mov	x6, x2
  44240c:	add	x0, x19, #0x1
  442410:	add	x1, sp, #0x48
  442414:	bl	441a04 <ferror@plt+0x3ec34>
  442418:	mov	x19, x0
  44241c:	cbz	x0, 442364 <ferror@plt+0x3f594>
  442420:	cbz	x6, 442430 <ferror@plt+0x3f660>
  442424:	mov	x1, x6
  442428:	mov	x0, x20
  44242c:	bl	441b1c <ferror@plt+0x3ed4c>
  442430:	adrp	x21, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  442434:	add	x21, x21, #0x75
  442438:	mov	x0, x20
  44243c:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  442440:	add	x1, x1, #0xdf4
  442444:	bl	441b1c <ferror@plt+0x3ed4c>
  442448:	ldr	x0, [sp, #72]
  44244c:	sub	x1, x0, #0x1
  442450:	str	x1, [sp, #72]
  442454:	cbnz	x0, 442788 <ferror@plt+0x3f9b8>
  442458:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44245c:	add	x1, x1, #0x159
  442460:	b	442500 <ferror@plt+0x3f730>
  442464:	cmp	w1, #0x77
  442468:	b.ne	442308 <ferror@plt+0x3f538>  // b.any
  44246c:	add	x0, x19, #0x1
  442470:	strb	w1, [sp, #70]
  442474:	add	x1, sp, #0x48
  442478:	bl	441a04 <ferror@plt+0x3ec34>
  44247c:	mov	x19, x0
  442480:	cbz	x0, 442364 <ferror@plt+0x3f594>
  442484:	ldrb	w0, [x0]
  442488:	cmp	w0, #0x5f
  44248c:	b.ne	442308 <ferror@plt+0x3f538>  // b.any
  442490:	adrp	x21, 46c000 <_obstack_memory_used@@Base+0x275fc>
  442494:	adrp	x23, 46c000 <_obstack_memory_used@@Base+0x275fc>
  442498:	add	x19, x19, #0x1
  44249c:	add	x21, x21, #0xb08
  4424a0:	add	x23, x23, #0x35c
  4424a4:	adrp	x22, 468000 <_obstack_memory_used@@Base+0x235fc>
  4424a8:	add	x22, x22, #0xb26
  4424ac:	mov	x0, x20
  4424b0:	mov	x1, x22
  4424b4:	bl	441b1c <ferror@plt+0x3ed4c>
  4424b8:	ldr	x0, [sp, #72]
  4424bc:	sub	x1, x0, #0x1
  4424c0:	str	x1, [sp, #72]
  4424c4:	cbnz	x0, 442584 <ferror@plt+0x3f7b4>
  4424c8:	mov	x0, x20
  4424cc:	mov	x1, x22
  4424d0:	bl	441b1c <ferror@plt+0x3ed4c>
  4424d4:	ldrb	w0, [sp, #70]
  4424d8:	cmp	w0, #0x61
  4424dc:	b.eq	442364 <ferror@plt+0x3f594>  // b.none
  4424e0:	add	x1, sp, #0x46
  4424e4:	mov	x0, x20
  4424e8:	mov	w2, #0x1                   	// #1
  4424ec:	bl	441e84 <ferror@plt+0x3f0b4>
  4424f0:	b	442364 <ferror@plt+0x3f594>
  4424f4:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4424f8:	add	x19, x19, #0x1
  4424fc:	add	x1, x1, #0x58
  442500:	mov	x0, x20
  442504:	bl	441b1c <ferror@plt+0x3ed4c>
  442508:	b	442364 <ferror@plt+0x3f594>
  44250c:	add	x19, x19, #0x1
  442510:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x235fc>
  442514:	add	x1, x1, #0x6a
  442518:	bl	441b1c <ferror@plt+0x3ed4c>
  44251c:	b	442350 <ferror@plt+0x3f580>
  442520:	add	x19, x19, #0x1
  442524:	b	442350 <ferror@plt+0x3f580>
  442528:	add	x1, x19, #0x1
  44252c:	mov	x0, x20
  442530:	bl	44214c <ferror@plt+0x3f37c>
  442534:	b	442360 <ferror@plt+0x3f590>
  442538:	add	x1, x19, #0x1
  44253c:	mov	x0, x20
  442540:	bl	44214c <ferror@plt+0x3f37c>
  442544:	mov	x19, x0
  442548:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x225fc>
  44254c:	mov	x0, x20
  442550:	add	x1, x1, #0xbfb
  442554:	bl	441b1c <ferror@plt+0x3ed4c>
  442558:	cbz	x19, 442308 <ferror@plt+0x3f538>
  44255c:	ldrb	w0, [x19]
  442560:	cmp	w0, #0x63
  442564:	b.ne	442308 <ferror@plt+0x3f538>  // b.any
  442568:	add	x1, x19, #0x1
  44256c:	mov	x0, x20
  442570:	bl	44214c <ferror@plt+0x3f37c>
  442574:	mov	x19, x0
  442578:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1c5fc>
  44257c:	add	x1, x1, #0x4ea
  442580:	b	442500 <ferror@plt+0x3f730>
  442584:	ldrb	w1, [x19]
  442588:	ldrb	w0, [x19]
  44258c:	ldrh	w3, [x21, x1, lsl #1]
  442590:	tbz	w3, #8, 442308 <ferror@plt+0x3f538>
  442594:	ldrb	w2, [x19, #1]
  442598:	ldrb	w1, [x19, #1]
  44259c:	ldrh	w2, [x21, x2, lsl #1]
  4425a0:	tbz	w2, #8, 442308 <ferror@plt+0x3f538>
  4425a4:	tbnz	w3, #2, 442630 <ferror@plt+0x3f860>
  4425a8:	tst	x3, #0x80
  4425ac:	add	w0, w0, #0xa
  4425b0:	mov	w3, #0x41                  	// #65
  4425b4:	mov	w4, #0x61                  	// #97
  4425b8:	csel	w3, w3, w4, ne  // ne = any
  4425bc:	sub	w0, w0, w3
  4425c0:	strb	w0, [sp, #71]
  4425c4:	ldrb	w0, [sp, #71]
  4425c8:	lsl	w0, w0, #4
  4425cc:	sxtb	w0, w0
  4425d0:	tbnz	w2, #2, 442638 <ferror@plt+0x3f868>
  4425d4:	tst	x2, #0x80
  4425d8:	add	w1, w1, #0xa
  4425dc:	mov	w2, #0x41                  	// #65
  4425e0:	mov	w3, #0x61                  	// #97
  4425e4:	csel	w2, w2, w3, ne  // ne = any
  4425e8:	sub	w1, w1, w2
  4425ec:	orr	w0, w0, w1
  4425f0:	strb	w0, [sp, #71]
  4425f4:	add	x24, x19, #0x2
  4425f8:	ldrb	w0, [sp, #71]
  4425fc:	cmp	w0, #0xd
  442600:	b.hi	442640 <ferror@plt+0x3f870>  // b.pmore
  442604:	cmp	w0, #0x8
  442608:	b.ls	442648 <ferror@plt+0x3f878>  // b.plast
  44260c:	sub	w0, w0, #0xa
  442610:	cmp	w0, #0x3
  442614:	b.hi	44267c <ferror@plt+0x3f8ac>  // b.pmore
  442618:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44261c:	add	x1, x1, #0x500
  442620:	ldrb	w0, [x1, w0, uxtw]
  442624:	adr	x1, 442630 <ferror@plt+0x3f860>
  442628:	add	x0, x1, w0, sxtb #2
  44262c:	br	x0
  442630:	sub	w0, w0, #0x30
  442634:	b	4425c0 <ferror@plt+0x3f7f0>
  442638:	sub	w1, w1, #0x30
  44263c:	b	4425ec <ferror@plt+0x3f81c>
  442640:	cmp	w0, #0x20
  442644:	b.eq	442664 <ferror@plt+0x3f894>  // b.none
  442648:	ldrh	w0, [x21, w0, sxtw #1]
  44264c:	tbz	w0, #4, 4426b8 <ferror@plt+0x3f8e8>
  442650:	add	x1, sp, #0x47
  442654:	mov	w2, #0x1                   	// #1
  442658:	mov	x0, x20
  44265c:	bl	441e84 <ferror@plt+0x3f0b4>
  442660:	b	442674 <ferror@plt+0x3f8a4>
  442664:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x245fc>
  442668:	add	x1, x1, #0x3d6
  44266c:	mov	x0, x20
  442670:	bl	441b1c <ferror@plt+0x3ed4c>
  442674:	mov	x19, x24
  442678:	b	4424b8 <ferror@plt+0x3f6e8>
  44267c:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  442680:	add	x1, x1, #0x47
  442684:	b	44266c <ferror@plt+0x3f89c>
  442688:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  44268c:	add	x1, x1, #0x3b
  442690:	b	44266c <ferror@plt+0x3f89c>
  442694:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  442698:	add	x1, x1, #0x44
  44269c:	b	44266c <ferror@plt+0x3f89c>
  4426a0:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4426a4:	add	x1, x1, #0x41
  4426a8:	b	44266c <ferror@plt+0x3f89c>
  4426ac:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4426b0:	add	x1, x1, #0x37d
  4426b4:	b	44266c <ferror@plt+0x3f89c>
  4426b8:	mov	x1, x23
  4426bc:	mov	x0, x20
  4426c0:	bl	441b1c <ferror@plt+0x3ed4c>
  4426c4:	mov	x1, x19
  4426c8:	mov	w2, #0x2                   	// #2
  4426cc:	b	442658 <ferror@plt+0x3f888>
  4426d0:	mov	w3, #0x0                   	// #0
  4426d4:	mov	x2, #0x0                   	// #0
  4426d8:	mov	x1, x19
  4426dc:	mov	x0, x20
  4426e0:	bl	4422f0 <ferror@plt+0x3f520>
  4426e4:	mov	x19, x0
  4426e8:	mov	x1, x21
  4426ec:	mov	x0, x20
  4426f0:	bl	441b1c <ferror@plt+0x3ed4c>
  4426f4:	mov	x1, x19
  4426f8:	mov	x0, x20
  4426fc:	mov	w3, #0x0                   	// #0
  442700:	mov	x2, #0x0                   	// #0
  442704:	bl	4422f0 <ferror@plt+0x3f520>
  442708:	mov	x19, x0
  44270c:	ldr	x0, [sp, #72]
  442710:	cbz	x0, 4423e4 <ferror@plt+0x3f614>
  442714:	mov	x1, x22
  442718:	mov	x0, x20
  44271c:	bl	441b1c <ferror@plt+0x3ed4c>
  442720:	b	4423e4 <ferror@plt+0x3f614>
  442724:	bl	441a04 <ferror@plt+0x3ec34>
  442728:	mov	x19, x0
  44272c:	cbz	x0, 442364 <ferror@plt+0x3f594>
  442730:	adrp	x21, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  442734:	add	x21, x21, #0x75
  442738:	mov	x0, x20
  44273c:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  442740:	add	x1, x1, #0x646
  442744:	bl	441b1c <ferror@plt+0x3ed4c>
  442748:	ldr	x0, [sp, #72]
  44274c:	sub	x1, x0, #0x1
  442750:	str	x1, [sp, #72]
  442754:	cbz	x0, 4423f4 <ferror@plt+0x3f624>
  442758:	mov	x1, x19
  44275c:	mov	x0, x20
  442760:	mov	w3, #0x0                   	// #0
  442764:	mov	x2, #0x0                   	// #0
  442768:	bl	4422f0 <ferror@plt+0x3f520>
  44276c:	mov	x19, x0
  442770:	ldr	x0, [sp, #72]
  442774:	cbz	x0, 442748 <ferror@plt+0x3f978>
  442778:	mov	x1, x21
  44277c:	mov	x0, x20
  442780:	bl	441b1c <ferror@plt+0x3ed4c>
  442784:	b	442748 <ferror@plt+0x3f978>
  442788:	mov	x1, x19
  44278c:	mov	x0, x20
  442790:	mov	w3, #0x0                   	// #0
  442794:	mov	x2, #0x0                   	// #0
  442798:	bl	4422f0 <ferror@plt+0x3f520>
  44279c:	mov	x19, x0
  4427a0:	ldr	x0, [sp, #72]
  4427a4:	cbz	x0, 442448 <ferror@plt+0x3f678>
  4427a8:	mov	x1, x21
  4427ac:	mov	x0, x20
  4427b0:	bl	441b1c <ferror@plt+0x3ed4c>
  4427b4:	b	442448 <ferror@plt+0x3f678>
  4427b8:	stp	x29, x30, [sp, #-128]!
  4427bc:	mov	x29, sp
  4427c0:	stp	x19, x20, [sp, #16]
  4427c4:	mov	x19, x1
  4427c8:	stp	x21, x22, [sp, #32]
  4427cc:	cbz	x1, 4428ac <ferror@plt+0x3fadc>
  4427d0:	ldrb	w2, [x1]
  4427d4:	cbz	w2, 4428c0 <ferror@plt+0x3faf0>
  4427d8:	mov	x20, x0
  4427dc:	stp	xzr, xzr, [sp, #56]
  4427e0:	stp	xzr, xzr, [sp, #72]
  4427e4:	stp	xzr, xzr, [sp, #88]
  4427e8:	stp	xzr, xzr, [sp, #104]
  4427ec:	str	xzr, [sp, #120]
  4427f0:	bl	441c40 <ferror@plt+0x3ee70>
  4427f4:	mov	x1, x0
  4427f8:	add	x0, sp, #0x38
  4427fc:	bl	441d04 <ferror@plt+0x3ef34>
  442800:	mov	x3, x0
  442804:	add	x0, sp, #0x38
  442808:	bl	441994 <ferror@plt+0x3ebc4>
  44280c:	mov	x1, x3
  442810:	mov	w21, w0
  442814:	add	x0, sp, #0x50
  442818:	bl	442d68 <ferror@plt+0x3ff98>
  44281c:	mov	x3, x0
  442820:	add	x0, sp, #0x50
  442824:	bl	441994 <ferror@plt+0x3ebc4>
  442828:	mov	x1, x3
  44282c:	mov	w22, w0
  442830:	add	x0, sp, #0x68
  442834:	bl	4428c8 <ferror@plt+0x3faf8>
  442838:	mov	x19, x0
  44283c:	add	x0, sp, #0x68
  442840:	bl	441994 <ferror@plt+0x3ebc4>
  442844:	ldr	x1, [sp, #104]
  442848:	mov	w2, w0
  44284c:	mov	x0, x20
  442850:	bl	441ed4 <ferror@plt+0x3f104>
  442854:	mov	x0, x20
  442858:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  44285c:	add	x1, x1, #0xdf4
  442860:	bl	441b1c <ferror@plt+0x3ed4c>
  442864:	ldr	x1, [sp, #80]
  442868:	mov	w2, w22
  44286c:	mov	x0, x20
  442870:	bl	441ed4 <ferror@plt+0x3f104>
  442874:	mov	x0, x20
  442878:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44287c:	add	x1, x1, #0x2fe
  442880:	bl	441b1c <ferror@plt+0x3ed4c>
  442884:	ldr	x1, [sp, #56]
  442888:	mov	w2, w21
  44288c:	mov	x0, x20
  442890:	bl	441ed4 <ferror@plt+0x3f104>
  442894:	add	x0, sp, #0x38
  442898:	bl	4419d4 <ferror@plt+0x3ec04>
  44289c:	add	x0, sp, #0x50
  4428a0:	bl	4419d4 <ferror@plt+0x3ec04>
  4428a4:	add	x0, sp, #0x68
  4428a8:	bl	4419d4 <ferror@plt+0x3ec04>
  4428ac:	mov	x0, x19
  4428b0:	ldp	x19, x20, [sp, #16]
  4428b4:	ldp	x21, x22, [sp, #32]
  4428b8:	ldp	x29, x30, [sp], #128
  4428bc:	ret
  4428c0:	mov	x19, #0x0                   	// #0
  4428c4:	b	4428ac <ferror@plt+0x3fadc>
  4428c8:	stp	x29, x30, [sp, #-80]!
  4428cc:	mov	x29, sp
  4428d0:	stp	x19, x20, [sp, #16]
  4428d4:	mov	x19, x1
  4428d8:	stp	x21, x22, [sp, #32]
  4428dc:	cbz	x1, 442aec <ferror@plt+0x3fd1c>
  4428e0:	mov	x20, x0
  4428e4:	ldrb	w0, [x1]
  4428e8:	cbz	w0, 442d40 <ferror@plt+0x3ff70>
  4428ec:	sub	w0, w0, #0x41
  4428f0:	cmp	w0, #0x39
  4428f4:	b.hi	442d40 <ferror@plt+0x3ff70>  // b.pmore
  4428f8:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4428fc:	add	x1, x1, #0x504
  442900:	ldrh	w0, [x1, w0, uxtw #1]
  442904:	adr	x1, 442910 <ferror@plt+0x3fb40>
  442908:	add	x0, x1, w0, sxth #2
  44290c:	br	x0
  442910:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  442914:	add	x19, x19, #0x1
  442918:	add	x1, x1, #0x380
  44291c:	mov	x0, x20
  442920:	bl	441b1c <ferror@plt+0x3ed4c>
  442924:	mov	x1, x19
  442928:	mov	x0, x20
  44292c:	bl	4428c8 <ferror@plt+0x3faf8>
  442930:	mov	x19, x0
  442934:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  442938:	add	x1, x1, #0x159
  44293c:	mov	x0, x20
  442940:	bl	441b1c <ferror@plt+0x3ed4c>
  442944:	b	442aec <ferror@plt+0x3fd1c>
  442948:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44294c:	add	x19, x19, #0x1
  442950:	add	x1, x1, #0x388
  442954:	b	44291c <ferror@plt+0x3fb4c>
  442958:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44295c:	add	x19, x19, #0x1
  442960:	add	x1, x1, #0x38f
  442964:	b	44291c <ferror@plt+0x3fb4c>
  442968:	ldrb	w0, [x19, #1]
  44296c:	cmp	w0, #0x67
  442970:	b.ne	442984 <ferror@plt+0x3fbb4>  // b.any
  442974:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  442978:	add	x19, x19, #0x2
  44297c:	add	x1, x1, #0x39a
  442980:	b	44291c <ferror@plt+0x3fb4c>
  442984:	cmp	w0, #0x68
  442988:	b.ne	442d40 <ferror@plt+0x3ff70>  // b.any
  44298c:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  442990:	add	x19, x19, #0x2
  442994:	add	x1, x1, #0xeb3
  442998:	b	44291c <ferror@plt+0x3fb4c>
  44299c:	add	x1, x19, #0x1
  4429a0:	mov	x0, x20
  4429a4:	bl	4428c8 <ferror@plt+0x3faf8>
  4429a8:	mov	x19, x0
  4429ac:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4429b0:	add	x1, x1, #0xc69
  4429b4:	b	44293c <ferror@plt+0x3fb6c>
  4429b8:	add	x21, x19, #0x1
  4429bc:	adrp	x3, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4429c0:	mov	x1, x21
  4429c4:	mvn	x0, x19
  4429c8:	add	x3, x3, #0xb08
  4429cc:	ldrb	w2, [x1]
  4429d0:	add	x22, x1, x0
  4429d4:	ldrh	w2, [x3, x2, lsl #1]
  4429d8:	tbnz	w2, #2, 442a14 <ferror@plt+0x3fc44>
  4429dc:	mov	x0, x20
  4429e0:	bl	4428c8 <ferror@plt+0x3faf8>
  4429e4:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  4429e8:	mov	x19, x0
  4429ec:	add	x1, x1, #0x646
  4429f0:	mov	x0, x20
  4429f4:	bl	441b1c <ferror@plt+0x3ed4c>
  4429f8:	mov	x1, x21
  4429fc:	mov	w2, w22
  442a00:	mov	x0, x20
  442a04:	bl	441ed4 <ferror@plt+0x3f104>
  442a08:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  442a0c:	add	x1, x1, #0xc6a
  442a10:	b	44293c <ferror@plt+0x3fb6c>
  442a14:	add	x1, x1, #0x1
  442a18:	b	4429cc <ferror@plt+0x3fbfc>
  442a1c:	add	x1, x19, #0x1
  442a20:	add	x0, sp, #0x38
  442a24:	stp	xzr, xzr, [sp, #56]
  442a28:	str	xzr, [sp, #72]
  442a2c:	bl	4428c8 <ferror@plt+0x3faf8>
  442a30:	mov	x3, x0
  442a34:	add	x0, sp, #0x38
  442a38:	bl	441994 <ferror@plt+0x3ebc4>
  442a3c:	mov	x1, x3
  442a40:	mov	w21, w0
  442a44:	mov	x0, x20
  442a48:	bl	4428c8 <ferror@plt+0x3faf8>
  442a4c:	mov	x19, x0
  442a50:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  442a54:	mov	x0, x20
  442a58:	add	x1, x1, #0x646
  442a5c:	bl	441b1c <ferror@plt+0x3ed4c>
  442a60:	ldr	x1, [sp, #56]
  442a64:	mov	w2, w21
  442a68:	mov	x0, x20
  442a6c:	bl	441ed4 <ferror@plt+0x3f104>
  442a70:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  442a74:	mov	x0, x20
  442a78:	add	x1, x1, #0xc6a
  442a7c:	bl	441b1c <ferror@plt+0x3ed4c>
  442a80:	add	x0, sp, #0x38
  442a84:	bl	4419d4 <ferror@plt+0x3ec04>
  442a88:	b	442aec <ferror@plt+0x3fd1c>
  442a8c:	ldrb	w0, [x19, #1]
  442a90:	add	x2, x19, #0x1
  442a94:	bl	441a64 <ferror@plt+0x3ec94>
  442a98:	cbnz	w0, 442abc <ferror@plt+0x3fcec>
  442a9c:	mov	x1, x2
  442aa0:	mov	x0, x20
  442aa4:	bl	4428c8 <ferror@plt+0x3faf8>
  442aa8:	mov	x19, x0
  442aac:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x255fc>
  442ab0:	add	x1, x1, #0xa10
  442ab4:	b	44293c <ferror@plt+0x3fb6c>
  442ab8:	mov	x2, x19
  442abc:	mov	x1, x2
  442ac0:	mov	x0, x20
  442ac4:	bl	4427b8 <ferror@plt+0x3f9e8>
  442ac8:	mov	x19, x0
  442acc:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  442ad0:	add	x1, x1, #0x3a1
  442ad4:	b	44293c <ferror@plt+0x3fb6c>
  442ad8:	add	x1, x19, #0x1
  442adc:	mov	x0, x20
  442ae0:	mov	w2, #0x2                   	// #2
  442ae4:	bl	44346c <ferror@plt+0x4069c>
  442ae8:	mov	x19, x0
  442aec:	mov	x0, x19
  442af0:	ldp	x19, x20, [sp, #16]
  442af4:	ldp	x21, x22, [sp, #32]
  442af8:	ldp	x29, x30, [sp], #80
  442afc:	ret
  442b00:	add	x1, x19, #0x1
  442b04:	add	x0, sp, #0x38
  442b08:	stp	xzr, xzr, [sp, #56]
  442b0c:	str	xzr, [sp, #72]
  442b10:	bl	441b7c <ferror@plt+0x3edac>
  442b14:	mov	x3, x0
  442b18:	add	x0, sp, #0x38
  442b1c:	bl	441994 <ferror@plt+0x3ebc4>
  442b20:	mov	x1, x3
  442b24:	mov	w21, w0
  442b28:	mov	x0, x20
  442b2c:	bl	4427b8 <ferror@plt+0x3f9e8>
  442b30:	mov	x19, x0
  442b34:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  442b38:	mov	x0, x20
  442b3c:	add	x1, x1, #0x3aa
  442b40:	bl	441b1c <ferror@plt+0x3ed4c>
  442b44:	ldr	x1, [sp, #56]
  442b48:	mov	w2, w21
  442b4c:	mov	x0, x20
  442b50:	bl	441ed4 <ferror@plt+0x3f104>
  442b54:	b	442a80 <ferror@plt+0x3fcb0>
  442b58:	add	x0, x19, #0x1
  442b5c:	add	x1, sp, #0x38
  442b60:	bl	441a04 <ferror@plt+0x3ec34>
  442b64:	mov	x19, x0
  442b68:	cbz	x0, 442aec <ferror@plt+0x3fd1c>
  442b6c:	adrp	x21, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  442b70:	add	x21, x21, #0x75
  442b74:	mov	x0, x20
  442b78:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  442b7c:	add	x1, x1, #0x3b3
  442b80:	bl	441b1c <ferror@plt+0x3ed4c>
  442b84:	ldr	x0, [sp, #56]
  442b88:	sub	x1, x0, #0x1
  442b8c:	str	x1, [sp, #56]
  442b90:	cbz	x0, 442934 <ferror@plt+0x3fb64>
  442b94:	mov	x1, x19
  442b98:	mov	x0, x20
  442b9c:	bl	4428c8 <ferror@plt+0x3faf8>
  442ba0:	mov	x19, x0
  442ba4:	ldr	x0, [sp, #56]
  442ba8:	cbz	x0, 442b84 <ferror@plt+0x3fdb4>
  442bac:	mov	x1, x21
  442bb0:	mov	x0, x20
  442bb4:	bl	441b1c <ferror@plt+0x3ed4c>
  442bb8:	b	442b84 <ferror@plt+0x3fdb4>
  442bbc:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x255fc>
  442bc0:	add	x19, x19, #0x1
  442bc4:	add	x1, x1, #0xa12
  442bc8:	b	44293c <ferror@plt+0x3fb6c>
  442bcc:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  442bd0:	add	x19, x19, #0x1
  442bd4:	add	x1, x1, #0xcb
  442bd8:	b	44293c <ferror@plt+0x3fb6c>
  442bdc:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  442be0:	add	x19, x19, #0x1
  442be4:	add	x1, x1, #0x3bc
  442be8:	b	44293c <ferror@plt+0x3fb6c>
  442bec:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  442bf0:	add	x19, x19, #0x1
  442bf4:	add	x1, x1, #0x3bb
  442bf8:	b	44293c <ferror@plt+0x3fb6c>
  442bfc:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  442c00:	add	x19, x19, #0x1
  442c04:	add	x1, x1, #0xc5
  442c08:	b	44293c <ferror@plt+0x3fb6c>
  442c0c:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  442c10:	add	x19, x19, #0x1
  442c14:	add	x1, x1, #0x3c1
  442c18:	b	44293c <ferror@plt+0x3fb6c>
  442c1c:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  442c20:	add	x19, x19, #0x1
  442c24:	add	x1, x1, #0x98
  442c28:	b	44293c <ferror@plt+0x3fb6c>
  442c2c:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  442c30:	add	x19, x19, #0x1
  442c34:	add	x1, x1, #0x3c8
  442c38:	b	44293c <ferror@plt+0x3fb6c>
  442c3c:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  442c40:	add	x19, x19, #0x1
  442c44:	add	x1, x1, #0xa5
  442c48:	b	44293c <ferror@plt+0x3fb6c>
  442c4c:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  442c50:	add	x19, x19, #0x1
  442c54:	add	x1, x1, #0x3cd
  442c58:	b	44293c <ferror@plt+0x3fb6c>
  442c5c:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  442c60:	add	x19, x19, #0x1
  442c64:	add	x1, x1, #0x3e9
  442c68:	b	44293c <ferror@plt+0x3fb6c>
  442c6c:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  442c70:	add	x19, x19, #0x1
  442c74:	add	x1, x1, #0x6f
  442c78:	b	44293c <ferror@plt+0x3fb6c>
  442c7c:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  442c80:	add	x19, x19, #0x1
  442c84:	add	x1, x1, #0x3f8
  442c88:	b	44293c <ferror@plt+0x3fb6c>
  442c8c:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  442c90:	add	x19, x19, #0x1
  442c94:	add	x1, x1, #0x3d3
  442c98:	b	44293c <ferror@plt+0x3fb6c>
  442c9c:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  442ca0:	add	x19, x19, #0x1
  442ca4:	add	x1, x1, #0x3da
  442ca8:	b	44293c <ferror@plt+0x3fb6c>
  442cac:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  442cb0:	add	x19, x19, #0x1
  442cb4:	add	x1, x1, #0x3e2
  442cb8:	b	44293c <ferror@plt+0x3fb6c>
  442cbc:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  442cc0:	add	x19, x19, #0x1
  442cc4:	add	x1, x1, #0x3e8
  442cc8:	b	44293c <ferror@plt+0x3fb6c>
  442ccc:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  442cd0:	add	x19, x19, #0x1
  442cd4:	add	x1, x1, #0x3ef
  442cd8:	b	44293c <ferror@plt+0x3fb6c>
  442cdc:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  442ce0:	add	x19, x19, #0x1
  442ce4:	add	x1, x1, #0x3f7
  442ce8:	b	44293c <ferror@plt+0x3fb6c>
  442cec:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  442cf0:	add	x19, x19, #0x1
  442cf4:	add	x1, x1, #0x5d
  442cf8:	b	44293c <ferror@plt+0x3fb6c>
  442cfc:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  442d00:	add	x19, x19, #0x1
  442d04:	add	x1, x1, #0x8a
  442d08:	b	44293c <ferror@plt+0x3fb6c>
  442d0c:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  442d10:	add	x19, x19, #0x1
  442d14:	add	x1, x1, #0x3fd
  442d18:	b	44293c <ferror@plt+0x3fb6c>
  442d1c:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  442d20:	add	x19, x19, #0x1
  442d24:	add	x1, x1, #0x403
  442d28:	b	44293c <ferror@plt+0x3fb6c>
  442d2c:	ldrb	w0, [x19, #1]
  442d30:	cmp	w0, #0x69
  442d34:	b.eq	442d48 <ferror@plt+0x3ff78>  // b.none
  442d38:	cmp	w0, #0x6b
  442d3c:	b.eq	442d58 <ferror@plt+0x3ff88>  // b.none
  442d40:	mov	x19, #0x0                   	// #0
  442d44:	b	442aec <ferror@plt+0x3fd1c>
  442d48:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  442d4c:	add	x19, x19, #0x2
  442d50:	add	x1, x1, #0x40a
  442d54:	b	44293c <ferror@plt+0x3fb6c>
  442d58:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  442d5c:	add	x19, x19, #0x2
  442d60:	add	x1, x1, #0x409
  442d64:	b	44293c <ferror@plt+0x3fb6c>
  442d68:	stp	x29, x30, [sp, #-64]!
  442d6c:	mov	x2, #0x0                   	// #0
  442d70:	mov	x29, sp
  442d74:	stp	x19, x20, [sp, #16]
  442d78:	mov	x20, x0
  442d7c:	mov	x19, x1
  442d80:	stp	x21, x22, [sp, #32]
  442d84:	adrp	x21, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  442d88:	adrp	x22, 46c000 <_obstack_memory_used@@Base+0x275fc>
  442d8c:	add	x21, x21, #0x75
  442d90:	add	x22, x22, #0x355
  442d94:	stp	x23, x24, [sp, #48]
  442d98:	adrp	x23, 46c000 <_obstack_memory_used@@Base+0x275fc>
  442d9c:	cbz	x19, 442dd4 <ferror@plt+0x40004>
  442da0:	ldrb	w0, [x19]
  442da4:	cbz	w0, 442dd4 <ferror@plt+0x40004>
  442da8:	cmp	w0, #0x59
  442dac:	b.eq	442dec <ferror@plt+0x4001c>  // b.none
  442db0:	cmp	w0, #0x5a
  442db4:	b.eq	442e08 <ferror@plt+0x40038>  // b.none
  442db8:	cmp	w0, #0x58
  442dbc:	b.ne	442e10 <ferror@plt+0x40040>  // b.any
  442dc0:	add	x19, x19, #0x1
  442dc4:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  442dc8:	mov	x0, x20
  442dcc:	add	x1, x1, #0xebe
  442dd0:	bl	441b1c <ferror@plt+0x3ed4c>
  442dd4:	mov	x0, x19
  442dd8:	ldp	x19, x20, [sp, #16]
  442ddc:	ldp	x21, x22, [sp, #32]
  442de0:	ldp	x23, x24, [sp, #48]
  442de4:	ldp	x29, x30, [sp], #64
  442de8:	ret
  442dec:	add	x19, x19, #0x1
  442df0:	cbz	x2, 442dc4 <ferror@plt+0x3fff4>
  442df4:	mov	x0, x20
  442df8:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  442dfc:	add	x1, x1, #0x75
  442e00:	bl	441b1c <ferror@plt+0x3ed4c>
  442e04:	b	442dc4 <ferror@plt+0x3fff4>
  442e08:	add	x19, x19, #0x1
  442e0c:	b	442dd4 <ferror@plt+0x40004>
  442e10:	add	x24, x2, #0x1
  442e14:	cbz	x2, 442e24 <ferror@plt+0x40054>
  442e18:	mov	x1, x21
  442e1c:	mov	x0, x20
  442e20:	bl	441b1c <ferror@plt+0x3ed4c>
  442e24:	ldrb	w0, [x19]
  442e28:	cmp	w0, #0x4d
  442e2c:	b.ne	442e40 <ferror@plt+0x40070>  // b.any
  442e30:	add	x19, x19, #0x1
  442e34:	mov	x1, x22
  442e38:	mov	x0, x20
  442e3c:	bl	441b1c <ferror@plt+0x3ed4c>
  442e40:	ldrb	w0, [x19]
  442e44:	cmp	w0, #0x4e
  442e48:	b.ne	442e68 <ferror@plt+0x40098>  // b.any
  442e4c:	ldrb	w0, [x19, #1]
  442e50:	cmp	w0, #0x6b
  442e54:	b.ne	442e68 <ferror@plt+0x40098>  // b.any
  442e58:	add	x19, x19, #0x2
  442e5c:	add	x1, x23, #0x34d
  442e60:	mov	x0, x20
  442e64:	bl	441b1c <ferror@plt+0x3ed4c>
  442e68:	ldrb	w0, [x19]
  442e6c:	cmp	w0, #0x4b
  442e70:	b.eq	442eb0 <ferror@plt+0x400e0>  // b.none
  442e74:	cmp	w0, #0x4c
  442e78:	b.eq	442ec0 <ferror@plt+0x400f0>  // b.none
  442e7c:	cmp	w0, #0x4a
  442e80:	b.ne	442e98 <ferror@plt+0x400c8>  // b.any
  442e84:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  442e88:	add	x19, x19, #0x1
  442e8c:	add	x1, x1, #0x40f
  442e90:	mov	x0, x20
  442e94:	bl	441b1c <ferror@plt+0x3ed4c>
  442e98:	mov	x1, x19
  442e9c:	mov	x0, x20
  442ea0:	bl	4428c8 <ferror@plt+0x3faf8>
  442ea4:	mov	x19, x0
  442ea8:	mov	x2, x24
  442eac:	b	442d9c <ferror@plt+0x3ffcc>
  442eb0:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  442eb4:	add	x19, x19, #0x1
  442eb8:	add	x1, x1, #0x325
  442ebc:	b	442e90 <ferror@plt+0x400c0>
  442ec0:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  442ec4:	add	x19, x19, #0x1
  442ec8:	add	x1, x1, #0x414
  442ecc:	b	442e90 <ferror@plt+0x400c0>
  442ed0:	stp	x29, x30, [sp, #-80]!
  442ed4:	add	x1, x1, #0x2
  442ed8:	mov	x29, sp
  442edc:	stp	x19, x20, [sp, #16]
  442ee0:	mov	x20, x0
  442ee4:	stp	x21, x22, [sp, #32]
  442ee8:	mov	w21, w2
  442eec:	mov	w2, #0x0                   	// #0
  442ef0:	bl	44346c <ferror@plt+0x4069c>
  442ef4:	cbnz	x0, 442f10 <ferror@plt+0x40140>
  442ef8:	mov	x19, #0x0                   	// #0
  442efc:	mov	x0, x19
  442f00:	ldp	x19, x20, [sp, #16]
  442f04:	ldp	x21, x22, [sp, #32]
  442f08:	ldp	x29, x30, [sp], #80
  442f0c:	ret
  442f10:	mov	x1, x0
  442f14:	ldrb	w0, [x0]
  442f18:	cmp	w0, #0x5a
  442f1c:	b.ne	442f34 <ferror@plt+0x40164>  // b.any
  442f20:	add	x19, x1, #0x1
  442f24:	cbnz	w21, 442efc <ferror@plt+0x4012c>
  442f28:	ldrb	w0, [x19]
  442f2c:	cbz	w0, 442efc <ferror@plt+0x4012c>
  442f30:	b	442ef8 <ferror@plt+0x40128>
  442f34:	cmp	w0, #0x4d
  442f38:	b.ne	442f40 <ferror@plt+0x40170>  // b.any
  442f3c:	add	x1, x1, #0x1
  442f40:	add	x0, sp, #0x38
  442f44:	stp	xzr, xzr, [sp, #56]
  442f48:	str	xzr, [sp, #72]
  442f4c:	bl	441b7c <ferror@plt+0x3edac>
  442f50:	mov	x19, x0
  442f54:	cbz	x0, 442fe0 <ferror@plt+0x40210>
  442f58:	ldrb	w0, [x0]
  442f5c:	bl	441a64 <ferror@plt+0x3ec94>
  442f60:	cbz	w0, 442fe0 <ferror@plt+0x40210>
  442f64:	mov	x0, x20
  442f68:	bl	441994 <ferror@plt+0x3ebc4>
  442f6c:	mov	x1, x19
  442f70:	mov	w22, w0
  442f74:	mov	x0, x20
  442f78:	bl	441c40 <ferror@plt+0x3ee70>
  442f7c:	mov	x1, x0
  442f80:	mov	x0, x20
  442f84:	bl	441d04 <ferror@plt+0x3ef34>
  442f88:	mov	x19, x0
  442f8c:	mov	w1, w22
  442f90:	mov	x0, x20
  442f94:	bl	4419a4 <ferror@plt+0x3ebd4>
  442f98:	mov	x0, x20
  442f9c:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  442fa0:	add	x1, x1, #0xdf4
  442fa4:	bl	441b1c <ferror@plt+0x3ed4c>
  442fa8:	mov	x1, x19
  442fac:	mov	x0, x20
  442fb0:	bl	442d68 <ferror@plt+0x3ff98>
  442fb4:	mov	x19, x0
  442fb8:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  442fbc:	add	x1, x1, #0x159
  442fc0:	mov	x0, x20
  442fc4:	bl	441b1c <ferror@plt+0x3ed4c>
  442fc8:	add	x0, sp, #0x38
  442fcc:	bl	441994 <ferror@plt+0x3ebc4>
  442fd0:	mov	w2, w0
  442fd4:	ldr	x1, [sp, #56]
  442fd8:	mov	x0, x20
  442fdc:	bl	441ed4 <ferror@plt+0x3f104>
  442fe0:	mov	x0, x20
  442fe4:	bl	441994 <ferror@plt+0x3ebc4>
  442fe8:	mov	x1, x19
  442fec:	mov	w22, w0
  442ff0:	mov	x0, x20
  442ff4:	bl	4428c8 <ferror@plt+0x3faf8>
  442ff8:	mov	w1, w22
  442ffc:	mov	x19, x0
  443000:	mov	x0, x20
  443004:	bl	4419a4 <ferror@plt+0x3ebd4>
  443008:	add	x0, sp, #0x38
  44300c:	bl	4419d4 <ferror@plt+0x3ec04>
  443010:	cbnz	w21, 442efc <ferror@plt+0x4012c>
  443014:	cbnz	x19, 442f28 <ferror@plt+0x40158>
  443018:	b	442ef8 <ferror@plt+0x40128>
  44301c:	stp	x29, x30, [sp, #-112]!
  443020:	mov	w6, w2
  443024:	mov	x29, sp
  443028:	stp	x19, x20, [sp, #16]
  44302c:	stp	x21, x22, [sp, #32]
  443030:	mov	x21, x0
  443034:	mov	x0, x1
  443038:	add	x1, sp, #0x50
  44303c:	stp	x23, x24, [sp, #48]
  443040:	stp	x25, x26, [sp, #64]
  443044:	bl	441a04 <ferror@plt+0x3ec34>
  443048:	cbz	x0, 4430c4 <ferror@plt+0x402f4>
  44304c:	ldr	x22, [sp, #80]
  443050:	cbz	x22, 4430c4 <ferror@plt+0x402f4>
  443054:	mov	x20, x0
  443058:	cmp	w6, #0x4
  44305c:	b.ne	443138 <ferror@plt+0x40368>  // b.any
  443060:	mov	x0, x21
  443064:	adrp	x25, 46c000 <_obstack_memory_used@@Base+0x275fc>
  443068:	adrp	x26, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44306c:	bl	441994 <ferror@plt+0x3ebc4>
  443070:	mov	x19, x20
  443074:	mov	w24, w0
  443078:	mov	x23, x20
  44307c:	add	x25, x25, #0xb08
  443080:	add	x26, x26, #0x41a
  443084:	ldrb	w0, [x19]
  443088:	ldrh	w0, [x25, x0, lsl #1]
  44308c:	tbz	w0, #2, 4430e8 <ferror@plt+0x40318>
  443090:	mov	x1, x19
  443094:	mov	x0, x21
  443098:	mov	w2, #0x3                   	// #3
  44309c:	bl	44346c <ferror@plt+0x4069c>
  4430a0:	mov	x19, x0
  4430a4:	cbnz	x0, 443110 <ferror@plt+0x40340>
  4430a8:	mov	x0, #0xa                   	// #10
  4430ac:	mov	w1, w24
  4430b0:	sub	x19, x20, #0x1
  4430b4:	sdiv	x22, x22, x0
  4430b8:	mov	x0, x21
  4430bc:	bl	4419a4 <ferror@plt+0x3ebd4>
  4430c0:	cbnz	x23, 4430cc <ferror@plt+0x402fc>
  4430c4:	mov	x19, #0x0                   	// #0
  4430c8:	b	44311c <ferror@plt+0x4034c>
  4430cc:	cbnz	x22, 4430e0 <ferror@plt+0x40310>
  4430d0:	mov	x20, x23
  4430d4:	mov	x23, #0x0                   	// #0
  4430d8:	ldr	x22, [sp, #80]
  4430dc:	b	443084 <ferror@plt+0x402b4>
  4430e0:	mov	x20, x19
  4430e4:	b	443084 <ferror@plt+0x402b4>
  4430e8:	mov	x1, x26
  4430ec:	mov	x0, x19
  4430f0:	mov	x2, #0x2                   	// #2
  4430f4:	bl	4028d0 <strncmp@plt>
  4430f8:	cbnz	w0, 443110 <ferror@plt+0x40340>
  4430fc:	mov	x1, x19
  443100:	mov	x0, x21
  443104:	mov	w2, #0x1                   	// #1
  443108:	bl	442ed0 <ferror@plt+0x40100>
  44310c:	b	4430a0 <ferror@plt+0x402d0>
  443110:	sub	x0, x19, x20
  443114:	cmp	x0, x22
  443118:	b.ne	4430a8 <ferror@plt+0x402d8>  // b.any
  44311c:	mov	x0, x19
  443120:	ldp	x19, x20, [sp, #16]
  443124:	ldp	x21, x22, [sp, #32]
  443128:	ldp	x23, x24, [sp, #48]
  44312c:	ldp	x25, x26, [sp, #64]
  443130:	ldp	x29, x30, [sp], #112
  443134:	ret
  443138:	bl	402700 <strlen@plt>
  44313c:	cmp	x0, x22
  443140:	b.cc	4430c4 <ferror@plt+0x402f4>  // b.lo, b.ul, b.last
  443144:	cmp	x22, #0x4
  443148:	b.le	4432c8 <ferror@plt+0x404f8>
  44314c:	ldrb	w0, [x20]
  443150:	cmp	w0, #0x5f
  443154:	b.ne	4432c8 <ferror@plt+0x404f8>  // b.any
  443158:	ldrb	w0, [x20, #1]
  44315c:	cmp	w0, #0x5f
  443160:	b.ne	4432c8 <ferror@plt+0x404f8>  // b.any
  443164:	ldrb	w0, [x20, #2]
  443168:	sub	w0, w0, #0x54
  44316c:	and	w0, w0, #0xff
  443170:	cmp	w0, #0x1
  443174:	b.hi	4432c8 <ferror@plt+0x404f8>  // b.pmore
  443178:	ldrb	w2, [x20, #3]
  44317c:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  443180:	add	x0, x0, #0xb08
  443184:	ldrb	w1, [x20, #3]
  443188:	ldrh	w0, [x0, x2, lsl #1]
  44318c:	tbz	w0, #2, 4430c4 <ferror@plt+0x402f4>
  443190:	cmp	w1, #0x30
  443194:	b.eq	4430c4 <ferror@plt+0x402f4>  // b.none
  443198:	adrp	x24, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  44319c:	add	x24, x24, #0x75
  4431a0:	mov	w2, #0x3                   	// #3
  4431a4:	mov	x23, #0x0                   	// #0
  4431a8:	add	x1, x20, #0x3
  4431ac:	mov	x0, x21
  4431b0:	bl	44301c <ferror@plt+0x4024c>
  4431b4:	mov	x19, x0
  4431b8:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4431bc:	mov	x0, x21
  4431c0:	add	x1, x1, #0x3b8
  4431c4:	bl	441b1c <ferror@plt+0x3ed4c>
  4431c8:	cbz	x19, 4431e0 <ferror@plt+0x40410>
  4431cc:	ldrb	w0, [x19]
  4431d0:	cbz	w0, 4431e0 <ferror@plt+0x40410>
  4431d4:	cmp	w0, #0x5a
  4431d8:	b.ne	443204 <ferror@plt+0x40434>  // b.any
  4431dc:	add	x19, x19, #0x1
  4431e0:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4431e4:	mov	x0, x21
  4431e8:	add	x1, x1, #0x159
  4431ec:	bl	441b1c <ferror@plt+0x3ed4c>
  4431f0:	cbz	x19, 4430c4 <ferror@plt+0x402f4>
  4431f4:	sub	x20, x19, x20
  4431f8:	cmp	x22, x20
  4431fc:	b.eq	44311c <ferror@plt+0x4034c>  // b.none
  443200:	b	4430c4 <ferror@plt+0x402f4>
  443204:	cbz	x23, 443214 <ferror@plt+0x40444>
  443208:	mov	x1, x24
  44320c:	mov	x0, x21
  443210:	bl	441b1c <ferror@plt+0x3ed4c>
  443214:	ldrb	w0, [x19]
  443218:	cmp	w0, #0x48
  44321c:	b.ne	443224 <ferror@plt+0x40454>  // b.any
  443220:	add	x19, x19, #0x1
  443224:	ldrb	w0, [x19]
  443228:	cmp	w0, #0x54
  44322c:	b.eq	44325c <ferror@plt+0x4048c>  // b.none
  443230:	cmp	w0, #0x56
  443234:	b.eq	44326c <ferror@plt+0x4049c>  // b.none
  443238:	cmp	w0, #0x53
  44323c:	b.ne	4432c0 <ferror@plt+0x404f0>  // b.any
  443240:	add	x1, x19, #0x1
  443244:	mov	x0, x21
  443248:	mov	w2, #0x4                   	// #4
  44324c:	bl	44301c <ferror@plt+0x4024c>
  443250:	mov	x19, x0
  443254:	add	x23, x23, #0x1
  443258:	b	4431c8 <ferror@plt+0x403f8>
  44325c:	add	x1, x19, #0x1
  443260:	mov	x0, x21
  443264:	bl	4428c8 <ferror@plt+0x3faf8>
  443268:	b	443250 <ferror@plt+0x40480>
  44326c:	ldrb	w25, [x19, #1]
  443270:	add	x1, x19, #0x1
  443274:	add	x0, sp, #0x58
  443278:	stp	xzr, xzr, [sp, #88]
  44327c:	str	xzr, [sp, #104]
  443280:	bl	4428c8 <ferror@plt+0x3faf8>
  443284:	mov	w1, #0x1                   	// #1
  443288:	mov	x19, x0
  44328c:	add	x0, sp, #0x58
  443290:	bl	441a98 <ferror@plt+0x3ecc8>
  443294:	ldr	x0, [sp, #96]
  443298:	mov	x1, x19
  44329c:	mov	w3, w25
  4432a0:	strb	wzr, [x0]
  4432a4:	mov	x0, x21
  4432a8:	ldr	x2, [sp, #88]
  4432ac:	bl	4422f0 <ferror@plt+0x3f520>
  4432b0:	mov	x19, x0
  4432b4:	add	x0, sp, #0x58
  4432b8:	bl	4419d4 <ferror@plt+0x3ec04>
  4432bc:	b	443254 <ferror@plt+0x40484>
  4432c0:	mov	x19, #0x0                   	// #0
  4432c4:	b	4431e0 <ferror@plt+0x40410>
  4432c8:	sub	x1, x22, #0x6
  4432cc:	cmp	x1, #0x6
  4432d0:	b.hi	443458 <ferror@plt+0x40688>  // b.pmore
  4432d4:	cmp	w1, #0x6
  4432d8:	b.hi	443458 <ferror@plt+0x40688>  // b.pmore
  4432dc:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4432e0:	add	x0, x0, #0x578
  4432e4:	ldrb	w0, [x0, w1, uxtw]
  4432e8:	adr	x1, 4432f4 <ferror@plt+0x40524>
  4432ec:	add	x0, x1, w0, sxtb #2
  4432f0:	br	x0
  4432f4:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4432f8:	mov	x0, x20
  4432fc:	add	x1, x1, #0x41d
  443300:	mov	x2, #0x6                   	// #6
  443304:	bl	4028d0 <strncmp@plt>
  443308:	cbnz	w0, 443328 <ferror@plt+0x40558>
  44330c:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  443310:	add	x1, x1, #0x42c
  443314:	mov	x0, x21
  443318:	bl	441b1c <ferror@plt+0x3ed4c>
  44331c:	ldr	x0, [sp, #80]
  443320:	add	x19, x20, x0
  443324:	b	44311c <ferror@plt+0x4034c>
  443328:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44332c:	mov	x0, x20
  443330:	add	x1, x1, #0x424
  443334:	mov	x2, #0x6                   	// #6
  443338:	bl	4028d0 <strncmp@plt>
  44333c:	cbnz	w0, 44334c <ferror@plt+0x4057c>
  443340:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  443344:	add	x1, x1, #0x42b
  443348:	b	443314 <ferror@plt+0x40544>
  44334c:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  443350:	mov	x0, x20
  443354:	add	x1, x1, #0x431
  443358:	mov	x2, #0x7                   	// #7
  44335c:	bl	4028d0 <strncmp@plt>
  443360:	cbnz	w0, 443390 <ferror@plt+0x405c0>
  443364:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  443368:	add	x1, x1, #0x439
  44336c:	mov	x0, x21
  443370:	bl	441e00 <ferror@plt+0x3f030>
  443374:	mov	x0, x21
  443378:	bl	441994 <ferror@plt+0x3ebc4>
  44337c:	sub	w1, w0, #0x1
  443380:	mov	x0, x21
  443384:	bl	4419a4 <ferror@plt+0x3ebd4>
  443388:	ldr	x19, [sp, #80]
  44338c:	b	443408 <ferror@plt+0x40638>
  443390:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  443394:	mov	x0, x20
  443398:	add	x1, x1, #0x44a
  44339c:	mov	x2, #0x7                   	// #7
  4433a0:	bl	4028d0 <strncmp@plt>
  4433a4:	cbnz	w0, 443458 <ferror@plt+0x40688>
  4433a8:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  4433ac:	add	x1, x1, #0xc9a
  4433b0:	b	44336c <ferror@plt+0x4059c>
  4433b4:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4433b8:	mov	x0, x20
  4433bc:	add	x1, x1, #0x452
  4433c0:	mov	x2, #0x8                   	// #8
  4433c4:	bl	4028d0 <strncmp@plt>
  4433c8:	cbnz	w0, 443458 <ferror@plt+0x40688>
  4433cc:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4433d0:	add	x1, x1, #0x45b
  4433d4:	b	44336c <ferror@plt+0x4059c>
  4433d8:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4433dc:	mov	x0, x20
  4433e0:	add	x1, x1, #0x46a
  4433e4:	mov	x2, #0xd                   	// #13
  4433e8:	bl	4028d0 <strncmp@plt>
  4433ec:	cbnz	w0, 443458 <ferror@plt+0x40688>
  4433f0:	mov	x0, x21
  4433f4:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4433f8:	add	x1, x1, #0x478
  4433fc:	bl	441b1c <ferror@plt+0x3ed4c>
  443400:	ldr	x19, [sp, #80]
  443404:	add	x19, x19, #0x3
  443408:	add	x19, x20, x19
  44340c:	b	44311c <ferror@plt+0x4034c>
  443410:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  443414:	mov	x0, x20
  443418:	add	x1, x1, #0x483
  44341c:	mov	x2, #0xc                   	// #12
  443420:	bl	4028d0 <strncmp@plt>
  443424:	cbnz	w0, 443458 <ferror@plt+0x40688>
  443428:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44342c:	add	x1, x1, #0x490
  443430:	b	44336c <ferror@plt+0x4059c>
  443434:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  443438:	mov	x0, x20
  44343c:	add	x1, x1, #0x49f
  443440:	mov	x2, #0xd                   	// #13
  443444:	bl	4028d0 <strncmp@plt>
  443448:	cbnz	w0, 443458 <ferror@plt+0x40688>
  44344c:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  443450:	add	x1, x1, #0x4ad
  443454:	b	44336c <ferror@plt+0x4059c>
  443458:	mov	w2, w22
  44345c:	mov	x1, x20
  443460:	mov	x0, x21
  443464:	bl	441ed4 <ferror@plt+0x3f104>
  443468:	b	443388 <ferror@plt+0x405b8>
  44346c:	stp	x29, x30, [sp, #-96]!
  443470:	mov	x29, sp
  443474:	stp	x19, x20, [sp, #16]
  443478:	mov	x20, x0
  44347c:	mov	x19, x1
  443480:	stp	x23, x24, [sp, #48]
  443484:	adrp	x23, 46c000 <_obstack_memory_used@@Base+0x275fc>
  443488:	add	x23, x23, #0xb08
  44348c:	stp	x25, x26, [sp, #64]
  443490:	adrp	x26, 46b000 <_obstack_memory_used@@Base+0x265fc>
  443494:	mov	w25, w2
  443498:	add	x26, x26, #0xec0
  44349c:	mov	x24, #0x0                   	// #0
  4434a0:	stp	x21, x22, [sp, #32]
  4434a4:	str	x27, [sp, #80]
  4434a8:	adrp	x27, 46b000 <_obstack_memory_used@@Base+0x265fc>
  4434ac:	cbz	x24, 4434bc <ferror@plt+0x406ec>
  4434b0:	mov	x1, x26
  4434b4:	mov	x0, x20
  4434b8:	bl	441b1c <ferror@plt+0x3ed4c>
  4434bc:	ldrb	w0, [x19]
  4434c0:	cmp	w0, #0x30
  4434c4:	b.eq	4435c8 <ferror@plt+0x407f8>  // b.none
  4434c8:	mov	x1, x19
  4434cc:	mov	w2, w25
  4434d0:	mov	x0, x20
  4434d4:	bl	44301c <ferror@plt+0x4024c>
  4434d8:	mov	x19, x0
  4434dc:	cbz	x0, 4435a8 <ferror@plt+0x407d8>
  4434e0:	ldrb	w3, [x0]
  4434e4:	cmp	w3, #0x4d
  4434e8:	b.eq	4434f8 <ferror@plt+0x40728>  // b.none
  4434ec:	mov	w0, w3
  4434f0:	bl	441a64 <ferror@plt+0x3ec94>
  4434f4:	cbz	w0, 443598 <ferror@plt+0x407c8>
  4434f8:	mov	x0, x20
  4434fc:	bl	441994 <ferror@plt+0x3ebc4>
  443500:	mov	w22, w0
  443504:	cmp	w3, #0x4d
  443508:	b.ne	4435d0 <ferror@plt+0x40800>  // b.any
  44350c:	add	x1, x19, #0x1
  443510:	mov	x0, x20
  443514:	bl	441b7c <ferror@plt+0x3edac>
  443518:	mov	x5, x0
  44351c:	mov	w1, w22
  443520:	mov	x0, x20
  443524:	bl	4419a4 <ferror@plt+0x3ebd4>
  443528:	mov	x1, x5
  44352c:	mov	x0, x20
  443530:	bl	441c40 <ferror@plt+0x3ee70>
  443534:	mov	x1, x0
  443538:	mov	x0, x20
  44353c:	bl	441d04 <ferror@plt+0x3ef34>
  443540:	mov	w1, w22
  443544:	mov	x21, x0
  443548:	mov	x0, x20
  44354c:	bl	4419a4 <ferror@plt+0x3ebd4>
  443550:	add	x1, x27, #0xdf4
  443554:	mov	x0, x20
  443558:	bl	441b1c <ferror@plt+0x3ed4c>
  44355c:	mov	x1, x21
  443560:	mov	x0, x20
  443564:	bl	442d68 <ferror@plt+0x3ff98>
  443568:	mov	x21, x0
  44356c:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  443570:	mov	x0, x20
  443574:	add	x1, x1, #0x159
  443578:	bl	441b1c <ferror@plt+0x3ed4c>
  44357c:	cbz	x21, 44358c <ferror@plt+0x407bc>
  443580:	ldrb	w0, [x21]
  443584:	ldrh	w0, [x23, x0, lsl #1]
  443588:	tbnz	w0, #2, 4435d8 <ferror@plt+0x40808>
  44358c:	mov	w1, w22
  443590:	mov	x0, x20
  443594:	bl	4419a4 <ferror@plt+0x3ebd4>
  443598:	ldrb	w0, [x19]
  44359c:	add	x24, x24, #0x1
  4435a0:	ldrh	w0, [x23, x0, lsl #1]
  4435a4:	tbnz	w0, #2, 4434ac <ferror@plt+0x406dc>
  4435a8:	mov	x0, x19
  4435ac:	ldp	x19, x20, [sp, #16]
  4435b0:	ldp	x21, x22, [sp, #32]
  4435b4:	ldp	x23, x24, [sp, #48]
  4435b8:	ldp	x25, x26, [sp, #64]
  4435bc:	ldr	x27, [sp, #80]
  4435c0:	ldp	x29, x30, [sp], #96
  4435c4:	ret
  4435c8:	add	x19, x19, #0x1
  4435cc:	b	4434bc <ferror@plt+0x406ec>
  4435d0:	mov	x5, x19
  4435d4:	b	443528 <ferror@plt+0x40758>
  4435d8:	mov	x19, x21
  4435dc:	b	443598 <ferror@plt+0x407c8>
  4435e0:	cbnz	x0, 4435fc <ferror@plt+0x4082c>
  4435e4:	mov	x0, #0x0                   	// #0
  4435e8:	ret
  4435ec:	mov	x0, #0x0                   	// #0
  4435f0:	ldr	x19, [sp, #16]
  4435f4:	ldp	x29, x30, [sp], #64
  4435f8:	ret
  4435fc:	stp	x29, x30, [sp, #-64]!
  443600:	mov	x29, sp
  443604:	str	x19, [sp, #16]
  443608:	mov	x19, x0
  44360c:	ldrb	w1, [x0]
  443610:	cbz	w1, 4435ec <ferror@plt+0x4081c>
  443614:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  443618:	mov	x2, #0x2                   	// #2
  44361c:	add	x1, x1, #0x41a
  443620:	bl	4028d0 <strncmp@plt>
  443624:	cbnz	w0, 4435ec <ferror@plt+0x4081c>
  443628:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44362c:	mov	x0, x19
  443630:	add	x1, x1, #0x4bd
  443634:	stp	xzr, xzr, [sp, #40]
  443638:	str	xzr, [sp, #56]
  44363c:	bl	402ad0 <strcmp@plt>
  443640:	cbnz	w0, 443680 <ferror@plt+0x408b0>
  443644:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  443648:	add	x0, sp, #0x28
  44364c:	add	x1, x1, #0x4c4
  443650:	bl	441b1c <ferror@plt+0x3ed4c>
  443654:	add	x0, sp, #0x28
  443658:	bl	441994 <ferror@plt+0x3ebc4>
  44365c:	cmp	w0, #0x0
  443660:	b.le	4435ec <ferror@plt+0x4081c>
  443664:	add	x0, sp, #0x28
  443668:	mov	w1, #0x1                   	// #1
  44366c:	bl	441a98 <ferror@plt+0x3ecc8>
  443670:	ldr	x0, [sp, #48]
  443674:	strb	wzr, [x0]
  443678:	ldr	x0, [sp, #40]
  44367c:	b	4435f0 <ferror@plt+0x40820>
  443680:	mov	x1, x19
  443684:	add	x0, sp, #0x28
  443688:	mov	w2, #0x0                   	// #0
  44368c:	bl	442ed0 <ferror@plt+0x40100>
  443690:	cbnz	x0, 443654 <ferror@plt+0x40884>
  443694:	add	x0, sp, #0x28
  443698:	bl	4419d4 <ferror@plt+0x3ec04>
  44369c:	b	443654 <ferror@plt+0x40884>
  4436a0:	b	402ad0 <strcmp@plt>
  4436a4:	b	4028d0 <strncmp@plt>
  4436a8:	adrp	x4, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4436ac:	add	x4, x4, #0xa08
  4436b0:	mov	x3, x0
  4436b4:	mov	w5, #0x2f                  	// #47
  4436b8:	mov	w0, #0x0                   	// #0
  4436bc:	mov	w6, #0x43                  	// #67
  4436c0:	ldrb	w2, [x3], #1
  4436c4:	cbnz	w2, 4436cc <ferror@plt+0x408fc>
  4436c8:	ret
  4436cc:	cmp	w2, #0x5c
  4436d0:	mul	w1, w0, w6
  4436d4:	csel	w2, w2, w5, ne  // ne = any
  4436d8:	sub	w1, w1, #0x71
  4436dc:	ldrb	w0, [x4, w2, sxtw]
  4436e0:	add	w0, w0, w1
  4436e4:	b	4436c0 <ferror@plt+0x408f0>
  4436e8:	stp	x29, x30, [sp, #-16]!
  4436ec:	mov	x29, sp
  4436f0:	bl	402ad0 <strcmp@plt>
  4436f4:	cmp	w0, #0x0
  4436f8:	cset	w0, eq  // eq = none
  4436fc:	ldp	x29, x30, [sp], #16
  443700:	ret
  443704:	stp	x29, x30, [sp, #-48]!
  443708:	mov	x29, sp
  44370c:	stp	x19, x20, [sp, #16]
  443710:	mov	x19, x1
  443714:	str	x21, [sp, #32]
  443718:	bl	4446b8 <ferror@plt+0x418e8>
  44371c:	mov	x20, x0
  443720:	mov	x0, x19
  443724:	bl	4446b8 <ferror@plt+0x418e8>
  443728:	mov	x1, x0
  44372c:	mov	x19, x0
  443730:	mov	x0, x20
  443734:	bl	4436e8 <ferror@plt+0x40918>
  443738:	mov	w21, w0
  44373c:	mov	x0, x20
  443740:	bl	402b30 <free@plt>
  443744:	mov	x0, x19
  443748:	bl	402b30 <free@plt>
  44374c:	mov	w0, w21
  443750:	ldp	x19, x20, [sp, #16]
  443754:	ldr	x21, [sp, #32]
  443758:	ldp	x29, x30, [sp], #48
  44375c:	ret
  443760:	cbz	x0, 44376c <ferror@plt+0x4099c>
  443764:	mov	w1, #0x2                   	// #2
  443768:	b	402cb0 <__fsetlocking@plt>
  44376c:	ret
  443770:	b	443760 <ferror@plt+0x40990>
  443774:	stp	x29, x30, [sp, #-16]!
  443778:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  44377c:	mov	x29, sp
  443780:	ldr	x0, [x0, #1472]
  443784:	bl	443760 <ferror@plt+0x40990>
  443788:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  44378c:	ldr	x0, [x0, #1464]
  443790:	bl	443760 <ferror@plt+0x40990>
  443794:	ldp	x29, x30, [sp], #16
  443798:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  44379c:	ldr	x0, [x0, #1440]
  4437a0:	b	443760 <ferror@plt+0x40990>
  4437a4:	stp	x29, x30, [sp, #-32]!
  4437a8:	mov	x29, sp
  4437ac:	str	x19, [sp, #16]
  4437b0:	bl	402870 <fopen@plt>
  4437b4:	mov	x19, x0
  4437b8:	bl	443760 <ferror@plt+0x40990>
  4437bc:	mov	x0, x19
  4437c0:	ldr	x19, [sp, #16]
  4437c4:	ldp	x29, x30, [sp], #32
  4437c8:	ret
  4437cc:	stp	x29, x30, [sp, #-32]!
  4437d0:	mov	x29, sp
  4437d4:	str	x19, [sp, #16]
  4437d8:	bl	402940 <fdopen@plt>
  4437dc:	mov	x19, x0
  4437e0:	bl	443760 <ferror@plt+0x40990>
  4437e4:	mov	x0, x19
  4437e8:	ldr	x19, [sp, #16]
  4437ec:	ldp	x29, x30, [sp], #32
  4437f0:	ret
  4437f4:	stp	x29, x30, [sp, #-32]!
  4437f8:	mov	x29, sp
  4437fc:	str	x19, [sp, #16]
  443800:	bl	402b50 <freopen@plt>
  443804:	mov	x19, x0
  443808:	bl	443760 <ferror@plt+0x40990>
  44380c:	mov	x0, x19
  443810:	ldr	x19, [sp, #16]
  443814:	ldp	x29, x30, [sp], #32
  443818:	ret
  44381c:	cmp	x1, x0
  443820:	cset	w0, eq  // eq = none
  443824:	ret
  443828:	asr	x1, x0, #32
  44382c:	mov	w2, #0xadcc                	// #44492
  443830:	sub	w1, w1, w0
  443834:	movk	w2, #0xbdec, lsl #16
  443838:	add	w1, w1, w2
  44383c:	mov	w2, #0x109a                	// #4250
  443840:	movk	w2, #0x2, lsl #16
  443844:	eor	w1, w1, w2
  443848:	mov	w2, #0x2785                	// #10117
  44384c:	mov	w3, #0x5234                	// #21044
  443850:	movk	w2, #0x5c24, lsl #16
  443854:	add	w0, w2, w0
  443858:	sub	w0, w0, w1
  44385c:	movk	w3, #0x4213, lsl #16
  443860:	eor	w0, w0, w1, lsl #8
  443864:	sub	w3, w3, w1
  443868:	sub	w3, w3, w0
  44386c:	sub	w1, w1, w0
  443870:	eor	w3, w3, w0, lsr #13
  443874:	sub	w1, w1, w3
  443878:	sub	w0, w0, w3
  44387c:	eor	w1, w1, w3, lsr #12
  443880:	sub	w0, w0, w1
  443884:	sub	w3, w3, w1
  443888:	eor	w0, w0, w1, lsl #16
  44388c:	sub	w3, w3, w0
  443890:	sub	w1, w1, w0
  443894:	eor	w3, w3, w0, lsr #5
  443898:	sub	w1, w1, w3
  44389c:	sub	w2, w0, w3
  4438a0:	eor	w1, w1, w3, lsr #3
  4438a4:	sub	w2, w2, w1
  4438a8:	eor	w2, w2, w1, lsl #10
  4438ac:	sub	w1, w3, w1
  4438b0:	sub	w0, w1, w2
  4438b4:	eor	w0, w0, w2, lsr #15
  4438b8:	ret
  4438bc:	ubfiz	x1, x1, #4, #32
  4438c0:	adrp	x4, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4438c4:	add	x4, x4, #0x5b0
  4438c8:	add	w6, w0, #0x1
  4438cc:	add	x5, x4, x1
  4438d0:	ldr	w2, [x5, #8]
  4438d4:	umull	x2, w0, w2
  4438d8:	lsr	x3, x2, #32
  4438dc:	sub	w2, w0, w3
  4438e0:	ldr	w0, [x5, #12]
  4438e4:	add	w2, w3, w2, lsr #1
  4438e8:	lsr	w2, w2, w0
  4438ec:	ldr	w0, [x4, x1]
  4438f0:	sub	w0, w0, #0x2
  4438f4:	msub	w0, w2, w0, w6
  4438f8:	ret
  4438fc:	adrp	x4, 46c000 <_obstack_memory_used@@Base+0x275fc>
  443900:	add	x4, x4, #0x5b0
  443904:	mov	x2, x0
  443908:	mov	w3, #0x0                   	// #0
  44390c:	mov	w0, #0x1e                  	// #30
  443910:	cmp	w0, w3
  443914:	b.ne	443948 <ferror@plt+0x40b78>  // b.any
  443918:	ubfiz	x1, x0, #4, #32
  44391c:	ldr	w1, [x4, x1]
  443920:	cmp	x1, x2
  443924:	b.cs	443974 <ferror@plt+0x40ba4>  // b.hs, b.nlast
  443928:	stp	x29, x30, [sp, #-16]!
  44392c:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  443930:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  443934:	mov	x29, sp
  443938:	ldr	x0, [x0, #1440]
  44393c:	add	x1, x1, #0x57f
  443940:	bl	402d90 <fprintf@plt>
  443944:	bl	402a50 <abort@plt>
  443948:	sub	w1, w0, w3
  44394c:	add	w5, w3, w1, lsr #1
  443950:	add	w1, w3, w1, lsr #1
  443954:	lsl	x1, x1, #4
  443958:	ldr	w1, [x4, x1]
  44395c:	cmp	x1, x2
  443960:	b.cs	44396c <ferror@plt+0x40b9c>  // b.hs, b.nlast
  443964:	add	w3, w5, #0x1
  443968:	b	443910 <ferror@plt+0x40b40>
  44396c:	mov	w0, w5
  443970:	b	443910 <ferror@plt+0x40b40>
  443974:	ret
  443978:	ubfiz	x1, x1, #4, #32
  44397c:	adrp	x4, 46c000 <_obstack_memory_used@@Base+0x275fc>
  443980:	add	x4, x4, #0x5b0
  443984:	add	x5, x4, x1
  443988:	ldr	w1, [x4, x1]
  44398c:	ldr	w2, [x5, #4]
  443990:	umull	x2, w0, w2
  443994:	lsr	x2, x2, #32
  443998:	sub	w3, w0, w2
  44399c:	add	w2, w2, w3, lsr #1
  4439a0:	ldr	w3, [x5, #12]
  4439a4:	lsr	w2, w2, w3
  4439a8:	msub	w0, w2, w1, w0
  4439ac:	ret
  4439b0:	stp	x29, x30, [sp, #-64]!
  4439b4:	mov	x29, sp
  4439b8:	stp	x19, x20, [sp, #16]
  4439bc:	mov	x19, x0
  4439c0:	stp	x21, x22, [sp, #32]
  4439c4:	ldr	w21, [x0, #104]
  4439c8:	ldp	x22, x20, [x0, #24]
  4439cc:	ldp	x1, x0, [x0, #40]
  4439d0:	str	x23, [sp, #48]
  4439d4:	add	x23, x22, x20, lsl #3
  4439d8:	sub	x1, x1, x0
  4439dc:	lsl	x0, x1, #1
  4439e0:	cmp	x20, x1, lsl #1
  4439e4:	b.cc	4439f8 <ferror@plt+0x40c28>  // b.lo, b.ul, b.last
  4439e8:	cmp	x20, x1, lsl #3
  4439ec:	b.ls	443a10 <ferror@plt+0x40c40>  // b.plast
  4439f0:	cmp	x20, #0x20
  4439f4:	b.ls	443a10 <ferror@plt+0x40c40>  // b.plast
  4439f8:	bl	4438fc <ferror@plt+0x40b2c>
  4439fc:	mov	w21, w0
  443a00:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  443a04:	add	x0, x0, #0x5b0
  443a08:	ubfiz	x1, x21, #4, #32
  443a0c:	ldr	w20, [x0, x1]
  443a10:	ldr	x3, [x19, #88]
  443a14:	cbz	x3, 443a98 <ferror@plt+0x40cc8>
  443a18:	ldr	x0, [x19, #80]
  443a1c:	mov	x1, x20
  443a20:	mov	x2, #0x8                   	// #8
  443a24:	blr	x3
  443a28:	cbz	x0, 443b28 <ferror@plt+0x40d58>
  443a2c:	stp	x0, x20, [x19, #24]
  443a30:	mov	x20, x22
  443a34:	ldr	x0, [x19, #40]
  443a38:	str	w21, [x19, #104]
  443a3c:	ldr	x1, [x19, #48]
  443a40:	str	xzr, [x19, #48]
  443a44:	sub	x0, x0, x1
  443a48:	str	x0, [x19, #40]
  443a4c:	ldr	x21, [x20]
  443a50:	cmp	x21, #0x1
  443a54:	b.ls	443aec <ferror@plt+0x40d1c>  // b.plast
  443a58:	ldr	x1, [x19]
  443a5c:	mov	x0, x21
  443a60:	blr	x1
  443a64:	mov	w6, w0
  443a68:	ldr	w10, [x19, #104]
  443a6c:	mov	w1, w10
  443a70:	bl	443978 <ferror@plt+0x40ba8>
  443a74:	mov	w7, w0
  443a78:	ldr	x8, [x19, #24]
  443a7c:	ubfiz	x0, x7, #3, #32
  443a80:	add	x2, x8, x0
  443a84:	ldr	x0, [x8, x0]
  443a88:	cbz	x0, 443ae8 <ferror@plt+0x40d18>
  443a8c:	cmp	x0, #0x1
  443a90:	b.ne	443aac <ferror@plt+0x40cdc>  // b.any
  443a94:	bl	402a50 <abort@plt>
  443a98:	ldr	x2, [x19, #64]
  443a9c:	mov	x0, x20
  443aa0:	mov	x1, #0x8                   	// #8
  443aa4:	blr	x2
  443aa8:	b	443a28 <ferror@plt+0x40c58>
  443aac:	ldr	x9, [x19, #32]
  443ab0:	mov	w1, w10
  443ab4:	mov	w0, w6
  443ab8:	bl	4438bc <ferror@plt+0x40aec>
  443abc:	add	w7, w7, w0
  443ac0:	cmp	x9, w7, uxtw
  443ac4:	b.hi	443acc <ferror@plt+0x40cfc>  // b.pmore
  443ac8:	sub	w7, w7, w9
  443acc:	ubfiz	x1, x7, #3, #32
  443ad0:	add	x2, x8, x1
  443ad4:	ldr	x1, [x8, x1]
  443ad8:	cbz	x1, 443ae8 <ferror@plt+0x40d18>
  443adc:	cmp	x1, #0x1
  443ae0:	b.ne	443abc <ferror@plt+0x40cec>  // b.any
  443ae4:	b	443a94 <ferror@plt+0x40cc4>
  443ae8:	str	x21, [x2]
  443aec:	add	x20, x20, #0x8
  443af0:	cmp	x23, x20
  443af4:	b.hi	443a4c <ferror@plt+0x40c7c>  // b.pmore
  443af8:	ldr	x1, [x19, #72]
  443afc:	cbz	x1, 443b10 <ferror@plt+0x40d40>
  443b00:	mov	x0, x22
  443b04:	blr	x1
  443b08:	mov	w0, #0x1                   	// #1
  443b0c:	b	443b2c <ferror@plt+0x40d5c>
  443b10:	ldr	x2, [x19, #96]
  443b14:	cbz	x2, 443b08 <ferror@plt+0x40d38>
  443b18:	ldr	x0, [x19, #80]
  443b1c:	mov	x1, x22
  443b20:	blr	x2
  443b24:	b	443b08 <ferror@plt+0x40d38>
  443b28:	mov	w0, #0x0                   	// #0
  443b2c:	ldp	x19, x20, [sp, #16]
  443b30:	ldp	x21, x22, [sp, #32]
  443b34:	ldr	x23, [sp, #48]
  443b38:	ldp	x29, x30, [sp], #64
  443b3c:	ret
  443b40:	ldr	x0, [x0, #32]
  443b44:	ret
  443b48:	ldp	x1, x0, [x0, #40]
  443b4c:	sub	x0, x1, x0
  443b50:	ret
  443b54:	stp	x29, x30, [sp, #-96]!
  443b58:	mov	x29, sp
  443b5c:	stp	x19, x20, [sp, #16]
  443b60:	stp	x21, x22, [sp, #32]
  443b64:	mov	x21, x5
  443b68:	stp	x23, x24, [sp, #48]
  443b6c:	mov	x24, x2
  443b70:	mov	x23, x3
  443b74:	stp	x25, x26, [sp, #64]
  443b78:	mov	x25, x1
  443b7c:	stp	x27, x28, [sp, #80]
  443b80:	mov	x27, x4
  443b84:	mov	x28, x6
  443b88:	bl	4438fc <ferror@plt+0x40b2c>
  443b8c:	mov	w22, w0
  443b90:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  443b94:	add	x0, x0, #0x5b0
  443b98:	ubfiz	x1, x22, #4, #32
  443b9c:	mov	x2, #0x70                  	// #112
  443ba0:	ldr	w26, [x0, x1]
  443ba4:	mov	x0, x27
  443ba8:	mov	x1, #0x1                   	// #1
  443bac:	blr	x21
  443bb0:	cbnz	x0, 443bd8 <ferror@plt+0x40e08>
  443bb4:	mov	x20, #0x0                   	// #0
  443bb8:	mov	x0, x20
  443bbc:	ldp	x19, x20, [sp, #16]
  443bc0:	ldp	x21, x22, [sp, #32]
  443bc4:	ldp	x23, x24, [sp, #48]
  443bc8:	ldp	x25, x26, [sp, #64]
  443bcc:	ldp	x27, x28, [sp, #80]
  443bd0:	ldp	x29, x30, [sp], #96
  443bd4:	ret
  443bd8:	mov	x19, x0
  443bdc:	mov	x1, x26
  443be0:	mov	x0, x27
  443be4:	mov	x2, #0x8                   	// #8
  443be8:	blr	x21
  443bec:	mov	x20, x0
  443bf0:	str	x0, [x19, #24]
  443bf4:	cbnz	x0, 443c0c <ferror@plt+0x40e3c>
  443bf8:	cbz	x28, 443bb4 <ferror@plt+0x40de4>
  443bfc:	mov	x1, x19
  443c00:	mov	x0, x27
  443c04:	blr	x28
  443c08:	b	443bb8 <ferror@plt+0x40de8>
  443c0c:	mov	x20, x19
  443c10:	stp	x25, x24, [x19]
  443c14:	str	x23, [x19, #16]
  443c18:	str	x26, [x19, #32]
  443c1c:	stp	x27, x21, [x19, #80]
  443c20:	str	x28, [x19, #96]
  443c24:	str	w22, [x19, #104]
  443c28:	b	443bb8 <ferror@plt+0x40de8>
  443c2c:	stp	x29, x30, [sp, #-96]!
  443c30:	mov	x29, sp
  443c34:	stp	x19, x20, [sp, #16]
  443c38:	mov	x19, x4
  443c3c:	stp	x21, x22, [sp, #32]
  443c40:	mov	x21, x5
  443c44:	stp	x23, x24, [sp, #48]
  443c48:	mov	x24, x2
  443c4c:	mov	x23, x3
  443c50:	stp	x25, x26, [sp, #64]
  443c54:	mov	x25, x1
  443c58:	str	x27, [sp, #80]
  443c5c:	mov	x27, x6
  443c60:	bl	4438fc <ferror@plt+0x40b2c>
  443c64:	mov	w22, w0
  443c68:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  443c6c:	add	x0, x0, #0x5b0
  443c70:	ubfiz	x1, x22, #4, #32
  443c74:	ldr	w26, [x0, x1]
  443c78:	mov	x1, #0x70                  	// #112
  443c7c:	mov	x0, #0x1                   	// #1
  443c80:	blr	x19
  443c84:	cbnz	x0, 443cac <ferror@plt+0x40edc>
  443c88:	mov	x20, #0x0                   	// #0
  443c8c:	mov	x0, x20
  443c90:	ldp	x19, x20, [sp, #16]
  443c94:	ldp	x21, x22, [sp, #32]
  443c98:	ldp	x23, x24, [sp, #48]
  443c9c:	ldp	x25, x26, [sp, #64]
  443ca0:	ldr	x27, [sp, #80]
  443ca4:	ldp	x29, x30, [sp], #96
  443ca8:	ret
  443cac:	mov	x19, x0
  443cb0:	mov	x1, #0x8                   	// #8
  443cb4:	mov	x0, x26
  443cb8:	blr	x21
  443cbc:	mov	x20, x0
  443cc0:	str	x0, [x19, #24]
  443cc4:	cbnz	x0, 443cd8 <ferror@plt+0x40f08>
  443cc8:	cbz	x27, 443c88 <ferror@plt+0x40eb8>
  443ccc:	mov	x0, x19
  443cd0:	blr	x27
  443cd4:	b	443c8c <ferror@plt+0x40ebc>
  443cd8:	mov	x20, x19
  443cdc:	stp	x25, x24, [x19]
  443ce0:	str	x23, [x19, #16]
  443ce4:	str	x26, [x19, #32]
  443ce8:	stp	x21, x27, [x19, #64]
  443cec:	str	w22, [x19, #104]
  443cf0:	b	443c8c <ferror@plt+0x40ebc>
  443cf4:	mov	x6, x5
  443cf8:	mov	x5, x4
  443cfc:	b	443c2c <ferror@plt+0x40e5c>
  443d00:	stp	x1, x2, [x0]
  443d04:	str	x3, [x0, #16]
  443d08:	stp	x4, x5, [x0, #80]
  443d0c:	str	x6, [x0, #96]
  443d10:	ret
  443d14:	adrp	x5, 402000 <_ZGTtnam@plt-0x690>
  443d18:	adrp	x4, 445000 <_obstack_memory_used@@Base+0x5fc>
  443d1c:	add	x5, x5, #0xb30
  443d20:	add	x4, x4, #0x2a0
  443d24:	b	443cf4 <ferror@plt+0x40f24>
  443d28:	adrp	x5, 402000 <_ZGTtnam@plt-0x690>
  443d2c:	adrp	x4, 402000 <_ZGTtnam@plt-0x690>
  443d30:	add	x5, x5, #0xb30
  443d34:	add	x4, x4, #0x950
  443d38:	b	443cf4 <ferror@plt+0x40f24>
  443d3c:	stp	x29, x30, [sp, #-48]!
  443d40:	mov	x29, sp
  443d44:	stp	x19, x20, [sp, #16]
  443d48:	mov	x19, x0
  443d4c:	str	x21, [sp, #32]
  443d50:	ldr	x21, [x0, #24]
  443d54:	ldr	x0, [x0, #16]
  443d58:	cbnz	x0, 443d98 <ferror@plt+0x40fc8>
  443d5c:	ldr	x1, [x19, #72]
  443d60:	cbnz	x1, 443dc4 <ferror@plt+0x40ff4>
  443d64:	ldr	x2, [x19, #96]
  443d68:	cbz	x2, 443de8 <ferror@plt+0x41018>
  443d6c:	ldr	x0, [x19, #80]
  443d70:	mov	x1, x21
  443d74:	blr	x2
  443d78:	mov	x1, x19
  443d7c:	ldr	x21, [sp, #32]
  443d80:	ldr	x0, [x19, #80]
  443d84:	ldr	x2, [x19, #96]
  443d88:	ldp	x19, x20, [sp, #16]
  443d8c:	mov	x16, x2
  443d90:	ldp	x29, x30, [sp], #48
  443d94:	br	x16
  443d98:	ldr	x20, [x19, #32]
  443d9c:	sub	w20, w20, #0x1
  443da0:	sxtw	x20, w20
  443da4:	tbnz	w20, #31, 443d5c <ferror@plt+0x40f8c>
  443da8:	ldr	x0, [x21, x20, lsl #3]
  443dac:	cmp	x0, #0x1
  443db0:	b.ls	443dbc <ferror@plt+0x40fec>  // b.plast
  443db4:	ldr	x1, [x19, #16]
  443db8:	blr	x1
  443dbc:	sub	x20, x20, #0x1
  443dc0:	b	443da4 <ferror@plt+0x40fd4>
  443dc4:	mov	x0, x21
  443dc8:	blr	x1
  443dcc:	mov	x0, x19
  443dd0:	ldr	x21, [sp, #32]
  443dd4:	ldr	x1, [x19, #72]
  443dd8:	ldp	x19, x20, [sp, #16]
  443ddc:	mov	x16, x1
  443de0:	ldp	x29, x30, [sp], #48
  443de4:	br	x16
  443de8:	ldp	x19, x20, [sp, #16]
  443dec:	ldr	x21, [sp, #32]
  443df0:	ldp	x29, x30, [sp], #48
  443df4:	ret
  443df8:	stp	x29, x30, [sp, #-48]!
  443dfc:	mov	x29, sp
  443e00:	stp	x19, x20, [sp, #16]
  443e04:	mov	x19, x0
  443e08:	stp	x21, x22, [sp, #32]
  443e0c:	ldp	x22, x21, [x0, #24]
  443e10:	ldr	x0, [x0, #16]
  443e14:	cbnz	x0, 443e34 <ferror@plt+0x41064>
  443e18:	cmp	x21, #0x20, lsl #12
  443e1c:	b.hi	443e5c <ferror@plt+0x4108c>  // b.pmore
  443e20:	lsl	x2, x21, #3
  443e24:	mov	x0, x22
  443e28:	mov	w1, #0x0                   	// #0
  443e2c:	bl	402930 <memset@plt>
  443e30:	b	443eac <ferror@plt+0x410dc>
  443e34:	sub	w20, w21, #0x1
  443e38:	sxtw	x20, w20
  443e3c:	tbnz	w20, #31, 443e18 <ferror@plt+0x41048>
  443e40:	ldr	x0, [x22, x20, lsl #3]
  443e44:	cmp	x0, #0x1
  443e48:	b.ls	443e54 <ferror@plt+0x41084>  // b.plast
  443e4c:	ldr	x1, [x19, #16]
  443e50:	blr	x1
  443e54:	sub	x20, x20, #0x1
  443e58:	b	443e3c <ferror@plt+0x4106c>
  443e5c:	mov	x0, #0x80                  	// #128
  443e60:	bl	4438fc <ferror@plt+0x40b2c>
  443e64:	sbfiz	x1, x0, #4, #32
  443e68:	mov	w21, w0
  443e6c:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  443e70:	add	x0, x0, #0x5b0
  443e74:	ldr	w20, [x0, x1]
  443e78:	ldr	x1, [x19, #72]
  443e7c:	cbz	x1, 443ec0 <ferror@plt+0x410f0>
  443e80:	ldr	x0, [x19, #24]
  443e84:	blr	x1
  443e88:	ldr	x3, [x19, #88]
  443e8c:	sxtw	x20, w20
  443e90:	cbz	x3, 443ed8 <ferror@plt+0x41108>
  443e94:	ldr	x0, [x19, #80]
  443e98:	mov	x1, x20
  443e9c:	mov	x2, #0x8                   	// #8
  443ea0:	blr	x3
  443ea4:	stp	x0, x20, [x19, #24]
  443ea8:	str	w21, [x19, #104]
  443eac:	ldp	x21, x22, [sp, #32]
  443eb0:	stp	xzr, xzr, [x19, #40]
  443eb4:	ldp	x19, x20, [sp, #16]
  443eb8:	ldp	x29, x30, [sp], #48
  443ebc:	ret
  443ec0:	ldr	x2, [x19, #96]
  443ec4:	cbz	x2, 443e88 <ferror@plt+0x410b8>
  443ec8:	ldr	x1, [x19, #24]
  443ecc:	ldr	x0, [x19, #80]
  443ed0:	blr	x2
  443ed4:	b	443e88 <ferror@plt+0x410b8>
  443ed8:	ldr	x2, [x19, #64]
  443edc:	mov	x0, x20
  443ee0:	mov	x1, #0x8                   	// #8
  443ee4:	blr	x2
  443ee8:	b	443ea4 <ferror@plt+0x410d4>
  443eec:	stp	x29, x30, [sp, #-64]!
  443ef0:	mov	x29, sp
  443ef4:	stp	x19, x20, [sp, #16]
  443ef8:	mov	x19, x0
  443efc:	ldr	w0, [x0, #56]
  443f00:	stp	x21, x22, [sp, #32]
  443f04:	mov	x22, x1
  443f08:	ldr	w1, [x19, #104]
  443f0c:	stp	x23, x24, [sp, #48]
  443f10:	add	w0, w0, #0x1
  443f14:	mov	w23, w2
  443f18:	str	w0, [x19, #56]
  443f1c:	mov	w0, w2
  443f20:	bl	443978 <ferror@plt+0x40ba8>
  443f24:	mov	w21, w0
  443f28:	ldr	x0, [x19, #24]
  443f2c:	ldr	x20, [x0, w21, uxtw #3]
  443f30:	cbnz	x20, 443f50 <ferror@plt+0x41180>
  443f34:	mov	x20, #0x0                   	// #0
  443f38:	mov	x0, x20
  443f3c:	ldp	x19, x20, [sp, #16]
  443f40:	ldp	x21, x22, [sp, #32]
  443f44:	ldp	x23, x24, [sp, #48]
  443f48:	ldp	x29, x30, [sp], #64
  443f4c:	ret
  443f50:	cmp	x20, #0x1
  443f54:	ldr	x24, [x19, #32]
  443f58:	b.ne	443fb4 <ferror@plt+0x411e4>  // b.any
  443f5c:	ldr	w1, [x19, #104]
  443f60:	mov	w0, w23
  443f64:	bl	4438bc <ferror@plt+0x40aec>
  443f68:	mov	w23, w0
  443f6c:	ldr	w0, [x19, #60]
  443f70:	add	w21, w21, w23
  443f74:	add	w0, w0, #0x1
  443f78:	str	w0, [x19, #60]
  443f7c:	cmp	x24, w21, uxtw
  443f80:	b.hi	443f88 <ferror@plt+0x411b8>  // b.pmore
  443f84:	sub	w21, w21, w24
  443f88:	ldr	x0, [x19, #24]
  443f8c:	ldr	x20, [x0, w21, uxtw #3]
  443f90:	cbz	x20, 443f34 <ferror@plt+0x41164>
  443f94:	cmp	x20, #0x1
  443f98:	b.eq	443f6c <ferror@plt+0x4119c>  // b.none
  443f9c:	ldr	x2, [x19, #8]
  443fa0:	mov	x1, x22
  443fa4:	mov	x0, x20
  443fa8:	blr	x2
  443fac:	cbz	w0, 443f6c <ferror@plt+0x4119c>
  443fb0:	b	443f38 <ferror@plt+0x41168>
  443fb4:	ldr	x2, [x19, #8]
  443fb8:	mov	x1, x22
  443fbc:	mov	x0, x20
  443fc0:	blr	x2
  443fc4:	cbnz	w0, 443f38 <ferror@plt+0x41168>
  443fc8:	b	443f5c <ferror@plt+0x4118c>
  443fcc:	stp	x29, x30, [sp, #-32]!
  443fd0:	mov	x29, sp
  443fd4:	stp	x19, x20, [sp, #16]
  443fd8:	mov	x19, x0
  443fdc:	mov	x20, x1
  443fe0:	mov	x0, x1
  443fe4:	ldr	x1, [x19]
  443fe8:	blr	x1
  443fec:	mov	w2, w0
  443ff0:	mov	x1, x20
  443ff4:	mov	x0, x19
  443ff8:	ldp	x19, x20, [sp, #16]
  443ffc:	ldp	x29, x30, [sp], #32
  444000:	b	443eec <ferror@plt+0x4111c>
  444004:	stp	x29, x30, [sp, #-80]!
  444008:	cmp	w3, #0x1
  44400c:	mov	x29, sp
  444010:	stp	x19, x20, [sp, #16]
  444014:	mov	x19, x0
  444018:	stp	x21, x22, [sp, #32]
  44401c:	mov	w22, w3
  444020:	stp	x23, x24, [sp, #48]
  444024:	mov	x24, x1
  444028:	stp	x25, x26, [sp, #64]
  44402c:	mov	w25, w2
  444030:	ldr	x23, [x0, #32]
  444034:	b.ne	444074 <ferror@plt+0x412a4>  // b.any
  444038:	ldr	x2, [x0, #40]
  44403c:	add	x1, x23, x23, lsl #1
  444040:	cmp	x1, x2, lsl #2
  444044:	b.hi	444074 <ferror@plt+0x412a4>  // b.pmore
  444048:	bl	4439b0 <ferror@plt+0x40be0>
  44404c:	cbnz	w0, 444070 <ferror@plt+0x412a0>
  444050:	mov	x20, #0x0                   	// #0
  444054:	mov	x0, x20
  444058:	ldp	x19, x20, [sp, #16]
  44405c:	ldp	x21, x22, [sp, #32]
  444060:	ldp	x23, x24, [sp, #48]
  444064:	ldp	x25, x26, [sp, #64]
  444068:	ldp	x29, x30, [sp], #80
  44406c:	ret
  444070:	ldr	x23, [x19, #32]
  444074:	mov	w0, w25
  444078:	ldr	w1, [x19, #104]
  44407c:	bl	443978 <ferror@plt+0x40ba8>
  444080:	mov	w21, w0
  444084:	ldr	w0, [x19, #56]
  444088:	ubfiz	x26, x21, #3, #32
  44408c:	add	w0, w0, #0x1
  444090:	str	w0, [x19, #56]
  444094:	ldr	x0, [x19, #24]
  444098:	add	x20, x0, x26
  44409c:	ldr	x0, [x0, x26]
  4440a0:	cbz	x0, 444158 <ferror@plt+0x41388>
  4440a4:	cmp	x0, #0x1
  4440a8:	b.eq	4440cc <ferror@plt+0x412fc>  // b.none
  4440ac:	ldr	x2, [x19, #8]
  4440b0:	mov	x1, x24
  4440b4:	blr	x2
  4440b8:	cbz	w0, 4440c8 <ferror@plt+0x412f8>
  4440bc:	ldr	x20, [x19, #24]
  4440c0:	add	x20, x20, x26
  4440c4:	b	444054 <ferror@plt+0x41284>
  4440c8:	mov	x20, #0x0                   	// #0
  4440cc:	ldr	w1, [x19, #104]
  4440d0:	mov	w0, w25
  4440d4:	bl	4438bc <ferror@plt+0x40aec>
  4440d8:	mov	w26, w0
  4440dc:	ldr	w0, [x19, #60]
  4440e0:	add	w21, w21, w26
  4440e4:	add	w0, w0, #0x1
  4440e8:	str	w0, [x19, #60]
  4440ec:	cmp	x23, w21, uxtw
  4440f0:	b.hi	4440f8 <ferror@plt+0x41328>  // b.pmore
  4440f4:	sub	w21, w21, w23
  4440f8:	ldr	x0, [x19, #24]
  4440fc:	ubfiz	x25, x21, #3, #32
  444100:	add	x1, x0, x25
  444104:	ldr	x0, [x0, x25]
  444108:	cbz	x0, 44413c <ferror@plt+0x4136c>
  44410c:	cmp	x0, #0x1
  444110:	b.ne	444120 <ferror@plt+0x41350>  // b.any
  444114:	cmp	x20, #0x0
  444118:	csel	x20, x20, x1, ne  // ne = any
  44411c:	b	4440dc <ferror@plt+0x4130c>
  444120:	ldr	x2, [x19, #8]
  444124:	mov	x1, x24
  444128:	blr	x2
  44412c:	cbz	w0, 4440dc <ferror@plt+0x4130c>
  444130:	ldr	x20, [x19, #24]
  444134:	add	x20, x20, x25
  444138:	b	444054 <ferror@plt+0x41284>
  44413c:	cbz	w22, 444050 <ferror@plt+0x41280>
  444140:	cbz	x20, 44415c <ferror@plt+0x4138c>
  444144:	ldr	x0, [x19, #48]
  444148:	sub	x0, x0, #0x1
  44414c:	str	x0, [x19, #48]
  444150:	str	xzr, [x20]
  444154:	b	444054 <ferror@plt+0x41284>
  444158:	cbz	w22, 444050 <ferror@plt+0x41280>
  44415c:	ldr	x20, [x19, #24]
  444160:	ldr	x0, [x19, #40]
  444164:	add	x20, x20, w21, uxtw #3
  444168:	add	x0, x0, #0x1
  44416c:	str	x0, [x19, #40]
  444170:	b	444054 <ferror@plt+0x41284>
  444174:	stp	x29, x30, [sp, #-48]!
  444178:	mov	x29, sp
  44417c:	stp	x19, x20, [sp, #16]
  444180:	mov	x19, x0
  444184:	mov	x20, x1
  444188:	mov	x0, x1
  44418c:	ldr	x1, [x19]
  444190:	str	x21, [sp, #32]
  444194:	mov	w21, w2
  444198:	blr	x1
  44419c:	mov	w2, w0
  4441a0:	mov	w3, w21
  4441a4:	mov	x1, x20
  4441a8:	mov	x0, x19
  4441ac:	ldp	x19, x20, [sp, #16]
  4441b0:	ldr	x21, [sp, #32]
  4441b4:	ldp	x29, x30, [sp], #48
  4441b8:	b	444004 <ferror@plt+0x41234>
  4441bc:	stp	x29, x30, [sp, #-32]!
  4441c0:	mov	w3, #0x0                   	// #0
  4441c4:	mov	x29, sp
  4441c8:	stp	x19, x20, [sp, #16]
  4441cc:	mov	x19, x0
  4441d0:	bl	444004 <ferror@plt+0x41234>
  4441d4:	cbz	x0, 444200 <ferror@plt+0x41430>
  4441d8:	ldr	x1, [x19, #16]
  4441dc:	mov	x20, x0
  4441e0:	cbz	x1, 4441ec <ferror@plt+0x4141c>
  4441e4:	ldr	x0, [x0]
  4441e8:	blr	x1
  4441ec:	mov	x0, #0x1                   	// #1
  4441f0:	str	x0, [x20]
  4441f4:	ldr	x0, [x19, #48]
  4441f8:	add	x0, x0, #0x1
  4441fc:	str	x0, [x19, #48]
  444200:	ldp	x19, x20, [sp, #16]
  444204:	ldp	x29, x30, [sp], #32
  444208:	ret
  44420c:	stp	x29, x30, [sp, #-32]!
  444210:	mov	x29, sp
  444214:	stp	x19, x20, [sp, #16]
  444218:	mov	x19, x0
  44421c:	mov	x20, x1
  444220:	mov	x0, x1
  444224:	ldr	x1, [x19]
  444228:	blr	x1
  44422c:	mov	w2, w0
  444230:	mov	x1, x20
  444234:	mov	x0, x19
  444238:	ldp	x19, x20, [sp, #16]
  44423c:	ldp	x29, x30, [sp], #32
  444240:	b	4441bc <ferror@plt+0x413ec>
  444244:	stp	x29, x30, [sp, #-32]!
  444248:	mov	x29, sp
  44424c:	stp	x19, x20, [sp, #16]
  444250:	mov	x20, x1
  444254:	ldr	x1, [x0, #24]
  444258:	cmp	x1, x20
  44425c:	b.hi	444284 <ferror@plt+0x414b4>  // b.pmore
  444260:	mov	x19, x0
  444264:	ldr	x0, [x0, #32]
  444268:	add	x0, x1, x0, lsl #3
  44426c:	cmp	x20, x0
  444270:	b.cs	444284 <ferror@plt+0x414b4>  // b.hs, b.nlast
  444274:	ldr	x0, [x20]
  444278:	cbz	x0, 444284 <ferror@plt+0x414b4>
  44427c:	cmp	x0, #0x1
  444280:	b.ne	444288 <ferror@plt+0x414b8>  // b.any
  444284:	bl	402a50 <abort@plt>
  444288:	ldr	x1, [x19, #16]
  44428c:	cbz	x1, 444294 <ferror@plt+0x414c4>
  444290:	blr	x1
  444294:	mov	x0, #0x1                   	// #1
  444298:	str	x0, [x20]
  44429c:	ldr	x0, [x19, #48]
  4442a0:	add	x0, x0, #0x1
  4442a4:	str	x0, [x19, #48]
  4442a8:	ldp	x19, x20, [sp, #16]
  4442ac:	ldp	x29, x30, [sp], #32
  4442b0:	ret
  4442b4:	stp	x29, x30, [sp, #-48]!
  4442b8:	mov	x29, sp
  4442bc:	stp	x19, x20, [sp, #16]
  4442c0:	mov	x20, x1
  4442c4:	stp	x21, x22, [sp, #32]
  4442c8:	mov	x21, x2
  4442cc:	ldp	x19, x22, [x0, #24]
  4442d0:	add	x22, x19, x22, lsl #3
  4442d4:	ldr	x0, [x19]
  4442d8:	cmp	x0, #0x1
  4442dc:	b.hi	4442fc <ferror@plt+0x4152c>  // b.pmore
  4442e0:	add	x19, x19, #0x8
  4442e4:	cmp	x22, x19
  4442e8:	b.hi	4442d4 <ferror@plt+0x41504>  // b.pmore
  4442ec:	ldp	x19, x20, [sp, #16]
  4442f0:	ldp	x21, x22, [sp, #32]
  4442f4:	ldp	x29, x30, [sp], #48
  4442f8:	ret
  4442fc:	mov	x1, x21
  444300:	mov	x0, x19
  444304:	blr	x20
  444308:	cbnz	w0, 4442e0 <ferror@plt+0x41510>
  44430c:	b	4442ec <ferror@plt+0x4151c>
  444310:	stp	x29, x30, [sp, #-48]!
  444314:	mov	x29, sp
  444318:	stp	x19, x20, [sp, #16]
  44431c:	mov	x20, x1
  444320:	mov	x19, x0
  444324:	ldp	x1, x3, [x0, #40]
  444328:	str	x21, [sp, #32]
  44432c:	mov	x21, x2
  444330:	ldr	x2, [x0, #32]
  444334:	sub	x1, x1, x3
  444338:	cmp	x2, x1, lsl #3
  44433c:	b.ls	44434c <ferror@plt+0x4157c>  // b.plast
  444340:	cmp	x2, #0x20
  444344:	b.ls	44434c <ferror@plt+0x4157c>  // b.plast
  444348:	bl	4439b0 <ferror@plt+0x40be0>
  44434c:	mov	x2, x21
  444350:	mov	x1, x20
  444354:	mov	x0, x19
  444358:	ldp	x19, x20, [sp, #16]
  44435c:	ldr	x21, [sp, #32]
  444360:	ldp	x29, x30, [sp], #48
  444364:	b	4442b4 <ferror@plt+0x414e4>
  444368:	ldr	w1, [x0, #56]
  44436c:	cbz	w1, 444384 <ferror@plt+0x415b4>
  444370:	ldr	w0, [x0, #60]
  444374:	ucvtf	d1, w1
  444378:	ucvtf	d0, w0
  44437c:	fdiv	d0, d0, d1
  444380:	ret
  444384:	movi	d0, #0x0
  444388:	b	444380 <ferror@plt+0x415b0>
  44438c:	mov	x2, x0
  444390:	mov	w3, #0x43                  	// #67
  444394:	mov	w0, #0x0                   	// #0
  444398:	ldrb	w1, [x2], #1
  44439c:	cbnz	w1, 4443a4 <ferror@plt+0x415d4>
  4443a0:	ret
  4443a4:	sub	w1, w1, #0x71
  4443a8:	madd	w0, w0, w3, w1
  4443ac:	b	444398 <ferror@plt+0x415c8>
  4443b0:	mov	w3, #0x79b9                	// #31161
  4443b4:	mov	w4, w1
  4443b8:	movk	w3, #0x9e37, lsl #16
  4443bc:	tst	x0, #0x3
  4443c0:	mov	w5, w3
  4443c4:	b.eq	444540 <ferror@plt+0x41770>  // b.none
  4443c8:	cmp	w4, #0xb
  4443cc:	b.ls	444548 <ferror@plt+0x41778>  // b.plast
  4443d0:	ldrb	w7, [x0, #6]
  4443d4:	sub	w4, w4, #0xc
  4443d8:	ldrb	w6, [x0, #5]
  4443dc:	add	x0, x0, #0xc
  4443e0:	lsl	w7, w7, #16
  4443e4:	add	w6, w7, w6, lsl #8
  4443e8:	ldurb	w7, [x0, #-8]
  4443ec:	add	w3, w7, w3
  4443f0:	ldurb	w7, [x0, #-2]
  4443f4:	add	w6, w6, w3
  4443f8:	ldurb	w3, [x0, #-5]
  4443fc:	lsl	w7, w7, #16
  444400:	add	w3, w6, w3, lsl #24
  444404:	ldurb	w6, [x0, #-3]
  444408:	add	w6, w7, w6, lsl #8
  44440c:	ldurb	w7, [x0, #-4]
  444410:	add	w2, w7, w2
  444414:	ldurb	w7, [x0, #-10]
  444418:	add	w6, w6, w2
  44441c:	ldurb	w2, [x0, #-1]
  444420:	lsl	w7, w7, #16
  444424:	add	w2, w6, w2, lsl #24
  444428:	ldurb	w6, [x0, #-11]
  44442c:	add	w6, w7, w6, lsl #8
  444430:	ldurb	w7, [x0, #-12]
  444434:	add	w5, w7, w5
  444438:	add	w5, w6, w5
  44443c:	add	w6, w3, w2
  444440:	sub	w6, w5, w6
  444444:	ldurb	w5, [x0, #-9]
  444448:	sub	w3, w3, w2
  44444c:	add	w5, w6, w5, lsl #24
  444450:	eor	w5, w5, w2, lsr #13
  444454:	sub	w3, w3, w5
  444458:	sub	w2, w2, w5
  44445c:	eor	w3, w3, w5, lsl #8
  444460:	sub	w2, w2, w3
  444464:	sub	w5, w5, w3
  444468:	eor	w2, w2, w3, lsr #13
  44446c:	sub	w5, w5, w2
  444470:	sub	w3, w3, w2
  444474:	eor	w5, w5, w2, lsr #12
  444478:	sub	w3, w3, w5
  44447c:	sub	w2, w2, w5
  444480:	eor	w3, w3, w5, lsl #16
  444484:	sub	w2, w2, w3
  444488:	sub	w5, w5, w3
  44448c:	eor	w2, w2, w3, lsr #5
  444490:	sub	w5, w5, w2
  444494:	sub	w3, w3, w2
  444498:	eor	w5, w5, w2, lsr #3
  44449c:	sub	w3, w3, w5
  4444a0:	sub	w2, w2, w5
  4444a4:	eor	w3, w3, w5, lsl #10
  4444a8:	sub	w2, w2, w3
  4444ac:	eor	w2, w2, w3, lsr #15
  4444b0:	b	4443c8 <ferror@plt+0x415f8>
  4444b4:	ldr	w6, [x0]
  4444b8:	sub	w4, w4, #0xc
  4444bc:	add	x0, x0, #0xc
  4444c0:	add	w5, w5, w6
  4444c4:	ldur	w6, [x0, #-8]
  4444c8:	add	w3, w3, w6
  4444cc:	ldur	w6, [x0, #-4]
  4444d0:	add	w2, w2, w6
  4444d4:	add	w6, w3, w2
  4444d8:	sub	w3, w3, w2
  4444dc:	sub	w5, w5, w6
  4444e0:	eor	w5, w5, w2, lsr #13
  4444e4:	sub	w3, w3, w5
  4444e8:	sub	w2, w2, w5
  4444ec:	eor	w3, w3, w5, lsl #8
  4444f0:	sub	w2, w2, w3
  4444f4:	sub	w5, w5, w3
  4444f8:	eor	w2, w2, w3, lsr #13
  4444fc:	sub	w5, w5, w2
  444500:	sub	w3, w3, w2
  444504:	eor	w5, w5, w2, lsr #12
  444508:	sub	w3, w3, w5
  44450c:	sub	w2, w2, w5
  444510:	eor	w3, w3, w5, lsl #16
  444514:	sub	w2, w2, w3
  444518:	sub	w5, w5, w3
  44451c:	eor	w2, w2, w3, lsr #5
  444520:	sub	w5, w5, w2
  444524:	sub	w3, w3, w2
  444528:	eor	w5, w5, w2, lsr #3
  44452c:	sub	w3, w3, w5
  444530:	sub	w2, w2, w5
  444534:	eor	w3, w3, w5, lsl #10
  444538:	sub	w2, w2, w3
  44453c:	eor	w2, w2, w3, lsr #15
  444540:	cmp	w4, #0xb
  444544:	b.hi	4444b4 <ferror@plt+0x416e4>  // b.pmore
  444548:	sub	w4, w4, #0x1
  44454c:	add	w1, w2, w1
  444550:	cmp	w4, #0xa
  444554:	b.hi	4445c8 <ferror@plt+0x417f8>  // b.pmore
  444558:	adrp	x2, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44455c:	add	x2, x2, #0x5a4
  444560:	ldrb	w2, [x2, w4, uxtw]
  444564:	adr	x4, 444570 <ferror@plt+0x417a0>
  444568:	add	x2, x4, w2, sxtb #2
  44456c:	br	x2
  444570:	ldrb	w2, [x0, #10]
  444574:	add	w1, w1, w2, lsl #24
  444578:	ldrb	w2, [x0, #9]
  44457c:	add	w1, w1, w2, lsl #16
  444580:	ldrb	w2, [x0, #8]
  444584:	add	w1, w1, w2, lsl #8
  444588:	ldrb	w2, [x0, #7]
  44458c:	add	w3, w3, w2, lsl #24
  444590:	ldrb	w2, [x0, #6]
  444594:	add	w3, w3, w2, lsl #16
  444598:	ldrb	w2, [x0, #5]
  44459c:	add	w3, w3, w2, lsl #8
  4445a0:	ldrb	w2, [x0, #4]
  4445a4:	add	w3, w3, w2
  4445a8:	ldrb	w2, [x0, #3]
  4445ac:	add	w5, w5, w2, lsl #24
  4445b0:	ldrb	w2, [x0, #2]
  4445b4:	add	w5, w5, w2, lsl #16
  4445b8:	ldrb	w2, [x0, #1]
  4445bc:	add	w5, w5, w2, lsl #8
  4445c0:	ldrb	w0, [x0]
  4445c4:	add	w5, w5, w0
  4445c8:	add	w0, w3, w1
  4445cc:	sub	w2, w3, w1
  4445d0:	sub	w0, w5, w0
  4445d4:	eor	w0, w0, w1, lsr #13
  4445d8:	sub	w2, w2, w0
  4445dc:	sub	w1, w1, w0
  4445e0:	eor	w2, w2, w0, lsl #8
  4445e4:	sub	w1, w1, w2
  4445e8:	sub	w0, w0, w2
  4445ec:	eor	w1, w1, w2, lsr #13
  4445f0:	sub	w0, w0, w1
  4445f4:	sub	w2, w2, w1
  4445f8:	eor	w0, w0, w1, lsr #12
  4445fc:	sub	w2, w2, w0
  444600:	sub	w1, w1, w0
  444604:	eor	w2, w2, w0, lsl #16
  444608:	sub	w1, w1, w2
  44460c:	sub	w3, w0, w2
  444610:	eor	w1, w1, w2, lsr #5
  444614:	sub	w3, w3, w1
  444618:	sub	w0, w2, w1
  44461c:	eor	w3, w3, w1, lsr #3
  444620:	sub	w0, w0, w3
  444624:	sub	w1, w1, w3
  444628:	eor	w0, w0, w3, lsl #10
  44462c:	sub	w1, w1, w0
  444630:	eor	w0, w1, w0, lsr #15
  444634:	ret
  444638:	ret
  44463c:	mov	x1, x0
  444640:	ldrb	w2, [x1]
  444644:	cbnz	w2, 44464c <ferror@plt+0x4187c>
  444648:	ret
  44464c:	add	x1, x1, #0x1
  444650:	cmp	w2, #0x2f
  444654:	csel	x0, x0, x1, ne  // ne = any
  444658:	b	444640 <ferror@plt+0x41870>
  44465c:	ldrb	w2, [x0]
  444660:	mov	x1, x0
  444664:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  444668:	add	x0, x0, #0xb08
  44466c:	ldrh	w0, [x0, x2, lsl #1]
  444670:	mov	w2, #0x88                  	// #136
  444674:	tst	w2, w0
  444678:	b.eq	44468c <ferror@plt+0x418bc>  // b.none
  44467c:	ldrb	w0, [x1, #1]
  444680:	cmp	w0, #0x3a
  444684:	b.ne	44468c <ferror@plt+0x418bc>  // b.any
  444688:	add	x1, x1, #0x2
  44468c:	mov	x0, x1
  444690:	mov	w3, #0x5c                  	// #92
  444694:	ldrb	w2, [x1]
  444698:	cbnz	w2, 4446a0 <ferror@plt+0x418d0>
  44469c:	ret
  4446a0:	cmp	w2, #0x2f
  4446a4:	add	x1, x1, #0x1
  4446a8:	ccmp	w2, w3, #0x4, ne  // ne = any
  4446ac:	csel	x0, x0, x1, ne  // ne = any
  4446b0:	b	444694 <ferror@plt+0x418c4>
  4446b4:	b	44463c <ferror@plt+0x4186c>
  4446b8:	mov	x12, #0x1020                	// #4128
  4446bc:	sub	sp, sp, x12
  4446c0:	add	x1, sp, #0x20
  4446c4:	stp	x29, x30, [sp]
  4446c8:	mov	x29, sp
  4446cc:	str	x19, [sp, #16]
  4446d0:	mov	x19, x0
  4446d4:	bl	402c90 <realpath@plt>
  4446d8:	cmp	x0, #0x0
  4446dc:	csel	x0, x0, x19, ne  // ne = any
  4446e0:	bl	4029c0 <strdup@plt>
  4446e4:	mov	x12, #0x1020                	// #4128
  4446e8:	ldp	x29, x30, [sp]
  4446ec:	ldr	x19, [sp, #16]
  4446f0:	add	sp, sp, x12
  4446f4:	ret
  4446f8:	stp	x29, x30, [sp, #-16]!
  4446fc:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  444700:	adrp	x2, 46c000 <_obstack_memory_used@@Base+0x275fc>
  444704:	mov	x29, sp
  444708:	ldr	x0, [x0, #1440]
  44470c:	add	x2, x2, #0x890
  444710:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x1b5fc>
  444714:	add	x1, x1, #0xca8
  444718:	bl	402d90 <fprintf@plt>
  44471c:	mov	w0, #0x1                   	// #1
  444720:	bl	402730 <exit@plt>
  444724:	mov	x2, x0
  444728:	mov	x0, x1
  44472c:	ldrb	w4, [x2, #80]
  444730:	ldr	x3, [x2, #56]
  444734:	tbz	w4, #0, 444744 <ferror@plt+0x41974>
  444738:	ldr	x0, [x2, #72]
  44473c:	mov	x16, x3
  444740:	br	x16
  444744:	mov	x16, x3
  444748:	br	x16
  44474c:	stp	x29, x30, [sp, #-48]!
  444750:	cmp	x2, #0x0
  444754:	mov	x29, sp
  444758:	stp	x19, x20, [sp, #16]
  44475c:	mov	x20, x2
  444760:	mov	x2, #0x10                  	// #16
  444764:	csel	x20, x20, x2, ne  // ne = any
  444768:	cmp	x1, #0x0
  44476c:	stp	x21, x22, [sp, #32]
  444770:	mov	x2, #0xfe0                 	// #4064
  444774:	sub	x22, x20, #0x1
  444778:	csel	x1, x1, x2, ne  // ne = any
  44477c:	str	x1, [x0]
  444780:	str	x22, [x0, #48]
  444784:	mov	x19, x0
  444788:	bl	444724 <ferror@plt+0x41954>
  44478c:	mov	x21, x0
  444790:	cbnz	x0, 4447a0 <ferror@plt+0x419d0>
  444794:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  444798:	ldr	x0, [x0, #1384]
  44479c:	blr	x0
  4447a0:	add	x2, x21, #0x10
  4447a4:	neg	x20, x20
  4447a8:	ldr	x0, [x19]
  4447ac:	add	x2, x2, x22
  4447b0:	and	x20, x2, x20
  4447b4:	stp	x21, x20, [x19, #8]
  4447b8:	add	x0, x21, x0
  4447bc:	str	x20, [x19, #24]
  4447c0:	str	x0, [x21]
  4447c4:	str	x0, [x19, #32]
  4447c8:	ldrb	w0, [x19, #80]
  4447cc:	str	xzr, [x21, #8]
  4447d0:	and	w0, w0, #0xfffffff9
  4447d4:	strb	w0, [x19, #80]
  4447d8:	mov	w0, #0x1                   	// #1
  4447dc:	ldp	x19, x20, [sp, #16]
  4447e0:	ldp	x21, x22, [sp, #32]
  4447e4:	ldp	x29, x30, [sp], #48
  4447e8:	ret
  4447ec:	mov	x2, x0
  4447f0:	mov	x0, x1
  4447f4:	ldrb	w4, [x2, #80]
  4447f8:	ldr	x3, [x2, #64]
  4447fc:	tbz	w4, #0, 44480c <ferror@plt+0x41a3c>
  444800:	ldr	x0, [x2, #72]
  444804:	mov	x16, x3
  444808:	br	x16
  44480c:	mov	x16, x3
  444810:	br	x16

0000000000444814 <_obstack_begin@@Base>:
  444814:	stp	x3, x4, [x0, #56]
  444818:	ldrb	w3, [x0, #80]
  44481c:	and	w3, w3, #0xfffffffe
  444820:	strb	w3, [x0, #80]
  444824:	b	44474c <ferror@plt+0x4197c>

0000000000444828 <_obstack_begin_1@@Base>:
  444828:	stp	x3, x4, [x0, #56]
  44482c:	ldrb	w3, [x0, #80]
  444830:	str	x5, [x0, #72]
  444834:	orr	w3, w3, #0x1
  444838:	strb	w3, [x0, #80]
  44483c:	b	44474c <ferror@plt+0x4197c>

0000000000444840 <_obstack_newchunk@@Base>:
  444840:	stp	x29, x30, [sp, #-64]!
  444844:	mov	x29, sp
  444848:	stp	x19, x20, [sp, #16]
  44484c:	mov	x19, x0
  444850:	ldp	x2, x20, [x0, #16]
  444854:	stp	x21, x22, [sp, #32]
  444858:	sub	x21, x20, x2
  44485c:	ldr	x20, [x0, #48]
  444860:	adds	x1, x21, x1
  444864:	cset	x3, cs  // cs = hs, nlast
  444868:	str	x23, [sp, #48]
  44486c:	adds	x1, x20, x1
  444870:	cset	x2, cs  // cs = hs, nlast
  444874:	cmp	x3, #0x0
  444878:	ccmp	x2, #0x0, #0x0, eq  // eq = none
  44487c:	ldr	x23, [x0, #8]
  444880:	b.eq	4448a0 <_obstack_newchunk@@Base+0x60>  // b.none
  444884:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  444888:	ldr	x0, [x0, #1384]
  44488c:	blr	x0
  444890:	str	xzr, [x19, #8]
  444894:	mov	x0, #0x0                   	// #0
  444898:	str	x23, [x0, #8]
  44489c:	brk	#0x3e8
  4448a0:	lsr	x20, x21, #3
  4448a4:	add	x20, x20, #0x64
  4448a8:	add	x2, x20, x1
  4448ac:	ldr	x20, [x0]
  4448b0:	cmp	x20, x1
  4448b4:	csel	x20, x20, x1, cs  // cs = hs, nlast
  4448b8:	cmp	x20, x2
  4448bc:	csel	x20, x20, x2, cs  // cs = hs, nlast
  4448c0:	mov	x1, x20
  4448c4:	bl	444724 <ferror@plt+0x41954>
  4448c8:	mov	x22, x0
  4448cc:	cbz	x0, 444884 <_obstack_newchunk@@Base+0x44>
  4448d0:	mov	x2, x0
  4448d4:	str	x0, [x19, #8]
  4448d8:	ldr	x1, [x19, #16]
  4448dc:	str	x23, [x0, #8]
  4448e0:	add	x20, x0, x20
  4448e4:	str	x20, [x19, #32]
  4448e8:	str	x20, [x2], #16
  4448ec:	ldr	x20, [x19, #48]
  4448f0:	add	x2, x2, x20
  4448f4:	bic	x20, x2, x20
  4448f8:	mov	x2, x21
  4448fc:	mov	x0, x20
  444900:	bl	4026a0 <memcpy@plt>
  444904:	ldrb	w0, [x19, #80]
  444908:	tbnz	w0, #1, 44493c <_obstack_newchunk@@Base+0xfc>
  44490c:	ldr	x0, [x19, #48]
  444910:	add	x1, x23, #0x10
  444914:	add	x1, x1, x0
  444918:	bic	x0, x1, x0
  44491c:	ldr	x1, [x19, #16]
  444920:	cmp	x1, x0
  444924:	b.ne	44493c <_obstack_newchunk@@Base+0xfc>  // b.any
  444928:	ldr	x0, [x23, #8]
  44492c:	str	x0, [x22, #8]
  444930:	mov	x1, x23
  444934:	mov	x0, x19
  444938:	bl	4447ec <ferror@plt+0x41a1c>
  44493c:	ldrb	w0, [x19, #80]
  444940:	ldr	x23, [sp, #48]
  444944:	and	w0, w0, #0xfffffffd
  444948:	str	x20, [x19, #16]
  44494c:	add	x20, x20, x21
  444950:	strb	w0, [x19, #80]
  444954:	ldp	x21, x22, [sp, #32]
  444958:	str	x20, [x19, #24]
  44495c:	ldp	x19, x20, [sp, #16]
  444960:	ldp	x29, x30, [sp], #64
  444964:	ret

0000000000444968 <_obstack_allocated_p@@Base>:
  444968:	ldr	x0, [x0, #8]
  44496c:	cbz	x0, 444984 <_obstack_allocated_p@@Base+0x1c>
  444970:	cmp	x0, x1
  444974:	b.cs	444968 <_obstack_allocated_p@@Base>  // b.hs, b.nlast
  444978:	ldr	x2, [x0]
  44497c:	cmp	x2, x1
  444980:	b.cc	444968 <_obstack_allocated_p@@Base>  // b.lo, b.ul, b.last
  444984:	cmp	x0, #0x0
  444988:	cset	w0, ne  // ne = any
  44498c:	ret

0000000000444990 <_obstack_free@@Base>:
  444990:	stp	x29, x30, [sp, #-48]!
  444994:	mov	x29, sp
  444998:	stp	x19, x20, [sp, #16]
  44499c:	mov	x19, x0
  4449a0:	mov	x20, x1
  4449a4:	ldr	x1, [x0, #8]
  4449a8:	str	x21, [sp, #32]
  4449ac:	cbz	x1, 4449fc <_obstack_free@@Base+0x6c>
  4449b0:	cmp	x1, x20
  4449b4:	b.cs	4449dc <_obstack_free@@Base+0x4c>  // b.hs, b.nlast
  4449b8:	ldr	x0, [x1]
  4449bc:	cmp	x0, x20
  4449c0:	b.cc	4449dc <_obstack_free@@Base+0x4c>  // b.lo, b.ul, b.last
  4449c4:	stp	x1, x20, [x19, #8]
  4449c8:	stp	x20, x0, [x19, #24]
  4449cc:	ldp	x19, x20, [sp, #16]
  4449d0:	ldr	x21, [sp, #32]
  4449d4:	ldp	x29, x30, [sp], #48
  4449d8:	ret
  4449dc:	mov	x0, x19
  4449e0:	ldr	x21, [x1, #8]
  4449e4:	bl	4447ec <ferror@plt+0x41a1c>
  4449e8:	ldrb	w0, [x19, #80]
  4449ec:	mov	x1, x21
  4449f0:	orr	w0, w0, #0x2
  4449f4:	strb	w0, [x19, #80]
  4449f8:	b	4449ac <_obstack_free@@Base+0x1c>
  4449fc:	cbz	x20, 4449cc <_obstack_free@@Base+0x3c>
  444a00:	bl	402a50 <abort@plt>

0000000000444a04 <_obstack_memory_used@@Base>:
  444a04:	ldr	x1, [x0, #8]
  444a08:	mov	x0, #0x0                   	// #0
  444a0c:	cbnz	x1, 444a14 <_obstack_memory_used@@Base+0x10>
  444a10:	ret
  444a14:	ldr	x2, [x1]
  444a18:	sub	x2, x2, x1
  444a1c:	add	x0, x0, x2
  444a20:	ldr	x1, [x1, #8]
  444a24:	b	444a0c <_obstack_memory_used@@Base+0x8>
  444a28:	stp	x29, x30, [sp, #-64]!
  444a2c:	mov	x29, sp
  444a30:	stp	x19, x20, [sp, #16]
  444a34:	mov	x20, x0
  444a38:	mov	x19, x1
  444a3c:	mov	x0, x2
  444a40:	stp	x21, x22, [sp, #32]
  444a44:	mov	x22, x2
  444a48:	str	x23, [sp, #48]
  444a4c:	and	w23, w3, #0xff
  444a50:	bl	402700 <strlen@plt>
  444a54:	mov	x21, x0
  444a58:	mov	x2, x0
  444a5c:	mov	x1, x22
  444a60:	ldr	x0, [x20]
  444a64:	bl	4028d0 <strncmp@plt>
  444a68:	cbnz	w0, 444aa4 <_obstack_memory_used@@Base+0xa0>
  444a6c:	ldr	x0, [x19]
  444a70:	strb	w23, [x0]
  444a74:	ldr	x0, [x20]
  444a78:	add	x0, x0, x21
  444a7c:	str	x0, [x20]
  444a80:	ldr	x0, [x19]
  444a84:	add	x0, x0, #0x1
  444a88:	str	x0, [x19]
  444a8c:	mov	w0, #0x1                   	// #1
  444a90:	ldp	x19, x20, [sp, #16]
  444a94:	ldp	x21, x22, [sp, #32]
  444a98:	ldr	x23, [sp, #48]
  444a9c:	ldp	x29, x30, [sp], #64
  444aa0:	ret
  444aa4:	mov	w0, #0x0                   	// #0
  444aa8:	b	444a90 <_obstack_memory_used@@Base+0x8c>
  444aac:	stp	x29, x30, [sp, #-160]!
  444ab0:	mov	x29, sp
  444ab4:	stp	x19, x20, [sp, #16]
  444ab8:	stp	x21, x22, [sp, #32]
  444abc:	stp	x23, x24, [sp, #48]
  444ac0:	stp	x25, x26, [sp, #64]
  444ac4:	stp	x27, x28, [sp, #80]
  444ac8:	cbnz	x0, 444af0 <_obstack_memory_used@@Base+0xec>
  444acc:	mov	w19, #0x0                   	// #0
  444ad0:	mov	w0, w19
  444ad4:	ldp	x19, x20, [sp, #16]
  444ad8:	ldp	x21, x22, [sp, #32]
  444adc:	ldp	x23, x24, [sp, #48]
  444ae0:	ldp	x25, x26, [sp, #64]
  444ae4:	ldp	x27, x28, [sp, #80]
  444ae8:	ldp	x29, x30, [sp], #160
  444aec:	ret
  444af0:	mov	x22, x0
  444af4:	bl	402700 <strlen@plt>
  444af8:	mov	x21, x0
  444afc:	cmp	x0, #0x13
  444b00:	b.ls	444acc <_obstack_memory_used@@Base+0xc8>  // b.plast
  444b04:	sub	x20, x0, #0x13
  444b08:	mov	x2, #0x3                   	// #3
  444b0c:	add	x20, x22, x20
  444b10:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  444b14:	mov	x0, x20
  444b18:	add	x1, x1, #0x8a1
  444b1c:	bl	4028d0 <strncmp@plt>
  444b20:	mov	w19, w0
  444b24:	cbnz	w0, 444acc <_obstack_memory_used@@Base+0xc8>
  444b28:	add	x1, x20, #0x3
  444b2c:	add	x21, x22, x21
  444b30:	add	x4, sp, #0x90
  444b34:	mov	w5, #0x1                   	// #1
  444b38:	stp	xzr, xzr, [sp, #144]
  444b3c:	cmp	x1, x21
  444b40:	b.ne	444bf8 <_obstack_memory_used@@Base+0x1f4>  // b.any
  444b44:	add	x4, sp, #0x90
  444b48:	mov	w0, #0x0                   	// #0
  444b4c:	mov	x1, #0x0                   	// #0
  444b50:	ldrb	w2, [x1, x4]
  444b54:	add	x1, x1, #0x1
  444b58:	cmp	w2, #0x0
  444b5c:	cinc	w0, w0, ne  // ne = any
  444b60:	cmp	x1, #0x10
  444b64:	b.ne	444b50 <_obstack_memory_used@@Base+0x14c>  // b.any
  444b68:	sub	w0, w0, #0x5
  444b6c:	cmp	w0, #0xa
  444b70:	b.hi	444acc <_obstack_memory_used@@Base+0xc8>  // b.pmore
  444b74:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x265fc>
  444b78:	add	x0, x0, #0xebe
  444b7c:	str	x0, [sp, #104]
  444b80:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  444b84:	add	x0, x0, #0x8a5
  444b88:	str	x0, [sp, #112]
  444b8c:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  444b90:	add	x0, x0, #0x8a9
  444b94:	adrp	x21, 46c000 <_obstack_memory_used@@Base+0x275fc>
  444b98:	adrp	x23, 46c000 <_obstack_memory_used@@Base+0x275fc>
  444b9c:	adrp	x24, 46c000 <_obstack_memory_used@@Base+0x275fc>
  444ba0:	adrp	x25, 46c000 <_obstack_memory_used@@Base+0x275fc>
  444ba4:	adrp	x26, 46c000 <_obstack_memory_used@@Base+0x275fc>
  444ba8:	adrp	x27, 46c000 <_obstack_memory_used@@Base+0x275fc>
  444bac:	adrp	x28, 46c000 <_obstack_memory_used@@Base+0x275fc>
  444bb0:	add	x21, x21, #0x8b3
  444bb4:	add	x23, x23, #0x8bd
  444bb8:	add	x24, x24, #0x8c2
  444bbc:	add	x25, x25, #0x8c7
  444bc0:	add	x26, x26, #0x8cc
  444bc4:	add	x27, x27, #0x8d2
  444bc8:	add	x28, x28, #0x8d8
  444bcc:	str	x0, [sp, #120]
  444bd0:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  444bd4:	add	x0, x0, #0x8ae
  444bd8:	str	x0, [sp, #128]
  444bdc:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  444be0:	add	x0, x0, #0x8b8
  444be4:	str	x0, [sp, #136]
  444be8:	cmp	x20, x22
  444bec:	b.hi	444c34 <_obstack_memory_used@@Base+0x230>  // b.pmore
  444bf0:	mov	w19, #0x1                   	// #1
  444bf4:	b	444ad0 <_obstack_memory_used@@Base+0xcc>
  444bf8:	ldrb	w0, [x1]
  444bfc:	sub	w2, w0, #0x30
  444c00:	and	w6, w2, #0xff
  444c04:	cmp	w6, #0x9
  444c08:	b.hi	444c18 <_obstack_memory_used@@Base+0x214>  // b.pmore
  444c0c:	strb	w5, [x4, w2, sxtw]
  444c10:	add	x1, x1, #0x1
  444c14:	b	444b3c <_obstack_memory_used@@Base+0x138>
  444c18:	sub	w2, w0, #0x61
  444c1c:	and	w2, w2, #0xff
  444c20:	cmp	w2, #0x5
  444c24:	b.hi	444acc <_obstack_memory_used@@Base+0xc8>  // b.pmore
  444c28:	sub	w0, w0, #0x57
  444c2c:	strb	w5, [x4, w0, sxtw]
  444c30:	b	444c10 <_obstack_memory_used@@Base+0x20c>
  444c34:	ldrb	w0, [x22]
  444c38:	cmp	w0, #0x2e
  444c3c:	b.eq	444e2c <_obstack_memory_used@@Base+0x428>  // b.none
  444c40:	b.hi	444c68 <_obstack_memory_used@@Base+0x264>  // b.pmore
  444c44:	cmp	w0, #0x24
  444c48:	b.ne	444ad0 <_obstack_memory_used@@Base+0xcc>  // b.any
  444c4c:	ldr	x1, [sp, #112]
  444c50:	mov	x0, x22
  444c54:	mov	x2, #0x3                   	// #3
  444c58:	bl	4028d0 <strncmp@plt>
  444c5c:	cbnz	w0, 444cac <_obstack_memory_used@@Base+0x2a8>
  444c60:	add	x22, x22, #0x3
  444c64:	b	444be8 <_obstack_memory_used@@Base+0x1e4>
  444c68:	cmp	w0, #0x3a
  444c6c:	b.hi	444c7c <_obstack_memory_used@@Base+0x278>  // b.pmore
  444c70:	cmp	w0, #0x2f
  444c74:	b.eq	444ad0 <_obstack_memory_used@@Base+0xcc>  // b.none
  444c78:	b	444ca4 <_obstack_memory_used@@Base+0x2a0>
  444c7c:	sub	w0, w0, #0x41
  444c80:	and	w0, w0, #0xff
  444c84:	cmp	w0, #0x39
  444c88:	b.hi	444ad0 <_obstack_memory_used@@Base+0xcc>  // b.pmore
  444c8c:	mov	x1, #0x1                   	// #1
  444c90:	lsl	x0, x1, x0
  444c94:	mov	x1, #0xffffffff43ffffff    	// #-3154116609
  444c98:	movk	x1, #0x3ff, lsl #48
  444c9c:	tst	x0, x1
  444ca0:	b.eq	444ad0 <_obstack_memory_used@@Base+0xcc>  // b.none
  444ca4:	add	x22, x22, #0x1
  444ca8:	b	444be8 <_obstack_memory_used@@Base+0x1e4>
  444cac:	ldr	x1, [sp, #120]
  444cb0:	mov	x0, x22
  444cb4:	mov	x2, #0x4                   	// #4
  444cb8:	bl	4028d0 <strncmp@plt>
  444cbc:	cbz	w0, 444d38 <_obstack_memory_used@@Base+0x334>
  444cc0:	ldr	x1, [sp, #128]
  444cc4:	mov	x0, x22
  444cc8:	mov	x2, #0x4                   	// #4
  444ccc:	bl	4028d0 <strncmp@plt>
  444cd0:	cbz	w0, 444d38 <_obstack_memory_used@@Base+0x334>
  444cd4:	mov	x1, x21
  444cd8:	mov	x0, x22
  444cdc:	mov	x2, #0x4                   	// #4
  444ce0:	bl	4028d0 <strncmp@plt>
  444ce4:	cbz	w0, 444d38 <_obstack_memory_used@@Base+0x334>
  444ce8:	ldr	x1, [sp, #136]
  444cec:	mov	x0, x22
  444cf0:	mov	x2, #0x4                   	// #4
  444cf4:	bl	4028d0 <strncmp@plt>
  444cf8:	cbz	w0, 444d38 <_obstack_memory_used@@Base+0x334>
  444cfc:	mov	x1, x23
  444d00:	mov	x0, x22
  444d04:	mov	x2, #0x4                   	// #4
  444d08:	bl	4028d0 <strncmp@plt>
  444d0c:	cbz	w0, 444d38 <_obstack_memory_used@@Base+0x334>
  444d10:	mov	x1, x24
  444d14:	mov	x0, x22
  444d18:	mov	x2, #0x4                   	// #4
  444d1c:	bl	4028d0 <strncmp@plt>
  444d20:	cbz	w0, 444d38 <_obstack_memory_used@@Base+0x334>
  444d24:	mov	x1, x25
  444d28:	mov	x0, x22
  444d2c:	mov	x2, #0x4                   	// #4
  444d30:	bl	4028d0 <strncmp@plt>
  444d34:	cbnz	w0, 444d40 <_obstack_memory_used@@Base+0x33c>
  444d38:	add	x22, x22, #0x4
  444d3c:	b	444be8 <_obstack_memory_used@@Base+0x1e4>
  444d40:	mov	x1, x26
  444d44:	mov	x0, x22
  444d48:	mov	x2, #0x5                   	// #5
  444d4c:	bl	4028d0 <strncmp@plt>
  444d50:	cbz	w0, 444e24 <_obstack_memory_used@@Base+0x420>
  444d54:	mov	x1, x27
  444d58:	mov	x0, x22
  444d5c:	mov	x2, #0x5                   	// #5
  444d60:	bl	4028d0 <strncmp@plt>
  444d64:	cbz	w0, 444e24 <_obstack_memory_used@@Base+0x420>
  444d68:	mov	x1, x28
  444d6c:	mov	x0, x22
  444d70:	mov	x2, #0x5                   	// #5
  444d74:	bl	4028d0 <strncmp@plt>
  444d78:	cbz	w0, 444e24 <_obstack_memory_used@@Base+0x420>
  444d7c:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  444d80:	mov	x0, x22
  444d84:	add	x1, x1, #0x8de
  444d88:	mov	x2, #0x5                   	// #5
  444d8c:	bl	4028d0 <strncmp@plt>
  444d90:	cbz	w0, 444e24 <_obstack_memory_used@@Base+0x420>
  444d94:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  444d98:	mov	x0, x22
  444d9c:	add	x1, x1, #0x8e4
  444da0:	mov	x2, #0x5                   	// #5
  444da4:	bl	4028d0 <strncmp@plt>
  444da8:	cbz	w0, 444e24 <_obstack_memory_used@@Base+0x420>
  444dac:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  444db0:	mov	x0, x22
  444db4:	add	x1, x1, #0x8ea
  444db8:	mov	x2, #0x5                   	// #5
  444dbc:	bl	4028d0 <strncmp@plt>
  444dc0:	cbz	w0, 444e24 <_obstack_memory_used@@Base+0x420>
  444dc4:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  444dc8:	mov	x0, x22
  444dcc:	add	x1, x1, #0x8f0
  444dd0:	mov	x2, #0x5                   	// #5
  444dd4:	bl	4028d0 <strncmp@plt>
  444dd8:	cbz	w0, 444e24 <_obstack_memory_used@@Base+0x420>
  444ddc:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  444de0:	mov	x0, x22
  444de4:	add	x1, x1, #0x8f6
  444de8:	mov	x2, #0x5                   	// #5
  444dec:	bl	4028d0 <strncmp@plt>
  444df0:	cbz	w0, 444e24 <_obstack_memory_used@@Base+0x420>
  444df4:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  444df8:	mov	x0, x22
  444dfc:	add	x1, x1, #0x8fc
  444e00:	mov	x2, #0x5                   	// #5
  444e04:	bl	4028d0 <strncmp@plt>
  444e08:	cbz	w0, 444e24 <_obstack_memory_used@@Base+0x420>
  444e0c:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  444e10:	mov	x0, x22
  444e14:	add	x1, x1, #0x902
  444e18:	mov	x2, #0x5                   	// #5
  444e1c:	bl	4028d0 <strncmp@plt>
  444e20:	cbnz	w0, 444acc <_obstack_memory_used@@Base+0xc8>
  444e24:	add	x22, x22, #0x5
  444e28:	b	444be8 <_obstack_memory_used@@Base+0x1e4>
  444e2c:	ldr	x1, [sp, #104]
  444e30:	mov	x0, x22
  444e34:	mov	x2, #0x3                   	// #3
  444e38:	bl	4028d0 <strncmp@plt>
  444e3c:	cbnz	w0, 444ca4 <_obstack_memory_used@@Base+0x2a0>
  444e40:	b	444acc <_obstack_memory_used@@Base+0xc8>
  444e44:	cbz	x0, 44518c <_obstack_memory_used@@Base+0x788>
  444e48:	stp	x29, x30, [sp, #-64]!
  444e4c:	mov	x29, sp
  444e50:	stp	x19, x20, [sp, #16]
  444e54:	mov	x19, x0
  444e58:	str	x21, [sp, #32]
  444e5c:	adrp	x21, 46c000 <_obstack_memory_used@@Base+0x275fc>
  444e60:	stp	x0, x0, [sp, #48]
  444e64:	bl	402700 <strlen@plt>
  444e68:	sub	x20, x0, #0x13
  444e6c:	add	x20, x19, x20
  444e70:	add	x21, x21, #0x8a5
  444e74:	ldr	x2, [sp, #48]
  444e78:	cmp	x2, x20
  444e7c:	b.cc	444e98 <_obstack_memory_used@@Base+0x494>  // b.lo, b.ul, b.last
  444e80:	ldr	x0, [sp, #56]
  444e84:	strb	wzr, [x0]
  444e88:	ldp	x19, x20, [sp, #16]
  444e8c:	ldr	x21, [sp, #32]
  444e90:	ldp	x29, x30, [sp], #64
  444e94:	ret
  444e98:	ldrb	w1, [x2]
  444e9c:	cmp	w1, #0x3a
  444ea0:	b.hi	444ed4 <_obstack_memory_used@@Base+0x4d0>  // b.pmore
  444ea4:	cmp	w1, #0x2f
  444ea8:	b.hi	444ef0 <_obstack_memory_used@@Base+0x4ec>  // b.pmore
  444eac:	cmp	w1, #0x24
  444eb0:	b.eq	444f18 <_obstack_memory_used@@Base+0x514>  // b.none
  444eb4:	cmp	w1, #0x2e
  444eb8:	b.eq	44513c <_obstack_memory_used@@Base+0x738>  // b.none
  444ebc:	ldr	x0, [sp, #56]
  444ec0:	add	x1, x0, #0x1
  444ec4:	str	x1, [sp, #56]
  444ec8:	mov	w1, #0x3f                  	// #63
  444ecc:	strb	w1, [x0]
  444ed0:	b	444e80 <_obstack_memory_used@@Base+0x47c>
  444ed4:	cmp	w1, #0x5f
  444ed8:	b.eq	445110 <_obstack_memory_used@@Base+0x70c>  // b.none
  444edc:	b.hi	444f10 <_obstack_memory_used@@Base+0x50c>  // b.pmore
  444ee0:	sub	w1, w1, #0x41
  444ee4:	and	w1, w1, #0xff
  444ee8:	cmp	w1, #0x19
  444eec:	b.hi	444ebc <_obstack_memory_used@@Base+0x4b8>  // b.pmore
  444ef0:	add	x0, x2, #0x1
  444ef4:	str	x0, [sp, #48]
  444ef8:	ldr	x0, [sp, #56]
  444efc:	add	x1, x0, #0x1
  444f00:	str	x1, [sp, #56]
  444f04:	ldrb	w1, [x2]
  444f08:	strb	w1, [x0]
  444f0c:	b	444e74 <_obstack_memory_used@@Base+0x470>
  444f10:	sub	w1, w1, #0x61
  444f14:	b	444ee4 <_obstack_memory_used@@Base+0x4e0>
  444f18:	mov	x2, x21
  444f1c:	add	x1, sp, #0x38
  444f20:	add	x0, sp, #0x30
  444f24:	mov	w3, #0x2c                  	// #44
  444f28:	bl	444a28 <_obstack_memory_used@@Base+0x24>
  444f2c:	cbnz	w0, 444e74 <_obstack_memory_used@@Base+0x470>
  444f30:	adrp	x2, 46c000 <_obstack_memory_used@@Base+0x275fc>
  444f34:	add	x1, sp, #0x38
  444f38:	add	x2, x2, #0x8a9
  444f3c:	add	x0, sp, #0x30
  444f40:	mov	w3, #0x40                  	// #64
  444f44:	bl	444a28 <_obstack_memory_used@@Base+0x24>
  444f48:	cbnz	w0, 444e74 <_obstack_memory_used@@Base+0x470>
  444f4c:	adrp	x2, 46c000 <_obstack_memory_used@@Base+0x275fc>
  444f50:	add	x1, sp, #0x38
  444f54:	add	x2, x2, #0x8ae
  444f58:	add	x0, sp, #0x30
  444f5c:	mov	w3, #0x2a                  	// #42
  444f60:	bl	444a28 <_obstack_memory_used@@Base+0x24>
  444f64:	cbnz	w0, 444e74 <_obstack_memory_used@@Base+0x470>
  444f68:	adrp	x2, 46c000 <_obstack_memory_used@@Base+0x275fc>
  444f6c:	add	x1, sp, #0x38
  444f70:	add	x2, x2, #0x8b3
  444f74:	add	x0, sp, #0x30
  444f78:	mov	w3, #0x26                  	// #38
  444f7c:	bl	444a28 <_obstack_memory_used@@Base+0x24>
  444f80:	cbnz	w0, 444e74 <_obstack_memory_used@@Base+0x470>
  444f84:	adrp	x2, 46c000 <_obstack_memory_used@@Base+0x275fc>
  444f88:	add	x1, sp, #0x38
  444f8c:	add	x2, x2, #0x8b8
  444f90:	add	x0, sp, #0x30
  444f94:	mov	w3, #0x3c                  	// #60
  444f98:	bl	444a28 <_obstack_memory_used@@Base+0x24>
  444f9c:	cbnz	w0, 444e74 <_obstack_memory_used@@Base+0x470>
  444fa0:	adrp	x2, 46c000 <_obstack_memory_used@@Base+0x275fc>
  444fa4:	add	x1, sp, #0x38
  444fa8:	add	x2, x2, #0x8bd
  444fac:	add	x0, sp, #0x30
  444fb0:	mov	w3, #0x3e                  	// #62
  444fb4:	bl	444a28 <_obstack_memory_used@@Base+0x24>
  444fb8:	cbnz	w0, 444e74 <_obstack_memory_used@@Base+0x470>
  444fbc:	adrp	x2, 46c000 <_obstack_memory_used@@Base+0x275fc>
  444fc0:	add	x1, sp, #0x38
  444fc4:	add	x2, x2, #0x8c2
  444fc8:	add	x0, sp, #0x30
  444fcc:	mov	w3, #0x28                  	// #40
  444fd0:	bl	444a28 <_obstack_memory_used@@Base+0x24>
  444fd4:	cbnz	w0, 444e74 <_obstack_memory_used@@Base+0x470>
  444fd8:	adrp	x2, 46c000 <_obstack_memory_used@@Base+0x275fc>
  444fdc:	add	x1, sp, #0x38
  444fe0:	add	x2, x2, #0x8c7
  444fe4:	add	x0, sp, #0x30
  444fe8:	mov	w3, #0x29                  	// #41
  444fec:	bl	444a28 <_obstack_memory_used@@Base+0x24>
  444ff0:	cbnz	w0, 444e74 <_obstack_memory_used@@Base+0x470>
  444ff4:	adrp	x2, 46c000 <_obstack_memory_used@@Base+0x275fc>
  444ff8:	add	x1, sp, #0x38
  444ffc:	add	x2, x2, #0x8cc
  445000:	add	x0, sp, #0x30
  445004:	mov	w3, #0x20                  	// #32
  445008:	bl	444a28 <_obstack_memory_used@@Base+0x24>
  44500c:	cbnz	w0, 444e74 <_obstack_memory_used@@Base+0x470>
  445010:	adrp	x2, 46c000 <_obstack_memory_used@@Base+0x275fc>
  445014:	add	x1, sp, #0x38
  445018:	add	x2, x2, #0x8d2
  44501c:	add	x0, sp, #0x30
  445020:	mov	w3, #0x22                  	// #34
  445024:	bl	444a28 <_obstack_memory_used@@Base+0x24>
  445028:	cbnz	w0, 444e74 <_obstack_memory_used@@Base+0x470>
  44502c:	adrp	x2, 46c000 <_obstack_memory_used@@Base+0x275fc>
  445030:	add	x1, sp, #0x38
  445034:	add	x2, x2, #0x8d8
  445038:	add	x0, sp, #0x30
  44503c:	mov	w3, #0x27                  	// #39
  445040:	bl	444a28 <_obstack_memory_used@@Base+0x24>
  445044:	cbnz	w0, 444e74 <_obstack_memory_used@@Base+0x470>
  445048:	adrp	x2, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44504c:	add	x1, sp, #0x38
  445050:	add	x2, x2, #0x8de
  445054:	add	x0, sp, #0x30
  445058:	mov	w3, #0x2b                  	// #43
  44505c:	bl	444a28 <_obstack_memory_used@@Base+0x24>
  445060:	cbnz	w0, 444e74 <_obstack_memory_used@@Base+0x470>
  445064:	adrp	x2, 46c000 <_obstack_memory_used@@Base+0x275fc>
  445068:	add	x1, sp, #0x38
  44506c:	add	x2, x2, #0x8e4
  445070:	add	x0, sp, #0x30
  445074:	mov	w3, #0x3b                  	// #59
  445078:	bl	444a28 <_obstack_memory_used@@Base+0x24>
  44507c:	cbnz	w0, 444e74 <_obstack_memory_used@@Base+0x470>
  445080:	adrp	x2, 46c000 <_obstack_memory_used@@Base+0x275fc>
  445084:	add	x1, sp, #0x38
  445088:	add	x2, x2, #0x8ea
  44508c:	add	x0, sp, #0x30
  445090:	mov	w3, #0x5b                  	// #91
  445094:	bl	444a28 <_obstack_memory_used@@Base+0x24>
  445098:	cbnz	w0, 444e74 <_obstack_memory_used@@Base+0x470>
  44509c:	adrp	x2, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4450a0:	add	x1, sp, #0x38
  4450a4:	add	x2, x2, #0x8f0
  4450a8:	add	x0, sp, #0x30
  4450ac:	mov	w3, #0x5d                  	// #93
  4450b0:	bl	444a28 <_obstack_memory_used@@Base+0x24>
  4450b4:	cbnz	w0, 444e74 <_obstack_memory_used@@Base+0x470>
  4450b8:	adrp	x2, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4450bc:	add	x1, sp, #0x38
  4450c0:	add	x2, x2, #0x8f6
  4450c4:	add	x0, sp, #0x30
  4450c8:	mov	w3, #0x7b                  	// #123
  4450cc:	bl	444a28 <_obstack_memory_used@@Base+0x24>
  4450d0:	cbnz	w0, 444e74 <_obstack_memory_used@@Base+0x470>
  4450d4:	adrp	x2, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4450d8:	add	x1, sp, #0x38
  4450dc:	add	x2, x2, #0x8fc
  4450e0:	add	x0, sp, #0x30
  4450e4:	mov	w3, #0x7d                  	// #125
  4450e8:	bl	444a28 <_obstack_memory_used@@Base+0x24>
  4450ec:	cbnz	w0, 444e74 <_obstack_memory_used@@Base+0x470>
  4450f0:	adrp	x2, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4450f4:	add	x1, sp, #0x38
  4450f8:	add	x2, x2, #0x902
  4450fc:	add	x0, sp, #0x30
  445100:	mov	w3, #0x7e                  	// #126
  445104:	bl	444a28 <_obstack_memory_used@@Base+0x24>
  445108:	cbnz	w0, 444e74 <_obstack_memory_used@@Base+0x470>
  44510c:	b	444ebc <_obstack_memory_used@@Base+0x4b8>
  445110:	cmp	x2, x19
  445114:	add	x0, x2, #0x1
  445118:	b.eq	445128 <_obstack_memory_used@@Base+0x724>  // b.none
  44511c:	ldurb	w1, [x2, #-1]
  445120:	cmp	w1, #0x3a
  445124:	b.ne	444ef4 <_obstack_memory_used@@Base+0x4f0>  // b.any
  445128:	ldrb	w1, [x2, #1]
  44512c:	cmp	w1, #0x24
  445130:	b.ne	444ef4 <_obstack_memory_used@@Base+0x4f0>  // b.any
  445134:	str	x0, [sp, #48]
  445138:	b	444e74 <_obstack_memory_used@@Base+0x470>
  44513c:	ldr	x0, [sp, #56]
  445140:	ldrb	w2, [x2, #1]
  445144:	add	x1, x0, #0x1
  445148:	str	x1, [sp, #56]
  44514c:	cmp	w2, #0x2e
  445150:	b.ne	445178 <_obstack_memory_used@@Base+0x774>  // b.any
  445154:	mov	w1, #0x3a                  	// #58
  445158:	strb	w1, [x0]
  44515c:	ldr	x0, [sp, #56]
  445160:	add	x2, x0, #0x1
  445164:	str	x2, [sp, #56]
  445168:	strb	w1, [x0]
  44516c:	ldr	x0, [sp, #48]
  445170:	add	x0, x0, #0x2
  445174:	b	445134 <_obstack_memory_used@@Base+0x730>
  445178:	mov	w1, #0x2d                  	// #45
  44517c:	strb	w1, [x0]
  445180:	ldr	x0, [sp, #48]
  445184:	add	x0, x0, #0x1
  445188:	b	445134 <_obstack_memory_used@@Base+0x730>
  44518c:	ret
  445190:	stp	x29, x30, [sp, #-32]!
  445194:	mov	x29, sp
  445198:	str	x19, [sp, #16]
  44519c:	mov	w19, w0
  4451a0:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  4451a4:	ldr	x0, [x0, #3512]
  4451a8:	cbz	x0, 4451b0 <_obstack_memory_used@@Base+0x7ac>
  4451ac:	blr	x0
  4451b0:	mov	w0, w19
  4451b4:	bl	402730 <exit@plt>
  4451b8:	stp	x29, x30, [sp, #-32]!
  4451bc:	adrp	x1, 495000 <_obstack_memory_used@@Base+0x505fc>
  4451c0:	mov	x29, sp
  4451c4:	str	x19, [sp, #16]
  4451c8:	adrp	x19, 495000 <_obstack_memory_used@@Base+0x505fc>
  4451cc:	str	x0, [x1, #1392]
  4451d0:	ldr	x0, [x19, #2752]
  4451d4:	cbnz	x0, 4451e0 <_obstack_memory_used@@Base+0x7dc>
  4451d8:	bl	402740 <sbrk@plt>
  4451dc:	str	x0, [x19, #2752]
  4451e0:	ldr	x19, [sp, #16]
  4451e4:	ldp	x29, x30, [sp], #32
  4451e8:	ret
  4451ec:	stp	x29, x30, [sp, #-32]!
  4451f0:	mov	x29, sp
  4451f4:	stp	x19, x20, [sp, #16]
  4451f8:	mov	x19, x0
  4451fc:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  445200:	ldr	x20, [x0, #2752]
  445204:	mov	x0, #0x0                   	// #0
  445208:	cbz	x20, 445258 <_obstack_memory_used@@Base+0x854>
  44520c:	bl	402740 <sbrk@plt>
  445210:	sub	x5, x0, x20
  445214:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  445218:	adrp	x3, 45e000 <_obstack_memory_used@@Base+0x195fc>
  44521c:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x265fc>
  445220:	add	x3, x3, #0xaff
  445224:	ldr	x2, [x0, #1392]
  445228:	add	x1, x1, #0xdd4
  44522c:	mov	x4, x19
  445230:	ldrb	w0, [x2]
  445234:	cmp	w0, #0x0
  445238:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  44523c:	csel	x3, x1, x3, ne  // ne = any
  445240:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  445244:	ldr	x0, [x0, #1440]
  445248:	add	x1, x1, #0xd08
  44524c:	bl	402d90 <fprintf@plt>
  445250:	mov	w0, #0x1                   	// #1
  445254:	bl	445190 <_obstack_memory_used@@Base+0x78c>
  445258:	bl	402740 <sbrk@plt>
  44525c:	adrp	x5, 495000 <_obstack_memory_used@@Base+0x505fc>
  445260:	add	x5, x5, #0x5c8
  445264:	sub	x5, x0, x5
  445268:	b	445214 <_obstack_memory_used@@Base+0x810>
  44526c:	stp	x29, x30, [sp, #-32]!
  445270:	cmp	x0, #0x0
  445274:	mov	x29, sp
  445278:	str	x19, [sp, #16]
  44527c:	csinc	x19, x0, xzr, ne  // ne = any
  445280:	mov	x0, x19
  445284:	bl	402890 <malloc@plt>
  445288:	cbnz	x0, 445294 <_obstack_memory_used@@Base+0x890>
  44528c:	mov	x0, x19
  445290:	bl	4451ec <_obstack_memory_used@@Base+0x7e8>
  445294:	ldr	x19, [sp, #16]
  445298:	ldp	x29, x30, [sp], #32
  44529c:	ret
  4452a0:	stp	x29, x30, [sp, #-32]!
  4452a4:	cmp	x0, #0x0
  4452a8:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  4452ac:	mov	x29, sp
  4452b0:	stp	x19, x20, [sp, #16]
  4452b4:	b.ne	4452d8 <_obstack_memory_used@@Base+0x8d4>  // b.any
  4452b8:	mov	x19, #0x1                   	// #1
  4452bc:	mov	x20, x19
  4452c0:	mov	x1, x19
  4452c4:	mov	x0, x20
  4452c8:	bl	402950 <calloc@plt>
  4452cc:	cbnz	x0, 4452e4 <_obstack_memory_used@@Base+0x8e0>
  4452d0:	mul	x0, x20, x19
  4452d4:	bl	4451ec <_obstack_memory_used@@Base+0x7e8>
  4452d8:	mov	x20, x0
  4452dc:	mov	x19, x1
  4452e0:	b	4452c0 <_obstack_memory_used@@Base+0x8bc>
  4452e4:	ldp	x19, x20, [sp, #16]
  4452e8:	ldp	x29, x30, [sp], #32
  4452ec:	ret
  4452f0:	stp	x29, x30, [sp, #-32]!
  4452f4:	cmp	x1, #0x0
  4452f8:	mov	x29, sp
  4452fc:	str	x19, [sp, #16]
  445300:	csinc	x19, x1, xzr, ne  // ne = any
  445304:	cbnz	x0, 44531c <_obstack_memory_used@@Base+0x918>
  445308:	mov	x0, x19
  44530c:	bl	402890 <malloc@plt>
  445310:	cbnz	x0, 445328 <_obstack_memory_used@@Base+0x924>
  445314:	mov	x0, x19
  445318:	bl	4451ec <_obstack_memory_used@@Base+0x7e8>
  44531c:	mov	x1, x19
  445320:	bl	4029a0 <realloc@plt>
  445324:	b	445310 <_obstack_memory_used@@Base+0x90c>
  445328:	ldr	x19, [sp, #16]
  44532c:	ldp	x29, x30, [sp], #32
  445330:	ret
  445334:	stp	x29, x30, [sp, #-48]!
  445338:	mov	x29, sp
  44533c:	stp	x19, x20, [sp, #16]
  445340:	mov	x19, x1
  445344:	mov	x20, x2
  445348:	stp	x21, x22, [sp, #32]
  44534c:	mov	x22, x0
  445350:	mov	x0, x2
  445354:	bl	44526c <_obstack_memory_used@@Base+0x868>
  445358:	mov	x21, x0
  44535c:	cmp	x20, x19
  445360:	b.ls	445374 <_obstack_memory_used@@Base+0x970>  // b.plast
  445364:	sub	x2, x20, x19
  445368:	add	x0, x0, x19
  44536c:	mov	w1, #0x0                   	// #0
  445370:	bl	402930 <memset@plt>
  445374:	mov	x2, x19
  445378:	mov	x1, x22
  44537c:	mov	x0, x21
  445380:	ldp	x19, x20, [sp, #16]
  445384:	ldp	x21, x22, [sp, #32]
  445388:	ldp	x29, x30, [sp], #48
  44538c:	b	4026a0 <memcpy@plt>
  445390:	stp	x29, x30, [sp, #-32]!
  445394:	mov	x29, sp
  445398:	stp	x19, x20, [sp, #16]
  44539c:	mov	x20, x0
  4453a0:	bl	402700 <strlen@plt>
  4453a4:	add	x19, x0, #0x1
  4453a8:	mov	x0, x19
  4453ac:	bl	44526c <_obstack_memory_used@@Base+0x868>
  4453b0:	mov	x2, x19
  4453b4:	mov	x1, x20
  4453b8:	ldp	x19, x20, [sp, #16]
  4453bc:	ldp	x29, x30, [sp], #32
  4453c0:	b	4026a0 <memcpy@plt>
  4453c4:	stp	x29, x30, [sp, #-32]!
  4453c8:	mov	x29, sp
  4453cc:	stp	x19, x20, [sp, #16]
  4453d0:	mov	w20, w0
  4453d4:	bl	4029f0 <strerror@plt>
  4453d8:	cbnz	x0, 4453fc <_obstack_memory_used@@Base+0x9f8>
  4453dc:	adrp	x19, 495000 <_obstack_memory_used@@Base+0x505fc>
  4453e0:	add	x19, x19, #0xac8
  4453e4:	mov	w2, w20
  4453e8:	mov	x0, x19
  4453ec:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4453f0:	add	x1, x1, #0xd4c
  4453f4:	bl	4027a0 <sprintf@plt>
  4453f8:	mov	x0, x19
  4453fc:	ldp	x19, x20, [sp, #16]
  445400:	ldp	x29, x30, [sp], #32
  445404:	ret
  445408:	stp	x29, x30, [sp, #-32]!
  44540c:	mov	x29, sp
  445410:	stp	x19, x20, [sp, #16]
  445414:	mov	x20, x0
  445418:	bl	402750 <strnlen@plt>
  44541c:	mov	x19, x0
  445420:	add	x0, x0, #0x1
  445424:	bl	44526c <_obstack_memory_used@@Base+0x868>
  445428:	mov	x2, x19
  44542c:	mov	x1, x20
  445430:	strb	wzr, [x0, x19]
  445434:	ldp	x19, x20, [sp, #16]
  445438:	ldp	x29, x30, [sp], #32
  44543c:	b	4026a0 <memcpy@plt>
  445440:	stp	x29, x30, [sp, #-80]!
  445444:	mov	x29, sp
  445448:	ldp	x2, x3, [x1]
  44544c:	stp	x2, x3, [sp, #48]
  445450:	ldp	x2, x3, [x1, #16]
  445454:	stp	x19, x20, [sp, #16]
  445458:	mov	x19, x1
  44545c:	add	x1, sp, #0x30
  445460:	str	x21, [sp, #32]
  445464:	mov	x21, x0
  445468:	stp	x2, x3, [sp, #64]
  44546c:	bl	4454ac <_obstack_memory_used@@Base+0xaa8>
  445470:	sxtw	x0, w0
  445474:	bl	44526c <_obstack_memory_used@@Base+0x868>
  445478:	mov	x20, x0
  44547c:	ldp	x2, x3, [x19]
  445480:	stp	x2, x3, [sp, #48]
  445484:	mov	x1, x21
  445488:	ldp	x2, x3, [x19, #16]
  44548c:	stp	x2, x3, [sp, #64]
  445490:	add	x2, sp, #0x30
  445494:	bl	402bf0 <vsprintf@plt>
  445498:	mov	x0, x20
  44549c:	ldp	x19, x20, [sp, #16]
  4454a0:	ldr	x21, [sp, #32]
  4454a4:	ldp	x29, x30, [sp], #80
  4454a8:	ret
  4454ac:	stp	x29, x30, [sp, #-112]!
  4454b0:	mov	x29, sp
  4454b4:	stp	x19, x20, [sp, #16]
  4454b8:	mov	x19, x1
  4454bc:	adrp	x20, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4454c0:	stp	x21, x22, [sp, #32]
  4454c4:	add	x20, x20, #0xd63
  4454c8:	adrp	x21, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4454cc:	stp	x23, x24, [sp, #48]
  4454d0:	add	x21, x21, #0xd69
  4454d4:	str	x0, [sp, #72]
  4454d8:	bl	402700 <strlen@plt>
  4454dc:	add	w23, w0, #0x1
  4454e0:	ldp	x0, x1, [x19]
  4454e4:	stp	x0, x1, [sp, #80]
  4454e8:	ldp	x0, x1, [x19, #16]
  4454ec:	stp	x0, x1, [sp, #96]
  4454f0:	ldr	x0, [sp, #72]
  4454f4:	ldrb	w1, [x0]
  4454f8:	cbnz	w1, 445514 <_obstack_memory_used@@Base+0xb10>
  4454fc:	mov	w0, w23
  445500:	ldp	x19, x20, [sp, #16]
  445504:	ldp	x21, x22, [sp, #32]
  445508:	ldp	x23, x24, [sp, #48]
  44550c:	ldp	x29, x30, [sp], #112
  445510:	ret
  445514:	add	x1, x0, #0x1
  445518:	str	x1, [sp, #72]
  44551c:	ldrb	w0, [x0]
  445520:	cmp	w0, #0x25
  445524:	b.ne	4454f0 <_obstack_memory_used@@Base+0xaec>  // b.any
  445528:	ldr	x19, [sp, #72]
  44552c:	mov	x0, x20
  445530:	ldrb	w22, [x19]
  445534:	mov	w1, w22
  445538:	bl	402b60 <strchr@plt>
  44553c:	cbnz	x0, 445620 <_obstack_memory_used@@Base+0xc1c>
  445540:	cmp	w22, #0x2a
  445544:	b.ne	445648 <_obstack_memory_used@@Base+0xc44>  // b.any
  445548:	ldr	w1, [sp, #104]
  44554c:	add	x19, x19, #0x1
  445550:	str	x19, [sp, #72]
  445554:	ldr	x0, [sp, #80]
  445558:	tbnz	w1, #31, 44562c <_obstack_memory_used@@Base+0xc28>
  44555c:	add	x1, x0, #0xb
  445560:	and	x1, x1, #0xfffffffffffffff8
  445564:	str	x1, [sp, #80]
  445568:	ldr	w19, [x0]
  44556c:	cmp	w19, #0x0
  445570:	cneg	w19, w19, lt  // lt = tstop
  445574:	add	w19, w19, w23
  445578:	ldr	x1, [sp, #72]
  44557c:	ldrb	w0, [x1]
  445580:	cmp	w0, #0x2e
  445584:	b.ne	4455cc <_obstack_memory_used@@Base+0xbc8>  // b.any
  445588:	add	x0, x1, #0x1
  44558c:	str	x0, [sp, #72]
  445590:	ldrb	w2, [x1, #1]
  445594:	cmp	w2, #0x2a
  445598:	b.ne	44567c <_obstack_memory_used@@Base+0xc78>  // b.any
  44559c:	add	x1, x1, #0x2
  4455a0:	str	x1, [sp, #72]
  4455a4:	ldr	w1, [sp, #104]
  4455a8:	ldr	x0, [sp, #80]
  4455ac:	tbnz	w1, #31, 445660 <_obstack_memory_used@@Base+0xc5c>
  4455b0:	add	x1, x0, #0xb
  4455b4:	and	x1, x1, #0xfffffffffffffff8
  4455b8:	str	x1, [sp, #80]
  4455bc:	ldr	w0, [x0]
  4455c0:	cmp	w0, #0x0
  4455c4:	cneg	w0, w0, lt  // lt = tstop
  4455c8:	add	w19, w19, w0
  4455cc:	ldr	x24, [sp, #72]
  4455d0:	mov	x0, x21
  4455d4:	ldrb	w22, [x24], #1
  4455d8:	mov	w1, w22
  4455dc:	bl	402b60 <strchr@plt>
  4455e0:	cbnz	x0, 44568c <_obstack_memory_used@@Base+0xc88>
  4455e4:	add	w23, w19, #0x1e
  4455e8:	cmp	w22, #0x78
  4455ec:	b.hi	4456e4 <_obstack_memory_used@@Base+0xce0>  // b.pmore
  4455f0:	cmp	w22, #0x57
  4455f4:	b.hi	445694 <_obstack_memory_used@@Base+0xc90>  // b.pmore
  4455f8:	and	w22, w22, #0xfffffffd
  4455fc:	cmp	w22, #0x45
  445600:	b.ne	4456e4 <_obstack_memory_used@@Base+0xce0>  // b.any
  445604:	ldr	w1, [sp, #108]
  445608:	ldr	x0, [sp, #80]
  44560c:	tbnz	w1, #31, 4456ec <_obstack_memory_used@@Base+0xce8>
  445610:	add	x0, x0, #0xf
  445614:	and	x0, x0, #0xfffffffffffffff8
  445618:	str	x0, [sp, #80]
  44561c:	b	4456fc <_obstack_memory_used@@Base+0xcf8>
  445620:	add	x19, x19, #0x1
  445624:	str	x19, [sp, #72]
  445628:	b	445528 <_obstack_memory_used@@Base+0xb24>
  44562c:	add	w2, w1, #0x8
  445630:	str	w2, [sp, #104]
  445634:	cmp	w2, #0x0
  445638:	b.gt	44555c <_obstack_memory_used@@Base+0xb58>
  44563c:	ldr	x0, [sp, #88]
  445640:	add	x0, x0, w1, sxtw
  445644:	b	445568 <_obstack_memory_used@@Base+0xb64>
  445648:	mov	x0, x19
  44564c:	add	x1, sp, #0x48
  445650:	mov	w2, #0xa                   	// #10
  445654:	bl	4026f0 <strtoul@plt>
  445658:	add	w19, w23, w0
  44565c:	b	445578 <_obstack_memory_used@@Base+0xb74>
  445660:	add	w2, w1, #0x8
  445664:	str	w2, [sp, #104]
  445668:	cmp	w2, #0x0
  44566c:	b.gt	4455b0 <_obstack_memory_used@@Base+0xbac>
  445670:	ldr	x0, [sp, #88]
  445674:	add	x0, x0, w1, sxtw
  445678:	b	4455bc <_obstack_memory_used@@Base+0xbb8>
  44567c:	add	x1, sp, #0x48
  445680:	mov	w2, #0xa                   	// #10
  445684:	bl	4026f0 <strtoul@plt>
  445688:	b	4455c8 <_obstack_memory_used@@Base+0xbc4>
  44568c:	str	x24, [sp, #72]
  445690:	b	4455cc <_obstack_memory_used@@Base+0xbc8>
  445694:	sub	w22, w22, #0x58
  445698:	cmp	w22, #0x20
  44569c:	b.hi	4456e4 <_obstack_memory_used@@Base+0xce0>  // b.pmore
  4456a0:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4456a4:	add	x0, x0, #0xd70
  4456a8:	ldrb	w0, [x0, w22, uxtw]
  4456ac:	adr	x1, 4456b8 <_obstack_memory_used@@Base+0xcb4>
  4456b0:	add	x0, x1, w0, sxtb #2
  4456b4:	br	x0
  4456b8:	ldr	w0, [sp, #104]
  4456bc:	ldr	x1, [sp, #80]
  4456c0:	tbnz	w0, #31, 4456d4 <_obstack_memory_used@@Base+0xcd0>
  4456c4:	add	x1, x1, #0xb
  4456c8:	and	x1, x1, #0xfffffffffffffff8
  4456cc:	str	x1, [sp, #80]
  4456d0:	b	4456e4 <_obstack_memory_used@@Base+0xce0>
  4456d4:	add	w0, w0, #0x8
  4456d8:	str	w0, [sp, #104]
  4456dc:	cmp	w0, #0x0
  4456e0:	b.gt	4456c4 <_obstack_memory_used@@Base+0xcc0>
  4456e4:	str	x24, [sp, #72]
  4456e8:	b	4454f0 <_obstack_memory_used@@Base+0xaec>
  4456ec:	add	w1, w1, #0x10
  4456f0:	str	w1, [sp, #108]
  4456f4:	cmp	w1, #0x0
  4456f8:	b.gt	445610 <_obstack_memory_used@@Base+0xc0c>
  4456fc:	add	w23, w19, #0x151
  445700:	b	4456e4 <_obstack_memory_used@@Base+0xce0>
  445704:	ldr	w1, [sp, #104]
  445708:	ldr	x0, [sp, #80]
  44570c:	tbnz	w1, #31, 44572c <_obstack_memory_used@@Base+0xd28>
  445710:	add	x1, x0, #0xf
  445714:	and	x1, x1, #0xfffffffffffffff8
  445718:	str	x1, [sp, #80]
  44571c:	ldr	x0, [x0]
  445720:	bl	402700 <strlen@plt>
  445724:	add	w23, w23, w0
  445728:	b	4456e4 <_obstack_memory_used@@Base+0xce0>
  44572c:	add	w2, w1, #0x8
  445730:	str	w2, [sp, #104]
  445734:	cmp	w2, #0x0
  445738:	b.gt	445710 <_obstack_memory_used@@Base+0xd0c>
  44573c:	ldr	x0, [sp, #88]
  445740:	add	x0, x0, w1, sxtw
  445744:	b	44571c <_obstack_memory_used@@Base+0xd18>
  445748:	ldr	w0, [sp, #104]
  44574c:	ldr	x1, [sp, #80]
  445750:	tbnz	w0, #31, 44575c <_obstack_memory_used@@Base+0xd58>
  445754:	add	x1, x1, #0xf
  445758:	b	4456c8 <_obstack_memory_used@@Base+0xcc4>
  44575c:	add	w0, w0, #0x8
  445760:	str	w0, [sp, #104]
  445764:	cmp	w0, #0x0
  445768:	b.gt	445754 <_obstack_memory_used@@Base+0xd50>
  44576c:	b	4456e4 <_obstack_memory_used@@Base+0xce0>
  445770:	b	402b30 <free@plt>
  445774:	nop
  445778:	b	445770 <_obstack_memory_used@@Base+0xd6c>
  44577c:	nop
  445780:	b	449f38 <_obstack_memory_used@@Base+0x5534>
  445784:	nop
  445788:	stp	x29, x30, [sp, #-64]!
  44578c:	mov	x29, sp
  445790:	str	x23, [sp, #48]
  445794:	mov	x23, x0
  445798:	ldarb	w0, [x0]
  44579c:	tst	w0, #0xff
  4457a0:	b.ne	4457fc <_obstack_memory_used@@Base+0xdf8>  // b.any
  4457a4:	adrp	x0, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  4457a8:	ldr	x0, [x0, #3600]
  4457ac:	cbz	x0, 44580c <_obstack_memory_used@@Base+0xe08>
  4457b0:	stp	x19, x20, [sp, #16]
  4457b4:	mov	w19, #0x100                 	// #256
  4457b8:	mov	w20, #0x1                   	// #1
  4457bc:	stp	x21, x22, [sp, #32]
  4457c0:	mov	w21, w19
  4457c4:	ldaxr	w0, [x23]
  4457c8:	cbnz	w0, 4457d4 <_obstack_memory_used@@Base+0xdd0>
  4457cc:	stlxr	w1, w19, [x23]
  4457d0:	cbnz	w1, 4457c4 <_obstack_memory_used@@Base+0xdc0>
  4457d4:	cmp	w0, #0x0
  4457d8:	b.ne	445834 <_obstack_memory_used@@Base+0xe30>  // b.any
  4457dc:	mov	w0, #0x1                   	// #1
  4457e0:	ldp	x19, x20, [sp, #16]
  4457e4:	ldp	x21, x22, [sp, #32]
  4457e8:	ldr	x23, [sp, #48]
  4457ec:	ldp	x29, x30, [sp], #64
  4457f0:	ret
  4457f4:	ldp	x19, x20, [sp, #16]
  4457f8:	ldp	x21, x22, [sp, #32]
  4457fc:	mov	w0, #0x0                   	// #0
  445800:	ldr	x23, [sp, #48]
  445804:	ldp	x29, x30, [sp], #64
  445808:	ret
  44580c:	ldrb	w0, [x23]
  445810:	cbnz	w0, 4457fc <_obstack_memory_used@@Base+0xdf8>
  445814:	ldrb	w0, [x23, #1]
  445818:	cbnz	w0, 4458ac <_obstack_memory_used@@Base+0xea8>
  44581c:	mov	w2, #0x1                   	// #1
  445820:	strb	w2, [x23, #1]
  445824:	mov	w0, #0x1                   	// #1
  445828:	ldr	x23, [sp, #48]
  44582c:	ldp	x29, x30, [sp], #64
  445830:	ret
  445834:	orr	w22, w19, #0x10000
  445838:	mov	w3, w0
  44583c:	cmp	w20, w3
  445840:	b.eq	4457f4 <_obstack_memory_used@@Base+0xdf0>  // b.none
  445844:	cmp	w19, w3
  445848:	b.ne	445868 <_obstack_memory_used@@Base+0xe64>  // b.any
  44584c:	mov	w3, w22
  445850:	ldaxr	w2, [x23]
  445854:	cmp	w2, w0
  445858:	b.ne	445864 <_obstack_memory_used@@Base+0xe60>  // b.any
  44585c:	stlxr	w1, w22, [x23]
  445860:	cbnz	w1, 445850 <_obstack_memory_used@@Base+0xe4c>
  445864:	b.ne	44589c <_obstack_memory_used@@Base+0xe98>  // b.any
  445868:	mov	x1, x23
  44586c:	mov	w4, #0x0                   	// #0
  445870:	mov	w2, #0x0                   	// #0
  445874:	mov	x0, #0x62                  	// #98
  445878:	bl	402d50 <syscall@plt>
  44587c:	ldaxr	w0, [x23]
  445880:	cbnz	w0, 44588c <_obstack_memory_used@@Base+0xe88>
  445884:	stlxr	w1, w21, [x23]
  445888:	cbnz	w1, 44587c <_obstack_memory_used@@Base+0xe78>
  44588c:	cmp	w0, #0x0
  445890:	mov	w3, w0
  445894:	b.eq	4457dc <_obstack_memory_used@@Base+0xdd8>  // b.none
  445898:	b	44583c <_obstack_memory_used@@Base+0xe38>
  44589c:	cmp	w20, w2
  4458a0:	b.eq	4457f4 <_obstack_memory_used@@Base+0xdf0>  // b.none
  4458a4:	cbnz	w2, 445868 <_obstack_memory_used@@Base+0xe64>
  4458a8:	b	44587c <_obstack_memory_used@@Base+0xe78>
  4458ac:	mov	x0, #0x8                   	// #8
  4458b0:	stp	x19, x20, [sp, #16]
  4458b4:	stp	x21, x22, [sp, #32]
  4458b8:	bl	44a2a8 <_obstack_memory_used@@Base+0x58a4>
  4458bc:	mov	x19, x0
  4458c0:	bl	4459a0 <_obstack_memory_used@@Base+0xf9c>
  4458c4:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  4458c8:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  4458cc:	mov	x0, x19
  4458d0:	ldr	x2, [x2, #3952]
  4458d4:	ldr	x1, [x1, #3640]
  4458d8:	bl	44b288 <_obstack_memory_used@@Base+0x6884>
  4458dc:	nop
  4458e0:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  4458e4:	ldr	x1, [x1, #3600]
  4458e8:	cbnz	x1, 4458f4 <_obstack_memory_used@@Base+0xef0>
  4458ec:	strb	wzr, [x0, #1]
  4458f0:	ret
  4458f4:	ldaxr	w1, [x0]
  4458f8:	stlxr	w2, wzr, [x0]
  4458fc:	cbnz	w2, 4458f4 <_obstack_memory_used@@Base+0xef0>
  445900:	tbz	w1, #16, 4458f0 <_obstack_memory_used@@Base+0xeec>
  445904:	mov	x1, x0
  445908:	mov	w3, #0x7fffffff            	// #2147483647
  44590c:	mov	w2, #0x1                   	// #1
  445910:	mov	x0, #0x62                  	// #98
  445914:	b	402d50 <syscall@plt>
  445918:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44591c:	ldr	x1, [x1, #3600]
  445920:	cbz	x1, 44593c <_obstack_memory_used@@Base+0xf38>
  445924:	mov	w2, #0x1                   	// #1
  445928:	ldaxr	w1, [x0]
  44592c:	stlxr	w3, w2, [x0]
  445930:	cbnz	w3, 445928 <_obstack_memory_used@@Base+0xf24>
  445934:	tbnz	w1, #16, 44594c <_obstack_memory_used@@Base+0xf48>
  445938:	ret
  44593c:	strb	wzr, [x0, #1]
  445940:	mov	w1, #0x1                   	// #1
  445944:	stlrb	w1, [x0]
  445948:	ret
  44594c:	mov	x1, x0
  445950:	mov	w3, #0x7fffffff            	// #2147483647
  445954:	mov	x0, #0x62                  	// #98
  445958:	b	402d50 <syscall@plt>
  44595c:	nop
  445960:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  445964:	ldr	x1, [x1, #4048]
  445968:	add	x1, x1, #0x10
  44596c:	str	x1, [x0]
  445970:	b	44a558 <_obstack_memory_used@@Base+0x5b54>
  445974:	nop
  445978:	stp	x29, x30, [sp, #-32]!
  44597c:	mov	x29, sp
  445980:	str	x19, [sp, #16]
  445984:	mov	x19, x0
  445988:	bl	445960 <_obstack_memory_used@@Base+0xf5c>
  44598c:	mov	x0, x19
  445990:	mov	x1, #0x8                   	// #8
  445994:	ldr	x19, [sp, #16]
  445998:	ldp	x29, x30, [sp], #32
  44599c:	b	445778 <_obstack_memory_used@@Base+0xd74>
  4459a0:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  4459a4:	ldr	x1, [x1, #4048]
  4459a8:	add	x1, x1, #0x10
  4459ac:	str	x1, [x0]
  4459b0:	ret
  4459b4:	nop
  4459b8:	stp	x29, x30, [sp, #-32]!
  4459bc:	cmp	x0, #0x0
  4459c0:	mov	x29, sp
  4459c4:	str	x19, [sp, #16]
  4459c8:	csinc	x19, x0, xzr, ne  // ne = any
  4459cc:	mov	x0, x19
  4459d0:	bl	402890 <malloc@plt>
  4459d4:	cbz	x0, 4459e4 <_obstack_memory_used@@Base+0xfe0>
  4459d8:	ldr	x19, [sp, #16]
  4459dc:	ldp	x29, x30, [sp], #32
  4459e0:	ret
  4459e4:	bl	44b378 <_obstack_memory_used@@Base+0x6974>
  4459e8:	cbz	x0, 4459f4 <_obstack_memory_used@@Base+0xff0>
  4459ec:	blr	x0
  4459f0:	b	4459cc <_obstack_memory_used@@Base+0xfc8>
  4459f4:	mov	x0, #0x8                   	// #8
  4459f8:	bl	44a2a8 <_obstack_memory_used@@Base+0x58a4>
  4459fc:	adrp	x3, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  445a00:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  445a04:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  445a08:	ldr	x3, [x3, #3912]
  445a0c:	ldr	x2, [x2, #3688]
  445a10:	add	x3, x3, #0x10
  445a14:	ldr	x1, [x1, #3656]
  445a18:	str	x3, [x0]
  445a1c:	bl	44b288 <_obstack_memory_used@@Base+0x6884>
  445a20:	b	4459b8 <_obstack_memory_used@@Base+0xfb4>
  445a24:	nop
  445a28:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  445a2c:	ldr	x1, [x1, #3944]
  445a30:	add	x1, x1, #0x10
  445a34:	str	x1, [x0]
  445a38:	b	449cf8 <_obstack_memory_used@@Base+0x52f4>
  445a3c:	nop
  445a40:	stp	x29, x30, [sp, #-32]!
  445a44:	mov	x29, sp
  445a48:	str	x19, [sp, #16]
  445a4c:	mov	x19, x0
  445a50:	bl	445a28 <_obstack_memory_used@@Base+0x1024>
  445a54:	mov	x0, x19
  445a58:	mov	x1, #0x18                  	// #24
  445a5c:	ldr	x19, [sp, #16]
  445a60:	ldp	x29, x30, [sp], #32
  445a64:	b	445778 <_obstack_memory_used@@Base+0xd74>
  445a68:	stp	x29, x30, [sp, #-64]!
  445a6c:	cmp	x4, x2
  445a70:	mov	x29, sp
  445a74:	stp	x19, x20, [sp, #16]
  445a78:	mov	x19, x0
  445a7c:	mov	x20, x1
  445a80:	b.eq	445aa4 <_obstack_memory_used@@Base+0x10a0>  // b.none
  445a84:	ldr	x0, [x19, #16]
  445a88:	mov	x1, x20
  445a8c:	ldp	x19, x20, [sp, #16]
  445a90:	ldr	x5, [x0]
  445a94:	ldr	x5, [x5, #64]
  445a98:	ldp	x29, x30, [sp], #64
  445a9c:	mov	x16, x5
  445aa0:	br	x16
  445aa4:	ldr	x1, [x3, #8]
  445aa8:	ldr	x0, [x0, #8]
  445aac:	cmp	x0, x1
  445ab0:	b.eq	445ad8 <_obstack_memory_used@@Base+0x10d4>  // b.none
  445ab4:	ldrb	w5, [x0]
  445ab8:	cmp	w5, #0x2a
  445abc:	b.eq	445a84 <_obstack_memory_used@@Base+0x1080>  // b.none
  445ac0:	stp	x2, x3, [sp, #40]
  445ac4:	str	x4, [sp, #56]
  445ac8:	bl	402ad0 <strcmp@plt>
  445acc:	ldp	x2, x3, [sp, #40]
  445ad0:	ldr	x4, [sp, #56]
  445ad4:	cbnz	w0, 445a84 <_obstack_memory_used@@Base+0x1080>
  445ad8:	mov	w0, #0x6                   	// #6
  445adc:	ldp	x19, x20, [sp, #16]
  445ae0:	ldp	x29, x30, [sp], #64
  445ae4:	ret
  445ae8:	stp	x29, x30, [sp, #-96]!
  445aec:	mov	x29, sp
  445af0:	stp	x21, x22, [sp, #32]
  445af4:	mov	x22, x3
  445af8:	mov	x21, x1
  445afc:	stp	x25, x26, [sp, #64]
  445b00:	mov	w26, w2
  445b04:	ldr	x25, [x0, #8]
  445b08:	stp	x19, x20, [sp, #16]
  445b0c:	mov	x19, x4
  445b10:	ldr	x3, [x3, #8]
  445b14:	stp	x23, x24, [sp, #48]
  445b18:	mov	x20, x7
  445b1c:	mov	x23, x6
  445b20:	cmp	x25, x3
  445b24:	b.eq	445b54 <_obstack_memory_used@@Base+0x1150>  // b.none
  445b28:	stp	x27, x28, [sp, #80]
  445b2c:	mov	x24, x5
  445b30:	mov	x27, x0
  445b34:	ldrb	w28, [x25]
  445b38:	cmp	w28, #0x2a
  445b3c:	b.eq	445b90 <_obstack_memory_used@@Base+0x118c>  // b.none
  445b40:	mov	x1, x3
  445b44:	mov	x0, x25
  445b48:	bl	402ad0 <strcmp@plt>
  445b4c:	cbnz	w0, 445b90 <_obstack_memory_used@@Base+0x118c>
  445b50:	ldp	x27, x28, [sp, #80]
  445b54:	str	x19, [x20]
  445b58:	str	w26, [x20, #8]
  445b5c:	tbnz	x21, #63, 445be0 <_obstack_memory_used@@Base+0x11dc>
  445b60:	add	x1, x19, x21
  445b64:	mov	w2, #0x6                   	// #6
  445b68:	cmp	x23, x1
  445b6c:	mov	w0, #0x0                   	// #0
  445b70:	csinc	w2, w2, wzr, eq  // eq = none
  445b74:	str	w2, [x20, #16]
  445b78:	ldp	x19, x20, [sp, #16]
  445b7c:	ldp	x21, x22, [sp, #32]
  445b80:	ldp	x23, x24, [sp, #48]
  445b84:	ldp	x25, x26, [sp, #64]
  445b88:	ldp	x29, x30, [sp], #96
  445b8c:	ret
  445b90:	cmp	x19, x23
  445b94:	b.eq	445bf8 <_obstack_memory_used@@Base+0x11f4>  // b.none
  445b98:	ldr	x0, [x27, #16]
  445b9c:	mov	x7, x20
  445ba0:	mov	x6, x23
  445ba4:	mov	x5, x24
  445ba8:	mov	x4, x19
  445bac:	mov	x3, x22
  445bb0:	ldr	x8, [x0]
  445bb4:	mov	w2, w26
  445bb8:	mov	x1, x21
  445bbc:	ldp	x19, x20, [sp, #16]
  445bc0:	ldp	x21, x22, [sp, #32]
  445bc4:	ldp	x23, x24, [sp, #48]
  445bc8:	ldp	x25, x26, [sp, #64]
  445bcc:	ldp	x27, x28, [sp, #80]
  445bd0:	ldp	x29, x30, [sp], #96
  445bd4:	ldr	x8, [x8, #56]
  445bd8:	mov	x16, x8
  445bdc:	br	x16
  445be0:	cmn	x21, #0x2
  445be4:	mov	w0, #0x0                   	// #0
  445be8:	b.ne	445b78 <_obstack_memory_used@@Base+0x1174>  // b.any
  445bec:	mov	w1, #0x1                   	// #1
  445bf0:	str	w1, [x20, #16]
  445bf4:	b	445b78 <_obstack_memory_used@@Base+0x1174>
  445bf8:	ldr	x1, [x24, #8]
  445bfc:	cmp	x25, x1
  445c00:	b.eq	445c18 <_obstack_memory_used@@Base+0x1214>  // b.none
  445c04:	cmp	w28, #0x2a
  445c08:	b.eq	445b98 <_obstack_memory_used@@Base+0x1194>  // b.none
  445c0c:	mov	x0, x25
  445c10:	bl	402ad0 <strcmp@plt>
  445c14:	cbnz	w0, 445b98 <_obstack_memory_used@@Base+0x1194>
  445c18:	mov	w0, #0x0                   	// #0
  445c1c:	ldp	x27, x28, [sp, #80]
  445c20:	str	w26, [x20, #12]
  445c24:	b	445b78 <_obstack_memory_used@@Base+0x1174>
  445c28:	stp	x29, x30, [sp, #-48]!
  445c2c:	mov	x29, sp
  445c30:	stp	x19, x20, [sp, #16]
  445c34:	mov	x19, x1
  445c38:	mov	x20, x2
  445c3c:	stp	x21, x22, [sp, #32]
  445c40:	mov	x22, x0
  445c44:	mov	x21, x3
  445c48:	bl	449e18 <_obstack_memory_used@@Base+0x5414>
  445c4c:	tst	w0, #0xff
  445c50:	b.ne	445c80 <_obstack_memory_used@@Base+0x127c>  // b.any
  445c54:	ldr	x0, [x22, #16]
  445c58:	mov	x3, x21
  445c5c:	mov	x2, x20
  445c60:	mov	x1, x19
  445c64:	ldp	x19, x20, [sp, #16]
  445c68:	ldr	x4, [x0]
  445c6c:	ldp	x21, x22, [sp, #32]
  445c70:	ldp	x29, x30, [sp], #48
  445c74:	ldr	x4, [x4, #48]
  445c78:	mov	x16, x4
  445c7c:	br	x16
  445c80:	ldp	x19, x20, [sp, #16]
  445c84:	ldp	x21, x22, [sp, #32]
  445c88:	ldp	x29, x30, [sp], #48
  445c8c:	ret
  445c90:	ret
  445c94:	nop
  445c98:	mov	w0, #0x0                   	// #0
  445c9c:	ret
  445ca0:	mov	w0, #0x0                   	// #0
  445ca4:	ret
  445ca8:	stp	x29, x30, [sp, #-32]!
  445cac:	mov	x29, sp
  445cb0:	str	x19, [sp, #16]
  445cb4:	mov	x19, x0
  445cb8:	bl	445c90 <_obstack_memory_used@@Base+0x128c>
  445cbc:	mov	x0, x19
  445cc0:	mov	x1, #0x10                  	// #16
  445cc4:	ldr	x19, [sp, #16]
  445cc8:	ldp	x29, x30, [sp], #32
  445ccc:	b	445778 <_obstack_memory_used@@Base+0xd74>
  445cd0:	ldr	x2, [x0, #8]
  445cd4:	ldr	x1, [x1, #8]
  445cd8:	cmp	x2, x1
  445cdc:	b.eq	445d14 <_obstack_memory_used@@Base+0x1310>  // b.none
  445ce0:	ldrb	w3, [x2]
  445ce4:	mov	w0, #0x0                   	// #0
  445ce8:	cmp	w3, #0x2a
  445cec:	b.eq	445d10 <_obstack_memory_used@@Base+0x130c>  // b.none
  445cf0:	stp	x29, x30, [sp, #-16]!
  445cf4:	mov	x0, x2
  445cf8:	mov	x29, sp
  445cfc:	bl	402ad0 <strcmp@plt>
  445d00:	cmp	w0, #0x0
  445d04:	cset	w0, eq  // eq = none
  445d08:	ldp	x29, x30, [sp], #16
  445d0c:	ret
  445d10:	ret
  445d14:	mov	w0, #0x1                   	// #1
  445d18:	ret
  445d1c:	nop
  445d20:	mov	x2, x0
  445d24:	ldr	w0, [x0]
  445d28:	cbnz	w0, 445d3c <_obstack_memory_used@@Base+0x1338>
  445d2c:	ldr	x0, [x2, #8]
  445d30:	ldr	x0, [x0, #8]
  445d34:	cmp	x0, x2
  445d38:	b.eq	445d80 <_obstack_memory_used@@Base+0x137c>  // b.none
  445d3c:	ldr	x1, [x2, #16]
  445d40:	cbz	x1, 445d58 <_obstack_memory_used@@Base+0x1354>
  445d44:	nop
  445d48:	mov	x0, x1
  445d4c:	ldr	x1, [x1, #24]
  445d50:	cbnz	x1, 445d48 <_obstack_memory_used@@Base+0x1344>
  445d54:	ret
  445d58:	ldr	x0, [x2, #8]
  445d5c:	ldr	x1, [x0, #16]
  445d60:	cmp	x2, x1
  445d64:	b.ne	445d54 <_obstack_memory_used@@Base+0x1350>  // b.any
  445d68:	mov	x1, x0
  445d6c:	ldr	x0, [x0, #8]
  445d70:	ldr	x2, [x0, #16]
  445d74:	cmp	x2, x1
  445d78:	b.eq	445d68 <_obstack_memory_used@@Base+0x1364>  // b.none
  445d7c:	ret
  445d80:	ldr	x0, [x0, #24]
  445d84:	ret
  445d88:	ldr	x1, [x0, #24]
  445d8c:	cbz	x1, 445da0 <_obstack_memory_used@@Base+0x139c>
  445d90:	mov	x0, x1
  445d94:	ldr	x1, [x1, #16]
  445d98:	cbnz	x1, 445d90 <_obstack_memory_used@@Base+0x138c>
  445d9c:	ret
  445da0:	ldr	x1, [x0, #8]
  445da4:	ldr	x2, [x1, #24]
  445da8:	cmp	x0, x2
  445dac:	b.ne	445dd4 <_obstack_memory_used@@Base+0x13d0>  // b.any
  445db0:	mov	x0, x1
  445db4:	ldr	x1, [x1, #8]
  445db8:	ldr	x2, [x1, #24]
  445dbc:	cmp	x2, x0
  445dc0:	b.eq	445db0 <_obstack_memory_used@@Base+0x13ac>  // b.none
  445dc4:	ldr	x2, [x0, #24]
  445dc8:	cmp	x1, x2
  445dcc:	csel	x0, x0, x1, eq  // eq = none
  445dd0:	ret
  445dd4:	mov	x0, x1
  445dd8:	ret
  445ddc:	nop
  445de0:	b	445d88 <_obstack_memory_used@@Base+0x1384>
  445de4:	nop
  445de8:	b	445d20 <_obstack_memory_used@@Base+0x131c>
  445dec:	nop
  445df0:	b	445d20 <_obstack_memory_used@@Base+0x131c>
  445df4:	nop
  445df8:	ldr	x2, [x0, #24]
  445dfc:	ldr	x3, [x2, #16]
  445e00:	str	x3, [x0, #24]
  445e04:	cbz	x3, 445e0c <_obstack_memory_used@@Base+0x1408>
  445e08:	str	x0, [x3, #8]
  445e0c:	ldr	x3, [x0, #8]
  445e10:	str	x3, [x2, #8]
  445e14:	ldr	x4, [x1]
  445e18:	cmp	x0, x4
  445e1c:	b.eq	445e4c <_obstack_memory_used@@Base+0x1448>  // b.none
  445e20:	ldr	x1, [x3, #16]
  445e24:	cmp	x0, x1
  445e28:	b.eq	445e3c <_obstack_memory_used@@Base+0x1438>  // b.none
  445e2c:	str	x2, [x3, #24]
  445e30:	str	x0, [x2, #16]
  445e34:	str	x2, [x0, #8]
  445e38:	ret
  445e3c:	str	x2, [x3, #16]
  445e40:	str	x0, [x2, #16]
  445e44:	str	x2, [x0, #8]
  445e48:	ret
  445e4c:	str	x2, [x1]
  445e50:	str	x0, [x2, #16]
  445e54:	str	x2, [x0, #8]
  445e58:	ret
  445e5c:	nop
  445e60:	ldr	x2, [x0, #16]
  445e64:	ldr	x3, [x2, #24]
  445e68:	str	x3, [x0, #16]
  445e6c:	cbz	x3, 445e74 <_obstack_memory_used@@Base+0x1470>
  445e70:	str	x0, [x3, #8]
  445e74:	ldr	x3, [x0, #8]
  445e78:	str	x3, [x2, #8]
  445e7c:	ldr	x4, [x1]
  445e80:	cmp	x0, x4
  445e84:	b.eq	445eb4 <_obstack_memory_used@@Base+0x14b0>  // b.none
  445e88:	ldr	x1, [x3, #24]
  445e8c:	cmp	x0, x1
  445e90:	b.eq	445ea4 <_obstack_memory_used@@Base+0x14a0>  // b.none
  445e94:	str	x2, [x3, #16]
  445e98:	str	x0, [x2, #24]
  445e9c:	str	x2, [x0, #8]
  445ea0:	ret
  445ea4:	str	x2, [x3, #24]
  445ea8:	str	x0, [x2, #24]
  445eac:	str	x2, [x0, #8]
  445eb0:	ret
  445eb4:	str	x2, [x1]
  445eb8:	str	x0, [x2, #24]
  445ebc:	str	x2, [x0, #8]
  445ec0:	ret
  445ec4:	nop
  445ec8:	str	wzr, [x1]
  445ecc:	tst	w0, #0xff
  445ed0:	stp	x2, xzr, [x1, #8]
  445ed4:	str	xzr, [x1, #24]
  445ed8:	b.eq	445f90 <_obstack_memory_used@@Base+0x158c>  // b.none
  445edc:	str	x1, [x2, #16]
  445ee0:	cmp	x3, x2
  445ee4:	b.eq	446134 <_obstack_memory_used@@Base+0x1730>  // b.none
  445ee8:	ldr	x0, [x3, #16]
  445eec:	cmp	x0, x2
  445ef0:	b.eq	44614c <_obstack_memory_used@@Base+0x1748>  // b.none
  445ef4:	ldr	x5, [x3, #8]
  445ef8:	mov	x0, x5
  445efc:	cmp	x1, x5
  445f00:	b.eq	445f84 <_obstack_memory_used@@Base+0x1580>  // b.none
  445f04:	mov	w6, #0x1                   	// #1
  445f08:	b	445f34 <_obstack_memory_used@@Base+0x1530>
  445f0c:	cbz	x4, 445fb0 <_obstack_memory_used@@Base+0x15ac>
  445f10:	ldr	w7, [x4]
  445f14:	cbnz	w7, 445fb0 <_obstack_memory_used@@Base+0x15ac>
  445f18:	str	w6, [x2]
  445f1c:	mov	x1, x0
  445f20:	str	w6, [x4]
  445f24:	str	wzr, [x0]
  445f28:	mov	x0, x5
  445f2c:	cmp	x5, x1
  445f30:	b.eq	445f80 <_obstack_memory_used@@Base+0x157c>  // b.none
  445f34:	ldr	x2, [x1, #8]
  445f38:	ldr	w4, [x2]
  445f3c:	cbnz	w4, 445f84 <_obstack_memory_used@@Base+0x1580>
  445f40:	ldr	x0, [x2, #8]
  445f44:	ldr	x4, [x0, #16]
  445f48:	cmp	x2, x4
  445f4c:	b.ne	445f0c <_obstack_memory_used@@Base+0x1508>  // b.any
  445f50:	ldr	x7, [x0, #24]
  445f54:	cbz	x7, 44600c <_obstack_memory_used@@Base+0x1608>
  445f58:	ldr	w8, [x7]
  445f5c:	cbnz	w8, 44600c <_obstack_memory_used@@Base+0x1608>
  445f60:	str	w6, [x2]
  445f64:	mov	x1, x0
  445f68:	str	w6, [x7]
  445f6c:	cmp	x5, x1
  445f70:	str	wzr, [x0]
  445f74:	mov	x0, x5
  445f78:	b.ne	445f34 <_obstack_memory_used@@Base+0x1530>  // b.any
  445f7c:	nop
  445f80:	mov	x0, x1
  445f84:	mov	w1, #0x1                   	// #1
  445f88:	str	w1, [x0]
  445f8c:	ret
  445f90:	str	x1, [x2, #24]
  445f94:	ldr	x0, [x3, #24]
  445f98:	cmp	x0, x2
  445f9c:	b.ne	445ef4 <_obstack_memory_used@@Base+0x14f0>  // b.any
  445fa0:	ldr	x5, [x3, #8]
  445fa4:	str	x1, [x3, #24]
  445fa8:	mov	x0, x5
  445fac:	b	445efc <_obstack_memory_used@@Base+0x14f8>
  445fb0:	ldr	x4, [x2, #16]
  445fb4:	cmp	x4, x1
  445fb8:	b.eq	446064 <_obstack_memory_used@@Base+0x1660>  // b.none
  445fbc:	ldr	x4, [x0, #24]
  445fc0:	str	w6, [x2]
  445fc4:	ldr	x2, [x4, #16]
  445fc8:	str	wzr, [x0]
  445fcc:	str	x2, [x0, #24]
  445fd0:	cbz	x2, 445fd8 <_obstack_memory_used@@Base+0x15d4>
  445fd4:	str	x0, [x2, #8]
  445fd8:	ldr	x2, [x0, #8]
  445fdc:	str	x2, [x4, #8]
  445fe0:	ldr	x5, [x3, #8]
  445fe4:	cmp	x0, x5
  445fe8:	b.eq	4460b4 <_obstack_memory_used@@Base+0x16b0>  // b.none
  445fec:	ldr	x5, [x2, #16]
  445ff0:	cmp	x0, x5
  445ff4:	b.eq	4460bc <_obstack_memory_used@@Base+0x16b8>  // b.none
  445ff8:	str	x4, [x2, #24]
  445ffc:	str	x0, [x4, #16]
  446000:	str	x4, [x0, #8]
  446004:	ldr	x5, [x3, #8]
  446008:	b	445f28 <_obstack_memory_used@@Base+0x1524>
  44600c:	ldr	x5, [x2, #24]
  446010:	cmp	x5, x1
  446014:	b.eq	4460cc <_obstack_memory_used@@Base+0x16c8>  // b.none
  446018:	ldr	x5, [x4, #24]
  44601c:	str	w6, [x2]
  446020:	str	wzr, [x0]
  446024:	str	x5, [x0, #16]
  446028:	cbz	x5, 446030 <_obstack_memory_used@@Base+0x162c>
  44602c:	str	x0, [x5, #8]
  446030:	ldr	x2, [x0, #8]
  446034:	str	x2, [x4, #8]
  446038:	ldr	x5, [x3, #8]
  44603c:	cmp	x0, x5
  446040:	b.eq	4460c4 <_obstack_memory_used@@Base+0x16c0>  // b.none
  446044:	ldr	x5, [x2, #24]
  446048:	cmp	x0, x5
  44604c:	b.eq	446124 <_obstack_memory_used@@Base+0x1720>  // b.none
  446050:	str	x4, [x2, #16]
  446054:	str	x0, [x4, #24]
  446058:	str	x4, [x0, #8]
  44605c:	ldr	x5, [x3, #8]
  446060:	b	445f28 <_obstack_memory_used@@Base+0x1524>
  446064:	ldr	x5, [x1, #24]
  446068:	str	x5, [x2, #16]
  44606c:	mov	x4, x0
  446070:	cbz	x5, 44607c <_obstack_memory_used@@Base+0x1678>
  446074:	str	x2, [x5, #8]
  446078:	ldr	x4, [x2, #8]
  44607c:	str	x4, [x1, #8]
  446080:	ldr	x5, [x3, #8]
  446084:	cmp	x2, x5
  446088:	b.eq	44611c <_obstack_memory_used@@Base+0x1718>  // b.none
  44608c:	ldr	x5, [x4, #24]
  446090:	cmp	x2, x5
  446094:	b.eq	44612c <_obstack_memory_used@@Base+0x1728>  // b.none
  446098:	str	x1, [x4, #16]
  44609c:	mov	x4, x1
  4460a0:	str	x2, [x1, #24]
  4460a4:	str	x1, [x2, #8]
  4460a8:	mov	x1, x2
  4460ac:	mov	x2, x4
  4460b0:	b	445fbc <_obstack_memory_used@@Base+0x15b8>
  4460b4:	str	x4, [x3, #8]
  4460b8:	b	445ffc <_obstack_memory_used@@Base+0x15f8>
  4460bc:	str	x4, [x2, #16]
  4460c0:	b	445ffc <_obstack_memory_used@@Base+0x15f8>
  4460c4:	str	x4, [x3, #8]
  4460c8:	b	446054 <_obstack_memory_used@@Base+0x1650>
  4460cc:	ldr	x4, [x1, #16]
  4460d0:	str	x4, [x2, #24]
  4460d4:	cbz	x4, 44615c <_obstack_memory_used@@Base+0x1758>
  4460d8:	str	x2, [x4, #8]
  4460dc:	ldr	x4, [x2, #8]
  4460e0:	str	x4, [x1, #8]
  4460e4:	ldr	x5, [x3, #8]
  4460e8:	cmp	x2, x5
  4460ec:	b.eq	446178 <_obstack_memory_used@@Base+0x1774>  // b.none
  4460f0:	ldr	x5, [x4, #16]
  4460f4:	cmp	x2, x5
  4460f8:	b.eq	446170 <_obstack_memory_used@@Base+0x176c>  // b.none
  4460fc:	str	x1, [x4, #24]
  446100:	str	x2, [x1, #16]
  446104:	mov	x5, x1
  446108:	ldr	x4, [x0, #16]
  44610c:	str	x1, [x2, #8]
  446110:	mov	x1, x2
  446114:	mov	x2, x5
  446118:	b	446018 <_obstack_memory_used@@Base+0x1614>
  44611c:	str	x1, [x3, #8]
  446120:	b	44609c <_obstack_memory_used@@Base+0x1698>
  446124:	str	x4, [x2, #24]
  446128:	b	446054 <_obstack_memory_used@@Base+0x1650>
  44612c:	str	x1, [x4, #24]
  446130:	b	44609c <_obstack_memory_used@@Base+0x1698>
  446134:	mov	x0, x1
  446138:	str	x1, [x3, #8]
  44613c:	str	x1, [x3, #24]
  446140:	mov	w1, #0x1                   	// #1
  446144:	str	w1, [x0]
  446148:	ret
  44614c:	ldr	x5, [x3, #8]
  446150:	str	x1, [x3, #16]
  446154:	mov	x0, x5
  446158:	b	445efc <_obstack_memory_used@@Base+0x14f8>
  44615c:	str	x0, [x1, #8]
  446160:	ldr	x4, [x3, #8]
  446164:	cmp	x2, x4
  446168:	b.eq	446178 <_obstack_memory_used@@Base+0x1774>  // b.none
  44616c:	mov	x4, x0
  446170:	str	x1, [x4, #16]
  446174:	b	446100 <_obstack_memory_used@@Base+0x16fc>
  446178:	str	x1, [x3, #8]
  44617c:	b	446100 <_obstack_memory_used@@Base+0x16fc>
  446180:	ldp	x6, x5, [x0, #16]
  446184:	cbz	x6, 4464b0 <_obstack_memory_used@@Base+0x1aac>
  446188:	cbz	x5, 4462e0 <_obstack_memory_used@@Base+0x18dc>
  44618c:	mov	x2, x5
  446190:	mov	x3, x2
  446194:	ldr	x2, [x2, #16]
  446198:	cbnz	x2, 446190 <_obstack_memory_used@@Base+0x178c>
  44619c:	cmp	x3, x0
  4461a0:	ldr	x4, [x3, #24]
  4461a4:	b.eq	4464ac <_obstack_memory_used@@Base+0x1aa8>  // b.none
  4461a8:	str	x3, [x6, #8]
  4461ac:	cmp	x3, x5
  4461b0:	str	x6, [x3, #16]
  4461b4:	mov	x2, x5
  4461b8:	b.eq	4461e0 <_obstack_memory_used@@Base+0x17dc>  // b.none
  4461bc:	ldr	x2, [x3, #8]
  4461c0:	mov	x6, x2
  4461c4:	cbz	x4, 4461d0 <_obstack_memory_used@@Base+0x17cc>
  4461c8:	str	x2, [x4, #8]
  4461cc:	ldr	x6, [x3, #8]
  4461d0:	str	x4, [x6, #16]
  4461d4:	str	x5, [x3, #24]
  4461d8:	ldr	x5, [x0, #24]
  4461dc:	str	x3, [x5, #8]
  4461e0:	ldr	x5, [x1, #8]
  4461e4:	cmp	x5, x0
  4461e8:	b.eq	446468 <_obstack_memory_used@@Base+0x1a64>  // b.none
  4461ec:	ldr	x5, [x0, #8]
  4461f0:	ldr	x6, [x5, #16]
  4461f4:	cmp	x6, x0
  4461f8:	b.eq	44647c <_obstack_memory_used@@Base+0x1a78>  // b.none
  4461fc:	str	x3, [x5, #24]
  446200:	ldr	w6, [x0]
  446204:	str	x5, [x3, #8]
  446208:	ldr	w5, [x3]
  44620c:	str	w6, [x3]
  446210:	str	w5, [x0]
  446214:	cbz	w5, 44634c <_obstack_memory_used@@Base+0x1948>
  446218:	ldr	x3, [x1, #8]
  44621c:	cmp	x3, x4
  446220:	b.eq	446428 <_obstack_memory_used@@Base+0x1a24>  // b.none
  446224:	mov	w8, #0x1                   	// #1
  446228:	cbz	x4, 446238 <_obstack_memory_used@@Base+0x1834>
  44622c:	ldr	w3, [x4]
  446230:	cmp	w3, #0x1
  446234:	b.ne	446430 <_obstack_memory_used@@Base+0x1a2c>  // b.any
  446238:	ldr	x3, [x2, #16]
  44623c:	cmp	x3, x4
  446240:	b.eq	446350 <_obstack_memory_used@@Base+0x194c>  // b.none
  446244:	ldr	w6, [x3]
  446248:	ldr	x5, [x3, #24]
  44624c:	cbnz	w6, 44629c <_obstack_memory_used@@Base+0x1898>
  446250:	str	w8, [x3]
  446254:	str	wzr, [x2]
  446258:	str	x5, [x2, #16]
  44625c:	cbz	x5, 446264 <_obstack_memory_used@@Base+0x1860>
  446260:	str	x2, [x5, #8]
  446264:	ldr	x6, [x2, #8]
  446268:	str	x6, [x3, #8]
  44626c:	ldr	x7, [x1, #8]
  446270:	cmp	x2, x7
  446274:	b.eq	446440 <_obstack_memory_used@@Base+0x1a3c>  // b.none
  446278:	ldr	x7, [x6, #24]
  44627c:	cmp	x2, x7
  446280:	b.eq	44644c <_obstack_memory_used@@Base+0x1a48>  // b.none
  446284:	str	x3, [x6, #16]
  446288:	ldr	x5, [x2, #16]
  44628c:	str	x2, [x3, #24]
  446290:	str	x3, [x2, #8]
  446294:	mov	x3, x5
  446298:	ldr	x5, [x5, #24]
  44629c:	cbz	x5, 4462ac <_obstack_memory_used@@Base+0x18a8>
  4462a0:	ldr	w6, [x5]
  4462a4:	cmp	w6, #0x1
  4462a8:	b.ne	4464c4 <_obstack_memory_used@@Base+0x1ac0>  // b.any
  4462ac:	ldr	x6, [x3, #16]
  4462b0:	cbz	x6, 4462c0 <_obstack_memory_used@@Base+0x18bc>
  4462b4:	ldr	w5, [x6]
  4462b8:	cmp	w5, #0x1
  4462bc:	b.ne	446540 <_obstack_memory_used@@Base+0x1b3c>  // b.any
  4462c0:	ldr	x5, [x2, #8]
  4462c4:	str	wzr, [x3]
  4462c8:	ldr	x3, [x1, #8]
  4462cc:	mov	x4, x2
  4462d0:	cmp	x2, x3
  4462d4:	b.eq	446434 <_obstack_memory_used@@Base+0x1a30>  // b.none
  4462d8:	mov	x2, x5
  4462dc:	b	446228 <_obstack_memory_used@@Base+0x1824>
  4462e0:	ldr	x2, [x0, #8]
  4462e4:	mov	x4, x6
  4462e8:	str	x2, [x6, #8]
  4462ec:	ldr	x3, [x1, #8]
  4462f0:	cmp	x3, x0
  4462f4:	b.eq	446484 <_obstack_memory_used@@Base+0x1a80>  // b.none
  4462f8:	ldr	x3, [x0, #8]
  4462fc:	ldr	x5, [x3, #16]
  446300:	cmp	x5, x0
  446304:	b.eq	446474 <_obstack_memory_used@@Base+0x1a70>  // b.none
  446308:	str	x4, [x3, #24]
  44630c:	ldr	x3, [x1, #16]
  446310:	cmp	x3, x0
  446314:	b.eq	44648c <_obstack_memory_used@@Base+0x1a88>  // b.none
  446318:	ldr	x3, [x1, #24]
  44631c:	ldr	w5, [x0]
  446320:	cmp	x3, x0
  446324:	b.ne	446214 <_obstack_memory_used@@Base+0x1810>  // b.any
  446328:	ldr	x6, [x0, #16]
  44632c:	mov	x3, x4
  446330:	cbz	x6, 446628 <_obstack_memory_used@@Base+0x1c24>
  446334:	nop
  446338:	mov	x6, x3
  44633c:	ldr	x3, [x3, #24]
  446340:	cbnz	x3, 446338 <_obstack_memory_used@@Base+0x1934>
  446344:	str	x6, [x1, #24]
  446348:	cbnz	w5, 446218 <_obstack_memory_used@@Base+0x1814>
  44634c:	ret
  446350:	ldr	x3, [x2, #24]
  446354:	ldr	w6, [x3]
  446358:	ldr	x5, [x3, #16]
  44635c:	cbnz	w6, 4463ac <_obstack_memory_used@@Base+0x19a8>
  446360:	str	w8, [x3]
  446364:	str	wzr, [x2]
  446368:	str	x5, [x2, #24]
  44636c:	cbz	x5, 446374 <_obstack_memory_used@@Base+0x1970>
  446370:	str	x2, [x5, #8]
  446374:	ldr	x6, [x2, #8]
  446378:	str	x6, [x3, #8]
  44637c:	ldr	x7, [x1, #8]
  446380:	cmp	x2, x7
  446384:	b.eq	446454 <_obstack_memory_used@@Base+0x1a50>  // b.none
  446388:	ldr	x7, [x6, #16]
  44638c:	cmp	x2, x7
  446390:	b.eq	446460 <_obstack_memory_used@@Base+0x1a5c>  // b.none
  446394:	str	x3, [x6, #24]
  446398:	ldr	x5, [x2, #24]
  44639c:	str	x2, [x3, #16]
  4463a0:	str	x3, [x2, #8]
  4463a4:	mov	x3, x5
  4463a8:	ldr	x5, [x5, #16]
  4463ac:	cbz	x5, 4463bc <_obstack_memory_used@@Base+0x19b8>
  4463b0:	ldr	w6, [x5]
  4463b4:	cmp	w6, #0x1
  4463b8:	b.ne	4465b0 <_obstack_memory_used@@Base+0x1bac>  // b.any
  4463bc:	ldr	x6, [x3, #24]
  4463c0:	cbz	x6, 4462c0 <_obstack_memory_used@@Base+0x18bc>
  4463c4:	ldr	w5, [x6]
  4463c8:	cmp	w5, #0x1
  4463cc:	b.eq	4462c0 <_obstack_memory_used@@Base+0x18bc>  // b.none
  4463d0:	ldr	w8, [x2]
  4463d4:	mov	w7, #0x1                   	// #1
  4463d8:	ldr	x5, [x2, #24]
  4463dc:	str	w8, [x3]
  4463e0:	str	w7, [x2]
  4463e4:	mov	w3, #0x1                   	// #1
  4463e8:	str	w3, [x6]
  4463ec:	ldr	x3, [x5, #16]
  4463f0:	str	x3, [x2, #24]
  4463f4:	cbz	x3, 4463fc <_obstack_memory_used@@Base+0x19f8>
  4463f8:	str	x2, [x3, #8]
  4463fc:	ldr	x3, [x2, #8]
  446400:	str	x3, [x5, #8]
  446404:	ldr	x6, [x1, #8]
  446408:	cmp	x2, x6
  44640c:	b.eq	446648 <_obstack_memory_used@@Base+0x1c44>  // b.none
  446410:	ldr	x1, [x3, #16]
  446414:	cmp	x2, x1
  446418:	b.eq	446660 <_obstack_memory_used@@Base+0x1c5c>  // b.none
  44641c:	str	x5, [x3, #24]
  446420:	str	x2, [x5, #16]
  446424:	str	x5, [x2, #8]
  446428:	cbz	x4, 44634c <_obstack_memory_used@@Base+0x1948>
  44642c:	nop
  446430:	mov	x3, x4
  446434:	mov	w1, #0x1                   	// #1
  446438:	str	w1, [x3]
  44643c:	ret
  446440:	str	x3, [x1, #8]
  446444:	ldr	x5, [x2, #16]
  446448:	b	44628c <_obstack_memory_used@@Base+0x1888>
  44644c:	str	x3, [x6, #24]
  446450:	b	44628c <_obstack_memory_used@@Base+0x1888>
  446454:	str	x3, [x1, #8]
  446458:	ldr	x5, [x2, #24]
  44645c:	b	44639c <_obstack_memory_used@@Base+0x1998>
  446460:	str	x3, [x6, #16]
  446464:	b	44639c <_obstack_memory_used@@Base+0x1998>
  446468:	str	x3, [x1, #8]
  44646c:	ldr	x5, [x0, #8]
  446470:	b	446200 <_obstack_memory_used@@Base+0x17fc>
  446474:	str	x4, [x3, #16]
  446478:	b	44630c <_obstack_memory_used@@Base+0x1908>
  44647c:	str	x3, [x5, #16]
  446480:	b	446200 <_obstack_memory_used@@Base+0x17fc>
  446484:	str	x4, [x1, #8]
  446488:	b	44630c <_obstack_memory_used@@Base+0x1908>
  44648c:	ldr	x5, [x0, #24]
  446490:	mov	x3, x4
  446494:	cbz	x5, 446634 <_obstack_memory_used@@Base+0x1c30>
  446498:	mov	x5, x3
  44649c:	ldr	x3, [x3, #16]
  4464a0:	cbnz	x3, 446498 <_obstack_memory_used@@Base+0x1a94>
  4464a4:	str	x5, [x1, #16]
  4464a8:	b	446318 <_obstack_memory_used@@Base+0x1914>
  4464ac:	mov	x5, x4
  4464b0:	mov	x4, #0x0                   	// #0
  4464b4:	ldr	x2, [x0, #8]
  4464b8:	cbz	x5, 4462ec <_obstack_memory_used@@Base+0x18e8>
  4464bc:	mov	x6, x5
  4464c0:	b	4462e4 <_obstack_memory_used@@Base+0x18e0>
  4464c4:	ldr	x6, [x3, #16]
  4464c8:	cbnz	x6, 446534 <_obstack_memory_used@@Base+0x1b30>
  4464cc:	ldr	x6, [x5, #16]
  4464d0:	mov	w7, #0x1                   	// #1
  4464d4:	str	w7, [x5]
  4464d8:	str	wzr, [x3]
  4464dc:	str	x6, [x3, #24]
  4464e0:	cbz	x6, 4464e8 <_obstack_memory_used@@Base+0x1ae4>
  4464e4:	str	x3, [x6, #8]
  4464e8:	ldr	x6, [x3, #8]
  4464ec:	str	x6, [x5, #8]
  4464f0:	ldr	x7, [x1, #8]
  4464f4:	cmp	x3, x7
  4464f8:	b.eq	446640 <_obstack_memory_used@@Base+0x1c3c>  // b.none
  4464fc:	ldr	x7, [x6, #16]
  446500:	cmp	x3, x7
  446504:	b.eq	4465a0 <_obstack_memory_used@@Base+0x1b9c>  // b.none
  446508:	str	x5, [x6, #24]
  44650c:	str	x3, [x5, #16]
  446510:	mov	w7, #0x1                   	// #1
  446514:	str	x5, [x3, #8]
  446518:	ldr	x5, [x2, #16]
  44651c:	ldr	w3, [x2]
  446520:	ldr	x6, [x5, #16]
  446524:	str	w3, [x5]
  446528:	str	w7, [x2]
  44652c:	cbz	x6, 44655c <_obstack_memory_used@@Base+0x1b58>
  446530:	b	446554 <_obstack_memory_used@@Base+0x1b50>
  446534:	ldr	w7, [x6]
  446538:	cmp	w7, #0x1
  44653c:	b.eq	4464cc <_obstack_memory_used@@Base+0x1ac8>  // b.none
  446540:	ldr	w8, [x2]
  446544:	mov	w7, #0x1                   	// #1
  446548:	ldr	x5, [x2, #16]
  44654c:	str	w8, [x3]
  446550:	str	w7, [x2]
  446554:	mov	w3, #0x1                   	// #1
  446558:	str	w3, [x6]
  44655c:	ldr	x3, [x5, #24]
  446560:	str	x3, [x2, #16]
  446564:	cbz	x3, 44656c <_obstack_memory_used@@Base+0x1b68>
  446568:	str	x2, [x3, #8]
  44656c:	ldr	x3, [x2, #8]
  446570:	str	x3, [x5, #8]
  446574:	ldr	x6, [x1, #8]
  446578:	cmp	x2, x6
  44657c:	b.eq	4465a8 <_obstack_memory_used@@Base+0x1ba4>  // b.none
  446580:	ldr	x1, [x3, #24]
  446584:	cmp	x2, x1
  446588:	b.eq	446620 <_obstack_memory_used@@Base+0x1c1c>  // b.none
  44658c:	str	x5, [x3, #16]
  446590:	str	x2, [x5, #24]
  446594:	str	x5, [x2, #8]
  446598:	cbz	x4, 44634c <_obstack_memory_used@@Base+0x1948>
  44659c:	b	446430 <_obstack_memory_used@@Base+0x1a2c>
  4465a0:	str	x5, [x6, #16]
  4465a4:	b	44650c <_obstack_memory_used@@Base+0x1b08>
  4465a8:	str	x5, [x1, #8]
  4465ac:	b	446590 <_obstack_memory_used@@Base+0x1b8c>
  4465b0:	ldr	x6, [x3, #24]
  4465b4:	cbnz	x6, 446650 <_obstack_memory_used@@Base+0x1c4c>
  4465b8:	ldr	x6, [x5, #24]
  4465bc:	mov	w7, #0x1                   	// #1
  4465c0:	str	w7, [x5]
  4465c4:	str	wzr, [x3]
  4465c8:	str	x6, [x3, #16]
  4465cc:	cbz	x6, 4465d4 <_obstack_memory_used@@Base+0x1bd0>
  4465d0:	str	x3, [x6, #8]
  4465d4:	ldr	x6, [x3, #8]
  4465d8:	str	x6, [x5, #8]
  4465dc:	ldr	x7, [x1, #8]
  4465e0:	cmp	x3, x7
  4465e4:	b.eq	446668 <_obstack_memory_used@@Base+0x1c64>  // b.none
  4465e8:	ldr	x7, [x6, #24]
  4465ec:	cmp	x3, x7
  4465f0:	b.eq	446670 <_obstack_memory_used@@Base+0x1c6c>  // b.none
  4465f4:	str	x5, [x6, #16]
  4465f8:	str	x3, [x5, #24]
  4465fc:	mov	w7, #0x1                   	// #1
  446600:	str	x5, [x3, #8]
  446604:	ldr	x5, [x2, #24]
  446608:	ldr	w3, [x2]
  44660c:	ldr	x6, [x5, #24]
  446610:	str	w3, [x5]
  446614:	str	w7, [x2]
  446618:	cbz	x6, 4463ec <_obstack_memory_used@@Base+0x19e8>
  44661c:	b	4463e4 <_obstack_memory_used@@Base+0x19e0>
  446620:	str	x5, [x3, #24]
  446624:	b	446590 <_obstack_memory_used@@Base+0x1b8c>
  446628:	ldr	x3, [x0, #8]
  44662c:	str	x3, [x1, #24]
  446630:	b	446214 <_obstack_memory_used@@Base+0x1810>
  446634:	ldr	x3, [x0, #8]
  446638:	str	x3, [x1, #16]
  44663c:	b	446318 <_obstack_memory_used@@Base+0x1914>
  446640:	str	x5, [x1, #8]
  446644:	b	44650c <_obstack_memory_used@@Base+0x1b08>
  446648:	str	x5, [x1, #8]
  44664c:	b	446420 <_obstack_memory_used@@Base+0x1a1c>
  446650:	ldr	w7, [x6]
  446654:	cmp	w7, #0x1
  446658:	b.eq	4465b8 <_obstack_memory_used@@Base+0x1bb4>  // b.none
  44665c:	b	4463d0 <_obstack_memory_used@@Base+0x19cc>
  446660:	str	x5, [x3, #16]
  446664:	b	446420 <_obstack_memory_used@@Base+0x1a1c>
  446668:	str	x5, [x1, #8]
  44666c:	b	4465f8 <_obstack_memory_used@@Base+0x1bf4>
  446670:	str	x5, [x6, #24]
  446674:	b	4465f8 <_obstack_memory_used@@Base+0x1bf4>
  446678:	mov	x2, x0
  44667c:	mov	w0, #0x0                   	// #0
  446680:	cbnz	x2, 44668c <_obstack_memory_used@@Base+0x1c88>
  446684:	b	4466a0 <_obstack_memory_used@@Base+0x1c9c>
  446688:	ldr	x2, [x2, #8]
  44668c:	ldr	w3, [x2]
  446690:	cmp	w3, #0x1
  446694:	cinc	w0, w0, eq  // eq = none
  446698:	cmp	x2, x1
  44669c:	b.ne	446688 <_obstack_memory_used@@Base+0x1c84>  // b.any
  4466a0:	ret
  4466a4:	nop
  4466a8:	stp	x29, x30, [sp, #-288]!
  4466ac:	mov	x29, sp
  4466b0:	str	x19, [sp, #16]
  4466b4:	mov	x19, x0
  4466b8:	str	q0, [x29, #96]
  4466bc:	str	q1, [x29, #112]
  4466c0:	str	q2, [x29, #128]
  4466c4:	str	q3, [x29, #144]
  4466c8:	str	q4, [x29, #160]
  4466cc:	str	q5, [x29, #176]
  4466d0:	str	q6, [x29, #192]
  4466d4:	str	q7, [x29, #208]
  4466d8:	stp	x1, x2, [x29, #232]
  4466dc:	stp	x3, x4, [x29, #248]
  4466e0:	stp	x5, x6, [x29, #264]
  4466e4:	str	x7, [x29, #280]
  4466e8:	bl	402700 <strlen@plt>
  4466ec:	add	x5, x29, #0xe0
  4466f0:	add	x2, x29, #0x120
  4466f4:	mov	w4, #0xffffffc8            	// #-56
  4466f8:	mov	w3, #0xffffff80            	// #-128
  4466fc:	stp	x2, x2, [x29, #64]
  446700:	add	x1, x0, #0x20f
  446704:	and	x1, x1, #0xfffffffffffffff0
  446708:	str	x5, [x29, #80]
  44670c:	sub	sp, sp, x1
  446710:	stp	w4, w3, [x29, #88]
  446714:	add	x1, x0, #0x200
  446718:	ldp	x6, x7, [x29, #64]
  44671c:	mov	x2, x19
  446720:	ldp	x4, x5, [x29, #80]
  446724:	add	x3, x29, #0x20
  446728:	mov	x19, sp
  44672c:	stp	x6, x7, [x29, #32]
  446730:	mov	x0, x19
  446734:	stp	x4, x5, [x29, #48]
  446738:	bl	4468b8 <_obstack_memory_used@@Base+0x1eb4>
  44673c:	mov	x0, #0x10                  	// #16
  446740:	bl	44a2a8 <_obstack_memory_used@@Base+0x58a4>
  446744:	mov	x1, x19
  446748:	mov	x19, x0
  44674c:	bl	44bb90 <_obstack_memory_used@@Base+0x718c>
  446750:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  446754:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  446758:	mov	x0, x19
  44675c:	ldr	x2, [x2, #3632]
  446760:	ldr	x1, [x1, #3664]
  446764:	bl	44b288 <_obstack_memory_used@@Base+0x6884>
  446768:	mov	x1, x0
  44676c:	mov	x0, x19
  446770:	mov	x19, x1
  446774:	bl	44a310 <_obstack_memory_used@@Base+0x590c>
  446778:	mov	x0, x19
  44677c:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  446780:	stp	x29, x30, [sp, #-144]!
  446784:	adrp	x3, 46c000 <_obstack_memory_used@@Base+0x275fc>
  446788:	add	x3, x3, #0xdf8
  44678c:	mov	x29, sp
  446790:	stp	x19, x20, [sp, #16]
  446794:	mov	x20, x1
  446798:	sub	x20, x20, x0
  44679c:	mov	x1, x0
  4467a0:	add	x0, x20, #0x78
  4467a4:	and	x0, x0, #0xfffffffffffffff0
  4467a8:	mov	x2, x20
  4467ac:	ldp	x14, x15, [x3]
  4467b0:	sub	sp, sp, x0
  4467b4:	ldp	x12, x13, [x3, #16]
  4467b8:	mov	x19, sp
  4467bc:	ldp	x10, x11, [x3, #32]
  4467c0:	add	x20, x19, x20
  4467c4:	ldp	x8, x9, [x3, #48]
  4467c8:	stp	x14, x15, [x19]
  4467cc:	ldrb	w0, [x3, #104]
  4467d0:	ldp	x6, x7, [x3, #64]
  4467d4:	stp	x12, x13, [x19, #16]
  4467d8:	ldp	x4, x5, [x3, #80]
  4467dc:	stp	x14, x15, [x29, #32]
  4467e0:	ldr	x3, [x3, #96]
  4467e4:	stp	x10, x11, [x19, #32]
  4467e8:	stp	x12, x13, [x29, #48]
  4467ec:	stp	x8, x9, [x19, #48]
  4467f0:	stp	x10, x11, [x29, #64]
  4467f4:	stp	x6, x7, [x19, #64]
  4467f8:	stp	x8, x9, [x29, #80]
  4467fc:	stp	x4, x5, [x19, #80]
  446800:	stp	x6, x7, [x29, #96]
  446804:	str	x3, [x19, #96]
  446808:	stp	x4, x5, [x29, #112]
  44680c:	str	x3, [x29, #128]
  446810:	strb	w0, [x29, #136]
  446814:	add	x0, x19, #0x68
  446818:	bl	4026a0 <memcpy@plt>
  44681c:	strb	wzr, [x20, #104]
  446820:	mov	x0, x19
  446824:	bl	402edc <ferror@plt+0x10c>
  446828:	stp	x29, x30, [sp, #-32]!
  44682c:	adrp	x6, 46c000 <_obstack_memory_used@@Base+0x275fc>
  446830:	mov	x7, #0xcccccccccccccccc    	// #-3689348814741910324
  446834:	mov	x29, sp
  446838:	str	x19, [sp, #16]
  44683c:	sub	sp, sp, #0x20
  446840:	mov	x8, sp
  446844:	add	x6, x6, #0xe68
  446848:	add	x19, x8, #0x18
  44684c:	movk	x7, #0xcccd
  446850:	mov	x5, x19
  446854:	nop
  446858:	umulh	x3, x2, x7
  44685c:	cmp	x2, #0x9
  446860:	lsr	x3, x3, #3
  446864:	add	x4, x3, x3, lsl #2
  446868:	sub	x4, x2, x4, lsl #1
  44686c:	mov	x2, x3
  446870:	ldrb	w3, [x6, x4]
  446874:	strb	w3, [x5, #-1]!
  446878:	b.hi	446858 <_obstack_memory_used@@Base+0x1e54>  // b.pmore
  44687c:	sub	x19, x19, x5
  446880:	cmp	x19, x1
  446884:	b.hi	4468ac <_obstack_memory_used@@Base+0x1ea8>  // b.pmore
  446888:	sub	x1, x8, x19
  44688c:	mov	x2, x19
  446890:	add	x1, x1, #0x18
  446894:	bl	4026a0 <memcpy@plt>
  446898:	mov	w0, w19
  44689c:	mov	sp, x29
  4468a0:	ldr	x19, [sp, #16]
  4468a4:	ldp	x29, x30, [sp], #32
  4468a8:	ret
  4468ac:	mov	w0, #0xffffffff            	// #-1
  4468b0:	b	44689c <_obstack_memory_used@@Base+0x1e98>
  4468b4:	nop
  4468b8:	stp	x29, x30, [sp, #-80]!
  4468bc:	sub	x1, x1, #0x1
  4468c0:	mov	x29, sp
  4468c4:	stp	x19, x20, [sp, #16]
  4468c8:	mov	x20, x2
  4468cc:	mov	x19, x0
  4468d0:	stp	x21, x22, [sp, #32]
  4468d4:	add	x21, x0, x1
  4468d8:	ldr	w22, [x3, #24]
  4468dc:	stp	x23, x24, [sp, #48]
  4468e0:	mov	x23, x0
  4468e4:	ldr	x24, [x3]
  4468e8:	str	x25, [sp, #64]
  4468ec:	ldr	x25, [x3, #8]
  4468f0:	ldrb	w2, [x2]
  4468f4:	cbz	w2, 446a64 <_obstack_memory_used@@Base+0x2060>
  4468f8:	cmp	x0, x21
  4468fc:	b.cs	446924 <_obstack_memory_used@@Base+0x1f20>  // b.hs, b.nlast
  446900:	cmp	w2, #0x25
  446904:	b.eq	446930 <_obstack_memory_used@@Base+0x1f2c>  // b.none
  446908:	ldrb	w1, [x20]
  44690c:	add	x20, x20, #0x1
  446910:	strb	w1, [x19], #1
  446914:	ldrb	w2, [x20]
  446918:	cbz	w2, 446998 <_obstack_memory_used@@Base+0x1f94>
  44691c:	cmp	x19, x21
  446920:	b.cc	446900 <_obstack_memory_used@@Base+0x1efc>  // b.lo, b.ul, b.last
  446924:	mov	x1, x19
  446928:	mov	x0, x23
  44692c:	bl	446780 <_obstack_memory_used@@Base+0x1d7c>
  446930:	ldrb	w1, [x20, #1]
  446934:	cmp	w1, #0x73
  446938:	b.eq	4469b8 <_obstack_memory_used@@Base+0x1fb4>  // b.none
  44693c:	cmp	w1, #0x7a
  446940:	b.eq	446954 <_obstack_memory_used@@Base+0x1f50>  // b.none
  446944:	cmp	w1, #0x25
  446948:	b.ne	446908 <_obstack_memory_used@@Base+0x1f04>  // b.any
  44694c:	add	x20, x20, #0x1
  446950:	b	44690c <_obstack_memory_used@@Base+0x1f08>
  446954:	ldrb	w0, [x20, #2]
  446958:	cmp	w0, #0x75
  44695c:	b.ne	446908 <_obstack_memory_used@@Base+0x1f04>  // b.any
  446960:	sub	x1, x21, x19
  446964:	tbnz	w22, #31, 446a28 <_obstack_memory_used@@Base+0x2024>
  446968:	add	x2, x24, #0xf
  44696c:	mov	x0, x24
  446970:	and	x24, x2, #0xfffffffffffffff8
  446974:	ldr	x2, [x0]
  446978:	mov	x0, x19
  44697c:	bl	446828 <_obstack_memory_used@@Base+0x1e24>
  446980:	cmp	w0, #0x0
  446984:	b.le	446924 <_obstack_memory_used@@Base+0x1f20>
  446988:	ldrb	w2, [x20, #3]
  44698c:	add	x20, x20, #0x3
  446990:	add	x19, x19, w0, sxtw
  446994:	cbnz	w2, 44691c <_obstack_memory_used@@Base+0x1f18>
  446998:	sub	w0, w19, w23
  44699c:	strb	wzr, [x19]
  4469a0:	ldp	x19, x20, [sp, #16]
  4469a4:	ldp	x21, x22, [sp, #32]
  4469a8:	ldp	x23, x24, [sp, #48]
  4469ac:	ldr	x25, [sp, #64]
  4469b0:	ldp	x29, x30, [sp], #80
  4469b4:	ret
  4469b8:	tbnz	w22, #31, 4469fc <_obstack_memory_used@@Base+0x1ff8>
  4469bc:	add	x1, x24, #0xf
  4469c0:	mov	x0, x24
  4469c4:	and	x24, x1, #0xfffffffffffffff8
  4469c8:	ldr	x2, [x0]
  4469cc:	ldrb	w1, [x2]
  4469d0:	cbz	w1, 4469f4 <_obstack_memory_used@@Base+0x1ff0>
  4469d4:	cmp	x21, x19
  4469d8:	b.hi	4469e8 <_obstack_memory_used@@Base+0x1fe4>  // b.pmore
  4469dc:	b	446a48 <_obstack_memory_used@@Base+0x2044>
  4469e0:	cmp	x21, x19
  4469e4:	b.eq	446a4c <_obstack_memory_used@@Base+0x2048>  // b.none
  4469e8:	strb	w1, [x19], #1
  4469ec:	ldrb	w1, [x2, #1]!
  4469f0:	cbnz	w1, 4469e0 <_obstack_memory_used@@Base+0x1fdc>
  4469f4:	add	x20, x20, #0x2
  4469f8:	b	446914 <_obstack_memory_used@@Base+0x1f10>
  4469fc:	add	w1, w22, #0x8
  446a00:	cmp	w1, #0x0
  446a04:	b.le	446a1c <_obstack_memory_used@@Base+0x2018>
  446a08:	add	x2, x24, #0xf
  446a0c:	mov	x0, x24
  446a10:	mov	w22, w1
  446a14:	and	x24, x2, #0xfffffffffffffff8
  446a18:	b	4469c8 <_obstack_memory_used@@Base+0x1fc4>
  446a1c:	add	x0, x25, w22, sxtw
  446a20:	mov	w22, w1
  446a24:	b	4469c8 <_obstack_memory_used@@Base+0x1fc4>
  446a28:	add	w2, w22, #0x8
  446a2c:	cmp	w2, #0x0
  446a30:	b.le	446a58 <_obstack_memory_used@@Base+0x2054>
  446a34:	add	x3, x24, #0xf
  446a38:	mov	x0, x24
  446a3c:	mov	w22, w2
  446a40:	and	x24, x3, #0xfffffffffffffff8
  446a44:	b	446974 <_obstack_memory_used@@Base+0x1f70>
  446a48:	mov	x21, x19
  446a4c:	mov	x1, x21
  446a50:	mov	x0, x23
  446a54:	bl	446780 <_obstack_memory_used@@Base+0x1d7c>
  446a58:	add	x0, x25, w22, sxtw
  446a5c:	mov	w22, w2
  446a60:	b	446974 <_obstack_memory_used@@Base+0x1f70>
  446a64:	mov	w0, #0x0                   	// #0
  446a68:	b	44699c <_obstack_memory_used@@Base+0x1f98>
  446a6c:	nop
  446a70:	str	x1, [x0]
  446a74:	ret
  446a78:	str	x1, [x0, #8]
  446a7c:	ret
  446a80:	ldr	x0, [x0]
  446a84:	ret
  446a88:	add	x0, x0, #0x10
  446a8c:	ret
  446a90:	add	x0, x0, #0x10
  446a94:	ret
  446a98:	str	x1, [x0, #16]
  446a9c:	ret
  446aa0:	ldr	x2, [x0]
  446aa4:	str	x1, [x0, #8]
  446aa8:	strb	wzr, [x2, x1]
  446aac:	ret
  446ab0:	ldr	x1, [x0], #16
  446ab4:	cmp	x1, x0
  446ab8:	cset	w0, eq  // eq = none
  446abc:	ret
  446ac0:	ldr	x0, [x1]
  446ac4:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
  446ac8:	cmp	x0, x3
  446acc:	b.hi	446b08 <_obstack_memory_used@@Base+0x2104>  // b.pmore
  446ad0:	cmp	x0, x2
  446ad4:	b.ls	446b00 <_obstack_memory_used@@Base+0x20fc>  // b.plast
  446ad8:	cmp	x0, x2, lsl #1
  446adc:	lsl	x2, x2, #1
  446ae0:	b.cs	446b00 <_obstack_memory_used@@Base+0x20fc>  // b.hs, b.nlast
  446ae4:	cmp	x2, x3
  446ae8:	b.ls	446af8 <_obstack_memory_used@@Base+0x20f4>  // b.plast
  446aec:	str	x3, [x1]
  446af0:	mov	x0, #0x4000000000000000    	// #4611686018427387904
  446af4:	b	4459b8 <_obstack_memory_used@@Base+0xfb4>
  446af8:	mov	x0, x2
  446afc:	str	x2, [x1]
  446b00:	add	x0, x0, #0x1
  446b04:	b	4459b8 <_obstack_memory_used@@Base+0xfb4>
  446b08:	stp	x29, x30, [sp, #-16]!
  446b0c:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  446b10:	add	x0, x0, #0xe78
  446b14:	mov	x29, sp
  446b18:	bl	402fd8 <ferror@plt+0x208>
  446b1c:	nop
  446b20:	mov	x1, x0
  446b24:	ldr	x0, [x1], #16
  446b28:	cmp	x0, x1
  446b2c:	b.eq	446b34 <_obstack_memory_used@@Base+0x2130>  // b.none
  446b30:	b	445770 <_obstack_memory_used@@Base+0xd6c>
  446b34:	ret
  446b38:	ldr	x0, [x0]
  446b3c:	b	445770 <_obstack_memory_used@@Base+0xd6c>
  446b40:	stp	x29, x30, [sp, #-48]!
  446b44:	cmp	x1, #0xf
  446b48:	mov	x29, sp
  446b4c:	stp	x19, x20, [sp, #16]
  446b50:	and	w20, w2, #0xff
  446b54:	mov	x19, x0
  446b58:	str	x1, [sp, #40]
  446b5c:	b.hi	446b98 <_obstack_memory_used@@Base+0x2194>  // b.pmore
  446b60:	ldr	x0, [x0]
  446b64:	cbz	x1, 446b84 <_obstack_memory_used@@Base+0x2180>
  446b68:	cmp	x1, #0x1
  446b6c:	b.eq	446bb4 <_obstack_memory_used@@Base+0x21b0>  // b.none
  446b70:	mov	x2, x1
  446b74:	mov	w1, w20
  446b78:	bl	402930 <memset@plt>
  446b7c:	ldr	x0, [x19]
  446b80:	ldr	x1, [sp, #40]
  446b84:	str	x1, [x19, #8]
  446b88:	strb	wzr, [x0, x1]
  446b8c:	ldp	x19, x20, [sp, #16]
  446b90:	ldp	x29, x30, [sp], #48
  446b94:	ret
  446b98:	add	x1, sp, #0x28
  446b9c:	mov	x2, #0x0                   	// #0
  446ba0:	bl	446ac0 <_obstack_memory_used@@Base+0x20bc>
  446ba4:	str	x0, [x19]
  446ba8:	ldr	x1, [sp, #40]
  446bac:	str	x1, [x19, #16]
  446bb0:	b	446b64 <_obstack_memory_used@@Base+0x2160>
  446bb4:	strb	w20, [x0]
  446bb8:	ldr	x0, [x19]
  446bbc:	ldr	x1, [sp, #40]
  446bc0:	str	x1, [x19, #8]
  446bc4:	strb	wzr, [x0, x1]
  446bc8:	ldp	x19, x20, [sp, #16]
  446bcc:	ldp	x29, x30, [sp], #48
  446bd0:	ret
  446bd4:	nop
  446bd8:	b	446b40 <_obstack_memory_used@@Base+0x213c>
  446bdc:	nop
  446be0:	ret
  446be4:	nop
  446be8:	ret
  446bec:	nop
  446bf0:	ldr	x3, [x0, #8]
  446bf4:	cmp	x1, x3
  446bf8:	b.hi	446c04 <_obstack_memory_used@@Base+0x2200>  // b.pmore
  446bfc:	mov	x0, x1
  446c00:	ret
  446c04:	mov	x4, x2
  446c08:	stp	x29, x30, [sp, #-16]!
  446c0c:	mov	x2, x1
  446c10:	mov	x29, sp
  446c14:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  446c18:	mov	x1, x4
  446c1c:	add	x0, x0, #0xe90
  446c20:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  446c24:	nop
  446c28:	ldr	x0, [x0, #8]
  446c2c:	mov	x4, #0x3fffffffffffffff    	// #4611686018427387903
  446c30:	add	x1, x1, x4
  446c34:	sub	x1, x1, x0
  446c38:	cmp	x1, x2
  446c3c:	b.cc	446c44 <_obstack_memory_used@@Base+0x2240>  // b.lo, b.ul, b.last
  446c40:	ret
  446c44:	stp	x29, x30, [sp, #-16]!
  446c48:	mov	x0, x3
  446c4c:	mov	x29, sp
  446c50:	bl	402fd8 <ferror@plt+0x208>
  446c54:	nop
  446c58:	ldr	x0, [x0, #8]
  446c5c:	sub	x0, x0, x1
  446c60:	cmp	x0, x2
  446c64:	csel	x0, x0, x2, ls  // ls = plast
  446c68:	ret
  446c6c:	nop
  446c70:	ldr	x2, [x0]
  446c74:	cmp	x2, x1
  446c78:	b.hi	446c90 <_obstack_memory_used@@Base+0x228c>  // b.pmore
  446c7c:	ldr	x0, [x0, #8]
  446c80:	add	x2, x2, x0
  446c84:	cmp	x2, x1
  446c88:	cset	w0, cc  // cc = lo, ul, last
  446c8c:	ret
  446c90:	mov	w0, #0x1                   	// #1
  446c94:	ret
  446c98:	cmp	x2, #0x1
  446c9c:	mov	x4, x0
  446ca0:	b.eq	446cb0 <_obstack_memory_used@@Base+0x22ac>  // b.none
  446ca4:	cbnz	x2, 446cac <_obstack_memory_used@@Base+0x22a8>
  446ca8:	ret
  446cac:	b	4026a0 <memcpy@plt>
  446cb0:	ldrb	w0, [x1]
  446cb4:	strb	w0, [x4]
  446cb8:	ret
  446cbc:	nop
  446cc0:	cmp	x2, #0x1
  446cc4:	mov	x4, x0
  446cc8:	b.eq	446cd8 <_obstack_memory_used@@Base+0x22d4>  // b.none
  446ccc:	cbnz	x2, 446cd4 <_obstack_memory_used@@Base+0x22d0>
  446cd0:	ret
  446cd4:	b	4026b0 <memmove@plt>
  446cd8:	ldrb	w0, [x1]
  446cdc:	strb	w0, [x4]
  446ce0:	ret
  446ce4:	nop
  446ce8:	mov	x3, x1
  446cec:	and	w1, w2, #0xff
  446cf0:	cmp	x3, #0x1
  446cf4:	b.eq	446d08 <_obstack_memory_used@@Base+0x2304>  // b.none
  446cf8:	cbnz	x3, 446d00 <_obstack_memory_used@@Base+0x22fc>
  446cfc:	ret
  446d00:	mov	x2, x3
  446d04:	b	402930 <memset@plt>
  446d08:	strb	w1, [x0]
  446d0c:	ret
  446d10:	sub	x2, x2, x1
  446d14:	mov	x4, x0
  446d18:	cmp	x2, #0x1
  446d1c:	b.eq	446d2c <_obstack_memory_used@@Base+0x2328>  // b.none
  446d20:	cbnz	x2, 446d28 <_obstack_memory_used@@Base+0x2324>
  446d24:	ret
  446d28:	b	4026a0 <memcpy@plt>
  446d2c:	ldrb	w0, [x1]
  446d30:	strb	w0, [x4]
  446d34:	ret
  446d38:	sub	x2, x2, x1
  446d3c:	mov	x4, x0
  446d40:	cmp	x2, #0x1
  446d44:	b.eq	446d54 <_obstack_memory_used@@Base+0x2350>  // b.none
  446d48:	cbnz	x2, 446d50 <_obstack_memory_used@@Base+0x234c>
  446d4c:	ret
  446d50:	b	4026a0 <memcpy@plt>
  446d54:	ldrb	w0, [x1]
  446d58:	strb	w0, [x4]
  446d5c:	ret
  446d60:	sub	x2, x2, x1
  446d64:	mov	x4, x0
  446d68:	cmp	x2, #0x1
  446d6c:	b.eq	446d7c <_obstack_memory_used@@Base+0x2378>  // b.none
  446d70:	cbnz	x2, 446d78 <_obstack_memory_used@@Base+0x2374>
  446d74:	ret
  446d78:	b	4026a0 <memcpy@plt>
  446d7c:	ldrb	w0, [x1]
  446d80:	strb	w0, [x4]
  446d84:	ret
  446d88:	sub	x2, x2, x1
  446d8c:	mov	x4, x0
  446d90:	cmp	x2, #0x1
  446d94:	b.eq	446da4 <_obstack_memory_used@@Base+0x23a0>  // b.none
  446d98:	cbnz	x2, 446da0 <_obstack_memory_used@@Base+0x239c>
  446d9c:	ret
  446da0:	b	4026a0 <memcpy@plt>
  446da4:	ldrb	w0, [x1]
  446da8:	strb	w0, [x4]
  446dac:	ret
  446db0:	sub	x0, x0, x1
  446db4:	mov	x2, #0x7fffffff            	// #2147483647
  446db8:	cmp	x0, x2
  446dbc:	b.gt	446dd0 <_obstack_memory_used@@Base+0x23cc>
  446dc0:	mov	x2, #0xffffffff80000000    	// #-2147483648
  446dc4:	cmp	x0, x2
  446dc8:	csel	w0, w2, w0, lt  // lt = tstop
  446dcc:	ret
  446dd0:	mov	w0, w2
  446dd4:	ret
  446dd8:	cmp	x0, x1
  446ddc:	b.eq	446e94 <_obstack_memory_used@@Base+0x2490>  // b.none
  446de0:	stp	x29, x30, [sp, #-80]!
  446de4:	mov	x29, sp
  446de8:	stp	x21, x22, [sp, #32]
  446dec:	ldr	x21, [x1, #8]
  446df0:	str	x23, [sp, #48]
  446df4:	mov	x23, x0
  446df8:	stp	x19, x20, [sp, #16]
  446dfc:	mov	x19, x0
  446e00:	mov	x20, x1
  446e04:	ldr	x22, [x23], #16
  446e08:	cmp	x23, x22
  446e0c:	b.eq	446e98 <_obstack_memory_used@@Base+0x2494>  // b.none
  446e10:	ldr	x2, [x0, #16]
  446e14:	cmp	x2, x21
  446e18:	b.cc	446e58 <_obstack_memory_used@@Base+0x2454>  // b.lo, b.ul, b.last
  446e1c:	cbz	x21, 446e3c <_obstack_memory_used@@Base+0x2438>
  446e20:	cmp	x21, #0x1
  446e24:	ldr	x1, [x20]
  446e28:	b.eq	446ea0 <_obstack_memory_used@@Base+0x249c>  // b.none
  446e2c:	mov	x0, x22
  446e30:	mov	x2, x21
  446e34:	bl	4026a0 <memcpy@plt>
  446e38:	ldr	x22, [x19]
  446e3c:	str	x21, [x19, #8]
  446e40:	strb	wzr, [x22, x21]
  446e44:	ldp	x19, x20, [sp, #16]
  446e48:	ldp	x21, x22, [sp, #32]
  446e4c:	ldr	x23, [sp, #48]
  446e50:	ldp	x29, x30, [sp], #80
  446e54:	ret
  446e58:	add	x1, sp, #0x48
  446e5c:	mov	x0, x19
  446e60:	str	x21, [sp, #72]
  446e64:	bl	446ac0 <_obstack_memory_used@@Base+0x20bc>
  446e68:	ldr	x1, [x19]
  446e6c:	mov	x22, x0
  446e70:	cmp	x23, x1
  446e74:	b.eq	446e80 <_obstack_memory_used@@Base+0x247c>  // b.none
  446e78:	mov	x0, x1
  446e7c:	bl	445770 <_obstack_memory_used@@Base+0xd6c>
  446e80:	ldr	x0, [sp, #72]
  446e84:	str	x22, [x19]
  446e88:	str	x0, [x19, #16]
  446e8c:	cbz	x21, 446e3c <_obstack_memory_used@@Base+0x2438>
  446e90:	b	446e20 <_obstack_memory_used@@Base+0x241c>
  446e94:	ret
  446e98:	mov	x2, #0xf                   	// #15
  446e9c:	b	446e14 <_obstack_memory_used@@Base+0x2410>
  446ea0:	ldrb	w0, [x1]
  446ea4:	strb	w0, [x22]
  446ea8:	str	x21, [x19, #8]
  446eac:	ldr	x22, [x19]
  446eb0:	strb	wzr, [x22, x21]
  446eb4:	ldp	x19, x20, [sp, #16]
  446eb8:	ldp	x21, x22, [sp, #32]
  446ebc:	ldr	x23, [sp, #48]
  446ec0:	ldp	x29, x30, [sp], #80
  446ec4:	ret
  446ec8:	stp	x29, x30, [sp, #-96]!
  446ecc:	mov	x29, sp
  446ed0:	stp	x23, x24, [sp, #48]
  446ed4:	mov	x24, x0
  446ed8:	stp	x21, x22, [sp, #32]
  446edc:	mov	x21, x4
  446ee0:	ldr	x22, [x0, #8]
  446ee4:	stp	x19, x20, [sp, #16]
  446ee8:	mov	x19, x0
  446eec:	sub	x0, x4, x2
  446ef0:	stp	x25, x26, [sp, #64]
  446ef4:	add	x0, x0, x22
  446ef8:	ldr	x4, [x24], #16
  446efc:	str	x0, [sp, #88]
  446f00:	add	x25, x1, x2
  446f04:	mov	x20, x1
  446f08:	mov	x26, x3
  446f0c:	cmp	x24, x4
  446f10:	sub	x22, x22, x25
  446f14:	b.eq	446fec <_obstack_memory_used@@Base+0x25e8>  // b.none
  446f18:	ldr	x2, [x19, #16]
  446f1c:	add	x1, sp, #0x58
  446f20:	mov	x0, x19
  446f24:	bl	446ac0 <_obstack_memory_used@@Base+0x20bc>
  446f28:	mov	x23, x0
  446f2c:	cbz	x20, 446f44 <_obstack_memory_used@@Base+0x2540>
  446f30:	cmp	x20, #0x1
  446f34:	ldr	x1, [x19]
  446f38:	b.eq	446fd4 <_obstack_memory_used@@Base+0x25d0>  // b.none
  446f3c:	mov	x2, x20
  446f40:	bl	4026a0 <memcpy@plt>
  446f44:	cmp	x26, #0x0
  446f48:	ccmp	x21, #0x0, #0x4, ne  // ne = any
  446f4c:	b.eq	446f68 <_obstack_memory_used@@Base+0x2564>  // b.none
  446f50:	cmp	x21, #0x1
  446f54:	add	x0, x23, x20
  446f58:	b.eq	446fe0 <_obstack_memory_used@@Base+0x25dc>  // b.none
  446f5c:	mov	x1, x26
  446f60:	mov	x2, x21
  446f64:	bl	4026a0 <memcpy@plt>
  446f68:	ldr	x0, [x19]
  446f6c:	cbz	x22, 446f94 <_obstack_memory_used@@Base+0x2590>
  446f70:	add	x4, x20, x21
  446f74:	cmp	x22, #0x1
  446f78:	add	x3, x23, x4
  446f7c:	add	x1, x0, x25
  446f80:	b.eq	446fc4 <_obstack_memory_used@@Base+0x25c0>  // b.none
  446f84:	mov	x2, x22
  446f88:	mov	x0, x3
  446f8c:	bl	4026a0 <memcpy@plt>
  446f90:	ldr	x0, [x19]
  446f94:	cmp	x24, x0
  446f98:	b.eq	446fa0 <_obstack_memory_used@@Base+0x259c>  // b.none
  446f9c:	bl	445770 <_obstack_memory_used@@Base+0xd6c>
  446fa0:	ldr	x0, [sp, #88]
  446fa4:	str	x23, [x19]
  446fa8:	str	x0, [x19, #16]
  446fac:	ldp	x19, x20, [sp, #16]
  446fb0:	ldp	x21, x22, [sp, #32]
  446fb4:	ldp	x23, x24, [sp, #48]
  446fb8:	ldp	x25, x26, [sp, #64]
  446fbc:	ldp	x29, x30, [sp], #96
  446fc0:	ret
  446fc4:	ldrb	w0, [x0, x25]
  446fc8:	strb	w0, [x23, x4]
  446fcc:	ldr	x0, [x19]
  446fd0:	b	446f94 <_obstack_memory_used@@Base+0x2590>
  446fd4:	ldrb	w0, [x1]
  446fd8:	strb	w0, [x23]
  446fdc:	b	446f44 <_obstack_memory_used@@Base+0x2540>
  446fe0:	ldrb	w0, [x26]
  446fe4:	strb	w0, [x23, x20]
  446fe8:	b	446f68 <_obstack_memory_used@@Base+0x2564>
  446fec:	mov	x2, #0xf                   	// #15
  446ff0:	b	446f1c <_obstack_memory_used@@Base+0x2518>
  446ff4:	nop
  446ff8:	stp	x29, x30, [sp, #-32]!
  446ffc:	add	x6, x1, x2
  447000:	mov	x29, sp
  447004:	ldp	x5, x3, [x0]
  447008:	stp	x19, x20, [sp, #16]
  44700c:	mov	x20, x2
  447010:	mov	x19, x0
  447014:	subs	x2, x3, x6
  447018:	ccmp	x20, #0x0, #0x4, ne  // ne = any
  44701c:	b.eq	44703c <_obstack_memory_used@@Base+0x2638>  // b.none
  447020:	mov	x4, x1
  447024:	add	x0, x5, x1
  447028:	cmp	x2, #0x1
  44702c:	add	x1, x5, x6
  447030:	b.eq	447054 <_obstack_memory_used@@Base+0x2650>  // b.none
  447034:	bl	4026b0 <memmove@plt>
  447038:	ldp	x5, x3, [x19]
  44703c:	sub	x3, x3, x20
  447040:	str	x3, [x19, #8]
  447044:	strb	wzr, [x5, x3]
  447048:	ldp	x19, x20, [sp, #16]
  44704c:	ldp	x29, x30, [sp], #32
  447050:	ret
  447054:	ldrb	w0, [x5, x6]
  447058:	strb	w0, [x5, x4]
  44705c:	ldp	x5, x3, [x19]
  447060:	sub	x3, x3, x20
  447064:	str	x3, [x19, #8]
  447068:	strb	wzr, [x5, x3]
  44706c:	ldp	x19, x20, [sp, #16]
  447070:	ldp	x29, x30, [sp], #32
  447074:	ret
  447078:	add	x1, x0, #0x10
  44707c:	stp	x1, xzr, [x0]
  447080:	strb	wzr, [x0, #16]
  447084:	ret
  447088:	add	x1, x0, #0x10
  44708c:	stp	x1, xzr, [x0]
  447090:	strb	wzr, [x0, #16]
  447094:	ret
  447098:	add	x4, x0, #0x10
  44709c:	str	x4, [x0]
  4470a0:	b	446b40 <_obstack_memory_used@@Base+0x213c>
  4470a4:	nop
  4470a8:	mov	x2, x1
  4470ac:	add	x3, x0, #0x10
  4470b0:	str	x3, [x0]
  4470b4:	ldr	x3, [x2], #16
  4470b8:	cmp	x2, x3
  4470bc:	b.eq	4470e0 <_obstack_memory_used@@Base+0x26dc>  // b.none
  4470c0:	str	x3, [x0]
  4470c4:	ldr	x3, [x1, #8]
  4470c8:	stp	x2, xzr, [x1]
  4470cc:	ldr	x4, [x1, #16]
  4470d0:	str	x3, [x0, #8]
  4470d4:	str	x4, [x0, #16]
  4470d8:	strb	wzr, [x1, #16]
  4470dc:	ret
  4470e0:	ldr	x3, [x1, #8]
  4470e4:	stp	x2, xzr, [x1]
  4470e8:	ldp	x4, x5, [x1, #16]
  4470ec:	str	x3, [x0, #8]
  4470f0:	stp	x4, x5, [x0, #16]
  4470f4:	strb	wzr, [x1, #16]
  4470f8:	ret
  4470fc:	nop
  447100:	mov	x2, x1
  447104:	add	x3, x0, #0x10
  447108:	ldr	x4, [x1, #8]
  44710c:	str	x3, [x0]
  447110:	ldr	x3, [x2], #16
  447114:	cmp	x2, x3
  447118:	b.eq	447134 <_obstack_memory_used@@Base+0x2730>  // b.none
  44711c:	ldr	x5, [x1, #16]
  447120:	stp	x3, x4, [x0]
  447124:	str	x5, [x0, #16]
  447128:	stp	x2, xzr, [x1]
  44712c:	strb	wzr, [x1, #16]
  447130:	ret
  447134:	ldp	x2, x3, [x1, #16]
  447138:	str	x4, [x0, #8]
  44713c:	stp	x2, x3, [x0, #16]
  447140:	str	xzr, [x1, #8]
  447144:	strb	wzr, [x1, #16]
  447148:	ret
  44714c:	nop
  447150:	mov	x1, x0
  447154:	ldr	x0, [x1], #16
  447158:	cmp	x0, x1
  44715c:	b.eq	447164 <_obstack_memory_used@@Base+0x2760>  // b.none
  447160:	b	445770 <_obstack_memory_used@@Base+0xd6c>
  447164:	ret
  447168:	stp	x29, x30, [sp, #-32]!
  44716c:	mov	x29, sp
  447170:	str	x19, [sp, #16]
  447174:	mov	x19, x0
  447178:	bl	446dd8 <_obstack_memory_used@@Base+0x23d4>
  44717c:	mov	x0, x19
  447180:	ldr	x19, [sp, #16]
  447184:	ldp	x29, x30, [sp], #32
  447188:	ret
  44718c:	nop
  447190:	stp	x29, x30, [sp, #-32]!
  447194:	mov	x29, sp
  447198:	stp	x19, x20, [sp, #16]
  44719c:	mov	x20, x1
  4471a0:	mov	x19, x0
  4471a4:	ldr	x3, [x0]
  4471a8:	ldr	x0, [x1], #16
  4471ac:	ldr	x2, [x20, #8]
  4471b0:	cmp	x1, x0
  4471b4:	b.eq	447220 <_obstack_memory_used@@Base+0x281c>  // b.none
  4471b8:	stp	x0, x2, [x19]
  4471bc:	add	x4, x19, #0x10
  4471c0:	cmp	x3, x4
  4471c4:	b.eq	4471f8 <_obstack_memory_used@@Base+0x27f4>  // b.none
  4471c8:	ldr	x2, [x20, #16]
  4471cc:	ldr	x0, [x19, #16]
  4471d0:	str	x2, [x19, #16]
  4471d4:	cbz	x3, 447200 <_obstack_memory_used@@Base+0x27fc>
  4471d8:	str	x3, [x20]
  4471dc:	str	xzr, [x20, #8]
  4471e0:	str	x0, [x20, #16]
  4471e4:	mov	x0, x19
  4471e8:	strb	wzr, [x3]
  4471ec:	ldp	x19, x20, [sp, #16]
  4471f0:	ldp	x29, x30, [sp], #32
  4471f4:	ret
  4471f8:	ldr	x0, [x20, #16]
  4471fc:	str	x0, [x19, #16]
  447200:	mov	x3, x1
  447204:	str	x1, [x20]
  447208:	str	xzr, [x20, #8]
  44720c:	mov	x0, x19
  447210:	strb	wzr, [x3]
  447214:	ldp	x19, x20, [sp, #16]
  447218:	ldp	x29, x30, [sp], #32
  44721c:	ret
  447220:	cbz	x2, 44723c <_obstack_memory_used@@Base+0x2838>
  447224:	cmp	x2, #0x1
  447228:	b.eq	447260 <_obstack_memory_used@@Base+0x285c>  // b.none
  44722c:	mov	x0, x3
  447230:	bl	4026a0 <memcpy@plt>
  447234:	ldr	x3, [x19]
  447238:	ldr	x2, [x20, #8]
  44723c:	str	x2, [x19, #8]
  447240:	strb	wzr, [x3, x2]
  447244:	mov	x0, x19
  447248:	str	xzr, [x20, #8]
  44724c:	ldr	x3, [x20]
  447250:	strb	wzr, [x3]
  447254:	ldp	x19, x20, [sp, #16]
  447258:	ldp	x29, x30, [sp], #32
  44725c:	ret
  447260:	ldrb	w0, [x20, #16]
  447264:	strb	w0, [x3]
  447268:	ldr	x3, [x19]
  44726c:	ldr	x2, [x20, #8]
  447270:	b	44723c <_obstack_memory_used@@Base+0x2838>
  447274:	nop
  447278:	ldr	x0, [x0]
  44727c:	ret
  447280:	ldr	x0, [x0]
  447284:	ret
  447288:	ldp	x1, x0, [x0]
  44728c:	add	x0, x1, x0
  447290:	ret
  447294:	nop
  447298:	ldp	x1, x0, [x0]
  44729c:	add	x0, x1, x0
  4472a0:	ret
  4472a4:	nop
  4472a8:	mov	x1, x0
  4472ac:	mov	x0, x8
  4472b0:	ldp	x2, x1, [x1]
  4472b4:	add	x1, x2, x1
  4472b8:	str	x1, [x8]
  4472bc:	ret
  4472c0:	mov	x1, x0
  4472c4:	mov	x0, x8
  4472c8:	ldp	x2, x1, [x1]
  4472cc:	add	x1, x2, x1
  4472d0:	str	x1, [x8]
  4472d4:	ret
  4472d8:	mov	x1, x0
  4472dc:	mov	x0, x8
  4472e0:	ldr	x1, [x1]
  4472e4:	str	x1, [x8]
  4472e8:	ret
  4472ec:	nop
  4472f0:	mov	x1, x0
  4472f4:	mov	x0, x8
  4472f8:	ldr	x1, [x1]
  4472fc:	str	x1, [x8]
  447300:	ret
  447304:	nop
  447308:	ldr	x0, [x0]
  44730c:	ret
  447310:	ldp	x1, x0, [x0]
  447314:	add	x0, x1, x0
  447318:	ret
  44731c:	nop
  447320:	mov	x1, x0
  447324:	mov	x0, x8
  447328:	ldp	x2, x1, [x1]
  44732c:	add	x1, x2, x1
  447330:	str	x1, [x8]
  447334:	ret
  447338:	mov	x1, x0
  44733c:	mov	x0, x8
  447340:	ldr	x1, [x1]
  447344:	str	x1, [x8]
  447348:	ret
  44734c:	nop
  447350:	ldr	x0, [x0, #8]
  447354:	ret
  447358:	ldr	x0, [x0, #8]
  44735c:	ret
  447360:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
  447364:	ret
  447368:	mov	x1, x0
  44736c:	ldr	x2, [x1], #16
  447370:	cmp	x2, x1
  447374:	b.eq	447380 <_obstack_memory_used@@Base+0x297c>  // b.none
  447378:	ldr	x0, [x0, #16]
  44737c:	ret
  447380:	mov	x0, #0xf                   	// #15
  447384:	ret
  447388:	stp	x29, x30, [sp, #-64]!
  44738c:	mov	x29, sp
  447390:	stp	x19, x20, [sp, #16]
  447394:	mov	x19, x0
  447398:	ldr	x0, [x0, #8]
  44739c:	str	x21, [sp, #32]
  4473a0:	str	x1, [sp, #56]
  4473a4:	cmp	x1, x0
  4473a8:	b.cs	4473b4 <_obstack_memory_used@@Base+0x29b0>  // b.hs, b.nlast
  4473ac:	mov	x1, x0
  4473b0:	str	x0, [sp, #56]
  4473b4:	mov	x20, x19
  4473b8:	ldr	x21, [x20], #16
  4473bc:	cmp	x20, x21
  4473c0:	b.eq	447478 <_obstack_memory_used@@Base+0x2a74>  // b.none
  4473c4:	ldr	x2, [x19, #16]
  4473c8:	cmp	x2, x1
  4473cc:	b.eq	447420 <_obstack_memory_used@@Base+0x2a1c>  // b.none
  4473d0:	cmp	x2, #0xf
  4473d4:	mov	x3, #0xf                   	// #15
  4473d8:	csel	x3, x2, x3, ls  // ls = plast
  4473dc:	cmp	x3, x1
  4473e0:	b.cs	447430 <_obstack_memory_used@@Base+0x2a2c>  // b.hs, b.nlast
  4473e4:	add	x1, sp, #0x38
  4473e8:	mov	x0, x19
  4473ec:	bl	446ac0 <_obstack_memory_used@@Base+0x20bc>
  4473f0:	mov	x21, x0
  4473f4:	ldp	x1, x3, [x19]
  4473f8:	add	x2, x3, #0x1
  4473fc:	cbz	x3, 447480 <_obstack_memory_used@@Base+0x2a7c>
  447400:	cbnz	x2, 44746c <_obstack_memory_used@@Base+0x2a68>
  447404:	cmp	x20, x1
  447408:	b.eq	447414 <_obstack_memory_used@@Base+0x2a10>  // b.none
  44740c:	mov	x0, x1
  447410:	bl	445770 <_obstack_memory_used@@Base+0xd6c>
  447414:	ldr	x0, [sp, #56]
  447418:	str	x21, [x19]
  44741c:	str	x0, [x19, #16]
  447420:	ldp	x19, x20, [sp, #16]
  447424:	ldr	x21, [sp, #32]
  447428:	ldp	x29, x30, [sp], #64
  44742c:	ret
  447430:	cmp	x20, x21
  447434:	b.eq	447420 <_obstack_memory_used@@Base+0x2a1c>  // b.none
  447438:	add	x2, x0, #0x1
  44743c:	cbz	x0, 447490 <_obstack_memory_used@@Base+0x2a8c>
  447440:	cbz	x2, 447450 <_obstack_memory_used@@Base+0x2a4c>
  447444:	mov	x1, x21
  447448:	mov	x0, x20
  44744c:	bl	4026a0 <memcpy@plt>
  447450:	mov	x0, x21
  447454:	bl	445770 <_obstack_memory_used@@Base+0xd6c>
  447458:	str	x20, [x19]
  44745c:	ldp	x19, x20, [sp, #16]
  447460:	ldr	x21, [sp, #32]
  447464:	ldp	x29, x30, [sp], #64
  447468:	ret
  44746c:	bl	4026a0 <memcpy@plt>
  447470:	ldr	x1, [x19]
  447474:	b	447404 <_obstack_memory_used@@Base+0x2a00>
  447478:	mov	x2, #0xf                   	// #15
  44747c:	b	4473c8 <_obstack_memory_used@@Base+0x29c4>
  447480:	ldrb	w0, [x1]
  447484:	strb	w0, [x21]
  447488:	ldr	x1, [x19]
  44748c:	b	447404 <_obstack_memory_used@@Base+0x2a00>
  447490:	ldrb	w0, [x21]
  447494:	strb	w0, [x19, #16]
  447498:	b	447450 <_obstack_memory_used@@Base+0x2a4c>
  44749c:	nop
  4474a0:	mov	x1, x0
  4474a4:	ldr	x2, [x1], #16
  4474a8:	cmp	x2, x1
  4474ac:	b.eq	4474dc <_obstack_memory_used@@Base+0x2ad8>  // b.none
  4474b0:	ldr	x2, [x0, #16]
  4474b4:	ldr	x1, [x0, #8]
  4474b8:	cmp	x1, x2
  4474bc:	b.cc	4474c4 <_obstack_memory_used@@Base+0x2ac0>  // b.lo, b.ul, b.last
  4474c0:	ret
  4474c4:	stp	x29, x30, [sp, #-16]!
  4474c8:	mov	x1, #0x0                   	// #0
  4474cc:	mov	x29, sp
  4474d0:	bl	447388 <_obstack_memory_used@@Base+0x2984>
  4474d4:	ldp	x29, x30, [sp], #16
  4474d8:	ret
  4474dc:	mov	x2, #0xf                   	// #15
  4474e0:	b	4474b4 <_obstack_memory_used@@Base+0x2ab0>
  4474e4:	bl	44a3e8 <_obstack_memory_used@@Base+0x59e4>
  4474e8:	bl	44a488 <_obstack_memory_used@@Base+0x5a84>
  4474ec:	b	4474d4 <_obstack_memory_used@@Base+0x2ad0>
  4474f0:	ldr	x1, [x0]
  4474f4:	str	xzr, [x0, #8]
  4474f8:	strb	wzr, [x1]
  4474fc:	ret
  447500:	ldr	x0, [x0, #8]
  447504:	cmp	x0, #0x0
  447508:	cset	w0, eq  // eq = none
  44750c:	ret
  447510:	ldr	x0, [x0]
  447514:	add	x0, x0, x1
  447518:	ret
  44751c:	nop
  447520:	ldr	x0, [x0]
  447524:	add	x0, x0, x1
  447528:	ret
  44752c:	nop
  447530:	ldr	x2, [x0, #8]
  447534:	cmp	x1, x2
  447538:	b.cs	447548 <_obstack_memory_used@@Base+0x2b44>  // b.hs, b.nlast
  44753c:	ldr	x0, [x0]
  447540:	add	x0, x0, x1
  447544:	ret
  447548:	stp	x29, x30, [sp, #-16]!
  44754c:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  447550:	add	x0, x0, #0xec8
  447554:	mov	x29, sp
  447558:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  44755c:	nop
  447560:	ldr	x2, [x0, #8]
  447564:	cmp	x1, x2
  447568:	b.cs	447578 <_obstack_memory_used@@Base+0x2b74>  // b.hs, b.nlast
  44756c:	ldr	x0, [x0]
  447570:	add	x0, x0, x1
  447574:	ret
  447578:	stp	x29, x30, [sp, #-16]!
  44757c:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  447580:	add	x0, x0, #0xec8
  447584:	mov	x29, sp
  447588:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  44758c:	nop
  447590:	ldr	x0, [x0]
  447594:	ret
  447598:	ldr	x0, [x0]
  44759c:	ret
  4475a0:	ldp	x2, x1, [x0]
  4475a4:	sub	x0, x1, #0x1
  4475a8:	add	x0, x2, x0
  4475ac:	ret
  4475b0:	ldp	x2, x1, [x0]
  4475b4:	sub	x0, x1, #0x1
  4475b8:	add	x0, x2, x0
  4475bc:	ret
  4475c0:	stp	x29, x30, [sp, #-48]!
  4475c4:	mov	x29, sp
  4475c8:	stp	x19, x20, [sp, #16]
  4475cc:	mov	x19, x0
  4475d0:	stp	x21, x22, [sp, #32]
  4475d4:	and	w22, w1, #0xff
  4475d8:	ldr	x21, [x0, #8]
  4475dc:	ldr	x1, [x0], #16
  4475e0:	add	x20, x21, #0x1
  4475e4:	cmp	x1, x0
  4475e8:	b.eq	44763c <_obstack_memory_used@@Base+0x2c38>  // b.none
  4475ec:	ldr	x0, [x19, #16]
  4475f0:	cmp	x20, x0
  4475f4:	b.hi	44761c <_obstack_memory_used@@Base+0x2c18>  // b.pmore
  4475f8:	strb	w22, [x1, x21]
  4475fc:	mov	x0, x19
  447600:	str	x20, [x19, #8]
  447604:	ldr	x1, [x19]
  447608:	strb	wzr, [x1, x20]
  44760c:	ldp	x19, x20, [sp, #16]
  447610:	ldp	x21, x22, [sp, #32]
  447614:	ldp	x29, x30, [sp], #48
  447618:	ret
  44761c:	mov	x1, x21
  447620:	mov	x0, x19
  447624:	mov	x4, #0x1                   	// #1
  447628:	mov	x3, #0x0                   	// #0
  44762c:	mov	x2, #0x0                   	// #0
  447630:	bl	446ec8 <_obstack_memory_used@@Base+0x24c4>
  447634:	ldr	x1, [x19]
  447638:	b	4475f8 <_obstack_memory_used@@Base+0x2bf4>
  44763c:	mov	x0, #0xf                   	// #15
  447640:	b	4475f0 <_obstack_memory_used@@Base+0x2bec>
  447644:	nop
  447648:	stp	x29, x30, [sp, #-48]!
  44764c:	mov	x29, sp
  447650:	stp	x19, x20, [sp, #16]
  447654:	mov	x19, x0
  447658:	stp	x21, x22, [sp, #32]
  44765c:	and	w22, w1, #0xff
  447660:	ldr	x21, [x0, #8]
  447664:	ldr	x1, [x0], #16
  447668:	add	x20, x21, #0x1
  44766c:	cmp	x1, x0
  447670:	b.eq	4476dc <_obstack_memory_used@@Base+0x2cd8>  // b.none
  447674:	ldr	x0, [x19, #16]
  447678:	cmp	x20, x0
  44767c:	b.hi	4476a0 <_obstack_memory_used@@Base+0x2c9c>  // b.pmore
  447680:	strb	w22, [x1, x21]
  447684:	str	x20, [x19, #8]
  447688:	ldr	x0, [x19]
  44768c:	strb	wzr, [x0, x20]
  447690:	ldp	x19, x20, [sp, #16]
  447694:	ldp	x21, x22, [sp, #32]
  447698:	ldp	x29, x30, [sp], #48
  44769c:	ret
  4476a0:	mov	x1, x21
  4476a4:	mov	x0, x19
  4476a8:	mov	x4, #0x1                   	// #1
  4476ac:	mov	x3, #0x0                   	// #0
  4476b0:	mov	x2, #0x0                   	// #0
  4476b4:	bl	446ec8 <_obstack_memory_used@@Base+0x24c4>
  4476b8:	ldr	x1, [x19]
  4476bc:	strb	w22, [x1, x21]
  4476c0:	str	x20, [x19, #8]
  4476c4:	ldr	x0, [x19]
  4476c8:	strb	wzr, [x0, x20]
  4476cc:	ldp	x19, x20, [sp, #16]
  4476d0:	ldp	x21, x22, [sp, #32]
  4476d4:	ldp	x29, x30, [sp], #48
  4476d8:	ret
  4476dc:	mov	x0, #0xf                   	// #15
  4476e0:	b	447678 <_obstack_memory_used@@Base+0x2c74>
  4476e4:	nop
  4476e8:	stp	x29, x30, [sp, #-32]!
  4476ec:	mov	x29, sp
  4476f0:	str	x19, [sp, #16]
  4476f4:	mov	x19, x0
  4476f8:	bl	446dd8 <_obstack_memory_used@@Base+0x23d4>
  4476fc:	mov	x0, x19
  447700:	ldr	x19, [sp, #16]
  447704:	ldp	x29, x30, [sp], #32
  447708:	ret
  44770c:	nop
  447710:	stp	x29, x30, [sp, #-32]!
  447714:	mov	x29, sp
  447718:	stp	x19, x20, [sp, #16]
  44771c:	mov	x19, x0
  447720:	mov	x0, x1
  447724:	mov	x20, x1
  447728:	ldr	x3, [x19]
  44772c:	ldr	x1, [x0], #16
  447730:	ldr	x2, [x20, #8]
  447734:	cmp	x1, x0
  447738:	b.eq	4477a4 <_obstack_memory_used@@Base+0x2da0>  // b.none
  44773c:	stp	x1, x2, [x19]
  447740:	add	x4, x19, #0x10
  447744:	cmp	x3, x4
  447748:	b.eq	44777c <_obstack_memory_used@@Base+0x2d78>  // b.none
  44774c:	ldr	x2, [x20, #16]
  447750:	ldr	x1, [x19, #16]
  447754:	str	x2, [x19, #16]
  447758:	cbz	x3, 447784 <_obstack_memory_used@@Base+0x2d80>
  44775c:	str	x3, [x20]
  447760:	mov	x0, x19
  447764:	str	xzr, [x20, #8]
  447768:	str	x1, [x20, #16]
  44776c:	strb	wzr, [x3]
  447770:	ldp	x19, x20, [sp, #16]
  447774:	ldp	x29, x30, [sp], #32
  447778:	ret
  44777c:	ldr	x1, [x20, #16]
  447780:	str	x1, [x19, #16]
  447784:	mov	x3, x0
  447788:	str	x0, [x20]
  44778c:	str	xzr, [x20, #8]
  447790:	mov	x0, x19
  447794:	strb	wzr, [x3]
  447798:	ldp	x19, x20, [sp, #16]
  44779c:	ldp	x29, x30, [sp], #32
  4477a0:	ret
  4477a4:	cbz	x2, 4477c0 <_obstack_memory_used@@Base+0x2dbc>
  4477a8:	cmp	x2, #0x1
  4477ac:	b.eq	4477e4 <_obstack_memory_used@@Base+0x2de0>  // b.none
  4477b0:	mov	x0, x3
  4477b4:	bl	4026a0 <memcpy@plt>
  4477b8:	ldr	x3, [x19]
  4477bc:	ldr	x2, [x20, #8]
  4477c0:	str	x2, [x19, #8]
  4477c4:	strb	wzr, [x3, x2]
  4477c8:	mov	x0, x19
  4477cc:	str	xzr, [x20, #8]
  4477d0:	ldr	x3, [x20]
  4477d4:	strb	wzr, [x3]
  4477d8:	ldp	x19, x20, [sp, #16]
  4477dc:	ldp	x29, x30, [sp], #32
  4477e0:	ret
  4477e4:	ldrb	w0, [x20, #16]
  4477e8:	strb	w0, [x3]
  4477ec:	ldr	x3, [x19]
  4477f0:	ldr	x2, [x20, #8]
  4477f4:	b	4477c0 <_obstack_memory_used@@Base+0x2dbc>
  4477f8:	stp	x29, x30, [sp, #-32]!
  4477fc:	mov	x29, sp
  447800:	ldr	x3, [x0, #8]
  447804:	str	x19, [sp, #16]
  447808:	cmp	x1, x3
  44780c:	b.hi	44786c <_obstack_memory_used@@Base+0x2e68>  // b.pmore
  447810:	mov	x19, x0
  447814:	cmn	x2, #0x1
  447818:	b.eq	447850 <_obstack_memory_used@@Base+0x2e4c>  // b.none
  44781c:	cbnz	x2, 447830 <_obstack_memory_used@@Base+0x2e2c>
  447820:	mov	x0, x19
  447824:	ldr	x19, [sp, #16]
  447828:	ldp	x29, x30, [sp], #32
  44782c:	ret
  447830:	sub	x3, x3, x1
  447834:	cmp	x3, x2
  447838:	csel	x2, x3, x2, ls  // ls = plast
  44783c:	bl	446ff8 <_obstack_memory_used@@Base+0x25f4>
  447840:	mov	x0, x19
  447844:	ldr	x19, [sp, #16]
  447848:	ldp	x29, x30, [sp], #32
  44784c:	ret
  447850:	ldr	x0, [x0]
  447854:	str	x1, [x19, #8]
  447858:	strb	wzr, [x0, x1]
  44785c:	mov	x0, x19
  447860:	ldr	x19, [sp, #16]
  447864:	ldp	x29, x30, [sp], #32
  447868:	ret
  44786c:	mov	x2, x1
  447870:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  447874:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  447878:	add	x0, x0, #0xe90
  44787c:	add	x1, x1, #0xf10
  447880:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  447884:	nop
  447888:	stp	x29, x30, [sp, #-32]!
  44788c:	mov	x2, #0x1                   	// #1
  447890:	mov	x29, sp
  447894:	stp	x19, x20, [sp, #16]
  447898:	mov	x20, x0
  44789c:	ldr	x19, [x0]
  4478a0:	sub	x19, x1, x19
  4478a4:	mov	x1, x19
  4478a8:	bl	446ff8 <_obstack_memory_used@@Base+0x25f4>
  4478ac:	ldr	x0, [x20]
  4478b0:	add	x0, x0, x19
  4478b4:	ldp	x19, x20, [sp, #16]
  4478b8:	ldp	x29, x30, [sp], #32
  4478bc:	ret
  4478c0:	stp	x29, x30, [sp, #-32]!
  4478c4:	mov	x29, sp
  4478c8:	ldp	x3, x4, [x0]
  4478cc:	stp	x19, x20, [sp, #16]
  4478d0:	mov	x19, x0
  4478d4:	sub	x20, x1, x3
  4478d8:	add	x3, x3, x4
  4478dc:	cmp	x2, x3
  4478e0:	b.eq	447904 <_obstack_memory_used@@Base+0x2f00>  // b.none
  4478e4:	sub	x2, x2, x1
  4478e8:	mov	x1, x20
  4478ec:	bl	446ff8 <_obstack_memory_used@@Base+0x25f4>
  4478f0:	ldr	x0, [x19]
  4478f4:	add	x0, x0, x20
  4478f8:	ldp	x19, x20, [sp, #16]
  4478fc:	ldp	x29, x30, [sp], #32
  447900:	ret
  447904:	str	x20, [x0, #8]
  447908:	strb	wzr, [x1]
  44790c:	ldr	x0, [x19]
  447910:	add	x0, x0, x20
  447914:	ldp	x19, x20, [sp, #16]
  447918:	ldp	x29, x30, [sp], #32
  44791c:	ret
  447920:	stp	x29, x30, [sp, #-16]!
  447924:	mov	x2, #0x1                   	// #1
  447928:	mov	x29, sp
  44792c:	ldr	x1, [x0, #8]
  447930:	sub	x1, x1, #0x1
  447934:	bl	446ff8 <_obstack_memory_used@@Base+0x25f4>
  447938:	ldp	x29, x30, [sp], #16
  44793c:	ret
  447940:	stp	x29, x30, [sp, #-64]!
  447944:	mov	x29, sp
  447948:	stp	x19, x20, [sp, #16]
  44794c:	mov	x19, x0
  447950:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
  447954:	add	x0, x2, x0
  447958:	stp	x21, x22, [sp, #32]
  44795c:	ldr	x5, [x19, #8]
  447960:	str	x23, [sp, #48]
  447964:	sub	x0, x0, x5
  447968:	cmp	x3, x0
  44796c:	b.hi	447a74 <_obstack_memory_used@@Base+0x3070>  // b.pmore
  447970:	mov	x0, x19
  447974:	sub	x21, x3, x2
  447978:	mov	x20, x3
  44797c:	mov	x22, x1
  447980:	and	w23, w4, #0xff
  447984:	add	x21, x21, x5
  447988:	ldr	x3, [x0], #16
  44798c:	cmp	x3, x0
  447990:	b.eq	447a30 <_obstack_memory_used@@Base+0x302c>  // b.none
  447994:	ldr	x0, [x19, #16]
  447998:	cmp	x0, x21
  44799c:	b.cc	447a10 <_obstack_memory_used@@Base+0x300c>  // b.lo, b.ul, b.last
  4479a0:	add	x0, x2, x22
  4479a4:	subs	x5, x5, x0
  4479a8:	ccmp	x2, x20, #0x4, ne  // ne = any
  4479ac:	b.eq	4479d0 <_obstack_memory_used@@Base+0x2fcc>  // b.none
  4479b0:	add	x3, x3, x22
  4479b4:	cmp	x5, #0x1
  4479b8:	add	x0, x3, x20
  4479bc:	add	x1, x3, x2
  4479c0:	b.eq	447a60 <_obstack_memory_used@@Base+0x305c>  // b.none
  4479c4:	mov	x2, x5
  4479c8:	bl	4026b0 <memmove@plt>
  4479cc:	ldr	x3, [x19]
  4479d0:	cbz	x20, 4479f0 <_obstack_memory_used@@Base+0x2fec>
  4479d4:	cmp	x20, #0x1
  4479d8:	add	x0, x3, x22
  4479dc:	b.eq	447a38 <_obstack_memory_used@@Base+0x3034>  // b.none
  4479e0:	mov	x2, x20
  4479e4:	mov	w1, w23
  4479e8:	bl	402930 <memset@plt>
  4479ec:	ldr	x3, [x19]
  4479f0:	str	x21, [x19, #8]
  4479f4:	strb	wzr, [x3, x21]
  4479f8:	mov	x0, x19
  4479fc:	ldp	x19, x20, [sp, #16]
  447a00:	ldp	x21, x22, [sp, #32]
  447a04:	ldr	x23, [sp, #48]
  447a08:	ldp	x29, x30, [sp], #64
  447a0c:	ret
  447a10:	mov	x3, #0x0                   	// #0
  447a14:	mov	x4, x20
  447a18:	mov	x1, x22
  447a1c:	mov	x0, x19
  447a20:	bl	446ec8 <_obstack_memory_used@@Base+0x24c4>
  447a24:	ldr	x3, [x19]
  447a28:	cbz	x20, 4479f0 <_obstack_memory_used@@Base+0x2fec>
  447a2c:	b	4479d4 <_obstack_memory_used@@Base+0x2fd0>
  447a30:	mov	x0, #0xf                   	// #15
  447a34:	b	447998 <_obstack_memory_used@@Base+0x2f94>
  447a38:	strb	w23, [x3, x22]
  447a3c:	mov	x0, x19
  447a40:	str	x21, [x19, #8]
  447a44:	ldr	x3, [x19]
  447a48:	strb	wzr, [x3, x21]
  447a4c:	ldp	x19, x20, [sp, #16]
  447a50:	ldp	x21, x22, [sp, #32]
  447a54:	ldr	x23, [sp, #48]
  447a58:	ldp	x29, x30, [sp], #64
  447a5c:	ret
  447a60:	ldrb	w0, [x3, x2]
  447a64:	strb	w0, [x3, x20]
  447a68:	ldr	x3, [x19]
  447a6c:	cbz	x20, 4479f0 <_obstack_memory_used@@Base+0x2fec>
  447a70:	b	4479d4 <_obstack_memory_used@@Base+0x2fd0>
  447a74:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  447a78:	add	x0, x0, #0xf28
  447a7c:	bl	402fd8 <ferror@plt+0x208>
  447a80:	mov	x3, x1
  447a84:	mov	w4, w2
  447a88:	ldr	x1, [x0, #8]
  447a8c:	mov	x2, #0x0                   	// #0
  447a90:	b	447940 <_obstack_memory_used@@Base+0x2f3c>
  447a94:	nop
  447a98:	mov	x3, x1
  447a9c:	mov	x5, x0
  447aa0:	ldr	x1, [x0, #8]
  447aa4:	and	w4, w2, #0xff
  447aa8:	cmp	x1, x3
  447aac:	b.cc	447ac4 <_obstack_memory_used@@Base+0x30c0>  // b.lo, b.ul, b.last
  447ab0:	b.ls	447ac0 <_obstack_memory_used@@Base+0x30bc>  // b.plast
  447ab4:	ldr	x0, [x0]
  447ab8:	str	x3, [x5, #8]
  447abc:	strb	wzr, [x0, x3]
  447ac0:	ret
  447ac4:	sub	x3, x3, x1
  447ac8:	mov	x2, #0x0                   	// #0
  447acc:	b	447940 <_obstack_memory_used@@Base+0x2f3c>
  447ad0:	mov	w2, #0x0                   	// #0
  447ad4:	b	447a98 <_obstack_memory_used@@Base+0x3094>
  447ad8:	mov	w4, w2
  447adc:	mov	x3, x1
  447ae0:	ldr	x2, [x0, #8]
  447ae4:	mov	x1, #0x0                   	// #0
  447ae8:	b	447940 <_obstack_memory_used@@Base+0x2f3c>
  447aec:	nop
  447af0:	stp	x29, x30, [sp, #-32]!
  447af4:	mov	w4, w1
  447af8:	mov	x3, #0x1                   	// #1
  447afc:	mov	x29, sp
  447b00:	ldr	x2, [x0, #8]
  447b04:	mov	x1, #0x0                   	// #0
  447b08:	str	x19, [sp, #16]
  447b0c:	mov	x19, x0
  447b10:	bl	447940 <_obstack_memory_used@@Base+0x2f3c>
  447b14:	mov	x0, x19
  447b18:	ldr	x19, [sp, #16]
  447b1c:	ldp	x29, x30, [sp], #32
  447b20:	ret
  447b24:	nop
  447b28:	and	w4, w3, #0xff
  447b2c:	ldr	x3, [x0, #8]
  447b30:	cmp	x1, x3
  447b34:	b.hi	447b44 <_obstack_memory_used@@Base+0x3140>  // b.pmore
  447b38:	mov	x3, x2
  447b3c:	mov	x2, #0x0                   	// #0
  447b40:	b	447940 <_obstack_memory_used@@Base+0x2f3c>
  447b44:	stp	x29, x30, [sp, #-16]!
  447b48:	mov	x2, x1
  447b4c:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  447b50:	mov	x29, sp
  447b54:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  447b58:	add	x0, x0, #0xe90
  447b5c:	add	x1, x1, #0xf48
  447b60:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  447b64:	nop
  447b68:	stp	x29, x30, [sp, #-32]!
  447b6c:	mov	w4, w2
  447b70:	mov	x3, #0x1                   	// #1
  447b74:	mov	x29, sp
  447b78:	stp	x19, x20, [sp, #16]
  447b7c:	mov	x20, x0
  447b80:	mov	x2, #0x0                   	// #0
  447b84:	ldr	x19, [x0]
  447b88:	sub	x19, x1, x19
  447b8c:	mov	x1, x19
  447b90:	bl	447940 <_obstack_memory_used@@Base+0x2f3c>
  447b94:	ldr	x0, [x20]
  447b98:	add	x0, x0, x19
  447b9c:	ldp	x19, x20, [sp, #16]
  447ba0:	ldp	x29, x30, [sp], #32
  447ba4:	ret
  447ba8:	ldr	x5, [x0, #8]
  447bac:	cmp	x1, x5
  447bb0:	b.hi	447bc8 <_obstack_memory_used@@Base+0x31c4>  // b.pmore
  447bb4:	sub	x5, x5, x1
  447bb8:	and	w4, w4, #0xff
  447bbc:	cmp	x5, x2
  447bc0:	csel	x2, x5, x2, ls  // ls = plast
  447bc4:	b	447940 <_obstack_memory_used@@Base+0x2f3c>
  447bc8:	stp	x29, x30, [sp, #-16]!
  447bcc:	mov	x2, x1
  447bd0:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  447bd4:	mov	x29, sp
  447bd8:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  447bdc:	mov	x3, x5
  447be0:	add	x1, x1, #0xf60
  447be4:	add	x0, x0, #0xe90
  447be8:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  447bec:	nop
  447bf0:	ldr	x5, [x0]
  447bf4:	sub	x2, x2, x1
  447bf8:	sub	x1, x1, x5
  447bfc:	b	447940 <_obstack_memory_used@@Base+0x2f3c>
  447c00:	stp	x29, x30, [sp, #-32]!
  447c04:	mov	x5, x2
  447c08:	mov	w4, w3
  447c0c:	mov	x29, sp
  447c10:	stp	x19, x20, [sp, #16]
  447c14:	mov	x20, x0
  447c18:	mov	x3, x5
  447c1c:	ldr	x19, [x0]
  447c20:	mov	x2, #0x0                   	// #0
  447c24:	sub	x19, x1, x19
  447c28:	mov	x1, x19
  447c2c:	bl	447940 <_obstack_memory_used@@Base+0x2f3c>
  447c30:	ldr	x0, [x20]
  447c34:	add	x0, x0, x19
  447c38:	ldp	x19, x20, [sp, #16]
  447c3c:	ldp	x29, x30, [sp], #32
  447c40:	ret
  447c44:	nop
  447c48:	stp	x29, x30, [sp, #-112]!
  447c4c:	mov	x29, sp
  447c50:	stp	x19, x20, [sp, #16]
  447c54:	mov	x19, x0
  447c58:	mov	x20, x4
  447c5c:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
  447c60:	add	x0, x2, x0
  447c64:	ldr	x4, [x19, #8]
  447c68:	stp	x21, x22, [sp, #32]
  447c6c:	stp	x23, x24, [sp, #48]
  447c70:	sub	x0, x0, x4
  447c74:	cmp	x20, x0
  447c78:	stp	x25, x26, [sp, #64]
  447c7c:	stp	x27, x28, [sp, #80]
  447c80:	b.hi	447eb4 <_obstack_memory_used@@Base+0x34b0>  // b.pmore
  447c84:	mov	x0, x19
  447c88:	sub	x25, x20, x2
  447c8c:	mov	x28, x2
  447c90:	mov	x26, x1
  447c94:	mov	x21, x3
  447c98:	add	x27, x4, x25
  447c9c:	ldr	x23, [x0], #16
  447ca0:	cmp	x23, x0
  447ca4:	b.eq	447e0c <_obstack_memory_used@@Base+0x3408>  // b.none
  447ca8:	ldr	x0, [x19, #16]
  447cac:	cmp	x0, x27
  447cb0:	b.cc	447dd4 <_obstack_memory_used@@Base+0x33d0>  // b.lo, b.ul, b.last
  447cb4:	cmp	x28, x20
  447cb8:	add	x0, x28, x26
  447cbc:	cset	w24, ne  // ne = any
  447cc0:	subs	x22, x4, x0
  447cc4:	csel	w24, w24, wzr, ne  // ne = any
  447cc8:	add	x3, x23, x26
  447ccc:	cmp	x23, x21
  447cd0:	b.ls	447d40 <_obstack_memory_used@@Base+0x333c>  // b.plast
  447cd4:	cbz	w24, 447cf8 <_obstack_memory_used@@Base+0x32f4>
  447cd8:	cmp	x22, #0x1
  447cdc:	add	x0, x3, x20
  447ce0:	add	x1, x3, x28
  447ce4:	b.eq	447dfc <_obstack_memory_used@@Base+0x33f8>  // b.none
  447ce8:	mov	x2, x22
  447cec:	str	x3, [sp, #104]
  447cf0:	bl	4026b0 <memmove@plt>
  447cf4:	ldr	x3, [sp, #104]
  447cf8:	cbz	x20, 447d14 <_obstack_memory_used@@Base+0x3310>
  447cfc:	cmp	x20, #0x1
  447d00:	b.eq	447df0 <_obstack_memory_used@@Base+0x33ec>  // b.none
  447d04:	mov	x2, x20
  447d08:	mov	x1, x21
  447d0c:	mov	x0, x3
  447d10:	bl	4026a0 <memcpy@plt>
  447d14:	ldr	x1, [x19]
  447d18:	str	x27, [x19, #8]
  447d1c:	mov	x0, x19
  447d20:	strb	wzr, [x1, x27]
  447d24:	ldp	x19, x20, [sp, #16]
  447d28:	ldp	x21, x22, [sp, #32]
  447d2c:	ldp	x23, x24, [sp, #48]
  447d30:	ldp	x25, x26, [sp, #64]
  447d34:	ldp	x27, x28, [sp, #80]
  447d38:	ldp	x29, x30, [sp], #112
  447d3c:	ret
  447d40:	add	x4, x23, x4
  447d44:	cmp	x21, x4
  447d48:	b.hi	447cd4 <_obstack_memory_used@@Base+0x32d0>  // b.pmore
  447d4c:	cmp	x20, #0x0
  447d50:	ccmp	x28, x20, #0x0, ne  // ne = any
  447d54:	b.cc	447e1c <_obstack_memory_used@@Base+0x3418>  // b.lo, b.ul, b.last
  447d58:	cmp	x20, #0x1
  447d5c:	b.eq	447e14 <_obstack_memory_used@@Base+0x3410>  // b.none
  447d60:	mov	x0, x3
  447d64:	mov	x2, x20
  447d68:	mov	x1, x21
  447d6c:	bl	4026b0 <memmove@plt>
  447d70:	mov	x3, x0
  447d74:	cbz	w24, 447d14 <_obstack_memory_used@@Base+0x3310>
  447d78:	cmp	x22, #0x1
  447d7c:	add	x0, x3, x20
  447d80:	add	x1, x3, x28
  447d84:	b.eq	447e40 <_obstack_memory_used@@Base+0x343c>  // b.none
  447d88:	mov	x2, x22
  447d8c:	str	x3, [sp, #104]
  447d90:	bl	4026b0 <memmove@plt>
  447d94:	ldr	x3, [sp, #104]
  447d98:	cmp	x28, x20
  447d9c:	b.cs	447d14 <_obstack_memory_used@@Base+0x3310>  // b.hs, b.nlast
  447da0:	add	x28, x3, x28
  447da4:	add	x0, x21, x20
  447da8:	cmp	x28, x0
  447dac:	b.cs	447e24 <_obstack_memory_used@@Base+0x3420>  // b.hs, b.nlast
  447db0:	cmp	x28, x21
  447db4:	b.hi	447e4c <_obstack_memory_used@@Base+0x3448>  // b.pmore
  447db8:	cmp	x20, #0x1
  447dbc:	add	x1, x21, x25
  447dc0:	b.eq	447ea8 <_obstack_memory_used@@Base+0x34a4>  // b.none
  447dc4:	mov	x2, x20
  447dc8:	mov	x0, x3
  447dcc:	bl	4026a0 <memcpy@plt>
  447dd0:	b	447d14 <_obstack_memory_used@@Base+0x3310>
  447dd4:	mov	x4, x20
  447dd8:	mov	x3, x21
  447ddc:	mov	x2, x28
  447de0:	mov	x1, x26
  447de4:	mov	x0, x19
  447de8:	bl	446ec8 <_obstack_memory_used@@Base+0x24c4>
  447dec:	b	447d14 <_obstack_memory_used@@Base+0x3310>
  447df0:	ldrb	w0, [x21]
  447df4:	strb	w0, [x23, x26]
  447df8:	b	447d14 <_obstack_memory_used@@Base+0x3310>
  447dfc:	ldrb	w0, [x3, x28]
  447e00:	strb	w0, [x3, x20]
  447e04:	cbz	x20, 447d14 <_obstack_memory_used@@Base+0x3310>
  447e08:	b	447cfc <_obstack_memory_used@@Base+0x32f8>
  447e0c:	mov	x0, #0xf                   	// #15
  447e10:	b	447cac <_obstack_memory_used@@Base+0x32a8>
  447e14:	ldrb	w0, [x21]
  447e18:	strb	w0, [x23, x26]
  447e1c:	cbz	w24, 447d98 <_obstack_memory_used@@Base+0x3394>
  447e20:	b	447d78 <_obstack_memory_used@@Base+0x3374>
  447e24:	cmp	x20, #0x1
  447e28:	b.eq	447df0 <_obstack_memory_used@@Base+0x33ec>  // b.none
  447e2c:	mov	x2, x20
  447e30:	mov	x1, x21
  447e34:	mov	x0, x3
  447e38:	bl	4026b0 <memmove@plt>
  447e3c:	b	447d14 <_obstack_memory_used@@Base+0x3310>
  447e40:	ldrb	w0, [x3, x28]
  447e44:	strb	w0, [x3, x20]
  447e48:	b	447d98 <_obstack_memory_used@@Base+0x3394>
  447e4c:	sub	x28, x28, x21
  447e50:	cmp	x28, #0x1
  447e54:	b.eq	447e90 <_obstack_memory_used@@Base+0x348c>  // b.none
  447e58:	cbz	x28, 447e70 <_obstack_memory_used@@Base+0x346c>
  447e5c:	mov	x0, x3
  447e60:	mov	x1, x21
  447e64:	mov	x2, x28
  447e68:	bl	4026b0 <memmove@plt>
  447e6c:	mov	x3, x0
  447e70:	sub	x2, x20, x28
  447e74:	add	x0, x3, x28
  447e78:	cmp	x2, #0x1
  447e7c:	add	x1, x3, x20
  447e80:	b.eq	447e9c <_obstack_memory_used@@Base+0x3498>  // b.none
  447e84:	cbz	x2, 447d14 <_obstack_memory_used@@Base+0x3310>
  447e88:	bl	4026a0 <memcpy@plt>
  447e8c:	b	447d14 <_obstack_memory_used@@Base+0x3310>
  447e90:	ldrb	w0, [x21]
  447e94:	strb	w0, [x23, x26]
  447e98:	b	447e70 <_obstack_memory_used@@Base+0x346c>
  447e9c:	ldrb	w0, [x3, x20]
  447ea0:	strb	w0, [x3, x28]
  447ea4:	b	447d14 <_obstack_memory_used@@Base+0x3310>
  447ea8:	ldrb	w0, [x21, x25]
  447eac:	strb	w0, [x23, x26]
  447eb0:	b	447d14 <_obstack_memory_used@@Base+0x3310>
  447eb4:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  447eb8:	add	x0, x0, #0xf78
  447ebc:	bl	402fd8 <ferror@plt+0x208>
  447ec0:	mov	x4, x3
  447ec4:	ldp	x3, x6, [x1]
  447ec8:	ldr	x1, [x0, #8]
  447ecc:	cmp	x2, x6
  447ed0:	b.hi	447ef0 <_obstack_memory_used@@Base+0x34ec>  // b.pmore
  447ed4:	sub	x6, x6, x2
  447ed8:	add	x3, x3, x2
  447edc:	cmp	x6, x4
  447ee0:	mov	x2, x1
  447ee4:	csel	x4, x6, x4, ls  // ls = plast
  447ee8:	mov	x1, #0x0                   	// #0
  447eec:	b	447c48 <_obstack_memory_used@@Base+0x3244>
  447ef0:	stp	x29, x30, [sp, #-16]!
  447ef4:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  447ef8:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  447efc:	mov	x29, sp
  447f00:	mov	x3, x6
  447f04:	add	x1, x1, #0xf98
  447f08:	add	x0, x0, #0xe90
  447f0c:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  447f10:	mov	x4, x2
  447f14:	mov	x3, x1
  447f18:	ldr	x2, [x0, #8]
  447f1c:	mov	x1, #0x0                   	// #0
  447f20:	b	447c48 <_obstack_memory_used@@Base+0x3244>
  447f24:	nop
  447f28:	stp	x29, x30, [sp, #-32]!
  447f2c:	mov	x4, x2
  447f30:	mov	x3, x1
  447f34:	mov	x29, sp
  447f38:	ldr	x2, [x0, #8]
  447f3c:	mov	x1, #0x0                   	// #0
  447f40:	str	x19, [sp, #16]
  447f44:	mov	x19, x0
  447f48:	bl	447c48 <_obstack_memory_used@@Base+0x3244>
  447f4c:	mov	x0, x19
  447f50:	ldr	x19, [sp, #16]
  447f54:	ldp	x29, x30, [sp], #32
  447f58:	ret
  447f5c:	nop
  447f60:	mov	x4, x2
  447f64:	mov	x3, x1
  447f68:	ldr	x2, [x0, #8]
  447f6c:	mov	x1, #0x0                   	// #0
  447f70:	b	447c48 <_obstack_memory_used@@Base+0x3244>
  447f74:	nop
  447f78:	stp	x29, x30, [sp, #-32]!
  447f7c:	mov	x29, sp
  447f80:	stp	x19, x20, [sp, #16]
  447f84:	mov	x19, x0
  447f88:	mov	x20, x1
  447f8c:	mov	x0, x1
  447f90:	bl	402700 <strlen@plt>
  447f94:	mov	x3, x20
  447f98:	mov	x4, x0
  447f9c:	mov	x0, x19
  447fa0:	mov	x1, #0x0                   	// #0
  447fa4:	ldr	x2, [x19, #8]
  447fa8:	ldp	x19, x20, [sp, #16]
  447fac:	ldp	x29, x30, [sp], #32
  447fb0:	b	447c48 <_obstack_memory_used@@Base+0x3244>
  447fb4:	nop
  447fb8:	ldr	x5, [x0, #8]
  447fbc:	cmp	x1, x5
  447fc0:	b.hi	447fd4 <_obstack_memory_used@@Base+0x35d0>  // b.pmore
  447fc4:	sub	x5, x5, x1
  447fc8:	cmp	x5, x2
  447fcc:	csel	x2, x5, x2, ls  // ls = plast
  447fd0:	b	447c48 <_obstack_memory_used@@Base+0x3244>
  447fd4:	stp	x29, x30, [sp, #-16]!
  447fd8:	mov	x2, x1
  447fdc:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  447fe0:	mov	x29, sp
  447fe4:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  447fe8:	mov	x3, x5
  447fec:	add	x1, x1, #0xf60
  447ff0:	add	x0, x0, #0xe90
  447ff4:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  447ff8:	stp	x29, x30, [sp, #-32]!
  447ffc:	mov	x29, sp
  448000:	stp	x19, x20, [sp, #16]
  448004:	mov	x19, x0
  448008:	mov	x20, x1
  44800c:	mov	x0, x1
  448010:	bl	402700 <strlen@plt>
  448014:	mov	x3, x20
  448018:	mov	x4, x0
  44801c:	mov	x0, x19
  448020:	mov	x1, #0x0                   	// #0
  448024:	ldr	x2, [x19, #8]
  448028:	ldp	x19, x20, [sp, #16]
  44802c:	ldp	x29, x30, [sp], #32
  448030:	b	447c48 <_obstack_memory_used@@Base+0x3244>
  448034:	nop
  448038:	ldr	x6, [x0, #8]
  44803c:	cmp	x1, x6
  448040:	b.hi	448054 <_obstack_memory_used@@Base+0x3650>  // b.pmore
  448044:	mov	x4, x3
  448048:	mov	x3, x2
  44804c:	mov	x2, #0x0                   	// #0
  448050:	b	447c48 <_obstack_memory_used@@Base+0x3244>
  448054:	stp	x29, x30, [sp, #-16]!
  448058:	mov	x2, x1
  44805c:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  448060:	mov	x29, sp
  448064:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  448068:	mov	x3, x6
  44806c:	add	x1, x1, #0xf60
  448070:	add	x0, x0, #0xe90
  448074:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  448078:	mov	x4, x3
  44807c:	ldr	x5, [x0, #8]
  448080:	ldr	x3, [x3]
  448084:	cmp	x1, x5
  448088:	ldr	x4, [x4, #8]
  44808c:	b.hi	4480a0 <_obstack_memory_used@@Base+0x369c>  // b.pmore
  448090:	sub	x5, x5, x1
  448094:	cmp	x5, x2
  448098:	csel	x2, x5, x2, ls  // ls = plast
  44809c:	b	447c48 <_obstack_memory_used@@Base+0x3244>
  4480a0:	stp	x29, x30, [sp, #-16]!
  4480a4:	mov	x2, x1
  4480a8:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4480ac:	mov	x29, sp
  4480b0:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4480b4:	mov	x3, x5
  4480b8:	add	x1, x1, #0xf60
  4480bc:	add	x0, x0, #0xe90
  4480c0:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  4480c4:	nop
  4480c8:	ldr	x6, [x0, #8]
  4480cc:	ldp	x3, x4, [x2]
  4480d0:	cmp	x1, x6
  4480d4:	b.hi	4480e0 <_obstack_memory_used@@Base+0x36dc>  // b.pmore
  4480d8:	mov	x2, #0x0                   	// #0
  4480dc:	b	447c48 <_obstack_memory_used@@Base+0x3244>
  4480e0:	stp	x29, x30, [sp, #-16]!
  4480e4:	mov	x2, x1
  4480e8:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4480ec:	mov	x29, sp
  4480f0:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4480f4:	mov	x3, x6
  4480f8:	add	x1, x1, #0xf60
  4480fc:	add	x0, x0, #0xe90
  448100:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  448104:	nop
  448108:	stp	x29, x30, [sp, #-48]!
  44810c:	mov	x29, sp
  448110:	stp	x19, x20, [sp, #16]
  448114:	mov	x20, x0
  448118:	mov	x19, x1
  44811c:	mov	x0, x3
  448120:	stp	x21, x22, [sp, #32]
  448124:	mov	x21, x3
  448128:	mov	x22, x2
  44812c:	bl	402700 <strlen@plt>
  448130:	ldr	x1, [x20, #8]
  448134:	cmp	x19, x1
  448138:	b.hi	448168 <_obstack_memory_used@@Base+0x3764>  // b.pmore
  44813c:	sub	x1, x1, x19
  448140:	mov	x4, x0
  448144:	cmp	x1, x22
  448148:	mov	x3, x21
  44814c:	csel	x2, x1, x22, ls  // ls = plast
  448150:	mov	x0, x20
  448154:	mov	x1, x19
  448158:	ldp	x19, x20, [sp, #16]
  44815c:	ldp	x21, x22, [sp, #32]
  448160:	ldp	x29, x30, [sp], #48
  448164:	b	447c48 <_obstack_memory_used@@Base+0x3244>
  448168:	mov	x3, x1
  44816c:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  448170:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  448174:	mov	x2, x19
  448178:	add	x1, x1, #0xf60
  44817c:	add	x0, x0, #0xe90
  448180:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  448184:	nop
  448188:	stp	x29, x30, [sp, #-48]!
  44818c:	mov	x29, sp
  448190:	stp	x19, x20, [sp, #16]
  448194:	mov	x20, x0
  448198:	mov	x19, x1
  44819c:	mov	x0, x2
  4481a0:	str	x21, [sp, #32]
  4481a4:	mov	x21, x2
  4481a8:	bl	402700 <strlen@plt>
  4481ac:	ldr	x3, [x20, #8]
  4481b0:	cmp	x19, x3
  4481b4:	b.hi	4481dc <_obstack_memory_used@@Base+0x37d8>  // b.pmore
  4481b8:	mov	x4, x0
  4481bc:	mov	x3, x21
  4481c0:	mov	x1, x19
  4481c4:	mov	x0, x20
  4481c8:	ldp	x19, x20, [sp, #16]
  4481cc:	mov	x2, #0x0                   	// #0
  4481d0:	ldr	x21, [sp, #32]
  4481d4:	ldp	x29, x30, [sp], #48
  4481d8:	b	447c48 <_obstack_memory_used@@Base+0x3244>
  4481dc:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4481e0:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4481e4:	mov	x2, x19
  4481e8:	add	x1, x1, #0xf60
  4481ec:	add	x0, x0, #0xe90
  4481f0:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  4481f4:	nop
  4481f8:	ldp	x6, x5, [x0]
  4481fc:	sub	x2, x2, x1
  448200:	sub	x1, x1, x6
  448204:	cmp	x1, x5
  448208:	b.hi	44821c <_obstack_memory_used@@Base+0x3818>  // b.pmore
  44820c:	sub	x5, x5, x1
  448210:	cmp	x5, x2
  448214:	csel	x2, x5, x2, ls  // ls = plast
  448218:	b	447c48 <_obstack_memory_used@@Base+0x3244>
  44821c:	stp	x29, x30, [sp, #-16]!
  448220:	mov	x2, x1
  448224:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  448228:	mov	x29, sp
  44822c:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  448230:	mov	x3, x5
  448234:	add	x1, x1, #0xf60
  448238:	add	x0, x0, #0xe90
  44823c:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  448240:	ldp	x6, x5, [x0]
  448244:	sub	x2, x2, x1
  448248:	sub	x4, x4, x3
  44824c:	sub	x1, x1, x6
  448250:	cmp	x1, x5
  448254:	b.hi	448268 <_obstack_memory_used@@Base+0x3864>  // b.pmore
  448258:	sub	x5, x5, x1
  44825c:	cmp	x5, x2
  448260:	csel	x2, x5, x2, ls  // ls = plast
  448264:	b	447c48 <_obstack_memory_used@@Base+0x3244>
  448268:	stp	x29, x30, [sp, #-16]!
  44826c:	mov	x2, x1
  448270:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  448274:	mov	x29, sp
  448278:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44827c:	mov	x3, x5
  448280:	add	x1, x1, #0xf60
  448284:	add	x0, x0, #0xe90
  448288:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  44828c:	nop
  448290:	ldp	x6, x5, [x0]
  448294:	sub	x2, x2, x1
  448298:	sub	x4, x4, x3
  44829c:	sub	x1, x1, x6
  4482a0:	cmp	x1, x5
  4482a4:	b.hi	4482b8 <_obstack_memory_used@@Base+0x38b4>  // b.pmore
  4482a8:	sub	x5, x5, x1
  4482ac:	cmp	x5, x2
  4482b0:	csel	x2, x5, x2, ls  // ls = plast
  4482b4:	b	447c48 <_obstack_memory_used@@Base+0x3244>
  4482b8:	stp	x29, x30, [sp, #-16]!
  4482bc:	mov	x2, x1
  4482c0:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4482c4:	mov	x29, sp
  4482c8:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4482cc:	mov	x3, x5
  4482d0:	add	x1, x1, #0xf60
  4482d4:	add	x0, x0, #0xe90
  4482d8:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  4482dc:	nop
  4482e0:	mov	x4, x3
  4482e4:	sub	x2, x2, x1
  4482e8:	ldp	x3, x5, [x0]
  4482ec:	sub	x1, x1, x3
  4482f0:	cmp	x1, x5
  4482f4:	ldp	x3, x4, [x4]
  4482f8:	b.hi	44830c <_obstack_memory_used@@Base+0x3908>  // b.pmore
  4482fc:	sub	x5, x5, x1
  448300:	cmp	x5, x2
  448304:	csel	x2, x5, x2, ls  // ls = plast
  448308:	b	447c48 <_obstack_memory_used@@Base+0x3244>
  44830c:	stp	x29, x30, [sp, #-16]!
  448310:	mov	x2, x1
  448314:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  448318:	mov	x29, sp
  44831c:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  448320:	mov	x3, x5
  448324:	add	x1, x1, #0xf60
  448328:	add	x0, x0, #0xe90
  44832c:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  448330:	ldp	x6, x5, [x0]
  448334:	sub	x2, x2, x1
  448338:	sub	x1, x1, x6
  44833c:	cmp	x1, x5
  448340:	b.hi	448354 <_obstack_memory_used@@Base+0x3950>  // b.pmore
  448344:	sub	x5, x5, x1
  448348:	cmp	x5, x2
  44834c:	csel	x2, x5, x2, ls  // ls = plast
  448350:	b	447c48 <_obstack_memory_used@@Base+0x3244>
  448354:	stp	x29, x30, [sp, #-16]!
  448358:	mov	x2, x1
  44835c:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  448360:	mov	x29, sp
  448364:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  448368:	mov	x3, x5
  44836c:	add	x1, x1, #0xf60
  448370:	add	x0, x0, #0xe90
  448374:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  448378:	ldp	x6, x5, [x0]
  44837c:	sub	x2, x2, x1
  448380:	sub	x4, x4, x3
  448384:	sub	x1, x1, x6
  448388:	cmp	x1, x5
  44838c:	b.hi	4483a0 <_obstack_memory_used@@Base+0x399c>  // b.pmore
  448390:	sub	x5, x5, x1
  448394:	cmp	x5, x2
  448398:	csel	x2, x5, x2, ls  // ls = plast
  44839c:	b	447c48 <_obstack_memory_used@@Base+0x3244>
  4483a0:	stp	x29, x30, [sp, #-16]!
  4483a4:	mov	x2, x1
  4483a8:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4483ac:	mov	x29, sp
  4483b0:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4483b4:	mov	x3, x5
  4483b8:	add	x1, x1, #0xf60
  4483bc:	add	x0, x0, #0xe90
  4483c0:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  4483c4:	nop
  4483c8:	ldp	x6, x5, [x0]
  4483cc:	sub	x2, x2, x1
  4483d0:	sub	x4, x4, x3
  4483d4:	sub	x1, x1, x6
  4483d8:	cmp	x1, x5
  4483dc:	b.hi	4483f0 <_obstack_memory_used@@Base+0x39ec>  // b.pmore
  4483e0:	sub	x5, x5, x1
  4483e4:	cmp	x5, x2
  4483e8:	csel	x2, x5, x2, ls  // ls = plast
  4483ec:	b	447c48 <_obstack_memory_used@@Base+0x3244>
  4483f0:	stp	x29, x30, [sp, #-16]!
  4483f4:	mov	x2, x1
  4483f8:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4483fc:	mov	x29, sp
  448400:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  448404:	mov	x3, x5
  448408:	add	x1, x1, #0xf60
  44840c:	add	x0, x0, #0xe90
  448410:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  448414:	nop
  448418:	stp	x29, x30, [sp, #-48]!
  44841c:	mov	x29, sp
  448420:	stp	x21, x22, [sp, #32]
  448424:	mov	x21, x0
  448428:	mov	x22, x3
  44842c:	mov	x0, x3
  448430:	stp	x19, x20, [sp, #16]
  448434:	mov	x19, x1
  448438:	mov	x20, x2
  44843c:	bl	402700 <strlen@plt>
  448440:	ldp	x1, x5, [x21]
  448444:	sub	x20, x20, x19
  448448:	sub	x1, x19, x1
  44844c:	cmp	x1, x5
  448450:	b.hi	44847c <_obstack_memory_used@@Base+0x3a78>  // b.pmore
  448454:	sub	x5, x5, x1
  448458:	mov	x4, x0
  44845c:	cmp	x5, x20
  448460:	mov	x3, x22
  448464:	csel	x2, x5, x20, ls  // ls = plast
  448468:	mov	x0, x21
  44846c:	ldp	x19, x20, [sp, #16]
  448470:	ldp	x21, x22, [sp, #32]
  448474:	ldp	x29, x30, [sp], #48
  448478:	b	447c48 <_obstack_memory_used@@Base+0x3244>
  44847c:	mov	x2, x1
  448480:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  448484:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  448488:	mov	x3, x5
  44848c:	add	x1, x1, #0xf60
  448490:	add	x0, x0, #0xe90
  448494:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  448498:	mov	x4, x3
  44849c:	ldp	x6, x3, [x0]
  4484a0:	sub	x1, x1, x6
  4484a4:	cmp	x1, x3
  4484a8:	b.hi	4484b8 <_obstack_memory_used@@Base+0x3ab4>  // b.pmore
  4484ac:	mov	x3, x2
  4484b0:	mov	x2, #0x0                   	// #0
  4484b4:	b	447c48 <_obstack_memory_used@@Base+0x3244>
  4484b8:	stp	x29, x30, [sp, #-16]!
  4484bc:	mov	x2, x1
  4484c0:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4484c4:	mov	x29, sp
  4484c8:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4484cc:	add	x0, x0, #0xe90
  4484d0:	add	x1, x1, #0xf60
  4484d4:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  4484d8:	stp	x29, x30, [sp, #-16]!
  4484dc:	mov	x29, sp
  4484e0:	ldr	x6, [x3, #8]
  4484e4:	ldr	x3, [x3]
  4484e8:	cmp	x4, x6
  4484ec:	b.hi	448520 <_obstack_memory_used@@Base+0x3b1c>  // b.pmore
  4484f0:	ldr	x7, [x0, #8]
  4484f4:	sub	x6, x6, x4
  4484f8:	cmp	x6, x5
  4484fc:	add	x3, x3, x4
  448500:	csel	x4, x6, x5, ls  // ls = plast
  448504:	cmp	x1, x7
  448508:	b.hi	44853c <_obstack_memory_used@@Base+0x3b38>  // b.pmore
  44850c:	ldp	x29, x30, [sp], #16
  448510:	sub	x7, x7, x1
  448514:	cmp	x7, x2
  448518:	csel	x2, x7, x2, ls  // ls = plast
  44851c:	b	447c48 <_obstack_memory_used@@Base+0x3244>
  448520:	mov	x3, x6
  448524:	mov	x2, x4
  448528:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44852c:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  448530:	add	x1, x1, #0xf60
  448534:	add	x0, x0, #0xe90
  448538:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  44853c:	mov	x3, x7
  448540:	mov	x2, x1
  448544:	b	448528 <_obstack_memory_used@@Base+0x3b24>
  448548:	stp	x29, x30, [sp, #-16]!
  44854c:	mov	x6, x3
  448550:	mov	x29, sp
  448554:	ldr	x5, [x2, #8]
  448558:	cmp	x3, x5
  44855c:	ldr	x3, [x2]
  448560:	b.hi	44858c <_obstack_memory_used@@Base+0x3b88>  // b.pmore
  448564:	ldr	x2, [x0, #8]
  448568:	sub	x5, x5, x6
  44856c:	cmp	x5, x4
  448570:	add	x3, x3, x6
  448574:	csel	x4, x5, x4, ls  // ls = plast
  448578:	cmp	x1, x2
  44857c:	b.hi	4485a8 <_obstack_memory_used@@Base+0x3ba4>  // b.pmore
  448580:	ldp	x29, x30, [sp], #16
  448584:	mov	x2, #0x0                   	// #0
  448588:	b	447c48 <_obstack_memory_used@@Base+0x3244>
  44858c:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  448590:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  448594:	mov	x3, x5
  448598:	mov	x2, x6
  44859c:	add	x1, x1, #0xf48
  4485a0:	add	x0, x0, #0xe90
  4485a4:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  4485a8:	mov	x3, x2
  4485ac:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4485b0:	mov	x2, x1
  4485b4:	add	x0, x0, #0xe90
  4485b8:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4485bc:	add	x1, x1, #0xf60
  4485c0:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  4485c4:	nop
  4485c8:	stp	x29, x30, [sp, #-32]!
  4485cc:	mov	x4, x3
  4485d0:	mov	x29, sp
  4485d4:	stp	x19, x20, [sp, #16]
  4485d8:	ldp	x19, x3, [x0]
  4485dc:	sub	x19, x1, x19
  4485e0:	cmp	x19, x3
  4485e4:	b.hi	448610 <_obstack_memory_used@@Base+0x3c0c>  // b.pmore
  4485e8:	mov	x20, x0
  4485ec:	mov	x3, x2
  4485f0:	mov	x1, x19
  4485f4:	mov	x2, #0x0                   	// #0
  4485f8:	bl	447c48 <_obstack_memory_used@@Base+0x3244>
  4485fc:	ldr	x0, [x20]
  448600:	add	x0, x0, x19
  448604:	ldp	x19, x20, [sp, #16]
  448608:	ldp	x29, x30, [sp], #32
  44860c:	ret
  448610:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  448614:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  448618:	mov	x2, x19
  44861c:	add	x1, x1, #0xf60
  448620:	add	x0, x0, #0xe90
  448624:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  448628:	stp	x29, x30, [sp, #-32]!
  44862c:	mov	x29, sp
  448630:	stp	x19, x20, [sp, #16]
  448634:	mov	x19, x0
  448638:	ldr	x5, [x0, #8]
  44863c:	ldr	x4, [x0], #16
  448640:	add	x20, x5, x2
  448644:	cmp	x4, x0
  448648:	b.eq	4486bc <_obstack_memory_used@@Base+0x3cb8>  // b.none
  44864c:	ldr	x0, [x19, #16]
  448650:	cmp	x20, x0
  448654:	b.hi	448688 <_obstack_memory_used@@Base+0x3c84>  // b.pmore
  448658:	cbz	x2, 448670 <_obstack_memory_used@@Base+0x3c6c>
  44865c:	cmp	x2, #0x1
  448660:	add	x0, x4, x5
  448664:	b.eq	4486c4 <_obstack_memory_used@@Base+0x3cc0>  // b.none
  448668:	bl	4026a0 <memcpy@plt>
  44866c:	ldr	x4, [x19]
  448670:	str	x20, [x19, #8]
  448674:	strb	wzr, [x4, x20]
  448678:	mov	x0, x19
  44867c:	ldp	x19, x20, [sp, #16]
  448680:	ldp	x29, x30, [sp], #32
  448684:	ret
  448688:	mov	x4, x2
  44868c:	mov	x3, x1
  448690:	mov	x0, x19
  448694:	mov	x1, x5
  448698:	mov	x2, #0x0                   	// #0
  44869c:	bl	446ec8 <_obstack_memory_used@@Base+0x24c4>
  4486a0:	ldr	x4, [x19]
  4486a4:	str	x20, [x19, #8]
  4486a8:	mov	x0, x19
  4486ac:	strb	wzr, [x4, x20]
  4486b0:	ldp	x19, x20, [sp, #16]
  4486b4:	ldp	x29, x30, [sp], #32
  4486b8:	ret
  4486bc:	mov	x0, #0xf                   	// #15
  4486c0:	b	448650 <_obstack_memory_used@@Base+0x3c4c>
  4486c4:	ldrb	w0, [x1]
  4486c8:	strb	w0, [x4, x5]
  4486cc:	mov	x0, x19
  4486d0:	str	x20, [x19, #8]
  4486d4:	ldr	x4, [x19]
  4486d8:	strb	wzr, [x4, x20]
  4486dc:	ldp	x19, x20, [sp, #16]
  4486e0:	ldp	x29, x30, [sp], #32
  4486e4:	ret
  4486e8:	ldp	x1, x2, [x1]
  4486ec:	b	448628 <_obstack_memory_used@@Base+0x3c24>
  4486f0:	ldp	x1, x2, [x1]
  4486f4:	b	448628 <_obstack_memory_used@@Base+0x3c24>
  4486f8:	ldr	x5, [x1, #8]
  4486fc:	ldr	x1, [x1]
  448700:	cmp	x2, x5
  448704:	b.hi	448720 <_obstack_memory_used@@Base+0x3d1c>  // b.pmore
  448708:	mov	x4, x2
  44870c:	sub	x2, x5, x2
  448710:	cmp	x2, x3
  448714:	add	x1, x1, x4
  448718:	csel	x2, x2, x3, ls  // ls = plast
  44871c:	b	448628 <_obstack_memory_used@@Base+0x3c24>
  448720:	stp	x29, x30, [sp, #-16]!
  448724:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  448728:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44872c:	mov	x29, sp
  448730:	mov	x3, x5
  448734:	add	x1, x1, #0xfb0
  448738:	add	x0, x0, #0xe90
  44873c:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  448740:	ldr	x4, [x0, #8]
  448744:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
  448748:	sub	x3, x3, x4
  44874c:	cmp	x2, x3
  448750:	b.hi	448758 <_obstack_memory_used@@Base+0x3d54>  // b.pmore
  448754:	b	448628 <_obstack_memory_used@@Base+0x3c24>
  448758:	stp	x29, x30, [sp, #-16]!
  44875c:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  448760:	add	x0, x0, #0xfb0
  448764:	mov	x29, sp
  448768:	bl	402fd8 <ferror@plt+0x208>
  44876c:	nop
  448770:	stp	x29, x30, [sp, #-32]!
  448774:	mov	x29, sp
  448778:	stp	x19, x20, [sp, #16]
  44877c:	mov	x19, x0
  448780:	mov	x20, x1
  448784:	mov	x0, x1
  448788:	bl	402700 <strlen@plt>
  44878c:	ldr	x3, [x19, #8]
  448790:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
  448794:	sub	x1, x1, x3
  448798:	cmp	x1, x0
  44879c:	b.cc	4487b8 <_obstack_memory_used@@Base+0x3db4>  // b.lo, b.ul, b.last
  4487a0:	mov	x2, x0
  4487a4:	mov	x1, x20
  4487a8:	mov	x0, x19
  4487ac:	ldp	x19, x20, [sp, #16]
  4487b0:	ldp	x29, x30, [sp], #32
  4487b4:	b	448628 <_obstack_memory_used@@Base+0x3c24>
  4487b8:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4487bc:	add	x0, x0, #0xfb0
  4487c0:	bl	402fd8 <ferror@plt+0x208>
  4487c4:	nop
  4487c8:	stp	x29, x30, [sp, #-32]!
  4487cc:	mov	x29, sp
  4487d0:	stp	x19, x20, [sp, #16]
  4487d4:	mov	x19, x0
  4487d8:	mov	x20, x1
  4487dc:	mov	x0, x1
  4487e0:	bl	402700 <strlen@plt>
  4487e4:	ldr	x3, [x19, #8]
  4487e8:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
  4487ec:	sub	x1, x1, x3
  4487f0:	cmp	x0, x1
  4487f4:	b.hi	448810 <_obstack_memory_used@@Base+0x3e0c>  // b.pmore
  4487f8:	mov	x2, x0
  4487fc:	mov	x1, x20
  448800:	mov	x0, x19
  448804:	ldp	x19, x20, [sp, #16]
  448808:	ldp	x29, x30, [sp], #32
  44880c:	b	448628 <_obstack_memory_used@@Base+0x3c24>
  448810:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  448814:	add	x0, x0, #0xfb0
  448818:	bl	402fd8 <ferror@plt+0x208>
  44881c:	nop
  448820:	ldr	x4, [x0, #8]
  448824:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
  448828:	sub	x3, x3, x4
  44882c:	cmp	x2, x3
  448830:	b.hi	448838 <_obstack_memory_used@@Base+0x3e34>  // b.pmore
  448834:	b	448628 <_obstack_memory_used@@Base+0x3c24>
  448838:	stp	x29, x30, [sp, #-16]!
  44883c:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  448840:	add	x0, x0, #0xfb0
  448844:	mov	x29, sp
  448848:	bl	402fd8 <ferror@plt+0x208>
  44884c:	nop
  448850:	ldr	x4, [x0, #8]
  448854:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
  448858:	sub	x3, x3, x4
  44885c:	cmp	x2, x3
  448860:	b.hi	448868 <_obstack_memory_used@@Base+0x3e64>  // b.pmore
  448864:	b	448628 <_obstack_memory_used@@Base+0x3c24>
  448868:	stp	x29, x30, [sp, #-16]!
  44886c:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  448870:	add	x0, x0, #0xfb0
  448874:	mov	x29, sp
  448878:	bl	402fd8 <ferror@plt+0x208>
  44887c:	nop
  448880:	stp	x29, x30, [sp, #-32]!
  448884:	mov	x6, x0
  448888:	mov	x5, x3
  44888c:	mov	x29, sp
  448890:	ldr	x4, [x0, #8]
  448894:	str	x19, [sp, #16]
  448898:	cmp	x3, x4
  44889c:	b.hi	4488f4 <_obstack_memory_used@@Base+0x3ef0>  // b.pmore
  4488a0:	sub	x4, x4, x3
  4488a4:	cmp	x4, x2
  4488a8:	csel	x19, x4, x2, ls  // ls = plast
  4488ac:	cbz	x19, 4488cc <_obstack_memory_used@@Base+0x3ec8>
  4488b0:	ldr	x2, [x6]
  4488b4:	mov	x0, x1
  4488b8:	cmp	x19, #0x1
  4488bc:	add	x1, x2, x3
  4488c0:	b.eq	4488dc <_obstack_memory_used@@Base+0x3ed8>  // b.none
  4488c4:	mov	x2, x19
  4488c8:	bl	4026a0 <memcpy@plt>
  4488cc:	mov	x0, x19
  4488d0:	ldr	x19, [sp, #16]
  4488d4:	ldp	x29, x30, [sp], #32
  4488d8:	ret
  4488dc:	ldrb	w1, [x2, x3]
  4488e0:	strb	w1, [x0]
  4488e4:	mov	x0, x19
  4488e8:	ldr	x19, [sp, #16]
  4488ec:	ldp	x29, x30, [sp], #32
  4488f0:	ret
  4488f4:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4488f8:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4488fc:	mov	x3, x4
  448900:	mov	x2, x5
  448904:	add	x1, x1, #0xfc8
  448908:	add	x0, x0, #0xe90
  44890c:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  448910:	cmp	x0, x1
  448914:	b.eq	448960 <_obstack_memory_used@@Base+0x3f5c>  // b.none
  448918:	mov	x2, x0
  44891c:	mov	x3, x1
  448920:	ldr	x4, [x2], #16
  448924:	ldr	x5, [x3], #16
  448928:	cmp	x2, x4
  44892c:	b.eq	448964 <_obstack_memory_used@@Base+0x3f60>  // b.none
  448930:	cmp	x3, x5
  448934:	ldr	x3, [x0, #16]
  448938:	b.eq	448990 <_obstack_memory_used@@Base+0x3f8c>  // b.none
  44893c:	str	x5, [x0]
  448940:	str	x4, [x1]
  448944:	ldr	x2, [x1, #16]
  448948:	str	x2, [x0, #16]
  44894c:	str	x3, [x1, #16]
  448950:	ldr	x2, [x1, #8]
  448954:	ldr	x3, [x0, #8]
  448958:	str	x2, [x0, #8]
  44895c:	str	x3, [x1, #8]
  448960:	ret
  448964:	cmp	x3, x5
  448968:	b.eq	4489a4 <_obstack_memory_used@@Base+0x3fa0>  // b.none
  44896c:	ldp	x6, x7, [x0, #16]
  448970:	ldr	x2, [x1, #16]
  448974:	stp	x6, x7, [x1, #16]
  448978:	str	x5, [x0]
  44897c:	str	x3, [x1]
  448980:	str	x2, [x0, #16]
  448984:	ldr	x3, [x0, #8]
  448988:	ldr	x2, [x1, #8]
  44898c:	b	448958 <_obstack_memory_used@@Base+0x3f54>
  448990:	ldp	x6, x7, [x1, #16]
  448994:	stp	x6, x7, [x0, #16]
  448998:	str	x4, [x1]
  44899c:	str	x2, [x0]
  4489a0:	b	44894c <_obstack_memory_used@@Base+0x3f48>
  4489a4:	ldr	x3, [x0, #8]
  4489a8:	ldr	x2, [x1, #8]
  4489ac:	cbz	x3, 4489d0 <_obstack_memory_used@@Base+0x3fcc>
  4489b0:	ldp	x4, x5, [x0, #16]
  4489b4:	cbz	x2, 4489f4 <_obstack_memory_used@@Base+0x3ff0>
  4489b8:	ldp	x2, x3, [x1, #16]
  4489bc:	stp	x4, x5, [x1, #16]
  4489c0:	stp	x2, x3, [x0, #16]
  4489c4:	ldr	x3, [x0, #8]
  4489c8:	ldr	x2, [x1, #8]
  4489cc:	b	448958 <_obstack_memory_used@@Base+0x3f54>
  4489d0:	mov	x3, #0x0                   	// #0
  4489d4:	cbz	x2, 448958 <_obstack_memory_used@@Base+0x3f54>
  4489d8:	ldp	x2, x3, [x1, #16]
  4489dc:	stp	x2, x3, [x0, #16]
  4489e0:	ldp	x2, x3, [x1]
  4489e4:	str	x3, [x0, #8]
  4489e8:	str	xzr, [x1, #8]
  4489ec:	strb	wzr, [x2]
  4489f0:	ret
  4489f4:	stp	x4, x5, [x1, #16]
  4489f8:	ldp	x2, x3, [x0]
  4489fc:	str	x3, [x1, #8]
  448a00:	str	xzr, [x0, #8]
  448a04:	strb	wzr, [x2]
  448a08:	ret
  448a0c:	nop
  448a10:	ldr	x0, [x0]
  448a14:	ret
  448a18:	ldr	x0, [x0]
  448a1c:	ret
  448a20:	mov	x0, x8
  448a24:	ret
  448a28:	stp	x29, x30, [sp, #-80]!
  448a2c:	mov	x29, sp
  448a30:	stp	x21, x22, [sp, #32]
  448a34:	ldr	x21, [x0, #8]
  448a38:	stp	x19, x20, [sp, #16]
  448a3c:	cmp	x21, x2
  448a40:	csinv	x19, x2, xzr, cs  // cs = hs, nlast
  448a44:	cbz	x3, 448ad4 <_obstack_memory_used@@Base+0x40d0>
  448a48:	mov	x19, #0xffffffffffffffff    	// #-1
  448a4c:	b.ls	448ad4 <_obstack_memory_used@@Base+0x40d0>  // b.plast
  448a50:	stp	x23, x24, [sp, #48]
  448a54:	sub	x4, x21, x2
  448a58:	cmp	x3, x4
  448a5c:	ldr	x23, [x0]
  448a60:	str	x25, [sp, #64]
  448a64:	mov	x25, x3
  448a68:	add	x0, x23, x2
  448a6c:	add	x21, x23, x21
  448a70:	b.hi	448ae8 <_obstack_memory_used@@Base+0x40e4>  // b.pmore
  448a74:	mov	x20, #0x1                   	// #1
  448a78:	sub	x20, x20, x3
  448a7c:	adds	x2, x20, x4
  448a80:	b.eq	448ae8 <_obstack_memory_used@@Base+0x40e4>  // b.none
  448a84:	ldrb	w24, [x1]
  448a88:	mov	x22, x1
  448a8c:	mov	w1, w24
  448a90:	bl	402c20 <memchr@plt>
  448a94:	mov	x2, x25
  448a98:	mov	x19, x0
  448a9c:	cbz	x0, 448ac8 <_obstack_memory_used@@Base+0x40c4>
  448aa0:	mov	x1, x22
  448aa4:	bl	402a90 <memcmp@plt>
  448aa8:	mov	w1, w0
  448aac:	add	x0, x19, #0x1
  448ab0:	sub	x2, x21, x0
  448ab4:	cbz	w1, 448b04 <_obstack_memory_used@@Base+0x4100>
  448ab8:	cmp	x25, x2
  448abc:	b.hi	448ac8 <_obstack_memory_used@@Base+0x40c4>  // b.pmore
  448ac0:	adds	x2, x20, x2
  448ac4:	b.ne	448a8c <_obstack_memory_used@@Base+0x4088>  // b.any
  448ac8:	ldp	x23, x24, [sp, #48]
  448acc:	mov	x19, #0xffffffffffffffff    	// #-1
  448ad0:	ldr	x25, [sp, #64]
  448ad4:	mov	x0, x19
  448ad8:	ldp	x19, x20, [sp, #16]
  448adc:	ldp	x21, x22, [sp, #32]
  448ae0:	ldp	x29, x30, [sp], #80
  448ae4:	ret
  448ae8:	mov	x0, x19
  448aec:	ldp	x19, x20, [sp, #16]
  448af0:	ldp	x21, x22, [sp, #32]
  448af4:	ldp	x23, x24, [sp, #48]
  448af8:	ldr	x25, [sp, #64]
  448afc:	ldp	x29, x30, [sp], #80
  448b00:	ret
  448b04:	sub	x19, x19, x23
  448b08:	ldp	x23, x24, [sp, #48]
  448b0c:	ldr	x25, [sp, #64]
  448b10:	b	448ad4 <_obstack_memory_used@@Base+0x40d0>
  448b14:	nop
  448b18:	ldp	x1, x3, [x1]
  448b1c:	b	448a28 <_obstack_memory_used@@Base+0x4024>
  448b20:	stp	x29, x30, [sp, #-48]!
  448b24:	mov	x29, sp
  448b28:	stp	x19, x20, [sp, #16]
  448b2c:	mov	x19, x1
  448b30:	mov	x20, x0
  448b34:	mov	x0, x1
  448b38:	str	x21, [sp, #32]
  448b3c:	mov	x21, x2
  448b40:	bl	402700 <strlen@plt>
  448b44:	mov	x2, x21
  448b48:	mov	x3, x0
  448b4c:	mov	x1, x19
  448b50:	mov	x0, x20
  448b54:	ldp	x19, x20, [sp, #16]
  448b58:	ldr	x21, [sp, #32]
  448b5c:	ldp	x29, x30, [sp], #48
  448b60:	b	448a28 <_obstack_memory_used@@Base+0x4024>
  448b64:	nop
  448b68:	mov	x3, x2
  448b6c:	ldr	x2, [x0, #8]
  448b70:	cmp	x3, x2
  448b74:	b.cs	448bb0 <_obstack_memory_used@@Base+0x41ac>  // b.hs, b.nlast
  448b78:	stp	x29, x30, [sp, #-32]!
  448b7c:	and	w1, w1, #0xff
  448b80:	sub	x2, x2, x3
  448b84:	mov	x29, sp
  448b88:	str	x19, [sp, #16]
  448b8c:	ldr	x19, [x0]
  448b90:	add	x0, x19, x3
  448b94:	bl	402c20 <memchr@plt>
  448b98:	sub	x19, x0, x19
  448b9c:	cmp	x0, #0x0
  448ba0:	csinv	x0, x19, xzr, ne  // ne = any
  448ba4:	ldr	x19, [sp, #16]
  448ba8:	ldp	x29, x30, [sp], #32
  448bac:	ret
  448bb0:	mov	x0, #0xffffffffffffffff    	// #-1
  448bb4:	ret
  448bb8:	stp	x29, x30, [sp, #-48]!
  448bbc:	mov	x29, sp
  448bc0:	ldr	x4, [x0, #8]
  448bc4:	stp	x19, x20, [sp, #16]
  448bc8:	mov	x19, #0xffffffffffffffff    	// #-1
  448bcc:	cmp	x3, x4
  448bd0:	b.hi	448c1c <_obstack_memory_used@@Base+0x4218>  // b.pmore
  448bd4:	sub	x4, x4, x3
  448bd8:	stp	x21, x22, [sp, #32]
  448bdc:	cmp	x4, x2
  448be0:	mov	x20, x3
  448be4:	mov	x21, x1
  448be8:	csel	x19, x4, x2, ls  // ls = plast
  448bec:	ldr	x22, [x0]
  448bf0:	cbz	x20, 448c18 <_obstack_memory_used@@Base+0x4214>
  448bf4:	mov	x2, x20
  448bf8:	mov	x1, x21
  448bfc:	add	x0, x22, x19
  448c00:	bl	402a90 <memcmp@plt>
  448c04:	cbz	w0, 448c18 <_obstack_memory_used@@Base+0x4214>
  448c08:	sub	x0, x19, #0x1
  448c0c:	cbz	x19, 448c2c <_obstack_memory_used@@Base+0x4228>
  448c10:	mov	x19, x0
  448c14:	cbnz	x20, 448bf4 <_obstack_memory_used@@Base+0x41f0>
  448c18:	ldp	x21, x22, [sp, #32]
  448c1c:	mov	x0, x19
  448c20:	ldp	x19, x20, [sp, #16]
  448c24:	ldp	x29, x30, [sp], #48
  448c28:	ret
  448c2c:	mov	x19, #0xffffffffffffffff    	// #-1
  448c30:	ldp	x21, x22, [sp, #32]
  448c34:	b	448c1c <_obstack_memory_used@@Base+0x4218>
  448c38:	ldp	x1, x3, [x1]
  448c3c:	b	448bb8 <_obstack_memory_used@@Base+0x41b4>
  448c40:	stp	x29, x30, [sp, #-48]!
  448c44:	mov	x29, sp
  448c48:	stp	x19, x20, [sp, #16]
  448c4c:	mov	x19, x1
  448c50:	mov	x20, x0
  448c54:	mov	x0, x1
  448c58:	str	x21, [sp, #32]
  448c5c:	mov	x21, x2
  448c60:	bl	402700 <strlen@plt>
  448c64:	mov	x2, x21
  448c68:	mov	x3, x0
  448c6c:	mov	x1, x19
  448c70:	mov	x0, x20
  448c74:	ldp	x19, x20, [sp, #16]
  448c78:	ldr	x21, [sp, #32]
  448c7c:	ldp	x29, x30, [sp], #48
  448c80:	b	448bb8 <_obstack_memory_used@@Base+0x41b4>
  448c84:	nop
  448c88:	ldr	x3, [x0, #8]
  448c8c:	mov	x4, x0
  448c90:	and	w1, w1, #0xff
  448c94:	mov	x0, #0xffffffffffffffff    	// #-1
  448c98:	cbz	x3, 448cc8 <_obstack_memory_used@@Base+0x42c4>
  448c9c:	sub	x3, x3, #0x1
  448ca0:	cmp	x3, x2
  448ca4:	csel	x0, x3, x2, ls  // ls = plast
  448ca8:	ldr	x3, [x4]
  448cac:	nop
  448cb0:	ldrb	w2, [x3, x0]
  448cb4:	cmp	w2, w1
  448cb8:	b.eq	448cc8 <_obstack_memory_used@@Base+0x42c4>  // b.none
  448cbc:	sub	x0, x0, #0x1
  448cc0:	cmn	x0, #0x1
  448cc4:	b.ne	448cb0 <_obstack_memory_used@@Base+0x42ac>  // b.any
  448cc8:	ret
  448ccc:	nop
  448cd0:	cbz	x3, 448d54 <_obstack_memory_used@@Base+0x4350>
  448cd4:	stp	x29, x30, [sp, #-64]!
  448cd8:	mov	x29, sp
  448cdc:	stp	x19, x20, [sp, #16]
  448ce0:	mov	x19, x2
  448ce4:	mov	x20, x3
  448ce8:	stp	x21, x22, [sp, #32]
  448cec:	mov	x21, x0
  448cf0:	mov	x22, x1
  448cf4:	str	x23, [sp, #48]
  448cf8:	ldr	x23, [x0, #8]
  448cfc:	b	448d1c <_obstack_memory_used@@Base+0x4318>
  448d00:	ldr	x4, [x21]
  448d04:	mov	x2, x20
  448d08:	mov	x0, x22
  448d0c:	ldrb	w1, [x4, x19]
  448d10:	bl	402c20 <memchr@plt>
  448d14:	cbnz	x0, 448d3c <_obstack_memory_used@@Base+0x4338>
  448d18:	add	x19, x19, #0x1
  448d1c:	cmp	x23, x19
  448d20:	b.hi	448d00 <_obstack_memory_used@@Base+0x42fc>  // b.pmore
  448d24:	mov	x0, #0xffffffffffffffff    	// #-1
  448d28:	ldp	x19, x20, [sp, #16]
  448d2c:	ldp	x21, x22, [sp, #32]
  448d30:	ldr	x23, [sp, #48]
  448d34:	ldp	x29, x30, [sp], #64
  448d38:	ret
  448d3c:	mov	x0, x19
  448d40:	ldp	x19, x20, [sp, #16]
  448d44:	ldp	x21, x22, [sp, #32]
  448d48:	ldr	x23, [sp, #48]
  448d4c:	ldp	x29, x30, [sp], #64
  448d50:	ret
  448d54:	mov	x0, #0xffffffffffffffff    	// #-1
  448d58:	ret
  448d5c:	nop
  448d60:	ldp	x1, x3, [x1]
  448d64:	b	448cd0 <_obstack_memory_used@@Base+0x42cc>
  448d68:	stp	x29, x30, [sp, #-48]!
  448d6c:	mov	x29, sp
  448d70:	stp	x19, x20, [sp, #16]
  448d74:	mov	x19, x1
  448d78:	mov	x20, x0
  448d7c:	mov	x0, x1
  448d80:	str	x21, [sp, #32]
  448d84:	mov	x21, x2
  448d88:	bl	402700 <strlen@plt>
  448d8c:	mov	x2, x21
  448d90:	mov	x3, x0
  448d94:	mov	x1, x19
  448d98:	mov	x0, x20
  448d9c:	ldp	x19, x20, [sp, #16]
  448da0:	ldr	x21, [sp, #32]
  448da4:	ldp	x29, x30, [sp], #48
  448da8:	b	448cd0 <_obstack_memory_used@@Base+0x42cc>
  448dac:	nop
  448db0:	b	448b68 <_obstack_memory_used@@Base+0x4164>
  448db4:	nop
  448db8:	stp	x29, x30, [sp, #-48]!
  448dbc:	mov	x29, sp
  448dc0:	ldr	x4, [x0, #8]
  448dc4:	stp	x19, x20, [sp, #16]
  448dc8:	mov	x19, #0xffffffffffffffff    	// #-1
  448dcc:	cmp	x4, #0x0
  448dd0:	ccmp	x3, #0x0, #0x4, ne  // ne = any
  448dd4:	b.eq	448e1c <_obstack_memory_used@@Base+0x4418>  // b.none
  448dd8:	sub	x4, x4, #0x1
  448ddc:	mov	x20, x3
  448de0:	cmp	x4, x2
  448de4:	stp	x21, x22, [sp, #32]
  448de8:	csel	x19, x4, x2, ls  // ls = plast
  448dec:	mov	x21, x1
  448df0:	ldr	x22, [x0]
  448df4:	b	448e04 <_obstack_memory_used@@Base+0x4400>
  448df8:	sub	x19, x19, #0x1
  448dfc:	cmn	x19, #0x1
  448e00:	b.eq	448e18 <_obstack_memory_used@@Base+0x4414>  // b.none
  448e04:	ldrb	w1, [x22, x19]
  448e08:	mov	x2, x20
  448e0c:	mov	x0, x21
  448e10:	bl	402c20 <memchr@plt>
  448e14:	cbz	x0, 448df8 <_obstack_memory_used@@Base+0x43f4>
  448e18:	ldp	x21, x22, [sp, #32]
  448e1c:	mov	x0, x19
  448e20:	ldp	x19, x20, [sp, #16]
  448e24:	ldp	x29, x30, [sp], #48
  448e28:	ret
  448e2c:	nop
  448e30:	ldp	x1, x3, [x1]
  448e34:	b	448db8 <_obstack_memory_used@@Base+0x43b4>
  448e38:	stp	x29, x30, [sp, #-48]!
  448e3c:	mov	x29, sp
  448e40:	stp	x19, x20, [sp, #16]
  448e44:	mov	x19, x1
  448e48:	mov	x20, x0
  448e4c:	mov	x0, x1
  448e50:	str	x21, [sp, #32]
  448e54:	mov	x21, x2
  448e58:	bl	402700 <strlen@plt>
  448e5c:	mov	x2, x21
  448e60:	mov	x3, x0
  448e64:	mov	x1, x19
  448e68:	mov	x0, x20
  448e6c:	ldp	x19, x20, [sp, #16]
  448e70:	ldr	x21, [sp, #32]
  448e74:	ldp	x29, x30, [sp], #48
  448e78:	b	448db8 <_obstack_memory_used@@Base+0x43b4>
  448e7c:	nop
  448e80:	b	448c88 <_obstack_memory_used@@Base+0x4284>
  448e84:	nop
  448e88:	stp	x29, x30, [sp, #-64]!
  448e8c:	mov	x29, sp
  448e90:	stp	x21, x22, [sp, #32]
  448e94:	ldr	x22, [x0, #8]
  448e98:	cmp	x2, x22
  448e9c:	b.cs	448f10 <_obstack_memory_used@@Base+0x450c>  // b.hs, b.nlast
  448ea0:	stp	x19, x20, [sp, #16]
  448ea4:	mov	x21, x1
  448ea8:	mov	x19, x2
  448eac:	str	x23, [sp, #48]
  448eb0:	mov	x20, x3
  448eb4:	ldr	x23, [x0]
  448eb8:	cbnz	x3, 448ecc <_obstack_memory_used@@Base+0x44c8>
  448ebc:	b	448ee0 <_obstack_memory_used@@Base+0x44dc>
  448ec0:	add	x19, x19, #0x1
  448ec4:	cmp	x22, x19
  448ec8:	b.eq	448ef8 <_obstack_memory_used@@Base+0x44f4>  // b.none
  448ecc:	ldrb	w1, [x23, x19]
  448ed0:	mov	x2, x20
  448ed4:	mov	x0, x21
  448ed8:	bl	402c20 <memchr@plt>
  448edc:	cbnz	x0, 448ec0 <_obstack_memory_used@@Base+0x44bc>
  448ee0:	mov	x0, x19
  448ee4:	ldp	x19, x20, [sp, #16]
  448ee8:	ldr	x23, [sp, #48]
  448eec:	ldp	x21, x22, [sp, #32]
  448ef0:	ldp	x29, x30, [sp], #64
  448ef4:	ret
  448ef8:	mov	x0, #0xffffffffffffffff    	// #-1
  448efc:	ldp	x19, x20, [sp, #16]
  448f00:	ldp	x21, x22, [sp, #32]
  448f04:	ldr	x23, [sp, #48]
  448f08:	ldp	x29, x30, [sp], #64
  448f0c:	ret
  448f10:	mov	x0, #0xffffffffffffffff    	// #-1
  448f14:	b	448eec <_obstack_memory_used@@Base+0x44e8>
  448f18:	ldp	x1, x3, [x1]
  448f1c:	b	448e88 <_obstack_memory_used@@Base+0x4484>
  448f20:	stp	x29, x30, [sp, #-48]!
  448f24:	mov	x29, sp
  448f28:	stp	x19, x20, [sp, #16]
  448f2c:	mov	x19, x1
  448f30:	mov	x20, x0
  448f34:	mov	x0, x1
  448f38:	str	x21, [sp, #32]
  448f3c:	mov	x21, x2
  448f40:	bl	402700 <strlen@plt>
  448f44:	mov	x2, x21
  448f48:	mov	x3, x0
  448f4c:	mov	x1, x19
  448f50:	mov	x0, x20
  448f54:	ldp	x19, x20, [sp, #16]
  448f58:	ldr	x21, [sp, #32]
  448f5c:	ldp	x29, x30, [sp], #48
  448f60:	b	448e88 <_obstack_memory_used@@Base+0x4484>
  448f64:	nop
  448f68:	mov	x4, x0
  448f6c:	and	w1, w1, #0xff
  448f70:	mov	x0, x2
  448f74:	ldr	x3, [x4, #8]
  448f78:	cmp	x2, x3
  448f7c:	b.cs	448fa4 <_obstack_memory_used@@Base+0x45a0>  // b.hs, b.nlast
  448f80:	ldr	x4, [x4]
  448f84:	b	448f94 <_obstack_memory_used@@Base+0x4590>
  448f88:	add	x0, x0, #0x1
  448f8c:	cmp	x0, x3
  448f90:	b.eq	448fa4 <_obstack_memory_used@@Base+0x45a0>  // b.none
  448f94:	ldrb	w2, [x4, x0]
  448f98:	cmp	w2, w1
  448f9c:	b.eq	448f88 <_obstack_memory_used@@Base+0x4584>  // b.none
  448fa0:	ret
  448fa4:	mov	x0, #0xffffffffffffffff    	// #-1
  448fa8:	ret
  448fac:	nop
  448fb0:	stp	x29, x30, [sp, #-48]!
  448fb4:	mov	x29, sp
  448fb8:	ldr	x4, [x0, #8]
  448fbc:	stp	x19, x20, [sp, #16]
  448fc0:	mov	x19, #0xffffffffffffffff    	// #-1
  448fc4:	cbz	x4, 44900c <_obstack_memory_used@@Base+0x4608>
  448fc8:	sub	x4, x4, #0x1
  448fcc:	stp	x21, x22, [sp, #32]
  448fd0:	cmp	x4, x2
  448fd4:	ldr	x22, [x0]
  448fd8:	mov	x21, x1
  448fdc:	mov	x20, x3
  448fe0:	csel	x19, x4, x2, ls  // ls = plast
  448fe4:	cbz	x20, 449008 <_obstack_memory_used@@Base+0x4604>
  448fe8:	ldrb	w1, [x22, x19]
  448fec:	mov	x2, x20
  448ff0:	mov	x0, x21
  448ff4:	bl	402c20 <memchr@plt>
  448ff8:	cbz	x0, 449008 <_obstack_memory_used@@Base+0x4604>
  448ffc:	sub	x19, x19, #0x1
  449000:	cmn	x19, #0x1
  449004:	b.ne	448fe4 <_obstack_memory_used@@Base+0x45e0>  // b.any
  449008:	ldp	x21, x22, [sp, #32]
  44900c:	mov	x0, x19
  449010:	ldp	x19, x20, [sp, #16]
  449014:	ldp	x29, x30, [sp], #48
  449018:	ret
  44901c:	nop
  449020:	ldp	x1, x3, [x1]
  449024:	b	448fb0 <_obstack_memory_used@@Base+0x45ac>
  449028:	stp	x29, x30, [sp, #-48]!
  44902c:	mov	x29, sp
  449030:	stp	x19, x20, [sp, #16]
  449034:	mov	x19, x1
  449038:	mov	x20, x0
  44903c:	mov	x0, x1
  449040:	str	x21, [sp, #32]
  449044:	mov	x21, x2
  449048:	bl	402700 <strlen@plt>
  44904c:	mov	x2, x21
  449050:	mov	x3, x0
  449054:	mov	x1, x19
  449058:	mov	x0, x20
  44905c:	ldp	x19, x20, [sp, #16]
  449060:	ldr	x21, [sp, #32]
  449064:	ldp	x29, x30, [sp], #48
  449068:	b	448fb0 <_obstack_memory_used@@Base+0x45ac>
  44906c:	nop
  449070:	ldr	x3, [x0, #8]
  449074:	and	w1, w1, #0xff
  449078:	cbz	x3, 4490ac <_obstack_memory_used@@Base+0x46a8>
  44907c:	sub	x3, x3, #0x1
  449080:	cmp	x3, x2
  449084:	ldr	x4, [x0]
  449088:	csel	x0, x3, x2, ls  // ls = plast
  44908c:	b	44909c <_obstack_memory_used@@Base+0x4698>
  449090:	sub	x0, x0, #0x1
  449094:	cmn	x0, #0x1
  449098:	b.eq	4490a8 <_obstack_memory_used@@Base+0x46a4>  // b.none
  44909c:	ldrb	w2, [x4, x0]
  4490a0:	cmp	w2, w1
  4490a4:	b.eq	449090 <_obstack_memory_used@@Base+0x468c>  // b.none
  4490a8:	ret
  4490ac:	mov	x0, #0xffffffffffffffff    	// #-1
  4490b0:	ret
  4490b4:	nop
  4490b8:	stp	x29, x30, [sp, #-32]!
  4490bc:	mov	x29, sp
  4490c0:	stp	x19, x20, [sp, #16]
  4490c4:	ldr	x19, [x0, #8]
  4490c8:	ldr	x20, [x1, #8]
  4490cc:	cmp	x20, x19
  4490d0:	csel	x2, x20, x19, ls  // ls = plast
  4490d4:	cbz	x2, 4490e8 <_obstack_memory_used@@Base+0x46e4>
  4490d8:	ldr	x0, [x0]
  4490dc:	ldr	x1, [x1]
  4490e0:	bl	402a90 <memcmp@plt>
  4490e4:	cbnz	w0, 449104 <_obstack_memory_used@@Base+0x4700>
  4490e8:	sub	x19, x19, x20
  4490ec:	mov	x0, #0x7fffffff            	// #2147483647
  4490f0:	cmp	x19, x0
  4490f4:	b.gt	449104 <_obstack_memory_used@@Base+0x4700>
  4490f8:	mov	x0, #0xffffffff80000000    	// #-2147483648
  4490fc:	cmp	x19, x0
  449100:	csel	w0, w0, w19, lt  // lt = tstop
  449104:	ldp	x19, x20, [sp, #16]
  449108:	ldp	x29, x30, [sp], #32
  44910c:	ret
  449110:	stp	x29, x30, [sp, #-32]!
  449114:	mov	x29, sp
  449118:	ldr	x4, [x0, #8]
  44911c:	stp	x19, x20, [sp, #16]
  449120:	cmp	x1, x4
  449124:	b.hi	449180 <_obstack_memory_used@@Base+0x477c>  // b.pmore
  449128:	sub	x4, x4, x1
  44912c:	ldr	x20, [x3, #8]
  449130:	cmp	x4, x2
  449134:	csel	x19, x4, x2, ls  // ls = plast
  449138:	cmp	x20, x19
  44913c:	csel	x2, x20, x19, ls  // ls = plast
  449140:	cbz	x2, 449158 <_obstack_memory_used@@Base+0x4754>
  449144:	ldr	x0, [x0]
  449148:	add	x0, x0, x1
  44914c:	ldr	x1, [x3]
  449150:	bl	402a90 <memcmp@plt>
  449154:	cbnz	w0, 449174 <_obstack_memory_used@@Base+0x4770>
  449158:	sub	x19, x19, x20
  44915c:	mov	x0, #0x7fffffff            	// #2147483647
  449160:	cmp	x19, x0
  449164:	b.gt	449174 <_obstack_memory_used@@Base+0x4770>
  449168:	mov	x0, #0xffffffff80000000    	// #-2147483648
  44916c:	cmp	x19, x0
  449170:	csel	w0, w0, w19, lt  // lt = tstop
  449174:	ldp	x19, x20, [sp, #16]
  449178:	ldp	x29, x30, [sp], #32
  44917c:	ret
  449180:	mov	x2, x1
  449184:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  449188:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44918c:	mov	x3, x4
  449190:	add	x1, x1, #0xfe0
  449194:	add	x0, x0, #0xe90
  449198:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  44919c:	nop
  4491a0:	stp	x29, x30, [sp, #-32]!
  4491a4:	mov	x29, sp
  4491a8:	ldr	x6, [x0, #8]
  4491ac:	stp	x19, x20, [sp, #16]
  4491b0:	cmp	x1, x6
  4491b4:	b.hi	449228 <_obstack_memory_used@@Base+0x4824>  // b.pmore
  4491b8:	ldr	x7, [x3, #8]
  4491bc:	cmp	x4, x7
  4491c0:	b.hi	449244 <_obstack_memory_used@@Base+0x4840>  // b.pmore
  4491c4:	sub	x6, x6, x1
  4491c8:	sub	x7, x7, x4
  4491cc:	cmp	x6, x2
  4491d0:	csel	x19, x6, x2, ls  // ls = plast
  4491d4:	cmp	x7, x5
  4491d8:	csel	x20, x7, x5, ls  // ls = plast
  4491dc:	cmp	x20, x19
  4491e0:	csel	x2, x20, x19, ls  // ls = plast
  4491e4:	cbz	x2, 449200 <_obstack_memory_used@@Base+0x47fc>
  4491e8:	ldr	x0, [x0]
  4491ec:	add	x0, x0, x1
  4491f0:	ldr	x1, [x3]
  4491f4:	add	x1, x1, x4
  4491f8:	bl	402a90 <memcmp@plt>
  4491fc:	cbnz	w0, 44921c <_obstack_memory_used@@Base+0x4818>
  449200:	sub	x19, x19, x20
  449204:	mov	x0, #0x7fffffff            	// #2147483647
  449208:	cmp	x19, x0
  44920c:	b.gt	44921c <_obstack_memory_used@@Base+0x4818>
  449210:	mov	x0, #0xffffffff80000000    	// #-2147483648
  449214:	cmp	x19, x0
  449218:	csel	w0, w0, w19, lt  // lt = tstop
  44921c:	ldp	x19, x20, [sp, #16]
  449220:	ldp	x29, x30, [sp], #32
  449224:	ret
  449228:	mov	x3, x6
  44922c:	mov	x2, x1
  449230:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  449234:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  449238:	add	x1, x1, #0xfe0
  44923c:	add	x0, x0, #0xe90
  449240:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  449244:	mov	x3, x7
  449248:	mov	x2, x4
  44924c:	b	449230 <_obstack_memory_used@@Base+0x482c>
  449250:	stp	x29, x30, [sp, #-48]!
  449254:	mov	x29, sp
  449258:	stp	x21, x22, [sp, #32]
  44925c:	mov	x22, x0
  449260:	mov	x21, x1
  449264:	mov	x0, x1
  449268:	stp	x19, x20, [sp, #16]
  44926c:	bl	402700 <strlen@plt>
  449270:	ldr	x19, [x22, #8]
  449274:	mov	x20, x0
  449278:	cmp	x0, x19
  44927c:	csel	x2, x0, x19, ls  // ls = plast
  449280:	cbz	x2, 449294 <_obstack_memory_used@@Base+0x4890>
  449284:	ldr	x0, [x22]
  449288:	mov	x1, x21
  44928c:	bl	402a90 <memcmp@plt>
  449290:	cbnz	w0, 4492b0 <_obstack_memory_used@@Base+0x48ac>
  449294:	sub	x19, x19, x20
  449298:	mov	x0, #0x7fffffff            	// #2147483647
  44929c:	cmp	x19, x0
  4492a0:	b.gt	4492b0 <_obstack_memory_used@@Base+0x48ac>
  4492a4:	mov	x0, #0xffffffff80000000    	// #-2147483648
  4492a8:	cmp	x19, x0
  4492ac:	csel	w0, w0, w19, lt  // lt = tstop
  4492b0:	ldp	x19, x20, [sp, #16]
  4492b4:	ldp	x21, x22, [sp, #32]
  4492b8:	ldp	x29, x30, [sp], #48
  4492bc:	ret
  4492c0:	stp	x29, x30, [sp, #-64]!
  4492c4:	mov	x29, sp
  4492c8:	ldr	x4, [x0, #8]
  4492cc:	stp	x19, x20, [sp, #16]
  4492d0:	stp	x21, x22, [sp, #32]
  4492d4:	cmp	x1, x4
  4492d8:	mov	x21, x1
  4492dc:	str	x23, [sp, #48]
  4492e0:	b.hi	449354 <_obstack_memory_used@@Base+0x4950>  // b.pmore
  4492e4:	sub	x4, x4, x1
  4492e8:	mov	x22, x0
  4492ec:	cmp	x4, x2
  4492f0:	mov	x23, x3
  4492f4:	csel	x19, x4, x2, ls  // ls = plast
  4492f8:	mov	x0, x3
  4492fc:	bl	402700 <strlen@plt>
  449300:	cmp	x0, x19
  449304:	mov	x20, x0
  449308:	csel	x2, x0, x19, ls  // ls = plast
  44930c:	cbz	x2, 449324 <_obstack_memory_used@@Base+0x4920>
  449310:	ldr	x0, [x22]
  449314:	mov	x1, x23
  449318:	add	x0, x0, x21
  44931c:	bl	402a90 <memcmp@plt>
  449320:	cbnz	w0, 449340 <_obstack_memory_used@@Base+0x493c>
  449324:	sub	x19, x19, x20
  449328:	mov	x0, #0x7fffffff            	// #2147483647
  44932c:	cmp	x19, x0
  449330:	b.gt	449340 <_obstack_memory_used@@Base+0x493c>
  449334:	mov	x0, #0xffffffff80000000    	// #-2147483648
  449338:	cmp	x19, x0
  44933c:	csel	w0, w0, w19, lt  // lt = tstop
  449340:	ldp	x19, x20, [sp, #16]
  449344:	ldp	x21, x22, [sp, #32]
  449348:	ldr	x23, [sp, #48]
  44934c:	ldp	x29, x30, [sp], #64
  449350:	ret
  449354:	mov	x2, x1
  449358:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44935c:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  449360:	mov	x3, x4
  449364:	add	x1, x1, #0xfe0
  449368:	add	x0, x0, #0xe90
  44936c:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  449370:	stp	x29, x30, [sp, #-32]!
  449374:	mov	x6, x1
  449378:	mov	x29, sp
  44937c:	ldr	x5, [x0, #8]
  449380:	stp	x19, x20, [sp, #16]
  449384:	cmp	x1, x5
  449388:	b.hi	4493e4 <_obstack_memory_used@@Base+0x49e0>  // b.pmore
  44938c:	sub	x5, x5, x1
  449390:	mov	x20, x4
  449394:	cmp	x5, x2
  449398:	csel	x19, x5, x2, ls  // ls = plast
  44939c:	cmp	x19, x4
  4493a0:	csel	x2, x19, x4, ls  // ls = plast
  4493a4:	cbz	x2, 4493bc <_obstack_memory_used@@Base+0x49b8>
  4493a8:	ldr	x0, [x0]
  4493ac:	mov	x1, x3
  4493b0:	add	x0, x0, x6
  4493b4:	bl	402a90 <memcmp@plt>
  4493b8:	cbnz	w0, 4493d8 <_obstack_memory_used@@Base+0x49d4>
  4493bc:	sub	x19, x19, x20
  4493c0:	mov	x0, #0x7fffffff            	// #2147483647
  4493c4:	cmp	x19, x0
  4493c8:	b.gt	4493d8 <_obstack_memory_used@@Base+0x49d4>
  4493cc:	mov	x0, #0xffffffff80000000    	// #-2147483648
  4493d0:	cmp	x19, x0
  4493d4:	csel	w0, w0, w19, lt  // lt = tstop
  4493d8:	ldp	x19, x20, [sp, #16]
  4493dc:	ldp	x29, x30, [sp], #32
  4493e0:	ret
  4493e4:	mov	x2, x1
  4493e8:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4493ec:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4493f0:	mov	x3, x5
  4493f4:	add	x1, x1, #0xfe0
  4493f8:	add	x0, x0, #0xe90
  4493fc:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  449400:	str	x1, [x0]
  449404:	ret
  449408:	str	x1, [x0]
  44940c:	ret
  449410:	stp	x29, x30, [sp, #-64]!
  449414:	mov	x29, sp
  449418:	stp	x19, x20, [sp, #16]
  44941c:	mov	x19, x8
  449420:	stp	x21, x22, [sp, #32]
  449424:	mov	x21, x1
  449428:	mov	x22, x0
  44942c:	str	x23, [sp, #48]
  449430:	add	x23, x8, #0x10
  449434:	bl	402700 <strlen@plt>
  449438:	stp	x23, xzr, [x19]
  44943c:	mov	x20, x0
  449440:	strb	wzr, [x19, #16]
  449444:	mov	x0, x19
  449448:	ldr	x1, [x21, #8]
  44944c:	add	x1, x20, x1
  449450:	bl	447388 <_obstack_memory_used@@Base+0x2984>
  449454:	ldr	x0, [x19, #8]
  449458:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
  44945c:	sub	x1, x1, x0
  449460:	cmp	x20, x1
  449464:	b.hi	44949c <_obstack_memory_used@@Base+0x4a98>  // b.pmore
  449468:	mov	x2, x20
  44946c:	mov	x1, x22
  449470:	mov	x0, x19
  449474:	bl	448628 <_obstack_memory_used@@Base+0x3c24>
  449478:	ldp	x1, x2, [x21]
  44947c:	mov	x0, x19
  449480:	bl	448628 <_obstack_memory_used@@Base+0x3c24>
  449484:	mov	x0, x19
  449488:	ldp	x19, x20, [sp, #16]
  44948c:	ldp	x21, x22, [sp, #32]
  449490:	ldr	x23, [sp, #48]
  449494:	ldp	x29, x30, [sp], #64
  449498:	ret
  44949c:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4494a0:	add	x0, x0, #0xfb0
  4494a4:	bl	402fd8 <ferror@plt+0x208>
  4494a8:	ldr	x1, [x19]
  4494ac:	mov	x19, x0
  4494b0:	cmp	x23, x1
  4494b4:	b.eq	4494c0 <_obstack_memory_used@@Base+0x4abc>  // b.none
  4494b8:	mov	x0, x1
  4494bc:	bl	445770 <_obstack_memory_used@@Base+0xd6c>
  4494c0:	mov	x0, x19
  4494c4:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  4494c8:	stp	x29, x30, [sp, #-48]!
  4494cc:	mov	x29, sp
  4494d0:	stp	x19, x20, [sp, #16]
  4494d4:	mov	x20, x1
  4494d8:	mov	x19, x8
  4494dc:	stp	x21, x22, [sp, #32]
  4494e0:	add	x21, x8, #0x10
  4494e4:	and	w22, w0, #0xff
  4494e8:	stp	x21, xzr, [x8]
  4494ec:	mov	x0, x8
  4494f0:	strb	wzr, [x8, #16]
  4494f4:	ldr	x1, [x1, #8]
  4494f8:	add	x1, x1, #0x1
  4494fc:	bl	447388 <_obstack_memory_used@@Base+0x2984>
  449500:	ldr	x1, [x19, #8]
  449504:	mov	w4, w22
  449508:	mov	x0, x19
  44950c:	mov	x3, #0x1                   	// #1
  449510:	mov	x2, #0x0                   	// #0
  449514:	bl	447940 <_obstack_memory_used@@Base+0x2f3c>
  449518:	ldp	x1, x2, [x20]
  44951c:	mov	x0, x19
  449520:	bl	448628 <_obstack_memory_used@@Base+0x3c24>
  449524:	mov	x0, x19
  449528:	ldp	x19, x20, [sp, #16]
  44952c:	ldp	x21, x22, [sp, #32]
  449530:	ldp	x29, x30, [sp], #48
  449534:	ret
  449538:	ldr	x1, [x19]
  44953c:	mov	x19, x0
  449540:	cmp	x21, x1
  449544:	b.eq	449550 <_obstack_memory_used@@Base+0x4b4c>  // b.none
  449548:	mov	x0, x1
  44954c:	bl	445770 <_obstack_memory_used@@Base+0xd6c>
  449550:	mov	x0, x19
  449554:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  449558:	stp	x29, x30, [sp, #-64]!
  44955c:	mov	x29, sp
  449560:	stp	x19, x20, [sp, #16]
  449564:	sub	x19, x2, x1
  449568:	cmp	x19, #0xf
  44956c:	str	x21, [sp, #32]
  449570:	mov	x20, x0
  449574:	str	x19, [sp, #56]
  449578:	mov	x21, x1
  44957c:	b.hi	4495d0 <_obstack_memory_used@@Base+0x4bcc>  // b.pmore
  449580:	cmp	x19, #0x1
  449584:	ldr	x0, [x0]
  449588:	b.ne	4495b4 <_obstack_memory_used@@Base+0x4bb0>  // b.any
  44958c:	ldrb	w1, [x1]
  449590:	strb	w1, [x0]
  449594:	ldr	x0, [x20]
  449598:	ldr	x19, [sp, #56]
  44959c:	str	x19, [x20, #8]
  4495a0:	strb	wzr, [x0, x19]
  4495a4:	ldp	x19, x20, [sp, #16]
  4495a8:	ldr	x21, [sp, #32]
  4495ac:	ldp	x29, x30, [sp], #64
  4495b0:	ret
  4495b4:	cbnz	x19, 4495e8 <_obstack_memory_used@@Base+0x4be4>
  4495b8:	str	x19, [x20, #8]
  4495bc:	strb	wzr, [x0, x19]
  4495c0:	ldp	x19, x20, [sp, #16]
  4495c4:	ldr	x21, [sp, #32]
  4495c8:	ldp	x29, x30, [sp], #64
  4495cc:	ret
  4495d0:	add	x1, sp, #0x38
  4495d4:	mov	x2, #0x0                   	// #0
  4495d8:	bl	446ac0 <_obstack_memory_used@@Base+0x20bc>
  4495dc:	str	x0, [x20]
  4495e0:	ldr	x1, [sp, #56]
  4495e4:	str	x1, [x20, #16]
  4495e8:	mov	x2, x19
  4495ec:	mov	x1, x21
  4495f0:	bl	4026a0 <memcpy@plt>
  4495f4:	ldr	x0, [x20]
  4495f8:	ldr	x19, [sp, #56]
  4495fc:	str	x19, [x20, #8]
  449600:	strb	wzr, [x0, x19]
  449604:	ldp	x19, x20, [sp, #16]
  449608:	ldr	x21, [sp, #32]
  44960c:	ldp	x29, x30, [sp], #64
  449610:	ret
  449614:	nop
  449618:	add	x5, x0, #0x10
  44961c:	str	x5, [x0]
  449620:	mov	w3, #0x0                   	// #0
  449624:	b	449558 <_obstack_memory_used@@Base+0x4b54>
  449628:	stp	x29, x30, [sp, #-64]!
  44962c:	mov	x29, sp
  449630:	stp	x19, x20, [sp, #16]
  449634:	sub	x19, x2, x1
  449638:	cmp	x19, #0xf
  44963c:	str	x21, [sp, #32]
  449640:	mov	x20, x0
  449644:	str	x19, [sp, #56]
  449648:	mov	x21, x1
  44964c:	b.hi	4496a0 <_obstack_memory_used@@Base+0x4c9c>  // b.pmore
  449650:	cmp	x19, #0x1
  449654:	ldr	x0, [x0]
  449658:	b.ne	449684 <_obstack_memory_used@@Base+0x4c80>  // b.any
  44965c:	ldrb	w1, [x1]
  449660:	strb	w1, [x0]
  449664:	ldr	x0, [x20]
  449668:	ldr	x19, [sp, #56]
  44966c:	str	x19, [x20, #8]
  449670:	strb	wzr, [x0, x19]
  449674:	ldp	x19, x20, [sp, #16]
  449678:	ldr	x21, [sp, #32]
  44967c:	ldp	x29, x30, [sp], #64
  449680:	ret
  449684:	cbnz	x19, 4496b8 <_obstack_memory_used@@Base+0x4cb4>
  449688:	str	x19, [x20, #8]
  44968c:	strb	wzr, [x0, x19]
  449690:	ldp	x19, x20, [sp, #16]
  449694:	ldr	x21, [sp, #32]
  449698:	ldp	x29, x30, [sp], #64
  44969c:	ret
  4496a0:	add	x1, sp, #0x38
  4496a4:	mov	x2, #0x0                   	// #0
  4496a8:	bl	446ac0 <_obstack_memory_used@@Base+0x20bc>
  4496ac:	str	x0, [x20]
  4496b0:	ldr	x1, [sp, #56]
  4496b4:	str	x1, [x20, #16]
  4496b8:	mov	x2, x19
  4496bc:	mov	x1, x21
  4496c0:	bl	4026a0 <memcpy@plt>
  4496c4:	ldr	x0, [x20]
  4496c8:	ldr	x19, [sp, #56]
  4496cc:	str	x19, [x20, #8]
  4496d0:	strb	wzr, [x0, x19]
  4496d4:	ldp	x19, x20, [sp, #16]
  4496d8:	ldr	x21, [sp, #32]
  4496dc:	ldp	x29, x30, [sp], #64
  4496e0:	ret
  4496e4:	nop
  4496e8:	add	x4, x0, #0x10
  4496ec:	str	x4, [x0]
  4496f0:	ldr	x2, [x1, #8]
  4496f4:	mov	w3, #0x0                   	// #0
  4496f8:	ldr	x1, [x1]
  4496fc:	add	x2, x1, x2
  449700:	b	449628 <_obstack_memory_used@@Base+0x4c24>
  449704:	nop
  449708:	stp	x29, x30, [sp, #-64]!
  44970c:	cmp	x2, #0x0
  449710:	ccmp	x1, #0x0, #0x0, ne  // ne = any
  449714:	mov	x29, sp
  449718:	stp	x19, x20, [sp, #16]
  44971c:	str	x21, [sp, #32]
  449720:	b.eq	4497d0 <_obstack_memory_used@@Base+0x4dcc>  // b.none
  449724:	sub	x19, x2, x1
  449728:	str	x19, [sp, #56]
  44972c:	mov	x21, x1
  449730:	mov	x20, x0
  449734:	cmp	x19, #0xf
  449738:	b.hi	44978c <_obstack_memory_used@@Base+0x4d88>  // b.pmore
  44973c:	cmp	x19, #0x1
  449740:	ldr	x0, [x0]
  449744:	b.ne	449770 <_obstack_memory_used@@Base+0x4d6c>  // b.any
  449748:	ldrb	w1, [x1]
  44974c:	strb	w1, [x0]
  449750:	ldr	x0, [x20]
  449754:	ldr	x19, [sp, #56]
  449758:	str	x19, [x20, #8]
  44975c:	strb	wzr, [x0, x19]
  449760:	ldp	x19, x20, [sp, #16]
  449764:	ldr	x21, [sp, #32]
  449768:	ldp	x29, x30, [sp], #64
  44976c:	ret
  449770:	cbnz	x19, 4497a4 <_obstack_memory_used@@Base+0x4da0>
  449774:	str	x19, [x20, #8]
  449778:	strb	wzr, [x0, x19]
  44977c:	ldp	x19, x20, [sp, #16]
  449780:	ldr	x21, [sp, #32]
  449784:	ldp	x29, x30, [sp], #64
  449788:	ret
  44978c:	add	x1, sp, #0x38
  449790:	mov	x2, #0x0                   	// #0
  449794:	bl	446ac0 <_obstack_memory_used@@Base+0x20bc>
  449798:	str	x0, [x20]
  44979c:	ldr	x1, [sp, #56]
  4497a0:	str	x1, [x20, #16]
  4497a4:	mov	x2, x19
  4497a8:	mov	x1, x21
  4497ac:	bl	4026a0 <memcpy@plt>
  4497b0:	ldr	x0, [x20]
  4497b4:	ldr	x19, [sp, #56]
  4497b8:	str	x19, [x20, #8]
  4497bc:	strb	wzr, [x0, x19]
  4497c0:	ldp	x19, x20, [sp, #16]
  4497c4:	ldr	x21, [sp, #32]
  4497c8:	ldp	x29, x30, [sp], #64
  4497cc:	ret
  4497d0:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4497d4:	add	x0, x0, #0xff8
  4497d8:	bl	402edc <ferror@plt+0x10c>
  4497dc:	nop
  4497e0:	add	x4, x0, #0x10
  4497e4:	str	x4, [x0]
  4497e8:	ldr	x2, [x1, #8]
  4497ec:	mov	w3, #0x0                   	// #0
  4497f0:	ldr	x1, [x1]
  4497f4:	add	x2, x1, x2
  4497f8:	b	449708 <_obstack_memory_used@@Base+0x4d04>
  4497fc:	nop
  449800:	stp	x29, x30, [sp, #-48]!
  449804:	mov	x4, x0
  449808:	mov	w3, #0x0                   	// #0
  44980c:	mov	x29, sp
  449810:	stp	x19, x20, [sp, #16]
  449814:	mov	x20, x1
  449818:	mov	x19, x8
  44981c:	ldr	x2, [x4, #8]
  449820:	str	x21, [sp, #32]
  449824:	add	x21, x8, #0x10
  449828:	str	x21, [x8]
  44982c:	mov	x0, x8
  449830:	ldr	x1, [x4]
  449834:	add	x2, x1, x2
  449838:	bl	449708 <_obstack_memory_used@@Base+0x4d04>
  44983c:	ldp	x1, x2, [x20]
  449840:	mov	x0, x19
  449844:	bl	448628 <_obstack_memory_used@@Base+0x3c24>
  449848:	mov	x0, x19
  44984c:	ldp	x19, x20, [sp, #16]
  449850:	ldr	x21, [sp, #32]
  449854:	ldp	x29, x30, [sp], #48
  449858:	ret
  44985c:	ldr	x1, [x19]
  449860:	mov	x19, x0
  449864:	cmp	x21, x1
  449868:	b.eq	449874 <_obstack_memory_used@@Base+0x4e70>  // b.none
  44986c:	mov	x0, x1
  449870:	bl	445770 <_obstack_memory_used@@Base+0xd6c>
  449874:	mov	x0, x19
  449878:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  44987c:	nop
  449880:	add	x5, x0, #0x10
  449884:	str	x5, [x0]
  449888:	mov	w3, #0x0                   	// #0
  44988c:	b	449708 <_obstack_memory_used@@Base+0x4d04>
  449890:	stp	x29, x30, [sp, #-64]!
  449894:	cmp	x2, #0x0
  449898:	ccmp	x1, #0x0, #0x0, ne  // ne = any
  44989c:	mov	x29, sp
  4498a0:	stp	x19, x20, [sp, #16]
  4498a4:	str	x21, [sp, #32]
  4498a8:	b.eq	449958 <_obstack_memory_used@@Base+0x4f54>  // b.none
  4498ac:	sub	x19, x2, x1
  4498b0:	str	x19, [sp, #56]
  4498b4:	mov	x21, x1
  4498b8:	mov	x20, x0
  4498bc:	cmp	x19, #0xf
  4498c0:	b.hi	449914 <_obstack_memory_used@@Base+0x4f10>  // b.pmore
  4498c4:	cmp	x19, #0x1
  4498c8:	ldr	x0, [x0]
  4498cc:	b.ne	4498f8 <_obstack_memory_used@@Base+0x4ef4>  // b.any
  4498d0:	ldrb	w1, [x1]
  4498d4:	strb	w1, [x0]
  4498d8:	ldr	x0, [x20]
  4498dc:	ldr	x19, [sp, #56]
  4498e0:	str	x19, [x20, #8]
  4498e4:	strb	wzr, [x0, x19]
  4498e8:	ldp	x19, x20, [sp, #16]
  4498ec:	ldr	x21, [sp, #32]
  4498f0:	ldp	x29, x30, [sp], #64
  4498f4:	ret
  4498f8:	cbnz	x19, 44992c <_obstack_memory_used@@Base+0x4f28>
  4498fc:	str	x19, [x20, #8]
  449900:	strb	wzr, [x0, x19]
  449904:	ldp	x19, x20, [sp, #16]
  449908:	ldr	x21, [sp, #32]
  44990c:	ldp	x29, x30, [sp], #64
  449910:	ret
  449914:	add	x1, sp, #0x38
  449918:	mov	x2, #0x0                   	// #0
  44991c:	bl	446ac0 <_obstack_memory_used@@Base+0x20bc>
  449920:	str	x0, [x20]
  449924:	ldr	x1, [sp, #56]
  449928:	str	x1, [x20, #16]
  44992c:	mov	x2, x19
  449930:	mov	x1, x21
  449934:	bl	4026a0 <memcpy@plt>
  449938:	ldr	x0, [x20]
  44993c:	ldr	x19, [sp, #56]
  449940:	str	x19, [x20, #8]
  449944:	strb	wzr, [x0, x19]
  449948:	ldp	x19, x20, [sp, #16]
  44994c:	ldr	x21, [sp, #32]
  449950:	ldp	x29, x30, [sp], #64
  449954:	ret
  449958:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44995c:	add	x0, x0, #0xff8
  449960:	bl	402edc <ferror@plt+0x10c>
  449964:	nop
  449968:	ldr	x3, [x1, #8]
  44996c:	add	x6, x0, #0x10
  449970:	str	x6, [x0]
  449974:	cmp	x2, x3
  449978:	ldr	x1, [x1]
  44997c:	b.hi	449994 <_obstack_memory_used@@Base+0x4f90>  // b.pmore
  449980:	mov	x5, x2
  449984:	add	x2, x1, x3
  449988:	add	x1, x1, x5
  44998c:	mov	w3, #0x0                   	// #0
  449990:	b	449890 <_obstack_memory_used@@Base+0x4e8c>
  449994:	stp	x29, x30, [sp, #-16]!
  449998:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x285fc>
  44999c:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4499a0:	mov	x29, sp
  4499a4:	add	x1, x1, #0x28
  4499a8:	add	x0, x0, #0xe90
  4499ac:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  4499b0:	ldr	x4, [x1, #8]
  4499b4:	add	x7, x0, #0x10
  4499b8:	str	x7, [x0]
  4499bc:	cmp	x2, x4
  4499c0:	ldr	x1, [x1]
  4499c4:	b.hi	4499e4 <_obstack_memory_used@@Base+0x4fe0>  // b.pmore
  4499c8:	sub	x4, x4, x2
  4499cc:	add	x1, x1, x2
  4499d0:	cmp	x4, x3
  4499d4:	csel	x4, x4, x3, ls  // ls = plast
  4499d8:	mov	w3, #0x0                   	// #0
  4499dc:	add	x2, x1, x4
  4499e0:	b	449890 <_obstack_memory_used@@Base+0x4e8c>
  4499e4:	stp	x29, x30, [sp, #-16]!
  4499e8:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x285fc>
  4499ec:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  4499f0:	mov	x29, sp
  4499f4:	mov	x3, x4
  4499f8:	add	x1, x1, #0x28
  4499fc:	add	x0, x0, #0xe90
  449a00:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  449a04:	nop
  449a08:	ldr	x4, [x1, #8]
  449a0c:	add	x7, x0, #0x10
  449a10:	str	x7, [x0]
  449a14:	cmp	x2, x4
  449a18:	ldr	x1, [x1]
  449a1c:	b.hi	449a3c <_obstack_memory_used@@Base+0x5038>  // b.pmore
  449a20:	sub	x4, x4, x2
  449a24:	add	x1, x1, x2
  449a28:	cmp	x4, x3
  449a2c:	csel	x4, x4, x3, ls  // ls = plast
  449a30:	mov	w3, #0x0                   	// #0
  449a34:	add	x2, x1, x4
  449a38:	b	449890 <_obstack_memory_used@@Base+0x4e8c>
  449a3c:	stp	x29, x30, [sp, #-16]!
  449a40:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x285fc>
  449a44:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  449a48:	mov	x29, sp
  449a4c:	mov	x3, x4
  449a50:	add	x1, x1, #0x48
  449a54:	add	x0, x0, #0xe90
  449a58:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  449a5c:	nop
  449a60:	add	x5, x0, #0x10
  449a64:	str	x5, [x0]
  449a68:	add	x2, x1, x2
  449a6c:	mov	w3, #0x0                   	// #0
  449a70:	b	449890 <_obstack_memory_used@@Base+0x4e8c>
  449a74:	nop
  449a78:	stp	x29, x30, [sp, #-32]!
  449a7c:	mov	x2, #0xffffffffffffffff    	// #-1
  449a80:	mov	x29, sp
  449a84:	stp	x19, x20, [sp, #16]
  449a88:	mov	x20, x0
  449a8c:	add	x0, x0, #0x10
  449a90:	mov	x19, x1
  449a94:	str	x0, [x20]
  449a98:	cbz	x1, 449aa8 <_obstack_memory_used@@Base+0x50a4>
  449a9c:	mov	x0, x1
  449aa0:	bl	402700 <strlen@plt>
  449aa4:	add	x2, x19, x0
  449aa8:	mov	x1, x19
  449aac:	mov	x0, x20
  449ab0:	ldp	x19, x20, [sp, #16]
  449ab4:	mov	w3, #0x0                   	// #0
  449ab8:	ldp	x29, x30, [sp], #32
  449abc:	b	449890 <_obstack_memory_used@@Base+0x4e8c>
  449ac0:	add	x5, x0, #0x10
  449ac4:	str	x5, [x0]
  449ac8:	add	x2, x1, x2
  449acc:	mov	w3, #0x0                   	// #0
  449ad0:	b	449890 <_obstack_memory_used@@Base+0x4e8c>
  449ad4:	nop
  449ad8:	add	x5, x0, #0x10
  449adc:	str	x5, [x0]
  449ae0:	mov	w3, #0x0                   	// #0
  449ae4:	b	449890 <_obstack_memory_used@@Base+0x4e8c>
  449ae8:	stp	x29, x30, [sp, #-32]!
  449aec:	mov	x29, sp
  449af0:	ldr	x3, [x0, #8]
  449af4:	str	x19, [sp, #16]
  449af8:	cmp	x1, x3
  449afc:	b.hi	449b40 <_obstack_memory_used@@Base+0x513c>  // b.pmore
  449b00:	add	x4, x8, #0x10
  449b04:	str	x4, [x8]
  449b08:	sub	x4, x3, x1
  449b0c:	mov	x19, x8
  449b10:	ldr	x5, [x0]
  449b14:	cmp	x4, x2
  449b18:	csel	x2, x4, x2, ls  // ls = plast
  449b1c:	mov	x0, x8
  449b20:	add	x1, x5, x1
  449b24:	mov	w3, #0x0                   	// #0
  449b28:	add	x2, x1, x2
  449b2c:	bl	449890 <_obstack_memory_used@@Base+0x4e8c>
  449b30:	mov	x0, x19
  449b34:	ldr	x19, [sp, #16]
  449b38:	ldp	x29, x30, [sp], #32
  449b3c:	ret
  449b40:	mov	x2, x1
  449b44:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  449b48:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x285fc>
  449b4c:	add	x0, x0, #0xe90
  449b50:	add	x1, x1, #0x58
  449b54:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  449b58:	ldr	x2, [x0]
  449b5c:	ldr	x0, [x1]
  449b60:	cmp	x2, x0
  449b64:	cset	w0, eq  // eq = none
  449b68:	ret
  449b6c:	nop
  449b70:	ldr	x2, [x0]
  449b74:	ldr	x0, [x1]
  449b78:	cmp	x2, x0
  449b7c:	cset	w0, eq  // eq = none
  449b80:	ret
  449b84:	nop
  449b88:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x285fc>
  449b8c:	add	x0, x0, #0x78
  449b90:	ret
  449b94:	nop
  449b98:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  449b9c:	ldr	x1, [x1, #3912]
  449ba0:	add	x1, x1, #0x10
  449ba4:	str	x1, [x0]
  449ba8:	b	44a558 <_obstack_memory_used@@Base+0x5b54>
  449bac:	nop
  449bb0:	stp	x29, x30, [sp, #-32]!
  449bb4:	mov	x29, sp
  449bb8:	str	x19, [sp, #16]
  449bbc:	mov	x19, x0
  449bc0:	bl	449b98 <_obstack_memory_used@@Base+0x5194>
  449bc4:	mov	x0, x19
  449bc8:	mov	x1, #0x8                   	// #8
  449bcc:	ldr	x19, [sp, #16]
  449bd0:	ldp	x29, x30, [sp], #32
  449bd4:	b	445778 <_obstack_memory_used@@Base+0xd74>
  449bd8:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x285fc>
  449bdc:	add	x0, x0, #0x98
  449be0:	ret
  449be4:	nop
  449be8:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  449bec:	ldr	x1, [x1, #3616]
  449bf0:	add	x1, x1, #0x10
  449bf4:	str	x1, [x0]
  449bf8:	b	44a558 <_obstack_memory_used@@Base+0x5b54>
  449bfc:	nop
  449c00:	stp	x29, x30, [sp, #-32]!
  449c04:	mov	x29, sp
  449c08:	str	x19, [sp, #16]
  449c0c:	mov	x19, x0
  449c10:	bl	449be8 <_obstack_memory_used@@Base+0x51e4>
  449c14:	mov	x0, x19
  449c18:	mov	x1, #0x8                   	// #8
  449c1c:	ldr	x19, [sp, #16]
  449c20:	ldp	x29, x30, [sp], #32
  449c24:	b	445778 <_obstack_memory_used@@Base+0xd74>
  449c28:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x285fc>
  449c2c:	add	x0, x0, #0xb8
  449c30:	ret
  449c34:	nop
  449c38:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  449c3c:	ldr	x1, [x1, #3728]
  449c40:	add	x1, x1, #0x10
  449c44:	str	x1, [x0]
  449c48:	b	44a558 <_obstack_memory_used@@Base+0x5b54>
  449c4c:	nop
  449c50:	stp	x29, x30, [sp, #-32]!
  449c54:	mov	x29, sp
  449c58:	str	x19, [sp, #16]
  449c5c:	mov	x19, x0
  449c60:	bl	449c38 <_obstack_memory_used@@Base+0x5234>
  449c64:	mov	x0, x19
  449c68:	mov	x1, #0x8                   	// #8
  449c6c:	ldr	x19, [sp, #16]
  449c70:	ldp	x29, x30, [sp], #32
  449c74:	b	445778 <_obstack_memory_used@@Base+0xd74>
  449c78:	stp	x29, x30, [sp, #-64]!
  449c7c:	mov	x29, sp
  449c80:	ldr	x4, [x0]
  449c84:	str	xzr, [sp, #40]
  449c88:	str	xzr, [sp, #56]
  449c8c:	add	x3, sp, #0x28
  449c90:	ldr	x4, [x4, #48]
  449c94:	str	x19, [sp, #16]
  449c98:	mov	x19, x2
  449c9c:	mov	x2, #0x1000000000          	// #68719476736
  449ca0:	str	x2, [sp, #48]
  449ca4:	ldr	x2, [x19]
  449ca8:	blr	x4
  449cac:	ldr	w0, [sp, #48]
  449cb0:	and	w0, w0, #0x6
  449cb4:	cmp	w0, #0x6
  449cb8:	b.ne	449cd4 <_obstack_memory_used@@Base+0x52d0>  // b.any
  449cbc:	ldr	x1, [sp, #40]
  449cc0:	str	x1, [x19]
  449cc4:	mov	w0, #0x1                   	// #1
  449cc8:	ldr	x19, [sp, #16]
  449ccc:	ldp	x29, x30, [sp], #64
  449cd0:	ret
  449cd4:	mov	w0, #0x0                   	// #0
  449cd8:	ldr	x19, [sp, #16]
  449cdc:	ldp	x29, x30, [sp], #64
  449ce0:	ret
  449ce4:	nop
  449ce8:	cmp	x4, x2
  449cec:	mov	w0, #0x6                   	// #6
  449cf0:	csinc	w0, w0, wzr, eq  // eq = none
  449cf4:	ret
  449cf8:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  449cfc:	ldr	x1, [x1, #4032]
  449d00:	add	x1, x1, #0x10
  449d04:	str	x1, [x0]
  449d08:	b	445c90 <_obstack_memory_used@@Base+0x128c>
  449d0c:	nop
  449d10:	stp	x29, x30, [sp, #-32]!
  449d14:	mov	x29, sp
  449d18:	str	x19, [sp, #16]
  449d1c:	mov	x19, x0
  449d20:	bl	449cf8 <_obstack_memory_used@@Base+0x52f4>
  449d24:	mov	x0, x19
  449d28:	mov	x1, #0x10                  	// #16
  449d2c:	ldr	x19, [sp, #16]
  449d30:	ldp	x29, x30, [sp], #32
  449d34:	b	445778 <_obstack_memory_used@@Base+0xd74>
  449d38:	stp	x29, x30, [sp, #-64]!
  449d3c:	cmp	x4, x6
  449d40:	mov	x29, sp
  449d44:	stp	x19, x20, [sp, #16]
  449d48:	mov	x20, x4
  449d4c:	mov	x19, x7
  449d50:	stp	x21, x22, [sp, #32]
  449d54:	mov	w21, w2
  449d58:	ldr	x22, [x0, #8]
  449d5c:	str	x23, [sp, #48]
  449d60:	mov	x23, x3
  449d64:	b.eq	449db4 <_obstack_memory_used@@Base+0x53b0>  // b.none
  449d68:	ldr	x1, [x3, #8]
  449d6c:	cmp	x1, x22
  449d70:	b.eq	449d8c <_obstack_memory_used@@Base+0x5388>  // b.none
  449d74:	ldrb	w0, [x22]
  449d78:	cmp	w0, #0x2a
  449d7c:	b.eq	449d9c <_obstack_memory_used@@Base+0x5398>  // b.none
  449d80:	mov	x0, x22
  449d84:	bl	402ad0 <strcmp@plt>
  449d88:	cbnz	w0, 449d9c <_obstack_memory_used@@Base+0x5398>
  449d8c:	mov	w0, #0x1                   	// #1
  449d90:	str	x20, [x19]
  449d94:	str	w21, [x19, #8]
  449d98:	str	w0, [x19, #16]
  449d9c:	mov	w0, #0x0                   	// #0
  449da0:	ldp	x19, x20, [sp, #16]
  449da4:	ldp	x21, x22, [sp, #32]
  449da8:	ldr	x23, [sp, #48]
  449dac:	ldp	x29, x30, [sp], #64
  449db0:	ret
  449db4:	ldr	x1, [x5, #8]
  449db8:	cmp	x1, x22
  449dbc:	b.eq	449df8 <_obstack_memory_used@@Base+0x53f4>  // b.none
  449dc0:	ldrb	w0, [x22]
  449dc4:	cmp	w0, #0x2a
  449dc8:	b.eq	449de8 <_obstack_memory_used@@Base+0x53e4>  // b.none
  449dcc:	mov	x0, x22
  449dd0:	bl	402ad0 <strcmp@plt>
  449dd4:	cbz	w0, 449df8 <_obstack_memory_used@@Base+0x53f4>
  449dd8:	ldr	x1, [x23, #8]
  449ddc:	cmp	x22, x1
  449de0:	b.ne	449d80 <_obstack_memory_used@@Base+0x537c>  // b.any
  449de4:	b	449d8c <_obstack_memory_used@@Base+0x5388>
  449de8:	ldr	x0, [x3, #8]
  449dec:	cmp	x0, x22
  449df0:	b.ne	449d9c <_obstack_memory_used@@Base+0x5398>  // b.any
  449df4:	b	449d8c <_obstack_memory_used@@Base+0x5388>
  449df8:	str	w21, [x19, #12]
  449dfc:	mov	w0, #0x0                   	// #0
  449e00:	ldp	x19, x20, [sp, #16]
  449e04:	ldp	x21, x22, [sp, #32]
  449e08:	ldr	x23, [sp, #48]
  449e0c:	ldp	x29, x30, [sp], #64
  449e10:	ret
  449e14:	nop
  449e18:	stp	x29, x30, [sp, #-48]!
  449e1c:	mov	x29, sp
  449e20:	ldr	x0, [x0, #8]
  449e24:	stp	x19, x20, [sp, #16]
  449e28:	mov	x20, x2
  449e2c:	ldr	x1, [x1, #8]
  449e30:	str	x21, [sp, #32]
  449e34:	mov	x19, x3
  449e38:	cmp	x0, x1
  449e3c:	b.eq	449e58 <_obstack_memory_used@@Base+0x5454>  // b.none
  449e40:	ldrb	w2, [x0]
  449e44:	mov	w21, #0x0                   	// #0
  449e48:	cmp	w2, #0x2a
  449e4c:	b.eq	449e70 <_obstack_memory_used@@Base+0x546c>  // b.none
  449e50:	bl	402ad0 <strcmp@plt>
  449e54:	cbnz	w0, 449e70 <_obstack_memory_used@@Base+0x546c>
  449e58:	mov	x0, #0x10                  	// #16
  449e5c:	mov	w1, #0x6                   	// #6
  449e60:	mov	w21, #0x1                   	// #1
  449e64:	str	x20, [x19]
  449e68:	str	w1, [x19, #8]
  449e6c:	str	x0, [x19, #16]
  449e70:	mov	w0, w21
  449e74:	ldp	x19, x20, [sp, #16]
  449e78:	ldr	x21, [sp, #32]
  449e7c:	ldp	x29, x30, [sp], #48
  449e80:	ret
  449e84:	nop
  449e88:	stp	x29, x30, [sp, #-48]!
  449e8c:	mov	x29, sp
  449e90:	stp	x19, x20, [sp, #16]
  449e94:	mov	x20, x0
  449e98:	mov	x19, x1
  449e9c:	ldr	x0, [x0, #8]
  449ea0:	ldr	x1, [x1, #8]
  449ea4:	cmp	x0, x1
  449ea8:	b.eq	449f10 <_obstack_memory_used@@Base+0x550c>  // b.none
  449eac:	stp	x21, x22, [sp, #32]
  449eb0:	mov	x22, x2
  449eb4:	mov	w21, w3
  449eb8:	ldrb	w2, [x0]
  449ebc:	cmp	w2, #0x2a
  449ec0:	b.eq	449ee0 <_obstack_memory_used@@Base+0x54dc>  // b.none
  449ec4:	bl	402ad0 <strcmp@plt>
  449ec8:	cbnz	w0, 449ee0 <_obstack_memory_used@@Base+0x54dc>
  449ecc:	mov	w0, #0x1                   	// #1
  449ed0:	ldp	x19, x20, [sp, #16]
  449ed4:	ldp	x21, x22, [sp, #32]
  449ed8:	ldp	x29, x30, [sp], #48
  449edc:	ret
  449ee0:	cmp	w21, #0x3
  449ee4:	b.hi	449f20 <_obstack_memory_used@@Base+0x551c>  // b.pmore
  449ee8:	ldr	x3, [x19]
  449eec:	mov	x2, x22
  449ef0:	mov	x1, x20
  449ef4:	mov	x0, x19
  449ef8:	ldp	x19, x20, [sp, #16]
  449efc:	ldp	x21, x22, [sp, #32]
  449f00:	ldp	x29, x30, [sp], #48
  449f04:	ldr	x3, [x3, #40]
  449f08:	mov	x16, x3
  449f0c:	br	x16
  449f10:	mov	w0, #0x1                   	// #1
  449f14:	ldp	x19, x20, [sp, #16]
  449f18:	ldp	x29, x30, [sp], #48
  449f1c:	ret
  449f20:	mov	w0, #0x0                   	// #0
  449f24:	ldp	x19, x20, [sp, #16]
  449f28:	ldp	x21, x22, [sp, #32]
  449f2c:	ldp	x29, x30, [sp], #48
  449f30:	ret
  449f34:	nop
  449f38:	b	445770 <_obstack_memory_used@@Base+0xd6c>
  449f3c:	nop
  449f40:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x285fc>
  449f44:	add	x0, x0, #0x100
  449f48:	ret
  449f4c:	nop
  449f50:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x285fc>
  449f54:	add	x0, x0, #0x128
  449f58:	ret
  449f5c:	nop
  449f60:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  449f64:	ldr	x1, [x1, #3936]
  449f68:	add	x1, x1, #0x10
  449f6c:	str	x1, [x0]
  449f70:	b	44a558 <_obstack_memory_used@@Base+0x5b54>
  449f74:	nop
  449f78:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  449f7c:	ldr	x1, [x1, #3856]
  449f80:	add	x1, x1, #0x10
  449f84:	str	x1, [x0]
  449f88:	b	44a558 <_obstack_memory_used@@Base+0x5b54>
  449f8c:	nop
  449f90:	stp	x29, x30, [sp, #-32]!
  449f94:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  449f98:	mov	x29, sp
  449f9c:	ldr	x1, [x1, #3936]
  449fa0:	str	x19, [sp, #16]
  449fa4:	mov	x19, x0
  449fa8:	add	x1, x1, #0x10
  449fac:	str	x1, [x0]
  449fb0:	bl	44a558 <_obstack_memory_used@@Base+0x5b54>
  449fb4:	mov	x0, x19
  449fb8:	mov	x1, #0x8                   	// #8
  449fbc:	ldr	x19, [sp, #16]
  449fc0:	ldp	x29, x30, [sp], #32
  449fc4:	b	445778 <_obstack_memory_used@@Base+0xd74>
  449fc8:	stp	x29, x30, [sp, #-32]!
  449fcc:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  449fd0:	mov	x29, sp
  449fd4:	ldr	x1, [x1, #3856]
  449fd8:	str	x19, [sp, #16]
  449fdc:	mov	x19, x0
  449fe0:	add	x1, x1, #0x10
  449fe4:	str	x1, [x0]
  449fe8:	bl	44a558 <_obstack_memory_used@@Base+0x5b54>
  449fec:	mov	x0, x19
  449ff0:	mov	x1, #0x8                   	// #8
  449ff4:	ldr	x19, [sp, #16]
  449ff8:	ldp	x29, x30, [sp], #32
  449ffc:	b	445778 <_obstack_memory_used@@Base+0xd74>
  44a000:	stp	x29, x30, [sp, #-48]!
  44a004:	mov	x29, sp
  44a008:	stp	x19, x20, [sp, #16]
  44a00c:	adrp	x20, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44a010:	mov	x19, x0
  44a014:	ldr	x0, [x20, #3600]
  44a018:	str	x21, [sp, #32]
  44a01c:	adrp	x21, 495000 <_obstack_memory_used@@Base+0x505fc>
  44a020:	cbz	x0, 44a030 <_obstack_memory_used@@Base+0x562c>
  44a024:	add	x0, x21, #0xaf8
  44a028:	bl	402d40 <pthread_mutex_lock@plt>
  44a02c:	cbnz	w0, 44a128 <_obstack_memory_used@@Base+0x5724>
  44a030:	add	x0, x21, #0xaf8
  44a034:	sub	x5, x19, #0x10
  44a038:	ldr	x1, [x0, #48]
  44a03c:	cbz	x1, 44a0b8 <_obstack_memory_used@@Base+0x56b4>
  44a040:	ldur	x6, [x19, #-16]
  44a044:	add	x4, x5, x6
  44a048:	cmp	x1, x4
  44a04c:	b.hi	44a0b8 <_obstack_memory_used@@Base+0x56b4>  // b.pmore
  44a050:	ldr	x2, [x1, #8]
  44a054:	b.eq	44a10c <_obstack_memory_used@@Base+0x5708>  // b.none
  44a058:	add	x0, x0, #0x30
  44a05c:	cbnz	x2, 44a078 <_obstack_memory_used@@Base+0x5674>
  44a060:	b	44a094 <_obstack_memory_used@@Base+0x5690>
  44a064:	ldr	x3, [x2, #8]
  44a068:	add	x0, x1, #0x8
  44a06c:	cbz	x3, 44a0f4 <_obstack_memory_used@@Base+0x56f0>
  44a070:	mov	x1, x2
  44a074:	mov	x2, x3
  44a078:	cmp	x4, x2
  44a07c:	b.cc	44a064 <_obstack_memory_used@@Base+0x5660>  // b.lo, b.ul, b.last
  44a080:	b.ne	44a120 <_obstack_memory_used@@Base+0x571c>  // b.any
  44a084:	ldp	x2, x3, [x4]
  44a088:	str	x3, [x1, #8]
  44a08c:	ldr	x1, [x0]
  44a090:	add	x6, x6, x2
  44a094:	ldr	x2, [x1]
  44a098:	add	x3, x1, x2
  44a09c:	cmp	x5, x3
  44a0a0:	b.eq	44a0e8 <_obstack_memory_used@@Base+0x56e4>  // b.none
  44a0a4:	ldr	x1, [x1, #8]
  44a0a8:	stp	x6, x1, [x19, #-16]
  44a0ac:	ldr	x0, [x0]
  44a0b0:	str	x5, [x0, #8]
  44a0b4:	b	44a0c4 <_obstack_memory_used@@Base+0x56c0>
  44a0b8:	add	x0, x21, #0xaf8
  44a0bc:	stur	x1, [x19, #-8]
  44a0c0:	str	x5, [x0, #48]
  44a0c4:	ldr	x20, [x20, #3600]
  44a0c8:	cbz	x20, 44a0d8 <_obstack_memory_used@@Base+0x56d4>
  44a0cc:	add	x0, x21, #0xaf8
  44a0d0:	bl	402d60 <pthread_mutex_unlock@plt>
  44a0d4:	cbnz	w0, 44a12c <_obstack_memory_used@@Base+0x5728>
  44a0d8:	ldp	x19, x20, [sp, #16]
  44a0dc:	ldr	x21, [sp, #32]
  44a0e0:	ldp	x29, x30, [sp], #48
  44a0e4:	ret
  44a0e8:	add	x6, x2, x6
  44a0ec:	str	x6, [x1]
  44a0f0:	b	44a0c4 <_obstack_memory_used@@Base+0x56c0>
  44a0f4:	ldr	x1, [x1, #8]
  44a0f8:	ldr	x2, [x1]
  44a0fc:	add	x3, x1, x2
  44a100:	cmp	x5, x3
  44a104:	b.ne	44a0a4 <_obstack_memory_used@@Base+0x56a0>  // b.any
  44a108:	b	44a0e8 <_obstack_memory_used@@Base+0x56e4>
  44a10c:	ldr	x1, [x1]
  44a110:	add	x6, x1, x6
  44a114:	stp	x6, x2, [x19, #-16]
  44a118:	str	x5, [x0, #48]
  44a11c:	b	44a0c4 <_obstack_memory_used@@Base+0x56c0>
  44a120:	ldr	x1, [x0]
  44a124:	b	44a094 <_obstack_memory_used@@Base+0x5690>
  44a128:	bl	4031d0 <ferror@plt+0x400>
  44a12c:	mov	x0, #0x8                   	// #8
  44a130:	bl	44a2a8 <_obstack_memory_used@@Base+0x58a4>
  44a134:	adrp	x3, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44a138:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44a13c:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44a140:	ldr	x3, [x3, #3856]
  44a144:	ldr	x2, [x2, #4064]
  44a148:	add	x3, x3, #0x10
  44a14c:	ldr	x1, [x1, #4016]
  44a150:	str	x3, [x0]
  44a154:	bl	44b288 <_obstack_memory_used@@Base+0x6884>
  44a158:	cmn	x1, #0x1
  44a15c:	b.ne	44a164 <_obstack_memory_used@@Base+0x5760>  // b.any
  44a160:	bl	44b028 <_obstack_memory_used@@Base+0x6624>
  44a164:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  44a168:	stp	x29, x30, [sp, #-48]!
  44a16c:	mov	x29, sp
  44a170:	stp	x19, x20, [sp, #16]
  44a174:	adrp	x20, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44a178:	mov	x19, x0
  44a17c:	ldr	x0, [x20, #3600]
  44a180:	str	x21, [sp, #32]
  44a184:	adrp	x21, 495000 <_obstack_memory_used@@Base+0x505fc>
  44a188:	cbz	x0, 44a198 <_obstack_memory_used@@Base+0x5794>
  44a18c:	add	x0, x21, #0xaf8
  44a190:	bl	402d40 <pthread_mutex_lock@plt>
  44a194:	cbnz	w0, 44a234 <_obstack_memory_used@@Base+0x5830>
  44a198:	add	x3, x21, #0xaf8
  44a19c:	adds	x0, x19, #0x10
  44a1a0:	mov	x19, #0x10                  	// #16
  44a1a4:	csel	x0, x0, x19, cc  // cc = lo, ul, last
  44a1a8:	add	x0, x0, #0xf
  44a1ac:	ldr	x19, [x3, #48]
  44a1b0:	and	x0, x0, #0xfffffffffffffff0
  44a1b4:	cbz	x19, 44a200 <_obstack_memory_used@@Base+0x57fc>
  44a1b8:	add	x3, x3, #0x30
  44a1bc:	b	44a1c8 <_obstack_memory_used@@Base+0x57c4>
  44a1c0:	add	x3, x2, #0x8
  44a1c4:	cbz	x19, 44a200 <_obstack_memory_used@@Base+0x57fc>
  44a1c8:	mov	x2, x19
  44a1cc:	ldp	x1, x19, [x19]
  44a1d0:	cmp	x0, x1
  44a1d4:	b.hi	44a1c0 <_obstack_memory_used@@Base+0x57bc>  // b.pmore
  44a1d8:	sub	x1, x1, x0
  44a1dc:	cmp	x1, #0xf
  44a1e0:	b.ls	44a228 <_obstack_memory_used@@Base+0x5824>  // b.plast
  44a1e4:	add	x4, x2, x0
  44a1e8:	str	x19, [x4, #8]
  44a1ec:	str	x1, [x2, x0]
  44a1f0:	ldr	x2, [x3]
  44a1f4:	add	x19, x2, #0x10
  44a1f8:	str	x0, [x2]
  44a1fc:	str	x4, [x3]
  44a200:	ldr	x20, [x20, #3600]
  44a204:	cbz	x20, 44a214 <_obstack_memory_used@@Base+0x5810>
  44a208:	add	x0, x21, #0xaf8
  44a20c:	bl	402d60 <pthread_mutex_unlock@plt>
  44a210:	cbnz	w0, 44a238 <_obstack_memory_used@@Base+0x5834>
  44a214:	mov	x0, x19
  44a218:	ldp	x19, x20, [sp, #16]
  44a21c:	ldr	x21, [sp, #32]
  44a220:	ldp	x29, x30, [sp], #48
  44a224:	ret
  44a228:	str	x19, [x3]
  44a22c:	add	x19, x2, #0x10
  44a230:	b	44a200 <_obstack_memory_used@@Base+0x57fc>
  44a234:	bl	4031d0 <ferror@plt+0x400>
  44a238:	mov	x0, #0x8                   	// #8
  44a23c:	bl	44a2a8 <_obstack_memory_used@@Base+0x58a4>
  44a240:	adrp	x3, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44a244:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44a248:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44a24c:	ldr	x3, [x3, #3856]
  44a250:	ldr	x2, [x2, #4064]
  44a254:	add	x3, x3, #0x10
  44a258:	ldr	x1, [x1, #4016]
  44a25c:	str	x3, [x0]
  44a260:	bl	44b288 <_obstack_memory_used@@Base+0x6884>
  44a264:	cmn	x1, #0x1
  44a268:	b.ne	44a270 <_obstack_memory_used@@Base+0x586c>  // b.any
  44a26c:	bl	44b028 <_obstack_memory_used@@Base+0x6624>
  44a270:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  44a274:	nop
  44a278:	stp	x29, x30, [sp, #-32]!
  44a27c:	mov	x29, sp
  44a280:	str	x19, [sp, #16]
  44a284:	adrp	x19, 495000 <_obstack_memory_used@@Base+0x505fc>
  44a288:	add	x19, x19, #0xaf8
  44a28c:	ldr	x0, [x19, #56]
  44a290:	cbz	x0, 44a29c <_obstack_memory_used@@Base+0x5898>
  44a294:	bl	402b30 <free@plt>
  44a298:	str	xzr, [x19, #56]
  44a29c:	ldr	x19, [sp, #16]
  44a2a0:	ldp	x29, x30, [sp], #32
  44a2a4:	ret
  44a2a8:	stp	x29, x30, [sp, #-32]!
  44a2ac:	mov	x29, sp
  44a2b0:	str	x19, [sp, #16]
  44a2b4:	add	x19, x0, #0x80
  44a2b8:	mov	x0, x19
  44a2bc:	bl	402890 <malloc@plt>
  44a2c0:	mov	x1, x0
  44a2c4:	cbz	x0, 44a2f8 <_obstack_memory_used@@Base+0x58f4>
  44a2c8:	stp	xzr, xzr, [x1]
  44a2cc:	add	x0, x1, #0x80
  44a2d0:	stp	xzr, xzr, [x1, #16]
  44a2d4:	stp	xzr, xzr, [x1, #32]
  44a2d8:	stp	xzr, xzr, [x1, #48]
  44a2dc:	stp	xzr, xzr, [x1, #64]
  44a2e0:	stp	xzr, xzr, [x1, #80]
  44a2e4:	stp	xzr, xzr, [x1, #96]
  44a2e8:	stp	xzr, xzr, [x1, #112]
  44a2ec:	ldr	x19, [sp, #16]
  44a2f0:	ldp	x29, x30, [sp], #32
  44a2f4:	ret
  44a2f8:	mov	x0, x19
  44a2fc:	bl	44a168 <_obstack_memory_used@@Base+0x5764>
  44a300:	mov	x1, x0
  44a304:	cbnz	x0, 44a2c8 <_obstack_memory_used@@Base+0x58c4>
  44a308:	bl	44b160 <_obstack_memory_used@@Base+0x675c>
  44a30c:	nop
  44a310:	adrp	x1, 495000 <_obstack_memory_used@@Base+0x505fc>
  44a314:	add	x1, x1, #0xaf8
  44a318:	sub	x0, x0, #0x80
  44a31c:	ldr	x2, [x1, #56]
  44a320:	cmp	x0, x2
  44a324:	b.ls	44a34c <_obstack_memory_used@@Base+0x5948>  // b.plast
  44a328:	ldr	x1, [x1, #64]
  44a32c:	add	x2, x2, x1
  44a330:	cmp	x0, x2
  44a334:	b.cs	44a34c <_obstack_memory_used@@Base+0x5948>  // b.hs, b.nlast
  44a338:	stp	x29, x30, [sp, #-16]!
  44a33c:	mov	x29, sp
  44a340:	bl	44a000 <_obstack_memory_used@@Base+0x55fc>
  44a344:	ldp	x29, x30, [sp], #16
  44a348:	ret
  44a34c:	b	402b30 <free@plt>
  44a350:	stp	x29, x30, [sp, #-16]!
  44a354:	mov	x0, #0x70                  	// #112
  44a358:	mov	x29, sp
  44a35c:	bl	402890 <malloc@plt>
  44a360:	cbz	x0, 44a388 <_obstack_memory_used@@Base+0x5984>
  44a364:	stp	xzr, xzr, [x0]
  44a368:	stp	xzr, xzr, [x0, #16]
  44a36c:	stp	xzr, xzr, [x0, #32]
  44a370:	stp	xzr, xzr, [x0, #48]
  44a374:	stp	xzr, xzr, [x0, #64]
  44a378:	stp	xzr, xzr, [x0, #80]
  44a37c:	stp	xzr, xzr, [x0, #96]
  44a380:	ldp	x29, x30, [sp], #16
  44a384:	ret
  44a388:	mov	x0, #0x70                  	// #112
  44a38c:	bl	44a168 <_obstack_memory_used@@Base+0x5764>
  44a390:	cbnz	x0, 44a364 <_obstack_memory_used@@Base+0x5960>
  44a394:	bl	44b160 <_obstack_memory_used@@Base+0x675c>
  44a398:	adrp	x2, 495000 <_obstack_memory_used@@Base+0x505fc>
  44a39c:	add	x2, x2, #0xaf8
  44a3a0:	mov	x1, x0
  44a3a4:	ldr	x3, [x2, #56]
  44a3a8:	cmp	x0, x3
  44a3ac:	b.ls	44a3d4 <_obstack_memory_used@@Base+0x59d0>  // b.plast
  44a3b0:	ldr	x2, [x2, #64]
  44a3b4:	add	x3, x3, x2
  44a3b8:	cmp	x0, x3
  44a3bc:	b.cs	44a3d4 <_obstack_memory_used@@Base+0x59d0>  // b.hs, b.nlast
  44a3c0:	stp	x29, x30, [sp, #-16]!
  44a3c4:	mov	x29, sp
  44a3c8:	bl	44a000 <_obstack_memory_used@@Base+0x55fc>
  44a3cc:	ldp	x29, x30, [sp], #16
  44a3d0:	ret
  44a3d4:	mov	x0, x1
  44a3d8:	b	402b30 <free@plt>
  44a3dc:	nop
  44a3e0:	ldur	x0, [x0, #-8]
  44a3e4:	ret
  44a3e8:	stp	x29, x30, [sp, #-32]!
  44a3ec:	mov	x29, sp
  44a3f0:	str	x19, [sp, #16]
  44a3f4:	mov	x19, x0
  44a3f8:	bl	44a690 <_obstack_memory_used@@Base+0x5c8c>
  44a3fc:	mov	x1, x0
  44a400:	mov	x2, x19
  44a404:	mov	x4, #0xd500                	// #54528
  44a408:	movk	x4, #0xbcd4, lsl #16
  44a40c:	movk	x4, #0xaabc, lsl #32
  44a410:	ldr	x3, [x2], #-80
  44a414:	movk	x4, #0xb8b1, lsl #48
  44a418:	ldr	x0, [x0]
  44a41c:	add	x3, x3, x4
  44a420:	cmp	x3, #0x1
  44a424:	b.ls	44a43c <_obstack_memory_used@@Base+0x5a38>  // b.plast
  44a428:	cbnz	x0, 44a480 <_obstack_memory_used@@Base+0x5a7c>
  44a42c:	str	x2, [x1]
  44a430:	ldr	x19, [sp, #16]
  44a434:	ldp	x29, x30, [sp], #32
  44a438:	ret
  44a43c:	ldur	w3, [x19, #-40]
  44a440:	mov	w5, #0x1                   	// #1
  44a444:	ldr	w4, [x1, #8]
  44a448:	cmp	w3, #0x0
  44a44c:	sub	w5, w5, w3
  44a450:	csinc	w3, w5, w3, lt  // lt = tstop
  44a454:	stur	w3, [x19, #-40]
  44a458:	sub	w3, w4, #0x1
  44a45c:	str	w3, [x1, #8]
  44a460:	cmp	x0, x2
  44a464:	b.eq	44a470 <_obstack_memory_used@@Base+0x5a6c>  // b.none
  44a468:	stur	x0, [x19, #-48]
  44a46c:	str	x2, [x1]
  44a470:	ldur	x0, [x19, #-8]
  44a474:	ldr	x19, [sp, #16]
  44a478:	ldp	x29, x30, [sp], #32
  44a47c:	ret
  44a480:	bl	44b160 <_obstack_memory_used@@Base+0x675c>
  44a484:	nop
  44a488:	stp	x29, x30, [sp, #-16]!
  44a48c:	mov	x29, sp
  44a490:	bl	44a668 <_obstack_memory_used@@Base+0x5c64>
  44a494:	ldr	x1, [x0]
  44a498:	cbz	x1, 44a4d8 <_obstack_memory_used@@Base+0x5ad4>
  44a49c:	mov	x3, #0xd500                	// #54528
  44a4a0:	ldr	x2, [x1, #80]
  44a4a4:	movk	x3, #0xbcd4, lsl #16
  44a4a8:	movk	x3, #0xaabc, lsl #32
  44a4ac:	movk	x3, #0xb8b1, lsl #48
  44a4b0:	add	x2, x2, x3
  44a4b4:	cmp	x2, #0x1
  44a4b8:	b.hi	44a4f8 <_obstack_memory_used@@Base+0x5af4>  // b.pmore
  44a4bc:	ldr	w2, [x1, #40]
  44a4c0:	tbnz	w2, #31, 44a4e0 <_obstack_memory_used@@Base+0x5adc>
  44a4c4:	subs	w2, w2, #0x1
  44a4c8:	b.eq	44a508 <_obstack_memory_used@@Base+0x5b04>  // b.none
  44a4cc:	cmn	w2, #0x1
  44a4d0:	b.eq	44a51c <_obstack_memory_used@@Base+0x5b18>  // b.none
  44a4d4:	str	w2, [x1, #40]
  44a4d8:	ldp	x29, x30, [sp], #16
  44a4dc:	ret
  44a4e0:	adds	w2, w2, #0x1
  44a4e4:	b.ne	44a4d4 <_obstack_memory_used@@Base+0x5ad0>  // b.any
  44a4e8:	ldr	x3, [x1, #32]
  44a4ec:	str	x3, [x0]
  44a4f0:	str	w2, [x1, #40]
  44a4f4:	b	44a4d8 <_obstack_memory_used@@Base+0x5ad4>
  44a4f8:	str	xzr, [x0]
  44a4fc:	add	x0, x1, #0x50
  44a500:	ldp	x29, x30, [sp], #16
  44a504:	b	45ce30 <_obstack_memory_used@@Base+0x1842c>
  44a508:	ldr	x2, [x1, #32]
  44a50c:	str	x2, [x0]
  44a510:	add	x0, x1, #0x50
  44a514:	ldp	x29, x30, [sp], #16
  44a518:	b	45ce30 <_obstack_memory_used@@Base+0x1842c>
  44a51c:	bl	44b160 <_obstack_memory_used@@Base+0x675c>
  44a520:	stp	x29, x30, [sp, #-16]!
  44a524:	mov	x29, sp
  44a528:	bl	44a690 <_obstack_memory_used@@Base+0x5c8c>
  44a52c:	ldr	w0, [x0, #8]
  44a530:	ldp	x29, x30, [sp], #16
  44a534:	cmp	w0, #0x0
  44a538:	cset	w0, ne  // ne = any
  44a53c:	ret
  44a540:	stp	x29, x30, [sp, #-16]!
  44a544:	mov	x29, sp
  44a548:	bl	44a690 <_obstack_memory_used@@Base+0x5c8c>
  44a54c:	ldr	w0, [x0, #8]
  44a550:	ldp	x29, x30, [sp], #16
  44a554:	ret
  44a558:	ret
  44a55c:	nop
  44a560:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44a564:	ldr	x1, [x1, #3744]
  44a568:	add	x1, x1, #0x10
  44a56c:	str	x1, [x0]
  44a570:	b	44a558 <_obstack_memory_used@@Base+0x5b54>
  44a574:	nop
  44a578:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x285fc>
  44a57c:	add	x0, x0, #0x1a8
  44a580:	ret
  44a584:	nop
  44a588:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x285fc>
  44a58c:	add	x0, x0, #0x1b8
  44a590:	ret
  44a594:	nop
  44a598:	stp	x29, x30, [sp, #-32]!
  44a59c:	mov	x29, sp
  44a5a0:	str	x19, [sp, #16]
  44a5a4:	mov	x19, x0
  44a5a8:	bl	44a558 <_obstack_memory_used@@Base+0x5b54>
  44a5ac:	mov	x0, x19
  44a5b0:	mov	x1, #0x8                   	// #8
  44a5b4:	ldr	x19, [sp, #16]
  44a5b8:	ldp	x29, x30, [sp], #32
  44a5bc:	b	445778 <_obstack_memory_used@@Base+0xd74>
  44a5c0:	stp	x29, x30, [sp, #-32]!
  44a5c4:	mov	x29, sp
  44a5c8:	str	x19, [sp, #16]
  44a5cc:	mov	x19, x0
  44a5d0:	bl	44a560 <_obstack_memory_used@@Base+0x5b5c>
  44a5d4:	mov	x0, x19
  44a5d8:	mov	x1, #0x8                   	// #8
  44a5dc:	ldr	x19, [sp, #16]
  44a5e0:	ldp	x29, x30, [sp], #32
  44a5e4:	b	445778 <_obstack_memory_used@@Base+0xd74>
  44a5e8:	ret
  44a5ec:	nop
  44a5f0:	stp	x29, x30, [sp, #-32]!
  44a5f4:	mov	x29, sp
  44a5f8:	str	x19, [sp, #16]
  44a5fc:	mov	x19, x0
  44a600:	bl	44a5e8 <_obstack_memory_used@@Base+0x5be4>
  44a604:	mov	x0, x19
  44a608:	mov	x1, #0x8                   	// #8
  44a60c:	ldr	x19, [sp, #16]
  44a610:	ldp	x29, x30, [sp], #32
  44a614:	b	445778 <_obstack_memory_used@@Base+0xd74>
  44a618:	ret
  44a61c:	nop
  44a620:	stp	x29, x30, [sp, #-32]!
  44a624:	mov	x29, sp
  44a628:	str	x19, [sp, #16]
  44a62c:	mov	x19, x0
  44a630:	bl	44a618 <_obstack_memory_used@@Base+0x5c14>
  44a634:	mov	x0, x19
  44a638:	mov	x1, #0x8                   	// #8
  44a63c:	ldr	x19, [sp, #16]
  44a640:	ldp	x29, x30, [sp], #32
  44a644:	b	445778 <_obstack_memory_used@@Base+0xd74>
  44a648:	ret
  44a64c:	nop
  44a650:	b	44a578 <_obstack_memory_used@@Base+0x5b74>
  44a654:	nop
  44a658:	ret
  44a65c:	nop
  44a660:	b	44a588 <_obstack_memory_used@@Base+0x5b84>
  44a664:	nop
  44a668:	stp	x29, x30, [sp, #-16]!
  44a66c:	mrs	x1, tpidr_el0
  44a670:	movz	x0, #0x0, lsl #16
  44a674:	movk	x0, #0x10
  44a678:	nop
  44a67c:	nop
  44a680:	mov	x29, sp
  44a684:	add	x0, x1, x0
  44a688:	ldp	x29, x30, [sp], #16
  44a68c:	ret
  44a690:	stp	x29, x30, [sp, #-16]!
  44a694:	mrs	x1, tpidr_el0
  44a698:	movz	x0, #0x0, lsl #16
  44a69c:	movk	x0, #0x10
  44a6a0:	nop
  44a6a4:	nop
  44a6a8:	mov	x29, sp
  44a6ac:	add	x0, x1, x0
  44a6b0:	ldp	x29, x30, [sp], #16
  44a6b4:	ret
  44a6b8:	stp	x29, x30, [sp, #-64]!
  44a6bc:	mov	x29, sp
  44a6c0:	stp	x19, x20, [sp, #16]
  44a6c4:	mov	x19, x1
  44a6c8:	mov	x20, x0
  44a6cc:	mov	x0, x1
  44a6d0:	ldr	x1, [x1]
  44a6d4:	ldr	x1, [x1, #16]
  44a6d8:	str	x21, [sp, #32]
  44a6dc:	mov	x21, x2
  44a6e0:	ldr	x2, [x2]
  44a6e4:	str	x2, [sp, #56]
  44a6e8:	blr	x1
  44a6ec:	tst	w0, #0xff
  44a6f0:	b.eq	44a700 <_obstack_memory_used@@Base+0x5cfc>  // b.none
  44a6f4:	ldr	x0, [sp, #56]
  44a6f8:	ldr	x0, [x0]
  44a6fc:	str	x0, [sp, #56]
  44a700:	ldr	x4, [x20]
  44a704:	mov	x1, x19
  44a708:	mov	x0, x20
  44a70c:	add	x2, sp, #0x38
  44a710:	mov	w3, #0x1                   	// #1
  44a714:	ldr	x4, [x4, #32]
  44a718:	blr	x4
  44a71c:	tst	w0, #0xff
  44a720:	b.eq	44a72c <_obstack_memory_used@@Base+0x5d28>  // b.none
  44a724:	ldr	x1, [sp, #56]
  44a728:	str	x1, [x21]
  44a72c:	ldp	x19, x20, [sp, #16]
  44a730:	ldr	x21, [sp, #32]
  44a734:	ldp	x29, x30, [sp], #64
  44a738:	ret
  44a73c:	nop
  44a740:	and	w5, w0, #0xff
  44a744:	cmp	w5, #0x50
  44a748:	b.eq	44a860 <_obstack_memory_used@@Base+0x5e5c>  // b.none
  44a74c:	and	w4, w5, #0xf
  44a750:	cmp	w4, #0x4
  44a754:	b.eq	44a770 <_obstack_memory_used@@Base+0x5d6c>  // b.none
  44a758:	b.ls	44a784 <_obstack_memory_used@@Base+0x5d80>  // b.plast
  44a75c:	cmp	w4, #0xb
  44a760:	b.eq	44a884 <_obstack_memory_used@@Base+0x5e80>  // b.none
  44a764:	b.ls	44a7e0 <_obstack_memory_used@@Base+0x5ddc>  // b.plast
  44a768:	cmp	w4, #0xc
  44a76c:	b.ne	44a894 <_obstack_memory_used@@Base+0x5e90>  // b.any
  44a770:	mov	x0, x2
  44a774:	ldr	x4, [x0], #8
  44a778:	cbnz	x4, 44a840 <_obstack_memory_used@@Base+0x5e3c>
  44a77c:	str	x4, [x3]
  44a780:	ret
  44a784:	cmp	w4, #0x2
  44a788:	b.eq	44a874 <_obstack_memory_used@@Base+0x5e70>  // b.none
  44a78c:	b.ls	44a7a8 <_obstack_memory_used@@Base+0x5da4>  // b.plast
  44a790:	cmp	w4, #0x3
  44a794:	b.ne	44a894 <_obstack_memory_used@@Base+0x5e90>  // b.any
  44a798:	mov	x0, x2
  44a79c:	ldr	w4, [x0], #4
  44a7a0:	cbz	x4, 44a77c <_obstack_memory_used@@Base+0x5d78>
  44a7a4:	b	44a840 <_obstack_memory_used@@Base+0x5e3c>
  44a7a8:	cbz	w4, 44a770 <_obstack_memory_used@@Base+0x5d6c>
  44a7ac:	cmp	w4, #0x1
  44a7b0:	b.ne	44a894 <_obstack_memory_used@@Base+0x5e90>  // b.any
  44a7b4:	mov	x0, x2
  44a7b8:	mov	x4, #0x0                   	// #0
  44a7bc:	mov	w7, #0x0                   	// #0
  44a7c0:	ldrb	w8, [x0], #1
  44a7c4:	and	x6, x8, #0x7f
  44a7c8:	lsl	x6, x6, x7
  44a7cc:	add	w7, w7, #0x7
  44a7d0:	orr	x4, x4, x6
  44a7d4:	tbnz	w8, #7, 44a7c0 <_obstack_memory_used@@Base+0x5dbc>
  44a7d8:	cbz	x4, 44a77c <_obstack_memory_used@@Base+0x5d78>
  44a7dc:	b	44a840 <_obstack_memory_used@@Base+0x5e3c>
  44a7e0:	cmp	w4, #0x9
  44a7e4:	b.eq	44a800 <_obstack_memory_used@@Base+0x5dfc>  // b.none
  44a7e8:	cmp	w4, #0xa
  44a7ec:	b.ne	44a894 <_obstack_memory_used@@Base+0x5e90>  // b.any
  44a7f0:	mov	x0, x2
  44a7f4:	ldrsh	x4, [x0], #2
  44a7f8:	cbz	x4, 44a77c <_obstack_memory_used@@Base+0x5d78>
  44a7fc:	b	44a840 <_obstack_memory_used@@Base+0x5e3c>
  44a800:	mov	x0, x2
  44a804:	mov	x4, #0x0                   	// #0
  44a808:	mov	w7, #0x0                   	// #0
  44a80c:	ldrb	w8, [x0], #1
  44a810:	and	x6, x8, #0x7f
  44a814:	lsl	x6, x6, x7
  44a818:	add	w7, w7, #0x7
  44a81c:	orr	x4, x4, x6
  44a820:	tbnz	w8, #7, 44a80c <_obstack_memory_used@@Base+0x5e08>
  44a824:	cmp	w7, #0x3f
  44a828:	b.hi	44a778 <_obstack_memory_used@@Base+0x5d74>  // b.pmore
  44a82c:	tbz	w8, #6, 44a778 <_obstack_memory_used@@Base+0x5d74>
  44a830:	mov	x6, #0xffffffffffffffff    	// #-1
  44a834:	lsl	x7, x6, x7
  44a838:	orr	x4, x4, x7
  44a83c:	nop
  44a840:	and	w6, w5, #0x70
  44a844:	cmp	w6, #0x10
  44a848:	csel	x1, x2, x1, eq  // eq = none
  44a84c:	add	x4, x4, x1
  44a850:	tbz	w5, #7, 44a77c <_obstack_memory_used@@Base+0x5d78>
  44a854:	ldr	x4, [x4]
  44a858:	str	x4, [x3]
  44a85c:	ret
  44a860:	add	x0, x2, #0x7
  44a864:	and	x0, x0, #0xfffffffffffffff8
  44a868:	ldr	x4, [x0], #8
  44a86c:	str	x4, [x3]
  44a870:	ret
  44a874:	mov	x0, x2
  44a878:	ldrh	w4, [x0], #2
  44a87c:	cbz	x4, 44a77c <_obstack_memory_used@@Base+0x5d78>
  44a880:	b	44a840 <_obstack_memory_used@@Base+0x5e3c>
  44a884:	mov	x0, x2
  44a888:	ldrsw	x4, [x0], #4
  44a88c:	cbz	x4, 44a77c <_obstack_memory_used@@Base+0x5d78>
  44a890:	b	44a840 <_obstack_memory_used@@Base+0x5e3c>
  44a894:	stp	x29, x30, [sp, #-16]!
  44a898:	mov	x29, sp
  44a89c:	bl	402a50 <abort@plt>
  44a8a0:	stp	x29, x30, [sp, #-32]!
  44a8a4:	mov	x3, x0
  44a8a8:	mov	x29, sp
  44a8ac:	ldrb	w0, [x0, #40]
  44a8b0:	cmp	w0, #0xff
  44a8b4:	b.eq	44a940 <_obstack_memory_used@@Base+0x5f3c>  // b.none
  44a8b8:	and	w4, w0, #0x7
  44a8bc:	cmp	w4, #0x2
  44a8c0:	b.eq	44a920 <_obstack_memory_used@@Base+0x5f1c>  // b.none
  44a8c4:	b.ls	44a8f0 <_obstack_memory_used@@Base+0x5eec>  // b.plast
  44a8c8:	cmp	w4, #0x3
  44a8cc:	neg	x2, x1, lsl #2
  44a8d0:	b.ne	44a914 <_obstack_memory_used@@Base+0x5f10>  // b.any
  44a8d4:	ldp	x1, x4, [x3, #16]
  44a8d8:	add	x3, sp, #0x18
  44a8dc:	add	x2, x4, x2
  44a8e0:	bl	44a740 <_obstack_memory_used@@Base+0x5d3c>
  44a8e4:	ldr	x0, [sp, #24]
  44a8e8:	ldp	x29, x30, [sp], #32
  44a8ec:	ret
  44a8f0:	cbnz	w4, 44a91c <_obstack_memory_used@@Base+0x5f18>
  44a8f4:	neg	x2, x1, lsl #3
  44a8f8:	ldp	x1, x4, [x3, #16]
  44a8fc:	add	x3, sp, #0x18
  44a900:	add	x2, x4, x2
  44a904:	bl	44a740 <_obstack_memory_used@@Base+0x5d3c>
  44a908:	ldr	x0, [sp, #24]
  44a90c:	ldp	x29, x30, [sp], #32
  44a910:	ret
  44a914:	cmp	w4, #0x4
  44a918:	b.eq	44a8f4 <_obstack_memory_used@@Base+0x5ef0>  // b.none
  44a91c:	bl	402a50 <abort@plt>
  44a920:	neg	x2, x1, lsl #1
  44a924:	ldp	x1, x4, [x3, #16]
  44a928:	add	x3, sp, #0x18
  44a92c:	add	x2, x4, x2
  44a930:	bl	44a740 <_obstack_memory_used@@Base+0x5d3c>
  44a934:	ldr	x0, [sp, #24]
  44a938:	ldp	x29, x30, [sp], #32
  44a93c:	ret
  44a940:	ldp	x1, x4, [x3, #16]
  44a944:	mov	x2, #0x0                   	// #0
  44a948:	add	x3, sp, #0x18
  44a94c:	add	x2, x4, x2
  44a950:	bl	44a740 <_obstack_memory_used@@Base+0x5d3c>
  44a954:	ldr	x0, [sp, #24]
  44a958:	ldp	x29, x30, [sp], #32
  44a95c:	ret
  44a960:	stp	x29, x30, [sp, #-64]!
  44a964:	mov	x29, sp
  44a968:	stp	x21, x22, [sp, #32]
  44a96c:	mov	x22, x0
  44a970:	mvn	x0, x3
  44a974:	stp	x19, x20, [sp, #16]
  44a978:	add	x21, sp, #0x38
  44a97c:	mov	x20, x1
  44a980:	ldr	x19, [x22, #24]
  44a984:	str	x2, [sp, #56]
  44a988:	add	x19, x19, x0
  44a98c:	nop
  44a990:	mov	x1, #0x0                   	// #0
  44a994:	mov	w3, #0x0                   	// #0
  44a998:	ldrb	w4, [x19], #1
  44a99c:	and	x2, x4, #0x7f
  44a9a0:	lsl	x2, x2, x3
  44a9a4:	add	w3, w3, #0x7
  44a9a8:	orr	x1, x1, x2
  44a9ac:	tbnz	w4, #7, 44a998 <_obstack_memory_used@@Base+0x5f94>
  44a9b0:	cbz	x1, 44a9e0 <_obstack_memory_used@@Base+0x5fdc>
  44a9b4:	mov	x0, x22
  44a9b8:	bl	44a8a0 <_obstack_memory_used@@Base+0x5e9c>
  44a9bc:	mov	x2, x21
  44a9c0:	mov	x1, x20
  44a9c4:	bl	44a6b8 <_obstack_memory_used@@Base+0x5cb4>
  44a9c8:	ands	w0, w0, #0xff
  44a9cc:	b.eq	44a990 <_obstack_memory_used@@Base+0x5f8c>  // b.none
  44a9d0:	ldp	x19, x20, [sp, #16]
  44a9d4:	ldp	x21, x22, [sp, #32]
  44a9d8:	ldp	x29, x30, [sp], #64
  44a9dc:	ret
  44a9e0:	mov	w0, #0x0                   	// #0
  44a9e4:	ldp	x19, x20, [sp, #16]
  44a9e8:	ldp	x21, x22, [sp, #32]
  44a9ec:	ldp	x29, x30, [sp], #64
  44a9f0:	ret
  44a9f4:	nop
  44a9f8:	and	w3, w0, #0xff
  44a9fc:	cmp	w3, #0xff
  44aa00:	b.eq	44aa50 <_obstack_memory_used@@Base+0x604c>  // b.none
  44aa04:	and	w2, w3, #0x70
  44aa08:	mov	x0, x1
  44aa0c:	cmp	w2, #0x30
  44aa10:	b.eq	44aa58 <_obstack_memory_used@@Base+0x6054>  // b.none
  44aa14:	b.hi	44aa24 <_obstack_memory_used@@Base+0x6020>  // b.pmore
  44aa18:	cmp	w2, #0x20
  44aa1c:	b.ne	44aa30 <_obstack_memory_used@@Base+0x602c>  // b.any
  44aa20:	b	45c868 <_obstack_memory_used@@Base+0x17e64>
  44aa24:	cmp	w2, #0x40
  44aa28:	b.ne	44aa48 <_obstack_memory_used@@Base+0x6044>  // b.any
  44aa2c:	b	45c830 <_obstack_memory_used@@Base+0x17e2c>
  44aa30:	b.hi	44aa3c <_obstack_memory_used@@Base+0x6038>  // b.pmore
  44aa34:	tst	w3, #0x60
  44aa38:	b.eq	44aa50 <_obstack_memory_used@@Base+0x604c>  // b.none
  44aa3c:	stp	x29, x30, [sp, #-16]!
  44aa40:	mov	x29, sp
  44aa44:	bl	402a50 <abort@plt>
  44aa48:	cmp	w2, #0x50
  44aa4c:	b.ne	44aa3c <_obstack_memory_used@@Base+0x6038>  // b.any
  44aa50:	mov	x0, #0x0                   	// #0
  44aa54:	ret
  44aa58:	b	45c860 <_obstack_memory_used@@Base+0x17e5c>
  44aa5c:	nop
  44aa60:	stp	x29, x30, [sp, #-48]!
  44aa64:	mov	x29, sp
  44aa68:	stp	x19, x20, [sp, #16]
  44aa6c:	mov	x19, x1
  44aa70:	mov	x20, x2
  44aa74:	stp	x21, x22, [sp, #32]
  44aa78:	mov	x1, #0x0                   	// #0
  44aa7c:	mov	x21, x0
  44aa80:	cbz	x0, 44aa8c <_obstack_memory_used@@Base+0x6088>
  44aa84:	bl	45c830 <_obstack_memory_used@@Base+0x17e2c>
  44aa88:	mov	x1, x0
  44aa8c:	str	x1, [x20]
  44aa90:	ldrb	w22, [x19], #1
  44aa94:	cmp	w22, #0xff
  44aa98:	b.ne	44ab20 <_obstack_memory_used@@Base+0x611c>  // b.any
  44aa9c:	mov	x0, x19
  44aaa0:	str	x1, [x20, #8]
  44aaa4:	ldrb	w1, [x0], #1
  44aaa8:	strb	w1, [x20, #40]
  44aaac:	cmp	w1, #0xff
  44aab0:	b.eq	44ab58 <_obstack_memory_used@@Base+0x6154>  // b.none
  44aab4:	mov	x5, #0x0                   	// #0
  44aab8:	mov	w3, #0x0                   	// #0
  44aabc:	nop
  44aac0:	ldrb	w4, [x0], #1
  44aac4:	and	x1, x4, #0x7f
  44aac8:	lsl	x1, x1, x3
  44aacc:	add	w3, w3, #0x7
  44aad0:	orr	x5, x5, x1
  44aad4:	tbnz	w4, #7, 44aac0 <_obstack_memory_used@@Base+0x60bc>
  44aad8:	add	x5, x0, x5
  44aadc:	str	x5, [x20, #24]
  44aae0:	ldrb	w1, [x0], #1
  44aae4:	mov	x5, #0x0                   	// #0
  44aae8:	mov	w3, #0x0                   	// #0
  44aaec:	strb	w1, [x20, #41]
  44aaf0:	ldrb	w4, [x0], #1
  44aaf4:	and	x1, x4, #0x7f
  44aaf8:	lsl	x1, x1, x3
  44aafc:	add	w3, w3, #0x7
  44ab00:	orr	x5, x5, x1
  44ab04:	tbnz	w4, #7, 44aaf0 <_obstack_memory_used@@Base+0x60ec>
  44ab08:	add	x5, x0, x5
  44ab0c:	ldp	x21, x22, [sp, #32]
  44ab10:	str	x5, [x20, #32]
  44ab14:	ldp	x19, x20, [sp, #16]
  44ab18:	ldp	x29, x30, [sp], #48
  44ab1c:	ret
  44ab20:	mov	x1, x21
  44ab24:	mov	w0, w22
  44ab28:	bl	44a9f8 <_obstack_memory_used@@Base+0x5ff4>
  44ab2c:	mov	x1, x0
  44ab30:	mov	x2, x19
  44ab34:	mov	w0, w22
  44ab38:	add	x3, x20, #0x8
  44ab3c:	bl	44a740 <_obstack_memory_used@@Base+0x5d3c>
  44ab40:	mov	x19, x0
  44ab44:	mov	x0, x19
  44ab48:	ldrb	w1, [x0], #1
  44ab4c:	strb	w1, [x20, #40]
  44ab50:	cmp	w1, #0xff
  44ab54:	b.ne	44aab4 <_obstack_memory_used@@Base+0x60b0>  // b.any
  44ab58:	str	xzr, [x20, #24]
  44ab5c:	b	44aae0 <_obstack_memory_used@@Base+0x60dc>
  44ab60:	stp	x29, x30, [sp, #-240]!
  44ab64:	cmp	w0, #0x1
  44ab68:	mov	x29, sp
  44ab6c:	str	wzr, [sp, #156]
  44ab70:	str	xzr, [sp, #160]
  44ab74:	b.ne	44abd8 <_obstack_memory_used@@Base+0x61d4>  // b.any
  44ab78:	stp	x19, x20, [sp, #16]
  44ab7c:	mov	x20, #0xd500                	// #54528
  44ab80:	movk	x20, #0xbcd4, lsl #16
  44ab84:	movk	x20, #0xaabc, lsl #32
  44ab88:	stp	x21, x22, [sp, #32]
  44ab8c:	movk	x20, #0xb8b1, lsl #48
  44ab90:	add	x0, x2, x20
  44ab94:	stp	x23, x24, [sp, #48]
  44ab98:	cmp	x0, #0x1
  44ab9c:	stp	x25, x26, [sp, #64]
  44aba0:	mov	w22, w1
  44aba4:	mov	x21, x3
  44aba8:	stp	x27, x28, [sp, #80]
  44abac:	mov	x19, x4
  44abb0:	str	x0, [sp, #104]
  44abb4:	cset	w0, ls  // ls = plast
  44abb8:	str	w0, [sp, #128]
  44abbc:	cmp	w1, #0x6
  44abc0:	csel	w27, w0, wzr, eq  // eq = none
  44abc4:	cbz	w27, 44abe4 <_obstack_memory_used@@Base+0x61e0>
  44abc8:	ldur	x26, [x3, #-16]
  44abcc:	cbnz	x26, 44ad58 <_obstack_memory_used@@Base+0x6354>
  44abd0:	mov	x0, x21
  44abd4:	bl	450420 <_obstack_memory_used@@Base+0xba1c>
  44abd8:	mov	w0, #0x3                   	// #3
  44abdc:	ldp	x29, x30, [sp], #240
  44abe0:	ret
  44abe4:	mov	x0, x4
  44abe8:	bl	45c828 <_obstack_memory_used@@Base+0x17e24>
  44abec:	str	x0, [sp, #112]
  44abf0:	cbz	x0, 44adbc <_obstack_memory_used@@Base+0x63b8>
  44abf4:	ldr	x1, [sp, #112]
  44abf8:	add	x0, sp, #0xc0
  44abfc:	mov	x2, x0
  44ac00:	str	x0, [sp, #120]
  44ac04:	mov	x0, x19
  44ac08:	bl	44aa60 <_obstack_memory_used@@Base+0x605c>
  44ac0c:	mov	x20, x0
  44ac10:	ldrb	w0, [sp, #232]
  44ac14:	mov	x1, x19
  44ac18:	bl	44a9f8 <_obstack_memory_used@@Base+0x5ff4>
  44ac1c:	mov	x3, x0
  44ac20:	add	x1, sp, #0x9c
  44ac24:	mov	x0, x19
  44ac28:	str	x3, [sp, #208]
  44ac2c:	bl	45c808 <_obstack_memory_used@@Base+0x17e04>
  44ac30:	ldr	w3, [sp, #156]
  44ac34:	ldr	x1, [sp, #224]
  44ac38:	cmp	w3, #0x0
  44ac3c:	cset	x3, eq  // eq = none
  44ac40:	sub	x23, x0, x3
  44ac44:	cmp	x20, x1
  44ac48:	b.cs	44ad20 <_obstack_memory_used@@Base+0x631c>  // b.hs, b.nlast
  44ac4c:	add	x26, sp, #0xa8
  44ac50:	add	x25, sp, #0xb0
  44ac54:	add	x24, sp, #0xb8
  44ac58:	ldrb	w28, [sp, #233]
  44ac5c:	mov	x1, #0x0                   	// #0
  44ac60:	mov	w0, w28
  44ac64:	bl	44a9f8 <_obstack_memory_used@@Base+0x5ff4>
  44ac68:	mov	x2, x20
  44ac6c:	mov	x3, x26
  44ac70:	mov	x1, x0
  44ac74:	mov	w0, w28
  44ac78:	bl	44a740 <_obstack_memory_used@@Base+0x5d3c>
  44ac7c:	ldrb	w20, [sp, #233]
  44ac80:	mov	x28, x0
  44ac84:	mov	x1, #0x0                   	// #0
  44ac88:	mov	w0, w20
  44ac8c:	bl	44a9f8 <_obstack_memory_used@@Base+0x5ff4>
  44ac90:	mov	x2, x28
  44ac94:	mov	x3, x25
  44ac98:	mov	x1, x0
  44ac9c:	mov	w0, w20
  44aca0:	bl	44a740 <_obstack_memory_used@@Base+0x5d3c>
  44aca4:	ldrb	w20, [sp, #233]
  44aca8:	mov	x28, x0
  44acac:	mov	x1, #0x0                   	// #0
  44acb0:	mov	w0, w20
  44acb4:	bl	44a9f8 <_obstack_memory_used@@Base+0x5ff4>
  44acb8:	mov	x3, x24
  44acbc:	mov	x1, x0
  44acc0:	mov	x2, x28
  44acc4:	mov	w0, w20
  44acc8:	bl	44a740 <_obstack_memory_used@@Base+0x5d3c>
  44accc:	mov	x20, x0
  44acd0:	mov	w3, #0x0                   	// #0
  44acd4:	mov	x0, #0x0                   	// #0
  44acd8:	ldrb	w4, [x20], #1
  44acdc:	and	x1, x4, #0x7f
  44ace0:	lsl	x1, x1, x3
  44ace4:	add	w3, w3, #0x7
  44ace8:	orr	x0, x0, x1
  44acec:	tbnz	w4, #7, 44acd8 <_obstack_memory_used@@Base+0x62d4>
  44acf0:	ldr	x3, [sp, #168]
  44acf4:	ldr	x1, [sp, #192]
  44acf8:	add	x1, x1, x3
  44acfc:	cmp	x1, x23
  44ad00:	b.hi	44ad20 <_obstack_memory_used@@Base+0x631c>  // b.pmore
  44ad04:	ldr	x3, [sp, #176]
  44ad08:	add	x1, x1, x3
  44ad0c:	cmp	x1, x23
  44ad10:	b.hi	44ad9c <_obstack_memory_used@@Base+0x6398>  // b.pmore
  44ad14:	ldr	x0, [sp, #224]
  44ad18:	cmp	x0, x20
  44ad1c:	b.hi	44ac58 <_obstack_memory_used@@Base+0x6254>  // b.pmore
  44ad20:	tbz	w22, #0, 44addc <_obstack_memory_used@@Base+0x63d8>
  44ad24:	mov	w24, #0x0                   	// #0
  44ad28:	mov	x26, #0x0                   	// #0
  44ad2c:	mov	x23, #0x0                   	// #0
  44ad30:	ldr	x0, [sp, #104]
  44ad34:	cmp	x0, #0x1
  44ad38:	mov	w0, #0x6                   	// #6
  44ad3c:	b.hi	44adc0 <_obstack_memory_used@@Base+0x63bc>  // b.pmore
  44ad40:	ldr	x2, [sp, #112]
  44ad44:	stur	w24, [x21, #-36]
  44ad48:	ldr	x1, [sp, #160]
  44ad4c:	stp	x23, x2, [x21, #-32]
  44ad50:	stp	x26, x1, [x21, #-16]
  44ad54:	b	44adc0 <_obstack_memory_used@@Base+0x63bc>
  44ad58:	ldur	w24, [x3, #-36]
  44ad5c:	ldur	x0, [x3, #-24]
  44ad60:	str	x0, [sp, #112]
  44ad64:	tbnz	w24, #31, 44adf0 <_obstack_memory_used@@Base+0x63ec>
  44ad68:	mov	x2, x21
  44ad6c:	mov	x0, x19
  44ad70:	mov	w1, #0x0                   	// #0
  44ad74:	bl	45c7a8 <_obstack_memory_used@@Base+0x17da4>
  44ad78:	sxtw	x2, w24
  44ad7c:	mov	x0, x19
  44ad80:	mov	w1, #0x1                   	// #1
  44ad84:	bl	45c7a8 <_obstack_memory_used@@Base+0x17da4>
  44ad88:	mov	x0, x19
  44ad8c:	mov	x1, x26
  44ad90:	bl	45c820 <_obstack_memory_used@@Base+0x17e1c>
  44ad94:	mov	w0, #0x7                   	// #7
  44ad98:	b	44adc0 <_obstack_memory_used@@Base+0x63bc>
  44ad9c:	ldr	x26, [sp, #184]
  44ada0:	cbz	x26, 44adbc <_obstack_memory_used@@Base+0x63b8>
  44ada4:	ldr	x1, [sp, #200]
  44ada8:	add	x26, x26, x1
  44adac:	cbnz	x0, 44ae28 <_obstack_memory_used@@Base+0x6424>
  44adb0:	cbz	x26, 44adbc <_obstack_memory_used@@Base+0x63b8>
  44adb4:	and	w24, w22, #0x1
  44adb8:	tbz	w22, #0, 44ad68 <_obstack_memory_used@@Base+0x6364>
  44adbc:	mov	w0, #0x8                   	// #8
  44adc0:	ldp	x19, x20, [sp, #16]
  44adc4:	ldp	x21, x22, [sp, #32]
  44adc8:	ldp	x23, x24, [sp, #48]
  44adcc:	ldp	x25, x26, [sp, #64]
  44add0:	ldp	x27, x28, [sp, #80]
  44add4:	ldp	x29, x30, [sp], #240
  44add8:	ret
  44addc:	tbnz	w22, #3, 44adec <_obstack_memory_used@@Base+0x63e8>
  44ade0:	ldr	x0, [sp, #104]
  44ade4:	cmp	x0, #0x1
  44ade8:	b.ls	44abd0 <_obstack_memory_used@@Base+0x61cc>  // b.plast
  44adec:	bl	44b160 <_obstack_memory_used@@Base+0x675c>
  44adf0:	ldr	x1, [sp, #112]
  44adf4:	add	x2, sp, #0xc0
  44adf8:	mov	x0, x19
  44adfc:	bl	44aa60 <_obstack_memory_used@@Base+0x605c>
  44ae00:	ldrb	w0, [sp, #232]
  44ae04:	mov	x1, x19
  44ae08:	bl	44a9f8 <_obstack_memory_used@@Base+0x5ff4>
  44ae0c:	mov	x2, x0
  44ae10:	ldrb	w0, [sp, #232]
  44ae14:	mov	x1, x19
  44ae18:	str	x2, [sp, #208]
  44ae1c:	bl	44a9f8 <_obstack_memory_used@@Base+0x5ff4>
  44ae20:	stur	x0, [x21, #-16]
  44ae24:	b	44ad68 <_obstack_memory_used@@Base+0x6364>
  44ae28:	ldr	x4, [sp, #224]
  44ae2c:	sub	x0, x0, #0x1
  44ae30:	add	x23, x4, x0
  44ae34:	cbz	x26, 44adbc <_obstack_memory_used@@Base+0x63b8>
  44ae38:	cbz	x23, 44adb4 <_obstack_memory_used@@Base+0x63b0>
  44ae3c:	and	w0, w22, #0x8
  44ae40:	str	w0, [sp, #132]
  44ae44:	tbnz	w22, #3, 44aff4 <_obstack_memory_used@@Base+0x65f0>
  44ae48:	ldr	x0, [sp, #104]
  44ae4c:	adrp	x6, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44ae50:	cmp	x0, #0x1
  44ae54:	ldr	x6, [x6, #3848]
  44ae58:	b.ls	44b000 <_obstack_memory_used@@Base+0x65fc>  // b.plast
  44ae5c:	add	x28, sp, #0xa0
  44ae60:	mov	x5, #0x1                   	// #1
  44ae64:	nop
  44ae68:	mov	x25, x23
  44ae6c:	mov	x24, #0x0                   	// #0
  44ae70:	mov	w1, #0x0                   	// #0
  44ae74:	nop
  44ae78:	ldrb	w2, [x25], #1
  44ae7c:	and	x0, x2, #0x7f
  44ae80:	lsl	x0, x0, x1
  44ae84:	add	w1, w1, #0x7
  44ae88:	orr	x24, x24, x0
  44ae8c:	tbnz	w2, #7, 44ae78 <_obstack_memory_used@@Base+0x6474>
  44ae90:	cmp	w1, #0x3f
  44ae94:	b.hi	44aeac <_obstack_memory_used@@Base+0x64a8>  // b.pmore
  44ae98:	lsl	x0, x5, x1
  44ae9c:	neg	x0, x0
  44aea0:	orr	x0, x24, x0
  44aea4:	tst	x2, #0x40
  44aea8:	csel	x24, x0, x24, ne  // ne = any
  44aeac:	mov	x8, x25
  44aeb0:	mov	x20, #0x0                   	// #0
  44aeb4:	mov	w1, #0x0                   	// #0
  44aeb8:	ldrb	w2, [x8], #1
  44aebc:	and	x0, x2, #0x7f
  44aec0:	lsl	x0, x0, x1
  44aec4:	add	w1, w1, #0x7
  44aec8:	orr	x20, x20, x0
  44aecc:	tbnz	w2, #7, 44aeb8 <_obstack_memory_used@@Base+0x64b4>
  44aed0:	cmp	w1, #0x3f
  44aed4:	b.hi	44aeec <_obstack_memory_used@@Base+0x64e8>  // b.pmore
  44aed8:	lsl	x0, x5, x1
  44aedc:	neg	x0, x0
  44aee0:	orr	x0, x20, x0
  44aee4:	tst	x2, #0x40
  44aee8:	csel	x20, x0, x20, ne  // ne = any
  44aeec:	cmp	x24, #0x0
  44aef0:	cbz	x24, 44afb4 <_obstack_memory_used@@Base+0x65b0>
  44aef4:	b.gt	44af58 <_obstack_memory_used@@Base+0x6554>
  44aef8:	ldr	w0, [sp, #132]
  44aefc:	cmp	w0, #0x0
  44af00:	ldr	w0, [sp, #128]
  44af04:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  44af08:	ccmp	x6, #0x0, #0x4, ne  // ne = any
  44af0c:	b.ne	44afbc <_obstack_memory_used@@Base+0x65b8>  // b.any
  44af10:	ldr	x0, [sp, #216]
  44af14:	mvn	x8, x24
  44af18:	mov	x9, #0x0                   	// #0
  44af1c:	mov	w1, #0x0                   	// #0
  44af20:	add	x8, x0, x8
  44af24:	nop
  44af28:	ldrb	w2, [x8], #1
  44af2c:	and	x0, x2, #0x7f
  44af30:	lsl	x0, x0, x1
  44af34:	add	w1, w1, #0x7
  44af38:	orr	x9, x9, x0
  44af3c:	tbnz	w2, #7, 44af28 <_obstack_memory_used@@Base+0x6524>
  44af40:	cmp	x9, #0x0
  44af44:	cset	w0, eq  // eq = none
  44af48:	cbnz	w0, 44af94 <_obstack_memory_used@@Base+0x6590>
  44af4c:	cbz	x20, 44afec <_obstack_memory_used@@Base+0x65e8>
  44af50:	add	x23, x25, x20
  44af54:	b	44ae68 <_obstack_memory_used@@Base+0x6464>
  44af58:	ldr	x0, [sp, #120]
  44af5c:	mov	x1, x24
  44af60:	str	x6, [sp, #136]
  44af64:	bl	44a8a0 <_obstack_memory_used@@Base+0x5e9c>
  44af68:	cbz	x0, 44af94 <_obstack_memory_used@@Base+0x6590>
  44af6c:	ldr	x6, [sp, #136]
  44af70:	mov	x5, #0x1                   	// #1
  44af74:	cbz	x6, 44af4c <_obstack_memory_used@@Base+0x6548>
  44af78:	mov	x1, x6
  44af7c:	mov	x2, x28
  44af80:	bl	44a6b8 <_obstack_memory_used@@Base+0x5cb4>
  44af84:	tst	w0, #0xff
  44af88:	mov	x5, #0x1                   	// #1
  44af8c:	ldr	x6, [sp, #136]
  44af90:	b.eq	44af4c <_obstack_memory_used@@Base+0x6548>  // b.none
  44af94:	tbnz	w22, #0, 44ad30 <_obstack_memory_used@@Base+0x632c>
  44af98:	ldr	w0, [sp, #132]
  44af9c:	cbnz	w0, 44afac <_obstack_memory_used@@Base+0x65a8>
  44afa0:	ldr	x0, [sp, #104]
  44afa4:	cmp	x0, #0x1
  44afa8:	b.ls	44ad64 <_obstack_memory_used@@Base+0x6360>  // b.plast
  44afac:	tbz	w24, #31, 44ad68 <_obstack_memory_used@@Base+0x6364>
  44afb0:	bl	44b1b0 <_obstack_memory_used@@Base+0x67ac>
  44afb4:	mov	w27, #0x1                   	// #1
  44afb8:	b	44af4c <_obstack_memory_used@@Base+0x6548>
  44afbc:	ldr	x0, [sp, #120]
  44afc0:	mov	x1, x6
  44afc4:	ldr	x2, [sp, #160]
  44afc8:	mov	x3, x24
  44afcc:	str	x6, [sp, #136]
  44afd0:	bl	44a960 <_obstack_memory_used@@Base+0x5f5c>
  44afd4:	and	w0, w0, #0xff
  44afd8:	eor	w0, w0, #0x1
  44afdc:	mov	x5, #0x1                   	// #1
  44afe0:	ldr	x6, [sp, #136]
  44afe4:	cbz	w0, 44af4c <_obstack_memory_used@@Base+0x6548>
  44afe8:	b	44af94 <_obstack_memory_used@@Base+0x6590>
  44afec:	cbnz	w27, 44adb4 <_obstack_memory_used@@Base+0x63b0>
  44aff0:	b	44adbc <_obstack_memory_used@@Base+0x63b8>
  44aff4:	adrp	x6, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44aff8:	ldr	x6, [x6, #3784]
  44affc:	b	44ae5c <_obstack_memory_used@@Base+0x6458>
  44b000:	mov	x0, x21
  44b004:	ldr	x1, [x0], #32
  44b008:	tbz	w1, #0, 44b010 <_obstack_memory_used@@Base+0x660c>
  44b00c:	ldur	x0, [x21, #-80]
  44b010:	ldur	x6, [x0, #-112]
  44b014:	str	x0, [sp, #160]
  44b018:	b	44ae5c <_obstack_memory_used@@Base+0x6458>
  44b01c:	bl	44a3e8 <_obstack_memory_used@@Base+0x59e4>
  44b020:	bl	44b160 <_obstack_memory_used@@Base+0x675c>
  44b024:	nop
  44b028:	stp	x29, x30, [sp, #-112]!
  44b02c:	mov	x29, sp
  44b030:	stp	x19, x20, [sp, #16]
  44b034:	mov	x19, x0
  44b038:	stp	x21, x22, [sp, #32]
  44b03c:	str	x23, [sp, #48]
  44b040:	bl	44a3e8 <_obstack_memory_used@@Base+0x59e4>
  44b044:	ldp	x0, x21, [x19, #-64]
  44b048:	ldur	x1, [x19, #-16]
  44b04c:	str	x1, [sp, #80]
  44b050:	ldur	w20, [x19, #-36]
  44b054:	ldur	x19, [x19, #-24]
  44b058:	bl	44b170 <_obstack_memory_used@@Base+0x676c>
  44b05c:	bl	44a3e8 <_obstack_memory_used@@Base+0x59e4>
  44b060:	bl	44a668 <_obstack_memory_used@@Base+0x5c64>
  44b064:	ldr	x22, [x0]
  44b068:	ldr	x0, [x22, #80]
  44b06c:	tbz	w0, #0, 44b0f0 <_obstack_memory_used@@Base+0x66ec>
  44b070:	ldr	x22, [x22]
  44b074:	add	x23, sp, #0x40
  44b078:	mov	x1, x19
  44b07c:	mov	x2, x23
  44b080:	mov	x0, #0x0                   	// #0
  44b084:	bl	44aa60 <_obstack_memory_used@@Base+0x605c>
  44b088:	ldur	x1, [x22, #-112]
  44b08c:	sxtw	x20, w20
  44b090:	mov	x3, x20
  44b094:	mov	x2, x22
  44b098:	mov	x0, x23
  44b09c:	bl	44a960 <_obstack_memory_used@@Base+0x5f5c>
  44b0a0:	tst	w0, #0xff
  44b0a4:	b.ne	44b10c <_obstack_memory_used@@Base+0x6708>  // b.any
  44b0a8:	adrp	x19, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44b0ac:	mov	x3, x20
  44b0b0:	mov	x0, x23
  44b0b4:	mov	x2, #0x0                   	// #0
  44b0b8:	ldr	x1, [x19, #3976]
  44b0bc:	bl	44a960 <_obstack_memory_used@@Base+0x5f5c>
  44b0c0:	tst	w0, #0xff
  44b0c4:	b.eq	44b110 <_obstack_memory_used@@Base+0x670c>  // b.none
  44b0c8:	mov	x0, #0x8                   	// #8
  44b0cc:	bl	44a2a8 <_obstack_memory_used@@Base+0x58a4>
  44b0d0:	adrp	x3, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44b0d4:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44b0d8:	ldr	x1, [x19, #3976]
  44b0dc:	ldr	x3, [x3, #3744]
  44b0e0:	ldr	x2, [x2, #3704]
  44b0e4:	add	x3, x3, #0x10
  44b0e8:	str	x3, [x0]
  44b0ec:	bl	44b288 <_obstack_memory_used@@Base+0x6884>
  44b0f0:	add	x22, x22, #0x70
  44b0f4:	b	44b074 <_obstack_memory_used@@Base+0x6670>
  44b0f8:	mov	x19, x0
  44b0fc:	bl	44a488 <_obstack_memory_used@@Base+0x5a84>
  44b100:	bl	44a488 <_obstack_memory_used@@Base+0x5a84>
  44b104:	mov	x0, x19
  44b108:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  44b10c:	bl	44b2e8 <_obstack_memory_used@@Base+0x68e4>
  44b110:	mov	x0, x21
  44b114:	bl	44b118 <_obstack_memory_used@@Base+0x6714>
  44b118:	stp	x29, x30, [sp, #-16]!
  44b11c:	mov	x29, sp
  44b120:	blr	x0
  44b124:	bl	402a50 <abort@plt>
  44b128:	bl	44a3e8 <_obstack_memory_used@@Base+0x59e4>
  44b12c:	bl	402a50 <abort@plt>
  44b130:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44b134:	mov	x2, x0
  44b138:	ldr	x1, [x1, #3608]
  44b13c:	ldaxr	x0, [x1]
  44b140:	stlxr	w3, x2, [x1]
  44b144:	cbnz	w3, 44b13c <_obstack_memory_used@@Base+0x6738>
  44b148:	ret
  44b14c:	nop
  44b150:	adrp	x0, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44b154:	ldr	x0, [x0, #3608]
  44b158:	ldar	x0, [x0]
  44b15c:	ret
  44b160:	stp	x29, x30, [sp, #-16]!
  44b164:	mov	x29, sp
  44b168:	bl	44b150 <_obstack_memory_used@@Base+0x674c>
  44b16c:	bl	44b118 <_obstack_memory_used@@Base+0x6714>
  44b170:	stp	x29, x30, [sp, #-16]!
  44b174:	mov	x29, sp
  44b178:	blr	x0
  44b17c:	bl	44b160 <_obstack_memory_used@@Base+0x675c>
  44b180:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44b184:	mov	x2, x0
  44b188:	ldr	x1, [x1, #3832]
  44b18c:	ldaxr	x0, [x1]
  44b190:	stlxr	w3, x2, [x1]
  44b194:	cbnz	w3, 44b18c <_obstack_memory_used@@Base+0x6788>
  44b198:	ret
  44b19c:	nop
  44b1a0:	adrp	x0, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44b1a4:	ldr	x0, [x0, #3832]
  44b1a8:	ldar	x0, [x0]
  44b1ac:	ret
  44b1b0:	stp	x29, x30, [sp, #-16]!
  44b1b4:	mov	x29, sp
  44b1b8:	bl	44b1a0 <_obstack_memory_used@@Base+0x679c>
  44b1bc:	bl	44b170 <_obstack_memory_used@@Base+0x676c>
  44b1c0:	stp	x29, x30, [sp, #-32]!
  44b1c4:	cmp	w0, #0x1
  44b1c8:	mov	x29, sp
  44b1cc:	b.hi	44b218 <_obstack_memory_used@@Base+0x6814>  // b.pmore
  44b1d0:	sub	x0, x1, #0x60
  44b1d4:	ldaxr	w2, [x0]
  44b1d8:	sub	w2, w2, #0x1
  44b1dc:	stlxr	w3, w2, [x0]
  44b1e0:	cbnz	w3, 44b1d4 <_obstack_memory_used@@Base+0x67d0>
  44b1e4:	cbnz	w2, 44b210 <_obstack_memory_used@@Base+0x680c>
  44b1e8:	ldur	x2, [x1, #-72]
  44b1ec:	str	x19, [sp, #16]
  44b1f0:	add	x19, x1, #0x20
  44b1f4:	cbz	x2, 44b200 <_obstack_memory_used@@Base+0x67fc>
  44b1f8:	mov	x0, x19
  44b1fc:	blr	x2
  44b200:	mov	x0, x19
  44b204:	ldr	x19, [sp, #16]
  44b208:	ldp	x29, x30, [sp], #32
  44b20c:	b	44a310 <_obstack_memory_used@@Base+0x590c>
  44b210:	ldp	x29, x30, [sp], #32
  44b214:	ret
  44b218:	ldur	x0, [x1, #-56]
  44b21c:	str	x19, [sp, #16]
  44b220:	bl	44b118 <_obstack_memory_used@@Base+0x6714>
  44b224:	nop
  44b228:	stp	x29, x30, [sp, #-32]!
  44b22c:	mov	x29, sp
  44b230:	stp	x19, x20, [sp, #16]
  44b234:	mov	x19, x0
  44b238:	sub	x20, x0, #0x80
  44b23c:	stur	wzr, [x0, #-128]
  44b240:	stp	x1, x2, [x0, #-112]
  44b244:	bl	44b1a0 <_obstack_memory_used@@Base+0x679c>
  44b248:	stur	x0, [x19, #-96]
  44b24c:	bl	44b150 <_obstack_memory_used@@Base+0x674c>
  44b250:	mov	x3, x0
  44b254:	mov	x2, #0x2b00                	// #11008
  44b258:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x65fc>
  44b25c:	movk	x2, #0x432b, lsl #16
  44b260:	add	x1, x1, #0x1c0
  44b264:	movk	x2, #0x5543, lsl #32
  44b268:	stur	x3, [x19, #-88]
  44b26c:	movk	x2, #0x474e, lsl #48
  44b270:	stp	x2, x1, [x19, #-32]
  44b274:	mov	x0, x20
  44b278:	ldp	x19, x20, [sp, #16]
  44b27c:	ldp	x29, x30, [sp], #32
  44b280:	ret
  44b284:	nop
  44b288:	stp	x29, x30, [sp, #-48]!
  44b28c:	mov	x29, sp
  44b290:	stp	x19, x20, [sp, #16]
  44b294:	mov	x19, x0
  44b298:	mov	x20, x1
  44b29c:	str	x21, [sp, #32]
  44b2a0:	mov	x21, x2
  44b2a4:	bl	44a690 <_obstack_memory_used@@Base+0x5c8c>
  44b2a8:	mov	x3, x0
  44b2ac:	mov	x2, x21
  44b2b0:	mov	x1, x20
  44b2b4:	mov	x0, x19
  44b2b8:	ldr	w4, [x3, #8]
  44b2bc:	add	w4, w4, #0x1
  44b2c0:	str	w4, [x3, #8]
  44b2c4:	bl	44b228 <_obstack_memory_used@@Base+0x6824>
  44b2c8:	mov	x19, x0
  44b2cc:	mov	w0, #0x1                   	// #1
  44b2d0:	str	w0, [x19], #96
  44b2d4:	mov	x0, x19
  44b2d8:	bl	45c988 <_obstack_memory_used@@Base+0x17f84>
  44b2dc:	mov	x0, x19
  44b2e0:	bl	44a3e8 <_obstack_memory_used@@Base+0x59e4>
  44b2e4:	bl	44b160 <_obstack_memory_used@@Base+0x675c>
  44b2e8:	stp	x29, x30, [sp, #-32]!
  44b2ec:	mov	x29, sp
  44b2f0:	str	x19, [sp, #16]
  44b2f4:	bl	44a690 <_obstack_memory_used@@Base+0x5c8c>
  44b2f8:	ldr	w2, [x0, #8]
  44b2fc:	ldr	x1, [x0]
  44b300:	add	w2, w2, #0x1
  44b304:	str	w2, [x0, #8]
  44b308:	cbz	x1, 44b344 <_obstack_memory_used@@Base+0x6940>
  44b30c:	mov	x3, #0xd500                	// #54528
  44b310:	ldr	x2, [x1, #80]
  44b314:	movk	x3, #0xbcd4, lsl #16
  44b318:	movk	x3, #0xaabc, lsl #32
  44b31c:	movk	x3, #0xb8b1, lsl #48
  44b320:	add	x2, x2, x3
  44b324:	cmp	x2, #0x1
  44b328:	b.ls	44b348 <_obstack_memory_used@@Base+0x6944>  // b.plast
  44b32c:	str	xzr, [x0]
  44b330:	add	x19, x1, #0x50
  44b334:	mov	x0, x19
  44b338:	bl	45cd28 <_obstack_memory_used@@Base+0x18324>
  44b33c:	mov	x0, x19
  44b340:	bl	44a3e8 <_obstack_memory_used@@Base+0x59e4>
  44b344:	bl	44b160 <_obstack_memory_used@@Base+0x675c>
  44b348:	ldr	w0, [x1, #40]
  44b34c:	neg	w0, w0
  44b350:	str	w0, [x1, #40]
  44b354:	b	44b330 <_obstack_memory_used@@Base+0x692c>
  44b358:	adrp	x1, 495000 <_obstack_memory_used@@Base+0x505fc>
  44b35c:	mov	x2, x0
  44b360:	add	x1, x1, #0xb40
  44b364:	ldaxr	x0, [x1]
  44b368:	stlxr	w3, x2, [x1]
  44b36c:	cbnz	w3, 44b364 <_obstack_memory_used@@Base+0x6960>
  44b370:	ret
  44b374:	nop
  44b378:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  44b37c:	add	x0, x0, #0xb40
  44b380:	ldar	x0, [x0]
  44b384:	ret
  44b388:	stp	x29, x30, [sp, #-16]!
  44b38c:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x285fc>
  44b390:	add	x1, x1, #0x248
  44b394:	mov	x2, #0x1b                  	// #27
  44b398:	mov	x29, sp
  44b39c:	mov	w0, #0x2                   	// #2
  44b3a0:	bl	402a30 <write@plt>
  44b3a4:	bl	44b160 <_obstack_memory_used@@Base+0x675c>
  44b3a8:	stp	x29, x30, [sp, #-16]!
  44b3ac:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x285fc>
  44b3b0:	add	x1, x1, #0x268
  44b3b4:	mov	x2, #0x1e                  	// #30
  44b3b8:	mov	x29, sp
  44b3bc:	mov	w0, #0x2                   	// #2
  44b3c0:	bl	402a30 <write@plt>
  44b3c4:	bl	44b160 <_obstack_memory_used@@Base+0x675c>
  44b3c8:	ldr	x0, [x0, #8]
  44b3cc:	ret
  44b3d0:	ldr	x0, [x0, #8]
  44b3d4:	ret
  44b3d8:	stp	x29, x30, [sp, #-48]!
  44b3dc:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44b3e0:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44b3e4:	mov	x29, sp
  44b3e8:	ldr	x1, [x1, #3792]
  44b3ec:	ldr	x3, [x0, #8]
  44b3f0:	str	x19, [sp, #16]
  44b3f4:	ldr	x2, [x2, #3984]
  44b3f8:	add	x1, x1, #0x10
  44b3fc:	str	x1, [x0]
  44b400:	mov	x19, x0
  44b404:	sub	x0, x3, #0x18
  44b408:	cmp	x0, x2
  44b40c:	b.ne	44b424 <_obstack_memory_used@@Base+0x6a20>  // b.any
  44b410:	mov	x0, x19
  44b414:	bl	44a558 <_obstack_memory_used@@Base+0x5b54>
  44b418:	ldr	x19, [sp, #16]
  44b41c:	ldp	x29, x30, [sp], #48
  44b420:	ret
  44b424:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44b428:	ldr	x1, [x1, #3600]
  44b42c:	cbz	x1, 44b458 <_obstack_memory_used@@Base+0x6a54>
  44b430:	sub	x3, x3, #0x8
  44b434:	ldaxr	w1, [x3]
  44b438:	sub	w2, w1, #0x1
  44b43c:	stlxr	w4, w2, [x3]
  44b440:	cbnz	w4, 44b434 <_obstack_memory_used@@Base+0x6a30>
  44b444:	cmp	w1, #0x0
  44b448:	b.gt	44b410 <_obstack_memory_used@@Base+0x6a0c>
  44b44c:	add	x1, sp, #0x28
  44b450:	bl	44ddb0 <_obstack_memory_used@@Base+0x93ac>
  44b454:	b	44b410 <_obstack_memory_used@@Base+0x6a0c>
  44b458:	ldur	w1, [x3, #-8]
  44b45c:	sub	w2, w1, #0x1
  44b460:	stur	w2, [x3, #-8]
  44b464:	b	44b444 <_obstack_memory_used@@Base+0x6a40>
  44b468:	stp	x29, x30, [sp, #-32]!
  44b46c:	mov	x29, sp
  44b470:	str	x19, [sp, #16]
  44b474:	mov	x19, x0
  44b478:	bl	44b3d8 <_obstack_memory_used@@Base+0x69d4>
  44b47c:	mov	x0, x19
  44b480:	ldr	x19, [sp, #16]
  44b484:	ldp	x29, x30, [sp], #32
  44b488:	b	445770 <_obstack_memory_used@@Base+0xd6c>
  44b48c:	nop
  44b490:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44b494:	ldr	x1, [x1, #3824]
  44b498:	add	x1, x1, #0x10
  44b49c:	str	x1, [x0]
  44b4a0:	b	44b3d8 <_obstack_memory_used@@Base+0x69d4>
  44b4a4:	nop
  44b4a8:	stp	x29, x30, [sp, #-32]!
  44b4ac:	mov	x29, sp
  44b4b0:	str	x19, [sp, #16]
  44b4b4:	mov	x19, x0
  44b4b8:	bl	44b490 <_obstack_memory_used@@Base+0x6a8c>
  44b4bc:	mov	x0, x19
  44b4c0:	ldr	x19, [sp, #16]
  44b4c4:	ldp	x29, x30, [sp], #32
  44b4c8:	b	445770 <_obstack_memory_used@@Base+0xd6c>
  44b4cc:	nop
  44b4d0:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44b4d4:	ldr	x1, [x1, #3920]
  44b4d8:	add	x1, x1, #0x10
  44b4dc:	str	x1, [x0]
  44b4e0:	b	44b3d8 <_obstack_memory_used@@Base+0x69d4>
  44b4e4:	nop
  44b4e8:	stp	x29, x30, [sp, #-32]!
  44b4ec:	mov	x29, sp
  44b4f0:	str	x19, [sp, #16]
  44b4f4:	mov	x19, x0
  44b4f8:	bl	44b4d0 <_obstack_memory_used@@Base+0x6acc>
  44b4fc:	mov	x0, x19
  44b500:	ldr	x19, [sp, #16]
  44b504:	ldp	x29, x30, [sp], #32
  44b508:	b	445770 <_obstack_memory_used@@Base+0xd6c>
  44b50c:	nop
  44b510:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44b514:	ldr	x1, [x1, #3864]
  44b518:	add	x1, x1, #0x10
  44b51c:	str	x1, [x0]
  44b520:	b	44b3d8 <_obstack_memory_used@@Base+0x69d4>
  44b524:	nop
  44b528:	stp	x29, x30, [sp, #-32]!
  44b52c:	mov	x29, sp
  44b530:	str	x19, [sp, #16]
  44b534:	mov	x19, x0
  44b538:	bl	44b510 <_obstack_memory_used@@Base+0x6b0c>
  44b53c:	mov	x0, x19
  44b540:	ldr	x19, [sp, #16]
  44b544:	ldp	x29, x30, [sp], #32
  44b548:	b	445770 <_obstack_memory_used@@Base+0xd6c>
  44b54c:	nop
  44b550:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44b554:	ldr	x1, [x1, #3880]
  44b558:	add	x1, x1, #0x10
  44b55c:	str	x1, [x0]
  44b560:	b	44b3d8 <_obstack_memory_used@@Base+0x69d4>
  44b564:	nop
  44b568:	stp	x29, x30, [sp, #-32]!
  44b56c:	mov	x29, sp
  44b570:	str	x19, [sp, #16]
  44b574:	mov	x19, x0
  44b578:	bl	44b550 <_obstack_memory_used@@Base+0x6b4c>
  44b57c:	mov	x0, x19
  44b580:	ldr	x19, [sp, #16]
  44b584:	ldp	x29, x30, [sp], #32
  44b588:	b	445770 <_obstack_memory_used@@Base+0xd6c>
  44b58c:	nop
  44b590:	stp	x29, x30, [sp, #-48]!
  44b594:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44b598:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44b59c:	mov	x29, sp
  44b5a0:	ldr	x1, [x1, #3992]
  44b5a4:	ldr	x3, [x0, #8]
  44b5a8:	str	x19, [sp, #16]
  44b5ac:	ldr	x2, [x2, #3984]
  44b5b0:	add	x1, x1, #0x10
  44b5b4:	str	x1, [x0]
  44b5b8:	mov	x19, x0
  44b5bc:	sub	x0, x3, #0x18
  44b5c0:	cmp	x0, x2
  44b5c4:	b.ne	44b5dc <_obstack_memory_used@@Base+0x6bd8>  // b.any
  44b5c8:	mov	x0, x19
  44b5cc:	bl	44a558 <_obstack_memory_used@@Base+0x5b54>
  44b5d0:	ldr	x19, [sp, #16]
  44b5d4:	ldp	x29, x30, [sp], #48
  44b5d8:	ret
  44b5dc:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44b5e0:	ldr	x1, [x1, #3600]
  44b5e4:	cbz	x1, 44b610 <_obstack_memory_used@@Base+0x6c0c>
  44b5e8:	sub	x3, x3, #0x8
  44b5ec:	ldaxr	w1, [x3]
  44b5f0:	sub	w2, w1, #0x1
  44b5f4:	stlxr	w4, w2, [x3]
  44b5f8:	cbnz	w4, 44b5ec <_obstack_memory_used@@Base+0x6be8>
  44b5fc:	cmp	w1, #0x0
  44b600:	b.gt	44b5c8 <_obstack_memory_used@@Base+0x6bc4>
  44b604:	add	x1, sp, #0x28
  44b608:	bl	44ddb0 <_obstack_memory_used@@Base+0x93ac>
  44b60c:	b	44b5c8 <_obstack_memory_used@@Base+0x6bc4>
  44b610:	ldur	w1, [x3, #-8]
  44b614:	sub	w2, w1, #0x1
  44b618:	stur	w2, [x3, #-8]
  44b61c:	b	44b5fc <_obstack_memory_used@@Base+0x6bf8>
  44b620:	stp	x29, x30, [sp, #-32]!
  44b624:	mov	x29, sp
  44b628:	str	x19, [sp, #16]
  44b62c:	mov	x19, x0
  44b630:	bl	44b590 <_obstack_memory_used@@Base+0x6b8c>
  44b634:	mov	x0, x19
  44b638:	ldr	x19, [sp, #16]
  44b63c:	ldp	x29, x30, [sp], #32
  44b640:	b	445770 <_obstack_memory_used@@Base+0xd6c>
  44b644:	nop
  44b648:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44b64c:	ldr	x1, [x1, #3872]
  44b650:	add	x1, x1, #0x10
  44b654:	str	x1, [x0]
  44b658:	b	44b590 <_obstack_memory_used@@Base+0x6b8c>
  44b65c:	nop
  44b660:	stp	x29, x30, [sp, #-32]!
  44b664:	mov	x29, sp
  44b668:	str	x19, [sp, #16]
  44b66c:	mov	x19, x0
  44b670:	bl	44b648 <_obstack_memory_used@@Base+0x6c44>
  44b674:	mov	x0, x19
  44b678:	ldr	x19, [sp, #16]
  44b67c:	ldp	x29, x30, [sp], #32
  44b680:	b	445770 <_obstack_memory_used@@Base+0xd6c>
  44b684:	nop
  44b688:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44b68c:	ldr	x1, [x1, #3928]
  44b690:	add	x1, x1, #0x10
  44b694:	str	x1, [x0]
  44b698:	b	44b590 <_obstack_memory_used@@Base+0x6b8c>
  44b69c:	nop
  44b6a0:	stp	x29, x30, [sp, #-32]!
  44b6a4:	mov	x29, sp
  44b6a8:	str	x19, [sp, #16]
  44b6ac:	mov	x19, x0
  44b6b0:	bl	44b688 <_obstack_memory_used@@Base+0x6c84>
  44b6b4:	mov	x0, x19
  44b6b8:	ldr	x19, [sp, #16]
  44b6bc:	ldp	x29, x30, [sp], #32
  44b6c0:	b	445770 <_obstack_memory_used@@Base+0xd6c>
  44b6c4:	nop
  44b6c8:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44b6cc:	ldr	x1, [x1, #4040]
  44b6d0:	add	x1, x1, #0x10
  44b6d4:	str	x1, [x0]
  44b6d8:	b	44b590 <_obstack_memory_used@@Base+0x6b8c>
  44b6dc:	nop
  44b6e0:	stp	x29, x30, [sp, #-32]!
  44b6e4:	mov	x29, sp
  44b6e8:	str	x19, [sp, #16]
  44b6ec:	mov	x19, x0
  44b6f0:	bl	44b6c8 <_obstack_memory_used@@Base+0x6cc4>
  44b6f4:	mov	x0, x19
  44b6f8:	ldr	x19, [sp, #16]
  44b6fc:	ldp	x29, x30, [sp], #32
  44b700:	b	445770 <_obstack_memory_used@@Base+0xd6c>
  44b704:	nop
  44b708:	stp	x29, x30, [sp, #-32]!
  44b70c:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44b710:	mov	x29, sp
  44b714:	ldr	x2, [x2, #3792]
  44b718:	str	x19, [sp, #16]
  44b71c:	mov	x19, x0
  44b720:	add	x2, x2, #0x10
  44b724:	str	x2, [x0], #8
  44b728:	bl	44f4f8 <_obstack_memory_used@@Base+0xaaf4>
  44b72c:	ldr	x19, [sp, #16]
  44b730:	ldp	x29, x30, [sp], #32
  44b734:	ret
  44b738:	mov	x1, x0
  44b73c:	mov	x0, x19
  44b740:	mov	x19, x1
  44b744:	bl	44a558 <_obstack_memory_used@@Base+0x5b54>
  44b748:	mov	x0, x19
  44b74c:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  44b750:	stp	x29, x30, [sp, #-32]!
  44b754:	mov	x29, sp
  44b758:	str	x19, [sp, #16]
  44b75c:	mov	x19, x0
  44b760:	bl	44b708 <_obstack_memory_used@@Base+0x6d04>
  44b764:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44b768:	ldr	x1, [x1, #3824]
  44b76c:	add	x1, x1, #0x10
  44b770:	str	x1, [x19]
  44b774:	ldr	x19, [sp, #16]
  44b778:	ldp	x29, x30, [sp], #32
  44b77c:	ret
  44b780:	stp	x29, x30, [sp, #-32]!
  44b784:	mov	x29, sp
  44b788:	str	x19, [sp, #16]
  44b78c:	mov	x19, x0
  44b790:	bl	44b708 <_obstack_memory_used@@Base+0x6d04>
  44b794:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44b798:	ldr	x1, [x1, #3920]
  44b79c:	add	x1, x1, #0x10
  44b7a0:	str	x1, [x19]
  44b7a4:	ldr	x19, [sp, #16]
  44b7a8:	ldp	x29, x30, [sp], #32
  44b7ac:	ret
  44b7b0:	stp	x29, x30, [sp, #-32]!
  44b7b4:	mov	x29, sp
  44b7b8:	str	x19, [sp, #16]
  44b7bc:	mov	x19, x0
  44b7c0:	bl	44b708 <_obstack_memory_used@@Base+0x6d04>
  44b7c4:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44b7c8:	ldr	x1, [x1, #3864]
  44b7cc:	add	x1, x1, #0x10
  44b7d0:	str	x1, [x19]
  44b7d4:	ldr	x19, [sp, #16]
  44b7d8:	ldp	x29, x30, [sp], #32
  44b7dc:	ret
  44b7e0:	stp	x29, x30, [sp, #-32]!
  44b7e4:	mov	x29, sp
  44b7e8:	str	x19, [sp, #16]
  44b7ec:	mov	x19, x0
  44b7f0:	bl	44b708 <_obstack_memory_used@@Base+0x6d04>
  44b7f4:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44b7f8:	ldr	x1, [x1, #3880]
  44b7fc:	add	x1, x1, #0x10
  44b800:	str	x1, [x19]
  44b804:	ldr	x19, [sp, #16]
  44b808:	ldp	x29, x30, [sp], #32
  44b80c:	ret
  44b810:	stp	x29, x30, [sp, #-32]!
  44b814:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44b818:	mov	x29, sp
  44b81c:	ldr	x2, [x2, #3992]
  44b820:	str	x19, [sp, #16]
  44b824:	mov	x19, x0
  44b828:	add	x2, x2, #0x10
  44b82c:	str	x2, [x0], #8
  44b830:	bl	44f4f8 <_obstack_memory_used@@Base+0xaaf4>
  44b834:	ldr	x19, [sp, #16]
  44b838:	ldp	x29, x30, [sp], #32
  44b83c:	ret
  44b840:	mov	x1, x0
  44b844:	mov	x0, x19
  44b848:	mov	x19, x1
  44b84c:	bl	44a558 <_obstack_memory_used@@Base+0x5b54>
  44b850:	mov	x0, x19
  44b854:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  44b858:	stp	x29, x30, [sp, #-32]!
  44b85c:	mov	x29, sp
  44b860:	str	x19, [sp, #16]
  44b864:	mov	x19, x0
  44b868:	bl	44b810 <_obstack_memory_used@@Base+0x6e0c>
  44b86c:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44b870:	ldr	x1, [x1, #3872]
  44b874:	add	x1, x1, #0x10
  44b878:	str	x1, [x19]
  44b87c:	ldr	x19, [sp, #16]
  44b880:	ldp	x29, x30, [sp], #32
  44b884:	ret
  44b888:	stp	x29, x30, [sp, #-32]!
  44b88c:	mov	x29, sp
  44b890:	str	x19, [sp, #16]
  44b894:	mov	x19, x0
  44b898:	bl	44b810 <_obstack_memory_used@@Base+0x6e0c>
  44b89c:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44b8a0:	ldr	x1, [x1, #3928]
  44b8a4:	add	x1, x1, #0x10
  44b8a8:	str	x1, [x19]
  44b8ac:	ldr	x19, [sp, #16]
  44b8b0:	ldp	x29, x30, [sp], #32
  44b8b4:	ret
  44b8b8:	stp	x29, x30, [sp, #-32]!
  44b8bc:	mov	x29, sp
  44b8c0:	str	x19, [sp, #16]
  44b8c4:	mov	x19, x0
  44b8c8:	bl	44b810 <_obstack_memory_used@@Base+0x6e0c>
  44b8cc:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44b8d0:	ldr	x1, [x1, #4040]
  44b8d4:	add	x1, x1, #0x10
  44b8d8:	str	x1, [x19]
  44b8dc:	ldr	x19, [sp, #16]
  44b8e0:	ldp	x29, x30, [sp], #32
  44b8e4:	ret
  44b8e8:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44b8ec:	ldr	x1, [x1, #3984]
  44b8f0:	cmp	x0, x1
  44b8f4:	b.ne	44b8fc <_obstack_memory_used@@Base+0x6ef8>  // b.any
  44b8f8:	ret
  44b8fc:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44b900:	ldr	x1, [x1, #3600]
  44b904:	cbz	x1, 44b93c <_obstack_memory_used@@Base+0x6f38>
  44b908:	add	x2, x0, #0x10
  44b90c:	ldaxr	w1, [x2]
  44b910:	sub	w3, w1, #0x1
  44b914:	stlxr	w4, w3, [x2]
  44b918:	cbnz	w4, 44b90c <_obstack_memory_used@@Base+0x6f08>
  44b91c:	cmp	w1, #0x0
  44b920:	b.gt	44b8f8 <_obstack_memory_used@@Base+0x6ef4>
  44b924:	stp	x29, x30, [sp, #-32]!
  44b928:	mov	x29, sp
  44b92c:	add	x1, sp, #0x18
  44b930:	bl	44ddb0 <_obstack_memory_used@@Base+0x93ac>
  44b934:	ldp	x29, x30, [sp], #32
  44b938:	ret
  44b93c:	ldr	w1, [x0, #16]
  44b940:	sub	w2, w1, #0x1
  44b944:	str	w2, [x0, #16]
  44b948:	b	44b91c <_obstack_memory_used@@Base+0x6f18>
  44b94c:	nop
  44b950:	stp	x29, x30, [sp, #-16]!
  44b954:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44b958:	add	x1, x1, #0x8
  44b95c:	mov	x29, sp
  44b960:	ldr	x2, [x2, #3792]
  44b964:	add	x2, x2, #0x10
  44b968:	str	x2, [x0], #8
  44b96c:	bl	44f4f8 <_obstack_memory_used@@Base+0xaaf4>
  44b970:	ldp	x29, x30, [sp], #16
  44b974:	ret
  44b978:	stp	x29, x30, [sp, #-32]!
  44b97c:	add	x1, x1, #0x8
  44b980:	mov	x29, sp
  44b984:	str	x19, [sp, #16]
  44b988:	mov	x19, x0
  44b98c:	add	x0, x0, #0x8
  44b990:	bl	44f638 <_obstack_memory_used@@Base+0xac34>
  44b994:	mov	x0, x19
  44b998:	ldr	x19, [sp, #16]
  44b99c:	ldp	x29, x30, [sp], #32
  44b9a0:	ret
  44b9a4:	nop
  44b9a8:	adrp	x3, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44b9ac:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44b9b0:	ldr	x4, [x1, #8]
  44b9b4:	ldr	x3, [x3, #3792]
  44b9b8:	ldr	x2, [x2, #3984]
  44b9bc:	add	x3, x3, #0x10
  44b9c0:	stp	x3, x4, [x0]
  44b9c4:	add	x2, x2, #0x18
  44b9c8:	str	x2, [x1, #8]
  44b9cc:	ret
  44b9d0:	stp	x29, x30, [sp, #-32]!
  44b9d4:	add	x1, x1, #0x8
  44b9d8:	mov	x29, sp
  44b9dc:	str	x19, [sp, #16]
  44b9e0:	mov	x19, x0
  44b9e4:	add	x0, x0, #0x8
  44b9e8:	bl	44d038 <_obstack_memory_used@@Base+0x8634>
  44b9ec:	mov	x0, x19
  44b9f0:	ldr	x19, [sp, #16]
  44b9f4:	ldp	x29, x30, [sp], #32
  44b9f8:	ret
  44b9fc:	nop
  44ba00:	stp	x29, x30, [sp, #-16]!
  44ba04:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44ba08:	add	x1, x1, #0x8
  44ba0c:	mov	x29, sp
  44ba10:	ldr	x2, [x2, #3992]
  44ba14:	add	x2, x2, #0x10
  44ba18:	str	x2, [x0], #8
  44ba1c:	bl	44f4f8 <_obstack_memory_used@@Base+0xaaf4>
  44ba20:	ldp	x29, x30, [sp], #16
  44ba24:	ret
  44ba28:	stp	x29, x30, [sp, #-32]!
  44ba2c:	add	x1, x1, #0x8
  44ba30:	mov	x29, sp
  44ba34:	str	x19, [sp, #16]
  44ba38:	mov	x19, x0
  44ba3c:	add	x0, x0, #0x8
  44ba40:	bl	44f638 <_obstack_memory_used@@Base+0xac34>
  44ba44:	mov	x0, x19
  44ba48:	ldr	x19, [sp, #16]
  44ba4c:	ldp	x29, x30, [sp], #32
  44ba50:	ret
  44ba54:	nop
  44ba58:	adrp	x3, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44ba5c:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44ba60:	ldr	x4, [x1, #8]
  44ba64:	ldr	x3, [x3, #3992]
  44ba68:	ldr	x2, [x2, #3984]
  44ba6c:	add	x3, x3, #0x10
  44ba70:	stp	x3, x4, [x0]
  44ba74:	add	x2, x2, #0x18
  44ba78:	str	x2, [x1, #8]
  44ba7c:	ret
  44ba80:	stp	x29, x30, [sp, #-32]!
  44ba84:	add	x1, x1, #0x8
  44ba88:	mov	x29, sp
  44ba8c:	str	x19, [sp, #16]
  44ba90:	mov	x19, x0
  44ba94:	add	x0, x0, #0x8
  44ba98:	bl	44d038 <_obstack_memory_used@@Base+0x8634>
  44ba9c:	mov	x0, x19
  44baa0:	ldr	x19, [sp, #16]
  44baa4:	ldp	x29, x30, [sp], #32
  44baa8:	ret
  44baac:	nop
  44bab0:	stp	x29, x30, [sp, #-48]!
  44bab4:	adrp	x3, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44bab8:	mov	x29, sp
  44babc:	ldr	x3, [x3, #3792]
  44bac0:	str	x19, [sp, #16]
  44bac4:	mov	x19, x0
  44bac8:	add	x2, sp, #0x28
  44bacc:	add	x3, x3, #0x10
  44bad0:	str	x3, [x0], #8
  44bad4:	bl	44fff0 <_obstack_memory_used@@Base+0xb5ec>
  44bad8:	ldr	x19, [sp, #16]
  44badc:	ldp	x29, x30, [sp], #48
  44bae0:	ret
  44bae4:	mov	x1, x0
  44bae8:	mov	x0, x19
  44baec:	mov	x19, x1
  44baf0:	bl	44a558 <_obstack_memory_used@@Base+0x5b54>
  44baf4:	mov	x0, x19
  44baf8:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  44bafc:	nop
  44bb00:	stp	x29, x30, [sp, #-32]!
  44bb04:	mov	x29, sp
  44bb08:	str	x19, [sp, #16]
  44bb0c:	mov	x19, x0
  44bb10:	bl	44bab0 <_obstack_memory_used@@Base+0x70ac>
  44bb14:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44bb18:	ldr	x1, [x1, #3824]
  44bb1c:	add	x1, x1, #0x10
  44bb20:	str	x1, [x19]
  44bb24:	ldr	x19, [sp, #16]
  44bb28:	ldp	x29, x30, [sp], #32
  44bb2c:	ret
  44bb30:	stp	x29, x30, [sp, #-32]!
  44bb34:	mov	x29, sp
  44bb38:	str	x19, [sp, #16]
  44bb3c:	mov	x19, x0
  44bb40:	bl	44bab0 <_obstack_memory_used@@Base+0x70ac>
  44bb44:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44bb48:	ldr	x1, [x1, #3920]
  44bb4c:	add	x1, x1, #0x10
  44bb50:	str	x1, [x19]
  44bb54:	ldr	x19, [sp, #16]
  44bb58:	ldp	x29, x30, [sp], #32
  44bb5c:	ret
  44bb60:	stp	x29, x30, [sp, #-32]!
  44bb64:	mov	x29, sp
  44bb68:	str	x19, [sp, #16]
  44bb6c:	mov	x19, x0
  44bb70:	bl	44bab0 <_obstack_memory_used@@Base+0x70ac>
  44bb74:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44bb78:	ldr	x1, [x1, #3864]
  44bb7c:	add	x1, x1, #0x10
  44bb80:	str	x1, [x19]
  44bb84:	ldr	x19, [sp, #16]
  44bb88:	ldp	x29, x30, [sp], #32
  44bb8c:	ret
  44bb90:	stp	x29, x30, [sp, #-32]!
  44bb94:	mov	x29, sp
  44bb98:	str	x19, [sp, #16]
  44bb9c:	mov	x19, x0
  44bba0:	bl	44bab0 <_obstack_memory_used@@Base+0x70ac>
  44bba4:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44bba8:	ldr	x1, [x1, #3880]
  44bbac:	add	x1, x1, #0x10
  44bbb0:	str	x1, [x19]
  44bbb4:	ldr	x19, [sp, #16]
  44bbb8:	ldp	x29, x30, [sp], #32
  44bbbc:	ret
  44bbc0:	stp	x29, x30, [sp, #-48]!
  44bbc4:	adrp	x3, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44bbc8:	mov	x29, sp
  44bbcc:	ldr	x3, [x3, #3992]
  44bbd0:	str	x19, [sp, #16]
  44bbd4:	mov	x19, x0
  44bbd8:	add	x2, sp, #0x28
  44bbdc:	add	x3, x3, #0x10
  44bbe0:	str	x3, [x0], #8
  44bbe4:	bl	44fff0 <_obstack_memory_used@@Base+0xb5ec>
  44bbe8:	ldr	x19, [sp, #16]
  44bbec:	ldp	x29, x30, [sp], #48
  44bbf0:	ret
  44bbf4:	mov	x1, x0
  44bbf8:	mov	x0, x19
  44bbfc:	mov	x19, x1
  44bc00:	bl	44a558 <_obstack_memory_used@@Base+0x5b54>
  44bc04:	mov	x0, x19
  44bc08:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  44bc0c:	nop
  44bc10:	stp	x29, x30, [sp, #-32]!
  44bc14:	mov	x29, sp
  44bc18:	str	x19, [sp, #16]
  44bc1c:	mov	x19, x0
  44bc20:	bl	44bbc0 <_obstack_memory_used@@Base+0x71bc>
  44bc24:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44bc28:	ldr	x1, [x1, #3872]
  44bc2c:	add	x1, x1, #0x10
  44bc30:	str	x1, [x19]
  44bc34:	ldr	x19, [sp, #16]
  44bc38:	ldp	x29, x30, [sp], #32
  44bc3c:	ret
  44bc40:	stp	x29, x30, [sp, #-32]!
  44bc44:	mov	x29, sp
  44bc48:	str	x19, [sp, #16]
  44bc4c:	mov	x19, x0
  44bc50:	bl	44bbc0 <_obstack_memory_used@@Base+0x71bc>
  44bc54:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44bc58:	ldr	x1, [x1, #3928]
  44bc5c:	add	x1, x1, #0x10
  44bc60:	str	x1, [x19]
  44bc64:	ldr	x19, [sp, #16]
  44bc68:	ldp	x29, x30, [sp], #32
  44bc6c:	ret
  44bc70:	stp	x29, x30, [sp, #-32]!
  44bc74:	mov	x29, sp
  44bc78:	str	x19, [sp, #16]
  44bc7c:	mov	x19, x0
  44bc80:	bl	44bbc0 <_obstack_memory_used@@Base+0x71bc>
  44bc84:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44bc88:	ldr	x1, [x1, #4040]
  44bc8c:	add	x1, x1, #0x10
  44bc90:	str	x1, [x19]
  44bc94:	ldr	x19, [sp, #16]
  44bc98:	ldp	x29, x30, [sp], #32
  44bc9c:	ret
  44bca0:	ldr	x1, [x1]
  44bca4:	ldur	x2, [x1, #-24]
  44bca8:	b	450258 <_obstack_memory_used@@Base+0xb854>
  44bcac:	nop
  44bcb0:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44bcb4:	ldr	x1, [x1, #3984]
  44bcb8:	add	x1, x1, #0x18
  44bcbc:	str	x1, [x0]
  44bcc0:	ret
  44bcc4:	nop
  44bcc8:	b	44f4f8 <_obstack_memory_used@@Base+0xaaf4>
  44bccc:	nop
  44bcd0:	stp	x29, x30, [sp, #-32]!
  44bcd4:	mov	x29, sp
  44bcd8:	add	x3, sp, #0x18
  44bcdc:	bl	44fc20 <_obstack_memory_used@@Base+0xb21c>
  44bce0:	ldp	x29, x30, [sp], #32
  44bce4:	ret
  44bce8:	stp	x29, x30, [sp, #-16]!
  44bcec:	mov	x29, sp
  44bcf0:	bl	44f4f8 <_obstack_memory_used@@Base+0xaaf4>
  44bcf4:	ldp	x29, x30, [sp], #16
  44bcf8:	ret
  44bcfc:	nop
  44bd00:	stp	x29, x30, [sp, #-32]!
  44bd04:	mov	x29, sp
  44bd08:	str	x19, [sp, #16]
  44bd0c:	mov	x19, x0
  44bd10:	bl	44f638 <_obstack_memory_used@@Base+0xac34>
  44bd14:	mov	x0, x19
  44bd18:	ldr	x19, [sp, #16]
  44bd1c:	ldp	x29, x30, [sp], #32
  44bd20:	ret
  44bd24:	nop
  44bd28:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44bd2c:	ldr	x2, [x0]
  44bd30:	ldr	x1, [x1, #3984]
  44bd34:	sub	x0, x2, #0x18
  44bd38:	cmp	x0, x1
  44bd3c:	b.ne	44bd44 <_obstack_memory_used@@Base+0x7340>  // b.any
  44bd40:	ret
  44bd44:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44bd48:	ldr	x1, [x1, #3600]
  44bd4c:	cbz	x1, 44bd84 <_obstack_memory_used@@Base+0x7380>
  44bd50:	sub	x2, x2, #0x8
  44bd54:	ldaxr	w1, [x2]
  44bd58:	sub	w3, w1, #0x1
  44bd5c:	stlxr	w4, w3, [x2]
  44bd60:	cbnz	w4, 44bd54 <_obstack_memory_used@@Base+0x7350>
  44bd64:	cmp	w1, #0x0
  44bd68:	b.gt	44bd40 <_obstack_memory_used@@Base+0x733c>
  44bd6c:	stp	x29, x30, [sp, #-32]!
  44bd70:	mov	x29, sp
  44bd74:	add	x1, sp, #0x18
  44bd78:	bl	44ddb0 <_obstack_memory_used@@Base+0x93ac>
  44bd7c:	ldp	x29, x30, [sp], #32
  44bd80:	ret
  44bd84:	ldur	w1, [x2, #-8]
  44bd88:	sub	w3, w1, #0x1
  44bd8c:	stur	w3, [x2, #-8]
  44bd90:	b	44bd64 <_obstack_memory_used@@Base+0x7360>
  44bd94:	nop
  44bd98:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44bd9c:	ldr	x3, [x1]
  44bda0:	str	x3, [x0]
  44bda4:	ldr	x2, [x2, #3984]
  44bda8:	add	x2, x2, #0x18
  44bdac:	str	x2, [x1]
  44bdb0:	ret
  44bdb4:	nop
  44bdb8:	stp	x29, x30, [sp, #-32]!
  44bdbc:	mov	x29, sp
  44bdc0:	str	x19, [sp, #16]
  44bdc4:	mov	x19, x0
  44bdc8:	bl	44d038 <_obstack_memory_used@@Base+0x8634>
  44bdcc:	mov	x0, x19
  44bdd0:	ldr	x19, [sp, #16]
  44bdd4:	ldp	x29, x30, [sp], #32
  44bdd8:	ret
  44bddc:	nop
  44bde0:	stp	x29, x30, [sp, #-48]!
  44bde4:	mov	x29, sp
  44bde8:	ldr	x2, [x0]
  44bdec:	ldr	x2, [x2, #24]
  44bdf0:	str	x19, [sp, #16]
  44bdf4:	mov	x19, x8
  44bdf8:	add	x8, sp, #0x28
  44bdfc:	blr	x2
  44be00:	ldr	x1, [sp, #40]
  44be04:	mov	x0, x19
  44be08:	ldur	x2, [x1, #-24]
  44be0c:	bl	450258 <_obstack_memory_used@@Base+0xb854>
  44be10:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44be14:	ldr	x2, [sp, #40]
  44be18:	ldr	x1, [x1, #3984]
  44be1c:	sub	x0, x2, #0x18
  44be20:	cmp	x0, x1
  44be24:	b.ne	44be38 <_obstack_memory_used@@Base+0x7434>  // b.any
  44be28:	mov	x0, x19
  44be2c:	ldr	x19, [sp, #16]
  44be30:	ldp	x29, x30, [sp], #48
  44be34:	ret
  44be38:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44be3c:	ldr	x1, [x1, #3600]
  44be40:	cbz	x1, 44be6c <_obstack_memory_used@@Base+0x7468>
  44be44:	sub	x2, x2, #0x8
  44be48:	ldaxr	w1, [x2]
  44be4c:	sub	w3, w1, #0x1
  44be50:	stlxr	w4, w3, [x2]
  44be54:	cbnz	w4, 44be48 <_obstack_memory_used@@Base+0x7444>
  44be58:	cmp	w1, #0x0
  44be5c:	b.gt	44be28 <_obstack_memory_used@@Base+0x7424>
  44be60:	add	x1, sp, #0x20
  44be64:	bl	44ddb0 <_obstack_memory_used@@Base+0x93ac>
  44be68:	b	44be28 <_obstack_memory_used@@Base+0x7424>
  44be6c:	ldur	w1, [x2, #-8]
  44be70:	sub	w3, w1, #0x1
  44be74:	stur	w3, [x2, #-8]
  44be78:	b	44be58 <_obstack_memory_used@@Base+0x7454>
  44be7c:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44be80:	mov	x19, x0
  44be84:	ldr	x1, [sp, #40]
  44be88:	ldr	x2, [x2, #3984]
  44be8c:	sub	x0, x1, #0x18
  44be90:	cmp	x0, x2
  44be94:	b.eq	44bec8 <_obstack_memory_used@@Base+0x74c4>  // b.none
  44be98:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44be9c:	ldr	x2, [x2, #3600]
  44bea0:	cbz	x2, 44bed0 <_obstack_memory_used@@Base+0x74cc>
  44bea4:	sub	x1, x1, #0x8
  44bea8:	ldaxr	w2, [x1]
  44beac:	sub	w3, w2, #0x1
  44beb0:	stlxr	w4, w3, [x1]
  44beb4:	cbnz	w4, 44bea8 <_obstack_memory_used@@Base+0x74a4>
  44beb8:	cmp	w2, #0x0
  44bebc:	b.gt	44bec8 <_obstack_memory_used@@Base+0x74c4>
  44bec0:	add	x1, sp, #0x20
  44bec4:	bl	44ddb0 <_obstack_memory_used@@Base+0x93ac>
  44bec8:	mov	x0, x19
  44becc:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  44bed0:	ldur	w2, [x1, #-8]
  44bed4:	sub	w3, w2, #0x1
  44bed8:	stur	w3, [x1, #-8]
  44bedc:	b	44beb8 <_obstack_memory_used@@Base+0x74b4>
  44bee0:	stp	x29, x30, [sp, #-48]!
  44bee4:	mov	x29, sp
  44bee8:	stp	x19, x20, [sp, #16]
  44beec:	sub	x20, x1, #0x1
  44bef0:	mov	x19, #0x1                   	// #1
  44bef4:	stp	x21, x22, [sp, #32]
  44bef8:	mov	x21, x1
  44befc:	mov	x22, x0
  44bf00:	b	44bf08 <_obstack_memory_used@@Base+0x7504>
  44bf04:	add	x19, x19, #0x1
  44bf08:	add	x0, x20, x19
  44bf0c:	bl	4027f0 <_ITM_RU1@plt>
  44bf10:	tst	w0, #0xff
  44bf14:	b.ne	44bf04 <_obstack_memory_used@@Base+0x7500>  // b.any
  44bf18:	add	x0, x19, #0x18
  44bf1c:	bl	402690 <_ZGTtnam@plt>
  44bf20:	mov	x20, x0
  44bf24:	sub	x4, x19, #0x1
  44bf28:	str	x4, [x0, #8]
  44bf2c:	mov	x1, x21
  44bf30:	str	wzr, [x0, #16]
  44bf34:	mov	x2, x19
  44bf38:	str	x4, [x20], #24
  44bf3c:	mov	x0, x20
  44bf40:	bl	402900 <_ITM_memcpyRtWn@plt>
  44bf44:	str	x20, [x22]
  44bf48:	ldp	x19, x20, [sp, #16]
  44bf4c:	ldp	x21, x22, [sp, #32]
  44bf50:	ldp	x29, x30, [sp], #48
  44bf54:	ret
  44bf58:	bl	44a3e8 <_obstack_memory_used@@Base+0x59e4>
  44bf5c:	bl	44b2e8 <_obstack_memory_used@@Base+0x68e4>
  44bf60:	mov	x19, x0
  44bf64:	bl	44a488 <_obstack_memory_used@@Base+0x5a84>
  44bf68:	mov	x0, x19
  44bf6c:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  44bf70:	b	402b70 <_ITM_RU8@plt>
  44bf74:	nop
  44bf78:	b	402b70 <_ITM_RU8@plt>
  44bf7c:	nop
  44bf80:	stp	x29, x30, [sp, #-16]!
  44bf84:	mov	x29, sp
  44bf88:	bl	44bf70 <_obstack_memory_used@@Base+0x756c>
  44bf8c:	sub	x2, x0, #0x18
  44bf90:	adrp	x3, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44bf94:	mov	x1, #0x1                   	// #1
  44bf98:	ldp	x29, x30, [sp], #16
  44bf9c:	ldr	x0, [x3, #3760]
  44bfa0:	b	4028b0 <_ITM_addUserCommitAction@plt>
  44bfa4:	nop
  44bfa8:	add	x0, x0, #0x8
  44bfac:	ret
  44bfb0:	add	x0, x0, #0x8
  44bfb4:	ret
  44bfb8:	stp	x29, x30, [sp, #-64]!
  44bfbc:	mov	x29, sp
  44bfc0:	stp	x19, x20, [sp, #16]
  44bfc4:	add	x20, sp, #0x30
  44bfc8:	mov	x19, x0
  44bfcc:	mov	x0, x20
  44bfd0:	str	x21, [sp, #32]
  44bfd4:	mov	x21, x1
  44bfd8:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44bfdc:	add	x1, x1, #0xe60
  44bfe0:	bl	44bab0 <_obstack_memory_used@@Base+0x70ac>
  44bfe4:	mov	x0, x19
  44bfe8:	mov	x1, x20
  44bfec:	mov	x2, #0x10                  	// #16
  44bff0:	bl	402c40 <_ITM_memcpyRnWt@plt>
  44bff4:	mov	x0, x19
  44bff8:	bl	44bfa8 <_obstack_memory_used@@Base+0x75a4>
  44bffc:	mov	x2, x19
  44c000:	mov	x1, x21
  44c004:	bl	44bee0 <_obstack_memory_used@@Base+0x74dc>
  44c008:	mov	x0, x20
  44c00c:	bl	44b3d8 <_obstack_memory_used@@Base+0x69d4>
  44c010:	ldp	x19, x20, [sp, #16]
  44c014:	ldr	x21, [sp, #32]
  44c018:	ldp	x29, x30, [sp], #64
  44c01c:	ret
  44c020:	mov	x19, x0
  44c024:	mov	x0, x20
  44c028:	bl	44b3d8 <_obstack_memory_used@@Base+0x69d4>
  44c02c:	mov	x0, x19
  44c030:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  44c034:	nop
  44c038:	stp	x29, x30, [sp, #-64]!
  44c03c:	mov	x29, sp
  44c040:	stp	x19, x20, [sp, #16]
  44c044:	add	x20, sp, #0x30
  44c048:	mov	x19, x0
  44c04c:	mov	x0, x20
  44c050:	stp	x21, x22, [sp, #32]
  44c054:	mov	x22, x1
  44c058:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44c05c:	add	x1, x1, #0xe60
  44c060:	bl	44bab0 <_obstack_memory_used@@Base+0x70ac>
  44c064:	mov	x0, x19
  44c068:	mov	x1, x20
  44c06c:	mov	x2, #0x10                  	// #16
  44c070:	bl	402c40 <_ITM_memcpyRnWt@plt>
  44c074:	mov	x0, x19
  44c078:	bl	44bfa8 <_obstack_memory_used@@Base+0x75a4>
  44c07c:	mov	x21, x0
  44c080:	mov	x0, x22
  44c084:	bl	44bf78 <_obstack_memory_used@@Base+0x7574>
  44c088:	mov	x1, x0
  44c08c:	mov	x2, x19
  44c090:	mov	x0, x21
  44c094:	bl	44bee0 <_obstack_memory_used@@Base+0x74dc>
  44c098:	mov	x0, x20
  44c09c:	bl	44b3d8 <_obstack_memory_used@@Base+0x69d4>
  44c0a0:	ldp	x19, x20, [sp, #16]
  44c0a4:	ldp	x21, x22, [sp, #32]
  44c0a8:	ldp	x29, x30, [sp], #64
  44c0ac:	ret
  44c0b0:	mov	x19, x0
  44c0b4:	mov	x0, x20
  44c0b8:	bl	44b3d8 <_obstack_memory_used@@Base+0x69d4>
  44c0bc:	mov	x0, x19
  44c0c0:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  44c0c4:	nop
  44c0c8:	stp	x29, x30, [sp, #-16]!
  44c0cc:	mov	x29, sp
  44c0d0:	bl	44bfa8 <_obstack_memory_used@@Base+0x75a4>
  44c0d4:	ldp	x29, x30, [sp], #16
  44c0d8:	b	44bf80 <_obstack_memory_used@@Base+0x757c>
  44c0dc:	nop
  44c0e0:	stp	x29, x30, [sp, #-32]!
  44c0e4:	mov	x29, sp
  44c0e8:	str	x19, [sp, #16]
  44c0ec:	mov	x19, x0
  44c0f0:	bl	44c0c8 <_obstack_memory_used@@Base+0x76c4>
  44c0f4:	mov	x0, x19
  44c0f8:	ldr	x19, [sp, #16]
  44c0fc:	ldp	x29, x30, [sp], #32
  44c100:	b	402d30 <_ZGTtdlPv@plt>
  44c104:	nop
  44c108:	stp	x29, x30, [sp, #-16]!
  44c10c:	mov	x29, sp
  44c110:	bl	44bfa8 <_obstack_memory_used@@Base+0x75a4>
  44c114:	ldp	x29, x30, [sp], #16
  44c118:	b	44bf70 <_obstack_memory_used@@Base+0x756c>
  44c11c:	nop
  44c120:	stp	x29, x30, [sp, #-64]!
  44c124:	mov	x29, sp
  44c128:	stp	x19, x20, [sp, #16]
  44c12c:	add	x20, sp, #0x30
  44c130:	mov	x19, x0
  44c134:	mov	x0, x20
  44c138:	str	x21, [sp, #32]
  44c13c:	mov	x21, x1
  44c140:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44c144:	add	x1, x1, #0xe60
  44c148:	bl	44bb00 <_obstack_memory_used@@Base+0x70fc>
  44c14c:	mov	x0, x19
  44c150:	mov	x1, x20
  44c154:	mov	x2, #0x10                  	// #16
  44c158:	bl	402c40 <_ITM_memcpyRnWt@plt>
  44c15c:	mov	x0, x19
  44c160:	bl	44bfa8 <_obstack_memory_used@@Base+0x75a4>
  44c164:	mov	x2, x19
  44c168:	mov	x1, x21
  44c16c:	bl	44bee0 <_obstack_memory_used@@Base+0x74dc>
  44c170:	mov	x0, x20
  44c174:	bl	44b490 <_obstack_memory_used@@Base+0x6a8c>
  44c178:	ldp	x19, x20, [sp, #16]
  44c17c:	ldr	x21, [sp, #32]
  44c180:	ldp	x29, x30, [sp], #64
  44c184:	ret
  44c188:	mov	x19, x0
  44c18c:	mov	x0, x20
  44c190:	bl	44b490 <_obstack_memory_used@@Base+0x6a8c>
  44c194:	mov	x0, x19
  44c198:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  44c19c:	nop
  44c1a0:	stp	x29, x30, [sp, #-64]!
  44c1a4:	mov	x29, sp
  44c1a8:	stp	x19, x20, [sp, #16]
  44c1ac:	add	x20, sp, #0x30
  44c1b0:	mov	x19, x0
  44c1b4:	mov	x0, x20
  44c1b8:	stp	x21, x22, [sp, #32]
  44c1bc:	mov	x22, x1
  44c1c0:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44c1c4:	add	x1, x1, #0xe60
  44c1c8:	bl	44bb00 <_obstack_memory_used@@Base+0x70fc>
  44c1cc:	mov	x0, x19
  44c1d0:	mov	x1, x20
  44c1d4:	mov	x2, #0x10                  	// #16
  44c1d8:	bl	402c40 <_ITM_memcpyRnWt@plt>
  44c1dc:	mov	x0, x19
  44c1e0:	bl	44bfa8 <_obstack_memory_used@@Base+0x75a4>
  44c1e4:	mov	x21, x0
  44c1e8:	mov	x0, x22
  44c1ec:	bl	44bf78 <_obstack_memory_used@@Base+0x7574>
  44c1f0:	mov	x1, x0
  44c1f4:	mov	x2, x19
  44c1f8:	mov	x0, x21
  44c1fc:	bl	44bee0 <_obstack_memory_used@@Base+0x74dc>
  44c200:	mov	x0, x20
  44c204:	bl	44b490 <_obstack_memory_used@@Base+0x6a8c>
  44c208:	ldp	x19, x20, [sp, #16]
  44c20c:	ldp	x21, x22, [sp, #32]
  44c210:	ldp	x29, x30, [sp], #64
  44c214:	ret
  44c218:	mov	x19, x0
  44c21c:	mov	x0, x20
  44c220:	bl	44b490 <_obstack_memory_used@@Base+0x6a8c>
  44c224:	mov	x0, x19
  44c228:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  44c22c:	nop
  44c230:	stp	x29, x30, [sp, #-16]!
  44c234:	mov	x29, sp
  44c238:	bl	44bfa8 <_obstack_memory_used@@Base+0x75a4>
  44c23c:	ldp	x29, x30, [sp], #16
  44c240:	b	44bf80 <_obstack_memory_used@@Base+0x757c>
  44c244:	nop
  44c248:	stp	x29, x30, [sp, #-32]!
  44c24c:	mov	x29, sp
  44c250:	str	x19, [sp, #16]
  44c254:	mov	x19, x0
  44c258:	bl	44c230 <_obstack_memory_used@@Base+0x782c>
  44c25c:	mov	x0, x19
  44c260:	ldr	x19, [sp, #16]
  44c264:	ldp	x29, x30, [sp], #32
  44c268:	b	402d30 <_ZGTtdlPv@plt>
  44c26c:	nop
  44c270:	stp	x29, x30, [sp, #-64]!
  44c274:	mov	x29, sp
  44c278:	stp	x19, x20, [sp, #16]
  44c27c:	add	x20, sp, #0x30
  44c280:	mov	x19, x0
  44c284:	mov	x0, x20
  44c288:	str	x21, [sp, #32]
  44c28c:	mov	x21, x1
  44c290:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44c294:	add	x1, x1, #0xe60
  44c298:	bl	44bb30 <_obstack_memory_used@@Base+0x712c>
  44c29c:	mov	x0, x19
  44c2a0:	mov	x1, x20
  44c2a4:	mov	x2, #0x10                  	// #16
  44c2a8:	bl	402c40 <_ITM_memcpyRnWt@plt>
  44c2ac:	mov	x0, x19
  44c2b0:	bl	44bfa8 <_obstack_memory_used@@Base+0x75a4>
  44c2b4:	mov	x2, x19
  44c2b8:	mov	x1, x21
  44c2bc:	bl	44bee0 <_obstack_memory_used@@Base+0x74dc>
  44c2c0:	mov	x0, x20
  44c2c4:	bl	44b4d0 <_obstack_memory_used@@Base+0x6acc>
  44c2c8:	ldp	x19, x20, [sp, #16]
  44c2cc:	ldr	x21, [sp, #32]
  44c2d0:	ldp	x29, x30, [sp], #64
  44c2d4:	ret
  44c2d8:	mov	x19, x0
  44c2dc:	mov	x0, x20
  44c2e0:	bl	44b4d0 <_obstack_memory_used@@Base+0x6acc>
  44c2e4:	mov	x0, x19
  44c2e8:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  44c2ec:	nop
  44c2f0:	stp	x29, x30, [sp, #-64]!
  44c2f4:	mov	x29, sp
  44c2f8:	stp	x19, x20, [sp, #16]
  44c2fc:	add	x20, sp, #0x30
  44c300:	mov	x19, x0
  44c304:	mov	x0, x20
  44c308:	stp	x21, x22, [sp, #32]
  44c30c:	mov	x22, x1
  44c310:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44c314:	add	x1, x1, #0xe60
  44c318:	bl	44bb30 <_obstack_memory_used@@Base+0x712c>
  44c31c:	mov	x0, x19
  44c320:	mov	x1, x20
  44c324:	mov	x2, #0x10                  	// #16
  44c328:	bl	402c40 <_ITM_memcpyRnWt@plt>
  44c32c:	mov	x0, x19
  44c330:	bl	44bfa8 <_obstack_memory_used@@Base+0x75a4>
  44c334:	mov	x21, x0
  44c338:	mov	x0, x22
  44c33c:	bl	44bf78 <_obstack_memory_used@@Base+0x7574>
  44c340:	mov	x1, x0
  44c344:	mov	x2, x19
  44c348:	mov	x0, x21
  44c34c:	bl	44bee0 <_obstack_memory_used@@Base+0x74dc>
  44c350:	mov	x0, x20
  44c354:	bl	44b4d0 <_obstack_memory_used@@Base+0x6acc>
  44c358:	ldp	x19, x20, [sp, #16]
  44c35c:	ldp	x21, x22, [sp, #32]
  44c360:	ldp	x29, x30, [sp], #64
  44c364:	ret
  44c368:	mov	x19, x0
  44c36c:	mov	x0, x20
  44c370:	bl	44b4d0 <_obstack_memory_used@@Base+0x6acc>
  44c374:	mov	x0, x19
  44c378:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  44c37c:	nop
  44c380:	stp	x29, x30, [sp, #-16]!
  44c384:	mov	x29, sp
  44c388:	bl	44bfa8 <_obstack_memory_used@@Base+0x75a4>
  44c38c:	ldp	x29, x30, [sp], #16
  44c390:	b	44bf80 <_obstack_memory_used@@Base+0x757c>
  44c394:	nop
  44c398:	stp	x29, x30, [sp, #-32]!
  44c39c:	mov	x29, sp
  44c3a0:	str	x19, [sp, #16]
  44c3a4:	mov	x19, x0
  44c3a8:	bl	44c380 <_obstack_memory_used@@Base+0x797c>
  44c3ac:	mov	x0, x19
  44c3b0:	ldr	x19, [sp, #16]
  44c3b4:	ldp	x29, x30, [sp], #32
  44c3b8:	b	402d30 <_ZGTtdlPv@plt>
  44c3bc:	nop
  44c3c0:	stp	x29, x30, [sp, #-64]!
  44c3c4:	mov	x29, sp
  44c3c8:	stp	x19, x20, [sp, #16]
  44c3cc:	add	x20, sp, #0x30
  44c3d0:	mov	x19, x0
  44c3d4:	mov	x0, x20
  44c3d8:	str	x21, [sp, #32]
  44c3dc:	mov	x21, x1
  44c3e0:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44c3e4:	add	x1, x1, #0xe60
  44c3e8:	bl	44bb60 <_obstack_memory_used@@Base+0x715c>
  44c3ec:	mov	x0, x19
  44c3f0:	mov	x1, x20
  44c3f4:	mov	x2, #0x10                  	// #16
  44c3f8:	bl	402c40 <_ITM_memcpyRnWt@plt>
  44c3fc:	mov	x0, x19
  44c400:	bl	44bfa8 <_obstack_memory_used@@Base+0x75a4>
  44c404:	mov	x2, x19
  44c408:	mov	x1, x21
  44c40c:	bl	44bee0 <_obstack_memory_used@@Base+0x74dc>
  44c410:	mov	x0, x20
  44c414:	bl	44b510 <_obstack_memory_used@@Base+0x6b0c>
  44c418:	ldp	x19, x20, [sp, #16]
  44c41c:	ldr	x21, [sp, #32]
  44c420:	ldp	x29, x30, [sp], #64
  44c424:	ret
  44c428:	mov	x19, x0
  44c42c:	mov	x0, x20
  44c430:	bl	44b510 <_obstack_memory_used@@Base+0x6b0c>
  44c434:	mov	x0, x19
  44c438:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  44c43c:	nop
  44c440:	stp	x29, x30, [sp, #-64]!
  44c444:	mov	x29, sp
  44c448:	stp	x19, x20, [sp, #16]
  44c44c:	add	x20, sp, #0x30
  44c450:	mov	x19, x0
  44c454:	mov	x0, x20
  44c458:	stp	x21, x22, [sp, #32]
  44c45c:	mov	x22, x1
  44c460:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44c464:	add	x1, x1, #0xe60
  44c468:	bl	44bb60 <_obstack_memory_used@@Base+0x715c>
  44c46c:	mov	x0, x19
  44c470:	mov	x1, x20
  44c474:	mov	x2, #0x10                  	// #16
  44c478:	bl	402c40 <_ITM_memcpyRnWt@plt>
  44c47c:	mov	x0, x19
  44c480:	bl	44bfa8 <_obstack_memory_used@@Base+0x75a4>
  44c484:	mov	x21, x0
  44c488:	mov	x0, x22
  44c48c:	bl	44bf78 <_obstack_memory_used@@Base+0x7574>
  44c490:	mov	x1, x0
  44c494:	mov	x2, x19
  44c498:	mov	x0, x21
  44c49c:	bl	44bee0 <_obstack_memory_used@@Base+0x74dc>
  44c4a0:	mov	x0, x20
  44c4a4:	bl	44b510 <_obstack_memory_used@@Base+0x6b0c>
  44c4a8:	ldp	x19, x20, [sp, #16]
  44c4ac:	ldp	x21, x22, [sp, #32]
  44c4b0:	ldp	x29, x30, [sp], #64
  44c4b4:	ret
  44c4b8:	mov	x19, x0
  44c4bc:	mov	x0, x20
  44c4c0:	bl	44b510 <_obstack_memory_used@@Base+0x6b0c>
  44c4c4:	mov	x0, x19
  44c4c8:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  44c4cc:	nop
  44c4d0:	stp	x29, x30, [sp, #-16]!
  44c4d4:	mov	x29, sp
  44c4d8:	bl	44bfa8 <_obstack_memory_used@@Base+0x75a4>
  44c4dc:	ldp	x29, x30, [sp], #16
  44c4e0:	b	44bf80 <_obstack_memory_used@@Base+0x757c>
  44c4e4:	nop
  44c4e8:	stp	x29, x30, [sp, #-32]!
  44c4ec:	mov	x29, sp
  44c4f0:	str	x19, [sp, #16]
  44c4f4:	mov	x19, x0
  44c4f8:	bl	44c4d0 <_obstack_memory_used@@Base+0x7acc>
  44c4fc:	mov	x0, x19
  44c500:	ldr	x19, [sp, #16]
  44c504:	ldp	x29, x30, [sp], #32
  44c508:	b	402d30 <_ZGTtdlPv@plt>
  44c50c:	nop
  44c510:	stp	x29, x30, [sp, #-64]!
  44c514:	mov	x29, sp
  44c518:	stp	x19, x20, [sp, #16]
  44c51c:	add	x20, sp, #0x30
  44c520:	mov	x19, x0
  44c524:	mov	x0, x20
  44c528:	str	x21, [sp, #32]
  44c52c:	mov	x21, x1
  44c530:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44c534:	add	x1, x1, #0xe60
  44c538:	bl	44bb90 <_obstack_memory_used@@Base+0x718c>
  44c53c:	mov	x0, x19
  44c540:	mov	x1, x20
  44c544:	mov	x2, #0x10                  	// #16
  44c548:	bl	402c40 <_ITM_memcpyRnWt@plt>
  44c54c:	mov	x0, x19
  44c550:	bl	44bfa8 <_obstack_memory_used@@Base+0x75a4>
  44c554:	mov	x2, x19
  44c558:	mov	x1, x21
  44c55c:	bl	44bee0 <_obstack_memory_used@@Base+0x74dc>
  44c560:	mov	x0, x20
  44c564:	bl	44b550 <_obstack_memory_used@@Base+0x6b4c>
  44c568:	ldp	x19, x20, [sp, #16]
  44c56c:	ldr	x21, [sp, #32]
  44c570:	ldp	x29, x30, [sp], #64
  44c574:	ret
  44c578:	mov	x19, x0
  44c57c:	mov	x0, x20
  44c580:	bl	44b550 <_obstack_memory_used@@Base+0x6b4c>
  44c584:	mov	x0, x19
  44c588:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  44c58c:	nop
  44c590:	stp	x29, x30, [sp, #-64]!
  44c594:	mov	x29, sp
  44c598:	stp	x19, x20, [sp, #16]
  44c59c:	add	x20, sp, #0x30
  44c5a0:	mov	x19, x0
  44c5a4:	mov	x0, x20
  44c5a8:	stp	x21, x22, [sp, #32]
  44c5ac:	mov	x22, x1
  44c5b0:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44c5b4:	add	x1, x1, #0xe60
  44c5b8:	bl	44bb90 <_obstack_memory_used@@Base+0x718c>
  44c5bc:	mov	x0, x19
  44c5c0:	mov	x1, x20
  44c5c4:	mov	x2, #0x10                  	// #16
  44c5c8:	bl	402c40 <_ITM_memcpyRnWt@plt>
  44c5cc:	mov	x0, x19
  44c5d0:	bl	44bfa8 <_obstack_memory_used@@Base+0x75a4>
  44c5d4:	mov	x21, x0
  44c5d8:	mov	x0, x22
  44c5dc:	bl	44bf78 <_obstack_memory_used@@Base+0x7574>
  44c5e0:	mov	x1, x0
  44c5e4:	mov	x2, x19
  44c5e8:	mov	x0, x21
  44c5ec:	bl	44bee0 <_obstack_memory_used@@Base+0x74dc>
  44c5f0:	mov	x0, x20
  44c5f4:	bl	44b550 <_obstack_memory_used@@Base+0x6b4c>
  44c5f8:	ldp	x19, x20, [sp, #16]
  44c5fc:	ldp	x21, x22, [sp, #32]
  44c600:	ldp	x29, x30, [sp], #64
  44c604:	ret
  44c608:	mov	x19, x0
  44c60c:	mov	x0, x20
  44c610:	bl	44b550 <_obstack_memory_used@@Base+0x6b4c>
  44c614:	mov	x0, x19
  44c618:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  44c61c:	nop
  44c620:	stp	x29, x30, [sp, #-16]!
  44c624:	mov	x29, sp
  44c628:	bl	44bfa8 <_obstack_memory_used@@Base+0x75a4>
  44c62c:	ldp	x29, x30, [sp], #16
  44c630:	b	44bf80 <_obstack_memory_used@@Base+0x757c>
  44c634:	nop
  44c638:	stp	x29, x30, [sp, #-32]!
  44c63c:	mov	x29, sp
  44c640:	str	x19, [sp, #16]
  44c644:	mov	x19, x0
  44c648:	bl	44c620 <_obstack_memory_used@@Base+0x7c1c>
  44c64c:	mov	x0, x19
  44c650:	ldr	x19, [sp, #16]
  44c654:	ldp	x29, x30, [sp], #32
  44c658:	b	402d30 <_ZGTtdlPv@plt>
  44c65c:	nop
  44c660:	stp	x29, x30, [sp, #-64]!
  44c664:	mov	x29, sp
  44c668:	stp	x19, x20, [sp, #16]
  44c66c:	add	x20, sp, #0x30
  44c670:	mov	x19, x0
  44c674:	mov	x0, x20
  44c678:	str	x21, [sp, #32]
  44c67c:	mov	x21, x1
  44c680:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44c684:	add	x1, x1, #0xe60
  44c688:	bl	44bbc0 <_obstack_memory_used@@Base+0x71bc>
  44c68c:	mov	x0, x19
  44c690:	mov	x1, x20
  44c694:	mov	x2, #0x10                  	// #16
  44c698:	bl	402c40 <_ITM_memcpyRnWt@plt>
  44c69c:	mov	x0, x19
  44c6a0:	bl	44bfb0 <_obstack_memory_used@@Base+0x75ac>
  44c6a4:	mov	x2, x19
  44c6a8:	mov	x1, x21
  44c6ac:	bl	44bee0 <_obstack_memory_used@@Base+0x74dc>
  44c6b0:	mov	x0, x20
  44c6b4:	bl	44b590 <_obstack_memory_used@@Base+0x6b8c>
  44c6b8:	ldp	x19, x20, [sp, #16]
  44c6bc:	ldr	x21, [sp, #32]
  44c6c0:	ldp	x29, x30, [sp], #64
  44c6c4:	ret
  44c6c8:	mov	x19, x0
  44c6cc:	mov	x0, x20
  44c6d0:	bl	44b590 <_obstack_memory_used@@Base+0x6b8c>
  44c6d4:	mov	x0, x19
  44c6d8:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  44c6dc:	nop
  44c6e0:	stp	x29, x30, [sp, #-64]!
  44c6e4:	mov	x29, sp
  44c6e8:	stp	x19, x20, [sp, #16]
  44c6ec:	add	x20, sp, #0x30
  44c6f0:	mov	x19, x0
  44c6f4:	mov	x0, x20
  44c6f8:	stp	x21, x22, [sp, #32]
  44c6fc:	mov	x22, x1
  44c700:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44c704:	add	x1, x1, #0xe60
  44c708:	bl	44bbc0 <_obstack_memory_used@@Base+0x71bc>
  44c70c:	mov	x0, x19
  44c710:	mov	x1, x20
  44c714:	mov	x2, #0x10                  	// #16
  44c718:	bl	402c40 <_ITM_memcpyRnWt@plt>
  44c71c:	mov	x0, x19
  44c720:	bl	44bfb0 <_obstack_memory_used@@Base+0x75ac>
  44c724:	mov	x21, x0
  44c728:	mov	x0, x22
  44c72c:	bl	44bf78 <_obstack_memory_used@@Base+0x7574>
  44c730:	mov	x1, x0
  44c734:	mov	x2, x19
  44c738:	mov	x0, x21
  44c73c:	bl	44bee0 <_obstack_memory_used@@Base+0x74dc>
  44c740:	mov	x0, x20
  44c744:	bl	44b590 <_obstack_memory_used@@Base+0x6b8c>
  44c748:	ldp	x19, x20, [sp, #16]
  44c74c:	ldp	x21, x22, [sp, #32]
  44c750:	ldp	x29, x30, [sp], #64
  44c754:	ret
  44c758:	mov	x19, x0
  44c75c:	mov	x0, x20
  44c760:	bl	44b590 <_obstack_memory_used@@Base+0x6b8c>
  44c764:	mov	x0, x19
  44c768:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  44c76c:	nop
  44c770:	stp	x29, x30, [sp, #-16]!
  44c774:	mov	x29, sp
  44c778:	bl	44bfb0 <_obstack_memory_used@@Base+0x75ac>
  44c77c:	ldp	x29, x30, [sp], #16
  44c780:	b	44bf80 <_obstack_memory_used@@Base+0x757c>
  44c784:	nop
  44c788:	stp	x29, x30, [sp, #-32]!
  44c78c:	mov	x29, sp
  44c790:	str	x19, [sp, #16]
  44c794:	mov	x19, x0
  44c798:	bl	44c770 <_obstack_memory_used@@Base+0x7d6c>
  44c79c:	mov	x0, x19
  44c7a0:	ldr	x19, [sp, #16]
  44c7a4:	ldp	x29, x30, [sp], #32
  44c7a8:	b	402d30 <_ZGTtdlPv@plt>
  44c7ac:	nop
  44c7b0:	stp	x29, x30, [sp, #-16]!
  44c7b4:	mov	x29, sp
  44c7b8:	bl	44bfb0 <_obstack_memory_used@@Base+0x75ac>
  44c7bc:	ldp	x29, x30, [sp], #16
  44c7c0:	b	44bf70 <_obstack_memory_used@@Base+0x756c>
  44c7c4:	nop
  44c7c8:	stp	x29, x30, [sp, #-64]!
  44c7cc:	mov	x29, sp
  44c7d0:	stp	x19, x20, [sp, #16]
  44c7d4:	add	x20, sp, #0x30
  44c7d8:	mov	x19, x0
  44c7dc:	mov	x0, x20
  44c7e0:	str	x21, [sp, #32]
  44c7e4:	mov	x21, x1
  44c7e8:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44c7ec:	add	x1, x1, #0xe60
  44c7f0:	bl	44bc10 <_obstack_memory_used@@Base+0x720c>
  44c7f4:	mov	x0, x19
  44c7f8:	mov	x1, x20
  44c7fc:	mov	x2, #0x10                  	// #16
  44c800:	bl	402c40 <_ITM_memcpyRnWt@plt>
  44c804:	mov	x0, x19
  44c808:	bl	44bfb0 <_obstack_memory_used@@Base+0x75ac>
  44c80c:	mov	x2, x19
  44c810:	mov	x1, x21
  44c814:	bl	44bee0 <_obstack_memory_used@@Base+0x74dc>
  44c818:	mov	x0, x20
  44c81c:	bl	44b648 <_obstack_memory_used@@Base+0x6c44>
  44c820:	ldp	x19, x20, [sp, #16]
  44c824:	ldr	x21, [sp, #32]
  44c828:	ldp	x29, x30, [sp], #64
  44c82c:	ret
  44c830:	mov	x19, x0
  44c834:	mov	x0, x20
  44c838:	bl	44b648 <_obstack_memory_used@@Base+0x6c44>
  44c83c:	mov	x0, x19
  44c840:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  44c844:	nop
  44c848:	stp	x29, x30, [sp, #-64]!
  44c84c:	mov	x29, sp
  44c850:	stp	x19, x20, [sp, #16]
  44c854:	add	x20, sp, #0x30
  44c858:	mov	x19, x0
  44c85c:	mov	x0, x20
  44c860:	stp	x21, x22, [sp, #32]
  44c864:	mov	x22, x1
  44c868:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44c86c:	add	x1, x1, #0xe60
  44c870:	bl	44bc10 <_obstack_memory_used@@Base+0x720c>
  44c874:	mov	x0, x19
  44c878:	mov	x1, x20
  44c87c:	mov	x2, #0x10                  	// #16
  44c880:	bl	402c40 <_ITM_memcpyRnWt@plt>
  44c884:	mov	x0, x19
  44c888:	bl	44bfb0 <_obstack_memory_used@@Base+0x75ac>
  44c88c:	mov	x21, x0
  44c890:	mov	x0, x22
  44c894:	bl	44bf78 <_obstack_memory_used@@Base+0x7574>
  44c898:	mov	x1, x0
  44c89c:	mov	x2, x19
  44c8a0:	mov	x0, x21
  44c8a4:	bl	44bee0 <_obstack_memory_used@@Base+0x74dc>
  44c8a8:	mov	x0, x20
  44c8ac:	bl	44b648 <_obstack_memory_used@@Base+0x6c44>
  44c8b0:	ldp	x19, x20, [sp, #16]
  44c8b4:	ldp	x21, x22, [sp, #32]
  44c8b8:	ldp	x29, x30, [sp], #64
  44c8bc:	ret
  44c8c0:	mov	x19, x0
  44c8c4:	mov	x0, x20
  44c8c8:	bl	44b648 <_obstack_memory_used@@Base+0x6c44>
  44c8cc:	mov	x0, x19
  44c8d0:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  44c8d4:	nop
  44c8d8:	stp	x29, x30, [sp, #-16]!
  44c8dc:	mov	x29, sp
  44c8e0:	bl	44bfb0 <_obstack_memory_used@@Base+0x75ac>
  44c8e4:	ldp	x29, x30, [sp], #16
  44c8e8:	b	44bf80 <_obstack_memory_used@@Base+0x757c>
  44c8ec:	nop
  44c8f0:	stp	x29, x30, [sp, #-32]!
  44c8f4:	mov	x29, sp
  44c8f8:	str	x19, [sp, #16]
  44c8fc:	mov	x19, x0
  44c900:	bl	44c8d8 <_obstack_memory_used@@Base+0x7ed4>
  44c904:	mov	x0, x19
  44c908:	ldr	x19, [sp, #16]
  44c90c:	ldp	x29, x30, [sp], #32
  44c910:	b	402d30 <_ZGTtdlPv@plt>
  44c914:	nop
  44c918:	stp	x29, x30, [sp, #-64]!
  44c91c:	mov	x29, sp
  44c920:	stp	x19, x20, [sp, #16]
  44c924:	add	x20, sp, #0x30
  44c928:	mov	x19, x0
  44c92c:	mov	x0, x20
  44c930:	str	x21, [sp, #32]
  44c934:	mov	x21, x1
  44c938:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44c93c:	add	x1, x1, #0xe60
  44c940:	bl	44bc40 <_obstack_memory_used@@Base+0x723c>
  44c944:	mov	x0, x19
  44c948:	mov	x1, x20
  44c94c:	mov	x2, #0x10                  	// #16
  44c950:	bl	402c40 <_ITM_memcpyRnWt@plt>
  44c954:	mov	x0, x19
  44c958:	bl	44bfb0 <_obstack_memory_used@@Base+0x75ac>
  44c95c:	mov	x2, x19
  44c960:	mov	x1, x21
  44c964:	bl	44bee0 <_obstack_memory_used@@Base+0x74dc>
  44c968:	mov	x0, x20
  44c96c:	bl	44b688 <_obstack_memory_used@@Base+0x6c84>
  44c970:	ldp	x19, x20, [sp, #16]
  44c974:	ldr	x21, [sp, #32]
  44c978:	ldp	x29, x30, [sp], #64
  44c97c:	ret
  44c980:	mov	x19, x0
  44c984:	mov	x0, x20
  44c988:	bl	44b688 <_obstack_memory_used@@Base+0x6c84>
  44c98c:	mov	x0, x19
  44c990:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  44c994:	nop
  44c998:	stp	x29, x30, [sp, #-64]!
  44c99c:	mov	x29, sp
  44c9a0:	stp	x19, x20, [sp, #16]
  44c9a4:	add	x20, sp, #0x30
  44c9a8:	mov	x19, x0
  44c9ac:	mov	x0, x20
  44c9b0:	stp	x21, x22, [sp, #32]
  44c9b4:	mov	x22, x1
  44c9b8:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44c9bc:	add	x1, x1, #0xe60
  44c9c0:	bl	44bc40 <_obstack_memory_used@@Base+0x723c>
  44c9c4:	mov	x0, x19
  44c9c8:	mov	x1, x20
  44c9cc:	mov	x2, #0x10                  	// #16
  44c9d0:	bl	402c40 <_ITM_memcpyRnWt@plt>
  44c9d4:	mov	x0, x19
  44c9d8:	bl	44bfb0 <_obstack_memory_used@@Base+0x75ac>
  44c9dc:	mov	x21, x0
  44c9e0:	mov	x0, x22
  44c9e4:	bl	44bf78 <_obstack_memory_used@@Base+0x7574>
  44c9e8:	mov	x1, x0
  44c9ec:	mov	x2, x19
  44c9f0:	mov	x0, x21
  44c9f4:	bl	44bee0 <_obstack_memory_used@@Base+0x74dc>
  44c9f8:	mov	x0, x20
  44c9fc:	bl	44b688 <_obstack_memory_used@@Base+0x6c84>
  44ca00:	ldp	x19, x20, [sp, #16]
  44ca04:	ldp	x21, x22, [sp, #32]
  44ca08:	ldp	x29, x30, [sp], #64
  44ca0c:	ret
  44ca10:	mov	x19, x0
  44ca14:	mov	x0, x20
  44ca18:	bl	44b688 <_obstack_memory_used@@Base+0x6c84>
  44ca1c:	mov	x0, x19
  44ca20:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  44ca24:	nop
  44ca28:	stp	x29, x30, [sp, #-16]!
  44ca2c:	mov	x29, sp
  44ca30:	bl	44bfb0 <_obstack_memory_used@@Base+0x75ac>
  44ca34:	ldp	x29, x30, [sp], #16
  44ca38:	b	44bf80 <_obstack_memory_used@@Base+0x757c>
  44ca3c:	nop
  44ca40:	stp	x29, x30, [sp, #-32]!
  44ca44:	mov	x29, sp
  44ca48:	str	x19, [sp, #16]
  44ca4c:	mov	x19, x0
  44ca50:	bl	44ca28 <_obstack_memory_used@@Base+0x8024>
  44ca54:	mov	x0, x19
  44ca58:	ldr	x19, [sp, #16]
  44ca5c:	ldp	x29, x30, [sp], #32
  44ca60:	b	402d30 <_ZGTtdlPv@plt>
  44ca64:	nop
  44ca68:	stp	x29, x30, [sp, #-64]!
  44ca6c:	mov	x29, sp
  44ca70:	stp	x19, x20, [sp, #16]
  44ca74:	add	x20, sp, #0x30
  44ca78:	mov	x19, x0
  44ca7c:	mov	x0, x20
  44ca80:	str	x21, [sp, #32]
  44ca84:	mov	x21, x1
  44ca88:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44ca8c:	add	x1, x1, #0xe60
  44ca90:	bl	44bc70 <_obstack_memory_used@@Base+0x726c>
  44ca94:	mov	x0, x19
  44ca98:	mov	x1, x20
  44ca9c:	mov	x2, #0x10                  	// #16
  44caa0:	bl	402c40 <_ITM_memcpyRnWt@plt>
  44caa4:	mov	x0, x19
  44caa8:	bl	44bfb0 <_obstack_memory_used@@Base+0x75ac>
  44caac:	mov	x2, x19
  44cab0:	mov	x1, x21
  44cab4:	bl	44bee0 <_obstack_memory_used@@Base+0x74dc>
  44cab8:	mov	x0, x20
  44cabc:	bl	44b6c8 <_obstack_memory_used@@Base+0x6cc4>
  44cac0:	ldp	x19, x20, [sp, #16]
  44cac4:	ldr	x21, [sp, #32]
  44cac8:	ldp	x29, x30, [sp], #64
  44cacc:	ret
  44cad0:	mov	x19, x0
  44cad4:	mov	x0, x20
  44cad8:	bl	44b6c8 <_obstack_memory_used@@Base+0x6cc4>
  44cadc:	mov	x0, x19
  44cae0:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  44cae4:	nop
  44cae8:	stp	x29, x30, [sp, #-64]!
  44caec:	mov	x29, sp
  44caf0:	stp	x19, x20, [sp, #16]
  44caf4:	add	x20, sp, #0x30
  44caf8:	mov	x19, x0
  44cafc:	mov	x0, x20
  44cb00:	stp	x21, x22, [sp, #32]
  44cb04:	mov	x22, x1
  44cb08:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44cb0c:	add	x1, x1, #0xe60
  44cb10:	bl	44bc70 <_obstack_memory_used@@Base+0x726c>
  44cb14:	mov	x0, x19
  44cb18:	mov	x1, x20
  44cb1c:	mov	x2, #0x10                  	// #16
  44cb20:	bl	402c40 <_ITM_memcpyRnWt@plt>
  44cb24:	mov	x0, x19
  44cb28:	bl	44bfb0 <_obstack_memory_used@@Base+0x75ac>
  44cb2c:	mov	x21, x0
  44cb30:	mov	x0, x22
  44cb34:	bl	44bf78 <_obstack_memory_used@@Base+0x7574>
  44cb38:	mov	x1, x0
  44cb3c:	mov	x2, x19
  44cb40:	mov	x0, x21
  44cb44:	bl	44bee0 <_obstack_memory_used@@Base+0x74dc>
  44cb48:	mov	x0, x20
  44cb4c:	bl	44b6c8 <_obstack_memory_used@@Base+0x6cc4>
  44cb50:	ldp	x19, x20, [sp, #16]
  44cb54:	ldp	x21, x22, [sp, #32]
  44cb58:	ldp	x29, x30, [sp], #64
  44cb5c:	ret
  44cb60:	mov	x19, x0
  44cb64:	mov	x0, x20
  44cb68:	bl	44b6c8 <_obstack_memory_used@@Base+0x6cc4>
  44cb6c:	mov	x0, x19
  44cb70:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  44cb74:	nop
  44cb78:	stp	x29, x30, [sp, #-16]!
  44cb7c:	mov	x29, sp
  44cb80:	bl	44bfb0 <_obstack_memory_used@@Base+0x75ac>
  44cb84:	ldp	x29, x30, [sp], #16
  44cb88:	b	44bf80 <_obstack_memory_used@@Base+0x757c>
  44cb8c:	nop
  44cb90:	stp	x29, x30, [sp, #-32]!
  44cb94:	mov	x29, sp
  44cb98:	str	x19, [sp, #16]
  44cb9c:	mov	x19, x0
  44cba0:	bl	44cb78 <_obstack_memory_used@@Base+0x8174>
  44cba4:	mov	x0, x19
  44cba8:	ldr	x19, [sp, #16]
  44cbac:	ldp	x29, x30, [sp], #32
  44cbb0:	b	402d30 <_ZGTtdlPv@plt>
  44cbb4:	nop
  44cbb8:	ldr	x0, [x0]
  44cbbc:	ret
  44cbc0:	mov	x2, x0
  44cbc4:	mov	x0, x1
  44cbc8:	str	x1, [x2]
  44cbcc:	ret
  44cbd0:	ldr	x0, [x0]
  44cbd4:	sub	x0, x0, #0x18
  44cbd8:	ret
  44cbdc:	nop
  44cbe0:	ldr	x0, [x0]
  44cbe4:	ret
  44cbe8:	ldr	x0, [x0]
  44cbec:	ldur	x1, [x0, #-24]
  44cbf0:	add	x0, x0, x1
  44cbf4:	ret
  44cbf8:	ldr	x0, [x0]
  44cbfc:	ldur	x3, [x0, #-24]
  44cc00:	cmp	x3, x1
  44cc04:	b.cc	44cc10 <_obstack_memory_used@@Base+0x820c>  // b.lo, b.ul, b.last
  44cc08:	mov	x0, x1
  44cc0c:	ret
  44cc10:	mov	x4, x2
  44cc14:	stp	x29, x30, [sp, #-16]!
  44cc18:	mov	x2, x1
  44cc1c:	mov	x29, sp
  44cc20:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44cc24:	mov	x1, x4
  44cc28:	add	x0, x0, #0xe90
  44cc2c:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  44cc30:	ldr	x0, [x0]
  44cc34:	mov	x4, #0xfffffffffffffff9    	// #-7
  44cc38:	movk	x4, #0x3fff, lsl #48
  44cc3c:	add	x1, x1, x4
  44cc40:	ldur	x0, [x0, #-24]
  44cc44:	sub	x1, x1, x0
  44cc48:	cmp	x1, x2
  44cc4c:	b.cc	44cc54 <_obstack_memory_used@@Base+0x8250>  // b.lo, b.ul, b.last
  44cc50:	ret
  44cc54:	stp	x29, x30, [sp, #-16]!
  44cc58:	mov	x0, x3
  44cc5c:	mov	x29, sp
  44cc60:	bl	402fd8 <ferror@plt+0x208>
  44cc64:	nop
  44cc68:	ldr	x0, [x0]
  44cc6c:	ldur	x0, [x0, #-24]
  44cc70:	sub	x0, x0, x1
  44cc74:	cmp	x0, x2
  44cc78:	csel	x0, x0, x2, ls  // ls = plast
  44cc7c:	ret
  44cc80:	ldr	x0, [x0]
  44cc84:	cmp	x0, x1
  44cc88:	b.hi	44cca0 <_obstack_memory_used@@Base+0x829c>  // b.pmore
  44cc8c:	ldur	x2, [x0, #-24]
  44cc90:	add	x0, x0, x2
  44cc94:	cmp	x0, x1
  44cc98:	cset	w0, cc  // cc = lo, ul, last
  44cc9c:	ret
  44cca0:	mov	w0, #0x1                   	// #1
  44cca4:	ret
  44cca8:	cmp	x2, #0x1
  44ccac:	mov	x4, x0
  44ccb0:	b.eq	44ccc0 <_obstack_memory_used@@Base+0x82bc>  // b.none
  44ccb4:	cbnz	x2, 44ccbc <_obstack_memory_used@@Base+0x82b8>
  44ccb8:	ret
  44ccbc:	b	4026a0 <memcpy@plt>
  44ccc0:	ldrb	w0, [x1]
  44ccc4:	strb	w0, [x4]
  44ccc8:	ret
  44cccc:	nop
  44ccd0:	cmp	x2, #0x1
  44ccd4:	mov	x4, x0
  44ccd8:	b.eq	44cce8 <_obstack_memory_used@@Base+0x82e4>  // b.none
  44ccdc:	cbnz	x2, 44cce4 <_obstack_memory_used@@Base+0x82e0>
  44cce0:	ret
  44cce4:	b	4026b0 <memmove@plt>
  44cce8:	ldrb	w0, [x1]
  44ccec:	strb	w0, [x4]
  44ccf0:	ret
  44ccf4:	nop
  44ccf8:	mov	x3, x1
  44ccfc:	and	w1, w2, #0xff
  44cd00:	cmp	x3, #0x1
  44cd04:	b.eq	44cd18 <_obstack_memory_used@@Base+0x8314>  // b.none
  44cd08:	cbnz	x3, 44cd10 <_obstack_memory_used@@Base+0x830c>
  44cd0c:	ret
  44cd10:	mov	x2, x3
  44cd14:	b	402930 <memset@plt>
  44cd18:	strb	w1, [x0]
  44cd1c:	ret
  44cd20:	sub	x2, x2, x1
  44cd24:	mov	x4, x0
  44cd28:	cmp	x2, #0x1
  44cd2c:	b.eq	44cd3c <_obstack_memory_used@@Base+0x8338>  // b.none
  44cd30:	cbnz	x2, 44cd38 <_obstack_memory_used@@Base+0x8334>
  44cd34:	ret
  44cd38:	b	4026a0 <memcpy@plt>
  44cd3c:	ldrb	w0, [x1]
  44cd40:	strb	w0, [x4]
  44cd44:	ret
  44cd48:	sub	x2, x2, x1
  44cd4c:	mov	x4, x0
  44cd50:	cmp	x2, #0x1
  44cd54:	b.eq	44cd64 <_obstack_memory_used@@Base+0x8360>  // b.none
  44cd58:	cbnz	x2, 44cd60 <_obstack_memory_used@@Base+0x835c>
  44cd5c:	ret
  44cd60:	b	4026a0 <memcpy@plt>
  44cd64:	ldrb	w0, [x1]
  44cd68:	strb	w0, [x4]
  44cd6c:	ret
  44cd70:	sub	x2, x2, x1
  44cd74:	mov	x4, x0
  44cd78:	cmp	x2, #0x1
  44cd7c:	b.eq	44cd8c <_obstack_memory_used@@Base+0x8388>  // b.none
  44cd80:	cbnz	x2, 44cd88 <_obstack_memory_used@@Base+0x8384>
  44cd84:	ret
  44cd88:	b	4026a0 <memcpy@plt>
  44cd8c:	ldrb	w0, [x1]
  44cd90:	strb	w0, [x4]
  44cd94:	ret
  44cd98:	sub	x2, x2, x1
  44cd9c:	mov	x4, x0
  44cda0:	cmp	x2, #0x1
  44cda4:	b.eq	44cdb4 <_obstack_memory_used@@Base+0x83b0>  // b.none
  44cda8:	cbnz	x2, 44cdb0 <_obstack_memory_used@@Base+0x83ac>
  44cdac:	ret
  44cdb0:	b	4026a0 <memcpy@plt>
  44cdb4:	ldrb	w0, [x1]
  44cdb8:	strb	w0, [x4]
  44cdbc:	ret
  44cdc0:	sub	x0, x0, x1
  44cdc4:	mov	x2, #0x7fffffff            	// #2147483647
  44cdc8:	cmp	x0, x2
  44cdcc:	b.gt	44cde0 <_obstack_memory_used@@Base+0x83dc>
  44cdd0:	mov	x2, #0xffffffff80000000    	// #-2147483648
  44cdd4:	cmp	x0, x2
  44cdd8:	csel	w0, w2, w0, lt  // lt = tstop
  44cddc:	ret
  44cde0:	mov	w0, w2
  44cde4:	ret
  44cde8:	adrp	x0, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44cdec:	ldr	x0, [x0, #3984]
  44cdf0:	ret
  44cdf4:	nop
  44cdf8:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44cdfc:	ldr	x1, [x1, #3984]
  44ce00:	add	x1, x1, #0x18
  44ce04:	str	x1, [x0]
  44ce08:	ret
  44ce0c:	nop
  44ce10:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44ce14:	ldr	x3, [x1]
  44ce18:	str	x3, [x0]
  44ce1c:	ldr	x2, [x2, #3984]
  44ce20:	add	x2, x2, #0x18
  44ce24:	str	x2, [x1]
  44ce28:	ret
  44ce2c:	nop
  44ce30:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44ce34:	ldr	x3, [x1]
  44ce38:	str	x3, [x0]
  44ce3c:	ldr	x2, [x2, #3984]
  44ce40:	add	x2, x2, #0x18
  44ce44:	str	x2, [x1]
  44ce48:	ret
  44ce4c:	nop
  44ce50:	ldr	x0, [x0]
  44ce54:	ret
  44ce58:	ldr	x0, [x0]
  44ce5c:	ldur	x1, [x0, #-24]
  44ce60:	add	x0, x0, x1
  44ce64:	ret
  44ce68:	mov	x1, x0
  44ce6c:	mov	x0, x8
  44ce70:	ldr	x1, [x1]
  44ce74:	ldur	x2, [x1, #-24]
  44ce78:	add	x1, x1, x2
  44ce7c:	str	x1, [x8]
  44ce80:	ret
  44ce84:	nop
  44ce88:	mov	x1, x0
  44ce8c:	mov	x0, x8
  44ce90:	ldr	x1, [x1]
  44ce94:	str	x1, [x8]
  44ce98:	ret
  44ce9c:	nop
  44cea0:	ldr	x0, [x0]
  44cea4:	ret
  44cea8:	ldr	x0, [x0]
  44ceac:	ldur	x1, [x0, #-24]
  44ceb0:	add	x0, x0, x1
  44ceb4:	ret
  44ceb8:	mov	x1, x0
  44cebc:	mov	x0, x8
  44cec0:	ldr	x1, [x1]
  44cec4:	ldur	x2, [x1, #-24]
  44cec8:	add	x1, x1, x2
  44cecc:	str	x1, [x8]
  44ced0:	ret
  44ced4:	nop
  44ced8:	mov	x1, x0
  44cedc:	mov	x0, x8
  44cee0:	ldr	x1, [x1]
  44cee4:	str	x1, [x8]
  44cee8:	ret
  44ceec:	nop
  44cef0:	ldr	x0, [x0]
  44cef4:	ldur	x0, [x0, #-24]
  44cef8:	ret
  44cefc:	nop
  44cf00:	ldr	x0, [x0]
  44cf04:	ldur	x0, [x0, #-24]
  44cf08:	ret
  44cf0c:	nop
  44cf10:	mov	x0, #0xfffffffffffffff9    	// #-7
  44cf14:	movk	x0, #0x3fff, lsl #48
  44cf18:	ret
  44cf1c:	nop
  44cf20:	ldr	x0, [x0]
  44cf24:	ldur	x0, [x0, #-16]
  44cf28:	ret
  44cf2c:	nop
  44cf30:	ldr	x0, [x0]
  44cf34:	ldur	x0, [x0, #-24]
  44cf38:	cmp	x0, #0x0
  44cf3c:	cset	w0, eq  // eq = none
  44cf40:	ret
  44cf44:	nop
  44cf48:	ldr	x0, [x0]
  44cf4c:	add	x0, x0, x1
  44cf50:	ret
  44cf54:	nop
  44cf58:	ldr	x0, [x0]
  44cf5c:	ldur	x2, [x0, #-24]
  44cf60:	cmp	x1, x2
  44cf64:	b.cs	44cf70 <_obstack_memory_used@@Base+0x856c>  // b.hs, b.nlast
  44cf68:	add	x0, x0, x1
  44cf6c:	ret
  44cf70:	stp	x29, x30, [sp, #-16]!
  44cf74:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44cf78:	add	x0, x0, #0xec8
  44cf7c:	mov	x29, sp
  44cf80:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  44cf84:	nop
  44cf88:	ldr	x0, [x0]
  44cf8c:	ret
  44cf90:	ldr	x1, [x0]
  44cf94:	ldur	x0, [x1, #-24]
  44cf98:	sub	x0, x0, #0x1
  44cf9c:	add	x0, x1, x0
  44cfa0:	ret
  44cfa4:	nop
  44cfa8:	stp	x29, x30, [sp, #-32]!
  44cfac:	mov	x5, x3
  44cfb0:	mov	x29, sp
  44cfb4:	ldr	x0, [x0]
  44cfb8:	ldur	x4, [x0, #-24]
  44cfbc:	str	x19, [sp, #16]
  44cfc0:	cmp	x3, x4
  44cfc4:	b.hi	44d01c <_obstack_memory_used@@Base+0x8618>  // b.pmore
  44cfc8:	sub	x4, x4, x3
  44cfcc:	cmp	x4, x2
  44cfd0:	csel	x19, x4, x2, ls  // ls = plast
  44cfd4:	cbz	x19, 44cff4 <_obstack_memory_used@@Base+0x85f0>
  44cfd8:	mov	x3, x1
  44cfdc:	cmp	x19, #0x1
  44cfe0:	add	x1, x0, x5
  44cfe4:	b.eq	44d004 <_obstack_memory_used@@Base+0x8600>  // b.none
  44cfe8:	mov	x0, x3
  44cfec:	mov	x2, x19
  44cff0:	bl	4026a0 <memcpy@plt>
  44cff4:	mov	x0, x19
  44cff8:	ldr	x19, [sp, #16]
  44cffc:	ldp	x29, x30, [sp], #32
  44d000:	ret
  44d004:	ldrb	w0, [x0, x5]
  44d008:	strb	w0, [x3]
  44d00c:	mov	x0, x19
  44d010:	ldr	x19, [sp, #16]
  44d014:	ldp	x29, x30, [sp], #32
  44d018:	ret
  44d01c:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44d020:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44d024:	mov	x3, x4
  44d028:	mov	x2, x5
  44d02c:	add	x1, x1, #0xfc8
  44d030:	add	x0, x0, #0xe90
  44d034:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  44d038:	ldr	x2, [x0]
  44d03c:	sub	x3, x2, #0x8
  44d040:	ldr	w3, [x3]
  44d044:	tbz	w3, #31, 44d04c <_obstack_memory_used@@Base+0x8648>
  44d048:	stur	wzr, [x2, #-8]
  44d04c:	ldr	x3, [x1]
  44d050:	sub	x4, x3, #0x8
  44d054:	ldr	w4, [x4]
  44d058:	tbz	w4, #31, 44d060 <_obstack_memory_used@@Base+0x865c>
  44d05c:	stur	wzr, [x3, #-8]
  44d060:	str	x3, [x0]
  44d064:	str	x2, [x1]
  44d068:	ret
  44d06c:	nop
  44d070:	stp	x29, x30, [sp, #-32]!
  44d074:	mov	x29, sp
  44d078:	str	x19, [sp, #16]
  44d07c:	mov	x19, x0
  44d080:	bl	44d038 <_obstack_memory_used@@Base+0x8634>
  44d084:	mov	x0, x19
  44d088:	ldr	x19, [sp, #16]
  44d08c:	ldp	x29, x30, [sp], #32
  44d090:	ret
  44d094:	nop
  44d098:	stp	x29, x30, [sp, #-32]!
  44d09c:	mov	x29, sp
  44d0a0:	str	x19, [sp, #16]
  44d0a4:	mov	x19, x0
  44d0a8:	bl	44d038 <_obstack_memory_used@@Base+0x8634>
  44d0ac:	mov	x0, x19
  44d0b0:	ldr	x19, [sp, #16]
  44d0b4:	ldp	x29, x30, [sp], #32
  44d0b8:	ret
  44d0bc:	nop
  44d0c0:	ldr	x0, [x0]
  44d0c4:	ret
  44d0c8:	ldr	x0, [x0]
  44d0cc:	ret
  44d0d0:	mov	x0, x8
  44d0d4:	ret
  44d0d8:	stp	x29, x30, [sp, #-80]!
  44d0dc:	mov	x29, sp
  44d0e0:	stp	x23, x24, [sp, #48]
  44d0e4:	ldr	x23, [x0]
  44d0e8:	stp	x21, x22, [sp, #32]
  44d0ec:	stp	x19, x20, [sp, #16]
  44d0f0:	ldur	x21, [x23, #-24]
  44d0f4:	cmp	x21, x2
  44d0f8:	csinv	x19, x2, xzr, cs  // cs = hs, nlast
  44d0fc:	cbz	x3, 44d180 <_obstack_memory_used@@Base+0x877c>
  44d100:	mov	x19, #0xffffffffffffffff    	// #-1
  44d104:	b.ls	44d180 <_obstack_memory_used@@Base+0x877c>  // b.plast
  44d108:	str	x25, [sp, #64]
  44d10c:	sub	x4, x21, x2
  44d110:	add	x0, x23, x2
  44d114:	add	x21, x23, x21
  44d118:	mov	x25, x3
  44d11c:	cmp	x3, x4
  44d120:	b.hi	44d198 <_obstack_memory_used@@Base+0x8794>  // b.pmore
  44d124:	mov	x20, #0x1                   	// #1
  44d128:	sub	x20, x20, x3
  44d12c:	adds	x2, x20, x4
  44d130:	b.eq	44d198 <_obstack_memory_used@@Base+0x8794>  // b.none
  44d134:	ldrb	w24, [x1]
  44d138:	mov	x22, x1
  44d13c:	mov	w1, w24
  44d140:	bl	402c20 <memchr@plt>
  44d144:	mov	x2, x25
  44d148:	mov	x19, x0
  44d14c:	cbz	x0, 44d178 <_obstack_memory_used@@Base+0x8774>
  44d150:	mov	x1, x22
  44d154:	bl	402a90 <memcmp@plt>
  44d158:	mov	w1, w0
  44d15c:	add	x0, x19, #0x1
  44d160:	sub	x2, x21, x0
  44d164:	cbz	w1, 44d1b4 <_obstack_memory_used@@Base+0x87b0>
  44d168:	cmp	x25, x2
  44d16c:	b.hi	44d178 <_obstack_memory_used@@Base+0x8774>  // b.pmore
  44d170:	adds	x2, x20, x2
  44d174:	b.ne	44d13c <_obstack_memory_used@@Base+0x8738>  // b.any
  44d178:	ldr	x25, [sp, #64]
  44d17c:	mov	x19, #0xffffffffffffffff    	// #-1
  44d180:	mov	x0, x19
  44d184:	ldp	x19, x20, [sp, #16]
  44d188:	ldp	x21, x22, [sp, #32]
  44d18c:	ldp	x23, x24, [sp, #48]
  44d190:	ldp	x29, x30, [sp], #80
  44d194:	ret
  44d198:	mov	x0, x19
  44d19c:	ldp	x19, x20, [sp, #16]
  44d1a0:	ldp	x21, x22, [sp, #32]
  44d1a4:	ldp	x23, x24, [sp, #48]
  44d1a8:	ldr	x25, [sp, #64]
  44d1ac:	ldp	x29, x30, [sp], #80
  44d1b0:	ret
  44d1b4:	sub	x19, x19, x23
  44d1b8:	ldr	x25, [sp, #64]
  44d1bc:	b	44d180 <_obstack_memory_used@@Base+0x877c>
  44d1c0:	ldr	x1, [x1]
  44d1c4:	ldur	x3, [x1, #-24]
  44d1c8:	b	44d0d8 <_obstack_memory_used@@Base+0x86d4>
  44d1cc:	nop
  44d1d0:	stp	x29, x30, [sp, #-48]!
  44d1d4:	mov	x29, sp
  44d1d8:	stp	x19, x20, [sp, #16]
  44d1dc:	mov	x19, x1
  44d1e0:	mov	x20, x0
  44d1e4:	mov	x0, x1
  44d1e8:	str	x21, [sp, #32]
  44d1ec:	mov	x21, x2
  44d1f0:	bl	402700 <strlen@plt>
  44d1f4:	mov	x2, x21
  44d1f8:	mov	x3, x0
  44d1fc:	mov	x1, x19
  44d200:	mov	x0, x20
  44d204:	ldp	x19, x20, [sp, #16]
  44d208:	ldr	x21, [sp, #32]
  44d20c:	ldp	x29, x30, [sp], #48
  44d210:	b	44d0d8 <_obstack_memory_used@@Base+0x86d4>
  44d214:	nop
  44d218:	stp	x29, x30, [sp, #-32]!
  44d21c:	mov	x3, x2
  44d220:	mov	x29, sp
  44d224:	str	x19, [sp, #16]
  44d228:	ldr	x19, [x0]
  44d22c:	mov	x0, #0xffffffffffffffff    	// #-1
  44d230:	ldur	x2, [x19, #-24]
  44d234:	cmp	x3, x2
  44d238:	b.cs	44d258 <_obstack_memory_used@@Base+0x8854>  // b.hs, b.nlast
  44d23c:	add	x0, x19, x3
  44d240:	and	w1, w1, #0xff
  44d244:	sub	x2, x2, x3
  44d248:	bl	402c20 <memchr@plt>
  44d24c:	sub	x19, x0, x19
  44d250:	cmp	x0, #0x0
  44d254:	csinv	x0, x19, xzr, ne  // ne = any
  44d258:	ldr	x19, [sp, #16]
  44d25c:	ldp	x29, x30, [sp], #32
  44d260:	ret
  44d264:	nop
  44d268:	stp	x29, x30, [sp, #-48]!
  44d26c:	mov	x29, sp
  44d270:	stp	x21, x22, [sp, #32]
  44d274:	ldr	x22, [x0]
  44d278:	stp	x19, x20, [sp, #16]
  44d27c:	ldur	x0, [x22, #-24]
  44d280:	cmp	x3, x0
  44d284:	b.hi	44d2d8 <_obstack_memory_used@@Base+0x88d4>  // b.pmore
  44d288:	sub	x0, x0, x3
  44d28c:	mov	x20, x3
  44d290:	cmp	x0, x2
  44d294:	mov	x21, x1
  44d298:	csel	x19, x0, x2, ls  // ls = plast
  44d29c:	cbz	x20, 44d2c4 <_obstack_memory_used@@Base+0x88c0>
  44d2a0:	mov	x2, x20
  44d2a4:	mov	x1, x21
  44d2a8:	add	x0, x22, x19
  44d2ac:	bl	402a90 <memcmp@plt>
  44d2b0:	cbz	w0, 44d2c4 <_obstack_memory_used@@Base+0x88c0>
  44d2b4:	sub	x0, x19, #0x1
  44d2b8:	cbz	x19, 44d2d8 <_obstack_memory_used@@Base+0x88d4>
  44d2bc:	mov	x19, x0
  44d2c0:	cbnz	x20, 44d2a0 <_obstack_memory_used@@Base+0x889c>
  44d2c4:	mov	x0, x19
  44d2c8:	ldp	x19, x20, [sp, #16]
  44d2cc:	ldp	x21, x22, [sp, #32]
  44d2d0:	ldp	x29, x30, [sp], #48
  44d2d4:	ret
  44d2d8:	mov	x19, #0xffffffffffffffff    	// #-1
  44d2dc:	mov	x0, x19
  44d2e0:	ldp	x19, x20, [sp, #16]
  44d2e4:	ldp	x21, x22, [sp, #32]
  44d2e8:	ldp	x29, x30, [sp], #48
  44d2ec:	ret
  44d2f0:	ldr	x1, [x1]
  44d2f4:	ldur	x3, [x1, #-24]
  44d2f8:	b	44d268 <_obstack_memory_used@@Base+0x8864>
  44d2fc:	nop
  44d300:	stp	x29, x30, [sp, #-48]!
  44d304:	mov	x29, sp
  44d308:	stp	x19, x20, [sp, #16]
  44d30c:	mov	x19, x1
  44d310:	mov	x20, x0
  44d314:	mov	x0, x1
  44d318:	str	x21, [sp, #32]
  44d31c:	mov	x21, x2
  44d320:	bl	402700 <strlen@plt>
  44d324:	mov	x2, x21
  44d328:	mov	x3, x0
  44d32c:	mov	x1, x19
  44d330:	mov	x0, x20
  44d334:	ldp	x19, x20, [sp, #16]
  44d338:	ldr	x21, [sp, #32]
  44d33c:	ldp	x29, x30, [sp], #48
  44d340:	b	44d268 <_obstack_memory_used@@Base+0x8864>
  44d344:	nop
  44d348:	ldr	x4, [x0]
  44d34c:	and	w1, w1, #0xff
  44d350:	mov	x0, #0xffffffffffffffff    	// #-1
  44d354:	ldur	x3, [x4, #-24]
  44d358:	cbz	x3, 44d380 <_obstack_memory_used@@Base+0x897c>
  44d35c:	sub	x3, x3, #0x1
  44d360:	cmp	x3, x2
  44d364:	csel	x0, x3, x2, ls  // ls = plast
  44d368:	ldrb	w2, [x4, x0]
  44d36c:	cmp	w2, w1
  44d370:	b.eq	44d380 <_obstack_memory_used@@Base+0x897c>  // b.none
  44d374:	sub	x0, x0, #0x1
  44d378:	cmn	x0, #0x1
  44d37c:	b.ne	44d368 <_obstack_memory_used@@Base+0x8964>  // b.any
  44d380:	ret
  44d384:	nop
  44d388:	cbz	x3, 44d408 <_obstack_memory_used@@Base+0x8a04>
  44d38c:	stp	x29, x30, [sp, #-64]!
  44d390:	mov	x29, sp
  44d394:	stp	x21, x22, [sp, #32]
  44d398:	mov	x21, x1
  44d39c:	ldr	x22, [x0]
  44d3a0:	stp	x19, x20, [sp, #16]
  44d3a4:	mov	x19, x2
  44d3a8:	mov	x20, x3
  44d3ac:	str	x23, [sp, #48]
  44d3b0:	ldur	x23, [x22, #-24]
  44d3b4:	b	44d3d0 <_obstack_memory_used@@Base+0x89cc>
  44d3b8:	ldrb	w1, [x22, x19]
  44d3bc:	mov	x2, x20
  44d3c0:	mov	x0, x21
  44d3c4:	bl	402c20 <memchr@plt>
  44d3c8:	cbnz	x0, 44d3f0 <_obstack_memory_used@@Base+0x89ec>
  44d3cc:	add	x19, x19, #0x1
  44d3d0:	cmp	x23, x19
  44d3d4:	b.hi	44d3b8 <_obstack_memory_used@@Base+0x89b4>  // b.pmore
  44d3d8:	mov	x0, #0xffffffffffffffff    	// #-1
  44d3dc:	ldp	x19, x20, [sp, #16]
  44d3e0:	ldp	x21, x22, [sp, #32]
  44d3e4:	ldr	x23, [sp, #48]
  44d3e8:	ldp	x29, x30, [sp], #64
  44d3ec:	ret
  44d3f0:	mov	x0, x19
  44d3f4:	ldp	x19, x20, [sp, #16]
  44d3f8:	ldp	x21, x22, [sp, #32]
  44d3fc:	ldr	x23, [sp, #48]
  44d400:	ldp	x29, x30, [sp], #64
  44d404:	ret
  44d408:	mov	x0, #0xffffffffffffffff    	// #-1
  44d40c:	ret
  44d410:	ldr	x1, [x1]
  44d414:	ldur	x3, [x1, #-24]
  44d418:	b	44d388 <_obstack_memory_used@@Base+0x8984>
  44d41c:	nop
  44d420:	stp	x29, x30, [sp, #-48]!
  44d424:	mov	x29, sp
  44d428:	stp	x19, x20, [sp, #16]
  44d42c:	mov	x19, x1
  44d430:	mov	x20, x0
  44d434:	mov	x0, x1
  44d438:	str	x21, [sp, #32]
  44d43c:	mov	x21, x2
  44d440:	bl	402700 <strlen@plt>
  44d444:	mov	x2, x21
  44d448:	mov	x3, x0
  44d44c:	mov	x1, x19
  44d450:	mov	x0, x20
  44d454:	ldp	x19, x20, [sp, #16]
  44d458:	ldr	x21, [sp, #32]
  44d45c:	ldp	x29, x30, [sp], #48
  44d460:	b	44d388 <_obstack_memory_used@@Base+0x8984>
  44d464:	nop
  44d468:	b	44d218 <_obstack_memory_used@@Base+0x8814>
  44d46c:	nop
  44d470:	stp	x29, x30, [sp, #-48]!
  44d474:	mov	x29, sp
  44d478:	stp	x21, x22, [sp, #32]
  44d47c:	ldr	x22, [x0]
  44d480:	stp	x19, x20, [sp, #16]
  44d484:	mov	x19, #0xffffffffffffffff    	// #-1
  44d488:	ldur	x0, [x22, #-24]
  44d48c:	cmp	x0, #0x0
  44d490:	ccmp	x3, #0x0, #0x4, ne  // ne = any
  44d494:	b.eq	44d4d0 <_obstack_memory_used@@Base+0x8acc>  // b.none
  44d498:	sub	x0, x0, #0x1
  44d49c:	mov	x20, x3
  44d4a0:	cmp	x0, x2
  44d4a4:	mov	x21, x1
  44d4a8:	csel	x19, x0, x2, ls  // ls = plast
  44d4ac:	b	44d4bc <_obstack_memory_used@@Base+0x8ab8>
  44d4b0:	sub	x19, x19, #0x1
  44d4b4:	cmn	x19, #0x1
  44d4b8:	b.eq	44d4d0 <_obstack_memory_used@@Base+0x8acc>  // b.none
  44d4bc:	ldrb	w1, [x22, x19]
  44d4c0:	mov	x2, x20
  44d4c4:	mov	x0, x21
  44d4c8:	bl	402c20 <memchr@plt>
  44d4cc:	cbz	x0, 44d4b0 <_obstack_memory_used@@Base+0x8aac>
  44d4d0:	mov	x0, x19
  44d4d4:	ldp	x19, x20, [sp, #16]
  44d4d8:	ldp	x21, x22, [sp, #32]
  44d4dc:	ldp	x29, x30, [sp], #48
  44d4e0:	ret
  44d4e4:	nop
  44d4e8:	ldr	x1, [x1]
  44d4ec:	ldur	x3, [x1, #-24]
  44d4f0:	b	44d470 <_obstack_memory_used@@Base+0x8a6c>
  44d4f4:	nop
  44d4f8:	stp	x29, x30, [sp, #-48]!
  44d4fc:	mov	x29, sp
  44d500:	stp	x19, x20, [sp, #16]
  44d504:	mov	x19, x1
  44d508:	mov	x20, x0
  44d50c:	mov	x0, x1
  44d510:	str	x21, [sp, #32]
  44d514:	mov	x21, x2
  44d518:	bl	402700 <strlen@plt>
  44d51c:	mov	x2, x21
  44d520:	mov	x3, x0
  44d524:	mov	x1, x19
  44d528:	mov	x0, x20
  44d52c:	ldp	x19, x20, [sp, #16]
  44d530:	ldr	x21, [sp, #32]
  44d534:	ldp	x29, x30, [sp], #48
  44d538:	b	44d470 <_obstack_memory_used@@Base+0x8a6c>
  44d53c:	nop
  44d540:	b	44d348 <_obstack_memory_used@@Base+0x8944>
  44d544:	nop
  44d548:	stp	x29, x30, [sp, #-64]!
  44d54c:	mov	x29, sp
  44d550:	stp	x21, x22, [sp, #32]
  44d554:	ldr	x22, [x0]
  44d558:	str	x23, [sp, #48]
  44d55c:	ldur	x23, [x22, #-24]
  44d560:	cmp	x2, x23
  44d564:	b.cs	44d5d0 <_obstack_memory_used@@Base+0x8bcc>  // b.hs, b.nlast
  44d568:	stp	x19, x20, [sp, #16]
  44d56c:	mov	x21, x1
  44d570:	mov	x19, x2
  44d574:	mov	x20, x3
  44d578:	cbnz	x3, 44d58c <_obstack_memory_used@@Base+0x8b88>
  44d57c:	b	44d5a0 <_obstack_memory_used@@Base+0x8b9c>
  44d580:	add	x19, x19, #0x1
  44d584:	cmp	x19, x23
  44d588:	b.eq	44d5b8 <_obstack_memory_used@@Base+0x8bb4>  // b.none
  44d58c:	ldrb	w1, [x22, x19]
  44d590:	mov	x2, x20
  44d594:	mov	x0, x21
  44d598:	bl	402c20 <memchr@plt>
  44d59c:	cbnz	x0, 44d580 <_obstack_memory_used@@Base+0x8b7c>
  44d5a0:	mov	x0, x19
  44d5a4:	ldp	x19, x20, [sp, #16]
  44d5a8:	ldp	x21, x22, [sp, #32]
  44d5ac:	ldr	x23, [sp, #48]
  44d5b0:	ldp	x29, x30, [sp], #64
  44d5b4:	ret
  44d5b8:	mov	x0, #0xffffffffffffffff    	// #-1
  44d5bc:	ldp	x19, x20, [sp, #16]
  44d5c0:	ldp	x21, x22, [sp, #32]
  44d5c4:	ldr	x23, [sp, #48]
  44d5c8:	ldp	x29, x30, [sp], #64
  44d5cc:	ret
  44d5d0:	mov	x0, #0xffffffffffffffff    	// #-1
  44d5d4:	b	44d5a8 <_obstack_memory_used@@Base+0x8ba4>
  44d5d8:	ldr	x1, [x1]
  44d5dc:	ldur	x3, [x1, #-24]
  44d5e0:	b	44d548 <_obstack_memory_used@@Base+0x8b44>
  44d5e4:	nop
  44d5e8:	stp	x29, x30, [sp, #-48]!
  44d5ec:	mov	x29, sp
  44d5f0:	stp	x19, x20, [sp, #16]
  44d5f4:	mov	x19, x1
  44d5f8:	mov	x20, x0
  44d5fc:	mov	x0, x1
  44d600:	str	x21, [sp, #32]
  44d604:	mov	x21, x2
  44d608:	bl	402700 <strlen@plt>
  44d60c:	mov	x2, x21
  44d610:	mov	x3, x0
  44d614:	mov	x1, x19
  44d618:	mov	x0, x20
  44d61c:	ldp	x19, x20, [sp, #16]
  44d620:	ldr	x21, [sp, #32]
  44d624:	ldp	x29, x30, [sp], #48
  44d628:	b	44d548 <_obstack_memory_used@@Base+0x8b44>
  44d62c:	nop
  44d630:	ldr	x3, [x0]
  44d634:	and	w1, w1, #0xff
  44d638:	ldur	x4, [x3, #-24]
  44d63c:	cmp	x2, x4
  44d640:	b.cc	44d654 <_obstack_memory_used@@Base+0x8c50>  // b.lo, b.ul, b.last
  44d644:	b	44d668 <_obstack_memory_used@@Base+0x8c64>
  44d648:	add	x2, x2, #0x1
  44d64c:	cmp	x2, x4
  44d650:	b.eq	44d668 <_obstack_memory_used@@Base+0x8c64>  // b.none
  44d654:	ldrb	w0, [x3, x2]
  44d658:	cmp	w0, w1
  44d65c:	b.eq	44d648 <_obstack_memory_used@@Base+0x8c44>  // b.none
  44d660:	mov	x0, x2
  44d664:	ret
  44d668:	mov	x0, #0xffffffffffffffff    	// #-1
  44d66c:	ret
  44d670:	stp	x29, x30, [sp, #-48]!
  44d674:	mov	x29, sp
  44d678:	stp	x21, x22, [sp, #32]
  44d67c:	ldr	x22, [x0]
  44d680:	stp	x19, x20, [sp, #16]
  44d684:	mov	x19, #0xffffffffffffffff    	// #-1
  44d688:	ldur	x0, [x22, #-24]
  44d68c:	cbz	x0, 44d6c8 <_obstack_memory_used@@Base+0x8cc4>
  44d690:	sub	x0, x0, #0x1
  44d694:	mov	x21, x1
  44d698:	cmp	x0, x2
  44d69c:	mov	x20, x3
  44d6a0:	csel	x19, x0, x2, ls  // ls = plast
  44d6a4:	cbz	x20, 44d6c8 <_obstack_memory_used@@Base+0x8cc4>
  44d6a8:	ldrb	w1, [x22, x19]
  44d6ac:	mov	x2, x20
  44d6b0:	mov	x0, x21
  44d6b4:	bl	402c20 <memchr@plt>
  44d6b8:	cbz	x0, 44d6c8 <_obstack_memory_used@@Base+0x8cc4>
  44d6bc:	sub	x19, x19, #0x1
  44d6c0:	cmn	x19, #0x1
  44d6c4:	b.ne	44d6a4 <_obstack_memory_used@@Base+0x8ca0>  // b.any
  44d6c8:	mov	x0, x19
  44d6cc:	ldp	x19, x20, [sp, #16]
  44d6d0:	ldp	x21, x22, [sp, #32]
  44d6d4:	ldp	x29, x30, [sp], #48
  44d6d8:	ret
  44d6dc:	nop
  44d6e0:	ldr	x1, [x1]
  44d6e4:	ldur	x3, [x1, #-24]
  44d6e8:	b	44d670 <_obstack_memory_used@@Base+0x8c6c>
  44d6ec:	nop
  44d6f0:	stp	x29, x30, [sp, #-48]!
  44d6f4:	mov	x29, sp
  44d6f8:	stp	x19, x20, [sp, #16]
  44d6fc:	mov	x19, x1
  44d700:	mov	x20, x0
  44d704:	mov	x0, x1
  44d708:	str	x21, [sp, #32]
  44d70c:	mov	x21, x2
  44d710:	bl	402700 <strlen@plt>
  44d714:	mov	x2, x21
  44d718:	mov	x3, x0
  44d71c:	mov	x1, x19
  44d720:	mov	x0, x20
  44d724:	ldp	x19, x20, [sp, #16]
  44d728:	ldr	x21, [sp, #32]
  44d72c:	ldp	x29, x30, [sp], #48
  44d730:	b	44d670 <_obstack_memory_used@@Base+0x8c6c>
  44d734:	nop
  44d738:	ldr	x4, [x0]
  44d73c:	and	w1, w1, #0xff
  44d740:	mov	x0, #0xffffffffffffffff    	// #-1
  44d744:	ldur	x3, [x4, #-24]
  44d748:	cbz	x3, 44d774 <_obstack_memory_used@@Base+0x8d70>
  44d74c:	sub	x3, x3, #0x1
  44d750:	cmp	x3, x2
  44d754:	csel	x0, x3, x2, ls  // ls = plast
  44d758:	b	44d768 <_obstack_memory_used@@Base+0x8d64>
  44d75c:	sub	x0, x0, #0x1
  44d760:	cmn	x0, #0x1
  44d764:	b.eq	44d774 <_obstack_memory_used@@Base+0x8d70>  // b.none
  44d768:	ldrb	w2, [x4, x0]
  44d76c:	cmp	w2, w1
  44d770:	b.eq	44d75c <_obstack_memory_used@@Base+0x8d58>  // b.none
  44d774:	ret
  44d778:	stp	x29, x30, [sp, #-32]!
  44d77c:	mov	x29, sp
  44d780:	ldr	x0, [x0]
  44d784:	stp	x19, x20, [sp, #16]
  44d788:	ldr	x1, [x1]
  44d78c:	ldur	x19, [x0, #-24]
  44d790:	ldur	x20, [x1, #-24]
  44d794:	cmp	x20, x19
  44d798:	csel	x2, x20, x19, ls  // ls = plast
  44d79c:	cbz	x2, 44d7a8 <_obstack_memory_used@@Base+0x8da4>
  44d7a0:	bl	402a90 <memcmp@plt>
  44d7a4:	cbnz	w0, 44d7c4 <_obstack_memory_used@@Base+0x8dc0>
  44d7a8:	sub	x19, x19, x20
  44d7ac:	mov	x0, #0x7fffffff            	// #2147483647
  44d7b0:	cmp	x19, x0
  44d7b4:	b.gt	44d7c4 <_obstack_memory_used@@Base+0x8dc0>
  44d7b8:	mov	x0, #0xffffffff80000000    	// #-2147483648
  44d7bc:	cmp	x19, x0
  44d7c0:	csel	w0, w0, w19, lt  // lt = tstop
  44d7c4:	ldp	x19, x20, [sp, #16]
  44d7c8:	ldp	x29, x30, [sp], #32
  44d7cc:	ret
  44d7d0:	stp	x29, x30, [sp, #-32]!
  44d7d4:	mov	x5, x1
  44d7d8:	mov	x29, sp
  44d7dc:	ldr	x0, [x0]
  44d7e0:	stp	x19, x20, [sp, #16]
  44d7e4:	ldur	x4, [x0, #-24]
  44d7e8:	cmp	x1, x4
  44d7ec:	b.hi	44d844 <_obstack_memory_used@@Base+0x8e40>  // b.pmore
  44d7f0:	sub	x4, x4, x1
  44d7f4:	ldr	x1, [x3]
  44d7f8:	cmp	x4, x2
  44d7fc:	csel	x19, x4, x2, ls  // ls = plast
  44d800:	ldur	x20, [x1, #-24]
  44d804:	cmp	x20, x19
  44d808:	csel	x2, x20, x19, ls  // ls = plast
  44d80c:	cbz	x2, 44d81c <_obstack_memory_used@@Base+0x8e18>
  44d810:	add	x0, x0, x5
  44d814:	bl	402a90 <memcmp@plt>
  44d818:	cbnz	w0, 44d838 <_obstack_memory_used@@Base+0x8e34>
  44d81c:	sub	x19, x19, x20
  44d820:	mov	x0, #0x7fffffff            	// #2147483647
  44d824:	cmp	x19, x0
  44d828:	b.gt	44d838 <_obstack_memory_used@@Base+0x8e34>
  44d82c:	mov	x0, #0xffffffff80000000    	// #-2147483648
  44d830:	cmp	x19, x0
  44d834:	csel	w0, w0, w19, lt  // lt = tstop
  44d838:	ldp	x19, x20, [sp, #16]
  44d83c:	ldp	x29, x30, [sp], #32
  44d840:	ret
  44d844:	mov	x2, x1
  44d848:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44d84c:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44d850:	mov	x3, x4
  44d854:	add	x1, x1, #0xfe0
  44d858:	add	x0, x0, #0xe90
  44d85c:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  44d860:	stp	x29, x30, [sp, #-32]!
  44d864:	mov	x7, x1
  44d868:	mov	x29, sp
  44d86c:	ldr	x0, [x0]
  44d870:	stp	x19, x20, [sp, #16]
  44d874:	ldur	x6, [x0, #-24]
  44d878:	cmp	x1, x6
  44d87c:	b.hi	44d8ec <_obstack_memory_used@@Base+0x8ee8>  // b.pmore
  44d880:	ldr	x1, [x3]
  44d884:	ldur	x3, [x1, #-24]
  44d888:	cmp	x4, x3
  44d88c:	b.hi	44d908 <_obstack_memory_used@@Base+0x8f04>  // b.pmore
  44d890:	sub	x6, x6, x7
  44d894:	sub	x3, x3, x4
  44d898:	cmp	x6, x2
  44d89c:	csel	x19, x6, x2, ls  // ls = plast
  44d8a0:	cmp	x3, x5
  44d8a4:	csel	x20, x3, x5, ls  // ls = plast
  44d8a8:	cmp	x20, x19
  44d8ac:	csel	x2, x20, x19, ls  // ls = plast
  44d8b0:	cbz	x2, 44d8c4 <_obstack_memory_used@@Base+0x8ec0>
  44d8b4:	add	x1, x1, x4
  44d8b8:	add	x0, x0, x7
  44d8bc:	bl	402a90 <memcmp@plt>
  44d8c0:	cbnz	w0, 44d8e0 <_obstack_memory_used@@Base+0x8edc>
  44d8c4:	sub	x19, x19, x20
  44d8c8:	mov	x0, #0x7fffffff            	// #2147483647
  44d8cc:	cmp	x19, x0
  44d8d0:	b.gt	44d8e0 <_obstack_memory_used@@Base+0x8edc>
  44d8d4:	mov	x0, #0xffffffff80000000    	// #-2147483648
  44d8d8:	cmp	x19, x0
  44d8dc:	csel	w0, w0, w19, lt  // lt = tstop
  44d8e0:	ldp	x19, x20, [sp, #16]
  44d8e4:	ldp	x29, x30, [sp], #32
  44d8e8:	ret
  44d8ec:	mov	x3, x6
  44d8f0:	mov	x2, x1
  44d8f4:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44d8f8:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44d8fc:	add	x1, x1, #0xfe0
  44d900:	add	x0, x0, #0xe90
  44d904:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  44d908:	mov	x2, x4
  44d90c:	b	44d8f4 <_obstack_memory_used@@Base+0x8ef0>
  44d910:	stp	x29, x30, [sp, #-48]!
  44d914:	mov	x2, x0
  44d918:	mov	x0, x1
  44d91c:	mov	x29, sp
  44d920:	stp	x21, x22, [sp, #32]
  44d924:	mov	x21, x1
  44d928:	ldr	x22, [x2]
  44d92c:	stp	x19, x20, [sp, #16]
  44d930:	bl	402700 <strlen@plt>
  44d934:	mov	x20, x0
  44d938:	ldur	x19, [x22, #-24]
  44d93c:	cmp	x0, x19
  44d940:	csel	x2, x0, x19, ls  // ls = plast
  44d944:	cbz	x2, 44d958 <_obstack_memory_used@@Base+0x8f54>
  44d948:	mov	x1, x21
  44d94c:	mov	x0, x22
  44d950:	bl	402a90 <memcmp@plt>
  44d954:	cbnz	w0, 44d974 <_obstack_memory_used@@Base+0x8f70>
  44d958:	sub	x19, x19, x20
  44d95c:	mov	x0, #0x7fffffff            	// #2147483647
  44d960:	cmp	x19, x0
  44d964:	b.gt	44d974 <_obstack_memory_used@@Base+0x8f70>
  44d968:	mov	x0, #0xffffffff80000000    	// #-2147483648
  44d96c:	cmp	x19, x0
  44d970:	csel	w0, w0, w19, lt  // lt = tstop
  44d974:	ldp	x19, x20, [sp, #16]
  44d978:	ldp	x21, x22, [sp, #32]
  44d97c:	ldp	x29, x30, [sp], #48
  44d980:	ret
  44d984:	nop
  44d988:	stp	x29, x30, [sp, #-64]!
  44d98c:	mov	x29, sp
  44d990:	str	x23, [sp, #48]
  44d994:	ldr	x23, [x0]
  44d998:	stp	x19, x20, [sp, #16]
  44d99c:	stp	x21, x22, [sp, #32]
  44d9a0:	mov	x21, x1
  44d9a4:	ldur	x19, [x23, #-24]
  44d9a8:	cmp	x1, x19
  44d9ac:	b.hi	44da18 <_obstack_memory_used@@Base+0x9014>  // b.pmore
  44d9b0:	sub	x19, x19, x1
  44d9b4:	mov	x22, x3
  44d9b8:	cmp	x19, x2
  44d9bc:	mov	x0, x3
  44d9c0:	csel	x19, x19, x2, ls  // ls = plast
  44d9c4:	bl	402700 <strlen@plt>
  44d9c8:	cmp	x0, x19
  44d9cc:	mov	x20, x0
  44d9d0:	csel	x2, x0, x19, ls  // ls = plast
  44d9d4:	cbz	x2, 44d9e8 <_obstack_memory_used@@Base+0x8fe4>
  44d9d8:	mov	x1, x22
  44d9dc:	add	x0, x23, x21
  44d9e0:	bl	402a90 <memcmp@plt>
  44d9e4:	cbnz	w0, 44da04 <_obstack_memory_used@@Base+0x9000>
  44d9e8:	sub	x19, x19, x20
  44d9ec:	mov	x0, #0x7fffffff            	// #2147483647
  44d9f0:	cmp	x19, x0
  44d9f4:	b.gt	44da04 <_obstack_memory_used@@Base+0x9000>
  44d9f8:	mov	x0, #0xffffffff80000000    	// #-2147483648
  44d9fc:	cmp	x19, x0
  44da00:	csel	w0, w0, w19, lt  // lt = tstop
  44da04:	ldp	x19, x20, [sp, #16]
  44da08:	ldp	x21, x22, [sp, #32]
  44da0c:	ldr	x23, [sp, #48]
  44da10:	ldp	x29, x30, [sp], #64
  44da14:	ret
  44da18:	mov	x2, x1
  44da1c:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44da20:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44da24:	mov	x3, x19
  44da28:	add	x1, x1, #0xfe0
  44da2c:	add	x0, x0, #0xe90
  44da30:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  44da34:	nop
  44da38:	stp	x29, x30, [sp, #-32]!
  44da3c:	mov	x6, x1
  44da40:	mov	x29, sp
  44da44:	ldr	x0, [x0]
  44da48:	stp	x19, x20, [sp, #16]
  44da4c:	ldur	x5, [x0, #-24]
  44da50:	cmp	x1, x5
  44da54:	b.hi	44daac <_obstack_memory_used@@Base+0x90a8>  // b.pmore
  44da58:	sub	x5, x5, x1
  44da5c:	mov	x20, x4
  44da60:	cmp	x5, x2
  44da64:	csel	x19, x5, x2, ls  // ls = plast
  44da68:	cmp	x19, x4
  44da6c:	csel	x2, x19, x4, ls  // ls = plast
  44da70:	cbz	x2, 44da84 <_obstack_memory_used@@Base+0x9080>
  44da74:	mov	x1, x3
  44da78:	add	x0, x0, x6
  44da7c:	bl	402a90 <memcmp@plt>
  44da80:	cbnz	w0, 44daa0 <_obstack_memory_used@@Base+0x909c>
  44da84:	sub	x19, x19, x20
  44da88:	mov	x0, #0x7fffffff            	// #2147483647
  44da8c:	cmp	x19, x0
  44da90:	b.gt	44daa0 <_obstack_memory_used@@Base+0x909c>
  44da94:	mov	x0, #0xffffffff80000000    	// #-2147483648
  44da98:	cmp	x19, x0
  44da9c:	csel	w0, w0, w19, lt  // lt = tstop
  44daa0:	ldp	x19, x20, [sp, #16]
  44daa4:	ldp	x29, x30, [sp], #32
  44daa8:	ret
  44daac:	mov	x2, x1
  44dab0:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44dab4:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44dab8:	mov	x3, x5
  44dabc:	add	x1, x1, #0xfe0
  44dac0:	add	x0, x0, #0xe90
  44dac4:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  44dac8:	str	x1, [x0]
  44dacc:	ret
  44dad0:	adrp	x0, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44dad4:	ldr	x0, [x0, #3984]
  44dad8:	ret
  44dadc:	nop
  44dae0:	add	x0, x0, #0x10
  44dae4:	ldr	w0, [x0]
  44dae8:	lsr	w0, w0, #31
  44daec:	ret
  44daf0:	add	x0, x0, #0x10
  44daf4:	ldar	w0, [x0]
  44daf8:	cmp	w0, #0x0
  44dafc:	cset	w0, gt
  44db00:	ret
  44db04:	nop
  44db08:	mov	w1, #0xffffffff            	// #-1
  44db0c:	str	w1, [x0, #16]
  44db10:	ret
  44db14:	nop
  44db18:	str	wzr, [x0, #16]
  44db1c:	ret
  44db20:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44db24:	ldr	x2, [x2, #3984]
  44db28:	cmp	x0, x2
  44db2c:	b.ne	44db34 <_obstack_memory_used@@Base+0x9130>  // b.any
  44db30:	ret
  44db34:	add	x2, x0, x1
  44db38:	str	x1, [x0]
  44db3c:	str	wzr, [x0, #16]
  44db40:	strb	wzr, [x2, #24]
  44db44:	ret
  44db48:	add	x0, x0, #0x18
  44db4c:	ret
  44db50:	stp	x29, x30, [sp, #-32]!
  44db54:	mov	x29, sp
  44db58:	str	x19, [sp, #16]
  44db5c:	mov	x19, x0
  44db60:	mov	x0, #0xfffffffffffffff9    	// #-7
  44db64:	movk	x0, #0x3fff, lsl #48
  44db68:	cmp	x19, x0
  44db6c:	b.hi	44dbec <_obstack_memory_used@@Base+0x91e8>  // b.pmore
  44db70:	cmp	x19, x1
  44db74:	b.ls	44dbc4 <_obstack_memory_used@@Base+0x91c0>  // b.plast
  44db78:	lsl	x2, x1, #1
  44db7c:	cmp	x19, x2
  44db80:	csel	x19, x19, x2, cs  // cs = hs, nlast
  44db84:	add	x2, x19, #0x39
  44db88:	cmp	x2, #0x1, lsl #12
  44db8c:	ccmp	x19, x1, #0x0, hi  // hi = pmore
  44db90:	b.ls	44dbe0 <_obstack_memory_used@@Base+0x91dc>  // b.plast
  44db94:	and	x2, x2, #0xfff
  44db98:	add	x19, x19, #0x1, lsl #12
  44db9c:	sub	x19, x19, x2
  44dba0:	cmp	x19, x0
  44dba4:	csel	x19, x19, x0, ls  // ls = plast
  44dba8:	add	x0, x19, #0x19
  44dbac:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  44dbb0:	str	x19, [x0, #8]
  44dbb4:	str	wzr, [x0, #16]
  44dbb8:	ldr	x19, [sp, #16]
  44dbbc:	ldp	x29, x30, [sp], #32
  44dbc0:	ret
  44dbc4:	add	x0, x19, #0x19
  44dbc8:	bl	4459b8 <_obstack_memory_used@@Base+0xfb4>
  44dbcc:	str	x19, [x0, #8]
  44dbd0:	str	wzr, [x0, #16]
  44dbd4:	ldr	x19, [sp, #16]
  44dbd8:	ldp	x29, x30, [sp], #32
  44dbdc:	ret
  44dbe0:	adds	x0, x19, #0x19
  44dbe4:	b.pl	44dbc8 <_obstack_memory_used@@Base+0x91c4>  // b.nfrst
  44dbe8:	bl	402e40 <ferror@plt+0x70>
  44dbec:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x285fc>
  44dbf0:	add	x0, x0, #0x350
  44dbf4:	bl	402fd8 <ferror@plt+0x208>
  44dbf8:	cbnz	x0, 44dc10 <_obstack_memory_used@@Base+0x920c>
  44dbfc:	adrp	x3, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44dc00:	ldr	x3, [x3, #3984]
  44dc04:	add	x3, x3, #0x18
  44dc08:	mov	x0, x3
  44dc0c:	ret
  44dc10:	stp	x29, x30, [sp, #-48]!
  44dc14:	mov	x29, sp
  44dc18:	stp	x19, x20, [sp, #16]
  44dc1c:	mov	x19, x0
  44dc20:	str	x21, [sp, #32]
  44dc24:	and	w21, w1, #0xff
  44dc28:	mov	x1, #0x0                   	// #0
  44dc2c:	bl	44db50 <_obstack_memory_used@@Base+0x914c>
  44dc30:	cmp	x19, #0x1
  44dc34:	mov	x20, x0
  44dc38:	add	x3, x0, #0x18
  44dc3c:	b.eq	44dc78 <_obstack_memory_used@@Base+0x9274>  // b.none
  44dc40:	mov	x0, x3
  44dc44:	mov	w1, w21
  44dc48:	mov	x2, x19
  44dc4c:	bl	402930 <memset@plt>
  44dc50:	mov	x3, x0
  44dc54:	adrp	x0, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44dc58:	ldr	x0, [x0, #3984]
  44dc5c:	cmp	x20, x0
  44dc60:	b.ne	44dc80 <_obstack_memory_used@@Base+0x927c>  // b.any
  44dc64:	mov	x0, x3
  44dc68:	ldp	x19, x20, [sp, #16]
  44dc6c:	ldr	x21, [sp, #32]
  44dc70:	ldp	x29, x30, [sp], #48
  44dc74:	ret
  44dc78:	strb	w21, [x0, #24]
  44dc7c:	b	44dc54 <_obstack_memory_used@@Base+0x9250>
  44dc80:	add	x0, x20, x19
  44dc84:	str	x19, [x20]
  44dc88:	str	wzr, [x20, #16]
  44dc8c:	strb	wzr, [x0, #24]
  44dc90:	b	44dc64 <_obstack_memory_used@@Base+0x9260>
  44dc94:	nop
  44dc98:	stp	x29, x30, [sp, #-32]!
  44dc9c:	mov	x2, x1
  44dca0:	mov	w1, #0x0                   	// #0
  44dca4:	mov	x29, sp
  44dca8:	str	x19, [sp, #16]
  44dcac:	mov	x19, x0
  44dcb0:	mov	x0, #0x0                   	// #0
  44dcb4:	bl	44dbf8 <_obstack_memory_used@@Base+0x91f4>
  44dcb8:	str	x0, [x19]
  44dcbc:	ldr	x19, [sp, #16]
  44dcc0:	ldp	x29, x30, [sp], #32
  44dcc4:	ret
  44dcc8:	stp	x29, x30, [sp, #-32]!
  44dccc:	mov	x29, sp
  44dcd0:	str	x19, [sp, #16]
  44dcd4:	mov	x19, x0
  44dcd8:	mov	x0, x1
  44dcdc:	and	w1, w2, #0xff
  44dce0:	mov	x2, x3
  44dce4:	bl	44dbf8 <_obstack_memory_used@@Base+0x91f4>
  44dce8:	str	x0, [x19]
  44dcec:	ldr	x19, [sp, #16]
  44dcf0:	ldp	x29, x30, [sp], #32
  44dcf4:	ret
  44dcf8:	b	44dbf8 <_obstack_memory_used@@Base+0x91f4>
  44dcfc:	nop
  44dd00:	stp	x29, x30, [sp, #-48]!
  44dd04:	mov	x29, sp
  44dd08:	stp	x19, x20, [sp, #16]
  44dd0c:	mov	x19, x1
  44dd10:	sub	x19, x19, x0
  44dd14:	mov	x1, #0x0                   	// #0
  44dd18:	str	x21, [sp, #32]
  44dd1c:	mov	x21, x0
  44dd20:	mov	x0, x19
  44dd24:	bl	44db50 <_obstack_memory_used@@Base+0x914c>
  44dd28:	mov	x20, x0
  44dd2c:	cmp	x19, #0x1
  44dd30:	add	x3, x0, #0x18
  44dd34:	b.eq	44dd70 <_obstack_memory_used@@Base+0x936c>  // b.none
  44dd38:	mov	x0, x3
  44dd3c:	mov	x1, x21
  44dd40:	mov	x2, x19
  44dd44:	bl	4026a0 <memcpy@plt>
  44dd48:	mov	x3, x0
  44dd4c:	adrp	x0, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44dd50:	ldr	x0, [x0, #3984]
  44dd54:	cmp	x20, x0
  44dd58:	b.ne	44dd88 <_obstack_memory_used@@Base+0x9384>  // b.any
  44dd5c:	mov	x0, x3
  44dd60:	ldp	x19, x20, [sp, #16]
  44dd64:	ldr	x21, [sp, #32]
  44dd68:	ldp	x29, x30, [sp], #48
  44dd6c:	ret
  44dd70:	ldrb	w0, [x21]
  44dd74:	strb	w0, [x20, #24]
  44dd78:	adrp	x0, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44dd7c:	ldr	x0, [x0, #3984]
  44dd80:	cmp	x20, x0
  44dd84:	b.eq	44dd5c <_obstack_memory_used@@Base+0x9358>  // b.none
  44dd88:	add	x0, x20, x19
  44dd8c:	str	x19, [x20]
  44dd90:	str	wzr, [x20, #16]
  44dd94:	strb	wzr, [x0, #24]
  44dd98:	mov	x0, x3
  44dd9c:	ldp	x19, x20, [sp, #16]
  44dda0:	ldr	x21, [sp, #32]
  44dda4:	ldp	x29, x30, [sp], #48
  44dda8:	ret
  44ddac:	nop
  44ddb0:	b	445770 <_obstack_memory_used@@Base+0xd6c>
  44ddb4:	nop
  44ddb8:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44ddbc:	ldr	x2, [x2, #3600]
  44ddc0:	cbz	x2, 44dde4 <_obstack_memory_used@@Base+0x93e0>
  44ddc4:	add	x3, x0, #0x10
  44ddc8:	ldaxr	w2, [x3]
  44ddcc:	sub	w4, w2, #0x1
  44ddd0:	stlxr	w5, w4, [x3]
  44ddd4:	cbnz	w5, 44ddc8 <_obstack_memory_used@@Base+0x93c4>
  44ddd8:	cmp	w2, #0x0
  44dddc:	b.le	44ddf8 <_obstack_memory_used@@Base+0x93f4>
  44dde0:	ret
  44dde4:	ldr	w2, [x0, #16]
  44dde8:	sub	w3, w2, #0x1
  44ddec:	str	w3, [x0, #16]
  44ddf0:	cmp	w2, #0x0
  44ddf4:	b.gt	44dde0 <_obstack_memory_used@@Base+0x93dc>
  44ddf8:	b	44ddb0 <_obstack_memory_used@@Base+0x93ac>
  44ddfc:	nop
  44de00:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44de04:	ldr	x2, [x2, #3984]
  44de08:	cmp	x0, x2
  44de0c:	b.ne	44de14 <_obstack_memory_used@@Base+0x9410>  // b.any
  44de10:	ret
  44de14:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44de18:	ldr	x2, [x2, #3600]
  44de1c:	cbz	x2, 44de40 <_obstack_memory_used@@Base+0x943c>
  44de20:	add	x3, x0, #0x10
  44de24:	ldaxr	w2, [x3]
  44de28:	sub	w4, w2, #0x1
  44de2c:	stlxr	w5, w4, [x3]
  44de30:	cbnz	w5, 44de24 <_obstack_memory_used@@Base+0x9420>
  44de34:	cmp	w2, #0x0
  44de38:	b.gt	44de10 <_obstack_memory_used@@Base+0x940c>
  44de3c:	b	44ddb0 <_obstack_memory_used@@Base+0x93ac>
  44de40:	ldr	w2, [x0, #16]
  44de44:	sub	w3, w2, #0x1
  44de48:	str	w3, [x0, #16]
  44de4c:	b	44de34 <_obstack_memory_used@@Base+0x9430>
  44de50:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44de54:	ldr	x2, [x0]
  44de58:	ldr	x1, [x1, #3984]
  44de5c:	sub	x0, x2, #0x18
  44de60:	cmp	x0, x1
  44de64:	b.ne	44de6c <_obstack_memory_used@@Base+0x9468>  // b.any
  44de68:	ret
  44de6c:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44de70:	ldr	x1, [x1, #3600]
  44de74:	cbz	x1, 44deac <_obstack_memory_used@@Base+0x94a8>
  44de78:	sub	x2, x2, #0x8
  44de7c:	ldaxr	w1, [x2]
  44de80:	sub	w3, w1, #0x1
  44de84:	stlxr	w4, w3, [x2]
  44de88:	cbnz	w4, 44de7c <_obstack_memory_used@@Base+0x9478>
  44de8c:	cmp	w1, #0x0
  44de90:	b.gt	44de68 <_obstack_memory_used@@Base+0x9464>
  44de94:	stp	x29, x30, [sp, #-32]!
  44de98:	mov	x29, sp
  44de9c:	add	x1, sp, #0x18
  44dea0:	bl	44ddb0 <_obstack_memory_used@@Base+0x93ac>
  44dea4:	ldp	x29, x30, [sp], #32
  44dea8:	ret
  44deac:	ldur	w1, [x2, #-8]
  44deb0:	sub	w3, w1, #0x1
  44deb4:	stur	w3, [x2, #-8]
  44deb8:	b	44de8c <_obstack_memory_used@@Base+0x9488>
  44debc:	nop
  44dec0:	stp	x29, x30, [sp, #-48]!
  44dec4:	mov	x29, sp
  44dec8:	stp	x19, x20, [sp, #16]
  44decc:	mov	x19, x0
  44ded0:	ldr	x0, [x0]
  44ded4:	sub	x0, x0, #0x8
  44ded8:	ldar	w0, [x0]
  44dedc:	cmp	w0, #0x0
  44dee0:	b.le	44df14 <_obstack_memory_used@@Base+0x9510>
  44dee4:	adrp	x20, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44dee8:	ldr	x1, [x19]
  44deec:	ldr	x2, [x20, #3984]
  44def0:	sub	x0, x1, #0x18
  44def4:	cmp	x0, x2
  44def8:	b.ne	44df3c <_obstack_memory_used@@Base+0x9538>  // b.any
  44defc:	ldr	x20, [x20, #3984]
  44df00:	add	x20, x20, #0x18
  44df04:	str	x20, [x19]
  44df08:	ldp	x19, x20, [sp, #16]
  44df0c:	ldp	x29, x30, [sp], #48
  44df10:	ret
  44df14:	adrp	x0, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44df18:	ldr	x1, [x19]
  44df1c:	ldr	x0, [x0, #3984]
  44df20:	sub	x2, x1, #0x18
  44df24:	cmp	x2, x0
  44df28:	b.eq	44df08 <_obstack_memory_used@@Base+0x9504>  // b.none
  44df2c:	stur	xzr, [x1, #-24]
  44df30:	stur	wzr, [x1, #-8]
  44df34:	strb	wzr, [x1]
  44df38:	b	44df08 <_obstack_memory_used@@Base+0x9504>
  44df3c:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44df40:	ldr	x2, [x2, #3600]
  44df44:	cbz	x2, 44df70 <_obstack_memory_used@@Base+0x956c>
  44df48:	sub	x1, x1, #0x8
  44df4c:	ldaxr	w2, [x1]
  44df50:	sub	w3, w2, #0x1
  44df54:	stlxr	w4, w3, [x1]
  44df58:	cbnz	w4, 44df4c <_obstack_memory_used@@Base+0x9548>
  44df5c:	cmp	w2, #0x0
  44df60:	b.gt	44defc <_obstack_memory_used@@Base+0x94f8>
  44df64:	add	x1, sp, #0x28
  44df68:	bl	44ddb0 <_obstack_memory_used@@Base+0x93ac>
  44df6c:	b	44defc <_obstack_memory_used@@Base+0x94f8>
  44df70:	ldur	w2, [x1, #-8]
  44df74:	sub	w3, w2, #0x1
  44df78:	stur	w3, [x1, #-8]
  44df7c:	b	44df5c <_obstack_memory_used@@Base+0x9558>
  44df80:	stp	x29, x30, [sp, #-112]!
  44df84:	mov	x29, sp
  44df88:	stp	x19, x20, [sp, #16]
  44df8c:	mov	x20, x0
  44df90:	sub	x0, x3, x2
  44df94:	stp	x21, x22, [sp, #32]
  44df98:	mov	x21, x3
  44df9c:	mov	x19, x1
  44dfa0:	ldr	x3, [x20]
  44dfa4:	stp	x23, x24, [sp, #48]
  44dfa8:	stp	x25, x26, [sp, #64]
  44dfac:	ldur	x4, [x3, #-24]
  44dfb0:	str	x27, [sp, #80]
  44dfb4:	add	x27, x2, x1
  44dfb8:	ldur	x1, [x3, #-16]
  44dfbc:	add	x25, x0, x4
  44dfc0:	sub	x22, x4, x27
  44dfc4:	cmp	x25, x1
  44dfc8:	b.hi	44dfe4 <_obstack_memory_used@@Base+0x95e0>  // b.pmore
  44dfcc:	sub	x3, x3, #0x8
  44dfd0:	ldar	w0, [x3]
  44dfd4:	cmp	w0, #0x0
  44dfd8:	b.le	44e088 <_obstack_memory_used@@Base+0x9684>
  44dfdc:	ldr	x0, [x20]
  44dfe0:	ldur	x1, [x0, #-16]
  44dfe4:	add	x24, sp, #0x68
  44dfe8:	mov	x2, x24
  44dfec:	mov	x0, x25
  44dff0:	bl	44db50 <_obstack_memory_used@@Base+0x914c>
  44dff4:	mov	x23, x0
  44dff8:	add	x26, x0, #0x18
  44dffc:	cbz	x19, 44e01c <_obstack_memory_used@@Base+0x9618>
  44e000:	cmp	x19, #0x1
  44e004:	add	x26, x0, #0x18
  44e008:	ldr	x1, [x20]
  44e00c:	b.eq	44e134 <_obstack_memory_used@@Base+0x9730>  // b.none
  44e010:	mov	x2, x19
  44e014:	mov	x0, x26
  44e018:	bl	4026a0 <memcpy@plt>
  44e01c:	ldr	x2, [x20]
  44e020:	cbz	x22, 44e048 <_obstack_memory_used@@Base+0x9644>
  44e024:	add	x19, x19, #0x18
  44e028:	cmp	x22, #0x1
  44e02c:	add	x19, x19, x21
  44e030:	add	x1, x2, x27
  44e034:	add	x0, x23, x19
  44e038:	b.eq	44e148 <_obstack_memory_used@@Base+0x9744>  // b.none
  44e03c:	mov	x2, x22
  44e040:	bl	4026a0 <memcpy@plt>
  44e044:	ldr	x2, [x20]
  44e048:	adrp	x21, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44e04c:	sub	x0, x2, #0x18
  44e050:	ldr	x1, [x21, #3984]
  44e054:	cmp	x0, x1
  44e058:	b.ne	44e100 <_obstack_memory_used@@Base+0x96fc>  // b.any
  44e05c:	str	x26, [x20]
  44e060:	ldr	x21, [x21, #3984]
  44e064:	cmp	x23, x21
  44e068:	b.ne	44e0d8 <_obstack_memory_used@@Base+0x96d4>  // b.any
  44e06c:	ldp	x19, x20, [sp, #16]
  44e070:	ldp	x21, x22, [sp, #32]
  44e074:	ldp	x23, x24, [sp, #48]
  44e078:	ldp	x25, x26, [sp, #64]
  44e07c:	ldr	x27, [sp, #80]
  44e080:	ldp	x29, x30, [sp], #112
  44e084:	ret
  44e088:	cmp	x22, #0x0
  44e08c:	ccmp	x21, x2, #0x4, ne  // ne = any
  44e090:	ldr	x26, [x20]
  44e094:	b.eq	44e0c4 <_obstack_memory_used@@Base+0x96c0>  // b.none
  44e098:	add	x19, x21, x19
  44e09c:	cmp	x22, #0x1
  44e0a0:	add	x0, x26, x19
  44e0a4:	add	x1, x26, x27
  44e0a8:	b.eq	44e17c <_obstack_memory_used@@Base+0x9778>  // b.none
  44e0ac:	mov	x2, x22
  44e0b0:	bl	4026b0 <memmove@plt>
  44e0b4:	ldr	x26, [x20]
  44e0b8:	adrp	x21, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44e0bc:	sub	x23, x26, #0x18
  44e0c0:	b	44e060 <_obstack_memory_used@@Base+0x965c>
  44e0c4:	adrp	x21, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44e0c8:	sub	x23, x26, #0x18
  44e0cc:	ldr	x21, [x21, #3984]
  44e0d0:	cmp	x23, x21
  44e0d4:	b.eq	44e06c <_obstack_memory_used@@Base+0x9668>  // b.none
  44e0d8:	stur	x25, [x26, #-24]
  44e0dc:	stur	wzr, [x26, #-8]
  44e0e0:	strb	wzr, [x26, x25]
  44e0e4:	ldp	x19, x20, [sp, #16]
  44e0e8:	ldp	x21, x22, [sp, #32]
  44e0ec:	ldp	x23, x24, [sp, #48]
  44e0f0:	ldp	x25, x26, [sp, #64]
  44e0f4:	ldr	x27, [sp, #80]
  44e0f8:	ldp	x29, x30, [sp], #112
  44e0fc:	ret
  44e100:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44e104:	ldr	x1, [x1, #3600]
  44e108:	cbz	x1, 44e16c <_obstack_memory_used@@Base+0x9768>
  44e10c:	sub	x2, x2, #0x8
  44e110:	ldaxr	w1, [x2]
  44e114:	sub	w3, w1, #0x1
  44e118:	stlxr	w4, w3, [x2]
  44e11c:	cbnz	w4, 44e110 <_obstack_memory_used@@Base+0x970c>
  44e120:	cmp	w1, #0x0
  44e124:	b.gt	44e05c <_obstack_memory_used@@Base+0x9658>
  44e128:	mov	x1, x24
  44e12c:	bl	44ddb0 <_obstack_memory_used@@Base+0x93ac>
  44e130:	b	44e05c <_obstack_memory_used@@Base+0x9658>
  44e134:	ldrb	w0, [x1]
  44e138:	strb	w0, [x23, #24]
  44e13c:	ldr	x2, [x20]
  44e140:	cbz	x22, 44e048 <_obstack_memory_used@@Base+0x9644>
  44e144:	b	44e024 <_obstack_memory_used@@Base+0x9620>
  44e148:	ldrb	w0, [x2, x27]
  44e14c:	adrp	x21, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44e150:	strb	w0, [x23, x19]
  44e154:	ldr	x1, [x21, #3984]
  44e158:	ldr	x2, [x20]
  44e15c:	sub	x0, x2, #0x18
  44e160:	cmp	x0, x1
  44e164:	b.eq	44e05c <_obstack_memory_used@@Base+0x9658>  // b.none
  44e168:	b	44e100 <_obstack_memory_used@@Base+0x96fc>
  44e16c:	ldur	w1, [x2, #-8]
  44e170:	sub	w3, w1, #0x1
  44e174:	stur	w3, [x2, #-8]
  44e178:	b	44e120 <_obstack_memory_used@@Base+0x971c>
  44e17c:	ldrb	w0, [x26, x27]
  44e180:	adrp	x21, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44e184:	strb	w0, [x26, x19]
  44e188:	ldr	x26, [x20]
  44e18c:	sub	x23, x26, #0x18
  44e190:	b	44e060 <_obstack_memory_used@@Base+0x965c>
  44e194:	nop
  44e198:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44e19c:	ldr	x2, [x1, #3984]
  44e1a0:	ldr	x1, [x0]
  44e1a4:	sub	x3, x1, #0x18
  44e1a8:	cmp	x3, x2
  44e1ac:	b.eq	44e210 <_obstack_memory_used@@Base+0x980c>  // b.none
  44e1b0:	stp	x29, x30, [sp, #-32]!
  44e1b4:	sub	x1, x1, #0x8
  44e1b8:	mov	x29, sp
  44e1bc:	str	x19, [sp, #16]
  44e1c0:	mov	x19, x0
  44e1c4:	ldar	w1, [x1]
  44e1c8:	cmp	w1, #0x0
  44e1cc:	b.gt	44e1e8 <_obstack_memory_used@@Base+0x97e4>
  44e1d0:	ldr	x0, [x19]
  44e1d4:	mov	w1, #0xffffffff            	// #-1
  44e1d8:	ldr	x19, [sp, #16]
  44e1dc:	stur	w1, [x0, #-8]
  44e1e0:	ldp	x29, x30, [sp], #32
  44e1e4:	ret
  44e1e8:	mov	x3, #0x0                   	// #0
  44e1ec:	mov	x2, #0x0                   	// #0
  44e1f0:	mov	x1, #0x0                   	// #0
  44e1f4:	bl	44df80 <_obstack_memory_used@@Base+0x957c>
  44e1f8:	ldr	x0, [x19]
  44e1fc:	mov	w1, #0xffffffff            	// #-1
  44e200:	ldr	x19, [sp, #16]
  44e204:	stur	w1, [x0, #-8]
  44e208:	ldp	x29, x30, [sp], #32
  44e20c:	ret
  44e210:	ret
  44e214:	nop
  44e218:	ldr	x1, [x0]
  44e21c:	sub	x1, x1, #0x8
  44e220:	ldr	w1, [x1]
  44e224:	tbz	w1, #31, 44e22c <_obstack_memory_used@@Base+0x9828>
  44e228:	ret
  44e22c:	b	44e198 <_obstack_memory_used@@Base+0x9794>
  44e230:	ldr	x1, [x0]
  44e234:	sub	x2, x1, #0x8
  44e238:	ldr	w2, [x2]
  44e23c:	tbz	w2, #31, 44e248 <_obstack_memory_used@@Base+0x9844>
  44e240:	mov	x0, x1
  44e244:	ret
  44e248:	stp	x29, x30, [sp, #-32]!
  44e24c:	mov	x29, sp
  44e250:	str	x19, [sp, #16]
  44e254:	mov	x19, x0
  44e258:	bl	44e198 <_obstack_memory_used@@Base+0x9794>
  44e25c:	ldr	x1, [x19]
  44e260:	ldr	x19, [sp, #16]
  44e264:	mov	x0, x1
  44e268:	ldp	x29, x30, [sp], #32
  44e26c:	ret
  44e270:	stp	x29, x30, [sp, #-32]!
  44e274:	mov	x29, sp
  44e278:	stp	x19, x20, [sp, #16]
  44e27c:	mov	x20, x1
  44e280:	ldr	x1, [x0]
  44e284:	sub	x2, x1, #0x8
  44e288:	ldr	w2, [x2]
  44e28c:	tbnz	w2, #31, 44e29c <_obstack_memory_used@@Base+0x9898>
  44e290:	mov	x19, x0
  44e294:	bl	44e198 <_obstack_memory_used@@Base+0x9794>
  44e298:	ldr	x1, [x19]
  44e29c:	add	x0, x1, x20
  44e2a0:	ldp	x19, x20, [sp, #16]
  44e2a4:	ldp	x29, x30, [sp], #32
  44e2a8:	ret
  44e2ac:	nop
  44e2b0:	ldr	x1, [x0]
  44e2b4:	sub	x2, x1, #0x8
  44e2b8:	ldr	w2, [x2]
  44e2bc:	tbz	w2, #31, 44e2c8 <_obstack_memory_used@@Base+0x98c4>
  44e2c0:	mov	x0, x1
  44e2c4:	ret
  44e2c8:	stp	x29, x30, [sp, #-32]!
  44e2cc:	mov	x29, sp
  44e2d0:	str	x19, [sp, #16]
  44e2d4:	mov	x19, x0
  44e2d8:	bl	44e198 <_obstack_memory_used@@Base+0x9794>
  44e2dc:	ldr	x1, [x19]
  44e2e0:	ldr	x19, [sp, #16]
  44e2e4:	mov	x0, x1
  44e2e8:	ldp	x29, x30, [sp], #32
  44e2ec:	ret
  44e2f0:	stp	x29, x30, [sp, #-32]!
  44e2f4:	mov	x29, sp
  44e2f8:	ldr	x1, [x0]
  44e2fc:	stp	x19, x20, [sp, #16]
  44e300:	mov	x19, x8
  44e304:	sub	x2, x1, #0x8
  44e308:	ldr	w2, [x2]
  44e30c:	tbnz	w2, #31, 44e31c <_obstack_memory_used@@Base+0x9918>
  44e310:	mov	x20, x0
  44e314:	bl	44e198 <_obstack_memory_used@@Base+0x9794>
  44e318:	ldr	x1, [x20]
  44e31c:	str	x1, [x19]
  44e320:	mov	x0, x19
  44e324:	ldp	x19, x20, [sp, #16]
  44e328:	ldp	x29, x30, [sp], #32
  44e32c:	ret
  44e330:	ldr	x1, [x0]
  44e334:	sub	x2, x1, #0x8
  44e338:	ldr	w2, [x2]
  44e33c:	tbz	w2, #31, 44e34c <_obstack_memory_used@@Base+0x9948>
  44e340:	ldur	x0, [x1, #-24]
  44e344:	add	x0, x1, x0
  44e348:	ret
  44e34c:	stp	x29, x30, [sp, #-32]!
  44e350:	mov	x29, sp
  44e354:	str	x19, [sp, #16]
  44e358:	mov	x19, x0
  44e35c:	bl	44e198 <_obstack_memory_used@@Base+0x9794>
  44e360:	ldr	x1, [x19]
  44e364:	ldr	x19, [sp, #16]
  44e368:	ldur	x0, [x1, #-24]
  44e36c:	ldp	x29, x30, [sp], #32
  44e370:	add	x0, x1, x0
  44e374:	ret
  44e378:	stp	x29, x30, [sp, #-32]!
  44e37c:	mov	x29, sp
  44e380:	ldr	x1, [x0]
  44e384:	stp	x19, x20, [sp, #16]
  44e388:	mov	x19, x8
  44e38c:	sub	x2, x1, #0x8
  44e390:	ldr	w2, [x2]
  44e394:	tbnz	w2, #31, 44e3a4 <_obstack_memory_used@@Base+0x99a0>
  44e398:	mov	x20, x0
  44e39c:	bl	44e198 <_obstack_memory_used@@Base+0x9794>
  44e3a0:	ldr	x1, [x20]
  44e3a4:	mov	x0, x19
  44e3a8:	ldur	x2, [x1, #-24]
  44e3ac:	add	x1, x1, x2
  44e3b0:	str	x1, [x19]
  44e3b4:	ldp	x19, x20, [sp, #16]
  44e3b8:	ldp	x29, x30, [sp], #32
  44e3bc:	ret
  44e3c0:	stp	x29, x30, [sp, #-32]!
  44e3c4:	mov	x29, sp
  44e3c8:	ldr	x1, [x0]
  44e3cc:	stp	x19, x20, [sp, #16]
  44e3d0:	sub	x2, x1, #0x8
  44e3d4:	ldur	x20, [x1, #-24]
  44e3d8:	sub	x20, x20, #0x1
  44e3dc:	ldr	w2, [x2]
  44e3e0:	tbnz	w2, #31, 44e3f0 <_obstack_memory_used@@Base+0x99ec>
  44e3e4:	mov	x19, x0
  44e3e8:	bl	44e198 <_obstack_memory_used@@Base+0x9794>
  44e3ec:	ldr	x1, [x19]
  44e3f0:	add	x0, x1, x20
  44e3f4:	ldp	x19, x20, [sp, #16]
  44e3f8:	ldp	x29, x30, [sp], #32
  44e3fc:	ret
  44e400:	stp	x29, x30, [sp, #-32]!
  44e404:	mov	x29, sp
  44e408:	ldr	x3, [x0]
  44e40c:	stp	x19, x20, [sp, #16]
  44e410:	ldur	x2, [x3, #-24]
  44e414:	cmp	x1, x2
  44e418:	b.cs	44e448 <_obstack_memory_used@@Base+0x9a44>  // b.hs, b.nlast
  44e41c:	mov	x19, x1
  44e420:	sub	x1, x3, #0x8
  44e424:	ldr	w1, [x1]
  44e428:	tbnz	w1, #31, 44e438 <_obstack_memory_used@@Base+0x9a34>
  44e42c:	mov	x20, x0
  44e430:	bl	44e198 <_obstack_memory_used@@Base+0x9794>
  44e434:	ldr	x3, [x20]
  44e438:	add	x0, x3, x19
  44e43c:	ldp	x19, x20, [sp, #16]
  44e440:	ldp	x29, x30, [sp], #32
  44e444:	ret
  44e448:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44e44c:	add	x0, x0, #0xec8
  44e450:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  44e454:	nop
  44e458:	stp	x29, x30, [sp, #-32]!
  44e45c:	mov	x29, sp
  44e460:	ldr	x3, [x0]
  44e464:	ldur	x3, [x3, #-24]
  44e468:	str	x19, [sp, #16]
  44e46c:	cmp	x1, x3
  44e470:	b.hi	44e49c <_obstack_memory_used@@Base+0x9a98>  // b.pmore
  44e474:	sub	x4, x3, x1
  44e478:	mov	x19, x0
  44e47c:	cmp	x4, x2
  44e480:	mov	x3, #0x0                   	// #0
  44e484:	csel	x2, x4, x2, ls  // ls = plast
  44e488:	bl	44df80 <_obstack_memory_used@@Base+0x957c>
  44e48c:	mov	x0, x19
  44e490:	ldr	x19, [sp, #16]
  44e494:	ldp	x29, x30, [sp], #32
  44e498:	ret
  44e49c:	mov	x2, x1
  44e4a0:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44e4a4:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44e4a8:	add	x0, x0, #0xe90
  44e4ac:	add	x1, x1, #0xf10
  44e4b0:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  44e4b4:	nop
  44e4b8:	stp	x29, x30, [sp, #-32]!
  44e4bc:	mov	x3, #0x0                   	// #0
  44e4c0:	mov	x2, #0x1                   	// #1
  44e4c4:	mov	x29, sp
  44e4c8:	stp	x19, x20, [sp, #16]
  44e4cc:	mov	x20, x0
  44e4d0:	ldr	x19, [x0]
  44e4d4:	sub	x19, x1, x19
  44e4d8:	mov	x1, x19
  44e4dc:	bl	44df80 <_obstack_memory_used@@Base+0x957c>
  44e4e0:	ldr	x1, [x20]
  44e4e4:	mov	w2, #0xffffffff            	// #-1
  44e4e8:	add	x0, x1, x19
  44e4ec:	ldp	x19, x20, [sp, #16]
  44e4f0:	stur	w2, [x1, #-8]
  44e4f4:	ldp	x29, x30, [sp], #32
  44e4f8:	ret
  44e4fc:	nop
  44e500:	subs	x2, x2, x1
  44e504:	b.ne	44e510 <_obstack_memory_used@@Base+0x9b0c>  // b.any
  44e508:	mov	x0, x1
  44e50c:	ret
  44e510:	stp	x29, x30, [sp, #-32]!
  44e514:	mov	x3, #0x0                   	// #0
  44e518:	mov	x29, sp
  44e51c:	stp	x19, x20, [sp, #16]
  44e520:	mov	x20, x0
  44e524:	ldr	x19, [x0]
  44e528:	sub	x19, x1, x19
  44e52c:	mov	x1, x19
  44e530:	bl	44df80 <_obstack_memory_used@@Base+0x957c>
  44e534:	ldr	x1, [x20]
  44e538:	mov	w2, #0xffffffff            	// #-1
  44e53c:	add	x0, x1, x19
  44e540:	ldp	x19, x20, [sp, #16]
  44e544:	stur	w2, [x1, #-8]
  44e548:	ldp	x29, x30, [sp], #32
  44e54c:	ret
  44e550:	stp	x29, x30, [sp, #-48]!
  44e554:	mov	x5, #0xfffffffffffffff9    	// #-7
  44e558:	movk	x5, #0x3fff, lsl #48
  44e55c:	mov	x29, sp
  44e560:	ldr	x6, [x0]
  44e564:	stp	x21, x22, [sp, #32]
  44e568:	and	w22, w4, #0xff
  44e56c:	add	x5, x2, x5
  44e570:	stp	x19, x20, [sp, #16]
  44e574:	ldur	x4, [x6, #-24]
  44e578:	sub	x5, x5, x4
  44e57c:	cmp	x3, x5
  44e580:	b.hi	44e5e0 <_obstack_memory_used@@Base+0x9bdc>  // b.pmore
  44e584:	mov	x19, x3
  44e588:	mov	x20, x0
  44e58c:	mov	x21, x1
  44e590:	bl	44df80 <_obstack_memory_used@@Base+0x957c>
  44e594:	cbz	x19, 44e5b4 <_obstack_memory_used@@Base+0x9bb0>
  44e598:	ldr	x1, [x20]
  44e59c:	cmp	x19, #0x1
  44e5a0:	add	x0, x1, x21
  44e5a4:	b.eq	44e5c8 <_obstack_memory_used@@Base+0x9bc4>  // b.none
  44e5a8:	mov	x2, x19
  44e5ac:	mov	w1, w22
  44e5b0:	bl	402930 <memset@plt>
  44e5b4:	mov	x0, x20
  44e5b8:	ldp	x19, x20, [sp, #16]
  44e5bc:	ldp	x21, x22, [sp, #32]
  44e5c0:	ldp	x29, x30, [sp], #48
  44e5c4:	ret
  44e5c8:	strb	w22, [x1, x21]
  44e5cc:	mov	x0, x20
  44e5d0:	ldp	x19, x20, [sp, #16]
  44e5d4:	ldp	x21, x22, [sp, #32]
  44e5d8:	ldp	x29, x30, [sp], #48
  44e5dc:	ret
  44e5e0:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44e5e4:	add	x0, x0, #0xf28
  44e5e8:	bl	402fd8 <ferror@plt+0x208>
  44e5ec:	nop
  44e5f0:	mov	w4, w2
  44e5f4:	mov	x3, x1
  44e5f8:	ldr	x2, [x0]
  44e5fc:	mov	x1, #0x0                   	// #0
  44e600:	ldur	x2, [x2, #-24]
  44e604:	b	44e550 <_obstack_memory_used@@Base+0x9b4c>
  44e608:	stp	x29, x30, [sp, #-32]!
  44e60c:	mov	w4, w1
  44e610:	mov	x3, #0x1                   	// #1
  44e614:	mov	x29, sp
  44e618:	ldr	x2, [x0]
  44e61c:	mov	x1, #0x0                   	// #0
  44e620:	str	x19, [sp, #16]
  44e624:	mov	x19, x0
  44e628:	ldur	x2, [x2, #-24]
  44e62c:	bl	44e550 <_obstack_memory_used@@Base+0x9b4c>
  44e630:	mov	x0, x19
  44e634:	ldr	x19, [sp, #16]
  44e638:	ldp	x29, x30, [sp], #32
  44e63c:	ret
  44e640:	ldr	x6, [x0]
  44e644:	and	w4, w3, #0xff
  44e648:	ldur	x3, [x6, #-24]
  44e64c:	cmp	x1, x3
  44e650:	b.hi	44e660 <_obstack_memory_used@@Base+0x9c5c>  // b.pmore
  44e654:	mov	x3, x2
  44e658:	mov	x2, #0x0                   	// #0
  44e65c:	b	44e550 <_obstack_memory_used@@Base+0x9b4c>
  44e660:	stp	x29, x30, [sp, #-16]!
  44e664:	mov	x2, x1
  44e668:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44e66c:	mov	x29, sp
  44e670:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44e674:	add	x0, x0, #0xe90
  44e678:	add	x1, x1, #0xf48
  44e67c:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  44e680:	stp	x29, x30, [sp, #-32]!
  44e684:	mov	w4, w2
  44e688:	mov	x3, #0x1                   	// #1
  44e68c:	mov	x29, sp
  44e690:	stp	x19, x20, [sp, #16]
  44e694:	mov	x20, x0
  44e698:	mov	x2, #0x0                   	// #0
  44e69c:	ldr	x19, [x0]
  44e6a0:	sub	x19, x1, x19
  44e6a4:	mov	x1, x19
  44e6a8:	bl	44e550 <_obstack_memory_used@@Base+0x9b4c>
  44e6ac:	ldr	x1, [x20]
  44e6b0:	mov	w2, #0xffffffff            	// #-1
  44e6b4:	add	x0, x1, x19
  44e6b8:	ldp	x19, x20, [sp, #16]
  44e6bc:	stur	w2, [x1, #-8]
  44e6c0:	ldp	x29, x30, [sp], #32
  44e6c4:	ret
  44e6c8:	ldr	x5, [x0]
  44e6cc:	ldur	x5, [x5, #-24]
  44e6d0:	cmp	x1, x5
  44e6d4:	b.hi	44e6ec <_obstack_memory_used@@Base+0x9ce8>  // b.pmore
  44e6d8:	sub	x5, x5, x1
  44e6dc:	and	w4, w4, #0xff
  44e6e0:	cmp	x5, x2
  44e6e4:	csel	x2, x5, x2, ls  // ls = plast
  44e6e8:	b	44e550 <_obstack_memory_used@@Base+0x9b4c>
  44e6ec:	stp	x29, x30, [sp, #-16]!
  44e6f0:	mov	x2, x1
  44e6f4:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44e6f8:	mov	x29, sp
  44e6fc:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44e700:	mov	x3, x5
  44e704:	add	x1, x1, #0xf60
  44e708:	add	x0, x0, #0xe90
  44e70c:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  44e710:	ldr	x5, [x0]
  44e714:	sub	x2, x2, x1
  44e718:	sub	x1, x1, x5
  44e71c:	b	44e550 <_obstack_memory_used@@Base+0x9b4c>
  44e720:	mov	x5, x2
  44e724:	mov	w4, w3
  44e728:	mov	x3, x5
  44e72c:	mov	x2, #0x0                   	// #0
  44e730:	ldr	x5, [x0]
  44e734:	sub	x1, x1, x5
  44e738:	b	44e550 <_obstack_memory_used@@Base+0x9b4c>
  44e73c:	nop
  44e740:	stp	x29, x30, [sp, #-48]!
  44e744:	mov	x29, sp
  44e748:	stp	x19, x20, [sp, #16]
  44e74c:	mov	x19, x4
  44e750:	mov	x20, x0
  44e754:	stp	x21, x22, [sp, #32]
  44e758:	mov	x22, x3
  44e75c:	mov	x21, x1
  44e760:	mov	x3, x4
  44e764:	bl	44df80 <_obstack_memory_used@@Base+0x957c>
  44e768:	cbz	x19, 44e788 <_obstack_memory_used@@Base+0x9d84>
  44e76c:	ldr	x1, [x20]
  44e770:	cmp	x19, #0x1
  44e774:	add	x0, x1, x21
  44e778:	b.eq	44e79c <_obstack_memory_used@@Base+0x9d98>  // b.none
  44e77c:	mov	x2, x19
  44e780:	mov	x1, x22
  44e784:	bl	4026a0 <memcpy@plt>
  44e788:	mov	x0, x20
  44e78c:	ldp	x19, x20, [sp, #16]
  44e790:	ldp	x21, x22, [sp, #32]
  44e794:	ldp	x29, x30, [sp], #48
  44e798:	ret
  44e79c:	ldrb	w0, [x22]
  44e7a0:	strb	w0, [x1, x21]
  44e7a4:	mov	x0, x20
  44e7a8:	ldp	x19, x20, [sp, #16]
  44e7ac:	ldp	x21, x22, [sp, #32]
  44e7b0:	ldp	x29, x30, [sp], #48
  44e7b4:	ret
  44e7b8:	stp	x29, x30, [sp, #-48]!
  44e7bc:	mov	x29, sp
  44e7c0:	str	x19, [sp, #16]
  44e7c4:	mov	x19, x0
  44e7c8:	mov	x0, #0xfffffffffffffff9    	// #-7
  44e7cc:	movk	x0, #0x3fff, lsl #48
  44e7d0:	cmp	x2, x0
  44e7d4:	ldr	x0, [x19]
  44e7d8:	ldur	x5, [x0, #-24]
  44e7dc:	b.hi	44e8bc <_obstack_memory_used@@Base+0x9eb8>  // b.pmore
  44e7e0:	mov	x4, x2
  44e7e4:	mov	x3, x1
  44e7e8:	cmp	x0, x1
  44e7ec:	b.hi	44e814 <_obstack_memory_used@@Base+0x9e10>  // b.pmore
  44e7f0:	add	x6, x0, x5
  44e7f4:	cmp	x6, x1
  44e7f8:	b.cc	44e814 <_obstack_memory_used@@Base+0x9e10>  // b.lo, b.ul, b.last
  44e7fc:	sub	x0, x0, #0x8
  44e800:	ldar	w0, [x0]
  44e804:	cmp	w0, #0x0
  44e808:	ldr	x0, [x19]
  44e80c:	b.le	44e82c <_obstack_memory_used@@Base+0x9e28>
  44e810:	ldur	x5, [x0, #-24]
  44e814:	mov	x0, x19
  44e818:	ldr	x19, [sp, #16]
  44e81c:	mov	x2, x5
  44e820:	ldp	x29, x30, [sp], #48
  44e824:	mov	x1, #0x0                   	// #0
  44e828:	b	44e740 <_obstack_memory_used@@Base+0x9d3c>
  44e82c:	sub	x5, x1, x0
  44e830:	cmp	x2, x5
  44e834:	b.ls	44e87c <_obstack_memory_used@@Base+0x9e78>  // b.plast
  44e838:	cbz	x5, 44e858 <_obstack_memory_used@@Base+0x9e54>
  44e83c:	cmp	x2, #0x1
  44e840:	b.eq	44e89c <_obstack_memory_used@@Base+0x9e98>  // b.none
  44e844:	str	x2, [sp, #40]
  44e848:	bl	4026b0 <memmove@plt>
  44e84c:	ldr	x0, [x19]
  44e850:	ldr	x4, [sp, #40]
  44e854:	nop
  44e858:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44e85c:	sub	x2, x0, #0x18
  44e860:	ldr	x1, [x1, #3984]
  44e864:	cmp	x2, x1
  44e868:	b.ne	44e8ac <_obstack_memory_used@@Base+0x9ea8>  // b.any
  44e86c:	mov	x0, x19
  44e870:	ldr	x19, [sp, #16]
  44e874:	ldp	x29, x30, [sp], #48
  44e878:	ret
  44e87c:	cmp	x2, #0x1
  44e880:	b.eq	44e89c <_obstack_memory_used@@Base+0x9e98>  // b.none
  44e884:	cbz	x2, 44e858 <_obstack_memory_used@@Base+0x9e54>
  44e888:	str	x2, [sp, #40]
  44e88c:	bl	4026a0 <memcpy@plt>
  44e890:	ldr	x0, [x19]
  44e894:	ldr	x4, [sp, #40]
  44e898:	b	44e858 <_obstack_memory_used@@Base+0x9e54>
  44e89c:	ldrb	w1, [x3]
  44e8a0:	strb	w1, [x0]
  44e8a4:	ldr	x0, [x19]
  44e8a8:	b	44e858 <_obstack_memory_used@@Base+0x9e54>
  44e8ac:	stur	x4, [x0, #-24]
  44e8b0:	stur	wzr, [x0, #-8]
  44e8b4:	strb	wzr, [x0, x4]
  44e8b8:	b	44e86c <_obstack_memory_used@@Base+0x9e68>
  44e8bc:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44e8c0:	add	x0, x0, #0xf98
  44e8c4:	bl	402fd8 <ferror@plt+0x208>
  44e8c8:	stp	x29, x30, [sp, #-32]!
  44e8cc:	mov	x29, sp
  44e8d0:	str	x19, [sp, #16]
  44e8d4:	mov	x19, x0
  44e8d8:	bl	44e7b8 <_obstack_memory_used@@Base+0x9db4>
  44e8dc:	mov	x0, x19
  44e8e0:	ldr	x19, [sp, #16]
  44e8e4:	ldp	x29, x30, [sp], #32
  44e8e8:	ret
  44e8ec:	nop
  44e8f0:	ldr	x1, [x1]
  44e8f4:	ldur	x5, [x1, #-24]
  44e8f8:	cmp	x2, x5
  44e8fc:	b.hi	44e918 <_obstack_memory_used@@Base+0x9f14>  // b.pmore
  44e900:	mov	x4, x2
  44e904:	sub	x2, x5, x2
  44e908:	cmp	x2, x3
  44e90c:	add	x1, x1, x4
  44e910:	csel	x2, x2, x3, ls  // ls = plast
  44e914:	b	44e7b8 <_obstack_memory_used@@Base+0x9db4>
  44e918:	stp	x29, x30, [sp, #-16]!
  44e91c:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44e920:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44e924:	mov	x29, sp
  44e928:	mov	x3, x5
  44e92c:	add	x1, x1, #0xf98
  44e930:	add	x0, x0, #0xe90
  44e934:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  44e938:	stp	x29, x30, [sp, #-32]!
  44e93c:	mov	x29, sp
  44e940:	stp	x19, x20, [sp, #16]
  44e944:	mov	x19, x1
  44e948:	mov	x20, x0
  44e94c:	mov	x0, x1
  44e950:	bl	402700 <strlen@plt>
  44e954:	mov	x1, x19
  44e958:	mov	x2, x0
  44e95c:	mov	x0, x20
  44e960:	ldp	x19, x20, [sp, #16]
  44e964:	ldp	x29, x30, [sp], #32
  44e968:	b	44e7b8 <_obstack_memory_used@@Base+0x9db4>
  44e96c:	nop
  44e970:	stp	x29, x30, [sp, #-32]!
  44e974:	mov	x29, sp
  44e978:	stp	x19, x20, [sp, #16]
  44e97c:	mov	x19, x1
  44e980:	mov	x20, x0
  44e984:	mov	x0, x1
  44e988:	bl	402700 <strlen@plt>
  44e98c:	mov	x1, x19
  44e990:	mov	x2, x0
  44e994:	mov	x0, x20
  44e998:	ldp	x19, x20, [sp, #16]
  44e99c:	ldp	x29, x30, [sp], #32
  44e9a0:	b	44e7b8 <_obstack_memory_used@@Base+0x9db4>
  44e9a4:	nop
  44e9a8:	b	44e7b8 <_obstack_memory_used@@Base+0x9db4>
  44e9ac:	nop
  44e9b0:	stp	x29, x30, [sp, #-64]!
  44e9b4:	mov	x5, x2
  44e9b8:	mov	x29, sp
  44e9bc:	ldr	x6, [x0]
  44e9c0:	stp	x19, x20, [sp, #16]
  44e9c4:	stp	x21, x22, [sp, #32]
  44e9c8:	mov	x21, x1
  44e9cc:	ldur	x2, [x6, #-24]
  44e9d0:	cmp	x1, x2
  44e9d4:	b.hi	44eb40 <_obstack_memory_used@@Base+0xa13c>  // b.pmore
  44e9d8:	mov	x7, #0xfffffffffffffff9    	// #-7
  44e9dc:	mov	x4, x3
  44e9e0:	movk	x7, #0x3fff, lsl #48
  44e9e4:	sub	x7, x7, x2
  44e9e8:	cmp	x3, x7
  44e9ec:	b.hi	44eb34 <_obstack_memory_used@@Base+0xa130>  // b.pmore
  44e9f0:	mov	x20, x0
  44e9f4:	cmp	x6, x5
  44e9f8:	b.hi	44ea18 <_obstack_memory_used@@Base+0xa014>  // b.pmore
  44e9fc:	add	x2, x6, x2
  44ea00:	cmp	x5, x2
  44ea04:	b.hi	44ea18 <_obstack_memory_used@@Base+0xa014>  // b.pmore
  44ea08:	sub	x6, x6, #0x8
  44ea0c:	ldar	w2, [x6]
  44ea10:	cmp	w2, #0x0
  44ea14:	b.le	44ea38 <_obstack_memory_used@@Base+0xa034>
  44ea18:	mov	x1, x21
  44ea1c:	mov	x0, x20
  44ea20:	ldp	x19, x20, [sp, #16]
  44ea24:	mov	x3, x5
  44ea28:	ldp	x21, x22, [sp, #32]
  44ea2c:	mov	x2, #0x0                   	// #0
  44ea30:	ldp	x29, x30, [sp], #64
  44ea34:	b	44e740 <_obstack_memory_used@@Base+0x9d3c>
  44ea38:	ldr	x19, [x0]
  44ea3c:	mov	x2, #0x0                   	// #0
  44ea40:	str	x3, [sp, #56]
  44ea44:	sub	x19, x5, x19
  44ea48:	bl	44df80 <_obstack_memory_used@@Base+0x957c>
  44ea4c:	ldr	x0, [x20]
  44ea50:	ldr	x4, [sp, #56]
  44ea54:	add	x1, x0, x19
  44ea58:	add	x3, x0, x21
  44ea5c:	add	x5, x1, x4
  44ea60:	cmp	x5, x3
  44ea64:	b.hi	44ea94 <_obstack_memory_used@@Base+0xa090>  // b.pmore
  44ea68:	cmp	x4, #0x1
  44ea6c:	b.eq	44eb04 <_obstack_memory_used@@Base+0xa100>  // b.none
  44ea70:	cbz	x4, 44ea80 <_obstack_memory_used@@Base+0xa07c>
  44ea74:	mov	x2, x4
  44ea78:	mov	x0, x3
  44ea7c:	bl	4026a0 <memcpy@plt>
  44ea80:	mov	x0, x20
  44ea84:	ldp	x19, x20, [sp, #16]
  44ea88:	ldp	x21, x22, [sp, #32]
  44ea8c:	ldp	x29, x30, [sp], #64
  44ea90:	ret
  44ea94:	cmp	x1, x3
  44ea98:	b.cc	44eabc <_obstack_memory_used@@Base+0xa0b8>  // b.lo, b.ul, b.last
  44ea9c:	cmp	x4, #0x1
  44eaa0:	b.eq	44eb1c <_obstack_memory_used@@Base+0xa118>  // b.none
  44eaa4:	cbz	x4, 44ea80 <_obstack_memory_used@@Base+0xa07c>
  44eaa8:	mov	x2, x4
  44eaac:	mov	x1, x5
  44eab0:	mov	x0, x3
  44eab4:	bl	4026a0 <memcpy@plt>
  44eab8:	b	44ea80 <_obstack_memory_used@@Base+0xa07c>
  44eabc:	sub	x22, x21, x19
  44eac0:	cmp	x22, #0x1
  44eac4:	b.eq	44eb10 <_obstack_memory_used@@Base+0xa10c>  // b.none
  44eac8:	cbz	x22, 44eae4 <_obstack_memory_used@@Base+0xa0e0>
  44eacc:	mov	x0, x3
  44ead0:	mov	x2, x22
  44ead4:	str	x4, [sp, #56]
  44ead8:	bl	4026a0 <memcpy@plt>
  44eadc:	ldr	x4, [sp, #56]
  44eae0:	mov	x3, x0
  44eae4:	sub	x2, x4, x22
  44eae8:	add	x0, x3, x22
  44eaec:	cmp	x2, #0x1
  44eaf0:	add	x1, x3, x4
  44eaf4:	b.eq	44eb28 <_obstack_memory_used@@Base+0xa124>  // b.none
  44eaf8:	cbz	x2, 44ea80 <_obstack_memory_used@@Base+0xa07c>
  44eafc:	bl	4026a0 <memcpy@plt>
  44eb00:	b	44ea80 <_obstack_memory_used@@Base+0xa07c>
  44eb04:	ldrb	w1, [x0, x19]
  44eb08:	strb	w1, [x0, x21]
  44eb0c:	b	44ea80 <_obstack_memory_used@@Base+0xa07c>
  44eb10:	ldrb	w1, [x0, x19]
  44eb14:	strb	w1, [x0, x21]
  44eb18:	b	44eae4 <_obstack_memory_used@@Base+0xa0e0>
  44eb1c:	ldrb	w1, [x1, #1]
  44eb20:	strb	w1, [x0, x21]
  44eb24:	b	44ea80 <_obstack_memory_used@@Base+0xa07c>
  44eb28:	ldrb	w0, [x3, x4]
  44eb2c:	strb	w0, [x3, x22]
  44eb30:	b	44ea80 <_obstack_memory_used@@Base+0xa07c>
  44eb34:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44eb38:	add	x0, x0, #0xf48
  44eb3c:	bl	402fd8 <ferror@plt+0x208>
  44eb40:	mov	x3, x2
  44eb44:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44eb48:	mov	x2, x1
  44eb4c:	add	x0, x0, #0xe90
  44eb50:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44eb54:	add	x1, x1, #0xf48
  44eb58:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  44eb5c:	nop
  44eb60:	ldr	x4, [x0]
  44eb64:	sub	x1, x1, x4
  44eb68:	b	44e9b0 <_obstack_memory_used@@Base+0x9fac>
  44eb6c:	nop
  44eb70:	ldr	x2, [x2]
  44eb74:	mov	x5, x3
  44eb78:	ldur	x6, [x2, #-24]
  44eb7c:	cmp	x3, x6
  44eb80:	b.hi	44eb98 <_obstack_memory_used@@Base+0xa194>  // b.pmore
  44eb84:	sub	x6, x6, x3
  44eb88:	add	x2, x2, x3
  44eb8c:	cmp	x6, x4
  44eb90:	csel	x3, x6, x4, ls  // ls = plast
  44eb94:	b	44e9b0 <_obstack_memory_used@@Base+0x9fac>
  44eb98:	stp	x29, x30, [sp, #-16]!
  44eb9c:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44eba0:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44eba4:	mov	x29, sp
  44eba8:	mov	x3, x6
  44ebac:	mov	x2, x5
  44ebb0:	add	x1, x1, #0xf48
  44ebb4:	add	x0, x0, #0xe90
  44ebb8:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  44ebbc:	nop
  44ebc0:	stp	x29, x30, [sp, #-48]!
  44ebc4:	mov	x29, sp
  44ebc8:	stp	x19, x20, [sp, #16]
  44ebcc:	mov	x19, x2
  44ebd0:	mov	x20, x0
  44ebd4:	mov	x0, x2
  44ebd8:	str	x21, [sp, #32]
  44ebdc:	mov	x21, x1
  44ebe0:	bl	402700 <strlen@plt>
  44ebe4:	mov	x2, x19
  44ebe8:	mov	x3, x0
  44ebec:	mov	x1, x21
  44ebf0:	mov	x0, x20
  44ebf4:	ldp	x19, x20, [sp, #16]
  44ebf8:	ldr	x21, [sp, #32]
  44ebfc:	ldp	x29, x30, [sp], #48
  44ec00:	b	44e9b0 <_obstack_memory_used@@Base+0x9fac>
  44ec04:	nop
  44ec08:	ldr	x2, [x2]
  44ec0c:	ldur	x3, [x2, #-24]
  44ec10:	b	44e9b0 <_obstack_memory_used@@Base+0x9fac>
  44ec14:	nop
  44ec18:	ldr	x1, [x0]
  44ec1c:	ldur	x2, [x1, #-24]
  44ec20:	sub	x1, x2, #0x1
  44ec24:	cmp	x1, x2
  44ec28:	b.hi	44ec38 <_obstack_memory_used@@Base+0xa234>  // b.pmore
  44ec2c:	mov	x3, #0x0                   	// #0
  44ec30:	mov	x2, #0x1                   	// #1
  44ec34:	b	44df80 <_obstack_memory_used@@Base+0x957c>
  44ec38:	stp	x29, x30, [sp, #-16]!
  44ec3c:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44ec40:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44ec44:	mov	x29, sp
  44ec48:	add	x1, x1, #0xf10
  44ec4c:	add	x0, x0, #0xe90
  44ec50:	mov	x3, #0x0                   	// #0
  44ec54:	mov	x2, #0xffffffffffffffff    	// #-1
  44ec58:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  44ec5c:	nop
  44ec60:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44ec64:	ldr	x1, [x1, #3984]
  44ec68:	cmp	x0, x1
  44ec6c:	b.ne	44ec78 <_obstack_memory_used@@Base+0xa274>  // b.any
  44ec70:	add	x0, x0, #0x18
  44ec74:	ret
  44ec78:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44ec7c:	ldr	x1, [x1, #3600]
  44ec80:	cbz	x1, 44eca0 <_obstack_memory_used@@Base+0xa29c>
  44ec84:	add	x1, x0, #0x10
  44ec88:	ldaxr	w2, [x1]
  44ec8c:	add	w2, w2, #0x1
  44ec90:	stlxr	w3, w2, [x1]
  44ec94:	cbnz	w3, 44ec88 <_obstack_memory_used@@Base+0xa284>
  44ec98:	add	x0, x0, #0x18
  44ec9c:	ret
  44eca0:	ldr	w1, [x0, #16]
  44eca4:	add	w1, w1, #0x1
  44eca8:	str	w1, [x0, #16]
  44ecac:	b	44ec70 <_obstack_memory_used@@Base+0xa26c>
  44ecb0:	stp	x29, x30, [sp, #-32]!
  44ecb4:	mov	x3, x2
  44ecb8:	mov	x2, x1
  44ecbc:	mov	x29, sp
  44ecc0:	ldr	x1, [x0, #8]
  44ecc4:	stp	x19, x20, [sp, #16]
  44ecc8:	mov	x19, x0
  44eccc:	ldr	x0, [x0]
  44ecd0:	add	x0, x3, x0
  44ecd4:	bl	44db50 <_obstack_memory_used@@Base+0x914c>
  44ecd8:	ldr	x2, [x19]
  44ecdc:	mov	x20, x0
  44ece0:	add	x3, x0, #0x18
  44ece4:	cbz	x2, 44ed08 <_obstack_memory_used@@Base+0xa304>
  44ece8:	cmp	x2, #0x1
  44ecec:	add	x3, x0, #0x18
  44ecf0:	b.eq	44ed28 <_obstack_memory_used@@Base+0xa324>  // b.none
  44ecf4:	mov	x0, x3
  44ecf8:	add	x1, x19, #0x18
  44ecfc:	bl	4026a0 <memcpy@plt>
  44ed00:	mov	x3, x0
  44ed04:	ldr	x2, [x19]
  44ed08:	adrp	x0, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44ed0c:	ldr	x0, [x0, #3984]
  44ed10:	cmp	x20, x0
  44ed14:	b.ne	44ed44 <_obstack_memory_used@@Base+0xa340>  // b.any
  44ed18:	mov	x0, x3
  44ed1c:	ldp	x19, x20, [sp, #16]
  44ed20:	ldp	x29, x30, [sp], #32
  44ed24:	ret
  44ed28:	ldrb	w0, [x19, #24]
  44ed2c:	strb	w0, [x20, #24]
  44ed30:	adrp	x0, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44ed34:	ldr	x2, [x19]
  44ed38:	ldr	x0, [x0, #3984]
  44ed3c:	cmp	x20, x0
  44ed40:	b.eq	44ed18 <_obstack_memory_used@@Base+0xa314>  // b.none
  44ed44:	add	x0, x20, x2
  44ed48:	str	x2, [x20]
  44ed4c:	str	wzr, [x20, #16]
  44ed50:	strb	wzr, [x0, #24]
  44ed54:	mov	x0, x3
  44ed58:	ldp	x19, x20, [sp, #16]
  44ed5c:	ldp	x29, x30, [sp], #32
  44ed60:	ret
  44ed64:	nop
  44ed68:	stp	x29, x30, [sp, #-64]!
  44ed6c:	mov	x3, x1
  44ed70:	mov	x29, sp
  44ed74:	stp	x19, x20, [sp, #16]
  44ed78:	mov	x19, x0
  44ed7c:	ldr	x0, [x0]
  44ed80:	ldur	x1, [x0, #-16]
  44ed84:	cmp	x3, x1
  44ed88:	b.eq	44ede0 <_obstack_memory_used@@Base+0xa3dc>  // b.none
  44ed8c:	str	x21, [sp, #32]
  44ed90:	ldur	x2, [x0, #-24]
  44ed94:	add	x21, sp, #0x38
  44ed98:	mov	x1, x21
  44ed9c:	sub	x0, x0, #0x18
  44eda0:	cmp	x3, x2
  44eda4:	csel	x3, x3, x2, cs  // cs = hs, nlast
  44eda8:	sub	x2, x3, x2
  44edac:	bl	44ecb0 <_obstack_memory_used@@Base+0xa2ac>
  44edb0:	mov	x20, x0
  44edb4:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44edb8:	ldr	x3, [x19]
  44edbc:	ldr	x2, [x2, #3984]
  44edc0:	sub	x0, x3, #0x18
  44edc4:	cmp	x0, x2
  44edc8:	b.ne	44edfc <_obstack_memory_used@@Base+0xa3f8>  // b.any
  44edcc:	ldr	x21, [sp, #32]
  44edd0:	str	x20, [x19]
  44edd4:	ldp	x19, x20, [sp, #16]
  44edd8:	ldp	x29, x30, [sp], #64
  44eddc:	ret
  44ede0:	sub	x0, x0, #0x8
  44ede4:	ldar	w0, [x0]
  44ede8:	cmp	w0, #0x0
  44edec:	b.le	44edd4 <_obstack_memory_used@@Base+0xa3d0>
  44edf0:	ldr	x0, [x19]
  44edf4:	str	x21, [sp, #32]
  44edf8:	b	44ed90 <_obstack_memory_used@@Base+0xa38c>
  44edfc:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44ee00:	ldr	x1, [x1, #3600]
  44ee04:	cbz	x1, 44ee30 <_obstack_memory_used@@Base+0xa42c>
  44ee08:	sub	x3, x3, #0x8
  44ee0c:	ldaxr	w1, [x3]
  44ee10:	sub	w2, w1, #0x1
  44ee14:	stlxr	w4, w2, [x3]
  44ee18:	cbnz	w4, 44ee0c <_obstack_memory_used@@Base+0xa408>
  44ee1c:	cmp	w1, #0x0
  44ee20:	b.gt	44edcc <_obstack_memory_used@@Base+0xa3c8>
  44ee24:	mov	x1, x21
  44ee28:	bl	44ddb0 <_obstack_memory_used@@Base+0x93ac>
  44ee2c:	b	44edcc <_obstack_memory_used@@Base+0xa3c8>
  44ee30:	ldur	w1, [x3, #-8]
  44ee34:	sub	w2, w1, #0x1
  44ee38:	stur	w2, [x3, #-8]
  44ee3c:	b	44ee1c <_obstack_memory_used@@Base+0xa418>
  44ee40:	ldr	x1, [x0]
  44ee44:	ldp	x2, x1, [x1, #-24]
  44ee48:	cmp	x2, x1
  44ee4c:	b.cc	44ee54 <_obstack_memory_used@@Base+0xa450>  // b.lo, b.ul, b.last
  44ee50:	ret
  44ee54:	stp	x29, x30, [sp, #-16]!
  44ee58:	mov	x1, #0x0                   	// #0
  44ee5c:	mov	x29, sp
  44ee60:	bl	44ed68 <_obstack_memory_used@@Base+0xa364>
  44ee64:	ldp	x29, x30, [sp], #16
  44ee68:	ret
  44ee6c:	bl	44a3e8 <_obstack_memory_used@@Base+0x59e4>
  44ee70:	bl	44a488 <_obstack_memory_used@@Base+0x5a84>
  44ee74:	b	44ee64 <_obstack_memory_used@@Base+0xa460>
  44ee78:	stp	x29, x30, [sp, #-48]!
  44ee7c:	mov	x29, sp
  44ee80:	stp	x19, x20, [sp, #16]
  44ee84:	mov	x19, x0
  44ee88:	ldr	x0, [x1]
  44ee8c:	stp	x21, x22, [sp, #32]
  44ee90:	ldur	x21, [x0, #-24]
  44ee94:	cbz	x21, 44eef4 <_obstack_memory_used@@Base+0xa4f0>
  44ee98:	ldr	x0, [x19]
  44ee9c:	mov	x20, x1
  44eea0:	ldp	x22, x1, [x0, #-24]
  44eea4:	add	x22, x21, x22
  44eea8:	cmp	x22, x1
  44eeac:	b.ls	44ef08 <_obstack_memory_used@@Base+0xa504>  // b.plast
  44eeb0:	mov	x1, x22
  44eeb4:	mov	x0, x19
  44eeb8:	bl	44ed68 <_obstack_memory_used@@Base+0xa364>
  44eebc:	ldr	x2, [x19]
  44eec0:	cmp	x21, #0x1
  44eec4:	ldr	x1, [x20]
  44eec8:	ldur	x3, [x2, #-24]
  44eecc:	add	x0, x2, x3
  44eed0:	b.eq	44ef30 <_obstack_memory_used@@Base+0xa52c>  // b.none
  44eed4:	mov	x2, x21
  44eed8:	bl	4026a0 <memcpy@plt>
  44eedc:	adrp	x0, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44eee0:	ldr	x1, [x19]
  44eee4:	ldr	x0, [x0, #3984]
  44eee8:	sub	x2, x1, #0x18
  44eeec:	cmp	x2, x0
  44eef0:	b.ne	44ef3c <_obstack_memory_used@@Base+0xa538>  // b.any
  44eef4:	mov	x0, x19
  44eef8:	ldp	x19, x20, [sp, #16]
  44eefc:	ldp	x21, x22, [sp, #32]
  44ef00:	ldp	x29, x30, [sp], #48
  44ef04:	ret
  44ef08:	sub	x0, x0, #0x8
  44ef0c:	ldar	w0, [x0]
  44ef10:	cmp	w0, #0x0
  44ef14:	b.gt	44eeb0 <_obstack_memory_used@@Base+0xa4ac>
  44ef18:	ldr	x2, [x19]
  44ef1c:	cmp	x21, #0x1
  44ef20:	ldr	x1, [x20]
  44ef24:	ldur	x3, [x2, #-24]
  44ef28:	add	x0, x2, x3
  44ef2c:	b.ne	44eed4 <_obstack_memory_used@@Base+0xa4d0>  // b.any
  44ef30:	ldrb	w0, [x1]
  44ef34:	strb	w0, [x2, x3]
  44ef38:	b	44eedc <_obstack_memory_used@@Base+0xa4d8>
  44ef3c:	stur	x22, [x1, #-24]
  44ef40:	stur	wzr, [x1, #-8]
  44ef44:	strb	wzr, [x1, x22]
  44ef48:	b	44eef4 <_obstack_memory_used@@Base+0xa4f0>
  44ef4c:	nop
  44ef50:	b	44ee78 <_obstack_memory_used@@Base+0xa474>
  44ef54:	nop
  44ef58:	stp	x29, x30, [sp, #-64]!
  44ef5c:	mov	x29, sp
  44ef60:	stp	x19, x20, [sp, #16]
  44ef64:	mov	x20, x0
  44ef68:	ldr	x0, [x1]
  44ef6c:	ldur	x4, [x0, #-24]
  44ef70:	stp	x21, x22, [sp, #32]
  44ef74:	cmp	x2, x4
  44ef78:	b.hi	44f040 <_obstack_memory_used@@Base+0xa63c>  // b.pmore
  44ef7c:	sub	x4, x4, x2
  44ef80:	mov	x21, x2
  44ef84:	cmp	x4, x3
  44ef88:	csel	x19, x4, x3, ls  // ls = plast
  44ef8c:	cbz	x19, 44f00c <_obstack_memory_used@@Base+0xa608>
  44ef90:	ldr	x0, [x20]
  44ef94:	mov	x22, x1
  44ef98:	ldur	x1, [x0, #-16]
  44ef9c:	str	x23, [sp, #48]
  44efa0:	ldur	x23, [x0, #-24]
  44efa4:	add	x23, x19, x23
  44efa8:	cmp	x1, x23
  44efac:	b.cc	44efc0 <_obstack_memory_used@@Base+0xa5bc>  // b.lo, b.ul, b.last
  44efb0:	sub	x0, x0, #0x8
  44efb4:	ldar	w0, [x0]
  44efb8:	cmp	w0, #0x0
  44efbc:	b.le	44efcc <_obstack_memory_used@@Base+0xa5c8>
  44efc0:	mov	x1, x23
  44efc4:	mov	x0, x20
  44efc8:	bl	44ed68 <_obstack_memory_used@@Base+0xa364>
  44efcc:	ldr	x2, [x20]
  44efd0:	cmp	x19, #0x1
  44efd4:	ldr	x4, [x22]
  44efd8:	ldur	x3, [x2, #-24]
  44efdc:	add	x1, x4, x21
  44efe0:	add	x0, x2, x3
  44efe4:	b.eq	44f020 <_obstack_memory_used@@Base+0xa61c>  // b.none
  44efe8:	mov	x2, x19
  44efec:	bl	4026a0 <memcpy@plt>
  44eff0:	adrp	x0, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44eff4:	ldr	x1, [x20]
  44eff8:	ldr	x0, [x0, #3984]
  44effc:	sub	x2, x1, #0x18
  44f000:	cmp	x2, x0
  44f004:	b.ne	44f02c <_obstack_memory_used@@Base+0xa628>  // b.any
  44f008:	ldr	x23, [sp, #48]
  44f00c:	mov	x0, x20
  44f010:	ldp	x19, x20, [sp, #16]
  44f014:	ldp	x21, x22, [sp, #32]
  44f018:	ldp	x29, x30, [sp], #64
  44f01c:	ret
  44f020:	ldrb	w0, [x4, x21]
  44f024:	strb	w0, [x2, x3]
  44f028:	b	44eff0 <_obstack_memory_used@@Base+0xa5ec>
  44f02c:	stur	x23, [x1, #-24]
  44f030:	stur	wzr, [x1, #-8]
  44f034:	strb	wzr, [x1, x23]
  44f038:	ldr	x23, [sp, #48]
  44f03c:	b	44f00c <_obstack_memory_used@@Base+0xa608>
  44f040:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44f044:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44f048:	mov	x3, x4
  44f04c:	add	x1, x1, #0xfb0
  44f050:	add	x0, x0, #0xe90
  44f054:	str	x23, [sp, #48]
  44f058:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  44f05c:	nop
  44f060:	stp	x29, x30, [sp, #-48]!
  44f064:	mov	x29, sp
  44f068:	stp	x19, x20, [sp, #16]
  44f06c:	mov	x19, x0
  44f070:	cbz	x2, 44f10c <_obstack_memory_used@@Base+0xa708>
  44f074:	ldr	x0, [x0]
  44f078:	stp	x21, x22, [sp, #32]
  44f07c:	mov	x21, x1
  44f080:	mov	x1, #0xfffffffffffffff9    	// #-7
  44f084:	mov	x20, x2
  44f088:	ldur	x22, [x0, #-24]
  44f08c:	movk	x1, #0x3fff, lsl #48
  44f090:	sub	x1, x1, x22
  44f094:	cmp	x2, x1
  44f098:	b.hi	44f168 <_obstack_memory_used@@Base+0xa764>  // b.pmore
  44f09c:	ldur	x1, [x0, #-16]
  44f0a0:	add	x22, x2, x22
  44f0a4:	cmp	x22, x1
  44f0a8:	b.ls	44f150 <_obstack_memory_used@@Base+0xa74c>  // b.plast
  44f0ac:	cmp	x0, x21
  44f0b0:	b.hi	44f0c4 <_obstack_memory_used@@Base+0xa6c0>  // b.pmore
  44f0b4:	ldur	x1, [x0, #-24]
  44f0b8:	add	x1, x0, x1
  44f0bc:	cmp	x21, x1
  44f0c0:	b.ls	44f11c <_obstack_memory_used@@Base+0xa718>  // b.plast
  44f0c4:	mov	x1, x22
  44f0c8:	mov	x0, x19
  44f0cc:	bl	44ed68 <_obstack_memory_used@@Base+0xa364>
  44f0d0:	ldr	x1, [x19]
  44f0d4:	cmp	x20, #0x1
  44f0d8:	ldur	x2, [x1, #-24]
  44f0dc:	add	x0, x1, x2
  44f0e0:	b.eq	44f144 <_obstack_memory_used@@Base+0xa740>  // b.none
  44f0e4:	mov	x2, x20
  44f0e8:	mov	x1, x21
  44f0ec:	bl	4026a0 <memcpy@plt>
  44f0f0:	adrp	x0, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44f0f4:	ldr	x1, [x19]
  44f0f8:	ldr	x0, [x0, #3984]
  44f0fc:	sub	x2, x1, #0x18
  44f100:	cmp	x2, x0
  44f104:	b.ne	44f174 <_obstack_memory_used@@Base+0xa770>  // b.any
  44f108:	ldp	x21, x22, [sp, #32]
  44f10c:	mov	x0, x19
  44f110:	ldp	x19, x20, [sp, #16]
  44f114:	ldp	x29, x30, [sp], #48
  44f118:	ret
  44f11c:	sub	x21, x21, x0
  44f120:	mov	x1, x22
  44f124:	mov	x0, x19
  44f128:	bl	44ed68 <_obstack_memory_used@@Base+0xa364>
  44f12c:	ldr	x1, [x19]
  44f130:	cmp	x20, #0x1
  44f134:	add	x21, x1, x21
  44f138:	ldur	x2, [x1, #-24]
  44f13c:	add	x0, x1, x2
  44f140:	b.ne	44f0e4 <_obstack_memory_used@@Base+0xa6e0>  // b.any
  44f144:	ldrb	w0, [x21]
  44f148:	strb	w0, [x1, x2]
  44f14c:	b	44f0f0 <_obstack_memory_used@@Base+0xa6ec>
  44f150:	sub	x0, x0, #0x8
  44f154:	ldar	w0, [x0]
  44f158:	cmp	w0, #0x0
  44f15c:	b.le	44f0d0 <_obstack_memory_used@@Base+0xa6cc>
  44f160:	ldr	x0, [x19]
  44f164:	b	44f0ac <_obstack_memory_used@@Base+0xa6a8>
  44f168:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44f16c:	add	x0, x0, #0xfb0
  44f170:	bl	402fd8 <ferror@plt+0x208>
  44f174:	stur	x22, [x1, #-24]
  44f178:	stur	wzr, [x1, #-8]
  44f17c:	strb	wzr, [x1, x22]
  44f180:	ldp	x21, x22, [sp, #32]
  44f184:	b	44f10c <_obstack_memory_used@@Base+0xa708>
  44f188:	b	44f060 <_obstack_memory_used@@Base+0xa65c>
  44f18c:	nop
  44f190:	stp	x29, x30, [sp, #-32]!
  44f194:	mov	x29, sp
  44f198:	stp	x19, x20, [sp, #16]
  44f19c:	mov	x19, x1
  44f1a0:	mov	x20, x0
  44f1a4:	mov	x0, x1
  44f1a8:	bl	402700 <strlen@plt>
  44f1ac:	mov	x1, x19
  44f1b0:	mov	x2, x0
  44f1b4:	mov	x0, x20
  44f1b8:	ldp	x19, x20, [sp, #16]
  44f1bc:	ldp	x29, x30, [sp], #32
  44f1c0:	b	44f060 <_obstack_memory_used@@Base+0xa65c>
  44f1c4:	nop
  44f1c8:	stp	x29, x30, [sp, #-32]!
  44f1cc:	mov	x29, sp
  44f1d0:	stp	x19, x20, [sp, #16]
  44f1d4:	mov	x19, x1
  44f1d8:	mov	x20, x0
  44f1dc:	mov	x0, x1
  44f1e0:	bl	402700 <strlen@plt>
  44f1e4:	mov	x1, x19
  44f1e8:	mov	x2, x0
  44f1ec:	mov	x0, x20
  44f1f0:	ldp	x19, x20, [sp, #16]
  44f1f4:	ldp	x29, x30, [sp], #32
  44f1f8:	b	44f060 <_obstack_memory_used@@Base+0xa65c>
  44f1fc:	nop
  44f200:	b	44f060 <_obstack_memory_used@@Base+0xa65c>
  44f204:	nop
  44f208:	stp	x29, x30, [sp, #-48]!
  44f20c:	mov	x29, sp
  44f210:	stp	x19, x20, [sp, #16]
  44f214:	mov	x19, x0
  44f218:	cbz	x1, 44f2ac <_obstack_memory_used@@Base+0xa8a8>
  44f21c:	ldr	x0, [x0]
  44f220:	mov	x20, x1
  44f224:	stp	x21, x22, [sp, #32]
  44f228:	and	w22, w2, #0xff
  44f22c:	mov	x2, #0xfffffffffffffff9    	// #-7
  44f230:	ldur	x1, [x0, #-24]
  44f234:	movk	x2, #0x3fff, lsl #48
  44f238:	sub	x2, x2, x1
  44f23c:	cmp	x20, x2
  44f240:	b.hi	44f2c4 <_obstack_memory_used@@Base+0xa8c0>  // b.pmore
  44f244:	ldur	x2, [x0, #-16]
  44f248:	add	x21, x20, x1
  44f24c:	cmp	x21, x2
  44f250:	b.hi	44f264 <_obstack_memory_used@@Base+0xa860>  // b.pmore
  44f254:	sub	x0, x0, #0x8
  44f258:	ldar	w0, [x0]
  44f25c:	cmp	w0, #0x0
  44f260:	b.le	44f270 <_obstack_memory_used@@Base+0xa86c>
  44f264:	mov	x1, x21
  44f268:	mov	x0, x19
  44f26c:	bl	44ed68 <_obstack_memory_used@@Base+0xa364>
  44f270:	ldr	x1, [x19]
  44f274:	cmp	x20, #0x1
  44f278:	ldur	x2, [x1, #-24]
  44f27c:	add	x0, x1, x2
  44f280:	b.eq	44f2bc <_obstack_memory_used@@Base+0xa8b8>  // b.none
  44f284:	mov	x2, x20
  44f288:	mov	w1, w22
  44f28c:	bl	402930 <memset@plt>
  44f290:	adrp	x0, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44f294:	ldr	x1, [x19]
  44f298:	ldr	x0, [x0, #3984]
  44f29c:	sub	x2, x1, #0x18
  44f2a0:	cmp	x2, x0
  44f2a4:	b.ne	44f2d0 <_obstack_memory_used@@Base+0xa8cc>  // b.any
  44f2a8:	ldp	x21, x22, [sp, #32]
  44f2ac:	mov	x0, x19
  44f2b0:	ldp	x19, x20, [sp, #16]
  44f2b4:	ldp	x29, x30, [sp], #48
  44f2b8:	ret
  44f2bc:	strb	w22, [x1, x2]
  44f2c0:	b	44f290 <_obstack_memory_used@@Base+0xa88c>
  44f2c4:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44f2c8:	add	x0, x0, #0xfb0
  44f2cc:	bl	402fd8 <ferror@plt+0x208>
  44f2d0:	stur	x21, [x1, #-24]
  44f2d4:	stur	wzr, [x1, #-8]
  44f2d8:	strb	wzr, [x1, x21]
  44f2dc:	ldp	x21, x22, [sp, #32]
  44f2e0:	b	44f2ac <_obstack_memory_used@@Base+0xa8a8>
  44f2e4:	nop
  44f2e8:	mov	x4, #0xfffffffffffffff9    	// #-7
  44f2ec:	movk	x4, #0x3fff, lsl #48
  44f2f0:	cmp	x1, x4
  44f2f4:	ldr	x4, [x0]
  44f2f8:	ldur	x4, [x4, #-24]
  44f2fc:	b.hi	44f328 <_obstack_memory_used@@Base+0xa924>  // b.pmore
  44f300:	cmp	x1, x4
  44f304:	b.hi	44f31c <_obstack_memory_used@@Base+0xa918>  // b.pmore
  44f308:	b.cc	44f310 <_obstack_memory_used@@Base+0xa90c>  // b.lo, b.ul, b.last
  44f30c:	ret
  44f310:	sub	x2, x4, x1
  44f314:	mov	x3, #0x0                   	// #0
  44f318:	b	44df80 <_obstack_memory_used@@Base+0x957c>
  44f31c:	and	w2, w2, #0xff
  44f320:	sub	x1, x1, x4
  44f324:	b	44f208 <_obstack_memory_used@@Base+0xa804>
  44f328:	stp	x29, x30, [sp, #-16]!
  44f32c:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x285fc>
  44f330:	add	x0, x0, #0x368
  44f334:	mov	x29, sp
  44f338:	bl	402fd8 <ferror@plt+0x208>
  44f33c:	nop
  44f340:	mov	w2, #0x0                   	// #0
  44f344:	b	44f2e8 <_obstack_memory_used@@Base+0xa8e4>
  44f348:	stp	x29, x30, [sp, #-48]!
  44f34c:	mov	x29, sp
  44f350:	stp	x19, x20, [sp, #16]
  44f354:	mov	x19, x0
  44f358:	ldr	x0, [x0]
  44f35c:	stp	x21, x22, [sp, #32]
  44f360:	and	w22, w1, #0xff
  44f364:	ldp	x21, x1, [x0, #-24]
  44f368:	add	x20, x21, #0x1
  44f36c:	cmp	x20, x1
  44f370:	b.hi	44f384 <_obstack_memory_used@@Base+0xa980>  // b.pmore
  44f374:	sub	x0, x0, #0x8
  44f378:	ldar	w0, [x0]
  44f37c:	cmp	w0, #0x0
  44f380:	b.le	44f390 <_obstack_memory_used@@Base+0xa98c>
  44f384:	mov	x1, x20
  44f388:	mov	x0, x19
  44f38c:	bl	44ed68 <_obstack_memory_used@@Base+0xa364>
  44f390:	ldr	x2, [x19]
  44f394:	adrp	x0, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44f398:	ldr	x0, [x0, #3984]
  44f39c:	ldur	x1, [x2, #-24]
  44f3a0:	strb	w22, [x2, x1]
  44f3a4:	ldr	x2, [x19]
  44f3a8:	sub	x1, x2, #0x18
  44f3ac:	cmp	x1, x0
  44f3b0:	b.ne	44f3c4 <_obstack_memory_used@@Base+0xa9c0>  // b.any
  44f3b4:	ldp	x19, x20, [sp, #16]
  44f3b8:	ldp	x21, x22, [sp, #32]
  44f3bc:	ldp	x29, x30, [sp], #48
  44f3c0:	ret
  44f3c4:	add	x1, x1, x21
  44f3c8:	stur	x20, [x2, #-24]
  44f3cc:	stur	wzr, [x2, #-8]
  44f3d0:	strb	wzr, [x1, #25]
  44f3d4:	ldp	x19, x20, [sp, #16]
  44f3d8:	ldp	x21, x22, [sp, #32]
  44f3dc:	ldp	x29, x30, [sp], #48
  44f3e0:	ret
  44f3e4:	nop
  44f3e8:	stp	x29, x30, [sp, #-48]!
  44f3ec:	mov	x29, sp
  44f3f0:	stp	x19, x20, [sp, #16]
  44f3f4:	mov	x19, x0
  44f3f8:	ldr	x0, [x0]
  44f3fc:	stp	x21, x22, [sp, #32]
  44f400:	and	w22, w1, #0xff
  44f404:	ldp	x21, x1, [x0, #-24]
  44f408:	add	x20, x21, #0x1
  44f40c:	cmp	x20, x1
  44f410:	b.hi	44f424 <_obstack_memory_used@@Base+0xaa20>  // b.pmore
  44f414:	sub	x0, x0, #0x8
  44f418:	ldar	w0, [x0]
  44f41c:	cmp	w0, #0x0
  44f420:	b.le	44f430 <_obstack_memory_used@@Base+0xaa2c>
  44f424:	mov	x1, x20
  44f428:	mov	x0, x19
  44f42c:	bl	44ed68 <_obstack_memory_used@@Base+0xa364>
  44f430:	ldr	x2, [x19]
  44f434:	adrp	x0, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44f438:	ldr	x0, [x0, #3984]
  44f43c:	ldur	x1, [x2, #-24]
  44f440:	strb	w22, [x2, x1]
  44f444:	ldr	x2, [x19]
  44f448:	sub	x1, x2, #0x18
  44f44c:	cmp	x1, x0
  44f450:	b.ne	44f468 <_obstack_memory_used@@Base+0xaa64>  // b.any
  44f454:	mov	x0, x19
  44f458:	ldp	x19, x20, [sp, #16]
  44f45c:	ldp	x21, x22, [sp, #32]
  44f460:	ldp	x29, x30, [sp], #48
  44f464:	ret
  44f468:	add	x1, x1, x21
  44f46c:	stur	x20, [x2, #-24]
  44f470:	stur	wzr, [x2, #-8]
  44f474:	mov	x0, x19
  44f478:	strb	wzr, [x1, #25]
  44f47c:	ldp	x19, x20, [sp, #16]
  44f480:	ldp	x21, x22, [sp, #32]
  44f484:	ldp	x29, x30, [sp], #48
  44f488:	ret
  44f48c:	nop
  44f490:	mov	x2, x0
  44f494:	add	x3, x0, #0x10
  44f498:	ldr	w4, [x3]
  44f49c:	tbnz	w4, #31, 44f4b8 <_obstack_memory_used@@Base+0xaab4>
  44f4a0:	adrp	x0, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44f4a4:	ldr	x0, [x0, #3984]
  44f4a8:	cmp	x2, x0
  44f4ac:	b.ne	44f4c0 <_obstack_memory_used@@Base+0xaabc>  // b.any
  44f4b0:	add	x0, x2, #0x18
  44f4b4:	ret
  44f4b8:	mov	x2, #0x0                   	// #0
  44f4bc:	b	44ecb0 <_obstack_memory_used@@Base+0xa2ac>
  44f4c0:	adrp	x0, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44f4c4:	ldr	x0, [x0, #3600]
  44f4c8:	cbz	x0, 44f4e4 <_obstack_memory_used@@Base+0xaae0>
  44f4cc:	ldaxr	w0, [x3]
  44f4d0:	add	w0, w0, #0x1
  44f4d4:	stlxr	w1, w0, [x3]
  44f4d8:	cbnz	w1, 44f4cc <_obstack_memory_used@@Base+0xaac8>
  44f4dc:	add	x0, x2, #0x18
  44f4e0:	ret
  44f4e4:	ldr	w0, [x2, #16]
  44f4e8:	add	w0, w0, #0x1
  44f4ec:	str	w0, [x2, #16]
  44f4f0:	b	44f4b0 <_obstack_memory_used@@Base+0xaaac>
  44f4f4:	nop
  44f4f8:	stp	x29, x30, [sp, #-48]!
  44f4fc:	mov	x29, sp
  44f500:	ldr	x1, [x1]
  44f504:	str	x19, [sp, #16]
  44f508:	mov	x19, x0
  44f50c:	sub	x0, x1, #0x18
  44f510:	add	x3, x0, #0x10
  44f514:	ldr	w2, [x3]
  44f518:	tbnz	w2, #31, 44f53c <_obstack_memory_used@@Base+0xab38>
  44f51c:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44f520:	ldr	x2, [x2, #3984]
  44f524:	cmp	x0, x2
  44f528:	b.ne	44f55c <_obstack_memory_used@@Base+0xab58>  // b.any
  44f52c:	str	x1, [x19]
  44f530:	ldr	x19, [sp, #16]
  44f534:	ldp	x29, x30, [sp], #48
  44f538:	ret
  44f53c:	add	x1, sp, #0x28
  44f540:	mov	x2, #0x0                   	// #0
  44f544:	bl	44ecb0 <_obstack_memory_used@@Base+0xa2ac>
  44f548:	mov	x1, x0
  44f54c:	str	x1, [x19]
  44f550:	ldr	x19, [sp, #16]
  44f554:	ldp	x29, x30, [sp], #48
  44f558:	ret
  44f55c:	adrp	x0, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44f560:	ldr	x0, [x0, #3600]
  44f564:	cbz	x0, 44f588 <_obstack_memory_used@@Base+0xab84>
  44f568:	ldaxr	w0, [x3]
  44f56c:	add	w0, w0, #0x1
  44f570:	stlxr	w2, w0, [x3]
  44f574:	cbnz	w2, 44f568 <_obstack_memory_used@@Base+0xab64>
  44f578:	str	x1, [x19]
  44f57c:	ldr	x19, [sp, #16]
  44f580:	ldp	x29, x30, [sp], #48
  44f584:	ret
  44f588:	ldur	w0, [x1, #-8]
  44f58c:	add	w0, w0, #0x1
  44f590:	stur	w0, [x1, #-8]
  44f594:	b	44f52c <_obstack_memory_used@@Base+0xab28>
  44f598:	stp	x29, x30, [sp, #-32]!
  44f59c:	mov	x29, sp
  44f5a0:	ldr	x3, [x1]
  44f5a4:	str	x19, [sp, #16]
  44f5a8:	mov	x19, x0
  44f5ac:	sub	x0, x3, #0x18
  44f5b0:	add	x4, x0, #0x10
  44f5b4:	ldr	w1, [x4]
  44f5b8:	tbnz	w1, #31, 44f5dc <_obstack_memory_used@@Base+0xabd8>
  44f5bc:	adrp	x1, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44f5c0:	ldr	x1, [x1, #3984]
  44f5c4:	cmp	x0, x1
  44f5c8:	b.ne	44f5fc <_obstack_memory_used@@Base+0xabf8>  // b.any
  44f5cc:	str	x3, [x19]
  44f5d0:	ldr	x19, [sp, #16]
  44f5d4:	ldp	x29, x30, [sp], #32
  44f5d8:	ret
  44f5dc:	mov	x1, x2
  44f5e0:	mov	x2, #0x0                   	// #0
  44f5e4:	bl	44ecb0 <_obstack_memory_used@@Base+0xa2ac>
  44f5e8:	mov	x3, x0
  44f5ec:	str	x3, [x19]
  44f5f0:	ldr	x19, [sp, #16]
  44f5f4:	ldp	x29, x30, [sp], #32
  44f5f8:	ret
  44f5fc:	adrp	x0, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44f600:	ldr	x0, [x0, #3600]
  44f604:	cbz	x0, 44f628 <_obstack_memory_used@@Base+0xac24>
  44f608:	ldaxr	w0, [x4]
  44f60c:	add	w0, w0, #0x1
  44f610:	stlxr	w1, w0, [x4]
  44f614:	cbnz	w1, 44f608 <_obstack_memory_used@@Base+0xac04>
  44f618:	str	x3, [x19]
  44f61c:	ldr	x19, [sp, #16]
  44f620:	ldp	x29, x30, [sp], #32
  44f624:	ret
  44f628:	ldur	w0, [x3, #-8]
  44f62c:	add	w0, w0, #0x1
  44f630:	stur	w0, [x3, #-8]
  44f634:	b	44f5cc <_obstack_memory_used@@Base+0xabc8>
  44f638:	stp	x29, x30, [sp, #-48]!
  44f63c:	mov	x29, sp
  44f640:	stp	x19, x20, [sp, #16]
  44f644:	mov	x19, x0
  44f648:	ldr	x20, [x1]
  44f64c:	ldr	x1, [x0]
  44f650:	cmp	x1, x20
  44f654:	b.eq	44f68c <_obstack_memory_used@@Base+0xac88>  // b.none
  44f658:	sub	x0, x20, #0x18
  44f65c:	add	x3, x0, #0x10
  44f660:	ldr	w2, [x3]
  44f664:	tbnz	w2, #31, 44f69c <_obstack_memory_used@@Base+0xac98>
  44f668:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44f66c:	ldr	x4, [x2, #3984]
  44f670:	cmp	x0, x4
  44f674:	b.ne	44f700 <_obstack_memory_used@@Base+0xacfc>  // b.any
  44f678:	ldr	x2, [x2, #3984]
  44f67c:	sub	x0, x1, #0x18
  44f680:	cmp	x0, x2
  44f684:	b.ne	44f6b8 <_obstack_memory_used@@Base+0xacb4>  // b.any
  44f688:	str	x20, [x19]
  44f68c:	mov	x0, x19
  44f690:	ldp	x19, x20, [sp, #16]
  44f694:	ldp	x29, x30, [sp], #48
  44f698:	ret
  44f69c:	add	x1, sp, #0x28
  44f6a0:	mov	x2, #0x0                   	// #0
  44f6a4:	bl	44ecb0 <_obstack_memory_used@@Base+0xa2ac>
  44f6a8:	mov	x20, x0
  44f6ac:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44f6b0:	ldr	x1, [x19]
  44f6b4:	b	44f678 <_obstack_memory_used@@Base+0xac74>
  44f6b8:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44f6bc:	ldr	x2, [x2, #3600]
  44f6c0:	cbz	x2, 44f6f0 <_obstack_memory_used@@Base+0xacec>
  44f6c4:	sub	x1, x1, #0x8
  44f6c8:	ldaxr	w2, [x1]
  44f6cc:	sub	w3, w2, #0x1
  44f6d0:	stlxr	w4, w3, [x1]
  44f6d4:	cbnz	w4, 44f6c8 <_obstack_memory_used@@Base+0xacc4>
  44f6d8:	cmp	w2, #0x0
  44f6dc:	b.gt	44f688 <_obstack_memory_used@@Base+0xac84>
  44f6e0:	add	x1, sp, #0x28
  44f6e4:	bl	44ddb0 <_obstack_memory_used@@Base+0x93ac>
  44f6e8:	str	x20, [x19]
  44f6ec:	b	44f68c <_obstack_memory_used@@Base+0xac88>
  44f6f0:	ldur	w2, [x1, #-8]
  44f6f4:	sub	w3, w2, #0x1
  44f6f8:	stur	w3, [x1, #-8]
  44f6fc:	b	44f6d8 <_obstack_memory_used@@Base+0xacd4>
  44f700:	adrp	x0, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44f704:	ldr	x0, [x0, #3600]
  44f708:	cbz	x0, 44f724 <_obstack_memory_used@@Base+0xad20>
  44f70c:	ldaxr	w0, [x3]
  44f710:	add	w0, w0, #0x1
  44f714:	stlxr	w1, w0, [x3]
  44f718:	cbnz	w1, 44f70c <_obstack_memory_used@@Base+0xad08>
  44f71c:	ldr	x1, [x19]
  44f720:	b	44f678 <_obstack_memory_used@@Base+0xac74>
  44f724:	ldur	w0, [x20, #-8]
  44f728:	add	w0, w0, #0x1
  44f72c:	stur	w0, [x20, #-8]
  44f730:	b	44f678 <_obstack_memory_used@@Base+0xac74>
  44f734:	nop
  44f738:	b	44f638 <_obstack_memory_used@@Base+0xac34>
  44f73c:	nop
  44f740:	stp	x29, x30, [sp, #-80]!
  44f744:	mov	x29, sp
  44f748:	str	x23, [sp, #48]
  44f74c:	adrp	x23, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44f750:	stp	x19, x20, [sp, #16]
  44f754:	mov	x19, x8
  44f758:	mov	x20, x1
  44f75c:	stp	x21, x22, [sp, #32]
  44f760:	mov	x22, x0
  44f764:	bl	402700 <strlen@plt>
  44f768:	ldr	x1, [x23, #3984]
  44f76c:	mov	x21, x0
  44f770:	mov	x0, x19
  44f774:	add	x1, x1, #0x18
  44f778:	str	x1, [x19]
  44f77c:	ldr	x1, [x20]
  44f780:	ldur	x1, [x1, #-24]
  44f784:	add	x1, x21, x1
  44f788:	bl	44ed68 <_obstack_memory_used@@Base+0xa364>
  44f78c:	mov	x2, x21
  44f790:	mov	x1, x22
  44f794:	mov	x0, x19
  44f798:	bl	44f060 <_obstack_memory_used@@Base+0xa65c>
  44f79c:	mov	x1, x20
  44f7a0:	mov	x0, x19
  44f7a4:	bl	44ee78 <_obstack_memory_used@@Base+0xa474>
  44f7a8:	mov	x0, x19
  44f7ac:	ldp	x19, x20, [sp, #16]
  44f7b0:	ldp	x21, x22, [sp, #32]
  44f7b4:	ldr	x23, [sp, #48]
  44f7b8:	ldp	x29, x30, [sp], #80
  44f7bc:	ret
  44f7c0:	ldr	x1, [x19]
  44f7c4:	mov	x19, x0
  44f7c8:	ldr	x23, [x23, #3984]
  44f7cc:	sub	x0, x1, #0x18
  44f7d0:	cmp	x0, x23
  44f7d4:	b.eq	44f7e0 <_obstack_memory_used@@Base+0xaddc>  // b.none
  44f7d8:	add	x1, sp, #0x48
  44f7dc:	bl	44ddb8 <_obstack_memory_used@@Base+0x93b4>
  44f7e0:	mov	x0, x19
  44f7e4:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  44f7e8:	stp	x29, x30, [sp, #-64]!
  44f7ec:	mov	x29, sp
  44f7f0:	stp	x21, x22, [sp, #32]
  44f7f4:	adrp	x21, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44f7f8:	and	w22, w0, #0xff
  44f7fc:	ldr	x2, [x21, #3984]
  44f800:	stp	x19, x20, [sp, #16]
  44f804:	mov	x20, x1
  44f808:	add	x2, x2, #0x18
  44f80c:	str	x2, [x8]
  44f810:	mov	x19, x8
  44f814:	mov	x0, x8
  44f818:	ldr	x1, [x1]
  44f81c:	ldur	x1, [x1, #-24]
  44f820:	add	x1, x1, #0x1
  44f824:	bl	44ed68 <_obstack_memory_used@@Base+0xa364>
  44f828:	mov	w2, w22
  44f82c:	mov	x0, x19
  44f830:	mov	x1, #0x1                   	// #1
  44f834:	bl	44f208 <_obstack_memory_used@@Base+0xa804>
  44f838:	mov	x1, x20
  44f83c:	mov	x0, x19
  44f840:	bl	44ee78 <_obstack_memory_used@@Base+0xa474>
  44f844:	mov	x0, x19
  44f848:	ldp	x19, x20, [sp, #16]
  44f84c:	ldp	x21, x22, [sp, #32]
  44f850:	ldp	x29, x30, [sp], #64
  44f854:	ret
  44f858:	ldr	x1, [x19]
  44f85c:	mov	x19, x0
  44f860:	ldr	x21, [x21, #3984]
  44f864:	sub	x0, x1, #0x18
  44f868:	cmp	x0, x21
  44f86c:	b.eq	44f878 <_obstack_memory_used@@Base+0xae74>  // b.none
  44f870:	add	x1, sp, #0x38
  44f874:	bl	44ddb8 <_obstack_memory_used@@Base+0x93b4>
  44f878:	mov	x0, x19
  44f87c:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  44f880:	stp	x29, x30, [sp, #-48]!
  44f884:	mov	x29, sp
  44f888:	stp	x19, x20, [sp, #16]
  44f88c:	mov	x19, x8
  44f890:	mov	x20, x1
  44f894:	mov	x1, x0
  44f898:	mov	x0, x8
  44f89c:	bl	44f4f8 <_obstack_memory_used@@Base+0xaaf4>
  44f8a0:	mov	x1, x20
  44f8a4:	mov	x0, x19
  44f8a8:	bl	44ee78 <_obstack_memory_used@@Base+0xa474>
  44f8ac:	mov	x0, x19
  44f8b0:	ldp	x19, x20, [sp, #16]
  44f8b4:	ldp	x29, x30, [sp], #48
  44f8b8:	ret
  44f8bc:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44f8c0:	ldr	x1, [x19]
  44f8c4:	mov	x19, x0
  44f8c8:	ldr	x2, [x2, #3984]
  44f8cc:	sub	x0, x1, #0x18
  44f8d0:	cmp	x0, x2
  44f8d4:	b.eq	44f8e0 <_obstack_memory_used@@Base+0xaedc>  // b.none
  44f8d8:	add	x1, sp, #0x28
  44f8dc:	bl	44ddb8 <_obstack_memory_used@@Base+0x93b4>
  44f8e0:	mov	x0, x19
  44f8e4:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  44f8e8:	cmp	x1, x0
  44f8ec:	b.eq	44f95c <_obstack_memory_used@@Base+0xaf58>  // b.none
  44f8f0:	stp	x29, x30, [sp, #-48]!
  44f8f4:	mov	x29, sp
  44f8f8:	stp	x19, x20, [sp, #16]
  44f8fc:	sub	x19, x1, x0
  44f900:	mov	x20, x0
  44f904:	mov	x1, #0x0                   	// #0
  44f908:	mov	x0, x19
  44f90c:	str	x21, [sp, #32]
  44f910:	bl	44db50 <_obstack_memory_used@@Base+0x914c>
  44f914:	cmp	x19, #0x1
  44f918:	mov	x21, x0
  44f91c:	add	x3, x0, #0x18
  44f920:	b.eq	44f970 <_obstack_memory_used@@Base+0xaf6c>  // b.none
  44f924:	mov	x0, x3
  44f928:	mov	x1, x20
  44f92c:	mov	x2, x19
  44f930:	bl	4026a0 <memcpy@plt>
  44f934:	mov	x3, x0
  44f938:	adrp	x0, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44f93c:	ldr	x0, [x0, #3984]
  44f940:	cmp	x21, x0
  44f944:	b.ne	44f97c <_obstack_memory_used@@Base+0xaf78>  // b.any
  44f948:	mov	x0, x3
  44f94c:	ldp	x19, x20, [sp, #16]
  44f950:	ldr	x21, [sp, #32]
  44f954:	ldp	x29, x30, [sp], #48
  44f958:	ret
  44f95c:	adrp	x3, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44f960:	ldr	x3, [x3, #3984]
  44f964:	add	x3, x3, #0x18
  44f968:	mov	x0, x3
  44f96c:	ret
  44f970:	ldrb	w0, [x20]
  44f974:	strb	w0, [x21, #24]
  44f978:	b	44f938 <_obstack_memory_used@@Base+0xaf34>
  44f97c:	add	x0, x21, x19
  44f980:	str	x19, [x21]
  44f984:	str	wzr, [x21, #16]
  44f988:	strb	wzr, [x0, #24]
  44f98c:	b	44f948 <_obstack_memory_used@@Base+0xaf44>
  44f990:	stp	x29, x30, [sp, #-32]!
  44f994:	mov	x29, sp
  44f998:	str	x19, [sp, #16]
  44f99c:	mov	x19, x0
  44f9a0:	mov	x0, x1
  44f9a4:	mov	x1, x2
  44f9a8:	mov	x2, x3
  44f9ac:	mov	w3, #0x0                   	// #0
  44f9b0:	bl	44f8e8 <_obstack_memory_used@@Base+0xaee4>
  44f9b4:	str	x0, [x19]
  44f9b8:	ldr	x19, [sp, #16]
  44f9bc:	ldp	x29, x30, [sp], #32
  44f9c0:	ret
  44f9c4:	nop
  44f9c8:	cmp	x0, x1
  44f9cc:	b.eq	44f9d8 <_obstack_memory_used@@Base+0xafd4>  // b.none
  44f9d0:	cbz	x0, 44f9e8 <_obstack_memory_used@@Base+0xafe4>
  44f9d4:	b	44dd00 <_obstack_memory_used@@Base+0x92fc>
  44f9d8:	adrp	x0, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44f9dc:	ldr	x0, [x0, #3984]
  44f9e0:	add	x0, x0, #0x18
  44f9e4:	ret
  44f9e8:	stp	x29, x30, [sp, #-16]!
  44f9ec:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x285fc>
  44f9f0:	add	x0, x0, #0x380
  44f9f4:	mov	x29, sp
  44f9f8:	bl	402edc <ferror@plt+0x10c>
  44f9fc:	nop
  44fa00:	stp	x29, x30, [sp, #-32]!
  44fa04:	mov	x29, sp
  44fa08:	str	x19, [sp, #16]
  44fa0c:	mov	x19, x0
  44fa10:	ldr	x0, [x1]
  44fa14:	ldur	x1, [x0, #-24]
  44fa18:	cmp	x2, x1
  44fa1c:	b.hi	44fa48 <_obstack_memory_used@@Base+0xb044>  // b.pmore
  44fa20:	mov	x4, x2
  44fa24:	add	x1, x0, x1
  44fa28:	mov	x2, x3
  44fa2c:	add	x0, x0, x4
  44fa30:	mov	w3, #0x0                   	// #0
  44fa34:	bl	44f9c8 <_obstack_memory_used@@Base+0xafc4>
  44fa38:	str	x0, [x19]
  44fa3c:	ldr	x19, [sp, #16]
  44fa40:	ldp	x29, x30, [sp], #32
  44fa44:	ret
  44fa48:	mov	x3, x1
  44fa4c:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44fa50:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x285fc>
  44fa54:	add	x0, x0, #0xe90
  44fa58:	add	x1, x1, #0x28
  44fa5c:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  44fa60:	stp	x29, x30, [sp, #-48]!
  44fa64:	mov	x29, sp
  44fa68:	ldr	x1, [x1]
  44fa6c:	ldur	x4, [x1, #-24]
  44fa70:	str	x19, [sp, #16]
  44fa74:	cmp	x4, x2
  44fa78:	b.cc	44fabc <_obstack_memory_used@@Base+0xb0b8>  // b.lo, b.ul, b.last
  44fa7c:	sub	x4, x4, x2
  44fa80:	mov	x6, x3
  44fa84:	cmp	x4, x3
  44fa88:	mov	x5, x2
  44fa8c:	csel	x4, x4, x6, ls  // ls = plast
  44fa90:	mov	x19, x0
  44fa94:	add	x4, x4, x5
  44fa98:	add	x0, x1, x2
  44fa9c:	mov	w3, #0x0                   	// #0
  44faa0:	add	x2, sp, #0x28
  44faa4:	add	x1, x1, x4
  44faa8:	bl	44f9c8 <_obstack_memory_used@@Base+0xafc4>
  44faac:	str	x0, [x19]
  44fab0:	ldr	x19, [sp, #16]
  44fab4:	ldp	x29, x30, [sp], #48
  44fab8:	ret
  44fabc:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x285fc>
  44fac0:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44fac4:	mov	x3, x4
  44fac8:	add	x1, x1, #0x28
  44facc:	add	x0, x0, #0xe90
  44fad0:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  44fad4:	nop
  44fad8:	stp	x29, x30, [sp, #-32]!
  44fadc:	mov	x4, x1
  44fae0:	mov	x1, x0
  44fae4:	mov	x29, sp
  44fae8:	ldr	x0, [x0]
  44faec:	ldur	x0, [x0, #-24]
  44faf0:	str	x19, [sp, #16]
  44faf4:	cmp	x4, x0
  44faf8:	b.hi	44fb20 <_obstack_memory_used@@Base+0xb11c>  // b.pmore
  44fafc:	mov	x19, x8
  44fb00:	mov	x3, x2
  44fb04:	mov	x0, x8
  44fb08:	mov	x2, x4
  44fb0c:	bl	44fa60 <_obstack_memory_used@@Base+0xb05c>
  44fb10:	mov	x0, x19
  44fb14:	ldr	x19, [sp, #16]
  44fb18:	ldp	x29, x30, [sp], #32
  44fb1c:	ret
  44fb20:	mov	x3, x0
  44fb24:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x285fc>
  44fb28:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44fb2c:	mov	x2, x4
  44fb30:	add	x1, x1, #0x58
  44fb34:	add	x0, x0, #0xe90
  44fb38:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  44fb3c:	nop
  44fb40:	stp	x29, x30, [sp, #-32]!
  44fb44:	mov	x29, sp
  44fb48:	ldr	x1, [x1]
  44fb4c:	ldur	x5, [x1, #-24]
  44fb50:	str	x19, [sp, #16]
  44fb54:	cmp	x2, x5
  44fb58:	b.hi	44fb98 <_obstack_memory_used@@Base+0xb194>  // b.pmore
  44fb5c:	sub	x5, x5, x2
  44fb60:	mov	x6, x2
  44fb64:	cmp	x5, x3
  44fb68:	mov	x19, x0
  44fb6c:	csel	x5, x5, x3, ls  // ls = plast
  44fb70:	add	x0, x1, x6
  44fb74:	add	x5, x5, x6
  44fb78:	mov	x2, x4
  44fb7c:	add	x1, x1, x5
  44fb80:	mov	w3, #0x0                   	// #0
  44fb84:	bl	44f9c8 <_obstack_memory_used@@Base+0xafc4>
  44fb88:	str	x0, [x19]
  44fb8c:	ldr	x19, [sp, #16]
  44fb90:	ldp	x29, x30, [sp], #32
  44fb94:	ret
  44fb98:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x285fc>
  44fb9c:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44fba0:	mov	x3, x5
  44fba4:	add	x1, x1, #0x28
  44fba8:	add	x0, x0, #0xe90
  44fbac:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  44fbb0:	stp	x29, x30, [sp, #-32]!
  44fbb4:	mov	x29, sp
  44fbb8:	str	x19, [sp, #16]
  44fbbc:	mov	x19, x0
  44fbc0:	mov	x0, x1
  44fbc4:	mov	x1, x2
  44fbc8:	mov	x2, x3
  44fbcc:	mov	w3, #0x0                   	// #0
  44fbd0:	bl	44f9c8 <_obstack_memory_used@@Base+0xafc4>
  44fbd4:	str	x0, [x19]
  44fbd8:	ldr	x19, [sp, #16]
  44fbdc:	ldp	x29, x30, [sp], #32
  44fbe0:	ret
  44fbe4:	nop
  44fbe8:	cmp	x0, x1
  44fbec:	b.eq	44fbf8 <_obstack_memory_used@@Base+0xb1f4>  // b.none
  44fbf0:	cbz	x0, 44fc08 <_obstack_memory_used@@Base+0xb204>
  44fbf4:	b	44dd00 <_obstack_memory_used@@Base+0x92fc>
  44fbf8:	adrp	x0, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44fbfc:	ldr	x0, [x0, #3984]
  44fc00:	add	x0, x0, #0x18
  44fc04:	ret
  44fc08:	stp	x29, x30, [sp, #-16]!
  44fc0c:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x285fc>
  44fc10:	add	x0, x0, #0x380
  44fc14:	mov	x29, sp
  44fc18:	bl	402edc <ferror@plt+0x10c>
  44fc1c:	nop
  44fc20:	stp	x29, x30, [sp, #-32]!
  44fc24:	mov	x29, sp
  44fc28:	str	x19, [sp, #16]
  44fc2c:	mov	x19, x0
  44fc30:	mov	x0, x1
  44fc34:	add	x1, x1, x2
  44fc38:	mov	x2, x3
  44fc3c:	mov	w3, #0x0                   	// #0
  44fc40:	bl	44fbe8 <_obstack_memory_used@@Base+0xb1e4>
  44fc44:	str	x0, [x19]
  44fc48:	ldr	x19, [sp, #16]
  44fc4c:	ldp	x29, x30, [sp], #32
  44fc50:	ret
  44fc54:	nop
  44fc58:	stp	x29, x30, [sp, #-80]!
  44fc5c:	mov	x29, sp
  44fc60:	ldr	x6, [x0]
  44fc64:	stp	x19, x20, [sp, #16]
  44fc68:	stp	x21, x22, [sp, #32]
  44fc6c:	mov	x22, x1
  44fc70:	ldur	x5, [x6, #-24]
  44fc74:	cmp	x1, x5
  44fc78:	b.hi	44fe18 <_obstack_memory_used@@Base+0xb414>  // b.pmore
  44fc7c:	sub	x20, x5, x1
  44fc80:	mov	x19, x0
  44fc84:	cmp	x20, x2
  44fc88:	mov	x0, #0xfffffffffffffff9    	// #-7
  44fc8c:	csel	x20, x20, x2, ls  // ls = plast
  44fc90:	movk	x0, #0x3fff, lsl #48
  44fc94:	sub	x0, x0, x5
  44fc98:	add	x0, x0, x20
  44fc9c:	cmp	x4, x0
  44fca0:	b.hi	44fe0c <_obstack_memory_used@@Base+0xb408>  // b.pmore
  44fca4:	cmp	x6, x3
  44fca8:	b.ls	44fcd4 <_obstack_memory_used@@Base+0xb2d0>  // b.plast
  44fcac:	mov	x0, x19
  44fcb0:	mov	x2, x20
  44fcb4:	mov	x1, x22
  44fcb8:	bl	44e740 <_obstack_memory_used@@Base+0x9d3c>
  44fcbc:	mov	x19, x0
  44fcc0:	mov	x0, x19
  44fcc4:	ldp	x19, x20, [sp, #16]
  44fcc8:	ldp	x21, x22, [sp, #32]
  44fccc:	ldp	x29, x30, [sp], #80
  44fcd0:	ret
  44fcd4:	add	x5, x6, x5
  44fcd8:	cmp	x3, x5
  44fcdc:	b.hi	44fcac <_obstack_memory_used@@Base+0xb2a8>  // b.pmore
  44fce0:	sub	x6, x6, #0x8
  44fce4:	ldar	w0, [x6]
  44fce8:	cmp	w0, #0x0
  44fcec:	b.gt	44fcac <_obstack_memory_used@@Base+0xb2a8>
  44fcf0:	ldr	x21, [x19]
  44fcf4:	add	x0, x3, x4
  44fcf8:	add	x1, x21, x1
  44fcfc:	cmp	x0, x1
  44fd00:	b.ls	44fde8 <_obstack_memory_used@@Base+0xb3e4>  // b.plast
  44fd04:	add	x0, x22, x20
  44fd08:	add	x0, x21, x0
  44fd0c:	cmp	x3, x0
  44fd10:	b.cc	44fd60 <_obstack_memory_used@@Base+0xb35c>  // b.lo, b.ul, b.last
  44fd14:	sub	x3, x3, x21
  44fd18:	add	x3, x3, x4
  44fd1c:	sub	x21, x3, x20
  44fd20:	mov	x2, x20
  44fd24:	mov	x3, x4
  44fd28:	mov	x1, x22
  44fd2c:	mov	x0, x19
  44fd30:	str	x4, [sp, #56]
  44fd34:	bl	44df80 <_obstack_memory_used@@Base+0x957c>
  44fd38:	ldr	x2, [x19]
  44fd3c:	ldr	x4, [sp, #56]
  44fd40:	add	x0, x2, x22
  44fd44:	add	x1, x2, x21
  44fd48:	cmp	x4, #0x1
  44fd4c:	b.eq	44fdf0 <_obstack_memory_used@@Base+0xb3ec>  // b.none
  44fd50:	cbz	x4, 44fcc0 <_obstack_memory_used@@Base+0xb2bc>
  44fd54:	mov	x2, x4
  44fd58:	bl	4026a0 <memcpy@plt>
  44fd5c:	b	44fcc0 <_obstack_memory_used@@Base+0xb2bc>
  44fd60:	add	x21, sp, #0x40
  44fd64:	mov	x1, x3
  44fd68:	mov	x2, x4
  44fd6c:	mov	x3, x21
  44fd70:	add	x0, sp, #0x48
  44fd74:	str	x4, [sp, #56]
  44fd78:	bl	44fc20 <_obstack_memory_used@@Base+0xb21c>
  44fd7c:	ldr	x4, [sp, #56]
  44fd80:	mov	x2, x20
  44fd84:	ldr	x3, [sp, #72]
  44fd88:	mov	x1, x22
  44fd8c:	mov	x0, x19
  44fd90:	bl	44e740 <_obstack_memory_used@@Base+0x9d3c>
  44fd94:	mov	x19, x0
  44fd98:	adrp	x0, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44fd9c:	ldr	x1, [sp, #72]
  44fda0:	ldr	x0, [x0, #3984]
  44fda4:	sub	x2, x1, #0x18
  44fda8:	cmp	x2, x0
  44fdac:	b.eq	44fcc0 <_obstack_memory_used@@Base+0xb2bc>  // b.none
  44fdb0:	adrp	x0, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44fdb4:	ldr	x0, [x0, #3600]
  44fdb8:	cbz	x0, 44fdfc <_obstack_memory_used@@Base+0xb3f8>
  44fdbc:	sub	x1, x1, #0x8
  44fdc0:	ldaxr	w0, [x1]
  44fdc4:	sub	w3, w0, #0x1
  44fdc8:	stlxr	w4, w3, [x1]
  44fdcc:	cbnz	w4, 44fdc0 <_obstack_memory_used@@Base+0xb3bc>
  44fdd0:	cmp	w0, #0x0
  44fdd4:	b.gt	44fcc0 <_obstack_memory_used@@Base+0xb2bc>
  44fdd8:	mov	x1, x21
  44fddc:	mov	x0, x2
  44fde0:	bl	44ddb0 <_obstack_memory_used@@Base+0x93ac>
  44fde4:	b	44fcc0 <_obstack_memory_used@@Base+0xb2bc>
  44fde8:	sub	x21, x3, x21
  44fdec:	b	44fd20 <_obstack_memory_used@@Base+0xb31c>
  44fdf0:	ldrb	w0, [x2, x21]
  44fdf4:	strb	w0, [x2, x22]
  44fdf8:	b	44fcc0 <_obstack_memory_used@@Base+0xb2bc>
  44fdfc:	ldur	w0, [x1, #-8]
  44fe00:	sub	w3, w0, #0x1
  44fe04:	stur	w3, [x1, #-8]
  44fe08:	b	44fdd0 <_obstack_memory_used@@Base+0xb3cc>
  44fe0c:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44fe10:	add	x0, x0, #0xf60
  44fe14:	bl	402fd8 <ferror@plt+0x208>
  44fe18:	mov	x2, x1
  44fe1c:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44fe20:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44fe24:	mov	x3, x5
  44fe28:	add	x1, x1, #0xf60
  44fe2c:	add	x0, x0, #0xe90
  44fe30:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  44fe34:	adrp	x2, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  44fe38:	mov	x19, x0
  44fe3c:	ldr	x1, [sp, #72]
  44fe40:	ldr	x2, [x2, #3984]
  44fe44:	sub	x0, x1, #0x18
  44fe48:	cmp	x0, x2
  44fe4c:	b.eq	44fe58 <_obstack_memory_used@@Base+0xb454>  // b.none
  44fe50:	mov	x1, x21
  44fe54:	bl	44ddb8 <_obstack_memory_used@@Base+0x93b4>
  44fe58:	mov	x0, x19
  44fe5c:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  44fe60:	ldr	x3, [x3]
  44fe64:	ldur	x4, [x3, #-24]
  44fe68:	b	44fc58 <_obstack_memory_used@@Base+0xb254>
  44fe6c:	nop
  44fe70:	ldr	x3, [x3]
  44fe74:	ldur	x6, [x3, #-24]
  44fe78:	cmp	x4, x6
  44fe7c:	b.hi	44fe94 <_obstack_memory_used@@Base+0xb490>  // b.pmore
  44fe80:	sub	x6, x6, x4
  44fe84:	add	x3, x3, x4
  44fe88:	cmp	x6, x5
  44fe8c:	csel	x4, x6, x5, ls  // ls = plast
  44fe90:	b	44fc58 <_obstack_memory_used@@Base+0xb254>
  44fe94:	stp	x29, x30, [sp, #-16]!
  44fe98:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44fe9c:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x275fc>
  44fea0:	mov	x29, sp
  44fea4:	mov	x3, x6
  44fea8:	mov	x2, x4
  44feac:	add	x1, x1, #0xf60
  44feb0:	add	x0, x0, #0xe90
  44feb4:	bl	4466a8 <_obstack_memory_used@@Base+0x1ca4>
  44feb8:	stp	x29, x30, [sp, #-48]!
  44febc:	mov	x29, sp
  44fec0:	stp	x19, x20, [sp, #16]
  44fec4:	mov	x19, x3
  44fec8:	mov	x20, x0
  44fecc:	mov	x0, x3
  44fed0:	stp	x21, x22, [sp, #32]
  44fed4:	mov	x21, x1
  44fed8:	mov	x22, x2
  44fedc:	bl	402700 <strlen@plt>
  44fee0:	mov	x3, x19
  44fee4:	mov	x4, x0
  44fee8:	mov	x2, x22
  44feec:	mov	x1, x21
  44fef0:	mov	x0, x20
  44fef4:	ldp	x19, x20, [sp, #16]
  44fef8:	ldp	x21, x22, [sp, #32]
  44fefc:	ldp	x29, x30, [sp], #48
  44ff00:	b	44fc58 <_obstack_memory_used@@Base+0xb254>
  44ff04:	nop
  44ff08:	ldr	x5, [x0]
  44ff0c:	sub	x2, x2, x1
  44ff10:	sub	x1, x1, x5
  44ff14:	b	44fc58 <_obstack_memory_used@@Base+0xb254>
  44ff18:	ldr	x3, [x3]
  44ff1c:	sub	x2, x2, x1
  44ff20:	ldr	x5, [x0]
  44ff24:	ldur	x4, [x3, #-24]
  44ff28:	sub	x1, x1, x5
  44ff2c:	b	44fc58 <_obstack_memory_used@@Base+0xb254>
  44ff30:	stp	x29, x30, [sp, #-48]!
  44ff34:	mov	x29, sp
  44ff38:	stp	x19, x20, [sp, #16]
  44ff3c:	mov	x20, x0
  44ff40:	mov	x19, x1
  44ff44:	mov	x0, x3
  44ff48:	stp	x21, x22, [sp, #32]
  44ff4c:	mov	x21, x3
  44ff50:	mov	x22, x2
  44ff54:	bl	402700 <strlen@plt>
  44ff58:	ldr	x1, [x20]
  44ff5c:	sub	x2, x22, x19
  44ff60:	mov	x3, x21
  44ff64:	mov	x4, x0
  44ff68:	sub	x1, x19, x1
  44ff6c:	mov	x0, x20
  44ff70:	ldp	x19, x20, [sp, #16]
  44ff74:	ldp	x21, x22, [sp, #32]
  44ff78:	ldp	x29, x30, [sp], #48
  44ff7c:	b	44fc58 <_obstack_memory_used@@Base+0xb254>
  44ff80:	ldr	x5, [x0]
  44ff84:	sub	x2, x2, x1
  44ff88:	sub	x4, x4, x3
  44ff8c:	sub	x1, x1, x5
  44ff90:	b	44fc58 <_obstack_memory_used@@Base+0xb254>
  44ff94:	nop
  44ff98:	ldr	x5, [x0]
  44ff9c:	sub	x2, x2, x1
  44ffa0:	sub	x4, x4, x3
  44ffa4:	sub	x1, x1, x5
  44ffa8:	b	44fc58 <_obstack_memory_used@@Base+0xb254>
  44ffac:	nop
  44ffb0:	ldr	x5, [x0]
  44ffb4:	sub	x2, x2, x1
  44ffb8:	sub	x1, x1, x5
  44ffbc:	b	44fc58 <_obstack_memory_used@@Base+0xb254>
  44ffc0:	ldr	x5, [x0]
  44ffc4:	sub	x2, x2, x1
  44ffc8:	sub	x4, x4, x3
  44ffcc:	sub	x1, x1, x5
  44ffd0:	b	44fc58 <_obstack_memory_used@@Base+0xb254>
  44ffd4:	nop
  44ffd8:	ldr	x5, [x0]
  44ffdc:	sub	x2, x2, x1
  44ffe0:	sub	x4, x4, x3
  44ffe4:	sub	x1, x1, x5
  44ffe8:	b	44fc58 <_obstack_memory_used@@Base+0xb254>
  44ffec:	nop
  44fff0:	stp	x29, x30, [sp, #-48]!
  44fff4:	mov	x29, sp
  44fff8:	stp	x19, x20, [sp, #16]
  44fffc:	mov	x19, x1
  450000:	mov	x20, x0
  450004:	str	x21, [sp, #32]
  450008:	mov	x1, #0xffffffffffffffff    	// #-1
  45000c:	mov	x21, x2
  450010:	cbz	x19, 450020 <_obstack_memory_used@@Base+0xb61c>
  450014:	mov	x0, x19
  450018:	bl	402700 <strlen@plt>
  45001c:	add	x1, x19, x0
  450020:	mov	x2, x21
  450024:	mov	x0, x19
  450028:	mov	w3, #0x0                   	// #0
  45002c:	bl	44fbe8 <_obstack_memory_used@@Base+0xb1e4>
  450030:	ldr	x21, [sp, #32]
  450034:	str	x0, [x20]
  450038:	ldp	x19, x20, [sp, #16]
  45003c:	ldp	x29, x30, [sp], #48
  450040:	ret
  450044:	nop
  450048:	stp	x29, x30, [sp, #-32]!
  45004c:	mov	x29, sp
  450050:	str	x19, [sp, #16]
  450054:	mov	x19, x0
  450058:	mov	x0, x1
  45005c:	add	x1, x1, x2
  450060:	mov	x2, x3
  450064:	mov	w3, #0x0                   	// #0
  450068:	bl	44fbe8 <_obstack_memory_used@@Base+0xb1e4>
  45006c:	str	x0, [x19]
  450070:	ldr	x19, [sp, #16]
  450074:	ldp	x29, x30, [sp], #32
  450078:	ret
  45007c:	nop
  450080:	stp	x29, x30, [sp, #-32]!
  450084:	mov	x29, sp
  450088:	str	x19, [sp, #16]
  45008c:	mov	x19, x0
  450090:	mov	x0, x1
  450094:	mov	x1, x2
  450098:	mov	x2, x3
  45009c:	mov	w3, #0x0                   	// #0
  4500a0:	bl	44fbe8 <_obstack_memory_used@@Base+0xb1e4>
  4500a4:	str	x0, [x19]
  4500a8:	ldr	x19, [sp, #16]
  4500ac:	ldp	x29, x30, [sp], #32
  4500b0:	ret
  4500b4:	nop
  4500b8:	ldr	x2, [x0]
  4500bc:	ldr	x0, [x1]
  4500c0:	cmp	x2, x0
  4500c4:	cset	w0, eq  // eq = none
  4500c8:	ret
  4500cc:	nop
  4500d0:	ldr	x2, [x0]
  4500d4:	ldr	x0, [x1]
  4500d8:	cmp	x2, x0
  4500dc:	cset	w0, eq  // eq = none
  4500e0:	ret
  4500e4:	nop
  4500e8:	stp	x29, x30, [sp, #-48]!
  4500ec:	mov	x29, sp
  4500f0:	stp	x19, x20, [sp, #16]
  4500f4:	mov	x19, x1
  4500f8:	ldr	x20, [x1]
  4500fc:	str	x21, [sp, #32]
  450100:	mov	x21, x0
  450104:	mov	x0, x1
  450108:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x285fc>
  45010c:	add	x1, x1, #0x3c0
  450110:	bl	44d910 <_obstack_memory_used@@Base+0x8f0c>
  450114:	cbz	w0, 450154 <_obstack_memory_used@@Base+0xb750>
  450118:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x285fc>
  45011c:	mov	x0, x19
  450120:	add	x1, x1, #0x3b0
  450124:	bl	44d910 <_obstack_memory_used@@Base+0x8f0c>
  450128:	cbnz	w0, 450160 <_obstack_memory_used@@Base+0xb75c>
  45012c:	mov	x0, x20
  450130:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x285fc>
  450134:	add	x1, x1, #0x410
  450138:	bl	402870 <fopen@plt>
  45013c:	str	x0, [x21]
  450140:	cbz	x0, 450174 <_obstack_memory_used@@Base+0xb770>
  450144:	ldp	x19, x20, [sp, #16]
  450148:	ldr	x21, [sp, #32]
  45014c:	ldp	x29, x30, [sp], #48
  450150:	ret
  450154:	adrp	x20, 46d000 <_obstack_memory_used@@Base+0x285fc>
  450158:	add	x20, x20, #0x3b0
  45015c:	b	45012c <_obstack_memory_used@@Base+0xb728>
  450160:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x285fc>
  450164:	mov	x0, x19
  450168:	add	x1, x1, #0x3c8
  45016c:	bl	44d910 <_obstack_memory_used@@Base+0x8f0c>
  450170:	cbz	w0, 45012c <_obstack_memory_used@@Base+0xb728>
  450174:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x285fc>
  450178:	add	x0, x0, #0x3d8
  45017c:	bl	403080 <ferror@plt+0x2b0>
  450180:	stp	x29, x30, [sp, #-48]!
  450184:	mov	x29, sp
  450188:	stp	x19, x20, [sp, #16]
  45018c:	mov	x20, x1
  450190:	mov	x19, x0
  450194:	mov	x0, x1
  450198:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x285fc>
  45019c:	add	x1, x1, #0x418
  4501a0:	bl	44d910 <_obstack_memory_used@@Base+0x8f0c>
  4501a4:	mov	x2, #0x1571                	// #5489
  4501a8:	cbnz	w0, 4501ec <_obstack_memory_used@@Base+0xb7e8>
  4501ac:	mov	x0, #0x8965                	// #35173
  4501b0:	mov	x1, #0x1                   	// #1
  4501b4:	movk	x0, #0x6c07, lsl #16
  4501b8:	str	x2, [x19]
  4501bc:	b	4501c4 <_obstack_memory_used@@Base+0xb7c0>
  4501c0:	add	x1, x1, #0x1
  4501c4:	eor	x2, x2, x2, lsr #30
  4501c8:	cmp	x1, #0x26f
  4501cc:	madd	w2, w2, w0, w1
  4501d0:	str	x2, [x19, x1, lsl #3]
  4501d4:	b.ne	4501c0 <_obstack_memory_used@@Base+0xb7bc>  // b.any
  4501d8:	mov	x0, #0x270                 	// #624
  4501dc:	str	x0, [x19, #4992]
  4501e0:	ldp	x19, x20, [sp, #16]
  4501e4:	ldp	x29, x30, [sp], #48
  4501e8:	ret
  4501ec:	ldr	x20, [x20]
  4501f0:	mov	w2, #0x0                   	// #0
  4501f4:	add	x1, sp, #0x28
  4501f8:	mov	x0, x20
  4501fc:	bl	4026f0 <strtoul@plt>
  450200:	mov	x2, x0
  450204:	ldrb	w0, [x20]
  450208:	cbz	w0, 45021c <_obstack_memory_used@@Base+0xb818>
  45020c:	ldr	x0, [sp, #40]
  450210:	and	x2, x2, #0xffffffff
  450214:	ldrb	w0, [x0]
  450218:	cbz	w0, 4501ac <_obstack_memory_used@@Base+0xb7a8>
  45021c:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x285fc>
  450220:	add	x0, x0, #0x3d8
  450224:	bl	403080 <ferror@plt+0x2b0>
  450228:	add	x1, x0, #0x10
  45022c:	stp	x1, xzr, [x0]
  450230:	strb	wzr, [x0, #16]
  450234:	ret
  450238:	add	x4, x0, #0x10
  45023c:	str	x4, [x0]
  450240:	ldr	x2, [x1, #8]
  450244:	mov	w3, #0x0                   	// #0
  450248:	ldr	x1, [x1]
  45024c:	add	x2, x1, x2
  450250:	b	449708 <_obstack_memory_used@@Base+0x4d04>
  450254:	nop
  450258:	add	x5, x0, #0x10
  45025c:	str	x5, [x0]
  450260:	add	x2, x1, x2
  450264:	mov	w3, #0x0                   	// #0
  450268:	b	449890 <_obstack_memory_used@@Base+0x4e8c>
  45026c:	nop
  450270:	stp	x29, x30, [sp, #-16]!
  450274:	add	x4, x0, #0x10
  450278:	mov	w3, #0x0                   	// #0
  45027c:	mov	x29, sp
  450280:	str	x4, [x0]
  450284:	ldr	x2, [x1, #8]
  450288:	ldr	x1, [x1]
  45028c:	add	x2, x1, x2
  450290:	bl	449708 <_obstack_memory_used@@Base+0x4d04>
  450294:	ldp	x29, x30, [sp], #16
  450298:	ret
  45029c:	nop
  4502a0:	stp	x29, x30, [sp, #-32]!
  4502a4:	mov	x29, sp
  4502a8:	str	x19, [sp, #16]
  4502ac:	mov	x19, x0
  4502b0:	bl	446dd8 <_obstack_memory_used@@Base+0x23d4>
  4502b4:	mov	x0, x19
  4502b8:	ldr	x19, [sp, #16]
  4502bc:	ldp	x29, x30, [sp], #32
  4502c0:	ret
  4502c4:	nop
  4502c8:	mov	x1, x0
  4502cc:	ldr	x0, [x1], #16
  4502d0:	cmp	x0, x1
  4502d4:	b.eq	4502dc <_obstack_memory_used@@Base+0xb8d8>  // b.none
  4502d8:	b	445770 <_obstack_memory_used@@Base+0xd6c>
  4502dc:	ret
  4502e0:	mov	x2, x1
  4502e4:	add	x3, x0, #0x10
  4502e8:	str	x3, [x0]
  4502ec:	ldr	x3, [x2], #16
  4502f0:	cmp	x3, x2
  4502f4:	b.eq	450318 <_obstack_memory_used@@Base+0xb914>  // b.none
  4502f8:	str	x3, [x0]
  4502fc:	ldr	x3, [x1, #8]
  450300:	str	x3, [x0, #8]
  450304:	ldr	x4, [x1, #16]
  450308:	str	x4, [x0, #16]
  45030c:	stp	x2, xzr, [x1]
  450310:	strb	wzr, [x1, #16]
  450314:	ret
  450318:	ldr	x3, [x1, #8]
  45031c:	str	x3, [x0, #8]
  450320:	ldp	x4, x5, [x1, #16]
  450324:	stp	x4, x5, [x0, #16]
  450328:	stp	x2, xzr, [x1]
  45032c:	strb	wzr, [x1, #16]
  450330:	ret
  450334:	nop
  450338:	stp	x29, x30, [sp, #-32]!
  45033c:	mov	x29, sp
  450340:	stp	x19, x20, [sp, #16]
  450344:	mov	x19, x0
  450348:	mov	x0, x1
  45034c:	mov	x20, x1
  450350:	ldr	x3, [x19]
  450354:	ldr	x1, [x0], #16
  450358:	ldr	x2, [x20, #8]
  45035c:	cmp	x1, x0
  450360:	b.eq	4503cc <_obstack_memory_used@@Base+0xb9c8>  // b.none
  450364:	stp	x1, x2, [x19]
  450368:	add	x4, x19, #0x10
  45036c:	cmp	x3, x4
  450370:	b.eq	4503a4 <_obstack_memory_used@@Base+0xb9a0>  // b.none
  450374:	ldr	x2, [x20, #16]
  450378:	ldr	x1, [x19, #16]
  45037c:	str	x2, [x19, #16]
  450380:	cbz	x3, 4503ac <_obstack_memory_used@@Base+0xb9a8>
  450384:	str	x3, [x20]
  450388:	mov	x0, x19
  45038c:	str	xzr, [x20, #8]
  450390:	str	x1, [x20, #16]
  450394:	strb	wzr, [x3]
  450398:	ldp	x19, x20, [sp, #16]
  45039c:	ldp	x29, x30, [sp], #32
  4503a0:	ret
  4503a4:	ldr	x1, [x20, #16]
  4503a8:	str	x1, [x19, #16]
  4503ac:	mov	x3, x0
  4503b0:	str	x0, [x20]
  4503b4:	str	xzr, [x20, #8]
  4503b8:	mov	x0, x19
  4503bc:	strb	wzr, [x3]
  4503c0:	ldp	x19, x20, [sp, #16]
  4503c4:	ldp	x29, x30, [sp], #32
  4503c8:	ret
  4503cc:	cbz	x2, 4503e8 <_obstack_memory_used@@Base+0xb9e4>
  4503d0:	cmp	x2, #0x1
  4503d4:	b.eq	45040c <_obstack_memory_used@@Base+0xba08>  // b.none
  4503d8:	mov	x0, x3
  4503dc:	bl	4026a0 <memcpy@plt>
  4503e0:	ldr	x3, [x19]
  4503e4:	ldr	x2, [x20, #8]
  4503e8:	str	x2, [x19, #8]
  4503ec:	strb	wzr, [x3, x2]
  4503f0:	mov	x0, x19
  4503f4:	str	xzr, [x20, #8]
  4503f8:	ldr	x3, [x20]
  4503fc:	strb	wzr, [x3]
  450400:	ldp	x19, x20, [sp, #16]
  450404:	ldp	x29, x30, [sp], #32
  450408:	ret
  45040c:	ldrb	w0, [x20, #16]
  450410:	strb	w0, [x3]
  450414:	ldr	x3, [x19]
  450418:	ldr	x2, [x20, #8]
  45041c:	b	4503e8 <_obstack_memory_used@@Base+0xb9e4>
  450420:	stp	x29, x30, [sp, #-32]!
  450424:	mov	x29, sp
  450428:	str	x19, [sp, #16]
  45042c:	cbz	x0, 450458 <_obstack_memory_used@@Base+0xba54>
  450430:	mov	x19, x0
  450434:	bl	44a3e8 <_obstack_memory_used@@Base+0x59e4>
  450438:	mov	x1, #0xd500                	// #54528
  45043c:	movk	x1, #0xbcd4, lsl #16
  450440:	ldr	x0, [x19]
  450444:	movk	x1, #0xaabc, lsl #32
  450448:	movk	x1, #0xb8b1, lsl #48
  45044c:	add	x0, x0, x1
  450450:	cmp	x0, #0x1
  450454:	b.ls	45045c <_obstack_memory_used@@Base+0xba58>  // b.plast
  450458:	bl	44b160 <_obstack_memory_used@@Base+0x675c>
  45045c:	ldur	x0, [x19, #-56]
  450460:	bl	44b118 <_obstack_memory_used@@Base+0x6714>
  450464:	nop
  450468:	stp	x29, x30, [sp, #-64]!
  45046c:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  450470:	mov	x29, sp
  450474:	ldrb	w1, [x0, #2920]
  450478:	cbnz	w1, 450560 <_obstack_memory_used@@Base+0xbb5c>
  45047c:	mov	w1, #0x1                   	// #1
  450480:	strb	w1, [x0, #2920]
  450484:	bl	45a5a0 <_obstack_memory_used@@Base+0x15b9c>
  450488:	cbz	x0, 450534 <_obstack_memory_used@@Base+0xbb30>
  45048c:	stp	x19, x20, [sp, #16]
  450490:	mov	w4, #0xffffffff            	// #-1
  450494:	add	x3, sp, #0x3c
  450498:	ldr	x19, [x0, #8]
  45049c:	stp	x21, x22, [sp, #32]
  4504a0:	adrp	x21, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  4504a4:	mov	x2, #0x0                   	// #0
  4504a8:	mov	x1, #0x0                   	// #0
  4504ac:	ldrb	w0, [x19]
  4504b0:	str	w4, [sp, #60]
  4504b4:	cmp	w0, #0x2a
  4504b8:	cinc	x19, x19, eq  // eq = none
  4504bc:	mov	x0, x19
  4504c0:	bl	45a3d8 <_obstack_memory_used@@Base+0x159d4>
  4504c4:	mov	x20, x0
  4504c8:	ldr	x22, [x21, #3680]
  4504cc:	mov	x1, #0x1                   	// #1
  4504d0:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x285fc>
  4504d4:	mov	x2, #0x30                  	// #48
  4504d8:	add	x0, x0, #0x458
  4504dc:	ldr	x3, [x22]
  4504e0:	bl	402b80 <fwrite@plt>
  4504e4:	ldr	w0, [sp, #60]
  4504e8:	ldr	x1, [x22]
  4504ec:	cbz	w0, 450528 <_obstack_memory_used@@Base+0xbb24>
  4504f0:	mov	x0, x19
  4504f4:	bl	402710 <fputs@plt>
  4504f8:	ldr	x3, [x21, #3680]
  4504fc:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x285fc>
  450500:	mov	x2, #0x2                   	// #2
  450504:	add	x0, x0, #0x490
  450508:	mov	x1, #0x1                   	// #1
  45050c:	ldr	x3, [x3]
  450510:	bl	402b80 <fwrite@plt>
  450514:	ldr	w0, [sp, #60]
  450518:	cbnz	w0, 450524 <_obstack_memory_used@@Base+0xbb20>
  45051c:	mov	x0, x20
  450520:	bl	402b30 <free@plt>
  450524:	bl	44b2e8 <_obstack_memory_used@@Base+0x68e4>
  450528:	mov	x0, x20
  45052c:	bl	402710 <fputs@plt>
  450530:	b	4504f8 <_obstack_memory_used@@Base+0xbaf4>
  450534:	adrp	x3, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  450538:	mov	x2, #0x2d                  	// #45
  45053c:	mov	x1, #0x1                   	// #1
  450540:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x285fc>
  450544:	ldr	x3, [x3, #3680]
  450548:	add	x0, x0, #0x498
  45054c:	ldr	x3, [x3]
  450550:	bl	402b80 <fwrite@plt>
  450554:	stp	x19, x20, [sp, #16]
  450558:	stp	x21, x22, [sp, #32]
  45055c:	bl	402a50 <abort@plt>
  450560:	adrp	x3, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  450564:	mov	x2, #0x1d                  	// #29
  450568:	mov	x1, #0x1                   	// #1
  45056c:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x285fc>
  450570:	ldr	x3, [x3, #3680]
  450574:	add	x0, x0, #0x438
  450578:	stp	x19, x20, [sp, #16]
  45057c:	ldr	x3, [x3]
  450580:	stp	x21, x22, [sp, #32]
  450584:	bl	402b80 <fwrite@plt>
  450588:	bl	402a50 <abort@plt>
  45058c:	mov	x19, x1
  450590:	cmp	x1, #0x1
  450594:	b.ne	4505f0 <_obstack_memory_used@@Base+0xbbec>  // b.any
  450598:	bl	44a3e8 <_obstack_memory_used@@Base+0x59e4>
  45059c:	ldr	x1, [x0]
  4505a0:	ldr	x1, [x1, #16]
  4505a4:	blr	x1
  4505a8:	mov	x20, x0
  4505ac:	ldr	x3, [x21, #3680]
  4505b0:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x285fc>
  4505b4:	mov	x1, x19
  4505b8:	add	x0, x0, #0x4c8
  4505bc:	mov	x2, #0xb                   	// #11
  4505c0:	ldr	x3, [x3]
  4505c4:	bl	402b80 <fwrite@plt>
  4505c8:	ldr	x1, [x21, #3680]
  4505cc:	mov	x0, x20
  4505d0:	ldr	x1, [x1]
  4505d4:	bl	402710 <fputs@plt>
  4505d8:	ldr	x21, [x21, #3680]
  4505dc:	mov	w0, #0xa                   	// #10
  4505e0:	ldr	x1, [x21]
  4505e4:	bl	4027d0 <fputc@plt>
  4505e8:	bl	44a488 <_obstack_memory_used@@Base+0x5a84>
  4505ec:	bl	402a50 <abort@plt>
  4505f0:	bl	44a3e8 <_obstack_memory_used@@Base+0x59e4>
  4505f4:	bl	44a488 <_obstack_memory_used@@Base+0x5a84>
  4505f8:	bl	402a50 <abort@plt>
  4505fc:	mov	x19, x0
  450600:	bl	44a488 <_obstack_memory_used@@Base+0x5a84>
  450604:	mov	x0, x19
  450608:	bl	45cc18 <_obstack_memory_used@@Base+0x18214>
  45060c:	nop
  450610:	sub	w5, w1, #0x1
  450614:	mov	x4, x0
  450618:	cmp	w5, #0x4f
  45061c:	b.ls	450628 <_obstack_memory_used@@Base+0xbc24>  // b.plast
  450620:	mov	x0, #0x0                   	// #0
  450624:	ret
  450628:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x285fc>
  45062c:	add	x0, x0, #0x4d4
  450630:	ldrb	w0, [x0, w5, uxtw]
  450634:	adr	x5, 450640 <_obstack_memory_used@@Base+0xbc3c>
  450638:	add	x0, x5, w0, sxtb #2
  45063c:	br	x0
  450640:	cbz	x3, 450620 <_obstack_memory_used@@Base+0xbc1c>
  450644:	ldp	w0, w5, [x4, #40]
  450648:	cmp	w0, w5
  45064c:	b.ge	450620 <_obstack_memory_used@@Base+0xbc1c>  // b.tcont
  450650:	mov	w5, #0x18                  	// #24
  450654:	add	w7, w0, #0x1
  450658:	ldr	x6, [x4, #32]
  45065c:	smull	x5, w0, w5
  450660:	add	x0, x6, x5
  450664:	str	wzr, [x0, #4]
  450668:	str	w7, [x4, #40]
  45066c:	str	w1, [x6, x5]
  450670:	stp	x2, x3, [x0, #8]
  450674:	ret
  450678:	cbnz	x2, 450644 <_obstack_memory_used@@Base+0xbc40>
  45067c:	mov	x0, #0x0                   	// #0
  450680:	b	450624 <_obstack_memory_used@@Base+0xbc20>
  450684:	cmp	x2, #0x0
  450688:	ccmp	x3, #0x0, #0x4, ne  // ne = any
  45068c:	b.ne	450644 <_obstack_memory_used@@Base+0xbc40>  // b.any
  450690:	mov	x0, #0x0                   	// #0
  450694:	b	450624 <_obstack_memory_used@@Base+0xbc20>
  450698:	ldr	x3, [x0, #24]
  45069c:	mov	x2, x1
  4506a0:	mov	w4, #0x4f                  	// #79
  4506a4:	ldrb	w1, [x3]
  4506a8:	cmp	w1, #0x52
  4506ac:	ccmp	w1, w4, #0x4, ne  // ne = any
  4506b0:	b.ne	4506dc <_obstack_memory_used@@Base+0xbcd8>  // b.any
  4506b4:	ldr	w5, [x0, #72]
  4506b8:	cmp	w1, #0x52
  4506bc:	mov	w1, #0x20                  	// #32
  4506c0:	add	w4, w5, #0x3
  4506c4:	b.eq	4506e4 <_obstack_memory_used@@Base+0xbce0>  // b.none
  4506c8:	add	x3, x3, #0x1
  4506cc:	str	x3, [x0, #24]
  4506d0:	str	w4, [x0, #72]
  4506d4:	mov	x3, #0x0                   	// #0
  4506d8:	b	450610 <_obstack_memory_used@@Base+0xbc0c>
  4506dc:	mov	x0, x2
  4506e0:	ret
  4506e4:	add	w4, w5, #0x2
  4506e8:	add	x3, x3, #0x1
  4506ec:	str	x3, [x0, #24]
  4506f0:	mov	w1, #0x1f                  	// #31
  4506f4:	str	w4, [x0, #72]
  4506f8:	mov	x3, #0x0                   	// #0
  4506fc:	b	450610 <_obstack_memory_used@@Base+0xbc0c>
  450700:	cbz	x1, 4507e0 <_obstack_memory_used@@Base+0xbddc>
  450704:	stp	x29, x30, [sp, #-32]!
  450708:	mov	x29, sp
  45070c:	stp	x19, x20, [sp, #16]
  450710:	mov	x20, x0
  450714:	mov	x19, x1
  450718:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x285fc>
  45071c:	add	x0, x0, #0x524
  450720:	ldr	w1, [x19]
  450724:	sub	w1, w1, #0x1
  450728:	cmp	w1, #0x4f
  45072c:	b.ls	45073c <_obstack_memory_used@@Base+0xbd38>  // b.plast
  450730:	ldp	x19, x20, [sp, #16]
  450734:	ldp	x29, x30, [sp], #32
  450738:	ret
  45073c:	ldrb	w1, [x0, w1, uxtw]
  450740:	adr	x2, 45074c <_obstack_memory_used@@Base+0xbd48>
  450744:	add	x1, x2, w1, sxtb #2
  450748:	br	x1
  45074c:	ldr	x0, [x19, #8]
  450750:	ldr	w0, [x0]
  450754:	cmp	w0, #0x5
  450758:	b.ne	450768 <_obstack_memory_used@@Base+0xbd64>  // b.any
  45075c:	ldr	w0, [x20, #348]
  450760:	add	w0, w0, #0x1
  450764:	str	w0, [x20, #348]
  450768:	ldr	w0, [x20, #308]
  45076c:	cmp	w0, #0x800
  450770:	b.gt	450730 <_obstack_memory_used@@Base+0xbd2c>
  450774:	ldr	x1, [x19, #8]
  450778:	add	w0, w0, #0x1
  45077c:	str	w0, [x20, #308]
  450780:	mov	x0, x20
  450784:	bl	450700 <_obstack_memory_used@@Base+0xbcfc>
  450788:	ldr	x1, [x19, #16]
  45078c:	mov	x0, x20
  450790:	bl	450700 <_obstack_memory_used@@Base+0xbcfc>
  450794:	ldr	w0, [x20, #308]
  450798:	sub	w0, w0, #0x1
  45079c:	str	w0, [x20, #308]
  4507a0:	ldp	x19, x20, [sp, #16]
  4507a4:	ldp	x29, x30, [sp], #32
  4507a8:	ret
  4507ac:	ldr	x19, [x19, #8]
  4507b0:	cbnz	x19, 450720 <_obstack_memory_used@@Base+0xbd1c>
  4507b4:	b	450730 <_obstack_memory_used@@Base+0xbd2c>
  4507b8:	ldr	x19, [x19, #16]
  4507bc:	cbnz	x19, 450720 <_obstack_memory_used@@Base+0xbd1c>
  4507c0:	b	450730 <_obstack_memory_used@@Base+0xbd2c>
  4507c4:	ldr	w0, [x20, #364]
  4507c8:	add	w0, w0, #0x1
  4507cc:	str	w0, [x20, #364]
  4507d0:	ldr	w0, [x20, #308]
  4507d4:	cmp	w0, #0x800
  4507d8:	b.gt	450730 <_obstack_memory_used@@Base+0xbd2c>
  4507dc:	b	450774 <_obstack_memory_used@@Base+0xbd70>
  4507e0:	ret
  4507e4:	nop
  4507e8:	cbz	x2, 450888 <_obstack_memory_used@@Base+0xbe84>
  4507ec:	stp	x29, x30, [sp, #-48]!
  4507f0:	mov	x29, sp
  4507f4:	stp	x19, x20, [sp, #16]
  4507f8:	mov	x20, x1
  4507fc:	mov	x19, x0
  450800:	stp	x21, x22, [sp, #32]
  450804:	add	x22, x1, x2
  450808:	ldr	x1, [x0, #256]
  45080c:	b	450830 <_obstack_memory_used@@Base+0xbe2c>
  450810:	mov	x0, x1
  450814:	add	x1, x1, #0x1
  450818:	str	x1, [x19, #256]
  45081c:	add	x20, x20, #0x1
  450820:	cmp	x20, x22
  450824:	strb	w21, [x19, x0]
  450828:	strb	w21, [x19, #264]
  45082c:	b.eq	450878 <_obstack_memory_used@@Base+0xbe74>  // b.none
  450830:	ldrb	w21, [x20]
  450834:	cmp	x1, #0xff
  450838:	b.ne	450810 <_obstack_memory_used@@Base+0xbe0c>  // b.any
  45083c:	ldp	x3, x2, [x19, #272]
  450840:	strb	wzr, [x19, #255]
  450844:	mov	x0, x19
  450848:	add	x20, x20, #0x1
  45084c:	blr	x3
  450850:	ldr	x2, [x19, #320]
  450854:	mov	x0, #0x0                   	// #0
  450858:	mov	x1, #0x1                   	// #1
  45085c:	str	x1, [x19, #256]
  450860:	add	x2, x2, x1
  450864:	str	x2, [x19, #320]
  450868:	strb	w21, [x19, x0]
  45086c:	cmp	x20, x22
  450870:	strb	w21, [x19, #264]
  450874:	b.ne	450830 <_obstack_memory_used@@Base+0xbe2c>  // b.any
  450878:	ldp	x19, x20, [sp, #16]
  45087c:	ldp	x21, x22, [sp, #32]
  450880:	ldp	x29, x30, [sp], #48
  450884:	ret
  450888:	ret
  45088c:	nop
  450890:	ldr	x3, [x0]
  450894:	mov	x6, x0
  450898:	ldrb	w4, [x3]
  45089c:	cmp	w4, #0x6e
  4508a0:	b.eq	45092c <_obstack_memory_used@@Base+0xbf28>  // b.none
  4508a4:	sub	w0, w4, #0x30
  4508a8:	and	w0, w0, #0xff
  4508ac:	cmp	w0, #0x9
  4508b0:	b.hi	450954 <_obstack_memory_used@@Base+0xbf50>  // b.pmore
  4508b4:	mov	w9, #0x0                   	// #0
  4508b8:	mov	w8, #0xcccd                	// #52429
  4508bc:	add	x3, x3, #0x1
  4508c0:	mov	w0, #0x0                   	// #0
  4508c4:	mov	w7, #0x7fffffff            	// #2147483647
  4508c8:	movk	w8, #0xcccc, lsl #16
  4508cc:	b	4508e0 <_obstack_memory_used@@Base+0xbedc>
  4508d0:	umull	x1, w1, w8
  4508d4:	lsr	x1, x1, #35
  4508d8:	cmp	w1, w0
  4508dc:	b.lt	450924 <_obstack_memory_used@@Base+0xbf20>  // b.tstop
  4508e0:	str	x3, [x6]
  4508e4:	add	w0, w0, w0, lsl #2
  4508e8:	add	x3, x3, #0x1
  4508ec:	ldurb	w1, [x3, #-1]
  4508f0:	add	w5, w4, w0, lsl #1
  4508f4:	sub	w0, w5, #0x30
  4508f8:	sub	w2, w1, #0x30
  4508fc:	mov	w4, w1
  450900:	sub	w1, w7, w2
  450904:	and	w2, w2, #0xff
  450908:	cmp	w2, #0x9
  45090c:	b.ls	4508d0 <_obstack_memory_used@@Base+0xbecc>  // b.plast
  450910:	cmp	w9, #0x0
  450914:	mov	w1, #0x30                  	// #48
  450918:	sub	w5, w1, w5
  45091c:	csel	w0, w5, w0, ne  // ne = any
  450920:	ret
  450924:	mov	w0, #0xffffffff            	// #-1
  450928:	ret
  45092c:	add	x1, x3, #0x1
  450930:	str	x1, [x0]
  450934:	ldrb	w4, [x3, #1]
  450938:	sub	w0, w4, #0x30
  45093c:	and	w0, w0, #0xff
  450940:	cmp	w0, #0x9
  450944:	b.hi	450954 <_obstack_memory_used@@Base+0xbf50>  // b.pmore
  450948:	mov	x3, x1
  45094c:	mov	w9, #0x1                   	// #1
  450950:	b	4508b8 <_obstack_memory_used@@Base+0xbeb4>
  450954:	mov	w0, #0x0                   	// #0
  450958:	ret
  45095c:	nop
  450960:	mov	x1, x0
  450964:	ldr	w0, [x0, #40]
  450968:	ldr	w2, [x1, #44]
  45096c:	cmp	w0, w2
  450970:	b.ge	4509bc <_obstack_memory_used@@Base+0xbfb8>  // b.tcont
  450974:	stp	x29, x30, [sp, #-16]!
  450978:	mov	w2, #0x18                  	// #24
  45097c:	add	w5, w0, #0x1
  450980:	mov	x29, sp
  450984:	ldr	x3, [x1, #32]
  450988:	smull	x2, w0, w2
  45098c:	mov	w4, #0x42                  	// #66
  450990:	add	x0, x1, #0x18
  450994:	add	x10, x3, x2
  450998:	str	wzr, [x10, #4]
  45099c:	str	w5, [x1, #40]
  4509a0:	str	w4, [x3, x2]
  4509a4:	bl	450890 <_obstack_memory_used@@Base+0xbe8c>
  4509a8:	sxtw	x0, w0
  4509ac:	str	x0, [x10, #8]
  4509b0:	mov	x0, x10
  4509b4:	ldp	x29, x30, [sp], #16
  4509b8:	ret
  4509bc:	mov	x10, #0x0                   	// #0
  4509c0:	mov	x0, x10
  4509c4:	ret
  4509c8:	ldr	x1, [x0, #24]
  4509cc:	mov	x10, x0
  4509d0:	ldrb	w0, [x1]
  4509d4:	cmp	w0, #0x5f
  4509d8:	b.eq	450a1c <_obstack_memory_used@@Base+0xc018>  // b.none
  4509dc:	cmp	w0, #0x6e
  4509e0:	b.eq	450a34 <_obstack_memory_used@@Base+0xc030>  // b.none
  4509e4:	stp	x29, x30, [sp, #-16]!
  4509e8:	add	x0, x10, #0x18
  4509ec:	mov	x29, sp
  4509f0:	bl	450890 <_obstack_memory_used@@Base+0xbe8c>
  4509f4:	adds	w0, w0, #0x1
  4509f8:	b.mi	450a2c <_obstack_memory_used@@Base+0xc028>  // b.first
  4509fc:	ldr	x1, [x10, #24]
  450a00:	ldrb	w2, [x1]
  450a04:	cmp	w2, #0x5f
  450a08:	b.ne	450a2c <_obstack_memory_used@@Base+0xc028>  // b.any
  450a0c:	add	x1, x1, #0x1
  450a10:	str	x1, [x10, #24]
  450a14:	ldp	x29, x30, [sp], #16
  450a18:	ret
  450a1c:	add	x1, x1, #0x1
  450a20:	mov	w0, #0x0                   	// #0
  450a24:	str	x1, [x10, #24]
  450a28:	ret
  450a2c:	mov	w0, #0xffffffff            	// #-1
  450a30:	b	450a14 <_obstack_memory_used@@Base+0xc010>
  450a34:	mov	w0, #0xffffffff            	// #-1
  450a38:	ret
  450a3c:	nop
  450a40:	ldr	x1, [x0, #24]
  450a44:	ldrb	w2, [x1]
  450a48:	cmp	w2, #0x54
  450a4c:	b.ne	450ab8 <_obstack_memory_used@@Base+0xc0b4>  // b.any
  450a50:	stp	x29, x30, [sp, #-16]!
  450a54:	add	x1, x1, #0x1
  450a58:	mov	x11, x0
  450a5c:	mov	x29, sp
  450a60:	str	x1, [x0, #24]
  450a64:	bl	4509c8 <_obstack_memory_used@@Base+0xbfc4>
  450a68:	tbnz	w0, #31, 450aac <_obstack_memory_used@@Base+0xc0a8>
  450a6c:	ldp	w1, w2, [x11, #40]
  450a70:	cmp	w1, w2
  450a74:	b.ge	450aac <_obstack_memory_used@@Base+0xc0a8>  // b.tcont
  450a78:	mov	w2, #0x18                  	// #24
  450a7c:	add	w5, w1, #0x1
  450a80:	ldr	x3, [x11, #32]
  450a84:	smull	x2, w1, w2
  450a88:	sxtw	x1, w0
  450a8c:	mov	w4, #0x5                   	// #5
  450a90:	add	x0, x3, x2
  450a94:	str	wzr, [x0, #4]
  450a98:	str	w5, [x11, #40]
  450a9c:	str	w4, [x3, x2]
  450aa0:	str	x1, [x0, #8]
  450aa4:	ldp	x29, x30, [sp], #16
  450aa8:	ret
  450aac:	mov	x0, #0x0                   	// #0
  450ab0:	ldp	x29, x30, [sp], #16
  450ab4:	ret
  450ab8:	mov	x0, #0x0                   	// #0
  450abc:	ret
  450ac0:	mov	x10, x0
  450ac4:	stp	x29, x30, [sp, #-16]!
  450ac8:	add	x0, x0, #0x18
  450acc:	mov	x29, sp
  450ad0:	bl	450890 <_obstack_memory_used@@Base+0xbe8c>
  450ad4:	cmp	w0, #0x0
  450ad8:	b.le	450bd0 <_obstack_memory_used@@Base+0xc1cc>
  450adc:	mov	w1, w0
  450ae0:	sxtw	x3, w0
  450ae4:	ldr	x0, [x10, #8]
  450ae8:	ldr	x2, [x10, #24]
  450aec:	sub	x0, x0, x2
  450af0:	cmp	x0, w1, sxtw
  450af4:	b.lt	450bc8 <_obstack_memory_used@@Base+0xc1c4>  // b.tstop
  450af8:	ldr	w0, [x10, #16]
  450afc:	add	x3, x2, x3
  450b00:	str	x3, [x10, #24]
  450b04:	tbz	w0, #2, 450b14 <_obstack_memory_used@@Base+0xc110>
  450b08:	ldrb	w0, [x2, w1, sxtw]
  450b0c:	cmp	w0, #0x24
  450b10:	b.eq	450bdc <_obstack_memory_used@@Base+0xc1d8>  // b.none
  450b14:	ldp	w0, w3, [x10, #40]
  450b18:	cmp	w1, #0x9
  450b1c:	b.gt	450b58 <_obstack_memory_used@@Base+0xc154>
  450b20:	cmp	w3, w0
  450b24:	b.le	450bc8 <_obstack_memory_used@@Base+0xc1c4>
  450b28:	ldr	x4, [x10, #32]
  450b2c:	mov	w5, #0x18                  	// #24
  450b30:	add	w3, w0, #0x1
  450b34:	smaddl	x0, w0, w5, x4
  450b38:	str	wzr, [x0, #4]
  450b3c:	str	w3, [x10, #40]
  450b40:	cbz	x2, 450bc8 <_obstack_memory_used@@Base+0xc1c4>
  450b44:	stp	xzr, x2, [x0]
  450b48:	str	w1, [x0, #16]
  450b4c:	str	x0, [x10, #64]
  450b50:	ldp	x29, x30, [sp], #16
  450b54:	ret
  450b58:	mov	x4, #0x475f                	// #18271
  450b5c:	ldr	x5, [x2]
  450b60:	movk	x4, #0x4f4c, lsl #16
  450b64:	movk	x4, #0x4142, lsl #32
  450b68:	movk	x4, #0x5f4c, lsl #48
  450b6c:	cmp	x5, x4
  450b70:	b.ne	450b9c <_obstack_memory_used@@Base+0xc198>  // b.any
  450b74:	ldrb	w4, [x2, #8]
  450b78:	mov	w6, #0x5f                  	// #95
  450b7c:	mov	w5, #0x24                  	// #36
  450b80:	cmp	w4, #0x2e
  450b84:	ccmp	w4, w6, #0x4, ne  // ne = any
  450b88:	ccmp	w4, w5, #0x4, ne  // ne = any
  450b8c:	b.ne	450b9c <_obstack_memory_used@@Base+0xc198>  // b.any
  450b90:	ldrb	w4, [x2, #9]
  450b94:	cmp	w4, #0x4e
  450b98:	b.eq	450bf4 <_obstack_memory_used@@Base+0xc1f0>  // b.none
  450b9c:	cmp	w3, w0
  450ba0:	b.le	450bc8 <_obstack_memory_used@@Base+0xc1c4>
  450ba4:	ldr	x4, [x10, #32]
  450ba8:	mov	w5, #0x18                  	// #24
  450bac:	add	w3, w0, #0x1
  450bb0:	smaddl	x0, w0, w5, x4
  450bb4:	str	wzr, [x0, #4]
  450bb8:	str	w3, [x10, #40]
  450bbc:	stp	xzr, x2, [x0]
  450bc0:	str	w1, [x0, #16]
  450bc4:	b	450b4c <_obstack_memory_used@@Base+0xc148>
  450bc8:	mov	x0, #0x0                   	// #0
  450bcc:	b	450b4c <_obstack_memory_used@@Base+0xc148>
  450bd0:	mov	x0, #0x0                   	// #0
  450bd4:	ldp	x29, x30, [sp], #16
  450bd8:	ret
  450bdc:	add	x3, x3, #0x1
  450be0:	str	x3, [x10, #24]
  450be4:	cmp	w1, #0x9
  450be8:	ldp	w0, w3, [x10, #40]
  450bec:	b.le	450b20 <_obstack_memory_used@@Base+0xc11c>
  450bf0:	b	450b58 <_obstack_memory_used@@Base+0xc154>
  450bf4:	ldr	w2, [x10, #72]
  450bf8:	cmp	w3, w0
  450bfc:	add	w2, w2, #0x16
  450c00:	sub	w1, w2, w1
  450c04:	str	w1, [x10, #72]
  450c08:	b.le	450bc8 <_obstack_memory_used@@Base+0xc1c4>
  450c0c:	mov	w1, #0x18                  	// #24
  450c10:	add	w2, w0, #0x1
  450c14:	ldr	x3, [x10, #32]
  450c18:	smull	x1, w0, w1
  450c1c:	str	w2, [x10, #40]
  450c20:	mov	w4, #0x15                  	// #21
  450c24:	add	x0, x3, x1
  450c28:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0x285fc>
  450c2c:	add	x2, x2, #0x750
  450c30:	str	xzr, [x3, x1]
  450c34:	str	x2, [x0, #8]
  450c38:	str	w4, [x0, #16]
  450c3c:	b	450b4c <_obstack_memory_used@@Base+0xc148>
  450c40:	ldr	x3, [x0, #24]
  450c44:	mov	x11, x0
  450c48:	ldr	x13, [x0, #64]
  450c4c:	mov	x12, x1
  450c50:	ldrb	w0, [x3]
  450c54:	cmp	w0, #0x42
  450c58:	b.ne	450cb0 <_obstack_memory_used@@Base+0xc2ac>  // b.any
  450c5c:	stp	x29, x30, [sp, #-16]!
  450c60:	mov	x29, sp
  450c64:	nop
  450c68:	add	x3, x3, #0x1
  450c6c:	str	x3, [x11, #24]
  450c70:	mov	x0, x11
  450c74:	bl	450ac0 <_obstack_memory_used@@Base+0xc0bc>
  450c78:	mov	x3, x0
  450c7c:	mov	x2, x12
  450c80:	mov	x0, x11
  450c84:	mov	w1, #0x4c                  	// #76
  450c88:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  450c8c:	ldr	x3, [x11, #24]
  450c90:	mov	x12, x0
  450c94:	ldrb	w0, [x3]
  450c98:	cmp	w0, #0x42
  450c9c:	b.eq	450c68 <_obstack_memory_used@@Base+0xc264>  // b.none
  450ca0:	str	x13, [x11, #64]
  450ca4:	mov	x0, x12
  450ca8:	ldp	x29, x30, [sp], #16
  450cac:	ret
  450cb0:	mov	x0, x1
  450cb4:	str	x13, [x11, #64]
  450cb8:	ret
  450cbc:	nop
  450cc0:	mov	x14, x0
  450cc4:	ldr	x0, [x0, #24]
  450cc8:	ldrb	w2, [x0]
  450ccc:	cmp	w2, #0x53
  450cd0:	b.ne	450d40 <_obstack_memory_used@@Base+0xc33c>  // b.any
  450cd4:	add	x2, x0, #0x1
  450cd8:	str	x2, [x14, #24]
  450cdc:	ldrb	w2, [x0, #1]
  450ce0:	cbnz	w2, 450d48 <_obstack_memory_used@@Base+0xc344>
  450ce4:	ldr	w0, [x14, #16]
  450ce8:	and	w1, w1, #0x1
  450cec:	ands	w3, w0, #0x8
  450cf0:	ubfx	x4, x0, #3, #1
  450cf4:	csel	w1, w1, wzr, eq  // eq = none
  450cf8:	cbz	w1, 450d14 <_obstack_memory_used@@Base+0xc310>
  450cfc:	ldr	x0, [x14, #24]
  450d00:	ldrb	w0, [x0]
  450d04:	sub	w0, w0, #0x43
  450d08:	and	w0, w0, #0xff
  450d0c:	cmp	w0, #0x1
  450d10:	csinc	w4, w4, wzr, hi  // hi = pmore
  450d14:	adrp	x0, 493000 <_obstack_memory_used@@Base+0x4e5fc>
  450d18:	add	x0, x0, #0xa08
  450d1c:	add	x3, x0, #0x188
  450d20:	mov	w1, #0x74                  	// #116
  450d24:	b	450d2c <_obstack_memory_used@@Base+0xc328>
  450d28:	ldrb	w1, [x0]
  450d2c:	cmp	w1, w2
  450d30:	b.eq	450e1c <_obstack_memory_used@@Base+0xc418>  // b.none
  450d34:	add	x0, x0, #0x38
  450d38:	cmp	x0, x3
  450d3c:	b.ne	450d28 <_obstack_memory_used@@Base+0xc324>  // b.any
  450d40:	mov	x0, #0x0                   	// #0
  450d44:	ret
  450d48:	add	x2, x0, #0x2
  450d4c:	str	x2, [x14, #24]
  450d50:	ldrb	w2, [x0, #1]
  450d54:	sub	w5, w2, #0x30
  450d58:	cmp	w2, #0x5f
  450d5c:	and	w0, w5, #0xff
  450d60:	ccmp	w0, #0x9, #0x0, ne  // ne = any
  450d64:	b.hi	450d8c <_obstack_memory_used@@Base+0xc388>  // b.pmore
  450d68:	cmp	w2, #0x5f
  450d6c:	mov	w1, #0x0                   	// #0
  450d70:	b.ne	450da0 <_obstack_memory_used@@Base+0xc39c>  // b.any
  450d74:	ldr	w0, [x14, #56]
  450d78:	cmp	w0, w1
  450d7c:	b.ls	450d40 <_obstack_memory_used@@Base+0xc33c>  // b.plast
  450d80:	ldr	x0, [x14, #48]
  450d84:	ldr	x0, [x0, w1, uxtw #3]
  450d88:	ret
  450d8c:	sub	w0, w2, #0x41
  450d90:	and	w0, w0, #0xff
  450d94:	cmp	w0, #0x19
  450d98:	b.hi	450ce4 <_obstack_memory_used@@Base+0xc2e0>  // b.pmore
  450d9c:	nop
  450da0:	mov	w3, #0x0                   	// #0
  450da4:	nop
  450da8:	add	w1, w3, w3, lsl #3
  450dac:	sub	w6, w2, #0x41
  450db0:	mov	w4, w1
  450db4:	and	w5, w5, #0xff
  450db8:	add	w1, w2, w1, lsl #2
  450dbc:	and	w6, w6, #0xff
  450dc0:	sub	w1, w1, #0x37
  450dc4:	add	w2, w2, w4, lsl #2
  450dc8:	cmp	w5, #0x9
  450dcc:	b.hi	450e10 <_obstack_memory_used@@Base+0xc40c>  // b.pmore
  450dd0:	sub	w1, w2, #0x30
  450dd4:	cmp	w3, w1
  450dd8:	b.hi	450d40 <_obstack_memory_used@@Base+0xc33c>  // b.pmore
  450ddc:	ldr	x4, [x14, #24]
  450de0:	mov	w3, w1
  450de4:	add	x0, x4, #0x1
  450de8:	ldrb	w2, [x4]
  450dec:	cbz	w2, 450e00 <_obstack_memory_used@@Base+0xc3fc>
  450df0:	str	x0, [x14, #24]
  450df4:	ldrb	w2, [x4]
  450df8:	cmp	w2, #0x5f
  450dfc:	b.eq	450e08 <_obstack_memory_used@@Base+0xc404>  // b.none
  450e00:	sub	w5, w2, #0x30
  450e04:	b	450da8 <_obstack_memory_used@@Base+0xc3a4>
  450e08:	add	w1, w1, #0x1
  450e0c:	b	450d74 <_obstack_memory_used@@Base+0xc370>
  450e10:	cmp	w6, #0x19
  450e14:	b.ls	450dd4 <_obstack_memory_used@@Base+0xc3d0>  // b.plast
  450e18:	b	450d40 <_obstack_memory_used@@Base+0xc33c>
  450e1c:	ldr	x5, [x0, #40]
  450e20:	ldp	w1, w3, [x14, #40]
  450e24:	cbz	x5, 450e60 <_obstack_memory_used@@Base+0xc45c>
  450e28:	ldr	w9, [x0, #48]
  450e2c:	cmp	w3, w1
  450e30:	b.le	450f18 <_obstack_memory_used@@Base+0xc514>
  450e34:	mov	w8, #0x18                  	// #24
  450e38:	ldr	x7, [x14, #32]
  450e3c:	smull	x6, w1, w8
  450e40:	add	w1, w1, #0x1
  450e44:	add	x2, x7, x6
  450e48:	str	wzr, [x2, #4]
  450e4c:	str	w1, [x14, #40]
  450e50:	str	w8, [x7, x6]
  450e54:	str	x5, [x2, #8]
  450e58:	str	w9, [x2, #16]
  450e5c:	str	x2, [x14, #64]
  450e60:	cbz	w4, 450ebc <_obstack_memory_used@@Base+0xc4b8>
  450e64:	ldr	w2, [x0, #32]
  450e68:	ldr	x5, [x0, #24]
  450e6c:	cmp	w1, w3
  450e70:	ldr	w0, [x14, #72]
  450e74:	add	w0, w0, w2
  450e78:	str	w0, [x14, #72]
  450e7c:	b.ge	450f10 <_obstack_memory_used@@Base+0xc50c>  // b.tcont
  450e80:	mov	w4, #0x18                  	// #24
  450e84:	add	w6, w1, #0x1
  450e88:	ldr	x3, [x14, #32]
  450e8c:	smull	x1, w1, w4
  450e90:	add	x0, x3, x1
  450e94:	str	wzr, [x0, #4]
  450e98:	str	w6, [x14, #40]
  450e9c:	str	w4, [x3, x1]
  450ea0:	str	x5, [x0, #8]
  450ea4:	str	w2, [x0, #16]
  450ea8:	ldr	x1, [x14, #24]
  450eac:	ldrb	w1, [x1]
  450eb0:	cmp	w1, #0x42
  450eb4:	b.eq	450ec8 <_obstack_memory_used@@Base+0xc4c4>  // b.none
  450eb8:	ret
  450ebc:	ldr	w2, [x0, #16]
  450ec0:	ldr	x5, [x0, #8]
  450ec4:	b	450e6c <_obstack_memory_used@@Base+0xc468>
  450ec8:	stp	x29, x30, [sp, #-16]!
  450ecc:	mov	x1, x0
  450ed0:	mov	x0, x14
  450ed4:	mov	x29, sp
  450ed8:	bl	450c40 <_obstack_memory_used@@Base+0xc23c>
  450edc:	cbz	x0, 450f04 <_obstack_memory_used@@Base+0xc500>
  450ee0:	ldp	w1, w2, [x14, #56]
  450ee4:	cmp	w1, w2
  450ee8:	b.ge	450f04 <_obstack_memory_used@@Base+0xc500>  // b.tcont
  450eec:	ldr	x3, [x14, #48]
  450ef0:	add	w2, w1, #0x1
  450ef4:	str	x0, [x3, w1, sxtw #3]
  450ef8:	str	w2, [x14, #56]
  450efc:	ldp	x29, x30, [sp], #16
  450f00:	ret
  450f04:	mov	x0, #0x0                   	// #0
  450f08:	ldp	x29, x30, [sp], #16
  450f0c:	ret
  450f10:	mov	x0, #0x0                   	// #0
  450f14:	b	450ea8 <_obstack_memory_used@@Base+0xc4a4>
  450f18:	mov	x2, #0x0                   	// #0
  450f1c:	str	x2, [x14, #64]
  450f20:	b	450e60 <_obstack_memory_used@@Base+0xc45c>
  450f24:	nop
  450f28:	mov	x10, x0
  450f2c:	cbnz	w1, 450f48 <_obstack_memory_used@@Base+0xc544>
  450f30:	ldr	x0, [x0, #24]
  450f34:	ldrb	w1, [x0]
  450f38:	cbz	w1, 450f88 <_obstack_memory_used@@Base+0xc584>
  450f3c:	add	x1, x0, #0x1
  450f40:	str	x1, [x10, #24]
  450f44:	ldrb	w1, [x0]
  450f48:	stp	x29, x30, [sp, #-16]!
  450f4c:	cmp	w1, #0x68
  450f50:	mov	x29, sp
  450f54:	b.eq	450fc4 <_obstack_memory_used@@Base+0xc5c0>  // b.none
  450f58:	cmp	w1, #0x76
  450f5c:	b.ne	450f7c <_obstack_memory_used@@Base+0xc578>  // b.any
  450f60:	add	x11, x10, #0x18
  450f64:	mov	x0, x11
  450f68:	bl	450890 <_obstack_memory_used@@Base+0xbe8c>
  450f6c:	ldr	x0, [x10, #24]
  450f70:	ldrb	w1, [x0]
  450f74:	cmp	w1, #0x5f
  450f78:	b.eq	450f90 <_obstack_memory_used@@Base+0xc58c>  // b.none
  450f7c:	mov	w0, #0x0                   	// #0
  450f80:	ldp	x29, x30, [sp], #16
  450f84:	ret
  450f88:	mov	w0, #0x0                   	// #0
  450f8c:	ret
  450f90:	add	x0, x0, #0x1
  450f94:	str	x0, [x10, #24]
  450f98:	mov	x0, x11
  450f9c:	bl	450890 <_obstack_memory_used@@Base+0xbe8c>
  450fa0:	ldr	x0, [x10, #24]
  450fa4:	ldrb	w1, [x0]
  450fa8:	cmp	w1, #0x5f
  450fac:	b.ne	450f7c <_obstack_memory_used@@Base+0xc578>  // b.any
  450fb0:	add	x1, x0, #0x1
  450fb4:	str	x1, [x10, #24]
  450fb8:	mov	w0, #0x1                   	// #1
  450fbc:	ldp	x29, x30, [sp], #16
  450fc0:	ret
  450fc4:	add	x0, x10, #0x18
  450fc8:	bl	450890 <_obstack_memory_used@@Base+0xbe8c>
  450fcc:	b	450fa0 <_obstack_memory_used@@Base+0xc59c>
  450fd0:	mov	x2, x0
  450fd4:	mov	w3, #0x56                  	// #86
  450fd8:	mov	w0, #0x4b                  	// #75
  450fdc:	ldrb	w1, [x2]
  450fe0:	cmp	w1, #0x72
  450fe4:	ccmp	w1, w3, #0x4, ne  // ne = any
  450fe8:	ccmp	w1, w0, #0x4, ne  // ne = any
  450fec:	mov	w0, #0x1                   	// #1
  450ff0:	b.eq	451000 <_obstack_memory_used@@Base+0xc5fc>  // b.none
  450ff4:	cmp	w1, #0x44
  450ff8:	mov	w0, #0x0                   	// #0
  450ffc:	b.eq	451004 <_obstack_memory_used@@Base+0xc600>  // b.none
  451000:	ret
  451004:	ldrb	w0, [x2, #1]
  451008:	and	w1, w0, #0xffffffdf
  45100c:	sub	w0, w0, #0x77
  451010:	cmp	w1, #0x4f
  451014:	and	w0, w0, #0xff
  451018:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  45101c:	cset	w0, ls  // ls = plast
  451020:	ret
  451024:	nop
  451028:	ldr	x1, [x0, #24]
  45102c:	mov	x10, x0
  451030:	ldrb	w0, [x1]
  451034:	cmp	w0, #0x5f
  451038:	b.eq	451044 <_obstack_memory_used@@Base+0xc640>  // b.none
  45103c:	mov	w0, #0x1                   	// #1
  451040:	ret
  451044:	stp	x29, x30, [sp, #-16]!
  451048:	add	x0, x1, #0x1
  45104c:	mov	x29, sp
  451050:	str	x0, [x10, #24]
  451054:	ldrb	w0, [x1, #1]
  451058:	cmp	w0, #0x5f
  45105c:	b.eq	451080 <_obstack_memory_used@@Base+0xc67c>  // b.none
  451060:	add	x0, x10, #0x18
  451064:	bl	450890 <_obstack_memory_used@@Base+0xbe8c>
  451068:	mov	w1, w0
  45106c:	mov	w0, #0x0                   	// #0
  451070:	tbnz	w1, #31, 451078 <_obstack_memory_used@@Base+0xc674>
  451074:	mov	w0, #0x1                   	// #1
  451078:	ldp	x29, x30, [sp], #16
  45107c:	ret
  451080:	mov	x0, x10
  451084:	add	x1, x1, #0x2
  451088:	str	x1, [x0, #24]!
  45108c:	bl	450890 <_obstack_memory_used@@Base+0xbe8c>
  451090:	tbnz	w0, #31, 4510c0 <_obstack_memory_used@@Base+0xc6bc>
  451094:	cmp	w0, #0x9
  451098:	b.le	451074 <_obstack_memory_used@@Base+0xc670>
  45109c:	ldr	x1, [x10, #24]
  4510a0:	mov	w0, #0x0                   	// #0
  4510a4:	ldrb	w2, [x1]
  4510a8:	cmp	w2, #0x5f
  4510ac:	b.ne	451078 <_obstack_memory_used@@Base+0xc674>  // b.any
  4510b0:	add	x1, x1, #0x1
  4510b4:	mov	w0, #0x1                   	// #1
  4510b8:	str	x1, [x10, #24]
  4510bc:	b	451078 <_obstack_memory_used@@Base+0xc674>
  4510c0:	mov	w0, #0x0                   	// #0
  4510c4:	b	451078 <_obstack_memory_used@@Base+0xc674>
  4510c8:	cbnz	x0, 4510e4 <_obstack_memory_used@@Base+0xc6e0>
  4510cc:	b	4510f0 <_obstack_memory_used@@Base+0xc6ec>
  4510d0:	cmp	w1, #0x0
  4510d4:	b.le	4510f8 <_obstack_memory_used@@Base+0xc6f4>
  4510d8:	ldr	x0, [x0, #16]
  4510dc:	sub	w1, w1, #0x1
  4510e0:	cbz	x0, 4510f4 <_obstack_memory_used@@Base+0xc6f0>
  4510e4:	ldr	w2, [x0]
  4510e8:	cmp	w2, #0x2f
  4510ec:	b.eq	4510d0 <_obstack_memory_used@@Base+0xc6cc>  // b.none
  4510f0:	mov	x0, #0x0                   	// #0
  4510f4:	ret
  4510f8:	b.ne	4510f0 <_obstack_memory_used@@Base+0xc6ec>  // b.any
  4510fc:	ldr	x0, [x0, #8]
  451100:	ret
  451104:	nop
  451108:	mov	x2, x0
  45110c:	ldr	x0, [x0, #288]
  451110:	cbz	x0, 451128 <_obstack_memory_used@@Base+0xc724>
  451114:	ldr	x1, [x1]
  451118:	ldr	x0, [x0, #8]
  45111c:	ldr	x0, [x0, #16]
  451120:	tbnz	w1, #31, 451130 <_obstack_memory_used@@Base+0xc72c>
  451124:	b	4510c8 <_obstack_memory_used@@Base+0xc6c4>
  451128:	mov	w1, #0x1                   	// #1
  45112c:	str	w1, [x2, #304]
  451130:	ret
  451134:	nop
  451138:	cbz	x1, 45120c <_obstack_memory_used@@Base+0xc808>
  45113c:	stp	x29, x30, [sp, #-48]!
  451140:	mov	x29, sp
  451144:	stp	x21, x22, [sp, #32]
  451148:	mov	x21, #0x8001                	// #32769
  45114c:	movk	x21, #0x410, lsl #16
  451150:	movk	x21, #0xc600, lsl #32
  451154:	stp	x19, x20, [sp, #16]
  451158:	mov	x20, x0
  45115c:	mov	x19, x1
  451160:	mov	x22, #0x1                   	// #1
  451164:	movk	x21, #0x19, lsl #48
  451168:	ldr	w2, [x19]
  45116c:	cmp	w2, #0x8
  451170:	b.eq	451188 <_obstack_memory_used@@Base+0xc784>  // b.none
  451174:	b.hi	4511dc <_obstack_memory_used@@Base+0xc7d8>  // b.pmore
  451178:	cmp	w2, #0x6
  45117c:	b.eq	451190 <_obstack_memory_used@@Base+0xc78c>  // b.none
  451180:	cmp	w2, #0x7
  451184:	b.ne	4511a4 <_obstack_memory_used@@Base+0xc7a0>  // b.any
  451188:	ldr	x19, [x19, #16]
  45118c:	cbnz	x19, 451168 <_obstack_memory_used@@Base+0xc764>
  451190:	mov	x0, #0x0                   	// #0
  451194:	ldp	x19, x20, [sp, #16]
  451198:	ldp	x21, x22, [sp, #32]
  45119c:	ldp	x29, x30, [sp], #48
  4511a0:	ret
  4511a4:	cbz	w2, 451190 <_obstack_memory_used@@Base+0xc78c>
  4511a8:	cmp	w2, #0x5
  4511ac:	b.ne	4511f8 <_obstack_memory_used@@Base+0xc7f4>  // b.any
  4511b0:	add	x1, x19, #0x8
  4511b4:	mov	x0, x20
  4511b8:	bl	451108 <_obstack_memory_used@@Base+0xc704>
  4511bc:	cbz	x0, 451190 <_obstack_memory_used@@Base+0xc78c>
  4511c0:	ldr	w1, [x0]
  4511c4:	cmp	w1, #0x2f
  4511c8:	b.ne	451190 <_obstack_memory_used@@Base+0xc78c>  // b.any
  4511cc:	ldp	x19, x20, [sp, #16]
  4511d0:	ldp	x21, x22, [sp, #32]
  4511d4:	ldp	x29, x30, [sp], #48
  4511d8:	ret
  4511dc:	sub	w2, w2, #0x18
  4511e0:	cmp	w2, #0x34
  4511e4:	b.hi	4511f8 <_obstack_memory_used@@Base+0xc7f4>  // b.pmore
  4511e8:	lsl	x2, x22, x2
  4511ec:	tst	x2, x21
  4511f0:	b.ne	451190 <_obstack_memory_used@@Base+0xc78c>  // b.any
  4511f4:	tbnz	w2, #27, 451188 <_obstack_memory_used@@Base+0xc784>
  4511f8:	ldr	x1, [x19, #8]
  4511fc:	mov	x0, x20
  451200:	bl	451138 <_obstack_memory_used@@Base+0xc734>
  451204:	cbz	x0, 451188 <_obstack_memory_used@@Base+0xc784>
  451208:	b	451194 <_obstack_memory_used@@Base+0xc790>
  45120c:	mov	x0, #0x0                   	// #0
  451210:	ret
  451214:	nop
  451218:	stp	x29, x30, [sp, #-48]!
  45121c:	mov	x29, sp
  451220:	stp	x19, x20, [sp, #16]
  451224:	mov	x19, x2
  451228:	add	x2, x1, #0x1
  45122c:	stp	x21, x22, [sp, #32]
  451230:	mov	x21, x1
  451234:	mov	x22, x0
  451238:	ldp	x1, x20, [x19, #8]
  45123c:	add	x1, x2, x1
  451240:	ldr	w2, [x19, #24]
  451244:	cmp	x1, x20
  451248:	b.hi	45128c <_obstack_memory_used@@Base+0xc888>  // b.pmore
  45124c:	cbnz	w2, 45127c <_obstack_memory_used@@Base+0xc878>
  451250:	ldp	x3, x0, [x19]
  451254:	mov	x1, x22
  451258:	mov	x2, x21
  45125c:	add	x0, x3, x0
  451260:	bl	4026a0 <memcpy@plt>
  451264:	ldp	x0, x1, [x19]
  451268:	add	x0, x0, x21
  45126c:	strb	wzr, [x0, x1]
  451270:	ldr	x1, [x19, #8]
  451274:	add	x1, x1, x21
  451278:	str	x1, [x19, #8]
  45127c:	ldp	x19, x20, [sp, #16]
  451280:	ldp	x21, x22, [sp, #32]
  451284:	ldp	x29, x30, [sp], #48
  451288:	ret
  45128c:	cbnz	w2, 45127c <_obstack_memory_used@@Base+0xc878>
  451290:	cbz	x20, 4512c8 <_obstack_memory_used@@Base+0xc8c4>
  451294:	nop
  451298:	lsl	x20, x20, #1
  45129c:	cmp	x1, x20
  4512a0:	b.hi	451298 <_obstack_memory_used@@Base+0xc894>  // b.pmore
  4512a4:	ldr	x0, [x19]
  4512a8:	mov	x1, x20
  4512ac:	bl	4029a0 <realloc@plt>
  4512b0:	cbz	x0, 4512d8 <_obstack_memory_used@@Base+0xc8d4>
  4512b4:	ldr	w2, [x19, #24]
  4512b8:	str	x0, [x19]
  4512bc:	str	x20, [x19, #16]
  4512c0:	cbz	w2, 451250 <_obstack_memory_used@@Base+0xc84c>
  4512c4:	b	45127c <_obstack_memory_used@@Base+0xc878>
  4512c8:	cmp	x1, #0x2
  4512cc:	mov	x20, #0x2                   	// #2
  4512d0:	b.hi	451298 <_obstack_memory_used@@Base+0xc894>  // b.pmore
  4512d4:	b	4512a4 <_obstack_memory_used@@Base+0xc8a0>
  4512d8:	ldr	x0, [x19]
  4512dc:	bl	402b30 <free@plt>
  4512e0:	stp	xzr, xzr, [x19]
  4512e4:	mov	w0, #0x1                   	// #1
  4512e8:	str	xzr, [x19, #16]
  4512ec:	str	w0, [x19, #24]
  4512f0:	b	45127c <_obstack_memory_used@@Base+0xc878>
  4512f4:	nop
  4512f8:	stp	x29, x30, [sp, #-112]!
  4512fc:	mov	x29, sp
  451300:	ldr	x2, [x0, #24]
  451304:	stp	x19, x20, [sp, #16]
  451308:	mov	x19, x0
  45130c:	str	xzr, [sp, #104]
  451310:	ldrb	w3, [x2]
  451314:	cmp	w3, w1, uxtb
  451318:	b.eq	451a18 <_obstack_memory_used@@Base+0xd014>  // b.none
  45131c:	stp	x21, x22, [sp, #32]
  451320:	add	x21, sp, #0x68
  451324:	mov	w22, #0x1                   	// #1
  451328:	stp	x23, x24, [sp, #48]
  45132c:	and	w23, w1, #0xff
  451330:	mov	w24, #0x6d                  	// #109
  451334:	stp	x25, x26, [sp, #64]
  451338:	ldr	w25, [x19, #76]
  45133c:	str	w22, [x19, #76]
  451340:	ldrb	w0, [x2]
  451344:	cmp	w0, #0x4c
  451348:	b.eq	451518 <_obstack_memory_used@@Base+0xcb14>  // b.none
  45134c:	cmp	w0, #0x54
  451350:	b.eq	4515a8 <_obstack_memory_used@@Base+0xcba4>  // b.none
  451354:	cmp	w0, #0x73
  451358:	b.eq	4514d8 <_obstack_memory_used@@Base+0xcad4>  // b.none
  45135c:	cmp	w0, #0x66
  451360:	b.ne	4513fc <_obstack_memory_used@@Base+0xc9f8>  // b.any
  451364:	ldrb	w0, [x2, #1]
  451368:	cmp	w0, #0x70
  45136c:	b.eq	4515b8 <_obstack_memory_used@@Base+0xcbb4>  // b.none
  451370:	mov	x0, x19
  451374:	bl	453d18 <_obstack_memory_used@@Base+0xf314>
  451378:	mov	x20, x0
  45137c:	cbz	x0, 4513dc <_obstack_memory_used@@Base+0xc9d8>
  451380:	ldr	w0, [x0]
  451384:	cmp	w0, #0x32
  451388:	b.eq	451620 <_obstack_memory_used@@Base+0xcc1c>  // b.none
  45138c:	cmp	w0, #0x34
  451390:	b.eq	451a38 <_obstack_memory_used@@Base+0xd034>  // b.none
  451394:	b.hi	4513d8 <_obstack_memory_used@@Base+0xc9d4>  // b.pmore
  451398:	cmp	w0, #0x33
  45139c:	b.ne	4513d8 <_obstack_memory_used@@Base+0xc9d4>  // b.any
  4513a0:	ldr	w0, [x20, #8]
  4513a4:	cmp	w0, #0x2
  4513a8:	b.eq	4513d8 <_obstack_memory_used@@Base+0xc9d4>  // b.none
  4513ac:	b.gt	4513d8 <_obstack_memory_used@@Base+0xc9d4>
  4513b0:	cbnz	w0, 4517e8 <_obstack_memory_used@@Base+0xcde4>
  4513b4:	mov	x2, x20
  4513b8:	mov	x0, x19
  4513bc:	mov	x3, #0x0                   	// #0
  4513c0:	mov	w1, #0x36                  	// #54
  4513c4:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  4513c8:	mov	x20, x0
  4513cc:	b	4514b0 <_obstack_memory_used@@Base+0xcaac>
  4513d0:	ldr	x27, [sp, #80]
  4513d4:	nop
  4513d8:	mov	x20, #0x0                   	// #0
  4513dc:	str	w25, [x19, #76]
  4513e0:	mov	x0, x20
  4513e4:	ldp	x19, x20, [sp, #16]
  4513e8:	ldp	x21, x22, [sp, #32]
  4513ec:	ldp	x23, x24, [sp, #48]
  4513f0:	ldp	x25, x26, [sp, #64]
  4513f4:	ldp	x29, x30, [sp], #112
  4513f8:	ret
  4513fc:	sub	w1, w0, #0x30
  451400:	and	w1, w1, #0xff
  451404:	cmp	w1, #0x9
  451408:	b.hi	451528 <_obstack_memory_used@@Base+0xcb24>  // b.pmore
  45140c:	mov	x0, x19
  451410:	bl	4543e0 <_obstack_memory_used@@Base+0xf9dc>
  451414:	mov	x20, x0
  451418:	cbz	x0, 4513dc <_obstack_memory_used@@Base+0xc9d8>
  45141c:	ldr	x0, [x19, #24]
  451420:	ldrb	w1, [x0]
  451424:	cmp	w1, #0x49
  451428:	b.eq	451488 <_obstack_memory_used@@Base+0xca84>  // b.none
  45142c:	str	w25, [x19, #76]
  451430:	mov	x2, x20
  451434:	mov	x0, x19
  451438:	mov	x3, #0x0                   	// #0
  45143c:	mov	w1, #0x2e                  	// #46
  451440:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  451444:	str	x0, [x21]
  451448:	cbz	x0, 4514b8 <_obstack_memory_used@@Base+0xcab4>
  45144c:	ldr	x2, [x19, #24]
  451450:	add	x21, x0, #0x10
  451454:	ldrb	w0, [x2]
  451458:	cmp	w0, w23
  45145c:	b.ne	451338 <_obstack_memory_used@@Base+0xc934>  // b.any
  451460:	ldr	x20, [sp, #104]
  451464:	add	x2, x2, #0x1
  451468:	str	x2, [x19, #24]
  45146c:	mov	x0, x20
  451470:	ldp	x19, x20, [sp, #16]
  451474:	ldp	x21, x22, [sp, #32]
  451478:	ldp	x23, x24, [sp, #48]
  45147c:	ldp	x25, x26, [sp, #64]
  451480:	ldp	x29, x30, [sp], #112
  451484:	ret
  451488:	add	x0, x0, #0x1
  45148c:	str	x0, [x19, #24]
  451490:	mov	x0, x19
  451494:	bl	4522f0 <_obstack_memory_used@@Base+0xd8ec>
  451498:	mov	x3, x0
  45149c:	mov	x2, x20
  4514a0:	mov	x0, x19
  4514a4:	mov	w1, #0x4                   	// #4
  4514a8:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  4514ac:	mov	x20, x0
  4514b0:	str	w25, [x19, #76]
  4514b4:	cbnz	x20, 451430 <_obstack_memory_used@@Base+0xca2c>
  4514b8:	mov	x20, #0x0                   	// #0
  4514bc:	mov	x0, x20
  4514c0:	ldp	x19, x20, [sp, #16]
  4514c4:	ldp	x21, x22, [sp, #32]
  4514c8:	ldp	x23, x24, [sp, #48]
  4514cc:	ldp	x25, x26, [sp, #64]
  4514d0:	ldp	x29, x30, [sp], #112
  4514d4:	ret
  4514d8:	ldrb	w0, [x2, #1]
  4514dc:	cmp	w0, #0x72
  4514e0:	b.eq	451768 <_obstack_memory_used@@Base+0xcd64>  // b.none
  4514e4:	cmp	w0, #0x70
  4514e8:	b.ne	451370 <_obstack_memory_used@@Base+0xc96c>  // b.any
  4514ec:	add	x2, x2, #0x2
  4514f0:	str	x2, [x19, #24]
  4514f4:	mov	x0, x19
  4514f8:	bl	451b18 <_obstack_memory_used@@Base+0xd114>
  4514fc:	mov	x2, x0
  451500:	mov	x3, #0x0                   	// #0
  451504:	mov	x0, x19
  451508:	mov	w1, #0x4b                  	// #75
  45150c:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  451510:	mov	x20, x0
  451514:	b	4514b0 <_obstack_memory_used@@Base+0xcaac>
  451518:	mov	x0, x19
  45151c:	bl	4548c0 <_obstack_memory_used@@Base+0xfebc>
  451520:	mov	x20, x0
  451524:	b	4514b0 <_obstack_memory_used@@Base+0xcaac>
  451528:	cmp	w0, #0x6f
  45152c:	b.ne	451548 <_obstack_memory_used@@Base+0xcb44>  // b.any
  451530:	ldrb	w0, [x2, #1]
  451534:	cmp	w0, #0x6e
  451538:	b.ne	451370 <_obstack_memory_used@@Base+0xc96c>  // b.any
  45153c:	add	x2, x2, #0x2
  451540:	str	x2, [x19, #24]
  451544:	b	45140c <_obstack_memory_used@@Base+0xca08>
  451548:	cmp	w0, #0x69
  45154c:	mov	w1, #0x74                  	// #116
  451550:	ccmp	w0, w1, #0x4, ne  // ne = any
  451554:	b.ne	451370 <_obstack_memory_used@@Base+0xc96c>  // b.any
  451558:	ldrb	w1, [x2, #1]
  45155c:	cmp	w1, #0x6c
  451560:	b.ne	451370 <_obstack_memory_used@@Base+0xc96c>  // b.any
  451564:	add	x1, x2, #0x2
  451568:	str	x1, [x19, #24]
  45156c:	cmp	w0, #0x74
  451570:	mov	x20, #0x0                   	// #0
  451574:	b.eq	4518b8 <_obstack_memory_used@@Base+0xceb4>  // b.none
  451578:	ldrb	w0, [x1, #1]
  45157c:	cbz	w0, 4513d8 <_obstack_memory_used@@Base+0xc9d4>
  451580:	mov	w1, #0x45                  	// #69
  451584:	mov	x0, x19
  451588:	bl	4512f8 <_obstack_memory_used@@Base+0xc8f4>
  45158c:	mov	x3, x0
  451590:	mov	x2, x20
  451594:	mov	x0, x19
  451598:	mov	w1, #0x31                  	// #49
  45159c:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  4515a0:	mov	x20, x0
  4515a4:	b	4514b0 <_obstack_memory_used@@Base+0xcaac>
  4515a8:	mov	x0, x19
  4515ac:	bl	450a40 <_obstack_memory_used@@Base+0xc03c>
  4515b0:	mov	x20, x0
  4515b4:	b	4514b0 <_obstack_memory_used@@Base+0xcaac>
  4515b8:	add	x0, x2, #0x2
  4515bc:	str	x0, [x19, #24]
  4515c0:	ldrb	w0, [x2, #2]
  4515c4:	cmp	w0, #0x54
  4515c8:	b.eq	451758 <_obstack_memory_used@@Base+0xcd54>  // b.none
  4515cc:	mov	x0, x19
  4515d0:	bl	4509c8 <_obstack_memory_used@@Base+0xbfc4>
  4515d4:	mvn	x1, x0
  4515d8:	tst	x1, #0x7fffffff
  4515dc:	b.eq	4513d8 <_obstack_memory_used@@Base+0xc9d4>  // b.none
  4515e0:	add	w0, w0, #0x1
  4515e4:	ldp	w1, w2, [x19, #40]
  4515e8:	cmp	w1, w2
  4515ec:	b.ge	4513d8 <_obstack_memory_used@@Base+0xc9d4>  // b.tcont
  4515f0:	mov	w3, #0x18                  	// #24
  4515f4:	add	w4, w1, #0x1
  4515f8:	ldr	x2, [x19, #32]
  4515fc:	smull	x1, w1, w3
  451600:	mov	w3, #0x6                   	// #6
  451604:	sxtw	x0, w0
  451608:	add	x20, x2, x1
  45160c:	str	wzr, [x20, #4]
  451610:	str	w4, [x19, #40]
  451614:	str	w3, [x2, x1]
  451618:	str	x0, [x20, #8]
  45161c:	b	45142c <_obstack_memory_used@@Base+0xca28>
  451620:	ldr	x2, [x20, #8]
  451624:	ldr	w0, [x19, #72]
  451628:	ldr	w1, [x2, #16]
  45162c:	ldr	x26, [x2]
  451630:	sub	w1, w1, #0x2
  451634:	add	w0, w0, w1
  451638:	str	w0, [x19, #72]
  45163c:	ldrb	w1, [x26]
  451640:	cmp	w1, #0x73
  451644:	b.eq	451734 <_obstack_memory_used@@Base+0xcd30>  // b.none
  451648:	str	x27, [sp, #80]
  45164c:	ldr	w27, [x2, #20]
  451650:	cmp	w27, #0x1
  451654:	b.eq	451800 <_obstack_memory_used@@Base+0xcdfc>  // b.none
  451658:	b.le	4517dc <_obstack_memory_used@@Base+0xcdd8>
  45165c:	cmp	w27, #0x2
  451660:	b.eq	451920 <_obstack_memory_used@@Base+0xcf1c>  // b.none
  451664:	cmp	w27, #0x3
  451668:	b.ne	4513d0 <_obstack_memory_used@@Base+0xc9cc>  // b.any
  45166c:	cmp	w1, #0x71
  451670:	b.eq	4518d4 <_obstack_memory_used@@Base+0xced0>  // b.none
  451674:	ldrb	w0, [x26]
  451678:	cmp	w0, #0x66
  45167c:	b.eq	451aa4 <_obstack_memory_used@@Base+0xd0a0>  // b.none
  451680:	cmp	w0, #0x6e
  451684:	b.ne	451910 <_obstack_memory_used@@Base+0xcf0c>  // b.any
  451688:	ldrb	w0, [x26, #1]
  45168c:	mov	w1, #0x61                  	// #97
  451690:	cmp	w0, #0x77
  451694:	ccmp	w0, w1, #0x4, ne  // ne = any
  451698:	b.ne	451910 <_obstack_memory_used@@Base+0xcf0c>  // b.any
  45169c:	mov	w1, #0x5f                  	// #95
  4516a0:	mov	x0, x19
  4516a4:	bl	4512f8 <_obstack_memory_used@@Base+0xc8f4>
  4516a8:	mov	x26, x0
  4516ac:	mov	x0, x19
  4516b0:	bl	453130 <_obstack_memory_used@@Base+0xe72c>
  4516b4:	ldr	x1, [x19, #24]
  4516b8:	mov	x27, x0
  4516bc:	ldrb	w0, [x1]
  4516c0:	cmp	w0, #0x45
  4516c4:	b.eq	451b04 <_obstack_memory_used@@Base+0xd100>  // b.none
  4516c8:	cmp	w0, #0x70
  4516cc:	b.eq	451adc <_obstack_memory_used@@Base+0xd0d8>  // b.none
  4516d0:	cmp	w0, #0x69
  4516d4:	b.ne	451910 <_obstack_memory_used@@Base+0xcf0c>  // b.any
  4516d8:	ldrb	w0, [x1, #1]
  4516dc:	cmp	w0, #0x6c
  4516e0:	b.ne	451910 <_obstack_memory_used@@Base+0xcf0c>  // b.any
  4516e4:	mov	x0, x19
  4516e8:	bl	451b18 <_obstack_memory_used@@Base+0xd114>
  4516ec:	mov	x3, x0
  4516f0:	mov	x2, x27
  4516f4:	mov	w1, #0x3c                  	// #60
  4516f8:	mov	x0, x19
  4516fc:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  451700:	mov	x2, x26
  451704:	mov	x3, x0
  451708:	mov	w1, #0x3b                  	// #59
  45170c:	mov	x0, x19
  451710:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  451714:	mov	x3, x0
  451718:	mov	x2, x20
  45171c:	mov	x0, x19
  451720:	mov	w1, #0x3a                  	// #58
  451724:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  451728:	mov	x20, x0
  45172c:	ldr	x27, [sp, #80]
  451730:	b	4514b0 <_obstack_memory_used@@Base+0xcaac>
  451734:	ldrb	w0, [x26, #1]
  451738:	cmp	w0, #0x74
  45173c:	b.ne	451648 <_obstack_memory_used@@Base+0xcc44>  // b.any
  451740:	ldrb	w0, [x26, #2]
  451744:	cbnz	w0, 451648 <_obstack_memory_used@@Base+0xcc44>
  451748:	mov	x0, x19
  45174c:	bl	453130 <_obstack_memory_used@@Base+0xe72c>
  451750:	mov	x3, x0
  451754:	b	451844 <_obstack_memory_used@@Base+0xce40>
  451758:	add	x2, x2, #0x3
  45175c:	mov	w0, #0x0                   	// #0
  451760:	str	x2, [x19, #24]
  451764:	b	4515e4 <_obstack_memory_used@@Base+0xcbe0>
  451768:	add	x2, x2, #0x2
  45176c:	str	x2, [x19, #24]
  451770:	mov	x0, x19
  451774:	bl	453130 <_obstack_memory_used@@Base+0xe72c>
  451778:	mov	x20, x0
  45177c:	mov	x0, x19
  451780:	bl	4543e0 <_obstack_memory_used@@Base+0xf9dc>
  451784:	ldr	x1, [x19, #24]
  451788:	mov	x26, x0
  45178c:	mov	x3, x26
  451790:	ldrb	w0, [x1]
  451794:	cmp	w0, #0x49
  451798:	b.ne	4517c4 <_obstack_memory_used@@Base+0xcdc0>  // b.any
  45179c:	add	x1, x1, #0x1
  4517a0:	str	x1, [x19, #24]
  4517a4:	mov	x0, x19
  4517a8:	bl	4522f0 <_obstack_memory_used@@Base+0xd8ec>
  4517ac:	mov	x3, x0
  4517b0:	mov	x2, x26
  4517b4:	mov	x0, x19
  4517b8:	mov	w1, #0x4                   	// #4
  4517bc:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  4517c0:	mov	x3, x0
  4517c4:	mov	x2, x20
  4517c8:	mov	x0, x19
  4517cc:	mov	w1, #0x1                   	// #1
  4517d0:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  4517d4:	mov	x20, x0
  4517d8:	b	4514b0 <_obstack_memory_used@@Base+0xcaac>
  4517dc:	cbnz	w27, 4513d0 <_obstack_memory_used@@Base+0xc9cc>
  4517e0:	ldr	x27, [sp, #80]
  4517e4:	b	4513b4 <_obstack_memory_used@@Base+0xc9b0>
  4517e8:	cmp	w0, #0x1
  4517ec:	b.ne	4513d8 <_obstack_memory_used@@Base+0xc9d4>  // b.any
  4517f0:	mov	x0, x19
  4517f4:	bl	451b18 <_obstack_memory_used@@Base+0xd114>
  4517f8:	mov	x3, x0
  4517fc:	b	451844 <_obstack_memory_used@@Base+0xce40>
  451800:	ldrb	w0, [x26]
  451804:	cmp	w0, #0x70
  451808:	ccmp	w0, w24, #0x4, ne  // ne = any
  45180c:	b.eq	451888 <_obstack_memory_used@@Base+0xce84>  // b.none
  451810:	mov	w27, #0x0                   	// #0
  451814:	cmp	w1, #0x73
  451818:	b.ne	45185c <_obstack_memory_used@@Base+0xce58>  // b.any
  45181c:	ldrb	w0, [x26, #1]
  451820:	cmp	w0, #0x50
  451824:	b.ne	45185c <_obstack_memory_used@@Base+0xce58>  // b.any
  451828:	ldrb	w0, [x26, #2]
  45182c:	cbnz	w0, 45185c <_obstack_memory_used@@Base+0xce58>
  451830:	mov	x0, x19
  451834:	bl	4522f0 <_obstack_memory_used@@Base+0xd8ec>
  451838:	mov	x3, x0
  45183c:	cbnz	w27, 45186c <_obstack_memory_used@@Base+0xce68>
  451840:	ldr	x27, [sp, #80]
  451844:	mov	x2, x20
  451848:	mov	x0, x19
  45184c:	mov	w1, #0x37                  	// #55
  451850:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  451854:	mov	x20, x0
  451858:	b	4514b0 <_obstack_memory_used@@Base+0xcaac>
  45185c:	mov	x0, x19
  451860:	bl	451b18 <_obstack_memory_used@@Base+0xd114>
  451864:	mov	x3, x0
  451868:	cbz	w27, 451840 <_obstack_memory_used@@Base+0xce3c>
  45186c:	mov	x2, x3
  451870:	mov	x0, x19
  451874:	mov	w1, #0x39                  	// #57
  451878:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  45187c:	mov	x3, x0
  451880:	ldr	x27, [sp, #80]
  451884:	b	451844 <_obstack_memory_used@@Base+0xce40>
  451888:	ldrb	w2, [x26, #1]
  45188c:	cmp	w2, w0
  451890:	b.ne	451810 <_obstack_memory_used@@Base+0xce0c>  // b.any
  451894:	ldr	x0, [x19, #24]
  451898:	ldrb	w2, [x0]
  45189c:	cmp	w2, #0x5f
  4518a0:	b.ne	451814 <_obstack_memory_used@@Base+0xce10>  // b.any
  4518a4:	add	x0, x0, #0x1
  4518a8:	str	x0, [x19, #24]
  4518ac:	mov	w27, #0x0                   	// #0
  4518b0:	ldrb	w1, [x26]
  4518b4:	b	451814 <_obstack_memory_used@@Base+0xce10>
  4518b8:	mov	x0, x19
  4518bc:	bl	453130 <_obstack_memory_used@@Base+0xe72c>
  4518c0:	ldr	x1, [x19, #24]
  4518c4:	mov	x20, x0
  4518c8:	ldrb	w0, [x1, #1]
  4518cc:	cbnz	w0, 451580 <_obstack_memory_used@@Base+0xcb7c>
  4518d0:	b	4513d8 <_obstack_memory_used@@Base+0xc9d4>
  4518d4:	ldrb	w0, [x26, #1]
  4518d8:	cmp	w0, #0x75
  4518dc:	b.ne	451674 <_obstack_memory_used@@Base+0xcc70>  // b.any
  4518e0:	ldrb	w0, [x26, #2]
  4518e4:	cbnz	w0, 451674 <_obstack_memory_used@@Base+0xcc70>
  4518e8:	mov	x0, x19
  4518ec:	bl	451b18 <_obstack_memory_used@@Base+0xd114>
  4518f0:	mov	x26, x0
  4518f4:	mov	x0, x19
  4518f8:	bl	451b18 <_obstack_memory_used@@Base+0xd114>
  4518fc:	mov	x27, x0
  451900:	mov	x0, x19
  451904:	bl	451b18 <_obstack_memory_used@@Base+0xd114>
  451908:	mov	x3, x0
  45190c:	cbnz	x0, 4516f0 <_obstack_memory_used@@Base+0xccec>
  451910:	mov	x20, #0x0                   	// #0
  451914:	ldr	x27, [sp, #80]
  451918:	str	w25, [x19, #76]
  45191c:	b	4513e0 <_obstack_memory_used@@Base+0xc9dc>
  451920:	ldr	x0, [x20, #8]
  451924:	ldr	x0, [x0]
  451928:	ldrb	w1, [x0, #1]
  45192c:	cmp	w1, #0x63
  451930:	b.eq	451a64 <_obstack_memory_used@@Base+0xd060>  // b.none
  451934:	ldrb	w0, [x26]
  451938:	cmp	w0, #0x66
  45193c:	b.eq	451a94 <_obstack_memory_used@@Base+0xd090>  // b.none
  451940:	mov	x0, x19
  451944:	bl	451b18 <_obstack_memory_used@@Base+0xd114>
  451948:	mov	x27, x0
  45194c:	ldrb	w1, [x26]
  451950:	cmp	w1, #0x63
  451954:	b.ne	451980 <_obstack_memory_used@@Base+0xcf7c>  // b.any
  451958:	ldrb	w0, [x26, #1]
  45195c:	cmp	w0, #0x6c
  451960:	b.ne	451980 <_obstack_memory_used@@Base+0xcf7c>  // b.any
  451964:	ldrb	w0, [x26, #2]
  451968:	cbnz	w0, 451980 <_obstack_memory_used@@Base+0xcf7c>
  45196c:	mov	x0, x19
  451970:	mov	w1, #0x45                  	// #69
  451974:	bl	4512f8 <_obstack_memory_used@@Base+0xc8f4>
  451978:	mov	x26, x0
  45197c:	b	4519b8 <_obstack_memory_used@@Base+0xcfb4>
  451980:	cmp	w1, #0x64
  451984:	b.ne	4519ec <_obstack_memory_used@@Base+0xcfe8>  // b.any
  451988:	ldrb	w0, [x26, #1]
  45198c:	cmp	w0, #0x74
  451990:	b.ne	4519ec <_obstack_memory_used@@Base+0xcfe8>  // b.any
  451994:	ldrb	w0, [x26, #2]
  451998:	cbnz	w0, 4519ec <_obstack_memory_used@@Base+0xcfe8>
  45199c:	mov	x0, x19
  4519a0:	bl	4543e0 <_obstack_memory_used@@Base+0xf9dc>
  4519a4:	ldr	x1, [x19, #24]
  4519a8:	mov	x26, x0
  4519ac:	ldrb	w0, [x1]
  4519b0:	cmp	w0, #0x49
  4519b4:	b.eq	451ab0 <_obstack_memory_used@@Base+0xd0ac>  // b.none
  4519b8:	mov	x2, x27
  4519bc:	mov	x3, x26
  4519c0:	mov	w1, #0x39                  	// #57
  4519c4:	mov	x0, x19
  4519c8:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  4519cc:	mov	x3, x0
  4519d0:	mov	x2, x20
  4519d4:	mov	x0, x19
  4519d8:	mov	w1, #0x38                  	// #56
  4519dc:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  4519e0:	mov	x20, x0
  4519e4:	ldr	x27, [sp, #80]
  4519e8:	b	4514b0 <_obstack_memory_used@@Base+0xcaac>
  4519ec:	cmp	w1, #0x70
  4519f0:	b.ne	451a08 <_obstack_memory_used@@Base+0xd004>  // b.any
  4519f4:	ldrb	w0, [x26, #1]
  4519f8:	cmp	w0, #0x74
  4519fc:	b.ne	451a08 <_obstack_memory_used@@Base+0xd004>  // b.any
  451a00:	ldrb	w0, [x26, #2]
  451a04:	cbz	w0, 45199c <_obstack_memory_used@@Base+0xcf98>
  451a08:	mov	x0, x19
  451a0c:	bl	451b18 <_obstack_memory_used@@Base+0xd114>
  451a10:	mov	x26, x0
  451a14:	b	4519b8 <_obstack_memory_used@@Base+0xcfb4>
  451a18:	add	x2, x2, #0x1
  451a1c:	str	x2, [x0, #24]
  451a20:	ldp	x19, x20, [sp, #16]
  451a24:	mov	x3, #0x0                   	// #0
  451a28:	ldp	x29, x30, [sp], #112
  451a2c:	mov	w1, #0x2e                  	// #46
  451a30:	mov	x2, #0x0                   	// #0
  451a34:	b	450610 <_obstack_memory_used@@Base+0xbc0c>
  451a38:	ldr	x0, [x19, #24]
  451a3c:	ldrb	w1, [x0]
  451a40:	cmp	w1, #0x5f
  451a44:	b.ne	4517f0 <_obstack_memory_used@@Base+0xcdec>  // b.any
  451a48:	add	x0, x0, #0x1
  451a4c:	str	x0, [x19, #24]
  451a50:	mov	w1, #0x45                  	// #69
  451a54:	mov	x0, x19
  451a58:	bl	4512f8 <_obstack_memory_used@@Base+0xc8f4>
  451a5c:	mov	x3, x0
  451a60:	b	451844 <_obstack_memory_used@@Base+0xce40>
  451a64:	ldrb	w0, [x0]
  451a68:	sub	w1, w0, #0x72
  451a6c:	sub	w0, w0, #0x63
  451a70:	and	w1, w1, #0xff
  451a74:	and	w0, w0, #0xff
  451a78:	cmp	w1, #0x1
  451a7c:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  451a80:	b.hi	451934 <_obstack_memory_used@@Base+0xcf30>  // b.pmore
  451a84:	mov	x0, x19
  451a88:	bl	453130 <_obstack_memory_used@@Base+0xe72c>
  451a8c:	mov	x27, x0
  451a90:	b	45194c <_obstack_memory_used@@Base+0xcf48>
  451a94:	mov	x0, x19
  451a98:	bl	453d18 <_obstack_memory_used@@Base+0xf314>
  451a9c:	mov	x27, x0
  451aa0:	b	45194c <_obstack_memory_used@@Base+0xcf48>
  451aa4:	mov	x0, x19
  451aa8:	bl	453d18 <_obstack_memory_used@@Base+0xf314>
  451aac:	b	4518f0 <_obstack_memory_used@@Base+0xceec>
  451ab0:	add	x1, x1, #0x1
  451ab4:	str	x1, [x19, #24]
  451ab8:	mov	x0, x19
  451abc:	bl	4522f0 <_obstack_memory_used@@Base+0xd8ec>
  451ac0:	mov	x3, x0
  451ac4:	mov	x2, x26
  451ac8:	mov	x0, x19
  451acc:	mov	w1, #0x4                   	// #4
  451ad0:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  451ad4:	mov	x26, x0
  451ad8:	b	4519b8 <_obstack_memory_used@@Base+0xcfb4>
  451adc:	ldrb	w0, [x1, #1]
  451ae0:	cmp	w0, #0x69
  451ae4:	b.ne	451910 <_obstack_memory_used@@Base+0xcf0c>  // b.any
  451ae8:	add	x1, x1, #0x2
  451aec:	str	x1, [x19, #24]
  451af0:	mov	x0, x19
  451af4:	mov	w1, #0x45                  	// #69
  451af8:	bl	4512f8 <_obstack_memory_used@@Base+0xc8f4>
  451afc:	mov	x3, x0
  451b00:	b	4516f0 <_obstack_memory_used@@Base+0xccec>
  451b04:	add	x1, x1, #0x1
  451b08:	mov	x3, #0x0                   	// #0
  451b0c:	str	x1, [x19, #24]
  451b10:	b	4516f0 <_obstack_memory_used@@Base+0xccec>
  451b14:	nop
  451b18:	ldr	x2, [x0, #24]
  451b1c:	ldrb	w1, [x2]
  451b20:	cmp	w1, #0x4c
  451b24:	b.eq	451cb4 <_obstack_memory_used@@Base+0xd2b0>  // b.none
  451b28:	cmp	w1, #0x54
  451b2c:	b.eq	451d38 <_obstack_memory_used@@Base+0xd334>  // b.none
  451b30:	stp	x29, x30, [sp, #-48]!
  451b34:	cmp	w1, #0x73
  451b38:	mov	x29, sp
  451b3c:	stp	x19, x20, [sp, #16]
  451b40:	mov	x19, x0
  451b44:	b.eq	451bfc <_obstack_memory_used@@Base+0xd1f8>  // b.none
  451b48:	cmp	w1, #0x66
  451b4c:	b.eq	451b90 <_obstack_memory_used@@Base+0xd18c>  // b.none
  451b50:	sub	w3, w1, #0x30
  451b54:	and	w3, w3, #0xff
  451b58:	cmp	w3, #0x9
  451b5c:	b.hi	451cb8 <_obstack_memory_used@@Base+0xd2b4>  // b.pmore
  451b60:	mov	x0, x19
  451b64:	bl	4543e0 <_obstack_memory_used@@Base+0xf9dc>
  451b68:	mov	x20, x0
  451b6c:	cbz	x0, 451ca0 <_obstack_memory_used@@Base+0xd29c>
  451b70:	ldr	x0, [x19, #24]
  451b74:	ldrb	w1, [x0]
  451b78:	cmp	w1, #0x49
  451b7c:	b.eq	451e10 <_obstack_memory_used@@Base+0xd40c>  // b.none
  451b80:	mov	x0, x20
  451b84:	ldp	x19, x20, [sp, #16]
  451b88:	ldp	x29, x30, [sp], #48
  451b8c:	ret
  451b90:	ldrb	w1, [x2, #1]
  451b94:	cmp	w1, #0x70
  451b98:	b.eq	451c38 <_obstack_memory_used@@Base+0xd234>  // b.none
  451b9c:	mov	x0, x19
  451ba0:	bl	453d18 <_obstack_memory_used@@Base+0xf314>
  451ba4:	mov	x20, x0
  451ba8:	cbz	x0, 451ca0 <_obstack_memory_used@@Base+0xd29c>
  451bac:	ldr	w0, [x0]
  451bb0:	cmp	w0, #0x32
  451bb4:	b.eq	451d3c <_obstack_memory_used@@Base+0xd338>  // b.none
  451bb8:	cmp	w0, #0x34
  451bbc:	b.eq	452168 <_obstack_memory_used@@Base+0xd764>  // b.none
  451bc0:	b.hi	451ca0 <_obstack_memory_used@@Base+0xd29c>  // b.pmore
  451bc4:	cmp	w0, #0x33
  451bc8:	b.ne	451ca0 <_obstack_memory_used@@Base+0xd29c>  // b.any
  451bcc:	ldr	w0, [x20, #8]
  451bd0:	cmp	w0, #0x2
  451bd4:	b.eq	451ca0 <_obstack_memory_used@@Base+0xd29c>  // b.none
  451bd8:	b.gt	451ca0 <_obstack_memory_used@@Base+0xd29c>
  451bdc:	cbnz	w0, 451f04 <_obstack_memory_used@@Base+0xd500>
  451be0:	mov	x2, x20
  451be4:	mov	x0, x19
  451be8:	ldp	x19, x20, [sp, #16]
  451bec:	mov	x3, #0x0                   	// #0
  451bf0:	ldp	x29, x30, [sp], #48
  451bf4:	mov	w1, #0x36                  	// #54
  451bf8:	b	450610 <_obstack_memory_used@@Base+0xbc0c>
  451bfc:	ldrb	w1, [x2, #1]
  451c00:	cmp	w1, #0x72
  451c04:	b.eq	451e3c <_obstack_memory_used@@Base+0xd438>  // b.none
  451c08:	cmp	w1, #0x70
  451c0c:	b.ne	451b9c <_obstack_memory_used@@Base+0xd198>  // b.any
  451c10:	add	x2, x2, #0x2
  451c14:	str	x2, [x0, #24]
  451c18:	bl	451b18 <_obstack_memory_used@@Base+0xd114>
  451c1c:	mov	x2, x0
  451c20:	mov	x0, x19
  451c24:	mov	x3, #0x0                   	// #0
  451c28:	ldp	x19, x20, [sp, #16]
  451c2c:	mov	w1, #0x4b                  	// #75
  451c30:	ldp	x29, x30, [sp], #48
  451c34:	b	450610 <_obstack_memory_used@@Base+0xbc0c>
  451c38:	add	x1, x2, #0x2
  451c3c:	str	x1, [x0, #24]
  451c40:	ldrb	w1, [x2, #2]
  451c44:	cmp	w1, #0x54
  451c48:	b.eq	451fc8 <_obstack_memory_used@@Base+0xd5c4>  // b.none
  451c4c:	bl	4509c8 <_obstack_memory_used@@Base+0xbfc4>
  451c50:	mvn	x1, x0
  451c54:	add	w0, w0, #0x1
  451c58:	tst	x1, #0x7fffffff
  451c5c:	b.eq	451ca0 <_obstack_memory_used@@Base+0xd29c>  // b.none
  451c60:	ldp	w1, w2, [x19, #40]
  451c64:	cmp	w1, w2
  451c68:	b.ge	451ca0 <_obstack_memory_used@@Base+0xd29c>  // b.tcont
  451c6c:	mov	w3, #0x18                  	// #24
  451c70:	add	w4, w1, #0x1
  451c74:	ldr	x2, [x19, #32]
  451c78:	smull	x1, w1, w3
  451c7c:	mov	w3, #0x6                   	// #6
  451c80:	sxtw	x0, w0
  451c84:	add	x20, x2, x1
  451c88:	str	wzr, [x20, #4]
  451c8c:	str	w4, [x19, #40]
  451c90:	str	w3, [x2, x1]
  451c94:	str	x0, [x20, #8]
  451c98:	b	451b80 <_obstack_memory_used@@Base+0xd17c>
  451c9c:	ldp	x21, x22, [sp, #32]
  451ca0:	mov	x20, #0x0                   	// #0
  451ca4:	mov	x0, x20
  451ca8:	ldp	x19, x20, [sp, #16]
  451cac:	ldp	x29, x30, [sp], #48
  451cb0:	ret
  451cb4:	b	4548c0 <_obstack_memory_used@@Base+0xfebc>
  451cb8:	cmp	w1, #0x6f
  451cbc:	b.ne	451cd8 <_obstack_memory_used@@Base+0xd2d4>  // b.any
  451cc0:	ldrb	w0, [x2, #1]
  451cc4:	cmp	w0, #0x6e
  451cc8:	b.ne	451b9c <_obstack_memory_used@@Base+0xd198>  // b.any
  451ccc:	add	x2, x2, #0x2
  451cd0:	str	x2, [x19, #24]
  451cd4:	b	451b60 <_obstack_memory_used@@Base+0xd15c>
  451cd8:	cmp	w1, #0x69
  451cdc:	mov	w3, #0x74                  	// #116
  451ce0:	ccmp	w1, w3, #0x4, ne  // ne = any
  451ce4:	b.ne	451b9c <_obstack_memory_used@@Base+0xd198>  // b.any
  451ce8:	ldrb	w3, [x2, #1]
  451cec:	cmp	w3, #0x6c
  451cf0:	b.ne	451b9c <_obstack_memory_used@@Base+0xd198>  // b.any
  451cf4:	add	x3, x2, #0x2
  451cf8:	str	x3, [x0, #24]
  451cfc:	cmp	w1, #0x74
  451d00:	mov	x20, #0x0                   	// #0
  451d04:	b.eq	451ef4 <_obstack_memory_used@@Base+0xd4f0>  // b.none
  451d08:	ldrb	w0, [x3, #1]
  451d0c:	cbz	w0, 451ca0 <_obstack_memory_used@@Base+0xd29c>
  451d10:	mov	x0, x19
  451d14:	mov	w1, #0x45                  	// #69
  451d18:	bl	4512f8 <_obstack_memory_used@@Base+0xc8f4>
  451d1c:	mov	x3, x0
  451d20:	mov	x2, x20
  451d24:	mov	x0, x19
  451d28:	ldp	x19, x20, [sp, #16]
  451d2c:	mov	w1, #0x31                  	// #49
  451d30:	ldp	x29, x30, [sp], #48
  451d34:	b	450610 <_obstack_memory_used@@Base+0xbc0c>
  451d38:	b	450a40 <_obstack_memory_used@@Base+0xc03c>
  451d3c:	ldr	x2, [x20, #8]
  451d40:	stp	x21, x22, [sp, #32]
  451d44:	ldr	w0, [x19, #72]
  451d48:	ldr	w1, [x2, #16]
  451d4c:	ldr	x21, [x2]
  451d50:	sub	w1, w1, #0x2
  451d54:	add	w0, w0, w1
  451d58:	str	w0, [x19, #72]
  451d5c:	ldrb	w1, [x21]
  451d60:	cmp	w1, #0x73
  451d64:	b.eq	451e8c <_obstack_memory_used@@Base+0xd488>  // b.none
  451d68:	ldr	w22, [x2, #20]
  451d6c:	cmp	w22, #0x1
  451d70:	b.eq	451f3c <_obstack_memory_used@@Base+0xd538>  // b.none
  451d74:	b.le	451f30 <_obstack_memory_used@@Base+0xd52c>
  451d78:	cmp	w22, #0x2
  451d7c:	b.eq	451ff4 <_obstack_memory_used@@Base+0xd5f0>  // b.none
  451d80:	cmp	w22, #0x3
  451d84:	b.ne	451c9c <_obstack_memory_used@@Base+0xd298>  // b.any
  451d88:	cmp	w1, #0x71
  451d8c:	b.ne	452084 <_obstack_memory_used@@Base+0xd680>  // b.any
  451d90:	ldrb	w0, [x21, #1]
  451d94:	cmp	w0, #0x75
  451d98:	b.ne	452084 <_obstack_memory_used@@Base+0xd680>  // b.any
  451d9c:	ldrb	w0, [x21, #2]
  451da0:	cbnz	w0, 452084 <_obstack_memory_used@@Base+0xd680>
  451da4:	mov	x0, x19
  451da8:	bl	451b18 <_obstack_memory_used@@Base+0xd114>
  451dac:	mov	x21, x0
  451db0:	mov	x0, x19
  451db4:	bl	451b18 <_obstack_memory_used@@Base+0xd114>
  451db8:	mov	x22, x0
  451dbc:	mov	x0, x19
  451dc0:	bl	451b18 <_obstack_memory_used@@Base+0xd114>
  451dc4:	mov	x3, x0
  451dc8:	cbz	x0, 451c9c <_obstack_memory_used@@Base+0xd298>
  451dcc:	mov	x2, x22
  451dd0:	mov	x0, x19
  451dd4:	mov	w1, #0x3c                  	// #60
  451dd8:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  451ddc:	mov	x2, x21
  451de0:	mov	x3, x0
  451de4:	mov	w1, #0x3b                  	// #59
  451de8:	mov	x0, x19
  451dec:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  451df0:	mov	x3, x0
  451df4:	mov	x2, x20
  451df8:	mov	x0, x19
  451dfc:	ldp	x19, x20, [sp, #16]
  451e00:	mov	w1, #0x3a                  	// #58
  451e04:	ldp	x21, x22, [sp, #32]
  451e08:	ldp	x29, x30, [sp], #48
  451e0c:	b	450610 <_obstack_memory_used@@Base+0xbc0c>
  451e10:	add	x0, x0, #0x1
  451e14:	str	x0, [x19, #24]
  451e18:	mov	x0, x19
  451e1c:	bl	4522f0 <_obstack_memory_used@@Base+0xd8ec>
  451e20:	mov	x3, x0
  451e24:	mov	x2, x20
  451e28:	mov	x0, x19
  451e2c:	ldp	x19, x20, [sp, #16]
  451e30:	mov	w1, #0x4                   	// #4
  451e34:	ldp	x29, x30, [sp], #48
  451e38:	b	450610 <_obstack_memory_used@@Base+0xbc0c>
  451e3c:	add	x2, x2, #0x2
  451e40:	stp	x21, x22, [sp, #32]
  451e44:	str	x2, [x0, #24]
  451e48:	bl	453130 <_obstack_memory_used@@Base+0xe72c>
  451e4c:	mov	x20, x0
  451e50:	mov	x0, x19
  451e54:	bl	4543e0 <_obstack_memory_used@@Base+0xf9dc>
  451e58:	ldr	x1, [x19, #24]
  451e5c:	mov	x21, x0
  451e60:	mov	x3, x21
  451e64:	ldrb	w0, [x1]
  451e68:	cmp	w0, #0x49
  451e6c:	b.eq	451ec8 <_obstack_memory_used@@Base+0xd4c4>  // b.none
  451e70:	mov	x2, x20
  451e74:	mov	x0, x19
  451e78:	ldp	x19, x20, [sp, #16]
  451e7c:	mov	w1, #0x1                   	// #1
  451e80:	ldp	x21, x22, [sp, #32]
  451e84:	ldp	x29, x30, [sp], #48
  451e88:	b	450610 <_obstack_memory_used@@Base+0xbc0c>
  451e8c:	ldrb	w0, [x21, #1]
  451e90:	cmp	w0, #0x74
  451e94:	b.ne	451d68 <_obstack_memory_used@@Base+0xd364>  // b.any
  451e98:	ldrb	w0, [x21, #2]
  451e9c:	cbnz	w0, 451d68 <_obstack_memory_used@@Base+0xd364>
  451ea0:	mov	x0, x19
  451ea4:	bl	453130 <_obstack_memory_used@@Base+0xe72c>
  451ea8:	mov	x2, x20
  451eac:	mov	x3, x0
  451eb0:	mov	x0, x19
  451eb4:	mov	w1, #0x37                  	// #55
  451eb8:	ldp	x19, x20, [sp, #16]
  451ebc:	ldp	x21, x22, [sp, #32]
  451ec0:	ldp	x29, x30, [sp], #48
  451ec4:	b	450610 <_obstack_memory_used@@Base+0xbc0c>
  451ec8:	add	x1, x1, #0x1
  451ecc:	str	x1, [x19, #24]
  451ed0:	mov	x0, x19
  451ed4:	bl	4522f0 <_obstack_memory_used@@Base+0xd8ec>
  451ed8:	mov	x3, x0
  451edc:	mov	x2, x21
  451ee0:	mov	x0, x19
  451ee4:	mov	w1, #0x4                   	// #4
  451ee8:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  451eec:	mov	x3, x0
  451ef0:	b	451e70 <_obstack_memory_used@@Base+0xd46c>
  451ef4:	bl	453130 <_obstack_memory_used@@Base+0xe72c>
  451ef8:	mov	x20, x0
  451efc:	ldr	x3, [x19, #24]
  451f00:	b	451d08 <_obstack_memory_used@@Base+0xd304>
  451f04:	cmp	w0, #0x1
  451f08:	b.ne	451ca0 <_obstack_memory_used@@Base+0xd29c>  // b.any
  451f0c:	mov	x0, x19
  451f10:	bl	451b18 <_obstack_memory_used@@Base+0xd114>
  451f14:	mov	x3, x0
  451f18:	mov	x2, x20
  451f1c:	mov	x0, x19
  451f20:	ldp	x19, x20, [sp, #16]
  451f24:	mov	w1, #0x37                  	// #55
  451f28:	ldp	x29, x30, [sp], #48
  451f2c:	b	450610 <_obstack_memory_used@@Base+0xbc0c>
  451f30:	cbnz	w22, 451c9c <_obstack_memory_used@@Base+0xd298>
  451f34:	ldp	x21, x22, [sp, #32]
  451f38:	b	451be0 <_obstack_memory_used@@Base+0xd1dc>
  451f3c:	ldrb	w0, [x21]
  451f40:	mov	w2, #0x6d                  	// #109
  451f44:	cmp	w0, #0x70
  451f48:	ccmp	w0, w2, #0x4, ne  // ne = any
  451f4c:	b.ne	451f5c <_obstack_memory_used@@Base+0xd558>  // b.any
  451f50:	ldrb	w2, [x21, #1]
  451f54:	cmp	w2, w0
  451f58:	b.eq	451f94 <_obstack_memory_used@@Base+0xd590>  // b.none
  451f5c:	mov	w22, #0x0                   	// #0
  451f60:	cmp	w1, #0x73
  451f64:	b.ne	451fb8 <_obstack_memory_used@@Base+0xd5b4>  // b.any
  451f68:	ldrb	w0, [x21, #1]
  451f6c:	cmp	w0, #0x50
  451f70:	b.ne	451fb8 <_obstack_memory_used@@Base+0xd5b4>  // b.any
  451f74:	ldrb	w0, [x21, #2]
  451f78:	cbnz	w0, 451fb8 <_obstack_memory_used@@Base+0xd5b4>
  451f7c:	mov	x0, x19
  451f80:	bl	4522f0 <_obstack_memory_used@@Base+0xd8ec>
  451f84:	mov	x3, x0
  451f88:	cbnz	w22, 451fd8 <_obstack_memory_used@@Base+0xd5d4>
  451f8c:	ldp	x21, x22, [sp, #32]
  451f90:	b	451f18 <_obstack_memory_used@@Base+0xd514>
  451f94:	ldr	x0, [x19, #24]
  451f98:	ldrb	w2, [x0]
  451f9c:	cmp	w2, #0x5f
  451fa0:	b.ne	451f60 <_obstack_memory_used@@Base+0xd55c>  // b.any
  451fa4:	add	x0, x0, #0x1
  451fa8:	str	x0, [x19, #24]
  451fac:	mov	w22, #0x0                   	// #0
  451fb0:	ldrb	w1, [x21]
  451fb4:	b	451f60 <_obstack_memory_used@@Base+0xd55c>
  451fb8:	mov	x0, x19
  451fbc:	bl	451b18 <_obstack_memory_used@@Base+0xd114>
  451fc0:	mov	x3, x0
  451fc4:	b	451f88 <_obstack_memory_used@@Base+0xd584>
  451fc8:	add	x2, x2, #0x3
  451fcc:	mov	w0, #0x0                   	// #0
  451fd0:	str	x2, [x19, #24]
  451fd4:	b	451c60 <_obstack_memory_used@@Base+0xd25c>
  451fd8:	mov	x2, x3
  451fdc:	mov	x0, x19
  451fe0:	mov	w1, #0x39                  	// #57
  451fe4:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  451fe8:	mov	x3, x0
  451fec:	ldp	x21, x22, [sp, #32]
  451ff0:	b	451f18 <_obstack_memory_used@@Base+0xd514>
  451ff4:	ldr	x0, [x20, #8]
  451ff8:	ldr	x0, [x0]
  451ffc:	ldrb	w1, [x0, #1]
  452000:	cmp	w1, #0x63
  452004:	b.eq	4521ac <_obstack_memory_used@@Base+0xd7a8>  // b.none
  452008:	ldrb	w0, [x21]
  45200c:	cmp	w0, #0x66
  452010:	b.eq	4521dc <_obstack_memory_used@@Base+0xd7d8>  // b.none
  452014:	mov	x0, x19
  452018:	bl	451b18 <_obstack_memory_used@@Base+0xd114>
  45201c:	mov	x22, x0
  452020:	ldrb	w1, [x21]
  452024:	cmp	w1, #0x63
  452028:	b.ne	452104 <_obstack_memory_used@@Base+0xd700>  // b.any
  45202c:	ldrb	w0, [x21, #1]
  452030:	cmp	w0, #0x6c
  452034:	b.ne	452104 <_obstack_memory_used@@Base+0xd700>  // b.any
  452038:	ldrb	w0, [x21, #2]
  45203c:	cbnz	w0, 452104 <_obstack_memory_used@@Base+0xd700>
  452040:	mov	x0, x19
  452044:	mov	w1, #0x45                  	// #69
  452048:	bl	4512f8 <_obstack_memory_used@@Base+0xc8f4>
  45204c:	mov	x21, x0
  452050:	mov	x3, x21
  452054:	mov	x2, x22
  452058:	mov	x0, x19
  45205c:	mov	w1, #0x39                  	// #57
  452060:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  452064:	mov	x3, x0
  452068:	mov	x2, x20
  45206c:	mov	x0, x19
  452070:	ldp	x19, x20, [sp, #16]
  452074:	mov	w1, #0x38                  	// #56
  452078:	ldp	x21, x22, [sp, #32]
  45207c:	ldp	x29, x30, [sp], #48
  452080:	b	450610 <_obstack_memory_used@@Base+0xbc0c>
  452084:	ldrb	w0, [x21]
  452088:	cmp	w0, #0x66
  45208c:	b.eq	452204 <_obstack_memory_used@@Base+0xd800>  // b.none
  452090:	cmp	w0, #0x6e
  452094:	b.ne	451c9c <_obstack_memory_used@@Base+0xd298>  // b.any
  452098:	ldrb	w0, [x21, #1]
  45209c:	mov	w1, #0x61                  	// #97
  4520a0:	cmp	w0, #0x77
  4520a4:	ccmp	w0, w1, #0x4, ne  // ne = any
  4520a8:	b.ne	451c9c <_obstack_memory_used@@Base+0xd298>  // b.any
  4520ac:	mov	w1, #0x5f                  	// #95
  4520b0:	mov	x0, x19
  4520b4:	bl	4512f8 <_obstack_memory_used@@Base+0xc8f4>
  4520b8:	mov	x21, x0
  4520bc:	mov	x0, x19
  4520c0:	bl	453130 <_obstack_memory_used@@Base+0xe72c>
  4520c4:	ldr	x1, [x19, #24]
  4520c8:	mov	x22, x0
  4520cc:	ldrb	w0, [x1]
  4520d0:	cmp	w0, #0x45
  4520d4:	b.eq	452238 <_obstack_memory_used@@Base+0xd834>  // b.none
  4520d8:	cmp	w0, #0x70
  4520dc:	b.eq	452210 <_obstack_memory_used@@Base+0xd80c>  // b.none
  4520e0:	cmp	w0, #0x69
  4520e4:	b.ne	451c9c <_obstack_memory_used@@Base+0xd298>  // b.any
  4520e8:	ldrb	w0, [x1, #1]
  4520ec:	cmp	w0, #0x6c
  4520f0:	b.ne	451c9c <_obstack_memory_used@@Base+0xd298>  // b.any
  4520f4:	mov	x0, x19
  4520f8:	bl	451b18 <_obstack_memory_used@@Base+0xd114>
  4520fc:	mov	x3, x0
  452100:	b	451dcc <_obstack_memory_used@@Base+0xd3c8>
  452104:	cmp	w1, #0x64
  452108:	b.ne	452194 <_obstack_memory_used@@Base+0xd790>  // b.any
  45210c:	ldrb	w0, [x21, #1]
  452110:	cmp	w0, #0x74
  452114:	b.ne	452194 <_obstack_memory_used@@Base+0xd790>  // b.any
  452118:	ldrb	w0, [x21, #2]
  45211c:	cbnz	w0, 452194 <_obstack_memory_used@@Base+0xd790>
  452120:	mov	x0, x19
  452124:	bl	4543e0 <_obstack_memory_used@@Base+0xf9dc>
  452128:	ldr	x1, [x19, #24]
  45212c:	mov	x21, x0
  452130:	ldrb	w0, [x1]
  452134:	cmp	w0, #0x49
  452138:	b.ne	452050 <_obstack_memory_used@@Base+0xd64c>  // b.any
  45213c:	add	x1, x1, #0x1
  452140:	str	x1, [x19, #24]
  452144:	mov	x0, x19
  452148:	bl	4522f0 <_obstack_memory_used@@Base+0xd8ec>
  45214c:	mov	x3, x0
  452150:	mov	x2, x21
  452154:	mov	x0, x19
  452158:	mov	w1, #0x4                   	// #4
  45215c:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  452160:	mov	x21, x0
  452164:	b	452050 <_obstack_memory_used@@Base+0xd64c>
  452168:	ldr	x0, [x19, #24]
  45216c:	ldrb	w1, [x0]
  452170:	cmp	w1, #0x5f
  452174:	b.ne	451f0c <_obstack_memory_used@@Base+0xd508>  // b.any
  452178:	add	x0, x0, #0x1
  45217c:	str	x0, [x19, #24]
  452180:	mov	w1, #0x45                  	// #69
  452184:	mov	x0, x19
  452188:	bl	4512f8 <_obstack_memory_used@@Base+0xc8f4>
  45218c:	mov	x3, x0
  452190:	b	451f18 <_obstack_memory_used@@Base+0xd514>
  452194:	cmp	w1, #0x70
  452198:	b.eq	4521ec <_obstack_memory_used@@Base+0xd7e8>  // b.none
  45219c:	mov	x0, x19
  4521a0:	bl	451b18 <_obstack_memory_used@@Base+0xd114>
  4521a4:	mov	x21, x0
  4521a8:	b	452050 <_obstack_memory_used@@Base+0xd64c>
  4521ac:	ldrb	w0, [x0]
  4521b0:	sub	w1, w0, #0x63
  4521b4:	sub	w0, w0, #0x72
  4521b8:	and	w1, w1, #0xff
  4521bc:	and	w0, w0, #0xff
  4521c0:	cmp	w1, #0x1
  4521c4:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  4521c8:	b.hi	452008 <_obstack_memory_used@@Base+0xd604>  // b.pmore
  4521cc:	mov	x0, x19
  4521d0:	bl	453130 <_obstack_memory_used@@Base+0xe72c>
  4521d4:	mov	x22, x0
  4521d8:	b	452020 <_obstack_memory_used@@Base+0xd61c>
  4521dc:	mov	x0, x19
  4521e0:	bl	453d18 <_obstack_memory_used@@Base+0xf314>
  4521e4:	mov	x22, x0
  4521e8:	b	452020 <_obstack_memory_used@@Base+0xd61c>
  4521ec:	ldrb	w0, [x21, #1]
  4521f0:	cmp	w0, #0x74
  4521f4:	b.ne	45219c <_obstack_memory_used@@Base+0xd798>  // b.any
  4521f8:	ldrb	w0, [x21, #2]
  4521fc:	cbz	w0, 452120 <_obstack_memory_used@@Base+0xd71c>
  452200:	b	45219c <_obstack_memory_used@@Base+0xd798>
  452204:	mov	x0, x19
  452208:	bl	453d18 <_obstack_memory_used@@Base+0xf314>
  45220c:	b	451dac <_obstack_memory_used@@Base+0xd3a8>
  452210:	ldrb	w0, [x1, #1]
  452214:	cmp	w0, #0x69
  452218:	b.ne	451c9c <_obstack_memory_used@@Base+0xd298>  // b.any
  45221c:	add	x1, x1, #0x2
  452220:	str	x1, [x19, #24]
  452224:	mov	x0, x19
  452228:	mov	w1, #0x45                  	// #69
  45222c:	bl	4512f8 <_obstack_memory_used@@Base+0xc8f4>
  452230:	mov	x3, x0
  452234:	b	451dcc <_obstack_memory_used@@Base+0xd3c8>
  452238:	add	x1, x1, #0x1
  45223c:	mov	x3, #0x0                   	// #0
  452240:	str	x1, [x19, #24]
  452244:	b	451dcc <_obstack_memory_used@@Base+0xd3c8>
  452248:	ldr	x2, [x0, #24]
  45224c:	ldrb	w1, [x2]
  452250:	cmp	w1, #0x4c
  452254:	b.eq	4522e0 <_obstack_memory_used@@Base+0xd8dc>  // b.none
  452258:	stp	x29, x30, [sp, #-32]!
  45225c:	mov	x29, sp
  452260:	stp	x19, x20, [sp, #16]
  452264:	mov	x19, x0
  452268:	b.hi	452288 <_obstack_memory_used@@Base+0xd884>  // b.pmore
  45226c:	sub	w1, w1, #0x49
  452270:	and	w1, w1, #0xff
  452274:	cmp	w1, #0x1
  452278:	b.hi	4522d0 <_obstack_memory_used@@Base+0xd8cc>  // b.pmore
  45227c:	ldp	x19, x20, [sp, #16]
  452280:	ldp	x29, x30, [sp], #32
  452284:	b	4523b8 <_obstack_memory_used@@Base+0xd9b4>
  452288:	cmp	w1, #0x58
  45228c:	b.ne	4522d0 <_obstack_memory_used@@Base+0xd8cc>  // b.any
  452290:	add	x2, x2, #0x1
  452294:	ldr	w20, [x0, #76]
  452298:	mov	w1, #0x1                   	// #1
  45229c:	str	x2, [x0, #24]
  4522a0:	str	w1, [x0, #76]
  4522a4:	bl	451b18 <_obstack_memory_used@@Base+0xd114>
  4522a8:	str	w20, [x19, #76]
  4522ac:	ldr	x1, [x19, #24]
  4522b0:	ldrb	w2, [x1]
  4522b4:	cmp	w2, #0x45
  4522b8:	b.ne	4522e4 <_obstack_memory_used@@Base+0xd8e0>  // b.any
  4522bc:	add	x1, x1, #0x1
  4522c0:	str	x1, [x19, #24]
  4522c4:	ldp	x19, x20, [sp, #16]
  4522c8:	ldp	x29, x30, [sp], #32
  4522cc:	ret
  4522d0:	mov	x0, x19
  4522d4:	ldp	x19, x20, [sp, #16]
  4522d8:	ldp	x29, x30, [sp], #32
  4522dc:	b	453130 <_obstack_memory_used@@Base+0xe72c>
  4522e0:	b	4548c0 <_obstack_memory_used@@Base+0xfebc>
  4522e4:	mov	x0, #0x0                   	// #0
  4522e8:	b	4522c4 <_obstack_memory_used@@Base+0xd8c0>
  4522ec:	nop
  4522f0:	stp	x29, x30, [sp, #-64]!
  4522f4:	mov	x29, sp
  4522f8:	ldr	x1, [x0, #24]
  4522fc:	stp	x19, x20, [sp, #16]
  452300:	mov	x19, x0
  452304:	str	x21, [sp, #32]
  452308:	ldr	x21, [x0, #64]
  45230c:	ldrb	w2, [x1]
  452310:	cmp	w2, #0x45
  452314:	b.eq	452394 <_obstack_memory_used@@Base+0xd990>  // b.none
  452318:	add	x20, sp, #0x38
  45231c:	str	xzr, [sp, #56]
  452320:	b	452344 <_obstack_memory_used@@Base+0xd940>
  452324:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  452328:	str	x0, [x20]
  45232c:	add	x20, x0, #0x10
  452330:	cbz	x0, 452360 <_obstack_memory_used@@Base+0xd95c>
  452334:	ldr	x1, [x19, #24]
  452338:	ldrb	w0, [x1]
  45233c:	cmp	w0, #0x45
  452340:	b.eq	452374 <_obstack_memory_used@@Base+0xd970>  // b.none
  452344:	mov	x0, x19
  452348:	bl	452248 <_obstack_memory_used@@Base+0xd844>
  45234c:	mov	x3, #0x0                   	// #0
  452350:	mov	x2, x0
  452354:	mov	w1, #0x2f                  	// #47
  452358:	mov	x0, x19
  45235c:	cbnz	x2, 452324 <_obstack_memory_used@@Base+0xd920>
  452360:	mov	x0, #0x0                   	// #0
  452364:	ldp	x19, x20, [sp, #16]
  452368:	ldr	x21, [sp, #32]
  45236c:	ldp	x29, x30, [sp], #64
  452370:	ret
  452374:	add	x1, x1, #0x1
  452378:	str	x1, [x19, #24]
  45237c:	str	x21, [x19, #64]
  452380:	ldp	x19, x20, [sp, #16]
  452384:	ldr	x21, [sp, #32]
  452388:	ldr	x0, [sp, #56]
  45238c:	ldp	x29, x30, [sp], #64
  452390:	ret
  452394:	add	x1, x1, #0x1
  452398:	mov	x3, #0x0                   	// #0
  45239c:	ldr	x21, [sp, #32]
  4523a0:	str	x1, [x0, #24]
  4523a4:	ldp	x19, x20, [sp, #16]
  4523a8:	mov	x2, #0x0                   	// #0
  4523ac:	ldp	x29, x30, [sp], #64
  4523b0:	mov	w1, #0x2f                  	// #47
  4523b4:	b	450610 <_obstack_memory_used@@Base+0xbc0c>
  4523b8:	ldr	x3, [x0, #24]
  4523bc:	ldrb	w1, [x3]
  4523c0:	sub	w1, w1, #0x49
  4523c4:	and	w1, w1, #0xff
  4523c8:	cmp	w1, #0x1
  4523cc:	b.hi	4523dc <_obstack_memory_used@@Base+0xd9d8>  // b.pmore
  4523d0:	add	x3, x3, #0x1
  4523d4:	str	x3, [x0, #24]
  4523d8:	b	4522f0 <_obstack_memory_used@@Base+0xd8ec>
  4523dc:	mov	x0, #0x0                   	// #0
  4523e0:	ret
  4523e4:	nop
  4523e8:	stp	x29, x30, [sp, #-48]!
  4523ec:	mov	w3, #0x54                  	// #84
  4523f0:	mov	x29, sp
  4523f4:	ldr	x2, [x0, #24]
  4523f8:	stp	x19, x20, [sp, #16]
  4523fc:	mov	x19, x0
  452400:	str	x21, [sp, #32]
  452404:	mov	w21, w1
  452408:	ldrb	w1, [x2]
  45240c:	cmp	w1, #0x47
  452410:	ccmp	w1, w3, #0x4, ne  // ne = any
  452414:	b.ne	4524a0 <_obstack_memory_used@@Base+0xda9c>  // b.any
  452418:	ldr	w3, [x0, #72]
  45241c:	add	w1, w3, #0x14
  452420:	str	w1, [x0, #72]
  452424:	ldrb	w1, [x2]
  452428:	cmp	w1, #0x54
  45242c:	b.eq	4525c4 <_obstack_memory_used@@Base+0xdbc0>  // b.none
  452430:	cmp	w1, #0x47
  452434:	b.ne	4525ac <_obstack_memory_used@@Base+0xdba8>  // b.any
  452438:	add	x1, x2, #0x1
  45243c:	str	x1, [x0, #24]
  452440:	ldrb	w1, [x2, #1]
  452444:	cbz	w1, 4525ac <_obstack_memory_used@@Base+0xdba8>
  452448:	add	x1, x2, #0x2
  45244c:	str	x1, [x0, #24]
  452450:	ldrb	w1, [x2, #1]
  452454:	cmp	w1, #0x54
  452458:	b.eq	452960 <_obstack_memory_used@@Base+0xdf5c>  // b.none
  45245c:	b.hi	45262c <_obstack_memory_used@@Base+0xdc28>  // b.pmore
  452460:	cmp	w1, #0x41
  452464:	b.eq	4529a8 <_obstack_memory_used@@Base+0xdfa4>  // b.none
  452468:	cmp	w1, #0x52
  45246c:	b.ne	4525ac <_obstack_memory_used@@Base+0xdba8>  // b.any
  452470:	bl	452ba8 <_obstack_memory_used@@Base+0xe1a4>
  452474:	mov	x11, x0
  452478:	mov	x0, x19
  45247c:	bl	450960 <_obstack_memory_used@@Base+0xbf5c>
  452480:	mov	x3, x0
  452484:	mov	x0, x19
  452488:	mov	x2, x11
  45248c:	ldp	x19, x20, [sp, #16]
  452490:	mov	w1, #0x16                  	// #22
  452494:	ldr	x21, [sp, #32]
  452498:	ldp	x29, x30, [sp], #48
  45249c:	b	450610 <_obstack_memory_used@@Base+0xbc0c>
  4524a0:	bl	452ba8 <_obstack_memory_used@@Base+0xe1a4>
  4524a4:	mov	x20, x0
  4524a8:	cbz	x0, 4525ac <_obstack_memory_used@@Base+0xdba8>
  4524ac:	cbz	w21, 4524fc <_obstack_memory_used@@Base+0xdaf8>
  4524b0:	ldr	w0, [x19, #16]
  4524b4:	tbnz	w0, #0, 4524fc <_obstack_memory_used@@Base+0xdaf8>
  4524b8:	mov	x1, #0x1f                  	// #31
  4524bc:	mov	x2, #0x1                   	// #1
  4524c0:	movk	x1, #0x1a, lsl #48
  4524c4:	ldr	w3, [x20]
  4524c8:	sub	w0, w3, #0x1c
  4524cc:	cmp	w0, #0x34
  4524d0:	b.hi	4524e0 <_obstack_memory_used@@Base+0xdadc>  // b.pmore
  4524d4:	lsl	x0, x2, x0
  4524d8:	tst	x0, x1
  4524dc:	b.ne	452814 <_obstack_memory_used@@Base+0xde10>  // b.any
  4524e0:	cmp	w3, #0x2
  4524e4:	b.eq	45281c <_obstack_memory_used@@Base+0xde18>  // b.none
  4524e8:	mov	x0, x20
  4524ec:	ldp	x19, x20, [sp, #16]
  4524f0:	ldr	x21, [sp, #32]
  4524f4:	ldp	x29, x30, [sp], #48
  4524f8:	ret
  4524fc:	ldr	x0, [x19, #24]
  452500:	ldrb	w0, [x0]
  452504:	cmp	w0, #0x45
  452508:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  45250c:	b.eq	4524e8 <_obstack_memory_used@@Base+0xdae4>  // b.none
  452510:	mov	x1, #0x1f                  	// #31
  452514:	mov	x4, x20
  452518:	mov	x2, #0x1                   	// #1
  45251c:	movk	x1, #0x1a, lsl #48
  452520:	ldr	w3, [x4]
  452524:	cmp	w3, #0x4
  452528:	b.eq	452890 <_obstack_memory_used@@Base+0xde8c>  // b.none
  45252c:	sub	w0, w3, #0x1c
  452530:	b.hi	452720 <_obstack_memory_used@@Base+0xdd1c>  // b.pmore
  452534:	cmp	w3, #0x2
  452538:	b.ne	452544 <_obstack_memory_used@@Base+0xdb40>  // b.any
  45253c:	ldr	x4, [x4, #16]
  452540:	cbnz	x4, 452520 <_obstack_memory_used@@Base+0xdb1c>
  452544:	mov	w1, #0x0                   	// #0
  452548:	mov	x0, x19
  45254c:	bl	454270 <_obstack_memory_used@@Base+0xf86c>
  452550:	mov	x3, x0
  452554:	cbz	x0, 4525ac <_obstack_memory_used@@Base+0xdba8>
  452558:	cbnz	w21, 452578 <_obstack_memory_used@@Base+0xdb74>
  45255c:	ldr	w0, [x20]
  452560:	cmp	w0, #0x2
  452564:	b.ne	452578 <_obstack_memory_used@@Base+0xdb74>  // b.any
  452568:	ldr	w0, [x3]
  45256c:	cmp	w0, #0x29
  452570:	b.ne	452578 <_obstack_memory_used@@Base+0xdb74>  // b.any
  452574:	str	xzr, [x3, #8]
  452578:	mov	x2, x20
  45257c:	mov	x0, x19
  452580:	ldp	x19, x20, [sp, #16]
  452584:	mov	w1, #0x3                   	// #3
  452588:	ldr	x21, [sp, #32]
  45258c:	ldp	x29, x30, [sp], #48
  452590:	b	450610 <_obstack_memory_used@@Base+0xbc0c>
  452594:	cmp	w1, #0x68
  452598:	b.eq	452b3c <_obstack_memory_used@@Base+0xe138>  // b.none
  45259c:	cmp	w1, #0x76
  4525a0:	b.ne	4525ac <_obstack_memory_used@@Base+0xdba8>  // b.any
  4525a4:	bl	450f28 <_obstack_memory_used@@Base+0xc524>
  4525a8:	cbnz	w0, 452864 <_obstack_memory_used@@Base+0xde60>
  4525ac:	mov	x20, #0x0                   	// #0
  4525b0:	mov	x0, x20
  4525b4:	ldp	x19, x20, [sp, #16]
  4525b8:	ldr	x21, [sp, #32]
  4525bc:	ldp	x29, x30, [sp], #48
  4525c0:	ret
  4525c4:	add	x1, x2, #0x1
  4525c8:	str	x1, [x0, #24]
  4525cc:	ldrb	w1, [x2, #1]
  4525d0:	cbz	w1, 4525ac <_obstack_memory_used@@Base+0xdba8>
  4525d4:	add	x1, x2, #0x2
  4525d8:	str	x1, [x0, #24]
  4525dc:	ldrb	w1, [x2, #1]
  4525e0:	cmp	w1, #0x53
  4525e4:	b.eq	452aac <_obstack_memory_used@@Base+0xe0a8>  // b.none
  4525e8:	b.hi	4527a0 <_obstack_memory_used@@Base+0xdd9c>  // b.pmore
  4525ec:	cmp	w1, #0x48
  4525f0:	b.eq	452a88 <_obstack_memory_used@@Base+0xe084>  // b.none
  4525f4:	b.hi	45276c <_obstack_memory_used@@Base+0xdd68>  // b.pmore
  4525f8:	cmp	w1, #0x43
  4525fc:	b.eq	452a28 <_obstack_memory_used@@Base+0xe024>  // b.none
  452600:	cmp	w1, #0x46
  452604:	b.ne	452740 <_obstack_memory_used@@Base+0xdd3c>  // b.any
  452608:	bl	453130 <_obstack_memory_used@@Base+0xe72c>
  45260c:	mov	x2, x0
  452610:	mov	x0, x19
  452614:	mov	x3, #0x0                   	// #0
  452618:	ldp	x19, x20, [sp, #16]
  45261c:	mov	w1, #0xe                   	// #14
  452620:	ldr	x21, [sp, #32]
  452624:	ldp	x29, x30, [sp], #48
  452628:	b	450610 <_obstack_memory_used@@Base+0xbc0c>
  45262c:	cmp	w1, #0x56
  452630:	b.eq	45293c <_obstack_memory_used@@Base+0xdf38>  // b.none
  452634:	cmp	w1, #0x72
  452638:	b.ne	4525ac <_obstack_memory_used@@Base+0xdba8>  // b.any
  45263c:	add	x0, x0, #0x18
  452640:	bl	450890 <_obstack_memory_used@@Base+0xbe8c>
  452644:	cmp	w0, #0x1
  452648:	b.le	4525ac <_obstack_memory_used@@Base+0xdba8>
  45264c:	ldr	x1, [x19, #24]
  452650:	ldrb	w2, [x1]
  452654:	cbz	w2, 4525ac <_obstack_memory_used@@Base+0xdba8>
  452658:	add	x8, x1, #0x1
  45265c:	str	x8, [x19, #24]
  452660:	ldrb	w1, [x1]
  452664:	cmp	w1, #0x5f
  452668:	b.ne	4525ac <_obstack_memory_used@@Base+0xdba8>  // b.any
  45266c:	sub	w9, w0, #0x1
  452670:	mov	x2, #0x0                   	// #0
  452674:	mov	w11, #0x18                  	// #24
  452678:	mov	w10, #0x41                  	// #65
  45267c:	ldrb	w0, [x8]
  452680:	cbz	w0, 4525ac <_obstack_memory_used@@Base+0xdba8>
  452684:	cmp	w0, #0x24
  452688:	b.ne	4528d4 <_obstack_memory_used@@Base+0xded0>  // b.any
  45268c:	ldrb	w0, [x8, #1]
  452690:	cmp	w0, #0x53
  452694:	b.eq	4529e0 <_obstack_memory_used@@Base+0xdfdc>  // b.none
  452698:	cmp	w0, #0x5f
  45269c:	b.eq	4529d8 <_obstack_memory_used@@Base+0xdfd4>  // b.none
  4526a0:	cmp	w0, #0x24
  4526a4:	b.ne	4525ac <_obstack_memory_used@@Base+0xdba8>  // b.any
  4526a8:	ldp	w1, w3, [x19, #40]
  4526ac:	ldr	x8, [x19, #24]
  4526b0:	cmp	w1, w3
  4526b4:	add	x8, x8, #0x2
  4526b8:	b.ge	452b70 <_obstack_memory_used@@Base+0xe16c>  // b.tcont
  4526bc:	ldr	x5, [x19, #32]
  4526c0:	smull	x4, w1, w11
  4526c4:	add	w1, w1, #0x1
  4526c8:	sub	w9, w9, #0x2
  4526cc:	add	x3, x5, x4
  4526d0:	str	wzr, [x3, #4]
  4526d4:	str	w1, [x19, #40]
  4526d8:	str	w10, [x5, x4]
  4526dc:	str	w0, [x3, #8]
  4526e0:	str	x8, [x19, #24]
  4526e4:	cbz	x2, 4529d0 <_obstack_memory_used@@Base+0xdfcc>
  4526e8:	mov	x0, x19
  4526ec:	mov	w1, #0x40                  	// #64
  4526f0:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  4526f4:	mov	x2, x0
  4526f8:	cbz	x0, 4525ac <_obstack_memory_used@@Base+0xdba8>
  4526fc:	cmp	w9, #0x0
  452700:	b.gt	45267c <_obstack_memory_used@@Base+0xdc78>
  452704:	mov	x0, x19
  452708:	mov	x3, #0x0                   	// #0
  45270c:	ldp	x19, x20, [sp, #16]
  452710:	mov	w1, #0x3f                  	// #63
  452714:	ldr	x21, [sp, #32]
  452718:	ldp	x29, x30, [sp], #48
  45271c:	b	450610 <_obstack_memory_used@@Base+0xbc0c>
  452720:	cmp	w0, #0x34
  452724:	b.hi	452544 <_obstack_memory_used@@Base+0xdb40>  // b.pmore
  452728:	lsl	x0, x2, x0
  45272c:	tst	x0, x1
  452730:	b.eq	452544 <_obstack_memory_used@@Base+0xdb40>  // b.none
  452734:	ldr	x4, [x4, #8]
  452738:	cbnz	x4, 452520 <_obstack_memory_used@@Base+0xdb1c>
  45273c:	b	452544 <_obstack_memory_used@@Base+0xdb40>
  452740:	cmp	w1, #0x41
  452744:	b.ne	4525ac <_obstack_memory_used@@Base+0xdba8>  // b.any
  452748:	bl	452248 <_obstack_memory_used@@Base+0xd844>
  45274c:	mov	x2, x0
  452750:	mov	x0, x19
  452754:	mov	x3, #0x0                   	// #0
  452758:	ldp	x19, x20, [sp, #16]
  45275c:	mov	w1, #0x30                  	// #48
  452760:	ldr	x21, [sp, #32]
  452764:	ldp	x29, x30, [sp], #48
  452768:	b	450610 <_obstack_memory_used@@Base+0xbc0c>
  45276c:	cmp	w1, #0x49
  452770:	b.eq	452b18 <_obstack_memory_used@@Base+0xe114>  // b.none
  452774:	cmp	w1, #0x4a
  452778:	b.ne	4525ac <_obstack_memory_used@@Base+0xdba8>  // b.any
  45277c:	bl	453130 <_obstack_memory_used@@Base+0xe72c>
  452780:	mov	x2, x0
  452784:	mov	x0, x19
  452788:	mov	x3, #0x0                   	// #0
  45278c:	ldp	x19, x20, [sp, #16]
  452790:	mov	w1, #0x12                  	// #18
  452794:	ldr	x21, [sp, #32]
  452798:	ldp	x29, x30, [sp], #48
  45279c:	b	450610 <_obstack_memory_used@@Base+0xbc0c>
  4527a0:	cmp	w1, #0x63
  4527a4:	b.eq	452ad0 <_obstack_memory_used@@Base+0xe0cc>  // b.none
  4527a8:	b.hi	452594 <_obstack_memory_used@@Base+0xdb90>  // b.pmore
  4527ac:	cmp	w1, #0x56
  4527b0:	b.eq	4529fc <_obstack_memory_used@@Base+0xdff8>  // b.none
  4527b4:	cmp	w1, #0x57
  4527b8:	b.ne	4527e0 <_obstack_memory_used@@Base+0xdddc>  // b.any
  4527bc:	bl	452ba8 <_obstack_memory_used@@Base+0xe1a4>
  4527c0:	mov	x2, x0
  4527c4:	mov	x0, x19
  4527c8:	mov	x3, #0x0                   	// #0
  4527cc:	ldp	x19, x20, [sp, #16]
  4527d0:	mov	w1, #0x15                  	// #21
  4527d4:	ldr	x21, [sp, #32]
  4527d8:	ldp	x29, x30, [sp], #48
  4527dc:	b	450610 <_obstack_memory_used@@Base+0xbc0c>
  4527e0:	cmp	w1, #0x54
  4527e4:	b.ne	4525ac <_obstack_memory_used@@Base+0xdba8>  // b.any
  4527e8:	add	w3, w3, #0xa
  4527ec:	str	w3, [x0, #72]
  4527f0:	bl	453130 <_obstack_memory_used@@Base+0xe72c>
  4527f4:	mov	x2, x0
  4527f8:	mov	x0, x19
  4527fc:	mov	x3, #0x0                   	// #0
  452800:	ldp	x19, x20, [sp, #16]
  452804:	mov	w1, #0xa                   	// #10
  452808:	ldr	x21, [sp, #32]
  45280c:	ldp	x29, x30, [sp], #48
  452810:	b	450610 <_obstack_memory_used@@Base+0xbc0c>
  452814:	ldr	x20, [x20, #8]
  452818:	b	4524c4 <_obstack_memory_used@@Base+0xdac0>
  45281c:	ldr	x3, [x20, #16]
  452820:	mov	x1, #0x1f                  	// #31
  452824:	mov	x2, #0x1                   	// #1
  452828:	movk	x1, #0x1a, lsl #48
  45282c:	ldr	w0, [x3]
  452830:	sub	w0, w0, #0x1c
  452834:	cmp	w0, #0x34
  452838:	b.hi	4524e8 <_obstack_memory_used@@Base+0xdae4>  // b.pmore
  45283c:	lsl	x0, x2, x0
  452840:	tst	x0, x1
  452844:	b.eq	4524e8 <_obstack_memory_used@@Base+0xdae4>  // b.none
  452848:	ldr	x3, [x3, #8]
  45284c:	str	x3, [x20, #16]
  452850:	ldr	w0, [x3]
  452854:	sub	w0, w0, #0x1c
  452858:	cmp	w0, #0x34
  45285c:	b.ls	45283c <_obstack_memory_used@@Base+0xde38>  // b.plast
  452860:	b	4524e8 <_obstack_memory_used@@Base+0xdae4>
  452864:	mov	x0, x19
  452868:	mov	w1, #0x0                   	// #0
  45286c:	bl	4523e8 <_obstack_memory_used@@Base+0xd9e4>
  452870:	mov	x2, x0
  452874:	mov	x0, x19
  452878:	mov	x3, #0x0                   	// #0
  45287c:	ldp	x19, x20, [sp, #16]
  452880:	mov	w1, #0x10                  	// #16
  452884:	ldr	x21, [sp, #32]
  452888:	ldp	x29, x30, [sp], #48
  45288c:	b	450610 <_obstack_memory_used@@Base+0xbc0c>
  452890:	ldr	x1, [x4, #8]
  452894:	cbz	x1, 4528c0 <_obstack_memory_used@@Base+0xdebc>
  452898:	ldr	w0, [x1]
  45289c:	sub	w2, w0, #0x1
  4528a0:	cmp	w0, #0x8
  4528a4:	b.hi	4528c8 <_obstack_memory_used@@Base+0xdec4>  // b.pmore
  4528a8:	cmp	w0, #0x6
  4528ac:	b.hi	452544 <_obstack_memory_used@@Base+0xdb40>  // b.pmore
  4528b0:	cmp	w2, #0x1
  4528b4:	b.hi	4528c0 <_obstack_memory_used@@Base+0xdebc>  // b.pmore
  4528b8:	ldr	x1, [x1, #16]
  4528bc:	cbnz	x1, 452898 <_obstack_memory_used@@Base+0xde94>
  4528c0:	mov	w1, #0x1                   	// #1
  4528c4:	b	452548 <_obstack_memory_used@@Base+0xdb44>
  4528c8:	cmp	w0, #0x35
  4528cc:	cset	w1, ne  // ne = any
  4528d0:	b	452548 <_obstack_memory_used@@Base+0xdb44>
  4528d4:	mov	x1, #0x1                   	// #1
  4528d8:	b	4528e0 <_obstack_memory_used@@Base+0xdedc>
  4528dc:	mov	x1, x4
  4528e0:	cmp	w9, w1
  4528e4:	mov	w5, w1
  4528e8:	b.le	452900 <_obstack_memory_used@@Base+0xdefc>
  4528ec:	ldrb	w3, [x8, x1]
  4528f0:	add	x4, x1, #0x1
  4528f4:	cmp	w3, #0x24
  4528f8:	ccmp	w3, #0x0, #0x4, ne  // ne = any
  4528fc:	b.ne	4528dc <_obstack_memory_used@@Base+0xded8>  // b.any
  452900:	ldp	w3, w0, [x19, #40]
  452904:	cmp	w3, w0
  452908:	b.ge	4529e8 <_obstack_memory_used@@Base+0xdfe4>  // b.tcont
  45290c:	ldr	x4, [x19, #32]
  452910:	add	w0, w3, #0x1
  452914:	sub	w9, w9, w5
  452918:	smaddl	x3, w3, w11, x4
  45291c:	str	wzr, [x3, #4]
  452920:	str	w0, [x19, #40]
  452924:	stp	xzr, x8, [x3]
  452928:	ldr	x8, [x19, #24]
  45292c:	str	w5, [x3, #16]
  452930:	add	x8, x8, x1
  452934:	str	x8, [x19, #24]
  452938:	b	4526e4 <_obstack_memory_used@@Base+0xdce0>
  45293c:	bl	452ba8 <_obstack_memory_used@@Base+0xe1a4>
  452940:	mov	x2, x0
  452944:	mov	x0, x19
  452948:	mov	x3, #0x0                   	// #0
  45294c:	ldp	x19, x20, [sp, #16]
  452950:	mov	w1, #0x13                  	// #19
  452954:	ldr	x21, [sp, #32]
  452958:	ldp	x29, x30, [sp], #48
  45295c:	b	450610 <_obstack_memory_used@@Base+0xbc0c>
  452960:	ldrb	w1, [x2, #2]
  452964:	cbz	w1, 45297c <_obstack_memory_used@@Base+0xdf78>
  452968:	add	x1, x2, #0x3
  45296c:	str	x1, [x0, #24]
  452970:	ldrb	w1, [x2, #2]
  452974:	cmp	w1, #0x6e
  452978:	b.eq	452b7c <_obstack_memory_used@@Base+0xe178>  // b.none
  45297c:	mov	x0, x19
  452980:	mov	w1, #0x0                   	// #0
  452984:	bl	4523e8 <_obstack_memory_used@@Base+0xd9e4>
  452988:	mov	x2, x0
  45298c:	mov	x0, x19
  452990:	mov	x3, #0x0                   	// #0
  452994:	ldp	x19, x20, [sp, #16]
  452998:	mov	w1, #0x49                  	// #73
  45299c:	ldr	x21, [sp, #32]
  4529a0:	ldp	x29, x30, [sp], #48
  4529a4:	b	450610 <_obstack_memory_used@@Base+0xbc0c>
  4529a8:	mov	w1, #0x0                   	// #0
  4529ac:	bl	4523e8 <_obstack_memory_used@@Base+0xd9e4>
  4529b0:	mov	x2, x0
  4529b4:	mov	x0, x19
  4529b8:	ldp	x19, x20, [sp, #16]
  4529bc:	mov	x3, #0x0                   	// #0
  4529c0:	ldr	x21, [sp, #32]
  4529c4:	mov	w1, #0x17                  	// #23
  4529c8:	ldp	x29, x30, [sp], #48
  4529cc:	b	450610 <_obstack_memory_used@@Base+0xbc0c>
  4529d0:	mov	x2, x3
  4529d4:	b	4526fc <_obstack_memory_used@@Base+0xdcf8>
  4529d8:	mov	w0, #0x2e                  	// #46
  4529dc:	b	4526a8 <_obstack_memory_used@@Base+0xdca4>
  4529e0:	mov	w0, #0x2f                  	// #47
  4529e4:	b	4526a8 <_obstack_memory_used@@Base+0xdca4>
  4529e8:	ldr	x0, [x19, #24]
  4529ec:	mov	x20, #0x0                   	// #0
  4529f0:	add	x1, x0, x1
  4529f4:	str	x1, [x19, #24]
  4529f8:	b	4524e8 <_obstack_memory_used@@Base+0xdae4>
  4529fc:	add	w3, w3, #0xf
  452a00:	str	w3, [x0, #72]
  452a04:	bl	453130 <_obstack_memory_used@@Base+0xe72c>
  452a08:	mov	x2, x0
  452a0c:	mov	x0, x19
  452a10:	mov	x3, #0x0                   	// #0
  452a14:	ldp	x19, x20, [sp, #16]
  452a18:	mov	w1, #0x9                   	// #9
  452a1c:	ldr	x21, [sp, #32]
  452a20:	ldp	x29, x30, [sp], #48
  452a24:	b	450610 <_obstack_memory_used@@Base+0xbc0c>
  452a28:	bl	453130 <_obstack_memory_used@@Base+0xe72c>
  452a2c:	mov	x20, x0
  452a30:	add	x0, x19, #0x18
  452a34:	bl	450890 <_obstack_memory_used@@Base+0xbe8c>
  452a38:	tbnz	w0, #31, 4525ac <_obstack_memory_used@@Base+0xdba8>
  452a3c:	ldr	x0, [x19, #24]
  452a40:	ldrb	w1, [x0]
  452a44:	cmp	w1, #0x5f
  452a48:	b.ne	4525ac <_obstack_memory_used@@Base+0xdba8>  // b.any
  452a4c:	add	x0, x0, #0x1
  452a50:	str	x0, [x19, #24]
  452a54:	mov	x0, x19
  452a58:	bl	453130 <_obstack_memory_used@@Base+0xe72c>
  452a5c:	mov	x2, x0
  452a60:	ldr	w1, [x19, #72]
  452a64:	mov	x3, x20
  452a68:	ldr	x21, [sp, #32]
  452a6c:	add	w1, w1, #0x5
  452a70:	str	w1, [x19, #72]
  452a74:	mov	x0, x19
  452a78:	ldp	x19, x20, [sp, #16]
  452a7c:	mov	w1, #0xb                   	// #11
  452a80:	ldp	x29, x30, [sp], #48
  452a84:	b	450610 <_obstack_memory_used@@Base+0xbc0c>
  452a88:	bl	452ba8 <_obstack_memory_used@@Base+0xe1a4>
  452a8c:	mov	x2, x0
  452a90:	mov	x0, x19
  452a94:	mov	x3, #0x0                   	// #0
  452a98:	ldp	x19, x20, [sp, #16]
  452a9c:	mov	w1, #0x14                  	// #20
  452aa0:	ldr	x21, [sp, #32]
  452aa4:	ldp	x29, x30, [sp], #48
  452aa8:	b	450610 <_obstack_memory_used@@Base+0xbc0c>
  452aac:	bl	453130 <_obstack_memory_used@@Base+0xe72c>
  452ab0:	mov	x2, x0
  452ab4:	mov	x0, x19
  452ab8:	mov	x3, #0x0                   	// #0
  452abc:	ldp	x19, x20, [sp, #16]
  452ac0:	mov	w1, #0xd                   	// #13
  452ac4:	ldr	x21, [sp, #32]
  452ac8:	ldp	x29, x30, [sp], #48
  452acc:	b	450610 <_obstack_memory_used@@Base+0xbc0c>
  452ad0:	mov	w1, #0x0                   	// #0
  452ad4:	bl	450f28 <_obstack_memory_used@@Base+0xc524>
  452ad8:	cbz	w0, 4525ac <_obstack_memory_used@@Base+0xdba8>
  452adc:	mov	x0, x19
  452ae0:	mov	w1, #0x0                   	// #0
  452ae4:	bl	450f28 <_obstack_memory_used@@Base+0xc524>
  452ae8:	cbz	w0, 4525ac <_obstack_memory_used@@Base+0xdba8>
  452aec:	mov	x0, x19
  452af0:	mov	w1, #0x0                   	// #0
  452af4:	bl	4523e8 <_obstack_memory_used@@Base+0xd9e4>
  452af8:	mov	x2, x0
  452afc:	mov	x0, x19
  452b00:	mov	x3, #0x0                   	// #0
  452b04:	ldp	x19, x20, [sp, #16]
  452b08:	mov	w1, #0x11                  	// #17
  452b0c:	ldr	x21, [sp, #32]
  452b10:	ldp	x29, x30, [sp], #48
  452b14:	b	450610 <_obstack_memory_used@@Base+0xbc0c>
  452b18:	bl	453130 <_obstack_memory_used@@Base+0xe72c>
  452b1c:	mov	x2, x0
  452b20:	mov	x0, x19
  452b24:	mov	x3, #0x0                   	// #0
  452b28:	ldp	x19, x20, [sp, #16]
  452b2c:	mov	w1, #0xc                   	// #12
  452b30:	ldr	x21, [sp, #32]
  452b34:	ldp	x29, x30, [sp], #48
  452b38:	b	450610 <_obstack_memory_used@@Base+0xbc0c>
  452b3c:	bl	450f28 <_obstack_memory_used@@Base+0xc524>
  452b40:	cbz	w0, 4525ac <_obstack_memory_used@@Base+0xdba8>
  452b44:	mov	x0, x19
  452b48:	mov	w1, #0x0                   	// #0
  452b4c:	bl	4523e8 <_obstack_memory_used@@Base+0xd9e4>
  452b50:	mov	x2, x0
  452b54:	mov	x0, x19
  452b58:	mov	x3, #0x0                   	// #0
  452b5c:	ldp	x19, x20, [sp, #16]
  452b60:	mov	w1, #0xf                   	// #15
  452b64:	ldr	x21, [sp, #32]
  452b68:	ldp	x29, x30, [sp], #48
  452b6c:	b	450610 <_obstack_memory_used@@Base+0xbc0c>
  452b70:	mov	x20, #0x0                   	// #0
  452b74:	str	x8, [x19, #24]
  452b78:	b	4524e8 <_obstack_memory_used@@Base+0xdae4>
  452b7c:	mov	w1, #0x0                   	// #0
  452b80:	bl	4523e8 <_obstack_memory_used@@Base+0xd9e4>
  452b84:	mov	x2, x0
  452b88:	mov	x0, x19
  452b8c:	ldp	x19, x20, [sp, #16]
  452b90:	mov	x3, #0x0                   	// #0
  452b94:	ldr	x21, [sp, #32]
  452b98:	mov	w1, #0x4a                  	// #74
  452b9c:	ldp	x29, x30, [sp], #48
  452ba0:	b	450610 <_obstack_memory_used@@Base+0xbc0c>
  452ba4:	nop
  452ba8:	stp	x29, x30, [sp, #-112]!
  452bac:	mov	x29, sp
  452bb0:	ldr	x2, [x0, #24]
  452bb4:	stp	x19, x20, [sp, #16]
  452bb8:	ldrb	w1, [x2]
  452bbc:	cmp	w1, #0x55
  452bc0:	b.eq	452da8 <_obstack_memory_used@@Base+0xe3a4>  // b.none
  452bc4:	mov	x19, x0
  452bc8:	b.hi	452c78 <_obstack_memory_used@@Base+0xe274>  // b.pmore
  452bcc:	cmp	w1, #0x4e
  452bd0:	b.eq	452dc0 <_obstack_memory_used@@Base+0xe3bc>  // b.none
  452bd4:	cmp	w1, #0x53
  452bd8:	b.ne	452d48 <_obstack_memory_used@@Base+0xe344>  // b.any
  452bdc:	ldrb	w1, [x2, #1]
  452be0:	cmp	w1, #0x74
  452be4:	b.ne	452d08 <_obstack_memory_used@@Base+0xe304>  // b.any
  452be8:	ldp	w0, w1, [x0, #40]
  452bec:	add	x2, x2, #0x2
  452bf0:	str	x2, [x19, #24]
  452bf4:	cmp	w0, w1
  452bf8:	b.ge	45307c <_obstack_memory_used@@Base+0xe678>  // b.tcont
  452bfc:	mov	w3, #0x18                  	// #24
  452c00:	add	w1, w0, #0x1
  452c04:	ldr	x2, [x19, #32]
  452c08:	smull	x0, w0, w3
  452c0c:	str	w1, [x19, #40]
  452c10:	mov	w3, #0x3                   	// #3
  452c14:	add	x20, x2, x0
  452c18:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x285fc>
  452c1c:	add	x1, x1, #0x778
  452c20:	str	xzr, [x2, x0]
  452c24:	str	x1, [x20, #8]
  452c28:	str	w3, [x20, #16]
  452c2c:	mov	x0, x19
  452c30:	bl	4543e0 <_obstack_memory_used@@Base+0xf9dc>
  452c34:	mov	x2, x20
  452c38:	mov	x3, x0
  452c3c:	mov	w1, #0x1                   	// #1
  452c40:	mov	x0, x19
  452c44:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  452c48:	mov	x20, x0
  452c4c:	ldr	w1, [x19, #72]
  452c50:	ldr	x2, [x19, #24]
  452c54:	add	w1, w1, #0x3
  452c58:	str	w1, [x19, #72]
  452c5c:	ldrb	w0, [x2]
  452c60:	cmp	w0, #0x49
  452c64:	b.eq	453028 <_obstack_memory_used@@Base+0xe624>  // b.none
  452c68:	mov	x0, x20
  452c6c:	ldp	x19, x20, [sp, #16]
  452c70:	ldp	x29, x30, [sp], #112
  452c74:	ret
  452c78:	cmp	w1, #0x5a
  452c7c:	b.ne	452d48 <_obstack_memory_used@@Base+0xe344>  // b.any
  452c80:	add	x2, x2, #0x1
  452c84:	str	x2, [x0, #24]
  452c88:	mov	w1, #0x0                   	// #0
  452c8c:	bl	4523e8 <_obstack_memory_used@@Base+0xd9e4>
  452c90:	mov	x20, x0
  452c94:	cbz	x0, 452d40 <_obstack_memory_used@@Base+0xe33c>
  452c98:	ldr	x0, [x19, #24]
  452c9c:	ldrb	w1, [x0]
  452ca0:	cmp	w1, #0x45
  452ca4:	b.ne	452d40 <_obstack_memory_used@@Base+0xe33c>  // b.any
  452ca8:	add	x1, x0, #0x1
  452cac:	str	x1, [x19, #24]
  452cb0:	ldrb	w1, [x0, #1]
  452cb4:	cmp	w1, #0x73
  452cb8:	b.eq	4530a4 <_obstack_memory_used@@Base+0xe6a0>  // b.none
  452cbc:	cmp	w1, #0x64
  452cc0:	b.eq	452f4c <_obstack_memory_used@@Base+0xe548>  // b.none
  452cc4:	mov	x0, x19
  452cc8:	bl	452ba8 <_obstack_memory_used@@Base+0xe1a4>
  452ccc:	mov	x3, x0
  452cd0:	cbz	x0, 452ce4 <_obstack_memory_used@@Base+0xe2e0>
  452cd4:	ldr	w0, [x0]
  452cd8:	sub	w0, w0, #0x46
  452cdc:	tst	w0, #0xfffffffd
  452ce0:	b.ne	4530f8 <_obstack_memory_used@@Base+0xe6f4>  // b.any
  452ce4:	ldr	w0, [x20]
  452ce8:	cmp	w0, #0x3
  452cec:	b.eq	453064 <_obstack_memory_used@@Base+0xe660>  // b.none
  452cf0:	mov	x2, x20
  452cf4:	mov	x0, x19
  452cf8:	mov	w1, #0x2                   	// #2
  452cfc:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  452d00:	mov	x20, x0
  452d04:	b	452c68 <_obstack_memory_used@@Base+0xe264>
  452d08:	mov	w1, #0x0                   	// #0
  452d0c:	bl	450cc0 <_obstack_memory_used@@Base+0xc2bc>
  452d10:	ldr	x1, [x19, #24]
  452d14:	mov	x20, x0
  452d18:	ldrb	w0, [x1]
  452d1c:	cmp	w0, #0x49
  452d20:	b.ne	452c68 <_obstack_memory_used@@Base+0xe264>  // b.any
  452d24:	mov	x0, x19
  452d28:	b	452d88 <_obstack_memory_used@@Base+0xe384>
  452d2c:	mov	x0, x19
  452d30:	bl	451028 <_obstack_memory_used@@Base+0xc624>
  452d34:	cbnz	w0, 452f88 <_obstack_memory_used@@Base+0xe584>
  452d38:	ldp	x21, x22, [sp, #32]
  452d3c:	nop
  452d40:	mov	x20, #0x0                   	// #0
  452d44:	b	452c68 <_obstack_memory_used@@Base+0xe264>
  452d48:	mov	x0, x19
  452d4c:	bl	4543e0 <_obstack_memory_used@@Base+0xf9dc>
  452d50:	ldr	x1, [x19, #24]
  452d54:	mov	x20, x0
  452d58:	ldrb	w0, [x1]
  452d5c:	cmp	w0, #0x49
  452d60:	b.ne	452c68 <_obstack_memory_used@@Base+0xe264>  // b.any
  452d64:	cbz	x20, 452d40 <_obstack_memory_used@@Base+0xe33c>
  452d68:	ldp	w1, w0, [x19, #56]
  452d6c:	cmp	w1, w0
  452d70:	b.ge	452d40 <_obstack_memory_used@@Base+0xe33c>  // b.tcont
  452d74:	ldr	x3, [x19, #48]
  452d78:	mov	x0, x19
  452d7c:	add	w2, w1, #0x1
  452d80:	str	x20, [x3, w1, sxtw #3]
  452d84:	str	w2, [x19, #56]
  452d88:	bl	4523b8 <_obstack_memory_used@@Base+0xd9b4>
  452d8c:	mov	x3, x0
  452d90:	mov	x2, x20
  452d94:	mov	x0, x19
  452d98:	mov	w1, #0x4                   	// #4
  452d9c:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  452da0:	mov	x20, x0
  452da4:	b	452c68 <_obstack_memory_used@@Base+0xe264>
  452da8:	bl	4543e0 <_obstack_memory_used@@Base+0xf9dc>
  452dac:	mov	x20, x0
  452db0:	mov	x0, x20
  452db4:	ldp	x19, x20, [sp, #16]
  452db8:	ldp	x29, x30, [sp], #112
  452dbc:	ret
  452dc0:	stp	x21, x22, [sp, #32]
  452dc4:	add	x2, x2, #0x1
  452dc8:	add	x1, sp, #0x68
  452dcc:	str	x2, [x0, #24]
  452dd0:	mov	w2, #0x1                   	// #1
  452dd4:	bl	453fe0 <_obstack_memory_used@@Base+0xf5dc>
  452dd8:	mov	x22, x0
  452ddc:	cbz	x0, 453058 <_obstack_memory_used@@Base+0xe654>
  452de0:	mov	x1, #0x0                   	// #0
  452de4:	mov	x0, x19
  452de8:	stp	x23, x24, [sp, #48]
  452dec:	bl	450698 <_obstack_memory_used@@Base+0xbc94>
  452df0:	mov	x23, x0
  452df4:	ldr	x1, [x19, #24]
  452df8:	ldrb	w20, [x1]
  452dfc:	cbz	w20, 452eb4 <_obstack_memory_used@@Base+0xe4b0>
  452e00:	mov	x21, #0x0                   	// #0
  452e04:	mov	w24, #0x4c                  	// #76
  452e08:	stp	x25, x26, [sp, #64]
  452e0c:	mov	w25, #0x55                  	// #85
  452e10:	cmp	w20, #0x44
  452e14:	b.eq	452ec8 <_obstack_memory_used@@Base+0xe4c4>  // b.none
  452e18:	sub	w2, w20, #0x30
  452e1c:	sub	w0, w20, #0x61
  452e20:	and	w2, w2, #0xff
  452e24:	and	w0, w0, #0xff
  452e28:	cmp	w2, #0x9
  452e2c:	mov	x26, x21
  452e30:	ccmp	w0, #0x19, #0x0, hi  // hi = pmore
  452e34:	b.ls	452e48 <_obstack_memory_used@@Base+0xe444>  // b.plast
  452e38:	cmp	w20, #0x43
  452e3c:	ccmp	w20, w25, #0x4, ne  // ne = any
  452e40:	ccmp	w20, w24, #0x4, ne  // ne = any
  452e44:	b.ne	452f14 <_obstack_memory_used@@Base+0xe510>  // b.any
  452e48:	mov	x0, x19
  452e4c:	bl	4543e0 <_obstack_memory_used@@Base+0xf9dc>
  452e50:	mov	x21, x0
  452e54:	cbz	x26, 452e70 <_obstack_memory_used@@Base+0xe46c>
  452e58:	mov	w1, #0x1                   	// #1
  452e5c:	mov	x3, x21
  452e60:	mov	x2, x26
  452e64:	mov	x0, x19
  452e68:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  452e6c:	mov	x21, x0
  452e70:	cmp	w20, #0x53
  452e74:	ldr	x1, [x19, #24]
  452e78:	b.eq	452ea8 <_obstack_memory_used@@Base+0xe4a4>  // b.none
  452e7c:	ldrb	w20, [x1]
  452e80:	cmp	w20, #0x45
  452e84:	b.eq	452efc <_obstack_memory_used@@Base+0xe4f8>  // b.none
  452e88:	cbz	x21, 452eb0 <_obstack_memory_used@@Base+0xe4ac>
  452e8c:	ldp	w0, w2, [x19, #56]
  452e90:	cmp	w0, w2
  452e94:	b.ge	452eb0 <_obstack_memory_used@@Base+0xe4ac>  // b.tcont
  452e98:	ldr	x3, [x19, #48]
  452e9c:	add	w2, w0, #0x1
  452ea0:	str	x21, [x3, w0, sxtw #3]
  452ea4:	str	w2, [x19, #56]
  452ea8:	ldrb	w20, [x1]
  452eac:	cbnz	w20, 452e10 <_obstack_memory_used@@Base+0xe40c>
  452eb0:	ldp	x25, x26, [sp, #64]
  452eb4:	mov	x20, #0x0                   	// #0
  452eb8:	ldp	x23, x24, [sp, #48]
  452ebc:	str	xzr, [x22]
  452ec0:	ldp	x21, x22, [sp, #32]
  452ec4:	b	452c68 <_obstack_memory_used@@Base+0xe264>
  452ec8:	ldrb	w0, [x1, #1]
  452ecc:	and	w0, w0, #0xffffffdf
  452ed0:	and	w0, w0, #0xff
  452ed4:	cmp	w0, #0x54
  452ed8:	mov	x0, x19
  452edc:	b.ne	452f04 <_obstack_memory_used@@Base+0xe500>  // b.any
  452ee0:	mov	x26, x21
  452ee4:	bl	453130 <_obstack_memory_used@@Base+0xe72c>
  452ee8:	mov	x21, x0
  452eec:	mov	w1, #0x1                   	// #1
  452ef0:	cbnz	x26, 452e5c <_obstack_memory_used@@Base+0xe458>
  452ef4:	ldr	x1, [x19, #24]
  452ef8:	b	452e7c <_obstack_memory_used@@Base+0xe478>
  452efc:	mov	x26, x21
  452f00:	b	452e38 <_obstack_memory_used@@Base+0xe434>
  452f04:	mov	x26, x21
  452f08:	bl	4543e0 <_obstack_memory_used@@Base+0xf9dc>
  452f0c:	mov	x21, x0
  452f10:	b	452eec <_obstack_memory_used@@Base+0xe4e8>
  452f14:	cmp	w20, #0x53
  452f18:	b.eq	452fc8 <_obstack_memory_used@@Base+0xe5c4>  // b.none
  452f1c:	cmp	w20, #0x49
  452f20:	b.eq	453084 <_obstack_memory_used@@Base+0xe680>  // b.none
  452f24:	cmp	w20, #0x54
  452f28:	b.eq	453120 <_obstack_memory_used@@Base+0xe71c>  // b.none
  452f2c:	cmp	w20, #0x45
  452f30:	b.eq	452fe4 <_obstack_memory_used@@Base+0xe5e0>  // b.none
  452f34:	cmp	w20, #0x4d
  452f38:	ccmp	x21, #0x0, #0x4, eq  // eq = none
  452f3c:	b.eq	452eb0 <_obstack_memory_used@@Base+0xe4ac>  // b.none
  452f40:	add	x1, x1, #0x1
  452f44:	str	x1, [x19, #24]
  452f48:	b	452ea8 <_obstack_memory_used@@Base+0xe4a4>
  452f4c:	stp	x21, x22, [sp, #32]
  452f50:	add	x0, x0, #0x2
  452f54:	str	x0, [x19, #24]
  452f58:	mov	x0, x19
  452f5c:	bl	4509c8 <_obstack_memory_used@@Base+0xbfc4>
  452f60:	mov	w21, w0
  452f64:	tbnz	w0, #31, 452d38 <_obstack_memory_used@@Base+0xe334>
  452f68:	mov	x0, x19
  452f6c:	bl	452ba8 <_obstack_memory_used@@Base+0xe1a4>
  452f70:	mov	x11, x0
  452f74:	cbz	x0, 452f88 <_obstack_memory_used@@Base+0xe584>
  452f78:	ldr	w0, [x0]
  452f7c:	sub	w0, w0, #0x46
  452f80:	tst	w0, #0xfffffffd
  452f84:	b.ne	452d2c <_obstack_memory_used@@Base+0xe328>  // b.any
  452f88:	ldp	w1, w0, [x19, #40]
  452f8c:	cmp	w1, w0
  452f90:	b.ge	453114 <_obstack_memory_used@@Base+0xe710>  // b.tcont
  452f94:	mov	w2, #0x18                  	// #24
  452f98:	add	w4, w1, #0x1
  452f9c:	ldr	x0, [x19, #32]
  452fa0:	smull	x1, w1, w2
  452fa4:	mov	w2, #0x47                  	// #71
  452fa8:	add	x3, x0, x1
  452fac:	str	wzr, [x3, #4]
  452fb0:	str	w4, [x19, #40]
  452fb4:	str	w2, [x0, x1]
  452fb8:	str	x11, [x3, #8]
  452fbc:	str	w21, [x3, #16]
  452fc0:	ldp	x21, x22, [sp, #32]
  452fc4:	b	452ce4 <_obstack_memory_used@@Base+0xe2e0>
  452fc8:	mov	x0, x19
  452fcc:	mov	w1, #0x1                   	// #1
  452fd0:	bl	450cc0 <_obstack_memory_used@@Base+0xc2bc>
  452fd4:	mov	x21, x0
  452fd8:	cbnz	x26, 452e58 <_obstack_memory_used@@Base+0xe454>
  452fdc:	ldr	x1, [x19, #24]
  452fe0:	b	452ea8 <_obstack_memory_used@@Base+0xe4a4>
  452fe4:	str	x21, [x22]
  452fe8:	cbz	x21, 453050 <_obstack_memory_used@@Base+0xe64c>
  452fec:	cbz	x23, 452ffc <_obstack_memory_used@@Base+0xe5f8>
  452ff0:	ldr	x0, [sp, #104]
  452ff4:	str	x0, [x23, #8]
  452ff8:	str	x23, [sp, #104]
  452ffc:	ldr	x0, [x19, #24]
  453000:	ldrb	w1, [x0]
  453004:	cmp	w1, #0x45
  453008:	b.ne	453050 <_obstack_memory_used@@Base+0xe64c>  // b.any
  45300c:	add	x0, x0, #0x1
  453010:	ldp	x21, x22, [sp, #32]
  453014:	ldp	x23, x24, [sp, #48]
  453018:	ldp	x25, x26, [sp, #64]
  45301c:	str	x0, [x19, #24]
  453020:	ldr	x20, [sp, #104]
  453024:	b	452c68 <_obstack_memory_used@@Base+0xe264>
  453028:	cbz	x20, 452d40 <_obstack_memory_used@@Base+0xe33c>
  45302c:	ldp	w0, w1, [x19, #56]
  453030:	cmp	w0, w1
  453034:	b.ge	452d40 <_obstack_memory_used@@Base+0xe33c>  // b.tcont
  453038:	ldr	x2, [x19, #48]
  45303c:	add	w1, w0, #0x1
  453040:	str	x20, [x2, w0, sxtw #3]
  453044:	mov	x0, x19
  453048:	str	w1, [x19, #56]
  45304c:	b	452d88 <_obstack_memory_used@@Base+0xe384>
  453050:	ldp	x23, x24, [sp, #48]
  453054:	ldp	x25, x26, [sp, #64]
  453058:	mov	x20, #0x0                   	// #0
  45305c:	ldp	x21, x22, [sp, #32]
  453060:	b	452c68 <_obstack_memory_used@@Base+0xe264>
  453064:	ldr	x0, [x20, #16]
  453068:	ldr	w1, [x0]
  45306c:	cmp	w1, #0x29
  453070:	b.ne	452cf0 <_obstack_memory_used@@Base+0xe2ec>  // b.any
  453074:	str	xzr, [x0, #8]
  453078:	b	452cf0 <_obstack_memory_used@@Base+0xe2ec>
  45307c:	mov	x20, #0x0                   	// #0
  453080:	b	452c2c <_obstack_memory_used@@Base+0xe228>
  453084:	cbz	x21, 452eb0 <_obstack_memory_used@@Base+0xe4ac>
  453088:	add	x1, x1, #0x1
  45308c:	str	x1, [x19, #24]
  453090:	mov	x0, x19
  453094:	bl	4522f0 <_obstack_memory_used@@Base+0xd8ec>
  453098:	mov	x21, x0
  45309c:	mov	w1, #0x4                   	// #4
  4530a0:	b	452e5c <_obstack_memory_used@@Base+0xe458>
  4530a4:	add	x0, x0, #0x2
  4530a8:	str	x0, [x19, #24]
  4530ac:	mov	x0, x19
  4530b0:	bl	451028 <_obstack_memory_used@@Base+0xc624>
  4530b4:	cbz	w0, 452d40 <_obstack_memory_used@@Base+0xe33c>
  4530b8:	ldp	w0, w1, [x19, #40]
  4530bc:	cmp	w0, w1
  4530c0:	b.ge	453118 <_obstack_memory_used@@Base+0xe714>  // b.tcont
  4530c4:	mov	w3, #0x18                  	// #24
  4530c8:	add	w1, w0, #0x1
  4530cc:	ldr	x2, [x19, #32]
  4530d0:	smull	x0, w0, w3
  4530d4:	str	w1, [x19, #40]
  4530d8:	mov	w4, #0xe                   	// #14
  4530dc:	add	x3, x2, x0
  4530e0:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x285fc>
  4530e4:	add	x1, x1, #0x768
  4530e8:	str	xzr, [x2, x0]
  4530ec:	str	x1, [x3, #8]
  4530f0:	str	w4, [x3, #16]
  4530f4:	b	452ce4 <_obstack_memory_used@@Base+0xe2e0>
  4530f8:	mov	x0, x19
  4530fc:	str	x3, [sp, #88]
  453100:	bl	451028 <_obstack_memory_used@@Base+0xc624>
  453104:	ldr	x3, [sp, #88]
  453108:	cbnz	w0, 452ce4 <_obstack_memory_used@@Base+0xe2e0>
  45310c:	mov	x20, #0x0                   	// #0
  453110:	b	452c68 <_obstack_memory_used@@Base+0xe264>
  453114:	ldp	x21, x22, [sp, #32]
  453118:	mov	x3, #0x0                   	// #0
  45311c:	b	452ce4 <_obstack_memory_used@@Base+0xe2e0>
  453120:	mov	x0, x19
  453124:	bl	450a40 <_obstack_memory_used@@Base+0xc03c>
  453128:	mov	x21, x0
  45312c:	b	452eec <_obstack_memory_used@@Base+0xe4e8>
  453130:	stp	x29, x30, [sp, #-80]!
  453134:	mov	x29, sp
  453138:	ldr	x4, [x0, #24]
  45313c:	stp	x19, x20, [sp, #16]
  453140:	mov	x19, x0
  453144:	mov	x0, x4
  453148:	bl	450fd0 <_obstack_memory_used@@Base+0xc5cc>
  45314c:	cbnz	w0, 45318c <_obstack_memory_used@@Base+0xe788>
  453150:	ldrb	w1, [x4]
  453154:	sub	w0, w1, #0x30
  453158:	cmp	w0, #0x4a
  45315c:	b.ls	453174 <_obstack_memory_used@@Base+0xe770>  // b.plast
  453160:	mov	x20, #0x0                   	// #0
  453164:	mov	x0, x20
  453168:	ldp	x19, x20, [sp, #16]
  45316c:	ldp	x29, x30, [sp], #80
  453170:	ret
  453174:	adrp	x2, 46d000 <_obstack_memory_used@@Base+0x285fc>
  453178:	add	x2, x2, #0x574
  45317c:	ldrh	w0, [x2, w0, uxtw #1]
  453180:	adr	x2, 45318c <_obstack_memory_used@@Base+0xe788>
  453184:	add	x0, x2, w0, sxth #2
  453188:	br	x0
  45318c:	add	x1, sp, #0x48
  453190:	mov	x0, x19
  453194:	mov	w2, #0x0                   	// #0
  453198:	stp	x21, x22, [sp, #32]
  45319c:	bl	453fe0 <_obstack_memory_used@@Base+0xf5dc>
  4531a0:	mov	x21, x0
  4531a4:	cbz	x0, 453238 <_obstack_memory_used@@Base+0xe834>
  4531a8:	ldr	x0, [x19, #24]
  4531ac:	ldrb	w0, [x0]
  4531b0:	cmp	w0, #0x46
  4531b4:	mov	x0, x19
  4531b8:	b.eq	45322c <_obstack_memory_used@@Base+0xe828>  // b.none
  4531bc:	bl	453130 <_obstack_memory_used@@Base+0xe72c>
  4531c0:	str	x0, [x21]
  4531c4:	cbz	x0, 453238 <_obstack_memory_used@@Base+0xe834>
  4531c8:	ldr	w1, [x0]
  4531cc:	ldr	x20, [sp, #72]
  4531d0:	sub	w1, w1, #0x1f
  4531d4:	cmp	w1, #0x1
  4531d8:	b.ls	453210 <_obstack_memory_used@@Base+0xe80c>  // b.plast
  4531dc:	cbz	x20, 453238 <_obstack_memory_used@@Base+0xe834>
  4531e0:	ldp	w0, w1, [x19, #56]
  4531e4:	cmp	w0, w1
  4531e8:	b.ge	453238 <_obstack_memory_used@@Base+0xe834>  // b.tcont
  4531ec:	ldr	x2, [x19, #48]
  4531f0:	add	w1, w0, #0x1
  4531f4:	ldp	x21, x22, [sp, #32]
  4531f8:	str	x20, [x2, w0, sxtw #3]
  4531fc:	mov	x0, x20
  453200:	str	w1, [x19, #56]
  453204:	ldp	x19, x20, [sp, #16]
  453208:	ldp	x29, x30, [sp], #80
  45320c:	ret
  453210:	ldr	x1, [x0, #8]
  453214:	str	x20, [x0, #8]
  453218:	ldr	x0, [x21]
  45321c:	str	x0, [sp, #72]
  453220:	str	x1, [x21]
  453224:	ldr	x20, [sp, #72]
  453228:	b	4531dc <_obstack_memory_used@@Base+0xe7d8>
  45322c:	bl	454300 <_obstack_memory_used@@Base+0xf8fc>
  453230:	str	x0, [x21]
  453234:	b	4531c4 <_obstack_memory_used@@Base+0xe7c0>
  453238:	ldp	x21, x22, [sp, #32]
  45323c:	b	453160 <_obstack_memory_used@@Base+0xe75c>
  453240:	ldp	w2, w3, [x19, #40]
  453244:	sub	w1, w1, #0x61
  453248:	adrp	x0, 493000 <_obstack_memory_used@@Base+0x4e5fc>
  45324c:	add	x0, x0, #0xa08
  453250:	sbfiz	x1, x1, #5, #32
  453254:	add	x0, x0, #0x188
  453258:	add	x1, x0, x1
  45325c:	cmp	w2, w3
  453260:	b.ge	453d00 <_obstack_memory_used@@Base+0xf2fc>  // b.tcont
  453264:	mov	w0, #0x18                  	// #24
  453268:	add	w6, w2, #0x1
  45326c:	ldr	x3, [x19, #32]
  453270:	smull	x2, w2, w0
  453274:	ldr	w7, [x1, #8]
  453278:	mov	w5, #0x27                  	// #39
  45327c:	add	x20, x3, x2
  453280:	ldr	w0, [x19, #72]
  453284:	add	x4, x4, #0x1
  453288:	add	w0, w0, w7
  45328c:	str	wzr, [x20, #4]
  453290:	str	w6, [x19, #40]
  453294:	str	w5, [x3, x2]
  453298:	str	x1, [x20, #8]
  45329c:	str	x4, [x19, #24]
  4532a0:	str	w0, [x19, #72]
  4532a4:	b	453164 <_obstack_memory_used@@Base+0xe760>
  4532a8:	mov	x0, x19
  4532ac:	bl	452ba8 <_obstack_memory_used@@Base+0xe1a4>
  4532b0:	mov	x20, x0
  4532b4:	str	x0, [sp, #72]
  4532b8:	cbz	x20, 453160 <_obstack_memory_used@@Base+0xe75c>
  4532bc:	ldp	w0, w1, [x19, #56]
  4532c0:	cmp	w0, w1
  4532c4:	b.ge	453160 <_obstack_memory_used@@Base+0xe75c>  // b.tcont
  4532c8:	ldr	x2, [x19, #48]
  4532cc:	add	w1, w0, #0x1
  4532d0:	str	x20, [x2, w0, sxtw #3]
  4532d4:	str	w1, [x19, #56]
  4532d8:	ldr	x20, [sp, #72]
  4532dc:	mov	x0, x20
  4532e0:	ldp	x19, x20, [sp, #16]
  4532e4:	ldp	x29, x30, [sp], #80
  4532e8:	ret
  4532ec:	mov	x0, x19
  4532f0:	bl	454300 <_obstack_memory_used@@Base+0xf8fc>
  4532f4:	mov	x20, x0
  4532f8:	str	x0, [sp, #72]
  4532fc:	b	4532b8 <_obstack_memory_used@@Base+0xe8b4>
  453300:	add	x4, x4, #0x1
  453304:	str	x4, [x19, #24]
  453308:	mov	x0, x19
  45330c:	bl	453130 <_obstack_memory_used@@Base+0xe72c>
  453310:	mov	x2, x0
  453314:	mov	x3, #0x0                   	// #0
  453318:	mov	x0, x19
  45331c:	mov	w1, #0x26                  	// #38
  453320:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  453324:	mov	x20, x0
  453328:	str	x0, [sp, #72]
  45332c:	b	4532b8 <_obstack_memory_used@@Base+0xe8b4>
  453330:	add	x4, x4, #0x1
  453334:	str	x4, [x19, #24]
  453338:	mov	x0, x19
  45333c:	bl	453130 <_obstack_memory_used@@Base+0xe72c>
  453340:	mov	x2, x0
  453344:	mov	x3, #0x0                   	// #0
  453348:	mov	x0, x19
  45334c:	mov	w1, #0x24                  	// #36
  453350:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  453354:	mov	x20, x0
  453358:	str	x0, [sp, #72]
  45335c:	b	4532b8 <_obstack_memory_used@@Base+0xe8b4>
  453360:	add	x4, x4, #0x1
  453364:	str	x4, [x19, #24]
  453368:	mov	x0, x19
  45336c:	bl	453130 <_obstack_memory_used@@Base+0xe72c>
  453370:	mov	x2, x0
  453374:	mov	x3, #0x0                   	// #0
  453378:	mov	x0, x19
  45337c:	mov	w1, #0x25                  	// #37
  453380:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  453384:	mov	x20, x0
  453388:	str	x0, [sp, #72]
  45338c:	b	4532b8 <_obstack_memory_used@@Base+0xe8b4>
  453390:	add	x0, x4, #0x1
  453394:	str	x0, [x19, #24]
  453398:	ldrb	w0, [x4, #1]
  45339c:	cbz	w0, 453160 <_obstack_memory_used@@Base+0xe75c>
  4533a0:	add	x0, x4, #0x2
  4533a4:	str	x0, [x19, #24]
  4533a8:	ldrb	w0, [x4, #1]
  4533ac:	cmp	w0, #0x68
  4533b0:	b.eq	453b28 <_obstack_memory_used@@Base+0xf124>  // b.none
  4533b4:	b.hi	45370c <_obstack_memory_used@@Base+0xed08>  // b.pmore
  4533b8:	cmp	w0, #0x63
  4533bc:	b.eq	453ae8 <_obstack_memory_used@@Base+0xf0e4>  // b.none
  4533c0:	b.ls	4536bc <_obstack_memory_used@@Base+0xecb8>  // b.plast
  4533c4:	cmp	w0, #0x65
  4533c8:	b.eq	453bc8 <_obstack_memory_used@@Base+0xf1c4>  // b.none
  4533cc:	cmp	w0, #0x66
  4533d0:	b.ne	453928 <_obstack_memory_used@@Base+0xef24>  // b.any
  4533d4:	ldp	w0, w1, [x19, #40]
  4533d8:	cmp	w0, w1
  4533dc:	b.ge	453d00 <_obstack_memory_used@@Base+0xf2fc>  // b.tcont
  4533e0:	mov	w1, #0x18                  	// #24
  4533e4:	add	w5, w0, #0x1
  4533e8:	ldr	x3, [x19, #32]
  4533ec:	smull	x0, w0, w1
  4533f0:	ldr	w2, [x19, #72]
  4533f4:	adrp	x1, 493000 <_obstack_memory_used@@Base+0x4e5fc>
  4533f8:	add	x1, x1, #0xa08
  4533fc:	add	x20, x3, x0
  453400:	add	x1, x1, #0x4c8
  453404:	mov	w4, #0x27                  	// #39
  453408:	str	wzr, [x20, #4]
  45340c:	add	w2, w2, #0x9
  453410:	str	w5, [x19, #40]
  453414:	str	w4, [x3, x0]
  453418:	str	x1, [x20, #8]
  45341c:	str	w2, [x19, #72]
  453420:	b	453164 <_obstack_memory_used@@Base+0xe760>
  453424:	add	x4, x4, #0x1
  453428:	str	x4, [x19, #24]
  45342c:	mov	x0, x19
  453430:	bl	450ac0 <_obstack_memory_used@@Base+0xc0bc>
  453434:	str	x0, [sp, #72]
  453438:	ldr	x1, [x19, #24]
  45343c:	mov	x20, x0
  453440:	ldrb	w0, [x1]
  453444:	cmp	w0, #0x49
  453448:	b.eq	453a08 <_obstack_memory_used@@Base+0xf004>  // b.none
  45344c:	mov	x0, x19
  453450:	bl	453130 <_obstack_memory_used@@Base+0xe72c>
  453454:	ldr	x3, [sp, #72]
  453458:	mov	x2, x0
  45345c:	mov	w1, #0x21                  	// #33
  453460:	mov	x0, x19
  453464:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  453468:	mov	x20, x0
  45346c:	str	x0, [sp, #72]
  453470:	b	4532b8 <_obstack_memory_used@@Base+0xe8b4>
  453474:	add	x4, x4, #0x1
  453478:	str	x4, [x19, #24]
  45347c:	mov	x0, x19
  453480:	bl	453130 <_obstack_memory_used@@Base+0xe72c>
  453484:	mov	x2, x0
  453488:	mov	x3, #0x0                   	// #0
  45348c:	mov	x0, x19
  453490:	mov	w1, #0x22                  	// #34
  453494:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  453498:	mov	x20, x0
  45349c:	str	x0, [sp, #72]
  4534a0:	b	4532b8 <_obstack_memory_used@@Base+0xe8b4>
  4534a4:	ldrb	w0, [x4, #1]
  4534a8:	sub	w1, w0, #0x30
  4534ac:	cmp	w0, #0x5f
  4534b0:	and	w1, w1, #0xff
  4534b4:	ccmp	w1, #0x9, #0x0, ne  // ne = any
  4534b8:	b.ls	4534cc <_obstack_memory_used@@Base+0xeac8>  // b.plast
  4534bc:	sub	w0, w0, #0x41
  4534c0:	and	w0, w0, #0xff
  4534c4:	cmp	w0, #0x19
  4534c8:	b.hi	4539e4 <_obstack_memory_used@@Base+0xefe0>  // b.pmore
  4534cc:	mov	w1, #0x0                   	// #0
  4534d0:	mov	x0, x19
  4534d4:	bl	450cc0 <_obstack_memory_used@@Base+0xc2bc>
  4534d8:	str	x0, [sp, #72]
  4534dc:	ldr	x1, [x19, #24]
  4534e0:	mov	x20, x0
  4534e4:	ldrb	w0, [x1]
  4534e8:	cmp	w0, #0x49
  4534ec:	b.ne	453164 <_obstack_memory_used@@Base+0xe760>  // b.any
  4534f0:	add	x1, x1, #0x1
  4534f4:	str	x1, [x19, #24]
  4534f8:	mov	x0, x19
  4534fc:	bl	4522f0 <_obstack_memory_used@@Base+0xd8ec>
  453500:	mov	x3, x0
  453504:	mov	x2, x20
  453508:	mov	x0, x19
  45350c:	mov	w1, #0x4                   	// #4
  453510:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  453514:	mov	x20, x0
  453518:	str	x0, [sp, #72]
  45351c:	b	4532b8 <_obstack_memory_used@@Base+0xe8b4>
  453520:	mov	x0, x19
  453524:	stp	x21, x22, [sp, #32]
  453528:	bl	450a40 <_obstack_memory_used@@Base+0xc03c>
  45352c:	ldr	x21, [x19, #24]
  453530:	str	x0, [sp, #72]
  453534:	mov	x20, x0
  453538:	ldrb	w0, [x21]
  45353c:	cmp	w0, #0x49
  453540:	b.eq	453968 <_obstack_memory_used@@Base+0xef64>  // b.none
  453544:	ldp	x21, x22, [sp, #32]
  453548:	b	4532b8 <_obstack_memory_used@@Base+0xe8b4>
  45354c:	add	x4, x4, #0x1
  453550:	str	x4, [x19, #24]
  453554:	mov	x0, x19
  453558:	bl	450ac0 <_obstack_memory_used@@Base+0xc0bc>
  45355c:	mov	x2, x0
  453560:	mov	x3, #0x0                   	// #0
  453564:	mov	x0, x19
  453568:	mov	w1, #0x28                  	// #40
  45356c:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  453570:	mov	x20, x0
  453574:	str	x0, [sp, #72]
  453578:	b	4532b8 <_obstack_memory_used@@Base+0xe8b4>
  45357c:	add	x4, x4, #0x1
  453580:	str	x4, [x19, #24]
  453584:	mov	x0, x19
  453588:	bl	453130 <_obstack_memory_used@@Base+0xe72c>
  45358c:	mov	x2, x0
  453590:	mov	x3, #0x0                   	// #0
  453594:	mov	x0, x19
  453598:	mov	w1, #0x23                  	// #35
  45359c:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  4535a0:	mov	x20, x0
  4535a4:	str	x0, [sp, #72]
  4535a8:	b	4532b8 <_obstack_memory_used@@Base+0xe8b4>
  4535ac:	add	x3, x4, #0x1
  4535b0:	str	x3, [x19, #24]
  4535b4:	ldrb	w0, [x4, #1]
  4535b8:	cmp	w0, #0x5f
  4535bc:	b.eq	4539dc <_obstack_memory_used@@Base+0xefd8>  // b.none
  4535c0:	sub	w0, w0, #0x30
  4535c4:	and	w0, w0, #0xff
  4535c8:	cmp	w0, #0x9
  4535cc:	b.hi	453a34 <_obstack_memory_used@@Base+0xf030>  // b.pmore
  4535d0:	mov	x1, x3
  4535d4:	nop
  4535d8:	mov	x4, x1
  4535dc:	add	x1, x1, #0x1
  4535e0:	str	x1, [x19, #24]
  4535e4:	ldrb	w0, [x1]
  4535e8:	sub	w0, w0, #0x30
  4535ec:	and	w0, w0, #0xff
  4535f0:	cmp	w0, #0x9
  4535f4:	b.ls	4535d8 <_obstack_memory_used@@Base+0xebd4>  // b.plast
  4535f8:	ldp	w0, w5, [x19, #40]
  4535fc:	sub	x2, x1, x3
  453600:	cmp	w0, w5
  453604:	b.ge	453160 <_obstack_memory_used@@Base+0xe75c>  // b.tcont
  453608:	mov	w7, #0x18                  	// #24
  45360c:	add	w6, w0, #0x1
  453610:	ldr	x5, [x19, #32]
  453614:	smull	x0, w0, w7
  453618:	cmp	w2, #0x0
  45361c:	add	x20, x5, x0
  453620:	str	wzr, [x20, #4]
  453624:	str	w6, [x19, #40]
  453628:	b.le	453160 <_obstack_memory_used@@Base+0xe75c>
  45362c:	str	xzr, [x5, x0]
  453630:	str	x3, [x20, #8]
  453634:	str	w2, [x20, #16]
  453638:	ldrb	w0, [x4, #1]
  45363c:	mov	x3, x1
  453640:	cmp	w0, #0x5f
  453644:	b.ne	453160 <_obstack_memory_used@@Base+0xe75c>  // b.any
  453648:	add	x3, x3, #0x1
  45364c:	str	x3, [x19, #24]
  453650:	mov	x0, x19
  453654:	bl	453130 <_obstack_memory_used@@Base+0xe72c>
  453658:	mov	x3, x0
  45365c:	mov	x2, x20
  453660:	mov	x0, x19
  453664:	mov	w1, #0x2a                  	// #42
  453668:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  45366c:	mov	x20, x0
  453670:	str	x0, [sp, #72]
  453674:	b	4532b8 <_obstack_memory_used@@Base+0xe8b4>
  453678:	add	x4, x4, #0x1
  45367c:	str	x4, [x19, #24]
  453680:	mov	x0, x19
  453684:	bl	453130 <_obstack_memory_used@@Base+0xe72c>
  453688:	mov	x20, x0
  45368c:	cbz	x0, 453160 <_obstack_memory_used@@Base+0xe75c>
  453690:	mov	x0, x19
  453694:	bl	453130 <_obstack_memory_used@@Base+0xe72c>
  453698:	mov	x3, x0
  45369c:	cbz	x0, 453160 <_obstack_memory_used@@Base+0xe75c>
  4536a0:	mov	x2, x20
  4536a4:	mov	x0, x19
  4536a8:	mov	w1, #0x2b                  	// #43
  4536ac:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  4536b0:	mov	x20, x0
  4536b4:	str	x0, [sp, #72]
  4536b8:	b	4532b8 <_obstack_memory_used@@Base+0xe8b4>
  4536bc:	cmp	w0, #0x54
  4536c0:	b.eq	45378c <_obstack_memory_used@@Base+0xed88>  // b.none
  4536c4:	cmp	w0, #0x61
  4536c8:	b.ne	453820 <_obstack_memory_used@@Base+0xee1c>  // b.any
  4536cc:	ldp	w0, w1, [x19, #40]
  4536d0:	cmp	w0, w1
  4536d4:	b.ge	453160 <_obstack_memory_used@@Base+0xe75c>  // b.tcont
  4536d8:	mov	w3, #0x18                  	// #24
  4536dc:	add	w1, w0, #0x1
  4536e0:	ldr	x2, [x19, #32]
  4536e4:	smull	x0, w0, w3
  4536e8:	str	w1, [x19, #40]
  4536ec:	mov	w3, #0x4                   	// #4
  4536f0:	add	x20, x2, x0
  4536f4:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x285fc>
  4536f8:	add	x1, x1, #0x780
  4536fc:	str	xzr, [x2, x0]
  453700:	str	x1, [x20, #8]
  453704:	str	w3, [x20, #16]
  453708:	b	453164 <_obstack_memory_used@@Base+0xe760>
  45370c:	cmp	w0, #0x73
  453710:	b.eq	453ab0 <_obstack_memory_used@@Base+0xf0ac>  // b.none
  453714:	b.ls	4537e8 <_obstack_memory_used@@Base+0xede4>  // b.plast
  453718:	cmp	w0, #0x75
  45371c:	b.eq	453c18 <_obstack_memory_used@@Base+0xf214>  // b.none
  453720:	cmp	w0, #0x76
  453724:	b.ne	453784 <_obstack_memory_used@@Base+0xed80>  // b.any
  453728:	ldrb	w0, [x4, #2]
  45372c:	cmp	w0, #0x5f
  453730:	b.eq	453cb0 <_obstack_memory_used@@Base+0xf2ac>  // b.none
  453734:	mov	x0, x19
  453738:	bl	450960 <_obstack_memory_used@@Base+0xbf5c>
  45373c:	mov	x20, x0
  453740:	cbz	x20, 453160 <_obstack_memory_used@@Base+0xe75c>
  453744:	ldr	x0, [x19, #24]
  453748:	ldrb	w1, [x0]
  45374c:	cmp	w1, #0x5f
  453750:	b.ne	453160 <_obstack_memory_used@@Base+0xe75c>  // b.any
  453754:	add	x0, x0, #0x1
  453758:	str	x0, [x19, #24]
  45375c:	mov	x0, x19
  453760:	bl	453130 <_obstack_memory_used@@Base+0xe72c>
  453764:	mov	x3, x0
  453768:	mov	x2, x20
  45376c:	mov	x0, x19
  453770:	mov	w1, #0x2d                  	// #45
  453774:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  453778:	mov	x20, x0
  45377c:	str	x0, [sp, #72]
  453780:	b	4532b8 <_obstack_memory_used@@Base+0xe8b4>
  453784:	cmp	w0, #0x74
  453788:	b.ne	453160 <_obstack_memory_used@@Base+0xe75c>  // b.any
  45378c:	ldr	w20, [x19, #76]
  453790:	mov	w0, #0x1                   	// #1
  453794:	str	w0, [x19, #76]
  453798:	mov	x0, x19
  45379c:	bl	451b18 <_obstack_memory_used@@Base+0xd114>
  4537a0:	str	w20, [x19, #76]
  4537a4:	mov	x2, x0
  4537a8:	mov	x3, #0x0                   	// #0
  4537ac:	mov	x0, x19
  4537b0:	mov	w1, #0x43                  	// #67
  4537b4:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  4537b8:	str	x0, [sp, #72]
  4537bc:	mov	x20, x0
  4537c0:	cbz	x0, 453160 <_obstack_memory_used@@Base+0xe75c>
  4537c4:	ldr	x0, [x19, #24]
  4537c8:	ldrb	w1, [x0]
  4537cc:	cbz	w1, 453160 <_obstack_memory_used@@Base+0xe75c>
  4537d0:	add	x1, x0, #0x1
  4537d4:	str	x1, [x19, #24]
  4537d8:	ldrb	w0, [x0]
  4537dc:	cmp	w0, #0x45
  4537e0:	b.ne	453160 <_obstack_memory_used@@Base+0xe75c>  // b.any
  4537e4:	b	4532bc <_obstack_memory_used@@Base+0xe8b8>
  4537e8:	cmp	w0, #0x6e
  4537ec:	b.eq	453b78 <_obstack_memory_used@@Base+0xf174>  // b.none
  4537f0:	cmp	w0, #0x70
  4537f4:	b.ne	4538d0 <_obstack_memory_used@@Base+0xeecc>  // b.any
  4537f8:	mov	x0, x19
  4537fc:	bl	453130 <_obstack_memory_used@@Base+0xe72c>
  453800:	mov	x3, #0x0                   	// #0
  453804:	mov	x2, x0
  453808:	mov	w1, #0x4b                  	// #75
  45380c:	mov	x0, x19
  453810:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  453814:	mov	x20, x0
  453818:	str	x0, [sp, #72]
  45381c:	b	4532b8 <_obstack_memory_used@@Base+0xe8b4>
  453820:	cmp	w0, #0x46
  453824:	b.ne	453160 <_obstack_memory_used@@Base+0xe75c>  // b.any
  453828:	ldp	w0, w1, [x19, #40]
  45382c:	cmp	w0, w1
  453830:	b.ge	453cec <_obstack_memory_used@@Base+0xf2e8>  // b.tcont
  453834:	mov	w2, #0x18                  	// #24
  453838:	add	w3, w0, #0x1
  45383c:	ldr	x1, [x19, #32]
  453840:	smull	x0, w0, w2
  453844:	mov	w2, #0x2c                  	// #44
  453848:	add	x20, x1, x0
  45384c:	str	wzr, [x20, #4]
  453850:	str	w3, [x19, #40]
  453854:	str	x20, [sp, #72]
  453858:	str	w2, [x1, x0]
  45385c:	ldrb	w0, [x4, #2]
  453860:	sub	w0, w0, #0x30
  453864:	and	w0, w0, #0xff
  453868:	cmp	w0, #0x9
  45386c:	cset	w1, ls  // ls = plast
  453870:	strh	w1, [x20, #16]
  453874:	b.hi	453884 <_obstack_memory_used@@Base+0xee80>  // b.pmore
  453878:	add	x0, x19, #0x18
  45387c:	bl	450890 <_obstack_memory_used@@Base+0xbe8c>
  453880:	ldr	x20, [sp, #72]
  453884:	mov	x0, x19
  453888:	bl	453130 <_obstack_memory_used@@Base+0xe72c>
  45388c:	str	x0, [x20, #8]
  453890:	ldr	x1, [sp, #72]
  453894:	ldr	x0, [x1, #8]
  453898:	cbz	x0, 453160 <_obstack_memory_used@@Base+0xe75c>
  45389c:	add	x0, x19, #0x18
  4538a0:	bl	450890 <_obstack_memory_used@@Base+0xbe8c>
  4538a4:	ldr	x1, [x19, #24]
  4538a8:	ldrb	w0, [x1]
  4538ac:	cbz	w0, 4538bc <_obstack_memory_used@@Base+0xeeb8>
  4538b0:	add	x0, x1, #0x1
  4538b4:	str	x0, [x19, #24]
  4538b8:	ldrb	w0, [x1]
  4538bc:	ldr	x20, [sp, #72]
  4538c0:	cmp	w0, #0x73
  4538c4:	cset	w0, eq  // eq = none
  4538c8:	strh	w0, [x20, #18]
  4538cc:	b	453164 <_obstack_memory_used@@Base+0xe760>
  4538d0:	cmp	w0, #0x69
  4538d4:	b.ne	453160 <_obstack_memory_used@@Base+0xe75c>  // b.any
  4538d8:	ldp	w0, w1, [x19, #40]
  4538dc:	cmp	w0, w1
  4538e0:	b.ge	453d00 <_obstack_memory_used@@Base+0xf2fc>  // b.tcont
  4538e4:	mov	w1, #0x18                  	// #24
  4538e8:	add	w5, w0, #0x1
  4538ec:	ldr	x3, [x19, #32]
  4538f0:	smull	x0, w0, w1
  4538f4:	ldr	w2, [x19, #72]
  4538f8:	adrp	x1, 493000 <_obstack_memory_used@@Base+0x4e5fc>
  4538fc:	add	x1, x1, #0xa08
  453900:	add	x20, x3, x0
  453904:	add	x1, x1, #0x588
  453908:	mov	w4, #0x27                  	// #39
  45390c:	str	wzr, [x20, #4]
  453910:	add	w2, w2, #0x8
  453914:	str	w5, [x19, #40]
  453918:	str	w4, [x3, x0]
  45391c:	str	x1, [x20, #8]
  453920:	str	w2, [x19, #72]
  453924:	b	453164 <_obstack_memory_used@@Base+0xe760>
  453928:	cmp	w0, #0x64
  45392c:	b.ne	453160 <_obstack_memory_used@@Base+0xe75c>  // b.any
  453930:	ldp	w0, w1, [x19, #40]
  453934:	cmp	w0, w1
  453938:	b.ge	453d00 <_obstack_memory_used@@Base+0xf2fc>  // b.tcont
  45393c:	mov	w1, #0x18                  	// #24
  453940:	add	w5, w0, #0x1
  453944:	ldr	x3, [x19, #32]
  453948:	smull	x0, w0, w1
  45394c:	adrp	x1, 493000 <_obstack_memory_used@@Base+0x4e5fc>
  453950:	add	x1, x1, #0xa08
  453954:	ldr	w2, [x19, #72]
  453958:	add	x1, x1, #0x4e8
  45395c:	add	x20, x3, x0
  453960:	mov	w4, #0x27                  	// #39
  453964:	b	453408 <_obstack_memory_used@@Base+0xea04>
  453968:	ldr	w0, [x19, #80]
  45396c:	cbnz	w0, 453a60 <_obstack_memory_used@@Base+0xf05c>
  453970:	cbz	x20, 453238 <_obstack_memory_used@@Base+0xe834>
  453974:	ldp	w0, w1, [x19, #56]
  453978:	cmp	w0, w1
  45397c:	b.ge	453238 <_obstack_memory_used@@Base+0xe834>  // b.tcont
  453980:	ldr	x2, [x19, #48]
  453984:	add	w1, w0, #0x1
  453988:	mov	x3, #0x0                   	// #0
  45398c:	str	x20, [x2, w0, sxtw #3]
  453990:	str	w1, [x19, #56]
  453994:	ldrb	w0, [x21]
  453998:	sub	w0, w0, #0x49
  45399c:	and	w0, w0, #0xff
  4539a0:	cmp	w0, #0x1
  4539a4:	b.hi	4539bc <_obstack_memory_used@@Base+0xefb8>  // b.pmore
  4539a8:	add	x21, x21, #0x1
  4539ac:	str	x21, [x19, #24]
  4539b0:	mov	x0, x19
  4539b4:	bl	4522f0 <_obstack_memory_used@@Base+0xd8ec>
  4539b8:	mov	x3, x0
  4539bc:	mov	x2, x20
  4539c0:	mov	x0, x19
  4539c4:	mov	w1, #0x4                   	// #4
  4539c8:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  4539cc:	mov	x20, x0
  4539d0:	str	x0, [sp, #72]
  4539d4:	ldp	x21, x22, [sp, #32]
  4539d8:	b	4532b8 <_obstack_memory_used@@Base+0xe8b4>
  4539dc:	mov	x20, #0x0                   	// #0
  4539e0:	b	453648 <_obstack_memory_used@@Base+0xec44>
  4539e4:	mov	x0, x19
  4539e8:	bl	452ba8 <_obstack_memory_used@@Base+0xe1a4>
  4539ec:	str	x0, [sp, #72]
  4539f0:	mov	x20, x0
  4539f4:	cbz	x0, 453160 <_obstack_memory_used@@Base+0xe75c>
  4539f8:	ldr	w0, [x0]
  4539fc:	cmp	w0, #0x18
  453a00:	b.ne	4532bc <_obstack_memory_used@@Base+0xe8b8>  // b.any
  453a04:	b	453164 <_obstack_memory_used@@Base+0xe760>
  453a08:	add	x1, x1, #0x1
  453a0c:	str	x1, [x19, #24]
  453a10:	mov	x0, x19
  453a14:	bl	4522f0 <_obstack_memory_used@@Base+0xd8ec>
  453a18:	mov	x3, x0
  453a1c:	mov	x2, x20
  453a20:	mov	x0, x19
  453a24:	mov	w1, #0x4                   	// #4
  453a28:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  453a2c:	str	x0, [sp, #72]
  453a30:	b	45344c <_obstack_memory_used@@Base+0xea48>
  453a34:	ldr	w20, [x19, #76]
  453a38:	mov	w0, #0x1                   	// #1
  453a3c:	str	w0, [x19, #76]
  453a40:	mov	x0, x19
  453a44:	bl	451b18 <_obstack_memory_used@@Base+0xd114>
  453a48:	str	w20, [x19, #76]
  453a4c:	mov	x20, x0
  453a50:	cbz	x0, 453160 <_obstack_memory_used@@Base+0xe75c>
  453a54:	ldr	x1, [x19, #24]
  453a58:	ldrb	w0, [x1]
  453a5c:	b	45363c <_obstack_memory_used@@Base+0xec38>
  453a60:	ldr	w22, [x19, #56]
  453a64:	add	x0, x21, #0x1
  453a68:	ldr	w20, [x19, #72]
  453a6c:	str	x23, [sp, #48]
  453a70:	str	x0, [x19, #24]
  453a74:	mov	x0, x19
  453a78:	ldr	w23, [x19, #40]
  453a7c:	bl	4522f0 <_obstack_memory_used@@Base+0xd8ec>
  453a80:	ldr	x1, [x19, #24]
  453a84:	ldrb	w1, [x1]
  453a88:	cmp	w1, #0x49
  453a8c:	b.eq	453c68 <_obstack_memory_used@@Base+0xf264>  // b.none
  453a90:	str	x21, [x19, #24]
  453a94:	str	w23, [x19, #40]
  453a98:	str	w22, [x19, #56]
  453a9c:	str	w20, [x19, #72]
  453aa0:	ldp	x21, x22, [sp, #32]
  453aa4:	ldr	x23, [sp, #48]
  453aa8:	ldr	x20, [sp, #72]
  453aac:	b	4532b8 <_obstack_memory_used@@Base+0xe8b4>
  453ab0:	ldp	w0, w1, [x19, #40]
  453ab4:	cmp	w0, w1
  453ab8:	b.ge	453d00 <_obstack_memory_used@@Base+0xf2fc>  // b.tcont
  453abc:	mov	w1, #0x18                  	// #24
  453ac0:	add	w5, w0, #0x1
  453ac4:	ldr	x3, [x19, #32]
  453ac8:	smull	x0, w0, w1
  453acc:	adrp	x1, 493000 <_obstack_memory_used@@Base+0x4e5fc>
  453ad0:	add	x1, x1, #0xa08
  453ad4:	ldr	w2, [x19, #72]
  453ad8:	add	x1, x1, #0x568
  453adc:	add	x20, x3, x0
  453ae0:	mov	w4, #0x27                  	// #39
  453ae4:	b	45390c <_obstack_memory_used@@Base+0xef08>
  453ae8:	ldp	w0, w1, [x19, #40]
  453aec:	cmp	w0, w1
  453af0:	b.ge	453160 <_obstack_memory_used@@Base+0xe75c>  // b.tcont
  453af4:	mov	w3, #0x18                  	// #24
  453af8:	add	w1, w0, #0x1
  453afc:	ldr	x2, [x19, #32]
  453b00:	smull	x0, w0, w3
  453b04:	str	w1, [x19, #40]
  453b08:	mov	w3, #0xe                   	// #14
  453b0c:	add	x20, x2, x0
  453b10:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x285fc>
  453b14:	add	x1, x1, #0x788
  453b18:	str	xzr, [x2, x0]
  453b1c:	str	x1, [x20, #8]
  453b20:	str	w3, [x20, #16]
  453b24:	b	453164 <_obstack_memory_used@@Base+0xe760>
  453b28:	ldp	w0, w1, [x19, #40]
  453b2c:	cmp	w0, w1
  453b30:	b.ge	453d00 <_obstack_memory_used@@Base+0xf2fc>  // b.tcont
  453b34:	mov	w1, #0x18                  	// #24
  453b38:	add	w5, w0, #0x1
  453b3c:	ldr	x3, [x19, #32]
  453b40:	smull	x0, w0, w1
  453b44:	ldr	w2, [x19, #72]
  453b48:	mov	w4, #0x27                  	// #39
  453b4c:	add	x20, x3, x0
  453b50:	adrp	x1, 493000 <_obstack_memory_used@@Base+0x4e5fc>
  453b54:	add	x1, x1, #0xa08
  453b58:	add	w2, w2, #0x4
  453b5c:	add	x1, x1, #0x528
  453b60:	str	wzr, [x20, #4]
  453b64:	str	w5, [x19, #40]
  453b68:	str	w4, [x3, x0]
  453b6c:	str	x1, [x20, #8]
  453b70:	str	w2, [x19, #72]
  453b74:	b	453164 <_obstack_memory_used@@Base+0xe760>
  453b78:	ldp	w0, w1, [x19, #40]
  453b7c:	cmp	w0, w1
  453b80:	b.ge	453d00 <_obstack_memory_used@@Base+0xf2fc>  // b.tcont
  453b84:	mov	w1, #0x18                  	// #24
  453b88:	add	w5, w0, #0x1
  453b8c:	ldr	x3, [x19, #32]
  453b90:	smull	x0, w0, w1
  453b94:	ldr	w2, [x19, #72]
  453b98:	mov	w4, #0x27                  	// #39
  453b9c:	add	x20, x3, x0
  453ba0:	adrp	x1, 493000 <_obstack_memory_used@@Base+0x4e5fc>
  453ba4:	add	x1, x1, #0xa08
  453ba8:	add	w2, w2, #0x11
  453bac:	add	x1, x1, #0x5a8
  453bb0:	str	wzr, [x20, #4]
  453bb4:	str	w5, [x19, #40]
  453bb8:	str	w4, [x3, x0]
  453bbc:	str	x1, [x20, #8]
  453bc0:	str	w2, [x19, #72]
  453bc4:	b	453164 <_obstack_memory_used@@Base+0xe760>
  453bc8:	ldp	w0, w1, [x19, #40]
  453bcc:	cmp	w0, w1
  453bd0:	b.ge	453d00 <_obstack_memory_used@@Base+0xf2fc>  // b.tcont
  453bd4:	mov	w1, #0x18                  	// #24
  453bd8:	add	w5, w0, #0x1
  453bdc:	ldr	x3, [x19, #32]
  453be0:	smull	x0, w0, w1
  453be4:	ldr	w2, [x19, #72]
  453be8:	mov	w4, #0x27                  	// #39
  453bec:	add	x20, x3, x0
  453bf0:	adrp	x1, 493000 <_obstack_memory_used@@Base+0x4e5fc>
  453bf4:	add	x1, x1, #0xa08
  453bf8:	add	w2, w2, #0xa
  453bfc:	add	x1, x1, #0x508
  453c00:	str	wzr, [x20, #4]
  453c04:	str	w5, [x19, #40]
  453c08:	str	w4, [x3, x0]
  453c0c:	str	x1, [x20, #8]
  453c10:	str	w2, [x19, #72]
  453c14:	b	453164 <_obstack_memory_used@@Base+0xe760>
  453c18:	ldp	w0, w1, [x19, #40]
  453c1c:	cmp	w0, w1
  453c20:	b.ge	453d00 <_obstack_memory_used@@Base+0xf2fc>  // b.tcont
  453c24:	mov	w1, #0x18                  	// #24
  453c28:	add	w5, w0, #0x1
  453c2c:	ldr	x3, [x19, #32]
  453c30:	smull	x0, w0, w1
  453c34:	ldr	w2, [x19, #72]
  453c38:	mov	w4, #0x27                  	// #39
  453c3c:	add	x20, x3, x0
  453c40:	adrp	x1, 493000 <_obstack_memory_used@@Base+0x4e5fc>
  453c44:	add	x1, x1, #0xa08
  453c48:	add	w2, w2, #0x7
  453c4c:	add	x1, x1, #0x548
  453c50:	str	wzr, [x20, #4]
  453c54:	str	w5, [x19, #40]
  453c58:	str	w4, [x3, x0]
  453c5c:	str	x1, [x20, #8]
  453c60:	str	w2, [x19, #72]
  453c64:	b	453164 <_obstack_memory_used@@Base+0xe760>
  453c68:	ldr	x2, [sp, #72]
  453c6c:	cbz	x2, 453ce0 <_obstack_memory_used@@Base+0xf2dc>
  453c70:	ldp	w4, w1, [x19, #56]
  453c74:	cmp	w4, w1
  453c78:	b.ge	453ce0 <_obstack_memory_used@@Base+0xf2dc>  // b.tcont
  453c7c:	ldr	x6, [x19, #48]
  453c80:	add	w5, w4, #0x1
  453c84:	mov	x3, x0
  453c88:	mov	w1, #0x4                   	// #4
  453c8c:	mov	x0, x19
  453c90:	str	x2, [x6, w4, sxtw #3]
  453c94:	str	w5, [x19, #56]
  453c98:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  453c9c:	mov	x20, x0
  453ca0:	str	x0, [sp, #72]
  453ca4:	ldp	x21, x22, [sp, #32]
  453ca8:	ldr	x23, [sp, #48]
  453cac:	b	4532b8 <_obstack_memory_used@@Base+0xe8b4>
  453cb0:	add	x4, x4, #0x3
  453cb4:	stp	x21, x22, [sp, #32]
  453cb8:	mov	w1, #0x1                   	// #1
  453cbc:	ldr	w21, [x19, #76]
  453cc0:	mov	x0, x19
  453cc4:	str	x4, [x19, #24]
  453cc8:	str	w1, [x19, #76]
  453ccc:	bl	451b18 <_obstack_memory_used@@Base+0xd114>
  453cd0:	mov	x20, x0
  453cd4:	str	w21, [x19, #76]
  453cd8:	ldp	x21, x22, [sp, #32]
  453cdc:	b	453740 <_obstack_memory_used@@Base+0xed3c>
  453ce0:	ldp	x21, x22, [sp, #32]
  453ce4:	ldr	x23, [sp, #48]
  453ce8:	b	453160 <_obstack_memory_used@@Base+0xe75c>
  453cec:	mov	x0, #0x0                   	// #0
  453cf0:	stp	x21, x22, [sp, #32]
  453cf4:	str	x23, [sp, #48]
  453cf8:	str	wzr, [x0]
  453cfc:	brk	#0x3e8
  453d00:	mov	x0, #0x0                   	// #0
  453d04:	str	xzr, [sp, #72]
  453d08:	stp	x21, x22, [sp, #32]
  453d0c:	str	x23, [sp, #48]
  453d10:	ldr	x0, [x0, #8]
  453d14:	brk	#0x3e8
  453d18:	stp	x29, x30, [sp, #-32]!
  453d1c:	mov	x29, sp
  453d20:	ldr	x1, [x0, #24]
  453d24:	stp	x19, x20, [sp, #16]
  453d28:	mov	x19, x0
  453d2c:	ldrb	w10, [x1]
  453d30:	cbz	w10, 453df4 <_obstack_memory_used@@Base+0xf3f0>
  453d34:	add	x2, x1, #0x1
  453d38:	str	x2, [x0, #24]
  453d3c:	ldrb	w10, [x1, #1]
  453d40:	ldrb	w8, [x1]
  453d44:	cbnz	w10, 453dfc <_obstack_memory_used@@Base+0xf3f8>
  453d48:	adrp	x5, 493000 <_obstack_memory_used@@Base+0x4e5fc>
  453d4c:	add	x5, x5, #0xa08
  453d50:	add	x5, x5, #0x5c8
  453d54:	mov	w4, #0x43                  	// #67
  453d58:	mov	w2, #0x0                   	// #0
  453d5c:	mov	w7, #0x18                  	// #24
  453d60:	sub	w1, w4, w2
  453d64:	add	w1, w1, w1, lsr #31
  453d68:	add	w1, w2, w1, asr #1
  453d6c:	smull	x3, w1, w7
  453d70:	add	x9, x5, x3
  453d74:	ldr	x3, [x5, x3]
  453d78:	ldrb	w6, [x3]
  453d7c:	cmp	w6, w8
  453d80:	b.eq	453da4 <_obstack_memory_used@@Base+0xf3a0>  // b.none
  453d84:	b.ls	453dec <_obstack_memory_used@@Base+0xf3e8>  // b.plast
  453d88:	mov	w4, w1
  453d8c:	cmp	w2, w4
  453d90:	b.ne	453d60 <_obstack_memory_used@@Base+0xf35c>  // b.any
  453d94:	mov	x0, #0x0                   	// #0
  453d98:	ldp	x19, x20, [sp, #16]
  453d9c:	ldp	x29, x30, [sp], #32
  453da0:	ret
  453da4:	ldrb	w3, [x3, #1]
  453da8:	cmp	w3, w10
  453dac:	b.ne	453d84 <_obstack_memory_used@@Base+0xf380>  // b.any
  453db0:	ldp	w0, w1, [x19, #40]
  453db4:	cmp	w0, w1
  453db8:	b.ge	453d94 <_obstack_memory_used@@Base+0xf390>  // b.tcont
  453dbc:	ldr	x2, [x19, #32]
  453dc0:	smull	x7, w0, w7
  453dc4:	add	w1, w0, #0x1
  453dc8:	mov	w3, #0x32                  	// #50
  453dcc:	add	x0, x2, x7
  453dd0:	str	wzr, [x0, #4]
  453dd4:	str	w1, [x19, #40]
  453dd8:	str	w3, [x2, x7]
  453ddc:	str	x9, [x0, #8]
  453de0:	ldp	x19, x20, [sp, #16]
  453de4:	ldp	x29, x30, [sp], #32
  453de8:	ret
  453dec:	add	w2, w1, #0x1
  453df0:	b	453d8c <_obstack_memory_used@@Base+0xf388>
  453df4:	mov	w8, #0x0                   	// #0
  453df8:	b	453d48 <_obstack_memory_used@@Base+0xf344>
  453dfc:	add	x2, x1, #0x2
  453e00:	str	x2, [x0, #24]
  453e04:	cmp	w8, #0x76
  453e08:	ldrb	w10, [x1, #1]
  453e0c:	b.ne	453e68 <_obstack_memory_used@@Base+0xf464>  // b.any
  453e10:	sub	w11, w10, #0x30
  453e14:	and	w1, w11, #0xff
  453e18:	cmp	w1, #0x9
  453e1c:	b.hi	453d48 <_obstack_memory_used@@Base+0xf344>  // b.pmore
  453e20:	bl	450ac0 <_obstack_memory_used@@Base+0xc0bc>
  453e24:	mov	x2, x0
  453e28:	ldp	w1, w0, [x19, #40]
  453e2c:	cmp	w1, w0
  453e30:	b.ge	453d94 <_obstack_memory_used@@Base+0xf390>  // b.tcont
  453e34:	mov	w0, #0x18                  	// #24
  453e38:	add	w4, w1, #0x1
  453e3c:	ldr	x3, [x19, #32]
  453e40:	smull	x1, w1, w0
  453e44:	add	x0, x3, x1
  453e48:	str	wzr, [x0, #4]
  453e4c:	str	w4, [x19, #40]
  453e50:	cbz	x2, 453d94 <_obstack_memory_used@@Base+0xf390>
  453e54:	mov	x4, #0x33                  	// #51
  453e58:	str	x4, [x3, x1]
  453e5c:	str	w11, [x0, #8]
  453e60:	str	x2, [x0, #16]
  453e64:	b	453d98 <_obstack_memory_used@@Base+0xf394>
  453e68:	cmp	w10, #0x76
  453e6c:	mov	w1, #0x63                  	// #99
  453e70:	ccmp	w8, w1, #0x0, eq  // eq = none
  453e74:	b.ne	453d48 <_obstack_memory_used@@Base+0xf344>  // b.any
  453e78:	ldp	w1, w20, [x0, #76]
  453e7c:	cmp	w1, #0x0
  453e80:	cset	w1, eq  // eq = none
  453e84:	str	w1, [x0, #80]
  453e88:	bl	453130 <_obstack_memory_used@@Base+0xe72c>
  453e8c:	mov	x2, x0
  453e90:	ldr	w1, [x19, #80]
  453e94:	mov	x3, #0x0                   	// #0
  453e98:	cbz	w1, 453eb8 <_obstack_memory_used@@Base+0xf4b4>
  453e9c:	mov	x0, x19
  453ea0:	mov	w1, #0x35                  	// #53
  453ea4:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  453ea8:	str	w20, [x19, #80]
  453eac:	ldp	x19, x20, [sp, #16]
  453eb0:	ldp	x29, x30, [sp], #32
  453eb4:	ret
  453eb8:	mov	x0, x19
  453ebc:	mov	w1, #0x34                  	// #52
  453ec0:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  453ec4:	str	w20, [x19, #80]
  453ec8:	b	453eac <_obstack_memory_used@@Base+0xf4a8>
  453ecc:	nop
  453ed0:	stp	x29, x30, [sp, #-64]!
  453ed4:	mov	x29, sp
  453ed8:	stp	x19, x20, [sp, #16]
  453edc:	mov	x19, x0
  453ee0:	mov	w0, #0x2e                  	// #46
  453ee4:	str	xzr, [sp, #56]
  453ee8:	ldr	x2, [x19, #24]
  453eec:	ldrb	w1, [x2]
  453ef0:	cmp	w1, #0x45
  453ef4:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  453ef8:	ccmp	w1, w0, #0x4, ne  // ne = any
  453efc:	b.eq	453f90 <_obstack_memory_used@@Base+0xf58c>  // b.none
  453f00:	add	x20, sp, #0x38
  453f04:	stp	x21, x22, [sp, #32]
  453f08:	mov	w22, w0
  453f0c:	mov	w21, #0x4f                  	// #79
  453f10:	cmp	w1, #0x52
  453f14:	mov	x0, x19
  453f18:	ccmp	w1, w21, #0x4, ne  // ne = any
  453f1c:	b.ne	453f2c <_obstack_memory_used@@Base+0xf528>  // b.any
  453f20:	ldrb	w1, [x2, #1]
  453f24:	cmp	w1, #0x45
  453f28:	b.eq	453f6c <_obstack_memory_used@@Base+0xf568>  // b.none
  453f2c:	bl	453130 <_obstack_memory_used@@Base+0xe72c>
  453f30:	mov	x2, x0
  453f34:	mov	x3, #0x0                   	// #0
  453f38:	mov	x0, x19
  453f3c:	mov	w1, #0x2e                  	// #46
  453f40:	cbz	x2, 453f8c <_obstack_memory_used@@Base+0xf588>
  453f44:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  453f48:	str	x0, [x20]
  453f4c:	add	x20, x0, #0x10
  453f50:	cbz	x0, 453f8c <_obstack_memory_used@@Base+0xf588>
  453f54:	ldr	x2, [x19, #24]
  453f58:	ldrb	w1, [x2]
  453f5c:	cmp	w1, #0x45
  453f60:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  453f64:	ccmp	w1, w22, #0x4, ne  // ne = any
  453f68:	b.ne	453f10 <_obstack_memory_used@@Base+0xf50c>  // b.any
  453f6c:	ldr	x0, [sp, #56]
  453f70:	cbz	x0, 453f8c <_obstack_memory_used@@Base+0xf588>
  453f74:	ldr	x1, [x0, #16]
  453f78:	cbz	x1, 453fa0 <_obstack_memory_used@@Base+0xf59c>
  453f7c:	ldp	x21, x22, [sp, #32]
  453f80:	ldp	x19, x20, [sp, #16]
  453f84:	ldp	x29, x30, [sp], #64
  453f88:	ret
  453f8c:	ldp	x21, x22, [sp, #32]
  453f90:	mov	x0, #0x0                   	// #0
  453f94:	ldp	x19, x20, [sp, #16]
  453f98:	ldp	x29, x30, [sp], #64
  453f9c:	ret
  453fa0:	ldr	x1, [x0, #8]
  453fa4:	ldr	w2, [x1]
  453fa8:	cmp	w2, #0x27
  453fac:	b.ne	453f7c <_obstack_memory_used@@Base+0xf578>  // b.any
  453fb0:	ldr	x1, [x1, #8]
  453fb4:	ldr	w2, [x1, #28]
  453fb8:	cmp	w2, #0x9
  453fbc:	b.ne	453f7c <_obstack_memory_used@@Base+0xf578>  // b.any
  453fc0:	ldr	w2, [x1, #8]
  453fc4:	ldr	w1, [x19, #72]
  453fc8:	ldp	x21, x22, [sp, #32]
  453fcc:	sub	w1, w1, w2
  453fd0:	str	w1, [x19, #72]
  453fd4:	str	xzr, [x0, #8]
  453fd8:	b	453f80 <_obstack_memory_used@@Base+0xf57c>
  453fdc:	nop
  453fe0:	stp	x29, x30, [sp, #-96]!
  453fe4:	cmp	w2, #0x0
  453fe8:	mov	x29, sp
  453fec:	stp	x19, x20, [sp, #16]
  453ff0:	mov	x19, x0
  453ff4:	mov	w0, #0x1b                  	// #27
  453ff8:	stp	x21, x22, [sp, #32]
  453ffc:	mov	x20, x1
  454000:	mov	w22, #0x1c                  	// #28
  454004:	ldr	x4, [x19, #24]
  454008:	stp	x23, x24, [sp, #48]
  45400c:	mov	w23, #0x1d                  	// #29
  454010:	stp	x25, x26, [sp, #64]
  454014:	mov	w25, #0x1e                  	// #30
  454018:	csel	w25, w25, w0, ne  // ne = any
  45401c:	ldrb	w5, [x4]
  454020:	mov	w0, #0x1a                  	// #26
  454024:	csel	w23, w23, w0, ne  // ne = any
  454028:	mov	w0, #0x19                  	// #25
  45402c:	mov	w24, w2
  454030:	csel	w22, w22, w0, ne  // ne = any
  454034:	mov	x21, x1
  454038:	mov	x0, x4
  45403c:	mov	w26, #0x1                   	// #1
  454040:	bl	450fd0 <_obstack_memory_used@@Base+0xc5cc>
  454044:	cbz	w0, 454160 <_obstack_memory_used@@Base+0xf75c>
  454048:	add	x0, x4, #0x1
  45404c:	str	x0, [x19, #24]
  454050:	cmp	w5, #0x72
  454054:	b.eq	454120 <_obstack_memory_used@@Base+0xf71c>  // b.none
  454058:	cmp	w5, #0x56
  45405c:	b.eq	4541c0 <_obstack_memory_used@@Base+0xf7bc>  // b.none
  454060:	cmp	w5, #0x4b
  454064:	b.eq	4541d8 <_obstack_memory_used@@Base+0xf7d4>  // b.none
  454068:	ldrb	w0, [x4, #1]
  45406c:	cbz	w0, 454100 <_obstack_memory_used@@Base+0xf6fc>
  454070:	add	x0, x4, #0x2
  454074:	str	x0, [x19, #24]
  454078:	ldrb	w0, [x4, #1]
  45407c:	cmp	w0, #0x78
  454080:	b.eq	4541f0 <_obstack_memory_used@@Base+0xf7ec>  // b.none
  454084:	and	w1, w0, #0xffffffdf
  454088:	cmp	w1, #0x4f
  45408c:	and	w1, w1, #0xff
  454090:	b.ne	454208 <_obstack_memory_used@@Base+0xf804>  // b.any
  454094:	ldr	w2, [x19, #72]
  454098:	cmp	w0, #0x4f
  45409c:	add	w0, w2, #0x9
  4540a0:	str	w0, [x19, #72]
  4540a4:	b.ne	45424c <_obstack_memory_used@@Base+0xf848>  // b.any
  4540a8:	str	x27, [sp, #80]
  4540ac:	mov	x0, x19
  4540b0:	ldr	w27, [x19, #76]
  4540b4:	str	w26, [x19, #76]
  4540b8:	bl	451b18 <_obstack_memory_used@@Base+0xd114>
  4540bc:	str	w27, [x19, #76]
  4540c0:	mov	x3, x0
  4540c4:	cbz	x0, 454264 <_obstack_memory_used@@Base+0xf860>
  4540c8:	ldr	x0, [x19, #24]
  4540cc:	ldrb	w1, [x0]
  4540d0:	cmp	w1, #0x45
  4540d4:	b.ne	454264 <_obstack_memory_used@@Base+0xf860>  // b.any
  4540d8:	add	x0, x0, #0x1
  4540dc:	mov	w1, #0x4f                  	// #79
  4540e0:	ldr	x27, [sp, #80]
  4540e4:	str	x0, [x19, #24]
  4540e8:	mov	x2, #0x0                   	// #0
  4540ec:	mov	x0, x19
  4540f0:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  4540f4:	str	x0, [x20]
  4540f8:	cbnz	x0, 454148 <_obstack_memory_used@@Base+0xf744>
  4540fc:	nop
  454100:	mov	x20, #0x0                   	// #0
  454104:	mov	x0, x20
  454108:	ldp	x19, x20, [sp, #16]
  45410c:	ldp	x21, x22, [sp, #32]
  454110:	ldp	x23, x24, [sp, #48]
  454114:	ldp	x25, x26, [sp, #64]
  454118:	ldp	x29, x30, [sp], #96
  45411c:	ret
  454120:	ldr	w0, [x19, #72]
  454124:	mov	w1, w22
  454128:	mov	x3, #0x0                   	// #0
  45412c:	add	w0, w0, #0x9
  454130:	str	w0, [x19, #72]
  454134:	mov	x0, x19
  454138:	mov	x2, #0x0                   	// #0
  45413c:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  454140:	str	x0, [x20]
  454144:	cbz	x0, 454100 <_obstack_memory_used@@Base+0xf6fc>
  454148:	ldr	x4, [x19, #24]
  45414c:	add	x20, x0, #0x8
  454150:	mov	x0, x4
  454154:	ldrb	w5, [x4]
  454158:	bl	450fd0 <_obstack_memory_used@@Base+0xc5cc>
  45415c:	cbnz	w0, 454048 <_obstack_memory_used@@Base+0xf644>
  454160:	cmp	w5, #0x46
  454164:	eor	w24, w24, #0x1
  454168:	cset	w0, eq  // eq = none
  45416c:	tst	w24, w0
  454170:	b.eq	454104 <_obstack_memory_used@@Base+0xf700>  // b.none
  454174:	cmp	x20, x21
  454178:	b.eq	454104 <_obstack_memory_used@@Base+0xf700>  // b.none
  45417c:	mov	w3, #0x1d                  	// #29
  454180:	mov	w2, #0x1e                  	// #30
  454184:	mov	w1, #0x1c                  	// #28
  454188:	b	4541a0 <_obstack_memory_used@@Base+0xf79c>
  45418c:	cmp	w0, #0x19
  454190:	b.eq	45425c <_obstack_memory_used@@Base+0xf858>  // b.none
  454194:	add	x21, x21, #0x8
  454198:	cmp	x20, x21
  45419c:	b.eq	454104 <_obstack_memory_used@@Base+0xf700>  // b.none
  4541a0:	ldr	x21, [x21]
  4541a4:	ldr	w0, [x21]
  4541a8:	cmp	w0, #0x1a
  4541ac:	b.eq	454254 <_obstack_memory_used@@Base+0xf850>  // b.none
  4541b0:	cmp	w0, #0x1b
  4541b4:	b.ne	45418c <_obstack_memory_used@@Base+0xf788>  // b.any
  4541b8:	str	w2, [x21]
  4541bc:	b	454194 <_obstack_memory_used@@Base+0xf790>
  4541c0:	ldr	w0, [x19, #72]
  4541c4:	mov	w1, w23
  4541c8:	mov	x3, #0x0                   	// #0
  4541cc:	add	w0, w0, #0x9
  4541d0:	str	w0, [x19, #72]
  4541d4:	b	454134 <_obstack_memory_used@@Base+0xf730>
  4541d8:	ldr	w0, [x19, #72]
  4541dc:	mov	w1, w25
  4541e0:	mov	x3, #0x0                   	// #0
  4541e4:	add	w0, w0, #0x6
  4541e8:	str	w0, [x19, #72]
  4541ec:	b	454134 <_obstack_memory_used@@Base+0xf730>
  4541f0:	ldr	w0, [x19, #72]
  4541f4:	mov	x3, #0x0                   	// #0
  4541f8:	mov	w1, #0x4d                  	// #77
  4541fc:	add	w0, w0, #0x11
  454200:	str	w0, [x19, #72]
  454204:	b	454134 <_obstack_memory_used@@Base+0xf730>
  454208:	cmp	w0, #0x77
  45420c:	b.ne	454100 <_obstack_memory_used@@Base+0xf6fc>  // b.any
  454210:	ldr	w1, [x19, #72]
  454214:	mov	x0, x19
  454218:	add	w1, w1, #0x6
  45421c:	str	w1, [x19, #72]
  454220:	bl	453ed0 <_obstack_memory_used@@Base+0xf4cc>
  454224:	mov	x3, x0
  454228:	cbz	x0, 454100 <_obstack_memory_used@@Base+0xf6fc>
  45422c:	ldr	x0, [x19, #24]
  454230:	ldrb	w1, [x0]
  454234:	cmp	w1, #0x45
  454238:	b.ne	454100 <_obstack_memory_used@@Base+0xf6fc>  // b.any
  45423c:	add	x0, x0, #0x1
  454240:	mov	w1, #0x50                  	// #80
  454244:	str	x0, [x19, #24]
  454248:	b	454134 <_obstack_memory_used@@Base+0xf730>
  45424c:	mov	x3, #0x0                   	// #0
  454250:	b	454134 <_obstack_memory_used@@Base+0xf730>
  454254:	str	w3, [x21]
  454258:	b	454194 <_obstack_memory_used@@Base+0xf790>
  45425c:	str	w1, [x21]
  454260:	b	454194 <_obstack_memory_used@@Base+0xf790>
  454264:	ldr	x27, [sp, #80]
  454268:	b	454100 <_obstack_memory_used@@Base+0xf6fc>
  45426c:	nop
  454270:	stp	x29, x30, [sp, #-32]!
  454274:	mov	x29, sp
  454278:	stp	x19, x20, [sp, #16]
  45427c:	mov	x19, x0
  454280:	ldr	x0, [x0, #24]
  454284:	ldrb	w2, [x0]
  454288:	cmp	w2, #0x4a
  45428c:	b.eq	4542f0 <_obstack_memory_used@@Base+0xf8ec>  // b.none
  454290:	cbz	w1, 4542cc <_obstack_memory_used@@Base+0xf8c8>
  454294:	mov	x0, x19
  454298:	bl	453130 <_obstack_memory_used@@Base+0xe72c>
  45429c:	mov	x20, x0
  4542a0:	cbz	x0, 4542e0 <_obstack_memory_used@@Base+0xf8dc>
  4542a4:	mov	x0, x19
  4542a8:	bl	453ed0 <_obstack_memory_used@@Base+0xf4cc>
  4542ac:	mov	x3, x0
  4542b0:	cbz	x0, 4542e0 <_obstack_memory_used@@Base+0xf8dc>
  4542b4:	mov	x2, x20
  4542b8:	mov	x0, x19
  4542bc:	ldp	x19, x20, [sp, #16]
  4542c0:	mov	w1, #0x29                  	// #41
  4542c4:	ldp	x29, x30, [sp], #32
  4542c8:	b	450610 <_obstack_memory_used@@Base+0xbc0c>
  4542cc:	mov	x0, x19
  4542d0:	mov	x20, #0x0                   	// #0
  4542d4:	bl	453ed0 <_obstack_memory_used@@Base+0xf4cc>
  4542d8:	mov	x3, x0
  4542dc:	cbnz	x0, 4542b4 <_obstack_memory_used@@Base+0xf8b0>
  4542e0:	mov	x0, #0x0                   	// #0
  4542e4:	ldp	x19, x20, [sp, #16]
  4542e8:	ldp	x29, x30, [sp], #32
  4542ec:	ret
  4542f0:	add	x0, x0, #0x1
  4542f4:	str	x0, [x19, #24]
  4542f8:	b	454294 <_obstack_memory_used@@Base+0xf890>
  4542fc:	nop
  454300:	stp	x29, x30, [sp, #-32]!
  454304:	mov	x29, sp
  454308:	str	x19, [sp, #16]
  45430c:	mov	x19, x0
  454310:	ldr	w0, [x0, #16]
  454314:	tbnz	w0, #18, 454350 <_obstack_memory_used@@Base+0xf94c>
  454318:	ldr	w1, [x19, #84]
  45431c:	cmp	w1, #0x800
  454320:	b.hi	454360 <_obstack_memory_used@@Base+0xf95c>  // b.pmore
  454324:	ldr	x2, [x19, #24]
  454328:	add	w0, w1, #0x1
  45432c:	str	w0, [x19, #84]
  454330:	mov	x0, #0x0                   	// #0
  454334:	ldrb	w3, [x2]
  454338:	cmp	w3, #0x46
  45433c:	b.eq	454370 <_obstack_memory_used@@Base+0xf96c>  // b.none
  454340:	str	w1, [x19, #84]
  454344:	ldr	x19, [sp, #16]
  454348:	ldp	x29, x30, [sp], #32
  45434c:	ret
  454350:	ldr	x2, [x19, #24]
  454354:	ldrb	w0, [x2]
  454358:	cmp	w0, #0x46
  45435c:	b.eq	454370 <_obstack_memory_used@@Base+0xf96c>  // b.none
  454360:	mov	x0, #0x0                   	// #0
  454364:	ldr	x19, [sp, #16]
  454368:	ldp	x29, x30, [sp], #32
  45436c:	ret
  454370:	add	x4, x2, #0x1
  454374:	str	x4, [x19, #24]
  454378:	add	x3, x2, #0x2
  45437c:	mov	w1, #0x1                   	// #1
  454380:	ldrb	w2, [x2, #1]
  454384:	mov	x0, x19
  454388:	cmp	w2, #0x59
  45438c:	csel	x2, x3, x4, eq  // eq = none
  454390:	str	x2, [x19, #24]
  454394:	bl	454270 <_obstack_memory_used@@Base+0xf86c>
  454398:	mov	x1, x0
  45439c:	mov	x0, x19
  4543a0:	bl	450698 <_obstack_memory_used@@Base+0xbc94>
  4543a4:	ldr	x1, [x19, #24]
  4543a8:	ldrb	w2, [x1]
  4543ac:	cmp	w2, #0x45
  4543b0:	b.eq	4543d0 <_obstack_memory_used@@Base+0xf9cc>  // b.none
  4543b4:	mov	x0, #0x0                   	// #0
  4543b8:	ldr	w1, [x19, #16]
  4543bc:	tbnz	w1, #18, 454364 <_obstack_memory_used@@Base+0xf960>
  4543c0:	ldr	w1, [x19, #84]
  4543c4:	sub	w1, w1, #0x1
  4543c8:	str	w1, [x19, #84]
  4543cc:	b	454344 <_obstack_memory_used@@Base+0xf940>
  4543d0:	add	x1, x1, #0x1
  4543d4:	str	x1, [x19, #24]
  4543d8:	b	4543b8 <_obstack_memory_used@@Base+0xf9b4>
  4543dc:	nop
  4543e0:	stp	x29, x30, [sp, #-48]!
  4543e4:	mov	x29, sp
  4543e8:	ldr	x3, [x0, #24]
  4543ec:	stp	x19, x20, [sp, #16]
  4543f0:	mov	x19, x0
  4543f4:	ldrb	w2, [x3]
  4543f8:	sub	w1, w2, #0x30
  4543fc:	and	w1, w1, #0xff
  454400:	cmp	w1, #0x9
  454404:	b.ls	454514 <_obstack_memory_used@@Base+0xfb10>  // b.plast
  454408:	sub	w1, w2, #0x61
  45440c:	and	w1, w1, #0xff
  454410:	cmp	w1, #0x19
  454414:	b.hi	45445c <_obstack_memory_used@@Base+0xfa58>  // b.pmore
  454418:	cmp	w2, #0x6f
  45441c:	b.eq	4545dc <_obstack_memory_used@@Base+0xfbd8>  // b.none
  454420:	mov	x0, x19
  454424:	bl	453d18 <_obstack_memory_used@@Base+0xf314>
  454428:	mov	x20, x0
  45442c:	cbz	x0, 45443c <_obstack_memory_used@@Base+0xfa38>
  454430:	ldr	w0, [x0]
  454434:	cmp	w0, #0x32
  454438:	b.eq	454540 <_obstack_memory_used@@Base+0xfb3c>  // b.none
  45443c:	ldr	x0, [x19, #24]
  454440:	ldrb	w1, [x0]
  454444:	cmp	w1, #0x42
  454448:	b.eq	45452c <_obstack_memory_used@@Base+0xfb28>  // b.none
  45444c:	mov	x0, x20
  454450:	ldp	x19, x20, [sp, #16]
  454454:	ldp	x29, x30, [sp], #48
  454458:	ret
  45445c:	sub	w1, w2, #0x43
  454460:	and	w1, w1, #0xff
  454464:	cmp	w1, #0x1
  454468:	b.ls	4545f4 <_obstack_memory_used@@Base+0xfbf0>  // b.plast
  45446c:	cmp	w2, #0x4c
  454470:	b.eq	4545a8 <_obstack_memory_used@@Base+0xfba4>  // b.none
  454474:	cmp	w2, #0x55
  454478:	b.ne	4545c8 <_obstack_memory_used@@Base+0xfbc4>  // b.any
  45447c:	ldrb	w1, [x3, #1]
  454480:	cmp	w1, #0x6c
  454484:	b.eq	4546b8 <_obstack_memory_used@@Base+0xfcb4>  // b.none
  454488:	cmp	w1, #0x74
  45448c:	b.ne	4545c8 <_obstack_memory_used@@Base+0xfbc4>  // b.any
  454490:	add	x1, x3, #0x1
  454494:	str	x1, [x0, #24]
  454498:	mov	x20, #0x0                   	// #0
  45449c:	ldrb	w1, [x3, #1]
  4544a0:	cmp	w1, #0x74
  4544a4:	b.ne	454444 <_obstack_memory_used@@Base+0xfa40>  // b.any
  4544a8:	add	x3, x3, #0x2
  4544ac:	str	x3, [x0, #24]
  4544b0:	bl	4509c8 <_obstack_memory_used@@Base+0xbfc4>
  4544b4:	tbnz	w0, #31, 45443c <_obstack_memory_used@@Base+0xfa38>
  4544b8:	ldp	w1, w2, [x19, #40]
  4544bc:	cmp	w1, w2
  4544c0:	b.ge	454880 <_obstack_memory_used@@Base+0xfe7c>  // b.tcont
  4544c4:	ldp	x7, x3, [x19, #24]
  4544c8:	mov	w2, #0x18                  	// #24
  4544cc:	add	w6, w1, #0x1
  4544d0:	mov	w4, #0x48                  	// #72
  4544d4:	smull	x1, w1, w2
  4544d8:	sxtw	x0, w0
  4544dc:	ldp	w2, w5, [x19, #56]
  4544e0:	add	x20, x3, x1
  4544e4:	cmp	w2, w5
  4544e8:	str	wzr, [x20, #4]
  4544ec:	str	w6, [x19, #40]
  4544f0:	str	w4, [x3, x1]
  4544f4:	str	x0, [x20, #8]
  4544f8:	b.ge	454874 <_obstack_memory_used@@Base+0xfe70>  // b.tcont
  4544fc:	ldr	x1, [x19, #48]
  454500:	add	w0, w2, #0x1
  454504:	str	x20, [x1, w2, sxtw #3]
  454508:	str	w0, [x19, #56]
  45450c:	ldrb	w1, [x7]
  454510:	b	454444 <_obstack_memory_used@@Base+0xfa40>
  454514:	bl	450ac0 <_obstack_memory_used@@Base+0xc0bc>
  454518:	mov	x20, x0
  45451c:	ldr	x3, [x19, #24]
  454520:	ldrb	w1, [x3]
  454524:	cmp	w1, #0x42
  454528:	b.ne	45444c <_obstack_memory_used@@Base+0xfa48>  // b.any
  45452c:	mov	x1, x20
  454530:	mov	x0, x19
  454534:	ldp	x19, x20, [sp, #16]
  454538:	ldp	x29, x30, [sp], #48
  45453c:	b	450c40 <_obstack_memory_used@@Base+0xc23c>
  454540:	ldr	x1, [x20, #8]
  454544:	ldr	w0, [x19, #72]
  454548:	ldr	x2, [x1]
  45454c:	add	w0, w0, #0x7
  454550:	ldr	w1, [x1, #16]
  454554:	add	w0, w0, w1
  454558:	str	w0, [x19, #72]
  45455c:	ldrb	w0, [x2]
  454560:	cmp	w0, #0x6c
  454564:	b.ne	45443c <_obstack_memory_used@@Base+0xfa38>  // b.any
  454568:	ldrb	w0, [x2, #1]
  45456c:	cmp	w0, #0x69
  454570:	b.ne	45443c <_obstack_memory_used@@Base+0xfa38>  // b.any
  454574:	ldrb	w0, [x2, #2]
  454578:	cbnz	w0, 45443c <_obstack_memory_used@@Base+0xfa38>
  45457c:	mov	x0, x19
  454580:	bl	450ac0 <_obstack_memory_used@@Base+0xc0bc>
  454584:	mov	x2, x20
  454588:	mov	x3, x0
  45458c:	mov	w1, #0x37                  	// #55
  454590:	mov	x0, x19
  454594:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  454598:	mov	x20, x0
  45459c:	ldr	x3, [x19, #24]
  4545a0:	ldrb	w1, [x3]
  4545a4:	b	454444 <_obstack_memory_used@@Base+0xfa40>
  4545a8:	add	x3, x3, #0x1
  4545ac:	str	x3, [x0, #24]
  4545b0:	bl	450ac0 <_obstack_memory_used@@Base+0xc0bc>
  4545b4:	mov	x20, x0
  4545b8:	cbz	x0, 4545c8 <_obstack_memory_used@@Base+0xfbc4>
  4545bc:	mov	x0, x19
  4545c0:	bl	451028 <_obstack_memory_used@@Base+0xc624>
  4545c4:	cbnz	w0, 45443c <_obstack_memory_used@@Base+0xfa38>
  4545c8:	mov	x20, #0x0                   	// #0
  4545cc:	mov	x0, x20
  4545d0:	ldp	x19, x20, [sp, #16]
  4545d4:	ldp	x29, x30, [sp], #48
  4545d8:	ret
  4545dc:	ldrb	w0, [x3, #1]
  4545e0:	cmp	w0, #0x6e
  4545e4:	b.ne	454420 <_obstack_memory_used@@Base+0xfa1c>  // b.any
  4545e8:	add	x3, x3, #0x2
  4545ec:	str	x3, [x19, #24]
  4545f0:	b	454420 <_obstack_memory_used@@Base+0xfa1c>
  4545f4:	ldr	x0, [x0, #64]
  4545f8:	cbz	x0, 45460c <_obstack_memory_used@@Base+0xfc08>
  4545fc:	ldr	w1, [x0]
  454600:	cbz	w1, 454688 <_obstack_memory_used@@Base+0xfc84>
  454604:	cmp	w1, #0x18
  454608:	b.eq	454688 <_obstack_memory_used@@Base+0xfc84>  // b.none
  45460c:	cmp	w2, #0x43
  454610:	b.eq	454768 <_obstack_memory_used@@Base+0xfd64>  // b.none
  454614:	ldrb	w1, [x3, #1]
  454618:	cmp	w1, #0x32
  45461c:	b.eq	45486c <_obstack_memory_used@@Base+0xfe68>  // b.none
  454620:	b.hi	4547dc <_obstack_memory_used@@Base+0xfdd8>  // b.pmore
  454624:	cmp	w1, #0x30
  454628:	b.eq	454808 <_obstack_memory_used@@Base+0xfe04>  // b.none
  45462c:	cmp	w1, #0x31
  454630:	mov	w4, #0x2                   	// #2
  454634:	b.ne	4547f0 <_obstack_memory_used@@Base+0xfdec>  // b.any
  454638:	add	x1, x3, #0x2
  45463c:	ldr	w2, [x19, #44]
  454640:	str	x1, [x19, #24]
  454644:	ldr	w1, [x19, #40]
  454648:	cmp	w1, w2
  45464c:	b.ge	4547fc <_obstack_memory_used@@Base+0xfdf8>  // b.tcont
  454650:	mov	w6, #0x18                  	// #24
  454654:	add	w5, w1, #0x1
  454658:	ldr	x2, [x19, #32]
  45465c:	smull	x1, w1, w6
  454660:	add	x20, x2, x1
  454664:	str	wzr, [x20, #4]
  454668:	str	w5, [x19, #40]
  45466c:	cbz	x0, 4547fc <_obstack_memory_used@@Base+0xfdf8>
  454670:	mov	x5, #0x8                   	// #8
  454674:	str	x5, [x2, x1]
  454678:	str	w4, [x20, #8]
  45467c:	str	x0, [x20, #16]
  454680:	ldrb	w1, [x3, #2]
  454684:	b	454444 <_obstack_memory_used@@Base+0xfa40>
  454688:	ldr	w2, [x0, #16]
  45468c:	ldr	w1, [x19, #72]
  454690:	add	w1, w1, w2
  454694:	str	w1, [x19, #72]
  454698:	ldrb	w1, [x3]
  45469c:	cmp	w1, #0x43
  4546a0:	mov	w2, w1
  4546a4:	b.eq	454768 <_obstack_memory_used@@Base+0xfd64>  // b.none
  4546a8:	cmp	w1, #0x44
  4546ac:	b.eq	454614 <_obstack_memory_used@@Base+0xfc10>  // b.none
  4546b0:	mov	x20, #0x0                   	// #0
  4546b4:	b	454444 <_obstack_memory_used@@Base+0xfa40>
  4546b8:	add	x1, x3, #0x1
  4546bc:	str	x1, [x0, #24]
  4546c0:	mov	x20, #0x0                   	// #0
  4546c4:	ldrb	w1, [x3, #1]
  4546c8:	cmp	w1, #0x6c
  4546cc:	b.ne	454444 <_obstack_memory_used@@Base+0xfa40>  // b.any
  4546d0:	add	x3, x3, #0x2
  4546d4:	str	x3, [x0, #24]
  4546d8:	bl	453ed0 <_obstack_memory_used@@Base+0xf4cc>
  4546dc:	mov	x11, x0
  4546e0:	ldr	x0, [x19, #24]
  4546e4:	ldrb	w1, [x0]
  4546e8:	cbz	x11, 454444 <_obstack_memory_used@@Base+0xfa40>
  4546ec:	cmp	w1, #0x45
  4546f0:	b.ne	454444 <_obstack_memory_used@@Base+0xfa40>  // b.any
  4546f4:	add	x0, x0, #0x1
  4546f8:	str	x0, [x19, #24]
  4546fc:	mov	x0, x19
  454700:	bl	4509c8 <_obstack_memory_used@@Base+0xbfc4>
  454704:	tbnz	w0, #31, 454880 <_obstack_memory_used@@Base+0xfe7c>
  454708:	ldp	w1, w2, [x19, #40]
  45470c:	ldr	x4, [x19, #24]
  454710:	cmp	w1, w2
  454714:	b.ge	454890 <_obstack_memory_used@@Base+0xfe8c>  // b.tcont
  454718:	mov	w2, #0x18                  	// #24
  45471c:	add	w6, w1, #0x1
  454720:	ldr	x3, [x19, #32]
  454724:	smull	x1, w1, w2
  454728:	ldp	w2, w7, [x19, #56]
  45472c:	add	x20, x3, x1
  454730:	mov	w5, #0x46                  	// #70
  454734:	cmp	w2, w7
  454738:	str	wzr, [x20, #4]
  45473c:	str	w6, [x19, #40]
  454740:	str	w5, [x3, x1]
  454744:	str	x11, [x20, #8]
  454748:	str	w0, [x20, #16]
  45474c:	b.ge	454890 <_obstack_memory_used@@Base+0xfe8c>  // b.tcont
  454750:	ldr	x1, [x19, #48]
  454754:	add	w0, w2, #0x1
  454758:	str	x20, [x1, w2, sxtw #3]
  45475c:	str	w0, [x19, #56]
  454760:	ldrb	w1, [x4]
  454764:	b	454444 <_obstack_memory_used@@Base+0xfa40>
  454768:	str	x21, [sp, #32]
  45476c:	ldrb	w1, [x3, #1]
  454770:	cmp	w1, #0x49
  454774:	b.eq	454818 <_obstack_memory_used@@Base+0xfe14>  // b.none
  454778:	sub	w2, w1, #0x31
  45477c:	and	w2, w2, #0xff
  454780:	cmp	w2, #0x4
  454784:	b.hi	454860 <_obstack_memory_used@@Base+0xfe5c>  // b.pmore
  454788:	sub	w21, w1, #0x30
  45478c:	add	x3, x3, #0x2
  454790:	str	x3, [x19, #24]
  454794:	ldp	w1, w2, [x19, #40]
  454798:	cmp	w1, w2
  45479c:	b.ge	45489c <_obstack_memory_used@@Base+0xfe98>  // b.tcont
  4547a0:	mov	w4, #0x18                  	// #24
  4547a4:	add	w3, w1, #0x1
  4547a8:	smull	x1, w1, w4
  4547ac:	ldp	x4, x2, [x19, #24]
  4547b0:	add	x20, x2, x1
  4547b4:	str	wzr, [x20, #4]
  4547b8:	str	w3, [x19, #40]
  4547bc:	cbz	x0, 454850 <_obstack_memory_used@@Base+0xfe4c>
  4547c0:	mov	x3, #0x7                   	// #7
  4547c4:	str	x3, [x2, x1]
  4547c8:	str	w21, [x20, #8]
  4547cc:	str	x0, [x20, #16]
  4547d0:	ldr	x21, [sp, #32]
  4547d4:	ldrb	w1, [x4]
  4547d8:	b	454444 <_obstack_memory_used@@Base+0xfa40>
  4547dc:	cmp	w1, #0x34
  4547e0:	b.eq	454810 <_obstack_memory_used@@Base+0xfe0c>  // b.none
  4547e4:	cmp	w1, #0x35
  4547e8:	mov	w4, #0x5                   	// #5
  4547ec:	b.eq	454638 <_obstack_memory_used@@Base+0xfc34>  // b.none
  4547f0:	mov	w1, w2
  4547f4:	mov	x20, #0x0                   	// #0
  4547f8:	b	454444 <_obstack_memory_used@@Base+0xfa40>
  4547fc:	ldrb	w1, [x3, #2]
  454800:	mov	x20, #0x0                   	// #0
  454804:	b	454444 <_obstack_memory_used@@Base+0xfa40>
  454808:	mov	w4, #0x1                   	// #1
  45480c:	b	454638 <_obstack_memory_used@@Base+0xfc34>
  454810:	mov	w4, #0x4                   	// #4
  454814:	b	454638 <_obstack_memory_used@@Base+0xfc34>
  454818:	add	x0, x3, #0x1
  45481c:	str	x0, [x19, #24]
  454820:	ldrb	w1, [x3, #2]
  454824:	sub	w0, w1, #0x31
  454828:	and	w0, w0, #0xff
  45482c:	cmp	w0, #0x4
  454830:	b.hi	4548b0 <_obstack_memory_used@@Base+0xfeac>  // b.pmore
  454834:	add	x3, x3, #0x3
  454838:	str	x3, [x19, #24]
  45483c:	sub	w21, w1, #0x30
  454840:	mov	x0, x19
  454844:	bl	453130 <_obstack_memory_used@@Base+0xe72c>
  454848:	ldr	x0, [x19, #64]
  45484c:	b	454794 <_obstack_memory_used@@Base+0xfd90>
  454850:	ldrb	w1, [x4]
  454854:	mov	x20, #0x0                   	// #0
  454858:	ldr	x21, [sp, #32]
  45485c:	b	454444 <_obstack_memory_used@@Base+0xfa40>
  454860:	mov	x20, #0x0                   	// #0
  454864:	ldr	x21, [sp, #32]
  454868:	b	4545cc <_obstack_memory_used@@Base+0xfbc8>
  45486c:	mov	w4, #0x3                   	// #3
  454870:	b	454638 <_obstack_memory_used@@Base+0xfc34>
  454874:	ldrb	w1, [x7]
  454878:	mov	x20, #0x0                   	// #0
  45487c:	b	454444 <_obstack_memory_used@@Base+0xfa40>
  454880:	ldr	x0, [x19, #24]
  454884:	mov	x20, #0x0                   	// #0
  454888:	ldrb	w1, [x0]
  45488c:	b	454444 <_obstack_memory_used@@Base+0xfa40>
  454890:	ldrb	w1, [x4]
  454894:	mov	x20, #0x0                   	// #0
  454898:	b	454444 <_obstack_memory_used@@Base+0xfa40>
  45489c:	ldr	x0, [x19, #24]
  4548a0:	mov	x20, #0x0                   	// #0
  4548a4:	ldr	x21, [sp, #32]
  4548a8:	ldrb	w1, [x0]
  4548ac:	b	454444 <_obstack_memory_used@@Base+0xfa40>
  4548b0:	ldrb	w1, [x3, #1]
  4548b4:	mov	x20, #0x0                   	// #0
  4548b8:	ldr	x21, [sp, #32]
  4548bc:	b	454444 <_obstack_memory_used@@Base+0xfa40>
  4548c0:	ldr	x2, [x0, #24]
  4548c4:	ldrb	w1, [x2]
  4548c8:	cmp	w1, #0x4c
  4548cc:	b.ne	4549b4 <_obstack_memory_used@@Base+0xffb0>  // b.any
  4548d0:	stp	x29, x30, [sp, #-32]!
  4548d4:	add	x1, x2, #0x1
  4548d8:	mov	w4, #0x5a                  	// #90
  4548dc:	mov	x29, sp
  4548e0:	str	x19, [sp, #16]
  4548e4:	mov	x19, x0
  4548e8:	str	x1, [x0, #24]
  4548ec:	ldrb	w3, [x2, #1]
  4548f0:	cmp	w3, #0x5f
  4548f4:	ccmp	w3, w4, #0x4, ne  // ne = any
  4548f8:	b.eq	454974 <_obstack_memory_used@@Base+0xff70>  // b.none
  4548fc:	bl	453130 <_obstack_memory_used@@Base+0xe72c>
  454900:	mov	x2, x0
  454904:	cbz	x0, 454964 <_obstack_memory_used@@Base+0xff60>
  454908:	ldr	w0, [x0]
  45490c:	cmp	w0, #0x27
  454910:	b.eq	454a2c <_obstack_memory_used@@Base+0x10028>  // b.none
  454914:	ldr	x0, [x19, #24]
  454918:	mov	w1, #0x3d                  	// #61
  45491c:	ldrb	w4, [x0]
  454920:	cmp	w4, #0x6e
  454924:	b.ne	45493c <_obstack_memory_used@@Base+0xff38>  // b.any
  454928:	add	x3, x0, #0x1
  45492c:	str	x3, [x19, #24]
  454930:	mov	w1, #0x3e                  	// #62
  454934:	ldrb	w4, [x0, #1]
  454938:	mov	x0, x3
  45493c:	cmp	w4, #0x45
  454940:	b.eq	454a54 <_obstack_memory_used@@Base+0x10050>  // b.none
  454944:	add	x3, x0, #0x1
  454948:	b	45495c <_obstack_memory_used@@Base+0xff58>
  45494c:	str	x3, [x19, #24]
  454950:	ldrb	w4, [x3], #1
  454954:	cmp	w4, #0x45
  454958:	b.eq	4549d8 <_obstack_memory_used@@Base+0xffd4>  // b.none
  45495c:	mov	x5, x3
  454960:	cbnz	w4, 45494c <_obstack_memory_used@@Base+0xff48>
  454964:	mov	x0, #0x0                   	// #0
  454968:	ldr	x19, [sp, #16]
  45496c:	ldp	x29, x30, [sp], #32
  454970:	ret
  454974:	cmp	w3, #0x5f
  454978:	b.eq	4549bc <_obstack_memory_used@@Base+0xffb8>  // b.none
  45497c:	add	x1, x1, #0x1
  454980:	str	x1, [x19, #24]
  454984:	mov	x0, x19
  454988:	mov	w1, #0x0                   	// #0
  45498c:	bl	4523e8 <_obstack_memory_used@@Base+0xd9e4>
  454990:	ldr	x1, [x19, #24]
  454994:	ldrb	w2, [x1]
  454998:	cmp	w2, #0x45
  45499c:	b.ne	454964 <_obstack_memory_used@@Base+0xff60>  // b.any
  4549a0:	add	x1, x1, #0x1
  4549a4:	str	x1, [x19, #24]
  4549a8:	ldr	x19, [sp, #16]
  4549ac:	ldp	x29, x30, [sp], #32
  4549b0:	ret
  4549b4:	mov	x0, #0x0                   	// #0
  4549b8:	ret
  4549bc:	add	x1, x2, #0x2
  4549c0:	str	x1, [x19, #24]
  4549c4:	mov	x0, #0x0                   	// #0
  4549c8:	ldrb	w2, [x2, #2]
  4549cc:	cmp	w2, w4
  4549d0:	b.ne	454998 <_obstack_memory_used@@Base+0xff94>  // b.any
  4549d4:	b	45497c <_obstack_memory_used@@Base+0xff78>
  4549d8:	sub	w5, w5, w0
  4549dc:	ldp	w3, w4, [x19, #40]
  4549e0:	cmp	w3, w4
  4549e4:	b.ge	454a4c <_obstack_memory_used@@Base+0x10048>  // b.tcont
  4549e8:	mov	w4, #0x18                  	// #24
  4549ec:	add	w7, w3, #0x1
  4549f0:	ldr	x6, [x19, #32]
  4549f4:	smull	x4, w3, w4
  4549f8:	cmp	w5, #0x0
  4549fc:	add	x3, x6, x4
  454a00:	str	wzr, [x3, #4]
  454a04:	str	w7, [x19, #40]
  454a08:	b.le	454a4c <_obstack_memory_used@@Base+0x10048>
  454a0c:	str	xzr, [x6, x4]
  454a10:	str	x0, [x3, #8]
  454a14:	str	w5, [x3, #16]
  454a18:	mov	x0, x19
  454a1c:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  454a20:	ldr	x1, [x19, #24]
  454a24:	ldrb	w2, [x1]
  454a28:	b	454998 <_obstack_memory_used@@Base+0xff94>
  454a2c:	ldr	x0, [x2, #8]
  454a30:	ldr	w1, [x0, #28]
  454a34:	cbz	w1, 454914 <_obstack_memory_used@@Base+0xff10>
  454a38:	ldr	w1, [x0, #8]
  454a3c:	ldr	w0, [x19, #72]
  454a40:	sub	w0, w0, w1
  454a44:	str	w0, [x19, #72]
  454a48:	b	454914 <_obstack_memory_used@@Base+0xff10>
  454a4c:	mov	x3, #0x0                   	// #0
  454a50:	b	454a18 <_obstack_memory_used@@Base+0x10014>
  454a54:	mov	w5, #0x0                   	// #0
  454a58:	b	4549dc <_obstack_memory_used@@Base+0xffd8>
  454a5c:	nop
  454a60:	stp	x29, x30, [sp, #-224]!
  454a64:	mov	x29, sp
  454a68:	stp	x19, x20, [sp, #16]
  454a6c:	mov	x19, x0
  454a70:	cbz	x2, 454af8 <_obstack_memory_used@@Base+0x100f4>
  454a74:	stp	x21, x22, [sp, #32]
  454a78:	ldr	w22, [x0, #304]
  454a7c:	cbnz	w22, 454ac0 <_obstack_memory_used@@Base+0x100bc>
  454a80:	ldr	w0, [x2]
  454a84:	mov	x20, x2
  454a88:	cmp	w0, #0x50
  454a8c:	b.ls	454aa0 <_obstack_memory_used@@Base+0x1009c>  // b.plast
  454a90:	mov	w0, #0x1                   	// #1
  454a94:	ldp	x21, x22, [sp, #32]
  454a98:	str	w0, [x19, #304]
  454a9c:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  454aa0:	mov	w21, w1
  454aa4:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x285fc>
  454aa8:	add	x1, x1, #0x60c
  454aac:	stp	x23, x24, [sp, #48]
  454ab0:	ldrh	w1, [x1, w0, uxtw #1]
  454ab4:	adr	x2, 454ac0 <_obstack_memory_used@@Base+0x100bc>
  454ab8:	add	x1, x2, w1, sxth #2
  454abc:	br	x1
  454ac0:	ldp	x21, x22, [sp, #32]
  454ac4:	ldp	x19, x20, [sp, #16]
  454ac8:	ldp	x29, x30, [sp], #224
  454acc:	ret
  454ad0:	ldr	x0, [x20, #16]
  454ad4:	ldr	w1, [x0]
  454ad8:	cmp	w1, #0x3b
  454adc:	b.ne	454af0 <_obstack_memory_used@@Base+0x100ec>  // b.any
  454ae0:	ldr	x0, [x0, #16]
  454ae4:	ldr	w0, [x0]
  454ae8:	cmp	w0, #0x3c
  454aec:	b.eq	457fd8 <_obstack_memory_used@@Base+0x135d4>  // b.none
  454af0:	ldp	x21, x22, [sp, #32]
  454af4:	ldp	x23, x24, [sp, #48]
  454af8:	mov	w0, #0x1                   	// #1
  454afc:	str	w0, [x19, #304]
  454b00:	ldp	x19, x20, [sp, #16]
  454b04:	ldp	x29, x30, [sp], #224
  454b08:	ret
  454b0c:	ldp	x1, x2, [x19, #288]
  454b10:	add	x0, sp, #0x60
  454b14:	stp	x2, x20, [sp, #96]
  454b18:	str	wzr, [sp, #112]
  454b1c:	str	x1, [sp, #120]
  454b20:	str	x0, [x19, #296]
  454b24:	ldr	x2, [x20, #8]
  454b28:	mov	x0, x19
  454b2c:	mov	w1, w21
  454b30:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  454b34:	ldr	w0, [sp, #112]
  454b38:	cbz	w0, 456ee4 <_obstack_memory_used@@Base+0x124e0>
  454b3c:	ldr	x0, [sp, #96]
  454b40:	str	x0, [x19, #296]
  454b44:	cbz	w22, 456718 <_obstack_memory_used@@Base+0x11d14>
  454b48:	ldp	x21, x22, [sp, #32]
  454b4c:	str	x23, [x19, #288]
  454b50:	ldp	x23, x24, [sp, #48]
  454b54:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  454b58:	ldr	x4, [x19, #296]
  454b5c:	cbz	x4, 454c98 <_obstack_memory_used@@Base+0x10294>
  454b60:	mov	x1, x4
  454b64:	nop
  454b68:	ldr	w2, [x1, #16]
  454b6c:	cbnz	w2, 454b8c <_obstack_memory_used@@Base+0x10188>
  454b70:	ldr	x2, [x1, #8]
  454b74:	ldr	w2, [x2]
  454b78:	sub	w3, w2, #0x19
  454b7c:	cmp	w3, #0x2
  454b80:	b.hi	457b38 <_obstack_memory_used@@Base+0x13134>  // b.pmore
  454b84:	cmp	w0, w2
  454b88:	b.eq	457b58 <_obstack_memory_used@@Base+0x13154>  // b.none
  454b8c:	ldr	x1, [x1]
  454b90:	cbnz	x1, 454b68 <_obstack_memory_used@@Base+0x10164>
  454b94:	b	454c98 <_obstack_memory_used@@Base+0x10294>
  454b98:	ldp	x23, x24, [sp, #48]
  454b9c:	b	454a90 <_obstack_memory_used@@Base+0x1008c>
  454ba0:	ldr	x2, [x20, #8]
  454ba4:	mov	w22, #0x0                   	// #0
  454ba8:	ldr	w1, [x2]
  454bac:	cmp	w1, #0x27
  454bb0:	b.eq	4573c0 <_obstack_memory_used@@Base+0x129bc>  // b.none
  454bb4:	ldr	x1, [x19, #256]
  454bb8:	add	x0, x1, #0x1
  454bbc:	cmp	x1, #0xff
  454bc0:	b.ne	454bec <_obstack_memory_used@@Base+0x101e8>  // b.any
  454bc4:	ldp	x3, x2, [x19, #272]
  454bc8:	strb	wzr, [x19, #255]
  454bcc:	mov	x0, x19
  454bd0:	blr	x3
  454bd4:	ldr	x3, [x19, #320]
  454bd8:	mov	x0, #0x1                   	// #1
  454bdc:	mov	x1, #0x0                   	// #0
  454be0:	add	x3, x3, x0
  454be4:	ldr	x2, [x20, #8]
  454be8:	str	x3, [x19, #320]
  454bec:	str	x0, [x19, #256]
  454bf0:	mov	w0, #0x28                  	// #40
  454bf4:	strb	w0, [x19, x1]
  454bf8:	mov	w1, w21
  454bfc:	strb	w0, [x19, #264]
  454c00:	mov	x0, x19
  454c04:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  454c08:	ldr	x1, [x19, #256]
  454c0c:	cmp	x1, #0xff
  454c10:	b.eq	457ab0 <_obstack_memory_used@@Base+0x130ac>  // b.none
  454c14:	add	x3, x1, #0x1
  454c18:	str	x3, [x19, #256]
  454c1c:	mov	w0, #0x29                  	// #41
  454c20:	strb	w0, [x19, x1]
  454c24:	strb	w0, [x19, #264]
  454c28:	ldr	w0, [x20]
  454c2c:	cmp	w0, #0x3e
  454c30:	b.eq	457b74 <_obstack_memory_used@@Base+0x13170>  // b.none
  454c34:	cmp	w22, #0x8
  454c38:	b.eq	457954 <_obstack_memory_used@@Base+0x12f50>  // b.none
  454c3c:	ldr	x2, [x20, #16]
  454c40:	mov	w1, w21
  454c44:	mov	x0, x19
  454c48:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  454c4c:	ldp	x21, x22, [sp, #32]
  454c50:	ldp	x23, x24, [sp, #48]
  454c54:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  454c58:	ldr	w2, [x19, #312]
  454c5c:	ldr	x0, [x20, #8]
  454c60:	ldr	w1, [x0]
  454c64:	cbnz	w2, 454c74 <_obstack_memory_used@@Base+0x10270>
  454c68:	cmp	w1, #0x5
  454c6c:	mov	w22, #0x0                   	// #0
  454c70:	b.eq	457f34 <_obstack_memory_used@@Base+0x13530>  // b.none
  454c74:	cmp	w1, #0x23
  454c78:	ldr	x4, [x19, #296]
  454c7c:	b.eq	456f8c <_obstack_memory_used@@Base+0x12588>  // b.none
  454c80:	ldr	w2, [x20]
  454c84:	cmp	w2, w1
  454c88:	b.eq	456f8c <_obstack_memory_used@@Base+0x12588>  // b.none
  454c8c:	cmp	w1, #0x24
  454c90:	b.eq	4566f4 <_obstack_memory_used@@Base+0x11cf0>  // b.none
  454c94:	nop
  454c98:	ldr	x1, [x19, #288]
  454c9c:	add	x0, sp, #0x60
  454ca0:	stp	x4, x20, [sp, #96]
  454ca4:	str	wzr, [sp, #112]
  454ca8:	str	x1, [sp, #120]
  454cac:	str	x0, [x19, #296]
  454cb0:	b	454b24 <_obstack_memory_used@@Base+0x10120>
  454cb4:	ldr	x2, [x20, #8]
  454cb8:	mov	w1, w21
  454cbc:	mov	x0, x19
  454cc0:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  454cc4:	tbz	w21, #2, 4578f8 <_obstack_memory_used@@Base+0x12ef4>
  454cc8:	ldr	x1, [x19, #256]
  454ccc:	add	x0, x1, #0x1
  454cd0:	cmp	x1, #0xff
  454cd4:	b.ne	454cfc <_obstack_memory_used@@Base+0x102f8>  // b.any
  454cd8:	ldp	x3, x2, [x19, #272]
  454cdc:	strb	wzr, [x19, #255]
  454ce0:	mov	x0, x19
  454ce4:	blr	x3
  454ce8:	ldr	x2, [x19, #320]
  454cec:	mov	x0, #0x1                   	// #1
  454cf0:	mov	x1, #0x0                   	// #0
  454cf4:	add	x2, x2, x0
  454cf8:	str	x2, [x19, #320]
  454cfc:	str	x0, [x19, #256]
  454d00:	mov	w0, #0x2e                  	// #46
  454d04:	strb	w0, [x19, x1]
  454d08:	strb	w0, [x19, #264]
  454d0c:	ldr	x23, [x20, #16]
  454d10:	ldr	w0, [x23]
  454d14:	cmp	w0, #0x47
  454d18:	b.eq	457bb0 <_obstack_memory_used@@Base+0x131ac>  // b.none
  454d1c:	mov	x2, x23
  454d20:	mov	w1, w21
  454d24:	mov	x0, x19
  454d28:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  454d2c:	ldp	x21, x22, [sp, #32]
  454d30:	ldp	x23, x24, [sp, #48]
  454d34:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  454d38:	ldp	x3, x4, [x19, #288]
  454d3c:	add	x0, sp, #0x60
  454d40:	ldr	x2, [x20, #16]
  454d44:	str	x0, [x19, #296]
  454d48:	mov	w1, w21
  454d4c:	mov	x0, x19
  454d50:	stp	x4, x20, [sp, #96]
  454d54:	str	wzr, [sp, #112]
  454d58:	str	x3, [sp, #120]
  454d5c:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  454d60:	ldr	w0, [sp, #112]
  454d64:	cbz	w0, 457874 <_obstack_memory_used@@Base+0x12e70>
  454d68:	ldr	x0, [sp, #96]
  454d6c:	ldp	x21, x22, [sp, #32]
  454d70:	ldp	x23, x24, [sp, #48]
  454d74:	str	x0, [x19, #296]
  454d78:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  454d7c:	ldr	x2, [x20, #8]
  454d80:	cbz	x2, 454d90 <_obstack_memory_used@@Base+0x1038c>
  454d84:	mov	w1, w21
  454d88:	mov	x0, x19
  454d8c:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  454d90:	ldr	x0, [x20, #16]
  454d94:	cbz	x0, 457b20 <_obstack_memory_used@@Base+0x1311c>
  454d98:	ldr	x22, [x19, #256]
  454d9c:	cmp	x22, #0xfd
  454da0:	b.ls	454dcc <_obstack_memory_used@@Base+0x103c8>  // b.plast
  454da4:	strb	wzr, [x19, x22]
  454da8:	mov	x1, x22
  454dac:	mov	x0, x19
  454db0:	mov	x22, #0x0                   	// #0
  454db4:	ldp	x3, x2, [x19, #272]
  454db8:	blr	x3
  454dbc:	str	xzr, [x19, #256]
  454dc0:	ldr	x0, [x19, #320]
  454dc4:	add	x0, x0, #0x1
  454dc8:	str	x0, [x19, #320]
  454dcc:	mov	w23, #0x2c                  	// #44
  454dd0:	mov	x24, #0x0                   	// #0
  454dd4:	b	454df8 <_obstack_memory_used@@Base+0x103f4>
  454dd8:	mov	x0, x22
  454ddc:	add	x22, x22, #0x1
  454de0:	str	x22, [x19, #256]
  454de4:	strb	w23, [x19, x0]
  454de8:	strb	w23, [x19, #264]
  454dec:	mov	w23, #0x20                  	// #32
  454df0:	cbnz	x24, 456f2c <_obstack_memory_used@@Base+0x12528>
  454df4:	mov	x24, #0x1                   	// #1
  454df8:	cmp	x22, #0xff
  454dfc:	b.ne	454dd8 <_obstack_memory_used@@Base+0x103d4>  // b.any
  454e00:	ldp	x3, x2, [x19, #272]
  454e04:	strb	wzr, [x19, #255]
  454e08:	mov	x1, x22
  454e0c:	mov	x0, x19
  454e10:	mov	x22, #0x1                   	// #1
  454e14:	blr	x3
  454e18:	ldr	x1, [x19, #320]
  454e1c:	mov	x0, #0x0                   	// #0
  454e20:	add	x1, x1, x22
  454e24:	str	x1, [x19, #320]
  454e28:	b	454de0 <_obstack_memory_used@@Base+0x103dc>
  454e2c:	ldr	x2, [x20, #16]
  454e30:	mov	w1, w21
  454e34:	mov	x0, x19
  454e38:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  454e3c:	ldp	x21, x22, [sp, #32]
  454e40:	ldp	x23, x24, [sp, #48]
  454e44:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  454e48:	adrp	x24, 46d000 <_obstack_memory_used@@Base+0x285fc>
  454e4c:	add	x24, x24, #0xa68
  454e50:	adrp	x22, 46d000 <_obstack_memory_used@@Base+0x285fc>
  454e54:	add	x24, x24, #0x1c
  454e58:	add	x22, x22, #0xa69
  454e5c:	mov	w23, #0x67                  	// #103
  454e60:	ldr	x1, [x19, #256]
  454e64:	b	454e88 <_obstack_memory_used@@Base+0x10484>
  454e68:	mov	x0, x1
  454e6c:	add	x1, x1, #0x1
  454e70:	str	x1, [x19, #256]
  454e74:	cmp	x22, x24
  454e78:	strb	w23, [x19, x0]
  454e7c:	strb	w23, [x19, #264]
  454e80:	b.eq	456b2c <_obstack_memory_used@@Base+0x12128>  // b.none
  454e84:	ldrb	w23, [x22], #1
  454e88:	cmp	x1, #0xff
  454e8c:	b.ne	454e68 <_obstack_memory_used@@Base+0x10464>  // b.any
  454e90:	ldp	x3, x2, [x19, #272]
  454e94:	strb	wzr, [x19, #255]
  454e98:	mov	x0, x19
  454e9c:	blr	x3
  454ea0:	ldr	x2, [x19, #320]
  454ea4:	mov	x1, #0x1                   	// #1
  454ea8:	mov	x0, #0x0                   	// #0
  454eac:	add	x2, x2, x1
  454eb0:	str	x2, [x19, #320]
  454eb4:	b	454e70 <_obstack_memory_used@@Base+0x1046c>
  454eb8:	adrp	x22, 46d000 <_obstack_memory_used@@Base+0x285fc>
  454ebc:	add	x22, x22, #0xa88
  454ec0:	add	x24, x22, #0x8
  454ec4:	mov	w23, #0x7b                  	// #123
  454ec8:	ldr	x1, [x19, #256]
  454ecc:	b	454ef4 <_obstack_memory_used@@Base+0x104f0>
  454ed0:	mov	x0, x1
  454ed4:	add	x1, x1, #0x1
  454ed8:	str	x1, [x19, #256]
  454edc:	add	x22, x22, #0x1
  454ee0:	strb	w23, [x19, x0]
  454ee4:	cmp	x24, x22
  454ee8:	strb	w23, [x19, #264]
  454eec:	b.eq	456b48 <_obstack_memory_used@@Base+0x12144>  // b.none
  454ef0:	ldrb	w23, [x22]
  454ef4:	cmp	x1, #0xff
  454ef8:	b.ne	454ed0 <_obstack_memory_used@@Base+0x104cc>  // b.any
  454efc:	ldp	x3, x2, [x19, #272]
  454f00:	strb	wzr, [x19, #255]
  454f04:	mov	x0, x19
  454f08:	blr	x3
  454f0c:	ldr	x2, [x19, #320]
  454f10:	mov	x1, #0x1                   	// #1
  454f14:	mov	x0, #0x0                   	// #0
  454f18:	add	x2, x2, x1
  454f1c:	str	x2, [x19, #320]
  454f20:	b	454ed8 <_obstack_memory_used@@Base+0x104d4>
  454f24:	adrp	x23, 46d000 <_obstack_memory_used@@Base+0x285fc>
  454f28:	add	x23, x23, #0xa98
  454f2c:	adrp	x21, 46d000 <_obstack_memory_used@@Base+0x285fc>
  454f30:	add	x23, x23, #0xe
  454f34:	add	x21, x21, #0xa99
  454f38:	mov	w22, #0x7b                  	// #123
  454f3c:	ldr	x1, [x19, #256]
  454f40:	b	454f64 <_obstack_memory_used@@Base+0x10560>
  454f44:	mov	x0, x1
  454f48:	add	x1, x1, #0x1
  454f4c:	str	x1, [x19, #256]
  454f50:	cmp	x23, x21
  454f54:	strb	w22, [x19, x0]
  454f58:	strb	w22, [x19, #264]
  454f5c:	b.eq	456a3c <_obstack_memory_used@@Base+0x12038>  // b.none
  454f60:	ldrb	w22, [x21], #1
  454f64:	cmp	x1, #0xff
  454f68:	b.ne	454f44 <_obstack_memory_used@@Base+0x10540>  // b.any
  454f6c:	ldp	x3, x2, [x19, #272]
  454f70:	strb	wzr, [x19, #255]
  454f74:	mov	x0, x19
  454f78:	blr	x3
  454f7c:	ldr	x2, [x19, #320]
  454f80:	mov	x1, #0x1                   	// #1
  454f84:	mov	x0, #0x0                   	// #0
  454f88:	add	x2, x2, x1
  454f8c:	str	x2, [x19, #320]
  454f90:	b	454f4c <_obstack_memory_used@@Base+0x10548>
  454f94:	adrp	x24, 46d000 <_obstack_memory_used@@Base+0x285fc>
  454f98:	add	x24, x24, #0x960
  454f9c:	adrp	x22, 46d000 <_obstack_memory_used@@Base+0x285fc>
  454fa0:	add	x24, x24, #0x16
  454fa4:	add	x22, x22, #0x961
  454fa8:	mov	w23, #0x74                  	// #116
  454fac:	ldr	x1, [x19, #256]
  454fb0:	b	454fd4 <_obstack_memory_used@@Base+0x105d0>
  454fb4:	mov	x0, x1
  454fb8:	add	x1, x1, #0x1
  454fbc:	str	x1, [x19, #256]
  454fc0:	cmp	x24, x22
  454fc4:	strb	w23, [x19, x0]
  454fc8:	strb	w23, [x19, #264]
  454fcc:	b.eq	456b10 <_obstack_memory_used@@Base+0x1210c>  // b.none
  454fd0:	ldrb	w23, [x22], #1
  454fd4:	cmp	x1, #0xff
  454fd8:	b.ne	454fb4 <_obstack_memory_used@@Base+0x105b0>  // b.any
  454fdc:	ldp	x3, x2, [x19, #272]
  454fe0:	strb	wzr, [x19, #255]
  454fe4:	mov	x0, x19
  454fe8:	blr	x3
  454fec:	ldr	x2, [x19, #320]
  454ff0:	mov	x1, #0x1                   	// #1
  454ff4:	mov	x0, #0x0                   	// #0
  454ff8:	add	x2, x2, x1
  454ffc:	str	x2, [x19, #320]
  455000:	b	454fbc <_obstack_memory_used@@Base+0x105b8>
  455004:	adrp	x24, 46d000 <_obstack_memory_used@@Base+0x285fc>
  455008:	add	x24, x24, #0x7d8
  45500c:	adrp	x22, 46d000 <_obstack_memory_used@@Base+0x285fc>
  455010:	add	x24, x24, #0x1e
  455014:	add	x22, x22, #0x7d9
  455018:	mov	w23, #0x74                  	// #116
  45501c:	ldr	x1, [x19, #256]
  455020:	b	455044 <_obstack_memory_used@@Base+0x10640>
  455024:	mov	x0, x1
  455028:	add	x1, x1, #0x1
  45502c:	str	x1, [x19, #256]
  455030:	cmp	x24, x22
  455034:	strb	w23, [x19, x0]
  455038:	strb	w23, [x19, #264]
  45503c:	b.eq	456a20 <_obstack_memory_used@@Base+0x1201c>  // b.none
  455040:	ldrb	w23, [x22], #1
  455044:	cmp	x1, #0xff
  455048:	b.ne	455024 <_obstack_memory_used@@Base+0x10620>  // b.any
  45504c:	ldp	x3, x2, [x19, #272]
  455050:	strb	wzr, [x19, #255]
  455054:	mov	x0, x19
  455058:	blr	x3
  45505c:	ldr	x2, [x19, #320]
  455060:	mov	x1, #0x1                   	// #1
  455064:	mov	x0, #0x0                   	// #0
  455068:	add	x2, x2, x1
  45506c:	str	x2, [x19, #320]
  455070:	b	45502c <_obstack_memory_used@@Base+0x10628>
  455074:	ldp	x2, x20, [x20, #8]
  455078:	cbz	x2, 455088 <_obstack_memory_used@@Base+0x10684>
  45507c:	mov	w1, w21
  455080:	mov	x0, x19
  455084:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  455088:	ldr	x1, [x19, #256]
  45508c:	add	x0, x1, #0x1
  455090:	cmp	x1, #0xff
  455094:	b.ne	4550bc <_obstack_memory_used@@Base+0x106b8>  // b.any
  455098:	ldp	x3, x2, [x19, #272]
  45509c:	strb	wzr, [x19, #255]
  4550a0:	mov	x0, x19
  4550a4:	blr	x3
  4550a8:	ldr	x2, [x19, #320]
  4550ac:	mov	x0, #0x1                   	// #1
  4550b0:	mov	x1, #0x0                   	// #0
  4550b4:	add	x2, x2, x0
  4550b8:	str	x2, [x19, #320]
  4550bc:	str	x0, [x19, #256]
  4550c0:	mov	w0, #0x7b                  	// #123
  4550c4:	strb	w0, [x19, x1]
  4550c8:	mov	x2, x20
  4550cc:	strb	w0, [x19, #264]
  4550d0:	mov	w1, w21
  4550d4:	mov	x0, x19
  4550d8:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  4550dc:	ldr	x1, [x19, #256]
  4550e0:	add	x0, x1, #0x1
  4550e4:	cmp	x1, #0xff
  4550e8:	b.ne	455110 <_obstack_memory_used@@Base+0x1070c>  // b.any
  4550ec:	ldp	x3, x2, [x19, #272]
  4550f0:	strb	wzr, [x19, #255]
  4550f4:	mov	x0, x19
  4550f8:	blr	x3
  4550fc:	ldr	x2, [x19, #320]
  455100:	mov	x0, #0x1                   	// #1
  455104:	mov	x1, #0x0                   	// #0
  455108:	add	x2, x2, x0
  45510c:	str	x2, [x19, #320]
  455110:	str	x0, [x19, #256]
  455114:	mov	w0, #0x7d                  	// #125
  455118:	strb	w0, [x19, x1]
  45511c:	strb	w0, [x19, #264]
  455120:	ldp	x21, x22, [sp, #32]
  455124:	ldp	x23, x24, [sp, #48]
  455128:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  45512c:	ldr	x22, [x20, #8]
  455130:	adrp	x20, 46d000 <_obstack_memory_used@@Base+0x285fc>
  455134:	add	x20, x20, #0x9b0
  455138:	mov	w21, #0x6f                  	// #111
  45513c:	add	x24, x20, #0x8
  455140:	ldr	w23, [x22, #16]
  455144:	ldr	x1, [x19, #256]
  455148:	b	455170 <_obstack_memory_used@@Base+0x1076c>
  45514c:	mov	x0, x1
  455150:	add	x1, x1, #0x1
  455154:	str	x1, [x19, #256]
  455158:	add	x20, x20, #0x1
  45515c:	strb	w21, [x19, x0]
  455160:	cmp	x24, x20
  455164:	strb	w21, [x19, #264]
  455168:	b.eq	456944 <_obstack_memory_used@@Base+0x11f40>  // b.none
  45516c:	ldrb	w21, [x20]
  455170:	cmp	x1, #0xff
  455174:	b.ne	45514c <_obstack_memory_used@@Base+0x10748>  // b.any
  455178:	ldp	x3, x2, [x19, #272]
  45517c:	strb	wzr, [x19, #255]
  455180:	mov	x0, x19
  455184:	blr	x3
  455188:	ldr	x2, [x19, #320]
  45518c:	mov	x1, #0x1                   	// #1
  455190:	mov	x0, #0x0                   	// #0
  455194:	add	x2, x2, x1
  455198:	str	x2, [x19, #320]
  45519c:	b	455154 <_obstack_memory_used@@Base+0x10750>
  4551a0:	adrp	x22, 46d000 <_obstack_memory_used@@Base+0x285fc>
  4551a4:	add	x22, x22, #0x9c0
  4551a8:	add	x24, x22, #0x9
  4551ac:	mov	w23, #0x6f                  	// #111
  4551b0:	ldr	x1, [x19, #256]
  4551b4:	b	4551dc <_obstack_memory_used@@Base+0x107d8>
  4551b8:	mov	x0, x1
  4551bc:	add	x1, x1, #0x1
  4551c0:	str	x1, [x19, #256]
  4551c4:	add	x22, x22, #0x1
  4551c8:	strb	w23, [x19, x0]
  4551cc:	cmp	x22, x24
  4551d0:	strb	w23, [x19, #264]
  4551d4:	b.eq	456784 <_obstack_memory_used@@Base+0x11d80>  // b.none
  4551d8:	ldrb	w23, [x22]
  4551dc:	cmp	x1, #0xff
  4551e0:	b.ne	4551b8 <_obstack_memory_used@@Base+0x107b4>  // b.any
  4551e4:	ldp	x3, x2, [x19, #272]
  4551e8:	strb	wzr, [x19, #255]
  4551ec:	mov	x0, x19
  4551f0:	blr	x3
  4551f4:	ldr	x2, [x19, #320]
  4551f8:	mov	x1, #0x1                   	// #1
  4551fc:	mov	x0, #0x0                   	// #0
  455200:	add	x2, x2, x1
  455204:	str	x2, [x19, #320]
  455208:	b	4551c0 <_obstack_memory_used@@Base+0x107bc>
  45520c:	ldr	x2, [x20, #8]
  455210:	mov	w1, w21
  455214:	mov	x0, x19
  455218:	adrp	x22, 46d000 <_obstack_memory_used@@Base+0x285fc>
  45521c:	add	x22, x22, #0xaa8
  455220:	mov	w23, #0x20                  	// #32
  455224:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  455228:	add	x24, x22, #0x8
  45522c:	ldr	x1, [x19, #256]
  455230:	b	455258 <_obstack_memory_used@@Base+0x10854>
  455234:	mov	x0, x1
  455238:	add	x1, x1, #0x1
  45523c:	str	x1, [x19, #256]
  455240:	add	x22, x22, #0x1
  455244:	strb	w23, [x19, x0]
  455248:	cmp	x24, x22
  45524c:	strb	w23, [x19, #264]
  455250:	b.eq	456724 <_obstack_memory_used@@Base+0x11d20>  // b.none
  455254:	ldrb	w23, [x22]
  455258:	cmp	x1, #0xff
  45525c:	b.ne	455234 <_obstack_memory_used@@Base+0x10830>  // b.any
  455260:	ldp	x3, x2, [x19, #272]
  455264:	strb	wzr, [x19, #255]
  455268:	mov	x0, x19
  45526c:	blr	x3
  455270:	ldr	x2, [x19, #320]
  455274:	mov	x1, #0x1                   	// #1
  455278:	mov	x0, #0x0                   	// #0
  45527c:	add	x2, x2, x1
  455280:	str	x2, [x19, #320]
  455284:	b	45523c <_obstack_memory_used@@Base+0x10838>
  455288:	ldr	x2, [x20, #8]
  45528c:	mov	w1, w21
  455290:	mov	x0, x19
  455294:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  455298:	ldp	x21, x22, [sp, #32]
  45529c:	ldp	x23, x24, [sp, #48]
  4552a0:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  4552a4:	and	w22, w21, #0xffffff9f
  4552a8:	ldr	x3, [x19, #296]
  4552ac:	tbnz	w21, #5, 457a80 <_obstack_memory_used@@Base+0x1307c>
  4552b0:	ldr	x2, [x20, #8]
  4552b4:	cbz	x2, 4552bc <_obstack_memory_used@@Base+0x108b8>
  4552b8:	tbz	w21, #6, 457db4 <_obstack_memory_used@@Base+0x133b0>
  4552bc:	mov	w1, w22
  4552c0:	add	x2, x20, #0x10
  4552c4:	mov	x0, x19
  4552c8:	bl	459108 <_obstack_memory_used@@Base+0x14704>
  4552cc:	ldp	x21, x22, [sp, #32]
  4552d0:	ldp	x23, x24, [sp, #48]
  4552d4:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  4552d8:	ldr	x23, [x20, #8]
  4552dc:	ldr	x1, [x19, #256]
  4552e0:	cbz	x23, 45714c <_obstack_memory_used@@Base+0x12748>
  4552e4:	adrp	x20, 46d000 <_obstack_memory_used@@Base+0x285fc>
  4552e8:	add	x20, x20, #0xa38
  4552ec:	add	x22, x20, #0x6
  4552f0:	mov	w21, #0x7b                  	// #123
  4552f4:	b	45531c <_obstack_memory_used@@Base+0x10918>
  4552f8:	mov	x0, x1
  4552fc:	add	x1, x1, #0x1
  455300:	str	x1, [x19, #256]
  455304:	add	x20, x20, #0x1
  455308:	strb	w21, [x19, x0]
  45530c:	cmp	x22, x20
  455310:	strb	w21, [x19, #264]
  455314:	b.eq	4571c0 <_obstack_memory_used@@Base+0x127bc>  // b.none
  455318:	ldrb	w21, [x20]
  45531c:	cmp	x1, #0xff
  455320:	b.ne	4552f8 <_obstack_memory_used@@Base+0x108f4>  // b.any
  455324:	ldp	x3, x2, [x19, #272]
  455328:	strb	wzr, [x19, #255]
  45532c:	mov	x0, x19
  455330:	blr	x3
  455334:	ldr	x2, [x19, #320]
  455338:	mov	x1, #0x1                   	// #1
  45533c:	mov	x0, #0x0                   	// #0
  455340:	add	x2, x2, x1
  455344:	str	x2, [x19, #320]
  455348:	b	455300 <_obstack_memory_used@@Base+0x108fc>
  45534c:	adrp	x24, 46d000 <_obstack_memory_used@@Base+0x285fc>
  455350:	add	x24, x24, #0x948
  455354:	adrp	x22, 46d000 <_obstack_memory_used@@Base+0x285fc>
  455358:	add	x24, x24, #0x11
  45535c:	add	x22, x22, #0x949
  455360:	mov	w23, #0x68                  	// #104
  455364:	ldr	x1, [x19, #256]
  455368:	b	45538c <_obstack_memory_used@@Base+0x10988>
  45536c:	mov	x0, x1
  455370:	add	x1, x1, #0x1
  455374:	str	x1, [x19, #256]
  455378:	cmp	x22, x24
  45537c:	strb	w23, [x19, x0]
  455380:	strb	w23, [x19, #264]
  455384:	b.eq	456dec <_obstack_memory_used@@Base+0x123e8>  // b.none
  455388:	ldrb	w23, [x22], #1
  45538c:	cmp	x1, #0xff
  455390:	b.ne	45536c <_obstack_memory_used@@Base+0x10968>  // b.any
  455394:	ldp	x3, x2, [x19, #272]
  455398:	strb	wzr, [x19, #255]
  45539c:	mov	x0, x19
  4553a0:	blr	x3
  4553a4:	ldr	x2, [x19, #320]
  4553a8:	mov	x1, #0x1                   	// #1
  4553ac:	mov	x0, #0x0                   	// #0
  4553b0:	add	x2, x2, x1
  4553b4:	str	x2, [x19, #320]
  4553b8:	b	455374 <_obstack_memory_used@@Base+0x10970>
  4553bc:	ldrsw	x22, [x20, #16]
  4553c0:	ldr	x20, [x20, #8]
  4553c4:	cbz	x22, 4582b4 <_obstack_memory_used@@Base+0x138b0>
  4553c8:	add	x22, x20, x22
  4553cc:	ldr	x1, [x19, #256]
  4553d0:	b	4553f4 <_obstack_memory_used@@Base+0x109f0>
  4553d4:	mov	x0, x1
  4553d8:	add	x1, x1, #0x1
  4553dc:	str	x1, [x19, #256]
  4553e0:	add	x20, x20, #0x1
  4553e4:	strb	w21, [x19, x0]
  4553e8:	cmp	x22, x20
  4553ec:	strb	w21, [x19, #264]
  4553f0:	b.eq	456ef8 <_obstack_memory_used@@Base+0x124f4>  // b.none
  4553f4:	ldrb	w21, [x20]
  4553f8:	cmp	x1, #0xff
  4553fc:	b.ne	4553d4 <_obstack_memory_used@@Base+0x109d0>  // b.any
  455400:	ldp	x3, x2, [x19, #272]
  455404:	strb	wzr, [x19, #255]
  455408:	mov	x0, x19
  45540c:	blr	x3
  455410:	ldr	x2, [x19, #320]
  455414:	mov	x1, #0x1                   	// #1
  455418:	mov	x0, #0x0                   	// #0
  45541c:	add	x2, x2, x1
  455420:	str	x2, [x19, #320]
  455424:	b	4553dc <_obstack_memory_used@@Base+0x109d8>
  455428:	ldp	x1, x5, [x19, #288]
  45542c:	add	x23, sp, #0x60
  455430:	stp	x5, x20, [sp, #96]
  455434:	mov	w22, #0x1                   	// #1
  455438:	mov	w6, w22
  45543c:	str	wzr, [sp, #112]
  455440:	str	x1, [sp, #120]
  455444:	str	x23, [x19, #296]
  455448:	mov	x24, x5
  45544c:	mov	x0, x5
  455450:	mov	x5, x23
  455454:	cbnz	x24, 4554a0 <_obstack_memory_used@@Base+0x10a9c>
  455458:	b	4585e4 <_obstack_memory_used@@Base+0x13be0>
  45545c:	ldr	w1, [x0, #16]
  455460:	cbnz	w1, 455498 <_obstack_memory_used@@Base+0x10a94>
  455464:	cmp	w22, #0x3
  455468:	b.hi	457da0 <_obstack_memory_used@@Base+0x1339c>  // b.pmore
  45546c:	ubfiz	x1, x22, #5, #32
  455470:	add	w22, w22, #0x1
  455474:	add	x4, x23, x1
  455478:	ldp	x2, x3, [x0]
  45547c:	stp	x2, x3, [x4]
  455480:	ldp	x2, x3, [x0, #16]
  455484:	stp	x2, x3, [x4, #16]
  455488:	str	x5, [x23, x1]
  45548c:	mov	x5, x4
  455490:	str	x4, [x19, #296]
  455494:	str	w6, [x0, #16]
  455498:	ldr	x0, [x0]
  45549c:	cbz	x0, 4554b4 <_obstack_memory_used@@Base+0x10ab0>
  4554a0:	ldr	x1, [x0, #8]
  4554a4:	ldr	w1, [x1]
  4554a8:	sub	w1, w1, #0x19
  4554ac:	cmp	w1, #0x2
  4554b0:	b.ls	45545c <_obstack_memory_used@@Base+0x10a58>  // b.plast
  4554b4:	ldr	x2, [x20, #16]
  4554b8:	mov	x0, x19
  4554bc:	mov	w1, w21
  4554c0:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  4554c4:	str	x24, [x19, #296]
  4554c8:	ldr	w0, [sp, #112]
  4554cc:	cbnz	w0, 457b2c <_obstack_memory_used@@Base+0x13128>
  4554d0:	ubfiz	x0, x22, #5, #32
  4554d4:	cmp	w22, #0x1
  4554d8:	add	x23, x23, x0
  4554dc:	b.eq	455500 <_obstack_memory_used@@Base+0x10afc>  // b.none
  4554e0:	ldur	x2, [x23, #-24]
  4554e4:	sub	w22, w22, #0x1
  4554e8:	mov	w1, w21
  4554ec:	mov	x0, x19
  4554f0:	sub	x23, x23, #0x20
  4554f4:	bl	458908 <_obstack_memory_used@@Base+0x13f04>
  4554f8:	cmp	w22, #0x1
  4554fc:	b.ne	4554e0 <_obstack_memory_used@@Base+0x10adc>  // b.any
  455500:	ldr	x3, [x19, #296]
  455504:	mov	w1, w21
  455508:	add	x2, x20, #0x8
  45550c:	mov	x0, x19
  455510:	bl	459788 <_obstack_memory_used@@Base+0x14d84>
  455514:	ldp	x21, x22, [sp, #32]
  455518:	ldp	x23, x24, [sp, #48]
  45551c:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  455520:	ldrsh	w0, [x20, #18]
  455524:	cbnz	w0, 457888 <_obstack_memory_used@@Base+0x12e84>
  455528:	ldr	x2, [x20, #8]
  45552c:	adrp	x0, 493000 <_obstack_memory_used@@Base+0x4e5fc>
  455530:	add	x0, x0, #0xa08
  455534:	add	x0, x0, #0x288
  455538:	ldr	x1, [x2, #8]
  45553c:	cmp	x1, x0
  455540:	b.eq	45737c <_obstack_memory_used@@Base+0x12978>  // b.none
  455544:	mov	w1, w21
  455548:	mov	x0, x19
  45554c:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  455550:	ldr	x0, [x19, #256]
  455554:	add	x1, x0, #0x1
  455558:	cmp	x0, #0xff
  45555c:	b.ne	455588 <_obstack_memory_used@@Base+0x10b84>  // b.any
  455560:	ldp	x3, x2, [x19, #272]
  455564:	strb	wzr, [x19, #255]
  455568:	mov	x1, x0
  45556c:	mov	x0, x19
  455570:	blr	x3
  455574:	ldr	x2, [x19, #320]
  455578:	mov	x1, #0x1                   	// #1
  45557c:	mov	x0, #0x0                   	// #0
  455580:	add	x2, x2, x1
  455584:	str	x2, [x19, #320]
  455588:	str	x1, [x19, #256]
  45558c:	mov	w2, #0x20                  	// #32
  455590:	strb	w2, [x19, x0]
  455594:	strb	w2, [x19, #264]
  455598:	ldrsh	w0, [x20, #16]
  45559c:	cbnz	w0, 457290 <_obstack_memory_used@@Base+0x1288c>
  4555a0:	adrp	x20, 46d000 <_obstack_memory_used@@Base+0x285fc>
  4555a4:	add	x20, x20, #0x9a0
  4555a8:	add	x22, x20, #0x6
  4555ac:	mov	w21, #0x5f                  	// #95
  4555b0:	b	4555d8 <_obstack_memory_used@@Base+0x10bd4>
  4555b4:	mov	x0, x1
  4555b8:	add	x1, x1, #0x1
  4555bc:	str	x1, [x19, #256]
  4555c0:	add	x20, x20, #0x1
  4555c4:	strb	w21, [x19, x0]
  4555c8:	cmp	x20, x22
  4555cc:	strb	w21, [x19, #264]
  4555d0:	b.eq	457304 <_obstack_memory_used@@Base+0x12900>  // b.none
  4555d4:	ldrb	w21, [x20]
  4555d8:	cmp	x1, #0xff
  4555dc:	b.ne	4555b4 <_obstack_memory_used@@Base+0x10bb0>  // b.any
  4555e0:	ldp	x3, x2, [x19, #272]
  4555e4:	strb	wzr, [x19, #255]
  4555e8:	mov	x0, x19
  4555ec:	blr	x3
  4555f0:	ldr	x2, [x19, #320]
  4555f4:	mov	x1, #0x1                   	// #1
  4555f8:	mov	x0, #0x0                   	// #0
  4555fc:	add	x2, x2, x1
  455600:	str	x2, [x19, #320]
  455604:	b	4555bc <_obstack_memory_used@@Base+0x10bb8>
  455608:	adrp	x24, 46d000 <_obstack_memory_used@@Base+0x285fc>
  45560c:	add	x24, x24, #0x880
  455610:	adrp	x22, 46d000 <_obstack_memory_used@@Base+0x285fc>
  455614:	add	x24, x24, #0x15
  455618:	add	x22, x22, #0x881
  45561c:	mov	w23, #0x6e                  	// #110
  455620:	ldr	x1, [x19, #256]
  455624:	b	455648 <_obstack_memory_used@@Base+0x10c44>
  455628:	mov	x0, x1
  45562c:	add	x1, x1, #0x1
  455630:	str	x1, [x19, #256]
  455634:	cmp	x24, x22
  455638:	strb	w23, [x19, x0]
  45563c:	strb	w23, [x19, #264]
  455640:	b.eq	456e08 <_obstack_memory_used@@Base+0x12404>  // b.none
  455644:	ldrb	w23, [x22], #1
  455648:	cmp	x1, #0xff
  45564c:	b.ne	455628 <_obstack_memory_used@@Base+0x10c24>  // b.any
  455650:	ldp	x3, x2, [x19, #272]
  455654:	strb	wzr, [x19, #255]
  455658:	mov	x0, x19
  45565c:	blr	x3
  455660:	ldr	x2, [x19, #320]
  455664:	mov	x1, #0x1                   	// #1
  455668:	mov	x0, #0x0                   	// #0
  45566c:	add	x2, x2, x1
  455670:	str	x2, [x19, #320]
  455674:	b	455630 <_obstack_memory_used@@Base+0x10c2c>
  455678:	adrp	x24, 46d000 <_obstack_memory_used@@Base+0x285fc>
  45567c:	add	x24, x24, #0x898
  455680:	adrp	x22, 46d000 <_obstack_memory_used@@Base+0x285fc>
  455684:	add	x24, x24, #0x11
  455688:	add	x22, x22, #0x899
  45568c:	mov	w23, #0x76                  	// #118
  455690:	ldr	x1, [x19, #256]
  455694:	b	4556b8 <_obstack_memory_used@@Base+0x10cb4>
  455698:	mov	x0, x1
  45569c:	add	x1, x1, #0x1
  4556a0:	str	x1, [x19, #256]
  4556a4:	cmp	x24, x22
  4556a8:	strb	w23, [x19, x0]
  4556ac:	strb	w23, [x19, #264]
  4556b0:	b.eq	456e24 <_obstack_memory_used@@Base+0x12420>  // b.none
  4556b4:	ldrb	w23, [x22], #1
  4556b8:	cmp	x1, #0xff
  4556bc:	b.ne	455698 <_obstack_memory_used@@Base+0x10c94>  // b.any
  4556c0:	ldp	x3, x2, [x19, #272]
  4556c4:	strb	wzr, [x19, #255]
  4556c8:	mov	x0, x19
  4556cc:	blr	x3
  4556d0:	ldr	x2, [x19, #320]
  4556d4:	mov	x1, #0x1                   	// #1
  4556d8:	mov	x0, #0x0                   	// #0
  4556dc:	add	x2, x2, x1
  4556e0:	str	x2, [x19, #320]
  4556e4:	b	4556a0 <_obstack_memory_used@@Base+0x10c9c>
  4556e8:	adrp	x24, 46d000 <_obstack_memory_used@@Base+0x285fc>
  4556ec:	add	x24, x24, #0x8b0
  4556f0:	adrp	x22, 46d000 <_obstack_memory_used@@Base+0x285fc>
  4556f4:	add	x24, x24, #0x1a
  4556f8:	add	x22, x22, #0x8b1
  4556fc:	mov	w23, #0x63                  	// #99
  455700:	ldr	x1, [x19, #256]
  455704:	b	455728 <_obstack_memory_used@@Base+0x10d24>
  455708:	mov	x0, x1
  45570c:	add	x1, x1, #0x1
  455710:	str	x1, [x19, #256]
  455714:	cmp	x24, x22
  455718:	strb	w23, [x19, x0]
  45571c:	strb	w23, [x19, #264]
  455720:	b.eq	456e40 <_obstack_memory_used@@Base+0x1243c>  // b.none
  455724:	ldrb	w23, [x22], #1
  455728:	cmp	x1, #0xff
  45572c:	b.ne	455708 <_obstack_memory_used@@Base+0x10d04>  // b.any
  455730:	ldp	x3, x2, [x19, #272]
  455734:	strb	wzr, [x19, #255]
  455738:	mov	x0, x19
  45573c:	blr	x3
  455740:	ldr	x2, [x19, #320]
  455744:	mov	x1, #0x1                   	// #1
  455748:	mov	x0, #0x0                   	// #0
  45574c:	add	x2, x2, x1
  455750:	str	x2, [x19, #320]
  455754:	b	455710 <_obstack_memory_used@@Base+0x10d0c>
  455758:	adrp	x24, 46d000 <_obstack_memory_used@@Base+0x285fc>
  45575c:	add	x24, x24, #0x8d0
  455760:	adrp	x22, 46d000 <_obstack_memory_used@@Base+0x285fc>
  455764:	add	x24, x24, #0xf
  455768:	add	x22, x22, #0x8d1
  45576c:	mov	w23, #0x6a                  	// #106
  455770:	ldr	x1, [x19, #256]
  455774:	b	455798 <_obstack_memory_used@@Base+0x10d94>
  455778:	mov	x0, x1
  45577c:	add	x1, x1, #0x1
  455780:	str	x1, [x19, #256]
  455784:	cmp	x22, x24
  455788:	strb	w23, [x19, x0]
  45578c:	strb	w23, [x19, #264]
  455790:	b.eq	4567a0 <_obstack_memory_used@@Base+0x11d9c>  // b.none
  455794:	ldrb	w23, [x22], #1
  455798:	cmp	x1, #0xff
  45579c:	b.ne	455778 <_obstack_memory_used@@Base+0x10d74>  // b.any
  4557a0:	ldp	x3, x2, [x19, #272]
  4557a4:	strb	wzr, [x19, #255]
  4557a8:	mov	x0, x19
  4557ac:	blr	x3
  4557b0:	ldr	x2, [x19, #320]
  4557b4:	mov	x1, #0x1                   	// #1
  4557b8:	mov	x0, #0x0                   	// #0
  4557bc:	add	x2, x2, x1
  4557c0:	str	x2, [x19, #320]
  4557c4:	b	455780 <_obstack_memory_used@@Base+0x10d7c>
  4557c8:	adrp	x24, 46d000 <_obstack_memory_used@@Base+0x285fc>
  4557cc:	add	x24, x24, #0x930
  4557d0:	adrp	x22, 46d000 <_obstack_memory_used@@Base+0x285fc>
  4557d4:	add	x24, x24, #0x15
  4557d8:	add	x22, x22, #0x931
  4557dc:	mov	w23, #0x72                  	// #114
  4557e0:	ldr	x1, [x19, #256]
  4557e4:	b	455808 <_obstack_memory_used@@Base+0x10e04>
  4557e8:	mov	x0, x1
  4557ec:	add	x1, x1, #0x1
  4557f0:	str	x1, [x19, #256]
  4557f4:	cmp	x24, x22
  4557f8:	strb	w23, [x19, x0]
  4557fc:	strb	w23, [x19, #264]
  455800:	b.eq	4567d8 <_obstack_memory_used@@Base+0x11dd4>  // b.none
  455804:	ldrb	w23, [x22], #1
  455808:	cmp	x1, #0xff
  45580c:	b.ne	4557e8 <_obstack_memory_used@@Base+0x10de4>  // b.any
  455810:	ldp	x3, x2, [x19, #272]
  455814:	strb	wzr, [x19, #255]
  455818:	mov	x0, x19
  45581c:	blr	x3
  455820:	ldr	x2, [x19, #320]
  455824:	mov	x1, #0x1                   	// #1
  455828:	mov	x0, #0x0                   	// #0
  45582c:	add	x2, x2, x1
  455830:	str	x2, [x19, #320]
  455834:	b	4557f0 <_obstack_memory_used@@Base+0x10dec>
  455838:	adrp	x24, 46d000 <_obstack_memory_used@@Base+0x285fc>
  45583c:	add	x24, x24, #0x8f8
  455840:	adrp	x22, 46d000 <_obstack_memory_used@@Base+0x285fc>
  455844:	add	x24, x24, #0x16
  455848:	add	x22, x22, #0x8f9
  45584c:	mov	w23, #0x54                  	// #84
  455850:	ldr	x1, [x19, #256]
  455854:	b	455878 <_obstack_memory_used@@Base+0x10e74>
  455858:	mov	x0, x1
  45585c:	add	x1, x1, #0x1
  455860:	str	x1, [x19, #256]
  455864:	cmp	x22, x24
  455868:	strb	w23, [x19, x0]
  45586c:	strb	w23, [x19, #264]
  455870:	b.eq	456d98 <_obstack_memory_used@@Base+0x12394>  // b.none
  455874:	ldrb	w23, [x22], #1
  455878:	cmp	x1, #0xff
  45587c:	b.ne	455858 <_obstack_memory_used@@Base+0x10e54>  // b.any
  455880:	ldp	x3, x2, [x19, #272]
  455884:	strb	wzr, [x19, #255]
  455888:	mov	x0, x19
  45588c:	blr	x3
  455890:	ldr	x2, [x19, #320]
  455894:	mov	x1, #0x1                   	// #1
  455898:	mov	x0, #0x0                   	// #0
  45589c:	add	x2, x2, x1
  4558a0:	str	x2, [x19, #320]
  4558a4:	b	455860 <_obstack_memory_used@@Base+0x10e5c>
  4558a8:	ldr	x1, [x20, #8]
  4558ac:	mov	x0, x19
  4558b0:	mov	w24, #0x0                   	// #0
  4558b4:	bl	451138 <_obstack_memory_used@@Base+0xc734>
  4558b8:	cbz	x0, 4582cc <_obstack_memory_used@@Base+0x138c8>
  4558bc:	stp	x25, x26, [sp, #64]
  4558c0:	ldr	w1, [x0]
  4558c4:	cmp	w1, #0x2f
  4558c8:	b.ne	456f74 <_obstack_memory_used@@Base+0x12570>  // b.any
  4558cc:	ldr	x1, [x0, #8]
  4558d0:	cbz	x1, 456f74 <_obstack_memory_used@@Base+0x12570>
  4558d4:	ldr	x0, [x0, #16]
  4558d8:	add	w24, w24, #0x1
  4558dc:	cbnz	x0, 4558c0 <_obstack_memory_used@@Base+0x10ebc>
  4558e0:	ldr	x25, [x20, #8]
  4558e4:	sub	w26, w24, #0x1
  4558e8:	b	4558f8 <_obstack_memory_used@@Base+0x10ef4>
  4558ec:	add	w22, w22, #0x1
  4558f0:	cmp	w22, w24
  4558f4:	b.ge	456f1c <_obstack_memory_used@@Base+0x12518>  // b.tcont
  4558f8:	str	w22, [x19, #316]
  4558fc:	mov	x2, x25
  455900:	mov	w1, w21
  455904:	mov	x0, x19
  455908:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  45590c:	cmp	w26, w22
  455910:	b.le	4558ec <_obstack_memory_used@@Base+0x10ee8>
  455914:	mov	w20, #0x2c                  	// #44
  455918:	mov	x23, #0x0                   	// #0
  45591c:	ldr	x1, [x19, #256]
  455920:	b	455944 <_obstack_memory_used@@Base+0x10f40>
  455924:	mov	x0, x1
  455928:	add	x1, x1, #0x1
  45592c:	str	x1, [x19, #256]
  455930:	strb	w20, [x19, x0]
  455934:	strb	w20, [x19, #264]
  455938:	mov	w20, #0x20                  	// #32
  45593c:	cbnz	x23, 4558ec <_obstack_memory_used@@Base+0x10ee8>
  455940:	mov	x23, #0x1                   	// #1
  455944:	cmp	x1, #0xff
  455948:	b.ne	455924 <_obstack_memory_used@@Base+0x10f20>  // b.any
  45594c:	ldp	x3, x2, [x19, #272]
  455950:	strb	wzr, [x19, #255]
  455954:	mov	x0, x19
  455958:	blr	x3
  45595c:	ldr	x2, [x19, #320]
  455960:	mov	x1, #0x1                   	// #1
  455964:	mov	x0, #0x0                   	// #0
  455968:	add	x2, x2, x1
  45596c:	str	x2, [x19, #320]
  455970:	b	45592c <_obstack_memory_used@@Base+0x10f28>
  455974:	ldr	x2, [x20, #8]
  455978:	mov	w1, w21
  45597c:	mov	x0, x19
  455980:	adrp	x24, 46d000 <_obstack_memory_used@@Base+0x285fc>
  455984:	add	x24, x24, #0x798
  455988:	adrp	x22, 46d000 <_obstack_memory_used@@Base+0x285fc>
  45598c:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  455990:	add	x24, x24, #0x5
  455994:	add	x22, x22, #0x799
  455998:	mov	w23, #0x5b                  	// #91
  45599c:	ldr	x1, [x19, #256]
  4559a0:	b	4559c4 <_obstack_memory_used@@Base+0x10fc0>
  4559a4:	mov	x0, x1
  4559a8:	add	x1, x1, #0x1
  4559ac:	str	x1, [x19, #256]
  4559b0:	cmp	x24, x22
  4559b4:	strb	w23, [x19, x0]
  4559b8:	strb	w23, [x19, #264]
  4559bc:	b.eq	4568e4 <_obstack_memory_used@@Base+0x11ee0>  // b.none
  4559c0:	ldrb	w23, [x22], #1
  4559c4:	cmp	x1, #0xff
  4559c8:	b.ne	4559a4 <_obstack_memory_used@@Base+0x10fa0>  // b.any
  4559cc:	ldp	x3, x2, [x19, #272]
  4559d0:	strb	wzr, [x19, #255]
  4559d4:	mov	x0, x19
  4559d8:	blr	x3
  4559dc:	ldr	x2, [x19, #320]
  4559e0:	mov	x1, #0x1                   	// #1
  4559e4:	mov	x0, #0x0                   	// #0
  4559e8:	add	x2, x2, x1
  4559ec:	str	x2, [x19, #320]
  4559f0:	b	4559ac <_obstack_memory_used@@Base+0x10fa8>
  4559f4:	adrp	x24, 46d000 <_obstack_memory_used@@Base+0x285fc>
  4559f8:	add	x24, x24, #0x978
  4559fc:	adrp	x22, 46d000 <_obstack_memory_used@@Base+0x285fc>
  455a00:	add	x24, x24, #0x1a
  455a04:	add	x22, x22, #0x979
  455a08:	mov	w23, #0x6e                  	// #110
  455a0c:	ldr	x1, [x19, #256]
  455a10:	b	455a34 <_obstack_memory_used@@Base+0x11030>
  455a14:	mov	x0, x1
  455a18:	add	x1, x1, #0x1
  455a1c:	str	x1, [x19, #256]
  455a20:	cmp	x24, x22
  455a24:	strb	w23, [x19, x0]
  455a28:	strb	w23, [x19, #264]
  455a2c:	b.eq	4568ac <_obstack_memory_used@@Base+0x11ea8>  // b.none
  455a30:	ldrb	w23, [x22], #1
  455a34:	cmp	x1, #0xff
  455a38:	b.ne	455a14 <_obstack_memory_used@@Base+0x11010>  // b.any
  455a3c:	ldp	x3, x2, [x19, #272]
  455a40:	strb	wzr, [x19, #255]
  455a44:	mov	x0, x19
  455a48:	blr	x3
  455a4c:	ldr	x2, [x19, #320]
  455a50:	mov	x1, #0x1                   	// #1
  455a54:	mov	x0, #0x0                   	// #0
  455a58:	add	x2, x2, x1
  455a5c:	str	x2, [x19, #320]
  455a60:	b	455a1c <_obstack_memory_used@@Base+0x11018>
  455a64:	adrp	x24, 46d000 <_obstack_memory_used@@Base+0x285fc>
  455a68:	add	x24, x24, #0x8e0
  455a6c:	adrp	x22, 46d000 <_obstack_memory_used@@Base+0x285fc>
  455a70:	add	x24, x24, #0x13
  455a74:	add	x22, x22, #0x8e1
  455a78:	mov	w23, #0x67                  	// #103
  455a7c:	ldr	x1, [x19, #256]
  455a80:	b	455aa4 <_obstack_memory_used@@Base+0x110a0>
  455a84:	mov	x0, x1
  455a88:	add	x1, x1, #0x1
  455a8c:	str	x1, [x19, #256]
  455a90:	cmp	x24, x22
  455a94:	strb	w23, [x19, x0]
  455a98:	strb	w23, [x19, #264]
  455a9c:	b.eq	4567bc <_obstack_memory_used@@Base+0x11db8>  // b.none
  455aa0:	ldrb	w23, [x22], #1
  455aa4:	cmp	x1, #0xff
  455aa8:	b.ne	455a84 <_obstack_memory_used@@Base+0x11080>  // b.any
  455aac:	ldp	x3, x2, [x19, #272]
  455ab0:	strb	wzr, [x19, #255]
  455ab4:	mov	x0, x19
  455ab8:	blr	x3
  455abc:	ldr	x2, [x19, #320]
  455ac0:	mov	x1, #0x1                   	// #1
  455ac4:	mov	x0, #0x0                   	// #0
  455ac8:	add	x2, x2, x1
  455acc:	str	x2, [x19, #320]
  455ad0:	b	455a8c <_obstack_memory_used@@Base+0x11088>
  455ad4:	adrp	x24, 46d000 <_obstack_memory_used@@Base+0x285fc>
  455ad8:	add	x24, x24, #0x910
  455adc:	adrp	x22, 46d000 <_obstack_memory_used@@Base+0x285fc>
  455ae0:	add	x24, x24, #0x19
  455ae4:	add	x22, x22, #0x911
  455ae8:	mov	w23, #0x54                  	// #84
  455aec:	ldr	x1, [x19, #256]
  455af0:	b	455b14 <_obstack_memory_used@@Base+0x11110>
  455af4:	mov	x0, x1
  455af8:	add	x1, x1, #0x1
  455afc:	str	x1, [x19, #256]
  455b00:	cmp	x24, x22
  455b04:	strb	w23, [x19, x0]
  455b08:	strb	w23, [x19, #264]
  455b0c:	b.eq	456db4 <_obstack_memory_used@@Base+0x123b0>  // b.none
  455b10:	ldrb	w23, [x22], #1
  455b14:	cmp	x1, #0xff
  455b18:	b.ne	455af4 <_obstack_memory_used@@Base+0x110f0>  // b.any
  455b1c:	ldp	x3, x2, [x19, #272]
  455b20:	strb	wzr, [x19, #255]
  455b24:	mov	x0, x19
  455b28:	blr	x3
  455b2c:	ldr	x2, [x19, #320]
  455b30:	mov	x1, #0x1                   	// #1
  455b34:	mov	x0, #0x0                   	// #0
  455b38:	add	x2, x2, x1
  455b3c:	str	x2, [x19, #320]
  455b40:	b	455afc <_obstack_memory_used@@Base+0x110f8>
  455b44:	adrp	x22, 46d000 <_obstack_memory_used@@Base+0x285fc>
  455b48:	add	x22, x22, #0x808
  455b4c:	add	x24, x22, #0x8
  455b50:	mov	w23, #0x56                  	// #86
  455b54:	ldr	x1, [x19, #256]
  455b58:	b	455b80 <_obstack_memory_used@@Base+0x1117c>
  455b5c:	mov	x0, x1
  455b60:	add	x1, x1, #0x1
  455b64:	str	x1, [x19, #256]
  455b68:	add	x22, x22, #0x1
  455b6c:	strb	w23, [x19, x0]
  455b70:	cmp	x24, x22
  455b74:	strb	w23, [x19, #264]
  455b78:	b.eq	456d00 <_obstack_memory_used@@Base+0x122fc>  // b.none
  455b7c:	ldrb	w23, [x22]
  455b80:	cmp	x1, #0xff
  455b84:	b.ne	455b5c <_obstack_memory_used@@Base+0x11158>  // b.any
  455b88:	ldp	x3, x2, [x19, #272]
  455b8c:	strb	wzr, [x19, #255]
  455b90:	mov	x0, x19
  455b94:	blr	x3
  455b98:	ldr	x2, [x19, #320]
  455b9c:	mov	x1, #0x1                   	// #1
  455ba0:	mov	x0, #0x0                   	// #0
  455ba4:	add	x2, x2, x1
  455ba8:	str	x2, [x19, #320]
  455bac:	b	455b64 <_obstack_memory_used@@Base+0x11160>
  455bb0:	adrp	x24, 46d000 <_obstack_memory_used@@Base+0x285fc>
  455bb4:	add	x24, x24, #0x818
  455bb8:	adrp	x22, 46d000 <_obstack_memory_used@@Base+0x285fc>
  455bbc:	add	x24, x24, #0x18
  455bc0:	add	x22, x22, #0x819
  455bc4:	mov	w23, #0x63                  	// #99
  455bc8:	ldr	x1, [x19, #256]
  455bcc:	b	455bf0 <_obstack_memory_used@@Base+0x111ec>
  455bd0:	mov	x0, x1
  455bd4:	add	x1, x1, #0x1
  455bd8:	str	x1, [x19, #256]
  455bdc:	cmp	x24, x22
  455be0:	strb	w23, [x19, x0]
  455be4:	strb	w23, [x19, #264]
  455be8:	b.eq	456d1c <_obstack_memory_used@@Base+0x12318>  // b.none
  455bec:	ldrb	w23, [x22], #1
  455bf0:	cmp	x1, #0xff
  455bf4:	b.ne	455bd0 <_obstack_memory_used@@Base+0x111cc>  // b.any
  455bf8:	ldp	x3, x2, [x19, #272]
  455bfc:	strb	wzr, [x19, #255]
  455c00:	mov	x0, x19
  455c04:	blr	x3
  455c08:	ldr	x2, [x19, #320]
  455c0c:	mov	x1, #0x1                   	// #1
  455c10:	mov	x0, #0x0                   	// #0
  455c14:	add	x2, x2, x1
  455c18:	str	x2, [x19, #320]
  455c1c:	b	455bd8 <_obstack_memory_used@@Base+0x111d4>
  455c20:	adrp	x24, 46d000 <_obstack_memory_used@@Base+0x285fc>
  455c24:	add	x24, x24, #0x840
  455c28:	adrp	x22, 46d000 <_obstack_memory_used@@Base+0x285fc>
  455c2c:	add	x24, x24, #0xd
  455c30:	add	x22, x22, #0x841
  455c34:	mov	w23, #0x74                  	// #116
  455c38:	ldr	x1, [x19, #256]
  455c3c:	b	455c60 <_obstack_memory_used@@Base+0x1125c>
  455c40:	mov	x0, x1
  455c44:	add	x1, x1, #0x1
  455c48:	str	x1, [x19, #256]
  455c4c:	cmp	x24, x22
  455c50:	strb	w23, [x19, x0]
  455c54:	strb	w23, [x19, #264]
  455c58:	b.eq	456874 <_obstack_memory_used@@Base+0x11e70>  // b.none
  455c5c:	ldrb	w23, [x22], #1
  455c60:	cmp	x1, #0xff
  455c64:	b.ne	455c40 <_obstack_memory_used@@Base+0x1123c>  // b.any
  455c68:	ldp	x3, x2, [x19, #272]
  455c6c:	strb	wzr, [x19, #255]
  455c70:	mov	x0, x19
  455c74:	blr	x3
  455c78:	ldr	x2, [x19, #320]
  455c7c:	mov	x1, #0x1                   	// #1
  455c80:	mov	x0, #0x0                   	// #0
  455c84:	add	x2, x2, x1
  455c88:	str	x2, [x19, #320]
  455c8c:	b	455c48 <_obstack_memory_used@@Base+0x11244>
  455c90:	adrp	x24, 46d000 <_obstack_memory_used@@Base+0x285fc>
  455c94:	add	x24, x24, #0x850
  455c98:	adrp	x22, 46d000 <_obstack_memory_used@@Base+0x285fc>
  455c9c:	add	x24, x24, #0x12
  455ca0:	add	x22, x22, #0x851
  455ca4:	mov	w23, #0x74                  	// #116
  455ca8:	ldr	x1, [x19, #256]
  455cac:	b	455cd0 <_obstack_memory_used@@Base+0x112cc>
  455cb0:	mov	x0, x1
  455cb4:	add	x1, x1, #0x1
  455cb8:	str	x1, [x19, #256]
  455cbc:	cmp	x24, x22
  455cc0:	strb	w23, [x19, x0]
  455cc4:	strb	w23, [x19, #264]
  455cc8:	b.eq	456890 <_obstack_memory_used@@Base+0x11e8c>  // b.none
  455ccc:	ldrb	w23, [x22], #1
  455cd0:	cmp	x1, #0xff
  455cd4:	b.ne	455cb0 <_obstack_memory_used@@Base+0x112ac>  // b.any
  455cd8:	ldp	x3, x2, [x19, #272]
  455cdc:	strb	wzr, [x19, #255]
  455ce0:	mov	x0, x19
  455ce4:	blr	x3
  455ce8:	ldr	x2, [x19, #320]
  455cec:	mov	x1, #0x1                   	// #1
  455cf0:	mov	x0, #0x0                   	// #0
  455cf4:	add	x2, x2, x1
  455cf8:	str	x2, [x19, #320]
  455cfc:	b	455cb8 <_obstack_memory_used@@Base+0x112b4>
  455d00:	adrp	x24, 46d000 <_obstack_memory_used@@Base+0x285fc>
  455d04:	add	x24, x24, #0x868
  455d08:	adrp	x22, 46d000 <_obstack_memory_used@@Base+0x285fc>
  455d0c:	add	x24, x24, #0x10
  455d10:	add	x22, x22, #0x869
  455d14:	mov	w23, #0x74                  	// #116
  455d18:	ldr	x1, [x19, #256]
  455d1c:	b	455d40 <_obstack_memory_used@@Base+0x1133c>
  455d20:	mov	x0, x1
  455d24:	add	x1, x1, #0x1
  455d28:	str	x1, [x19, #256]
  455d2c:	cmp	x24, x22
  455d30:	strb	w23, [x19, x0]
  455d34:	strb	w23, [x19, #264]
  455d38:	b.eq	456ce4 <_obstack_memory_used@@Base+0x122e0>  // b.none
  455d3c:	ldrb	w23, [x22], #1
  455d40:	cmp	x1, #0xff
  455d44:	b.ne	455d20 <_obstack_memory_used@@Base+0x1131c>  // b.any
  455d48:	ldp	x3, x2, [x19, #272]
  455d4c:	strb	wzr, [x19, #255]
  455d50:	mov	x0, x19
  455d54:	blr	x3
  455d58:	ldr	x2, [x19, #320]
  455d5c:	mov	x1, #0x1                   	// #1
  455d60:	mov	x0, #0x0                   	// #0
  455d64:	add	x2, x2, x1
  455d68:	str	x2, [x19, #320]
  455d6c:	b	455d28 <_obstack_memory_used@@Base+0x11324>
  455d70:	stp	x25, x26, [sp, #64]
  455d74:	ldr	x25, [x20, #8]
  455d78:	ldr	x22, [x19, #296]
  455d7c:	str	xzr, [x19, #296]
  455d80:	cbz	x25, 457e38 <_obstack_memory_used@@Base+0x13434>
  455d84:	add	x23, sp, #0x60
  455d88:	mov	x2, #0x1f                  	// #31
  455d8c:	ldr	x6, [x19, #288]
  455d90:	mov	x3, x23
  455d94:	mov	x0, #0x0                   	// #0
  455d98:	mov	w24, #0x0                   	// #0
  455d9c:	mov	x1, #0x1                   	// #1
  455da0:	movk	x2, #0x1a, lsl #48
  455da4:	str	wzr, [x3, #16]
  455da8:	add	w24, w24, #0x1
  455dac:	str	x0, [x3]
  455db0:	mov	x4, x3
  455db4:	ldr	w5, [x25]
  455db8:	str	x25, [x3, #8]
  455dbc:	str	x6, [x3, #24]
  455dc0:	sub	w0, w5, #0x1c
  455dc4:	cmp	w0, #0x34
  455dc8:	b.hi	455dd8 <_obstack_memory_used@@Base+0x113d4>  // b.pmore
  455dcc:	lsl	x0, x1, x0
  455dd0:	tst	x0, x2
  455dd4:	b.ne	456f58 <_obstack_memory_used@@Base+0x12554>  // b.any
  455dd8:	str	x3, [x19, #296]
  455ddc:	cmp	w5, #0x2
  455de0:	b.eq	457d18 <_obstack_memory_used@@Base+0x13314>  // b.none
  455de4:	cmp	w5, #0x4
  455de8:	b.ne	455df8 <_obstack_memory_used@@Base+0x113f4>  // b.any
  455dec:	add	x0, sp, #0x50
  455df0:	stp	x6, x25, [sp, #80]
  455df4:	str	x0, [x19, #288]
  455df8:	ldr	x2, [x20, #16]
  455dfc:	mov	x0, x19
  455e00:	mov	w1, w21
  455e04:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  455e08:	ldr	w0, [x25]
  455e0c:	cmp	w0, #0x4
  455e10:	b.ne	455e1c <_obstack_memory_used@@Base+0x11418>  // b.any
  455e14:	ldr	x0, [sp, #80]
  455e18:	str	x0, [x19, #288]
  455e1c:	sub	w20, w24, #0x1
  455e20:	mov	w24, #0x20                  	// #32
  455e24:	ubfiz	x0, x20, #5, #32
  455e28:	add	x23, x23, x0
  455e2c:	b	455e34 <_obstack_memory_used@@Base+0x11430>
  455e30:	sub	w20, w20, #0x1
  455e34:	ldr	w0, [x23, #16]
  455e38:	cbnz	w0, 455e90 <_obstack_memory_used@@Base+0x1148c>
  455e3c:	ldr	x0, [x19, #256]
  455e40:	add	x1, x0, #0x1
  455e44:	cmp	x0, #0xff
  455e48:	b.ne	455e74 <_obstack_memory_used@@Base+0x11470>  // b.any
  455e4c:	ldp	x3, x2, [x19, #272]
  455e50:	strb	wzr, [x19, #255]
  455e54:	mov	x1, x0
  455e58:	mov	x0, x19
  455e5c:	blr	x3
  455e60:	ldr	x2, [x19, #320]
  455e64:	mov	x1, #0x1                   	// #1
  455e68:	mov	x0, #0x0                   	// #0
  455e6c:	add	x2, x2, x1
  455e70:	str	x2, [x19, #320]
  455e74:	str	x1, [x19, #256]
  455e78:	mov	w1, w21
  455e7c:	ldr	x2, [x23, #8]
  455e80:	strb	w24, [x19, x0]
  455e84:	strb	w24, [x19, #264]
  455e88:	mov	x0, x19
  455e8c:	bl	458908 <_obstack_memory_used@@Base+0x13f04>
  455e90:	sub	x23, x23, #0x20
  455e94:	cbnz	w20, 455e30 <_obstack_memory_used@@Base+0x1142c>
  455e98:	ldp	x23, x24, [sp, #48]
  455e9c:	ldp	x25, x26, [sp, #64]
  455ea0:	str	x22, [x19, #296]
  455ea4:	ldp	x21, x22, [sp, #32]
  455ea8:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  455eac:	ldr	x22, [x20, #8]
  455eb0:	ldr	x24, [x19, #296]
  455eb4:	str	xzr, [x19, #296]
  455eb8:	ldr	x23, [x19, #368]
  455ebc:	str	x20, [x19, #368]
  455ec0:	tbz	w21, #2, 455ed8 <_obstack_memory_used@@Base+0x114d4>
  455ec4:	ldr	w0, [x22]
  455ec8:	cbnz	w0, 455ed8 <_obstack_memory_used@@Base+0x114d4>
  455ecc:	ldr	w0, [x22, #16]
  455ed0:	cmp	w0, #0x6
  455ed4:	b.eq	4581d0 <_obstack_memory_used@@Base+0x137cc>  // b.none
  455ed8:	mov	x0, x19
  455edc:	mov	x2, x22
  455ee0:	mov	w1, w21
  455ee4:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  455ee8:	ldrb	w0, [x19, #264]
  455eec:	cmp	w0, #0x3c
  455ef0:	b.eq	457a38 <_obstack_memory_used@@Base+0x13034>  // b.none
  455ef4:	ldr	x1, [x19, #256]
  455ef8:	add	x0, x1, #0x1
  455efc:	cmp	x1, #0xff
  455f00:	b.ne	455f28 <_obstack_memory_used@@Base+0x11524>  // b.any
  455f04:	ldp	x3, x2, [x19, #272]
  455f08:	strb	wzr, [x19, #255]
  455f0c:	mov	x0, x19
  455f10:	blr	x3
  455f14:	ldr	x2, [x19, #320]
  455f18:	mov	x0, #0x1                   	// #1
  455f1c:	mov	x1, #0x0                   	// #0
  455f20:	add	x2, x2, x0
  455f24:	str	x2, [x19, #320]
  455f28:	str	x0, [x19, #256]
  455f2c:	mov	w0, #0x3c                  	// #60
  455f30:	strb	w0, [x19, x1]
  455f34:	mov	w1, w21
  455f38:	strb	w0, [x19, #264]
  455f3c:	mov	x0, x19
  455f40:	ldr	x2, [x20, #16]
  455f44:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  455f48:	ldrb	w0, [x19, #264]
  455f4c:	cmp	w0, #0x3e
  455f50:	b.eq	4579f0 <_obstack_memory_used@@Base+0x12fec>  // b.none
  455f54:	ldr	x1, [x19, #256]
  455f58:	add	x0, x1, #0x1
  455f5c:	cmp	x1, #0xff
  455f60:	b.ne	455f88 <_obstack_memory_used@@Base+0x11584>  // b.any
  455f64:	ldp	x3, x2, [x19, #272]
  455f68:	strb	wzr, [x19, #255]
  455f6c:	mov	x0, x19
  455f70:	blr	x3
  455f74:	ldr	x2, [x19, #320]
  455f78:	mov	x0, #0x1                   	// #1
  455f7c:	mov	x1, #0x0                   	// #0
  455f80:	add	x2, x2, x0
  455f84:	str	x2, [x19, #320]
  455f88:	str	x0, [x19, #256]
  455f8c:	mov	w0, #0x3e                  	// #62
  455f90:	strb	w0, [x19, x1]
  455f94:	strb	w0, [x19, #264]
  455f98:	ldp	x21, x22, [sp, #32]
  455f9c:	str	x24, [x19, #296]
  455fa0:	str	x23, [x19, #368]
  455fa4:	ldp	x23, x24, [sp, #48]
  455fa8:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  455fac:	ldr	w0, [x19, #312]
  455fb0:	cbz	w0, 45707c <_obstack_memory_used@@Base+0x12678>
  455fb4:	adrp	x23, 46d000 <_obstack_memory_used@@Base+0x285fc>
  455fb8:	add	x23, x23, #0x7d0
  455fbc:	adrp	x21, 46d000 <_obstack_memory_used@@Base+0x285fc>
  455fc0:	add	x23, x23, #0x5
  455fc4:	add	x21, x21, #0x7d1
  455fc8:	mov	w22, #0x61                  	// #97
  455fcc:	ldr	x1, [x19, #256]
  455fd0:	b	455ff4 <_obstack_memory_used@@Base+0x115f0>
  455fd4:	mov	x0, x1
  455fd8:	add	x1, x1, #0x1
  455fdc:	str	x1, [x19, #256]
  455fe0:	cmp	x23, x21
  455fe4:	strb	w22, [x19, x0]
  455fe8:	strb	w22, [x19, #264]
  455fec:	b.eq	4570c4 <_obstack_memory_used@@Base+0x126c0>  // b.none
  455ff0:	ldrb	w22, [x21], #1
  455ff4:	cmp	x1, #0xff
  455ff8:	b.ne	455fd4 <_obstack_memory_used@@Base+0x115d0>  // b.any
  455ffc:	ldp	x3, x2, [x19, #272]
  456000:	strb	wzr, [x19, #255]
  456004:	mov	x0, x19
  456008:	blr	x3
  45600c:	ldr	x2, [x19, #320]
  456010:	mov	x1, #0x1                   	// #1
  456014:	mov	x0, #0x0                   	// #0
  456018:	add	x2, x2, x1
  45601c:	str	x2, [x19, #320]
  456020:	b	455fdc <_obstack_memory_used@@Base+0x115d8>
  456024:	ldr	x1, [x19, #256]
  456028:	add	x0, x1, #0x1
  45602c:	cmp	x1, #0xff
  456030:	b.ne	456058 <_obstack_memory_used@@Base+0x11654>  // b.any
  456034:	ldp	x3, x2, [x19, #272]
  456038:	strb	wzr, [x19, #255]
  45603c:	mov	x0, x19
  456040:	blr	x3
  456044:	ldr	x2, [x19, #320]
  456048:	mov	x0, #0x1                   	// #1
  45604c:	mov	x1, #0x0                   	// #0
  456050:	add	x2, x2, x0
  456054:	str	x2, [x19, #320]
  456058:	str	x0, [x19, #256]
  45605c:	mov	w0, #0x7e                  	// #126
  456060:	strb	w0, [x19, x1]
  456064:	mov	w1, w21
  456068:	strb	w0, [x19, #264]
  45606c:	mov	x0, x19
  456070:	ldr	x2, [x20, #16]
  456074:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  456078:	ldp	x21, x22, [sp, #32]
  45607c:	ldp	x23, x24, [sp, #48]
  456080:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  456084:	adrp	x24, 46d000 <_obstack_memory_used@@Base+0x285fc>
  456088:	add	x24, x24, #0x7f8
  45608c:	adrp	x22, 46d000 <_obstack_memory_used@@Base+0x285fc>
  456090:	add	x24, x24, #0xb
  456094:	add	x22, x22, #0x7f9
  456098:	mov	w23, #0x76                  	// #118
  45609c:	ldr	x1, [x19, #256]
  4560a0:	b	4560c4 <_obstack_memory_used@@Base+0x116c0>
  4560a4:	mov	x0, x1
  4560a8:	add	x1, x1, #0x1
  4560ac:	str	x1, [x19, #256]
  4560b0:	cmp	x24, x22
  4560b4:	strb	w23, [x19, x0]
  4560b8:	strb	w23, [x19, #264]
  4560bc:	b.eq	456858 <_obstack_memory_used@@Base+0x11e54>  // b.none
  4560c0:	ldrb	w23, [x22], #1
  4560c4:	cmp	x1, #0xff
  4560c8:	b.ne	4560a4 <_obstack_memory_used@@Base+0x116a0>  // b.any
  4560cc:	ldp	x3, x2, [x19, #272]
  4560d0:	strb	wzr, [x19, #255]
  4560d4:	mov	x0, x19
  4560d8:	blr	x3
  4560dc:	ldr	x2, [x19, #320]
  4560e0:	mov	x1, #0x1                   	// #1
  4560e4:	mov	x0, #0x0                   	// #0
  4560e8:	add	x2, x2, x1
  4560ec:	str	x2, [x19, #320]
  4560f0:	b	4560ac <_obstack_memory_used@@Base+0x116a8>
  4560f4:	ldr	x0, [x20, #16]
  4560f8:	ldr	w0, [x0]
  4560fc:	cmp	w0, #0x39
  456100:	b.ne	454af0 <_obstack_memory_used@@Base+0x100ec>  // b.any
  456104:	ldr	x2, [x20, #8]
  456108:	ldr	x0, [x2, #8]
  45610c:	ldr	x0, [x0]
  456110:	ldrb	w1, [x0, #1]
  456114:	cmp	w1, #0x63
  456118:	b.eq	457e50 <_obstack_memory_used@@Base+0x1344c>  // b.none
  45611c:	add	x3, x20, #0x10
  456120:	mov	w1, w21
  456124:	mov	x0, x19
  456128:	bl	459bc0 <_obstack_memory_used@@Base+0x151bc>
  45612c:	cbnz	w0, 4581b8 <_obstack_memory_used@@Base+0x137b4>
  456130:	ldr	x0, [x20, #8]
  456134:	ldr	w1, [x0]
  456138:	cmp	w1, #0x32
  45613c:	b.eq	45832c <_obstack_memory_used@@Base+0x13928>  // b.none
  456140:	ldr	x0, [x0, #8]
  456144:	ldr	x1, [x0]
  456148:	ldrb	w0, [x1]
  45614c:	subs	w0, w0, #0x63
  456150:	b.ne	456164 <_obstack_memory_used@@Base+0x11760>  // b.any
  456154:	ldrb	w0, [x1, #1]
  456158:	subs	w0, w0, #0x6c
  45615c:	b.ne	456164 <_obstack_memory_used@@Base+0x11760>  // b.any
  456160:	ldrb	w0, [x1, #2]
  456164:	ldr	x1, [x20, #16]
  456168:	ldr	x2, [x1, #8]
  45616c:	cbnz	w0, 45617c <_obstack_memory_used@@Base+0x11778>
  456170:	ldr	w0, [x2]
  456174:	cmp	w0, #0x3
  456178:	b.eq	4583f0 <_obstack_memory_used@@Base+0x139ec>  // b.none
  45617c:	mov	w1, w21
  456180:	mov	x0, x19
  456184:	bl	459ac8 <_obstack_memory_used@@Base+0x150c4>
  456188:	ldr	x2, [x20, #8]
  45618c:	ldr	x0, [x2, #8]
  456190:	ldr	x0, [x0]
  456194:	ldrb	w1, [x0]
  456198:	cmp	w1, #0x69
  45619c:	b.ne	458108 <_obstack_memory_used@@Base+0x13704>  // b.any
  4561a0:	ldrb	w3, [x0, #1]
  4561a4:	cmp	w3, #0x78
  4561a8:	b.ne	458108 <_obstack_memory_used@@Base+0x13704>  // b.any
  4561ac:	ldrb	w3, [x0, #2]
  4561b0:	cbnz	w3, 458108 <_obstack_memory_used@@Base+0x13704>
  4561b4:	ldr	x1, [x19, #256]
  4561b8:	cmp	x1, #0xff
  4561bc:	b.ne	4561e4 <_obstack_memory_used@@Base+0x117e0>  // b.any
  4561c0:	ldp	x3, x2, [x19, #272]
  4561c4:	strb	wzr, [x19, #255]
  4561c8:	mov	x0, x19
  4561cc:	blr	x3
  4561d0:	str	xzr, [x19, #256]
  4561d4:	ldr	x0, [x19, #320]
  4561d8:	mov	x1, #0x0                   	// #0
  4561dc:	add	x0, x0, #0x1
  4561e0:	str	x0, [x19, #320]
  4561e4:	add	x0, x1, #0x1
  4561e8:	str	x0, [x19, #256]
  4561ec:	mov	w0, #0x5b                  	// #91
  4561f0:	strb	w0, [x19, x1]
  4561f4:	strb	w0, [x19, #264]
  4561f8:	mov	w1, w21
  4561fc:	mov	x0, x19
  456200:	ldr	x2, [x20, #16]
  456204:	ldr	x2, [x2, #16]
  456208:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  45620c:	ldr	x1, [x19, #256]
  456210:	cmp	x1, #0xff
  456214:	b.ne	45623c <_obstack_memory_used@@Base+0x11838>  // b.any
  456218:	ldp	x3, x2, [x19, #272]
  45621c:	strb	wzr, [x19, #255]
  456220:	mov	x0, x19
  456224:	blr	x3
  456228:	str	xzr, [x19, #256]
  45622c:	ldr	x0, [x19, #320]
  456230:	mov	x1, #0x0                   	// #0
  456234:	add	x0, x0, #0x1
  456238:	str	x0, [x19, #320]
  45623c:	add	x0, x1, #0x1
  456240:	str	x0, [x19, #256]
  456244:	mov	w0, #0x5d                  	// #93
  456248:	strb	w0, [x19, x1]
  45624c:	strb	w0, [x19, #264]
  456250:	ldr	x0, [x20, #8]
  456254:	ldr	w1, [x0]
  456258:	cmp	w1, #0x32
  45625c:	b.eq	458310 <_obstack_memory_used@@Base+0x1390c>  // b.none
  456260:	ldp	x21, x22, [sp, #32]
  456264:	ldp	x23, x24, [sp, #48]
  456268:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  45626c:	adrp	x24, 46d000 <_obstack_memory_used@@Base+0x285fc>
  456270:	add	x24, x24, #0xa10
  456274:	adrp	x22, 46d000 <_obstack_memory_used@@Base+0x285fc>
  456278:	add	x24, x24, #0xe
  45627c:	add	x22, x22, #0xa11
  456280:	mov	w23, #0x6a                  	// #106
  456284:	ldr	x1, [x19, #256]
  456288:	b	4562ac <_obstack_memory_used@@Base+0x118a8>
  45628c:	mov	x0, x1
  456290:	add	x1, x1, #0x1
  456294:	str	x1, [x19, #256]
  456298:	cmp	x24, x22
  45629c:	strb	w23, [x19, x0]
  4562a0:	strb	w23, [x19, #264]
  4562a4:	b.eq	456e5c <_obstack_memory_used@@Base+0x12458>  // b.none
  4562a8:	ldrb	w23, [x22], #1
  4562ac:	cmp	x1, #0xff
  4562b0:	b.ne	45628c <_obstack_memory_used@@Base+0x11888>  // b.any
  4562b4:	ldp	x3, x2, [x19, #272]
  4562b8:	strb	wzr, [x19, #255]
  4562bc:	mov	x0, x19
  4562c0:	blr	x3
  4562c4:	ldr	x2, [x19, #320]
  4562c8:	mov	x1, #0x1                   	// #1
  4562cc:	mov	x0, #0x0                   	// #0
  4562d0:	add	x2, x2, x1
  4562d4:	str	x2, [x19, #320]
  4562d8:	b	456294 <_obstack_memory_used@@Base+0x11890>
  4562dc:	ldr	x2, [x20, #8]
  4562e0:	mov	w1, w21
  4562e4:	mov	x0, x19
  4562e8:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  4562ec:	ldr	x2, [x20, #16]
  4562f0:	mov	w1, w21
  4562f4:	mov	x0, x19
  4562f8:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  4562fc:	ldp	x21, x22, [sp, #32]
  456300:	ldp	x23, x24, [sp, #48]
  456304:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  456308:	ldr	x1, [x19, #256]
  45630c:	ldrb	w20, [x20, #8]
  456310:	add	x0, x1, #0x1
  456314:	cmp	x1, #0xff
  456318:	b.ne	456340 <_obstack_memory_used@@Base+0x1193c>  // b.any
  45631c:	ldp	x3, x2, [x19, #272]
  456320:	strb	wzr, [x19, #255]
  456324:	mov	x0, x19
  456328:	blr	x3
  45632c:	ldr	x2, [x19, #320]
  456330:	mov	x0, #0x1                   	// #1
  456334:	mov	x1, #0x0                   	// #0
  456338:	add	x2, x2, x0
  45633c:	str	x2, [x19, #320]
  456340:	str	x0, [x19, #256]
  456344:	strb	w20, [x19, x1]
  456348:	strb	w20, [x19, #264]
  45634c:	ldp	x21, x22, [sp, #32]
  456350:	ldp	x23, x24, [sp, #48]
  456354:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  456358:	ldr	w2, [x20, #8]
  45635c:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x285fc>
  456360:	add	x1, x1, #0x7b0
  456364:	add	x20, sp, #0x60
  456368:	mov	x0, x20
  45636c:	bl	4027a0 <sprintf@plt>
  456370:	mov	x0, x20
  456374:	bl	402700 <strlen@plt>
  456378:	cbz	x0, 4582a8 <_obstack_memory_used@@Base+0x138a4>
  45637c:	add	x22, x20, x0
  456380:	ldr	x1, [x19, #256]
  456384:	b	4563a8 <_obstack_memory_used@@Base+0x119a4>
  456388:	mov	x0, x1
  45638c:	add	x1, x1, #0x1
  456390:	str	x1, [x19, #256]
  456394:	add	x20, x20, #0x1
  456398:	strb	w21, [x19, x0]
  45639c:	cmp	x20, x22
  4563a0:	strb	w21, [x19, #264]
  4563a4:	b.eq	456f10 <_obstack_memory_used@@Base+0x1250c>  // b.none
  4563a8:	ldrb	w21, [x20]
  4563ac:	cmp	x1, #0xff
  4563b0:	b.ne	456388 <_obstack_memory_used@@Base+0x11984>  // b.any
  4563b4:	ldp	x3, x2, [x19, #272]
  4563b8:	strb	wzr, [x19, #255]
  4563bc:	mov	x0, x19
  4563c0:	blr	x3
  4563c4:	ldr	x2, [x19, #320]
  4563c8:	mov	x1, #0x1                   	// #1
  4563cc:	mov	x0, #0x0                   	// #0
  4563d0:	add	x2, x2, x1
  4563d4:	str	x2, [x19, #320]
  4563d8:	b	456390 <_obstack_memory_used@@Base+0x1198c>
  4563dc:	adrp	x24, 46d000 <_obstack_memory_used@@Base+0x285fc>
  4563e0:	add	x24, x24, #0xa20
  4563e4:	adrp	x22, 46d000 <_obstack_memory_used@@Base+0x285fc>
  4563e8:	add	x24, x24, #0xa
  4563ec:	add	x22, x22, #0xa21
  4563f0:	mov	w23, #0x64                  	// #100
  4563f4:	ldr	x1, [x19, #256]
  4563f8:	b	45641c <_obstack_memory_used@@Base+0x11a18>
  4563fc:	mov	x0, x1
  456400:	add	x1, x1, #0x1
  456404:	str	x1, [x19, #256]
  456408:	cmp	x22, x24
  45640c:	strb	w23, [x19, x0]
  456410:	strb	w23, [x19, #264]
  456414:	b.eq	456c84 <_obstack_memory_used@@Base+0x12280>  // b.none
  456418:	ldrb	w23, [x22], #1
  45641c:	cmp	x1, #0xff
  456420:	b.ne	4563fc <_obstack_memory_used@@Base+0x119f8>  // b.any
  456424:	ldp	x3, x2, [x19, #272]
  456428:	strb	wzr, [x19, #255]
  45642c:	mov	x0, x19
  456430:	blr	x3
  456434:	ldr	x2, [x19, #320]
  456438:	mov	x1, #0x1                   	// #1
  45643c:	mov	x0, #0x0                   	// #0
  456440:	add	x2, x2, x1
  456444:	str	x2, [x19, #320]
  456448:	b	456404 <_obstack_memory_used@@Base+0x11a00>
  45644c:	adrp	x24, 46d000 <_obstack_memory_used@@Base+0x285fc>
  456450:	add	x24, x24, #0xa48
  456454:	adrp	x22, 46d000 <_obstack_memory_used@@Base+0x285fc>
  456458:	add	x24, x24, #0x1d
  45645c:	add	x22, x22, #0xa49
  456460:	mov	w23, #0x67                  	// #103
  456464:	ldr	x1, [x19, #256]
  456468:	b	45648c <_obstack_memory_used@@Base+0x11a88>
  45646c:	mov	x0, x1
  456470:	add	x1, x1, #0x1
  456474:	str	x1, [x19, #256]
  456478:	cmp	x22, x24
  45647c:	strb	w23, [x19, x0]
  456480:	strb	w23, [x19, #264]
  456484:	b.eq	456ec8 <_obstack_memory_used@@Base+0x124c4>  // b.none
  456488:	ldrb	w23, [x22], #1
  45648c:	cmp	x1, #0xff
  456490:	b.ne	45646c <_obstack_memory_used@@Base+0x11a68>  // b.any
  456494:	ldp	x3, x2, [x19, #272]
  456498:	strb	wzr, [x19, #255]
  45649c:	mov	x0, x19
  4564a0:	blr	x3
  4564a4:	ldr	x2, [x19, #320]
  4564a8:	mov	x1, #0x1                   	// #1
  4564ac:	mov	x0, #0x0                   	// #0
  4564b0:	add	x2, x2, x1
  4564b4:	str	x2, [x19, #320]
  4564b8:	b	456474 <_obstack_memory_used@@Base+0x11a70>
  4564bc:	ldrsw	x22, [x20, #16]
  4564c0:	ldr	x20, [x20, #8]
  4564c4:	tbnz	w21, #2, 456f94 <_obstack_memory_used@@Base+0x12590>
  4564c8:	cbz	x22, 4583d8 <_obstack_memory_used@@Base+0x139d4>
  4564cc:	add	x22, x20, x22
  4564d0:	ldr	x1, [x19, #256]
  4564d4:	b	4564f8 <_obstack_memory_used@@Base+0x11af4>
  4564d8:	mov	x0, x1
  4564dc:	add	x1, x1, #0x1
  4564e0:	str	x1, [x19, #256]
  4564e4:	add	x20, x20, #0x1
  4564e8:	strb	w21, [x19, x0]
  4564ec:	cmp	x22, x20
  4564f0:	strb	w21, [x19, #264]
  4564f4:	b.eq	45739c <_obstack_memory_used@@Base+0x12998>  // b.none
  4564f8:	ldrb	w21, [x20]
  4564fc:	cmp	x1, #0xff
  456500:	b.ne	4564d8 <_obstack_memory_used@@Base+0x11ad4>  // b.any
  456504:	ldp	x3, x2, [x19, #272]
  456508:	strb	wzr, [x19, #255]
  45650c:	mov	x0, x19
  456510:	blr	x3
  456514:	ldr	x2, [x19, #320]
  456518:	mov	x1, #0x1                   	// #1
  45651c:	mov	x0, #0x0                   	// #0
  456520:	add	x2, x2, x1
  456524:	str	x2, [x19, #320]
  456528:	b	4564e0 <_obstack_memory_used@@Base+0x11adc>
  45652c:	adrp	x22, 46d000 <_obstack_memory_used@@Base+0x285fc>
  456530:	add	x22, x22, #0x9c0
  456534:	add	x24, x22, #0x9
  456538:	mov	w23, #0x6f                  	// #111
  45653c:	ldr	x1, [x19, #256]
  456540:	b	456568 <_obstack_memory_used@@Base+0x11b64>
  456544:	mov	x0, x1
  456548:	add	x1, x1, #0x1
  45654c:	str	x1, [x19, #256]
  456550:	add	x22, x22, #0x1
  456554:	strb	w23, [x19, x0]
  456558:	cmp	x22, x24
  45655c:	strb	w23, [x19, #264]
  456560:	b.eq	456e78 <_obstack_memory_used@@Base+0x12474>  // b.none
  456564:	ldrb	w23, [x22]
  456568:	cmp	x1, #0xff
  45656c:	b.ne	456544 <_obstack_memory_used@@Base+0x11b40>  // b.any
  456570:	ldp	x3, x2, [x19, #272]
  456574:	strb	wzr, [x19, #255]
  456578:	mov	x0, x19
  45657c:	blr	x3
  456580:	ldr	x2, [x19, #320]
  456584:	mov	x1, #0x1                   	// #1
  456588:	mov	x0, #0x0                   	// #0
  45658c:	add	x2, x2, x1
  456590:	str	x2, [x19, #320]
  456594:	b	45654c <_obstack_memory_used@@Base+0x11b48>
  456598:	ldr	x2, [x20, #8]
  45659c:	mov	w1, w21
  4565a0:	mov	x0, x19
  4565a4:	bl	459a10 <_obstack_memory_used@@Base+0x1500c>
  4565a8:	ldp	x21, x22, [sp, #32]
  4565ac:	ldp	x23, x24, [sp, #48]
  4565b0:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  4565b4:	ldp	x22, x20, [x20, #8]
  4565b8:	ldr	w0, [x22]
  4565bc:	cmp	w0, #0x32
  4565c0:	b.eq	4574e4 <_obstack_memory_used@@Base+0x12ae0>  // b.none
  4565c4:	cmp	w0, #0x34
  4565c8:	b.ne	45882c <_obstack_memory_used@@Base+0x13e28>  // b.any
  4565cc:	ldr	x1, [x19, #256]
  4565d0:	add	x0, x1, #0x1
  4565d4:	cmp	x1, #0xff
  4565d8:	b.ne	456600 <_obstack_memory_used@@Base+0x11bfc>  // b.any
  4565dc:	ldp	x3, x2, [x19, #272]
  4565e0:	strb	wzr, [x19, #255]
  4565e4:	mov	x0, x19
  4565e8:	blr	x3
  4565ec:	ldr	x2, [x19, #320]
  4565f0:	mov	x0, #0x1                   	// #1
  4565f4:	mov	x1, #0x0                   	// #0
  4565f8:	add	x2, x2, x0
  4565fc:	str	x2, [x19, #320]
  456600:	str	x0, [x19, #256]
  456604:	mov	w0, #0x28                  	// #40
  456608:	strb	w0, [x19, x1]
  45660c:	mov	w1, w21
  456610:	strb	w0, [x19, #264]
  456614:	mov	x0, x19
  456618:	ldr	x2, [x22, #8]
  45661c:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  456620:	ldr	x1, [x19, #256]
  456624:	add	x0, x1, #0x1
  456628:	cmp	x1, #0xff
  45662c:	b.ne	456654 <_obstack_memory_used@@Base+0x11c50>  // b.any
  456630:	ldp	x3, x2, [x19, #272]
  456634:	strb	wzr, [x19, #255]
  456638:	mov	x0, x19
  45663c:	blr	x3
  456640:	ldr	x2, [x19, #320]
  456644:	mov	x0, #0x1                   	// #1
  456648:	mov	x1, #0x0                   	// #0
  45664c:	add	x2, x2, x0
  456650:	str	x2, [x19, #320]
  456654:	str	x0, [x19, #256]
  456658:	mov	w0, #0x29                  	// #41
  45665c:	strb	w0, [x19, x1]
  456660:	strb	w0, [x19, #264]
  456664:	mov	w1, w21
  456668:	mov	x2, x20
  45666c:	mov	x0, x19
  456670:	bl	459ac8 <_obstack_memory_used@@Base+0x150c4>
  456674:	ldp	x21, x22, [sp, #32]
  456678:	ldp	x23, x24, [sp, #48]
  45667c:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  456680:	ldr	x0, [x20, #8]
  456684:	tbnz	w21, #2, 457310 <_obstack_memory_used@@Base+0x1290c>
  456688:	ldrsw	x22, [x0, #8]
  45668c:	ldr	x20, [x0]
  456690:	cbz	x22, 4584f8 <_obstack_memory_used@@Base+0x13af4>
  456694:	add	x22, x20, x22
  456698:	ldr	x1, [x19, #256]
  45669c:	b	4566c0 <_obstack_memory_used@@Base+0x11cbc>
  4566a0:	mov	x0, x1
  4566a4:	add	x1, x1, #0x1
  4566a8:	str	x1, [x19, #256]
  4566ac:	add	x20, x20, #0x1
  4566b0:	strb	w21, [x19, x0]
  4566b4:	cmp	x22, x20
  4566b8:	strb	w21, [x19, #264]
  4566bc:	b.eq	457384 <_obstack_memory_used@@Base+0x12980>  // b.none
  4566c0:	ldrb	w21, [x20]
  4566c4:	cmp	x1, #0xff
  4566c8:	b.ne	4566a0 <_obstack_memory_used@@Base+0x11c9c>  // b.any
  4566cc:	ldp	x3, x2, [x19, #272]
  4566d0:	strb	wzr, [x19, #255]
  4566d4:	mov	x0, x19
  4566d8:	blr	x3
  4566dc:	ldr	x2, [x19, #320]
  4566e0:	mov	x1, #0x1                   	// #1
  4566e4:	mov	x0, #0x0                   	// #0
  4566e8:	add	x2, x2, x1
  4566ec:	str	x2, [x19, #320]
  4566f0:	b	4566a8 <_obstack_memory_used@@Base+0x11ca4>
  4566f4:	ldr	x2, [x0, #8]
  4566f8:	add	x0, sp, #0x60
  4566fc:	ldr	x1, [x19, #288]
  456700:	stp	x4, x20, [sp, #96]
  456704:	str	wzr, [sp, #112]
  456708:	str	x1, [sp, #120]
  45670c:	str	x0, [x19, #296]
  456710:	cbnz	x2, 454b28 <_obstack_memory_used@@Base+0x10124>
  456714:	b	454b24 <_obstack_memory_used@@Base+0x10120>
  456718:	ldp	x21, x22, [sp, #32]
  45671c:	ldp	x23, x24, [sp, #48]
  456720:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  456724:	ldr	x2, [x20, #16]
  456728:	mov	w1, w21
  45672c:	mov	x0, x19
  456730:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  456734:	ldr	x1, [x19, #256]
  456738:	add	x0, x1, #0x1
  45673c:	cmp	x1, #0xff
  456740:	b.ne	456768 <_obstack_memory_used@@Base+0x11d64>  // b.any
  456744:	ldp	x3, x2, [x19, #272]
  456748:	strb	wzr, [x19, #255]
  45674c:	mov	x0, x19
  456750:	blr	x3
  456754:	ldr	x2, [x19, #320]
  456758:	mov	x0, #0x1                   	// #1
  45675c:	mov	x1, #0x0                   	// #0
  456760:	add	x2, x2, x0
  456764:	str	x2, [x19, #320]
  456768:	str	x0, [x19, #256]
  45676c:	mov	w0, #0x5d                  	// #93
  456770:	strb	w0, [x19, x1]
  456774:	strb	w0, [x19, #264]
  456778:	ldp	x21, x22, [sp, #32]
  45677c:	ldp	x23, x24, [sp, #48]
  456780:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  456784:	ldr	x2, [x20, #16]
  456788:	mov	w1, w21
  45678c:	mov	x0, x19
  456790:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  456794:	ldp	x21, x22, [sp, #32]
  456798:	ldp	x23, x24, [sp, #48]
  45679c:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  4567a0:	ldr	x2, [x20, #8]
  4567a4:	mov	w1, w21
  4567a8:	mov	x0, x19
  4567ac:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  4567b0:	ldp	x21, x22, [sp, #32]
  4567b4:	ldp	x23, x24, [sp, #48]
  4567b8:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  4567bc:	ldr	x2, [x20, #8]
  4567c0:	mov	w1, w21
  4567c4:	mov	x0, x19
  4567c8:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  4567cc:	ldp	x21, x22, [sp, #32]
  4567d0:	ldp	x23, x24, [sp, #48]
  4567d4:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  4567d8:	ldr	x2, [x20, #16]
  4567dc:	mov	w1, w21
  4567e0:	mov	x0, x19
  4567e4:	adrp	x24, 46d000 <_obstack_memory_used@@Base+0x285fc>
  4567e8:	add	x24, x24, #0x848
  4567ec:	adrp	x22, 46d000 <_obstack_memory_used@@Base+0x285fc>
  4567f0:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  4567f4:	add	x24, x24, #0x5
  4567f8:	add	x22, x22, #0x849
  4567fc:	mov	w23, #0x20                  	// #32
  456800:	ldr	x1, [x19, #256]
  456804:	b	456828 <_obstack_memory_used@@Base+0x11e24>
  456808:	mov	x0, x1
  45680c:	add	x1, x1, #0x1
  456810:	str	x1, [x19, #256]
  456814:	cmp	x22, x24
  456818:	strb	w23, [x19, x0]
  45681c:	strb	w23, [x19, #264]
  456820:	b.eq	4568c8 <_obstack_memory_used@@Base+0x11ec4>  // b.none
  456824:	ldrb	w23, [x22], #1
  456828:	cmp	x1, #0xff
  45682c:	b.ne	456808 <_obstack_memory_used@@Base+0x11e04>  // b.any
  456830:	ldp	x3, x2, [x19, #272]
  456834:	strb	wzr, [x19, #255]
  456838:	mov	x0, x19
  45683c:	blr	x3
  456840:	ldr	x2, [x19, #320]
  456844:	mov	x1, #0x1                   	// #1
  456848:	mov	x0, #0x0                   	// #0
  45684c:	add	x2, x2, x1
  456850:	str	x2, [x19, #320]
  456854:	b	456810 <_obstack_memory_used@@Base+0x11e0c>
  456858:	ldr	x2, [x20, #8]
  45685c:	mov	w1, w21
  456860:	mov	x0, x19
  456864:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  456868:	ldp	x21, x22, [sp, #32]
  45686c:	ldp	x23, x24, [sp, #48]
  456870:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  456874:	ldr	x2, [x20, #8]
  456878:	mov	w1, w21
  45687c:	mov	x0, x19
  456880:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  456884:	ldp	x21, x22, [sp, #32]
  456888:	ldp	x23, x24, [sp, #48]
  45688c:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  456890:	ldr	x2, [x20, #8]
  456894:	mov	w1, w21
  456898:	mov	x0, x19
  45689c:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  4568a0:	ldp	x21, x22, [sp, #32]
  4568a4:	ldp	x23, x24, [sp, #48]
  4568a8:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  4568ac:	ldr	x2, [x20, #8]
  4568b0:	mov	w1, w21
  4568b4:	mov	x0, x19
  4568b8:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  4568bc:	ldp	x21, x22, [sp, #32]
  4568c0:	ldp	x23, x24, [sp, #48]
  4568c4:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  4568c8:	ldr	x2, [x20, #8]
  4568cc:	mov	w1, w21
  4568d0:	mov	x0, x19
  4568d4:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  4568d8:	ldp	x21, x22, [sp, #32]
  4568dc:	ldp	x23, x24, [sp, #48]
  4568e0:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  4568e4:	ldr	x2, [x20, #16]
  4568e8:	mov	w1, w21
  4568ec:	mov	x0, x19
  4568f0:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  4568f4:	ldr	x1, [x19, #256]
  4568f8:	add	x0, x1, #0x1
  4568fc:	cmp	x1, #0xff
  456900:	b.ne	456928 <_obstack_memory_used@@Base+0x11f24>  // b.any
  456904:	ldp	x3, x2, [x19, #272]
  456908:	strb	wzr, [x19, #255]
  45690c:	mov	x0, x19
  456910:	blr	x3
  456914:	ldr	x2, [x19, #320]
  456918:	mov	x0, #0x1                   	// #1
  45691c:	mov	x1, #0x0                   	// #0
  456920:	add	x2, x2, x0
  456924:	str	x2, [x19, #320]
  456928:	str	x0, [x19, #256]
  45692c:	mov	w0, #0x5d                  	// #93
  456930:	strb	w0, [x19, x1]
  456934:	strb	w0, [x19, #264]
  456938:	ldp	x21, x22, [sp, #32]
  45693c:	ldp	x23, x24, [sp, #48]
  456940:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  456944:	ldr	x20, [x22, #8]
  456948:	ldrb	w0, [x20]
  45694c:	sub	w0, w0, #0x61
  456950:	and	w0, w0, #0xff
  456954:	cmp	w0, #0x19
  456958:	b.hi	4569a0 <_obstack_memory_used@@Base+0x11f9c>  // b.pmore
  45695c:	add	x0, x1, #0x1
  456960:	cmp	x1, #0xff
  456964:	b.ne	456990 <_obstack_memory_used@@Base+0x11f8c>  // b.any
  456968:	ldp	x3, x2, [x19, #272]
  45696c:	strb	wzr, [x19, #255]
  456970:	mov	x0, x19
  456974:	blr	x3
  456978:	ldr	x2, [x19, #320]
  45697c:	mov	x0, #0x1                   	// #1
  456980:	mov	x1, #0x0                   	// #0
  456984:	add	x2, x2, x0
  456988:	ldr	x20, [x22, #8]
  45698c:	str	x2, [x19, #320]
  456990:	str	x0, [x19, #256]
  456994:	mov	w0, #0x20                  	// #32
  456998:	strb	w0, [x19, x1]
  45699c:	strb	w0, [x19, #264]
  4569a0:	sxtw	x22, w23
  4569a4:	sub	w0, w23, #0x1
  4569a8:	add	x1, x20, x22
  4569ac:	sxtw	x0, w0
  4569b0:	ldurb	w1, [x1, #-1]
  4569b4:	cmp	w1, #0x20
  4569b8:	csel	x22, x22, x0, ne  // ne = any
  4569bc:	cbz	x22, 45829c <_obstack_memory_used@@Base+0x13898>
  4569c0:	add	x22, x20, x22
  4569c4:	ldr	x1, [x19, #256]
  4569c8:	b	4569ec <_obstack_memory_used@@Base+0x11fe8>
  4569cc:	mov	x0, x1
  4569d0:	add	x1, x1, #0x1
  4569d4:	str	x1, [x19, #256]
  4569d8:	add	x20, x20, #0x1
  4569dc:	strb	w21, [x19, x0]
  4569e0:	cmp	x22, x20
  4569e4:	strb	w21, [x19, #264]
  4569e8:	b.eq	456f04 <_obstack_memory_used@@Base+0x12500>  // b.none
  4569ec:	ldrb	w21, [x20]
  4569f0:	cmp	x1, #0xff
  4569f4:	b.ne	4569cc <_obstack_memory_used@@Base+0x11fc8>  // b.any
  4569f8:	ldp	x3, x2, [x19, #272]
  4569fc:	strb	wzr, [x19, #255]
  456a00:	mov	x0, x19
  456a04:	blr	x3
  456a08:	ldr	x2, [x19, #320]
  456a0c:	mov	x1, #0x1                   	// #1
  456a10:	mov	x0, #0x0                   	// #0
  456a14:	add	x2, x2, x1
  456a18:	str	x2, [x19, #320]
  456a1c:	b	4569d4 <_obstack_memory_used@@Base+0x11fd0>
  456a20:	ldr	x2, [x20, #8]
  456a24:	mov	w1, w21
  456a28:	mov	x0, x19
  456a2c:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  456a30:	ldp	x21, x22, [sp, #32]
  456a34:	ldp	x23, x24, [sp, #48]
  456a38:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  456a3c:	ldr	x2, [x20, #8]
  456a40:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x285fc>
  456a44:	add	x1, x1, #0x7b0
  456a48:	add	x20, sp, #0x60
  456a4c:	add	w2, w2, #0x1
  456a50:	mov	x0, x20
  456a54:	bl	4027a0 <sprintf@plt>
  456a58:	mov	x0, x20
  456a5c:	bl	402700 <strlen@plt>
  456a60:	ldr	x1, [x19, #256]
  456a64:	cbz	x0, 456ac4 <_obstack_memory_used@@Base+0x120c0>
  456a68:	add	x22, x20, x0
  456a6c:	b	456a90 <_obstack_memory_used@@Base+0x1208c>
  456a70:	mov	x0, x1
  456a74:	add	x1, x1, #0x1
  456a78:	str	x1, [x19, #256]
  456a7c:	add	x20, x20, #0x1
  456a80:	strb	w21, [x19, x0]
  456a84:	cmp	x22, x20
  456a88:	strb	w21, [x19, #264]
  456a8c:	b.eq	456ac4 <_obstack_memory_used@@Base+0x120c0>  // b.none
  456a90:	ldrb	w21, [x20]
  456a94:	cmp	x1, #0xff
  456a98:	b.ne	456a70 <_obstack_memory_used@@Base+0x1206c>  // b.any
  456a9c:	ldp	x3, x2, [x19, #272]
  456aa0:	strb	wzr, [x19, #255]
  456aa4:	mov	x0, x19
  456aa8:	blr	x3
  456aac:	ldr	x2, [x19, #320]
  456ab0:	mov	x1, #0x1                   	// #1
  456ab4:	mov	x0, #0x0                   	// #0
  456ab8:	add	x2, x2, x1
  456abc:	str	x2, [x19, #320]
  456ac0:	b	456a78 <_obstack_memory_used@@Base+0x12074>
  456ac4:	add	x0, x1, #0x1
  456ac8:	cmp	x1, #0xff
  456acc:	b.ne	456af4 <_obstack_memory_used@@Base+0x120f0>  // b.any
  456ad0:	ldp	x3, x2, [x19, #272]
  456ad4:	strb	wzr, [x19, #255]
  456ad8:	mov	x0, x19
  456adc:	blr	x3
  456ae0:	ldr	x2, [x19, #320]
  456ae4:	mov	x0, #0x1                   	// #1
  456ae8:	mov	x1, #0x0                   	// #0
  456aec:	add	x2, x2, x0
  456af0:	str	x2, [x19, #320]
  456af4:	str	x0, [x19, #256]
  456af8:	mov	w0, #0x7d                  	// #125
  456afc:	strb	w0, [x19, x1]
  456b00:	strb	w0, [x19, #264]
  456b04:	ldp	x21, x22, [sp, #32]
  456b08:	ldp	x23, x24, [sp, #48]
  456b0c:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  456b10:	ldr	x2, [x20, #8]
  456b14:	mov	w1, w21
  456b18:	mov	x0, x19
  456b1c:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  456b20:	ldp	x21, x22, [sp, #32]
  456b24:	ldp	x23, x24, [sp, #48]
  456b28:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  456b2c:	ldr	x2, [x20, #8]
  456b30:	mov	w1, w21
  456b34:	mov	x0, x19
  456b38:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  456b3c:	ldp	x21, x22, [sp, #32]
  456b40:	ldp	x23, x24, [sp, #48]
  456b44:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  456b48:	ldr	w3, [x19, #312]
  456b4c:	mov	w1, w21
  456b50:	ldr	x2, [x20, #8]
  456b54:	add	w3, w3, #0x1
  456b58:	str	w3, [x19, #312]
  456b5c:	mov	x0, x19
  456b60:	mov	w21, #0x29                  	// #41
  456b64:	mov	x22, #0x0                   	// #0
  456b68:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  456b6c:	ldr	w0, [x19, #312]
  456b70:	ldr	x1, [x19, #256]
  456b74:	sub	w0, w0, #0x1
  456b78:	str	w0, [x19, #312]
  456b7c:	b	456ba4 <_obstack_memory_used@@Base+0x121a0>
  456b80:	mov	x0, x1
  456b84:	add	x1, x1, #0x1
  456b88:	str	x1, [x19, #256]
  456b8c:	cmp	x22, #0x1
  456b90:	strb	w21, [x19, x0]
  456b94:	strb	w21, [x19, #264]
  456b98:	mov	w21, #0x23                  	// #35
  456b9c:	b.eq	456bd4 <_obstack_memory_used@@Base+0x121d0>  // b.none
  456ba0:	mov	x22, #0x1                   	// #1
  456ba4:	cmp	x1, #0xff
  456ba8:	b.ne	456b80 <_obstack_memory_used@@Base+0x1217c>  // b.any
  456bac:	ldp	x3, x2, [x19, #272]
  456bb0:	strb	wzr, [x19, #255]
  456bb4:	mov	x0, x19
  456bb8:	blr	x3
  456bbc:	ldr	x2, [x19, #320]
  456bc0:	mov	x1, #0x1                   	// #1
  456bc4:	mov	x0, #0x0                   	// #0
  456bc8:	add	x2, x2, x1
  456bcc:	str	x2, [x19, #320]
  456bd0:	b	456b88 <_obstack_memory_used@@Base+0x12184>
  456bd4:	ldr	w2, [x20, #16]
  456bd8:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x285fc>
  456bdc:	add	x1, x1, #0x7b0
  456be0:	add	x20, sp, #0x60
  456be4:	add	w2, w2, #0x1
  456be8:	mov	x0, x20
  456bec:	bl	4027a0 <sprintf@plt>
  456bf0:	mov	x0, x20
  456bf4:	bl	402700 <strlen@plt>
  456bf8:	ldr	x1, [x19, #256]
  456bfc:	cbz	x0, 456c5c <_obstack_memory_used@@Base+0x12258>
  456c00:	add	x23, x20, x0
  456c04:	b	456c28 <_obstack_memory_used@@Base+0x12224>
  456c08:	mov	x0, x1
  456c0c:	add	x1, x1, #0x1
  456c10:	str	x1, [x19, #256]
  456c14:	add	x20, x20, #0x1
  456c18:	strb	w21, [x19, x0]
  456c1c:	cmp	x23, x20
  456c20:	strb	w21, [x19, #264]
  456c24:	b.eq	456c5c <_obstack_memory_used@@Base+0x12258>  // b.none
  456c28:	ldrb	w21, [x20]
  456c2c:	cmp	x1, #0xff
  456c30:	b.ne	456c08 <_obstack_memory_used@@Base+0x12204>  // b.any
  456c34:	ldp	x3, x2, [x19, #272]
  456c38:	strb	wzr, [x19, #255]
  456c3c:	mov	x0, x19
  456c40:	blr	x3
  456c44:	ldr	x2, [x19, #320]
  456c48:	mov	x1, #0x1                   	// #1
  456c4c:	mov	x0, #0x0                   	// #0
  456c50:	add	x2, x2, x1
  456c54:	str	x2, [x19, #320]
  456c58:	b	456c10 <_obstack_memory_used@@Base+0x1220c>
  456c5c:	cmp	x1, #0xff
  456c60:	b.eq	4574c0 <_obstack_memory_used@@Base+0x12abc>  // b.none
  456c64:	add	x22, x1, #0x1
  456c68:	str	x22, [x19, #256]
  456c6c:	mov	w0, #0x7d                  	// #125
  456c70:	strb	w0, [x19, x1]
  456c74:	strb	w0, [x19, #264]
  456c78:	ldp	x21, x22, [sp, #32]
  456c7c:	ldp	x23, x24, [sp, #48]
  456c80:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  456c84:	ldr	x2, [x20, #8]
  456c88:	mov	w1, w21
  456c8c:	mov	x0, x19
  456c90:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  456c94:	ldr	x1, [x19, #256]
  456c98:	add	x0, x1, #0x1
  456c9c:	cmp	x1, #0xff
  456ca0:	b.ne	456cc8 <_obstack_memory_used@@Base+0x122c4>  // b.any
  456ca4:	ldp	x3, x2, [x19, #272]
  456ca8:	strb	wzr, [x19, #255]
  456cac:	mov	x0, x19
  456cb0:	blr	x3
  456cb4:	ldr	x2, [x19, #320]
  456cb8:	mov	x0, #0x1                   	// #1
  456cbc:	mov	x1, #0x0                   	// #0
  456cc0:	add	x2, x2, x0
  456cc4:	str	x2, [x19, #320]
  456cc8:	str	x0, [x19, #256]
  456ccc:	mov	w0, #0x29                  	// #41
  456cd0:	strb	w0, [x19, x1]
  456cd4:	strb	w0, [x19, #264]
  456cd8:	ldp	x21, x22, [sp, #32]
  456cdc:	ldp	x23, x24, [sp, #48]
  456ce0:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  456ce4:	ldr	x2, [x20, #8]
  456ce8:	mov	w1, w21
  456cec:	mov	x0, x19
  456cf0:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  456cf4:	ldp	x21, x22, [sp, #32]
  456cf8:	ldp	x23, x24, [sp, #48]
  456cfc:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  456d00:	ldr	x2, [x20, #8]
  456d04:	mov	w1, w21
  456d08:	mov	x0, x19
  456d0c:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  456d10:	ldp	x21, x22, [sp, #32]
  456d14:	ldp	x23, x24, [sp, #48]
  456d18:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  456d1c:	ldr	x2, [x20, #8]
  456d20:	mov	w1, w21
  456d24:	mov	x0, x19
  456d28:	adrp	x22, 46d000 <_obstack_memory_used@@Base+0x285fc>
  456d2c:	add	x22, x22, #0x838
  456d30:	mov	w23, #0x2d                  	// #45
  456d34:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  456d38:	add	x24, x22, #0x4
  456d3c:	ldr	x1, [x19, #256]
  456d40:	b	456d68 <_obstack_memory_used@@Base+0x12364>
  456d44:	mov	x0, x1
  456d48:	add	x1, x1, #0x1
  456d4c:	str	x1, [x19, #256]
  456d50:	add	x22, x22, #0x1
  456d54:	strb	w23, [x19, x0]
  456d58:	cmp	x24, x22
  456d5c:	strb	w23, [x19, #264]
  456d60:	b.eq	456dd0 <_obstack_memory_used@@Base+0x123cc>  // b.none
  456d64:	ldrb	w23, [x22]
  456d68:	cmp	x1, #0xff
  456d6c:	b.ne	456d44 <_obstack_memory_used@@Base+0x12340>  // b.any
  456d70:	ldp	x3, x2, [x19, #272]
  456d74:	strb	wzr, [x19, #255]
  456d78:	mov	x0, x19
  456d7c:	blr	x3
  456d80:	ldr	x2, [x19, #320]
  456d84:	mov	x1, #0x1                   	// #1
  456d88:	mov	x0, #0x0                   	// #0
  456d8c:	add	x2, x2, x1
  456d90:	str	x2, [x19, #320]
  456d94:	b	456d4c <_obstack_memory_used@@Base+0x12348>
  456d98:	ldr	x2, [x20, #8]
  456d9c:	mov	w1, w21
  456da0:	mov	x0, x19
  456da4:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  456da8:	ldp	x21, x22, [sp, #32]
  456dac:	ldp	x23, x24, [sp, #48]
  456db0:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  456db4:	ldr	x2, [x20, #8]
  456db8:	mov	w1, w21
  456dbc:	mov	x0, x19
  456dc0:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  456dc4:	ldp	x21, x22, [sp, #32]
  456dc8:	ldp	x23, x24, [sp, #48]
  456dcc:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  456dd0:	ldr	x2, [x20, #16]
  456dd4:	mov	w1, w21
  456dd8:	mov	x0, x19
  456ddc:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  456de0:	ldp	x21, x22, [sp, #32]
  456de4:	ldp	x23, x24, [sp, #48]
  456de8:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  456dec:	ldr	x2, [x20, #8]
  456df0:	mov	w1, w21
  456df4:	mov	x0, x19
  456df8:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  456dfc:	ldp	x21, x22, [sp, #32]
  456e00:	ldp	x23, x24, [sp, #48]
  456e04:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  456e08:	ldr	x2, [x20, #8]
  456e0c:	mov	w1, w21
  456e10:	mov	x0, x19
  456e14:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  456e18:	ldp	x21, x22, [sp, #32]
  456e1c:	ldp	x23, x24, [sp, #48]
  456e20:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  456e24:	ldr	x2, [x20, #8]
  456e28:	mov	w1, w21
  456e2c:	mov	x0, x19
  456e30:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  456e34:	ldp	x21, x22, [sp, #32]
  456e38:	ldp	x23, x24, [sp, #48]
  456e3c:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  456e40:	ldr	x2, [x20, #8]
  456e44:	mov	w1, w21
  456e48:	mov	x0, x19
  456e4c:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  456e50:	ldp	x21, x22, [sp, #32]
  456e54:	ldp	x23, x24, [sp, #48]
  456e58:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  456e5c:	ldr	x2, [x20, #8]
  456e60:	mov	w1, w21
  456e64:	mov	x0, x19
  456e68:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  456e6c:	ldp	x21, x22, [sp, #32]
  456e70:	ldp	x23, x24, [sp, #48]
  456e74:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  456e78:	ldr	x1, [x19, #368]
  456e7c:	cbz	x1, 456e90 <_obstack_memory_used@@Base+0x1248c>
  456e80:	ldr	x2, [x19, #288]
  456e84:	add	x0, sp, #0x60
  456e88:	stp	x2, x1, [sp, #96]
  456e8c:	str	x0, [x19, #288]
  456e90:	ldr	x2, [x20, #8]
  456e94:	ldr	w0, [x2]
  456e98:	cmp	w0, #0x4
  456e9c:	b.eq	457788 <_obstack_memory_used@@Base+0x12d84>  // b.none
  456ea0:	mov	x0, x19
  456ea4:	mov	w1, w21
  456ea8:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  456eac:	ldr	x0, [x19, #368]
  456eb0:	cbz	x0, 457ba4 <_obstack_memory_used@@Base+0x131a0>
  456eb4:	ldr	x0, [sp, #96]
  456eb8:	ldp	x21, x22, [sp, #32]
  456ebc:	ldp	x23, x24, [sp, #48]
  456ec0:	str	x0, [x19, #288]
  456ec4:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  456ec8:	ldr	x2, [x20, #8]
  456ecc:	mov	w1, w21
  456ed0:	mov	x0, x19
  456ed4:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  456ed8:	ldp	x21, x22, [sp, #32]
  456edc:	ldp	x23, x24, [sp, #48]
  456ee0:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  456ee4:	mov	x2, x20
  456ee8:	mov	w1, w21
  456eec:	mov	x0, x19
  456ef0:	bl	458908 <_obstack_memory_used@@Base+0x13f04>
  456ef4:	b	454b3c <_obstack_memory_used@@Base+0x10138>
  456ef8:	ldp	x21, x22, [sp, #32]
  456efc:	ldp	x23, x24, [sp, #48]
  456f00:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  456f04:	ldp	x21, x22, [sp, #32]
  456f08:	ldp	x23, x24, [sp, #48]
  456f0c:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  456f10:	ldp	x21, x22, [sp, #32]
  456f14:	ldp	x23, x24, [sp, #48]
  456f18:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  456f1c:	ldp	x21, x22, [sp, #32]
  456f20:	ldp	x23, x24, [sp, #48]
  456f24:	ldp	x25, x26, [sp, #64]
  456f28:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  456f2c:	ldr	x2, [x20, #16]
  456f30:	mov	x0, x19
  456f34:	mov	w1, w21
  456f38:	ldr	x20, [x19, #320]
  456f3c:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  456f40:	ldr	x0, [x19, #320]
  456f44:	cmp	x0, x20
  456f48:	b.eq	457b40 <_obstack_memory_used@@Base+0x1313c>  // b.none
  456f4c:	ldp	x21, x22, [sp, #32]
  456f50:	ldp	x23, x24, [sp, #48]
  456f54:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  456f58:	ldr	x25, [x25, #8]
  456f5c:	cbz	x25, 457e34 <_obstack_memory_used@@Base+0x13430>
  456f60:	add	x3, x3, #0x20
  456f64:	cmp	w24, #0x4
  456f68:	b.eq	457b08 <_obstack_memory_used@@Base+0x13104>  // b.none
  456f6c:	mov	x0, x4
  456f70:	b	455da4 <_obstack_memory_used@@Base+0x113a0>
  456f74:	ldr	x25, [x20, #8]
  456f78:	cbnz	w24, 4558e4 <_obstack_memory_used@@Base+0x10ee0>
  456f7c:	ldp	x21, x22, [sp, #32]
  456f80:	ldp	x23, x24, [sp, #48]
  456f84:	ldp	x25, x26, [sp, #64]
  456f88:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  456f8c:	mov	x20, x0
  456f90:	b	454c98 <_obstack_memory_used@@Base+0x10294>
  456f94:	add	x21, x20, x22
  456f98:	cmp	x21, x20
  456f9c:	b.ls	4583e4 <_obstack_memory_used@@Base+0x139e0>  // b.plast
  456fa0:	mov	w23, #0x5f                  	// #95
  456fa4:	b	456ff4 <_obstack_memory_used@@Base+0x125f0>
  456fa8:	ldr	x1, [x19, #256]
  456fac:	add	x0, x1, #0x1
  456fb0:	cmp	x1, #0xff
  456fb4:	b.ne	456fdc <_obstack_memory_used@@Base+0x125d8>  // b.any
  456fb8:	ldp	x3, x2, [x19, #272]
  456fbc:	strb	wzr, [x19, #255]
  456fc0:	mov	x0, x19
  456fc4:	blr	x3
  456fc8:	ldr	x2, [x19, #320]
  456fcc:	mov	x0, #0x1                   	// #1
  456fd0:	mov	x1, #0x0                   	// #0
  456fd4:	add	x2, x2, x0
  456fd8:	str	x2, [x19, #320]
  456fdc:	str	x0, [x19, #256]
  456fe0:	strb	w22, [x19, x1]
  456fe4:	strb	w22, [x19, #264]
  456fe8:	add	x20, x20, #0x1
  456fec:	cmp	x21, x20
  456ff0:	b.ls	4573a8 <_obstack_memory_used@@Base+0x129a4>  // b.plast
  456ff4:	sub	x0, x21, x20
  456ff8:	ldrb	w22, [x20]
  456ffc:	cmp	x0, #0x3
  457000:	b.le	456fa8 <_obstack_memory_used@@Base+0x125a4>
  457004:	cmp	w22, #0x5f
  457008:	b.ne	456fa8 <_obstack_memory_used@@Base+0x125a4>  // b.any
  45700c:	ldrb	w0, [x20, #1]
  457010:	cmp	w0, #0x5f
  457014:	b.ne	456fa8 <_obstack_memory_used@@Base+0x125a4>  // b.any
  457018:	ldrb	w0, [x20, #2]
  45701c:	cmp	w0, #0x55
  457020:	b.ne	456fa8 <_obstack_memory_used@@Base+0x125a4>  // b.any
  457024:	add	x24, x20, #0x3
  457028:	cmp	x21, x24
  45702c:	b.ls	456fa8 <_obstack_memory_used@@Base+0x125a4>  // b.plast
  457030:	mov	x2, #0x0                   	// #0
  457034:	b	457050 <_obstack_memory_used@@Base+0x1264c>
  457038:	mov	w0, w1
  45703c:	sxtw	x0, w0
  457040:	add	x24, x24, #0x1
  457044:	add	x2, x0, x2, lsl #4
  457048:	cmp	x21, x24
  45704c:	b.eq	456fa8 <_obstack_memory_used@@Base+0x125a4>  // b.none
  457050:	ldrb	w0, [x24]
  457054:	sub	w1, w0, #0x30
  457058:	and	w3, w1, #0xff
  45705c:	cmp	w3, #0x9
  457060:	b.ls	457038 <_obstack_memory_used@@Base+0x12634>  // b.plast
  457064:	sub	w1, w0, #0x41
  457068:	and	w1, w1, #0xff
  45706c:	cmp	w1, #0x5
  457070:	b.hi	458074 <_obstack_memory_used@@Base+0x13670>  // b.pmore
  457074:	sub	w0, w0, #0x37
  457078:	b	45703c <_obstack_memory_used@@Base+0x12638>
  45707c:	add	x1, x20, #0x8
  457080:	mov	x0, x19
  457084:	bl	451108 <_obstack_memory_used@@Base+0xc704>
  457088:	mov	x2, x0
  45708c:	cbz	x0, 454af0 <_obstack_memory_used@@Base+0x100ec>
  457090:	ldr	w1, [x0]
  457094:	cmp	w1, #0x2f
  457098:	b.eq	4580f0 <_obstack_memory_used@@Base+0x136ec>  // b.none
  45709c:	ldr	x20, [x19, #288]
  4570a0:	mov	w1, w21
  4570a4:	mov	x0, x19
  4570a8:	ldr	x3, [x20]
  4570ac:	str	x3, [x19, #288]
  4570b0:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  4570b4:	ldp	x21, x22, [sp, #32]
  4570b8:	ldp	x23, x24, [sp, #48]
  4570bc:	str	x20, [x19, #288]
  4570c0:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  4570c4:	ldr	x2, [x20, #8]
  4570c8:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x285fc>
  4570cc:	add	x1, x1, #0x7b0
  4570d0:	add	x20, sp, #0x60
  4570d4:	add	w2, w2, #0x1
  4570d8:	mov	x0, x20
  4570dc:	bl	4027a0 <sprintf@plt>
  4570e0:	mov	x0, x20
  4570e4:	bl	402700 <strlen@plt>
  4570e8:	cbz	x0, 4584ec <_obstack_memory_used@@Base+0x13ae8>
  4570ec:	add	x22, x20, x0
  4570f0:	ldr	x1, [x19, #256]
  4570f4:	b	457118 <_obstack_memory_used@@Base+0x12714>
  4570f8:	mov	x0, x1
  4570fc:	add	x1, x1, #0x1
  457100:	str	x1, [x19, #256]
  457104:	add	x20, x20, #0x1
  457108:	strb	w21, [x19, x0]
  45710c:	cmp	x22, x20
  457110:	strb	w21, [x19, #264]
  457114:	b.eq	4573b4 <_obstack_memory_used@@Base+0x129b0>  // b.none
  457118:	ldrb	w21, [x20]
  45711c:	cmp	x1, #0xff
  457120:	b.ne	4570f8 <_obstack_memory_used@@Base+0x126f4>  // b.any
  457124:	ldp	x3, x2, [x19, #272]
  457128:	strb	wzr, [x19, #255]
  45712c:	mov	x0, x19
  457130:	blr	x3
  457134:	ldr	x2, [x19, #320]
  457138:	mov	x1, #0x1                   	// #1
  45713c:	mov	x0, #0x0                   	// #0
  457140:	add	x2, x2, x1
  457144:	str	x2, [x19, #320]
  457148:	b	457100 <_obstack_memory_used@@Base+0x126fc>
  45714c:	adrp	x20, 46d000 <_obstack_memory_used@@Base+0x285fc>
  457150:	add	x20, x20, #0xa40
  457154:	add	x22, x20, #0x4
  457158:	mov	w21, #0x74                  	// #116
  45715c:	b	457184 <_obstack_memory_used@@Base+0x12780>
  457160:	mov	x0, x1
  457164:	add	x1, x1, #0x1
  457168:	str	x1, [x19, #256]
  45716c:	add	x20, x20, #0x1
  457170:	strb	w21, [x19, x0]
  457174:	cmp	x20, x22
  457178:	strb	w21, [x19, #264]
  45717c:	b.eq	4571b4 <_obstack_memory_used@@Base+0x127b0>  // b.none
  457180:	ldrb	w21, [x20]
  457184:	cmp	x1, #0xff
  457188:	b.ne	457160 <_obstack_memory_used@@Base+0x1275c>  // b.any
  45718c:	ldp	x3, x2, [x19, #272]
  457190:	strb	wzr, [x19, #255]
  457194:	mov	x0, x19
  457198:	blr	x3
  45719c:	ldr	x2, [x19, #320]
  4571a0:	mov	x1, #0x1                   	// #1
  4571a4:	mov	x0, #0x0                   	// #0
  4571a8:	add	x2, x2, x1
  4571ac:	str	x2, [x19, #320]
  4571b0:	b	457168 <_obstack_memory_used@@Base+0x12764>
  4571b4:	ldp	x21, x22, [sp, #32]
  4571b8:	ldp	x23, x24, [sp, #48]
  4571bc:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  4571c0:	mov	w2, w23
  4571c4:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x285fc>
  4571c8:	add	x1, x1, #0x7b0
  4571cc:	add	x20, sp, #0x60
  4571d0:	mov	x0, x20
  4571d4:	bl	4027a0 <sprintf@plt>
  4571d8:	mov	x0, x20
  4571dc:	bl	402700 <strlen@plt>
  4571e0:	ldr	x1, [x19, #256]
  4571e4:	cbz	x0, 457244 <_obstack_memory_used@@Base+0x12840>
  4571e8:	add	x22, x20, x0
  4571ec:	b	457210 <_obstack_memory_used@@Base+0x1280c>
  4571f0:	mov	x0, x1
  4571f4:	add	x1, x1, #0x1
  4571f8:	str	x1, [x19, #256]
  4571fc:	add	x20, x20, #0x1
  457200:	strb	w21, [x19, x0]
  457204:	cmp	x20, x22
  457208:	strb	w21, [x19, #264]
  45720c:	b.eq	457244 <_obstack_memory_used@@Base+0x12840>  // b.none
  457210:	ldrb	w21, [x20]
  457214:	cmp	x1, #0xff
  457218:	b.ne	4571f0 <_obstack_memory_used@@Base+0x127ec>  // b.any
  45721c:	ldp	x3, x2, [x19, #272]
  457220:	strb	wzr, [x19, #255]
  457224:	mov	x0, x19
  457228:	blr	x3
  45722c:	ldr	x2, [x19, #320]
  457230:	mov	x1, #0x1                   	// #1
  457234:	mov	x0, #0x0                   	// #0
  457238:	add	x2, x2, x1
  45723c:	str	x2, [x19, #320]
  457240:	b	4571f8 <_obstack_memory_used@@Base+0x127f4>
  457244:	add	x0, x1, #0x1
  457248:	cmp	x1, #0xff
  45724c:	b.ne	457274 <_obstack_memory_used@@Base+0x12870>  // b.any
  457250:	ldp	x3, x2, [x19, #272]
  457254:	strb	wzr, [x19, #255]
  457258:	mov	x0, x19
  45725c:	blr	x3
  457260:	ldr	x2, [x19, #320]
  457264:	mov	x0, #0x1                   	// #1
  457268:	mov	x1, #0x0                   	// #0
  45726c:	add	x2, x2, x0
  457270:	str	x2, [x19, #320]
  457274:	str	x0, [x19, #256]
  457278:	mov	w0, #0x7d                  	// #125
  45727c:	strb	w0, [x19, x1]
  457280:	strb	w0, [x19, #264]
  457284:	ldp	x21, x22, [sp, #32]
  457288:	ldp	x23, x24, [sp, #48]
  45728c:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  457290:	adrp	x20, 46d000 <_obstack_memory_used@@Base+0x285fc>
  457294:	add	x20, x20, #0x9a8
  457298:	add	x22, x20, #0x6
  45729c:	mov	w21, #0x5f                  	// #95
  4572a0:	b	4572c8 <_obstack_memory_used@@Base+0x128c4>
  4572a4:	mov	x0, x1
  4572a8:	add	x1, x1, #0x1
  4572ac:	str	x1, [x19, #256]
  4572b0:	add	x20, x20, #0x1
  4572b4:	strb	w21, [x19, x0]
  4572b8:	cmp	x20, x22
  4572bc:	strb	w21, [x19, #264]
  4572c0:	b.eq	4572f8 <_obstack_memory_used@@Base+0x128f4>  // b.none
  4572c4:	ldrb	w21, [x20]
  4572c8:	cmp	x1, #0xff
  4572cc:	b.ne	4572a4 <_obstack_memory_used@@Base+0x128a0>  // b.any
  4572d0:	ldp	x3, x2, [x19, #272]
  4572d4:	strb	wzr, [x19, #255]
  4572d8:	mov	x0, x19
  4572dc:	blr	x3
  4572e0:	ldr	x2, [x19, #320]
  4572e4:	mov	x1, #0x1                   	// #1
  4572e8:	mov	x0, #0x0                   	// #0
  4572ec:	add	x2, x2, x1
  4572f0:	str	x2, [x19, #320]
  4572f4:	b	4572ac <_obstack_memory_used@@Base+0x128a8>
  4572f8:	ldp	x21, x22, [sp, #32]
  4572fc:	ldp	x23, x24, [sp, #48]
  457300:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  457304:	ldp	x21, x22, [sp, #32]
  457308:	ldp	x23, x24, [sp, #48]
  45730c:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  457310:	ldrsw	x22, [x0, #24]
  457314:	ldr	x20, [x0, #16]
  457318:	cbz	x22, 4583cc <_obstack_memory_used@@Base+0x139c8>
  45731c:	add	x22, x20, x22
  457320:	ldr	x1, [x19, #256]
  457324:	b	457348 <_obstack_memory_used@@Base+0x12944>
  457328:	mov	x0, x1
  45732c:	add	x1, x1, #0x1
  457330:	str	x1, [x19, #256]
  457334:	add	x20, x20, #0x1
  457338:	strb	w21, [x19, x0]
  45733c:	cmp	x20, x22
  457340:	strb	w21, [x19, #264]
  457344:	b.eq	457390 <_obstack_memory_used@@Base+0x1298c>  // b.none
  457348:	ldrb	w21, [x20]
  45734c:	cmp	x1, #0xff
  457350:	b.ne	457328 <_obstack_memory_used@@Base+0x12924>  // b.any
  457354:	ldp	x3, x2, [x19, #272]
  457358:	strb	wzr, [x19, #255]
  45735c:	mov	x0, x19
  457360:	blr	x3
  457364:	ldr	x2, [x19, #320]
  457368:	mov	x1, #0x1                   	// #1
  45736c:	mov	x0, #0x0                   	// #0
  457370:	add	x2, x2, x1
  457374:	str	x2, [x19, #320]
  457378:	b	457330 <_obstack_memory_used@@Base+0x1292c>
  45737c:	ldr	x1, [x19, #256]
  457380:	b	455598 <_obstack_memory_used@@Base+0x10b94>
  457384:	ldp	x21, x22, [sp, #32]
  457388:	ldp	x23, x24, [sp, #48]
  45738c:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  457390:	ldp	x21, x22, [sp, #32]
  457394:	ldp	x23, x24, [sp, #48]
  457398:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  45739c:	ldp	x21, x22, [sp, #32]
  4573a0:	ldp	x23, x24, [sp, #48]
  4573a4:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  4573a8:	ldp	x21, x22, [sp, #32]
  4573ac:	ldp	x23, x24, [sp, #48]
  4573b0:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  4573b4:	ldp	x21, x22, [sp, #32]
  4573b8:	ldp	x23, x24, [sp, #48]
  4573bc:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  4573c0:	ldr	x1, [x2, #8]
  4573c4:	ldr	w22, [x1, #28]
  4573c8:	cmp	w22, #0x6
  4573cc:	b.hi	457464 <_obstack_memory_used@@Base+0x12a60>  // b.pmore
  4573d0:	cbz	w22, 454bb4 <_obstack_memory_used@@Base+0x101b0>
  4573d4:	ldr	x1, [x20, #16]
  4573d8:	ldr	w1, [x1]
  4573dc:	cbnz	w1, 454bb4 <_obstack_memory_used@@Base+0x101b0>
  4573e0:	cmp	w0, #0x3e
  4573e4:	b.eq	458768 <_obstack_memory_used@@Base+0x13d64>  // b.none
  4573e8:	ldr	x2, [x20, #16]
  4573ec:	mov	w1, w21
  4573f0:	mov	x0, x19
  4573f4:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  4573f8:	cmp	w22, #0x4
  4573fc:	b.eq	458748 <_obstack_memory_used@@Base+0x13d44>  // b.none
  457400:	b.hi	45860c <_obstack_memory_used@@Base+0x13c08>  // b.pmore
  457404:	cmp	w22, #0x2
  457408:	b.eq	4586f8 <_obstack_memory_used@@Base+0x13cf4>  // b.none
  45740c:	cmp	w22, #0x3
  457410:	b.ne	458840 <_obstack_memory_used@@Base+0x13e3c>  // b.any
  457414:	ldr	x1, [x19, #256]
  457418:	cmp	x1, #0xff
  45741c:	b.ne	457444 <_obstack_memory_used@@Base+0x12a40>  // b.any
  457420:	ldp	x3, x2, [x19, #272]
  457424:	strb	wzr, [x19, #255]
  457428:	mov	x0, x19
  45742c:	blr	x3
  457430:	str	xzr, [x19, #256]
  457434:	ldr	x0, [x19, #320]
  457438:	mov	x1, #0x0                   	// #0
  45743c:	add	x0, x0, #0x1
  457440:	str	x0, [x19, #320]
  457444:	add	x0, x1, #0x1
  457448:	str	x0, [x19, #256]
  45744c:	mov	w0, #0x6c                  	// #108
  457450:	strb	w0, [x19, x1]
  457454:	strb	w0, [x19, #264]
  457458:	ldp	x21, x22, [sp, #32]
  45745c:	ldp	x23, x24, [sp, #48]
  457460:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  457464:	cmp	w22, #0x7
  457468:	b.ne	454bb4 <_obstack_memory_used@@Base+0x101b0>  // b.any
  45746c:	ldr	x1, [x20, #16]
  457470:	ldr	w3, [x1]
  457474:	cbnz	w3, 454bb4 <_obstack_memory_used@@Base+0x101b0>
  457478:	ldr	w3, [x1, #16]
  45747c:	cmp	w0, #0x3d
  457480:	ccmp	w3, #0x1, #0x0, eq  // eq = none
  457484:	b.ne	454bb4 <_obstack_memory_used@@Base+0x101b0>  // b.any
  457488:	ldr	x0, [x1, #8]
  45748c:	ldrb	w0, [x0]
  457490:	cmp	w0, #0x30
  457494:	b.eq	45884c <_obstack_memory_used@@Base+0x13e48>  // b.none
  457498:	cmp	w0, #0x31
  45749c:	b.ne	454bb4 <_obstack_memory_used@@Base+0x101b0>  // b.any
  4574a0:	mov	x0, x19
  4574a4:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x285fc>
  4574a8:	mov	x2, #0x4                   	// #4
  4574ac:	add	x1, x1, #0xa08
  4574b0:	bl	4507e8 <_obstack_memory_used@@Base+0xbde4>
  4574b4:	ldp	x21, x22, [sp, #32]
  4574b8:	ldp	x23, x24, [sp, #48]
  4574bc:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  4574c0:	ldp	x3, x2, [x19, #272]
  4574c4:	strb	wzr, [x19, #255]
  4574c8:	mov	x0, x19
  4574cc:	blr	x3
  4574d0:	ldr	x0, [x19, #320]
  4574d4:	mov	x1, #0x0                   	// #0
  4574d8:	add	x0, x0, #0x1
  4574dc:	str	x0, [x19, #320]
  4574e0:	b	456c68 <_obstack_memory_used@@Base+0x12264>
  4574e4:	ldr	x0, [x22, #8]
  4574e8:	ldr	x23, [x0]
  4574ec:	ldrb	w0, [x23]
  4574f0:	subs	w1, w0, #0x61
  4574f4:	b.ne	457508 <_obstack_memory_used@@Base+0x12b04>  // b.any
  4574f8:	ldrb	w1, [x23, #1]
  4574fc:	subs	w1, w1, #0x64
  457500:	b.ne	457508 <_obstack_memory_used@@Base+0x12b04>  // b.any
  457504:	ldrb	w1, [x23, #2]
  457508:	ldr	w2, [x20]
  45750c:	cbnz	w1, 457518 <_obstack_memory_used@@Base+0x12b14>
  457510:	cmp	w2, #0x3
  457514:	b.eq	458510 <_obstack_memory_used@@Base+0x13b0c>  // b.none
  457518:	cmp	w2, #0x39
  45751c:	b.eq	4585b8 <_obstack_memory_used@@Base+0x13bb4>  // b.none
  457520:	cmp	w0, #0x73
  457524:	b.ne	4575f4 <_obstack_memory_used@@Base+0x12bf0>  // b.any
  457528:	ldrb	w1, [x23, #1]
  45752c:	cmp	w1, #0x5a
  457530:	b.ne	457640 <_obstack_memory_used@@Base+0x12c3c>  // b.any
  457534:	ldrb	w3, [x23, #2]
  457538:	cbnz	w3, 457640 <_obstack_memory_used@@Base+0x12c3c>
  45753c:	mov	x1, x20
  457540:	mov	x0, x19
  457544:	bl	451138 <_obstack_memory_used@@Base+0xc734>
  457548:	cbnz	x0, 457564 <_obstack_memory_used@@Base+0x12b60>
  45754c:	b	457570 <_obstack_memory_used@@Base+0x12b6c>
  457550:	ldr	x1, [x0, #8]
  457554:	cbz	x1, 457570 <_obstack_memory_used@@Base+0x12b6c>
  457558:	ldr	x0, [x0, #16]
  45755c:	add	w3, w3, #0x1
  457560:	cbz	x0, 457570 <_obstack_memory_used@@Base+0x12b6c>
  457564:	ldr	w1, [x0]
  457568:	cmp	w1, #0x2f
  45756c:	b.eq	457550 <_obstack_memory_used@@Base+0x12b4c>  // b.none
  457570:	mov	w2, w3
  457574:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x285fc>
  457578:	add	x1, x1, #0x7b0
  45757c:	add	x20, sp, #0x60
  457580:	mov	x0, x20
  457584:	bl	4027a0 <sprintf@plt>
  457588:	mov	x0, x20
  45758c:	bl	402700 <strlen@plt>
  457590:	cbz	x0, 4586c4 <_obstack_memory_used@@Base+0x13cc0>
  457594:	add	x22, x20, x0
  457598:	ldr	x1, [x19, #256]
  45759c:	b	4575c0 <_obstack_memory_used@@Base+0x12bbc>
  4575a0:	mov	x0, x1
  4575a4:	add	x1, x1, #0x1
  4575a8:	str	x1, [x19, #256]
  4575ac:	add	x20, x20, #0x1
  4575b0:	strb	w21, [x19, x0]
  4575b4:	cmp	x20, x22
  4575b8:	strb	w21, [x19, #264]
  4575bc:	b.eq	4584c8 <_obstack_memory_used@@Base+0x13ac4>  // b.none
  4575c0:	ldrb	w21, [x20]
  4575c4:	cmp	x1, #0xff
  4575c8:	b.ne	4575a0 <_obstack_memory_used@@Base+0x12b9c>  // b.any
  4575cc:	ldp	x3, x2, [x19, #272]
  4575d0:	strb	wzr, [x19, #255]
  4575d4:	mov	x0, x19
  4575d8:	blr	x3
  4575dc:	ldr	x2, [x19, #320]
  4575e0:	mov	x1, #0x1                   	// #1
  4575e4:	mov	x0, #0x0                   	// #0
  4575e8:	add	x2, x2, x1
  4575ec:	str	x2, [x19, #320]
  4575f0:	b	4575a8 <_obstack_memory_used@@Base+0x12ba4>
  4575f4:	mov	x0, x19
  4575f8:	mov	x2, x22
  4575fc:	mov	w1, w21
  457600:	bl	459a10 <_obstack_memory_used@@Base+0x1500c>
  457604:	ldrb	w0, [x23]
  457608:	cmp	w0, #0x67
  45760c:	b.ne	4576d0 <_obstack_memory_used@@Base+0x12ccc>  // b.any
  457610:	ldrb	w1, [x23, #1]
  457614:	cmp	w1, #0x73
  457618:	b.ne	4576d0 <_obstack_memory_used@@Base+0x12ccc>  // b.any
  45761c:	ldrb	w1, [x23, #2]
  457620:	cbnz	w1, 4576d0 <_obstack_memory_used@@Base+0x12ccc>
  457624:	mov	w1, w21
  457628:	mov	x2, x20
  45762c:	mov	x0, x19
  457630:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  457634:	ldp	x21, x22, [sp, #32]
  457638:	ldp	x23, x24, [sp, #48]
  45763c:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  457640:	cmp	w0, #0x73
  457644:	b.ne	4575f4 <_obstack_memory_used@@Base+0x12bf0>  // b.any
  457648:	ldrb	w0, [x23, #1]
  45764c:	cmp	w0, #0x50
  457650:	b.ne	4575f4 <_obstack_memory_used@@Base+0x12bf0>  // b.any
  457654:	ldrb	w0, [x23, #2]
  457658:	mov	w3, #0x0                   	// #0
  45765c:	cbz	w0, 457670 <_obstack_memory_used@@Base+0x12c6c>
  457660:	b	4575f4 <_obstack_memory_used@@Base+0x12bf0>
  457664:	add	w3, w3, #0x1
  457668:	ldr	x20, [x20, #16]
  45766c:	cbz	x20, 458134 <_obstack_memory_used@@Base+0x13730>
  457670:	ldr	w0, [x20]
  457674:	cmp	w0, #0x2f
  457678:	b.ne	458134 <_obstack_memory_used@@Base+0x13730>  // b.any
  45767c:	ldr	x0, [x20, #8]
  457680:	cbz	x0, 458134 <_obstack_memory_used@@Base+0x13730>
  457684:	ldr	w1, [x0]
  457688:	cmp	w1, #0x4b
  45768c:	b.ne	457664 <_obstack_memory_used@@Base+0x12c60>  // b.any
  457690:	ldr	x1, [x0, #8]
  457694:	mov	x0, x19
  457698:	bl	451138 <_obstack_memory_used@@Base+0xc734>
  45769c:	mov	w1, #0x0                   	// #0
  4576a0:	cbnz	x0, 4576bc <_obstack_memory_used@@Base+0x12cb8>
  4576a4:	b	4576c8 <_obstack_memory_used@@Base+0x12cc4>
  4576a8:	ldr	x2, [x0, #8]
  4576ac:	cbz	x2, 4576c8 <_obstack_memory_used@@Base+0x12cc4>
  4576b0:	ldr	x0, [x0, #16]
  4576b4:	add	w1, w1, #0x1
  4576b8:	cbz	x0, 4576c8 <_obstack_memory_used@@Base+0x12cc4>
  4576bc:	ldr	w2, [x0]
  4576c0:	cmp	w2, #0x2f
  4576c4:	b.eq	4576a8 <_obstack_memory_used@@Base+0x12ca4>  // b.none
  4576c8:	add	w3, w3, w1
  4576cc:	b	457668 <_obstack_memory_used@@Base+0x12c64>
  4576d0:	cmp	w0, #0x73
  4576d4:	b.ne	456664 <_obstack_memory_used@@Base+0x11c60>  // b.any
  4576d8:	ldrb	w0, [x23, #1]
  4576dc:	cmp	w0, #0x74
  4576e0:	b.ne	456664 <_obstack_memory_used@@Base+0x11c60>  // b.any
  4576e4:	ldrb	w0, [x23, #2]
  4576e8:	cbnz	w0, 456664 <_obstack_memory_used@@Base+0x11c60>
  4576ec:	ldr	x1, [x19, #256]
  4576f0:	cmp	x1, #0xff
  4576f4:	b.ne	457718 <_obstack_memory_used@@Base+0x12d14>  // b.any
  4576f8:	ldp	x3, x2, [x19, #272]
  4576fc:	strb	wzr, [x19, #255]
  457700:	mov	x0, x19
  457704:	blr	x3
  457708:	ldr	x0, [x19, #320]
  45770c:	mov	x1, #0x0                   	// #0
  457710:	add	x0, x0, #0x1
  457714:	str	x0, [x19, #320]
  457718:	add	x0, x1, #0x1
  45771c:	str	x0, [x19, #256]
  457720:	mov	w0, #0x28                  	// #40
  457724:	strb	w0, [x19, x1]
  457728:	strb	w0, [x19, #264]
  45772c:	mov	w1, w21
  457730:	mov	x2, x20
  457734:	mov	x0, x19
  457738:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  45773c:	ldr	x1, [x19, #256]
  457740:	cmp	x1, #0xff
  457744:	b.ne	457768 <_obstack_memory_used@@Base+0x12d64>  // b.any
  457748:	ldp	x3, x2, [x19, #272]
  45774c:	strb	wzr, [x19, #255]
  457750:	mov	x0, x19
  457754:	blr	x3
  457758:	ldr	x0, [x19, #320]
  45775c:	mov	x1, #0x0                   	// #0
  457760:	add	x0, x0, #0x1
  457764:	str	x0, [x19, #320]
  457768:	add	x0, x1, #0x1
  45776c:	str	x0, [x19, #256]
  457770:	mov	w0, #0x29                  	// #41
  457774:	strb	w0, [x19, x1]
  457778:	strb	w0, [x19, #264]
  45777c:	ldp	x21, x22, [sp, #32]
  457780:	ldp	x23, x24, [sp, #48]
  457784:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  457788:	ldr	x2, [x2, #8]
  45778c:	mov	x0, x19
  457790:	mov	w1, w21
  457794:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  457798:	ldr	x0, [x19, #368]
  45779c:	cbz	x0, 4577a8 <_obstack_memory_used@@Base+0x12da4>
  4577a0:	ldr	x0, [sp, #96]
  4577a4:	str	x0, [x19, #288]
  4577a8:	ldr	x1, [x19, #256]
  4577ac:	ldrb	w2, [x19, #264]
  4577b0:	mov	x0, x1
  4577b4:	cmp	w2, #0x3c
  4577b8:	b.eq	458210 <_obstack_memory_used@@Base+0x1380c>  // b.none
  4577bc:	add	x1, x0, #0x1
  4577c0:	cmp	x0, #0xff
  4577c4:	b.ne	4577f0 <_obstack_memory_used@@Base+0x12dec>  // b.any
  4577c8:	ldp	x3, x2, [x19, #272]
  4577cc:	strb	wzr, [x19, #255]
  4577d0:	mov	x1, x0
  4577d4:	mov	x0, x19
  4577d8:	blr	x3
  4577dc:	ldr	x2, [x19, #320]
  4577e0:	mov	x1, #0x1                   	// #1
  4577e4:	mov	x0, #0x0                   	// #0
  4577e8:	add	x2, x2, x1
  4577ec:	str	x2, [x19, #320]
  4577f0:	str	x1, [x19, #256]
  4577f4:	mov	w2, #0x3c                  	// #60
  4577f8:	strb	w2, [x19, x0]
  4577fc:	mov	w1, w21
  457800:	strb	w2, [x19, #264]
  457804:	mov	x0, x19
  457808:	ldr	x2, [x20, #8]
  45780c:	ldr	x2, [x2, #16]
  457810:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  457814:	ldrb	w0, [x19, #264]
  457818:	cmp	w0, #0x3e
  45781c:	b.eq	458254 <_obstack_memory_used@@Base+0x13850>  // b.none
  457820:	ldr	x0, [x19, #256]
  457824:	add	x1, x0, #0x1
  457828:	cmp	x0, #0xff
  45782c:	b.ne	457858 <_obstack_memory_used@@Base+0x12e54>  // b.any
  457830:	ldp	x3, x2, [x19, #272]
  457834:	strb	wzr, [x19, #255]
  457838:	mov	x1, x0
  45783c:	mov	x0, x19
  457840:	blr	x3
  457844:	ldr	x2, [x19, #320]
  457848:	mov	x1, #0x1                   	// #1
  45784c:	mov	x0, #0x0                   	// #0
  457850:	add	x2, x2, x1
  457854:	str	x2, [x19, #320]
  457858:	str	x1, [x19, #256]
  45785c:	mov	w1, #0x3e                  	// #62
  457860:	strb	w1, [x19, x0]
  457864:	strb	w1, [x19, #264]
  457868:	ldp	x21, x22, [sp, #32]
  45786c:	ldp	x23, x24, [sp, #48]
  457870:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  457874:	mov	x2, x20
  457878:	mov	w1, w21
  45787c:	mov	x0, x19
  457880:	bl	458908 <_obstack_memory_used@@Base+0x13f04>
  457884:	b	454d68 <_obstack_memory_used@@Base+0x10364>
  457888:	adrp	x24, 46d000 <_obstack_memory_used@@Base+0x285fc>
  45788c:	add	x24, x24, #0x998
  457890:	adrp	x22, 46d000 <_obstack_memory_used@@Base+0x285fc>
  457894:	add	x24, x24, #0x5
  457898:	add	x22, x22, #0x999
  45789c:	mov	w23, #0x5f                  	// #95
  4578a0:	ldr	x1, [x19, #256]
  4578a4:	b	4578c8 <_obstack_memory_used@@Base+0x12ec4>
  4578a8:	mov	x0, x1
  4578ac:	add	x1, x1, #0x1
  4578b0:	str	x1, [x19, #256]
  4578b4:	cmp	x24, x22
  4578b8:	strb	w23, [x19, x0]
  4578bc:	strb	w23, [x19, #264]
  4578c0:	b.eq	455528 <_obstack_memory_used@@Base+0x10b24>  // b.none
  4578c4:	ldrb	w23, [x22], #1
  4578c8:	cmp	x1, #0xff
  4578cc:	b.ne	4578a8 <_obstack_memory_used@@Base+0x12ea4>  // b.any
  4578d0:	ldp	x3, x2, [x19, #272]
  4578d4:	strb	wzr, [x19, #255]
  4578d8:	mov	x0, x19
  4578dc:	blr	x3
  4578e0:	ldr	x2, [x19, #320]
  4578e4:	mov	x1, #0x1                   	// #1
  4578e8:	mov	x0, #0x0                   	// #0
  4578ec:	add	x2, x2, x1
  4578f0:	str	x2, [x19, #320]
  4578f4:	b	4578b0 <_obstack_memory_used@@Base+0x12eac>
  4578f8:	mov	x23, #0x0                   	// #0
  4578fc:	mov	w22, #0x3a                  	// #58
  457900:	ldr	x1, [x19, #256]
  457904:	b	457924 <_obstack_memory_used@@Base+0x12f20>
  457908:	mov	x0, x1
  45790c:	add	x1, x1, #0x1
  457910:	str	x1, [x19, #256]
  457914:	strb	w22, [x19, x0]
  457918:	strb	w22, [x19, #264]
  45791c:	cbnz	x23, 454d0c <_obstack_memory_used@@Base+0x10308>
  457920:	mov	x23, #0x1                   	// #1
  457924:	cmp	x1, #0xff
  457928:	b.ne	457908 <_obstack_memory_used@@Base+0x12f04>  // b.any
  45792c:	ldp	x3, x2, [x19, #272]
  457930:	strb	wzr, [x19, #255]
  457934:	mov	x0, x19
  457938:	blr	x3
  45793c:	ldr	x2, [x19, #320]
  457940:	mov	x1, #0x1                   	// #1
  457944:	mov	x0, #0x0                   	// #0
  457948:	add	x2, x2, x1
  45794c:	str	x2, [x19, #320]
  457950:	b	457910 <_obstack_memory_used@@Base+0x12f0c>
  457954:	ldr	x1, [x19, #256]
  457958:	cmp	x1, #0xff
  45795c:	b.ne	457980 <_obstack_memory_used@@Base+0x12f7c>  // b.any
  457960:	ldp	x3, x2, [x19, #272]
  457964:	strb	wzr, [x19, #255]
  457968:	mov	x0, x19
  45796c:	blr	x3
  457970:	ldr	x0, [x19, #320]
  457974:	mov	x1, #0x0                   	// #0
  457978:	add	x0, x0, #0x1
  45797c:	str	x0, [x19, #320]
  457980:	add	x0, x1, #0x1
  457984:	str	x0, [x19, #256]
  457988:	mov	w0, #0x5b                  	// #91
  45798c:	strb	w0, [x19, x1]
  457990:	strb	w0, [x19, #264]
  457994:	mov	w1, w21
  457998:	mov	x0, x19
  45799c:	ldr	x2, [x20, #16]
  4579a0:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  4579a4:	ldr	x1, [x19, #256]
  4579a8:	cmp	x1, #0xff
  4579ac:	b.ne	4579d0 <_obstack_memory_used@@Base+0x12fcc>  // b.any
  4579b0:	ldp	x3, x2, [x19, #272]
  4579b4:	strb	wzr, [x19, #255]
  4579b8:	mov	x0, x19
  4579bc:	blr	x3
  4579c0:	ldr	x0, [x19, #320]
  4579c4:	mov	x1, #0x0                   	// #0
  4579c8:	add	x0, x0, #0x1
  4579cc:	str	x0, [x19, #320]
  4579d0:	add	x0, x1, #0x1
  4579d4:	str	x0, [x19, #256]
  4579d8:	mov	w0, #0x5d                  	// #93
  4579dc:	strb	w0, [x19, x1]
  4579e0:	strb	w0, [x19, #264]
  4579e4:	ldp	x21, x22, [sp, #32]
  4579e8:	ldp	x23, x24, [sp, #48]
  4579ec:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  4579f0:	ldr	x0, [x19, #256]
  4579f4:	cmp	x0, #0xff
  4579f8:	b.ne	457a20 <_obstack_memory_used@@Base+0x1301c>  // b.any
  4579fc:	ldp	x3, x2, [x19, #272]
  457a00:	strb	wzr, [x19, #255]
  457a04:	mov	x1, x0
  457a08:	mov	x0, x19
  457a0c:	blr	x3
  457a10:	ldr	x1, [x19, #320]
  457a14:	mov	x0, #0x0                   	// #0
  457a18:	add	x1, x1, #0x1
  457a1c:	str	x1, [x19, #320]
  457a20:	add	x1, x0, #0x1
  457a24:	str	x1, [x19, #256]
  457a28:	mov	w2, #0x20                  	// #32
  457a2c:	strb	w2, [x19, x0]
  457a30:	strb	w2, [x19, #264]
  457a34:	b	455f58 <_obstack_memory_used@@Base+0x11554>
  457a38:	ldr	x0, [x19, #256]
  457a3c:	cmp	x0, #0xff
  457a40:	b.ne	457a68 <_obstack_memory_used@@Base+0x13064>  // b.any
  457a44:	ldp	x3, x2, [x19, #272]
  457a48:	strb	wzr, [x19, #255]
  457a4c:	mov	x1, x0
  457a50:	mov	x0, x19
  457a54:	blr	x3
  457a58:	ldr	x1, [x19, #320]
  457a5c:	mov	x0, #0x0                   	// #0
  457a60:	add	x1, x1, #0x1
  457a64:	str	x1, [x19, #320]
  457a68:	add	x1, x0, #0x1
  457a6c:	str	x1, [x19, #256]
  457a70:	mov	w2, #0x20                  	// #32
  457a74:	strb	w2, [x19, x0]
  457a78:	strb	w2, [x19, #264]
  457a7c:	b	455ef8 <_obstack_memory_used@@Base+0x114f4>
  457a80:	add	x2, x20, #0x10
  457a84:	mov	w1, w22
  457a88:	mov	x0, x19
  457a8c:	bl	459108 <_obstack_memory_used@@Base+0x14704>
  457a90:	ldr	x2, [x20, #8]
  457a94:	cbz	x2, 4582c0 <_obstack_memory_used@@Base+0x138bc>
  457a98:	mov	w1, w22
  457a9c:	mov	x0, x19
  457aa0:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  457aa4:	ldp	x21, x22, [sp, #32]
  457aa8:	ldp	x23, x24, [sp, #48]
  457aac:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  457ab0:	ldp	x3, x2, [x19, #272]
  457ab4:	strb	wzr, [x19, #255]
  457ab8:	mov	x0, x19
  457abc:	blr	x3
  457ac0:	ldr	x0, [x19, #320]
  457ac4:	mov	w1, #0x29                  	// #41
  457ac8:	strb	w1, [x19]
  457acc:	strb	w1, [x19, #264]
  457ad0:	mov	x1, #0x1                   	// #1
  457ad4:	add	x0, x0, x1
  457ad8:	str	x1, [x19, #256]
  457adc:	str	x0, [x19, #320]
  457ae0:	ldr	w0, [x20]
  457ae4:	cmp	w0, #0x3e
  457ae8:	b.ne	454c34 <_obstack_memory_used@@Base+0x10230>  // b.any
  457aec:	ldr	x1, [x19, #256]
  457af0:	mov	w0, #0x2d                  	// #45
  457af4:	add	x2, x1, #0x1
  457af8:	str	x2, [x19, #256]
  457afc:	strb	w0, [x19, x1]
  457b00:	strb	w0, [x19, #264]
  457b04:	b	454c34 <_obstack_memory_used@@Base+0x10230>
  457b08:	ldp	x21, x22, [sp, #32]
  457b0c:	ldp	x23, x24, [sp, #48]
  457b10:	ldp	x25, x26, [sp, #64]
  457b14:	str	x4, [x19, #296]
  457b18:	str	w1, [x19, #304]
  457b1c:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  457b20:	ldp	x21, x22, [sp, #32]
  457b24:	ldp	x23, x24, [sp, #48]
  457b28:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  457b2c:	ldp	x21, x22, [sp, #32]
  457b30:	ldp	x23, x24, [sp, #48]
  457b34:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  457b38:	mov	w22, #0x0                   	// #0
  457b3c:	b	454c98 <_obstack_memory_used@@Base+0x10294>
  457b40:	ldr	x0, [x19, #256]
  457b44:	cmp	x0, x22
  457b48:	b.eq	4582fc <_obstack_memory_used@@Base+0x138f8>  // b.none
  457b4c:	ldp	x21, x22, [sp, #32]
  457b50:	ldp	x23, x24, [sp, #48]
  457b54:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  457b58:	ldr	x2, [x20, #8]
  457b5c:	mov	w1, w21
  457b60:	mov	x0, x19
  457b64:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  457b68:	ldp	x21, x22, [sp, #32]
  457b6c:	ldp	x23, x24, [sp, #48]
  457b70:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  457b74:	cmp	x3, #0xff
  457b78:	b.ne	457aec <_obstack_memory_used@@Base+0x130e8>  // b.any
  457b7c:	ldp	x4, x2, [x19, #272]
  457b80:	strb	wzr, [x19, #255]
  457b84:	mov	x0, x19
  457b88:	mov	x1, x3
  457b8c:	blr	x4
  457b90:	str	xzr, [x19, #256]
  457b94:	ldr	x0, [x19, #320]
  457b98:	add	x0, x0, #0x1
  457b9c:	str	x0, [x19, #320]
  457ba0:	b	457aec <_obstack_memory_used@@Base+0x130e8>
  457ba4:	ldp	x21, x22, [sp, #32]
  457ba8:	ldp	x23, x24, [sp, #48]
  457bac:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  457bb0:	adrp	x24, 46d000 <_obstack_memory_used@@Base+0x285fc>
  457bb4:	add	x24, x24, #0x7a0
  457bb8:	adrp	x22, 46d000 <_obstack_memory_used@@Base+0x285fc>
  457bbc:	add	x24, x24, #0xd
  457bc0:	add	x22, x22, #0x7a1
  457bc4:	mov	w20, #0x7b                  	// #123
  457bc8:	ldr	x1, [x19, #256]
  457bcc:	b	457bf0 <_obstack_memory_used@@Base+0x131ec>
  457bd0:	mov	x0, x1
  457bd4:	add	x1, x1, #0x1
  457bd8:	str	x1, [x19, #256]
  457bdc:	cmp	x24, x22
  457be0:	strb	w20, [x19, x0]
  457be4:	strb	w20, [x19, #264]
  457be8:	b.eq	457c20 <_obstack_memory_used@@Base+0x1321c>  // b.none
  457bec:	ldrb	w20, [x22], #1
  457bf0:	cmp	x1, #0xff
  457bf4:	b.ne	457bd0 <_obstack_memory_used@@Base+0x131cc>  // b.any
  457bf8:	ldp	x3, x2, [x19, #272]
  457bfc:	strb	wzr, [x19, #255]
  457c00:	mov	x0, x19
  457c04:	blr	x3
  457c08:	ldr	x2, [x19, #320]
  457c0c:	mov	x1, #0x1                   	// #1
  457c10:	mov	x0, #0x0                   	// #0
  457c14:	add	x2, x2, x1
  457c18:	str	x2, [x19, #320]
  457c1c:	b	457bd8 <_obstack_memory_used@@Base+0x131d4>
  457c20:	ldr	w2, [x23, #16]
  457c24:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x285fc>
  457c28:	add	x1, x1, #0x7b0
  457c2c:	add	x20, sp, #0x60
  457c30:	add	w2, w2, #0x1
  457c34:	mov	x0, x20
  457c38:	bl	4027a0 <sprintf@plt>
  457c3c:	mov	x0, x20
  457c40:	bl	402700 <strlen@plt>
  457c44:	ldr	x1, [x19, #256]
  457c48:	cbz	x0, 457ca8 <_obstack_memory_used@@Base+0x132a4>
  457c4c:	add	x24, x20, x0
  457c50:	b	457c74 <_obstack_memory_used@@Base+0x13270>
  457c54:	mov	x0, x1
  457c58:	add	x1, x1, #0x1
  457c5c:	str	x1, [x19, #256]
  457c60:	add	x20, x20, #0x1
  457c64:	strb	w22, [x19, x0]
  457c68:	cmp	x24, x20
  457c6c:	strb	w22, [x19, #264]
  457c70:	b.eq	457ca8 <_obstack_memory_used@@Base+0x132a4>  // b.none
  457c74:	ldrb	w22, [x20]
  457c78:	cmp	x1, #0xff
  457c7c:	b.ne	457c54 <_obstack_memory_used@@Base+0x13250>  // b.any
  457c80:	ldp	x3, x2, [x19, #272]
  457c84:	strb	wzr, [x19, #255]
  457c88:	mov	x0, x19
  457c8c:	blr	x3
  457c90:	ldr	x2, [x19, #320]
  457c94:	mov	x1, #0x1                   	// #1
  457c98:	mov	x0, #0x0                   	// #0
  457c9c:	add	x2, x2, x1
  457ca0:	str	x2, [x19, #320]
  457ca4:	b	457c5c <_obstack_memory_used@@Base+0x13258>
  457ca8:	adrp	x20, 46d000 <_obstack_memory_used@@Base+0x285fc>
  457cac:	add	x20, x20, #0x7b8
  457cb0:	add	x24, x20, #0x3
  457cb4:	mov	w22, #0x7d                  	// #125
  457cb8:	b	457ce0 <_obstack_memory_used@@Base+0x132dc>
  457cbc:	mov	x0, x1
  457cc0:	add	x1, x1, #0x1
  457cc4:	str	x1, [x19, #256]
  457cc8:	add	x20, x20, #0x1
  457ccc:	strb	w22, [x19, x0]
  457cd0:	cmp	x24, x20
  457cd4:	strb	w22, [x19, #264]
  457cd8:	b.eq	457d10 <_obstack_memory_used@@Base+0x1330c>  // b.none
  457cdc:	ldrb	w22, [x20]
  457ce0:	cmp	x1, #0xff
  457ce4:	b.ne	457cbc <_obstack_memory_used@@Base+0x132b8>  // b.any
  457ce8:	ldp	x3, x2, [x19, #272]
  457cec:	strb	wzr, [x19, #255]
  457cf0:	mov	x0, x19
  457cf4:	blr	x3
  457cf8:	ldr	x2, [x19, #320]
  457cfc:	mov	x1, #0x1                   	// #1
  457d00:	mov	x0, #0x0                   	// #0
  457d04:	add	x2, x2, x1
  457d08:	str	x2, [x19, #320]
  457d0c:	b	457cc4 <_obstack_memory_used@@Base+0x132c0>
  457d10:	ldr	x23, [x23, #8]
  457d14:	b	454d1c <_obstack_memory_used@@Base+0x10318>
  457d18:	ldr	x25, [x25, #16]
  457d1c:	ldr	w5, [x25]
  457d20:	cmp	w5, #0x47
  457d24:	b.eq	4583bc <_obstack_memory_used@@Base+0x139b8>  // b.none
  457d28:	ubfiz	x3, x24, #5, #32
  457d2c:	sub	w0, w5, #0x1c
  457d30:	mov	x1, #0x1f                  	// #31
  457d34:	add	x3, x23, x3
  457d38:	cmp	w0, #0x34
  457d3c:	mov	x2, #0x1                   	// #1
  457d40:	movk	x1, #0x1a, lsl #48
  457d44:	b.hi	455de4 <_obstack_memory_used@@Base+0x113e0>  // b.pmore
  457d48:	lsl	x0, x2, x0
  457d4c:	tst	x0, x1
  457d50:	b.eq	455de4 <_obstack_memory_used@@Base+0x113e0>  // b.none
  457d54:	cmp	w24, #0x4
  457d58:	b.eq	457e38 <_obstack_memory_used@@Base+0x13434>  // b.none
  457d5c:	ldp	x8, x9, [x3, #-32]
  457d60:	stur	x25, [x3, #-24]
  457d64:	ldp	x4, x5, [x3, #-16]
  457d68:	stur	wzr, [x3, #-16]
  457d6c:	stp	x8, x9, [x3]
  457d70:	sub	x0, x3, #0x20
  457d74:	add	w24, w24, #0x1
  457d78:	ldr	x25, [x25, #8]
  457d7c:	stp	x4, x5, [x3, #16]
  457d80:	ldr	w5, [x25]
  457d84:	stp	x6, x0, [x3, #-8]
  457d88:	sub	w0, w5, #0x1c
  457d8c:	str	x3, [x19, #296]
  457d90:	cmp	w0, #0x34
  457d94:	add	x3, x3, #0x20
  457d98:	b.ls	457d48 <_obstack_memory_used@@Base+0x13344>  // b.plast
  457d9c:	b	455de4 <_obstack_memory_used@@Base+0x113e0>
  457da0:	mov	w0, #0x1                   	// #1
  457da4:	ldp	x21, x22, [sp, #32]
  457da8:	ldp	x23, x24, [sp, #48]
  457dac:	str	w0, [x19, #304]
  457db0:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  457db4:	ldr	x4, [x19, #288]
  457db8:	add	x0, sp, #0x60
  457dbc:	str	x0, [x19, #296]
  457dc0:	mov	w1, w22
  457dc4:	mov	x0, x19
  457dc8:	stp	x3, x20, [sp, #96]
  457dcc:	str	wzr, [sp, #112]
  457dd0:	str	x4, [sp, #120]
  457dd4:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  457dd8:	ldr	w0, [sp, #112]
  457ddc:	ldr	x1, [sp, #96]
  457de0:	str	x1, [x19, #296]
  457de4:	cbnz	w0, 458504 <_obstack_memory_used@@Base+0x13b00>
  457de8:	ldr	x1, [x19, #256]
  457dec:	cmp	x1, #0xff
  457df0:	b.ne	457e18 <_obstack_memory_used@@Base+0x13414>  // b.any
  457df4:	ldp	x3, x2, [x19, #272]
  457df8:	strb	wzr, [x19, #255]
  457dfc:	mov	x0, x19
  457e00:	blr	x3
  457e04:	str	xzr, [x19, #256]
  457e08:	ldr	x0, [x19, #320]
  457e0c:	mov	x1, #0x0                   	// #0
  457e10:	add	x0, x0, #0x1
  457e14:	str	x0, [x19, #320]
  457e18:	add	x0, x1, #0x1
  457e1c:	str	x0, [x19, #256]
  457e20:	mov	w0, #0x20                  	// #32
  457e24:	strb	w0, [x19, x1]
  457e28:	strb	w0, [x19, #264]
  457e2c:	ldr	x3, [x19, #296]
  457e30:	b	4552bc <_obstack_memory_used@@Base+0x108b8>
  457e34:	str	x3, [x19, #296]
  457e38:	mov	w0, #0x1                   	// #1
  457e3c:	ldp	x21, x22, [sp, #32]
  457e40:	ldp	x23, x24, [sp, #48]
  457e44:	ldp	x25, x26, [sp, #64]
  457e48:	str	w0, [x19, #304]
  457e4c:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  457e50:	ldrb	w0, [x0]
  457e54:	sub	w1, w0, #0x63
  457e58:	sub	w0, w0, #0x72
  457e5c:	and	w1, w1, #0xff
  457e60:	and	w0, w0, #0xff
  457e64:	cmp	w1, #0x1
  457e68:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  457e6c:	b.hi	45611c <_obstack_memory_used@@Base+0x11718>  // b.pmore
  457e70:	mov	w1, w21
  457e74:	mov	x0, x19
  457e78:	bl	459a10 <_obstack_memory_used@@Base+0x1500c>
  457e7c:	ldr	x1, [x19, #256]
  457e80:	cmp	x1, #0xff
  457e84:	b.ne	457eac <_obstack_memory_used@@Base+0x134a8>  // b.any
  457e88:	ldp	x3, x2, [x19, #272]
  457e8c:	strb	wzr, [x19, #255]
  457e90:	mov	x0, x19
  457e94:	blr	x3
  457e98:	str	xzr, [x19, #256]
  457e9c:	ldr	x0, [x19, #320]
  457ea0:	mov	x1, #0x0                   	// #0
  457ea4:	add	x0, x0, #0x1
  457ea8:	str	x0, [x19, #320]
  457eac:	add	x0, x1, #0x1
  457eb0:	str	x0, [x19, #256]
  457eb4:	mov	w0, #0x3c                  	// #60
  457eb8:	strb	w0, [x19, x1]
  457ebc:	strb	w0, [x19, #264]
  457ec0:	mov	w1, w21
  457ec4:	mov	x0, x19
  457ec8:	mov	w22, #0x3e                  	// #62
  457ecc:	ldr	x2, [x20, #16]
  457ed0:	mov	x23, #0x0                   	// #0
  457ed4:	ldr	x2, [x2, #8]
  457ed8:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  457edc:	ldr	x1, [x19, #256]
  457ee0:	b	457f04 <_obstack_memory_used@@Base+0x13500>
  457ee4:	mov	x0, x1
  457ee8:	add	x1, x1, #0x1
  457eec:	str	x1, [x19, #256]
  457ef0:	strb	w22, [x19, x0]
  457ef4:	strb	w22, [x19, #264]
  457ef8:	mov	w22, #0x28                  	// #40
  457efc:	cbnz	x23, 45808c <_obstack_memory_used@@Base+0x13688>
  457f00:	mov	x23, #0x1                   	// #1
  457f04:	cmp	x1, #0xff
  457f08:	b.ne	457ee4 <_obstack_memory_used@@Base+0x134e0>  // b.any
  457f0c:	ldp	x3, x2, [x19, #272]
  457f10:	strb	wzr, [x19, #255]
  457f14:	mov	x0, x19
  457f18:	blr	x3
  457f1c:	ldr	x2, [x19, #320]
  457f20:	mov	x1, #0x1                   	// #1
  457f24:	mov	x0, #0x0                   	// #0
  457f28:	add	x2, x2, x1
  457f2c:	str	x2, [x19, #320]
  457f30:	b	457eec <_obstack_memory_used@@Base+0x134e8>
  457f34:	ldr	w4, [x19, #344]
  457f38:	ldr	x5, [x19, #336]
  457f3c:	cmp	w4, #0x0
  457f40:	b.le	458534 <_obstack_memory_used@@Base+0x13b30>
  457f44:	sub	w3, w4, #0x1
  457f48:	add	x1, x5, #0x10
  457f4c:	mov	x2, x5
  457f50:	add	x3, x1, w3, uxtw #4
  457f54:	b	457f64 <_obstack_memory_used@@Base+0x13560>
  457f58:	add	x2, x2, #0x10
  457f5c:	cmp	x3, x2
  457f60:	b.eq	458534 <_obstack_memory_used@@Base+0x13b30>  // b.none
  457f64:	ldr	x1, [x2]
  457f68:	cmp	x0, x1
  457f6c:	b.ne	457f58 <_obstack_memory_used@@Base+0x13554>  // b.any
  457f70:	ldr	x4, [x19, #328]
  457f74:	mov	x1, x4
  457f78:	cbnz	x4, 457f94 <_obstack_memory_used@@Base+0x13590>
  457f7c:	b	458398 <_obstack_memory_used@@Base+0x13994>
  457f80:	cmp	x3, x20
  457f84:	ccmp	x4, x1, #0x4, eq  // eq = none
  457f88:	b.ne	457fa0 <_obstack_memory_used@@Base+0x1359c>  // b.any
  457f8c:	ldr	x1, [x1, #8]
  457f90:	cbz	x1, 458398 <_obstack_memory_used@@Base+0x13994>
  457f94:	ldr	x3, [x1]
  457f98:	cmp	x3, x0
  457f9c:	b.ne	457f80 <_obstack_memory_used@@Base+0x1357c>  // b.any
  457fa0:	add	x1, x0, #0x8
  457fa4:	mov	x0, x19
  457fa8:	bl	451108 <_obstack_memory_used@@Base+0xc704>
  457fac:	cbz	x0, 454af0 <_obstack_memory_used@@Base+0x100ec>
  457fb0:	mov	w22, #0x0                   	// #0
  457fb4:	ldr	w1, [x0]
  457fb8:	cmp	w1, #0x2f
  457fbc:	b.ne	454c74 <_obstack_memory_used@@Base+0x10270>  // b.any
  457fc0:	ldr	w1, [x19, #316]
  457fc4:	tbnz	w1, #31, 4586d0 <_obstack_memory_used@@Base+0x13ccc>
  457fc8:	bl	4510c8 <_obstack_memory_used@@Base+0xc6c4>
  457fcc:	cbz	x0, 4586e4 <_obstack_memory_used@@Base+0x13ce0>
  457fd0:	ldr	w1, [x0]
  457fd4:	b	454c74 <_obstack_memory_used@@Base+0x10270>
  457fd8:	ldr	x2, [x20, #8]
  457fdc:	add	x3, x20, #0x10
  457fe0:	mov	w1, w21
  457fe4:	mov	x0, x19
  457fe8:	bl	459bc0 <_obstack_memory_used@@Base+0x151bc>
  457fec:	cbnz	w0, 4584bc <_obstack_memory_used@@Base+0x13ab8>
  457ff0:	ldp	x24, x3, [x20, #8]
  457ff4:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x285fc>
  457ff8:	add	x1, x1, #0x9d0
  457ffc:	ldr	x0, [x24, #8]
  458000:	ldp	x22, x2, [x3, #8]
  458004:	ldr	x0, [x0]
  458008:	ldp	x23, x20, [x2, #8]
  45800c:	bl	402ad0 <strcmp@plt>
  458010:	cbnz	w0, 45841c <_obstack_memory_used@@Base+0x13a18>
  458014:	mov	x2, x22
  458018:	mov	w1, w21
  45801c:	mov	x0, x19
  458020:	bl	459ac8 <_obstack_memory_used@@Base+0x150c4>
  458024:	mov	x2, x24
  458028:	mov	w1, w21
  45802c:	mov	x0, x19
  458030:	bl	459a10 <_obstack_memory_used@@Base+0x1500c>
  458034:	mov	x2, x23
  458038:	mov	w1, w21
  45803c:	mov	x0, x19
  458040:	bl	459ac8 <_obstack_memory_used@@Base+0x150c4>
  458044:	mov	x0, x19
  458048:	mov	x2, #0x3                   	// #3
  45804c:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x285fc>
  458050:	add	x1, x1, #0x9d8
  458054:	bl	4507e8 <_obstack_memory_used@@Base+0xbde4>
  458058:	mov	w1, w21
  45805c:	mov	x2, x20
  458060:	mov	x0, x19
  458064:	bl	459ac8 <_obstack_memory_used@@Base+0x150c4>
  458068:	ldp	x21, x22, [sp, #32]
  45806c:	ldp	x23, x24, [sp, #48]
  458070:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  458074:	sub	w1, w0, #0x61
  458078:	and	w1, w1, #0xff
  45807c:	cmp	w1, #0x5
  458080:	b.hi	458640 <_obstack_memory_used@@Base+0x13c3c>  // b.pmore
  458084:	sub	w0, w0, #0x57
  458088:	b	45703c <_obstack_memory_used@@Base+0x12638>
  45808c:	ldr	x2, [x20, #16]
  458090:	mov	w1, w21
  458094:	mov	x0, x19
  458098:	ldr	x2, [x2, #16]
  45809c:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  4580a0:	ldr	x1, [x19, #256]
  4580a4:	cmp	x1, #0xff
  4580a8:	b.ne	4580d0 <_obstack_memory_used@@Base+0x136cc>  // b.any
  4580ac:	ldp	x3, x2, [x19, #272]
  4580b0:	strb	wzr, [x19, #255]
  4580b4:	mov	x0, x19
  4580b8:	blr	x3
  4580bc:	str	xzr, [x19, #256]
  4580c0:	ldr	x0, [x19, #320]
  4580c4:	mov	x1, #0x0                   	// #0
  4580c8:	add	x0, x0, #0x1
  4580cc:	str	x0, [x19, #320]
  4580d0:	add	x0, x1, #0x1
  4580d4:	str	x0, [x19, #256]
  4580d8:	mov	w0, #0x29                  	// #41
  4580dc:	strb	w0, [x19, x1]
  4580e0:	strb	w0, [x19, #264]
  4580e4:	ldp	x21, x22, [sp, #32]
  4580e8:	ldp	x23, x24, [sp, #48]
  4580ec:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  4580f0:	ldr	w1, [x19, #316]
  4580f4:	tbnz	w1, #31, 45709c <_obstack_memory_used@@Base+0x12698>
  4580f8:	bl	4510c8 <_obstack_memory_used@@Base+0xc6c4>
  4580fc:	mov	x2, x0
  458100:	cbnz	x0, 45709c <_obstack_memory_used@@Base+0x12698>
  458104:	b	454af0 <_obstack_memory_used@@Base+0x100ec>
  458108:	cmp	w1, #0x63
  45810c:	b.eq	4584d4 <_obstack_memory_used@@Base+0x13ad0>  // b.none
  458110:	mov	w1, w21
  458114:	mov	x0, x19
  458118:	bl	459a10 <_obstack_memory_used@@Base+0x1500c>
  45811c:	ldr	x2, [x20, #16]
  458120:	mov	w1, w21
  458124:	mov	x0, x19
  458128:	ldr	x2, [x2, #16]
  45812c:	bl	459ac8 <_obstack_memory_used@@Base+0x150c4>
  458130:	b	456250 <_obstack_memory_used@@Base+0x1184c>
  458134:	mov	w2, w3
  458138:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x285fc>
  45813c:	add	x1, x1, #0x7b0
  458140:	add	x20, sp, #0x60
  458144:	mov	x0, x20
  458148:	bl	4027a0 <sprintf@plt>
  45814c:	mov	x0, x20
  458150:	bl	402700 <strlen@plt>
  458154:	cbz	x0, 4587b0 <_obstack_memory_used@@Base+0x13dac>
  458158:	add	x22, x20, x0
  45815c:	ldr	x1, [x19, #256]
  458160:	b	458184 <_obstack_memory_used@@Base+0x13780>
  458164:	mov	x0, x1
  458168:	add	x1, x1, #0x1
  45816c:	str	x1, [x19, #256]
  458170:	add	x20, x20, #0x1
  458174:	strb	w21, [x19, x0]
  458178:	cmp	x22, x20
  45817c:	strb	w21, [x19, #264]
  458180:	b.eq	4581c4 <_obstack_memory_used@@Base+0x137c0>  // b.none
  458184:	ldrb	w21, [x20]
  458188:	cmp	x1, #0xff
  45818c:	b.ne	458164 <_obstack_memory_used@@Base+0x13760>  // b.any
  458190:	ldp	x3, x2, [x19, #272]
  458194:	strb	wzr, [x19, #255]
  458198:	mov	x0, x19
  45819c:	blr	x3
  4581a0:	ldr	x2, [x19, #320]
  4581a4:	mov	x1, #0x1                   	// #1
  4581a8:	mov	x0, #0x0                   	// #0
  4581ac:	add	x2, x2, x1
  4581b0:	str	x2, [x19, #320]
  4581b4:	b	45816c <_obstack_memory_used@@Base+0x13768>
  4581b8:	ldp	x21, x22, [sp, #32]
  4581bc:	ldp	x23, x24, [sp, #48]
  4581c0:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  4581c4:	ldp	x21, x22, [sp, #32]
  4581c8:	ldp	x23, x24, [sp, #48]
  4581cc:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  4581d0:	ldr	x0, [x22, #8]
  4581d4:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x285fc>
  4581d8:	mov	x2, #0x6                   	// #6
  4581dc:	add	x1, x1, #0x7c0
  4581e0:	bl	4028d0 <strncmp@plt>
  4581e4:	cbnz	w0, 455ed8 <_obstack_memory_used@@Base+0x114d4>
  4581e8:	ldr	x2, [x20, #16]
  4581ec:	mov	w1, w21
  4581f0:	mov	x0, x19
  4581f4:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  4581f8:	mov	x0, x19
  4581fc:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x285fc>
  458200:	mov	x2, #0x2                   	// #2
  458204:	add	x1, x1, #0x7c8
  458208:	bl	4507e8 <_obstack_memory_used@@Base+0xbde4>
  45820c:	b	455f98 <_obstack_memory_used@@Base+0x11594>
  458210:	cmp	x1, #0xff
  458214:	b.ne	45823c <_obstack_memory_used@@Base+0x13838>  // b.any
  458218:	ldp	x3, x2, [x19, #272]
  45821c:	strb	wzr, [x19, #255]
  458220:	mov	x0, x19
  458224:	blr	x3
  458228:	str	xzr, [x19, #256]
  45822c:	ldr	x0, [x19, #320]
  458230:	mov	x1, #0x0                   	// #0
  458234:	add	x0, x0, #0x1
  458238:	str	x0, [x19, #320]
  45823c:	add	x0, x1, #0x1
  458240:	str	x0, [x19, #256]
  458244:	mov	w2, #0x20                  	// #32
  458248:	strb	w2, [x19, x1]
  45824c:	strb	w2, [x19, #264]
  458250:	b	4577bc <_obstack_memory_used@@Base+0x12db8>
  458254:	ldr	x1, [x19, #256]
  458258:	cmp	x1, #0xff
  45825c:	b.ne	458284 <_obstack_memory_used@@Base+0x13880>  // b.any
  458260:	ldp	x3, x2, [x19, #272]
  458264:	strb	wzr, [x19, #255]
  458268:	mov	x0, x19
  45826c:	blr	x3
  458270:	str	xzr, [x19, #256]
  458274:	ldr	x0, [x19, #320]
  458278:	mov	x1, #0x0                   	// #0
  45827c:	add	x0, x0, #0x1
  458280:	str	x0, [x19, #320]
  458284:	add	x0, x1, #0x1
  458288:	str	x0, [x19, #256]
  45828c:	mov	w2, #0x20                  	// #32
  458290:	strb	w2, [x19, x1]
  458294:	strb	w2, [x19, #264]
  458298:	b	457824 <_obstack_memory_used@@Base+0x12e20>
  45829c:	ldp	x21, x22, [sp, #32]
  4582a0:	ldp	x23, x24, [sp, #48]
  4582a4:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  4582a8:	ldp	x21, x22, [sp, #32]
  4582ac:	ldp	x23, x24, [sp, #48]
  4582b0:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  4582b4:	ldp	x21, x22, [sp, #32]
  4582b8:	ldp	x23, x24, [sp, #48]
  4582bc:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  4582c0:	ldp	x21, x22, [sp, #32]
  4582c4:	ldp	x23, x24, [sp, #48]
  4582c8:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  4582cc:	ldr	x2, [x20, #8]
  4582d0:	mov	w1, w21
  4582d4:	mov	x0, x19
  4582d8:	bl	459ac8 <_obstack_memory_used@@Base+0x150c4>
  4582dc:	mov	x0, x19
  4582e0:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x285fc>
  4582e4:	mov	x2, #0x3                   	// #3
  4582e8:	add	x1, x1, #0xa30
  4582ec:	bl	4507e8 <_obstack_memory_used@@Base+0xbde4>
  4582f0:	ldp	x21, x22, [sp, #32]
  4582f4:	ldp	x23, x24, [sp, #48]
  4582f8:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  4582fc:	sub	x22, x22, #0x2
  458300:	ldp	x23, x24, [sp, #48]
  458304:	str	x22, [x19, #256]
  458308:	ldp	x21, x22, [sp, #32]
  45830c:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  458310:	ldr	x0, [x0, #8]
  458314:	ldr	w1, [x0, #16]
  458318:	cmp	w1, #0x1
  45831c:	b.eq	4586a0 <_obstack_memory_used@@Base+0x13c9c>  // b.none
  458320:	ldp	x21, x22, [sp, #32]
  458324:	ldp	x23, x24, [sp, #48]
  458328:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  45832c:	ldr	x1, [x0, #8]
  458330:	ldr	w2, [x1, #16]
  458334:	cmp	w2, #0x1
  458338:	b.ne	456140 <_obstack_memory_used@@Base+0x1173c>  // b.any
  45833c:	ldr	x1, [x1, #8]
  458340:	ldrb	w1, [x1]
  458344:	cmp	w1, #0x3e
  458348:	b.ne	456140 <_obstack_memory_used@@Base+0x1173c>  // b.any
  45834c:	ldr	x1, [x19, #256]
  458350:	cmp	x1, #0xff
  458354:	b.ne	45837c <_obstack_memory_used@@Base+0x13978>  // b.any
  458358:	ldp	x3, x2, [x19, #272]
  45835c:	strb	wzr, [x19, #255]
  458360:	mov	x0, x19
  458364:	blr	x3
  458368:	str	xzr, [x19, #256]
  45836c:	ldr	x0, [x19, #320]
  458370:	mov	x1, #0x0                   	// #0
  458374:	add	x0, x0, #0x1
  458378:	str	x0, [x19, #320]
  45837c:	add	x0, x1, #0x1
  458380:	str	x0, [x19, #256]
  458384:	mov	w0, #0x28                  	// #40
  458388:	strb	w0, [x19, x1]
  45838c:	strb	w0, [x19, #264]
  458390:	ldr	x0, [x20, #8]
  458394:	b	456140 <_obstack_memory_used@@Base+0x1173c>
  458398:	ldr	x2, [x2, #8]
  45839c:	add	x1, x0, #0x8
  4583a0:	ldr	x23, [x19, #288]
  4583a4:	str	x2, [x19, #288]
  4583a8:	mov	x0, x19
  4583ac:	bl	451108 <_obstack_memory_used@@Base+0xc704>
  4583b0:	cbz	x0, 4586e8 <_obstack_memory_used@@Base+0x13ce4>
  4583b4:	mov	w22, #0x1                   	// #1
  4583b8:	b	457fb4 <_obstack_memory_used@@Base+0x135b0>
  4583bc:	ldr	x25, [x25, #8]
  4583c0:	cbz	x25, 457e38 <_obstack_memory_used@@Base+0x13434>
  4583c4:	ldr	w5, [x25]
  4583c8:	b	457d28 <_obstack_memory_used@@Base+0x13324>
  4583cc:	ldp	x21, x22, [sp, #32]
  4583d0:	ldp	x23, x24, [sp, #48]
  4583d4:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  4583d8:	ldp	x21, x22, [sp, #32]
  4583dc:	ldp	x23, x24, [sp, #48]
  4583e0:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  4583e4:	ldp	x21, x22, [sp, #32]
  4583e8:	ldp	x23, x24, [sp, #48]
  4583ec:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  4583f0:	ldr	x0, [x2, #16]
  4583f4:	ldr	w0, [x0]
  4583f8:	cmp	w0, #0x29
  4583fc:	b.eq	458408 <_obstack_memory_used@@Base+0x13a04>  // b.none
  458400:	mov	w0, #0x1                   	// #1
  458404:	str	w0, [x19, #304]
  458408:	ldr	x2, [x2, #8]
  45840c:	mov	w1, w21
  458410:	mov	x0, x19
  458414:	bl	459ac8 <_obstack_memory_used@@Base+0x150c4>
  458418:	b	456188 <_obstack_memory_used@@Base+0x11784>
  45841c:	mov	x0, x19
  458420:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x285fc>
  458424:	mov	x2, #0x4                   	// #4
  458428:	add	x1, x1, #0x9e0
  45842c:	bl	4507e8 <_obstack_memory_used@@Base+0xbde4>
  458430:	ldr	x0, [x22, #8]
  458434:	cbz	x0, 45848c <_obstack_memory_used@@Base+0x13a88>
  458438:	mov	w1, w21
  45843c:	mov	x2, x22
  458440:	mov	x0, x19
  458444:	bl	459ac8 <_obstack_memory_used@@Base+0x150c4>
  458448:	ldr	x1, [x19, #256]
  45844c:	cmp	x1, #0xff
  458450:	b.ne	458478 <_obstack_memory_used@@Base+0x13a74>  // b.any
  458454:	ldp	x3, x2, [x19, #272]
  458458:	strb	wzr, [x19, #255]
  45845c:	mov	x0, x19
  458460:	blr	x3
  458464:	str	xzr, [x19, #256]
  458468:	ldr	x0, [x19, #320]
  45846c:	mov	x1, #0x0                   	// #0
  458470:	add	x0, x0, #0x1
  458474:	str	x0, [x19, #320]
  458478:	add	x0, x1, #0x1
  45847c:	str	x0, [x19, #256]
  458480:	mov	w0, #0x20                  	// #32
  458484:	strb	w0, [x19, x1]
  458488:	strb	w0, [x19, #264]
  45848c:	mov	x2, x23
  458490:	mov	w1, w21
  458494:	mov	x0, x19
  458498:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  45849c:	cbz	x20, 458634 <_obstack_memory_used@@Base+0x13c30>
  4584a0:	mov	w1, w21
  4584a4:	mov	x2, x20
  4584a8:	mov	x0, x19
  4584ac:	bl	459ac8 <_obstack_memory_used@@Base+0x150c4>
  4584b0:	ldp	x21, x22, [sp, #32]
  4584b4:	ldp	x23, x24, [sp, #48]
  4584b8:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  4584bc:	ldp	x21, x22, [sp, #32]
  4584c0:	ldp	x23, x24, [sp, #48]
  4584c4:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  4584c8:	ldp	x21, x22, [sp, #32]
  4584cc:	ldp	x23, x24, [sp, #48]
  4584d0:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  4584d4:	ldrb	w1, [x0, #1]
  4584d8:	cmp	w1, #0x6c
  4584dc:	b.ne	458110 <_obstack_memory_used@@Base+0x1370c>  // b.any
  4584e0:	ldrb	w0, [x0, #2]
  4584e4:	cbz	w0, 45811c <_obstack_memory_used@@Base+0x13718>
  4584e8:	b	458110 <_obstack_memory_used@@Base+0x1370c>
  4584ec:	ldp	x21, x22, [sp, #32]
  4584f0:	ldp	x23, x24, [sp, #48]
  4584f4:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  4584f8:	ldp	x21, x22, [sp, #32]
  4584fc:	ldp	x23, x24, [sp, #48]
  458500:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  458504:	ldp	x21, x22, [sp, #32]
  458508:	ldp	x23, x24, [sp, #48]
  45850c:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  458510:	ldr	x1, [x20, #8]
  458514:	ldr	w2, [x1]
  458518:	cmp	w2, #0x1
  45851c:	b.ne	457520 <_obstack_memory_used@@Base+0x12b1c>  // b.any
  458520:	ldr	x2, [x20, #16]
  458524:	ldr	w2, [x2]
  458528:	cmp	w2, #0x29
  45852c:	csel	x20, x20, x1, ne  // ne = any
  458530:	b	457520 <_obstack_memory_used@@Base+0x12b1c>
  458534:	ldr	w1, [x19, #348]
  458538:	cmp	w4, w1
  45853c:	b.ge	4585a4 <_obstack_memory_used@@Base+0x13ba0>  // b.tcont
  458540:	sbfiz	x1, x4, #4, #32
  458544:	add	w2, w4, #0x1
  458548:	ldr	x3, [x19, #288]
  45854c:	str	w2, [x19, #344]
  458550:	str	x0, [x5, x1]
  458554:	add	x1, x5, w4, sxtw #4
  458558:	add	x1, x1, #0x8
  45855c:	cbz	x3, 4586bc <_obstack_memory_used@@Base+0x13cb8>
  458560:	ldr	w2, [x19, #360]
  458564:	ldr	w6, [x19, #364]
  458568:	sbfiz	x5, x2, #4, #32
  45856c:	b	45859c <_obstack_memory_used@@Base+0x13b98>
  458570:	ldr	x4, [x19, #352]
  458574:	add	w2, w2, #0x1
  458578:	ldr	x7, [x3, #8]
  45857c:	add	x4, x4, x5
  458580:	str	w2, [x19, #360]
  458584:	add	x5, x5, #0x10
  458588:	str	x7, [x4, #8]
  45858c:	str	x4, [x1]
  458590:	mov	x1, x4
  458594:	ldr	x3, [x3]
  458598:	cbz	x3, 4586bc <_obstack_memory_used@@Base+0x13cb8>
  45859c:	cmp	w6, w2
  4585a0:	b.gt	458570 <_obstack_memory_used@@Base+0x13b6c>
  4585a4:	mov	w0, #0x1                   	// #1
  4585a8:	ldp	x21, x22, [sp, #32]
  4585ac:	ldp	x23, x24, [sp, #48]
  4585b0:	str	w0, [x19, #304]
  4585b4:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  4585b8:	ldr	x2, [x20, #8]
  4585bc:	mov	w1, w21
  4585c0:	mov	x0, x19
  4585c4:	bl	459ac8 <_obstack_memory_used@@Base+0x150c4>
  4585c8:	mov	x2, x22
  4585cc:	mov	w1, w21
  4585d0:	mov	x0, x19
  4585d4:	bl	459a10 <_obstack_memory_used@@Base+0x1500c>
  4585d8:	ldp	x21, x22, [sp, #32]
  4585dc:	ldp	x23, x24, [sp, #48]
  4585e0:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  4585e4:	ldr	x2, [x20, #16]
  4585e8:	mov	x0, x19
  4585ec:	mov	w1, w21
  4585f0:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  4585f4:	str	xzr, [x19, #296]
  4585f8:	ldr	w0, [sp, #112]
  4585fc:	cbz	w0, 455500 <_obstack_memory_used@@Base+0x10afc>
  458600:	ldp	x21, x22, [sp, #32]
  458604:	ldp	x23, x24, [sp, #48]
  458608:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  45860c:	cmp	w22, #0x5
  458610:	b.eq	4587bc <_obstack_memory_used@@Base+0x13db8>  // b.none
  458614:	mov	x0, x19
  458618:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x285fc>
  45861c:	mov	x2, #0x3                   	// #3
  458620:	add	x1, x1, #0x9f8
  458624:	bl	4507e8 <_obstack_memory_used@@Base+0xbde4>
  458628:	ldp	x21, x22, [sp, #32]
  45862c:	ldp	x23, x24, [sp, #48]
  458630:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  458634:	ldp	x21, x22, [sp, #32]
  458638:	ldp	x23, x24, [sp, #48]
  45863c:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  458640:	cmp	x21, x24
  458644:	b.ls	456fa8 <_obstack_memory_used@@Base+0x125a4>  // b.plast
  458648:	cmp	x2, #0xff
  45864c:	ccmp	w0, w23, #0x0, ls  // ls = plast
  458650:	b.ne	456fa8 <_obstack_memory_used@@Base+0x125a4>  // b.any
  458654:	ldr	x1, [x19, #256]
  458658:	and	w22, w2, #0xff
  45865c:	cmp	x1, #0xff
  458660:	b.ne	458688 <_obstack_memory_used@@Base+0x13c84>  // b.any
  458664:	ldp	x3, x2, [x19, #272]
  458668:	strb	wzr, [x19, #255]
  45866c:	mov	x0, x19
  458670:	blr	x3
  458674:	str	xzr, [x19, #256]
  458678:	ldr	x0, [x19, #320]
  45867c:	mov	x1, #0x0                   	// #0
  458680:	add	x0, x0, #0x1
  458684:	str	x0, [x19, #320]
  458688:	add	x0, x1, #0x1
  45868c:	str	x0, [x19, #256]
  458690:	strb	w22, [x19, x1]
  458694:	mov	x20, x24
  458698:	strb	w22, [x19, #264]
  45869c:	b	456fe8 <_obstack_memory_used@@Base+0x125e4>
  4586a0:	ldr	x0, [x0, #8]
  4586a4:	ldrb	w0, [x0]
  4586a8:	cmp	w0, #0x3e
  4586ac:	b.eq	4587dc <_obstack_memory_used@@Base+0x13dd8>  // b.none
  4586b0:	ldp	x21, x22, [sp, #32]
  4586b4:	ldp	x23, x24, [sp, #48]
  4586b8:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  4586bc:	str	xzr, [x1]
  4586c0:	b	457fa0 <_obstack_memory_used@@Base+0x1359c>
  4586c4:	ldp	x21, x22, [sp, #32]
  4586c8:	ldp	x23, x24, [sp, #48]
  4586cc:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  4586d0:	ldr	w1, [x20]
  4586d4:	ldr	x4, [x19, #296]
  4586d8:	cmp	w1, #0x2f
  4586dc:	csel	x20, x20, x0, ne  // ne = any
  4586e0:	b	454c98 <_obstack_memory_used@@Base+0x10294>
  4586e4:	cbz	w22, 454af0 <_obstack_memory_used@@Base+0x100ec>
  4586e8:	ldp	x21, x22, [sp, #32]
  4586ec:	str	x23, [x19, #288]
  4586f0:	ldp	x23, x24, [sp, #48]
  4586f4:	b	454af8 <_obstack_memory_used@@Base+0x100f4>
  4586f8:	ldr	x1, [x19, #256]
  4586fc:	cmp	x1, #0xff
  458700:	b.ne	458728 <_obstack_memory_used@@Base+0x13d24>  // b.any
  458704:	ldp	x3, x2, [x19, #272]
  458708:	strb	wzr, [x19, #255]
  45870c:	mov	x0, x19
  458710:	blr	x3
  458714:	str	xzr, [x19, #256]
  458718:	ldr	x0, [x19, #320]
  45871c:	mov	x1, #0x0                   	// #0
  458720:	add	x0, x0, #0x1
  458724:	str	x0, [x19, #320]
  458728:	add	x0, x1, #0x1
  45872c:	str	x0, [x19, #256]
  458730:	mov	w0, #0x75                  	// #117
  458734:	strb	w0, [x19, x1]
  458738:	strb	w0, [x19, #264]
  45873c:	ldp	x21, x22, [sp, #32]
  458740:	ldp	x23, x24, [sp, #48]
  458744:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  458748:	mov	x0, x19
  45874c:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x285fc>
  458750:	mov	x2, #0x2                   	// #2
  458754:	add	x1, x1, #0x9e8
  458758:	bl	4507e8 <_obstack_memory_used@@Base+0xbde4>
  45875c:	ldp	x21, x22, [sp, #32]
  458760:	ldp	x23, x24, [sp, #48]
  458764:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  458768:	ldr	x1, [x19, #256]
  45876c:	cmp	x1, #0xff
  458770:	b.ne	458798 <_obstack_memory_used@@Base+0x13d94>  // b.any
  458774:	ldp	x3, x2, [x19, #272]
  458778:	strb	wzr, [x19, #255]
  45877c:	mov	x0, x19
  458780:	blr	x3
  458784:	str	xzr, [x19, #256]
  458788:	ldr	x0, [x19, #320]
  45878c:	mov	x1, #0x0                   	// #0
  458790:	add	x0, x0, #0x1
  458794:	str	x0, [x19, #320]
  458798:	add	x0, x1, #0x1
  45879c:	str	x0, [x19, #256]
  4587a0:	mov	w0, #0x2d                  	// #45
  4587a4:	strb	w0, [x19, x1]
  4587a8:	strb	w0, [x19, #264]
  4587ac:	b	4573e8 <_obstack_memory_used@@Base+0x129e4>
  4587b0:	ldp	x21, x22, [sp, #32]
  4587b4:	ldp	x23, x24, [sp, #48]
  4587b8:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  4587bc:	mov	x0, x19
  4587c0:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x285fc>
  4587c4:	mov	x2, #0x2                   	// #2
  4587c8:	add	x1, x1, #0x9f0
  4587cc:	bl	4507e8 <_obstack_memory_used@@Base+0xbde4>
  4587d0:	ldp	x21, x22, [sp, #32]
  4587d4:	ldp	x23, x24, [sp, #48]
  4587d8:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  4587dc:	ldr	x1, [x19, #256]
  4587e0:	cmp	x1, #0xff
  4587e4:	b.ne	45880c <_obstack_memory_used@@Base+0x13e08>  // b.any
  4587e8:	ldp	x3, x2, [x19, #272]
  4587ec:	strb	wzr, [x19, #255]
  4587f0:	mov	x0, x19
  4587f4:	blr	x3
  4587f8:	str	xzr, [x19, #256]
  4587fc:	ldr	x0, [x19, #320]
  458800:	mov	x1, #0x0                   	// #0
  458804:	add	x0, x0, #0x1
  458808:	str	x0, [x19, #320]
  45880c:	add	x0, x1, #0x1
  458810:	str	x0, [x19, #256]
  458814:	mov	w0, #0x29                  	// #41
  458818:	strb	w0, [x19, x1]
  45881c:	strb	w0, [x19, #264]
  458820:	ldp	x21, x22, [sp, #32]
  458824:	ldp	x23, x24, [sp, #48]
  458828:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  45882c:	mov	x2, x22
  458830:	mov	w1, w21
  458834:	mov	x0, x19
  458838:	bl	459a10 <_obstack_memory_used@@Base+0x1500c>
  45883c:	b	456664 <_obstack_memory_used@@Base+0x11c60>
  458840:	ldp	x21, x22, [sp, #32]
  458844:	ldp	x23, x24, [sp, #48]
  458848:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  45884c:	mov	x0, x19
  458850:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x285fc>
  458854:	mov	x2, #0x5                   	// #5
  458858:	add	x1, x1, #0xa00
  45885c:	bl	4507e8 <_obstack_memory_used@@Base+0xbde4>
  458860:	ldp	x21, x22, [sp, #32]
  458864:	ldp	x23, x24, [sp, #48]
  458868:	b	454ac4 <_obstack_memory_used@@Base+0x100c0>
  45886c:	nop
  458870:	stp	x29, x30, [sp, #-48]!
  458874:	mov	x29, sp
  458878:	stp	x19, x20, [sp, #16]
  45887c:	mov	x20, x0
  458880:	cbz	x2, 4588f0 <_obstack_memory_used@@Base+0x13eec>
  458884:	ldr	w3, [x2, #4]
  458888:	mov	x19, x2
  45888c:	cmp	w3, #0x1
  458890:	b.gt	4588f0 <_obstack_memory_used@@Base+0x13eec>
  458894:	ldr	w4, [x0, #308]
  458898:	cmp	w4, #0x400
  45889c:	b.gt	4588f0 <_obstack_memory_used@@Base+0x13eec>
  4588a0:	add	w3, w3, #0x1
  4588a4:	add	w4, w4, #0x1
  4588a8:	str	w3, [x2, #4]
  4588ac:	add	x3, sp, #0x20
  4588b0:	str	w4, [x0, #308]
  4588b4:	ldr	x4, [x0, #328]
  4588b8:	str	x3, [x0, #328]
  4588bc:	stp	x2, x4, [sp, #32]
  4588c0:	bl	454a60 <_obstack_memory_used@@Base+0x1005c>
  4588c4:	ldr	w1, [x19, #4]
  4588c8:	ldr	x0, [sp, #40]
  4588cc:	str	x0, [x20, #328]
  4588d0:	ldr	w0, [x20, #308]
  4588d4:	sub	w1, w1, #0x1
  4588d8:	str	w1, [x19, #4]
  4588dc:	sub	w0, w0, #0x1
  4588e0:	str	w0, [x20, #308]
  4588e4:	ldp	x19, x20, [sp, #16]
  4588e8:	ldp	x29, x30, [sp], #48
  4588ec:	ret
  4588f0:	mov	w0, #0x1                   	// #1
  4588f4:	str	w0, [x20, #304]
  4588f8:	ldp	x19, x20, [sp, #16]
  4588fc:	ldp	x29, x30, [sp], #48
  458900:	ret
  458904:	nop
  458908:	stp	x29, x30, [sp, #-64]!
  45890c:	mov	x29, sp
  458910:	stp	x19, x20, [sp, #16]
  458914:	mov	x19, x0
  458918:	ldr	w0, [x2]
  45891c:	stp	x21, x22, [sp, #32]
  458920:	mov	x20, x2
  458924:	sub	w0, w0, #0x3
  458928:	mov	w21, w1
  45892c:	cmp	w0, #0x4d
  458930:	b.ls	458950 <_obstack_memory_used@@Base+0x13f4c>  // b.plast
  458934:	mov	x2, x20
  458938:	mov	w1, w21
  45893c:	mov	x0, x19
  458940:	ldp	x19, x20, [sp, #16]
  458944:	ldp	x21, x22, [sp, #32]
  458948:	ldp	x29, x30, [sp], #64
  45894c:	b	458870 <_obstack_memory_used@@Base+0x13e6c>
  458950:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x285fc>
  458954:	add	x1, x1, #0x6b0
  458958:	ldrh	w0, [x1, w0, uxtw #1]
  45895c:	adr	x1, 458968 <_obstack_memory_used@@Base+0x13f64>
  458960:	add	x0, x1, w0, sxth #2
  458964:	br	x0
  458968:	adrp	x20, 46d000 <_obstack_memory_used@@Base+0x285fc>
  45896c:	add	x20, x20, #0xab8
  458970:	add	x22, x20, #0x9
  458974:	mov	w21, #0x20                  	// #32
  458978:	ldr	x1, [x19, #256]
  45897c:	b	4589a4 <_obstack_memory_used@@Base+0x13fa0>
  458980:	mov	x0, x1
  458984:	add	x1, x1, #0x1
  458988:	str	x1, [x19, #256]
  45898c:	add	x20, x20, #0x1
  458990:	strb	w21, [x19, x0]
  458994:	cmp	x22, x20
  458998:	strb	w21, [x19, #264]
  45899c:	b.eq	458b5c <_obstack_memory_used@@Base+0x14158>  // b.none
  4589a0:	ldrb	w21, [x20]
  4589a4:	cmp	x1, #0xff
  4589a8:	b.ne	458980 <_obstack_memory_used@@Base+0x13f7c>  // b.any
  4589ac:	ldp	x3, x2, [x19, #272]
  4589b0:	strb	wzr, [x19, #255]
  4589b4:	mov	x0, x19
  4589b8:	blr	x3
  4589bc:	ldr	x2, [x19, #320]
  4589c0:	mov	x1, #0x1                   	// #1
  4589c4:	mov	x0, #0x0                   	// #0
  4589c8:	add	x2, x2, x1
  4589cc:	str	x2, [x19, #320]
  4589d0:	b	458988 <_obstack_memory_used@@Base+0x13f84>
  4589d4:	adrp	x20, 46d000 <_obstack_memory_used@@Base+0x285fc>
  4589d8:	add	x20, x20, #0xac8
  4589dc:	add	x22, x20, #0x9
  4589e0:	mov	w21, #0x20                  	// #32
  4589e4:	ldr	x1, [x19, #256]
  4589e8:	b	458a10 <_obstack_memory_used@@Base+0x1400c>
  4589ec:	mov	x0, x1
  4589f0:	add	x1, x1, #0x1
  4589f4:	str	x1, [x19, #256]
  4589f8:	add	x20, x20, #0x1
  4589fc:	strb	w21, [x19, x0]
  458a00:	cmp	x20, x22
  458a04:	strb	w21, [x19, #264]
  458a08:	b.eq	458b5c <_obstack_memory_used@@Base+0x14158>  // b.none
  458a0c:	ldrb	w21, [x20]
  458a10:	cmp	x1, #0xff
  458a14:	b.ne	4589ec <_obstack_memory_used@@Base+0x13fe8>  // b.any
  458a18:	ldp	x3, x2, [x19, #272]
  458a1c:	strb	wzr, [x19, #255]
  458a20:	mov	x0, x19
  458a24:	blr	x3
  458a28:	ldr	x2, [x19, #320]
  458a2c:	mov	x1, #0x1                   	// #1
  458a30:	mov	x0, #0x0                   	// #0
  458a34:	add	x2, x2, x1
  458a38:	str	x2, [x19, #320]
  458a3c:	b	4589f4 <_obstack_memory_used@@Base+0x13ff0>
  458a40:	adrp	x20, 46d000 <_obstack_memory_used@@Base+0x285fc>
  458a44:	add	x20, x20, #0xad8
  458a48:	add	x22, x20, #0x6
  458a4c:	mov	w21, #0x20                  	// #32
  458a50:	ldr	x1, [x19, #256]
  458a54:	b	458a7c <_obstack_memory_used@@Base+0x14078>
  458a58:	mov	x0, x1
  458a5c:	add	x1, x1, #0x1
  458a60:	str	x1, [x19, #256]
  458a64:	add	x20, x20, #0x1
  458a68:	strb	w21, [x19, x0]
  458a6c:	cmp	x22, x20
  458a70:	strb	w21, [x19, #264]
  458a74:	b.eq	458b5c <_obstack_memory_used@@Base+0x14158>  // b.none
  458a78:	ldrb	w21, [x20]
  458a7c:	cmp	x1, #0xff
  458a80:	b.ne	458a58 <_obstack_memory_used@@Base+0x14054>  // b.any
  458a84:	ldp	x3, x2, [x19, #272]
  458a88:	strb	wzr, [x19, #255]
  458a8c:	mov	x0, x19
  458a90:	blr	x3
  458a94:	ldr	x2, [x19, #320]
  458a98:	mov	x1, #0x1                   	// #1
  458a9c:	mov	x0, #0x0                   	// #0
  458aa0:	add	x2, x2, x1
  458aa4:	str	x2, [x19, #320]
  458aa8:	b	458a60 <_obstack_memory_used@@Base+0x1405c>
  458aac:	ldr	x2, [x2, #8]
  458ab0:	b	458938 <_obstack_memory_used@@Base+0x13f34>
  458ab4:	ldr	x0, [x19, #256]
  458ab8:	cmp	x0, #0xff
  458abc:	b.eq	459078 <_obstack_memory_used@@Base+0x14674>  // b.none
  458ac0:	add	x1, x0, #0x1
  458ac4:	str	x1, [x19, #256]
  458ac8:	mov	w2, #0x20                  	// #32
  458acc:	strb	w2, [x19, x0]
  458ad0:	strb	w2, [x19, #264]
  458ad4:	b	458cc4 <_obstack_memory_used@@Base+0x142c0>
  458ad8:	ldr	x0, [x19, #256]
  458adc:	add	x1, x0, #0x1
  458ae0:	cmp	x0, #0xff
  458ae4:	b.eq	4590d0 <_obstack_memory_used@@Base+0x146cc>  // b.none
  458ae8:	str	x1, [x19, #256]
  458aec:	mov	w2, #0x20                  	// #32
  458af0:	strb	w2, [x19, x0]
  458af4:	strb	w2, [x19, #264]
  458af8:	mov	x21, #0x0                   	// #0
  458afc:	mov	w20, #0x26                  	// #38
  458b00:	b	458b20 <_obstack_memory_used@@Base+0x1411c>
  458b04:	mov	x0, x1
  458b08:	add	x1, x1, #0x1
  458b0c:	str	x1, [x19, #256]
  458b10:	strb	w20, [x19, x0]
  458b14:	strb	w20, [x19, #264]
  458b18:	cbnz	x21, 458b5c <_obstack_memory_used@@Base+0x14158>
  458b1c:	mov	x21, #0x1                   	// #1
  458b20:	cmp	x1, #0xff
  458b24:	b.ne	458b04 <_obstack_memory_used@@Base+0x14100>  // b.any
  458b28:	ldp	x3, x2, [x19, #272]
  458b2c:	strb	wzr, [x19, #255]
  458b30:	mov	x0, x19
  458b34:	blr	x3
  458b38:	ldr	x2, [x19, #320]
  458b3c:	mov	x0, #0x0                   	// #0
  458b40:	mov	x1, #0x1                   	// #1
  458b44:	str	x1, [x19, #256]
  458b48:	add	x2, x2, x1
  458b4c:	str	x2, [x19, #320]
  458b50:	strb	w20, [x19, x0]
  458b54:	strb	w20, [x19, #264]
  458b58:	cbz	x21, 458b1c <_obstack_memory_used@@Base+0x14118>
  458b5c:	ldp	x19, x20, [sp, #16]
  458b60:	ldp	x21, x22, [sp, #32]
  458b64:	ldp	x29, x30, [sp], #64
  458b68:	ret
  458b6c:	ldr	x1, [x19, #256]
  458b70:	add	x0, x1, #0x1
  458b74:	cmp	x1, #0xff
  458b78:	b.eq	4590a8 <_obstack_memory_used@@Base+0x146a4>  // b.none
  458b7c:	str	x0, [x19, #256]
  458b80:	mov	w0, #0x20                  	// #32
  458b84:	strb	w0, [x19, x1]
  458b88:	mov	w1, w21
  458b8c:	strb	w0, [x19, #264]
  458b90:	mov	x0, x19
  458b94:	ldr	x2, [x20, #16]
  458b98:	ldp	x19, x20, [sp, #16]
  458b9c:	ldp	x21, x22, [sp, #32]
  458ba0:	ldp	x29, x30, [sp], #64
  458ba4:	b	458870 <_obstack_memory_used@@Base+0x13e6c>
  458ba8:	tbnz	w21, #2, 458b5c <_obstack_memory_used@@Base+0x14158>
  458bac:	ldr	x1, [x19, #256]
  458bb0:	add	x0, x1, #0x1
  458bb4:	cmp	x1, #0xff
  458bb8:	b.ne	458be0 <_obstack_memory_used@@Base+0x141dc>  // b.any
  458bbc:	ldp	x3, x2, [x19, #272]
  458bc0:	strb	wzr, [x19, #255]
  458bc4:	mov	x0, x19
  458bc8:	blr	x3
  458bcc:	ldr	x2, [x19, #320]
  458bd0:	mov	x0, #0x1                   	// #1
  458bd4:	mov	x1, #0x0                   	// #0
  458bd8:	add	x2, x2, x0
  458bdc:	str	x2, [x19, #320]
  458be0:	str	x0, [x19, #256]
  458be4:	mov	w0, #0x2a                  	// #42
  458be8:	strb	w0, [x19, x1]
  458bec:	strb	w0, [x19, #264]
  458bf0:	b	458b5c <_obstack_memory_used@@Base+0x14158>
  458bf4:	ldrb	w0, [x19, #264]
  458bf8:	cmp	w0, #0x28
  458bfc:	b.eq	458c44 <_obstack_memory_used@@Base+0x14240>  // b.none
  458c00:	ldr	x1, [x19, #256]
  458c04:	add	x0, x1, #0x1
  458c08:	cmp	x1, #0xff
  458c0c:	b.ne	458c34 <_obstack_memory_used@@Base+0x14230>  // b.any
  458c10:	ldp	x3, x2, [x19, #272]
  458c14:	strb	wzr, [x19, #255]
  458c18:	mov	x0, x19
  458c1c:	blr	x3
  458c20:	ldr	x2, [x19, #320]
  458c24:	mov	x0, #0x1                   	// #1
  458c28:	mov	x1, #0x0                   	// #0
  458c2c:	add	x2, x2, x0
  458c30:	str	x2, [x19, #320]
  458c34:	str	x0, [x19, #256]
  458c38:	mov	w0, #0x20                  	// #32
  458c3c:	strb	w0, [x19, x1]
  458c40:	strb	w0, [x19, #264]
  458c44:	ldr	x2, [x20, #8]
  458c48:	mov	w1, w21
  458c4c:	mov	x0, x19
  458c50:	adrp	x20, 46d000 <_obstack_memory_used@@Base+0x285fc>
  458c54:	add	x20, x20, #0xb30
  458c58:	mov	w21, #0x3a                  	// #58
  458c5c:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  458c60:	add	x22, x20, #0x3
  458c64:	ldr	x1, [x19, #256]
  458c68:	b	458c90 <_obstack_memory_used@@Base+0x1428c>
  458c6c:	mov	x0, x1
  458c70:	add	x1, x1, #0x1
  458c74:	str	x1, [x19, #256]
  458c78:	add	x20, x20, #0x1
  458c7c:	strb	w21, [x19, x0]
  458c80:	cmp	x22, x20
  458c84:	strb	w21, [x19, #264]
  458c88:	b.eq	458b5c <_obstack_memory_used@@Base+0x14158>  // b.none
  458c8c:	ldrb	w21, [x20]
  458c90:	cmp	x1, #0xff
  458c94:	b.ne	458c6c <_obstack_memory_used@@Base+0x14268>  // b.any
  458c98:	ldp	x3, x2, [x19, #272]
  458c9c:	strb	wzr, [x19, #255]
  458ca0:	mov	x0, x19
  458ca4:	blr	x3
  458ca8:	ldr	x2, [x19, #320]
  458cac:	mov	x1, #0x1                   	// #1
  458cb0:	mov	x0, #0x0                   	// #0
  458cb4:	add	x2, x2, x1
  458cb8:	str	x2, [x19, #320]
  458cbc:	b	458c74 <_obstack_memory_used@@Base+0x14270>
  458cc0:	ldr	x1, [x19, #256]
  458cc4:	cmp	x1, #0xff
  458cc8:	b.eq	459050 <_obstack_memory_used@@Base+0x1464c>  // b.none
  458ccc:	add	x0, x1, #0x1
  458cd0:	str	x0, [x19, #256]
  458cd4:	mov	w0, #0x26                  	// #38
  458cd8:	strb	w0, [x19, x1]
  458cdc:	strb	w0, [x19, #264]
  458ce0:	ldp	x19, x20, [sp, #16]
  458ce4:	ldp	x21, x22, [sp, #32]
  458ce8:	ldp	x29, x30, [sp], #64
  458cec:	ret
  458cf0:	adrp	x22, 46d000 <_obstack_memory_used@@Base+0x285fc>
  458cf4:	add	x22, x22, #0xb08
  458cf8:	stp	x23, x24, [sp, #48]
  458cfc:	add	x24, x22, #0x6
  458d00:	mov	w23, #0x20                  	// #32
  458d04:	ldr	x1, [x19, #256]
  458d08:	b	458d30 <_obstack_memory_used@@Base+0x1432c>
  458d0c:	mov	x0, x1
  458d10:	add	x1, x1, #0x1
  458d14:	str	x1, [x19, #256]
  458d18:	add	x22, x22, #0x1
  458d1c:	strb	w23, [x19, x0]
  458d20:	cmp	x24, x22
  458d24:	strb	w23, [x19, #264]
  458d28:	b.eq	458f98 <_obstack_memory_used@@Base+0x14594>  // b.none
  458d2c:	ldrb	w23, [x22]
  458d30:	cmp	x1, #0xff
  458d34:	b.ne	458d0c <_obstack_memory_used@@Base+0x14308>  // b.any
  458d38:	ldp	x3, x2, [x19, #272]
  458d3c:	strb	wzr, [x19, #255]
  458d40:	mov	x0, x19
  458d44:	blr	x3
  458d48:	ldr	x2, [x19, #320]
  458d4c:	mov	x1, #0x1                   	// #1
  458d50:	mov	x0, #0x0                   	// #0
  458d54:	add	x2, x2, x1
  458d58:	str	x2, [x19, #320]
  458d5c:	b	458d14 <_obstack_memory_used@@Base+0x14310>
  458d60:	adrp	x22, 46d000 <_obstack_memory_used@@Base+0x285fc>
  458d64:	add	x22, x22, #0xaf8
  458d68:	stp	x23, x24, [sp, #48]
  458d6c:	add	x24, x22, #0x9
  458d70:	mov	w23, #0x20                  	// #32
  458d74:	ldr	x1, [x19, #256]
  458d78:	b	458da0 <_obstack_memory_used@@Base+0x1439c>
  458d7c:	mov	x0, x1
  458d80:	add	x1, x1, #0x1
  458d84:	str	x1, [x19, #256]
  458d88:	add	x22, x22, #0x1
  458d8c:	strb	w23, [x19, x0]
  458d90:	cmp	x22, x24
  458d94:	strb	w23, [x19, #264]
  458d98:	b.eq	458f98 <_obstack_memory_used@@Base+0x14594>  // b.none
  458d9c:	ldrb	w23, [x22]
  458da0:	cmp	x1, #0xff
  458da4:	b.ne	458d7c <_obstack_memory_used@@Base+0x14378>  // b.any
  458da8:	ldp	x3, x2, [x19, #272]
  458dac:	strb	wzr, [x19, #255]
  458db0:	mov	x0, x19
  458db4:	blr	x3
  458db8:	ldr	x2, [x19, #320]
  458dbc:	mov	x1, #0x1                   	// #1
  458dc0:	mov	x0, #0x0                   	// #0
  458dc4:	add	x2, x2, x1
  458dc8:	str	x2, [x19, #320]
  458dcc:	b	458d84 <_obstack_memory_used@@Base+0x14380>
  458dd0:	stp	x23, x24, [sp, #48]
  458dd4:	adrp	x24, 46d000 <_obstack_memory_used@@Base+0x285fc>
  458dd8:	add	x24, x24, #0xb38
  458ddc:	adrp	x22, 46d000 <_obstack_memory_used@@Base+0x285fc>
  458de0:	add	x24, x24, #0xa
  458de4:	add	x22, x22, #0xb39
  458de8:	mov	w23, #0x20                  	// #32
  458dec:	ldr	x1, [x19, #256]
  458df0:	b	458e14 <_obstack_memory_used@@Base+0x14410>
  458df4:	mov	x0, x1
  458df8:	add	x1, x1, #0x1
  458dfc:	str	x1, [x19, #256]
  458e00:	cmp	x22, x24
  458e04:	strb	w23, [x19, x0]
  458e08:	strb	w23, [x19, #264]
  458e0c:	b.eq	459048 <_obstack_memory_used@@Base+0x14644>  // b.none
  458e10:	ldrb	w23, [x22], #1
  458e14:	cmp	x1, #0xff
  458e18:	b.ne	458df4 <_obstack_memory_used@@Base+0x143f0>  // b.any
  458e1c:	ldp	x3, x2, [x19, #272]
  458e20:	strb	wzr, [x19, #255]
  458e24:	mov	x0, x19
  458e28:	blr	x3
  458e2c:	ldr	x2, [x19, #320]
  458e30:	mov	x1, #0x1                   	// #1
  458e34:	mov	x0, #0x0                   	// #0
  458e38:	add	x2, x2, x1
  458e3c:	str	x2, [x19, #320]
  458e40:	b	458dfc <_obstack_memory_used@@Base+0x143f8>
  458e44:	ldr	x1, [x19, #256]
  458e48:	b	458af8 <_obstack_memory_used@@Base+0x140f4>
  458e4c:	adrp	x20, 46d000 <_obstack_memory_used@@Base+0x285fc>
  458e50:	add	x20, x20, #0xb10
  458e54:	add	x22, x20, #0x8
  458e58:	mov	w21, #0x63                  	// #99
  458e5c:	ldr	x1, [x19, #256]
  458e60:	b	458e88 <_obstack_memory_used@@Base+0x14484>
  458e64:	mov	x0, x1
  458e68:	add	x1, x1, #0x1
  458e6c:	str	x1, [x19, #256]
  458e70:	add	x20, x20, #0x1
  458e74:	strb	w21, [x19, x0]
  458e78:	cmp	x22, x20
  458e7c:	strb	w21, [x19, #264]
  458e80:	b.eq	458b5c <_obstack_memory_used@@Base+0x14158>  // b.none
  458e84:	ldrb	w21, [x20]
  458e88:	cmp	x1, #0xff
  458e8c:	b.ne	458e64 <_obstack_memory_used@@Base+0x14460>  // b.any
  458e90:	ldp	x3, x2, [x19, #272]
  458e94:	strb	wzr, [x19, #255]
  458e98:	mov	x0, x19
  458e9c:	blr	x3
  458ea0:	ldr	x2, [x19, #320]
  458ea4:	mov	x1, #0x1                   	// #1
  458ea8:	mov	x0, #0x0                   	// #0
  458eac:	add	x2, x2, x1
  458eb0:	str	x2, [x19, #320]
  458eb4:	b	458e6c <_obstack_memory_used@@Base+0x14468>
  458eb8:	adrp	x22, 46d000 <_obstack_memory_used@@Base+0x285fc>
  458ebc:	add	x22, x22, #0xb20
  458ec0:	adrp	x20, 46d000 <_obstack_memory_used@@Base+0x285fc>
  458ec4:	add	x22, x22, #0xa
  458ec8:	add	x20, x20, #0xb21
  458ecc:	mov	w21, #0x69                  	// #105
  458ed0:	ldr	x1, [x19, #256]
  458ed4:	b	458ef8 <_obstack_memory_used@@Base+0x144f4>
  458ed8:	mov	x0, x1
  458edc:	add	x1, x1, #0x1
  458ee0:	str	x1, [x19, #256]
  458ee4:	cmp	x20, x22
  458ee8:	strb	w21, [x19, x0]
  458eec:	strb	w21, [x19, #264]
  458ef0:	b.eq	458b5c <_obstack_memory_used@@Base+0x14158>  // b.none
  458ef4:	ldrb	w21, [x20], #1
  458ef8:	cmp	x1, #0xff
  458efc:	b.ne	458ed8 <_obstack_memory_used@@Base+0x144d4>  // b.any
  458f00:	ldp	x3, x2, [x19, #272]
  458f04:	strb	wzr, [x19, #255]
  458f08:	mov	x0, x19
  458f0c:	blr	x3
  458f10:	ldr	x2, [x19, #320]
  458f14:	mov	x1, #0x1                   	// #1
  458f18:	mov	x0, #0x0                   	// #0
  458f1c:	add	x2, x2, x1
  458f20:	str	x2, [x19, #320]
  458f24:	b	458ee0 <_obstack_memory_used@@Base+0x144dc>
  458f28:	adrp	x22, 46d000 <_obstack_memory_used@@Base+0x285fc>
  458f2c:	add	x22, x22, #0xae0
  458f30:	adrp	x20, 46d000 <_obstack_memory_used@@Base+0x285fc>
  458f34:	add	x22, x22, #0x11
  458f38:	add	x20, x20, #0xae1
  458f3c:	mov	w21, #0x20                  	// #32
  458f40:	ldr	x1, [x19, #256]
  458f44:	b	458f68 <_obstack_memory_used@@Base+0x14564>
  458f48:	mov	x0, x1
  458f4c:	add	x1, x1, #0x1
  458f50:	str	x1, [x19, #256]
  458f54:	cmp	x22, x20
  458f58:	strb	w21, [x19, x0]
  458f5c:	strb	w21, [x19, #264]
  458f60:	b.eq	458b5c <_obstack_memory_used@@Base+0x14158>  // b.none
  458f64:	ldrb	w21, [x20], #1
  458f68:	cmp	x1, #0xff
  458f6c:	b.ne	458f48 <_obstack_memory_used@@Base+0x14544>  // b.any
  458f70:	ldp	x3, x2, [x19, #272]
  458f74:	strb	wzr, [x19, #255]
  458f78:	mov	x0, x19
  458f7c:	blr	x3
  458f80:	ldr	x2, [x19, #320]
  458f84:	mov	x1, #0x1                   	// #1
  458f88:	mov	x0, #0x0                   	// #0
  458f8c:	add	x2, x2, x1
  458f90:	str	x2, [x19, #320]
  458f94:	b	458f50 <_obstack_memory_used@@Base+0x1454c>
  458f98:	ldr	x2, [x20, #16]
  458f9c:	cbz	x2, 4590fc <_obstack_memory_used@@Base+0x146f8>
  458fa0:	add	x0, x1, #0x1
  458fa4:	cmp	x1, #0xff
  458fa8:	b.ne	458fd4 <_obstack_memory_used@@Base+0x145d0>  // b.any
  458fac:	ldp	x3, x2, [x19, #272]
  458fb0:	strb	wzr, [x19, #255]
  458fb4:	mov	x0, x19
  458fb8:	blr	x3
  458fbc:	ldr	x3, [x19, #320]
  458fc0:	mov	x0, #0x1                   	// #1
  458fc4:	mov	x1, #0x0                   	// #0
  458fc8:	add	x3, x3, x0
  458fcc:	ldr	x2, [x20, #16]
  458fd0:	str	x3, [x19, #320]
  458fd4:	str	x0, [x19, #256]
  458fd8:	mov	w0, #0x28                  	// #40
  458fdc:	strb	w0, [x19, x1]
  458fe0:	strb	w0, [x19, #264]
  458fe4:	mov	w1, w21
  458fe8:	mov	x0, x19
  458fec:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  458ff0:	ldr	x1, [x19, #256]
  458ff4:	add	x0, x1, #0x1
  458ff8:	cmp	x1, #0xff
  458ffc:	b.ne	459024 <_obstack_memory_used@@Base+0x14620>  // b.any
  459000:	ldp	x3, x2, [x19, #272]
  459004:	strb	wzr, [x19, #255]
  459008:	mov	x0, x19
  45900c:	blr	x3
  459010:	ldr	x2, [x19, #320]
  459014:	mov	x0, #0x1                   	// #1
  459018:	mov	x1, #0x0                   	// #0
  45901c:	add	x2, x2, x0
  459020:	str	x2, [x19, #320]
  459024:	str	x0, [x19, #256]
  459028:	mov	w0, #0x29                  	// #41
  45902c:	strb	w0, [x19, x1]
  459030:	strb	w0, [x19, #264]
  459034:	ldp	x19, x20, [sp, #16]
  459038:	ldp	x21, x22, [sp, #32]
  45903c:	ldp	x23, x24, [sp, #48]
  459040:	ldp	x29, x30, [sp], #64
  459044:	ret
  459048:	ldr	x2, [x20, #8]
  45904c:	b	458fe4 <_obstack_memory_used@@Base+0x145e0>
  459050:	ldp	x3, x2, [x19, #272]
  459054:	strb	wzr, [x19, #255]
  459058:	mov	x0, x19
  45905c:	blr	x3
  459060:	ldr	x2, [x19, #320]
  459064:	mov	x0, #0x1                   	// #1
  459068:	mov	x1, #0x0                   	// #0
  45906c:	add	x2, x2, x0
  459070:	str	x2, [x19, #320]
  459074:	b	458cd0 <_obstack_memory_used@@Base+0x142cc>
  459078:	ldp	x3, x2, [x19, #272]
  45907c:	strb	wzr, [x19, #255]
  459080:	mov	x1, x0
  459084:	mov	x0, x19
  459088:	blr	x3
  45908c:	ldr	x0, [x19, #320]
  459090:	mov	w2, #0x20                  	// #32
  459094:	mov	x1, #0x1                   	// #1
  459098:	strb	w2, [x19]
  45909c:	add	x0, x0, x1
  4590a0:	str	x0, [x19, #320]
  4590a4:	b	458ccc <_obstack_memory_used@@Base+0x142c8>
  4590a8:	ldp	x3, x2, [x19, #272]
  4590ac:	strb	wzr, [x19, #255]
  4590b0:	mov	x0, x19
  4590b4:	blr	x3
  4590b8:	ldr	x2, [x19, #320]
  4590bc:	mov	x0, #0x1                   	// #1
  4590c0:	mov	x1, #0x0                   	// #0
  4590c4:	add	x2, x2, x0
  4590c8:	str	x2, [x19, #320]
  4590cc:	b	458b7c <_obstack_memory_used@@Base+0x14178>
  4590d0:	ldp	x3, x2, [x19, #272]
  4590d4:	strb	wzr, [x19, #255]
  4590d8:	mov	x1, x0
  4590dc:	mov	x0, x19
  4590e0:	blr	x3
  4590e4:	ldr	x2, [x19, #320]
  4590e8:	mov	x1, #0x1                   	// #1
  4590ec:	mov	x0, #0x0                   	// #0
  4590f0:	add	x2, x2, x1
  4590f4:	str	x2, [x19, #320]
  4590f8:	b	458ae8 <_obstack_memory_used@@Base+0x140e4>
  4590fc:	ldp	x23, x24, [sp, #48]
  459100:	b	458b5c <_obstack_memory_used@@Base+0x14158>
  459104:	nop
  459108:	stp	x29, x30, [sp, #-64]!
  45910c:	mov	x29, sp
  459110:	stp	x19, x20, [sp, #16]
  459114:	mov	x19, x0
  459118:	mov	x20, x3
  45911c:	stp	x21, x22, [sp, #32]
  459120:	mov	x21, x2
  459124:	stp	x23, x24, [sp, #48]
  459128:	mov	w23, w1
  45912c:	cbz	x3, 459170 <_obstack_memory_used@@Base+0x1476c>
  459130:	mov	x2, #0xe000000             	// #234881024
  459134:	mov	x4, #0x1                   	// #1
  459138:	movk	x2, #0x862, lsl #32
  45913c:	ldr	w0, [x3, #16]
  459140:	cbnz	w0, 459170 <_obstack_memory_used@@Base+0x1476c>
  459144:	ldr	x0, [x3, #8]
  459148:	ldr	w0, [x0]
  45914c:	cmp	w0, #0x2b
  459150:	b.hi	459168 <_obstack_memory_used@@Base+0x14764>  // b.pmore
  459154:	lsl	x0, x4, x0
  459158:	tst	x0, x2
  45915c:	b.ne	459238 <_obstack_memory_used@@Base+0x14834>  // b.any
  459160:	tst	x0, #0x1c00000000
  459164:	b.ne	459304 <_obstack_memory_used@@Base+0x14900>  // b.any
  459168:	ldr	x3, [x3]
  45916c:	cbnz	x3, 45913c <_obstack_memory_used@@Base+0x14738>
  459170:	ldr	x22, [x19, #296]
  459174:	str	xzr, [x19, #296]
  459178:	mov	w1, w23
  45917c:	mov	x2, x20
  459180:	mov	x0, x19
  459184:	mov	w3, #0x0                   	// #0
  459188:	bl	4593b8 <_obstack_memory_used@@Base+0x149b4>
  45918c:	ldr	x1, [x19, #256]
  459190:	cmp	x1, #0xff
  459194:	b.eq	4592c8 <_obstack_memory_used@@Base+0x148c4>  // b.none
  459198:	add	x0, x1, #0x1
  45919c:	str	x0, [x19, #256]
  4591a0:	mov	w2, #0x28                  	// #40
  4591a4:	strb	w2, [x19, x1]
  4591a8:	strb	w2, [x19, #264]
  4591ac:	ldr	x2, [x21]
  4591b0:	cbz	x2, 4591c4 <_obstack_memory_used@@Base+0x147c0>
  4591b4:	mov	x0, x19
  4591b8:	mov	w1, w23
  4591bc:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  4591c0:	ldr	x0, [x19, #256]
  4591c4:	cmp	x0, #0xff
  4591c8:	b.eq	45920c <_obstack_memory_used@@Base+0x14808>  // b.none
  4591cc:	add	x1, x0, #0x1
  4591d0:	str	x1, [x19, #256]
  4591d4:	mov	w3, #0x29                  	// #41
  4591d8:	strb	w3, [x19, x0]
  4591dc:	mov	x2, x20
  4591e0:	strb	w3, [x19, #264]
  4591e4:	mov	w1, w23
  4591e8:	mov	x0, x19
  4591ec:	mov	w3, #0x1                   	// #1
  4591f0:	bl	4593b8 <_obstack_memory_used@@Base+0x149b4>
  4591f4:	ldp	x23, x24, [sp, #48]
  4591f8:	str	x22, [x19, #296]
  4591fc:	ldp	x19, x20, [sp, #16]
  459200:	ldp	x21, x22, [sp, #32]
  459204:	ldp	x29, x30, [sp], #64
  459208:	ret
  45920c:	ldp	x3, x2, [x19, #272]
  459210:	strb	wzr, [x19, #255]
  459214:	mov	x1, x0
  459218:	mov	x0, x19
  45921c:	blr	x3
  459220:	ldr	x2, [x19, #320]
  459224:	mov	x1, #0x1                   	// #1
  459228:	mov	x0, #0x0                   	// #0
  45922c:	add	x2, x2, x1
  459230:	str	x2, [x19, #320]
  459234:	b	4591d0 <_obstack_memory_used@@Base+0x147cc>
  459238:	ldrb	w0, [x19, #264]
  45923c:	ldr	x1, [x19, #256]
  459240:	cmp	w0, #0x20
  459244:	b.eq	459268 <_obstack_memory_used@@Base+0x14864>  // b.none
  459248:	cmp	x1, #0xff
  45924c:	b.eq	459348 <_obstack_memory_used@@Base+0x14944>  // b.none
  459250:	add	x2, x1, #0x1
  459254:	str	x2, [x19, #256]
  459258:	mov	w0, #0x20                  	// #32
  45925c:	strb	w0, [x19, x1]
  459260:	mov	x1, x2
  459264:	strb	w0, [x19, #264]
  459268:	cmp	x1, #0xff
  45926c:	b.eq	459320 <_obstack_memory_used@@Base+0x1491c>  // b.none
  459270:	add	x0, x1, #0x1
  459274:	str	x0, [x19, #256]
  459278:	mov	w24, #0x28                  	// #40
  45927c:	strb	w24, [x19, x1]
  459280:	mov	x0, x19
  459284:	strb	w24, [x19, #264]
  459288:	mov	x2, x20
  45928c:	ldr	x22, [x19, #296]
  459290:	str	xzr, [x19, #296]
  459294:	mov	w1, w23
  459298:	mov	w3, #0x0                   	// #0
  45929c:	bl	4593b8 <_obstack_memory_used@@Base+0x149b4>
  4592a0:	ldr	x0, [x19, #256]
  4592a4:	cmp	x0, #0xff
  4592a8:	b.eq	459374 <_obstack_memory_used@@Base+0x14970>  // b.none
  4592ac:	add	x1, x0, #0x1
  4592b0:	str	x1, [x19, #256]
  4592b4:	mov	w2, #0x29                  	// #41
  4592b8:	strb	w2, [x19, x0]
  4592bc:	strb	w2, [x19, #264]
  4592c0:	cmp	x1, #0xff
  4592c4:	b.ne	459198 <_obstack_memory_used@@Base+0x14794>  // b.any
  4592c8:	ldp	x3, x2, [x19, #272]
  4592cc:	strb	wzr, [x19, #255]
  4592d0:	mov	x0, x19
  4592d4:	blr	x3
  4592d8:	mov	w1, #0x28                  	// #40
  4592dc:	strb	w1, [x19]
  4592e0:	strb	w1, [x19, #264]
  4592e4:	mov	x0, #0x1                   	// #1
  4592e8:	ldr	x1, [x19, #320]
  4592ec:	ldr	x2, [x21]
  4592f0:	add	x1, x1, x0
  4592f4:	str	x0, [x19, #256]
  4592f8:	str	x1, [x19, #320]
  4592fc:	cbnz	x2, 4591b4 <_obstack_memory_used@@Base+0x147b0>
  459300:	b	4591cc <_obstack_memory_used@@Base+0x147c8>
  459304:	ldrb	w0, [x19, #264]
  459308:	ldr	x1, [x19, #256]
  45930c:	and	w2, w0, #0xfffffffd
  459310:	cmp	w2, #0x28
  459314:	b.ne	459240 <_obstack_memory_used@@Base+0x1483c>  // b.any
  459318:	cmp	x1, #0xff
  45931c:	b.ne	459270 <_obstack_memory_used@@Base+0x1486c>  // b.any
  459320:	ldp	x3, x2, [x19, #272]
  459324:	strb	wzr, [x19, #255]
  459328:	mov	x0, x19
  45932c:	blr	x3
  459330:	ldr	x2, [x19, #320]
  459334:	mov	x0, #0x1                   	// #1
  459338:	mov	x1, #0x0                   	// #0
  45933c:	add	x2, x2, x0
  459340:	str	x2, [x19, #320]
  459344:	b	459274 <_obstack_memory_used@@Base+0x14870>
  459348:	ldp	x3, x2, [x19, #272]
  45934c:	strb	wzr, [x19, #255]
  459350:	mov	x0, x19
  459354:	blr	x3
  459358:	ldr	x0, [x19, #320]
  45935c:	mov	w2, #0x20                  	// #32
  459360:	mov	x1, #0x1                   	// #1
  459364:	strb	w2, [x19]
  459368:	add	x0, x0, x1
  45936c:	str	x0, [x19, #320]
  459370:	b	459270 <_obstack_memory_used@@Base+0x1486c>
  459374:	ldp	x3, x2, [x19, #272]
  459378:	strb	wzr, [x19, #255]
  45937c:	mov	x1, x0
  459380:	mov	x0, x19
  459384:	blr	x3
  459388:	strb	w24, [x19, #264]
  45938c:	mov	w0, #0x2829                	// #10281
  459390:	strh	w0, [x19]
  459394:	ldr	x1, [x19, #320]
  459398:	mov	x0, #0x2                   	// #2
  45939c:	ldr	x2, [x21]
  4593a0:	add	x1, x1, #0x1
  4593a4:	str	x0, [x19, #256]
  4593a8:	str	x1, [x19, #320]
  4593ac:	cbnz	x2, 4591b4 <_obstack_memory_used@@Base+0x147b0>
  4593b0:	b	4591cc <_obstack_memory_used@@Base+0x147c8>
  4593b4:	nop
  4593b8:	cbz	x2, 459614 <_obstack_memory_used@@Base+0x14c10>
  4593bc:	stp	x29, x30, [sp, #-112]!
  4593c0:	mov	x29, sp
  4593c4:	stp	x23, x24, [sp, #48]
  4593c8:	mov	x24, #0x1f                  	// #31
  4593cc:	movk	x24, #0x1a, lsl #48
  4593d0:	stp	x19, x20, [sp, #16]
  4593d4:	mov	w20, w1
  4593d8:	mov	x19, x2
  4593dc:	stp	x21, x22, [sp, #32]
  4593e0:	mov	w21, w3
  4593e4:	mov	w22, #0x1                   	// #1
  4593e8:	stp	x25, x26, [sp, #64]
  4593ec:	mov	x26, x0
  4593f0:	mov	x25, #0x1                   	// #1
  4593f4:	b	459438 <_obstack_memory_used@@Base+0x14a34>
  4593f8:	ldr	x1, [x19, #24]
  4593fc:	cmp	w5, #0x29
  459400:	ldr	x23, [x26, #288]
  459404:	str	w22, [x19, #16]
  459408:	str	x1, [x26, #288]
  45940c:	b.eq	459484 <_obstack_memory_used@@Base+0x14a80>  // b.none
  459410:	cmp	w5, #0x2a
  459414:	b.eq	4594b4 <_obstack_memory_used@@Base+0x14ab0>  // b.none
  459418:	cmp	w5, #0x2
  45941c:	b.eq	4594e4 <_obstack_memory_used@@Base+0x14ae0>  // b.none
  459420:	mov	w1, w20
  459424:	mov	x0, x26
  459428:	bl	458908 <_obstack_memory_used@@Base+0x13f04>
  45942c:	str	x23, [x26, #288]
  459430:	ldr	x19, [x19]
  459434:	cbz	x19, 45949c <_obstack_memory_used@@Base+0x14a98>
  459438:	ldr	w2, [x26, #304]
  45943c:	cbnz	w2, 45949c <_obstack_memory_used@@Base+0x14a98>
  459440:	ldr	w2, [x19, #16]
  459444:	cbnz	w2, 459430 <_obstack_memory_used@@Base+0x14a2c>
  459448:	ldr	x2, [x19, #8]
  45944c:	ldr	w5, [x2]
  459450:	cbnz	w21, 4593f8 <_obstack_memory_used@@Base+0x149f4>
  459454:	sub	w4, w5, #0x1c
  459458:	cmp	w4, #0x34
  45945c:	b.hi	4593f8 <_obstack_memory_used@@Base+0x149f4>  // b.pmore
  459460:	lsl	x4, x25, x4
  459464:	tst	x4, x24
  459468:	b.ne	459430 <_obstack_memory_used@@Base+0x14a2c>  // b.any
  45946c:	ldr	x1, [x19, #24]
  459470:	cmp	w5, #0x29
  459474:	ldr	x23, [x26, #288]
  459478:	str	w22, [x19, #16]
  45947c:	str	x1, [x26, #288]
  459480:	b.ne	459410 <_obstack_memory_used@@Base+0x14a0c>  // b.any
  459484:	ldr	x3, [x19]
  459488:	add	x2, x2, #0x10
  45948c:	mov	w1, w20
  459490:	mov	x0, x26
  459494:	bl	459108 <_obstack_memory_used@@Base+0x14704>
  459498:	str	x23, [x26, #288]
  45949c:	ldp	x19, x20, [sp, #16]
  4594a0:	ldp	x21, x22, [sp, #32]
  4594a4:	ldp	x23, x24, [sp, #48]
  4594a8:	ldp	x25, x26, [sp, #64]
  4594ac:	ldp	x29, x30, [sp], #112
  4594b0:	ret
  4594b4:	ldr	x3, [x19]
  4594b8:	mov	w1, w20
  4594bc:	mov	x0, x26
  4594c0:	add	x2, x2, #0x8
  4594c4:	bl	459788 <_obstack_memory_used@@Base+0x14d84>
  4594c8:	str	x23, [x26, #288]
  4594cc:	ldp	x19, x20, [sp, #16]
  4594d0:	ldp	x21, x22, [sp, #32]
  4594d4:	ldp	x23, x24, [sp, #48]
  4594d8:	ldp	x25, x26, [sp, #64]
  4594dc:	ldp	x29, x30, [sp], #112
  4594e0:	ret
  4594e4:	ldr	x2, [x2, #8]
  4594e8:	mov	w1, w20
  4594ec:	ldr	x21, [x26, #296]
  4594f0:	str	xzr, [x26, #296]
  4594f4:	mov	x0, x26
  4594f8:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  4594fc:	str	x21, [x26, #296]
  459500:	tbz	w20, #2, 4595b8 <_obstack_memory_used@@Base+0x14bb4>
  459504:	ldr	x1, [x26, #256]
  459508:	add	x0, x1, #0x1
  45950c:	cmp	x1, #0xff
  459510:	b.ne	459538 <_obstack_memory_used@@Base+0x14b34>  // b.any
  459514:	ldp	x3, x2, [x26, #272]
  459518:	strb	wzr, [x26, #255]
  45951c:	mov	x0, x26
  459520:	blr	x3
  459524:	ldr	x2, [x26, #320]
  459528:	mov	x0, #0x1                   	// #1
  45952c:	mov	x1, #0x0                   	// #0
  459530:	add	x2, x2, x0
  459534:	str	x2, [x26, #320]
  459538:	str	x0, [x26, #256]
  45953c:	mov	w0, #0x2e                  	// #46
  459540:	strb	w0, [x26, x1]
  459544:	strb	w0, [x26, #264]
  459548:	ldr	x0, [x19, #8]
  45954c:	ldr	x21, [x0, #16]
  459550:	ldr	w2, [x21]
  459554:	cmp	w2, #0x47
  459558:	b.eq	459618 <_obstack_memory_used@@Base+0x14c14>  // b.none
  45955c:	mov	x1, #0x1f                  	// #31
  459560:	mov	x3, #0x1                   	// #1
  459564:	movk	x1, #0x1a, lsl #48
  459568:	sub	w2, w2, #0x1c
  45956c:	cmp	w2, #0x34
  459570:	b.hi	459580 <_obstack_memory_used@@Base+0x14b7c>  // b.pmore
  459574:	lsl	x2, x3, x2
  459578:	tst	x2, x1
  45957c:	b.ne	4595ac <_obstack_memory_used@@Base+0x14ba8>  // b.any
  459580:	mov	x2, x21
  459584:	mov	w1, w20
  459588:	mov	x0, x26
  45958c:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  459590:	str	x23, [x26, #288]
  459594:	ldp	x19, x20, [sp, #16]
  459598:	ldp	x21, x22, [sp, #32]
  45959c:	ldp	x23, x24, [sp, #48]
  4595a0:	ldp	x25, x26, [sp, #64]
  4595a4:	ldp	x29, x30, [sp], #112
  4595a8:	ret
  4595ac:	ldr	x21, [x21, #8]
  4595b0:	ldr	w2, [x21]
  4595b4:	b	459568 <_obstack_memory_used@@Base+0x14b64>
  4595b8:	mov	x22, #0x0                   	// #0
  4595bc:	mov	w21, #0x3a                  	// #58
  4595c0:	ldr	x1, [x26, #256]
  4595c4:	b	4595e4 <_obstack_memory_used@@Base+0x14be0>
  4595c8:	mov	x0, x1
  4595cc:	add	x1, x1, #0x1
  4595d0:	str	x1, [x26, #256]
  4595d4:	strb	w21, [x26, x0]
  4595d8:	strb	w21, [x26, #264]
  4595dc:	cbnz	x22, 459548 <_obstack_memory_used@@Base+0x14b44>
  4595e0:	mov	x22, #0x1                   	// #1
  4595e4:	cmp	x1, #0xff
  4595e8:	b.ne	4595c8 <_obstack_memory_used@@Base+0x14bc4>  // b.any
  4595ec:	ldp	x3, x2, [x26, #272]
  4595f0:	strb	wzr, [x26, #255]
  4595f4:	mov	x0, x26
  4595f8:	blr	x3
  4595fc:	ldr	x2, [x26, #320]
  459600:	mov	x1, #0x1                   	// #1
  459604:	mov	x0, #0x0                   	// #0
  459608:	add	x2, x2, x1
  45960c:	str	x2, [x26, #320]
  459610:	b	4595d0 <_obstack_memory_used@@Base+0x14bcc>
  459614:	ret
  459618:	adrp	x24, 46d000 <_obstack_memory_used@@Base+0x285fc>
  45961c:	add	x24, x24, #0x7a0
  459620:	adrp	x22, 46d000 <_obstack_memory_used@@Base+0x285fc>
  459624:	add	x24, x24, #0xd
  459628:	add	x22, x22, #0x7a1
  45962c:	mov	w19, #0x7b                  	// #123
  459630:	ldr	x1, [x26, #256]
  459634:	b	459658 <_obstack_memory_used@@Base+0x14c54>
  459638:	mov	x0, x1
  45963c:	add	x1, x1, #0x1
  459640:	str	x1, [x26, #256]
  459644:	cmp	x22, x24
  459648:	strb	w19, [x26, x0]
  45964c:	strb	w19, [x26, #264]
  459650:	b.eq	459688 <_obstack_memory_used@@Base+0x14c84>  // b.none
  459654:	ldrb	w19, [x22], #1
  459658:	cmp	x1, #0xff
  45965c:	b.ne	459638 <_obstack_memory_used@@Base+0x14c34>  // b.any
  459660:	ldp	x3, x2, [x26, #272]
  459664:	strb	wzr, [x26, #255]
  459668:	mov	x0, x26
  45966c:	blr	x3
  459670:	ldr	x2, [x26, #320]
  459674:	mov	x1, #0x1                   	// #1
  459678:	mov	x0, #0x0                   	// #0
  45967c:	add	x2, x2, x1
  459680:	str	x2, [x26, #320]
  459684:	b	459640 <_obstack_memory_used@@Base+0x14c3c>
  459688:	ldr	w2, [x21, #16]
  45968c:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x285fc>
  459690:	add	x1, x1, #0x7b0
  459694:	add	x19, sp, #0x50
  459698:	add	w2, w2, #0x1
  45969c:	mov	x0, x19
  4596a0:	bl	4027a0 <sprintf@plt>
  4596a4:	mov	x0, x19
  4596a8:	bl	402700 <strlen@plt>
  4596ac:	ldr	x1, [x26, #256]
  4596b0:	cbz	x0, 459710 <_obstack_memory_used@@Base+0x14d0c>
  4596b4:	add	x24, x19, x0
  4596b8:	b	4596dc <_obstack_memory_used@@Base+0x14cd8>
  4596bc:	mov	x0, x1
  4596c0:	add	x1, x1, #0x1
  4596c4:	str	x1, [x26, #256]
  4596c8:	add	x19, x19, #0x1
  4596cc:	strb	w22, [x26, x0]
  4596d0:	cmp	x24, x19
  4596d4:	strb	w22, [x26, #264]
  4596d8:	b.eq	459710 <_obstack_memory_used@@Base+0x14d0c>  // b.none
  4596dc:	ldrb	w22, [x19]
  4596e0:	cmp	x1, #0xff
  4596e4:	b.ne	4596bc <_obstack_memory_used@@Base+0x14cb8>  // b.any
  4596e8:	ldp	x3, x2, [x26, #272]
  4596ec:	strb	wzr, [x26, #255]
  4596f0:	mov	x0, x26
  4596f4:	blr	x3
  4596f8:	ldr	x2, [x26, #320]
  4596fc:	mov	x1, #0x1                   	// #1
  459700:	mov	x0, #0x0                   	// #0
  459704:	add	x2, x2, x1
  459708:	str	x2, [x26, #320]
  45970c:	b	4596c4 <_obstack_memory_used@@Base+0x14cc0>
  459710:	adrp	x19, 46d000 <_obstack_memory_used@@Base+0x285fc>
  459714:	add	x19, x19, #0x7b8
  459718:	add	x24, x19, #0x3
  45971c:	mov	w22, #0x7d                  	// #125
  459720:	b	459748 <_obstack_memory_used@@Base+0x14d44>
  459724:	mov	x0, x1
  459728:	add	x1, x1, #0x1
  45972c:	str	x1, [x26, #256]
  459730:	add	x19, x19, #0x1
  459734:	strb	w22, [x26, x0]
  459738:	cmp	x24, x19
  45973c:	strb	w22, [x26, #264]
  459740:	b.eq	459778 <_obstack_memory_used@@Base+0x14d74>  // b.none
  459744:	ldrb	w22, [x19]
  459748:	cmp	x1, #0xff
  45974c:	b.ne	459724 <_obstack_memory_used@@Base+0x14d20>  // b.any
  459750:	ldp	x3, x2, [x26, #272]
  459754:	strb	wzr, [x26, #255]
  459758:	mov	x0, x26
  45975c:	blr	x3
  459760:	ldr	x2, [x26, #320]
  459764:	mov	x1, #0x1                   	// #1
  459768:	mov	x0, #0x0                   	// #0
  45976c:	add	x2, x2, x1
  459770:	str	x2, [x26, #320]
  459774:	b	45972c <_obstack_memory_used@@Base+0x14d28>
  459778:	ldr	x21, [x21, #8]
  45977c:	ldr	w2, [x21]
  459780:	b	45955c <_obstack_memory_used@@Base+0x14b58>
  459784:	nop
  459788:	stp	x29, x30, [sp, #-64]!
  45978c:	mov	x29, sp
  459790:	stp	x19, x20, [sp, #16]
  459794:	mov	x19, x0
  459798:	mov	x20, x3
  45979c:	stp	x21, x22, [sp, #32]
  4597a0:	mov	x0, x3
  4597a4:	mov	w21, w1
  4597a8:	stp	x23, x24, [sp, #48]
  4597ac:	mov	x22, x2
  4597b0:	cbz	x3, 4597dc <_obstack_memory_used@@Base+0x14dd8>
  4597b4:	nop
  4597b8:	ldr	w4, [x0, #16]
  4597bc:	cbz	w4, 4598c8 <_obstack_memory_used@@Base+0x14ec4>
  4597c0:	ldr	x0, [x0]
  4597c4:	cbnz	x0, 4597b8 <_obstack_memory_used@@Base+0x14db4>
  4597c8:	mov	x2, x20
  4597cc:	mov	w1, w21
  4597d0:	mov	x0, x19
  4597d4:	mov	w3, #0x0                   	// #0
  4597d8:	bl	4593b8 <_obstack_memory_used@@Base+0x149b4>
  4597dc:	ldr	x23, [x19, #256]
  4597e0:	cmp	x23, #0xff
  4597e4:	b.eq	4598f4 <_obstack_memory_used@@Base+0x14ef0>  // b.none
  4597e8:	add	x1, x23, #0x1
  4597ec:	str	x1, [x19, #256]
  4597f0:	mov	w0, #0x20                  	// #32
  4597f4:	strb	w0, [x19, x23]
  4597f8:	strb	w0, [x19, #264]
  4597fc:	cmp	x1, #0xff
  459800:	b.eq	45988c <_obstack_memory_used@@Base+0x14e88>  // b.none
  459804:	add	x0, x1, #0x1
  459808:	str	x0, [x19, #256]
  45980c:	mov	w2, #0x5b                  	// #91
  459810:	strb	w2, [x19, x1]
  459814:	strb	w2, [x19, #264]
  459818:	ldr	x2, [x22]
  45981c:	cbz	x2, 459830 <_obstack_memory_used@@Base+0x14e2c>
  459820:	mov	x0, x19
  459824:	mov	w1, w21
  459828:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  45982c:	ldr	x0, [x19, #256]
  459830:	cmp	x0, #0xff
  459834:	b.eq	459860 <_obstack_memory_used@@Base+0x14e5c>  // b.none
  459838:	add	x1, x0, #0x1
  45983c:	str	x1, [x19, #256]
  459840:	mov	w1, #0x5d                  	// #93
  459844:	strb	w1, [x19, x0]
  459848:	strb	w1, [x19, #264]
  45984c:	ldp	x19, x20, [sp, #16]
  459850:	ldp	x21, x22, [sp, #32]
  459854:	ldp	x23, x24, [sp, #48]
  459858:	ldp	x29, x30, [sp], #64
  45985c:	ret
  459860:	ldp	x3, x2, [x19, #272]
  459864:	strb	wzr, [x19, #255]
  459868:	mov	x1, x0
  45986c:	mov	x0, x19
  459870:	blr	x3
  459874:	ldr	x2, [x19, #320]
  459878:	mov	x1, #0x1                   	// #1
  45987c:	mov	x0, #0x0                   	// #0
  459880:	add	x2, x2, x1
  459884:	str	x2, [x19, #320]
  459888:	b	45983c <_obstack_memory_used@@Base+0x14e38>
  45988c:	ldp	x3, x2, [x19, #272]
  459890:	strb	wzr, [x19, #255]
  459894:	mov	x0, x19
  459898:	blr	x3
  45989c:	mov	w1, #0x5b                  	// #91
  4598a0:	strb	w1, [x19]
  4598a4:	strb	w1, [x19, #264]
  4598a8:	mov	x0, #0x1                   	// #1
  4598ac:	ldr	x1, [x19, #320]
  4598b0:	ldr	x2, [x22]
  4598b4:	add	x1, x1, x0
  4598b8:	str	x0, [x19, #256]
  4598bc:	str	x1, [x19, #320]
  4598c0:	cbnz	x2, 459820 <_obstack_memory_used@@Base+0x14e1c>
  4598c4:	b	459838 <_obstack_memory_used@@Base+0x14e34>
  4598c8:	ldr	x0, [x0, #8]
  4598cc:	ldr	w0, [x0]
  4598d0:	cmp	w0, #0x2a
  4598d4:	b.ne	459938 <_obstack_memory_used@@Base+0x14f34>  // b.any
  4598d8:	mov	w1, w21
  4598dc:	mov	x2, x20
  4598e0:	mov	x0, x19
  4598e4:	mov	w3, #0x0                   	// #0
  4598e8:	bl	4593b8 <_obstack_memory_used@@Base+0x149b4>
  4598ec:	ldr	x1, [x19, #256]
  4598f0:	b	4597fc <_obstack_memory_used@@Base+0x14df8>
  4598f4:	ldp	x3, x2, [x19, #272]
  4598f8:	strb	wzr, [x19, #255]
  4598fc:	mov	x1, x23
  459900:	mov	x0, x19
  459904:	blr	x3
  459908:	mov	w1, #0x5b20                	// #23328
  45990c:	mov	w0, #0x5b                  	// #91
  459910:	strh	w1, [x19]
  459914:	strb	w0, [x19, #264]
  459918:	mov	x0, #0x2                   	// #2
  45991c:	ldr	x1, [x19, #320]
  459920:	ldr	x2, [x22]
  459924:	add	x1, x1, #0x1
  459928:	str	x0, [x19, #256]
  45992c:	str	x1, [x19, #320]
  459930:	cbnz	x2, 459820 <_obstack_memory_used@@Base+0x14e1c>
  459934:	b	459838 <_obstack_memory_used@@Base+0x14e34>
  459938:	mov	w24, #0x20                  	// #32
  45993c:	mov	x23, #0x0                   	// #0
  459940:	ldr	x1, [x19, #256]
  459944:	b	45996c <_obstack_memory_used@@Base+0x14f68>
  459948:	mov	x0, x1
  45994c:	add	x1, x1, #0x1
  459950:	str	x1, [x19, #256]
  459954:	cmp	x23, #0x1
  459958:	strb	w24, [x19, x0]
  45995c:	strb	w24, [x19, #264]
  459960:	mov	w24, #0x28                  	// #40
  459964:	b.eq	4599b0 <_obstack_memory_used@@Base+0x14fac>  // b.none
  459968:	mov	x23, #0x1                   	// #1
  45996c:	cmp	x1, #0xff
  459970:	b.ne	459948 <_obstack_memory_used@@Base+0x14f44>  // b.any
  459974:	ldp	x3, x2, [x19, #272]
  459978:	strb	wzr, [x19, #255]
  45997c:	mov	x0, x19
  459980:	blr	x3
  459984:	ldr	x2, [x19, #320]
  459988:	mov	x0, #0x0                   	// #0
  45998c:	mov	x1, #0x1                   	// #1
  459990:	str	x1, [x19, #256]
  459994:	add	x2, x2, x1
  459998:	str	x2, [x19, #320]
  45999c:	strb	w24, [x19, x0]
  4599a0:	cmp	x23, #0x1
  4599a4:	strb	w24, [x19, #264]
  4599a8:	mov	w24, #0x28                  	// #40
  4599ac:	b.ne	459968 <_obstack_memory_used@@Base+0x14f64>  // b.any
  4599b0:	mov	w1, w21
  4599b4:	mov	x2, x20
  4599b8:	mov	x0, x19
  4599bc:	mov	w3, #0x0                   	// #0
  4599c0:	bl	4593b8 <_obstack_memory_used@@Base+0x149b4>
  4599c4:	ldr	x1, [x19, #256]
  4599c8:	cmp	x1, #0xff
  4599cc:	b.eq	4599e8 <_obstack_memory_used@@Base+0x14fe4>  // b.none
  4599d0:	add	x23, x1, #0x1
  4599d4:	str	x23, [x19, #256]
  4599d8:	mov	w0, #0x29                  	// #41
  4599dc:	strb	w0, [x19, x1]
  4599e0:	strb	w0, [x19, #264]
  4599e4:	b	4597e0 <_obstack_memory_used@@Base+0x14ddc>
  4599e8:	ldp	x3, x2, [x19, #272]
  4599ec:	strb	wzr, [x19, #255]
  4599f0:	mov	x0, x19
  4599f4:	blr	x3
  4599f8:	ldr	x0, [x19, #320]
  4599fc:	mov	w1, #0x29                  	// #41
  459a00:	strb	w1, [x19]
  459a04:	add	x0, x0, #0x1
  459a08:	str	x0, [x19, #320]
  459a0c:	b	4597e8 <_obstack_memory_used@@Base+0x14de4>
  459a10:	ldr	w4, [x2]
  459a14:	cmp	w4, #0x32
  459a18:	b.eq	459a20 <_obstack_memory_used@@Base+0x1501c>  // b.none
  459a1c:	b	458870 <_obstack_memory_used@@Base+0x13e6c>
  459a20:	stp	x29, x30, [sp, #-48]!
  459a24:	mov	x29, sp
  459a28:	stp	x19, x20, [sp, #16]
  459a2c:	mov	x19, x0
  459a30:	ldr	x0, [x2, #8]
  459a34:	stp	x21, x22, [sp, #32]
  459a38:	ldrsw	x22, [x0, #16]
  459a3c:	ldr	x20, [x0, #8]
  459a40:	cbz	x22, 459ab8 <_obstack_memory_used@@Base+0x150b4>
  459a44:	add	x22, x20, x22
  459a48:	ldr	x1, [x19, #256]
  459a4c:	b	459a70 <_obstack_memory_used@@Base+0x1506c>
  459a50:	mov	x2, x1
  459a54:	add	x1, x1, #0x1
  459a58:	str	x1, [x19, #256]
  459a5c:	add	x20, x20, #0x1
  459a60:	cmp	x20, x22
  459a64:	strb	w21, [x19, x2]
  459a68:	strb	w21, [x19, #264]
  459a6c:	b.eq	459ab8 <_obstack_memory_used@@Base+0x150b4>  // b.none
  459a70:	ldrb	w21, [x20]
  459a74:	cmp	x1, #0xff
  459a78:	b.ne	459a50 <_obstack_memory_used@@Base+0x1504c>  // b.any
  459a7c:	ldp	x3, x2, [x19, #272]
  459a80:	strb	wzr, [x19, #255]
  459a84:	mov	x0, x19
  459a88:	add	x20, x20, #0x1
  459a8c:	blr	x3
  459a90:	ldr	x0, [x19, #320]
  459a94:	mov	x2, #0x0                   	// #0
  459a98:	mov	x1, #0x1                   	// #1
  459a9c:	str	x1, [x19, #256]
  459aa0:	add	x0, x0, x1
  459aa4:	str	x0, [x19, #320]
  459aa8:	strb	w21, [x19, x2]
  459aac:	cmp	x20, x22
  459ab0:	strb	w21, [x19, #264]
  459ab4:	b.ne	459a70 <_obstack_memory_used@@Base+0x1506c>  // b.any
  459ab8:	ldp	x19, x20, [sp, #16]
  459abc:	ldp	x21, x22, [sp, #32]
  459ac0:	ldp	x29, x30, [sp], #48
  459ac4:	ret
  459ac8:	stp	x29, x30, [sp, #-48]!
  459acc:	mov	x29, sp
  459ad0:	str	x21, [sp, #32]
  459ad4:	mov	w21, w1
  459ad8:	ldr	w1, [x2]
  459adc:	stp	x19, x20, [sp, #16]
  459ae0:	mov	x20, x2
  459ae4:	cmp	w1, #0x31
  459ae8:	mov	x19, x0
  459aec:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  459af0:	b.ls	459b80 <_obstack_memory_used@@Base+0x1517c>  // b.plast
  459af4:	cmp	w1, #0x6
  459af8:	b.eq	459b80 <_obstack_memory_used@@Base+0x1517c>  // b.none
  459afc:	ldr	x1, [x0, #256]
  459b00:	cmp	x1, #0xff
  459b04:	b.eq	459b9c <_obstack_memory_used@@Base+0x15198>  // b.none
  459b08:	add	x0, x1, #0x1
  459b0c:	str	x0, [x19, #256]
  459b10:	mov	w0, #0x28                  	// #40
  459b14:	strb	w0, [x19, x1]
  459b18:	mov	x2, x20
  459b1c:	strb	w0, [x19, #264]
  459b20:	mov	w1, w21
  459b24:	mov	x0, x19
  459b28:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  459b2c:	ldr	x1, [x19, #256]
  459b30:	add	x0, x1, #0x1
  459b34:	cmp	x1, #0xff
  459b38:	b.ne	459b60 <_obstack_memory_used@@Base+0x1515c>  // b.any
  459b3c:	ldp	x3, x2, [x19, #272]
  459b40:	strb	wzr, [x19, #255]
  459b44:	mov	x0, x19
  459b48:	blr	x3
  459b4c:	ldr	x2, [x19, #320]
  459b50:	mov	x0, #0x1                   	// #1
  459b54:	mov	x1, #0x0                   	// #0
  459b58:	add	x2, x2, x0
  459b5c:	str	x2, [x19, #320]
  459b60:	str	x0, [x19, #256]
  459b64:	mov	w0, #0x29                  	// #41
  459b68:	strb	w0, [x19, x1]
  459b6c:	strb	w0, [x19, #264]
  459b70:	ldp	x19, x20, [sp, #16]
  459b74:	ldr	x21, [sp, #32]
  459b78:	ldp	x29, x30, [sp], #48
  459b7c:	ret
  459b80:	mov	x2, x20
  459b84:	mov	w1, w21
  459b88:	mov	x0, x19
  459b8c:	ldp	x19, x20, [sp, #16]
  459b90:	ldr	x21, [sp, #32]
  459b94:	ldp	x29, x30, [sp], #48
  459b98:	b	458870 <_obstack_memory_used@@Base+0x13e6c>
  459b9c:	ldp	x3, x2, [x0, #272]
  459ba0:	strb	wzr, [x0, #255]
  459ba4:	blr	x3
  459ba8:	ldr	x2, [x19, #320]
  459bac:	mov	x0, #0x1                   	// #1
  459bb0:	mov	x1, #0x0                   	// #0
  459bb4:	add	x2, x2, x0
  459bb8:	str	x2, [x19, #320]
  459bbc:	b	459b0c <_obstack_memory_used@@Base+0x15108>
  459bc0:	stp	x29, x30, [sp, #-80]!
  459bc4:	mov	x29, sp
  459bc8:	stp	x19, x20, [sp, #16]
  459bcc:	mov	x19, x0
  459bd0:	ldr	x0, [x2, #8]
  459bd4:	stp	x21, x22, [sp, #32]
  459bd8:	mov	w22, w1
  459bdc:	ldr	x0, [x0]
  459be0:	ldrb	w1, [x0]
  459be4:	cmp	w1, #0x66
  459be8:	b.ne	459d7c <_obstack_memory_used@@Base+0x15378>  // b.any
  459bec:	ldr	x1, [x3]
  459bf0:	stp	x23, x24, [sp, #48]
  459bf4:	stp	x25, x26, [sp, #64]
  459bf8:	mov	x25, #0x0                   	// #0
  459bfc:	ldp	x23, x26, [x1, #8]
  459c00:	ldr	w1, [x26]
  459c04:	cmp	w1, #0x3c
  459c08:	b.eq	459e44 <_obstack_memory_used@@Base+0x15440>  // b.none
  459c0c:	ldr	w21, [x19, #316]
  459c10:	mov	w1, #0xffffffff            	// #-1
  459c14:	str	w1, [x19, #316]
  459c18:	ldrb	w0, [x0, #1]
  459c1c:	cmp	w0, #0x6c
  459c20:	b.eq	459e64 <_obstack_memory_used@@Base+0x15460>  // b.none
  459c24:	b.hi	459d90 <_obstack_memory_used@@Base+0x1538c>  // b.pmore
  459c28:	cmp	w0, #0x4c
  459c2c:	b.eq	459c38 <_obstack_memory_used@@Base+0x15234>  // b.none
  459c30:	cmp	w0, #0x52
  459c34:	b.ne	459d5c <_obstack_memory_used@@Base+0x15358>  // b.any
  459c38:	ldr	x1, [x19, #256]
  459c3c:	add	x0, x1, #0x1
  459c40:	cmp	x1, #0xff
  459c44:	b.eq	459f24 <_obstack_memory_used@@Base+0x15520>  // b.none
  459c48:	str	x0, [x19, #256]
  459c4c:	mov	w0, #0x28                  	// #40
  459c50:	strb	w0, [x19, x1]
  459c54:	mov	x2, x26
  459c58:	strb	w0, [x19, #264]
  459c5c:	mov	w1, w22
  459c60:	mov	x0, x19
  459c64:	adrp	x20, 46d000 <_obstack_memory_used@@Base+0x285fc>
  459c68:	bl	459ac8 <_obstack_memory_used@@Base+0x150c4>
  459c6c:	add	x20, x20, #0xa30
  459c70:	mov	w1, w22
  459c74:	mov	x2, x23
  459c78:	mov	x0, x19
  459c7c:	bl	459a10 <_obstack_memory_used@@Base+0x1500c>
  459c80:	add	x26, x20, #0x3
  459c84:	mov	w24, #0x2e                  	// #46
  459c88:	ldr	x1, [x19, #256]
  459c8c:	b	459cb4 <_obstack_memory_used@@Base+0x152b0>
  459c90:	mov	x0, x1
  459c94:	add	x1, x1, #0x1
  459c98:	str	x1, [x19, #256]
  459c9c:	add	x20, x20, #0x1
  459ca0:	cmp	x26, x20
  459ca4:	strb	w24, [x19, x0]
  459ca8:	strb	w24, [x19, #264]
  459cac:	b.eq	459cf8 <_obstack_memory_used@@Base+0x152f4>  // b.none
  459cb0:	ldrb	w24, [x20]
  459cb4:	cmp	x1, #0xff
  459cb8:	b.ne	459c90 <_obstack_memory_used@@Base+0x1528c>  // b.any
  459cbc:	ldp	x3, x2, [x19, #272]
  459cc0:	strb	wzr, [x19, #255]
  459cc4:	mov	x0, x19
  459cc8:	add	x20, x20, #0x1
  459ccc:	blr	x3
  459cd0:	ldr	x2, [x19, #320]
  459cd4:	mov	x0, #0x0                   	// #0
  459cd8:	mov	x1, #0x1                   	// #1
  459cdc:	str	x1, [x19, #256]
  459ce0:	add	x2, x2, x1
  459ce4:	str	x2, [x19, #320]
  459ce8:	strb	w24, [x19, x0]
  459cec:	cmp	x26, x20
  459cf0:	strb	w24, [x19, #264]
  459cf4:	b.ne	459cb0 <_obstack_memory_used@@Base+0x152ac>  // b.any
  459cf8:	mov	x2, x23
  459cfc:	mov	w1, w22
  459d00:	mov	x0, x19
  459d04:	bl	459a10 <_obstack_memory_used@@Base+0x1500c>
  459d08:	mov	x2, x25
  459d0c:	mov	w1, w22
  459d10:	mov	x0, x19
  459d14:	bl	459ac8 <_obstack_memory_used@@Base+0x150c4>
  459d18:	ldr	x1, [x19, #256]
  459d1c:	add	x0, x1, #0x1
  459d20:	cmp	x1, #0xff
  459d24:	b.ne	459d4c <_obstack_memory_used@@Base+0x15348>  // b.any
  459d28:	ldp	x3, x2, [x19, #272]
  459d2c:	strb	wzr, [x19, #255]
  459d30:	mov	x0, x19
  459d34:	blr	x3
  459d38:	ldr	x2, [x19, #320]
  459d3c:	mov	x0, #0x1                   	// #1
  459d40:	mov	x1, #0x0                   	// #0
  459d44:	add	x2, x2, x0
  459d48:	str	x2, [x19, #320]
  459d4c:	str	x0, [x19, #256]
  459d50:	mov	w0, #0x29                  	// #41
  459d54:	strb	w0, [x19, x1]
  459d58:	strb	w0, [x19, #264]
  459d5c:	ldp	x23, x24, [sp, #48]
  459d60:	mov	w0, #0x1                   	// #1
  459d64:	ldp	x25, x26, [sp, #64]
  459d68:	str	w21, [x19, #316]
  459d6c:	ldp	x19, x20, [sp, #16]
  459d70:	ldp	x21, x22, [sp, #32]
  459d74:	ldp	x29, x30, [sp], #80
  459d78:	ret
  459d7c:	mov	w0, #0x0                   	// #0
  459d80:	ldp	x19, x20, [sp, #16]
  459d84:	ldp	x21, x22, [sp, #32]
  459d88:	ldp	x29, x30, [sp], #80
  459d8c:	ret
  459d90:	cmp	w0, #0x72
  459d94:	b.ne	459d5c <_obstack_memory_used@@Base+0x15358>  // b.any
  459d98:	ldr	x1, [x19, #256]
  459d9c:	add	x0, x1, #0x1
  459da0:	cmp	x1, #0xff
  459da4:	b.eq	459efc <_obstack_memory_used@@Base+0x154f8>  // b.none
  459da8:	str	x0, [x19, #256]
  459dac:	mov	w0, #0x28                  	// #40
  459db0:	strb	w0, [x19, x1]
  459db4:	mov	x2, x26
  459db8:	strb	w0, [x19, #264]
  459dbc:	mov	w1, w22
  459dc0:	mov	x0, x19
  459dc4:	adrp	x20, 46d000 <_obstack_memory_used@@Base+0x285fc>
  459dc8:	bl	459ac8 <_obstack_memory_used@@Base+0x150c4>
  459dcc:	add	x20, x20, #0xb50
  459dd0:	mov	w1, w22
  459dd4:	mov	x2, x23
  459dd8:	mov	x0, x19
  459ddc:	bl	459a10 <_obstack_memory_used@@Base+0x1500c>
  459de0:	add	x22, x20, #0x4
  459de4:	mov	w24, #0x2e                  	// #46
  459de8:	ldr	x1, [x19, #256]
  459dec:	b	459e14 <_obstack_memory_used@@Base+0x15410>
  459df0:	mov	x0, x1
  459df4:	add	x1, x1, #0x1
  459df8:	str	x1, [x19, #256]
  459dfc:	add	x20, x20, #0x1
  459e00:	strb	w24, [x19, x0]
  459e04:	cmp	x20, x22
  459e08:	strb	w24, [x19, #264]
  459e0c:	b.eq	459d5c <_obstack_memory_used@@Base+0x15358>  // b.none
  459e10:	ldrb	w24, [x20]
  459e14:	cmp	x1, #0xff
  459e18:	b.ne	459df0 <_obstack_memory_used@@Base+0x153ec>  // b.any
  459e1c:	ldp	x3, x2, [x19, #272]
  459e20:	strb	wzr, [x19, #255]
  459e24:	mov	x0, x19
  459e28:	blr	x3
  459e2c:	ldr	x2, [x19, #320]
  459e30:	mov	x1, #0x1                   	// #1
  459e34:	mov	x0, #0x0                   	// #0
  459e38:	add	x2, x2, x1
  459e3c:	str	x2, [x19, #320]
  459e40:	b	459df8 <_obstack_memory_used@@Base+0x153f4>
  459e44:	ldr	w21, [x19, #316]
  459e48:	mov	w1, #0xffffffff            	// #-1
  459e4c:	ldr	x25, [x26, #16]
  459e50:	ldr	x26, [x26, #8]
  459e54:	str	w1, [x19, #316]
  459e58:	ldrb	w0, [x0, #1]
  459e5c:	cmp	w0, #0x6c
  459e60:	b.ne	459c24 <_obstack_memory_used@@Base+0x15220>  // b.any
  459e64:	adrp	x20, 46d000 <_obstack_memory_used@@Base+0x285fc>
  459e68:	add	x20, x20, #0xb48
  459e6c:	add	x25, x20, #0x4
  459e70:	mov	w24, #0x28                  	// #40
  459e74:	ldr	x1, [x19, #256]
  459e78:	b	459ea0 <_obstack_memory_used@@Base+0x1549c>
  459e7c:	mov	x0, x1
  459e80:	add	x1, x1, #0x1
  459e84:	str	x1, [x19, #256]
  459e88:	add	x20, x20, #0x1
  459e8c:	cmp	x25, x20
  459e90:	strb	w24, [x19, x0]
  459e94:	strb	w24, [x19, #264]
  459e98:	b.eq	459ee4 <_obstack_memory_used@@Base+0x154e0>  // b.none
  459e9c:	ldrb	w24, [x20]
  459ea0:	cmp	x1, #0xff
  459ea4:	b.ne	459e7c <_obstack_memory_used@@Base+0x15478>  // b.any
  459ea8:	ldp	x3, x2, [x19, #272]
  459eac:	strb	wzr, [x19, #255]
  459eb0:	mov	x0, x19
  459eb4:	add	x20, x20, #0x1
  459eb8:	blr	x3
  459ebc:	ldr	x2, [x19, #320]
  459ec0:	mov	x0, #0x0                   	// #0
  459ec4:	mov	x1, #0x1                   	// #1
  459ec8:	str	x1, [x19, #256]
  459ecc:	add	x2, x2, x1
  459ed0:	str	x2, [x19, #320]
  459ed4:	strb	w24, [x19, x0]
  459ed8:	cmp	x25, x20
  459edc:	strb	w24, [x19, #264]
  459ee0:	b.ne	459e9c <_obstack_memory_used@@Base+0x15498>  // b.any
  459ee4:	mov	x2, x23
  459ee8:	mov	w1, w22
  459eec:	mov	x0, x19
  459ef0:	bl	459a10 <_obstack_memory_used@@Base+0x1500c>
  459ef4:	mov	x2, x26
  459ef8:	b	459d0c <_obstack_memory_used@@Base+0x15308>
  459efc:	ldp	x3, x2, [x19, #272]
  459f00:	strb	wzr, [x19, #255]
  459f04:	mov	x0, x19
  459f08:	blr	x3
  459f0c:	ldr	x2, [x19, #320]
  459f10:	mov	x0, #0x1                   	// #1
  459f14:	mov	x1, #0x0                   	// #0
  459f18:	add	x2, x2, x0
  459f1c:	str	x2, [x19, #320]
  459f20:	b	459da8 <_obstack_memory_used@@Base+0x153a4>
  459f24:	ldp	x3, x2, [x19, #272]
  459f28:	strb	wzr, [x19, #255]
  459f2c:	mov	x0, x19
  459f30:	blr	x3
  459f34:	ldr	x2, [x19, #320]
  459f38:	mov	x0, #0x1                   	// #1
  459f3c:	mov	x1, #0x0                   	// #0
  459f40:	add	x2, x2, x0
  459f44:	str	x2, [x19, #320]
  459f48:	b	459c48 <_obstack_memory_used@@Base+0x15244>
  459f4c:	nop
  459f50:	sub	sp, sp, #0x230
  459f54:	stp	x29, x30, [sp]
  459f58:	mov	x29, sp
  459f5c:	stp	x19, x20, [sp, #16]
  459f60:	mov	x19, x0
  459f64:	mov	x20, x1
  459f68:	stp	x21, x22, [sp, #32]
  459f6c:	mov	x21, x2
  459f70:	stp	x23, x24, [sp, #48]
  459f74:	stp	x25, x26, [sp, #64]
  459f78:	str	x27, [sp, #80]
  459f7c:	ldrb	w24, [x0]
  459f80:	cmp	w24, #0x5f
  459f84:	b.eq	45a130 <_obstack_memory_used@@Base+0x1572c>  // b.none
  459f88:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x285fc>
  459f8c:	mov	x0, x19
  459f90:	add	x1, x1, #0xb58
  459f94:	mov	x2, #0x8                   	// #8
  459f98:	mov	w23, #0x0                   	// #0
  459f9c:	bl	4028d0 <strncmp@plt>
  459fa0:	cbnz	w0, 459ff0 <_obstack_memory_used@@Base+0x155ec>
  459fa4:	ldrb	w0, [x19, #8]
  459fa8:	mov	w2, #0x5f                  	// #95
  459fac:	mov	w1, #0x24                  	// #36
  459fb0:	cmp	w0, #0x2e
  459fb4:	ccmp	w0, w2, #0x4, ne  // ne = any
  459fb8:	ccmp	w0, w1, #0x4, ne  // ne = any
  459fbc:	b.ne	459ff0 <_obstack_memory_used@@Base+0x155ec>  // b.any
  459fc0:	ldrb	w0, [x19, #9]
  459fc4:	mov	w1, #0x49                  	// #73
  459fc8:	cmp	w0, #0x44
  459fcc:	ccmp	w0, w1, #0x4, ne  // ne = any
  459fd0:	b.ne	459ff0 <_obstack_memory_used@@Base+0x155ec>  // b.any
  459fd4:	ldrb	w1, [x19, #10]
  459fd8:	cmp	w1, w2
  459fdc:	b.ne	459ff0 <_obstack_memory_used@@Base+0x155ec>  // b.any
  459fe0:	cmp	w0, #0x49
  459fe4:	cset	w23, ne  // ne = any
  459fe8:	add	w23, w23, #0x2
  459fec:	nop
  459ff0:	mov	x0, x19
  459ff4:	bl	402700 <strlen@plt>
  459ff8:	mov	x3, x0
  459ffc:	mov	w1, #0x11                  	// #17
  45a000:	add	x0, x19, x0
  45a004:	stp	x19, x0, [x29, #96]
  45a008:	lsl	w4, w3, #1
  45a00c:	str	w1, [x29, #112]
  45a010:	cmp	w4, #0x800
  45a014:	str	x19, [x29, #120]
  45a018:	mov	w0, #0x0                   	// #0
  45a01c:	stp	wzr, w4, [x29, #136]
  45a020:	stp	wzr, w3, [x29, #152]
  45a024:	stp	xzr, xzr, [x29, #160]
  45a028:	str	xzr, [x29, #176]
  45a02c:	b.hi	45a10c <_obstack_memory_used@@Base+0x15708>  // b.pmore
  45a030:	mov	x22, sp
  45a034:	mov	w27, #0x18                  	// #24
  45a038:	sbfiz	x3, x3, #3, #32
  45a03c:	cmp	w23, #0x1
  45a040:	add	x3, x3, #0xf
  45a044:	smsubl	x0, w4, w27, x22
  45a048:	and	x3, x3, #0xfffffffffffffff0
  45a04c:	mov	sp, x0
  45a050:	mov	x25, sp
  45a054:	sub	sp, sp, x3
  45a058:	mov	x0, sp
  45a05c:	str	x25, [x29, #128]
  45a060:	str	x0, [x29, #144]
  45a064:	b.eq	45a170 <_obstack_memory_used@@Base+0x1576c>  // b.none
  45a068:	sub	w0, w23, #0x2
  45a06c:	cmp	w0, #0x1
  45a070:	b.hi	45a1b4 <_obstack_memory_used@@Base+0x157b0>  // b.pmore
  45a074:	cmp	w23, #0x2
  45a078:	ldrb	w0, [x19, #11]
  45a07c:	add	x24, x19, #0xb
  45a080:	str	x24, [x29, #120]
  45a084:	cset	w1, ne  // ne = any
  45a088:	cmp	w0, #0x5f
  45a08c:	add	w23, w1, #0x44
  45a090:	b.eq	45a144 <_obstack_memory_used@@Base+0x15740>  // b.none
  45a094:	cmp	w4, #0x0
  45a098:	b.le	45a298 <_obstack_memory_used@@Base+0x15894>
  45a09c:	mov	x0, x24
  45a0a0:	bl	402700 <strlen@plt>
  45a0a4:	mov	w1, #0x1                   	// #1
  45a0a8:	str	wzr, [x25, #4]
  45a0ac:	str	w1, [x29, #136]
  45a0b0:	cmp	w0, #0x0
  45a0b4:	b.le	45a298 <_obstack_memory_used@@Base+0x15894>
  45a0b8:	add	x26, x29, #0x60
  45a0bc:	str	wzr, [x25]
  45a0c0:	str	x24, [x25, #8]
  45a0c4:	str	w0, [x25, #16]
  45a0c8:	mov	w1, w23
  45a0cc:	mov	x2, x25
  45a0d0:	mov	x3, #0x0                   	// #0
  45a0d4:	mov	x0, x26
  45a0d8:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  45a0dc:	mov	x19, x0
  45a0e0:	ldr	x23, [x29, #120]
  45a0e4:	mov	x0, x23
  45a0e8:	bl	402700 <strlen@plt>
  45a0ec:	add	x1, x23, x0
  45a0f0:	str	x1, [x29, #120]
  45a0f4:	ldrb	w0, [x23, x0]
  45a0f8:	cmp	w0, #0x0
  45a0fc:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  45a100:	b.ne	45a1d4 <_obstack_memory_used@@Base+0x157d0>  // b.any
  45a104:	mov	sp, x22
  45a108:	mov	w0, #0x0                   	// #0
  45a10c:	mov	sp, x29
  45a110:	ldp	x29, x30, [sp]
  45a114:	ldp	x19, x20, [sp, #16]
  45a118:	ldp	x21, x22, [sp, #32]
  45a11c:	ldp	x23, x24, [sp, #48]
  45a120:	ldp	x25, x26, [sp, #64]
  45a124:	ldr	x27, [sp, #80]
  45a128:	add	sp, sp, #0x230
  45a12c:	ret
  45a130:	ldrb	w0, [x0, #1]
  45a134:	mov	w23, #0x1                   	// #1
  45a138:	cmp	w0, #0x5a
  45a13c:	b.ne	459f88 <_obstack_memory_used@@Base+0x15584>  // b.any
  45a140:	b	459ff0 <_obstack_memory_used@@Base+0x155ec>
  45a144:	ldrb	w0, [x19, #12]
  45a148:	cmp	w0, #0x5a
  45a14c:	b.ne	45a094 <_obstack_memory_used@@Base+0x15690>  // b.any
  45a150:	add	x26, x29, #0x60
  45a154:	add	x19, x19, #0xd
  45a158:	mov	x0, x26
  45a15c:	mov	w1, #0x0                   	// #0
  45a160:	str	x19, [x29, #120]
  45a164:	bl	4523e8 <_obstack_memory_used@@Base+0xd9e4>
  45a168:	mov	x25, x0
  45a16c:	b	45a0c8 <_obstack_memory_used@@Base+0x156c4>
  45a170:	cmp	w24, #0x5f
  45a174:	b.ne	45a104 <_obstack_memory_used@@Base+0x15700>  // b.any
  45a178:	ldrb	w0, [x19, #1]
  45a17c:	cmp	w0, #0x5a
  45a180:	b.ne	45a104 <_obstack_memory_used@@Base+0x15700>  // b.any
  45a184:	add	x26, x29, #0x60
  45a188:	add	x19, x19, #0x2
  45a18c:	mov	w1, w23
  45a190:	mov	x0, x26
  45a194:	str	x19, [x29, #120]
  45a198:	bl	4523e8 <_obstack_memory_used@@Base+0xd9e4>
  45a19c:	ldr	w3, [x29, #112]
  45a1a0:	mov	x19, x0
  45a1a4:	tbnz	w3, #0, 45a2a4 <_obstack_memory_used@@Base+0x158a0>
  45a1a8:	ldr	x0, [x29, #120]
  45a1ac:	ldrb	w0, [x0]
  45a1b0:	b	45a0f8 <_obstack_memory_used@@Base+0x156f4>
  45a1b4:	add	x0, x29, #0x60
  45a1b8:	bl	453130 <_obstack_memory_used@@Base+0xe72c>
  45a1bc:	ldr	x3, [x29, #120]
  45a1c0:	mov	x19, x0
  45a1c4:	ldrb	w0, [x3]
  45a1c8:	cmp	w0, #0x0
  45a1cc:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  45a1d0:	b.eq	45a104 <_obstack_memory_used@@Base+0x15700>  // b.none
  45a1d4:	add	x2, x29, #0x208
  45a1d8:	add	x23, x29, #0xb8
  45a1dc:	mov	x0, x23
  45a1e0:	mov	x1, x19
  45a1e4:	str	xzr, [x29, #440]
  45a1e8:	stp	xzr, xzr, [x2]
  45a1ec:	stp	xzr, xzr, [x2, #16]
  45a1f0:	strb	wzr, [x29, #448]
  45a1f4:	stp	x20, x21, [x29, #456]
  45a1f8:	stp	xzr, xzr, [x29, #472]
  45a1fc:	stp	xzr, xzr, [x29, #488]
  45a200:	stp	xzr, xzr, [x29, #504]
  45a204:	bl	450700 <_obstack_memory_used@@Base+0xbcfc>
  45a208:	ldr	w0, [x29, #492]
  45a20c:	cmp	w0, #0x7ff
  45a210:	b.gt	45a218 <_obstack_memory_used@@Base+0x15814>
  45a214:	str	wzr, [x29, #492]
  45a218:	ldr	w3, [x29, #532]
  45a21c:	mov	w4, #0x1                   	// #1
  45a220:	ldr	w6, [x29, #548]
  45a224:	mov	x20, sp
  45a228:	cmp	w3, #0x0
  45a22c:	mov	x2, x19
  45a230:	csel	w5, w3, w4, gt
  45a234:	mov	x0, x23
  45a238:	mov	w1, #0x11                  	// #17
  45a23c:	str	xzr, [x29, #552]
  45a240:	mul	w3, w3, w6
  45a244:	sub	sp, sp, w5, sxtw #4
  45a248:	str	w3, [x29, #548]
  45a24c:	mov	x5, sp
  45a250:	cmp	w3, #0x0
  45a254:	str	x5, [x29, #520]
  45a258:	csel	w3, w3, w4, gt
  45a25c:	sub	sp, sp, w3, sxtw #4
  45a260:	mov	x3, sp
  45a264:	str	x3, [x29, #536]
  45a268:	bl	458870 <_obstack_memory_used@@Base+0x13e6c>
  45a26c:	mov	sp, x20
  45a270:	ldr	x1, [x29, #440]
  45a274:	mov	x0, x23
  45a278:	ldp	x3, x2, [x29, #456]
  45a27c:	strb	wzr, [x23, x1]
  45a280:	blr	x3
  45a284:	ldr	w0, [x29, #488]
  45a288:	mov	sp, x22
  45a28c:	cmp	w0, #0x0
  45a290:	cset	w0, eq  // eq = none
  45a294:	b	45a10c <_obstack_memory_used@@Base+0x15708>
  45a298:	add	x26, x29, #0x60
  45a29c:	mov	x25, #0x0                   	// #0
  45a2a0:	b	45a0c8 <_obstack_memory_used@@Base+0x156c4>
  45a2a4:	ldr	x6, [x29, #120]
  45a2a8:	ldrb	w0, [x6]
  45a2ac:	cmp	w0, #0x2e
  45a2b0:	b.ne	45a0f8 <_obstack_memory_used@@Base+0x156f4>  // b.any
  45a2b4:	nop
  45a2b8:	ldrb	w0, [x6, #1]
  45a2bc:	sub	w1, w0, #0x61
  45a2c0:	cmp	w0, #0x5f
  45a2c4:	and	w1, w1, #0xff
  45a2c8:	ccmp	w1, #0x19, #0x0, ne  // ne = any
  45a2cc:	b.ls	45a3ac <_obstack_memory_used@@Base+0x159a8>  // b.plast
  45a2d0:	sub	w0, w0, #0x30
  45a2d4:	and	w0, w0, #0xff
  45a2d8:	cmp	w0, #0x9
  45a2dc:	ldrb	w0, [x6]
  45a2e0:	b.hi	45a0f8 <_obstack_memory_used@@Base+0x156f4>  // b.pmore
  45a2e4:	mov	x3, x6
  45a2e8:	cmp	w0, #0x2e
  45a2ec:	b.ne	45a33c <_obstack_memory_used@@Base+0x15938>  // b.any
  45a2f0:	ldrb	w4, [x3, #1]
  45a2f4:	sub	w4, w4, #0x30
  45a2f8:	and	w4, w4, #0xff
  45a2fc:	cmp	w4, #0x9
  45a300:	b.hi	45a33c <_obstack_memory_used@@Base+0x15938>  // b.pmore
  45a304:	ldrb	w4, [x3, #2]
  45a308:	add	x3, x3, #0x2
  45a30c:	sub	w5, w4, #0x30
  45a310:	and	w5, w5, #0xff
  45a314:	cmp	w5, #0x9
  45a318:	b.hi	45a334 <_obstack_memory_used@@Base+0x15930>  // b.pmore
  45a31c:	nop
  45a320:	ldrb	w4, [x3, #1]!
  45a324:	sub	w5, w4, #0x30
  45a328:	and	w5, w5, #0xff
  45a32c:	cmp	w5, #0x9
  45a330:	b.ls	45a320 <_obstack_memory_used@@Base+0x1591c>  // b.plast
  45a334:	cmp	w4, #0x2e
  45a338:	b.eq	45a2f0 <_obstack_memory_used@@Base+0x158ec>  // b.none
  45a33c:	ldp	w0, w1, [x29, #136]
  45a340:	str	x3, [x29, #120]
  45a344:	sub	x4, x3, x6
  45a348:	cmp	w0, w1
  45a34c:	b.ge	45a3a4 <_obstack_memory_used@@Base+0x159a0>  // b.tcont
  45a350:	ldr	x2, [x29, #128]
  45a354:	smull	x1, w0, w27
  45a358:	add	w0, w0, #0x1
  45a35c:	cmp	w4, #0x0
  45a360:	add	x3, x2, x1
  45a364:	str	wzr, [x3, #4]
  45a368:	str	w0, [x29, #136]
  45a36c:	b.le	45a3a4 <_obstack_memory_used@@Base+0x159a0>
  45a370:	str	xzr, [x2, x1]
  45a374:	str	x6, [x3, #8]
  45a378:	str	w4, [x3, #16]
  45a37c:	mov	x2, x19
  45a380:	mov	x0, x26
  45a384:	mov	w1, #0x4e                  	// #78
  45a388:	bl	450610 <_obstack_memory_used@@Base+0xbc0c>
  45a38c:	ldr	x6, [x29, #120]
  45a390:	mov	x19, x0
  45a394:	ldrb	w0, [x6]
  45a398:	cmp	w0, #0x2e
  45a39c:	b.eq	45a2b8 <_obstack_memory_used@@Base+0x158b4>  // b.none
  45a3a0:	b	45a0f8 <_obstack_memory_used@@Base+0x156f4>
  45a3a4:	mov	x3, #0x0                   	// #0
  45a3a8:	b	45a37c <_obstack_memory_used@@Base+0x15978>
  45a3ac:	ldrb	w0, [x6, #2]
  45a3b0:	add	x3, x6, #0x2
  45a3b4:	b	45a3bc <_obstack_memory_used@@Base+0x159b8>
  45a3b8:	ldrb	w0, [x3, #1]!
  45a3bc:	sub	w1, w0, #0x61
  45a3c0:	cmp	w0, #0x5f
  45a3c4:	and	w1, w1, #0xff
  45a3c8:	ccmp	w1, #0x19, #0x0, ne  // ne = any
  45a3cc:	b.ls	45a3b8 <_obstack_memory_used@@Base+0x159b4>  // b.plast
  45a3d0:	b	45a2e8 <_obstack_memory_used@@Base+0x158e4>
  45a3d4:	nop
  45a3d8:	stp	x29, x30, [sp, #-96]!
  45a3dc:	mov	x29, sp
  45a3e0:	stp	x21, x22, [sp, #32]
  45a3e4:	mov	x21, x3
  45a3e8:	cbz	x0, 45a4b8 <_obstack_memory_used@@Base+0x15ab4>
  45a3ec:	stp	x19, x20, [sp, #16]
  45a3f0:	cmp	x1, #0x0
  45a3f4:	mov	x19, x1
  45a3f8:	mov	x20, x2
  45a3fc:	ccmp	x2, #0x0, #0x0, ne  // ne = any
  45a400:	b.eq	45a4b4 <_obstack_memory_used@@Base+0x15ab0>  // b.none
  45a404:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xc5fc>
  45a408:	add	x2, sp, #0x40
  45a40c:	add	x1, x1, #0x218
  45a410:	stp	xzr, xzr, [sp, #64]
  45a414:	str	xzr, [sp, #80]
  45a418:	str	wzr, [sp, #88]
  45a41c:	bl	459f50 <_obstack_memory_used@@Base+0x1554c>
  45a420:	cbz	w0, 45a50c <_obstack_memory_used@@Base+0x15b08>
  45a424:	ldr	w0, [sp, #88]
  45a428:	str	x23, [sp, #48]
  45a42c:	ldr	x22, [sp, #64]
  45a430:	cbnz	w0, 45a490 <_obstack_memory_used@@Base+0x15a8c>
  45a434:	ldr	x23, [sp, #80]
  45a438:	cbz	x22, 45a530 <_obstack_memory_used@@Base+0x15b2c>
  45a43c:	cbz	x19, 45a500 <_obstack_memory_used@@Base+0x15afc>
  45a440:	mov	x0, x22
  45a444:	bl	402700 <strlen@plt>
  45a448:	ldr	x1, [x20]
  45a44c:	cmp	x0, x1
  45a450:	b.cs	45a4d8 <_obstack_memory_used@@Base+0x15ad4>  // b.hs, b.nlast
  45a454:	add	x2, x0, #0x1
  45a458:	mov	x1, x22
  45a45c:	mov	x0, x19
  45a460:	bl	4026a0 <memcpy@plt>
  45a464:	mov	x0, x22
  45a468:	mov	x22, x19
  45a46c:	bl	402b30 <free@plt>
  45a470:	cbz	x21, 45a4e8 <_obstack_memory_used@@Base+0x15ae4>
  45a474:	ldp	x19, x20, [sp, #16]
  45a478:	ldr	x23, [sp, #48]
  45a47c:	str	wzr, [x21]
  45a480:	mov	x0, x22
  45a484:	ldp	x21, x22, [sp, #32]
  45a488:	ldp	x29, x30, [sp], #96
  45a48c:	ret
  45a490:	mov	x23, #0x1                   	// #1
  45a494:	cbnz	x22, 45a43c <_obstack_memory_used@@Base+0x15a38>
  45a498:	cbz	x21, 45a554 <_obstack_memory_used@@Base+0x15b50>
  45a49c:	mov	w0, #0xffffffff            	// #-1
  45a4a0:	mov	x22, #0x0                   	// #0
  45a4a4:	ldp	x19, x20, [sp, #16]
  45a4a8:	ldr	x23, [sp, #48]
  45a4ac:	str	w0, [x21]
  45a4b0:	b	45a480 <_obstack_memory_used@@Base+0x15a7c>
  45a4b4:	ldp	x19, x20, [sp, #16]
  45a4b8:	cbz	x21, 45a51c <_obstack_memory_used@@Base+0x15b18>
  45a4bc:	mov	w0, #0xfffffffd            	// #-3
  45a4c0:	str	w0, [x21]
  45a4c4:	mov	x22, #0x0                   	// #0
  45a4c8:	mov	x0, x22
  45a4cc:	ldp	x21, x22, [sp, #32]
  45a4d0:	ldp	x29, x30, [sp], #96
  45a4d4:	ret
  45a4d8:	mov	x0, x19
  45a4dc:	bl	402b30 <free@plt>
  45a4e0:	str	x23, [x20]
  45a4e4:	cbnz	x21, 45a474 <_obstack_memory_used@@Base+0x15a70>
  45a4e8:	mov	x0, x22
  45a4ec:	ldp	x19, x20, [sp, #16]
  45a4f0:	ldp	x21, x22, [sp, #32]
  45a4f4:	ldr	x23, [sp, #48]
  45a4f8:	ldp	x29, x30, [sp], #96
  45a4fc:	ret
  45a500:	cbz	x20, 45a470 <_obstack_memory_used@@Base+0x15a6c>
  45a504:	str	x23, [x20]
  45a508:	b	45a4e4 <_obstack_memory_used@@Base+0x15ae0>
  45a50c:	ldr	x0, [sp, #64]
  45a510:	bl	402b30 <free@plt>
  45a514:	cbnz	x21, 45a540 <_obstack_memory_used@@Base+0x15b3c>
  45a518:	ldp	x19, x20, [sp, #16]
  45a51c:	mov	x22, #0x0                   	// #0
  45a520:	mov	x0, x22
  45a524:	ldp	x21, x22, [sp, #32]
  45a528:	ldp	x29, x30, [sp], #96
  45a52c:	ret
  45a530:	cbz	x21, 45a554 <_obstack_memory_used@@Base+0x15b50>
  45a534:	cmp	x23, #0x1
  45a538:	b.eq	45a49c <_obstack_memory_used@@Base+0x15a98>  // b.none
  45a53c:	ldr	x23, [sp, #48]
  45a540:	mov	w0, #0xfffffffe            	// #-2
  45a544:	mov	x22, #0x0                   	// #0
  45a548:	ldp	x19, x20, [sp, #16]
  45a54c:	str	w0, [x21]
  45a550:	b	45a480 <_obstack_memory_used@@Base+0x15a7c>
  45a554:	mov	x22, #0x0                   	// #0
  45a558:	ldp	x19, x20, [sp, #16]
  45a55c:	ldr	x23, [sp, #48]
  45a560:	b	45a520 <_obstack_memory_used@@Base+0x15b1c>
  45a564:	nop
  45a568:	cmp	x0, #0x0
  45a56c:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  45a570:	b.eq	45a594 <_obstack_memory_used@@Base+0x15b90>  // b.none
  45a574:	stp	x29, x30, [sp, #-16]!
  45a578:	mov	x29, sp
  45a57c:	bl	459f50 <_obstack_memory_used@@Base+0x1554c>
  45a580:	cmp	w0, #0x0
  45a584:	ldp	x29, x30, [sp], #16
  45a588:	mov	w0, #0xfffffffe            	// #-2
  45a58c:	csel	w0, wzr, w0, ne  // ne = any
  45a590:	ret
  45a594:	mov	w0, #0xfffffffd            	// #-3
  45a598:	ret
  45a59c:	nop
  45a5a0:	stp	x29, x30, [sp, #-16]!
  45a5a4:	mov	x29, sp
  45a5a8:	bl	44a690 <_obstack_memory_used@@Base+0x5c8c>
  45a5ac:	ldr	x0, [x0]
  45a5b0:	cbz	x0, 45a5c4 <_obstack_memory_used@@Base+0x15bc0>
  45a5b4:	ldr	x1, [x0, #80]
  45a5b8:	ldr	x0, [x0]
  45a5bc:	tbz	w1, #0, 45a5c4 <_obstack_memory_used@@Base+0x15bc0>
  45a5c0:	ldur	x0, [x0, #-112]
  45a5c4:	ldp	x29, x30, [sp], #16
  45a5c8:	ret
  45a5cc:	nop
  45a5d0:	and	w5, w0, #0xff
  45a5d4:	cmp	w5, #0x50
  45a5d8:	b.eq	45a6f0 <_obstack_memory_used@@Base+0x15cec>  // b.none
  45a5dc:	and	w4, w5, #0xf
  45a5e0:	cmp	w4, #0x4
  45a5e4:	b.eq	45a600 <_obstack_memory_used@@Base+0x15bfc>  // b.none
  45a5e8:	b.ls	45a614 <_obstack_memory_used@@Base+0x15c10>  // b.plast
  45a5ec:	cmp	w4, #0xb
  45a5f0:	b.eq	45a714 <_obstack_memory_used@@Base+0x15d10>  // b.none
  45a5f4:	b.ls	45a670 <_obstack_memory_used@@Base+0x15c6c>  // b.plast
  45a5f8:	cmp	w4, #0xc
  45a5fc:	b.ne	45a724 <_obstack_memory_used@@Base+0x15d20>  // b.any
  45a600:	mov	x0, x2
  45a604:	ldr	x4, [x0], #8
  45a608:	cbnz	x4, 45a6d0 <_obstack_memory_used@@Base+0x15ccc>
  45a60c:	str	x4, [x3]
  45a610:	ret
  45a614:	cmp	w4, #0x2
  45a618:	b.eq	45a704 <_obstack_memory_used@@Base+0x15d00>  // b.none
  45a61c:	b.ls	45a638 <_obstack_memory_used@@Base+0x15c34>  // b.plast
  45a620:	cmp	w4, #0x3
  45a624:	b.ne	45a724 <_obstack_memory_used@@Base+0x15d20>  // b.any
  45a628:	mov	x0, x2
  45a62c:	ldr	w4, [x0], #4
  45a630:	cbz	x4, 45a60c <_obstack_memory_used@@Base+0x15c08>
  45a634:	b	45a6d0 <_obstack_memory_used@@Base+0x15ccc>
  45a638:	cbz	w4, 45a600 <_obstack_memory_used@@Base+0x15bfc>
  45a63c:	cmp	w4, #0x1
  45a640:	b.ne	45a724 <_obstack_memory_used@@Base+0x15d20>  // b.any
  45a644:	mov	x0, x2
  45a648:	mov	x4, #0x0                   	// #0
  45a64c:	mov	w7, #0x0                   	// #0
  45a650:	ldrb	w8, [x0], #1
  45a654:	and	x6, x8, #0x7f
  45a658:	lsl	x6, x6, x7
  45a65c:	add	w7, w7, #0x7
  45a660:	orr	x4, x4, x6
  45a664:	tbnz	w8, #7, 45a650 <_obstack_memory_used@@Base+0x15c4c>
  45a668:	cbz	x4, 45a60c <_obstack_memory_used@@Base+0x15c08>
  45a66c:	b	45a6d0 <_obstack_memory_used@@Base+0x15ccc>
  45a670:	cmp	w4, #0x9
  45a674:	b.eq	45a690 <_obstack_memory_used@@Base+0x15c8c>  // b.none
  45a678:	cmp	w4, #0xa
  45a67c:	b.ne	45a724 <_obstack_memory_used@@Base+0x15d20>  // b.any
  45a680:	mov	x0, x2
  45a684:	ldrsh	x4, [x0], #2
  45a688:	cbz	x4, 45a60c <_obstack_memory_used@@Base+0x15c08>
  45a68c:	b	45a6d0 <_obstack_memory_used@@Base+0x15ccc>
  45a690:	mov	x0, x2
  45a694:	mov	x4, #0x0                   	// #0
  45a698:	mov	w7, #0x0                   	// #0
  45a69c:	ldrb	w8, [x0], #1
  45a6a0:	and	x6, x8, #0x7f
  45a6a4:	lsl	x6, x6, x7
  45a6a8:	add	w7, w7, #0x7
  45a6ac:	orr	x4, x4, x6
  45a6b0:	tbnz	w8, #7, 45a69c <_obstack_memory_used@@Base+0x15c98>
  45a6b4:	cmp	w7, #0x3f
  45a6b8:	b.hi	45a608 <_obstack_memory_used@@Base+0x15c04>  // b.pmore
  45a6bc:	tbz	w8, #6, 45a608 <_obstack_memory_used@@Base+0x15c04>
  45a6c0:	mov	x6, #0xffffffffffffffff    	// #-1
  45a6c4:	lsl	x7, x6, x7
  45a6c8:	orr	x4, x4, x7
  45a6cc:	nop
  45a6d0:	and	w6, w5, #0x70
  45a6d4:	cmp	w6, #0x10
  45a6d8:	csel	x1, x2, x1, eq  // eq = none
  45a6dc:	add	x4, x4, x1
  45a6e0:	tbz	w5, #7, 45a60c <_obstack_memory_used@@Base+0x15c08>
  45a6e4:	ldr	x4, [x4]
  45a6e8:	str	x4, [x3]
  45a6ec:	ret
  45a6f0:	add	x0, x2, #0x7
  45a6f4:	and	x0, x0, #0xfffffffffffffff8
  45a6f8:	ldr	x4, [x0], #8
  45a6fc:	str	x4, [x3]
  45a700:	ret
  45a704:	mov	x0, x2
  45a708:	ldrh	w4, [x0], #2
  45a70c:	cbz	x4, 45a60c <_obstack_memory_used@@Base+0x15c08>
  45a710:	b	45a6d0 <_obstack_memory_used@@Base+0x15ccc>
  45a714:	mov	x0, x2
  45a718:	ldrsw	x4, [x0], #4
  45a71c:	cbz	x4, 45a60c <_obstack_memory_used@@Base+0x15c08>
  45a720:	b	45a6d0 <_obstack_memory_used@@Base+0x15ccc>
  45a724:	stp	x29, x30, [sp, #-16]!
  45a728:	mov	x29, sp
  45a72c:	bl	402a50 <abort@plt>
  45a730:	and	w0, w0, #0xff
  45a734:	cmp	w0, #0xff
  45a738:	b.eq	45a784 <_obstack_memory_used@@Base+0x15d80>  // b.none
  45a73c:	and	w2, w0, #0x70
  45a740:	cmp	w2, #0x30
  45a744:	b.eq	45a79c <_obstack_memory_used@@Base+0x15d98>  // b.none
  45a748:	b.hi	45a75c <_obstack_memory_used@@Base+0x15d58>  // b.pmore
  45a74c:	cmp	w2, #0x20
  45a750:	b.ne	45a76c <_obstack_memory_used@@Base+0x15d68>  // b.any
  45a754:	ldr	x0, [x1, #808]
  45a758:	ret
  45a75c:	cmp	w2, #0x40
  45a760:	b.ne	45a78c <_obstack_memory_used@@Base+0x15d88>  // b.any
  45a764:	ldr	x0, [x1, #824]
  45a768:	ret
  45a76c:	b.hi	45a778 <_obstack_memory_used@@Base+0x15d74>  // b.pmore
  45a770:	tst	w0, #0x60
  45a774:	b.eq	45a784 <_obstack_memory_used@@Base+0x15d80>  // b.none
  45a778:	stp	x29, x30, [sp, #-16]!
  45a77c:	mov	x29, sp
  45a780:	bl	402a50 <abort@plt>
  45a784:	mov	x0, #0x0                   	// #0
  45a788:	ret
  45a78c:	cmp	w2, #0x50
  45a790:	mov	x0, #0x0                   	// #0
  45a794:	b.ne	45a778 <_obstack_memory_used@@Base+0x15d74>  // b.any
  45a798:	ret
  45a79c:	ldr	x0, [x1, #816]
  45a7a0:	ret
  45a7a4:	nop
  45a7a8:	str	xzr, [x3, #1568]
  45a7ac:	cmp	x0, x1
  45a7b0:	b.cs	45af40 <_obstack_memory_used@@Base+0x1653c>  // b.hs, b.nlast
  45a7b4:	stp	x29, x30, [sp, #-112]!
  45a7b8:	mov	x29, sp
  45a7bc:	stp	x21, x22, [sp, #32]
  45a7c0:	mov	x21, x2
  45a7c4:	mov	x22, x1
  45a7c8:	stp	x19, x20, [sp, #16]
  45a7cc:	mov	x20, x3
  45a7d0:	ldr	x2, [x21, #792]
  45a7d4:	stp	x23, x24, [sp, #48]
  45a7d8:	adrp	x23, 46e000 <_obstack_memory_used@@Base+0x295fc>
  45a7dc:	ldr	x5, [x21, #832]
  45a7e0:	stp	x25, x26, [sp, #64]
  45a7e4:	add	x23, x23, #0x29c
  45a7e8:	ldr	x1, [x20, #1608]
  45a7ec:	stp	x27, x28, [sp, #80]
  45a7f0:	add	x5, x2, x5, lsr #63
  45a7f4:	add	x27, x29, #0x68
  45a7f8:	cmp	x1, x5
  45a7fc:	mov	x25, #0x0                   	// #0
  45a800:	mov	w24, #0x1                   	// #1
  45a804:	mov	w26, #0x5                   	// #5
  45a808:	b.cs	45a8d8 <_obstack_memory_used@@Base+0x15ed4>  // b.hs, b.nlast
  45a80c:	nop
  45a810:	mov	x19, x0
  45a814:	ldrb	w4, [x19], #1
  45a818:	and	w5, w4, #0xc0
  45a81c:	cmp	w5, #0x40
  45a820:	b.eq	45add4 <_obstack_memory_used@@Base+0x163d0>  // b.none
  45a824:	cmp	w5, #0x80
  45a828:	b.eq	45adf8 <_obstack_memory_used@@Base+0x163f4>  // b.none
  45a82c:	cmp	w5, #0xc0
  45a830:	b.eq	45ade8 <_obstack_memory_used@@Base+0x163e4>  // b.none
  45a834:	cmp	w4, #0x2f
  45a838:	b.hi	45af50 <_obstack_memory_used@@Base+0x1654c>  // b.pmore
  45a83c:	ldrh	w2, [x23, w4, uxtw #1]
  45a840:	adr	x3, 45a84c <_obstack_memory_used@@Base+0x15e48>
  45a844:	add	x2, x3, w2, sxth #2
  45a848:	br	x2
  45a84c:	mov	x1, #0x0                   	// #0
  45a850:	mov	w0, #0x0                   	// #0
  45a854:	ldrb	w3, [x19], #1
  45a858:	and	x2, x3, #0x7f
  45a85c:	lsl	x2, x2, x0
  45a860:	add	w0, w0, #0x7
  45a864:	orr	x1, x1, x2
  45a868:	tbnz	w3, #7, 45a854 <_obstack_memory_used@@Base+0x15e50>
  45a86c:	mov	x4, #0x0                   	// #0
  45a870:	mov	w2, #0x0                   	// #0
  45a874:	nop
  45a878:	ldrb	w3, [x19], #1
  45a87c:	and	x0, x3, #0x7f
  45a880:	lsl	x0, x0, x2
  45a884:	add	w2, w2, #0x7
  45a888:	orr	x4, x4, x0
  45a88c:	tbnz	w3, #7, 45a878 <_obstack_memory_used@@Base+0x15e74>
  45a890:	ldr	x0, [x20, #1624]
  45a894:	cmp	x1, #0x61
  45a898:	mul	x4, x4, x0
  45a89c:	b.hi	45a8b4 <_obstack_memory_used@@Base+0x15eb0>  // b.pmore
  45a8a0:	lsl	x1, x1, #4
  45a8a4:	neg	x4, x4
  45a8a8:	add	x0, x20, x1
  45a8ac:	str	w24, [x0, #8]
  45a8b0:	str	x4, [x20, x1]
  45a8b4:	cmp	x22, x19
  45a8b8:	b.ls	45a8d8 <_obstack_memory_used@@Base+0x15ed4>  // b.plast
  45a8bc:	ldr	x2, [x21, #792]
  45a8c0:	mov	x0, x19
  45a8c4:	ldr	x5, [x21, #832]
  45a8c8:	ldr	x1, [x20, #1608]
  45a8cc:	add	x5, x2, x5, lsr #63
  45a8d0:	cmp	x1, x5
  45a8d4:	b.cc	45a810 <_obstack_memory_used@@Base+0x15e0c>  // b.lo, b.ul, b.last
  45a8d8:	mov	sp, x29
  45a8dc:	ldp	x19, x20, [sp, #16]
  45a8e0:	ldp	x21, x22, [sp, #32]
  45a8e4:	ldp	x23, x24, [sp, #48]
  45a8e8:	ldp	x25, x26, [sp, #64]
  45a8ec:	ldp	x27, x28, [sp, #80]
  45a8f0:	ldp	x29, x30, [sp], #112
  45a8f4:	ret
  45a8f8:	mov	x1, #0x0                   	// #0
  45a8fc:	mov	w0, #0x0                   	// #0
  45a900:	ldrb	w3, [x19], #1
  45a904:	and	x2, x3, #0x7f
  45a908:	lsl	x2, x2, x0
  45a90c:	add	w0, w0, #0x7
  45a910:	orr	x1, x1, x2
  45a914:	tbnz	w3, #7, 45a900 <_obstack_memory_used@@Base+0x15efc>
  45a918:	str	x1, [x21, #848]
  45a91c:	b	45a8b4 <_obstack_memory_used@@Base+0x15eb0>
  45a920:	mov	x1, #0x0                   	// #0
  45a924:	mov	w0, #0x0                   	// #0
  45a928:	ldrb	w3, [x19], #1
  45a92c:	and	x2, x3, #0x7f
  45a930:	lsl	x2, x2, x0
  45a934:	add	w0, w0, #0x7
  45a938:	orr	x1, x1, x2
  45a93c:	tbnz	w3, #7, 45a928 <_obstack_memory_used@@Base+0x15f24>
  45a940:	cmp	x1, #0x61
  45a944:	b.hi	45a958 <_obstack_memory_used@@Base+0x15f54>  // b.pmore
  45a948:	lsl	x1, x1, #4
  45a94c:	add	x0, x20, x1
  45a950:	str	w26, [x0, #8]
  45a954:	str	x19, [x20, x1]
  45a958:	mov	x3, #0x0                   	// #0
  45a95c:	mov	w1, #0x0                   	// #0
  45a960:	ldrb	w2, [x19], #1
  45a964:	and	x0, x2, #0x7f
  45a968:	lsl	x0, x0, x1
  45a96c:	add	w1, w1, #0x7
  45a970:	orr	x3, x3, x0
  45a974:	tbnz	w2, #7, 45a960 <_obstack_memory_used@@Base+0x15f5c>
  45a978:	add	x19, x19, x3
  45a97c:	b	45a8b4 <_obstack_memory_used@@Base+0x15eb0>
  45a980:	mov	x1, #0x0                   	// #0
  45a984:	mov	w0, #0x0                   	// #0
  45a988:	ldrb	w3, [x19], #1
  45a98c:	and	x2, x3, #0x7f
  45a990:	lsl	x2, x2, x0
  45a994:	add	w0, w0, #0x7
  45a998:	orr	x1, x1, x2
  45a99c:	tbnz	w3, #7, 45a988 <_obstack_memory_used@@Base+0x15f84>
  45a9a0:	mov	x4, #0x0                   	// #0
  45a9a4:	mov	w2, #0x0                   	// #0
  45a9a8:	ldrb	w3, [x19], #1
  45a9ac:	and	x0, x3, #0x7f
  45a9b0:	lsl	x0, x0, x2
  45a9b4:	add	w2, w2, #0x7
  45a9b8:	orr	x4, x4, x0
  45a9bc:	tbnz	w3, #7, 45a9a8 <_obstack_memory_used@@Base+0x15fa4>
  45a9c0:	cmp	w2, #0x3f
  45a9c4:	b.hi	45a9dc <_obstack_memory_used@@Base+0x15fd8>  // b.pmore
  45a9c8:	mov	x0, #0xffffffffffffffff    	// #-1
  45a9cc:	tst	x3, #0x40
  45a9d0:	lsl	x0, x0, x2
  45a9d4:	orr	x0, x4, x0
  45a9d8:	csel	x4, x0, x4, ne  // ne = any
  45a9dc:	ldr	x0, [x20, #1624]
  45a9e0:	cmp	x1, #0x61
  45a9e4:	mul	x4, x4, x0
  45a9e8:	b.hi	45a8b4 <_obstack_memory_used@@Base+0x15eb0>  // b.pmore
  45a9ec:	lsl	x1, x1, #4
  45a9f0:	mov	w2, #0x4                   	// #4
  45a9f4:	add	x0, x20, x1
  45a9f8:	str	w2, [x0, #8]
  45a9fc:	str	x4, [x20, x1]
  45aa00:	b	45a8b4 <_obstack_memory_used@@Base+0x15eb0>
  45aa04:	mov	x1, #0x0                   	// #0
  45aa08:	mov	w0, #0x0                   	// #0
  45aa0c:	ldrb	w3, [x19], #1
  45aa10:	and	x2, x3, #0x7f
  45aa14:	lsl	x2, x2, x0
  45aa18:	add	w0, w0, #0x7
  45aa1c:	orr	x1, x1, x2
  45aa20:	tbnz	w3, #7, 45aa0c <_obstack_memory_used@@Base+0x16008>
  45aa24:	mov	x4, #0x0                   	// #0
  45aa28:	mov	w2, #0x0                   	// #0
  45aa2c:	nop
  45aa30:	ldrb	w3, [x19], #1
  45aa34:	and	x0, x3, #0x7f
  45aa38:	lsl	x0, x0, x2
  45aa3c:	add	w2, w2, #0x7
  45aa40:	orr	x4, x4, x0
  45aa44:	tbnz	w3, #7, 45aa30 <_obstack_memory_used@@Base+0x1602c>
  45aa48:	b	45a9dc <_obstack_memory_used@@Base+0x15fd8>
  45aa4c:	mov	x1, #0x0                   	// #0
  45aa50:	mov	w0, #0x0                   	// #0
  45aa54:	ldrb	w3, [x19], #1
  45aa58:	and	x2, x3, #0x7f
  45aa5c:	lsl	x2, x2, x0
  45aa60:	add	w0, w0, #0x7
  45aa64:	orr	x1, x1, x2
  45aa68:	tbnz	w3, #7, 45aa54 <_obstack_memory_used@@Base+0x16050>
  45aa6c:	cmp	w0, #0x3f
  45aa70:	b.hi	45aa88 <_obstack_memory_used@@Base+0x16084>  // b.pmore
  45aa74:	mov	x2, #0xffffffffffffffff    	// #-1
  45aa78:	tst	x3, #0x40
  45aa7c:	lsl	x0, x2, x0
  45aa80:	orr	x0, x1, x0
  45aa84:	csel	x1, x0, x1, ne  // ne = any
  45aa88:	ldr	x0, [x20, #1624]
  45aa8c:	mul	x1, x0, x1
  45aa90:	str	x1, [x20, #1576]
  45aa94:	b	45a8b4 <_obstack_memory_used@@Base+0x15eb0>
  45aa98:	mov	x1, #0x0                   	// #0
  45aa9c:	mov	w0, #0x0                   	// #0
  45aaa0:	ldrb	w3, [x19], #1
  45aaa4:	and	x2, x3, #0x7f
  45aaa8:	lsl	x2, x2, x0
  45aaac:	add	w0, w0, #0x7
  45aab0:	orr	x1, x1, x2
  45aab4:	tbnz	w3, #7, 45aaa0 <_obstack_memory_used@@Base+0x1609c>
  45aab8:	mov	x3, #0x0                   	// #0
  45aabc:	mov	w2, #0x0                   	// #0
  45aac0:	str	x1, [x20, #1584]
  45aac4:	nop
  45aac8:	ldrb	w1, [x19], #1
  45aacc:	and	x0, x1, #0x7f
  45aad0:	lsl	x0, x0, x2
  45aad4:	add	w2, w2, #0x7
  45aad8:	orr	x3, x3, x0
  45aadc:	tbnz	w1, #7, 45aac8 <_obstack_memory_used@@Base+0x160c4>
  45aae0:	cmp	w2, #0x3f
  45aae4:	b.hi	45aafc <_obstack_memory_used@@Base+0x160f8>  // b.pmore
  45aae8:	mov	x0, #0xffffffffffffffff    	// #-1
  45aaec:	tst	x1, #0x40
  45aaf0:	lsl	x0, x0, x2
  45aaf4:	orr	x0, x3, x0
  45aaf8:	csel	x3, x0, x3, ne  // ne = any
  45aafc:	ldr	x0, [x20, #1624]
  45ab00:	str	w24, [x20, #1600]
  45ab04:	mul	x3, x0, x3
  45ab08:	str	x3, [x20, #1576]
  45ab0c:	b	45a8b4 <_obstack_memory_used@@Base+0x15eb0>
  45ab10:	mov	x1, #0x0                   	// #0
  45ab14:	mov	w0, #0x0                   	// #0
  45ab18:	ldrb	w3, [x19], #1
  45ab1c:	and	x2, x3, #0x7f
  45ab20:	lsl	x2, x2, x0
  45ab24:	add	w0, w0, #0x7
  45ab28:	orr	x1, x1, x2
  45ab2c:	tbnz	w3, #7, 45ab18 <_obstack_memory_used@@Base+0x16114>
  45ab30:	mov	x4, #0x0                   	// #0
  45ab34:	mov	w2, #0x0                   	// #0
  45ab38:	ldrb	w3, [x19], #1
  45ab3c:	and	x0, x3, #0x7f
  45ab40:	lsl	x0, x0, x2
  45ab44:	add	w2, w2, #0x7
  45ab48:	orr	x4, x4, x0
  45ab4c:	tbnz	w3, #7, 45ab38 <_obstack_memory_used@@Base+0x16134>
  45ab50:	cmp	w2, #0x3f
  45ab54:	b.hi	45ab6c <_obstack_memory_used@@Base+0x16168>  // b.pmore
  45ab58:	mov	x0, #0xffffffffffffffff    	// #-1
  45ab5c:	tst	x3, #0x40
  45ab60:	lsl	x0, x0, x2
  45ab64:	orr	x0, x4, x0
  45ab68:	csel	x4, x0, x4, ne  // ne = any
  45ab6c:	ldr	x0, [x20, #1624]
  45ab70:	cmp	x1, #0x61
  45ab74:	mul	x4, x4, x0
  45ab78:	b.hi	45a8b4 <_obstack_memory_used@@Base+0x15eb0>  // b.pmore
  45ab7c:	lsl	x1, x1, #4
  45ab80:	add	x0, x20, x1
  45ab84:	str	w24, [x0, #8]
  45ab88:	str	x4, [x20, x1]
  45ab8c:	b	45a8b4 <_obstack_memory_used@@Base+0x15eb0>
  45ab90:	mov	x1, #0x0                   	// #0
  45ab94:	mov	w0, #0x0                   	// #0
  45ab98:	ldrb	w3, [x19], #1
  45ab9c:	and	x2, x3, #0x7f
  45aba0:	lsl	x2, x2, x0
  45aba4:	add	w0, w0, #0x7
  45aba8:	orr	x1, x1, x2
  45abac:	tbnz	w3, #7, 45ab98 <_obstack_memory_used@@Base+0x16194>
  45abb0:	cmp	x1, #0x61
  45abb4:	b.hi	45abcc <_obstack_memory_used@@Base+0x161c8>  // b.pmore
  45abb8:	lsl	x1, x1, #4
  45abbc:	mov	w2, #0x3                   	// #3
  45abc0:	add	x0, x20, x1
  45abc4:	str	w2, [x0, #8]
  45abc8:	str	x19, [x20, x1]
  45abcc:	mov	x3, #0x0                   	// #0
  45abd0:	mov	w1, #0x0                   	// #0
  45abd4:	nop
  45abd8:	ldrb	w2, [x19], #1
  45abdc:	and	x0, x2, #0x7f
  45abe0:	lsl	x0, x0, x1
  45abe4:	add	w1, w1, #0x7
  45abe8:	orr	x3, x3, x0
  45abec:	tbnz	w2, #7, 45abd8 <_obstack_memory_used@@Base+0x161d4>
  45abf0:	add	x19, x19, x3
  45abf4:	b	45a8b4 <_obstack_memory_used@@Base+0x15eb0>
  45abf8:	mov	x1, #0x0                   	// #0
  45abfc:	mov	w0, #0x0                   	// #0
  45ac00:	ldrb	w3, [x19], #1
  45ac04:	and	x2, x3, #0x7f
  45ac08:	lsl	x2, x2, x0
  45ac0c:	add	w0, w0, #0x7
  45ac10:	orr	x1, x1, x2
  45ac14:	tbnz	w3, #7, 45ac00 <_obstack_memory_used@@Base+0x161fc>
  45ac18:	str	x1, [x20, #1576]
  45ac1c:	b	45a8b4 <_obstack_memory_used@@Base+0x15eb0>
  45ac20:	mov	x1, #0x0                   	// #0
  45ac24:	mov	w0, #0x0                   	// #0
  45ac28:	ldrb	w3, [x19], #1
  45ac2c:	and	x2, x3, #0x7f
  45ac30:	lsl	x2, x2, x0
  45ac34:	add	w0, w0, #0x7
  45ac38:	orr	x1, x1, x2
  45ac3c:	tbnz	w3, #7, 45ac28 <_obstack_memory_used@@Base+0x16224>
  45ac40:	str	x1, [x20, #1584]
  45ac44:	str	w24, [x20, #1600]
  45ac48:	b	45a8b4 <_obstack_memory_used@@Base+0x15eb0>
  45ac4c:	mov	x1, #0x0                   	// #0
  45ac50:	mov	w0, #0x0                   	// #0
  45ac54:	ldrb	w3, [x19], #1
  45ac58:	and	x2, x3, #0x7f
  45ac5c:	lsl	x2, x2, x0
  45ac60:	add	w0, w0, #0x7
  45ac64:	orr	x1, x1, x2
  45ac68:	tbnz	w3, #7, 45ac54 <_obstack_memory_used@@Base+0x16250>
  45ac6c:	mov	x3, #0x0                   	// #0
  45ac70:	mov	w2, #0x0                   	// #0
  45ac74:	str	x1, [x20, #1584]
  45ac78:	ldrb	w1, [x19], #1
  45ac7c:	and	x0, x1, #0x7f
  45ac80:	lsl	x0, x0, x2
  45ac84:	add	w2, w2, #0x7
  45ac88:	orr	x3, x3, x0
  45ac8c:	tbnz	w1, #7, 45ac78 <_obstack_memory_used@@Base+0x16274>
  45ac90:	str	x3, [x20, #1576]
  45ac94:	str	w24, [x20, #1600]
  45ac98:	b	45a8b4 <_obstack_memory_used@@Base+0x15eb0>
  45ac9c:	mov	x1, #0x0                   	// #0
  45aca0:	mov	w0, #0x0                   	// #0
  45aca4:	ldrb	w3, [x19], #1
  45aca8:	and	x2, x3, #0x7f
  45acac:	lsl	x2, x2, x0
  45acb0:	add	w0, w0, #0x7
  45acb4:	orr	x1, x1, x2
  45acb8:	tbnz	w3, #7, 45aca4 <_obstack_memory_used@@Base+0x162a0>
  45acbc:	mov	x4, #0x0                   	// #0
  45acc0:	mov	w2, #0x0                   	// #0
  45acc4:	nop
  45acc8:	ldrb	w3, [x19], #1
  45accc:	and	x0, x3, #0x7f
  45acd0:	lsl	x0, x0, x2
  45acd4:	add	w2, w2, #0x7
  45acd8:	orr	x4, x4, x0
  45acdc:	tbnz	w3, #7, 45acc8 <_obstack_memory_used@@Base+0x162c4>
  45ace0:	cmp	x1, #0x61
  45ace4:	b.hi	45a8b4 <_obstack_memory_used@@Base+0x15eb0>  // b.pmore
  45ace8:	lsl	x1, x1, #4
  45acec:	mov	w2, #0x2                   	// #2
  45acf0:	add	x0, x20, x1
  45acf4:	str	w2, [x0, #8]
  45acf8:	str	x4, [x20, x1]
  45acfc:	b	45a8b4 <_obstack_memory_used@@Base+0x15eb0>
  45ad00:	mov	x1, #0x0                   	// #0
  45ad04:	mov	w0, #0x0                   	// #0
  45ad08:	ldrb	w3, [x19], #1
  45ad0c:	and	x2, x3, #0x7f
  45ad10:	lsl	x2, x2, x0
  45ad14:	add	w0, w0, #0x7
  45ad18:	orr	x1, x1, x2
  45ad1c:	tbnz	w3, #7, 45ad08 <_obstack_memory_used@@Base+0x16304>
  45ad20:	cmp	x1, #0x61
  45ad24:	b.hi	45a8b4 <_obstack_memory_used@@Base+0x15eb0>  // b.pmore
  45ad28:	add	x1, x20, x1, lsl #4
  45ad2c:	str	wzr, [x1, #8]
  45ad30:	b	45a8b4 <_obstack_memory_used@@Base+0x15eb0>
  45ad34:	mov	x1, #0x0                   	// #0
  45ad38:	mov	w0, #0x0                   	// #0
  45ad3c:	ldrb	w3, [x19], #1
  45ad40:	and	x2, x3, #0x7f
  45ad44:	lsl	x2, x2, x0
  45ad48:	add	w0, w0, #0x7
  45ad4c:	orr	x1, x1, x2
  45ad50:	tbnz	w3, #7, 45ad3c <_obstack_memory_used@@Base+0x16338>
  45ad54:	cmp	x1, #0x61
  45ad58:	b.hi	45a8b4 <_obstack_memory_used@@Base+0x15eb0>  // b.pmore
  45ad5c:	add	x1, x20, x1, lsl #4
  45ad60:	mov	w0, #0x6                   	// #6
  45ad64:	str	w0, [x1, #8]
  45ad68:	b	45a8b4 <_obstack_memory_used@@Base+0x15eb0>
  45ad6c:	mov	x1, #0x0                   	// #0
  45ad70:	mov	w0, #0x0                   	// #0
  45ad74:	ldrb	w3, [x19], #1
  45ad78:	and	x2, x3, #0x7f
  45ad7c:	lsl	x2, x2, x0
  45ad80:	add	w0, w0, #0x7
  45ad84:	orr	x1, x1, x2
  45ad88:	tbnz	w3, #7, 45ad74 <_obstack_memory_used@@Base+0x16370>
  45ad8c:	b	45ad20 <_obstack_memory_used@@Base+0x1631c>
  45ad90:	mov	x1, #0x0                   	// #0
  45ad94:	mov	w0, #0x0                   	// #0
  45ad98:	ldrb	w3, [x19], #1
  45ad9c:	and	x2, x3, #0x7f
  45ada0:	lsl	x2, x2, x0
  45ada4:	add	w0, w0, #0x7
  45ada8:	orr	x1, x1, x2
  45adac:	tbnz	w3, #7, 45ad98 <_obstack_memory_used@@Base+0x16394>
  45adb0:	mov	x4, #0x0                   	// #0
  45adb4:	mov	w2, #0x0                   	// #0
  45adb8:	ldrb	w3, [x19], #1
  45adbc:	and	x0, x3, #0x7f
  45adc0:	lsl	x0, x0, x2
  45adc4:	add	w2, w2, #0x7
  45adc8:	orr	x4, x4, x0
  45adcc:	tbnz	w3, #7, 45adb8 <_obstack_memory_used@@Base+0x163b4>
  45add0:	b	45ab6c <_obstack_memory_used@@Base+0x16168>
  45add4:	ldr	x0, [x20, #1632]
  45add8:	and	x4, x4, #0x3f
  45addc:	madd	x4, x4, x0, x1
  45ade0:	str	x4, [x20, #1608]
  45ade4:	b	45a8b4 <_obstack_memory_used@@Base+0x15eb0>
  45ade8:	ubfiz	x4, x4, #4, #6
  45adec:	add	x4, x20, x4
  45adf0:	str	wzr, [x4, #8]
  45adf4:	b	45a8b4 <_obstack_memory_used@@Base+0x15eb0>
  45adf8:	and	w4, w4, #0x3f
  45adfc:	mov	x1, #0x0                   	// #0
  45ae00:	mov	w5, #0x0                   	// #0
  45ae04:	nop
  45ae08:	ldrb	w6, [x19], #1
  45ae0c:	and	x0, x6, #0x7f
  45ae10:	lsl	x0, x0, x5
  45ae14:	add	w5, w5, #0x7
  45ae18:	orr	x1, x1, x0
  45ae1c:	tbnz	w6, #7, 45ae08 <_obstack_memory_used@@Base+0x16404>
  45ae20:	ubfiz	x4, x4, #4, #6
  45ae24:	ldr	x2, [x20, #1624]
  45ae28:	add	x0, x20, x4
  45ae2c:	mul	x1, x1, x2
  45ae30:	str	w24, [x0, #8]
  45ae34:	str	x1, [x20, x4]
  45ae38:	b	45a8b4 <_obstack_memory_used@@Base+0x15eb0>
  45ae3c:	ldr	x0, [x20, #544]
  45ae40:	eor	x0, x0, #0x1
  45ae44:	str	x0, [x20, #544]
  45ae48:	b	45a8b4 <_obstack_memory_used@@Base+0x15eb0>
  45ae4c:	ldrb	w28, [x20, #1648]
  45ae50:	mov	x1, x21
  45ae54:	mov	w0, w28
  45ae58:	bl	45a730 <_obstack_memory_used@@Base+0x15d2c>
  45ae5c:	mov	x2, x19
  45ae60:	mov	x1, x0
  45ae64:	mov	x3, x27
  45ae68:	mov	w0, w28
  45ae6c:	bl	45a5d0 <_obstack_memory_used@@Base+0x15bcc>
  45ae70:	mov	x19, x0
  45ae74:	ldr	x1, [x29, #104]
  45ae78:	str	x1, [x20, #1608]
  45ae7c:	b	45a8b4 <_obstack_memory_used@@Base+0x15eb0>
  45ae80:	ldrb	w2, [x0, #1]
  45ae84:	add	x19, x0, #0x2
  45ae88:	ldr	x0, [x20, #1632]
  45ae8c:	madd	x1, x2, x0, x1
  45ae90:	str	x1, [x20, #1608]
  45ae94:	b	45a8b4 <_obstack_memory_used@@Base+0x15eb0>
  45ae98:	ldurh	w2, [x0, #1]
  45ae9c:	add	x19, x0, #0x3
  45aea0:	ldr	x0, [x20, #1632]
  45aea4:	madd	x1, x2, x0, x1
  45aea8:	str	x1, [x20, #1608]
  45aeac:	b	45a8b4 <_obstack_memory_used@@Base+0x15eb0>
  45aeb0:	ldur	w2, [x0, #1]
  45aeb4:	add	x19, x0, #0x5
  45aeb8:	ldr	x0, [x20, #1632]
  45aebc:	madd	x1, x2, x0, x1
  45aec0:	str	x1, [x20, #1608]
  45aec4:	b	45a8b4 <_obstack_memory_used@@Base+0x15eb0>
  45aec8:	cbz	x25, 45af44 <_obstack_memory_used@@Base+0x16540>
  45aecc:	mov	x3, x25
  45aed0:	ldr	x25, [x25, #1568]
  45aed4:	mov	x1, x20
  45aed8:	mov	x0, x3
  45aedc:	mov	x2, #0x648                 	// #1608
  45aee0:	bl	4026a0 <memcpy@plt>
  45aee4:	str	x0, [x20, #1568]
  45aee8:	b	45a8b4 <_obstack_memory_used@@Base+0x15eb0>
  45aeec:	ldr	x28, [x20, #1568]
  45aef0:	mov	x0, x20
  45aef4:	mov	x2, #0x648                 	// #1608
  45aef8:	mov	x1, x28
  45aefc:	bl	4026a0 <memcpy@plt>
  45af00:	str	x25, [x28, #1568]
  45af04:	mov	x25, x28
  45af08:	b	45a8b4 <_obstack_memory_used@@Base+0x15eb0>
  45af0c:	mov	w0, #0x2                   	// #2
  45af10:	mov	x3, #0x0                   	// #0
  45af14:	mov	w1, #0x0                   	// #0
  45af18:	str	x19, [x20, #1592]
  45af1c:	str	w0, [x20, #1600]
  45af20:	ldrb	w2, [x19], #1
  45af24:	and	x0, x2, #0x7f
  45af28:	lsl	x0, x0, x1
  45af2c:	add	w1, w1, #0x7
  45af30:	orr	x3, x3, x0
  45af34:	tbnz	w2, #7, 45af20 <_obstack_memory_used@@Base+0x1651c>
  45af38:	add	x19, x19, x3
  45af3c:	b	45a8b4 <_obstack_memory_used@@Base+0x15eb0>
  45af40:	ret
  45af44:	sub	sp, sp, #0x650
  45af48:	mov	x3, sp
  45af4c:	b	45aed4 <_obstack_memory_used@@Base+0x164d0>
  45af50:	bl	402a50 <abort@plt>
  45af54:	nop
  45af58:	adrp	x2, 495000 <_obstack_memory_used@@Base+0x505fc>
  45af5c:	add	x1, x2, #0xb70
  45af60:	mov	w0, #0x8                   	// #8
  45af64:	strb	w0, [x2, #2928]
  45af68:	strb	w0, [x1, #1]
  45af6c:	strb	w0, [x1, #2]
  45af70:	strb	w0, [x1, #3]
  45af74:	strb	w0, [x1, #4]
  45af78:	strb	w0, [x1, #5]
  45af7c:	strb	w0, [x1, #6]
  45af80:	strb	w0, [x1, #7]
  45af84:	strb	w0, [x1, #8]
  45af88:	strb	w0, [x1, #9]
  45af8c:	strb	w0, [x1, #10]
  45af90:	strb	w0, [x1, #11]
  45af94:	strb	w0, [x1, #12]
  45af98:	strb	w0, [x1, #13]
  45af9c:	strb	w0, [x1, #14]
  45afa0:	strb	w0, [x1, #15]
  45afa4:	strb	w0, [x1, #16]
  45afa8:	strb	w0, [x1, #17]
  45afac:	strb	w0, [x1, #18]
  45afb0:	strb	w0, [x1, #19]
  45afb4:	strb	w0, [x1, #20]
  45afb8:	strb	w0, [x1, #21]
  45afbc:	strb	w0, [x1, #22]
  45afc0:	strb	w0, [x1, #23]
  45afc4:	strb	w0, [x1, #24]
  45afc8:	strb	w0, [x1, #25]
  45afcc:	strb	w0, [x1, #26]
  45afd0:	strb	w0, [x1, #27]
  45afd4:	strb	w0, [x1, #28]
  45afd8:	strb	w0, [x1, #29]
  45afdc:	strb	w0, [x1, #30]
  45afe0:	strb	w0, [x1, #31]
  45afe4:	strb	w0, [x1, #64]
  45afe8:	strb	w0, [x1, #46]
  45afec:	strb	w0, [x1, #65]
  45aff0:	strb	w0, [x1, #66]
  45aff4:	strb	w0, [x1, #67]
  45aff8:	strb	w0, [x1, #68]
  45affc:	strb	w0, [x1, #69]
  45b000:	strb	w0, [x1, #70]
  45b004:	strb	w0, [x1, #71]
  45b008:	strb	w0, [x1, #72]
  45b00c:	strb	w0, [x1, #73]
  45b010:	strb	w0, [x1, #74]
  45b014:	strb	w0, [x1, #75]
  45b018:	strb	w0, [x1, #76]
  45b01c:	strb	w0, [x1, #77]
  45b020:	strb	w0, [x1, #78]
  45b024:	strb	w0, [x1, #79]
  45b028:	strb	w0, [x1, #80]
  45b02c:	strb	w0, [x1, #81]
  45b030:	strb	w0, [x1, #82]
  45b034:	strb	w0, [x1, #83]
  45b038:	strb	w0, [x1, #84]
  45b03c:	strb	w0, [x1, #85]
  45b040:	strb	w0, [x1, #86]
  45b044:	strb	w0, [x1, #87]
  45b048:	strb	w0, [x1, #88]
  45b04c:	strb	w0, [x1, #89]
  45b050:	strb	w0, [x1, #90]
  45b054:	strb	w0, [x1, #91]
  45b058:	strb	w0, [x1, #92]
  45b05c:	strb	w0, [x1, #93]
  45b060:	strb	w0, [x1, #94]
  45b064:	strb	w0, [x1, #95]
  45b068:	strb	w0, [x1, #48]
  45b06c:	strb	w0, [x1, #49]
  45b070:	strb	w0, [x1, #50]
  45b074:	strb	w0, [x1, #51]
  45b078:	strb	w0, [x1, #52]
  45b07c:	strb	w0, [x1, #53]
  45b080:	strb	w0, [x1, #54]
  45b084:	strb	w0, [x1, #55]
  45b088:	strb	w0, [x1, #56]
  45b08c:	strb	w0, [x1, #57]
  45b090:	strb	w0, [x1, #58]
  45b094:	strb	w0, [x1, #59]
  45b098:	strb	w0, [x1, #60]
  45b09c:	strb	w0, [x1, #61]
  45b0a0:	strb	w0, [x1, #62]
  45b0a4:	strb	w0, [x1, #63]
  45b0a8:	strb	w0, [x1, #96]
  45b0ac:	ret
  45b0b0:	stp	x29, x30, [sp, #-112]!
  45b0b4:	mov	x2, #0x680                 	// #1664
  45b0b8:	mov	x29, sp
  45b0bc:	stp	x19, x20, [sp, #16]
  45b0c0:	mov	x20, x0
  45b0c4:	mov	x19, x1
  45b0c8:	mov	x0, x1
  45b0cc:	mov	w1, #0x0                   	// #0
  45b0d0:	bl	402930 <memset@plt>
  45b0d4:	str	xzr, [x20, #800]
  45b0d8:	ldr	x2, [x20, #792]
  45b0dc:	str	xzr, [x20, #848]
  45b0e0:	cbz	x2, 45b454 <_obstack_memory_used@@Base+0x16a50>
  45b0e4:	ldr	d0, [x20, #832]
  45b0e8:	add	x1, x20, #0x328
  45b0ec:	stp	x21, x22, [sp, #32]
  45b0f0:	cmge	d0, d0, #0
  45b0f4:	fmov	x0, d0
  45b0f8:	add	x0, x2, x0
  45b0fc:	bl	45e7f0 <_obstack_memory_used@@Base+0x19dec>
  45b100:	mov	x22, x0
  45b104:	cbz	x0, 45b4b8 <_obstack_memory_used@@Base+0x16ab4>
  45b108:	ldrsw	x1, [x0, #4]
  45b10c:	stp	x23, x24, [sp, #48]
  45b110:	add	x23, x0, #0x4
  45b114:	sub	x23, x23, x1
  45b118:	ldr	x0, [x20, #824]
  45b11c:	str	x0, [x19, #1608]
  45b120:	add	x21, x23, #0x9
  45b124:	mov	x0, x21
  45b128:	bl	402700 <strlen@plt>
  45b12c:	ldrb	w1, [x23, #9]
  45b130:	add	x2, x0, #0x1
  45b134:	add	x2, x21, x2
  45b138:	cmp	w1, #0x65
  45b13c:	b.eq	45b328 <_obstack_memory_used@@Base+0x16924>  // b.none
  45b140:	ldrb	w6, [x23, #8]
  45b144:	ldrb	w3, [x2]
  45b148:	cmp	w6, #0x3
  45b14c:	b.hi	45b598 <_obstack_memory_used@@Base+0x16b94>  // b.pmore
  45b150:	stp	x25, x26, [sp, #64]
  45b154:	stp	x27, x28, [sp, #80]
  45b158:	mov	x5, #0x0                   	// #0
  45b15c:	mov	w4, #0x0                   	// #0
  45b160:	b	45b168 <_obstack_memory_used@@Base+0x16764>
  45b164:	ldrb	w3, [x2]
  45b168:	and	x1, x3, #0x7f
  45b16c:	add	x2, x2, #0x1
  45b170:	lsl	x1, x1, x4
  45b174:	add	w4, w4, #0x7
  45b178:	orr	x5, x5, x1
  45b17c:	tbnz	w3, #7, 45b164 <_obstack_memory_used@@Base+0x16760>
  45b180:	mov	x0, #0x0                   	// #0
  45b184:	mov	w3, #0x0                   	// #0
  45b188:	str	x5, [x19, #1632]
  45b18c:	nop
  45b190:	mov	x5, x2
  45b194:	ldrb	w4, [x2], #1
  45b198:	and	x1, x4, #0x7f
  45b19c:	lsl	x1, x1, x3
  45b1a0:	add	w3, w3, #0x7
  45b1a4:	orr	x0, x0, x1
  45b1a8:	tbnz	w4, #7, 45b190 <_obstack_memory_used@@Base+0x1678c>
  45b1ac:	cmp	w3, #0x3f
  45b1b0:	b.hi	45b1c8 <_obstack_memory_used@@Base+0x167c4>  // b.pmore
  45b1b4:	mov	x1, #0xffffffffffffffff    	// #-1
  45b1b8:	tst	x4, #0x40
  45b1bc:	lsl	x3, x1, x3
  45b1c0:	orr	x3, x0, x3
  45b1c4:	csel	x0, x3, x0, ne  // ne = any
  45b1c8:	str	x0, [x19, #1624]
  45b1cc:	cmp	w6, #0x1
  45b1d0:	mov	x4, #0x0                   	// #0
  45b1d4:	mov	w3, #0x0                   	// #0
  45b1d8:	b.eq	45b344 <_obstack_memory_used@@Base+0x16940>  // b.none
  45b1dc:	nop
  45b1e0:	ldrb	w0, [x2], #1
  45b1e4:	and	x1, x0, #0x7f
  45b1e8:	lsl	x1, x1, x3
  45b1ec:	add	w3, w3, #0x7
  45b1f0:	orr	x4, x4, x1
  45b1f4:	tbnz	w0, #7, 45b1e0 <_obstack_memory_used@@Base+0x167dc>
  45b1f8:	mov	w0, #0xffffffff            	// #-1
  45b1fc:	str	x4, [x19, #1640]
  45b200:	strb	w0, [x19, #1649]
  45b204:	ldrb	w3, [x21]
  45b208:	cmp	w3, #0x7a
  45b20c:	b.eq	45b364 <_obstack_memory_used@@Base+0x16960>  // b.none
  45b210:	mov	x24, #0x0                   	// #0
  45b214:	cbz	w3, 45b5fc <_obstack_memory_used@@Base+0x16bf8>
  45b218:	add	x21, x21, #0x1
  45b21c:	add	x25, sp, #0x68
  45b220:	mov	w26, #0x1                   	// #1
  45b224:	b	45b24c <_obstack_memory_used@@Base+0x16848>
  45b228:	cmp	w3, #0x52
  45b22c:	b.eq	45b3a8 <_obstack_memory_used@@Base+0x169a4>  // b.none
  45b230:	cmp	w3, #0x50
  45b234:	b.eq	45b3b4 <_obstack_memory_used@@Base+0x169b0>  // b.none
  45b238:	cmp	w3, #0x53
  45b23c:	b.ne	45b468 <_obstack_memory_used@@Base+0x16a64>  // b.any
  45b240:	strb	w26, [x19, #1651]
  45b244:	ldrb	w3, [x21], #1
  45b248:	cbz	w3, 45b264 <_obstack_memory_used@@Base+0x16860>
  45b24c:	cmp	w3, #0x4c
  45b250:	b.ne	45b228 <_obstack_memory_used@@Base+0x16824>  // b.any
  45b254:	ldrb	w0, [x2], #1
  45b258:	strb	w0, [x19, #1649]
  45b25c:	ldrb	w3, [x21], #1
  45b260:	cbnz	w3, 45b24c <_obstack_memory_used@@Base+0x16848>
  45b264:	cbz	x24, 45b464 <_obstack_memory_used@@Base+0x16a60>
  45b268:	ldr	w1, [x23]
  45b26c:	mov	x0, x24
  45b270:	mov	x3, x19
  45b274:	mov	x2, x20
  45b278:	add	x1, x1, #0x4
  45b27c:	add	x1, x23, x1
  45b280:	bl	45a7a8 <_obstack_memory_used@@Base+0x15da4>
  45b284:	ldrb	w0, [x19, #1648]
  45b288:	cmp	w0, #0xff
  45b28c:	b.eq	45b590 <_obstack_memory_used@@Base+0x16b8c>  // b.none
  45b290:	and	w0, w0, #0x7
  45b294:	cmp	w0, #0x2
  45b298:	b.eq	45b588 <_obstack_memory_used@@Base+0x16b84>  // b.none
  45b29c:	b.ls	45b3fc <_obstack_memory_used@@Base+0x169f8>  // b.plast
  45b2a0:	cmp	w0, #0x3
  45b2a4:	mov	x21, #0x10                  	// #16
  45b2a8:	b.ne	45b3ec <_obstack_memory_used@@Base+0x169e8>  // b.any
  45b2ac:	ldrb	w0, [x19, #1650]
  45b2b0:	add	x21, x22, x21
  45b2b4:	ldrb	w24, [x19, #1649]
  45b2b8:	cbz	w0, 45b414 <_obstack_memory_used@@Base+0x16a10>
  45b2bc:	mov	x0, #0x0                   	// #0
  45b2c0:	mov	w2, #0x0                   	// #0
  45b2c4:	nop
  45b2c8:	ldrb	w3, [x21], #1
  45b2cc:	and	x1, x3, #0x7f
  45b2d0:	lsl	x1, x1, x2
  45b2d4:	add	w2, w2, #0x7
  45b2d8:	orr	x0, x0, x1
  45b2dc:	tbnz	w3, #7, 45b2c8 <_obstack_memory_used@@Base+0x168c4>
  45b2e0:	add	x23, x21, x0
  45b2e4:	cmp	w24, #0xff
  45b2e8:	b.ne	45b48c <_obstack_memory_used@@Base+0x16a88>  // b.any
  45b2ec:	ldr	w1, [x22]
  45b2f0:	mov	x0, x23
  45b2f4:	mov	x3, x19
  45b2f8:	mov	x2, x20
  45b2fc:	add	x1, x1, #0x4
  45b300:	add	x1, x22, x1
  45b304:	bl	45a7a8 <_obstack_memory_used@@Base+0x15da4>
  45b308:	ldp	x21, x22, [sp, #32]
  45b30c:	mov	w0, #0x0                   	// #0
  45b310:	ldp	x23, x24, [sp, #48]
  45b314:	ldp	x25, x26, [sp, #64]
  45b318:	ldp	x27, x28, [sp, #80]
  45b31c:	ldp	x19, x20, [sp, #16]
  45b320:	ldp	x29, x30, [sp], #112
  45b324:	ret
  45b328:	ldrb	w0, [x23, #10]
  45b32c:	cmp	w0, #0x68
  45b330:	b.ne	45b140 <_obstack_memory_used@@Base+0x1673c>  // b.any
  45b334:	ldr	x0, [x2], #8
  45b338:	add	x21, x23, #0xb
  45b33c:	str	x0, [x19, #1656]
  45b340:	b	45b140 <_obstack_memory_used@@Base+0x1673c>
  45b344:	ldrb	w0, [x2]
  45b348:	add	x2, x5, #0x2
  45b34c:	str	x0, [x19, #1640]
  45b350:	mov	w0, #0xffffffff            	// #-1
  45b354:	strb	w0, [x19, #1649]
  45b358:	ldrb	w3, [x21]
  45b35c:	cmp	w3, #0x7a
  45b360:	b.ne	45b210 <_obstack_memory_used@@Base+0x1680c>  // b.any
  45b364:	mov	x0, #0x0                   	// #0
  45b368:	mov	w3, #0x0                   	// #0
  45b36c:	nop
  45b370:	ldrb	w4, [x2], #1
  45b374:	and	x1, x4, #0x7f
  45b378:	lsl	x1, x1, x3
  45b37c:	add	w3, w3, #0x7
  45b380:	orr	x0, x0, x1
  45b384:	tbnz	w4, #7, 45b370 <_obstack_memory_used@@Base+0x1696c>
  45b388:	mov	w1, #0x1                   	// #1
  45b38c:	strb	w1, [x19, #1650]
  45b390:	add	x24, x2, x0
  45b394:	add	x0, x21, #0x1
  45b398:	ldrb	w3, [x21, #1]
  45b39c:	cbz	w3, 45b268 <_obstack_memory_used@@Base+0x16864>
  45b3a0:	mov	x21, x0
  45b3a4:	b	45b218 <_obstack_memory_used@@Base+0x16814>
  45b3a8:	ldrb	w0, [x2], #1
  45b3ac:	strb	w0, [x19, #1648]
  45b3b0:	b	45b244 <_obstack_memory_used@@Base+0x16840>
  45b3b4:	mov	x27, x2
  45b3b8:	mov	x1, x20
  45b3bc:	ldrb	w28, [x27], #1
  45b3c0:	mov	w0, w28
  45b3c4:	bl	45a730 <_obstack_memory_used@@Base+0x15d2c>
  45b3c8:	mov	x2, x27
  45b3cc:	mov	x1, x0
  45b3d0:	mov	x3, x25
  45b3d4:	mov	w0, w28
  45b3d8:	bl	45a5d0 <_obstack_memory_used@@Base+0x15bcc>
  45b3dc:	mov	x2, x0
  45b3e0:	ldr	x1, [sp, #104]
  45b3e4:	str	x1, [x19, #1616]
  45b3e8:	b	45b244 <_obstack_memory_used@@Base+0x16840>
  45b3ec:	cmp	w0, #0x4
  45b3f0:	mov	x21, #0x18                  	// #24
  45b3f4:	b.eq	45b2ac <_obstack_memory_used@@Base+0x168a8>  // b.none
  45b3f8:	bl	402a50 <abort@plt>
  45b3fc:	mov	x21, #0x18                  	// #24
  45b400:	cbnz	w0, 45b3f8 <_obstack_memory_used@@Base+0x169f4>
  45b404:	ldrb	w0, [x19, #1650]
  45b408:	add	x21, x22, x21
  45b40c:	ldrb	w24, [x19, #1649]
  45b410:	cbnz	w0, 45b2bc <_obstack_memory_used@@Base+0x168b8>
  45b414:	mov	x23, x21
  45b418:	cmp	w24, #0xff
  45b41c:	b.eq	45b2ec <_obstack_memory_used@@Base+0x168e8>  // b.none
  45b420:	mov	x1, x20
  45b424:	mov	w0, w24
  45b428:	bl	45a730 <_obstack_memory_used@@Base+0x15d2c>
  45b42c:	mov	x1, x0
  45b430:	mov	x2, x21
  45b434:	mov	w0, w24
  45b438:	add	x3, sp, #0x68
  45b43c:	bl	45a5d0 <_obstack_memory_used@@Base+0x15bcc>
  45b440:	ldr	x1, [sp, #104]
  45b444:	mov	x23, x0
  45b448:	str	x1, [x20, #800]
  45b44c:	b	45b2ec <_obstack_memory_used@@Base+0x168e8>
  45b450:	ldp	x21, x22, [sp, #32]
  45b454:	mov	w0, #0x5                   	// #5
  45b458:	ldp	x19, x20, [sp, #16]
  45b45c:	ldp	x29, x30, [sp], #112
  45b460:	ret
  45b464:	mov	x24, x2
  45b468:	cbnz	x24, 45b268 <_obstack_memory_used@@Base+0x16864>
  45b46c:	ldp	x25, x26, [sp, #64]
  45b470:	ldp	x27, x28, [sp, #80]
  45b474:	mov	w0, #0x3                   	// #3
  45b478:	ldp	x19, x20, [sp, #16]
  45b47c:	ldp	x21, x22, [sp, #32]
  45b480:	ldp	x23, x24, [sp, #48]
  45b484:	ldp	x29, x30, [sp], #112
  45b488:	ret
  45b48c:	mov	x1, x20
  45b490:	mov	w0, w24
  45b494:	bl	45a730 <_obstack_memory_used@@Base+0x15d2c>
  45b498:	mov	x1, x0
  45b49c:	mov	x2, x21
  45b4a0:	mov	w0, w24
  45b4a4:	add	x3, sp, #0x68
  45b4a8:	bl	45a5d0 <_obstack_memory_used@@Base+0x15bcc>
  45b4ac:	ldr	x0, [sp, #104]
  45b4b0:	str	x0, [x20, #800]
  45b4b4:	b	45b2ec <_obstack_memory_used@@Base+0x168e8>
  45b4b8:	ldr	x0, [x20, #792]
  45b4bc:	mov	w1, #0x1168                	// #4456
  45b4c0:	movk	w1, #0xd280, lsl #16
  45b4c4:	ldr	w2, [x0]
  45b4c8:	cmp	w2, w1
  45b4cc:	b.ne	45b450 <_obstack_memory_used@@Base+0x16a4c>  // b.any
  45b4d0:	ldr	w1, [x0, #4]
  45b4d4:	mov	w0, #0x1                   	// #1
  45b4d8:	movk	w0, #0xd400, lsl #16
  45b4dc:	cmp	w1, w0
  45b4e0:	b.ne	45b450 <_obstack_memory_used@@Base+0x16a4c>  // b.any
  45b4e4:	ldr	x6, [x20, #784]
  45b4e8:	mov	w3, #0x1                   	// #1
  45b4ec:	mov	x1, x19
  45b4f0:	mov	w2, w3
  45b4f4:	add	x8, x6, #0x130
  45b4f8:	mov	x4, #0x1f                  	// #31
  45b4fc:	mov	x5, #0x130                 	// #304
  45b500:	mov	x0, #0x8                   	// #8
  45b504:	str	x5, [x19, #1576]
  45b508:	str	x4, [x19, #1584]
  45b50c:	str	w3, [x19, #1600]
  45b510:	str	w2, [x1, #8]
  45b514:	str	x0, [x1], #16
  45b518:	add	x0, x0, #0x8
  45b51c:	cmp	x0, #0x100
  45b520:	b.ne	45b510 <_obstack_memory_used@@Base+0x16b0c>  // b.any
  45b524:	ldr	w0, [x6, #592]
  45b528:	add	x5, x6, #0x250
  45b52c:	cbz	w0, 45b5bc <_obstack_memory_used@@Base+0x16bb8>
  45b530:	mov	w7, #0x8001                	// #32769
  45b534:	add	x4, x19, #0x600
  45b538:	add	x9, x6, x19
  45b53c:	movk	w7, #0x4650, lsl #16
  45b540:	mov	w3, #0x1                   	// #1
  45b544:	b	45b558 <_obstack_memory_used@@Base+0x16b54>
  45b548:	ldr	w0, [x5, #4]
  45b54c:	add	x5, x5, x0
  45b550:	ldr	w0, [x5]
  45b554:	cbz	w0, 45b5bc <_obstack_memory_used@@Base+0x16bb8>
  45b558:	cmp	w0, w7
  45b55c:	b.ne	45b548 <_obstack_memory_used@@Base+0x16b44>  // b.any
  45b560:	sub	x2, x5, #0x520
  45b564:	add	x0, x19, #0x400
  45b568:	sub	x2, x2, x9
  45b56c:	nop
  45b570:	str	w3, [x0, #8]
  45b574:	add	x1, x2, x0
  45b578:	str	x1, [x0], #16
  45b57c:	cmp	x4, x0
  45b580:	b.ne	45b570 <_obstack_memory_used@@Base+0x16b6c>  // b.any
  45b584:	b	45b548 <_obstack_memory_used@@Base+0x16b44>
  45b588:	mov	x21, #0xc                   	// #12
  45b58c:	b	45b2ac <_obstack_memory_used@@Base+0x168a8>
  45b590:	mov	x21, #0x8                   	// #8
  45b594:	b	45b2ac <_obstack_memory_used@@Base+0x168a8>
  45b598:	cmp	w3, #0x8
  45b59c:	b.ne	45b474 <_obstack_memory_used@@Base+0x16a70>  // b.any
  45b5a0:	ldrb	w0, [x2, #1]
  45b5a4:	cbnz	w0, 45b474 <_obstack_memory_used@@Base+0x16a70>
  45b5a8:	stp	x25, x26, [sp, #64]
  45b5ac:	add	x2, x2, #0x2
  45b5b0:	stp	x27, x28, [sp, #80]
  45b5b4:	ldrb	w3, [x2]
  45b5b8:	b	45b158 <_obstack_memory_used@@Base+0x16754>
  45b5bc:	mov	w3, #0x1                   	// #1
  45b5c0:	strb	w3, [x19, #1651]
  45b5c4:	add	x1, x6, #0x230
  45b5c8:	mov	w5, #0x4                   	// #4
  45b5cc:	ldr	x2, [x8, #264]
  45b5d0:	sub	x1, x1, x8
  45b5d4:	mov	x4, #0x60                  	// #96
  45b5d8:	mov	w0, #0x0                   	// #0
  45b5dc:	sub	x8, x2, x8
  45b5e0:	ldp	x21, x22, [sp, #32]
  45b5e4:	str	x1, [x19, #496]
  45b5e8:	str	w3, [x19, #504]
  45b5ec:	str	x8, [x19, #1536]
  45b5f0:	str	w5, [x19, #1544]
  45b5f4:	str	x4, [x19, #1640]
  45b5f8:	b	45b31c <_obstack_memory_used@@Base+0x16918>
  45b5fc:	mov	x24, x2
  45b600:	b	45b268 <_obstack_memory_used@@Base+0x16864>
  45b604:	nop
  45b608:	stp	x29, x30, [sp, #-80]!
  45b60c:	mov	x29, sp
  45b610:	stp	x21, x22, [sp, #32]
  45b614:	mov	x21, x0
  45b618:	ldr	x0, [x1, #832]
  45b61c:	stp	x19, x20, [sp, #16]
  45b620:	mov	x20, x1
  45b624:	stp	x23, x24, [sp, #48]
  45b628:	tbz	x0, #62, 45b634 <_obstack_memory_used@@Base+0x16c30>
  45b62c:	ldrb	w1, [x1, #887]
  45b630:	cbnz	w1, 45b63c <_obstack_memory_used@@Base+0x16c38>
  45b634:	ldr	x1, [x20, #248]
  45b638:	cbz	x1, 45b6f8 <_obstack_memory_used@@Base+0x16cf4>
  45b63c:	adrp	x24, 495000 <_obstack_memory_used@@Base+0x505fc>
  45b640:	add	x23, x21, #0x358
  45b644:	add	x24, x24, #0xb70
  45b648:	add	x22, x20, #0x358
  45b64c:	mov	x19, #0x0                   	// #0
  45b650:	b	45b674 <_obstack_memory_used@@Base+0x16c70>
  45b654:	cbz	x0, 45b668 <_obstack_memory_used@@Base+0x16c64>
  45b658:	ldrb	w2, [x19, x24]
  45b65c:	cmp	w2, #0x8
  45b660:	b.ne	45b764 <_obstack_memory_used@@Base+0x16d60>  // b.any
  45b664:	str	x1, [x0]
  45b668:	add	x19, x19, #0x1
  45b66c:	cmp	x19, #0x61
  45b670:	b.eq	45b6b0 <_obstack_memory_used@@Base+0x16cac>  // b.none
  45b674:	ldrb	w2, [x23, x19]
  45b678:	ldr	x0, [x21, x19, lsl #3]
  45b67c:	ldr	x1, [x20, x19, lsl #3]
  45b680:	cbnz	w2, 45b764 <_obstack_memory_used@@Base+0x16d60>
  45b684:	ldrb	w2, [x22, x19]
  45b688:	cbnz	w2, 45b654 <_obstack_memory_used@@Base+0x16c50>
  45b68c:	cmp	x1, #0x0
  45b690:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  45b694:	ccmp	x0, x1, #0x4, ne  // ne = any
  45b698:	b.eq	45b668 <_obstack_memory_used@@Base+0x16c64>  // b.none
  45b69c:	ldrb	w2, [x24, x19]
  45b6a0:	add	x19, x19, #0x1
  45b6a4:	bl	4026a0 <memcpy@plt>
  45b6a8:	cmp	x19, #0x61
  45b6ac:	b.ne	45b674 <_obstack_memory_used@@Base+0x16c70>  // b.any
  45b6b0:	ldr	x0, [x21, #832]
  45b6b4:	tbz	x0, #62, 45b6c0 <_obstack_memory_used@@Base+0x16cbc>
  45b6b8:	ldrb	w0, [x21, #887]
  45b6bc:	cbnz	w0, 45b6e0 <_obstack_memory_used@@Base+0x16cdc>
  45b6c0:	ldr	x1, [x21, #248]
  45b6c4:	mov	x0, #0x0                   	// #0
  45b6c8:	cbz	x1, 45b724 <_obstack_memory_used@@Base+0x16d20>
  45b6cc:	ldp	x19, x20, [sp, #16]
  45b6d0:	ldp	x21, x22, [sp, #32]
  45b6d4:	ldp	x23, x24, [sp, #48]
  45b6d8:	ldp	x29, x30, [sp], #80
  45b6dc:	ret
  45b6e0:	mov	x0, #0x0                   	// #0
  45b6e4:	ldp	x19, x20, [sp, #16]
  45b6e8:	ldp	x21, x22, [sp, #32]
  45b6ec:	ldp	x23, x24, [sp, #48]
  45b6f0:	ldp	x29, x30, [sp], #80
  45b6f4:	ret
  45b6f8:	adrp	x1, 495000 <_obstack_memory_used@@Base+0x505fc>
  45b6fc:	ldr	x2, [x20, #784]
  45b700:	ldrb	w1, [x1, #2959]
  45b704:	cmp	w1, #0x8
  45b708:	b.ne	45b764 <_obstack_memory_used@@Base+0x16d60>  // b.any
  45b70c:	str	x2, [sp, #72]
  45b710:	tbz	x0, #62, 45b718 <_obstack_memory_used@@Base+0x16d14>
  45b714:	strb	wzr, [x20, #887]
  45b718:	add	x0, sp, #0x48
  45b71c:	str	x0, [x20, #248]
  45b720:	b	45b63c <_obstack_memory_used@@Base+0x16c38>
  45b724:	ldr	x1, [x20, #832]
  45b728:	ldr	x0, [x20, #248]
  45b72c:	tbnz	x1, #62, 45b758 <_obstack_memory_used@@Base+0x16d54>
  45b730:	adrp	x1, 495000 <_obstack_memory_used@@Base+0x505fc>
  45b734:	ldrb	w1, [x1, #2959]
  45b738:	cmp	w1, #0x8
  45b73c:	b.ne	45b764 <_obstack_memory_used@@Base+0x16d60>  // b.any
  45b740:	ldr	x0, [x0]
  45b744:	ldr	x2, [x21, #784]
  45b748:	ldr	x1, [x20, #848]
  45b74c:	sub	x0, x0, x2
  45b750:	add	x0, x0, x1
  45b754:	b	45b6cc <_obstack_memory_used@@Base+0x16cc8>
  45b758:	ldrb	w1, [x20, #887]
  45b75c:	cbz	w1, 45b730 <_obstack_memory_used@@Base+0x16d2c>
  45b760:	b	45b744 <_obstack_memory_used@@Base+0x16d40>
  45b764:	bl	402a50 <abort@plt>
  45b768:	sub	sp, sp, #0x260
  45b76c:	cmp	x0, x1
  45b770:	stp	x29, x30, [sp]
  45b774:	mov	x29, sp
  45b778:	str	x3, [sp, #96]
  45b77c:	b.cs	45bbd4 <_obstack_memory_used@@Base+0x171d0>  // b.hs, b.nlast
  45b780:	stp	x19, x20, [sp, #16]
  45b784:	mov	x19, x0
  45b788:	mov	w20, #0x1                   	// #1
  45b78c:	stp	x21, x22, [sp, #32]
  45b790:	mov	x21, x1
  45b794:	add	x22, sp, #0x60
  45b798:	stp	x23, x24, [sp, #48]
  45b79c:	adrp	x23, 46e000 <_obstack_memory_used@@Base+0x295fc>
  45b7a0:	mov	x24, x2
  45b7a4:	add	x23, x23, #0x2fc
  45b7a8:	stp	x25, x26, [sp, #64]
  45b7ac:	adrp	x25, 46e000 <_obstack_memory_used@@Base+0x295fc>
  45b7b0:	add	x25, x25, #0x4dc
  45b7b4:	nop
  45b7b8:	mov	x4, x19
  45b7bc:	ldrb	w5, [x4], #1
  45b7c0:	sub	w0, w5, #0x3
  45b7c4:	cmp	w0, #0xee
  45b7c8:	b.ls	45b7d0 <_obstack_memory_used@@Base+0x16dcc>  // b.plast
  45b7cc:	bl	402a50 <abort@plt>
  45b7d0:	ldrh	w0, [x23, w0, uxtw #1]
  45b7d4:	adr	x1, 45b7e0 <_obstack_memory_used@@Base+0x16ddc>
  45b7d8:	add	x0, x1, w0, sxth #2
  45b7dc:	br	x0
  45b7e0:	mov	x3, #0x0                   	// #0
  45b7e4:	mov	w1, #0x0                   	// #0
  45b7e8:	ldrb	w2, [x4], #1
  45b7ec:	and	x0, x2, #0x7f
  45b7f0:	lsl	x0, x0, x1
  45b7f4:	add	w1, w1, #0x7
  45b7f8:	orr	x3, x3, x0
  45b7fc:	tbnz	w2, #7, 45b7e8 <_obstack_memory_used@@Base+0x16de4>
  45b800:	cmp	w1, #0x3f
  45b804:	b.ls	45bb68 <_obstack_memory_used@@Base+0x17164>  // b.plast
  45b808:	sub	w5, w5, #0x70
  45b80c:	cmp	w5, #0x61
  45b810:	b.gt	45b7cc <_obstack_memory_used@@Base+0x16dc8>
  45b814:	ldr	x2, [x24, #832]
  45b818:	sxtw	x1, w5
  45b81c:	ldr	x0, [x24, x1, lsl #3]
  45b820:	tbz	x2, #62, 45b830 <_obstack_memory_used@@Base+0x16e2c>
  45b824:	add	x1, x24, x1
  45b828:	ldrb	w1, [x1, #856]
  45b82c:	cbnz	w1, 45b850 <_obstack_memory_used@@Base+0x16e4c>
  45b830:	cmp	w5, #0x2e
  45b834:	b.eq	45bbc8 <_obstack_memory_used@@Base+0x171c4>  // b.none
  45b838:	adrp	x1, 495000 <_obstack_memory_used@@Base+0x505fc>
  45b83c:	add	x1, x1, #0xb70
  45b840:	ldrb	w1, [x1, w5, sxtw]
  45b844:	cmp	w1, #0x8
  45b848:	b.ne	45b7cc <_obstack_memory_used@@Base+0x16dc8>  // b.any
  45b84c:	ldr	x0, [x0]
  45b850:	add	x0, x3, x0
  45b854:	mov	w3, w20
  45b858:	mov	x19, x4
  45b85c:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45b860:	mov	w3, w20
  45b864:	add	x19, x19, #0x9
  45b868:	ldur	x0, [x19, #-8]
  45b86c:	nop
  45b870:	cmp	w3, #0x3f
  45b874:	b.gt	45b7cc <_obstack_memory_used@@Base+0x16dc8>
  45b878:	add	w20, w3, #0x1
  45b87c:	str	x0, [x22, w3, sxtw #3]
  45b880:	cmp	x21, x19
  45b884:	b.hi	45b7b8 <_obstack_memory_used@@Base+0x16db4>  // b.pmore
  45b888:	cbz	w20, 45b7cc <_obstack_memory_used@@Base+0x16dc8>
  45b88c:	sub	w20, w20, #0x1
  45b890:	add	x0, sp, #0x60
  45b894:	ldp	x29, x30, [sp]
  45b898:	ldr	x0, [x0, w20, sxtw #3]
  45b89c:	ldp	x19, x20, [sp, #16]
  45b8a0:	ldp	x21, x22, [sp, #32]
  45b8a4:	ldp	x23, x24, [sp, #48]
  45b8a8:	ldp	x25, x26, [sp, #64]
  45b8ac:	add	sp, sp, #0x260
  45b8b0:	ret
  45b8b4:	sub	w5, w5, #0x50
  45b8b8:	cmp	w5, #0x61
  45b8bc:	b.gt	45b7cc <_obstack_memory_used@@Base+0x16dc8>
  45b8c0:	ldr	x2, [x24, #832]
  45b8c4:	sxtw	x1, w5
  45b8c8:	ldr	x0, [x24, x1, lsl #3]
  45b8cc:	tbz	x2, #62, 45b8dc <_obstack_memory_used@@Base+0x16ed8>
  45b8d0:	add	x1, x24, x1
  45b8d4:	ldrb	w1, [x1, #856]
  45b8d8:	cbnz	w1, 45b854 <_obstack_memory_used@@Base+0x16e50>
  45b8dc:	cmp	w5, #0x2e
  45b8e0:	b.eq	45bbb4 <_obstack_memory_used@@Base+0x171b0>  // b.none
  45b8e4:	adrp	x1, 495000 <_obstack_memory_used@@Base+0x505fc>
  45b8e8:	add	x1, x1, #0xb70
  45b8ec:	ldrb	w1, [x1, w5, sxtw]
  45b8f0:	cmp	w1, #0x8
  45b8f4:	b.ne	45b7cc <_obstack_memory_used@@Base+0x16dc8>  // b.any
  45b8f8:	mov	w3, w20
  45b8fc:	mov	x19, x4
  45b900:	ldr	x0, [x0]
  45b904:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45b908:	sub	w0, w5, #0x30
  45b90c:	mov	w3, w20
  45b910:	mov	x19, x4
  45b914:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45b918:	cmp	w20, #0x1
  45b91c:	b.le	45b7cc <_obstack_memory_used@@Base+0x16dc8>
  45b920:	sub	w3, w20, #0x2
  45b924:	sub	w20, w20, #0x1
  45b928:	sub	w5, w5, #0x1a
  45b92c:	cmp	w5, #0x14
  45b930:	ldr	x1, [x22, w20, sxtw #3]
  45b934:	ldr	x0, [x22, w3, sxtw #3]
  45b938:	b.hi	45b7cc <_obstack_memory_used@@Base+0x16dc8>  // b.pmore
  45b93c:	ldrh	w2, [x25, w5, uxtw #1]
  45b940:	adr	x5, 45b94c <_obstack_memory_used@@Base+0x16f48>
  45b944:	add	x2, x5, w2, sxth #2
  45b948:	br	x2
  45b94c:	cbz	w20, 45b7cc <_obstack_memory_used@@Base+0x16dc8>
  45b950:	sub	w3, w20, #0x1
  45b954:	cmp	w5, #0x20
  45b958:	ldr	x0, [x22, w3, sxtw #3]
  45b95c:	b.eq	45beb0 <_obstack_memory_used@@Base+0x174ac>  // b.none
  45b960:	b.hi	45b980 <_obstack_memory_used@@Base+0x16f7c>  // b.pmore
  45b964:	cmp	w5, #0x19
  45b968:	b.eq	45bbe4 <_obstack_memory_used@@Base+0x171e0>  // b.none
  45b96c:	cmp	w5, #0x1f
  45b970:	b.ne	45bb54 <_obstack_memory_used@@Base+0x17150>  // b.any
  45b974:	neg	x0, x0
  45b978:	mov	x19, x4
  45b97c:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45b980:	cmp	w5, #0x23
  45b984:	b.eq	45bb88 <_obstack_memory_used@@Base+0x17184>  // b.none
  45b988:	cmp	w5, #0x94
  45b98c:	b.ne	45b7cc <_obstack_memory_used@@Base+0x16dc8>  // b.any
  45b990:	ldrb	w1, [x19, #1]
  45b994:	add	x19, x19, #0x2
  45b998:	cmp	w1, #0x4
  45b99c:	b.eq	45bda0 <_obstack_memory_used@@Base+0x1739c>  // b.none
  45b9a0:	b.hi	45becc <_obstack_memory_used@@Base+0x174c8>  // b.pmore
  45b9a4:	cmp	w1, #0x1
  45b9a8:	b.ne	45bebc <_obstack_memory_used@@Base+0x174b8>  // b.any
  45b9ac:	ldrb	w0, [x0]
  45b9b0:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45b9b4:	cmp	w20, #0x2
  45b9b8:	b.le	45b7cc <_obstack_memory_used@@Base+0x16dc8>
  45b9bc:	sub	w1, w20, #0x2
  45b9c0:	sub	w2, w20, #0x1
  45b9c4:	sub	w0, w20, #0x3
  45b9c8:	mov	x19, x4
  45b9cc:	sxtw	x1, w1
  45b9d0:	sxtw	x2, w2
  45b9d4:	sxtw	x0, w0
  45b9d8:	ldr	x5, [x22, x1, lsl #3]
  45b9dc:	ldr	x3, [x22, x2, lsl #3]
  45b9e0:	ldr	x4, [x22, x0, lsl #3]
  45b9e4:	str	x5, [x22, x2, lsl #3]
  45b9e8:	str	x4, [x22, x1, lsl #3]
  45b9ec:	str	x3, [x22, x0, lsl #3]
  45b9f0:	b	45b880 <_obstack_memory_used@@Base+0x16e7c>
  45b9f4:	cmp	w20, #0x1
  45b9f8:	b.le	45b7cc <_obstack_memory_used@@Base+0x16dc8>
  45b9fc:	sub	w0, w20, #0x2
  45ba00:	sub	w1, w20, #0x1
  45ba04:	mov	x19, x4
  45ba08:	sxtw	x0, w0
  45ba0c:	sxtw	x1, w1
  45ba10:	ldr	x3, [x22, x0, lsl #3]
  45ba14:	ldr	x2, [x22, x1, lsl #3]
  45ba18:	str	x3, [x22, x1, lsl #3]
  45ba1c:	str	x2, [x22, x0, lsl #3]
  45ba20:	b	45b880 <_obstack_memory_used@@Base+0x16e7c>
  45ba24:	ldrb	w3, [x19, #1]
  45ba28:	sub	w1, w20, #0x1
  45ba2c:	add	x19, x19, #0x2
  45ba30:	sxtw	x2, w1
  45ba34:	cmp	x3, w1, sxtw
  45ba38:	b.ge	45b7cc <_obstack_memory_used@@Base+0x16dc8>  // b.tcont
  45ba3c:	sub	x1, x2, x3
  45ba40:	mov	w3, w20
  45ba44:	ldr	x0, [x22, x1, lsl #3]
  45ba48:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45ba4c:	cmp	w20, #0x1
  45ba50:	b.le	45b7cc <_obstack_memory_used@@Base+0x16dc8>
  45ba54:	sub	w0, w20, #0x2
  45ba58:	mov	x19, x4
  45ba5c:	mov	w3, w20
  45ba60:	ldr	x0, [x22, w0, sxtw #3]
  45ba64:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45ba68:	cbz	w20, 45b7cc <_obstack_memory_used@@Base+0x16dc8>
  45ba6c:	sub	w20, w20, #0x1
  45ba70:	mov	x19, x4
  45ba74:	b	45b880 <_obstack_memory_used@@Base+0x16e7c>
  45ba78:	cbz	w20, 45b7cc <_obstack_memory_used@@Base+0x16dc8>
  45ba7c:	sub	w0, w20, #0x1
  45ba80:	mov	x19, x4
  45ba84:	mov	w3, w20
  45ba88:	ldr	x0, [x22, w0, sxtw #3]
  45ba8c:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45ba90:	ldursh	x1, [x19, #1]
  45ba94:	add	x19, x19, #0x3
  45ba98:	add	x19, x19, x1
  45ba9c:	b	45b880 <_obstack_memory_used@@Base+0x16e7c>
  45baa0:	ldrb	w0, [x19, #1]
  45baa4:	mov	w3, w20
  45baa8:	add	x19, x19, #0x2
  45baac:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45bab0:	ldrb	w26, [x19, #1]
  45bab4:	mov	x1, x24
  45bab8:	mov	w0, w26
  45babc:	bl	45a730 <_obstack_memory_used@@Base+0x15d2c>
  45bac0:	add	x2, x19, #0x2
  45bac4:	mov	x1, x0
  45bac8:	add	x3, sp, #0x58
  45bacc:	mov	w0, w26
  45bad0:	bl	45a5d0 <_obstack_memory_used@@Base+0x15bcc>
  45bad4:	mov	x19, x0
  45bad8:	mov	w3, w20
  45badc:	ldr	x0, [sp, #88]
  45bae0:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45bae4:	cbz	w20, 45b7cc <_obstack_memory_used@@Base+0x16dc8>
  45bae8:	sub	w20, w20, #0x1
  45baec:	add	x1, x19, #0x3
  45baf0:	ldr	x0, [x22, w20, sxtw #3]
  45baf4:	cbz	x0, 45bb80 <_obstack_memory_used@@Base+0x1717c>
  45baf8:	ldursh	x19, [x19, #1]
  45bafc:	add	x19, x1, x19
  45bb00:	b	45b880 <_obstack_memory_used@@Base+0x16e7c>
  45bb04:	ldursw	x0, [x19, #1]
  45bb08:	mov	w3, w20
  45bb0c:	add	x19, x19, #0x5
  45bb10:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45bb14:	ldur	w0, [x19, #1]
  45bb18:	mov	w3, w20
  45bb1c:	add	x19, x19, #0x5
  45bb20:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45bb24:	ldursh	x0, [x19, #1]
  45bb28:	mov	w3, w20
  45bb2c:	add	x19, x19, #0x3
  45bb30:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45bb34:	ldurh	w0, [x19, #1]
  45bb38:	mov	w3, w20
  45bb3c:	add	x19, x19, #0x3
  45bb40:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45bb44:	ldrsb	x0, [x19, #1]
  45bb48:	mov	w3, w20
  45bb4c:	add	x19, x19, #0x2
  45bb50:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45bb54:	cmp	w5, #0x6
  45bb58:	b.ne	45b7cc <_obstack_memory_used@@Base+0x16dc8>  // b.any
  45bb5c:	mov	x19, x4
  45bb60:	ldr	x0, [x0]
  45bb64:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45bb68:	mov	x0, #0xffffffffffffffff    	// #-1
  45bb6c:	tst	x2, #0x40
  45bb70:	lsl	x0, x0, x1
  45bb74:	orr	x0, x3, x0
  45bb78:	csel	x3, x0, x3, ne  // ne = any
  45bb7c:	b	45b808 <_obstack_memory_used@@Base+0x16e04>
  45bb80:	mov	x19, x1
  45bb84:	b	45b880 <_obstack_memory_used@@Base+0x16e7c>
  45bb88:	mov	x6, #0x0                   	// #0
  45bb8c:	mov	w2, #0x0                   	// #0
  45bb90:	ldrb	w5, [x4], #1
  45bb94:	and	x1, x5, #0x7f
  45bb98:	lsl	x1, x1, x2
  45bb9c:	add	w2, w2, #0x7
  45bba0:	orr	x6, x6, x1
  45bba4:	tbnz	w5, #7, 45bb90 <_obstack_memory_used@@Base+0x1718c>
  45bba8:	add	x0, x0, x6
  45bbac:	mov	x19, x4
  45bbb0:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45bbb4:	cntd	x0
  45bbb8:	mov	w3, w20
  45bbbc:	mov	x19, x4
  45bbc0:	sxtw	x0, w0
  45bbc4:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45bbc8:	cntd	x0
  45bbcc:	sxtw	x0, w0
  45bbd0:	b	45b850 <_obstack_memory_used@@Base+0x16e4c>
  45bbd4:	mov	x0, x3
  45bbd8:	ldp	x29, x30, [sp]
  45bbdc:	add	sp, sp, #0x260
  45bbe0:	ret
  45bbe4:	cmp	x0, #0x0
  45bbe8:	mov	x19, x4
  45bbec:	cneg	x0, x0, lt  // lt = tstop
  45bbf0:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45bbf4:	mov	x19, x4
  45bbf8:	mov	w1, #0x0                   	// #0
  45bbfc:	mov	x4, #0x0                   	// #0
  45bc00:	ldrb	w2, [x19], #1
  45bc04:	and	x0, x2, #0x7f
  45bc08:	lsl	x0, x0, x1
  45bc0c:	add	w1, w1, #0x7
  45bc10:	orr	x4, x4, x0
  45bc14:	tbnz	w2, #7, 45bc00 <_obstack_memory_used@@Base+0x171fc>
  45bc18:	mov	x3, #0x0                   	// #0
  45bc1c:	mov	w1, #0x0                   	// #0
  45bc20:	ldrb	w2, [x19], #1
  45bc24:	and	x0, x2, #0x7f
  45bc28:	lsl	x0, x0, x1
  45bc2c:	add	w1, w1, #0x7
  45bc30:	orr	x3, x3, x0
  45bc34:	tbnz	w2, #7, 45bc20 <_obstack_memory_used@@Base+0x1721c>
  45bc38:	cmp	w1, #0x3f
  45bc3c:	b.hi	45bc54 <_obstack_memory_used@@Base+0x17250>  // b.pmore
  45bc40:	mov	x0, #0xffffffffffffffff    	// #-1
  45bc44:	tst	x2, #0x40
  45bc48:	lsl	x0, x0, x1
  45bc4c:	orr	x0, x3, x0
  45bc50:	csel	x3, x0, x3, ne  // ne = any
  45bc54:	cmp	w4, #0x61
  45bc58:	mov	w1, w4
  45bc5c:	b.gt	45b7cc <_obstack_memory_used@@Base+0x16dc8>
  45bc60:	ldr	x2, [x24, #832]
  45bc64:	sxtw	x4, w4
  45bc68:	ldr	x0, [x24, x4, lsl #3]
  45bc6c:	tbz	x2, #62, 45bc7c <_obstack_memory_used@@Base+0x17278>
  45bc70:	add	x4, x24, x4
  45bc74:	ldrb	w2, [x4, #856]
  45bc78:	cbnz	w2, 45bc9c <_obstack_memory_used@@Base+0x17298>
  45bc7c:	cmp	w1, #0x2e
  45bc80:	b.eq	45be90 <_obstack_memory_used@@Base+0x1748c>  // b.none
  45bc84:	adrp	x2, 495000 <_obstack_memory_used@@Base+0x505fc>
  45bc88:	add	x2, x2, #0xb70
  45bc8c:	ldrb	w1, [x2, w1, sxtw]
  45bc90:	cmp	w1, #0x8
  45bc94:	b.ne	45b7cc <_obstack_memory_used@@Base+0x16dc8>  // b.any
  45bc98:	ldr	x0, [x0]
  45bc9c:	add	x0, x3, x0
  45bca0:	mov	w3, w20
  45bca4:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45bca8:	mov	x19, x4
  45bcac:	mov	x0, #0x0                   	// #0
  45bcb0:	mov	w2, #0x0                   	// #0
  45bcb4:	nop
  45bcb8:	ldrb	w4, [x19], #1
  45bcbc:	and	x1, x4, #0x7f
  45bcc0:	lsl	x1, x1, x2
  45bcc4:	add	w2, w2, #0x7
  45bcc8:	orr	x0, x0, x1
  45bccc:	tbnz	w4, #7, 45bcb8 <_obstack_memory_used@@Base+0x172b4>
  45bcd0:	mov	w3, w20
  45bcd4:	cmp	w2, #0x3f
  45bcd8:	b.hi	45b870 <_obstack_memory_used@@Base+0x16e6c>  // b.pmore
  45bcdc:	tbz	w4, #6, 45b870 <_obstack_memory_used@@Base+0x16e6c>
  45bce0:	mov	x1, #0xffffffffffffffff    	// #-1
  45bce4:	lsl	x2, x1, x2
  45bce8:	orr	x0, x0, x2
  45bcec:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45bcf0:	mov	x19, x4
  45bcf4:	mov	x0, #0x0                   	// #0
  45bcf8:	mov	w2, #0x0                   	// #0
  45bcfc:	nop
  45bd00:	ldrb	w3, [x19], #1
  45bd04:	and	x1, x3, #0x7f
  45bd08:	lsl	x1, x1, x2
  45bd0c:	add	w2, w2, #0x7
  45bd10:	orr	x0, x0, x1
  45bd14:	tbnz	w3, #7, 45bd00 <_obstack_memory_used@@Base+0x172fc>
  45bd18:	mov	w3, w20
  45bd1c:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45bd20:	mov	x19, x4
  45bd24:	mov	x3, #0x0                   	// #0
  45bd28:	mov	w1, #0x0                   	// #0
  45bd2c:	nop
  45bd30:	ldrb	w2, [x19], #1
  45bd34:	and	x0, x2, #0x7f
  45bd38:	lsl	x0, x0, x1
  45bd3c:	add	w1, w1, #0x7
  45bd40:	orr	x3, x3, x0
  45bd44:	tbnz	w2, #7, 45bd30 <_obstack_memory_used@@Base+0x1732c>
  45bd48:	cmp	w3, #0x61
  45bd4c:	mov	w1, w3
  45bd50:	b.gt	45b7cc <_obstack_memory_used@@Base+0x16dc8>
  45bd54:	ldr	x2, [x24, #832]
  45bd58:	sxtw	x3, w3
  45bd5c:	ldr	x0, [x24, x3, lsl #3]
  45bd60:	tbz	x2, #62, 45bd70 <_obstack_memory_used@@Base+0x1736c>
  45bd64:	add	x3, x24, x3
  45bd68:	ldrb	w2, [x3, #856]
  45bd6c:	cbnz	w2, 45bca0 <_obstack_memory_used@@Base+0x1729c>
  45bd70:	cmp	w1, #0x2e
  45bd74:	b.eq	45bea0 <_obstack_memory_used@@Base+0x1749c>  // b.none
  45bd78:	adrp	x2, 495000 <_obstack_memory_used@@Base+0x505fc>
  45bd7c:	add	x2, x2, #0xb70
  45bd80:	ldrb	w1, [x2, w1, sxtw]
  45bd84:	cmp	w1, #0x8
  45bd88:	b.ne	45b7cc <_obstack_memory_used@@Base+0x16dc8>  // b.any
  45bd8c:	mov	w3, w20
  45bd90:	ldr	x0, [x0]
  45bd94:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45bd98:	mov	x19, x4
  45bd9c:	b	45b880 <_obstack_memory_used@@Base+0x16e7c>
  45bda0:	ldr	w0, [x0]
  45bda4:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45bda8:	cmp	x0, x1
  45bdac:	mov	x19, x4
  45bdb0:	cset	x0, ne  // ne = any
  45bdb4:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45bdb8:	cmp	x0, x1
  45bdbc:	mov	x19, x4
  45bdc0:	cset	x0, lt  // lt = tstop
  45bdc4:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45bdc8:	cmp	x0, x1
  45bdcc:	mov	x19, x4
  45bdd0:	cset	x0, le
  45bdd4:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45bdd8:	cmp	x0, x1
  45bddc:	mov	x19, x4
  45bde0:	cset	x0, gt
  45bde4:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45bde8:	cmp	x0, x1
  45bdec:	mov	x19, x4
  45bdf0:	cset	x0, ge  // ge = tcont
  45bdf4:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45bdf8:	cmp	x0, x1
  45bdfc:	mov	x19, x4
  45be00:	cset	x0, eq  // eq = none
  45be04:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45be08:	eor	x0, x0, x1
  45be0c:	mov	x19, x4
  45be10:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45be14:	mov	x19, x4
  45be18:	asr	x0, x0, x1
  45be1c:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45be20:	mov	x19, x4
  45be24:	lsr	x0, x0, x1
  45be28:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45be2c:	mov	x19, x4
  45be30:	lsl	x0, x0, x1
  45be34:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45be38:	add	x0, x0, x1
  45be3c:	mov	x19, x4
  45be40:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45be44:	orr	x0, x0, x1
  45be48:	mov	x19, x4
  45be4c:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45be50:	mul	x0, x0, x1
  45be54:	mov	x19, x4
  45be58:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45be5c:	udiv	x2, x0, x1
  45be60:	mov	x19, x4
  45be64:	msub	x0, x2, x1, x0
  45be68:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45be6c:	sub	x0, x0, x1
  45be70:	mov	x19, x4
  45be74:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45be78:	sdiv	x0, x0, x1
  45be7c:	mov	x19, x4
  45be80:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45be84:	and	x0, x0, x1
  45be88:	mov	x19, x4
  45be8c:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45be90:	cntd	x0
  45be94:	sxtw	x0, w0
  45be98:	add	x0, x3, x0
  45be9c:	b	45bca0 <_obstack_memory_used@@Base+0x1729c>
  45bea0:	cntd	x0
  45bea4:	mov	w3, w20
  45bea8:	sxtw	x0, w0
  45beac:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45beb0:	mvn	x0, x0
  45beb4:	mov	x19, x4
  45beb8:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45bebc:	cmp	w1, #0x2
  45bec0:	b.ne	45b7cc <_obstack_memory_used@@Base+0x16dc8>  // b.any
  45bec4:	ldrh	w0, [x0]
  45bec8:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45becc:	cmp	w1, #0x8
  45bed0:	b.ne	45b7cc <_obstack_memory_used@@Base+0x16dc8>  // b.any
  45bed4:	ldr	x0, [x0]
  45bed8:	b	45b870 <_obstack_memory_used@@Base+0x16e6c>
  45bedc:	nop
  45bee0:	sub	sp, sp, #0x440
  45bee4:	mov	x2, #0x3c0                 	// #960
  45bee8:	stp	x29, x30, [sp]
  45beec:	mov	x29, sp
  45bef0:	stp	x27, x28, [sp, #80]
  45bef4:	add	x28, sp, #0x80
  45bef8:	mov	x27, x0
  45befc:	stp	x19, x20, [sp, #16]
  45bf00:	stp	x21, x22, [sp, #32]
  45bf04:	stp	x23, x24, [sp, #48]
  45bf08:	stp	x25, x26, [sp, #64]
  45bf0c:	str	x1, [sp, #104]
  45bf10:	mov	x1, x0
  45bf14:	mov	x0, x28
  45bf18:	bl	4026a0 <memcpy@plt>
  45bf1c:	ldr	x1, [sp, #960]
  45bf20:	tbz	x1, #62, 45bf2c <_obstack_memory_used@@Base+0x17528>
  45bf24:	ldrb	w0, [sp, #1015]
  45bf28:	cbnz	w0, 45bf34 <_obstack_memory_used@@Base+0x17530>
  45bf2c:	ldr	x0, [x28, #248]
  45bf30:	cbz	x0, 45c200 <_obstack_memory_used@@Base+0x177fc>
  45bf34:	ldr	x0, [x27, #832]
  45bf38:	tbz	x0, #62, 45bf40 <_obstack_memory_used@@Base+0x1753c>
  45bf3c:	strb	wzr, [x27, #887]
  45bf40:	ldr	x0, [sp, #104]
  45bf44:	ldr	w0, [x0, #1600]
  45bf48:	str	xzr, [x27, #248]
  45bf4c:	cmp	w0, #0x1
  45bf50:	b.ne	45bfa0 <_obstack_memory_used@@Base+0x1759c>  // b.any
  45bf54:	ldr	x0, [sp, #104]
  45bf58:	ldr	x0, [x0, #1584]
  45bf5c:	cmp	w0, #0x61
  45bf60:	b.gt	45c168 <_obstack_memory_used@@Base+0x17764>
  45bf64:	sxtw	x2, w0
  45bf68:	ldr	x3, [x28, x2, lsl #3]
  45bf6c:	tbnz	x1, #62, 45c1e0 <_obstack_memory_used@@Base+0x177dc>
  45bf70:	cmp	w0, #0x2e
  45bf74:	b.eq	45c1f4 <_obstack_memory_used@@Base+0x177f0>  // b.none
  45bf78:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  45bf7c:	add	x0, x0, #0xb70
  45bf80:	ldrb	w0, [x0, x2]
  45bf84:	cmp	w0, #0x8
  45bf88:	b.ne	45c168 <_obstack_memory_used@@Base+0x17764>  // b.any
  45bf8c:	ldr	x3, [x3]
  45bf90:	ldr	x0, [sp, #104]
  45bf94:	ldr	x0, [x0, #1576]
  45bf98:	add	x22, x3, x0
  45bf9c:	b	45bfe4 <_obstack_memory_used@@Base+0x175e0>
  45bfa0:	cmp	w0, #0x2
  45bfa4:	b.ne	45c168 <_obstack_memory_used@@Base+0x17764>  // b.any
  45bfa8:	ldr	x0, [sp, #104]
  45bfac:	mov	x1, #0x0                   	// #0
  45bfb0:	mov	w3, #0x0                   	// #0
  45bfb4:	ldr	x0, [x0, #1592]
  45bfb8:	ldrb	w4, [x0], #1
  45bfbc:	and	x2, x4, #0x7f
  45bfc0:	lsl	x2, x2, x3
  45bfc4:	add	w3, w3, #0x7
  45bfc8:	orr	x1, x1, x2
  45bfcc:	tbnz	w4, #7, 45bfb8 <_obstack_memory_used@@Base+0x175b4>
  45bfd0:	add	x1, x0, x1
  45bfd4:	mov	x2, x28
  45bfd8:	mov	x3, #0x0                   	// #0
  45bfdc:	bl	45b768 <_obstack_memory_used@@Base+0x16d64>
  45bfe0:	mov	x22, x0
  45bfe4:	ldr	x25, [sp, #104]
  45bfe8:	adrp	x23, 495000 <_obstack_memory_used@@Base+0x505fc>
  45bfec:	add	x26, x27, #0x358
  45bff0:	add	x20, x23, #0xb70
  45bff4:	add	x21, sp, #0x3d8
  45bff8:	mov	x24, #0x0                   	// #0
  45bffc:	mov	w19, #0x1                   	// #1
  45c000:	str	x22, [x27, #784]
  45c004:	nop
  45c008:	ldr	w2, [x25, #8]
  45c00c:	cmp	w2, #0x3
  45c010:	b.eq	45c0b4 <_obstack_memory_used@@Base+0x176b0>  // b.none
  45c014:	b.hi	45c0f8 <_obstack_memory_used@@Base+0x176f4>  // b.pmore
  45c018:	cmp	w2, #0x1
  45c01c:	b.eq	45c16c <_obstack_memory_used@@Base+0x17768>  // b.none
  45c020:	cmp	w2, #0x2
  45c024:	b.ne	45c04c <_obstack_memory_used@@Base+0x17648>  // b.any
  45c028:	ldr	x0, [x25]
  45c02c:	ldrb	w2, [x21, w0, sxtw]
  45c030:	sxtw	x1, w0
  45c034:	cbnz	w2, 45c184 <_obstack_memory_used@@Base+0x17780>
  45c038:	ldr	x2, [x27, #832]
  45c03c:	ldr	x0, [x28, x1, lsl #3]
  45c040:	tbnz	x2, #62, 45c0f0 <_obstack_memory_used@@Base+0x176ec>
  45c044:	nop
  45c048:	str	x0, [x27, x24, lsl #3]
  45c04c:	add	x24, x24, #0x1
  45c050:	add	x25, x25, #0x10
  45c054:	cmp	x24, #0x62
  45c058:	add	x26, x26, #0x1
  45c05c:	b.ne	45c008 <_obstack_memory_used@@Base+0x17604>  // b.any
  45c060:	ldr	x3, [sp, #104]
  45c064:	ldr	x0, [x27, #832]
  45c068:	ldrb	w2, [x3, #1651]
  45c06c:	orr	x1, x0, #0x8000000000000000
  45c070:	and	x0, x0, #0x7fffffffffffffff
  45c074:	cmp	w2, #0x0
  45c078:	csel	x0, x0, x1, eq  // eq = none
  45c07c:	ldp	x29, x30, [sp]
  45c080:	orr	x1, x0, #0x2000000000000000
  45c084:	ldp	x19, x20, [sp, #16]
  45c088:	ldp	x21, x22, [sp, #32]
  45c08c:	ldp	x23, x24, [sp, #48]
  45c090:	ldp	x25, x26, [sp, #64]
  45c094:	str	x0, [x27, #832]
  45c098:	ldr	x2, [x3, #544]
  45c09c:	tst	x2, #0x1
  45c0a0:	csel	x0, x1, x0, ne  // ne = any
  45c0a4:	str	x0, [x27, #832]
  45c0a8:	ldp	x27, x28, [sp, #80]
  45c0ac:	add	sp, sp, #0x440
  45c0b0:	ret
  45c0b4:	ldr	x0, [x25]
  45c0b8:	mov	x1, #0x0                   	// #0
  45c0bc:	mov	w4, #0x0                   	// #0
  45c0c0:	ldrb	w5, [x0], #1
  45c0c4:	and	x2, x5, #0x7f
  45c0c8:	lsl	x2, x2, x4
  45c0cc:	add	w4, w4, #0x7
  45c0d0:	orr	x1, x1, x2
  45c0d4:	tbnz	w5, #7, 45c0c0 <_obstack_memory_used@@Base+0x176bc>
  45c0d8:	add	x1, x0, x1
  45c0dc:	mov	x3, x22
  45c0e0:	mov	x2, x28
  45c0e4:	bl	45b768 <_obstack_memory_used@@Base+0x16d64>
  45c0e8:	ldr	x1, [x27, #832]
  45c0ec:	tbz	x1, #62, 45c048 <_obstack_memory_used@@Base+0x17644>
  45c0f0:	strb	wzr, [x26]
  45c0f4:	b	45c048 <_obstack_memory_used@@Base+0x17644>
  45c0f8:	cmp	w2, #0x4
  45c0fc:	b.eq	45c154 <_obstack_memory_used@@Base+0x17750>  // b.none
  45c100:	cmp	w2, #0x5
  45c104:	b.ne	45c04c <_obstack_memory_used@@Base+0x17648>  // b.any
  45c108:	ldr	x0, [x25]
  45c10c:	mov	x1, #0x0                   	// #0
  45c110:	mov	w4, #0x0                   	// #0
  45c114:	nop
  45c118:	ldrb	w5, [x0], #1
  45c11c:	and	x2, x5, #0x7f
  45c120:	lsl	x2, x2, x4
  45c124:	add	w4, w4, #0x7
  45c128:	orr	x1, x1, x2
  45c12c:	tbnz	w5, #7, 45c118 <_obstack_memory_used@@Base+0x17714>
  45c130:	add	x1, x0, x1
  45c134:	mov	x3, x22
  45c138:	mov	x2, x28
  45c13c:	bl	45b768 <_obstack_memory_used@@Base+0x16d64>
  45c140:	ldrb	w1, [x24, x20]
  45c144:	cmp	w1, #0x8
  45c148:	b.hi	45c168 <_obstack_memory_used@@Base+0x17764>  // b.pmore
  45c14c:	strb	w19, [x26]
  45c150:	b	45c048 <_obstack_memory_used@@Base+0x17644>
  45c154:	ldr	x0, [x25]
  45c158:	ldrb	w1, [x24, x20]
  45c15c:	add	x0, x22, x0
  45c160:	cmp	w1, #0x8
  45c164:	b.ls	45c14c <_obstack_memory_used@@Base+0x17748>  // b.plast
  45c168:	bl	402a50 <abort@plt>
  45c16c:	ldr	x1, [x27, #832]
  45c170:	ldr	x0, [x25]
  45c174:	add	x0, x22, x0
  45c178:	tbz	x1, #62, 45c048 <_obstack_memory_used@@Base+0x17644>
  45c17c:	strb	wzr, [x26]
  45c180:	b	45c048 <_obstack_memory_used@@Base+0x17644>
  45c184:	cmp	w0, #0x61
  45c188:	b.gt	45c168 <_obstack_memory_used@@Base+0x17764>
  45c18c:	ldr	x4, [sp, #960]
  45c190:	ldr	x2, [x28, x1, lsl #3]
  45c194:	tbz	x4, #62, 45c1b8 <_obstack_memory_used@@Base+0x177b4>
  45c198:	mov	x0, x2
  45c19c:	nop
  45c1a0:	add	x1, x23, #0xb70
  45c1a4:	ldrb	w1, [x24, x1]
  45c1a8:	cmp	w1, #0x8
  45c1ac:	b.hi	45c168 <_obstack_memory_used@@Base+0x17764>  // b.pmore
  45c1b0:	strb	w19, [x26]
  45c1b4:	b	45c048 <_obstack_memory_used@@Base+0x17644>
  45c1b8:	cmp	w0, #0x2e
  45c1bc:	b.eq	45c1d4 <_obstack_memory_used@@Base+0x177d0>  // b.none
  45c1c0:	ldrb	w0, [x20, x1]
  45c1c4:	cmp	w0, #0x8
  45c1c8:	b.ne	45c168 <_obstack_memory_used@@Base+0x17764>  // b.any
  45c1cc:	ldr	x0, [x2]
  45c1d0:	b	45c1a0 <_obstack_memory_used@@Base+0x1779c>
  45c1d4:	cntd	x0
  45c1d8:	sxtw	x0, w0
  45c1dc:	b	45c1a0 <_obstack_memory_used@@Base+0x1779c>
  45c1e0:	add	x1, sp, #0x3d8
  45c1e4:	ldrb	w1, [x1, x2]
  45c1e8:	cbnz	w1, 45bf90 <_obstack_memory_used@@Base+0x1758c>
  45c1ec:	cmp	w0, #0x2e
  45c1f0:	b.ne	45bf78 <_obstack_memory_used@@Base+0x17574>  // b.any
  45c1f4:	cntd	x0
  45c1f8:	sxtw	x3, w0
  45c1fc:	b	45bf90 <_obstack_memory_used@@Base+0x1758c>
  45c200:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  45c204:	ldr	x2, [x27, #784]
  45c208:	ldrb	w0, [x0, #2959]
  45c20c:	cmp	w0, #0x8
  45c210:	b.ne	45c168 <_obstack_memory_used@@Base+0x17764>  // b.any
  45c214:	str	x2, [sp, #120]
  45c218:	tbz	x1, #62, 45c220 <_obstack_memory_used@@Base+0x1781c>
  45c21c:	strb	wzr, [sp, #1015]
  45c220:	add	x0, sp, #0x78
  45c224:	str	x0, [x28, #248]
  45c228:	b	45bf34 <_obstack_memory_used@@Base+0x17530>
  45c22c:	nop
  45c230:	sub	sp, sp, #0x6d0
  45c234:	stp	x29, x30, [sp]
  45c238:	mov	x29, sp
  45c23c:	xpaclri
  45c240:	stp	x19, x20, [sp, #16]
  45c244:	mov	x19, x0
  45c248:	mov	x20, x30
  45c24c:	stp	x21, x22, [sp, #32]
  45c250:	mov	x22, x1
  45c254:	mov	x21, x2
  45c258:	mov	w1, #0x0                   	// #0
  45c25c:	mov	x2, #0x3c0                 	// #960
  45c260:	str	x23, [sp, #48]
  45c264:	bl	402930 <memset@plt>
  45c268:	mov	x0, #0x4000000000000000    	// #4611686018427387904
  45c26c:	str	x20, [x19, #792]
  45c270:	str	x0, [x19, #832]
  45c274:	add	x23, sp, #0x50
  45c278:	mov	x1, x23
  45c27c:	mov	x0, x19
  45c280:	bl	45b0b0 <_obstack_memory_used@@Base+0x166ac>
  45c284:	cbnz	w0, 45c478 <_obstack_memory_used@@Base+0x17a74>
  45c288:	adrp	x0, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  45c28c:	adrp	x20, 495000 <_obstack_memory_used@@Base+0x505fc>
  45c290:	ldr	x0, [x0, #3600]
  45c294:	cbz	x0, 45c31c <_obstack_memory_used@@Base+0x17918>
  45c298:	add	x0, x20, #0xb70
  45c29c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x155fc>
  45c2a0:	add	x0, x0, #0x64
  45c2a4:	add	x1, x1, #0xf58
  45c2a8:	bl	402aa0 <pthread_once@plt>
  45c2ac:	cbnz	w0, 45c31c <_obstack_memory_used@@Base+0x17918>
  45c2b0:	add	x20, x20, #0xb70
  45c2b4:	ldrb	w0, [x20, #31]
  45c2b8:	cmp	w0, #0x8
  45c2bc:	b.ne	45c478 <_obstack_memory_used@@Base+0x17a74>  // b.any
  45c2c0:	ldr	x0, [x19, #832]
  45c2c4:	str	x22, [sp, #72]
  45c2c8:	tbz	x0, #62, 45c2d0 <_obstack_memory_used@@Base+0x178cc>
  45c2cc:	strb	wzr, [x19, #887]
  45c2d0:	add	x0, sp, #0x48
  45c2d4:	mov	x3, #0x1f                  	// #31
  45c2d8:	mov	w2, #0x1                   	// #1
  45c2dc:	str	x0, [x19, #248]
  45c2e0:	mov	x1, x23
  45c2e4:	mov	x0, x19
  45c2e8:	str	xzr, [sp, #1656]
  45c2ec:	str	x3, [sp, #1664]
  45c2f0:	str	w2, [sp, #1680]
  45c2f4:	bl	45bee0 <_obstack_memory_used@@Base+0x174dc>
  45c2f8:	mov	x30, x21
  45c2fc:	xpaclri
  45c300:	ldp	x21, x22, [sp, #32]
  45c304:	ldr	x23, [sp, #48]
  45c308:	str	x30, [x19, #792]
  45c30c:	ldp	x29, x30, [sp]
  45c310:	ldp	x19, x20, [sp, #16]
  45c314:	add	sp, sp, #0x6d0
  45c318:	ret
  45c31c:	ldrb	w0, [x20, #2928]
  45c320:	add	x3, x20, #0xb70
  45c324:	cbnz	w0, 45c2b0 <_obstack_memory_used@@Base+0x178ac>
  45c328:	mov	w4, #0x8                   	// #8
  45c32c:	strb	w4, [x20, #2928]
  45c330:	strb	w4, [x3, #1]
  45c334:	strb	w4, [x3, #2]
  45c338:	strb	w4, [x3, #3]
  45c33c:	strb	w4, [x3, #4]
  45c340:	strb	w4, [x3, #5]
  45c344:	strb	w4, [x3, #6]
  45c348:	strb	w4, [x3, #7]
  45c34c:	strb	w4, [x3, #8]
  45c350:	strb	w4, [x3, #9]
  45c354:	strb	w4, [x3, #10]
  45c358:	strb	w4, [x3, #11]
  45c35c:	strb	w4, [x3, #12]
  45c360:	strb	w4, [x3, #13]
  45c364:	strb	w4, [x3, #14]
  45c368:	strb	w4, [x3, #15]
  45c36c:	strb	w4, [x3, #16]
  45c370:	strb	w4, [x3, #17]
  45c374:	strb	w4, [x3, #18]
  45c378:	strb	w4, [x3, #19]
  45c37c:	strb	w4, [x3, #20]
  45c380:	strb	w4, [x3, #21]
  45c384:	strb	w4, [x3, #22]
  45c388:	strb	w4, [x3, #23]
  45c38c:	strb	w4, [x3, #24]
  45c390:	strb	w4, [x3, #25]
  45c394:	strb	w4, [x3, #26]
  45c398:	strb	w4, [x3, #27]
  45c39c:	strb	w4, [x3, #28]
  45c3a0:	strb	w4, [x3, #29]
  45c3a4:	strb	w4, [x3, #30]
  45c3a8:	strb	w4, [x3, #31]
  45c3ac:	strb	w4, [x3, #64]
  45c3b0:	strb	w4, [x3, #46]
  45c3b4:	strb	w4, [x3, #65]
  45c3b8:	strb	w4, [x3, #66]
  45c3bc:	strb	w4, [x3, #67]
  45c3c0:	strb	w4, [x3, #68]
  45c3c4:	strb	w4, [x3, #69]
  45c3c8:	strb	w4, [x3, #70]
  45c3cc:	strb	w4, [x3, #71]
  45c3d0:	strb	w4, [x3, #72]
  45c3d4:	strb	w4, [x3, #73]
  45c3d8:	strb	w4, [x3, #74]
  45c3dc:	strb	w4, [x3, #75]
  45c3e0:	strb	w4, [x3, #76]
  45c3e4:	strb	w4, [x3, #77]
  45c3e8:	strb	w4, [x3, #78]
  45c3ec:	strb	w4, [x3, #79]
  45c3f0:	strb	w4, [x3, #80]
  45c3f4:	strb	w4, [x3, #81]
  45c3f8:	strb	w4, [x3, #82]
  45c3fc:	strb	w4, [x3, #83]
  45c400:	strb	w4, [x3, #84]
  45c404:	strb	w4, [x3, #85]
  45c408:	strb	w4, [x3, #86]
  45c40c:	strb	w4, [x3, #87]
  45c410:	strb	w4, [x3, #88]
  45c414:	strb	w4, [x3, #89]
  45c418:	strb	w4, [x3, #90]
  45c41c:	strb	w4, [x3, #91]
  45c420:	strb	w4, [x3, #92]
  45c424:	strb	w4, [x3, #93]
  45c428:	strb	w4, [x3, #94]
  45c42c:	strb	w4, [x3, #95]
  45c430:	strb	w4, [x3, #48]
  45c434:	strb	w4, [x3, #49]
  45c438:	strb	w4, [x3, #50]
  45c43c:	strb	w4, [x3, #51]
  45c440:	strb	w4, [x3, #52]
  45c444:	strb	w4, [x3, #53]
  45c448:	strb	w4, [x3, #54]
  45c44c:	strb	w4, [x3, #55]
  45c450:	strb	w4, [x3, #56]
  45c454:	strb	w4, [x3, #57]
  45c458:	strb	w4, [x3, #58]
  45c45c:	strb	w4, [x3, #59]
  45c460:	strb	w4, [x3, #60]
  45c464:	strb	w4, [x3, #61]
  45c468:	strb	w4, [x3, #62]
  45c46c:	strb	w4, [x3, #63]
  45c470:	strb	w4, [x3, #96]
  45c474:	b	45c2b0 <_obstack_memory_used@@Base+0x178ac>
  45c478:	bl	402a50 <abort@plt>
  45c47c:	nop
  45c480:	stp	x29, x30, [sp, #-32]!
  45c484:	mov	x29, sp
  45c488:	stp	x19, x20, [sp, #16]
  45c48c:	mov	x20, x1
  45c490:	mov	x19, x0
  45c494:	bl	45bee0 <_obstack_memory_used@@Base+0x174dc>
  45c498:	ldr	x0, [x20, #1640]
  45c49c:	add	x1, x20, x0, lsl #4
  45c4a0:	ldr	w1, [x1, #8]
  45c4a4:	cmp	w1, #0x6
  45c4a8:	b.ne	45c4bc <_obstack_memory_used@@Base+0x17ab8>  // b.any
  45c4ac:	str	xzr, [x19, #792]
  45c4b0:	ldp	x19, x20, [sp, #16]
  45c4b4:	ldp	x29, x30, [sp], #32
  45c4b8:	ret
  45c4bc:	cmp	w0, #0x61
  45c4c0:	b.gt	45c530 <_obstack_memory_used@@Base+0x17b2c>
  45c4c4:	ldr	x2, [x19, #832]
  45c4c8:	sxtw	x1, w0
  45c4cc:	ldr	x17, [x19, x1, lsl #3]
  45c4d0:	tbz	x2, #62, 45c4e0 <_obstack_memory_used@@Base+0x17adc>
  45c4d4:	add	x2, x19, x1
  45c4d8:	ldrb	w2, [x2, #856]
  45c4dc:	cbnz	w2, 45c500 <_obstack_memory_used@@Base+0x17afc>
  45c4e0:	cmp	w0, #0x2e
  45c4e4:	b.eq	45c524 <_obstack_memory_used@@Base+0x17b20>  // b.none
  45c4e8:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  45c4ec:	add	x0, x0, #0xb70
  45c4f0:	ldrb	w0, [x0, x1]
  45c4f4:	cmp	w0, #0x8
  45c4f8:	b.ne	45c530 <_obstack_memory_used@@Base+0x17b2c>  // b.any
  45c4fc:	ldr	x17, [x17]
  45c500:	ldr	x0, [x20, #544]
  45c504:	str	x17, [x19, #792]
  45c508:	tbz	w0, #0, 45c514 <_obstack_memory_used@@Base+0x17b10>
  45c50c:	ldr	x16, [x19, #784]
  45c510:	autia1716
  45c514:	str	x17, [x19, #792]
  45c518:	ldp	x19, x20, [sp, #16]
  45c51c:	ldp	x29, x30, [sp], #32
  45c520:	ret
  45c524:	cntd	x0
  45c528:	sxtw	x17, w0
  45c52c:	b	45c500 <_obstack_memory_used@@Base+0x17afc>
  45c530:	bl	402a50 <abort@plt>
  45c534:	nop
  45c538:	sub	sp, sp, #0x6c0
  45c53c:	stp	x29, x30, [sp]
  45c540:	mov	x29, sp
  45c544:	stp	x19, x20, [sp, #16]
  45c548:	mov	x19, x1
  45c54c:	stp	x21, x22, [sp, #32]
  45c550:	mov	x21, x0
  45c554:	add	x22, sp, #0x40
  45c558:	stp	x23, x24, [sp, #48]
  45c55c:	mov	x24, x2
  45c560:	mov	x23, #0x1                   	// #1
  45c564:	nop
  45c568:	mov	x1, x22
  45c56c:	mov	x0, x19
  45c570:	bl	45b0b0 <_obstack_memory_used@@Base+0x166ac>
  45c574:	ldr	x3, [x19, #784]
  45c578:	ldr	x1, [x19, #832]
  45c57c:	ldr	x2, [x21, #24]
  45c580:	sub	x1, x3, x1, lsr #63
  45c584:	cmp	x2, x1
  45c588:	cset	w20, eq  // eq = none
  45c58c:	lsl	w20, w20, #2
  45c590:	cbnz	w0, 45c5dc <_obstack_memory_used@@Base+0x17bd8>
  45c594:	ldr	x5, [sp, #1680]
  45c598:	cbz	x5, 45c5c4 <_obstack_memory_used@@Base+0x17bc0>
  45c59c:	ldr	x2, [x21]
  45c5a0:	mov	x4, x19
  45c5a4:	mov	x3, x21
  45c5a8:	orr	w1, w20, #0x2
  45c5ac:	mov	w0, #0x1                   	// #1
  45c5b0:	blr	x5
  45c5b4:	cmp	w0, #0x7
  45c5b8:	b.eq	45c5f8 <_obstack_memory_used@@Base+0x17bf4>  // b.none
  45c5bc:	cmp	w0, #0x8
  45c5c0:	b.ne	45c5dc <_obstack_memory_used@@Base+0x17bd8>  // b.any
  45c5c4:	cbnz	w20, 45c614 <_obstack_memory_used@@Base+0x17c10>
  45c5c8:	add	x23, x23, #0x1
  45c5cc:	mov	x1, x22
  45c5d0:	mov	x0, x19
  45c5d4:	bl	45c480 <_obstack_memory_used@@Base+0x17a7c>
  45c5d8:	b	45c568 <_obstack_memory_used@@Base+0x17b64>
  45c5dc:	mov	w0, #0x2                   	// #2
  45c5e0:	ldp	x29, x30, [sp]
  45c5e4:	ldp	x19, x20, [sp, #16]
  45c5e8:	ldp	x21, x22, [sp, #32]
  45c5ec:	ldp	x23, x24, [sp, #48]
  45c5f0:	add	sp, sp, #0x6c0
  45c5f4:	ret
  45c5f8:	str	x23, [x24]
  45c5fc:	ldp	x29, x30, [sp]
  45c600:	ldp	x19, x20, [sp, #16]
  45c604:	ldp	x21, x22, [sp, #32]
  45c608:	ldp	x23, x24, [sp, #48]
  45c60c:	add	sp, sp, #0x6c0
  45c610:	ret
  45c614:	bl	402a50 <abort@plt>
  45c618:	sub	sp, sp, #0x6d0
  45c61c:	stp	x29, x30, [sp]
  45c620:	mov	x29, sp
  45c624:	stp	x19, x20, [sp, #16]
  45c628:	mov	x20, x0
  45c62c:	stp	x21, x22, [sp, #32]
  45c630:	mov	x21, x1
  45c634:	add	x22, sp, #0x50
  45c638:	stp	x23, x24, [sp, #48]
  45c63c:	mov	x23, #0x1                   	// #1
  45c640:	stp	x25, x26, [sp, #64]
  45c644:	mov	x26, x2
  45c648:	ldp	x25, x24, [x0, #16]
  45c64c:	b	45c6a0 <_obstack_memory_used@@Base+0x17c9c>
  45c650:	blr	x25
  45c654:	mov	w2, w0
  45c658:	mov	x4, x21
  45c65c:	mov	x3, x20
  45c660:	mov	w1, #0xa                   	// #10
  45c664:	mov	w0, #0x1                   	// #1
  45c668:	cbnz	w2, 45c6ec <_obstack_memory_used@@Base+0x17ce8>
  45c66c:	ldr	x5, [sp, #1696]
  45c670:	cbz	x5, 45c690 <_obstack_memory_used@@Base+0x17c8c>
  45c674:	ldr	x2, [x20]
  45c678:	blr	x5
  45c67c:	mov	w19, w0
  45c680:	cmp	w0, #0x7
  45c684:	b.eq	45c710 <_obstack_memory_used@@Base+0x17d0c>  // b.none
  45c688:	cmp	w0, #0x8
  45c68c:	b.ne	45c6ec <_obstack_memory_used@@Base+0x17ce8>  // b.any
  45c690:	add	x23, x23, #0x1
  45c694:	mov	x1, x22
  45c698:	mov	x0, x21
  45c69c:	bl	45c480 <_obstack_memory_used@@Base+0x17a7c>
  45c6a0:	mov	x1, x22
  45c6a4:	mov	x0, x21
  45c6a8:	bl	45b0b0 <_obstack_memory_used@@Base+0x166ac>
  45c6ac:	cmp	w0, #0x0
  45c6b0:	mov	w19, w0
  45c6b4:	mov	x5, x24
  45c6b8:	mov	x4, x21
  45c6bc:	ccmp	w0, #0x5, #0x4, ne  // ne = any
  45c6c0:	b.ne	45c6ec <_obstack_memory_used@@Base+0x17ce8>  // b.any
  45c6c4:	cmp	w0, #0x5
  45c6c8:	mov	x3, x20
  45c6cc:	mov	w1, #0xa                   	// #10
  45c6d0:	mov	w0, #0x1                   	// #1
  45c6d4:	ldr	x2, [x20]
  45c6d8:	b.ne	45c650 <_obstack_memory_used@@Base+0x17c4c>  // b.any
  45c6dc:	mov	w1, #0x1a                  	// #26
  45c6e0:	mov	w0, #0x1                   	// #1
  45c6e4:	blr	x25
  45c6e8:	cbz	w0, 45c710 <_obstack_memory_used@@Base+0x17d0c>
  45c6ec:	mov	w19, #0x2                   	// #2
  45c6f0:	mov	w0, w19
  45c6f4:	ldp	x29, x30, [sp]
  45c6f8:	ldp	x19, x20, [sp, #16]
  45c6fc:	ldp	x21, x22, [sp, #32]
  45c700:	ldp	x23, x24, [sp, #48]
  45c704:	ldp	x25, x26, [sp, #64]
  45c708:	add	sp, sp, #0x6d0
  45c70c:	ret
  45c710:	str	x23, [x26]
  45c714:	mov	w0, w19
  45c718:	ldp	x29, x30, [sp]
  45c71c:	ldp	x19, x20, [sp, #16]
  45c720:	ldp	x21, x22, [sp, #32]
  45c724:	ldp	x23, x24, [sp, #48]
  45c728:	ldp	x25, x26, [sp, #64]
  45c72c:	add	sp, sp, #0x6d0
  45c730:	ret
  45c734:	nop
  45c738:	cmp	w1, #0x61
  45c73c:	b.gt	45c794 <_obstack_memory_used@@Base+0x17d90>
  45c740:	ldr	x4, [x0, #832]
  45c744:	sxtw	x3, w1
  45c748:	ldr	x2, [x0, x3, lsl #3]
  45c74c:	tbz	x4, #62, 45c75c <_obstack_memory_used@@Base+0x17d58>
  45c750:	add	x0, x0, x3
  45c754:	ldrb	w0, [x0, #856]
  45c758:	cbnz	w0, 45c78c <_obstack_memory_used@@Base+0x17d88>
  45c75c:	cmp	w1, #0x2e
  45c760:	b.eq	45c780 <_obstack_memory_used@@Base+0x17d7c>  // b.none
  45c764:	adrp	x0, 495000 <_obstack_memory_used@@Base+0x505fc>
  45c768:	add	x0, x0, #0xb70
  45c76c:	ldrb	w0, [x0, w1, sxtw]
  45c770:	cmp	w0, #0x8
  45c774:	b.ne	45c794 <_obstack_memory_used@@Base+0x17d90>  // b.any
  45c778:	ldr	x0, [x2]
  45c77c:	ret
  45c780:	cntd	x0
  45c784:	sxtw	x0, w0
  45c788:	ret
  45c78c:	mov	x0, x2
  45c790:	ret
  45c794:	stp	x29, x30, [sp, #-16]!
  45c798:	mov	x29, sp
  45c79c:	bl	402a50 <abort@plt>
  45c7a0:	ldr	x0, [x0, #784]
  45c7a4:	ret
  45c7a8:	cmp	w1, #0x61
  45c7ac:	b.gt	45c7f0 <_obstack_memory_used@@Base+0x17dec>
  45c7b0:	ldr	x5, [x0, #832]
  45c7b4:	adrp	x3, 495000 <_obstack_memory_used@@Base+0x505fc>
  45c7b8:	add	x3, x3, #0xb70
  45c7bc:	sxtw	x4, w1
  45c7c0:	ldrb	w1, [x3, w1, sxtw]
  45c7c4:	tbz	x5, #62, 45c7d4 <_obstack_memory_used@@Base+0x17dd0>
  45c7c8:	add	x3, x0, x4
  45c7cc:	ldrb	w3, [x3, #856]
  45c7d0:	cbnz	w3, 45c7e8 <_obstack_memory_used@@Base+0x17de4>
  45c7d4:	cmp	w1, #0x8
  45c7d8:	ldr	x0, [x0, x4, lsl #3]
  45c7dc:	b.ne	45c7f0 <_obstack_memory_used@@Base+0x17dec>  // b.any
  45c7e0:	str	x2, [x0]
  45c7e4:	ret
  45c7e8:	str	x2, [x0, x4, lsl #3]
  45c7ec:	ret
  45c7f0:	stp	x29, x30, [sp, #-16]!
  45c7f4:	mov	x29, sp
  45c7f8:	bl	402a50 <abort@plt>
  45c7fc:	nop
  45c800:	ldr	x0, [x0, #792]
  45c804:	ret
  45c808:	ldr	x2, [x0, #832]
  45c80c:	ldr	x0, [x0, #792]
  45c810:	lsr	x2, x2, #63
  45c814:	str	w2, [x1]
  45c818:	ret
  45c81c:	nop
  45c820:	str	x1, [x0, #792]
  45c824:	ret
  45c828:	ldr	x0, [x0, #800]
  45c82c:	ret
  45c830:	ldr	x0, [x0, #824]
  45c834:	ret
  45c838:	stp	x29, x30, [sp, #-48]!
  45c83c:	sub	x0, x0, #0x1
  45c840:	mov	x29, sp
  45c844:	add	x1, sp, #0x18
  45c848:	bl	45e7f0 <_obstack_memory_used@@Base+0x19dec>
  45c84c:	ldr	x1, [sp, #40]
  45c850:	cmp	x0, #0x0
  45c854:	ldp	x29, x30, [sp], #48
  45c858:	csel	x0, x1, x0, ne  // ne = any
  45c85c:	ret
  45c860:	ldr	x0, [x0, #816]
  45c864:	ret
  45c868:	ldr	x0, [x0, #808]
  45c86c:	ret
  45c870:	sub	sp, sp, #0xa70
  45c874:	mov	x2, #0x3c0                 	// #960
  45c878:	add	x3, sp, #0x30
  45c87c:	stp	x29, x30, [sp]
  45c880:	mov	x29, sp
  45c884:	stp	x19, x20, [sp, #16]
  45c888:	mov	x20, x1
  45c88c:	mov	w1, #0x0                   	// #0
  45c890:	str	x21, [sp, #32]
  45c894:	mov	x21, x0
  45c898:	mov	x0, x3
  45c89c:	bl	402930 <memset@plt>
  45c8a0:	mov	x2, #0x4000000000000000    	// #4611686018427387904
  45c8a4:	add	x19, sp, #0x3f0
  45c8a8:	add	x21, x21, #0x1
  45c8ac:	mov	x1, x19
  45c8b0:	str	x21, [sp, #840]
  45c8b4:	str	x2, [sp, #880]
  45c8b8:	bl	45b0b0 <_obstack_memory_used@@Base+0x166ac>
  45c8bc:	cbnz	w0, 45c968 <_obstack_memory_used@@Base+0x17f64>
  45c8c0:	ldr	w0, [sp, #2608]
  45c8c4:	cmp	w0, #0x2
  45c8c8:	b.eq	45c968 <_obstack_memory_used@@Base+0x17f64>  // b.none
  45c8cc:	sub	x4, x20, x20, lsl #3
  45c8d0:	mov	x1, #0xffffffffffffe680    	// #-6528
  45c8d4:	mov	x0, x19
  45c8d8:	add	x5, x19, #0x620
  45c8dc:	add	x4, x4, x1
  45c8e0:	add	x2, x20, #0x334
  45c8e4:	b	45c8fc <_obstack_memory_used@@Base+0x17ef8>
  45c8e8:	str	xzr, [x4, x2, lsl #3]
  45c8ec:	add	x0, x0, #0x10
  45c8f0:	add	x2, x2, #0x1
  45c8f4:	cmp	x0, x5
  45c8f8:	b.eq	45c92c <_obstack_memory_used@@Base+0x17f28>  // b.none
  45c8fc:	ldrb	w3, [x0, #8]
  45c900:	strb	w3, [x2]
  45c904:	cmp	w3, #0x1
  45c908:	b.eq	45c914 <_obstack_memory_used@@Base+0x17f10>  // b.none
  45c90c:	cmp	w3, #0x2
  45c910:	b.ne	45c8e8 <_obstack_memory_used@@Base+0x17ee4>  // b.any
  45c914:	ldr	x3, [x0]
  45c918:	str	x3, [x4, x2, lsl #3]
  45c91c:	add	x0, x0, #0x10
  45c920:	add	x2, x2, #0x1
  45c924:	cmp	x0, x5
  45c928:	b.ne	45c8fc <_obstack_memory_used@@Base+0x17ef8>  // b.any
  45c92c:	ldr	x1, [sp, #896]
  45c930:	mov	x0, x20
  45c934:	ldr	x2, [sp, #2584]
  45c938:	stp	x2, x1, [x20, #16]
  45c93c:	ldr	x2, [sp, #2592]
  45c940:	strh	w2, [x20, #816]
  45c944:	ldr	x1, [sp, #2648]
  45c948:	strh	w1, [x20, #818]
  45c94c:	ldr	x2, [sp, #2664]
  45c950:	str	x2, [x20, #8]
  45c954:	ldp	x29, x30, [sp]
  45c958:	ldp	x19, x20, [sp, #16]
  45c95c:	ldr	x21, [sp, #32]
  45c960:	add	sp, sp, #0xa70
  45c964:	ret
  45c968:	mov	x0, #0x0                   	// #0
  45c96c:	ldp	x29, x30, [sp]
  45c970:	ldp	x19, x20, [sp, #16]
  45c974:	ldr	x21, [sp, #32]
  45c978:	add	sp, sp, #0xa70
  45c97c:	ret
  45c980:	ret
  45c984:	nop
  45c988:	sub	sp, sp, #0xec0
  45c98c:	stp	x29, x30, [sp]
  45c990:	mov	x29, sp
  45c994:	stp	x21, x22, [sp, #64]
  45c998:	add	x21, sp, #0xc0
  45c99c:	add	x22, sp, #0x840
  45c9a0:	stp	x0, x1, [sp, #16]
  45c9a4:	add	x1, sp, #0xec0
  45c9a8:	stp	x2, x3, [sp, #32]
  45c9ac:	mov	x2, x30
  45c9b0:	stp	x19, x20, [sp, #48]
  45c9b4:	mov	x20, x0
  45c9b8:	add	x19, sp, #0x480
  45c9bc:	mov	x0, x21
  45c9c0:	stp	x23, x24, [sp, #80]
  45c9c4:	stp	x25, x26, [sp, #96]
  45c9c8:	stp	x27, x28, [sp, #112]
  45c9cc:	stp	d8, d9, [sp, #128]
  45c9d0:	stp	d10, d11, [sp, #144]
  45c9d4:	stp	d12, d13, [sp, #160]
  45c9d8:	stp	d14, d15, [sp, #176]
  45c9dc:	bl	45c230 <_obstack_memory_used@@Base+0x1782c>
  45c9e0:	mov	x1, x21
  45c9e4:	mov	x0, x19
  45c9e8:	mov	x2, #0x3c0                 	// #960
  45c9ec:	bl	4026a0 <memcpy@plt>
  45c9f0:	b	45ca24 <_obstack_memory_used@@Base+0x18020>
  45c9f4:	cbnz	w2, 45ca90 <_obstack_memory_used@@Base+0x1808c>
  45c9f8:	ldr	x5, [sp, #3728]
  45c9fc:	cbz	x5, 45ca18 <_obstack_memory_used@@Base+0x18014>
  45ca00:	ldr	x2, [x20]
  45ca04:	blr	x5
  45ca08:	cmp	w0, #0x6
  45ca0c:	b.eq	45ca98 <_obstack_memory_used@@Base+0x18094>  // b.none
  45ca10:	cmp	w0, #0x8
  45ca14:	b.ne	45ca90 <_obstack_memory_used@@Base+0x1808c>  // b.any
  45ca18:	mov	x1, x22
  45ca1c:	mov	x0, x19
  45ca20:	bl	45c480 <_obstack_memory_used@@Base+0x17a7c>
  45ca24:	mov	x1, x22
  45ca28:	mov	x0, x19
  45ca2c:	bl	45b0b0 <_obstack_memory_used@@Base+0x166ac>
  45ca30:	mov	w2, w0
  45ca34:	mov	w1, #0x1                   	// #1
  45ca38:	mov	x4, x19
  45ca3c:	mov	x3, x20
  45ca40:	mov	w0, w1
  45ca44:	cmp	w2, #0x5
  45ca48:	b.ne	45c9f4 <_obstack_memory_used@@Base+0x17ff0>  // b.any
  45ca4c:	mov	x4, #0x0                   	// #0
  45ca50:	mov	w0, w2
  45ca54:	ldp	x29, x30, [sp]
  45ca58:	ldp	x0, x1, [sp, #16]
  45ca5c:	ldp	x2, x3, [sp, #32]
  45ca60:	ldp	x19, x20, [sp, #48]
  45ca64:	ldp	x21, x22, [sp, #64]
  45ca68:	ldp	x23, x24, [sp, #80]
  45ca6c:	ldp	x25, x26, [sp, #96]
  45ca70:	ldp	x27, x28, [sp, #112]
  45ca74:	ldp	d8, d9, [sp, #128]
  45ca78:	ldp	d10, d11, [sp, #144]
  45ca7c:	ldp	d12, d13, [sp, #160]
  45ca80:	ldp	d14, d15, [sp, #176]
  45ca84:	add	sp, sp, #0xec0
  45ca88:	add	sp, sp, x4
  45ca8c:	ret
  45ca90:	mov	w2, #0x3                   	// #3
  45ca94:	b	45ca4c <_obstack_memory_used@@Base+0x18048>
  45ca98:	ldr	x4, [sp, #1936]
  45ca9c:	mov	x1, x21
  45caa0:	ldr	x3, [sp, #1984]
  45caa4:	mov	x2, #0x3c0                 	// #960
  45caa8:	mov	x0, x19
  45caac:	sub	x3, x4, x3, lsr #63
  45cab0:	stp	xzr, x3, [x20, #16]
  45cab4:	bl	4026a0 <memcpy@plt>
  45cab8:	mov	x2, x22
  45cabc:	mov	x1, x19
  45cac0:	mov	x0, x20
  45cac4:	bl	45c538 <_obstack_memory_used@@Base+0x17b34>
  45cac8:	mov	w2, w0
  45cacc:	cmp	w0, #0x7
  45cad0:	b.ne	45ca4c <_obstack_memory_used@@Base+0x18048>  // b.any
  45cad4:	mov	x1, x19
  45cad8:	mov	x0, x21
  45cadc:	bl	45b608 <_obstack_memory_used@@Base+0x16c04>
  45cae0:	mov	x4, x0
  45cae4:	ldr	x2, [sp, #1024]
  45cae8:	ldr	x1, [sp, #1944]
  45caec:	tbz	x2, #61, 45cb00 <_obstack_memory_used@@Base+0x180fc>
  45caf0:	mov	x17, x1
  45caf4:	ldr	x16, [sp, #976]
  45caf8:	pacia1716
  45cafc:	mov	x1, x17
  45cb00:	ldr	x0, [sp, #1936]
  45cb04:	bl	45c980 <_obstack_memory_used@@Base+0x17f7c>
  45cb08:	str	x1, [x29, #8]
  45cb0c:	b	45ca50 <_obstack_memory_used@@Base+0x1804c>
  45cb10:	sub	sp, sp, #0x850
  45cb14:	stp	x29, x30, [sp]
  45cb18:	mov	x29, sp
  45cb1c:	stp	x19, x20, [sp, #48]
  45cb20:	mov	x19, x0
  45cb24:	mov	x20, x2
  45cb28:	stp	x21, x22, [sp, #64]
  45cb2c:	add	x22, sp, #0xd0
  45cb30:	mov	x21, x1
  45cb34:	stp	x0, x1, [sp, #16]
  45cb38:	mov	x0, x22
  45cb3c:	add	x1, sp, #0x850
  45cb40:	stp	x2, x3, [sp, #32]
  45cb44:	mov	x2, x30
  45cb48:	stp	x23, x24, [sp, #80]
  45cb4c:	add	x23, sp, #0x490
  45cb50:	stp	x25, x26, [sp, #96]
  45cb54:	stp	x27, x28, [sp, #112]
  45cb58:	stp	d8, d9, [sp, #128]
  45cb5c:	stp	d10, d11, [sp, #144]
  45cb60:	stp	d12, d13, [sp, #160]
  45cb64:	stp	d14, d15, [sp, #176]
  45cb68:	bl	45c230 <_obstack_memory_used@@Base+0x1782c>
  45cb6c:	mov	x1, x22
  45cb70:	mov	x2, #0x3c0                 	// #960
  45cb74:	mov	x0, x23
  45cb78:	bl	4026a0 <memcpy@plt>
  45cb7c:	stp	x21, x20, [x19, #16]
  45cb80:	mov	x0, x19
  45cb84:	mov	x1, x23
  45cb88:	add	x2, sp, #0xc8
  45cb8c:	bl	45c618 <_obstack_memory_used@@Base+0x17c14>
  45cb90:	cmp	w0, #0x7
  45cb94:	mov	x4, #0x0                   	// #0
  45cb98:	b.eq	45cbd8 <_obstack_memory_used@@Base+0x181d4>  // b.none
  45cb9c:	ldp	x29, x30, [sp]
  45cba0:	ldp	x0, x1, [sp, #16]
  45cba4:	ldp	x2, x3, [sp, #32]
  45cba8:	ldp	x19, x20, [sp, #48]
  45cbac:	ldp	x21, x22, [sp, #64]
  45cbb0:	ldp	x23, x24, [sp, #80]
  45cbb4:	ldp	x25, x26, [sp, #96]
  45cbb8:	ldp	x27, x28, [sp, #112]
  45cbbc:	ldp	d8, d9, [sp, #128]
  45cbc0:	ldp	d10, d11, [sp, #144]
  45cbc4:	ldp	d12, d13, [sp, #160]
  45cbc8:	ldp	d14, d15, [sp, #176]
  45cbcc:	add	sp, sp, #0x850
  45cbd0:	add	sp, sp, x4
  45cbd4:	ret
  45cbd8:	mov	x1, x23
  45cbdc:	mov	x0, x22
  45cbe0:	bl	45b608 <_obstack_memory_used@@Base+0x16c04>
  45cbe4:	mov	x4, x0
  45cbe8:	ldr	x2, [sp, #1040]
  45cbec:	ldr	x1, [sp, #1960]
  45cbf0:	tbz	x2, #61, 45cc04 <_obstack_memory_used@@Base+0x18200>
  45cbf4:	mov	x17, x1
  45cbf8:	ldr	x16, [sp, #992]
  45cbfc:	pacia1716
  45cc00:	mov	x1, x17
  45cc04:	ldr	x0, [sp, #1952]
  45cc08:	bl	45c980 <_obstack_memory_used@@Base+0x17f7c>
  45cc0c:	str	x1, [x29, #8]
  45cc10:	b	45cb9c <_obstack_memory_used@@Base+0x18198>
  45cc14:	nop
  45cc18:	sub	sp, sp, #0x850
  45cc1c:	stp	x29, x30, [sp]
  45cc20:	mov	x29, sp
  45cc24:	stp	x19, x20, [sp, #48]
  45cc28:	mov	x19, x0
  45cc2c:	add	x20, sp, #0xd0
  45cc30:	stp	x0, x1, [sp, #16]
  45cc34:	mov	x0, x20
  45cc38:	add	x1, sp, #0x850
  45cc3c:	stp	x2, x3, [sp, #32]
  45cc40:	mov	x2, x30
  45cc44:	stp	x21, x22, [sp, #64]
  45cc48:	add	x21, sp, #0x490
  45cc4c:	stp	x23, x24, [sp, #80]
  45cc50:	stp	x25, x26, [sp, #96]
  45cc54:	stp	x27, x28, [sp, #112]
  45cc58:	stp	d8, d9, [sp, #128]
  45cc5c:	stp	d10, d11, [sp, #144]
  45cc60:	stp	d12, d13, [sp, #160]
  45cc64:	stp	d14, d15, [sp, #176]
  45cc68:	bl	45c230 <_obstack_memory_used@@Base+0x1782c>
  45cc6c:	mov	x1, x20
  45cc70:	mov	x0, x21
  45cc74:	mov	x2, #0x3c0                 	// #960
  45cc78:	bl	4026a0 <memcpy@plt>
  45cc7c:	ldr	x0, [x19, #16]
  45cc80:	cbnz	x0, 45cd10 <_obstack_memory_used@@Base+0x1830c>
  45cc84:	mov	x0, x19
  45cc88:	add	x2, sp, #0xc8
  45cc8c:	mov	x1, x21
  45cc90:	bl	45c538 <_obstack_memory_used@@Base+0x17b34>
  45cc94:	cmp	w0, #0x7
  45cc98:	b.ne	45cd24 <_obstack_memory_used@@Base+0x18320>  // b.any
  45cc9c:	mov	x1, x21
  45cca0:	mov	x0, x20
  45cca4:	bl	45b608 <_obstack_memory_used@@Base+0x16c04>
  45cca8:	mov	x4, x0
  45ccac:	ldr	x2, [sp, #1040]
  45ccb0:	ldr	x1, [sp, #1960]
  45ccb4:	tbz	x2, #61, 45ccc8 <_obstack_memory_used@@Base+0x182c4>
  45ccb8:	mov	x17, x1
  45ccbc:	ldr	x16, [sp, #992]
  45ccc0:	pacia1716
  45ccc4:	mov	x1, x17
  45ccc8:	ldr	x0, [sp, #1952]
  45cccc:	bl	45c980 <_obstack_memory_used@@Base+0x17f7c>
  45ccd0:	str	x1, [x29, #8]
  45ccd4:	ldp	x29, x30, [sp]
  45ccd8:	ldp	x0, x1, [sp, #16]
  45ccdc:	ldp	x2, x3, [sp, #32]
  45cce0:	ldp	x19, x20, [sp, #48]
  45cce4:	ldp	x21, x22, [sp, #64]
  45cce8:	ldp	x23, x24, [sp, #80]
  45ccec:	ldp	x25, x26, [sp, #96]
  45ccf0:	ldp	x27, x28, [sp, #112]
  45ccf4:	ldp	d8, d9, [sp, #128]
  45ccf8:	ldp	d10, d11, [sp, #144]
  45ccfc:	ldp	d12, d13, [sp, #160]
  45cd00:	ldp	d14, d15, [sp, #176]
  45cd04:	add	sp, sp, #0x850
  45cd08:	add	sp, sp, x4
  45cd0c:	ret
  45cd10:	mov	x0, x19
  45cd14:	add	x2, sp, #0xc8
  45cd18:	mov	x1, x21
  45cd1c:	bl	45c618 <_obstack_memory_used@@Base+0x17c14>
  45cd20:	b	45cc94 <_obstack_memory_used@@Base+0x18290>
  45cd24:	bl	402a50 <abort@plt>
  45cd28:	sub	sp, sp, #0x850
  45cd2c:	stp	x29, x30, [sp]
  45cd30:	mov	x29, sp
  45cd34:	stp	x0, x1, [sp, #16]
  45cd38:	ldr	x1, [x0, #16]
  45cd3c:	stp	x2, x3, [sp, #32]
  45cd40:	stp	x19, x20, [sp, #48]
  45cd44:	mov	x19, x0
  45cd48:	stp	x21, x22, [sp, #64]
  45cd4c:	stp	x23, x24, [sp, #80]
  45cd50:	stp	x25, x26, [sp, #96]
  45cd54:	stp	x27, x28, [sp, #112]
  45cd58:	stp	d8, d9, [sp, #128]
  45cd5c:	stp	d10, d11, [sp, #144]
  45cd60:	stp	d12, d13, [sp, #160]
  45cd64:	stp	d14, d15, [sp, #176]
  45cd68:	cbnz	x1, 45cdb0 <_obstack_memory_used@@Base+0x183ac>
  45cd6c:	bl	45c988 <_obstack_memory_used@@Base+0x17f84>
  45cd70:	mov	x4, #0x0                   	// #0
  45cd74:	ldp	x29, x30, [sp]
  45cd78:	ldp	x0, x1, [sp, #16]
  45cd7c:	ldp	x2, x3, [sp, #32]
  45cd80:	ldp	x19, x20, [sp, #48]
  45cd84:	ldp	x21, x22, [sp, #64]
  45cd88:	ldp	x23, x24, [sp, #80]
  45cd8c:	ldp	x25, x26, [sp, #96]
  45cd90:	ldp	x27, x28, [sp, #112]
  45cd94:	ldp	d8, d9, [sp, #128]
  45cd98:	ldp	d10, d11, [sp, #144]
  45cd9c:	ldp	d12, d13, [sp, #160]
  45cda0:	ldp	d14, d15, [sp, #176]
  45cda4:	add	sp, sp, #0x850
  45cda8:	add	sp, sp, x4
  45cdac:	ret
  45cdb0:	add	x20, sp, #0xd0
  45cdb4:	mov	x2, x30
  45cdb8:	mov	x0, x20
  45cdbc:	add	x1, sp, #0x850
  45cdc0:	add	x21, sp, #0x490
  45cdc4:	bl	45c230 <_obstack_memory_used@@Base+0x1782c>
  45cdc8:	mov	x1, x20
  45cdcc:	mov	x2, #0x3c0                 	// #960
  45cdd0:	mov	x0, x21
  45cdd4:	bl	4026a0 <memcpy@plt>
  45cdd8:	mov	x0, x19
  45cddc:	mov	x1, x21
  45cde0:	add	x2, sp, #0xc8
  45cde4:	bl	45c618 <_obstack_memory_used@@Base+0x17c14>
  45cde8:	cmp	w0, #0x7
  45cdec:	b.ne	45ce2c <_obstack_memory_used@@Base+0x18428>  // b.any
  45cdf0:	mov	x1, x21
  45cdf4:	mov	x0, x20
  45cdf8:	bl	45b608 <_obstack_memory_used@@Base+0x16c04>
  45cdfc:	mov	x4, x0
  45ce00:	ldr	x2, [sp, #1040]
  45ce04:	ldr	x1, [sp, #1960]
  45ce08:	tbz	x2, #61, 45ce1c <_obstack_memory_used@@Base+0x18418>
  45ce0c:	mov	x17, x1
  45ce10:	ldr	x16, [sp, #992]
  45ce14:	pacia1716
  45ce18:	mov	x1, x17
  45ce1c:	ldr	x0, [sp, #1952]
  45ce20:	bl	45c980 <_obstack_memory_used@@Base+0x17f7c>
  45ce24:	str	x1, [x29, #8]
  45ce28:	b	45cd74 <_obstack_memory_used@@Base+0x18370>
  45ce2c:	bl	402a50 <abort@plt>
  45ce30:	ldr	x2, [x0, #8]
  45ce34:	mov	x1, x0
  45ce38:	cbz	x2, 45ce48 <_obstack_memory_used@@Base+0x18444>
  45ce3c:	mov	x16, x2
  45ce40:	mov	w0, #0x1                   	// #1
  45ce44:	br	x16
  45ce48:	ret
  45ce4c:	nop
  45ce50:	sub	sp, sp, #0xae0
  45ce54:	mov	x2, x30
  45ce58:	stp	x29, x30, [sp]
  45ce5c:	mov	x29, sp
  45ce60:	stp	x19, x20, [sp, #16]
  45ce64:	add	x20, sp, #0xa0
  45ce68:	stp	x21, x22, [sp, #32]
  45ce6c:	mov	x22, x1
  45ce70:	add	x21, sp, #0x460
  45ce74:	add	x1, sp, #0xae0
  45ce78:	stp	x23, x24, [sp, #48]
  45ce7c:	mov	x23, x0
  45ce80:	mov	x0, x20
  45ce84:	stp	x25, x26, [sp, #64]
  45ce88:	stp	x27, x28, [sp, #80]
  45ce8c:	stp	d8, d9, [sp, #96]
  45ce90:	stp	d10, d11, [sp, #112]
  45ce94:	stp	d12, d13, [sp, #128]
  45ce98:	stp	d14, d15, [sp, #144]
  45ce9c:	bl	45c230 <_obstack_memory_used@@Base+0x1782c>
  45cea0:	b	45cec0 <_obstack_memory_used@@Base+0x184bc>
  45cea4:	blr	x23
  45cea8:	cbnz	w0, 45cee4 <_obstack_memory_used@@Base+0x184e0>
  45ceac:	cmp	w19, #0x5
  45ceb0:	b.eq	45cee8 <_obstack_memory_used@@Base+0x184e4>  // b.none
  45ceb4:	mov	x1, x21
  45ceb8:	mov	x0, x20
  45cebc:	bl	45c480 <_obstack_memory_used@@Base+0x17a7c>
  45cec0:	mov	x1, x21
  45cec4:	mov	x0, x20
  45cec8:	bl	45b0b0 <_obstack_memory_used@@Base+0x166ac>
  45cecc:	mov	w19, w0
  45ced0:	cmp	w0, #0x0
  45ced4:	mov	x1, x22
  45ced8:	mov	x0, x20
  45cedc:	ccmp	w19, #0x5, #0x4, ne  // ne = any
  45cee0:	b.eq	45cea4 <_obstack_memory_used@@Base+0x184a0>  // b.none
  45cee4:	mov	w19, #0x3                   	// #3
  45cee8:	mov	w0, w19
  45ceec:	ldp	x29, x30, [sp]
  45cef0:	ldp	x19, x20, [sp, #16]
  45cef4:	ldp	x21, x22, [sp, #32]
  45cef8:	ldp	x23, x24, [sp, #48]
  45cefc:	ldp	x25, x26, [sp, #64]
  45cf00:	ldp	x27, x28, [sp, #80]
  45cf04:	ldp	d8, d9, [sp, #96]
  45cf08:	ldp	d10, d11, [sp, #112]
  45cf0c:	ldp	d12, d13, [sp, #128]
  45cf10:	ldp	d14, d15, [sp, #144]
  45cf14:	add	sp, sp, #0xae0
  45cf18:	ret
  45cf1c:	nop
  45cf20:	ldr	x3, [x1, #8]
  45cf24:	mov	w4, #0x1                   	// #1
  45cf28:	ldr	x1, [x2, #8]
  45cf2c:	cmp	x3, x1
  45cf30:	csetm	w0, cc  // cc = lo, ul, last
  45cf34:	csel	w0, w0, w4, ls  // ls = plast
  45cf38:	ret
  45cf3c:	nop
  45cf40:	stp	x29, x30, [sp, #-112]!
  45cf44:	mov	x29, sp
  45cf48:	stp	x21, x22, [sp, #32]
  45cf4c:	lsl	w21, w3, #1
  45cf50:	stp	x25, x26, [sp, #64]
  45cf54:	add	w25, w21, #0x1
  45cf58:	cmp	w25, w4
  45cf5c:	b.ge	45d034 <_obstack_memory_used@@Base+0x18630>  // b.tcont
  45cf60:	mov	w22, w3
  45cf64:	stp	x19, x20, [sp, #16]
  45cf68:	mov	x20, x2
  45cf6c:	stp	x23, x24, [sp, #48]
  45cf70:	mov	w23, w4
  45cf74:	mov	x24, x1
  45cf78:	stp	x27, x28, [sp, #80]
  45cf7c:	mov	x27, x0
  45cf80:	b	45cfd8 <_obstack_memory_used@@Base+0x185d4>
  45cf84:	ldr	x2, [x20, x26]
  45cf88:	blr	x24
  45cf8c:	ldr	x3, [sp, #104]
  45cf90:	tbnz	w0, #31, 45d044 <_obstack_memory_used@@Base+0x18640>
  45cf94:	ldr	x1, [x20, x28, lsl #3]
  45cf98:	mov	w21, w25
  45cf9c:	sxtw	x26, w22
  45cfa0:	mov	x2, x1
  45cfa4:	mov	w22, w21
  45cfa8:	mov	x0, x27
  45cfac:	lsl	w21, w21, #1
  45cfb0:	ldr	x1, [x20, x26, lsl #3]
  45cfb4:	blr	x24
  45cfb8:	tbz	w0, #31, 45d028 <_obstack_memory_used@@Base+0x18624>
  45cfbc:	ldr	x1, [x19]
  45cfc0:	add	w25, w21, #0x1
  45cfc4:	ldr	x0, [x20, x26, lsl #3]
  45cfc8:	str	x1, [x20, x26, lsl #3]
  45cfcc:	str	x0, [x19]
  45cfd0:	cmp	w23, w25
  45cfd4:	b.le	45d028 <_obstack_memory_used@@Base+0x18624>
  45cfd8:	sbfiz	x19, x25, #3, #32
  45cfdc:	sxtw	x28, w25
  45cfe0:	add	x26, x19, #0x8
  45cfe4:	add	w21, w25, #0x1
  45cfe8:	add	x3, x20, x26
  45cfec:	str	x3, [sp, #104]
  45cff0:	cmp	w21, w23
  45cff4:	add	x19, x20, x19
  45cff8:	mov	x0, x27
  45cffc:	ldr	x1, [x20, x28, lsl #3]
  45d000:	b.lt	45cf84 <_obstack_memory_used@@Base+0x18580>  // b.tstop
  45d004:	sxtw	x26, w22
  45d008:	mov	x2, x1
  45d00c:	mov	w21, w25
  45d010:	mov	x0, x27
  45d014:	mov	w22, w21
  45d018:	ldr	x1, [x20, x26, lsl #3]
  45d01c:	lsl	w21, w21, #1
  45d020:	blr	x24
  45d024:	tbnz	w0, #31, 45cfbc <_obstack_memory_used@@Base+0x185b8>
  45d028:	ldp	x19, x20, [sp, #16]
  45d02c:	ldp	x23, x24, [sp, #48]
  45d030:	ldp	x27, x28, [sp, #80]
  45d034:	ldp	x21, x22, [sp, #32]
  45d038:	ldp	x25, x26, [sp, #64]
  45d03c:	ldp	x29, x30, [sp], #112
  45d040:	ret
  45d044:	mov	x19, x3
  45d048:	ldr	x1, [x20, x26]
  45d04c:	b	45cf9c <_obstack_memory_used@@Base+0x18598>
  45d050:	stp	x29, x30, [sp, #-80]!
  45d054:	mov	x29, sp
  45d058:	stp	x19, x20, [sp, #16]
  45d05c:	ldr	x19, [x2, #8]
  45d060:	stp	x21, x22, [sp, #32]
  45d064:	mov	x22, x2
  45d068:	stp	x23, x24, [sp, #48]
  45d06c:	add	x21, x2, #0x10
  45d070:	lsr	x20, x19, #1
  45d074:	mov	x23, x0
  45d078:	mov	x24, x1
  45d07c:	subs	w20, w20, #0x1
  45d080:	b.mi	45d0b8 <_obstack_memory_used@@Base+0x186b4>  // b.first
  45d084:	str	x25, [sp, #64]
  45d088:	mov	w25, w19
  45d08c:	nop
  45d090:	mov	w3, w20
  45d094:	mov	w4, w25
  45d098:	mov	x2, x21
  45d09c:	sub	w20, w20, #0x1
  45d0a0:	mov	x1, x24
  45d0a4:	mov	x0, x23
  45d0a8:	bl	45cf40 <_obstack_memory_used@@Base+0x1853c>
  45d0ac:	cmn	w20, #0x1
  45d0b0:	b.ne	45d090 <_obstack_memory_used@@Base+0x1868c>  // b.any
  45d0b4:	ldr	x25, [sp, #64]
  45d0b8:	sub	w19, w19, #0x1
  45d0bc:	cmp	w19, #0x0
  45d0c0:	sxtw	x19, w19
  45d0c4:	b.le	45d0fc <_obstack_memory_used@@Base+0x186f8>
  45d0c8:	ldr	x1, [x21, x19, lsl #3]
  45d0cc:	mov	w4, w19
  45d0d0:	ldr	x0, [x22, #16]
  45d0d4:	str	x1, [x22, #16]
  45d0d8:	str	x0, [x21, x19, lsl #3]
  45d0dc:	mov	x2, x21
  45d0e0:	sub	x19, x19, #0x1
  45d0e4:	mov	x1, x24
  45d0e8:	mov	x0, x23
  45d0ec:	mov	w3, #0x0                   	// #0
  45d0f0:	bl	45cf40 <_obstack_memory_used@@Base+0x1853c>
  45d0f4:	cmp	w19, #0x0
  45d0f8:	b.gt	45d0c8 <_obstack_memory_used@@Base+0x186c4>
  45d0fc:	ldp	x19, x20, [sp, #16]
  45d100:	ldp	x21, x22, [sp, #32]
  45d104:	ldp	x23, x24, [sp, #48]
  45d108:	ldp	x29, x30, [sp], #80
  45d10c:	ret
  45d110:	and	w0, w0, #0xff
  45d114:	cmp	w0, #0xff
  45d118:	b.eq	45d168 <_obstack_memory_used@@Base+0x18764>  // b.none
  45d11c:	and	w1, w0, #0x7
  45d120:	cmp	w1, #0x2
  45d124:	b.eq	45d160 <_obstack_memory_used@@Base+0x1875c>  // b.none
  45d128:	b.ls	45d154 <_obstack_memory_used@@Base+0x18750>  // b.plast
  45d12c:	cmp	w1, #0x3
  45d130:	mov	w0, #0x4                   	// #4
  45d134:	b.ne	45d13c <_obstack_memory_used@@Base+0x18738>  // b.any
  45d138:	ret
  45d13c:	cmp	w1, w0
  45d140:	mov	w0, #0x8                   	// #8
  45d144:	b.eq	45d138 <_obstack_memory_used@@Base+0x18734>  // b.none
  45d148:	stp	x29, x30, [sp, #-16]!
  45d14c:	mov	x29, sp
  45d150:	bl	402a50 <abort@plt>
  45d154:	mov	w0, #0x8                   	// #8
  45d158:	cbnz	w1, 45d148 <_obstack_memory_used@@Base+0x18744>
  45d15c:	ret
  45d160:	mov	w0, w1
  45d164:	ret
  45d168:	mov	w0, #0x0                   	// #0
  45d16c:	ret
  45d170:	and	w5, w0, #0xff
  45d174:	cmp	w5, #0x50
  45d178:	b.eq	45d290 <_obstack_memory_used@@Base+0x1888c>  // b.none
  45d17c:	and	w4, w5, #0xf
  45d180:	cmp	w4, #0x4
  45d184:	b.eq	45d1a0 <_obstack_memory_used@@Base+0x1879c>  // b.none
  45d188:	b.ls	45d1b4 <_obstack_memory_used@@Base+0x187b0>  // b.plast
  45d18c:	cmp	w4, #0xb
  45d190:	b.eq	45d2b4 <_obstack_memory_used@@Base+0x188b0>  // b.none
  45d194:	b.ls	45d210 <_obstack_memory_used@@Base+0x1880c>  // b.plast
  45d198:	cmp	w4, #0xc
  45d19c:	b.ne	45d2c4 <_obstack_memory_used@@Base+0x188c0>  // b.any
  45d1a0:	mov	x0, x2
  45d1a4:	ldr	x4, [x0], #8
  45d1a8:	cbnz	x4, 45d270 <_obstack_memory_used@@Base+0x1886c>
  45d1ac:	str	x4, [x3]
  45d1b0:	ret
  45d1b4:	cmp	w4, #0x2
  45d1b8:	b.eq	45d2a4 <_obstack_memory_used@@Base+0x188a0>  // b.none
  45d1bc:	b.ls	45d1d8 <_obstack_memory_used@@Base+0x187d4>  // b.plast
  45d1c0:	cmp	w4, #0x3
  45d1c4:	b.ne	45d2c4 <_obstack_memory_used@@Base+0x188c0>  // b.any
  45d1c8:	mov	x0, x2
  45d1cc:	ldr	w4, [x0], #4
  45d1d0:	cbz	x4, 45d1ac <_obstack_memory_used@@Base+0x187a8>
  45d1d4:	b	45d270 <_obstack_memory_used@@Base+0x1886c>
  45d1d8:	cbz	w4, 45d1a0 <_obstack_memory_used@@Base+0x1879c>
  45d1dc:	cmp	w4, #0x1
  45d1e0:	b.ne	45d2c4 <_obstack_memory_used@@Base+0x188c0>  // b.any
  45d1e4:	mov	x0, x2
  45d1e8:	mov	x4, #0x0                   	// #0
  45d1ec:	mov	w7, #0x0                   	// #0
  45d1f0:	ldrb	w8, [x0], #1
  45d1f4:	and	x6, x8, #0x7f
  45d1f8:	lsl	x6, x6, x7
  45d1fc:	add	w7, w7, #0x7
  45d200:	orr	x4, x4, x6
  45d204:	tbnz	w8, #7, 45d1f0 <_obstack_memory_used@@Base+0x187ec>
  45d208:	cbz	x4, 45d1ac <_obstack_memory_used@@Base+0x187a8>
  45d20c:	b	45d270 <_obstack_memory_used@@Base+0x1886c>
  45d210:	cmp	w4, #0x9
  45d214:	b.eq	45d230 <_obstack_memory_used@@Base+0x1882c>  // b.none
  45d218:	cmp	w4, #0xa
  45d21c:	b.ne	45d2c4 <_obstack_memory_used@@Base+0x188c0>  // b.any
  45d220:	mov	x0, x2
  45d224:	ldrsh	x4, [x0], #2
  45d228:	cbz	x4, 45d1ac <_obstack_memory_used@@Base+0x187a8>
  45d22c:	b	45d270 <_obstack_memory_used@@Base+0x1886c>
  45d230:	mov	x0, x2
  45d234:	mov	x4, #0x0                   	// #0
  45d238:	mov	w7, #0x0                   	// #0
  45d23c:	ldrb	w8, [x0], #1
  45d240:	and	x6, x8, #0x7f
  45d244:	lsl	x6, x6, x7
  45d248:	add	w7, w7, #0x7
  45d24c:	orr	x4, x4, x6
  45d250:	tbnz	w8, #7, 45d23c <_obstack_memory_used@@Base+0x18838>
  45d254:	cmp	w7, #0x3f
  45d258:	b.hi	45d1a8 <_obstack_memory_used@@Base+0x187a4>  // b.pmore
  45d25c:	tbz	w8, #6, 45d1a8 <_obstack_memory_used@@Base+0x187a4>
  45d260:	mov	x6, #0xffffffffffffffff    	// #-1
  45d264:	lsl	x7, x6, x7
  45d268:	orr	x4, x4, x7
  45d26c:	nop
  45d270:	and	w6, w5, #0x70
  45d274:	cmp	w6, #0x10
  45d278:	csel	x1, x2, x1, eq  // eq = none
  45d27c:	add	x4, x4, x1
  45d280:	tbz	w5, #7, 45d1ac <_obstack_memory_used@@Base+0x187a8>
  45d284:	ldr	x4, [x4]
  45d288:	str	x4, [x3]
  45d28c:	ret
  45d290:	add	x0, x2, #0x7
  45d294:	and	x0, x0, #0xfffffffffffffff8
  45d298:	ldr	x4, [x0], #8
  45d29c:	str	x4, [x3]
  45d2a0:	ret
  45d2a4:	mov	x0, x2
  45d2a8:	ldrh	w4, [x0], #2
  45d2ac:	cbz	x4, 45d1ac <_obstack_memory_used@@Base+0x187a8>
  45d2b0:	b	45d270 <_obstack_memory_used@@Base+0x1886c>
  45d2b4:	mov	x0, x2
  45d2b8:	ldrsw	x4, [x0], #4
  45d2bc:	cbz	x4, 45d1ac <_obstack_memory_used@@Base+0x187a8>
  45d2c0:	b	45d270 <_obstack_memory_used@@Base+0x1886c>
  45d2c4:	stp	x29, x30, [sp, #-16]!
  45d2c8:	mov	x29, sp
  45d2cc:	bl	402a50 <abort@plt>
  45d2d0:	stp	x29, x30, [sp, #-48]!
  45d2d4:	mov	x29, sp
  45d2d8:	stp	x19, x20, [sp, #16]
  45d2dc:	mov	x20, x0
  45d2e0:	add	x19, x0, #0x9
  45d2e4:	mov	x0, x19
  45d2e8:	bl	402700 <strlen@plt>
  45d2ec:	ldrb	w3, [x20, #8]
  45d2f0:	add	x0, x0, #0x1
  45d2f4:	add	x2, x19, x0
  45d2f8:	cmp	w3, #0x3
  45d2fc:	b.hi	45d3c8 <_obstack_memory_used@@Base+0x189c4>  // b.pmore
  45d300:	ldrb	w0, [x20, #9]
  45d304:	cmp	w0, #0x7a
  45d308:	b.eq	45d31c <_obstack_memory_used@@Base+0x18918>  // b.none
  45d30c:	mov	w0, #0x0                   	// #0
  45d310:	ldp	x19, x20, [sp, #16]
  45d314:	ldp	x29, x30, [sp], #48
  45d318:	ret
  45d31c:	ldrsb	w1, [x2], #1
  45d320:	tbnz	w1, #31, 45d31c <_obstack_memory_used@@Base+0x18918>
  45d324:	nop
  45d328:	mov	x0, x2
  45d32c:	ldrsb	w1, [x2], #1
  45d330:	tbnz	w1, #31, 45d328 <_obstack_memory_used@@Base+0x18924>
  45d334:	cmp	w3, #0x1
  45d338:	b.eq	45d3c0 <_obstack_memory_used@@Base+0x189bc>  // b.none
  45d33c:	nop
  45d340:	ldrsb	w0, [x2], #1
  45d344:	tbnz	w0, #31, 45d340 <_obstack_memory_used@@Base+0x1893c>
  45d348:	add	x19, x20, #0xa
  45d34c:	nop
  45d350:	ldrsb	w1, [x2], #1
  45d354:	tbnz	w1, #31, 45d350 <_obstack_memory_used@@Base+0x1894c>
  45d358:	ldrb	w0, [x20, #10]
  45d35c:	add	x20, sp, #0x28
  45d360:	cmp	w0, #0x52
  45d364:	b.ne	45d384 <_obstack_memory_used@@Base+0x18980>  // b.any
  45d368:	b	45d3b0 <_obstack_memory_used@@Base+0x189ac>
  45d36c:	add	x2, x2, #0x1
  45d370:	cmp	w0, #0x4c
  45d374:	b.ne	45d30c <_obstack_memory_used@@Base+0x18908>  // b.any
  45d378:	ldrb	w0, [x19, #1]!
  45d37c:	cmp	w0, #0x52
  45d380:	b.eq	45d3b0 <_obstack_memory_used@@Base+0x189ac>  // b.none
  45d384:	cmp	w0, #0x50
  45d388:	b.ne	45d36c <_obstack_memory_used@@Base+0x18968>  // b.any
  45d38c:	ldrb	w0, [x2], #1
  45d390:	mov	x3, x20
  45d394:	mov	x1, #0x0                   	// #0
  45d398:	and	w0, w0, #0x7f
  45d39c:	bl	45d170 <_obstack_memory_used@@Base+0x1876c>
  45d3a0:	mov	x2, x0
  45d3a4:	ldrb	w0, [x19, #1]!
  45d3a8:	cmp	w0, #0x52
  45d3ac:	b.ne	45d384 <_obstack_memory_used@@Base+0x18980>  // b.any
  45d3b0:	ldrb	w0, [x2]
  45d3b4:	ldp	x19, x20, [sp, #16]
  45d3b8:	ldp	x29, x30, [sp], #48
  45d3bc:	ret
  45d3c0:	add	x2, x0, #0x2
  45d3c4:	b	45d348 <_obstack_memory_used@@Base+0x18944>
  45d3c8:	ldrb	w1, [x19, x0]
  45d3cc:	mov	w0, #0xff                  	// #255
  45d3d0:	cmp	w1, #0x8
  45d3d4:	b.ne	45d310 <_obstack_memory_used@@Base+0x1890c>  // b.any
  45d3d8:	ldrb	w1, [x2, #1]
  45d3dc:	cbnz	w1, 45d310 <_obstack_memory_used@@Base+0x1890c>
  45d3e0:	add	x2, x2, #0x2
  45d3e4:	b	45d300 <_obstack_memory_used@@Base+0x188fc>
  45d3e8:	and	w0, w0, #0xff
  45d3ec:	cmp	w0, #0xff
  45d3f0:	b.eq	45d428 <_obstack_memory_used@@Base+0x18a24>  // b.none
  45d3f4:	and	w3, w0, #0x70
  45d3f8:	cmp	w3, #0x20
  45d3fc:	b.eq	45d440 <_obstack_memory_used@@Base+0x18a3c>  // b.none
  45d400:	b.ls	45d414 <_obstack_memory_used@@Base+0x18a10>  // b.plast
  45d404:	cmp	w3, #0x30
  45d408:	b.ne	45d430 <_obstack_memory_used@@Base+0x18a2c>  // b.any
  45d40c:	ldr	x0, [x2]
  45d410:	ret
  45d414:	tst	w0, #0x60
  45d418:	b.eq	45d428 <_obstack_memory_used@@Base+0x18a24>  // b.none
  45d41c:	stp	x29, x30, [sp, #-16]!
  45d420:	mov	x29, sp
  45d424:	bl	402a50 <abort@plt>
  45d428:	mov	x0, #0x0                   	// #0
  45d42c:	ret
  45d430:	cmp	w3, #0x50
  45d434:	mov	x0, #0x0                   	// #0
  45d438:	b.ne	45d41c <_obstack_memory_used@@Base+0x18a18>  // b.any
  45d43c:	ret
  45d440:	ldr	x0, [x1]
  45d444:	ret
  45d448:	stp	x29, x30, [sp, #-64]!
  45d44c:	mov	x29, sp
  45d450:	stp	x21, x22, [sp, #32]
  45d454:	mov	x22, x2
  45d458:	ldrh	w21, [x0, #32]
  45d45c:	add	x2, x0, #0x10
  45d460:	stp	x19, x20, [sp, #16]
  45d464:	mov	x19, x0
  45d468:	ubfx	x21, x21, #3, #8
  45d46c:	mov	x20, x1
  45d470:	add	x1, x0, #0x8
  45d474:	mov	w0, w21
  45d478:	bl	45d3e8 <_obstack_memory_used@@Base+0x189e4>
  45d47c:	add	x2, x20, #0x8
  45d480:	mov	x20, x0
  45d484:	mov	x1, x20
  45d488:	add	x3, sp, #0x30
  45d48c:	mov	w0, w21
  45d490:	bl	45d170 <_obstack_memory_used@@Base+0x1876c>
  45d494:	ldrh	w0, [x19, #32]
  45d498:	add	x2, x22, #0x8
  45d49c:	mov	x1, x20
  45d4a0:	add	x3, sp, #0x38
  45d4a4:	ubfx	x0, x0, #3, #8
  45d4a8:	bl	45d170 <_obstack_memory_used@@Base+0x1876c>
  45d4ac:	ldp	x2, x1, [sp, #48]
  45d4b0:	mov	w3, #0x1                   	// #1
  45d4b4:	ldp	x19, x20, [sp, #16]
  45d4b8:	ldp	x21, x22, [sp, #32]
  45d4bc:	cmp	x2, x1
  45d4c0:	csetm	w0, cc  // cc = lo, ul, last
  45d4c4:	csel	w0, w0, w3, ls  // ls = plast
  45d4c8:	ldp	x29, x30, [sp], #64
  45d4cc:	ret
  45d4d0:	stp	x29, x30, [sp, #-128]!
  45d4d4:	mov	x29, sp
  45d4d8:	stp	x21, x22, [sp, #32]
  45d4dc:	add	x22, x0, #0x8
  45d4e0:	stp	x23, x24, [sp, #48]
  45d4e4:	add	x23, x0, #0x10
  45d4e8:	stp	x25, x26, [sp, #64]
  45d4ec:	mov	x26, x0
  45d4f0:	ldrh	w0, [x0, #32]
  45d4f4:	stp	x19, x20, [sp, #16]
  45d4f8:	mov	x19, x1
  45d4fc:	mov	x20, x2
  45d500:	ubfx	x24, x0, #3, #8
  45d504:	mov	x1, x22
  45d508:	mov	x2, x23
  45d50c:	mov	x0, x24
  45d510:	bl	45d3e8 <_obstack_memory_used@@Base+0x189e4>
  45d514:	ldr	w1, [x19]
  45d518:	cbz	w1, 45d5ac <_obstack_memory_used@@Base+0x18ba8>
  45d51c:	stp	x27, x28, [sp, #80]
  45d520:	add	x27, sp, #0x70
  45d524:	mov	x25, x0
  45d528:	mov	x21, #0x0                   	// #0
  45d52c:	add	x0, sp, #0x78
  45d530:	str	x0, [sp, #104]
  45d534:	nop
  45d538:	ldr	w1, [x19, #4]
  45d53c:	cbz	w1, 45d594 <_obstack_memory_used@@Base+0x18b90>
  45d540:	ldrb	w0, [x26, #32]
  45d544:	tbz	w0, #2, 45d578 <_obstack_memory_used@@Base+0x18b74>
  45d548:	add	x28, x19, #0x4
  45d54c:	sub	x28, x28, w1, sxtw
  45d550:	cmp	x28, x21
  45d554:	b.eq	45d578 <_obstack_memory_used@@Base+0x18b74>  // b.none
  45d558:	mov	x0, x28
  45d55c:	bl	45d2d0 <_obstack_memory_used@@Base+0x188cc>
  45d560:	mov	x2, x23
  45d564:	mov	w24, w0
  45d568:	mov	x1, x22
  45d56c:	mov	x21, x28
  45d570:	bl	45d3e8 <_obstack_memory_used@@Base+0x189e4>
  45d574:	mov	x25, x0
  45d578:	cbnz	w24, 45d5c8 <_obstack_memory_used@@Base+0x18bc4>
  45d57c:	ldp	x1, x0, [x19, #8]
  45d580:	stp	x1, x0, [sp, #112]
  45d584:	cbz	x1, 45d594 <_obstack_memory_used@@Base+0x18b90>
  45d588:	sub	x1, x20, x1
  45d58c:	cmp	x1, x0
  45d590:	b.cc	45d630 <_obstack_memory_used@@Base+0x18c2c>  // b.lo, b.ul, b.last
  45d594:	ldr	w1, [x19]
  45d598:	add	x1, x1, #0x4
  45d59c:	add	x19, x19, x1
  45d5a0:	ldr	w1, [x19]
  45d5a4:	cbnz	w1, 45d538 <_obstack_memory_used@@Base+0x18b34>
  45d5a8:	ldp	x27, x28, [sp, #80]
  45d5ac:	mov	x0, #0x0                   	// #0
  45d5b0:	ldp	x19, x20, [sp, #16]
  45d5b4:	ldp	x21, x22, [sp, #32]
  45d5b8:	ldp	x23, x24, [sp, #48]
  45d5bc:	ldp	x25, x26, [sp, #64]
  45d5c0:	ldp	x29, x30, [sp], #128
  45d5c4:	ret
  45d5c8:	and	w28, w24, #0xff
  45d5cc:	mov	x3, x27
  45d5d0:	add	x2, x19, #0x8
  45d5d4:	mov	x1, x25
  45d5d8:	mov	w0, w28
  45d5dc:	bl	45d170 <_obstack_memory_used@@Base+0x1876c>
  45d5e0:	ldr	x3, [sp, #104]
  45d5e4:	mov	x2, x0
  45d5e8:	mov	x1, #0x0                   	// #0
  45d5ec:	and	w0, w28, #0xf
  45d5f0:	bl	45d170 <_obstack_memory_used@@Base+0x1876c>
  45d5f4:	mov	w0, w28
  45d5f8:	bl	45d110 <_obstack_memory_used@@Base+0x1870c>
  45d5fc:	lsl	w2, w0, #3
  45d600:	cmp	w0, #0x8
  45d604:	mov	x0, #0x1                   	// #1
  45d608:	ldr	x1, [sp, #112]
  45d60c:	lsl	x2, x0, x2
  45d610:	sub	x2, x2, #0x1
  45d614:	csinv	x2, x2, xzr, cc  // cc = lo, ul, last
  45d618:	tst	x1, x2
  45d61c:	b.eq	45d594 <_obstack_memory_used@@Base+0x18b90>  // b.none
  45d620:	ldr	x0, [sp, #120]
  45d624:	sub	x1, x20, x1
  45d628:	cmp	x1, x0
  45d62c:	b.cs	45d594 <_obstack_memory_used@@Base+0x18b90>  // b.hs, b.nlast
  45d630:	mov	x0, x19
  45d634:	ldp	x19, x20, [sp, #16]
  45d638:	ldp	x21, x22, [sp, #32]
  45d63c:	ldp	x23, x24, [sp, #48]
  45d640:	ldp	x25, x26, [sp, #64]
  45d644:	ldp	x27, x28, [sp, #80]
  45d648:	ldp	x29, x30, [sp], #128
  45d64c:	ret
  45d650:	stp	x29, x30, [sp, #-80]!
  45d654:	add	x3, x1, #0x4
  45d658:	mov	x29, sp
  45d65c:	stp	x21, x22, [sp, #32]
  45d660:	mov	x21, x1
  45d664:	ldrsw	x1, [x1, #4]
  45d668:	stp	x19, x20, [sp, #16]
  45d66c:	mov	x20, x2
  45d670:	add	x19, x0, #0x10
  45d674:	str	x23, [sp, #48]
  45d678:	add	x23, x0, #0x8
  45d67c:	sub	x0, x3, x1
  45d680:	bl	45d2d0 <_obstack_memory_used@@Base+0x188cc>
  45d684:	and	w22, w0, #0xff
  45d688:	mov	x2, x19
  45d68c:	mov	x1, x23
  45d690:	mov	w0, w22
  45d694:	bl	45d3e8 <_obstack_memory_used@@Base+0x189e4>
  45d698:	mov	x1, x0
  45d69c:	add	x3, sp, #0x40
  45d6a0:	add	x2, x21, #0x8
  45d6a4:	mov	w0, w22
  45d6a8:	bl	45d170 <_obstack_memory_used@@Base+0x1876c>
  45d6ac:	add	x1, x20, #0x4
  45d6b0:	ldrsw	x0, [x20, #4]
  45d6b4:	sub	x0, x1, x0
  45d6b8:	bl	45d2d0 <_obstack_memory_used@@Base+0x188cc>
  45d6bc:	mov	x2, x19
  45d6c0:	and	w19, w0, #0xff
  45d6c4:	mov	x1, x23
  45d6c8:	mov	w0, w19
  45d6cc:	bl	45d3e8 <_obstack_memory_used@@Base+0x189e4>
  45d6d0:	mov	x1, x0
  45d6d4:	add	x2, x20, #0x8
  45d6d8:	add	x3, sp, #0x48
  45d6dc:	mov	w0, w19
  45d6e0:	bl	45d170 <_obstack_memory_used@@Base+0x1876c>
  45d6e4:	ldp	x2, x1, [sp, #64]
  45d6e8:	mov	w3, #0x1                   	// #1
  45d6ec:	ldp	x19, x20, [sp, #16]
  45d6f0:	ldp	x21, x22, [sp, #32]
  45d6f4:	cmp	x2, x1
  45d6f8:	csetm	w0, cc  // cc = lo, ul, last
  45d6fc:	csel	w0, w0, w3, ls  // ls = plast
  45d700:	ldr	x23, [sp, #48]
  45d704:	ldp	x29, x30, [sp], #80
  45d708:	ret
  45d70c:	nop
  45d710:	stp	x29, x30, [sp, #-112]!
  45d714:	mov	x29, sp
  45d718:	stp	x21, x22, [sp, #32]
  45d71c:	mov	x21, x0
  45d720:	ldr	w0, [x1]
  45d724:	cbz	w0, 45d888 <_obstack_memory_used@@Base+0x18e84>
  45d728:	stp	x19, x20, [sp, #16]
  45d72c:	mov	x19, x1
  45d730:	mov	w20, #0x0                   	// #0
  45d734:	stp	x25, x26, [sp, #64]
  45d738:	add	x25, sp, #0x68
  45d73c:	add	x26, x21, #0x8
  45d740:	stp	x27, x28, [sp, #80]
  45d744:	add	x27, x21, #0x10
  45d748:	mov	x22, #0x0                   	// #0
  45d74c:	mov	x4, #0x0                   	// #0
  45d750:	stp	x23, x24, [sp, #48]
  45d754:	mov	x23, #0x0                   	// #0
  45d758:	ldr	w2, [x19, #4]
  45d75c:	cbz	w2, 45d824 <_obstack_memory_used@@Base+0x18e20>
  45d760:	add	x28, x19, #0x4
  45d764:	and	w24, w20, #0xff
  45d768:	sub	x28, x28, w2, sxtw
  45d76c:	cmp	x28, x4
  45d770:	b.eq	45d7c8 <_obstack_memory_used@@Base+0x18dc4>  // b.none
  45d774:	mov	x0, x28
  45d778:	bl	45d2d0 <_obstack_memory_used@@Base+0x188cc>
  45d77c:	mov	w20, w0
  45d780:	cmp	w0, #0xff
  45d784:	b.eq	45d864 <_obstack_memory_used@@Base+0x18e60>  // b.none
  45d788:	and	w24, w0, #0xff
  45d78c:	mov	x2, x27
  45d790:	mov	w0, w24
  45d794:	mov	x1, x26
  45d798:	bl	45d3e8 <_obstack_memory_used@@Base+0x189e4>
  45d79c:	mov	x23, x0
  45d7a0:	ldrh	w2, [x21, #32]
  45d7a4:	and	w0, w2, #0x7f8
  45d7a8:	cmp	w0, #0x7f8
  45d7ac:	b.eq	45d858 <_obstack_memory_used@@Base+0x18e54>  // b.none
  45d7b0:	ubfx	x2, x2, #3, #8
  45d7b4:	cmp	w2, w20
  45d7b8:	b.eq	45d7c8 <_obstack_memory_used@@Base+0x18dc4>  // b.none
  45d7bc:	ldrb	w0, [x21, #32]
  45d7c0:	orr	w0, w0, #0x4
  45d7c4:	strb	w0, [x21, #32]
  45d7c8:	mov	x3, x25
  45d7cc:	add	x2, x19, #0x8
  45d7d0:	mov	x1, x23
  45d7d4:	mov	w0, w24
  45d7d8:	bl	45d170 <_obstack_memory_used@@Base+0x1876c>
  45d7dc:	mov	w0, w24
  45d7e0:	bl	45d110 <_obstack_memory_used@@Base+0x1870c>
  45d7e4:	lsl	w2, w0, #3
  45d7e8:	cmp	w0, #0x8
  45d7ec:	mov	x0, #0x1                   	// #1
  45d7f0:	ldr	x3, [sp, #104]
  45d7f4:	lsl	x2, x0, x2
  45d7f8:	sub	x2, x2, #0x1
  45d7fc:	mov	x4, x28
  45d800:	csinv	x2, x2, xzr, cc  // cc = lo, ul, last
  45d804:	tst	x3, x2
  45d808:	b.eq	45d824 <_obstack_memory_used@@Base+0x18e20>  // b.none
  45d80c:	ldr	x0, [x21]
  45d810:	add	x22, x22, #0x1
  45d814:	cmp	x0, x3
  45d818:	b.ls	45d820 <_obstack_memory_used@@Base+0x18e1c>  // b.plast
  45d81c:	str	x3, [x21]
  45d820:	mov	x4, x28
  45d824:	ldr	w2, [x19]
  45d828:	add	x2, x2, #0x4
  45d82c:	add	x19, x19, x2
  45d830:	ldr	w0, [x19]
  45d834:	cbnz	w0, 45d758 <_obstack_memory_used@@Base+0x18d54>
  45d838:	ldp	x19, x20, [sp, #16]
  45d83c:	ldp	x23, x24, [sp, #48]
  45d840:	ldp	x25, x26, [sp, #64]
  45d844:	ldp	x27, x28, [sp, #80]
  45d848:	mov	x0, x22
  45d84c:	ldp	x21, x22, [sp, #32]
  45d850:	ldp	x29, x30, [sp], #112
  45d854:	ret
  45d858:	bfi	w2, w24, #3, #8
  45d85c:	strh	w2, [x21, #32]
  45d860:	b	45d7c8 <_obstack_memory_used@@Base+0x18dc4>
  45d864:	mov	x22, #0xffffffffffffffff    	// #-1
  45d868:	mov	x0, x22
  45d86c:	ldp	x19, x20, [sp, #16]
  45d870:	ldp	x21, x22, [sp, #32]
  45d874:	ldp	x23, x24, [sp, #48]
  45d878:	ldp	x25, x26, [sp, #64]
  45d87c:	ldp	x27, x28, [sp, #80]
  45d880:	ldp	x29, x30, [sp], #112
  45d884:	ret
  45d888:	mov	x22, #0x0                   	// #0
  45d88c:	b	45d848 <_obstack_memory_used@@Base+0x18e44>
  45d890:	stp	x29, x30, [sp, #-112]!
  45d894:	mov	x29, sp
  45d898:	stp	x21, x22, [sp, #32]
  45d89c:	add	x21, x0, #0x8
  45d8a0:	add	x22, x0, #0x10
  45d8a4:	stp	x27, x28, [sp, #80]
  45d8a8:	mov	x28, x0
  45d8ac:	ldrh	w0, [x0, #32]
  45d8b0:	stp	x19, x20, [sp, #16]
  45d8b4:	mov	x19, x2
  45d8b8:	mov	x20, x1
  45d8bc:	stp	x25, x26, [sp, #64]
  45d8c0:	ubfx	x26, x0, #3, #8
  45d8c4:	mov	x2, x22
  45d8c8:	mov	x1, x21
  45d8cc:	mov	x0, x26
  45d8d0:	bl	45d3e8 <_obstack_memory_used@@Base+0x189e4>
  45d8d4:	ldr	w2, [x19]
  45d8d8:	cbz	w2, 45d970 <_obstack_memory_used@@Base+0x18f6c>
  45d8dc:	add	x25, sp, #0x68
  45d8e0:	stp	x23, x24, [sp, #48]
  45d8e4:	mov	x24, x0
  45d8e8:	mov	x23, #0x0                   	// #0
  45d8ec:	nop
  45d8f0:	ldr	w2, [x19, #4]
  45d8f4:	cbz	w2, 45d958 <_obstack_memory_used@@Base+0x18f54>
  45d8f8:	ldrb	w0, [x28, #32]
  45d8fc:	tbz	w0, #2, 45d930 <_obstack_memory_used@@Base+0x18f2c>
  45d900:	add	x27, x19, #0x4
  45d904:	sub	x27, x27, w2, sxtw
  45d908:	cmp	x27, x23
  45d90c:	b.eq	45d930 <_obstack_memory_used@@Base+0x18f2c>  // b.none
  45d910:	mov	x0, x27
  45d914:	bl	45d2d0 <_obstack_memory_used@@Base+0x188cc>
  45d918:	mov	x2, x22
  45d91c:	mov	w26, w0
  45d920:	mov	x1, x21
  45d924:	mov	x23, x27
  45d928:	bl	45d3e8 <_obstack_memory_used@@Base+0x189e4>
  45d92c:	mov	x24, x0
  45d930:	cbnz	w26, 45d988 <_obstack_memory_used@@Base+0x18f84>
  45d934:	ldr	x0, [x19, #8]
  45d938:	cbz	x0, 45d958 <_obstack_memory_used@@Base+0x18f54>
  45d93c:	ldr	x2, [x20]
  45d940:	cbz	x2, 45d958 <_obstack_memory_used@@Base+0x18f54>
  45d944:	ldr	x3, [x2, #8]
  45d948:	add	x0, x3, #0x2
  45d94c:	add	x3, x3, #0x1
  45d950:	str	x3, [x2, #8]
  45d954:	str	x19, [x2, x0, lsl #3]
  45d958:	ldr	w2, [x19]
  45d95c:	add	x2, x2, #0x4
  45d960:	add	x19, x19, x2
  45d964:	ldr	w2, [x19]
  45d968:	cbnz	w2, 45d8f0 <_obstack_memory_used@@Base+0x18eec>
  45d96c:	ldp	x23, x24, [sp, #48]
  45d970:	ldp	x19, x20, [sp, #16]
  45d974:	ldp	x21, x22, [sp, #32]
  45d978:	ldp	x25, x26, [sp, #64]
  45d97c:	ldp	x27, x28, [sp, #80]
  45d980:	ldp	x29, x30, [sp], #112
  45d984:	ret
  45d988:	mov	x3, x25
  45d98c:	add	x2, x19, #0x8
  45d990:	mov	x1, x24
  45d994:	and	w27, w26, #0xff
  45d998:	mov	w0, w27
  45d99c:	bl	45d170 <_obstack_memory_used@@Base+0x1876c>
  45d9a0:	mov	w0, w27
  45d9a4:	bl	45d110 <_obstack_memory_used@@Base+0x1870c>
  45d9a8:	lsl	w2, w0, #3
  45d9ac:	cmp	w0, #0x8
  45d9b0:	mov	x0, #0x1                   	// #1
  45d9b4:	ldr	x3, [sp, #104]
  45d9b8:	lsl	x2, x0, x2
  45d9bc:	sub	x2, x2, #0x1
  45d9c0:	csinv	x2, x2, xzr, cc  // cc = lo, ul, last
  45d9c4:	tst	x2, x3
  45d9c8:	b.ne	45d93c <_obstack_memory_used@@Base+0x18f38>  // b.any
  45d9cc:	b	45d958 <_obstack_memory_used@@Base+0x18f54>
  45d9d0:	stp	x29, x30, [sp, #-128]!
  45d9d4:	cmp	x1, #0x2f
  45d9d8:	mov	x29, sp
  45d9dc:	stp	x19, x20, [sp, #16]
  45d9e0:	mov	x19, x2
  45d9e4:	ldr	w2, [x2, #40]
  45d9e8:	ldr	x13, [x0]
  45d9ec:	ccmp	w2, #0x0, #0x4, hi  // hi = pmore
  45d9f0:	ldr	x3, [x0, #16]
  45d9f4:	b.ne	45db34 <_obstack_memory_used@@Base+0x19130>  // b.any
  45d9f8:	cmp	x1, #0x19
  45d9fc:	b.ls	45db0c <_obstack_memory_used@@Base+0x19108>  // b.plast
  45da00:	mov	x10, #0x0                   	// #0
  45da04:	mov	x15, #0x0                   	// #0
  45da08:	ldrh	w4, [x0, #24]
  45da0c:	cbz	w4, 45db24 <_obstack_memory_used@@Base+0x19120>
  45da10:	mov	w0, #0x38                  	// #56
  45da14:	mov	w7, #0xe550                	// #58704
  45da18:	mov	x11, #0x0                   	// #0
  45da1c:	mov	x12, #0x0                   	// #0
  45da20:	umaddl	x4, w4, w0, x3
  45da24:	mov	x8, #0x0                   	// #0
  45da28:	mov	x6, #0x0                   	// #0
  45da2c:	mov	x9, #0x0                   	// #0
  45da30:	movk	w7, #0x6474, lsl #16
  45da34:	mov	x14, #0x1                   	// #1
  45da38:	b	45da58 <_obstack_memory_used@@Base+0x19054>
  45da3c:	cmp	w0, w7
  45da40:	b.eq	45db1c <_obstack_memory_used@@Base+0x19118>  // b.none
  45da44:	cmp	w0, #0x2
  45da48:	csel	x6, x6, x3, ne  // ne = any
  45da4c:	add	x3, x3, #0x38
  45da50:	cmp	x4, x3
  45da54:	b.eq	45daa0 <_obstack_memory_used@@Base+0x1909c>  // b.none
  45da58:	ldr	w0, [x3]
  45da5c:	cmp	w0, #0x1
  45da60:	b.ne	45da3c <_obstack_memory_used@@Base+0x19038>  // b.any
  45da64:	ldr	x0, [x3, #16]
  45da68:	ldr	x5, [x19]
  45da6c:	add	x0, x13, x0
  45da70:	cmp	x5, x0
  45da74:	b.cc	45da4c <_obstack_memory_used@@Base+0x19048>  // b.lo, b.ul, b.last
  45da78:	ldr	x2, [x3, #40]
  45da7c:	add	x3, x3, #0x38
  45da80:	add	x2, x0, x2
  45da84:	cmp	x5, x2
  45da88:	csel	x11, x11, x2, cs  // cs = hs, nlast
  45da8c:	csel	x12, x12, x0, cs  // cs = hs, nlast
  45da90:	csel	x8, x8, x14, cs  // cs = hs, nlast
  45da94:	cmp	x4, x3
  45da98:	b.ne	45da58 <_obstack_memory_used@@Base+0x19054>  // b.any
  45da9c:	nop
  45daa0:	cbz	x8, 45db24 <_obstack_memory_used@@Base+0x19120>
  45daa4:	cmp	x1, #0x2f
  45daa8:	b.ls	45dae4 <_obstack_memory_used@@Base+0x190e0>  // b.plast
  45daac:	adrp	x1, 495000 <_obstack_memory_used@@Base+0x505fc>
  45dab0:	add	x1, x1, #0xbd8
  45dab4:	cmp	x10, #0x0
  45dab8:	ccmp	x15, #0x0, #0x4, ne  // ne = any
  45dabc:	ldr	x0, [x1, #8]
  45dac0:	b.eq	45dad8 <_obstack_memory_used@@Base+0x190d4>  // b.none
  45dac4:	ldr	x2, [x10, #40]
  45dac8:	str	x2, [x15, #40]
  45dacc:	str	x0, [x10, #40]
  45dad0:	mov	x0, x10
  45dad4:	str	x10, [x1, #8]
  45dad8:	stp	x12, x11, [x0]
  45dadc:	stp	x13, x9, [x0, #16]
  45dae0:	str	x6, [x0, #32]
  45dae4:	cbz	x9, 45db24 <_obstack_memory_used@@Base+0x19120>
  45dae8:	ldr	x0, [x9, #16]
  45daec:	add	x20, x13, x0
  45daf0:	ldrb	w0, [x13, x0]
  45daf4:	cmp	w0, #0x1
  45daf8:	b.eq	45db94 <_obstack_memory_used@@Base+0x19190>  // b.none
  45dafc:	mov	w0, #0x1                   	// #1
  45db00:	ldp	x19, x20, [sp, #16]
  45db04:	ldp	x29, x30, [sp], #128
  45db08:	ret
  45db0c:	mov	w0, #0xffffffff            	// #-1
  45db10:	ldp	x19, x20, [sp, #16]
  45db14:	ldp	x29, x30, [sp], #128
  45db18:	ret
  45db1c:	mov	x9, x3
  45db20:	b	45da4c <_obstack_memory_used@@Base+0x19048>
  45db24:	mov	w0, #0x0                   	// #0
  45db28:	ldp	x19, x20, [sp, #16]
  45db2c:	ldp	x29, x30, [sp], #128
  45db30:	ret
  45db34:	ldp	x6, x7, [x0, #32]
  45db38:	adrp	x4, 495000 <_obstack_memory_used@@Base+0x505fc>
  45db3c:	adrp	x5, 495000 <_obstack_memory_used@@Base+0x505fc>
  45db40:	ldr	x2, [x4, #1432]
  45db44:	cmp	x6, x2
  45db48:	b.eq	45dc68 <_obstack_memory_used@@Base+0x19264>  // b.none
  45db4c:	add	x2, x5, #0xbd8
  45db50:	str	x6, [x4, #1432]
  45db54:	add	x4, x2, #0x40
  45db58:	add	x2, x2, #0x1c0
  45db5c:	str	x7, [x5, #3032]
  45db60:	stp	xzr, xzr, [x4, #-48]
  45db64:	stur	x4, [x4, #-8]
  45db68:	add	x4, x4, #0x30
  45db6c:	cmp	x2, x4
  45db70:	b.ne	45db60 <_obstack_memory_used@@Base+0x1915c>  // b.any
  45db74:	add	x5, x5, #0xbd8
  45db78:	mov	x10, #0x0                   	// #0
  45db7c:	add	x2, x5, #0x10
  45db80:	mov	x15, #0x0                   	// #0
  45db84:	str	xzr, [x5, #392]
  45db88:	str	x2, [x5, #8]
  45db8c:	str	wzr, [x19, #40]
  45db90:	b	45da08 <_obstack_memory_used@@Base+0x19004>
  45db94:	stp	x21, x22, [sp, #32]
  45db98:	add	x22, x19, #0x8
  45db9c:	mov	x1, x22
  45dba0:	stp	x23, x24, [sp, #48]
  45dba4:	add	x23, x19, #0x10
  45dba8:	mov	x2, x23
  45dbac:	ldrb	w21, [x20, #1]
  45dbb0:	mov	w0, w21
  45dbb4:	bl	45d3e8 <_obstack_memory_used@@Base+0x189e4>
  45dbb8:	add	x3, sp, #0x40
  45dbbc:	mov	x1, x0
  45dbc0:	add	x2, x20, #0x4
  45dbc4:	mov	w0, w21
  45dbc8:	bl	45d170 <_obstack_memory_used@@Base+0x1876c>
  45dbcc:	ldrb	w24, [x20, #2]
  45dbd0:	mov	x21, x0
  45dbd4:	cmp	w24, #0xff
  45dbd8:	b.eq	45dbe8 <_obstack_memory_used@@Base+0x191e4>  // b.none
  45dbdc:	ldrb	w0, [x20, #3]
  45dbe0:	cmp	w0, #0x3b
  45dbe4:	b.eq	45dcc8 <_obstack_memory_used@@Base+0x192c4>  // b.none
  45dbe8:	ldr	x2, [x19]
  45dbec:	mov	x3, #0x4                   	// #4
  45dbf0:	ldp	x5, x4, [x19, #8]
  45dbf4:	add	x0, sp, #0x50
  45dbf8:	ldr	x1, [sp, #64]
  45dbfc:	stp	xzr, x5, [sp, #80]
  45dc00:	stp	x4, x1, [sp, #96]
  45dc04:	str	x3, [sp, #112]
  45dc08:	bl	45d4d0 <_obstack_memory_used@@Base+0x18acc>
  45dc0c:	str	x0, [x19, #32]
  45dc10:	cbz	x0, 45dde0 <_obstack_memory_used@@Base+0x193dc>
  45dc14:	ldrsw	x1, [x0, #4]
  45dc18:	add	x0, x0, #0x4
  45dc1c:	sub	x0, x0, x1
  45dc20:	bl	45d2d0 <_obstack_memory_used@@Base+0x188cc>
  45dc24:	and	w20, w0, #0xff
  45dc28:	mov	x2, x23
  45dc2c:	mov	x1, x22
  45dc30:	mov	w0, w20
  45dc34:	bl	45d3e8 <_obstack_memory_used@@Base+0x189e4>
  45dc38:	ldr	x2, [x19, #32]
  45dc3c:	mov	x1, x0
  45dc40:	add	x3, sp, #0x48
  45dc44:	mov	w0, w20
  45dc48:	add	x2, x2, #0x8
  45dc4c:	bl	45d170 <_obstack_memory_used@@Base+0x1876c>
  45dc50:	ldr	x1, [sp, #72]
  45dc54:	mov	w0, #0x1                   	// #1
  45dc58:	ldp	x21, x22, [sp, #32]
  45dc5c:	ldp	x23, x24, [sp, #48]
  45dc60:	str	x1, [x19, #24]
  45dc64:	b	45db10 <_obstack_memory_used@@Base+0x1910c>
  45dc68:	ldr	x2, [x5, #3032]
  45dc6c:	add	x8, x5, #0xbd8
  45dc70:	cmp	x2, x7
  45dc74:	b.ne	45db4c <_obstack_memory_used@@Base+0x19148>  // b.any
  45dc78:	ldr	x7, [x8, #8]
  45dc7c:	cbz	x7, 45da00 <_obstack_memory_used@@Base+0x18ffc>
  45dc80:	mov	x10, x7
  45dc84:	mov	x15, #0x0                   	// #0
  45dc88:	ldr	x6, [x19]
  45dc8c:	ldp	x2, x4, [x10]
  45dc90:	cmp	x6, x2
  45dc94:	b.cc	45dca0 <_obstack_memory_used@@Base+0x1929c>  // b.lo, b.ul, b.last
  45dc98:	cmp	x6, x4
  45dc9c:	b.cc	45ddf8 <_obstack_memory_used@@Base+0x193f4>  // b.lo, b.ul, b.last
  45dca0:	orr	x2, x2, x4
  45dca4:	cbz	x2, 45da08 <_obstack_memory_used@@Base+0x19004>
  45dca8:	ldr	x2, [x10, #40]
  45dcac:	cbz	x2, 45da08 <_obstack_memory_used@@Base+0x19004>
  45dcb0:	mov	x15, x10
  45dcb4:	mov	x10, x2
  45dcb8:	ldp	x2, x4, [x10]
  45dcbc:	cmp	x6, x2
  45dcc0:	b.cc	45dca0 <_obstack_memory_used@@Base+0x1929c>  // b.lo, b.ul, b.last
  45dcc4:	b	45dc98 <_obstack_memory_used@@Base+0x19294>
  45dcc8:	mov	x2, x23
  45dccc:	mov	x1, x22
  45dcd0:	mov	w0, w24
  45dcd4:	bl	45d3e8 <_obstack_memory_used@@Base+0x189e4>
  45dcd8:	add	x3, sp, #0x48
  45dcdc:	mov	x1, x0
  45dce0:	mov	x2, x21
  45dce4:	mov	w0, w24
  45dce8:	bl	45d170 <_obstack_memory_used@@Base+0x1876c>
  45dcec:	ldr	x3, [sp, #72]
  45dcf0:	cbz	x3, 45ddd0 <_obstack_memory_used@@Base+0x193cc>
  45dcf4:	ands	x5, x0, #0x3
  45dcf8:	ldr	x2, [x19]
  45dcfc:	b.ne	45dbec <_obstack_memory_used@@Base+0x191e8>  // b.any
  45dd00:	ldrsw	x1, [x0]
  45dd04:	add	x1, x1, x20
  45dd08:	cmp	x1, x2
  45dd0c:	b.hi	45ddd0 <_obstack_memory_used@@Base+0x193cc>  // b.pmore
  45dd10:	sub	x3, x3, #0x1
  45dd14:	lsl	x1, x3, #3
  45dd18:	add	x21, x0, x1
  45dd1c:	ldrsw	x1, [x0, x1]
  45dd20:	add	x1, x1, x20
  45dd24:	cmp	x1, x2
  45dd28:	b.ls	45dd6c <_obstack_memory_used@@Base+0x19368>  // b.plast
  45dd2c:	cmp	x5, x3
  45dd30:	b.cs	45de1c <_obstack_memory_used@@Base+0x19418>  // b.hs, b.nlast
  45dd34:	add	x1, x5, x3
  45dd38:	lsr	x1, x1, #1
  45dd3c:	lsl	x4, x1, #3
  45dd40:	add	x21, x0, x4
  45dd44:	ldrsw	x4, [x0, x4]
  45dd48:	add	x4, x4, x20
  45dd4c:	cmp	x4, x2
  45dd50:	b.hi	45ddf0 <_obstack_memory_used@@Base+0x193ec>  // b.pmore
  45dd54:	add	x5, x1, #0x1
  45dd58:	lsl	x1, x5, #3
  45dd5c:	ldrsw	x1, [x0, x1]
  45dd60:	add	x1, x1, x20
  45dd64:	cmp	x1, x2
  45dd68:	b.ls	45dd2c <_obstack_memory_used@@Base+0x19328>  // b.plast
  45dd6c:	ldrsw	x22, [x21, #4]
  45dd70:	add	x22, x22, x20
  45dd74:	add	x1, x22, #0x4
  45dd78:	ldrsw	x0, [x22, #4]
  45dd7c:	sub	x0, x1, x0
  45dd80:	bl	45d2d0 <_obstack_memory_used@@Base+0x188cc>
  45dd84:	and	w23, w0, #0xff
  45dd88:	mov	w0, w23
  45dd8c:	bl	45d110 <_obstack_memory_used@@Base+0x1870c>
  45dd90:	mov	w2, w0
  45dd94:	mov	x1, #0x0                   	// #0
  45dd98:	add	x2, x2, #0x8
  45dd9c:	add	x3, sp, #0x50
  45dda0:	add	x2, x22, x2
  45dda4:	and	w0, w23, #0xf
  45dda8:	bl	45d170 <_obstack_memory_used@@Base+0x1876c>
  45ddac:	ldrsw	x0, [x21]
  45ddb0:	ldr	x1, [sp, #80]
  45ddb4:	add	x20, x0, x20
  45ddb8:	ldr	x2, [x19]
  45ddbc:	add	x0, x20, x1
  45ddc0:	cmp	x2, x0
  45ddc4:	b.cs	45ddcc <_obstack_memory_used@@Base+0x193c8>  // b.hs, b.nlast
  45ddc8:	str	x22, [x19, #32]
  45ddcc:	str	x20, [x19, #24]
  45ddd0:	mov	w0, #0x1                   	// #1
  45ddd4:	ldp	x21, x22, [sp, #32]
  45ddd8:	ldp	x23, x24, [sp, #48]
  45dddc:	b	45db10 <_obstack_memory_used@@Base+0x1910c>
  45dde0:	mov	w0, #0x1                   	// #1
  45dde4:	ldp	x21, x22, [sp, #32]
  45dde8:	ldp	x23, x24, [sp, #48]
  45ddec:	b	45db00 <_obstack_memory_used@@Base+0x190fc>
  45ddf0:	mov	x3, x1
  45ddf4:	b	45dd2c <_obstack_memory_used@@Base+0x19328>
  45ddf8:	cmp	x10, x7
  45ddfc:	ldp	x13, x9, [x10, #16]
  45de00:	b.eq	45dae4 <_obstack_memory_used@@Base+0x190e0>  // b.none
  45de04:	add	x5, x5, #0xbd8
  45de08:	ldr	x0, [x10, #40]
  45de0c:	str	x0, [x15, #40]
  45de10:	str	x10, [x5, #8]
  45de14:	str	x7, [x10, #40]
  45de18:	b	45dae4 <_obstack_memory_used@@Base+0x190e0>
  45de1c:	bl	402a50 <abort@plt>
  45de20:	stp	x29, x30, [sp, #-160]!
  45de24:	mov	x29, sp
  45de28:	stp	x19, x20, [sp, #16]
  45de2c:	mov	x19, x1
  45de30:	ldrb	w1, [x0, #32]
  45de34:	stp	x23, x24, [sp, #48]
  45de38:	mov	x24, x0
  45de3c:	tbz	w1, #0, 45dea8 <_obstack_memory_used@@Base+0x194a4>
  45de40:	stp	x27, x28, [sp, #80]
  45de44:	ldr	x27, [x24, #24]
  45de48:	tbnz	w1, #2, 45df1c <_obstack_memory_used@@Base+0x19518>
  45de4c:	ldrh	w0, [x24, #32]
  45de50:	tst	w0, #0x7f8
  45de54:	b.ne	45e07c <_obstack_memory_used@@Base+0x19678>  // b.any
  45de58:	mov	x2, #0x0                   	// #0
  45de5c:	ldr	x1, [x27, #8]
  45de60:	b	45de84 <_obstack_memory_used@@Base+0x19480>
  45de64:	add	x0, x1, x2
  45de68:	lsr	x0, x0, #1
  45de6c:	add	x3, x0, #0x2
  45de70:	ldr	x20, [x27, x3, lsl #3]
  45de74:	ldr	x3, [x20, #8]
  45de78:	cmp	x19, x3
  45de7c:	b.cs	45df04 <_obstack_memory_used@@Base+0x19500>  // b.hs, b.nlast
  45de80:	mov	x1, x0
  45de84:	cmp	x1, x2
  45de88:	b.hi	45de64 <_obstack_memory_used@@Base+0x19460>  // b.pmore
  45de8c:	ldp	x27, x28, [sp, #80]
  45de90:	mov	x20, #0x0                   	// #0
  45de94:	mov	x0, x20
  45de98:	ldp	x19, x20, [sp, #16]
  45de9c:	ldp	x23, x24, [sp, #48]
  45dea0:	ldp	x29, x30, [sp], #160
  45dea4:	ret
  45dea8:	stp	x25, x26, [sp, #64]
  45deac:	ldr	w25, [x0, #32]
  45deb0:	stp	x21, x22, [sp, #32]
  45deb4:	tst	x25, #0xfffff800
  45deb8:	lsr	w25, w25, #11
  45debc:	b.ne	45e124 <_obstack_memory_used@@Base+0x19720>  // b.any
  45dec0:	ldr	x20, [x0, #24]
  45dec4:	tbz	w1, #1, 45dfd4 <_obstack_memory_used@@Base+0x195d0>
  45dec8:	ldr	x1, [x20]
  45decc:	cbnz	x1, 45dee0 <_obstack_memory_used@@Base+0x194dc>
  45ded0:	b	45e000 <_obstack_memory_used@@Base+0x195fc>
  45ded4:	ldr	x1, [x20, #8]!
  45ded8:	add	x25, x25, x0
  45dedc:	cbz	x1, 45dfe8 <_obstack_memory_used@@Base+0x195e4>
  45dee0:	mov	x0, x24
  45dee4:	bl	45d710 <_obstack_memory_used@@Base+0x18d0c>
  45dee8:	cmn	x0, #0x1
  45deec:	b.ne	45ded4 <_obstack_memory_used@@Base+0x194d0>  // b.any
  45def0:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x295fc>
  45def4:	mov	x1, #0x7f8                 	// #2040
  45def8:	add	x0, x0, #0x508
  45defc:	stp	x0, x1, [x24, #24]
  45df00:	b	45e000 <_obstack_memory_used@@Base+0x195fc>
  45df04:	ldr	x2, [x20, #16]
  45df08:	add	x3, x3, x2
  45df0c:	cmp	x19, x3
  45df10:	b.cc	45e3f8 <_obstack_memory_used@@Base+0x199f4>  // b.lo, b.ul, b.last
  45df14:	add	x2, x0, #0x1
  45df18:	b	45de84 <_obstack_memory_used@@Base+0x19480>
  45df1c:	ldr	x28, [x27, #8]
  45df20:	cbz	x28, 45de8c <_obstack_memory_used@@Base+0x19488>
  45df24:	add	x0, x24, #0x8
  45df28:	add	x23, sp, #0x88
  45df2c:	stp	x21, x22, [sp, #32]
  45df30:	add	x22, sp, #0x90
  45df34:	stp	x25, x26, [sp, #64]
  45df38:	add	x26, x24, #0x10
  45df3c:	mov	x25, #0x0                   	// #0
  45df40:	str	x0, [sp, #96]
  45df44:	b	45df64 <_obstack_memory_used@@Base+0x19560>
  45df48:	ldr	x1, [sp, #144]
  45df4c:	add	x0, x0, x1
  45df50:	cmp	x0, x19
  45df54:	b.hi	45e3f0 <_obstack_memory_used@@Base+0x199ec>  // b.pmore
  45df58:	add	x25, x24, #0x1
  45df5c:	cmp	x25, x28
  45df60:	b.cs	45e06c <_obstack_memory_used@@Base+0x19668>  // b.hs, b.nlast
  45df64:	add	x24, x25, x28
  45df68:	lsr	x24, x24, #1
  45df6c:	add	x0, x24, #0x2
  45df70:	ldr	x20, [x27, x0, lsl #3]
  45df74:	add	x1, x20, #0x4
  45df78:	ldrsw	x0, [x20, #4]
  45df7c:	sub	x0, x1, x0
  45df80:	bl	45d2d0 <_obstack_memory_used@@Base+0x188cc>
  45df84:	ldr	x1, [sp, #96]
  45df88:	and	w21, w0, #0xff
  45df8c:	mov	x2, x26
  45df90:	mov	w0, w21
  45df94:	bl	45d3e8 <_obstack_memory_used@@Base+0x189e4>
  45df98:	mov	x1, x0
  45df9c:	mov	x3, x23
  45dfa0:	add	x2, x20, #0x8
  45dfa4:	mov	w0, w21
  45dfa8:	bl	45d170 <_obstack_memory_used@@Base+0x1876c>
  45dfac:	mov	x3, x22
  45dfb0:	mov	x2, x0
  45dfb4:	mov	x1, #0x0                   	// #0
  45dfb8:	and	w0, w21, #0xf
  45dfbc:	bl	45d170 <_obstack_memory_used@@Base+0x1876c>
  45dfc0:	ldr	x0, [sp, #136]
  45dfc4:	cmp	x0, x19
  45dfc8:	b.ls	45df48 <_obstack_memory_used@@Base+0x19544>  // b.plast
  45dfcc:	mov	x28, x24
  45dfd0:	b	45df5c <_obstack_memory_used@@Base+0x19558>
  45dfd4:	mov	x1, x20
  45dfd8:	bl	45d710 <_obstack_memory_used@@Base+0x18d0c>
  45dfdc:	mov	x25, x0
  45dfe0:	cmn	x0, #0x1
  45dfe4:	b.eq	45def0 <_obstack_memory_used@@Base+0x194ec>  // b.none
  45dfe8:	ldr	w0, [x24, #32]
  45dfec:	tst	x25, #0xffffffffffe00000
  45dff0:	b.eq	45e434 <_obstack_memory_used@@Base+0x19a30>  // b.none
  45dff4:	and	w0, w0, #0x7ff
  45dff8:	str	w0, [x24, #32]
  45dffc:	cbnz	x25, 45e124 <_obstack_memory_used@@Base+0x19720>
  45e000:	ldr	x0, [x24]
  45e004:	cmp	x0, x19
  45e008:	b.hi	45e060 <_obstack_memory_used@@Base+0x1965c>  // b.pmore
  45e00c:	ldrb	w1, [x24, #32]
  45e010:	ldr	x21, [x24, #24]
  45e014:	tbnz	w1, #0, 45e478 <_obstack_memory_used@@Base+0x19a74>
  45e018:	tbz	w1, #1, 45e3d0 <_obstack_memory_used@@Base+0x199cc>
  45e01c:	ldr	x1, [x21]
  45e020:	cbnz	x1, 45e030 <_obstack_memory_used@@Base+0x1962c>
  45e024:	b	45e060 <_obstack_memory_used@@Base+0x1965c>
  45e028:	ldr	x1, [x21, #8]!
  45e02c:	cbz	x1, 45e060 <_obstack_memory_used@@Base+0x1965c>
  45e030:	mov	x2, x19
  45e034:	mov	x0, x24
  45e038:	bl	45d4d0 <_obstack_memory_used@@Base+0x18acc>
  45e03c:	mov	x20, x0
  45e040:	cbz	x0, 45e028 <_obstack_memory_used@@Base+0x19624>
  45e044:	mov	x0, x20
  45e048:	ldp	x19, x20, [sp, #16]
  45e04c:	ldp	x21, x22, [sp, #32]
  45e050:	ldp	x23, x24, [sp, #48]
  45e054:	ldp	x25, x26, [sp, #64]
  45e058:	ldp	x29, x30, [sp], #160
  45e05c:	ret
  45e060:	ldp	x21, x22, [sp, #32]
  45e064:	ldp	x25, x26, [sp, #64]
  45e068:	b	45de90 <_obstack_memory_used@@Base+0x1948c>
  45e06c:	ldp	x21, x22, [sp, #32]
  45e070:	ldp	x25, x26, [sp, #64]
  45e074:	ldp	x27, x28, [sp, #80]
  45e078:	b	45de90 <_obstack_memory_used@@Base+0x1948c>
  45e07c:	stp	x25, x26, [sp, #64]
  45e080:	ubfx	x25, x0, #3, #8
  45e084:	add	x2, x24, #0x10
  45e088:	add	x1, x24, #0x8
  45e08c:	mov	x0, x25
  45e090:	bl	45d3e8 <_obstack_memory_used@@Base+0x189e4>
  45e094:	mov	x24, x0
  45e098:	ldr	x28, [x27, #8]
  45e09c:	cbz	x28, 45e070 <_obstack_memory_used@@Base+0x1966c>
  45e0a0:	and	w0, w25, #0xf
  45e0a4:	add	x23, sp, #0x88
  45e0a8:	mov	x26, #0x0                   	// #0
  45e0ac:	stp	x21, x22, [sp, #32]
  45e0b0:	add	x22, sp, #0x90
  45e0b4:	str	w0, [sp, #96]
  45e0b8:	b	45e0d8 <_obstack_memory_used@@Base+0x196d4>
  45e0bc:	ldr	x1, [sp, #144]
  45e0c0:	add	x0, x0, x1
  45e0c4:	cmp	x0, x19
  45e0c8:	b.hi	45e3f0 <_obstack_memory_used@@Base+0x199ec>  // b.pmore
  45e0cc:	add	x26, x21, #0x1
  45e0d0:	cmp	x26, x28
  45e0d4:	b.cs	45e06c <_obstack_memory_used@@Base+0x19668>  // b.hs, b.nlast
  45e0d8:	add	x21, x28, x26
  45e0dc:	mov	x3, x23
  45e0e0:	mov	x1, x24
  45e0e4:	mov	w0, w25
  45e0e8:	lsr	x21, x21, #1
  45e0ec:	add	x2, x21, #0x2
  45e0f0:	ldr	x20, [x27, x2, lsl #3]
  45e0f4:	add	x2, x20, #0x8
  45e0f8:	bl	45d170 <_obstack_memory_used@@Base+0x1876c>
  45e0fc:	mov	x2, x0
  45e100:	ldrb	w0, [sp, #96]
  45e104:	mov	x3, x22
  45e108:	mov	x1, #0x0                   	// #0
  45e10c:	bl	45d170 <_obstack_memory_used@@Base+0x1876c>
  45e110:	ldr	x0, [sp, #136]
  45e114:	cmp	x0, x19
  45e118:	b.ls	45e0bc <_obstack_memory_used@@Base+0x196b8>  // b.plast
  45e11c:	mov	x28, x21
  45e120:	b	45e0d0 <_obstack_memory_used@@Base+0x196cc>
  45e124:	add	x20, x25, #0x2
  45e128:	lsl	x20, x20, #3
  45e12c:	mov	x0, x20
  45e130:	bl	402890 <malloc@plt>
  45e134:	str	x0, [sp, #144]
  45e138:	mov	x1, x0
  45e13c:	cbz	x0, 45e000 <_obstack_memory_used@@Base+0x195fc>
  45e140:	str	xzr, [x1, #8]
  45e144:	mov	x0, x20
  45e148:	bl	402890 <malloc@plt>
  45e14c:	str	x0, [sp, #152]
  45e150:	cbz	x0, 45e158 <_obstack_memory_used@@Base+0x19754>
  45e154:	str	xzr, [x0, #8]
  45e158:	ldrb	w0, [x24, #32]
  45e15c:	ldr	x20, [x24, #24]
  45e160:	tbz	w0, #1, 45e40c <_obstack_memory_used@@Base+0x19a08>
  45e164:	ldr	x2, [x20]
  45e168:	cbz	x2, 45e470 <_obstack_memory_used@@Base+0x19a6c>
  45e16c:	add	x22, sp, #0x90
  45e170:	mov	x1, x22
  45e174:	mov	x0, x24
  45e178:	bl	45d890 <_obstack_memory_used@@Base+0x18e8c>
  45e17c:	ldr	x2, [x20, #8]!
  45e180:	cbnz	x2, 45e170 <_obstack_memory_used@@Base+0x1976c>
  45e184:	ldr	x0, [sp, #144]
  45e188:	str	x0, [sp, #96]
  45e18c:	str	x0, [sp, #120]
  45e190:	cbz	x0, 45e1a0 <_obstack_memory_used@@Base+0x1979c>
  45e194:	ldr	x0, [x0, #8]
  45e198:	cmp	x0, x25
  45e19c:	b.ne	45e470 <_obstack_memory_used@@Base+0x19a6c>  // b.any
  45e1a0:	ldrb	w0, [x24, #32]
  45e1a4:	tbnz	w0, #2, 45e400 <_obstack_memory_used@@Base+0x199fc>
  45e1a8:	ldrh	w1, [x24, #32]
  45e1ac:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x185fc>
  45e1b0:	adrp	x20, 45c000 <_obstack_memory_used@@Base+0x175fc>
  45e1b4:	add	x0, x0, #0x448
  45e1b8:	tst	w1, #0x7f8
  45e1bc:	add	x20, x20, #0xf20
  45e1c0:	csel	x20, x20, x0, eq  // eq = none
  45e1c4:	ldr	x22, [sp, #152]
  45e1c8:	cbz	x22, 45e420 <_obstack_memory_used@@Base+0x19a1c>
  45e1cc:	ldr	x1, [sp, #96]
  45e1d0:	stp	x27, x28, [sp, #80]
  45e1d4:	ldr	x0, [x1, #8]
  45e1d8:	str	x0, [sp, #104]
  45e1dc:	cbz	x0, 45e460 <_obstack_memory_used@@Base+0x19a5c>
  45e1e0:	adrp	x3, 495000 <_obstack_memory_used@@Base+0x505fc>
  45e1e4:	add	x3, x3, #0xbd8
  45e1e8:	add	x0, x0, #0x1
  45e1ec:	add	x28, x1, #0x10
  45e1f0:	add	x27, x3, #0x190
  45e1f4:	mov	x21, x28
  45e1f8:	mov	x23, x27
  45e1fc:	lsl	x0, x0, #3
  45e200:	mov	x26, #0x10                  	// #16
  45e204:	str	x0, [sp, #112]
  45e208:	ldr	x0, [sp, #112]
  45e20c:	str	x27, [x22, x26]
  45e210:	cmp	x0, x26
  45e214:	b.eq	45e270 <_obstack_memory_used@@Base+0x1986c>  // b.none
  45e218:	cmp	x21, x23
  45e21c:	mov	x27, x21
  45e220:	b.ne	45e240 <_obstack_memory_used@@Base+0x1983c>  // b.any
  45e224:	b	45e260 <_obstack_memory_used@@Base+0x1985c>
  45e228:	sub	x3, x27, x28
  45e22c:	add	x0, x22, x3
  45e230:	ldr	x27, [x0, #16]
  45e234:	str	xzr, [x0, #16]
  45e238:	cmp	x27, x23
  45e23c:	b.eq	45e260 <_obstack_memory_used@@Base+0x1985c>  // b.none
  45e240:	ldr	x2, [x27]
  45e244:	mov	x0, x24
  45e248:	ldr	x1, [x21, #8]
  45e24c:	blr	x20
  45e250:	tbnz	w0, #31, 45e228 <_obstack_memory_used@@Base+0x19824>
  45e254:	add	x21, x21, #0x8
  45e258:	add	x26, x26, #0x8
  45e25c:	b	45e208 <_obstack_memory_used@@Base+0x19804>
  45e260:	mov	x27, x23
  45e264:	add	x21, x21, #0x8
  45e268:	add	x26, x26, #0x8
  45e26c:	b	45e208 <_obstack_memory_used@@Base+0x19804>
  45e270:	add	x6, x22, #0x10
  45e274:	mov	x5, #0x0                   	// #0
  45e278:	mov	x3, #0x0                   	// #0
  45e27c:	mov	x0, #0x0                   	// #0
  45e280:	b	45e2a4 <_obstack_memory_used@@Base+0x198a0>
  45e284:	ldr	x4, [sp, #96]
  45e288:	add	x1, x3, #0x2
  45e28c:	add	x3, x3, #0x1
  45e290:	str	x2, [x4, x1, lsl #3]
  45e294:	ldr	x1, [sp, #104]
  45e298:	add	x0, x0, #0x1
  45e29c:	cmp	x1, x0
  45e2a0:	b.eq	45e2c0 <_obstack_memory_used@@Base+0x198bc>  // b.none
  45e2a4:	ldr	x1, [x6, x0, lsl #3]
  45e2a8:	ldr	x2, [x28, x0, lsl #3]
  45e2ac:	cbnz	x1, 45e284 <_obstack_memory_used@@Base+0x19880>
  45e2b0:	add	x1, x5, #0x2
  45e2b4:	add	x5, x5, #0x1
  45e2b8:	str	x2, [x22, x1, lsl #3]
  45e2bc:	b	45e294 <_obstack_memory_used@@Base+0x19890>
  45e2c0:	ldp	x0, x2, [sp, #144]
  45e2c4:	str	x0, [sp, #96]
  45e2c8:	ldr	x0, [sp, #120]
  45e2cc:	str	x3, [x0, #8]
  45e2d0:	ldr	x0, [sp, #96]
  45e2d4:	str	x5, [x22, #8]
  45e2d8:	ldr	x1, [x2, #8]
  45e2dc:	ldr	x0, [x0, #8]
  45e2e0:	add	x0, x0, x1
  45e2e4:	cmp	x0, x25
  45e2e8:	b.ne	45e474 <_obstack_memory_used@@Base+0x19a70>  // b.any
  45e2ec:	mov	x1, x20
  45e2f0:	mov	x0, x24
  45e2f4:	bl	45d050 <_obstack_memory_used@@Base+0x1864c>
  45e2f8:	ldr	x25, [sp, #152]
  45e2fc:	ldr	x22, [x25, #8]
  45e300:	cbz	x22, 45e3a4 <_obstack_memory_used@@Base+0x199a0>
  45e304:	ldr	x0, [sp, #144]
  45e308:	str	x0, [sp, #96]
  45e30c:	add	x27, x0, #0x10
  45e310:	ldr	x28, [x0, #8]
  45e314:	nop
  45e318:	add	x0, x25, x22, lsl #3
  45e31c:	sub	x23, x22, #0x1
  45e320:	ldr	x26, [x0, #8]
  45e324:	cbz	x28, 45e440 <_obstack_memory_used@@Base+0x19a3c>
  45e328:	add	x22, x22, x28
  45e32c:	mov	x21, x28
  45e330:	sub	x22, x22, #0x1
  45e334:	b	45e348 <_obstack_memory_used@@Base+0x19944>
  45e338:	ldr	x0, [x27, x21, lsl #3]
  45e33c:	str	x0, [x27, x22, lsl #3]
  45e340:	sub	x22, x22, #0x1
  45e344:	cbz	x21, 45e380 <_obstack_memory_used@@Base+0x1997c>
  45e348:	mov	x28, x21
  45e34c:	sub	x21, x21, #0x1
  45e350:	mov	x2, x26
  45e354:	mov	x0, x24
  45e358:	ldr	x1, [x27, x21, lsl #3]
  45e35c:	blr	x20
  45e360:	cmp	w0, #0x0
  45e364:	b.gt	45e338 <_obstack_memory_used@@Base+0x19934>
  45e368:	ldr	x0, [sp, #96]
  45e36c:	add	x22, x22, #0x2
  45e370:	str	x26, [x0, x22, lsl #3]
  45e374:	cbz	x23, 45e38c <_obstack_memory_used@@Base+0x19988>
  45e378:	mov	x22, x23
  45e37c:	b	45e318 <_obstack_memory_used@@Base+0x19914>
  45e380:	mov	x22, x23
  45e384:	mov	x28, #0x0                   	// #0
  45e388:	b	45e368 <_obstack_memory_used@@Base+0x19964>
  45e38c:	ldr	x2, [sp, #96]
  45e390:	ldr	x1, [x25, #8]
  45e394:	ldr	x0, [x2, #8]
  45e398:	ldr	x25, [sp, #152]
  45e39c:	add	x0, x0, x1
  45e3a0:	str	x0, [x2, #8]
  45e3a4:	mov	x0, x25
  45e3a8:	bl	402b30 <free@plt>
  45e3ac:	ldp	x27, x28, [sp, #80]
  45e3b0:	ldr	x1, [sp, #144]
  45e3b4:	ldrb	w0, [x24, #32]
  45e3b8:	ldr	x2, [x24, #24]
  45e3bc:	str	x2, [x1]
  45e3c0:	orr	w0, w0, #0x1
  45e3c4:	str	x1, [x24, #24]
  45e3c8:	strb	w0, [x24, #32]
  45e3cc:	b	45e000 <_obstack_memory_used@@Base+0x195fc>
  45e3d0:	mov	x1, x21
  45e3d4:	mov	x2, x19
  45e3d8:	mov	x0, x24
  45e3dc:	bl	45d4d0 <_obstack_memory_used@@Base+0x18acc>
  45e3e0:	mov	x20, x0
  45e3e4:	ldp	x21, x22, [sp, #32]
  45e3e8:	ldp	x25, x26, [sp, #64]
  45e3ec:	b	45de94 <_obstack_memory_used@@Base+0x19490>
  45e3f0:	ldp	x21, x22, [sp, #32]
  45e3f4:	ldp	x25, x26, [sp, #64]
  45e3f8:	ldp	x27, x28, [sp, #80]
  45e3fc:	b	45de94 <_obstack_memory_used@@Base+0x19490>
  45e400:	adrp	x20, 45d000 <_obstack_memory_used@@Base+0x185fc>
  45e404:	add	x20, x20, #0x650
  45e408:	b	45e1c4 <_obstack_memory_used@@Base+0x197c0>
  45e40c:	mov	x2, x20
  45e410:	add	x1, sp, #0x90
  45e414:	mov	x0, x24
  45e418:	bl	45d890 <_obstack_memory_used@@Base+0x18e8c>
  45e41c:	b	45e184 <_obstack_memory_used@@Base+0x19780>
  45e420:	ldr	x2, [sp, #96]
  45e424:	mov	x1, x20
  45e428:	mov	x0, x24
  45e42c:	bl	45d050 <_obstack_memory_used@@Base+0x1864c>
  45e430:	b	45e3b0 <_obstack_memory_used@@Base+0x199ac>
  45e434:	bfi	w0, w25, #11, #21
  45e438:	str	w0, [x24, #32]
  45e43c:	b	45dffc <_obstack_memory_used@@Base+0x195f8>
  45e440:	ldr	x2, [sp, #96]
  45e444:	add	x1, x22, #0x1
  45e448:	str	x26, [x2, x1, lsl #3]
  45e44c:	cbz	x23, 45e38c <_obstack_memory_used@@Base+0x19988>
  45e450:	sub	x23, x22, #0x2
  45e454:	mov	x22, x23
  45e458:	ldr	x26, [x0]
  45e45c:	b	45e368 <_obstack_memory_used@@Base+0x19964>
  45e460:	mov	x2, x22
  45e464:	mov	x5, #0x0                   	// #0
  45e468:	mov	x3, #0x0                   	// #0
  45e46c:	b	45e2c8 <_obstack_memory_used@@Base+0x198c4>
  45e470:	stp	x27, x28, [sp, #80]
  45e474:	bl	402a50 <abort@plt>
  45e478:	ldp	x21, x22, [sp, #32]
  45e47c:	ldp	x25, x26, [sp, #64]
  45e480:	b	45de40 <_obstack_memory_used@@Base+0x1943c>
  45e484:	nop
  45e488:	stp	x29, x30, [sp, #-48]!
  45e48c:	mov	x5, #0xffffffffffffffff    	// #-1
  45e490:	mov	x4, #0x7f8                 	// #2040
  45e494:	mov	x29, sp
  45e498:	stp	x19, x20, [sp, #16]
  45e49c:	adrp	x20, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  45e4a0:	mov	x19, x1
  45e4a4:	ldr	x1, [x20, #3600]
  45e4a8:	str	x21, [sp, #32]
  45e4ac:	stp	x5, x2, [x19]
  45e4b0:	adrp	x21, 495000 <_obstack_memory_used@@Base+0x505fc>
  45e4b4:	stp	x3, x0, [x19, #16]
  45e4b8:	str	x4, [x19, #32]
  45e4bc:	cbz	x1, 45e4cc <_obstack_memory_used@@Base+0x19ac8>
  45e4c0:	add	x0, x21, #0xbd8
  45e4c4:	add	x0, x0, #0x198
  45e4c8:	bl	402d40 <pthread_mutex_lock@plt>
  45e4cc:	add	x1, x21, #0xbd8
  45e4d0:	ldr	w0, [x1, #464]
  45e4d4:	ldr	x2, [x1, #456]
  45e4d8:	str	x2, [x19, #40]
  45e4dc:	str	x19, [x1, #456]
  45e4e0:	cbz	w0, 45e514 <_obstack_memory_used@@Base+0x19b10>
  45e4e4:	ldr	x20, [x20, #3600]
  45e4e8:	cbz	x20, 45e504 <_obstack_memory_used@@Base+0x19b00>
  45e4ec:	add	x0, x21, #0xbd8
  45e4f0:	ldp	x19, x20, [sp, #16]
  45e4f4:	add	x0, x0, #0x198
  45e4f8:	ldr	x21, [sp, #32]
  45e4fc:	ldp	x29, x30, [sp], #48
  45e500:	b	402d60 <pthread_mutex_unlock@plt>
  45e504:	ldp	x19, x20, [sp, #16]
  45e508:	ldr	x21, [sp, #32]
  45e50c:	ldp	x29, x30, [sp], #48
  45e510:	ret
  45e514:	add	x1, x1, #0x1d0
  45e518:	mov	w0, #0x1                   	// #1
  45e51c:	str	w0, [x1]
  45e520:	b	45e4e4 <_obstack_memory_used@@Base+0x19ae0>
  45e524:	nop
  45e528:	cbz	x0, 45e538 <_obstack_memory_used@@Base+0x19b34>
  45e52c:	ldr	w4, [x0]
  45e530:	cbz	w4, 45e538 <_obstack_memory_used@@Base+0x19b34>
  45e534:	b	45e488 <_obstack_memory_used@@Base+0x19a84>
  45e538:	ret
  45e53c:	nop
  45e540:	cbz	x0, 45e558 <_obstack_memory_used@@Base+0x19b54>
  45e544:	ldr	w2, [x0]
  45e548:	cbz	w2, 45e558 <_obstack_memory_used@@Base+0x19b54>
  45e54c:	mov	x3, #0x0                   	// #0
  45e550:	mov	x2, #0x0                   	// #0
  45e554:	b	45e488 <_obstack_memory_used@@Base+0x19a84>
  45e558:	ret
  45e55c:	nop
  45e560:	stp	x29, x30, [sp, #-32]!
  45e564:	mov	x29, sp
  45e568:	str	x19, [sp, #16]
  45e56c:	mov	x19, x0
  45e570:	ldr	w0, [x0]
  45e574:	cbnz	w0, 45e584 <_obstack_memory_used@@Base+0x19b80>
  45e578:	ldr	x19, [sp, #16]
  45e57c:	ldp	x29, x30, [sp], #32
  45e580:	ret
  45e584:	mov	x0, #0x30                  	// #48
  45e588:	bl	402890 <malloc@plt>
  45e58c:	mov	x1, x0
  45e590:	mov	x0, x19
  45e594:	ldr	x19, [sp, #16]
  45e598:	mov	x3, #0x0                   	// #0
  45e59c:	ldp	x29, x30, [sp], #32
  45e5a0:	mov	x2, #0x0                   	// #0
  45e5a4:	b	45e488 <_obstack_memory_used@@Base+0x19a84>
  45e5a8:	stp	x29, x30, [sp, #-48]!
  45e5ac:	mov	x5, #0xffffffffffffffff    	// #-1
  45e5b0:	mov	x4, #0x7fa                 	// #2042
  45e5b4:	mov	x29, sp
  45e5b8:	stp	x19, x20, [sp, #16]
  45e5bc:	adrp	x20, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  45e5c0:	mov	x19, x1
  45e5c4:	ldr	x1, [x20, #3600]
  45e5c8:	str	x21, [sp, #32]
  45e5cc:	stp	x5, x2, [x19]
  45e5d0:	adrp	x21, 495000 <_obstack_memory_used@@Base+0x505fc>
  45e5d4:	stp	x3, x0, [x19, #16]
  45e5d8:	str	x4, [x19, #32]
  45e5dc:	cbz	x1, 45e5ec <_obstack_memory_used@@Base+0x19be8>
  45e5e0:	add	x0, x21, #0xbd8
  45e5e4:	add	x0, x0, #0x198
  45e5e8:	bl	402d40 <pthread_mutex_lock@plt>
  45e5ec:	add	x1, x21, #0xbd8
  45e5f0:	ldr	w0, [x1, #464]
  45e5f4:	ldr	x2, [x1, #456]
  45e5f8:	str	x2, [x19, #40]
  45e5fc:	str	x19, [x1, #456]
  45e600:	cbz	w0, 45e634 <_obstack_memory_used@@Base+0x19c30>
  45e604:	ldr	x20, [x20, #3600]
  45e608:	cbz	x20, 45e624 <_obstack_memory_used@@Base+0x19c20>
  45e60c:	add	x0, x21, #0xbd8
  45e610:	ldp	x19, x20, [sp, #16]
  45e614:	add	x0, x0, #0x198
  45e618:	ldr	x21, [sp, #32]
  45e61c:	ldp	x29, x30, [sp], #48
  45e620:	b	402d60 <pthread_mutex_unlock@plt>
  45e624:	ldp	x19, x20, [sp, #16]
  45e628:	ldr	x21, [sp, #32]
  45e62c:	ldp	x29, x30, [sp], #48
  45e630:	ret
  45e634:	add	x1, x1, #0x1d0
  45e638:	mov	w0, #0x1                   	// #1
  45e63c:	str	w0, [x1]
  45e640:	b	45e604 <_obstack_memory_used@@Base+0x19c00>
  45e644:	nop
  45e648:	mov	x3, #0x0                   	// #0
  45e64c:	mov	x2, #0x0                   	// #0
  45e650:	b	45e5a8 <_obstack_memory_used@@Base+0x19ba4>
  45e654:	nop
  45e658:	stp	x29, x30, [sp, #-32]!
  45e65c:	mov	x29, sp
  45e660:	str	x19, [sp, #16]
  45e664:	mov	x19, x0
  45e668:	mov	x0, #0x30                  	// #48
  45e66c:	bl	402890 <malloc@plt>
  45e670:	mov	x1, x0
  45e674:	mov	x0, x19
  45e678:	ldr	x19, [sp, #16]
  45e67c:	mov	x3, #0x0                   	// #0
  45e680:	ldp	x29, x30, [sp], #32
  45e684:	mov	x2, #0x0                   	// #0
  45e688:	b	45e5a8 <_obstack_memory_used@@Base+0x19ba4>
  45e68c:	nop
  45e690:	stp	x29, x30, [sp, #-48]!
  45e694:	mov	x29, sp
  45e698:	stp	x19, x20, [sp, #16]
  45e69c:	cbz	x0, 45e768 <_obstack_memory_used@@Base+0x19d64>
  45e6a0:	mov	x20, x0
  45e6a4:	ldr	w0, [x0]
  45e6a8:	cbz	w0, 45e768 <_obstack_memory_used@@Base+0x19d64>
  45e6ac:	stp	x21, x22, [sp, #32]
  45e6b0:	adrp	x21, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  45e6b4:	adrp	x22, 495000 <_obstack_memory_used@@Base+0x505fc>
  45e6b8:	ldr	x0, [x21, #3600]
  45e6bc:	cbz	x0, 45e6cc <_obstack_memory_used@@Base+0x19cc8>
  45e6c0:	add	x0, x22, #0xbd8
  45e6c4:	add	x0, x0, #0x198
  45e6c8:	bl	402d40 <pthread_mutex_lock@plt>
  45e6cc:	add	x2, x22, #0xbd8
  45e6d0:	ldr	x1, [x2, #456]
  45e6d4:	cbz	x1, 45e71c <_obstack_memory_used@@Base+0x19d18>
  45e6d8:	add	x2, x2, #0x1c8
  45e6dc:	b	45e6e8 <_obstack_memory_used@@Base+0x19ce4>
  45e6e0:	add	x2, x19, #0x28
  45e6e4:	cbz	x1, 45e71c <_obstack_memory_used@@Base+0x19d18>
  45e6e8:	ldr	x0, [x1, #24]
  45e6ec:	mov	x19, x1
  45e6f0:	ldr	x1, [x1, #40]
  45e6f4:	cmp	x20, x0
  45e6f8:	b.ne	45e6e0 <_obstack_memory_used@@Base+0x19cdc>  // b.any
  45e6fc:	str	x1, [x2]
  45e700:	ldr	x21, [x21, #3600]
  45e704:	cbnz	x21, 45e77c <_obstack_memory_used@@Base+0x19d78>
  45e708:	mov	x0, x19
  45e70c:	ldp	x19, x20, [sp, #16]
  45e710:	ldp	x21, x22, [sp, #32]
  45e714:	ldp	x29, x30, [sp], #48
  45e718:	ret
  45e71c:	add	x2, x22, #0xbd8
  45e720:	ldr	x19, [x2, #472]
  45e724:	cbz	x19, 45e79c <_obstack_memory_used@@Base+0x19d98>
  45e728:	add	x2, x2, #0x1d8
  45e72c:	b	45e748 <_obstack_memory_used@@Base+0x19d44>
  45e730:	ldr	x1, [x0]
  45e734:	cmp	x20, x1
  45e738:	b.eq	45e7b4 <_obstack_memory_used@@Base+0x19db0>  // b.none
  45e73c:	add	x2, x19, #0x28
  45e740:	ldr	x19, [x19, #40]
  45e744:	cbz	x19, 45e79c <_obstack_memory_used@@Base+0x19d98>
  45e748:	ldrb	w1, [x19, #32]
  45e74c:	ldr	x0, [x19, #24]
  45e750:	tbnz	w1, #0, 45e730 <_obstack_memory_used@@Base+0x19d2c>
  45e754:	cmp	x20, x0
  45e758:	b.ne	45e73c <_obstack_memory_used@@Base+0x19d38>  // b.any
  45e75c:	ldr	x0, [x19, #40]
  45e760:	str	x0, [x2]
  45e764:	b	45e700 <_obstack_memory_used@@Base+0x19cfc>
  45e768:	mov	x19, #0x0                   	// #0
  45e76c:	mov	x0, x19
  45e770:	ldp	x19, x20, [sp, #16]
  45e774:	ldp	x29, x30, [sp], #48
  45e778:	ret
  45e77c:	add	x0, x22, #0xbd8
  45e780:	add	x0, x0, #0x198
  45e784:	bl	402d60 <pthread_mutex_unlock@plt>
  45e788:	mov	x0, x19
  45e78c:	ldp	x19, x20, [sp, #16]
  45e790:	ldp	x21, x22, [sp, #32]
  45e794:	ldp	x29, x30, [sp], #48
  45e798:	ret
  45e79c:	ldr	x21, [x21, #3600]
  45e7a0:	cbz	x21, 45e7b0 <_obstack_memory_used@@Base+0x19dac>
  45e7a4:	add	x0, x22, #0xbd8
  45e7a8:	add	x0, x0, #0x198
  45e7ac:	bl	402d60 <pthread_mutex_unlock@plt>
  45e7b0:	bl	402a50 <abort@plt>
  45e7b4:	ldr	x1, [x19, #40]
  45e7b8:	str	x1, [x2]
  45e7bc:	bl	402b30 <free@plt>
  45e7c0:	b	45e700 <_obstack_memory_used@@Base+0x19cfc>
  45e7c4:	nop
  45e7c8:	b	45e690 <_obstack_memory_used@@Base+0x19c8c>
  45e7cc:	nop
  45e7d0:	ldr	w1, [x0]
  45e7d4:	cbnz	w1, 45e7dc <_obstack_memory_used@@Base+0x19dd8>
  45e7d8:	ret
  45e7dc:	stp	x29, x30, [sp, #-16]!
  45e7e0:	mov	x29, sp
  45e7e4:	bl	45e690 <_obstack_memory_used@@Base+0x19c8c>
  45e7e8:	ldp	x29, x30, [sp], #16
  45e7ec:	b	402b30 <free@plt>
  45e7f0:	stp	x29, x30, [sp, #-128]!
  45e7f4:	mov	x29, sp
  45e7f8:	stp	x23, x24, [sp, #48]
  45e7fc:	adrp	x23, 495000 <_obstack_memory_used@@Base+0x505fc>
  45e800:	add	x2, x23, #0xbd8
  45e804:	stp	x19, x20, [sp, #16]
  45e808:	mov	x20, x0
  45e80c:	add	x0, x2, #0x1d0
  45e810:	stp	x21, x22, [sp, #32]
  45e814:	mov	x22, x1
  45e818:	ldr	w0, [x0]
  45e81c:	cbnz	w0, 45e880 <_obstack_memory_used@@Base+0x19e7c>
  45e820:	mov	w2, #0x1                   	// #1
  45e824:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x185fc>
  45e828:	add	x1, sp, #0x50
  45e82c:	add	x0, x0, #0x9d0
  45e830:	stp	x20, xzr, [sp, #80]
  45e834:	stp	xzr, xzr, [sp, #96]
  45e838:	str	xzr, [sp, #112]
  45e83c:	str	w2, [sp, #120]
  45e840:	bl	402b10 <dl_iterate_phdr@plt>
  45e844:	tbnz	w0, #31, 45e994 <_obstack_memory_used@@Base+0x19f90>
  45e848:	ldr	x21, [sp, #112]
  45e84c:	cbz	x21, 45e868 <_obstack_memory_used@@Base+0x19e64>
  45e850:	ldr	x0, [sp, #88]
  45e854:	str	x0, [x22]
  45e858:	ldr	x0, [sp, #96]
  45e85c:	str	x0, [x22, #8]
  45e860:	ldr	x0, [sp, #104]
  45e864:	str	x0, [x22, #16]
  45e868:	mov	x0, x21
  45e86c:	ldp	x19, x20, [sp, #16]
  45e870:	ldp	x21, x22, [sp, #32]
  45e874:	ldp	x23, x24, [sp, #48]
  45e878:	ldp	x29, x30, [sp], #128
  45e87c:	ret
  45e880:	stp	x25, x26, [sp, #64]
  45e884:	adrp	x25, 494000 <_obstack_memory_used@@Base+0x4f5fc>
  45e888:	ldr	x0, [x25, #3600]
  45e88c:	cbz	x0, 45e898 <_obstack_memory_used@@Base+0x19e94>
  45e890:	add	x0, x2, #0x198
  45e894:	bl	402d40 <pthread_mutex_lock@plt>
  45e898:	add	x0, x23, #0xbd8
  45e89c:	ldr	x19, [x0, #472]
  45e8a0:	cbnz	x19, 45e8b0 <_obstack_memory_used@@Base+0x19eac>
  45e8a4:	b	45e92c <_obstack_memory_used@@Base+0x19f28>
  45e8a8:	ldr	x19, [x19, #40]
  45e8ac:	cbz	x19, 45e92c <_obstack_memory_used@@Base+0x19f28>
  45e8b0:	ldr	x0, [x19]
  45e8b4:	cmp	x20, x0
  45e8b8:	b.cc	45e8a8 <_obstack_memory_used@@Base+0x19ea4>  // b.lo, b.ul, b.last
  45e8bc:	mov	x1, x20
  45e8c0:	mov	x0, x19
  45e8c4:	bl	45de20 <_obstack_memory_used@@Base+0x1941c>
  45e8c8:	mov	x21, x0
  45e8cc:	cbz	x0, 45e92c <_obstack_memory_used@@Base+0x19f28>
  45e8d0:	ldr	x25, [x25, #3600]
  45e8d4:	cbnz	x25, 45e99c <_obstack_memory_used@@Base+0x19f98>
  45e8d8:	ldrb	w0, [x19, #32]
  45e8dc:	ldr	x1, [x19, #8]
  45e8e0:	str	x1, [x22]
  45e8e4:	ldr	x1, [x19, #16]
  45e8e8:	str	x1, [x22, #8]
  45e8ec:	tbnz	w0, #2, 45e9ac <_obstack_memory_used@@Base+0x19fa8>
  45e8f0:	ldrh	w20, [x19, #32]
  45e8f4:	ubfx	x20, x20, #3, #8
  45e8f8:	add	x2, x19, #0x10
  45e8fc:	add	x1, x19, #0x8
  45e900:	mov	w0, w20
  45e904:	bl	45d3e8 <_obstack_memory_used@@Base+0x189e4>
  45e908:	add	x3, sp, #0x50
  45e90c:	mov	x1, x0
  45e910:	add	x2, x21, #0x8
  45e914:	mov	w0, w20
  45e918:	bl	45d170 <_obstack_memory_used@@Base+0x1876c>
  45e91c:	ldr	x0, [sp, #80]
  45e920:	ldp	x25, x26, [sp, #64]
  45e924:	str	x0, [x22, #16]
  45e928:	b	45e868 <_obstack_memory_used@@Base+0x19e64>
  45e92c:	add	x24, x23, #0xbd8
  45e930:	add	x26, x24, #0x1d8
  45e934:	nop
  45e938:	ldr	x19, [x24, #456]
  45e93c:	cbz	x19, 45e9c4 <_obstack_memory_used@@Base+0x19fc0>
  45e940:	ldr	x2, [x19, #40]
  45e944:	mov	x1, x20
  45e948:	mov	x0, x19
  45e94c:	str	x2, [x24, #456]
  45e950:	bl	45de20 <_obstack_memory_used@@Base+0x1941c>
  45e954:	mov	x21, x0
  45e958:	ldr	x2, [x24, #472]
  45e95c:	cbz	x2, 45e9dc <_obstack_memory_used@@Base+0x19fd8>
  45e960:	mov	x0, x26
  45e964:	ldr	x3, [x19]
  45e968:	b	45e978 <_obstack_memory_used@@Base+0x19f74>
  45e96c:	add	x0, x2, #0x28
  45e970:	ldr	x2, [x2, #40]
  45e974:	cbz	x2, 45e984 <_obstack_memory_used@@Base+0x19f80>
  45e978:	ldr	x1, [x2]
  45e97c:	cmp	x1, x3
  45e980:	b.cs	45e96c <_obstack_memory_used@@Base+0x19f68>  // b.hs, b.nlast
  45e984:	str	x2, [x19, #40]
  45e988:	str	x19, [x0]
  45e98c:	cbz	x21, 45e938 <_obstack_memory_used@@Base+0x19f34>
  45e990:	b	45e8d0 <_obstack_memory_used@@Base+0x19ecc>
  45e994:	mov	x21, #0x0                   	// #0
  45e998:	b	45e868 <_obstack_memory_used@@Base+0x19e64>
  45e99c:	add	x0, x23, #0xbd8
  45e9a0:	add	x0, x0, #0x198
  45e9a4:	bl	402d60 <pthread_mutex_unlock@plt>
  45e9a8:	b	45e8d8 <_obstack_memory_used@@Base+0x19ed4>
  45e9ac:	add	x1, x21, #0x4
  45e9b0:	ldrsw	x0, [x21, #4]
  45e9b4:	sub	x0, x1, x0
  45e9b8:	bl	45d2d0 <_obstack_memory_used@@Base+0x188cc>
  45e9bc:	and	w20, w0, #0xff
  45e9c0:	b	45e8f8 <_obstack_memory_used@@Base+0x19ef4>
  45e9c4:	ldr	x25, [x25, #3600]
  45e9c8:	cbz	x25, 45e9e4 <_obstack_memory_used@@Base+0x19fe0>
  45e9cc:	add	x0, x24, #0x198
  45e9d0:	bl	402d60 <pthread_mutex_unlock@plt>
  45e9d4:	ldp	x25, x26, [sp, #64]
  45e9d8:	b	45e820 <_obstack_memory_used@@Base+0x19e1c>
  45e9dc:	mov	x0, x26
  45e9e0:	b	45e984 <_obstack_memory_used@@Base+0x19f80>
  45e9e4:	ldp	x25, x26, [sp, #64]
  45e9e8:	b	45e820 <_obstack_memory_used@@Base+0x19e1c>
  45e9ec:	nop
  45e9f0:	stp	x29, x30, [sp, #-64]!
  45e9f4:	mov	x29, sp
  45e9f8:	stp	x19, x20, [sp, #16]
  45e9fc:	adrp	x20, 493000 <_obstack_memory_used@@Base+0x4e5fc>
  45ea00:	add	x20, x20, #0x9b0
  45ea04:	stp	x21, x22, [sp, #32]
  45ea08:	adrp	x21, 493000 <_obstack_memory_used@@Base+0x4e5fc>
  45ea0c:	add	x21, x21, #0x988
  45ea10:	sub	x20, x20, x21
  45ea14:	mov	w22, w0
  45ea18:	stp	x23, x24, [sp, #48]
  45ea1c:	mov	x23, x1
  45ea20:	mov	x24, x2
  45ea24:	bl	402650 <_ZGTtnam@plt-0x40>
  45ea28:	cmp	xzr, x20, asr #3
  45ea2c:	b.eq	45ea58 <_obstack_memory_used@@Base+0x1a054>  // b.none
  45ea30:	asr	x20, x20, #3
  45ea34:	mov	x19, #0x0                   	// #0
  45ea38:	ldr	x3, [x21, x19, lsl #3]
  45ea3c:	mov	x2, x24
  45ea40:	add	x19, x19, #0x1
  45ea44:	mov	x1, x23
  45ea48:	mov	w0, w22
  45ea4c:	blr	x3
  45ea50:	cmp	x20, x19
  45ea54:	b.ne	45ea38 <_obstack_memory_used@@Base+0x1a034>  // b.any
  45ea58:	ldp	x19, x20, [sp, #16]
  45ea5c:	ldp	x21, x22, [sp, #32]
  45ea60:	ldp	x23, x24, [sp, #48]
  45ea64:	ldp	x29, x30, [sp], #64
  45ea68:	ret
  45ea6c:	nop
  45ea70:	ret
  45ea74:	nop
  45ea78:	mov	x2, x1
  45ea7c:	mov	x1, x0
  45ea80:	mov	w0, #0x0                   	// #0
  45ea84:	b	402d20 <__xstat@plt>
  45ea88:	mov	x2, x1
  45ea8c:	mov	w1, w0
  45ea90:	mov	w0, #0x0                   	// #0
  45ea94:	b	402c70 <__fxstat@plt>
  45ea98:	mov	x2, x1
  45ea9c:	mov	x1, x0
  45eaa0:	mov	w0, #0x0                   	// #0
  45eaa4:	b	402c00 <__lxstat@plt>

Disassembly of section .fini:

000000000045eaa8 <.fini>:
  45eaa8:	stp	x29, x30, [sp, #-16]!
  45eaac:	mov	x29, sp
  45eab0:	ldp	x29, x30, [sp], #16
  45eab4:	ret
