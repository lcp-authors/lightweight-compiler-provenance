
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ufs2.module_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_fs_register>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	str	x0, [sp, #24]
       c:	ldr	x1, [sp, #24]
      10:	adrp	x0, 0 <grub_fs_register>
      14:	add	x0, x0, #0x0
      18:	ldr	x0, [x0]
      1c:	bl	0 <grub_list_push>
      20:	nop
      24:	ldp	x29, x30, [sp], #32
      28:	ret
      2c:	nop
	...

0000000000000038 <grub_fs_unregister>:
      38:	stp	x29, x30, [sp, #-32]!
      3c:	mov	x29, sp
      40:	str	x0, [sp, #24]
      44:	ldr	x0, [sp, #24]
      48:	bl	0 <grub_list_remove>
      4c:	nop
      50:	ldp	x29, x30, [sp], #32
      54:	ret

0000000000000058 <grub_ufs_to_cpu_blk>:
      58:	sub	sp, sp, #0x10
      5c:	str	x0, [sp, #8]
      60:	ldr	x0, [sp, #8]
      64:	add	sp, sp, #0x10
      68:	ret

000000000000006c <grub_ufs_get_file_block>:
      6c:	stp	x29, x30, [sp, #-96]!
      70:	mov	x29, sp
      74:	str	x19, [sp, #16]
      78:	str	x0, [sp, #40]
      7c:	str	x1, [sp, #32]
      80:	ldr	x0, [sp, #32]
      84:	cmp	x0, #0xb
      88:	b.hi	a8 <grub_ufs_get_file_block+0x3c>  // b.pmore
      8c:	ldr	x1, [sp, #40]
      90:	ldr	x0, [sp, #32]
      94:	add	x0, x0, #0xba
      98:	lsl	x0, x0, #3
      9c:	add	x0, x1, x0
      a0:	ldr	x0, [x0, #8]
      a4:	b	350 <grub_ufs_get_file_block+0x2e4>
      a8:	ldr	x0, [sp, #40]
      ac:	ldr	w0, [x0, #100]
      b0:	str	w0, [sp, #92]
      b4:	ldr	x0, [sp, #32]
      b8:	sub	x0, x0, #0xc
      bc:	str	x0, [sp, #32]
      c0:	ldr	x0, [sp, #40]
      c4:	ldr	w0, [x0, #1648]
      c8:	sub	w0, w0, #0x3
      cc:	str	w0, [sp, #88]
      d0:	ldr	w0, [sp, #88]
      d4:	mov	w1, #0x1                   	// #1
      d8:	lsl	w0, w1, w0
      dc:	sxtw	x0, w0
      e0:	str	x0, [sp, #80]
      e4:	ldr	x1, [sp, #32]
      e8:	ldr	x0, [sp, #80]
      ec:	cmp	x1, x0
      f0:	b.cs	134 <grub_ufs_get_file_block+0xc8>  // b.hs, b.nlast
      f4:	ldr	x0, [sp, #40]
      f8:	ldr	x5, [x0, #1376]
      fc:	ldr	x0, [sp, #40]
     100:	ldr	x1, [x0, #1592]
     104:	ldr	w0, [sp, #92]
     108:	lsl	x1, x1, x0
     10c:	ldr	x0, [sp, #32]
     110:	lsl	x0, x0, #3
     114:	add	x2, sp, #0x48
     118:	mov	x4, x2
     11c:	mov	x3, #0x8                   	// #8
     120:	mov	x2, x0
     124:	mov	x0, x5
     128:	bl	0 <grub_disk_read>
     12c:	ldr	x0, [sp, #72]
     130:	b	350 <grub_ufs_get_file_block+0x2e4>
     134:	ldr	x1, [sp, #32]
     138:	ldr	x0, [sp, #80]
     13c:	sub	x0, x1, x0
     140:	str	x0, [sp, #32]
     144:	ldr	x0, [sp, #80]
     148:	mul	x0, x0, x0
     14c:	ldr	x1, [sp, #32]
     150:	cmp	x1, x0
     154:	b.cs	1fc <grub_ufs_get_file_block+0x190>  // b.hs, b.nlast
     158:	ldr	x0, [sp, #40]
     15c:	ldr	x5, [x0, #1376]
     160:	ldr	x0, [sp, #40]
     164:	ldr	x1, [x0, #1600]
     168:	ldr	w0, [sp, #92]
     16c:	lsl	x6, x1, x0
     170:	ldr	w0, [sp, #88]
     174:	ldr	x1, [sp, #32]
     178:	lsr	x0, x1, x0
     17c:	lsl	x0, x0, #3
     180:	add	x1, sp, #0x40
     184:	mov	x4, x1
     188:	mov	x3, #0x8                   	// #8
     18c:	mov	x2, x0
     190:	mov	x1, x6
     194:	mov	x0, x5
     198:	bl	0 <grub_disk_read>
     19c:	ldr	x0, [sp, #40]
     1a0:	ldr	x19, [x0, #1376]
     1a4:	ldr	x0, [sp, #64]
     1a8:	bl	58 <grub_ufs_to_cpu_blk>
     1ac:	mov	x1, x0
     1b0:	ldr	w0, [sp, #92]
     1b4:	lsl	x5, x1, x0
     1b8:	ldr	w0, [sp, #88]
     1bc:	mov	w1, #0x1                   	// #1
     1c0:	lsl	w0, w1, w0
     1c4:	sub	w0, w0, #0x1
     1c8:	sxtw	x1, w0
     1cc:	ldr	x0, [sp, #32]
     1d0:	and	x0, x1, x0
     1d4:	lsl	x0, x0, #3
     1d8:	add	x1, sp, #0x40
     1dc:	mov	x4, x1
     1e0:	mov	x3, #0x8                   	// #8
     1e4:	mov	x2, x0
     1e8:	mov	x1, x5
     1ec:	mov	x0, x19
     1f0:	bl	0 <grub_disk_read>
     1f4:	ldr	x0, [sp, #64]
     1f8:	b	350 <grub_ufs_get_file_block+0x2e4>
     1fc:	ldr	x0, [sp, #80]
     200:	mul	x0, x0, x0
     204:	ldr	x1, [sp, #32]
     208:	sub	x0, x1, x0
     20c:	str	x0, [sp, #32]
     210:	ldr	w1, [sp, #88]
     214:	mov	w0, w1
     218:	lsl	w0, w0, #1
     21c:	add	w0, w0, w1
     220:	ldr	x1, [sp, #32]
     224:	lsr	x0, x1, x0
     228:	cmp	x0, #0x0
     22c:	b.ne	338 <grub_ufs_get_file_block+0x2cc>  // b.any
     230:	ldr	x0, [sp, #40]
     234:	ldr	x5, [x0, #1376]
     238:	ldr	x0, [sp, #40]
     23c:	ldr	x1, [x0, #1608]
     240:	ldr	w0, [sp, #92]
     244:	lsl	x6, x1, x0
     248:	ldr	w0, [sp, #88]
     24c:	lsl	w0, w0, #1
     250:	ldr	x1, [sp, #32]
     254:	lsr	x0, x1, x0
     258:	lsl	x0, x0, #3
     25c:	add	x1, sp, #0x38
     260:	mov	x4, x1
     264:	mov	x3, #0x8                   	// #8
     268:	mov	x2, x0
     26c:	mov	x1, x6
     270:	mov	x0, x5
     274:	bl	0 <grub_disk_read>
     278:	ldr	x0, [sp, #40]
     27c:	ldr	x19, [x0, #1376]
     280:	ldr	x0, [sp, #56]
     284:	bl	58 <grub_ufs_to_cpu_blk>
     288:	mov	x1, x0
     28c:	ldr	w0, [sp, #92]
     290:	lsl	x5, x1, x0
     294:	ldr	w0, [sp, #88]
     298:	ldr	x1, [sp, #32]
     29c:	lsr	x1, x1, x0
     2a0:	ldr	w0, [sp, #88]
     2a4:	mov	w2, #0x1                   	// #1
     2a8:	lsl	w0, w2, w0
     2ac:	sub	w0, w0, #0x1
     2b0:	sxtw	x0, w0
     2b4:	and	x0, x1, x0
     2b8:	lsl	x0, x0, #3
     2bc:	add	x1, sp, #0x38
     2c0:	mov	x4, x1
     2c4:	mov	x3, #0x8                   	// #8
     2c8:	mov	x2, x0
     2cc:	mov	x1, x5
     2d0:	mov	x0, x19
     2d4:	bl	0 <grub_disk_read>
     2d8:	ldr	x0, [sp, #40]
     2dc:	ldr	x19, [x0, #1376]
     2e0:	ldr	x0, [sp, #56]
     2e4:	bl	58 <grub_ufs_to_cpu_blk>
     2e8:	mov	x1, x0
     2ec:	ldr	w0, [sp, #92]
     2f0:	lsl	x5, x1, x0
     2f4:	ldr	w0, [sp, #88]
     2f8:	mov	w1, #0x1                   	// #1
     2fc:	lsl	w0, w1, w0
     300:	sub	w0, w0, #0x1
     304:	sxtw	x1, w0
     308:	ldr	x0, [sp, #32]
     30c:	and	x0, x1, x0
     310:	lsl	x0, x0, #3
     314:	add	x1, sp, #0x38
     318:	mov	x4, x1
     31c:	mov	x3, #0x8                   	// #8
     320:	mov	x2, x0
     324:	mov	x1, x5
     328:	mov	x0, x19
     32c:	bl	0 <grub_disk_read>
     330:	ldr	x0, [sp, #56]
     334:	b	350 <grub_ufs_get_file_block+0x2e4>
     338:	adrp	x0, 0 <grub_fs_register>
     33c:	add	x0, x0, #0x0
     340:	ldr	x1, [x0]
     344:	mov	w0, #0x9                   	// #9
     348:	bl	0 <grub_error>
     34c:	mov	x0, #0x0                   	// #0
     350:	ldr	x19, [sp, #16]
     354:	ldp	x29, x30, [sp], #96
     358:	ret
     35c:	nop
	...

0000000000000368 <grub_ufs_read_file>:
     368:	stp	x29, x30, [sp, #-128]!
     36c:	mov	x29, sp
     370:	str	x0, [sp, #56]
     374:	str	x1, [sp, #48]
     378:	str	x2, [sp, #40]
     37c:	str	x3, [sp, #32]
     380:	str	x4, [sp, #24]
     384:	str	x5, [sp, #16]
     388:	ldr	x0, [sp, #56]
     38c:	str	x0, [sp, #96]
     390:	ldr	x1, [sp, #24]
     394:	ldr	x0, [sp, #32]
     398:	add	x1, x1, x0
     39c:	ldr	x0, [sp, #56]
     3a0:	ldr	x0, [x0, #1400]
     3a4:	cmp	x1, x0
     3a8:	b.ls	3c0 <grub_ufs_read_file+0x58>  // b.plast
     3ac:	ldr	x0, [sp, #56]
     3b0:	ldr	x1, [x0, #1400]
     3b4:	ldr	x0, [sp, #32]
     3b8:	sub	x0, x1, x0
     3bc:	str	x0, [sp, #24]
     3c0:	ldr	x1, [sp, #24]
     3c4:	ldr	x0, [sp, #32]
     3c8:	add	x1, x1, x0
     3cc:	ldr	x0, [sp, #96]
     3d0:	ldr	w0, [x0, #48]
     3d4:	mov	w0, w0
     3d8:	add	x0, x1, x0
     3dc:	sub	x1, x0, #0x1
     3e0:	ldr	x0, [sp, #56]
     3e4:	ldr	w0, [x0, #1648]
     3e8:	lsr	x0, x1, x0
     3ec:	str	x0, [sp, #88]
     3f0:	ldr	x0, [sp, #56]
     3f4:	ldr	w0, [x0, #1648]
     3f8:	ldr	x1, [sp, #32]
     3fc:	lsr	x0, x1, x0
     400:	str	x0, [sp, #120]
     404:	b	5bc <grub_ufs_read_file+0x254>
     408:	ldr	x0, [sp, #96]
     40c:	ldr	w0, [x0, #48]
     410:	mov	w0, w0
     414:	str	x0, [sp, #112]
     418:	str	wzr, [sp, #108]
     41c:	ldr	x0, [sp, #96]
     420:	ldr	w0, [x0, #48]
     424:	sub	w0, w0, #0x1
     428:	mov	w0, w0
     42c:	ldr	x1, [sp, #32]
     430:	and	x0, x1, x0
     434:	str	x0, [sp, #80]
     438:	ldr	x1, [sp, #120]
     43c:	ldr	x0, [sp, #56]
     440:	bl	6c <grub_ufs_get_file_block>
     444:	str	x0, [sp, #72]
     448:	adrp	x0, 0 <grub_fs_register>
     44c:	add	x0, x0, #0x0
     450:	ldr	x0, [x0]
     454:	ldr	w0, [x0]
     458:	cmp	w0, #0x0
     45c:	b.eq	468 <grub_ufs_read_file+0x100>  // b.none
     460:	mov	x0, #0xffffffffffffffff    	// #-1
     464:	b	5d0 <grub_ufs_read_file+0x268>
     468:	ldr	x0, [sp, #88]
     46c:	sub	x0, x0, #0x1
     470:	ldr	x1, [sp, #120]
     474:	cmp	x1, x0
     478:	b.ne	4bc <grub_ufs_read_file+0x154>  // b.any
     47c:	ldr	x1, [sp, #24]
     480:	ldr	x0, [sp, #32]
     484:	add	x1, x1, x0
     488:	ldr	x0, [sp, #96]
     48c:	ldr	w0, [x0, #48]
     490:	sub	w0, w0, #0x1
     494:	mov	w0, w0
     498:	and	x0, x1, x0
     49c:	str	x0, [sp, #112]
     4a0:	ldr	x0, [sp, #112]
     4a4:	cmp	x0, #0x0
     4a8:	b.ne	4bc <grub_ufs_read_file+0x154>  // b.any
     4ac:	ldr	x0, [sp, #96]
     4b0:	ldr	w0, [x0, #48]
     4b4:	mov	w0, w0
     4b8:	str	x0, [sp, #112]
     4bc:	ldr	x0, [sp, #56]
     4c0:	ldr	w0, [x0, #1648]
     4c4:	ldr	x1, [sp, #32]
     4c8:	lsr	x0, x1, x0
     4cc:	ldr	x1, [sp, #120]
     4d0:	cmp	x1, x0
     4d4:	b.ne	4f0 <grub_ufs_read_file+0x188>  // b.any
     4d8:	ldr	x0, [sp, #80]
     4dc:	str	w0, [sp, #108]
     4e0:	ldrsw	x0, [sp, #108]
     4e4:	ldr	x1, [sp, #112]
     4e8:	sub	x0, x1, x0
     4ec:	str	x0, [sp, #112]
     4f0:	ldr	x0, [sp, #72]
     4f4:	cmp	x0, #0x0
     4f8:	b.eq	57c <grub_ufs_read_file+0x214>  // b.none
     4fc:	ldr	x0, [sp, #56]
     500:	ldr	x0, [x0, #1376]
     504:	ldr	x1, [sp, #48]
     508:	str	x1, [x0, #48]
     50c:	ldr	x0, [sp, #56]
     510:	ldr	x0, [x0, #1376]
     514:	ldr	x1, [sp, #40]
     518:	str	x1, [x0, #56]
     51c:	ldr	x0, [sp, #56]
     520:	ldr	x5, [x0, #1376]
     524:	ldr	x0, [sp, #56]
     528:	ldr	w0, [x0, #100]
     52c:	ldr	x1, [sp, #72]
     530:	lsl	x0, x1, x0
     534:	ldrsw	x1, [sp, #108]
     538:	ldr	x4, [sp, #16]
     53c:	ldr	x3, [sp, #112]
     540:	mov	x2, x1
     544:	mov	x1, x0
     548:	mov	x0, x5
     54c:	bl	0 <grub_disk_read>
     550:	ldr	x0, [sp, #56]
     554:	ldr	x0, [x0, #1376]
     558:	str	xzr, [x0, #48]
     55c:	adrp	x0, 0 <grub_fs_register>
     560:	add	x0, x0, #0x0
     564:	ldr	x0, [x0]
     568:	ldr	w0, [x0]
     56c:	cmp	w0, #0x0
     570:	b.eq	58c <grub_ufs_read_file+0x224>  // b.none
     574:	mov	x0, #0xffffffffffffffff    	// #-1
     578:	b	5d0 <grub_ufs_read_file+0x268>
     57c:	ldr	x2, [sp, #112]
     580:	mov	w1, #0x0                   	// #0
     584:	ldr	x0, [sp, #16]
     588:	bl	0 <grub_memset>
     58c:	ldr	x0, [sp, #96]
     590:	ldr	w0, [x0, #48]
     594:	mov	w1, w0
     598:	ldr	w0, [sp, #108]
     59c:	sub	w0, w1, w0
     5a0:	mov	w0, w0
     5a4:	ldr	x1, [sp, #16]
     5a8:	add	x0, x1, x0
     5ac:	str	x0, [sp, #16]
     5b0:	ldr	x0, [sp, #120]
     5b4:	add	x0, x0, #0x1
     5b8:	str	x0, [sp, #120]
     5bc:	ldr	x1, [sp, #120]
     5c0:	ldr	x0, [sp, #88]
     5c4:	cmp	x1, x0
     5c8:	b.cc	408 <grub_ufs_read_file+0xa0>  // b.lo, b.ul, b.last
     5cc:	ldr	x0, [sp, #24]
     5d0:	ldp	x29, x30, [sp], #128
     5d4:	ret
	...

00000000000005e0 <grub_ufs_read_inode>:
     5e0:	stp	x29, x30, [sp, #-80]!
     5e4:	mov	x29, sp
     5e8:	str	x0, [sp, #40]
     5ec:	str	w1, [sp, #36]
     5f0:	str	x2, [sp, #24]
     5f4:	ldr	x0, [sp, #40]
     5f8:	str	x0, [sp, #72]
     5fc:	ldr	w1, [sp, #36]
     600:	ldr	x0, [sp, #72]
     604:	ldr	w0, [x0, #184]
     608:	udiv	w0, w1, w0
     60c:	str	w0, [sp, #68]
     610:	ldr	w0, [sp, #36]
     614:	ldr	x1, [sp, #72]
     618:	ldr	w1, [x1, #184]
     61c:	udiv	w2, w0, w1
     620:	mul	w1, w2, w1
     624:	sub	w0, w0, w1
     628:	str	w0, [sp, #64]
     62c:	ldr	x0, [sp, #72]
     630:	ldr	w1, [x0, #188]
     634:	ldr	w0, [sp, #68]
     638:	mul	w0, w1, w0
     63c:	str	w0, [sp, #60]
     640:	ldr	x0, [sp, #24]
     644:	cmp	x0, #0x0
     648:	b.ne	664 <grub_ufs_read_inode+0x84>  // b.any
     64c:	ldr	x0, [sp, #40]
     650:	add	x0, x0, #0x568
     654:	str	x0, [sp, #24]
     658:	ldr	x0, [sp, #40]
     65c:	ldr	w1, [sp, #36]
     660:	str	w1, [x0, #1640]
     664:	ldr	x0, [sp, #40]
     668:	ldr	x5, [x0, #1376]
     66c:	ldr	x0, [sp, #72]
     670:	ldr	w1, [x0, #16]
     674:	ldr	w0, [sp, #60]
     678:	add	w1, w1, w0
     67c:	ldr	x0, [sp, #40]
     680:	ldr	w0, [x0, #100]
     684:	lsl	w1, w1, w0
     688:	ldr	w0, [sp, #64]
     68c:	lsr	w2, w0, #31
     690:	add	w0, w2, w0
     694:	asr	w0, w0, #1
     698:	add	w0, w1, w0
     69c:	mov	w1, w0
     6a0:	ldr	w0, [sp, #64]
     6a4:	cmp	w0, #0x0
     6a8:	and	w0, w0, #0x1
     6ac:	cneg	w0, w0, lt  // lt = tstop
     6b0:	sxtw	x0, w0
     6b4:	lsl	x0, x0, #8
     6b8:	ldr	x4, [sp, #24]
     6bc:	mov	x3, #0x100                 	// #256
     6c0:	mov	x2, x0
     6c4:	mov	x0, x5
     6c8:	bl	0 <grub_disk_read>
     6cc:	adrp	x0, 0 <grub_fs_register>
     6d0:	add	x0, x0, #0x0
     6d4:	ldr	x0, [x0]
     6d8:	ldr	w0, [x0]
     6dc:	ldp	x29, x30, [sp], #80
     6e0:	ret
     6e4:	nop
	...

00000000000006f0 <grub_ufs_lookup_symlink>:
     6f0:	stp	x29, x30, [sp, #-48]!
     6f4:	mov	x29, sp
     6f8:	str	x0, [sp, #24]
     6fc:	str	w1, [sp, #20]
     700:	ldr	x0, [sp, #24]
     704:	ldr	x0, [x0, #1400]
     708:	str	x0, [sp, #40]
     70c:	ldr	x0, [sp, #24]
     710:	ldr	w0, [x0, #1644]
     714:	add	w1, w0, #0x1
     718:	ldr	x0, [sp, #24]
     71c:	str	w1, [x0, #1644]
     720:	ldr	x0, [sp, #24]
     724:	ldr	w0, [x0, #1644]
     728:	cmp	w0, #0x8
     72c:	b.le	748 <grub_ufs_lookup_symlink+0x58>
     730:	adrp	x0, 0 <grub_fs_register>
     734:	add	x0, x0, #0x0
     738:	ldr	x1, [x0]
     73c:	mov	w0, #0x19                  	// #25
     740:	bl	0 <grub_error>
     744:	b	870 <grub_ufs_lookup_symlink+0x180>
     748:	ldr	x0, [sp, #40]
     74c:	add	x0, x0, #0x1
     750:	bl	0 <grub_malloc>
     754:	str	x0, [sp, #32]
     758:	ldr	x0, [sp, #32]
     75c:	cmp	x0, #0x0
     760:	b.ne	778 <grub_ufs_lookup_symlink+0x88>  // b.any
     764:	adrp	x0, 0 <grub_fs_register>
     768:	add	x0, x0, #0x0
     76c:	ldr	x0, [x0]
     770:	ldr	w0, [x0]
     774:	b	870 <grub_ufs_lookup_symlink+0x180>
     778:	ldr	x0, [sp, #24]
     77c:	ldr	x0, [x0, #1408]
     780:	cmp	x0, #0x0
     784:	b.ne	7b0 <grub_ufs_lookup_symlink+0xc0>  // b.any
     788:	ldr	x0, [sp, #24]
     78c:	ldr	x0, [x0, #1400]
     790:	cmp	x0, #0x78
     794:	b.hi	7b0 <grub_ufs_lookup_symlink+0xc0>  // b.pmore
     798:	ldr	x0, [sp, #24]
     79c:	add	x0, x0, #0x5d8
     7a0:	mov	x1, x0
     7a4:	ldr	x0, [sp, #32]
     7a8:	bl	0 <grub_strcpy>
     7ac:	b	7f0 <grub_ufs_lookup_symlink+0x100>
     7b0:	ldr	x5, [sp, #32]
     7b4:	ldr	x4, [sp, #40]
     7b8:	mov	x3, #0x0                   	// #0
     7bc:	mov	x2, #0x0                   	// #0
     7c0:	mov	x1, #0x0                   	// #0
     7c4:	ldr	x0, [sp, #24]
     7c8:	bl	368 <grub_ufs_read_file>
     7cc:	cmp	x0, #0x0
     7d0:	b.ge	7f0 <grub_ufs_lookup_symlink+0x100>  // b.tcont
     7d4:	ldr	x0, [sp, #32]
     7d8:	bl	0 <grub_free>
     7dc:	adrp	x0, 0 <grub_fs_register>
     7e0:	add	x0, x0, #0x0
     7e4:	ldr	x0, [x0]
     7e8:	ldr	w0, [x0]
     7ec:	b	870 <grub_ufs_lookup_symlink+0x180>
     7f0:	ldr	x1, [sp, #32]
     7f4:	ldr	x0, [sp, #40]
     7f8:	add	x0, x1, x0
     7fc:	strb	wzr, [x0]
     800:	ldr	x0, [sp, #32]
     804:	ldrb	w0, [x0]
     808:	cmp	w0, #0x2f
     80c:	b.ne	818 <grub_ufs_lookup_symlink+0x128>  // b.any
     810:	mov	w0, #0x2                   	// #2
     814:	str	w0, [sp, #20]
     818:	mov	x2, #0x0                   	// #0
     81c:	ldr	w1, [sp, #20]
     820:	ldr	x0, [sp, #24]
     824:	bl	5e0 <grub_ufs_read_inode>
     828:	cmp	w0, #0x0
     82c:	b.eq	84c <grub_ufs_lookup_symlink+0x15c>  // b.none
     830:	ldr	x0, [sp, #32]
     834:	bl	0 <grub_free>
     838:	adrp	x0, 0 <grub_fs_register>
     83c:	add	x0, x0, #0x0
     840:	ldr	x0, [x0]
     844:	ldr	w0, [x0]
     848:	b	870 <grub_ufs_lookup_symlink+0x180>
     84c:	ldr	x1, [sp, #32]
     850:	ldr	x0, [sp, #24]
     854:	bl	888 <grub_ufs_find_file>
     858:	ldr	x0, [sp, #32]
     85c:	bl	0 <grub_free>
     860:	adrp	x0, 0 <grub_fs_register>
     864:	add	x0, x0, #0x0
     868:	ldr	x0, [x0]
     86c:	ldr	w0, [x0]
     870:	ldp	x29, x30, [sp], #48
     874:	ret
	...

0000000000000888 <grub_ufs_find_file>:
     888:	stp	x29, x30, [sp, #-80]!
     88c:	mov	x29, sp
     890:	str	x0, [sp, #24]
     894:	str	x1, [sp, #16]
     898:	ldr	x0, [sp, #16]
     89c:	str	x0, [sp, #64]
     8a0:	str	wzr, [sp, #60]
     8a4:	ldr	x0, [sp, #16]
     8a8:	bl	0 <grub_strlen>
     8ac:	add	x0, x0, #0x2
     8b0:	bl	0 <grub_malloc>
     8b4:	str	x0, [sp, #48]
     8b8:	ldr	x0, [sp, #48]
     8bc:	cmp	x0, #0x0
     8c0:	b.ne	8d8 <grub_ufs_find_file+0x50>  // b.any
     8c4:	adrp	x0, 0 <grub_fs_register>
     8c8:	add	x0, x0, #0x0
     8cc:	ldr	x0, [x0]
     8d0:	ldr	w0, [x0]
     8d4:	b	b64 <grub_ufs_find_file+0x2dc>
     8d8:	ldr	x0, [sp, #64]
     8dc:	str	x0, [sp, #72]
     8e0:	b	8f0 <grub_ufs_find_file+0x68>
     8e4:	ldr	x0, [sp, #72]
     8e8:	add	x0, x0, #0x1
     8ec:	str	x0, [sp, #72]
     8f0:	ldr	x0, [sp, #72]
     8f4:	ldrb	w0, [x0]
     8f8:	cmp	w0, #0x2f
     8fc:	b.eq	8e4 <grub_ufs_find_file+0x5c>  // b.none
     900:	ldr	x0, [sp, #72]
     904:	ldrb	w0, [x0]
     908:	cmp	w0, #0x0
     90c:	b.ne	920 <grub_ufs_find_file+0x98>  // b.any
     910:	ldr	x0, [sp, #48]
     914:	bl	0 <grub_free>
     918:	mov	w0, #0x0                   	// #0
     91c:	b	b64 <grub_ufs_find_file+0x2dc>
     920:	ldr	x0, [sp, #24]
     924:	ldrh	w0, [x0, #1384]
     928:	and	w0, w0, #0xe000
     92c:	cmp	w0, #0x4, lsl #12
     930:	b.eq	94c <grub_ufs_find_file+0xc4>  // b.none
     934:	adrp	x0, 0 <grub_fs_register>
     938:	add	x0, x0, #0x0
     93c:	ldr	x1, [x0]
     940:	mov	w0, #0x4                   	// #4
     944:	bl	0 <grub_error>
     948:	b	b4c <grub_ufs_find_file+0x2c4>
     94c:	ldr	x0, [sp, #72]
     950:	str	x0, [sp, #64]
     954:	b	964 <grub_ufs_find_file+0xdc>
     958:	ldr	x0, [sp, #64]
     95c:	add	x0, x0, #0x1
     960:	str	x0, [sp, #64]
     964:	ldr	x0, [sp, #64]
     968:	ldrb	w0, [x0]
     96c:	cmp	w0, #0x0
     970:	b.eq	984 <grub_ufs_find_file+0xfc>  // b.none
     974:	ldr	x0, [sp, #64]
     978:	ldrb	w0, [x0]
     97c:	cmp	w0, #0x2f
     980:	b.ne	958 <grub_ufs_find_file+0xd0>  // b.any
     984:	str	wzr, [sp, #60]
     988:	ldr	w1, [sp, #60]
     98c:	ldr	x0, [sp, #24]
     990:	ldr	x0, [x0, #1400]
     994:	cmp	x1, x0
     998:	b.cc	9b8 <grub_ufs_find_file+0x130>  // b.lo, b.ul, b.last
     99c:	ldr	x2, [sp, #16]
     9a0:	adrp	x0, 0 <grub_fs_register>
     9a4:	add	x0, x0, #0x0
     9a8:	ldr	x1, [x0]
     9ac:	mov	w0, #0x5                   	// #5
     9b0:	bl	0 <grub_error>
     9b4:	b	b4c <grub_ufs_find_file+0x2c4>
     9b8:	ldr	w0, [sp, #60]
     9bc:	add	x1, sp, #0x20
     9c0:	mov	x5, x1
     9c4:	mov	x4, #0x8                   	// #8
     9c8:	mov	x3, x0
     9cc:	mov	x2, #0x0                   	// #0
     9d0:	mov	x1, #0x0                   	// #0
     9d4:	ldr	x0, [sp, #24]
     9d8:	bl	368 <grub_ufs_read_file>
     9dc:	cmp	x0, #0x0
     9e0:	b.lt	b40 <grub_ufs_find_file+0x2b8>  // b.tstop
     9e4:	ldrb	w0, [sp, #39]
     9e8:	str	w0, [sp, #44]
     9ec:	ldrsw	x1, [sp, #44]
     9f0:	ldr	x2, [sp, #64]
     9f4:	ldr	x0, [sp, #72]
     9f8:	sub	x0, x2, x0
     9fc:	cmp	x1, x0
     a00:	b.lt	b1c <grub_ufs_find_file+0x294>  // b.tstop
     a04:	ldr	w0, [sp, #60]
     a08:	add	x6, x0, #0x8
     a0c:	ldr	x1, [sp, #64]
     a10:	ldr	x0, [sp, #72]
     a14:	sub	x1, x1, x0
     a18:	ldrsw	x2, [sp, #44]
     a1c:	ldr	x3, [sp, #64]
     a20:	ldr	x0, [sp, #72]
     a24:	sub	x0, x3, x0
     a28:	cmp	x2, x0
     a2c:	cset	w0, ne  // ne = any
     a30:	and	w0, w0, #0xff
     a34:	and	x0, x0, #0xff
     a38:	add	x0, x1, x0
     a3c:	ldr	x5, [sp, #48]
     a40:	mov	x4, x0
     a44:	mov	x3, x6
     a48:	mov	x2, #0x0                   	// #0
     a4c:	mov	x1, #0x0                   	// #0
     a50:	ldr	x0, [sp, #24]
     a54:	bl	368 <grub_ufs_read_file>
     a58:	cmp	x0, #0x0
     a5c:	b.lt	b48 <grub_ufs_find_file+0x2c0>  // b.tstop
     a60:	ldr	x1, [sp, #64]
     a64:	ldr	x0, [sp, #72]
     a68:	sub	x0, x1, x0
     a6c:	mov	x2, x0
     a70:	ldr	x1, [sp, #48]
     a74:	ldr	x0, [sp, #72]
     a78:	bl	0 <grub_strncmp>
     a7c:	cmp	w0, #0x0
     a80:	b.ne	b20 <grub_ufs_find_file+0x298>  // b.any
     a84:	ldrsw	x1, [sp, #44]
     a88:	ldr	x2, [sp, #64]
     a8c:	ldr	x0, [sp, #72]
     a90:	sub	x0, x2, x0
     a94:	cmp	x1, x0
     a98:	b.eq	ac0 <grub_ufs_find_file+0x238>  // b.none
     a9c:	ldr	x1, [sp, #64]
     aa0:	ldr	x0, [sp, #72]
     aa4:	sub	x0, x1, x0
     aa8:	mov	x1, x0
     aac:	ldr	x0, [sp, #48]
     ab0:	add	x0, x0, x1
     ab4:	ldrb	w0, [x0]
     ab8:	cmp	w0, #0x0
     abc:	b.ne	b20 <grub_ufs_find_file+0x298>  // b.any
     ac0:	ldr	x0, [sp, #24]
     ac4:	ldr	w0, [x0, #1640]
     ac8:	str	w0, [sp, #40]
     acc:	ldr	w0, [sp, #32]
     ad0:	mov	x2, #0x0                   	// #0
     ad4:	mov	w1, w0
     ad8:	ldr	x0, [sp, #24]
     adc:	bl	5e0 <grub_ufs_read_inode>
     ae0:	ldr	x0, [sp, #24]
     ae4:	ldrh	w0, [x0, #1384]
     ae8:	and	w0, w0, #0xe000
     aec:	cmp	w0, #0xa, lsl #12
     af0:	b.ne	b38 <grub_ufs_find_file+0x2b0>  // b.any
     af4:	ldr	w1, [sp, #40]
     af8:	ldr	x0, [sp, #24]
     afc:	bl	6f0 <grub_ufs_lookup_symlink>
     b00:	adrp	x0, 0 <grub_fs_register>
     b04:	add	x0, x0, #0x0
     b08:	ldr	x0, [x0]
     b0c:	ldr	w0, [x0]
     b10:	cmp	w0, #0x0
     b14:	b.eq	b38 <grub_ufs_find_file+0x2b0>  // b.none
     b18:	b	b4c <grub_ufs_find_file+0x2c4>
     b1c:	nop
     b20:	ldrh	w0, [sp, #36]
     b24:	mov	w1, w0
     b28:	ldr	w0, [sp, #60]
     b2c:	add	w0, w0, w1
     b30:	str	w0, [sp, #60]
     b34:	b	988 <grub_ufs_find_file+0x100>
     b38:	nop
     b3c:	b	8d8 <grub_ufs_find_file+0x50>
     b40:	nop
     b44:	b	b4c <grub_ufs_find_file+0x2c4>
     b48:	nop
     b4c:	ldr	x0, [sp, #48]
     b50:	bl	0 <grub_free>
     b54:	adrp	x0, 0 <grub_fs_register>
     b58:	add	x0, x0, #0x0
     b5c:	ldr	x0, [x0]
     b60:	ldr	w0, [x0]
     b64:	ldp	x29, x30, [sp], #80
     b68:	ret
     b6c:	nop
	...

0000000000000b88 <grub_ufs_mount>:
     b88:	stp	x29, x30, [sp, #-48]!
     b8c:	mov	x29, sp
     b90:	str	x0, [sp, #24]
     b94:	adrp	x0, 0 <grub_fs_register>
     b98:	add	x0, x0, #0x0
     b9c:	ldr	x0, [x0]
     ba0:	str	x0, [sp, #40]
     ba4:	mov	x0, #0x678                 	// #1656
     ba8:	bl	0 <grub_malloc>
     bac:	str	x0, [sp, #32]
     bb0:	ldr	x0, [sp, #32]
     bb4:	cmp	x0, #0x0
     bb8:	b.ne	cc4 <grub_ufs_mount+0x13c>  // b.any
     bbc:	mov	x0, #0x0                   	// #0
     bc0:	b	d2c <grub_ufs_mount+0x1a4>
     bc4:	ldr	x0, [sp, #40]
     bc8:	ldr	w0, [x0]
     bcc:	sxtw	x0, w0
     bd0:	ldr	x1, [sp, #32]
     bd4:	mov	x4, x1
     bd8:	mov	x3, #0x560                 	// #1376
     bdc:	mov	x2, #0x0                   	// #0
     be0:	mov	x1, x0
     be4:	ldr	x0, [sp, #24]
     be8:	bl	0 <grub_disk_read>
     bec:	adrp	x0, 0 <grub_fs_register>
     bf0:	add	x0, x0, #0x0
     bf4:	ldr	x0, [x0]
     bf8:	ldr	w0, [x0]
     bfc:	cmp	w0, #0x0
     c00:	b.ne	cd8 <grub_ufs_mount+0x150>  // b.any
     c04:	ldr	x0, [sp, #32]
     c08:	ldr	w1, [x0, #1372]
     c0c:	mov	w0, #0x119                 	// #281
     c10:	movk	w0, #0x1954, lsl #16
     c14:	cmp	w1, w0
     c18:	b.ne	cb8 <grub_ufs_mount+0x130>  // b.any
     c1c:	ldr	x0, [sp, #32]
     c20:	ldr	w0, [x0, #48]
     c24:	cmp	w0, #0x0
     c28:	b.eq	cb8 <grub_ufs_mount+0x130>  // b.none
     c2c:	ldr	x0, [sp, #32]
     c30:	ldr	w1, [x0, #48]
     c34:	ldr	x0, [sp, #32]
     c38:	ldr	w0, [x0, #48]
     c3c:	sub	w0, w0, #0x1
     c40:	and	w0, w1, w0
     c44:	cmp	w0, #0x0
     c48:	b.ne	cb8 <grub_ufs_mount+0x130>  // b.any
     c4c:	ldr	x0, [sp, #32]
     c50:	ldr	w0, [x0, #184]
     c54:	cmp	w0, #0x0
     c58:	b.eq	cb8 <grub_ufs_mount+0x130>  // b.none
     c5c:	ldr	x0, [sp, #32]
     c60:	str	wzr, [x0, #1648]
     c64:	b	c7c <grub_ufs_mount+0xf4>
     c68:	ldr	x0, [sp, #32]
     c6c:	ldr	w0, [x0, #1648]
     c70:	add	w1, w0, #0x1
     c74:	ldr	x0, [sp, #32]
     c78:	str	w1, [x0, #1648]
     c7c:	ldr	x0, [sp, #32]
     c80:	ldr	w0, [x0, #1648]
     c84:	mov	w1, #0x1                   	// #1
     c88:	lsl	w0, w1, w0
     c8c:	ldr	x1, [sp, #32]
     c90:	ldr	w1, [x1, #48]
     c94:	cmp	w0, w1
     c98:	b.cc	c68 <grub_ufs_mount+0xe0>  // b.lo, b.ul, b.last
     c9c:	ldr	x0, [sp, #32]
     ca0:	ldr	x1, [sp, #24]
     ca4:	str	x1, [x0, #1376]
     ca8:	ldr	x0, [sp, #32]
     cac:	str	wzr, [x0, #1644]
     cb0:	ldr	x0, [sp, #32]
     cb4:	b	d2c <grub_ufs_mount+0x1a4>
     cb8:	ldr	x0, [sp, #40]
     cbc:	add	x0, x0, #0x4
     cc0:	str	x0, [sp, #40]
     cc4:	ldr	x0, [sp, #40]
     cc8:	ldr	w0, [x0]
     ccc:	cmn	w0, #0x1
     cd0:	b.ne	bc4 <grub_ufs_mount+0x3c>  // b.any
     cd4:	b	cdc <grub_ufs_mount+0x154>
     cd8:	nop
     cdc:	adrp	x0, 0 <grub_fs_register>
     ce0:	add	x0, x0, #0x0
     ce4:	ldr	x0, [x0]
     ce8:	ldr	w0, [x0]
     cec:	cmp	w0, #0x0
     cf0:	b.eq	d0c <grub_ufs_mount+0x184>  // b.none
     cf4:	adrp	x0, 0 <grub_fs_register>
     cf8:	add	x0, x0, #0x0
     cfc:	ldr	x0, [x0]
     d00:	ldr	w0, [x0]
     d04:	cmp	w0, #0xb
     d08:	b.ne	d20 <grub_ufs_mount+0x198>  // b.any
     d0c:	adrp	x0, 0 <grub_fs_register>
     d10:	add	x0, x0, #0x0
     d14:	ldr	x1, [x0]
     d18:	mov	w0, #0x9                   	// #9
     d1c:	bl	0 <grub_error>
     d20:	ldr	x0, [sp, #32]
     d24:	bl	0 <grub_free>
     d28:	mov	x0, #0x0                   	// #0
     d2c:	ldp	x29, x30, [sp], #48
     d30:	ret
     d34:	nop
	...

0000000000000d50 <grub_ufs_dir>:
     d50:	stp	x29, x30, [sp, #-368]!
     d54:	mov	x29, sp
     d58:	str	x0, [sp, #40]
     d5c:	str	x1, [sp, #32]
     d60:	str	x2, [sp, #24]
     d64:	str	x3, [sp, #16]
     d68:	str	wzr, [sp, #364]
     d6c:	ldr	x0, [sp, #40]
     d70:	ldr	x0, [x0]
     d74:	bl	b88 <grub_ufs_mount>
     d78:	str	x0, [sp, #352]
     d7c:	ldr	x0, [sp, #352]
     d80:	cmp	x0, #0x0
     d84:	b.ne	d9c <grub_ufs_dir+0x4c>  // b.any
     d88:	adrp	x0, 0 <grub_fs_register>
     d8c:	add	x0, x0, #0x0
     d90:	ldr	x0, [x0]
     d94:	ldr	w0, [x0]
     d98:	b	100c <grub_ufs_dir+0x2bc>
     d9c:	mov	x2, #0x0                   	// #0
     da0:	mov	w1, #0x2                   	// #2
     da4:	ldr	x0, [sp, #352]
     da8:	bl	5e0 <grub_ufs_read_inode>
     dac:	adrp	x0, 0 <grub_fs_register>
     db0:	add	x0, x0, #0x0
     db4:	ldr	x0, [x0]
     db8:	ldr	w0, [x0]
     dbc:	cmp	w0, #0x0
     dc0:	b.eq	dd8 <grub_ufs_dir+0x88>  // b.none
     dc4:	adrp	x0, 0 <grub_fs_register>
     dc8:	add	x0, x0, #0x0
     dcc:	ldr	x0, [x0]
     dd0:	ldr	w0, [x0]
     dd4:	b	100c <grub_ufs_dir+0x2bc>
     dd8:	ldr	x0, [sp, #32]
     ddc:	cmp	x0, #0x0
     de0:	b.eq	df4 <grub_ufs_dir+0xa4>  // b.none
     de4:	ldr	x0, [sp, #32]
     de8:	ldrb	w0, [x0]
     dec:	cmp	w0, #0x2f
     df0:	b.eq	e20 <grub_ufs_dir+0xd0>  // b.none
     df4:	ldr	x2, [sp, #32]
     df8:	adrp	x0, 0 <grub_fs_register>
     dfc:	add	x0, x0, #0x0
     e00:	ldr	x1, [x0]
     e04:	mov	w0, #0x7                   	// #7
     e08:	bl	0 <grub_error>
     e0c:	adrp	x0, 0 <grub_fs_register>
     e10:	add	x0, x0, #0x0
     e14:	ldr	x0, [x0]
     e18:	ldr	w0, [x0]
     e1c:	b	100c <grub_ufs_dir+0x2bc>
     e20:	ldr	x1, [sp, #32]
     e24:	ldr	x0, [sp, #352]
     e28:	bl	888 <grub_ufs_find_file>
     e2c:	adrp	x0, 0 <grub_fs_register>
     e30:	add	x0, x0, #0x0
     e34:	ldr	x0, [x0]
     e38:	ldr	w0, [x0]
     e3c:	cmp	w0, #0x0
     e40:	b.ne	fd8 <grub_ufs_dir+0x288>  // b.any
     e44:	ldr	x0, [sp, #352]
     e48:	ldrh	w0, [x0, #1384]
     e4c:	and	w0, w0, #0xe000
     e50:	cmp	w0, #0x4, lsl #12
     e54:	b.eq	fc0 <grub_ufs_dir+0x270>  // b.none
     e58:	adrp	x0, 0 <grub_fs_register>
     e5c:	add	x0, x0, #0x0
     e60:	ldr	x1, [x0]
     e64:	mov	w0, #0x4                   	// #4
     e68:	bl	0 <grub_error>
     e6c:	b	ff4 <grub_ufs_dir+0x2a4>
     e70:	ldr	w0, [sp, #364]
     e74:	add	x1, sp, #0x148
     e78:	mov	x5, x1
     e7c:	mov	x4, #0x8                   	// #8
     e80:	mov	x3, x0
     e84:	mov	x2, #0x0                   	// #0
     e88:	mov	x1, #0x0                   	// #0
     e8c:	ldr	x0, [sp, #352]
     e90:	bl	368 <grub_ufs_read_file>
     e94:	cmp	x0, #0x0
     e98:	b.lt	fe0 <grub_ufs_dir+0x290>  // b.tstop
     e9c:	ldrh	w0, [sp, #332]
     ea0:	cmp	w0, #0x0
     ea4:	b.eq	fe8 <grub_ufs_dir+0x298>  // b.none
     ea8:	ldrb	w0, [sp, #335]
     eac:	str	w0, [sp, #348]
     eb0:	ldr	w0, [sp, #348]
     eb4:	add	w0, w0, #0x1
     eb8:	sxtw	x0, w0
     ebc:	bl	0 <grub_malloc>
     ec0:	str	x0, [sp, #336]
     ec4:	ldr	x0, [sp, #336]
     ec8:	cmp	x0, #0x0
     ecc:	b.eq	ff0 <grub_ufs_dir+0x2a0>  // b.none
     ed0:	add	x0, sp, #0x138
     ed4:	mov	x2, #0x10                  	// #16
     ed8:	mov	w1, #0x0                   	// #0
     edc:	bl	0 <grub_memset>
     ee0:	ldr	w0, [sp, #364]
     ee4:	add	x0, x0, #0x8
     ee8:	ldrsw	x1, [sp, #348]
     eec:	ldr	x5, [sp, #336]
     ef0:	mov	x4, x1
     ef4:	mov	x3, x0
     ef8:	mov	x2, #0x0                   	// #0
     efc:	mov	x1, #0x0                   	// #0
     f00:	ldr	x0, [sp, #352]
     f04:	bl	368 <grub_ufs_read_file>
     f08:	cmp	x0, #0x0
     f0c:	b.ge	f1c <grub_ufs_dir+0x1cc>  // b.tcont
     f10:	ldr	x0, [sp, #336]
     f14:	bl	0 <grub_free>
     f18:	b	ff4 <grub_ufs_dir+0x2a4>
     f1c:	ldrsw	x0, [sp, #348]
     f20:	ldr	x1, [sp, #336]
     f24:	add	x0, x1, x0
     f28:	strb	wzr, [x0]
     f2c:	ldr	w0, [sp, #328]
     f30:	mov	w1, w0
     f34:	add	x0, sp, #0x38
     f38:	mov	x2, x0
     f3c:	ldr	x0, [sp, #352]
     f40:	bl	5e0 <grub_ufs_read_inode>
     f44:	ldrh	w0, [sp, #56]
     f48:	and	w0, w0, #0xe000
     f4c:	cmp	w0, #0x4, lsl #12
     f50:	cset	w0, eq  // eq = none
     f54:	and	w1, w0, #0xff
     f58:	ldrb	w0, [sp, #312]
     f5c:	bfxil	w0, w1, #0, #1
     f60:	strb	w0, [sp, #312]
     f64:	ldr	x0, [sp, #96]
     f68:	str	w0, [sp, #316]
     f6c:	ldrb	w0, [sp, #312]
     f70:	orr	w0, w0, #0x2
     f74:	strb	w0, [sp, #312]
     f78:	add	x0, sp, #0x138
     f7c:	ldr	x3, [sp, #24]
     f80:	ldr	x2, [sp, #16]
     f84:	mov	x1, x0
     f88:	ldr	x0, [sp, #336]
     f8c:	blr	x3
     f90:	cmp	w0, #0x0
     f94:	b.eq	fa4 <grub_ufs_dir+0x254>  // b.none
     f98:	ldr	x0, [sp, #336]
     f9c:	bl	0 <grub_free>
     fa0:	b	ff4 <grub_ufs_dir+0x2a4>
     fa4:	ldr	x0, [sp, #336]
     fa8:	bl	0 <grub_free>
     fac:	ldrh	w0, [sp, #332]
     fb0:	mov	w1, w0
     fb4:	ldr	w0, [sp, #364]
     fb8:	add	w0, w0, w1
     fbc:	str	w0, [sp, #364]
     fc0:	ldr	w1, [sp, #364]
     fc4:	ldr	x0, [sp, #352]
     fc8:	ldr	x0, [x0, #1400]
     fcc:	cmp	x1, x0
     fd0:	b.cc	e70 <grub_ufs_dir+0x120>  // b.lo, b.ul, b.last
     fd4:	b	ff4 <grub_ufs_dir+0x2a4>
     fd8:	nop
     fdc:	b	ff4 <grub_ufs_dir+0x2a4>
     fe0:	nop
     fe4:	b	ff4 <grub_ufs_dir+0x2a4>
     fe8:	nop
     fec:	b	ff4 <grub_ufs_dir+0x2a4>
     ff0:	nop
     ff4:	ldr	x0, [sp, #352]
     ff8:	bl	0 <grub_free>
     ffc:	adrp	x0, 0 <grub_fs_register>
    1000:	add	x0, x0, #0x0
    1004:	ldr	x0, [x0]
    1008:	ldr	w0, [x0]
    100c:	ldp	x29, x30, [sp], #368
    1010:	ret
    1014:	nop
	...

0000000000001030 <grub_ufs_open>:
    1030:	stp	x29, x30, [sp, #-48]!
    1034:	mov	x29, sp
    1038:	str	x0, [sp, #24]
    103c:	str	x1, [sp, #16]
    1040:	ldr	x0, [sp, #24]
    1044:	ldr	x0, [x0, #8]
    1048:	ldr	x0, [x0]
    104c:	bl	b88 <grub_ufs_mount>
    1050:	str	x0, [sp, #40]
    1054:	ldr	x0, [sp, #40]
    1058:	cmp	x0, #0x0
    105c:	b.ne	1074 <grub_ufs_open+0x44>  // b.any
    1060:	adrp	x0, 0 <grub_fs_register>
    1064:	add	x0, x0, #0x0
    1068:	ldr	x0, [x0]
    106c:	ldr	w0, [x0]
    1070:	b	1160 <grub_ufs_open+0x130>
    1074:	mov	x2, #0x0                   	// #0
    1078:	mov	w1, #0x2                   	// #2
    107c:	ldr	x0, [sp, #40]
    1080:	bl	5e0 <grub_ufs_read_inode>
    1084:	adrp	x0, 0 <grub_fs_register>
    1088:	add	x0, x0, #0x0
    108c:	ldr	x0, [x0]
    1090:	ldr	w0, [x0]
    1094:	cmp	w0, #0x0
    1098:	b.eq	10b8 <grub_ufs_open+0x88>  // b.none
    109c:	ldr	x0, [sp, #40]
    10a0:	bl	0 <grub_free>
    10a4:	adrp	x0, 0 <grub_fs_register>
    10a8:	add	x0, x0, #0x0
    10ac:	ldr	x0, [x0]
    10b0:	ldr	w0, [x0]
    10b4:	b	1160 <grub_ufs_open+0x130>
    10b8:	ldr	x0, [sp, #16]
    10bc:	cmp	x0, #0x0
    10c0:	b.eq	10d4 <grub_ufs_open+0xa4>  // b.none
    10c4:	ldr	x0, [sp, #16]
    10c8:	ldrb	w0, [x0]
    10cc:	cmp	w0, #0x2f
    10d0:	b.eq	1100 <grub_ufs_open+0xd0>  // b.none
    10d4:	ldr	x2, [sp, #16]
    10d8:	adrp	x0, 0 <grub_fs_register>
    10dc:	add	x0, x0, #0x0
    10e0:	ldr	x1, [x0]
    10e4:	mov	w0, #0x7                   	// #7
    10e8:	bl	0 <grub_error>
    10ec:	adrp	x0, 0 <grub_fs_register>
    10f0:	add	x0, x0, #0x0
    10f4:	ldr	x0, [x0]
    10f8:	ldr	w0, [x0]
    10fc:	b	1160 <grub_ufs_open+0x130>
    1100:	ldr	x1, [sp, #16]
    1104:	ldr	x0, [sp, #40]
    1108:	bl	888 <grub_ufs_find_file>
    110c:	adrp	x0, 0 <grub_fs_register>
    1110:	add	x0, x0, #0x0
    1114:	ldr	x0, [x0]
    1118:	ldr	w0, [x0]
    111c:	cmp	w0, #0x0
    1120:	b.eq	1140 <grub_ufs_open+0x110>  // b.none
    1124:	ldr	x0, [sp, #40]
    1128:	bl	0 <grub_free>
    112c:	adrp	x0, 0 <grub_fs_register>
    1130:	add	x0, x0, #0x0
    1134:	ldr	x0, [x0]
    1138:	ldr	w0, [x0]
    113c:	b	1160 <grub_ufs_open+0x130>
    1140:	ldr	x0, [sp, #24]
    1144:	ldr	x1, [sp, #40]
    1148:	str	x1, [x0, #80]
    114c:	ldr	x0, [sp, #40]
    1150:	ldr	x1, [x0, #1400]
    1154:	ldr	x0, [sp, #24]
    1158:	str	x1, [x0, #64]
    115c:	mov	w0, #0x0                   	// #0
    1160:	ldp	x29, x30, [sp], #48
    1164:	ret
	...

0000000000001178 <grub_ufs_read>:
    1178:	stp	x29, x30, [sp, #-64]!
    117c:	mov	x29, sp
    1180:	str	x0, [sp, #40]
    1184:	str	x1, [sp, #32]
    1188:	str	x2, [sp, #24]
    118c:	ldr	x0, [sp, #40]
    1190:	ldr	x0, [x0, #80]
    1194:	str	x0, [sp, #56]
    1198:	ldr	x0, [sp, #40]
    119c:	ldr	x1, [x0, #88]
    11a0:	ldr	x0, [sp, #40]
    11a4:	ldr	x2, [x0, #96]
    11a8:	ldr	x0, [sp, #40]
    11ac:	ldr	x0, [x0, #24]
    11b0:	ldr	x5, [sp, #32]
    11b4:	ldr	x4, [sp, #24]
    11b8:	mov	x3, x0
    11bc:	ldr	x0, [sp, #56]
    11c0:	bl	368 <grub_ufs_read_file>
    11c4:	ldp	x29, x30, [sp], #64
    11c8:	ret

00000000000011cc <grub_ufs_close>:
    11cc:	stp	x29, x30, [sp, #-32]!
    11d0:	mov	x29, sp
    11d4:	str	x0, [sp, #24]
    11d8:	ldr	x0, [sp, #24]
    11dc:	ldr	x0, [x0, #80]
    11e0:	bl	0 <grub_free>
    11e4:	mov	w0, #0x0                   	// #0
    11e8:	ldp	x29, x30, [sp], #32
    11ec:	ret

00000000000011f0 <grub_ufs_label>:
    11f0:	stp	x29, x30, [sp, #-48]!
    11f4:	mov	x29, sp
    11f8:	str	x0, [sp, #24]
    11fc:	str	x1, [sp, #16]
    1200:	str	xzr, [sp, #40]
    1204:	adrp	x0, 0 <grub_fs_register>
    1208:	add	x0, x0, #0x0
    120c:	ldr	x0, [x0]
    1210:	ldr	x0, [x0]
    1214:	bl	0 <grub_dl_ref>
    1218:	ldr	x0, [sp, #16]
    121c:	str	xzr, [x0]
    1220:	ldr	x0, [sp, #24]
    1224:	ldr	x0, [x0]
    1228:	bl	b88 <grub_ufs_mount>
    122c:	str	x0, [sp, #40]
    1230:	ldr	x0, [sp, #40]
    1234:	cmp	x0, #0x0
    1238:	b.eq	1254 <grub_ufs_label+0x64>  // b.none
    123c:	ldr	x0, [sp, #40]
    1240:	add	x0, x0, #0x2a8
    1244:	bl	0 <grub_strdup>
    1248:	mov	x1, x0
    124c:	ldr	x0, [sp, #16]
    1250:	str	x1, [x0]
    1254:	adrp	x0, 0 <grub_fs_register>
    1258:	add	x0, x0, #0x0
    125c:	ldr	x0, [x0]
    1260:	ldr	x0, [x0]
    1264:	bl	0 <grub_dl_unref>
    1268:	ldr	x0, [sp, #40]
    126c:	bl	0 <grub_free>
    1270:	adrp	x0, 0 <grub_fs_register>
    1274:	add	x0, x0, #0x0
    1278:	ldr	x0, [x0]
    127c:	ldr	w0, [x0]
    1280:	ldp	x29, x30, [sp], #48
    1284:	ret
	...

0000000000001298 <grub_ufs_uuid>:
    1298:	stp	x29, x30, [sp, #-48]!
    129c:	mov	x29, sp
    12a0:	str	x0, [sp, #24]
    12a4:	str	x1, [sp, #16]
    12a8:	ldr	x0, [sp, #24]
    12ac:	ldr	x0, [x0]
    12b0:	str	x0, [sp, #40]
    12b4:	adrp	x0, 0 <grub_fs_register>
    12b8:	add	x0, x0, #0x0
    12bc:	ldr	x0, [x0]
    12c0:	ldr	x0, [x0]
    12c4:	bl	0 <grub_dl_ref>
    12c8:	ldr	x0, [sp, #40]
    12cc:	bl	b88 <grub_ufs_mount>
    12d0:	str	x0, [sp, #32]
    12d4:	ldr	x0, [sp, #32]
    12d8:	cmp	x0, #0x0
    12dc:	b.eq	1334 <grub_ufs_uuid+0x9c>  // b.none
    12e0:	ldr	x0, [sp, #32]
    12e4:	ldr	w0, [x0, #144]
    12e8:	cmp	w0, #0x0
    12ec:	b.ne	1300 <grub_ufs_uuid+0x68>  // b.any
    12f0:	ldr	x0, [sp, #32]
    12f4:	ldr	w0, [x0, #148]
    12f8:	cmp	w0, #0x0
    12fc:	b.eq	1334 <grub_ufs_uuid+0x9c>  // b.none
    1300:	ldr	x0, [sp, #32]
    1304:	ldr	w1, [x0, #144]
    1308:	ldr	x0, [sp, #32]
    130c:	ldr	w0, [x0, #148]
    1310:	mov	w2, w0
    1314:	adrp	x0, 0 <grub_fs_register>
    1318:	add	x0, x0, #0x0
    131c:	ldr	x0, [x0]
    1320:	bl	0 <grub_xasprintf>
    1324:	mov	x1, x0
    1328:	ldr	x0, [sp, #16]
    132c:	str	x1, [x0]
    1330:	b	133c <grub_ufs_uuid+0xa4>
    1334:	ldr	x0, [sp, #16]
    1338:	str	xzr, [x0]
    133c:	adrp	x0, 0 <grub_fs_register>
    1340:	add	x0, x0, #0x0
    1344:	ldr	x0, [x0]
    1348:	ldr	x0, [x0]
    134c:	bl	0 <grub_dl_unref>
    1350:	ldr	x0, [sp, #32]
    1354:	bl	0 <grub_free>
    1358:	adrp	x0, 0 <grub_fs_register>
    135c:	add	x0, x0, #0x0
    1360:	ldr	x0, [x0]
    1364:	ldr	w0, [x0]
    1368:	ldp	x29, x30, [sp], #48
    136c:	ret
	...

0000000000001388 <grub_ufs_mtime>:
    1388:	stp	x29, x30, [sp, #-48]!
    138c:	mov	x29, sp
    1390:	str	x0, [sp, #24]
    1394:	str	x1, [sp, #16]
    1398:	str	xzr, [sp, #40]
    139c:	adrp	x0, 0 <grub_fs_register>
    13a0:	add	x0, x0, #0x0
    13a4:	ldr	x0, [x0]
    13a8:	ldr	x0, [x0]
    13ac:	bl	0 <grub_dl_ref>
    13b0:	ldr	x0, [sp, #24]
    13b4:	ldr	x0, [x0]
    13b8:	bl	b88 <grub_ufs_mount>
    13bc:	str	x0, [sp, #40]
    13c0:	ldr	x0, [sp, #40]
    13c4:	cmp	x0, #0x0
    13c8:	b.ne	13d8 <grub_ufs_mtime+0x50>  // b.any
    13cc:	ldr	x0, [sp, #16]
    13d0:	str	wzr, [x0]
    13d4:	b	141c <grub_ufs_mtime+0x94>
    13d8:	ldr	x0, [sp, #40]
    13dc:	ldr	w0, [x0, #32]
    13e0:	mov	w1, w0
    13e4:	ldr	x0, [sp, #16]
    13e8:	str	w1, [x0]
    13ec:	ldr	x0, [sp, #16]
    13f0:	ldr	w0, [x0]
    13f4:	sxtw	x0, w0
    13f8:	ldr	x1, [sp, #40]
    13fc:	ldr	x1, [x1, #1072]
    1400:	cmp	x0, x1
    1404:	b.ge	141c <grub_ufs_mtime+0x94>  // b.tcont
    1408:	ldr	x0, [sp, #40]
    140c:	ldr	x0, [x0, #1072]
    1410:	mov	w1, w0
    1414:	ldr	x0, [sp, #16]
    1418:	str	w1, [x0]
    141c:	adrp	x0, 0 <grub_fs_register>
    1420:	add	x0, x0, #0x0
    1424:	ldr	x0, [x0]
    1428:	ldr	x0, [x0]
    142c:	bl	0 <grub_dl_unref>
    1430:	ldr	x0, [sp, #40]
    1434:	bl	0 <grub_free>
    1438:	adrp	x0, 0 <grub_fs_register>
    143c:	add	x0, x0, #0x0
    1440:	ldr	x0, [x0]
    1444:	ldr	w0, [x0]
    1448:	ldp	x29, x30, [sp], #48
    144c:	ret
	...

0000000000001460 <grub_mod_init>:
    1460:	stp	x29, x30, [sp, #-32]!
    1464:	mov	x29, sp
    1468:	str	x0, [sp, #24]
    146c:	adrp	x0, 0 <grub_fs_register>
    1470:	add	x0, x0, #0x0
    1474:	ldr	x0, [x0]
    1478:	bl	0 <grub_fs_register>
    147c:	adrp	x0, 0 <grub_fs_register>
    1480:	add	x0, x0, #0x0
    1484:	ldr	x0, [x0]
    1488:	ldr	x1, [sp, #24]
    148c:	str	x1, [x0]
    1490:	nop
    1494:	ldp	x29, x30, [sp], #32
    1498:	ret
    149c:	nop
	...

00000000000014b0 <grub_mod_fini>:
    14b0:	stp	x29, x30, [sp, #-16]!
    14b4:	mov	x29, sp
    14b8:	adrp	x0, 0 <grub_fs_register>
    14bc:	add	x0, x0, #0x0
    14c0:	ldr	x0, [x0]
    14c4:	bl	38 <grub_fs_unregister>
    14c8:	nop
    14cc:	ldp	x29, x30, [sp], #16
    14d0:	ret
    14d4:	nop
	...
