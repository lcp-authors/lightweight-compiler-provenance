In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMDebugInfoMSF.a_gcc_-Os:

MappedBlockStream.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>:
       0:	ldr	w0, [x0, #16]
       4:	ret

0000000000000008 <_ZN4llvm3msf25WritableMappedBlockStream9getLengthEv>:
       8:	add	x0, x0, #0x8
       c:	b	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>

0000000000000010 <_ZN4llvm3msf25WritableMappedBlockStream6commitEv>:
      10:	stp	x29, x30, [sp, #-32]!
      14:	add	x0, x0, #0x88
      18:	mov	x29, sp
      1c:	str	x19, [sp, #16]
      20:	mov	x19, x8
      24:	bl	0 <_ZN4llvm23WritableBinaryStreamRef6commitEv>
      28:	mov	x0, x19
      2c:	ldr	x19, [sp, #16]
      30:	ldp	x29, x30, [sp], #32
      34:	ret

0000000000000038 <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0>:
      38:	cbz	x0, 4c <_ZNKSt14default_deleteIN4llvm13ErrorInfoBaseEEclEPS1_.isra.0+0x14>
      3c:	ldr	x1, [x0]
      40:	ldr	x1, [x1, #8]
      44:	mov	x16, x1
      48:	br	x16
      4c:	ret

0000000000000050 <_ZNSt12_Vector_baseIN4llvm15MutableArrayRefIhEESaIS2_EE13_M_deallocateEPS2_m.isra.0>:
      50:	cbz	x0, 58 <_ZNSt12_Vector_baseIN4llvm15MutableArrayRefIhEESaIS2_EE13_M_deallocateEPS2_m.isra.0+0x8>
      54:	b	0 <_ZdlPv>
      58:	ret

000000000000005c <_ZN4llvm10make_errorINS_17BinaryStreamErrorEJNS_17stream_error_codeEEEENS_5ErrorEDpOT0_.isra.0>:
      5c:	stp	x29, x30, [sp, #-64]!
      60:	mov	x29, sp
      64:	stp	x19, x20, [sp, #16]
      68:	mov	x19, x8
      6c:	str	x21, [sp, #32]
      70:	mov	w21, w0
      74:	mov	x0, #0x30                  	// #48
      78:	bl	0 <_Znwm>
      7c:	mov	x20, x0
      80:	mov	w1, w21
      84:	bl	0 <_ZN4llvm17BinaryStreamErrorC1ENS_17stream_error_codeE>
      88:	str	x20, [sp, #56]
      8c:	add	x20, sp, #0x38
      90:	mov	x0, x19
      94:	mov	x1, x20
      98:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
      9c:	mov	x0, x20
      a0:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
      a4:	mov	x0, x19
      a8:	ldp	x19, x20, [sp, #16]
      ac:	ldr	x21, [sp, #32]
      b0:	ldp	x29, x30, [sp], #64
      b4:	ret

00000000000000b8 <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE>:
      b8:	stp	x29, x30, [sp, #-144]!
      bc:	mov	x29, sp
      c0:	stp	x19, x20, [sp, #16]
      c4:	add	x19, sp, #0x80
      c8:	mov	x20, x0
      cc:	stp	x21, x22, [sp, #32]
      d0:	mov	x21, x8
      d4:	mov	x8, x19
      d8:	stp	x25, x26, [sp, #64]
      dc:	mov	x26, x2
      e0:	mov	x2, x3
      e4:	ldr	w25, [x0, #8]
      e8:	mov	w22, w1
      ec:	stp	x23, x24, [sp, #48]
      f0:	mov	w23, w3
      f4:	stp	x27, x28, [sp, #80]
      f8:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
      fc:	mov	x0, x19
     100:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     104:	tst	w0, #0xff
     108:	b.eq	140 <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE+0x88>  // b.none
     10c:	mov	x0, x21
     110:	mov	x1, x19
     114:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     118:	mov	x0, x19
     11c:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     120:	mov	x0, x21
     124:	ldp	x19, x20, [sp, #16]
     128:	ldp	x21, x22, [sp, #32]
     12c:	ldp	x23, x24, [sp, #48]
     130:	ldp	x25, x26, [sp, #64]
     134:	ldp	x27, x28, [sp, #80]
     138:	ldp	x29, x30, [sp], #144
     13c:	ret
     140:	udiv	w24, w22, w25
     144:	add	x27, x20, #0x30
     148:	add	x28, sp, #0x78
     14c:	mov	x0, x19
     150:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     154:	msub	w22, w24, w25, w22
     158:	mov	w25, #0x0                   	// #0
     15c:	cbz	w23, 1f0 <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE+0x138>
     160:	ldr	x0, [x20, #24]
     164:	mov	x8, x28
     168:	ldr	w2, [x20, #8]
     16c:	mov	x3, x19
     170:	ldr	w1, [x0, w24, uxtw #2]
     174:	mov	x0, x27
     178:	stp	xzr, xzr, [sp, #128]
     17c:	mul	w1, w1, w2
     180:	bl	0 <_ZNK4llvm15BinaryStreamRef9readBytesEjjRNS_8ArrayRefIhEE>
     184:	mov	x0, x28
     188:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     18c:	tst	w0, #0xff
     190:	b.eq	1a8 <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE+0xf0>  // b.none
     194:	mov	x0, x21
     198:	mov	x1, x28
     19c:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     1a0:	mov	x0, x28
     1a4:	b	11c <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE+0x64>
     1a8:	mov	x0, x28
     1ac:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     1b0:	ldr	w0, [x20, #8]
     1b4:	add	w24, w24, #0x1
     1b8:	ldr	x1, [sp, #128]
     1bc:	sub	w0, w0, w22
     1c0:	cmp	w0, w23
     1c4:	csel	w3, w0, w23, ls  // ls = plast
     1c8:	csel	w2, w0, w23, ls  // ls = plast
     1cc:	add	x1, x1, w22, uxtw
     1d0:	add	x0, x26, w25, uxtw
     1d4:	str	w3, [sp, #108]
     1d8:	mov	w22, #0x0                   	// #0
     1dc:	bl	0 <memcpy>
     1e0:	ldr	w3, [sp, #108]
     1e4:	add	w25, w25, w3
     1e8:	sub	w23, w23, w3
     1ec:	b	15c <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE+0xa4>
     1f0:	mov	x1, x19
     1f4:	mov	x0, #0x1                   	// #1
     1f8:	str	x0, [sp, #128]
     1fc:	mov	x0, x21
     200:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     204:	mov	x0, x19
     208:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     20c:	b	120 <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE+0x68>

0000000000000210 <_ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE14_M_move_assignEOS7_St17integral_constantIbLb1EE.isra.0>:
     210:	stp	x29, x30, [sp, #-48]!
     214:	mov	x29, sp
     218:	ldp	x4, x3, [x0]
     21c:	stp	x4, x3, [sp, #24]
     220:	ldr	x5, [x1]
     224:	str	x5, [x0]
     228:	ldr	x5, [x1, #8]
     22c:	str	x5, [x0, #8]
     230:	ldr	x2, [x0, #16]
     234:	str	x2, [sp, #40]
     238:	ldr	x5, [x1, #16]
     23c:	str	x5, [x0, #16]
     240:	stp	xzr, xzr, [x1]
     244:	add	x0, sp, #0x18
     248:	str	xzr, [x1, #16]
     24c:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     250:	ldp	x29, x30, [sp], #48
     254:	ret

0000000000000258 <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>:
     258:	stp	x29, x30, [sp, #-128]!
     25c:	mov	x29, sp
     260:	stp	x21, x22, [sp, #32]
     264:	add	x22, sp, #0x70
     268:	stp	x23, x24, [sp, #48]
     26c:	mov	x23, x8
     270:	mov	x8, x22
     274:	mov	x24, x2
     278:	mov	w2, #0x1                   	// #1
     27c:	stp	x19, x20, [sp, #16]
     280:	mov	w20, w1
     284:	stp	x25, x26, [sp, #64]
     288:	mov	x26, x0
     28c:	str	x27, [sp, #80]
     290:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     294:	mov	x0, x22
     298:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     29c:	tst	w0, #0xff
     2a0:	b.eq	2d8 <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x80>  // b.none
     2a4:	mov	x0, x23
     2a8:	mov	x1, x22
     2ac:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     2b0:	mov	x0, x22
     2b4:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     2b8:	mov	x0, x23
     2bc:	ldp	x19, x20, [sp, #16]
     2c0:	ldp	x21, x22, [sp, #32]
     2c4:	ldp	x23, x24, [sp, #48]
     2c8:	ldp	x25, x26, [sp, #64]
     2cc:	ldr	x27, [sp, #80]
     2d0:	ldp	x29, x30, [sp], #128
     2d4:	ret
     2d8:	mov	x0, x22
     2dc:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     2e0:	ldr	w25, [x26, #8]
     2e4:	ldp	x0, x1, [x26, #24]
     2e8:	udiv	w27, w20, w25
     2ec:	sub	x1, x1, x0
     2f0:	ubfiz	x3, x27, #2, #32
     2f4:	mov	w19, w27
     2f8:	asr	x1, x1, #2
     2fc:	add	x4, x0, x3
     300:	sub	w1, w1, #0x1
     304:	cmp	w1, w19
     308:	b.ls	328 <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0xd0>  // b.plast
     30c:	add	w2, w19, #0x1
     310:	ldr	w5, [x4], #4
     314:	add	w6, w19, #0x1
     318:	ldr	w2, [x0, x2, lsl #2]
     31c:	sub	w2, w2, #0x1
     320:	cmp	w2, w5
     324:	b.eq	370 <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x118>  // b.none
     328:	stp	xzr, xzr, [sp, #112]
     32c:	add	x21, sp, #0x68
     330:	mov	x8, x21
     334:	ldr	w1, [x0, x3]
     338:	mov	w2, w25
     33c:	mov	x3, x22
     340:	add	x0, x26, #0x30
     344:	mul	w1, w25, w1
     348:	bl	0 <_ZNK4llvm15BinaryStreamRef9readBytesEjjRNS_8ArrayRefIhEE>
     34c:	mov	x0, x21
     350:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     354:	tst	w0, #0xff
     358:	b.eq	378 <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x120>  // b.none
     35c:	mov	x0, x23
     360:	mov	x1, x21
     364:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     368:	mov	x0, x21
     36c:	b	2b4 <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x5c>
     370:	mov	w19, w6
     374:	b	304 <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0xac>
     378:	msub	w20, w27, w25, w20
     37c:	mov	x0, x21
     380:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     384:	sub	w19, w19, w27
     388:	mov	w1, w20
     38c:	sub	w20, w25, w20
     390:	mov	x0, x22
     394:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     398:	stp	x0, x1, [sp, #112]
     39c:	mov	x1, x21
     3a0:	madd	w19, w19, w25, w20
     3a4:	stp	x0, x19, [x24]
     3a8:	mov	x0, #0x1                   	// #1
     3ac:	str	x0, [sp, #104]
     3b0:	mov	x0, x23
     3b4:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     3b8:	mov	x0, x21
     3bc:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     3c0:	b	2b8 <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x60>

00000000000003c4 <_ZN4llvm3msf25WritableMappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>:
     3c4:	stp	x29, x30, [sp, #-32]!
     3c8:	add	x0, x0, #0x8
     3cc:	mov	x29, sp
     3d0:	str	x19, [sp, #16]
     3d4:	mov	x19, x8
     3d8:	bl	258 <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>
     3dc:	mov	x0, x19
     3e0:	ldr	x19, [sp, #16]
     3e4:	ldp	x29, x30, [sp], #32
     3e8:	ret

00000000000003ec <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev>:
     3ec:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     3f0:	add	x1, x1, #0x0
     3f4:	add	x1, x1, #0x10
     3f8:	str	x1, [x0]
     3fc:	b	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>

0000000000000400 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev>:
     400:	stp	x29, x30, [sp, #-32]!
     404:	mov	x29, sp
     408:	str	x19, [sp, #16]
     40c:	mov	x19, x0
     410:	bl	3ec <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev>
     414:	mov	x0, x19
     418:	mov	x1, #0xb0                  	// #176
     41c:	ldr	x19, [sp, #16]
     420:	ldp	x29, x30, [sp], #32
     424:	b	0 <_ZdlPvm>

0000000000000428 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED1Ev>:
     428:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     42c:	add	x1, x1, #0x0
     430:	add	x1, x1, #0x68
     434:	str	x1, [x0]
     438:	b	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>

000000000000043c <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev>:
     43c:	stp	x29, x30, [sp, #-32]!
     440:	mov	x29, sp
     444:	str	x19, [sp, #16]
     448:	mov	x19, x0
     44c:	bl	428 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED1Ev>
     450:	mov	x0, x19
     454:	mov	x1, #0x80                  	// #128
     458:	ldr	x19, [sp, #16]
     45c:	ldp	x29, x30, [sp], #32
     460:	b	0 <_ZdlPvm>

0000000000000464 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>:
     464:	stp	x29, x30, [sp, #-64]!
     468:	mov	x29, sp
     46c:	stp	x19, x20, [sp, #16]
     470:	mov	x19, x0
     474:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     478:	stp	x21, x22, [sp, #32]
     47c:	mov	x21, x2
     480:	mov	x22, x4
     484:	ldr	x0, [x0]
     488:	stp	x23, x24, [sp, #48]
     48c:	add	x24, x19, #0x18
     490:	add	x0, x0, #0x10
     494:	str	x0, [x19]
     498:	mov	x0, x2
     49c:	str	w1, [x19, #8]
     4a0:	mov	x23, x3
     4a4:	ldr	w1, [x0], #8
     4a8:	ldr	x20, [x0, #8]
     4ac:	ldr	x0, [x2, #8]
     4b0:	str	w1, [x19, #16]
     4b4:	str	xzr, [x19, #24]
     4b8:	sub	x20, x20, x0
     4bc:	stp	xzr, xzr, [x24, #8]
     4c0:	cmp	xzr, x20, asr #2
     4c4:	b.eq	548 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xe4>  // b.none
     4c8:	asr	x1, x20, #2
     4cc:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
     4d0:	cmp	x1, x0
     4d4:	b.ls	4dc <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x78>  // b.plast
     4d8:	bl	0 <_ZSt17__throw_bad_allocv>
     4dc:	mov	x0, x20
     4e0:	bl	0 <_Znwm>
     4e4:	mov	x5, x0
     4e8:	str	x5, [x19, #24]
     4ec:	add	x20, x5, x20
     4f0:	stp	x5, x20, [x24, #8]
     4f4:	ldp	x1, x0, [x21, #8]
     4f8:	sub	x20, x0, x1
     4fc:	cmp	x1, x0
     500:	b.eq	514 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xb0>  // b.none
     504:	mov	x0, x5
     508:	mov	x2, x20
     50c:	bl	0 <memmove>
     510:	mov	x5, x0
     514:	add	x5, x5, x20
     518:	str	x5, [x24, #8]
     51c:	mov	x1, x23
     520:	add	x0, x19, #0x30
     524:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     528:	ldp	x23, x24, [sp, #48]
     52c:	stp	x22, xzr, [x19, #88]
     530:	add	x0, x19, #0x60
     534:	ldp	x19, x20, [sp, #16]
     538:	mov	w1, #0x0                   	// #0
     53c:	ldp	x21, x22, [sp, #32]
     540:	ldp	x29, x30, [sp], #64
     544:	b	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     548:	mov	x5, #0x0                   	// #0
     54c:	b	4e8 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x84>

0000000000000550 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>:
     550:	stp	x29, x30, [sp, #-128]!
     554:	adrp	x5, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     558:	mov	x29, sp
     55c:	ldr	x5, [x5]
     560:	stp	x21, x22, [sp, #32]
     564:	mov	x22, x0
     568:	add	x5, x5, #0x10
     56c:	stp	x19, x20, [sp, #16]
     570:	add	x21, sp, #0x58
     574:	stp	x23, x24, [sp, #48]
     578:	mov	x8, x21
     57c:	mov	x20, x3
     580:	str	x25, [sp, #64]
     584:	mov	x19, x0
     588:	str	x5, [x22], #8
     58c:	mov	w23, w1
     590:	mov	x24, x2
     594:	mov	x0, x3
     598:	mov	x25, x4
     59c:	bl	0 <_ZNK4llvm23WritableBinaryStreamRefcvNS_15BinaryStreamRefEEv>
     5a0:	mov	x4, x25
     5a4:	mov	x3, x21
     5a8:	mov	x2, x24
     5ac:	mov	w1, w23
     5b0:	mov	x0, x22
     5b4:	bl	464 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     5b8:	add	x0, x21, #0x8
     5bc:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     5c0:	mov	x1, x20
     5c4:	add	x0, x19, #0x88
     5c8:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     5cc:	ldp	x19, x20, [sp, #16]
     5d0:	ldp	x21, x22, [sp, #32]
     5d4:	ldp	x23, x24, [sp, #48]
     5d8:	ldr	x25, [sp, #64]
     5dc:	ldp	x29, x30, [sp], #128
     5e0:	ret

00000000000005e4 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>:
     5e4:	stp	x29, x30, [sp, #-128]!
     5e8:	mov	x29, sp
     5ec:	stp	x19, x20, [sp, #16]
     5f0:	add	x20, sp, #0x58
     5f4:	stp	x21, x22, [sp, #32]
     5f8:	mov	x21, x8
     5fc:	mov	w22, w0
     600:	mov	x0, #0xb0                  	// #176
     604:	stp	x23, x24, [sp, #48]
     608:	mov	x24, x3
     60c:	mov	x23, x1
     610:	str	x25, [sp, #64]
     614:	mov	x25, x2
     618:	bl	0 <_Znwm>
     61c:	mov	x1, x25
     620:	mov	x19, x0
     624:	mov	x0, x20
     628:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     62c:	mov	x4, x24
     630:	mov	x3, x20
     634:	mov	x2, x23
     638:	mov	w1, w22
     63c:	mov	x0, x19
     640:	bl	550 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     644:	add	x0, x20, #0x8
     648:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     64c:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     650:	add	x0, x0, #0x0
     654:	add	x0, x0, #0x10
     658:	str	x0, [x19]
     65c:	ldp	x23, x24, [sp, #48]
     660:	mov	x0, x21
     664:	ldr	x25, [sp, #64]
     668:	str	x19, [x21]
     66c:	ldp	x19, x20, [sp, #16]
     670:	ldp	x21, x22, [sp, #32]
     674:	ldp	x29, x30, [sp], #128
     678:	ret

000000000000067c <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb>:
     67c:	stp	x29, x30, [sp, #-272]!
     680:	mov	x29, sp
     684:	stp	x19, x20, [sp, #16]
     688:	and	w19, w3, #0xff
     68c:	add	x20, sp, #0xd8
     690:	stp	x21, x22, [sp, #32]
     694:	mov	x22, x0
     698:	stp	x27, x28, [sp, #80]
     69c:	add	x27, sp, #0x70
     6a0:	add	x28, sp, #0x90
     6a4:	stp	x23, x24, [sp, #48]
     6a8:	mov	x24, x2
     6ac:	mov	x23, x8
     6b0:	mov	w2, w19
     6b4:	mov	x8, x27
     6b8:	stp	x25, x26, [sp, #64]
     6bc:	mov	x25, x1
     6c0:	mov	w1, #0x0                   	// #0
     6c4:	bl	0 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb>
     6c8:	mov	w2, w19
     6cc:	mov	x8, x28
     6d0:	mov	x0, x22
     6d4:	mov	w1, #0x1                   	// #1
     6d8:	bl	0 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb>
     6dc:	ldr	x0, [x22]
     6e0:	mov	x1, x25
     6e4:	ldr	w19, [x0, #32]
     6e8:	mov	x0, x20
     6ec:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     6f0:	add	x8, sp, #0x68
     6f4:	mov	x3, x24
     6f8:	mov	x2, x20
     6fc:	mov	x1, x28
     700:	mov	w0, w19
     704:	bl	5e4 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     708:	add	x0, x20, #0x8
     70c:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     710:	ldr	x0, [sp, #104]
     714:	cbnz	x0, 760 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0xe4>
     718:	str	xzr, [x23]
     71c:	ldr	x0, [sp, #104]
     720:	cbz	x0, 730 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0xb4>
     724:	ldr	x1, [x0]
     728:	ldr	x1, [x1, #8]
     72c:	blr	x1
     730:	add	x0, x28, #0x8
     734:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     738:	add	x0, x27, #0x8
     73c:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     740:	mov	x0, x23
     744:	ldp	x19, x20, [sp, #16]
     748:	ldp	x21, x22, [sp, #32]
     74c:	ldp	x23, x24, [sp, #48]
     750:	ldp	x25, x26, [sp, #64]
     754:	ldp	x27, x28, [sp, #80]
     758:	ldp	x29, x30, [sp], #272
     75c:	ret
     760:	ldr	x0, [x22]
     764:	ldr	w26, [x0, #32]
     768:	cbz	x26, 7d8 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x15c>
     76c:	mov	x0, x26
     770:	bl	0 <_Znwm>
     774:	mov	x2, x26
     778:	mov	x19, x0
     77c:	mov	w1, #0xff                  	// #255
     780:	bl	0 <memset>
     784:	ldr	x1, [sp, #104]
     788:	mov	x0, x20
     78c:	add	x21, sp, #0xb0
     790:	bl	0 <_ZN4llvm18BinaryStreamWriterC1ERNS_20WritableBinaryStreamE>
     794:	ldrb	w0, [sp, #256]
     798:	cbz	w0, 7e0 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x164>
     79c:	ldr	w0, [sp, #252]
     7a0:	ldr	w1, [sp, #264]
     7a4:	cmp	w1, w0
     7a8:	b.eq	808 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x18c>  // b.none
     7ac:	mov	x8, x21
     7b0:	mov	x2, x26
     7b4:	mov	x1, x19
     7b8:	mov	x0, x20
     7bc:	bl	0 <_ZN4llvm18BinaryStreamWriter10writeBytesENS_8ArrayRefIhEE>
     7c0:	mov	x1, #0x0                   	// #0
     7c4:	mov	x0, x21
     7c8:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     7cc:	mov	x0, x21
     7d0:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     7d4:	b	794 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x118>
     7d8:	mov	x19, #0x0                   	// #0
     7dc:	b	784 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x108>
     7e0:	ldr	x0, [sp, #240]
     7e4:	cbz	x0, 800 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x184>
     7e8:	ldr	x1, [x0]
     7ec:	ldr	x1, [x1, #40]
     7f0:	blr	x1
     7f4:	ldr	w1, [sp, #248]
     7f8:	sub	w0, w0, w1
     7fc:	b	7a0 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x124>
     800:	mov	w0, #0x0                   	// #0
     804:	b	7a0 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x124>
     808:	ldr	x0, [x22]
     80c:	mov	x1, x25
     810:	ldr	w22, [x0, #32]
     814:	mov	x0, x21
     818:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     81c:	mov	x8, x23
     820:	mov	x3, x24
     824:	mov	x2, x21
     828:	mov	x1, x27
     82c:	mov	w0, w22
     830:	bl	5e4 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     834:	add	x0, x21, #0x8
     838:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     83c:	mov	x0, x20
     840:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     844:	cbz	x19, 71c <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0xa0>
     848:	mov	x0, x19
     84c:	bl	0 <_ZdlPv>
     850:	b	71c <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0xa0>

0000000000000854 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>:
     854:	stp	x29, x30, [sp, #-160]!
     858:	mov	x29, sp
     85c:	stp	x19, x20, [sp, #16]
     860:	mov	x20, x0
     864:	ldr	x0, [x0, #64]
     868:	stp	x21, x22, [sp, #32]
     86c:	ldr	x4, [x20, #72]
     870:	stp	x23, x24, [sp, #48]
     874:	sub	x4, x4, x0
     878:	stp	x25, x26, [sp, #64]
     87c:	asr	x4, x4, #4
     880:	cmp	x4, w2, uxtw
     884:	b.hi	8a8 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x54>  // b.pmore
     888:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     88c:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     890:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     894:	add	x3, x3, #0x0
     898:	add	x1, x1, #0x0
     89c:	add	x0, x0, #0x0
     8a0:	mov	w2, #0x14a                 	// #330
     8a4:	bl	0 <__assert_fail>
     8a8:	mov	w26, w2
     8ac:	add	x19, sp, #0x78
     8b0:	mov	x22, x3
     8b4:	mov	x21, x8
     8b8:	mov	x23, x1
     8bc:	mov	x8, x19
     8c0:	add	x0, x0, x26, lsl #4
     8c4:	stp	xzr, xzr, [sp, #96]
     8c8:	add	x24, sp, #0x60
     8cc:	str	xzr, [sp, #112]
     8d0:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     8d4:	mov	x1, x19
     8d8:	mov	x0, x24
     8dc:	bl	210 <_ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE14_M_move_assignEOS7_St17integral_constantIbLb1EE.isra.0>
     8e0:	add	x25, sp, #0x58
     8e4:	mov	x0, x19
     8e8:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     8ec:	mov	x1, x26
     8f0:	add	x0, x20, #0x30
     8f4:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     8f8:	ldr	w0, [x0]
     8fc:	str	w0, [sp, #88]
     900:	mov	x1, x23
     904:	ldr	x0, [x20]
     908:	ldr	w20, [x0, #32]
     90c:	mov	x0, x19
     910:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     914:	mov	x8, x21
     918:	mov	x3, x22
     91c:	mov	x2, x19
     920:	mov	x1, x25
     924:	mov	w0, w20
     928:	bl	5e4 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     92c:	add	x0, x19, #0x8
     930:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     934:	mov	x0, x24
     938:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     93c:	mov	x0, x21
     940:	ldp	x19, x20, [sp, #16]
     944:	ldp	x21, x22, [sp, #32]
     948:	ldp	x23, x24, [sp, #48]
     94c:	ldp	x25, x26, [sp, #64]
     950:	ldp	x29, x30, [sp], #160
     954:	ret

0000000000000958 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>:
     958:	stp	x29, x30, [sp, #-160]!
     95c:	mov	x29, sp
     960:	stp	x19, x20, [sp, #16]
     964:	add	x19, sp, #0x78
     968:	mov	x20, x8
     96c:	mov	x8, x19
     970:	stp	x21, x22, [sp, #32]
     974:	mov	x22, x2
     978:	mov	x21, x0
     97c:	add	x0, x0, #0x20
     980:	stp	x23, x24, [sp, #48]
     984:	mov	x23, x1
     988:	add	x24, sp, #0x60
     98c:	str	x25, [sp, #64]
     990:	add	x25, sp, #0x58
     994:	stp	xzr, xzr, [sp, #96]
     998:	str	xzr, [sp, #112]
     99c:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     9a0:	mov	x1, x19
     9a4:	mov	x0, x24
     9a8:	bl	210 <_ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE14_M_move_assignEOS7_St17integral_constantIbLb1EE.isra.0>
     9ac:	mov	x0, x19
     9b0:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     9b4:	ldr	x0, [x21]
     9b8:	ldr	w1, [x0, #44]
     9bc:	str	w1, [sp, #88]
     9c0:	mov	x1, x23
     9c4:	ldr	w21, [x0, #32]
     9c8:	mov	x0, x19
     9cc:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     9d0:	mov	x8, x20
     9d4:	mov	x3, x22
     9d8:	mov	x2, x19
     9dc:	mov	x1, x25
     9e0:	mov	w0, w21
     9e4:	bl	5e4 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     9e8:	add	x0, x19, #0x8
     9ec:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     9f0:	mov	x0, x24
     9f4:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     9f8:	mov	x0, x20
     9fc:	ldp	x19, x20, [sp, #16]
     a00:	ldp	x21, x22, [sp, #32]
     a04:	ldp	x23, x24, [sp, #48]
     a08:	ldr	x25, [sp, #64]
     a0c:	ldp	x29, x30, [sp], #160
     a10:	ret

0000000000000a14 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>:
     a14:	stp	x29, x30, [sp, #-128]!
     a18:	mov	x29, sp
     a1c:	stp	x19, x20, [sp, #16]
     a20:	add	x20, sp, #0x58
     a24:	stp	x21, x22, [sp, #32]
     a28:	mov	x21, x8
     a2c:	mov	w22, w0
     a30:	mov	x0, #0x80                  	// #128
     a34:	stp	x23, x24, [sp, #48]
     a38:	mov	x24, x3
     a3c:	mov	x23, x1
     a40:	str	x25, [sp, #64]
     a44:	mov	x25, x2
     a48:	bl	0 <_Znwm>
     a4c:	mov	x1, x25
     a50:	mov	x19, x0
     a54:	mov	x0, x20
     a58:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     a5c:	mov	x4, x24
     a60:	mov	x3, x20
     a64:	mov	x2, x23
     a68:	mov	w1, w22
     a6c:	mov	x0, x19
     a70:	bl	464 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     a74:	add	x0, x20, #0x8
     a78:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     a7c:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     a80:	add	x0, x0, #0x0
     a84:	add	x0, x0, #0x68
     a88:	str	x0, [x19]
     a8c:	ldp	x23, x24, [sp, #48]
     a90:	mov	x0, x21
     a94:	ldr	x25, [sp, #64]
     a98:	str	x19, [x21]
     a9c:	ldp	x19, x20, [sp, #16]
     aa0:	ldp	x21, x22, [sp, #32]
     aa4:	ldp	x29, x30, [sp], #128
     aa8:	ret

0000000000000aac <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>:
     aac:	stp	x29, x30, [sp, #-144]!
     ab0:	mov	x29, sp
     ab4:	stp	x19, x20, [sp, #16]
     ab8:	mov	x19, x0
     abc:	mov	x20, x8
     ac0:	stp	x21, x22, [sp, #32]
     ac4:	add	x21, sp, #0x48
     ac8:	mov	x8, x21
     acc:	mov	x22, x2
     ad0:	mov	w2, #0x0                   	// #0
     ad4:	stp	x23, x24, [sp, #48]
     ad8:	mov	x23, x1
     adc:	mov	w1, #0x0                   	// #0
     ae0:	bl	0 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb>
     ae4:	ldr	x0, [x19]
     ae8:	add	x19, sp, #0x68
     aec:	mov	x1, x23
     af0:	ldr	w24, [x0, #32]
     af4:	mov	x0, x19
     af8:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     afc:	mov	x8, x20
     b00:	mov	x3, x22
     b04:	mov	x2, x19
     b08:	mov	x1, x21
     b0c:	mov	w0, w24
     b10:	bl	a14 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     b14:	add	x0, x19, #0x8
     b18:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     b1c:	add	x0, x21, #0x8
     b20:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     b24:	mov	x0, x20
     b28:	ldp	x19, x20, [sp, #16]
     b2c:	ldp	x21, x22, [sp, #32]
     b30:	ldp	x23, x24, [sp, #48]
     b34:	ldp	x29, x30, [sp], #144
     b38:	ret

0000000000000b3c <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>:
     b3c:	stp	x29, x30, [sp, #-160]!
     b40:	mov	x29, sp
     b44:	stp	x19, x20, [sp, #16]
     b48:	add	x19, sp, #0x78
     b4c:	mov	x20, x8
     b50:	mov	x8, x19
     b54:	stp	x21, x22, [sp, #32]
     b58:	mov	x22, x2
     b5c:	mov	x21, x0
     b60:	add	x0, x0, #0x20
     b64:	stp	x23, x24, [sp, #48]
     b68:	mov	x23, x1
     b6c:	add	x24, sp, #0x60
     b70:	str	x25, [sp, #64]
     b74:	add	x25, sp, #0x58
     b78:	stp	xzr, xzr, [sp, #96]
     b7c:	str	xzr, [sp, #112]
     b80:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     b84:	mov	x1, x19
     b88:	mov	x0, x24
     b8c:	bl	210 <_ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE14_M_move_assignEOS7_St17integral_constantIbLb1EE.isra.0>
     b90:	mov	x0, x19
     b94:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     b98:	ldr	x0, [x21]
     b9c:	ldr	w1, [x0, #44]
     ba0:	str	w1, [sp, #88]
     ba4:	mov	x1, x23
     ba8:	ldr	w21, [x0, #32]
     bac:	mov	x0, x19
     bb0:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     bb4:	mov	x8, x20
     bb8:	mov	x3, x22
     bbc:	mov	x2, x19
     bc0:	mov	x1, x25
     bc4:	mov	w0, w21
     bc8:	bl	a14 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     bcc:	add	x0, x19, #0x8
     bd0:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     bd4:	mov	x0, x24
     bd8:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     bdc:	mov	x0, x20
     be0:	ldp	x19, x20, [sp, #16]
     be4:	ldp	x21, x22, [sp, #32]
     be8:	ldp	x23, x24, [sp, #48]
     bec:	ldr	x25, [sp, #64]
     bf0:	ldp	x29, x30, [sp], #160
     bf4:	ret

0000000000000bf8 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>:
     bf8:	stp	x29, x30, [sp, #-160]!
     bfc:	mov	x29, sp
     c00:	stp	x19, x20, [sp, #16]
     c04:	mov	x20, x0
     c08:	ldr	x0, [x0, #64]
     c0c:	stp	x21, x22, [sp, #32]
     c10:	ldr	x5, [x20, #72]
     c14:	stp	x23, x24, [sp, #48]
     c18:	sub	x5, x5, x0
     c1c:	stp	x25, x26, [sp, #64]
     c20:	asr	x5, x5, #4
     c24:	cmp	x5, w2, uxtw
     c28:	b.hi	c4c <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x54>  // b.pmore
     c2c:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     c30:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     c34:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     c38:	add	x3, x3, #0x0
     c3c:	add	x1, x1, #0x0
     c40:	add	x0, x0, #0x0
     c44:	mov	w2, #0x3e                  	// #62
     c48:	bl	0 <__assert_fail>
     c4c:	mov	w26, w2
     c50:	add	x19, sp, #0x78
     c54:	mov	x22, x3
     c58:	mov	x21, x8
     c5c:	mov	x23, x1
     c60:	mov	x8, x19
     c64:	add	x0, x0, x26, lsl #4
     c68:	stp	xzr, xzr, [sp, #96]
     c6c:	add	x24, sp, #0x60
     c70:	str	xzr, [sp, #112]
     c74:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     c78:	mov	x1, x19
     c7c:	mov	x0, x24
     c80:	bl	210 <_ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE14_M_move_assignEOS7_St17integral_constantIbLb1EE.isra.0>
     c84:	add	x25, sp, #0x58
     c88:	mov	x0, x19
     c8c:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     c90:	mov	x1, x26
     c94:	add	x0, x20, #0x30
     c98:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     c9c:	ldr	w0, [x0]
     ca0:	ldr	x26, [x20]
     ca4:	str	w0, [sp, #88]
     ca8:	mov	x0, #0x80                  	// #128
     cac:	bl	0 <_Znwm>
     cb0:	mov	x1, x23
     cb4:	mov	x20, x0
     cb8:	ldr	w26, [x26, #32]
     cbc:	mov	x0, x19
     cc0:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     cc4:	mov	x4, x22
     cc8:	mov	x3, x19
     ccc:	mov	x2, x25
     cd0:	mov	w1, w26
     cd4:	mov	x0, x20
     cd8:	bl	464 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     cdc:	add	x0, x19, #0x8
     ce0:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     ce4:	str	x20, [x21]
     ce8:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     cec:	add	x0, x0, #0x0
     cf0:	add	x0, x0, #0x68
     cf4:	str	x0, [x20]
     cf8:	mov	x0, x24
     cfc:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     d00:	mov	x0, x21
     d04:	ldp	x19, x20, [sp, #16]
     d08:	ldp	x21, x22, [sp, #32]
     d0c:	ldp	x23, x24, [sp, #48]
     d10:	ldp	x25, x26, [sp, #64]
     d14:	ldp	x29, x30, [sp], #160
     d18:	ret

0000000000000d1c <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv>:
     d1c:	stp	x29, x30, [sp, #-48]!
     d20:	mov	x29, sp
     d24:	stp	x19, x20, [sp, #16]
     d28:	add	x20, x0, #0x60
     d2c:	mov	x0, x20
     d30:	ldr	w19, [x20, #16]
     d34:	str	x21, [sp, #32]
     d38:	ldr	w21, [x20, #24]
     d3c:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     d40:	cbz	w19, d68 <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x4c>
     d44:	sub	w19, w19, #0x1
     d48:	mov	w0, #0x21                  	// #33
     d4c:	clz	w19, w19
     d50:	sub	w0, w0, w19
     d54:	mov	w19, #0x1                   	// #1
     d58:	lsl	w19, w19, w0
     d5c:	cmp	w19, #0x40
     d60:	mov	w0, #0x40                  	// #64
     d64:	csel	w19, w19, w0, ge  // ge = tcont
     d68:	ldr	w0, [x20, #24]
     d6c:	cmp	w0, w19
     d70:	b.ne	d88 <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x6c>  // b.any
     d74:	mov	x0, x20
     d78:	ldp	x19, x20, [sp, #16]
     d7c:	ldr	x21, [sp, #32]
     d80:	ldp	x29, x30, [sp], #48
     d84:	b	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     d88:	ldr	x0, [x20, #8]
     d8c:	ubfiz	x1, x21, #5, #32
     d90:	bl	0 <_ZdlPvm>
     d94:	mov	w1, w19
     d98:	mov	x0, x20
     d9c:	ldp	x19, x20, [sp, #16]
     da0:	ldr	x21, [sp, #32]
     da4:	ldp	x29, x30, [sp], #48
     da8:	b	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>

0000000000000dac <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE>:
     dac:	stp	x29, x30, [sp, #-160]!
     db0:	mov	x29, sp
     db4:	stp	x19, x20, [sp, #16]
     db8:	mov	w19, w1
     dbc:	ldr	w1, [x0, #112]
     dc0:	stp	x21, x22, [sp, #32]
     dc4:	add	x20, x0, #0x60
     dc8:	mov	x22, x2
     dcc:	stp	x23, x24, [sp, #48]
     dd0:	add	x21, sp, #0x60
     dd4:	stp	x25, x26, [sp, #64]
     dd8:	mov	x26, x3
     ddc:	str	x27, [sp, #80]
     de0:	cbnz	w1, e44 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x98>
     de4:	mov	x8, x21
     de8:	mov	x0, x20
     dec:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     df0:	add	x8, sp, #0x80
     df4:	mov	x0, x20
     df8:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     dfc:	mov	w23, w19
     e00:	ldr	x25, [sp, #128]
     e04:	add	x26, x26, w19, uxtw
     e08:	ldr	x20, [sp, #112]
     e0c:	cbz	x20, e68 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0xbc>
     e10:	ldr	x0, [sp, #96]
     e14:	ldr	x1, [x0]
     e18:	ldr	x0, [sp, #104]
     e1c:	cmp	x1, x0
     e20:	b.eq	e68 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0xbc>  // b.none
     e24:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     e28:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     e2c:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     e30:	add	x3, x3, #0x0
     e34:	add	x1, x1, #0x0
     e38:	add	x0, x0, #0x0
     e3c:	mov	w2, #0x4c7                 	// #1223
     e40:	bl	0 <__assert_fail>
     e44:	ldr	x2, [x0, #104]
     e48:	ldr	w1, [x0, #120]
     e4c:	ldr	x0, [x0, #96]
     e50:	stp	x20, x0, [sp, #96]
     e54:	add	x1, x2, x1, lsl #5
     e58:	mov	x0, x21
     e5c:	stp	x2, x1, [sp, #112]
     e60:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     e64:	b	df0 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x44>
     e68:	ldr	x0, [sp, #144]
     e6c:	cbz	x0, ea0 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0xf4>
     e70:	ldr	x2, [x25]
     e74:	ldr	x1, [sp, #136]
     e78:	cmp	x2, x1
     e7c:	b.eq	ea0 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0xf4>  // b.none
     e80:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     e84:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     e88:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     e8c:	add	x3, x3, #0x0
     e90:	add	x1, x1, #0x0
     e94:	add	x0, x0, #0x0
     e98:	mov	w2, #0x4c8                 	// #1224
     e9c:	b	e40 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x94>
     ea0:	ldr	x1, [sp, #96]
     ea4:	cmp	x1, x25
     ea8:	b.eq	ecc <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x120>  // b.none
     eac:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     eb0:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     eb4:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     eb8:	add	x3, x3, #0x0
     ebc:	add	x1, x1, #0x0
     ec0:	add	x0, x0, #0x0
     ec4:	mov	w2, #0x4c9                 	// #1225
     ec8:	b	e40 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x94>
     ecc:	cmp	x20, x0
     ed0:	b.eq	fd8 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x22c>  // b.none
     ed4:	ldr	x1, [x25]
     ed8:	ldr	x0, [sp, #104]
     edc:	cmp	x1, x0
     ee0:	b.eq	f04 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x158>  // b.none
     ee4:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     ee8:	add	x3, x3, #0x0
     eec:	mov	w2, #0x4b3                 	// #1203
     ef0:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     ef4:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     ef8:	add	x1, x1, #0x0
     efc:	add	x0, x0, #0x0
     f00:	b	e40 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x94>
     f04:	ldr	w0, [x20]
     f08:	cmp	x26, x0
     f0c:	b.cc	fc0 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x214>  // b.lo, b.ul, b.last
     f10:	ldp	x24, x27, [x20, #8]
     f14:	cmp	x27, x24
     f18:	b.eq	f9c <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x1f0>  // b.none
     f1c:	ldr	x1, [x24, #8]
     f20:	ldr	w0, [x20]
     f24:	add	x1, x1, w0, uxtw
     f28:	cmp	x23, x1
     f2c:	b.hi	f94 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x1e8>  // b.pmore
     f30:	cmp	w0, w19
     f34:	csel	w2, w0, w19, cs  // cs = hs, nlast
     f38:	cmp	w26, w1
     f3c:	csel	w4, w26, w1, cc  // cc = lo, ul, last
     f40:	cmp	w2, w4
     f44:	b.ls	f68 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x1bc>  // b.plast
     f48:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     f4c:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     f50:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     f54:	add	x3, x3, #0x0
     f58:	add	x1, x1, #0x0
     f5c:	add	x0, x0, #0x0
     f60:	mov	w2, #0x12a                 	// #298
     f64:	b	e40 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x94>
     f68:	cmp	w0, w2
     f6c:	ldr	x3, [x24]
     f70:	csel	w1, w0, w2, cs  // cs = hs, nlast
     f74:	cmp	w19, w2
     f78:	sub	w0, w1, w0
     f7c:	csel	w1, w19, w2, cs  // cs = hs, nlast
     f80:	add	x0, x3, x0
     f84:	sub	w1, w1, w19
     f88:	sub	w2, w4, w2
     f8c:	add	x1, x1, x22
     f90:	bl	0 <memcpy>
     f94:	add	x24, x24, #0x10
     f98:	b	f14 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x168>
     f9c:	ldr	x0, [sp, #96]
     fa0:	ldr	x1, [x0]
     fa4:	ldr	x0, [sp, #104]
     fa8:	cmp	x1, x0
     fac:	b.eq	fc0 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x214>  // b.none
     fb0:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     fb4:	mov	w2, #0x4cf                 	// #1231
     fb8:	add	x3, x3, #0x0
     fbc:	b	ef0 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x144>
     fc0:	ldr	x0, [sp, #112]
     fc4:	add	x0, x0, #0x20
     fc8:	str	x0, [sp, #112]
     fcc:	mov	x0, x21
     fd0:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     fd4:	b	e08 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x5c>
     fd8:	ldp	x19, x20, [sp, #16]
     fdc:	ldp	x21, x22, [sp, #32]
     fe0:	ldp	x23, x24, [sp, #48]
     fe4:	ldp	x25, x26, [sp, #64]
     fe8:	ldr	x27, [sp, #80]
     fec:	ldp	x29, x30, [sp], #160
     ff0:	ret

0000000000000ff4 <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE>:
     ff4:	stp	x29, x30, [sp, #-128]!
     ff8:	mov	x29, sp
     ffc:	stp	x21, x22, [sp, #32]
    1000:	mov	w21, w1
    1004:	mov	x22, x8
    1008:	ldr	x1, [x0]
    100c:	stp	x19, x20, [sp, #16]
    1010:	mov	x19, x0
    1014:	stp	x23, x24, [sp, #48]
    1018:	mov	x24, x3
    101c:	mov	w23, w3
    1020:	ldr	x1, [x1, #48]
    1024:	stp	x25, x26, [sp, #64]
    1028:	mov	x25, x2
    102c:	stp	x27, x28, [sp, #80]
    1030:	blr	x1
    1034:	cmp	w0, #0x3
    1038:	b.ls	105c <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0x68>  // b.plast
    103c:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1040:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1044:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1048:	add	x3, x3, #0x0
    104c:	add	x1, x1, #0x0
    1050:	add	x0, x0, #0x0
    1054:	mov	w2, #0x5d                  	// #93
    1058:	bl	0 <__assert_fail>
    105c:	add	x20, sp, #0x70
    1060:	tbnz	w0, #1, 10bc <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0xc8>
    1064:	mov	x8, x20
    1068:	mov	w2, w24
    106c:	mov	w1, w21
    1070:	mov	x0, x19
    1074:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1078:	mov	x0, x20
    107c:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1080:	tst	w0, #0xff
    1084:	b.eq	1108 <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0x114>  // b.none
    1088:	mov	x1, x20
    108c:	mov	x0, x22
    1090:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1094:	mov	x0, x20
    1098:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    109c:	mov	x0, x22
    10a0:	ldp	x19, x20, [sp, #16]
    10a4:	ldp	x21, x22, [sp, #32]
    10a8:	ldp	x23, x24, [sp, #48]
    10ac:	ldp	x25, x26, [sp, #64]
    10b0:	ldp	x27, x28, [sp, #80]
    10b4:	ldp	x29, x30, [sp], #128
    10b8:	ret
    10bc:	ldr	x0, [x19]
    10c0:	ldr	x1, [x0, #40]
    10c4:	mov	x0, x19
    10c8:	blr	x1
    10cc:	cmp	w21, w0
    10d0:	b.ls	10e4 <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0xf0>  // b.plast
    10d4:	mov	x8, x20
    10d8:	mov	w0, #0x3                   	// #3
    10dc:	bl	5c <_ZN4llvm10make_errorINS_17BinaryStreamErrorEJNS_17stream_error_codeEEEENS_5ErrorEDpOT0_.isra.0>
    10e0:	b	1078 <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0x84>
    10e4:	add	x26, sp, #0x78
    10e8:	mov	x0, #0x1                   	// #1
    10ec:	mov	x1, x26
    10f0:	str	x0, [sp, #120]
    10f4:	mov	x0, x20
    10f8:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    10fc:	mov	x0, x26
    1100:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1104:	b	1078 <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0x84>
    1108:	mov	x0, x20
    110c:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1110:	ldr	w0, [x19, #16]
    1114:	add	x20, sp, #0x78
    1118:	add	x1, x19, #0x88
    111c:	mov	w27, #0x0                   	// #0
    1120:	str	x1, [sp, #104]
    1124:	udiv	w28, w21, w0
    1128:	msub	w0, w28, w0, w21
    112c:	cbz	w23, 118c <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0x198>
    1130:	ldr	x1, [x19, #32]
    1134:	mov	x8, x20
    1138:	add	x2, x25, w27, uxtw
    113c:	ldr	w5, [x1, w28, uxtw #2]
    1140:	ldr	w1, [x19, #16]
    1144:	sub	w3, w1, w0
    1148:	cmp	w3, w23
    114c:	madd	w1, w5, w1, w0
    1150:	csel	w26, w3, w23, ls  // ls = plast
    1154:	ldr	x0, [sp, #104]
    1158:	csel	w3, w3, w23, ls  // ls = plast
    115c:	bl	0 <_ZNK4llvm23WritableBinaryStreamRef10writeBytesEjNS_8ArrayRefIhEE>
    1160:	mov	x0, x20
    1164:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1168:	tst	w0, #0xff
    116c:	b.ne	1088 <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0x94>  // b.any
    1170:	mov	x0, x20
    1174:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1178:	sub	w23, w23, w26
    117c:	add	w27, w27, w26
    1180:	add	w28, w28, #0x1
    1184:	mov	w0, #0x0                   	// #0
    1188:	b	112c <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0x138>
    118c:	mov	x2, x25
    1190:	mov	x3, x24
    1194:	mov	w1, w21
    1198:	add	x0, x19, #0x8
    119c:	bl	dac <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE>
    11a0:	mov	x1, x20
    11a4:	mov	x0, #0x1                   	// #1
    11a8:	str	x0, [sp, #120]
    11ac:	mov	x0, x22
    11b0:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    11b4:	mov	x0, x20
    11b8:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    11bc:	b	109c <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0xa8>

00000000000011c0 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE>:
    11c0:	stp	x29, x30, [sp, #-128]!
    11c4:	mov	x29, sp
    11c8:	stp	x19, x20, [sp, #16]
    11cc:	mov	w19, w2
    11d0:	stp	x21, x22, [sp, #32]
    11d4:	mov	x21, x3
    11d8:	str	x23, [sp, #48]
    11dc:	cbnz	w19, 11fc <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x3c>
    11e0:	stp	xzr, xzr, [x3]
    11e4:	mov	w0, #0x1                   	// #1
    11e8:	ldp	x19, x20, [sp, #16]
    11ec:	ldp	x21, x22, [sp, #32]
    11f0:	ldr	x23, [sp, #48]
    11f4:	ldp	x29, x30, [sp], #128
    11f8:	ret
    11fc:	ldr	w2, [x0, #8]
    1200:	mov	w4, w2
    1204:	udiv	w5, w1, w2
    1208:	msub	w20, w5, w2, w1
    120c:	sub	w1, w2, w20
    1210:	cmp	w1, w19
    1214:	csel	w1, w1, w19, ls  // ls = plast
    1218:	sub	w3, w19, w1
    121c:	cbnz	w2, 1240 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x80>
    1220:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1224:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1228:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    122c:	add	x3, x3, #0x0
    1230:	add	x1, x1, #0x0
    1234:	add	x0, x0, #0x0
    1238:	mov	w2, #0x2ce                 	// #718
    123c:	bl	0 <__assert_fail>
    1240:	sub	x1, x4, #0x1
    1244:	ubfiz	x8, x5, #2, #32
    1248:	add	x1, x1, x3
    124c:	mov	w3, #0x0                   	// #0
    1250:	udiv	x1, x1, x4
    1254:	mul	x1, x1, x4
    1258:	udiv	x1, x1, x4
    125c:	ldr	x4, [x0, #24]
    1260:	add	w1, w1, #0x1
    1264:	ldr	w9, [x4, x8]
    1268:	cmp	w3, w1
    126c:	b.cs	128c <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0xcc>  // b.hs, b.nlast
    1270:	add	w7, w3, w5
    1274:	add	w6, w3, w9
    1278:	ldr	w7, [x4, x7, lsl #2]
    127c:	cmp	w7, w6
    1280:	b.ne	1338 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x178>  // b.any
    1284:	add	w3, w3, #0x1
    1288:	b	1268 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0xa8>
    128c:	stp	xzr, xzr, [sp, #112]
    1290:	add	x22, sp, #0x48
    1294:	add	x23, sp, #0x70
    1298:	ldr	w1, [x4, x8]
    129c:	mov	x3, x23
    12a0:	mov	x8, x22
    12a4:	add	x0, x0, #0x30
    12a8:	mul	w1, w2, w1
    12ac:	bl	0 <_ZNK4llvm15BinaryStreamRef9readBytesEjjRNS_8ArrayRefIhEE>
    12b0:	mov	x0, x22
    12b4:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    12b8:	tst	w0, #0xff
    12bc:	b.eq	1340 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x180>  // b.none
    12c0:	add	x19, sp, #0x50
    12c4:	add	x20, sp, #0x58
    12c8:	mov	x1, x22
    12cc:	mov	x0, x19
    12d0:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    12d4:	add	x21, sp, #0x60
    12d8:	mov	x1, x19
    12dc:	mov	x0, x20
    12e0:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    12e4:	add	x23, sp, #0x68
    12e8:	mov	x1, x20
    12ec:	mov	x0, x21
    12f0:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    12f4:	mov	x8, x23
    12f8:	add	x1, sp, #0x40
    12fc:	mov	x0, x21
    1300:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1304:	mov	x1, #0x0                   	// #0
    1308:	mov	x0, x23
    130c:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1310:	mov	x0, x23
    1314:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1318:	mov	x0, x21
    131c:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1320:	mov	x0, x20
    1324:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1328:	mov	x0, x19
    132c:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1330:	mov	x0, x22
    1334:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1338:	mov	w0, #0x0                   	// #0
    133c:	b	11e8 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x28>
    1340:	mov	x0, x22
    1344:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1348:	mov	w1, w20
    134c:	mov	x0, x23
    1350:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1354:	stp	x0, x19, [x21]
    1358:	b	11e4 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x24>

000000000000135c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE>:
    135c:	stp	x29, x30, [sp, #-256]!
    1360:	mov	x29, sp
    1364:	stp	x19, x20, [sp, #16]
    1368:	add	x19, sp, #0xd8
    136c:	mov	x20, x0
    1370:	stp	x21, x22, [sp, #32]
    1374:	mov	x21, x8
    1378:	mov	x8, x19
    137c:	stp	x23, x24, [sp, #48]
    1380:	mov	x23, x3
    1384:	stp	x25, x26, [sp, #64]
    1388:	str	x27, [sp, #80]
    138c:	stp	w2, w1, [sp, #104]
    1390:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1394:	mov	x0, x19
    1398:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    139c:	tst	w0, #0xff
    13a0:	b.eq	13d8 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x7c>  // b.none
    13a4:	mov	x1, x19
    13a8:	mov	x0, x21
    13ac:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    13b0:	mov	x0, x19
    13b4:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    13b8:	mov	x0, x21
    13bc:	ldp	x19, x20, [sp, #16]
    13c0:	ldp	x21, x22, [sp, #32]
    13c4:	ldp	x23, x24, [sp, #48]
    13c8:	ldp	x25, x26, [sp, #64]
    13cc:	ldr	x27, [sp, #80]
    13d0:	ldp	x29, x30, [sp], #256
    13d4:	ret
    13d8:	mov	x0, x19
    13dc:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    13e0:	ldp	w2, w1, [sp, #104]
    13e4:	mov	x3, x23
    13e8:	mov	x0, x20
    13ec:	bl	11c0 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE>
    13f0:	tst	w0, #0xff
    13f4:	b.eq	1404 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xa8>  // b.none
    13f8:	mov	x0, #0x1                   	// #1
    13fc:	str	x0, [sp, #216]
    1400:	b	15e4 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x288>
    1404:	add	x22, x20, #0x60
    1408:	mov	x2, x19
    140c:	add	x1, sp, #0x6c
    1410:	mov	x0, x22
    1414:	add	x25, sp, #0x78
    1418:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    141c:	tst	w0, #0xff
    1420:	b.eq	14bc <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x160>  // b.none
    1424:	ldr	x0, [x20, #104]
    1428:	mov	x3, x22
    142c:	ldr	x1, [sp, #216]
    1430:	mov	w4, #0x1                   	// #1
    1434:	ldr	w2, [x20, #120]
    1438:	add	x2, x0, x2, lsl #5
    143c:	mov	x0, x25
    1440:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1444:	add	x24, sp, #0xb8
    1448:	mov	x0, x22
    144c:	mov	x8, x24
    1450:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1454:	ldp	x0, x1, [sp, #184]
    1458:	stp	x0, x1, [sp, #216]
    145c:	ldr	x0, [sp, #200]
    1460:	str	x0, [sp, #232]
    1464:	ldr	x0, [sp, #208]
    1468:	mov	x1, x19
    146c:	str	x0, [sp, #240]
    1470:	mov	x0, x25
    1474:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1478:	tst	w0, #0xff
    147c:	b.eq	14cc <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x170>  // b.none
    1480:	mov	x0, x25
    1484:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1488:	ldp	x1, x4, [x0, #8]
    148c:	ldr	w2, [sp, #104]
    1490:	mov	x0, x1
    1494:	cmp	x1, x4
    1498:	b.eq	14cc <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x170>  // b.none
    149c:	ldr	x3, [x1, #8]
    14a0:	add	x1, x1, #0x10
    14a4:	cmp	x2, x3
    14a8:	b.hi	1490 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x134>  // b.pmore
    14ac:	mov	x1, #0x0                   	// #0
    14b0:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    14b4:	stp	x0, x1, [x23]
    14b8:	b	13f8 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x9c>
    14bc:	mov	x8, x25
    14c0:	mov	x0, x22
    14c4:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    14c8:	b	1444 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xe8>
    14cc:	ldr	w0, [x20, #112]
    14d0:	add	x26, sp, #0x98
    14d4:	cbnz	w0, 154c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x1f0>
    14d8:	mov	x8, x26
    14dc:	mov	x0, x22
    14e0:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    14e4:	mov	x8, x24
    14e8:	mov	x0, x22
    14ec:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    14f0:	ldp	x0, x1, [sp, #184]
    14f4:	stp	x0, x1, [sp, #216]
    14f8:	ldr	x0, [sp, #200]
    14fc:	str	x0, [sp, #232]
    1500:	ldr	x0, [sp, #208]
    1504:	mov	x1, x19
    1508:	str	x0, [sp, #240]
    150c:	mov	x0, x26
    1510:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1514:	tst	w0, #0xff
    1518:	b.eq	162c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x2d0>  // b.none
    151c:	ldp	x8, x5, [sp, #152]
    1520:	ldr	x0, [x8]
    1524:	cmp	x0, x5
    1528:	b.eq	156c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x210>  // b.none
    152c:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1530:	add	x3, x3, #0x0
    1534:	mov	w2, #0x4b3                 	// #1203
    1538:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    153c:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1540:	add	x1, x1, #0x0
    1544:	add	x0, x0, #0x0
    1548:	bl	0 <__assert_fail>
    154c:	ldr	x1, [x20, #104]
    1550:	mov	x3, x22
    1554:	ldr	w2, [x20, #120]
    1558:	mov	x0, x26
    155c:	mov	w4, #0x0                   	// #0
    1560:	add	x2, x1, x2, lsl #5
    1564:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1568:	b	14e4 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x188>
    156c:	ldr	x0, [sp, #168]
    1570:	ldp	w2, w3, [sp, #104]
    1574:	ldr	w1, [x0]
    1578:	add	w9, w3, w2
    157c:	cmp	w3, w1
    1580:	b.eq	15fc <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x2a0>  // b.none
    1584:	cmp	w9, w1
    1588:	b.ls	15fc <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x2a0>  // b.plast
    158c:	ldp	x6, x4, [x0, #8]
    1590:	cmp	x6, x4
    1594:	b.eq	15fc <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x2a0>  // b.none
    1598:	ldp	x6, x7, [x4, #-16]
    159c:	stp	x6, x7, [sp, #216]
    15a0:	ldr	x4, [sp, #224]
    15a4:	add	x6, x4, w1, uxtw
    15a8:	add	w4, w4, w1, lsl #1
    15ac:	cmp	w3, w4
    15b0:	b.cs	15fc <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x2a0>  // b.hs, b.nlast
    15b4:	cmp	w3, w1
    15b8:	b.cc	15fc <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x2a0>  // b.lo, b.ul, b.last
    15bc:	cmp	w9, w6
    15c0:	b.hi	15fc <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x2a0>  // b.pmore
    15c4:	mov	x0, x19
    15c8:	mov	w2, w2
    15cc:	sub	w1, w3, w1
    15d0:	add	x19, sp, #0x70
    15d4:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    15d8:	stp	x0, x1, [x23]
    15dc:	mov	x0, #0x1                   	// #1
    15e0:	str	x0, [sp, #112]
    15e4:	mov	x1, x19
    15e8:	mov	x0, x21
    15ec:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    15f0:	mov	x0, x19
    15f4:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    15f8:	b	13b8 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x5c>
    15fc:	ldr	x1, [x8]
    1600:	cmp	x5, x1
    1604:	b.eq	1618 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x2bc>  // b.none
    1608:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    160c:	mov	w2, #0x4cf                 	// #1231
    1610:	add	x3, x3, #0x0
    1614:	b	1538 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x1dc>
    1618:	add	x0, x0, #0x20
    161c:	str	x0, [sp, #168]
    1620:	mov	x0, x26
    1624:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1628:	b	14f0 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x194>
    162c:	ldr	w1, [sp, #104]
    1630:	mov	w2, #0x3                   	// #3
    1634:	ldr	x0, [x20, #88]
    1638:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    163c:	mov	x2, x0
    1640:	ldp	w3, w1, [sp, #104]
    1644:	mov	x8, x19
    1648:	mov	x0, x20
    164c:	str	x2, [sp, #112]
    1650:	bl	b8 <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE>
    1654:	mov	x0, x19
    1658:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    165c:	tst	w0, #0xff
    1660:	b.ne	13a4 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x48>  // b.any
    1664:	mov	x0, x19
    1668:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    166c:	mov	x8, x24
    1670:	mov	x0, x22
    1674:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1678:	add	x20, sp, #0x70
    167c:	ldp	x0, x1, [sp, #184]
    1680:	stp	x0, x1, [sp, #216]
    1684:	add	x27, sp, #0x68
    1688:	ldr	x0, [sp, #200]
    168c:	str	x0, [sp, #232]
    1690:	ldr	x0, [sp, #208]
    1694:	mov	x1, x19
    1698:	str	x0, [sp, #240]
    169c:	mov	x0, x25
    16a0:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    16a4:	tst	w0, #0xff
    16a8:	b.eq	16d4 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x378>  // b.none
    16ac:	mov	x0, x25
    16b0:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    16b4:	mov	x2, x27
    16b8:	mov	x1, x20
    16bc:	add	x0, x0, #0x8
    16c0:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    16c4:	ldr	w0, [sp, #104]
    16c8:	ldr	x1, [sp, #112]
    16cc:	stp	x1, x0, [x23]
    16d0:	b	13f8 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x9c>
    16d4:	mov	x1, x20
    16d8:	mov	x0, x26
    16dc:	mov	x2, x27
    16e0:	stp	xzr, xzr, [sp, #152]
    16e4:	str	xzr, [sp, #168]
    16e8:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    16ec:	ldr	w0, [sp, #108]
    16f0:	str	w0, [sp, #184]
    16f4:	ldr	x0, [sp, #152]
    16f8:	stp	xzr, xzr, [sp, #192]
    16fc:	ldr	x20, [sp, #160]
    1700:	str	xzr, [sp, #208]
    1704:	sub	x20, x20, x0
    1708:	asr	x1, x20, #4
    170c:	cmp	xzr, x20, asr #4
    1710:	b.eq	1758 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x3fc>  // b.none
    1714:	mov	x0, #0x7ffffffffffffff     	// #576460752303423487
    1718:	cmp	x1, x0
    171c:	b.ls	1724 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x3c8>  // b.plast
    1720:	bl	0 <_ZSt17__throw_bad_allocv>
    1724:	mov	x0, x20
    1728:	bl	0 <_Znwm>
    172c:	ldp	x3, x1, [sp, #152]
    1730:	mov	x4, x0
    1734:	add	x20, x0, x20
    1738:	str	x0, [sp, #192]
    173c:	str	x20, [sp, #208]
    1740:	mov	x2, x3
    1744:	cmp	x1, x2
    1748:	b.eq	1760 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x404>  // b.none
    174c:	ldp	x6, x7, [x2], #16
    1750:	stp	x6, x7, [x4], #16
    1754:	b	1744 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x3e8>
    1758:	mov	x0, #0x0                   	// #0
    175c:	b	172c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x3d0>
    1760:	sub	x1, x1, x3
    1764:	mov	x8, x19
    1768:	add	x0, x0, x1
    176c:	mov	x1, x24
    1770:	str	x0, [sp, #200]
    1774:	mov	x0, x22
    1778:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    177c:	ldr	x0, [sp, #192]
    1780:	bl	50 <_ZNSt12_Vector_baseIN4llvm15MutableArrayRefIhEESaIS2_EE13_M_deallocateEPS2_m.isra.0>
    1784:	ldr	x0, [sp, #152]
    1788:	bl	50 <_ZNSt12_Vector_baseIN4llvm15MutableArrayRefIhEESaIS2_EE13_M_deallocateEPS2_m.isra.0>
    178c:	b	16c4 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x368>

0000000000001790 <_ZN4llvm3msf25WritableMappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE>:
    1790:	stp	x29, x30, [sp, #-32]!
    1794:	add	x0, x0, #0x8
    1798:	mov	x29, sp
    179c:	str	x19, [sp, #16]
    17a0:	mov	x19, x8
    17a4:	bl	135c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE>
    17a8:	mov	x0, x19
    17ac:	ldr	x19, [sp, #16]
    17b0:	ldp	x29, x30, [sp], #32
    17b4:	ret

Disassembly of section .text._ZNK4llvm12BinaryStream8getFlagsEv:

0000000000000000 <_ZNK4llvm12BinaryStream8getFlagsEv>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm20WritableBinaryStream8getFlagsEv:

0000000000000000 <_ZNK4llvm20WritableBinaryStream8getFlagsEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm3msf17MappedBlockStream9getEndianEv:

0000000000000000 <_ZNK4llvm3msf17MappedBlockStream9getEndianEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm3msf25WritableMappedBlockStream9getEndianEv:

0000000000000000 <_ZNK4llvm3msf25WritableMappedBlockStream9getEndianEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZN4llvm12NextPowerOf2Em:

0000000000000000 <_ZN4llvm12NextPowerOf2Em>:
   0:	orr	x0, x0, x0, lsr #1
   4:	orr	x0, x0, x0, lsr #2
   8:	orr	x0, x0, x0, lsr #4
   c:	orr	x0, x0, x0, lsr #8
  10:	orr	x0, x0, x0, lsr #16
  14:	orr	x0, x0, x0, lsr #32
  18:	add	x0, x0, #0x1
  1c:	ret

Disassembly of section .text._ZN4llvm11safe_mallocEm:

0000000000000000 <_ZN4llvm11safe_mallocEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x0, x19
  14:	bl	0 <malloc>
  18:	mov	x20, x0
  1c:	cbnz	x0, 34 <_ZN4llvm11safe_mallocEm+0x34>
  20:	cbz	x19, 44 <_ZN4llvm11safe_mallocEm+0x44>
  24:	adrp	x0, 0 <_ZN4llvm11safe_mallocEm>
  28:	mov	w1, #0x1                   	// #1
  2c:	add	x0, x0, #0x0
  30:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  34:	mov	x0, x20
  38:	ldp	x19, x20, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret
  44:	mov	x19, #0x1                   	// #1
  48:	b	10 <_ZN4llvm11safe_mallocEm+0x10>

Disassembly of section .text._ZN4llvm9alignAddrEPKvNS_5AlignE:

0000000000000000 <_ZN4llvm9alignAddrEPKvNS_5AlignE>:
   0:	mov	x2, #0x1                   	// #1
   4:	lsl	x1, x2, x1
   8:	sub	x2, x1, #0x1
   c:	adds	x0, x0, x2
  10:	b.cc	3c <_ZN4llvm9alignAddrEPKvNS_5AlignE+0x3c>  // b.lo, b.ul, b.last
  14:	stp	x29, x30, [sp, #-16]!
  18:	adrp	x3, 0 <_ZN4llvm9alignAddrEPKvNS_5AlignE>
  1c:	adrp	x1, 0 <_ZN4llvm9alignAddrEPKvNS_5AlignE>
  20:	mov	x29, sp
  24:	adrp	x0, 0 <_ZN4llvm9alignAddrEPKvNS_5AlignE>
  28:	add	x3, x3, #0x0
  2c:	add	x1, x1, #0x0
  30:	add	x0, x0, #0x0
  34:	mov	w2, #0xba                  	// #186
  38:	bl	0 <__assert_fail>
  3c:	neg	x1, x1
  40:	and	x0, x1, x0
  44:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	str	x21, [sp, #32]
  14:	mov	x21, x1
  18:	cbz	x1, 54 <_ZN4llvm11raw_ostreamlsEPKc+0x54>
  1c:	mov	x0, x1
  20:	bl	0 <strlen>
  24:	mov	x20, x0
  28:	ldp	x1, x0, [x19, #16]
  2c:	sub	x1, x1, x0
  30:	cmp	x1, x20
  34:	b.cs	5c <_ZN4llvm11raw_ostreamlsEPKc+0x5c>  // b.hs, b.nlast
  38:	mov	x2, x20
  3c:	mov	x1, x21
  40:	mov	x0, x19
  44:	ldp	x19, x20, [sp, #16]
  48:	ldr	x21, [sp, #32]
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  54:	mov	x20, #0x0                   	// #0
  58:	b	28 <_ZN4llvm11raw_ostreamlsEPKc+0x28>
  5c:	cbz	x20, 78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>
  60:	mov	x2, x20
  64:	mov	x1, x21
  68:	bl	0 <memcpy>
  6c:	ldr	x0, [x19, #24]
  70:	add	x0, x0, x20
  74:	str	x0, [x19, #24]
  78:	mov	x0, x19
  7c:	ldp	x19, x20, [sp, #16]
  80:	ldr	x21, [sp, #32]
  84:	ldp	x29, x30, [sp], #48
  88:	ret

Disassembly of section .text._ZN4llvm5ErrorC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EE:

0000000000000000 <_ZN4llvm5ErrorC1ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EE>:
   0:	ldr	x2, [x1]
   4:	str	xzr, [x1]
   8:	orr	x1, x2, #0x1
   c:	str	x1, [x0]
  10:	ret

Disassembly of section .text._ZN4llvm5ErrorcvbEv:

0000000000000000 <_ZN4llvm5ErrorcvbEv>:
   0:	ldr	x1, [x0]
   4:	ands	x2, x1, #0xfffffffffffffffe
   8:	cset	x1, ne  // ne = any
   c:	orr	x1, x1, x2
  10:	str	x1, [x0]
  14:	tst	x1, #0xfffffffffffffffe
  18:	cset	w0, ne  // ne = any
  1c:	ret

Disassembly of section .text._ZN4llvm5Error15assertIsCheckedEv:

0000000000000000 <_ZN4llvm5Error15assertIsCheckedEv>:
   0:	ldr	x1, [x0]
   4:	tbnz	w1, #0, 10 <_ZN4llvm5Error15assertIsCheckedEv+0x10>
   8:	tst	x1, #0xfffffffffffffffe
   c:	b.eq	1c <_ZN4llvm5Error15assertIsCheckedEv+0x1c>  // b.none
  10:	stp	x29, x30, [sp, #-16]!
  14:	mov	x29, sp
  18:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
  1c:	ret

Disassembly of section .text._ZN4llvm5ErrorD2Ev:

0000000000000000 <_ZN4llvm5ErrorD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm5ErrorD1Ev>
  14:	ldr	x0, [x19]
  18:	ands	x0, x0, #0xfffffffffffffffe
  1c:	b.eq	38 <_ZN4llvm5ErrorD1Ev+0x38>  // b.none
  20:	ldr	x1, [x0]
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	ldr	x1, [x1, #8]
  30:	mov	x16, x1
  34:	br	x16
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

Disassembly of section .text._ZN4llvm5ErroraSEOS0_:

0000000000000000 <_ZN4llvm5ErroraSEOS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	mov	x19, x0
  14:	bl	0 <_ZN4llvm5ErroraSEOS0_>
  18:	ldr	x0, [x20]
  1c:	orr	x0, x0, #0x1
  20:	str	x0, [x19]
  24:	str	xzr, [x20]
  28:	mov	x0, x19
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret

Disassembly of section .text._ZN4llvm5ErrorC2EOS0_:

0000000000000000 <_ZN4llvm5ErrorC1EOS0_>:
   0:	str	xzr, [x0]
   4:	b	0 <_ZN4llvm5ErrorC1EOS0_>

Disassembly of section .text._ZN4llvm8cantFailENS_5ErrorEPKc:

0000000000000000 <_ZN4llvm8cantFailENS_5ErrorEPKc>:
   0:	stp	x29, x30, [sp, #-128]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	str	x21, [sp, #32]
  18:	bl	0 <_ZN4llvm8cantFailENS_5ErrorEPKc>
  1c:	tst	w0, #0xff
  20:	b.eq	e0 <_ZN4llvm8cantFailENS_5ErrorEPKc+0xe0>  // b.none
  24:	cbnz	x19, 30 <_ZN4llvm8cantFailENS_5ErrorEPKc+0x30>
  28:	adrp	x19, 0 <_ZN4llvm8cantFailENS_5ErrorEPKc>
  2c:	add	x19, x19, #0x0
  30:	add	x1, sp, #0x40
  34:	stp	x1, xzr, [sp, #48]
  38:	mov	w1, #0x1                   	// #1
  3c:	str	w1, [sp, #112]
  40:	adrp	x1, 0 <_ZTVN4llvm18raw_string_ostreamE>
  44:	add	x0, sp, #0x30
  48:	add	x21, sp, #0x50
  4c:	ldr	x1, [x1]
  50:	strb	wzr, [sp, #64]
  54:	stp	xzr, xzr, [sp, #88]
  58:	add	x1, x1, #0x10
  5c:	str	x1, [sp, #80]
  60:	mov	x1, x19
  64:	str	xzr, [sp, #104]
  68:	str	x0, [sp, #120]
  6c:	mov	x0, x21
  70:	bl	0 <_ZN4llvm8cantFailENS_5ErrorEPKc>
  74:	adrp	x1, 0 <_ZN4llvm8cantFailENS_5ErrorEPKc>
  78:	add	x1, x1, #0x0
  7c:	bl	0 <_ZN4llvm8cantFailENS_5ErrorEPKc>
  80:	mov	x1, x0
  84:	ldr	x2, [x20]
  88:	ands	x2, x2, #0xfffffffffffffffe
  8c:	b.eq	d0 <_ZN4llvm8cantFailENS_5ErrorEPKc+0xd0>  // b.none
  90:	ldr	x0, [x2]
  94:	ldr	x3, [x0, #16]
  98:	mov	x0, x2
  9c:	blr	x3
  a0:	ldr	x0, [sp, #88]
  a4:	ldr	x1, [sp, #104]
  a8:	cmp	x1, x0
  ac:	b.eq	b8 <_ZN4llvm8cantFailENS_5ErrorEPKc+0xb8>  // b.none
  b0:	mov	x0, x21
  b4:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  b8:	ldr	x0, [sp, #120]
  bc:	adrp	x1, 0 <_ZN4llvm8cantFailENS_5ErrorEPKc>
  c0:	mov	w2, #0x2c9                 	// #713
  c4:	add	x1, x1, #0x0
  c8:	ldr	x0, [x0]
  cc:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  d0:	adrp	x1, 0 <_ZN4llvm8cantFailENS_5ErrorEPKc>
  d4:	add	x1, x1, #0x0
  d8:	bl	0 <_ZN4llvm8cantFailENS_5ErrorEPKc>
  dc:	b	a0 <_ZN4llvm8cantFailENS_5ErrorEPKc+0xa0>
  e0:	ldp	x19, x20, [sp, #16]
  e4:	ldr	x21, [sp, #32]
  e8:	ldp	x29, x30, [sp], #128
  ec:	ret

Disassembly of section .text._ZNSt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS1_EED2Ev:

0000000000000000 <_ZNSt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS1_EED1Ev>:
   0:	ldr	x0, [x0]
   4:	cbz	x0, c <_ZNSt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS1_EED1Ev+0xc>
   8:	b	0 <_ZNSt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS1_EED1Ev>
   c:	ret

Disassembly of section .text._ZN4llvm12BinaryStream18checkOffsetForReadEjj:

0000000000000000 <_ZN4llvm12BinaryStream18checkOffsetForReadEjj>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	w20, w1
  10:	mov	x19, x8
  14:	ldr	x1, [x0]
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	x21, x0
  20:	mov	w22, w2
  24:	ldr	x1, [x1, #40]
  28:	blr	x1
  2c:	cmp	w0, w20
  30:	b.cs	54 <_ZN4llvm12BinaryStream18checkOffsetForReadEjj+0x54>  // b.hs, b.nlast
  34:	mov	x8, x19
  38:	mov	w0, #0x3                   	// #3
  3c:	bl	0 <_ZN4llvm12BinaryStream18checkOffsetForReadEjj>
  40:	mov	x0, x19
  44:	ldp	x19, x20, [sp, #16]
  48:	ldp	x21, x22, [sp, #32]
  4c:	ldp	x29, x30, [sp], #64
  50:	ret
  54:	ldr	x0, [x21]
  58:	add	w20, w20, w22
  5c:	ldr	x1, [x0, #40]
  60:	mov	x0, x21
  64:	blr	x1
  68:	cmp	w0, w20
  6c:	b.cs	7c <_ZN4llvm12BinaryStream18checkOffsetForReadEjj+0x7c>  // b.hs, b.nlast
  70:	mov	x8, x19
  74:	mov	w0, #0x1                   	// #1
  78:	b	3c <_ZN4llvm12BinaryStream18checkOffsetForReadEjj+0x3c>
  7c:	add	x20, sp, #0x38
  80:	mov	x0, #0x1                   	// #1
  84:	mov	x1, x20
  88:	str	x0, [sp, #56]
  8c:	mov	x0, x19
  90:	bl	0 <_ZN4llvm12BinaryStream18checkOffsetForReadEjj>
  94:	mov	x0, x20
  98:	bl	0 <_ZN4llvm12BinaryStream18checkOffsetForReadEjj>
  9c:	b	40 <_ZN4llvm12BinaryStream18checkOffsetForReadEjj+0x40>

Disassembly of section .text._ZNK4llvm13ErrorInfoBase3isAINS_9ErrorListEEEbv:

0000000000000000 <_ZNK4llvm13ErrorInfoBase3isAINS_9ErrorListEEEbv>:
   0:	ldr	x1, [x0]
   4:	ldr	x2, [x1, #48]
   8:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
   c:	ldr	x1, [x1]
  10:	mov	x16, x2
  14:	br	x16

Disassembly of section .text._ZNK4llvm5Error3isAINS_9ErrorListEEEbv:

0000000000000000 <_ZNK4llvm5Error3isAINS_9ErrorListEEEbv>:
   0:	ldr	x0, [x0]
   4:	ands	x0, x0, #0xfffffffffffffffe
   8:	b.eq	24 <_ZNK4llvm5Error3isAINS_9ErrorListEEEbv+0x24>  // b.none
   c:	ldr	x1, [x0]
  10:	ldr	x2, [x1, #48]
  14:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  18:	ldr	x1, [x1]
  1c:	mov	x16, x2
  20:	br	x16
  24:	mov	w0, #0x0                   	// #0
  28:	ret

Disassembly of section .text._ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev:

0000000000000000 <_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	ldr	x19, [x0]
  10:	cbz	x19, b0 <_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev+0xb0>
  14:	adrp	x0, 0 <__pthread_key_create>
  18:	mov	x20, x0
  1c:	ldr	x1, [x0]
  20:	cbz	x1, 90 <_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev+0x90>
  24:	add	x1, x19, #0x8
  28:	ldaxr	w0, [x1]
  2c:	sub	w2, w0, #0x1
  30:	stlxr	w3, w2, [x1]
  34:	cbnz	w3, 28 <_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev+0x28>
  38:	cmp	w0, #0x1
  3c:	b.ne	b0 <_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev+0xb0>  // b.any
  40:	ldr	x0, [x19]
  44:	ldr	x1, [x0, #16]
  48:	mov	x0, x19
  4c:	blr	x1
  50:	ldr	x0, [x20]
  54:	cbz	x0, a0 <_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev+0xa0>
  58:	add	x1, x19, #0xc
  5c:	ldaxr	w0, [x1]
  60:	sub	w2, w0, #0x1
  64:	stlxr	w3, w2, [x1]
  68:	cbnz	w3, 5c <_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev+0x5c>
  6c:	cmp	w0, #0x1
  70:	b.ne	b0 <_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev+0xb0>  // b.any
  74:	ldr	x0, [x19]
  78:	ldr	x1, [x0, #24]
  7c:	mov	x0, x19
  80:	ldp	x19, x20, [sp, #16]
  84:	mov	x16, x1
  88:	ldp	x29, x30, [sp], #32
  8c:	br	x16
  90:	ldr	w0, [x19, #8]
  94:	sub	w1, w0, #0x1
  98:	str	w1, [x19, #8]
  9c:	b	38 <_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev+0x38>
  a0:	ldr	w0, [x19, #12]
  a4:	sub	w1, w0, #0x1
  a8:	str	w1, [x19, #12]
  ac:	b	6c <_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev+0x6c>
  b0:	ldp	x19, x20, [sp, #16]
  b4:	ldp	x29, x30, [sp], #32
  b8:	ret

Disassembly of section .text._ZN4llvm18BinaryStreamWriterD2Ev:

0000000000000000 <_ZN4llvm18BinaryStreamWriterD1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm18BinaryStreamWriterD1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0], #8
  10:	add	x0, x0, #0x8
  14:	b	0 <_ZN4llvm18BinaryStreamWriterD1Ev>

Disassembly of section .text._ZN4llvm18BinaryStreamWriterD0Ev:

0000000000000000 <_ZN4llvm18BinaryStreamWriterD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm18BinaryStreamWriterD0Ev>
  14:	mov	x0, x19
  18:	mov	x1, #0x38                  	// #56
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	b	0 <_ZdlPvm>

Disassembly of section .text._ZNSt12_Vector_baseIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EED2Ev:

0000000000000000 <_ZNSt12_Vector_baseIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EED1Ev>:
   0:	ldr	x0, [x0]
   4:	cbz	x0, c <_ZNSt12_Vector_baseIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EED1Ev+0xc>
   8:	b	0 <_ZdlPv>
   c:	ret

Disassembly of section .text._ZNK4llvm8ArrayRefINS_7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEEEcvSt6vectorIS5_SaIS5_EEEv:

0000000000000000 <_ZNK4llvm8ArrayRefINS_7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEEEcvSt6vectorIS5_SaIS5_EEEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x1, #0x1fffffffffffffff    	// #2305843009213693951
   8:	mov	x29, sp
   c:	stp	x21, x22, [sp, #32]
  10:	ldp	x22, x0, [x0]
  14:	stp	x19, x20, [sp, #16]
  18:	stp	xzr, xzr, [x8]
  1c:	str	xzr, [x8, #16]
  20:	lsl	x20, x0, #2
  24:	sbfx	x0, x0, #0, #62
  28:	cmp	x0, x1
  2c:	b.ls	3c <_ZNK4llvm8ArrayRefINS_7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEEEcvSt6vectorIS5_SaIS5_EEEv+0x3c>  // b.plast
  30:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEEEcvSt6vectorIS5_SaIS5_EEEv>
  34:	add	x0, x0, #0x0
  38:	bl	0 <_ZSt20__throw_length_errorPKc>
  3c:	mov	x19, x8
  40:	cbz	x0, 80 <_ZNK4llvm8ArrayRefINS_7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEEEcvSt6vectorIS5_SaIS5_EEEv+0x80>
  44:	mov	x0, x20
  48:	bl	0 <_Znwm>
  4c:	add	x21, x0, x20
  50:	str	x0, [x19]
  54:	str	x21, [x19, #16]
  58:	cbz	x20, 68 <_ZNK4llvm8ArrayRefINS_7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEEEcvSt6vectorIS5_SaIS5_EEEv+0x68>
  5c:	mov	x2, x20
  60:	mov	x1, x22
  64:	bl	0 <memmove>
  68:	str	x21, [x19, #8]
  6c:	mov	x0, x19
  70:	ldp	x19, x20, [sp, #16]
  74:	ldp	x21, x22, [sp, #32]
  78:	ldp	x29, x30, [sp], #48
  7c:	ret
  80:	mov	x0, #0x0                   	// #0
  84:	b	4c <_ZNK4llvm8ArrayRefINS_7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEEEcvSt6vectorIS5_SaIS5_EEEv+0x4c>

Disassembly of section .text._ZNK4llvm8ArrayRefINS_7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEEEixEm:

0000000000000000 <_ZNK4llvm8ArrayRefINS_7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEEEixEm>:
   0:	ldr	x2, [x0, #8]
   4:	cmp	x2, x1
   8:	b.hi	34 <_ZNK4llvm8ArrayRefINS_7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEEEixEm+0x34>  // b.pmore
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZNK4llvm8ArrayRefINS_7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEEEixEm>
  14:	adrp	x1, 0 <_ZNK4llvm8ArrayRefINS_7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEEEixEm>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZNK4llvm8ArrayRefINS_7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEEEixEm>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0xfa                  	// #250
  30:	bl	0 <__assert_fail>
  34:	ldr	x0, [x0]
  38:	add	x0, x0, x1, lsl #2
  3c:	ret

Disassembly of section .text._ZNK4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb0EEneERKNS0_IjS5_S7_SA_Lb1EEE:

0000000000000000 <_ZNK4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb0EEneERKNS0_IjS5_S7_SA_Lb1EEE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x3, [x0, #16]
   c:	cbz	x3, 40 <_ZNK4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb0EEneERKNS0_IjS5_S7_SA_Lb1EEE+0x40>
  10:	ldp	x2, x4, [x0]
  14:	ldr	x2, [x2]
  18:	cmp	x4, x2
  1c:	b.eq	40 <_ZNK4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb0EEneERKNS0_IjS5_S7_SA_Lb1EEE+0x40>  // b.none
  20:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb0EEneERKNS0_IjS5_S7_SA_Lb1EEE>
  24:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb0EEneERKNS0_IjS5_S7_SA_Lb1EEE>
  28:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb0EEneERKNS0_IjS5_S7_SA_Lb1EEE>
  2c:	add	x3, x3, #0x0
  30:	add	x1, x1, #0x0
  34:	add	x0, x0, #0x0
  38:	mov	w2, #0x4c7                 	// #1223
  3c:	bl	0 <__assert_fail>
  40:	ldr	x2, [x1, #16]
  44:	ldr	x4, [x1]
  48:	cbz	x2, 7c <_ZNK4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb0EEneERKNS0_IjS5_S7_SA_Lb1EEE+0x7c>
  4c:	ldr	x5, [x4]
  50:	ldr	x1, [x1, #8]
  54:	cmp	x5, x1
  58:	b.eq	7c <_ZNK4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb0EEneERKNS0_IjS5_S7_SA_Lb1EEE+0x7c>  // b.none
  5c:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb0EEneERKNS0_IjS5_S7_SA_Lb1EEE>
  60:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb0EEneERKNS0_IjS5_S7_SA_Lb1EEE>
  64:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb0EEneERKNS0_IjS5_S7_SA_Lb1EEE>
  68:	add	x3, x3, #0x0
  6c:	add	x1, x1, #0x0
  70:	add	x0, x0, #0x0
  74:	mov	w2, #0x4c8                 	// #1224
  78:	b	3c <_ZNK4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb0EEneERKNS0_IjS5_S7_SA_Lb1EEE+0x3c>
  7c:	ldr	x0, [x0]
  80:	cmp	x0, x4
  84:	b.eq	a8 <_ZNK4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb0EEneERKNS0_IjS5_S7_SA_Lb1EEE+0xa8>  // b.none
  88:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb0EEneERKNS0_IjS5_S7_SA_Lb1EEE>
  8c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb0EEneERKNS0_IjS5_S7_SA_Lb1EEE>
  90:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb0EEneERKNS0_IjS5_S7_SA_Lb1EEE>
  94:	add	x3, x3, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x0, x0, #0x0
  a0:	mov	w2, #0x4c9                 	// #1225
  a4:	b	3c <_ZNK4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb0EEneERKNS0_IjS5_S7_SA_Lb1EEE+0x3c>
  a8:	cmp	x3, x2
  ac:	cset	w0, ne  // ne = any
  b0:	ldp	x29, x30, [sp], #16
  b4:	ret

Disassembly of section .text._ZNK4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb0EEptEv:

0000000000000000 <_ZNK4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb0EEptEv>:
   0:	ldr	x1, [x0]
   4:	ldr	x2, [x1]
   8:	ldr	x1, [x0, #8]
   c:	cmp	x2, x1
  10:	b.eq	3c <_ZNK4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb0EEptEv+0x3c>  // b.none
  14:	stp	x29, x30, [sp, #-16]!
  18:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb0EEptEv>
  1c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb0EEptEv>
  20:	mov	x29, sp
  24:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb0EEptEv>
  28:	add	x3, x3, #0x0
  2c:	add	x1, x1, #0x0
  30:	add	x0, x0, #0x0
  34:	mov	w2, #0x4b9                 	// #1209
  38:	bl	0 <__assert_fail>
  3c:	ldr	x0, [x0, #16]
  40:	ret

Disassembly of section .text._ZNK4llvm15MutableArrayRefIhE5sliceEmm:

0000000000000000 <_ZNK4llvm15MutableArrayRefIhE5sliceEmm>:
   0:	mov	x3, x1
   4:	mov	x1, x2
   8:	add	x4, x3, x2
   c:	ldr	x2, [x0, #8]
  10:	cmp	x4, x2
  14:	b.ls	40 <_ZNK4llvm15MutableArrayRefIhE5sliceEmm+0x40>  // b.plast
  18:	stp	x29, x30, [sp, #-16]!
  1c:	adrp	x3, 0 <_ZNK4llvm15MutableArrayRefIhE5sliceEmm>
  20:	adrp	x1, 0 <_ZNK4llvm15MutableArrayRefIhE5sliceEmm>
  24:	mov	x29, sp
  28:	adrp	x0, 0 <_ZNK4llvm15MutableArrayRefIhE5sliceEmm>
  2c:	add	x3, x3, #0x0
  30:	add	x1, x1, #0x0
  34:	add	x0, x0, #0x0
  38:	mov	w2, #0x169                 	// #361
  3c:	bl	0 <__assert_fail>
  40:	ldr	x0, [x0]
  44:	add	x0, x0, x3
  48:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE12emplace_backIJRPhRjEEEvDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE12emplace_backIJRPhRjEEEvDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	mov	x21, x0
  10:	stp	x23, x24, [sp, #48]
  14:	mov	x24, x1
  18:	ldp	x23, x0, [x0, #8]
  1c:	stp	x19, x20, [sp, #16]
  20:	stp	x25, x26, [sp, #64]
  24:	mov	x25, x2
  28:	cmp	x23, x0
  2c:	b.eq	5c <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE12emplace_backIJRPhRjEEEvDpOT_+0x5c>  // b.none
  30:	ldr	w0, [x2]
  34:	ldr	x1, [x1]
  38:	stp	x1, x0, [x23]
  3c:	add	x23, x23, #0x10
  40:	str	x23, [x21, #8]
  44:	ldp	x19, x20, [sp, #16]
  48:	ldp	x21, x22, [sp, #32]
  4c:	ldp	x23, x24, [sp, #48]
  50:	ldp	x25, x26, [sp, #64]
  54:	ldp	x29, x30, [sp], #80
  58:	ret
  5c:	ldr	x26, [x21]
  60:	mov	x0, #0x7ffffffffffffff     	// #576460752303423487
  64:	sub	x22, x23, x26
  68:	asr	x19, x22, #4
  6c:	cmp	x0, x22, asr #4
  70:	b.ne	80 <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE12emplace_backIJRPhRjEEEvDpOT_+0x80>  // b.any
  74:	adrp	x0, 0 <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE12emplace_backIJRPhRjEEEvDpOT_>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <_ZSt20__throw_length_errorPKc>
  80:	cmp	x19, #0x0
  84:	csinc	x1, x19, xzr, ne  // ne = any
  88:	adds	x19, x19, x1
  8c:	b.cs	fc <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE12emplace_backIJRPhRjEEEvDpOT_+0xfc>  // b.hs, b.nlast
  90:	mov	x20, #0x0                   	// #0
  94:	cbz	x19, ac <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE12emplace_backIJRPhRjEEEvDpOT_+0xac>
  98:	cmp	x19, x0
  9c:	csel	x19, x19, x0, ls  // ls = plast
  a0:	lsl	x0, x19, #4
  a4:	bl	0 <_Znwm>
  a8:	mov	x20, x0
  ac:	add	x0, x20, x22
  b0:	ldr	w1, [x25]
  b4:	ldr	x2, [x24]
  b8:	str	x2, [x20, x22]
  bc:	str	x1, [x0, #8]
  c0:	mov	x1, x20
  c4:	mov	x0, x26
  c8:	cmp	x23, x0
  cc:	b.eq	dc <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE12emplace_backIJRPhRjEEEvDpOT_+0xdc>  // b.none
  d0:	ldp	x2, x3, [x0], #16
  d4:	stp	x2, x3, [x1], #16
  d8:	b	c8 <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE12emplace_backIJRPhRjEEEvDpOT_+0xc8>
  dc:	add	x22, x22, #0x10
  e0:	mov	x0, x26
  e4:	add	x22, x20, x22
  e8:	bl	0 <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE12emplace_backIJRPhRjEEEvDpOT_>
  ec:	add	x19, x20, x19, lsl #4
  f0:	stp	x20, x22, [x21]
  f4:	str	x19, [x21, #16]
  f8:	b	44 <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE12emplace_backIJRPhRjEEEvDpOT_+0x44>
  fc:	mov	x19, x0
 100:	b	a0 <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE12emplace_backIJRPhRjEEEvDpOT_+0xa0>

Disassembly of section .text._ZNK4llvm8ArrayRefIhE10drop_frontEm:

0000000000000000 <_ZNK4llvm8ArrayRefIhE10drop_frontEm>:
   0:	ldr	x2, [x0, #8]
   4:	cmp	x1, x2
   8:	b.ls	34 <_ZNK4llvm8ArrayRefIhE10drop_frontEm+0x34>  // b.plast
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZNK4llvm8ArrayRefIhE10drop_frontEm>
  14:	adrp	x1, 0 <_ZNK4llvm8ArrayRefIhE10drop_frontEm>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZNK4llvm8ArrayRefIhE10drop_frontEm>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0xc6                  	// #198
  30:	bl	0 <__assert_fail>
  34:	ldr	x0, [x0]
  38:	add	x0, x0, x1
  3c:	sub	x1, x2, x1
  40:	ret

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E3endEv:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E3endEv>:
   0:	ldr	x2, [x0, #8]
   4:	str	x0, [x8]
   8:	ldr	w1, [x0, #24]
   c:	ldr	x0, [x0]
  10:	str	x0, [x8, #8]
  14:	add	x1, x2, x1, lsl #5
  18:	stp	x1, x1, [x8, #16]
  1c:	ret

Disassembly of section .text._ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE15_M_add_ref_copyEv:

0000000000000000 <_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE15_M_add_ref_copyEv>:
   0:	adrp	x1, 0 <__pthread_key_create>
   4:	ldr	x1, [x1]
   8:	cbz	x1, 24 <_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE15_M_add_ref_copyEv+0x24>
   c:	add	x0, x0, #0x8
  10:	ldaxr	w1, [x0]
  14:	add	w1, w1, #0x1
  18:	stlxr	w2, w1, [x0]
  1c:	cbnz	w2, 10 <_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE15_M_add_ref_copyEv+0x10>
  20:	ret
  24:	ldr	w1, [x0, #8]
  28:	add	w1, w1, #0x1
  2c:	str	w1, [x0, #8]
  30:	b	20 <_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE15_M_add_ref_copyEv+0x20>

Disassembly of section .text._ZN4llvm19BinaryStreamRefBaseINS_23WritableBinaryStreamRefENS_20WritableBinaryStreamEEC2ERKS3_:

0000000000000000 <_ZN4llvm19BinaryStreamRefBaseINS_23WritableBinaryStreamRefENS_20WritableBinaryStreamEEC1ERKS3_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	ldr	x0, [x1]
  18:	str	x0, [x19]
  1c:	ldr	x0, [x1, #8]
  20:	str	x0, [x19, #8]
  24:	cbz	x0, 2c <_ZN4llvm19BinaryStreamRefBaseINS_23WritableBinaryStreamRefENS_20WritableBinaryStreamEEC1ERKS3_+0x2c>
  28:	bl	0 <_ZN4llvm19BinaryStreamRefBaseINS_23WritableBinaryStreamRefENS_20WritableBinaryStreamEEC1ERKS3_>
  2c:	ldr	x0, [x20, #16]
  30:	str	x0, [x19, #16]
  34:	ldr	w0, [x20, #24]
  38:	str	w0, [x19, #24]
  3c:	ldur	x0, [x20, #28]
  40:	stur	x0, [x19, #28]
  44:	ldp	x19, x20, [sp, #16]
  48:	ldp	x29, x30, [sp], #32
  4c:	ret

Disassembly of section .text._ZN4llvm19BinaryStreamRefBaseINS_15BinaryStreamRefENS_12BinaryStreamEEC2ERKS3_:

0000000000000000 <_ZN4llvm19BinaryStreamRefBaseINS_15BinaryStreamRefENS_12BinaryStreamEEC1ERKS3_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	ldr	x0, [x1]
  18:	str	x0, [x19]
  1c:	ldr	x0, [x1, #8]
  20:	str	x0, [x19, #8]
  24:	cbz	x0, 2c <_ZN4llvm19BinaryStreamRefBaseINS_15BinaryStreamRefENS_12BinaryStreamEEC1ERKS3_+0x2c>
  28:	bl	0 <_ZN4llvm19BinaryStreamRefBaseINS_15BinaryStreamRefENS_12BinaryStreamEEC1ERKS3_>
  2c:	ldr	x0, [x20, #16]
  30:	str	x0, [x19, #16]
  34:	ldr	w0, [x20, #24]
  38:	str	w0, [x19, #24]
  3c:	ldur	x0, [x20, #28]
  40:	stur	x0, [x19, #28]
  44:	ldp	x19, x20, [sp, #16]
  48:	ldp	x29, x30, [sp], #32
  4c:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E10destroyAllEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E10destroyAllEv>:
   0:	ldr	w1, [x0, #24]
   4:	cbz	w1, 50 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E10destroyAllEv+0x50>
   8:	stp	x29, x30, [sp, #-32]!
   c:	ubfiz	x1, x1, #5, #32
  10:	mov	x29, sp
  14:	stp	x19, x20, [sp, #16]
  18:	ldr	x19, [x0, #8]
  1c:	add	x20, x19, x1
  20:	cmp	x19, x20
  24:	b.eq	44 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E10destroyAllEv+0x44>  // b.none
  28:	ldr	w0, [x19]
  2c:	cmn	w0, #0x3
  30:	b.hi	3c <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E10destroyAllEv+0x3c>  // b.pmore
  34:	ldr	x0, [x19, #8]
  38:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E10destroyAllEv>
  3c:	add	x19, x19, #0x20
  40:	b	20 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E10destroyAllEv+0x20>
  44:	ldp	x19, x20, [sp, #16]
  48:	ldp	x29, x30, [sp], #32
  4c:	ret
  50:	ret

Disassembly of section .text._ZN4llvm3msf17MappedBlockStreamD2Ev:

0000000000000000 <_ZN4llvm3msf17MappedBlockStreamD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x0
  14:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStreamD1Ev>
  18:	ldr	x0, [x0]
  1c:	add	x0, x0, #0x10
  20:	str	x0, [x20], #96
  24:	mov	x0, x20
  28:	bl	0 <_ZN4llvm3msf17MappedBlockStreamD1Ev>
  2c:	ldr	w1, [x20, #24]
  30:	ldr	x0, [x20, #8]
  34:	lsl	x1, x1, #5
  38:	bl	0 <_ZdlPvm>
  3c:	add	x0, x19, #0x38
  40:	bl	0 <_ZN4llvm3msf17MappedBlockStreamD1Ev>
  44:	add	x0, x19, #0x18
  48:	ldp	x19, x20, [sp, #16]
  4c:	ldp	x29, x30, [sp], #32
  50:	b	0 <_ZN4llvm3msf17MappedBlockStreamD1Ev>

Disassembly of section .text._ZN4llvm3msf17MappedBlockStreamD0Ev:

0000000000000000 <_ZN4llvm3msf17MappedBlockStreamD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm3msf17MappedBlockStreamD0Ev>
  14:	mov	x0, x19
  18:	mov	x1, #0x80                  	// #128
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm3msf25WritableMappedBlockStreamD2Ev:

0000000000000000 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	str	x19, [sp, #16]
  14:	mov	x19, x0
  18:	add	x1, x1, #0x10
  1c:	str	x1, [x0], #144
  20:	bl	0 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev>
  24:	add	x0, x19, #0x8
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	b	0 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev>

Disassembly of section .text._ZN4llvm3msf25WritableMappedBlockStreamD0Ev:

0000000000000000 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev>
  14:	mov	x0, x19
  18:	mov	x1, #0xb0                  	// #176
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E15LookupBucketForIjEEbRKT_RPSB_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E15LookupBucketForIjEEbRKT_RPSB_>:
   0:	ldr	w3, [x0, #24]
   4:	cbz	w3, a8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E15LookupBucketForIjEEbRKT_RPSB_+0xa8>
   8:	ldr	w6, [x1]
   c:	cmn	w6, #0x3
  10:	b.ls	3c <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E15LookupBucketForIjEEbRKT_RPSB_+0x3c>  // b.plast
  14:	stp	x29, x30, [sp, #-16]!
  18:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E15LookupBucketForIjEEbRKT_RPSB_>
  1c:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E15LookupBucketForIjEEbRKT_RPSB_>
  20:	mov	x29, sp
  24:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E15LookupBucketForIjEEbRKT_RPSB_>
  28:	add	x3, x3, #0x0
  2c:	add	x1, x1, #0x0
  30:	add	x0, x0, #0x0
  34:	mov	w2, #0x250                 	// #592
  38:	bl	0 <__assert_fail>
  3c:	ldr	x8, [x0, #8]
  40:	mov	w0, #0x25                  	// #37
  44:	sub	w3, w3, #0x1
  48:	mov	w5, #0x1                   	// #1
  4c:	mul	w0, w6, w0
  50:	mov	x4, #0x0                   	// #0
  54:	and	w0, w0, w3
  58:	ubfiz	x7, x0, #5, #32
  5c:	add	x1, x8, x7
  60:	ldr	w7, [x8, x7]
  64:	cmp	w6, w7
  68:	b.eq	b4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E15LookupBucketForIjEEbRKT_RPSB_+0xb4>  // b.none
  6c:	cmn	w7, #0x1
  70:	b.ne	88 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E15LookupBucketForIjEEbRKT_RPSB_+0x88>  // b.any
  74:	cmp	x4, #0x0
  78:	mov	w0, #0x0                   	// #0
  7c:	csel	x1, x4, x1, ne  // ne = any
  80:	str	x1, [x2]
  84:	ret
  88:	cmn	w7, #0x2
  8c:	b.ne	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E15LookupBucketForIjEEbRKT_RPSB_+0x98>  // b.any
  90:	cmp	x4, #0x0
  94:	csel	x4, x4, x1, ne  // ne = any
  98:	add	w0, w0, w5
  9c:	add	w5, w5, #0x1
  a0:	and	w0, w3, w0
  a4:	b	58 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E15LookupBucketForIjEEbRKT_RPSB_+0x58>
  a8:	mov	x1, #0x0                   	// #0
  ac:	mov	w0, #0x0                   	// #0
  b0:	b	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E15LookupBucketForIjEEbRKT_RPSB_+0x80>
  b4:	mov	w0, #0x1                   	// #1
  b8:	b	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E15LookupBucketForIjEEbRKT_RPSB_+0x80>

Disassembly of section .text._ZN4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb0EE23AdvancePastEmptyBucketsEv:

0000000000000000 <_ZN4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb0EE23AdvancePastEmptyBucketsEv>:
   0:	ldp	x1, x2, [x0, #16]
   4:	cmp	x1, x2
   8:	b.ls	34 <_ZN4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb0EE23AdvancePastEmptyBucketsEv+0x34>  // b.plast
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZN4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb0EE23AdvancePastEmptyBucketsEv>
  14:	adrp	x1, 0 <_ZN4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb0EE23AdvancePastEmptyBucketsEv>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZN4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb0EE23AdvancePastEmptyBucketsEv>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0x4e0                 	// #1248
  30:	bl	0 <__assert_fail>
  34:	ldr	x1, [x0, #16]
  38:	cmp	x2, x1
  3c:	b.eq	58 <_ZN4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb0EE23AdvancePastEmptyBucketsEv+0x58>  // b.none
  40:	ldr	w3, [x1]
  44:	cmn	w3, #0x3
  48:	b.ls	58 <_ZN4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb0EE23AdvancePastEmptyBucketsEv+0x58>  // b.plast
  4c:	add	x1, x1, #0x20
  50:	str	x1, [x0, #16]
  54:	b	34 <_ZN4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb0EE23AdvancePastEmptyBucketsEv+0x34>
  58:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E9initEmptyEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E9initEmptyEv>:
   0:	ldr	w1, [x0, #24]
   4:	str	xzr, [x0, #16]
   8:	sub	w2, w1, #0x1
   c:	tst	w2, w1
  10:	b.eq	3c <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E9initEmptyEv+0x3c>  // b.none
  14:	stp	x29, x30, [sp, #-16]!
  18:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E9initEmptyEv>
  1c:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E9initEmptyEv>
  20:	mov	x29, sp
  24:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E9initEmptyEv>
  28:	add	x3, x3, #0x0
  2c:	add	x1, x1, #0x0
  30:	add	x0, x0, #0x0
  34:	mov	w2, #0x15b                 	// #347
  38:	bl	0 <__assert_fail>
  3c:	ldr	x0, [x0, #8]
  40:	ubfiz	x1, x1, #5, #32
  44:	mov	w2, #0xffffffff            	// #-1
  48:	add	x1, x0, x1
  4c:	cmp	x0, x1
  50:	b.eq	5c <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E9initEmptyEv+0x5c>  // b.none
  54:	str	w2, [x0], #32
  58:	b	4c <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E9initEmptyEv+0x4c>
  5c:	ret

Disassembly of section .text._ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4initEj:

0000000000000000 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4initEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	cbnz	w1, 28 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4initEj+0x28>
  14:	str	wzr, [x0, #24]
  18:	stp	xzr, xzr, [x19, #8]
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	ret
  28:	lsl	w1, w1, #2
  2c:	mov	w0, #0x3                   	// #3
  30:	udiv	w0, w1, w0
  34:	add	w0, w0, #0x1
  38:	bl	0 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4initEj>
  3c:	str	w0, [x19, #24]
  40:	cbz	w0, 18 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4initEj+0x18>
  44:	ubfiz	x0, x0, #5, #32
  48:	bl	0 <_Znwm>
  4c:	str	x0, [x19, #8]
  50:	mov	x0, x19
  54:	ldr	x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	b	0 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4initEj>

Disassembly of section .text._ZN4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb1EE23AdvancePastEmptyBucketsEv:

0000000000000000 <_ZN4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb1EE23AdvancePastEmptyBucketsEv>:
   0:	ldp	x1, x2, [x0, #16]
   4:	cmp	x1, x2
   8:	b.ls	34 <_ZN4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb1EE23AdvancePastEmptyBucketsEv+0x34>  // b.plast
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZN4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb1EE23AdvancePastEmptyBucketsEv>
  14:	adrp	x1, 0 <_ZN4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb1EE23AdvancePastEmptyBucketsEv>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZN4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb1EE23AdvancePastEmptyBucketsEv>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0x4e0                 	// #1248
  30:	bl	0 <__assert_fail>
  34:	ldr	x1, [x0, #16]
  38:	cmp	x2, x1
  3c:	b.eq	58 <_ZN4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb1EE23AdvancePastEmptyBucketsEv+0x58>  // b.none
  40:	ldr	w3, [x1]
  44:	cmn	w3, #0x3
  48:	b.ls	58 <_ZN4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb1EE23AdvancePastEmptyBucketsEv+0x58>  // b.plast
  4c:	add	x1, x1, #0x20
  50:	str	x1, [x0, #16]
  54:	b	34 <_ZN4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb1EE23AdvancePastEmptyBucketsEv+0x34>
  58:	ret

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x25, x26, [sp, #64]
   c:	ldp	x26, x25, [x0]
  10:	stp	x19, x20, [sp, #16]
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x21, x2
  1c:	stp	x23, x24, [sp, #48]
  20:	mov	x23, x0
  24:	sub	x2, x25, x26
  28:	str	x27, [sp, #80]
  2c:	mov	x0, #0xfffffffffffffff     	// #1152921504606846975
  30:	cmp	x0, x2, asr #3
  34:	b.ne	44 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x44>  // b.any
  38:	adrp	x0, 0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
  3c:	add	x0, x0, #0x0
  40:	bl	0 <_ZSt20__throw_length_errorPKc>
  44:	mov	x20, x1
  48:	asr	x1, x2, #3
  4c:	cmp	x1, #0x0
  50:	sub	x24, x20, x26
  54:	csinc	x19, x1, xzr, ne  // ne = any
  58:	adds	x19, x19, x1
  5c:	b.cs	12c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x12c>  // b.hs, b.nlast
  60:	mov	x22, #0x0                   	// #0
  64:	cbz	x19, 7c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x7c>
  68:	cmp	x19, x0
  6c:	csel	x19, x19, x0, ls  // ls = plast
  70:	lsl	x0, x19, #3
  74:	bl	0 <_Znwm>
  78:	mov	x22, x0
  7c:	ldr	x0, [x21]
  80:	str	x0, [x22, x24]
  84:	mov	x24, x22
  88:	str	xzr, [x21]
  8c:	mov	x21, x26
  90:	add	x24, x24, #0x8
  94:	cmp	x20, x21
  98:	b.ne	d4 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xd4>  // b.any
  9c:	sub	x24, x21, x26
  a0:	mov	x20, x21
  a4:	add	x24, x24, #0x8
  a8:	add	x24, x22, x24
  ac:	mov	x27, x24
  b0:	cmp	x20, x25
  b4:	b.eq	f0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xf0>  // b.none
  b8:	ldr	x0, [x20]
  bc:	str	xzr, [x20]
  c0:	str	x0, [x27], #8
  c4:	mov	x0, x20
  c8:	add	x20, x20, #0x8
  cc:	bl	0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
  d0:	b	b0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xb0>
  d4:	ldr	x0, [x21]
  d8:	str	xzr, [x21]
  dc:	stur	x0, [x24, #-8]
  e0:	mov	x0, x21
  e4:	add	x21, x21, #0x8
  e8:	bl	0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
  ec:	b	90 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x90>
  f0:	sub	x20, x20, x21
  f4:	add	x20, x24, x20
  f8:	cbz	x26, 104 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x104>
  fc:	mov	x0, x26
 100:	bl	0 <_ZdlPv>
 104:	add	x19, x22, x19, lsl #3
 108:	ldp	x25, x26, [sp, #64]
 10c:	ldr	x27, [sp, #80]
 110:	stp	x22, x20, [x23]
 114:	str	x19, [x23, #16]
 118:	ldp	x19, x20, [sp, #16]
 11c:	ldp	x21, x22, [sp, #32]
 120:	ldp	x23, x24, [sp, #48]
 124:	ldp	x29, x30, [sp], #96
 128:	ret
 12c:	mov	x19, x0
 130:	b	70 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x70>

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_>:
   0:	mov	x2, x1
   4:	mov	x3, x0
   8:	ldp	x1, x4, [x0, #8]
   c:	cmp	x1, x4
  10:	b.eq	28 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_+0x28>  // b.none
  14:	ldr	x0, [x2]
  18:	str	xzr, [x2]
  1c:	str	x0, [x1], #8
  20:	str	x1, [x3, #8]
  24:	ret
  28:	b	0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_>

Disassembly of section .text._ZN4llvm9ErrorList4joinENS_5ErrorES1_:

0000000000000000 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x21, x8
  1c:	str	x23, [sp, #48]
  20:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
  24:	tst	w0, #0xff
  28:	b.ne	34 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x34>  // b.any
  2c:	mov	x1, x19
  30:	b	48 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x48>
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
  3c:	tst	w0, #0xff
  40:	b.ne	68 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x68>  // b.any
  44:	mov	x1, x20
  48:	mov	x0, x21
  4c:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
  50:	mov	x0, x21
  54:	ldp	x19, x20, [sp, #16]
  58:	ldp	x21, x22, [sp, #32]
  5c:	ldr	x23, [sp, #48]
  60:	ldp	x29, x30, [sp], #96
  64:	ret
  68:	mov	x0, x20
  6c:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
  70:	tst	w0, #0xff
  74:	b.eq	e8 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0xe8>  // b.none
  78:	mov	x0, x19
  7c:	ldr	x22, [x20]
  80:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
  84:	ldr	x1, [x19]
  88:	and	x22, x22, #0xfffffffffffffffe
  8c:	tst	w0, #0xff
  90:	and	x1, x1, #0xfffffffffffffffe
  94:	str	x1, [sp, #88]
  98:	str	xzr, [x19]
  9c:	b.eq	d0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0xd0>  // b.none
  a0:	ldp	x19, x23, [x1, #8]
  a4:	add	x22, x22, #0x8
  a8:	cmp	x23, x19
  ac:	b.eq	c4 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0xc4>  // b.none
  b0:	mov	x1, x19
  b4:	mov	x0, x22
  b8:	add	x19, x19, #0x8
  bc:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
  c0:	b	a8 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0xa8>
  c4:	add	x0, sp, #0x58
  c8:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
  cc:	b	44 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x44>
  d0:	add	x19, sp, #0x58
  d4:	add	x0, x22, #0x8
  d8:	mov	x1, x19
  dc:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
  e0:	mov	x0, x19
  e4:	b	c8 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0xc8>
  e8:	mov	x0, x19
  ec:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
  f0:	tst	w0, #0xff
  f4:	ldr	x2, [x19]
  f8:	ldr	x3, [x20]
  fc:	b.eq	1b0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1b0>  // b.none
 100:	and	x2, x2, #0xfffffffffffffffe
 104:	and	x3, x3, #0xfffffffffffffffe
 108:	mov	x0, x2
 10c:	ldr	x22, [x0, #8]!
 110:	ldp	x4, x1, [x0, #8]
 114:	str	xzr, [x20]
 118:	str	x3, [sp, #88]
 11c:	cmp	x4, x1
 120:	b.eq	1a0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1a0>  // b.none
 124:	add	x1, x4, #0x8
 128:	cmp	x22, x4
 12c:	b.ne	148 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x148>  // b.any
 130:	str	xzr, [sp, #88]
 134:	str	x3, [x22]
 138:	str	x1, [x0, #8]
 13c:	add	x0, sp, #0x58
 140:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 144:	b	2c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x2c>
 148:	sub	x20, x4, #0x8
 14c:	sub	x23, x20, x22
 150:	ldur	x0, [x4, #-8]
 154:	asr	x23, x23, #3
 158:	stp	xzr, x0, [x4, #-8]
 15c:	str	x1, [x2, #16]
 160:	cmp	x23, #0x0
 164:	b.le	184 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x184>
 168:	ldr	x1, [x20, #-8]!
 16c:	ldr	x0, [x20, #8]
 170:	stp	xzr, x1, [x20]
 174:	cbz	x0, 17c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x17c>
 178:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 17c:	sub	x23, x23, #0x1
 180:	b	160 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x160>
 184:	ldr	x1, [sp, #88]
 188:	str	xzr, [sp, #88]
 18c:	ldr	x0, [x22]
 190:	str	x1, [x22]
 194:	cbz	x0, 13c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x13c>
 198:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 19c:	b	13c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x13c>
 1a0:	add	x2, sp, #0x58
 1a4:	mov	x1, x22
 1a8:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 1ac:	b	13c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x13c>
 1b0:	and	x3, x3, #0xfffffffffffffffe
 1b4:	and	x2, x2, #0xfffffffffffffffe
 1b8:	str	xzr, [x19]
 1bc:	mov	x0, #0x20                  	// #32
 1c0:	str	xzr, [x20]
 1c4:	stp	x3, x2, [sp, #72]
 1c8:	bl	0 <_Znwm>
 1cc:	mov	x19, x0
 1d0:	mov	x20, x0
 1d4:	adrp	x0, 0 <_ZTVN4llvm9ErrorListE>
 1d8:	ldr	x0, [x0]
 1dc:	add	x0, x0, #0x10
 1e0:	str	x0, [x19], #8
 1e4:	ldr	x0, [sp, #72]
 1e8:	str	xzr, [x20, #8]
 1ec:	stp	xzr, xzr, [x19, #8]
 1f0:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 1f4:	tst	w0, #0xff
 1f8:	b.eq	21c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x21c>  // b.none
 1fc:	adrp	x3, 0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 200:	adrp	x1, 0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 204:	adrp	x0, 0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 208:	add	x3, x3, #0x0
 20c:	add	x1, x1, #0x0
 210:	add	x0, x0, #0x0
 214:	mov	w2, #0x181                 	// #385
 218:	bl	0 <__assert_fail>
 21c:	ldr	x0, [sp, #80]
 220:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 224:	tst	w0, #0xff
 228:	b.ne	1fc <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1fc>  // b.any
 22c:	add	x22, sp, #0x48
 230:	mov	x0, x19
 234:	mov	x1, x22
 238:	add	x23, sp, #0x50
 23c:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 240:	mov	x1, x23
 244:	mov	x0, x19
 248:	add	x19, sp, #0x58
 24c:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 250:	mov	x1, x19
 254:	mov	x0, x21
 258:	str	x20, [sp, #88]
 25c:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 260:	mov	x0, x19
 264:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 268:	mov	x0, x23
 26c:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 270:	mov	x0, x22
 274:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 278:	b	50 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x50>

Disassembly of section .text._ZN4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb0EEC2EPSA_SC_RKNS_14DebugEpochBaseEb:

0000000000000000 <_ZN4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb0EEC1EPSA_SC_RKNS_14DebugEpochBaseEb>:
   0:	ldr	x6, [x3]
   4:	stp	x3, x6, [x0]
   8:	stp	x1, x2, [x0, #16]
   c:	ldr	x1, [x3]
  10:	cmp	x1, x6
  14:	b.eq	40 <_ZN4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb0EEC1EPSA_SC_RKNS_14DebugEpochBaseEb+0x40>  // b.none
  18:	stp	x29, x30, [sp, #-16]!
  1c:	adrp	x3, 0 <_ZN4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb0EEC1EPSA_SC_RKNS_14DebugEpochBaseEb>
  20:	adrp	x1, 0 <_ZN4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb0EEC1EPSA_SC_RKNS_14DebugEpochBaseEb>
  24:	mov	x29, sp
  28:	adrp	x0, 0 <_ZN4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb0EEC1EPSA_SC_RKNS_14DebugEpochBaseEb>
  2c:	add	x3, x3, #0x0
  30:	add	x1, x1, #0x0
  34:	add	x0, x0, #0x0
  38:	mov	w2, #0x49f                 	// #1183
  3c:	bl	0 <__assert_fail>
  40:	and	w4, w4, #0xff
  44:	cbnz	w4, 4c <_ZN4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb0EEC1EPSA_SC_RKNS_14DebugEpochBaseEb+0x4c>
  48:	b	0 <_ZN4llvm16DenseMapIteratorIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EELb0EEC1EPSA_SC_RKNS_14DebugEpochBaseEb>
  4c:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E3endEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E3endEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x3, x0
   8:	mov	w4, #0x1                   	// #1
   c:	mov	x29, sp
  10:	ldr	w2, [x0, #24]
  14:	ldr	x0, [x0, #8]
  18:	add	x2, x0, x2, lsl #5
  1c:	mov	x0, x8
  20:	mov	x1, x2
  24:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E3endEv>
  28:	ldp	x29, x30, [sp], #16
  2c:	ret

Disassembly of section .text._ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv:

0000000000000000 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	ldr	w1, [x0, #24]
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	cmp	w1, #0xeff
  18:	lsr	w0, w1, #7
  1c:	mov	w1, #0x1e                  	// #30
  20:	csel	w0, w0, w1, ls  // ls = plast
  24:	mov	x20, #0x1000                	// #4096
  28:	str	x21, [sp, #32]
  2c:	lsl	x21, x20, x0
  30:	mov	x0, x21
  34:	bl	0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv>
  38:	mov	x20, x0
  3c:	ldp	w1, w0, [x19, #24]
  40:	cmp	w1, w0
  44:	b.cc	5c <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv+0x5c>  // b.lo, b.ul, b.last
  48:	add	x1, x19, #0x20
  4c:	add	x0, x19, #0x10
  50:	mov	x3, #0x8                   	// #8
  54:	mov	x2, #0x0                   	// #0
  58:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  5c:	ldr	w1, [x19, #24]
  60:	ldr	x0, [x19, #16]
  64:	str	x20, [x0, x1, lsl #3]
  68:	ldp	w0, w2, [x19, #24]
  6c:	mov	w1, w0
  70:	add	x1, x1, #0x1
  74:	cmp	x1, x2
  78:	b.ls	9c <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv+0x9c>  // b.plast
  7c:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv>
  80:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv>
  84:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv>
  88:	add	x3, x3, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x0, x0, #0x0
  94:	mov	w2, #0x43                  	// #67
  98:	bl	0 <__assert_fail>
  9c:	add	w0, w0, #0x1
  a0:	str	x20, [x19]
  a4:	add	x20, x20, x21
  a8:	str	w0, [x19, #24]
  ac:	ldr	x21, [sp, #32]
  b0:	str	x20, [x19, #8]
  b4:	ldp	x19, x20, [sp, #16]
  b8:	ldp	x29, x30, [sp], #48
  bc:	ret

Disassembly of section .text._ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE:

0000000000000000 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x4, #0x1                   	// #1
   8:	lsl	x4, x4, x2
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x20, x1
  18:	ldr	x1, [x0, #80]
  1c:	stp	x21, x22, [sp, #32]
  20:	sub	x21, x4, #0x1
  24:	ldr	x3, [x0]
  28:	add	x1, x1, x20
  2c:	stp	x23, x24, [sp, #48]
  30:	neg	x4, x4
  34:	str	x25, [sp, #64]
  38:	str	x1, [x0, #80]
  3c:	add	x1, x3, x21
  40:	and	x1, x1, x4
  44:	sub	x1, x1, x3
  48:	adds	x4, x20, x1
  4c:	b.cs	8c <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x8c>  // b.hs, b.nlast
  50:	mov	w22, w2
  54:	mov	x19, x0
  58:	ldr	x2, [x0, #8]
  5c:	sub	x2, x2, x3
  60:	cmp	x4, x2
  64:	b.hi	ac <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0xac>  // b.pmore
  68:	add	x0, x3, x1
  6c:	add	x20, x0, x20
  70:	str	x20, [x19]
  74:	ldp	x19, x20, [sp, #16]
  78:	ldp	x21, x22, [sp, #32]
  7c:	ldp	x23, x24, [sp, #48]
  80:	ldr	x25, [sp, #64]
  84:	ldp	x29, x30, [sp], #96
  88:	ret
  8c:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
  90:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
  94:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
  98:	add	x3, x3, #0x0
  9c:	add	x1, x1, #0x0
  a0:	add	x0, x0, #0x0
  a4:	mov	w2, #0xdc                  	// #220
  a8:	bl	0 <__assert_fail>
  ac:	add	x23, x20, x21
  b0:	cmp	x23, #0x1, lsl #12
  b4:	b.ls	1d4 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x1d4>  // b.plast
  b8:	mov	x0, x23
  bc:	bl	0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
  c0:	mov	x21, x0
  c4:	ldp	w1, w0, [x19, #72]
  c8:	cmp	w1, w0
  cc:	b.cc	144 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x144>  // b.lo, b.ul, b.last
  d0:	mov	w0, w0
  d4:	add	x0, x0, #0x2
  d8:	bl	0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
  dc:	mov	x1, #0xffffffff            	// #4294967295
  e0:	cmp	x0, x1
  e4:	stp	x0, x1, [sp, #80]
  e8:	add	x1, sp, #0x58
  ec:	add	x0, sp, #0x50
  f0:	csel	x0, x0, x1, ls  // ls = plast
  f4:	ldr	x25, [x0]
  f8:	lsl	x0, x25, #4
  fc:	bl	0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 100:	mov	x24, x0
 104:	mov	x3, x0
 108:	ldr	x0, [x19, #64]
 10c:	ldr	w2, [x19, #72]
 110:	mov	x1, x0
 114:	add	x2, x0, x2, lsl #4
 118:	cmp	x1, x2
 11c:	b.eq	12c <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x12c>  // b.none
 120:	ldp	x4, x5, [x1], #16
 124:	stp	x4, x5, [x3], #16
 128:	b	118 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x118>
 12c:	add	x1, x19, #0x50
 130:	cmp	x0, x1
 134:	b.eq	13c <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x13c>  // b.none
 138:	bl	0 <free>
 13c:	str	x24, [x19, #64]
 140:	str	w25, [x19, #76]
 144:	ldr	w0, [x19, #72]
 148:	ldr	x3, [x19, #64]
 14c:	mov	w1, w0
 150:	ubfiz	x2, x0, #4, #32
 154:	add	x1, x1, #0x1
 158:	add	x4, x3, x2
 15c:	str	x21, [x3, x2]
 160:	ldr	w2, [x19, #76]
 164:	str	x23, [x4, #8]
 168:	cmp	x1, x2
 16c:	b.ls	190 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x190>  // b.plast
 170:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 174:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 178:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 17c:	add	x3, x3, #0x0
 180:	add	x1, x1, #0x0
 184:	add	x0, x0, #0x0
 188:	mov	w2, #0x43                  	// #67
 18c:	b	a8 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0xa8>
 190:	add	w0, w0, #0x1
 194:	str	w0, [x19, #72]
 198:	mov	w1, w22
 19c:	mov	x0, x21
 1a0:	add	x21, x21, x23
 1a4:	bl	0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 1a8:	add	x20, x20, x0
 1ac:	cmp	x20, x21
 1b0:	b.ls	74 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x74>  // b.plast
 1b4:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 1b8:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 1bc:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 1c0:	add	x3, x3, #0x0
 1c4:	add	x1, x1, #0x0
 1c8:	add	x0, x0, #0x0
 1cc:	mov	w2, #0xfb                  	// #251
 1d0:	b	a8 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0xa8>
 1d4:	bl	0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 1d8:	ldr	x0, [x19]
 1dc:	mov	w1, w22
 1e0:	bl	0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 1e4:	add	x20, x20, x0
 1e8:	ldr	x1, [x19, #8]
 1ec:	cmp	x1, x20
 1f0:	b.cs	70 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x70>  // b.hs, b.nlast
 1f4:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 1f8:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 1fc:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 200:	add	x3, x3, #0x0
 204:	add	x1, x1, #0x0
 208:	add	x0, x0, #0x0
 20c:	mov	w2, #0x105                 	// #261
 210:	b	a8 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0xa8>

Disassembly of section .text._ZNK4llvm13ErrorInfoBase3isAIS0_EEbv:

0000000000000000 <_ZNK4llvm13ErrorInfoBase3isAIS0_EEbv>:
   0:	ldr	x1, [x0]
   4:	ldr	x2, [x1, #48]
   8:	adrp	x1, 0 <_ZN4llvm13ErrorInfoBase2IDE>
   c:	ldr	x1, [x1]
  10:	mov	x16, x2
  14:	br	x16

Disassembly of section .text._ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_.isra.0:

0000000000000000 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_.isra.0>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x8
  14:	ldr	x0, [x0]
  18:	stp	x21, x22, [sp, #32]
  1c:	add	x21, sp, #0x38
  20:	add	x22, sp, #0x30
  24:	bl	0 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_.isra.0>
  28:	tst	w0, #0xff
  2c:	ldr	x0, [x19]
  30:	str	xzr, [x19]
  34:	b.eq	a0 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_.isra.0+0xa0>  // b.none
  38:	str	x0, [sp, #48]
  3c:	bl	0 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_.isra.0>
  40:	tst	w0, #0xff
  44:	b.ne	68 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_.isra.0+0x68>  // b.any
  48:	adrp	x3, 0 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_.isra.0>
  4c:	adrp	x1, 0 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_.isra.0>
  50:	adrp	x0, 0 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_.isra.0>
  54:	add	x3, x3, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x0, x0, #0x0
  60:	mov	w2, #0x329                 	// #809
  64:	bl	0 <__assert_fail>
  68:	mov	x1, x21
  6c:	mov	x0, #0x1                   	// #1
  70:	str	x0, [sp, #56]
  74:	mov	x0, x20
  78:	bl	0 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_.isra.0>
  7c:	mov	x0, x21
  80:	bl	0 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_.isra.0>
  84:	mov	x0, x22
  88:	bl	0 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_.isra.0>
  8c:	mov	x0, x20
  90:	ldp	x19, x20, [sp, #16]
  94:	ldp	x21, x22, [sp, #32]
  98:	ldp	x29, x30, [sp], #64
  9c:	ret
  a0:	mov	x1, x21
  a4:	stp	xzr, x0, [sp, #48]
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_.isra.0>
  b0:	mov	x0, x21
  b4:	bl	0 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_.isra.0>
  b8:	b	84 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_.isra.0+0x84>

Disassembly of section .text._ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_:

0000000000000000 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>:
   0:	stp	x29, x30, [sp, #-128]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x8
  10:	mov	x20, x0
  14:	stp	x21, x22, [sp, #32]
  18:	stp	x23, x24, [sp, #48]
  1c:	stp	x25, x26, [sp, #64]
  20:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
  24:	tst	w0, #0xff
  28:	b.ne	68 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x68>  // b.any
  2c:	add	x20, sp, #0x78
  30:	mov	x0, #0x1                   	// #1
  34:	mov	x1, x20
  38:	str	x0, [sp, #120]
  3c:	mov	x0, x19
  40:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
  44:	mov	x0, x20
  48:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
  4c:	mov	x0, x19
  50:	ldp	x19, x20, [sp, #16]
  54:	ldp	x21, x22, [sp, #32]
  58:	ldp	x23, x24, [sp, #48]
  5c:	ldp	x25, x26, [sp, #64]
  60:	ldp	x29, x30, [sp], #128
  64:	ret
  68:	ldr	x0, [x20]
  6c:	str	xzr, [x20]
  70:	and	x0, x0, #0xfffffffffffffffe
  74:	str	x0, [sp, #80]
  78:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
  7c:	tst	w0, #0xff
  80:	ldr	x0, [sp, #80]
  84:	b.eq	130 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x130>  // b.none
  88:	ldp	x21, x26, [x0, #8]
  8c:	add	x20, sp, #0x58
  90:	add	x22, sp, #0x70
  94:	add	x25, sp, #0x60
  98:	add	x23, sp, #0x68
  9c:	add	x24, sp, #0x78
  a0:	mov	x1, #0x1                   	// #1
  a4:	str	x1, [sp, #88]
  a8:	mov	x1, x20
  ac:	cmp	x26, x21
  b0:	b.eq	114 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x114>  // b.none
  b4:	mov	x0, x22
  b8:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
  bc:	ldr	x0, [x21]
  c0:	str	xzr, [x21], #8
  c4:	mov	x8, x23
  c8:	str	x0, [sp, #96]
  cc:	mov	x0, x25
  d0:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
  d4:	mov	x8, x24
  d8:	mov	x1, x23
  dc:	mov	x0, x22
  e0:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
  e4:	mov	x1, x24
  e8:	mov	x0, x20
  ec:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
  f0:	mov	x0, x24
  f4:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
  f8:	mov	x0, x23
  fc:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 100:	mov	x0, x25
 104:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 108:	mov	x0, x22
 10c:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 110:	b	a8 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0xa8>
 114:	mov	x0, x19
 118:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 11c:	mov	x0, x20
 120:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 124:	add	x0, sp, #0x50
 128:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 12c:	b	4c <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x4c>
 130:	mov	x8, x19
 134:	add	x20, sp, #0x78
 138:	str	xzr, [sp, #80]
 13c:	str	x0, [sp, #120]
 140:	mov	x0, x20
 144:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 148:	mov	x0, x20
 14c:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 150:	b	124 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x124>

Disassembly of section .text._ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	stp	x21, x22, [sp, #32]
  14:	ldr	w22, [x0, #24]
  18:	stp	x23, x24, [sp, #48]
  1c:	ldr	x21, [x0, #8]
  20:	sub	w0, w1, #0x1
  24:	bl	0 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj>
  28:	cmp	w0, #0x40
  2c:	mov	w1, #0x40                  	// #64
  30:	csel	w0, w0, w1, cs  // cs = hs, nlast
  34:	str	w0, [x20, #24]
  38:	ubfiz	x0, x0, #5, #32
  3c:	bl	0 <_Znwm>
  40:	str	x0, [x20, #8]
  44:	cbnz	x21, 64 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj+0x64>
  48:	mov	x0, x20
  4c:	bl	0 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj>
  50:	ldp	x19, x20, [sp, #16]
  54:	ldp	x21, x22, [sp, #32]
  58:	ldp	x23, x24, [sp, #48]
  5c:	ldp	x29, x30, [sp], #80
  60:	ret
  64:	ubfiz	x22, x22, #5, #32
  68:	mov	x19, x21
  6c:	add	x23, x21, x22
  70:	add	x24, sp, #0x48
  74:	mov	x0, x20
  78:	bl	0 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj>
  7c:	cmp	x23, x19
  80:	b.eq	114 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj+0x114>  // b.none
  84:	ldr	w0, [x19]
  88:	cmn	w0, #0x3
  8c:	b.hi	10c <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj+0x10c>  // b.pmore
  90:	mov	x2, x24
  94:	mov	x1, x19
  98:	mov	x0, x20
  9c:	bl	0 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj>
  a0:	tst	w0, #0xff
  a4:	b.eq	c8 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj+0xc8>  // b.none
  a8:	adrp	x3, 0 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj>
  ac:	adrp	x1, 0 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj>
  b0:	adrp	x0, 0 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj>
  b4:	add	x3, x3, #0x0
  b8:	add	x1, x1, #0x0
  bc:	add	x0, x0, #0x0
  c0:	mov	w2, #0x17a                 	// #378
  c4:	bl	0 <__assert_fail>
  c8:	ldr	x1, [sp, #72]
  cc:	ldr	w2, [x19]
  d0:	mov	x0, x1
  d4:	str	w2, [x0], #8
  d8:	ldr	x2, [x19, #8]
  dc:	str	x2, [x1, #8]
  e0:	ldr	x1, [x19, #16]
  e4:	str	x1, [x0, #8]
  e8:	ldr	x1, [x19, #24]
  ec:	str	x1, [x0, #16]
  f0:	ldr	w0, [x20, #16]
  f4:	stp	xzr, xzr, [x19, #8]
  f8:	add	w0, w0, #0x1
  fc:	str	xzr, [x19, #24]
 100:	str	w0, [x20, #16]
 104:	mov	x0, #0x0                   	// #0
 108:	bl	0 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj>
 10c:	add	x19, x19, #0x20
 110:	b	7c <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj+0x7c>
 114:	mov	x1, x22
 118:	mov	x0, x21
 11c:	bl	0 <_ZdlPvm>
 120:	b	50 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj+0x50>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E6insertEOSt4pairIjS6_E:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E6insertEOSt4pairIjS6_E>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	add	x2, sp, #0x38
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x20, x8
  14:	mov	x19, x0
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	x21, x1
  20:	add	x22, sp, #0x40
  24:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E6insertEOSt4pairIjS6_E>
  28:	tst	w0, #0xff
  2c:	b.eq	74 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E6insertEOSt4pairIjS6_E+0x74>  // b.none
  30:	ldr	x0, [x19, #8]
  34:	mov	x3, x19
  38:	ldr	x1, [sp, #56]
  3c:	mov	w4, #0x1                   	// #1
  40:	ldr	w2, [x19, #24]
  44:	add	x2, x0, x2, lsl #5
  48:	mov	x0, x22
  4c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E6insertEOSt4pairIjS6_E>
  50:	strb	wzr, [x20, #32]
  54:	ldp	x0, x1, [sp, #64]
  58:	stp	x0, x1, [x20]
  5c:	ldp	x0, x1, [sp, #80]
  60:	stp	x0, x1, [x20, #16]
  64:	ldp	x19, x20, [sp, #16]
  68:	ldp	x21, x22, [sp, #32]
  6c:	ldp	x29, x30, [sp], #96
  70:	ret
  74:	ldr	x0, [sp, #56]
  78:	str	x0, [sp, #64]
  7c:	ldr	x0, [x19]
  80:	ldr	w1, [x19, #16]
  84:	add	x0, x0, #0x1
  88:	str	x0, [x19]
  8c:	ldr	w0, [x19, #24]
  90:	add	w2, w1, #0x1
  94:	add	w3, w0, w0, lsl #1
  98:	lsl	w1, w0, #1
  9c:	cmp	w3, w2, lsl #2
  a0:	b.hi	e4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E6insertEOSt4pairIjS6_E+0xe4>  // b.pmore
  a4:	mov	x0, x19
  a8:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E6insertEOSt4pairIjS6_E>
  ac:	mov	x2, x22
  b0:	mov	x1, x21
  b4:	mov	x0, x19
  b8:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E6insertEOSt4pairIjS6_E>
  bc:	ldr	x1, [sp, #64]
  c0:	cbnz	x1, 100 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E6insertEOSt4pairIjS6_E+0x100>
  c4:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E6insertEOSt4pairIjS6_E>
  c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E6insertEOSt4pairIjS6_E>
  cc:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E6insertEOSt4pairIjS6_E>
  d0:	add	x3, x3, #0x0
  d4:	add	x1, x1, #0x0
  d8:	add	x0, x0, #0x0
  dc:	mov	w2, #0x22f                 	// #559
  e0:	bl	0 <__assert_fail>
  e4:	ldr	w1, [x19, #20]
  e8:	sub	w1, w0, w1
  ec:	sub	w1, w1, w2
  f0:	cmp	w1, w0, lsr #3
  f4:	b.hi	bc <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E6insertEOSt4pairIjS6_E+0xbc>  // b.pmore
  f8:	mov	w1, w0
  fc:	b	a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E6insertEOSt4pairIjS6_E+0xa4>
 100:	ldr	w0, [x19, #16]
 104:	add	w0, w0, #0x1
 108:	str	w0, [x19, #16]
 10c:	ldr	w0, [x1]
 110:	cmn	w0, #0x1
 114:	b.eq	124 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E6insertEOSt4pairIjS6_E+0x124>  // b.none
 118:	ldr	w0, [x19, #20]
 11c:	sub	w0, w0, #0x1
 120:	str	w0, [x19, #20]
 124:	mov	x0, x21
 128:	mov	x2, x1
 12c:	mov	w4, #0x1                   	// #1
 130:	ldr	w3, [x0], #8
 134:	str	w3, [x2], #8
 138:	ldr	x3, [x21, #8]
 13c:	str	x3, [x1, #8]
 140:	ldr	x3, [x0, #8]
 144:	str	x3, [x2, #8]
 148:	str	xzr, [x0, #8]
 14c:	ldr	x3, [x0, #16]
 150:	str	xzr, [x0, #16]
 154:	ldr	x0, [x19, #8]
 158:	str	x3, [x2, #16]
 15c:	ldr	w2, [x19, #24]
 160:	mov	x3, x19
 164:	str	xzr, [x21, #8]
 168:	str	x1, [sp, #56]
 16c:	add	x2, x0, x2, lsl #5
 170:	mov	x0, x22
 174:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E6insertEOSt4pairIjS6_E>
 178:	ldp	x0, x1, [sp, #64]
 17c:	stp	x0, x1, [x20]
 180:	ldp	x0, x1, [sp, #80]
 184:	stp	x0, x1, [x20, #16]
 188:	mov	w0, #0x1                   	// #1
 18c:	strb	w0, [x20, #32]
 190:	b	64 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E6insertEOSt4pairIjS6_E+0x64>

MSFBuilder.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>:
       0:	and	w3, w2, #0xff
       4:	cbz	x1, 14 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0+0x14>
       8:	lsl	x2, x1, #3
       c:	neg	w1, w3
      10:	b	0 <memset>
      14:	ret

0000000000000018 <_ZN9__gnu_cxx13new_allocatorIjE8allocateEmPKv.isra.0>:
      18:	mov	x1, #0x1fffffffffffffff    	// #2305843009213693951
      1c:	cmp	x0, x1
      20:	b.ls	30 <_ZN9__gnu_cxx13new_allocatorIjE8allocateEmPKv.isra.0+0x18>  // b.plast
      24:	stp	x29, x30, [sp, #-16]!
      28:	mov	x29, sp
      2c:	bl	0 <_ZSt17__throw_bad_allocv>
      30:	lsl	x0, x0, #2
      34:	b	0 <_Znwm>

0000000000000038 <_ZSt11make_uniqueIN4llvm3msf8MSFErrorEJNS1_14msf_error_codeERA33_KcEENSt9_MakeUniqIT_E15__single_objectEDpOT0_.isra.0>:
      38:	stp	x29, x30, [sp, #-80]!
      3c:	mov	x29, sp
      40:	stp	x19, x20, [sp, #16]
      44:	mov	x20, x1
      48:	mov	x19, x8
      4c:	stp	x21, x22, [sp, #32]
      50:	mov	w22, w0
      54:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
      58:	mov	x21, x0
      5c:	mov	w0, #0x101                 	// #257
      60:	strh	w0, [sp, #72]
      64:	ldrb	w0, [x20]
      68:	stp	xzr, xzr, [sp, #56]
      6c:	cbz	w0, 7c <_ZSt11make_uniqueIN4llvm3msf8MSFErrorEJNS1_14msf_error_codeERA33_KcEENSt9_MakeUniqIT_E15__single_objectEDpOT0_.isra.0+0x44>
      70:	mov	w0, #0x3                   	// #3
      74:	str	x20, [sp, #56]
      78:	strb	w0, [sp, #72]
      7c:	mov	x0, #0x40                  	// #64
      80:	bl	0 <_Znwm>
      84:	add	x3, sp, #0x38
      88:	mov	x20, x0
      8c:	mov	w1, w22
      90:	mov	x2, x21
      94:	bl	0 <_ZN4llvm11StringErrorC2ESt10error_codeRKNS_5TwineE>
      98:	adrp	x1, 0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
      9c:	mov	x0, x19
      a0:	ldp	x21, x22, [sp, #32]
      a4:	str	x20, [x19]
      a8:	ldr	x1, [x1]
      ac:	add	x1, x1, #0x10
      b0:	str	x1, [x20]
      b4:	ldp	x19, x20, [sp, #16]
      b8:	ldp	x29, x30, [sp], #80
      bc:	ret

00000000000000c0 <_ZN4llvm3msf10MSFBuilder14setFreePageMapEj>:
      c0:	str	w1, [x0, #12]
      c4:	ret

00000000000000c8 <_ZN4llvm3msf10MSFBuilder11setUnknown1Ej>:
      c8:	str	w1, [x0, #16]
      cc:	ret

00000000000000d0 <_ZNK4llvm3msf10MSFBuilder18getTotalBlockCountEv>:
      d0:	ldr	w0, [x0, #48]
      d4:	ret

00000000000000d8 <_ZNK4llvm3msf10MSFBuilder13getNumStreamsEv>:
      d8:	ldr	x1, [x0, #88]
      dc:	ldr	x0, [x0, #80]
      e0:	sub	x0, x1, x0
      e4:	ubfx	x0, x0, #5, #32
      e8:	ret

00000000000000ec <_ZNK4llvm3msf10MSFBuilder13getStreamSizeEj>:
      ec:	ldr	x0, [x0, #80]
      f0:	ubfiz	x1, x1, #5, #32
      f4:	ldr	w0, [x0, x1]
      f8:	ret

00000000000000fc <_ZNK4llvm3msf10MSFBuilder15getStreamBlocksEj>:
      fc:	ubfiz	x2, x1, #5, #32
     100:	ldr	x1, [x0, #80]
     104:	add	x1, x1, x2
     108:	ldr	x0, [x1, #8]!
     10c:	ldr	x1, [x1, #8]
     110:	sub	x1, x1, x0
     114:	asr	x1, x1, #2
     118:	ret

000000000000011c <_ZNK4llvm3msf10MSFBuilder24computeDirectoryByteSizeEv>:
     11c:	stp	x29, x30, [sp, #-64]!
     120:	mov	x29, sp
     124:	stp	x19, x20, [sp, #16]
     128:	stp	x21, x22, [sp, #32]
     12c:	mov	x21, x0
     130:	ldp	x20, x22, [x0, #80]
     134:	str	x23, [sp, #48]
     138:	sub	x19, x22, x20
     13c:	asr	x19, x19, #5
     140:	lsl	x19, x19, #2
     144:	add	w19, w19, #0x4
     148:	mov	x23, x20
     14c:	cmp	x22, x20
     150:	b.eq	19c <_ZNK4llvm3msf10MSFBuilder24computeDirectoryByteSizeEv+0x80>  // b.none
     154:	ldr	w1, [x21, #20]
     158:	ldr	w0, [x20], #32
     15c:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     160:	ldp	x2, x1, [x23, #8]
     164:	sub	x1, x1, x2
     168:	asr	x1, x1, #2
     16c:	cmp	x1, w0, uxtw
     170:	b.eq	194 <_ZNK4llvm3msf10MSFBuilder24computeDirectoryByteSizeEv+0x78>  // b.none
     174:	adrp	x3, 0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     178:	adrp	x1, 0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     17c:	adrp	x0, 0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     180:	add	x3, x3, #0x0
     184:	add	x1, x1, #0x0
     188:	add	x0, x0, #0x0
     18c:	mov	w2, #0xf3                  	// #243
     190:	bl	0 <__assert_fail>
     194:	add	w19, w19, w0, lsl #2
     198:	b	148 <_ZNK4llvm3msf10MSFBuilder24computeDirectoryByteSizeEv+0x2c>
     19c:	mov	w0, w19
     1a0:	ldp	x19, x20, [sp, #16]
     1a4:	ldp	x21, x22, [sp, #32]
     1a8:	ldr	x23, [sp, #48]
     1ac:	ldp	x29, x30, [sp], #64
     1b0:	ret

00000000000001b4 <_ZNK4llvm3msf10MSFBuilder11isBlockFreeEj>:
     1b4:	add	x0, x0, #0x20
     1b8:	b	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>

00000000000001bc <_ZNK4llvm3msf10MSFBuilder16getNumFreeBlocksEv>:
     1bc:	add	x0, x0, #0x20
     1c0:	b	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>

00000000000001c4 <_ZNK4llvm3msf10MSFBuilder16getNumUsedBlocksEv>:
     1c4:	stp	x29, x30, [sp, #-32]!
     1c8:	mov	x29, sp
     1cc:	stp	x19, x20, [sp, #16]
     1d0:	mov	x20, x0
     1d4:	bl	d0 <_ZNK4llvm3msf10MSFBuilder18getTotalBlockCountEv>
     1d8:	mov	w19, w0
     1dc:	mov	x0, x20
     1e0:	bl	1bc <_ZNK4llvm3msf10MSFBuilder16getNumFreeBlocksEv>
     1e4:	sub	w0, w19, w0
     1e8:	ldp	x19, x20, [sp, #16]
     1ec:	ldp	x29, x30, [sp], #32
     1f0:	ret

00000000000001f4 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>:
     1f4:	stp	x29, x30, [sp, #-64]!
     1f8:	mov	x29, sp
     1fc:	stp	x19, x20, [sp, #16]
     200:	mov	x19, x0
     204:	stp	x21, x22, [sp, #32]
     208:	mov	x22, #0x2                   	// #2
     20c:	add	x21, x19, #0x20
     210:	strb	w3, [x0, #8]
     214:	mov	w0, #0x3                   	// #3
     218:	str	w2, [x19, #48]
     21c:	add	w2, w2, #0x3f
     220:	str	x4, [x19]
     224:	lsr	w20, w2, #6
     228:	stur	x22, [x19, #12]
     22c:	stp	w1, w0, [x19, #20]
     230:	stp	xzr, xzr, [x19, #32]
     234:	lsl	x0, x20, #3
     238:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     23c:	stp	x0, x20, [x19, #32]
     240:	mov	w2, #0x1                   	// #1
     244:	ldp	x0, x1, [x19, #32]
     248:	add	x20, sp, #0x30
     24c:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     250:	mov	x0, x21
     254:	mov	w1, #0x0                   	// #0
     258:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     25c:	stp	xzr, xzr, [x19, #56]
     260:	mov	x0, x21
     264:	stp	xzr, xzr, [x19, #72]
     268:	mov	w1, #0x0                   	// #0
     26c:	stp	xzr, xzr, [x19, #88]
     270:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     274:	stp	x0, x1, [sp, #48]
     278:	mov	x0, x20
     27c:	mov	w1, #0x0                   	// #0
     280:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     284:	mov	x0, x21
     288:	mov	w1, #0x1                   	// #1
     28c:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     290:	stp	x0, x1, [sp, #48]
     294:	mov	x0, x20
     298:	mov	w1, #0x0                   	// #0
     29c:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     2a0:	mov	w1, w22
     2a4:	mov	x0, x21
     2a8:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     2ac:	stp	x0, x1, [sp, #48]
     2b0:	mov	x0, x20
     2b4:	mov	w1, #0x0                   	// #0
     2b8:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     2bc:	ldr	w1, [x19, #24]
     2c0:	mov	x0, x21
     2c4:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     2c8:	stp	x0, x1, [sp, #48]
     2cc:	mov	x0, x20
     2d0:	mov	w1, #0x0                   	// #0
     2d4:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     2d8:	ldp	x19, x20, [sp, #16]
     2dc:	ldp	x21, x22, [sp, #32]
     2e0:	ldp	x29, x30, [sp], #64
     2e4:	ret

00000000000002e8 <_ZN4llvm10make_errorINS_17BinaryStreamErrorEJNS_17stream_error_codeEEEENS_5ErrorEDpOT0_.isra.0>:
     2e8:	stp	x29, x30, [sp, #-64]!
     2ec:	mov	x29, sp
     2f0:	stp	x19, x20, [sp, #16]
     2f4:	mov	x19, x8
     2f8:	str	x21, [sp, #32]
     2fc:	mov	w21, w0
     300:	mov	x0, #0x30                  	// #48
     304:	bl	0 <_Znwm>
     308:	mov	x20, x0
     30c:	mov	w1, w21
     310:	bl	0 <_ZN4llvm17BinaryStreamErrorC1ENS_17stream_error_codeE>
     314:	str	x20, [sp, #56]
     318:	add	x20, sp, #0x38
     31c:	mov	x0, x19
     320:	mov	x1, x20
     324:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     328:	mov	x0, x20
     32c:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     330:	mov	x0, x19
     334:	ldp	x19, x20, [sp, #16]
     338:	ldr	x21, [sp, #32]
     33c:	ldp	x29, x30, [sp], #64
     340:	ret

0000000000000344 <_ZNSt6vectorIjSaIjEE14_M_move_assignEOS1_St17integral_constantIbLb1EE.isra.0>:
     344:	stp	x29, x30, [sp, #-48]!
     348:	mov	x29, sp
     34c:	ldp	x4, x3, [x0]
     350:	stp	x4, x3, [sp, #24]
     354:	ldr	x5, [x1]
     358:	str	x5, [x0]
     35c:	ldr	x5, [x1, #8]
     360:	str	x5, [x0, #8]
     364:	ldr	x2, [x0, #16]
     368:	str	x2, [sp, #40]
     36c:	ldr	x5, [x1, #16]
     370:	str	x5, [x0, #16]
     374:	stp	xzr, xzr, [x1]
     378:	add	x0, sp, #0x18
     37c:	str	xzr, [x1, #16]
     380:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     384:	ldp	x29, x30, [sp], #48
     388:	ret

000000000000038c <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE>:
     38c:	stp	x29, x30, [sp, #-96]!
     390:	mov	x29, sp
     394:	stp	x19, x20, [sp, #16]
     398:	stp	x21, x22, [sp, #32]
     39c:	mov	x21, x8
     3a0:	stp	x23, x24, [sp, #48]
     3a4:	stp	x25, x26, [sp, #64]
     3a8:	cbnz	w1, 3d0 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x44>
     3ac:	add	x19, sp, #0x58
     3b0:	mov	x0, #0x1                   	// #1
     3b4:	mov	x1, x19
     3b8:	str	x0, [sp, #88]
     3bc:	mov	x0, x21
     3c0:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     3c4:	mov	x0, x19
     3c8:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     3cc:	b	43c <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0xb0>
     3d0:	mov	w22, w1
     3d4:	add	x20, x0, #0x20
     3d8:	mov	x25, x0
     3dc:	mov	x23, x2
     3e0:	mov	x24, x3
     3e4:	mov	x0, x20
     3e8:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     3ec:	cmp	w22, w0
     3f0:	b.ls	4c0 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x134>  // b.plast
     3f4:	ldrb	w1, [x25, #8]
     3f8:	cbnz	w1, 458 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0xcc>
     3fc:	add	x19, sp, #0x50
     400:	add	x20, sp, #0x58
     404:	mov	x8, x19
     408:	mov	w0, #0x2                   	// #2
     40c:	adrp	x1, 0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     410:	add	x1, x1, #0x0
     414:	bl	38 <_ZSt11make_uniqueIN4llvm3msf8MSFErrorEJNS1_14msf_error_codeERA33_KcEENSt9_MakeUniqIT_E15__single_objectEDpOT0_.isra.0>
     418:	mov	x1, x20
     41c:	ldr	x0, [sp, #80]
     420:	stp	xzr, x0, [sp, #80]
     424:	mov	x0, x21
     428:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     42c:	mov	x0, x20
     430:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     434:	mov	x0, x19
     438:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     43c:	mov	x0, x21
     440:	ldp	x19, x20, [sp, #16]
     444:	ldp	x21, x22, [sp, #32]
     448:	ldp	x23, x24, [sp, #48]
     44c:	ldp	x25, x26, [sp, #64]
     450:	ldp	x29, x30, [sp], #96
     454:	ret
     458:	ldr	w3, [x25, #48]
     45c:	mov	x2, #0x0                   	// #0
     460:	ldr	w1, [x25, #20]
     464:	add	w26, w22, w3
     468:	sub	w26, w26, w0
     46c:	mov	w0, w3
     470:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     474:	add	w19, w0, #0x1
     478:	mov	w1, w26
     47c:	mov	x0, x20
     480:	mov	w2, #0x1                   	// #1
     484:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     488:	cmp	w26, w19
     48c:	b.ls	4c0 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x134>  // b.plast
     490:	add	w26, w26, #0x2
     494:	mov	x0, x20
     498:	mov	w1, w26
     49c:	mov	w2, #0x1                   	// #1
     4a0:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     4a4:	add	w2, w19, #0x2
     4a8:	mov	w1, w19
     4ac:	mov	x0, x20
     4b0:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     4b4:	ldr	w0, [x25, #20]
     4b8:	add	w19, w19, w0
     4bc:	b	488 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0xfc>
     4c0:	ldr	w2, [x20, #16]
     4c4:	mov	x0, x20
     4c8:	mov	w1, #0x0                   	// #0
     4cc:	mov	x25, #0x0                   	// #0
     4d0:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     4d4:	mov	w19, w0
     4d8:	cmn	w19, #0x1
     4dc:	b.ne	500 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x174>  // b.any
     4e0:	adrp	x3, 0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     4e4:	adrp	x1, 0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     4e8:	adrp	x0, 0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     4ec:	add	x3, x3, #0x0
     4f0:	add	x1, x1, #0x0
     4f4:	add	x0, x0, #0x0
     4f8:	mov	w2, #0x86                  	// #134
     4fc:	bl	0 <__assert_fail>
     500:	cmp	x25, x24
     504:	b.cc	528 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x19c>  // b.lo, b.ul, b.last
     508:	adrp	x3, 0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     50c:	adrp	x1, 0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     510:	adrp	x0, 0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     514:	add	x3, x3, #0x0
     518:	add	x1, x1, #0x0
     51c:	add	x0, x0, #0x0
     520:	mov	w2, #0x1ab                 	// #427
     524:	b	4fc <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x170>
     528:	str	w19, [x23, x25, lsl #2]
     52c:	mov	w1, w19
     530:	mov	x0, x20
     534:	add	x25, x25, #0x1
     538:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     53c:	ldr	w2, [x20, #16]
     540:	add	w1, w19, #0x1
     544:	mov	x0, x20
     548:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     54c:	mov	w19, w0
     550:	cmp	w22, w25
     554:	b.ne	4d8 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x14c>  // b.any
     558:	b	3ac <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x20>

000000000000055c <_ZN4llvm3msf10MSFBuilder15setBlockMapAddrEj>:
     55c:	stp	x29, x30, [sp, #-96]!
     560:	mov	x29, sp
     564:	stp	x19, x20, [sp, #16]
     568:	mov	x20, x0
     56c:	ldr	w0, [x0, #24]
     570:	stp	x21, x22, [sp, #32]
     574:	add	x19, sp, #0x50
     578:	mov	x22, x8
     57c:	str	x23, [sp, #48]
     580:	cmp	w0, w1
     584:	b.ne	5a8 <_ZN4llvm3msf10MSFBuilder15setBlockMapAddrEj+0x4c>  // b.any
     588:	mov	x1, x19
     58c:	mov	x0, #0x1                   	// #1
     590:	str	x0, [sp, #80]
     594:	mov	x0, x22
     598:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     59c:	mov	x0, x19
     5a0:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     5a4:	b	5fc <_ZN4llvm3msf10MSFBuilder15setBlockMapAddrEj+0xa0>
     5a8:	ldr	w0, [x20, #48]
     5ac:	mov	w21, w1
     5b0:	cmp	w1, w0
     5b4:	b.cc	624 <_ZN4llvm3msf10MSFBuilder15setBlockMapAddrEj+0xc8>  // b.lo, b.ul, b.last
     5b8:	ldrb	w0, [x20, #8]
     5bc:	cbnz	w0, 614 <_ZN4llvm3msf10MSFBuilder15setBlockMapAddrEj+0xb8>
     5c0:	add	x20, sp, #0x48
     5c4:	adrp	x1, 0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     5c8:	mov	x8, x20
     5cc:	add	x1, x1, #0x0
     5d0:	mov	w0, #0x2                   	// #2
     5d4:	bl	38 <_ZSt11make_uniqueIN4llvm3msf8MSFErrorEJNS1_14msf_error_codeERA33_KcEENSt9_MakeUniqIT_E15__single_objectEDpOT0_.isra.0>
     5d8:	mov	x1, x19
     5dc:	ldr	x0, [sp, #72]
     5e0:	stp	xzr, x0, [sp, #72]
     5e4:	mov	x0, x22
     5e8:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     5ec:	mov	x0, x19
     5f0:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     5f4:	mov	x0, x20
     5f8:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     5fc:	mov	x0, x22
     600:	ldp	x19, x20, [sp, #16]
     604:	ldp	x21, x22, [sp, #32]
     608:	ldr	x23, [sp, #48]
     60c:	ldp	x29, x30, [sp], #96
     610:	ret
     614:	add	w1, w1, #0x1
     618:	add	x0, x20, #0x20
     61c:	mov	w2, #0x1                   	// #1
     620:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     624:	mov	w1, w21
     628:	mov	x0, x20
     62c:	bl	1b4 <_ZNK4llvm3msf10MSFBuilder11isBlockFreeEj>
     630:	tst	w0, #0xff
     634:	b.ne	654 <_ZN4llvm3msf10MSFBuilder15setBlockMapAddrEj+0xf8>  // b.any
     638:	add	x20, sp, #0x48
     63c:	adrp	x1, 0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     640:	mov	x8, x20
     644:	add	x1, x1, #0x0
     648:	mov	w0, #0x6                   	// #6
     64c:	bl	38 <_ZSt11make_uniqueIN4llvm3msf8MSFErrorEJNS1_14msf_error_codeERA33_KcEENSt9_MakeUniqIT_E15__single_objectEDpOT0_.isra.0>
     650:	b	5d8 <_ZN4llvm3msf10MSFBuilder15setBlockMapAddrEj+0x7c>
     654:	ldr	w1, [x20, #24]
     658:	add	x23, x20, #0x20
     65c:	mov	x0, x23
     660:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     664:	stp	x0, x1, [sp, #80]
     668:	mov	w1, #0x1                   	// #1
     66c:	mov	x0, x19
     670:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     674:	mov	w1, w21
     678:	mov	x0, x23
     67c:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     680:	stp	x0, x1, [sp, #80]
     684:	mov	x0, x19
     688:	mov	w1, #0x0                   	// #0
     68c:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     690:	str	w21, [x20, #24]
     694:	b	588 <_ZN4llvm3msf10MSFBuilder15setBlockMapAddrEj+0x2c>

0000000000000698 <_ZN4llvm3msf10MSFBuilder6createERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEjjb>:
     698:	stp	x29, x30, [sp, #-176]!
     69c:	mov	x4, x0
     6a0:	and	w3, w3, #0xff
     6a4:	mov	x29, sp
     6a8:	stp	x19, x20, [sp, #16]
     6ac:	cmp	w1, #0x800
     6b0:	mov	x19, x8
     6b4:	stp	x21, x22, [sp, #32]
     6b8:	add	x20, sp, #0x48
     6bc:	b.eq	6d4 <_ZN4llvm3msf10MSFBuilder6createERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEjjb+0x3c>  // b.none
     6c0:	b.hi	78c <_ZN4llvm3msf10MSFBuilder6createERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEjjb+0xf4>  // b.pmore
     6c4:	cmp	w1, #0x200
     6c8:	b.eq	6d4 <_ZN4llvm3msf10MSFBuilder6createERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEjjb+0x3c>  // b.none
     6cc:	cmp	w1, #0x400
     6d0:	b.ne	794 <_ZN4llvm3msf10MSFBuilder6createERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEjjb+0xfc>  // b.any
     6d4:	cmp	w2, #0x4
     6d8:	mov	w0, #0x4                   	// #4
     6dc:	csel	w2, w2, w0, cs  // cs = hs, nlast
     6e0:	mov	x0, x20
     6e4:	bl	1f4 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     6e8:	ldrb	w0, [x19, #104]
     6ec:	and	w0, w0, #0xfffffffc
     6f0:	orr	w0, w0, #0x2
     6f4:	strb	w0, [x19, #104]
     6f8:	ldr	x0, [sp, #72]
     6fc:	str	x0, [x19]
     700:	ldrb	w0, [sp, #80]
     704:	strb	w0, [x19, #8]
     708:	ldur	x0, [sp, #84]
     70c:	stur	x0, [x19, #12]
     710:	ldur	x0, [sp, #92]
     714:	stur	x0, [x19, #20]
     718:	ldp	x0, x1, [sp, #104]
     71c:	stp	x0, x1, [x19, #32]
     720:	ldr	w0, [sp, #120]
     724:	ldr	x1, [sp, #128]
     728:	str	x1, [x19, #56]
     72c:	ldr	x1, [sp, #136]
     730:	str	x1, [x19, #64]
     734:	ldr	x1, [sp, #144]
     738:	str	x1, [x19, #72]
     73c:	ldr	x1, [sp, #152]
     740:	str	x1, [x19, #80]
     744:	ldr	x1, [sp, #160]
     748:	str	x1, [x19, #88]
     74c:	ldr	x1, [sp, #168]
     750:	str	w0, [x19, #48]
     754:	str	x1, [x19, #96]
     758:	add	x0, x20, #0x38
     75c:	stp	xzr, xzr, [sp, #104]
     760:	str	wzr, [sp, #120]
     764:	stp	xzr, xzr, [sp, #128]
     768:	str	xzr, [sp, #144]
     76c:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     770:	ldr	x0, [sp, #104]
     774:	bl	0 <free>
     778:	mov	x0, x19
     77c:	ldp	x19, x20, [sp, #16]
     780:	ldp	x21, x22, [sp, #32]
     784:	ldp	x29, x30, [sp], #176
     788:	ret
     78c:	cmp	w1, #0x1, lsl #12
     790:	b	6d0 <_ZN4llvm3msf10MSFBuilder6createERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEjjb+0x38>
     794:	add	x22, sp, #0x40
     798:	mov	w0, #0x5                   	// #5
     79c:	mov	x8, x22
     7a0:	adrp	x1, 0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     7a4:	add	x1, x1, #0x0
     7a8:	bl	38 <_ZSt11make_uniqueIN4llvm3msf8MSFErrorEJNS1_14msf_error_codeERA33_KcEENSt9_MakeUniqIT_E15__single_objectEDpOT0_.isra.0>
     7ac:	mov	x1, x20
     7b0:	add	x21, sp, #0x38
     7b4:	ldr	x0, [sp, #64]
     7b8:	stp	xzr, x0, [sp, #64]
     7bc:	mov	x0, x21
     7c0:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     7c4:	mov	x0, x20
     7c8:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     7cc:	mov	x0, x22
     7d0:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     7d4:	ldrb	w0, [x19, #104]
     7d8:	orr	w0, w0, #0x3
     7dc:	strb	w0, [x19, #104]
     7e0:	mov	x0, x21
     7e4:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     7e8:	tst	w0, #0xff
     7ec:	b.ne	810 <_ZN4llvm3msf10MSFBuilder6createERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEjjb+0x178>  // b.any
     7f0:	adrp	x3, 0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     7f4:	adrp	x1, 0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     7f8:	adrp	x0, 0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     7fc:	add	x3, x3, #0x0
     800:	add	x1, x1, #0x0
     804:	add	x0, x0, #0x0
     808:	mov	w2, #0x1ce                 	// #462
     80c:	bl	0 <__assert_fail>
     810:	ldrb	w0, [x19, #104]
     814:	tbnz	w0, #0, 838 <_ZN4llvm3msf10MSFBuilder6createERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEjjb+0x1a0>
     818:	adrp	x3, 0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     81c:	adrp	x1, 0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     820:	adrp	x0, 0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     824:	add	x3, x3, #0x0
     828:	add	x1, x1, #0x0
     82c:	add	x0, x0, #0x0
     830:	mov	w2, #0x27c                 	// #636
     834:	b	80c <_ZN4llvm3msf10MSFBuilder6createERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEjjb+0x174>
     838:	ldr	x0, [sp, #56]
     83c:	str	xzr, [sp, #56]
     840:	and	x0, x0, #0xfffffffffffffffe
     844:	str	x0, [x19]
     848:	mov	x0, x21
     84c:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     850:	b	778 <_ZN4llvm3msf10MSFBuilder6createERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEjjb+0xe0>

0000000000000854 <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE>:
     854:	stp	x29, x30, [sp, #-128]!
     858:	mov	x29, sp
     85c:	stp	x19, x20, [sp, #16]
     860:	mov	x20, x0
     864:	add	x19, sp, #0x68
     868:	stp	x21, x22, [sp, #32]
     86c:	mov	x22, x8
     870:	stp	x23, x24, [sp, #48]
     874:	add	x23, x0, #0x20
     878:	stp	x1, x2, [sp, #80]
     87c:	ldp	x21, x24, [x0, #56]
     880:	str	x25, [sp, #64]
     884:	cmp	x24, x21
     888:	b.eq	8ac <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0x58>  // b.none
     88c:	ldr	w1, [x21], #4
     890:	mov	x0, x23
     894:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     898:	stp	x0, x1, [sp, #104]
     89c:	mov	x0, x19
     8a0:	mov	w1, #0x1                   	// #1
     8a4:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     8a8:	b	884 <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0x30>
     8ac:	ldp	x21, x23, [sp, #80]
     8b0:	add	x25, x20, #0x20
     8b4:	add	x23, x21, x23, lsl #2
     8b8:	cmp	x23, x21
     8bc:	b.eq	950 <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0xfc>  // b.none
     8c0:	ldr	w24, [x21], #4
     8c4:	mov	x0, x20
     8c8:	mov	w1, w24
     8cc:	bl	1b4 <_ZNK4llvm3msf10MSFBuilder11isBlockFreeEj>
     8d0:	tst	w0, #0xff
     8d4:	b.ne	930 <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0xdc>  // b.any
     8d8:	add	x20, sp, #0x60
     8dc:	mov	w0, #0x1                   	// #1
     8e0:	mov	x8, x20
     8e4:	adrp	x1, 0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     8e8:	add	x1, x1, #0x0
     8ec:	bl	38 <_ZSt11make_uniqueIN4llvm3msf8MSFErrorEJNS1_14msf_error_codeERA33_KcEENSt9_MakeUniqIT_E15__single_objectEDpOT0_.isra.0>
     8f0:	mov	x1, x19
     8f4:	ldr	x0, [sp, #96]
     8f8:	stp	xzr, x0, [sp, #96]
     8fc:	mov	x0, x22
     900:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     904:	mov	x0, x19
     908:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     90c:	mov	x0, x20
     910:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     914:	mov	x0, x22
     918:	ldp	x19, x20, [sp, #16]
     91c:	ldp	x21, x22, [sp, #32]
     920:	ldp	x23, x24, [sp, #48]
     924:	ldr	x25, [sp, #64]
     928:	ldp	x29, x30, [sp], #128
     92c:	ret
     930:	mov	w1, w24
     934:	mov	x0, x25
     938:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     93c:	stp	x0, x1, [sp, #104]
     940:	mov	x0, x19
     944:	mov	w1, #0x0                   	// #0
     948:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     94c:	b	8b8 <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0x64>
     950:	mov	x8, x19
     954:	add	x0, sp, #0x50
     958:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     95c:	mov	x1, x19
     960:	add	x0, x20, #0x38
     964:	bl	344 <_ZNSt6vectorIjSaIjEE14_M_move_assignEOS1_St17integral_constantIbLb1EE.isra.0>
     968:	mov	x0, x19
     96c:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     970:	mov	x1, x19
     974:	mov	x0, #0x1                   	// #1
     978:	str	x0, [sp, #104]
     97c:	mov	x0, x22
     980:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     984:	mov	x0, x19
     988:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     98c:	b	914 <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0xc0>

0000000000000990 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE>:
     990:	stp	x29, x30, [sp, #-160]!
     994:	mov	x29, sp
     998:	stp	x19, x20, [sp, #16]
     99c:	mov	x20, x0
     9a0:	mov	w0, w1
     9a4:	stp	x23, x24, [sp, #48]
     9a8:	mov	x23, x3
     9ac:	ldr	w1, [x20, #20]
     9b0:	mov	x19, x8
     9b4:	stp	x21, x22, [sp, #32]
     9b8:	mov	x22, x0
     9bc:	mov	x21, x2
     9c0:	stp	x25, x26, [sp, #64]
     9c4:	stp	x27, x28, [sp, #80]
     9c8:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     9cc:	cmp	x23, w0, uxtw
     9d0:	b.eq	a50 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0xc0>  // b.none
     9d4:	add	x22, sp, #0x68
     9d8:	adrp	x1, 0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     9dc:	mov	x8, x22
     9e0:	add	x1, x1, #0x0
     9e4:	mov	w0, #0x5                   	// #5
     9e8:	bl	38 <_ZSt11make_uniqueIN4llvm3msf8MSFErrorEJNS1_14msf_error_codeERA33_KcEENSt9_MakeUniqIT_E15__single_objectEDpOT0_.isra.0>
     9ec:	add	x21, sp, #0x80
     9f0:	add	x20, sp, #0x60
     9f4:	mov	x1, x21
     9f8:	ldr	x0, [sp, #104]
     9fc:	str	xzr, [sp, #104]
     a00:	str	x0, [sp, #128]
     a04:	mov	x0, x20
     a08:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     a0c:	mov	x0, x21
     a10:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     a14:	mov	x0, x22
     a18:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     a1c:	mov	x1, x20
     a20:	mov	x0, x19
     a24:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     a28:	mov	x0, x20
     a2c:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     a30:	mov	x0, x19
     a34:	ldp	x19, x20, [sp, #16]
     a38:	ldp	x21, x22, [sp, #32]
     a3c:	ldp	x23, x24, [sp, #48]
     a40:	ldp	x25, x26, [sp, #64]
     a44:	ldp	x27, x28, [sp, #80]
     a48:	ldp	x29, x30, [sp], #160
     a4c:	ret
     a50:	add	x28, x21, x23, lsl #2
     a54:	mov	x25, x21
     a58:	mov	x24, x21
     a5c:	add	x27, x20, #0x20
     a60:	cmp	x28, x24
     a64:	b.ne	a84 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0xf4>  // b.any
     a68:	add	x26, x20, #0x20
     a6c:	cmp	x25, x24
     a70:	b.eq	ad8 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x148>  // b.none
     a74:	ldr	w1, [x25], #4
     a78:	mov	x0, x26
     a7c:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     a80:	b	a6c <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0xdc>
     a84:	ldr	w0, [x20, #48]
     a88:	ldr	w26, [x24]
     a8c:	cmp	w26, w0
     a90:	b.cc	aa4 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x114>  // b.lo, b.ul, b.last
     a94:	add	w1, w26, #0x1
     a98:	mov	x0, x27
     a9c:	mov	w2, #0x1                   	// #1
     aa0:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     aa4:	mov	w1, w26
     aa8:	mov	x0, x27
     aac:	add	x24, x24, #0x4
     ab0:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     ab4:	tst	w0, #0xff
     ab8:	b.ne	a60 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0xd0>  // b.any
     abc:	add	x22, sp, #0x68
     ac0:	adrp	x1, 0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     ac4:	mov	x8, x22
     ac8:	add	x1, x1, #0x0
     acc:	mov	w0, #0x1                   	// #1
     ad0:	bl	38 <_ZSt11make_uniqueIN4llvm3msf8MSFErrorEJNS1_14msf_error_codeERA33_KcEENSt9_MakeUniqIT_E15__single_objectEDpOT0_.isra.0>
     ad4:	b	9ec <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x5c>
     ad8:	add	x8, sp, #0x88
     adc:	add	x0, sp, #0x70
     ae0:	str	w22, [sp, #104]
     ae4:	stp	x21, x23, [sp, #112]
     ae8:	add	x21, sp, #0x80
     aec:	str	w22, [sp, #128]
     af0:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     af4:	mov	x1, x21
     af8:	add	x22, x20, #0x50
     afc:	mov	x0, x22
     b00:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     b04:	add	x0, x21, #0x8
     b08:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     b0c:	ldp	x1, x0, [x20, #80]
     b10:	sub	x0, x0, x1
     b14:	ldrb	w1, [x19, #8]
     b18:	asr	x0, x0, #5
     b1c:	and	w1, w1, #0xfffffffc
     b20:	sub	x0, x0, #0x1
     b24:	orr	w1, w1, #0x2
     b28:	str	w0, [x19]
     b2c:	strb	w1, [x19, #8]
     b30:	b	a30 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0xa0>

0000000000000b34 <_ZN4llvm3msf10MSFBuilder9addStreamEj>:
     b34:	stp	x29, x30, [sp, #-144]!
     b38:	mov	x29, sp
     b3c:	stp	x21, x22, [sp, #32]
     b40:	mov	x22, x0
     b44:	mov	w0, w1
     b48:	add	x21, sp, #0x58
     b4c:	stp	x19, x20, [sp, #16]
     b50:	ldr	w1, [x22, #20]
     b54:	mov	x19, x8
     b58:	stp	x23, x24, [sp, #48]
     b5c:	add	x20, sp, #0x50
     b60:	str	x25, [sp, #64]
     b64:	mov	x25, x0
     b68:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     b6c:	mov	x23, x0
     b70:	mov	w1, w0
     b74:	mov	x0, x21
     b78:	stp	xzr, xzr, [sp, #88]
     b7c:	str	xzr, [sp, #104]
     b80:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     b84:	ldp	x2, x3, [sp, #88]
     b88:	mov	w1, w23
     b8c:	mov	x8, x20
     b90:	mov	x0, x22
     b94:	add	x23, sp, #0x70
     b98:	sub	x3, x3, x2
     b9c:	asr	x3, x3, #2
     ba0:	bl	38c <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE>
     ba4:	mov	x0, x20
     ba8:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     bac:	tst	w0, #0xff
     bb0:	b.eq	c00 <_ZN4llvm3msf10MSFBuilder9addStreamEj+0xcc>  // b.none
     bb4:	mov	x1, x20
     bb8:	mov	x0, x23
     bbc:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     bc0:	mov	x1, x23
     bc4:	mov	x0, x19
     bc8:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     bcc:	mov	x0, x23
     bd0:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     bd4:	mov	x0, x20
     bd8:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     bdc:	mov	x0, x21
     be0:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     be4:	mov	x0, x19
     be8:	ldp	x19, x20, [sp, #16]
     bec:	ldp	x21, x22, [sp, #32]
     bf0:	ldp	x23, x24, [sp, #48]
     bf4:	ldr	x25, [sp, #64]
     bf8:	ldp	x29, x30, [sp], #144
     bfc:	ret
     c00:	mov	x0, x20
     c04:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     c08:	ldp	x0, x20, [sp, #88]
     c0c:	str	w25, [sp, #112]
     c10:	stp	xzr, xzr, [sp, #120]
     c14:	add	x24, x22, #0x50
     c18:	str	xzr, [sp, #136]
     c1c:	sub	x20, x20, x0
     c20:	asr	x0, x20, #2
     c24:	cmp	xzr, x20, asr #2
     c28:	b.eq	c8c <_ZN4llvm3msf10MSFBuilder9addStreamEj+0x158>  // b.none
     c2c:	bl	18 <_ZN9__gnu_cxx13new_allocatorIjE8allocateEmPKv.isra.0>
     c30:	mov	x2, x0
     c34:	ldp	x0, x1, [sp, #88]
     c38:	add	x20, x2, x20
     c3c:	stp	x2, x2, [sp, #120]
     c40:	str	x20, [sp, #136]
     c44:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     c48:	str	x0, [sp, #128]
     c4c:	mov	x1, x23
     c50:	mov	x0, x24
     c54:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     c58:	add	x0, x23, #0x8
     c5c:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     c60:	ldr	x0, [x24, #8]
     c64:	ldr	x1, [x22, #80]
     c68:	sub	x0, x0, x1
     c6c:	ldrb	w1, [x19, #8]
     c70:	asr	x0, x0, #5
     c74:	and	w1, w1, #0xfffffffc
     c78:	sub	x0, x0, #0x1
     c7c:	orr	w1, w1, #0x2
     c80:	str	w0, [x19]
     c84:	strb	w1, [x19, #8]
     c88:	b	bdc <_ZN4llvm3msf10MSFBuilder9addStreamEj+0xa8>
     c8c:	mov	x2, #0x0                   	// #0
     c90:	b	c34 <_ZN4llvm3msf10MSFBuilder9addStreamEj+0x100>

0000000000000c94 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv>:
     c94:	stp	x29, x30, [sp, #-224]!
     c98:	mov	w2, #0x0                   	// #0
     c9c:	mov	x1, #0x38                  	// #56
     ca0:	mov	x29, sp
     ca4:	stp	x19, x20, [sp, #16]
     ca8:	mov	x19, x0
     cac:	stp	x23, x24, [sp, #48]
     cb0:	add	x24, x0, #0x38
     cb4:	ldr	x0, [x0]
     cb8:	stp	x21, x22, [sp, #32]
     cbc:	mov	x21, x8
     cc0:	stp	x25, x26, [sp, #64]
     cc4:	str	x27, [sp, #80]
     cc8:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     ccc:	mov	x20, x0
     cd0:	stp	x0, xzr, [sp, #136]
     cd4:	adrp	x0, 0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     cd8:	add	x0, x0, #0x0
     cdc:	str	xzr, [sp, #152]
     ce0:	str	wzr, [sp, #160]
     ce4:	stp	xzr, xzr, [sp, #168]
     ce8:	ldp	x2, x3, [x0]
     cec:	stp	x2, x3, [x20]
     cf0:	ldp	x0, x1, [x0, #16]
     cf4:	stp	x0, x1, [x20, #16]
     cf8:	ldr	w0, [x19, #24]
     cfc:	str	w0, [x20, #52]
     d00:	ldr	w0, [x19, #20]
     d04:	str	w0, [x20, #32]
     d08:	mov	x0, x19
     d0c:	stp	xzr, xzr, [sp, #184]
     d10:	stp	xzr, xzr, [sp, #200]
     d14:	str	xzr, [sp, #216]
     d18:	bl	11c <_ZNK4llvm3msf10MSFBuilder24computeDirectoryByteSizeEv>
     d1c:	ldr	w1, [x19, #12]
     d20:	str	w1, [x20, #36]
     d24:	ldr	w1, [x19, #16]
     d28:	str	w1, [x20, #48]
     d2c:	ldr	w1, [x19, #20]
     d30:	str	w0, [x20, #44]
     d34:	mov	w0, w0
     d38:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     d3c:	and	x23, x0, #0xffffffff
     d40:	ldr	x2, [x24, #8]
     d44:	ldr	x1, [x19, #56]
     d48:	sub	x2, x2, x1
     d4c:	asr	x2, x2, #2
     d50:	cmp	x2, x23
     d54:	b.cs	ea4 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x210>  // b.hs, b.nlast
     d58:	add	x25, sp, #0x70
     d5c:	sub	w26, w0, w2
     d60:	sub	w1, w0, w2
     d64:	mov	x0, x25
     d68:	stp	xzr, xzr, [sp, #112]
     d6c:	add	x22, sp, #0x60
     d70:	str	xzr, [sp, #128]
     d74:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     d78:	ldp	x2, x3, [sp, #112]
     d7c:	mov	x8, x22
     d80:	mov	w1, w26
     d84:	mov	x0, x19
     d88:	sub	x3, x3, x2
     d8c:	asr	x3, x3, #2
     d90:	bl	38c <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE>
     d94:	mov	x0, x22
     d98:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     d9c:	tst	w0, #0xff
     da0:	b.eq	e48 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x1b4>  // b.none
     da4:	add	x19, sp, #0x68
     da8:	mov	x1, x22
     dac:	mov	x0, x19
     db0:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     db4:	ldrb	w0, [x21, #88]
     db8:	orr	w0, w0, #0x3
     dbc:	strb	w0, [x21, #88]
     dc0:	mov	x0, x19
     dc4:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     dc8:	tst	w0, #0xff
     dcc:	b.ne	df0 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x15c>  // b.any
     dd0:	adrp	x3, 0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     dd4:	adrp	x1, 0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     dd8:	adrp	x0, 0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     ddc:	add	x3, x3, #0x0
     de0:	add	x1, x1, #0x0
     de4:	add	x0, x0, #0x0
     de8:	mov	w2, #0x1ce                 	// #462
     dec:	bl	0 <__assert_fail>
     df0:	mov	x0, x21
     df4:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     df8:	ldr	x1, [sp, #104]
     dfc:	and	x1, x1, #0xfffffffffffffffe
     e00:	str	x1, [x0]
     e04:	mov	x0, x19
     e08:	str	xzr, [sp, #104]
     e0c:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     e10:	mov	x0, x22
     e14:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     e18:	mov	x0, x25
     e1c:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     e20:	add	x0, sp, #0x88
     e24:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     e28:	mov	x0, x21
     e2c:	ldp	x19, x20, [sp, #16]
     e30:	ldp	x21, x22, [sp, #32]
     e34:	ldp	x23, x24, [sp, #48]
     e38:	ldp	x25, x26, [sp, #64]
     e3c:	ldr	x27, [sp, #80]
     e40:	ldp	x29, x30, [sp], #224
     e44:	ret
     e48:	mov	x0, x22
     e4c:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     e50:	ldp	x2, x3, [sp, #112]
     e54:	mov	w4, #0x0                   	// #0
     e58:	ldr	x1, [x19, #64]
     e5c:	mov	x0, x24
     e60:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     e64:	mov	x0, x25
     e68:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     e6c:	ldr	w0, [x19, #48]
     e70:	mov	x1, x23
     e74:	str	w0, [x20, #40]
     e78:	ldr	x0, [x19]
     e7c:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     e80:	ldr	x3, [x19, #56]
     e84:	lsl	x4, x23, #2
     e88:	mov	x1, #0x0                   	// #0
     e8c:	cmp	x4, x1
     e90:	b.eq	f00 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x26c>  // b.none
     e94:	ldr	w2, [x3, x1]
     e98:	str	w2, [x0, x1]
     e9c:	add	x1, x1, #0x4
     ea0:	b	e8c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x1f8>
     ea4:	b.ls	e6c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x1d8>  // b.plast
     ea8:	add	x25, sp, #0x70
     eac:	add	x27, x19, #0x20
     eb0:	stp	x1, x2, [sp, #112]
     eb4:	sub	w1, w2, w0
     eb8:	mov	x0, x25
     ebc:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     ec0:	mov	x22, x0
     ec4:	add	x26, x0, x1, lsl #2
     ec8:	cmp	x26, x22
     ecc:	b.eq	ef0 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x25c>  // b.none
     ed0:	ldr	w1, [x22], #4
     ed4:	mov	x0, x27
     ed8:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     edc:	stp	x0, x1, [sp, #112]
     ee0:	mov	x0, x25
     ee4:	mov	w1, #0x1                   	// #1
     ee8:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     eec:	b	ec8 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x234>
     ef0:	mov	x1, x23
     ef4:	mov	x0, x24
     ef8:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     efc:	b	e6c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x1d8>
     f00:	stp	x0, x23, [sp, #168]
     f04:	ldr	x0, [x19, #80]
     f08:	ldr	x1, [x19, #88]
     f0c:	cmp	x0, x1
     f10:	b.eq	1028 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x394>  // b.none
     f14:	mov	x23, x19
     f18:	sub	x1, x1, x0
     f1c:	asr	x1, x1, #5
     f20:	ldr	x0, [x23], #80
     f24:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     f28:	mov	x22, x0
     f2c:	ldp	x3, x0, [sp, #200]
     f30:	ldr	x2, [x23, #8]
     f34:	ldr	x1, [x19, #80]
     f38:	sub	x2, x2, x1
     f3c:	sub	x1, x0, x3
     f40:	asr	x2, x2, #5
     f44:	stp	x22, x2, [sp, #184]
     f48:	asr	x1, x1, #4
     f4c:	cmp	x2, x1
     f50:	b.ls	fe4 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x350>  // b.plast
     f54:	sub	x1, x2, x1
     f58:	add	x0, sp, #0xc8
     f5c:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     f60:	mov	w24, #0x0                   	// #0
     f64:	ldp	x1, x0, [x23]
     f68:	mov	w20, w24
     f6c:	sub	x0, x0, x1
     f70:	asr	x0, x0, #5
     f74:	cmp	x0, w24, uxtw
     f78:	b.ls	1028 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x394>  // b.plast
     f7c:	lsl	x3, x20, #5
     f80:	add	x0, x1, x20, lsl #5
     f84:	mov	x25, x3
     f88:	ldr	w1, [x1, x3]
     f8c:	str	w1, [x22, x20, lsl #2]
     f90:	ldr	x1, [x0, #16]
     f94:	ldr	x0, [x0, #8]
     f98:	sub	x1, x1, x0
     f9c:	ldr	x0, [x19]
     fa0:	asr	x1, x1, #2
     fa4:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
     fa8:	ldr	x3, [x19, #80]
     fac:	mov	x1, #0x0                   	// #0
     fb0:	add	x3, x3, x25
     fb4:	mov	x4, x3
     fb8:	ldr	x5, [x4, #8]!
     fbc:	ldr	x2, [x4, #8]
     fc0:	sub	x2, x2, x5
     fc4:	asr	x2, x2, #2
     fc8:	sub	x6, x2, x1
     fcc:	cmp	x6, #0x0
     fd0:	b.le	ffc <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x368>
     fd4:	ldr	w6, [x5, x1, lsl #2]
     fd8:	str	w6, [x0, x1, lsl #2]
     fdc:	add	x1, x1, #0x1
     fe0:	b	fc8 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x334>
     fe4:	b.cs	f60 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x2cc>  // b.hs, b.nlast
     fe8:	add	x2, x3, x2, lsl #4
     fec:	cmp	x0, x2
     ff0:	b.eq	f60 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x2cc>  // b.none
     ff4:	str	x2, [sp, #208]
     ff8:	b	f60 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x2cc>
     ffc:	ldr	x2, [x3, #8]
    1000:	lsl	x3, x20, #4
    1004:	ldr	x1, [x4, #8]
    1008:	add	w24, w24, #0x1
    100c:	sub	x1, x1, x2
    1010:	ldr	x2, [sp, #200]
    1014:	asr	x1, x1, #2
    1018:	add	x20, x2, x20, lsl #4
    101c:	str	x0, [x2, x3]
    1020:	str	x1, [x20, #8]
    1024:	b	f64 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x2d0>
    1028:	add	x1, x19, #0x20
    102c:	add	x0, sp, #0x90
    1030:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1034:	ldrb	w0, [x21, #88]
    1038:	and	w0, w0, #0xfffffffc
    103c:	orr	w0, w0, #0x2
    1040:	strb	w0, [x21, #88]
    1044:	mov	x0, x21
    1048:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    104c:	mov	x1, x0
    1050:	ldr	x2, [sp, #136]
    1054:	str	x2, [x1], #8
    1058:	ldp	x2, x3, [sp, #144]
    105c:	stp	x2, x3, [x0, #8]
    1060:	ldr	w2, [sp, #160]
    1064:	str	w2, [x1, #16]
    1068:	add	x1, x0, #0x40
    106c:	ldp	x2, x3, [sp, #168]
    1070:	stp	x2, x3, [x0, #32]
    1074:	ldp	x2, x3, [sp, #184]
    1078:	stp	x2, x3, [x0, #48]
    107c:	ldr	x2, [sp, #200]
    1080:	str	x2, [x0, #64]
    1084:	stp	xzr, xzr, [sp, #144]
    1088:	ldr	x0, [sp, #208]
    108c:	str	x0, [x1, #8]
    1090:	str	wzr, [sp, #160]
    1094:	ldr	x0, [sp, #216]
    1098:	str	x0, [x1, #16]
    109c:	stp	xzr, xzr, [sp, #200]
    10a0:	str	xzr, [sp, #216]
    10a4:	b	e20 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x18c>

00000000000010a8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE>:
    10a8:	sub	sp, sp, #0x230
    10ac:	stp	x29, x30, [sp]
    10b0:	mov	x29, sp
    10b4:	stp	x23, x24, [sp, #48]
    10b8:	add	x24, sp, #0x1d0
    10bc:	add	x23, sp, #0x188
    10c0:	stp	x19, x20, [sp, #16]
    10c4:	add	x19, sp, #0x150
    10c8:	stp	x21, x22, [sp, #32]
    10cc:	mov	x22, x8
    10d0:	mov	x21, x3
    10d4:	mov	x8, x24
    10d8:	stp	x25, x26, [sp, #64]
    10dc:	mov	x26, x2
    10e0:	stp	x27, x28, [sp, #80]
    10e4:	mov	x27, x1
    10e8:	str	x0, [sp, #96]
    10ec:	bl	c94 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv>
    10f0:	ldrb	w0, [sp, #552]
    10f4:	and	w1, w0, #0x1
    10f8:	bfi	w0, w1, #1, #1
    10fc:	strb	w0, [sp, #552]
    1100:	cbz	w1, 1158 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xb0>
    1104:	and	w0, w0, #0xfffffffd
    1108:	strb	w0, [sp, #552]
    110c:	mov	x0, x24
    1110:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1114:	ldr	x1, [x0]
    1118:	str	xzr, [x0]
    111c:	str	x1, [sp, #392]
    1120:	mov	x1, x23
    1124:	mov	x0, x19
    1128:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    112c:	mov	x0, x23
    1130:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1134:	mov	x1, x19
    1138:	mov	x0, x22
    113c:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1140:	mov	x0, x19
    1144:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1148:	ldrb	w0, [sp, #552]
    114c:	tbz	w0, #1, 184c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x7a4>
    1150:	mov	x0, x24
    1154:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1158:	mov	x0, x24
    115c:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1160:	mov	x20, x0
    1164:	cmp	x21, x0
    1168:	ldr	x0, [x0]
    116c:	str	x0, [x21]
    1170:	b.eq	1198 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xf0>  // b.none
    1174:	mov	x25, x21
    1178:	ldr	x0, [x25, #8]!
    117c:	bl	0 <free>
    1180:	ldp	x2, x3, [x20, #8]
    1184:	stp	x2, x3, [x21, #8]
    1188:	ldr	w1, [x20, #24]
    118c:	str	w1, [x25, #16]
    1190:	stp	xzr, xzr, [x20, #8]
    1194:	str	wzr, [x20, #24]
    1198:	ldp	x0, x1, [x20, #32]
    119c:	stp	x0, x1, [x21, #32]
    11a0:	ldp	x0, x1, [x20, #48]
    11a4:	stp	x0, x1, [x21, #48]
    11a8:	ldr	x3, [x20, #64]
    11ac:	ldr	x0, [x21, #64]
    11b0:	str	x3, [x21, #64]
    11b4:	ldr	x3, [x20, #72]
    11b8:	str	x3, [x21, #72]
    11bc:	ldr	x3, [x20, #80]
    11c0:	str	x3, [x21, #80]
    11c4:	stp	xzr, xzr, [x20, #64]
    11c8:	str	xzr, [x20, #80]
    11cc:	cbz	x0, 11d4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x12c>
    11d0:	bl	0 <_ZdlPv>
    11d4:	ldr	x0, [x21]
    11d8:	add	x25, sp, #0xb8
    11dc:	mov	x8, x25
    11e0:	mov	x1, x26
    11e4:	mov	w3, #0x0                   	// #0
    11e8:	ldr	w2, [x0, #32]
    11ec:	ldr	w0, [x0, #40]
    11f0:	mul	w2, w2, w0
    11f4:	mov	x0, x27
    11f8:	bl	0 <_ZN4llvm16FileOutputBuffer6createENS_9StringRefEmj>
    11fc:	ldrb	w0, [sp, #192]
    1200:	and	w0, w0, #0xfffffffd
    1204:	strb	w0, [sp, #192]
    1208:	tbz	w0, #0, 1288 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x1e0>
    120c:	mov	x0, x25
    1210:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1214:	ldr	x1, [x0]
    1218:	str	xzr, [x0]
    121c:	str	x1, [sp, #392]
    1220:	mov	x1, x23
    1224:	mov	x0, x19
    1228:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    122c:	mov	x0, x23
    1230:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1234:	mov	x0, x19
    1238:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    123c:	tst	w0, #0xff
    1240:	b.eq	12a8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x200>  // b.none
    1244:	mov	x1, x19
    1248:	mov	x0, x23
    124c:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1250:	mov	x1, x23
    1254:	mov	x0, x22
    1258:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    125c:	mov	x0, x23
    1260:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1264:	mov	x0, x19
    1268:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    126c:	ldrb	w0, [sp, #192]
    1270:	tbnz	w0, #1, 12b8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x210>
    1274:	tbnz	w0, #0, 183c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x794>
    1278:	mov	x0, x25
    127c:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1280:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1284:	b	1148 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xa0>
    1288:	mov	x1, x23
    128c:	mov	x0, #0x1                   	// #1
    1290:	str	x0, [sp, #392]
    1294:	mov	x0, x19
    1298:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    129c:	mov	x0, x23
    12a0:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    12a4:	b	1234 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x18c>
    12a8:	mov	x0, x19
    12ac:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    12b0:	ldrb	w0, [sp, #192]
    12b4:	tbz	w0, #1, 12c0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x218>
    12b8:	mov	x0, x25
    12bc:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    12c0:	mov	x0, x25
    12c4:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    12c8:	mov	x1, x0
    12cc:	adrp	x3, 0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    12d0:	ldr	x0, [x0]
    12d4:	adrp	x27, 0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    12d8:	str	xzr, [x1]
    12dc:	adrp	x28, 0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    12e0:	ldr	x1, [x3]
    12e4:	str	xzr, [sp, #280]
    12e8:	str	x0, [sp, #336]
    12ec:	add	x26, sp, #0x118
    12f0:	add	x1, x1, #0x10
    12f4:	str	x1, [sp, #392]
    12f8:	ldr	x1, [x0]
    12fc:	ldr	x1, [x1]
    1300:	blr	x1
    1304:	mov	x20, x0
    1308:	ldr	x0, [sp, #336]
    130c:	ldr	x1, [x0]
    1310:	ldr	x1, [x1, #8]
    1314:	blr	x1
    1318:	sub	x0, x0, x20
    131c:	ldr	x1, [x27]
    1320:	stp	x20, x0, [sp, #408]
    1324:	stp	x20, x0, [sp, #440]
    1328:	add	x1, x1, #0x10
    132c:	add	x20, sp, #0xe8
    1330:	ldr	x0, [x28]
    1334:	str	x1, [sp, #424]
    1338:	mov	w1, #0x1                   	// #1
    133c:	str	w1, [sp, #432]
    1340:	add	x0, x0, #0x10
    1344:	str	x0, [sp, #400]
    1348:	ldr	x0, [sp, #336]
    134c:	str	xzr, [sp, #336]
    1350:	str	x0, [sp, #456]
    1354:	mov	x0, x19
    1358:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    135c:	mov	x0, x26
    1360:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1364:	mov	x1, x23
    1368:	mov	x0, x26
    136c:	bl	0 <_ZN4llvm18BinaryStreamWriterC1ERNS_20WritableBinaryStreamE>
    1370:	ldr	x1, [x21]
    1374:	mov	x8, x20
    1378:	mov	x2, #0x38                  	// #56
    137c:	mov	x0, x26
    1380:	bl	0 <_ZN4llvm18BinaryStreamWriter10writeBytesENS_8ArrayRefIhEE>
    1384:	mov	x0, x20
    1388:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    138c:	adrp	x3, 0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1390:	stp	x3, x27, [sp, #104]
    1394:	tst	w0, #0xff
    1398:	str	x28, [sp, #120]
    139c:	b.eq	13dc <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x334>  // b.none
    13a0:	mov	x1, x20
    13a4:	mov	x0, x19
    13a8:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    13ac:	mov	x1, x19
    13b0:	mov	x0, x22
    13b4:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    13b8:	mov	x0, x19
    13bc:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    13c0:	mov	x0, x20
    13c4:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    13c8:	mov	x0, x26
    13cc:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    13d0:	mov	x0, x23
    13d4:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    13d8:	b	126c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x1c4>
    13dc:	mov	x0, x20
    13e0:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    13e4:	ldr	x0, [sp, #96]
    13e8:	mov	x1, x23
    13ec:	add	x28, sp, #0xa8
    13f0:	ldr	x27, [x0]
    13f4:	mov	x0, x19
    13f8:	bl	0 <_ZN4llvm23WritableBinaryStreamRefC1ERNS_20WritableBinaryStreamE>
    13fc:	mov	x2, x27
    1400:	mov	x8, x28
    1404:	mov	w3, #0x0                   	// #0
    1408:	mov	x1, x19
    140c:	mov	x0, x21
    1410:	bl	0 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb>
    1414:	add	x4, x19, #0x8
    1418:	str	x4, [sp, #128]
    141c:	mov	x0, x4
    1420:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1424:	mov	x1, x23
    1428:	mov	x0, x19
    142c:	bl	0 <_ZN4llvm23WritableBinaryStreamRefC1ERNS_20WritableBinaryStreamE>
    1430:	mov	x2, x27
    1434:	mov	x8, x20
    1438:	mov	x1, x19
    143c:	mov	w3, #0x1                   	// #1
    1440:	mov	x0, x21
    1444:	bl	0 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb>
    1448:	mov	x0, x20
    144c:	mov	w27, #0x0                   	// #0
    1450:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1454:	ldr	x4, [sp, #128]
    1458:	mov	x0, x4
    145c:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1460:	ldr	x1, [sp, #168]
    1464:	mov	x0, x19
    1468:	bl	0 <_ZN4llvm18BinaryStreamWriterC1ERNS_20WritableBinaryStreamE>
    146c:	add	x0, x21, #0x8
    1470:	str	x0, [sp, #128]
    1474:	add	x0, sp, #0xa7
    1478:	str	x0, [sp, #136]
    147c:	ldr	x0, [x21]
    1480:	add	x3, x0, #0x28
    1484:	ldr	w0, [x0, #40]
    1488:	cmp	w0, w27
    148c:	b.ls	15d8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x530>  // b.plast
    1490:	mov	w2, #0x0                   	// #0
    1494:	strb	wzr, [sp, #167]
    1498:	ldr	w0, [x3]
    149c:	add	w1, w27, w2
    14a0:	cmp	w0, w1
    14a4:	b.ls	15b4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x50c>  // b.plast
    14a8:	ldr	x0, [sp, #128]
    14ac:	str	x3, [sp, #144]
    14b0:	str	w2, [sp, #156]
    14b4:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    14b8:	and	w0, w0, #0xff
    14bc:	ldr	w2, [sp, #156]
    14c0:	ldr	x3, [sp, #144]
    14c4:	lsl	w0, w0, w2
    14c8:	ldrb	w1, [sp, #167]
    14cc:	add	w2, w2, #0x1
    14d0:	cmp	w2, #0x8
    14d4:	orr	w0, w0, w1
    14d8:	strb	w0, [sp, #167]
    14dc:	b.ne	1498 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x3f0>  // b.any
    14e0:	ldr	x1, [sp, #136]
    14e4:	add	x8, sp, #0xb0
    14e8:	mov	x2, #0x1                   	// #1
    14ec:	mov	x0, x19
    14f0:	str	x8, [sp, #144]
    14f4:	add	w27, w27, #0x8
    14f8:	bl	0 <_ZN4llvm18BinaryStreamWriter10writeBytesENS_8ArrayRefIhEE>
    14fc:	ldr	x8, [sp, #144]
    1500:	mov	x0, x8
    1504:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1508:	tst	w0, #0xff
    150c:	mov	x2, #0x1                   	// #1
    1510:	ldr	x8, [sp, #144]
    1514:	b.eq	15cc <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x524>  // b.none
    1518:	add	x0, sp, #0xd8
    151c:	stp	x0, xzr, [sp, #200]
    1520:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
    1524:	add	x1, sp, #0xc8
    1528:	strb	wzr, [sp, #216]
    152c:	ldr	x0, [x0]
    1530:	stp	xzr, xzr, [sp, #240]
    1534:	add	x0, x0, #0x10
    1538:	str	x0, [sp, #232]
    153c:	mov	x0, x20
    1540:	str	xzr, [sp, #256]
    1544:	str	w2, [sp, #264]
    1548:	str	x1, [sp, #272]
    154c:	adrp	x1, 0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1550:	add	x1, x1, #0x0
    1554:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1558:	adrp	x1, 0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    155c:	add	x1, x1, #0x0
    1560:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1564:	mov	x1, x0
    1568:	ldr	x2, [sp, #176]
    156c:	ands	x2, x2, #0xfffffffffffffffe
    1570:	b.eq	15bc <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x514>  // b.none
    1574:	ldr	x0, [x2]
    1578:	ldr	x3, [x0, #16]
    157c:	mov	x0, x2
    1580:	blr	x3
    1584:	ldr	x0, [sp, #240]
    1588:	ldr	x1, [sp, #256]
    158c:	cmp	x1, x0
    1590:	b.eq	159c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x4f4>  // b.none
    1594:	mov	x0, x20
    1598:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
    159c:	ldr	x0, [sp, #272]
    15a0:	adrp	x1, 0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    15a4:	mov	w2, #0x2c9                 	// #713
    15a8:	add	x1, x1, #0x0
    15ac:	ldr	x0, [x0]
    15b0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    15b4:	mov	w0, #0x1                   	// #1
    15b8:	b	14c4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x41c>
    15bc:	adrp	x1, 0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    15c0:	add	x1, x1, #0x0
    15c4:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    15c8:	b	1584 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x4dc>
    15cc:	mov	x0, x8
    15d0:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    15d4:	b	147c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x3d4>
    15d8:	ldrb	w0, [sp, #376]
    15dc:	cbz	w0, 1610 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x568>
    15e0:	ldr	w0, [sp, #372]
    15e4:	ldr	w1, [sp, #384]
    15e8:	cmp	w1, w0
    15ec:	b.eq	1638 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x590>  // b.none
    15f0:	adrp	x3, 0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    15f4:	adrp	x1, 0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    15f8:	adrp	x0, 0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    15fc:	add	x3, x3, #0x0
    1600:	add	x1, x1, #0x0
    1604:	add	x0, x0, #0x0
    1608:	mov	w2, #0x14f                 	// #335
    160c:	bl	0 <__assert_fail>
    1610:	ldr	x0, [sp, #360]
    1614:	cbz	x0, 1630 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x588>
    1618:	ldr	x1, [x0]
    161c:	ldr	x1, [x1, #40]
    1620:	blr	x1
    1624:	ldr	w1, [sp, #368]
    1628:	sub	w0, w0, w1
    162c:	b	15e4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x53c>
    1630:	mov	w0, #0x0                   	// #0
    1634:	b	15e4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x53c>
    1638:	mov	x0, x19
    163c:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1640:	mov	x0, x28
    1644:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1648:	ldr	x1, [x21]
    164c:	mov	x8, x20
    1650:	ldr	w0, [x1, #52]
    1654:	ldr	w1, [x1, #32]
    1658:	umull	x0, w0, w1
    165c:	ldp	x1, x2, [x21, #32]
    1660:	str	w0, [sp, #328]
    1664:	mov	x0, x26
    1668:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    166c:	mov	x0, x20
    1670:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1674:	tst	w0, #0xff
    1678:	b.ne	13a0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x2f8>  // b.any
    167c:	mov	x0, x20
    1680:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1684:	mov	x1, x23
    1688:	mov	x0, x19
    168c:	bl	0 <_ZN4llvm23WritableBinaryStreamRefC1ERNS_20WritableBinaryStreamE>
    1690:	add	x27, sp, #0xb0
    1694:	ldr	x0, [sp, #96]
    1698:	mov	x8, x27
    169c:	mov	x1, x19
    16a0:	ldr	x2, [x0]
    16a4:	mov	x0, x21
    16a8:	bl	0 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    16ac:	add	x0, x19, #0x8
    16b0:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    16b4:	ldr	x1, [sp, #176]
    16b8:	mov	x0, x19
    16bc:	bl	0 <_ZN4llvm18BinaryStreamWriterC1ERNS_20WritableBinaryStreamE>
    16c0:	ldr	x0, [sp, #360]
    16c4:	ldr	x28, [x21, #56]
    16c8:	ldr	x1, [x0]
    16cc:	ldr	x1, [x1, #16]
    16d0:	blr	x1
    16d4:	sub	w0, w0, #0x1
    16d8:	cmp	w0, #0x1
    16dc:	rev	w1, w28
    16e0:	csel	w28, w28, w1, ls  // ls = plast
    16e4:	str	w28, [sp, #232]
    16e8:	add	x28, sp, #0xc8
    16ec:	mov	x1, x20
    16f0:	mov	x8, x28
    16f4:	mov	x2, #0x4                   	// #4
    16f8:	mov	x0, x19
    16fc:	bl	0 <_ZN4llvm18BinaryStreamWriter10writeBytesENS_8ArrayRefIhEE>
    1700:	mov	x0, x28
    1704:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1708:	tst	w0, #0xff
    170c:	b.eq	174c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x6a4>  // b.none
    1710:	mov	x1, x28
    1714:	mov	x0, x20
    1718:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    171c:	mov	x1, x20
    1720:	mov	x0, x22
    1724:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1728:	mov	x0, x20
    172c:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1730:	mov	x0, x28
    1734:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1738:	mov	x0, x19
    173c:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1740:	mov	x0, x27
    1744:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1748:	b	13c8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x320>
    174c:	mov	x0, x28
    1750:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1754:	ldp	x1, x2, [x21, #48]
    1758:	mov	x8, x28
    175c:	mov	x0, x19
    1760:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1764:	mov	x0, x28
    1768:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    176c:	tst	w0, #0xff
    1770:	b.ne	1710 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x668>  // b.any
    1774:	mov	x0, x28
    1778:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    177c:	ldr	x0, [x21, #72]
    1780:	str	x0, [sp, #96]
    1784:	ldr	x21, [x21, #64]
    1788:	ldr	x0, [sp, #96]
    178c:	cmp	x0, x21
    1790:	b.eq	17c0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x718>  // b.none
    1794:	ldp	x1, x2, [x21], #16
    1798:	mov	x8, x28
    179c:	mov	x0, x19
    17a0:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    17a4:	mov	x0, x28
    17a8:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    17ac:	tst	w0, #0xff
    17b0:	b.ne	1710 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x668>  // b.any
    17b4:	mov	x0, x28
    17b8:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    17bc:	b	1788 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x6e0>
    17c0:	ldrb	w0, [x22, #72]
    17c4:	mov	x1, x22
    17c8:	and	w0, w0, #0xfffffffc
    17cc:	orr	w0, w0, #0x2
    17d0:	strb	w0, [x22, #72]
    17d4:	ldr	x0, [sp, #104]
    17d8:	ldr	x0, [x0]
    17dc:	add	x0, x0, #0x10
    17e0:	str	x0, [x1], #8
    17e4:	add	x0, sp, #0x240
    17e8:	ldp	x2, x3, [x0, #-168]
    17ec:	stp	x2, x3, [x1, #8]
    17f0:	add	x1, x22, #0x20
    17f4:	ldr	x0, [sp, #112]
    17f8:	ldr	w2, [sp, #432]
    17fc:	ldr	x0, [x0]
    1800:	add	x0, x0, #0x10
    1804:	str	x0, [x22, #32]
    1808:	mov	x0, x1
    180c:	add	x1, sp, #0x240
    1810:	str	w2, [x0, #8]
    1814:	ldp	x2, x3, [x1, #-136]
    1818:	stp	x2, x3, [x0, #16]
    181c:	ldr	x0, [sp, #120]
    1820:	ldr	x0, [x0]
    1824:	add	x0, x0, #0x10
    1828:	str	x0, [x22, #8]
    182c:	ldr	x0, [sp, #456]
    1830:	str	x0, [x22, #64]
    1834:	str	xzr, [sp, #456]
    1838:	b	1738 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x690>
    183c:	mov	x0, x25
    1840:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1844:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1848:	b	1148 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xa0>
    184c:	tbnz	w0, #0, 1880 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x7d8>
    1850:	mov	x0, x24
    1854:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1858:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    185c:	mov	x0, x22
    1860:	ldp	x29, x30, [sp]
    1864:	ldp	x19, x20, [sp, #16]
    1868:	ldp	x21, x22, [sp, #32]
    186c:	ldp	x23, x24, [sp, #48]
    1870:	ldp	x25, x26, [sp, #64]
    1874:	ldp	x27, x28, [sp, #80]
    1878:	add	sp, sp, #0x230
    187c:	ret
    1880:	mov	x0, x24
    1884:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1888:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    188c:	b	185c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x7b4>

0000000000001890 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj>:
    1890:	stp	x29, x30, [sp, #-176]!
    1894:	mov	x29, sp
    1898:	stp	x25, x26, [sp, #64]
    189c:	mov	w25, w2
    18a0:	stp	x19, x20, [sp, #16]
    18a4:	mov	x20, x0
    18a8:	add	x19, sp, #0x98
    18ac:	stp	x21, x22, [sp, #32]
    18b0:	stp	x23, x24, [sp, #48]
    18b4:	mov	x24, x8
    18b8:	mov	w23, w1
    18bc:	stp	x27, x28, [sp, #80]
    18c0:	bl	ec <_ZNK4llvm3msf10MSFBuilder13getStreamSizeEj>
    18c4:	cmp	w0, w25
    18c8:	b.ne	18ec <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x5c>  // b.any
    18cc:	mov	x1, x19
    18d0:	mov	x0, #0x1                   	// #1
    18d4:	str	x0, [sp, #152]
    18d8:	mov	x0, x24
    18dc:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    18e0:	mov	x0, x19
    18e4:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    18e8:	b	197c <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0xec>
    18ec:	ldr	w26, [x20, #20]
    18f0:	mov	w21, w0
    18f4:	mov	w0, w25
    18f8:	mov	x1, x26
    18fc:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1900:	mov	x22, x0
    1904:	mov	x1, x26
    1908:	mov	w0, w21
    190c:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1910:	cmp	w22, w0
    1914:	b.ls	19dc <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x14c>  // b.plast
    1918:	sub	w1, w22, w0
    191c:	sub	w26, w22, w0
    1920:	mov	x0, x19
    1924:	stp	xzr, xzr, [sp, #152]
    1928:	add	x21, sp, #0x88
    192c:	str	xzr, [sp, #168]
    1930:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1934:	ldp	x2, x3, [sp, #152]
    1938:	mov	x8, x21
    193c:	mov	w1, w26
    1940:	mov	x0, x20
    1944:	sub	x3, x3, x2
    1948:	asr	x3, x3, #2
    194c:	bl	38c <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE>
    1950:	mov	x0, x21
    1954:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1958:	tst	w0, #0xff
    195c:	b.eq	199c <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x10c>  // b.none
    1960:	mov	x1, x21
    1964:	mov	x0, x24
    1968:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    196c:	mov	x0, x21
    1970:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1974:	mov	x0, x19
    1978:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    197c:	mov	x0, x24
    1980:	ldp	x19, x20, [sp, #16]
    1984:	ldp	x21, x22, [sp, #32]
    1988:	ldp	x23, x24, [sp, #48]
    198c:	ldp	x25, x26, [sp, #64]
    1990:	ldp	x27, x28, [sp, #80]
    1994:	ldp	x29, x30, [sp], #176
    1998:	ret
    199c:	mov	x0, x21
    19a0:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    19a4:	ldr	x1, [x20, #80]
    19a8:	ubfiz	x0, x23, #5, #32
    19ac:	ldp	x2, x3, [sp, #152]
    19b0:	add	x0, x1, x0
    19b4:	add	x0, x0, #0x8
    19b8:	mov	w4, #0x0                   	// #0
    19bc:	ldr	x1, [x0, #8]
    19c0:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    19c4:	mov	x0, x19
    19c8:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    19cc:	ldr	x0, [x20, #80]
    19d0:	ubfiz	x23, x23, #5, #32
    19d4:	str	w25, [x0, x23]
    19d8:	b	18cc <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x3c>
    19dc:	b.cs	19cc <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x13c>  // b.hs, b.nlast
    19e0:	ldr	x1, [x20, #80]
    19e4:	ubfiz	x26, x23, #5, #32
    19e8:	sub	w21, w0, w22
    19ec:	add	x0, x1, x26
    19f0:	ldr	x1, [x0, #8]!
    19f4:	ldr	x2, [x0, #8]
    19f8:	sub	x2, x2, x1
    19fc:	asr	x2, x2, #2
    1a00:	stp	x1, x2, [sp, #120]
    1a04:	cmp	x2, w22, uxtw
    1a08:	and	x1, x22, #0xffffffff
    1a0c:	b.cs	1a30 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x1a0>  // b.hs, b.nlast
    1a10:	adrp	x3, 0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1a14:	adrp	x1, 0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1a18:	adrp	x0, 0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1a1c:	add	x3, x3, #0x0
    1a20:	add	x1, x1, #0x0
    1a24:	add	x0, x0, #0x0
    1a28:	mov	w2, #0xc6                  	// #198
    1a2c:	bl	0 <__assert_fail>
    1a30:	add	x28, sp, #0x78
    1a34:	sub	x2, x2, x1
    1a38:	mov	x0, x28
    1a3c:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1a40:	add	x2, x20, #0x20
    1a44:	mov	x22, x0
    1a48:	add	x27, x0, x1, lsl #2
    1a4c:	cmp	x27, x22
    1a50:	b.eq	1a7c <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x1ec>  // b.none
    1a54:	ldr	w1, [x22], #4
    1a58:	mov	x0, x2
    1a5c:	str	x2, [sp, #104]
    1a60:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1a64:	stp	x0, x1, [sp, #152]
    1a68:	mov	x0, x19
    1a6c:	mov	w1, #0x1                   	// #1
    1a70:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1a74:	ldr	x2, [sp, #104]
    1a78:	b	1a4c <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x1bc>
    1a7c:	ldr	x0, [x20, #80]
    1a80:	mov	w1, w21
    1a84:	add	x26, x0, x26
    1a88:	mov	x0, x28
    1a8c:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1a90:	add	x26, x26, #0x8
    1a94:	mov	x8, x19
    1a98:	stp	x0, x1, [sp, #136]
    1a9c:	add	x0, sp, #0x88
    1aa0:	bl	0 <_ZN4llvm9BitVector10init_wordsENS_15MutableArrayRefImEEb.isra.0>
    1aa4:	mov	x1, x19
    1aa8:	mov	x0, x26
    1aac:	bl	344 <_ZNSt6vectorIjSaIjEE14_M_move_assignEOS1_St17integral_constantIbLb1EE.isra.0>
    1ab0:	b	19c4 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x134>

Disassembly of section .text._ZNK4llvm12BinaryStream8getFlagsEv:

0000000000000000 <_ZNK4llvm12BinaryStream8getFlagsEv>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm20WritableBinaryStream8getFlagsEv:

0000000000000000 <_ZNK4llvm20WritableBinaryStream8getFlagsEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm16BinaryByteStream9getEndianEv:

0000000000000000 <_ZNK4llvm16BinaryByteStream9getEndianEv>:
   0:	ldr	w0, [x0, #8]
   4:	ret

Disassembly of section .text._ZN4llvm16BinaryByteStream9getLengthEv:

0000000000000000 <_ZN4llvm16BinaryByteStream9getLengthEv>:
   0:	ldr	w0, [x0, #24]
   4:	ret

Disassembly of section .text._ZN4llvm16BinaryByteStreamD2Ev:

0000000000000000 <_ZN4llvm16BinaryByteStreamD1Ev>:
   0:	ret

Disassembly of section .text._ZNK4llvm23MutableBinaryByteStream9getEndianEv:

0000000000000000 <_ZNK4llvm23MutableBinaryByteStream9getEndianEv>:
   0:	ldr	w0, [x0, #32]
   4:	ret

Disassembly of section .text._ZN4llvm23MutableBinaryByteStream9getLengthEv:

0000000000000000 <_ZN4llvm23MutableBinaryByteStream9getLengthEv>:
   0:	ldr	w0, [x0, #48]
   4:	ret

Disassembly of section .text._ZN4llvm23MutableBinaryByteStreamD2Ev:

0000000000000000 <_ZN4llvm23MutableBinaryByteStreamD1Ev>:
   0:	ret

Disassembly of section .text._ZNK4llvm20FileBufferByteStream9getEndianEv:

0000000000000000 <_ZNK4llvm20FileBufferByteStream9getEndianEv>:
   0:	ldr	w0, [x0, #40]
   4:	ret

Disassembly of section .text._ZN4llvm20FileBufferByteStream9getLengthEv:

0000000000000000 <_ZN4llvm20FileBufferByteStream9getLengthEv>:
   0:	ldr	w0, [x0, #56]
   4:	ret

Disassembly of section .text._ZNK4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEE14dynamicClassIDEv:

0000000000000000 <_ZNK4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEE14dynamicClassIDEv>:
   0:	adrp	x0, 0 <_ZN4llvm3msf8MSFError2IDE>
   4:	ldr	x0, [x0]
   8:	ret

Disassembly of section .text._ZNK4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEE3isAEPKv:

0000000000000000 <_ZNK4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEE3isAEPKv>:
   0:	adrp	x0, 0 <_ZN4llvm3msf8MSFError2IDE>
   4:	ldr	x0, [x0]
   8:	cmp	x1, x0
   c:	b.eq	34 <_ZNK4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEE3isAEPKv+0x34>  // b.none
  10:	adrp	x0, 0 <_ZN4llvm11StringError2IDE>
  14:	ldr	x0, [x0]
  18:	cmp	x1, x0
  1c:	b.eq	34 <_ZNK4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEE3isAEPKv+0x34>  // b.none
  20:	adrp	x0, 0 <_ZN4llvm13ErrorInfoBase2IDE>
  24:	ldr	x0, [x0]
  28:	cmp	x1, x0
  2c:	cset	w0, eq  // eq = none
  30:	ret
  34:	mov	w0, #0x1                   	// #1
  38:	b	30 <_ZNK4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEE3isAEPKv+0x30>

Disassembly of section .text._ZN4llvm16BinaryByteStreamD0Ev:

0000000000000000 <_ZN4llvm16BinaryByteStreamD0Ev>:
   0:	mov	x1, #0x20                  	// #32
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm23MutableBinaryByteStreamD0Ev:

0000000000000000 <_ZN4llvm23MutableBinaryByteStreamD0Ev>:
   0:	mov	x1, #0x38                  	// #56
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEED2Ev:

0000000000000000 <_ZN4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEED1Ev>:
   0:	adrp	x1, 0 <_ZTVN4llvm11StringErrorE>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0], #8
  10:	b	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>

Disassembly of section .text._ZN4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEED0Ev:

0000000000000000 <_ZN4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEED0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEED0Ev>
  14:	mov	x0, x19
  18:	mov	x1, #0x40                  	// #64
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm3msf8MSFErrorD2Ev:

0000000000000000 <_ZN4llvm3msf8MSFErrorD1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm3msf8MSFErrorD1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0]
  10:	b	0 <_ZN4llvm3msf8MSFErrorD1Ev>

Disassembly of section .text._ZN4llvm3msf8MSFErrorD0Ev:

0000000000000000 <_ZN4llvm3msf8MSFErrorD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm3msf8MSFErrorD0Ev>
  14:	mov	x0, x19
  18:	mov	x1, #0x40                  	// #64
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	b	0 <_ZdlPvm>

Disassembly of section .text._ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev:

0000000000000000 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-128]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	add	x20, sp, #0x30
  10:	add	x1, x20, #0x10
  14:	stp	x1, xzr, [sp, #48]
  18:	mov	w1, #0x1                   	// #1
  1c:	mov	x19, x8
  20:	str	w1, [sp, #112]
  24:	adrp	x1, 0 <_ZTVN4llvm18raw_string_ostreamE>
  28:	strb	wzr, [sp, #64]
  2c:	ldr	x1, [x1]
  30:	str	x21, [sp, #32]
  34:	stp	xzr, xzr, [sp, #88]
  38:	add	x21, sp, #0x50
  3c:	add	x1, x1, #0x10
  40:	str	x1, [sp, #80]
  44:	ldr	x1, [x0]
  48:	str	xzr, [sp, #104]
  4c:	str	x20, [sp, #120]
  50:	ldr	x2, [x1, #16]
  54:	mov	x1, x21
  58:	blr	x2
  5c:	ldr	x0, [sp, #88]
  60:	ldr	x1, [sp, #104]
  64:	cmp	x1, x0
  68:	b.eq	74 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x74>  // b.none
  6c:	mov	x0, x21
  70:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  74:	ldr	x1, [sp, #120]
  78:	mov	x0, x19
  7c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
  80:	mov	x0, x21
  84:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
  88:	mov	x0, x20
  8c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
  90:	mov	x0, x19
  94:	ldp	x19, x20, [sp, #16]
  98:	ldr	x21, [sp, #32]
  9c:	ldp	x29, x30, [sp], #128
  a0:	ret

Disassembly of section .text._ZN4llvm7alignToEmmm:

0000000000000000 <_ZN4llvm7alignToEmmm>:
   0:	cbnz	x1, 2c <_ZN4llvm7alignToEmmm+0x2c>
   4:	stp	x29, x30, [sp, #-16]!
   8:	adrp	x3, 0 <_ZN4llvm7alignToEmmm>
   c:	adrp	x1, 0 <_ZN4llvm7alignToEmmm>
  10:	mov	x29, sp
  14:	adrp	x0, 0 <_ZN4llvm7alignToEmmm>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x2ce                 	// #718
  28:	bl	0 <__assert_fail>
  2c:	udiv	x3, x2, x1
  30:	sub	x4, x0, #0x1
  34:	msub	x2, x3, x1, x2
  38:	sub	x0, x1, x2
  3c:	add	x0, x0, x4
  40:	udiv	x0, x0, x1
  44:	madd	x0, x0, x1, x2
  48:	ret

Disassembly of section .text._ZN4llvm10divideCeilEmm:

0000000000000000 <_ZN4llvm10divideCeilEmm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x2, #0x0                   	// #0
   8:	mov	x29, sp
   c:	str	x19, [sp, #16]
  10:	mov	x19, x1
  14:	bl	0 <_ZN4llvm10divideCeilEmm>
  18:	udiv	x0, x0, x19
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZN4llvm11safe_mallocEm:

0000000000000000 <_ZN4llvm11safe_mallocEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x0, x19
  14:	bl	0 <malloc>
  18:	mov	x20, x0
  1c:	cbnz	x0, 34 <_ZN4llvm11safe_mallocEm+0x34>
  20:	cbz	x19, 44 <_ZN4llvm11safe_mallocEm+0x44>
  24:	adrp	x0, 0 <_ZN4llvm11safe_mallocEm>
  28:	mov	w1, #0x1                   	// #1
  2c:	add	x0, x0, #0x0
  30:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  34:	mov	x0, x20
  38:	ldp	x19, x20, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret
  44:	mov	x19, #0x1                   	// #1
  48:	b	10 <_ZN4llvm11safe_mallocEm+0x10>

Disassembly of section .text._ZN4llvm9BitVector9referenceaSEb:

0000000000000000 <_ZN4llvm9BitVector9referenceaSEb>:
   0:	ldr	x4, [x0]
   4:	mov	x2, #0x1                   	// #1
   8:	ldr	w3, [x0, #8]
   c:	tst	w1, #0xff
  10:	ldr	x5, [x4]
  14:	lsl	x2, x2, x3
  18:	bic	x3, x5, x2
  1c:	orr	x2, x2, x5
  20:	csel	x2, x2, x3, ne  // ne = any
  24:	str	x2, [x4]
  28:	ret

Disassembly of section .text._ZN4llvm9alignAddrEPKvNS_5AlignE:

0000000000000000 <_ZN4llvm9alignAddrEPKvNS_5AlignE>:
   0:	mov	x2, #0x1                   	// #1
   4:	lsl	x1, x2, x1
   8:	sub	x2, x1, #0x1
   c:	adds	x0, x0, x2
  10:	b.cc	3c <_ZN4llvm9alignAddrEPKvNS_5AlignE+0x3c>  // b.lo, b.ul, b.last
  14:	stp	x29, x30, [sp, #-16]!
  18:	adrp	x3, 0 <_ZN4llvm9alignAddrEPKvNS_5AlignE>
  1c:	adrp	x1, 0 <_ZN4llvm9alignAddrEPKvNS_5AlignE>
  20:	mov	x29, sp
  24:	adrp	x0, 0 <_ZN4llvm9alignAddrEPKvNS_5AlignE>
  28:	add	x3, x3, #0x0
  2c:	add	x1, x1, #0x0
  30:	add	x0, x0, #0x0
  34:	mov	w2, #0xba                  	// #186
  38:	bl	0 <__assert_fail>
  3c:	neg	x1, x1
  40:	and	x0, x1, x0
  44:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	str	x21, [sp, #32]
  14:	mov	x21, x1
  18:	cbz	x1, 54 <_ZN4llvm11raw_ostreamlsEPKc+0x54>
  1c:	mov	x0, x1
  20:	bl	0 <strlen>
  24:	mov	x20, x0
  28:	ldp	x1, x0, [x19, #16]
  2c:	sub	x1, x1, x0
  30:	cmp	x1, x20
  34:	b.cs	5c <_ZN4llvm11raw_ostreamlsEPKc+0x5c>  // b.hs, b.nlast
  38:	mov	x2, x20
  3c:	mov	x1, x21
  40:	mov	x0, x19
  44:	ldp	x19, x20, [sp, #16]
  48:	ldr	x21, [sp, #32]
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  54:	mov	x20, #0x0                   	// #0
  58:	b	28 <_ZN4llvm11raw_ostreamlsEPKc+0x28>
  5c:	cbz	x20, 78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>
  60:	mov	x2, x20
  64:	mov	x1, x21
  68:	bl	0 <memcpy>
  6c:	ldr	x0, [x19, #24]
  70:	add	x0, x0, x20
  74:	str	x0, [x19, #24]
  78:	mov	x0, x19
  7c:	ldp	x19, x20, [sp, #16]
  80:	ldr	x21, [sp, #32]
  84:	ldp	x29, x30, [sp], #48
  88:	ret

Disassembly of section .text._ZN4llvm5ErrorC2EOS0_:

0000000000000000 <_ZN4llvm5ErrorC1EOS0_>:
   0:	ldr	x2, [x1]
   4:	str	xzr, [x1]
   8:	orr	x2, x2, #0x1
   c:	str	x2, [x0]
  10:	ret

Disassembly of section .text._ZN4llvm5ErrorC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EE:

0000000000000000 <_ZN4llvm5ErrorC1ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EE>:
   0:	ldr	x2, [x1]
   4:	str	xzr, [x1]
   8:	orr	x1, x2, #0x1
   c:	str	x1, [x0]
  10:	ret

Disassembly of section .text._ZN4llvm5ErrorD2Ev:

0000000000000000 <_ZN4llvm5ErrorD1Ev>:
   0:	ldr	x1, [x0]
   4:	tbnz	w1, #0, 10 <_ZN4llvm5ErrorD1Ev+0x10>
   8:	tst	x1, #0xfffffffffffffffe
   c:	b.eq	1c <_ZN4llvm5ErrorD1Ev+0x1c>  // b.none
  10:	stp	x29, x30, [sp, #-16]!
  14:	mov	x29, sp
  18:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
  1c:	ret

Disassembly of section .text._ZN4llvm23MutableBinaryByteStream6commitEv:

0000000000000000 <_ZN4llvm23MutableBinaryByteStream6commitEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x0, #0x1                   	// #1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	add	x20, sp, #0x28
  14:	mov	x1, x20
  18:	mov	x19, x8
  1c:	str	x0, [sp, #40]
  20:	mov	x0, x8
  24:	bl	0 <_ZN4llvm23MutableBinaryByteStream6commitEv>
  28:	mov	x0, x20
  2c:	bl	0 <_ZN4llvm23MutableBinaryByteStream6commitEv>
  30:	mov	x0, x19
  34:	ldp	x19, x20, [sp, #16]
  38:	ldp	x29, x30, [sp], #48
  3c:	ret

Disassembly of section .text._ZN4llvm5ErrorcvbEv:

0000000000000000 <_ZN4llvm5ErrorcvbEv>:
   0:	ldr	x1, [x0]
   4:	ands	x2, x1, #0xfffffffffffffffe
   8:	cset	x1, ne  // ne = any
   c:	orr	x1, x1, x2
  10:	str	x1, [x0]
  14:	tst	x1, #0xfffffffffffffffe
  18:	cset	w0, ne  // ne = any
  1c:	ret

Disassembly of section .text._ZN4llvm3msf9MSFLayoutD2Ev:

0000000000000000 <_ZN4llvm3msf9MSFLayoutD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	ldr	x0, [x0, #64]
  14:	cbz	x0, 1c <_ZN4llvm3msf9MSFLayoutD1Ev+0x1c>
  18:	bl	0 <_ZdlPv>
  1c:	ldr	x0, [x19, #8]
  20:	ldr	x19, [sp, #16]
  24:	ldp	x29, x30, [sp], #32
  28:	b	0 <free>

Disassembly of section .text._ZNK4llvm15MutableArrayRefImEixEm:

0000000000000000 <_ZNK4llvm15MutableArrayRefImEixEm>:
   0:	ldr	x2, [x0, #8]
   4:	cmp	x1, x2
   8:	b.cc	34 <_ZNK4llvm15MutableArrayRefImEixEm+0x34>  // b.lo, b.ul, b.last
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZNK4llvm15MutableArrayRefImEixEm>
  14:	adrp	x1, 0 <_ZNK4llvm15MutableArrayRefImEixEm>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZNK4llvm15MutableArrayRefImEixEm>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0x1ab                 	// #427
  30:	bl	0 <__assert_fail>
  34:	ldr	x0, [x0]
  38:	add	x0, x0, x1, lsl #3
  3c:	ret

Disassembly of section .text._ZN4llvm9BitVectorixEj:

0000000000000000 <_ZN4llvm9BitVectorixEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	w19, w1
  10:	ldr	w1, [x0, #16]
  14:	cmp	w1, w19
  18:	b.hi	3c <_ZN4llvm9BitVectorixEj+0x3c>  // b.pmore
  1c:	adrp	x3, 0 <_ZN4llvm9BitVectorixEj>
  20:	adrp	x1, 0 <_ZN4llvm9BitVectorixEj>
  24:	adrp	x0, 0 <_ZN4llvm9BitVectorixEj>
  28:	add	x3, x3, #0x0
  2c:	add	x1, x1, #0x0
  30:	add	x0, x0, #0x0
  34:	mov	w2, #0x1eb                 	// #491
  38:	bl	0 <__assert_fail>
  3c:	lsr	w1, w19, #6
  40:	bl	0 <_ZN4llvm9BitVectorixEj>
  44:	and	x1, x19, #0x3f
  48:	ldr	x19, [sp, #16]
  4c:	ldp	x29, x30, [sp], #32
  50:	ret

Disassembly of section .text._ZN4llvm9BitVector5resetEjj:

0000000000000000 <_ZN4llvm9BitVector5resetEjj>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	cmp	w1, w2
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	stp	x21, x22, [sp, #32]
  14:	str	x23, [sp, #48]
  18:	b.ls	3c <_ZN4llvm9BitVector5resetEjj+0x3c>  // b.plast
  1c:	adrp	x3, 0 <_ZN4llvm9BitVector5resetEjj>
  20:	adrp	x1, 0 <_ZN4llvm9BitVector5resetEjj>
  24:	adrp	x0, 0 <_ZN4llvm9BitVector5resetEjj>
  28:	add	x3, x3, #0x0
  2c:	add	x1, x1, #0x0
  30:	add	x0, x0, #0x0
  34:	mov	w2, #0x1c2                 	// #450
  38:	bl	0 <__assert_fail>
  3c:	mov	w20, w1
  40:	ldr	w1, [x0, #16]
  44:	mov	x21, x0
  48:	mov	w19, w2
  4c:	cmp	w2, w1
  50:	b.ls	74 <_ZN4llvm9BitVector5resetEjj+0x74>  // b.plast
  54:	adrp	x3, 0 <_ZN4llvm9BitVector5resetEjj>
  58:	adrp	x1, 0 <_ZN4llvm9BitVector5resetEjj>
  5c:	adrp	x0, 0 <_ZN4llvm9BitVector5resetEjj>
  60:	add	x3, x3, #0x0
  64:	add	x1, x1, #0x0
  68:	add	x0, x0, #0x0
  6c:	mov	w2, #0x1c3                 	// #451
  70:	b	38 <_ZN4llvm9BitVector5resetEjj+0x38>
  74:	cmp	w20, w2
  78:	b.eq	b0 <_ZN4llvm9BitVector5resetEjj+0xb0>  // b.none
  7c:	lsr	w3, w19, #6
  80:	mov	x2, #0x1                   	// #1
  84:	and	w23, w20, #0x3f
  88:	lsr	w1, w20, #6
  8c:	cmp	w3, w20, lsr #6
  90:	lsl	x22, x2, x19
  94:	b.ne	c8 <_ZN4llvm9BitVector5resetEjj+0xc8>  // b.any
  98:	lsl	x2, x2, x23
  9c:	sub	x19, x22, x2
  a0:	bl	0 <_ZN4llvm9BitVector5resetEjj>
  a4:	ldr	x2, [x0]
  a8:	bic	x19, x2, x19
  ac:	str	x19, [x0]
  b0:	mov	x0, x21
  b4:	ldp	x19, x20, [sp, #16]
  b8:	ldp	x21, x22, [sp, #32]
  bc:	ldr	x23, [sp, #48]
  c0:	ldp	x29, x30, [sp], #64
  c4:	ret
  c8:	bl	0 <_ZN4llvm9BitVector5resetEjj>
  cc:	ldr	x1, [x0]
  d0:	mov	x2, #0xffffffffffffffff    	// #-1
  d4:	lsl	x2, x2, x23
  d8:	bic	x2, x1, x2
  dc:	str	x2, [x0]
  e0:	mov	x1, #0x40                  	// #64
  e4:	mov	w0, w20
  e8:	mov	x2, #0x0                   	// #0
  ec:	bl	0 <_ZN4llvm9BitVector5resetEjj>
  f0:	add	w20, w0, #0x40
  f4:	cmp	w20, w19
  f8:	b.hi	114 <_ZN4llvm9BitVector5resetEjj+0x114>  // b.pmore
  fc:	lsr	w1, w0, #6
 100:	mov	x0, x21
 104:	bl	0 <_ZN4llvm9BitVector5resetEjj>
 108:	str	xzr, [x0]
 10c:	mov	w0, w20
 110:	b	f0 <_ZN4llvm9BitVector5resetEjj+0xf0>
 114:	cmp	w0, w19
 118:	b.cs	b0 <_ZN4llvm9BitVector5resetEjj+0xb0>  // b.hs, b.nlast
 11c:	lsr	w1, w0, #6
 120:	neg	x19, x22
 124:	mov	x0, x21
 128:	bl	0 <_ZN4llvm9BitVector5resetEjj>
 12c:	ldr	x22, [x0]
 130:	and	x19, x22, x19
 134:	b	ac <_ZN4llvm9BitVector5resetEjj+0xac>

Disassembly of section .text._ZN4llvm9BitVector5resetEj:

0000000000000000 <_ZN4llvm9BitVector5resetEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	w19, w1
  14:	lsr	w1, w1, #6
  18:	bl	0 <_ZN4llvm9BitVector5resetEj>
  1c:	mov	x2, #0x1                   	// #1
  20:	lsl	x1, x2, x19
  24:	ldr	x2, [x0]
  28:	bic	x1, x2, x1
  2c:	str	x1, [x0]
  30:	mov	x0, x20
  34:	ldp	x19, x20, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret

Disassembly of section .text._ZNK4llvm9BitVectorixEj:

0000000000000000 <_ZNK4llvm9BitVectorixEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	w19, w1
  10:	ldr	w1, [x0, #16]
  14:	cmp	w1, w19
  18:	b.hi	3c <_ZNK4llvm9BitVectorixEj+0x3c>  // b.pmore
  1c:	adrp	x3, 0 <_ZNK4llvm9BitVectorixEj>
  20:	adrp	x1, 0 <_ZNK4llvm9BitVectorixEj>
  24:	adrp	x0, 0 <_ZNK4llvm9BitVectorixEj>
  28:	add	x3, x3, #0x0
  2c:	add	x1, x1, #0x0
  30:	add	x0, x0, #0x0
  34:	mov	w2, #0x1f0                 	// #496
  38:	bl	0 <__assert_fail>
  3c:	lsr	w1, w19, #6
  40:	bl	0 <_ZNK4llvm9BitVectorixEj>
  44:	ldr	x0, [x0]
  48:	mov	x1, #0x1                   	// #1
  4c:	lsl	x19, x1, x19
  50:	tst	x19, x0
  54:	cset	w0, ne  // ne = any
  58:	ldr	x19, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	ret

Disassembly of section .text._ZNK4llvm9BitVector5countEv:

0000000000000000 <_ZNK4llvm9BitVector5countEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, #0x0                   	// #0
  10:	ldr	w19, [x0, #16]
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x21, x0
  1c:	add	w19, w19, #0x3f
  20:	mov	w22, #0x0                   	// #0
  24:	lsr	w19, w19, #6
  28:	cmp	w19, w20
  2c:	b.ls	58 <_ZNK4llvm9BitVector5countEv+0x58>  // b.plast
  30:	mov	x1, x20
  34:	mov	x0, x21
  38:	bl	0 <_ZNK4llvm9BitVector5countEv>
  3c:	add	x20, x20, #0x1
  40:	ldr	d0, [x0]
  44:	cnt	v0.8b, v0.8b
  48:	addv	b0, v0.8b
  4c:	umov	w2, v0.b[0]
  50:	add	w22, w22, w2
  54:	b	28 <_ZNK4llvm9BitVector5countEv+0x28>
  58:	mov	w0, w22
  5c:	ldp	x19, x20, [sp, #16]
  60:	ldp	x21, x22, [sp, #32]
  64:	ldp	x29, x30, [sp], #48
  68:	ret

Disassembly of section .text._ZN4llvm16maskTrailingOnesImEET_j:

0000000000000000 <_ZN4llvm16maskTrailingOnesImEET_j>:
   0:	cmp	w0, #0x40
   4:	b.ls	30 <_ZN4llvm16maskTrailingOnesImEET_j+0x30>  // b.plast
   8:	stp	x29, x30, [sp, #-16]!
   c:	adrp	x3, 0 <_ZN4llvm16maskTrailingOnesImEET_j>
  10:	adrp	x1, 0 <_ZN4llvm16maskTrailingOnesImEET_j>
  14:	mov	x29, sp
  18:	adrp	x0, 0 <_ZN4llvm16maskTrailingOnesImEET_j>
  1c:	add	x3, x3, #0x0
  20:	add	x1, x1, #0x0
  24:	add	x0, x0, #0x0
  28:	mov	w2, #0xfb                  	// #251
  2c:	bl	0 <__assert_fail>
  30:	neg	w2, w0
  34:	cmp	w0, #0x0
  38:	mov	x1, #0xffffffffffffffff    	// #-1
  3c:	lsr	x1, x1, x2
  40:	csel	x0, x1, xzr, ne  // ne = any
  44:	ret

Disassembly of section .text._ZNK4llvm9BitVector13find_first_inEjj:

0000000000000000 <_ZNK4llvm9BitVector13find_first_inEjj>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	cmp	w1, w2
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	stp	x21, x22, [sp, #32]
  14:	stp	x23, x24, [sp, #48]
  18:	stp	x25, x26, [sp, #64]
  1c:	b.hi	30 <_ZNK4llvm9BitVector13find_first_inEjj+0x30>  // b.pmore
  20:	mov	x22, x0
  24:	ldr	w0, [x0, #16]
  28:	cmp	w0, w2
  2c:	b.cs	50 <_ZNK4llvm9BitVector13find_first_inEjj+0x50>  // b.hs, b.nlast
  30:	adrp	x3, 0 <_ZNK4llvm9BitVector13find_first_inEjj>
  34:	adrp	x1, 0 <_ZNK4llvm9BitVector13find_first_inEjj>
  38:	adrp	x0, 0 <_ZNK4llvm9BitVector13find_first_inEjj>
  3c:	add	x3, x3, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x0, x0, #0x0
  48:	mov	w2, #0xd0                  	// #208
  4c:	bl	0 <__assert_fail>
  50:	cmp	w1, w2
  54:	b.eq	e4 <_ZNK4llvm9BitVector13find_first_inEjj+0xe4>  // b.none
  58:	sub	w2, w2, #0x1
  5c:	lsr	w24, w1, #6
  60:	lsr	w26, w1, #6
  64:	and	w21, w1, #0x3f
  68:	lsr	w25, w2, #6
  6c:	and	w2, w2, #0x3f
  70:	add	w19, w2, #0x1
  74:	mov	w23, w26
  78:	cmp	w25, w26
  7c:	b.cc	e4 <_ZNK4llvm9BitVector13find_first_inEjj+0xe4>  // b.lo, b.ul, b.last
  80:	mov	x1, x26
  84:	mov	x0, x22
  88:	bl	0 <_ZNK4llvm9BitVector13find_first_inEjj>
  8c:	cmp	w24, w26
  90:	ldr	x20, [x0]
  94:	b.ne	a4 <_ZNK4llvm9BitVector13find_first_inEjj+0xa4>  // b.any
  98:	mov	w0, w21
  9c:	bl	0 <_ZNK4llvm9BitVector13find_first_inEjj>
  a0:	bic	x20, x20, x0
  a4:	cmp	w25, w23
  a8:	b.ne	b8 <_ZNK4llvm9BitVector13find_first_inEjj+0xb8>  // b.any
  ac:	mov	w0, w19
  b0:	bl	0 <_ZNK4llvm9BitVector13find_first_inEjj>
  b4:	and	x20, x20, x0
  b8:	add	x26, x26, #0x1
  bc:	cbz	x20, 74 <_ZNK4llvm9BitVector13find_first_inEjj+0x74>
  c0:	rbit	x20, x20
  c4:	clz	x20, x20
  c8:	add	w0, w20, w23, lsl #6
  cc:	ldp	x19, x20, [sp, #16]
  d0:	ldp	x21, x22, [sp, #32]
  d4:	ldp	x23, x24, [sp, #48]
  d8:	ldp	x25, x26, [sp, #64]
  dc:	ldp	x29, x30, [sp], #80
  e0:	ret
  e4:	mov	w0, #0xffffffff            	// #-1
  e8:	b	cc <_ZNK4llvm9BitVector13find_first_inEjj+0xcc>

Disassembly of section .text._ZNK4llvm15MutableArrayRefImE10drop_frontEm:

0000000000000000 <_ZNK4llvm15MutableArrayRefImE10drop_frontEm>:
   0:	ldr	x2, [x0, #8]
   4:	cmp	x1, x2
   8:	b.ls	34 <_ZNK4llvm15MutableArrayRefImE10drop_frontEm+0x34>  // b.plast
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZNK4llvm15MutableArrayRefImE10drop_frontEm>
  14:	adrp	x1, 0 <_ZNK4llvm15MutableArrayRefImE10drop_frontEm>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZNK4llvm15MutableArrayRefImE10drop_frontEm>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0x174                 	// #372
  30:	bl	0 <__assert_fail>
  34:	ldr	x0, [x0]
  38:	add	x0, x0, x1, lsl #3
  3c:	sub	x1, x2, x1
  40:	ret

Disassembly of section .text._ZN4llvm9BitVector15set_unused_bitsEb:

0000000000000000 <_ZN4llvm9BitVector15set_unused_bitsEb>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	and	w22, w1, #0xff
  10:	ldr	w1, [x0, #16]
  14:	ldr	x2, [x0, #8]
  18:	add	w1, w1, #0x3f
  1c:	stp	x19, x20, [sp, #16]
  20:	mov	x19, x0
  24:	lsr	w21, w1, #6
  28:	lsr	w1, w1, #6
  2c:	cmp	x1, x2
  30:	b.cs	40 <_ZN4llvm9BitVector15set_unused_bitsEb+0x40>  // b.hs, b.nlast
  34:	bl	0 <_ZN4llvm9BitVector15set_unused_bitsEb>
  38:	mov	w2, w22
  3c:	bl	0 <_ZN4llvm9BitVector15set_unused_bitsEb>
  40:	ldr	w20, [x19, #16]
  44:	ands	w20, w20, #0x3f
  48:	b.eq	70 <_ZN4llvm9BitVector15set_unused_bitsEb+0x70>  // b.none
  4c:	mov	x0, #0xffffffffffffffff    	// #-1
  50:	sub	w1, w21, #0x1
  54:	lsl	x20, x0, x20
  58:	mov	x0, x19
  5c:	cbz	w22, 80 <_ZN4llvm9BitVector15set_unused_bitsEb+0x80>
  60:	bl	0 <_ZN4llvm9BitVector15set_unused_bitsEb>
  64:	ldr	x1, [x0]
  68:	orr	x20, x1, x20
  6c:	str	x20, [x0]
  70:	ldp	x19, x20, [sp, #16]
  74:	ldp	x21, x22, [sp, #32]
  78:	ldp	x29, x30, [sp], #48
  7c:	ret
  80:	bl	0 <_ZN4llvm9BitVector15set_unused_bitsEb>
  84:	ldr	x1, [x0]
  88:	bic	x20, x1, x20
  8c:	b	6c <_ZN4llvm9BitVector15set_unused_bitsEb+0x6c>

Disassembly of section .text._ZN4llvm9BitVectoraSERKS0_:

0000000000000000 <_ZN4llvm9BitVectoraSERKS0_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	stp	x21, x22, [sp, #32]
  18:	str	x23, [sp, #48]
  1c:	b.eq	64 <_ZN4llvm9BitVectoraSERKS0_+0x64>  // b.none
  20:	ldr	w0, [x1, #16]
  24:	mov	x21, x1
  28:	ldr	x1, [x19, #8]
  2c:	add	w2, w0, #0x3f
  30:	str	w0, [x19, #16]
  34:	lsr	w2, w2, #6
  38:	lsl	x1, x1, #6
  3c:	cmp	x1, w0, uxtw
  40:	b.cc	7c <_ZN4llvm9BitVectoraSERKS0_+0x7c>  // b.lo, b.ul, b.last
  44:	cbz	w0, 58 <_ZN4llvm9BitVectoraSERKS0_+0x58>
  48:	ldr	x0, [x19]
  4c:	ubfiz	x2, x2, #3, #26
  50:	ldr	x1, [x21]
  54:	bl	0 <memcpy>
  58:	mov	x0, x19
  5c:	mov	w1, #0x0                   	// #0
  60:	bl	0 <_ZN4llvm9BitVectoraSERKS0_>
  64:	mov	x0, x19
  68:	ldp	x19, x20, [sp, #16]
  6c:	ldp	x21, x22, [sp, #32]
  70:	ldr	x23, [sp, #48]
  74:	ldp	x29, x30, [sp], #64
  78:	ret
  7c:	cbnz	w2, a0 <_ZN4llvm9BitVectoraSERKS0_+0xa0>
  80:	adrp	x3, 0 <_ZN4llvm9BitVectoraSERKS0_>
  84:	adrp	x1, 0 <_ZN4llvm9BitVectoraSERKS0_>
  88:	adrp	x0, 0 <_ZN4llvm9BitVectoraSERKS0_>
  8c:	add	x3, x3, #0x0
  90:	add	x1, x1, #0x0
  94:	add	x0, x0, #0x0
  98:	mov	w2, #0x2dc                 	// #732
  9c:	bl	0 <__assert_fail>
  a0:	ubfiz	x20, x2, #3, #26
  a4:	mov	w23, w2
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm9BitVectoraSERKS0_>
  b0:	ldr	x1, [x21]
  b4:	mov	x22, x0
  b8:	mov	x2, x20
  bc:	bl	0 <memcpy>
  c0:	ldr	x0, [x19]
  c4:	bl	0 <free>
  c8:	stp	x22, x23, [x19]
  cc:	b	64 <_ZN4llvm9BitVectoraSERKS0_+0x64>

Disassembly of section .text._ZN4llvm9BitVector6resizeEjb:

0000000000000000 <_ZN4llvm9BitVector6resizeEjb>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	ldr	x22, [x0, #8]
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x19, x0
  18:	stp	x23, x24, [sp, #48]
  1c:	mov	w20, w1
  20:	lsl	x0, x22, #6
  24:	str	x25, [sp, #64]
  28:	and	w24, w2, #0xff
  2c:	cmp	x0, w1, uxtw
  30:	b.cs	bc <_ZN4llvm9BitVector6resizeEjb+0xbc>  // b.hs, b.nlast
  34:	add	w0, w1, #0x3f
  38:	lsl	x23, x22, #1
  3c:	lsr	w0, w0, #6
  40:	cmp	x0, x22, lsl #1
  44:	b.cc	70 <_ZN4llvm9BitVector6resizeEjb+0x70>  // b.lo, b.ul, b.last
  48:	mov	x23, x0
  4c:	cbnz	x0, 70 <_ZN4llvm9BitVector6resizeEjb+0x70>
  50:	adrp	x3, 0 <_ZN4llvm9BitVector6resizeEjb>
  54:	adrp	x1, 0 <_ZN4llvm9BitVector6resizeEjb>
  58:	adrp	x0, 0 <_ZN4llvm9BitVector6resizeEjb>
  5c:	add	x3, x3, #0x0
  60:	add	x1, x1, #0x0
  64:	add	x0, x0, #0x0
  68:	mov	w2, #0x376                 	// #886
  6c:	bl	0 <__assert_fail>
  70:	ldr	x0, [x19]
  74:	lsl	x25, x23, #3
  78:	mov	x1, x25
  7c:	bl	0 <realloc>
  80:	mov	x21, x0
  84:	cbnz	x0, 98 <_ZN4llvm9BitVector6resizeEjb+0x98>
  88:	cbnz	x25, 108 <_ZN4llvm9BitVector6resizeEjb+0x108>
  8c:	mov	x0, #0x1                   	// #1
  90:	bl	0 <_ZN4llvm9BitVector6resizeEjb>
  94:	mov	x21, x0
  98:	stp	x21, x23, [x19]
  9c:	mov	x0, x19
  a0:	mov	w1, #0x0                   	// #0
  a4:	bl	0 <_ZN4llvm9BitVector6resizeEjb>
  a8:	mov	w1, w22
  ac:	mov	x0, x19
  b0:	bl	0 <_ZN4llvm9BitVector6resizeEjb>
  b4:	mov	w2, w24
  b8:	bl	0 <_ZN4llvm9BitVector6resizeEjb>
  bc:	ldr	w0, [x19, #16]
  c0:	cmp	w0, w20
  c4:	b.cs	d4 <_ZN4llvm9BitVector6resizeEjb+0xd4>  // b.hs, b.nlast
  c8:	mov	w1, w24
  cc:	mov	x0, x19
  d0:	bl	0 <_ZN4llvm9BitVector6resizeEjb>
  d4:	ldr	w0, [x19, #16]
  d8:	cmp	w24, #0x0
  dc:	str	w20, [x19, #16]
  e0:	ccmp	w20, w0, #0x0, eq  // eq = none
  e4:	b.cs	11c <_ZN4llvm9BitVector6resizeEjb+0x11c>  // b.hs, b.nlast
  e8:	mov	x0, x19
  ec:	mov	w1, #0x0                   	// #0
  f0:	ldp	x19, x20, [sp, #16]
  f4:	ldp	x21, x22, [sp, #32]
  f8:	ldp	x23, x24, [sp, #48]
  fc:	ldr	x25, [sp, #64]
 100:	ldp	x29, x30, [sp], #80
 104:	b	0 <_ZN4llvm9BitVector6resizeEjb>
 108:	mov	w1, #0x1                   	// #1
 10c:	adrp	x0, 0 <_ZN4llvm9BitVector6resizeEjb>
 110:	add	x0, x0, #0x0
 114:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 118:	b	98 <_ZN4llvm9BitVector6resizeEjb+0x98>
 11c:	ldp	x19, x20, [sp, #16]
 120:	ldp	x21, x22, [sp, #32]
 124:	ldp	x23, x24, [sp, #48]
 128:	ldr	x25, [sp, #64]
 12c:	ldp	x29, x30, [sp], #80
 130:	ret

Disassembly of section .text._ZNSt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS1_EED2Ev:

0000000000000000 <_ZNSt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS1_EED1Ev>:
   0:	ldr	x0, [x0]
   4:	cbz	x0, 18 <_ZNSt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS1_EED1Ev+0x18>
   8:	ldr	x1, [x0]
   c:	ldr	x1, [x1, #8]
  10:	mov	x16, x1
  14:	br	x16
  18:	ret

Disassembly of section .text._ZN4llvm20FileBufferByteStream10StreamImpl6commitEv:

0000000000000000 <_ZN4llvm20FileBufferByteStream10StreamImpl6commitEv>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0, #56]
   c:	stp	x19, x20, [sp, #16]
  10:	add	x20, sp, #0x38
  14:	mov	x19, x8
  18:	mov	x8, x20
  1c:	ldr	x1, [x0]
  20:	ldr	x1, [x1, #24]
  24:	str	x21, [sp, #32]
  28:	blr	x1
  2c:	mov	x0, x20
  30:	bl	0 <_ZN4llvm20FileBufferByteStream10StreamImpl6commitEv>
  34:	and	w21, w0, #0xff
  38:	mov	x0, x20
  3c:	bl	0 <_ZN4llvm20FileBufferByteStream10StreamImpl6commitEv>
  40:	cbz	w21, 64 <_ZN4llvm20FileBufferByteStream10StreamImpl6commitEv+0x64>
  44:	mov	x8, x19
  48:	mov	w0, #0x4                   	// #4
  4c:	bl	0 <_ZN4llvm20FileBufferByteStream10StreamImpl6commitEv>
  50:	mov	x0, x19
  54:	ldp	x19, x20, [sp, #16]
  58:	ldr	x21, [sp, #32]
  5c:	ldp	x29, x30, [sp], #64
  60:	ret
  64:	mov	x1, x20
  68:	mov	x0, #0x1                   	// #1
  6c:	str	x0, [sp, #56]
  70:	mov	x0, x19
  74:	bl	0 <_ZN4llvm20FileBufferByteStream10StreamImpl6commitEv>
  78:	mov	x0, x20
  7c:	bl	0 <_ZN4llvm20FileBufferByteStream10StreamImpl6commitEv>
  80:	b	50 <_ZN4llvm20FileBufferByteStream10StreamImpl6commitEv+0x50>

Disassembly of section .text._ZN4llvm20FileBufferByteStream6commitEv:

0000000000000000 <_ZN4llvm20FileBufferByteStream6commitEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	add	x0, x0, #0x8
   8:	mov	x29, sp
   c:	str	x19, [sp, #16]
  10:	mov	x19, x8
  14:	bl	0 <_ZN4llvm20FileBufferByteStream6commitEv>
  18:	mov	x0, x19
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZN4llvm12BinaryStream18checkOffsetForReadEjj:

0000000000000000 <_ZN4llvm12BinaryStream18checkOffsetForReadEjj>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	w20, w1
  10:	mov	x19, x8
  14:	ldr	x1, [x0]
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	x21, x0
  20:	mov	w22, w2
  24:	ldr	x1, [x1, #40]
  28:	blr	x1
  2c:	cmp	w0, w20
  30:	b.cs	54 <_ZN4llvm12BinaryStream18checkOffsetForReadEjj+0x54>  // b.hs, b.nlast
  34:	mov	x8, x19
  38:	mov	w0, #0x3                   	// #3
  3c:	bl	0 <_ZN4llvm12BinaryStream18checkOffsetForReadEjj>
  40:	mov	x0, x19
  44:	ldp	x19, x20, [sp, #16]
  48:	ldp	x21, x22, [sp, #32]
  4c:	ldp	x29, x30, [sp], #64
  50:	ret
  54:	ldr	x0, [x21]
  58:	add	w20, w20, w22
  5c:	ldr	x1, [x0, #40]
  60:	mov	x0, x21
  64:	blr	x1
  68:	cmp	w0, w20
  6c:	b.cs	7c <_ZN4llvm12BinaryStream18checkOffsetForReadEjj+0x7c>  // b.hs, b.nlast
  70:	mov	x8, x19
  74:	mov	w0, #0x1                   	// #1
  78:	b	3c <_ZN4llvm12BinaryStream18checkOffsetForReadEjj+0x3c>
  7c:	add	x20, sp, #0x38
  80:	mov	x0, #0x1                   	// #1
  84:	mov	x1, x20
  88:	str	x0, [sp, #56]
  8c:	mov	x0, x19
  90:	bl	0 <_ZN4llvm12BinaryStream18checkOffsetForReadEjj>
  94:	mov	x0, x20
  98:	bl	0 <_ZN4llvm12BinaryStream18checkOffsetForReadEjj>
  9c:	b	40 <_ZN4llvm12BinaryStream18checkOffsetForReadEjj+0x40>

Disassembly of section .text._ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE:

0000000000000000 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x21, x8
  14:	stp	x23, x24, [sp, #48]
  18:	str	x25, [sp, #64]
  1c:	cbnz	x3, 44 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE+0x44>
  20:	add	x19, sp, #0x58
  24:	mov	x0, #0x1                   	// #1
  28:	mov	x1, x19
  2c:	str	x0, [sp, #88]
  30:	mov	x0, x21
  34:	bl	0 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE>
  38:	mov	x0, x19
  3c:	bl	0 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE>
  40:	b	c8 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE+0xc8>
  44:	mov	w22, w1
  48:	mov	x19, x0
  4c:	ldr	x1, [x0]
  50:	mov	x24, x2
  54:	mov	x23, x3
  58:	ldr	x1, [x1, #48]
  5c:	blr	x1
  60:	cmp	w0, #0x3
  64:	b.ls	88 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE+0x88>  // b.plast
  68:	adrp	x3, 0 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE>
  6c:	adrp	x1, 0 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE>
  70:	adrp	x0, 0 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE>
  74:	add	x3, x3, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x0, x0, #0x0
  80:	mov	w2, #0x5d                  	// #93
  84:	bl	0 <__assert_fail>
  88:	add	x20, sp, #0x50
  8c:	tbnz	w0, #1, e4 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE+0xe4>
  90:	mov	x8, x20
  94:	mov	w2, w23
  98:	mov	w1, w22
  9c:	mov	x0, x19
  a0:	bl	0 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE>
  a4:	mov	x0, x20
  a8:	bl	0 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE>
  ac:	tst	w0, #0xff
  b0:	b.eq	130 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE+0x130>  // b.none
  b4:	mov	x1, x20
  b8:	mov	x0, x21
  bc:	bl	0 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE>
  c0:	mov	x0, x20
  c4:	bl	0 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE>
  c8:	mov	x0, x21
  cc:	ldp	x19, x20, [sp, #16]
  d0:	ldp	x21, x22, [sp, #32]
  d4:	ldp	x23, x24, [sp, #48]
  d8:	ldr	x25, [sp, #64]
  dc:	ldp	x29, x30, [sp], #96
  e0:	ret
  e4:	ldr	x0, [x19]
  e8:	ldr	x1, [x0, #40]
  ec:	mov	x0, x19
  f0:	blr	x1
  f4:	cmp	w22, w0
  f8:	b.ls	10c <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE+0x10c>  // b.plast
  fc:	mov	x8, x20
 100:	mov	w0, #0x3                   	// #3
 104:	bl	0 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE>
 108:	b	a4 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE+0xa4>
 10c:	add	x25, sp, #0x58
 110:	mov	x0, #0x1                   	// #1
 114:	mov	x1, x25
 118:	str	x0, [sp, #88]
 11c:	mov	x0, x20
 120:	bl	0 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE>
 124:	mov	x0, x25
 128:	bl	0 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE>
 12c:	b	a4 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE+0xa4>
 130:	mov	x0, x20
 134:	bl	0 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE>
 138:	ldr	x0, [x19, #8]
 13c:	mov	x2, x23
 140:	mov	x1, x24
 144:	add	x0, x0, w22, uxtw
 148:	bl	0 <memcpy>
 14c:	b	20 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE+0x20>

Disassembly of section .text._ZN4llvm20FileBufferByteStream10writeBytesEjNS_8ArrayRefIhEE:

0000000000000000 <_ZN4llvm20FileBufferByteStream10writeBytesEjNS_8ArrayRefIhEE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	add	x0, x0, #0x8
   8:	mov	x29, sp
   c:	str	x19, [sp, #16]
  10:	mov	x19, x8
  14:	bl	0 <_ZN4llvm20FileBufferByteStream10writeBytesEjNS_8ArrayRefIhEE>
  18:	mov	x0, x19
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev:

0000000000000000 <_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	ldr	x19, [x0]
  10:	cbz	x19, b0 <_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev+0xb0>
  14:	adrp	x0, 0 <__pthread_key_create>
  18:	mov	x20, x0
  1c:	ldr	x1, [x0]
  20:	cbz	x1, 90 <_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev+0x90>
  24:	add	x1, x19, #0x8
  28:	ldaxr	w0, [x1]
  2c:	sub	w2, w0, #0x1
  30:	stlxr	w3, w2, [x1]
  34:	cbnz	w3, 28 <_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev+0x28>
  38:	cmp	w0, #0x1
  3c:	b.ne	b0 <_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev+0xb0>  // b.any
  40:	ldr	x0, [x19]
  44:	ldr	x1, [x0, #16]
  48:	mov	x0, x19
  4c:	blr	x1
  50:	ldr	x0, [x20]
  54:	cbz	x0, a0 <_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev+0xa0>
  58:	add	x1, x19, #0xc
  5c:	ldaxr	w0, [x1]
  60:	sub	w2, w0, #0x1
  64:	stlxr	w3, w2, [x1]
  68:	cbnz	w3, 5c <_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev+0x5c>
  6c:	cmp	w0, #0x1
  70:	b.ne	b0 <_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev+0xb0>  // b.any
  74:	ldr	x0, [x19]
  78:	ldr	x1, [x0, #24]
  7c:	mov	x0, x19
  80:	ldp	x19, x20, [sp, #16]
  84:	mov	x16, x1
  88:	ldp	x29, x30, [sp], #32
  8c:	br	x16
  90:	ldr	w0, [x19, #8]
  94:	sub	w1, w0, #0x1
  98:	str	w1, [x19, #8]
  9c:	b	38 <_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev+0x38>
  a0:	ldr	w0, [x19, #12]
  a4:	sub	w1, w0, #0x1
  a8:	str	w1, [x19, #12]
  ac:	b	6c <_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev+0x6c>
  b0:	ldp	x19, x20, [sp, #16]
  b4:	ldp	x29, x30, [sp], #32
  b8:	ret

Disassembly of section .text._ZN4llvm18BinaryStreamWriterD2Ev:

0000000000000000 <_ZN4llvm18BinaryStreamWriterD1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm18BinaryStreamWriterD1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0], #8
  10:	add	x0, x0, #0x8
  14:	b	0 <_ZN4llvm18BinaryStreamWriterD1Ev>

Disassembly of section .text._ZN4llvm18BinaryStreamWriterD0Ev:

0000000000000000 <_ZN4llvm18BinaryStreamWriterD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm18BinaryStreamWriterD0Ev>
  14:	mov	x0, x19
  18:	mov	x1, #0x38                  	// #56
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	b	0 <_ZdlPvm>

Disassembly of section .text._ZNK4llvm8ArrayRefIhE5sliceEmm:

0000000000000000 <_ZNK4llvm8ArrayRefIhE5sliceEmm>:
   0:	mov	x3, x1
   4:	mov	x1, x2
   8:	add	x4, x3, x2
   c:	ldr	x2, [x0, #8]
  10:	cmp	x4, x2
  14:	b.ls	40 <_ZNK4llvm8ArrayRefIhE5sliceEmm+0x40>  // b.plast
  18:	stp	x29, x30, [sp, #-16]!
  1c:	adrp	x3, 0 <_ZNK4llvm8ArrayRefIhE5sliceEmm>
  20:	adrp	x1, 0 <_ZNK4llvm8ArrayRefIhE5sliceEmm>
  24:	mov	x29, sp
  28:	adrp	x0, 0 <_ZNK4llvm8ArrayRefIhE5sliceEmm>
  2c:	add	x3, x3, #0x0
  30:	add	x1, x1, #0x0
  34:	add	x0, x0, #0x0
  38:	mov	w2, #0xbd                  	// #189
  3c:	bl	0 <__assert_fail>
  40:	ldr	x0, [x0]
  44:	add	x0, x0, x3
  48:	ret

Disassembly of section .text._ZN4llvm16BinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE:

0000000000000000 <_ZN4llvm16BinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	add	x19, sp, #0x48
  10:	mov	x20, x8
  14:	mov	x8, x19
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	x21, x2
  20:	mov	w2, #0x1                   	// #1
  24:	mov	x22, x0
  28:	str	x23, [sp, #48]
  2c:	mov	w23, w1
  30:	bl	0 <_ZN4llvm16BinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm16BinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>
  3c:	tst	w0, #0xff
  40:	b.eq	70 <_ZN4llvm16BinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x70>  // b.none
  44:	mov	x1, x19
  48:	mov	x0, x20
  4c:	bl	0 <_ZN4llvm16BinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>
  50:	mov	x0, x19
  54:	bl	0 <_ZN4llvm16BinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>
  58:	mov	x0, x20
  5c:	ldp	x19, x20, [sp, #16]
  60:	ldp	x21, x22, [sp, #32]
  64:	ldr	x23, [sp, #48]
  68:	ldp	x29, x30, [sp], #80
  6c:	ret
  70:	mov	x0, x19
  74:	bl	0 <_ZN4llvm16BinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>
  78:	ldr	x2, [x22, #24]
  7c:	mov	w1, w23
  80:	add	x0, x22, #0x10
  84:	sub	x2, x2, w23, uxtw
  88:	bl	0 <_ZN4llvm16BinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>
  8c:	stp	x0, x1, [x21]
  90:	mov	x1, x19
  94:	mov	x0, #0x1                   	// #1
  98:	str	x0, [sp, #72]
  9c:	mov	x0, x20
  a0:	bl	0 <_ZN4llvm16BinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>
  a4:	mov	x0, x19
  a8:	bl	0 <_ZN4llvm16BinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>
  ac:	b	58 <_ZN4llvm16BinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x58>

Disassembly of section .text._ZN4llvm23MutableBinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE:

0000000000000000 <_ZN4llvm23MutableBinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	add	x0, x0, #0x18
   8:	mov	x29, sp
   c:	str	x19, [sp, #16]
  10:	mov	x19, x8
  14:	bl	0 <_ZN4llvm23MutableBinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>
  18:	mov	x0, x19
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZN4llvm20FileBufferByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE:

0000000000000000 <_ZN4llvm20FileBufferByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	add	x0, x0, #0x20
   8:	mov	x29, sp
   c:	str	x19, [sp, #16]
  10:	mov	x19, x8
  14:	bl	0 <_ZN4llvm20FileBufferByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>
  18:	mov	x0, x19
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE:

0000000000000000 <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	add	x19, sp, #0x48
  10:	mov	x20, x8
  14:	mov	x8, x19
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	x22, x0
  20:	mov	x21, x3
  24:	stp	x23, x24, [sp, #48]
  28:	mov	w23, w1
  2c:	mov	w24, w2
  30:	bl	0 <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE>
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE>
  3c:	tst	w0, #0xff
  40:	b.eq	70 <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE+0x70>  // b.none
  44:	mov	x1, x19
  48:	mov	x0, x20
  4c:	bl	0 <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE>
  50:	mov	x0, x19
  54:	bl	0 <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE>
  58:	mov	x0, x20
  5c:	ldp	x19, x20, [sp, #16]
  60:	ldp	x21, x22, [sp, #32]
  64:	ldp	x23, x24, [sp, #48]
  68:	ldp	x29, x30, [sp], #80
  6c:	ret
  70:	mov	x0, x19
  74:	bl	0 <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE>
  78:	mov	w2, w24
  7c:	mov	w1, w23
  80:	add	x0, x22, #0x10
  84:	bl	0 <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE>
  88:	stp	x0, x1, [x21]
  8c:	mov	x1, x19
  90:	mov	x0, #0x1                   	// #1
  94:	str	x0, [sp, #72]
  98:	mov	x0, x20
  9c:	bl	0 <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE>
  a0:	mov	x0, x19
  a4:	bl	0 <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE>
  a8:	b	58 <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE+0x58>

Disassembly of section .text._ZN4llvm23MutableBinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE:

0000000000000000 <_ZN4llvm23MutableBinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	add	x0, x0, #0x18
   8:	mov	x29, sp
   c:	str	x19, [sp, #16]
  10:	mov	x19, x8
  14:	bl	0 <_ZN4llvm23MutableBinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE>
  18:	mov	x0, x19
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZN4llvm20FileBufferByteStream9readBytesEjjRNS_8ArrayRefIhEE:

0000000000000000 <_ZN4llvm20FileBufferByteStream9readBytesEjjRNS_8ArrayRefIhEE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	add	x0, x0, #0x20
   8:	mov	x29, sp
   c:	str	x19, [sp, #16]
  10:	mov	x19, x8
  14:	bl	0 <_ZN4llvm20FileBufferByteStream9readBytesEjjRNS_8ArrayRefIhEE>
  18:	mov	x0, x19
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZNSt10unique_ptrIN4llvm16FileOutputBufferESt14default_deleteIS1_EED2Ev:

0000000000000000 <_ZNSt10unique_ptrIN4llvm16FileOutputBufferESt14default_deleteIS1_EED1Ev>:
   0:	ldr	x0, [x0]
   4:	cbz	x0, 18 <_ZNSt10unique_ptrIN4llvm16FileOutputBufferESt14default_deleteIS1_EED1Ev+0x18>
   8:	ldr	x1, [x0]
   c:	ldr	x1, [x1, #40]
  10:	mov	x16, x1
  14:	br	x16
  18:	ret

Disassembly of section .text._ZN4llvm20FileBufferByteStream10StreamImplD2Ev:

0000000000000000 <_ZN4llvm20FileBufferByteStream10StreamImplD1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm20FileBufferByteStream10StreamImplD1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0], #56
  10:	b	0 <_ZN4llvm20FileBufferByteStream10StreamImplD1Ev>

Disassembly of section .text._ZN4llvm20FileBufferByteStreamD2Ev:

0000000000000000 <_ZN4llvm20FileBufferByteStreamD1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm20FileBufferByteStreamD1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0], #8
  10:	b	0 <_ZN4llvm20FileBufferByteStreamD1Ev>

Disassembly of section .text._ZN4llvm20FileBufferByteStreamD0Ev:

0000000000000000 <_ZN4llvm20FileBufferByteStreamD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm20FileBufferByteStreamD0Ev>
  14:	mov	x0, x19
  18:	mov	x1, #0x48                  	// #72
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm20FileBufferByteStream10StreamImplD0Ev:

0000000000000000 <_ZN4llvm20FileBufferByteStream10StreamImplD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm20FileBufferByteStream10StreamImplD0Ev>
  14:	mov	x0, x19
  18:	mov	x1, #0x40                  	// #64
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	b	0 <_ZdlPvm>

Disassembly of section .text._ZNSt12_Vector_baseIjSaIjEED2Ev:

0000000000000000 <_ZNSt12_Vector_baseIjSaIjEED1Ev>:
   0:	ldr	x0, [x0]
   4:	cbz	x0, c <_ZNSt12_Vector_baseIjSaIjEED1Ev+0xc>
   8:	b	0 <_ZdlPv>
   c:	ret

Disassembly of section .text._ZN4llvm8ExpectedIjEC2ENS_5ErrorE:

0000000000000000 <_ZN4llvm8ExpectedIjEC1ENS_5ErrorE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	ldrb	w0, [x0, #8]
  18:	orr	w0, w0, #0x3
  1c:	strb	w0, [x19, #8]
  20:	mov	x0, x1
  24:	bl	0 <_ZN4llvm8ExpectedIjEC1ENS_5ErrorE>
  28:	tst	w0, #0xff
  2c:	b.ne	50 <_ZN4llvm8ExpectedIjEC1ENS_5ErrorE+0x50>  // b.any
  30:	adrp	x3, 0 <_ZN4llvm8ExpectedIjEC1ENS_5ErrorE>
  34:	adrp	x1, 0 <_ZN4llvm8ExpectedIjEC1ENS_5ErrorE>
  38:	adrp	x0, 0 <_ZN4llvm8ExpectedIjEC1ENS_5ErrorE>
  3c:	add	x3, x3, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x0, x0, #0x0
  48:	mov	w2, #0x1ce                 	// #462
  4c:	bl	0 <__assert_fail>
  50:	ldrb	w0, [x19, #8]
  54:	tbnz	w0, #0, 78 <_ZN4llvm8ExpectedIjEC1ENS_5ErrorE+0x78>
  58:	adrp	x3, 0 <_ZN4llvm8ExpectedIjEC1ENS_5ErrorE>
  5c:	adrp	x1, 0 <_ZN4llvm8ExpectedIjEC1ENS_5ErrorE>
  60:	adrp	x0, 0 <_ZN4llvm8ExpectedIjEC1ENS_5ErrorE>
  64:	add	x3, x3, #0x0
  68:	add	x1, x1, #0x0
  6c:	add	x0, x0, #0x0
  70:	mov	w2, #0x27c                 	// #636
  74:	b	4c <_ZN4llvm8ExpectedIjEC1ENS_5ErrorE+0x4c>
  78:	ldr	x0, [x20]
  7c:	str	xzr, [x20]
  80:	and	x0, x0, #0xfffffffffffffffe
  84:	str	x0, [x19]
  88:	ldp	x19, x20, [sp, #16]
  8c:	ldp	x29, x30, [sp], #32
  90:	ret

Disassembly of section .text._ZNSt10unique_ptrIN4llvm3msf25WritableMappedBlockStreamESt14default_deleteIS2_EED2Ev:

0000000000000000 <_ZNSt10unique_ptrIN4llvm3msf25WritableMappedBlockStreamESt14default_deleteIS2_EED1Ev>:
   0:	ldr	x0, [x0]
   4:	cbz	x0, 18 <_ZNSt10unique_ptrIN4llvm3msf25WritableMappedBlockStreamESt14default_deleteIS2_EED1Ev+0x18>
   8:	ldr	x1, [x0]
   c:	ldr	x1, [x1, #8]
  10:	mov	x16, x1
  14:	br	x16
  18:	ret

Disassembly of section .text._ZN4llvm8ExpectedINS_20FileBufferByteStreamEEC2ENS_5ErrorE:

0000000000000000 <_ZN4llvm8ExpectedINS_20FileBufferByteStreamEEC1ENS_5ErrorE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	ldrb	w0, [x0, #72]
  18:	orr	w0, w0, #0x3
  1c:	strb	w0, [x19, #72]
  20:	mov	x0, x1
  24:	bl	0 <_ZN4llvm8ExpectedINS_20FileBufferByteStreamEEC1ENS_5ErrorE>
  28:	tst	w0, #0xff
  2c:	b.ne	50 <_ZN4llvm8ExpectedINS_20FileBufferByteStreamEEC1ENS_5ErrorE+0x50>  // b.any
  30:	adrp	x3, 0 <_ZN4llvm8ExpectedINS_20FileBufferByteStreamEEC1ENS_5ErrorE>
  34:	adrp	x1, 0 <_ZN4llvm8ExpectedINS_20FileBufferByteStreamEEC1ENS_5ErrorE>
  38:	adrp	x0, 0 <_ZN4llvm8ExpectedINS_20FileBufferByteStreamEEC1ENS_5ErrorE>
  3c:	add	x3, x3, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x0, x0, #0x0
  48:	mov	w2, #0x1ce                 	// #462
  4c:	bl	0 <__assert_fail>
  50:	ldrb	w0, [x19, #72]
  54:	tbnz	w0, #0, 78 <_ZN4llvm8ExpectedINS_20FileBufferByteStreamEEC1ENS_5ErrorE+0x78>
  58:	adrp	x3, 0 <_ZN4llvm8ExpectedINS_20FileBufferByteStreamEEC1ENS_5ErrorE>
  5c:	adrp	x1, 0 <_ZN4llvm8ExpectedINS_20FileBufferByteStreamEEC1ENS_5ErrorE>
  60:	adrp	x0, 0 <_ZN4llvm8ExpectedINS_20FileBufferByteStreamEEC1ENS_5ErrorE>
  64:	add	x3, x3, #0x0
  68:	add	x1, x1, #0x0
  6c:	add	x0, x0, #0x0
  70:	mov	w2, #0x27c                 	// #636
  74:	b	4c <_ZN4llvm8ExpectedINS_20FileBufferByteStreamEEC1ENS_5ErrorE+0x4c>
  78:	ldr	x0, [x20]
  7c:	str	xzr, [x20]
  80:	and	x0, x0, #0xfffffffffffffffe
  84:	str	x0, [x19]
  88:	ldp	x19, x20, [sp, #16]
  8c:	ldp	x29, x30, [sp], #32
  90:	ret

Disassembly of section .text._ZN4llvm18BinaryStreamWriter10writeArrayINS_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEENS_5ErrorENS_8ArrayRefIT_EE:

0000000000000000 <_ZN4llvm18BinaryStreamWriter10writeArrayINS_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEENS_5ErrorENS_8ArrayRefIT_EE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x8
  10:	cbnz	x2, 44 <_ZN4llvm18BinaryStreamWriter10writeArrayINS_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEENS_5ErrorENS_8ArrayRefIT_EE+0x44>
  14:	add	x20, sp, #0x28
  18:	mov	x0, #0x1                   	// #1
  1c:	mov	x1, x20
  20:	str	x0, [sp, #40]
  24:	mov	x0, x8
  28:	bl	0 <_ZN4llvm18BinaryStreamWriter10writeArrayINS_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEENS_5ErrorENS_8ArrayRefIT_EE>
  2c:	mov	x0, x20
  30:	bl	0 <_ZN4llvm18BinaryStreamWriter10writeArrayINS_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEENS_5ErrorENS_8ArrayRefIT_EE>
  34:	mov	x0, x19
  38:	ldp	x19, x20, [sp, #16]
  3c:	ldp	x29, x30, [sp], #48
  40:	ret
  44:	mov	x3, #0x3fffffff            	// #1073741823
  48:	cmp	x2, x3
  4c:	b.ls	5c <_ZN4llvm18BinaryStreamWriter10writeArrayINS_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEENS_5ErrorENS_8ArrayRefIT_EE+0x5c>  // b.plast
  50:	mov	w0, #0x2                   	// #2
  54:	bl	0 <_ZN4llvm18BinaryStreamWriter10writeArrayINS_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEENS_5ErrorENS_8ArrayRefIT_EE>
  58:	b	34 <_ZN4llvm18BinaryStreamWriter10writeArrayINS_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEENS_5ErrorENS_8ArrayRefIT_EE+0x34>
  5c:	lsl	x2, x2, #2
  60:	bl	0 <_ZN4llvm18BinaryStreamWriter10writeBytesENS_8ArrayRefIhEE>
  64:	b	34 <_ZN4llvm18BinaryStreamWriter10writeArrayINS_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEENS_5ErrorENS_8ArrayRefIT_EE+0x34>

Disassembly of section .text._ZNSt10unique_ptrIN4llvm3msf8MSFErrorESt14default_deleteIS2_EED2Ev:

0000000000000000 <_ZNSt10unique_ptrIN4llvm3msf8MSFErrorESt14default_deleteIS2_EED1Ev>:
   0:	ldr	x0, [x0]
   4:	cbz	x0, 18 <_ZNSt10unique_ptrIN4llvm3msf8MSFErrorESt14default_deleteIS2_EED1Ev+0x18>
   8:	ldr	x1, [x0]
   c:	ldr	x1, [x1, #8]
  10:	mov	x16, x1
  14:	br	x16
  18:	ret

Disassembly of section .text._ZNK4llvm8ArrayRefIjE5sliceEmm:

0000000000000000 <_ZNK4llvm8ArrayRefIjE5sliceEmm>:
   0:	mov	x3, x1
   4:	mov	x1, x2
   8:	add	x4, x3, x2
   c:	ldr	x2, [x0, #8]
  10:	cmp	x4, x2
  14:	b.ls	40 <_ZNK4llvm8ArrayRefIjE5sliceEmm+0x40>  // b.plast
  18:	stp	x29, x30, [sp, #-16]!
  1c:	adrp	x3, 0 <_ZNK4llvm8ArrayRefIjE5sliceEmm>
  20:	adrp	x1, 0 <_ZNK4llvm8ArrayRefIjE5sliceEmm>
  24:	mov	x29, sp
  28:	adrp	x0, 0 <_ZNK4llvm8ArrayRefIjE5sliceEmm>
  2c:	add	x3, x3, #0x0
  30:	add	x1, x1, #0x0
  34:	add	x0, x0, #0x0
  38:	mov	w2, #0xbd                  	// #189
  3c:	bl	0 <__assert_fail>
  40:	ldr	x0, [x0]
  44:	add	x0, x0, x3, lsl #2
  48:	ret

Disassembly of section .text._ZNK4llvm8ArrayRefIjE9drop_backEm:

0000000000000000 <_ZNK4llvm8ArrayRefIjE9drop_backEm>:
   0:	ldr	x2, [x0, #8]
   4:	cmp	x1, x2
   8:	b.ls	34 <_ZNK4llvm8ArrayRefIjE9drop_backEm+0x34>  // b.plast
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZNK4llvm8ArrayRefIjE9drop_backEm>
  14:	adrp	x1, 0 <_ZNK4llvm8ArrayRefIjE9drop_backEm>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZNK4llvm8ArrayRefIjE9drop_backEm>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0xcc                  	// #204
  30:	bl	0 <__assert_fail>
  34:	sub	x2, x2, x1
  38:	mov	x1, #0x0                   	// #0
  3c:	b	0 <_ZNK4llvm8ArrayRefIjE9drop_backEm>

Disassembly of section .text._ZN4llvm8ExpectedINS_3msf9MSFLayoutEE15getErrorStorageEv:

0000000000000000 <_ZN4llvm8ExpectedINS_3msf9MSFLayoutEE15getErrorStorageEv>:
   0:	ldrb	w1, [x0, #88]
   4:	tbnz	w1, #0, 30 <_ZN4llvm8ExpectedINS_3msf9MSFLayoutEE15getErrorStorageEv+0x30>
   8:	stp	x29, x30, [sp, #-16]!
   c:	adrp	x3, 0 <_ZN4llvm8ExpectedINS_3msf9MSFLayoutEE15getErrorStorageEv>
  10:	adrp	x1, 0 <_ZN4llvm8ExpectedINS_3msf9MSFLayoutEE15getErrorStorageEv>
  14:	mov	x29, sp
  18:	adrp	x0, 0 <_ZN4llvm8ExpectedINS_3msf9MSFLayoutEE15getErrorStorageEv>
  1c:	add	x3, x3, #0x0
  20:	add	x1, x1, #0x0
  24:	add	x0, x0, #0x0
  28:	mov	w2, #0x27c                 	// #636
  2c:	bl	0 <__assert_fail>
  30:	ret

Disassembly of section .text._ZN4llvm8ExpectedINS_3msf9MSFLayoutEE10getStorageEv:

0000000000000000 <_ZN4llvm8ExpectedINS_3msf9MSFLayoutEE10getStorageEv>:
   0:	ldrb	w1, [x0, #88]
   4:	tbz	w1, #0, 30 <_ZN4llvm8ExpectedINS_3msf9MSFLayoutEE10getStorageEv+0x30>
   8:	stp	x29, x30, [sp, #-16]!
   c:	adrp	x3, 0 <_ZN4llvm8ExpectedINS_3msf9MSFLayoutEE10getStorageEv>
  10:	adrp	x1, 0 <_ZN4llvm8ExpectedINS_3msf9MSFLayoutEE10getStorageEv>
  14:	mov	x29, sp
  18:	adrp	x0, 0 <_ZN4llvm8ExpectedINS_3msf9MSFLayoutEE10getStorageEv>
  1c:	add	x3, x3, #0x0
  20:	add	x1, x1, #0x0
  24:	add	x0, x0, #0x0
  28:	mov	w2, #0x272                 	// #626
  2c:	bl	0 <__assert_fail>
  30:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm:

0000000000000000 <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm>:
   0:	cbz	x1, 108 <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm+0x108>
   4:	stp	x29, x30, [sp, #-64]!
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x1
  14:	mov	x20, x0
  18:	ldp	x2, x1, [x0]
  1c:	stp	x21, x22, [sp, #32]
  20:	ldr	x0, [x0, #16]
  24:	stp	x23, x24, [sp, #48]
  28:	mov	x23, #0x7ffffffffffffff     	// #576460752303423487
  2c:	sub	x21, x1, x2
  30:	sub	x0, x0, x1
  34:	asr	x24, x21, #4
  38:	sub	x2, x23, x21, asr #4
  3c:	cmp	x19, x0, asr #4
  40:	b.hi	78 <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm+0x78>  // b.pmore
  44:	mov	x0, x1
  48:	mov	x2, x19
  4c:	stp	xzr, xzr, [x0]
  50:	subs	x2, x2, #0x1
  54:	add	x0, x0, #0x10
  58:	b.ne	4c <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm+0x4c>  // b.any
  5c:	add	x19, x1, x19, lsl #4
  60:	str	x19, [x20, #8]
  64:	ldp	x19, x20, [sp, #16]
  68:	ldp	x21, x22, [sp, #32]
  6c:	ldp	x23, x24, [sp, #48]
  70:	ldp	x29, x30, [sp], #64
  74:	ret
  78:	cmp	x2, x19
  7c:	b.cs	8c <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm+0x8c>  // b.hs, b.nlast
  80:	adrp	x0, 0 <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm>
  84:	add	x0, x0, #0x0
  88:	bl	0 <_ZSt20__throw_length_errorPKc>
  8c:	cmp	x24, x19
  90:	csel	x22, x24, x19, cs  // cs = hs, nlast
  94:	add	x22, x24, x22
  98:	cmp	x22, x23
  9c:	csel	x22, x22, x23, ls  // ls = plast
  a0:	lsl	x23, x22, #4
  a4:	mov	x0, x23
  a8:	bl	0 <_Znwm>
  ac:	mov	x22, x0
  b0:	add	x2, x0, x21
  b4:	mov	x0, x19
  b8:	stp	xzr, xzr, [x2]
  bc:	subs	x0, x0, #0x1
  c0:	add	x2, x2, #0x10
  c4:	b.ne	b8 <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm+0xb8>  // b.any
  c8:	ldp	x0, x3, [x20]
  cc:	mov	x2, x22
  d0:	mov	x1, x0
  d4:	cmp	x3, x1
  d8:	b.eq	e8 <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm+0xe8>  // b.none
  dc:	ldp	x4, x5, [x1], #16
  e0:	stp	x4, x5, [x2], #16
  e4:	b	d4 <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm+0xd4>
  e8:	cbz	x0, f0 <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm+0xf0>
  ec:	bl	0 <_ZdlPv>
  f0:	add	x19, x24, x19
  f4:	add	x19, x22, x19, lsl #4
  f8:	stp	x22, x19, [x20]
  fc:	add	x22, x22, x23
 100:	str	x22, [x20, #16]
 104:	b	64 <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm+0x64>
 108:	ret

Disassembly of section .text._ZN4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE10getStorageEv:

0000000000000000 <_ZN4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE10getStorageEv>:
   0:	ldrb	w1, [x0, #8]
   4:	tbz	w1, #0, 30 <_ZN4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE10getStorageEv+0x30>
   8:	stp	x29, x30, [sp, #-16]!
   c:	adrp	x3, 0 <_ZN4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE10getStorageEv>
  10:	adrp	x1, 0 <_ZN4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE10getStorageEv>
  14:	mov	x29, sp
  18:	adrp	x0, 0 <_ZN4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE10getStorageEv>
  1c:	add	x3, x3, #0x0
  20:	add	x1, x1, #0x0
  24:	add	x0, x0, #0x0
  28:	mov	w2, #0x272                 	// #626
  2c:	bl	0 <__assert_fail>
  30:	ret

Disassembly of section .text._ZN4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE15getErrorStorageEv:

0000000000000000 <_ZN4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE15getErrorStorageEv>:
   0:	ldrb	w1, [x0, #8]
   4:	tbnz	w1, #0, 30 <_ZN4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE15getErrorStorageEv+0x30>
   8:	stp	x29, x30, [sp, #-16]!
   c:	adrp	x3, 0 <_ZN4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE15getErrorStorageEv>
  10:	adrp	x1, 0 <_ZN4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE15getErrorStorageEv>
  14:	mov	x29, sp
  18:	adrp	x0, 0 <_ZN4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE15getErrorStorageEv>
  1c:	add	x3, x3, #0x0
  20:	add	x1, x1, #0x0
  24:	add	x0, x0, #0x0
  28:	mov	w2, #0x27c                 	// #636
  2c:	bl	0 <__assert_fail>
  30:	ret

Disassembly of section .text._ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x25, x26, [sp, #64]
   c:	ldr	x26, [x0, #8]
  10:	str	x27, [sp, #80]
  14:	ldr	x27, [x0]
  18:	stp	x19, x20, [sp, #16]
  1c:	mov	x20, x2
  20:	sub	x2, x26, x27
  24:	stp	x21, x22, [sp, #32]
  28:	stp	x23, x24, [sp, #48]
  2c:	mov	x24, x0
  30:	mov	x0, #0x3ffffffffffffff     	// #288230376151711743
  34:	cmp	x0, x2, asr #5
  38:	b.ne	48 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x48>  // b.any
  3c:	adrp	x0, 0 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
  40:	add	x0, x0, #0x0
  44:	bl	0 <_ZSt20__throw_length_errorPKc>
  48:	mov	x23, x1
  4c:	asr	x1, x2, #5
  50:	cmp	x1, #0x0
  54:	sub	x21, x23, x27
  58:	csinc	x19, x1, xzr, ne  // ne = any
  5c:	adds	x19, x19, x1
  60:	b.cs	198 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x198>  // b.hs, b.nlast
  64:	mov	x22, #0x0                   	// #0
  68:	cbz	x19, 80 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x80>
  6c:	cmp	x19, x0
  70:	csel	x19, x19, x0, ls  // ls = plast
  74:	lsl	x0, x19, #5
  78:	bl	0 <_Znwm>
  7c:	mov	x22, x0
  80:	mov	x0, x20
  84:	add	x2, x22, x21
  88:	ldr	x3, [x20, #8]
  8c:	ldr	w1, [x0], #8
  90:	str	w1, [x22, x21]
  94:	add	x1, x2, #0x8
  98:	str	x3, [x2, #8]
  9c:	mov	x21, x27
  a0:	ldr	x2, [x0, #8]
  a4:	str	x2, [x1, #8]
  a8:	str	xzr, [x0, #8]
  ac:	ldr	x2, [x0, #16]
  b0:	str	xzr, [x0, #16]
  b4:	str	xzr, [x20, #8]
  b8:	mov	x20, x22
  bc:	str	x2, [x1, #16]
  c0:	add	x20, x20, #0x20
  c4:	cmp	x23, x21
  c8:	b.ne	124 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x124>  // b.any
  cc:	sub	x23, x21, x27
  d0:	mov	x20, x21
  d4:	add	x23, x23, #0x20
  d8:	add	x23, x22, x23
  dc:	mov	x25, x23
  e0:	cmp	x20, x26
  e4:	b.eq	15c <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x15c>  // b.none
  e8:	ldr	w0, [x20]
  ec:	add	x25, x25, #0x20
  f0:	stur	w0, [x25, #-32]
  f4:	ldr	x0, [x20, #8]
  f8:	stur	x0, [x25, #-24]
  fc:	ldr	x0, [x20, #16]
 100:	stur	x0, [x25, #-16]
 104:	ldr	x0, [x20, #24]
 108:	stur	x0, [x25, #-8]
 10c:	mov	x0, x20
 110:	stp	xzr, xzr, [x20, #16]
 114:	add	x20, x20, #0x20
 118:	str	xzr, [x0, #8]!
 11c:	bl	0 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
 120:	b	e0 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xe0>
 124:	ldr	w0, [x21]
 128:	stur	w0, [x20, #-32]
 12c:	ldr	x0, [x21, #8]
 130:	stur	x0, [x20, #-24]
 134:	ldr	x0, [x21, #16]
 138:	stur	x0, [x20, #-16]
 13c:	ldr	x0, [x21, #24]
 140:	stur	x0, [x20, #-8]
 144:	mov	x0, x21
 148:	stp	xzr, xzr, [x21, #16]
 14c:	add	x21, x21, #0x20
 150:	str	xzr, [x0, #8]!
 154:	bl	0 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
 158:	b	c0 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xc0>
 15c:	sub	x20, x20, x21
 160:	add	x20, x23, x20
 164:	cbz	x27, 170 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x170>
 168:	mov	x0, x27
 16c:	bl	0 <_ZdlPv>
 170:	add	x19, x22, x19, lsl #5
 174:	ldp	x25, x26, [sp, #64]
 178:	ldr	x27, [sp, #80]
 17c:	stp	x22, x20, [x24]
 180:	str	x19, [x24, #16]
 184:	ldp	x19, x20, [sp, #16]
 188:	ldp	x21, x22, [sp, #32]
 18c:	ldp	x23, x24, [sp, #48]
 190:	ldp	x29, x30, [sp], #96
 194:	ret
 198:	mov	x19, x0
 19c:	b	74 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x74>

Disassembly of section .text._ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE12emplace_backIJS3_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE12emplace_backIJS3_EEEvDpOT_>:
   0:	mov	x2, x1
   4:	mov	x4, x0
   8:	ldp	x1, x3, [x0, #8]
   c:	cmp	x1, x3
  10:	b.eq	50 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE12emplace_backIJS3_EEEvDpOT_+0x50>  // b.none
  14:	mov	x3, x2
  18:	mov	x0, x1
  1c:	add	x1, x1, #0x20
  20:	ldr	w5, [x3], #8
  24:	str	w5, [x0], #8
  28:	ldr	x5, [x2, #8]
  2c:	stur	x5, [x1, #-24]
  30:	ldr	x5, [x3, #8]
  34:	str	x5, [x0, #8]
  38:	ldr	x5, [x3, #16]
  3c:	stp	xzr, xzr, [x3, #8]
  40:	str	xzr, [x2, #8]
  44:	str	x5, [x0, #16]
  48:	str	x1, [x4, #8]
  4c:	ret
  50:	b	0 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE12emplace_backIJS3_EEEvDpOT_>

Disassembly of section .text._ZNKSt6vectorIjSaIjEE12_M_check_lenEmPKc:

0000000000000000 <_ZNKSt6vectorIjSaIjEE12_M_check_lenEmPKc>:
   0:	mov	x3, x0
   4:	mov	x0, x2
   8:	mov	x4, #0x1fffffffffffffff    	// #2305843009213693951
   c:	ldp	x2, x5, [x3]
  10:	sub	x5, x5, x2
  14:	asr	x3, x5, #2
  18:	sub	x5, x4, x5, asr #2
  1c:	cmp	x5, x1
  20:	b.cs	30 <_ZNKSt6vectorIjSaIjEE12_M_check_lenEmPKc+0x30>  // b.hs, b.nlast
  24:	stp	x29, x30, [sp, #-16]!
  28:	mov	x29, sp
  2c:	bl	0 <_ZSt20__throw_length_errorPKc>
  30:	cmp	x1, x3
  34:	csel	x1, x1, x3, cs  // cs = hs, nlast
  38:	adds	x3, x3, x1
  3c:	b.cs	4c <_ZNKSt6vectorIjSaIjEE12_M_check_lenEmPKc+0x4c>  // b.hs, b.nlast
  40:	cmp	x3, x4
  44:	csel	x0, x3, x4, ls  // ls = plast
  48:	ret
  4c:	mov	x0, x4
  50:	ret

Disassembly of section .text._ZNSt6vectorIjSaIjEE17_M_default_appendEm:

0000000000000000 <_ZNSt6vectorIjSaIjEE17_M_default_appendEm>:
   0:	cbz	x1, f4 <_ZNSt6vectorIjSaIjEE17_M_default_appendEm+0xf4>
   4:	stp	x29, x30, [sp, #-80]!
   8:	mov	x29, sp
   c:	stp	x23, x24, [sp, #48]
  10:	ldp	x23, x2, [x0]
  14:	stp	x19, x20, [sp, #16]
  18:	mov	x19, x0
  1c:	ldr	x3, [x0, #16]
  20:	stp	x21, x22, [sp, #32]
  24:	mov	x20, x1
  28:	sub	x23, x2, x23
  2c:	sub	x3, x3, x2
  30:	str	x25, [sp, #64]
  34:	asr	x24, x23, #2
  38:	cmp	x1, x3, asr #2
  3c:	b.hi	74 <_ZNSt6vectorIjSaIjEE17_M_default_appendEm+0x74>  // b.pmore
  40:	mov	x0, #0x0                   	// #0
  44:	str	wzr, [x2, x0, lsl #2]
  48:	add	x0, x0, #0x1
  4c:	cmp	x20, x0
  50:	b.ne	44 <_ZNSt6vectorIjSaIjEE17_M_default_appendEm+0x44>  // b.any
  54:	add	x20, x2, x20, lsl #2
  58:	str	x20, [x19, #8]
  5c:	ldp	x19, x20, [sp, #16]
  60:	ldp	x21, x22, [sp, #32]
  64:	ldp	x23, x24, [sp, #48]
  68:	ldr	x25, [sp, #64]
  6c:	ldp	x29, x30, [sp], #80
  70:	ret
  74:	adrp	x2, 0 <_ZNSt6vectorIjSaIjEE17_M_default_appendEm>
  78:	add	x2, x2, #0x0
  7c:	bl	0 <_ZNSt6vectorIjSaIjEE17_M_default_appendEm>
  80:	mov	x22, x0
  84:	cbz	x0, d0 <_ZNSt6vectorIjSaIjEE17_M_default_appendEm+0xd0>
  88:	bl	0 <_ZNSt6vectorIjSaIjEE17_M_default_appendEm>
  8c:	mov	x21, x0
  90:	add	x23, x21, x23
  94:	mov	x25, #0x0                   	// #0
  98:	str	wzr, [x23, x25, lsl #2]
  9c:	add	x25, x25, #0x1
  a0:	cmp	x20, x25
  a4:	b.ne	98 <_ZNSt6vectorIjSaIjEE17_M_default_appendEm+0x98>  // b.any
  a8:	ldp	x20, x2, [x19]
  ac:	sub	x2, x2, x20
  b0:	cmp	x2, #0x0
  b4:	b.le	d8 <_ZNSt6vectorIjSaIjEE17_M_default_appendEm+0xd8>
  b8:	mov	x1, x20
  bc:	mov	x0, x21
  c0:	bl	0 <memmove>
  c4:	mov	x0, x20
  c8:	bl	0 <_ZdlPv>
  cc:	b	dc <_ZNSt6vectorIjSaIjEE17_M_default_appendEm+0xdc>
  d0:	mov	x21, #0x0                   	// #0
  d4:	b	90 <_ZNSt6vectorIjSaIjEE17_M_default_appendEm+0x90>
  d8:	cbnz	x20, c4 <_ZNSt6vectorIjSaIjEE17_M_default_appendEm+0xc4>
  dc:	add	x24, x24, x25
  e0:	add	x24, x21, x24, lsl #2
  e4:	stp	x21, x24, [x19]
  e8:	add	x21, x21, x22, lsl #2
  ec:	str	x21, [x19, #16]
  f0:	b	5c <_ZNSt6vectorIjSaIjEE17_M_default_appendEm+0x5c>
  f4:	ret

Disassembly of section .text._ZNSt6vectorIjSaIjEE6resizeEm:

0000000000000000 <_ZNSt6vectorIjSaIjEE6resizeEm>:
   0:	ldp	x5, x4, [x0]
   4:	sub	x3, x4, x5
   8:	asr	x3, x3, #2
   c:	cmp	x1, x3
  10:	b.ls	1c <_ZNSt6vectorIjSaIjEE6resizeEm+0x1c>  // b.plast
  14:	sub	x1, x1, x3
  18:	b	0 <_ZNSt6vectorIjSaIjEE6resizeEm>
  1c:	b.cs	30 <_ZNSt6vectorIjSaIjEE6resizeEm+0x30>  // b.hs, b.nlast
  20:	add	x1, x5, x1, lsl #2
  24:	cmp	x1, x4
  28:	b.eq	30 <_ZNSt6vectorIjSaIjEE6resizeEm+0x30>  // b.none
  2c:	str	x1, [x0, #8]
  30:	ret

Disassembly of section .text._ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #88]
  24:	tbz	w0, #0, 80 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv+0x80>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #88]
  3c:	tbnz	w0, #0, 60 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv+0x60>
  40:	adrp	x3, 0 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv>
  44:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv>
  48:	adrp	x0, 0 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv>
  4c:	add	x3, x3, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x0, x0, #0x0
  58:	mov	w2, #0x281                 	// #641
  5c:	bl	0 <__assert_fail>
  60:	ldr	x19, [x19]
  64:	ldr	x0, [x19]
  68:	ldr	x20, [x0, #16]
  6c:	bl	0 <_ZN4llvm4dbgsEv>
  70:	mov	x1, x0
  74:	mov	x0, x19
  78:	blr	x20
  7c:	bl	0 <abort>
  80:	bl	0 <_ZN4llvm4dbgsEv>
  84:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv>
  88:	add	x1, x1, #0x0
  8c:	bl	0 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv>
  90:	b	7c <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv+0x7c>

Disassembly of section .text._ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #8]
  24:	tbz	w0, #0, 80 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv+0x80>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #8]
  3c:	tbnz	w0, #0, 60 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv+0x60>
  40:	adrp	x3, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
  44:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
  48:	adrp	x0, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
  4c:	add	x3, x3, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x0, x0, #0x0
  58:	mov	w2, #0x281                 	// #641
  5c:	bl	0 <__assert_fail>
  60:	ldr	x19, [x19]
  64:	ldr	x0, [x19]
  68:	ldr	x20, [x0, #16]
  6c:	bl	0 <_ZN4llvm4dbgsEv>
  70:	mov	x1, x0
  74:	mov	x0, x19
  78:	blr	x20
  7c:	bl	0 <abort>
  80:	bl	0 <_ZN4llvm4dbgsEv>
  84:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
  88:	add	x1, x1, #0x0
  8c:	bl	0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
  90:	b	7c <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv+0x7c>

Disassembly of section .text._ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv:

0000000000000000 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	ldr	w1, [x0, #24]
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	cmp	w1, #0xeff
  18:	lsr	w0, w1, #7
  1c:	mov	w1, #0x1e                  	// #30
  20:	csel	w0, w0, w1, ls  // ls = plast
  24:	mov	x20, #0x1000                	// #4096
  28:	str	x21, [sp, #32]
  2c:	lsl	x21, x20, x0
  30:	mov	x0, x21
  34:	bl	0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv>
  38:	mov	x20, x0
  3c:	ldp	w1, w0, [x19, #24]
  40:	cmp	w1, w0
  44:	b.cc	5c <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv+0x5c>  // b.lo, b.ul, b.last
  48:	add	x1, x19, #0x20
  4c:	add	x0, x19, #0x10
  50:	mov	x3, #0x8                   	// #8
  54:	mov	x2, #0x0                   	// #0
  58:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  5c:	ldr	w1, [x19, #24]
  60:	ldr	x0, [x19, #16]
  64:	str	x20, [x0, x1, lsl #3]
  68:	ldp	w0, w2, [x19, #24]
  6c:	mov	w1, w0
  70:	add	x1, x1, #0x1
  74:	cmp	x1, x2
  78:	b.ls	9c <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv+0x9c>  // b.plast
  7c:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv>
  80:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv>
  84:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv>
  88:	add	x3, x3, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x0, x0, #0x0
  94:	mov	w2, #0x43                  	// #67
  98:	bl	0 <__assert_fail>
  9c:	add	w0, w0, #0x1
  a0:	str	x20, [x19]
  a4:	add	x20, x20, x21
  a8:	str	w0, [x19, #24]
  ac:	ldr	x21, [sp, #32]
  b0:	str	x20, [x19, #8]
  b4:	ldp	x19, x20, [sp, #16]
  b8:	ldp	x29, x30, [sp], #48
  bc:	ret

Disassembly of section .text._ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE:

0000000000000000 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x3, #0x1                   	// #1
   8:	lsl	x3, x3, x2
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x19, x1
  18:	ldr	x1, [x0, #80]
  1c:	stp	x21, x22, [sp, #32]
  20:	sub	x21, x3, #0x1
  24:	add	x1, x1, x19
  28:	stp	x23, x24, [sp, #48]
  2c:	mov	w22, w2
  30:	str	x25, [sp, #64]
  34:	neg	x3, x3
  38:	str	x1, [x0, #80]
  3c:	ldr	x1, [x0]
  40:	add	x2, x1, x21
  44:	and	x2, x2, x3
  48:	sub	x2, x2, x1
  4c:	adds	x4, x19, x2
  50:	b.cs	8c <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x8c>  // b.hs, b.nlast
  54:	ldr	x3, [x0, #8]
  58:	mov	x23, x0
  5c:	sub	x3, x3, x1
  60:	cmp	x4, x3
  64:	b.hi	ac <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0xac>  // b.pmore
  68:	add	x0, x1, x2
  6c:	add	x19, x0, x19
  70:	str	x19, [x23]
  74:	ldp	x19, x20, [sp, #16]
  78:	ldp	x21, x22, [sp, #32]
  7c:	ldp	x23, x24, [sp, #48]
  80:	ldr	x25, [sp, #64]
  84:	ldp	x29, x30, [sp], #96
  88:	ret
  8c:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
  90:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
  94:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
  98:	add	x3, x3, #0x0
  9c:	add	x1, x1, #0x0
  a0:	add	x0, x0, #0x0
  a4:	mov	w2, #0xdc                  	// #220
  a8:	bl	0 <__assert_fail>
  ac:	add	x21, x19, x21
  b0:	cmp	x21, #0x1, lsl #12
  b4:	b.ls	1ec <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x1ec>  // b.plast
  b8:	mov	x0, x21
  bc:	bl	0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
  c0:	mov	x20, x0
  c4:	ldp	w0, w3, [x23, #72]
  c8:	cmp	w0, w3
  cc:	b.cc	15c <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x15c>  // b.lo, b.ul, b.last
  d0:	mov	w3, w3
  d4:	add	x1, sp, #0x58
  d8:	add	x3, x3, #0x2
  dc:	orr	x3, x3, x3, lsr #1
  e0:	orr	x3, x3, x3, lsr #2
  e4:	orr	x3, x3, x3, lsr #4
  e8:	orr	x3, x3, x3, lsr #8
  ec:	orr	x0, x3, x3, lsr #16
  f0:	orr	x3, x0, x3, lsr #32
  f4:	mov	x0, #0xffffffff            	// #4294967295
  f8:	add	x3, x3, #0x1
  fc:	stp	x3, x0, [sp, #80]
 100:	cmp	x3, x0
 104:	add	x0, sp, #0x50
 108:	csel	x0, x0, x1, ls  // ls = plast
 10c:	ldr	x25, [x0]
 110:	lsl	x0, x25, #4
 114:	bl	0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 118:	mov	x24, x0
 11c:	mov	x3, x0
 120:	ldr	x0, [x23, #64]
 124:	ldr	w2, [x23, #72]
 128:	mov	x1, x0
 12c:	add	x2, x0, x2, lsl #4
 130:	cmp	x1, x2
 134:	b.eq	144 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x144>  // b.none
 138:	ldp	x4, x5, [x1], #16
 13c:	stp	x4, x5, [x3], #16
 140:	b	130 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x130>
 144:	add	x1, x23, #0x50
 148:	cmp	x0, x1
 14c:	b.eq	154 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x154>  // b.none
 150:	bl	0 <free>
 154:	str	x24, [x23, #64]
 158:	str	w25, [x23, #76]
 15c:	ldr	w0, [x23, #72]
 160:	ldr	x3, [x23, #64]
 164:	mov	w1, w0
 168:	ubfiz	x2, x0, #4, #32
 16c:	add	x1, x1, #0x1
 170:	add	x4, x3, x2
 174:	str	x20, [x3, x2]
 178:	ldr	w2, [x23, #76]
 17c:	str	x21, [x4, #8]
 180:	cmp	x1, x2
 184:	b.ls	1a8 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x1a8>  // b.plast
 188:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 18c:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 190:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 194:	add	x3, x3, #0x0
 198:	add	x1, x1, #0x0
 19c:	add	x0, x0, #0x0
 1a0:	mov	w2, #0x43                  	// #67
 1a4:	b	a8 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0xa8>
 1a8:	add	w0, w0, #0x1
 1ac:	str	w0, [x23, #72]
 1b0:	mov	w1, w22
 1b4:	mov	x0, x20
 1b8:	add	x20, x20, x21
 1bc:	bl	0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 1c0:	add	x19, x19, x0
 1c4:	cmp	x19, x20
 1c8:	b.ls	74 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x74>  // b.plast
 1cc:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 1d0:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 1d4:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 1d8:	add	x3, x3, #0x0
 1dc:	add	x1, x1, #0x0
 1e0:	add	x0, x0, #0x0
 1e4:	mov	w2, #0xfb                  	// #251
 1e8:	b	a8 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0xa8>
 1ec:	bl	0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 1f0:	ldr	x0, [x23]
 1f4:	mov	w1, w22
 1f8:	bl	0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 1fc:	add	x19, x19, x0
 200:	ldr	x1, [x23, #8]
 204:	cmp	x1, x19
 208:	b.cs	70 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x70>  // b.hs, b.nlast
 20c:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 210:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 214:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 218:	add	x3, x3, #0x0
 21c:	add	x1, x1, #0x0
 220:	add	x0, x0, #0x0
 224:	mov	w2, #0x105                 	// #261
 228:	b	a8 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0xa8>

Disassembly of section .text._ZN4llvm13AllocatorBaseINS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE8AllocateINS_7support6detail31packed_endian_specific_integralIjLNS6_10endiannessE1ELm1ELm1EEEEEPT_m:

0000000000000000 <_ZN4llvm13AllocatorBaseINS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE8AllocateINS_7support6detail31packed_endian_specific_integralIjLNS6_10endiannessE1ELm1ELm1EEEEEPT_m>:
   0:	lsl	x1, x1, #2
   4:	mov	w2, #0x0                   	// #0
   8:	b	0 <_ZN4llvm13AllocatorBaseINS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE8AllocateINS_7support6detail31packed_endian_specific_integralIjLNS6_10endiannessE1ELm1ELm1EEEEEPT_m>

Disassembly of section .text._ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_:

0000000000000000 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x3, x2
   8:	cmp	x1, x0
   c:	mov	x29, sp
  10:	str	x19, [sp, #16]
  14:	sub	x19, x1, x0
  18:	b.eq	30 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_+0x30>  // b.none
  1c:	mov	x1, x0
  20:	mov	x2, x19
  24:	mov	x0, x3
  28:	bl	0 <memmove>
  2c:	mov	x3, x0
  30:	add	x0, x3, x19
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret

Disassembly of section .text._ZNK4llvm8ArrayRefIjEcvSt6vectorIjSaIjEEEv:

0000000000000000 <_ZNK4llvm8ArrayRefIjEcvSt6vectorIjSaIjEEEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x1, #0x1fffffffffffffff    	// #2305843009213693951
   8:	mov	x29, sp
   c:	stp	x21, x22, [sp, #32]
  10:	ldp	x21, x0, [x0]
  14:	stp	x19, x20, [sp, #16]
  18:	stp	xzr, xzr, [x8]
  1c:	str	xzr, [x8, #16]
  20:	lsl	x20, x0, #2
  24:	add	x22, x21, x0, lsl #2
  28:	sbfx	x0, x0, #0, #62
  2c:	cmp	x0, x1
  30:	b.ls	40 <_ZNK4llvm8ArrayRefIjEcvSt6vectorIjSaIjEEEv+0x40>  // b.plast
  34:	adrp	x0, 0 <_ZNK4llvm8ArrayRefIjEcvSt6vectorIjSaIjEEEv>
  38:	add	x0, x0, #0x0
  3c:	bl	0 <_ZSt20__throw_length_errorPKc>
  40:	mov	x19, x8
  44:	cbz	x0, 80 <_ZNK4llvm8ArrayRefIjEcvSt6vectorIjSaIjEEEv+0x80>
  48:	bl	0 <_ZNK4llvm8ArrayRefIjEcvSt6vectorIjSaIjEEEv>
  4c:	mov	x2, x0
  50:	add	x20, x2, x20
  54:	str	x2, [x19]
  58:	str	x20, [x19, #16]
  5c:	mov	x1, x22
  60:	mov	x0, x21
  64:	bl	0 <_ZNK4llvm8ArrayRefIjEcvSt6vectorIjSaIjEEEv>
  68:	ldp	x21, x22, [sp, #32]
  6c:	str	x0, [x19, #8]
  70:	mov	x0, x19
  74:	ldp	x19, x20, [sp, #16]
  78:	ldp	x29, x30, [sp], #48
  7c:	ret
  80:	mov	x2, #0x0                   	// #0
  84:	b	50 <_ZNK4llvm8ArrayRefIjEcvSt6vectorIjSaIjEEEv+0x50>

Disassembly of section .text._ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag:

0000000000000000 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag>:
   0:	cmp	x3, x2
   4:	b.eq	1b8 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x1b8>  // b.none
   8:	stp	x29, x30, [sp, #-96]!
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	stp	x23, x24, [sp, #48]
  20:	mov	x23, x3
  24:	ldp	x24, x1, [x0, #8]
  28:	stp	x21, x22, [sp, #32]
  2c:	mov	x21, x2
  30:	stp	x25, x26, [sp, #64]
  34:	sub	x26, x3, x2
  38:	str	x27, [sp, #80]
  3c:	asr	x22, x26, #2
  40:	sub	x1, x1, x24
  44:	asr	x1, x1, #2
  48:	cmp	x1, x26, asr #2
  4c:	b.cc	110 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x110>  // b.lo, b.ul, b.last
  50:	sub	x25, x24, x20
  54:	asr	x27, x25, #2
  58:	cmp	x22, x25, asr #2
  5c:	b.cs	c0 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0xc0>  // b.hs, b.nlast
  60:	sub	x22, x24, x26
  64:	mov	x2, x26
  68:	mov	x1, x22
  6c:	mov	x0, x24
  70:	bl	0 <memmove>
  74:	ldr	x2, [x19, #8]
  78:	cmp	x22, x20
  7c:	add	x2, x2, x26
  80:	str	x2, [x19, #8]
  84:	b.eq	98 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x98>  // b.none
  88:	sub	x2, x22, x20
  8c:	mov	x1, x20
  90:	sub	x0, x24, x2
  94:	bl	0 <memmove>
  98:	mov	x2, x20
  9c:	mov	x1, x23
  a0:	mov	x0, x21
  a4:	ldp	x19, x20, [sp, #16]
  a8:	ldp	x21, x22, [sp, #32]
  ac:	ldp	x23, x24, [sp, #48]
  b0:	ldp	x25, x26, [sp, #64]
  b4:	ldr	x27, [sp, #80]
  b8:	ldp	x29, x30, [sp], #96
  bc:	b	0 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag>
  c0:	add	x26, x2, x25
  c4:	mov	x1, x3
  c8:	mov	x2, x24
  cc:	mov	x0, x26
  d0:	bl	0 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag>
  d4:	sub	x22, x22, x27
  d8:	ldr	x0, [x19, #8]
  dc:	cmp	x24, x20
  e0:	add	x0, x0, x22, lsl #2
  e4:	str	x0, [x19, #8]
  e8:	b.eq	f8 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0xf8>  // b.none
  ec:	mov	x2, x25
  f0:	mov	x1, x20
  f4:	bl	0 <memmove>
  f8:	ldr	x0, [x19, #8]
  fc:	mov	x2, x20
 100:	mov	x1, x26
 104:	add	x25, x0, x25
 108:	str	x25, [x19, #8]
 10c:	b	a0 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0xa0>
 110:	mov	x1, x22
 114:	adrp	x2, 0 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag>
 118:	add	x2, x2, #0x0
 11c:	bl	0 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag>
 120:	mov	x24, x0
 124:	cbz	x0, 1b0 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x1b0>
 128:	bl	0 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag>
 12c:	mov	x22, x0
 130:	ldr	x1, [x19]
 134:	subs	x25, x20, x1
 138:	b.eq	148 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x148>  // b.none
 13c:	mov	x2, x25
 140:	mov	x0, x22
 144:	bl	0 <memmove>
 148:	mov	x1, x23
 14c:	mov	x0, x21
 150:	add	x2, x22, x25
 154:	bl	0 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag>
 158:	ldr	x1, [x19, #8]
 15c:	mov	x21, x0
 160:	sub	x23, x1, x20
 164:	cmp	x20, x1
 168:	b.eq	178 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x178>  // b.none
 16c:	mov	x2, x23
 170:	mov	x1, x20
 174:	bl	0 <memmove>
 178:	ldr	x0, [x19]
 17c:	add	x21, x21, x23
 180:	cbz	x0, 188 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x188>
 184:	bl	0 <_ZdlPv>
 188:	ldp	x25, x26, [sp, #64]
 18c:	ldr	x27, [sp, #80]
 190:	stp	x22, x21, [x19]
 194:	add	x22, x22, x24, lsl #2
 198:	ldp	x23, x24, [sp, #48]
 19c:	str	x22, [x19, #16]
 1a0:	ldp	x19, x20, [sp, #16]
 1a4:	ldp	x21, x22, [sp, #32]
 1a8:	ldp	x29, x30, [sp], #96
 1ac:	ret
 1b0:	mov	x22, #0x0                   	// #0
 1b4:	b	130 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x130>
 1b8:	ret

MSFCommon.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	adrp	x3, 0 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>
   8:	adrp	x1, 0 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>
   c:	mov	x29, sp
  10:	adrp	x0, 0 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>
  14:	add	x3, x3, #0x0
  18:	add	x1, x1, #0x0
  1c:	add	x0, x0, #0x0
  20:	mov	w2, #0x37                  	// #55
  24:	bl	0 <__assert_fail>

0000000000000028 <_ZSt11make_uniqueIN4llvm3msf8MSFErrorEJNS1_14msf_error_codeERA31_KcEENSt9_MakeUniqIT_E15__single_objectEDpOT0_.isra.0.constprop.0>:
  28:	stp	x29, x30, [sp, #-80]!
  2c:	mov	x29, sp
  30:	stp	x19, x20, [sp, #16]
  34:	mov	x20, x0
  38:	mov	x19, x8
  3c:	str	x21, [sp, #32]
  40:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
  44:	mov	x21, x0
  48:	mov	w0, #0x101                 	// #257
  4c:	strh	w0, [sp, #72]
  50:	ldrb	w0, [x20]
  54:	stp	xzr, xzr, [sp, #56]
  58:	cbz	w0, 68 <_ZSt11make_uniqueIN4llvm3msf8MSFErrorEJNS1_14msf_error_codeERA31_KcEENSt9_MakeUniqIT_E15__single_objectEDpOT0_.isra.0.constprop.0+0x40>
  5c:	mov	w0, #0x3                   	// #3
  60:	str	x20, [sp, #56]
  64:	strb	w0, [sp, #72]
  68:	mov	x0, #0x40                  	// #64
  6c:	bl	0 <_Znwm>
  70:	add	x3, sp, #0x38
  74:	mov	x20, x0
  78:	mov	x2, x21
  7c:	mov	x1, #0x5                   	// #5
  80:	bl	0 <_ZN4llvm11StringErrorC2ESt10error_codeRKNS_5TwineE>
  84:	adrp	x1, 0 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>
  88:	mov	x0, x19
  8c:	ldr	x21, [sp, #32]
  90:	str	x20, [x19]
  94:	ldr	x1, [x1]
  98:	add	x1, x1, #0x10
  9c:	str	x1, [x20]
  a0:	ldp	x19, x20, [sp, #16]
  a4:	ldp	x29, x30, [sp], #80
  a8:	ret

00000000000000ac <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>:
  ac:	stp	x29, x30, [sp, #-64]!
  b0:	adrp	x1, 0 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>
  b4:	mov	x2, #0x20                  	// #32
  b8:	mov	x29, sp
  bc:	add	x1, x1, #0x0
  c0:	stp	x19, x20, [sp, #16]
  c4:	mov	x19, x8
  c8:	str	x21, [sp, #32]
  cc:	mov	x21, x0
  d0:	bl	0 <memcmp>
  d4:	cbz	w0, 128 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x7c>
  d8:	add	x20, sp, #0x30
  dc:	adrp	x0, 0 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>
  e0:	mov	x8, x20
  e4:	add	x0, x0, #0x0
  e8:	bl	28 <_ZSt11make_uniqueIN4llvm3msf8MSFErrorEJNS1_14msf_error_codeERA31_KcEENSt9_MakeUniqIT_E15__single_objectEDpOT0_.isra.0.constprop.0>
  ec:	add	x21, sp, #0x38
  f0:	mov	x1, x21
  f4:	ldr	x0, [sp, #48]
  f8:	stp	xzr, x0, [sp, #48]
  fc:	mov	x0, x19
 100:	bl	0 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>
 104:	mov	x0, x21
 108:	bl	0 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>
 10c:	mov	x0, x20
 110:	bl	0 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>
 114:	mov	x0, x19
 118:	ldp	x19, x20, [sp, #16]
 11c:	ldr	x21, [sp, #32]
 120:	ldp	x29, x30, [sp], #64
 124:	ret
 128:	ldr	w1, [x21, #32]
 12c:	cmp	w1, #0x800
 130:	b.eq	148 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x9c>  // b.none
 134:	b.hi	180 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0xd4>  // b.pmore
 138:	cmp	w1, #0x200
 13c:	b.eq	148 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x9c>  // b.none
 140:	cmp	w1, #0x400
 144:	b.ne	188 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0xdc>  // b.any
 148:	ldr	w0, [x21, #44]
 14c:	tst	x0, #0x3
 150:	b.ne	19c <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0xf0>  // b.any
 154:	mov	w20, w1
 158:	mov	w0, w0
 15c:	mov	x1, x20
 160:	bl	0 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>
 164:	cmp	x0, x20, lsr #2
 168:	b.ls	1b0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x104>  // b.plast
 16c:	add	x20, sp, #0x30
 170:	adrp	x0, 0 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>
 174:	mov	x8, x20
 178:	add	x0, x0, #0x0
 17c:	b	e8 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x3c>
 180:	cmp	w1, #0x1, lsl #12
 184:	b	144 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x98>
 188:	add	x20, sp, #0x30
 18c:	adrp	x0, 0 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>
 190:	mov	x8, x20
 194:	add	x0, x0, #0x0
 198:	b	e8 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x3c>
 19c:	add	x20, sp, #0x30
 1a0:	adrp	x0, 0 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>
 1a4:	mov	x8, x20
 1a8:	add	x0, x0, #0x0
 1ac:	b	e8 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x3c>
 1b0:	ldr	w0, [x21, #52]
 1b4:	cbnz	w0, 1cc <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x120>
 1b8:	add	x20, sp, #0x30
 1bc:	adrp	x0, 0 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>
 1c0:	mov	x8, x20
 1c4:	add	x0, x0, #0x0
 1c8:	b	e8 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x3c>
 1cc:	ldr	w1, [x21, #40]
 1d0:	cmp	w0, w1
 1d4:	b.cc	1ec <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x140>  // b.lo, b.ul, b.last
 1d8:	add	x20, sp, #0x30
 1dc:	adrp	x0, 0 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>
 1e0:	mov	x8, x20
 1e4:	add	x0, x0, #0x0
 1e8:	b	e8 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x3c>
 1ec:	ldr	w0, [x21, #36]
 1f0:	sub	w0, w0, #0x1
 1f4:	cmp	w0, #0x1
 1f8:	b.ls	210 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x164>  // b.plast
 1fc:	add	x20, sp, #0x30
 200:	adrp	x0, 0 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>
 204:	mov	x8, x20
 208:	add	x0, x0, #0x0
 20c:	b	e8 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x3c>
 210:	mov	x0, #0x1                   	// #1
 214:	str	x0, [x19]
 218:	b	114 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x68>

000000000000021c <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb>:
 21c:	stp	x29, x30, [sp, #-96]!
 220:	mov	x29, sp
 224:	stp	x21, x22, [sp, #32]
 228:	add	x21, x8, #0x8
 22c:	mov	x22, x8
 230:	stp	x19, x20, [sp, #16]
 234:	ands	w20, w2, #0xff
 238:	stp	x23, x24, [sp, #48]
 23c:	mov	x23, x0
 240:	and	w24, w1, #0xff
 244:	stp	x25, x26, [sp, #64]
 248:	ldr	x19, [x0]
 24c:	str	xzr, [x8, #8]
 250:	stp	xzr, xzr, [x21, #8]
 254:	ldr	w26, [x19, #32]
 258:	ldr	w25, [x19, #40]
 25c:	b.ne	274 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x58>  // b.any
 260:	ldr	w0, [x19, #36]
 264:	sub	w1, w0, #0x1
 268:	cmp	w1, #0x1
 26c:	b.ls	2a4 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x88>  // b.plast
 270:	bl	0 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>
 274:	bl	0 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>
 278:	sub	w1, w0, #0x1
 27c:	cmp	w1, #0x1
 280:	b.ls	2a4 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x88>  // b.plast
 284:	adrp	x3, 0 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>
 288:	adrp	x1, 0 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>
 28c:	adrp	x0, 0 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>
 290:	add	x3, x3, #0x0
 294:	add	x1, x1, #0x0
 298:	add	x0, x0, #0x0
 29c:	mov	w2, #0x86                  	// #134
 2a0:	bl	0 <__assert_fail>
 2a4:	cbz	w24, 30c <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0xf0>
 2a8:	mov	w1, w26
 2ac:	sub	w0, w25, w0
 2b0:	bl	0 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>
 2b4:	mov	w25, w0
 2b8:	cbz	w20, 318 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0xfc>
 2bc:	mov	x0, x23
 2c0:	bl	0 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>
 2c4:	mov	w20, w0
 2c8:	add	x26, sp, #0x58
 2cc:	mov	w19, #0x0                   	// #0
 2d0:	cmp	w19, w25
 2d4:	b.eq	340 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x124>  // b.none
 2d8:	ldp	x1, x0, [x21, #8]
 2dc:	str	w20, [sp, #88]
 2e0:	cmp	x1, x0
 2e4:	b.eq	330 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x114>  // b.none
 2e8:	str	w20, [x1]
 2ec:	ldr	x0, [x21, #8]
 2f0:	add	x0, x0, #0x4
 2f4:	str	x0, [x21, #8]
 2f8:	ldr	x0, [x23]
 2fc:	add	w19, w19, #0x1
 300:	ldr	w0, [x0, #32]
 304:	add	w20, w20, w0
 308:	b	2d0 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0xb4>
 30c:	lsl	w1, w26, #3
 310:	mov	w0, w25
 314:	b	2b0 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x94>
 318:	ldr	w20, [x19, #36]
 31c:	cmp	w20, #0x1
 320:	b.eq	2c8 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0xac>  // b.none
 324:	cmp	w20, #0x2
 328:	b.eq	2c8 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0xac>  // b.none
 32c:	b	270 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x54>
 330:	mov	x2, x26
 334:	mov	x0, x21
 338:	bl	0 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>
 33c:	b	2f8 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0xdc>
 340:	ldr	x0, [x23]
 344:	cbz	w24, 370 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x154>
 348:	ldr	w0, [x0, #32]
 34c:	mul	w0, w19, w0
 350:	ldp	x19, x20, [sp, #16]
 354:	ldp	x23, x24, [sp, #48]
 358:	ldp	x25, x26, [sp, #64]
 35c:	str	w0, [x22]
 360:	mov	x0, x22
 364:	ldp	x21, x22, [sp, #32]
 368:	ldp	x29, x30, [sp], #96
 36c:	ret
 370:	ldr	w0, [x0, #40]
 374:	mov	x1, #0x8                   	// #8
 378:	bl	0 <_ZNK4llvm3msf9MSFLayout12mainFpmBlockEv.isra.0.part.0>
 37c:	b	350 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x134>

Disassembly of section .text._ZNK4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEE14dynamicClassIDEv:

0000000000000000 <_ZNK4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEE14dynamicClassIDEv>:
   0:	adrp	x0, 0 <_ZN4llvm3msf8MSFError2IDE>
   4:	ldr	x0, [x0]
   8:	ret

Disassembly of section .text._ZNK4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEE3isAEPKv:

0000000000000000 <_ZNK4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEE3isAEPKv>:
   0:	adrp	x0, 0 <_ZN4llvm3msf8MSFError2IDE>
   4:	ldr	x0, [x0]
   8:	cmp	x1, x0
   c:	b.eq	34 <_ZNK4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEE3isAEPKv+0x34>  // b.none
  10:	adrp	x0, 0 <_ZN4llvm11StringError2IDE>
  14:	ldr	x0, [x0]
  18:	cmp	x1, x0
  1c:	b.eq	34 <_ZNK4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEE3isAEPKv+0x34>  // b.none
  20:	adrp	x0, 0 <_ZN4llvm13ErrorInfoBase2IDE>
  24:	ldr	x0, [x0]
  28:	cmp	x1, x0
  2c:	cset	w0, eq  // eq = none
  30:	ret
  34:	mov	w0, #0x1                   	// #1
  38:	b	30 <_ZNK4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEE3isAEPKv+0x30>

Disassembly of section .text._ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev:

0000000000000000 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-128]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	add	x20, sp, #0x30
  10:	add	x1, x20, #0x10
  14:	stp	x1, xzr, [sp, #48]
  18:	mov	w1, #0x1                   	// #1
  1c:	mov	x19, x8
  20:	str	w1, [sp, #112]
  24:	adrp	x1, 0 <_ZTVN4llvm18raw_string_ostreamE>
  28:	strb	wzr, [sp, #64]
  2c:	ldr	x1, [x1]
  30:	str	x21, [sp, #32]
  34:	stp	xzr, xzr, [sp, #88]
  38:	add	x21, sp, #0x50
  3c:	add	x1, x1, #0x10
  40:	str	x1, [sp, #80]
  44:	ldr	x1, [x0]
  48:	str	xzr, [sp, #104]
  4c:	str	x20, [sp, #120]
  50:	ldr	x2, [x1, #16]
  54:	mov	x1, x21
  58:	blr	x2
  5c:	ldr	x0, [sp, #88]
  60:	ldr	x1, [sp, #104]
  64:	cmp	x1, x0
  68:	b.eq	74 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x74>  // b.none
  6c:	mov	x0, x21
  70:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  74:	ldr	x1, [sp, #120]
  78:	mov	x0, x19
  7c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
  80:	mov	x0, x21
  84:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
  88:	mov	x0, x20
  8c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
  90:	mov	x0, x19
  94:	ldp	x19, x20, [sp, #16]
  98:	ldr	x21, [sp, #32]
  9c:	ldp	x29, x30, [sp], #128
  a0:	ret

Disassembly of section .text._ZN4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEED2Ev:

0000000000000000 <_ZN4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEED1Ev>:
   0:	adrp	x1, 0 <_ZTVN4llvm11StringErrorE>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0], #8
  10:	b	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>

Disassembly of section .text._ZN4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEED0Ev:

0000000000000000 <_ZN4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEED0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEED0Ev>
  14:	mov	x0, x19
  18:	mov	x1, #0x40                  	// #64
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm3msf8MSFErrorD2Ev:

0000000000000000 <_ZN4llvm3msf8MSFErrorD1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm3msf8MSFErrorD1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0]
  10:	b	0 <_ZN4llvm3msf8MSFErrorD1Ev>

Disassembly of section .text._ZN4llvm3msf8MSFErrorD0Ev:

0000000000000000 <_ZN4llvm3msf8MSFErrorD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm3msf8MSFErrorD0Ev>
  14:	mov	x0, x19
  18:	mov	x1, #0x40                  	// #64
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm10divideCeilEmm:

0000000000000000 <_ZN4llvm10divideCeilEmm>:
   0:	cbnz	x1, 2c <_ZN4llvm10divideCeilEmm+0x2c>
   4:	stp	x29, x30, [sp, #-16]!
   8:	adrp	x3, 0 <_ZN4llvm10divideCeilEmm>
   c:	adrp	x1, 0 <_ZN4llvm10divideCeilEmm>
  10:	mov	x29, sp
  14:	adrp	x0, 0 <_ZN4llvm10divideCeilEmm>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x2ce                 	// #718
  28:	bl	0 <__assert_fail>
  2c:	sub	x2, x1, #0x1
  30:	add	x0, x2, x0
  34:	udiv	x0, x0, x1
  38:	mul	x0, x0, x1
  3c:	udiv	x0, x0, x1
  40:	ret

Disassembly of section .text._ZN4llvm5ErrorC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EE:

0000000000000000 <_ZN4llvm5ErrorC1ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EE>:
   0:	ldr	x2, [x1]
   4:	str	xzr, [x1]
   8:	orr	x1, x2, #0x1
   c:	str	x1, [x0]
  10:	ret

Disassembly of section .text._ZNK4llvm3msf9MSFLayout17alternateFpmBlockEv:

0000000000000000 <_ZNK4llvm3msf9MSFLayout17alternateFpmBlockEv>:
   0:	ldr	x0, [x0]
   4:	ldr	w0, [x0, #36]
   8:	sub	w1, w0, #0x1
   c:	cmp	w1, #0x1
  10:	b.ls	20 <_ZNK4llvm3msf9MSFLayout17alternateFpmBlockEv+0x20>  // b.plast
  14:	stp	x29, x30, [sp, #-16]!
  18:	mov	x29, sp
  1c:	bl	0 <_ZNK4llvm3msf9MSFLayout17alternateFpmBlockEv>
  20:	mov	w1, #0x3                   	// #3
  24:	sub	w0, w1, w0
  28:	ret

Disassembly of section .text._ZNSt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS1_EED2Ev:

0000000000000000 <_ZNSt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS1_EED1Ev>:
   0:	ldr	x0, [x0]
   4:	cbz	x0, 18 <_ZNSt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS1_EED1Ev+0x18>
   8:	ldr	x1, [x0]
   c:	ldr	x1, [x1, #8]
  10:	mov	x16, x1
  14:	br	x16
  18:	ret

Disassembly of section .text._ZNSt10unique_ptrIN4llvm3msf8MSFErrorESt14default_deleteIS2_EED2Ev:

0000000000000000 <_ZNSt10unique_ptrIN4llvm3msf8MSFErrorESt14default_deleteIS2_EED1Ev>:
   0:	ldr	x0, [x0]
   4:	cbz	x0, 18 <_ZNSt10unique_ptrIN4llvm3msf8MSFErrorESt14default_deleteIS2_EED1Ev+0x18>
   8:	ldr	x1, [x0]
   c:	ldr	x1, [x1, #8]
  10:	mov	x16, x1
  14:	br	x16
  18:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x23, x24, [sp, #48]
   c:	ldp	x24, x23, [x0]
  10:	stp	x19, x20, [sp, #16]
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x22, x0
  1c:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
  20:	stp	x25, x26, [sp, #64]
  24:	mov	x25, x1
  28:	sub	x1, x23, x24
  2c:	cmp	x0, x1, asr #2
  30:	b.ne	40 <_ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x40>  // b.any
  34:	adrp	x0, 0 <_ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
  38:	add	x0, x0, #0x0
  3c:	bl	0 <_ZSt20__throw_length_errorPKc>
  40:	asr	x19, x1, #2
  44:	mov	x26, x2
  48:	cmp	x19, #0x0
  4c:	sub	x20, x25, x24
  50:	csinc	x1, x19, xzr, ne  // ne = any
  54:	adds	x19, x19, x1
  58:	b.cs	f0 <_ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xf0>  // b.hs, b.nlast
  5c:	mov	x21, #0x0                   	// #0
  60:	cbz	x19, 78 <_ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x78>
  64:	cmp	x19, x0
  68:	csel	x19, x19, x0, ls  // ls = plast
  6c:	lsl	x0, x19, #2
  70:	bl	0 <_Znwm>
  74:	mov	x21, x0
  78:	ldr	w0, [x26]
  7c:	cmp	x20, #0x0
  80:	str	w0, [x21, x20]
  84:	b.le	98 <_ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x98>
  88:	mov	x2, x20
  8c:	mov	x1, x24
  90:	mov	x0, x21
  94:	bl	0 <memmove>
  98:	add	x20, x20, #0x4
  9c:	sub	x23, x23, x25
  a0:	add	x20, x21, x20
  a4:	cmp	x23, #0x0
  a8:	b.le	bc <_ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xbc>
  ac:	mov	x2, x23
  b0:	mov	x1, x25
  b4:	mov	x0, x20
  b8:	bl	0 <memcpy>
  bc:	add	x20, x20, x23
  c0:	cbz	x24, cc <_ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xcc>
  c4:	mov	x0, x24
  c8:	bl	0 <_ZdlPv>
  cc:	add	x19, x21, x19, lsl #2
  d0:	ldp	x23, x24, [sp, #48]
  d4:	ldp	x25, x26, [sp, #64]
  d8:	stp	x21, x20, [x22]
  dc:	str	x19, [x22, #16]
  e0:	ldp	x19, x20, [sp, #16]
  e4:	ldp	x21, x22, [sp, #32]
  e8:	ldp	x29, x30, [sp], #80
  ec:	ret
  f0:	mov	x19, x0
  f4:	b	6c <_ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x6c>

MSFError.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>:
   0:	adrp	x0, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
   4:	add	x0, x0, #0x0
   8:	ret

000000000000000c <_ZN12_GLOBAL__N_116MSFErrorCategoryD1Ev>:
   c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
  10:	add	x1, x1, #0x0
  14:	add	x1, x1, #0x10
  18:	str	x1, [x0]
  1c:	b	0 <_ZNSt3_V214error_categoryD2Ev>

0000000000000020 <_ZN12_GLOBAL__N_116MSFErrorCategoryD0Ev>:
  20:	stp	x29, x30, [sp, #-32]!
  24:	mov	x29, sp
  28:	str	x19, [sp, #16]
  2c:	mov	x19, x0
  30:	bl	c <_ZN12_GLOBAL__N_116MSFErrorCategoryD1Ev>
  34:	mov	x0, x19
  38:	mov	x1, #0x8                   	// #8
  3c:	ldr	x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	b	0 <_ZdlPvm>

0000000000000048 <_ZN4llvm14object_deleterIN12_GLOBAL__N_116MSFErrorCategoryEE4callEPv>:
  48:	cbz	x0, 50 <_ZN4llvm14object_deleterIN12_GLOBAL__N_116MSFErrorCategoryEE4callEPv+0x8>
  4c:	b	20 <_ZN12_GLOBAL__N_116MSFErrorCategoryD0Ev>
  50:	ret

0000000000000054 <_ZN4llvm14object_creatorIN12_GLOBAL__N_116MSFErrorCategoryEE4callEv>:
  54:	stp	x29, x30, [sp, #-16]!
  58:	mov	x0, #0x8                   	// #8
  5c:	mov	x29, sp
  60:	bl	0 <_Znwm>
  64:	adrp	x1, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
  68:	add	x1, x1, #0x0
  6c:	add	x1, x1, #0x10
  70:	str	x1, [x0]
  74:	ldp	x29, x30, [sp], #16
  78:	ret

000000000000007c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0>:
  7c:	stp	x29, x30, [sp, #-64]!
  80:	mov	x29, sp
  84:	stp	x19, x20, [sp, #16]
  88:	mov	x19, x0
  8c:	add	x0, x0, #0x10
  90:	mov	x20, x1
  94:	str	x0, [x19]
  98:	mov	x0, x1
  9c:	str	x21, [sp, #32]
  a0:	bl	0 <strlen>
  a4:	str	x0, [sp, #56]
  a8:	add	x21, x20, x0
  ac:	cmp	x0, #0xf
  b0:	b.ls	d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0+0x54>  // b.plast
  b4:	add	x1, sp, #0x38
  b8:	mov	x0, x19
  bc:	mov	x2, #0x0                   	// #0
  c0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  c4:	str	x0, [x19]
  c8:	ldr	x0, [sp, #56]
  cc:	str	x0, [x19, #16]
  d0:	ldr	x0, [x19]
  d4:	mov	x2, x21
  d8:	mov	x1, x20
  dc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>
  e0:	ldr	x1, [x19]
  e4:	ldr	x0, [sp, #56]
  e8:	str	x0, [x19, #8]
  ec:	strb	wzr, [x1, x0]
  f0:	ldp	x19, x20, [sp, #16]
  f4:	ldr	x21, [sp, #32]
  f8:	ldp	x29, x30, [sp], #64
  fc:	ret

0000000000000100 <_ZNK12_GLOBAL__N_116MSFErrorCategory7messageEi>:
 100:	stp	x29, x30, [sp, #-32]!
 104:	sub	w1, w1, #0x1
 108:	cmp	w1, #0x5
 10c:	mov	x29, sp
 110:	str	x19, [sp, #16]
 114:	b.hi	190 <_ZNK12_GLOBAL__N_116MSFErrorCategory7messageEi+0x90>  // b.pmore
 118:	adrp	x0, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
 11c:	mov	x19, x8
 120:	add	x0, x0, #0x0
 124:	ldrb	w0, [x0, w1, uxtw]
 128:	adr	x1, 134 <_ZNK12_GLOBAL__N_116MSFErrorCategory7messageEi+0x34>
 12c:	add	x0, x1, w0, sxtb #2
 130:	br	x0
 134:	adrp	x1, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
 138:	add	x1, x1, #0x0
 13c:	mov	x0, x19
 140:	bl	7c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0>
 144:	mov	x0, x19
 148:	ldr	x19, [sp, #16]
 14c:	ldp	x29, x30, [sp], #32
 150:	ret
 154:	adrp	x1, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
 158:	add	x1, x1, #0x0
 15c:	b	13c <_ZNK12_GLOBAL__N_116MSFErrorCategory7messageEi+0x3c>
 160:	adrp	x1, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
 164:	add	x1, x1, #0x0
 168:	b	13c <_ZNK12_GLOBAL__N_116MSFErrorCategory7messageEi+0x3c>
 16c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
 170:	add	x1, x1, #0x0
 174:	b	13c <_ZNK12_GLOBAL__N_116MSFErrorCategory7messageEi+0x3c>
 178:	adrp	x1, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
 17c:	add	x1, x1, #0x0
 180:	b	13c <_ZNK12_GLOBAL__N_116MSFErrorCategory7messageEi+0x3c>
 184:	adrp	x1, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
 188:	add	x1, x1, #0x0
 18c:	b	13c <_ZNK12_GLOBAL__N_116MSFErrorCategory7messageEi+0x3c>
 190:	adrp	x1, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
 194:	adrp	x0, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
 198:	add	x1, x1, #0x0
 19c:	add	x0, x0, #0x0
 1a0:	mov	w2, #0x27                  	// #39
 1a4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

00000000000001a8 <_ZN4llvm3msf14MSFErrCategoryEv>:
 1a8:	stp	x29, x30, [sp, #-32]!
 1ac:	adrp	x1, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
 1b0:	add	x0, x1, #0x0
 1b4:	mov	x29, sp
 1b8:	str	x19, [sp, #16]
 1bc:	ldar	x2, [x0]
 1c0:	mov	x19, x1
 1c4:	cbnz	x2, 1dc <_ZN4llvm3msf14MSFErrCategoryEv+0x34>
 1c8:	adrp	x2, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
 1cc:	adrp	x1, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
 1d0:	add	x2, x2, #0x0
 1d4:	add	x1, x1, #0x0
 1d8:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
 1dc:	add	x1, x19, #0x0
 1e0:	ldr	x0, [x1]
 1e4:	ldr	x19, [sp, #16]
 1e8:	ldp	x29, x30, [sp], #32
 1ec:	ret
