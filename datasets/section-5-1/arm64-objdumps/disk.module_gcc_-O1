
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//disk.module_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_disk_cache_invalidate>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	and	x5, x2, #0xffffffffffffffc0
  10:	lsl	x3, x0, #19
  14:	sub	x4, x3, x0
  18:	mov	x3, #0xc57b                	// #50555
  1c:	movk	x3, #0x27, lsl #16
  20:	madd	x3, x1, x3, x4
  24:	ubfx	x2, x2, #6, #32
  28:	add	x2, x3, x2
  2c:	mov	x3, #0xedb3                	// #60851
  30:	movk	x3, #0x513c, lsl #16
  34:	movk	x3, #0x906c, lsl #32
  38:	movk	x3, #0xc0, lsl #48
  3c:	umulh	x4, x2, x3
  40:	sub	x3, x2, x4
  44:	add	x3, x4, x3, lsr #1
  48:	lsr	x3, x3, #9
  4c:	lsl	x4, x3, #8
  50:	sub	x4, x4, x3
  54:	add	x3, x3, x4, lsl #2
  58:	sub	x2, x2, x3
  5c:	add	x2, x2, x2, lsl #2
  60:	lsl	x2, x2, #3
  64:	adrp	x3, 0 <grub_disk_cache_invalidate>
  68:	ldr	x3, [x3]
  6c:	add	x19, x2, x3
  70:	ldr	w2, [x2, x3]
  74:	cmp	x2, x0
  78:	b.eq	88 <grub_disk_cache_invalidate+0x88>  // b.none
  7c:	ldr	x19, [sp, #16]
  80:	ldp	x29, x30, [sp], #32
  84:	ret
  88:	ldr	x0, [x19, #8]
  8c:	cmp	x0, x1
  90:	b.ne	7c <grub_disk_cache_invalidate+0x7c>  // b.any
  94:	ldr	x0, [x19, #16]
  98:	cmp	x0, x5
  9c:	b.ne	7c <grub_disk_cache_invalidate+0x7c>  // b.any
  a0:	ldr	x0, [x19, #24]
  a4:	cbz	x0, 7c <grub_disk_cache_invalidate+0x7c>
  a8:	mov	w1, #0x1                   	// #1
  ac:	str	w1, [x19, #32]
  b0:	bl	0 <grub_free>
  b4:	str	xzr, [x19, #24]
  b8:	str	wzr, [x19, #32]
  bc:	b	7c <grub_disk_cache_invalidate+0x7c>
	...

00000000000000c8 <grub_disk_write>:
  c8:	stp	x29, x30, [sp, #-96]!
  cc:	mov	x29, sp
  d0:	stp	x19, x20, [sp, #16]
  d4:	stp	x21, x22, [sp, #32]
  d8:	stp	x23, x24, [sp, #48]
  dc:	stp	x25, x26, [sp, #64]
  e0:	mov	x19, x0
  e4:	mov	x20, x1
  e8:	mov	x22, x2
  ec:	mov	x23, x3
  f0:	mov	x25, x4
  f4:	ldr	x4, [x0]
  f8:	adrp	x0, 0 <grub_disk_cache_invalidate>
  fc:	ldr	x3, [x0]
 100:	adrp	x0, 0 <grub_disk_cache_invalidate>
 104:	ldr	x2, [x0]
 108:	mov	w1, #0x3d                  	// #61
 10c:	adrp	x0, 0 <grub_disk_cache_invalidate>
 110:	ldr	x0, [x0]
 114:	bl	0 <grub_real_dprintf>
 118:	add	x20, x20, x22, lsr #9
 11c:	and	x22, x22, #0x1ff
 120:	ldr	x0, [x19, #40]
 124:	cbz	x0, 15c <grub_disk_write+0x94>
 128:	add	x3, x22, #0x1ff
 12c:	add	x3, x3, x23
 130:	lsr	x3, x3, #9
 134:	ldr	x2, [x0, #8]
 138:	ldr	x1, [x0, #16]
 13c:	cmp	x1, x20
 140:	b.ls	1b0 <grub_disk_write+0xe8>  // b.plast
 144:	sub	x1, x1, x20
 148:	cmp	x1, x3
 14c:	b.cc	1b0 <grub_disk_write+0xe8>  // b.lo, b.ul, b.last
 150:	add	x20, x20, x2
 154:	ldr	x0, [x0, #40]
 158:	cbnz	x0, 134 <grub_disk_write+0x6c>
 15c:	ldr	w0, [x19, #24]
 160:	sub	w1, w0, #0x9
 164:	ldr	x0, [x19, #16]
 168:	lsl	x0, x0, x1
 16c:	mov	x1, #0x8000000000000       	// #2251799813685248
 170:	cmp	x0, x1
 174:	csel	x0, x0, x1, ls  // ls = plast
 178:	cmp	x0, x20
 17c:	b.ls	194 <grub_disk_write+0xcc>  // b.plast
 180:	add	x1, x22, #0x1ff
 184:	add	x1, x1, x23
 188:	sub	x0, x0, x20
 18c:	cmp	x0, x1, lsr #9
 190:	b.cs	1cc <grub_disk_write+0x104>  // b.hs, b.nlast
 194:	ldr	x2, [x19]
 198:	adrp	x0, 0 <grub_disk_cache_invalidate>
 19c:	ldr	x1, [x0]
 1a0:	mov	w0, #0xb                   	// #11
 1a4:	bl	0 <grub_error>
 1a8:	mov	w1, w0
 1ac:	b	1c4 <grub_disk_write+0xfc>
 1b0:	adrp	x0, 0 <grub_disk_cache_invalidate>
 1b4:	ldr	x1, [x0]
 1b8:	mov	w0, #0xb                   	// #11
 1bc:	bl	0 <grub_error>
 1c0:	mov	w1, w0
 1c4:	mov	w0, #0xffffffff            	// #-1
 1c8:	cbnz	w1, 398 <grub_disk_write+0x2d0>
 1cc:	stp	x27, x28, [sp, #80]
 1d0:	ldr	w28, [x19, #24]
 1d4:	sub	w0, w28, #0x9
 1d8:	mov	x28, #0xffffffffffffffff    	// #-1
 1dc:	lsl	x28, x28, x0
 1e0:	and	x21, x28, x20
 1e4:	bic	w28, w20, w28
 1e8:	add	w28, w22, w28, lsl #9
 1ec:	cbz	x23, 388 <grub_disk_write+0x2c0>
 1f0:	mov	w24, #0x1                   	// #1
 1f4:	mov	x26, #0x1                   	// #1
 1f8:	mov	w27, #0xf                   	// #15
 1fc:	b	2c8 <grub_disk_write+0x200>
 200:	ldr	w0, [x19, #24]
 204:	lsl	w0, w24, w0
 208:	bl	0 <grub_malloc>
 20c:	mov	x22, x0
 210:	cbz	x0, 368 <grub_disk_write+0x2a0>
 214:	ldr	x20, [x19, #40]
 218:	str	xzr, [x19, #40]
 21c:	ldr	w3, [x19, #24]
 220:	mov	x4, x0
 224:	lsl	w3, w24, w3
 228:	mov	x2, #0x0                   	// #0
 22c:	mov	x1, x21
 230:	mov	x0, x19
 234:	bl	0 <grub_disk_read>
 238:	cbnz	w0, 37c <grub_disk_write+0x2b4>
 23c:	str	x20, [x19, #40]
 240:	ldr	w20, [x19, #24]
 244:	lsl	w20, w24, w20
 248:	sub	w20, w20, w28
 24c:	cmp	x23, x20
 250:	csel	x20, x23, x20, ls  // ls = plast
 254:	mov	x2, x20
 258:	mov	x1, x25
 25c:	add	x0, x22, w28, uxtw
 260:	bl	0 <grub_memmove>
 264:	ldr	x0, [x19, #8]
 268:	mov	x2, x21
 26c:	ldr	x1, [x19, #32]
 270:	ldr	w0, [x0, #8]
 274:	bl	0 <grub_disk_cache_invalidate>
 278:	ldr	w1, [x19, #24]
 27c:	sub	w1, w1, #0x9
 280:	ldr	x0, [x19, #8]
 284:	ldr	x4, [x0, #48]
 288:	mov	x3, x22
 28c:	mov	x2, x26
 290:	lsr	x1, x21, x1
 294:	mov	x0, x19
 298:	blr	x4
 29c:	cbnz	w0, 3b0 <grub_disk_write+0x2e8>
 2a0:	mov	x0, x22
 2a4:	bl	0 <grub_free>
 2a8:	ldr	w0, [x19, #24]
 2ac:	sub	w0, w0, #0x9
 2b0:	lsl	w0, w24, w0
 2b4:	add	x21, x21, x0
 2b8:	add	x25, x25, x20
 2bc:	sub	x23, x23, x20
 2c0:	mov	w28, #0x0                   	// #0
 2c4:	cbz	x23, 388 <grub_disk_write+0x2c0>
 2c8:	cbnz	w28, 200 <grub_disk_write+0x138>
 2cc:	ldr	w1, [x19, #24]
 2d0:	lsl	w0, w24, w1
 2d4:	cmp	x0, x23
 2d8:	b.hi	200 <grub_disk_write+0x138>  // b.pmore
 2dc:	lsl	x28, x26, x1
 2e0:	neg	x28, x28
 2e4:	and	x28, x28, x23
 2e8:	lsr	x0, x23, x1
 2ec:	sub	w2, w27, w1
 2f0:	ldr	w22, [x19, #28]
 2f4:	lsl	w22, w22, w2
 2f8:	cmp	x22, x0
 2fc:	csel	x22, x22, x0, ls  // ls = plast
 300:	sub	w1, w1, #0x9
 304:	ldr	x0, [x19, #8]
 308:	ldr	x4, [x0, #48]
 30c:	mov	x3, x25
 310:	mov	x2, x22
 314:	lsr	x1, x21, x1
 318:	mov	x0, x19
 31c:	blr	x4
 320:	cbnz	w0, 388 <grub_disk_write+0x2c0>
 324:	sub	x20, x22, #0x1
 328:	cbz	x22, 35c <grub_disk_write+0x294>
 32c:	ldr	x0, [x19, #8]
 330:	mov	x2, x21
 334:	ldr	x1, [x19, #32]
 338:	ldr	w0, [x0, #8]
 33c:	bl	0 <grub_disk_cache_invalidate>
 340:	ldr	w0, [x19, #24]
 344:	sub	w0, w0, #0x9
 348:	lsl	w0, w24, w0
 34c:	add	x21, x21, x0
 350:	sub	x20, x20, #0x1
 354:	cmn	x20, #0x1
 358:	b.ne	32c <grub_disk_write+0x264>  // b.any
 35c:	add	x25, x25, x28
 360:	sub	x23, x23, x28
 364:	b	2c0 <grub_disk_write+0x1f8>
 368:	adrp	x0, 0 <grub_disk_cache_invalidate>
 36c:	ldr	x0, [x0]
 370:	ldr	w0, [x0]
 374:	ldp	x27, x28, [sp, #80]
 378:	b	398 <grub_disk_write+0x2d0>
 37c:	str	x20, [x19, #40]
 380:	mov	x0, x22
 384:	bl	0 <grub_free>
 388:	adrp	x0, 0 <grub_disk_cache_invalidate>
 38c:	ldr	x0, [x0]
 390:	ldr	w0, [x0]
 394:	ldp	x27, x28, [sp, #80]
 398:	ldp	x19, x20, [sp, #16]
 39c:	ldp	x21, x22, [sp, #32]
 3a0:	ldp	x23, x24, [sp, #48]
 3a4:	ldp	x25, x26, [sp, #64]
 3a8:	ldp	x29, x30, [sp], #96
 3ac:	ret
 3b0:	mov	x0, x22
 3b4:	bl	0 <grub_free>
 3b8:	b	388 <grub_disk_write+0x2c0>
 3bc:	nop
	...

00000000000003f0 <grub_mod_init>:
 3f0:	adrp	x0, 0 <grub_disk_cache_invalidate>
 3f4:	ldr	x0, [x0]
 3f8:	adrp	x1, 0 <grub_disk_cache_invalidate>
 3fc:	ldr	x1, [x1]
 400:	str	x1, [x0]
 404:	ret
	...

0000000000000418 <grub_mod_fini>:
 418:	adrp	x0, 0 <grub_disk_cache_invalidate>
 41c:	ldr	x0, [x0]
 420:	str	xzr, [x0]
 424:	ret
	...
