
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//efi_gop.mod_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0xb78>:
   0:	mov	w0, #0x1                   	// #1
   4:	str	w0, [x1]
   8:	ret
   c:	ldr	w1, [x0, #12]
  10:	cmp	w1, #0x1
  14:	b.ls	80 <grub_mod_init-0xaf8>  // b.plast
  18:	cmp	w1, #0x2
  1c:	b.ne	78 <grub_mod_init-0xb00>  // b.any
  20:	ldp	w1, w2, [x0, #16]
  24:	tst	w1, w2
  28:	b.ne	78 <grub_mod_init-0xb00>  // b.any
  2c:	ldr	w3, [x0, #24]
  30:	orr	w1, w1, w2
  34:	tst	w1, w3
  38:	b.ne	78 <grub_mod_init-0xb00>  // b.any
  3c:	ldr	w2, [x0, #28]
  40:	orr	w0, w1, w3
  44:	tst	w2, w0
  48:	b.ne	78 <grub_mod_init-0xb00>  // b.any
  4c:	orr	w2, w2, w0
  50:	mov	w1, #0x1                   	// #1
  54:	mov	w0, #0x1f                  	// #31
  58:	lsl	w3, w1, w0
  5c:	tst	w3, w2
  60:	b.eq	6c <grub_mod_init-0xb0c>  // b.none
  64:	add	w0, w0, #0x1
  68:	ret
  6c:	sub	w0, w0, #0x1
  70:	cmn	w0, #0x1
  74:	b.ne	58 <grub_mod_init-0xb20>  // b.any
  78:	mov	w0, #0x0                   	// #0
  7c:	b	68 <grub_mod_init-0xb10>
  80:	mov	w0, #0x20                  	// #32
  84:	b	68 <grub_mod_init-0xb10>
  88:	mov	w4, #0x1f                  	// #31
  8c:	mov	w6, #0x1                   	// #1
  90:	lsl	w5, w6, w4
  94:	mov	w3, w4
  98:	tst	w5, w0
  9c:	sub	w4, w4, #0x1
  a0:	b.ne	b8 <grub_mod_init-0xac0>  // b.any
  a4:	cmn	w4, #0x1
  a8:	b.ne	90 <grub_mod_init-0xae8>  // b.any
  ac:	str	wzr, [x2]
  b0:	str	wzr, [x1]
  b4:	b	ec <grub_mod_init-0xa8c>
  b8:	mov	w4, w3
  bc:	mov	w6, #0x1                   	// #1
  c0:	mov	w5, w4
  c4:	sub	w4, w4, #0x1
  c8:	cmn	w4, #0x1
  cc:	b.eq	dc <grub_mod_init-0xa9c>  // b.none
  d0:	lsl	w7, w6, w4
  d4:	tst	w7, w0
  d8:	b.ne	c0 <grub_mod_init-0xab8>  // b.any
  dc:	add	w3, w3, #0x1
  e0:	str	w5, [x2]
  e4:	sub	w3, w3, w5
  e8:	str	w3, [x1]
  ec:	ret
  f0:	adrp	x0, 0 <grub_mod_init-0xb78>
  f4:	ldr	x2, [x0]
  f8:	ldr	x1, [x2, #96]
  fc:	cbz	x1, 154 <grub_mod_init-0xa24>
 100:	sub	sp, sp, #0x20
 104:	mov	x6, #0x0                   	// #0
 108:	mov	x5, #0x0                   	// #0
 10c:	mov	x4, #0x0                   	// #0
 110:	stp	x29, x30, [sp, #16]
 114:	add	x29, sp, #0x10
 118:	ldr	w7, [x2]
 11c:	ldr	x0, [x2, #104]
 120:	lsl	w3, w7, #2
 124:	str	x3, [sp, #8]
 128:	mov	w7, w7
 12c:	mov	x3, #0x0                   	// #0
 130:	ldr	w2, [x2, #4]
 134:	str	x2, [sp]
 138:	mov	x2, #0x2                   	// #2
 13c:	ldr	x8, [x0, #16]
 140:	blr	x8
 144:	mov	w0, #0x0                   	// #0
 148:	ldp	x29, x30, [sp, #16]
 14c:	add	sp, sp, #0x20
 150:	ret
 154:	mov	w0, #0x0                   	// #0
 158:	ret
 15c:	nop
	...
 168:	cbnz	x0, 178 <grub_mod_init-0xa00>
 16c:	adrp	x0, 0 <grub_mod_init-0xb78>
 170:	ldr	x0, [x0]
 174:	ldr	x0, [x0, #80]
 178:	b	0 <grub_video_fb_set_active_render_target>
 17c:	nop
	...
 188:	stp	x29, x30, [sp, #-32]!
 18c:	adrp	x0, 0 <grub_mod_init-0xb78>
 190:	mov	x29, sp
 194:	str	x19, [sp, #16]
 198:	ldr	x19, [x0]
 19c:	ldr	w0, [x19, #112]
 1a0:	cbz	w0, 1b8 <grub_mod_init-0x9c0>
 1a4:	ldr	x0, [x19, #104]
 1a8:	ldr	w1, [x19, #116]
 1ac:	ldr	x2, [x0, #8]
 1b0:	blr	x2
 1b4:	str	wzr, [x19, #112]
 1b8:	ldr	x0, [x19, #96]
 1bc:	bl	0 <grub_free>
 1c0:	str	xzr, [x19, #96]
 1c4:	ldr	x19, [sp, #16]
 1c8:	ldp	x29, x30, [sp], #32
 1cc:	b	0 <grub_video_fb_fini>
	...
 1d8:	stp	x29, x30, [sp, #-16]!
 1dc:	adrp	x0, 0 <grub_mod_init-0xb78>
 1e0:	mov	x2, #0x68                  	// #104
 1e4:	mov	x29, sp
 1e8:	ldr	x0, [x0]
 1ec:	mov	w1, #0x0                   	// #0
 1f0:	bl	0 <grub_memset>
 1f4:	ldp	x29, x30, [sp], #16
 1f8:	b	0 <grub_video_fb_init>
 1fc:	nop
	...
 208:	stp	x29, x30, [sp, #-48]!
 20c:	mov	x29, sp
 210:	stp	x19, x20, [sp, #16]
 214:	mov	x19, x0
 218:	adrp	x0, 0 <grub_mod_init-0xb78>
 21c:	ldr	x20, [x0]
 220:	ldr	x0, [x20, #104]
 224:	ldr	x0, [x0, #24]
 228:	ldr	x8, [x0, #8]
 22c:	ldr	w0, [x0, #4]
 230:	str	x21, [sp, #32]
 234:	mov	x21, x1
 238:	str	w0, [x19, #28]
 23c:	mov	w0, #0x100                 	// #256
 240:	str	w0, [x19, #24]
 244:	ldr	w0, [x8, #4]
 248:	str	w0, [x19]
 24c:	ldr	w0, [x8, #8]
 250:	str	w0, [x19, #4]
 254:	mov	w0, #0x1                   	// #1
 258:	str	w0, [x19, #8]
 25c:	mov	x0, x8
 260:	bl	c <grub_mod_init-0xb6c>
 264:	lsr	w1, w0, #3
 268:	stp	w0, w1, [x19, #12]
 26c:	cbnz	w0, 2bc <grub_mod_init-0x8bc>
 270:	adrp	x0, 0 <grub_mod_init-0xb78>
 274:	ldr	x1, [x0]
 278:	mov	w0, #0x1d                  	// #29
 27c:	bl	0 <grub_error>
 280:	mov	w19, w0
 284:	cbz	w0, 314 <grub_mod_init-0x864>
 288:	adrp	x0, 0 <grub_mod_init-0xb78>
 28c:	mov	w1, #0x22e                 	// #558
 290:	ldr	x3, [x0]
 294:	adrp	x0, 0 <grub_mod_init-0xb78>
 298:	ldr	x2, [x0]
 29c:	adrp	x0, 0 <grub_mod_init-0xb78>
 2a0:	ldr	x0, [x0]
 2a4:	bl	0 <grub_real_dprintf>
 2a8:	mov	w0, w19
 2ac:	ldp	x19, x20, [sp, #16]
 2b0:	ldr	x21, [sp, #32]
 2b4:	ldp	x29, x30, [sp], #48
 2b8:	ret
 2bc:	ldr	w0, [x8, #32]
 2c0:	mul	w0, w0, w1
 2c4:	str	w0, [x19, #20]
 2c8:	ldr	w0, [x8, #12]
 2cc:	cmp	w0, #0x1
 2d0:	b.eq	334 <grub_mod_init-0x844>  // b.none
 2d4:	cmp	w0, #0x2
 2d8:	b.eq	350 <grub_mod_init-0x828>  // b.none
 2dc:	cbnz	w0, 270 <grub_mod_init-0x908>
 2e0:	mov	x0, #0x8                   	// #8
 2e4:	stur	x0, [x19, #36]
 2e8:	mov	x0, #0x800000008           	// #34359738376
 2ec:	stur	x0, [x19, #44]
 2f0:	mov	x0, #0x8                   	// #8
 2f4:	movk	x0, #0x10, lsl #32
 2f8:	stur	x0, [x19, #52]
 2fc:	mov	x0, #0x8                   	// #8
 300:	movk	x0, #0x18, lsl #32
 304:	stur	x0, [x19, #60]
 308:	mov	x0, x19
 30c:	bl	0 <grub_video_get_blit_format>
 310:	str	w0, [x19, #32]
 314:	ldr	x0, [x20, #88]
 318:	str	x0, [x21]
 31c:	mov	w19, #0x0                   	// #0
 320:	bl	0 <grub_video_fb_fini>
 324:	ldr	x0, [x20, #96]
 328:	bl	0 <grub_free>
 32c:	str	xzr, [x20, #96]
 330:	b	2a8 <grub_mod_init-0x8d0>
 334:	mov	x0, #0x8                   	// #8
 338:	movk	x0, #0x10, lsl #32
 33c:	stur	x0, [x19, #36]
 340:	mov	x0, #0x800000008           	// #34359738376
 344:	stur	x0, [x19, #44]
 348:	mov	x0, #0x8                   	// #8
 34c:	b	2f8 <grub_mod_init-0x880>
 350:	ldr	w0, [x8, #16]
 354:	add	x2, x19, #0x28
 358:	add	x1, x19, #0x24
 35c:	bl	88 <grub_mod_init-0xaf0>
 360:	ldr	w0, [x8, #20]
 364:	add	x2, x19, #0x30
 368:	add	x1, x19, #0x2c
 36c:	bl	88 <grub_mod_init-0xaf0>
 370:	ldr	w0, [x8, #24]
 374:	add	x2, x19, #0x38
 378:	add	x1, x19, #0x34
 37c:	bl	88 <grub_mod_init-0xaf0>
 380:	ldr	w0, [x8, #28]
 384:	add	x2, x19, #0x40
 388:	add	x1, x19, #0x3c
 38c:	bl	88 <grub_mod_init-0xaf0>
 390:	b	308 <grub_mod_init-0x870>
 394:	nop
	...
 3c0:	stp	x29, x30, [sp, #-160]!
 3c4:	mov	x29, sp
 3c8:	stp	x19, x20, [sp, #16]
 3cc:	mov	x20, x0
 3d0:	mov	w19, #0x0                   	// #0
 3d4:	stp	x21, x22, [sp, #32]
 3d8:	mov	x22, #0x2                   	// #2
 3dc:	mov	x21, x1
 3e0:	stp	x23, x24, [sp, #48]
 3e4:	mov	x23, #0x10                  	// #16
 3e8:	mov	x24, #0x91                  	// #145
 3ec:	movk	x22, #0x8, lsl #32
 3f0:	movk	x23, #0x8, lsl #32
 3f4:	movk	x24, #0x20, lsl #32
 3f8:	adrp	x0, 0 <grub_mod_init-0xb78>
 3fc:	ldr	x0, [x0]
 400:	ldr	x0, [x0, #104]
 404:	ldr	x1, [x0, #24]
 408:	ldr	w1, [x1]
 40c:	cmp	w1, w19
 410:	b.hi	41c <grub_mod_init-0x75c>  // b.pmore
 414:	mov	w0, #0x0                   	// #0
 418:	b	490 <grub_mod_init-0x6e8>
 41c:	ldr	x4, [x0]
 420:	str	xzr, [sp, #72]
 424:	add	x3, sp, #0x48
 428:	add	x2, sp, #0x40
 42c:	mov	w1, w19
 430:	blr	x4
 434:	cbnz	x0, 4a4 <grub_mod_init-0x6d4>
 438:	ldr	x0, [sp, #72]
 43c:	mov	w1, #0x100                 	// #256
 440:	ldp	w2, w0, [x0, #4]
 444:	stp	w2, w0, [sp, #80]
 448:	mov	x0, #0x800000008           	// #34359738376
 44c:	str	x0, [sp, #128]
 450:	mov	x0, #0x800000000           	// #34359738368
 454:	str	x0, [sp, #136]
 458:	lsl	w2, w2, #2
 45c:	mov	w0, #0x18                  	// #24
 460:	str	w0, [sp, #144]
 464:	mov	w0, #0x4                   	// #4
 468:	str	x24, [sp, #88]
 46c:	str	w0, [sp, #96]
 470:	add	x0, sp, #0x50
 474:	str	w2, [sp, #100]
 478:	stp	w1, w19, [sp, #104]
 47c:	mov	x1, x21
 480:	stp	x22, x23, [sp, #112]
 484:	blr	x20
 488:	cbz	w0, 4a4 <grub_mod_init-0x6d4>
 48c:	mov	w0, #0x1                   	// #1
 490:	ldp	x19, x20, [sp, #16]
 494:	ldp	x21, x22, [sp, #32]
 498:	ldp	x23, x24, [sp, #48]
 49c:	ldp	x29, x30, [sp], #160
 4a0:	ret
 4a4:	add	w19, w19, #0x1
 4a8:	b	3f8 <grub_mod_init-0x780>
 4ac:	nop
	...
 4b8:	stp	x29, x30, [sp, #-80]!
 4bc:	mov	x2, #0x80                  	// #128
 4c0:	mov	w1, #0x0                   	// #0
 4c4:	mov	x29, sp
 4c8:	stp	x19, x20, [sp, #16]
 4cc:	mov	x20, x0
 4d0:	str	x21, [sp, #32]
 4d4:	bl	0 <grub_memset>
 4d8:	adrp	x0, 0 <grub_mod_init-0xb78>
 4dc:	mov	w2, #0x2                   	// #2
 4e0:	ldr	x19, [x0]
 4e4:	adrp	x0, 0 <grub_mod_init-0xb78>
 4e8:	ldr	x21, [x0]
 4ec:	mov	x1, x19
 4f0:	ldr	x0, [x21, #120]
 4f4:	bl	0 <grub_efi_open_protocol>
 4f8:	cbz	x0, 504 <grub_mod_init-0x674>
 4fc:	ldr	w1, [x0]
 500:	cbnz	w1, 568 <grub_mod_init-0x610>
 504:	ldr	x0, [x21, #120]
 508:	add	x1, x19, #0x10
 50c:	mov	w2, #0x2                   	// #2
 510:	bl	0 <grub_efi_open_protocol>
 514:	cbnz	x0, 568 <grub_mod_init-0x610>
 518:	adrp	x0, 0 <grub_mod_init-0xb78>
 51c:	add	x1, x19, #0x20
 520:	ldr	x0, [x0]
 524:	ldp	x2, x3, [x0]
 528:	stp	x2, x3, [sp, #56]
 52c:	ldrh	w0, [x0, #16]
 530:	add	x2, sp, #0x30
 534:	strh	w0, [sp, #72]
 538:	add	x0, sp, #0x38
 53c:	bl	0 <grub_efi_get_variable>
 540:	mov	x19, x0
 544:	cbnz	x0, 590 <grub_mod_init-0x5e8>
 548:	adrp	x0, 0 <grub_mod_init-0xb78>
 54c:	ldr	x1, [x0]
 550:	mov	w0, #0xd                   	// #13
 554:	bl	0 <grub_error>
 558:	ldp	x19, x20, [sp, #16]
 55c:	ldr	x21, [sp, #32]
 560:	ldp	x29, x30, [sp], #80
 564:	ret
 568:	ldr	w1, [x0]
 56c:	cbz	w1, 518 <grub_mod_init-0x660>
 570:	cmp	w1, #0x80
 574:	mov	w2, w1
 578:	mov	x1, #0x80                  	// #128
 57c:	csel	x2, x2, x1, ls  // ls = plast
 580:	ldr	x1, [x0, #8]
 584:	mov	x0, x20
 588:	bl	0 <grub_memmove>
 58c:	b	5c0 <grub_mod_init-0x5b8>
 590:	ldr	x1, [sp, #48]
 594:	cmp	x1, #0x10
 598:	b.ls	548 <grub_mod_init-0x630>  // b.plast
 59c:	sub	x1, x1, #0x10
 5a0:	mov	x2, #0x80                  	// #128
 5a4:	cmp	x1, #0x80
 5a8:	csel	x2, x1, x2, ls  // ls = plast
 5ac:	add	x1, x0, #0x10
 5b0:	mov	x0, x20
 5b4:	bl	0 <grub_memmove>
 5b8:	mov	x0, x19
 5bc:	bl	0 <grub_free>
 5c0:	mov	w0, #0x0                   	// #0
 5c4:	b	558 <grub_mod_init-0x620>
	...
 5e8:	stp	x29, x30, [sp, #-272]!
 5ec:	mov	x29, sp
 5f0:	stp	x19, x20, [sp, #16]
 5f4:	stp	x21, x22, [sp, #32]
 5f8:	mov	w22, w0
 5fc:	ubfx	x21, x2, #8, #8
 600:	stp	x23, x24, [sp, #48]
 604:	mov	w23, w1
 608:	stp	x25, x26, [sp, #64]
 60c:	orr	w26, w0, w1
 610:	stp	x27, x28, [sp, #80]
 614:	stp	wzr, wzr, [sp, #128]
 618:	str	xzr, [sp, #136]
 61c:	cbnz	w26, 680 <grub_mod_init-0x4f8>
 620:	add	x0, sp, #0x90
 624:	bl	4b8 <grub_mod_init-0x6c0>
 628:	cbnz	w0, 664 <grub_mod_init-0x514>
 62c:	add	x0, sp, #0x90
 630:	bl	0 <grub_video_edid_checksum>
 634:	cbnz	w0, 664 <grub_mod_init-0x514>
 638:	add	x2, sp, #0x84
 63c:	add	x1, sp, #0x80
 640:	add	x0, sp, #0x90
 644:	bl	0 <grub_video_edid_preferred_mode>
 648:	cbnz	w0, 664 <grub_mod_init-0x514>
 64c:	ldr	w0, [sp, #128]
 650:	cmp	w0, #0xfff
 654:	b.hi	664 <grub_mod_init-0x514>  // b.pmore
 658:	ldr	w0, [sp, #132]
 65c:	cmp	w0, #0xfff
 660:	b.ls	680 <grub_mod_init-0x4f8>  // b.plast
 664:	mov	w0, #0x320                 	// #800
 668:	str	w0, [sp, #128]
 66c:	mov	w0, #0x258                 	// #600
 670:	str	w0, [sp, #132]
 674:	adrp	x0, 0 <grub_mod_init-0xb78>
 678:	ldr	x0, [x0]
 67c:	str	wzr, [x0]
 680:	adrp	x0, 0 <grub_mod_init-0xb78>
 684:	adrp	x20, 0 <grub_mod_init-0xb78>
 688:	adrp	x19, 0 <grub_mod_init-0xb78>
 68c:	ldr	x27, [x0]
 690:	ldr	x0, [x27, #104]
 694:	ldr	x5, [x0, #24]
 698:	ldr	x4, [x5, #8]
 69c:	cbz	x4, 88c <grub_mod_init-0x2ec>
 6a0:	mov	x0, x4
 6a4:	bl	c <grub_mod_init-0xb6c>
 6a8:	cbz	w0, 88c <grub_mod_init-0x2ec>
 6ac:	ldr	w1, [x4, #4]
 6b0:	cmp	w1, w22
 6b4:	b.ne	6c4 <grub_mod_init-0x4b4>  // b.any
 6b8:	ldr	w1, [x4, #8]
 6bc:	cmp	w1, w23
 6c0:	b.eq	6c8 <grub_mod_init-0x4b0>  // b.none
 6c4:	cbnz	w26, 88c <grub_mod_init-0x2ec>
 6c8:	cmp	w21, #0x0
 6cc:	ccmp	w21, w0, #0x4, ne  // ne = any
 6d0:	b.ne	88c <grub_mod_init-0x2ec>  // b.any
 6d4:	adrp	x0, 0 <grub_mod_init-0xb78>
 6d8:	ldr	w4, [x5, #4]
 6dc:	ldr	x2, [x20]
 6e0:	mov	w1, #0x184                 	// #388
 6e4:	ldr	x3, [x0]
 6e8:	ldr	x0, [x19]
 6ec:	bl	0 <grub_real_dprintf>
 6f0:	ldr	x0, [x27, #104]
 6f4:	ldr	x0, [x0, #24]
 6f8:	ldr	w25, [x0, #4]
 6fc:	ldr	x0, [x27, #104]
 700:	ldr	x1, [x0, #24]
 704:	ldr	w1, [x1, #4]
 708:	cmp	w1, w25
 70c:	b.eq	730 <grub_mod_init-0x448>  // b.none
 710:	ldr	w2, [x27, #112]
 714:	cbnz	w2, 724 <grub_mod_init-0x454>
 718:	str	w1, [x27, #116]
 71c:	mov	w1, #0x1                   	// #1
 720:	str	w1, [x27, #112]
 724:	ldr	x2, [x0, #8]
 728:	mov	w1, w25
 72c:	blr	x2
 730:	ldr	x0, [x27, #104]
 734:	mov	w28, #0x100                 	// #256
 738:	mov	w21, #0x4                   	// #4
 73c:	mov	x26, #0x10                  	// #16
 740:	mov	x22, #0x91                  	// #145
 744:	movk	x26, #0x8, lsl #32
 748:	ldr	x1, [x0, #24]
 74c:	mov	x25, #0x800000008           	// #34359738376
 750:	mov	x24, #0x800000000           	// #34359738368
 754:	mov	w23, #0x18                  	// #24
 758:	movk	x22, #0x20, lsl #32
 75c:	ldr	x2, [x1, #8]
 760:	ldr	w0, [x1, #4]
 764:	stp	w28, w0, [x27, #24]
 768:	ldr	w0, [x2, #4]
 76c:	str	x2, [sp, #136]
 770:	ldr	w2, [x2, #8]
 774:	lsl	w3, w0, #2
 778:	stp	w21, w3, [x27, #16]
 77c:	mov	x3, #0x2                   	// #2
 780:	str	w0, [x27]
 784:	movk	x3, #0x8, lsl #32
 788:	str	x3, [x27, #32]
 78c:	mul	w0, w0, w2
 790:	str	w2, [x27, #4]
 794:	ldr	x1, [x1, #24]
 798:	str	x22, [x27, #8]
 79c:	stp	x26, x25, [x27, #40]
 7a0:	lsl	x0, x0, #2
 7a4:	str	x24, [x27, #56]
 7a8:	str	w23, [x27, #64]
 7ac:	str	x1, [x27, #88]
 7b0:	bl	0 <grub_malloc>
 7b4:	str	x0, [x27, #96]
 7b8:	mov	x9, x0
 7bc:	cbnz	x0, 82c <grub_mod_init-0x34c>
 7c0:	adrp	x0, 0 <grub_mod_init-0xb78>
 7c4:	mov	w1, #0x1e7                 	// #487
 7c8:	ldr	x2, [x20]
 7cc:	ldr	x3, [x0]
 7d0:	ldr	x0, [x19]
 7d4:	bl	0 <grub_real_dprintf>
 7d8:	adrp	x0, 0 <grub_mod_init-0xb78>
 7dc:	ldr	x1, [sp, #136]
 7e0:	ldr	x0, [x0]
 7e4:	ldr	x9, [x27, #88]
 7e8:	str	wzr, [x0]
 7ec:	ldr	x0, [x27, #104]
 7f0:	ldr	x0, [x0, #24]
 7f4:	ldr	w0, [x0, #4]
 7f8:	stp	w28, w0, [x27, #24]
 7fc:	ldp	w0, w1, [x1, #4]
 800:	stp	w0, w1, [x27]
 804:	str	x22, [x27, #8]
 808:	str	w21, [x27, #16]
 80c:	lsl	w0, w0, #2
 810:	str	w0, [x27, #20]
 814:	mov	x0, #0x2                   	// #2
 818:	stp	x26, x25, [x27, #40]
 81c:	movk	x0, #0x8, lsl #32
 820:	str	x0, [x27, #32]
 824:	str	x24, [x27, #56]
 828:	str	w23, [x27, #64]
 82c:	adrp	x0, 0 <grub_mod_init-0xb78>
 830:	ldr	w7, [x27, #12]
 834:	ldr	x2, [x20]
 838:	mov	w1, #0x1ee                 	// #494
 83c:	ldr	x3, [x0]
 840:	str	x9, [sp, #104]
 844:	ldr	x0, [x19]
 848:	ldp	w5, w6, [x27]
 84c:	ldr	x4, [x27, #88]
 850:	bl	0 <grub_real_dprintf>
 854:	ldr	x9, [sp, #104]
 858:	mov	x1, x27
 85c:	add	x0, x27, #0x50
 860:	mov	x2, x9
 864:	bl	0 <grub_video_fb_create_render_target_from_pointer>
 868:	mov	w21, w0
 86c:	cbz	w0, a74 <grub_mod_init-0x104>
 870:	adrp	x0, 0 <grub_mod_init-0xb78>
 874:	mov	w1, #0x1f7                 	// #503
 878:	ldr	x2, [x20]
 87c:	ldr	x3, [x0]
 880:	ldr	x0, [x19]
 884:	bl	0 <grub_real_dprintf>
 888:	b	904 <grub_mod_init-0x274>
 88c:	adrp	x0, 0 <grub_mod_init-0xb78>
 890:	ldr	w4, [x5]
 894:	ldr	x2, [x20]
 898:	add	x24, x20, #0x0
 89c:	ldr	x3, [x0]
 8a0:	mov	w1, #0x18d                 	// #397
 8a4:	ldr	x0, [x19]
 8a8:	mov	w28, #0x0                   	// #0
 8ac:	mov	w25, #0x0                   	// #0
 8b0:	bl	0 <grub_real_dprintf>
 8b4:	str	wzr, [sp, #104]
 8b8:	str	xzr, [sp, #112]
 8bc:	ldr	x0, [x27, #104]
 8c0:	ldr	x1, [x0, #24]
 8c4:	ldr	w1, [x1]
 8c8:	cmp	w1, w28
 8cc:	b.hi	924 <grub_mod_init-0x254>  // b.pmore
 8d0:	ldr	w0, [sp, #104]
 8d4:	cbnz	w0, 6fc <grub_mod_init-0x47c>
 8d8:	adrp	x0, 0 <grub_mod_init-0xb78>
 8dc:	mov	w1, #0x1c5                 	// #453
 8e0:	ldr	x2, [x20]
 8e4:	ldr	x3, [x0]
 8e8:	ldr	x0, [x19]
 8ec:	bl	0 <grub_real_dprintf>
 8f0:	adrp	x0, 0 <grub_mod_init-0xb78>
 8f4:	ldr	x1, [x0]
 8f8:	mov	w0, #0xc                   	// #12
 8fc:	bl	0 <grub_error>
 900:	mov	w21, w0
 904:	mov	w0, w21
 908:	ldp	x19, x20, [sp, #16]
 90c:	ldp	x21, x22, [sp, #32]
 910:	ldp	x23, x24, [sp, #48]
 914:	ldp	x25, x26, [sp, #64]
 918:	ldp	x27, x28, [sp, #80]
 91c:	ldp	x29, x30, [sp], #272
 920:	ret
 924:	ldr	x5, [x0]
 928:	add	x3, sp, #0x88
 92c:	add	x2, sp, #0x90
 930:	mov	w1, w28
 934:	blr	x5
 938:	cbz	x0, 948 <grub_mod_init-0x230>
 93c:	str	xzr, [sp, #136]
 940:	add	w28, w28, #0x1
 944:	b	8bc <grub_mod_init-0x2bc>
 948:	ldr	x0, [sp, #136]
 94c:	mov	w1, #0x19a                 	// #410
 950:	ldr	x2, [x24]
 954:	mov	w4, w28
 958:	ldp	w5, w6, [x0, #4]
 95c:	adrp	x0, 0 <grub_mod_init-0xb78>
 960:	ldr	x3, [x0]
 964:	ldr	x0, [x19]
 968:	bl	0 <grub_real_dprintf>
 96c:	ldr	w1, [sp, #128]
 970:	cbz	w1, 9b4 <grub_mod_init-0x1c4>
 974:	ldr	x0, [sp, #136]
 978:	ldr	w2, [x0, #4]
 97c:	cmp	w1, w2
 980:	b.cc	994 <grub_mod_init-0x1e4>  // b.lo, b.ul, b.last
 984:	ldr	w1, [x0, #8]
 988:	ldr	w0, [sp, #132]
 98c:	cmp	w1, w0
 990:	b.ls	9b4 <grub_mod_init-0x1c4>  // b.plast
 994:	adrp	x0, 0 <grub_mod_init-0xb78>
 998:	mov	w4, w28
 99c:	ldr	x2, [x24]
 9a0:	mov	w1, #0x1a0                 	// #416
 9a4:	ldr	x3, [x0]
 9a8:	ldr	x0, [x19]
 9ac:	bl	0 <grub_real_dprintf>
 9b0:	b	940 <grub_mod_init-0x238>
 9b4:	ldr	x0, [sp, #136]
 9b8:	bl	c <grub_mod_init-0xb6c>
 9bc:	mov	w5, w0
 9c0:	cbnz	w0, 9dc <grub_mod_init-0x19c>
 9c4:	adrp	x0, 0 <grub_mod_init-0xb78>
 9c8:	mov	w4, w28
 9cc:	mov	w1, #0x1a7                 	// #423
 9d0:	ldr	x3, [x0]
 9d4:	ldr	x2, [x24]
 9d8:	b	9a8 <grub_mod_init-0x1d0>
 9dc:	adrp	x0, 0 <grub_mod_init-0xb78>
 9e0:	str	w5, [sp, #124]
 9e4:	mov	w1, #0x1ac                 	// #428
 9e8:	mov	w4, w28
 9ec:	ldr	x3, [x0]
 9f0:	ldr	x0, [x19]
 9f4:	ldr	x2, [x24]
 9f8:	bl	0 <grub_real_dprintf>
 9fc:	ldr	x1, [sp, #136]
 a00:	ldr	w5, [sp, #124]
 a04:	ldr	w0, [x1, #4]
 a08:	cmp	w0, w22
 a0c:	b.ne	a1c <grub_mod_init-0x15c>  // b.any
 a10:	ldr	w2, [x1, #8]
 a14:	cmp	w2, w23
 a18:	b.eq	a20 <grub_mod_init-0x158>  // b.none
 a1c:	cbnz	w26, a2c <grub_mod_init-0x14c>
 a20:	cmp	w21, #0x0
 a24:	ccmp	w21, w5, #0x4, ne  // ne = any
 a28:	b.eq	a44 <grub_mod_init-0x134>  // b.none
 a2c:	adrp	x0, 0 <grub_mod_init-0xb78>
 a30:	mov	w4, w28
 a34:	mov	w1, #0x1b2                 	// #434
 a38:	ldr	x3, [x0]
 a3c:	ldr	x2, [x24]
 a40:	b	9a8 <grub_mod_init-0x1d0>
 a44:	ldr	w1, [x1, #8]
 a48:	mov	w5, w5
 a4c:	umull	x0, w0, w1
 a50:	mul	x5, x0, x5
 a54:	ldr	x0, [sp, #112]
 a58:	cmp	x5, x0
 a5c:	b.ls	a68 <grub_mod_init-0x110>  // b.plast
 a60:	mov	w25, w28
 a64:	str	x5, [sp, #112]
 a68:	mov	w0, #0x1                   	// #1
 a6c:	str	w0, [sp, #104]
 a70:	b	940 <grub_mod_init-0x238>
 a74:	ldr	x0, [x27, #80]
 a78:	bl	0 <grub_video_fb_set_active_render_target>
 a7c:	mov	w21, w0
 a80:	cbz	w0, a98 <grub_mod_init-0xe0>
 a84:	adrp	x0, 0 <grub_mod_init-0xb78>
 a88:	mov	w1, #0x1ff                 	// #511
 a8c:	ldr	x2, [x20]
 a90:	ldr	x3, [x0]
 a94:	b	880 <grub_mod_init-0x2f8>
 a98:	adrp	x1, 0 <grub_mod_init-0xb78>
 a9c:	ldr	x2, [x1]
 aa0:	mov	w1, #0x10                  	// #16
 aa4:	bl	0 <grub_video_fb_set_palette>
 aa8:	mov	w21, w0
 aac:	cbz	w0, ac4 <grub_mod_init-0xb4>
 ab0:	adrp	x0, 0 <grub_mod_init-0xb78>
 ab4:	mov	w1, #0x207                 	// #519
 ab8:	ldr	x2, [x20]
 abc:	ldr	x3, [x0]
 ac0:	b	880 <grub_mod_init-0x2f8>
 ac4:	adrp	x0, 0 <grub_mod_init-0xb78>
 ac8:	mov	w1, #0x209                 	// #521
 acc:	ldr	x2, [x20]
 ad0:	ldr	x3, [x0]
 ad4:	b	880 <grub_mod_init-0x2f8>
	...

0000000000000b78 <grub_mod_init>:
 b78:	stp	x29, x30, [sp, #-96]!
 b7c:	adrp	x0, 0 <grub_mod_init-0xb78>
 b80:	mov	x2, #0x0                   	// #0
 b84:	mov	x29, sp
 b88:	stp	x19, x20, [sp, #16]
 b8c:	add	x3, sp, #0x58
 b90:	ldr	x19, [x0]
 b94:	stp	x23, x24, [sp, #48]
 b98:	mov	w0, #0x2                   	// #2
 b9c:	add	x23, x19, #0x30
 ba0:	stp	x21, x22, [sp, #32]
 ba4:	mov	x1, x23
 ba8:	str	x25, [sp, #64]
 bac:	str	wzr, [sp, #84]
 bb0:	bl	0 <grub_efi_locate_handle>
 bb4:	cbz	x0, be8 <grub_mod_init+0x70>
 bb8:	mov	x20, x0
 bbc:	ldr	x0, [sp, #88]
 bc0:	cbz	x0, be8 <grub_mod_init+0x70>
 bc4:	mov	x22, #0x0                   	// #0
 bc8:	adrp	x24, 0 <grub_mod_init-0xb78>
 bcc:	adrp	x25, 0 <grub_mod_init-0xb78>
 bd0:	ldr	x0, [sp, #88]
 bd4:	ldr	x21, [x24]
 bd8:	cmp	x22, x0
 bdc:	b.cc	c00 <grub_mod_init+0x88>  // b.lo, b.ul, b.last
 be0:	str	xzr, [x21, #104]
 be4:	str	xzr, [x21, #120]
 be8:	ldp	x19, x20, [sp, #16]
 bec:	ldp	x21, x22, [sp, #32]
 bf0:	ldp	x23, x24, [sp, #48]
 bf4:	ldr	x25, [sp, #64]
 bf8:	ldp	x29, x30, [sp], #96
 bfc:	ret
 c00:	ldr	x0, [x20, x22, lsl #3]
 c04:	mov	x1, x23
 c08:	mov	w2, #0x2                   	// #2
 c0c:	str	x0, [x21, #120]
 c10:	bl	0 <grub_efi_open_protocol>
 c14:	str	x0, [x21, #104]
 c18:	ldr	x0, [x25]
 c1c:	add	x1, sp, #0x54
 c20:	bl	3c0 <grub_mod_init-0x7b8>
 c24:	ldr	w0, [sp, #84]
 c28:	cbz	w0, c74 <grub_mod_init+0xfc>
 c2c:	mov	x0, x20
 c30:	bl	0 <grub_free>
 c34:	adrp	x0, 0 <grub_mod_init-0xb78>
 c38:	ldr	w2, [x19, #92]
 c3c:	ldr	x0, [x0]
 c40:	ldr	x1, [x0]
 c44:	cbz	x1, c54 <grub_mod_init+0xdc>
 c48:	ldr	w3, [x1, #28]
 c4c:	cmp	w3, w2
 c50:	b.hi	c7c <grub_mod_init+0x104>  // b.pmore
 c54:	str	x1, [x19, #64]
 c58:	add	x2, x19, #0x40
 c5c:	str	x2, [x0]
 c60:	str	x0, [x19, #72]
 c64:	ldr	x0, [x19, #64]
 c68:	cbz	x0, be8 <grub_mod_init+0x70>
 c6c:	str	x2, [x0, #8]
 c70:	b	be8 <grub_mod_init+0x70>
 c74:	add	x22, x22, #0x1
 c78:	b	bd0 <grub_mod_init+0x58>
 c7c:	mov	x0, x1
 c80:	ldr	x1, [x1]
 c84:	b	c44 <grub_mod_init+0xcc>
	...

0000000000000ca8 <grub_mod_fini>:
 ca8:	stp	x29, x30, [sp, #-32]!
 cac:	adrp	x0, 0 <grub_mod_init-0xb78>
 cb0:	mov	x29, sp
 cb4:	str	x19, [sp, #16]
 cb8:	ldr	x19, [x0]
 cbc:	ldr	w0, [x19, #112]
 cc0:	cbz	w0, cd8 <grub_mod_fini+0x30>
 cc4:	ldr	x0, [x19, #104]
 cc8:	ldr	w1, [x19, #116]
 ccc:	ldr	x2, [x0, #8]
 cd0:	blr	x2
 cd4:	str	wzr, [x19, #112]
 cd8:	ldr	x0, [x19, #104]
 cdc:	cbz	x0, cf8 <grub_mod_fini+0x50>
 ce0:	ldr	x19, [sp, #16]
 ce4:	adrp	x0, 0 <grub_mod_init-0xb78>
 ce8:	ldp	x29, x30, [sp], #32
 cec:	ldr	x0, [x0]
 cf0:	add	x0, x0, #0x40
 cf4:	b	0 <grub_list_remove>
 cf8:	ldr	x19, [sp, #16]
 cfc:	ldp	x29, x30, [sp], #32
 d00:	ret
 d04:	nop
	...
