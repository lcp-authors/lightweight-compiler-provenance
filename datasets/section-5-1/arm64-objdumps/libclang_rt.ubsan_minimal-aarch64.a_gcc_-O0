In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libclang_rt.ubsan_minimal-aarch64.a_gcc_-O0:

ubsan_minimal_handlers.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZL17report_this_errorPv>:
   0:	cbz	x0, 5c <_ZL17report_this_errorPv+0x5c>
   4:	mov	x4, x0
   8:	adrp	x0, 0 <_ZL17report_this_errorPv>
   c:	ldr	w3, [x0]
  10:	cmp	w3, #0x14
  14:	b.hi	5c <_ZL17report_this_errorPv+0x5c>  // b.pmore
  18:	add	x0, x0, #0x0
  1c:	add	x5, x0, #0x10
  20:	sub	w1, w3, #0x1
  24:	cmp	w1, #0x12
  28:	b.ls	64 <_ZL17report_this_errorPv+0x64>  // b.plast
  2c:	add	w2, w3, #0x1
  30:	ldxr	w1, [x0]
  34:	cmp	w1, w3
  38:	b.ne	44 <_ZL17report_this_errorPv+0x44>  // b.any
  3c:	stlxr	w6, w2, [x0]
  40:	cbnz	w6, 30 <_ZL17report_this_errorPv+0x30>
  44:	dmb	ish
  48:	cmp	w1, w3
  4c:	b.eq	94 <_ZL17report_this_errorPv+0x94>  // b.none
  50:	ldr	w3, [x0]
  54:	cmp	w3, #0x14
  58:	b.ls	20 <_ZL17report_this_errorPv+0x20>  // b.plast
  5c:	mov	w0, #0x0                   	// #0
  60:	ret
  64:	mov	w1, #0x0                   	// #0
  68:	b	74 <_ZL17report_this_errorPv+0x74>
  6c:	cmp	w1, w3
  70:	b.eq	2c <_ZL17report_this_errorPv+0x2c>  // b.none
  74:	mov	w2, w1
  78:	add	w1, w1, #0x1
  7c:	ldr	x2, [x5, x2, lsl #3]
  80:	cmp	x4, x2
  84:	cbz	x2, 50 <_ZL17report_this_errorPv+0x50>
  88:	b.ne	6c <_ZL17report_this_errorPv+0x6c>  // b.any
  8c:	mov	w0, #0x0                   	// #0
  90:	ret
  94:	cmp	w3, #0x14
  98:	b.eq	b0 <_ZL17report_this_errorPv+0xb0>  // b.none
  9c:	add	x1, x0, #0x10
  a0:	mov	w3, w3
  a4:	mov	w0, #0x1                   	// #1
  a8:	str	x4, [x1, x3, lsl #3]
  ac:	ret
  b0:	stp	x19, x30, [sp, #-16]!
  b4:	adrp	x19, 0 <_ZL17report_this_errorPv>
  b8:	add	x19, x19, #0x0
  bc:	mov	x0, x19
  c0:	bl	0 <strlen>
  c4:	mov	x1, x19
  c8:	mov	x2, x0
  cc:	mov	w0, #0x2                   	// #2
  d0:	bl	0 <write>
  d4:	mov	w0, #0x0                   	// #0
  d8:	ldp	x19, x30, [sp], #16
  dc:	ret

00000000000000e0 <__ubsan_handle_type_mismatch_minimal>:
  e0:	stp	x19, x30, [sp, #-16]!
  e4:	mov	x0, x30
  e8:	bl	0 <_ZL17report_this_errorPv>
  ec:	tst	w0, #0xff
  f0:	b.ne	fc <__ubsan_handle_type_mismatch_minimal+0x1c>  // b.any
  f4:	ldp	x19, x30, [sp], #16
  f8:	ret
  fc:	adrp	x19, 0 <_ZL17report_this_errorPv>
 100:	add	x19, x19, #0x0
 104:	mov	x0, x19
 108:	bl	0 <strlen>
 10c:	mov	x1, x19
 110:	mov	x2, x0
 114:	ldp	x19, x30, [sp], #16
 118:	mov	w0, #0x2                   	// #2
 11c:	b	0 <write>

0000000000000120 <__ubsan_handle_type_mismatch_minimal_abort>:
 120:	stp	x19, x30, [sp, #-16]!
 124:	adrp	x19, 0 <_ZL17report_this_errorPv>
 128:	add	x19, x19, #0x0
 12c:	mov	x0, x19
 130:	bl	0 <strlen>
 134:	mov	x1, x19
 138:	mov	x2, x0
 13c:	mov	w0, #0x2                   	// #2
 140:	bl	0 <write>
 144:	bl	0 <abort>

0000000000000148 <__ubsan_handle_alignment_assumption_minimal>:
 148:	stp	x19, x30, [sp, #-16]!
 14c:	mov	x0, x30
 150:	bl	0 <_ZL17report_this_errorPv>
 154:	tst	w0, #0xff
 158:	b.ne	164 <__ubsan_handle_alignment_assumption_minimal+0x1c>  // b.any
 15c:	ldp	x19, x30, [sp], #16
 160:	ret
 164:	adrp	x19, 0 <_ZL17report_this_errorPv>
 168:	add	x19, x19, #0x0
 16c:	mov	x0, x19
 170:	bl	0 <strlen>
 174:	mov	x1, x19
 178:	mov	x2, x0
 17c:	ldp	x19, x30, [sp], #16
 180:	mov	w0, #0x2                   	// #2
 184:	b	0 <write>

0000000000000188 <__ubsan_handle_alignment_assumption_minimal_abort>:
 188:	stp	x19, x30, [sp, #-16]!
 18c:	adrp	x19, 0 <_ZL17report_this_errorPv>
 190:	add	x19, x19, #0x0
 194:	mov	x0, x19
 198:	bl	0 <strlen>
 19c:	mov	x1, x19
 1a0:	mov	x2, x0
 1a4:	mov	w0, #0x2                   	// #2
 1a8:	bl	0 <write>
 1ac:	bl	0 <abort>

00000000000001b0 <__ubsan_handle_add_overflow_minimal>:
 1b0:	stp	x19, x30, [sp, #-16]!
 1b4:	mov	x0, x30
 1b8:	bl	0 <_ZL17report_this_errorPv>
 1bc:	tst	w0, #0xff
 1c0:	b.ne	1cc <__ubsan_handle_add_overflow_minimal+0x1c>  // b.any
 1c4:	ldp	x19, x30, [sp], #16
 1c8:	ret
 1cc:	adrp	x19, 0 <_ZL17report_this_errorPv>
 1d0:	add	x19, x19, #0x0
 1d4:	mov	x0, x19
 1d8:	bl	0 <strlen>
 1dc:	mov	x1, x19
 1e0:	mov	x2, x0
 1e4:	ldp	x19, x30, [sp], #16
 1e8:	mov	w0, #0x2                   	// #2
 1ec:	b	0 <write>

00000000000001f0 <__ubsan_handle_add_overflow_minimal_abort>:
 1f0:	stp	x19, x30, [sp, #-16]!
 1f4:	adrp	x19, 0 <_ZL17report_this_errorPv>
 1f8:	add	x19, x19, #0x0
 1fc:	mov	x0, x19
 200:	bl	0 <strlen>
 204:	mov	x1, x19
 208:	mov	x2, x0
 20c:	mov	w0, #0x2                   	// #2
 210:	bl	0 <write>
 214:	bl	0 <abort>

0000000000000218 <__ubsan_handle_sub_overflow_minimal>:
 218:	stp	x19, x30, [sp, #-16]!
 21c:	mov	x0, x30
 220:	bl	0 <_ZL17report_this_errorPv>
 224:	tst	w0, #0xff
 228:	b.ne	234 <__ubsan_handle_sub_overflow_minimal+0x1c>  // b.any
 22c:	ldp	x19, x30, [sp], #16
 230:	ret
 234:	adrp	x19, 0 <_ZL17report_this_errorPv>
 238:	add	x19, x19, #0x0
 23c:	mov	x0, x19
 240:	bl	0 <strlen>
 244:	mov	x1, x19
 248:	mov	x2, x0
 24c:	ldp	x19, x30, [sp], #16
 250:	mov	w0, #0x2                   	// #2
 254:	b	0 <write>

0000000000000258 <__ubsan_handle_sub_overflow_minimal_abort>:
 258:	stp	x19, x30, [sp, #-16]!
 25c:	adrp	x19, 0 <_ZL17report_this_errorPv>
 260:	add	x19, x19, #0x0
 264:	mov	x0, x19
 268:	bl	0 <strlen>
 26c:	mov	x1, x19
 270:	mov	x2, x0
 274:	mov	w0, #0x2                   	// #2
 278:	bl	0 <write>
 27c:	bl	0 <abort>

0000000000000280 <__ubsan_handle_mul_overflow_minimal>:
 280:	stp	x19, x30, [sp, #-16]!
 284:	mov	x0, x30
 288:	bl	0 <_ZL17report_this_errorPv>
 28c:	tst	w0, #0xff
 290:	b.ne	29c <__ubsan_handle_mul_overflow_minimal+0x1c>  // b.any
 294:	ldp	x19, x30, [sp], #16
 298:	ret
 29c:	adrp	x19, 0 <_ZL17report_this_errorPv>
 2a0:	add	x19, x19, #0x0
 2a4:	mov	x0, x19
 2a8:	bl	0 <strlen>
 2ac:	mov	x1, x19
 2b0:	mov	x2, x0
 2b4:	ldp	x19, x30, [sp], #16
 2b8:	mov	w0, #0x2                   	// #2
 2bc:	b	0 <write>

00000000000002c0 <__ubsan_handle_mul_overflow_minimal_abort>:
 2c0:	stp	x19, x30, [sp, #-16]!
 2c4:	adrp	x19, 0 <_ZL17report_this_errorPv>
 2c8:	add	x19, x19, #0x0
 2cc:	mov	x0, x19
 2d0:	bl	0 <strlen>
 2d4:	mov	x1, x19
 2d8:	mov	x2, x0
 2dc:	mov	w0, #0x2                   	// #2
 2e0:	bl	0 <write>
 2e4:	bl	0 <abort>

00000000000002e8 <__ubsan_handle_negate_overflow_minimal>:
 2e8:	stp	x19, x30, [sp, #-16]!
 2ec:	mov	x0, x30
 2f0:	bl	0 <_ZL17report_this_errorPv>
 2f4:	tst	w0, #0xff
 2f8:	b.ne	304 <__ubsan_handle_negate_overflow_minimal+0x1c>  // b.any
 2fc:	ldp	x19, x30, [sp], #16
 300:	ret
 304:	adrp	x19, 0 <_ZL17report_this_errorPv>
 308:	add	x19, x19, #0x0
 30c:	mov	x0, x19
 310:	bl	0 <strlen>
 314:	mov	x1, x19
 318:	mov	x2, x0
 31c:	ldp	x19, x30, [sp], #16
 320:	mov	w0, #0x2                   	// #2
 324:	b	0 <write>

0000000000000328 <__ubsan_handle_negate_overflow_minimal_abort>:
 328:	stp	x19, x30, [sp, #-16]!
 32c:	adrp	x19, 0 <_ZL17report_this_errorPv>
 330:	add	x19, x19, #0x0
 334:	mov	x0, x19
 338:	bl	0 <strlen>
 33c:	mov	x1, x19
 340:	mov	x2, x0
 344:	mov	w0, #0x2                   	// #2
 348:	bl	0 <write>
 34c:	bl	0 <abort>

0000000000000350 <__ubsan_handle_divrem_overflow_minimal>:
 350:	stp	x19, x30, [sp, #-16]!
 354:	mov	x0, x30
 358:	bl	0 <_ZL17report_this_errorPv>
 35c:	tst	w0, #0xff
 360:	b.ne	36c <__ubsan_handle_divrem_overflow_minimal+0x1c>  // b.any
 364:	ldp	x19, x30, [sp], #16
 368:	ret
 36c:	adrp	x19, 0 <_ZL17report_this_errorPv>
 370:	add	x19, x19, #0x0
 374:	mov	x0, x19
 378:	bl	0 <strlen>
 37c:	mov	x1, x19
 380:	mov	x2, x0
 384:	ldp	x19, x30, [sp], #16
 388:	mov	w0, #0x2                   	// #2
 38c:	b	0 <write>

0000000000000390 <__ubsan_handle_divrem_overflow_minimal_abort>:
 390:	stp	x19, x30, [sp, #-16]!
 394:	adrp	x19, 0 <_ZL17report_this_errorPv>
 398:	add	x19, x19, #0x0
 39c:	mov	x0, x19
 3a0:	bl	0 <strlen>
 3a4:	mov	x1, x19
 3a8:	mov	x2, x0
 3ac:	mov	w0, #0x2                   	// #2
 3b0:	bl	0 <write>
 3b4:	bl	0 <abort>

00000000000003b8 <__ubsan_handle_shift_out_of_bounds_minimal>:
 3b8:	stp	x19, x30, [sp, #-16]!
 3bc:	mov	x0, x30
 3c0:	bl	0 <_ZL17report_this_errorPv>
 3c4:	tst	w0, #0xff
 3c8:	b.ne	3d4 <__ubsan_handle_shift_out_of_bounds_minimal+0x1c>  // b.any
 3cc:	ldp	x19, x30, [sp], #16
 3d0:	ret
 3d4:	adrp	x19, 0 <_ZL17report_this_errorPv>
 3d8:	add	x19, x19, #0x0
 3dc:	mov	x0, x19
 3e0:	bl	0 <strlen>
 3e4:	mov	x1, x19
 3e8:	mov	x2, x0
 3ec:	ldp	x19, x30, [sp], #16
 3f0:	mov	w0, #0x2                   	// #2
 3f4:	b	0 <write>

00000000000003f8 <__ubsan_handle_shift_out_of_bounds_minimal_abort>:
 3f8:	stp	x19, x30, [sp, #-16]!
 3fc:	adrp	x19, 0 <_ZL17report_this_errorPv>
 400:	add	x19, x19, #0x0
 404:	mov	x0, x19
 408:	bl	0 <strlen>
 40c:	mov	x1, x19
 410:	mov	x2, x0
 414:	mov	w0, #0x2                   	// #2
 418:	bl	0 <write>
 41c:	bl	0 <abort>

0000000000000420 <__ubsan_handle_out_of_bounds_minimal>:
 420:	stp	x19, x30, [sp, #-16]!
 424:	mov	x0, x30
 428:	bl	0 <_ZL17report_this_errorPv>
 42c:	tst	w0, #0xff
 430:	b.ne	43c <__ubsan_handle_out_of_bounds_minimal+0x1c>  // b.any
 434:	ldp	x19, x30, [sp], #16
 438:	ret
 43c:	adrp	x19, 0 <_ZL17report_this_errorPv>
 440:	add	x19, x19, #0x0
 444:	mov	x0, x19
 448:	bl	0 <strlen>
 44c:	mov	x1, x19
 450:	mov	x2, x0
 454:	ldp	x19, x30, [sp], #16
 458:	mov	w0, #0x2                   	// #2
 45c:	b	0 <write>

0000000000000460 <__ubsan_handle_out_of_bounds_minimal_abort>:
 460:	stp	x19, x30, [sp, #-16]!
 464:	adrp	x19, 0 <_ZL17report_this_errorPv>
 468:	add	x19, x19, #0x0
 46c:	mov	x0, x19
 470:	bl	0 <strlen>
 474:	mov	x1, x19
 478:	mov	x2, x0
 47c:	mov	w0, #0x2                   	// #2
 480:	bl	0 <write>
 484:	bl	0 <abort>

0000000000000488 <__ubsan_handle_builtin_unreachable_minimal>:
 488:	stp	x19, x30, [sp, #-16]!
 48c:	mov	x0, x30
 490:	bl	0 <_ZL17report_this_errorPv>
 494:	tst	w0, #0xff
 498:	b.ne	4a4 <__ubsan_handle_builtin_unreachable_minimal+0x1c>  // b.any
 49c:	ldp	x19, x30, [sp], #16
 4a0:	ret
 4a4:	adrp	x19, 0 <_ZL17report_this_errorPv>
 4a8:	add	x19, x19, #0x0
 4ac:	mov	x0, x19
 4b0:	bl	0 <strlen>
 4b4:	mov	x1, x19
 4b8:	mov	x2, x0
 4bc:	ldp	x19, x30, [sp], #16
 4c0:	mov	w0, #0x2                   	// #2
 4c4:	b	0 <write>

00000000000004c8 <__ubsan_handle_missing_return_minimal>:
 4c8:	stp	x19, x30, [sp, #-16]!
 4cc:	mov	x0, x30
 4d0:	bl	0 <_ZL17report_this_errorPv>
 4d4:	tst	w0, #0xff
 4d8:	b.ne	4e4 <__ubsan_handle_missing_return_minimal+0x1c>  // b.any
 4dc:	ldp	x19, x30, [sp], #16
 4e0:	ret
 4e4:	adrp	x19, 0 <_ZL17report_this_errorPv>
 4e8:	add	x19, x19, #0x0
 4ec:	mov	x0, x19
 4f0:	bl	0 <strlen>
 4f4:	mov	x1, x19
 4f8:	mov	x2, x0
 4fc:	ldp	x19, x30, [sp], #16
 500:	mov	w0, #0x2                   	// #2
 504:	b	0 <write>

0000000000000508 <__ubsan_handle_vla_bound_not_positive_minimal>:
 508:	stp	x19, x30, [sp, #-16]!
 50c:	mov	x0, x30
 510:	bl	0 <_ZL17report_this_errorPv>
 514:	tst	w0, #0xff
 518:	b.ne	524 <__ubsan_handle_vla_bound_not_positive_minimal+0x1c>  // b.any
 51c:	ldp	x19, x30, [sp], #16
 520:	ret
 524:	adrp	x19, 0 <_ZL17report_this_errorPv>
 528:	add	x19, x19, #0x0
 52c:	mov	x0, x19
 530:	bl	0 <strlen>
 534:	mov	x1, x19
 538:	mov	x2, x0
 53c:	ldp	x19, x30, [sp], #16
 540:	mov	w0, #0x2                   	// #2
 544:	b	0 <write>

0000000000000548 <__ubsan_handle_vla_bound_not_positive_minimal_abort>:
 548:	stp	x19, x30, [sp, #-16]!
 54c:	adrp	x19, 0 <_ZL17report_this_errorPv>
 550:	add	x19, x19, #0x0
 554:	mov	x0, x19
 558:	bl	0 <strlen>
 55c:	mov	x1, x19
 560:	mov	x2, x0
 564:	mov	w0, #0x2                   	// #2
 568:	bl	0 <write>
 56c:	bl	0 <abort>

0000000000000570 <__ubsan_handle_float_cast_overflow_minimal>:
 570:	stp	x19, x30, [sp, #-16]!
 574:	mov	x0, x30
 578:	bl	0 <_ZL17report_this_errorPv>
 57c:	tst	w0, #0xff
 580:	b.ne	58c <__ubsan_handle_float_cast_overflow_minimal+0x1c>  // b.any
 584:	ldp	x19, x30, [sp], #16
 588:	ret
 58c:	adrp	x19, 0 <_ZL17report_this_errorPv>
 590:	add	x19, x19, #0x0
 594:	mov	x0, x19
 598:	bl	0 <strlen>
 59c:	mov	x1, x19
 5a0:	mov	x2, x0
 5a4:	ldp	x19, x30, [sp], #16
 5a8:	mov	w0, #0x2                   	// #2
 5ac:	b	0 <write>

00000000000005b0 <__ubsan_handle_float_cast_overflow_minimal_abort>:
 5b0:	stp	x19, x30, [sp, #-16]!
 5b4:	adrp	x19, 0 <_ZL17report_this_errorPv>
 5b8:	add	x19, x19, #0x0
 5bc:	mov	x0, x19
 5c0:	bl	0 <strlen>
 5c4:	mov	x1, x19
 5c8:	mov	x2, x0
 5cc:	mov	w0, #0x2                   	// #2
 5d0:	bl	0 <write>
 5d4:	bl	0 <abort>

00000000000005d8 <__ubsan_handle_load_invalid_value_minimal>:
 5d8:	stp	x19, x30, [sp, #-16]!
 5dc:	mov	x0, x30
 5e0:	bl	0 <_ZL17report_this_errorPv>
 5e4:	tst	w0, #0xff
 5e8:	b.ne	5f4 <__ubsan_handle_load_invalid_value_minimal+0x1c>  // b.any
 5ec:	ldp	x19, x30, [sp], #16
 5f0:	ret
 5f4:	adrp	x19, 0 <_ZL17report_this_errorPv>
 5f8:	add	x19, x19, #0x0
 5fc:	mov	x0, x19
 600:	bl	0 <strlen>
 604:	mov	x1, x19
 608:	mov	x2, x0
 60c:	ldp	x19, x30, [sp], #16
 610:	mov	w0, #0x2                   	// #2
 614:	b	0 <write>

0000000000000618 <__ubsan_handle_load_invalid_value_minimal_abort>:
 618:	stp	x19, x30, [sp, #-16]!
 61c:	adrp	x19, 0 <_ZL17report_this_errorPv>
 620:	add	x19, x19, #0x0
 624:	mov	x0, x19
 628:	bl	0 <strlen>
 62c:	mov	x1, x19
 630:	mov	x2, x0
 634:	mov	w0, #0x2                   	// #2
 638:	bl	0 <write>
 63c:	bl	0 <abort>

0000000000000640 <__ubsan_handle_invalid_builtin_minimal>:
 640:	stp	x19, x30, [sp, #-16]!
 644:	mov	x0, x30
 648:	bl	0 <_ZL17report_this_errorPv>
 64c:	tst	w0, #0xff
 650:	b.ne	65c <__ubsan_handle_invalid_builtin_minimal+0x1c>  // b.any
 654:	ldp	x19, x30, [sp], #16
 658:	ret
 65c:	adrp	x19, 0 <_ZL17report_this_errorPv>
 660:	add	x19, x19, #0x0
 664:	mov	x0, x19
 668:	bl	0 <strlen>
 66c:	mov	x1, x19
 670:	mov	x2, x0
 674:	ldp	x19, x30, [sp], #16
 678:	mov	w0, #0x2                   	// #2
 67c:	b	0 <write>

0000000000000680 <__ubsan_handle_invalid_builtin_minimal_abort>:
 680:	stp	x19, x30, [sp, #-16]!
 684:	adrp	x19, 0 <_ZL17report_this_errorPv>
 688:	add	x19, x19, #0x0
 68c:	mov	x0, x19
 690:	bl	0 <strlen>
 694:	mov	x1, x19
 698:	mov	x2, x0
 69c:	mov	w0, #0x2                   	// #2
 6a0:	bl	0 <write>
 6a4:	bl	0 <abort>

00000000000006a8 <__ubsan_handle_function_type_mismatch_minimal>:
 6a8:	stp	x19, x30, [sp, #-16]!
 6ac:	mov	x0, x30
 6b0:	bl	0 <_ZL17report_this_errorPv>
 6b4:	tst	w0, #0xff
 6b8:	b.ne	6c4 <__ubsan_handle_function_type_mismatch_minimal+0x1c>  // b.any
 6bc:	ldp	x19, x30, [sp], #16
 6c0:	ret
 6c4:	adrp	x19, 0 <_ZL17report_this_errorPv>
 6c8:	add	x19, x19, #0x0
 6cc:	mov	x0, x19
 6d0:	bl	0 <strlen>
 6d4:	mov	x1, x19
 6d8:	mov	x2, x0
 6dc:	ldp	x19, x30, [sp], #16
 6e0:	mov	w0, #0x2                   	// #2
 6e4:	b	0 <write>

00000000000006e8 <__ubsan_handle_function_type_mismatch_minimal_abort>:
 6e8:	stp	x19, x30, [sp, #-16]!
 6ec:	adrp	x19, 0 <_ZL17report_this_errorPv>
 6f0:	add	x19, x19, #0x0
 6f4:	mov	x0, x19
 6f8:	bl	0 <strlen>
 6fc:	mov	x1, x19
 700:	mov	x2, x0
 704:	mov	w0, #0x2                   	// #2
 708:	bl	0 <write>
 70c:	bl	0 <abort>

0000000000000710 <__ubsan_handle_implicit_conversion_minimal>:
 710:	stp	x19, x30, [sp, #-16]!
 714:	mov	x0, x30
 718:	bl	0 <_ZL17report_this_errorPv>
 71c:	tst	w0, #0xff
 720:	b.ne	72c <__ubsan_handle_implicit_conversion_minimal+0x1c>  // b.any
 724:	ldp	x19, x30, [sp], #16
 728:	ret
 72c:	adrp	x19, 0 <_ZL17report_this_errorPv>
 730:	add	x19, x19, #0x0
 734:	mov	x0, x19
 738:	bl	0 <strlen>
 73c:	mov	x1, x19
 740:	mov	x2, x0
 744:	ldp	x19, x30, [sp], #16
 748:	mov	w0, #0x2                   	// #2
 74c:	b	0 <write>

0000000000000750 <__ubsan_handle_implicit_conversion_minimal_abort>:
 750:	stp	x19, x30, [sp, #-16]!
 754:	adrp	x19, 0 <_ZL17report_this_errorPv>
 758:	add	x19, x19, #0x0
 75c:	mov	x0, x19
 760:	bl	0 <strlen>
 764:	mov	x1, x19
 768:	mov	x2, x0
 76c:	mov	w0, #0x2                   	// #2
 770:	bl	0 <write>
 774:	bl	0 <abort>

0000000000000778 <__ubsan_handle_nonnull_arg_minimal>:
 778:	stp	x19, x30, [sp, #-16]!
 77c:	mov	x0, x30
 780:	bl	0 <_ZL17report_this_errorPv>
 784:	tst	w0, #0xff
 788:	b.ne	794 <__ubsan_handle_nonnull_arg_minimal+0x1c>  // b.any
 78c:	ldp	x19, x30, [sp], #16
 790:	ret
 794:	adrp	x19, 0 <_ZL17report_this_errorPv>
 798:	add	x19, x19, #0x0
 79c:	mov	x0, x19
 7a0:	bl	0 <strlen>
 7a4:	mov	x1, x19
 7a8:	mov	x2, x0
 7ac:	ldp	x19, x30, [sp], #16
 7b0:	mov	w0, #0x2                   	// #2
 7b4:	b	0 <write>

00000000000007b8 <__ubsan_handle_nonnull_arg_minimal_abort>:
 7b8:	stp	x19, x30, [sp, #-16]!
 7bc:	adrp	x19, 0 <_ZL17report_this_errorPv>
 7c0:	add	x19, x19, #0x0
 7c4:	mov	x0, x19
 7c8:	bl	0 <strlen>
 7cc:	mov	x1, x19
 7d0:	mov	x2, x0
 7d4:	mov	w0, #0x2                   	// #2
 7d8:	bl	0 <write>
 7dc:	bl	0 <abort>

00000000000007e0 <__ubsan_handle_nonnull_return_minimal>:
 7e0:	stp	x19, x30, [sp, #-16]!
 7e4:	mov	x0, x30
 7e8:	bl	0 <_ZL17report_this_errorPv>
 7ec:	tst	w0, #0xff
 7f0:	b.ne	7fc <__ubsan_handle_nonnull_return_minimal+0x1c>  // b.any
 7f4:	ldp	x19, x30, [sp], #16
 7f8:	ret
 7fc:	adrp	x19, 0 <_ZL17report_this_errorPv>
 800:	add	x19, x19, #0x0
 804:	mov	x0, x19
 808:	bl	0 <strlen>
 80c:	mov	x1, x19
 810:	mov	x2, x0
 814:	ldp	x19, x30, [sp], #16
 818:	mov	w0, #0x2                   	// #2
 81c:	b	0 <write>

0000000000000820 <__ubsan_handle_nonnull_return_minimal_abort>:
 820:	stp	x19, x30, [sp, #-16]!
 824:	adrp	x19, 0 <_ZL17report_this_errorPv>
 828:	add	x19, x19, #0x0
 82c:	mov	x0, x19
 830:	bl	0 <strlen>
 834:	mov	x1, x19
 838:	mov	x2, x0
 83c:	mov	w0, #0x2                   	// #2
 840:	bl	0 <write>
 844:	bl	0 <abort>

0000000000000848 <__ubsan_handle_nullability_arg_minimal>:
 848:	stp	x19, x30, [sp, #-16]!
 84c:	mov	x0, x30
 850:	bl	0 <_ZL17report_this_errorPv>
 854:	tst	w0, #0xff
 858:	b.ne	864 <__ubsan_handle_nullability_arg_minimal+0x1c>  // b.any
 85c:	ldp	x19, x30, [sp], #16
 860:	ret
 864:	adrp	x19, 0 <_ZL17report_this_errorPv>
 868:	add	x19, x19, #0x0
 86c:	mov	x0, x19
 870:	bl	0 <strlen>
 874:	mov	x1, x19
 878:	mov	x2, x0
 87c:	ldp	x19, x30, [sp], #16
 880:	mov	w0, #0x2                   	// #2
 884:	b	0 <write>

0000000000000888 <__ubsan_handle_nullability_arg_minimal_abort>:
 888:	stp	x19, x30, [sp, #-16]!
 88c:	adrp	x19, 0 <_ZL17report_this_errorPv>
 890:	add	x19, x19, #0x0
 894:	mov	x0, x19
 898:	bl	0 <strlen>
 89c:	mov	x1, x19
 8a0:	mov	x2, x0
 8a4:	mov	w0, #0x2                   	// #2
 8a8:	bl	0 <write>
 8ac:	bl	0 <abort>

00000000000008b0 <__ubsan_handle_nullability_return_minimal>:
 8b0:	stp	x19, x30, [sp, #-16]!
 8b4:	mov	x0, x30
 8b8:	bl	0 <_ZL17report_this_errorPv>
 8bc:	tst	w0, #0xff
 8c0:	b.ne	8cc <__ubsan_handle_nullability_return_minimal+0x1c>  // b.any
 8c4:	ldp	x19, x30, [sp], #16
 8c8:	ret
 8cc:	adrp	x19, 0 <_ZL17report_this_errorPv>
 8d0:	add	x19, x19, #0x0
 8d4:	mov	x0, x19
 8d8:	bl	0 <strlen>
 8dc:	mov	x1, x19
 8e0:	mov	x2, x0
 8e4:	ldp	x19, x30, [sp], #16
 8e8:	mov	w0, #0x2                   	// #2
 8ec:	b	0 <write>

00000000000008f0 <__ubsan_handle_nullability_return_minimal_abort>:
 8f0:	stp	x19, x30, [sp, #-16]!
 8f4:	adrp	x19, 0 <_ZL17report_this_errorPv>
 8f8:	add	x19, x19, #0x0
 8fc:	mov	x0, x19
 900:	bl	0 <strlen>
 904:	mov	x1, x19
 908:	mov	x2, x0
 90c:	mov	w0, #0x2                   	// #2
 910:	bl	0 <write>
 914:	bl	0 <abort>

0000000000000918 <__ubsan_handle_pointer_overflow_minimal>:
 918:	stp	x19, x30, [sp, #-16]!
 91c:	mov	x0, x30
 920:	bl	0 <_ZL17report_this_errorPv>
 924:	tst	w0, #0xff
 928:	b.ne	934 <__ubsan_handle_pointer_overflow_minimal+0x1c>  // b.any
 92c:	ldp	x19, x30, [sp], #16
 930:	ret
 934:	adrp	x19, 0 <_ZL17report_this_errorPv>
 938:	add	x19, x19, #0x0
 93c:	mov	x0, x19
 940:	bl	0 <strlen>
 944:	mov	x1, x19
 948:	mov	x2, x0
 94c:	ldp	x19, x30, [sp], #16
 950:	mov	w0, #0x2                   	// #2
 954:	b	0 <write>

0000000000000958 <__ubsan_handle_pointer_overflow_minimal_abort>:
 958:	stp	x19, x30, [sp, #-16]!
 95c:	adrp	x19, 0 <_ZL17report_this_errorPv>
 960:	add	x19, x19, #0x0
 964:	mov	x0, x19
 968:	bl	0 <strlen>
 96c:	mov	x1, x19
 970:	mov	x2, x0
 974:	mov	w0, #0x2                   	// #2
 978:	bl	0 <write>
 97c:	bl	0 <abort>

0000000000000980 <__ubsan_handle_cfi_check_fail_minimal>:
 980:	stp	x19, x30, [sp, #-16]!
 984:	mov	x0, x30
 988:	bl	0 <_ZL17report_this_errorPv>
 98c:	tst	w0, #0xff
 990:	b.ne	99c <__ubsan_handle_cfi_check_fail_minimal+0x1c>  // b.any
 994:	ldp	x19, x30, [sp], #16
 998:	ret
 99c:	adrp	x19, 0 <_ZL17report_this_errorPv>
 9a0:	add	x19, x19, #0x0
 9a4:	mov	x0, x19
 9a8:	bl	0 <strlen>
 9ac:	mov	x1, x19
 9b0:	mov	x2, x0
 9b4:	ldp	x19, x30, [sp], #16
 9b8:	mov	w0, #0x2                   	// #2
 9bc:	b	0 <write>

00000000000009c0 <__ubsan_handle_cfi_check_fail_minimal_abort>:
 9c0:	stp	x19, x30, [sp, #-16]!
 9c4:	adrp	x19, 0 <_ZL17report_this_errorPv>
 9c8:	add	x19, x19, #0x0
 9cc:	mov	x0, x19
 9d0:	bl	0 <strlen>
 9d4:	mov	x1, x19
 9d8:	mov	x2, x0
 9dc:	mov	w0, #0x2                   	// #2
 9e0:	bl	0 <write>
 9e4:	bl	0 <abort>
