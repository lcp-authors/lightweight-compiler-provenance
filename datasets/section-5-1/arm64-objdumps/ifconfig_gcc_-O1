
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ifconfig_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401a60 <.init>:
  401a60:	stp	x29, x30, [sp, #-16]!
  401a64:	mov	x29, sp
  401a68:	bl	401f50 <ferror@plt+0x60>
  401a6c:	ldp	x29, x30, [sp], #16
  401a70:	ret

Disassembly of section .plt:

0000000000401a80 <memcpy@plt-0x20>:
  401a80:	stp	x16, x30, [sp, #-16]!
  401a84:	adrp	x16, 424000 <argp_error@@Base+0x17e2c>
  401a88:	ldr	x17, [x16, #4088]
  401a8c:	add	x16, x16, #0xff8
  401a90:	br	x17
  401a94:	nop
  401a98:	nop
  401a9c:	nop

0000000000401aa0 <memcpy@plt>:
  401aa0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401aa4:	ldr	x17, [x16]
  401aa8:	add	x16, x16, #0x0
  401aac:	br	x17

0000000000401ab0 <memmove@plt>:
  401ab0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401ab4:	ldr	x17, [x16, #8]
  401ab8:	add	x16, x16, #0x8
  401abc:	br	x17

0000000000401ac0 <gai_strerror@plt>:
  401ac0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401ac4:	ldr	x17, [x16, #16]
  401ac8:	add	x16, x16, #0x10
  401acc:	br	x17

0000000000401ad0 <freeaddrinfo@plt>:
  401ad0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401ad4:	ldr	x17, [x16, #24]
  401ad8:	add	x16, x16, #0x18
  401adc:	br	x17

0000000000401ae0 <fwrite_unlocked@plt>:
  401ae0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401ae4:	ldr	x17, [x16, #32]
  401ae8:	add	x16, x16, #0x20
  401aec:	br	x17

0000000000401af0 <strtoul@plt>:
  401af0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401af4:	ldr	x17, [x16, #40]
  401af8:	add	x16, x16, #0x28
  401afc:	br	x17

0000000000401b00 <strlen@plt>:
  401b00:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401b04:	ldr	x17, [x16, #48]
  401b08:	add	x16, x16, #0x30
  401b0c:	br	x17

0000000000401b10 <fputs@plt>:
  401b10:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401b14:	ldr	x17, [x16, #56]
  401b18:	add	x16, x16, #0x38
  401b1c:	br	x17

0000000000401b20 <exit@plt>:
  401b20:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401b24:	ldr	x17, [x16, #64]
  401b28:	add	x16, x16, #0x40
  401b2c:	br	x17

0000000000401b30 <error@plt>:
  401b30:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401b34:	ldr	x17, [x16, #72]
  401b38:	add	x16, x16, #0x48
  401b3c:	br	x17

0000000000401b40 <flockfile@plt>:
  401b40:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401b44:	ldr	x17, [x16, #80]
  401b48:	add	x16, x16, #0x50
  401b4c:	br	x17

0000000000401b50 <getnameinfo@plt>:
  401b50:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401b54:	ldr	x17, [x16, #88]
  401b58:	add	x16, x16, #0x58
  401b5c:	br	x17

0000000000401b60 <putc@plt>:
  401b60:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401b64:	ldr	x17, [x16, #96]
  401b68:	add	x16, x16, #0x60
  401b6c:	br	x17

0000000000401b70 <fputc@plt>:
  401b70:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401b74:	ldr	x17, [x16, #104]
  401b78:	add	x16, x16, #0x68
  401b7c:	br	x17

0000000000401b80 <qsort@plt>:
  401b80:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401b84:	ldr	x17, [x16, #112]
  401b88:	add	x16, x16, #0x70
  401b8c:	br	x17

0000000000401b90 <inet_ntoa@plt>:
  401b90:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401b94:	ldr	x17, [x16, #120]
  401b98:	add	x16, x16, #0x78
  401b9c:	br	x17

0000000000401ba0 <__ctype_tolower_loc@plt>:
  401ba0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401ba4:	ldr	x17, [x16, #128]
  401ba8:	add	x16, x16, #0x80
  401bac:	br	x17

0000000000401bb0 <fileno@plt>:
  401bb0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401bb4:	ldr	x17, [x16, #136]
  401bb8:	add	x16, x16, #0x88
  401bbc:	br	x17

0000000000401bc0 <fclose@plt>:
  401bc0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401bc4:	ldr	x17, [x16, #144]
  401bc8:	add	x16, x16, #0x90
  401bcc:	br	x17

0000000000401bd0 <fopen@plt>:
  401bd0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401bd4:	ldr	x17, [x16, #152]
  401bd8:	add	x16, x16, #0x98
  401bdc:	br	x17

0000000000401be0 <malloc@plt>:
  401be0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401be4:	ldr	x17, [x16, #160]
  401be8:	add	x16, x16, #0xa0
  401bec:	br	x17

0000000000401bf0 <funlockfile@plt>:
  401bf0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401bf4:	ldr	x17, [x16, #168]
  401bf8:	add	x16, x16, #0xa8
  401bfc:	br	x17

0000000000401c00 <strncmp@plt>:
  401c00:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401c04:	ldr	x17, [x16, #176]
  401c08:	add	x16, x16, #0xb0
  401c0c:	br	x17

0000000000401c10 <__libc_start_main@plt>:
  401c10:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401c14:	ldr	x17, [x16, #184]
  401c18:	add	x16, x16, #0xb8
  401c1c:	br	x17

0000000000401c20 <memset@plt>:
  401c20:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401c24:	ldr	x17, [x16, #192]
  401c28:	add	x16, x16, #0xc0
  401c2c:	br	x17

0000000000401c30 <sleep@plt>:
  401c30:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401c34:	ldr	x17, [x16, #200]
  401c38:	add	x16, x16, #0xc8
  401c3c:	br	x17

0000000000401c40 <strerror_r@plt>:
  401c40:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401c44:	ldr	x17, [x16, #208]
  401c48:	add	x16, x16, #0xd0
  401c4c:	br	x17

0000000000401c50 <calloc@plt>:
  401c50:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401c54:	ldr	x17, [x16, #216]
  401c58:	add	x16, x16, #0xd8
  401c5c:	br	x17

0000000000401c60 <strcasecmp@plt>:
  401c60:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401c64:	ldr	x17, [x16, #224]
  401c68:	add	x16, x16, #0xe0
  401c6c:	br	x17

0000000000401c70 <realloc@plt>:
  401c70:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401c74:	ldr	x17, [x16, #232]
  401c78:	add	x16, x16, #0xe8
  401c7c:	br	x17

0000000000401c80 <strdup@plt>:
  401c80:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401c84:	ldr	x17, [x16, #240]
  401c88:	add	x16, x16, #0xf0
  401c8c:	br	x17

0000000000401c90 <strerror@plt>:
  401c90:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401c94:	ldr	x17, [x16, #248]
  401c98:	add	x16, x16, #0xf8
  401c9c:	br	x17

0000000000401ca0 <close@plt>:
  401ca0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401ca4:	ldr	x17, [x16, #256]
  401ca8:	add	x16, x16, #0x100
  401cac:	br	x17

0000000000401cb0 <strrchr@plt>:
  401cb0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401cb4:	ldr	x17, [x16, #264]
  401cb8:	add	x16, x16, #0x108
  401cbc:	br	x17

0000000000401cc0 <__gmon_start__@plt>:
  401cc0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401cc4:	ldr	x17, [x16, #272]
  401cc8:	add	x16, x16, #0x110
  401ccc:	br	x17

0000000000401cd0 <abort@plt>:
  401cd0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401cd4:	ldr	x17, [x16, #280]
  401cd8:	add	x16, x16, #0x118
  401cdc:	br	x17

0000000000401ce0 <__overflow@plt>:
  401ce0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401ce4:	ldr	x17, [x16, #288]
  401ce8:	add	x16, x16, #0x120
  401cec:	br	x17

0000000000401cf0 <strcmp@plt>:
  401cf0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401cf4:	ldr	x17, [x16, #296]
  401cf8:	add	x16, x16, #0x128
  401cfc:	br	x17

0000000000401d00 <__ctype_b_loc@plt>:
  401d00:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401d04:	ldr	x17, [x16, #304]
  401d08:	add	x16, x16, #0x130
  401d0c:	br	x17

0000000000401d10 <strtol@plt>:
  401d10:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401d14:	ldr	x17, [x16, #312]
  401d18:	add	x16, x16, #0x138
  401d1c:	br	x17

0000000000401d20 <fread@plt>:
  401d20:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401d24:	ldr	x17, [x16, #320]
  401d28:	add	x16, x16, #0x140
  401d2c:	br	x17

0000000000401d30 <free@plt>:
  401d30:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401d34:	ldr	x17, [x16, #328]
  401d38:	add	x16, x16, #0x148
  401d3c:	br	x17

0000000000401d40 <mempcpy@plt>:
  401d40:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401d44:	ldr	x17, [x16, #336]
  401d48:	add	x16, x16, #0x150
  401d4c:	br	x17

0000000000401d50 <strncasecmp@plt>:
  401d50:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401d54:	ldr	x17, [x16, #344]
  401d58:	add	x16, x16, #0x158
  401d5c:	br	x17

0000000000401d60 <strndup@plt>:
  401d60:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401d64:	ldr	x17, [x16, #352]
  401d68:	add	x16, x16, #0x160
  401d6c:	br	x17

0000000000401d70 <strchr@plt>:
  401d70:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401d74:	ldr	x17, [x16, #360]
  401d78:	add	x16, x16, #0x168
  401d7c:	br	x17

0000000000401d80 <fwrite@plt>:
  401d80:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401d84:	ldr	x17, [x16, #368]
  401d88:	add	x16, x16, #0x170
  401d8c:	br	x17

0000000000401d90 <socket@plt>:
  401d90:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401d94:	ldr	x17, [x16, #376]
  401d98:	add	x16, x16, #0x178
  401d9c:	br	x17

0000000000401da0 <ftello@plt>:
  401da0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401da4:	ldr	x17, [x16, #384]
  401da8:	add	x16, x16, #0x180
  401dac:	br	x17

0000000000401db0 <strcpy@plt>:
  401db0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401db4:	ldr	x17, [x16, #392]
  401db8:	add	x16, x16, #0x188
  401dbc:	br	x17

0000000000401dc0 <getaddrinfo@plt>:
  401dc0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401dc4:	ldr	x17, [x16, #400]
  401dc8:	add	x16, x16, #0x190
  401dcc:	br	x17

0000000000401dd0 <memchr@plt>:
  401dd0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401dd4:	ldr	x17, [x16, #408]
  401dd8:	add	x16, x16, #0x198
  401ddc:	br	x17

0000000000401de0 <inet_aton@plt>:
  401de0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401de4:	ldr	x17, [x16, #416]
  401de8:	add	x16, x16, #0x1a0
  401dec:	br	x17

0000000000401df0 <__fxstat@plt>:
  401df0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401df4:	ldr	x17, [x16, #424]
  401df8:	add	x16, x16, #0x1a8
  401dfc:	br	x17

0000000000401e00 <if_nametoindex@plt>:
  401e00:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401e04:	ldr	x17, [x16, #432]
  401e08:	add	x16, x16, #0x1b0
  401e0c:	br	x17

0000000000401e10 <strchrnul@plt>:
  401e10:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401e14:	ldr	x17, [x16, #440]
  401e18:	add	x16, x16, #0x1b8
  401e1c:	br	x17

0000000000401e20 <strstr@plt>:
  401e20:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401e24:	ldr	x17, [x16, #448]
  401e28:	add	x16, x16, #0x1c0
  401e2c:	br	x17

0000000000401e30 <__isoc99_sscanf@plt>:
  401e30:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401e34:	ldr	x17, [x16, #456]
  401e38:	add	x16, x16, #0x1c8
  401e3c:	br	x17

0000000000401e40 <vsnprintf@plt>:
  401e40:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401e44:	ldr	x17, [x16, #464]
  401e48:	add	x16, x16, #0x1d0
  401e4c:	br	x17

0000000000401e50 <fputs_unlocked@plt>:
  401e50:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401e54:	ldr	x17, [x16, #472]
  401e58:	add	x16, x16, #0x1d8
  401e5c:	br	x17

0000000000401e60 <strncpy@plt>:
  401e60:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401e64:	ldr	x17, [x16, #480]
  401e68:	add	x16, x16, #0x1e0
  401e6c:	br	x17

0000000000401e70 <vfprintf@plt>:
  401e70:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401e74:	ldr	x17, [x16, #488]
  401e78:	add	x16, x16, #0x1e8
  401e7c:	br	x17

0000000000401e80 <printf@plt>:
  401e80:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401e84:	ldr	x17, [x16, #496]
  401e88:	add	x16, x16, #0x1f0
  401e8c:	br	x17

0000000000401e90 <__assert_fail@plt>:
  401e90:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401e94:	ldr	x17, [x16, #504]
  401e98:	add	x16, x16, #0x1f8
  401e9c:	br	x17

0000000000401ea0 <__errno_location@plt>:
  401ea0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401ea4:	ldr	x17, [x16, #512]
  401ea8:	add	x16, x16, #0x200
  401eac:	br	x17

0000000000401eb0 <getenv@plt>:
  401eb0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401eb4:	ldr	x17, [x16, #520]
  401eb8:	add	x16, x16, #0x208
  401ebc:	br	x17

0000000000401ec0 <__getdelim@plt>:
  401ec0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401ec4:	ldr	x17, [x16, #528]
  401ec8:	add	x16, x16, #0x210
  401ecc:	br	x17

0000000000401ed0 <fprintf@plt>:
  401ed0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401ed4:	ldr	x17, [x16, #536]
  401ed8:	add	x16, x16, #0x218
  401edc:	br	x17

0000000000401ee0 <ioctl@plt>:
  401ee0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401ee4:	ldr	x17, [x16, #544]
  401ee8:	add	x16, x16, #0x220
  401eec:	br	x17

0000000000401ef0 <ferror@plt>:
  401ef0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  401ef4:	ldr	x17, [x16, #552]
  401ef8:	add	x16, x16, #0x228
  401efc:	br	x17

Disassembly of section .text:

0000000000401f00 <argp_parse@@Base-0x5b20>:
  401f00:	mov	x29, #0x0                   	// #0
  401f04:	mov	x30, #0x0                   	// #0
  401f08:	mov	x5, x0
  401f0c:	ldr	x1, [sp]
  401f10:	add	x2, sp, #0x8
  401f14:	mov	x6, sp
  401f18:	movz	x0, #0x0, lsl #48
  401f1c:	movk	x0, #0x0, lsl #32
  401f20:	movk	x0, #0x40, lsl #16
  401f24:	movk	x0, #0x2050
  401f28:	movz	x3, #0x0, lsl #48
  401f2c:	movk	x3, #0x0, lsl #32
  401f30:	movk	x3, #0x40, lsl #16
  401f34:	movk	x3, #0xda90
  401f38:	movz	x4, #0x0, lsl #48
  401f3c:	movk	x4, #0x0, lsl #32
  401f40:	movk	x4, #0x40, lsl #16
  401f44:	movk	x4, #0xdb10
  401f48:	bl	401c10 <__libc_start_main@plt>
  401f4c:	bl	401cd0 <abort@plt>
  401f50:	adrp	x0, 424000 <argp_error@@Base+0x17e2c>
  401f54:	ldr	x0, [x0, #4064]
  401f58:	cbz	x0, 401f60 <ferror@plt+0x70>
  401f5c:	b	401cc0 <__gmon_start__@plt>
  401f60:	ret
  401f64:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  401f68:	add	x0, x0, #0x4d8
  401f6c:	adrp	x1, 426000 <argp_error@@Base+0x19e2c>
  401f70:	add	x1, x1, #0x4d8
  401f74:	cmp	x0, x1
  401f78:	b.eq	401fac <ferror@plt+0xbc>  // b.none
  401f7c:	stp	x29, x30, [sp, #-32]!
  401f80:	mov	x29, sp
  401f84:	adrp	x0, 40d000 <argp_error@@Base+0xe2c>
  401f88:	ldr	x0, [x0, #2864]
  401f8c:	str	x0, [sp, #24]
  401f90:	mov	x1, x0
  401f94:	cbz	x1, 401fa4 <ferror@plt+0xb4>
  401f98:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  401f9c:	add	x0, x0, #0x4d8
  401fa0:	blr	x1
  401fa4:	ldp	x29, x30, [sp], #32
  401fa8:	ret
  401fac:	ret
  401fb0:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  401fb4:	add	x0, x0, #0x4d8
  401fb8:	adrp	x1, 426000 <argp_error@@Base+0x19e2c>
  401fbc:	add	x1, x1, #0x4d8
  401fc0:	sub	x0, x0, x1
  401fc4:	lsr	x1, x0, #63
  401fc8:	add	x0, x1, x0, asr #3
  401fcc:	cmp	xzr, x0, asr #1
  401fd0:	b.eq	402008 <ferror@plt+0x118>  // b.none
  401fd4:	stp	x29, x30, [sp, #-32]!
  401fd8:	mov	x29, sp
  401fdc:	asr	x1, x0, #1
  401fe0:	adrp	x0, 40d000 <argp_error@@Base+0xe2c>
  401fe4:	ldr	x0, [x0, #2872]
  401fe8:	str	x0, [sp, #24]
  401fec:	mov	x2, x0
  401ff0:	cbz	x2, 402000 <ferror@plt+0x110>
  401ff4:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  401ff8:	add	x0, x0, #0x4d8
  401ffc:	blr	x2
  402000:	ldp	x29, x30, [sp], #32
  402004:	ret
  402008:	ret
  40200c:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  402010:	ldrb	w0, [x0, #1272]
  402014:	cbnz	w0, 402038 <ferror@plt+0x148>
  402018:	stp	x29, x30, [sp, #-16]!
  40201c:	mov	x29, sp
  402020:	bl	401f64 <ferror@plt+0x74>
  402024:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  402028:	mov	w1, #0x1                   	// #1
  40202c:	strb	w1, [x0, #1272]
  402030:	ldp	x29, x30, [sp], #16
  402034:	ret
  402038:	ret
  40203c:	stp	x29, x30, [sp, #-16]!
  402040:	mov	x29, sp
  402044:	bl	401fb0 <ferror@plt+0xc0>
  402048:	ldp	x29, x30, [sp], #16
  40204c:	ret
  402050:	stp	x29, x30, [sp, #-80]!
  402054:	mov	x29, sp
  402058:	stp	x19, x20, [sp, #16]
  40205c:	mov	w20, w0
  402060:	mov	x19, x1
  402064:	ldr	x0, [x1]
  402068:	bl	408558 <argp_parse@@Base+0xb38>
  40206c:	mov	x1, x19
  402070:	mov	w0, w20
  402074:	bl	403b54 <ferror@plt+0x1c64>
  402078:	mov	w2, #0x0                   	// #0
  40207c:	mov	w1, #0x1                   	// #1
  402080:	mov	w0, #0x2                   	// #2
  402084:	bl	401d90 <socket@plt>
  402088:	tbnz	w0, #31, 4020e4 <ferror@plt+0x1f4>
  40208c:	stp	x23, x24, [sp, #48]
  402090:	mov	w23, w0
  402094:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  402098:	ldr	x19, [x0, #1536]
  40209c:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  4020a0:	ldrsw	x1, [x0, #1552]
  4020a4:	add	x0, x1, x1, lsl #1
  4020a8:	lsl	x0, x0, #2
  4020ac:	sub	x0, x0, x1
  4020b0:	add	x0, x19, x0, lsl #3
  4020b4:	cmp	x19, x0
  4020b8:	b.cs	4021e4 <ferror@plt+0x2f4>  // b.hs, b.nlast
  4020bc:	stp	x21, x22, [sp, #32]
  4020c0:	str	x25, [sp, #64]
  4020c4:	mov	w20, #0x0                   	// #0
  4020c8:	adrp	x21, 426000 <argp_error@@Base+0x19e2c>
  4020cc:	add	x21, x21, #0x62c
  4020d0:	adrp	x24, 40e000 <argp_error@@Base+0x1e2c>
  4020d4:	add	x24, x24, #0x90
  4020d8:	adrp	x22, 426000 <argp_error@@Base+0x19e2c>
  4020dc:	add	x22, x22, #0x610
  4020e0:	b	402160 <ferror@plt+0x270>
  4020e4:	stp	x21, x22, [sp, #32]
  4020e8:	stp	x23, x24, [sp, #48]
  4020ec:	str	x25, [sp, #64]
  4020f0:	bl	401ea0 <__errno_location@plt>
  4020f4:	adrp	x2, 40d000 <argp_error@@Base+0xe2c>
  4020f8:	add	x2, x2, #0xb40
  4020fc:	ldr	w1, [x0]
  402100:	mov	w0, #0x0                   	// #0
  402104:	bl	401b30 <error@plt>
  402108:	mov	w0, #0x1                   	// #1
  40210c:	bl	401b20 <exit@plt>
  402110:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  402114:	ldr	x1, [x0, #1256]
  402118:	mov	w0, #0x20                  	// #32
  40211c:	bl	401b60 <putc@plt>
  402120:	b	40217c <ferror@plt+0x28c>
  402124:	mov	x1, x19
  402128:	mov	w0, w23
  40212c:	bl	402d38 <ferror@plt+0xe48>
  402130:	mov	w20, w0
  402134:	cbnz	w0, 402190 <ferror@plt+0x2a0>
  402138:	add	x19, x19, #0x58
  40213c:	ldrsw	x0, [x22]
  402140:	add	x1, x0, x0, lsl #1
  402144:	lsl	x1, x1, #2
  402148:	sub	x1, x1, x0
  40214c:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  402150:	ldr	x0, [x0, #1536]
  402154:	add	x1, x0, x1, lsl #3
  402158:	cmp	x19, x1
  40215c:	b.cs	402190 <ferror@plt+0x2a0>  // b.hs, b.nlast
  402160:	ldr	w0, [x21]
  402164:	cbz	w0, 402124 <ferror@plt+0x234>
  402168:	ldr	x0, [x19]
  40216c:	bl	401e00 <if_nametoindex@plt>
  402170:	cbz	w0, 402138 <ferror@plt+0x248>
  402174:	add	w25, w20, #0x1
  402178:	cbnz	w20, 402110 <ferror@plt+0x220>
  40217c:	ldr	x1, [x19]
  402180:	mov	x0, x24
  402184:	bl	401e80 <printf@plt>
  402188:	mov	w20, w25
  40218c:	b	402138 <ferror@plt+0x248>
  402190:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  402194:	ldr	w0, [x0, #1580]
  402198:	cmp	w0, #0x0
  40219c:	ccmp	w20, #0x0, #0x4, ne  // ne = any
  4021a0:	b.ne	4021c8 <ferror@plt+0x2d8>  // b.any
  4021a4:	ldp	x21, x22, [sp, #32]
  4021a8:	ldr	x25, [sp, #64]
  4021ac:	mov	w0, w23
  4021b0:	bl	401ca0 <close@plt>
  4021b4:	mov	w0, w20
  4021b8:	ldp	x23, x24, [sp, #48]
  4021bc:	ldp	x19, x20, [sp, #16]
  4021c0:	ldp	x29, x30, [sp], #80
  4021c4:	ret
  4021c8:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  4021cc:	ldr	x1, [x0, #1256]
  4021d0:	mov	w0, #0xa                   	// #10
  4021d4:	bl	401b60 <putc@plt>
  4021d8:	ldp	x21, x22, [sp, #32]
  4021dc:	ldr	x25, [sp, #64]
  4021e0:	b	4021ac <ferror@plt+0x2bc>
  4021e4:	mov	w20, #0x0                   	// #0
  4021e8:	b	4021ac <ferror@plt+0x2bc>
  4021ec:	stp	x29, x30, [sp, #-16]!
  4021f0:	mov	x29, sp
  4021f4:	ldr	x1, [x1]
  4021f8:	ldr	x0, [x0]
  4021fc:	bl	401cf0 <strcmp@plt>
  402200:	ldp	x29, x30, [sp], #16
  402204:	ret
  402208:	stp	x29, x30, [sp, #-112]!
  40220c:	mov	x29, sp
  402210:	stp	x19, x20, [sp, #16]
  402214:	stp	x21, x22, [sp, #32]
  402218:	stp	x23, x24, [sp, #48]
  40221c:	stp	x25, x26, [sp, #64]
  402220:	stp	x27, x28, [sp, #80]
  402224:	mov	x25, x0
  402228:	adrp	x0, 425000 <argp_error@@Base+0x18e2c>
  40222c:	ldr	x0, [x0, #576]
  402230:	cbz	x0, 402264 <ferror@plt+0x374>
  402234:	mov	x23, #0x0                   	// #0
  402238:	adrp	x19, 425000 <argp_error@@Base+0x18e2c>
  40223c:	add	x19, x19, #0x240
  402240:	b	40224c <ferror@plt+0x35c>
  402244:	ldr	x0, [x19, #16]!
  402248:	cbz	x0, 402268 <ferror@plt+0x378>
  40224c:	ldr	w1, [x19, #12]
  402250:	cbnz	w1, 402244 <ferror@plt+0x354>
  402254:	bl	401b00 <strlen@plt>
  402258:	add	x23, x23, #0x1
  40225c:	add	x23, x0, x23
  402260:	b	402244 <ferror@plt+0x354>
  402264:	mov	x23, #0x0                   	// #0
  402268:	add	x0, x23, #0xa0
  40226c:	bl	408ccc <argp_parse@@Base+0x12ac>
  402270:	mov	x24, x0
  402274:	add	x21, x0, #0xa0
  402278:	adrp	x0, 425000 <argp_error@@Base+0x18e2c>
  40227c:	ldr	x20, [x0, #576]
  402280:	cbz	x20, 402314 <ferror@plt+0x424>
  402284:	mov	x19, #0x0                   	// #0
  402288:	add	x22, x0, #0x240
  40228c:	mov	w26, #0x48                  	// #72
  402290:	adrp	x27, 40d000 <argp_error@@Base+0xe2c>
  402294:	add	x27, x27, #0xb50
  402298:	mov	x28, #0x2                   	// #2
  40229c:	b	4022b0 <ferror@plt+0x3c0>
  4022a0:	strb	wzr, [x21], #1
  4022a4:	ldr	x19, [sp, #104]
  4022a8:	ldr	x20, [x22, #16]!
  4022ac:	cbz	x20, 402318 <ferror@plt+0x428>
  4022b0:	ldr	w0, [x22, #12]
  4022b4:	cbnz	w0, 4022a8 <ferror@plt+0x3b8>
  4022b8:	ldr	w0, [x22, #8]
  4022bc:	tst	w0, w26
  4022c0:	b.ne	4022a8 <ferror@plt+0x3b8>  // b.any
  4022c4:	add	x0, x19, #0x1
  4022c8:	str	x0, [sp, #104]
  4022cc:	str	x21, [x24, x19, lsl #3]
  4022d0:	mov	x2, x28
  4022d4:	mov	x1, x27
  4022d8:	mov	x0, x20
  4022dc:	bl	401c00 <strncmp@plt>
  4022e0:	add	x1, x20, #0x2
  4022e4:	cmp	w0, #0x0
  4022e8:	csel	x20, x1, x20, eq  // eq = none
  4022ec:	ldrb	w19, [x20]
  4022f0:	cbz	w19, 4022a0 <ferror@plt+0x3b0>
  4022f4:	bl	401ba0 <__ctype_tolower_loc@plt>
  4022f8:	ldr	x1, [x0]
  4022fc:	and	x19, x19, #0xff
  402300:	ldr	w0, [x1, x19, lsl #2]
  402304:	strb	w0, [x21], #1
  402308:	ldrb	w19, [x20, #1]!
  40230c:	cbnz	w19, 4022fc <ferror@plt+0x40c>
  402310:	b	4022a0 <ferror@plt+0x3b0>
  402314:	mov	x19, #0x0                   	// #0
  402318:	adrp	x3, 402000 <ferror@plt+0x110>
  40231c:	add	x3, x3, #0x1ec
  402320:	mov	x2, #0x8                   	// #8
  402324:	mov	x1, x19
  402328:	mov	x0, x24
  40232c:	bl	401b80 <qsort@plt>
  402330:	add	x23, x23, x19, lsl #1
  402334:	cbz	x25, 4023ec <ferror@plt+0x4fc>
  402338:	mov	x0, x25
  40233c:	bl	401b00 <strlen@plt>
  402340:	add	x23, x23, #0x24
  402344:	add	x0, x23, x0
  402348:	bl	408ccc <argp_parse@@Base+0x12ac>
  40234c:	mov	x26, x0
  402350:	mov	x1, x25
  402354:	bl	401db0 <strcpy@plt>
  402358:	mov	x0, x25
  40235c:	bl	401b00 <strlen@plt>
  402360:	add	x21, x26, x0
  402364:	cbz	x19, 402400 <ferror@plt+0x510>
  402368:	mov	x20, #0x0                   	// #0
  40236c:	mov	w27, #0x2c                  	// #44
  402370:	mov	w25, #0x20                  	// #32
  402374:	sub	x23, x24, #0x8
  402378:	b	402388 <ferror@plt+0x498>
  40237c:	add	x20, x20, #0x1
  402380:	cmp	x20, x19
  402384:	b.eq	402400 <ferror@plt+0x510>  // b.none
  402388:	cbz	x20, 4023ac <ferror@plt+0x4bc>
  40238c:	ldr	x22, [x23, x20, lsl #3]
  402390:	mov	x0, x22
  402394:	bl	401b00 <strlen@plt>
  402398:	mov	x2, x0
  40239c:	ldr	x1, [x24, x20, lsl #3]
  4023a0:	mov	x0, x22
  4023a4:	bl	401c00 <strncmp@plt>
  4023a8:	cbz	w0, 40237c <ferror@plt+0x48c>
  4023ac:	ldr	x22, [x24, x20, lsl #3]
  4023b0:	mov	x1, x22
  4023b4:	mov	x0, x21
  4023b8:	bl	401db0 <strcpy@plt>
  4023bc:	mov	x0, x22
  4023c0:	bl	401b00 <strlen@plt>
  4023c4:	add	x21, x21, x0
  4023c8:	add	x0, x20, #0x1
  4023cc:	cmp	x0, x19
  4023d0:	b.cs	40237c <ferror@plt+0x48c>  // b.hs, b.nlast
  4023d4:	mov	x0, x21
  4023d8:	strb	w27, [x0], #2
  4023dc:	strb	w25, [x21, #1]
  4023e0:	add	x20, x20, #0x1
  4023e4:	mov	x21, x0
  4023e8:	b	402388 <ferror@plt+0x498>
  4023ec:	add	x0, x23, #0x24
  4023f0:	bl	408ccc <argp_parse@@Base+0x12ac>
  4023f4:	mov	x21, x0
  4023f8:	mov	x26, x0
  4023fc:	b	402364 <ferror@plt+0x474>
  402400:	adrp	x0, 40d000 <argp_error@@Base+0xe2c>
  402404:	add	x0, x0, #0xb58
  402408:	ldp	x2, x3, [x0]
  40240c:	stp	x2, x3, [x21]
  402410:	ldp	x2, x3, [x0, #16]
  402414:	stp	x2, x3, [x21, #16]
  402418:	ldr	w0, [x0, #32]
  40241c:	str	w0, [x21, #32]
  402420:	mov	x0, x24
  402424:	bl	401d30 <free@plt>
  402428:	mov	x0, x26
  40242c:	ldp	x19, x20, [sp, #16]
  402430:	ldp	x21, x22, [sp, #32]
  402434:	ldp	x23, x24, [sp, #48]
  402438:	ldp	x25, x26, [sp, #64]
  40243c:	ldp	x27, x28, [sp, #80]
  402440:	ldp	x29, x30, [sp], #112
  402444:	ret
  402448:	stp	x29, x30, [sp, #-64]!
  40244c:	mov	x29, sp
  402450:	stp	x19, x20, [sp, #16]
  402454:	stp	x21, x22, [sp, #32]
  402458:	mov	x22, x1
  40245c:	adrp	x1, 425000 <argp_error@@Base+0x18e2c>
  402460:	ldr	x20, [x1, #576]
  402464:	cbz	x20, 4024f4 <ferror@plt+0x604>
  402468:	add	x19, x1, #0x240
  40246c:	b	402478 <ferror@plt+0x588>
  402470:	ldr	x20, [x19, #16]!
  402474:	cbz	x20, 4024f4 <ferror@plt+0x604>
  402478:	ldr	w2, [x19, #8]
  40247c:	cmp	w2, w0
  402480:	b.ne	402470 <ferror@plt+0x580>  // b.any
  402484:	ldr	w2, [x19, #12]
  402488:	cbnz	w2, 402470 <ferror@plt+0x580>
  40248c:	cbz	x22, 4024dc <ferror@plt+0x5ec>
  402490:	str	x23, [sp, #48]
  402494:	ldr	x23, [x19]
  402498:	mov	x1, x23
  40249c:	mov	x0, x22
  4024a0:	bl	401e20 <strstr@plt>
  4024a4:	mov	x21, x0
  4024a8:	cbz	x0, 4024ec <ferror@plt+0x5fc>
  4024ac:	ldurb	w0, [x0, #-1]
  4024b0:	cmp	w0, #0x3a
  4024b4:	b.ne	4024ec <ferror@plt+0x5fc>  // b.any
  4024b8:	mov	x0, x23
  4024bc:	bl	401b00 <strlen@plt>
  4024c0:	ldrb	w0, [x21, x0]
  4024c4:	cmp	w0, #0x3a
  4024c8:	b.ne	4024ec <ferror@plt+0x5fc>  // b.any
  4024cc:	ldr	x0, [x19, #16]!
  4024d0:	cbnz	x0, 402494 <ferror@plt+0x5a4>
  4024d4:	ldr	x23, [sp, #48]
  4024d8:	b	4024f4 <ferror@plt+0x604>
  4024dc:	ldr	x0, [x19]
  4024e0:	cmp	x0, #0x0
  4024e4:	csel	x20, x20, x0, eq  // eq = none
  4024e8:	b	4024f4 <ferror@plt+0x604>
  4024ec:	ldr	x20, [x19]
  4024f0:	ldr	x23, [sp, #48]
  4024f4:	mov	x0, x20
  4024f8:	ldp	x19, x20, [sp, #16]
  4024fc:	ldp	x21, x22, [sp, #32]
  402500:	ldp	x29, x30, [sp], #64
  402504:	ret
  402508:	stp	x29, x30, [sp, #-64]!
  40250c:	mov	x29, sp
  402510:	stp	x19, x20, [sp, #16]
  402514:	stp	x21, x22, [sp, #32]
  402518:	str	x23, [sp, #48]
  40251c:	mov	x22, x0
  402520:	mov	x20, x1
  402524:	mov	x23, x2
  402528:	cmp	x1, #0x1
  40252c:	b.ls	40253c <ferror@plt+0x64c>  // b.plast
  402530:	ldrb	w0, [x0]
  402534:	cmp	w0, #0x2d
  402538:	b.eq	402570 <ferror@plt+0x680>  // b.none
  40253c:	mov	w21, #0x0                   	// #0
  402540:	cmp	x20, #0x2
  402544:	b.ls	40257c <ferror@plt+0x68c>  // b.plast
  402548:	mov	x2, #0x2                   	// #2
  40254c:	adrp	x1, 40d000 <argp_error@@Base+0xe2c>
  402550:	add	x1, x1, #0xb50
  402554:	mov	x0, x22
  402558:	bl	401d50 <strncasecmp@plt>
  40255c:	cbnz	w0, 40257c <ferror@plt+0x68c>
  402560:	add	x22, x22, #0x2
  402564:	sub	x20, x20, #0x2
  402568:	mov	w21, #0x1                   	// #1
  40256c:	b	40257c <ferror@plt+0x68c>
  402570:	add	x22, x22, #0x1
  402574:	sub	x20, x1, #0x1
  402578:	mov	w21, #0x1                   	// #1
  40257c:	adrp	x1, 425000 <argp_error@@Base+0x18e2c>
  402580:	ldr	x0, [x1, #576]
  402584:	cbz	x0, 4025cc <ferror@plt+0x6dc>
  402588:	add	x19, x1, #0x240
  40258c:	mov	x2, x20
  402590:	mov	x1, x22
  402594:	bl	401d50 <strncasecmp@plt>
  402598:	cbz	w0, 4025a8 <ferror@plt+0x6b8>
  40259c:	ldr	x0, [x19, #16]!
  4025a0:	cbnz	x0, 40258c <ferror@plt+0x69c>
  4025a4:	b	4025b8 <ferror@plt+0x6c8>
  4025a8:	ldr	w0, [x19, #12]
  4025ac:	eor	w21, w0, w21
  4025b0:	str	w21, [x23]
  4025b4:	ldr	w0, [x19, #8]
  4025b8:	ldp	x19, x20, [sp, #16]
  4025bc:	ldp	x21, x22, [sp, #32]
  4025c0:	ldr	x23, [sp, #48]
  4025c4:	ldp	x29, x30, [sp], #64
  4025c8:	ret
  4025cc:	mov	w0, #0x0                   	// #0
  4025d0:	b	4025b8 <ferror@plt+0x6c8>
  4025d4:	stp	x29, x30, [sp, #-32]!
  4025d8:	mov	x29, sp
  4025dc:	stp	x19, x20, [sp, #16]
  4025e0:	mov	x19, x0
  4025e4:	mov	x20, x1
  4025e8:	bl	401b00 <strlen@plt>
  4025ec:	mov	x2, x20
  4025f0:	mov	x1, x0
  4025f4:	mov	x0, x19
  4025f8:	bl	402508 <ferror@plt+0x618>
  4025fc:	ldp	x19, x20, [sp, #16]
  402600:	ldp	x29, x30, [sp], #32
  402604:	ret
  402608:	adrp	x3, 425000 <argp_error@@Base+0x18e2c>
  40260c:	add	x3, x3, #0x240
  402610:	add	x3, x3, #0x150
  402614:	subs	x2, x2, #0x1
  402618:	b.ne	40262c <ferror@plt+0x73c>  // b.any
  40261c:	strb	wzr, [x1]
  402620:	ret
  402624:	add	x3, x3, #0x8
  402628:	cbz	x2, 40261c <ferror@plt+0x72c>
  40262c:	ldr	w4, [x3]
  402630:	cbz	w4, 40261c <ferror@plt+0x72c>
  402634:	tst	w4, w0
  402638:	b.eq	402624 <ferror@plt+0x734>  // b.none
  40263c:	ldr	w4, [x3, #4]
  402640:	strb	w4, [x1], #1
  402644:	sub	x2, x2, #0x1
  402648:	b	402624 <ferror@plt+0x734>
  40264c:	stp	x29, x30, [sp, #-96]!
  402650:	mov	x29, sp
  402654:	stp	x19, x20, [sp, #16]
  402658:	stp	x21, x22, [sp, #32]
  40265c:	mov	w20, w0
  402660:	cbz	w0, 402748 <ferror@plt+0x858>
  402664:	stp	x23, x24, [sp, #48]
  402668:	stp	x25, x26, [sp, #64]
  40266c:	stp	x27, x28, [sp, #80]
  402670:	mov	x24, x1
  402674:	and	w27, w2, #0xff
  402678:	mov	w22, #0x0                   	// #0
  40267c:	mov	w23, #0x1                   	// #1
  402680:	mov	w19, w23
  402684:	adrp	x25, 40e000 <argp_error@@Base+0x1e2c>
  402688:	add	x25, x25, #0x90
  40268c:	mov	w26, #0x0                   	// #0
  402690:	adrp	x28, 426000 <argp_error@@Base+0x19e2c>
  402694:	b	4026d0 <ferror@plt+0x7e0>
  402698:	ldr	x1, [x28, #1256]
  40269c:	mov	w0, w27
  4026a0:	bl	401b60 <putc@plt>
  4026a4:	add	w22, w22, #0x1
  4026a8:	mov	x1, x21
  4026ac:	mov	x0, x25
  4026b0:	bl	401e80 <printf@plt>
  4026b4:	add	w22, w22, w0
  4026b8:	bic	w20, w20, w19
  4026bc:	mov	w23, w26
  4026c0:	lsl	w19, w19, #1
  4026c4:	cmp	w20, #0x0
  4026c8:	ccmp	w19, #0x0, #0x4, ne  // ne = any
  4026cc:	b.eq	4026f4 <ferror@plt+0x804>  // b.none
  4026d0:	tst	w20, w19
  4026d4:	b.eq	4026c0 <ferror@plt+0x7d0>  // b.none
  4026d8:	mov	x1, x24
  4026dc:	mov	w0, w19
  4026e0:	bl	402448 <ferror@plt+0x558>
  4026e4:	mov	x21, x0
  4026e8:	cbz	x0, 4026c0 <ferror@plt+0x7d0>
  4026ec:	cbnz	w23, 4026a8 <ferror@plt+0x7b8>
  4026f0:	b	402698 <ferror@plt+0x7a8>
  4026f4:	cbz	w20, 402750 <ferror@plt+0x860>
  4026f8:	cbz	w23, 402730 <ferror@plt+0x840>
  4026fc:	mov	w1, w20
  402700:	adrp	x0, 40d000 <argp_error@@Base+0xe2c>
  402704:	add	x0, x0, #0xb80
  402708:	bl	401e80 <printf@plt>
  40270c:	add	w22, w22, w0
  402710:	ldp	x23, x24, [sp, #48]
  402714:	ldp	x25, x26, [sp, #64]
  402718:	ldp	x27, x28, [sp, #80]
  40271c:	mov	w0, w22
  402720:	ldp	x19, x20, [sp, #16]
  402724:	ldp	x21, x22, [sp, #32]
  402728:	ldp	x29, x30, [sp], #96
  40272c:	ret
  402730:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  402734:	ldr	x1, [x0, #1256]
  402738:	mov	w0, w27
  40273c:	bl	401b60 <putc@plt>
  402740:	add	w22, w22, #0x1
  402744:	b	4026fc <ferror@plt+0x80c>
  402748:	mov	w22, w0
  40274c:	b	40271c <ferror@plt+0x82c>
  402750:	ldp	x23, x24, [sp, #48]
  402754:	ldp	x25, x26, [sp, #64]
  402758:	ldp	x27, x28, [sp, #80]
  40275c:	b	40271c <ferror@plt+0x82c>
  402760:	stp	x29, x30, [sp, #-128]!
  402764:	mov	x29, sp
  402768:	stp	x19, x20, [sp, #16]
  40276c:	stp	x21, x22, [sp, #32]
  402770:	mov	w22, w0
  402774:	mov	x19, x1
  402778:	mov	x21, x2
  40277c:	stp	xzr, xzr, [sp, #64]
  402780:	stp	xzr, xzr, [sp, #80]
  402784:	stp	xzr, xzr, [sp, #96]
  402788:	mov	w1, #0x2                   	// #2
  40278c:	str	w1, [sp, #68]
  402790:	add	x3, sp, #0x38
  402794:	add	x2, sp, #0x40
  402798:	mov	x1, #0x0                   	// #0
  40279c:	mov	x0, x21
  4027a0:	bl	401dc0 <getaddrinfo@plt>
  4027a4:	cbnz	w0, 4027ec <ferror@plt+0x8fc>
  4027a8:	ldr	x7, [sp, #56]
  4027ac:	cbz	x7, 4027c4 <ferror@plt+0x8d4>
  4027b0:	ldr	w3, [x7, #4]
  4027b4:	cmp	w3, #0x2
  4027b8:	b.eq	4028a8 <ferror@plt+0x9b8>  // b.none
  4027bc:	ldr	x7, [x7, #40]
  4027c0:	cbnz	x7, 4027b0 <ferror@plt+0x8c0>
  4027c4:	mov	x3, x21
  4027c8:	adrp	x2, 40d000 <argp_error@@Base+0xe2c>
  4027cc:	add	x2, x2, #0xcd8
  4027d0:	mov	w1, #0x0                   	// #0
  4027d4:	mov	w0, #0x0                   	// #0
  4027d8:	bl	401b30 <error@plt>
  4027dc:	ldr	x0, [sp, #56]
  4027e0:	bl	401ad0 <freeaddrinfo@plt>
  4027e4:	mov	w0, #0xffffffff            	// #-1
  4027e8:	b	402910 <ferror@plt+0xa20>
  4027ec:	bl	401ac0 <gai_strerror@plt>
  4027f0:	mov	x4, x0
  4027f4:	mov	x3, x21
  4027f8:	adrp	x2, 40d000 <argp_error@@Base+0xe2c>
  4027fc:	add	x2, x2, #0xc58
  402800:	mov	w1, #0x0                   	// #0
  402804:	mov	w0, #0x0                   	// #0
  402808:	bl	401b30 <error@plt>
  40280c:	mov	w0, #0xffffffff            	// #-1
  402810:	b	402910 <ferror@plt+0xa20>
  402814:	mov	w0, w20
  402818:	bl	401ac0 <gai_strerror@plt>
  40281c:	mov	x4, x0
  402820:	mov	x3, x21
  402824:	adrp	x2, 40d000 <argp_error@@Base+0xe2c>
  402828:	add	x2, x2, #0xc58
  40282c:	mov	w1, #0x0                   	// #0
  402830:	mov	w0, #0x0                   	// #0
  402834:	bl	401b30 <error@plt>
  402838:	mov	w0, #0xffffffff            	// #-1
  40283c:	b	402910 <ferror@plt+0xa20>
  402840:	add	x3, sp, #0x70
  402844:	adrp	x2, 40d000 <argp_error@@Base+0xe2c>
  402848:	add	x2, x2, #0xc70
  40284c:	mov	w1, #0x0                   	// #0
  402850:	bl	401b30 <error@plt>
  402854:	mov	w0, #0xffffffff            	// #-1
  402858:	b	402910 <ferror@plt+0xa20>
  40285c:	bl	401ea0 <__errno_location@plt>
  402860:	adrp	x3, 40d000 <argp_error@@Base+0xe2c>
  402864:	add	x3, x3, #0xc90
  402868:	adrp	x2, 40d000 <argp_error@@Base+0xe2c>
  40286c:	add	x2, x2, #0xca0
  402870:	ldr	w1, [x0]
  402874:	mov	w0, #0x0                   	// #0
  402878:	bl	401b30 <error@plt>
  40287c:	mov	w0, #0xffffffff            	// #-1
  402880:	b	402910 <ferror@plt+0xa20>
  402884:	ldr	w0, [x19, #20]
  402888:	bl	401b90 <inet_ntoa@plt>
  40288c:	mov	x2, x0
  402890:	mov	x1, x19
  402894:	adrp	x0, 40d000 <argp_error@@Base+0xe2c>
  402898:	add	x0, x0, #0xcb0
  40289c:	bl	401e80 <printf@plt>
  4028a0:	mov	w0, w20
  4028a4:	b	402910 <ferror@plt+0xa20>
  4028a8:	mov	w6, #0x1                   	// #1
  4028ac:	mov	w5, #0x0                   	// #0
  4028b0:	mov	x4, #0x0                   	// #0
  4028b4:	mov	w3, #0x10                  	// #16
  4028b8:	add	x2, sp, #0x70
  4028bc:	ldr	w1, [x7, #16]
  4028c0:	ldr	x0, [x7, #24]
  4028c4:	bl	401b50 <getnameinfo@plt>
  4028c8:	mov	w20, w0
  4028cc:	ldr	x0, [sp, #56]
  4028d0:	bl	401ad0 <freeaddrinfo@plt>
  4028d4:	cbnz	w20, 402814 <ferror@plt+0x924>
  4028d8:	mov	w0, #0x2                   	// #2
  4028dc:	strh	w0, [x19, #16]
  4028e0:	add	x1, x19, #0x14
  4028e4:	add	x0, sp, #0x70
  4028e8:	bl	401de0 <inet_aton@plt>
  4028ec:	cbz	w0, 402840 <ferror@plt+0x950>
  4028f0:	mov	x2, x19
  4028f4:	mov	w1, #0x8916                	// #35094
  4028f8:	mov	w0, w22
  4028fc:	bl	408f90 <argp_parse@@Base+0x1570>
  402900:	tbnz	w0, #31, 40285c <ferror@plt+0x96c>
  402904:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  402908:	ldr	w0, [x0, #1576]
  40290c:	cbnz	w0, 402884 <ferror@plt+0x994>
  402910:	ldp	x19, x20, [sp, #16]
  402914:	ldp	x21, x22, [sp, #32]
  402918:	ldp	x29, x30, [sp], #128
  40291c:	ret
  402920:	stp	x29, x30, [sp, #-48]!
  402924:	mov	x29, sp
  402928:	stp	x19, x20, [sp, #16]
  40292c:	str	x21, [sp, #32]
  402930:	mov	w21, w0
  402934:	mov	x19, x1
  402938:	mov	x20, x2
  40293c:	mov	w0, #0x2                   	// #2
  402940:	strh	w0, [x1, #16]
  402944:	add	x1, x1, #0x14
  402948:	mov	x0, x2
  40294c:	bl	401de0 <inet_aton@plt>
  402950:	cbz	w0, 402984 <ferror@plt+0xa94>
  402954:	mov	x2, x19
  402958:	mov	w1, #0x891c                	// #35100
  40295c:	mov	w0, w21
  402960:	bl	408f90 <argp_parse@@Base+0x1570>
  402964:	tbnz	w0, #31, 4029a0 <ferror@plt+0xab0>
  402968:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  40296c:	ldr	w0, [x0, #1576]
  402970:	cbnz	w0, 4029c8 <ferror@plt+0xad8>
  402974:	ldp	x19, x20, [sp, #16]
  402978:	ldr	x21, [sp, #32]
  40297c:	ldp	x29, x30, [sp], #48
  402980:	ret
  402984:	mov	x3, x20
  402988:	adrp	x2, 40d000 <argp_error@@Base+0xe2c>
  40298c:	add	x2, x2, #0xc70
  402990:	mov	w1, #0x0                   	// #0
  402994:	bl	401b30 <error@plt>
  402998:	mov	w0, #0xffffffff            	// #-1
  40299c:	b	402974 <ferror@plt+0xa84>
  4029a0:	bl	401ea0 <__errno_location@plt>
  4029a4:	adrp	x3, 40d000 <argp_error@@Base+0xe2c>
  4029a8:	add	x3, x3, #0xd00
  4029ac:	adrp	x2, 40d000 <argp_error@@Base+0xe2c>
  4029b0:	add	x2, x2, #0xca0
  4029b4:	ldr	w1, [x0]
  4029b8:	mov	w0, #0x0                   	// #0
  4029bc:	bl	401b30 <error@plt>
  4029c0:	mov	w0, #0xffffffff            	// #-1
  4029c4:	b	402974 <ferror@plt+0xa84>
  4029c8:	ldr	w0, [x19, #20]
  4029cc:	bl	401b90 <inet_ntoa@plt>
  4029d0:	mov	x2, x0
  4029d4:	mov	x1, x19
  4029d8:	adrp	x0, 40d000 <argp_error@@Base+0xe2c>
  4029dc:	add	x0, x0, #0xd10
  4029e0:	bl	401e80 <printf@plt>
  4029e4:	mov	w0, #0x0                   	// #0
  4029e8:	b	402974 <ferror@plt+0xa84>
  4029ec:	stp	x29, x30, [sp, #-48]!
  4029f0:	mov	x29, sp
  4029f4:	stp	x19, x20, [sp, #16]
  4029f8:	str	x21, [sp, #32]
  4029fc:	mov	w21, w0
  402a00:	mov	x19, x1
  402a04:	mov	x20, x2
  402a08:	mov	w0, #0x2                   	// #2
  402a0c:	strh	w0, [x1, #16]
  402a10:	add	x1, x1, #0x14
  402a14:	mov	x0, x2
  402a18:	bl	401de0 <inet_aton@plt>
  402a1c:	cbz	w0, 402a50 <ferror@plt+0xb60>
  402a20:	mov	x2, x19
  402a24:	mov	w1, #0x8918                	// #35096
  402a28:	mov	w0, w21
  402a2c:	bl	408f90 <argp_parse@@Base+0x1570>
  402a30:	tbnz	w0, #31, 402a6c <ferror@plt+0xb7c>
  402a34:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  402a38:	ldr	w0, [x0, #1576]
  402a3c:	cbnz	w0, 402a94 <ferror@plt+0xba4>
  402a40:	ldp	x19, x20, [sp, #16]
  402a44:	ldr	x21, [sp, #32]
  402a48:	ldp	x29, x30, [sp], #48
  402a4c:	ret
  402a50:	mov	x3, x20
  402a54:	adrp	x2, 40d000 <argp_error@@Base+0xe2c>
  402a58:	add	x2, x2, #0xc70
  402a5c:	mov	w1, #0x0                   	// #0
  402a60:	bl	401b30 <error@plt>
  402a64:	mov	w0, #0xffffffff            	// #-1
  402a68:	b	402a40 <ferror@plt+0xb50>
  402a6c:	bl	401ea0 <__errno_location@plt>
  402a70:	adrp	x3, 40d000 <argp_error@@Base+0xe2c>
  402a74:	add	x3, x3, #0xd38
  402a78:	adrp	x2, 40d000 <argp_error@@Base+0xe2c>
  402a7c:	add	x2, x2, #0xca0
  402a80:	ldr	w1, [x0]
  402a84:	mov	w0, #0x0                   	// #0
  402a88:	bl	401b30 <error@plt>
  402a8c:	mov	w0, #0xffffffff            	// #-1
  402a90:	b	402a40 <ferror@plt+0xb50>
  402a94:	ldr	w0, [x19, #20]
  402a98:	bl	401b90 <inet_ntoa@plt>
  402a9c:	mov	x2, x0
  402aa0:	mov	x1, x19
  402aa4:	adrp	x0, 40d000 <argp_error@@Base+0xe2c>
  402aa8:	add	x0, x0, #0xd48
  402aac:	bl	401e80 <printf@plt>
  402ab0:	mov	w0, #0x0                   	// #0
  402ab4:	b	402a40 <ferror@plt+0xb50>
  402ab8:	stp	x29, x30, [sp, #-48]!
  402abc:	mov	x29, sp
  402ac0:	stp	x19, x20, [sp, #16]
  402ac4:	str	x21, [sp, #32]
  402ac8:	mov	w21, w0
  402acc:	mov	x19, x1
  402ad0:	mov	x20, x2
  402ad4:	mov	w0, #0x2                   	// #2
  402ad8:	strh	w0, [x1, #16]
  402adc:	add	x1, x1, #0x14
  402ae0:	mov	x0, x2
  402ae4:	bl	401de0 <inet_aton@plt>
  402ae8:	cbz	w0, 402b1c <ferror@plt+0xc2c>
  402aec:	mov	x2, x19
  402af0:	mov	w1, #0x891a                	// #35098
  402af4:	mov	w0, w21
  402af8:	bl	408f90 <argp_parse@@Base+0x1570>
  402afc:	tbnz	w0, #31, 402b38 <ferror@plt+0xc48>
  402b00:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  402b04:	ldr	w0, [x0, #1576]
  402b08:	cbnz	w0, 402b60 <ferror@plt+0xc70>
  402b0c:	ldp	x19, x20, [sp, #16]
  402b10:	ldr	x21, [sp, #32]
  402b14:	ldp	x29, x30, [sp], #48
  402b18:	ret
  402b1c:	mov	x3, x20
  402b20:	adrp	x2, 40d000 <argp_error@@Base+0xe2c>
  402b24:	add	x2, x2, #0xc70
  402b28:	mov	w1, #0x0                   	// #0
  402b2c:	bl	401b30 <error@plt>
  402b30:	mov	w0, #0xffffffff            	// #-1
  402b34:	b	402b0c <ferror@plt+0xc1c>
  402b38:	bl	401ea0 <__errno_location@plt>
  402b3c:	adrp	x3, 40d000 <argp_error@@Base+0xe2c>
  402b40:	add	x3, x3, #0xd78
  402b44:	adrp	x2, 40d000 <argp_error@@Base+0xe2c>
  402b48:	add	x2, x2, #0xca0
  402b4c:	ldr	w1, [x0]
  402b50:	mov	w0, #0x0                   	// #0
  402b54:	bl	401b30 <error@plt>
  402b58:	mov	w0, #0xffffffff            	// #-1
  402b5c:	b	402b0c <ferror@plt+0xc1c>
  402b60:	ldr	w0, [x19, #20]
  402b64:	bl	401b90 <inet_ntoa@plt>
  402b68:	mov	x2, x0
  402b6c:	mov	x1, x19
  402b70:	adrp	x0, 40d000 <argp_error@@Base+0xe2c>
  402b74:	add	x0, x0, #0xd88
  402b78:	bl	401e80 <printf@plt>
  402b7c:	mov	w0, #0x0                   	// #0
  402b80:	b	402b0c <ferror@plt+0xc1c>
  402b84:	stp	x29, x30, [sp, #-32]!
  402b88:	mov	x29, sp
  402b8c:	str	x19, [sp, #16]
  402b90:	mov	x19, x1
  402b94:	str	w2, [x1, #16]
  402b98:	mov	x2, x1
  402b9c:	mov	w1, #0x8922                	// #35106
  402ba0:	bl	408f90 <argp_parse@@Base+0x1570>
  402ba4:	tbnz	w0, #31, 402bc0 <ferror@plt+0xcd0>
  402ba8:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  402bac:	ldr	w0, [x0, #1576]
  402bb0:	cbnz	w0, 402be0 <ferror@plt+0xcf0>
  402bb4:	ldr	x19, [sp, #16]
  402bb8:	ldp	x29, x30, [sp], #32
  402bbc:	ret
  402bc0:	bl	401ea0 <__errno_location@plt>
  402bc4:	adrp	x2, 40d000 <argp_error@@Base+0xe2c>
  402bc8:	add	x2, x2, #0xdb8
  402bcc:	ldr	w1, [x0]
  402bd0:	mov	w0, #0x0                   	// #0
  402bd4:	bl	401b30 <error@plt>
  402bd8:	mov	w0, #0xffffffff            	// #-1
  402bdc:	b	402bb4 <ferror@plt+0xcc4>
  402be0:	ldr	w2, [x19, #16]
  402be4:	mov	x1, x19
  402be8:	adrp	x0, 40d000 <argp_error@@Base+0xe2c>
  402bec:	add	x0, x0, #0xdd0
  402bf0:	bl	401e80 <printf@plt>
  402bf4:	mov	w0, #0x0                   	// #0
  402bf8:	b	402bb4 <ferror@plt+0xcc4>
  402bfc:	stp	x29, x30, [sp, #-32]!
  402c00:	mov	x29, sp
  402c04:	str	x19, [sp, #16]
  402c08:	mov	x19, x1
  402c0c:	str	w2, [x1, #16]
  402c10:	mov	x2, x1
  402c14:	mov	w1, #0x891e                	// #35102
  402c18:	bl	408f90 <argp_parse@@Base+0x1570>
  402c1c:	tbnz	w0, #31, 402c38 <ferror@plt+0xd48>
  402c20:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  402c24:	ldr	w0, [x0, #1576]
  402c28:	cbnz	w0, 402c58 <ferror@plt+0xd68>
  402c2c:	ldr	x19, [sp, #16]
  402c30:	ldp	x29, x30, [sp], #32
  402c34:	ret
  402c38:	bl	401ea0 <__errno_location@plt>
  402c3c:	adrp	x2, 40d000 <argp_error@@Base+0xe2c>
  402c40:	add	x2, x2, #0xdf0
  402c44:	ldr	w1, [x0]
  402c48:	mov	w0, #0x0                   	// #0
  402c4c:	bl	401b30 <error@plt>
  402c50:	mov	w0, #0xffffffff            	// #-1
  402c54:	b	402c2c <ferror@plt+0xd3c>
  402c58:	ldr	w2, [x19, #16]
  402c5c:	mov	x1, x19
  402c60:	adrp	x0, 40d000 <argp_error@@Base+0xe2c>
  402c64:	add	x0, x0, #0xe08
  402c68:	bl	401e80 <printf@plt>
  402c6c:	mov	w0, #0x0                   	// #0
  402c70:	b	402c2c <ferror@plt+0xd3c>
  402c74:	stp	x29, x30, [sp, #-96]!
  402c78:	mov	x29, sp
  402c7c:	stp	x19, x20, [sp, #16]
  402c80:	stp	x21, x22, [sp, #32]
  402c84:	mov	w22, w0
  402c88:	mov	x19, x1
  402c8c:	mov	w21, w2
  402c90:	mov	w20, w3
  402c94:	ldp	x2, x3, [x1]
  402c98:	stp	x2, x3, [sp, #56]
  402c9c:	ldp	x2, x3, [x1, #16]
  402ca0:	stp	x2, x3, [sp, #72]
  402ca4:	ldr	x1, [x1, #32]
  402ca8:	str	x1, [sp, #88]
  402cac:	add	x2, sp, #0x38
  402cb0:	mov	w1, #0x8913                	// #35091
  402cb4:	bl	408f90 <argp_parse@@Base+0x1570>
  402cb8:	tbnz	w0, #31, 402cf8 <ferror@plt+0xe08>
  402cbc:	ldrh	w2, [sp, #72]
  402cc0:	orr	w21, w21, w2
  402cc4:	bic	w20, w21, w20
  402cc8:	strh	w20, [x19, #16]
  402ccc:	mov	x2, x19
  402cd0:	mov	w1, #0x8914                	// #35092
  402cd4:	mov	w0, w22
  402cd8:	bl	408f90 <argp_parse@@Base+0x1570>
  402cdc:	mov	w1, w0
  402ce0:	mov	w0, #0x0                   	// #0
  402ce4:	tbnz	w1, #31, 402d18 <ferror@plt+0xe28>
  402ce8:	ldp	x19, x20, [sp, #16]
  402cec:	ldp	x21, x22, [sp, #32]
  402cf0:	ldp	x29, x30, [sp], #96
  402cf4:	ret
  402cf8:	bl	401ea0 <__errno_location@plt>
  402cfc:	adrp	x2, 40d000 <argp_error@@Base+0xe2c>
  402d00:	add	x2, x2, #0xe30
  402d04:	ldr	w1, [x0]
  402d08:	mov	w0, #0x0                   	// #0
  402d0c:	bl	401b30 <error@plt>
  402d10:	mov	w0, #0xffffffff            	// #-1
  402d14:	b	402ce8 <ferror@plt+0xdf8>
  402d18:	bl	401ea0 <__errno_location@plt>
  402d1c:	adrp	x2, 40d000 <argp_error@@Base+0xe2c>
  402d20:	add	x2, x2, #0xe48
  402d24:	ldr	w1, [x0]
  402d28:	mov	w0, #0x0                   	// #0
  402d2c:	bl	401b30 <error@plt>
  402d30:	mov	w0, #0xffffffff            	// #-1
  402d34:	b	402ce8 <ferror@plt+0xdf8>
  402d38:	stp	x29, x30, [sp, #-80]!
  402d3c:	mov	x29, sp
  402d40:	stp	x19, x20, [sp, #16]
  402d44:	mov	w20, w0
  402d48:	mov	x19, x1
  402d4c:	stp	xzr, xzr, [sp, #40]
  402d50:	stp	xzr, xzr, [sp, #56]
  402d54:	str	xzr, [sp, #72]
  402d58:	mov	x2, #0x10                  	// #16
  402d5c:	ldr	x1, [x1]
  402d60:	add	x0, sp, #0x28
  402d64:	bl	401e60 <strncpy@plt>
  402d68:	strb	wzr, [sp, #55]
  402d6c:	ldr	w0, [x19, #8]
  402d70:	tbnz	w0, #3, 402dc4 <ferror@plt+0xed4>
  402d74:	ldr	w0, [x19, #8]
  402d78:	tbnz	w0, #4, 402ddc <ferror@plt+0xeec>
  402d7c:	ldr	w0, [x19, #8]
  402d80:	tbnz	w0, #5, 402df4 <ferror@plt+0xf04>
  402d84:	ldr	w0, [x19, #8]
  402d88:	tbnz	w0, #6, 402e0c <ferror@plt+0xf1c>
  402d8c:	ldr	w0, [x19, #8]
  402d90:	tbnz	w0, #7, 402e24 <ferror@plt+0xf34>
  402d94:	ldr	w0, [x19, #8]
  402d98:	tbnz	w0, #8, 402e3c <ferror@plt+0xf4c>
  402d9c:	ldr	w0, [x19, #8]
  402da0:	tbnz	w0, #0, 402e54 <ferror@plt+0xf64>
  402da4:	ldr	x0, [x19, #80]
  402da8:	cbnz	x0, 402e6c <ferror@plt+0xf7c>
  402dac:	ldr	w1, [x19, #8]
  402db0:	and	w0, w1, #0x2
  402db4:	tbnz	w1, #1, 402e88 <ferror@plt+0xf98>
  402db8:	ldp	x19, x20, [sp, #16]
  402dbc:	ldp	x29, x30, [sp], #80
  402dc0:	ret
  402dc4:	ldr	x2, [x19, #40]
  402dc8:	add	x1, sp, #0x28
  402dcc:	mov	w0, w20
  402dd0:	bl	402760 <ferror@plt+0x870>
  402dd4:	cbnz	w0, 402db8 <ferror@plt+0xec8>
  402dd8:	b	402d74 <ferror@plt+0xe84>
  402ddc:	ldr	x2, [x19, #48]
  402de0:	add	x1, sp, #0x28
  402de4:	mov	w0, w20
  402de8:	bl	402920 <ferror@plt+0xa30>
  402dec:	cbnz	w0, 402db8 <ferror@plt+0xec8>
  402df0:	b	402d7c <ferror@plt+0xe8c>
  402df4:	ldr	x2, [x19, #56]
  402df8:	add	x1, sp, #0x28
  402dfc:	mov	w0, w20
  402e00:	bl	4029ec <ferror@plt+0xafc>
  402e04:	cbz	w0, 402d84 <ferror@plt+0xe94>
  402e08:	b	402db8 <ferror@plt+0xec8>
  402e0c:	ldr	x2, [x19, #64]
  402e10:	add	x1, sp, #0x28
  402e14:	mov	w0, w20
  402e18:	bl	402ab8 <ferror@plt+0xbc8>
  402e1c:	cbz	w0, 402d8c <ferror@plt+0xe9c>
  402e20:	b	402db8 <ferror@plt+0xec8>
  402e24:	ldr	w2, [x19, #72]
  402e28:	add	x1, sp, #0x28
  402e2c:	mov	w0, w20
  402e30:	bl	402b84 <ferror@plt+0xc94>
  402e34:	cbz	w0, 402d94 <ferror@plt+0xea4>
  402e38:	b	402db8 <ferror@plt+0xec8>
  402e3c:	ldr	w2, [x19, #76]
  402e40:	add	x1, sp, #0x28
  402e44:	mov	w0, w20
  402e48:	bl	402bfc <ferror@plt+0xd0c>
  402e4c:	cbz	w0, 402d9c <ferror@plt+0xeac>
  402e50:	b	402db8 <ferror@plt+0xec8>
  402e54:	ldr	x2, [x19, #16]
  402e58:	add	x1, sp, #0x28
  402e5c:	mov	w0, w20
  402e60:	bl	407420 <ferror@plt+0x5530>
  402e64:	cbz	w0, 402da4 <ferror@plt+0xeb4>
  402e68:	b	402db8 <ferror@plt+0xec8>
  402e6c:	ldr	w3, [x19, #84]
  402e70:	ldr	w2, [x19, #80]
  402e74:	add	x1, sp, #0x28
  402e78:	mov	w0, w20
  402e7c:	bl	402c74 <ferror@plt+0xd84>
  402e80:	cbz	w0, 402dac <ferror@plt+0xebc>
  402e84:	b	402db8 <ferror@plt+0xec8>
  402e88:	ldr	x3, [x19, #24]
  402e8c:	add	x2, sp, #0x28
  402e90:	ldr	x1, [x19]
  402e94:	mov	w0, w20
  402e98:	bl	4058d0 <ferror@plt+0x39e0>
  402e9c:	mov	w0, #0x0                   	// #0
  402ea0:	b	402db8 <ferror@plt+0xec8>
  402ea4:	stp	x29, x30, [sp, #-16]!
  402ea8:	mov	x29, sp
  402eac:	ldr	x1, [x1]
  402eb0:	ldr	x0, [x0]
  402eb4:	bl	401cf0 <strcmp@plt>
  402eb8:	ldp	x29, x30, [sp], #16
  402ebc:	ret
  402ec0:	mov	w2, #0x4                   	// #4
  402ec4:	movk	w2, #0x200, lsl #16
  402ec8:	cmp	w0, w2
  402ecc:	b.eq	402ed8 <ferror@plt+0xfe8>  // b.none
  402ed0:	mov	x0, x1
  402ed4:	ret
  402ed8:	stp	x29, x30, [sp, #-16]!
  402edc:	mov	x29, sp
  402ee0:	adrp	x0, 40d000 <argp_error@@Base+0xe2c>
  402ee4:	add	x0, x0, #0xe60
  402ee8:	bl	402208 <ferror@plt+0x318>
  402eec:	ldp	x29, x30, [sp], #16
  402ef0:	ret
  402ef4:	stp	x29, x30, [sp, #-32]!
  402ef8:	mov	x29, sp
  402efc:	stp	x19, x20, [sp, #16]
  402f00:	mov	x20, x0
  402f04:	adrp	x0, 425000 <argp_error@@Base+0x18e2c>
  402f08:	ldr	x0, [x0, #1024]
  402f0c:	cbz	x0, 402f40 <ferror@plt+0x1050>
  402f10:	adrp	x19, 425000 <argp_error@@Base+0x18e2c>
  402f14:	add	x19, x19, #0x400
  402f18:	mov	x1, x20
  402f1c:	bl	401cf0 <strcmp@plt>
  402f20:	cbz	w0, 402f30 <ferror@plt+0x1040>
  402f24:	ldr	x0, [x19, #24]!
  402f28:	cbnz	x0, 402f18 <ferror@plt+0x1028>
  402f2c:	mov	x19, x0
  402f30:	mov	x0, x19
  402f34:	ldp	x19, x20, [sp, #16]
  402f38:	ldp	x29, x30, [sp], #32
  402f3c:	ret
  402f40:	mov	x19, x0
  402f44:	b	402f30 <ferror@plt+0x1040>
  402f48:	stp	x29, x30, [sp, #-32]!
  402f4c:	mov	x29, sp
  402f50:	stp	x19, x20, [sp, #16]
  402f54:	mov	x19, x0
  402f58:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  402f5c:	mov	w1, #0x1                   	// #1
  402f60:	str	w1, [x0, #1572]
  402f64:	adrp	x20, 426000 <argp_error@@Base+0x19e2c>
  402f68:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  402f6c:	ldr	w2, [x0, #1552]
  402f70:	add	w2, w2, w1
  402f74:	str	w2, [x0, #1552]
  402f78:	sxtw	x0, w2
  402f7c:	add	x1, x0, w2, sxtw #1
  402f80:	lsl	x1, x1, #2
  402f84:	sub	x1, x1, x0
  402f88:	lsl	x1, x1, #3
  402f8c:	ldr	x0, [x20, #1536]
  402f90:	bl	401c70 <realloc@plt>
  402f94:	str	x0, [x20, #1536]
  402f98:	cbz	x0, 40300c <ferror@plt+0x111c>
  402f9c:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  402fa0:	ldrsw	x0, [x0, #1552]
  402fa4:	add	x1, x0, x0, lsl #1
  402fa8:	lsl	x1, x1, #2
  402fac:	sub	x1, x1, x0
  402fb0:	lsl	x1, x1, #3
  402fb4:	sub	x1, x1, #0x58
  402fb8:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  402fbc:	ldr	x3, [x0, #1536]
  402fc0:	add	x0, x3, x1
  402fc4:	adrp	x2, 40f000 <argp_error@@Base+0x2e2c>
  402fc8:	add	x2, x2, #0x3d8
  402fcc:	ldp	x4, x5, [x2]
  402fd0:	stp	x4, x5, [x0]
  402fd4:	ldp	x4, x5, [x2, #16]
  402fd8:	stp	x4, x5, [x0, #16]
  402fdc:	ldp	x4, x5, [x2, #32]
  402fe0:	stp	x4, x5, [x0, #32]
  402fe4:	ldp	x4, x5, [x2, #48]
  402fe8:	stp	x4, x5, [x0, #48]
  402fec:	ldp	x4, x5, [x2, #64]
  402ff0:	stp	x4, x5, [x0, #64]
  402ff4:	ldr	x2, [x2, #80]
  402ff8:	str	x2, [x0, #80]
  402ffc:	str	x19, [x3, x1]
  403000:	ldp	x19, x20, [sp, #16]
  403004:	ldp	x29, x30, [sp], #32
  403008:	ret
  40300c:	bl	401ea0 <__errno_location@plt>
  403010:	adrp	x2, 40d000 <argp_error@@Base+0xe2c>
  403014:	add	x2, x2, #0xe78
  403018:	ldr	w1, [x0]
  40301c:	mov	w0, #0x1                   	// #1
  403020:	bl	401b30 <error@plt>
  403024:	b	402f9c <ferror@plt+0x10ac>
  403028:	stp	x29, x30, [sp, #-32]!
  40302c:	mov	x29, sp
  403030:	stp	x19, x20, [sp, #16]
  403034:	mov	x19, x0
  403038:	mov	x20, x1
  40303c:	cbz	x0, 403064 <ferror@plt+0x1174>
  403040:	ldr	w0, [x19, #8]
  403044:	tbnz	w0, #3, 403088 <ferror@plt+0x1198>
  403048:	str	x20, [x19, #40]
  40304c:	ldr	w0, [x19, #8]
  403050:	orr	w0, w0, #0x8
  403054:	str	w0, [x19, #8]
  403058:	ldp	x19, x20, [sp, #16]
  40305c:	ldp	x29, x30, [sp], #32
  403060:	ret
  403064:	mov	x4, x1
  403068:	adrp	x3, 40d000 <argp_error@@Base+0xe2c>
  40306c:	add	x3, x3, #0xea8
  403070:	adrp	x2, 40d000 <argp_error@@Base+0xe2c>
  403074:	add	x2, x2, #0xeb0
  403078:	mov	w1, #0x0                   	// #0
  40307c:	mov	w0, #0x1                   	// #1
  403080:	bl	401b30 <error@plt>
  403084:	b	403040 <ferror@plt+0x1150>
  403088:	ldr	x4, [x19]
  40308c:	adrp	x3, 40d000 <argp_error@@Base+0xe2c>
  403090:	add	x3, x3, #0xea8
  403094:	adrp	x2, 40d000 <argp_error@@Base+0xe2c>
  403098:	add	x2, x2, #0xed8
  40309c:	mov	w1, #0x0                   	// #0
  4030a0:	mov	w0, #0x1                   	// #1
  4030a4:	bl	401b30 <error@plt>
  4030a8:	b	403048 <ferror@plt+0x1158>
  4030ac:	stp	x29, x30, [sp, #-32]!
  4030b0:	mov	x29, sp
  4030b4:	stp	x19, x20, [sp, #16]
  4030b8:	mov	x19, x0
  4030bc:	mov	x20, x1
  4030c0:	cbz	x0, 4030e8 <ferror@plt+0x11f8>
  4030c4:	ldr	w0, [x19, #8]
  4030c8:	tbnz	w0, #4, 40310c <ferror@plt+0x121c>
  4030cc:	str	x20, [x19, #48]
  4030d0:	ldr	w0, [x19, #8]
  4030d4:	orr	w0, w0, #0x10
  4030d8:	str	w0, [x19, #8]
  4030dc:	ldp	x19, x20, [sp, #16]
  4030e0:	ldp	x29, x30, [sp], #32
  4030e4:	ret
  4030e8:	mov	x4, x1
  4030ec:	adrp	x3, 40d000 <argp_error@@Base+0xe2c>
  4030f0:	add	x3, x3, #0xf00
  4030f4:	adrp	x2, 40d000 <argp_error@@Base+0xe2c>
  4030f8:	add	x2, x2, #0xeb0
  4030fc:	mov	w1, #0x0                   	// #0
  403100:	mov	w0, #0x1                   	// #1
  403104:	bl	401b30 <error@plt>
  403108:	b	4030c4 <ferror@plt+0x11d4>
  40310c:	ldr	x4, [x19]
  403110:	adrp	x3, 40d000 <argp_error@@Base+0xe2c>
  403114:	add	x3, x3, #0xf00
  403118:	adrp	x2, 40d000 <argp_error@@Base+0xe2c>
  40311c:	add	x2, x2, #0xed8
  403120:	mov	w1, #0x0                   	// #0
  403124:	mov	w0, #0x1                   	// #1
  403128:	bl	401b30 <error@plt>
  40312c:	b	4030cc <ferror@plt+0x11dc>
  403130:	stp	x29, x30, [sp, #-32]!
  403134:	mov	x29, sp
  403138:	stp	x19, x20, [sp, #16]
  40313c:	mov	x19, x0
  403140:	mov	x20, x1
  403144:	cbz	x0, 40316c <ferror@plt+0x127c>
  403148:	ldr	w0, [x19, #8]
  40314c:	tbnz	w0, #5, 403190 <ferror@plt+0x12a0>
  403150:	str	x20, [x19, #56]
  403154:	ldr	w0, [x19, #8]
  403158:	orr	w0, w0, #0x20
  40315c:	str	w0, [x19, #8]
  403160:	ldp	x19, x20, [sp, #16]
  403164:	ldp	x29, x30, [sp], #32
  403168:	ret
  40316c:	mov	x4, x1
  403170:	adrp	x3, 40d000 <argp_error@@Base+0xe2c>
  403174:	add	x3, x3, #0xf08
  403178:	adrp	x2, 40d000 <argp_error@@Base+0xe2c>
  40317c:	add	x2, x2, #0xeb0
  403180:	mov	w1, #0x0                   	// #0
  403184:	mov	w0, #0x1                   	// #1
  403188:	bl	401b30 <error@plt>
  40318c:	b	403148 <ferror@plt+0x1258>
  403190:	ldr	x4, [x19]
  403194:	adrp	x3, 40d000 <argp_error@@Base+0xe2c>
  403198:	add	x3, x3, #0xf08
  40319c:	adrp	x2, 40d000 <argp_error@@Base+0xe2c>
  4031a0:	add	x2, x2, #0xed8
  4031a4:	mov	w1, #0x0                   	// #0
  4031a8:	mov	w0, #0x1                   	// #1
  4031ac:	bl	401b30 <error@plt>
  4031b0:	b	403150 <ferror@plt+0x1260>
  4031b4:	stp	x29, x30, [sp, #-32]!
  4031b8:	mov	x29, sp
  4031bc:	stp	x19, x20, [sp, #16]
  4031c0:	mov	x19, x0
  4031c4:	mov	x20, x1
  4031c8:	cbz	x0, 4031f0 <ferror@plt+0x1300>
  4031cc:	ldr	w0, [x19, #8]
  4031d0:	tbnz	w0, #6, 403214 <ferror@plt+0x1324>
  4031d4:	str	x20, [x19, #64]
  4031d8:	ldr	w0, [x19, #8]
  4031dc:	orr	w0, w0, #0x40
  4031e0:	str	w0, [x19, #8]
  4031e4:	ldp	x19, x20, [sp, #16]
  4031e8:	ldp	x29, x30, [sp], #32
  4031ec:	ret
  4031f0:	mov	x4, x1
  4031f4:	adrp	x3, 40d000 <argp_error@@Base+0xe2c>
  4031f8:	add	x3, x3, #0xf28
  4031fc:	adrp	x2, 40d000 <argp_error@@Base+0xe2c>
  403200:	add	x2, x2, #0xeb0
  403204:	mov	w1, #0x0                   	// #0
  403208:	mov	w0, #0x1                   	// #1
  40320c:	bl	401b30 <error@plt>
  403210:	b	4031cc <ferror@plt+0x12dc>
  403214:	ldr	x4, [x19]
  403218:	adrp	x3, 40d000 <argp_error@@Base+0xe2c>
  40321c:	add	x3, x3, #0xf28
  403220:	adrp	x2, 40d000 <argp_error@@Base+0xe2c>
  403224:	add	x2, x2, #0xed8
  403228:	mov	w1, #0x0                   	// #0
  40322c:	mov	w0, #0x1                   	// #1
  403230:	bl	401b30 <error@plt>
  403234:	b	4031d4 <ferror@plt+0x12e4>
  403238:	stp	x29, x30, [sp, #-48]!
  40323c:	mov	x29, sp
  403240:	stp	x19, x20, [sp, #16]
  403244:	mov	x19, x0
  403248:	mov	x20, x1
  40324c:	cbz	x0, 4032b4 <ferror@plt+0x13c4>
  403250:	ldr	w0, [x19, #8]
  403254:	tbnz	w0, #7, 4032d8 <ferror@plt+0x13e8>
  403258:	mov	w2, #0x0                   	// #0
  40325c:	add	x1, sp, #0x28
  403260:	mov	x0, x20
  403264:	bl	401d10 <strtol@plt>
  403268:	str	w0, [x19, #72]
  40326c:	ldrb	w0, [x20]
  403270:	cbz	w0, 403280 <ferror@plt+0x1390>
  403274:	ldr	x0, [sp, #40]
  403278:	ldrb	w0, [x0]
  40327c:	cbz	w0, 40329c <ferror@plt+0x13ac>
  403280:	ldr	x4, [x19]
  403284:	mov	x3, x20
  403288:	adrp	x2, 40d000 <argp_error@@Base+0xe2c>
  40328c:	add	x2, x2, #0xf78
  403290:	mov	w1, #0x0                   	// #0
  403294:	mov	w0, #0x1                   	// #1
  403298:	bl	401b30 <error@plt>
  40329c:	ldr	w0, [x19, #8]
  4032a0:	orr	w0, w0, #0x80
  4032a4:	str	w0, [x19, #8]
  4032a8:	ldp	x19, x20, [sp, #16]
  4032ac:	ldp	x29, x30, [sp], #48
  4032b0:	ret
  4032b4:	mov	x4, x1
  4032b8:	adrp	x3, 40d000 <argp_error@@Base+0xe2c>
  4032bc:	add	x3, x3, #0xf40
  4032c0:	adrp	x2, 40d000 <argp_error@@Base+0xe2c>
  4032c4:	add	x2, x2, #0xf50
  4032c8:	mov	w1, #0x0                   	// #0
  4032cc:	mov	w0, #0x1                   	// #1
  4032d0:	bl	401b30 <error@plt>
  4032d4:	b	403250 <ferror@plt+0x1360>
  4032d8:	ldr	x4, [x19]
  4032dc:	adrp	x3, 40d000 <argp_error@@Base+0xe2c>
  4032e0:	add	x3, x3, #0xf40
  4032e4:	adrp	x2, 40d000 <argp_error@@Base+0xe2c>
  4032e8:	add	x2, x2, #0xed8
  4032ec:	mov	w1, #0x0                   	// #0
  4032f0:	mov	w0, #0x1                   	// #1
  4032f4:	bl	401b30 <error@plt>
  4032f8:	b	403258 <ferror@plt+0x1368>
  4032fc:	stp	x29, x30, [sp, #-48]!
  403300:	mov	x29, sp
  403304:	stp	x19, x20, [sp, #16]
  403308:	mov	x19, x0
  40330c:	mov	x20, x1
  403310:	cbz	x0, 403378 <ferror@plt+0x1488>
  403314:	ldr	w0, [x19, #8]
  403318:	tbnz	w0, #8, 40339c <ferror@plt+0x14ac>
  40331c:	mov	w2, #0x0                   	// #0
  403320:	add	x1, sp, #0x28
  403324:	mov	x0, x20
  403328:	bl	401d10 <strtol@plt>
  40332c:	str	w0, [x19, #76]
  403330:	ldrb	w0, [x20]
  403334:	cbz	w0, 403344 <ferror@plt+0x1454>
  403338:	ldr	x0, [sp, #40]
  40333c:	ldrb	w0, [x0]
  403340:	cbz	w0, 403360 <ferror@plt+0x1470>
  403344:	ldr	x4, [x19]
  403348:	mov	x3, x20
  40334c:	adrp	x2, 40d000 <argp_error@@Base+0xe2c>
  403350:	add	x2, x2, #0xf78
  403354:	mov	w1, #0x0                   	// #0
  403358:	mov	w0, #0x1                   	// #1
  40335c:	bl	401b30 <error@plt>
  403360:	ldr	w0, [x19, #8]
  403364:	orr	w0, w0, #0x100
  403368:	str	w0, [x19, #8]
  40336c:	ldp	x19, x20, [sp, #16]
  403370:	ldp	x29, x30, [sp], #48
  403374:	ret
  403378:	mov	x4, x1
  40337c:	adrp	x3, 40d000 <argp_error@@Base+0xe2c>
  403380:	add	x3, x3, #0xfb0
  403384:	adrp	x2, 40d000 <argp_error@@Base+0xe2c>
  403388:	add	x2, x2, #0xf50
  40338c:	mov	w1, #0x0                   	// #0
  403390:	mov	w0, #0x1                   	// #1
  403394:	bl	401b30 <error@plt>
  403398:	b	403314 <ferror@plt+0x1424>
  40339c:	ldr	x4, [x19]
  4033a0:	adrp	x3, 40d000 <argp_error@@Base+0xe2c>
  4033a4:	add	x3, x3, #0xfb0
  4033a8:	adrp	x2, 40d000 <argp_error@@Base+0xe2c>
  4033ac:	add	x2, x2, #0xed8
  4033b0:	mov	w1, #0x0                   	// #0
  4033b4:	mov	w0, #0x1                   	// #1
  4033b8:	bl	401b30 <error@plt>
  4033bc:	b	40331c <ferror@plt+0x142c>
  4033c0:	stp	x29, x30, [sp, #-32]!
  4033c4:	mov	x29, sp
  4033c8:	stp	x19, x20, [sp, #16]
  4033cc:	mov	x19, x0
  4033d0:	mov	x20, x1
  4033d4:	cbz	x0, 40340c <ferror@plt+0x151c>
  4033d8:	adrp	x1, 40d000 <argp_error@@Base+0xe2c>
  4033dc:	add	x1, x1, #0xff0
  4033e0:	mov	x0, x20
  4033e4:	bl	401c60 <strcasecmp@plt>
  4033e8:	cbnz	w0, 403428 <ferror@plt+0x1538>
  4033ec:	mov	w0, #0x2                   	// #2
  4033f0:	strh	w0, [x19, #32]
  4033f4:	ldr	w0, [x19, #8]
  4033f8:	orr	w0, w0, #0x4
  4033fc:	str	w0, [x19, #8]
  403400:	ldp	x19, x20, [sp, #16]
  403404:	ldp	x29, x30, [sp], #32
  403408:	ret
  40340c:	mov	x3, x1
  403410:	adrp	x2, 40d000 <argp_error@@Base+0xe2c>
  403414:	add	x2, x2, #0xfc0
  403418:	mov	w1, #0x0                   	// #0
  40341c:	mov	w0, #0x1                   	// #1
  403420:	bl	401b30 <error@plt>
  403424:	b	4033d8 <ferror@plt+0x14e8>
  403428:	ldr	x4, [x19]
  40342c:	mov	x3, x20
  403430:	adrp	x2, 40d000 <argp_error@@Base+0xe2c>
  403434:	add	x2, x2, #0xff8
  403438:	mov	w1, #0x0                   	// #0
  40343c:	mov	w0, #0x1                   	// #1
  403440:	bl	401b30 <error@plt>
  403444:	b	4033f4 <ferror@plt+0x1504>
  403448:	cbz	w2, 403470 <ferror@plt+0x1580>
  40344c:	adrp	x2, 426000 <argp_error@@Base+0x19e2c>
  403450:	ldr	w0, [x2, #1544]
  403454:	orr	w0, w0, w1
  403458:	str	w0, [x2, #1544]
  40345c:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  403460:	ldr	w2, [x0, #1548]
  403464:	bic	w1, w2, w1
  403468:	str	w1, [x0, #1548]
  40346c:	ret
  403470:	adrp	x2, 426000 <argp_error@@Base+0x19e2c>
  403474:	ldr	w0, [x2, #1548]
  403478:	orr	w0, w0, w1
  40347c:	str	w0, [x2, #1548]
  403480:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  403484:	ldr	w2, [x0, #1544]
  403488:	bic	w1, w2, w1
  40348c:	str	w1, [x0, #1544]
  403490:	b	40346c <ferror@plt+0x157c>
  403494:	stp	x29, x30, [sp, #-96]!
  403498:	mov	x29, sp
  40349c:	stp	x21, x22, [sp, #32]
  4034a0:	mov	x21, x0
  4034a4:	ldrb	w0, [x1]
  4034a8:	cbz	w0, 403514 <ferror@plt+0x1624>
  4034ac:	stp	x19, x20, [sp, #16]
  4034b0:	stp	x23, x24, [sp, #48]
  4034b4:	str	x25, [sp, #64]
  4034b8:	mov	x19, x1
  4034bc:	mov	w22, #0x2c                  	// #44
  4034c0:	adrp	x23, 40e000 <argp_error@@Base+0x1e2c>
  4034c4:	add	x23, x23, #0x38
  4034c8:	mov	w24, #0x1                   	// #1
  4034cc:	b	403558 <ferror@plt+0x1668>
  4034d0:	mov	x0, x19
  4034d4:	bl	401b00 <strlen@plt>
  4034d8:	mov	x20, x0
  4034dc:	add	x2, sp, #0x5c
  4034e0:	mov	x1, x0
  4034e4:	mov	x0, x19
  4034e8:	bl	402508 <ferror@plt+0x618>
  4034ec:	mov	w1, w0
  4034f0:	cbz	w0, 403598 <ferror@plt+0x16a8>
  4034f4:	ldr	w2, [sp, #92]
  4034f8:	mov	x0, x21
  4034fc:	bl	403448 <ferror@plt+0x1558>
  403500:	add	x19, x19, x20
  403504:	b	403550 <ferror@plt+0x1660>
  403508:	ldp	x19, x20, [sp, #16]
  40350c:	ldp	x23, x24, [sp, #48]
  403510:	ldr	x25, [sp, #64]
  403514:	ldp	x21, x22, [sp, #32]
  403518:	ldp	x29, x30, [sp], #96
  40351c:	ret
  403520:	mov	x5, x19
  403524:	mov	w4, w25
  403528:	mov	w3, w25
  40352c:	mov	x2, x23
  403530:	mov	w1, #0x0                   	// #0
  403534:	mov	w0, w24
  403538:	bl	401b30 <error@plt>
  40353c:	ldr	w2, [sp, #92]
  403540:	mov	w1, #0x0                   	// #0
  403544:	mov	x0, x21
  403548:	bl	403448 <ferror@plt+0x1558>
  40354c:	add	x19, x20, #0x1
  403550:	ldrb	w1, [x19]
  403554:	cbz	w1, 403508 <ferror@plt+0x1618>
  403558:	mov	w1, w22
  40355c:	mov	x0, x19
  403560:	bl	401d70 <strchr@plt>
  403564:	mov	x20, x0
  403568:	cbz	x0, 4034d0 <ferror@plt+0x15e0>
  40356c:	sub	x25, x0, x19
  403570:	add	x2, sp, #0x5c
  403574:	mov	x1, x25
  403578:	mov	x0, x19
  40357c:	bl	402508 <ferror@plt+0x618>
  403580:	mov	w1, w0
  403584:	cbz	w0, 403520 <ferror@plt+0x1630>
  403588:	ldr	w2, [sp, #92]
  40358c:	mov	x0, x21
  403590:	bl	403448 <ferror@plt+0x1558>
  403594:	b	40354c <ferror@plt+0x165c>
  403598:	mov	x5, x19
  40359c:	mov	w4, w20
  4035a0:	mov	w3, w20
  4035a4:	mov	x2, x23
  4035a8:	mov	w1, #0x0                   	// #0
  4035ac:	mov	w0, w24
  4035b0:	bl	401b30 <error@plt>
  4035b4:	ldr	w2, [sp, #92]
  4035b8:	mov	w1, #0x0                   	// #0
  4035bc:	mov	x0, x21
  4035c0:	bl	403448 <ferror@plt+0x1558>
  4035c4:	add	x19, x19, x20
  4035c8:	b	403550 <ferror@plt+0x1660>
  4035cc:	stp	x29, x30, [sp, #-32]!
  4035d0:	mov	x29, sp
  4035d4:	str	x19, [sp, #16]
  4035d8:	mov	x19, x0
  4035dc:	bl	403130 <ferror@plt+0x1240>
  4035e0:	mov	w2, #0x0                   	// #0
  4035e4:	mov	w1, #0x10                  	// #16
  4035e8:	mov	x0, x19
  4035ec:	bl	403448 <ferror@plt+0x1558>
  4035f0:	ldr	x19, [sp, #16]
  4035f4:	ldp	x29, x30, [sp], #32
  4035f8:	ret
  4035fc:	stp	x29, x30, [sp, #-32]!
  403600:	mov	x29, sp
  403604:	stp	x19, x20, [sp, #16]
  403608:	mov	x20, x0
  40360c:	cbz	x0, 403654 <ferror@plt+0x1764>
  403610:	adrp	x0, 425000 <argp_error@@Base+0x18e2c>
  403614:	ldr	x1, [x0, #1024]
  403618:	cbz	x1, 403690 <ferror@plt+0x17a0>
  40361c:	add	x19, x0, #0x400
  403620:	mov	x0, x20
  403624:	bl	401cf0 <strcmp@plt>
  403628:	cbz	w0, 403670 <ferror@plt+0x1780>
  40362c:	ldr	x1, [x19, #24]!
  403630:	cbnz	x1, 403620 <ferror@plt+0x1730>
  403634:	ldr	x0, [x19, #16]
  403638:	cbz	x0, 403674 <ferror@plt+0x1784>
  40363c:	ldr	x1, [x19, #16]
  403640:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  403644:	str	x1, [x0, #1560]
  403648:	ldp	x19, x20, [sp, #16]
  40364c:	ldp	x29, x30, [sp], #32
  403650:	ret
  403654:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  403658:	ldr	x20, [x0, #1160]
  40365c:	adrp	x0, 40e000 <argp_error@@Base+0x1e2c>
  403660:	add	x0, x0, #0x50
  403664:	cmp	x20, #0x0
  403668:	csel	x20, x0, x20, eq  // eq = none
  40366c:	b	403610 <ferror@plt+0x1720>
  403670:	cbnz	x19, 403634 <ferror@plt+0x1744>
  403674:	mov	x3, x20
  403678:	adrp	x2, 40e000 <argp_error@@Base+0x1e2c>
  40367c:	add	x2, x2, #0x58
  403680:	mov	w1, #0x0                   	// #0
  403684:	mov	w0, #0x1                   	// #1
  403688:	bl	401b30 <error@plt>
  40368c:	b	40363c <ferror@plt+0x174c>
  403690:	adrp	x19, 425000 <argp_error@@Base+0x18e2c>
  403694:	add	x19, x19, #0x400
  403698:	b	403634 <ferror@plt+0x1744>
  40369c:	stp	x29, x30, [sp, #-80]!
  4036a0:	mov	x29, sp
  4036a4:	stp	x19, x20, [sp, #16]
  4036a8:	stp	x21, x22, [sp, #32]
  4036ac:	str	x23, [sp, #48]
  4036b0:	mov	x19, x0
  4036b4:	str	xzr, [sp, #72]
  4036b8:	str	xzr, [sp, #64]
  4036bc:	adrp	x1, 40d000 <argp_error@@Base+0xe2c>
  4036c0:	add	x1, x1, #0xfa8
  4036c4:	bl	401bd0 <fopen@plt>
  4036c8:	mov	x22, x0
  4036cc:	cbz	x0, 403704 <ferror@plt+0x1814>
  4036d0:	adrp	x4, 401000 <memcpy@plt-0xaa0>
  4036d4:	add	x4, x4, #0xd30
  4036d8:	adrp	x3, 401000 <memcpy@plt-0xaa0>
  4036dc:	add	x3, x3, #0xbe0
  4036e0:	mov	x2, #0x0                   	// #0
  4036e4:	mov	x1, #0x0                   	// #0
  4036e8:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  4036ec:	add	x0, x0, #0x500
  4036f0:	bl	40911c <_obstack_begin@@Base>
  4036f4:	mov	w23, #0xa                   	// #10
  4036f8:	adrp	x21, 426000 <argp_error@@Base+0x19e2c>
  4036fc:	add	x21, x21, #0x500
  403700:	b	403780 <ferror@plt+0x1890>
  403704:	bl	401ea0 <__errno_location@plt>
  403708:	mov	x3, x19
  40370c:	adrp	x2, 40e000 <argp_error@@Base+0x1e2c>
  403710:	add	x2, x2, #0x78
  403714:	ldr	w1, [x0]
  403718:	mov	w0, #0x1                   	// #1
  40371c:	bl	401b30 <error@plt>
  403720:	b	4036d0 <ferror@plt+0x17e0>
  403724:	cbz	x20, 403780 <ferror@plt+0x1890>
  403728:	add	x0, x19, x20
  40372c:	cmp	x0, x19
  403730:	b.eq	403750 <ferror@plt+0x1860>  // b.none
  403734:	ldrb	w1, [x19], #1
  403738:	cmp	w1, #0x20
  40373c:	b.eq	40372c <ferror@plt+0x183c>  // b.none
  403740:	cmp	w1, #0x23
  403744:	b.eq	403780 <ferror@plt+0x1890>  // b.none
  403748:	cmp	w1, #0x9
  40374c:	b.eq	40372c <ferror@plt+0x183c>  // b.none
  403750:	ldr	x0, [x21, #32]
  403754:	ldr	x1, [x21, #24]
  403758:	sub	x0, x0, x1
  40375c:	cmp	x0, x20
  403760:	b.cc	4037c4 <ferror@plt+0x18d4>  // b.lo, b.ul, b.last
  403764:	mov	x2, x20
  403768:	ldr	x1, [sp, #72]
  40376c:	ldr	x0, [x21, #24]
  403770:	bl	401aa0 <memcpy@plt>
  403774:	ldr	x0, [x21, #24]
  403778:	add	x20, x0, x20
  40377c:	str	x20, [x21, #24]
  403780:	mov	x3, x22
  403784:	mov	w2, w23
  403788:	add	x1, sp, #0x40
  40378c:	add	x0, sp, #0x48
  403790:	bl	401ec0 <__getdelim@plt>
  403794:	cmp	x0, #0x0
  403798:	b.le	4037d4 <ferror@plt+0x18e4>
  40379c:	ldr	x19, [sp, #72]
  4037a0:	mov	x0, x19
  4037a4:	bl	401b00 <strlen@plt>
  4037a8:	cbz	x0, 403780 <ferror@plt+0x1890>
  4037ac:	sub	x20, x0, #0x1
  4037b0:	ldrb	w1, [x19, x20]
  4037b4:	cmp	w1, #0xa
  4037b8:	b.eq	403724 <ferror@plt+0x1834>  // b.none
  4037bc:	mov	x20, x0
  4037c0:	b	403728 <ferror@plt+0x1838>
  4037c4:	mov	x1, x20
  4037c8:	mov	x0, x21
  4037cc:	bl	409170 <_obstack_newchunk@@Base>
  4037d0:	b	403764 <ferror@plt+0x1874>
  4037d4:	ldr	x0, [sp, #72]
  4037d8:	bl	401d30 <free@plt>
  4037dc:	mov	x0, x22
  4037e0:	bl	401bc0 <fclose@plt>
  4037e4:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  4037e8:	add	x0, x0, #0x500
  4037ec:	ldr	x1, [x0, #32]
  4037f0:	ldr	x0, [x0, #24]
  4037f4:	cmp	x1, x0
  4037f8:	b.eq	403888 <ferror@plt+0x1998>  // b.none
  4037fc:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  403800:	add	x0, x0, #0x500
  403804:	ldr	x1, [x0, #24]
  403808:	add	x2, x1, #0x1
  40380c:	str	x2, [x0, #24]
  403810:	strb	wzr, [x1]
  403814:	ldr	x3, [x0, #16]
  403818:	ldr	x2, [x0, #24]
  40381c:	cmp	x2, x3
  403820:	b.eq	40389c <ferror@plt+0x19ac>  // b.none
  403824:	adrp	x1, 426000 <argp_error@@Base+0x19e2c>
  403828:	add	x1, x1, #0x500
  40382c:	ldr	x0, [x1, #48]
  403830:	add	x2, x2, x0
  403834:	bic	x0, x2, x0
  403838:	str	x0, [x1, #24]
  40383c:	ldr	x2, [x1, #8]
  403840:	ldr	x1, [x1, #32]
  403844:	sub	x0, x0, x2
  403848:	sub	x2, x1, x2
  40384c:	cmp	x0, x2
  403850:	b.ls	40385c <ferror@plt+0x196c>  // b.plast
  403854:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  403858:	str	x1, [x0, #1304]
  40385c:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  403860:	add	x0, x0, #0x500
  403864:	ldr	x1, [x0, #24]
  403868:	str	x1, [x0, #16]
  40386c:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  403870:	str	x3, [x0, #1560]
  403874:	ldp	x19, x20, [sp, #16]
  403878:	ldp	x21, x22, [sp, #32]
  40387c:	ldr	x23, [sp, #48]
  403880:	ldp	x29, x30, [sp], #80
  403884:	ret
  403888:	mov	x1, #0x1                   	// #1
  40388c:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  403890:	add	x0, x0, #0x500
  403894:	bl	409170 <_obstack_newchunk@@Base>
  403898:	b	4037fc <ferror@plt+0x190c>
  40389c:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  4038a0:	add	x0, x0, #0x500
  4038a4:	ldrb	w1, [x0, #80]
  4038a8:	orr	w1, w1, #0x2
  4038ac:	strb	w1, [x0, #80]
  4038b0:	b	403824 <ferror@plt+0x1934>
  4038b4:	cbz	x0, 4038fc <ferror@plt+0x1a0c>
  4038b8:	ldr	w1, [x0, #8]
  4038bc:	cbnz	w1, 4038fc <ferror@plt+0x1a0c>
  4038c0:	mov	w1, #0x2                   	// #2
  4038c4:	str	w1, [x0, #8]
  4038c8:	adrp	x1, 426000 <argp_error@@Base+0x19e2c>
  4038cc:	ldr	x1, [x1, #1560]
  4038d0:	str	x1, [x0, #24]
  4038d4:	ldr	w1, [x0, #80]
  4038d8:	adrp	x2, 426000 <argp_error@@Base+0x19e2c>
  4038dc:	ldr	w2, [x2, #1548]
  4038e0:	orr	w1, w1, w2
  4038e4:	str	w1, [x0, #80]
  4038e8:	ldr	w1, [x0, #84]
  4038ec:	adrp	x2, 426000 <argp_error@@Base+0x19e2c>
  4038f0:	ldr	w2, [x2, #1544]
  4038f4:	orr	w1, w1, w2
  4038f8:	str	w1, [x0, #84]
  4038fc:	ret
  403900:	stp	x29, x30, [sp, #-32]!
  403904:	mov	x29, sp
  403908:	stp	x19, x20, [sp, #16]
  40390c:	mov	w3, w0
  403910:	mov	x20, x1
  403914:	ldr	x1, [x2, #40]
  403918:	ldr	x0, [x1]
  40391c:	cmp	w3, #0x6d
  403920:	b.eq	403ad8 <ferror@plt+0x1be8>  // b.none
  403924:	mov	x19, x2
  403928:	b.gt	4039fc <ferror@plt+0x1b0c>
  40392c:	cmp	w3, #0x61
  403930:	b.eq	403ac4 <ferror@plt+0x1bd4>  // b.none
  403934:	b.le	403968 <ferror@plt+0x1a78>
  403938:	cmp	w3, #0x69
  40393c:	b.eq	403aa8 <ferror@plt+0x1bb8>  // b.none
  403940:	b.le	4039d4 <ferror@plt+0x1ae4>
  403944:	mov	w0, #0x7                   	// #7
  403948:	cmp	w3, #0x6c
  40394c:	b.ne	4039c8 <ferror@plt+0x1ad8>  // b.any
  403950:	adrp	x1, 426000 <argp_error@@Base+0x19e2c>
  403954:	ldr	w0, [x1, #1580]
  403958:	add	w0, w0, #0x1
  40395c:	str	w0, [x1, #1580]
  403960:	mov	w0, #0x0                   	// #0
  403964:	b	4039c8 <ferror@plt+0x1ad8>
  403968:	cmp	w3, #0x46
  40396c:	b.eq	403ae8 <ferror@plt+0x1bf8>  // b.none
  403970:	b.le	40398c <ferror@plt+0x1a9c>
  403974:	cmp	w3, #0x4d
  403978:	b.ne	4039c4 <ferror@plt+0x1ad4>  // b.any
  40397c:	mov	x1, x20
  403980:	bl	403238 <ferror@plt+0x1348>
  403984:	mov	w0, #0x0                   	// #0
  403988:	b	4039c8 <ferror@plt+0x1ad8>
  40398c:	cmp	w3, #0x41
  403990:	b.ne	4039a4 <ferror@plt+0x1ab4>  // b.any
  403994:	mov	x1, x20
  403998:	bl	403028 <ferror@plt+0x1138>
  40399c:	mov	w0, #0x0                   	// #0
  4039a0:	b	4039c8 <ferror@plt+0x1ad8>
  4039a4:	cmp	w3, #0x42
  4039a8:	b.ne	4039bc <ferror@plt+0x1acc>  // b.any
  4039ac:	mov	x1, x20
  4039b0:	bl	4031b4 <ferror@plt+0x12c4>
  4039b4:	mov	w0, #0x0                   	// #0
  4039b8:	b	4039c8 <ferror@plt+0x1ad8>
  4039bc:	mov	w0, #0x7                   	// #7
  4039c0:	b	4039c8 <ferror@plt+0x1ad8>
  4039c4:	mov	w0, #0x7                   	// #7
  4039c8:	ldp	x19, x20, [sp, #16]
  4039cc:	ldp	x29, x30, [sp], #32
  4039d0:	ret
  4039d4:	cmp	w3, #0x62
  4039d8:	b.eq	4039ac <ferror@plt+0x1abc>  // b.none
  4039dc:	cmp	w3, #0x64
  4039e0:	b.ne	4039f4 <ferror@plt+0x1b04>  // b.any
  4039e4:	mov	x1, x20
  4039e8:	bl	4035cc <ferror@plt+0x16dc>
  4039ec:	mov	w0, #0x0                   	// #0
  4039f0:	b	4039c8 <ferror@plt+0x1ad8>
  4039f4:	mov	w0, #0x7                   	// #7
  4039f8:	b	4039c8 <ferror@plt+0x1ad8>
  4039fc:	cmp	w3, #0x101
  403a00:	b.eq	403b10 <ferror@plt+0x1c20>  // b.none
  403a04:	b.le	403a30 <ferror@plt+0x1b40>
  403a08:	cmp	w3, #0x103
  403a0c:	b.eq	403b40 <ferror@plt+0x1c50>  // b.none
  403a10:	mov	w2, #0x3                   	// #3
  403a14:	movk	w2, #0x100, lsl #16
  403a18:	cmp	w3, w2
  403a1c:	b.ne	403a84 <ferror@plt+0x1b94>  // b.any
  403a20:	ldr	x0, [x19, #48]
  403a24:	str	x1, [x0]
  403a28:	mov	w0, #0x0                   	// #0
  403a2c:	b	4039c8 <ferror@plt+0x1ad8>
  403a30:	cmp	w3, #0x76
  403a34:	b.eq	403af8 <ferror@plt+0x1c08>  // b.none
  403a38:	b.le	403a54 <ferror@plt+0x1b64>
  403a3c:	cmp	w3, #0x100
  403a40:	b.ne	403a7c <ferror@plt+0x1b8c>  // b.any
  403a44:	mov	x1, x20
  403a48:	bl	4032fc <ferror@plt+0x140c>
  403a4c:	mov	w0, #0x0                   	// #0
  403a50:	b	4039c8 <ferror@plt+0x1ad8>
  403a54:	cmp	w3, #0x70
  403a58:	b.eq	4039e4 <ferror@plt+0x1af4>  // b.none
  403a5c:	mov	w0, #0x7                   	// #7
  403a60:	cmp	w3, #0x73
  403a64:	b.ne	4039c8 <ferror@plt+0x1ad8>  // b.any
  403a68:	adrp	x0, 40e000 <argp_error@@Base+0x1e2c>
  403a6c:	add	x0, x0, #0x98
  403a70:	bl	4035fc <ferror@plt+0x170c>
  403a74:	mov	w0, #0x0                   	// #0
  403a78:	b	4039c8 <ferror@plt+0x1ad8>
  403a7c:	mov	w0, #0x7                   	// #7
  403a80:	b	4039c8 <ferror@plt+0x1ad8>
  403a84:	cmp	w3, #0x102
  403a88:	b.ne	403aa0 <ferror@plt+0x1bb0>  // b.any
  403a8c:	mov	w2, #0x0                   	// #0
  403a90:	mov	w1, #0x41                  	// #65
  403a94:	bl	403448 <ferror@plt+0x1558>
  403a98:	mov	w0, #0x0                   	// #0
  403a9c:	b	4039c8 <ferror@plt+0x1ad8>
  403aa0:	mov	w0, #0x7                   	// #7
  403aa4:	b	4039c8 <ferror@plt+0x1ad8>
  403aa8:	bl	4038b4 <ferror@plt+0x19c4>
  403aac:	mov	x0, x20
  403ab0:	bl	402f48 <ferror@plt+0x1058>
  403ab4:	ldr	x1, [x19, #40]
  403ab8:	str	x0, [x1]
  403abc:	mov	w0, #0x0                   	// #0
  403ac0:	b	4039c8 <ferror@plt+0x1ad8>
  403ac4:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  403ac8:	mov	w1, #0x1                   	// #1
  403acc:	str	w1, [x0, #1568]
  403ad0:	mov	w0, #0x0                   	// #0
  403ad4:	b	4039c8 <ferror@plt+0x1ad8>
  403ad8:	mov	x1, x20
  403adc:	bl	4030ac <ferror@plt+0x11bc>
  403ae0:	mov	w0, #0x0                   	// #0
  403ae4:	b	4039c8 <ferror@plt+0x1ad8>
  403ae8:	mov	x1, x20
  403aec:	bl	403494 <ferror@plt+0x15a4>
  403af0:	mov	w0, #0x0                   	// #0
  403af4:	b	4039c8 <ferror@plt+0x1ad8>
  403af8:	adrp	x1, 426000 <argp_error@@Base+0x19e2c>
  403afc:	ldr	w0, [x1, #1576]
  403b00:	add	w0, w0, #0x1
  403b04:	str	w0, [x1, #1576]
  403b08:	mov	w0, #0x0                   	// #0
  403b0c:	b	4039c8 <ferror@plt+0x1ad8>
  403b10:	cbz	x20, 403b20 <ferror@plt+0x1c30>
  403b14:	ldrb	w0, [x20]
  403b18:	cmp	w0, #0x40
  403b1c:	b.eq	403b30 <ferror@plt+0x1c40>  // b.none
  403b20:	mov	x0, x20
  403b24:	bl	4035fc <ferror@plt+0x170c>
  403b28:	mov	w0, #0x0                   	// #0
  403b2c:	b	4039c8 <ferror@plt+0x1ad8>
  403b30:	add	x0, x20, #0x1
  403b34:	bl	40369c <ferror@plt+0x17ac>
  403b38:	mov	w0, #0x0                   	// #0
  403b3c:	b	4039c8 <ferror@plt+0x1ad8>
  403b40:	mov	w2, #0x1                   	// #1
  403b44:	mov	w1, w2
  403b48:	bl	403448 <ferror@plt+0x1558>
  403b4c:	mov	w0, #0x0                   	// #0
  403b50:	b	4039c8 <ferror@plt+0x1ad8>
  403b54:	stp	x29, x30, [sp, #-64]!
  403b58:	mov	x29, sp
  403b5c:	stp	x19, x20, [sp, #16]
  403b60:	stp	x21, x22, [sp, #32]
  403b64:	mov	w20, w0
  403b68:	mov	x21, x1
  403b6c:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  403b70:	ldr	x0, [x0, #1536]
  403b74:	str	x0, [sp, #48]
  403b78:	mov	x0, #0x0                   	// #0
  403b7c:	bl	4035fc <ferror@plt+0x170c>
  403b80:	adrp	x1, 426000 <argp_error@@Base+0x19e2c>
  403b84:	adrp	x0, 40e000 <argp_error@@Base+0x1e2c>
  403b88:	add	x0, x0, #0xa0
  403b8c:	str	x0, [x1, #1624]
  403b90:	adrp	x0, 425000 <argp_error@@Base+0x18e2c>
  403b94:	add	x19, x0, #0x400
  403b98:	add	x1, x19, #0x120
  403b9c:	adrp	x0, 40e000 <argp_error@@Base+0x1e2c>
  403ba0:	add	x0, x0, #0xb8
  403ba4:	bl	408498 <argp_parse@@Base+0xa78>
  403ba8:	adrp	x2, 426000 <argp_error@@Base+0x19e2c>
  403bac:	add	x2, x2, #0x500
  403bb0:	add	x1, x2, #0x58
  403bb4:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  403bb8:	add	x0, x0, #0x3c8
  403bbc:	ldp	x4, x5, [x0]
  403bc0:	stp	x4, x5, [x2, #88]
  403bc4:	ldp	x2, x3, [x0, #16]
  403bc8:	stp	x2, x3, [x1, #16]
  403bcc:	add	x0, x19, #0x130
  403bd0:	str	x1, [x0, #32]
  403bd4:	adrp	x1, 426000 <argp_error@@Base+0x19e2c>
  403bd8:	ldr	x1, [x1, #1152]
  403bdc:	str	x1, [x0, #16]
  403be0:	add	x5, sp, #0x30
  403be4:	add	x4, sp, #0x3c
  403be8:	mov	w3, #0x8                   	// #8
  403bec:	mov	x2, x21
  403bf0:	mov	w1, w20
  403bf4:	bl	407a20 <argp_parse@@Base>
  403bf8:	ldr	x0, [sp, #48]
  403bfc:	bl	4038b4 <ferror@plt+0x19c4>
  403c00:	ldr	w1, [sp, #60]
  403c04:	cmp	w1, w20
  403c08:	b.lt	403c28 <ferror@plt+0x1d38>  // b.tstop
  403c0c:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  403c10:	ldr	x0, [x0, #1536]
  403c14:	cbz	x0, 403c60 <ferror@plt+0x1d70>
  403c18:	ldp	x19, x20, [sp, #16]
  403c1c:	ldp	x21, x22, [sp, #32]
  403c20:	ldp	x29, x30, [sp], #64
  403c24:	ret
  403c28:	add	x2, x21, w1, sxtw #3
  403c2c:	sub	w1, w20, w1
  403c30:	add	x0, sp, #0x30
  403c34:	bl	407010 <ferror@plt+0x5120>
  403c38:	cbz	w0, 403c48 <ferror@plt+0x1d58>
  403c3c:	ldr	x0, [sp, #48]
  403c40:	bl	4038b4 <ferror@plt+0x19c4>
  403c44:	b	403c0c <ferror@plt+0x1d1c>
  403c48:	adrp	x2, 40e000 <argp_error@@Base+0x1e2c>
  403c4c:	add	x2, x2, #0xc8
  403c50:	mov	w1, #0x0                   	// #0
  403c54:	mov	w0, #0x1                   	// #1
  403c58:	bl	401b30 <error@plt>
  403c5c:	b	403c3c <ferror@plt+0x1d4c>
  403c60:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  403c64:	ldr	x0, [x0, #960]
  403c68:	blr	x0
  403c6c:	mov	x19, x0
  403c70:	cbz	x0, 403c8c <ferror@plt+0x1d9c>
  403c74:	adrp	x21, 426000 <argp_error@@Base+0x19e2c>
  403c78:	adrp	x20, 426000 <argp_error@@Base+0x19e2c>
  403c7c:	add	x20, x20, #0x610
  403c80:	adrp	x22, 40d000 <argp_error@@Base+0xe2c>
  403c84:	add	x22, x22, #0xe78
  403c88:	b	403d4c <ferror@plt+0x1e5c>
  403c8c:	adrp	x2, 40e000 <argp_error@@Base+0x1e2c>
  403c90:	add	x2, x2, #0xe0
  403c94:	mov	w1, #0x0                   	// #0
  403c98:	mov	w0, #0x1                   	// #1
  403c9c:	bl	401b30 <error@plt>
  403ca0:	b	403c74 <ferror@plt+0x1d84>
  403ca4:	ldr	w2, [x20]
  403ca8:	add	w2, w2, #0x1
  403cac:	str	w2, [x20]
  403cb0:	sxtw	x0, w2
  403cb4:	add	x1, x0, w2, sxtw #1
  403cb8:	lsl	x1, x1, #2
  403cbc:	sub	x1, x1, x0
  403cc0:	lsl	x1, x1, #3
  403cc4:	ldr	x0, [x21, #1536]
  403cc8:	bl	401c70 <realloc@plt>
  403ccc:	str	x0, [x21, #1536]
  403cd0:	cbz	x0, 403d80 <ferror@plt+0x1e90>
  403cd4:	ldrsw	x0, [x20]
  403cd8:	add	x1, x0, x0, lsl #1
  403cdc:	lsl	x1, x1, #2
  403ce0:	sub	x1, x1, x0
  403ce4:	lsl	x1, x1, #3
  403ce8:	sub	x1, x1, #0x58
  403cec:	ldr	x3, [x21, #1536]
  403cf0:	add	x0, x3, x1
  403cf4:	adrp	x2, 40f000 <argp_error@@Base+0x2e2c>
  403cf8:	add	x2, x2, #0x3d8
  403cfc:	ldp	x4, x5, [x2]
  403d00:	stp	x4, x5, [x0]
  403d04:	ldp	x4, x5, [x2, #16]
  403d08:	stp	x4, x5, [x0, #16]
  403d0c:	ldp	x4, x5, [x2, #32]
  403d10:	stp	x4, x5, [x0, #32]
  403d14:	ldp	x4, x5, [x2, #48]
  403d18:	stp	x4, x5, [x0, #48]
  403d1c:	ldp	x4, x5, [x2, #64]
  403d20:	stp	x4, x5, [x0, #64]
  403d24:	ldr	x2, [x2, #80]
  403d28:	str	x2, [x0, #80]
  403d2c:	ldr	x2, [x19, #8]
  403d30:	str	x2, [x3, x1]
  403d34:	mov	w1, #0x2                   	// #2
  403d38:	str	w1, [x0, #8]
  403d3c:	adrp	x1, 426000 <argp_error@@Base+0x19e2c>
  403d40:	ldr	x1, [x1, #1560]
  403d44:	str	x1, [x0, #24]
  403d48:	add	x19, x19, #0x10
  403d4c:	ldr	w0, [x19]
  403d50:	cbnz	w0, 403ca4 <ferror@plt+0x1db4>
  403d54:	ldr	x0, [x19, #8]
  403d58:	cbnz	x0, 403ca4 <ferror@plt+0x1db4>
  403d5c:	adrp	x3, 402000 <ferror@plt+0x110>
  403d60:	add	x3, x3, #0xea4
  403d64:	mov	x2, #0x58                  	// #88
  403d68:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  403d6c:	ldrsw	x1, [x0, #1552]
  403d70:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  403d74:	ldr	x0, [x0, #1536]
  403d78:	bl	401b80 <qsort@plt>
  403d7c:	b	403c18 <ferror@plt+0x1d28>
  403d80:	bl	401ea0 <__errno_location@plt>
  403d84:	mov	x2, x22
  403d88:	ldr	w1, [x0]
  403d8c:	mov	w0, #0x1                   	// #1
  403d90:	bl	401b30 <error@plt>
  403d94:	b	403cd4 <ferror@plt+0x1de4>
  403d98:	ret
  403d9c:	stp	x29, x30, [sp, #-16]!
  403da0:	mov	x29, sp
  403da4:	mov	w0, #0x0                   	// #0
  403da8:	cmp	w1, #0x0
  403dac:	b.gt	403db4 <ferror@plt+0x1ec4>
  403db0:	bl	401b20 <exit@plt>
  403db4:	mov	x3, x2
  403db8:	mov	w2, #0x0                   	// #0
  403dbc:	mov	x1, #0x0                   	// #0
  403dc0:	ldr	x0, [x3]
  403dc4:	bl	401af0 <strtoul@plt>
  403dc8:	b	403db0 <ferror@plt+0x1ec0>
  403dcc:	stp	x29, x30, [sp, #-32]!
  403dd0:	mov	x29, sp
  403dd4:	stp	x19, x20, [sp, #16]
  403dd8:	mov	x20, x0
  403ddc:	ldr	x0, [x0]
  403de0:	bl	401e00 <if_nametoindex@plt>
  403de4:	mov	w19, w0
  403de8:	cbz	w0, 403e28 <ferror@plt+0x1f38>
  403dec:	mov	w1, w19
  403df0:	adrp	x0, 40f000 <argp_error@@Base+0x2e2c>
  403df4:	add	x0, x0, #0x480
  403df8:	bl	401e80 <printf@plt>
  403dfc:	adrp	x1, 425000 <argp_error@@Base+0x18e2c>
  403e00:	ldr	x2, [x1, #2248]
  403e04:	ldr	w1, [x2]
  403e08:	add	w1, w1, w0
  403e0c:	str	w1, [x2]
  403e10:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  403e14:	mov	w1, #0x1                   	// #1
  403e18:	str	w1, [x0, #1584]
  403e1c:	ldp	x19, x20, [sp, #16]
  403e20:	ldp	x29, x30, [sp], #32
  403e24:	ret
  403e28:	bl	401ea0 <__errno_location@plt>
  403e2c:	ldr	x3, [x20]
  403e30:	adrp	x2, 40f000 <argp_error@@Base+0x2e2c>
  403e34:	add	x2, x2, #0x450
  403e38:	ldr	w1, [x0]
  403e3c:	mov	w0, #0x1                   	// #1
  403e40:	bl	401b30 <error@plt>
  403e44:	b	403dec <ferror@plt+0x1efc>
  403e48:	stp	x29, x30, [sp, #-16]!
  403e4c:	mov	x29, sp
  403e50:	and	w0, w1, #0xff
  403e54:	cmp	w0, #0x9
  403e58:	b.eq	403e90 <ferror@plt+0x1fa0>  // b.none
  403e5c:	cmp	w0, #0xa
  403e60:	b.ne	403eb8 <ferror@plt+0x1fc8>  // b.any
  403e64:	adrp	x1, 425000 <argp_error@@Base+0x18e2c>
  403e68:	ldr	x1, [x1, #2248]
  403e6c:	str	wzr, [x1]
  403e70:	adrp	x1, 426000 <argp_error@@Base+0x19e2c>
  403e74:	ldr	x1, [x1, #1600]
  403e78:	bl	401b60 <putc@plt>
  403e7c:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  403e80:	mov	w1, #0x1                   	// #1
  403e84:	str	w1, [x0, #1584]
  403e88:	ldp	x29, x30, [sp], #16
  403e8c:	ret
  403e90:	adrp	x1, 425000 <argp_error@@Base+0x18e2c>
  403e94:	ldr	x3, [x1, #2248]
  403e98:	ldr	w2, [x3]
  403e9c:	add	w1, w2, #0x7
  403ea0:	cmp	w2, #0x0
  403ea4:	csel	w1, w1, w2, lt  // lt = tstop
  403ea8:	and	w1, w1, #0xfffffff8
  403eac:	add	w1, w1, #0x8
  403eb0:	str	w1, [x3]
  403eb4:	b	403e70 <ferror@plt+0x1f80>
  403eb8:	adrp	x1, 425000 <argp_error@@Base+0x18e2c>
  403ebc:	ldr	x2, [x1, #2248]
  403ec0:	ldr	w1, [x2]
  403ec4:	add	w1, w1, #0x1
  403ec8:	str	w1, [x2]
  403ecc:	b	403e70 <ferror@plt+0x1f80>
  403ed0:	stp	x29, x30, [sp, #-16]!
  403ed4:	mov	x29, sp
  403ed8:	mov	w1, #0xa                   	// #10
  403edc:	bl	403e48 <ferror@plt+0x1f58>
  403ee0:	ldp	x29, x30, [sp], #16
  403ee4:	ret
  403ee8:	stp	x29, x30, [sp, #-16]!
  403eec:	mov	x29, sp
  403ef0:	mov	w1, #0x9                   	// #9
  403ef4:	bl	403e48 <ferror@plt+0x1f58>
  403ef8:	ldp	x29, x30, [sp], #16
  403efc:	ret
  403f00:	stp	x29, x30, [sp, #-48]!
  403f04:	mov	x29, sp
  403f08:	stp	x19, x20, [sp, #16]
  403f0c:	stp	x21, x22, [sp, #32]
  403f10:	mov	x20, x0
  403f14:	mov	w19, w1
  403f18:	mov	x21, x2
  403f1c:	bl	401ea0 <__errno_location@plt>
  403f20:	str	wzr, [x0]
  403f24:	cmp	w19, #0x0
  403f28:	b.gt	403f98 <ferror@plt+0x20a8>
  403f2c:	adrp	x0, 425000 <argp_error@@Base+0x18e2c>
  403f30:	ldr	x0, [x0, #2248]
  403f34:	ldr	w0, [x0]
  403f38:	add	w19, w0, #0x7
  403f3c:	cmp	w0, #0x0
  403f40:	csel	w19, w19, w0, lt  // lt = tstop
  403f44:	and	w19, w19, #0xfffffff8
  403f48:	add	w19, w19, #0x8
  403f4c:	sxtw	x19, w19
  403f50:	adrp	x0, 425000 <argp_error@@Base+0x18e2c>
  403f54:	ldr	x0, [x0, #2248]
  403f58:	ldrsw	x0, [x0]
  403f5c:	mov	w22, #0x20                  	// #32
  403f60:	adrp	x21, 425000 <argp_error@@Base+0x18e2c>
  403f64:	cmp	x19, x0
  403f68:	b.le	403f88 <ferror@plt+0x2098>
  403f6c:	mov	w1, w22
  403f70:	mov	x0, x20
  403f74:	bl	403e48 <ferror@plt+0x1f58>
  403f78:	ldr	x1, [x21, #2248]
  403f7c:	ldrsw	x1, [x1]
  403f80:	cmp	x1, x19
  403f84:	b.lt	403f6c <ferror@plt+0x207c>  // b.tstop
  403f88:	ldp	x19, x20, [sp, #16]
  403f8c:	ldp	x21, x22, [sp, #32]
  403f90:	ldp	x29, x30, [sp], #48
  403f94:	ret
  403f98:	mov	w2, #0x0                   	// #0
  403f9c:	mov	x1, #0x0                   	// #0
  403fa0:	ldr	x0, [x21]
  403fa4:	bl	401d10 <strtol@plt>
  403fa8:	mov	x19, x0
  403fac:	cmp	x0, #0x0
  403fb0:	b.gt	403f50 <ferror@plt+0x2060>
  403fb4:	b	403f2c <ferror@plt+0x203c>
  403fb8:	stp	x29, x30, [sp, #-32]!
  403fbc:	mov	x29, sp
  403fc0:	stp	x19, x20, [sp, #16]
  403fc4:	mov	x20, x0
  403fc8:	mov	x19, x1
  403fcc:	ldrb	w1, [x1]
  403fd0:	cbz	w1, 403fe4 <ferror@plt+0x20f4>
  403fd4:	mov	x0, x20
  403fd8:	bl	403e48 <ferror@plt+0x1f58>
  403fdc:	ldrb	w1, [x19, #1]!
  403fe0:	cbnz	w1, 403fd4 <ferror@plt+0x20e4>
  403fe4:	ldp	x19, x20, [sp, #16]
  403fe8:	ldp	x29, x30, [sp], #32
  403fec:	ret
  403ff0:	stp	x29, x30, [sp, #-48]!
  403ff4:	mov	x29, sp
  403ff8:	stp	x19, x20, [sp, #16]
  403ffc:	str	x21, [sp, #32]
  404000:	mov	x19, x0
  404004:	cmp	w1, #0x0
  404008:	csel	x2, x0, x2, eq  // eq = none
  40400c:	ldr	x21, [x2]
  404010:	mov	x0, x21
  404014:	bl	402ef4 <ferror@plt+0x1004>
  404018:	mov	x20, x0
  40401c:	cbz	x0, 40403c <ferror@plt+0x214c>
  404020:	ldr	x1, [x20, #8]
  404024:	mov	x0, x19
  404028:	bl	403fb8 <ferror@plt+0x20c8>
  40402c:	ldp	x19, x20, [sp, #16]
  404030:	ldr	x21, [sp, #32]
  404034:	ldp	x29, x30, [sp], #48
  404038:	ret
  40403c:	bl	401ea0 <__errno_location@plt>
  404040:	mov	x3, x21
  404044:	adrp	x2, 40f000 <argp_error@@Base+0x2e2c>
  404048:	add	x2, x2, #0x488
  40404c:	ldr	w1, [x0]
  404050:	mov	w0, #0x1                   	// #1
  404054:	bl	401b30 <error@plt>
  404058:	b	404020 <ferror@plt+0x2130>
  40405c:	stp	x29, x30, [sp, #-48]!
  404060:	mov	x29, sp
  404064:	stp	x19, x20, [sp, #16]
  404068:	str	x21, [sp, #32]
  40406c:	mov	x19, x0
  404070:	cmp	w1, #0x0
  404074:	csel	x2, x0, x2, eq  // eq = none
  404078:	ldr	x21, [x2]
  40407c:	mov	x0, x21
  404080:	bl	402ef4 <ferror@plt+0x1004>
  404084:	mov	x20, x0
  404088:	cbz	x0, 4040a8 <ferror@plt+0x21b8>
  40408c:	ldr	x1, [x20, #16]
  404090:	mov	x0, x19
  404094:	bl	403fb8 <ferror@plt+0x20c8>
  404098:	ldp	x19, x20, [sp, #16]
  40409c:	ldr	x21, [sp, #32]
  4040a0:	ldp	x29, x30, [sp], #48
  4040a4:	ret
  4040a8:	bl	401ea0 <__errno_location@plt>
  4040ac:	mov	x3, x21
  4040b0:	adrp	x2, 40f000 <argp_error@@Base+0x2e2c>
  4040b4:	add	x2, x2, #0x488
  4040b8:	ldr	w1, [x0]
  4040bc:	mov	w0, #0x1                   	// #1
  4040c0:	bl	401b30 <error@plt>
  4040c4:	b	40408c <ferror@plt+0x219c>
  4040c8:	stp	x29, x30, [sp, #-16]!
  4040cc:	mov	x29, sp
  4040d0:	adrp	x1, 426000 <argp_error@@Base+0x19e2c>
  4040d4:	ldr	x1, [x1, #1472]
  4040d8:	bl	403fb8 <ferror@plt+0x20c8>
  4040dc:	ldp	x29, x30, [sp], #16
  4040e0:	ret
  4040e4:	stp	x29, x30, [sp, #-16]!
  4040e8:	mov	x29, sp
  4040ec:	ldr	x1, [x0]
  4040f0:	bl	403fb8 <ferror@plt+0x20c8>
  4040f4:	ldp	x29, x30, [sp], #16
  4040f8:	ret
  4040fc:	stp	x29, x30, [sp, #-16]!
  404100:	mov	x29, sp
  404104:	adrp	x1, 40f000 <argp_error@@Base+0x2e2c>
  404108:	add	x1, x1, #0x4a0
  40410c:	bl	403fb8 <ferror@plt+0x20c8>
  404110:	ldp	x29, x30, [sp], #16
  404114:	ret
  404118:	stp	x29, x30, [sp, #-16]!
  40411c:	mov	x29, sp
  404120:	adrp	x1, 40f000 <argp_error@@Base+0x2e2c>
  404124:	add	x1, x1, #0x4a0
  404128:	bl	403fb8 <ferror@plt+0x20c8>
  40412c:	ldp	x29, x30, [sp], #16
  404130:	ret
  404134:	stp	x29, x30, [sp, #-48]!
  404138:	mov	x29, sp
  40413c:	stp	x19, x20, [sp, #16]
  404140:	mov	w20, w3
  404144:	cmp	w1, #0x0
  404148:	b.le	404238 <ferror@plt+0x2348>
  40414c:	str	x21, [sp, #32]
  404150:	mov	x21, x2
  404154:	ldr	x19, [x2]
  404158:	ldrb	w1, [x19]
  40415c:	adrp	x0, 40f000 <argp_error@@Base+0x2e2c>
  404160:	add	x0, x0, #0x480
  404164:	cmp	w1, #0x25
  404168:	b.eq	404174 <ferror@plt+0x2284>  // b.none
  40416c:	ldr	x21, [sp, #32]
  404170:	b	404240 <ferror@plt+0x2350>
  404174:	ldrb	w0, [x19, #1]
  404178:	cmp	w0, #0x23
  40417c:	cinc	x19, x19, eq  // eq = none
  404180:	add	x19, x19, #0x1
  404184:	bl	401d00 <__ctype_b_loc@plt>
  404188:	ldr	x2, [x0]
  40418c:	b	404194 <ferror@plt+0x22a4>
  404190:	add	x19, x19, #0x1
  404194:	ldrb	w0, [x19]
  404198:	and	x1, x0, #0xff
  40419c:	ldrh	w1, [x2, x1, lsl #1]
  4041a0:	tbnz	w1, #11, 404190 <ferror@plt+0x22a0>
  4041a4:	and	w0, w0, #0xffffffdf
  4041a8:	and	w0, w0, #0xff
  4041ac:	cmp	w0, #0x48
  4041b0:	b.ne	4041c0 <ferror@plt+0x22d0>  // b.any
  4041b4:	ldrb	w0, [x19, #1]
  4041b8:	cmp	w0, #0x0
  4041bc:	cinc	x19, x19, ne  // ne = any
  4041c0:	ldrb	w0, [x19]
  4041c4:	sub	w0, w0, #0x48
  4041c8:	and	w1, w0, #0xff
  4041cc:	cmp	w1, #0x30
  4041d0:	b.hi	4041fc <ferror@plt+0x230c>  // b.pmore
  4041d4:	mov	x0, #0x1                   	// #1
  4041d8:	lsl	x0, x0, x1
  4041dc:	tst	x0, #0x8000000080
  4041e0:	b.ne	40422c <ferror@plt+0x233c>  // b.any
  4041e4:	and	x1, x0, #0x1ffff
  4041e8:	and	x1, x1, #0xffffffffffff0001
  4041ec:	cbnz	x1, 404220 <ferror@plt+0x2330>
  4041f0:	and	x0, x0, #0x1ffff00000000
  4041f4:	and	x0, x0, #0xffff0001ffffffff
  4041f8:	cbnz	x0, 404214 <ferror@plt+0x2324>
  4041fc:	mov	w0, #0x69                  	// #105
  404200:	strb	w0, [x19]
  404204:	strb	wzr, [x19, #1]
  404208:	ldr	x0, [x21]
  40420c:	ldr	x21, [sp, #32]
  404210:	b	404240 <ferror@plt+0x2350>
  404214:	mov	w0, #0x78                  	// #120
  404218:	strb	w0, [x19]
  40421c:	b	404204 <ferror@plt+0x2314>
  404220:	mov	w0, #0x58                  	// #88
  404224:	strb	w0, [x19]
  404228:	b	404204 <ferror@plt+0x2314>
  40422c:	mov	w0, #0x6f                  	// #111
  404230:	strb	w0, [x19]
  404234:	b	404204 <ferror@plt+0x2314>
  404238:	adrp	x0, 40f000 <argp_error@@Base+0x2e2c>
  40423c:	add	x0, x0, #0x480
  404240:	mov	w1, w20
  404244:	bl	401e80 <printf@plt>
  404248:	adrp	x1, 425000 <argp_error@@Base+0x18e2c>
  40424c:	ldr	x2, [x1, #2248]
  404250:	ldr	w1, [x2]
  404254:	add	w1, w1, w0
  404258:	str	w1, [x2]
  40425c:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  404260:	mov	w1, #0x1                   	// #1
  404264:	str	w1, [x0, #1584]
  404268:	ldp	x19, x20, [sp, #16]
  40426c:	ldp	x29, x30, [sp], #48
  404270:	ret
  404274:	stp	x29, x30, [sp, #-48]!
  404278:	mov	x29, sp
  40427c:	stp	x19, x20, [sp, #16]
  404280:	str	x21, [sp, #32]
  404284:	mov	x19, x0
  404288:	mov	w20, w1
  40428c:	mov	x21, x2
  404290:	ldr	x2, [x0, #8]
  404294:	mov	w1, #0x8921                	// #35105
  404298:	ldr	w0, [x0, #16]
  40429c:	bl	408f90 <argp_parse@@Base+0x1570>
  4042a0:	tbnz	w0, #31, 4042cc <ferror@plt+0x23dc>
  4042a4:	ldr	x0, [x19, #8]
  4042a8:	ldr	w3, [x0, #16]
  4042ac:	mov	x2, x21
  4042b0:	mov	w1, w20
  4042b4:	mov	x0, x19
  4042b8:	bl	404134 <ferror@plt+0x2244>
  4042bc:	ldp	x19, x20, [sp, #16]
  4042c0:	ldr	x21, [sp, #32]
  4042c4:	ldp	x29, x30, [sp], #48
  4042c8:	ret
  4042cc:	bl	401ea0 <__errno_location@plt>
  4042d0:	ldr	x3, [x19, #8]
  4042d4:	adrp	x2, 40f000 <argp_error@@Base+0x2e2c>
  4042d8:	add	x2, x2, #0x4b0
  4042dc:	ldr	w1, [x0]
  4042e0:	mov	w0, #0x1                   	// #1
  4042e4:	bl	401b30 <error@plt>
  4042e8:	b	4042bc <ferror@plt+0x23cc>
  4042ec:	stp	x29, x30, [sp, #-48]!
  4042f0:	mov	x29, sp
  4042f4:	stp	x19, x20, [sp, #16]
  4042f8:	str	x21, [sp, #32]
  4042fc:	mov	x19, x0
  404300:	mov	w20, w1
  404304:	mov	x21, x2
  404308:	ldr	x2, [x0, #8]
  40430c:	mov	w1, #0x891d                	// #35101
  404310:	ldr	w0, [x0, #16]
  404314:	bl	408f90 <argp_parse@@Base+0x1570>
  404318:	tbnz	w0, #31, 404344 <ferror@plt+0x2454>
  40431c:	ldr	x0, [x19, #8]
  404320:	ldr	w3, [x0, #16]
  404324:	mov	x2, x21
  404328:	mov	w1, w20
  40432c:	mov	x0, x19
  404330:	bl	404134 <ferror@plt+0x2244>
  404334:	ldp	x19, x20, [sp, #16]
  404338:	ldr	x21, [sp, #32]
  40433c:	ldp	x29, x30, [sp], #48
  404340:	ret
  404344:	bl	401ea0 <__errno_location@plt>
  404348:	ldr	x3, [x19, #8]
  40434c:	adrp	x2, 40f000 <argp_error@@Base+0x2e2c>
  404350:	add	x2, x2, #0x4d8
  404354:	ldr	w1, [x0]
  404358:	mov	w0, #0x1                   	// #1
  40435c:	bl	401b30 <error@plt>
  404360:	b	404334 <ferror@plt+0x2444>
  404364:	stp	x29, x30, [sp, #-16]!
  404368:	mov	x29, sp
  40436c:	ldr	x3, [x0, #8]
  404370:	ldrb	w3, [x3, #34]
  404374:	bl	404134 <ferror@plt+0x2244>
  404378:	ldp	x29, x30, [sp], #16
  40437c:	ret
  404380:	stp	x29, x30, [sp, #-16]!
  404384:	mov	x29, sp
  404388:	ldr	x3, [x0, #8]
  40438c:	ldrh	w3, [x3, #32]
  404390:	cmp	w3, #0xff
  404394:	b.ls	4043a4 <ferror@plt+0x24b4>  // b.plast
  404398:	bl	404134 <ferror@plt+0x2244>
  40439c:	ldp	x29, x30, [sp], #16
  4043a0:	ret
  4043a4:	adrp	x1, 40f000 <argp_error@@Base+0x2e2c>
  4043a8:	add	x1, x1, #0x500
  4043ac:	bl	403fb8 <ferror@plt+0x20c8>
  4043b0:	b	40439c <ferror@plt+0x24ac>
  4043b4:	stp	x29, x30, [sp, #-16]!
  4043b8:	mov	x29, sp
  4043bc:	ldr	x3, [x0, #8]
  4043c0:	ldrb	w3, [x3, #35]
  4043c4:	cbz	w3, 4043d4 <ferror@plt+0x24e4>
  4043c8:	bl	404134 <ferror@plt+0x2244>
  4043cc:	ldp	x29, x30, [sp], #16
  4043d0:	ret
  4043d4:	adrp	x1, 40f000 <argp_error@@Base+0x2e2c>
  4043d8:	add	x1, x1, #0x500
  4043dc:	bl	403fb8 <ferror@plt+0x20c8>
  4043e0:	b	4043cc <ferror@plt+0x24dc>
  4043e4:	stp	x29, x30, [sp, #-48]!
  4043e8:	mov	x29, sp
  4043ec:	stp	x19, x20, [sp, #16]
  4043f0:	mov	x20, x3
  4043f4:	cmp	w1, #0x0
  4043f8:	b.le	4044d4 <ferror@plt+0x25e4>
  4043fc:	str	x21, [sp, #32]
  404400:	mov	x21, x2
  404404:	ldr	x19, [x2]
  404408:	ldrb	w1, [x19]
  40440c:	adrp	x0, 40f000 <argp_error@@Base+0x2e2c>
  404410:	add	x0, x0, #0x9f8
  404414:	cmp	w1, #0x25
  404418:	b.eq	404424 <ferror@plt+0x2534>  // b.none
  40441c:	ldr	x21, [sp, #32]
  404420:	b	4044dc <ferror@plt+0x25ec>
  404424:	add	x19, x19, #0x1
  404428:	bl	401d00 <__ctype_b_loc@plt>
  40442c:	ldr	x2, [x0]
  404430:	b	404438 <ferror@plt+0x2548>
  404434:	add	x19, x19, #0x1
  404438:	ldrb	w0, [x19]
  40443c:	and	x1, x0, #0xff
  404440:	ldrh	w1, [x2, x1, lsl #1]
  404444:	tbnz	w1, #11, 404434 <ferror@plt+0x2544>
  404448:	cmp	w0, #0x23
  40444c:	cinc	x19, x19, eq  // eq = none
  404450:	ldrb	w0, [x19]
  404454:	cmp	w0, #0x6c
  404458:	cinc	x19, x19, eq  // eq = none
  40445c:	ldrb	w0, [x19]
  404460:	sub	w0, w0, #0x48
  404464:	and	w1, w0, #0xff
  404468:	cmp	w1, #0x30
  40446c:	b.hi	404498 <ferror@plt+0x25a8>  // b.pmore
  404470:	mov	x0, #0x1                   	// #1
  404474:	lsl	x0, x0, x1
  404478:	tst	x0, #0x8000000080
  40447c:	b.ne	4044c8 <ferror@plt+0x25d8>  // b.any
  404480:	and	x1, x0, #0x1ffff
  404484:	and	x1, x1, #0xffffffffffff0001
  404488:	cbnz	x1, 4044bc <ferror@plt+0x25cc>
  40448c:	and	x0, x0, #0x1ffff00000000
  404490:	and	x0, x0, #0xffff0001ffffffff
  404494:	cbnz	x0, 4044b0 <ferror@plt+0x25c0>
  404498:	mov	w0, #0x69                  	// #105
  40449c:	strb	w0, [x19]
  4044a0:	strb	wzr, [x19, #1]
  4044a4:	ldr	x0, [x21]
  4044a8:	ldr	x21, [sp, #32]
  4044ac:	b	4044dc <ferror@plt+0x25ec>
  4044b0:	mov	w0, #0x78                  	// #120
  4044b4:	strb	w0, [x19]
  4044b8:	b	4044a0 <ferror@plt+0x25b0>
  4044bc:	mov	w0, #0x58                  	// #88
  4044c0:	strb	w0, [x19]
  4044c4:	b	4044a0 <ferror@plt+0x25b0>
  4044c8:	mov	w0, #0x6f                  	// #111
  4044cc:	strb	w0, [x19]
  4044d0:	b	4044a0 <ferror@plt+0x25b0>
  4044d4:	adrp	x0, 40f000 <argp_error@@Base+0x2e2c>
  4044d8:	add	x0, x0, #0x9f8
  4044dc:	mov	x1, x20
  4044e0:	bl	401e80 <printf@plt>
  4044e4:	adrp	x1, 425000 <argp_error@@Base+0x18e2c>
  4044e8:	ldr	x2, [x1, #2248]
  4044ec:	ldr	w1, [x2]
  4044f0:	add	w1, w1, w0
  4044f4:	str	w1, [x2]
  4044f8:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  4044fc:	mov	w1, #0x1                   	// #1
  404500:	str	w1, [x0, #1584]
  404504:	ldp	x19, x20, [sp, #16]
  404508:	ldp	x29, x30, [sp], #48
  40450c:	ret
  404510:	stp	x29, x30, [sp, #-16]!
  404514:	mov	x29, sp
  404518:	ldr	x3, [x0, #8]
  40451c:	ldr	x3, [x3, #16]
  404520:	cbz	x3, 404530 <ferror@plt+0x2640>
  404524:	bl	4043e4 <ferror@plt+0x24f4>
  404528:	ldp	x29, x30, [sp], #16
  40452c:	ret
  404530:	adrp	x1, 40f000 <argp_error@@Base+0x2e2c>
  404534:	add	x1, x1, #0x500
  404538:	bl	403fb8 <ferror@plt+0x20c8>
  40453c:	b	404528 <ferror@plt+0x2638>
  404540:	stp	x29, x30, [sp, #-16]!
  404544:	mov	x29, sp
  404548:	ldr	x3, [x0, #8]
  40454c:	ldr	x3, [x3, #24]
  404550:	cbz	x3, 404560 <ferror@plt+0x2670>
  404554:	bl	4043e4 <ferror@plt+0x24f4>
  404558:	ldp	x29, x30, [sp], #16
  40455c:	ret
  404560:	adrp	x1, 40f000 <argp_error@@Base+0x2e2c>
  404564:	add	x1, x1, #0x500
  404568:	bl	403fb8 <ferror@plt+0x20c8>
  40456c:	b	404558 <ferror@plt+0x2668>
  404570:	stp	x29, x30, [sp, #-96]!
  404574:	mov	x29, sp
  404578:	stp	x19, x20, [sp, #16]
  40457c:	stp	x21, x22, [sp, #32]
  404580:	stp	x23, x24, [sp, #48]
  404584:	mov	x24, x0
  404588:	mov	w22, w1
  40458c:	mov	x23, x2
  404590:	mov	x21, x3
  404594:	ldr	w0, [x3, #4]
  404598:	bl	401b90 <inet_ntoa@plt>
  40459c:	mov	x19, x0
  4045a0:	mov	w1, #0x2e                  	// #46
  4045a4:	bl	401d70 <strchr@plt>
  4045a8:	mov	x20, x0
  4045ac:	strb	wzr, [x20], #1
  4045b0:	mov	w2, #0x0                   	// #0
  4045b4:	mov	x1, #0x0                   	// #0
  4045b8:	mov	x0, x19
  4045bc:	bl	401d10 <strtol@plt>
  4045c0:	str	x0, [sp, #64]
  4045c4:	mov	w1, #0x2e                  	// #46
  4045c8:	mov	x0, x20
  4045cc:	bl	401d70 <strchr@plt>
  4045d0:	mov	x19, x0
  4045d4:	strb	wzr, [x19], #1
  4045d8:	mov	w2, #0x0                   	// #0
  4045dc:	mov	x1, #0x0                   	// #0
  4045e0:	mov	x0, x20
  4045e4:	bl	401d10 <strtol@plt>
  4045e8:	str	x0, [sp, #72]
  4045ec:	mov	w1, #0x2e                  	// #46
  4045f0:	mov	x0, x19
  4045f4:	bl	401d70 <strchr@plt>
  4045f8:	mov	x20, x0
  4045fc:	strb	wzr, [x20], #1
  404600:	mov	w2, #0x0                   	// #0
  404604:	mov	x1, #0x0                   	// #0
  404608:	mov	x0, x19
  40460c:	bl	401d10 <strtol@plt>
  404610:	str	x0, [sp, #80]
  404614:	mov	w2, #0x0                   	// #0
  404618:	mov	x1, #0x0                   	// #0
  40461c:	mov	x0, x20
  404620:	bl	401d10 <strtol@plt>
  404624:	str	x0, [sp, #88]
  404628:	ldr	w0, [x21, #4]
  40462c:	bl	401b90 <inet_ntoa@plt>
  404630:	cmp	w22, #0x0
  404634:	b.le	404670 <ferror@plt+0x2780>
  404638:	mov	w2, #0x0                   	// #0
  40463c:	mov	x1, #0x0                   	// #0
  404640:	ldr	x0, [x23]
  404644:	bl	401d10 <strtol@plt>
  404648:	cmp	x0, #0x3
  40464c:	b.hi	40467c <ferror@plt+0x278c>  // b.pmore
  404650:	add	x1, sp, #0x60
  404654:	add	x0, x1, x0, lsl #3
  404658:	ldur	w3, [x0, #-32]
  40465c:	add	x2, x23, #0x8
  404660:	sub	w1, w22, #0x1
  404664:	mov	x0, x24
  404668:	bl	404134 <ferror@plt+0x2244>
  40466c:	b	40467c <ferror@plt+0x278c>
  404670:	mov	x1, x0
  404674:	mov	x0, x24
  404678:	bl	403fb8 <ferror@plt+0x20c8>
  40467c:	ldp	x19, x20, [sp, #16]
  404680:	ldp	x21, x22, [sp, #32]
  404684:	ldp	x23, x24, [sp, #48]
  404688:	ldp	x29, x30, [sp], #96
  40468c:	ret
  404690:	stp	x29, x30, [sp, #-48]!
  404694:	mov	x29, sp
  404698:	stp	x19, x20, [sp, #16]
  40469c:	str	x21, [sp, #32]
  4046a0:	mov	x19, x0
  4046a4:	mov	w20, w1
  4046a8:	mov	x21, x2
  4046ac:	ldr	x2, [x0, #8]
  4046b0:	mov	w1, #0x8915                	// #35093
  4046b4:	ldr	w0, [x0, #16]
  4046b8:	bl	408f90 <argp_parse@@Base+0x1570>
  4046bc:	tbnz	w0, #31, 4046e8 <ferror@plt+0x27f8>
  4046c0:	ldr	x3, [x19, #8]
  4046c4:	add	x3, x3, #0x10
  4046c8:	mov	x2, x21
  4046cc:	mov	w1, w20
  4046d0:	mov	x0, x19
  4046d4:	bl	404570 <ferror@plt+0x2680>
  4046d8:	ldp	x19, x20, [sp, #16]
  4046dc:	ldr	x21, [sp, #32]
  4046e0:	ldp	x29, x30, [sp], #48
  4046e4:	ret
  4046e8:	bl	401ea0 <__errno_location@plt>
  4046ec:	ldr	x3, [x19, #8]
  4046f0:	adrp	x2, 40f000 <argp_error@@Base+0x2e2c>
  4046f4:	add	x2, x2, #0x510
  4046f8:	ldr	w1, [x0]
  4046fc:	mov	w0, #0x1                   	// #1
  404700:	bl	401b30 <error@plt>
  404704:	b	4046d8 <ferror@plt+0x27e8>
  404708:	stp	x29, x30, [sp, #-48]!
  40470c:	mov	x29, sp
  404710:	stp	x19, x20, [sp, #16]
  404714:	str	x21, [sp, #32]
  404718:	mov	x19, x0
  40471c:	mov	w20, w1
  404720:	mov	x21, x2
  404724:	ldr	x2, [x0, #8]
  404728:	mov	w1, #0x891b                	// #35099
  40472c:	ldr	w0, [x0, #16]
  404730:	bl	408f90 <argp_parse@@Base+0x1570>
  404734:	tbnz	w0, #31, 404760 <ferror@plt+0x2870>
  404738:	ldr	x3, [x19, #8]
  40473c:	add	x3, x3, #0x10
  404740:	mov	x2, x21
  404744:	mov	w1, w20
  404748:	mov	x0, x19
  40474c:	bl	404570 <ferror@plt+0x2680>
  404750:	ldp	x19, x20, [sp, #16]
  404754:	ldr	x21, [sp, #32]
  404758:	ldp	x29, x30, [sp], #48
  40475c:	ret
  404760:	bl	401ea0 <__errno_location@plt>
  404764:	ldr	x3, [x19, #8]
  404768:	adrp	x2, 40f000 <argp_error@@Base+0x2e2c>
  40476c:	add	x2, x2, #0x538
  404770:	ldr	w1, [x0]
  404774:	mov	w0, #0x1                   	// #1
  404778:	bl	401b30 <error@plt>
  40477c:	b	404750 <ferror@plt+0x2860>
  404780:	stp	x29, x30, [sp, #-48]!
  404784:	mov	x29, sp
  404788:	stp	x19, x20, [sp, #16]
  40478c:	str	x21, [sp, #32]
  404790:	mov	x19, x0
  404794:	mov	w20, w1
  404798:	mov	x21, x2
  40479c:	ldr	x2, [x0, #8]
  4047a0:	mov	w1, #0x8919                	// #35097
  4047a4:	ldr	w0, [x0, #16]
  4047a8:	bl	408f90 <argp_parse@@Base+0x1570>
  4047ac:	tbnz	w0, #31, 4047d8 <ferror@plt+0x28e8>
  4047b0:	ldr	x3, [x19, #8]
  4047b4:	add	x3, x3, #0x10
  4047b8:	mov	x2, x21
  4047bc:	mov	w1, w20
  4047c0:	mov	x0, x19
  4047c4:	bl	404570 <ferror@plt+0x2680>
  4047c8:	ldp	x19, x20, [sp, #16]
  4047cc:	ldr	x21, [sp, #32]
  4047d0:	ldp	x29, x30, [sp], #48
  4047d4:	ret
  4047d8:	bl	401ea0 <__errno_location@plt>
  4047dc:	ldr	x3, [x19, #8]
  4047e0:	adrp	x2, 40f000 <argp_error@@Base+0x2e2c>
  4047e4:	add	x2, x2, #0x568
  4047e8:	ldr	w1, [x0]
  4047ec:	mov	w0, #0x1                   	// #1
  4047f0:	bl	401b30 <error@plt>
  4047f4:	b	4047c8 <ferror@plt+0x28d8>
  4047f8:	stp	x29, x30, [sp, #-48]!
  4047fc:	mov	x29, sp
  404800:	stp	x19, x20, [sp, #16]
  404804:	str	x21, [sp, #32]
  404808:	mov	x19, x0
  40480c:	mov	w20, w1
  404810:	mov	x21, x2
  404814:	ldr	x2, [x0, #8]
  404818:	mov	w1, #0x8917                	// #35095
  40481c:	ldr	w0, [x0, #16]
  404820:	bl	408f90 <argp_parse@@Base+0x1570>
  404824:	tbnz	w0, #31, 404850 <ferror@plt+0x2960>
  404828:	ldr	x3, [x19, #8]
  40482c:	add	x3, x3, #0x10
  404830:	mov	x2, x21
  404834:	mov	w1, w20
  404838:	mov	x0, x19
  40483c:	bl	404570 <ferror@plt+0x2680>
  404840:	ldp	x19, x20, [sp, #16]
  404844:	ldr	x21, [sp, #32]
  404848:	ldp	x29, x30, [sp], #48
  40484c:	ret
  404850:	bl	401ea0 <__errno_location@plt>
  404854:	ldr	x3, [x19, #8]
  404858:	adrp	x2, 40f000 <argp_error@@Base+0x2e2c>
  40485c:	add	x2, x2, #0x598
  404860:	ldr	w1, [x0]
  404864:	mov	w0, #0x1                   	// #1
  404868:	bl	401b30 <error@plt>
  40486c:	b	404840 <ferror@plt+0x2950>
  404870:	cbz	w3, 404978 <ferror@plt+0x2a88>
  404874:	stp	x29, x30, [sp, #-96]!
  404878:	mov	x29, sp
  40487c:	stp	x19, x20, [sp, #16]
  404880:	stp	x21, x22, [sp, #32]
  404884:	stp	x23, x24, [sp, #48]
  404888:	stp	x25, x26, [sp, #64]
  40488c:	str	x27, [sp, #80]
  404890:	mov	x22, x0
  404894:	mov	w24, w1
  404898:	mov	x25, x2
  40489c:	mov	w20, w3
  4048a0:	mov	w23, #0x1                   	// #1
  4048a4:	mov	w19, w23
  4048a8:	mov	w26, #0x0                   	// #0
  4048ac:	mov	w27, #0x20                  	// #32
  4048b0:	b	4048e4 <ferror@plt+0x29f4>
  4048b4:	mov	w1, w27
  4048b8:	mov	x0, x22
  4048bc:	bl	403e48 <ferror@plt+0x1f58>
  4048c0:	mov	x1, x21
  4048c4:	mov	x0, x22
  4048c8:	bl	403fb8 <ferror@plt+0x20c8>
  4048cc:	bic	w20, w20, w19
  4048d0:	mov	w23, w26
  4048d4:	lsl	w19, w19, #1
  4048d8:	cmp	w20, #0x0
  4048dc:	ccmp	w19, #0x0, #0x4, ne  // ne = any
  4048e0:	b.eq	40491c <ferror@plt+0x2a2c>  // b.none
  4048e4:	tst	w19, w20
  4048e8:	b.eq	4048d4 <ferror@plt+0x29e4>  // b.none
  4048ec:	mov	x1, #0x0                   	// #0
  4048f0:	mov	w0, w19
  4048f4:	bl	402448 <ferror@plt+0x558>
  4048f8:	mov	x21, x0
  4048fc:	cbz	x0, 4048d4 <ferror@plt+0x29e4>
  404900:	cbnz	w23, 4048c0 <ferror@plt+0x29d0>
  404904:	cmp	w24, #0x0
  404908:	b.le	4048b4 <ferror@plt+0x29c4>
  40490c:	ldr	x1, [x25]
  404910:	mov	x0, x22
  404914:	bl	403fb8 <ferror@plt+0x20c8>
  404918:	b	4048c0 <ferror@plt+0x29d0>
  40491c:	cbz	w20, 40494c <ferror@plt+0x2a5c>
  404920:	cbnz	w23, 404938 <ferror@plt+0x2a48>
  404924:	cmp	w24, #0x0
  404928:	b.le	404968 <ferror@plt+0x2a78>
  40492c:	ldr	x1, [x25]
  404930:	mov	x0, x22
  404934:	bl	403fb8 <ferror@plt+0x20c8>
  404938:	mov	w3, w20
  40493c:	add	x2, x25, #0x8
  404940:	sub	w1, w24, #0x1
  404944:	mov	x0, x22
  404948:	bl	404134 <ferror@plt+0x2244>
  40494c:	ldp	x19, x20, [sp, #16]
  404950:	ldp	x21, x22, [sp, #32]
  404954:	ldp	x23, x24, [sp, #48]
  404958:	ldp	x25, x26, [sp, #64]
  40495c:	ldr	x27, [sp, #80]
  404960:	ldp	x29, x30, [sp], #96
  404964:	ret
  404968:	mov	w1, #0x20                  	// #32
  40496c:	mov	x0, x22
  404970:	bl	403e48 <ferror@plt+0x1f58>
  404974:	b	404938 <ferror@plt+0x2a48>
  404978:	ret
  40497c:	stp	x29, x30, [sp, #-48]!
  404980:	mov	x29, sp
  404984:	str	x19, [sp, #16]
  404988:	mov	x19, x0
  40498c:	mov	w0, w3
  404990:	mov	x2, #0xf                   	// #15
  404994:	add	x1, sp, #0x20
  404998:	bl	402608 <ferror@plt+0x718>
  40499c:	add	x1, sp, #0x20
  4049a0:	mov	x0, x19
  4049a4:	bl	403fb8 <ferror@plt+0x20c8>
  4049a8:	ldr	x19, [sp, #16]
  4049ac:	ldp	x29, x30, [sp], #48
  4049b0:	ret
  4049b4:	stp	x29, x30, [sp, #-64]!
  4049b8:	mov	x29, sp
  4049bc:	stp	x19, x20, [sp, #16]
  4049c0:	stp	x21, x22, [sp, #32]
  4049c4:	mov	x19, x0
  4049c8:	mov	w20, w1
  4049cc:	mov	x21, x2
  4049d0:	ldr	x2, [x0, #8]
  4049d4:	mov	w1, #0x8913                	// #35091
  4049d8:	ldr	w0, [x0, #16]
  4049dc:	bl	408f90 <argp_parse@@Base+0x1570>
  4049e0:	tbnz	w0, #31, 404a40 <ferror@plt+0x2b50>
  4049e4:	str	x23, [sp, #48]
  4049e8:	ldr	x0, [x19, #8]
  4049ec:	ldrh	w23, [x0, #16]
  4049f0:	cmp	w20, #0x0
  4049f4:	b.le	404ac0 <ferror@plt+0x2bd0>
  4049f8:	ldr	x22, [x21]
  4049fc:	adrp	x1, 40f000 <argp_error@@Base+0x2e2c>
  404a00:	add	x1, x1, #0x5f0
  404a04:	mov	x0, x22
  404a08:	bl	401cf0 <strcmp@plt>
  404a0c:	cbz	w0, 404a6c <ferror@plt+0x2b7c>
  404a10:	adrp	x1, 40e000 <argp_error@@Base+0x1e2c>
  404a14:	add	x1, x1, #0x400
  404a18:	mov	x0, x22
  404a1c:	bl	401cf0 <strcmp@plt>
  404a20:	cbz	w0, 404a88 <ferror@plt+0x2b98>
  404a24:	adrp	x1, 40f000 <argp_error@@Base+0x2e2c>
  404a28:	add	x1, x1, #0x5f8
  404a2c:	mov	x0, x22
  404a30:	bl	401cf0 <strcmp@plt>
  404a34:	cbz	w0, 404aa4 <ferror@plt+0x2bb4>
  404a38:	ldr	x23, [sp, #48]
  404a3c:	b	404a5c <ferror@plt+0x2b6c>
  404a40:	bl	401ea0 <__errno_location@plt>
  404a44:	ldr	x3, [x19, #8]
  404a48:	adrp	x2, 40f000 <argp_error@@Base+0x2e2c>
  404a4c:	add	x2, x2, #0x5c8
  404a50:	ldr	w1, [x0]
  404a54:	mov	w0, #0x1                   	// #1
  404a58:	bl	401b30 <error@plt>
  404a5c:	ldp	x19, x20, [sp, #16]
  404a60:	ldp	x21, x22, [sp, #32]
  404a64:	ldp	x29, x30, [sp], #64
  404a68:	ret
  404a6c:	mov	w3, w23
  404a70:	add	x2, x21, #0x8
  404a74:	sub	w1, w20, #0x1
  404a78:	mov	x0, x19
  404a7c:	bl	404134 <ferror@plt+0x2244>
  404a80:	ldr	x23, [sp, #48]
  404a84:	b	404a5c <ferror@plt+0x2b6c>
  404a88:	mov	w3, w23
  404a8c:	add	x2, x21, #0x8
  404a90:	sub	w1, w20, #0x1
  404a94:	mov	x0, x19
  404a98:	bl	40497c <ferror@plt+0x2a8c>
  404a9c:	ldr	x23, [sp, #48]
  404aa0:	b	404a5c <ferror@plt+0x2b6c>
  404aa4:	mov	w3, w23
  404aa8:	add	x2, x21, #0x8
  404aac:	sub	w1, w20, #0x1
  404ab0:	mov	x0, x19
  404ab4:	bl	404870 <ferror@plt+0x2980>
  404ab8:	ldr	x23, [sp, #48]
  404abc:	b	404a5c <ferror@plt+0x2b6c>
  404ac0:	mov	w3, w23
  404ac4:	mov	x2, x21
  404ac8:	mov	w1, w20
  404acc:	mov	x0, x19
  404ad0:	bl	404870 <ferror@plt+0x2980>
  404ad4:	ldr	x23, [sp, #48]
  404ad8:	b	404a5c <ferror@plt+0x2b6c>
  404adc:	stp	x29, x30, [sp, #-64]!
  404ae0:	mov	x29, sp
  404ae4:	stp	x19, x20, [sp, #16]
  404ae8:	stp	x21, x22, [sp, #32]
  404aec:	mov	x20, x0
  404af0:	mov	x21, x1
  404af4:	adrp	x0, 425000 <argp_error@@Base+0x18e2c>
  404af8:	ldr	x0, [x0, #2256]
  404afc:	cbz	x0, 404b30 <ferror@plt+0x2c40>
  404b00:	str	x23, [sp, #48]
  404b04:	mov	w22, w2
  404b08:	mov	x23, x3
  404b0c:	adrp	x19, 425000 <argp_error@@Base+0x18e2c>
  404b10:	add	x19, x19, #0x8c8
  404b14:	add	x19, x19, #0x8
  404b18:	mov	x1, x20
  404b1c:	bl	401cf0 <strcmp@plt>
  404b20:	cbz	w0, 404b94 <ferror@plt+0x2ca4>
  404b24:	ldr	x0, [x19, #16]!
  404b28:	cbnz	x0, 404b18 <ferror@plt+0x2c28>
  404b2c:	ldr	x23, [sp, #48]
  404b30:	adrp	x0, 40f000 <argp_error@@Base+0x2e2c>
  404b34:	add	x0, x0, #0x600
  404b38:	bl	401e80 <printf@plt>
  404b3c:	adrp	x19, 425000 <argp_error@@Base+0x18e2c>
  404b40:	ldr	x2, [x19, #2248]
  404b44:	ldr	w1, [x2]
  404b48:	add	w1, w1, w0
  404b4c:	str	w1, [x2]
  404b50:	mov	x1, x20
  404b54:	mov	x0, x21
  404b58:	bl	403fb8 <ferror@plt+0x20c8>
  404b5c:	adrp	x0, 40f000 <argp_error@@Base+0x2e2c>
  404b60:	add	x0, x0, #0xc38
  404b64:	bl	401e80 <printf@plt>
  404b68:	ldr	x2, [x19, #2248]
  404b6c:	ldr	w1, [x2]
  404b70:	add	w1, w1, w0
  404b74:	str	w1, [x2]
  404b78:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  404b7c:	mov	w1, #0x1                   	// #1
  404b80:	str	w1, [x0, #1584]
  404b84:	ldp	x19, x20, [sp, #16]
  404b88:	ldp	x21, x22, [sp, #32]
  404b8c:	ldp	x29, x30, [sp], #64
  404b90:	ret
  404b94:	ldr	x3, [x19, #8]
  404b98:	cbz	x3, 404bb4 <ferror@plt+0x2cc4>
  404b9c:	mov	x2, x23
  404ba0:	mov	w1, w22
  404ba4:	mov	x0, x21
  404ba8:	blr	x3
  404bac:	ldr	x23, [sp, #48]
  404bb0:	b	404b84 <ferror@plt+0x2c94>
  404bb4:	ldr	x23, [sp, #48]
  404bb8:	b	404b84 <ferror@plt+0x2c94>
  404bbc:	stp	x29, x30, [sp, #-112]!
  404bc0:	mov	x29, sp
  404bc4:	stp	x19, x20, [sp, #16]
  404bc8:	stp	x21, x22, [sp, #32]
  404bcc:	stp	x23, x24, [sp, #48]
  404bd0:	stp	x25, x26, [sp, #64]
  404bd4:	stp	x27, x28, [sp, #80]
  404bd8:	mov	x20, x0
  404bdc:	mov	w21, w1
  404be0:	ldr	x19, [x0, #24]
  404be4:	ldr	w0, [x0, #32]
  404be8:	add	w0, w0, #0x1
  404bec:	str	w0, [x20, #32]
  404bf0:	ldrb	w0, [x19]
  404bf4:	mov	w22, #0x1                   	// #1
  404bf8:	cbnz	w0, 404c90 <ferror@plt+0x2da0>
  404bfc:	str	x19, [x20, #24]
  404c00:	ldr	w0, [x20, #32]
  404c04:	sub	w0, w0, #0x1
  404c08:	str	w0, [x20, #32]
  404c0c:	mov	sp, x29
  404c10:	ldp	x19, x20, [sp, #16]
  404c14:	ldp	x21, x22, [sp, #32]
  404c18:	ldp	x23, x24, [sp, #48]
  404c1c:	ldp	x25, x26, [sp, #64]
  404c20:	ldp	x27, x28, [sp, #80]
  404c24:	ldp	x29, x30, [sp], #112
  404c28:	ret
  404c2c:	mov	x0, x20
  404c30:	bl	403e48 <ferror@plt+0x1f58>
  404c34:	ldrb	w1, [x19, #1]!
  404c38:	cmp	w1, #0x24
  404c3c:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  404c40:	b.eq	404c5c <ferror@plt+0x2d6c>  // b.none
  404c44:	ldr	w0, [x20, #32]
  404c48:	cmp	w1, #0x7d
  404c4c:	ccmp	w0, #0x1, #0x4, eq  // eq = none
  404c50:	b.gt	404bfc <ferror@plt+0x2d0c>
  404c54:	cbnz	w21, 404c34 <ferror@plt+0x2d44>
  404c58:	b	404c2c <ferror@plt+0x2d3c>
  404c5c:	cmp	w1, #0x24
  404c60:	b.ne	404bfc <ferror@plt+0x2d0c>  // b.any
  404c64:	ldrb	w0, [x19, #1]
  404c68:	cmp	w0, #0x7b
  404c6c:	b.eq	404cd4 <ferror@plt+0x2de4>  // b.none
  404c70:	cmp	w0, #0x7d
  404c74:	b.eq	404ccc <ferror@plt+0x2ddc>  // b.none
  404c78:	cmp	w0, #0x24
  404c7c:	b.eq	404ccc <ferror@plt+0x2ddc>  // b.none
  404c80:	cbz	w21, 404cb4 <ferror@plt+0x2dc4>
  404c84:	add	x19, x19, #0x2
  404c88:	ldrb	w0, [x19]
  404c8c:	cbz	w0, 404bfc <ferror@plt+0x2d0c>
  404c90:	ldr	w1, [x20, #32]
  404c94:	cmp	w0, #0x7d
  404c98:	ccmp	w1, #0x1, #0x4, eq  // eq = none
  404c9c:	b.gt	404bfc <ferror@plt+0x2d0c>
  404ca0:	ldrb	w1, [x19]
  404ca4:	cmp	w1, #0x24
  404ca8:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  404cac:	b.ne	404c44 <ferror@plt+0x2d54>  // b.any
  404cb0:	b	404c5c <ferror@plt+0x2d6c>
  404cb4:	mov	x0, x20
  404cb8:	bl	403e48 <ferror@plt+0x1f58>
  404cbc:	ldrb	w1, [x19, #1]
  404cc0:	mov	x0, x20
  404cc4:	bl	403e48 <ferror@plt+0x1f58>
  404cc8:	b	404c84 <ferror@plt+0x2d94>
  404ccc:	cbnz	w21, 404c84 <ferror@plt+0x2d94>
  404cd0:	b	404cbc <ferror@plt+0x2dcc>
  404cd4:	add	x24, x19, #0x2
  404cd8:	mov	w1, #0x7d                  	// #125
  404cdc:	mov	x0, x24
  404ce0:	bl	401d70 <strchr@plt>
  404ce4:	mov	x23, x0
  404ce8:	cbz	x0, 404d60 <ferror@plt+0x2e70>
  404cec:	sub	x19, x0, x24
  404cf0:	add	x0, x19, #0x10
  404cf4:	and	x0, x0, #0xfffffffffffffff0
  404cf8:	sub	sp, sp, x0
  404cfc:	mov	x28, sp
  404d00:	mov	x2, x19
  404d04:	mov	x1, x24
  404d08:	mov	x0, x28
  404d0c:	bl	401aa0 <memcpy@plt>
  404d10:	strb	wzr, [x28, x19]
  404d14:	add	x19, x23, #0x1
  404d18:	cbz	w21, 404d7c <ferror@plt+0x2e8c>
  404d1c:	str	x19, [x20, #24]
  404d20:	ldr	x19, [x20, #24]
  404d24:	ldrb	w0, [x19]
  404d28:	cmp	w0, #0x7b
  404d2c:	b.ne	404c88 <ferror@plt+0x2d98>  // b.any
  404d30:	add	x19, x19, #0x1
  404d34:	str	x19, [x20, #24]
  404d38:	mov	w1, w22
  404d3c:	mov	x0, x20
  404d40:	bl	404bbc <ferror@plt+0x2ccc>
  404d44:	ldr	x0, [x20, #24]
  404d48:	ldrb	w1, [x0]
  404d4c:	cmp	w1, #0x7d
  404d50:	b.ne	404d20 <ferror@plt+0x2e30>  // b.any
  404d54:	add	x0, x0, #0x1
  404d58:	str	x0, [x20, #24]
  404d5c:	b	404d20 <ferror@plt+0x2e30>
  404d60:	mov	x1, x19
  404d64:	mov	x0, x20
  404d68:	bl	403fb8 <ferror@plt+0x20c8>
  404d6c:	mov	x0, x19
  404d70:	bl	401b00 <strlen@plt>
  404d74:	add	x19, x19, x0
  404d78:	b	404c88 <ferror@plt+0x2d98>
  404d7c:	mov	x0, x23
  404d80:	bl	401b00 <strlen@plt>
  404d84:	lsr	x0, x0, #1
  404d88:	add	x0, x0, #0xf
  404d8c:	and	x0, x0, #0xfffffffffffffff0
  404d90:	sub	sp, sp, x0
  404d94:	mov	x27, sp
  404d98:	ldrb	w0, [x23, #1]
  404d9c:	cmp	w0, #0x7b
  404da0:	b.ne	404e44 <ferror@plt+0x2f54>  // b.any
  404da4:	mov	x23, #0x0                   	// #0
  404da8:	str	w23, [x29, #108]
  404dac:	str	w23, [x29, #104]
  404db0:	add	x26, x19, #0x1
  404db4:	str	x26, [x20, #24]
  404db8:	mov	w1, w22
  404dbc:	mov	x0, x20
  404dc0:	bl	404bbc <ferror@plt+0x2ccc>
  404dc4:	ldr	x19, [x20, #24]
  404dc8:	sub	x25, x19, x26
  404dcc:	add	x0, x25, #0x1
  404dd0:	bl	408ccc <argp_parse@@Base+0x12ac>
  404dd4:	mov	x24, x0
  404dd8:	str	x0, [x27, x23, lsl #3]
  404ddc:	mov	x2, x25
  404de0:	mov	x1, x26
  404de4:	bl	401aa0 <memcpy@plt>
  404de8:	strb	wzr, [x24, x25]
  404dec:	ldrb	w0, [x19]
  404df0:	cmp	w0, #0x7d
  404df4:	cinc	x19, x19, eq  // eq = none
  404df8:	ldr	w0, [x29, #108]
  404dfc:	add	w2, w0, #0x1
  404e00:	add	x23, x23, #0x1
  404e04:	ldrb	w0, [x19]
  404e08:	cmp	w0, #0x7b
  404e0c:	b.eq	404da8 <ferror@plt+0x2eb8>  // b.none
  404e10:	mov	x3, x27
  404e14:	mov	x1, x20
  404e18:	mov	x0, x28
  404e1c:	bl	404adc <ferror@plt+0x2bec>
  404e20:	str	x19, [x20, #24]
  404e24:	ldr	w0, [x29, #104]
  404e28:	tbnz	w0, #31, 404c88 <ferror@plt+0x2d98>
  404e2c:	sxtw	x23, w0
  404e30:	ldr	x0, [x27, x23, lsl #3]
  404e34:	bl	401d30 <free@plt>
  404e38:	sub	x23, x23, #0x1
  404e3c:	tbz	w23, #31, 404e30 <ferror@plt+0x2f40>
  404e40:	b	404c88 <ferror@plt+0x2d98>
  404e44:	mov	x3, x27
  404e48:	mov	w2, #0x0                   	// #0
  404e4c:	mov	x1, x20
  404e50:	mov	x0, x28
  404e54:	bl	404adc <ferror@plt+0x2bec>
  404e58:	str	x19, [x20, #24]
  404e5c:	b	404c88 <ferror@plt+0x2d98>
  404e60:	cmp	w3, w1
  404e64:	b.lt	404e6c <ferror@plt+0x2f7c>  // b.tstop
  404e68:	ret
  404e6c:	stp	x29, x30, [sp, #-16]!
  404e70:	mov	x29, sp
  404e74:	ldr	x1, [x2, w3, sxtw #3]
  404e78:	str	x1, [x0, #24]
  404e7c:	mov	w1, #0x0                   	// #0
  404e80:	bl	404bbc <ferror@plt+0x2ccc>
  404e84:	ldp	x29, x30, [sp], #16
  404e88:	ret
  404e8c:	cmp	w1, #0x0
  404e90:	b.le	404ee4 <ferror@plt+0x2ff4>
  404e94:	stp	x29, x30, [sp, #-48]!
  404e98:	mov	x29, sp
  404e9c:	stp	x19, x20, [sp, #16]
  404ea0:	str	x21, [sp, #32]
  404ea4:	mov	x21, x0
  404ea8:	mov	w19, w1
  404eac:	mov	x20, x2
  404eb0:	ldr	x0, [x2]
  404eb4:	bl	402ef4 <ferror@plt+0x1004>
  404eb8:	cmp	x0, #0x0
  404ebc:	cset	w3, eq  // eq = none
  404ec0:	add	w3, w3, #0x1
  404ec4:	mov	x2, x20
  404ec8:	mov	w1, w19
  404ecc:	mov	x0, x21
  404ed0:	bl	404e60 <ferror@plt+0x2f70>
  404ed4:	ldp	x19, x20, [sp, #16]
  404ed8:	ldr	x21, [sp, #32]
  404edc:	ldp	x29, x30, [sp], #48
  404ee0:	ret
  404ee4:	ret
  404ee8:	stp	x29, x30, [sp, #-16]!
  404eec:	mov	x29, sp
  404ef0:	ldr	w3, [x0, #20]
  404ef4:	cmp	w3, #0x0
  404ef8:	cset	w3, eq  // eq = none
  404efc:	bl	404e60 <ferror@plt+0x2f70>
  404f00:	ldp	x29, x30, [sp], #16
  404f04:	ret
  404f08:	stp	x29, x30, [sp, #-80]!
  404f0c:	mov	x29, sp
  404f10:	stp	x19, x20, [sp, #16]
  404f14:	stp	x21, x22, [sp, #32]
  404f18:	str	x23, [sp, #48]
  404f1c:	mov	x19, x0
  404f20:	mov	w21, w1
  404f24:	mov	x22, x2
  404f28:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  404f2c:	ldr	w20, [x0, #1568]
  404f30:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  404f34:	ldr	w0, [x0, #1572]
  404f38:	orr	w20, w20, w0
  404f3c:	mov	w23, #0x1                   	// #1
  404f40:	cbz	w20, 404f70 <ferror@plt+0x3080>
  404f44:	cmp	w23, #0x0
  404f48:	cset	w3, eq  // eq = none
  404f4c:	mov	x2, x22
  404f50:	mov	w1, w21
  404f54:	mov	x0, x19
  404f58:	bl	404e60 <ferror@plt+0x2f70>
  404f5c:	ldp	x19, x20, [sp, #16]
  404f60:	ldp	x21, x22, [sp, #32]
  404f64:	ldr	x23, [sp, #48]
  404f68:	ldp	x29, x30, [sp], #80
  404f6c:	ret
  404f70:	str	wzr, [sp, #76]
  404f74:	add	x1, sp, #0x4c
  404f78:	adrp	x0, 40d000 <argp_error@@Base+0xe2c>
  404f7c:	add	x0, x0, #0xb88
  404f80:	bl	4025d4 <ferror@plt+0x6e4>
  404f84:	mov	w23, w0
  404f88:	cbz	w0, 404f44 <ferror@plt+0x3054>
  404f8c:	ldr	x2, [x19, #8]
  404f90:	mov	w1, #0x8913                	// #35091
  404f94:	ldr	w0, [x19, #16]
  404f98:	bl	408f90 <argp_parse@@Base+0x1570>
  404f9c:	cbnz	w0, 404fb4 <ferror@plt+0x30c4>
  404fa0:	ldr	x0, [x19, #8]
  404fa4:	ldrh	w0, [x0, #16]
  404fa8:	tst	w0, w23
  404fac:	cset	w23, ne  // ne = any
  404fb0:	b	404f44 <ferror@plt+0x3054>
  404fb4:	mov	w23, w20
  404fb8:	b	404f44 <ferror@plt+0x3054>
  404fbc:	stp	x29, x30, [sp, #-16]!
  404fc0:	mov	x29, sp
  404fc4:	adrp	x3, 426000 <argp_error@@Base+0x19e2c>
  404fc8:	ldr	w3, [x3, #1576]
  404fcc:	cmp	w3, #0x0
  404fd0:	cset	w3, eq  // eq = none
  404fd4:	bl	404e60 <ferror@plt+0x2f70>
  404fd8:	ldp	x29, x30, [sp], #16
  404fdc:	ret
  404fe0:	cmp	w1, #0x0
  404fe4:	b.le	405074 <ferror@plt+0x3184>
  404fe8:	stp	x29, x30, [sp, #-64]!
  404fec:	mov	x29, sp
  404ff0:	stp	x21, x22, [sp, #32]
  404ff4:	str	x23, [sp, #48]
  404ff8:	mov	x23, x0
  404ffc:	mov	w21, w1
  405000:	mov	x22, x2
  405004:	adrp	x0, 425000 <argp_error@@Base+0x18e2c>
  405008:	ldr	x0, [x0, #2256]
  40500c:	cbz	x0, 405044 <ferror@plt+0x3154>
  405010:	stp	x19, x20, [sp, #16]
  405014:	ldr	x20, [x2]
  405018:	adrp	x19, 425000 <argp_error@@Base+0x18e2c>
  40501c:	add	x19, x19, #0x8c8
  405020:	add	x19, x19, #0x8
  405024:	mov	x1, x20
  405028:	bl	401cf0 <strcmp@plt>
  40502c:	cbz	w0, 40504c <ferror@plt+0x315c>
  405030:	ldr	x0, [x19, #16]!
  405034:	cbnz	x0, 405024 <ferror@plt+0x3134>
  405038:	mov	w3, #0x2                   	// #2
  40503c:	ldp	x19, x20, [sp, #16]
  405040:	b	405054 <ferror@plt+0x3164>
  405044:	mov	w3, #0x2                   	// #2
  405048:	b	405054 <ferror@plt+0x3164>
  40504c:	mov	w3, #0x1                   	// #1
  405050:	ldp	x19, x20, [sp, #16]
  405054:	mov	x2, x22
  405058:	mov	w1, w21
  40505c:	mov	x0, x23
  405060:	bl	404e60 <ferror@plt+0x2f70>
  405064:	ldp	x21, x22, [sp, #32]
  405068:	ldr	x23, [sp, #48]
  40506c:	ldp	x29, x30, [sp], #64
  405070:	ret
  405074:	ret
  405078:	stp	x29, x30, [sp, #-64]!
  40507c:	mov	x29, sp
  405080:	stp	x19, x20, [sp, #16]
  405084:	stp	x21, x22, [sp, #32]
  405088:	stp	x23, x24, [sp, #48]
  40508c:	mov	x21, x0
  405090:	mov	w20, w1
  405094:	mov	x22, x2
  405098:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  40509c:	ldr	x24, [x0, #1600]
  4050a0:	adrp	x1, 425000 <argp_error@@Base+0x18e2c>
  4050a4:	ldr	x23, [x1, #2248]
  4050a8:	adrp	x2, 426000 <argp_error@@Base+0x19e2c>
  4050ac:	ldr	x2, [x2, #1248]
  4050b0:	str	x2, [x0, #1600]
  4050b4:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  4050b8:	add	x0, x0, #0x634
  4050bc:	str	x0, [x1, #2248]
  4050c0:	cmp	w20, #0x0
  4050c4:	b.le	4050ec <ferror@plt+0x31fc>
  4050c8:	mov	w19, #0x0                   	// #0
  4050cc:	mov	w3, w19
  4050d0:	mov	x2, x22
  4050d4:	mov	w1, w20
  4050d8:	mov	x0, x21
  4050dc:	bl	404e60 <ferror@plt+0x2f70>
  4050e0:	add	w19, w19, #0x1
  4050e4:	cmp	w20, w19
  4050e8:	b.ne	4050cc <ferror@plt+0x31dc>  // b.any
  4050ec:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  4050f0:	str	x24, [x0, #1600]
  4050f4:	adrp	x0, 425000 <argp_error@@Base+0x18e2c>
  4050f8:	str	x23, [x0, #2248]
  4050fc:	ldp	x19, x20, [sp, #16]
  405100:	ldp	x21, x22, [sp, #32]
  405104:	ldp	x23, x24, [sp, #48]
  405108:	ldp	x29, x30, [sp], #64
  40510c:	ret
  405110:	stp	x29, x30, [sp, #-48]!
  405114:	mov	x29, sp
  405118:	stp	x19, x20, [sp, #16]
  40511c:	str	x21, [sp, #32]
  405120:	mov	x19, x0
  405124:	mov	w20, w1
  405128:	mov	x21, x2
  40512c:	ldr	x0, [x0]
  405130:	bl	401e00 <if_nametoindex@plt>
  405134:	cmp	w0, #0x0
  405138:	cset	w3, eq  // eq = none
  40513c:	mov	x2, x21
  405140:	mov	w1, w20
  405144:	mov	x0, x19
  405148:	bl	404e60 <ferror@plt+0x2f70>
  40514c:	ldp	x19, x20, [sp, #16]
  405150:	ldr	x21, [sp, #32]
  405154:	ldp	x29, x30, [sp], #48
  405158:	ret
  40515c:	stp	x29, x30, [sp, #-48]!
  405160:	mov	x29, sp
  405164:	stp	x19, x20, [sp, #16]
  405168:	str	x21, [sp, #32]
  40516c:	mov	x19, x0
  405170:	mov	w20, w1
  405174:	mov	x21, x2
  405178:	ldr	x2, [x0, #8]
  40517c:	mov	w1, #0x8915                	// #35093
  405180:	ldr	w0, [x0, #16]
  405184:	bl	408f90 <argp_parse@@Base+0x1570>
  405188:	tbnz	w0, #31, 4051b0 <ferror@plt+0x32c0>
  40518c:	mov	w3, #0x0                   	// #0
  405190:	mov	x2, x21
  405194:	mov	w1, w20
  405198:	mov	x0, x19
  40519c:	bl	404e60 <ferror@plt+0x2f70>
  4051a0:	ldp	x19, x20, [sp, #16]
  4051a4:	ldr	x21, [sp, #32]
  4051a8:	ldp	x29, x30, [sp], #48
  4051ac:	ret
  4051b0:	mov	w3, #0x1                   	// #1
  4051b4:	mov	x2, x21
  4051b8:	mov	w1, w20
  4051bc:	mov	x0, x19
  4051c0:	bl	404e60 <ferror@plt+0x2f70>
  4051c4:	b	4051a0 <ferror@plt+0x32b0>
  4051c8:	stp	x29, x30, [sp, #-48]!
  4051cc:	mov	x29, sp
  4051d0:	stp	x19, x20, [sp, #16]
  4051d4:	str	x21, [sp, #32]
  4051d8:	mov	x19, x0
  4051dc:	mov	w20, w1
  4051e0:	mov	x21, x2
  4051e4:	ldr	x2, [x0, #8]
  4051e8:	mov	w1, #0x891b                	// #35099
  4051ec:	ldr	w0, [x0, #16]
  4051f0:	bl	408f90 <argp_parse@@Base+0x1570>
  4051f4:	tbnz	w0, #31, 40521c <ferror@plt+0x332c>
  4051f8:	mov	w3, #0x0                   	// #0
  4051fc:	mov	x2, x21
  405200:	mov	w1, w20
  405204:	mov	x0, x19
  405208:	bl	404e60 <ferror@plt+0x2f70>
  40520c:	ldp	x19, x20, [sp, #16]
  405210:	ldr	x21, [sp, #32]
  405214:	ldp	x29, x30, [sp], #48
  405218:	ret
  40521c:	mov	w3, #0x1                   	// #1
  405220:	mov	x2, x21
  405224:	mov	w1, w20
  405228:	mov	x0, x19
  40522c:	bl	404e60 <ferror@plt+0x2f70>
  405230:	b	40520c <ferror@plt+0x331c>
  405234:	stp	x29, x30, [sp, #-80]!
  405238:	mov	x29, sp
  40523c:	stp	x19, x20, [sp, #16]
  405240:	stp	x21, x22, [sp, #32]
  405244:	str	x23, [sp, #48]
  405248:	mov	x19, x0
  40524c:	mov	w23, w1
  405250:	mov	x22, x2
  405254:	ldr	x0, [x0, #8]
  405258:	ldrsh	w21, [x0, #16]
  40525c:	add	x1, sp, #0x4c
  405260:	adrp	x0, 40d000 <argp_error@@Base+0xe2c>
  405264:	add	x0, x0, #0xb90
  405268:	bl	4025d4 <ferror@plt+0x6e4>
  40526c:	cbz	w0, 405294 <ferror@plt+0x33a4>
  405270:	mov	w20, w0
  405274:	ldr	x2, [x19, #8]
  405278:	mov	w1, #0x8913                	// #35091
  40527c:	ldr	w0, [x19, #16]
  405280:	bl	408f90 <argp_parse@@Base+0x1570>
  405284:	tbnz	w0, #31, 405294 <ferror@plt+0x33a4>
  405288:	and	w21, w21, #0xffff
  40528c:	tst	w20, w21
  405290:	b.ne	4052bc <ferror@plt+0x33cc>  // b.any
  405294:	mov	w3, #0x1                   	// #1
  405298:	mov	x2, x22
  40529c:	mov	w1, w23
  4052a0:	mov	x0, x19
  4052a4:	bl	404e60 <ferror@plt+0x2f70>
  4052a8:	ldp	x19, x20, [sp, #16]
  4052ac:	ldp	x21, x22, [sp, #32]
  4052b0:	ldr	x23, [sp, #48]
  4052b4:	ldp	x29, x30, [sp], #80
  4052b8:	ret
  4052bc:	ldr	x2, [x19, #8]
  4052c0:	mov	w1, #0x8919                	// #35097
  4052c4:	ldr	w0, [x19, #16]
  4052c8:	bl	408f90 <argp_parse@@Base+0x1570>
  4052cc:	tbnz	w0, #31, 4052e8 <ferror@plt+0x33f8>
  4052d0:	mov	w3, #0x0                   	// #0
  4052d4:	mov	x2, x22
  4052d8:	mov	w1, w23
  4052dc:	mov	x0, x19
  4052e0:	bl	404e60 <ferror@plt+0x2f70>
  4052e4:	b	4052a8 <ferror@plt+0x33b8>
  4052e8:	mov	w3, #0x1                   	// #1
  4052ec:	mov	x2, x22
  4052f0:	mov	w1, w23
  4052f4:	mov	x0, x19
  4052f8:	bl	404e60 <ferror@plt+0x2f70>
  4052fc:	b	4052a8 <ferror@plt+0x33b8>
  405300:	stp	x29, x30, [sp, #-80]!
  405304:	mov	x29, sp
  405308:	stp	x19, x20, [sp, #16]
  40530c:	stp	x21, x22, [sp, #32]
  405310:	str	x23, [sp, #48]
  405314:	mov	x19, x0
  405318:	mov	w23, w1
  40531c:	mov	x22, x2
  405320:	ldr	x0, [x0, #8]
  405324:	ldrsh	w21, [x0, #16]
  405328:	add	x1, sp, #0x4c
  40532c:	adrp	x0, 40d000 <argp_error@@Base+0xe2c>
  405330:	add	x0, x0, #0xbb8
  405334:	bl	4025d4 <ferror@plt+0x6e4>
  405338:	cbz	w0, 405360 <ferror@plt+0x3470>
  40533c:	mov	w20, w0
  405340:	ldr	x2, [x19, #8]
  405344:	mov	w1, #0x8913                	// #35091
  405348:	ldr	w0, [x19, #16]
  40534c:	bl	408f90 <argp_parse@@Base+0x1570>
  405350:	tbnz	w0, #31, 405360 <ferror@plt+0x3470>
  405354:	and	w21, w21, #0xffff
  405358:	tst	w20, w21
  40535c:	b.ne	405388 <ferror@plt+0x3498>  // b.any
  405360:	mov	w3, #0x1                   	// #1
  405364:	mov	x2, x22
  405368:	mov	w1, w23
  40536c:	mov	x0, x19
  405370:	bl	404e60 <ferror@plt+0x2f70>
  405374:	ldp	x19, x20, [sp, #16]
  405378:	ldp	x21, x22, [sp, #32]
  40537c:	ldr	x23, [sp, #48]
  405380:	ldp	x29, x30, [sp], #80
  405384:	ret
  405388:	ldr	x2, [x19, #8]
  40538c:	mov	w1, #0x8917                	// #35095
  405390:	ldr	w0, [x19, #16]
  405394:	bl	408f90 <argp_parse@@Base+0x1570>
  405398:	tbnz	w0, #31, 4053b4 <ferror@plt+0x34c4>
  40539c:	mov	w3, #0x0                   	// #0
  4053a0:	mov	x2, x22
  4053a4:	mov	w1, w23
  4053a8:	mov	x0, x19
  4053ac:	bl	404e60 <ferror@plt+0x2f70>
  4053b0:	b	405374 <ferror@plt+0x3484>
  4053b4:	mov	w3, #0x1                   	// #1
  4053b8:	mov	x2, x22
  4053bc:	mov	w1, w23
  4053c0:	mov	x0, x19
  4053c4:	bl	404e60 <ferror@plt+0x2f70>
  4053c8:	b	405374 <ferror@plt+0x3484>
  4053cc:	stp	x29, x30, [sp, #-48]!
  4053d0:	mov	x29, sp
  4053d4:	stp	x19, x20, [sp, #16]
  4053d8:	str	x21, [sp, #32]
  4053dc:	mov	x19, x0
  4053e0:	mov	w20, w1
  4053e4:	mov	x21, x2
  4053e8:	ldr	x2, [x0, #8]
  4053ec:	mov	w1, #0x8921                	// #35105
  4053f0:	ldr	w0, [x0, #16]
  4053f4:	bl	408f90 <argp_parse@@Base+0x1570>
  4053f8:	tbnz	w0, #31, 405420 <ferror@plt+0x3530>
  4053fc:	mov	w3, #0x0                   	// #0
  405400:	mov	x2, x21
  405404:	mov	w1, w20
  405408:	mov	x0, x19
  40540c:	bl	404e60 <ferror@plt+0x2f70>
  405410:	ldp	x19, x20, [sp, #16]
  405414:	ldr	x21, [sp, #32]
  405418:	ldp	x29, x30, [sp], #48
  40541c:	ret
  405420:	mov	w3, #0x1                   	// #1
  405424:	mov	x2, x21
  405428:	mov	w1, w20
  40542c:	mov	x0, x19
  405430:	bl	404e60 <ferror@plt+0x2f70>
  405434:	b	405410 <ferror@plt+0x3520>
  405438:	stp	x29, x30, [sp, #-48]!
  40543c:	mov	x29, sp
  405440:	stp	x19, x20, [sp, #16]
  405444:	str	x21, [sp, #32]
  405448:	mov	x19, x0
  40544c:	mov	w20, w1
  405450:	mov	x21, x2
  405454:	ldr	x2, [x0, #8]
  405458:	mov	w1, #0x891d                	// #35101
  40545c:	ldr	w0, [x0, #16]
  405460:	bl	408f90 <argp_parse@@Base+0x1570>
  405464:	tbnz	w0, #31, 405478 <ferror@plt+0x3588>
  405468:	ldr	x0, [x19, #8]
  40546c:	ldr	w0, [x0, #16]
  405470:	cmp	w0, #0x0
  405474:	b.gt	40549c <ferror@plt+0x35ac>
  405478:	mov	w3, #0x1                   	// #1
  40547c:	mov	x2, x21
  405480:	mov	w1, w20
  405484:	mov	x0, x19
  405488:	bl	404e60 <ferror@plt+0x2f70>
  40548c:	ldp	x19, x20, [sp, #16]
  405490:	ldr	x21, [sp, #32]
  405494:	ldp	x29, x30, [sp], #48
  405498:	ret
  40549c:	mov	w3, #0x0                   	// #0
  4054a0:	mov	x2, x21
  4054a4:	mov	w1, w20
  4054a8:	mov	x0, x19
  4054ac:	bl	404e60 <ferror@plt+0x2f70>
  4054b0:	b	40548c <ferror@plt+0x359c>
  4054b4:	stp	x29, x30, [sp, #-48]!
  4054b8:	mov	x29, sp
  4054bc:	stp	x19, x20, [sp, #16]
  4054c0:	str	x21, [sp, #32]
  4054c4:	mov	x19, x0
  4054c8:	mov	w20, w1
  4054cc:	mov	x21, x2
  4054d0:	ldr	x2, [x0, #8]
  4054d4:	mov	w1, #0x8913                	// #35091
  4054d8:	ldr	w0, [x0, #16]
  4054dc:	bl	408f90 <argp_parse@@Base+0x1570>
  4054e0:	tbnz	w0, #31, 405508 <ferror@plt+0x3618>
  4054e4:	mov	w3, #0x0                   	// #0
  4054e8:	mov	x2, x21
  4054ec:	mov	w1, w20
  4054f0:	mov	x0, x19
  4054f4:	bl	404e60 <ferror@plt+0x2f70>
  4054f8:	ldp	x19, x20, [sp, #16]
  4054fc:	ldr	x21, [sp, #32]
  405500:	ldp	x29, x30, [sp], #48
  405504:	ret
  405508:	mov	w3, #0x1                   	// #1
  40550c:	mov	x2, x21
  405510:	mov	w1, w20
  405514:	mov	x0, x19
  405518:	bl	404e60 <ferror@plt+0x2f70>
  40551c:	b	4054f8 <ferror@plt+0x3608>
  405520:	stp	x29, x30, [sp, #-16]!
  405524:	mov	x29, sp
  405528:	mov	w3, #0x1                   	// #1
  40552c:	bl	404e60 <ferror@plt+0x2f70>
  405530:	ldp	x29, x30, [sp], #16
  405534:	ret
  405538:	stp	x29, x30, [sp, #-16]!
  40553c:	mov	x29, sp
  405540:	mov	w3, #0x1                   	// #1
  405544:	bl	404e60 <ferror@plt+0x2f70>
  405548:	ldp	x29, x30, [sp], #16
  40554c:	ret
  405550:	stp	x29, x30, [sp, #-48]!
  405554:	mov	x29, sp
  405558:	stp	x19, x20, [sp, #16]
  40555c:	str	x21, [sp, #32]
  405560:	mov	x19, x0
  405564:	mov	w20, w1
  405568:	mov	x21, x2
  40556c:	ldr	x2, [x0, #8]
  405570:	mov	w1, #0x8970                	// #35184
  405574:	ldr	w0, [x0, #16]
  405578:	bl	408f90 <argp_parse@@Base+0x1570>
  40557c:	tbnz	w0, #31, 4055a4 <ferror@plt+0x36b4>
  405580:	mov	w3, #0x0                   	// #0
  405584:	mov	x2, x21
  405588:	mov	w1, w20
  40558c:	mov	x0, x19
  405590:	bl	404e60 <ferror@plt+0x2f70>
  405594:	ldp	x19, x20, [sp, #16]
  405598:	ldr	x21, [sp, #32]
  40559c:	ldp	x29, x30, [sp], #48
  4055a0:	ret
  4055a4:	mov	w3, #0x1                   	// #1
  4055a8:	mov	x2, x21
  4055ac:	mov	w1, w20
  4055b0:	mov	x0, x19
  4055b4:	bl	404e60 <ferror@plt+0x2f70>
  4055b8:	b	405594 <ferror@plt+0x36a4>
  4055bc:	stp	x29, x30, [sp, #-16]!
  4055c0:	mov	x29, sp
  4055c4:	ldr	x3, [x0, #8]
  4055c8:	ldrb	w3, [x3, #34]
  4055cc:	cbz	w3, 4055e0 <ferror@plt+0x36f0>
  4055d0:	mov	w3, #0x0                   	// #0
  4055d4:	bl	404e60 <ferror@plt+0x2f70>
  4055d8:	ldp	x29, x30, [sp], #16
  4055dc:	ret
  4055e0:	mov	w3, #0x1                   	// #1
  4055e4:	bl	404e60 <ferror@plt+0x2f70>
  4055e8:	b	4055d8 <ferror@plt+0x36e8>
  4055ec:	stp	x29, x30, [sp, #-16]!
  4055f0:	mov	x29, sp
  4055f4:	ldr	x3, [x0, #8]
  4055f8:	ldrh	w3, [x3, #32]
  4055fc:	cmp	w3, #0xff
  405600:	b.ls	405614 <ferror@plt+0x3724>  // b.plast
  405604:	mov	w3, #0x0                   	// #0
  405608:	bl	404e60 <ferror@plt+0x2f70>
  40560c:	ldp	x29, x30, [sp], #16
  405610:	ret
  405614:	mov	w3, #0x1                   	// #1
  405618:	bl	404e60 <ferror@plt+0x2f70>
  40561c:	b	40560c <ferror@plt+0x371c>
  405620:	stp	x29, x30, [sp, #-16]!
  405624:	mov	x29, sp
  405628:	ldr	x3, [x0, #8]
  40562c:	ldr	x3, [x3, #16]
  405630:	cbz	x3, 405644 <ferror@plt+0x3754>
  405634:	mov	w3, #0x0                   	// #0
  405638:	bl	404e60 <ferror@plt+0x2f70>
  40563c:	ldp	x29, x30, [sp], #16
  405640:	ret
  405644:	mov	w3, #0x1                   	// #1
  405648:	bl	404e60 <ferror@plt+0x2f70>
  40564c:	b	40563c <ferror@plt+0x374c>
  405650:	stp	x29, x30, [sp, #-16]!
  405654:	mov	x29, sp
  405658:	ldr	x3, [x0, #8]
  40565c:	ldr	x3, [x3, #24]
  405660:	cbz	x3, 405674 <ferror@plt+0x3784>
  405664:	mov	w3, #0x0                   	// #0
  405668:	bl	404e60 <ferror@plt+0x2f70>
  40566c:	ldp	x29, x30, [sp], #16
  405670:	ret
  405674:	mov	w3, #0x1                   	// #1
  405678:	bl	404e60 <ferror@plt+0x2f70>
  40567c:	b	40566c <ferror@plt+0x377c>
  405680:	stp	x29, x30, [sp, #-16]!
  405684:	mov	x29, sp
  405688:	ldr	x3, [x0, #8]
  40568c:	ldrb	w3, [x3, #35]
  405690:	cbz	w3, 4056a4 <ferror@plt+0x37b4>
  405694:	mov	w3, #0x0                   	// #0
  405698:	bl	404e60 <ferror@plt+0x2f70>
  40569c:	ldp	x29, x30, [sp], #16
  4056a0:	ret
  4056a4:	mov	w3, #0x1                   	// #1
  4056a8:	bl	404e60 <ferror@plt+0x2f70>
  4056ac:	b	40569c <ferror@plt+0x37ac>
  4056b0:	cbz	w1, 405718 <ferror@plt+0x3828>
  4056b4:	stp	x29, x30, [sp, #-48]!
  4056b8:	mov	x29, sp
  4056bc:	stp	x19, x20, [sp, #16]
  4056c0:	stp	x21, x22, [sp, #32]
  4056c4:	mov	x19, x0
  4056c8:	mov	x21, x2
  4056cc:	ldr	x22, [x0]
  4056d0:	adrp	x0, 425000 <argp_error@@Base+0x18e2c>
  4056d4:	ldr	x0, [x0, #1024]
  4056d8:	cbz	x0, 405704 <ferror@plt+0x3814>
  4056dc:	adrp	x20, 425000 <argp_error@@Base+0x18e2c>
  4056e0:	add	x20, x20, #0x400
  4056e4:	str	x0, [x19]
  4056e8:	ldr	x0, [x21]
  4056ec:	str	x0, [x19, #24]
  4056f0:	mov	w1, #0x0                   	// #0
  4056f4:	mov	x0, x19
  4056f8:	bl	404bbc <ferror@plt+0x2ccc>
  4056fc:	ldr	x0, [x20, #24]!
  405700:	cbnz	x0, 4056e4 <ferror@plt+0x37f4>
  405704:	str	x22, [x19]
  405708:	ldp	x19, x20, [sp, #16]
  40570c:	ldp	x21, x22, [sp, #32]
  405710:	ldp	x29, x30, [sp], #48
  405714:	ret
  405718:	ret
  40571c:	cmp	w1, #0x1
  405720:	b.le	4057ac <ferror@plt+0x38bc>
  405724:	stp	x29, x30, [sp, #-64]!
  405728:	mov	x29, sp
  40572c:	stp	x19, x20, [sp, #16]
  405730:	stp	x21, x22, [sp, #32]
  405734:	mov	x20, x0
  405738:	mov	x21, x2
  40573c:	mov	w2, #0xa                   	// #10
  405740:	add	x1, sp, #0x38
  405744:	ldr	x0, [x21]
  405748:	bl	401af0 <strtoul@plt>
  40574c:	mov	x22, x0
  405750:	ldr	x0, [sp, #56]
  405754:	ldrb	w0, [x0]
  405758:	cbnz	w0, 405794 <ferror@plt+0x38a4>
  40575c:	sub	w19, w22, #0x1
  405760:	cbz	w22, 405784 <ferror@plt+0x3894>
  405764:	ldr	x0, [x21, #8]
  405768:	str	x0, [x20, #24]
  40576c:	mov	w1, #0x0                   	// #0
  405770:	mov	x0, x20
  405774:	bl	404bbc <ferror@plt+0x2ccc>
  405778:	sub	w19, w19, #0x1
  40577c:	cmn	w19, #0x1
  405780:	b.ne	405764 <ferror@plt+0x3874>  // b.any
  405784:	ldp	x19, x20, [sp, #16]
  405788:	ldp	x21, x22, [sp, #32]
  40578c:	ldp	x29, x30, [sp], #64
  405790:	ret
  405794:	adrp	x2, 40f000 <argp_error@@Base+0x2e2c>
  405798:	add	x2, x2, #0x608
  40579c:	mov	w1, #0x0                   	// #0
  4057a0:	mov	w0, #0x1                   	// #1
  4057a4:	bl	401b30 <error@plt>
  4057a8:	b	40575c <ferror@plt+0x386c>
  4057ac:	ret
  4057b0:	cmp	w1, #0x1
  4057b4:	b.le	40585c <ferror@plt+0x396c>
  4057b8:	stp	x29, x30, [sp, #-80]!
  4057bc:	mov	x29, sp
  4057c0:	stp	x19, x20, [sp, #16]
  4057c4:	stp	x21, x22, [sp, #32]
  4057c8:	stp	x23, x24, [sp, #48]
  4057cc:	str	x25, [sp, #64]
  4057d0:	mov	x20, x0
  4057d4:	mov	x23, x2
  4057d8:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  4057dc:	ldr	w24, [x0, #1584]
  4057e0:	str	wzr, [x0, #1584]
  4057e4:	mov	x19, x2
  4057e8:	sub	w1, w1, #0x2
  4057ec:	add	x21, x2, x1, lsl #3
  4057f0:	add	x22, x0, #0x630
  4057f4:	mov	w25, #0x1                   	// #1
  4057f8:	b	405800 <ferror@plt+0x3910>
  4057fc:	add	x19, x19, #0x8
  405800:	ldr	x0, [x19, #8]
  405804:	str	x0, [x20, #24]
  405808:	mov	w1, #0x0                   	// #0
  40580c:	mov	x0, x20
  405810:	bl	404bbc <ferror@plt+0x2ccc>
  405814:	cmp	x19, x21
  405818:	b.eq	40583c <ferror@plt+0x394c>  // b.none
  40581c:	ldr	w0, [x22]
  405820:	cbz	w0, 4057fc <ferror@plt+0x390c>
  405824:	ldr	x1, [x23]
  405828:	mov	x0, x20
  40582c:	bl	403fb8 <ferror@plt+0x20c8>
  405830:	str	wzr, [x22]
  405834:	mov	w24, w25
  405838:	b	4057fc <ferror@plt+0x390c>
  40583c:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  405840:	str	w24, [x0, #1584]
  405844:	ldp	x19, x20, [sp, #16]
  405848:	ldp	x21, x22, [sp, #32]
  40584c:	ldp	x23, x24, [sp, #48]
  405850:	ldr	x25, [sp, #64]
  405854:	ldp	x29, x30, [sp], #80
  405858:	ret
  40585c:	ret
  405860:	cmp	w1, #0x0
  405864:	b.le	4058cc <ferror@plt+0x39dc>
  405868:	stp	x29, x30, [sp, #-48]!
  40586c:	mov	x29, sp
  405870:	stp	x19, x20, [sp, #16]
  405874:	str	x21, [sp, #32]
  405878:	mov	x21, x0
  40587c:	mov	x19, x2
  405880:	sub	w1, w1, #0x1
  405884:	add	x2, x2, #0x8
  405888:	add	x20, x2, x1, lsl #3
  40588c:	ldr	x0, [x19]
  405890:	bl	402ef4 <ferror@plt+0x1004>
  405894:	cbnz	x0, 4058a8 <ferror@plt+0x39b8>
  405898:	add	x19, x19, #0x8
  40589c:	cmp	x19, x20
  4058a0:	b.ne	40588c <ferror@plt+0x399c>  // b.any
  4058a4:	b	4058bc <ferror@plt+0x39cc>
  4058a8:	ldr	x0, [x0, #16]
  4058ac:	str	x0, [x21, #24]
  4058b0:	mov	w1, #0x0                   	// #0
  4058b4:	mov	x0, x21
  4058b8:	bl	404bbc <ferror@plt+0x2ccc>
  4058bc:	ldp	x19, x20, [sp, #16]
  4058c0:	ldr	x21, [sp, #32]
  4058c4:	ldp	x29, x30, [sp], #48
  4058c8:	ret
  4058cc:	ret
  4058d0:	stp	x29, x30, [sp, #-64]!
  4058d4:	mov	x29, sp
  4058d8:	adrp	x4, 426000 <argp_error@@Base+0x19e2c>
  4058dc:	ldr	x4, [x4, #1600]
  4058e0:	cbz	x4, 405928 <ferror@plt+0x3a38>
  4058e4:	adrp	x4, 426000 <argp_error@@Base+0x19e2c>
  4058e8:	ldr	w4, [x4, #1432]
  4058ec:	cbnz	w4, 40593c <ferror@plt+0x3a4c>
  4058f0:	mov	w4, #0x1                   	// #1
  4058f4:	str	w4, [sp, #44]
  4058f8:	adrp	x5, 426000 <argp_error@@Base+0x19e2c>
  4058fc:	str	w4, [x5, #1432]
  405900:	str	x1, [sp, #24]
  405904:	str	x2, [sp, #32]
  405908:	str	x3, [sp, #48]
  40590c:	str	w0, [sp, #40]
  405910:	str	wzr, [sp, #56]
  405914:	mov	w1, #0x0                   	// #0
  405918:	add	x0, sp, #0x18
  40591c:	bl	404bbc <ferror@plt+0x2ccc>
  405920:	ldp	x29, x30, [sp], #64
  405924:	ret
  405928:	adrp	x4, 426000 <argp_error@@Base+0x19e2c>
  40592c:	ldr	x5, [x4, #1256]
  405930:	adrp	x4, 426000 <argp_error@@Base+0x19e2c>
  405934:	str	x5, [x4, #1600]
  405938:	b	4058e4 <ferror@plt+0x39f4>
  40593c:	str	wzr, [sp, #44]
  405940:	b	405900 <ferror@plt+0x3a10>
  405944:	stp	x29, x30, [sp, #-16]!
  405948:	mov	x29, sp
  40594c:	ldrb	w4, [x1]
  405950:	ldrb	w3, [x1, #1]
  405954:	ldrb	w2, [x1, #2]
  405958:	ldrb	w1, [x1, #3]
  40595c:	adrp	x0, 40f000 <argp_error@@Base+0x2e2c>
  405960:	add	x0, x0, #0x960
  405964:	bl	401e80 <printf@plt>
  405968:	adrp	x1, 425000 <argp_error@@Base+0x18e2c>
  40596c:	ldr	x2, [x1, #2248]
  405970:	ldr	w1, [x2]
  405974:	add	w1, w1, w0
  405978:	str	w1, [x2]
  40597c:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  405980:	mov	w1, #0x1                   	// #1
  405984:	str	w1, [x0, #1584]
  405988:	ldp	x29, x30, [sp], #16
  40598c:	ret
  405990:	stp	x29, x30, [sp, #-16]!
  405994:	mov	x29, sp
  405998:	ldrb	w5, [x1, #4]
  40599c:	ldrb	w4, [x1, #3]
  4059a0:	ldrb	w3, [x1, #2]
  4059a4:	ldrb	w2, [x1, #1]
  4059a8:	ldrb	w1, [x1]
  4059ac:	adrp	x0, 40f000 <argp_error@@Base+0x2e2c>
  4059b0:	add	x0, x0, #0x978
  4059b4:	bl	401e80 <printf@plt>
  4059b8:	adrp	x1, 425000 <argp_error@@Base+0x18e2c>
  4059bc:	ldr	x2, [x1, #2248]
  4059c0:	ldr	w1, [x2]
  4059c4:	add	w1, w1, w0
  4059c8:	str	w1, [x2]
  4059cc:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  4059d0:	mov	w1, #0x1                   	// #1
  4059d4:	str	w1, [x0, #1584]
  4059d8:	ldp	x29, x30, [sp], #16
  4059dc:	ret
  4059e0:	stp	x29, x30, [sp, #-16]!
  4059e4:	mov	x29, sp
  4059e8:	ldrsh	w1, [x1]
  4059ec:	adrp	x0, 40f000 <argp_error@@Base+0x2e2c>
  4059f0:	add	x0, x0, #0x480
  4059f4:	bl	401e80 <printf@plt>
  4059f8:	adrp	x1, 425000 <argp_error@@Base+0x18e2c>
  4059fc:	ldr	x2, [x1, #2248]
  405a00:	ldr	w1, [x2]
  405a04:	add	w1, w1, w0
  405a08:	str	w1, [x2]
  405a0c:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  405a10:	mov	w1, #0x1                   	// #1
  405a14:	str	w1, [x0, #1584]
  405a18:	ldp	x29, x30, [sp], #16
  405a1c:	ret
  405a20:	stp	x29, x30, [sp, #-16]!
  405a24:	mov	x29, sp
  405a28:	ldrb	w1, [x1]
  405a2c:	adrp	x0, 40f000 <argp_error@@Base+0x2e2c>
  405a30:	add	x0, x0, #0x988
  405a34:	bl	401e80 <printf@plt>
  405a38:	adrp	x1, 425000 <argp_error@@Base+0x18e2c>
  405a3c:	ldr	x2, [x1, #2248]
  405a40:	ldr	w1, [x2]
  405a44:	add	w1, w1, w0
  405a48:	str	w1, [x2]
  405a4c:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  405a50:	mov	w1, #0x1                   	// #1
  405a54:	str	w1, [x0, #1584]
  405a58:	ldp	x29, x30, [sp], #16
  405a5c:	ret
  405a60:	stp	x29, x30, [sp, #-16]!
  405a64:	mov	x29, sp
  405a68:	ldrb	w6, [x1, #5]
  405a6c:	ldrb	w5, [x1, #4]
  405a70:	ldrb	w4, [x1, #3]
  405a74:	ldrb	w3, [x1, #2]
  405a78:	ldrb	w2, [x1, #1]
  405a7c:	ldrb	w1, [x1]
  405a80:	adrp	x0, 40f000 <argp_error@@Base+0x2e2c>
  405a84:	add	x0, x0, #0x990
  405a88:	bl	401e80 <printf@plt>
  405a8c:	adrp	x1, 425000 <argp_error@@Base+0x18e2c>
  405a90:	ldr	x2, [x1, #2248]
  405a94:	ldr	w1, [x2]
  405a98:	add	w1, w1, w0
  405a9c:	str	w1, [x2]
  405aa0:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  405aa4:	mov	w1, #0x1                   	// #1
  405aa8:	str	w1, [x0, #1584]
  405aac:	ldp	x29, x30, [sp], #16
  405ab0:	ret
  405ab4:	stp	x29, x30, [sp, #-48]!
  405ab8:	mov	x29, sp
  405abc:	stp	x19, x20, [sp, #16]
  405ac0:	stp	x21, x22, [sp, #32]
  405ac4:	mov	x20, x0
  405ac8:	mov	x21, x1
  405acc:	mov	x19, x1
  405ad0:	add	x22, x1, #0x6
  405ad4:	ldrb	w1, [x19]
  405ad8:	lsr	w1, w1, #1
  405adc:	cmp	w1, #0x20
  405ae0:	b.eq	405af8 <ferror@plt+0x3c08>  // b.none
  405ae4:	mov	x0, x20
  405ae8:	bl	403e48 <ferror@plt+0x1f58>
  405aec:	add	x19, x19, #0x1
  405af0:	cmp	x19, x22
  405af4:	b.ne	405ad4 <ferror@plt+0x3be4>  // b.any
  405af8:	ldrb	w1, [x21, #6]
  405afc:	ubfx	x1, x1, #1, #4
  405b00:	cbnz	w1, 405b14 <ferror@plt+0x3c24>
  405b04:	ldp	x19, x20, [sp, #16]
  405b08:	ldp	x21, x22, [sp, #32]
  405b0c:	ldp	x29, x30, [sp], #48
  405b10:	ret
  405b14:	adrp	x0, 40f000 <argp_error@@Base+0x2e2c>
  405b18:	add	x0, x0, #0x9b0
  405b1c:	bl	401e80 <printf@plt>
  405b20:	adrp	x1, 425000 <argp_error@@Base+0x18e2c>
  405b24:	ldr	x2, [x1, #2248]
  405b28:	ldr	w1, [x2]
  405b2c:	add	w1, w1, w0
  405b30:	str	w1, [x2]
  405b34:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  405b38:	mov	w1, #0x1                   	// #1
  405b3c:	str	w1, [x0, #1584]
  405b40:	b	405b04 <ferror@plt+0x3c14>
  405b44:	sub	sp, sp, #0x60
  405b48:	stp	x29, x30, [sp, #80]
  405b4c:	add	x29, sp, #0x50
  405b50:	add	x2, x1, #0x60
  405b54:	str	x2, [sp, #72]
  405b58:	add	x2, x1, #0xa8
  405b5c:	str	x2, [sp, #64]
  405b60:	add	x2, x1, #0x68
  405b64:	str	x2, [sp, #56]
  405b68:	add	x2, x1, #0xb0
  405b6c:	str	x2, [sp, #48]
  405b70:	add	x2, x1, #0x48
  405b74:	str	x2, [sp, #40]
  405b78:	add	x2, x1, #0x38
  405b7c:	str	x2, [sp, #32]
  405b80:	add	x2, x1, #0x18
  405b84:	str	x2, [sp, #24]
  405b88:	add	x2, x1, #0x28
  405b8c:	str	x2, [sp, #16]
  405b90:	add	x2, x1, #0x50
  405b94:	str	x2, [sp, #8]
  405b98:	add	x2, x1, #0x58
  405b9c:	str	x2, [sp]
  405ba0:	add	x7, x1, #0x88
  405ba4:	add	x6, x1, #0x90
  405ba8:	add	x5, x1, #0x40
  405bac:	add	x4, x1, #0x30
  405bb0:	add	x3, x1, #0x10
  405bb4:	add	x2, x1, #0x20
  405bb8:	adrp	x1, 40f000 <argp_error@@Base+0x2e2c>
  405bbc:	add	x1, x1, #0x9b8
  405bc0:	bl	401e30 <__isoc99_sscanf@plt>
  405bc4:	cmp	w0, #0x10
  405bc8:	cset	w0, eq  // eq = none
  405bcc:	ldp	x29, x30, [sp, #80]
  405bd0:	add	sp, sp, #0x60
  405bd4:	ret
  405bd8:	sub	sp, sp, #0x60
  405bdc:	stp	x29, x30, [sp, #64]
  405be0:	add	x29, sp, #0x40
  405be4:	str	x19, [sp, #80]
  405be8:	mov	x19, x1
  405bec:	add	x1, x1, #0xa8
  405bf0:	str	x1, [sp, #48]
  405bf4:	add	x1, x19, #0x68
  405bf8:	str	x1, [sp, #40]
  405bfc:	add	x1, x19, #0xb0
  405c00:	str	x1, [sp, #32]
  405c04:	add	x1, x19, #0x48
  405c08:	str	x1, [sp, #24]
  405c0c:	add	x1, x19, #0x38
  405c10:	str	x1, [sp, #16]
  405c14:	add	x1, x19, #0x18
  405c18:	str	x1, [sp, #8]
  405c1c:	add	x1, x19, #0x28
  405c20:	str	x1, [sp]
  405c24:	add	x7, x19, #0x88
  405c28:	add	x6, x19, #0x90
  405c2c:	add	x5, x19, #0x40
  405c30:	add	x4, x19, #0x30
  405c34:	add	x3, x19, #0x10
  405c38:	add	x2, x19, #0x20
  405c3c:	adrp	x1, 40f000 <argp_error@@Base+0x2e2c>
  405c40:	add	x1, x1, #0xa00
  405c44:	bl	401e30 <__isoc99_sscanf@plt>
  405c48:	str	xzr, [x19, #80]
  405c4c:	cmp	w0, #0xd
  405c50:	cset	w0, eq  // eq = none
  405c54:	ldr	x19, [sp, #80]
  405c58:	ldp	x29, x30, [sp, #64]
  405c5c:	add	sp, sp, #0x60
  405c60:	ret
  405c64:	sub	sp, sp, #0x50
  405c68:	stp	x29, x30, [sp, #48]
  405c6c:	add	x29, sp, #0x30
  405c70:	str	x19, [sp, #64]
  405c74:	mov	x19, x1
  405c78:	add	x1, x1, #0xa8
  405c7c:	str	x1, [sp, #32]
  405c80:	add	x1, x19, #0x68
  405c84:	str	x1, [sp, #24]
  405c88:	add	x1, x19, #0xb0
  405c8c:	str	x1, [sp, #16]
  405c90:	add	x1, x19, #0x48
  405c94:	str	x1, [sp, #8]
  405c98:	add	x1, x19, #0x38
  405c9c:	str	x1, [sp]
  405ca0:	add	x7, x19, #0x18
  405ca4:	add	x6, x19, #0x88
  405ca8:	add	x5, x19, #0x90
  405cac:	add	x4, x19, #0x40
  405cb0:	add	x3, x19, #0x30
  405cb4:	add	x2, x19, #0x10
  405cb8:	adrp	x1, 40f000 <argp_error@@Base+0x2e2c>
  405cbc:	add	x1, x1, #0xa38
  405cc0:	bl	401e30 <__isoc99_sscanf@plt>
  405cc4:	str	xzr, [x19, #32]
  405cc8:	str	xzr, [x19, #40]
  405ccc:	str	xzr, [x19, #80]
  405cd0:	cmp	w0, #0xb
  405cd4:	cset	w0, eq  // eq = none
  405cd8:	ldr	x19, [sp, #64]
  405cdc:	ldp	x29, x30, [sp, #48]
  405ce0:	add	sp, sp, #0x50
  405ce4:	ret
  405ce8:	stp	x29, x30, [sp, #-144]!
  405cec:	mov	x29, sp
  405cf0:	stp	x27, x28, [sp, #80]
  405cf4:	mov	w2, #0x0                   	// #0
  405cf8:	mov	w1, #0x2                   	// #2
  405cfc:	mov	w0, w1
  405d00:	bl	401d90 <socket@plt>
  405d04:	mov	x27, #0x0                   	// #0
  405d08:	tbnz	w0, #31, 405ed0 <ferror@plt+0x3fe0>
  405d0c:	stp	x21, x22, [sp, #32]
  405d10:	stp	x23, x24, [sp, #48]
  405d14:	mov	w23, w0
  405d18:	add	x1, sp, #0x88
  405d1c:	adrp	x0, 40f000 <argp_error@@Base+0x2e2c>
  405d20:	add	x0, x0, #0xa68
  405d24:	bl	408850 <argp_parse@@Base+0xe30>
  405d28:	mov	x22, x0
  405d2c:	cbz	x0, 405ee8 <ferror@plt+0x3ff8>
  405d30:	stp	x19, x20, [sp, #16]
  405d34:	ldr	x20, [sp, #136]
  405d38:	mov	x19, #0x0                   	// #0
  405d3c:	mov	w21, #0x3a                  	// #58
  405d40:	sub	x2, x0, x22
  405d44:	sub	x2, x20, x2
  405d48:	mov	w1, w21
  405d4c:	add	x0, x0, #0x1
  405d50:	bl	401dd0 <memchr@plt>
  405d54:	add	x19, x19, #0x1
  405d58:	cbnz	x0, 405d40 <ferror@plt+0x3e50>
  405d5c:	lsl	x0, x19, #4
  405d60:	bl	401be0 <malloc@plt>
  405d64:	mov	x27, x0
  405d68:	cbz	x0, 405da0 <ferror@plt+0x3eb0>
  405d6c:	mov	x2, x20
  405d70:	mov	w1, #0x3a                  	// #58
  405d74:	mov	x0, x22
  405d78:	bl	401dd0 <memchr@plt>
  405d7c:	mov	x19, x0
  405d80:	cbz	x0, 405ee0 <ferror@plt+0x3ff0>
  405d84:	stp	x25, x26, [sp, #64]
  405d88:	mov	x20, x27
  405d8c:	mov	x21, #0x1                   	// #1
  405d90:	mov	w25, #0xffffffff            	// #-1
  405d94:	mov	w24, #0x8933                	// #35123
  405d98:	mov	w26, #0x3a                  	// #58
  405d9c:	b	405e04 <ferror@plt+0x3f14>
  405da0:	bl	401ea0 <__errno_location@plt>
  405da4:	mov	x19, x0
  405da8:	ldr	w20, [x0]
  405dac:	mov	w0, w23
  405db0:	bl	401ca0 <close@plt>
  405db4:	mov	x0, x22
  405db8:	bl	401d30 <free@plt>
  405dbc:	str	w20, [x19]
  405dc0:	ldp	x19, x20, [sp, #16]
  405dc4:	ldp	x21, x22, [sp, #32]
  405dc8:	ldp	x23, x24, [sp, #48]
  405dcc:	b	405ed0 <ferror@plt+0x3fe0>
  405dd0:	ldr	x28, [x28, #8]
  405dd4:	cbz	x28, 405e70 <ferror@plt+0x3f80>
  405dd8:	sub	x0, x19, x22
  405ddc:	ldr	x2, [sp, #136]
  405de0:	sub	x2, x2, x0
  405de4:	mov	w1, w26
  405de8:	mov	x0, x19
  405dec:	bl	401dd0 <memchr@plt>
  405df0:	mov	x19, x0
  405df4:	add	x0, x21, #0x1
  405df8:	add	x20, x20, #0x10
  405dfc:	cbz	x19, 405ea8 <ferror@plt+0x3fb8>
  405e00:	mov	x21, x0
  405e04:	mov	x0, x19
  405e08:	strb	wzr, [x0], #-1
  405e0c:	ldurb	w1, [x19, #-1]
  405e10:	cmp	w1, #0x20
  405e14:	ccmp	w1, #0xa, #0x4, ne  // ne = any
  405e18:	b.eq	405e2c <ferror@plt+0x3f3c>  // b.none
  405e1c:	ldrb	w1, [x0, #-1]!
  405e20:	cmp	w1, #0x20
  405e24:	ccmp	w1, #0xa, #0x4, ne  // ne = any
  405e28:	b.ne	405e1c <ferror@plt+0x3f2c>  // b.any
  405e2c:	add	x0, x0, #0x1
  405e30:	bl	401c80 <strdup@plt>
  405e34:	mov	x1, x0
  405e38:	mov	x28, x20
  405e3c:	str	x0, [x20, #8]
  405e40:	str	w21, [x20]
  405e44:	add	x0, sp, #0x60
  405e48:	bl	401db0 <strcpy@plt>
  405e4c:	str	w25, [sp, #112]
  405e50:	add	x2, sp, #0x60
  405e54:	mov	w1, w24
  405e58:	mov	w0, w23
  405e5c:	bl	408f90 <argp_parse@@Base+0x1570>
  405e60:	tbnz	w0, #31, 405dd0 <ferror@plt+0x3ee0>
  405e64:	ldr	w0, [sp, #112]
  405e68:	str	w0, [x20]
  405e6c:	b	405dd0 <ferror@plt+0x3ee0>
  405e70:	bl	401ea0 <__errno_location@plt>
  405e74:	mov	x19, x0
  405e78:	ldr	w20, [x0]
  405e7c:	mov	w0, w23
  405e80:	bl	401ca0 <close@plt>
  405e84:	mov	x0, x22
  405e88:	bl	401d30 <free@plt>
  405e8c:	str	w20, [x19]
  405e90:	mov	x27, x28
  405e94:	ldp	x19, x20, [sp, #16]
  405e98:	ldp	x21, x22, [sp, #32]
  405e9c:	ldp	x23, x24, [sp, #48]
  405ea0:	ldp	x25, x26, [sp, #64]
  405ea4:	b	405ed0 <ferror@plt+0x3fe0>
  405ea8:	ldp	x25, x26, [sp, #64]
  405eac:	lsl	x21, x21, #4
  405eb0:	add	x0, x27, x21
  405eb4:	str	wzr, [x27, x21]
  405eb8:	str	xzr, [x0, #8]
  405ebc:	mov	x0, x22
  405ec0:	bl	401d30 <free@plt>
  405ec4:	ldp	x19, x20, [sp, #16]
  405ec8:	ldp	x21, x22, [sp, #32]
  405ecc:	ldp	x23, x24, [sp, #48]
  405ed0:	mov	x0, x27
  405ed4:	ldp	x27, x28, [sp, #80]
  405ed8:	ldp	x29, x30, [sp], #144
  405edc:	ret
  405ee0:	mov	x21, #0x0                   	// #0
  405ee4:	b	405eac <ferror@plt+0x3fbc>
  405ee8:	mov	x27, x0
  405eec:	ldp	x21, x22, [sp, #32]
  405ef0:	ldp	x23, x24, [sp, #48]
  405ef4:	b	405ed0 <ferror@plt+0x3fe0>
  405ef8:	mov	w3, w0
  405efc:	adrp	x0, 425000 <argp_error@@Base+0x18e2c>
  405f00:	ldr	x2, [x0, #3616]
  405f04:	cbz	x2, 405f34 <ferror@plt+0x4044>
  405f08:	add	x0, x0, #0xe20
  405f0c:	ldr	w1, [x0, #16]
  405f10:	cmp	w1, w3
  405f14:	b.eq	405f28 <ferror@plt+0x4038>  // b.none
  405f18:	ldr	x2, [x0, #32]!
  405f1c:	cbnz	x2, 405f0c <ferror@plt+0x401c>
  405f20:	mov	x0, x2
  405f24:	b	405f30 <ferror@plt+0x4040>
  405f28:	cmp	x2, #0x0
  405f2c:	csel	x0, x0, x2, ne  // ne = any
  405f30:	ret
  405f34:	mov	x0, x2
  405f38:	b	405f30 <ferror@plt+0x4040>
  405f3c:	stp	x29, x30, [sp, #-112]!
  405f40:	mov	x29, sp
  405f44:	stp	x19, x20, [sp, #16]
  405f48:	stp	x21, x22, [sp, #32]
  405f4c:	mov	x21, x0
  405f50:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  405f54:	ldr	w0, [x0, #1436]
  405f58:	cbz	w0, 405f94 <ferror@plt+0x40a4>
  405f5c:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  405f60:	ldr	x19, [x0, #1616]
  405f64:	cbz	x19, 405f80 <ferror@plt+0x4090>
  405f68:	mov	x1, x21
  405f6c:	ldr	x0, [x19, #8]
  405f70:	bl	401cf0 <strcmp@plt>
  405f74:	cbz	w0, 405f80 <ferror@plt+0x4090>
  405f78:	ldr	x19, [x19]
  405f7c:	cbnz	x19, 405f68 <ferror@plt+0x4078>
  405f80:	mov	x0, x19
  405f84:	ldp	x19, x20, [sp, #16]
  405f88:	ldp	x21, x22, [sp, #32]
  405f8c:	ldp	x29, x30, [sp], #112
  405f90:	ret
  405f94:	stp	x23, x24, [sp, #48]
  405f98:	str	xzr, [sp, #96]
  405f9c:	str	xzr, [sp, #104]
  405fa0:	adrp	x1, 40d000 <argp_error@@Base+0xe2c>
  405fa4:	add	x1, x1, #0xfa8
  405fa8:	adrp	x0, 40f000 <argp_error@@Base+0x2e2c>
  405fac:	add	x0, x0, #0xa68
  405fb0:	bl	401bd0 <fopen@plt>
  405fb4:	mov	x23, x0
  405fb8:	cbz	x0, 406038 <ferror@plt+0x4148>
  405fbc:	mov	x3, x0
  405fc0:	mov	w2, #0xa                   	// #10
  405fc4:	add	x1, sp, #0x68
  405fc8:	add	x0, sp, #0x60
  405fcc:	bl	401ec0 <__getdelim@plt>
  405fd0:	tbnz	x0, #63, 40605c <ferror@plt+0x416c>
  405fd4:	mov	x3, x23
  405fd8:	mov	w2, #0xa                   	// #10
  405fdc:	add	x1, sp, #0x68
  405fe0:	add	x0, sp, #0x60
  405fe4:	bl	401ec0 <__getdelim@plt>
  405fe8:	tbnz	x0, #63, 40605c <ferror@plt+0x416c>
  405fec:	stp	x25, x26, [sp, #64]
  405ff0:	stp	x27, x28, [sp, #80]
  405ff4:	ldr	x19, [sp, #96]
  405ff8:	adrp	x1, 40f000 <argp_error@@Base+0x2e2c>
  405ffc:	add	x1, x1, #0xa98
  406000:	mov	x0, x19
  406004:	bl	401e20 <strstr@plt>
  406008:	mov	w26, #0x2                   	// #2
  40600c:	cbnz	x0, 406028 <ferror@plt+0x4138>
  406010:	adrp	x1, 40f000 <argp_error@@Base+0x2e2c>
  406014:	add	x1, x1, #0xaa8
  406018:	mov	x0, x19
  40601c:	bl	401e20 <strstr@plt>
  406020:	cmp	x0, #0x0
  406024:	cset	w26, ne  // ne = any
  406028:	mov	w25, #0xa                   	// #10
  40602c:	adrp	x24, 410000 <argp_error@@Base+0x3e2c>
  406030:	add	x24, x24, #0x500
  406034:	b	4060f8 <ferror@plt+0x4208>
  406038:	bl	401ea0 <__errno_location@plt>
  40603c:	adrp	x3, 40f000 <argp_error@@Base+0x2e2c>
  406040:	add	x3, x3, #0xa68
  406044:	adrp	x2, 40f000 <argp_error@@Base+0x2e2c>
  406048:	add	x2, x2, #0xa78
  40604c:	ldr	w1, [x0]
  406050:	mov	w0, #0x0                   	// #0
  406054:	bl	401b30 <error@plt>
  406058:	b	406194 <ferror@plt+0x42a4>
  40605c:	bl	401ea0 <__errno_location@plt>
  406060:	adrp	x3, 40f000 <argp_error@@Base+0x2e2c>
  406064:	add	x3, x3, #0xa68
  406068:	adrp	x2, 40f000 <argp_error@@Base+0x2e2c>
  40606c:	add	x2, x2, #0xa88
  406070:	ldr	w1, [x0]
  406074:	mov	w0, #0x0                   	// #0
  406078:	bl	401b30 <error@plt>
  40607c:	mov	x0, x23
  406080:	bl	401bc0 <fclose@plt>
  406084:	ldr	x0, [sp, #96]
  406088:	bl	401d30 <free@plt>
  40608c:	b	406194 <ferror@plt+0x42a4>
  406090:	mov	w1, #0x3a                  	// #58
  406094:	mov	x0, x20
  406098:	bl	401d70 <strchr@plt>
  40609c:	mov	x19, x0
  4060a0:	cbz	x0, 406154 <ferror@plt+0x4264>
  4060a4:	sub	x28, x0, x20
  4060a8:	add	x0, x28, #0x1
  4060ac:	bl	408ccc <argp_parse@@Base+0x12ac>
  4060b0:	mov	x27, x0
  4060b4:	str	x0, [x22, #8]
  4060b8:	mov	x2, x28
  4060bc:	mov	x1, x20
  4060c0:	bl	401aa0 <memcpy@plt>
  4060c4:	strb	wzr, [x27, x28]
  4060c8:	ldr	x2, [x24, w26, sxtw #3]
  4060cc:	mov	x1, x22
  4060d0:	add	x0, x19, #0x1
  4060d4:	blr	x2
  4060d8:	cbz	w0, 4061a8 <ferror@plt+0x42b8>
  4060dc:	str	xzr, [x22]
  4060e0:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  4060e4:	ldr	x0, [x0, #1608]
  4060e8:	cbz	x0, 4061d4 <ferror@plt+0x42e4>
  4060ec:	str	x22, [x0]
  4060f0:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  4060f4:	str	x22, [x0, #1608]
  4060f8:	mov	x3, x23
  4060fc:	mov	w2, w25
  406100:	add	x1, sp, #0x68
  406104:	add	x0, sp, #0x60
  406108:	bl	401ec0 <__getdelim@plt>
  40610c:	cmp	x0, #0x0
  406110:	b.le	40617c <ferror@plt+0x428c>
  406114:	mov	x0, #0xc8                  	// #200
  406118:	bl	408e44 <argp_parse@@Base+0x1424>
  40611c:	mov	x22, x0
  406120:	ldr	x20, [sp, #96]
  406124:	ldrb	w19, [x20]
  406128:	cbz	w19, 406090 <ferror@plt+0x41a0>
  40612c:	tst	w19, #0xffffff80
  406130:	b.ne	406090 <ferror@plt+0x41a0>  // b.any
  406134:	bl	401d00 <__ctype_b_loc@plt>
  406138:	and	x19, x19, #0xff
  40613c:	ldr	x0, [x0]
  406140:	ldrh	w1, [x0, x19, lsl #1]
  406144:	tbz	w1, #13, 406090 <ferror@plt+0x41a0>
  406148:	ldrb	w19, [x20, #1]!
  40614c:	cbnz	w19, 40612c <ferror@plt+0x423c>
  406150:	b	406090 <ferror@plt+0x41a0>
  406154:	bl	401ea0 <__errno_location@plt>
  406158:	adrp	x3, 40f000 <argp_error@@Base+0x2e2c>
  40615c:	add	x3, x3, #0xa68
  406160:	adrp	x2, 40f000 <argp_error@@Base+0x2e2c>
  406164:	add	x2, x2, #0xa88
  406168:	ldr	w1, [x0]
  40616c:	mov	w0, #0x0                   	// #0
  406170:	bl	401b30 <error@plt>
  406174:	mov	x0, x22
  406178:	bl	401d30 <free@plt>
  40617c:	mov	x0, x23
  406180:	bl	401bc0 <fclose@plt>
  406184:	ldr	x0, [sp, #96]
  406188:	bl	401d30 <free@plt>
  40618c:	ldp	x25, x26, [sp, #64]
  406190:	ldp	x27, x28, [sp, #80]
  406194:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  406198:	mov	w1, #0x1                   	// #1
  40619c:	str	w1, [x0, #1436]
  4061a0:	ldp	x23, x24, [sp, #48]
  4061a4:	b	405f5c <ferror@plt+0x406c>
  4061a8:	bl	401ea0 <__errno_location@plt>
  4061ac:	adrp	x3, 40f000 <argp_error@@Base+0x2e2c>
  4061b0:	add	x3, x3, #0xa68
  4061b4:	adrp	x2, 40f000 <argp_error@@Base+0x2e2c>
  4061b8:	add	x2, x2, #0xa88
  4061bc:	ldr	w1, [x0]
  4061c0:	mov	w0, #0x0                   	// #0
  4061c4:	bl	401b30 <error@plt>
  4061c8:	mov	x0, x22
  4061cc:	bl	401d30 <free@plt>
  4061d0:	b	40617c <ferror@plt+0x428c>
  4061d4:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  4061d8:	str	x22, [x0, #1616]
  4061dc:	b	4060f0 <ferror@plt+0x4200>
  4061e0:	stp	x29, x30, [sp, #-48]!
  4061e4:	mov	x29, sp
  4061e8:	stp	x19, x20, [sp, #16]
  4061ec:	str	x21, [sp, #32]
  4061f0:	mov	x19, x0
  4061f4:	mov	w20, w1
  4061f8:	mov	x21, x2
  4061fc:	ldr	x0, [x0, #8]
  406200:	bl	405f3c <ferror@plt+0x404c>
  406204:	cmp	x0, #0x0
  406208:	cset	w3, eq  // eq = none
  40620c:	mov	x2, x21
  406210:	mov	w1, w20
  406214:	mov	x0, x19
  406218:	bl	404e60 <ferror@plt+0x2f70>
  40621c:	ldp	x19, x20, [sp, #16]
  406220:	ldr	x21, [sp, #32]
  406224:	ldp	x29, x30, [sp], #48
  406228:	ret
  40622c:	stp	x29, x30, [sp, #-48]!
  406230:	mov	x29, sp
  406234:	stp	x19, x20, [sp, #16]
  406238:	str	x21, [sp, #32]
  40623c:	mov	x19, x0
  406240:	mov	w20, w1
  406244:	mov	x21, x2
  406248:	ldr	x0, [x0, #8]
  40624c:	bl	405f3c <ferror@plt+0x404c>
  406250:	cbz	x0, 406278 <ferror@plt+0x4388>
  406254:	ldr	x3, [x0, #16]
  406258:	mov	x2, x21
  40625c:	mov	w1, w20
  406260:	mov	x0, x19
  406264:	bl	4043e4 <ferror@plt+0x24f4>
  406268:	ldp	x19, x20, [sp, #16]
  40626c:	ldr	x21, [sp, #32]
  406270:	ldp	x29, x30, [sp], #48
  406274:	ret
  406278:	adrp	x1, 40f000 <argp_error@@Base+0x2e2c>
  40627c:	add	x1, x1, #0xab0
  406280:	mov	x0, x19
  406284:	bl	403fb8 <ferror@plt+0x20c8>
  406288:	b	406268 <ferror@plt+0x4378>
  40628c:	stp	x29, x30, [sp, #-48]!
  406290:	mov	x29, sp
  406294:	stp	x19, x20, [sp, #16]
  406298:	str	x21, [sp, #32]
  40629c:	mov	x19, x0
  4062a0:	mov	w20, w1
  4062a4:	mov	x21, x2
  4062a8:	ldr	x0, [x0, #8]
  4062ac:	bl	405f3c <ferror@plt+0x404c>
  4062b0:	cbz	x0, 4062d8 <ferror@plt+0x43e8>
  4062b4:	ldr	x3, [x0, #24]
  4062b8:	mov	x2, x21
  4062bc:	mov	w1, w20
  4062c0:	mov	x0, x19
  4062c4:	bl	4043e4 <ferror@plt+0x24f4>
  4062c8:	ldp	x19, x20, [sp, #16]
  4062cc:	ldr	x21, [sp, #32]
  4062d0:	ldp	x29, x30, [sp], #48
  4062d4:	ret
  4062d8:	adrp	x1, 40f000 <argp_error@@Base+0x2e2c>
  4062dc:	add	x1, x1, #0xac8
  4062e0:	mov	x0, x19
  4062e4:	bl	403fb8 <ferror@plt+0x20c8>
  4062e8:	b	4062c8 <ferror@plt+0x43d8>
  4062ec:	stp	x29, x30, [sp, #-48]!
  4062f0:	mov	x29, sp
  4062f4:	stp	x19, x20, [sp, #16]
  4062f8:	str	x21, [sp, #32]
  4062fc:	mov	x19, x0
  406300:	mov	w20, w1
  406304:	mov	x21, x2
  406308:	ldr	x0, [x0, #8]
  40630c:	bl	405f3c <ferror@plt+0x404c>
  406310:	cbz	x0, 406338 <ferror@plt+0x4448>
  406314:	ldr	x3, [x0, #32]
  406318:	mov	x2, x21
  40631c:	mov	w1, w20
  406320:	mov	x0, x19
  406324:	bl	4043e4 <ferror@plt+0x24f4>
  406328:	ldp	x19, x20, [sp, #16]
  40632c:	ldr	x21, [sp, #32]
  406330:	ldp	x29, x30, [sp], #48
  406334:	ret
  406338:	adrp	x1, 40f000 <argp_error@@Base+0x2e2c>
  40633c:	add	x1, x1, #0xae0
  406340:	mov	x0, x19
  406344:	bl	403fb8 <ferror@plt+0x20c8>
  406348:	b	406328 <ferror@plt+0x4438>
  40634c:	stp	x29, x30, [sp, #-48]!
  406350:	mov	x29, sp
  406354:	stp	x19, x20, [sp, #16]
  406358:	str	x21, [sp, #32]
  40635c:	mov	x19, x0
  406360:	mov	w20, w1
  406364:	mov	x21, x2
  406368:	ldr	x0, [x0, #8]
  40636c:	bl	405f3c <ferror@plt+0x404c>
  406370:	cbz	x0, 406398 <ferror@plt+0x44a8>
  406374:	ldr	x3, [x0, #40]
  406378:	mov	x2, x21
  40637c:	mov	w1, w20
  406380:	mov	x0, x19
  406384:	bl	4043e4 <ferror@plt+0x24f4>
  406388:	ldp	x19, x20, [sp, #16]
  40638c:	ldr	x21, [sp, #32]
  406390:	ldp	x29, x30, [sp], #48
  406394:	ret
  406398:	adrp	x1, 40f000 <argp_error@@Base+0x2e2c>
  40639c:	add	x1, x1, #0xaf8
  4063a0:	mov	x0, x19
  4063a4:	bl	403fb8 <ferror@plt+0x20c8>
  4063a8:	b	406388 <ferror@plt+0x4498>
  4063ac:	stp	x29, x30, [sp, #-48]!
  4063b0:	mov	x29, sp
  4063b4:	stp	x19, x20, [sp, #16]
  4063b8:	str	x21, [sp, #32]
  4063bc:	mov	x19, x0
  4063c0:	mov	w20, w1
  4063c4:	mov	x21, x2
  4063c8:	ldr	x0, [x0, #8]
  4063cc:	bl	405f3c <ferror@plt+0x404c>
  4063d0:	cbz	x0, 4063f8 <ferror@plt+0x4508>
  4063d4:	ldr	x3, [x0, #48]
  4063d8:	mov	x2, x21
  4063dc:	mov	w1, w20
  4063e0:	mov	x0, x19
  4063e4:	bl	4043e4 <ferror@plt+0x24f4>
  4063e8:	ldp	x19, x20, [sp, #16]
  4063ec:	ldr	x21, [sp, #32]
  4063f0:	ldp	x29, x30, [sp], #48
  4063f4:	ret
  4063f8:	adrp	x1, 40f000 <argp_error@@Base+0x2e2c>
  4063fc:	add	x1, x1, #0xb10
  406400:	mov	x0, x19
  406404:	bl	403fb8 <ferror@plt+0x20c8>
  406408:	b	4063e8 <ferror@plt+0x44f8>
  40640c:	stp	x29, x30, [sp, #-48]!
  406410:	mov	x29, sp
  406414:	stp	x19, x20, [sp, #16]
  406418:	str	x21, [sp, #32]
  40641c:	mov	x19, x0
  406420:	mov	w20, w1
  406424:	mov	x21, x2
  406428:	ldr	x0, [x0, #8]
  40642c:	bl	405f3c <ferror@plt+0x404c>
  406430:	cbz	x0, 406458 <ferror@plt+0x4568>
  406434:	ldr	x3, [x0, #56]
  406438:	mov	x2, x21
  40643c:	mov	w1, w20
  406440:	mov	x0, x19
  406444:	bl	4043e4 <ferror@plt+0x24f4>
  406448:	ldp	x19, x20, [sp, #16]
  40644c:	ldr	x21, [sp, #32]
  406450:	ldp	x29, x30, [sp], #48
  406454:	ret
  406458:	adrp	x1, 40f000 <argp_error@@Base+0x2e2c>
  40645c:	add	x1, x1, #0xb28
  406460:	mov	x0, x19
  406464:	bl	403fb8 <ferror@plt+0x20c8>
  406468:	b	406448 <ferror@plt+0x4558>
  40646c:	stp	x29, x30, [sp, #-48]!
  406470:	mov	x29, sp
  406474:	stp	x19, x20, [sp, #16]
  406478:	str	x21, [sp, #32]
  40647c:	mov	x19, x0
  406480:	mov	w20, w1
  406484:	mov	x21, x2
  406488:	ldr	x0, [x0, #8]
  40648c:	bl	405f3c <ferror@plt+0x404c>
  406490:	cbz	x0, 4064b8 <ferror@plt+0x45c8>
  406494:	ldr	x3, [x0, #64]
  406498:	mov	x2, x21
  40649c:	mov	w1, w20
  4064a0:	mov	x0, x19
  4064a4:	bl	4043e4 <ferror@plt+0x24f4>
  4064a8:	ldp	x19, x20, [sp, #16]
  4064ac:	ldr	x21, [sp, #32]
  4064b0:	ldp	x29, x30, [sp], #48
  4064b4:	ret
  4064b8:	adrp	x1, 40f000 <argp_error@@Base+0x2e2c>
  4064bc:	add	x1, x1, #0xb40
  4064c0:	mov	x0, x19
  4064c4:	bl	403fb8 <ferror@plt+0x20c8>
  4064c8:	b	4064a8 <ferror@plt+0x45b8>
  4064cc:	stp	x29, x30, [sp, #-48]!
  4064d0:	mov	x29, sp
  4064d4:	stp	x19, x20, [sp, #16]
  4064d8:	str	x21, [sp, #32]
  4064dc:	mov	x19, x0
  4064e0:	mov	w20, w1
  4064e4:	mov	x21, x2
  4064e8:	ldr	x0, [x0, #8]
  4064ec:	bl	405f3c <ferror@plt+0x404c>
  4064f0:	cbz	x0, 406518 <ferror@plt+0x4628>
  4064f4:	ldr	x3, [x0, #72]
  4064f8:	mov	x2, x21
  4064fc:	mov	w1, w20
  406500:	mov	x0, x19
  406504:	bl	4043e4 <ferror@plt+0x24f4>
  406508:	ldp	x19, x20, [sp, #16]
  40650c:	ldr	x21, [sp, #32]
  406510:	ldp	x29, x30, [sp], #48
  406514:	ret
  406518:	adrp	x1, 40f000 <argp_error@@Base+0x2e2c>
  40651c:	add	x1, x1, #0xb58
  406520:	mov	x0, x19
  406524:	bl	403fb8 <ferror@plt+0x20c8>
  406528:	b	406508 <ferror@plt+0x4618>
  40652c:	stp	x29, x30, [sp, #-48]!
  406530:	mov	x29, sp
  406534:	stp	x19, x20, [sp, #16]
  406538:	str	x21, [sp, #32]
  40653c:	mov	x19, x0
  406540:	mov	w20, w1
  406544:	mov	x21, x2
  406548:	ldr	x0, [x0, #8]
  40654c:	bl	405f3c <ferror@plt+0x404c>
  406550:	cbz	x0, 406578 <ferror@plt+0x4688>
  406554:	ldr	x3, [x0, #80]
  406558:	mov	x2, x21
  40655c:	mov	w1, w20
  406560:	mov	x0, x19
  406564:	bl	4043e4 <ferror@plt+0x24f4>
  406568:	ldp	x19, x20, [sp, #16]
  40656c:	ldr	x21, [sp, #32]
  406570:	ldp	x29, x30, [sp], #48
  406574:	ret
  406578:	adrp	x1, 40f000 <argp_error@@Base+0x2e2c>
  40657c:	add	x1, x1, #0xb70
  406580:	mov	x0, x19
  406584:	bl	403fb8 <ferror@plt+0x20c8>
  406588:	b	406568 <ferror@plt+0x4678>
  40658c:	stp	x29, x30, [sp, #-48]!
  406590:	mov	x29, sp
  406594:	stp	x19, x20, [sp, #16]
  406598:	str	x21, [sp, #32]
  40659c:	mov	x19, x0
  4065a0:	mov	w20, w1
  4065a4:	mov	x21, x2
  4065a8:	ldr	x0, [x0, #8]
  4065ac:	bl	405f3c <ferror@plt+0x404c>
  4065b0:	cbz	x0, 4065d8 <ferror@plt+0x46e8>
  4065b4:	ldr	x3, [x0, #88]
  4065b8:	mov	x2, x21
  4065bc:	mov	w1, w20
  4065c0:	mov	x0, x19
  4065c4:	bl	4043e4 <ferror@plt+0x24f4>
  4065c8:	ldp	x19, x20, [sp, #16]
  4065cc:	ldr	x21, [sp, #32]
  4065d0:	ldp	x29, x30, [sp], #48
  4065d4:	ret
  4065d8:	adrp	x1, 40f000 <argp_error@@Base+0x2e2c>
  4065dc:	add	x1, x1, #0xb88
  4065e0:	mov	x0, x19
  4065e4:	bl	403fb8 <ferror@plt+0x20c8>
  4065e8:	b	4065c8 <ferror@plt+0x46d8>
  4065ec:	stp	x29, x30, [sp, #-48]!
  4065f0:	mov	x29, sp
  4065f4:	stp	x19, x20, [sp, #16]
  4065f8:	str	x21, [sp, #32]
  4065fc:	mov	x19, x0
  406600:	mov	w20, w1
  406604:	mov	x21, x2
  406608:	ldr	x0, [x0, #8]
  40660c:	bl	405f3c <ferror@plt+0x404c>
  406610:	cbz	x0, 406638 <ferror@plt+0x4748>
  406614:	ldr	x3, [x0, #96]
  406618:	mov	x2, x21
  40661c:	mov	w1, w20
  406620:	mov	x0, x19
  406624:	bl	4043e4 <ferror@plt+0x24f4>
  406628:	ldp	x19, x20, [sp, #16]
  40662c:	ldr	x21, [sp, #32]
  406630:	ldp	x29, x30, [sp], #48
  406634:	ret
  406638:	adrp	x1, 40f000 <argp_error@@Base+0x2e2c>
  40663c:	add	x1, x1, #0xba0
  406640:	mov	x0, x19
  406644:	bl	403fb8 <ferror@plt+0x20c8>
  406648:	b	406628 <ferror@plt+0x4738>
  40664c:	stp	x29, x30, [sp, #-48]!
  406650:	mov	x29, sp
  406654:	stp	x19, x20, [sp, #16]
  406658:	str	x21, [sp, #32]
  40665c:	mov	x19, x0
  406660:	mov	w20, w1
  406664:	mov	x21, x2
  406668:	ldr	x0, [x0, #8]
  40666c:	bl	405f3c <ferror@plt+0x404c>
  406670:	cbz	x0, 406698 <ferror@plt+0x47a8>
  406674:	ldr	x3, [x0, #104]
  406678:	mov	x2, x21
  40667c:	mov	w1, w20
  406680:	mov	x0, x19
  406684:	bl	4043e4 <ferror@plt+0x24f4>
  406688:	ldp	x19, x20, [sp, #16]
  40668c:	ldr	x21, [sp, #32]
  406690:	ldp	x29, x30, [sp], #48
  406694:	ret
  406698:	adrp	x1, 40f000 <argp_error@@Base+0x2e2c>
  40669c:	add	x1, x1, #0xbb8
  4066a0:	mov	x0, x19
  4066a4:	bl	403fb8 <ferror@plt+0x20c8>
  4066a8:	b	406688 <ferror@plt+0x4798>
  4066ac:	stp	x29, x30, [sp, #-48]!
  4066b0:	mov	x29, sp
  4066b4:	stp	x19, x20, [sp, #16]
  4066b8:	str	x21, [sp, #32]
  4066bc:	mov	x19, x0
  4066c0:	mov	w20, w1
  4066c4:	mov	x21, x2
  4066c8:	ldr	x0, [x0, #8]
  4066cc:	bl	405f3c <ferror@plt+0x404c>
  4066d0:	cbz	x0, 4066f8 <ferror@plt+0x4808>
  4066d4:	ldr	x3, [x0, #112]
  4066d8:	mov	x2, x21
  4066dc:	mov	w1, w20
  4066e0:	mov	x0, x19
  4066e4:	bl	4043e4 <ferror@plt+0x24f4>
  4066e8:	ldp	x19, x20, [sp, #16]
  4066ec:	ldr	x21, [sp, #32]
  4066f0:	ldp	x29, x30, [sp], #48
  4066f4:	ret
  4066f8:	adrp	x1, 40f000 <argp_error@@Base+0x2e2c>
  4066fc:	add	x1, x1, #0xbd0
  406700:	mov	x0, x19
  406704:	bl	403fb8 <ferror@plt+0x20c8>
  406708:	b	4066e8 <ferror@plt+0x47f8>
  40670c:	stp	x29, x30, [sp, #-48]!
  406710:	mov	x29, sp
  406714:	stp	x19, x20, [sp, #16]
  406718:	str	x21, [sp, #32]
  40671c:	mov	x19, x0
  406720:	mov	w20, w1
  406724:	mov	x21, x2
  406728:	ldr	x0, [x0, #8]
  40672c:	bl	405f3c <ferror@plt+0x404c>
  406730:	cbz	x0, 406758 <ferror@plt+0x4868>
  406734:	ldr	x3, [x0, #120]
  406738:	mov	x2, x21
  40673c:	mov	w1, w20
  406740:	mov	x0, x19
  406744:	bl	4043e4 <ferror@plt+0x24f4>
  406748:	ldp	x19, x20, [sp, #16]
  40674c:	ldr	x21, [sp, #32]
  406750:	ldp	x29, x30, [sp], #48
  406754:	ret
  406758:	adrp	x1, 40f000 <argp_error@@Base+0x2e2c>
  40675c:	add	x1, x1, #0xbf0
  406760:	mov	x0, x19
  406764:	bl	403fb8 <ferror@plt+0x20c8>
  406768:	b	406748 <ferror@plt+0x4858>
  40676c:	stp	x29, x30, [sp, #-48]!
  406770:	mov	x29, sp
  406774:	stp	x19, x20, [sp, #16]
  406778:	str	x21, [sp, #32]
  40677c:	mov	x19, x0
  406780:	mov	w20, w1
  406784:	mov	x21, x2
  406788:	ldr	x0, [x0, #8]
  40678c:	bl	405f3c <ferror@plt+0x404c>
  406790:	cbz	x0, 4067b8 <ferror@plt+0x48c8>
  406794:	ldr	x3, [x0, #128]
  406798:	mov	x2, x21
  40679c:	mov	w1, w20
  4067a0:	mov	x0, x19
  4067a4:	bl	4043e4 <ferror@plt+0x24f4>
  4067a8:	ldp	x19, x20, [sp, #16]
  4067ac:	ldr	x21, [sp, #32]
  4067b0:	ldp	x29, x30, [sp], #48
  4067b4:	ret
  4067b8:	adrp	x1, 40f000 <argp_error@@Base+0x2e2c>
  4067bc:	add	x1, x1, #0xc10
  4067c0:	mov	x0, x19
  4067c4:	bl	403fb8 <ferror@plt+0x20c8>
  4067c8:	b	4067a8 <ferror@plt+0x48b8>
  4067cc:	stp	x29, x30, [sp, #-48]!
  4067d0:	mov	x29, sp
  4067d4:	stp	x19, x20, [sp, #16]
  4067d8:	str	x21, [sp, #32]
  4067dc:	mov	x19, x0
  4067e0:	mov	w20, w1
  4067e4:	mov	x21, x2
  4067e8:	ldr	x0, [x0, #8]
  4067ec:	bl	405f3c <ferror@plt+0x404c>
  4067f0:	cbz	x0, 406818 <ferror@plt+0x4928>
  4067f4:	ldr	x3, [x0, #136]
  4067f8:	mov	x2, x21
  4067fc:	mov	w1, w20
  406800:	mov	x0, x19
  406804:	bl	4043e4 <ferror@plt+0x24f4>
  406808:	ldp	x19, x20, [sp, #16]
  40680c:	ldr	x21, [sp, #32]
  406810:	ldp	x29, x30, [sp], #48
  406814:	ret
  406818:	adrp	x1, 40f000 <argp_error@@Base+0x2e2c>
  40681c:	add	x1, x1, #0xc28
  406820:	mov	x0, x19
  406824:	bl	403fb8 <ferror@plt+0x20c8>
  406828:	b	406808 <ferror@plt+0x4918>
  40682c:	stp	x29, x30, [sp, #-48]!
  406830:	mov	x29, sp
  406834:	stp	x19, x20, [sp, #16]
  406838:	str	x21, [sp, #32]
  40683c:	mov	x19, x0
  406840:	mov	w20, w1
  406844:	mov	x21, x2
  406848:	ldr	x0, [x0, #8]
  40684c:	bl	405f3c <ferror@plt+0x404c>
  406850:	cbz	x0, 406878 <ferror@plt+0x4988>
  406854:	ldr	x3, [x0, #144]
  406858:	mov	x2, x21
  40685c:	mov	w1, w20
  406860:	mov	x0, x19
  406864:	bl	4043e4 <ferror@plt+0x24f4>
  406868:	ldp	x19, x20, [sp, #16]
  40686c:	ldr	x21, [sp, #32]
  406870:	ldp	x29, x30, [sp], #48
  406874:	ret
  406878:	adrp	x1, 40f000 <argp_error@@Base+0x2e2c>
  40687c:	add	x1, x1, #0xc48
  406880:	mov	x0, x19
  406884:	bl	403fb8 <ferror@plt+0x20c8>
  406888:	b	406868 <ferror@plt+0x4978>
  40688c:	stp	x29, x30, [sp, #-48]!
  406890:	mov	x29, sp
  406894:	stp	x19, x20, [sp, #16]
  406898:	str	x21, [sp, #32]
  40689c:	mov	x19, x0
  4068a0:	mov	w20, w1
  4068a4:	mov	x21, x2
  4068a8:	ldr	x0, [x0, #8]
  4068ac:	bl	405f3c <ferror@plt+0x404c>
  4068b0:	cbz	x0, 4068d8 <ferror@plt+0x49e8>
  4068b4:	ldr	x3, [x0, #152]
  4068b8:	mov	x2, x21
  4068bc:	mov	w1, w20
  4068c0:	mov	x0, x19
  4068c4:	bl	4043e4 <ferror@plt+0x24f4>
  4068c8:	ldp	x19, x20, [sp, #16]
  4068cc:	ldr	x21, [sp, #32]
  4068d0:	ldp	x29, x30, [sp], #48
  4068d4:	ret
  4068d8:	adrp	x1, 40f000 <argp_error@@Base+0x2e2c>
  4068dc:	add	x1, x1, #0xc68
  4068e0:	mov	x0, x19
  4068e4:	bl	403fb8 <ferror@plt+0x20c8>
  4068e8:	b	4068c8 <ferror@plt+0x49d8>
  4068ec:	stp	x29, x30, [sp, #-48]!
  4068f0:	mov	x29, sp
  4068f4:	stp	x19, x20, [sp, #16]
  4068f8:	str	x21, [sp, #32]
  4068fc:	mov	x19, x0
  406900:	mov	w20, w1
  406904:	mov	x21, x2
  406908:	ldr	x0, [x0, #8]
  40690c:	bl	405f3c <ferror@plt+0x404c>
  406910:	cbz	x0, 406938 <ferror@plt+0x4a48>
  406914:	ldr	x3, [x0, #160]
  406918:	mov	x2, x21
  40691c:	mov	w1, w20
  406920:	mov	x0, x19
  406924:	bl	4043e4 <ferror@plt+0x24f4>
  406928:	ldp	x19, x20, [sp, #16]
  40692c:	ldr	x21, [sp, #32]
  406930:	ldp	x29, x30, [sp], #48
  406934:	ret
  406938:	adrp	x1, 40f000 <argp_error@@Base+0x2e2c>
  40693c:	add	x1, x1, #0xc88
  406940:	mov	x0, x19
  406944:	bl	403fb8 <ferror@plt+0x20c8>
  406948:	b	406928 <ferror@plt+0x4a38>
  40694c:	stp	x29, x30, [sp, #-48]!
  406950:	mov	x29, sp
  406954:	stp	x19, x20, [sp, #16]
  406958:	str	x21, [sp, #32]
  40695c:	mov	x19, x0
  406960:	mov	w20, w1
  406964:	mov	x21, x2
  406968:	ldr	x0, [x0, #8]
  40696c:	bl	405f3c <ferror@plt+0x404c>
  406970:	cbz	x0, 406998 <ferror@plt+0x4aa8>
  406974:	ldr	x3, [x0, #168]
  406978:	mov	x2, x21
  40697c:	mov	w1, w20
  406980:	mov	x0, x19
  406984:	bl	4043e4 <ferror@plt+0x24f4>
  406988:	ldp	x19, x20, [sp, #16]
  40698c:	ldr	x21, [sp, #32]
  406990:	ldp	x29, x30, [sp], #48
  406994:	ret
  406998:	adrp	x1, 40f000 <argp_error@@Base+0x2e2c>
  40699c:	add	x1, x1, #0xca8
  4069a0:	mov	x0, x19
  4069a4:	bl	403fb8 <ferror@plt+0x20c8>
  4069a8:	b	406988 <ferror@plt+0x4a98>
  4069ac:	stp	x29, x30, [sp, #-48]!
  4069b0:	mov	x29, sp
  4069b4:	stp	x19, x20, [sp, #16]
  4069b8:	str	x21, [sp, #32]
  4069bc:	mov	x19, x0
  4069c0:	mov	w20, w1
  4069c4:	mov	x21, x2
  4069c8:	ldr	x0, [x0, #8]
  4069cc:	bl	405f3c <ferror@plt+0x404c>
  4069d0:	cbz	x0, 4069f8 <ferror@plt+0x4b08>
  4069d4:	ldr	x3, [x0, #176]
  4069d8:	mov	x2, x21
  4069dc:	mov	w1, w20
  4069e0:	mov	x0, x19
  4069e4:	bl	4043e4 <ferror@plt+0x24f4>
  4069e8:	ldp	x19, x20, [sp, #16]
  4069ec:	ldr	x21, [sp, #32]
  4069f0:	ldp	x29, x30, [sp], #48
  4069f4:	ret
  4069f8:	adrp	x1, 40f000 <argp_error@@Base+0x2e2c>
  4069fc:	add	x1, x1, #0xcc8
  406a00:	mov	x0, x19
  406a04:	bl	403fb8 <ferror@plt+0x20c8>
  406a08:	b	4069e8 <ferror@plt+0x4af8>
  406a0c:	stp	x29, x30, [sp, #-48]!
  406a10:	mov	x29, sp
  406a14:	stp	x19, x20, [sp, #16]
  406a18:	str	x21, [sp, #32]
  406a1c:	mov	x19, x0
  406a20:	mov	w20, w1
  406a24:	mov	x21, x2
  406a28:	ldr	x0, [x0, #8]
  406a2c:	bl	405f3c <ferror@plt+0x404c>
  406a30:	cbz	x0, 406a58 <ferror@plt+0x4b68>
  406a34:	ldr	x3, [x0, #184]
  406a38:	mov	x2, x21
  406a3c:	mov	w1, w20
  406a40:	mov	x0, x19
  406a44:	bl	4043e4 <ferror@plt+0x24f4>
  406a48:	ldp	x19, x20, [sp, #16]
  406a4c:	ldr	x21, [sp, #32]
  406a50:	ldp	x29, x30, [sp], #48
  406a54:	ret
  406a58:	adrp	x1, 40f000 <argp_error@@Base+0x2e2c>
  406a5c:	add	x1, x1, #0xce8
  406a60:	mov	x0, x19
  406a64:	bl	403fb8 <ferror@plt+0x20c8>
  406a68:	b	406a48 <ferror@plt+0x4b58>
  406a6c:	stp	x29, x30, [sp, #-48]!
  406a70:	mov	x29, sp
  406a74:	stp	x19, x20, [sp, #16]
  406a78:	str	x21, [sp, #32]
  406a7c:	mov	x19, x0
  406a80:	mov	w20, w1
  406a84:	mov	x21, x2
  406a88:	ldr	x0, [x0, #8]
  406a8c:	bl	405f3c <ferror@plt+0x404c>
  406a90:	cbz	x0, 406ab8 <ferror@plt+0x4bc8>
  406a94:	ldr	x3, [x0, #192]
  406a98:	mov	x2, x21
  406a9c:	mov	w1, w20
  406aa0:	mov	x0, x19
  406aa4:	bl	4043e4 <ferror@plt+0x24f4>
  406aa8:	ldp	x19, x20, [sp, #16]
  406aac:	ldr	x21, [sp, #32]
  406ab0:	ldp	x29, x30, [sp], #48
  406ab4:	ret
  406ab8:	adrp	x1, 40f000 <argp_error@@Base+0x2e2c>
  406abc:	add	x1, x1, #0xd08
  406ac0:	mov	x0, x19
  406ac4:	bl	403fb8 <ferror@plt+0x20c8>
  406ac8:	b	406aa8 <ferror@plt+0x4bb8>
  406acc:	stp	x29, x30, [sp, #-48]!
  406ad0:	mov	x29, sp
  406ad4:	stp	x19, x20, [sp, #16]
  406ad8:	str	x21, [sp, #32]
  406adc:	mov	x19, x0
  406ae0:	mov	w20, w1
  406ae4:	mov	x21, x2
  406ae8:	ldr	x2, [x0, #8]
  406aec:	mov	w1, #0x8927                	// #35111
  406af0:	ldr	w0, [x0, #16]
  406af4:	bl	408f90 <argp_parse@@Base+0x1570>
  406af8:	tbnz	w0, #31, 406b3c <ferror@plt+0x4c4c>
  406afc:	ldr	x0, [x19, #8]
  406b00:	ldrh	w0, [x0, #16]
  406b04:	bl	405ef8 <ferror@plt+0x4008>
  406b08:	mov	w3, #0x1                   	// #1
  406b0c:	cbz	x0, 406b1c <ferror@plt+0x4c2c>
  406b10:	ldr	x0, [x0, #24]
  406b14:	cmp	x0, #0x0
  406b18:	cset	w3, eq  // eq = none
  406b1c:	mov	x2, x21
  406b20:	mov	w1, w20
  406b24:	mov	x0, x19
  406b28:	bl	404e60 <ferror@plt+0x2f70>
  406b2c:	ldp	x19, x20, [sp, #16]
  406b30:	ldr	x21, [sp, #32]
  406b34:	ldp	x29, x30, [sp], #48
  406b38:	ret
  406b3c:	mov	w3, #0x1                   	// #1
  406b40:	mov	x2, x21
  406b44:	mov	w1, w20
  406b48:	mov	x0, x19
  406b4c:	bl	404e60 <ferror@plt+0x2f70>
  406b50:	b	406afc <ferror@plt+0x4c0c>
  406b54:	stp	x29, x30, [sp, #-32]!
  406b58:	mov	x29, sp
  406b5c:	stp	x19, x20, [sp, #16]
  406b60:	mov	x19, x0
  406b64:	ldr	x2, [x0, #8]
  406b68:	mov	w1, #0x8927                	// #35111
  406b6c:	ldr	w0, [x0, #16]
  406b70:	bl	408f90 <argp_parse@@Base+0x1570>
  406b74:	tbnz	w0, #31, 406ba0 <ferror@plt+0x4cb0>
  406b78:	ldr	x20, [x19, #8]
  406b7c:	ldrh	w0, [x20, #16]
  406b80:	bl	405ef8 <ferror@plt+0x4008>
  406b84:	cbz	x0, 406bc8 <ferror@plt+0x4cd8>
  406b88:	ldr	x2, [x0, #24]
  406b8c:	cbz	x2, 406bc8 <ferror@plt+0x4cd8>
  406b90:	add	x1, x20, #0x12
  406b94:	mov	x0, x19
  406b98:	blr	x2
  406b9c:	b	406bbc <ferror@plt+0x4ccc>
  406ba0:	bl	401ea0 <__errno_location@plt>
  406ba4:	ldr	x3, [x19, #8]
  406ba8:	adrp	x2, 40f000 <argp_error@@Base+0x2e2c>
  406bac:	add	x2, x2, #0xd28
  406bb0:	ldr	w1, [x0]
  406bb4:	mov	w0, #0x1                   	// #1
  406bb8:	bl	401b30 <error@plt>
  406bbc:	ldp	x19, x20, [sp, #16]
  406bc0:	ldp	x29, x30, [sp], #32
  406bc4:	ret
  406bc8:	adrp	x1, 40f000 <argp_error@@Base+0x2e2c>
  406bcc:	add	x1, x1, #0xd50
  406bd0:	mov	x0, x19
  406bd4:	bl	403fb8 <ferror@plt+0x20c8>
  406bd8:	b	406bbc <ferror@plt+0x4ccc>
  406bdc:	stp	x29, x30, [sp, #-48]!
  406be0:	mov	x29, sp
  406be4:	stp	x19, x20, [sp, #16]
  406be8:	str	x21, [sp, #32]
  406bec:	mov	x19, x0
  406bf0:	mov	w20, w1
  406bf4:	mov	x21, x2
  406bf8:	ldr	x2, [x0, #8]
  406bfc:	mov	w1, #0x8927                	// #35111
  406c00:	ldr	w0, [x0, #16]
  406c04:	bl	408f90 <argp_parse@@Base+0x1570>
  406c08:	tbnz	w0, #31, 406c30 <ferror@plt+0x4d40>
  406c0c:	mov	w3, #0x0                   	// #0
  406c10:	mov	x2, x21
  406c14:	mov	w1, w20
  406c18:	mov	x0, x19
  406c1c:	bl	404e60 <ferror@plt+0x2f70>
  406c20:	ldp	x19, x20, [sp, #16]
  406c24:	ldr	x21, [sp, #32]
  406c28:	ldp	x29, x30, [sp], #48
  406c2c:	ret
  406c30:	mov	w3, #0x1                   	// #1
  406c34:	mov	x2, x21
  406c38:	mov	w1, w20
  406c3c:	mov	x0, x19
  406c40:	bl	404e60 <ferror@plt+0x2f70>
  406c44:	b	406c20 <ferror@plt+0x4d30>
  406c48:	stp	x29, x30, [sp, #-32]!
  406c4c:	mov	x29, sp
  406c50:	str	x19, [sp, #16]
  406c54:	mov	x19, x0
  406c58:	ldr	x2, [x0, #8]
  406c5c:	mov	w1, #0x8927                	// #35111
  406c60:	ldr	w0, [x0, #16]
  406c64:	bl	408f90 <argp_parse@@Base+0x1570>
  406c68:	tbnz	w0, #31, 406c94 <ferror@plt+0x4da4>
  406c6c:	ldr	x0, [x19, #8]
  406c70:	ldrh	w0, [x0, #16]
  406c74:	bl	405ef8 <ferror@plt+0x4008>
  406c78:	cbz	x0, 406cb4 <ferror@plt+0x4dc4>
  406c7c:	ldr	x1, [x0, #8]
  406c80:	mov	x0, x19
  406c84:	bl	403fb8 <ferror@plt+0x20c8>
  406c88:	ldr	x19, [sp, #16]
  406c8c:	ldp	x29, x30, [sp], #32
  406c90:	ret
  406c94:	bl	401ea0 <__errno_location@plt>
  406c98:	ldr	x3, [x19, #8]
  406c9c:	adrp	x2, 40f000 <argp_error@@Base+0x2e2c>
  406ca0:	add	x2, x2, #0xd28
  406ca4:	ldr	w1, [x0]
  406ca8:	mov	w0, #0x1                   	// #1
  406cac:	bl	401b30 <error@plt>
  406cb0:	b	406c88 <ferror@plt+0x4d98>
  406cb4:	adrp	x1, 40f000 <argp_error@@Base+0x2e2c>
  406cb8:	add	x1, x1, #0xd68
  406cbc:	mov	x0, x19
  406cc0:	bl	403fb8 <ferror@plt+0x20c8>
  406cc4:	b	406c88 <ferror@plt+0x4d98>
  406cc8:	stp	x29, x30, [sp, #-48]!
  406ccc:	mov	x29, sp
  406cd0:	stp	x19, x20, [sp, #16]
  406cd4:	str	x21, [sp, #32]
  406cd8:	mov	x19, x0
  406cdc:	mov	w20, w1
  406ce0:	mov	x21, x2
  406ce4:	ldr	x2, [x0, #8]
  406ce8:	mov	w1, #0x891d                	// #35101
  406cec:	ldr	w0, [x0, #16]
  406cf0:	bl	408f90 <argp_parse@@Base+0x1570>
  406cf4:	tbnz	w0, #31, 406d1c <ferror@plt+0x4e2c>
  406cf8:	mov	w3, #0x0                   	// #0
  406cfc:	mov	x2, x21
  406d00:	mov	w1, w20
  406d04:	mov	x0, x19
  406d08:	bl	404e60 <ferror@plt+0x2f70>
  406d0c:	ldp	x19, x20, [sp, #16]
  406d10:	ldr	x21, [sp, #32]
  406d14:	ldp	x29, x30, [sp], #48
  406d18:	ret
  406d1c:	mov	w3, #0x1                   	// #1
  406d20:	mov	x2, x21
  406d24:	mov	w1, w20
  406d28:	mov	x0, x19
  406d2c:	bl	404e60 <ferror@plt+0x2f70>
  406d30:	b	406d0c <ferror@plt+0x4e1c>
  406d34:	stp	x29, x30, [sp, #-48]!
  406d38:	mov	x29, sp
  406d3c:	stp	x19, x20, [sp, #16]
  406d40:	str	x21, [sp, #32]
  406d44:	mov	x19, x0
  406d48:	mov	w20, w1
  406d4c:	mov	x21, x2
  406d50:	ldr	x2, [x0, #8]
  406d54:	mov	w1, #0x891d                	// #35101
  406d58:	ldr	w0, [x0, #16]
  406d5c:	bl	408f90 <argp_parse@@Base+0x1570>
  406d60:	tbnz	w0, #31, 406d94 <ferror@plt+0x4ea4>
  406d64:	ldr	x0, [x19, #8]
  406d68:	ldr	w3, [x0, #16]
  406d6c:	cmp	w3, #0x0
  406d70:	csinc	w3, w3, wzr, ne  // ne = any
  406d74:	mov	x2, x21
  406d78:	mov	w1, w20
  406d7c:	mov	x0, x19
  406d80:	bl	404134 <ferror@plt+0x2244>
  406d84:	ldp	x19, x20, [sp, #16]
  406d88:	ldr	x21, [sp, #32]
  406d8c:	ldp	x29, x30, [sp], #48
  406d90:	ret
  406d94:	bl	401ea0 <__errno_location@plt>
  406d98:	ldr	x3, [x19, #8]
  406d9c:	adrp	x2, 40f000 <argp_error@@Base+0x2e2c>
  406da0:	add	x2, x2, #0x4d8
  406da4:	ldr	w1, [x0]
  406da8:	mov	w0, #0x1                   	// #1
  406dac:	bl	401b30 <error@plt>
  406db0:	b	406d84 <ferror@plt+0x4e94>
  406db4:	stp	x29, x30, [sp, #-48]!
  406db8:	mov	x29, sp
  406dbc:	stp	x19, x20, [sp, #16]
  406dc0:	str	x21, [sp, #32]
  406dc4:	mov	x19, x0
  406dc8:	mov	w20, w1
  406dcc:	mov	x21, x2
  406dd0:	ldr	x2, [x0, #8]
  406dd4:	mov	w1, #0x8942                	// #35138
  406dd8:	ldr	w0, [x0, #16]
  406ddc:	bl	408f90 <argp_parse@@Base+0x1570>
  406de0:	tbnz	w0, #31, 406e10 <ferror@plt+0x4f20>
  406de4:	ldr	x0, [x19, #8]
  406de8:	ldr	w3, [x0, #16]
  406dec:	lsr	w3, w3, #31
  406df0:	mov	x2, x21
  406df4:	mov	w1, w20
  406df8:	mov	x0, x19
  406dfc:	bl	404e60 <ferror@plt+0x2f70>
  406e00:	ldp	x19, x20, [sp, #16]
  406e04:	ldr	x21, [sp, #32]
  406e08:	ldp	x29, x30, [sp], #48
  406e0c:	ret
  406e10:	mov	w3, #0x1                   	// #1
  406e14:	mov	x2, x21
  406e18:	mov	w1, w20
  406e1c:	mov	x0, x19
  406e20:	bl	404e60 <ferror@plt+0x2f70>
  406e24:	b	406e00 <ferror@plt+0x4f10>
  406e28:	stp	x29, x30, [sp, #-48]!
  406e2c:	mov	x29, sp
  406e30:	stp	x19, x20, [sp, #16]
  406e34:	str	x21, [sp, #32]
  406e38:	mov	x19, x0
  406e3c:	mov	w20, w1
  406e40:	mov	x21, x2
  406e44:	ldr	x2, [x0, #8]
  406e48:	mov	w1, #0x8942                	// #35138
  406e4c:	ldr	w0, [x0, #16]
  406e50:	bl	408f90 <argp_parse@@Base+0x1570>
  406e54:	tbnz	w0, #31, 406e80 <ferror@plt+0x4f90>
  406e58:	ldr	x0, [x19, #8]
  406e5c:	ldr	w3, [x0, #16]
  406e60:	mov	x2, x21
  406e64:	mov	w1, w20
  406e68:	mov	x0, x19
  406e6c:	bl	404134 <ferror@plt+0x2244>
  406e70:	ldp	x19, x20, [sp, #16]
  406e74:	ldr	x21, [sp, #32]
  406e78:	ldp	x29, x30, [sp], #48
  406e7c:	ret
  406e80:	bl	401ea0 <__errno_location@plt>
  406e84:	ldr	x3, [x19, #8]
  406e88:	adrp	x2, 40f000 <argp_error@@Base+0x2e2c>
  406e8c:	add	x2, x2, #0xd80
  406e90:	ldr	w1, [x0]
  406e94:	mov	w0, #0x1                   	// #1
  406e98:	bl	401b30 <error@plt>
  406e9c:	b	406e70 <ferror@plt+0x4f80>
  406ea0:	stp	x29, x30, [sp, #-48]!
  406ea4:	mov	x29, sp
  406ea8:	stp	x19, x20, [sp, #16]
  406eac:	mov	x19, x0
  406eb0:	mov	x20, x1
  406eb4:	cbz	x0, 406f30 <ferror@plt+0x5040>
  406eb8:	ldr	w0, [x19, #8]
  406ebc:	tbz	w0, #0, 406f4c <ferror@plt+0x505c>
  406ec0:	ldr	x0, [x19, #16]
  406ec4:	ldr	w0, [x0]
  406ec8:	tbnz	w0, #0, 406f90 <ferror@plt+0x50a0>
  406ecc:	mov	w2, #0x0                   	// #0
  406ed0:	add	x1, sp, #0x28
  406ed4:	mov	x0, x20
  406ed8:	bl	401d10 <strtol@plt>
  406edc:	ldr	x1, [x19, #16]
  406ee0:	str	w0, [x1, #4]
  406ee4:	ldrb	w0, [x20]
  406ee8:	cbz	w0, 406ef8 <ferror@plt+0x5008>
  406eec:	ldr	x0, [sp, #40]
  406ef0:	ldrb	w0, [x0]
  406ef4:	cbz	w0, 406f14 <ferror@plt+0x5024>
  406ef8:	ldr	x4, [x19]
  406efc:	mov	x3, x20
  406f00:	adrp	x2, 40f000 <argp_error@@Base+0x2e2c>
  406f04:	add	x2, x2, #0xe38
  406f08:	mov	w1, #0x0                   	// #0
  406f0c:	mov	w0, #0x1                   	// #1
  406f10:	bl	401b30 <error@plt>
  406f14:	ldr	x1, [x19, #16]
  406f18:	ldr	w0, [x1]
  406f1c:	orr	w0, w0, #0x1
  406f20:	str	w0, [x1]
  406f24:	ldp	x19, x20, [sp, #16]
  406f28:	ldp	x29, x30, [sp], #48
  406f2c:	ret
  406f30:	mov	x3, x1
  406f34:	adrp	x2, 40f000 <argp_error@@Base+0x2e2c>
  406f38:	add	x2, x2, #0xda8
  406f3c:	mov	w1, #0x0                   	// #0
  406f40:	mov	w0, #0x1                   	// #1
  406f44:	bl	401b30 <error@plt>
  406f48:	b	406eb8 <ferror@plt+0x4fc8>
  406f4c:	mov	x0, #0x8                   	// #8
  406f50:	bl	401be0 <malloc@plt>
  406f54:	str	x0, [x19, #16]
  406f58:	cbz	x0, 406f74 <ferror@plt+0x5084>
  406f5c:	ldr	x0, [x19, #16]
  406f60:	str	wzr, [x0]
  406f64:	ldr	w0, [x19, #8]
  406f68:	orr	w0, w0, #0x1
  406f6c:	str	w0, [x19, #8]
  406f70:	b	406ec0 <ferror@plt+0x4fd0>
  406f74:	bl	401ea0 <__errno_location@plt>
  406f78:	adrp	x2, 40f000 <argp_error@@Base+0x2e2c>
  406f7c:	add	x2, x2, #0xdd0
  406f80:	ldr	w1, [x0]
  406f84:	mov	w0, #0x1                   	// #1
  406f88:	bl	401b30 <error@plt>
  406f8c:	b	406f5c <ferror@plt+0x506c>
  406f90:	ldr	x3, [x19]
  406f94:	adrp	x2, 40f000 <argp_error@@Base+0x2e2c>
  406f98:	add	x2, x2, #0xe08
  406f9c:	mov	w1, #0x0                   	// #0
  406fa0:	mov	w0, #0x1                   	// #1
  406fa4:	bl	401b30 <error@plt>
  406fa8:	b	406ecc <ferror@plt+0x4fdc>
  406fac:	cmp	w0, #0x54
  406fb0:	b.eq	406fbc <ferror@plt+0x50cc>  // b.none
  406fb4:	mov	w0, #0x7                   	// #7
  406fb8:	ret
  406fbc:	stp	x29, x30, [sp, #-16]!
  406fc0:	mov	x29, sp
  406fc4:	ldr	x0, [x2, #40]
  406fc8:	ldr	x0, [x0]
  406fcc:	bl	406ea0 <ferror@plt+0x4fb0>
  406fd0:	mov	w0, #0x0                   	// #0
  406fd4:	ldp	x29, x30, [sp], #16
  406fd8:	ret
  406fdc:	and	w1, w1, #0xff
  406fe0:	cmp	w1, #0x54
  406fe4:	b.eq	406ff0 <ferror@plt+0x5100>  // b.none
  406fe8:	mov	w0, #0x0                   	// #0
  406fec:	ret
  406ff0:	stp	x29, x30, [sp, #-16]!
  406ff4:	mov	x29, sp
  406ff8:	mov	x1, x2
  406ffc:	ldr	x0, [x0]
  407000:	bl	406ea0 <ferror@plt+0x4fb0>
  407004:	mov	w0, #0x1                   	// #1
  407008:	ldp	x29, x30, [sp], #16
  40700c:	ret
  407010:	stp	x29, x30, [sp, #-96]!
  407014:	mov	x29, sp
  407018:	stp	x19, x20, [sp, #16]
  40701c:	stp	x21, x22, [sp, #32]
  407020:	mov	x22, x0
  407024:	mov	w20, w1
  407028:	mov	x21, x2
  40702c:	ldr	x0, [x2]
  407030:	bl	402f48 <ferror@plt+0x1058>
  407034:	str	x0, [x22]
  407038:	cmp	w20, #0x1
  40703c:	b.le	407418 <ferror@plt+0x5528>
  407040:	stp	x23, x24, [sp, #48]
  407044:	str	x25, [sp, #64]
  407048:	add	x19, x21, #0x8
  40704c:	sub	w20, w20, #0x2
  407050:	add	x21, x21, #0x10
  407054:	add	x20, x21, x20, lsl #3
  407058:	mov	w2, #0x0                   	// #0
  40705c:	adrp	x23, 40e000 <argp_error@@Base+0x1e2c>
  407060:	add	x23, x23, #0x260
  407064:	adrp	x24, 40e000 <argp_error@@Base+0x1e2c>
  407068:	add	x24, x24, #0x210
  40706c:	b	407124 <ferror@plt+0x5234>
  407070:	cbnz	w2, 407170 <ferror@plt+0x5280>
  407074:	ldr	x25, [x19]
  407078:	adrp	x1, 40d000 <argp_error@@Base+0xe2c>
  40707c:	add	x1, x1, #0xff0
  407080:	mov	x0, x25
  407084:	bl	401cf0 <strcmp@plt>
  407088:	cbz	w0, 4072b8 <ferror@plt+0x53c8>
  40708c:	adrp	x1, 40f000 <argp_error@@Base+0x2e2c>
  407090:	add	x1, x1, #0xe70
  407094:	mov	x0, x25
  407098:	bl	401cf0 <strcmp@plt>
  40709c:	mov	w21, w0
  4070a0:	cbnz	w0, 407178 <ferror@plt+0x5288>
  4070a4:	mov	x3, x25
  4070a8:	adrp	x2, 40f000 <argp_error@@Base+0x2e2c>
  4070ac:	add	x2, x2, #0xe78
  4070b0:	mov	w1, #0x0                   	// #0
  4070b4:	mov	w0, #0x0                   	// #0
  4070b8:	bl	401b30 <error@plt>
  4070bc:	ldp	x23, x24, [sp, #48]
  4070c0:	ldr	x25, [sp, #64]
  4070c4:	b	40734c <ferror@plt+0x545c>
  4070c8:	cmp	w2, #0x6
  4070cc:	b.eq	407160 <ferror@plt+0x5270>  // b.none
  4070d0:	cmp	w2, #0x7
  4070d4:	b.ne	4070e8 <ferror@plt+0x51f8>  // b.any
  4070d8:	ldr	x1, [x19]
  4070dc:	ldr	x0, [x22]
  4070e0:	bl	406ea0 <ferror@plt+0x4fb0>
  4070e4:	b	407114 <ferror@plt+0x5224>
  4070e8:	cmp	w2, #0x5
  4070ec:	b.ne	407100 <ferror@plt+0x5210>  // b.any
  4070f0:	ldr	x1, [x19]
  4070f4:	ldr	x0, [x22]
  4070f8:	bl	403238 <ferror@plt+0x1348>
  4070fc:	b	407114 <ferror@plt+0x5224>
  407100:	mov	w2, #0x1                   	// #1
  407104:	b	407118 <ferror@plt+0x5228>
  407108:	ldr	x1, [x19]
  40710c:	ldr	x0, [x22]
  407110:	bl	4031b4 <ferror@plt+0x12c4>
  407114:	mov	w2, #0x1                   	// #1
  407118:	add	x19, x19, #0x8
  40711c:	cmp	x19, x20
  407120:	b.eq	4072c8 <ferror@plt+0x53d8>  // b.none
  407124:	cmp	w2, #0x4
  407128:	b.eq	407150 <ferror@plt+0x5260>  // b.none
  40712c:	b.hi	4070c8 <ferror@plt+0x51d8>  // b.pmore
  407130:	cmp	w2, #0x2
  407134:	b.eq	407108 <ferror@plt+0x5218>  // b.none
  407138:	cmp	w2, #0x3
  40713c:	b.ne	407070 <ferror@plt+0x5180>  // b.any
  407140:	ldr	x1, [x19]
  407144:	ldr	x0, [x22]
  407148:	bl	4035cc <ferror@plt+0x16dc>
  40714c:	b	407114 <ferror@plt+0x5224>
  407150:	ldr	x1, [x19]
  407154:	ldr	x0, [x22]
  407158:	bl	4030ac <ferror@plt+0x11bc>
  40715c:	b	407114 <ferror@plt+0x5224>
  407160:	ldr	x1, [x19]
  407164:	ldr	x0, [x22]
  407168:	bl	4032fc <ferror@plt+0x140c>
  40716c:	b	407114 <ferror@plt+0x5224>
  407170:	cmp	w2, #0x1
  407174:	b.ne	4072c0 <ferror@plt+0x53d0>  // b.any
  407178:	ldr	x21, [x19]
  40717c:	mov	x1, x23
  407180:	mov	x0, x21
  407184:	bl	401cf0 <strcmp@plt>
  407188:	mov	w2, #0x2                   	// #2
  40718c:	cbz	w0, 407118 <ferror@plt+0x5228>
  407190:	mov	x1, x24
  407194:	mov	x0, x21
  407198:	bl	401cf0 <strcmp@plt>
  40719c:	mov	w2, #0x3                   	// #3
  4071a0:	cbz	w0, 407118 <ferror@plt+0x5228>
  4071a4:	adrp	x1, 40f000 <argp_error@@Base+0x2e2c>
  4071a8:	add	x1, x1, #0xea0
  4071ac:	mov	x0, x21
  4071b0:	bl	401cf0 <strcmp@plt>
  4071b4:	mov	w2, #0x3                   	// #3
  4071b8:	cbz	w0, 407118 <ferror@plt+0x5228>
  4071bc:	adrp	x1, 40d000 <argp_error@@Base+0xe2c>
  4071c0:	add	x1, x1, #0xf00
  4071c4:	mov	x0, x21
  4071c8:	bl	401cf0 <strcmp@plt>
  4071cc:	mov	w2, #0x4                   	// #4
  4071d0:	cbz	w0, 407118 <ferror@plt+0x5228>
  4071d4:	adrp	x1, 40e000 <argp_error@@Base+0x1e2c>
  4071d8:	add	x1, x1, #0x2d8
  4071dc:	mov	x0, x21
  4071e0:	bl	401cf0 <strcmp@plt>
  4071e4:	mov	w2, #0x6                   	// #6
  4071e8:	cbz	w0, 407118 <ferror@plt+0x5228>
  4071ec:	adrp	x1, 40e000 <argp_error@@Base+0x1e2c>
  4071f0:	add	x1, x1, #0x2b0
  4071f4:	mov	x0, x21
  4071f8:	bl	401cf0 <strcmp@plt>
  4071fc:	mov	w2, #0x5                   	// #5
  407200:	cbz	w0, 407118 <ferror@plt+0x5228>
  407204:	adrp	x1, 40f000 <argp_error@@Base+0x2e2c>
  407208:	add	x1, x1, #0xeb0
  40720c:	mov	x0, x21
  407210:	bl	401cf0 <strcmp@plt>
  407214:	mov	w2, #0x7                   	// #7
  407218:	cbz	w0, 407118 <ferror@plt+0x5228>
  40721c:	adrp	x1, 40e000 <argp_error@@Base+0x1e2c>
  407220:	add	x1, x1, #0x340
  407224:	mov	x0, x21
  407228:	bl	401cf0 <strcmp@plt>
  40722c:	cbz	w0, 40725c <ferror@plt+0x536c>
  407230:	adrp	x1, 40e000 <argp_error@@Base+0x1e2c>
  407234:	add	x1, x1, #0x380
  407238:	mov	x0, x21
  40723c:	bl	401cf0 <strcmp@plt>
  407240:	cbnz	w0, 407274 <ferror@plt+0x5384>
  407244:	mov	w2, #0x1                   	// #1
  407248:	mov	w1, w2
  40724c:	ldr	x0, [x22]
  407250:	bl	403448 <ferror@plt+0x1558>
  407254:	mov	w2, #0x1                   	// #1
  407258:	b	407118 <ferror@plt+0x5228>
  40725c:	mov	w2, #0x0                   	// #0
  407260:	mov	w1, #0x41                  	// #65
  407264:	ldr	x0, [x22]
  407268:	bl	403448 <ferror@plt+0x1558>
  40726c:	mov	w2, #0x1                   	// #1
  407270:	b	407118 <ferror@plt+0x5228>
  407274:	add	x1, sp, #0x5c
  407278:	mov	x0, x21
  40727c:	bl	4025d4 <ferror@plt+0x6e4>
  407280:	mov	w1, w0
  407284:	mov	w0, #0xffffffb7            	// #-73
  407288:	tst	w1, w0
  40728c:	b.eq	4072a4 <ferror@plt+0x53b4>  // b.none
  407290:	ldr	w2, [sp, #92]
  407294:	ldr	x0, [x22]
  407298:	bl	403448 <ferror@plt+0x1558>
  40729c:	mov	w2, #0x1                   	// #1
  4072a0:	b	407118 <ferror@plt+0x5228>
  4072a4:	ldr	x1, [x19]
  4072a8:	ldr	x0, [x22]
  4072ac:	bl	403028 <ferror@plt+0x1138>
  4072b0:	mov	w2, #0x1                   	// #1
  4072b4:	b	407118 <ferror@plt+0x5228>
  4072b8:	mov	w2, #0x1                   	// #1
  4072bc:	b	407118 <ferror@plt+0x5228>
  4072c0:	mov	w2, #0x1                   	// #1
  4072c4:	b	407118 <ferror@plt+0x5228>
  4072c8:	cmp	w2, #0x4
  4072cc:	b.eq	4073d0 <ferror@plt+0x54e0>  // b.none
  4072d0:	b.ls	407308 <ferror@plt+0x5418>  // b.plast
  4072d4:	cmp	w2, #0x6
  4072d8:	b.eq	4073f4 <ferror@plt+0x5504>  // b.none
  4072dc:	cmp	w2, #0x7
  4072e0:	b.ne	407370 <ferror@plt+0x5480>  // b.any
  4072e4:	adrp	x2, 40f000 <argp_error@@Base+0x2e2c>
  4072e8:	add	x2, x2, #0xf98
  4072ec:	mov	w1, #0x0                   	// #0
  4072f0:	mov	w0, #0x0                   	// #0
  4072f4:	bl	401b30 <error@plt>
  4072f8:	mov	w21, #0x0                   	// #0
  4072fc:	ldp	x23, x24, [sp, #48]
  407300:	ldr	x25, [sp, #64]
  407304:	b	40734c <ferror@plt+0x545c>
  407308:	cmp	w2, #0x2
  40730c:	b.eq	4073ac <ferror@plt+0x54bc>  // b.none
  407310:	b.ls	407340 <ferror@plt+0x5450>  // b.plast
  407314:	cmp	w2, #0x3
  407318:	b.ne	407360 <ferror@plt+0x5470>  // b.any
  40731c:	adrp	x2, 40f000 <argp_error@@Base+0x2e2c>
  407320:	add	x2, x2, #0xee8
  407324:	mov	w1, #0x0                   	// #0
  407328:	mov	w0, #0x0                   	// #0
  40732c:	bl	401b30 <error@plt>
  407330:	mov	w21, #0x0                   	// #0
  407334:	ldp	x23, x24, [sp, #48]
  407338:	ldr	x25, [sp, #64]
  40733c:	b	40734c <ferror@plt+0x545c>
  407340:	cset	w21, ne  // ne = any
  407344:	ldp	x23, x24, [sp, #48]
  407348:	ldr	x25, [sp, #64]
  40734c:	mov	w0, w21
  407350:	ldp	x19, x20, [sp, #16]
  407354:	ldp	x21, x22, [sp, #32]
  407358:	ldp	x29, x30, [sp], #96
  40735c:	ret
  407360:	mov	w21, #0x0                   	// #0
  407364:	ldp	x23, x24, [sp, #48]
  407368:	ldr	x25, [sp, #64]
  40736c:	b	40734c <ferror@plt+0x545c>
  407370:	cmp	w2, #0x5
  407374:	b.ne	40739c <ferror@plt+0x54ac>  // b.any
  407378:	adrp	x2, 40f000 <argp_error@@Base+0x2e2c>
  40737c:	add	x2, x2, #0xf70
  407380:	mov	w1, #0x0                   	// #0
  407384:	mov	w0, #0x0                   	// #0
  407388:	bl	401b30 <error@plt>
  40738c:	mov	w21, #0x0                   	// #0
  407390:	ldp	x23, x24, [sp, #48]
  407394:	ldr	x25, [sp, #64]
  407398:	b	40734c <ferror@plt+0x545c>
  40739c:	mov	w21, #0x0                   	// #0
  4073a0:	ldp	x23, x24, [sp, #48]
  4073a4:	ldr	x25, [sp, #64]
  4073a8:	b	40734c <ferror@plt+0x545c>
  4073ac:	adrp	x2, 40f000 <argp_error@@Base+0x2e2c>
  4073b0:	add	x2, x2, #0xec0
  4073b4:	mov	w1, #0x0                   	// #0
  4073b8:	mov	w0, #0x0                   	// #0
  4073bc:	bl	401b30 <error@plt>
  4073c0:	mov	w21, #0x0                   	// #0
  4073c4:	ldp	x23, x24, [sp, #48]
  4073c8:	ldr	x25, [sp, #64]
  4073cc:	b	40734c <ferror@plt+0x545c>
  4073d0:	adrp	x2, 40f000 <argp_error@@Base+0x2e2c>
  4073d4:	add	x2, x2, #0xf20
  4073d8:	mov	w1, #0x0                   	// #0
  4073dc:	mov	w0, #0x0                   	// #0
  4073e0:	bl	401b30 <error@plt>
  4073e4:	mov	w21, #0x0                   	// #0
  4073e8:	ldp	x23, x24, [sp, #48]
  4073ec:	ldr	x25, [sp, #64]
  4073f0:	b	40734c <ferror@plt+0x545c>
  4073f4:	adrp	x2, 40f000 <argp_error@@Base+0x2e2c>
  4073f8:	add	x2, x2, #0xf48
  4073fc:	mov	w1, #0x0                   	// #0
  407400:	mov	w0, #0x0                   	// #0
  407404:	bl	401b30 <error@plt>
  407408:	mov	w21, #0x0                   	// #0
  40740c:	ldp	x23, x24, [sp, #48]
  407410:	ldr	x25, [sp, #64]
  407414:	b	40734c <ferror@plt+0x545c>
  407418:	mov	w21, #0x1                   	// #1
  40741c:	b	40734c <ferror@plt+0x545c>
  407420:	ldr	w3, [x2]
  407424:	tbnz	w3, #0, 407430 <ferror@plt+0x5540>
  407428:	mov	w0, #0x0                   	// #0
  40742c:	ret
  407430:	stp	x29, x30, [sp, #-32]!
  407434:	mov	x29, sp
  407438:	str	x19, [sp, #16]
  40743c:	mov	x19, x1
  407440:	ldr	w1, [x2, #4]
  407444:	str	w1, [x19, #16]
  407448:	mov	x2, x19
  40744c:	mov	w1, #0x8943                	// #35139
  407450:	bl	408f90 <argp_parse@@Base+0x1570>
  407454:	tbnz	w0, #31, 407474 <ferror@plt+0x5584>
  407458:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  40745c:	ldr	w0, [x0, #1576]
  407460:	cbnz	w0, 407490 <ferror@plt+0x55a0>
  407464:	mov	w0, #0x0                   	// #0
  407468:	ldr	x19, [sp, #16]
  40746c:	ldp	x29, x30, [sp], #32
  407470:	ret
  407474:	bl	401ea0 <__errno_location@plt>
  407478:	adrp	x2, 40f000 <argp_error@@Base+0x2e2c>
  40747c:	add	x2, x2, #0xfc8
  407480:	ldr	w1, [x0]
  407484:	mov	w0, #0x0                   	// #0
  407488:	bl	401b30 <error@plt>
  40748c:	b	407458 <ferror@plt+0x5568>
  407490:	ldr	w2, [x19, #16]
  407494:	mov	x1, x19
  407498:	adrp	x0, 40f000 <argp_error@@Base+0x2e2c>
  40749c:	add	x0, x0, #0xfe0
  4074a0:	bl	401e80 <printf@plt>
  4074a4:	b	407464 <ferror@plt+0x5574>
  4074a8:	stp	x29, x30, [sp, #-32]!
  4074ac:	mov	x29, sp
  4074b0:	stp	x19, x20, [sp, #16]
  4074b4:	mov	x19, x0
  4074b8:	mov	w0, w2
  4074bc:	ldr	x2, [x19]
  4074c0:	cbz	x2, 40750c <ferror@plt+0x561c>
  4074c4:	mov	x20, x1
  4074c8:	mov	x1, x3
  4074cc:	ldr	x2, [x19, #64]
  4074d0:	str	x2, [x20, #56]
  4074d4:	ldr	x2, [x19, #48]
  4074d8:	str	x2, [x20, #40]
  4074dc:	ldr	x2, [x19, #56]
  4074e0:	str	x2, [x20, #48]
  4074e4:	ldr	w2, [x19, #24]
  4074e8:	str	w2, [x20, #32]
  4074ec:	ldr	x3, [x19]
  4074f0:	mov	x2, x20
  4074f4:	blr	x3
  4074f8:	ldr	x1, [x20, #56]
  4074fc:	str	x1, [x19, #64]
  407500:	ldp	x19, x20, [sp, #16]
  407504:	ldp	x29, x30, [sp], #32
  407508:	ret
  40750c:	mov	w0, #0x7                   	// #7
  407510:	b	407500 <ferror@plt+0x5610>
  407514:	stp	x29, x30, [sp, #-32]!
  407518:	mov	x29, sp
  40751c:	stp	x19, x20, [sp, #16]
  407520:	mov	x19, x1
  407524:	ldr	x20, [x0, #32]
  407528:	ldr	x2, [x0]
  40752c:	cbz	x2, 407544 <ferror@plt+0x5654>
  407530:	ldr	x0, [x1, #16]
  407534:	add	x0, x0, #0x1
  407538:	str	x0, [x1, #16]
  40753c:	mov	w0, #0x0                   	// #0
  407540:	b	407560 <ferror@plt+0x5670>
  407544:	ldr	x0, [x0, #8]
  407548:	cbz	x0, 4075a0 <ferror@plt+0x56b0>
  40754c:	ldr	x0, [x1, #16]
  407550:	add	x0, x0, #0x1
  407554:	str	x0, [x1, #16]
  407558:	b	4075a0 <ferror@plt+0x56b0>
  40755c:	add	w0, w0, #0x1
  407560:	add	x2, x2, #0x30
  407564:	ldur	w3, [x2, #-40]
  407568:	cbnz	w3, 40755c <ferror@plt+0x566c>
  40756c:	ldur	x3, [x2, #-48]
  407570:	cbnz	x3, 40755c <ferror@plt+0x566c>
  407574:	ldur	x1, [x2, #-16]
  407578:	cbnz	x1, 40755c <ferror@plt+0x566c>
  40757c:	ldur	w1, [x2, #-8]
  407580:	cbnz	w1, 40755c <ferror@plt+0x566c>
  407584:	add	w1, w0, w0, lsl #1
  407588:	ldr	x2, [x19]
  40758c:	add	x1, x2, w1, sxtw
  407590:	str	x1, [x19]
  407594:	ldr	x1, [x19, #8]
  407598:	add	x0, x1, w0, sxtw
  40759c:	str	x0, [x19, #8]
  4075a0:	cbz	x20, 4075c8 <ferror@plt+0x56d8>
  4075a4:	ldr	x0, [x20]
  4075a8:	cbz	x0, 4075c8 <ferror@plt+0x56d8>
  4075ac:	mov	x1, x19
  4075b0:	bl	407514 <ferror@plt+0x5624>
  4075b4:	ldr	x0, [x19, #24]
  4075b8:	add	x0, x0, #0x1
  4075bc:	str	x0, [x19, #24]
  4075c0:	ldr	x0, [x20, #32]!
  4075c4:	cbnz	x0, 4075ac <ferror@plt+0x56bc>
  4075c8:	ldp	x19, x20, [sp, #16]
  4075cc:	ldp	x29, x30, [sp], #32
  4075d0:	ret
  4075d4:	cmp	w0, #0x56
  4075d8:	b.eq	4075e4 <ferror@plt+0x56f4>  // b.none
  4075dc:	mov	w0, #0x7                   	// #7
  4075e0:	ret
  4075e4:	stp	x29, x30, [sp, #-32]!
  4075e8:	mov	x29, sp
  4075ec:	str	x19, [sp, #16]
  4075f0:	mov	x19, x2
  4075f4:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  4075f8:	ldr	x2, [x0, #1448]
  4075fc:	cbz	x2, 407624 <ferror@plt+0x5734>
  407600:	mov	x1, x19
  407604:	ldr	x0, [x19, #80]
  407608:	blr	x2
  40760c:	ldr	w1, [x19, #28]
  407610:	mov	w0, #0x0                   	// #0
  407614:	tbz	w1, #5, 407660 <ferror@plt+0x5770>
  407618:	ldr	x19, [sp, #16]
  40761c:	ldp	x29, x30, [sp], #32
  407620:	ret
  407624:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  407628:	ldr	x2, [x0, #1632]
  40762c:	cbz	x2, 407644 <ferror@plt+0x5754>
  407630:	adrp	x1, 410000 <argp_error@@Base+0x3e2c>
  407634:	add	x1, x1, #0x8b8
  407638:	ldr	x0, [x19, #80]
  40763c:	bl	401ed0 <fprintf@plt>
  407640:	b	40760c <ferror@plt+0x571c>
  407644:	adrp	x2, 410000 <argp_error@@Base+0x3e2c>
  407648:	add	x2, x2, #0x518
  40764c:	adrp	x1, 40e000 <argp_error@@Base+0x1e2c>
  407650:	add	x1, x1, #0x90
  407654:	mov	x0, x19
  407658:	bl	40c1d4 <argp_error@@Base>
  40765c:	b	40760c <ferror@plt+0x571c>
  407660:	bl	401b20 <exit@plt>
  407664:	stp	x29, x30, [sp, #-32]!
  407668:	mov	x29, sp
  40766c:	stp	x19, x20, [sp, #16]
  407670:	mov	x20, x1
  407674:	mov	x19, x2
  407678:	cmn	w0, #0x2
  40767c:	b.eq	4076e4 <ferror@plt+0x57f4>  // b.none
  407680:	mov	w3, w0
  407684:	cmn	w0, #0x1
  407688:	b.ge	4076b8 <ferror@plt+0x57c8>  // b.tcont
  40768c:	cmn	w0, #0x4
  407690:	b.eq	407724 <ferror@plt+0x5834>  // b.none
  407694:	mov	w0, #0x7                   	// #7
  407698:	cmn	w3, #0x3
  40769c:	b.ne	4076d8 <ferror@plt+0x57e8>  // b.any
  4076a0:	mov	w2, #0x201                 	// #513
  4076a4:	ldr	x1, [x19, #80]
  4076a8:	mov	x0, x19
  4076ac:	bl	40c134 <argp_state_help@@Base>
  4076b0:	mov	w0, #0x0                   	// #0
  4076b4:	b	4076d8 <ferror@plt+0x57e8>
  4076b8:	mov	w0, #0x7                   	// #7
  4076bc:	cmp	w3, #0x3f
  4076c0:	b.ne	4076d8 <ferror@plt+0x57e8>  // b.any
  4076c4:	mov	w2, #0x27a                 	// #634
  4076c8:	ldr	x1, [x19, #80]
  4076cc:	mov	x0, x19
  4076d0:	bl	40c134 <argp_state_help@@Base>
  4076d4:	mov	w0, #0x0                   	// #0
  4076d8:	ldp	x19, x20, [sp, #16]
  4076dc:	ldp	x29, x30, [sp], #32
  4076e0:	ret
  4076e4:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  4076e8:	str	x1, [x0, #1240]
  4076ec:	mov	x0, x1
  4076f0:	bl	4084bc <argp_parse@@Base+0xa9c>
  4076f4:	str	x0, [x19, #64]
  4076f8:	adrp	x1, 426000 <argp_error@@Base+0x19e2c>
  4076fc:	str	x0, [x1, #1264]
  407700:	ldr	w1, [x19, #28]
  407704:	and	w1, w1, #0x3
  407708:	mov	w0, #0x0                   	// #0
  40770c:	cmp	w1, #0x1
  407710:	b.ne	4076d8 <ferror@plt+0x57e8>  // b.any
  407714:	ldr	x0, [x19, #16]
  407718:	str	x20, [x0]
  40771c:	mov	w0, #0x0                   	// #0
  407720:	b	4076d8 <ferror@plt+0x57e8>
  407724:	adrp	x0, 410000 <argp_error@@Base+0x3e2c>
  407728:	add	x0, x0, #0x540
  40772c:	cmp	x1, #0x0
  407730:	mov	w2, #0xa                   	// #10
  407734:	mov	x1, #0x0                   	// #0
  407738:	csel	x0, x0, x20, eq  // eq = none
  40773c:	bl	401d10 <strtol@plt>
  407740:	adrp	x1, 426000 <argp_error@@Base+0x19e2c>
  407744:	str	w0, [x1, #1440]
  407748:	ldr	w0, [x1, #1440]
  40774c:	sub	w2, w0, #0x1
  407750:	str	w2, [x1, #1440]
  407754:	cmp	w0, #0x0
  407758:	b.le	407788 <ferror@plt+0x5898>
  40775c:	mov	w20, #0x1                   	// #1
  407760:	add	x19, x1, #0x5a0
  407764:	mov	w0, w20
  407768:	bl	401c30 <sleep@plt>
  40776c:	ldr	w0, [x19]
  407770:	sub	w1, w0, #0x1
  407774:	str	w1, [x19]
  407778:	cmp	w0, #0x0
  40777c:	b.gt	407764 <ferror@plt+0x5874>
  407780:	mov	w0, #0x0                   	// #0
  407784:	b	4076d8 <ferror@plt+0x57e8>
  407788:	mov	w0, #0x0                   	// #0
  40778c:	b	4076d8 <ferror@plt+0x57e8>
  407790:	stp	x29, x30, [sp, #-128]!
  407794:	mov	x29, sp
  407798:	stp	x19, x20, [sp, #16]
  40779c:	stp	x21, x22, [sp, #32]
  4077a0:	stp	x25, x26, [sp, #64]
  4077a4:	stp	x27, x28, [sp, #80]
  4077a8:	str	x0, [sp, #104]
  4077ac:	str	x1, [sp, #112]
  4077b0:	str	w2, [sp, #124]
  4077b4:	mov	x26, x3
  4077b8:	mov	x22, x4
  4077bc:	ldr	x20, [x0]
  4077c0:	ldr	x27, [x0, #32]
  4077c4:	cbz	x20, 4077d8 <ferror@plt+0x58e8>
  4077c8:	stp	x23, x24, [sp, #48]
  4077cc:	mov	x19, x20
  4077d0:	mov	w28, #0x3a                  	// #58
  4077d4:	b	407810 <ferror@plt+0x5920>
  4077d8:	ldr	x0, [sp, #104]
  4077dc:	ldr	x0, [x0, #8]
  4077e0:	cbnz	x0, 40795c <ferror@plt+0x5a6c>
  4077e4:	mov	x26, x20
  4077e8:	b	4079cc <ferror@plt+0x5adc>
  4077ec:	ldr	x0, [x21, #32]!
  4077f0:	cbz	x0, 4078c0 <ferror@plt+0x59d0>
  4077f4:	mov	x1, x23
  4077f8:	bl	401cf0 <strcmp@plt>
  4077fc:	cbnz	w0, 4077ec <ferror@plt+0x58fc>
  407800:	sub	x21, x21, x25
  407804:	asr	x21, x21, #5
  407808:	tbnz	w21, #31, 4078c0 <ferror@plt+0x59d0>
  40780c:	add	x19, x19, #0x30
  407810:	ldr	w21, [x19, #8]
  407814:	cbnz	w21, 407820 <ferror@plt+0x5930>
  407818:	ldr	x0, [x19]
  40781c:	cbz	x0, 407948 <ferror@plt+0x5a58>
  407820:	ldr	w1, [x19, #24]
  407824:	tst	x1, #0x4
  407828:	csel	x20, x20, x19, ne  // ne = any
  40782c:	ldr	w0, [x20, #24]
  407830:	and	w24, w0, #0x8
  407834:	tbnz	w0, #3, 40780c <ferror@plt+0x591c>
  407838:	tbnz	w1, #3, 4078a0 <ferror@plt+0x59b0>
  40783c:	sub	w0, w21, #0x1
  407840:	cmp	w0, #0xfe
  407844:	b.hi	4078a0 <ferror@plt+0x59b0>  // b.pmore
  407848:	bl	401d00 <__ctype_b_loc@plt>
  40784c:	ldr	x0, [x0]
  407850:	ldrh	w0, [x0, w21, sxtw #1]
  407854:	tbz	w0, #14, 4078a0 <ferror@plt+0x59b0>
  407858:	ldr	x0, [x22, #8]
  40785c:	add	x1, x0, #0x1
  407860:	str	x1, [x22, #8]
  407864:	strb	w21, [x0]
  407868:	ldr	x0, [x20, #16]
  40786c:	cbz	x0, 407898 <ferror@plt+0x59a8>
  407870:	ldr	x0, [x22, #8]
  407874:	add	x1, x0, #0x1
  407878:	str	x1, [x22, #8]
  40787c:	strb	w28, [x0]
  407880:	ldr	w0, [x20, #24]
  407884:	tbz	w0, #0, 407898 <ferror@plt+0x59a8>
  407888:	ldr	x0, [x22, #8]
  40788c:	add	x1, x0, #0x1
  407890:	str	x1, [x22, #8]
  407894:	strb	w28, [x0]
  407898:	ldr	x0, [x22, #8]
  40789c:	strb	wzr, [x0]
  4078a0:	ldr	x23, [x19]
  4078a4:	cbz	x23, 40780c <ferror@plt+0x591c>
  4078a8:	ldr	x0, [x22]
  4078ac:	ldr	x25, [x0, #16]
  4078b0:	ldr	x0, [x25]
  4078b4:	cbz	x0, 4078c0 <ferror@plt+0x59d0>
  4078b8:	mov	x21, x25
  4078bc:	b	4077f4 <ferror@plt+0x5904>
  4078c0:	ldr	x0, [x22, #16]
  4078c4:	str	x23, [x0]
  4078c8:	ldr	x0, [x20, #16]
  4078cc:	cbz	x0, 4078dc <ferror@plt+0x59ec>
  4078d0:	ldr	w24, [x20, #24]
  4078d4:	and	w24, w24, #0x1
  4078d8:	add	w24, w24, #0x1
  4078dc:	ldr	x0, [x22, #16]
  4078e0:	str	w24, [x0, #8]
  4078e4:	ldr	x0, [x22, #16]
  4078e8:	str	xzr, [x0, #16]
  4078ec:	ldr	w0, [x19, #8]
  4078f0:	and	w1, w0, #0xffffff
  4078f4:	cbnz	w0, 407900 <ferror@plt+0x5a10>
  4078f8:	ldr	w0, [x20, #8]
  4078fc:	and	w1, w0, #0xffffff
  407900:	ldr	x2, [x22, #16]
  407904:	ldr	x0, [x22]
  407908:	ldr	x0, [x0, #80]
  40790c:	sub	x0, x26, x0
  407910:	asr	x0, x0, #3
  407914:	mov	x3, #0x8e39                	// #36409
  407918:	movk	x3, #0x38e3, lsl #16
  40791c:	movk	x3, #0xe38e, lsl #32
  407920:	movk	x3, #0x8e38, lsl #48
  407924:	mul	x0, x0, x3
  407928:	add	w0, w0, #0x1
  40792c:	add	w0, w1, w0, lsl #24
  407930:	str	w0, [x2, #24]
  407934:	ldr	x0, [x22, #16]
  407938:	add	x1, x0, #0x20
  40793c:	str	x1, [x22, #16]
  407940:	str	xzr, [x0, #32]
  407944:	b	40780c <ferror@plt+0x591c>
  407948:	ldr	x0, [x19, #32]
  40794c:	cbnz	x0, 407820 <ferror@plt+0x5930>
  407950:	ldr	w0, [x19, #40]
  407954:	cbnz	w0, 407820 <ferror@plt+0x5930>
  407958:	ldp	x23, x24, [sp, #48]
  40795c:	ldr	x1, [sp, #104]
  407960:	ldr	x0, [x1, #8]
  407964:	str	x0, [x26]
  407968:	str	x1, [x26, #8]
  40796c:	ldr	x0, [x22, #8]
  407970:	str	x0, [x26, #16]
  407974:	str	wzr, [x26, #24]
  407978:	ldr	x0, [sp, #112]
  40797c:	str	x0, [x26, #32]
  407980:	ldr	w0, [sp, #124]
  407984:	str	w0, [x26, #40]
  407988:	str	xzr, [x26, #48]
  40798c:	str	xzr, [x26, #64]
  407990:	str	xzr, [x26, #56]
  407994:	cbz	x27, 4079c8 <ferror@plt+0x5ad8>
  407998:	ldr	x0, [x27]
  40799c:	cbz	x0, 407a18 <ferror@plt+0x5b28>
  4079a0:	mov	w0, #0x0                   	// #0
  4079a4:	add	w0, w0, #0x1
  4079a8:	mov	w2, w0
  4079ac:	ubfiz	x1, x0, #5, #32
  4079b0:	ldr	x1, [x27, x1]
  4079b4:	cbnz	x1, 4079a4 <ferror@plt+0x5ab4>
  4079b8:	ldr	x0, [x22, #24]
  4079bc:	str	x0, [x26, #56]
  4079c0:	add	x2, x0, x2, lsl #3
  4079c4:	str	x2, [x22, #24]
  4079c8:	add	x3, x26, #0x48
  4079cc:	cbz	x27, 4079fc <ferror@plt+0x5b0c>
  4079d0:	ldr	x0, [x27]
  4079d4:	cbz	x0, 4079fc <ferror@plt+0x5b0c>
  4079d8:	mov	w19, #0x0                   	// #0
  4079dc:	mov	w2, w19
  4079e0:	mov	x4, x22
  4079e4:	add	w19, w19, #0x1
  4079e8:	mov	x1, x26
  4079ec:	bl	407790 <ferror@plt+0x58a0>
  4079f0:	mov	x3, x0
  4079f4:	ldr	x0, [x27, #32]!
  4079f8:	cbnz	x0, 4079dc <ferror@plt+0x5aec>
  4079fc:	mov	x0, x3
  407a00:	ldp	x19, x20, [sp, #16]
  407a04:	ldp	x21, x22, [sp, #32]
  407a08:	ldp	x25, x26, [sp, #64]
  407a0c:	ldp	x27, x28, [sp, #80]
  407a10:	ldp	x29, x30, [sp], #128
  407a14:	ret
  407a18:	mov	x2, #0x0                   	// #0
  407a1c:	b	4079b8 <ferror@plt+0x5ac8>

0000000000407a20 <argp_parse@@Base>:
  407a20:	stp	x29, x30, [sp, #-464]!
  407a24:	mov	x29, sp
  407a28:	stp	x19, x20, [sp, #16]
  407a2c:	stp	x21, x22, [sp, #32]
  407a30:	stp	x23, x24, [sp, #48]
  407a34:	stp	x25, x26, [sp, #64]
  407a38:	stp	x27, x28, [sp, #80]
  407a3c:	mov	x23, x0
  407a40:	str	w1, [x29, #124]
  407a44:	mov	x25, x2
  407a48:	mov	w21, w3
  407a4c:	str	x4, [x29, #96]
  407a50:	str	x5, [x29, #104]
  407a54:	tbnz	w21, #0, 407a70 <argp_parse@@Base+0x50>
  407a58:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  407a5c:	ldr	x0, [x0, #1240]
  407a60:	cbz	x0, 407aa8 <argp_parse@@Base+0x88>
  407a64:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  407a68:	ldr	x0, [x0, #1264]
  407a6c:	cbz	x0, 407ab8 <argp_parse@@Base+0x98>
  407a70:	tbz	w21, #4, 407acc <argp_parse@@Base+0xac>
  407a74:	str	w21, [x29, #112]
  407a78:	stp	xzr, xzr, [x29, #192]
  407a7c:	stp	xzr, xzr, [x29, #208]
  407a80:	stp	xzr, xzr, [x29, #224]
  407a84:	str	xzr, [x29, #240]
  407a88:	ands	w28, w21, #0x4
  407a8c:	cset	x0, eq  // eq = none
  407a90:	str	x0, [x29, #128]
  407a94:	str	xzr, [x29, #136]
  407a98:	str	xzr, [x29, #144]
  407a9c:	str	xzr, [x29, #152]
  407aa0:	cbz	x23, 407b88 <argp_parse@@Base+0x168>
  407aa4:	b	407b7c <argp_parse@@Base+0x15c>
  407aa8:	ldr	x1, [x2]
  407aac:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  407ab0:	str	x1, [x0, #1240]
  407ab4:	b	407a64 <argp_parse@@Base+0x44>
  407ab8:	ldr	x0, [x25]
  407abc:	bl	4084bc <argp_parse@@Base+0xa9c>
  407ac0:	adrp	x1, 426000 <argp_error@@Base+0x19e2c>
  407ac4:	str	x0, [x1, #1264]
  407ac8:	b	407a70 <argp_parse@@Base+0x50>
  407acc:	sub	sp, sp, #0x80
  407ad0:	mov	x0, sp
  407ad4:	sub	sp, sp, #0x40
  407ad8:	mov	x1, sp
  407adc:	stp	xzr, xzr, [x1]
  407ae0:	stp	xzr, xzr, [x1, #16]
  407ae4:	stp	xzr, xzr, [x1, #32]
  407ae8:	str	xzr, [x1, #48]
  407aec:	str	x0, [x1, #32]
  407af0:	stp	xzr, xzr, [x0]
  407af4:	stp	xzr, xzr, [x0, #16]
  407af8:	stp	xzr, xzr, [x0, #32]
  407afc:	stp	xzr, xzr, [x0, #48]
  407b00:	stp	xzr, xzr, [x0, #64]
  407b04:	stp	xzr, xzr, [x0, #80]
  407b08:	stp	xzr, xzr, [x0, #96]
  407b0c:	stp	xzr, xzr, [x0, #112]
  407b10:	mov	x2, x0
  407b14:	cbz	x23, 407b1c <argp_parse@@Base+0xfc>
  407b18:	str	x23, [x2], #32
  407b1c:	adrp	x0, 410000 <argp_error@@Base+0x3e2c>
  407b20:	add	x0, x0, #0x650
  407b24:	str	x0, [x2]
  407b28:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  407b2c:	ldr	x0, [x0, #1632]
  407b30:	cbz	x0, 407d08 <argp_parse@@Base+0x2e8>
  407b34:	add	x3, x2, #0x40
  407b38:	adrp	x0, 410000 <argp_error@@Base+0x3e2c>
  407b3c:	add	x0, x0, #0x650
  407b40:	add	x0, x0, #0x38
  407b44:	str	x0, [x2, #32]
  407b48:	str	xzr, [x3]
  407b4c:	str	w21, [x29, #112]
  407b50:	stp	xzr, xzr, [x29, #192]
  407b54:	stp	xzr, xzr, [x29, #208]
  407b58:	stp	xzr, xzr, [x29, #224]
  407b5c:	str	xzr, [x29, #240]
  407b60:	ands	w28, w21, #0x4
  407b64:	cset	x0, eq  // eq = none
  407b68:	str	x0, [x29, #128]
  407b6c:	str	xzr, [x29, #136]
  407b70:	str	xzr, [x29, #144]
  407b74:	str	xzr, [x29, #152]
  407b78:	mov	x23, x1
  407b7c:	add	x1, x29, #0x80
  407b80:	mov	x0, x23
  407b84:	bl	407514 <ferror@plt+0x5624>
  407b88:	ldr	x19, [x29, #144]
  407b8c:	add	x19, x19, #0x1
  407b90:	add	x19, x19, x19, lsl #3
  407b94:	lsl	x19, x19, #3
  407b98:	ldr	x27, [x29, #152]
  407b9c:	lsl	x27, x27, #3
  407ba0:	add	x24, x27, x19
  407ba4:	ldr	x22, [x29, #136]
  407ba8:	add	x22, x22, #0x1
  407bac:	add	x22, x24, x22, lsl #5
  407bb0:	ldr	x0, [x29, #128]
  407bb4:	add	x0, x0, #0x1
  407bb8:	add	x0, x0, x22
  407bbc:	bl	401be0 <malloc@plt>
  407bc0:	mov	x20, x0
  407bc4:	str	x0, [x29, #456]
  407bc8:	cbz	x0, 4083cc <argp_parse@@Base+0x9ac>
  407bcc:	str	x0, [x29, #328]
  407bd0:	add	x19, x0, x19
  407bd4:	str	x19, [x29, #344]
  407bd8:	add	x24, x0, x24
  407bdc:	str	x24, [x29, #264]
  407be0:	add	x26, x0, x22
  407be4:	str	x26, [x29, #256]
  407be8:	mov	w0, #0x1                   	// #1
  407bec:	str	w0, [x29, #192]
  407bf0:	str	w0, [x29, #196]
  407bf4:	ldp	x0, x1, [x29, #192]
  407bf8:	stp	x0, x1, [x29, #272]
  407bfc:	ldp	x0, x1, [x29, #208]
  407c00:	stp	x0, x1, [x29, #288]
  407c04:	ldp	x0, x1, [x29, #224]
  407c08:	stp	x0, x1, [x29, #304]
  407c0c:	ldr	x0, [x29, #240]
  407c10:	str	x0, [x29, #320]
  407c14:	mov	x2, x27
  407c18:	mov	w1, #0x0                   	// #0
  407c1c:	mov	x0, x19
  407c20:	bl	401c20 <memset@plt>
  407c24:	add	x0, x29, #0xf8
  407c28:	str	x0, [x29, #160]
  407c2c:	str	x26, [x29, #168]
  407c30:	str	x24, [x29, #176]
  407c34:	str	x19, [x29, #184]
  407c38:	ldr	x0, [x29, #112]
  407c3c:	tbz	w0, #3, 407d1c <argp_parse@@Base+0x2fc>
  407c40:	add	x26, x26, #0x1
  407c44:	str	x26, [x29, #168]
  407c48:	mov	w0, #0x2d                  	// #45
  407c4c:	strb	w0, [x20, x22]
  407c50:	ldr	x0, [x29, #168]
  407c54:	strb	wzr, [x0]
  407c58:	ldr	x0, [x29, #176]
  407c5c:	str	xzr, [x0]
  407c60:	str	x23, [x29, #248]
  407c64:	cbz	x23, 407d34 <argp_parse@@Base+0x314>
  407c68:	add	x4, x29, #0xa0
  407c6c:	ldr	x3, [x29, #328]
  407c70:	mov	w2, #0x0                   	// #0
  407c74:	mov	x1, #0x0                   	// #0
  407c78:	mov	x0, x23
  407c7c:	bl	407790 <ferror@plt+0x58a0>
  407c80:	str	x0, [x29, #336]
  407c84:	add	x1, x29, #0xf8
  407c88:	stp	xzr, xzr, [x29, #368]
  407c8c:	stp	xzr, xzr, [x29, #384]
  407c90:	stp	xzr, xzr, [x29, #400]
  407c94:	stp	xzr, xzr, [x29, #416]
  407c98:	ldr	x0, [x29, #248]
  407c9c:	str	x0, [x29, #360]
  407ca0:	ldr	w0, [x29, #124]
  407ca4:	str	w0, [x29, #368]
  407ca8:	str	x25, [x29, #376]
  407cac:	str	w21, [x29, #388]
  407cb0:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  407cb4:	ldr	x0, [x0, #1248]
  407cb8:	str	x0, [x29, #432]
  407cbc:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  407cc0:	ldr	x0, [x0, #1256]
  407cc4:	str	x0, [x29, #440]
  407cc8:	str	x1, [x29, #448]
  407ccc:	mov	w0, #0x1                   	// #1
  407cd0:	str	w0, [x29, #352]
  407cd4:	ldr	x0, [x29, #328]
  407cd8:	ldr	x1, [x29, #336]
  407cdc:	cmp	x0, x1
  407ce0:	b.cs	407dc8 <argp_parse@@Base+0x3a8>  // b.hs, b.nlast
  407ce4:	ldr	x1, [x29, #104]
  407ce8:	str	x1, [x0, #48]
  407cec:	ldr	x20, [x29, #328]
  407cf0:	ldr	x0, [x29, #336]
  407cf4:	cmp	x20, x0
  407cf8:	b.cs	407dc8 <argp_parse@@Base+0x3a8>  // b.hs, b.nlast
  407cfc:	mov	w21, #0x3                   	// #3
  407d00:	movk	w21, #0x100, lsl #16
  407d04:	b	407d7c <argp_parse@@Base+0x35c>
  407d08:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  407d0c:	ldr	x0, [x0, #1448]
  407d10:	add	x3, x2, #0x20
  407d14:	cbnz	x0, 407b34 <argp_parse@@Base+0x114>
  407d18:	b	407b48 <argp_parse@@Base+0x128>
  407d1c:	cbz	w28, 407c50 <argp_parse@@Base+0x230>
  407d20:	add	x26, x26, #0x1
  407d24:	str	x26, [x29, #168]
  407d28:	mov	w0, #0x2b                  	// #43
  407d2c:	strb	w0, [x20, x22]
  407d30:	b	407c50 <argp_parse@@Base+0x230>
  407d34:	ldr	x0, [x29, #328]
  407d38:	str	x0, [x29, #336]
  407d3c:	b	407c84 <argp_parse@@Base+0x264>
  407d40:	ldr	x0, [x20]
  407d44:	cbz	x0, 407d98 <argp_parse@@Base+0x378>
  407d48:	mov	x3, #0x0                   	// #0
  407d4c:	mov	w2, w21
  407d50:	add	x1, x29, #0x168
  407d54:	mov	x0, x20
  407d58:	bl	4074a8 <ferror@plt+0x55b8>
  407d5c:	mov	w19, w0
  407d60:	add	x20, x20, #0x48
  407d64:	ldr	x0, [x29, #336]
  407d68:	cmp	x20, x0
  407d6c:	b.cs	407dbc <argp_parse@@Base+0x39c>  // b.hs, b.nlast
  407d70:	cmp	w19, #0x0
  407d74:	ccmp	w19, #0x7, #0x4, ne  // ne = any
  407d78:	b.ne	408304 <argp_parse@@Base+0x8e4>  // b.any
  407d7c:	ldr	x0, [x20, #32]
  407d80:	cbz	x0, 407d40 <argp_parse@@Base+0x320>
  407d84:	ldr	w1, [x20, #40]
  407d88:	ldr	x0, [x0, #56]
  407d8c:	ldr	x0, [x0, x1, lsl #3]
  407d90:	str	x0, [x20, #48]
  407d94:	b	407d40 <argp_parse@@Base+0x320>
  407d98:	ldr	x0, [x20, #8]
  407d9c:	ldr	x0, [x0, #32]
  407da0:	cbz	x0, 407d48 <argp_parse@@Base+0x328>
  407da4:	ldr	x0, [x0]
  407da8:	cbz	x0, 407d48 <argp_parse@@Base+0x328>
  407dac:	ldr	x0, [x20, #56]
  407db0:	ldr	x1, [x20, #48]
  407db4:	str	x1, [x0]
  407db8:	b	407d48 <argp_parse@@Base+0x328>
  407dbc:	cmp	w19, #0x0
  407dc0:	ccmp	w19, #0x7, #0x4, ne  // ne = any
  407dc4:	b.ne	408304 <argp_parse@@Base+0x8e4>  // b.any
  407dc8:	ldr	w0, [x29, #388]
  407dcc:	tbz	w0, #1, 407df4 <argp_parse@@Base+0x3d4>
  407dd0:	str	wzr, [x29, #276]
  407dd4:	tbz	w0, #0, 407dfc <argp_parse@@Base+0x3dc>
  407dd8:	ldr	x0, [x29, #376]
  407ddc:	sub	x0, x0, #0x8
  407de0:	str	x0, [x29, #376]
  407de4:	ldr	w0, [x29, #368]
  407de8:	add	w0, w0, #0x1
  407dec:	str	w0, [x29, #368]
  407df0:	b	407dfc <argp_parse@@Base+0x3dc>
  407df4:	mov	w0, #0x1                   	// #1
  407df8:	str	w0, [x29, #276]
  407dfc:	ldr	x0, [x29, #376]
  407e00:	cmp	x25, x0
  407e04:	b.eq	407e28 <argp_parse@@Base+0x408>  // b.none
  407e08:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  407e0c:	ldr	x0, [x0, #1264]
  407e10:	str	x0, [x29, #424]
  407e14:	mov	w25, #0xffffffff            	// #-1
  407e18:	add	x22, x29, #0x168
  407e1c:	mov	w24, #0x6                   	// #6
  407e20:	movk	w24, #0x100, lsl #16
  407e24:	b	407ed8 <argp_parse@@Base+0x4b8>
  407e28:	ldr	x0, [x25]
  407e2c:	cbz	x0, 407e08 <argp_parse@@Base+0x3e8>
  407e30:	bl	4084bc <argp_parse@@Base+0xa9c>
  407e34:	str	x0, [x29, #424]
  407e38:	b	407e14 <argp_parse@@Base+0x3f4>
  407e3c:	ldr	w0, [x29, #384]
  407e40:	str	w0, [x29, #272]
  407e44:	str	w25, [x29, #280]
  407e48:	ldr	w0, [x29, #388]
  407e4c:	tbz	w0, #6, 407f4c <argp_parse@@Base+0x52c>
  407e50:	add	x5, x29, #0x110
  407e54:	mov	x4, #0x0                   	// #0
  407e58:	ldr	x3, [x29, #264]
  407e5c:	ldr	x2, [x29, #256]
  407e60:	ldr	x1, [x29, #376]
  407e64:	ldr	w0, [x29, #368]
  407e68:	bl	408f70 <argp_parse@@Base+0x1550>
  407e6c:	mov	w20, w0
  407e70:	ldr	w19, [x29, #272]
  407e74:	str	w19, [x29, #384]
  407e78:	cmn	w20, #0x1
  407e7c:	b.eq	407f70 <argp_parse@@Base+0x550>  // b.none
  407e80:	cmp	w20, #0x3f
  407e84:	b.eq	407fa0 <argp_parse@@Base+0x580>  // b.none
  407e88:	cmp	w20, #0x1
  407e8c:	b.eq	407f24 <argp_parse@@Base+0x504>  // b.none
  407e90:	ldr	x19, [x29, #288]
  407e94:	asr	w0, w20, #24
  407e98:	cmp	wzr, w20, asr #24
  407e9c:	b.eq	407fb0 <argp_parse@@Base+0x590>  // b.none
  407ea0:	sbfiz	x1, x0, #3, #32
  407ea4:	add	x0, x1, w0, sxtw
  407ea8:	lsl	x0, x0, #3
  407eac:	sub	x0, x0, #0x48
  407eb0:	mov	x3, x19
  407eb4:	sbfx	x2, x20, #0, #24
  407eb8:	mov	x1, x22
  407ebc:	ldr	x4, [x29, #328]
  407ec0:	add	x0, x4, x0
  407ec4:	bl	4074a8 <ferror@plt+0x55b8>
  407ec8:	mov	w19, w0
  407ecc:	cmp	w0, #0x7
  407ed0:	b.eq	408134 <argp_parse@@Base+0x714>  // b.none
  407ed4:	cbnz	w19, 40826c <argp_parse@@Base+0x84c>
  407ed8:	ldr	w0, [x29, #396]
  407edc:	cbz	w0, 407ef0 <argp_parse@@Base+0x4d0>
  407ee0:	ldr	w1, [x29, #384]
  407ee4:	cmp	w0, w1
  407ee8:	b.le	407ef8 <argp_parse@@Base+0x4d8>
  407eec:	str	wzr, [x29, #396]
  407ef0:	ldr	w0, [x29, #352]
  407ef4:	cbnz	w0, 407e3c <argp_parse@@Base+0x41c>
  407ef8:	ldr	w0, [x29, #384]
  407efc:	ldr	w1, [x29, #368]
  407f00:	cmp	w0, w1
  407f04:	b.ge	4083bc <argp_parse@@Base+0x99c>  // b.tcont
  407f08:	ldr	w1, [x29, #388]
  407f0c:	tbnz	w1, #2, 4083c4 <argp_parse@@Base+0x9a4>
  407f10:	add	w1, w0, #0x1
  407f14:	str	w1, [x29, #384]
  407f18:	ldr	x1, [x29, #376]
  407f1c:	ldr	x0, [x1, w0, sxtw #3]
  407f20:	str	x0, [x29, #288]
  407f24:	ldr	x23, [x29, #288]
  407f28:	ldr	w21, [x29, #384]
  407f2c:	sub	w21, w21, #0x1
  407f30:	str	w21, [x29, #384]
  407f34:	ldr	x20, [x29, #328]
  407f38:	ldr	x0, [x29, #336]
  407f3c:	cmp	x0, x20
  407f40:	b.hi	408048 <argp_parse@@Base+0x628>  // b.pmore
  407f44:	mov	w20, #0x1                   	// #1
  407f48:	b	408088 <argp_parse@@Base+0x668>
  407f4c:	add	x5, x29, #0x110
  407f50:	mov	x4, #0x0                   	// #0
  407f54:	ldr	x3, [x29, #264]
  407f58:	ldr	x2, [x29, #256]
  407f5c:	ldr	x1, [x29, #376]
  407f60:	ldr	w0, [x29, #368]
  407f64:	bl	408f34 <argp_parse@@Base+0x1514>
  407f68:	mov	w20, w0
  407f6c:	b	407e70 <argp_parse@@Base+0x450>
  407f70:	str	wzr, [x29, #352]
  407f74:	cmp	w19, #0x1
  407f78:	b.le	407ef8 <argp_parse@@Base+0x4d8>
  407f7c:	ldr	x0, [x29, #376]
  407f80:	add	x0, x0, w19, sxtw #3
  407f84:	adrp	x1, 410000 <argp_error@@Base+0x3e2c>
  407f88:	add	x1, x1, #0x550
  407f8c:	ldur	x0, [x0, #-8]
  407f90:	bl	401cf0 <strcmp@plt>
  407f94:	cbnz	w0, 407ef8 <argp_parse@@Base+0x4d8>
  407f98:	str	w19, [x29, #396]
  407f9c:	b	407ef8 <argp_parse@@Base+0x4d8>
  407fa0:	ldr	w0, [x29, #280]
  407fa4:	cmn	w0, #0x1
  407fa8:	b.ne	4083b4 <argp_parse@@Base+0x994>  // b.any
  407fac:	ldr	x19, [x29, #288]
  407fb0:	mov	w1, w20
  407fb4:	ldr	x0, [x29, #256]
  407fb8:	bl	401d70 <strchr@plt>
  407fbc:	mov	x2, x0
  407fc0:	cbz	x0, 407fec <argp_parse@@Base+0x5cc>
  407fc4:	ldr	x0, [x29, #328]
  407fc8:	ldr	x3, [x29, #336]
  407fcc:	cmp	x3, x0
  407fd0:	b.ls	407fec <argp_parse@@Base+0x5cc>  // b.plast
  407fd4:	ldr	x1, [x0, #16]
  407fd8:	cmp	x2, x1
  407fdc:	b.cc	408114 <argp_parse@@Base+0x6f4>  // b.lo, b.ul, b.last
  407fe0:	add	x0, x0, #0x48
  407fe4:	cmp	x3, x0
  407fe8:	b.hi	407fd4 <argp_parse@@Base+0x5b4>  // b.pmore
  407fec:	adrp	x3, 410000 <argp_error@@Base+0x3e2c>
  407ff0:	add	x3, x3, #0x650
  407ff4:	add	x3, x3, #0x70
  407ff8:	mov	w2, w20
  407ffc:	adrp	x1, 410000 <argp_error@@Base+0x3e2c>
  408000:	add	x1, x1, #0x558
  408004:	add	x0, x29, #0x168
  408008:	bl	40c1d4 <argp_error@@Base>
  40800c:	b	408088 <argp_parse@@Base+0x668>
  408010:	ldr	w0, [x29, #384]
  408014:	sub	w0, w0, #0x1
  408018:	str	w0, [x29, #384]
  40801c:	mov	x3, #0x0                   	// #0
  408020:	mov	w2, w24
  408024:	mov	x1, x22
  408028:	mov	x0, x20
  40802c:	bl	4074a8 <ferror@plt+0x55b8>
  408030:	mov	w19, w0
  408034:	add	x20, x20, #0x48
  408038:	ldr	x0, [x29, #336]
  40803c:	cmp	x20, x0
  408040:	ccmp	w19, #0x7, #0x0, cc  // cc = lo, ul, last
  408044:	b.ne	4083e8 <argp_parse@@Base+0x9c8>  // b.any
  408048:	ldr	w0, [x29, #384]
  40804c:	add	w0, w0, #0x1
  408050:	str	w0, [x29, #384]
  408054:	mov	x3, x23
  408058:	mov	w2, #0x0                   	// #0
  40805c:	mov	x1, x22
  408060:	mov	x0, x20
  408064:	bl	4074a8 <ferror@plt+0x55b8>
  408068:	mov	w19, w0
  40806c:	cmp	w0, #0x7
  408070:	b.eq	408010 <argp_parse@@Base+0x5f0>  // b.none
  408074:	add	x20, x20, #0x48
  408078:	cbz	w0, 4083f4 <argp_parse@@Base+0x9d4>
  40807c:	cmp	w19, #0x7
  408080:	b.ne	407ed4 <argp_parse@@Base+0x4b4>  // b.any
  408084:	mov	w20, #0x1                   	// #1
  408088:	add	w20, w20, #0x1
  40808c:	tst	w20, #0xfffffffd
  408090:	cset	w0, eq  // eq = none
  408094:	cbz	w0, 408360 <argp_parse@@Base+0x940>
  408098:	ldr	w0, [x29, #384]
  40809c:	ldr	w1, [x29, #368]
  4080a0:	cmp	w0, w1
  4080a4:	b.eq	40819c <argp_parse@@Base+0x77c>  // b.none
  4080a8:	ldr	x1, [x29, #96]
  4080ac:	cbz	x1, 408340 <argp_parse@@Base+0x920>
  4080b0:	str	w0, [x1]
  4080b4:	ldr	x20, [x29, #336]
  4080b8:	sub	x20, x20, #0x48
  4080bc:	ldr	x0, [x29, #328]
  4080c0:	cmp	x20, x0
  4080c4:	b.cc	408398 <argp_parse@@Base+0x978>  // b.lo, b.ul, b.last
  4080c8:	mov	w21, #0x4                   	// #4
  4080cc:	movk	w21, #0x100, lsl #16
  4080d0:	mov	x3, #0x0                   	// #0
  4080d4:	mov	w2, w21
  4080d8:	add	x1, x29, #0x168
  4080dc:	mov	x0, x20
  4080e0:	bl	4074a8 <ferror@plt+0x55b8>
  4080e4:	mov	w19, w0
  4080e8:	sub	x20, x20, #0x48
  4080ec:	ldr	x0, [x29, #328]
  4080f0:	cmp	x20, x0
  4080f4:	b.cc	408378 <argp_parse@@Base+0x958>  // b.lo, b.ul, b.last
  4080f8:	cmp	w19, #0x0
  4080fc:	ccmp	w19, #0x7, #0x4, ne  // ne = any
  408100:	b.eq	4080d0 <argp_parse@@Base+0x6b0>  // b.none
  408104:	b	408380 <argp_parse@@Base+0x960>
  408108:	mov	w0, #0x1                   	// #1
  40810c:	str	w0, [x29, #352]
  408110:	b	407ed8 <argp_parse@@Base+0x4b8>
  408114:	mov	x3, x19
  408118:	mov	w2, w20
  40811c:	mov	x1, x22
  408120:	bl	4074a8 <ferror@plt+0x55b8>
  408124:	mov	w19, w0
  408128:	cmp	w0, #0x7
  40812c:	b.ne	407ed4 <argp_parse@@Base+0x4b4>  // b.any
  408130:	b	407fec <argp_parse@@Base+0x5cc>
  408134:	ldr	x0, [x29, #264]
  408138:	ldr	w1, [x0, #24]
  40813c:	cmp	w1, w20
  408140:	b.eq	40815c <argp_parse@@Base+0x73c>  // b.none
  408144:	ldr	x1, [x0]
  408148:	cbz	x1, 408184 <argp_parse@@Base+0x764>
  40814c:	add	x0, x0, #0x20
  408150:	ldr	w1, [x0, #24]
  408154:	cmp	w20, w1
  408158:	b.ne	408144 <argp_parse@@Base+0x724>  // b.any
  40815c:	ldr	x2, [x0]
  408160:	cbz	x2, 408190 <argp_parse@@Base+0x770>
  408164:	adrp	x3, 410000 <argp_error@@Base+0x3e2c>
  408168:	add	x3, x3, #0x650
  40816c:	add	x3, x3, #0x70
  408170:	adrp	x1, 410000 <argp_error@@Base+0x3e2c>
  408174:	add	x1, x1, #0x560
  408178:	add	x0, x29, #0x168
  40817c:	bl	40c1d4 <argp_error@@Base>
  408180:	b	408088 <argp_parse@@Base+0x668>
  408184:	adrp	x2, 410000 <argp_error@@Base+0x3e2c>
  408188:	add	x2, x2, #0x548
  40818c:	b	408164 <argp_parse@@Base+0x744>
  408190:	adrp	x2, 410000 <argp_error@@Base+0x3e2c>
  408194:	add	x2, x2, #0x548
  408198:	b	408164 <argp_parse@@Base+0x744>
  40819c:	ldr	x21, [x29, #328]
  4081a0:	ldr	x20, [x29, #336]
  4081a4:	cmp	x20, x21
  4081a8:	b.ls	4083a0 <argp_parse@@Base+0x980>  // b.plast
  4081ac:	mov	w19, #0x0                   	// #0
  4081b0:	mov	w22, #0x2                   	// #2
  4081b4:	movk	w22, #0x100, lsl #16
  4081b8:	b	4081d8 <argp_parse@@Base+0x7b8>
  4081bc:	add	x21, x21, #0x48
  4081c0:	ldr	x20, [x29, #336]
  4081c4:	cmp	x21, x20
  4081c8:	b.cs	4081fc <argp_parse@@Base+0x7dc>  // b.hs, b.nlast
  4081cc:	cmp	w19, #0x0
  4081d0:	ccmp	w19, #0x7, #0x4, ne  // ne = any
  4081d4:	b.ne	4083d4 <argp_parse@@Base+0x9b4>  // b.any
  4081d8:	ldr	w0, [x21, #24]
  4081dc:	cbnz	w0, 4081bc <argp_parse@@Base+0x79c>
  4081e0:	mov	x3, #0x0                   	// #0
  4081e4:	mov	w2, w22
  4081e8:	add	x1, x29, #0x168
  4081ec:	mov	x0, x21
  4081f0:	bl	4074a8 <ferror@plt+0x55b8>
  4081f4:	mov	w19, w0
  4081f8:	b	4081bc <argp_parse@@Base+0x79c>
  4081fc:	sub	x20, x20, #0x48
  408200:	ldr	x0, [x29, #328]
  408204:	cmp	x0, x20
  408208:	b.hi	408328 <argp_parse@@Base+0x908>  // b.pmore
  40820c:	cmp	w19, #0x0
  408210:	ccmp	w19, #0x7, #0x4, ne  // ne = any
  408214:	b.ne	408254 <argp_parse@@Base+0x834>  // b.any
  408218:	mov	w21, #0x1                   	// #1
  40821c:	movk	w21, #0x100, lsl #16
  408220:	mov	x3, #0x0                   	// #0
  408224:	mov	w2, w21
  408228:	add	x1, x29, #0x168
  40822c:	mov	x0, x20
  408230:	bl	4074a8 <ferror@plt+0x55b8>
  408234:	mov	w19, w0
  408238:	sub	x20, x20, #0x48
  40823c:	ldr	x0, [x29, #328]
  408240:	cmp	x20, x0
  408244:	b.cc	408328 <argp_parse@@Base+0x908>  // b.lo, b.ul, b.last
  408248:	cmp	w19, #0x0
  40824c:	ccmp	w19, #0x7, #0x4, ne  // ne = any
  408250:	b.eq	408220 <argp_parse@@Base+0x800>  // b.none
  408254:	ldr	x0, [x29, #96]
  408258:	cbz	x0, 408268 <argp_parse@@Base+0x848>
  40825c:	ldr	w0, [x29, #384]
  408260:	ldr	x1, [x29, #96]
  408264:	str	w0, [x1]
  408268:	cbz	w19, 4080b4 <argp_parse@@Base+0x694>
  40826c:	cmp	w19, #0x7
  408270:	b.eq	408360 <argp_parse@@Base+0x940>  // b.none
  408274:	ldr	x20, [x29, #328]
  408278:	ldr	x0, [x29, #336]
  40827c:	cmp	x20, x0
  408280:	b.cs	4082b0 <argp_parse@@Base+0x890>  // b.hs, b.nlast
  408284:	mov	w21, #0x5                   	// #5
  408288:	movk	w21, #0x100, lsl #16
  40828c:	mov	x3, #0x0                   	// #0
  408290:	mov	w2, w21
  408294:	add	x1, x29, #0x168
  408298:	mov	x0, x20
  40829c:	bl	4074a8 <ferror@plt+0x55b8>
  4082a0:	add	x20, x20, #0x48
  4082a4:	ldr	x0, [x29, #336]
  4082a8:	cmp	x20, x0
  4082ac:	b.cc	40828c <argp_parse@@Base+0x86c>  // b.lo, b.ul, b.last
  4082b0:	ldr	x20, [x29, #336]
  4082b4:	sub	x20, x20, #0x48
  4082b8:	ldr	x0, [x29, #328]
  4082bc:	cmp	x0, x20
  4082c0:	b.hi	4082f0 <argp_parse@@Base+0x8d0>  // b.pmore
  4082c4:	mov	w21, #0x7                   	// #7
  4082c8:	movk	w21, #0x100, lsl #16
  4082cc:	mov	x3, #0x0                   	// #0
  4082d0:	mov	w2, w21
  4082d4:	add	x1, x29, #0x168
  4082d8:	mov	x0, x20
  4082dc:	bl	4074a8 <ferror@plt+0x55b8>
  4082e0:	sub	x20, x20, #0x48
  4082e4:	ldr	x0, [x29, #328]
  4082e8:	cmp	x20, x0
  4082ec:	b.cs	4082cc <argp_parse@@Base+0x8ac>  // b.hs, b.nlast
  4082f0:	cmp	w19, #0x7
  4082f4:	mov	w0, #0x16                  	// #22
  4082f8:	csel	w19, w19, w0, ne  // ne = any
  4082fc:	ldr	x0, [x29, #456]
  408300:	bl	401d30 <free@plt>
  408304:	mov	w0, w19
  408308:	mov	sp, x29
  40830c:	ldp	x19, x20, [sp, #16]
  408310:	ldp	x21, x22, [sp, #32]
  408314:	ldp	x23, x24, [sp, #48]
  408318:	ldp	x25, x26, [sp, #64]
  40831c:	ldp	x27, x28, [sp, #80]
  408320:	ldp	x29, x30, [sp], #464
  408324:	ret
  408328:	cmp	w19, #0x7
  40832c:	b.ne	408254 <argp_parse@@Base+0x834>  // b.any
  408330:	mov	w19, #0x0                   	// #0
  408334:	ldr	x0, [x29, #96]
  408338:	cbnz	x0, 40825c <argp_parse@@Base+0x83c>
  40833c:	b	4080b4 <argp_parse@@Base+0x694>
  408340:	ldr	w0, [x29, #388]
  408344:	tbnz	w0, #1, 408360 <argp_parse@@Base+0x940>
  408348:	ldr	x0, [x29, #432]
  40834c:	cbz	x0, 408360 <argp_parse@@Base+0x940>
  408350:	ldr	x2, [x29, #424]
  408354:	adrp	x1, 410000 <argp_error@@Base+0x3e2c>
  408358:	add	x1, x1, #0x570
  40835c:	bl	401ed0 <fprintf@plt>
  408360:	mov	w2, #0x104                 	// #260
  408364:	ldr	x1, [x29, #432]
  408368:	add	x0, x29, #0x168
  40836c:	bl	40c134 <argp_state_help@@Base>
  408370:	mov	w19, #0x7                   	// #7
  408374:	b	408274 <argp_parse@@Base+0x854>
  408378:	cmp	w19, #0x7
  40837c:	csel	w19, w19, wzr, ne  // ne = any
  408380:	ldr	x20, [x29, #336]
  408384:	sub	x20, x20, #0x48
  408388:	ldr	x0, [x29, #328]
  40838c:	cmp	x0, x20
  408390:	b.ls	4082c4 <argp_parse@@Base+0x8a4>  // b.plast
  408394:	b	4082fc <argp_parse@@Base+0x8dc>
  408398:	mov	w19, #0x0                   	// #0
  40839c:	b	4082fc <argp_parse@@Base+0x8dc>
  4083a0:	sub	x20, x20, #0x48
  4083a4:	mov	w19, #0x0                   	// #0
  4083a8:	cmp	x21, x20
  4083ac:	b.ls	408218 <argp_parse@@Base+0x7f8>  // b.plast
  4083b0:	b	408254 <argp_parse@@Base+0x834>
  4083b4:	mov	w0, #0x0                   	// #0
  4083b8:	b	408094 <argp_parse@@Base+0x674>
  4083bc:	mov	w0, #0x1                   	// #1
  4083c0:	b	408094 <argp_parse@@Base+0x674>
  4083c4:	mov	w0, #0x1                   	// #1
  4083c8:	b	408094 <argp_parse@@Base+0x674>
  4083cc:	mov	w19, #0xc                   	// #12
  4083d0:	b	408304 <argp_parse@@Base+0x8e4>
  4083d4:	sub	x20, x20, #0x48
  4083d8:	ldr	x0, [x29, #328]
  4083dc:	cmp	x20, x0
  4083e0:	b.cs	40820c <argp_parse@@Base+0x7ec>  // b.hs, b.nlast
  4083e4:	b	408254 <argp_parse@@Base+0x834>
  4083e8:	cbnz	w19, 40807c <argp_parse@@Base+0x65c>
  4083ec:	ldr	w0, [x29, #368]
  4083f0:	str	w0, [x29, #384]
  4083f4:	ldr	w0, [x29, #384]
  4083f8:	cmp	w21, w0
  4083fc:	b.ge	408108 <argp_parse@@Base+0x6e8>  // b.tcont
  408400:	sub	w21, w0, w21
  408404:	ldur	w0, [x20, #-48]
  408408:	add	w21, w0, w21
  40840c:	stur	w21, [x20, #-48]
  408410:	b	407ed8 <argp_parse@@Base+0x4b8>
  408414:	cbz	x1, 408454 <argp_parse@@Base+0xa34>
  408418:	ldr	x2, [x1, #88]
  40841c:	ldr	x1, [x2, #80]
  408420:	ldr	x3, [x2, #88]
  408424:	cmp	x1, x3
  408428:	b.cs	40845c <argp_parse@@Base+0xa3c>  // b.hs, b.nlast
  40842c:	ldr	x2, [x1, #8]
  408430:	cmp	x2, x0
  408434:	b.eq	40844c <argp_parse@@Base+0xa2c>  // b.none
  408438:	add	x1, x1, #0x48
  40843c:	cmp	x1, x3
  408440:	b.cc	40842c <argp_parse@@Base+0xa0c>  // b.lo, b.ul, b.last
  408444:	mov	x0, #0x0                   	// #0
  408448:	b	408450 <argp_parse@@Base+0xa30>
  40844c:	ldr	x0, [x1, #48]
  408450:	ret
  408454:	mov	x0, x1
  408458:	b	408450 <argp_parse@@Base+0xa30>
  40845c:	mov	x0, #0x0                   	// #0
  408460:	b	408450 <argp_parse@@Base+0xa30>
  408464:	stp	x29, x30, [sp, #-16]!
  408468:	mov	x29, sp
  40846c:	adrp	x1, 426000 <argp_error@@Base+0x19e2c>
  408470:	add	x5, x1, #0x5b0
  408474:	ldr	x4, [x1, #1456]
  408478:	adrp	x3, 410000 <argp_error@@Base+0x3e2c>
  40847c:	add	x3, x3, #0x848
  408480:	adrp	x2, 410000 <argp_error@@Base+0x3e2c>
  408484:	add	x2, x2, #0x850
  408488:	ldr	x1, [x5, #8]
  40848c:	bl	408b38 <argp_parse@@Base+0x1118>
  408490:	ldp	x29, x30, [sp], #16
  408494:	ret
  408498:	adrp	x3, 426000 <argp_error@@Base+0x19e2c>
  40849c:	adrp	x2, 408000 <argp_parse@@Base+0x5e0>
  4084a0:	add	x2, x2, #0x464
  4084a4:	str	x2, [x3, #1448]
  4084a8:	adrp	x2, 426000 <argp_error@@Base+0x19e2c>
  4084ac:	add	x3, x2, #0x5b0
  4084b0:	str	x0, [x3, #8]
  4084b4:	str	x1, [x2, #1456]
  4084b8:	ret
  4084bc:	ldrb	w1, [x0]
  4084c0:	cmp	w1, #0x2f
  4084c4:	b.ne	4084d4 <argp_parse@@Base+0xab4>  // b.any
  4084c8:	ldrb	w1, [x0, #1]!
  4084cc:	cmp	w1, #0x2f
  4084d0:	b.eq	4084c8 <argp_parse@@Base+0xaa8>  // b.none
  4084d4:	ldrb	w2, [x0]
  4084d8:	cbz	w2, 408514 <argp_parse@@Base+0xaf4>
  4084dc:	mov	x3, x0
  4084e0:	mov	w1, #0x0                   	// #0
  4084e4:	mov	w5, #0x1                   	// #1
  4084e8:	mov	w4, #0x0                   	// #0
  4084ec:	b	408504 <argp_parse@@Base+0xae4>
  4084f0:	cmp	w1, #0x0
  4084f4:	csel	x0, x0, x3, eq  // eq = none
  4084f8:	csel	w1, w1, w4, eq  // eq = none
  4084fc:	ldrb	w2, [x3, #1]!
  408500:	cbz	w2, 408514 <argp_parse@@Base+0xaf4>
  408504:	cmp	w2, #0x2f
  408508:	b.ne	4084f0 <argp_parse@@Base+0xad0>  // b.any
  40850c:	mov	w1, w5
  408510:	b	4084fc <argp_parse@@Base+0xadc>
  408514:	ret
  408518:	stp	x29, x30, [sp, #-32]!
  40851c:	mov	x29, sp
  408520:	str	x19, [sp, #16]
  408524:	mov	x19, x0
  408528:	bl	401b00 <strlen@plt>
  40852c:	cmp	x0, #0x1
  408530:	b.ls	408544 <argp_parse@@Base+0xb24>  // b.plast
  408534:	sub	x1, x0, #0x1
  408538:	ldrb	w2, [x19, x1]
  40853c:	cmp	w2, #0x2f
  408540:	b.eq	408550 <argp_parse@@Base+0xb30>  // b.none
  408544:	ldr	x19, [sp, #16]
  408548:	ldp	x29, x30, [sp], #32
  40854c:	ret
  408550:	mov	x0, x1
  408554:	b	40852c <argp_parse@@Base+0xb0c>
  408558:	stp	x29, x30, [sp, #-48]!
  40855c:	mov	x29, sp
  408560:	cbz	x0, 4085d8 <argp_parse@@Base+0xbb8>
  408564:	stp	x19, x20, [sp, #16]
  408568:	mov	x19, x0
  40856c:	mov	w1, #0x2f                  	// #47
  408570:	bl	401cb0 <strrchr@plt>
  408574:	mov	x20, x0
  408578:	cbz	x0, 40860c <argp_parse@@Base+0xbec>
  40857c:	str	x21, [sp, #32]
  408580:	add	x21, x0, #0x1
  408584:	sub	x0, x21, x19
  408588:	cmp	x0, #0x6
  40858c:	b.le	408600 <argp_parse@@Base+0xbe0>
  408590:	mov	x2, #0x7                   	// #7
  408594:	adrp	x1, 410000 <argp_error@@Base+0x3e2c>
  408598:	add	x1, x1, #0x898
  40859c:	sub	x0, x20, #0x6
  4085a0:	bl	401c00 <strncmp@plt>
  4085a4:	cbnz	w0, 408608 <argp_parse@@Base+0xbe8>
  4085a8:	mov	x2, #0x3                   	// #3
  4085ac:	adrp	x1, 410000 <argp_error@@Base+0x3e2c>
  4085b0:	add	x1, x1, #0x8a0
  4085b4:	mov	x0, x21
  4085b8:	bl	401c00 <strncmp@plt>
  4085bc:	mov	x19, x21
  4085c0:	cbnz	w0, 408628 <argp_parse@@Base+0xc08>
  4085c4:	add	x19, x20, #0x4
  4085c8:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  4085cc:	str	x19, [x0, #1264]
  4085d0:	ldr	x21, [sp, #32]
  4085d4:	b	40860c <argp_parse@@Base+0xbec>
  4085d8:	stp	x19, x20, [sp, #16]
  4085dc:	str	x21, [sp, #32]
  4085e0:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  4085e4:	ldr	x3, [x0, #1248]
  4085e8:	mov	x2, #0x37                  	// #55
  4085ec:	mov	x1, #0x1                   	// #1
  4085f0:	adrp	x0, 410000 <argp_error@@Base+0x3e2c>
  4085f4:	add	x0, x0, #0x860
  4085f8:	bl	401d80 <fwrite@plt>
  4085fc:	bl	401cd0 <abort@plt>
  408600:	ldr	x21, [sp, #32]
  408604:	b	40860c <argp_parse@@Base+0xbec>
  408608:	ldr	x21, [sp, #32]
  40860c:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  408610:	str	x19, [x0, #1472]
  408614:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  408618:	str	x19, [x0, #1240]
  40861c:	ldp	x19, x20, [sp, #16]
  408620:	ldp	x29, x30, [sp], #48
  408624:	ret
  408628:	ldr	x21, [sp, #32]
  40862c:	b	40860c <argp_parse@@Base+0xbec>
  408630:	stp	x29, x30, [sp, #-208]!
  408634:	mov	x29, sp
  408638:	stp	x19, x20, [sp, #16]
  40863c:	stp	x21, x22, [sp, #32]
  408640:	stp	x23, x24, [sp, #48]
  408644:	mov	x22, x0
  408648:	mov	x24, x1
  40864c:	bl	401bb0 <fileno@plt>
  408650:	add	x2, sp, #0x50
  408654:	mov	w1, w0
  408658:	mov	w0, #0x0                   	// #0
  40865c:	bl	401df0 <__fxstat@plt>
  408660:	tbnz	w0, #31, 4086d8 <argp_parse@@Base+0xcb8>
  408664:	ldr	w0, [sp, #96]
  408668:	and	w0, w0, #0xf000
  40866c:	mov	x19, #0x2000                	// #8192
  408670:	cmp	w0, #0x8, lsl #12
  408674:	b.eq	40869c <argp_parse@@Base+0xc7c>  // b.none
  408678:	mov	x0, x19
  40867c:	bl	401be0 <malloc@plt>
  408680:	mov	x21, x0
  408684:	cbz	x0, 4087b4 <argp_parse@@Base+0xd94>
  408688:	stp	x25, x26, [sp, #64]
  40868c:	mov	x20, #0x0                   	// #0
  408690:	mov	x23, #0x1                   	// #1
  408694:	mov	x25, #0xffffffffffffffff    	// #-1
  408698:	b	4086f4 <argp_parse@@Base+0xcd4>
  40869c:	mov	x0, x22
  4086a0:	bl	401da0 <ftello@plt>
  4086a4:	tbnz	x0, #63, 4086e0 <argp_parse@@Base+0xcc0>
  4086a8:	ldr	x1, [sp, #128]
  4086ac:	cmp	x1, x0
  4086b0:	b.le	4086e8 <argp_parse@@Base+0xcc8>
  4086b4:	sub	x0, x1, x0
  4086b8:	add	x19, x0, #0x1
  4086bc:	cmn	x0, #0x1
  4086c0:	b.ne	408678 <argp_parse@@Base+0xc58>  // b.any
  4086c4:	bl	401ea0 <__errno_location@plt>
  4086c8:	mov	w1, #0xc                   	// #12
  4086cc:	str	w1, [x0]
  4086d0:	mov	x21, #0x0                   	// #0
  4086d4:	b	4087b4 <argp_parse@@Base+0xd94>
  4086d8:	mov	x19, #0x2000                	// #8192
  4086dc:	b	408678 <argp_parse@@Base+0xc58>
  4086e0:	mov	x19, #0x2000                	// #8192
  4086e4:	b	408678 <argp_parse@@Base+0xc58>
  4086e8:	mov	x19, #0x2000                	// #8192
  4086ec:	b	408678 <argp_parse@@Base+0xc58>
  4086f0:	mov	x21, x0
  4086f4:	sub	x26, x19, x20
  4086f8:	mov	x3, x22
  4086fc:	mov	x2, x26
  408700:	mov	x1, x23
  408704:	add	x0, x21, x20
  408708:	bl	401d20 <fread@plt>
  40870c:	add	x20, x20, x0
  408710:	cmp	x26, x0
  408714:	b.ne	408750 <argp_parse@@Base+0xd30>  // b.any
  408718:	cmn	x19, #0x1
  40871c:	b.eq	408798 <argp_parse@@Base+0xd78>  // b.none
  408720:	lsr	x2, x19, #1
  408724:	mvn	x0, x2
  408728:	add	x2, x19, x2
  40872c:	cmp	x0, x19
  408730:	csel	x19, x2, x25, hi  // hi = pmore
  408734:	mov	x1, x19
  408738:	mov	x0, x21
  40873c:	bl	401c70 <realloc@plt>
  408740:	cbnz	x0, 4086f0 <argp_parse@@Base+0xcd0>
  408744:	bl	401ea0 <__errno_location@plt>
  408748:	ldr	w23, [x0]
  40874c:	b	40879c <argp_parse@@Base+0xd7c>
  408750:	bl	401ea0 <__errno_location@plt>
  408754:	ldr	w23, [x0]
  408758:	mov	x0, x22
  40875c:	bl	401ef0 <ferror@plt>
  408760:	cbnz	w0, 40879c <argp_parse@@Base+0xd7c>
  408764:	sub	x19, x19, #0x1
  408768:	cmp	x19, x20
  40876c:	b.hi	408780 <argp_parse@@Base+0xd60>  // b.pmore
  408770:	strb	wzr, [x21, x20]
  408774:	str	x20, [x24]
  408778:	ldp	x25, x26, [sp, #64]
  40877c:	b	4087b4 <argp_parse@@Base+0xd94>
  408780:	add	x1, x20, #0x1
  408784:	mov	x0, x21
  408788:	bl	401c70 <realloc@plt>
  40878c:	cmp	x0, #0x0
  408790:	csel	x21, x21, x0, eq  // eq = none
  408794:	b	408770 <argp_parse@@Base+0xd50>
  408798:	mov	w23, #0xc                   	// #12
  40879c:	mov	x0, x21
  4087a0:	bl	401d30 <free@plt>
  4087a4:	bl	401ea0 <__errno_location@plt>
  4087a8:	str	w23, [x0]
  4087ac:	mov	x21, #0x0                   	// #0
  4087b0:	ldp	x25, x26, [sp, #64]
  4087b4:	mov	x0, x21
  4087b8:	ldp	x19, x20, [sp, #16]
  4087bc:	ldp	x21, x22, [sp, #32]
  4087c0:	ldp	x23, x24, [sp, #48]
  4087c4:	ldp	x29, x30, [sp], #208
  4087c8:	ret
  4087cc:	stp	x29, x30, [sp, #-48]!
  4087d0:	mov	x29, sp
  4087d4:	stp	x19, x20, [sp, #16]
  4087d8:	mov	x20, x1
  4087dc:	mov	x1, x2
  4087e0:	bl	401bd0 <fopen@plt>
  4087e4:	mov	x19, x0
  4087e8:	cbz	x0, 408848 <argp_parse@@Base+0xe28>
  4087ec:	stp	x21, x22, [sp, #32]
  4087f0:	mov	x1, x20
  4087f4:	bl	408630 <argp_parse@@Base+0xc10>
  4087f8:	mov	x20, x0
  4087fc:	bl	401ea0 <__errno_location@plt>
  408800:	mov	x21, x0
  408804:	ldr	w22, [x0]
  408808:	mov	x0, x19
  40880c:	bl	401bc0 <fclose@plt>
  408810:	cbnz	w0, 408828 <argp_parse@@Base+0xe08>
  408814:	ldp	x21, x22, [sp, #32]
  408818:	mov	x0, x20
  40881c:	ldp	x19, x20, [sp, #16]
  408820:	ldp	x29, x30, [sp], #48
  408824:	ret
  408828:	cbz	x20, 408838 <argp_parse@@Base+0xe18>
  40882c:	ldr	w22, [x21]
  408830:	mov	x0, x20
  408834:	bl	401d30 <free@plt>
  408838:	str	w22, [x21]
  40883c:	mov	x20, #0x0                   	// #0
  408840:	ldp	x21, x22, [sp, #32]
  408844:	b	408818 <argp_parse@@Base+0xdf8>
  408848:	mov	x20, x0
  40884c:	b	408818 <argp_parse@@Base+0xdf8>
  408850:	stp	x29, x30, [sp, #-16]!
  408854:	mov	x29, sp
  408858:	adrp	x2, 40d000 <argp_error@@Base+0xe2c>
  40885c:	add	x2, x2, #0xfa8
  408860:	bl	4087cc <argp_parse@@Base+0xdac>
  408864:	ldp	x29, x30, [sp], #16
  408868:	ret
  40886c:	stp	x29, x30, [sp, #-16]!
  408870:	mov	x29, sp
  408874:	adrp	x2, 410000 <argp_error@@Base+0x3e2c>
  408878:	add	x2, x2, #0x8a8
  40887c:	bl	4087cc <argp_parse@@Base+0xdac>
  408880:	ldp	x29, x30, [sp], #16
  408884:	ret
  408888:	sub	sp, sp, #0x50
  40888c:	stp	x29, x30, [sp, #32]
  408890:	add	x29, sp, #0x20
  408894:	stp	x19, x20, [sp, #48]
  408898:	str	x21, [sp, #64]
  40889c:	mov	x20, x0
  4088a0:	mov	x21, x4
  4088a4:	mov	x19, x5
  4088a8:	cbz	x1, 40895c <argp_parse@@Base+0xf3c>
  4088ac:	mov	x4, x3
  4088b0:	mov	x3, x2
  4088b4:	mov	x2, x1
  4088b8:	adrp	x1, 410000 <argp_error@@Base+0x3e2c>
  4088bc:	add	x1, x1, #0x8b0
  4088c0:	bl	401ed0 <fprintf@plt>
  4088c4:	mov	w3, #0x7df                 	// #2015
  4088c8:	adrp	x2, 410000 <argp_error@@Base+0x3e2c>
  4088cc:	add	x2, x2, #0x8c8
  4088d0:	adrp	x1, 410000 <argp_error@@Base+0x3e2c>
  4088d4:	add	x1, x1, #0xbe0
  4088d8:	mov	x0, x20
  4088dc:	bl	401ed0 <fprintf@plt>
  4088e0:	mov	x3, x20
  4088e4:	mov	x2, #0xca                  	// #202
  4088e8:	mov	x1, #0x1                   	// #1
  4088ec:	adrp	x0, 410000 <argp_error@@Base+0x3e2c>
  4088f0:	add	x0, x0, #0x8d0
  4088f4:	bl	401d80 <fwrite@plt>
  4088f8:	cmp	x19, #0x5
  4088fc:	b.eq	408a64 <argp_parse@@Base+0x1044>  // b.none
  408900:	b.ls	40896c <argp_parse@@Base+0xf4c>  // b.plast
  408904:	cmp	x19, #0x8
  408908:	b.eq	408ab8 <argp_parse@@Base+0x1098>  // b.none
  40890c:	b.ls	4089e0 <argp_parse@@Base+0xfc0>  // b.plast
  408910:	cmp	x19, #0x9
  408914:	b.ne	408af4 <argp_parse@@Base+0x10d4>  // b.any
  408918:	ldr	x0, [x21, #64]
  40891c:	str	x0, [sp, #16]
  408920:	ldr	x0, [x21, #56]
  408924:	str	x0, [sp, #8]
  408928:	ldr	x0, [x21, #48]
  40892c:	str	x0, [sp]
  408930:	ldr	x7, [x21, #40]
  408934:	ldr	x6, [x21, #32]
  408938:	ldr	x5, [x21, #24]
  40893c:	ldr	x4, [x21, #16]
  408940:	ldr	x3, [x21, #8]
  408944:	ldr	x2, [x21]
  408948:	adrp	x1, 410000 <argp_error@@Base+0x3e2c>
  40894c:	add	x1, x1, #0xab8
  408950:	mov	x0, x20
  408954:	bl	401ed0 <fprintf@plt>
  408958:	b	4089cc <argp_parse@@Base+0xfac>
  40895c:	adrp	x1, 410000 <argp_error@@Base+0x3e2c>
  408960:	add	x1, x1, #0x8c0
  408964:	bl	401ed0 <fprintf@plt>
  408968:	b	4088c4 <argp_parse@@Base+0xea4>
  40896c:	cmp	x19, #0x3
  408970:	b.eq	408a44 <argp_parse@@Base+0x1024>  // b.none
  408974:	b.ls	40899c <argp_parse@@Base+0xf7c>  // b.plast
  408978:	ldr	x5, [x21, #24]
  40897c:	ldr	x4, [x21, #16]
  408980:	ldr	x3, [x21, #8]
  408984:	ldr	x2, [x21]
  408988:	adrp	x1, 410000 <argp_error@@Base+0x3e2c>
  40898c:	add	x1, x1, #0x9e8
  408990:	mov	x0, x20
  408994:	bl	401ed0 <fprintf@plt>
  408998:	b	4089cc <argp_parse@@Base+0xfac>
  40899c:	cmp	x19, #0x2
  4089a0:	b.eq	408a28 <argp_parse@@Base+0x1008>  // b.none
  4089a4:	cmp	x19, #0x3
  4089a8:	b.eq	408af4 <argp_parse@@Base+0x10d4>  // b.none
  4089ac:	cbz	x19, 408a24 <argp_parse@@Base+0x1004>
  4089b0:	cmp	x19, #0x1
  4089b4:	b.ne	408af4 <argp_parse@@Base+0x10d4>  // b.any
  4089b8:	ldr	x2, [x21]
  4089bc:	adrp	x1, 410000 <argp_error@@Base+0x3e2c>
  4089c0:	add	x1, x1, #0x9a0
  4089c4:	mov	x0, x20
  4089c8:	bl	401ed0 <fprintf@plt>
  4089cc:	ldp	x19, x20, [sp, #48]
  4089d0:	ldr	x21, [sp, #64]
  4089d4:	ldp	x29, x30, [sp, #32]
  4089d8:	add	sp, sp, #0x50
  4089dc:	ret
  4089e0:	cmp	x19, #0x6
  4089e4:	b.eq	408a8c <argp_parse@@Base+0x106c>  // b.none
  4089e8:	cmp	x19, #0x7
  4089ec:	b.ne	408af4 <argp_parse@@Base+0x10d4>  // b.any
  4089f0:	ldr	x0, [x21, #48]
  4089f4:	str	x0, [sp]
  4089f8:	ldr	x7, [x21, #40]
  4089fc:	ldr	x6, [x21, #32]
  408a00:	ldr	x5, [x21, #24]
  408a04:	ldr	x4, [x21, #16]
  408a08:	ldr	x3, [x21, #8]
  408a0c:	ldr	x2, [x21]
  408a10:	adrp	x1, 410000 <argp_error@@Base+0x3e2c>
  408a14:	add	x1, x1, #0xa58
  408a18:	mov	x0, x20
  408a1c:	bl	401ed0 <fprintf@plt>
  408a20:	b	4089cc <argp_parse@@Base+0xfac>
  408a24:	bl	401cd0 <abort@plt>
  408a28:	ldr	x3, [x21, #8]
  408a2c:	ldr	x2, [x21]
  408a30:	adrp	x1, 410000 <argp_error@@Base+0x3e2c>
  408a34:	add	x1, x1, #0x9b0
  408a38:	mov	x0, x20
  408a3c:	bl	401ed0 <fprintf@plt>
  408a40:	b	4089cc <argp_parse@@Base+0xfac>
  408a44:	ldr	x4, [x21, #16]
  408a48:	ldr	x3, [x21, #8]
  408a4c:	ldr	x2, [x21]
  408a50:	adrp	x1, 410000 <argp_error@@Base+0x3e2c>
  408a54:	add	x1, x1, #0x9c8
  408a58:	mov	x0, x20
  408a5c:	bl	401ed0 <fprintf@plt>
  408a60:	b	4089cc <argp_parse@@Base+0xfac>
  408a64:	ldr	x6, [x21, #32]
  408a68:	ldr	x5, [x21, #24]
  408a6c:	ldr	x4, [x21, #16]
  408a70:	ldr	x3, [x21, #8]
  408a74:	ldr	x2, [x21]
  408a78:	adrp	x1, 410000 <argp_error@@Base+0x3e2c>
  408a7c:	add	x1, x1, #0xa08
  408a80:	mov	x0, x20
  408a84:	bl	401ed0 <fprintf@plt>
  408a88:	b	4089cc <argp_parse@@Base+0xfac>
  408a8c:	ldr	x7, [x21, #40]
  408a90:	ldr	x6, [x21, #32]
  408a94:	ldr	x5, [x21, #24]
  408a98:	ldr	x4, [x21, #16]
  408a9c:	ldr	x3, [x21, #8]
  408aa0:	ldr	x2, [x21]
  408aa4:	adrp	x1, 410000 <argp_error@@Base+0x3e2c>
  408aa8:	add	x1, x1, #0xa30
  408aac:	mov	x0, x20
  408ab0:	bl	401ed0 <fprintf@plt>
  408ab4:	b	4089cc <argp_parse@@Base+0xfac>
  408ab8:	ldr	x0, [x21, #56]
  408abc:	str	x0, [sp, #8]
  408ac0:	ldr	x0, [x21, #48]
  408ac4:	str	x0, [sp]
  408ac8:	ldr	x7, [x21, #40]
  408acc:	ldr	x6, [x21, #32]
  408ad0:	ldr	x5, [x21, #24]
  408ad4:	ldr	x4, [x21, #16]
  408ad8:	ldr	x3, [x21, #8]
  408adc:	ldr	x2, [x21]
  408ae0:	adrp	x1, 410000 <argp_error@@Base+0x3e2c>
  408ae4:	add	x1, x1, #0xa88
  408ae8:	mov	x0, x20
  408aec:	bl	401ed0 <fprintf@plt>
  408af0:	b	4089cc <argp_parse@@Base+0xfac>
  408af4:	ldr	x0, [x21, #64]
  408af8:	str	x0, [sp, #16]
  408afc:	ldr	x0, [x21, #56]
  408b00:	str	x0, [sp, #8]
  408b04:	ldr	x0, [x21, #48]
  408b08:	str	x0, [sp]
  408b0c:	ldr	x7, [x21, #40]
  408b10:	ldr	x6, [x21, #32]
  408b14:	ldr	x5, [x21, #24]
  408b18:	ldr	x4, [x21, #16]
  408b1c:	ldr	x3, [x21, #8]
  408b20:	ldr	x2, [x21]
  408b24:	adrp	x1, 410000 <argp_error@@Base+0x3e2c>
  408b28:	add	x1, x1, #0xaf0
  408b2c:	mov	x0, x20
  408b30:	bl	401ed0 <fprintf@plt>
  408b34:	b	4089cc <argp_parse@@Base+0xfac>
  408b38:	stp	x29, x30, [sp, #-16]!
  408b3c:	mov	x29, sp
  408b40:	ldr	x5, [x4]
  408b44:	cbz	x5, 408b64 <argp_parse@@Base+0x1144>
  408b48:	mov	x5, #0x0                   	// #0
  408b4c:	add	x5, x5, #0x1
  408b50:	ldr	x6, [x4, x5, lsl #3]
  408b54:	cbnz	x6, 408b4c <argp_parse@@Base+0x112c>
  408b58:	bl	408888 <argp_parse@@Base+0xe68>
  408b5c:	ldp	x29, x30, [sp], #16
  408b60:	ret
  408b64:	mov	x5, #0x0                   	// #0
  408b68:	b	408b58 <argp_parse@@Base+0x1138>
  408b6c:	stp	x29, x30, [sp, #-96]!
  408b70:	mov	x29, sp
  408b74:	ldr	x7, [x4]
  408b78:	ldr	w8, [x4, #24]
  408b7c:	ldr	x11, [x4, #8]
  408b80:	add	x4, sp, #0x10
  408b84:	mov	x5, #0x0                   	// #0
  408b88:	b	408bc4 <argp_parse@@Base+0x11a4>
  408b8c:	add	w9, w8, #0x8
  408b90:	cmp	w9, #0x0
  408b94:	b.le	408bd8 <argp_parse@@Base+0x11b8>
  408b98:	add	x10, x7, #0xf
  408b9c:	mov	w8, w9
  408ba0:	mov	x6, x7
  408ba4:	and	x7, x10, #0xfffffffffffffff8
  408ba8:	ldr	x6, [x6]
  408bac:	str	x6, [x4]
  408bb0:	cbz	x6, 408be4 <argp_parse@@Base+0x11c4>
  408bb4:	add	x5, x5, #0x1
  408bb8:	add	x4, x4, #0x8
  408bbc:	cmp	x5, #0xa
  408bc0:	b.eq	408be4 <argp_parse@@Base+0x11c4>  // b.none
  408bc4:	tbnz	w8, #31, 408b8c <argp_parse@@Base+0x116c>
  408bc8:	add	x9, x7, #0xf
  408bcc:	mov	x6, x7
  408bd0:	and	x7, x9, #0xfffffffffffffff8
  408bd4:	b	408ba8 <argp_parse@@Base+0x1188>
  408bd8:	add	x6, x11, w8, sxtw
  408bdc:	mov	w8, w9
  408be0:	b	408ba8 <argp_parse@@Base+0x1188>
  408be4:	add	x4, sp, #0x10
  408be8:	bl	408888 <argp_parse@@Base+0xe68>
  408bec:	ldp	x29, x30, [sp], #96
  408bf0:	ret
  408bf4:	stp	x29, x30, [sp, #-240]!
  408bf8:	mov	x29, sp
  408bfc:	str	x4, [sp, #208]
  408c00:	str	x5, [sp, #216]
  408c04:	str	x6, [sp, #224]
  408c08:	str	x7, [sp, #232]
  408c0c:	str	q0, [sp, #80]
  408c10:	str	q1, [sp, #96]
  408c14:	str	q2, [sp, #112]
  408c18:	str	q3, [sp, #128]
  408c1c:	str	q4, [sp, #144]
  408c20:	str	q5, [sp, #160]
  408c24:	str	q6, [sp, #176]
  408c28:	str	q7, [sp, #192]
  408c2c:	add	x4, sp, #0xf0
  408c30:	str	x4, [sp, #48]
  408c34:	str	x4, [sp, #56]
  408c38:	add	x4, sp, #0xd0
  408c3c:	str	x4, [sp, #64]
  408c40:	mov	w4, #0xffffffe0            	// #-32
  408c44:	str	w4, [sp, #72]
  408c48:	mov	w4, #0xffffff80            	// #-128
  408c4c:	str	w4, [sp, #76]
  408c50:	ldp	x4, x5, [sp, #48]
  408c54:	stp	x4, x5, [sp, #16]
  408c58:	ldp	x4, x5, [sp, #64]
  408c5c:	stp	x4, x5, [sp, #32]
  408c60:	add	x4, sp, #0x10
  408c64:	bl	408b6c <argp_parse@@Base+0x114c>
  408c68:	ldp	x29, x30, [sp], #240
  408c6c:	ret
  408c70:	stp	x29, x30, [sp, #-16]!
  408c74:	mov	x29, sp
  408c78:	adrp	x1, 410000 <argp_error@@Base+0x3e2c>
  408c7c:	add	x1, x1, #0xb30
  408c80:	adrp	x0, 410000 <argp_error@@Base+0x3e2c>
  408c84:	add	x0, x0, #0xb48
  408c88:	bl	401e80 <printf@plt>
  408c8c:	adrp	x2, 410000 <argp_error@@Base+0x3e2c>
  408c90:	add	x2, x2, #0xb60
  408c94:	adrp	x1, 410000 <argp_error@@Base+0x3e2c>
  408c98:	add	x1, x1, #0x850
  408c9c:	adrp	x0, 410000 <argp_error@@Base+0x3e2c>
  408ca0:	add	x0, x0, #0xb88
  408ca4:	bl	401e80 <printf@plt>
  408ca8:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  408cac:	ldr	x3, [x0, #1256]
  408cb0:	mov	x2, #0x3f                  	// #63
  408cb4:	mov	x1, #0x1                   	// #1
  408cb8:	adrp	x0, 410000 <argp_error@@Base+0x3e2c>
  408cbc:	add	x0, x0, #0xba0
  408cc0:	bl	401d80 <fwrite@plt>
  408cc4:	ldp	x29, x30, [sp], #16
  408cc8:	ret
  408ccc:	stp	x29, x30, [sp, #-32]!
  408cd0:	mov	x29, sp
  408cd4:	str	x19, [sp, #16]
  408cd8:	mov	x19, x0
  408cdc:	bl	401be0 <malloc@plt>
  408ce0:	cmp	x0, #0x0
  408ce4:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  408ce8:	b.ne	408cf8 <argp_parse@@Base+0x12d8>  // b.any
  408cec:	ldr	x19, [sp, #16]
  408cf0:	ldp	x29, x30, [sp], #32
  408cf4:	ret
  408cf8:	bl	408eec <argp_parse@@Base+0x14cc>
  408cfc:	stp	x29, x30, [sp, #-16]!
  408d00:	mov	x29, sp
  408d04:	umulh	x2, x0, x1
  408d08:	cbnz	x2, 408d1c <argp_parse@@Base+0x12fc>
  408d0c:	mul	x0, x0, x1
  408d10:	bl	408ccc <argp_parse@@Base+0x12ac>
  408d14:	ldp	x29, x30, [sp], #16
  408d18:	ret
  408d1c:	bl	408eec <argp_parse@@Base+0x14cc>
  408d20:	stp	x29, x30, [sp, #-16]!
  408d24:	mov	x29, sp
  408d28:	bl	408ccc <argp_parse@@Base+0x12ac>
  408d2c:	ldp	x29, x30, [sp], #16
  408d30:	ret
  408d34:	stp	x29, x30, [sp, #-32]!
  408d38:	mov	x29, sp
  408d3c:	cmp	x1, #0x0
  408d40:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  408d44:	b.ne	408d6c <argp_parse@@Base+0x134c>  // b.any
  408d48:	str	x19, [sp, #16]
  408d4c:	mov	x19, x1
  408d50:	bl	401c70 <realloc@plt>
  408d54:	cmp	x0, #0x0
  408d58:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  408d5c:	b.ne	408d78 <argp_parse@@Base+0x1358>  // b.any
  408d60:	ldr	x19, [sp, #16]
  408d64:	ldp	x29, x30, [sp], #32
  408d68:	ret
  408d6c:	bl	401d30 <free@plt>
  408d70:	mov	x0, #0x0                   	// #0
  408d74:	b	408d64 <argp_parse@@Base+0x1344>
  408d78:	bl	408eec <argp_parse@@Base+0x14cc>
  408d7c:	stp	x29, x30, [sp, #-16]!
  408d80:	mov	x29, sp
  408d84:	umulh	x3, x1, x2
  408d88:	cbnz	x3, 408d9c <argp_parse@@Base+0x137c>
  408d8c:	mul	x1, x1, x2
  408d90:	bl	408d34 <argp_parse@@Base+0x1314>
  408d94:	ldp	x29, x30, [sp], #16
  408d98:	ret
  408d9c:	bl	408eec <argp_parse@@Base+0x14cc>
  408da0:	stp	x29, x30, [sp, #-16]!
  408da4:	mov	x29, sp
  408da8:	ldr	x3, [x1]
  408dac:	cbz	x0, 408ddc <argp_parse@@Base+0x13bc>
  408db0:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  408db4:	udiv	x4, x4, x2
  408db8:	cmp	x4, x3
  408dbc:	b.ls	408df4 <argp_parse@@Base+0x13d4>  // b.plast
  408dc0:	add	x4, x3, #0x1
  408dc4:	add	x3, x4, x3, lsr #1
  408dc8:	str	x3, [x1]
  408dcc:	mul	x1, x3, x2
  408dd0:	bl	408d34 <argp_parse@@Base+0x1314>
  408dd4:	ldp	x29, x30, [sp], #16
  408dd8:	ret
  408ddc:	cbnz	x3, 408dc8 <argp_parse@@Base+0x13a8>
  408de0:	mov	x3, #0x80                  	// #128
  408de4:	udiv	x3, x3, x2
  408de8:	cmp	x2, #0x80
  408dec:	cinc	x3, x3, hi  // hi = pmore
  408df0:	b	408dc8 <argp_parse@@Base+0x13a8>
  408df4:	bl	408eec <argp_parse@@Base+0x14cc>
  408df8:	stp	x29, x30, [sp, #-16]!
  408dfc:	mov	x29, sp
  408e00:	mov	x2, x1
  408e04:	ldr	x1, [x1]
  408e08:	cbz	x0, 408e30 <argp_parse@@Base+0x1410>
  408e0c:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  408e10:	cmp	x1, x3
  408e14:	b.cs	408e40 <argp_parse@@Base+0x1420>  // b.hs, b.nlast
  408e18:	add	x3, x1, #0x1
  408e1c:	add	x1, x3, x1, lsr #1
  408e20:	str	x1, [x2]
  408e24:	bl	408d34 <argp_parse@@Base+0x1314>
  408e28:	ldp	x29, x30, [sp], #16
  408e2c:	ret
  408e30:	cmp	x1, #0x0
  408e34:	mov	x3, #0x80                  	// #128
  408e38:	csel	x1, x1, x3, ne  // ne = any
  408e3c:	b	408e20 <argp_parse@@Base+0x1400>
  408e40:	bl	408eec <argp_parse@@Base+0x14cc>
  408e44:	stp	x29, x30, [sp, #-32]!
  408e48:	mov	x29, sp
  408e4c:	str	x19, [sp, #16]
  408e50:	mov	x19, x0
  408e54:	bl	408ccc <argp_parse@@Base+0x12ac>
  408e58:	mov	x2, x19
  408e5c:	mov	w1, #0x0                   	// #0
  408e60:	bl	401c20 <memset@plt>
  408e64:	ldr	x19, [sp, #16]
  408e68:	ldp	x29, x30, [sp], #32
  408e6c:	ret
  408e70:	stp	x29, x30, [sp, #-16]!
  408e74:	mov	x29, sp
  408e78:	bl	401c50 <calloc@plt>
  408e7c:	cbz	x0, 408e88 <argp_parse@@Base+0x1468>
  408e80:	ldp	x29, x30, [sp], #16
  408e84:	ret
  408e88:	bl	408eec <argp_parse@@Base+0x14cc>
  408e8c:	stp	x29, x30, [sp, #-32]!
  408e90:	mov	x29, sp
  408e94:	stp	x19, x20, [sp, #16]
  408e98:	mov	x20, x0
  408e9c:	mov	x19, x1
  408ea0:	mov	x0, x1
  408ea4:	bl	408ccc <argp_parse@@Base+0x12ac>
  408ea8:	mov	x2, x19
  408eac:	mov	x1, x20
  408eb0:	bl	401aa0 <memcpy@plt>
  408eb4:	ldp	x19, x20, [sp, #16]
  408eb8:	ldp	x29, x30, [sp], #32
  408ebc:	ret
  408ec0:	stp	x29, x30, [sp, #-32]!
  408ec4:	mov	x29, sp
  408ec8:	str	x19, [sp, #16]
  408ecc:	mov	x19, x0
  408ed0:	bl	401b00 <strlen@plt>
  408ed4:	add	x1, x0, #0x1
  408ed8:	mov	x0, x19
  408edc:	bl	408e8c <argp_parse@@Base+0x146c>
  408ee0:	ldr	x19, [sp, #16]
  408ee4:	ldp	x29, x30, [sp], #32
  408ee8:	ret
  408eec:	stp	x29, x30, [sp, #-16]!
  408ef0:	mov	x29, sp
  408ef4:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  408ef8:	ldr	w0, [x0, #1216]
  408efc:	adrp	x3, 410000 <argp_error@@Base+0x3e2c>
  408f00:	add	x3, x3, #0xc10
  408f04:	adrp	x2, 40e000 <argp_error@@Base+0x1e2c>
  408f08:	add	x2, x2, #0x90
  408f0c:	mov	w1, #0x0                   	// #0
  408f10:	bl	401b30 <error@plt>
  408f14:	bl	401cd0 <abort@plt>
  408f18:	stp	x29, x30, [sp, #-16]!
  408f1c:	mov	x29, sp
  408f20:	mov	w6, #0x0                   	// #0
  408f24:	mov	w5, #0x0                   	// #0
  408f28:	bl	40d238 <argp_error@@Base+0x1064>
  408f2c:	ldp	x29, x30, [sp], #16
  408f30:	ret
  408f34:	stp	x29, x30, [sp, #-16]!
  408f38:	mov	x29, sp
  408f3c:	mov	w7, #0x0                   	// #0
  408f40:	mov	x6, x5
  408f44:	mov	w5, #0x0                   	// #0
  408f48:	bl	40c470 <argp_error@@Base+0x29c>
  408f4c:	ldp	x29, x30, [sp], #16
  408f50:	ret
  408f54:	stp	x29, x30, [sp, #-16]!
  408f58:	mov	x29, sp
  408f5c:	mov	w6, #0x0                   	// #0
  408f60:	mov	w5, #0x1                   	// #1
  408f64:	bl	40d238 <argp_error@@Base+0x1064>
  408f68:	ldp	x29, x30, [sp], #16
  408f6c:	ret
  408f70:	stp	x29, x30, [sp, #-16]!
  408f74:	mov	x29, sp
  408f78:	mov	w7, #0x0                   	// #0
  408f7c:	mov	x6, x5
  408f80:	mov	w5, #0x1                   	// #1
  408f84:	bl	40c470 <argp_error@@Base+0x29c>
  408f88:	ldp	x29, x30, [sp], #16
  408f8c:	ret
  408f90:	stp	x29, x30, [sp, #-64]!
  408f94:	mov	x29, sp
  408f98:	str	x2, [sp, #56]
  408f9c:	add	x2, sp, #0x40
  408fa0:	str	x2, [sp, #16]
  408fa4:	str	x2, [sp, #24]
  408fa8:	add	x2, sp, #0x30
  408fac:	str	x2, [sp, #32]
  408fb0:	str	wzr, [sp, #44]
  408fb4:	str	wzr, [sp, #40]
  408fb8:	ldr	x2, [sp, #24]
  408fbc:	sub	x2, x2, #0x8
  408fc0:	ldr	x2, [x2]
  408fc4:	mov	w1, w1
  408fc8:	bl	401ee0 <ioctl@plt>
  408fcc:	ldp	x29, x30, [sp], #64
  408fd0:	ret
  408fd4:	stp	x29, x30, [sp, #-16]!
  408fd8:	mov	x29, sp
  408fdc:	mov	x2, x0
  408fe0:	ldrb	w0, [x0, #80]
  408fe4:	tbz	w0, #0, 408ffc <argp_parse@@Base+0x15dc>
  408fe8:	ldr	x3, [x2, #56]
  408fec:	ldr	x0, [x2, #72]
  408ff0:	blr	x3
  408ff4:	ldp	x29, x30, [sp], #16
  408ff8:	ret
  408ffc:	ldr	x2, [x2, #56]
  409000:	mov	x0, x1
  409004:	blr	x2
  409008:	b	408ff4 <argp_parse@@Base+0x15d4>
  40900c:	stp	x29, x30, [sp, #-16]!
  409010:	mov	x29, sp
  409014:	mov	x2, x0
  409018:	ldrb	w0, [x0, #80]
  40901c:	tbz	w0, #0, 409034 <argp_parse@@Base+0x1614>
  409020:	ldr	x3, [x2, #64]
  409024:	ldr	x0, [x2, #72]
  409028:	blr	x3
  40902c:	ldp	x29, x30, [sp], #16
  409030:	ret
  409034:	ldr	x2, [x2, #64]
  409038:	mov	x0, x1
  40903c:	blr	x2
  409040:	b	40902c <argp_parse@@Base+0x160c>
  409044:	stp	x29, x30, [sp, #-48]!
  409048:	mov	x29, sp
  40904c:	stp	x19, x20, [sp, #16]
  409050:	stp	x21, x22, [sp, #32]
  409054:	mov	x19, x0
  409058:	cmp	x2, #0x0
  40905c:	mov	x0, #0x10                  	// #16
  409060:	csel	x20, x2, x0, ne  // ne = any
  409064:	cmp	x1, #0x0
  409068:	mov	x0, #0xfe0                 	// #4064
  40906c:	csel	x1, x1, x0, ne  // ne = any
  409070:	str	x1, [x19]
  409074:	sub	x22, x20, #0x1
  409078:	str	x22, [x19, #48]
  40907c:	mov	x0, x19
  409080:	bl	408fd4 <argp_parse@@Base+0x15b4>
  409084:	mov	x21, x0
  409088:	str	x0, [x19, #8]
  40908c:	cbz	x0, 4090dc <argp_parse@@Base+0x16bc>
  409090:	add	x2, x21, #0x10
  409094:	add	x2, x2, x22
  409098:	neg	x20, x20
  40909c:	and	x20, x2, x20
  4090a0:	str	x20, [x19, #16]
  4090a4:	str	x20, [x19, #24]
  4090a8:	ldr	x0, [x19]
  4090ac:	add	x0, x21, x0
  4090b0:	str	x0, [x21]
  4090b4:	str	x0, [x19, #32]
  4090b8:	str	xzr, [x21, #8]
  4090bc:	ldrb	w0, [x19, #80]
  4090c0:	and	w0, w0, #0xfffffff9
  4090c4:	strb	w0, [x19, #80]
  4090c8:	mov	w0, #0x1                   	// #1
  4090cc:	ldp	x19, x20, [sp, #16]
  4090d0:	ldp	x21, x22, [sp, #32]
  4090d4:	ldp	x29, x30, [sp], #48
  4090d8:	ret
  4090dc:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  4090e0:	ldr	x0, [x0, #1168]
  4090e4:	blr	x0
  4090e8:	b	409090 <argp_parse@@Base+0x1670>
  4090ec:	stp	x29, x30, [sp, #-16]!
  4090f0:	mov	x29, sp
  4090f4:	adrp	x2, 410000 <argp_error@@Base+0x3e2c>
  4090f8:	add	x2, x2, #0xc10
  4090fc:	adrp	x1, 410000 <argp_error@@Base+0x3e2c>
  409100:	add	x1, x1, #0x8b8
  409104:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  409108:	ldr	x0, [x0, #1248]
  40910c:	bl	401ed0 <fprintf@plt>
  409110:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  409114:	ldr	w0, [x0, #1216]
  409118:	bl	401b20 <exit@plt>

000000000040911c <_obstack_begin@@Base>:
  40911c:	stp	x29, x30, [sp, #-16]!
  409120:	mov	x29, sp
  409124:	str	x3, [x0, #56]
  409128:	str	x4, [x0, #64]
  40912c:	ldrb	w3, [x0, #80]
  409130:	and	w3, w3, #0xfffffffe
  409134:	strb	w3, [x0, #80]
  409138:	bl	409044 <argp_parse@@Base+0x1624>
  40913c:	ldp	x29, x30, [sp], #16
  409140:	ret

0000000000409144 <_obstack_begin_1@@Base>:
  409144:	stp	x29, x30, [sp, #-16]!
  409148:	mov	x29, sp
  40914c:	str	x3, [x0, #56]
  409150:	str	x4, [x0, #64]
  409154:	str	x5, [x0, #72]
  409158:	ldrb	w3, [x0, #80]
  40915c:	orr	w3, w3, #0x1
  409160:	strb	w3, [x0, #80]
  409164:	bl	409044 <argp_parse@@Base+0x1624>
  409168:	ldp	x29, x30, [sp], #16
  40916c:	ret

0000000000409170 <_obstack_newchunk@@Base>:
  409170:	stp	x29, x30, [sp, #-64]!
  409174:	mov	x29, sp
  409178:	stp	x19, x20, [sp, #16]
  40917c:	stp	x21, x22, [sp, #32]
  409180:	str	x23, [sp, #48]
  409184:	mov	x19, x0
  409188:	ldr	x22, [x0, #8]
  40918c:	ldr	x21, [x0, #24]
  409190:	ldr	x0, [x0, #16]
  409194:	sub	x21, x21, x0
  409198:	add	x3, x21, x1
  40919c:	ldr	x0, [x19, #48]
  4091a0:	add	x0, x3, x0
  4091a4:	lsr	x20, x21, #3
  4091a8:	add	x20, x20, #0x64
  4091ac:	add	x1, x20, x0
  4091b0:	ldr	x2, [x19]
  4091b4:	cmp	x2, x0
  4091b8:	csel	x2, x2, x0, cs  // cs = hs, nlast
  4091bc:	cmp	x2, x1
  4091c0:	csel	x20, x2, x1, cs  // cs = hs, nlast
  4091c4:	cmp	x21, x3
  4091c8:	ccmp	x3, x0, #0x2, ls  // ls = plast
  4091cc:	b.ls	409264 <_obstack_newchunk@@Base+0xf4>  // b.plast
  4091d0:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  4091d4:	ldr	x0, [x0, #1168]
  4091d8:	blr	x0
  4091dc:	mov	x23, #0x0                   	// #0
  4091e0:	str	x23, [x19, #8]
  4091e4:	str	x22, [x23, #8]
  4091e8:	add	x1, x23, x20
  4091ec:	str	x1, [x19, #32]
  4091f0:	mov	x2, x23
  4091f4:	str	x1, [x2], #16
  4091f8:	ldr	x20, [x19, #48]
  4091fc:	add	x2, x2, x20
  409200:	bic	x20, x2, x20
  409204:	mov	x2, x21
  409208:	ldr	x1, [x19, #16]
  40920c:	mov	x0, x20
  409210:	bl	401aa0 <memcpy@plt>
  409214:	ldrb	w0, [x19, #80]
  409218:	tbnz	w0, #1, 409238 <_obstack_newchunk@@Base+0xc8>
  40921c:	ldr	x0, [x19, #48]
  409220:	add	x1, x22, #0x10
  409224:	add	x1, x1, x0
  409228:	bic	x0, x1, x0
  40922c:	ldr	x1, [x19, #16]
  409230:	cmp	x1, x0
  409234:	b.eq	40927c <_obstack_newchunk@@Base+0x10c>  // b.none
  409238:	str	x20, [x19, #16]
  40923c:	add	x20, x20, x21
  409240:	str	x20, [x19, #24]
  409244:	ldrb	w0, [x19, #80]
  409248:	and	w0, w0, #0xfffffffd
  40924c:	strb	w0, [x19, #80]
  409250:	ldp	x19, x20, [sp, #16]
  409254:	ldp	x21, x22, [sp, #32]
  409258:	ldr	x23, [sp, #48]
  40925c:	ldp	x29, x30, [sp], #64
  409260:	ret
  409264:	mov	x1, x20
  409268:	mov	x0, x19
  40926c:	bl	408fd4 <argp_parse@@Base+0x15b4>
  409270:	mov	x23, x0
  409274:	cbnz	x0, 4091e0 <_obstack_newchunk@@Base+0x70>
  409278:	b	4091d0 <_obstack_newchunk@@Base+0x60>
  40927c:	ldr	x0, [x22, #8]
  409280:	str	x0, [x23, #8]
  409284:	mov	x1, x22
  409288:	mov	x0, x19
  40928c:	bl	40900c <argp_parse@@Base+0x15ec>
  409290:	b	409238 <_obstack_newchunk@@Base+0xc8>

0000000000409294 <_obstack_allocated_p@@Base>:
  409294:	ldr	x0, [x0, #8]
  409298:	cbnz	x0, 4092a8 <_obstack_allocated_p@@Base+0x14>
  40929c:	b	4092bc <_obstack_allocated_p@@Base+0x28>
  4092a0:	ldr	x0, [x0, #8]
  4092a4:	cbz	x0, 4092bc <_obstack_allocated_p@@Base+0x28>
  4092a8:	cmp	x1, x0
  4092ac:	b.ls	4092a0 <_obstack_allocated_p@@Base+0xc>  // b.plast
  4092b0:	ldr	x2, [x0]
  4092b4:	cmp	x2, x1
  4092b8:	b.cc	4092a0 <_obstack_allocated_p@@Base+0xc>  // b.lo, b.ul, b.last
  4092bc:	cmp	x0, #0x0
  4092c0:	cset	w0, ne  // ne = any
  4092c4:	ret

00000000004092c8 <_obstack_free@@Base>:
  4092c8:	stp	x29, x30, [sp, #-48]!
  4092cc:	mov	x29, sp
  4092d0:	stp	x19, x20, [sp, #16]
  4092d4:	str	x21, [sp, #32]
  4092d8:	mov	x19, x0
  4092dc:	mov	x21, x1
  4092e0:	ldr	x1, [x0, #8]
  4092e4:	cbnz	x1, 409310 <_obstack_free@@Base+0x48>
  4092e8:	cbz	x21, 409338 <_obstack_free@@Base+0x70>
  4092ec:	bl	401cd0 <abort@plt>
  4092f0:	ldr	x20, [x1, #8]
  4092f4:	mov	x0, x19
  4092f8:	bl	40900c <argp_parse@@Base+0x15ec>
  4092fc:	ldrb	w2, [x19, #80]
  409300:	orr	w2, w2, #0x2
  409304:	strb	w2, [x19, #80]
  409308:	cbz	x20, 4092e8 <_obstack_free@@Base+0x20>
  40930c:	mov	x1, x20
  409310:	cmp	x21, x1
  409314:	b.ls	4092f0 <_obstack_free@@Base+0x28>  // b.plast
  409318:	ldr	x0, [x1]
  40931c:	cmp	x0, x21
  409320:	b.cc	4092f0 <_obstack_free@@Base+0x28>  // b.lo, b.ul, b.last
  409324:	str	x21, [x19, #24]
  409328:	str	x21, [x19, #16]
  40932c:	ldr	x0, [x1]
  409330:	str	x0, [x19, #32]
  409334:	str	x1, [x19, #8]
  409338:	ldp	x19, x20, [sp, #16]
  40933c:	ldr	x21, [sp, #32]
  409340:	ldp	x29, x30, [sp], #48
  409344:	ret

0000000000409348 <_obstack_memory_used@@Base>:
  409348:	ldr	x1, [x0, #8]
  40934c:	cbz	x1, 40936c <_obstack_memory_used@@Base+0x24>
  409350:	mov	x0, #0x0                   	// #0
  409354:	ldr	x2, [x1]
  409358:	sub	x2, x2, x1
  40935c:	add	x0, x0, x2
  409360:	ldr	x1, [x1, #8]
  409364:	cbnz	x1, 409354 <_obstack_memory_used@@Base+0xc>
  409368:	ret
  40936c:	mov	x0, #0x0                   	// #0
  409370:	b	409368 <_obstack_memory_used@@Base+0x20>
  409374:	ldr	x1, [x0]
  409378:	ldr	w0, [x0, #8]
  40937c:	cbz	w0, 4093bc <_obstack_memory_used@@Base+0x74>
  409380:	sub	w0, w0, #0x1
  409384:	add	x2, x0, #0x1
  409388:	add	x2, x2, x2, lsl #1
  40938c:	add	x2, x1, x2, lsl #4
  409390:	b	4093a0 <_obstack_memory_used@@Base+0x58>
  409394:	add	x1, x1, #0x30
  409398:	cmp	x1, x2
  40939c:	b.eq	4093b4 <_obstack_memory_used@@Base+0x6c>  // b.none
  4093a0:	ldr	x0, [x1]
  4093a4:	cbz	x0, 409394 <_obstack_memory_used@@Base+0x4c>
  4093a8:	ldr	w3, [x1, #24]
  4093ac:	tbnz	w3, #1, 409394 <_obstack_memory_used@@Base+0x4c>
  4093b0:	b	4093b8 <_obstack_memory_used@@Base+0x70>
  4093b4:	mov	x0, #0x0                   	// #0
  4093b8:	ret
  4093bc:	mov	x0, #0x0                   	// #0
  4093c0:	b	4093b8 <_obstack_memory_used@@Base+0x70>
  4093c4:	cmp	w0, w1
  4093c8:	b.eq	4093e8 <_obstack_memory_used@@Base+0xa0>  // b.none
  4093cc:	mvn	w3, w1
  4093d0:	lsr	w3, w3, #31
  4093d4:	sub	w2, w0, w1
  4093d8:	sub	w1, w1, w0
  4093dc:	cmp	w3, w0, lsr #31
  4093e0:	csel	w0, w1, w2, eq  // eq = none
  4093e4:	ret
  4093e8:	mov	w0, w2
  4093ec:	b	4093e4 <_obstack_memory_used@@Base+0x9c>
  4093f0:	ldr	x2, [x0, #16]
  4093f4:	cbz	x2, 409400 <_obstack_memory_used@@Base+0xb8>
  4093f8:	mov	w0, #0x0                   	// #0
  4093fc:	ret
  409400:	ldr	x2, [x1, #16]
  409404:	cbnz	x2, 4093f8 <_obstack_memory_used@@Base+0xb0>
  409408:	ldr	w2, [x0, #24]
  40940c:	ldr	w1, [x1, #24]
  409410:	orr	w1, w2, w1
  409414:	tbnz	w1, #4, 4093f8 <_obstack_memory_used@@Base+0xb0>
  409418:	ldr	w1, [x0, #8]
  40941c:	ldr	x0, [x3]
  409420:	add	x2, x0, #0x1
  409424:	str	x2, [x3]
  409428:	strb	w1, [x0]
  40942c:	b	4093f8 <_obstack_memory_used@@Base+0xb0>
  409430:	stp	x29, x30, [sp, #-32]!
  409434:	mov	x29, sp
  409438:	str	x19, [sp, #16]
  40943c:	mov	x19, x0
  409440:	ldr	x0, [x0]
  409444:	cbz	x0, 4094ac <_obstack_memory_used@@Base+0x164>
  409448:	bl	401d00 <__ctype_b_loc@plt>
  40944c:	mov	x3, x0
  409450:	b	40945c <_obstack_memory_used@@Base+0x114>
  409454:	add	x1, x1, #0x1
  409458:	str	x1, [x19]
  40945c:	ldr	x1, [x19]
  409460:	ldrb	w2, [x1]
  409464:	and	x4, x2, #0xff
  409468:	ldr	x0, [x3]
  40946c:	ldrh	w0, [x0, x4, lsl #1]
  409470:	tbnz	w0, #13, 409454 <_obstack_memory_used@@Base+0x10c>
  409474:	cmp	w2, #0x2d
  409478:	cset	w0, ne  // ne = any
  40947c:	cbz	w2, 4094a0 <_obstack_memory_used@@Base+0x158>
  409480:	add	x1, x1, #0x1
  409484:	and	x2, x2, #0xff
  409488:	ldr	x4, [x3]
  40948c:	ldrh	w2, [x4, x2, lsl #1]
  409490:	tbnz	w2, #3, 4094a0 <_obstack_memory_used@@Base+0x158>
  409494:	str	x1, [x19]
  409498:	ldrb	w2, [x1], #1
  40949c:	cbnz	w2, 409484 <_obstack_memory_used@@Base+0x13c>
  4094a0:	ldr	x19, [sp, #16]
  4094a4:	ldp	x29, x30, [sp], #32
  4094a8:	ret
  4094ac:	mov	w0, #0x1                   	// #1
  4094b0:	b	4094a0 <_obstack_memory_used@@Base+0x158>
  4094b4:	stp	x29, x30, [sp, #-32]!
  4094b8:	mov	x29, sp
  4094bc:	stp	x19, x20, [sp, #16]
  4094c0:	mov	x20, x0
  4094c4:	ldr	x19, [x0, #24]
  4094c8:	cbz	x19, 4094dc <_obstack_memory_used@@Base+0x194>
  4094cc:	mov	x0, x19
  4094d0:	ldr	x19, [x19, #40]
  4094d4:	bl	401d30 <free@plt>
  4094d8:	cbnz	x19, 4094cc <_obstack_memory_used@@Base+0x184>
  4094dc:	ldr	w0, [x20, #8]
  4094e0:	cbnz	w0, 4094f8 <_obstack_memory_used@@Base+0x1b0>
  4094e4:	mov	x0, x20
  4094e8:	bl	401d30 <free@plt>
  4094ec:	ldp	x19, x20, [sp, #16]
  4094f0:	ldp	x29, x30, [sp], #32
  4094f4:	ret
  4094f8:	ldr	x0, [x20]
  4094fc:	bl	401d30 <free@plt>
  409500:	ldr	x0, [x20, #16]
  409504:	bl	401d30 <free@plt>
  409508:	b	4094e4 <_obstack_memory_used@@Base+0x19c>
  40950c:	stp	x29, x30, [sp, #-64]!
  409510:	mov	x29, sp
  409514:	stp	x21, x22, [sp, #32]
  409518:	mov	x21, x1
  40951c:	ldr	x22, [x0]
  409520:	ldr	w1, [x0, #8]
  409524:	cbz	w1, 4095cc <_obstack_memory_used@@Base+0x284>
  409528:	stp	x19, x20, [sp, #16]
  40952c:	str	x23, [sp, #48]
  409530:	sub	w0, w1, #0x1
  409534:	mov	w0, w0
  409538:	add	x0, x0, #0x1
  40953c:	lsl	x23, x0, #3
  409540:	sub	x0, x23, x0
  409544:	add	x23, x22, x0, lsl #3
  409548:	b	409598 <_obstack_memory_used@@Base+0x250>
  40954c:	add	x19, x19, #0x30
  409550:	cmp	x19, x20
  409554:	b.eq	40958c <_obstack_memory_used@@Base+0x244>  // b.none
  409558:	ldr	x0, [x19]
  40955c:	cbz	x0, 40954c <_obstack_memory_used@@Base+0x204>
  409560:	ldr	w1, [x19, #24]
  409564:	tbnz	w1, #1, 40954c <_obstack_memory_used@@Base+0x204>
  409568:	mov	x1, x21
  40956c:	bl	401cf0 <strcmp@plt>
  409570:	cbnz	w0, 40954c <_obstack_memory_used@@Base+0x204>
  409574:	ldp	x19, x20, [sp, #16]
  409578:	ldr	x23, [sp, #48]
  40957c:	mov	x0, x22
  409580:	ldp	x21, x22, [sp, #32]
  409584:	ldp	x29, x30, [sp], #64
  409588:	ret
  40958c:	add	x22, x22, #0x38
  409590:	cmp	x22, x23
  409594:	b.eq	4095bc <_obstack_memory_used@@Base+0x274>  // b.none
  409598:	ldr	x19, [x22]
  40959c:	ldr	w0, [x22, #8]
  4095a0:	sub	w20, w0, #0x1
  4095a4:	cbz	w0, 40958c <_obstack_memory_used@@Base+0x244>
  4095a8:	mov	w20, w20
  4095ac:	add	x20, x20, #0x1
  4095b0:	add	x20, x20, x20, lsl #1
  4095b4:	add	x20, x19, x20, lsl #4
  4095b8:	b	409558 <_obstack_memory_used@@Base+0x210>
  4095bc:	mov	x22, #0x0                   	// #0
  4095c0:	ldp	x19, x20, [sp, #16]
  4095c4:	ldr	x23, [sp, #48]
  4095c8:	b	40957c <_obstack_memory_used@@Base+0x234>
  4095cc:	mov	x22, #0x0                   	// #0
  4095d0:	b	40957c <_obstack_memory_used@@Base+0x234>
  4095d4:	stp	x29, x30, [sp, #-32]!
  4095d8:	mov	x29, sp
  4095dc:	stp	x19, x20, [sp, #16]
  4095e0:	ldr	x20, [x0, #32]
  4095e4:	ldr	x0, [x0, #16]
  4095e8:	mov	x19, #0x0                   	// #0
  4095ec:	cbz	x0, 409600 <_obstack_memory_used@@Base+0x2b8>
  4095f0:	mov	w1, #0xa                   	// #10
  4095f4:	bl	401d70 <strchr@plt>
  4095f8:	cmp	x0, #0x0
  4095fc:	cset	x19, ne  // ne = any
  409600:	cbz	x20, 40961c <_obstack_memory_used@@Base+0x2d4>
  409604:	ldr	x0, [x20]
  409608:	cbz	x0, 40961c <_obstack_memory_used@@Base+0x2d4>
  40960c:	bl	4095d4 <_obstack_memory_used@@Base+0x28c>
  409610:	add	x19, x19, x0
  409614:	ldr	x0, [x20, #32]!
  409618:	cbnz	x0, 40960c <_obstack_memory_used@@Base+0x2c4>
  40961c:	mov	x0, x19
  409620:	ldp	x19, x20, [sp, #16]
  409624:	ldp	x29, x30, [sp], #32
  409628:	ret
  40962c:	stp	x29, x30, [sp, #-48]!
  409630:	mov	x29, sp
  409634:	stp	x19, x20, [sp, #16]
  409638:	mov	x19, x0
  40963c:	ldr	x0, [x2, #40]
  409640:	cbz	x0, 409680 <_obstack_memory_used@@Base+0x338>
  409644:	str	x21, [sp, #32]
  409648:	mov	w21, w1
  40964c:	mov	x20, x2
  409650:	mov	x1, x3
  409654:	mov	x0, x2
  409658:	bl	408414 <argp_parse@@Base+0x9f4>
  40965c:	ldr	x3, [x20, #40]
  409660:	mov	x2, x0
  409664:	mov	x1, x19
  409668:	mov	w0, w21
  40966c:	blr	x3
  409670:	ldr	x21, [sp, #32]
  409674:	ldp	x19, x20, [sp, #16]
  409678:	ldp	x29, x30, [sp], #48
  40967c:	ret
  409680:	mov	x0, x19
  409684:	b	409674 <_obstack_memory_used@@Base+0x32c>
  409688:	stp	x29, x30, [sp, #-112]!
  40968c:	mov	x29, sp
  409690:	stp	x19, x20, [sp, #16]
  409694:	stp	x21, x22, [sp, #32]
  409698:	stp	x23, x24, [sp, #48]
  40969c:	str	x2, [sp, #104]
  4096a0:	ldr	x19, [x0]
  4096a4:	ldr	x24, [x0, #16]
  4096a8:	ldr	w21, [x0, #8]
  4096ac:	cbz	w21, 409764 <_obstack_memory_used@@Base+0x41c>
  4096b0:	stp	x25, x26, [sp, #64]
  4096b4:	stp	x27, x28, [sp, #80]
  4096b8:	mov	x27, x1
  4096bc:	mov	x28, x3
  4096c0:	mov	x26, x19
  4096c4:	mov	w25, #0x0                   	// #0
  4096c8:	b	4096e0 <_obstack_memory_used@@Base+0x398>
  4096cc:	mov	w22, w25
  4096d0:	add	x19, x19, #0x30
  4096d4:	subs	w21, w21, #0x1
  4096d8:	ccmp	w22, #0x0, #0x0, ne  // ne = any
  4096dc:	b.ne	409744 <_obstack_memory_used@@Base+0x3fc>  // b.any
  4096e0:	ldr	w20, [x19, #24]
  4096e4:	and	w22, w20, #0x8
  4096e8:	tbnz	w20, #3, 4096cc <_obstack_memory_used@@Base+0x384>
  4096ec:	ldr	w23, [x19, #8]
  4096f0:	sub	w0, w23, #0x1
  4096f4:	cmp	w0, #0xfe
  4096f8:	b.hi	4096d0 <_obstack_memory_used@@Base+0x388>  // b.pmore
  4096fc:	bl	401d00 <__ctype_b_loc@plt>
  409700:	ldr	x0, [x0]
  409704:	ldrh	w0, [x0, w23, sxtw #1]
  409708:	tbz	w0, #14, 4096d0 <_obstack_memory_used@@Base+0x388>
  40970c:	ldrb	w0, [x24]
  409710:	cmp	w0, w23
  409714:	b.ne	4096d0 <_obstack_memory_used@@Base+0x388>  // b.any
  409718:	tst	x20, #0x4
  40971c:	csel	x26, x26, x19, ne  // ne = any
  409720:	tbnz	w20, #1, 40973c <_obstack_memory_used@@Base+0x3f4>
  409724:	mov	x3, x28
  409728:	ldr	x2, [sp, #104]
  40972c:	mov	x1, x26
  409730:	mov	x0, x19
  409734:	blr	x27
  409738:	mov	w22, w0
  40973c:	add	x24, x24, #0x1
  409740:	b	4096d0 <_obstack_memory_used@@Base+0x388>
  409744:	ldp	x25, x26, [sp, #64]
  409748:	ldp	x27, x28, [sp, #80]
  40974c:	mov	w0, w22
  409750:	ldp	x19, x20, [sp, #16]
  409754:	ldp	x21, x22, [sp, #32]
  409758:	ldp	x23, x24, [sp, #48]
  40975c:	ldp	x29, x30, [sp], #112
  409760:	ret
  409764:	mov	w22, #0x0                   	// #0
  409768:	b	40974c <_obstack_memory_used@@Base+0x404>
  40976c:	stp	x29, x30, [sp, #-112]!
  409770:	mov	x29, sp
  409774:	stp	x19, x20, [sp, #16]
  409778:	stp	x21, x22, [sp, #32]
  40977c:	stp	x23, x24, [sp, #48]
  409780:	stp	x25, x26, [sp, #64]
  409784:	str	x27, [sp, #80]
  409788:	ldr	w21, [x0, #8]
  40978c:	cbz	w21, 409968 <_obstack_memory_used@@Base+0x620>
  409790:	mov	x20, x0
  409794:	mov	x23, x1
  409798:	ldr	x0, [x0, #16]
  40979c:	bl	401b00 <strlen@plt>
  4097a0:	add	x0, x0, #0x10
  4097a4:	and	x0, x0, #0xfffffffffffffff0
  4097a8:	sub	sp, sp, x0
  4097ac:	mov	x24, sp
  4097b0:	str	x24, [x29, #104]
  4097b4:	ldr	x19, [x20]
  4097b8:	sub	w21, w21, #0x1
  4097bc:	add	x0, x21, #0x1
  4097c0:	lsl	x21, x0, #3
  4097c4:	sub	x21, x21, x0
  4097c8:	add	x21, x19, x21, lsl #3
  4097cc:	adrp	x22, 409000 <argp_parse@@Base+0x15e0>
  4097d0:	add	x22, x22, #0x3f0
  4097d4:	ldr	x1, [x19, #40]
  4097d8:	add	x3, x29, #0x68
  4097dc:	ldr	x2, [x1, #48]
  4097e0:	mov	x1, x22
  4097e4:	mov	x0, x19
  4097e8:	bl	409688 <_obstack_memory_used@@Base+0x340>
  4097ec:	add	x19, x19, #0x38
  4097f0:	cmp	x19, x21
  4097f4:	b.ne	4097d4 <_obstack_memory_used@@Base+0x48c>  // b.any
  4097f8:	ldr	x0, [x29, #104]
  4097fc:	cmp	x0, x24
  409800:	b.hi	409884 <_obstack_memory_used@@Base+0x53c>  // b.pmore
  409804:	ldr	x19, [x20]
  409808:	ldr	w0, [x20, #8]
  40980c:	cbz	w0, 409968 <_obstack_memory_used@@Base+0x620>
  409810:	sub	w0, w0, #0x1
  409814:	add	x0, x0, #0x1
  409818:	lsl	x21, x0, #3
  40981c:	sub	x21, x21, x0
  409820:	add	x21, x19, x21, lsl #3
  409824:	adrp	x22, 409000 <argp_parse@@Base+0x15e0>
  409828:	add	x22, x22, #0xb60
  40982c:	ldr	x1, [x19, #40]
  409830:	mov	x3, x23
  409834:	ldr	x2, [x1, #48]
  409838:	mov	x1, x22
  40983c:	mov	x0, x19
  409840:	bl	409688 <_obstack_memory_used@@Base+0x340>
  409844:	add	x19, x19, #0x38
  409848:	cmp	x21, x19
  40984c:	b.ne	40982c <_obstack_memory_used@@Base+0x4e4>  // b.any
  409850:	ldr	x22, [x20]
  409854:	ldr	w0, [x20, #8]
  409858:	cbz	w0, 409968 <_obstack_memory_used@@Base+0x620>
  40985c:	sub	w0, w0, #0x1
  409860:	add	x0, x0, #0x1
  409864:	lsl	x24, x0, #3
  409868:	sub	x0, x24, x0
  40986c:	add	x24, x22, x0, lsl #3
  409870:	adrp	x27, 410000 <argp_error@@Base+0x3e2c>
  409874:	add	x27, x27, #0xc30
  409878:	adrp	x26, 410000 <argp_error@@Base+0x3e2c>
  40987c:	add	x26, x26, #0xc40
  409880:	b	409940 <_obstack_memory_used@@Base+0x5f8>
  409884:	add	x1, x0, #0x1
  409888:	str	x1, [x29, #104]
  40988c:	strb	wzr, [x0]
  409890:	mov	x2, x24
  409894:	adrp	x1, 410000 <argp_error@@Base+0x3e2c>
  409898:	add	x1, x1, #0xc28
  40989c:	mov	x0, x23
  4098a0:	bl	40d998 <argp_error@@Base+0x17c4>
  4098a4:	b	409804 <_obstack_memory_used@@Base+0x4bc>
  4098a8:	ldr	x3, [x21, #16]
  4098ac:	and	w4, w1, #0x10
  4098b0:	and	w0, w0, #0x8
  4098b4:	orr	w0, w4, w0
  4098b8:	cbnz	w0, 4098dc <_obstack_memory_used@@Base+0x594>
  4098bc:	cbnz	x3, 409920 <_obstack_memory_used@@Base+0x5d8>
  4098c0:	add	x1, x25, #0xc50
  4098c4:	mov	x0, x23
  4098c8:	bl	40d998 <argp_error@@Base+0x17c4>
  4098cc:	b	4098dc <_obstack_memory_used@@Base+0x594>
  4098d0:	mov	x1, x26
  4098d4:	mov	x0, x23
  4098d8:	bl	40d998 <argp_error@@Base+0x17c4>
  4098dc:	add	x19, x19, #0x30
  4098e0:	cmp	x19, x20
  4098e4:	b.eq	409934 <_obstack_memory_used@@Base+0x5ec>  // b.none
  4098e8:	ldr	x2, [x19]
  4098ec:	cbz	x2, 4098dc <_obstack_memory_used@@Base+0x594>
  4098f0:	ldr	w0, [x19, #24]
  4098f4:	tst	x0, #0x4
  4098f8:	csel	x21, x21, x19, ne  // ne = any
  4098fc:	tbnz	w0, #1, 4098dc <_obstack_memory_used@@Base+0x594>
  409900:	ldr	x3, [x19, #16]
  409904:	ldr	w1, [x21, #24]
  409908:	orr	w1, w0, w1
  40990c:	cbz	x3, 4098a8 <_obstack_memory_used@@Base+0x560>
  409910:	and	w4, w1, #0x10
  409914:	and	w0, w0, #0x8
  409918:	orr	w0, w4, w0
  40991c:	cbnz	w0, 4098dc <_obstack_memory_used@@Base+0x594>
  409920:	tbz	w1, #0, 4098d0 <_obstack_memory_used@@Base+0x588>
  409924:	mov	x1, x27
  409928:	mov	x0, x23
  40992c:	bl	40d998 <argp_error@@Base+0x17c4>
  409930:	b	4098dc <_obstack_memory_used@@Base+0x594>
  409934:	add	x22, x22, #0x38
  409938:	cmp	x22, x24
  40993c:	b.eq	409968 <_obstack_memory_used@@Base+0x620>  // b.none
  409940:	ldr	x19, [x22]
  409944:	ldr	w0, [x22, #8]
  409948:	cbz	w0, 409934 <_obstack_memory_used@@Base+0x5ec>
  40994c:	sub	w0, w0, #0x1
  409950:	add	x20, x0, #0x1
  409954:	add	x20, x20, x20, lsl #1
  409958:	add	x20, x19, x20, lsl #4
  40995c:	mov	x21, x19
  409960:	adrp	x25, 410000 <argp_error@@Base+0x3e2c>
  409964:	b	4098e8 <_obstack_memory_used@@Base+0x5a0>
  409968:	mov	sp, x29
  40996c:	ldp	x19, x20, [sp, #16]
  409970:	ldp	x21, x22, [sp, #32]
  409974:	ldp	x23, x24, [sp, #48]
  409978:	ldp	x25, x26, [sp, #64]
  40997c:	ldr	x27, [sp, #80]
  409980:	ldp	x29, x30, [sp], #112
  409984:	ret
  409988:	stp	x29, x30, [sp, #-48]!
  40998c:	mov	x29, sp
  409990:	stp	x19, x20, [sp, #16]
  409994:	mov	x19, x0
  409998:	mov	w20, w1
  40999c:	ldr	x0, [x0, #56]
  4099a0:	ldr	x1, [x19, #48]
  4099a4:	sub	x0, x0, x1
  4099a8:	ldr	x1, [x19, #32]
  4099ac:	cmp	x0, x1
  4099b0:	b.hi	4099e0 <_obstack_memory_used@@Base+0x698>  // b.pmore
  4099b4:	ldr	x0, [x19, #40]
  4099b8:	cmp	x0, #0x0
  4099bc:	csel	x0, x0, xzr, ge  // ge = tcont
  4099c0:	sub	w0, w20, w0
  4099c4:	sub	w20, w0, #0x1
  4099c8:	cmp	w0, #0x0
  4099cc:	b.le	409a30 <_obstack_memory_used@@Base+0x6e8>
  4099d0:	stp	x21, x22, [sp, #32]
  4099d4:	mov	w21, #0x20                  	// #32
  4099d8:	mov	x22, #0x1                   	// #1
  4099dc:	b	409a08 <_obstack_memory_used@@Base+0x6c0>
  4099e0:	mov	x0, x19
  4099e4:	bl	40d358 <argp_error@@Base+0x1184>
  4099e8:	b	4099b4 <_obstack_memory_used@@Base+0x66c>
  4099ec:	ldr	x0, [x19, #56]
  4099f0:	add	x1, x0, #0x1
  4099f4:	str	x1, [x19, #56]
  4099f8:	strb	w21, [x0]
  4099fc:	sub	w20, w20, #0x1
  409a00:	cmn	w20, #0x1
  409a04:	b.eq	409a2c <_obstack_memory_used@@Base+0x6e4>  // b.none
  409a08:	ldr	x1, [x19, #56]
  409a0c:	ldr	x0, [x19, #64]
  409a10:	cmp	x1, x0
  409a14:	b.cc	4099ec <_obstack_memory_used@@Base+0x6a4>  // b.lo, b.ul, b.last
  409a18:	mov	x1, x22
  409a1c:	mov	x0, x19
  409a20:	bl	40d8a0 <argp_error@@Base+0x16cc>
  409a24:	cbnz	w0, 4099ec <_obstack_memory_used@@Base+0x6a4>
  409a28:	b	4099fc <_obstack_memory_used@@Base+0x6b4>
  409a2c:	ldp	x21, x22, [sp, #32]
  409a30:	ldp	x19, x20, [sp, #16]
  409a34:	ldp	x29, x30, [sp], #48
  409a38:	ret
  409a3c:	stp	x29, x30, [sp, #-32]!
  409a40:	mov	x29, sp
  409a44:	stp	x19, x20, [sp, #16]
  409a48:	ldr	w1, [x0, #24]
  409a4c:	mov	w19, #0x0                   	// #0
  409a50:	tbnz	w1, #3, 409a7c <_obstack_memory_used@@Base+0x734>
  409a54:	and	w19, w1, #0x8
  409a58:	ldr	w20, [x0, #8]
  409a5c:	sub	w0, w20, #0x1
  409a60:	cmp	w0, #0xfe
  409a64:	b.hi	409a7c <_obstack_memory_used@@Base+0x734>  // b.pmore
  409a68:	bl	401d00 <__ctype_b_loc@plt>
  409a6c:	ldr	x0, [x0]
  409a70:	ldrh	w0, [x0, w20, sxtw #1]
  409a74:	tst	x0, #0x4000
  409a78:	csel	w19, w19, w20, eq  // eq = none
  409a7c:	mov	w0, w19
  409a80:	ldp	x19, x20, [sp, #16]
  409a84:	ldp	x29, x30, [sp], #32
  409a88:	ret
  409a8c:	stp	x29, x30, [sp, #-32]!
  409a90:	mov	x29, sp
  409a94:	stp	x19, x20, [sp, #16]
  409a98:	mov	x19, x0
  409a9c:	mov	x20, x1
  409aa0:	ldr	x0, [x0, #56]
  409aa4:	ldr	x1, [x19, #48]
  409aa8:	sub	x0, x0, x1
  409aac:	ldr	x1, [x19, #32]
  409ab0:	cmp	x0, x1
  409ab4:	b.hi	409b04 <_obstack_memory_used@@Base+0x7bc>  // b.pmore
  409ab8:	ldr	x0, [x19, #40]
  409abc:	cmp	x0, #0x0
  409ac0:	csel	x0, x0, xzr, ge  // ge = tcont
  409ac4:	add	x0, x0, x20
  409ac8:	ldr	x1, [x19, #16]
  409acc:	cmp	x0, x1
  409ad0:	b.cc	409b24 <_obstack_memory_used@@Base+0x7dc>  // b.lo, b.ul, b.last
  409ad4:	ldr	x1, [x19, #56]
  409ad8:	ldr	x0, [x19, #64]
  409adc:	cmp	x1, x0
  409ae0:	b.cs	409b10 <_obstack_memory_used@@Base+0x7c8>  // b.hs, b.nlast
  409ae4:	ldr	x0, [x19, #56]
  409ae8:	add	x1, x0, #0x1
  409aec:	str	x1, [x19, #56]
  409af0:	mov	w1, #0xa                   	// #10
  409af4:	strb	w1, [x0]
  409af8:	ldp	x19, x20, [sp, #16]
  409afc:	ldp	x29, x30, [sp], #32
  409b00:	ret
  409b04:	mov	x0, x19
  409b08:	bl	40d358 <argp_error@@Base+0x1184>
  409b0c:	b	409ab8 <_obstack_memory_used@@Base+0x770>
  409b10:	mov	x1, #0x1                   	// #1
  409b14:	mov	x0, x19
  409b18:	bl	40d8a0 <argp_error@@Base+0x16cc>
  409b1c:	cbnz	w0, 409ae4 <_obstack_memory_used@@Base+0x79c>
  409b20:	b	409af8 <_obstack_memory_used@@Base+0x7b0>
  409b24:	ldr	x1, [x19, #56]
  409b28:	ldr	x0, [x19, #64]
  409b2c:	cmp	x1, x0
  409b30:	b.cs	409b4c <_obstack_memory_used@@Base+0x804>  // b.hs, b.nlast
  409b34:	ldr	x0, [x19, #56]
  409b38:	add	x1, x0, #0x1
  409b3c:	str	x1, [x19, #56]
  409b40:	mov	w1, #0x20                  	// #32
  409b44:	strb	w1, [x0]
  409b48:	b	409af8 <_obstack_memory_used@@Base+0x7b0>
  409b4c:	mov	x1, #0x1                   	// #1
  409b50:	mov	x0, x19
  409b54:	bl	40d8a0 <argp_error@@Base+0x16cc>
  409b58:	cbnz	w0, 409b34 <_obstack_memory_used@@Base+0x7ec>
  409b5c:	b	409af8 <_obstack_memory_used@@Base+0x7b0>
  409b60:	stp	x29, x30, [sp, #-48]!
  409b64:	mov	x29, sp
  409b68:	stp	x19, x20, [sp, #16]
  409b6c:	str	x21, [sp, #32]
  409b70:	mov	x19, x0
  409b74:	mov	x20, x3
  409b78:	ldr	x21, [x0, #16]
  409b7c:	cbz	x21, 409bb0 <_obstack_memory_used@@Base+0x868>
  409b80:	ldr	w0, [x19, #24]
  409b84:	ldr	w1, [x1, #24]
  409b88:	orr	w0, w0, w1
  409b8c:	tbnz	w0, #4, 409bb8 <_obstack_memory_used@@Base+0x870>
  409b90:	tbz	w0, #0, 409bcc <_obstack_memory_used@@Base+0x884>
  409b94:	mov	x3, x21
  409b98:	ldr	w2, [x19, #8]
  409b9c:	adrp	x1, 410000 <argp_error@@Base+0x3e2c>
  409ba0:	add	x1, x1, #0xc58
  409ba4:	mov	x0, x20
  409ba8:	bl	40d998 <argp_error@@Base+0x17c4>
  409bac:	b	409bb8 <_obstack_memory_used@@Base+0x870>
  409bb0:	ldr	x21, [x1, #16]
  409bb4:	cbnz	x21, 409b80 <_obstack_memory_used@@Base+0x838>
  409bb8:	mov	w0, #0x0                   	// #0
  409bbc:	ldp	x19, x20, [sp, #16]
  409bc0:	ldr	x21, [sp, #32]
  409bc4:	ldp	x29, x30, [sp], #48
  409bc8:	ret
  409bcc:	mov	x0, x21
  409bd0:	bl	401b00 <strlen@plt>
  409bd4:	add	x1, x0, #0x6
  409bd8:	mov	x0, x20
  409bdc:	bl	409a8c <_obstack_memory_used@@Base+0x744>
  409be0:	mov	x3, x21
  409be4:	ldr	w2, [x19, #8]
  409be8:	adrp	x1, 410000 <argp_error@@Base+0x3e2c>
  409bec:	add	x1, x1, #0xc68
  409bf0:	mov	x0, x20
  409bf4:	bl	40d998 <argp_error@@Base+0x17c4>
  409bf8:	b	409bb8 <_obstack_memory_used@@Base+0x870>
  409bfc:	stp	x29, x30, [sp, #-112]!
  409c00:	mov	x29, sp
  409c04:	stp	x19, x20, [sp, #16]
  409c08:	stp	x21, x22, [sp, #32]
  409c0c:	stp	x23, x24, [sp, #48]
  409c10:	stp	x25, x26, [sp, #64]
  409c14:	stp	x27, x28, [sp, #80]
  409c18:	mov	x26, x1
  409c1c:	mov	x25, x2
  409c20:	mov	w20, w3
  409c24:	mov	x21, x4
  409c28:	ldr	x22, [x2]
  409c2c:	str	x22, [sp, #104]
  409c30:	ldr	x24, [x0, #32]
  409c34:	ldr	x1, [x0, #16]
  409c38:	mov	x4, x1
  409c3c:	str	x1, [sp, #96]
  409c40:	mov	x3, x26
  409c44:	mov	x2, x0
  409c48:	mov	w1, #0x6                   	// #6
  409c4c:	movk	w1, #0x200, lsl #16
  409c50:	mov	x0, x4
  409c54:	bl	40962c <_obstack_memory_used@@Base+0x2e4>
  409c58:	mov	x27, x0
  409c5c:	cbz	x0, 409dc0 <_obstack_memory_used@@Base+0xa78>
  409c60:	mov	w1, #0xa                   	// #10
  409c64:	bl	401e10 <strchrnul@plt>
  409c68:	mov	x19, x0
  409c6c:	ldrb	w0, [x0]
  409c70:	cbz	w0, 409cbc <_obstack_memory_used@@Base+0x974>
  409c74:	ldrb	w28, [x22]
  409c78:	cbz	w28, 409cb4 <_obstack_memory_used@@Base+0x96c>
  409c7c:	mov	w22, #0x0                   	// #0
  409c80:	add	x23, x19, #0x1
  409c84:	mov	w1, #0xa                   	// #10
  409c88:	mov	x0, x23
  409c8c:	bl	401e10 <strchrnul@plt>
  409c90:	mov	x19, x0
  409c94:	add	w22, w22, #0x1
  409c98:	cmp	w22, w28
  409c9c:	b.ne	409c80 <_obstack_memory_used@@Base+0x938>  // b.any
  409ca0:	ldr	x0, [x25]
  409ca4:	add	x0, x0, #0x1
  409ca8:	str	x0, [x25]
  409cac:	mov	w28, #0x1                   	// #1
  409cb0:	b	409cc4 <_obstack_memory_used@@Base+0x97c>
  409cb4:	mov	x23, x27
  409cb8:	b	409ca0 <_obstack_memory_used@@Base+0x958>
  409cbc:	mov	x23, x27
  409cc0:	mov	w28, #0x0                   	// #0
  409cc4:	add	x1, x19, #0x1
  409cc8:	sub	x1, x1, x23
  409ccc:	mov	x0, x21
  409cd0:	bl	409a8c <_obstack_memory_used@@Base+0x744>
  409cd4:	sub	x22, x19, x23
  409cd8:	ldr	x0, [x21, #56]
  409cdc:	add	x0, x0, x22
  409ce0:	ldr	x1, [x21, #64]
  409ce4:	cmp	x1, x0
  409ce8:	b.cs	409cfc <_obstack_memory_used@@Base+0x9b4>  // b.hs, b.nlast
  409cec:	mov	x1, x22
  409cf0:	mov	x0, x21
  409cf4:	bl	40d8a0 <argp_error@@Base+0x16cc>
  409cf8:	cbz	w0, 409d18 <_obstack_memory_used@@Base+0x9d0>
  409cfc:	mov	x2, x22
  409d00:	mov	x1, x23
  409d04:	ldr	x0, [x21, #56]
  409d08:	bl	401aa0 <memcpy@plt>
  409d0c:	ldr	x0, [x21, #56]
  409d10:	add	x22, x0, x22
  409d14:	str	x22, [x21, #56]
  409d18:	ldr	x0, [sp, #96]
  409d1c:	cmp	x0, x27
  409d20:	b.ne	409da0 <_obstack_memory_used@@Base+0xa58>  // b.any
  409d24:	cbz	x24, 409d54 <_obstack_memory_used@@Base+0xa0c>
  409d28:	ldr	x0, [x24]
  409d2c:	cbz	x0, 409d54 <_obstack_memory_used@@Base+0xa0c>
  409d30:	mov	x4, x21
  409d34:	mov	w3, w20
  409d38:	mov	x2, x25
  409d3c:	mov	x1, x26
  409d40:	bl	409bfc <_obstack_memory_used@@Base+0x8b4>
  409d44:	cmp	w0, #0x0
  409d48:	cset	w20, eq  // eq = none
  409d4c:	ldr	x0, [x24, #32]!
  409d50:	cbnz	x0, 409d30 <_obstack_memory_used@@Base+0x9e8>
  409d54:	cmp	w20, #0x0
  409d58:	ccmp	w28, #0x0, #0x4, ne  // ne = any
  409d5c:	b.eq	409d7c <_obstack_memory_used@@Base+0xa34>  // b.none
  409d60:	ldrb	w0, [x19]
  409d64:	cbz	w0, 409dac <_obstack_memory_used@@Base+0xa64>
  409d68:	ldr	x1, [sp, #104]
  409d6c:	ldrb	w0, [x1]
  409d70:	add	w0, w0, #0x1
  409d74:	strb	w0, [x1]
  409d78:	mov	w20, #0x0                   	// #0
  409d7c:	cmp	w20, #0x0
  409d80:	cset	w0, eq  // eq = none
  409d84:	ldp	x19, x20, [sp, #16]
  409d88:	ldp	x21, x22, [sp, #32]
  409d8c:	ldp	x23, x24, [sp, #48]
  409d90:	ldp	x25, x26, [sp, #64]
  409d94:	ldp	x27, x28, [sp, #80]
  409d98:	ldp	x29, x30, [sp], #112
  409d9c:	ret
  409da0:	mov	x0, x27
  409da4:	bl	401d30 <free@plt>
  409da8:	b	409d24 <_obstack_memory_used@@Base+0x9dc>
  409dac:	ldr	x1, [sp, #104]
  409db0:	ldrb	w0, [x1]
  409db4:	cbz	w0, 409d7c <_obstack_memory_used@@Base+0xa34>
  409db8:	strb	wzr, [x1]
  409dbc:	b	409d7c <_obstack_memory_used@@Base+0xa34>
  409dc0:	mov	x19, x0
  409dc4:	mov	w28, #0x0                   	// #0
  409dc8:	cbnz	x24, 409d28 <_obstack_memory_used@@Base+0x9e0>
  409dcc:	b	409d7c <_obstack_memory_used@@Base+0xa34>
  409dd0:	stp	x29, x30, [sp, #-64]!
  409dd4:	mov	x29, sp
  409dd8:	stp	x19, x20, [sp, #16]
  409ddc:	stp	x21, x22, [sp, #32]
  409de0:	mov	x21, x0
  409de4:	mov	x19, x2
  409de8:	ldr	x3, [x2, #32]
  409dec:	mov	x2, x1
  409df0:	mov	w1, #0x3                   	// #3
  409df4:	movk	w1, #0x200, lsl #16
  409df8:	bl	40962c <_obstack_memory_used@@Base+0x2e4>
  409dfc:	mov	x20, x0
  409e00:	cbz	x0, 409f10 <_obstack_memory_used@@Base+0xbc8>
  409e04:	ldrb	w0, [x0]
  409e08:	cbz	w0, 409f04 <_obstack_memory_used@@Base+0xbbc>
  409e0c:	str	x23, [sp, #48]
  409e10:	ldr	x0, [x19, #16]
  409e14:	ldr	x0, [x0]
  409e18:	cbz	x0, 409e44 <_obstack_memory_used@@Base+0xafc>
  409e1c:	ldr	x22, [x19, #8]
  409e20:	ldr	x1, [x22, #56]
  409e24:	ldr	x0, [x22, #64]
  409e28:	cmp	x1, x0
  409e2c:	b.cs	409f30 <_obstack_memory_used@@Base+0xbe8>  // b.hs, b.nlast
  409e30:	ldr	x0, [x22, #56]
  409e34:	add	x1, x0, #0x1
  409e38:	str	x1, [x22, #56]
  409e3c:	mov	w1, #0xa                   	// #10
  409e40:	strb	w1, [x0]
  409e44:	adrp	x23, 426000 <argp_error@@Base+0x19e2c>
  409e48:	add	x23, x23, #0x498
  409e4c:	ldr	w1, [x23, #24]
  409e50:	ldr	x0, [x19, #8]
  409e54:	bl	409988 <_obstack_memory_used@@Base+0x640>
  409e58:	ldr	x22, [x19, #8]
  409e5c:	ldrsw	x23, [x23, #24]
  409e60:	ldr	x0, [x22, #56]
  409e64:	ldr	x1, [x22, #48]
  409e68:	sub	x0, x0, x1
  409e6c:	ldr	x1, [x22, #32]
  409e70:	cmp	x0, x1
  409e74:	b.hi	409f44 <_obstack_memory_used@@Base+0xbfc>  // b.pmore
  409e78:	str	x23, [x22, #8]
  409e7c:	ldr	x22, [x19, #8]
  409e80:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  409e84:	ldr	w23, [x0, #1200]
  409e88:	ldr	x0, [x22, #56]
  409e8c:	ldr	x1, [x22, #48]
  409e90:	sub	x0, x0, x1
  409e94:	ldr	x1, [x22, #32]
  409e98:	cmp	x0, x1
  409e9c:	b.hi	409f50 <_obstack_memory_used@@Base+0xc08>  // b.pmore
  409ea0:	sxtw	x23, w23
  409ea4:	str	x23, [x22, #24]
  409ea8:	mov	x0, x20
  409eac:	bl	401b00 <strlen@plt>
  409eb0:	mov	x22, x0
  409eb4:	cbnz	x0, 409f5c <_obstack_memory_used@@Base+0xc14>
  409eb8:	ldr	x22, [x19, #8]
  409ebc:	ldr	x0, [x22, #56]
  409ec0:	ldr	x1, [x22, #48]
  409ec4:	sub	x0, x0, x1
  409ec8:	ldr	x1, [x22, #32]
  409ecc:	cmp	x0, x1
  409ed0:	b.hi	409fa4 <_obstack_memory_used@@Base+0xc5c>  // b.pmore
  409ed4:	str	xzr, [x22, #8]
  409ed8:	ldr	x22, [x19, #8]
  409edc:	ldr	x1, [x22, #56]
  409ee0:	ldr	x0, [x22, #64]
  409ee4:	cmp	x1, x0
  409ee8:	b.cs	409fb0 <_obstack_memory_used@@Base+0xc68>  // b.hs, b.nlast
  409eec:	ldr	x0, [x22, #56]
  409ef0:	add	x1, x0, #0x1
  409ef4:	str	x1, [x22, #56]
  409ef8:	mov	w1, #0xa                   	// #10
  409efc:	strb	w1, [x0]
  409f00:	ldr	x23, [sp, #48]
  409f04:	ldr	x0, [x19, #16]
  409f08:	mov	w1, #0x1                   	// #1
  409f0c:	str	w1, [x0, #8]
  409f10:	cmp	x21, x20
  409f14:	b.eq	409f20 <_obstack_memory_used@@Base+0xbd8>  // b.none
  409f18:	mov	x0, x20
  409f1c:	bl	401d30 <free@plt>
  409f20:	ldp	x19, x20, [sp, #16]
  409f24:	ldp	x21, x22, [sp, #32]
  409f28:	ldp	x29, x30, [sp], #64
  409f2c:	ret
  409f30:	mov	x1, #0x1                   	// #1
  409f34:	mov	x0, x22
  409f38:	bl	40d8a0 <argp_error@@Base+0x16cc>
  409f3c:	cbnz	w0, 409e30 <_obstack_memory_used@@Base+0xae8>
  409f40:	b	409e44 <_obstack_memory_used@@Base+0xafc>
  409f44:	mov	x0, x22
  409f48:	bl	40d358 <argp_error@@Base+0x1184>
  409f4c:	b	409e78 <_obstack_memory_used@@Base+0xb30>
  409f50:	mov	x0, x22
  409f54:	bl	40d358 <argp_error@@Base+0x1184>
  409f58:	b	409ea0 <_obstack_memory_used@@Base+0xb58>
  409f5c:	ldr	x23, [x19, #8]
  409f60:	ldr	x0, [x23, #56]
  409f64:	add	x0, x0, x22
  409f68:	ldr	x1, [x23, #64]
  409f6c:	cmp	x1, x0
  409f70:	b.cs	409f84 <_obstack_memory_used@@Base+0xc3c>  // b.hs, b.nlast
  409f74:	mov	x1, x22
  409f78:	mov	x0, x23
  409f7c:	bl	40d8a0 <argp_error@@Base+0x16cc>
  409f80:	cbz	w0, 409eb8 <_obstack_memory_used@@Base+0xb70>
  409f84:	mov	x2, x22
  409f88:	mov	x1, x20
  409f8c:	ldr	x0, [x23, #56]
  409f90:	bl	401aa0 <memcpy@plt>
  409f94:	ldr	x0, [x23, #56]
  409f98:	add	x22, x0, x22
  409f9c:	str	x22, [x23, #56]
  409fa0:	b	409eb8 <_obstack_memory_used@@Base+0xb70>
  409fa4:	mov	x0, x22
  409fa8:	bl	40d358 <argp_error@@Base+0x1184>
  409fac:	b	409ed4 <_obstack_memory_used@@Base+0xb8c>
  409fb0:	mov	x1, #0x1                   	// #1
  409fb4:	mov	x0, x22
  409fb8:	bl	40d8a0 <argp_error@@Base+0x16cc>
  409fbc:	cbnz	w0, 409eec <_obstack_memory_used@@Base+0xba4>
  409fc0:	ldr	x23, [sp, #48]
  409fc4:	b	409f04 <_obstack_memory_used@@Base+0xbbc>
  409fc8:	stp	x29, x30, [sp, #-64]!
  409fcc:	mov	x29, sp
  409fd0:	stp	x19, x20, [sp, #16]
  409fd4:	stp	x21, x22, [sp, #32]
  409fd8:	mov	w21, w0
  409fdc:	mov	x19, x1
  409fe0:	ldr	w1, [x1, #24]
  409fe4:	cbz	w1, 40a108 <_obstack_memory_used@@Base+0xdc0>
  409fe8:	ldr	x1, [x19, #16]
  409fec:	ldr	x22, [x1]
  409ff0:	ldr	x0, [x19]
  409ff4:	ldr	x20, [x0, #32]
  409ff8:	ldr	w1, [x1, #8]
  409ffc:	cmp	w1, #0x0
  40a000:	ccmp	x22, #0x0, #0x4, ne  // ne = any
  40a004:	b.ne	40a0a0 <_obstack_memory_used@@Base+0xd58>  // b.any
  40a008:	cbz	x20, 40a080 <_obstack_memory_used@@Base+0xd38>
  40a00c:	ldr	x0, [x20]
  40a010:	cbz	x0, 40a080 <_obstack_memory_used@@Base+0xd38>
  40a014:	ldrb	w1, [x0]
  40a018:	cbz	w1, 40a080 <_obstack_memory_used@@Base+0xd38>
  40a01c:	cbz	x22, 40a048 <_obstack_memory_used@@Base+0xd00>
  40a020:	ldr	x1, [x22, #32]
  40a024:	cmp	x1, x20
  40a028:	b.eq	40a080 <_obstack_memory_used@@Base+0xd38>  // b.none
  40a02c:	cbz	x1, 40a048 <_obstack_memory_used@@Base+0xd00>
  40a030:	ldr	x1, [x1, #16]
  40a034:	cmp	x1, #0x0
  40a038:	ccmp	x20, x1, #0x4, ne  // ne = any
  40a03c:	b.ne	40a030 <_obstack_memory_used@@Base+0xce8>  // b.any
  40a040:	cmp	x20, x1
  40a044:	b.eq	40a080 <_obstack_memory_used@@Base+0xd38>  // b.none
  40a048:	ldr	x1, [x19, #8]
  40a04c:	ldr	x22, [x1, #24]
  40a050:	mov	x2, x19
  40a054:	ldr	x1, [x20, #24]
  40a058:	bl	409dd0 <_obstack_memory_used@@Base+0xa88>
  40a05c:	ldr	x20, [x19, #8]
  40a060:	ldr	x0, [x20, #56]
  40a064:	ldr	x1, [x20, #48]
  40a068:	sub	x0, x0, x1
  40a06c:	ldr	x1, [x20, #32]
  40a070:	cmp	x0, x1
  40a074:	b.hi	40a0fc <_obstack_memory_used@@Base+0xdb4>  // b.pmore
  40a078:	sxtw	x22, w22
  40a07c:	str	x22, [x20, #24]
  40a080:	str	wzr, [x19, #24]
  40a084:	mov	w1, w21
  40a088:	ldr	x0, [x19, #8]
  40a08c:	bl	409988 <_obstack_memory_used@@Base+0x640>
  40a090:	ldp	x19, x20, [sp, #16]
  40a094:	ldp	x21, x22, [sp, #32]
  40a098:	ldp	x29, x30, [sp], #64
  40a09c:	ret
  40a0a0:	ldr	w1, [x0, #24]
  40a0a4:	ldr	w0, [x22, #24]
  40a0a8:	cmp	w1, w0
  40a0ac:	b.eq	40a008 <_obstack_memory_used@@Base+0xcc0>  // b.none
  40a0b0:	str	x23, [sp, #48]
  40a0b4:	ldr	x23, [x19, #8]
  40a0b8:	ldr	x1, [x23, #56]
  40a0bc:	ldr	x0, [x23, #64]
  40a0c0:	cmp	x1, x0
  40a0c4:	b.cs	40a0e4 <_obstack_memory_used@@Base+0xd9c>  // b.hs, b.nlast
  40a0c8:	ldr	x0, [x23, #56]
  40a0cc:	add	x1, x0, #0x1
  40a0d0:	str	x1, [x23, #56]
  40a0d4:	mov	w1, #0xa                   	// #10
  40a0d8:	strb	w1, [x0]
  40a0dc:	ldr	x23, [sp, #48]
  40a0e0:	b	40a008 <_obstack_memory_used@@Base+0xcc0>
  40a0e4:	mov	x1, #0x1                   	// #1
  40a0e8:	mov	x0, x23
  40a0ec:	bl	40d8a0 <argp_error@@Base+0x16cc>
  40a0f0:	cbnz	w0, 40a0c8 <_obstack_memory_used@@Base+0xd80>
  40a0f4:	ldr	x23, [sp, #48]
  40a0f8:	b	40a008 <_obstack_memory_used@@Base+0xcc0>
  40a0fc:	mov	x0, x20
  40a100:	bl	40d358 <argp_error@@Base+0x1184>
  40a104:	b	40a078 <_obstack_memory_used@@Base+0xd30>
  40a108:	ldr	x20, [x19, #8]
  40a10c:	ldr	x0, [x20, #56]
  40a110:	add	x0, x0, #0x2
  40a114:	ldr	x1, [x20, #64]
  40a118:	cmp	x1, x0
  40a11c:	b.cs	40a130 <_obstack_memory_used@@Base+0xde8>  // b.hs, b.nlast
  40a120:	mov	x1, #0x2                   	// #2
  40a124:	mov	x0, x20
  40a128:	bl	40d8a0 <argp_error@@Base+0x16cc>
  40a12c:	cbz	w0, 40a084 <_obstack_memory_used@@Base+0xd3c>
  40a130:	ldr	x0, [x20, #56]
  40a134:	mov	w1, #0x202c                	// #8236
  40a138:	strh	w1, [x0]
  40a13c:	ldr	x0, [x20, #56]
  40a140:	add	x0, x0, #0x2
  40a144:	str	x0, [x20, #56]
  40a148:	b	40a084 <_obstack_memory_used@@Base+0xd3c>
  40a14c:	stp	x29, x30, [sp, #-112]!
  40a150:	mov	x29, sp
  40a154:	stp	x19, x20, [sp, #16]
  40a158:	stp	x21, x22, [sp, #32]
  40a15c:	stp	x23, x24, [sp, #48]
  40a160:	stp	x25, x26, [sp, #64]
  40a164:	stp	x27, x28, [sp, #80]
  40a168:	mov	x24, x0
  40a16c:	mov	x28, x1
  40a170:	mov	w23, w2
  40a174:	mov	w25, w3
  40a178:	mov	w26, w4
  40a17c:	mov	x19, x5
  40a180:	ldr	x22, [x0, #32]
  40a184:	ldr	x27, [x0, #24]
  40a188:	cbz	x27, 40a3c0 <_obstack_memory_used@@Base+0x1078>
  40a18c:	mov	w1, #0xb                   	// #11
  40a190:	mov	x0, x27
  40a194:	bl	401d70 <strchr@plt>
  40a198:	mov	x21, x0
  40a19c:	cbz	x0, 40a3a8 <_obstack_memory_used@@Base+0x1060>
  40a1a0:	cbz	w23, 40a1e0 <_obstack_memory_used@@Base+0xe98>
  40a1a4:	ldrb	w0, [x21, #1]!
  40a1a8:	cmp	w0, #0x0
  40a1ac:	csel	x21, x21, xzr, ne  // ne = any
  40a1b0:	ldr	x0, [x24, #40]
  40a1b4:	cbz	x0, 40a5d0 <_obstack_memory_used@@Base+0x1288>
  40a1b8:	mov	x1, x28
  40a1bc:	mov	x0, x24
  40a1c0:	bl	408414 <argp_parse@@Base+0x9f4>
  40a1c4:	mov	x27, x0
  40a1c8:	ldr	x3, [x24, #40]
  40a1cc:	str	x21, [sp, #96]
  40a1d0:	str	xzr, [sp, #104]
  40a1d4:	mov	w0, #0x2                   	// #2
  40a1d8:	movk	w0, #0x200, lsl #16
  40a1dc:	b	40a214 <_obstack_memory_used@@Base+0xecc>
  40a1e0:	subs	x0, x0, x27
  40a1e4:	str	x0, [sp, #104]
  40a1e8:	b.ne	40a384 <_obstack_memory_used@@Base+0x103c>  // b.any
  40a1ec:	ldr	x0, [x24, #40]
  40a1f0:	str	xzr, [sp, #96]
  40a1f4:	cbz	x0, 40a604 <_obstack_memory_used@@Base+0x12bc>
  40a1f8:	mov	x1, x28
  40a1fc:	mov	x0, x24
  40a200:	bl	408414 <argp_parse@@Base+0x9f4>
  40a204:	mov	x27, x0
  40a208:	ldr	x3, [x24, #40]
  40a20c:	mov	w0, #0x1                   	// #1
  40a210:	movk	w0, #0x200, lsl #16
  40a214:	mov	x2, x27
  40a218:	ldr	x1, [sp, #96]
  40a21c:	blr	x3
  40a220:	mov	x21, x0
  40a224:	cbz	x21, 40a4ec <_obstack_memory_used@@Base+0x11a4>
  40a228:	cbnz	w25, 40a408 <_obstack_memory_used@@Base+0x10c0>
  40a22c:	mov	x0, x21
  40a230:	bl	401b00 <strlen@plt>
  40a234:	mov	x20, x0
  40a238:	cbnz	x0, 40a444 <_obstack_memory_used@@Base+0x10fc>
  40a23c:	ldr	x0, [x19, #56]
  40a240:	ldr	x1, [x19, #48]
  40a244:	sub	x0, x0, x1
  40a248:	ldr	x1, [x19, #32]
  40a24c:	cmp	x0, x1
  40a250:	b.hi	40a488 <_obstack_memory_used@@Base+0x1140>  // b.pmore
  40a254:	ldr	x0, [x19, #40]
  40a258:	cmp	x0, #0x0
  40a25c:	csel	x0, x0, xzr, ge  // ge = tcont
  40a260:	ldr	x1, [x19, #8]
  40a264:	cmp	x1, x0
  40a268:	b.cc	40a494 <_obstack_memory_used@@Base+0x114c>  // b.lo, b.ul, b.last
  40a26c:	mov	w20, #0x1                   	// #1
  40a270:	ldr	x0, [sp, #96]
  40a274:	cmp	x21, x0
  40a278:	b.ne	40a4d0 <_obstack_memory_used@@Base+0x1188>  // b.any
  40a27c:	ldr	x0, [sp, #96]
  40a280:	cmp	x0, #0x0
  40a284:	ldr	x0, [sp, #104]
  40a288:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  40a28c:	b.ne	40a4f4 <_obstack_memory_used@@Base+0x11ac>  // b.any
  40a290:	cbz	w23, 40a30c <_obstack_memory_used@@Base+0xfc4>
  40a294:	ldr	x3, [x24, #40]
  40a298:	cbz	x3, 40a30c <_obstack_memory_used@@Base+0xfc4>
  40a29c:	mov	x2, x27
  40a2a0:	mov	x1, #0x0                   	// #0
  40a2a4:	mov	w0, #0x4                   	// #4
  40a2a8:	movk	w0, #0x200, lsl #16
  40a2ac:	blr	x3
  40a2b0:	mov	x21, x0
  40a2b4:	cbz	x0, 40a30c <_obstack_memory_used@@Base+0xfc4>
  40a2b8:	orr	w20, w25, w20
  40a2bc:	cbnz	w20, 40a500 <_obstack_memory_used@@Base+0x11b8>
  40a2c0:	mov	x0, x21
  40a2c4:	bl	401b00 <strlen@plt>
  40a2c8:	mov	x20, x0
  40a2cc:	cbnz	x0, 40a53c <_obstack_memory_used@@Base+0x11f4>
  40a2d0:	mov	x0, x21
  40a2d4:	bl	401d30 <free@plt>
  40a2d8:	ldr	x0, [x19, #56]
  40a2dc:	ldr	x1, [x19, #48]
  40a2e0:	sub	x0, x0, x1
  40a2e4:	ldr	x1, [x19, #32]
  40a2e8:	cmp	x0, x1
  40a2ec:	b.hi	40a580 <_obstack_memory_used@@Base+0x1238>  // b.pmore
  40a2f0:	ldr	x0, [x19, #40]
  40a2f4:	cmp	x0, #0x0
  40a2f8:	csel	x0, x0, xzr, ge  // ge = tcont
  40a2fc:	ldr	x1, [x19, #8]
  40a300:	mov	w20, #0x1                   	// #1
  40a304:	cmp	x1, x0
  40a308:	b.cc	40a58c <_obstack_memory_used@@Base+0x1244>  // b.lo, b.ul, b.last
  40a30c:	cbz	x22, 40a364 <_obstack_memory_used@@Base+0x101c>
  40a310:	ldr	x0, [x22]
  40a314:	cbz	x0, 40a364 <_obstack_memory_used@@Base+0x101c>
  40a318:	cmp	w26, #0x0
  40a31c:	cset	w21, eq  // eq = none
  40a320:	cmp	w20, #0x0
  40a324:	ccmp	w21, #0x0, #0x0, ne  // ne = any
  40a328:	b.eq	40a364 <_obstack_memory_used@@Base+0x101c>  // b.none
  40a32c:	orr	w1, w25, w20
  40a330:	cmp	w1, #0x0
  40a334:	mov	x5, x19
  40a338:	mov	w4, w26
  40a33c:	cset	w3, ne  // ne = any
  40a340:	mov	w2, w23
  40a344:	mov	x1, x28
  40a348:	bl	40a14c <_obstack_memory_used@@Base+0xe04>
  40a34c:	orr	w20, w20, w0
  40a350:	ldr	x0, [x22, #32]!
  40a354:	cbz	x0, 40a364 <_obstack_memory_used@@Base+0x101c>
  40a358:	cmp	w20, #0x0
  40a35c:	ccmp	w21, #0x0, #0x0, ne  // ne = any
  40a360:	b.ne	40a32c <_obstack_memory_used@@Base+0xfe4>  // b.any
  40a364:	mov	w0, w20
  40a368:	ldp	x19, x20, [sp, #16]
  40a36c:	ldp	x21, x22, [sp, #32]
  40a370:	ldp	x23, x24, [sp, #48]
  40a374:	ldp	x25, x26, [sp, #64]
  40a378:	ldp	x27, x28, [sp, #80]
  40a37c:	ldp	x29, x30, [sp], #112
  40a380:	ret
  40a384:	mov	x1, x0
  40a388:	mov	x0, x27
  40a38c:	bl	401d60 <strndup@plt>
  40a390:	mov	x21, x0
  40a394:	str	x0, [sp, #96]
  40a398:	ldr	x0, [x24, #40]
  40a39c:	mov	x27, #0x0                   	// #0
  40a3a0:	cbnz	x0, 40a1f8 <_obstack_memory_used@@Base+0xeb0>
  40a3a4:	b	40a224 <_obstack_memory_used@@Base+0xedc>
  40a3a8:	cbnz	w23, 40a1b0 <_obstack_memory_used@@Base+0xe68>
  40a3ac:	ldr	x0, [x24, #40]
  40a3b0:	cbz	x0, 40a5ec <_obstack_memory_used@@Base+0x12a4>
  40a3b4:	str	x27, [sp, #96]
  40a3b8:	str	xzr, [sp, #104]
  40a3bc:	b	40a1f8 <_obstack_memory_used@@Base+0xeb0>
  40a3c0:	ldr	x0, [x0, #40]
  40a3c4:	cbz	x0, 40a4dc <_obstack_memory_used@@Base+0x1194>
  40a3c8:	mov	x0, x24
  40a3cc:	bl	408414 <argp_parse@@Base+0x9f4>
  40a3d0:	ldr	x3, [x24, #40]
  40a3d4:	cbz	w23, 40a3f0 <_obstack_memory_used@@Base+0x10a8>
  40a3d8:	str	x27, [sp, #96]
  40a3dc:	mov	x27, x0
  40a3e0:	str	xzr, [sp, #104]
  40a3e4:	mov	w0, #0x2                   	// #2
  40a3e8:	movk	w0, #0x200, lsl #16
  40a3ec:	b	40a214 <_obstack_memory_used@@Base+0xecc>
  40a3f0:	str	x27, [sp, #96]
  40a3f4:	mov	x27, x0
  40a3f8:	str	xzr, [sp, #104]
  40a3fc:	mov	w0, #0x1                   	// #1
  40a400:	movk	w0, #0x200, lsl #16
  40a404:	b	40a214 <_obstack_memory_used@@Base+0xecc>
  40a408:	ldr	x1, [x19, #56]
  40a40c:	ldr	x0, [x19, #64]
  40a410:	cmp	x1, x0
  40a414:	b.cs	40a430 <_obstack_memory_used@@Base+0x10e8>  // b.hs, b.nlast
  40a418:	ldr	x0, [x19, #56]
  40a41c:	add	x1, x0, #0x1
  40a420:	str	x1, [x19, #56]
  40a424:	mov	w1, #0xa                   	// #10
  40a428:	strb	w1, [x0]
  40a42c:	b	40a22c <_obstack_memory_used@@Base+0xee4>
  40a430:	mov	x1, #0x1                   	// #1
  40a434:	mov	x0, x19
  40a438:	bl	40d8a0 <argp_error@@Base+0x16cc>
  40a43c:	cbnz	w0, 40a418 <_obstack_memory_used@@Base+0x10d0>
  40a440:	b	40a22c <_obstack_memory_used@@Base+0xee4>
  40a444:	ldr	x0, [x19, #56]
  40a448:	add	x0, x0, x20
  40a44c:	ldr	x1, [x19, #64]
  40a450:	cmp	x1, x0
  40a454:	b.cs	40a468 <_obstack_memory_used@@Base+0x1120>  // b.hs, b.nlast
  40a458:	mov	x1, x20
  40a45c:	mov	x0, x19
  40a460:	bl	40d8a0 <argp_error@@Base+0x16cc>
  40a464:	cbz	w0, 40a23c <_obstack_memory_used@@Base+0xef4>
  40a468:	mov	x2, x20
  40a46c:	mov	x1, x21
  40a470:	ldr	x0, [x19, #56]
  40a474:	bl	401aa0 <memcpy@plt>
  40a478:	ldr	x0, [x19, #56]
  40a47c:	add	x20, x0, x20
  40a480:	str	x20, [x19, #56]
  40a484:	b	40a23c <_obstack_memory_used@@Base+0xef4>
  40a488:	mov	x0, x19
  40a48c:	bl	40d358 <argp_error@@Base+0x1184>
  40a490:	b	40a254 <_obstack_memory_used@@Base+0xf0c>
  40a494:	ldr	x1, [x19, #56]
  40a498:	ldr	x0, [x19, #64]
  40a49c:	cmp	x1, x0
  40a4a0:	b.cs	40a4bc <_obstack_memory_used@@Base+0x1174>  // b.hs, b.nlast
  40a4a4:	ldr	x0, [x19, #56]
  40a4a8:	add	x1, x0, #0x1
  40a4ac:	str	x1, [x19, #56]
  40a4b0:	mov	w1, #0xa                   	// #10
  40a4b4:	strb	w1, [x0]
  40a4b8:	b	40a26c <_obstack_memory_used@@Base+0xf24>
  40a4bc:	mov	x1, #0x1                   	// #1
  40a4c0:	mov	x0, x19
  40a4c4:	bl	40d8a0 <argp_error@@Base+0x16cc>
  40a4c8:	cbnz	w0, 40a4a4 <_obstack_memory_used@@Base+0x115c>
  40a4cc:	b	40a26c <_obstack_memory_used@@Base+0xf24>
  40a4d0:	mov	x0, x21
  40a4d4:	bl	401d30 <free@plt>
  40a4d8:	b	40a27c <_obstack_memory_used@@Base+0xf34>
  40a4dc:	str	x27, [sp, #96]
  40a4e0:	str	xzr, [sp, #104]
  40a4e4:	mov	w20, #0x0                   	// #0
  40a4e8:	b	40a27c <_obstack_memory_used@@Base+0xf34>
  40a4ec:	mov	w20, #0x0                   	// #0
  40a4f0:	b	40a27c <_obstack_memory_used@@Base+0xf34>
  40a4f4:	ldr	x0, [sp, #96]
  40a4f8:	bl	401d30 <free@plt>
  40a4fc:	b	40a290 <_obstack_memory_used@@Base+0xf48>
  40a500:	ldr	x1, [x19, #56]
  40a504:	ldr	x0, [x19, #64]
  40a508:	cmp	x1, x0
  40a50c:	b.cs	40a528 <_obstack_memory_used@@Base+0x11e0>  // b.hs, b.nlast
  40a510:	ldr	x0, [x19, #56]
  40a514:	add	x1, x0, #0x1
  40a518:	str	x1, [x19, #56]
  40a51c:	mov	w1, #0xa                   	// #10
  40a520:	strb	w1, [x0]
  40a524:	b	40a2c0 <_obstack_memory_used@@Base+0xf78>
  40a528:	mov	x1, #0x1                   	// #1
  40a52c:	mov	x0, x19
  40a530:	bl	40d8a0 <argp_error@@Base+0x16cc>
  40a534:	cbnz	w0, 40a510 <_obstack_memory_used@@Base+0x11c8>
  40a538:	b	40a2c0 <_obstack_memory_used@@Base+0xf78>
  40a53c:	ldr	x0, [x19, #56]
  40a540:	add	x0, x0, x20
  40a544:	ldr	x1, [x19, #64]
  40a548:	cmp	x1, x0
  40a54c:	b.cs	40a560 <_obstack_memory_used@@Base+0x1218>  // b.hs, b.nlast
  40a550:	mov	x1, x20
  40a554:	mov	x0, x19
  40a558:	bl	40d8a0 <argp_error@@Base+0x16cc>
  40a55c:	cbz	w0, 40a2d0 <_obstack_memory_used@@Base+0xf88>
  40a560:	mov	x2, x20
  40a564:	mov	x1, x21
  40a568:	ldr	x0, [x19, #56]
  40a56c:	bl	401aa0 <memcpy@plt>
  40a570:	ldr	x0, [x19, #56]
  40a574:	add	x20, x0, x20
  40a578:	str	x20, [x19, #56]
  40a57c:	b	40a2d0 <_obstack_memory_used@@Base+0xf88>
  40a580:	mov	x0, x19
  40a584:	bl	40d358 <argp_error@@Base+0x1184>
  40a588:	b	40a2f0 <_obstack_memory_used@@Base+0xfa8>
  40a58c:	ldr	x1, [x19, #56]
  40a590:	ldr	x0, [x19, #64]
  40a594:	cmp	x1, x0
  40a598:	b.cs	40a5b8 <_obstack_memory_used@@Base+0x1270>  // b.hs, b.nlast
  40a59c:	ldr	x0, [x19, #56]
  40a5a0:	add	x1, x0, #0x1
  40a5a4:	str	x1, [x19, #56]
  40a5a8:	mov	w1, #0xa                   	// #10
  40a5ac:	strb	w1, [x0]
  40a5b0:	mov	w20, #0x1                   	// #1
  40a5b4:	b	40a30c <_obstack_memory_used@@Base+0xfc4>
  40a5b8:	mov	x1, #0x1                   	// #1
  40a5bc:	mov	x0, x19
  40a5c0:	bl	40d8a0 <argp_error@@Base+0x16cc>
  40a5c4:	cbnz	w0, 40a59c <_obstack_memory_used@@Base+0x1254>
  40a5c8:	mov	w20, #0x1                   	// #1
  40a5cc:	b	40a30c <_obstack_memory_used@@Base+0xfc4>
  40a5d0:	mov	x27, x21
  40a5d4:	mov	w20, #0x0                   	// #0
  40a5d8:	cbz	x21, 40a290 <_obstack_memory_used@@Base+0xf48>
  40a5dc:	str	x21, [sp, #96]
  40a5e0:	str	xzr, [sp, #104]
  40a5e4:	mov	x27, #0x0                   	// #0
  40a5e8:	b	40a228 <_obstack_memory_used@@Base+0xee0>
  40a5ec:	str	x27, [sp, #96]
  40a5f0:	mov	x0, x21
  40a5f4:	mov	x21, x27
  40a5f8:	mov	x27, x0
  40a5fc:	str	xzr, [sp, #104]
  40a600:	b	40a228 <_obstack_memory_used@@Base+0xee0>
  40a604:	mov	w20, w23
  40a608:	mov	x27, #0x0                   	// #0
  40a60c:	b	40a27c <_obstack_memory_used@@Base+0xf34>
  40a610:	stp	x29, x30, [sp, #-80]!
  40a614:	mov	x29, sp
  40a618:	stp	x19, x20, [sp, #16]
  40a61c:	stp	x21, x22, [sp, #32]
  40a620:	mov	x20, x0
  40a624:	mov	x21, x1
  40a628:	ldr	w0, [x0, #24]
  40a62c:	ldr	w1, [x1, #24]
  40a630:	ldr	x2, [x20, #32]
  40a634:	ldr	x3, [x21, #32]
  40a638:	cmp	x2, x3
  40a63c:	b.eq	40a710 <_obstack_memory_used@@Base+0x13c8>  // b.none
  40a640:	cbz	x2, 40a6d8 <_obstack_memory_used@@Base+0x1390>
  40a644:	cbz	x3, 40a6f4 <_obstack_memory_used@@Base+0x13ac>
  40a648:	ldr	w0, [x2, #32]
  40a64c:	ldr	w1, [x3, #32]
  40a650:	cmp	w1, w0
  40a654:	b.ge	40a668 <_obstack_memory_used@@Base+0x1320>  // b.tcont
  40a658:	ldr	x2, [x2, #16]
  40a65c:	ldr	w0, [x2, #32]
  40a660:	cmp	w1, w0
  40a664:	b.lt	40a658 <_obstack_memory_used@@Base+0x1310>  // b.tstop
  40a668:	cmp	w1, w0
  40a66c:	b.le	40a680 <_obstack_memory_used@@Base+0x1338>
  40a670:	ldr	x3, [x3, #16]
  40a674:	ldr	w1, [x3, #32]
  40a678:	cmp	w1, w0
  40a67c:	b.gt	40a670 <_obstack_memory_used@@Base+0x1328>
  40a680:	mov	x0, x2
  40a684:	ldr	x2, [x2, #16]
  40a688:	mov	x1, x3
  40a68c:	ldr	x3, [x3, #16]
  40a690:	cmp	x2, x3
  40a694:	b.ne	40a680 <_obstack_memory_used@@Base+0x1338>  // b.any
  40a698:	ldr	w3, [x1, #8]
  40a69c:	ldr	w2, [x0, #8]
  40a6a0:	sub	w2, w3, w2
  40a6a4:	ldr	w1, [x1, #12]
  40a6a8:	ldr	w0, [x0, #12]
  40a6ac:	bl	4093c4 <_obstack_memory_used@@Base+0x7c>
  40a6b0:	cbnz	w0, 40a6c8 <_obstack_memory_used@@Base+0x1380>
  40a6b4:	ldr	w2, [x20, #48]
  40a6b8:	ldr	w1, [x21, #48]
  40a6bc:	mov	w0, #0x1                   	// #1
  40a6c0:	cmp	w2, w1
  40a6c4:	cneg	w0, w0, cc  // cc = lo, ul, last
  40a6c8:	ldp	x19, x20, [sp, #16]
  40a6cc:	ldp	x21, x22, [sp, #32]
  40a6d0:	ldp	x29, x30, [sp], #80
  40a6d4:	ret
  40a6d8:	mov	x1, x3
  40a6dc:	ldr	x3, [x3, #16]
  40a6e0:	cbnz	x3, 40a6d8 <_obstack_memory_used@@Base+0x1390>
  40a6e4:	mov	w2, #0xffffffff            	// #-1
  40a6e8:	ldr	w1, [x1, #12]
  40a6ec:	bl	4093c4 <_obstack_memory_used@@Base+0x7c>
  40a6f0:	b	40a6c8 <_obstack_memory_used@@Base+0x1380>
  40a6f4:	mov	x0, x2
  40a6f8:	ldr	x2, [x2, #16]
  40a6fc:	cbnz	x2, 40a6f4 <_obstack_memory_used@@Base+0x13ac>
  40a700:	mov	w2, #0x1                   	// #1
  40a704:	ldr	w0, [x0, #12]
  40a708:	bl	4093c4 <_obstack_memory_used@@Base+0x7c>
  40a70c:	b	40a6c8 <_obstack_memory_used@@Base+0x1380>
  40a710:	cmp	w0, w1
  40a714:	b.eq	40a734 <_obstack_memory_used@@Base+0x13ec>  // b.none
  40a718:	ldr	w4, [x20, #48]
  40a71c:	ldr	w3, [x21, #48]
  40a720:	mov	w2, #0x1                   	// #1
  40a724:	cmp	w4, w3
  40a728:	cneg	w2, w2, cc  // cc = lo, ul, last
  40a72c:	bl	4093c4 <_obstack_memory_used@@Base+0x7c>
  40a730:	b	40a6c8 <_obstack_memory_used@@Base+0x1380>
  40a734:	stp	x23, x24, [sp, #48]
  40a738:	ldr	x0, [x20, #40]
  40a73c:	adrp	x19, 409000 <argp_parse@@Base+0x15e0>
  40a740:	add	x19, x19, #0xa3c
  40a744:	mov	x3, #0x0                   	// #0
  40a748:	ldr	x2, [x0, #48]
  40a74c:	mov	x1, x19
  40a750:	mov	x0, x20
  40a754:	bl	409688 <_obstack_memory_used@@Base+0x340>
  40a758:	mov	w24, w0
  40a75c:	ldr	x0, [x21, #40]
  40a760:	mov	x3, #0x0                   	// #0
  40a764:	ldr	x2, [x0, #48]
  40a768:	mov	x1, x19
  40a76c:	mov	x0, x21
  40a770:	bl	409688 <_obstack_memory_used@@Base+0x340>
  40a774:	mov	w23, w0
  40a778:	ldr	x0, [x20]
  40a77c:	ldr	w0, [x0, #24]
  40a780:	and	w19, w0, #0x8
  40a784:	ldr	x0, [x21]
  40a788:	ldr	w22, [x0, #24]
  40a78c:	and	w22, w22, #0x8
  40a790:	mov	x0, x20
  40a794:	bl	409374 <_obstack_memory_used@@Base+0x2c>
  40a798:	str	x0, [sp, #64]
  40a79c:	mov	x0, x21
  40a7a0:	bl	409374 <_obstack_memory_used@@Base+0x2c>
  40a7a4:	str	x0, [sp, #72]
  40a7a8:	cbnz	w19, 40a7f4 <_obstack_memory_used@@Base+0x14ac>
  40a7ac:	cbnz	w22, 40a804 <_obstack_memory_used@@Base+0x14bc>
  40a7b0:	and	w24, w24, #0xff
  40a7b4:	and	w23, w23, #0xff
  40a7b8:	orr	w1, w23, w24
  40a7bc:	cbnz	w1, 40a824 <_obstack_memory_used@@Base+0x14dc>
  40a7c0:	ldr	x0, [sp, #64]
  40a7c4:	cbz	x0, 40a888 <_obstack_memory_used@@Base+0x1540>
  40a7c8:	ldr	x1, [sp, #72]
  40a7cc:	cbz	x1, 40a890 <_obstack_memory_used@@Base+0x1548>
  40a7d0:	bl	401c60 <strcasecmp@plt>
  40a7d4:	cbnz	w0, 40a89c <_obstack_memory_used@@Base+0x1554>
  40a7d8:	ldr	w2, [x20, #48]
  40a7dc:	ldr	w1, [x21, #48]
  40a7e0:	mov	w0, #0x1                   	// #1
  40a7e4:	cmp	w2, w1
  40a7e8:	cneg	w0, w0, cc  // cc = lo, ul, last
  40a7ec:	ldp	x23, x24, [sp, #48]
  40a7f0:	b	40a6c8 <_obstack_memory_used@@Base+0x1380>
  40a7f4:	add	x0, sp, #0x40
  40a7f8:	bl	409430 <_obstack_memory_used@@Base+0xe8>
  40a7fc:	mov	w19, w0
  40a800:	cbz	w22, 40a810 <_obstack_memory_used@@Base+0x14c8>
  40a804:	add	x0, sp, #0x48
  40a808:	bl	409430 <_obstack_memory_used@@Base+0xe8>
  40a80c:	mov	w22, w0
  40a810:	cmp	w19, w22
  40a814:	b.eq	40a7b0 <_obstack_memory_used@@Base+0x1468>  // b.none
  40a818:	sub	w0, w19, w22
  40a81c:	ldp	x23, x24, [sp, #48]
  40a820:	b	40a6c8 <_obstack_memory_used@@Base+0x1380>
  40a824:	cbz	w24, 40a87c <_obstack_memory_used@@Base+0x1534>
  40a828:	cbnz	w23, 40a838 <_obstack_memory_used@@Base+0x14f0>
  40a82c:	ldr	x0, [sp, #72]
  40a830:	cbz	x0, 40a838 <_obstack_memory_used@@Base+0x14f0>
  40a834:	ldrb	w23, [x0]
  40a838:	bl	401ba0 <__ctype_tolower_loc@plt>
  40a83c:	ldr	x3, [x0]
  40a840:	and	x1, x24, #0xff
  40a844:	and	x0, x23, #0xff
  40a848:	ldr	w2, [x3, x1, lsl #2]
  40a84c:	ldr	w0, [x3, x0, lsl #2]
  40a850:	subs	w0, w2, w0
  40a854:	b.ne	40a8a4 <_obstack_memory_used@@Base+0x155c>  // b.any
  40a858:	subs	w0, w23, w24
  40a85c:	b.ne	40a8ac <_obstack_memory_used@@Base+0x1564>  // b.any
  40a860:	ldr	w2, [x20, #48]
  40a864:	ldr	w1, [x21, #48]
  40a868:	mov	w0, #0x1                   	// #1
  40a86c:	cmp	w2, w1
  40a870:	cneg	w0, w0, cc  // cc = lo, ul, last
  40a874:	ldp	x23, x24, [sp, #48]
  40a878:	b	40a6c8 <_obstack_memory_used@@Base+0x1380>
  40a87c:	ldr	x0, [sp, #64]
  40a880:	cbnz	x0, 40a894 <_obstack_memory_used@@Base+0x154c>
  40a884:	b	40a828 <_obstack_memory_used@@Base+0x14e0>
  40a888:	mov	w24, w1
  40a88c:	b	40a828 <_obstack_memory_used@@Base+0x14e0>
  40a890:	ldr	x0, [sp, #64]
  40a894:	ldrb	w24, [x0]
  40a898:	b	40a828 <_obstack_memory_used@@Base+0x14e0>
  40a89c:	ldp	x23, x24, [sp, #48]
  40a8a0:	b	40a6c8 <_obstack_memory_used@@Base+0x1380>
  40a8a4:	ldp	x23, x24, [sp, #48]
  40a8a8:	b	40a6c8 <_obstack_memory_used@@Base+0x1380>
  40a8ac:	ldp	x23, x24, [sp, #48]
  40a8b0:	b	40a6c8 <_obstack_memory_used@@Base+0x1380>
  40a8b4:	stp	x29, x30, [sp, #-176]!
  40a8b8:	mov	x29, sp
  40a8bc:	stp	x19, x20, [sp, #16]
  40a8c0:	stp	x21, x22, [sp, #32]
  40a8c4:	stp	x23, x24, [sp, #48]
  40a8c8:	stp	x25, x26, [sp, #64]
  40a8cc:	stp	x27, x28, [sp, #80]
  40a8d0:	mov	x26, x0
  40a8d4:	mov	x27, x1
  40a8d8:	ldr	x23, [x0, #32]
  40a8dc:	ldr	x20, [x0]
  40a8e0:	mov	x0, #0x20                  	// #32
  40a8e4:	bl	401be0 <malloc@plt>
  40a8e8:	cbz	x0, 40a910 <_obstack_memory_used@@Base+0x15c8>
  40a8ec:	mov	x19, x0
  40a8f0:	str	wzr, [x0, #8]
  40a8f4:	str	xzr, [x0, #24]
  40a8f8:	cbz	x20, 40aa8c <_obstack_memory_used@@Base+0x1744>
  40a8fc:	ldr	w0, [x20, #24]
  40a900:	tbnz	w0, #2, 40a930 <_obstack_memory_used@@Base+0x15e8>
  40a904:	mov	x21, x20
  40a908:	mov	w22, #0x0                   	// #0
  40a90c:	b	40a954 <_obstack_memory_used@@Base+0x160c>
  40a910:	adrp	x3, 410000 <argp_error@@Base+0x3e2c>
  40a914:	add	x3, x3, #0xf90
  40a918:	mov	w2, #0x1ba                 	// #442
  40a91c:	adrp	x1, 410000 <argp_error@@Base+0x3e2c>
  40a920:	add	x1, x1, #0xc78
  40a924:	adrp	x0, 410000 <argp_error@@Base+0x3e2c>
  40a928:	add	x0, x0, #0xc88
  40a92c:	bl	401e90 <__assert_fail@plt>
  40a930:	adrp	x3, 410000 <argp_error@@Base+0x3e2c>
  40a934:	add	x3, x3, #0xf90
  40a938:	mov	w2, #0x1c4                 	// #452
  40a93c:	adrp	x1, 410000 <argp_error@@Base+0x3e2c>
  40a940:	add	x1, x1, #0xc78
  40a944:	adrp	x0, 410000 <argp_error@@Base+0x3e2c>
  40a948:	add	x0, x0, #0xc90
  40a94c:	bl	401e90 <__assert_fail@plt>
  40a950:	add	x21, x21, #0x30
  40a954:	ldr	w0, [x21, #8]
  40a958:	cbnz	w0, 40a964 <_obstack_memory_used@@Base+0x161c>
  40a95c:	ldr	x0, [x21]
  40a960:	cbz	x0, 40a9a8 <_obstack_memory_used@@Base+0x1660>
  40a964:	ldr	w0, [x21, #24]
  40a968:	tbnz	w0, #2, 40a978 <_obstack_memory_used@@Base+0x1630>
  40a96c:	ldr	w0, [x19, #8]
  40a970:	add	w0, w0, #0x1
  40a974:	str	w0, [x19, #8]
  40a978:	ldr	w0, [x21, #24]
  40a97c:	tbnz	w0, #3, 40a950 <_obstack_memory_used@@Base+0x1608>
  40a980:	ldr	w24, [x21, #8]
  40a984:	sub	w0, w24, #0x1
  40a988:	cmp	w0, #0xfe
  40a98c:	b.hi	40a950 <_obstack_memory_used@@Base+0x1608>  // b.pmore
  40a990:	bl	401d00 <__ctype_b_loc@plt>
  40a994:	ldr	x0, [x0]
  40a998:	ldrh	w0, [x0, w24, sxtw #1]
  40a99c:	ubfx	x0, x0, #14, #1
  40a9a0:	add	w22, w22, w0
  40a9a4:	b	40a950 <_obstack_memory_used@@Base+0x1608>
  40a9a8:	ldr	x0, [x21, #32]
  40a9ac:	cbnz	x0, 40a964 <_obstack_memory_used@@Base+0x161c>
  40a9b0:	ldr	w25, [x21, #40]
  40a9b4:	cbnz	w25, 40a964 <_obstack_memory_used@@Base+0x161c>
  40a9b8:	ldr	w1, [x19, #8]
  40a9bc:	lsl	x0, x1, #3
  40a9c0:	sub	x0, x0, x1
  40a9c4:	lsl	x0, x0, #3
  40a9c8:	bl	401be0 <malloc@plt>
  40a9cc:	mov	x21, x0
  40a9d0:	str	x0, [x19]
  40a9d4:	add	w0, w22, #0x1
  40a9d8:	bl	401be0 <malloc@plt>
  40a9dc:	mov	x28, x0
  40a9e0:	str	x0, [x19, #16]
  40a9e4:	cmp	x0, #0x0
  40a9e8:	mov	x22, x0
  40a9ec:	ccmp	x21, #0x0, #0x4, ne  // ne = any
  40a9f0:	b.ne	40aa3c <_obstack_memory_used@@Base+0x16f4>  // b.any
  40a9f4:	adrp	x3, 410000 <argp_error@@Base+0x3e2c>
  40a9f8:	add	x3, x3, #0xf90
  40a9fc:	mov	w2, #0x1d2                 	// #466
  40aa00:	adrp	x1, 410000 <argp_error@@Base+0x3e2c>
  40aa04:	add	x1, x1, #0xc78
  40aa08:	adrp	x0, 410000 <argp_error@@Base+0x3e2c>
  40aa0c:	add	x0, x0, #0xca0
  40aa10:	bl	401e90 <__assert_fail@plt>
  40aa14:	mov	w25, w0
  40aa18:	str	w25, [x21, #24]
  40aa1c:	str	x27, [x21, #32]
  40aa20:	str	x26, [x21, #40]
  40aa24:	b	40ade0 <_obstack_memory_used@@Base+0x1a98>
  40aa28:	ldr	x0, [x20, #32]
  40aa2c:	cbnz	x0, 40add8 <_obstack_memory_used@@Base+0x1a90>
  40aa30:	ldr	w0, [x20, #40]
  40aa34:	cbnz	w0, 40add8 <_obstack_memory_used@@Base+0x1a90>
  40aa38:	add	x21, x21, #0x38
  40aa3c:	ldr	w0, [x20, #8]
  40aa40:	cbnz	w0, 40aa4c <_obstack_memory_used@@Base+0x1704>
  40aa44:	ldr	x0, [x20]
  40aa48:	cbz	x0, 40aa78 <_obstack_memory_used@@Base+0x1730>
  40aa4c:	str	x20, [x21]
  40aa50:	str	wzr, [x21, #8]
  40aa54:	str	x22, [x21, #16]
  40aa58:	ldr	w0, [x20, #40]
  40aa5c:	cbnz	w0, 40aa14 <_obstack_memory_used@@Base+0x16cc>
  40aa60:	ldr	x0, [x20]
  40aa64:	cbnz	x0, 40aa18 <_obstack_memory_used@@Base+0x16d0>
  40aa68:	ldr	w0, [x20, #8]
  40aa6c:	cmp	w0, #0x0
  40aa70:	cinc	w25, w25, eq  // eq = none
  40aa74:	b	40aa18 <_obstack_memory_used@@Base+0x16d0>
  40aa78:	ldr	x0, [x20, #32]
  40aa7c:	cbnz	x0, 40aa4c <_obstack_memory_used@@Base+0x1704>
  40aa80:	ldr	w0, [x20, #40]
  40aa84:	cbnz	w0, 40aa4c <_obstack_memory_used@@Base+0x1704>
  40aa88:	strb	wzr, [x22]
  40aa8c:	cbz	x23, 40ae18 <_obstack_memory_used@@Base+0x1ad0>
  40aa90:	ldr	x0, [x23]
  40aa94:	cbz	x0, 40ae18 <_obstack_memory_used@@Base+0x1ad0>
  40aa98:	str	x27, [sp, #144]
  40aa9c:	add	x0, x19, #0x18
  40aaa0:	str	x0, [sp, #168]
  40aaa4:	b	40aad8 <_obstack_memory_used@@Base+0x1790>
  40aaa8:	ldr	x1, [sp, #168]
  40aaac:	b	40ab64 <_obstack_memory_used@@Base+0x181c>
  40aab0:	str	w21, [x19, #8]
  40aab4:	ldr	x0, [x22]
  40aab8:	str	x0, [x19]
  40aabc:	ldr	x0, [x22, #16]
  40aac0:	str	x0, [x19, #16]
  40aac4:	str	wzr, [x22, #8]
  40aac8:	mov	x0, x22
  40aacc:	bl	4094b4 <_obstack_memory_used@@Base+0x16c>
  40aad0:	ldr	x0, [x23, #32]!
  40aad4:	cbz	x0, 40ae18 <_obstack_memory_used@@Base+0x1ad0>
  40aad8:	ldr	w21, [x23, #24]
  40aadc:	cbnz	w21, 40aaec <_obstack_memory_used@@Base+0x17a4>
  40aae0:	ldr	x0, [x23, #16]
  40aae4:	ldr	x1, [sp, #144]
  40aae8:	cbz	x0, 40ab40 <_obstack_memory_used@@Base+0x17f8>
  40aaec:	ldr	x22, [x23, #16]
  40aaf0:	ldr	x20, [x26, #32]
  40aaf4:	sub	x20, x23, x20
  40aaf8:	asr	x20, x20, #5
  40aafc:	mov	x0, #0x30                  	// #48
  40ab00:	bl	401be0 <malloc@plt>
  40ab04:	mov	x1, x0
  40ab08:	cbz	x0, 40ab40 <_obstack_memory_used@@Base+0x17f8>
  40ab0c:	str	w21, [x0, #12]
  40ab10:	str	x22, [x0]
  40ab14:	str	w20, [x0, #8]
  40ab18:	str	x27, [x0, #16]
  40ab1c:	str	x26, [x0, #24]
  40ab20:	mov	w0, #0x0                   	// #0
  40ab24:	cbz	x27, 40ab30 <_obstack_memory_used@@Base+0x17e8>
  40ab28:	ldr	w0, [x27, #32]
  40ab2c:	add	w0, w0, #0x1
  40ab30:	str	w0, [x1, #32]
  40ab34:	ldr	x0, [x19, #24]
  40ab38:	str	x0, [x1, #40]
  40ab3c:	str	x1, [x19, #24]
  40ab40:	ldr	x0, [x23]
  40ab44:	bl	40a8b4 <_obstack_memory_used@@Base+0x156c>
  40ab48:	mov	x22, x0
  40ab4c:	ldr	x0, [x19, #24]
  40ab50:	cbz	x0, 40aaa8 <_obstack_memory_used@@Base+0x1760>
  40ab54:	mov	x1, x0
  40ab58:	ldr	x0, [x0, #40]
  40ab5c:	cbnz	x0, 40ab54 <_obstack_memory_used@@Base+0x180c>
  40ab60:	add	x1, x1, #0x28
  40ab64:	ldr	x0, [x22, #24]
  40ab68:	str	x0, [x1]
  40ab6c:	str	xzr, [x22, #24]
  40ab70:	ldr	w21, [x22, #8]
  40ab74:	cbz	w21, 40aac8 <_obstack_memory_used@@Base+0x1780>
  40ab78:	ldr	w20, [x19, #8]
  40ab7c:	cbz	w20, 40aab0 <_obstack_memory_used@@Base+0x1768>
  40ab80:	add	w0, w21, w20
  40ab84:	str	w0, [sp, #156]
  40ab88:	add	w1, w21, w20
  40ab8c:	lsl	x0, x1, #3
  40ab90:	sub	x0, x0, x1
  40ab94:	lsl	x0, x0, #3
  40ab98:	bl	401be0 <malloc@plt>
  40ab9c:	str	x0, [sp, #136]
  40aba0:	ldr	x25, [x19, #16]
  40aba4:	mov	x0, x25
  40aba8:	bl	401b00 <strlen@plt>
  40abac:	mov	w24, w0
  40abb0:	str	x24, [sp, #104]
  40abb4:	ldr	x28, [x22, #16]
  40abb8:	mov	x0, x28
  40abbc:	bl	401b00 <strlen@plt>
  40abc0:	add	x0, x0, #0x1
  40abc4:	add	x0, x0, x24
  40abc8:	bl	401be0 <malloc@plt>
  40abcc:	mov	x24, x0
  40abd0:	ldr	x0, [sp, #136]
  40abd4:	cmp	x0, #0x0
  40abd8:	ccmp	x24, #0x0, #0x4, ne  // ne = any
  40abdc:	b.eq	40ac80 <_obstack_memory_used@@Base+0x1938>  // b.none
  40abe0:	ldr	x1, [x19]
  40abe4:	str	x1, [sp, #160]
  40abe8:	ubfiz	x2, x20, #3, #32
  40abec:	sub	x2, x2, w20, uxtw
  40abf0:	lsl	x2, x2, #3
  40abf4:	ldr	x0, [sp, #136]
  40abf8:	bl	401d40 <mempcpy@plt>
  40abfc:	ubfiz	x2, x21, #3, #32
  40ac00:	sub	x2, x2, w21, uxtw
  40ac04:	lsl	x2, x2, #3
  40ac08:	ldr	x1, [x22]
  40ac0c:	bl	401aa0 <memcpy@plt>
  40ac10:	ldr	x2, [sp, #104]
  40ac14:	mov	x1, x25
  40ac18:	mov	x0, x24
  40ac1c:	bl	401aa0 <memcpy@plt>
  40ac20:	sub	w20, w20, #0x1
  40ac24:	add	x20, x20, #0x1
  40ac28:	lsl	x0, x20, #3
  40ac2c:	sub	x20, x0, x20
  40ac30:	ldr	x1, [sp, #136]
  40ac34:	add	x20, x1, x20, lsl #3
  40ac38:	ldr	x0, [x1, #16]
  40ac3c:	sub	x0, x0, x25
  40ac40:	add	x0, x24, x0
  40ac44:	str	x0, [x1, #16]
  40ac48:	add	x1, x1, #0x38
  40ac4c:	cmp	x1, x20
  40ac50:	b.ne	40ac38 <_obstack_memory_used@@Base+0x18f0>  // b.any
  40ac54:	ldr	x0, [sp, #104]
  40ac58:	add	x1, x24, x0
  40ac5c:	str	x1, [sp, #112]
  40ac60:	sub	w21, w21, #0x1
  40ac64:	add	x21, x21, #0x1
  40ac68:	lsl	x0, x21, #3
  40ac6c:	sub	x21, x0, x21
  40ac70:	add	x0, x20, x21, lsl #3
  40ac74:	str	x0, [sp, #128]
  40ac78:	str	x1, [sp, #104]
  40ac7c:	b	40acf4 <_obstack_memory_used@@Base+0x19ac>
  40ac80:	adrp	x3, 410000 <argp_error@@Base+0x3e2c>
  40ac84:	add	x3, x3, #0xf90
  40ac88:	add	x3, x3, #0x10
  40ac8c:	mov	w2, #0x372                 	// #882
  40ac90:	adrp	x1, 410000 <argp_error@@Base+0x3e2c>
  40ac94:	add	x1, x1, #0xc78
  40ac98:	adrp	x0, 410000 <argp_error@@Base+0x3e2c>
  40ac9c:	add	x0, x0, #0xcc8
  40aca0:	bl	401e90 <__assert_fail@plt>
  40aca4:	ldr	x0, [sp, #112]
  40aca8:	cmp	x24, x0
  40acac:	b.cs	40acd0 <_obstack_memory_used@@Base+0x1988>  // b.hs, b.nlast
  40acb0:	mov	x0, x24
  40acb4:	ldrb	w2, [x0]
  40acb8:	cmp	w2, w1
  40acbc:	b.eq	40acdc <_obstack_memory_used@@Base+0x1994>  // b.none
  40acc0:	add	x0, x0, #0x1
  40acc4:	ldr	x2, [sp, #112]
  40acc8:	cmp	x2, x0
  40accc:	b.ne	40acb4 <_obstack_memory_used@@Base+0x196c>  // b.any
  40acd0:	ldr	x0, [sp, #104]
  40acd4:	strb	w1, [x0], #1
  40acd8:	str	x0, [sp, #104]
  40acdc:	add	x28, x28, #0x1
  40ace0:	b	40ad5c <_obstack_memory_used@@Base+0x1a14>
  40ace4:	add	x20, x20, #0x38
  40ace8:	ldr	x0, [sp, #128]
  40acec:	cmp	x0, x20
  40acf0:	b.eq	40ad20 <_obstack_memory_used@@Base+0x19d8>  // b.none
  40acf4:	ldr	x0, [sp, #104]
  40acf8:	str	x0, [x20, #16]
  40acfc:	ldr	w0, [x20, #8]
  40ad00:	ldr	x21, [x20]
  40ad04:	cbz	w0, 40ace4 <_obstack_memory_used@@Base+0x199c>
  40ad08:	sub	w0, w0, #0x1
  40ad0c:	add	x0, x0, #0x1
  40ad10:	add	x0, x0, x0, lsl #1
  40ad14:	add	x0, x21, x0, lsl #4
  40ad18:	str	x0, [sp, #120]
  40ad1c:	b	40ad6c <_obstack_memory_used@@Base+0x1a24>
  40ad20:	ldr	x0, [sp, #104]
  40ad24:	strb	wzr, [x0]
  40ad28:	ldr	x0, [sp, #160]
  40ad2c:	bl	401d30 <free@plt>
  40ad30:	ldr	x0, [x19, #16]
  40ad34:	bl	401d30 <free@plt>
  40ad38:	ldr	x0, [sp, #136]
  40ad3c:	str	x0, [x19]
  40ad40:	ldr	w0, [sp, #156]
  40ad44:	str	w0, [x19, #8]
  40ad48:	str	x24, [x19, #16]
  40ad4c:	b	40aac8 <_obstack_memory_used@@Base+0x1780>
  40ad50:	ldrb	w1, [x28]
  40ad54:	cmp	w1, w25
  40ad58:	b.eq	40aca4 <_obstack_memory_used@@Base+0x195c>  // b.none
  40ad5c:	add	x21, x21, #0x30
  40ad60:	ldr	x0, [sp, #120]
  40ad64:	cmp	x21, x0
  40ad68:	b.eq	40ace4 <_obstack_memory_used@@Base+0x199c>  // b.none
  40ad6c:	ldr	w0, [x21, #24]
  40ad70:	tbnz	w0, #3, 40ad5c <_obstack_memory_used@@Base+0x1a14>
  40ad74:	ldr	w25, [x21, #8]
  40ad78:	sub	w0, w25, #0x1
  40ad7c:	cmp	w0, #0xfe
  40ad80:	b.hi	40ad5c <_obstack_memory_used@@Base+0x1a14>  // b.pmore
  40ad84:	bl	401d00 <__ctype_b_loc@plt>
  40ad88:	ldr	x0, [x0]
  40ad8c:	ldrh	w0, [x0, w25, sxtw #1]
  40ad90:	tbnz	w0, #14, 40ad50 <_obstack_memory_used@@Base+0x1a08>
  40ad94:	b	40ad5c <_obstack_memory_used@@Base+0x1a14>
  40ad98:	and	w24, w24, #0xff
  40ad9c:	mov	x0, x28
  40ada0:	cmp	x28, x22
  40ada4:	b.cs	40adc0 <_obstack_memory_used@@Base+0x1a78>  // b.hs, b.nlast
  40ada8:	ldrb	w1, [x0]
  40adac:	cmp	w1, w24
  40adb0:	b.eq	40adc4 <_obstack_memory_used@@Base+0x1a7c>  // b.none
  40adb4:	add	x0, x0, #0x1
  40adb8:	cmp	x22, x0
  40adbc:	b.ne	40ada8 <_obstack_memory_used@@Base+0x1a60>  // b.any
  40adc0:	strb	w24, [x22], #1
  40adc4:	add	x20, x20, #0x30
  40adc8:	ldr	w0, [x20, #8]
  40adcc:	cbnz	w0, 40add8 <_obstack_memory_used@@Base+0x1a90>
  40add0:	ldr	x0, [x20]
  40add4:	cbz	x0, 40aa28 <_obstack_memory_used@@Base+0x16e0>
  40add8:	ldr	w0, [x20, #24]
  40addc:	tbz	w0, #2, 40aa38 <_obstack_memory_used@@Base+0x16f0>
  40ade0:	ldr	w0, [x21, #8]
  40ade4:	add	w0, w0, #0x1
  40ade8:	str	w0, [x21, #8]
  40adec:	ldr	w0, [x20, #24]
  40adf0:	tbnz	w0, #3, 40adc4 <_obstack_memory_used@@Base+0x1a7c>
  40adf4:	ldr	w24, [x20, #8]
  40adf8:	sub	w0, w24, #0x1
  40adfc:	cmp	w0, #0xfe
  40ae00:	b.hi	40adc4 <_obstack_memory_used@@Base+0x1a7c>  // b.pmore
  40ae04:	bl	401d00 <__ctype_b_loc@plt>
  40ae08:	ldr	x0, [x0]
  40ae0c:	ldrh	w0, [x0, w24, sxtw #1]
  40ae10:	tbnz	w0, #14, 40ad98 <_obstack_memory_used@@Base+0x1a50>
  40ae14:	b	40adc4 <_obstack_memory_used@@Base+0x1a7c>
  40ae18:	mov	x0, x19
  40ae1c:	ldp	x19, x20, [sp, #16]
  40ae20:	ldp	x21, x22, [sp, #32]
  40ae24:	ldp	x23, x24, [sp, #48]
  40ae28:	ldp	x25, x26, [sp, #64]
  40ae2c:	ldp	x27, x28, [sp, #80]
  40ae30:	ldp	x29, x30, [sp], #176
  40ae34:	ret

000000000040ae38 <argp_failure@@Base>:
  40ae38:	stp	x29, x30, [sp, #-464]!
  40ae3c:	mov	x29, sp
  40ae40:	stp	x19, x20, [sp, #16]
  40ae44:	stp	x21, x22, [sp, #32]
  40ae48:	str	x23, [sp, #48]
  40ae4c:	mov	x20, x0
  40ae50:	mov	w23, w1
  40ae54:	mov	w22, w2
  40ae58:	mov	x21, x3
  40ae5c:	str	x4, [sp, #432]
  40ae60:	str	x5, [sp, #440]
  40ae64:	str	x6, [sp, #448]
  40ae68:	str	x7, [sp, #456]
  40ae6c:	str	q0, [sp, #304]
  40ae70:	str	q1, [sp, #320]
  40ae74:	str	q2, [sp, #336]
  40ae78:	str	q3, [sp, #352]
  40ae7c:	str	q4, [sp, #368]
  40ae80:	str	q5, [sp, #384]
  40ae84:	str	q6, [sp, #400]
  40ae88:	str	q7, [sp, #416]
  40ae8c:	cbz	x0, 40afe8 <argp_failure@@Base+0x1b0>
  40ae90:	ldr	w0, [x0, #28]
  40ae94:	tbnz	w0, #1, 40afd4 <argp_failure@@Base+0x19c>
  40ae98:	ldr	x19, [x20, #72]
  40ae9c:	cbz	x19, 40afd4 <argp_failure@@Base+0x19c>
  40aea0:	mov	x0, x19
  40aea4:	bl	401b40 <flockfile@plt>
  40aea8:	ldr	x0, [x20, #64]
  40aeac:	mov	x1, x19
  40aeb0:	bl	401e50 <fputs_unlocked@plt>
  40aeb4:	cbz	x21, 40af3c <argp_failure@@Base+0x104>
  40aeb8:	add	x0, sp, #0x1d0
  40aebc:	str	x0, [sp, #104]
  40aec0:	str	x0, [sp, #112]
  40aec4:	add	x0, sp, #0x1b0
  40aec8:	str	x0, [sp, #120]
  40aecc:	mov	w0, #0xffffffe0            	// #-32
  40aed0:	str	w0, [sp, #128]
  40aed4:	mov	w0, #0xffffff80            	// #-128
  40aed8:	str	w0, [sp, #132]
  40aedc:	ldr	x0, [x19, #40]
  40aee0:	ldr	x1, [x19, #48]
  40aee4:	cmp	x0, x1
  40aee8:	b.cs	40b008 <argp_failure@@Base+0x1d0>  // b.hs, b.nlast
  40aeec:	add	x1, x0, #0x1
  40aef0:	str	x1, [x19, #40]
  40aef4:	mov	w1, #0x3a                  	// #58
  40aef8:	strb	w1, [x0]
  40aefc:	ldr	x0, [x19, #40]
  40af00:	ldr	x1, [x19, #48]
  40af04:	cmp	x0, x1
  40af08:	b.cs	40b018 <argp_failure@@Base+0x1e0>  // b.hs, b.nlast
  40af0c:	add	x1, x0, #0x1
  40af10:	str	x1, [x19, #40]
  40af14:	mov	w1, #0x20                  	// #32
  40af18:	strb	w1, [x0]
  40af1c:	ldp	x0, x1, [sp, #104]
  40af20:	stp	x0, x1, [sp, #64]
  40af24:	ldp	x0, x1, [sp, #120]
  40af28:	stp	x0, x1, [sp, #80]
  40af2c:	add	x2, sp, #0x40
  40af30:	mov	x1, x21
  40af34:	mov	x0, x19
  40af38:	bl	401e70 <vfprintf@plt>
  40af3c:	cbz	w22, 40af9c <argp_failure@@Base+0x164>
  40af40:	ldr	x0, [x19, #40]
  40af44:	ldr	x1, [x19, #48]
  40af48:	cmp	x0, x1
  40af4c:	b.cs	40b028 <argp_failure@@Base+0x1f0>  // b.hs, b.nlast
  40af50:	add	x1, x0, #0x1
  40af54:	str	x1, [x19, #40]
  40af58:	mov	w1, #0x3a                  	// #58
  40af5c:	strb	w1, [x0]
  40af60:	ldr	x0, [x19, #40]
  40af64:	ldr	x1, [x19, #48]
  40af68:	cmp	x0, x1
  40af6c:	b.cs	40b038 <argp_failure@@Base+0x200>  // b.hs, b.nlast
  40af70:	add	x1, x0, #0x1
  40af74:	str	x1, [x19, #40]
  40af78:	mov	w1, #0x20                  	// #32
  40af7c:	strb	w1, [x0]
  40af80:	mov	x2, #0xc8                  	// #200
  40af84:	add	x1, sp, #0x68
  40af88:	mov	w0, w22
  40af8c:	bl	401c40 <strerror_r@plt>
  40af90:	cbz	x0, 40b048 <argp_failure@@Base+0x210>
  40af94:	mov	x1, x19
  40af98:	bl	401b10 <fputs@plt>
  40af9c:	ldr	x0, [x19, #40]
  40afa0:	ldr	x1, [x19, #48]
  40afa4:	cmp	x0, x1
  40afa8:	b.cs	40b064 <argp_failure@@Base+0x22c>  // b.hs, b.nlast
  40afac:	add	x1, x0, #0x1
  40afb0:	str	x1, [x19, #40]
  40afb4:	mov	w1, #0xa                   	// #10
  40afb8:	strb	w1, [x0]
  40afbc:	mov	x0, x19
  40afc0:	bl	401bf0 <funlockfile@plt>
  40afc4:	cbz	w23, 40afd4 <argp_failure@@Base+0x19c>
  40afc8:	cbz	x20, 40b074 <argp_failure@@Base+0x23c>
  40afcc:	ldr	w0, [x20, #28]
  40afd0:	tbz	w0, #5, 40b074 <argp_failure@@Base+0x23c>
  40afd4:	ldp	x19, x20, [sp, #16]
  40afd8:	ldp	x21, x22, [sp, #32]
  40afdc:	ldr	x23, [sp, #48]
  40afe0:	ldp	x29, x30, [sp], #464
  40afe4:	ret
  40afe8:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  40afec:	ldr	x19, [x0, #1248]
  40aff0:	cbz	x19, 40afd4 <argp_failure@@Base+0x19c>
  40aff4:	mov	x0, x19
  40aff8:	bl	401b40 <flockfile@plt>
  40affc:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  40b000:	ldr	x0, [x0, #1264]
  40b004:	b	40aeac <argp_failure@@Base+0x74>
  40b008:	mov	w1, #0x3a                  	// #58
  40b00c:	mov	x0, x19
  40b010:	bl	401ce0 <__overflow@plt>
  40b014:	b	40aefc <argp_failure@@Base+0xc4>
  40b018:	mov	w1, #0x20                  	// #32
  40b01c:	mov	x0, x19
  40b020:	bl	401ce0 <__overflow@plt>
  40b024:	b	40af1c <argp_failure@@Base+0xe4>
  40b028:	mov	w1, #0x3a                  	// #58
  40b02c:	mov	x0, x19
  40b030:	bl	401ce0 <__overflow@plt>
  40b034:	b	40af60 <argp_failure@@Base+0x128>
  40b038:	mov	w1, #0x20                  	// #32
  40b03c:	mov	x0, x19
  40b040:	bl	401ce0 <__overflow@plt>
  40b044:	b	40af80 <argp_failure@@Base+0x148>
  40b048:	mov	w0, w22
  40b04c:	bl	401c90 <strerror@plt>
  40b050:	adrp	x1, 410000 <argp_error@@Base+0x3e2c>
  40b054:	add	x1, x1, #0xce8
  40b058:	cmp	x0, #0x0
  40b05c:	csel	x0, x1, x0, eq  // eq = none
  40b060:	b	40af94 <argp_failure@@Base+0x15c>
  40b064:	mov	w1, #0xa                   	// #10
  40b068:	mov	x0, x19
  40b06c:	bl	401ce0 <__overflow@plt>
  40b070:	b	40afbc <argp_failure@@Base+0x184>
  40b074:	mov	w0, w23
  40b078:	bl	401b20 <exit@plt>
  40b07c:	stp	x29, x30, [sp, #-240]!
  40b080:	mov	x29, sp
  40b084:	stp	x19, x20, [sp, #16]
  40b088:	stp	x21, x22, [sp, #32]
  40b08c:	stp	x23, x24, [sp, #48]
  40b090:	stp	x25, x26, [sp, #64]
  40b094:	stp	x27, x28, [sp, #80]
  40b098:	str	x0, [x29, #160]
  40b09c:	str	x1, [x29, #168]
  40b0a0:	str	x2, [x29, #120]
  40b0a4:	cbz	x2, 40bf48 <argp_failure@@Base+0x1110>
  40b0a8:	mov	w23, w3
  40b0ac:	mov	x27, x4
  40b0b0:	mov	x0, x2
  40b0b4:	bl	401b40 <flockfile@plt>
  40b0b8:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  40b0bc:	ldr	w26, [x0, #1212]
  40b0c0:	cbz	w26, 40b154 <argp_failure@@Base+0x31c>
  40b0c4:	mov	x3, #0x0                   	// #0
  40b0c8:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  40b0cc:	ldrsw	x2, [x0, #1208]
  40b0d0:	mov	x1, #0x0                   	// #0
  40b0d4:	ldr	x0, [x29, #120]
  40b0d8:	bl	40d2c4 <argp_error@@Base+0x10f0>
  40b0dc:	mov	x19, x0
  40b0e0:	cbz	x0, 40b4cc <argp_failure@@Base+0x694>
  40b0e4:	mov	x26, #0x0                   	// #0
  40b0e8:	mov	w0, #0xb                   	// #11
  40b0ec:	tst	w23, w0
  40b0f0:	b.ne	40b4d8 <argp_failure@@Base+0x6a0>  // b.any
  40b0f4:	mov	w20, #0x0                   	// #0
  40b0f8:	tst	x23, #0x3
  40b0fc:	b.ne	40b560 <argp_failure@@Base+0x728>  // b.any
  40b100:	tbnz	w23, #4, 40b770 <argp_failure@@Base+0x938>
  40b104:	tbnz	w23, #2, 40b794 <argp_failure@@Base+0x95c>
  40b108:	tbz	w23, #3, 40befc <argp_failure@@Base+0x10c4>
  40b10c:	ldr	w0, [x26, #8]
  40b110:	cbz	w0, 40befc <argp_failure@@Base+0x10c4>
  40b114:	cbnz	w20, 40b7b4 <argp_failure@@Base+0x97c>
  40b118:	str	xzr, [x29, #184]
  40b11c:	str	wzr, [x29, #192]
  40b120:	str	wzr, [x29, #196]
  40b124:	ldr	x21, [x26]
  40b128:	ldr	w0, [x26, #8]
  40b12c:	cbz	w0, 40bef8 <argp_failure@@Base+0x10c0>
  40b130:	sub	w0, w0, #0x1
  40b134:	add	x0, x0, #0x1
  40b138:	lsl	x1, x0, #3
  40b13c:	sub	x0, x1, x0
  40b140:	add	x0, x21, x0, lsl #3
  40b144:	str	x0, [x29, #112]
  40b148:	adrp	x27, 426000 <argp_error@@Base+0x19e2c>
  40b14c:	add	x27, x27, #0x498
  40b150:	b	40bd98 <argp_failure@@Base+0xf60>
  40b154:	adrp	x0, 410000 <argp_error@@Base+0x3e2c>
  40b158:	add	x0, x0, #0xd10
  40b15c:	bl	401eb0 <getenv@plt>
  40b160:	mov	x20, x0
  40b164:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  40b168:	add	x0, x0, #0x498
  40b16c:	ldp	x2, x3, [x0]
  40b170:	stp	x2, x3, [x29, #200]
  40b174:	ldp	x2, x3, [x0, #16]
  40b178:	stp	x2, x3, [x29, #216]
  40b17c:	ldr	x0, [x0, #32]
  40b180:	str	x0, [x29, #232]
  40b184:	cbz	x20, 40b0c4 <argp_failure@@Base+0x28c>
  40b188:	ldrb	w0, [x20]
  40b18c:	cbz	w0, 40b1b4 <argp_failure@@Base+0x37c>
  40b190:	bl	401d00 <__ctype_b_loc@plt>
  40b194:	mov	x25, x0
  40b198:	mov	w0, #0x1                   	// #1
  40b19c:	str	w0, [x29, #136]
  40b1a0:	adrp	x28, 410000 <argp_error@@Base+0x3e2c>
  40b1a4:	add	x28, x28, #0xf90
  40b1a8:	b	40b440 <argp_failure@@Base+0x608>
  40b1ac:	tbnz	w1, #10, 40b214 <argp_failure@@Base+0x3dc>
  40b1b0:	cbnz	w3, 40b480 <argp_failure@@Base+0x648>
  40b1b4:	ldr	w3, [x29, #232]
  40b1b8:	adrp	x0, 410000 <argp_error@@Base+0x3e2c>
  40b1bc:	add	x0, x0, #0xf90
  40b1c0:	add	x0, x0, #0x20
  40b1c4:	add	x2, x29, #0xc8
  40b1c8:	ldr	x5, [x0, #24]!
  40b1cc:	cbz	x5, 40b4a0 <argp_failure@@Base+0x668>
  40b1d0:	ldr	w1, [x0, #8]
  40b1d4:	cbnz	w1, 40b1c8 <argp_failure@@Base+0x390>
  40b1d8:	ldr	x1, [x0, #16]
  40b1dc:	cmp	x1, #0x20
  40b1e0:	b.eq	40b1c8 <argp_failure@@Base+0x390>  // b.none
  40b1e4:	ldr	w1, [x2, x1]
  40b1e8:	cmp	w1, w3
  40b1ec:	b.lt	40b1c8 <argp_failure@@Base+0x390>  // b.tstop
  40b1f0:	adrp	x4, 410000 <argp_error@@Base+0x3e2c>
  40b1f4:	add	x4, x4, #0xdc8
  40b1f8:	adrp	x3, 410000 <argp_error@@Base+0x3e2c>
  40b1fc:	add	x3, x3, #0xdd0
  40b200:	mov	w2, #0x0                   	// #0
  40b204:	mov	w1, #0x0                   	// #0
  40b208:	ldr	x0, [x29, #168]
  40b20c:	bl	40ae38 <argp_failure@@Base>
  40b210:	b	40b0c4 <argp_failure@@Base+0x28c>
  40b214:	and	w1, w1, #0x8
  40b218:	cmp	w3, #0x5f
  40b21c:	mov	w2, #0x2d                  	// #45
  40b220:	ccmp	w3, w2, #0x4, ne  // ne = any
  40b224:	ccmp	w1, #0x0, #0x0, ne  // ne = any
  40b228:	b.eq	40c0e4 <argp_failure@@Base+0x12ac>  // b.none
  40b22c:	mov	x19, x20
  40b230:	mov	w4, w2
  40b234:	ldrb	w2, [x19, #1]!
  40b238:	and	x1, x2, #0xff
  40b23c:	ldrh	w1, [x0, x1, lsl #1]
  40b240:	and	w1, w1, #0x8
  40b244:	cmp	w2, #0x5f
  40b248:	ccmp	w2, w4, #0x4, ne  // ne = any
  40b24c:	ccmp	w1, #0x0, #0x0, ne  // ne = any
  40b250:	b.ne	40b234 <argp_failure@@Base+0x3fc>  // b.any
  40b254:	sub	x24, x19, x20
  40b258:	mov	w1, w2
  40b25c:	and	x2, x2, #0xff
  40b260:	ldrh	w2, [x0, x2, lsl #1]
  40b264:	tbz	w2, #13, 40b278 <argp_failure@@Base+0x440>
  40b268:	ldrb	w1, [x19, #1]!
  40b26c:	and	x2, x1, #0xff
  40b270:	ldrh	w2, [x0, x2, lsl #1]
  40b274:	tbnz	w2, #13, 40b268 <argp_failure@@Base+0x430>
  40b278:	cmp	w1, #0x2c
  40b27c:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  40b280:	b.eq	40b2d4 <argp_failure@@Base+0x49c>  // b.none
  40b284:	cmp	w1, #0x3d
  40b288:	b.eq	40b2b0 <argp_failure@@Base+0x478>  // b.none
  40b28c:	ldrb	w1, [x19]
  40b290:	ldrh	w0, [x0, x1, lsl #1]
  40b294:	str	w26, [x29, #148]
  40b298:	str	w26, [x29, #152]
  40b29c:	tbnz	w0, #11, 40b32c <argp_failure@@Base+0x4f4>
  40b2a0:	add	x22, x28, #0x20
  40b2a4:	adrp	x21, 410000 <argp_error@@Base+0x3e2c>
  40b2a8:	add	x21, x21, #0xd00
  40b2ac:	b	40b3d4 <argp_failure@@Base+0x59c>
  40b2b0:	add	x1, x19, #0x1
  40b2b4:	ldrb	w2, [x19, #1]
  40b2b8:	ldrh	w2, [x0, x2, lsl #1]
  40b2bc:	tbz	w2, #13, 40b324 <argp_failure@@Base+0x4ec>
  40b2c0:	ldrb	w2, [x1, #1]!
  40b2c4:	ldrh	w2, [x0, x2, lsl #1]
  40b2c8:	tbnz	w2, #13, 40b2c0 <argp_failure@@Base+0x488>
  40b2cc:	mov	x19, x1
  40b2d0:	b	40b28c <argp_failure@@Base+0x454>
  40b2d4:	mov	w0, #0x1                   	// #1
  40b2d8:	str	w0, [x29, #148]
  40b2dc:	ldr	w0, [x29, #136]
  40b2e0:	str	w0, [x29, #152]
  40b2e4:	cmp	w3, #0x6e
  40b2e8:	b.ne	40b2a0 <argp_failure@@Base+0x468>  // b.any
  40b2ec:	ldrb	w0, [x20, #1]
  40b2f0:	ldr	w1, [x29, #136]
  40b2f4:	str	w1, [x29, #152]
  40b2f8:	cmp	w0, #0x6f
  40b2fc:	b.ne	40b2a0 <argp_failure@@Base+0x468>  // b.any
  40b300:	ldrb	w0, [x20, #2]
  40b304:	ldr	w1, [x29, #136]
  40b308:	str	w1, [x29, #152]
  40b30c:	cmp	w0, #0x2d
  40b310:	b.ne	40b2a0 <argp_failure@@Base+0x468>  // b.any
  40b314:	add	x20, x20, #0x3
  40b318:	sub	x24, x24, #0x3
  40b31c:	str	w26, [x29, #152]
  40b320:	b	40b2a0 <argp_failure@@Base+0x468>
  40b324:	mov	x19, x1
  40b328:	b	40b28c <argp_failure@@Base+0x454>
  40b32c:	mov	w2, #0xa                   	// #10
  40b330:	mov	x1, #0x0                   	// #0
  40b334:	mov	x0, x19
  40b338:	bl	401d10 <strtol@plt>
  40b33c:	str	w0, [x29, #152]
  40b340:	ldr	x0, [x25]
  40b344:	ldrb	w1, [x19]
  40b348:	ldrh	w1, [x0, x1, lsl #1]
  40b34c:	tbz	w1, #11, 40b35c <argp_failure@@Base+0x524>
  40b350:	ldrb	w1, [x19, #1]!
  40b354:	ldrh	w1, [x0, x1, lsl #1]
  40b358:	tbnz	w1, #11, 40b350 <argp_failure@@Base+0x518>
  40b35c:	ldrb	w1, [x19]
  40b360:	ldrh	w1, [x0, x1, lsl #1]
  40b364:	tbz	w1, #13, 40b37c <argp_failure@@Base+0x544>
  40b368:	ldrb	w1, [x19, #1]!
  40b36c:	ldrh	w1, [x0, x1, lsl #1]
  40b370:	tbnz	w1, #13, 40b368 <argp_failure@@Base+0x530>
  40b374:	str	w26, [x29, #148]
  40b378:	b	40b2a0 <argp_failure@@Base+0x468>
  40b37c:	str	w26, [x29, #148]
  40b380:	b	40b2a0 <argp_failure@@Base+0x468>
  40b384:	mov	x5, x20
  40b388:	mov	w4, w24
  40b38c:	adrp	x3, 410000 <argp_error@@Base+0x3e2c>
  40b390:	add	x3, x3, #0xd20
  40b394:	mov	w2, #0x0                   	// #0
  40b398:	mov	w1, #0x0                   	// #0
  40b39c:	ldr	x0, [x29, #168]
  40b3a0:	bl	40ae38 <argp_failure@@Base>
  40b3a4:	b	40b420 <argp_failure@@Base+0x5e8>
  40b3a8:	mov	x5, x20
  40b3ac:	mov	w4, w24
  40b3b0:	adrp	x3, 410000 <argp_error@@Base+0x3e2c>
  40b3b4:	add	x3, x3, #0xd50
  40b3b8:	mov	w2, #0x0                   	// #0
  40b3bc:	mov	w1, #0x0                   	// #0
  40b3c0:	ldr	x0, [x29, #168]
  40b3c4:	bl	40ae38 <argp_failure@@Base>
  40b3c8:	b	40b420 <argp_failure@@Base+0x5e8>
  40b3cc:	ldr	x21, [x22, #24]!
  40b3d0:	cbz	x21, 40b45c <argp_failure@@Base+0x624>
  40b3d4:	mov	x0, x21
  40b3d8:	bl	401b00 <strlen@plt>
  40b3dc:	cmp	x0, x24
  40b3e0:	b.ne	40b3cc <argp_failure@@Base+0x594>  // b.any
  40b3e4:	mov	x2, x24
  40b3e8:	mov	x1, x21
  40b3ec:	mov	x0, x20
  40b3f0:	bl	401c00 <strncmp@plt>
  40b3f4:	cbnz	w0, 40b3cc <argp_failure@@Base+0x594>
  40b3f8:	ldr	w0, [x29, #148]
  40b3fc:	cbz	w0, 40b408 <argp_failure@@Base+0x5d0>
  40b400:	ldr	w0, [x22, #8]
  40b404:	cbz	w0, 40b384 <argp_failure@@Base+0x54c>
  40b408:	ldr	w0, [x29, #152]
  40b40c:	tbnz	w0, #31, 40b3a8 <argp_failure@@Base+0x570>
  40b410:	ldr	x0, [x22, #16]
  40b414:	add	x1, x29, #0xc8
  40b418:	ldr	w2, [x29, #152]
  40b41c:	str	w2, [x1, x0]
  40b420:	ldr	x0, [x22]
  40b424:	cbz	x0, 40b45c <argp_failure@@Base+0x624>
  40b428:	ldrb	w0, [x19]
  40b42c:	cmp	w0, #0x2c
  40b430:	cset	w0, eq  // eq = none
  40b434:	cinc	x20, x19, eq  // eq = none
  40b438:	ldrb	w0, [x19, w0, uxtw]
  40b43c:	cbz	w0, 40b1b4 <argp_failure@@Base+0x37c>
  40b440:	ldr	x0, [x25]
  40b444:	ldrb	w3, [x20]
  40b448:	and	x1, x3, #0xff
  40b44c:	ldrh	w1, [x0, x1, lsl #1]
  40b450:	tbz	w1, #13, 40b1ac <argp_failure@@Base+0x374>
  40b454:	add	x20, x20, #0x1
  40b458:	b	40b444 <argp_failure@@Base+0x60c>
  40b45c:	mov	x5, x20
  40b460:	mov	w4, w24
  40b464:	adrp	x3, 410000 <argp_error@@Base+0x3e2c>
  40b468:	add	x3, x3, #0xd80
  40b46c:	mov	w2, #0x0                   	// #0
  40b470:	mov	w1, #0x0                   	// #0
  40b474:	ldr	x0, [x29, #168]
  40b478:	bl	40ae38 <argp_failure@@Base>
  40b47c:	b	40b428 <argp_failure@@Base+0x5f0>
  40b480:	mov	x4, x20
  40b484:	adrp	x3, 410000 <argp_error@@Base+0x3e2c>
  40b488:	add	x3, x3, #0xda8
  40b48c:	mov	w2, #0x0                   	// #0
  40b490:	mov	w1, #0x0                   	// #0
  40b494:	ldr	x0, [x29, #168]
  40b498:	bl	40ae38 <argp_failure@@Base>
  40b49c:	b	40b1b4 <argp_failure@@Base+0x37c>
  40b4a0:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  40b4a4:	add	x0, x0, #0x498
  40b4a8:	ldp	x2, x3, [x29, #200]
  40b4ac:	stp	x2, x3, [x0]
  40b4b0:	ldp	x2, x3, [x29, #216]
  40b4b4:	stp	x2, x3, [x0, #16]
  40b4b8:	ldr	x1, [x29, #232]
  40b4bc:	str	x1, [x0, #32]
  40b4c0:	mov	w1, #0x1                   	// #1
  40b4c4:	str	w1, [x0, #36]
  40b4c8:	b	40b0c4 <argp_failure@@Base+0x28c>
  40b4cc:	ldr	x0, [x29, #120]
  40b4d0:	bl	401bf0 <funlockfile@plt>
  40b4d4:	b	40bf48 <argp_failure@@Base+0x1110>
  40b4d8:	mov	x1, #0x0                   	// #0
  40b4dc:	ldr	x0, [x29, #160]
  40b4e0:	bl	40a8b4 <_obstack_memory_used@@Base+0x156c>
  40b4e4:	mov	x26, x0
  40b4e8:	adrp	x1, 40f000 <argp_error@@Base+0x2e2c>
  40b4ec:	add	x1, x1, #0x328
  40b4f0:	bl	40950c <_obstack_memory_used@@Base+0x1c4>
  40b4f4:	cbz	x0, 40b500 <argp_failure@@Base+0x6c8>
  40b4f8:	mov	w1, #0xffffffff            	// #-1
  40b4fc:	str	w1, [x0, #24]
  40b500:	adrp	x1, 410000 <argp_error@@Base+0x3e2c>
  40b504:	add	x1, x1, #0x590
  40b508:	mov	x0, x26
  40b50c:	bl	40950c <_obstack_memory_used@@Base+0x1c4>
  40b510:	cbz	x0, 40b51c <argp_failure@@Base+0x6e4>
  40b514:	mov	w1, #0xffffffff            	// #-1
  40b518:	str	w1, [x0, #24]
  40b51c:	ldr	w0, [x26, #8]
  40b520:	cbz	w0, 40b0f4 <argp_failure@@Base+0x2bc>
  40b524:	ldr	x2, [x26]
  40b528:	mov	w0, #0x0                   	// #0
  40b52c:	str	w0, [x2, #48]
  40b530:	add	w0, w0, #0x1
  40b534:	add	x2, x2, #0x38
  40b538:	ldr	w1, [x26, #8]
  40b53c:	cmp	w0, w1
  40b540:	b.cc	40b52c <argp_failure@@Base+0x6f4>  // b.lo, b.ul, b.last
  40b544:	adrp	x3, 40a000 <_obstack_memory_used@@Base+0xcb8>
  40b548:	add	x3, x3, #0x610
  40b54c:	mov	x2, #0x38                  	// #56
  40b550:	mov	w1, w1
  40b554:	ldr	x0, [x26]
  40b558:	bl	401b80 <qsort@plt>
  40b55c:	b	40b0f4 <argp_failure@@Base+0x2bc>
  40b560:	ldr	x0, [x29, #160]
  40b564:	bl	4095d4 <_obstack_memory_used@@Base+0x28c>
  40b568:	mov	x2, x0
  40b56c:	add	x0, x0, #0xf
  40b570:	and	x0, x0, #0xfffffffffffffff0
  40b574:	sub	sp, sp, x0
  40b578:	mov	x25, sp
  40b57c:	mov	w1, #0x0                   	// #0
  40b580:	mov	x0, x25
  40b584:	bl	401c20 <memset@plt>
  40b588:	mov	w21, #0x1                   	// #1
  40b58c:	adrp	x24, 426000 <argp_error@@Base+0x19e2c>
  40b590:	add	x24, x24, #0x498
  40b594:	adrp	x0, 410000 <argp_error@@Base+0x3e2c>
  40b598:	add	x0, x0, #0xe18
  40b59c:	str	x0, [x29, #152]
  40b5a0:	adrp	x28, 410000 <argp_error@@Base+0x3e2c>
  40b5a4:	add	x28, x28, #0xe10
  40b5a8:	b	40b674 <argp_failure@@Base+0x83c>
  40b5ac:	mov	x0, x19
  40b5b0:	bl	40d358 <argp_error@@Base+0x1184>
  40b5b4:	b	40b690 <argp_failure@@Base+0x858>
  40b5b8:	mov	x3, x27
  40b5bc:	ldr	x2, [x29, #152]
  40b5c0:	mov	x1, x28
  40b5c4:	mov	x0, x19
  40b5c8:	bl	40d998 <argp_error@@Base+0x17c4>
  40b5cc:	b	40b6bc <argp_failure@@Base+0x884>
  40b5d0:	mov	x0, x19
  40b5d4:	bl	40d358 <argp_error@@Base+0x1184>
  40b5d8:	b	40b6d8 <argp_failure@@Base+0x8a0>
  40b5dc:	mov	x1, x19
  40b5e0:	mov	x0, x26
  40b5e4:	bl	40976c <_obstack_memory_used@@Base+0x424>
  40b5e8:	orr	w23, w23, #0x2
  40b5ec:	mov	x4, x19
  40b5f0:	mov	w3, #0x1                   	// #1
  40b5f4:	add	x2, x29, #0xc8
  40b5f8:	ldr	x1, [x29, #168]
  40b5fc:	ldr	x0, [x29, #160]
  40b600:	bl	409bfc <_obstack_memory_used@@Base+0x8b4>
  40b604:	mov	w20, w0
  40b608:	ldr	x0, [x19, #56]
  40b60c:	ldr	x1, [x19, #48]
  40b610:	sub	x0, x0, x1
  40b614:	ldr	x1, [x19, #32]
  40b618:	cmp	x0, x1
  40b61c:	b.hi	40b73c <argp_failure@@Base+0x904>  // b.pmore
  40b620:	sxtw	x22, w22
  40b624:	str	x22, [x19, #24]
  40b628:	sxtw	x21, w21
  40b62c:	ldr	x0, [x19, #56]
  40b630:	ldr	x1, [x19, #48]
  40b634:	sub	x0, x0, x1
  40b638:	ldr	x1, [x19, #32]
  40b63c:	cmp	x0, x1
  40b640:	b.hi	40b748 <argp_failure@@Base+0x910>  // b.pmore
  40b644:	str	x21, [x19, #8]
  40b648:	ldr	x1, [x19, #56]
  40b64c:	ldr	x0, [x19, #64]
  40b650:	cmp	x1, x0
  40b654:	b.cs	40b754 <argp_failure@@Base+0x91c>  // b.hs, b.nlast
  40b658:	ldr	x0, [x19, #56]
  40b65c:	add	x1, x0, #0x1
  40b660:	str	x1, [x19, #56]
  40b664:	mov	w1, #0xa                   	// #10
  40b668:	strb	w1, [x0]
  40b66c:	mov	w21, #0x0                   	// #0
  40b670:	cbz	w20, 40b768 <argp_failure@@Base+0x930>
  40b674:	ldr	w20, [x24, #28]
  40b678:	ldr	x0, [x19, #56]
  40b67c:	ldr	x1, [x19, #48]
  40b680:	sub	x0, x0, x1
  40b684:	ldr	x1, [x19, #32]
  40b688:	cmp	x0, x1
  40b68c:	b.hi	40b5ac <argp_failure@@Base+0x774>  // b.pmore
  40b690:	ldr	x22, [x19, #24]
  40b694:	sxtw	x20, w20
  40b698:	str	x20, [x19, #24]
  40b69c:	str	x25, [x29, #200]
  40b6a0:	cbz	w21, 40b5b8 <argp_failure@@Base+0x780>
  40b6a4:	mov	x3, x27
  40b6a8:	adrp	x2, 410000 <argp_error@@Base+0x3e2c>
  40b6ac:	add	x2, x2, #0xe08
  40b6b0:	mov	x1, x28
  40b6b4:	mov	x0, x19
  40b6b8:	bl	40d998 <argp_error@@Base+0x17c4>
  40b6bc:	ldrsw	x20, [x24, #28]
  40b6c0:	ldr	x0, [x19, #56]
  40b6c4:	ldr	x1, [x19, #48]
  40b6c8:	sub	x0, x0, x1
  40b6cc:	ldr	x1, [x19, #32]
  40b6d0:	cmp	x0, x1
  40b6d4:	b.hi	40b5d0 <argp_failure@@Base+0x798>  // b.pmore
  40b6d8:	ldr	x21, [x19, #8]
  40b6dc:	str	x20, [x19, #8]
  40b6e0:	tbz	w23, #1, 40b5dc <argp_failure@@Base+0x7a4>
  40b6e4:	ldr	w0, [x26, #8]
  40b6e8:	cbz	w0, 40b5ec <argp_failure@@Base+0x7b4>
  40b6ec:	ldr	x0, [x19, #56]
  40b6f0:	add	x0, x0, #0xc
  40b6f4:	ldr	x1, [x19, #64]
  40b6f8:	cmp	x1, x0
  40b6fc:	b.cs	40b710 <argp_failure@@Base+0x8d8>  // b.hs, b.nlast
  40b700:	mov	x1, #0xc                   	// #12
  40b704:	mov	x0, x19
  40b708:	bl	40d8a0 <argp_error@@Base+0x16cc>
  40b70c:	cbz	w0, 40b5ec <argp_failure@@Base+0x7b4>
  40b710:	ldr	x1, [x19, #56]
  40b714:	adrp	x0, 410000 <argp_error@@Base+0x3e2c>
  40b718:	add	x0, x0, #0xe20
  40b71c:	ldr	x2, [x0]
  40b720:	str	x2, [x1]
  40b724:	ldr	w0, [x0, #8]
  40b728:	str	w0, [x1, #8]
  40b72c:	ldr	x0, [x19, #56]
  40b730:	add	x0, x0, #0xc
  40b734:	str	x0, [x19, #56]
  40b738:	b	40b5ec <argp_failure@@Base+0x7b4>
  40b73c:	mov	x0, x19
  40b740:	bl	40d358 <argp_error@@Base+0x1184>
  40b744:	b	40b620 <argp_failure@@Base+0x7e8>
  40b748:	mov	x0, x19
  40b74c:	bl	40d358 <argp_error@@Base+0x1184>
  40b750:	b	40b644 <argp_failure@@Base+0x80c>
  40b754:	mov	x1, #0x1                   	// #1
  40b758:	mov	x0, x19
  40b75c:	bl	40d8a0 <argp_error@@Base+0x16cc>
  40b760:	cbnz	w0, 40b658 <argp_failure@@Base+0x820>
  40b764:	b	40b66c <argp_failure@@Base+0x834>
  40b768:	mov	w20, #0x1                   	// #1
  40b76c:	b	40b100 <argp_failure@@Base+0x2c8>
  40b770:	mov	x5, x19
  40b774:	mov	w4, #0x1                   	// #1
  40b778:	mov	w3, #0x0                   	// #0
  40b77c:	mov	w2, #0x0                   	// #0
  40b780:	ldr	x1, [x29, #168]
  40b784:	ldr	x0, [x29, #160]
  40b788:	bl	40a14c <_obstack_memory_used@@Base+0xe04>
  40b78c:	orr	w20, w20, w0
  40b790:	b	40b104 <argp_failure@@Base+0x2cc>
  40b794:	mov	x3, x27
  40b798:	mov	x2, x27
  40b79c:	adrp	x1, 410000 <argp_error@@Base+0x3e2c>
  40b7a0:	add	x1, x1, #0xe30
  40b7a4:	mov	x0, x19
  40b7a8:	bl	40d998 <argp_error@@Base+0x17c4>
  40b7ac:	mov	w20, #0x1                   	// #1
  40b7b0:	b	40b108 <argp_failure@@Base+0x2d0>
  40b7b4:	ldr	x1, [x19, #56]
  40b7b8:	ldr	x0, [x19, #64]
  40b7bc:	cmp	x1, x0
  40b7c0:	b.cs	40b7dc <argp_failure@@Base+0x9a4>  // b.hs, b.nlast
  40b7c4:	ldr	x0, [x19, #56]
  40b7c8:	add	x1, x0, #0x1
  40b7cc:	str	x1, [x19, #56]
  40b7d0:	mov	w1, #0xa                   	// #10
  40b7d4:	strb	w1, [x0]
  40b7d8:	b	40b118 <argp_failure@@Base+0x2e0>
  40b7dc:	mov	x1, #0x1                   	// #1
  40b7e0:	mov	x0, x19
  40b7e4:	bl	40d8a0 <argp_error@@Base+0x16cc>
  40b7e8:	cbnz	w0, 40b7c4 <argp_failure@@Base+0x98c>
  40b7ec:	b	40b118 <argp_failure@@Base+0x2e0>
  40b7f0:	mov	x0, x19
  40b7f4:	bl	40d358 <argp_error@@Base+0x1184>
  40b7f8:	b	40bdb8 <argp_failure@@Base+0xf80>
  40b7fc:	add	x0, x0, #0x30
  40b800:	cmp	x0, x1
  40b804:	b.eq	40b828 <argp_failure@@Base+0x9f0>  // b.none
  40b808:	ldr	x2, [x0]
  40b80c:	cbz	x2, 40b7fc <argp_failure@@Base+0x9c4>
  40b810:	ldr	w2, [x0, #24]
  40b814:	tbnz	w2, #1, 40b7fc <argp_failure@@Base+0x9c4>
  40b818:	mov	w0, #0x1                   	// #1
  40b81c:	str	w0, [x29, #148]
  40b820:	b	40b828 <argp_failure@@Base+0x9f0>
  40b824:	str	wzr, [x29, #148]
  40b828:	ldr	w22, [x27, #8]
  40b82c:	ldr	x0, [x19, #56]
  40b830:	ldr	x1, [x19, #48]
  40b834:	sub	x0, x0, x1
  40b838:	ldr	x1, [x19, #32]
  40b83c:	cmp	x0, x1
  40b840:	b.hi	40b87c <argp_failure@@Base+0xa44>  // b.pmore
  40b844:	sxtw	x22, w22
  40b848:	str	x22, [x19, #24]
  40b84c:	ldr	w0, [x21, #8]
  40b850:	cbz	w0, 40b968 <argp_failure@@Base+0xb30>
  40b854:	sub	w0, w0, #0x1
  40b858:	add	x0, x0, #0x1
  40b85c:	add	x0, x0, x0, lsl #1
  40b860:	add	x0, x20, x0, lsl #4
  40b864:	str	x0, [x29, #152]
  40b868:	mov	x22, x20
  40b86c:	adrp	x0, 410000 <argp_error@@Base+0x3e2c>
  40b870:	add	x0, x0, #0xe00
  40b874:	str	x0, [x29, #104]
  40b878:	b	40c0b8 <argp_failure@@Base+0x1280>
  40b87c:	mov	x0, x19
  40b880:	bl	40d358 <argp_error@@Base+0x1184>
  40b884:	b	40b844 <argp_failure@@Base+0xa0c>
  40b888:	tbz	w28, #1, 40b894 <argp_failure@@Base+0xa5c>
  40b88c:	add	x25, x25, #0x1
  40b890:	b	40c0a8 <argp_failure@@Base+0x1270>
  40b894:	add	x1, x29, #0xc8
  40b898:	ldr	w0, [x27, #8]
  40b89c:	bl	409fc8 <_obstack_memory_used@@Base+0xc80>
  40b8a0:	ldr	x1, [x19, #56]
  40b8a4:	ldr	x0, [x19, #64]
  40b8a8:	cmp	x1, x0
  40b8ac:	b.cs	40b91c <argp_failure@@Base+0xae4>  // b.hs, b.nlast
  40b8b0:	ldr	x0, [x19, #56]
  40b8b4:	add	x1, x0, #0x1
  40b8b8:	str	x1, [x19, #56]
  40b8bc:	mov	w1, #0x2d                  	// #45
  40b8c0:	strb	w1, [x0]
  40b8c4:	ldrb	w24, [x25]
  40b8c8:	ldr	x1, [x19, #56]
  40b8cc:	ldr	x0, [x19, #64]
  40b8d0:	cmp	x1, x0
  40b8d4:	b.cs	40b930 <argp_failure@@Base+0xaf8>  // b.hs, b.nlast
  40b8d8:	ldr	x0, [x19, #56]
  40b8dc:	add	x1, x0, #0x1
  40b8e0:	str	x1, [x19, #56]
  40b8e4:	strb	w24, [x0]
  40b8e8:	ldr	w0, [x29, #148]
  40b8ec:	cbz	w0, 40b8f8 <argp_failure@@Base+0xac0>
  40b8f0:	ldr	w0, [x27]
  40b8f4:	cbz	w0, 40b954 <argp_failure@@Base+0xb1c>
  40b8f8:	ldr	x2, [x20, #16]
  40b8fc:	cbz	x2, 40b88c <argp_failure@@Base+0xa54>
  40b900:	ldr	w0, [x20, #24]
  40b904:	tbz	w0, #0, 40b944 <argp_failure@@Base+0xb0c>
  40b908:	adrp	x1, 410000 <argp_error@@Base+0x3e2c>
  40b90c:	add	x1, x1, #0xe68
  40b910:	mov	x0, x19
  40b914:	bl	40d998 <argp_error@@Base+0x17c4>
  40b918:	b	40b88c <argp_failure@@Base+0xa54>
  40b91c:	mov	x1, #0x1                   	// #1
  40b920:	mov	x0, x19
  40b924:	bl	40d8a0 <argp_error@@Base+0x16cc>
  40b928:	cbnz	w0, 40b8b0 <argp_failure@@Base+0xa78>
  40b92c:	b	40b8c4 <argp_failure@@Base+0xa8c>
  40b930:	mov	x1, #0x1                   	// #1
  40b934:	mov	x0, x19
  40b938:	bl	40d8a0 <argp_error@@Base+0x16cc>
  40b93c:	cbnz	w0, 40b8d8 <argp_failure@@Base+0xaa0>
  40b940:	b	40b8e8 <argp_failure@@Base+0xab0>
  40b944:	ldr	x1, [x29, #104]
  40b948:	mov	x0, x19
  40b94c:	bl	40d998 <argp_error@@Base+0x17c4>
  40b950:	b	40b88c <argp_failure@@Base+0xa54>
  40b954:	ldr	x0, [x20, #16]
  40b958:	cbz	x0, 40b88c <argp_failure@@Base+0xa54>
  40b95c:	mov	w0, #0x1                   	// #1
  40b960:	str	w0, [x29, #196]
  40b964:	b	40b88c <argp_failure@@Base+0xa54>
  40b968:	ldr	w0, [x20, #24]
  40b96c:	tbz	w0, #3, 40ba48 <argp_failure@@Base+0xc10>
  40b970:	ldr	w22, [x27, #16]
  40b974:	ldr	x0, [x19, #56]
  40b978:	ldr	x1, [x19, #48]
  40b97c:	sub	x0, x0, x1
  40b980:	ldr	x1, [x19, #32]
  40b984:	cmp	x0, x1
  40b988:	b.hi	40b9b4 <argp_failure@@Base+0xb7c>  // b.pmore
  40b98c:	sxtw	x22, w22
  40b990:	str	x22, [x19, #24]
  40b994:	ldr	w0, [x21, #8]
  40b998:	cbz	w0, 40bb0c <argp_failure@@Base+0xcd4>
  40b99c:	sub	w24, w0, #0x1
  40b9a0:	add	x24, x24, #0x1
  40b9a4:	add	x24, x24, x24, lsl #1
  40b9a8:	add	x24, x20, x24, lsl #4
  40b9ac:	mov	x22, x20
  40b9b0:	b	40b9e8 <argp_failure@@Base+0xbb0>
  40b9b4:	mov	x0, x19
  40b9b8:	bl	40d358 <argp_error@@Base+0x1184>
  40b9bc:	b	40b98c <argp_failure@@Base+0xb54>
  40b9c0:	mov	x2, x25
  40b9c4:	mov	x1, x28
  40b9c8:	ldr	x0, [x19, #56]
  40b9cc:	bl	401aa0 <memcpy@plt>
  40b9d0:	ldr	x0, [x19, #56]
  40b9d4:	add	x25, x0, x25
  40b9d8:	str	x25, [x19, #56]
  40b9dc:	add	x22, x22, #0x30
  40b9e0:	cmp	x22, x24
  40b9e4:	b.eq	40bb0c <argp_failure@@Base+0xcd4>  // b.none
  40b9e8:	ldr	x0, [x22]
  40b9ec:	cbz	x0, 40b9dc <argp_failure@@Base+0xba4>
  40b9f0:	ldrb	w0, [x0]
  40b9f4:	cbz	w0, 40b9dc <argp_failure@@Base+0xba4>
  40b9f8:	ldr	w0, [x22, #24]
  40b9fc:	tbnz	w0, #1, 40b9dc <argp_failure@@Base+0xba4>
  40ba00:	add	x1, x29, #0xc8
  40ba04:	ldr	w0, [x27, #16]
  40ba08:	bl	409fc8 <_obstack_memory_used@@Base+0xc80>
  40ba0c:	ldr	x28, [x22]
  40ba10:	mov	x0, x28
  40ba14:	bl	401b00 <strlen@plt>
  40ba18:	mov	x25, x0
  40ba1c:	cbz	x0, 40b9dc <argp_failure@@Base+0xba4>
  40ba20:	ldr	x0, [x19, #56]
  40ba24:	add	x0, x0, x25
  40ba28:	ldr	x1, [x19, #64]
  40ba2c:	cmp	x1, x0
  40ba30:	b.cs	40b9c0 <argp_failure@@Base+0xb88>  // b.hs, b.nlast
  40ba34:	mov	x1, x25
  40ba38:	mov	x0, x19
  40ba3c:	bl	40d8a0 <argp_error@@Base+0x16cc>
  40ba40:	cbz	w0, 40b9dc <argp_failure@@Base+0xba4>
  40ba44:	b	40b9c0 <argp_failure@@Base+0xb88>
  40ba48:	ldr	w22, [x27, #12]
  40ba4c:	ldr	x0, [x19, #56]
  40ba50:	ldr	x1, [x19, #48]
  40ba54:	sub	x0, x0, x1
  40ba58:	ldr	x1, [x19, #32]
  40ba5c:	cmp	x0, x1
  40ba60:	b.hi	40ba94 <argp_failure@@Base+0xc5c>  // b.pmore
  40ba64:	sxtw	x22, w22
  40ba68:	str	x22, [x19, #24]
  40ba6c:	ldr	w0, [x21, #8]
  40ba70:	cbz	w0, 40bb0c <argp_failure@@Base+0xcd4>
  40ba74:	sub	w24, w0, #0x1
  40ba78:	add	x24, x24, #0x1
  40ba7c:	add	x24, x24, x24, lsl #1
  40ba80:	add	x24, x20, x24, lsl #4
  40ba84:	mov	x22, x20
  40ba88:	adrp	x25, 410000 <argp_error@@Base+0x3e2c>
  40ba8c:	add	x25, x25, #0xe70
  40ba90:	b	40babc <argp_failure@@Base+0xc84>
  40ba94:	mov	x0, x19
  40ba98:	bl	40d358 <argp_error@@Base+0x1184>
  40ba9c:	b	40ba64 <argp_failure@@Base+0xc2c>
  40baa0:	adrp	x1, 410000 <argp_error@@Base+0x3e2c>
  40baa4:	add	x1, x1, #0xe80
  40baa8:	mov	x0, x19
  40baac:	bl	40d998 <argp_error@@Base+0x17c4>
  40bab0:	add	x22, x22, #0x30
  40bab4:	cmp	x22, x24
  40bab8:	b.eq	40bb0c <argp_failure@@Base+0xcd4>  // b.none
  40babc:	ldr	x0, [x22]
  40bac0:	cbz	x0, 40bab0 <argp_failure@@Base+0xc78>
  40bac4:	ldr	w0, [x22, #24]
  40bac8:	tbnz	w0, #1, 40bab0 <argp_failure@@Base+0xc78>
  40bacc:	add	x1, x29, #0xc8
  40bad0:	ldr	w0, [x27, #12]
  40bad4:	bl	409fc8 <_obstack_memory_used@@Base+0xc80>
  40bad8:	ldr	x2, [x22]
  40badc:	mov	x1, x25
  40bae0:	mov	x0, x19
  40bae4:	bl	40d998 <argp_error@@Base+0x17c4>
  40bae8:	ldr	x2, [x20, #16]
  40baec:	cbz	x2, 40bab0 <argp_failure@@Base+0xc78>
  40baf0:	ldr	w0, [x20, #24]
  40baf4:	tbz	w0, #0, 40baa0 <argp_failure@@Base+0xc68>
  40baf8:	adrp	x1, 410000 <argp_error@@Base+0x3e2c>
  40bafc:	add	x1, x1, #0xe78
  40bb00:	mov	x0, x19
  40bb04:	bl	40d998 <argp_error@@Base+0x17c4>
  40bb08:	b	40bab0 <argp_failure@@Base+0xc78>
  40bb0c:	ldr	x0, [x19, #56]
  40bb10:	ldr	x1, [x19, #48]
  40bb14:	sub	x0, x0, x1
  40bb18:	ldr	x1, [x19, #32]
  40bb1c:	cmp	x0, x1
  40bb20:	b.hi	40bb74 <argp_failure@@Base+0xd3c>  // b.pmore
  40bb24:	str	xzr, [x19, #8]
  40bb28:	ldr	w0, [x29, #224]
  40bb2c:	cbz	w0, 40bb80 <argp_failure@@Base+0xd48>
  40bb30:	ldr	w0, [x20, #24]
  40bb34:	tbnz	w0, #3, 40bb58 <argp_failure@@Base+0xd20>
  40bb38:	ldr	w22, [x20, #8]
  40bb3c:	sub	w0, w22, #0x1
  40bb40:	cmp	w0, #0xfe
  40bb44:	b.hi	40bb58 <argp_failure@@Base+0xd20>  // b.pmore
  40bb48:	bl	401d00 <__ctype_b_loc@plt>
  40bb4c:	ldr	x0, [x0]
  40bb50:	ldrh	w0, [x0, w22, sxtw #1]
  40bb54:	tbnz	w0, #14, 40bd48 <argp_failure@@Base+0xf10>
  40bb58:	ldr	x0, [x20]
  40bb5c:	cbnz	x0, 40bd48 <argp_failure@@Base+0xf10>
  40bb60:	add	x2, x29, #0xc8
  40bb64:	ldr	x1, [x21, #40]
  40bb68:	ldr	x0, [x20, #32]
  40bb6c:	bl	409dd0 <_obstack_memory_used@@Base+0xa88>
  40bb70:	b	40bd44 <argp_failure@@Base+0xf0c>
  40bb74:	mov	x0, x19
  40bb78:	bl	40d358 <argp_error@@Base+0x1184>
  40bb7c:	b	40bb24 <argp_failure@@Base+0xcec>
  40bb80:	ldr	x22, [x20, #32]
  40bb84:	ldr	x3, [x29, #168]
  40bb88:	ldr	x2, [x21, #40]
  40bb8c:	ldr	w1, [x20, #8]
  40bb90:	mov	x0, x22
  40bb94:	bl	40962c <_obstack_memory_used@@Base+0x2e4>
  40bb98:	mov	x20, x0
  40bb9c:	cbz	x0, 40bd04 <argp_failure@@Base+0xecc>
  40bba0:	ldrb	w0, [x0]
  40bba4:	cbz	w0, 40bcfc <argp_failure@@Base+0xec4>
  40bba8:	ldr	x0, [x19, #56]
  40bbac:	ldr	x1, [x19, #48]
  40bbb0:	sub	x0, x0, x1
  40bbb4:	ldr	x1, [x19, #32]
  40bbb8:	cmp	x0, x1
  40bbbc:	b.hi	40bc60 <argp_failure@@Base+0xe28>  // b.pmore
  40bbc0:	ldr	x24, [x19, #40]
  40bbc4:	cmp	x24, #0x0
  40bbc8:	csel	x24, x24, xzr, ge  // ge = tcont
  40bbcc:	ldrsw	x25, [x27, #20]
  40bbd0:	str	x25, [x19, #8]
  40bbd4:	ldr	w25, [x27, #20]
  40bbd8:	ldr	x0, [x19, #56]
  40bbdc:	ldr	x1, [x19, #48]
  40bbe0:	sub	x0, x0, x1
  40bbe4:	ldr	x1, [x19, #32]
  40bbe8:	cmp	x0, x1
  40bbec:	b.hi	40bc9c <argp_failure@@Base+0xe64>  // b.pmore
  40bbf0:	sxtw	x25, w25
  40bbf4:	str	x25, [x19, #24]
  40bbf8:	ldr	w1, [x27, #20]
  40bbfc:	add	w0, w1, #0x3
  40bc00:	cmp	w24, w0
  40bc04:	b.hi	40bca8 <argp_failure@@Base+0xe70>  // b.pmore
  40bc08:	cmp	w24, w1
  40bc0c:	b.cc	40bce4 <argp_failure@@Base+0xeac>  // b.lo, b.ul, b.last
  40bc10:	ldr	x0, [x19, #56]
  40bc14:	add	x0, x0, #0x3
  40bc18:	ldr	x1, [x19, #64]
  40bc1c:	cmp	x1, x0
  40bc20:	b.cs	40bc34 <argp_failure@@Base+0xdfc>  // b.hs, b.nlast
  40bc24:	mov	x1, #0x3                   	// #3
  40bc28:	mov	x0, x19
  40bc2c:	bl	40d8a0 <argp_error@@Base+0x16cc>
  40bc30:	cbz	w0, 40bcec <argp_failure@@Base+0xeb4>
  40bc34:	ldr	x1, [x19, #56]
  40bc38:	adrp	x0, 410000 <argp_error@@Base+0x3e2c>
  40bc3c:	add	x0, x0, #0xe88
  40bc40:	ldrh	w2, [x0]
  40bc44:	strh	w2, [x1]
  40bc48:	ldrb	w0, [x0, #2]
  40bc4c:	strb	w0, [x1, #2]
  40bc50:	ldr	x0, [x19, #56]
  40bc54:	add	x0, x0, #0x3
  40bc58:	str	x0, [x19, #56]
  40bc5c:	b	40bcec <argp_failure@@Base+0xeb4>
  40bc60:	mov	x0, x19
  40bc64:	bl	40d358 <argp_error@@Base+0x1184>
  40bc68:	ldr	x24, [x19, #40]
  40bc6c:	cmp	x24, #0x0
  40bc70:	csel	x24, x24, xzr, ge  // ge = tcont
  40bc74:	ldrsw	x25, [x27, #20]
  40bc78:	ldr	x0, [x19, #56]
  40bc7c:	ldr	x1, [x19, #48]
  40bc80:	sub	x0, x0, x1
  40bc84:	ldr	x1, [x19, #32]
  40bc88:	cmp	x0, x1
  40bc8c:	b.ls	40bbd0 <argp_failure@@Base+0xd98>  // b.plast
  40bc90:	mov	x0, x19
  40bc94:	bl	40d358 <argp_error@@Base+0x1184>
  40bc98:	b	40bbd0 <argp_failure@@Base+0xd98>
  40bc9c:	mov	x0, x19
  40bca0:	bl	40d358 <argp_error@@Base+0x1184>
  40bca4:	b	40bbf0 <argp_failure@@Base+0xdb8>
  40bca8:	ldr	x1, [x19, #56]
  40bcac:	ldr	x0, [x19, #64]
  40bcb0:	cmp	x1, x0
  40bcb4:	b.cs	40bcd0 <argp_failure@@Base+0xe98>  // b.hs, b.nlast
  40bcb8:	ldr	x0, [x19, #56]
  40bcbc:	add	x1, x0, #0x1
  40bcc0:	str	x1, [x19, #56]
  40bcc4:	mov	w1, #0xa                   	// #10
  40bcc8:	strb	w1, [x0]
  40bccc:	b	40bcec <argp_failure@@Base+0xeb4>
  40bcd0:	mov	x1, #0x1                   	// #1
  40bcd4:	mov	x0, x19
  40bcd8:	bl	40d8a0 <argp_error@@Base+0x16cc>
  40bcdc:	cbnz	w0, 40bcb8 <argp_failure@@Base+0xe80>
  40bce0:	b	40bcec <argp_failure@@Base+0xeb4>
  40bce4:	mov	x0, x19
  40bce8:	bl	409988 <_obstack_memory_used@@Base+0x640>
  40bcec:	mov	x0, x20
  40bcf0:	bl	401b00 <strlen@plt>
  40bcf4:	mov	x24, x0
  40bcf8:	cbnz	x0, 40be1c <argp_failure@@Base+0xfe4>
  40bcfc:	cmp	x22, x20
  40bd00:	b.ne	40be60 <argp_failure@@Base+0x1028>  // b.any
  40bd04:	ldr	x0, [x19, #56]
  40bd08:	ldr	x1, [x19, #48]
  40bd0c:	sub	x0, x0, x1
  40bd10:	ldr	x1, [x19, #32]
  40bd14:	cmp	x0, x1
  40bd18:	b.hi	40be6c <argp_failure@@Base+0x1034>  // b.pmore
  40bd1c:	str	xzr, [x19, #8]
  40bd20:	ldr	x1, [x19, #56]
  40bd24:	ldr	x0, [x19, #64]
  40bd28:	cmp	x1, x0
  40bd2c:	b.cs	40be78 <argp_failure@@Base+0x1040>  // b.hs, b.nlast
  40bd30:	ldr	x0, [x19, #56]
  40bd34:	add	x1, x0, #0x1
  40bd38:	str	x1, [x19, #56]
  40bd3c:	mov	w1, #0xa                   	// #10
  40bd40:	strb	w1, [x0]
  40bd44:	str	x21, [x29, #184]
  40bd48:	ldrsw	x20, [x29, #136]
  40bd4c:	ldr	x0, [x19, #56]
  40bd50:	ldr	x1, [x19, #48]
  40bd54:	sub	x0, x0, x1
  40bd58:	ldr	x1, [x19, #32]
  40bd5c:	cmp	x0, x1
  40bd60:	b.hi	40be8c <argp_failure@@Base+0x1054>  // b.pmore
  40bd64:	str	x20, [x19, #8]
  40bd68:	ldr	x0, [x19, #56]
  40bd6c:	ldr	x1, [x19, #48]
  40bd70:	sub	x0, x0, x1
  40bd74:	ldr	x1, [x19, #32]
  40bd78:	cmp	x0, x1
  40bd7c:	b.hi	40be98 <argp_failure@@Base+0x1060>  // b.pmore
  40bd80:	ldrsw	x0, [x29, #128]
  40bd84:	str	x0, [x19, #24]
  40bd88:	add	x21, x21, #0x38
  40bd8c:	ldr	x0, [x29, #112]
  40bd90:	cmp	x0, x21
  40bd94:	b.eq	40bea4 <argp_failure@@Base+0x106c>  // b.none
  40bd98:	ldr	x20, [x21]
  40bd9c:	ldr	x25, [x21, #16]
  40bda0:	ldr	x0, [x19, #56]
  40bda4:	ldr	x1, [x19, #48]
  40bda8:	sub	x0, x0, x1
  40bdac:	ldr	x1, [x19, #32]
  40bdb0:	cmp	x0, x1
  40bdb4:	b.hi	40b7f0 <argp_failure@@Base+0x9b8>  // b.pmore
  40bdb8:	ldr	x0, [x19, #8]
  40bdbc:	str	x0, [x29, #136]
  40bdc0:	str	xzr, [x19, #8]
  40bdc4:	ldr	x0, [x19, #24]
  40bdc8:	str	x0, [x29, #128]
  40bdcc:	str	x21, [x29, #200]
  40bdd0:	str	x19, [x29, #208]
  40bdd4:	add	x0, x29, #0xb8
  40bdd8:	str	x0, [x29, #216]
  40bddc:	mov	w0, #0x1                   	// #1
  40bde0:	str	w0, [x29, #224]
  40bde4:	ldr	x0, [x29, #168]
  40bde8:	str	x0, [x29, #232]
  40bdec:	ldr	w0, [x20, #24]
  40bdf0:	and	w1, w0, #0x8
  40bdf4:	str	w1, [x29, #148]
  40bdf8:	tbnz	w0, #3, 40b824 <argp_failure@@Base+0x9ec>
  40bdfc:	ldr	w0, [x21, #8]
  40be00:	cbz	w0, 40b828 <argp_failure@@Base+0x9f0>
  40be04:	sub	w1, w0, #0x1
  40be08:	add	x1, x1, #0x1
  40be0c:	add	x1, x1, x1, lsl #1
  40be10:	add	x1, x20, x1, lsl #4
  40be14:	mov	x0, x20
  40be18:	b	40b808 <argp_failure@@Base+0x9d0>
  40be1c:	ldr	x0, [x19, #56]
  40be20:	add	x0, x0, x24
  40be24:	ldr	x1, [x19, #64]
  40be28:	cmp	x1, x0
  40be2c:	b.cs	40be40 <argp_failure@@Base+0x1008>  // b.hs, b.nlast
  40be30:	mov	x1, x24
  40be34:	mov	x0, x19
  40be38:	bl	40d8a0 <argp_error@@Base+0x16cc>
  40be3c:	cbz	w0, 40bcfc <argp_failure@@Base+0xec4>
  40be40:	mov	x2, x24
  40be44:	mov	x1, x20
  40be48:	ldr	x0, [x19, #56]
  40be4c:	bl	401aa0 <memcpy@plt>
  40be50:	ldr	x0, [x19, #56]
  40be54:	add	x24, x0, x24
  40be58:	str	x24, [x19, #56]
  40be5c:	b	40bcfc <argp_failure@@Base+0xec4>
  40be60:	mov	x0, x20
  40be64:	bl	401d30 <free@plt>
  40be68:	b	40bd04 <argp_failure@@Base+0xecc>
  40be6c:	mov	x0, x19
  40be70:	bl	40d358 <argp_error@@Base+0x1184>
  40be74:	b	40bd1c <argp_failure@@Base+0xee4>
  40be78:	mov	x1, #0x1                   	// #1
  40be7c:	mov	x0, x19
  40be80:	bl	40d8a0 <argp_error@@Base+0x16cc>
  40be84:	cbnz	w0, 40bd30 <argp_failure@@Base+0xef8>
  40be88:	b	40bd44 <argp_failure@@Base+0xf0c>
  40be8c:	mov	x0, x19
  40be90:	bl	40d358 <argp_error@@Base+0x1184>
  40be94:	b	40bd64 <argp_failure@@Base+0xf2c>
  40be98:	mov	x0, x19
  40be9c:	bl	40d358 <argp_error@@Base+0x1184>
  40bea0:	b	40bd80 <argp_failure@@Base+0xf48>
  40bea4:	ldr	w0, [x29, #196]
  40bea8:	cbz	w0, 40bef8 <argp_failure@@Base+0x10c0>
  40beac:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  40beb0:	ldr	w0, [x0, #1180]
  40beb4:	cbz	w0, 40bef8 <argp_failure@@Base+0x10c0>
  40beb8:	ldr	x0, [x29, #168]
  40bebc:	mov	x3, x0
  40bec0:	ldr	x2, [x0]
  40bec4:	mov	w1, #0x5                   	// #5
  40bec8:	movk	w1, #0x200, lsl #16
  40becc:	adrp	x0, 410000 <argp_error@@Base+0x3e2c>
  40bed0:	add	x0, x0, #0xe90
  40bed4:	bl	40962c <_obstack_memory_used@@Base+0x2e4>
  40bed8:	mov	x20, x0
  40bedc:	cbz	x0, 40bef8 <argp_failure@@Base+0x10c0>
  40bee0:	ldrb	w0, [x0]
  40bee4:	cbnz	w0, 40bf68 <argp_failure@@Base+0x1130>
  40bee8:	adrp	x0, 410000 <argp_error@@Base+0x3e2c>
  40beec:	add	x0, x0, #0xe90
  40bef0:	cmp	x20, x0
  40bef4:	b.ne	40c030 <argp_failure@@Base+0x11f8>  // b.any
  40bef8:	mov	w20, #0x1                   	// #1
  40befc:	tbnz	w23, #5, 40c03c <argp_failure@@Base+0x1204>
  40bf00:	tbz	w23, #6, 40bf2c <argp_failure@@Base+0x10f4>
  40bf04:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  40bf08:	ldr	x0, [x0, #1624]
  40bf0c:	cbz	x0, 40bf2c <argp_failure@@Base+0x10f4>
  40bf10:	cbnz	w20, 40c060 <argp_failure@@Base+0x1228>
  40bf14:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  40bf18:	ldr	x2, [x0, #1624]
  40bf1c:	adrp	x1, 410000 <argp_error@@Base+0x3e2c>
  40bf20:	add	x1, x1, #0xf08
  40bf24:	mov	x0, x19
  40bf28:	bl	40d998 <argp_error@@Base+0x17c4>
  40bf2c:	ldr	x0, [x29, #120]
  40bf30:	bl	401bf0 <funlockfile@plt>
  40bf34:	cbz	x26, 40bf40 <argp_failure@@Base+0x1108>
  40bf38:	mov	x0, x26
  40bf3c:	bl	4094b4 <_obstack_memory_used@@Base+0x16c>
  40bf40:	mov	x0, x19
  40bf44:	bl	40d850 <argp_error@@Base+0x167c>
  40bf48:	mov	sp, x29
  40bf4c:	ldp	x19, x20, [sp, #16]
  40bf50:	ldp	x21, x22, [sp, #32]
  40bf54:	ldp	x23, x24, [sp, #48]
  40bf58:	ldp	x25, x26, [sp, #64]
  40bf5c:	ldp	x27, x28, [sp, #80]
  40bf60:	ldp	x29, x30, [sp], #240
  40bf64:	ret
  40bf68:	ldr	x1, [x19, #56]
  40bf6c:	ldr	x0, [x19, #64]
  40bf70:	cmp	x1, x0
  40bf74:	b.cs	40bfc4 <argp_failure@@Base+0x118c>  // b.hs, b.nlast
  40bf78:	ldr	x0, [x19, #56]
  40bf7c:	add	x1, x0, #0x1
  40bf80:	str	x1, [x19, #56]
  40bf84:	mov	w1, #0xa                   	// #10
  40bf88:	strb	w1, [x0]
  40bf8c:	mov	x0, x20
  40bf90:	bl	401b00 <strlen@plt>
  40bf94:	mov	x21, x0
  40bf98:	cbnz	x0, 40bfd8 <argp_failure@@Base+0x11a0>
  40bf9c:	ldr	x1, [x19, #56]
  40bfa0:	ldr	x0, [x19, #64]
  40bfa4:	cmp	x1, x0
  40bfa8:	b.cs	40c01c <argp_failure@@Base+0x11e4>  // b.hs, b.nlast
  40bfac:	ldr	x0, [x19, #56]
  40bfb0:	add	x1, x0, #0x1
  40bfb4:	str	x1, [x19, #56]
  40bfb8:	mov	w1, #0xa                   	// #10
  40bfbc:	strb	w1, [x0]
  40bfc0:	b	40bee8 <argp_failure@@Base+0x10b0>
  40bfc4:	mov	x1, #0x1                   	// #1
  40bfc8:	mov	x0, x19
  40bfcc:	bl	40d8a0 <argp_error@@Base+0x16cc>
  40bfd0:	cbnz	w0, 40bf78 <argp_failure@@Base+0x1140>
  40bfd4:	b	40bf8c <argp_failure@@Base+0x1154>
  40bfd8:	ldr	x0, [x19, #56]
  40bfdc:	add	x0, x0, x21
  40bfe0:	ldr	x1, [x19, #64]
  40bfe4:	cmp	x1, x0
  40bfe8:	b.cs	40bffc <argp_failure@@Base+0x11c4>  // b.hs, b.nlast
  40bfec:	mov	x1, x21
  40bff0:	mov	x0, x19
  40bff4:	bl	40d8a0 <argp_error@@Base+0x16cc>
  40bff8:	cbz	w0, 40bf9c <argp_failure@@Base+0x1164>
  40bffc:	mov	x2, x21
  40c000:	mov	x1, x20
  40c004:	ldr	x0, [x19, #56]
  40c008:	bl	401aa0 <memcpy@plt>
  40c00c:	ldr	x0, [x19, #56]
  40c010:	add	x21, x0, x21
  40c014:	str	x21, [x19, #56]
  40c018:	b	40bf9c <argp_failure@@Base+0x1164>
  40c01c:	mov	x1, #0x1                   	// #1
  40c020:	mov	x0, x19
  40c024:	bl	40d8a0 <argp_error@@Base+0x16cc>
  40c028:	cbnz	w0, 40bfac <argp_failure@@Base+0x1174>
  40c02c:	b	40bee8 <argp_failure@@Base+0x10b0>
  40c030:	mov	x0, x20
  40c034:	bl	401d30 <free@plt>
  40c038:	b	40bef8 <argp_failure@@Base+0x10c0>
  40c03c:	mov	x5, x19
  40c040:	mov	w4, #0x0                   	// #0
  40c044:	mov	w3, w20
  40c048:	mov	w2, #0x1                   	// #1
  40c04c:	ldr	x1, [x29, #168]
  40c050:	ldr	x0, [x29, #160]
  40c054:	bl	40a14c <_obstack_memory_used@@Base+0xe04>
  40c058:	orr	w20, w20, w0
  40c05c:	b	40bf00 <argp_failure@@Base+0x10c8>
  40c060:	ldr	x1, [x19, #56]
  40c064:	ldr	x0, [x19, #64]
  40c068:	cmp	x1, x0
  40c06c:	b.cs	40c088 <argp_failure@@Base+0x1250>  // b.hs, b.nlast
  40c070:	ldr	x0, [x19, #56]
  40c074:	add	x1, x0, #0x1
  40c078:	str	x1, [x19, #56]
  40c07c:	mov	w1, #0xa                   	// #10
  40c080:	strb	w1, [x0]
  40c084:	b	40bf14 <argp_failure@@Base+0x10dc>
  40c088:	mov	x1, #0x1                   	// #1
  40c08c:	mov	x0, x19
  40c090:	bl	40d8a0 <argp_error@@Base+0x16cc>
  40c094:	cbnz	w0, 40c070 <argp_failure@@Base+0x1238>
  40c098:	b	40bf14 <argp_failure@@Base+0x10dc>
  40c09c:	ldrb	w0, [x25]
  40c0a0:	cmp	w0, w24
  40c0a4:	b.eq	40b888 <argp_failure@@Base+0xa50>  // b.none
  40c0a8:	add	x22, x22, #0x30
  40c0ac:	ldr	x0, [x29, #152]
  40c0b0:	cmp	x22, x0
  40c0b4:	b.eq	40b968 <argp_failure@@Base+0xb30>  // b.none
  40c0b8:	ldr	w28, [x22, #24]
  40c0bc:	tbnz	w28, #3, 40c0a8 <argp_failure@@Base+0x1270>
  40c0c0:	ldr	w24, [x22, #8]
  40c0c4:	sub	w0, w24, #0x1
  40c0c8:	cmp	w0, #0xfe
  40c0cc:	b.hi	40c0a8 <argp_failure@@Base+0x1270>  // b.pmore
  40c0d0:	bl	401d00 <__ctype_b_loc@plt>
  40c0d4:	ldr	x0, [x0]
  40c0d8:	ldrh	w0, [x0, w24, sxtw #1]
  40c0dc:	tbnz	w0, #14, 40c09c <argp_failure@@Base+0x1264>
  40c0e0:	b	40c0a8 <argp_failure@@Base+0x1270>
  40c0e4:	ldrb	w1, [x20]
  40c0e8:	mov	x19, x20
  40c0ec:	mov	x24, #0x0                   	// #0
  40c0f0:	b	40b278 <argp_failure@@Base+0x440>

000000000040c0f4 <argp_help@@Base>:
  40c0f4:	stp	x29, x30, [sp, #-112]!
  40c0f8:	mov	x29, sp
  40c0fc:	stp	xzr, xzr, [sp, #24]
  40c100:	stp	xzr, xzr, [sp, #40]
  40c104:	stp	xzr, xzr, [sp, #56]
  40c108:	stp	xzr, xzr, [sp, #72]
  40c10c:	stp	xzr, xzr, [sp, #88]
  40c110:	str	xzr, [sp, #104]
  40c114:	str	x0, [sp, #16]
  40c118:	mov	x4, x3
  40c11c:	mov	w3, w2
  40c120:	mov	x2, x1
  40c124:	add	x1, sp, #0x10
  40c128:	bl	40b07c <argp_failure@@Base+0x244>
  40c12c:	ldp	x29, x30, [sp], #112
  40c130:	ret

000000000040c134 <argp_state_help@@Base>:
  40c134:	stp	x29, x30, [sp, #-32]!
  40c138:	mov	x29, sp
  40c13c:	stp	x19, x20, [sp, #16]
  40c140:	mov	w20, w2
  40c144:	cbz	x0, 40c160 <argp_state_help@@Base+0x2c>
  40c148:	mov	x19, x0
  40c14c:	ldr	w0, [x0, #28]
  40c150:	tbz	w0, #1, 40c190 <argp_state_help@@Base+0x5c>
  40c154:	ldp	x19, x20, [sp, #16]
  40c158:	ldp	x29, x30, [sp], #32
  40c15c:	ret
  40c160:	cbz	x1, 40c154 <argp_state_help@@Base+0x20>
  40c164:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  40c168:	ldr	x4, [x0, #1264]
  40c16c:	mov	w3, w2
  40c170:	mov	x2, x1
  40c174:	mov	x1, #0x0                   	// #0
  40c178:	mov	x0, #0x0                   	// #0
  40c17c:	bl	40b07c <argp_failure@@Base+0x244>
  40c180:	b	40c1c4 <argp_state_help@@Base+0x90>
  40c184:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  40c188:	ldr	w0, [x0, #1232]
  40c18c:	bl	401b20 <exit@plt>
  40c190:	cbz	x1, 40c154 <argp_state_help@@Base+0x20>
  40c194:	ldr	w2, [x19, #28]
  40c198:	orr	w0, w20, #0x80
  40c19c:	tst	x2, #0x40
  40c1a0:	csel	w20, w0, w20, ne  // ne = any
  40c1a4:	ldr	x4, [x19, #64]
  40c1a8:	mov	w3, w20
  40c1ac:	mov	x2, x1
  40c1b0:	mov	x1, x19
  40c1b4:	ldr	x0, [x19]
  40c1b8:	bl	40b07c <argp_failure@@Base+0x244>
  40c1bc:	ldr	w0, [x19, #28]
  40c1c0:	tbnz	w0, #5, 40c154 <argp_state_help@@Base+0x20>
  40c1c4:	tbnz	w20, #8, 40c184 <argp_state_help@@Base+0x50>
  40c1c8:	tbz	w20, #9, 40c154 <argp_state_help@@Base+0x20>
  40c1cc:	mov	w0, #0x0                   	// #0
  40c1d0:	bl	401b20 <exit@plt>

000000000040c1d4 <argp_error@@Base>:
  40c1d4:	stp	x29, x30, [sp, #-288]!
  40c1d8:	mov	x29, sp
  40c1dc:	stp	x19, x20, [sp, #16]
  40c1e0:	str	x21, [sp, #32]
  40c1e4:	mov	x20, x0
  40c1e8:	mov	x21, x1
  40c1ec:	str	x2, [sp, #240]
  40c1f0:	str	x3, [sp, #248]
  40c1f4:	str	x4, [sp, #256]
  40c1f8:	str	x5, [sp, #264]
  40c1fc:	str	x6, [sp, #272]
  40c200:	str	x7, [sp, #280]
  40c204:	str	q0, [sp, #112]
  40c208:	str	q1, [sp, #128]
  40c20c:	str	q2, [sp, #144]
  40c210:	str	q3, [sp, #160]
  40c214:	str	q4, [sp, #176]
  40c218:	str	q5, [sp, #192]
  40c21c:	str	q6, [sp, #208]
  40c220:	str	q7, [sp, #224]
  40c224:	cbz	x0, 40c318 <argp_error@@Base+0x144>
  40c228:	ldr	w0, [x0, #28]
  40c22c:	tbnz	w0, #1, 40c308 <argp_error@@Base+0x134>
  40c230:	ldr	x19, [x20, #72]
  40c234:	cbz	x19, 40c308 <argp_error@@Base+0x134>
  40c238:	mov	x0, x19
  40c23c:	bl	401b40 <flockfile@plt>
  40c240:	add	x0, sp, #0x120
  40c244:	str	x0, [sp, #80]
  40c248:	str	x0, [sp, #88]
  40c24c:	add	x0, sp, #0xf0
  40c250:	str	x0, [sp, #96]
  40c254:	mov	w0, #0xffffffd0            	// #-48
  40c258:	str	w0, [sp, #104]
  40c25c:	mov	w0, #0xffffff80            	// #-128
  40c260:	str	w0, [sp, #108]
  40c264:	ldr	x0, [x20, #64]
  40c268:	mov	x1, x19
  40c26c:	bl	401e50 <fputs_unlocked@plt>
  40c270:	ldr	x0, [x19, #40]
  40c274:	ldr	x1, [x19, #48]
  40c278:	cmp	x0, x1
  40c27c:	b.cs	40c35c <argp_error@@Base+0x188>  // b.hs, b.nlast
  40c280:	add	x1, x0, #0x1
  40c284:	str	x1, [x19, #40]
  40c288:	mov	w1, #0x3a                  	// #58
  40c28c:	strb	w1, [x0]
  40c290:	ldr	x0, [x19, #40]
  40c294:	ldr	x1, [x19, #48]
  40c298:	cmp	x0, x1
  40c29c:	b.cs	40c36c <argp_error@@Base+0x198>  // b.hs, b.nlast
  40c2a0:	add	x1, x0, #0x1
  40c2a4:	str	x1, [x19, #40]
  40c2a8:	mov	w1, #0x20                  	// #32
  40c2ac:	strb	w1, [x0]
  40c2b0:	ldp	x0, x1, [sp, #80]
  40c2b4:	stp	x0, x1, [sp, #48]
  40c2b8:	ldp	x0, x1, [sp, #96]
  40c2bc:	stp	x0, x1, [sp, #64]
  40c2c0:	add	x2, sp, #0x30
  40c2c4:	mov	x1, x21
  40c2c8:	mov	x0, x19
  40c2cc:	bl	401e70 <vfprintf@plt>
  40c2d0:	ldr	x0, [x19, #40]
  40c2d4:	ldr	x1, [x19, #48]
  40c2d8:	cmp	x0, x1
  40c2dc:	b.cs	40c37c <argp_error@@Base+0x1a8>  // b.hs, b.nlast
  40c2e0:	add	x1, x0, #0x1
  40c2e4:	str	x1, [x19, #40]
  40c2e8:	mov	w1, #0xa                   	// #10
  40c2ec:	strb	w1, [x0]
  40c2f0:	mov	w2, #0x104                 	// #260
  40c2f4:	mov	x1, x19
  40c2f8:	mov	x0, x20
  40c2fc:	bl	40c134 <argp_state_help@@Base>
  40c300:	mov	x0, x19
  40c304:	bl	401bf0 <funlockfile@plt>
  40c308:	ldp	x19, x20, [sp, #16]
  40c30c:	ldr	x21, [sp, #32]
  40c310:	ldp	x29, x30, [sp], #288
  40c314:	ret
  40c318:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  40c31c:	ldr	x19, [x0, #1248]
  40c320:	cbz	x19, 40c308 <argp_error@@Base+0x134>
  40c324:	mov	x0, x19
  40c328:	bl	401b40 <flockfile@plt>
  40c32c:	add	x0, sp, #0x120
  40c330:	str	x0, [sp, #80]
  40c334:	str	x0, [sp, #88]
  40c338:	add	x0, sp, #0xf0
  40c33c:	str	x0, [sp, #96]
  40c340:	mov	w0, #0xffffffd0            	// #-48
  40c344:	str	w0, [sp, #104]
  40c348:	mov	w0, #0xffffff80            	// #-128
  40c34c:	str	w0, [sp, #108]
  40c350:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  40c354:	ldr	x0, [x0, #1264]
  40c358:	b	40c268 <argp_error@@Base+0x94>
  40c35c:	mov	w1, #0x3a                  	// #58
  40c360:	mov	x0, x19
  40c364:	bl	401ce0 <__overflow@plt>
  40c368:	b	40c290 <argp_error@@Base+0xbc>
  40c36c:	mov	w1, #0x20                  	// #32
  40c370:	mov	x0, x19
  40c374:	bl	401ce0 <__overflow@plt>
  40c378:	b	40c2b0 <argp_error@@Base+0xdc>
  40c37c:	mov	w1, #0xa                   	// #10
  40c380:	mov	x0, x19
  40c384:	bl	401ce0 <__overflow@plt>
  40c388:	b	40c2f0 <argp_error@@Base+0x11c>
  40c38c:	ldr	w8, [x1, #48]
  40c390:	ldr	w9, [x1, #52]
  40c394:	ldr	w10, [x1]
  40c398:	cmp	w9, w10
  40c39c:	ccmp	w8, w9, #0x0, lt  // lt = tstop
  40c3a0:	b.ge	40c450 <argp_error@@Base+0x27c>  // b.tcont
  40c3a4:	add	x13, x0, #0x8
  40c3a8:	sxtw	x12, w9
  40c3ac:	b	40c3fc <argp_error@@Base+0x228>
  40c3b0:	cmp	w7, #0x0
  40c3b4:	b.le	40c3ec <argp_error@@Base+0x218>
  40c3b8:	add	x4, x0, w8, sxtw #3
  40c3bc:	sxtw	x3, w7
  40c3c0:	neg	x3, x3, lsl #3
  40c3c4:	add	x3, x3, w10, sxtw #3
  40c3c8:	add	x3, x0, x3
  40c3cc:	mov	x2, #0x0                   	// #0
  40c3d0:	ldr	x5, [x4, x2, lsl #3]
  40c3d4:	ldr	x6, [x3, x2, lsl #3]
  40c3d8:	str	x6, [x4, x2, lsl #3]
  40c3dc:	str	x5, [x3, x2, lsl #3]
  40c3e0:	add	x2, x2, #0x1
  40c3e4:	cmp	w7, w2
  40c3e8:	b.gt	40c3d0 <argp_error@@Base+0x1fc>
  40c3ec:	sub	w10, w10, w7
  40c3f0:	cmp	w10, w9
  40c3f4:	ccmp	w9, w8, #0x4, gt
  40c3f8:	b.le	40c450 <argp_error@@Base+0x27c>
  40c3fc:	sub	w11, w10, w9
  40c400:	sub	w7, w9, w8
  40c404:	cmp	w11, w7
  40c408:	b.gt	40c3b0 <argp_error@@Base+0x1dc>
  40c40c:	cmp	w11, #0x0
  40c410:	b.le	40c448 <argp_error@@Base+0x274>
  40c414:	sxtw	x3, w8
  40c418:	add	x2, x0, w8, sxtw #3
  40c41c:	sub	w6, w11, #0x1
  40c420:	add	x6, x6, x3
  40c424:	add	x6, x13, x6, lsl #3
  40c428:	sub	x3, x12, x3
  40c42c:	ldr	x4, [x2]
  40c430:	ldr	x5, [x2, x3, lsl #3]
  40c434:	str	x5, [x2]
  40c438:	str	x4, [x2, x3, lsl #3]
  40c43c:	add	x2, x2, #0x8
  40c440:	cmp	x2, x6
  40c444:	b.ne	40c42c <argp_error@@Base+0x258>  // b.any
  40c448:	add	w8, w8, w11
  40c44c:	b	40c3f0 <argp_error@@Base+0x21c>
  40c450:	ldr	w3, [x1]
  40c454:	ldr	w0, [x1, #52]
  40c458:	sub	w2, w3, w0
  40c45c:	ldr	w0, [x1, #48]
  40c460:	add	w0, w0, w2
  40c464:	str	w0, [x1, #48]
  40c468:	str	w3, [x1, #52]
  40c46c:	ret
  40c470:	stp	x29, x30, [sp, #-176]!
  40c474:	mov	x29, sp
  40c478:	stp	x27, x28, [sp, #80]
  40c47c:	str	x3, [sp, #104]
  40c480:	str	x4, [sp, #136]
  40c484:	str	w5, [sp, #144]
  40c488:	ldr	w28, [x6, #4]
  40c48c:	cmp	w0, #0x0
  40c490:	b.le	40d0d8 <argp_error@@Base+0xf04>
  40c494:	stp	x19, x20, [sp, #16]
  40c498:	stp	x21, x22, [sp, #32]
  40c49c:	stp	x23, x24, [sp, #48]
  40c4a0:	mov	w20, w0
  40c4a4:	mov	x22, x1
  40c4a8:	mov	x24, x2
  40c4ac:	mov	x19, x6
  40c4b0:	str	xzr, [x6, #16]
  40c4b4:	ldr	w0, [x6]
  40c4b8:	cbz	w0, 40c4dc <argp_error@@Base+0x308>
  40c4bc:	ldr	w0, [x6, #24]
  40c4c0:	cbz	w0, 40c4e4 <argp_error@@Base+0x310>
  40c4c4:	ldrb	w0, [x2]
  40c4c8:	sub	w0, w0, #0x2b
  40c4cc:	and	w0, w0, #0xfffffffd
  40c4d0:	tst	w0, #0xff
  40c4d4:	cinc	x24, x2, eq  // eq = none
  40c4d8:	b	40c524 <argp_error@@Base+0x350>
  40c4dc:	mov	w0, #0x1                   	// #1
  40c4e0:	str	w0, [x6]
  40c4e4:	ldr	w0, [x19]
  40c4e8:	str	w0, [x19, #52]
  40c4ec:	str	w0, [x19, #48]
  40c4f0:	str	xzr, [x19, #32]
  40c4f4:	mov	w0, #0x1                   	// #1
  40c4f8:	cbz	w7, 40c5f4 <argp_error@@Base+0x420>
  40c4fc:	str	w0, [x19, #44]
  40c500:	ldrb	w1, [x24]
  40c504:	cmp	w1, #0x2d
  40c508:	b.eq	40c60c <argp_error@@Base+0x438>  // b.none
  40c50c:	cmp	w1, #0x2b
  40c510:	b.eq	40c61c <argp_error@@Base+0x448>  // b.none
  40c514:	eor	w0, w0, #0x1
  40c518:	str	w0, [x19, #40]
  40c51c:	mov	w0, #0x1                   	// #1
  40c520:	str	w0, [x19, #24]
  40c524:	ldrb	w0, [x24]
  40c528:	cmp	w0, #0x3a
  40c52c:	csel	w28, w28, wzr, ne  // ne = any
  40c530:	ldr	x0, [x19, #32]
  40c534:	cbz	x0, 40c540 <argp_error@@Base+0x36c>
  40c538:	ldrb	w0, [x0]
  40c53c:	cbnz	w0, 40c6e8 <argp_error@@Base+0x514>
  40c540:	ldr	w0, [x19]
  40c544:	ldr	w1, [x19, #52]
  40c548:	cmp	w1, w0
  40c54c:	b.le	40c554 <argp_error@@Base+0x380>
  40c550:	str	w0, [x19, #52]
  40c554:	ldr	w1, [x19, #48]
  40c558:	cmp	w0, w1
  40c55c:	b.ge	40c564 <argp_error@@Base+0x390>  // b.tcont
  40c560:	str	w0, [x19, #48]
  40c564:	ldr	w1, [x19, #40]
  40c568:	cmp	w1, #0x1
  40c56c:	b.eq	40c628 <argp_error@@Base+0x454>  // b.none
  40c570:	ldr	w21, [x19]
  40c574:	cmp	w21, w20
  40c578:	b.eq	40c5cc <argp_error@@Base+0x3f8>  // b.none
  40c57c:	stp	x25, x26, [sp, #64]
  40c580:	sxtw	x25, w21
  40c584:	ldr	x23, [x22, x25, lsl #3]
  40c588:	adrp	x1, 410000 <argp_error@@Base+0x3e2c>
  40c58c:	add	x1, x1, #0x550
  40c590:	mov	x0, x23
  40c594:	bl	401cf0 <strcmp@plt>
  40c598:	cbnz	w0, 40d1f4 <argp_error@@Base+0x1020>
  40c59c:	add	w21, w21, #0x1
  40c5a0:	str	w21, [x19]
  40c5a4:	ldr	w1, [x19, #48]
  40c5a8:	ldr	w0, [x19, #52]
  40c5ac:	cmp	w21, w0
  40c5b0:	ccmp	w1, w0, #0x4, ne  // ne = any
  40c5b4:	b.ne	40c6a8 <argp_error@@Base+0x4d4>  // b.any
  40c5b8:	cmp	w1, w0
  40c5bc:	b.eq	40c6b8 <argp_error@@Base+0x4e4>  // b.none
  40c5c0:	str	w20, [x19, #52]
  40c5c4:	str	w20, [x19]
  40c5c8:	ldp	x25, x26, [sp, #64]
  40c5cc:	ldr	w0, [x19, #48]
  40c5d0:	ldr	w1, [x19, #52]
  40c5d4:	cmp	w0, w1
  40c5d8:	b.eq	40d1e0 <argp_error@@Base+0x100c>  // b.none
  40c5dc:	str	w0, [x19]
  40c5e0:	mov	w0, #0xffffffff            	// #-1
  40c5e4:	ldp	x19, x20, [sp, #16]
  40c5e8:	ldp	x21, x22, [sp, #32]
  40c5ec:	ldp	x23, x24, [sp, #48]
  40c5f0:	b	40d22c <argp_error@@Base+0x1058>
  40c5f4:	adrp	x0, 411000 <argp_error@@Base+0x4e2c>
  40c5f8:	add	x0, x0, #0xa0
  40c5fc:	bl	401eb0 <getenv@plt>
  40c600:	cmp	x0, #0x0
  40c604:	cset	w0, ne  // ne = any
  40c608:	b	40c4fc <argp_error@@Base+0x328>
  40c60c:	mov	w0, #0x2                   	// #2
  40c610:	str	w0, [x19, #40]
  40c614:	add	x24, x24, #0x1
  40c618:	b	40c51c <argp_error@@Base+0x348>
  40c61c:	str	wzr, [x19, #40]
  40c620:	add	x24, x24, #0x1
  40c624:	b	40c51c <argp_error@@Base+0x348>
  40c628:	ldr	w1, [x19, #52]
  40c62c:	ldr	w2, [x19, #48]
  40c630:	cmp	w2, w1
  40c634:	ccmp	w0, w1, #0x4, ne  // ne = any
  40c638:	b.ne	40c65c <argp_error@@Base+0x488>  // b.any
  40c63c:	cmp	w0, w1
  40c640:	b.eq	40c648 <argp_error@@Base+0x474>  // b.none
  40c644:	str	w0, [x19, #48]
  40c648:	ldr	w1, [x19]
  40c64c:	cmp	w20, w1
  40c650:	b.le	40c6a0 <argp_error@@Base+0x4cc>
  40c654:	sxtw	x0, w1
  40c658:	b	40c680 <argp_error@@Base+0x4ac>
  40c65c:	mov	x1, x19
  40c660:	mov	x0, x22
  40c664:	bl	40c38c <argp_error@@Base+0x1b8>
  40c668:	b	40c648 <argp_error@@Base+0x474>
  40c66c:	add	w1, w4, #0x1
  40c670:	str	w1, [x19]
  40c674:	add	x0, x0, #0x1
  40c678:	cmp	w20, w0
  40c67c:	b.le	40c6a0 <argp_error@@Base+0x4cc>
  40c680:	mov	w4, w0
  40c684:	mov	w1, w0
  40c688:	ldr	x2, [x22, x0, lsl #3]
  40c68c:	ldrb	w3, [x2]
  40c690:	cmp	w3, #0x2d
  40c694:	b.ne	40c66c <argp_error@@Base+0x498>  // b.any
  40c698:	ldrb	w2, [x2, #1]
  40c69c:	cbz	w2, 40c66c <argp_error@@Base+0x498>
  40c6a0:	str	w1, [x19, #52]
  40c6a4:	b	40c570 <argp_error@@Base+0x39c>
  40c6a8:	mov	x1, x19
  40c6ac:	mov	x0, x22
  40c6b0:	bl	40c38c <argp_error@@Base+0x1b8>
  40c6b4:	b	40c5c0 <argp_error@@Base+0x3ec>
  40c6b8:	str	w21, [x19, #48]
  40c6bc:	b	40c5c0 <argp_error@@Base+0x3ec>
  40c6c0:	ldrb	w0, [x23, #1]
  40c6c4:	cbz	w0, 40d200 <argp_error@@Base+0x102c>
  40c6c8:	cmp	w0, #0x2d
  40c6cc:	ldr	x0, [sp, #104]
  40c6d0:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  40c6d4:	cset	x0, ne  // ne = any
  40c6d8:	add	x0, x0, #0x1
  40c6dc:	add	x23, x23, x0
  40c6e0:	str	x23, [x19, #32]
  40c6e4:	b	40c6ec <argp_error@@Base+0x518>
  40c6e8:	stp	x25, x26, [sp, #64]
  40c6ec:	ldr	x0, [sp, #104]
  40c6f0:	cbz	x0, 40c724 <argp_error@@Base+0x550>
  40c6f4:	ldrsw	x0, [x19]
  40c6f8:	ldr	x0, [x22, x0, lsl #3]
  40c6fc:	ldrb	w1, [x0, #1]
  40c700:	cmp	w1, #0x2d
  40c704:	b.eq	40c79c <argp_error@@Base+0x5c8>  // b.none
  40c708:	ldr	w2, [sp, #144]
  40c70c:	cbz	w2, 40c724 <argp_error@@Base+0x550>
  40c710:	ldrb	w0, [x0, #2]
  40c714:	cbnz	w0, 40c79c <argp_error@@Base+0x5c8>
  40c718:	mov	x0, x24
  40c71c:	bl	401d70 <strchr@plt>
  40c720:	cbz	x0, 40c79c <argp_error@@Base+0x5c8>
  40c724:	ldr	x23, [x19, #32]
  40c728:	add	x25, x23, #0x1
  40c72c:	str	x25, [x19, #32]
  40c730:	ldrb	w21, [x23]
  40c734:	mov	w26, w21
  40c738:	mov	w1, w21
  40c73c:	mov	x0, x24
  40c740:	bl	401d70 <strchr@plt>
  40c744:	ldrb	w1, [x23, #1]
  40c748:	cbnz	w1, 40c758 <argp_error@@Base+0x584>
  40c74c:	ldr	w1, [x19]
  40c750:	add	w1, w1, #0x1
  40c754:	str	w1, [x19]
  40c758:	sub	w1, w21, #0x3a
  40c75c:	and	w1, w1, #0xff
  40c760:	cmp	x0, #0x0
  40c764:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  40c768:	b.ls	40cc40 <argp_error@@Base+0xa6c>  // b.plast
  40c76c:	ldrb	w1, [x0]
  40c770:	cmp	w1, #0x57
  40c774:	b.eq	40cc80 <argp_error@@Base+0xaac>  // b.none
  40c778:	ldrb	w1, [x0, #1]
  40c77c:	cmp	w1, #0x3a
  40c780:	b.eq	40d028 <argp_error@@Base+0xe54>  // b.none
  40c784:	mov	w0, w21
  40c788:	ldp	x19, x20, [sp, #16]
  40c78c:	ldp	x21, x22, [sp, #32]
  40c790:	ldp	x23, x24, [sp, #48]
  40c794:	ldp	x25, x26, [sp, #64]
  40c798:	b	40d22c <argp_error@@Base+0x1058>
  40c79c:	ldr	x1, [x19, #32]
  40c7a0:	ldrb	w0, [x1]
  40c7a4:	cmp	w0, #0x3d
  40c7a8:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  40c7ac:	b.eq	40c804 <argp_error@@Base+0x630>  // b.none
  40c7b0:	mov	x27, x1
  40c7b4:	ldrb	w0, [x27, #1]!
  40c7b8:	cmp	w0, #0x3d
  40c7bc:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  40c7c0:	b.ne	40c7b4 <argp_error@@Base+0x5e0>  // b.any
  40c7c4:	sub	x1, x27, x1
  40c7c8:	str	w1, [sp, #128]
  40c7cc:	ldr	x25, [sp, #104]
  40c7d0:	ldr	x21, [x25]
  40c7d4:	cbz	x21, 40d134 <argp_error@@Base+0xf60>
  40c7d8:	mov	w26, #0x0                   	// #0
  40c7dc:	mov	w0, #0xffffffff            	// #-1
  40c7e0:	str	w0, [sp, #152]
  40c7e4:	str	wzr, [sp, #148]
  40c7e8:	mov	x23, #0x0                   	// #0
  40c7ec:	str	xzr, [sp, #120]
  40c7f0:	and	x0, x1, #0xffffffff
  40c7f4:	str	x0, [sp, #112]
  40c7f8:	ldr	w0, [sp, #144]
  40c7fc:	str	w0, [sp, #156]
  40c800:	b	40c830 <argp_error@@Base+0x65c>
  40c804:	mov	x27, x1
  40c808:	b	40c7c4 <argp_error@@Base+0x5f0>
  40c80c:	mov	x0, #0x10                  	// #16
  40c810:	bl	401be0 <malloc@plt>
  40c814:	cbz	x0, 40c8b4 <argp_error@@Base+0x6e0>
  40c818:	str	x25, [x0]
  40c81c:	str	x23, [x0, #8]
  40c820:	mov	x23, x0
  40c824:	add	w26, w26, #0x1
  40c828:	ldr	x21, [x25, #32]!
  40c82c:	cbz	x21, 40c8f4 <argp_error@@Base+0x720>
  40c830:	ldr	x2, [sp, #112]
  40c834:	ldr	x1, [x19, #32]
  40c838:	mov	x0, x21
  40c83c:	bl	401c00 <strncmp@plt>
  40c840:	cbnz	w0, 40c824 <argp_error@@Base+0x650>
  40c844:	mov	x0, x21
  40c848:	bl	401b00 <strlen@plt>
  40c84c:	ldr	w1, [sp, #128]
  40c850:	cmp	w1, w0
  40c854:	b.eq	40d148 <argp_error@@Base+0xf74>  // b.none
  40c858:	ldr	x0, [sp, #120]
  40c85c:	cbz	x0, 40c8e8 <argp_error@@Base+0x714>
  40c860:	ldr	w1, [sp, #148]
  40c864:	cbnz	w1, 40c824 <argp_error@@Base+0x650>
  40c868:	ldr	w1, [sp, #144]
  40c86c:	cbnz	w1, 40c80c <argp_error@@Base+0x638>
  40c870:	ldr	w1, [x0, #8]
  40c874:	ldr	w0, [x25, #8]
  40c878:	cmp	w1, w0
  40c87c:	b.ne	40c80c <argp_error@@Base+0x638>  // b.any
  40c880:	ldr	x0, [sp, #120]
  40c884:	ldr	x1, [x0, #16]
  40c888:	ldr	x0, [x25, #16]
  40c88c:	cmp	x1, x0
  40c890:	b.ne	40c80c <argp_error@@Base+0x638>  // b.any
  40c894:	ldr	x0, [sp, #120]
  40c898:	ldr	w1, [x0, #24]
  40c89c:	ldr	w0, [x25, #24]
  40c8a0:	cmp	w1, w0
  40c8a4:	b.ne	40c80c <argp_error@@Base+0x638>  // b.any
  40c8a8:	ldr	w0, [sp, #156]
  40c8ac:	str	w0, [sp, #148]
  40c8b0:	b	40c824 <argp_error@@Base+0x650>
  40c8b4:	cbnz	x23, 40c8c8 <argp_error@@Base+0x6f4>
  40c8b8:	mov	w0, #0x1                   	// #1
  40c8bc:	str	w0, [sp, #148]
  40c8c0:	b	40c824 <argp_error@@Base+0x650>
  40c8c4:	mov	x23, x21
  40c8c8:	ldr	x21, [x23, #8]
  40c8cc:	mov	x0, x23
  40c8d0:	bl	401d30 <free@plt>
  40c8d4:	cbnz	x21, 40c8c4 <argp_error@@Base+0x6f0>
  40c8d8:	mov	x23, x21
  40c8dc:	mov	w0, #0x1                   	// #1
  40c8e0:	str	w0, [sp, #148]
  40c8e4:	b	40c824 <argp_error@@Base+0x650>
  40c8e8:	str	w26, [sp, #152]
  40c8ec:	str	x25, [sp, #120]
  40c8f0:	b	40c824 <argp_error@@Base+0x650>
  40c8f4:	ldr	w0, [sp, #148]
  40c8f8:	cmp	w0, #0x0
  40c8fc:	cset	w1, ne  // ne = any
  40c900:	cmp	x23, #0x0
  40c904:	cset	w0, ne  // ne = any
  40c908:	cmp	w1, #0x0
  40c90c:	ccmp	w0, #0x0, #0x0, eq  // eq = none
  40c910:	b.eq	40d164 <argp_error@@Base+0xf90>  // b.none
  40c914:	cmp	w28, #0x0
  40c918:	cset	w2, ne  // ne = any
  40c91c:	cmp	w0, #0x0
  40c920:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  40c924:	b.ne	40c984 <argp_error@@Base+0x7b0>  // b.any
  40c928:	cmp	w1, #0x0
  40c92c:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  40c930:	b.ne	40ca28 <argp_error@@Base+0x854>  // b.any
  40c934:	ldr	x20, [x19, #32]
  40c938:	mov	x0, x20
  40c93c:	bl	401b00 <strlen@plt>
  40c940:	add	x20, x20, x0
  40c944:	str	x20, [x19, #32]
  40c948:	ldr	w0, [x19]
  40c94c:	add	w0, w0, #0x1
  40c950:	str	w0, [x19]
  40c954:	str	wzr, [x19, #8]
  40c958:	cbz	x23, 40d0f8 <argp_error@@Base+0xf24>
  40c95c:	mov	x0, x23
  40c960:	ldr	x23, [x23, #8]
  40c964:	bl	401d30 <free@plt>
  40c968:	cbnz	x23, 40c95c <argp_error@@Base+0x788>
  40c96c:	mov	w0, #0x3f                  	// #63
  40c970:	ldp	x19, x20, [sp, #16]
  40c974:	ldp	x21, x22, [sp, #32]
  40c978:	ldp	x23, x24, [sp, #48]
  40c97c:	ldp	x25, x26, [sp, #64]
  40c980:	b	40d22c <argp_error@@Base+0x1058>
  40c984:	ldr	x0, [sp, #120]
  40c988:	str	x0, [sp, #160]
  40c98c:	str	x23, [sp, #168]
  40c990:	ldrsw	x0, [x19]
  40c994:	ldr	x3, [x22, x0, lsl #3]
  40c998:	ldr	x2, [x22]
  40c99c:	adrp	x1, 411000 <argp_error@@Base+0x4e2c>
  40c9a0:	add	x1, x1, #0xb0
  40c9a4:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  40c9a8:	ldr	x0, [x0, #1248]
  40c9ac:	bl	401ed0 <fprintf@plt>
  40c9b0:	add	x20, sp, #0xa0
  40c9b4:	adrp	x21, 411000 <argp_error@@Base+0x4e2c>
  40c9b8:	add	x21, x21, #0xe0
  40c9bc:	adrp	x22, 426000 <argp_error@@Base+0x19e2c>
  40c9c0:	ldr	x0, [x20]
  40c9c4:	ldr	x2, [x0]
  40c9c8:	mov	x1, x21
  40c9cc:	ldr	x0, [x22, #1248]
  40c9d0:	bl	401ed0 <fprintf@plt>
  40c9d4:	ldr	x20, [x20, #8]
  40c9d8:	cbnz	x20, 40c9c0 <argp_error@@Base+0x7ec>
  40c9dc:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  40c9e0:	ldr	x1, [x0, #1248]
  40c9e4:	mov	w0, #0xa                   	// #10
  40c9e8:	bl	401b70 <fputc@plt>
  40c9ec:	ldr	x20, [x19, #32]
  40c9f0:	mov	x0, x20
  40c9f4:	bl	401b00 <strlen@plt>
  40c9f8:	add	x20, x20, x0
  40c9fc:	str	x20, [x19, #32]
  40ca00:	ldr	w0, [x19]
  40ca04:	add	w0, w0, #0x1
  40ca08:	str	w0, [x19]
  40ca0c:	str	wzr, [x19, #8]
  40ca10:	mov	w0, #0x3f                  	// #63
  40ca14:	ldp	x19, x20, [sp, #16]
  40ca18:	ldp	x21, x22, [sp, #32]
  40ca1c:	ldp	x23, x24, [sp, #48]
  40ca20:	ldp	x25, x26, [sp, #64]
  40ca24:	b	40d22c <argp_error@@Base+0x1058>
  40ca28:	ldrsw	x0, [x19]
  40ca2c:	ldr	x3, [x22, x0, lsl #3]
  40ca30:	ldr	x2, [x22]
  40ca34:	adrp	x1, 411000 <argp_error@@Base+0x4e2c>
  40ca38:	add	x1, x1, #0xe8
  40ca3c:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  40ca40:	ldr	x0, [x0, #1248]
  40ca44:	bl	401ed0 <fprintf@plt>
  40ca48:	b	40c9ec <argp_error@@Base+0x818>
  40ca4c:	cbz	w28, 40ca88 <argp_error@@Base+0x8b4>
  40ca50:	add	x0, x22, w0, sxtw #3
  40ca54:	ldur	x0, [x0, #-8]
  40ca58:	ldrb	w1, [x0, #1]
  40ca5c:	cmp	w1, #0x2d
  40ca60:	b.eq	40cac0 <argp_error@@Base+0x8ec>  // b.none
  40ca64:	ldr	x1, [sp, #120]
  40ca68:	ldr	x4, [x1]
  40ca6c:	ldrb	w3, [x0]
  40ca70:	ldr	x2, [x22]
  40ca74:	adrp	x1, 411000 <argp_error@@Base+0x4e2c>
  40ca78:	add	x1, x1, #0x138
  40ca7c:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  40ca80:	ldr	x0, [x0, #1248]
  40ca84:	bl	401ed0 <fprintf@plt>
  40ca88:	ldr	x20, [x19, #32]
  40ca8c:	mov	x0, x20
  40ca90:	bl	401b00 <strlen@plt>
  40ca94:	add	x20, x20, x0
  40ca98:	str	x20, [x19, #32]
  40ca9c:	ldr	x0, [sp, #120]
  40caa0:	ldr	w0, [x0, #24]
  40caa4:	str	w0, [x19, #8]
  40caa8:	mov	w0, #0x3f                  	// #63
  40caac:	ldp	x19, x20, [sp, #16]
  40cab0:	ldp	x21, x22, [sp, #32]
  40cab4:	ldp	x23, x24, [sp, #48]
  40cab8:	ldp	x25, x26, [sp, #64]
  40cabc:	b	40d22c <argp_error@@Base+0x1058>
  40cac0:	ldr	x0, [sp, #120]
  40cac4:	ldr	x3, [x0]
  40cac8:	ldr	x2, [x22]
  40cacc:	adrp	x1, 411000 <argp_error@@Base+0x4e2c>
  40cad0:	add	x1, x1, #0x108
  40cad4:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  40cad8:	ldr	x0, [x0, #1248]
  40cadc:	bl	401ed0 <fprintf@plt>
  40cae0:	b	40ca88 <argp_error@@Base+0x8b4>
  40cae4:	ldr	x2, [sp, #120]
  40cae8:	ldr	w2, [x2, #8]
  40caec:	cmp	w2, #0x1
  40caf0:	b.ne	40d190 <argp_error@@Base+0xfbc>  // b.any
  40caf4:	cmp	w0, w20
  40caf8:	b.ge	40cb10 <argp_error@@Base+0x93c>  // b.tcont
  40cafc:	add	w1, w1, #0x2
  40cb00:	str	w1, [x19]
  40cb04:	ldr	x0, [x22, w0, sxtw #3]
  40cb08:	str	x0, [x19, #16]
  40cb0c:	b	40d190 <argp_error@@Base+0xfbc>
  40cb10:	cbnz	w28, 40cb5c <argp_error@@Base+0x988>
  40cb14:	ldr	x20, [x19, #32]
  40cb18:	mov	x0, x20
  40cb1c:	bl	401b00 <strlen@plt>
  40cb20:	add	x20, x20, x0
  40cb24:	str	x20, [x19, #32]
  40cb28:	ldr	x0, [sp, #120]
  40cb2c:	ldr	w0, [x0, #24]
  40cb30:	str	w0, [x19, #8]
  40cb34:	ldrb	w0, [x24]
  40cb38:	cmp	w0, #0x3a
  40cb3c:	mov	w0, #0x3a                  	// #58
  40cb40:	mov	w21, #0x3f                  	// #63
  40cb44:	csel	w0, w0, w21, eq  // eq = none
  40cb48:	ldp	x19, x20, [sp, #16]
  40cb4c:	ldp	x21, x22, [sp, #32]
  40cb50:	ldp	x23, x24, [sp, #48]
  40cb54:	ldp	x25, x26, [sp, #64]
  40cb58:	b	40d22c <argp_error@@Base+0x1058>
  40cb5c:	ldr	x0, [sp, #120]
  40cb60:	ldr	x3, [x0]
  40cb64:	ldr	x2, [x22]
  40cb68:	adrp	x1, 411000 <argp_error@@Base+0x4e2c>
  40cb6c:	add	x1, x1, #0x168
  40cb70:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  40cb74:	ldr	x0, [x0, #1248]
  40cb78:	bl	401ed0 <fprintf@plt>
  40cb7c:	b	40cb14 <argp_error@@Base+0x940>
  40cb80:	ldr	x0, [sp, #120]
  40cb84:	ldr	w0, [x0, #24]
  40cb88:	ldp	x19, x20, [sp, #16]
  40cb8c:	ldp	x21, x22, [sp, #32]
  40cb90:	ldp	x23, x24, [sp, #48]
  40cb94:	ldp	x25, x26, [sp, #64]
  40cb98:	b	40d22c <argp_error@@Base+0x1058>
  40cb9c:	ldr	w0, [sp, #144]
  40cba0:	cbz	w0, 40cbd4 <argp_error@@Base+0xa00>
  40cba4:	ldrsw	x0, [x19]
  40cba8:	ldr	x21, [x22, x0, lsl #3]
  40cbac:	ldrb	w0, [x21, #1]
  40cbb0:	cmp	w0, #0x2d
  40cbb4:	b.eq	40d110 <argp_error@@Base+0xf3c>  // b.none
  40cbb8:	ldr	x0, [x19, #32]
  40cbbc:	ldrb	w1, [x0]
  40cbc0:	mov	x0, x24
  40cbc4:	bl	401d70 <strchr@plt>
  40cbc8:	cbnz	x0, 40c724 <argp_error@@Base+0x550>
  40cbcc:	cbnz	w28, 40cbec <argp_error@@Base+0xa18>
  40cbd0:	b	40cc0c <argp_error@@Base+0xa38>
  40cbd4:	cbz	w28, 40cc0c <argp_error@@Base+0xa38>
  40cbd8:	ldrsw	x0, [x19]
  40cbdc:	ldr	x21, [x22, x0, lsl #3]
  40cbe0:	ldrb	w0, [x21, #1]
  40cbe4:	cmp	w0, #0x2d
  40cbe8:	b.eq	40d114 <argp_error@@Base+0xf40>  // b.none
  40cbec:	ldr	x4, [x19, #32]
  40cbf0:	ldrb	w3, [x21]
  40cbf4:	ldr	x2, [x22]
  40cbf8:	adrp	x1, 411000 <argp_error@@Base+0x4e2c>
  40cbfc:	add	x1, x1, #0x1b0
  40cc00:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  40cc04:	ldr	x0, [x0, #1248]
  40cc08:	bl	401ed0 <fprintf@plt>
  40cc0c:	adrp	x0, 411000 <argp_error@@Base+0x4e2c>
  40cc10:	add	x0, x0, #0x218
  40cc14:	str	x0, [x19, #32]
  40cc18:	ldr	w0, [x19]
  40cc1c:	add	w0, w0, #0x1
  40cc20:	str	w0, [x19]
  40cc24:	str	wzr, [x19, #8]
  40cc28:	mov	w0, #0x3f                  	// #63
  40cc2c:	ldp	x19, x20, [sp, #16]
  40cc30:	ldp	x21, x22, [sp, #32]
  40cc34:	ldp	x23, x24, [sp, #48]
  40cc38:	ldp	x25, x26, [sp, #64]
  40cc3c:	b	40d22c <argp_error@@Base+0x1058>
  40cc40:	cbnz	w28, 40cc60 <argp_error@@Base+0xa8c>
  40cc44:	str	w26, [x19, #8]
  40cc48:	mov	w0, #0x3f                  	// #63
  40cc4c:	ldp	x19, x20, [sp, #16]
  40cc50:	ldp	x21, x22, [sp, #32]
  40cc54:	ldp	x23, x24, [sp, #48]
  40cc58:	ldp	x25, x26, [sp, #64]
  40cc5c:	b	40d22c <argp_error@@Base+0x1058>
  40cc60:	mov	w3, w26
  40cc64:	ldr	x2, [x22]
  40cc68:	adrp	x1, 411000 <argp_error@@Base+0x4e2c>
  40cc6c:	add	x1, x1, #0x1d0
  40cc70:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  40cc74:	ldr	x0, [x0, #1248]
  40cc78:	bl	401ed0 <fprintf@plt>
  40cc7c:	b	40cc44 <argp_error@@Base+0xa70>
  40cc80:	ldrb	w1, [x0, #1]
  40cc84:	cmp	w1, #0x3b
  40cc88:	b.ne	40c778 <argp_error@@Base+0x5a4>  // b.any
  40cc8c:	ldr	x0, [sp, #104]
  40cc90:	cbz	x0, 40d00c <argp_error@@Base+0xe38>
  40cc94:	ldrb	w0, [x23, #1]
  40cc98:	cbz	w0, 40cd0c <argp_error@@Base+0xb38>
  40cc9c:	str	x25, [x19, #16]
  40cca0:	ldr	w0, [x19]
  40cca4:	add	w0, w0, #0x1
  40cca8:	str	w0, [x19]
  40ccac:	ldr	x26, [x19, #16]
  40ccb0:	str	x26, [sp, #112]
  40ccb4:	str	x26, [x19, #32]
  40ccb8:	ldrb	w23, [x26]
  40ccbc:	cmp	w23, #0x3d
  40ccc0:	ccmp	w23, #0x0, #0x4, ne  // ne = any
  40ccc4:	b.eq	40cd78 <argp_error@@Base+0xba4>  // b.none
  40ccc8:	ldrb	w23, [x26, #1]!
  40cccc:	cmp	w23, #0x3d
  40ccd0:	ccmp	w23, #0x0, #0x4, ne  // ne = any
  40ccd4:	b.ne	40ccc8 <argp_error@@Base+0xaf4>  // b.any
  40ccd8:	ldr	x0, [sp, #104]
  40ccdc:	ldr	x21, [x0]
  40cce0:	cbz	x21, 40d00c <argp_error@@Base+0xe38>
  40cce4:	mov	w25, #0x0                   	// #0
  40cce8:	str	wzr, [sp, #152]
  40ccec:	str	wzr, [sp, #148]
  40ccf0:	mov	x27, #0x0                   	// #0
  40ccf4:	ldr	x0, [sp, #112]
  40ccf8:	sub	x1, x26, x0
  40ccfc:	str	x1, [sp, #120]
  40cd00:	sub	w0, w26, w0
  40cd04:	str	x0, [sp, #128]
  40cd08:	b	40cde8 <argp_error@@Base+0xc14>
  40cd0c:	ldr	w0, [x19]
  40cd10:	cmp	w0, w20
  40cd14:	b.eq	40cd2c <argp_error@@Base+0xb58>  // b.none
  40cd18:	add	w1, w0, #0x1
  40cd1c:	str	w1, [x19]
  40cd20:	ldr	x0, [x22, w0, sxtw #3]
  40cd24:	str	x0, [x19, #16]
  40cd28:	b	40ccac <argp_error@@Base+0xad8>
  40cd2c:	cbnz	w28, 40cd58 <argp_error@@Base+0xb84>
  40cd30:	str	w26, [x19, #8]
  40cd34:	ldrb	w0, [x24]
  40cd38:	cmp	w0, #0x3a
  40cd3c:	mov	w21, #0x3f                  	// #63
  40cd40:	csel	w0, w0, w21, eq  // eq = none
  40cd44:	ldp	x19, x20, [sp, #16]
  40cd48:	ldp	x21, x22, [sp, #32]
  40cd4c:	ldp	x23, x24, [sp, #48]
  40cd50:	ldp	x25, x26, [sp, #64]
  40cd54:	b	40d22c <argp_error@@Base+0x1058>
  40cd58:	mov	w3, w26
  40cd5c:	ldr	x2, [x22]
  40cd60:	adrp	x1, 411000 <argp_error@@Base+0x4e2c>
  40cd64:	add	x1, x1, #0x1f0
  40cd68:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  40cd6c:	ldr	x0, [x0, #1248]
  40cd70:	bl	401ed0 <fprintf@plt>
  40cd74:	b	40cd30 <argp_error@@Base+0xb5c>
  40cd78:	ldr	x26, [sp, #112]
  40cd7c:	b	40ccd8 <argp_error@@Base+0xb04>
  40cd80:	ldr	x1, [x27, #16]
  40cd84:	ldr	x0, [sp, #104]
  40cd88:	ldr	x0, [x0, #16]
  40cd8c:	cmp	x1, x0
  40cd90:	b.eq	40cda0 <argp_error@@Base+0xbcc>  // b.none
  40cd94:	mov	w0, #0x1                   	// #1
  40cd98:	str	w0, [sp, #148]
  40cd9c:	b	40cdd4 <argp_error@@Base+0xc00>
  40cda0:	ldr	w1, [x27, #24]
  40cda4:	ldr	x0, [sp, #104]
  40cda8:	ldr	w0, [x0, #24]
  40cdac:	cmp	w1, w0
  40cdb0:	ldr	w0, [sp, #148]
  40cdb4:	csinc	w0, w0, wzr, eq  // eq = none
  40cdb8:	str	w0, [sp, #148]
  40cdbc:	b	40cdd4 <argp_error@@Base+0xc00>
  40cdc0:	str	w25, [sp, #152]
  40cdc4:	ldr	x27, [sp, #104]
  40cdc8:	b	40cdd4 <argp_error@@Base+0xc00>
  40cdcc:	mov	w0, #0x1                   	// #1
  40cdd0:	str	w0, [sp, #148]
  40cdd4:	add	w25, w25, #0x1
  40cdd8:	ldr	x0, [sp, #104]
  40cddc:	ldr	x21, [x0, #32]!
  40cde0:	str	x0, [sp, #104]
  40cde4:	cbz	x21, 40ce3c <argp_error@@Base+0xc68>
  40cde8:	ldr	x2, [sp, #120]
  40cdec:	ldr	x1, [sp, #112]
  40cdf0:	mov	x0, x21
  40cdf4:	bl	401c00 <strncmp@plt>
  40cdf8:	cbnz	w0, 40cdd4 <argp_error@@Base+0xc00>
  40cdfc:	mov	x0, x21
  40ce00:	bl	401b00 <strlen@plt>
  40ce04:	ldr	x1, [sp, #128]
  40ce08:	cmp	x1, x0
  40ce0c:	b.eq	40cf04 <argp_error@@Base+0xd30>  // b.none
  40ce10:	cbz	x27, 40cdc0 <argp_error@@Base+0xbec>
  40ce14:	ldr	w0, [sp, #144]
  40ce18:	cbnz	w0, 40cdcc <argp_error@@Base+0xbf8>
  40ce1c:	ldr	w1, [x27, #8]
  40ce20:	ldr	x0, [sp, #104]
  40ce24:	ldr	w0, [x0, #8]
  40ce28:	cmp	w1, w0
  40ce2c:	b.eq	40cd80 <argp_error@@Base+0xbac>  // b.none
  40ce30:	mov	w0, #0x1                   	// #1
  40ce34:	str	w0, [sp, #148]
  40ce38:	b	40cdd4 <argp_error@@Base+0xc00>
  40ce3c:	ldr	w0, [sp, #148]
  40ce40:	cbnz	w0, 40cea8 <argp_error@@Base+0xcd4>
  40ce44:	cbz	x27, 40d00c <argp_error@@Base+0xe38>
  40ce48:	cbz	w23, 40cf60 <argp_error@@Base+0xd8c>
  40ce4c:	ldr	w0, [x27, #8]
  40ce50:	cbz	w0, 40cf10 <argp_error@@Base+0xd3c>
  40ce54:	add	x26, x26, #0x1
  40ce58:	str	x26, [x19, #16]
  40ce5c:	ldr	x20, [sp, #112]
  40ce60:	mov	x0, x20
  40ce64:	bl	401b00 <strlen@plt>
  40ce68:	add	x0, x20, x0
  40ce6c:	str	x0, [x19, #32]
  40ce70:	ldr	x0, [sp, #136]
  40ce74:	cbz	x0, 40ce80 <argp_error@@Base+0xcac>
  40ce78:	ldr	w1, [sp, #152]
  40ce7c:	str	w1, [x0]
  40ce80:	ldr	x0, [x27, #16]
  40ce84:	cbz	x0, 40cff4 <argp_error@@Base+0xe20>
  40ce88:	ldr	w1, [x27, #24]
  40ce8c:	str	w1, [x0]
  40ce90:	mov	w0, #0x0                   	// #0
  40ce94:	ldp	x19, x20, [sp, #16]
  40ce98:	ldp	x21, x22, [sp, #32]
  40ce9c:	ldp	x23, x24, [sp, #48]
  40cea0:	ldp	x25, x26, [sp, #64]
  40cea4:	b	40d22c <argp_error@@Base+0x1058>
  40cea8:	cbnz	w28, 40cee4 <argp_error@@Base+0xd10>
  40ceac:	ldr	x20, [x19, #32]
  40ceb0:	mov	x0, x20
  40ceb4:	bl	401b00 <strlen@plt>
  40ceb8:	add	x20, x20, x0
  40cebc:	str	x20, [x19, #32]
  40cec0:	ldr	w0, [x19]
  40cec4:	add	w0, w0, #0x1
  40cec8:	str	w0, [x19]
  40cecc:	mov	w0, #0x3f                  	// #63
  40ced0:	ldp	x19, x20, [sp, #16]
  40ced4:	ldp	x21, x22, [sp, #32]
  40ced8:	ldp	x23, x24, [sp, #48]
  40cedc:	ldp	x25, x26, [sp, #64]
  40cee0:	b	40d22c <argp_error@@Base+0x1058>
  40cee4:	ldr	x3, [sp, #112]
  40cee8:	ldr	x2, [x22]
  40ceec:	adrp	x1, 411000 <argp_error@@Base+0x4e2c>
  40cef0:	add	x1, x1, #0x220
  40cef4:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  40cef8:	ldr	x0, [x0, #1248]
  40cefc:	bl	401ed0 <fprintf@plt>
  40cf00:	b	40ceac <argp_error@@Base+0xcd8>
  40cf04:	str	w25, [sp, #152]
  40cf08:	ldr	x27, [sp, #104]
  40cf0c:	b	40ce44 <argp_error@@Base+0xc70>
  40cf10:	cbnz	w28, 40cf40 <argp_error@@Base+0xd6c>
  40cf14:	ldr	x20, [x19, #32]
  40cf18:	mov	x0, x20
  40cf1c:	bl	401b00 <strlen@plt>
  40cf20:	add	x20, x20, x0
  40cf24:	str	x20, [x19, #32]
  40cf28:	mov	w0, #0x3f                  	// #63
  40cf2c:	ldp	x19, x20, [sp, #16]
  40cf30:	ldp	x21, x22, [sp, #32]
  40cf34:	ldp	x23, x24, [sp, #48]
  40cf38:	ldp	x25, x26, [sp, #64]
  40cf3c:	b	40d22c <argp_error@@Base+0x1058>
  40cf40:	ldr	x3, [x27]
  40cf44:	ldr	x2, [x22]
  40cf48:	adrp	x1, 411000 <argp_error@@Base+0x4e2c>
  40cf4c:	add	x1, x1, #0x248
  40cf50:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  40cf54:	ldr	x0, [x0, #1248]
  40cf58:	bl	401ed0 <fprintf@plt>
  40cf5c:	b	40cf14 <argp_error@@Base+0xd40>
  40cf60:	ldr	w0, [x27, #8]
  40cf64:	cmp	w0, #0x1
  40cf68:	b.eq	40cf74 <argp_error@@Base+0xda0>  // b.none
  40cf6c:	str	xzr, [x19, #16]
  40cf70:	b	40ce5c <argp_error@@Base+0xc88>
  40cf74:	ldr	w0, [x19]
  40cf78:	cmp	w0, w20
  40cf7c:	b.ge	40cf94 <argp_error@@Base+0xdc0>  // b.tcont
  40cf80:	add	w1, w0, #0x1
  40cf84:	str	w1, [x19]
  40cf88:	ldr	x0, [x22, w0, sxtw #3]
  40cf8c:	str	x0, [x19, #16]
  40cf90:	b	40ce5c <argp_error@@Base+0xc88>
  40cf94:	cbnz	w28, 40cfd4 <argp_error@@Base+0xe00>
  40cf98:	ldr	x20, [x19, #32]
  40cf9c:	mov	x0, x20
  40cfa0:	bl	401b00 <strlen@plt>
  40cfa4:	add	x20, x20, x0
  40cfa8:	str	x20, [x19, #32]
  40cfac:	ldrb	w0, [x24]
  40cfb0:	cmp	w0, #0x3a
  40cfb4:	mov	w0, #0x3a                  	// #58
  40cfb8:	mov	w21, #0x3f                  	// #63
  40cfbc:	csel	w0, w0, w21, eq  // eq = none
  40cfc0:	ldp	x19, x20, [sp, #16]
  40cfc4:	ldp	x21, x22, [sp, #32]
  40cfc8:	ldp	x23, x24, [sp, #48]
  40cfcc:	ldp	x25, x26, [sp, #64]
  40cfd0:	b	40d22c <argp_error@@Base+0x1058>
  40cfd4:	ldr	x3, [x27]
  40cfd8:	ldr	x2, [x22]
  40cfdc:	adrp	x1, 411000 <argp_error@@Base+0x4e2c>
  40cfe0:	add	x1, x1, #0x278
  40cfe4:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  40cfe8:	ldr	x0, [x0, #1248]
  40cfec:	bl	401ed0 <fprintf@plt>
  40cff0:	b	40cf98 <argp_error@@Base+0xdc4>
  40cff4:	ldr	w0, [x27, #24]
  40cff8:	ldp	x19, x20, [sp, #16]
  40cffc:	ldp	x21, x22, [sp, #32]
  40d000:	ldp	x23, x24, [sp, #48]
  40d004:	ldp	x25, x26, [sp, #64]
  40d008:	b	40d22c <argp_error@@Base+0x1058>
  40d00c:	str	xzr, [x19, #32]
  40d010:	mov	w0, #0x57                  	// #87
  40d014:	ldp	x19, x20, [sp, #16]
  40d018:	ldp	x21, x22, [sp, #32]
  40d01c:	ldp	x23, x24, [sp, #48]
  40d020:	ldp	x25, x26, [sp, #64]
  40d024:	b	40d22c <argp_error@@Base+0x1058>
  40d028:	ldrb	w0, [x0, #2]
  40d02c:	cmp	w0, #0x3a
  40d030:	b.eq	40d054 <argp_error@@Base+0xe80>  // b.none
  40d034:	ldrb	w0, [x23, #1]
  40d038:	cbz	w0, 40d07c <argp_error@@Base+0xea8>
  40d03c:	str	x25, [x19, #16]
  40d040:	ldr	w0, [x19]
  40d044:	add	w0, w0, #0x1
  40d048:	str	w0, [x19]
  40d04c:	str	xzr, [x19, #32]
  40d050:	b	40c784 <argp_error@@Base+0x5b0>
  40d054:	ldrb	w0, [x23, #1]
  40d058:	cbz	w0, 40d074 <argp_error@@Base+0xea0>
  40d05c:	str	x25, [x19, #16]
  40d060:	ldr	w0, [x19]
  40d064:	add	w0, w0, #0x1
  40d068:	str	w0, [x19]
  40d06c:	str	xzr, [x19, #32]
  40d070:	b	40c784 <argp_error@@Base+0x5b0>
  40d074:	str	xzr, [x19, #16]
  40d078:	b	40d06c <argp_error@@Base+0xe98>
  40d07c:	ldr	w0, [x19]
  40d080:	cmp	w0, w20
  40d084:	b.eq	40d09c <argp_error@@Base+0xec8>  // b.none
  40d088:	add	w1, w0, #0x1
  40d08c:	str	w1, [x19]
  40d090:	ldr	x0, [x22, w0, sxtw #3]
  40d094:	str	x0, [x19, #16]
  40d098:	b	40d04c <argp_error@@Base+0xe78>
  40d09c:	cbnz	w28, 40d0b8 <argp_error@@Base+0xee4>
  40d0a0:	str	w26, [x19, #8]
  40d0a4:	ldrb	w21, [x24]
  40d0a8:	cmp	w21, #0x3a
  40d0ac:	mov	w0, #0x3f                  	// #63
  40d0b0:	csel	w21, w21, w0, eq  // eq = none
  40d0b4:	b	40d04c <argp_error@@Base+0xe78>
  40d0b8:	mov	w3, w26
  40d0bc:	ldr	x2, [x22]
  40d0c0:	adrp	x1, 411000 <argp_error@@Base+0x4e2c>
  40d0c4:	add	x1, x1, #0x1f0
  40d0c8:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  40d0cc:	ldr	x0, [x0, #1248]
  40d0d0:	bl	401ed0 <fprintf@plt>
  40d0d4:	b	40d0a0 <argp_error@@Base+0xecc>
  40d0d8:	mov	w0, #0xffffffff            	// #-1
  40d0dc:	b	40d22c <argp_error@@Base+0x1058>
  40d0e0:	mov	w0, #0xffffffff            	// #-1
  40d0e4:	ldp	x19, x20, [sp, #16]
  40d0e8:	ldp	x21, x22, [sp, #32]
  40d0ec:	ldp	x23, x24, [sp, #48]
  40d0f0:	ldp	x25, x26, [sp, #64]
  40d0f4:	b	40d22c <argp_error@@Base+0x1058>
  40d0f8:	mov	w0, #0x3f                  	// #63
  40d0fc:	ldp	x19, x20, [sp, #16]
  40d100:	ldp	x21, x22, [sp, #32]
  40d104:	ldp	x23, x24, [sp, #48]
  40d108:	ldp	x25, x26, [sp, #64]
  40d10c:	b	40d22c <argp_error@@Base+0x1058>
  40d110:	cbz	w28, 40cc0c <argp_error@@Base+0xa38>
  40d114:	ldr	x3, [x19, #32]
  40d118:	ldr	x2, [x22]
  40d11c:	adrp	x1, 411000 <argp_error@@Base+0x4e2c>
  40d120:	add	x1, x1, #0x190
  40d124:	adrp	x0, 426000 <argp_error@@Base+0x19e2c>
  40d128:	ldr	x0, [x0, #1248]
  40d12c:	bl	401ed0 <fprintf@plt>
  40d130:	b	40cc0c <argp_error@@Base+0xa38>
  40d134:	mov	x23, x21
  40d138:	str	x21, [sp, #120]
  40d13c:	mov	w0, #0xffffffff            	// #-1
  40d140:	str	w0, [sp, #152]
  40d144:	b	40d150 <argp_error@@Base+0xf7c>
  40d148:	str	w26, [sp, #152]
  40d14c:	str	x25, [sp, #120]
  40d150:	cbz	x23, 40d164 <argp_error@@Base+0xf90>
  40d154:	mov	x0, x23
  40d158:	ldr	x23, [x23, #8]
  40d15c:	bl	401d30 <free@plt>
  40d160:	cbnz	x23, 40d154 <argp_error@@Base+0xf80>
  40d164:	ldr	x3, [sp, #120]
  40d168:	cbz	x3, 40cb9c <argp_error@@Base+0x9c8>
  40d16c:	ldr	w1, [x19]
  40d170:	add	w0, w1, #0x1
  40d174:	str	w0, [x19]
  40d178:	ldrb	w2, [x27]
  40d17c:	cbz	w2, 40cae4 <argp_error@@Base+0x910>
  40d180:	ldr	w1, [x3, #8]
  40d184:	cbz	w1, 40ca4c <argp_error@@Base+0x878>
  40d188:	add	x27, x27, #0x1
  40d18c:	str	x27, [x19, #16]
  40d190:	ldr	x20, [x19, #32]
  40d194:	mov	x0, x20
  40d198:	bl	401b00 <strlen@plt>
  40d19c:	add	x20, x20, x0
  40d1a0:	str	x20, [x19, #32]
  40d1a4:	ldr	x0, [sp, #136]
  40d1a8:	cbz	x0, 40d1b4 <argp_error@@Base+0xfe0>
  40d1ac:	ldr	w1, [sp, #152]
  40d1b0:	str	w1, [x0]
  40d1b4:	ldr	x1, [sp, #120]
  40d1b8:	ldr	x0, [x1, #16]
  40d1bc:	cbz	x0, 40cb80 <argp_error@@Base+0x9ac>
  40d1c0:	ldr	w1, [x1, #24]
  40d1c4:	str	w1, [x0]
  40d1c8:	mov	w0, #0x0                   	// #0
  40d1cc:	ldp	x19, x20, [sp, #16]
  40d1d0:	ldp	x21, x22, [sp, #32]
  40d1d4:	ldp	x23, x24, [sp, #48]
  40d1d8:	ldp	x25, x26, [sp, #64]
  40d1dc:	b	40d22c <argp_error@@Base+0x1058>
  40d1e0:	mov	w0, #0xffffffff            	// #-1
  40d1e4:	ldp	x19, x20, [sp, #16]
  40d1e8:	ldp	x21, x22, [sp, #32]
  40d1ec:	ldp	x23, x24, [sp, #48]
  40d1f0:	b	40d22c <argp_error@@Base+0x1058>
  40d1f4:	ldrb	w0, [x23]
  40d1f8:	cmp	w0, #0x2d
  40d1fc:	b.eq	40c6c0 <argp_error@@Base+0x4ec>  // b.none
  40d200:	ldr	w0, [x19, #40]
  40d204:	cbz	w0, 40d0e0 <argp_error@@Base+0xf0c>
  40d208:	add	w21, w21, #0x1
  40d20c:	str	w21, [x19]
  40d210:	ldr	x0, [x22, x25, lsl #3]
  40d214:	str	x0, [x19, #16]
  40d218:	mov	w0, #0x1                   	// #1
  40d21c:	ldp	x19, x20, [sp, #16]
  40d220:	ldp	x21, x22, [sp, #32]
  40d224:	ldp	x23, x24, [sp, #48]
  40d228:	ldp	x25, x26, [sp, #64]
  40d22c:	ldp	x27, x28, [sp, #80]
  40d230:	ldp	x29, x30, [sp], #176
  40d234:	ret
  40d238:	stp	x29, x30, [sp, #-48]!
  40d23c:	mov	x29, sp
  40d240:	stp	x19, x20, [sp, #16]
  40d244:	stp	x21, x22, [sp, #32]
  40d248:	adrp	x21, 426000 <argp_error@@Base+0x19e2c>
  40d24c:	add	x19, x21, #0x5c8
  40d250:	adrp	x20, 426000 <argp_error@@Base+0x19e2c>
  40d254:	add	x22, x20, #0x4c4
  40d258:	ldr	w7, [x20, #1220]
  40d25c:	str	w7, [x21, #1480]
  40d260:	ldr	w7, [x22, #4]
  40d264:	str	w7, [x19, #4]
  40d268:	mov	w7, w6
  40d26c:	mov	x6, x19
  40d270:	bl	40c470 <argp_error@@Base+0x29c>
  40d274:	ldr	w1, [x21, #1480]
  40d278:	str	w1, [x20, #1220]
  40d27c:	ldr	x2, [x19, #16]
  40d280:	adrp	x1, 426000 <argp_error@@Base+0x19e2c>
  40d284:	str	x2, [x1, #1640]
  40d288:	ldr	w1, [x19, #8]
  40d28c:	str	w1, [x22, #8]
  40d290:	ldp	x19, x20, [sp, #16]
  40d294:	ldp	x21, x22, [sp, #32]
  40d298:	ldp	x29, x30, [sp], #48
  40d29c:	ret
  40d2a0:	stp	x29, x30, [sp, #-16]!
  40d2a4:	mov	x29, sp
  40d2a8:	mov	w6, #0x1                   	// #1
  40d2ac:	mov	w5, #0x0                   	// #0
  40d2b0:	mov	x4, #0x0                   	// #0
  40d2b4:	mov	x3, #0x0                   	// #0
  40d2b8:	bl	40d238 <argp_error@@Base+0x1064>
  40d2bc:	ldp	x29, x30, [sp], #16
  40d2c0:	ret
  40d2c4:	stp	x29, x30, [sp, #-64]!
  40d2c8:	mov	x29, sp
  40d2cc:	stp	x19, x20, [sp, #16]
  40d2d0:	stp	x21, x22, [sp, #32]
  40d2d4:	str	x23, [sp, #48]
  40d2d8:	mov	x23, x0
  40d2dc:	mov	x22, x1
  40d2e0:	mov	x21, x2
  40d2e4:	mov	x20, x3
  40d2e8:	mov	x0, #0x48                  	// #72
  40d2ec:	bl	401be0 <malloc@plt>
  40d2f0:	mov	x19, x0
  40d2f4:	cbz	x0, 40d330 <argp_error@@Base+0x115c>
  40d2f8:	str	x23, [x0]
  40d2fc:	str	x22, [x0, #8]
  40d300:	str	x21, [x0, #16]
  40d304:	str	x20, [x0, #24]
  40d308:	str	xzr, [x0, #40]
  40d30c:	str	xzr, [x0, #32]
  40d310:	mov	x0, #0xc8                  	// #200
  40d314:	bl	401be0 <malloc@plt>
  40d318:	mov	x20, x0
  40d31c:	str	x0, [x19, #48]
  40d320:	cbz	x0, 40d348 <argp_error@@Base+0x1174>
  40d324:	str	x0, [x19, #56]
  40d328:	add	x20, x0, #0xc8
  40d32c:	str	x20, [x19, #64]
  40d330:	mov	x0, x19
  40d334:	ldp	x19, x20, [sp, #16]
  40d338:	ldp	x21, x22, [sp, #32]
  40d33c:	ldr	x23, [sp, #48]
  40d340:	ldp	x29, x30, [sp], #64
  40d344:	ret
  40d348:	mov	x0, x19
  40d34c:	bl	401d30 <free@plt>
  40d350:	mov	x19, x20
  40d354:	b	40d330 <argp_error@@Base+0x115c>
  40d358:	stp	x29, x30, [sp, #-96]!
  40d35c:	mov	x29, sp
  40d360:	stp	x19, x20, [sp, #16]
  40d364:	mov	x19, x0
  40d368:	ldr	x20, [x0, #48]
  40d36c:	ldr	x0, [x0, #32]
  40d370:	add	x20, x20, x0
  40d374:	ldr	x2, [x19, #56]
  40d378:	cmp	x20, x2
  40d37c:	b.cs	40d80c <argp_error@@Base+0x1638>  // b.hs, b.nlast
  40d380:	stp	x21, x22, [sp, #32]
  40d384:	stp	x23, x24, [sp, #48]
  40d388:	stp	x25, x26, [sp, #64]
  40d38c:	stp	x27, x28, [sp, #80]
  40d390:	mov	w28, #0xa                   	// #10
  40d394:	mov	w26, #0x20                  	// #32
  40d398:	b	40d46c <argp_error@@Base+0x1298>
  40d39c:	mov	x22, #0x0                   	// #0
  40d3a0:	ldr	x0, [x19]
  40d3a4:	ldr	x1, [x0, #40]
  40d3a8:	ldr	x2, [x0, #48]
  40d3ac:	cmp	x1, x2
  40d3b0:	b.cs	40d4c4 <argp_error@@Base+0x12f0>  // b.hs, b.nlast
  40d3b4:	add	x2, x1, #0x1
  40d3b8:	str	x2, [x0, #40]
  40d3bc:	strb	w26, [x1]
  40d3c0:	add	x22, x22, #0x1
  40d3c4:	cmp	x21, x22
  40d3c8:	b.ne	40d3a0 <argp_error@@Base+0x11cc>  // b.any
  40d3cc:	str	x21, [x19, #40]
  40d3d0:	ldr	x24, [x19, #56]
  40d3d4:	sub	x25, x24, x20
  40d3d8:	mov	x2, x25
  40d3dc:	mov	w1, w28
  40d3e0:	mov	x0, x20
  40d3e4:	bl	401dd0 <memchr@plt>
  40d3e8:	mov	x21, x0
  40d3ec:	ldr	x0, [x19, #40]
  40d3f0:	tbz	x0, #63, 40d3f8 <argp_error@@Base+0x1224>
  40d3f4:	str	xzr, [x19, #40]
  40d3f8:	cbz	x21, 40d4d0 <argp_error@@Base+0x12fc>
  40d3fc:	ldr	x0, [x19, #40]
  40d400:	ldr	x23, [x19, #16]
  40d404:	sub	x1, x21, x20
  40d408:	add	x1, x1, x0
  40d40c:	cmp	x1, x23
  40d410:	b.lt	40d57c <argp_error@@Base+0x13a8>  // b.tstop
  40d414:	sub	x22, x23, #0x1
  40d418:	ldr	x27, [x19, #24]
  40d41c:	tbz	x27, #63, 40d4f4 <argp_error@@Base+0x1320>
  40d420:	cmp	x21, x24
  40d424:	b.cs	40d588 <argp_error@@Base+0x13b4>  // b.hs, b.nlast
  40d428:	sub	x0, x22, x0
  40d42c:	sub	x2, x24, x21
  40d430:	mov	x1, x21
  40d434:	add	x0, x20, x0
  40d438:	bl	401ab0 <memmove@plt>
  40d43c:	ldr	x0, [x19, #40]
  40d440:	sub	x22, x22, x0
  40d444:	add	x22, x20, x22
  40d448:	sub	x21, x22, x21
  40d44c:	ldr	x0, [x19, #56]
  40d450:	sub	x21, x0, x21
  40d454:	str	x21, [x19, #56]
  40d458:	str	xzr, [x19, #40]
  40d45c:	add	x20, x20, x23
  40d460:	ldr	x2, [x19, #56]
  40d464:	cmp	x2, x20
  40d468:	b.ls	40d7fc <argp_error@@Base+0x1628>  // b.plast
  40d46c:	ldr	x0, [x19, #40]
  40d470:	cbnz	x0, 40d3d0 <argp_error@@Base+0x11fc>
  40d474:	ldr	x21, [x19, #8]
  40d478:	cbz	x21, 40d830 <argp_error@@Base+0x165c>
  40d47c:	add	x0, x2, x21
  40d480:	ldr	x1, [x19, #64]
  40d484:	cmp	x1, x0
  40d488:	b.ls	40d39c <argp_error@@Base+0x11c8>  // b.plast
  40d48c:	add	x22, x20, x21
  40d490:	sub	x2, x2, x20
  40d494:	mov	x1, x20
  40d498:	mov	x0, x22
  40d49c:	bl	401ab0 <memmove@plt>
  40d4a0:	ldr	x0, [x19, #56]
  40d4a4:	add	x0, x0, x21
  40d4a8:	str	x0, [x19, #56]
  40d4ac:	mov	x2, x21
  40d4b0:	mov	w1, #0x20                  	// #32
  40d4b4:	mov	x0, x20
  40d4b8:	bl	401c20 <memset@plt>
  40d4bc:	mov	x20, x22
  40d4c0:	b	40d3cc <argp_error@@Base+0x11f8>
  40d4c4:	mov	w1, #0x20                  	// #32
  40d4c8:	bl	401ce0 <__overflow@plt>
  40d4cc:	b	40d3c0 <argp_error@@Base+0x11ec>
  40d4d0:	ldr	x0, [x19, #40]
  40d4d4:	add	x0, x25, x0
  40d4d8:	ldr	x22, [x19, #16]
  40d4dc:	cmp	x0, x22
  40d4e0:	b.cc	40d564 <argp_error@@Base+0x1390>  // b.lo, b.ul, b.last
  40d4e4:	sub	x22, x22, #0x1
  40d4e8:	ldr	x27, [x19, #24]
  40d4ec:	tbnz	x27, #63, 40d588 <argp_error@@Base+0x13b4>
  40d4f0:	mov	x21, x24
  40d4f4:	ldr	x0, [x19, #40]
  40d4f8:	mov	x1, #0x1                   	// #1
  40d4fc:	sub	x0, x1, x0
  40d500:	add	x22, x0, x22
  40d504:	adds	x22, x20, x22
  40d508:	b.cs	40d828 <argp_error@@Base+0x1654>  // b.hs, b.nlast
  40d50c:	bl	401d00 <__ctype_b_loc@plt>
  40d510:	ldr	x2, [x0]
  40d514:	mov	x0, x22
  40d518:	ldrb	w1, [x0]
  40d51c:	ldrh	w1, [x2, x1, lsl #1]
  40d520:	tbnz	w1, #0, 40d5b4 <argp_error@@Base+0x13e0>
  40d524:	sub	x0, x0, #0x1
  40d528:	cmp	x0, x20
  40d52c:	b.cs	40d518 <argp_error@@Base+0x1344>  // b.hs, b.nlast
  40d530:	add	x23, x0, #0x1
  40d534:	cmp	x23, x20
  40d538:	b.hi	40d5e0 <argp_error@@Base+0x140c>  // b.pmore
  40d53c:	cmp	x21, x22
  40d540:	b.hi	40d674 <argp_error@@Base+0x14a0>  // b.pmore
  40d544:	b.eq	40d698 <argp_error@@Base+0x14c4>  // b.none
  40d548:	bl	401d00 <__ctype_b_loc@plt>
  40d54c:	ldr	x1, [x0]
  40d550:	mov	x23, x22
  40d554:	ldrb	w0, [x23, #1]!
  40d558:	ldrh	w0, [x1, x0, lsl #1]
  40d55c:	tbnz	w0, #0, 40d554 <argp_error@@Base+0x1380>
  40d560:	b	40d5e4 <argp_error@@Base+0x1410>
  40d564:	str	x0, [x19, #40]
  40d568:	ldp	x21, x22, [sp, #32]
  40d56c:	ldp	x23, x24, [sp, #48]
  40d570:	ldp	x25, x26, [sp, #64]
  40d574:	ldp	x27, x28, [sp, #80]
  40d578:	b	40d80c <argp_error@@Base+0x1638>
  40d57c:	str	xzr, [x19, #40]
  40d580:	add	x20, x21, #0x1
  40d584:	b	40d460 <argp_error@@Base+0x128c>
  40d588:	ldr	x0, [x19, #40]
  40d58c:	add	x25, x25, x0
  40d590:	str	x25, [x19, #40]
  40d594:	sub	x25, x22, x25
  40d598:	add	x24, x24, x25
  40d59c:	str	x24, [x19, #56]
  40d5a0:	ldp	x21, x22, [sp, #32]
  40d5a4:	ldp	x23, x24, [sp, #48]
  40d5a8:	ldp	x25, x26, [sp, #64]
  40d5ac:	ldp	x27, x28, [sp, #80]
  40d5b0:	b	40d80c <argp_error@@Base+0x1638>
  40d5b4:	add	x23, x0, #0x1
  40d5b8:	cmp	x23, x20
  40d5bc:	b.ls	40d53c <argp_error@@Base+0x1368>  // b.plast
  40d5c0:	cmp	x20, x0
  40d5c4:	b.hi	40d5e0 <argp_error@@Base+0x140c>  // b.pmore
  40d5c8:	sub	x0, x0, #0x1
  40d5cc:	cmp	x0, x20
  40d5d0:	b.cc	40d5e0 <argp_error@@Base+0x140c>  // b.lo, b.ul, b.last
  40d5d4:	ldrb	w1, [x0]
  40d5d8:	ldrh	w1, [x2, x1, lsl #1]
  40d5dc:	tbnz	w1, #0, 40d5c8 <argp_error@@Base+0x13f4>
  40d5e0:	add	x22, x0, #0x1
  40d5e4:	add	x0, x25, #0x1
  40d5e8:	add	x0, x20, x0
  40d5ec:	cmp	x23, x0
  40d5f0:	b.eq	40d6a4 <argp_error@@Base+0x14d0>  // b.none
  40d5f4:	add	x0, x22, #0x1
  40d5f8:	sub	x0, x23, x0
  40d5fc:	cmp	x0, x27
  40d600:	b.ge	40d6b4 <argp_error@@Base+0x14e0>  // b.tcont
  40d604:	cmp	x23, x24
  40d608:	b.cs	40d6b4 <argp_error@@Base+0x14e0>  // b.hs, b.nlast
  40d60c:	ldr	x0, [x19, #64]
  40d610:	sub	x0, x0, x24
  40d614:	add	x1, x27, #0x1
  40d618:	cmp	x0, x1
  40d61c:	b.gt	40d75c <argp_error@@Base+0x1588>
  40d620:	ldr	x0, [x19, #48]
  40d624:	cmp	x0, x22
  40d628:	b.cs	40d63c <argp_error@@Base+0x1468>  // b.hs, b.nlast
  40d62c:	ldr	x3, [x19]
  40d630:	sub	x2, x22, x0
  40d634:	mov	x1, #0x1                   	// #1
  40d638:	bl	401ae0 <fwrite_unlocked@plt>
  40d63c:	ldr	x0, [x19]
  40d640:	ldr	x1, [x0, #40]
  40d644:	ldr	x2, [x0, #48]
  40d648:	cmp	x1, x2
  40d64c:	b.cs	40d79c <argp_error@@Base+0x15c8>  // b.hs, b.nlast
  40d650:	add	x2, x1, #0x1
  40d654:	str	x2, [x0, #40]
  40d658:	mov	w0, #0xa                   	// #10
  40d65c:	strb	w0, [x1]
  40d660:	ldr	x21, [x19, #48]
  40d664:	sub	x20, x20, x21
  40d668:	add	x25, x25, x20
  40d66c:	mov	x20, x21
  40d670:	b	40d6c4 <argp_error@@Base+0x14f0>
  40d674:	add	x22, x22, #0x1
  40d678:	cmp	x21, x22
  40d67c:	b.eq	40d698 <argp_error@@Base+0x14c4>  // b.none
  40d680:	bl	401d00 <__ctype_b_loc@plt>
  40d684:	ldrb	w1, [x22]
  40d688:	ldr	x0, [x0]
  40d68c:	ldrh	w0, [x0, x1, lsl #1]
  40d690:	tbz	w0, #0, 40d674 <argp_error@@Base+0x14a0>
  40d694:	b	40d548 <argp_error@@Base+0x1374>
  40d698:	str	xzr, [x19, #40]
  40d69c:	add	x20, x21, #0x1
  40d6a0:	b	40d460 <argp_error@@Base+0x128c>
  40d6a4:	ldr	x0, [x19, #64]
  40d6a8:	sub	x0, x0, x22
  40d6ac:	cmp	x0, x27
  40d6b0:	b.le	40d604 <argp_error@@Base+0x1430>
  40d6b4:	mov	w0, #0xa                   	// #10
  40d6b8:	strb	w0, [x22], #1
  40d6bc:	mov	x21, x20
  40d6c0:	mov	x20, x22
  40d6c4:	ldr	x1, [x19, #24]
  40d6c8:	sub	x0, x23, x20
  40d6cc:	cmp	x0, x1
  40d6d0:	b.ge	40d7a8 <argp_error@@Base+0x15d4>  // b.tcont
  40d6d4:	add	x0, x25, #0x1
  40d6d8:	add	x0, x21, x0
  40d6dc:	cmp	x23, x0
  40d6e0:	b.ne	40d6f4 <argp_error@@Base+0x1520>  // b.any
  40d6e4:	ldr	x0, [x19, #64]
  40d6e8:	sub	x0, x0, x23
  40d6ec:	cmp	x1, x0
  40d6f0:	b.le	40d7a8 <argp_error@@Base+0x15d4>
  40d6f4:	mov	x22, #0x0                   	// #0
  40d6f8:	cmp	x1, #0x0
  40d6fc:	b.le	40d730 <argp_error@@Base+0x155c>
  40d700:	ldr	x0, [x19]
  40d704:	ldr	x1, [x0, #40]
  40d708:	ldr	x2, [x0, #48]
  40d70c:	cmp	x1, x2
  40d710:	b.cs	40d7d8 <argp_error@@Base+0x1604>  // b.hs, b.nlast
  40d714:	add	x2, x1, #0x1
  40d718:	str	x2, [x0, #40]
  40d71c:	strb	w26, [x1]
  40d720:	add	x22, x22, #0x1
  40d724:	ldr	x0, [x19, #24]
  40d728:	cmp	x0, x22
  40d72c:	b.gt	40d700 <argp_error@@Base+0x152c>
  40d730:	cmp	x20, x23
  40d734:	b.cc	40d7e4 <argp_error@@Base+0x1610>  // b.lo, b.ul, b.last
  40d738:	sub	x23, x23, x21
  40d73c:	sub	x25, x25, x23
  40d740:	add	x25, x20, x25
  40d744:	str	x25, [x19, #56]
  40d748:	ldr	x0, [x19, #24]
  40d74c:	cmp	x0, #0x0
  40d750:	csinv	x0, x0, xzr, ne  // ne = any
  40d754:	str	x0, [x19, #40]
  40d758:	b	40d460 <argp_error@@Base+0x128c>
  40d75c:	sub	x24, x24, x23
  40d760:	mov	x0, x1
  40d764:	mov	x2, x24
  40d768:	mov	x1, x23
  40d76c:	add	x0, x22, x0
  40d770:	bl	401ab0 <memmove@plt>
  40d774:	ldr	x23, [x19, #24]
  40d778:	add	x23, x23, #0x1
  40d77c:	add	x23, x22, x23
  40d780:	add	x24, x23, x24
  40d784:	sub	x25, x24, x20
  40d788:	mov	w0, #0xa                   	// #10
  40d78c:	strb	w0, [x22], #1
  40d790:	mov	x21, x20
  40d794:	mov	x20, x22
  40d798:	b	40d6c4 <argp_error@@Base+0x14f0>
  40d79c:	mov	w1, w28
  40d7a0:	bl	401ce0 <__overflow@plt>
  40d7a4:	b	40d660 <argp_error@@Base+0x148c>
  40d7a8:	add	x0, x20, #0x1
  40d7ac:	mvn	x3, x20
  40d7b0:	cmp	x1, #0x0
  40d7b4:	b.le	40d730 <argp_error@@Base+0x155c>
  40d7b8:	mov	x20, x0
  40d7bc:	sturb	w26, [x0, #-1]
  40d7c0:	add	x0, x0, #0x1
  40d7c4:	add	x1, x3, x0
  40d7c8:	ldr	x2, [x19, #24]
  40d7cc:	cmp	x2, x1
  40d7d0:	b.gt	40d7b8 <argp_error@@Base+0x15e4>
  40d7d4:	b	40d730 <argp_error@@Base+0x155c>
  40d7d8:	mov	w1, #0x20                  	// #32
  40d7dc:	bl	401ce0 <__overflow@plt>
  40d7e0:	b	40d720 <argp_error@@Base+0x154c>
  40d7e4:	add	x2, x21, x25
  40d7e8:	sub	x2, x2, x23
  40d7ec:	mov	x1, x23
  40d7f0:	mov	x0, x20
  40d7f4:	bl	401ab0 <memmove@plt>
  40d7f8:	b	40d738 <argp_error@@Base+0x1564>
  40d7fc:	ldp	x21, x22, [sp, #32]
  40d800:	ldp	x23, x24, [sp, #48]
  40d804:	ldp	x25, x26, [sp, #64]
  40d808:	ldp	x27, x28, [sp, #80]
  40d80c:	ldr	x0, [x19, #56]
  40d810:	ldr	x1, [x19, #48]
  40d814:	sub	x0, x0, x1
  40d818:	str	x0, [x19, #32]
  40d81c:	ldp	x19, x20, [sp, #16]
  40d820:	ldp	x29, x30, [sp], #96
  40d824:	ret
  40d828:	mov	x0, x22
  40d82c:	b	40d530 <argp_error@@Base+0x135c>
  40d830:	ldr	x24, [x19, #56]
  40d834:	sub	x25, x24, x20
  40d838:	mov	x2, x25
  40d83c:	mov	w1, w28
  40d840:	mov	x0, x20
  40d844:	bl	401dd0 <memchr@plt>
  40d848:	mov	x21, x0
  40d84c:	b	40d3f8 <argp_error@@Base+0x1224>
  40d850:	stp	x29, x30, [sp, #-32]!
  40d854:	mov	x29, sp
  40d858:	str	x19, [sp, #16]
  40d85c:	mov	x19, x0
  40d860:	bl	40d358 <argp_error@@Base+0x1184>
  40d864:	ldr	x2, [x19, #56]
  40d868:	ldr	x0, [x19, #48]
  40d86c:	cmp	x2, x0
  40d870:	b.ls	40d884 <argp_error@@Base+0x16b0>  // b.plast
  40d874:	ldr	x3, [x19]
  40d878:	sub	x2, x2, x0
  40d87c:	mov	x1, #0x1                   	// #1
  40d880:	bl	401ae0 <fwrite_unlocked@plt>
  40d884:	ldr	x0, [x19, #48]
  40d888:	bl	401d30 <free@plt>
  40d88c:	mov	x0, x19
  40d890:	bl	401d30 <free@plt>
  40d894:	ldr	x19, [sp, #16]
  40d898:	ldp	x29, x30, [sp], #32
  40d89c:	ret
  40d8a0:	stp	x29, x30, [sp, #-32]!
  40d8a4:	mov	x29, sp
  40d8a8:	stp	x19, x20, [sp, #16]
  40d8ac:	mov	x19, x0
  40d8b0:	mov	x20, x1
  40d8b4:	ldr	x0, [x0, #64]
  40d8b8:	ldr	x1, [x19, #56]
  40d8bc:	sub	x0, x0, x1
  40d8c0:	cmp	x0, x20
  40d8c4:	b.cc	40d8d8 <argp_error@@Base+0x1704>  // b.lo, b.ul, b.last
  40d8c8:	mov	w0, #0x1                   	// #1
  40d8cc:	ldp	x19, x20, [sp, #16]
  40d8d0:	ldp	x29, x30, [sp], #32
  40d8d4:	ret
  40d8d8:	mov	x0, x19
  40d8dc:	bl	40d358 <argp_error@@Base+0x1184>
  40d8e0:	ldr	x0, [x19, #48]
  40d8e4:	ldr	x2, [x19, #56]
  40d8e8:	ldr	x3, [x19]
  40d8ec:	sub	x2, x2, x0
  40d8f0:	mov	x1, #0x1                   	// #1
  40d8f4:	bl	401ae0 <fwrite_unlocked@plt>
  40d8f8:	mov	x1, x0
  40d8fc:	ldr	x2, [x19, #56]
  40d900:	ldr	x0, [x19, #48]
  40d904:	sub	x3, x2, x0
  40d908:	cmp	x3, x1
  40d90c:	b.ne	40d930 <argp_error@@Base+0x175c>  // b.any
  40d910:	str	x0, [x19, #56]
  40d914:	str	xzr, [x19, #32]
  40d918:	ldr	x1, [x19, #64]
  40d91c:	sub	x1, x1, x0
  40d920:	cmp	x1, x20
  40d924:	b.cc	40d958 <argp_error@@Base+0x1784>  // b.lo, b.ul, b.last
  40d928:	mov	w0, #0x1                   	// #1
  40d92c:	b	40d8cc <argp_error@@Base+0x16f8>
  40d930:	sub	x2, x2, x1
  40d934:	str	x2, [x19, #56]
  40d938:	ldr	x3, [x19, #32]
  40d93c:	sub	x3, x3, x1
  40d940:	str	x3, [x19, #32]
  40d944:	sub	x2, x2, x0
  40d948:	add	x1, x0, x1
  40d94c:	bl	401ab0 <memmove@plt>
  40d950:	mov	w0, #0x0                   	// #0
  40d954:	b	40d8cc <argp_error@@Base+0x16f8>
  40d958:	adds	x20, x1, x20
  40d95c:	b.cc	40d974 <argp_error@@Base+0x17a0>  // b.lo, b.ul, b.last
  40d960:	bl	401ea0 <__errno_location@plt>
  40d964:	mov	w1, #0xc                   	// #12
  40d968:	str	w1, [x0]
  40d96c:	mov	w0, #0x0                   	// #0
  40d970:	b	40d8cc <argp_error@@Base+0x16f8>
  40d974:	mov	x1, x20
  40d978:	bl	401c70 <realloc@plt>
  40d97c:	cbz	x0, 40d960 <argp_error@@Base+0x178c>
  40d980:	str	x0, [x19, #48]
  40d984:	add	x20, x0, x20
  40d988:	str	x20, [x19, #64]
  40d98c:	str	x0, [x19, #56]
  40d990:	mov	w0, #0x1                   	// #1
  40d994:	b	40d8cc <argp_error@@Base+0x16f8>
  40d998:	stp	x29, x30, [sp, #-304]!
  40d99c:	mov	x29, sp
  40d9a0:	stp	x19, x20, [sp, #16]
  40d9a4:	stp	x21, x22, [sp, #32]
  40d9a8:	stp	x23, x24, [sp, #48]
  40d9ac:	mov	x20, x0
  40d9b0:	mov	x21, x1
  40d9b4:	str	x2, [sp, #256]
  40d9b8:	str	x3, [sp, #264]
  40d9bc:	str	x4, [sp, #272]
  40d9c0:	str	x5, [sp, #280]
  40d9c4:	str	x6, [sp, #288]
  40d9c8:	str	x7, [sp, #296]
  40d9cc:	str	q0, [sp, #128]
  40d9d0:	str	q1, [sp, #144]
  40d9d4:	str	q2, [sp, #160]
  40d9d8:	str	q3, [sp, #176]
  40d9dc:	str	q4, [sp, #192]
  40d9e0:	str	q5, [sp, #208]
  40d9e4:	str	q6, [sp, #224]
  40d9e8:	str	q7, [sp, #240]
  40d9ec:	mov	x1, #0x96                  	// #150
  40d9f0:	add	x24, sp, #0x100
  40d9f4:	mov	w23, #0xffffffd0            	// #-48
  40d9f8:	mov	w22, #0xffffff80            	// #-128
  40d9fc:	mov	x0, x20
  40da00:	bl	40d8a0 <argp_error@@Base+0x16cc>
  40da04:	cbz	w0, 40da64 <argp_error@@Base+0x1890>
  40da08:	add	x0, sp, #0x130
  40da0c:	str	x0, [sp, #96]
  40da10:	str	x0, [sp, #104]
  40da14:	str	x24, [sp, #112]
  40da18:	str	w23, [sp, #120]
  40da1c:	str	w22, [sp, #124]
  40da20:	ldr	x0, [x20, #56]
  40da24:	ldr	x19, [x20, #64]
  40da28:	sub	x19, x19, x0
  40da2c:	ldp	x2, x3, [sp, #96]
  40da30:	stp	x2, x3, [sp, #64]
  40da34:	ldp	x2, x3, [sp, #112]
  40da38:	stp	x2, x3, [sp, #80]
  40da3c:	add	x3, sp, #0x40
  40da40:	mov	x2, x21
  40da44:	mov	x1, x19
  40da48:	bl	401e40 <vsnprintf@plt>
  40da4c:	sxtw	x1, w0
  40da50:	cmp	x19, w0, sxtw
  40da54:	b.hi	40da7c <argp_error@@Base+0x18a8>  // b.pmore
  40da58:	add	w0, w0, #0x1
  40da5c:	sxtw	x1, w0
  40da60:	b	40d9fc <argp_error@@Base+0x1828>
  40da64:	mov	x0, #0xffffffffffffffff    	// #-1
  40da68:	ldp	x19, x20, [sp, #16]
  40da6c:	ldp	x21, x22, [sp, #32]
  40da70:	ldp	x23, x24, [sp, #48]
  40da74:	ldp	x29, x30, [sp], #304
  40da78:	ret
  40da7c:	ldr	x2, [x20, #56]
  40da80:	add	x1, x2, x1
  40da84:	str	x1, [x20, #56]
  40da88:	sxtw	x0, w0
  40da8c:	b	40da68 <argp_error@@Base+0x1894>
  40da90:	stp	x29, x30, [sp, #-64]!
  40da94:	mov	x29, sp
  40da98:	stp	x19, x20, [sp, #16]
  40da9c:	adrp	x20, 424000 <argp_error@@Base+0x17e2c>
  40daa0:	add	x20, x20, #0xdf0
  40daa4:	stp	x21, x22, [sp, #32]
  40daa8:	adrp	x21, 424000 <argp_error@@Base+0x17e2c>
  40daac:	add	x21, x21, #0xde8
  40dab0:	sub	x20, x20, x21
  40dab4:	mov	w22, w0
  40dab8:	stp	x23, x24, [sp, #48]
  40dabc:	mov	x23, x1
  40dac0:	mov	x24, x2
  40dac4:	bl	401a60 <memcpy@plt-0x40>
  40dac8:	cmp	xzr, x20, asr #3
  40dacc:	b.eq	40daf8 <argp_error@@Base+0x1924>  // b.none
  40dad0:	asr	x20, x20, #3
  40dad4:	mov	x19, #0x0                   	// #0
  40dad8:	ldr	x3, [x21, x19, lsl #3]
  40dadc:	mov	x2, x24
  40dae0:	add	x19, x19, #0x1
  40dae4:	mov	x1, x23
  40dae8:	mov	w0, w22
  40daec:	blr	x3
  40daf0:	cmp	x20, x19
  40daf4:	b.ne	40dad8 <argp_error@@Base+0x1904>  // b.any
  40daf8:	ldp	x19, x20, [sp, #16]
  40dafc:	ldp	x21, x22, [sp, #32]
  40db00:	ldp	x23, x24, [sp, #48]
  40db04:	ldp	x29, x30, [sp], #64
  40db08:	ret
  40db0c:	nop
  40db10:	ret

Disassembly of section .fini:

000000000040db14 <.fini>:
  40db14:	stp	x29, x30, [sp, #-16]!
  40db18:	mov	x29, sp
  40db1c:	ldp	x29, x30, [sp], #16
  40db20:	ret
