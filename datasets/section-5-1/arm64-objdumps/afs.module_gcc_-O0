
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//afs.module_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_fs_register>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	str	x0, [sp, #24]
       c:	ldr	x1, [sp, #24]
      10:	adrp	x0, 0 <grub_fs_register>
      14:	add	x0, x0, #0x0
      18:	ldr	x0, [x0]
      1c:	bl	0 <grub_list_push>
      20:	nop
      24:	ldp	x29, x30, [sp], #32
      28:	ret
      2c:	nop
	...

0000000000000038 <grub_fs_unregister>:
      38:	stp	x29, x30, [sp, #-32]!
      3c:	mov	x29, sp
      40:	str	x0, [sp, #24]
      44:	ldr	x0, [sp, #24]
      48:	bl	0 <grub_list_remove>
      4c:	nop
      50:	ldp	x29, x30, [sp], #32
      54:	ret

0000000000000058 <grub_memcpy>:
      58:	stp	x29, x30, [sp, #-48]!
      5c:	mov	x29, sp
      60:	str	x0, [sp, #40]
      64:	str	x1, [sp, #32]
      68:	str	x2, [sp, #24]
      6c:	ldr	x2, [sp, #24]
      70:	ldr	x1, [sp, #32]
      74:	ldr	x0, [sp, #40]
      78:	bl	0 <grub_memmove>
      7c:	ldp	x29, x30, [sp], #48
      80:	ret

0000000000000084 <read_extent>:
      84:	stp	x29, x30, [sp, #-80]!
      88:	mov	x29, sp
      8c:	str	x0, [sp, #72]
      90:	str	x1, [sp, #64]
      94:	str	x2, [sp, #56]
      98:	str	x3, [sp, #48]
      9c:	str	x4, [sp, #40]
      a0:	str	x5, [sp, #32]
      a4:	str	x6, [sp, #24]
      a8:	ldr	x0, [sp, #56]
      ac:	ldr	w1, [x0]
      b0:	ldr	x0, [sp, #64]
      b4:	ldr	w0, [x0, #76]
      b8:	sub	w0, w0, #0x9
      bc:	lsl	w0, w1, w0
      c0:	mov	w1, w0
      c4:	ldr	x0, [sp, #56]
      c8:	ldrh	w0, [x0, #4]
      cc:	and	x2, x0, #0xffff
      d0:	ldr	x0, [sp, #48]
      d4:	add	x2, x2, x0
      d8:	ldr	x0, [sp, #64]
      dc:	ldr	w0, [x0, #44]
      e0:	sub	w0, w0, #0x9
      e4:	lsl	x0, x2, x0
      e8:	add	x0, x1, x0
      ec:	ldr	x4, [sp, #32]
      f0:	ldr	x3, [sp, #24]
      f4:	ldr	x2, [sp, #40]
      f8:	mov	x1, x0
      fc:	ldr	x0, [sp, #72]
     100:	bl	0 <grub_disk_read>
     104:	ldp	x29, x30, [sp], #80
     108:	ret

000000000000010c <read_bfs_file>:
     10c:	stp	x29, x30, [sp, #-272]!
     110:	mov	x29, sp
     114:	str	x0, [sp, #72]
     118:	str	x1, [sp, #64]
     11c:	str	x2, [sp, #56]
     120:	str	x3, [sp, #48]
     124:	str	x4, [sp, #40]
     128:	str	x5, [sp, #32]
     12c:	str	x6, [sp, #24]
     130:	str	x7, [sp, #16]
     134:	ldr	x0, [sp, #32]
     138:	cmp	x0, #0x0
     13c:	b.ne	148 <read_bfs_file+0x3c>  // b.any
     140:	mov	w0, #0x0                   	// #0
     144:	b	950 <read_bfs_file+0x844>
     148:	ldr	x1, [sp, #48]
     14c:	ldr	x0, [sp, #32]
     150:	add	x1, x1, x0
     154:	ldr	x0, [sp, #56]
     158:	ldur	x0, [x0, #212]
     15c:	cmp	x1, x0
     160:	b.ls	17c <read_bfs_file+0x70>  // b.plast
     164:	adrp	x0, 0 <grub_fs_register>
     168:	add	x0, x0, #0x0
     16c:	ldr	x1, [x0]
     170:	mov	w0, #0xb                   	// #11
     174:	bl	0 <grub_error>
     178:	b	950 <read_bfs_file+0x844>
     17c:	ldr	x0, [sp, #56]
     180:	ldur	x1, [x0, #172]
     184:	ldr	x0, [sp, #64]
     188:	ldr	w0, [x0, #44]
     18c:	lsl	x0, x1, x0
     190:	ldr	x1, [sp, #48]
     194:	cmp	x1, x0
     198:	b.cs	2f0 <read_bfs_file+0x1e4>  // b.hs, b.nlast
     19c:	str	xzr, [sp, #256]
     1a0:	str	wzr, [sp, #268]
     1a4:	b	2e4 <read_bfs_file+0x1d8>
     1a8:	ldr	x1, [sp, #56]
     1ac:	ldr	w0, [sp, #268]
     1b0:	add	x0, x0, #0x8
     1b4:	lsl	x0, x0, #3
     1b8:	add	x0, x1, x0
     1bc:	ldrh	w0, [x0, #18]
     1c0:	and	x1, x0, #0xffff
     1c4:	ldr	x0, [sp, #64]
     1c8:	ldr	w0, [x0, #44]
     1cc:	lsl	x0, x1, x0
     1d0:	ldr	x1, [sp, #256]
     1d4:	add	x0, x1, x0
     1d8:	str	x0, [sp, #192]
     1dc:	ldr	x1, [sp, #192]
     1e0:	ldr	x0, [sp, #48]
     1e4:	cmp	x1, x0
     1e8:	b.ls	2d0 <read_bfs_file+0x1c4>  // b.plast
     1ec:	ldr	x1, [sp, #192]
     1f0:	ldr	x0, [sp, #48]
     1f4:	sub	x0, x1, x0
     1f8:	str	x0, [sp, #248]
     1fc:	ldr	x1, [sp, #248]
     200:	ldr	x0, [sp, #32]
     204:	cmp	x1, x0
     208:	b.ls	214 <read_bfs_file+0x108>  // b.plast
     20c:	ldr	x0, [sp, #32]
     210:	str	x0, [sp, #248]
     214:	ldr	x0, [sp, #72]
     218:	ldr	x1, [sp, #24]
     21c:	str	x1, [x0, #48]
     220:	ldr	x0, [sp, #72]
     224:	ldr	x1, [sp, #16]
     228:	str	x1, [x0, #56]
     22c:	ldr	w0, [sp, #268]
     230:	add	x0, x0, #0x8
     234:	lsl	x0, x0, #3
     238:	ldr	x1, [sp, #56]
     23c:	add	x0, x1, x0
     240:	add	x2, x0, #0xc
     244:	ldr	x1, [sp, #48]
     248:	ldr	x0, [sp, #256]
     24c:	sub	x0, x1, x0
     250:	ldr	x6, [sp, #248]
     254:	ldr	x5, [sp, #40]
     258:	mov	x4, x0
     25c:	mov	x3, #0x0                   	// #0
     260:	ldr	x1, [sp, #64]
     264:	ldr	x0, [sp, #72]
     268:	bl	84 <read_extent>
     26c:	str	w0, [sp, #188]
     270:	ldr	x0, [sp, #72]
     274:	str	xzr, [x0, #48]
     278:	ldr	w0, [sp, #188]
     27c:	cmp	w0, #0x0
     280:	b.eq	28c <read_bfs_file+0x180>  // b.none
     284:	ldr	w0, [sp, #188]
     288:	b	950 <read_bfs_file+0x844>
     28c:	ldr	x1, [sp, #48]
     290:	ldr	x0, [sp, #248]
     294:	add	x0, x1, x0
     298:	str	x0, [sp, #48]
     29c:	ldr	x1, [sp, #32]
     2a0:	ldr	x0, [sp, #248]
     2a4:	sub	x0, x1, x0
     2a8:	str	x0, [sp, #32]
     2ac:	ldr	x1, [sp, #40]
     2b0:	ldr	x0, [sp, #248]
     2b4:	add	x0, x1, x0
     2b8:	str	x0, [sp, #40]
     2bc:	ldr	x0, [sp, #32]
     2c0:	cmp	x0, #0x0
     2c4:	b.ne	2d0 <read_bfs_file+0x1c4>  // b.any
     2c8:	mov	w0, #0x0                   	// #0
     2cc:	b	950 <read_bfs_file+0x844>
     2d0:	ldr	x0, [sp, #192]
     2d4:	str	x0, [sp, #256]
     2d8:	ldr	w0, [sp, #268]
     2dc:	add	w0, w0, #0x1
     2e0:	str	w0, [sp, #268]
     2e4:	ldr	w0, [sp, #268]
     2e8:	cmp	w0, #0xb
     2ec:	b.ls	1a8 <read_bfs_file+0x9c>  // b.plast
     2f0:	ldr	x0, [sp, #56]
     2f4:	ldur	x1, [x0, #172]
     2f8:	ldr	x0, [sp, #64]
     2fc:	ldr	w0, [x0, #44]
     300:	lsl	x0, x1, x0
     304:	ldr	x1, [sp, #48]
     308:	cmp	x1, x0
     30c:	b.cs	328 <read_bfs_file+0x21c>  // b.hs, b.nlast
     310:	adrp	x0, 0 <grub_fs_register>
     314:	add	x0, x0, #0x0
     318:	ldr	x1, [x0]
     31c:	mov	w0, #0x9                   	// #9
     320:	bl	0 <grub_error>
     324:	b	950 <read_bfs_file+0x844>
     328:	ldr	x0, [sp, #56]
     32c:	ldur	x1, [x0, #188]
     330:	ldr	x0, [sp, #64]
     334:	ldr	w0, [x0, #44]
     338:	lsl	x0, x1, x0
     33c:	ldr	x1, [sp, #48]
     340:	cmp	x1, x0
     344:	b.cs	544 <read_bfs_file+0x438>  // b.hs, b.nlast
     348:	ldr	x0, [sp, #56]
     34c:	ldur	x1, [x0, #172]
     350:	ldr	x0, [sp, #64]
     354:	ldr	w0, [x0, #44]
     358:	lsl	x0, x1, x0
     35c:	str	x0, [sp, #232]
     360:	ldr	x0, [sp, #56]
     364:	ldrh	w0, [x0, #186]
     368:	and	x1, x0, #0xffff
     36c:	ldr	x0, [sp, #64]
     370:	ldr	w0, [x0, #44]
     374:	sub	w0, w0, #0x3
     378:	lsl	x0, x1, x0
     37c:	str	x0, [sp, #176]
     380:	ldr	x0, [sp, #176]
     384:	lsl	x0, x0, #3
     388:	bl	0 <grub_malloc>
     38c:	str	x0, [sp, #168]
     390:	ldr	x0, [sp, #168]
     394:	cmp	x0, #0x0
     398:	b.ne	3b0 <read_bfs_file+0x2a4>  // b.any
     39c:	adrp	x0, 0 <grub_fs_register>
     3a0:	add	x0, x0, #0x0
     3a4:	ldr	x0, [x0]
     3a8:	ldr	w0, [x0]
     3ac:	b	950 <read_bfs_file+0x844>
     3b0:	ldr	x0, [sp, #56]
     3b4:	add	x1, x0, #0xb4
     3b8:	ldr	x0, [sp, #176]
     3bc:	lsl	x0, x0, #3
     3c0:	mov	x6, x0
     3c4:	ldr	x5, [sp, #168]
     3c8:	mov	x4, #0x0                   	// #0
     3cc:	mov	x3, #0x0                   	// #0
     3d0:	mov	x2, x1
     3d4:	ldr	x1, [sp, #64]
     3d8:	ldr	x0, [sp, #72]
     3dc:	bl	84 <read_extent>
     3e0:	str	w0, [sp, #164]
     3e4:	str	wzr, [sp, #244]
     3e8:	b	52c <read_bfs_file+0x420>
     3ec:	ldr	w0, [sp, #244]
     3f0:	lsl	x0, x0, #3
     3f4:	ldr	x1, [sp, #168]
     3f8:	add	x0, x1, x0
     3fc:	ldrh	w0, [x0, #6]
     400:	and	x1, x0, #0xffff
     404:	ldr	x0, [sp, #64]
     408:	ldr	w0, [x0, #44]
     40c:	lsl	x0, x1, x0
     410:	ldr	x1, [sp, #232]
     414:	add	x0, x1, x0
     418:	str	x0, [sp, #152]
     41c:	ldr	x1, [sp, #152]
     420:	ldr	x0, [sp, #48]
     424:	cmp	x1, x0
     428:	b.ls	518 <read_bfs_file+0x40c>  // b.plast
     42c:	ldr	x1, [sp, #152]
     430:	ldr	x0, [sp, #48]
     434:	sub	x0, x1, x0
     438:	str	x0, [sp, #224]
     43c:	ldr	x1, [sp, #224]
     440:	ldr	x0, [sp, #32]
     444:	cmp	x1, x0
     448:	b.ls	454 <read_bfs_file+0x348>  // b.plast
     44c:	ldr	x0, [sp, #32]
     450:	str	x0, [sp, #224]
     454:	ldr	x0, [sp, #72]
     458:	ldr	x1, [sp, #24]
     45c:	str	x1, [x0, #48]
     460:	ldr	x0, [sp, #72]
     464:	ldr	x1, [sp, #16]
     468:	str	x1, [x0, #56]
     46c:	ldr	w0, [sp, #244]
     470:	lsl	x0, x0, #3
     474:	ldr	x1, [sp, #168]
     478:	add	x2, x1, x0
     47c:	ldr	x1, [sp, #48]
     480:	ldr	x0, [sp, #232]
     484:	sub	x0, x1, x0
     488:	ldr	x6, [sp, #224]
     48c:	ldr	x5, [sp, #40]
     490:	mov	x4, x0
     494:	mov	x3, #0x0                   	// #0
     498:	ldr	x1, [sp, #64]
     49c:	ldr	x0, [sp, #72]
     4a0:	bl	84 <read_extent>
     4a4:	str	w0, [sp, #164]
     4a8:	ldr	x0, [sp, #72]
     4ac:	str	xzr, [x0, #48]
     4b0:	ldr	w0, [sp, #164]
     4b4:	cmp	w0, #0x0
     4b8:	b.eq	4cc <read_bfs_file+0x3c0>  // b.none
     4bc:	ldr	x0, [sp, #168]
     4c0:	bl	0 <grub_free>
     4c4:	ldr	w0, [sp, #164]
     4c8:	b	950 <read_bfs_file+0x844>
     4cc:	ldr	x1, [sp, #48]
     4d0:	ldr	x0, [sp, #224]
     4d4:	add	x0, x1, x0
     4d8:	str	x0, [sp, #48]
     4dc:	ldr	x1, [sp, #32]
     4e0:	ldr	x0, [sp, #224]
     4e4:	sub	x0, x1, x0
     4e8:	str	x0, [sp, #32]
     4ec:	ldr	x1, [sp, #40]
     4f0:	ldr	x0, [sp, #224]
     4f4:	add	x0, x1, x0
     4f8:	str	x0, [sp, #40]
     4fc:	ldr	x0, [sp, #32]
     500:	cmp	x0, #0x0
     504:	b.ne	518 <read_bfs_file+0x40c>  // b.any
     508:	ldr	x0, [sp, #168]
     50c:	bl	0 <grub_free>
     510:	mov	w0, #0x0                   	// #0
     514:	b	950 <read_bfs_file+0x844>
     518:	ldr	x0, [sp, #152]
     51c:	str	x0, [sp, #232]
     520:	ldr	w0, [sp, #244]
     524:	add	w0, w0, #0x1
     528:	str	w0, [sp, #244]
     52c:	ldr	w0, [sp, #244]
     530:	ldr	x1, [sp, #176]
     534:	cmp	x1, x0
     538:	b.hi	3ec <read_bfs_file+0x2e0>  // b.pmore
     53c:	ldr	x0, [sp, #168]
     540:	bl	0 <grub_free>
     544:	ldr	x0, [sp, #56]
     548:	ldur	x1, [x0, #188]
     54c:	ldr	x0, [sp, #64]
     550:	ldr	w0, [x0, #44]
     554:	lsl	x0, x1, x0
     558:	ldr	x1, [sp, #48]
     55c:	cmp	x1, x0
     560:	b.cs	57c <read_bfs_file+0x470>  // b.hs, b.nlast
     564:	adrp	x0, 0 <grub_fs_register>
     568:	add	x0, x0, #0x0
     56c:	ldr	x1, [x0]
     570:	mov	w0, #0x9                   	// #9
     574:	bl	0 <grub_error>
     578:	b	950 <read_bfs_file+0x844>
     57c:	mov	x0, #0xffffffffffffffff    	// #-1
     580:	str	x0, [sp, #208]
     584:	ldr	x0, [sp, #56]
     588:	ldrh	w0, [x0, #202]
     58c:	and	x1, x0, #0xffff
     590:	ldr	x0, [sp, #64]
     594:	ldr	w0, [x0, #44]
     598:	sub	w0, w0, #0x3
     59c:	lsl	x0, x1, x0
     5a0:	str	x0, [sp, #144]
     5a4:	ldr	x0, [sp, #144]
     5a8:	lsl	x0, x0, #3
     5ac:	bl	0 <grub_malloc>
     5b0:	str	x0, [sp, #136]
     5b4:	ldr	x0, [sp, #136]
     5b8:	cmp	x0, #0x0
     5bc:	b.ne	5d4 <read_bfs_file+0x4c8>  // b.any
     5c0:	adrp	x0, 0 <grub_fs_register>
     5c4:	add	x0, x0, #0x0
     5c8:	ldr	x0, [x0]
     5cc:	ldr	w0, [x0]
     5d0:	b	950 <read_bfs_file+0x844>
     5d4:	str	xzr, [sp, #216]
     5d8:	ldr	x0, [sp, #64]
     5dc:	ldr	w0, [x0, #44]
     5e0:	add	w0, w0, #0x2
     5e4:	mov	w1, #0x1                   	// #1
     5e8:	lsl	w0, w1, w0
     5ec:	sxtw	x0, w0
     5f0:	bl	0 <grub_malloc>
     5f4:	str	x0, [sp, #128]
     5f8:	ldr	x0, [sp, #128]
     5fc:	cmp	x0, #0x0
     600:	b.ne	620 <read_bfs_file+0x514>  // b.any
     604:	ldr	x0, [sp, #136]
     608:	bl	0 <grub_free>
     60c:	adrp	x0, 0 <grub_fs_register>
     610:	add	x0, x0, #0x0
     614:	ldr	x0, [x0]
     618:	ldr	w0, [x0]
     61c:	b	950 <read_bfs_file+0x844>
     620:	ldr	x0, [sp, #56]
     624:	add	x1, x0, #0xc4
     628:	ldr	x0, [sp, #144]
     62c:	lsl	x0, x0, #3
     630:	mov	x6, x0
     634:	ldr	x5, [sp, #136]
     638:	mov	x4, #0x0                   	// #0
     63c:	mov	x3, #0x0                   	// #0
     640:	mov	x2, x1
     644:	ldr	x1, [sp, #64]
     648:	ldr	x0, [sp, #72]
     64c:	bl	84 <read_extent>
     650:	str	w0, [sp, #124]
     654:	ldr	w0, [sp, #124]
     658:	cmp	w0, #0x0
     65c:	b.eq	940 <read_bfs_file+0x834>  // b.none
     660:	ldr	x0, [sp, #136]
     664:	bl	0 <grub_free>
     668:	ldr	x0, [sp, #128]
     66c:	bl	0 <grub_free>
     670:	ldr	w0, [sp, #124]
     674:	b	950 <read_bfs_file+0x844>
     678:	ldr	x0, [sp, #56]
     67c:	ldur	x0, [x0, #188]
     680:	ldr	x1, [sp, #48]
     684:	sub	x0, x1, x0
     688:	str	x0, [sp, #112]
     68c:	ldr	x0, [sp, #64]
     690:	ldr	w0, [x0, #44]
     694:	add	w0, w0, #0x2
     698:	mov	w1, #0x1                   	// #1
     69c:	lsl	w0, w1, w0
     6a0:	sub	w0, w0, #0x1
     6a4:	sxtw	x0, w0
     6a8:	ldr	x1, [sp, #112]
     6ac:	and	x0, x1, x0
     6b0:	str	x0, [sp, #104]
     6b4:	ldr	x0, [sp, #64]
     6b8:	ldr	w0, [x0, #44]
     6bc:	add	w0, w0, #0x2
     6c0:	ldr	x1, [sp, #112]
     6c4:	lsr	x1, x1, x0
     6c8:	ldr	x0, [sp, #64]
     6cc:	ldr	w0, [x0, #44]
     6d0:	sub	w0, w0, #0x1
     6d4:	mov	w2, #0x1                   	// #1
     6d8:	lsl	w0, w2, w0
     6dc:	sub	w0, w0, #0x1
     6e0:	sxtw	x0, w0
     6e4:	and	x0, x1, x0
     6e8:	str	x0, [sp, #96]
     6ec:	ldr	x0, [sp, #64]
     6f0:	ldr	w0, [x0, #44]
     6f4:	lsl	w0, w0, #1
     6f8:	add	w0, w0, #0x1
     6fc:	ldr	x1, [sp, #112]
     700:	lsr	x0, x1, x0
     704:	str	x0, [sp, #88]
     708:	ldr	x1, [sp, #88]
     70c:	ldr	x0, [sp, #144]
     710:	cmp	x1, x0
     714:	b.ls	740 <read_bfs_file+0x634>  // b.plast
     718:	ldr	x0, [sp, #136]
     71c:	bl	0 <grub_free>
     720:	ldr	x0, [sp, #128]
     724:	bl	0 <grub_free>
     728:	adrp	x0, 0 <grub_fs_register>
     72c:	add	x0, x0, #0x0
     730:	ldr	x1, [x0]
     734:	mov	w0, #0x9                   	// #9
     738:	bl	0 <grub_error>
     73c:	b	950 <read_bfs_file+0x844>
     740:	ldr	x1, [sp, #88]
     744:	ldr	x0, [sp, #208]
     748:	cmp	x1, x0
     74c:	b.eq	824 <read_bfs_file+0x718>  // b.none
     750:	ldr	x0, [sp, #88]
     754:	lsl	x0, x0, #3
     758:	ldr	x1, [sp, #136]
     75c:	add	x0, x1, x0
     760:	ldrh	w0, [x0, #6]
     764:	and	x1, x0, #0xffff
     768:	ldr	x0, [sp, #64]
     76c:	ldr	w0, [x0, #44]
     770:	sub	w0, w0, #0x3
     774:	lsl	x0, x1, x0
     778:	str	x0, [sp, #216]
     77c:	ldr	x0, [sp, #64]
     780:	ldr	w0, [x0, #44]
     784:	sub	w0, w0, #0x1
     788:	mov	w1, #0x1                   	// #1
     78c:	lsl	w0, w1, w0
     790:	mov	w0, w0
     794:	ldr	x1, [sp, #216]
     798:	cmp	x1, x0
     79c:	b.ls	7bc <read_bfs_file+0x6b0>  // b.plast
     7a0:	ldr	x0, [sp, #64]
     7a4:	ldr	w0, [x0, #44]
     7a8:	sub	w0, w0, #0x1
     7ac:	mov	w1, #0x1                   	// #1
     7b0:	lsl	w0, w1, w0
     7b4:	sxtw	x0, w0
     7b8:	str	x0, [sp, #216]
     7bc:	ldr	x0, [sp, #88]
     7c0:	lsl	x0, x0, #3
     7c4:	ldr	x1, [sp, #136]
     7c8:	add	x1, x1, x0
     7cc:	ldr	x0, [sp, #216]
     7d0:	lsl	x0, x0, #3
     7d4:	mov	x6, x0
     7d8:	ldr	x5, [sp, #128]
     7dc:	mov	x4, #0x0                   	// #0
     7e0:	mov	x3, #0x0                   	// #0
     7e4:	mov	x2, x1
     7e8:	ldr	x1, [sp, #64]
     7ec:	ldr	x0, [sp, #72]
     7f0:	bl	84 <read_extent>
     7f4:	str	w0, [sp, #124]
     7f8:	ldr	w0, [sp, #124]
     7fc:	cmp	w0, #0x0
     800:	b.eq	81c <read_bfs_file+0x710>  // b.none
     804:	ldr	x0, [sp, #136]
     808:	bl	0 <grub_free>
     80c:	ldr	x0, [sp, #128]
     810:	bl	0 <grub_free>
     814:	ldr	w0, [sp, #124]
     818:	b	950 <read_bfs_file+0x844>
     81c:	ldr	x0, [sp, #88]
     820:	str	x0, [sp, #208]
     824:	ldr	x1, [sp, #96]
     828:	ldr	x0, [sp, #216]
     82c:	cmp	x1, x0
     830:	b.ls	85c <read_bfs_file+0x750>  // b.plast
     834:	ldr	x0, [sp, #136]
     838:	bl	0 <grub_free>
     83c:	ldr	x0, [sp, #128]
     840:	bl	0 <grub_free>
     844:	adrp	x0, 0 <grub_fs_register>
     848:	add	x0, x0, #0x0
     84c:	ldr	x1, [x0]
     850:	mov	w0, #0x9                   	// #9
     854:	bl	0 <grub_error>
     858:	b	950 <read_bfs_file+0x844>
     85c:	ldr	x0, [sp, #64]
     860:	ldr	w0, [x0, #44]
     864:	add	w0, w0, #0x2
     868:	mov	w1, #0x1                   	// #1
     86c:	lsl	w0, w1, w0
     870:	sxtw	x1, w0
     874:	ldr	x0, [sp, #104]
     878:	sub	x0, x1, x0
     87c:	str	x0, [sp, #200]
     880:	ldr	x1, [sp, #200]
     884:	ldr	x0, [sp, #32]
     888:	cmp	x1, x0
     88c:	b.ls	898 <read_bfs_file+0x78c>  // b.plast
     890:	ldr	x0, [sp, #32]
     894:	str	x0, [sp, #200]
     898:	ldr	x0, [sp, #72]
     89c:	ldr	x1, [sp, #24]
     8a0:	str	x1, [x0, #48]
     8a4:	ldr	x0, [sp, #72]
     8a8:	ldr	x1, [sp, #16]
     8ac:	str	x1, [x0, #56]
     8b0:	ldr	x0, [sp, #96]
     8b4:	lsl	x0, x0, #3
     8b8:	ldr	x1, [sp, #128]
     8bc:	add	x0, x1, x0
     8c0:	ldr	x6, [sp, #200]
     8c4:	ldr	x5, [sp, #40]
     8c8:	ldr	x4, [sp, #104]
     8cc:	mov	x3, #0x0                   	// #0
     8d0:	mov	x2, x0
     8d4:	ldr	x1, [sp, #64]
     8d8:	ldr	x0, [sp, #72]
     8dc:	bl	84 <read_extent>
     8e0:	str	w0, [sp, #124]
     8e4:	ldr	x0, [sp, #72]
     8e8:	str	xzr, [x0, #48]
     8ec:	ldr	w0, [sp, #124]
     8f0:	cmp	w0, #0x0
     8f4:	b.eq	910 <read_bfs_file+0x804>  // b.none
     8f8:	ldr	x0, [sp, #136]
     8fc:	bl	0 <grub_free>
     900:	ldr	x0, [sp, #128]
     904:	bl	0 <grub_free>
     908:	ldr	w0, [sp, #124]
     90c:	b	950 <read_bfs_file+0x844>
     910:	ldr	x1, [sp, #48]
     914:	ldr	x0, [sp, #200]
     918:	add	x0, x1, x0
     91c:	str	x0, [sp, #48]
     920:	ldr	x1, [sp, #32]
     924:	ldr	x0, [sp, #200]
     928:	sub	x0, x1, x0
     92c:	str	x0, [sp, #32]
     930:	ldr	x1, [sp, #40]
     934:	ldr	x0, [sp, #200]
     938:	add	x0, x1, x0
     93c:	str	x0, [sp, #40]
     940:	ldr	x0, [sp, #32]
     944:	cmp	x0, #0x0
     948:	b.ne	678 <read_bfs_file+0x56c>  // b.any
     94c:	mov	w0, #0x0                   	// #0
     950:	ldp	x29, x30, [sp], #272
     954:	ret
	...

0000000000000980 <read_b_node>:
     980:	stp	x29, x30, [sp, #-144]!
     984:	mov	x29, sp
     988:	str	x0, [sp, #72]
     98c:	str	x1, [sp, #64]
     990:	str	x2, [sp, #56]
     994:	str	x3, [sp, #48]
     998:	str	x4, [sp, #40]
     99c:	str	x5, [sp, #32]
     9a0:	str	x6, [sp, #24]
     9a4:	str	x7, [sp, #16]
     9a8:	ldr	x0, [sp, #40]
     9ac:	str	xzr, [x0]
     9b0:	ldr	x0, [sp, #32]
     9b4:	str	xzr, [x0]
     9b8:	ldr	x0, [sp, #24]
     9bc:	str	xzr, [x0]
     9c0:	ldr	x0, [sp, #16]
     9c4:	str	xzr, [x0]
     9c8:	add	x0, sp, #0x58
     9cc:	mov	x7, #0x0                   	// #0
     9d0:	mov	x6, #0x0                   	// #0
     9d4:	mov	x5, #0x20                  	// #32
     9d8:	mov	x4, x0
     9dc:	ldr	x3, [sp, #48]
     9e0:	ldr	x2, [sp, #56]
     9e4:	ldr	x1, [sp, #64]
     9e8:	ldr	x0, [sp, #72]
     9ec:	bl	10c <read_bfs_file>
     9f0:	str	w0, [sp, #140]
     9f4:	ldr	w0, [sp, #140]
     9f8:	cmp	w0, #0x0
     9fc:	b.eq	a08 <read_b_node+0x88>  // b.none
     a00:	ldr	w0, [sp, #140]
     a04:	b	b08 <read_b_node+0x188>
     a08:	ldr	w0, [sp, #116]
     a0c:	mov	w0, w0
     a10:	add	x0, x0, #0x23
     a14:	and	x2, x0, #0xfffffffffffffffc
     a18:	ldr	w0, [sp, #112]
     a1c:	mov	w1, w0
     a20:	mov	x0, x1
     a24:	lsl	x0, x0, #2
     a28:	add	x0, x0, x1
     a2c:	lsl	x0, x0, #1
     a30:	add	x0, x2, x0
     a34:	str	x0, [sp, #128]
     a38:	ldr	x0, [sp, #128]
     a3c:	bl	0 <grub_malloc>
     a40:	str	x0, [sp, #120]
     a44:	ldr	x0, [sp, #120]
     a48:	cmp	x0, #0x0
     a4c:	b.ne	a64 <read_b_node+0xe4>  // b.any
     a50:	adrp	x0, 0 <grub_fs_register>
     a54:	add	x0, x0, #0x0
     a58:	ldr	x0, [x0]
     a5c:	ldr	w0, [x0]
     a60:	b	b08 <read_b_node+0x188>
     a64:	mov	x7, #0x0                   	// #0
     a68:	mov	x6, #0x0                   	// #0
     a6c:	ldr	x5, [sp, #128]
     a70:	ldr	x4, [sp, #120]
     a74:	ldr	x3, [sp, #48]
     a78:	ldr	x2, [sp, #56]
     a7c:	ldr	x1, [sp, #64]
     a80:	ldr	x0, [sp, #72]
     a84:	bl	10c <read_bfs_file>
     a88:	str	w0, [sp, #140]
     a8c:	ldr	w0, [sp, #140]
     a90:	cmp	w0, #0x0
     a94:	b.eq	aa8 <read_b_node+0x128>  // b.none
     a98:	ldr	x0, [sp, #120]
     a9c:	bl	0 <grub_free>
     aa0:	ldr	w0, [sp, #140]
     aa4:	b	b08 <read_b_node+0x188>
     aa8:	ldr	x0, [sp, #40]
     aac:	ldr	x1, [sp, #120]
     ab0:	str	x1, [x0]
     ab4:	ldr	x0, [sp, #120]
     ab8:	add	x1, x0, #0x20
     abc:	ldr	x0, [sp, #32]
     ac0:	str	x1, [x0]
     ac4:	ldr	w0, [sp, #116]
     ac8:	mov	w0, w0
     acc:	add	x0, x0, #0x23
     ad0:	and	x0, x0, #0xfffffffffffffffc
     ad4:	ldr	x1, [sp, #120]
     ad8:	add	x1, x1, x0
     adc:	ldr	x0, [sp, #24]
     ae0:	str	x1, [x0]
     ae4:	ldr	x0, [sp, #24]
     ae8:	ldr	x1, [x0]
     aec:	ldr	w0, [sp, #112]
     af0:	mov	w0, w0
     af4:	lsl	x0, x0, #1
     af8:	add	x1, x1, x0
     afc:	ldr	x0, [sp, #16]
     b00:	str	x1, [x0]
     b04:	mov	w0, #0x0                   	// #0
     b08:	ldp	x29, x30, [sp], #144
     b0c:	ret
	...

0000000000000b18 <iterate_in_b_tree>:
     b18:	stp	x29, x30, [sp, #-208]!
     b1c:	mov	x29, sp
     b20:	str	x0, [sp, #56]
     b24:	str	x1, [sp, #48]
     b28:	str	x2, [sp, #40]
     b2c:	str	x3, [sp, #32]
     b30:	str	x4, [sp, #24]
     b34:	add	x0, sp, #0x90
     b38:	mov	x7, #0x0                   	// #0
     b3c:	mov	x6, #0x0                   	// #0
     b40:	mov	x5, #0x20                  	// #32
     b44:	mov	x4, x0
     b48:	mov	x3, #0x0                   	// #0
     b4c:	ldr	x2, [sp, #40]
     b50:	ldr	x1, [sp, #48]
     b54:	ldr	x0, [sp, #56]
     b58:	bl	10c <read_bfs_file>
     b5c:	str	w0, [sp, #180]
     b60:	ldr	w0, [sp, #180]
     b64:	cmp	w0, #0x0
     b68:	b.eq	b74 <iterate_in_b_tree+0x5c>  // b.none
     b6c:	mov	w0, #0x0                   	// #0
     b70:	b	db4 <iterate_in_b_tree+0x29c>
     b74:	ldur	x0, [sp, #148]
     b78:	str	x0, [sp, #192]
     b7c:	ldr	w0, [sp, #156]
     b80:	sub	w0, w0, #0x1
     b84:	str	w0, [sp, #204]
     b88:	b	c3c <iterate_in_b_tree+0x124>
     b8c:	add	x0, sp, #0x48
     b90:	mov	x7, #0x0                   	// #0
     b94:	mov	x6, #0x0                   	// #0
     b98:	mov	x5, #0x20                  	// #32
     b9c:	mov	x4, x0
     ba0:	ldr	x3, [sp, #192]
     ba4:	ldr	x2, [sp, #40]
     ba8:	ldr	x1, [sp, #48]
     bac:	ldr	x0, [sp, #56]
     bb0:	bl	10c <read_bfs_file>
     bb4:	str	w0, [sp, #180]
     bb8:	ldr	w0, [sp, #180]
     bbc:	cmp	w0, #0x0
     bc0:	b.eq	bcc <iterate_in_b_tree+0xb4>  // b.none
     bc4:	mov	w0, #0x0                   	// #0
     bc8:	b	db4 <iterate_in_b_tree+0x29c>
     bcc:	ldr	w0, [sp, #100]
     bd0:	mov	w0, w0
     bd4:	add	x0, x0, #0x23
     bd8:	and	x1, x0, #0xfffffffffffffffc
     bdc:	ldr	x0, [sp, #192]
     be0:	add	x1, x1, x0
     be4:	ldr	w0, [sp, #96]
     be8:	mov	w0, w0
     bec:	lsl	x0, x0, #1
     bf0:	add	x0, x1, x0
     bf4:	add	x1, sp, #0x88
     bf8:	mov	x7, #0x0                   	// #0
     bfc:	mov	x6, #0x0                   	// #0
     c00:	mov	x5, #0x8                   	// #8
     c04:	mov	x4, x1
     c08:	mov	x3, x0
     c0c:	ldr	x2, [sp, #40]
     c10:	ldr	x1, [sp, #48]
     c14:	ldr	x0, [sp, #56]
     c18:	bl	10c <read_bfs_file>
     c1c:	str	w0, [sp, #180]
     c20:	ldr	w0, [sp, #180]
     c24:	cmp	w0, #0x0
     c28:	b.eq	c34 <iterate_in_b_tree+0x11c>  // b.none
     c2c:	mov	w0, #0x0                   	// #0
     c30:	b	db4 <iterate_in_b_tree+0x29c>
     c34:	ldr	x0, [sp, #136]
     c38:	str	x0, [sp, #192]
     c3c:	ldr	w0, [sp, #204]
     c40:	sub	w1, w0, #0x1
     c44:	str	w1, [sp, #204]
     c48:	cmp	w0, #0x0
     c4c:	b.ne	b8c <iterate_in_b_tree+0x74>  // b.any
     c50:	strh	wzr, [sp, #178]
     c54:	strh	wzr, [sp, #186]
     c58:	add	x3, sp, #0x68
     c5c:	add	x2, sp, #0x70
     c60:	add	x1, sp, #0x78
     c64:	add	x0, sp, #0x80
     c68:	mov	x7, x3
     c6c:	mov	x6, x2
     c70:	mov	x5, x1
     c74:	mov	x4, x0
     c78:	ldr	x3, [sp, #192]
     c7c:	ldr	x2, [sp, #40]
     c80:	ldr	x1, [sp, #48]
     c84:	ldr	x0, [sp, #56]
     c88:	bl	980 <read_b_node>
     c8c:	str	w0, [sp, #180]
     c90:	ldr	w0, [sp, #180]
     c94:	cmp	w0, #0x0
     c98:	b.eq	ca4 <iterate_in_b_tree+0x18c>  // b.none
     c9c:	mov	w0, #0x0                   	// #0
     ca0:	b	db4 <iterate_in_b_tree+0x29c>
     ca4:	str	wzr, [sp, #188]
     ca8:	b	d7c <iterate_in_b_tree+0x264>
     cac:	ldrh	w0, [sp, #186]
     cb0:	strh	w0, [sp, #178]
     cb4:	ldr	x1, [sp, #112]
     cb8:	ldr	w0, [sp, #188]
     cbc:	lsl	x0, x0, #1
     cc0:	add	x0, x1, x0
     cc4:	ldrh	w0, [x0]
     cc8:	strh	w0, [sp, #186]
     ccc:	ldr	x0, [sp, #128]
     cd0:	ldr	w1, [x0, #28]
     cd4:	ldrh	w0, [sp, #186]
     cd8:	cmp	w1, w0
     cdc:	b.hi	cec <iterate_in_b_tree+0x1d4>  // b.pmore
     ce0:	ldr	x0, [sp, #128]
     ce4:	ldr	w0, [x0, #28]
     ce8:	strh	w0, [sp, #186]
     cec:	ldr	x1, [sp, #120]
     cf0:	ldrh	w0, [sp, #186]
     cf4:	add	x0, x1, x0
     cf8:	ldrb	w0, [x0]
     cfc:	strb	w0, [sp, #177]
     d00:	ldr	x1, [sp, #120]
     d04:	ldrh	w0, [sp, #186]
     d08:	add	x0, x1, x0
     d0c:	strb	wzr, [x0]
     d10:	ldr	x1, [sp, #120]
     d14:	ldrh	w0, [sp, #178]
     d18:	add	x4, x1, x0
     d1c:	ldr	x1, [sp, #104]
     d20:	ldr	w0, [sp, #188]
     d24:	lsl	x0, x0, #3
     d28:	add	x0, x1, x0
     d2c:	ldr	x0, [x0]
     d30:	ldr	x3, [sp, #32]
     d34:	ldr	x2, [sp, #24]
     d38:	mov	x1, x0
     d3c:	mov	x0, x4
     d40:	blr	x3
     d44:	cmp	w0, #0x0
     d48:	b.eq	d5c <iterate_in_b_tree+0x244>  // b.none
     d4c:	ldr	x0, [sp, #128]
     d50:	bl	0 <grub_free>
     d54:	mov	w0, #0x1                   	// #1
     d58:	b	db4 <iterate_in_b_tree+0x29c>
     d5c:	ldr	x1, [sp, #120]
     d60:	ldrh	w0, [sp, #186]
     d64:	add	x0, x1, x0
     d68:	ldrb	w1, [sp, #177]
     d6c:	strb	w1, [x0]
     d70:	ldr	w0, [sp, #188]
     d74:	add	w0, w0, #0x1
     d78:	str	w0, [sp, #188]
     d7c:	ldr	x0, [sp, #128]
     d80:	ldr	w0, [x0, #24]
     d84:	ldr	w1, [sp, #188]
     d88:	cmp	w1, w0
     d8c:	b.cc	cac <iterate_in_b_tree+0x194>  // b.lo, b.ul, b.last
     d90:	ldr	x0, [sp, #128]
     d94:	ldr	x0, [x0, #8]
     d98:	str	x0, [sp, #192]
     d9c:	ldr	x0, [sp, #128]
     da0:	bl	0 <grub_free>
     da4:	ldr	x0, [sp, #192]
     da8:	cmn	x0, #0x1
     dac:	b.ne	c50 <iterate_in_b_tree+0x138>  // b.any
     db0:	mov	w0, #0x0                   	// #0
     db4:	ldp	x29, x30, [sp], #208
     db8:	ret

0000000000000dbc <bfs_strcmp>:
     dbc:	sub	sp, sp, #0x30
     dc0:	str	x0, [sp, #24]
     dc4:	str	x1, [sp, #16]
     dc8:	str	x2, [sp, #8]
     dcc:	b	e0c <bfs_strcmp+0x50>
     dd0:	ldr	x0, [sp, #24]
     dd4:	ldrb	w1, [x0]
     dd8:	ldr	x0, [sp, #16]
     ddc:	ldrb	w0, [x0]
     de0:	cmp	w1, w0
     de4:	b.ne	e2c <bfs_strcmp+0x70>  // b.any
     de8:	ldr	x0, [sp, #24]
     dec:	add	x0, x0, #0x1
     df0:	str	x0, [sp, #24]
     df4:	ldr	x0, [sp, #16]
     df8:	add	x0, x0, #0x1
     dfc:	str	x0, [sp, #16]
     e00:	ldr	x0, [sp, #8]
     e04:	sub	x0, x0, #0x1
     e08:	str	x0, [sp, #8]
     e0c:	ldr	x0, [sp, #16]
     e10:	ldrb	w0, [x0]
     e14:	cmp	w0, #0x0
     e18:	b.eq	e30 <bfs_strcmp+0x74>  // b.none
     e1c:	ldr	x0, [sp, #8]
     e20:	cmp	x0, #0x0
     e24:	b.ne	dd0 <bfs_strcmp+0x14>  // b.any
     e28:	b	e30 <bfs_strcmp+0x74>
     e2c:	nop
     e30:	ldr	x0, [sp, #8]
     e34:	cmp	x0, #0x0
     e38:	b.eq	e48 <bfs_strcmp+0x8c>  // b.none
     e3c:	ldr	x0, [sp, #24]
     e40:	ldrb	w0, [x0]
     e44:	b	e4c <bfs_strcmp+0x90>
     e48:	mov	w0, #0x0                   	// #0
     e4c:	strb	w0, [sp, #47]
     e50:	ldr	x0, [sp, #16]
     e54:	ldrb	w0, [x0]
     e58:	strb	w0, [sp, #46]
     e5c:	ldrsb	w0, [sp, #47]
     e60:	mov	w1, w0
     e64:	ldrsb	w0, [sp, #46]
     e68:	sub	w0, w1, w0
     e6c:	add	sp, sp, #0x30
     e70:	ret

0000000000000e74 <find_in_b_tree>:
     e74:	stp	x29, x30, [sp, #-176]!
     e78:	mov	x29, sp
     e7c:	str	x0, [sp, #56]
     e80:	str	x1, [sp, #48]
     e84:	str	x2, [sp, #40]
     e88:	str	x3, [sp, #32]
     e8c:	str	x4, [sp, #24]
     e90:	add	x0, sp, #0x60
     e94:	mov	x7, #0x0                   	// #0
     e98:	mov	x6, #0x0                   	// #0
     e9c:	mov	x5, #0x20                  	// #32
     ea0:	mov	x4, x0
     ea4:	mov	x3, #0x0                   	// #0
     ea8:	ldr	x2, [sp, #40]
     eac:	ldr	x1, [sp, #48]
     eb0:	ldr	x0, [sp, #56]
     eb4:	bl	10c <read_bfs_file>
     eb8:	str	w0, [sp, #140]
     ebc:	ldr	w0, [sp, #140]
     ec0:	cmp	w0, #0x0
     ec4:	b.eq	ed0 <find_in_b_tree+0x5c>  // b.none
     ec8:	ldr	w0, [sp, #140]
     ecc:	b	12f0 <find_in_b_tree+0x47c>
     ed0:	ldur	x0, [sp, #100]
     ed4:	str	x0, [sp, #160]
     ed8:	ldr	w0, [sp, #108]
     edc:	sub	w0, w0, #0x1
     ee0:	str	w0, [sp, #172]
     ee4:	add	x3, sp, #0x40
     ee8:	add	x2, sp, #0x48
     eec:	add	x1, sp, #0x50
     ef0:	add	x0, sp, #0x58
     ef4:	mov	x7, x3
     ef8:	mov	x6, x2
     efc:	mov	x5, x1
     f00:	mov	x4, x0
     f04:	ldr	x3, [sp, #160]
     f08:	ldr	x2, [sp, #40]
     f0c:	ldr	x1, [sp, #48]
     f10:	ldr	x0, [sp, #56]
     f14:	bl	980 <read_b_node>
     f18:	str	w0, [sp, #140]
     f1c:	ldr	w0, [sp, #140]
     f20:	cmp	w0, #0x0
     f24:	b.eq	f30 <find_in_b_tree+0xbc>  // b.none
     f28:	ldr	w0, [sp, #140]
     f2c:	b	12f0 <find_in_b_tree+0x47c>
     f30:	ldr	x0, [sp, #88]
     f34:	ldr	w0, [x0, #24]
     f38:	cmp	w0, #0x0
     f3c:	b.ne	f64 <find_in_b_tree+0xf0>  // b.any
     f40:	ldr	x0, [sp, #88]
     f44:	bl	0 <grub_free>
     f48:	ldr	x2, [sp, #32]
     f4c:	adrp	x0, 0 <grub_fs_register>
     f50:	add	x0, x0, #0x0
     f54:	ldr	x1, [x0]
     f58:	mov	w0, #0x5                   	// #5
     f5c:	bl	0 <grub_error>
     f60:	b	12f0 <find_in_b_tree+0x47c>
     f64:	str	wzr, [sp, #156]
     f68:	b	f78 <find_in_b_tree+0x104>
     f6c:	ldr	w0, [sp, #156]
     f70:	add	w0, w0, #0x1
     f74:	str	w0, [sp, #156]
     f78:	ldr	x0, [sp, #88]
     f7c:	ldr	w1, [x0, #24]
     f80:	ldr	w0, [sp, #156]
     f84:	lsr	w0, w1, w0
     f88:	cmp	w0, #0x0
     f8c:	b.ne	f6c <find_in_b_tree+0xf8>  // b.any
     f90:	str	wzr, [sp, #148]
     f94:	ldr	w0, [sp, #156]
     f98:	sub	w0, w0, #0x1
     f9c:	str	w0, [sp, #152]
     fa0:	b	1120 <find_in_b_tree+0x2ac>
     fa4:	strh	wzr, [sp, #134]
     fa8:	strh	wzr, [sp, #146]
     fac:	ldr	w0, [sp, #152]
     fb0:	mov	w1, #0x1                   	// #1
     fb4:	lsl	w0, w1, w0
     fb8:	mov	w1, w0
     fbc:	ldr	w0, [sp, #148]
     fc0:	orr	w1, w1, w0
     fc4:	ldr	x0, [sp, #88]
     fc8:	ldr	w0, [x0, #24]
     fcc:	cmp	w1, w0
     fd0:	b.cs	1110 <find_in_b_tree+0x29c>  // b.hs, b.nlast
     fd4:	ldr	x1, [sp, #72]
     fd8:	ldr	w0, [sp, #152]
     fdc:	mov	w2, #0x1                   	// #1
     fe0:	lsl	w0, w2, w0
     fe4:	mov	w2, w0
     fe8:	ldr	w0, [sp, #148]
     fec:	orr	w0, w2, w0
     ff0:	sub	w0, w0, #0x1
     ff4:	mov	w0, w0
     ff8:	lsl	x0, x0, #1
     ffc:	add	x0, x1, x0
    1000:	ldrh	w0, [x0]
    1004:	strh	w0, [sp, #134]
    1008:	ldr	x1, [sp, #72]
    100c:	ldr	w0, [sp, #152]
    1010:	mov	w2, #0x1                   	// #1
    1014:	lsl	w0, w2, w0
    1018:	mov	w2, w0
    101c:	ldr	w0, [sp, #148]
    1020:	orr	w0, w2, w0
    1024:	mov	w0, w0
    1028:	lsl	x0, x0, #1
    102c:	add	x0, x1, x0
    1030:	ldrh	w0, [x0]
    1034:	strh	w0, [sp, #146]
    1038:	ldr	x0, [sp, #88]
    103c:	ldr	w1, [x0, #28]
    1040:	ldrh	w0, [sp, #146]
    1044:	cmp	w1, w0
    1048:	b.hi	1058 <find_in_b_tree+0x1e4>  // b.pmore
    104c:	ldr	x0, [sp, #88]
    1050:	ldr	w0, [x0, #28]
    1054:	strh	w0, [sp, #146]
    1058:	ldr	x1, [sp, #80]
    105c:	ldrh	w0, [sp, #134]
    1060:	add	x3, x1, x0
    1064:	ldrh	w1, [sp, #146]
    1068:	ldrh	w0, [sp, #134]
    106c:	sub	w0, w1, w0
    1070:	sxtw	x0, w0
    1074:	mov	x2, x0
    1078:	ldr	x1, [sp, #32]
    107c:	mov	x0, x3
    1080:	bl	dbc <bfs_strcmp>
    1084:	str	w0, [sp, #128]
    1088:	ldr	w0, [sp, #128]
    108c:	cmp	w0, #0x0
    1090:	b.ne	10e4 <find_in_b_tree+0x270>  // b.any
    1094:	ldr	w0, [sp, #172]
    1098:	cmp	w0, #0x0
    109c:	b.ne	10e4 <find_in_b_tree+0x270>  // b.any
    10a0:	ldr	x1, [sp, #64]
    10a4:	ldr	w0, [sp, #152]
    10a8:	mov	w2, #0x1                   	// #1
    10ac:	lsl	w0, w2, w0
    10b0:	mov	w2, w0
    10b4:	ldr	w0, [sp, #148]
    10b8:	orr	w0, w2, w0
    10bc:	mov	w0, w0
    10c0:	lsl	x0, x0, #3
    10c4:	add	x0, x1, x0
    10c8:	ldr	x1, [x0]
    10cc:	ldr	x0, [sp, #24]
    10d0:	str	x1, [x0]
    10d4:	ldr	x0, [sp, #88]
    10d8:	bl	0 <grub_free>
    10dc:	mov	w0, #0x0                   	// #0
    10e0:	b	12f0 <find_in_b_tree+0x47c>
    10e4:	ldr	w0, [sp, #128]
    10e8:	cmp	w0, #0x0
    10ec:	b.gt	1114 <find_in_b_tree+0x2a0>
    10f0:	ldr	w0, [sp, #152]
    10f4:	mov	w1, #0x1                   	// #1
    10f8:	lsl	w0, w1, w0
    10fc:	mov	w1, w0
    1100:	ldr	w0, [sp, #148]
    1104:	orr	w0, w0, w1
    1108:	str	w0, [sp, #148]
    110c:	b	1114 <find_in_b_tree+0x2a0>
    1110:	nop
    1114:	ldr	w0, [sp, #152]
    1118:	sub	w0, w0, #0x1
    111c:	str	w0, [sp, #152]
    1120:	ldr	w0, [sp, #152]
    1124:	cmp	w0, #0x0
    1128:	b.ge	fa4 <find_in_b_tree+0x130>  // b.tcont
    112c:	ldr	w0, [sp, #148]
    1130:	cmp	w0, #0x0
    1134:	b.ne	1238 <find_in_b_tree+0x3c4>  // b.any
    1138:	strh	wzr, [sp, #144]
    113c:	ldr	x0, [sp, #72]
    1140:	ldrh	w0, [x0]
    1144:	strh	w0, [sp, #144]
    1148:	ldr	x0, [sp, #88]
    114c:	ldr	w1, [x0, #28]
    1150:	ldrh	w0, [sp, #144]
    1154:	cmp	w1, w0
    1158:	b.hi	1168 <find_in_b_tree+0x2f4>  // b.pmore
    115c:	ldr	x0, [sp, #88]
    1160:	ldr	w0, [x0, #28]
    1164:	strh	w0, [sp, #144]
    1168:	ldr	x0, [sp, #80]
    116c:	ldrh	w1, [sp, #144]
    1170:	mov	x2, x1
    1174:	ldr	x1, [sp, #32]
    1178:	bl	dbc <bfs_strcmp>
    117c:	str	w0, [sp, #136]
    1180:	ldr	w0, [sp, #136]
    1184:	cmp	w0, #0x0
    1188:	b.ne	11b8 <find_in_b_tree+0x344>  // b.any
    118c:	ldr	w0, [sp, #172]
    1190:	cmp	w0, #0x0
    1194:	b.ne	11b8 <find_in_b_tree+0x344>  // b.any
    1198:	ldr	x0, [sp, #64]
    119c:	ldr	x1, [x0]
    11a0:	ldr	x0, [sp, #24]
    11a4:	str	x1, [x0]
    11a8:	ldr	x0, [sp, #88]
    11ac:	bl	0 <grub_free>
    11b0:	mov	w0, #0x0                   	// #0
    11b4:	b	12f0 <find_in_b_tree+0x47c>
    11b8:	ldr	w0, [sp, #136]
    11bc:	cmp	w0, #0x0
    11c0:	b.le	11f4 <find_in_b_tree+0x380>
    11c4:	ldr	w0, [sp, #172]
    11c8:	cmp	w0, #0x0
    11cc:	b.eq	11f4 <find_in_b_tree+0x380>  // b.none
    11d0:	ldr	x0, [sp, #64]
    11d4:	ldr	x0, [x0]
    11d8:	str	x0, [sp, #160]
    11dc:	ldr	w0, [sp, #172]
    11e0:	sub	w0, w0, #0x1
    11e4:	str	w0, [sp, #172]
    11e8:	ldr	x0, [sp, #88]
    11ec:	bl	0 <grub_free>
    11f0:	b	12ec <find_in_b_tree+0x478>
    11f4:	ldr	w0, [sp, #172]
    11f8:	cmp	w0, #0x0
    11fc:	b.eq	1294 <find_in_b_tree+0x420>  // b.none
    1200:	ldr	x0, [sp, #88]
    1204:	ldr	w0, [x0, #24]
    1208:	cmp	w0, #0x1
    120c:	b.ls	1294 <find_in_b_tree+0x420>  // b.plast
    1210:	ldr	x0, [sp, #64]
    1214:	add	x0, x0, #0x8
    1218:	ldr	x0, [x0]
    121c:	str	x0, [sp, #160]
    1220:	ldr	w0, [sp, #172]
    1224:	sub	w0, w0, #0x1
    1228:	str	w0, [sp, #172]
    122c:	ldr	x0, [sp, #88]
    1230:	bl	0 <grub_free>
    1234:	b	12ec <find_in_b_tree+0x478>
    1238:	ldr	w0, [sp, #172]
    123c:	cmp	w0, #0x0
    1240:	b.eq	1294 <find_in_b_tree+0x420>  // b.none
    1244:	ldr	w0, [sp, #148]
    1248:	add	w1, w0, #0x1
    124c:	ldr	x0, [sp, #88]
    1250:	ldr	w0, [x0, #24]
    1254:	cmp	w1, w0
    1258:	b.cs	1294 <find_in_b_tree+0x420>  // b.hs, b.nlast
    125c:	ldr	x1, [sp, #64]
    1260:	ldr	w0, [sp, #148]
    1264:	add	w0, w0, #0x1
    1268:	mov	w0, w0
    126c:	lsl	x0, x0, #3
    1270:	add	x0, x1, x0
    1274:	ldr	x0, [x0]
    1278:	str	x0, [sp, #160]
    127c:	ldr	w0, [sp, #172]
    1280:	sub	w0, w0, #0x1
    1284:	str	w0, [sp, #172]
    1288:	ldr	x0, [sp, #88]
    128c:	bl	0 <grub_free>
    1290:	b	12ec <find_in_b_tree+0x478>
    1294:	ldr	x0, [sp, #88]
    1298:	ldr	x0, [x0, #16]
    129c:	cmn	x0, #0x1
    12a0:	b.eq	12c8 <find_in_b_tree+0x454>  // b.none
    12a4:	ldr	x0, [sp, #88]
    12a8:	ldr	x0, [x0, #16]
    12ac:	str	x0, [sp, #160]
    12b0:	ldr	w0, [sp, #172]
    12b4:	sub	w0, w0, #0x1
    12b8:	str	w0, [sp, #172]
    12bc:	ldr	x0, [sp, #88]
    12c0:	bl	0 <grub_free>
    12c4:	b	12ec <find_in_b_tree+0x478>
    12c8:	ldr	x0, [sp, #88]
    12cc:	bl	0 <grub_free>
    12d0:	ldr	x2, [sp, #32]
    12d4:	adrp	x0, 0 <grub_fs_register>
    12d8:	add	x0, x0, #0x0
    12dc:	ldr	x1, [x0]
    12e0:	mov	w0, #0x5                   	// #5
    12e4:	bl	0 <grub_error>
    12e8:	b	12f0 <find_in_b_tree+0x47c>
    12ec:	b	ee4 <find_in_b_tree+0x70>
    12f0:	ldp	x29, x30, [sp], #176
    12f4:	ret
	...

0000000000001300 <lookup_file>:
    1300:	stp	x29, x30, [sp, #-80]!
    1304:	mov	x29, sp
    1308:	str	x0, [sp, #40]
    130c:	str	x1, [sp, #32]
    1310:	str	x2, [sp, #24]
    1314:	str	x3, [sp, #16]
    1318:	str	xzr, [sp, #56]
    131c:	ldr	x0, [sp, #40]
    1320:	ldr	x5, [x0]
    1324:	ldr	x0, [sp, #40]
    1328:	ldr	x1, [x0, #8]
    132c:	ldr	x0, [sp, #40]
    1330:	add	x0, x0, #0x10
    1334:	add	x2, sp, #0x38
    1338:	mov	x4, x2
    133c:	ldr	x3, [sp, #32]
    1340:	mov	x2, x0
    1344:	mov	x0, x5
    1348:	bl	e74 <find_in_b_tree>
    134c:	str	w0, [sp, #76]
    1350:	ldr	w0, [sp, #76]
    1354:	cmp	w0, #0x0
    1358:	b.eq	1364 <lookup_file+0x64>  // b.none
    135c:	ldr	w0, [sp, #76]
    1360:	b	1484 <lookup_file+0x184>
    1364:	mov	x0, #0x100                 	// #256
    1368:	bl	0 <grub_malloc>
    136c:	mov	x1, x0
    1370:	ldr	x0, [sp, #24]
    1374:	str	x1, [x0]
    1378:	ldr	x0, [sp, #24]
    137c:	ldr	x0, [x0]
    1380:	cmp	x0, #0x0
    1384:	b.ne	139c <lookup_file+0x9c>  // b.any
    1388:	adrp	x0, 0 <grub_fs_register>
    138c:	add	x0, x0, #0x0
    1390:	ldr	x0, [x0]
    1394:	ldr	w0, [x0]
    1398:	b	1484 <lookup_file+0x184>
    139c:	ldr	x0, [sp, #24]
    13a0:	ldr	x0, [x0]
    13a4:	ldr	x1, [sp, #40]
    13a8:	ldr	x1, [x1]
    13ac:	str	x1, [x0]
    13b0:	ldr	x0, [sp, #24]
    13b4:	ldr	x0, [x0]
    13b8:	ldr	x1, [sp, #40]
    13bc:	ldr	x1, [x1, #8]
    13c0:	str	x1, [x0, #8]
    13c4:	ldr	x0, [sp, #24]
    13c8:	ldr	x0, [x0]
    13cc:	add	x0, x0, #0x10
    13d0:	str	x0, [sp, #64]
    13d4:	ldr	x0, [sp, #40]
    13d8:	ldr	x5, [x0]
    13dc:	ldr	x1, [sp, #56]
    13e0:	ldr	x0, [sp, #40]
    13e4:	ldr	x0, [x0, #8]
    13e8:	ldr	w0, [x0, #44]
    13ec:	sub	w0, w0, #0x9
    13f0:	lsl	x0, x1, x0
    13f4:	ldr	x4, [sp, #64]
    13f8:	mov	x3, #0xec                  	// #236
    13fc:	mov	x2, #0x0                   	// #0
    1400:	mov	x1, x0
    1404:	mov	x0, x5
    1408:	bl	0 <grub_disk_read>
    140c:	cmp	w0, #0x0
    1410:	b.eq	1434 <lookup_file+0x134>  // b.none
    1414:	ldr	x0, [sp, #24]
    1418:	ldr	x0, [x0]
    141c:	bl	0 <grub_free>
    1420:	adrp	x0, 0 <grub_fs_register>
    1424:	add	x0, x0, #0x0
    1428:	ldr	x0, [x0]
    142c:	ldr	w0, [x0]
    1430:	b	1484 <lookup_file+0x184>
    1434:	ldr	x0, [sp, #64]
    1438:	ldr	w0, [x0, #20]
    143c:	and	w0, w0, #0xe000
    1440:	cmp	w0, #0x4, lsl #12
    1444:	b.eq	1460 <lookup_file+0x160>  // b.none
    1448:	cmp	w0, #0xa, lsl #12
    144c:	b.eq	1470 <lookup_file+0x170>  // b.none
    1450:	ldr	x0, [sp, #16]
    1454:	mov	w1, #0x1                   	// #1
    1458:	str	w1, [x0]
    145c:	b	1480 <lookup_file+0x180>
    1460:	ldr	x0, [sp, #16]
    1464:	mov	w1, #0x2                   	// #2
    1468:	str	w1, [x0]
    146c:	b	1480 <lookup_file+0x180>
    1470:	ldr	x0, [sp, #16]
    1474:	mov	w1, #0x3                   	// #3
    1478:	str	w1, [x0]
    147c:	nop
    1480:	mov	w0, #0x0                   	// #0
    1484:	ldp	x29, x30, [sp], #80
    1488:	ret
    148c:	nop
	...

0000000000001498 <read_symlink>:
    1498:	stp	x29, x30, [sp, #-64]!
    149c:	mov	x29, sp
    14a0:	str	x0, [sp, #24]
    14a4:	str	xzr, [sp, #56]
    14a8:	ldr	x0, [sp, #24]
    14ac:	ldur	x0, [x0, #228]
    14b0:	str	x0, [sp, #48]
    14b4:	ldr	x0, [sp, #48]
    14b8:	add	x0, x0, #0x1
    14bc:	bl	0 <grub_malloc>
    14c0:	str	x0, [sp, #56]
    14c4:	ldr	x0, [sp, #56]
    14c8:	cmp	x0, #0x0
    14cc:	b.ne	14d8 <read_symlink+0x40>  // b.any
    14d0:	mov	x0, #0x0                   	// #0
    14d4:	b	1544 <read_symlink+0xac>
    14d8:	ldr	x0, [sp, #24]
    14dc:	ldr	x8, [x0]
    14e0:	ldr	x0, [sp, #24]
    14e4:	ldr	x1, [x0, #8]
    14e8:	ldr	x0, [sp, #24]
    14ec:	add	x0, x0, #0x10
    14f0:	mov	x7, #0x0                   	// #0
    14f4:	mov	x6, #0x0                   	// #0
    14f8:	ldr	x5, [sp, #48]
    14fc:	ldr	x4, [sp, #56]
    1500:	mov	x3, #0x0                   	// #0
    1504:	mov	x2, x0
    1508:	mov	x0, x8
    150c:	bl	10c <read_bfs_file>
    1510:	str	w0, [sp, #44]
    1514:	ldr	w0, [sp, #44]
    1518:	cmp	w0, #0x0
    151c:	b.eq	1530 <read_symlink+0x98>  // b.none
    1520:	ldr	x0, [sp, #56]
    1524:	bl	0 <grub_free>
    1528:	mov	x0, #0x0                   	// #0
    152c:	b	1544 <read_symlink+0xac>
    1530:	ldr	x1, [sp, #56]
    1534:	ldr	x0, [sp, #48]
    1538:	add	x0, x1, x0
    153c:	strb	wzr, [x0]
    1540:	ldr	x0, [sp, #56]
    1544:	ldp	x29, x30, [sp], #64
    1548:	ret

000000000000154c <find_file>:
    154c:	stp	x29, x30, [sp, #-336]!
    1550:	mov	x29, sp
    1554:	str	x0, [sp, #56]
    1558:	str	x1, [sp, #48]
    155c:	str	x2, [sp, #40]
    1560:	str	x3, [sp, #32]
    1564:	str	w4, [sp, #28]
    1568:	add	x0, sp, #0x48
    156c:	mov	x1, #0x100                 	// #256
    1570:	mov	x2, x1
    1574:	mov	w1, #0x0                   	// #0
    1578:	bl	0 <memset>
    157c:	ldr	x0, [sp, #48]
    1580:	str	x0, [sp, #72]
    1584:	ldr	x0, [sp, #40]
    1588:	str	x0, [sp, #80]
    158c:	ldr	x0, [sp, #40]
    1590:	add	x1, x0, #0x74
    1594:	add	x0, sp, #0x48
    1598:	add	x0, x0, #0x10
    159c:	mov	x6, #0xec                  	// #236
    15a0:	mov	x5, x0
    15a4:	mov	x4, #0x0                   	// #0
    15a8:	mov	x3, #0x0                   	// #0
    15ac:	mov	x2, x1
    15b0:	ldr	x1, [sp, #40]
    15b4:	ldr	x0, [sp, #48]
    15b8:	bl	84 <read_extent>
    15bc:	str	w0, [sp, #332]
    15c0:	ldr	w0, [sp, #332]
    15c4:	cmp	w0, #0x0
    15c8:	b.eq	15d4 <find_file+0x88>  // b.none
    15cc:	ldr	w0, [sp, #332]
    15d0:	b	1644 <find_file+0xf8>
    15d4:	add	x2, sp, #0x40
    15d8:	add	x1, sp, #0x48
    15dc:	ldr	w5, [sp, #28]
    15e0:	adrp	x0, 0 <grub_fs_register>
    15e4:	add	x0, x0, #0x0
    15e8:	ldr	x4, [x0]
    15ec:	adrp	x0, 0 <grub_fs_register>
    15f0:	add	x0, x0, #0x0
    15f4:	ldr	x3, [x0]
    15f8:	ldr	x0, [sp, #56]
    15fc:	bl	0 <grub_fshelp_find_file_lookup>
    1600:	str	w0, [sp, #332]
    1604:	ldr	w0, [sp, #332]
    1608:	cmp	w0, #0x0
    160c:	b.ne	1628 <find_file+0xdc>  // b.any
    1610:	ldr	x0, [sp, #64]
    1614:	add	x0, x0, #0x10
    1618:	mov	x2, #0xec                  	// #236
    161c:	mov	x1, x0
    1620:	ldr	x0, [sp, #32]
    1624:	bl	58 <grub_memcpy>
    1628:	ldr	x1, [sp, #64]
    162c:	add	x0, sp, #0x48
    1630:	cmp	x1, x0
    1634:	b.eq	1640 <find_file+0xf4>  // b.none
    1638:	ldr	x0, [sp, #64]
    163c:	bl	0 <grub_free>
    1640:	ldr	w0, [sp, #332]
    1644:	ldp	x29, x30, [sp], #336
    1648:	ret
    164c:	nop
	...

0000000000001660 <mount>:
    1660:	stp	x29, x30, [sp, #-48]!
    1664:	mov	x29, sp
    1668:	str	x0, [sp, #24]
    166c:	str	x1, [sp, #16]
    1670:	ldr	x4, [sp, #16]
    1674:	mov	x3, #0x7c                  	// #124
    1678:	mov	x2, #0x0                   	// #0
    167c:	mov	x1, #0x2                   	// #2
    1680:	ldr	x0, [sp, #24]
    1684:	bl	0 <grub_disk_read>
    1688:	str	w0, [sp, #44]
    168c:	ldr	w0, [sp, #44]
    1690:	cmp	w0, #0xb
    1694:	b.ne	16b0 <mount+0x50>  // b.any
    1698:	adrp	x0, 0 <grub_fs_register>
    169c:	add	x0, x0, #0x0
    16a0:	ldr	x1, [x0]
    16a4:	mov	w0, #0x9                   	// #9
    16a8:	bl	0 <grub_error>
    16ac:	b	1768 <mount+0x108>
    16b0:	ldr	w0, [sp, #44]
    16b4:	cmp	w0, #0x0
    16b8:	b.eq	16c4 <mount+0x64>  // b.none
    16bc:	ldr	w0, [sp, #44]
    16c0:	b	1768 <mount+0x108>
    16c4:	ldr	x0, [sp, #16]
    16c8:	ldr	w1, [x0, #32]
    16cc:	mov	w0, #0x5331                	// #21297
    16d0:	movk	w0, #0x4146, lsl #16
    16d4:	cmp	w1, w0
    16d8:	b.ne	174c <mount+0xec>  // b.any
    16dc:	ldr	x0, [sp, #16]
    16e0:	ldr	w1, [x0, #68]
    16e4:	mov	w0, #0x1031                	// #4145
    16e8:	movk	w0, #0xdd12, lsl #16
    16ec:	cmp	w1, w0
    16f0:	b.ne	174c <mount+0xec>  // b.any
    16f4:	ldr	x0, [sp, #16]
    16f8:	ldr	w1, [x0, #112]
    16fc:	mov	w0, #0x830e                	// #33550
    1700:	movk	w0, #0x15b6, lsl #16
    1704:	cmp	w1, w0
    1708:	b.ne	174c <mount+0xec>  // b.any
    170c:	ldr	x0, [sp, #16]
    1710:	ldr	w0, [x0, #40]
    1714:	cmp	w0, #0x0
    1718:	b.eq	174c <mount+0xec>  // b.none
    171c:	ldr	x0, [sp, #16]
    1720:	ldr	w1, [x0, #40]
    1724:	ldr	x0, [sp, #16]
    1728:	ldr	w0, [x0, #44]
    172c:	mov	w2, #0x1                   	// #1
    1730:	lsl	w0, w2, w0
    1734:	cmp	w1, w0
    1738:	b.ne	174c <mount+0xec>  // b.any
    173c:	ldr	x0, [sp, #16]
    1740:	ldr	w0, [x0, #44]
    1744:	cmp	w0, #0x8
    1748:	b.hi	1764 <mount+0x104>  // b.pmore
    174c:	adrp	x0, 0 <grub_fs_register>
    1750:	add	x0, x0, #0x0
    1754:	ldr	x1, [x0]
    1758:	mov	w0, #0x9                   	// #9
    175c:	bl	0 <grub_error>
    1760:	b	1768 <mount+0x108>
    1764:	mov	w0, #0x0                   	// #0
    1768:	ldp	x29, x30, [sp], #48
    176c:	ret
	...

0000000000001778 <grub_bfs_dir_iter>:
    1778:	stp	x29, x30, [sp, #-304]!
    177c:	mov	x29, sp
    1780:	str	x0, [sp, #40]
    1784:	str	x1, [sp, #32]
    1788:	str	x2, [sp, #24]
    178c:	ldr	x0, [sp, #24]
    1790:	ldr	x0, [x0]
    1794:	ldr	x5, [x0]
    1798:	ldr	x0, [sp, #24]
    179c:	ldr	w0, [x0, #68]
    17a0:	sub	w0, w0, #0x9
    17a4:	ldr	x1, [sp, #32]
    17a8:	lsl	x0, x1, x0
    17ac:	add	x1, sp, #0x40
    17b0:	mov	x4, x1
    17b4:	mov	x3, #0xec                  	// #236
    17b8:	mov	x2, #0x0                   	// #0
    17bc:	mov	x1, x0
    17c0:	mov	x0, x5
    17c4:	bl	0 <grub_disk_read>
    17c8:	str	w0, [sp, #300]
    17cc:	ldr	w0, [sp, #300]
    17d0:	cmp	w0, #0x0
    17d4:	b.eq	17e4 <grub_bfs_dir_iter+0x6c>  // b.none
    17d8:	bl	0 <grub_print_error>
    17dc:	mov	w0, #0x0                   	// #0
    17e0:	b	184c <grub_bfs_dir_iter+0xd4>
    17e4:	ldrb	w0, [sp, #48]
    17e8:	orr	w0, w0, #0x2
    17ec:	strb	w0, [sp, #48]
    17f0:	ldr	x0, [sp, #104]
    17f4:	mov	x2, #0x0                   	// #0
    17f8:	mov	x1, #0x4240                	// #16960
    17fc:	movk	x1, #0xf, lsl #16
    1800:	bl	0 <grub_divmod64>
    1804:	str	w0, [sp, #52]
    1808:	ldr	w0, [sp, #84]
    180c:	and	w0, w0, #0xe000
    1810:	cmp	w0, #0x4, lsl #12
    1814:	cset	w0, eq  // eq = none
    1818:	and	w1, w0, #0xff
    181c:	ldrb	w0, [sp, #48]
    1820:	bfxil	w0, w1, #0, #1
    1824:	strb	w0, [sp, #48]
    1828:	ldr	x0, [sp, #24]
    182c:	ldr	x3, [x0, #8]
    1830:	ldr	x0, [sp, #24]
    1834:	ldr	x1, [x0, #16]
    1838:	add	x0, sp, #0x30
    183c:	mov	x2, x1
    1840:	mov	x1, x0
    1844:	ldr	x0, [sp, #40]
    1848:	blr	x3
    184c:	ldp	x29, x30, [sp], #304
    1850:	ret

0000000000001854 <grub_bfs_dir>:
    1854:	stp	x29, x30, [sp, #-448]!
    1858:	mov	x29, sp
    185c:	str	x0, [sp, #40]
    1860:	str	x1, [sp, #32]
    1864:	str	x2, [sp, #24]
    1868:	str	x3, [sp, #16]
    186c:	stp	xzr, xzr, [sp, #288]
    1870:	stp	xzr, xzr, [sp, #304]
    1874:	stp	xzr, xzr, [sp, #320]
    1878:	stp	xzr, xzr, [sp, #336]
    187c:	stp	xzr, xzr, [sp, #352]
    1880:	stp	xzr, xzr, [sp, #368]
    1884:	stp	xzr, xzr, [sp, #384]
    1888:	stp	xzr, xzr, [sp, #400]
    188c:	stp	xzr, xzr, [sp, #416]
    1890:	str	xzr, [sp, #432]
    1894:	ldr	x0, [sp, #40]
    1898:	str	x0, [sp, #288]
    189c:	ldr	x0, [sp, #24]
    18a0:	str	x0, [sp, #296]
    18a4:	ldr	x0, [sp, #16]
    18a8:	str	x0, [sp, #304]
    18ac:	ldr	x0, [sp, #40]
    18b0:	ldr	x2, [x0]
    18b4:	add	x0, sp, #0x120
    18b8:	add	x0, x0, #0x18
    18bc:	mov	x1, x0
    18c0:	mov	x0, x2
    18c4:	bl	1660 <mount>
    18c8:	str	w0, [sp, #444]
    18cc:	ldr	w0, [sp, #444]
    18d0:	cmp	w0, #0x0
    18d4:	b.eq	18e0 <grub_bfs_dir+0x8c>  // b.none
    18d8:	ldr	w0, [sp, #444]
    18dc:	b	1960 <grub_bfs_dir+0x10c>
    18e0:	ldr	x0, [sp, #40]
    18e4:	ldr	x1, [x0]
    18e8:	add	x2, sp, #0x30
    18ec:	add	x0, sp, #0x120
    18f0:	add	x0, x0, #0x18
    18f4:	mov	w4, #0x2                   	// #2
    18f8:	mov	x3, x2
    18fc:	mov	x2, x0
    1900:	ldr	x0, [sp, #32]
    1904:	bl	154c <find_file>
    1908:	str	w0, [sp, #444]
    190c:	ldr	w0, [sp, #444]
    1910:	cmp	w0, #0x0
    1914:	b.eq	1920 <grub_bfs_dir+0xcc>  // b.none
    1918:	ldr	w0, [sp, #444]
    191c:	b	1960 <grub_bfs_dir+0x10c>
    1920:	ldr	x0, [sp, #40]
    1924:	ldr	x5, [x0]
    1928:	add	x3, sp, #0x120
    192c:	add	x2, sp, #0x30
    1930:	add	x0, sp, #0x120
    1934:	add	x1, x0, #0x18
    1938:	mov	x4, x3
    193c:	adrp	x0, 0 <grub_fs_register>
    1940:	add	x0, x0, #0x0
    1944:	ldr	x3, [x0]
    1948:	mov	x0, x5
    194c:	bl	b18 <iterate_in_b_tree>
    1950:	adrp	x0, 0 <grub_fs_register>
    1954:	add	x0, x0, #0x0
    1958:	ldr	x0, [x0]
    195c:	ldr	w0, [x0]
    1960:	ldp	x29, x30, [sp], #448
    1964:	ret
	...

0000000000001978 <grub_bfs_open>:
    1978:	stp	x29, x30, [sp, #-416]!
    197c:	mov	x29, sp
    1980:	str	x0, [sp, #24]
    1984:	str	x1, [sp, #16]
    1988:	ldr	x0, [sp, #24]
    198c:	ldr	x0, [x0, #8]
    1990:	ldr	x0, [x0]
    1994:	add	x1, sp, #0x110
    1998:	bl	1660 <mount>
    199c:	str	w0, [sp, #412]
    19a0:	ldr	w0, [sp, #412]
    19a4:	cmp	w0, #0x0
    19a8:	b.eq	19b4 <grub_bfs_open+0x3c>  // b.none
    19ac:	ldr	w0, [sp, #412]
    19b0:	b	1a74 <grub_bfs_open+0xfc>
    19b4:	ldr	x0, [sp, #24]
    19b8:	ldr	x0, [x0, #8]
    19bc:	ldr	x0, [x0]
    19c0:	add	x2, sp, #0x20
    19c4:	add	x1, sp, #0x110
    19c8:	mov	w4, #0x1                   	// #1
    19cc:	mov	x3, x2
    19d0:	mov	x2, x1
    19d4:	mov	x1, x0
    19d8:	ldr	x0, [sp, #16]
    19dc:	bl	154c <find_file>
    19e0:	str	w0, [sp, #412]
    19e4:	ldr	w0, [sp, #412]
    19e8:	cmp	w0, #0x0
    19ec:	b.eq	19f8 <grub_bfs_open+0x80>  // b.none
    19f0:	ldr	w0, [sp, #412]
    19f4:	b	1a74 <grub_bfs_open+0xfc>
    19f8:	mov	x0, #0x168                 	// #360
    19fc:	bl	0 <grub_zalloc>
    1a00:	str	x0, [sp, #400]
    1a04:	ldr	x0, [sp, #400]
    1a08:	cmp	x0, #0x0
    1a0c:	b.ne	1a24 <grub_bfs_open+0xac>  // b.any
    1a10:	adrp	x0, 0 <grub_fs_register>
    1a14:	add	x0, x0, #0x0
    1a18:	ldr	x0, [x0]
    1a1c:	ldr	w0, [x0]
    1a20:	b	1a74 <grub_bfs_open+0xfc>
    1a24:	ldr	x0, [sp, #400]
    1a28:	mov	x3, x0
    1a2c:	add	x0, sp, #0x110
    1a30:	mov	x1, #0x7c                  	// #124
    1a34:	mov	x2, x1
    1a38:	mov	x1, x0
    1a3c:	mov	x0, x3
    1a40:	bl	0 <memcpy>
    1a44:	ldr	x0, [sp, #400]
    1a48:	add	x0, x0, #0x7c
    1a4c:	add	x1, sp, #0x20
    1a50:	mov	x2, #0xec                  	// #236
    1a54:	bl	58 <grub_memcpy>
    1a58:	ldr	x0, [sp, #24]
    1a5c:	ldr	x1, [sp, #400]
    1a60:	str	x1, [x0, #80]
    1a64:	ldur	x1, [sp, #244]
    1a68:	ldr	x0, [sp, #24]
    1a6c:	str	x1, [x0, #64]
    1a70:	mov	w0, #0x0                   	// #0
    1a74:	ldp	x29, x30, [sp], #416
    1a78:	ret
    1a7c:	nop
	...

0000000000001a88 <grub_bfs_close>:
    1a88:	stp	x29, x30, [sp, #-32]!
    1a8c:	mov	x29, sp
    1a90:	str	x0, [sp, #24]
    1a94:	ldr	x0, [sp, #24]
    1a98:	ldr	x0, [x0, #80]
    1a9c:	bl	0 <grub_free>
    1aa0:	mov	w0, #0x0                   	// #0
    1aa4:	ldp	x29, x30, [sp], #32
    1aa8:	ret

0000000000001aac <grub_bfs_read>:
    1aac:	stp	x29, x30, [sp, #-64]!
    1ab0:	mov	x29, sp
    1ab4:	str	x0, [sp, #40]
    1ab8:	str	x1, [sp, #32]
    1abc:	str	x2, [sp, #24]
    1ac0:	ldr	x0, [sp, #40]
    1ac4:	ldr	x0, [x0, #80]
    1ac8:	str	x0, [sp, #56]
    1acc:	ldr	x0, [sp, #40]
    1ad0:	ldr	x0, [x0, #8]
    1ad4:	ldr	x8, [x0]
    1ad8:	ldr	x1, [sp, #56]
    1adc:	ldr	x0, [sp, #56]
    1ae0:	add	x2, x0, #0x7c
    1ae4:	ldr	x0, [sp, #40]
    1ae8:	ldr	x3, [x0, #24]
    1aec:	ldr	x0, [sp, #40]
    1af0:	ldr	x4, [x0, #88]
    1af4:	ldr	x0, [sp, #40]
    1af8:	ldr	x0, [x0, #96]
    1afc:	mov	x7, x0
    1b00:	mov	x6, x4
    1b04:	ldr	x5, [sp, #24]
    1b08:	ldr	x4, [sp, #32]
    1b0c:	mov	x0, x8
    1b10:	bl	10c <read_bfs_file>
    1b14:	str	w0, [sp, #52]
    1b18:	ldr	w0, [sp, #52]
    1b1c:	cmp	w0, #0x0
    1b20:	b.eq	1b2c <grub_bfs_read+0x80>  // b.none
    1b24:	mov	x0, #0xffffffffffffffff    	// #-1
    1b28:	b	1b30 <grub_bfs_read+0x84>
    1b2c:	ldr	x0, [sp, #24]
    1b30:	ldp	x29, x30, [sp], #64
    1b34:	ret

0000000000001b38 <grub_bfs_label>:
    1b38:	stp	x29, x30, [sp, #-160]!
    1b3c:	mov	x29, sp
    1b40:	str	x0, [sp, #24]
    1b44:	str	x1, [sp, #16]
    1b48:	ldr	x0, [sp, #16]
    1b4c:	str	xzr, [x0]
    1b50:	ldr	x0, [sp, #24]
    1b54:	ldr	x0, [x0]
    1b58:	add	x1, sp, #0x20
    1b5c:	bl	1660 <mount>
    1b60:	str	w0, [sp, #156]
    1b64:	ldr	w0, [sp, #156]
    1b68:	cmp	w0, #0x0
    1b6c:	b.eq	1b78 <grub_bfs_label+0x40>  // b.none
    1b70:	ldr	w0, [sp, #156]
    1b74:	b	1b94 <grub_bfs_label+0x5c>
    1b78:	add	x0, sp, #0x20
    1b7c:	mov	x1, #0x20                  	// #32
    1b80:	bl	0 <grub_strndup>
    1b84:	mov	x1, x0
    1b88:	ldr	x0, [sp, #16]
    1b8c:	str	x1, [x0]
    1b90:	mov	w0, #0x0                   	// #0
    1b94:	ldp	x29, x30, [sp], #160
    1b98:	ret

0000000000001b9c <grub_mod_init>:
    1b9c:	stp	x29, x30, [sp, #-32]!
    1ba0:	mov	x29, sp
    1ba4:	str	x0, [sp, #24]
    1ba8:	adrp	x0, 0 <grub_fs_register>
    1bac:	add	x0, x0, #0x0
    1bb0:	ldr	x0, [x0]
    1bb4:	bl	0 <grub_fs_register>
    1bb8:	nop
    1bbc:	ldp	x29, x30, [sp], #32
    1bc0:	ret
    1bc4:	nop
	...

0000000000001bd0 <grub_mod_fini>:
    1bd0:	stp	x29, x30, [sp, #-16]!
    1bd4:	mov	x29, sp
    1bd8:	adrp	x0, 0 <grub_fs_register>
    1bdc:	add	x0, x0, #0x0
    1be0:	ldr	x0, [x0]
    1be4:	bl	38 <grub_fs_unregister>
    1be8:	nop
    1bec:	ldp	x29, x30, [sp], #16
    1bf0:	ret
    1bf4:	nop
	...
