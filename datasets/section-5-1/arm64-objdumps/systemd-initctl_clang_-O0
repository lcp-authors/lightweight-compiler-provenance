
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-initctl_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400d68 <_init>:
  400d68:	stp	x29, x30, [sp, #-16]!
  400d6c:	mov	x29, sp
  400d70:	bl	400fe0 <call_weak_fn>
  400d74:	ldp	x29, x30, [sp], #16
  400d78:	ret

Disassembly of section .plt:

0000000000400d80 <__libc_start_main@plt-0x20>:
  400d80:	stp	x16, x30, [sp, #-16]!
  400d84:	adrp	x16, 41f000 <__FRAME_END__+0x1b760>
  400d88:	ldr	x17, [x16, #3840]
  400d8c:	add	x16, x16, #0xf00
  400d90:	br	x17
  400d94:	nop
  400d98:	nop
  400d9c:	nop

0000000000400da0 <__libc_start_main@plt>:
  400da0:	adrp	x16, 41f000 <__FRAME_END__+0x1b760>
  400da4:	ldr	x17, [x16, #3848]
  400da8:	add	x16, x16, #0xf08
  400dac:	br	x17

0000000000400db0 <abort@plt>:
  400db0:	adrp	x16, 41f000 <__FRAME_END__+0x1b760>
  400db4:	ldr	x17, [x16, #3856]
  400db8:	add	x16, x16, #0xf10
  400dbc:	br	x17

0000000000400dc0 <__gmon_start__@plt>:
  400dc0:	adrp	x16, 41f000 <__FRAME_END__+0x1b760>
  400dc4:	ldr	x17, [x16, #3864]
  400dc8:	add	x16, x16, #0xf18
  400dcc:	br	x17

0000000000400dd0 <getppid@plt>:
  400dd0:	adrp	x16, 41f000 <__FRAME_END__+0x1b760>
  400dd4:	ldr	x17, [x16, #3872]
  400dd8:	add	x16, x16, #0xf20
  400ddc:	br	x17

0000000000400de0 <log_get_max_level_realm@plt>:
  400de0:	adrp	x16, 41f000 <__FRAME_END__+0x1b760>
  400de4:	ldr	x17, [x16, #3880]
  400de8:	add	x16, x16, #0xf28
  400dec:	br	x17

0000000000400df0 <log_internal_realm@plt>:
  400df0:	adrp	x16, 41f000 <__FRAME_END__+0x1b760>
  400df4:	ldr	x17, [x16, #3888]
  400df8:	add	x16, x16, #0xf30
  400dfc:	br	x17

0000000000400e00 <abs@plt>:
  400e00:	adrp	x16, 41f000 <__FRAME_END__+0x1b760>
  400e04:	ldr	x17, [x16, #3896]
  400e08:	add	x16, x16, #0xf38
  400e0c:	br	x17

0000000000400e10 <log_setup_service@plt>:
  400e10:	adrp	x16, 41f000 <__FRAME_END__+0x1b760>
  400e14:	ldr	x17, [x16, #3904]
  400e18:	add	x16, x16, #0xf40
  400e1c:	br	x17

0000000000400e20 <umask@plt>:
  400e20:	adrp	x16, 41f000 <__FRAME_END__+0x1b760>
  400e24:	ldr	x17, [x16, #3912]
  400e28:	add	x16, x16, #0xf48
  400e2c:	br	x17

0000000000400e30 <sd_listen_fds@plt>:
  400e30:	adrp	x16, 41f000 <__FRAME_END__+0x1b760>
  400e34:	ldr	x17, [x16, #3920]
  400e38:	add	x16, x16, #0xf50
  400e3c:	br	x17

0000000000400e40 <getpid_cached@plt>:
  400e40:	adrp	x16, 41f000 <__FRAME_END__+0x1b760>
  400e44:	ldr	x17, [x16, #3928]
  400e48:	add	x16, x16, #0xf58
  400e4c:	br	x17

0000000000400e50 <sd_notify@plt>:
  400e50:	adrp	x16, 41f000 <__FRAME_END__+0x1b760>
  400e54:	ldr	x17, [x16, #3936]
  400e58:	add	x16, x16, #0xf60
  400e5c:	br	x17

0000000000400e60 <epoll_wait@plt>:
  400e60:	adrp	x16, 41f000 <__FRAME_END__+0x1b760>
  400e64:	ldr	x17, [x16, #3944]
  400e68:	add	x16, x16, #0xf68
  400e6c:	br	x17

0000000000400e70 <__errno_location@plt>:
  400e70:	adrp	x16, 41f000 <__FRAME_END__+0x1b760>
  400e74:	ldr	x17, [x16, #3952]
  400e78:	add	x16, x16, #0xf70
  400e7c:	br	x17

0000000000400e80 <log_assert_failed_realm@plt>:
  400e80:	adrp	x16, 41f000 <__FRAME_END__+0x1b760>
  400e84:	ldr	x17, [x16, #3960]
  400e88:	add	x16, x16, #0xf78
  400e8c:	br	x17

0000000000400e90 <memset@plt>:
  400e90:	adrp	x16, 41f000 <__FRAME_END__+0x1b760>
  400e94:	ldr	x17, [x16, #3968]
  400e98:	add	x16, x16, #0xf80
  400e9c:	br	x17

0000000000400ea0 <epoll_create1@plt>:
  400ea0:	adrp	x16, 41f000 <__FRAME_END__+0x1b760>
  400ea4:	ldr	x17, [x16, #3976]
  400ea8:	add	x16, x16, #0xf88
  400eac:	br	x17

0000000000400eb0 <sd_is_fifo@plt>:
  400eb0:	adrp	x16, 41f000 <__FRAME_END__+0x1b760>
  400eb4:	ldr	x17, [x16, #3984]
  400eb8:	add	x16, x16, #0xf90
  400ebc:	br	x17

0000000000400ec0 <calloc@plt>:
  400ec0:	adrp	x16, 41f000 <__FRAME_END__+0x1b760>
  400ec4:	ldr	x17, [x16, #3992]
  400ec8:	add	x16, x16, #0xf98
  400ecc:	br	x17

0000000000400ed0 <epoll_ctl@plt>:
  400ed0:	adrp	x16, 41f000 <__FRAME_END__+0x1b760>
  400ed4:	ldr	x17, [x16, #4000]
  400ed8:	add	x16, x16, #0xfa0
  400edc:	br	x17

0000000000400ee0 <bus_connect_system_systemd@plt>:
  400ee0:	adrp	x16, 41f000 <__FRAME_END__+0x1b760>
  400ee4:	ldr	x17, [x16, #4008]
  400ee8:	add	x16, x16, #0xfa8
  400eec:	br	x17

0000000000400ef0 <safe_close@plt>:
  400ef0:	adrp	x16, 41f000 <__FRAME_END__+0x1b760>
  400ef4:	ldr	x17, [x16, #4016]
  400ef8:	add	x16, x16, #0xfb0
  400efc:	br	x17

0000000000400f00 <sd_bus_flush_close_unref@plt>:
  400f00:	adrp	x16, 41f000 <__FRAME_END__+0x1b760>
  400f04:	ldr	x17, [x16, #4024]
  400f08:	add	x16, x16, #0xfb8
  400f0c:	br	x17

0000000000400f10 <free@plt>:
  400f10:	adrp	x16, 41f000 <__FRAME_END__+0x1b760>
  400f14:	ldr	x17, [x16, #4032]
  400f18:	add	x16, x16, #0xfc0
  400f1c:	br	x17

0000000000400f20 <read@plt>:
  400f20:	adrp	x16, 41f000 <__FRAME_END__+0x1b760>
  400f24:	ldr	x17, [x16, #4040]
  400f28:	add	x16, x16, #0xfc8
  400f2c:	br	x17

0000000000400f30 <__ctype_b_loc@plt>:
  400f30:	adrp	x16, 41f000 <__FRAME_END__+0x1b760>
  400f34:	ldr	x17, [x16, #4048]
  400f38:	add	x16, x16, #0xfd0
  400f3c:	br	x17

0000000000400f40 <kill@plt>:
  400f40:	adrp	x16, 41f000 <__FRAME_END__+0x1b760>
  400f44:	ldr	x17, [x16, #4056]
  400f48:	add	x16, x16, #0xfd8
  400f4c:	br	x17

0000000000400f50 <sd_bus_call_method@plt>:
  400f50:	adrp	x16, 41f000 <__FRAME_END__+0x1b760>
  400f54:	ldr	x17, [x16, #4064]
  400f58:	add	x16, x16, #0xfe0
  400f5c:	br	x17

0000000000400f60 <bus_error_message@plt>:
  400f60:	adrp	x16, 41f000 <__FRAME_END__+0x1b760>
  400f64:	ldr	x17, [x16, #4072]
  400f68:	add	x16, x16, #0xfe8
  400f6c:	br	x17

0000000000400f70 <sd_bus_error_free@plt>:
  400f70:	adrp	x16, 41f000 <__FRAME_END__+0x1b760>
  400f74:	ldr	x17, [x16, #4080]
  400f78:	add	x16, x16, #0xff0
  400f7c:	br	x17

0000000000400f80 <kexec_loaded@plt>:
  400f80:	adrp	x16, 41f000 <__FRAME_END__+0x1b760>
  400f84:	ldr	x17, [x16, #4088]
  400f88:	add	x16, x16, #0xff8
  400f8c:	br	x17

Disassembly of section .text:

0000000000400f90 <_start>:
  400f90:	mov	x29, #0x0                   	// #0
  400f94:	mov	x30, #0x0                   	// #0
  400f98:	mov	x5, x0
  400f9c:	ldr	x1, [sp]
  400fa0:	add	x2, sp, #0x8
  400fa4:	mov	x6, sp
  400fa8:	movz	x0, #0x0, lsl #48
  400fac:	movk	x0, #0x0, lsl #32
  400fb0:	movk	x0, #0x40, lsl #16
  400fb4:	movk	x0, #0x1158
  400fb8:	movz	x3, #0x0, lsl #48
  400fbc:	movk	x3, #0x0, lsl #32
  400fc0:	movk	x3, #0x40, lsl #16
  400fc4:	movk	x3, #0x2e38
  400fc8:	movz	x4, #0x0, lsl #48
  400fcc:	movk	x4, #0x0, lsl #32
  400fd0:	movk	x4, #0x40, lsl #16
  400fd4:	movk	x4, #0x2eb8
  400fd8:	bl	400da0 <__libc_start_main@plt>
  400fdc:	bl	400db0 <abort@plt>

0000000000400fe0 <call_weak_fn>:
  400fe0:	adrp	x0, 41f000 <__FRAME_END__+0x1b760>
  400fe4:	ldr	x0, [x0, #3816]
  400fe8:	cbz	x0, 400ff0 <call_weak_fn+0x10>
  400fec:	b	400dc0 <__gmon_start__@plt>
  400ff0:	ret

0000000000400ff4 <deregister_tm_clones>:
  400ff4:	stp	x29, x30, [sp, #-32]!
  400ff8:	mov	x29, sp
  400ffc:	adrp	x0, 420000 <completed.8445>
  401000:	add	x0, x0, #0x0
  401004:	str	x0, [sp, #24]
  401008:	ldr	x0, [sp, #24]
  40100c:	str	x0, [sp, #24]
  401010:	ldr	x1, [sp, #24]
  401014:	adrp	x0, 420000 <completed.8445>
  401018:	add	x0, x0, #0x0
  40101c:	cmp	x1, x0
  401020:	b.eq	40105c <deregister_tm_clones+0x68>  // b.none
  401024:	adrp	x0, 402000 <fifo_free+0x84>
  401028:	add	x0, x0, #0xed0
  40102c:	ldr	x0, [x0]
  401030:	str	x0, [sp, #16]
  401034:	ldr	x0, [sp, #16]
  401038:	str	x0, [sp, #16]
  40103c:	ldr	x0, [sp, #16]
  401040:	cmp	x0, #0x0
  401044:	b.eq	401060 <deregister_tm_clones+0x6c>  // b.none
  401048:	ldr	x1, [sp, #16]
  40104c:	adrp	x0, 420000 <completed.8445>
  401050:	add	x0, x0, #0x0
  401054:	blr	x1
  401058:	b	401060 <deregister_tm_clones+0x6c>
  40105c:	nop
  401060:	ldp	x29, x30, [sp], #32
  401064:	ret

0000000000401068 <register_tm_clones>:
  401068:	stp	x29, x30, [sp, #-48]!
  40106c:	mov	x29, sp
  401070:	adrp	x0, 420000 <completed.8445>
  401074:	add	x0, x0, #0x0
  401078:	str	x0, [sp, #40]
  40107c:	ldr	x0, [sp, #40]
  401080:	str	x0, [sp, #40]
  401084:	ldr	x1, [sp, #40]
  401088:	adrp	x0, 420000 <completed.8445>
  40108c:	add	x0, x0, #0x0
  401090:	sub	x0, x1, x0
  401094:	asr	x0, x0, #3
  401098:	lsr	x1, x0, #63
  40109c:	add	x0, x1, x0
  4010a0:	asr	x0, x0, #1
  4010a4:	str	x0, [sp, #32]
  4010a8:	ldr	x0, [sp, #32]
  4010ac:	cmp	x0, #0x0
  4010b0:	b.eq	4010f0 <register_tm_clones+0x88>  // b.none
  4010b4:	adrp	x0, 402000 <fifo_free+0x84>
  4010b8:	add	x0, x0, #0xed8
  4010bc:	ldr	x0, [x0]
  4010c0:	str	x0, [sp, #24]
  4010c4:	ldr	x0, [sp, #24]
  4010c8:	str	x0, [sp, #24]
  4010cc:	ldr	x0, [sp, #24]
  4010d0:	cmp	x0, #0x0
  4010d4:	b.eq	4010f4 <register_tm_clones+0x8c>  // b.none
  4010d8:	ldr	x2, [sp, #24]
  4010dc:	ldr	x1, [sp, #32]
  4010e0:	adrp	x0, 420000 <completed.8445>
  4010e4:	add	x0, x0, #0x0
  4010e8:	blr	x2
  4010ec:	b	4010f4 <register_tm_clones+0x8c>
  4010f0:	nop
  4010f4:	ldp	x29, x30, [sp], #48
  4010f8:	ret

00000000004010fc <__do_global_dtors_aux>:
  4010fc:	stp	x29, x30, [sp, #-16]!
  401100:	mov	x29, sp
  401104:	adrp	x0, 420000 <completed.8445>
  401108:	add	x0, x0, #0x0
  40110c:	ldrb	w0, [x0]
  401110:	and	x0, x0, #0xff
  401114:	cmp	x0, #0x0
  401118:	b.ne	401134 <__do_global_dtors_aux+0x38>  // b.any
  40111c:	bl	400ff4 <deregister_tm_clones>
  401120:	adrp	x0, 420000 <completed.8445>
  401124:	add	x0, x0, #0x0
  401128:	mov	w1, #0x1                   	// #1
  40112c:	strb	w1, [x0]
  401130:	b	401138 <__do_global_dtors_aux+0x3c>
  401134:	nop
  401138:	ldp	x29, x30, [sp], #16
  40113c:	ret

0000000000401140 <frame_dummy>:
  401140:	stp	x29, x30, [sp, #-16]!
  401144:	mov	x29, sp
  401148:	bl	401068 <register_tm_clones>
  40114c:	nop
  401150:	ldp	x29, x30, [sp], #16
  401154:	ret

0000000000401158 <main>:
  401158:	sub	sp, sp, #0x130
  40115c:	stp	x29, x30, [sp, #272]
  401160:	str	x28, [sp, #288]
  401164:	add	x29, sp, #0x110
  401168:	mov	w8, #0x1                   	// #1
  40116c:	adrp	x9, 403000 <translate_runlevel.table+0x80>
  401170:	add	x9, x9, #0x58
  401174:	add	x9, x9, #0x3
  401178:	adrp	x10, 403000 <translate_runlevel.table+0x80>
  40117c:	add	x10, x10, #0x71
  401180:	stur	wzr, [x29, #-4]
  401184:	stur	w0, [x29, #-8]
  401188:	stur	x1, [x29, #-16]
  40118c:	stur	w8, [x29, #-60]
  401190:	str	x9, [sp, #64]
  401194:	str	x10, [sp, #56]
  401198:	bl	400dd0 <getppid@plt>
  40119c:	cmp	w0, #0x1
  4011a0:	b.eq	401224 <main+0xcc>  // b.none
  4011a4:	mov	w8, #0x3                   	// #3
  4011a8:	stur	w8, [x29, #-68]
  4011ac:	stur	wzr, [x29, #-72]
  4011b0:	stur	wzr, [x29, #-76]
  4011b4:	ldur	w0, [x29, #-76]
  4011b8:	bl	400de0 <log_get_max_level_realm@plt>
  4011bc:	ldur	w8, [x29, #-68]
  4011c0:	and	w8, w8, #0x7
  4011c4:	cmp	w0, w8
  4011c8:	b.lt	4011fc <main+0xa4>  // b.tstop
  4011cc:	ldur	w8, [x29, #-76]
  4011d0:	ldur	w9, [x29, #-68]
  4011d4:	orr	w0, w9, w8, lsl #10
  4011d8:	ldur	w1, [x29, #-72]
  4011dc:	ldr	x2, [sp, #64]
  4011e0:	mov	w3, #0x157                 	// #343
  4011e4:	ldr	x4, [sp, #56]
  4011e8:	adrp	x5, 403000 <translate_runlevel.table+0x80>
  4011ec:	add	x5, x5, #0x76
  4011f0:	bl	400df0 <log_internal_realm@plt>
  4011f4:	str	w0, [sp, #52]
  4011f8:	b	401210 <main+0xb8>
  4011fc:	ldur	w0, [x29, #-72]
  401200:	bl	400e00 <abs@plt>
  401204:	mov	w8, wzr
  401208:	subs	w8, w8, w0, uxtb
  40120c:	str	w8, [sp, #52]
  401210:	ldr	w8, [sp, #52]
  401214:	stur	w8, [x29, #-80]
  401218:	mov	w8, #0x1                   	// #1
  40121c:	stur	w8, [x29, #-4]
  401220:	b	40168c <main+0x534>
  401224:	ldur	w8, [x29, #-8]
  401228:	cmp	w8, #0x1
  40122c:	b.le	4012b0 <main+0x158>
  401230:	mov	w8, #0x3                   	// #3
  401234:	stur	w8, [x29, #-84]
  401238:	stur	wzr, [x29, #-88]
  40123c:	stur	wzr, [x29, #-92]
  401240:	ldur	w0, [x29, #-92]
  401244:	bl	400de0 <log_get_max_level_realm@plt>
  401248:	ldur	w8, [x29, #-84]
  40124c:	and	w8, w8, #0x7
  401250:	cmp	w0, w8
  401254:	b.lt	401288 <main+0x130>  // b.tstop
  401258:	ldur	w8, [x29, #-92]
  40125c:	ldur	w9, [x29, #-84]
  401260:	orr	w0, w9, w8, lsl #10
  401264:	ldur	w1, [x29, #-88]
  401268:	ldr	x2, [sp, #64]
  40126c:	mov	w3, #0x15c                 	// #348
  401270:	ldr	x4, [sp, #56]
  401274:	adrp	x5, 403000 <translate_runlevel.table+0x80>
  401278:	add	x5, x5, #0xa3
  40127c:	bl	400df0 <log_internal_realm@plt>
  401280:	str	w0, [sp, #48]
  401284:	b	40129c <main+0x144>
  401288:	ldur	w0, [x29, #-88]
  40128c:	bl	400e00 <abs@plt>
  401290:	mov	w8, wzr
  401294:	subs	w8, w8, w0, uxtb
  401298:	str	w8, [sp, #48]
  40129c:	ldr	w8, [sp, #48]
  4012a0:	stur	w8, [x29, #-96]
  4012a4:	mov	w8, #0x1                   	// #1
  4012a8:	stur	w8, [x29, #-4]
  4012ac:	b	40168c <main+0x534>
  4012b0:	bl	400e10 <log_setup_service@plt>
  4012b4:	mov	w0, #0x12                  	// #18
  4012b8:	bl	400e20 <umask@plt>
  4012bc:	mov	w8, #0x1                   	// #1
  4012c0:	mov	w0, w8
  4012c4:	bl	400e30 <sd_listen_fds@plt>
  4012c8:	stur	w0, [x29, #-64]
  4012cc:	ldur	w8, [x29, #-64]
  4012d0:	cmp	w8, #0x0
  4012d4:	cset	w8, ge  // ge = tcont
  4012d8:	tbnz	w8, #0, 401360 <main+0x208>
  4012dc:	mov	w8, #0x3                   	// #3
  4012e0:	stur	w8, [x29, #-100]
  4012e4:	ldur	w8, [x29, #-60]
  4012e8:	stur	w8, [x29, #-104]
  4012ec:	stur	wzr, [x29, #-108]
  4012f0:	ldur	w0, [x29, #-108]
  4012f4:	bl	400de0 <log_get_max_level_realm@plt>
  4012f8:	ldur	w8, [x29, #-100]
  4012fc:	and	w8, w8, #0x7
  401300:	cmp	w0, w8
  401304:	b.lt	401338 <main+0x1e0>  // b.tstop
  401308:	ldur	w8, [x29, #-108]
  40130c:	ldur	w9, [x29, #-100]
  401310:	orr	w0, w9, w8, lsl #10
  401314:	ldur	w1, [x29, #-104]
  401318:	ldr	x2, [sp, #64]
  40131c:	mov	w3, #0x166                 	// #358
  401320:	ldr	x4, [sp, #56]
  401324:	adrp	x5, 403000 <translate_runlevel.table+0x80>
  401328:	add	x5, x5, #0xc9
  40132c:	bl	400df0 <log_internal_realm@plt>
  401330:	str	w0, [sp, #44]
  401334:	b	40134c <main+0x1f4>
  401338:	ldur	w0, [x29, #-104]
  40133c:	bl	400e00 <abs@plt>
  401340:	mov	w8, wzr
  401344:	subs	w8, w8, w0, uxtb
  401348:	str	w8, [sp, #44]
  40134c:	ldr	w8, [sp, #44]
  401350:	stur	w8, [x29, #-112]
  401354:	mov	w8, #0x1                   	// #1
  401358:	stur	w8, [x29, #-4]
  40135c:	b	40168c <main+0x534>
  401360:	ldur	w8, [x29, #-64]
  401364:	cmp	w8, #0x0
  401368:	cset	w8, le
  40136c:	tbnz	w8, #0, 40137c <main+0x224>
  401370:	ldur	w8, [x29, #-64]
  401374:	cmp	w8, #0x10
  401378:	b.le	4013fc <main+0x2a4>
  40137c:	mov	w8, #0x3                   	// #3
  401380:	stur	w8, [x29, #-116]
  401384:	stur	wzr, [x29, #-120]
  401388:	stur	wzr, [x29, #-124]
  40138c:	ldur	w0, [x29, #-124]
  401390:	bl	400de0 <log_get_max_level_realm@plt>
  401394:	ldur	w8, [x29, #-116]
  401398:	and	w8, w8, #0x7
  40139c:	cmp	w0, w8
  4013a0:	b.lt	4013d4 <main+0x27c>  // b.tstop
  4013a4:	ldur	w8, [x29, #-124]
  4013a8:	ldur	w9, [x29, #-116]
  4013ac:	orr	w0, w9, w8, lsl #10
  4013b0:	ldur	w1, [x29, #-120]
  4013b4:	ldr	x2, [sp, #64]
  4013b8:	mov	w3, #0x16b                 	// #363
  4013bc:	ldr	x4, [sp, #56]
  4013c0:	adrp	x5, 403000 <translate_runlevel.table+0x80>
  4013c4:	add	x5, x5, #0x108
  4013c8:	bl	400df0 <log_internal_realm@plt>
  4013cc:	str	w0, [sp, #40]
  4013d0:	b	4013e8 <main+0x290>
  4013d4:	ldur	w0, [x29, #-120]
  4013d8:	bl	400e00 <abs@plt>
  4013dc:	mov	w8, wzr
  4013e0:	subs	w8, w8, w0, uxtb
  4013e4:	str	w8, [sp, #40]
  4013e8:	ldr	w8, [sp, #40]
  4013ec:	stur	w8, [x29, #-128]
  4013f0:	mov	w8, #0x1                   	// #1
  4013f4:	stur	w8, [x29, #-4]
  4013f8:	b	40168c <main+0x534>
  4013fc:	ldur	w1, [x29, #-64]
  401400:	sub	x0, x29, #0x38
  401404:	bl	4016a0 <server_init>
  401408:	cmp	w0, #0x0
  40140c:	cset	w8, ge  // ge = tcont
  401410:	tbnz	w8, #0, 401420 <main+0x2c8>
  401414:	mov	w8, #0x1                   	// #1
  401418:	stur	w8, [x29, #-4]
  40141c:	b	40168c <main+0x534>
  401420:	mov	w8, #0x7                   	// #7
  401424:	stur	w8, [x29, #-132]
  401428:	str	wzr, [sp, #136]
  40142c:	str	wzr, [sp, #132]
  401430:	ldr	w0, [sp, #132]
  401434:	bl	400de0 <log_get_max_level_realm@plt>
  401438:	ldur	w8, [x29, #-132]
  40143c:	and	w8, w8, #0x7
  401440:	cmp	w0, w8
  401444:	b.lt	401498 <main+0x340>  // b.tstop
  401448:	ldr	w8, [sp, #132]
  40144c:	ldur	w9, [x29, #-132]
  401450:	orr	w0, w9, w8, lsl #10
  401454:	ldr	w1, [sp, #136]
  401458:	str	w0, [sp, #36]
  40145c:	str	w1, [sp, #32]
  401460:	bl	400e40 <getpid_cached@plt>
  401464:	ldr	w8, [sp, #36]
  401468:	str	w0, [sp, #28]
  40146c:	mov	w0, w8
  401470:	ldr	w1, [sp, #32]
  401474:	ldr	x2, [sp, #64]
  401478:	mov	w3, #0x172                 	// #370
  40147c:	ldr	x4, [sp, #56]
  401480:	adrp	x5, 403000 <translate_runlevel.table+0x80>
  401484:	add	x5, x5, #0x130
  401488:	ldr	w6, [sp, #28]
  40148c:	bl	400df0 <log_internal_realm@plt>
  401490:	str	w0, [sp, #24]
  401494:	b	4014ac <main+0x354>
  401498:	ldr	w0, [sp, #136]
  40149c:	bl	400e00 <abs@plt>
  4014a0:	mov	w8, wzr
  4014a4:	subs	w8, w8, w0, uxtb
  4014a8:	str	w8, [sp, #24]
  4014ac:	ldr	w8, [sp, #24]
  4014b0:	str	w8, [sp, #128]
  4014b4:	mov	w8, wzr
  4014b8:	mov	w0, w8
  4014bc:	adrp	x1, 403000 <translate_runlevel.table+0x80>
  4014c0:	add	x1, x1, #0x152
  4014c4:	bl	400e50 <sd_notify@plt>
  4014c8:	sub	x8, x29, #0x38
  4014cc:	ldrb	w9, [x8, #32]
  4014d0:	eor	w9, w9, #0x1
  4014d4:	tbnz	w9, #0, 4014dc <main+0x384>
  4014d8:	b	4015cc <main+0x474>
  4014dc:	ldur	w0, [x29, #-56]
  4014e0:	add	x1, sp, #0x70
  4014e4:	mov	w2, #0x1                   	// #1
  4014e8:	mov	w3, #0x7530                	// #30000
  4014ec:	bl	400e60 <epoll_wait@plt>
  4014f0:	str	w0, [sp, #108]
  4014f4:	ldr	w8, [sp, #108]
  4014f8:	cmp	w8, #0x0
  4014fc:	cset	w8, ge  // ge = tcont
  401500:	tbnz	w8, #0, 401598 <main+0x440>
  401504:	bl	400e70 <__errno_location@plt>
  401508:	ldr	w8, [x0]
  40150c:	cmp	w8, #0x4
  401510:	b.ne	401518 <main+0x3c0>  // b.any
  401514:	b	4014c8 <main+0x370>
  401518:	mov	w8, #0x3                   	// #3
  40151c:	str	w8, [sp, #104]
  401520:	bl	400e70 <__errno_location@plt>
  401524:	ldr	w8, [x0]
  401528:	str	w8, [sp, #100]
  40152c:	str	wzr, [sp, #96]
  401530:	ldr	w0, [sp, #96]
  401534:	bl	400de0 <log_get_max_level_realm@plt>
  401538:	ldr	w8, [sp, #104]
  40153c:	and	w8, w8, #0x7
  401540:	cmp	w0, w8
  401544:	b.lt	401578 <main+0x420>  // b.tstop
  401548:	ldr	w8, [sp, #96]
  40154c:	ldr	w9, [sp, #104]
  401550:	orr	w0, w9, w8, lsl #10
  401554:	ldr	w1, [sp, #100]
  401558:	ldr	x2, [sp, #64]
  40155c:	mov	w3, #0x180                 	// #384
  401560:	ldr	x4, [sp, #56]
  401564:	adrp	x5, 403000 <translate_runlevel.table+0x80>
  401568:	add	x5, x5, #0x178
  40156c:	bl	400df0 <log_internal_realm@plt>
  401570:	str	w0, [sp, #20]
  401574:	b	40158c <main+0x434>
  401578:	ldr	w0, [sp, #100]
  40157c:	bl	400e00 <abs@plt>
  401580:	mov	w8, wzr
  401584:	subs	w8, w8, w0, uxtb
  401588:	str	w8, [sp, #20]
  40158c:	ldr	w8, [sp, #20]
  401590:	str	w8, [sp, #92]
  401594:	b	401664 <main+0x50c>
  401598:	ldr	w8, [sp, #108]
  40159c:	cmp	w8, #0x0
  4015a0:	cset	w8, gt
  4015a4:	tbnz	w8, #0, 4015ac <main+0x454>
  4015a8:	b	4015cc <main+0x474>
  4015ac:	sub	x0, x29, #0x38
  4015b0:	add	x1, sp, #0x70
  4015b4:	bl	401ce0 <process_event>
  4015b8:	cmp	w0, #0x0
  4015bc:	cset	w8, ge  // ge = tcont
  4015c0:	tbnz	w8, #0, 4015c8 <main+0x470>
  4015c4:	b	401664 <main+0x50c>
  4015c8:	b	4014c8 <main+0x370>
  4015cc:	stur	wzr, [x29, #-60]
  4015d0:	mov	w8, #0x7                   	// #7
  4015d4:	str	w8, [sp, #88]
  4015d8:	str	wzr, [sp, #84]
  4015dc:	str	wzr, [sp, #80]
  4015e0:	ldr	w0, [sp, #80]
  4015e4:	bl	400de0 <log_get_max_level_realm@plt>
  4015e8:	ldr	w8, [sp, #88]
  4015ec:	and	w8, w8, #0x7
  4015f0:	cmp	w0, w8
  4015f4:	b.lt	401648 <main+0x4f0>  // b.tstop
  4015f8:	ldr	w8, [sp, #80]
  4015fc:	ldr	w9, [sp, #88]
  401600:	orr	w0, w9, w8, lsl #10
  401604:	ldr	w1, [sp, #84]
  401608:	str	w0, [sp, #16]
  40160c:	str	w1, [sp, #12]
  401610:	bl	400e40 <getpid_cached@plt>
  401614:	ldr	w8, [sp, #16]
  401618:	str	w0, [sp, #8]
  40161c:	mov	w0, w8
  401620:	ldr	w1, [sp, #12]
  401624:	ldr	x2, [sp, #64]
  401628:	mov	w3, #0x18d                 	// #397
  40162c:	ldr	x4, [sp, #56]
  401630:	adrp	x5, 403000 <translate_runlevel.table+0x80>
  401634:	add	x5, x5, #0x190
  401638:	ldr	w6, [sp, #8]
  40163c:	bl	400df0 <log_internal_realm@plt>
  401640:	str	w0, [sp, #4]
  401644:	b	40165c <main+0x504>
  401648:	ldr	w0, [sp, #84]
  40164c:	bl	400e00 <abs@plt>
  401650:	mov	w8, wzr
  401654:	subs	w8, w8, w0, uxtb
  401658:	str	w8, [sp, #4]
  40165c:	ldr	w8, [sp, #4]
  401660:	str	w8, [sp, #76]
  401664:	mov	w8, wzr
  401668:	mov	w0, w8
  40166c:	adrp	x1, 403000 <translate_runlevel.table+0x80>
  401670:	add	x1, x1, #0x1b2
  401674:	bl	400e50 <sd_notify@plt>
  401678:	sub	x9, x29, #0x38
  40167c:	mov	x0, x9
  401680:	bl	401ebc <server_done>
  401684:	ldur	w8, [x29, #-60]
  401688:	stur	w8, [x29, #-4]
  40168c:	ldur	w0, [x29, #-4]
  401690:	ldr	x28, [sp, #288]
  401694:	ldp	x29, x30, [sp, #272]
  401698:	add	sp, sp, #0x130
  40169c:	ret

00000000004016a0 <server_init>:
  4016a0:	sub	sp, sp, #0x100
  4016a4:	stp	x29, x30, [sp, #240]
  4016a8:	add	x29, sp, #0xf0
  4016ac:	adrp	x8, 403000 <translate_runlevel.table+0x80>
  4016b0:	add	x8, x8, #0x58
  4016b4:	add	x8, x8, #0x3
  4016b8:	adrp	x9, 403000 <translate_runlevel.table+0x80>
  4016bc:	add	x9, x9, #0x20d
  4016c0:	adrp	x10, 403000 <translate_runlevel.table+0x80>
  4016c4:	add	x10, x10, #0x1d7
  4016c8:	stur	x0, [x29, #-16]
  4016cc:	stur	w1, [x29, #-20]
  4016d0:	str	x8, [sp, #40]
  4016d4:	str	x9, [sp, #32]
  4016d8:	str	x10, [sp, #24]
  4016dc:	ldur	x8, [x29, #-16]
  4016e0:	cmp	x8, #0x0
  4016e4:	cset	w9, ne  // ne = any
  4016e8:	mov	w10, #0x1                   	// #1
  4016ec:	eor	w9, w9, #0x1
  4016f0:	eor	w9, w9, w10
  4016f4:	eor	w9, w9, w10
  4016f8:	and	w9, w9, #0x1
  4016fc:	mov	w0, w9
  401700:	sxtw	x8, w0
  401704:	cbz	x8, 401728 <server_init+0x88>
  401708:	mov	w8, wzr
  40170c:	mov	w0, w8
  401710:	adrp	x1, 403000 <translate_runlevel.table+0x80>
  401714:	add	x1, x1, #0x1d5
  401718:	ldr	x2, [sp, #40]
  40171c:	mov	w3, #0xf6                  	// #246
  401720:	ldr	x4, [sp, #24]
  401724:	bl	400e80 <log_assert_failed_realm@plt>
  401728:	ldur	w8, [x29, #-20]
  40172c:	cmp	w8, #0x0
  401730:	cset	w8, hi  // hi = pmore
  401734:	mov	w9, #0x1                   	// #1
  401738:	eor	w8, w8, #0x1
  40173c:	eor	w8, w8, w9
  401740:	eor	w8, w8, w9
  401744:	and	w8, w8, #0x1
  401748:	mov	w0, w8
  40174c:	sxtw	x10, w0
  401750:	cbz	x10, 401774 <server_init+0xd4>
  401754:	mov	w8, wzr
  401758:	mov	w0, w8
  40175c:	adrp	x1, 403000 <translate_runlevel.table+0x80>
  401760:	add	x1, x1, #0x1ff
  401764:	ldr	x2, [sp, #40]
  401768:	mov	w3, #0xf7                  	// #247
  40176c:	ldr	x4, [sp, #24]
  401770:	bl	400e80 <log_assert_failed_realm@plt>
  401774:	mov	x8, #0x28                  	// #40
  401778:	stur	x8, [x29, #-40]
  40177c:	ldur	x8, [x29, #-40]
  401780:	cmp	x8, #0x0
  401784:	cset	w9, ls  // ls = plast
  401788:	tbnz	w9, #0, 4017a0 <server_init+0x100>
  40178c:	ldur	x0, [x29, #-16]
  401790:	ldur	x2, [x29, #-40]
  401794:	mov	w8, wzr
  401798:	mov	w1, w8
  40179c:	bl	400e90 <memset@plt>
  4017a0:	mov	w0, #0x80000               	// #524288
  4017a4:	bl	400ea0 <epoll_create1@plt>
  4017a8:	ldur	x8, [x29, #-16]
  4017ac:	str	w0, [x8]
  4017b0:	ldur	x8, [x29, #-16]
  4017b4:	ldr	w9, [x8]
  4017b8:	cmp	w9, #0x0
  4017bc:	cset	w9, ge  // ge = tcont
  4017c0:	tbnz	w9, #0, 40184c <server_init+0x1ac>
  4017c4:	mov	w8, #0x3                   	// #3
  4017c8:	stur	w8, [x29, #-44]
  4017cc:	bl	400e70 <__errno_location@plt>
  4017d0:	ldr	w8, [x0]
  4017d4:	stur	w8, [x29, #-48]
  4017d8:	stur	wzr, [x29, #-52]
  4017dc:	ldur	w0, [x29, #-52]
  4017e0:	bl	400de0 <log_get_max_level_realm@plt>
  4017e4:	ldur	w8, [x29, #-44]
  4017e8:	and	w8, w8, #0x7
  4017ec:	cmp	w0, w8
  4017f0:	b.lt	401824 <server_init+0x184>  // b.tstop
  4017f4:	ldur	w8, [x29, #-52]
  4017f8:	ldur	w9, [x29, #-44]
  4017fc:	orr	w0, w9, w8, lsl #10
  401800:	ldur	w1, [x29, #-48]
  401804:	ldr	x2, [sp, #40]
  401808:	mov	w3, #0xfe                  	// #254
  40180c:	ldr	x4, [sp, #32]
  401810:	adrp	x5, 403000 <translate_runlevel.table+0x80>
  401814:	add	x5, x5, #0x219
  401818:	bl	400df0 <log_internal_realm@plt>
  40181c:	str	w0, [sp, #20]
  401820:	b	401838 <server_init+0x198>
  401824:	ldur	w0, [x29, #-48]
  401828:	bl	400e00 <abs@plt>
  40182c:	mov	w8, wzr
  401830:	subs	w8, w8, w0, uxtb
  401834:	str	w8, [sp, #20]
  401838:	ldr	w8, [sp, #20]
  40183c:	stur	w8, [x29, #-56]
  401840:	ldur	w8, [x29, #-56]
  401844:	stur	w8, [x29, #-24]
  401848:	b	401cc0 <server_init+0x620>
  40184c:	stur	wzr, [x29, #-28]
  401850:	ldur	w8, [x29, #-28]
  401854:	ldur	w9, [x29, #-20]
  401858:	cmp	w8, w9
  40185c:	b.cs	401c14 <server_init+0x574>  // b.hs, b.nlast
  401860:	ldur	w8, [x29, #-28]
  401864:	add	w8, w8, #0x3
  401868:	stur	w8, [x29, #-84]
  40186c:	ldur	w0, [x29, #-84]
  401870:	mov	x9, xzr
  401874:	mov	x1, x9
  401878:	bl	400eb0 <sd_is_fifo@plt>
  40187c:	stur	w0, [x29, #-24]
  401880:	ldur	w8, [x29, #-24]
  401884:	cmp	w8, #0x0
  401888:	cset	w8, ge  // ge = tcont
  40188c:	tbnz	w8, #0, 40190c <server_init+0x26c>
  401890:	mov	w8, #0x3                   	// #3
  401894:	stur	w8, [x29, #-88]
  401898:	ldur	w8, [x29, #-24]
  40189c:	stur	w8, [x29, #-92]
  4018a0:	stur	wzr, [x29, #-96]
  4018a4:	ldur	w0, [x29, #-96]
  4018a8:	bl	400de0 <log_get_max_level_realm@plt>
  4018ac:	ldur	w8, [x29, #-88]
  4018b0:	and	w8, w8, #0x7
  4018b4:	cmp	w0, w8
  4018b8:	b.lt	4018ec <server_init+0x24c>  // b.tstop
  4018bc:	ldur	w8, [x29, #-96]
  4018c0:	ldur	w9, [x29, #-88]
  4018c4:	orr	w0, w9, w8, lsl #10
  4018c8:	ldur	w1, [x29, #-92]
  4018cc:	ldr	x2, [sp, #40]
  4018d0:	mov	w3, #0x10b                 	// #267
  4018d4:	ldr	x4, [sp, #32]
  4018d8:	adrp	x5, 403000 <translate_runlevel.table+0x80>
  4018dc:	add	x5, x5, #0x23b
  4018e0:	bl	400df0 <log_internal_realm@plt>
  4018e4:	str	w0, [sp, #16]
  4018e8:	b	401900 <server_init+0x260>
  4018ec:	ldur	w0, [x29, #-92]
  4018f0:	bl	400e00 <abs@plt>
  4018f4:	mov	w8, wzr
  4018f8:	subs	w8, w8, w0, uxtb
  4018fc:	str	w8, [sp, #16]
  401900:	ldr	w8, [sp, #16]
  401904:	stur	w8, [x29, #-100]
  401908:	b	401cc0 <server_init+0x620>
  40190c:	ldur	w8, [x29, #-24]
  401910:	cbnz	w8, 401994 <server_init+0x2f4>
  401914:	mov	w8, #0x3                   	// #3
  401918:	stur	w8, [x29, #-104]
  40191c:	stur	wzr, [x29, #-108]
  401920:	stur	wzr, [x29, #-112]
  401924:	ldur	w0, [x29, #-112]
  401928:	bl	400de0 <log_get_max_level_realm@plt>
  40192c:	ldur	w8, [x29, #-104]
  401930:	and	w8, w8, #0x7
  401934:	cmp	w0, w8
  401938:	b.lt	40196c <server_init+0x2cc>  // b.tstop
  40193c:	ldur	w8, [x29, #-112]
  401940:	ldur	w9, [x29, #-104]
  401944:	orr	w0, w9, w8, lsl #10
  401948:	ldur	w1, [x29, #-108]
  40194c:	ldr	x2, [sp, #40]
  401950:	mov	w3, #0x110                 	// #272
  401954:	ldr	x4, [sp, #32]
  401958:	adrp	x5, 403000 <translate_runlevel.table+0x80>
  40195c:	add	x5, x5, #0x268
  401960:	bl	400df0 <log_internal_realm@plt>
  401964:	str	w0, [sp, #12]
  401968:	b	401980 <server_init+0x2e0>
  40196c:	ldur	w0, [x29, #-108]
  401970:	bl	400e00 <abs@plt>
  401974:	mov	w8, wzr
  401978:	subs	w8, w8, w0, uxtb
  40197c:	str	w8, [sp, #12]
  401980:	ldr	w8, [sp, #12]
  401984:	stur	w8, [x29, #-116]
  401988:	mov	w8, #0xffffffea            	// #-22
  40198c:	stur	w8, [x29, #-24]
  401990:	b	401cc0 <server_init+0x620>
  401994:	mov	x0, #0x1                   	// #1
  401998:	mov	x1, #0x1a8                 	// #424
  40199c:	bl	400ec0 <calloc@plt>
  4019a0:	stur	x0, [x29, #-80]
  4019a4:	ldur	x8, [x29, #-80]
  4019a8:	cbnz	x8, 401a34 <server_init+0x394>
  4019ac:	mov	w8, #0xfffffff4            	// #-12
  4019b0:	stur	w8, [x29, #-24]
  4019b4:	mov	w8, #0x3                   	// #3
  4019b8:	str	w8, [sp, #120]
  4019bc:	bl	400e70 <__errno_location@plt>
  4019c0:	ldr	w8, [x0]
  4019c4:	str	w8, [sp, #116]
  4019c8:	str	wzr, [sp, #112]
  4019cc:	ldr	w0, [sp, #112]
  4019d0:	bl	400de0 <log_get_max_level_realm@plt>
  4019d4:	ldr	w8, [sp, #120]
  4019d8:	and	w8, w8, #0x7
  4019dc:	cmp	w0, w8
  4019e0:	b.lt	401a14 <server_init+0x374>  // b.tstop
  4019e4:	ldr	w8, [sp, #112]
  4019e8:	ldr	w9, [sp, #120]
  4019ec:	orr	w0, w9, w8, lsl #10
  4019f0:	ldr	w1, [sp, #116]
  4019f4:	ldr	x2, [sp, #40]
  4019f8:	mov	w3, #0x118                 	// #280
  4019fc:	ldr	x4, [sp, #32]
  401a00:	adrp	x5, 403000 <translate_runlevel.table+0x80>
  401a04:	add	x5, x5, #0x284
  401a08:	bl	400df0 <log_internal_realm@plt>
  401a0c:	str	w0, [sp, #8]
  401a10:	b	401a28 <server_init+0x388>
  401a14:	ldr	w0, [sp, #116]
  401a18:	bl	400e00 <abs@plt>
  401a1c:	mov	w8, wzr
  401a20:	subs	w8, w8, w0, uxtb
  401a24:	str	w8, [sp, #8]
  401a28:	ldr	w8, [sp, #8]
  401a2c:	str	w8, [sp, #108]
  401a30:	b	401cc0 <server_init+0x620>
  401a34:	ldur	x8, [x29, #-80]
  401a38:	mov	w9, #0xffffffff            	// #-1
  401a3c:	str	w9, [x8, #8]
  401a40:	mov	x8, #0x10                  	// #16
  401a44:	str	x8, [sp, #96]
  401a48:	ldr	x8, [sp, #96]
  401a4c:	cmp	x8, #0x0
  401a50:	cset	w9, ls  // ls = plast
  401a54:	tbnz	w9, #0, 401a6c <server_init+0x3cc>
  401a58:	ldr	x2, [sp, #96]
  401a5c:	sub	x0, x29, #0x48
  401a60:	mov	w8, wzr
  401a64:	mov	w1, w8
  401a68:	bl	400e90 <memset@plt>
  401a6c:	sub	x8, x29, #0x48
  401a70:	mov	w9, #0x1                   	// #1
  401a74:	stur	w9, [x29, #-72]
  401a78:	ldur	x10, [x29, #-80]
  401a7c:	str	x10, [x8, #8]
  401a80:	ldur	x10, [x29, #-16]
  401a84:	ldr	w0, [x10]
  401a88:	ldur	w2, [x29, #-84]
  401a8c:	mov	w1, w9
  401a90:	mov	x3, x8
  401a94:	bl	400ed0 <epoll_ctl@plt>
  401a98:	cmp	w0, #0x0
  401a9c:	cset	w9, ge  // ge = tcont
  401aa0:	tbnz	w9, #0, 401b40 <server_init+0x4a0>
  401aa4:	bl	400e70 <__errno_location@plt>
  401aa8:	ldr	w8, [x0]
  401aac:	mov	w9, wzr
  401ab0:	subs	w8, w9, w8
  401ab4:	stur	w8, [x29, #-24]
  401ab8:	ldur	x0, [x29, #-80]
  401abc:	bl	401f7c <fifo_free>
  401ac0:	mov	w8, #0x3                   	// #3
  401ac4:	str	w8, [sp, #92]
  401ac8:	bl	400e70 <__errno_location@plt>
  401acc:	ldr	w8, [x0]
  401ad0:	str	w8, [sp, #88]
  401ad4:	str	wzr, [sp, #84]
  401ad8:	ldr	w0, [sp, #84]
  401adc:	bl	400de0 <log_get_max_level_realm@plt>
  401ae0:	ldr	w8, [sp, #92]
  401ae4:	and	w8, w8, #0x7
  401ae8:	cmp	w0, w8
  401aec:	b.lt	401b20 <server_init+0x480>  // b.tstop
  401af0:	ldr	w8, [sp, #84]
  401af4:	ldr	w9, [sp, #92]
  401af8:	orr	w0, w9, w8, lsl #10
  401afc:	ldr	w1, [sp, #88]
  401b00:	ldr	x2, [sp, #40]
  401b04:	mov	w3, #0x124                 	// #292
  401b08:	ldr	x4, [sp, #32]
  401b0c:	adrp	x5, 403000 <translate_runlevel.table+0x80>
  401b10:	add	x5, x5, #0x2a5
  401b14:	bl	400df0 <log_internal_realm@plt>
  401b18:	str	w0, [sp, #4]
  401b1c:	b	401b34 <server_init+0x494>
  401b20:	ldr	w0, [sp, #88]
  401b24:	bl	400e00 <abs@plt>
  401b28:	mov	w8, wzr
  401b2c:	subs	w8, w8, w0, uxtb
  401b30:	str	w8, [sp, #4]
  401b34:	ldr	w8, [sp, #4]
  401b38:	str	w8, [sp, #80]
  401b3c:	b	401cc0 <server_init+0x620>
  401b40:	ldur	w8, [x29, #-84]
  401b44:	ldur	x9, [x29, #-80]
  401b48:	str	w8, [x9, #8]
  401b4c:	ldur	x8, [x29, #-16]
  401b50:	add	x8, x8, #0x8
  401b54:	str	x8, [sp, #72]
  401b58:	ldur	x8, [x29, #-80]
  401b5c:	str	x8, [sp, #64]
  401b60:	ldr	x8, [sp, #64]
  401b64:	cmp	x8, #0x0
  401b68:	cset	w9, ne  // ne = any
  401b6c:	mov	w10, #0x1                   	// #1
  401b70:	eor	w9, w9, #0x1
  401b74:	eor	w9, w9, w10
  401b78:	eor	w9, w9, w10
  401b7c:	and	w9, w9, #0x1
  401b80:	mov	w0, w9
  401b84:	sxtw	x8, w0
  401b88:	cbz	x8, 401bac <server_init+0x50c>
  401b8c:	mov	w8, wzr
  401b90:	mov	w0, w8
  401b94:	adrp	x1, 403000 <translate_runlevel.table+0x80>
  401b98:	add	x1, x1, #0x2cf
  401b9c:	ldr	x2, [sp, #40]
  401ba0:	mov	w3, #0x129                 	// #297
  401ba4:	ldr	x4, [sp, #24]
  401ba8:	bl	400e80 <log_assert_failed_realm@plt>
  401bac:	ldr	x8, [sp, #72]
  401bb0:	ldr	x8, [x8]
  401bb4:	ldr	x9, [sp, #64]
  401bb8:	str	x8, [x9, #408]
  401bbc:	cbz	x8, 401bd0 <server_init+0x530>
  401bc0:	ldr	x8, [sp, #64]
  401bc4:	ldr	x9, [sp, #64]
  401bc8:	ldr	x9, [x9, #408]
  401bcc:	str	x8, [x9, #416]
  401bd0:	ldr	x8, [sp, #64]
  401bd4:	mov	x9, xzr
  401bd8:	str	x9, [x8, #416]
  401bdc:	ldr	x8, [sp, #64]
  401be0:	ldr	x9, [sp, #72]
  401be4:	str	x8, [x9]
  401be8:	ldur	x8, [x29, #-16]
  401bec:	ldur	x9, [x29, #-80]
  401bf0:	str	x8, [x9]
  401bf4:	ldur	x8, [x29, #-16]
  401bf8:	ldr	w10, [x8, #16]
  401bfc:	add	w10, w10, #0x1
  401c00:	str	w10, [x8, #16]
  401c04:	ldur	w8, [x29, #-28]
  401c08:	add	w8, w8, #0x1
  401c0c:	stur	w8, [x29, #-28]
  401c10:	b	401850 <server_init+0x1b0>
  401c14:	ldur	x8, [x29, #-16]
  401c18:	add	x0, x8, #0x18
  401c1c:	bl	400ee0 <bus_connect_system_systemd@plt>
  401c20:	stur	w0, [x29, #-24]
  401c24:	ldur	w9, [x29, #-24]
  401c28:	cmp	w9, #0x0
  401c2c:	cset	w9, ge  // ge = tcont
  401c30:	tbnz	w9, #0, 401cb8 <server_init+0x618>
  401c34:	mov	w8, #0x3                   	// #3
  401c38:	str	w8, [sp, #60]
  401c3c:	ldur	w8, [x29, #-24]
  401c40:	str	w8, [sp, #56]
  401c44:	str	wzr, [sp, #52]
  401c48:	ldr	w0, [sp, #52]
  401c4c:	bl	400de0 <log_get_max_level_realm@plt>
  401c50:	ldr	w8, [sp, #60]
  401c54:	and	w8, w8, #0x7
  401c58:	cmp	w0, w8
  401c5c:	b.lt	401c90 <server_init+0x5f0>  // b.tstop
  401c60:	ldr	w8, [sp, #52]
  401c64:	ldr	w9, [sp, #60]
  401c68:	orr	w0, w9, w8, lsl #10
  401c6c:	ldr	w1, [sp, #56]
  401c70:	ldr	x2, [sp, #40]
  401c74:	mov	w3, #0x130                 	// #304
  401c78:	ldr	x4, [sp, #32]
  401c7c:	adrp	x5, 403000 <translate_runlevel.table+0x80>
  401c80:	add	x5, x5, #0x2d5
  401c84:	bl	400df0 <log_internal_realm@plt>
  401c88:	str	w0, [sp]
  401c8c:	b	401ca4 <server_init+0x604>
  401c90:	ldr	w0, [sp, #56]
  401c94:	bl	400e00 <abs@plt>
  401c98:	mov	w8, wzr
  401c9c:	subs	w8, w8, w0, uxtb
  401ca0:	str	w8, [sp]
  401ca4:	ldr	w8, [sp]
  401ca8:	str	w8, [sp, #48]
  401cac:	mov	w8, #0xfffffffb            	// #-5
  401cb0:	stur	w8, [x29, #-24]
  401cb4:	b	401cc0 <server_init+0x620>
  401cb8:	stur	wzr, [x29, #-4]
  401cbc:	b	401cd0 <server_init+0x630>
  401cc0:	ldur	x0, [x29, #-16]
  401cc4:	bl	401ebc <server_done>
  401cc8:	ldur	w8, [x29, #-24]
  401ccc:	stur	w8, [x29, #-4]
  401cd0:	ldur	w0, [x29, #-4]
  401cd4:	ldp	x29, x30, [sp, #240]
  401cd8:	add	sp, sp, #0x100
  401cdc:	ret

0000000000401ce0 <process_event>:
  401ce0:	sub	sp, sp, #0x70
  401ce4:	stp	x29, x30, [sp, #96]
  401ce8:	add	x29, sp, #0x60
  401cec:	adrp	x8, 403000 <translate_runlevel.table+0x80>
  401cf0:	add	x8, x8, #0x58
  401cf4:	add	x8, x8, #0x3
  401cf8:	stur	x0, [x29, #-16]
  401cfc:	stur	x1, [x29, #-24]
  401d00:	str	x8, [sp, #16]
  401d04:	ldur	x8, [x29, #-16]
  401d08:	cmp	x8, #0x0
  401d0c:	cset	w9, ne  // ne = any
  401d10:	mov	w10, #0x1                   	// #1
  401d14:	eor	w9, w9, #0x1
  401d18:	eor	w9, w9, w10
  401d1c:	eor	w9, w9, w10
  401d20:	and	w9, w9, #0x1
  401d24:	mov	w0, w9
  401d28:	sxtw	x8, w0
  401d2c:	cbz	x8, 401d54 <process_event+0x74>
  401d30:	mov	w8, wzr
  401d34:	mov	w0, w8
  401d38:	adrp	x1, 403000 <translate_runlevel.table+0x80>
  401d3c:	add	x1, x1, #0x1d5
  401d40:	ldr	x2, [sp, #16]
  401d44:	mov	w3, #0x141                 	// #321
  401d48:	adrp	x4, 403000 <translate_runlevel.table+0x80>
  401d4c:	add	x4, x4, #0x338
  401d50:	bl	400e80 <log_assert_failed_realm@plt>
  401d54:	ldur	x8, [x29, #-24]
  401d58:	ldr	w9, [x8]
  401d5c:	and	w9, w9, #0x1
  401d60:	cbnz	w9, 401df0 <process_event+0x110>
  401d64:	mov	w8, #0x6                   	// #6
  401d68:	stur	w8, [x29, #-44]
  401d6c:	mov	w8, #0x5                   	// #5
  401d70:	movk	w8, #0x4000, lsl #16
  401d74:	str	w8, [sp, #48]
  401d78:	str	wzr, [sp, #44]
  401d7c:	ldr	w0, [sp, #44]
  401d80:	bl	400de0 <log_get_max_level_realm@plt>
  401d84:	ldur	w8, [x29, #-44]
  401d88:	and	w8, w8, #0x7
  401d8c:	cmp	w0, w8
  401d90:	b.lt	401dc8 <process_event+0xe8>  // b.tstop
  401d94:	ldr	w8, [sp, #44]
  401d98:	ldur	w9, [x29, #-44]
  401d9c:	orr	w0, w9, w8, lsl #10
  401da0:	ldr	w1, [sp, #48]
  401da4:	ldr	x2, [sp, #16]
  401da8:	mov	w3, #0x145                 	// #325
  401dac:	adrp	x4, 403000 <translate_runlevel.table+0x80>
  401db0:	add	x4, x4, #0x36a
  401db4:	adrp	x5, 403000 <translate_runlevel.table+0x80>
  401db8:	add	x5, x5, #0x378
  401dbc:	bl	400df0 <log_internal_realm@plt>
  401dc0:	str	w0, [sp, #12]
  401dc4:	b	401ddc <process_event+0xfc>
  401dc8:	ldr	w0, [sp, #48]
  401dcc:	bl	400e00 <abs@plt>
  401dd0:	mov	w8, wzr
  401dd4:	subs	w8, w8, w0, uxtb
  401dd8:	str	w8, [sp, #12]
  401ddc:	ldr	w8, [sp, #12]
  401de0:	str	w8, [sp, #40]
  401de4:	ldr	w8, [sp, #40]
  401de8:	stur	w8, [x29, #-4]
  401dec:	b	401eac <process_event+0x1cc>
  401df0:	ldur	x8, [x29, #-24]
  401df4:	ldr	x8, [x8, #8]
  401df8:	stur	x8, [x29, #-40]
  401dfc:	ldur	x0, [x29, #-40]
  401e00:	bl	4021ec <fifo_process>
  401e04:	stur	w0, [x29, #-28]
  401e08:	ldur	w9, [x29, #-28]
  401e0c:	cmp	w9, #0x0
  401e10:	cset	w9, ge  // ge = tcont
  401e14:	tbnz	w9, #0, 401ea8 <process_event+0x1c8>
  401e18:	mov	w8, #0x6                   	// #6
  401e1c:	str	w8, [sp, #36]
  401e20:	ldur	w8, [x29, #-28]
  401e24:	str	w8, [sp, #32]
  401e28:	str	wzr, [sp, #28]
  401e2c:	ldr	w0, [sp, #28]
  401e30:	bl	400de0 <log_get_max_level_realm@plt>
  401e34:	ldr	w8, [sp, #36]
  401e38:	and	w8, w8, #0x7
  401e3c:	cmp	w0, w8
  401e40:	b.lt	401e78 <process_event+0x198>  // b.tstop
  401e44:	ldr	w8, [sp, #28]
  401e48:	ldr	w9, [sp, #36]
  401e4c:	orr	w0, w9, w8, lsl #10
  401e50:	ldr	w1, [sp, #32]
  401e54:	ldr	x2, [sp, #16]
  401e58:	mov	w3, #0x14a                 	// #330
  401e5c:	adrp	x4, 403000 <translate_runlevel.table+0x80>
  401e60:	add	x4, x4, #0x36a
  401e64:	adrp	x5, 403000 <translate_runlevel.table+0x80>
  401e68:	add	x5, x5, #0x39a
  401e6c:	bl	400df0 <log_internal_realm@plt>
  401e70:	str	w0, [sp, #8]
  401e74:	b	401e8c <process_event+0x1ac>
  401e78:	ldr	w0, [sp, #32]
  401e7c:	bl	400e00 <abs@plt>
  401e80:	mov	w8, wzr
  401e84:	subs	w8, w8, w0, uxtb
  401e88:	str	w8, [sp, #8]
  401e8c:	ldr	w8, [sp, #8]
  401e90:	str	w8, [sp, #24]
  401e94:	ldur	x0, [x29, #-40]
  401e98:	bl	401f7c <fifo_free>
  401e9c:	ldur	w8, [x29, #-28]
  401ea0:	stur	w8, [x29, #-4]
  401ea4:	b	401eac <process_event+0x1cc>
  401ea8:	stur	wzr, [x29, #-4]
  401eac:	ldur	w0, [x29, #-4]
  401eb0:	ldp	x29, x30, [sp, #96]
  401eb4:	add	sp, sp, #0x70
  401eb8:	ret

0000000000401ebc <server_done>:
  401ebc:	sub	sp, sp, #0x20
  401ec0:	stp	x29, x30, [sp, #16]
  401ec4:	add	x29, sp, #0x10
  401ec8:	adrp	x8, 403000 <translate_runlevel.table+0x80>
  401ecc:	add	x8, x8, #0x58
  401ed0:	add	x2, x8, #0x3
  401ed4:	str	x0, [sp, #8]
  401ed8:	str	x2, [sp]
  401edc:	ldr	x8, [sp, #8]
  401ee0:	cmp	x8, #0x0
  401ee4:	cset	w9, ne  // ne = any
  401ee8:	mov	w10, #0x1                   	// #1
  401eec:	eor	w9, w9, #0x1
  401ef0:	eor	w9, w9, w10
  401ef4:	eor	w9, w9, w10
  401ef8:	and	w9, w9, #0x1
  401efc:	mov	w0, w9
  401f00:	sxtw	x8, w0
  401f04:	cbz	x8, 401f2c <server_done+0x70>
  401f08:	mov	w8, wzr
  401f0c:	mov	w0, w8
  401f10:	adrp	x1, 403000 <translate_runlevel.table+0x80>
  401f14:	add	x1, x1, #0x1d5
  401f18:	ldr	x2, [sp]
  401f1c:	mov	w3, #0xe9                  	// #233
  401f20:	adrp	x4, 403000 <translate_runlevel.table+0x80>
  401f24:	add	x4, x4, #0x791
  401f28:	bl	400e80 <log_assert_failed_realm@plt>
  401f2c:	ldr	x8, [sp, #8]
  401f30:	ldr	x8, [x8, #8]
  401f34:	cbz	x8, 401f48 <server_done+0x8c>
  401f38:	ldr	x8, [sp, #8]
  401f3c:	ldr	x0, [x8, #8]
  401f40:	bl	401f7c <fifo_free>
  401f44:	b	401f2c <server_done+0x70>
  401f48:	ldr	x8, [sp, #8]
  401f4c:	ldr	w0, [x8]
  401f50:	bl	400ef0 <safe_close@plt>
  401f54:	ldr	x8, [sp, #8]
  401f58:	str	w0, [x8]
  401f5c:	ldr	x8, [sp, #8]
  401f60:	ldr	x0, [x8, #24]
  401f64:	bl	400f00 <sd_bus_flush_close_unref@plt>
  401f68:	ldr	x8, [sp, #8]
  401f6c:	str	x0, [x8, #24]
  401f70:	ldp	x29, x30, [sp, #16]
  401f74:	add	sp, sp, #0x20
  401f78:	ret

0000000000401f7c <fifo_free>:
  401f7c:	sub	sp, sp, #0x40
  401f80:	stp	x29, x30, [sp, #48]
  401f84:	add	x29, sp, #0x30
  401f88:	adrp	x8, 403000 <translate_runlevel.table+0x80>
  401f8c:	add	x8, x8, #0x58
  401f90:	add	x8, x8, #0x3
  401f94:	adrp	x9, 403000 <translate_runlevel.table+0x80>
  401f98:	add	x9, x9, #0x2fa
  401f9c:	stur	x0, [x29, #-8]
  401fa0:	str	x8, [sp, #16]
  401fa4:	str	x9, [sp, #8]
  401fa8:	ldur	x8, [x29, #-8]
  401fac:	cmp	x8, #0x0
  401fb0:	cset	w9, ne  // ne = any
  401fb4:	mov	w10, #0x1                   	// #1
  401fb8:	eor	w9, w9, #0x1
  401fbc:	eor	w9, w9, w10
  401fc0:	eor	w9, w9, w10
  401fc4:	and	w9, w9, #0x1
  401fc8:	mov	w0, w9
  401fcc:	sxtw	x8, w0
  401fd0:	cbz	x8, 401ff4 <fifo_free+0x78>
  401fd4:	mov	w8, wzr
  401fd8:	mov	w0, w8
  401fdc:	adrp	x1, 403000 <translate_runlevel.table+0x80>
  401fe0:	add	x1, x1, #0x2f8
  401fe4:	ldr	x2, [sp, #16]
  401fe8:	mov	w3, #0xd6                  	// #214
  401fec:	ldr	x4, [sp, #8]
  401ff0:	bl	400e80 <log_assert_failed_realm@plt>
  401ff4:	ldur	x8, [x29, #-8]
  401ff8:	ldr	x8, [x8]
  401ffc:	cbz	x8, 402188 <fifo_free+0x20c>
  402000:	ldur	x8, [x29, #-8]
  402004:	ldr	x8, [x8]
  402008:	ldr	w9, [x8, #16]
  40200c:	cmp	w9, #0x0
  402010:	cset	w9, hi  // hi = pmore
  402014:	mov	w10, #0x1                   	// #1
  402018:	eor	w9, w9, #0x1
  40201c:	eor	w9, w9, w10
  402020:	eor	w9, w9, w10
  402024:	and	w9, w9, #0x1
  402028:	mov	w0, w9
  40202c:	sxtw	x8, w0
  402030:	cbz	x8, 402054 <fifo_free+0xd8>
  402034:	mov	w8, wzr
  402038:	mov	w0, w8
  40203c:	adrp	x1, 403000 <translate_runlevel.table+0x80>
  402040:	add	x1, x1, #0x311
  402044:	ldr	x2, [sp, #16]
  402048:	mov	w3, #0xd9                  	// #217
  40204c:	ldr	x4, [sp, #8]
  402050:	bl	400e80 <log_assert_failed_realm@plt>
  402054:	ldur	x8, [x29, #-8]
  402058:	ldr	x8, [x8]
  40205c:	ldr	w9, [x8, #16]
  402060:	subs	w9, w9, #0x1
  402064:	str	w9, [x8, #16]
  402068:	ldur	x8, [x29, #-8]
  40206c:	ldr	x8, [x8]
  402070:	add	x8, x8, #0x8
  402074:	stur	x8, [x29, #-16]
  402078:	ldur	x8, [x29, #-8]
  40207c:	str	x8, [sp, #24]
  402080:	ldr	x8, [sp, #24]
  402084:	cmp	x8, #0x0
  402088:	cset	w9, ne  // ne = any
  40208c:	mov	w10, #0x1                   	// #1
  402090:	eor	w9, w9, #0x1
  402094:	eor	w9, w9, w10
  402098:	eor	w9, w9, w10
  40209c:	and	w9, w9, #0x1
  4020a0:	mov	w0, w9
  4020a4:	sxtw	x8, w0
  4020a8:	cbz	x8, 4020cc <fifo_free+0x150>
  4020ac:	mov	w8, wzr
  4020b0:	mov	w0, w8
  4020b4:	adrp	x1, 403000 <translate_runlevel.table+0x80>
  4020b8:	add	x1, x1, #0x2cf
  4020bc:	ldr	x2, [sp, #16]
  4020c0:	mov	w3, #0xdb                  	// #219
  4020c4:	ldr	x4, [sp, #8]
  4020c8:	bl	400e80 <log_assert_failed_realm@plt>
  4020cc:	ldr	x8, [sp, #24]
  4020d0:	ldr	x8, [x8, #408]
  4020d4:	cbz	x8, 4020ec <fifo_free+0x170>
  4020d8:	ldr	x8, [sp, #24]
  4020dc:	ldr	x8, [x8, #416]
  4020e0:	ldr	x9, [sp, #24]
  4020e4:	ldr	x9, [x9, #408]
  4020e8:	str	x8, [x9, #416]
  4020ec:	ldr	x8, [sp, #24]
  4020f0:	ldr	x8, [x8, #416]
  4020f4:	cbz	x8, 402110 <fifo_free+0x194>
  4020f8:	ldr	x8, [sp, #24]
  4020fc:	ldr	x8, [x8, #408]
  402100:	ldr	x9, [sp, #24]
  402104:	ldr	x9, [x9, #416]
  402108:	str	x8, [x9, #408]
  40210c:	b	402174 <fifo_free+0x1f8>
  402110:	ldur	x8, [x29, #-16]
  402114:	ldr	x8, [x8]
  402118:	ldr	x9, [sp, #24]
  40211c:	cmp	x8, x9
  402120:	cset	w10, eq  // eq = none
  402124:	mov	w11, #0x1                   	// #1
  402128:	eor	w10, w10, #0x1
  40212c:	eor	w10, w10, w11
  402130:	eor	w10, w10, w11
  402134:	and	w10, w10, #0x1
  402138:	mov	w0, w10
  40213c:	sxtw	x8, w0
  402140:	cbz	x8, 402164 <fifo_free+0x1e8>
  402144:	mov	w8, wzr
  402148:	mov	w0, w8
  40214c:	adrp	x1, 403000 <translate_runlevel.table+0x80>
  402150:	add	x1, x1, #0x328
  402154:	ldr	x2, [sp, #16]
  402158:	mov	w3, #0xdb                  	// #219
  40215c:	ldr	x4, [sp, #8]
  402160:	bl	400e80 <log_assert_failed_realm@plt>
  402164:	ldr	x8, [sp, #24]
  402168:	ldr	x8, [x8, #408]
  40216c:	ldur	x9, [x29, #-16]
  402170:	str	x8, [x9]
  402174:	ldr	x8, [sp, #24]
  402178:	mov	x9, xzr
  40217c:	str	x9, [x8, #416]
  402180:	ldr	x8, [sp, #24]
  402184:	str	x9, [x8, #408]
  402188:	ldur	x8, [x29, #-8]
  40218c:	ldr	w9, [x8, #8]
  402190:	cmp	w9, #0x0
  402194:	cset	w9, lt  // lt = tstop
  402198:	tbnz	w9, #0, 4021d8 <fifo_free+0x25c>
  40219c:	ldur	x8, [x29, #-8]
  4021a0:	ldr	x8, [x8]
  4021a4:	cbz	x8, 4021cc <fifo_free+0x250>
  4021a8:	ldur	x8, [x29, #-8]
  4021ac:	ldr	x8, [x8]
  4021b0:	ldr	w0, [x8]
  4021b4:	ldur	x8, [x29, #-8]
  4021b8:	ldr	w2, [x8, #8]
  4021bc:	mov	w1, #0x2                   	// #2
  4021c0:	mov	x8, xzr
  4021c4:	mov	x3, x8
  4021c8:	bl	400ed0 <epoll_ctl@plt>
  4021cc:	ldur	x8, [x29, #-8]
  4021d0:	ldr	w0, [x8, #8]
  4021d4:	bl	400ef0 <safe_close@plt>
  4021d8:	ldur	x0, [x29, #-8]
  4021dc:	bl	400f10 <free@plt>
  4021e0:	ldp	x29, x30, [sp, #48]
  4021e4:	add	sp, sp, #0x40
  4021e8:	ret

00000000004021ec <fifo_process>:
  4021ec:	sub	sp, sp, #0x50
  4021f0:	stp	x29, x30, [sp, #64]
  4021f4:	add	x29, sp, #0x40
  4021f8:	adrp	x8, 403000 <translate_runlevel.table+0x80>
  4021fc:	add	x8, x8, #0x58
  402200:	add	x8, x8, #0x3
  402204:	stur	x0, [x29, #-16]
  402208:	str	x8, [sp, #16]
  40220c:	ldur	x8, [x29, #-16]
  402210:	cmp	x8, #0x0
  402214:	cset	w9, ne  // ne = any
  402218:	mov	w10, #0x1                   	// #1
  40221c:	eor	w9, w9, #0x1
  402220:	eor	w9, w9, w10
  402224:	eor	w9, w9, w10
  402228:	and	w9, w9, #0x1
  40222c:	mov	w0, w9
  402230:	sxtw	x8, w0
  402234:	cbz	x8, 40225c <fifo_process+0x70>
  402238:	mov	w8, wzr
  40223c:	mov	w0, w8
  402240:	adrp	x1, 403000 <translate_runlevel.table+0x80>
  402244:	add	x1, x1, #0x2f8
  402248:	ldr	x2, [sp, #16]
  40224c:	mov	w3, #0xbd                  	// #189
  402250:	adrp	x4, 403000 <translate_runlevel.table+0x80>
  402254:	add	x4, x4, #0x3b0
  402258:	bl	400e80 <log_assert_failed_realm@plt>
  40225c:	bl	400e70 <__errno_location@plt>
  402260:	mov	w8, #0x5                   	// #5
  402264:	str	w8, [x0]
  402268:	ldur	x9, [x29, #-16]
  40226c:	ldr	w0, [x9, #8]
  402270:	ldur	x9, [x29, #-16]
  402274:	add	x9, x9, #0xc
  402278:	ldur	x10, [x29, #-16]
  40227c:	ldr	x10, [x10, #400]
  402280:	add	x1, x9, x10
  402284:	ldur	x9, [x29, #-16]
  402288:	ldr	x9, [x9, #400]
  40228c:	mov	x10, #0x180                 	// #384
  402290:	subs	x2, x10, x9
  402294:	bl	400f20 <read@plt>
  402298:	stur	x0, [x29, #-24]
  40229c:	ldur	x9, [x29, #-24]
  4022a0:	cmp	x9, #0x0
  4022a4:	cset	w8, gt
  4022a8:	tbnz	w8, #0, 402350 <fifo_process+0x164>
  4022ac:	bl	400e70 <__errno_location@plt>
  4022b0:	ldr	w8, [x0]
  4022b4:	cmp	w8, #0xb
  4022b8:	b.ne	4022c4 <fifo_process+0xd8>  // b.any
  4022bc:	stur	wzr, [x29, #-4]
  4022c0:	b	4023e8 <fifo_process+0x1fc>
  4022c4:	mov	w8, #0x4                   	// #4
  4022c8:	stur	w8, [x29, #-28]
  4022cc:	bl	400e70 <__errno_location@plt>
  4022d0:	ldr	w8, [x0]
  4022d4:	str	w8, [sp, #32]
  4022d8:	str	wzr, [sp, #28]
  4022dc:	ldr	w0, [sp, #28]
  4022e0:	bl	400de0 <log_get_max_level_realm@plt>
  4022e4:	ldur	w8, [x29, #-28]
  4022e8:	and	w8, w8, #0x7
  4022ec:	cmp	w0, w8
  4022f0:	b.lt	402328 <fifo_process+0x13c>  // b.tstop
  4022f4:	ldr	w8, [sp, #28]
  4022f8:	ldur	w9, [x29, #-28]
  4022fc:	orr	w0, w9, w8, lsl #10
  402300:	ldr	w1, [sp, #32]
  402304:	ldr	x2, [sp, #16]
  402308:	mov	w3, #0xc7                  	// #199
  40230c:	adrp	x4, 403000 <translate_runlevel.table+0x80>
  402310:	add	x4, x4, #0x3c9
  402314:	adrp	x5, 403000 <translate_runlevel.table+0x80>
  402318:	add	x5, x5, #0x3d6
  40231c:	bl	400df0 <log_internal_realm@plt>
  402320:	str	w0, [sp, #12]
  402324:	b	40233c <fifo_process+0x150>
  402328:	ldr	w0, [sp, #32]
  40232c:	bl	400e00 <abs@plt>
  402330:	mov	w8, wzr
  402334:	subs	w8, w8, w0, uxtb
  402338:	str	w8, [sp, #12]
  40233c:	ldr	w8, [sp, #12]
  402340:	str	w8, [sp, #24]
  402344:	ldr	w8, [sp, #24]
  402348:	stur	w8, [x29, #-4]
  40234c:	b	4023e8 <fifo_process+0x1fc>
  402350:	ldur	x8, [x29, #-24]
  402354:	ldur	x9, [x29, #-16]
  402358:	ldr	x10, [x9, #400]
  40235c:	add	x8, x10, x8
  402360:	str	x8, [x9, #400]
  402364:	ldur	x8, [x29, #-16]
  402368:	ldr	x8, [x8, #400]
  40236c:	cmp	x8, #0x180
  402370:	cset	w9, ls  // ls = plast
  402374:	mov	w10, #0x1                   	// #1
  402378:	eor	w9, w9, #0x1
  40237c:	eor	w9, w9, w10
  402380:	eor	w9, w9, w10
  402384:	and	w9, w9, #0x1
  402388:	mov	w0, w9
  40238c:	sxtw	x8, w0
  402390:	cbz	x8, 4023b8 <fifo_process+0x1cc>
  402394:	mov	w8, wzr
  402398:	mov	w0, w8
  40239c:	adrp	x1, 403000 <translate_runlevel.table+0x80>
  4023a0:	add	x1, x1, #0x3f3
  4023a4:	ldr	x2, [sp, #16]
  4023a8:	mov	w3, #0xcb                  	// #203
  4023ac:	adrp	x4, 403000 <translate_runlevel.table+0x80>
  4023b0:	add	x4, x4, #0x3b0
  4023b4:	bl	400e80 <log_assert_failed_realm@plt>
  4023b8:	ldur	x8, [x29, #-16]
  4023bc:	ldr	x8, [x8, #400]
  4023c0:	cmp	x8, #0x180
  4023c4:	b.ne	4023e4 <fifo_process+0x1f8>  // b.any
  4023c8:	ldur	x8, [x29, #-16]
  4023cc:	ldr	x0, [x8]
  4023d0:	ldur	x8, [x29, #-16]
  4023d4:	add	x1, x8, #0xc
  4023d8:	bl	4023f8 <request_process>
  4023dc:	ldur	x8, [x29, #-16]
  4023e0:	str	xzr, [x8, #400]
  4023e4:	stur	wzr, [x29, #-4]
  4023e8:	ldur	w0, [x29, #-4]
  4023ec:	ldp	x29, x30, [sp, #64]
  4023f0:	add	sp, sp, #0x50
  4023f4:	ret

00000000004023f8 <request_process>:
  4023f8:	sub	sp, sp, #0xe0
  4023fc:	stp	x29, x30, [sp, #208]
  402400:	add	x29, sp, #0xd0
  402404:	adrp	x8, 403000 <translate_runlevel.table+0x80>
  402408:	add	x8, x8, #0x58
  40240c:	add	x8, x8, #0x3
  402410:	adrp	x9, 403000 <translate_runlevel.table+0x80>
  402414:	add	x9, x9, #0x456
  402418:	stur	x0, [x29, #-8]
  40241c:	stur	x1, [x29, #-16]
  402420:	str	x8, [sp, #56]
  402424:	str	x9, [sp, #48]
  402428:	ldur	x8, [x29, #-8]
  40242c:	cmp	x8, #0x0
  402430:	cset	w9, ne  // ne = any
  402434:	mov	w10, #0x1                   	// #1
  402438:	eor	w9, w9, #0x1
  40243c:	eor	w9, w9, w10
  402440:	eor	w9, w9, w10
  402444:	and	w9, w9, #0x1
  402448:	mov	w0, w9
  40244c:	sxtw	x8, w0
  402450:	cbz	x8, 402478 <request_process+0x80>
  402454:	mov	w8, wzr
  402458:	mov	w0, w8
  40245c:	adrp	x1, 403000 <translate_runlevel.table+0x80>
  402460:	add	x1, x1, #0x1d5
  402464:	ldr	x2, [sp, #56]
  402468:	mov	w3, #0x7c                  	// #124
  40246c:	adrp	x4, 403000 <translate_runlevel.table+0x80>
  402470:	add	x4, x4, #0x416
  402474:	bl	400e80 <log_assert_failed_realm@plt>
  402478:	ldur	x8, [x29, #-16]
  40247c:	cmp	x8, #0x0
  402480:	cset	w9, ne  // ne = any
  402484:	mov	w10, #0x1                   	// #1
  402488:	eor	w9, w9, #0x1
  40248c:	eor	w9, w9, w10
  402490:	eor	w9, w9, w10
  402494:	and	w9, w9, #0x1
  402498:	mov	w0, w9
  40249c:	sxtw	x8, w0
  4024a0:	cbz	x8, 4024c8 <request_process+0xd0>
  4024a4:	mov	w8, wzr
  4024a8:	mov	w0, w8
  4024ac:	adrp	x1, 403000 <translate_runlevel.table+0x80>
  4024b0:	add	x1, x1, #0x452
  4024b4:	ldr	x2, [sp, #56]
  4024b8:	mov	w3, #0x7d                  	// #125
  4024bc:	adrp	x4, 403000 <translate_runlevel.table+0x80>
  4024c0:	add	x4, x4, #0x416
  4024c4:	bl	400e80 <log_assert_failed_realm@plt>
  4024c8:	ldur	x8, [x29, #-16]
  4024cc:	ldr	w9, [x8]
  4024d0:	mov	w10, #0x1969                	// #6505
  4024d4:	movk	w10, #0x309, lsl #16
  4024d8:	cmp	w9, w10
  4024dc:	b.eq	402558 <request_process+0x160>  // b.none
  4024e0:	mov	w8, #0x3                   	// #3
  4024e4:	stur	w8, [x29, #-20]
  4024e8:	stur	wzr, [x29, #-24]
  4024ec:	stur	wzr, [x29, #-28]
  4024f0:	ldur	w0, [x29, #-28]
  4024f4:	bl	400de0 <log_get_max_level_realm@plt>
  4024f8:	ldur	w8, [x29, #-20]
  4024fc:	and	w8, w8, #0x7
  402500:	cmp	w0, w8
  402504:	b.lt	402538 <request_process+0x140>  // b.tstop
  402508:	ldur	w8, [x29, #-28]
  40250c:	ldur	w9, [x29, #-20]
  402510:	orr	w0, w9, w8, lsl #10
  402514:	ldur	w1, [x29, #-24]
  402518:	ldr	x2, [sp, #56]
  40251c:	mov	w3, #0x80                  	// #128
  402520:	ldr	x4, [sp, #48]
  402524:	adrp	x5, 403000 <translate_runlevel.table+0x80>
  402528:	add	x5, x5, #0x466
  40252c:	bl	400df0 <log_internal_realm@plt>
  402530:	str	w0, [sp, #44]
  402534:	b	40254c <request_process+0x154>
  402538:	ldur	w0, [x29, #-24]
  40253c:	bl	400e00 <abs@plt>
  402540:	mov	w8, wzr
  402544:	subs	w8, w8, w0, uxtb
  402548:	str	w8, [sp, #44]
  40254c:	ldr	w8, [sp, #44]
  402550:	stur	w8, [x29, #-32]
  402554:	b	4029a8 <request_process+0x5b0>
  402558:	ldur	x8, [x29, #-16]
  40255c:	ldr	w9, [x8, #4]
  402560:	cmp	w9, #0x1
  402564:	str	w9, [sp, #40]
  402568:	b.eq	4025ac <request_process+0x1b4>  // b.none
  40256c:	b	402570 <request_process+0x178>
  402570:	ldr	w8, [sp, #40]
  402574:	subs	w9, w8, #0x2
  402578:	cmp	w9, #0x2
  40257c:	b.ls	4027cc <request_process+0x3d4>  // b.plast
  402580:	b	402584 <request_process+0x18c>
  402584:	ldr	w8, [sp, #40]
  402588:	subs	w9, w8, #0x6
  40258c:	cmp	w9, #0x1
  402590:	b.ls	4028bc <request_process+0x4c4>  // b.plast
  402594:	b	402598 <request_process+0x1a0>
  402598:	mov	w8, #0x3039                	// #12345
  40259c:	ldr	w9, [sp, #40]
  4025a0:	cmp	w9, w8
  4025a4:	b.eq	402844 <request_process+0x44c>  // b.none
  4025a8:	b	402934 <request_process+0x53c>
  4025ac:	bl	400f30 <__ctype_b_loc@plt>
  4025b0:	ldr	x8, [x0]
  4025b4:	ldur	x9, [x29, #-16]
  4025b8:	ldrsw	x9, [x9, #8]
  4025bc:	ldrh	w10, [x8, x9, lsl #1]
  4025c0:	and	w10, w10, #0x4000
  4025c4:	cbnz	w10, 402640 <request_process+0x248>
  4025c8:	mov	w8, #0x3                   	// #3
  4025cc:	stur	w8, [x29, #-36]
  4025d0:	stur	wzr, [x29, #-40]
  4025d4:	stur	wzr, [x29, #-44]
  4025d8:	ldur	w0, [x29, #-44]
  4025dc:	bl	400de0 <log_get_max_level_realm@plt>
  4025e0:	ldur	w8, [x29, #-36]
  4025e4:	and	w8, w8, #0x7
  4025e8:	cmp	w0, w8
  4025ec:	b.lt	402620 <request_process+0x228>  // b.tstop
  4025f0:	ldur	w8, [x29, #-44]
  4025f4:	ldur	w9, [x29, #-36]
  4025f8:	orr	w0, w9, w8, lsl #10
  4025fc:	ldur	w1, [x29, #-40]
  402600:	ldr	x2, [sp, #56]
  402604:	mov	w3, #0x88                  	// #136
  402608:	ldr	x4, [sp, #48]
  40260c:	adrp	x5, 403000 <translate_runlevel.table+0x80>
  402610:	add	x5, x5, #0x498
  402614:	bl	400df0 <log_internal_realm@plt>
  402618:	str	w0, [sp, #36]
  40261c:	b	402634 <request_process+0x23c>
  402620:	ldur	w0, [x29, #-40]
  402624:	bl	400e00 <abs@plt>
  402628:	mov	w8, wzr
  40262c:	subs	w8, w8, w0, uxtb
  402630:	str	w8, [sp, #36]
  402634:	ldr	w8, [sp, #36]
  402638:	stur	w8, [x29, #-48]
  40263c:	b	4027c8 <request_process+0x3d0>
  402640:	ldur	x8, [x29, #-16]
  402644:	ldr	w9, [x8, #8]
  402648:	subs	w9, w9, #0x51
  40264c:	mov	w8, w9
  402650:	ubfx	x8, x8, #0, #32
  402654:	cmp	x8, #0x24
  402658:	str	x8, [sp, #24]
  40265c:	b.hi	4027b8 <request_process+0x3c0>  // b.pmore
  402660:	adrp	x8, 402000 <fifo_free+0x84>
  402664:	add	x8, x8, #0xee0
  402668:	ldr	x11, [sp, #24]
  40266c:	ldrsw	x10, [x8, x11, lsl #2]
  402670:	add	x9, x8, x10
  402674:	br	x9
  402678:	mov	w0, #0x1                   	// #1
  40267c:	mov	w1, #0xf                   	// #15
  402680:	bl	400f40 <kill@plt>
  402684:	cmp	w0, #0x0
  402688:	cset	w8, ge  // ge = tcont
  40268c:	tbnz	w8, #0, 40270c <request_process+0x314>
  402690:	mov	w8, #0x3                   	// #3
  402694:	stur	w8, [x29, #-52]
  402698:	bl	400e70 <__errno_location@plt>
  40269c:	ldr	w8, [x0]
  4026a0:	stur	w8, [x29, #-56]
  4026a4:	stur	wzr, [x29, #-60]
  4026a8:	ldur	w0, [x29, #-60]
  4026ac:	bl	400de0 <log_get_max_level_realm@plt>
  4026b0:	ldur	w8, [x29, #-52]
  4026b4:	and	w8, w8, #0x7
  4026b8:	cmp	w0, w8
  4026bc:	b.lt	4026f0 <request_process+0x2f8>  // b.tstop
  4026c0:	ldur	w8, [x29, #-60]
  4026c4:	ldur	w9, [x29, #-52]
  4026c8:	orr	w0, w9, w8, lsl #10
  4026cc:	ldur	w1, [x29, #-56]
  4026d0:	ldr	x2, [sp, #56]
  4026d4:	mov	w3, #0x90                  	// #144
  4026d8:	ldr	x4, [sp, #48]
  4026dc:	adrp	x5, 403000 <translate_runlevel.table+0x80>
  4026e0:	add	x5, x5, #0x4b8
  4026e4:	bl	400df0 <log_internal_realm@plt>
  4026e8:	str	w0, [sp, #20]
  4026ec:	b	402704 <request_process+0x30c>
  4026f0:	ldur	w0, [x29, #-56]
  4026f4:	bl	400e00 <abs@plt>
  4026f8:	mov	w8, wzr
  4026fc:	subs	w8, w8, w0, uxtb
  402700:	str	w8, [sp, #20]
  402704:	ldr	w8, [sp, #20]
  402708:	stur	w8, [x29, #-64]
  40270c:	ldur	x8, [x29, #-8]
  402710:	mov	w9, #0x1                   	// #1
  402714:	strb	w9, [x8, #32]
  402718:	b	4027c8 <request_process+0x3d0>
  40271c:	mov	w8, #0x1                   	// #1
  402720:	mov	w0, w8
  402724:	mov	w1, w8
  402728:	bl	400f40 <kill@plt>
  40272c:	cmp	w0, #0x0
  402730:	cset	w8, ge  // ge = tcont
  402734:	tbnz	w8, #0, 4027b4 <request_process+0x3bc>
  402738:	mov	w8, #0x3                   	// #3
  40273c:	stur	w8, [x29, #-68]
  402740:	bl	400e70 <__errno_location@plt>
  402744:	ldr	w8, [x0]
  402748:	stur	w8, [x29, #-72]
  40274c:	stur	wzr, [x29, #-76]
  402750:	ldur	w0, [x29, #-76]
  402754:	bl	400de0 <log_get_max_level_realm@plt>
  402758:	ldur	w8, [x29, #-68]
  40275c:	and	w8, w8, #0x7
  402760:	cmp	w0, w8
  402764:	b.lt	402798 <request_process+0x3a0>  // b.tstop
  402768:	ldur	w8, [x29, #-76]
  40276c:	ldur	w9, [x29, #-68]
  402770:	orr	w0, w9, w8, lsl #10
  402774:	ldur	w1, [x29, #-72]
  402778:	ldr	x2, [sp, #56]
  40277c:	mov	w3, #0x9d                  	// #157
  402780:	ldr	x4, [sp, #48]
  402784:	adrp	x5, 403000 <translate_runlevel.table+0x80>
  402788:	add	x5, x5, #0x4b8
  40278c:	bl	400df0 <log_internal_realm@plt>
  402790:	str	w0, [sp, #16]
  402794:	b	4027ac <request_process+0x3b4>
  402798:	ldur	w0, [x29, #-72]
  40279c:	bl	400e00 <abs@plt>
  4027a0:	mov	w8, wzr
  4027a4:	subs	w8, w8, w0, uxtb
  4027a8:	str	w8, [sp, #16]
  4027ac:	ldr	w8, [sp, #16]
  4027b0:	stur	w8, [x29, #-80]
  4027b4:	b	4027c8 <request_process+0x3d0>
  4027b8:	ldur	x0, [x29, #-8]
  4027bc:	ldur	x8, [x29, #-16]
  4027c0:	ldr	w1, [x8, #8]
  4027c4:	bl	4029b4 <change_runlevel>
  4027c8:	b	4029a8 <request_process+0x5b0>
  4027cc:	mov	w8, #0x4                   	// #4
  4027d0:	stur	w8, [x29, #-84]
  4027d4:	stur	wzr, [x29, #-88]
  4027d8:	stur	wzr, [x29, #-92]
  4027dc:	ldur	w0, [x29, #-92]
  4027e0:	bl	400de0 <log_get_max_level_realm@plt>
  4027e4:	ldur	w8, [x29, #-84]
  4027e8:	and	w8, w8, #0x7
  4027ec:	cmp	w0, w8
  4027f0:	b.lt	402824 <request_process+0x42c>  // b.tstop
  4027f4:	ldur	w8, [x29, #-92]
  4027f8:	ldur	w9, [x29, #-84]
  4027fc:	orr	w0, w9, w8, lsl #10
  402800:	ldur	w1, [x29, #-88]
  402804:	ldr	x2, [sp, #56]
  402808:	mov	w3, #0xa8                  	// #168
  40280c:	ldr	x4, [sp, #48]
  402810:	adrp	x5, 403000 <translate_runlevel.table+0x80>
  402814:	add	x5, x5, #0x4ca
  402818:	bl	400df0 <log_internal_realm@plt>
  40281c:	str	w0, [sp, #12]
  402820:	b	402838 <request_process+0x440>
  402824:	ldur	w0, [x29, #-88]
  402828:	bl	400e00 <abs@plt>
  40282c:	mov	w8, wzr
  402830:	subs	w8, w8, w0, uxtb
  402834:	str	w8, [sp, #12]
  402838:	ldr	w8, [sp, #12]
  40283c:	stur	w8, [x29, #-96]
  402840:	b	4029a8 <request_process+0x5b0>
  402844:	mov	w8, #0x4                   	// #4
  402848:	stur	w8, [x29, #-100]
  40284c:	str	wzr, [sp, #104]
  402850:	str	wzr, [sp, #100]
  402854:	ldr	w0, [sp, #100]
  402858:	bl	400de0 <log_get_max_level_realm@plt>
  40285c:	ldur	w8, [x29, #-100]
  402860:	and	w8, w8, #0x7
  402864:	cmp	w0, w8
  402868:	b.lt	40289c <request_process+0x4a4>  // b.tstop
  40286c:	ldr	w8, [sp, #100]
  402870:	ldur	w9, [x29, #-100]
  402874:	orr	w0, w9, w8, lsl #10
  402878:	ldr	w1, [sp, #104]
  40287c:	ldr	x2, [sp, #56]
  402880:	mov	w3, #0xac                  	// #172
  402884:	ldr	x4, [sp, #48]
  402888:	adrp	x5, 403000 <translate_runlevel.table+0x80>
  40288c:	add	x5, x5, #0x52b
  402890:	bl	400df0 <log_internal_realm@plt>
  402894:	str	w0, [sp, #8]
  402898:	b	4028b0 <request_process+0x4b8>
  40289c:	ldr	w0, [sp, #104]
  4028a0:	bl	400e00 <abs@plt>
  4028a4:	mov	w8, wzr
  4028a8:	subs	w8, w8, w0, uxtb
  4028ac:	str	w8, [sp, #8]
  4028b0:	ldr	w8, [sp, #8]
  4028b4:	str	w8, [sp, #96]
  4028b8:	b	4029a8 <request_process+0x5b0>
  4028bc:	mov	w8, #0x4                   	// #4
  4028c0:	str	w8, [sp, #92]
  4028c4:	str	wzr, [sp, #88]
  4028c8:	str	wzr, [sp, #84]
  4028cc:	ldr	w0, [sp, #84]
  4028d0:	bl	400de0 <log_get_max_level_realm@plt>
  4028d4:	ldr	w8, [sp, #92]
  4028d8:	and	w8, w8, #0x7
  4028dc:	cmp	w0, w8
  4028e0:	b.lt	402914 <request_process+0x51c>  // b.tstop
  4028e4:	ldr	w8, [sp, #84]
  4028e8:	ldr	w9, [sp, #92]
  4028ec:	orr	w0, w9, w8, lsl #10
  4028f0:	ldr	w1, [sp, #88]
  4028f4:	ldr	x2, [sp, #56]
  4028f8:	mov	w3, #0xb1                  	// #177
  4028fc:	ldr	x4, [sp, #48]
  402900:	adrp	x5, 403000 <translate_runlevel.table+0x80>
  402904:	add	x5, x5, #0x578
  402908:	bl	400df0 <log_internal_realm@plt>
  40290c:	str	w0, [sp, #4]
  402910:	b	402928 <request_process+0x530>
  402914:	ldr	w0, [sp, #88]
  402918:	bl	400e00 <abs@plt>
  40291c:	mov	w8, wzr
  402920:	subs	w8, w8, w0, uxtb
  402924:	str	w8, [sp, #4]
  402928:	ldr	w8, [sp, #4]
  40292c:	str	w8, [sp, #80]
  402930:	b	4029a8 <request_process+0x5b0>
  402934:	mov	w8, #0x4                   	// #4
  402938:	str	w8, [sp, #76]
  40293c:	str	wzr, [sp, #72]
  402940:	str	wzr, [sp, #68]
  402944:	ldr	w0, [sp, #68]
  402948:	bl	400de0 <log_get_max_level_realm@plt>
  40294c:	ldr	w8, [sp, #76]
  402950:	and	w8, w8, #0x7
  402954:	cmp	w0, w8
  402958:	b.lt	40298c <request_process+0x594>  // b.tstop
  40295c:	ldr	w8, [sp, #68]
  402960:	ldr	w9, [sp, #76]
  402964:	orr	w0, w9, w8, lsl #10
  402968:	ldr	w1, [sp, #72]
  40296c:	ldr	x2, [sp, #56]
  402970:	mov	w3, #0xb5                  	// #181
  402974:	ldr	x4, [sp, #48]
  402978:	adrp	x5, 403000 <translate_runlevel.table+0x80>
  40297c:	add	x5, x5, #0x5c2
  402980:	bl	400df0 <log_internal_realm@plt>
  402984:	str	w0, [sp]
  402988:	b	4029a0 <request_process+0x5a8>
  40298c:	ldr	w0, [sp, #72]
  402990:	bl	400e00 <abs@plt>
  402994:	mov	w8, wzr
  402998:	subs	w8, w8, w0, uxtb
  40299c:	str	w8, [sp]
  4029a0:	ldr	w8, [sp]
  4029a4:	str	w8, [sp, #64]
  4029a8:	ldp	x29, x30, [sp, #208]
  4029ac:	add	sp, sp, #0xe0
  4029b0:	ret

00000000004029b4 <change_runlevel>:
  4029b4:	sub	sp, sp, #0xd0
  4029b8:	stp	x29, x30, [sp, #192]
  4029bc:	add	x29, sp, #0xc0
  4029c0:	mov	w8, #0x0                   	// #0
  4029c4:	adrp	x9, 403000 <translate_runlevel.table+0x80>
  4029c8:	add	x9, x9, #0x58
  4029cc:	add	x9, x9, #0x3
  4029d0:	adrp	x10, 403000 <translate_runlevel.table+0x80>
  4029d4:	add	x10, x10, #0x611
  4029d8:	stur	x0, [x29, #-16]
  4029dc:	stur	w1, [x29, #-20]
  4029e0:	stur	xzr, [x29, #-56]
  4029e4:	stur	xzr, [x29, #-48]
  4029e8:	stur	xzr, [x29, #-40]
  4029ec:	sturb	w8, [x29, #-65]
  4029f0:	str	x9, [sp, #56]
  4029f4:	str	x10, [sp, #48]
  4029f8:	ldur	x8, [x29, #-16]
  4029fc:	cmp	x8, #0x0
  402a00:	cset	w9, ne  // ne = any
  402a04:	mov	w10, #0x1                   	// #1
  402a08:	eor	w9, w9, #0x1
  402a0c:	eor	w9, w9, w10
  402a10:	eor	w9, w9, w10
  402a14:	and	w9, w9, #0x1
  402a18:	mov	w0, w9
  402a1c:	sxtw	x8, w0
  402a20:	cbz	x8, 402a48 <change_runlevel+0x94>
  402a24:	mov	w8, wzr
  402a28:	mov	w0, w8
  402a2c:	adrp	x1, 403000 <translate_runlevel.table+0x80>
  402a30:	add	x1, x1, #0x1d5
  402a34:	ldr	x2, [sp, #56]
  402a38:	mov	w3, #0x5d                  	// #93
  402a3c:	adrp	x4, 403000 <translate_runlevel.table+0x80>
  402a40:	add	x4, x4, #0x5ee
  402a44:	bl	400e80 <log_assert_failed_realm@plt>
  402a48:	ldur	w0, [x29, #-20]
  402a4c:	sub	x1, x29, #0x41
  402a50:	bl	402ce0 <translate_runlevel>
  402a54:	stur	x0, [x29, #-32]
  402a58:	ldur	x8, [x29, #-32]
  402a5c:	cbnz	x8, 402ae8 <change_runlevel+0x134>
  402a60:	mov	w8, #0x4                   	// #4
  402a64:	stur	w8, [x29, #-76]
  402a68:	stur	wzr, [x29, #-80]
  402a6c:	stur	wzr, [x29, #-84]
  402a70:	ldur	w0, [x29, #-84]
  402a74:	bl	400de0 <log_get_max_level_realm@plt>
  402a78:	ldur	w8, [x29, #-76]
  402a7c:	and	w8, w8, #0x7
  402a80:	cmp	w0, w8
  402a84:	b.lt	402abc <change_runlevel+0x108>  // b.tstop
  402a88:	ldur	w8, [x29, #-84]
  402a8c:	ldur	w9, [x29, #-76]
  402a90:	orr	w0, w9, w8, lsl #10
  402a94:	ldur	w1, [x29, #-80]
  402a98:	ldur	w6, [x29, #-20]
  402a9c:	ldr	x2, [sp, #56]
  402aa0:	mov	w3, #0x61                  	// #97
  402aa4:	ldr	x4, [sp, #48]
  402aa8:	adrp	x5, 403000 <translate_runlevel.table+0x80>
  402aac:	add	x5, x5, #0x621
  402ab0:	bl	400df0 <log_internal_realm@plt>
  402ab4:	str	w0, [sp, #44]
  402ab8:	b	402ad0 <change_runlevel+0x11c>
  402abc:	ldur	w0, [x29, #-80]
  402ac0:	bl	400e00 <abs@plt>
  402ac4:	mov	w8, wzr
  402ac8:	subs	w8, w8, w0, uxtb
  402acc:	str	w8, [sp, #44]
  402ad0:	ldr	w8, [sp, #44]
  402ad4:	stur	w8, [x29, #-88]
  402ad8:	stur	wzr, [x29, #-4]
  402adc:	mov	w8, #0x1                   	// #1
  402ae0:	stur	w8, [x29, #-92]
  402ae4:	b	402cc8 <change_runlevel+0x314>
  402ae8:	ldurb	w8, [x29, #-65]
  402aec:	tbnz	w8, #0, 402af4 <change_runlevel+0x140>
  402af0:	b	402b04 <change_runlevel+0x150>
  402af4:	adrp	x8, 403000 <translate_runlevel.table+0x80>
  402af8:	add	x8, x8, #0x650
  402afc:	stur	x8, [x29, #-64]
  402b00:	b	402b10 <change_runlevel+0x15c>
  402b04:	adrp	x8, 403000 <translate_runlevel.table+0x80>
  402b08:	add	x8, x8, #0x658
  402b0c:	stur	x8, [x29, #-64]
  402b10:	mov	w8, #0x7                   	// #7
  402b14:	str	w8, [sp, #96]
  402b18:	str	wzr, [sp, #92]
  402b1c:	str	wzr, [sp, #88]
  402b20:	ldr	w0, [sp, #88]
  402b24:	bl	400de0 <log_get_max_level_realm@plt>
  402b28:	ldr	w8, [sp, #96]
  402b2c:	and	w8, w8, #0x7
  402b30:	cmp	w0, w8
  402b34:	b.lt	402b70 <change_runlevel+0x1bc>  // b.tstop
  402b38:	ldr	w8, [sp, #88]
  402b3c:	ldr	w9, [sp, #96]
  402b40:	orr	w0, w9, w8, lsl #10
  402b44:	ldr	w1, [sp, #92]
  402b48:	ldur	x6, [x29, #-32]
  402b4c:	ldur	x7, [x29, #-64]
  402b50:	ldr	x2, [sp, #56]
  402b54:	mov	w3, #0x6a                  	// #106
  402b58:	ldr	x4, [sp, #48]
  402b5c:	adrp	x5, 403000 <translate_runlevel.table+0x80>
  402b60:	add	x5, x5, #0x66d
  402b64:	bl	400df0 <log_internal_realm@plt>
  402b68:	str	w0, [sp, #40]
  402b6c:	b	402b84 <change_runlevel+0x1d0>
  402b70:	ldr	w0, [sp, #92]
  402b74:	bl	400e00 <abs@plt>
  402b78:	mov	w8, wzr
  402b7c:	subs	w8, w8, w0, uxtb
  402b80:	str	w8, [sp, #40]
  402b84:	ldr	w8, [sp, #40]
  402b88:	str	w8, [sp, #84]
  402b8c:	ldur	x9, [x29, #-16]
  402b90:	ldr	x0, [x9, #24]
  402b94:	ldur	x9, [x29, #-32]
  402b98:	ldur	x10, [x29, #-64]
  402b9c:	adrp	x1, 403000 <translate_runlevel.table+0x80>
  402ba0:	add	x1, x1, #0x689
  402ba4:	adrp	x2, 403000 <translate_runlevel.table+0x80>
  402ba8:	add	x2, x2, #0x6a2
  402bac:	adrp	x3, 403000 <translate_runlevel.table+0x80>
  402bb0:	add	x3, x3, #0x6bc
  402bb4:	adrp	x4, 403000 <translate_runlevel.table+0x80>
  402bb8:	add	x4, x4, #0x6dd
  402bbc:	sub	x5, x29, #0x38
  402bc0:	mov	x11, xzr
  402bc4:	mov	x6, x11
  402bc8:	adrp	x7, 403000 <translate_runlevel.table+0x80>
  402bcc:	add	x7, x7, #0x6e7
  402bd0:	mov	x11, sp
  402bd4:	str	x9, [x11]
  402bd8:	mov	x9, sp
  402bdc:	str	x10, [x9, #8]
  402be0:	bl	400f50 <sd_bus_call_method@plt>
  402be4:	stur	w0, [x29, #-72]
  402be8:	ldur	w8, [x29, #-72]
  402bec:	cmp	w8, #0x0
  402bf0:	cset	w8, ge  // ge = tcont
  402bf4:	tbnz	w8, #0, 402cbc <change_runlevel+0x308>
  402bf8:	mov	w8, #0x3                   	// #3
  402bfc:	str	w8, [sp, #80]
  402c00:	ldur	w8, [x29, #-72]
  402c04:	str	w8, [sp, #76]
  402c08:	str	wzr, [sp, #72]
  402c0c:	ldr	w0, [sp, #72]
  402c10:	bl	400de0 <log_get_max_level_realm@plt>
  402c14:	ldr	w8, [sp, #80]
  402c18:	and	w8, w8, #0x7
  402c1c:	cmp	w0, w8
  402c20:	b.lt	402c8c <change_runlevel+0x2d8>  // b.tstop
  402c24:	ldr	w8, [sp, #72]
  402c28:	ldr	w9, [sp, #80]
  402c2c:	orr	w0, w9, w8, lsl #10
  402c30:	ldr	w1, [sp, #76]
  402c34:	ldur	w8, [x29, #-72]
  402c38:	mov	w9, wzr
  402c3c:	subs	w8, w9, w8
  402c40:	sub	x10, x29, #0x38
  402c44:	str	w0, [sp, #36]
  402c48:	mov	x0, x10
  402c4c:	str	w1, [sp, #32]
  402c50:	mov	w1, w8
  402c54:	bl	400f60 <bus_error_message@plt>
  402c58:	ldr	w8, [sp, #36]
  402c5c:	str	x0, [sp, #24]
  402c60:	mov	w0, w8
  402c64:	ldr	w1, [sp, #32]
  402c68:	ldr	x2, [sp, #56]
  402c6c:	mov	w3, #0x76                  	// #118
  402c70:	ldr	x4, [sp, #48]
  402c74:	adrp	x5, 403000 <translate_runlevel.table+0x80>
  402c78:	add	x5, x5, #0x6ea
  402c7c:	ldr	x6, [sp, #24]
  402c80:	bl	400df0 <log_internal_realm@plt>
  402c84:	str	w0, [sp, #20]
  402c88:	b	402ca0 <change_runlevel+0x2ec>
  402c8c:	ldr	w0, [sp, #76]
  402c90:	bl	400e00 <abs@plt>
  402c94:	mov	w8, wzr
  402c98:	subs	w8, w8, w0, uxtb
  402c9c:	str	w8, [sp, #20]
  402ca0:	ldr	w8, [sp, #20]
  402ca4:	str	w8, [sp, #68]
  402ca8:	ldr	w8, [sp, #68]
  402cac:	stur	w8, [x29, #-4]
  402cb0:	mov	w8, #0x1                   	// #1
  402cb4:	stur	w8, [x29, #-92]
  402cb8:	b	402cc8 <change_runlevel+0x314>
  402cbc:	stur	wzr, [x29, #-4]
  402cc0:	mov	w8, #0x1                   	// #1
  402cc4:	stur	w8, [x29, #-92]
  402cc8:	sub	x0, x29, #0x38
  402ccc:	bl	400f70 <sd_bus_error_free@plt>
  402cd0:	ldur	w0, [x29, #-4]
  402cd4:	ldp	x29, x30, [sp, #192]
  402cd8:	add	sp, sp, #0xd0
  402cdc:	ret

0000000000402ce0 <translate_runlevel>:
  402ce0:	sub	sp, sp, #0x40
  402ce4:	stp	x29, x30, [sp, #48]
  402ce8:	add	x29, sp, #0x30
  402cec:	adrp	x8, 402000 <fifo_free+0x84>
  402cf0:	add	x8, x8, #0xf80
  402cf4:	adrp	x9, 403000 <translate_runlevel.table+0x80>
  402cf8:	add	x9, x9, #0x58
  402cfc:	add	x2, x9, #0x3
  402d00:	stur	w0, [x29, #-12]
  402d04:	str	x1, [sp, #24]
  402d08:	str	x8, [sp, #8]
  402d0c:	str	x2, [sp]
  402d10:	ldr	x8, [sp, #24]
  402d14:	cmp	x8, #0x0
  402d18:	cset	w9, ne  // ne = any
  402d1c:	mov	w10, #0x1                   	// #1
  402d20:	eor	w9, w9, #0x1
  402d24:	eor	w9, w9, w10
  402d28:	eor	w9, w9, w10
  402d2c:	and	w9, w9, #0x1
  402d30:	mov	w0, w9
  402d34:	sxtw	x8, w0
  402d38:	cbz	x8, 402d60 <translate_runlevel+0x80>
  402d3c:	mov	w8, wzr
  402d40:	mov	w0, w8
  402d44:	adrp	x1, 403000 <translate_runlevel.table+0x80>
  402d48:	add	x1, x1, #0x650
  402d4c:	ldr	x2, [sp]
  402d50:	mov	w3, #0x49                  	// #73
  402d54:	adrp	x4, 403000 <translate_runlevel.table+0x80>
  402d58:	add	x4, x4, #0x757
  402d5c:	bl	400e80 <log_assert_failed_realm@plt>
  402d60:	str	wzr, [sp, #20]
  402d64:	ldr	w8, [sp, #20]
  402d68:	mov	w9, w8
  402d6c:	cmp	x9, #0x9
  402d70:	b.cs	402e1c <translate_runlevel+0x13c>  // b.hs, b.nlast
  402d74:	ldr	w8, [sp, #20]
  402d78:	mov	w9, w8
  402d7c:	mov	x10, #0x18                  	// #24
  402d80:	mul	x9, x10, x9
  402d84:	ldr	x10, [sp, #8]
  402d88:	ldr	w8, [x10, x9]
  402d8c:	ldur	w11, [x29, #-12]
  402d90:	cmp	w8, w11
  402d94:	b.ne	402e0c <translate_runlevel+0x12c>  // b.any
  402d98:	ldr	w8, [sp, #20]
  402d9c:	mov	w9, w8
  402da0:	mov	x10, #0x18                  	// #24
  402da4:	mul	x9, x10, x9
  402da8:	ldr	x10, [sp, #8]
  402dac:	add	x9, x10, x9
  402db0:	ldrb	w8, [x9, #16]
  402db4:	ldr	x9, [sp, #24]
  402db8:	and	w8, w8, #0x1
  402dbc:	strb	w8, [x9]
  402dc0:	ldur	w8, [x29, #-12]
  402dc4:	cmp	w8, #0x36
  402dc8:	b.ne	402de8 <translate_runlevel+0x108>  // b.any
  402dcc:	bl	400f80 <kexec_loaded@plt>
  402dd0:	tbnz	w0, #0, 402dd8 <translate_runlevel+0xf8>
  402dd4:	b	402de8 <translate_runlevel+0x108>
  402dd8:	adrp	x8, 403000 <translate_runlevel.table+0x80>
  402ddc:	add	x8, x8, #0x784
  402de0:	stur	x8, [x29, #-8]
  402de4:	b	402e24 <translate_runlevel+0x144>
  402de8:	ldr	w8, [sp, #20]
  402dec:	mov	w9, w8
  402df0:	mov	x10, #0x18                  	// #24
  402df4:	mul	x9, x10, x9
  402df8:	ldr	x10, [sp, #8]
  402dfc:	add	x9, x10, x9
  402e00:	ldr	x9, [x9, #8]
  402e04:	stur	x9, [x29, #-8]
  402e08:	b	402e24 <translate_runlevel+0x144>
  402e0c:	ldr	w8, [sp, #20]
  402e10:	add	w8, w8, #0x1
  402e14:	str	w8, [sp, #20]
  402e18:	b	402d64 <translate_runlevel+0x84>
  402e1c:	mov	x8, xzr
  402e20:	stur	x8, [x29, #-8]
  402e24:	ldur	x0, [x29, #-8]
  402e28:	ldp	x29, x30, [sp, #48]
  402e2c:	add	sp, sp, #0x40
  402e30:	ret
  402e34:	udf	#0

0000000000402e38 <__libc_csu_init>:
  402e38:	stp	x29, x30, [sp, #-64]!
  402e3c:	mov	x29, sp
  402e40:	stp	x19, x20, [sp, #16]
  402e44:	adrp	x20, 41f000 <__FRAME_END__+0x1b760>
  402e48:	add	x20, x20, #0xcc0
  402e4c:	stp	x21, x22, [sp, #32]
  402e50:	adrp	x21, 41f000 <__FRAME_END__+0x1b760>
  402e54:	add	x21, x21, #0xcb8
  402e58:	sub	x20, x20, x21
  402e5c:	mov	w22, w0
  402e60:	stp	x23, x24, [sp, #48]
  402e64:	mov	x23, x1
  402e68:	mov	x24, x2
  402e6c:	bl	400d68 <_init>
  402e70:	cmp	xzr, x20, asr #3
  402e74:	b.eq	402ea0 <__libc_csu_init+0x68>  // b.none
  402e78:	asr	x20, x20, #3
  402e7c:	mov	x19, #0x0                   	// #0
  402e80:	ldr	x3, [x21, x19, lsl #3]
  402e84:	mov	x2, x24
  402e88:	add	x19, x19, #0x1
  402e8c:	mov	x1, x23
  402e90:	mov	w0, w22
  402e94:	blr	x3
  402e98:	cmp	x20, x19
  402e9c:	b.ne	402e80 <__libc_csu_init+0x48>  // b.any
  402ea0:	ldp	x19, x20, [sp, #16]
  402ea4:	ldp	x21, x22, [sp, #32]
  402ea8:	ldp	x23, x24, [sp, #48]
  402eac:	ldp	x29, x30, [sp], #64
  402eb0:	ret
  402eb4:	nop

0000000000402eb8 <__libc_csu_fini>:
  402eb8:	ret

Disassembly of section .fini:

0000000000402ebc <_fini>:
  402ebc:	stp	x29, x30, [sp, #-16]!
  402ec0:	mov	x29, sp
  402ec4:	ldp	x29, x30, [sp], #16
  402ec8:	ret
