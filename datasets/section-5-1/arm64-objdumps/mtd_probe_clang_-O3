
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//mtd_probe_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400880 <_init>:
  400880:	stp	x29, x30, [sp, #-16]!
  400884:	mov	x29, sp
  400888:	bl	4009f8 <call_weak_fn>
  40088c:	ldp	x29, x30, [sp], #16
  400890:	ret

Disassembly of section .plt:

0000000000400898 <__libc_start_main@plt-0x20>:
  400898:	stp	x16, x30, [sp, #-16]!
  40089c:	adrp	x16, 41f000 <__FRAME_END__+0x1df18>
  4008a0:	ldr	x17, [x16, #3968]
  4008a4:	add	x16, x16, #0xf80
  4008a8:	br	x17
  4008ac:	nop
  4008b0:	nop
  4008b4:	nop

00000000004008b8 <__libc_start_main@plt>:
  4008b8:	adrp	x16, 41f000 <__FRAME_END__+0x1df18>
  4008bc:	ldr	x17, [x16, #3976]
  4008c0:	add	x16, x16, #0xf88
  4008c4:	br	x17

00000000004008c8 <abort@plt>:
  4008c8:	adrp	x16, 41f000 <__FRAME_END__+0x1df18>
  4008cc:	ldr	x17, [x16, #3984]
  4008d0:	add	x16, x16, #0xf90
  4008d4:	br	x17

00000000004008d8 <__gmon_start__@plt>:
  4008d8:	adrp	x16, 41f000 <__FRAME_END__+0x1df18>
  4008dc:	ldr	x17, [x16, #3992]
  4008e0:	add	x16, x16, #0xf98
  4008e4:	br	x17

00000000004008e8 <open64@plt>:
  4008e8:	adrp	x16, 41f000 <__FRAME_END__+0x1df18>
  4008ec:	ldr	x17, [x16, #4000]
  4008f0:	add	x16, x16, #0xfa0
  4008f4:	br	x17

00000000004008f8 <ioctl@plt>:
  4008f8:	adrp	x16, 41f000 <__FRAME_END__+0x1df18>
  4008fc:	ldr	x17, [x16, #4008]
  400900:	add	x16, x16, #0xfa8
  400904:	br	x17

0000000000400908 <puts@plt>:
  400908:	adrp	x16, 41f000 <__FRAME_END__+0x1df18>
  40090c:	ldr	x17, [x16, #4016]
  400910:	add	x16, x16, #0xfb0
  400914:	br	x17

0000000000400918 <log_get_max_level_realm@plt>:
  400918:	adrp	x16, 41f000 <__FRAME_END__+0x1df18>
  40091c:	ldr	x17, [x16, #4024]
  400920:	add	x16, x16, #0xfb8
  400924:	br	x17

0000000000400928 <__errno_location@plt>:
  400928:	adrp	x16, 41f000 <__FRAME_END__+0x1df18>
  40092c:	ldr	x17, [x16, #4032]
  400930:	add	x16, x16, #0xfc0
  400934:	br	x17

0000000000400938 <log_internal_realm@plt>:
  400938:	adrp	x16, 41f000 <__FRAME_END__+0x1df18>
  40093c:	ldr	x17, [x16, #4040]
  400940:	add	x16, x16, #0xfc8
  400944:	br	x17

0000000000400948 <safe_close@plt>:
  400948:	adrp	x16, 41f000 <__FRAME_END__+0x1df18>
  40094c:	ldr	x17, [x16, #4048]
  400950:	add	x16, x16, #0xfd0
  400954:	br	x17

0000000000400958 <malloc@plt>:
  400958:	adrp	x16, 41f000 <__FRAME_END__+0x1df18>
  40095c:	ldr	x17, [x16, #4056]
  400960:	add	x16, x16, #0xfd8
  400964:	br	x17

0000000000400968 <log_oom_internal@plt>:
  400968:	adrp	x16, 41f000 <__FRAME_END__+0x1df18>
  40096c:	ldr	x17, [x16, #4064]
  400970:	add	x16, x16, #0xfe0
  400974:	br	x17

0000000000400978 <lseek64@plt>:
  400978:	adrp	x16, 41f000 <__FRAME_END__+0x1df18>
  40097c:	ldr	x17, [x16, #4072]
  400980:	add	x16, x16, #0xfe8
  400984:	br	x17

0000000000400988 <read@plt>:
  400988:	adrp	x16, 41f000 <__FRAME_END__+0x1df18>
  40098c:	ldr	x17, [x16, #4080]
  400990:	add	x16, x16, #0xff0
  400994:	br	x17

0000000000400998 <free@plt>:
  400998:	adrp	x16, 41f000 <__FRAME_END__+0x1df18>
  40099c:	ldr	x17, [x16, #4088]
  4009a0:	add	x16, x16, #0xff8
  4009a4:	br	x17

Disassembly of section .text:

00000000004009a8 <_start>:
  4009a8:	mov	x29, #0x0                   	// #0
  4009ac:	mov	x30, #0x0                   	// #0
  4009b0:	mov	x5, x0
  4009b4:	ldr	x1, [sp]
  4009b8:	add	x2, sp, #0x8
  4009bc:	mov	x6, sp
  4009c0:	movz	x0, #0x0, lsl #48
  4009c4:	movk	x0, #0x0, lsl #32
  4009c8:	movk	x0, #0x40, lsl #16
  4009cc:	movk	x0, #0xab4
  4009d0:	movz	x3, #0x0, lsl #48
  4009d4:	movk	x3, #0x0, lsl #32
  4009d8:	movk	x3, #0x40, lsl #16
  4009dc:	movk	x3, #0xe30
  4009e0:	movz	x4, #0x0, lsl #48
  4009e4:	movk	x4, #0x0, lsl #32
  4009e8:	movk	x4, #0x40, lsl #16
  4009ec:	movk	x4, #0xeb0
  4009f0:	bl	4008b8 <__libc_start_main@plt>
  4009f4:	bl	4008c8 <abort@plt>

00000000004009f8 <call_weak_fn>:
  4009f8:	adrp	x0, 41f000 <__FRAME_END__+0x1df18>
  4009fc:	ldr	x0, [x0, #3944]
  400a00:	cbz	x0, 400a08 <call_weak_fn+0x10>
  400a04:	b	4008d8 <__gmon_start__@plt>
  400a08:	ret
  400a0c:	udf	#0

0000000000400a10 <deregister_tm_clones>:
  400a10:	adrp	x0, 420000 <completed.8445>
  400a14:	add	x0, x0, #0x0
  400a18:	adrp	x1, 420000 <completed.8445>
  400a1c:	add	x1, x1, #0x0
  400a20:	cmp	x1, x0
  400a24:	b.eq	400a3c <deregister_tm_clones+0x2c>  // b.none
  400a28:	adrp	x1, 400000 <_init-0x880>
  400a2c:	ldr	x1, [x1, #3784]
  400a30:	cbz	x1, 400a3c <deregister_tm_clones+0x2c>
  400a34:	mov	x16, x1
  400a38:	br	x16
  400a3c:	ret

0000000000400a40 <register_tm_clones>:
  400a40:	adrp	x0, 420000 <completed.8445>
  400a44:	add	x0, x0, #0x0
  400a48:	adrp	x1, 420000 <completed.8445>
  400a4c:	add	x1, x1, #0x0
  400a50:	sub	x1, x1, x0
  400a54:	lsr	x2, x1, #63
  400a58:	add	x1, x2, x1, asr #3
  400a5c:	cmp	xzr, x1, asr #1
  400a60:	asr	x1, x1, #1
  400a64:	b.eq	400a7c <register_tm_clones+0x3c>  // b.none
  400a68:	adrp	x2, 400000 <_init-0x880>
  400a6c:	ldr	x2, [x2, #3792]
  400a70:	cbz	x2, 400a7c <register_tm_clones+0x3c>
  400a74:	mov	x16, x2
  400a78:	br	x16
  400a7c:	ret

0000000000400a80 <__do_global_dtors_aux>:
  400a80:	stp	x29, x30, [sp, #-32]!
  400a84:	mov	x29, sp
  400a88:	str	x19, [sp, #16]
  400a8c:	adrp	x19, 420000 <completed.8445>
  400a90:	ldrb	w0, [x19]
  400a94:	cbnz	w0, 400aa4 <__do_global_dtors_aux+0x24>
  400a98:	bl	400a10 <deregister_tm_clones>
  400a9c:	mov	w0, #0x1                   	// #1
  400aa0:	strb	w0, [x19]
  400aa4:	ldr	x19, [sp, #16]
  400aa8:	ldp	x29, x30, [sp], #32
  400aac:	ret

0000000000400ab0 <frame_dummy>:
  400ab0:	b	400a40 <register_tm_clones>

0000000000400ab4 <main>:
  400ab4:	sub	sp, sp, #0x40
  400ab8:	cmp	w0, #0x2
  400abc:	stp	x29, x30, [sp, #32]
  400ac0:	stp	x20, x19, [sp, #48]
  400ac4:	add	x29, sp, #0x20
  400ac8:	b.ne	400b0c <main+0x58>  // b.any
  400acc:	ldr	x0, [x1, #8]
  400ad0:	mov	w1, #0x80000               	// #524288
  400ad4:	bl	4008e8 <open64@plt>
  400ad8:	mov	w19, w0
  400adc:	tbnz	w0, #31, 400b24 <main+0x70>
  400ae0:	mov	w1, #0x4d01                	// #19713
  400ae4:	mov	x2, sp
  400ae8:	movk	w1, #0x8020, lsl #16
  400aec:	mov	w0, w19
  400af0:	bl	4008f8 <ioctl@plt>
  400af4:	tbnz	w0, #31, 400b64 <main+0xb0>
  400af8:	mov	x1, sp
  400afc:	mov	w0, w19
  400b00:	bl	400bc4 <probe_smart_media>
  400b04:	lsr	w20, w0, #31
  400b08:	b	400ba8 <main+0xf4>
  400b0c:	adrp	x0, 400000 <_init-0x880>
  400b10:	add	x0, x0, #0xf37
  400b14:	bl	400908 <puts@plt>
  400b18:	mov	w20, #0x1                   	// #1
  400b1c:	mov	w19, #0xffffffff            	// #-1
  400b20:	b	400ba8 <main+0xf4>
  400b24:	mov	w0, #0x1                   	// #1
  400b28:	mov	w20, #0x1                   	// #1
  400b2c:	bl	400918 <log_get_max_level_realm@plt>
  400b30:	cmp	w0, #0x3
  400b34:	b.lt	400ba8 <main+0xf4>  // b.tstop
  400b38:	bl	400928 <__errno_location@plt>
  400b3c:	ldr	w1, [x0]
  400b40:	adrp	x2, 400000 <_init-0x880>
  400b44:	adrp	x4, 400000 <_init-0x880>
  400b48:	adrp	x5, 400000 <_init-0x880>
  400b4c:	add	x2, x2, #0xedb
  400b50:	add	x4, x4, #0xefa
  400b54:	add	x5, x5, #0xeff
  400b58:	mov	w0, #0x403                 	// #1027
  400b5c:	mov	w3, #0x2e                  	// #46
  400b60:	b	400ba0 <main+0xec>
  400b64:	mov	w0, #0x1                   	// #1
  400b68:	mov	w20, #0x1                   	// #1
  400b6c:	bl	400918 <log_get_max_level_realm@plt>
  400b70:	cmp	w0, #0x3
  400b74:	b.lt	400ba8 <main+0xf4>  // b.tstop
  400b78:	bl	400928 <__errno_location@plt>
  400b7c:	ldr	w1, [x0]
  400b80:	adrp	x2, 400000 <_init-0x880>
  400b84:	adrp	x4, 400000 <_init-0x880>
  400b88:	adrp	x5, 400000 <_init-0x880>
  400b8c:	add	x2, x2, #0xedb
  400b90:	add	x4, x4, #0xefa
  400b94:	add	x5, x5, #0xf12
  400b98:	mov	w0, #0x403                 	// #1027
  400b9c:	mov	w3, #0x33                  	// #51
  400ba0:	bl	400938 <log_internal_realm@plt>
  400ba4:	mov	w20, #0x1                   	// #1
  400ba8:	mov	w0, w19
  400bac:	bl	400948 <safe_close@plt>
  400bb0:	mov	w0, w20
  400bb4:	ldp	x20, x19, [sp, #48]
  400bb8:	ldp	x29, x30, [sp, #32]
  400bbc:	add	sp, sp, #0x40
  400bc0:	ret

0000000000400bc4 <probe_smart_media>:
  400bc4:	stp	x29, x30, [sp, #-64]!
  400bc8:	stp	x22, x21, [sp, #32]
  400bcc:	mov	w21, w0
  400bd0:	mov	w0, #0x200                 	// #512
  400bd4:	str	x23, [sp, #16]
  400bd8:	stp	x20, x19, [sp, #48]
  400bdc:	mov	x29, sp
  400be0:	mov	x22, x1
  400be4:	bl	400958 <malloc@plt>
  400be8:	mov	x19, x0
  400bec:	cbz	x0, 400c40 <probe_smart_media+0x7c>
  400bf0:	ldrb	w8, [x22]
  400bf4:	cmp	w8, #0x4
  400bf8:	b.ne	400c64 <probe_smart_media+0xa0>  // b.any
  400bfc:	ldp	w8, w20, [x22, #12]
  400c00:	cmp	w20, #0x200
  400c04:	b.eq	400c10 <probe_smart_media+0x4c>  // b.none
  400c08:	cmp	w20, #0x100
  400c0c:	b.ne	400ca0 <probe_smart_media+0xdc>  // b.any
  400c10:	ldr	w9, [x22, #8]
  400c14:	lsr	w9, w9, #20
  400c18:	sub	x9, x9, #0x1
  400c1c:	cmp	w9, #0x4
  400c20:	b.cs	400ce8 <probe_smart_media+0x124>  // b.hs, b.nlast
  400c24:	adrp	x10, 401000 <_fini+0x14c>
  400c28:	add	x10, x10, #0x0
  400c2c:	ldr	w9, [x10, x9, lsl #2]
  400c30:	mul	w23, w9, w8
  400c34:	cmp	w23, #0x1
  400c38:	b.ge	400cf8 <probe_smart_media+0x134>  // b.tcont
  400c3c:	b	400d30 <probe_smart_media+0x16c>
  400c40:	adrp	x1, 400000 <_init-0x880>
  400c44:	adrp	x3, 400000 <_init-0x880>
  400c48:	add	x1, x1, #0xf57
  400c4c:	add	x3, x3, #0xf7d
  400c50:	mov	w0, #0x1                   	// #1
  400c54:	mov	w2, #0x32                  	// #50
  400c58:	bl	400968 <log_oom_internal@plt>
  400c5c:	mov	w20, w0
  400c60:	b	400dfc <probe_smart_media+0x238>
  400c64:	mov	w0, #0x1                   	// #1
  400c68:	bl	400918 <log_get_max_level_realm@plt>
  400c6c:	cmp	w0, #0x7
  400c70:	b.lt	400df8 <probe_smart_media+0x234>  // b.tstop
  400c74:	adrp	x2, 400000 <_init-0x880>
  400c78:	adrp	x4, 400000 <_init-0x880>
  400c7c:	adrp	x5, 400000 <_init-0x880>
  400c80:	mov	w1, #0x16                  	// #22
  400c84:	add	x2, x2, #0xf57
  400c88:	add	x4, x4, #0xf7d
  400c8c:	add	x5, x5, #0xf8f
  400c90:	mov	w0, #0x407                 	// #1031
  400c94:	movk	w1, #0x4000, lsl #16
  400c98:	mov	w3, #0x36                  	// #54
  400c9c:	b	400d68 <probe_smart_media+0x1a4>
  400ca0:	mov	w0, #0x1                   	// #1
  400ca4:	bl	400918 <log_get_max_level_realm@plt>
  400ca8:	cmp	w0, #0x7
  400cac:	b.lt	400df8 <probe_smart_media+0x234>  // b.tstop
  400cb0:	adrp	x2, 400000 <_init-0x880>
  400cb4:	adrp	x4, 400000 <_init-0x880>
  400cb8:	adrp	x5, 400000 <_init-0x880>
  400cbc:	mov	w1, #0x16                  	// #22
  400cc0:	add	x2, x2, #0xf57
  400cc4:	add	x4, x4, #0xf7d
  400cc8:	add	x5, x5, #0xfa9
  400ccc:	mov	w0, #0x407                 	// #1031
  400cd0:	movk	w1, #0x4000, lsl #16
  400cd4:	mov	w3, #0x3e                  	// #62
  400cd8:	mov	w6, w20
  400cdc:	bl	400938 <log_internal_realm@plt>
  400ce0:	mov	w20, w0
  400ce4:	b	400dfc <probe_smart_media+0x238>
  400ce8:	mov	w9, #0x18                  	// #24
  400cec:	mul	w23, w9, w8
  400cf0:	cmp	w23, #0x1
  400cf4:	b.lt	400d30 <probe_smart_media+0x16c>  // b.tstop
  400cf8:	mov	w22, wzr
  400cfc:	mov	w0, w21
  400d00:	mov	x1, xzr
  400d04:	mov	w2, w22
  400d08:	bl	400978 <lseek64@plt>
  400d0c:	mov	w2, #0x200                 	// #512
  400d10:	mov	w0, w21
  400d14:	mov	x1, x19
  400d18:	bl	400988 <read@plt>
  400d1c:	cmp	x0, #0x200
  400d20:	b.eq	400d74 <probe_smart_media+0x1b0>  // b.none
  400d24:	add	w22, w22, w20
  400d28:	cmp	w22, w23
  400d2c:	b.lt	400cfc <probe_smart_media+0x138>  // b.tstop
  400d30:	mov	w0, #0x1                   	// #1
  400d34:	bl	400918 <log_get_max_level_realm@plt>
  400d38:	cmp	w0, #0x7
  400d3c:	b.lt	400df8 <probe_smart_media+0x234>  // b.tstop
  400d40:	adrp	x2, 400000 <_init-0x880>
  400d44:	adrp	x4, 400000 <_init-0x880>
  400d48:	adrp	x5, 400000 <_init-0x880>
  400d4c:	mov	w1, #0x16                  	// #22
  400d50:	add	x2, x2, #0xf57
  400d54:	add	x4, x4, #0xf7d
  400d58:	add	x5, x5, #0xfc4
  400d5c:	mov	w0, #0x407                 	// #1031
  400d60:	movk	w1, #0x4000, lsl #16
  400d64:	mov	w3, #0x58                  	// #88
  400d68:	bl	400938 <log_internal_realm@plt>
  400d6c:	mov	w20, w0
  400d70:	b	400dfc <probe_smart_media+0x238>
  400d74:	ldr	x9, [x19]
  400d78:	ldrh	w10, [x19, #8]
  400d7c:	mov	x8, #0x301                 	// #769
  400d80:	movk	x8, #0x1d9, lsl #16
  400d84:	movk	x8, #0x18ff, lsl #32
  400d88:	movk	x8, #0xdf02, lsl #48
  400d8c:	mov	w11, #0x2001                	// #8193
  400d90:	eor	x9, x9, x8
  400d94:	eor	x10, x10, x11
  400d98:	orr	x9, x9, x10
  400d9c:	cbz	x9, 400e1c <probe_smart_media+0x258>
  400da0:	ldr	x9, [x19, #256]
  400da4:	ldrh	w10, [x19, #264]
  400da8:	mov	w11, #0x2001                	// #8193
  400dac:	eor	x8, x9, x8
  400db0:	eor	x9, x10, x11
  400db4:	orr	x8, x8, x9
  400db8:	cbz	x8, 400e1c <probe_smart_media+0x258>
  400dbc:	mov	w0, #0x1                   	// #1
  400dc0:	bl	400918 <log_get_max_level_realm@plt>
  400dc4:	cmp	w0, #0x7
  400dc8:	b.lt	400df8 <probe_smart_media+0x234>  // b.tstop
  400dcc:	adrp	x2, 400000 <_init-0x880>
  400dd0:	adrp	x4, 400000 <_init-0x880>
  400dd4:	adrp	x5, 400000 <_init-0x880>
  400dd8:	mov	w1, #0x16                  	// #22
  400ddc:	add	x2, x2, #0xf57
  400de0:	add	x4, x4, #0xf7d
  400de4:	add	x5, x5, #0xfd2
  400de8:	mov	w0, #0x407                 	// #1031
  400dec:	movk	w1, #0x4000, lsl #16
  400df0:	mov	w3, #0x5d                  	// #93
  400df4:	b	400d68 <probe_smart_media+0x1a4>
  400df8:	mov	w20, #0xffffffea            	// #-22
  400dfc:	mov	x0, x19
  400e00:	bl	400998 <free@plt>
  400e04:	mov	w0, w20
  400e08:	ldp	x20, x19, [sp, #48]
  400e0c:	ldp	x22, x21, [sp, #32]
  400e10:	ldr	x23, [sp, #16]
  400e14:	ldp	x29, x30, [sp], #64
  400e18:	ret
  400e1c:	adrp	x0, 400000 <_init-0x880>
  400e20:	add	x0, x0, #0xfed
  400e24:	bl	400908 <puts@plt>
  400e28:	mov	w20, wzr
  400e2c:	b	400dfc <probe_smart_media+0x238>

0000000000400e30 <__libc_csu_init>:
  400e30:	stp	x29, x30, [sp, #-64]!
  400e34:	mov	x29, sp
  400e38:	stp	x19, x20, [sp, #16]
  400e3c:	adrp	x20, 41f000 <__FRAME_END__+0x1df18>
  400e40:	add	x20, x20, #0xd40
  400e44:	stp	x21, x22, [sp, #32]
  400e48:	adrp	x21, 41f000 <__FRAME_END__+0x1df18>
  400e4c:	add	x21, x21, #0xd38
  400e50:	sub	x20, x20, x21
  400e54:	mov	w22, w0
  400e58:	stp	x23, x24, [sp, #48]
  400e5c:	mov	x23, x1
  400e60:	mov	x24, x2
  400e64:	bl	400880 <_init>
  400e68:	cmp	xzr, x20, asr #3
  400e6c:	b.eq	400e98 <__libc_csu_init+0x68>  // b.none
  400e70:	asr	x20, x20, #3
  400e74:	mov	x19, #0x0                   	// #0
  400e78:	ldr	x3, [x21, x19, lsl #3]
  400e7c:	mov	x2, x24
  400e80:	add	x19, x19, #0x1
  400e84:	mov	x1, x23
  400e88:	mov	w0, w22
  400e8c:	blr	x3
  400e90:	cmp	x20, x19
  400e94:	b.ne	400e78 <__libc_csu_init+0x48>  // b.any
  400e98:	ldp	x19, x20, [sp, #16]
  400e9c:	ldp	x21, x22, [sp, #32]
  400ea0:	ldp	x23, x24, [sp, #48]
  400ea4:	ldp	x29, x30, [sp], #64
  400ea8:	ret
  400eac:	nop

0000000000400eb0 <__libc_csu_fini>:
  400eb0:	ret

Disassembly of section .fini:

0000000000400eb4 <_fini>:
  400eb4:	stp	x29, x30, [sp, #-16]!
  400eb8:	mov	x29, sp
  400ebc:	ldp	x29, x30, [sp], #16
  400ec0:	ret
