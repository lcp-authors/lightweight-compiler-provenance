
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libelf-0.178.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000003060 <.init>:
    3060:	stp	x29, x30, [sp, #-16]!
    3064:	mov	x29, sp
    3068:	bl	3410 <*ABS*@plt+0x20>
    306c:	ldp	x29, x30, [sp], #16
    3070:	ret

Disassembly of section .plt:

0000000000003080 <memcpy@plt-0x20>:
    3080:	stp	x16, x30, [sp, #-16]!
    3084:	adrp	x16, 35000 <elf_compress_gnu@@ELFUTILS_1.7+0x1495c>
    3088:	ldr	x17, [x16, #4088]
    308c:	add	x16, x16, #0xff8
    3090:	br	x17
    3094:	nop
    3098:	nop
    309c:	nop

00000000000030a0 <memcpy@plt>:
    30a0:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    30a4:	ldr	x17, [x16]
    30a8:	add	x16, x16, #0x0
    30ac:	br	x17

00000000000030b0 <memmove@plt>:
    30b0:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    30b4:	ldr	x17, [x16, #8]
    30b8:	add	x16, x16, #0x8
    30bc:	br	x17

00000000000030c0 <msync@plt>:
    30c0:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    30c4:	ldr	x17, [x16, #16]
    30c8:	add	x16, x16, #0x10
    30cc:	br	x17

00000000000030d0 <posix_fallocate@plt>:
    30d0:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    30d4:	ldr	x17, [x16, #24]
    30d8:	add	x16, x16, #0x18
    30dc:	br	x17

00000000000030e0 <memccpy@plt>:
    30e0:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    30e4:	ldr	x17, [x16, #32]
    30e8:	add	x16, x16, #0x20
    30ec:	br	x17

00000000000030f0 <inflate@plt>:
    30f0:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    30f4:	ldr	x17, [x16, #40]
    30f8:	add	x16, x16, #0x28
    30fc:	br	x17

0000000000003100 <mremap@plt>:
    3100:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    3104:	ldr	x17, [x16, #48]
    3108:	add	x16, x16, #0x30
    310c:	br	x17

0000000000003110 <elf32_getchdr@plt>:
    3110:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    3114:	ldr	x17, [x16, #56]
    3118:	add	x16, x16, #0x38
    311c:	br	x17

0000000000003120 <__cxa_finalize@plt>:
    3120:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    3124:	ldr	x17, [x16, #64]
    3128:	add	x16, x16, #0x40
    312c:	br	x17

0000000000003130 <qsort@plt>:
    3130:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    3134:	ldr	x17, [x16, #72]
    3138:	add	x16, x16, #0x48
    313c:	br	x17

0000000000003140 <malloc@plt>:
    3140:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    3144:	ldr	x17, [x16, #80]
    3148:	add	x16, x16, #0x50
    314c:	br	x17

0000000000003150 <open@plt>:
    3150:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    3154:	ldr	x17, [x16, #88]
    3158:	add	x16, x16, #0x58
    315c:	br	x17

0000000000003160 <deflate@plt>:
    3160:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    3164:	ldr	x17, [x16, #96]
    3168:	add	x16, x16, #0x60
    316c:	br	x17

0000000000003170 <strncmp@plt>:
    3170:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    3174:	ldr	x17, [x16, #104]
    3178:	add	x16, x16, #0x68
    317c:	br	x17

0000000000003180 <memset@plt>:
    3180:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    3184:	ldr	x17, [x16, #112]
    3188:	add	x16, x16, #0x70
    318c:	br	x17

0000000000003190 <elf64_getshdr@plt>:
    3190:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    3194:	ldr	x17, [x16, #120]
    3198:	add	x16, x16, #0x78
    319c:	br	x17

00000000000031a0 <fchmod@plt>:
    31a0:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    31a4:	ldr	x17, [x16, #128]
    31a8:	add	x16, x16, #0x80
    31ac:	br	x17

00000000000031b0 <posix_memalign@plt>:
    31b0:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    31b4:	ldr	x17, [x16, #136]
    31b8:	add	x16, x16, #0x88
    31bc:	br	x17

00000000000031c0 <calloc@plt>:
    31c0:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    31c4:	ldr	x17, [x16, #144]
    31c8:	add	x16, x16, #0x90
    31cc:	br	x17

00000000000031d0 <gelf_xlatetof@plt>:
    31d0:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    31d4:	ldr	x17, [x16, #152]
    31d8:	add	x16, x16, #0x98
    31dc:	br	x17

00000000000031e0 <realloc@plt>:
    31e0:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    31e4:	ldr	x17, [x16, #160]
    31e8:	add	x16, x16, #0xa0
    31ec:	br	x17

00000000000031f0 <deflateInit_@plt>:
    31f0:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    31f4:	ldr	x17, [x16, #168]
    31f8:	add	x16, x16, #0xa8
    31fc:	br	x17

0000000000003200 <close@plt>:
    3200:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    3204:	ldr	x17, [x16, #176]
    3208:	add	x16, x16, #0xb0
    320c:	br	x17

0000000000003210 <elf64_getchdr@plt>:
    3210:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    3214:	ldr	x17, [x16, #184]
    3218:	add	x16, x16, #0xb8
    321c:	br	x17

0000000000003220 <atol@plt>:
    3220:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    3224:	ldr	x17, [x16, #192]
    3228:	add	x16, x16, #0xc0
    322c:	br	x17

0000000000003230 <__gmon_start__@plt>:
    3230:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    3234:	ldr	x17, [x16, #200]
    3238:	add	x16, x16, #0xc8
    323c:	br	x17

0000000000003240 <inflateEnd@plt>:
    3240:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    3244:	ldr	x17, [x16, #208]
    3248:	add	x16, x16, #0xd0
    324c:	br	x17

0000000000003250 <memcmp@plt>:
    3250:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    3254:	ldr	x17, [x16, #216]
    3258:	add	x16, x16, #0xd8
    325c:	br	x17

0000000000003260 <strcmp@plt>:
    3260:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    3264:	ldr	x17, [x16, #224]
    3268:	add	x16, x16, #0xe0
    326c:	br	x17

0000000000003270 <__ctype_b_loc@plt>:
    3270:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    3274:	ldr	x17, [x16, #232]
    3278:	add	x16, x16, #0xe8
    327c:	br	x17

0000000000003280 <mmap@plt>:
    3280:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    3284:	ldr	x17, [x16, #240]
    3288:	add	x16, x16, #0xf0
    328c:	br	x17

0000000000003290 <dgettext@plt>:
    3290:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    3294:	ldr	x17, [x16, #248]
    3298:	add	x16, x16, #0xf8
    329c:	br	x17

00000000000032a0 <free@plt>:
    32a0:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    32a4:	ldr	x17, [x16, #256]
    32a8:	add	x16, x16, #0x100
    32ac:	br	x17

00000000000032b0 <mempcpy@plt>:
    32b0:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    32b4:	ldr	x17, [x16, #264]
    32b8:	add	x16, x16, #0x108
    32bc:	br	x17

00000000000032c0 <rawmemchr@plt>:
    32c0:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    32c4:	ldr	x17, [x16, #272]
    32c8:	add	x16, x16, #0x110
    32cc:	br	x17

00000000000032d0 <pwrite@plt>:
    32d0:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    32d4:	ldr	x17, [x16, #280]
    32d8:	add	x16, x16, #0x118
    32dc:	br	x17

00000000000032e0 <deflateEnd@plt>:
    32e0:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    32e4:	ldr	x17, [x16, #288]
    32e8:	add	x16, x16, #0x120
    32ec:	br	x17

00000000000032f0 <gelf_getchdr@plt>:
    32f0:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    32f4:	ldr	x17, [x16, #296]
    32f8:	add	x16, x16, #0x128
    32fc:	br	x17

0000000000003300 <pread@plt>:
    3300:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    3304:	ldr	x17, [x16, #304]
    3308:	add	x16, x16, #0x130
    330c:	br	x17

0000000000003310 <memrchr@plt>:
    3310:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    3314:	ldr	x17, [x16, #312]
    3318:	add	x16, x16, #0x138
    331c:	br	x17

0000000000003320 <inflateInit_@plt>:
    3320:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    3324:	ldr	x17, [x16, #320]
    3328:	add	x16, x16, #0x140
    332c:	br	x17

0000000000003330 <fcntl@plt>:
    3330:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    3334:	ldr	x17, [x16, #328]
    3338:	add	x16, x16, #0x148
    333c:	br	x17

0000000000003340 <elf32_getshdr@plt>:
    3340:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    3344:	ldr	x17, [x16, #336]
    3348:	add	x16, x16, #0x150
    334c:	br	x17

0000000000003350 <munmap@plt>:
    3350:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    3354:	ldr	x17, [x16, #344]
    3358:	add	x16, x16, #0x158
    335c:	br	x17

0000000000003360 <gelf_getehdr@plt>:
    3360:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    3364:	ldr	x17, [x16, #352]
    3368:	add	x16, x16, #0x160
    336c:	br	x17

0000000000003370 <memchr@plt>:
    3370:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    3374:	ldr	x17, [x16, #360]
    3378:	add	x16, x16, #0x168
    337c:	br	x17

0000000000003380 <sysconf@plt>:
    3380:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    3384:	ldr	x17, [x16, #368]
    3388:	add	x16, x16, #0x170
    338c:	br	x17

0000000000003390 <elf_getdata@plt>:
    3390:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    3394:	ldr	x17, [x16, #376]
    3398:	add	x16, x16, #0x178
    339c:	br	x17

00000000000033a0 <__fxstat@plt>:
    33a0:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    33a4:	ldr	x17, [x16, #384]
    33a8:	add	x16, x16, #0x180
    33ac:	br	x17

00000000000033b0 <inflateReset@plt>:
    33b0:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    33b4:	ldr	x17, [x16, #392]
    33b8:	add	x16, x16, #0x188
    33bc:	br	x17

00000000000033c0 <ftruncate@plt>:
    33c0:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    33c4:	ldr	x17, [x16, #400]
    33c8:	add	x16, x16, #0x190
    33cc:	br	x17

00000000000033d0 <__assert_fail@plt>:
    33d0:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    33d4:	ldr	x17, [x16, #408]
    33d8:	add	x16, x16, #0x198
    33dc:	br	x17

00000000000033e0 <__errno_location@plt>:
    33e0:	adrp	x16, 36000 <memcpy@GLIBC_2.17>
    33e4:	ldr	x17, [x16, #416]
    33e8:	add	x16, x16, #0x1a0
    33ec:	br	x17

00000000000033f0 <*ABS*@plt>:
    33f0:	stp	x2, x3, [sp, #-16]!
    33f4:	adrp	x2, 35000 <elf_compress_gnu@@ELFUTILS_1.7+0x1495c>
    33f8:	adrp	x3, 35000 <elf_compress_gnu@@ELFUTILS_1.7+0x1495c>
    33fc:	ldr	x2, [x2, #4064]
    3400:	add	x3, x3, #0xfe8
    3404:	br	x2
    3408:	nop
    340c:	nop

Disassembly of section .text:

0000000000003410 <elf_version@@ELFUTILS_1.0-0x190>:
    3410:	adrp	x0, 35000 <elf_compress_gnu@@ELFUTILS_1.7+0x1495c>
    3414:	ldr	x0, [x0, #4048]
    3418:	cbz	x0, 3420 <*ABS*@plt+0x30>
    341c:	b	3230 <__gmon_start__@plt>
    3420:	ret
    3424:	stp	x29, x30, [sp, #-32]!
    3428:	mov	x29, sp
    342c:	adrp	x0, 36000 <elf_compress_gnu@@ELFUTILS_1.7+0x1595c>
    3430:	add	x0, x0, #0x1c0
    3434:	str	x0, [sp, #24]
    3438:	ldr	x0, [sp, #24]
    343c:	str	x0, [sp, #24]
    3440:	ldr	x1, [sp, #24]
    3444:	adrp	x0, 36000 <elf_compress_gnu@@ELFUTILS_1.7+0x1595c>
    3448:	add	x0, x0, #0x1c0
    344c:	cmp	x1, x0
    3450:	b.eq	3488 <*ABS*@plt+0x98>  // b.none
    3454:	adrp	x0, 35000 <elf_compress_gnu@@ELFUTILS_1.7+0x1495c>
    3458:	ldr	x0, [x0, #4032]
    345c:	str	x0, [sp, #16]
    3460:	ldr	x0, [sp, #16]
    3464:	str	x0, [sp, #16]
    3468:	ldr	x0, [sp, #16]
    346c:	cmp	x0, #0x0
    3470:	b.eq	348c <*ABS*@plt+0x9c>  // b.none
    3474:	ldr	x1, [sp, #16]
    3478:	adrp	x0, 36000 <elf_compress_gnu@@ELFUTILS_1.7+0x1595c>
    347c:	add	x0, x0, #0x1c0
    3480:	blr	x1
    3484:	b	348c <*ABS*@plt+0x9c>
    3488:	nop
    348c:	ldp	x29, x30, [sp], #32
    3490:	ret
    3494:	stp	x29, x30, [sp, #-48]!
    3498:	mov	x29, sp
    349c:	adrp	x0, 36000 <elf_compress_gnu@@ELFUTILS_1.7+0x1595c>
    34a0:	add	x0, x0, #0x1c0
    34a4:	str	x0, [sp, #40]
    34a8:	ldr	x0, [sp, #40]
    34ac:	str	x0, [sp, #40]
    34b0:	ldr	x1, [sp, #40]
    34b4:	adrp	x0, 36000 <elf_compress_gnu@@ELFUTILS_1.7+0x1595c>
    34b8:	add	x0, x0, #0x1c0
    34bc:	sub	x0, x1, x0
    34c0:	asr	x0, x0, #3
    34c4:	lsr	x1, x0, #63
    34c8:	add	x0, x1, x0
    34cc:	asr	x0, x0, #1
    34d0:	str	x0, [sp, #32]
    34d4:	ldr	x0, [sp, #32]
    34d8:	cmp	x0, #0x0
    34dc:	b.eq	3518 <*ABS*@plt+0x128>  // b.none
    34e0:	adrp	x0, 35000 <elf_compress_gnu@@ELFUTILS_1.7+0x1495c>
    34e4:	ldr	x0, [x0, #4056]
    34e8:	str	x0, [sp, #24]
    34ec:	ldr	x0, [sp, #24]
    34f0:	str	x0, [sp, #24]
    34f4:	ldr	x0, [sp, #24]
    34f8:	cmp	x0, #0x0
    34fc:	b.eq	351c <*ABS*@plt+0x12c>  // b.none
    3500:	ldr	x2, [sp, #24]
    3504:	ldr	x1, [sp, #32]
    3508:	adrp	x0, 36000 <elf_compress_gnu@@ELFUTILS_1.7+0x1595c>
    350c:	add	x0, x0, #0x1c0
    3510:	blr	x2
    3514:	b	351c <*ABS*@plt+0x12c>
    3518:	nop
    351c:	ldp	x29, x30, [sp], #48
    3520:	ret
    3524:	stp	x29, x30, [sp, #-16]!
    3528:	mov	x29, sp
    352c:	adrp	x0, 36000 <elf_compress_gnu@@ELFUTILS_1.7+0x1595c>
    3530:	add	x0, x0, #0x1c0
    3534:	ldrb	w0, [x0]
    3538:	and	x0, x0, #0xff
    353c:	cmp	x0, #0x0
    3540:	b.ne	357c <*ABS*@plt+0x18c>  // b.any
    3544:	adrp	x0, 35000 <elf_compress_gnu@@ELFUTILS_1.7+0x1495c>
    3548:	ldr	x0, [x0, #4040]
    354c:	cmp	x0, #0x0
    3550:	b.eq	3564 <*ABS*@plt+0x174>  // b.none
    3554:	adrp	x0, 36000 <elf_compress_gnu@@ELFUTILS_1.7+0x1595c>
    3558:	add	x0, x0, #0x1b8
    355c:	ldr	x0, [x0]
    3560:	bl	3120 <__cxa_finalize@plt>
    3564:	bl	3424 <*ABS*@plt+0x34>
    3568:	adrp	x0, 36000 <elf_compress_gnu@@ELFUTILS_1.7+0x1595c>
    356c:	add	x0, x0, #0x1c0
    3570:	mov	w1, #0x1                   	// #1
    3574:	strb	w1, [x0]
    3578:	b	3580 <*ABS*@plt+0x190>
    357c:	nop
    3580:	ldp	x29, x30, [sp], #16
    3584:	ret
    3588:	stp	x29, x30, [sp, #-16]!
    358c:	mov	x29, sp
    3590:	bl	3494 <*ABS*@plt+0xa4>
    3594:	nop
    3598:	ldp	x29, x30, [sp], #16
    359c:	ret

00000000000035a0 <elf_version@@ELFUTILS_1.0>:
    35a0:	stp	x29, x30, [sp, #-32]!
    35a4:	mov	x29, sp
    35a8:	str	w0, [sp, #28]
    35ac:	ldr	w0, [sp, #28]
    35b0:	cmp	w0, #0x0
    35b4:	b.ne	35c0 <elf_version@@ELFUTILS_1.0+0x20>  // b.any
    35b8:	mov	w0, #0x1                   	// #1
    35bc:	b	3600 <elf_version@@ELFUTILS_1.0+0x60>
    35c0:	ldr	w0, [sp, #28]
    35c4:	cmp	w0, #0x1
    35c8:	cset	w0, eq  // eq = none
    35cc:	and	w0, w0, #0xff
    35d0:	and	x0, x0, #0xff
    35d4:	cmp	x0, #0x0
    35d8:	b.eq	35f4 <elf_version@@ELFUTILS_1.0+0x54>  // b.none
    35dc:	adrp	x0, 36000 <elf_compress_gnu@@ELFUTILS_1.7+0x1595c>
    35e0:	add	x0, x0, #0x1c4
    35e4:	mov	w1, #0x1                   	// #1
    35e8:	str	w1, [x0]
    35ec:	mov	w0, #0x1                   	// #1
    35f0:	b	3600 <elf_version@@ELFUTILS_1.0+0x60>
    35f4:	mov	w0, #0x2                   	// #2
    35f8:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    35fc:	mov	w0, #0x0                   	// #0
    3600:	ldp	x29, x30, [sp], #32
    3604:	ret
    3608:	sub	sp, sp, #0x30
    360c:	str	x0, [sp, #8]
    3610:	ldr	x0, [sp, #8]
    3614:	str	x0, [sp, #40]
    3618:	ldr	x0, [sp, #40]
    361c:	ldrb	w0, [x0]
    3620:	and	x0, x0, #0xff
    3624:	str	x0, [sp, #32]
    3628:	ldr	x0, [sp, #32]
    362c:	cmp	x0, #0x0
    3630:	b.eq	3774 <elf_version@@ELFUTILS_1.0+0x1d4>  // b.none
    3634:	ldr	x0, [sp, #40]
    3638:	add	x0, x0, #0x1
    363c:	ldrb	w0, [x0]
    3640:	cmp	w0, #0x0
    3644:	b.eq	3774 <elf_version@@ELFUTILS_1.0+0x1d4>  // b.none
    3648:	ldr	x0, [sp, #32]
    364c:	lsl	x1, x0, #4
    3650:	ldr	x0, [sp, #40]
    3654:	add	x0, x0, #0x1
    3658:	ldrb	w0, [x0]
    365c:	and	x0, x0, #0xff
    3660:	add	x0, x1, x0
    3664:	str	x0, [sp, #32]
    3668:	ldr	x0, [sp, #40]
    366c:	add	x0, x0, #0x2
    3670:	ldrb	w0, [x0]
    3674:	cmp	w0, #0x0
    3678:	b.eq	3774 <elf_version@@ELFUTILS_1.0+0x1d4>  // b.none
    367c:	ldr	x0, [sp, #32]
    3680:	lsl	x1, x0, #4
    3684:	ldr	x0, [sp, #40]
    3688:	add	x0, x0, #0x2
    368c:	ldrb	w0, [x0]
    3690:	and	x0, x0, #0xff
    3694:	add	x0, x1, x0
    3698:	str	x0, [sp, #32]
    369c:	ldr	x0, [sp, #40]
    36a0:	add	x0, x0, #0x3
    36a4:	ldrb	w0, [x0]
    36a8:	cmp	w0, #0x0
    36ac:	b.eq	3774 <elf_version@@ELFUTILS_1.0+0x1d4>  // b.none
    36b0:	ldr	x0, [sp, #32]
    36b4:	lsl	x1, x0, #4
    36b8:	ldr	x0, [sp, #40]
    36bc:	add	x0, x0, #0x3
    36c0:	ldrb	w0, [x0]
    36c4:	and	x0, x0, #0xff
    36c8:	add	x0, x1, x0
    36cc:	str	x0, [sp, #32]
    36d0:	ldr	x0, [sp, #40]
    36d4:	add	x0, x0, #0x4
    36d8:	ldrb	w0, [x0]
    36dc:	cmp	w0, #0x0
    36e0:	b.eq	3774 <elf_version@@ELFUTILS_1.0+0x1d4>  // b.none
    36e4:	ldr	x0, [sp, #32]
    36e8:	lsl	x1, x0, #4
    36ec:	ldr	x0, [sp, #40]
    36f0:	add	x0, x0, #0x4
    36f4:	ldrb	w0, [x0]
    36f8:	and	x0, x0, #0xff
    36fc:	add	x0, x1, x0
    3700:	str	x0, [sp, #32]
    3704:	ldr	x0, [sp, #40]
    3708:	add	x0, x0, #0x5
    370c:	str	x0, [sp, #40]
    3710:	b	3758 <elf_version@@ELFUTILS_1.0+0x1b8>
    3714:	ldr	x0, [sp, #32]
    3718:	lsl	x1, x0, #4
    371c:	ldr	x0, [sp, #40]
    3720:	add	x2, x0, #0x1
    3724:	str	x2, [sp, #40]
    3728:	ldrb	w0, [x0]
    372c:	and	x0, x0, #0xff
    3730:	add	x0, x1, x0
    3734:	str	x0, [sp, #32]
    3738:	ldr	x0, [sp, #32]
    373c:	and	x0, x0, #0xf0000000
    3740:	str	x0, [sp, #24]
    3744:	ldr	x0, [sp, #24]
    3748:	lsr	x0, x0, #24
    374c:	ldr	x1, [sp, #32]
    3750:	eor	x0, x1, x0
    3754:	str	x0, [sp, #32]
    3758:	ldr	x0, [sp, #40]
    375c:	ldrb	w0, [x0]
    3760:	cmp	w0, #0x0
    3764:	b.ne	3714 <elf_version@@ELFUTILS_1.0+0x174>  // b.any
    3768:	ldr	x0, [sp, #32]
    376c:	and	x0, x0, #0xfffffff
    3770:	str	x0, [sp, #32]
    3774:	ldr	x0, [sp, #32]
    3778:	add	sp, sp, #0x30
    377c:	ret

0000000000003780 <elf_hash@@ELFUTILS_1.0>:
    3780:	stp	x29, x30, [sp, #-32]!
    3784:	mov	x29, sp
    3788:	str	x0, [sp, #24]
    378c:	ldr	x0, [sp, #24]
    3790:	bl	3608 <elf_version@@ELFUTILS_1.0+0x68>
    3794:	mov	w0, w0
    3798:	ldp	x29, x30, [sp], #32
    379c:	ret

00000000000037a0 <elf_errno@@ELFUTILS_1.0>:
    37a0:	stp	x29, x30, [sp, #-32]!
    37a4:	mov	x29, sp
    37a8:	adrp	x0, 36000 <elf_compress_gnu@@ELFUTILS_1.7+0x1595c>
    37ac:	ldr	x1, [x0, #424]
    37b0:	add	x0, x0, #0x1a8
    37b4:	blr	x1
    37b8:	mrs	x1, tpidr_el0
    37bc:	add	x0, x1, x0
    37c0:	ldr	w0, [x0]
    37c4:	str	w0, [sp, #28]
    37c8:	adrp	x0, 36000 <elf_compress_gnu@@ELFUTILS_1.7+0x1595c>
    37cc:	ldr	x1, [x0, #424]
    37d0:	add	x0, x0, #0x1a8
    37d4:	blr	x1
    37d8:	mrs	x1, tpidr_el0
    37dc:	add	x0, x1, x0
    37e0:	str	wzr, [x0]
    37e4:	ldr	w0, [sp, #28]
    37e8:	ldp	x29, x30, [sp], #32
    37ec:	ret
    37f0:	stp	x29, x30, [sp, #-32]!
    37f4:	mov	x29, sp
    37f8:	str	w0, [sp, #28]
    37fc:	ldr	w0, [sp, #28]
    3800:	cmp	w0, #0x0
    3804:	b.lt	381c <elf_errno@@ELFUTILS_1.0+0x7c>  // b.tstop
    3808:	ldr	w0, [sp, #28]
    380c:	cmp	w0, #0x32
    3810:	b.gt	381c <elf_errno@@ELFUTILS_1.0+0x7c>
    3814:	ldr	w1, [sp, #28]
    3818:	b	3820 <elf_errno@@ELFUTILS_1.0+0x80>
    381c:	mov	w1, #0x1                   	// #1
    3820:	adrp	x0, 36000 <elf_compress_gnu@@ELFUTILS_1.7+0x1595c>
    3824:	ldr	x2, [x0, #424]
    3828:	add	x0, x0, #0x1a8
    382c:	blr	x2
    3830:	mrs	x2, tpidr_el0
    3834:	add	x0, x2, x0
    3838:	str	w1, [x0]
    383c:	nop
    3840:	ldp	x29, x30, [sp], #32
    3844:	ret

0000000000003848 <elf_errmsg@@ELFUTILS_1.0>:
    3848:	stp	x29, x30, [sp, #-48]!
    384c:	mov	x29, sp
    3850:	str	w0, [sp, #28]
    3854:	adrp	x0, 36000 <elf_compress_gnu@@ELFUTILS_1.7+0x1595c>
    3858:	ldr	x1, [x0, #424]
    385c:	add	x0, x0, #0x1a8
    3860:	blr	x1
    3864:	mrs	x1, tpidr_el0
    3868:	add	x0, x1, x0
    386c:	ldr	w0, [x0]
    3870:	str	w0, [sp, #44]
    3874:	ldr	w0, [sp, #28]
    3878:	cmp	w0, #0x0
    387c:	b.ne	38fc <elf_errmsg@@ELFUTILS_1.0+0xb4>  // b.any
    3880:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    3884:	add	x0, x0, #0x10
    3888:	ldrsw	x1, [sp, #44]
    388c:	ldr	x0, [x0, x1, lsl #3]
    3890:	cmp	x0, #0x4f1
    3894:	b.ls	38b8 <elf_errmsg@@ELFUTILS_1.0+0x70>  // b.plast
    3898:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    389c:	add	x3, x0, #0x230
    38a0:	mov	w2, #0x15b                 	// #347
    38a4:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    38a8:	add	x1, x0, #0x1a8
    38ac:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    38b0:	add	x0, x0, #0x1b8
    38b4:	bl	33d0 <__assert_fail@plt>
    38b8:	ldr	w0, [sp, #44]
    38bc:	cmp	w0, #0x0
    38c0:	b.eq	38f4 <elf_errmsg@@ELFUTILS_1.0+0xac>  // b.none
    38c4:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    38c8:	add	x0, x0, #0x10
    38cc:	ldrsw	x1, [sp, #44]
    38d0:	ldr	x1, [x0, x1, lsl #3]
    38d4:	adrp	x0, 20000 <gelf_getchdr@@ELFUTILS_1.7+0xb70>
    38d8:	add	x0, x0, #0xb18
    38dc:	add	x0, x1, x0
    38e0:	mov	x1, x0
    38e4:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    38e8:	add	x0, x0, #0x1e0
    38ec:	bl	3290 <dgettext@plt>
    38f0:	b	39c4 <elf_errmsg@@ELFUTILS_1.0+0x17c>
    38f4:	mov	x0, #0x0                   	// #0
    38f8:	b	39c4 <elf_errmsg@@ELFUTILS_1.0+0x17c>
    38fc:	ldr	w0, [sp, #28]
    3900:	cmn	w0, #0x1
    3904:	b.lt	3914 <elf_errmsg@@ELFUTILS_1.0+0xcc>  // b.tstop
    3908:	ldr	w0, [sp, #28]
    390c:	cmp	w0, #0x32
    3910:	b.le	3930 <elf_errmsg@@ELFUTILS_1.0+0xe8>
    3914:	adrp	x0, 20000 <gelf_getchdr@@ELFUTILS_1.7+0xb70>
    3918:	add	x0, x0, #0xb21
    391c:	mov	x1, x0
    3920:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    3924:	add	x0, x0, #0x1e0
    3928:	bl	3290 <dgettext@plt>
    392c:	b	39c4 <elf_errmsg@@ELFUTILS_1.0+0x17c>
    3930:	ldr	w0, [sp, #28]
    3934:	cmn	w0, #0x1
    3938:	b.ne	3944 <elf_errmsg@@ELFUTILS_1.0+0xfc>  // b.any
    393c:	ldr	w0, [sp, #44]
    3940:	b	3948 <elf_errmsg@@ELFUTILS_1.0+0x100>
    3944:	ldr	w0, [sp, #28]
    3948:	adrp	x1, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    394c:	add	x1, x1, #0x10
    3950:	sxtw	x0, w0
    3954:	ldr	x0, [x1, x0, lsl #3]
    3958:	cmp	x0, #0x4f1
    395c:	b.ls	3980 <elf_errmsg@@ELFUTILS_1.0+0x138>  // b.plast
    3960:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    3964:	add	x3, x0, #0x230
    3968:	mov	w2, #0x161                 	// #353
    396c:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    3970:	add	x1, x0, #0x1a8
    3974:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    3978:	add	x0, x0, #0x1f0
    397c:	bl	33d0 <__assert_fail@plt>
    3980:	ldr	w0, [sp, #28]
    3984:	cmn	w0, #0x1
    3988:	b.ne	3994 <elf_errmsg@@ELFUTILS_1.0+0x14c>  // b.any
    398c:	ldr	w0, [sp, #44]
    3990:	b	3998 <elf_errmsg@@ELFUTILS_1.0+0x150>
    3994:	ldr	w0, [sp, #28]
    3998:	adrp	x1, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    399c:	add	x1, x1, #0x10
    39a0:	sxtw	x0, w0
    39a4:	ldr	x1, [x1, x0, lsl #3]
    39a8:	adrp	x0, 20000 <gelf_getchdr@@ELFUTILS_1.7+0xb70>
    39ac:	add	x0, x0, #0xb18
    39b0:	add	x0, x1, x0
    39b4:	mov	x1, x0
    39b8:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    39bc:	add	x0, x0, #0x1e0
    39c0:	bl	3290 <dgettext@plt>
    39c4:	ldp	x29, x30, [sp], #48
    39c8:	ret

00000000000039cc <elf_fill@@ELFUTILS_1.0>:
    39cc:	sub	sp, sp, #0x10
    39d0:	str	w0, [sp, #12]
    39d4:	adrp	x0, 36000 <elf_compress_gnu@@ELFUTILS_1.7+0x1595c>
    39d8:	add	x0, x0, #0x1c8
    39dc:	ldr	w1, [sp, #12]
    39e0:	str	w1, [x0]
    39e4:	nop
    39e8:	add	sp, sp, #0x10
    39ec:	ret
    39f0:	sub	sp, sp, #0x10
    39f4:	strh	w0, [sp, #14]
    39f8:	ldrh	w0, [sp, #14]
    39fc:	rev16	w0, w0
    3a00:	and	w0, w0, #0xffff
    3a04:	add	sp, sp, #0x10
    3a08:	ret
    3a0c:	sub	sp, sp, #0x10
    3a10:	str	w0, [sp, #12]
    3a14:	ldr	w0, [sp, #12]
    3a18:	rev	w0, w0
    3a1c:	add	sp, sp, #0x10
    3a20:	ret
    3a24:	sub	sp, sp, #0x10
    3a28:	str	x0, [sp, #8]
    3a2c:	ldr	x0, [sp, #8]
    3a30:	rev	x0, x0
    3a34:	add	sp, sp, #0x10
    3a38:	ret
    3a3c:	stp	x29, x30, [sp, #-80]!
    3a40:	mov	x29, sp
    3a44:	str	w0, [sp, #44]
    3a48:	str	x1, [sp, #32]
    3a4c:	str	x2, [sp, #24]
    3a50:	str	x3, [sp, #16]
    3a54:	str	xzr, [sp, #72]
    3a58:	ldr	x0, [sp, #72]
    3a5c:	ldr	x1, [sp, #32]
    3a60:	add	x4, x1, x0
    3a64:	ldr	x0, [sp, #72]
    3a68:	ldr	x1, [sp, #24]
    3a6c:	sub	x2, x1, x0
    3a70:	ldr	x1, [sp, #16]
    3a74:	ldr	x0, [sp, #72]
    3a78:	add	x0, x1, x0
    3a7c:	mov	x3, x0
    3a80:	mov	x1, x4
    3a84:	ldr	w0, [sp, #44]
    3a88:	bl	3300 <pread@plt>
    3a8c:	str	x0, [sp, #64]
    3a90:	ldr	x0, [sp, #64]
    3a94:	cmn	x0, #0x1
    3a98:	b.ne	3aac <elf_fill@@ELFUTILS_1.0+0xe0>  // b.any
    3a9c:	bl	33e0 <__errno_location@plt>
    3aa0:	ldr	w0, [x0]
    3aa4:	cmp	w0, #0x4
    3aa8:	b.eq	3a58 <elf_fill@@ELFUTILS_1.0+0x8c>  // b.none
    3aac:	ldr	x0, [sp, #64]
    3ab0:	str	x0, [sp, #56]
    3ab4:	ldr	x0, [sp, #56]
    3ab8:	cmp	x0, #0x0
    3abc:	b.gt	3adc <elf_fill@@ELFUTILS_1.0+0x110>
    3ac0:	ldr	x0, [sp, #56]
    3ac4:	cmp	x0, #0x0
    3ac8:	b.ge	3ad4 <elf_fill@@ELFUTILS_1.0+0x108>  // b.tcont
    3acc:	ldr	x0, [sp, #56]
    3ad0:	b	3b00 <elf_fill@@ELFUTILS_1.0+0x134>
    3ad4:	ldr	x0, [sp, #72]
    3ad8:	b	3b00 <elf_fill@@ELFUTILS_1.0+0x134>
    3adc:	ldr	x1, [sp, #72]
    3ae0:	ldr	x0, [sp, #56]
    3ae4:	add	x0, x1, x0
    3ae8:	str	x0, [sp, #72]
    3aec:	ldr	x0, [sp, #72]
    3af0:	ldr	x1, [sp, #24]
    3af4:	cmp	x1, x0
    3af8:	b.hi	3a58 <elf_fill@@ELFUTILS_1.0+0x8c>  // b.pmore
    3afc:	ldr	x0, [sp, #72]
    3b00:	ldp	x29, x30, [sp], #80
    3b04:	ret
    3b08:	stp	x29, x30, [sp, #-48]!
    3b0c:	mov	x29, sp
    3b10:	str	x0, [sp, #24]
    3b14:	str	x1, [sp, #16]
    3b18:	ldr	x0, [sp, #16]
    3b1c:	cmp	x0, #0x7
    3b20:	b.ls	3b48 <elf_fill@@ELFUTILS_1.0+0x17c>  // b.plast
    3b24:	mov	x2, #0x8                   	// #8
    3b28:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    3b2c:	add	x1, x0, #0x240
    3b30:	ldr	x0, [sp, #24]
    3b34:	bl	3250 <memcmp@plt>
    3b38:	cmp	w0, #0x0
    3b3c:	b.ne	3b48 <elf_fill@@ELFUTILS_1.0+0x17c>  // b.any
    3b40:	mov	w0, #0x1                   	// #1
    3b44:	b	3be8 <elf_fill@@ELFUTILS_1.0+0x21c>
    3b48:	ldr	x0, [sp, #16]
    3b4c:	cmp	x0, #0xf
    3b50:	b.ls	3be4 <elf_fill@@ELFUTILS_1.0+0x218>  // b.plast
    3b54:	mov	x2, #0x4                   	// #4
    3b58:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    3b5c:	add	x1, x0, #0x250
    3b60:	ldr	x0, [sp, #24]
    3b64:	bl	3250 <memcmp@plt>
    3b68:	cmp	w0, #0x0
    3b6c:	b.ne	3be4 <elf_fill@@ELFUTILS_1.0+0x218>  // b.any
    3b70:	ldr	x0, [sp, #24]
    3b74:	add	x0, x0, #0x4
    3b78:	ldrb	w0, [x0]
    3b7c:	str	w0, [sp, #44]
    3b80:	ldr	x0, [sp, #24]
    3b84:	add	x0, x0, #0x5
    3b88:	ldrb	w0, [x0]
    3b8c:	str	w0, [sp, #40]
    3b90:	ldr	x0, [sp, #24]
    3b94:	add	x0, x0, #0x6
    3b98:	ldrb	w0, [x0]
    3b9c:	str	w0, [sp, #36]
    3ba0:	ldr	w0, [sp, #44]
    3ba4:	cmp	w0, #0x0
    3ba8:	b.le	3be4 <elf_fill@@ELFUTILS_1.0+0x218>
    3bac:	ldr	w0, [sp, #44]
    3bb0:	cmp	w0, #0x2
    3bb4:	b.gt	3be4 <elf_fill@@ELFUTILS_1.0+0x218>
    3bb8:	ldr	w0, [sp, #40]
    3bbc:	cmp	w0, #0x0
    3bc0:	b.le	3be4 <elf_fill@@ELFUTILS_1.0+0x218>
    3bc4:	ldr	w0, [sp, #40]
    3bc8:	cmp	w0, #0x2
    3bcc:	b.gt	3be4 <elf_fill@@ELFUTILS_1.0+0x218>
    3bd0:	ldr	w0, [sp, #36]
    3bd4:	cmp	w0, #0x1
    3bd8:	b.ne	3be4 <elf_fill@@ELFUTILS_1.0+0x218>  // b.any
    3bdc:	mov	w0, #0x3                   	// #3
    3be0:	b	3be8 <elf_fill@@ELFUTILS_1.0+0x21c>
    3be4:	mov	w0, #0x0                   	// #0
    3be8:	ldp	x29, x30, [sp], #48
    3bec:	ret
    3bf0:	stp	x29, x30, [sp, #-96]!
    3bf4:	mov	x29, sp
    3bf8:	str	w0, [sp, #76]
    3bfc:	str	x1, [sp, #64]
    3c00:	str	x2, [sp, #56]
    3c04:	str	x3, [sp, #48]
    3c08:	str	w4, [sp, #72]
    3c0c:	str	x5, [sp, #40]
    3c10:	str	w6, [sp, #36]
    3c14:	str	x7, [sp, #24]
    3c18:	ldr	x0, [sp, #24]
    3c1c:	add	x0, x0, #0x108
    3c20:	mov	x1, x0
    3c24:	mov	x0, #0x1                   	// #1
    3c28:	bl	31c0 <calloc@plt>
    3c2c:	str	x0, [sp, #88]
    3c30:	ldr	x0, [sp, #88]
    3c34:	cmp	x0, #0x0
    3c38:	b.ne	3c48 <elf_fill@@ELFUTILS_1.0+0x27c>  // b.any
    3c3c:	mov	w0, #0x8                   	// #8
    3c40:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    3c44:	b	3ca8 <elf_fill@@ELFUTILS_1.0+0x2dc>
    3c48:	ldr	x0, [sp, #88]
    3c4c:	ldr	w1, [sp, #36]
    3c50:	str	w1, [x0, #24]
    3c54:	ldr	x0, [sp, #88]
    3c58:	mov	w1, #0x1                   	// #1
    3c5c:	str	w1, [x0, #60]
    3c60:	ldr	x0, [sp, #88]
    3c64:	ldr	w1, [sp, #72]
    3c68:	str	w1, [x0, #28]
    3c6c:	ldr	x0, [sp, #88]
    3c70:	ldr	w1, [sp, #76]
    3c74:	str	w1, [x0, #36]
    3c78:	ldr	x0, [sp, #88]
    3c7c:	ldr	x1, [sp, #56]
    3c80:	str	x1, [x0, #40]
    3c84:	ldr	x0, [sp, #88]
    3c88:	ldr	x1, [sp, #48]
    3c8c:	str	x1, [x0, #48]
    3c90:	ldr	x0, [sp, #88]
    3c94:	ldr	x1, [sp, #64]
    3c98:	str	x1, [x0]
    3c9c:	ldr	x0, [sp, #88]
    3ca0:	ldr	x1, [sp, #40]
    3ca4:	str	x1, [x0, #8]
    3ca8:	ldr	x0, [sp, #88]
    3cac:	ldp	x29, x30, [sp], #96
    3cb0:	ret
    3cb4:	stp	x29, x30, [sp, #-48]!
    3cb8:	mov	x29, sp
    3cbc:	str	x0, [sp, #24]
    3cc0:	ldr	x0, [sp, #24]
    3cc4:	ldr	w0, [x0, #24]
    3cc8:	cmp	w0, #0x1
    3ccc:	b.ne	3d10 <elf_fill@@ELFUTILS_1.0+0x344>  // b.any
    3cd0:	ldr	x0, [sp, #24]
    3cd4:	ldr	x0, [x0, #72]
    3cd8:	str	x0, [sp, #40]
    3cdc:	b	3d04 <elf_fill@@ELFUTILS_1.0+0x338>
    3ce0:	ldr	x0, [sp, #40]
    3ce4:	ldr	w0, [x0, #60]
    3ce8:	cmp	w0, #0x0
    3cec:	b.eq	3cf8 <elf_fill@@ELFUTILS_1.0+0x32c>  // b.none
    3cf0:	ldr	x0, [sp, #40]
    3cf4:	bl	3cb4 <elf_fill@@ELFUTILS_1.0+0x2e8>
    3cf8:	ldr	x0, [sp, #40]
    3cfc:	ldr	x0, [x0, #16]
    3d00:	str	x0, [sp, #40]
    3d04:	ldr	x0, [sp, #40]
    3d08:	cmp	x0, #0x0
    3d0c:	b.ne	3ce0 <elf_fill@@ELFUTILS_1.0+0x314>  // b.any
    3d10:	nop
    3d14:	ldp	x29, x30, [sp], #48
    3d18:	ret
    3d1c:	stp	x29, x30, [sp, #-48]!
    3d20:	mov	x29, sp
    3d24:	str	x0, [sp, #24]
    3d28:	ldr	x0, [sp, #24]
    3d2c:	ldr	w0, [x0, #24]
    3d30:	cmp	w0, #0x1
    3d34:	b.ne	3d78 <elf_fill@@ELFUTILS_1.0+0x3ac>  // b.any
    3d38:	ldr	x0, [sp, #24]
    3d3c:	ldr	x0, [x0, #72]
    3d40:	str	x0, [sp, #40]
    3d44:	b	3d6c <elf_fill@@ELFUTILS_1.0+0x3a0>
    3d48:	ldr	x0, [sp, #40]
    3d4c:	ldr	w0, [x0, #60]
    3d50:	cmp	w0, #0x0
    3d54:	b.eq	3d60 <elf_fill@@ELFUTILS_1.0+0x394>  // b.none
    3d58:	ldr	x0, [sp, #40]
    3d5c:	bl	3d1c <elf_fill@@ELFUTILS_1.0+0x350>
    3d60:	ldr	x0, [sp, #40]
    3d64:	ldr	x0, [x0, #16]
    3d68:	str	x0, [sp, #40]
    3d6c:	ldr	x0, [sp, #40]
    3d70:	cmp	x0, #0x0
    3d74:	b.ne	3d48 <elf_fill@@ELFUTILS_1.0+0x37c>  // b.any
    3d78:	nop
    3d7c:	ldp	x29, x30, [sp], #48
    3d80:	ret
    3d84:	stp	x29, x30, [sp, #-80]!
    3d88:	mov	x29, sp
    3d8c:	str	w0, [sp, #60]
    3d90:	str	x1, [sp, #48]
    3d94:	str	x2, [sp, #40]
    3d98:	str	x3, [sp, #32]
    3d9c:	str	w4, [sp, #56]
    3da0:	str	x5, [sp, #24]
    3da4:	mov	x7, #0x0                   	// #0
    3da8:	mov	w6, #0x1                   	// #1
    3dac:	ldr	x5, [sp, #24]
    3db0:	ldr	w4, [sp, #56]
    3db4:	ldr	x3, [sp, #32]
    3db8:	ldr	x2, [sp, #40]
    3dbc:	ldr	x1, [sp, #48]
    3dc0:	ldr	w0, [sp, #60]
    3dc4:	bl	3bf0 <elf_fill@@ELFUTILS_1.0+0x224>
    3dc8:	str	x0, [sp, #72]
    3dcc:	ldr	x0, [sp, #72]
    3dd0:	cmp	x0, #0x0
    3dd4:	b.eq	3df8 <elf_fill@@ELFUTILS_1.0+0x42c>  // b.none
    3dd8:	ldr	x0, [sp, #40]
    3ddc:	add	x1, x0, #0x8
    3de0:	ldr	x0, [sp, #72]
    3de4:	str	x1, [x0, #112]
    3de8:	ldr	x0, [sp, #72]
    3dec:	add	x1, x0, #0xf4
    3df0:	ldr	x0, [sp, #72]
    3df4:	str	x1, [x0, #160]
    3df8:	ldr	x0, [sp, #72]
    3dfc:	ldp	x29, x30, [sp], #80
    3e00:	ret
    3e04:	stp	x29, x30, [sp, #-192]!
    3e08:	mov	x29, sp
    3e0c:	str	x0, [sp, #56]
    3e10:	str	x1, [sp, #48]
    3e14:	str	w2, [sp, #44]
    3e18:	str	x3, [sp, #32]
    3e1c:	str	x4, [sp, #24]
    3e20:	ldr	x0, [sp, #48]
    3e24:	add	x0, x0, #0x4
    3e28:	ldrb	w0, [x0]
    3e2c:	cmp	w0, #0x1
    3e30:	cset	w0, eq  // eq = none
    3e34:	strb	w0, [sp, #183]
    3e38:	ldr	x0, [sp, #48]
    3e3c:	add	x0, x0, #0x5
    3e40:	ldrb	w0, [x0]
    3e44:	cmp	w0, #0x1
    3e48:	b.ne	3e80 <elf_fill@@ELFUTILS_1.0+0x4b4>  // b.any
    3e4c:	ldrb	w0, [sp, #183]
    3e50:	cmp	w0, #0x0
    3e54:	b.eq	3e60 <elf_fill@@ELFUTILS_1.0+0x494>  // b.none
    3e58:	mov	x0, #0x3                   	// #3
    3e5c:	b	3e64 <elf_fill@@ELFUTILS_1.0+0x498>
    3e60:	mov	x0, #0x7                   	// #7
    3e64:	ldr	x1, [sp, #48]
    3e68:	and	x0, x0, x1
    3e6c:	cmp	x0, #0x0
    3e70:	b.ne	3e80 <elf_fill@@ELFUTILS_1.0+0x4b4>  // b.any
    3e74:	ldr	x0, [sp, #48]
    3e78:	str	x0, [sp, #152]
    3e7c:	b	3f30 <elf_fill@@ELFUTILS_1.0+0x564>
    3e80:	add	x0, sp, #0x58
    3e84:	str	x0, [sp, #152]
    3e88:	ldrb	w0, [sp, #183]
    3e8c:	cmp	w0, #0x0
    3e90:	b.eq	3ed8 <elf_fill@@ELFUTILS_1.0+0x50c>  // b.none
    3e94:	add	x0, sp, #0x58
    3e98:	mov	x2, #0x34                  	// #52
    3e9c:	ldr	x1, [sp, #48]
    3ea0:	bl	30a0 <memcpy@plt>
    3ea4:	ldr	x0, [sp, #48]
    3ea8:	add	x0, x0, #0x5
    3eac:	ldrb	w0, [x0]
    3eb0:	cmp	w0, #0x1
    3eb4:	b.eq	3f30 <elf_fill@@ELFUTILS_1.0+0x564>  // b.none
    3eb8:	ldrh	w0, [sp, #136]
    3ebc:	bl	39f0 <elf_fill@@ELFUTILS_1.0+0x24>
    3ec0:	and	w0, w0, #0xffff
    3ec4:	strh	w0, [sp, #136]
    3ec8:	ldr	w0, [sp, #120]
    3ecc:	bl	3a0c <elf_fill@@ELFUTILS_1.0+0x40>
    3ed0:	str	w0, [sp, #120]
    3ed4:	b	3f30 <elf_fill@@ELFUTILS_1.0+0x564>
    3ed8:	ldr	x1, [sp, #48]
    3edc:	add	x0, sp, #0x58
    3ee0:	ldp	x2, x3, [x1]
    3ee4:	stp	x2, x3, [x0]
    3ee8:	ldp	x2, x3, [x1, #16]
    3eec:	stp	x2, x3, [x0, #16]
    3ef0:	ldp	x2, x3, [x1, #32]
    3ef4:	stp	x2, x3, [x0, #32]
    3ef8:	ldp	x2, x3, [x1, #48]
    3efc:	stp	x2, x3, [x0, #48]
    3f00:	ldr	x0, [sp, #48]
    3f04:	add	x0, x0, #0x5
    3f08:	ldrb	w0, [x0]
    3f0c:	cmp	w0, #0x1
    3f10:	b.eq	3f30 <elf_fill@@ELFUTILS_1.0+0x564>  // b.none
    3f14:	ldrh	w0, [sp, #148]
    3f18:	bl	39f0 <elf_fill@@ELFUTILS_1.0+0x24>
    3f1c:	and	w0, w0, #0xffff
    3f20:	strh	w0, [sp, #148]
    3f24:	ldr	x0, [sp, #128]
    3f28:	bl	3a24 <elf_fill@@ELFUTILS_1.0+0x58>
    3f2c:	str	x0, [sp, #128]
    3f30:	ldrb	w0, [sp, #183]
    3f34:	cmp	w0, #0x0
    3f38:	b.eq	4190 <elf_fill@@ELFUTILS_1.0+0x7c4>  // b.none
    3f3c:	ldr	x0, [sp, #152]
    3f40:	ldrh	w0, [x0, #48]
    3f44:	and	x0, x0, #0xffff
    3f48:	str	x0, [sp, #184]
    3f4c:	ldr	x0, [sp, #184]
    3f50:	cmp	x0, #0x0
    3f54:	cset	w0, eq  // eq = none
    3f58:	and	w0, w0, #0xff
    3f5c:	and	x0, x0, #0xff
    3f60:	cmp	x0, #0x0
    3f64:	b.eq	4140 <elf_fill@@ELFUTILS_1.0+0x774>  // b.none
    3f68:	ldr	x0, [sp, #152]
    3f6c:	ldr	w0, [x0, #32]
    3f70:	cmp	w0, #0x0
    3f74:	b.eq	4140 <elf_fill@@ELFUTILS_1.0+0x774>  // b.none
    3f78:	ldr	x0, [sp, #152]
    3f7c:	ldr	w0, [x0, #32]
    3f80:	mov	w0, w0
    3f84:	ldr	x1, [sp, #24]
    3f88:	cmp	x1, x0
    3f8c:	cset	w0, ls  // ls = plast
    3f90:	and	w0, w0, #0xff
    3f94:	and	x0, x0, #0xff
    3f98:	cmp	x0, #0x0
    3f9c:	b.ne	3fcc <elf_fill@@ELFUTILS_1.0+0x600>  // b.any
    3fa0:	ldr	x0, [sp, #152]
    3fa4:	ldr	w0, [x0, #32]
    3fa8:	mov	w0, w0
    3fac:	ldr	x1, [sp, #24]
    3fb0:	sub	x0, x1, x0
    3fb4:	cmp	x0, #0x27
    3fb8:	cset	w0, ls  // ls = plast
    3fbc:	and	w0, w0, #0xff
    3fc0:	and	x0, x0, #0xff
    3fc4:	cmp	x0, #0x0
    3fc8:	b.eq	3fd4 <elf_fill@@ELFUTILS_1.0+0x608>  // b.none
    3fcc:	mov	x0, #0x0                   	// #0
    3fd0:	b	43d0 <elf_fill@@ELFUTILS_1.0+0xa04>
    3fd4:	ldr	x0, [sp, #56]
    3fd8:	cmp	x0, #0x0
    3fdc:	cset	w0, ne  // ne = any
    3fe0:	and	w0, w0, #0xff
    3fe4:	and	x0, x0, #0xff
    3fe8:	cmp	x0, #0x0
    3fec:	b.eq	4050 <elf_fill@@ELFUTILS_1.0+0x684>  // b.none
    3ff0:	ldr	x0, [sp, #48]
    3ff4:	add	x0, x0, #0x5
    3ff8:	ldrb	w0, [x0]
    3ffc:	cmp	w0, #0x1
    4000:	b.ne	4050 <elf_fill@@ELFUTILS_1.0+0x684>  // b.any
    4004:	ldr	x0, [sp, #152]
    4008:	ldr	w0, [x0, #32]
    400c:	mov	w0, w0
    4010:	ldr	x1, [sp, #56]
    4014:	add	x0, x1, x0
    4018:	and	x0, x0, #0x3
    401c:	cmp	x0, #0x0
    4020:	b.ne	4050 <elf_fill@@ELFUTILS_1.0+0x684>  // b.any
    4024:	ldr	x0, [sp, #152]
    4028:	ldr	w0, [x0, #32]
    402c:	mov	w1, w0
    4030:	ldr	x0, [sp, #32]
    4034:	add	x0, x1, x0
    4038:	ldr	x1, [sp, #56]
    403c:	add	x0, x1, x0
    4040:	ldr	w0, [x0, #20]
    4044:	mov	w0, w0
    4048:	str	x0, [sp, #184]
    404c:	b	4140 <elf_fill@@ELFUTILS_1.0+0x774>
    4050:	ldr	x0, [sp, #56]
    4054:	cmp	x0, #0x0
    4058:	cset	w0, ne  // ne = any
    405c:	and	w0, w0, #0xff
    4060:	and	x0, x0, #0xff
    4064:	cmp	x0, #0x0
    4068:	b.eq	4098 <elf_fill@@ELFUTILS_1.0+0x6cc>  // b.none
    406c:	ldr	x0, [sp, #152]
    4070:	ldr	w0, [x0, #32]
    4074:	mov	w1, w0
    4078:	ldr	x0, [sp, #32]
    407c:	add	x0, x1, x0
    4080:	ldr	x1, [sp, #56]
    4084:	add	x0, x1, x0
    4088:	add	x0, x0, #0x14
    408c:	ldr	w0, [x0]
    4090:	str	w0, [sp, #84]
    4094:	b	4114 <elf_fill@@ELFUTILS_1.0+0x748>
    4098:	ldr	x0, [sp, #152]
    409c:	ldr	w0, [x0, #32]
    40a0:	mov	w1, w0
    40a4:	ldr	x0, [sp, #32]
    40a8:	add	x0, x1, x0
    40ac:	add	x0, x0, #0x14
    40b0:	mov	x1, x0
    40b4:	add	x0, sp, #0x54
    40b8:	mov	x3, x1
    40bc:	mov	x2, #0x4                   	// #4
    40c0:	mov	x1, x0
    40c4:	ldr	w0, [sp, #44]
    40c8:	bl	3a3c <elf_fill@@ELFUTILS_1.0+0x70>
    40cc:	str	x0, [sp, #160]
    40d0:	ldr	x0, [sp, #160]
    40d4:	cmp	x0, #0x4
    40d8:	cset	w0, ne  // ne = any
    40dc:	and	w0, w0, #0xff
    40e0:	and	x0, x0, #0xff
    40e4:	cmp	x0, #0x0
    40e8:	b.eq	4114 <elf_fill@@ELFUTILS_1.0+0x748>  // b.none
    40ec:	ldr	x0, [sp, #160]
    40f0:	cmp	x0, #0x0
    40f4:	b.ge	4104 <elf_fill@@ELFUTILS_1.0+0x738>  // b.tcont
    40f8:	mov	w0, #0x9                   	// #9
    40fc:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    4100:	b	410c <elf_fill@@ELFUTILS_1.0+0x740>
    4104:	mov	w0, #0xa                   	// #10
    4108:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    410c:	mov	x0, #0xffffffffffffffff    	// #-1
    4110:	b	43d0 <elf_fill@@ELFUTILS_1.0+0xa04>
    4114:	ldr	x0, [sp, #48]
    4118:	add	x0, x0, #0x5
    411c:	ldrb	w0, [x0]
    4120:	cmp	w0, #0x1
    4124:	b.eq	4134 <elf_fill@@ELFUTILS_1.0+0x768>  // b.none
    4128:	ldr	w0, [sp, #84]
    412c:	bl	3a0c <elf_fill@@ELFUTILS_1.0+0x40>
    4130:	str	w0, [sp, #84]
    4134:	ldr	w0, [sp, #84]
    4138:	mov	w0, w0
    413c:	str	x0, [sp, #184]
    4140:	ldr	x0, [sp, #152]
    4144:	ldr	w0, [x0, #32]
    4148:	mov	w0, w0
    414c:	ldr	x1, [sp, #24]
    4150:	cmp	x1, x0
    4154:	b.cc	4188 <elf_fill@@ELFUTILS_1.0+0x7bc>  // b.lo, b.ul, b.last
    4158:	ldr	x0, [sp, #152]
    415c:	ldr	w0, [x0, #32]
    4160:	mov	w0, w0
    4164:	ldr	x1, [sp, #24]
    4168:	sub	x2, x1, x0
    416c:	ldr	x1, [sp, #184]
    4170:	mov	x0, x1
    4174:	lsl	x0, x0, #2
    4178:	add	x0, x0, x1
    417c:	lsl	x0, x0, #3
    4180:	cmp	x2, x0
    4184:	b.cs	43cc <elf_fill@@ELFUTILS_1.0+0xa00>  // b.hs, b.nlast
    4188:	str	xzr, [sp, #184]
    418c:	b	43cc <elf_fill@@ELFUTILS_1.0+0xa00>
    4190:	ldr	x0, [sp, #152]
    4194:	ldrh	w0, [x0, #60]
    4198:	and	x0, x0, #0xffff
    419c:	str	x0, [sp, #184]
    41a0:	ldr	x0, [sp, #184]
    41a4:	cmp	x0, #0x0
    41a8:	cset	w0, eq  // eq = none
    41ac:	and	w0, w0, #0xff
    41b0:	and	x0, x0, #0xff
    41b4:	cmp	x0, #0x0
    41b8:	b.eq	4394 <elf_fill@@ELFUTILS_1.0+0x9c8>  // b.none
    41bc:	ldr	x0, [sp, #152]
    41c0:	ldr	x0, [x0, #40]
    41c4:	cmp	x0, #0x0
    41c8:	b.eq	4394 <elf_fill@@ELFUTILS_1.0+0x9c8>  // b.none
    41cc:	ldr	x0, [sp, #152]
    41d0:	ldr	x0, [x0, #40]
    41d4:	ldr	x1, [sp, #24]
    41d8:	cmp	x1, x0
    41dc:	cset	w0, ls  // ls = plast
    41e0:	and	w0, w0, #0xff
    41e4:	and	x0, x0, #0xff
    41e8:	cmp	x0, #0x0
    41ec:	b.ne	4218 <elf_fill@@ELFUTILS_1.0+0x84c>  // b.any
    41f0:	ldr	x0, [sp, #152]
    41f4:	ldr	x0, [x0, #40]
    41f8:	add	x0, x0, #0x40
    41fc:	ldr	x1, [sp, #24]
    4200:	cmp	x1, x0
    4204:	cset	w0, cc  // cc = lo, ul, last
    4208:	and	w0, w0, #0xff
    420c:	and	x0, x0, #0xff
    4210:	cmp	x0, #0x0
    4214:	b.eq	4220 <elf_fill@@ELFUTILS_1.0+0x854>  // b.none
    4218:	mov	x0, #0x0                   	// #0
    421c:	b	43d0 <elf_fill@@ELFUTILS_1.0+0xa04>
    4220:	ldr	x0, [sp, #56]
    4224:	cmp	x0, #0x0
    4228:	cset	w0, ne  // ne = any
    422c:	and	w0, w0, #0xff
    4230:	and	x0, x0, #0xff
    4234:	cmp	x0, #0x0
    4238:	b.eq	4290 <elf_fill@@ELFUTILS_1.0+0x8c4>  // b.none
    423c:	ldr	x0, [sp, #48]
    4240:	add	x0, x0, #0x5
    4244:	ldrb	w0, [x0]
    4248:	cmp	w0, #0x1
    424c:	b.ne	4290 <elf_fill@@ELFUTILS_1.0+0x8c4>  // b.any
    4250:	ldr	x0, [sp, #152]
    4254:	ldr	x0, [x0, #40]
    4258:	ldr	x1, [sp, #56]
    425c:	add	x0, x1, x0
    4260:	and	x0, x0, #0x7
    4264:	cmp	x0, #0x0
    4268:	b.ne	4290 <elf_fill@@ELFUTILS_1.0+0x8c4>  // b.any
    426c:	ldr	x0, [sp, #152]
    4270:	ldr	x1, [x0, #40]
    4274:	ldr	x0, [sp, #32]
    4278:	add	x0, x1, x0
    427c:	ldr	x1, [sp, #56]
    4280:	add	x0, x1, x0
    4284:	ldr	x0, [x0, #32]
    4288:	str	x0, [sp, #72]
    428c:	b	436c <elf_fill@@ELFUTILS_1.0+0x9a0>
    4290:	ldr	x0, [sp, #56]
    4294:	cmp	x0, #0x0
    4298:	cset	w0, ne  // ne = any
    429c:	and	w0, w0, #0xff
    42a0:	and	x0, x0, #0xff
    42a4:	cmp	x0, #0x0
    42a8:	b.eq	42d4 <elf_fill@@ELFUTILS_1.0+0x908>  // b.none
    42ac:	ldr	x0, [sp, #152]
    42b0:	ldr	x1, [x0, #40]
    42b4:	ldr	x0, [sp, #32]
    42b8:	add	x0, x1, x0
    42bc:	ldr	x1, [sp, #56]
    42c0:	add	x0, x1, x0
    42c4:	add	x0, x0, #0x20
    42c8:	ldr	x0, [x0]
    42cc:	str	x0, [sp, #72]
    42d0:	b	434c <elf_fill@@ELFUTILS_1.0+0x980>
    42d4:	ldr	x0, [sp, #152]
    42d8:	ldr	x1, [x0, #40]
    42dc:	ldr	x0, [sp, #32]
    42e0:	add	x0, x1, x0
    42e4:	add	x0, x0, #0x20
    42e8:	mov	x1, x0
    42ec:	add	x0, sp, #0x48
    42f0:	mov	x3, x1
    42f4:	mov	x2, #0x8                   	// #8
    42f8:	mov	x1, x0
    42fc:	ldr	w0, [sp, #44]
    4300:	bl	3a3c <elf_fill@@ELFUTILS_1.0+0x70>
    4304:	str	x0, [sp, #168]
    4308:	ldr	x0, [sp, #168]
    430c:	cmp	x0, #0x8
    4310:	cset	w0, ne  // ne = any
    4314:	and	w0, w0, #0xff
    4318:	and	x0, x0, #0xff
    431c:	cmp	x0, #0x0
    4320:	b.eq	434c <elf_fill@@ELFUTILS_1.0+0x980>  // b.none
    4324:	ldr	x0, [sp, #168]
    4328:	cmp	x0, #0x0
    432c:	b.ge	433c <elf_fill@@ELFUTILS_1.0+0x970>  // b.tcont
    4330:	mov	w0, #0x9                   	// #9
    4334:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    4338:	b	4344 <elf_fill@@ELFUTILS_1.0+0x978>
    433c:	mov	w0, #0xa                   	// #10
    4340:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    4344:	mov	x0, #0xffffffffffffffff    	// #-1
    4348:	b	43d0 <elf_fill@@ELFUTILS_1.0+0xa04>
    434c:	ldr	x0, [sp, #48]
    4350:	add	x0, x0, #0x5
    4354:	ldrb	w0, [x0]
    4358:	cmp	w0, #0x1
    435c:	b.eq	436c <elf_fill@@ELFUTILS_1.0+0x9a0>  // b.none
    4360:	ldr	x0, [sp, #72]
    4364:	bl	3a24 <elf_fill@@ELFUTILS_1.0+0x58>
    4368:	str	x0, [sp, #72]
    436c:	ldr	x1, [sp, #72]
    4370:	mov	x0, #0xffffffff            	// #4294967295
    4374:	cmp	x1, x0
    4378:	b.ls	438c <elf_fill@@ELFUTILS_1.0+0x9c0>  // b.plast
    437c:	mov	w0, #0xa                   	// #10
    4380:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    4384:	mov	x0, #0xffffffffffffffff    	// #-1
    4388:	b	43d0 <elf_fill@@ELFUTILS_1.0+0xa04>
    438c:	ldr	x0, [sp, #72]
    4390:	str	x0, [sp, #184]
    4394:	ldr	x0, [sp, #152]
    4398:	ldr	x0, [x0, #40]
    439c:	ldr	x1, [sp, #24]
    43a0:	cmp	x1, x0
    43a4:	b.cc	43c8 <elf_fill@@ELFUTILS_1.0+0x9fc>  // b.lo, b.ul, b.last
    43a8:	ldr	x0, [sp, #152]
    43ac:	ldr	x0, [x0, #40]
    43b0:	ldr	x1, [sp, #24]
    43b4:	sub	x1, x1, x0
    43b8:	ldr	x0, [sp, #184]
    43bc:	lsl	x0, x0, #6
    43c0:	cmp	x1, x0
    43c4:	b.cs	43cc <elf_fill@@ELFUTILS_1.0+0xa00>  // b.hs, b.nlast
    43c8:	str	xzr, [sp, #184]
    43cc:	ldr	x0, [sp, #184]
    43d0:	ldp	x29, x30, [sp], #192
    43d4:	ret
    43d8:	stp	x29, x30, [sp, #-160]!
    43dc:	mov	x29, sp
    43e0:	str	w0, [sp, #60]
    43e4:	str	x1, [sp, #48]
    43e8:	str	x2, [sp, #40]
    43ec:	str	x3, [sp, #32]
    43f0:	str	x4, [sp, #24]
    43f4:	str	w5, [sp, #56]
    43f8:	str	x6, [sp, #16]
    43fc:	ldr	x0, [sp, #40]
    4400:	add	x0, x0, #0x4
    4404:	ldrb	w0, [x0]
    4408:	cmp	w0, #0x1
    440c:	cset	w0, ne  // ne = any
    4410:	and	w0, w0, #0xff
    4414:	and	x0, x0, #0xff
    4418:	cmp	x0, #0x0
    441c:	b.eq	444c <elf_fill@@ELFUTILS_1.0+0xa80>  // b.none
    4420:	ldr	x0, [sp, #40]
    4424:	add	x0, x0, #0x4
    4428:	ldrb	w0, [x0]
    442c:	cmp	w0, #0x2
    4430:	cset	w0, ne  // ne = any
    4434:	and	w0, w0, #0xff
    4438:	and	x0, x0, #0xff
    443c:	cmp	x0, #0x0
    4440:	b.eq	444c <elf_fill@@ELFUTILS_1.0+0xa80>  // b.none
    4444:	mov	w0, #0x1                   	// #1
    4448:	b	4450 <elf_fill@@ELFUTILS_1.0+0xa84>
    444c:	mov	w0, #0x0                   	// #0
    4450:	cmp	w0, #0x0
    4454:	b.ne	44b4 <elf_fill@@ELFUTILS_1.0+0xae8>  // b.any
    4458:	ldr	x0, [sp, #40]
    445c:	add	x0, x0, #0x5
    4460:	ldrb	w0, [x0]
    4464:	cmp	w0, #0x1
    4468:	cset	w0, ne  // ne = any
    446c:	and	w0, w0, #0xff
    4470:	and	x0, x0, #0xff
    4474:	cmp	x0, #0x0
    4478:	b.eq	44a8 <elf_fill@@ELFUTILS_1.0+0xadc>  // b.none
    447c:	ldr	x0, [sp, #40]
    4480:	add	x0, x0, #0x5
    4484:	ldrb	w0, [x0]
    4488:	cmp	w0, #0x2
    448c:	cset	w0, ne  // ne = any
    4490:	and	w0, w0, #0xff
    4494:	and	x0, x0, #0xff
    4498:	cmp	x0, #0x0
    449c:	b.eq	44a8 <elf_fill@@ELFUTILS_1.0+0xadc>  // b.none
    44a0:	mov	w0, #0x1                   	// #1
    44a4:	b	44ac <elf_fill@@ELFUTILS_1.0+0xae0>
    44a8:	mov	w0, #0x0                   	// #0
    44ac:	cmp	w0, #0x0
    44b0:	b.eq	44c4 <elf_fill@@ELFUTILS_1.0+0xaf8>  // b.none
    44b4:	mov	w0, #0xa                   	// #10
    44b8:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    44bc:	mov	x0, #0x0                   	// #0
    44c0:	b	53b4 <elf_fill@@ELFUTILS_1.0+0x19e8>
    44c4:	ldr	x4, [sp, #24]
    44c8:	ldr	x3, [sp, #32]
    44cc:	ldr	w2, [sp, #60]
    44d0:	ldr	x1, [sp, #40]
    44d4:	ldr	x0, [sp, #48]
    44d8:	bl	3e04 <elf_fill@@ELFUTILS_1.0+0x438>
    44dc:	str	x0, [sp, #120]
    44e0:	ldr	x0, [sp, #120]
    44e4:	cmn	x0, #0x1
    44e8:	b.ne	44f4 <elf_fill@@ELFUTILS_1.0+0xb28>  // b.any
    44ec:	mov	x0, #0x0                   	// #0
    44f0:	b	53b4 <elf_fill@@ELFUTILS_1.0+0x19e8>
    44f4:	ldr	x0, [sp, #40]
    44f8:	add	x0, x0, #0x4
    44fc:	ldrb	w0, [x0]
    4500:	cmp	w0, #0x1
    4504:	b.ne	4534 <elf_fill@@ELFUTILS_1.0+0xb68>  // b.any
    4508:	ldr	x1, [sp, #120]
    450c:	mov	x0, #0x842                 	// #2114
    4510:	movk	x0, #0x8421, lsl #16
    4514:	movk	x0, #0x4210, lsl #32
    4518:	movk	x0, #0x108, lsl #48
    451c:	cmp	x1, x0
    4520:	b.ls	4558 <elf_fill@@ELFUTILS_1.0+0xb8c>  // b.plast
    4524:	mov	w0, #0xa                   	// #10
    4528:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    452c:	mov	x0, #0x0                   	// #0
    4530:	b	53b4 <elf_fill@@ELFUTILS_1.0+0x19e8>
    4534:	ldr	x1, [sp, #120]
    4538:	mov	x0, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
    453c:	movk	x0, #0xf0, lsl #48
    4540:	cmp	x1, x0
    4544:	b.ls	4558 <elf_fill@@ELFUTILS_1.0+0xb8c>  // b.plast
    4548:	mov	w0, #0xa                   	// #10
    454c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    4550:	mov	x0, #0x0                   	// #0
    4554:	b	53b4 <elf_fill@@ELFUTILS_1.0+0x19e8>
    4558:	ldr	x0, [sp, #120]
    455c:	cmp	x0, #0x0
    4560:	b.ne	458c <elf_fill@@ELFUTILS_1.0+0xbc0>  // b.any
    4564:	ldr	w0, [sp, #56]
    4568:	cmp	w0, #0x2
    456c:	b.eq	457c <elf_fill@@ELFUTILS_1.0+0xbb0>  // b.none
    4570:	ldr	w0, [sp, #56]
    4574:	cmp	w0, #0x9
    4578:	b.ne	4584 <elf_fill@@ELFUTILS_1.0+0xbb8>  // b.any
    457c:	mov	w0, #0x1                   	// #1
    4580:	b	4588 <elf_fill@@ELFUTILS_1.0+0xbbc>
    4584:	mov	w0, #0x0                   	// #0
    4588:	sxtw	x0, w0
    458c:	str	x0, [sp, #112]
    4590:	ldr	x1, [sp, #112]
    4594:	mov	x0, x1
    4598:	lsl	x0, x0, #1
    459c:	add	x0, x0, x1
    45a0:	lsl	x0, x0, #2
    45a4:	add	x0, x0, x1
    45a8:	lsl	x0, x0, #4
    45ac:	mov	x7, x0
    45b0:	mov	w6, #0x3                   	// #3
    45b4:	ldr	x5, [sp, #16]
    45b8:	ldr	w4, [sp, #56]
    45bc:	ldr	x3, [sp, #24]
    45c0:	ldr	x2, [sp, #32]
    45c4:	ldr	x1, [sp, #48]
    45c8:	ldr	w0, [sp, #60]
    45cc:	bl	3bf0 <elf_fill@@ELFUTILS_1.0+0x224>
    45d0:	str	x0, [sp, #104]
    45d4:	ldr	x0, [sp, #104]
    45d8:	cmp	x0, #0x0
    45dc:	b.ne	45e8 <elf_fill@@ELFUTILS_1.0+0xc1c>  // b.any
    45e0:	mov	x0, #0x0                   	// #0
    45e4:	b	53b4 <elf_fill@@ELFUTILS_1.0+0x19e8>
    45e8:	ldr	x0, [sp, #120]
    45ec:	mov	w0, w0
    45f0:	ldr	x1, [sp, #120]
    45f4:	cmp	x1, x0
    45f8:	b.eq	461c <elf_fill@@ELFUTILS_1.0+0xc50>  // b.none
    45fc:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    4600:	add	x3, x0, #0x330
    4604:	mov	w2, #0x13f                 	// #319
    4608:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    460c:	add	x1, x0, #0x258
    4610:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    4614:	add	x0, x0, #0x268
    4618:	bl	33d0 <__assert_fail@plt>
    461c:	ldr	x0, [sp, #120]
    4620:	mov	w1, w0
    4624:	ldr	x0, [sp, #104]
    4628:	str	w1, [x0, #200]
    462c:	ldr	x0, [sp, #112]
    4630:	mov	w1, w0
    4634:	ldr	x0, [sp, #104]
    4638:	str	w1, [x0, #204]
    463c:	ldr	x0, [sp, #104]
    4640:	mov	w1, #0xa                   	// #10
    4644:	str	w1, [x0, #112]
    4648:	ldr	x0, [sp, #40]
    464c:	add	x0, x0, #0x4
    4650:	ldrb	w0, [x0]
    4654:	mov	w1, w0
    4658:	ldr	x0, [sp, #104]
    465c:	str	w1, [x0, #32]
    4660:	ldr	x0, [sp, #40]
    4664:	add	x0, x0, #0x4
    4668:	ldrb	w0, [x0]
    466c:	cmp	w0, #0x1
    4670:	b.ne	4d64 <elf_fill@@ELFUTILS_1.0+0x1398>  // b.any
    4674:	ldr	x0, [sp, #32]
    4678:	ldr	x1, [sp, #48]
    467c:	add	x0, x1, x0
    4680:	str	x0, [sp, #80]
    4684:	ldr	x0, [sp, #48]
    4688:	cmp	x0, #0x0
    468c:	b.eq	46c4 <elf_fill@@ELFUTILS_1.0+0xcf8>  // b.none
    4690:	ldr	x0, [sp, #40]
    4694:	add	x0, x0, #0x5
    4698:	ldrb	w0, [x0]
    469c:	cmp	w0, #0x1
    46a0:	b.ne	46c4 <elf_fill@@ELFUTILS_1.0+0xcf8>  // b.any
    46a4:	ldr	x0, [sp, #80]
    46a8:	and	x0, x0, #0x3
    46ac:	cmp	x0, #0x0
    46b0:	b.ne	46c4 <elf_fill@@ELFUTILS_1.0+0xcf8>  // b.any
    46b4:	ldr	x0, [sp, #104]
    46b8:	ldr	x1, [sp, #80]
    46bc:	str	x1, [x0, #72]
    46c0:	b	4830 <elf_fill@@ELFUTILS_1.0+0xe64>
    46c4:	ldr	x0, [sp, #104]
    46c8:	add	x0, x0, #0x88
    46cc:	mov	x2, #0x34                  	// #52
    46d0:	ldr	x1, [sp, #40]
    46d4:	bl	30a0 <memcpy@plt>
    46d8:	mov	x1, x0
    46dc:	ldr	x0, [sp, #104]
    46e0:	str	x1, [x0, #72]
    46e4:	ldr	x0, [sp, #40]
    46e8:	add	x0, x0, #0x5
    46ec:	ldrb	w0, [x0]
    46f0:	cmp	w0, #0x1
    46f4:	b.eq	4830 <elf_fill@@ELFUTILS_1.0+0xe64>  // b.none
    46f8:	ldr	x0, [sp, #104]
    46fc:	ldrh	w0, [x0, #152]
    4700:	bl	39f0 <elf_fill@@ELFUTILS_1.0+0x24>
    4704:	and	w1, w0, #0xffff
    4708:	ldr	x0, [sp, #104]
    470c:	strh	w1, [x0, #152]
    4710:	ldr	x0, [sp, #104]
    4714:	ldrh	w0, [x0, #154]
    4718:	bl	39f0 <elf_fill@@ELFUTILS_1.0+0x24>
    471c:	and	w1, w0, #0xffff
    4720:	ldr	x0, [sp, #104]
    4724:	strh	w1, [x0, #154]
    4728:	ldr	x0, [sp, #104]
    472c:	ldr	w0, [x0, #156]
    4730:	bl	3a0c <elf_fill@@ELFUTILS_1.0+0x40>
    4734:	mov	w1, w0
    4738:	ldr	x0, [sp, #104]
    473c:	str	w1, [x0, #156]
    4740:	ldr	x0, [sp, #104]
    4744:	ldr	w0, [x0, #160]
    4748:	bl	3a0c <elf_fill@@ELFUTILS_1.0+0x40>
    474c:	mov	w1, w0
    4750:	ldr	x0, [sp, #104]
    4754:	str	w1, [x0, #160]
    4758:	ldr	x0, [sp, #104]
    475c:	ldr	w0, [x0, #164]
    4760:	bl	3a0c <elf_fill@@ELFUTILS_1.0+0x40>
    4764:	mov	w1, w0
    4768:	ldr	x0, [sp, #104]
    476c:	str	w1, [x0, #164]
    4770:	ldr	x0, [sp, #104]
    4774:	ldr	w0, [x0, #168]
    4778:	bl	3a0c <elf_fill@@ELFUTILS_1.0+0x40>
    477c:	mov	w1, w0
    4780:	ldr	x0, [sp, #104]
    4784:	str	w1, [x0, #168]
    4788:	ldr	x0, [sp, #104]
    478c:	ldr	w0, [x0, #172]
    4790:	bl	3a0c <elf_fill@@ELFUTILS_1.0+0x40>
    4794:	mov	w1, w0
    4798:	ldr	x0, [sp, #104]
    479c:	str	w1, [x0, #172]
    47a0:	ldr	x0, [sp, #104]
    47a4:	ldrh	w0, [x0, #176]
    47a8:	bl	39f0 <elf_fill@@ELFUTILS_1.0+0x24>
    47ac:	and	w1, w0, #0xffff
    47b0:	ldr	x0, [sp, #104]
    47b4:	strh	w1, [x0, #176]
    47b8:	ldr	x0, [sp, #104]
    47bc:	ldrh	w0, [x0, #178]
    47c0:	bl	39f0 <elf_fill@@ELFUTILS_1.0+0x24>
    47c4:	and	w1, w0, #0xffff
    47c8:	ldr	x0, [sp, #104]
    47cc:	strh	w1, [x0, #178]
    47d0:	ldr	x0, [sp, #104]
    47d4:	ldrh	w0, [x0, #180]
    47d8:	bl	39f0 <elf_fill@@ELFUTILS_1.0+0x24>
    47dc:	and	w1, w0, #0xffff
    47e0:	ldr	x0, [sp, #104]
    47e4:	strh	w1, [x0, #180]
    47e8:	ldr	x0, [sp, #104]
    47ec:	ldrh	w0, [x0, #182]
    47f0:	bl	39f0 <elf_fill@@ELFUTILS_1.0+0x24>
    47f4:	and	w1, w0, #0xffff
    47f8:	ldr	x0, [sp, #104]
    47fc:	strh	w1, [x0, #182]
    4800:	ldr	x0, [sp, #104]
    4804:	ldrh	w0, [x0, #184]
    4808:	bl	39f0 <elf_fill@@ELFUTILS_1.0+0x24>
    480c:	and	w1, w0, #0xffff
    4810:	ldr	x0, [sp, #104]
    4814:	strh	w1, [x0, #184]
    4818:	ldr	x0, [sp, #104]
    481c:	ldrh	w0, [x0, #186]
    4820:	bl	39f0 <elf_fill@@ELFUTILS_1.0+0x24>
    4824:	and	w1, w0, #0xffff
    4828:	ldr	x0, [sp, #104]
    482c:	strh	w1, [x0, #186]
    4830:	ldr	x0, [sp, #104]
    4834:	ldr	x0, [x0, #72]
    4838:	ldr	w0, [x0, #32]
    483c:	str	w0, [sp, #76]
    4840:	ldr	x0, [sp, #48]
    4844:	cmp	x0, #0x0
    4848:	b.eq	4ca0 <elf_fill@@ELFUTILS_1.0+0x12d4>  // b.none
    484c:	ldr	x0, [sp, #40]
    4850:	add	x0, x0, #0x5
    4854:	ldrb	w0, [x0]
    4858:	cmp	w0, #0x1
    485c:	b.ne	4ca0 <elf_fill@@ELFUTILS_1.0+0x12d4>  // b.any
    4860:	ldr	w0, [sp, #56]
    4864:	cmp	w0, #0x8
    4868:	b.eq	4ca0 <elf_fill@@ELFUTILS_1.0+0x12d4>  // b.none
    486c:	ldr	w0, [sp, #76]
    4870:	ldr	x1, [sp, #80]
    4874:	add	x0, x1, x0
    4878:	and	x0, x0, #0x3
    487c:	cmp	x0, #0x0
    4880:	b.ne	4ca0 <elf_fill@@ELFUTILS_1.0+0x12d4>  // b.any
    4884:	ldr	x0, [sp, #120]
    4888:	cmp	x0, #0x0
    488c:	cset	w0, ne  // ne = any
    4890:	and	w0, w0, #0xff
    4894:	and	x0, x0, #0xff
    4898:	cmp	x0, #0x0
    489c:	b.eq	48c0 <elf_fill@@ELFUTILS_1.0+0xef4>  // b.none
    48a0:	ldr	w0, [sp, #76]
    48a4:	ldr	x1, [sp, #24]
    48a8:	cmp	x1, x0
    48ac:	cset	w0, ls  // ls = plast
    48b0:	and	w0, w0, #0xff
    48b4:	and	x0, x0, #0xff
    48b8:	cmp	x0, #0x0
    48bc:	b.ne	48f8 <elf_fill@@ELFUTILS_1.0+0xf2c>  // b.any
    48c0:	ldr	w0, [sp, #76]
    48c4:	ldr	x1, [sp, #24]
    48c8:	sub	x2, x1, x0
    48cc:	ldr	x1, [sp, #120]
    48d0:	mov	x0, x1
    48d4:	lsl	x0, x0, #2
    48d8:	add	x0, x0, x1
    48dc:	lsl	x0, x0, #3
    48e0:	cmp	x2, x0
    48e4:	cset	w0, cc  // cc = lo, ul, last
    48e8:	and	w0, w0, #0xff
    48ec:	and	x0, x0, #0xff
    48f0:	cmp	x0, #0x0
    48f4:	b.eq	491c <elf_fill@@ELFUTILS_1.0+0xf50>  // b.none
    48f8:	nop
    48fc:	b	4904 <elf_fill@@ELFUTILS_1.0+0xf38>
    4900:	nop
    4904:	ldr	x0, [sp, #104]
    4908:	bl	32a0 <free@plt>
    490c:	mov	w0, #0xa                   	// #10
    4910:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    4914:	mov	x0, #0x0                   	// #0
    4918:	b	53b4 <elf_fill@@ELFUTILS_1.0+0x19e8>
    491c:	ldr	w0, [sp, #76]
    4920:	ldr	x1, [sp, #80]
    4924:	add	x1, x1, x0
    4928:	ldr	x0, [sp, #104]
    492c:	str	x1, [x0, #80]
    4930:	str	xzr, [sp, #152]
    4934:	b	4c8c <elf_fill@@ELFUTILS_1.0+0x12c0>
    4938:	ldr	x2, [sp, #104]
    493c:	ldr	x1, [sp, #152]
    4940:	mov	x0, x1
    4944:	lsl	x0, x0, #1
    4948:	add	x0, x0, x1
    494c:	lsl	x0, x0, #2
    4950:	add	x0, x0, x1
    4954:	lsl	x0, x0, #4
    4958:	add	x0, x2, x0
    495c:	ldr	x1, [sp, #152]
    4960:	str	x1, [x0, #344]
    4964:	ldr	x2, [sp, #104]
    4968:	ldr	x1, [sp, #152]
    496c:	mov	x0, x1
    4970:	lsl	x0, x0, #1
    4974:	add	x0, x0, x1
    4978:	lsl	x0, x0, #2
    497c:	add	x0, x0, x1
    4980:	lsl	x0, x0, #4
    4984:	add	x0, x2, x0
    4988:	ldr	x1, [sp, #104]
    498c:	str	x1, [x0, #352]
    4990:	ldr	x0, [sp, #104]
    4994:	ldr	x2, [x0, #80]
    4998:	ldr	x1, [sp, #152]
    499c:	mov	x0, x1
    49a0:	lsl	x0, x0, #2
    49a4:	add	x0, x0, x1
    49a8:	lsl	x0, x0, #3
    49ac:	add	x2, x2, x0
    49b0:	ldr	x3, [sp, #104]
    49b4:	ldr	x1, [sp, #152]
    49b8:	mov	x0, x1
    49bc:	lsl	x0, x0, #1
    49c0:	add	x0, x0, x1
    49c4:	lsl	x0, x0, #2
    49c8:	add	x0, x0, x1
    49cc:	lsl	x0, x0, #4
    49d0:	add	x0, x3, x0
    49d4:	str	x2, [x0, #360]
    49d8:	ldr	x0, [sp, #104]
    49dc:	ldr	x2, [x0, #80]
    49e0:	ldr	x1, [sp, #152]
    49e4:	mov	x0, x1
    49e8:	lsl	x0, x0, #2
    49ec:	add	x0, x0, x1
    49f0:	lsl	x0, x0, #3
    49f4:	add	x0, x2, x0
    49f8:	ldr	w0, [x0, #16]
    49fc:	mov	w0, w0
    4a00:	ldr	x1, [sp, #24]
    4a04:	cmp	x1, x0
    4a08:	cset	w0, hi  // hi = pmore
    4a0c:	and	w0, w0, #0xff
    4a10:	and	x0, x0, #0xff
    4a14:	cmp	x0, #0x0
    4a18:	b.eq	4b3c <elf_fill@@ELFUTILS_1.0+0x1170>  // b.none
    4a1c:	ldr	x0, [sp, #104]
    4a20:	ldr	x2, [x0, #80]
    4a24:	ldr	x1, [sp, #152]
    4a28:	mov	x0, x1
    4a2c:	lsl	x0, x0, #2
    4a30:	add	x0, x0, x1
    4a34:	lsl	x0, x0, #3
    4a38:	add	x0, x2, x0
    4a3c:	ldr	w0, [x0, #20]
    4a40:	mov	w2, w0
    4a44:	ldr	x0, [sp, #104]
    4a48:	ldr	x3, [x0, #80]
    4a4c:	ldr	x1, [sp, #152]
    4a50:	mov	x0, x1
    4a54:	lsl	x0, x0, #2
    4a58:	add	x0, x0, x1
    4a5c:	lsl	x0, x0, #3
    4a60:	add	x0, x3, x0
    4a64:	ldr	w0, [x0, #16]
    4a68:	mov	w0, w0
    4a6c:	ldr	x1, [sp, #24]
    4a70:	sub	x0, x1, x0
    4a74:	cmp	x2, x0
    4a78:	cset	w0, ls  // ls = plast
    4a7c:	and	w0, w0, #0xff
    4a80:	and	x0, x0, #0xff
    4a84:	cmp	x0, #0x0
    4a88:	b.eq	4b3c <elf_fill@@ELFUTILS_1.0+0x1170>  // b.none
    4a8c:	ldr	x0, [sp, #104]
    4a90:	ldr	x2, [x0, #80]
    4a94:	ldr	x1, [sp, #152]
    4a98:	mov	x0, x1
    4a9c:	lsl	x0, x0, #2
    4aa0:	add	x0, x0, x1
    4aa4:	lsl	x0, x0, #3
    4aa8:	add	x0, x2, x0
    4aac:	ldr	w0, [x0, #16]
    4ab0:	mov	w1, w0
    4ab4:	ldr	x0, [sp, #32]
    4ab8:	add	x0, x1, x0
    4abc:	ldr	x1, [sp, #48]
    4ac0:	add	x2, x1, x0
    4ac4:	ldr	x3, [sp, #104]
    4ac8:	ldr	x1, [sp, #152]
    4acc:	mov	x0, x1
    4ad0:	lsl	x0, x0, #1
    4ad4:	add	x0, x0, x1
    4ad8:	lsl	x0, x0, #2
    4adc:	add	x0, x0, x1
    4ae0:	lsl	x0, x0, #4
    4ae4:	add	x0, x3, x0
    4ae8:	str	x2, [x0, #384]
    4aec:	ldr	x2, [sp, #104]
    4af0:	ldr	x1, [sp, #152]
    4af4:	mov	x0, x1
    4af8:	lsl	x0, x0, #1
    4afc:	add	x0, x0, x1
    4b00:	lsl	x0, x0, #2
    4b04:	add	x0, x0, x1
    4b08:	lsl	x0, x0, #4
    4b0c:	add	x0, x2, x0
    4b10:	ldr	x2, [x0, #384]
    4b14:	ldr	x3, [sp, #104]
    4b18:	ldr	x1, [sp, #152]
    4b1c:	mov	x0, x1
    4b20:	lsl	x0, x0, #1
    4b24:	add	x0, x0, x1
    4b28:	lsl	x0, x0, #2
    4b2c:	add	x0, x0, x1
    4b30:	lsl	x0, x0, #4
    4b34:	add	x0, x3, x0
    4b38:	str	x2, [x0, #376]
    4b3c:	ldr	x0, [sp, #104]
    4b40:	add	x2, x0, #0xc8
    4b44:	ldr	x3, [sp, #104]
    4b48:	ldr	x0, [sp, #152]
    4b4c:	add	x1, x0, #0x1
    4b50:	mov	x0, x1
    4b54:	lsl	x0, x0, #1
    4b58:	add	x0, x0, x1
    4b5c:	lsl	x0, x0, #2
    4b60:	add	x0, x0, x1
    4b64:	lsl	x0, x0, #4
    4b68:	add	x0, x3, x0
    4b6c:	str	x2, [x0, #208]
    4b70:	ldr	x0, [sp, #104]
    4b74:	ldr	x2, [x0, #80]
    4b78:	ldr	x1, [sp, #152]
    4b7c:	mov	x0, x1
    4b80:	lsl	x0, x0, #2
    4b84:	add	x0, x0, x1
    4b88:	lsl	x0, x0, #3
    4b8c:	add	x0, x2, x0
    4b90:	ldr	w0, [x0, #4]
    4b94:	cmp	w0, #0x12
    4b98:	b.ne	4c24 <elf_fill@@ELFUTILS_1.0+0x1258>  // b.any
    4b9c:	ldr	x0, [sp, #104]
    4ba0:	ldr	x2, [x0, #80]
    4ba4:	ldr	x1, [sp, #152]
    4ba8:	mov	x0, x1
    4bac:	lsl	x0, x0, #2
    4bb0:	add	x0, x0, x1
    4bb4:	lsl	x0, x0, #3
    4bb8:	add	x0, x2, x0
    4bbc:	ldr	w0, [x0, #24]
    4bc0:	mov	w0, w0
    4bc4:	ldr	x1, [sp, #120]
    4bc8:	cmp	x1, x0
    4bcc:	b.ls	4c24 <elf_fill@@ELFUTILS_1.0+0x1258>  // b.plast
    4bd0:	ldr	x0, [sp, #104]
    4bd4:	ldr	x2, [x0, #80]
    4bd8:	ldr	x1, [sp, #152]
    4bdc:	mov	x0, x1
    4be0:	lsl	x0, x0, #2
    4be4:	add	x0, x0, x1
    4be8:	lsl	x0, x0, #3
    4bec:	add	x0, x2, x0
    4bf0:	ldr	w0, [x0, #24]
    4bf4:	ldr	x1, [sp, #152]
    4bf8:	mov	w3, w1
    4bfc:	ldr	x2, [sp, #104]
    4c00:	mov	w1, w0
    4c04:	mov	x0, x1
    4c08:	lsl	x0, x0, #1
    4c0c:	add	x0, x0, x1
    4c10:	lsl	x0, x0, #2
    4c14:	add	x0, x0, x1
    4c18:	lsl	x0, x0, #4
    4c1c:	add	x0, x2, x0
    4c20:	str	w3, [x0, #340]
    4c24:	ldr	x2, [sp, #104]
    4c28:	ldr	x1, [sp, #152]
    4c2c:	mov	x0, x1
    4c30:	lsl	x0, x0, #1
    4c34:	add	x0, x0, x1
    4c38:	lsl	x0, x0, #2
    4c3c:	add	x0, x0, x1
    4c40:	lsl	x0, x0, #4
    4c44:	add	x0, x2, x0
    4c48:	ldr	w0, [x0, #340]
    4c4c:	cmp	w0, #0x0
    4c50:	b.ne	4c80 <elf_fill@@ELFUTILS_1.0+0x12b4>  // b.any
    4c54:	ldr	x2, [sp, #104]
    4c58:	ldr	x1, [sp, #152]
    4c5c:	mov	x0, x1
    4c60:	lsl	x0, x0, #1
    4c64:	add	x0, x0, x1
    4c68:	lsl	x0, x0, #2
    4c6c:	add	x0, x0, x1
    4c70:	lsl	x0, x0, #4
    4c74:	add	x0, x2, x0
    4c78:	mov	w1, #0xffffffff            	// #-1
    4c7c:	str	w1, [x0, #340]
    4c80:	ldr	x0, [sp, #152]
    4c84:	add	x0, x0, #0x1
    4c88:	str	x0, [sp, #152]
    4c8c:	ldr	x1, [sp, #152]
    4c90:	ldr	x0, [sp, #120]
    4c94:	cmp	x1, x0
    4c98:	b.cc	4938 <elf_fill@@ELFUTILS_1.0+0xf6c>  // b.lo, b.ul, b.last
    4c9c:	b	4d50 <elf_fill@@ELFUTILS_1.0+0x1384>
    4ca0:	str	xzr, [sp, #144]
    4ca4:	b	4d40 <elf_fill@@ELFUTILS_1.0+0x1374>
    4ca8:	ldr	x2, [sp, #104]
    4cac:	ldr	x1, [sp, #144]
    4cb0:	mov	x0, x1
    4cb4:	lsl	x0, x0, #1
    4cb8:	add	x0, x0, x1
    4cbc:	lsl	x0, x0, #2
    4cc0:	add	x0, x0, x1
    4cc4:	lsl	x0, x0, #4
    4cc8:	add	x0, x2, x0
    4ccc:	ldr	x1, [sp, #144]
    4cd0:	str	x1, [x0, #344]
    4cd4:	ldr	x2, [sp, #104]
    4cd8:	ldr	x1, [sp, #144]
    4cdc:	mov	x0, x1
    4ce0:	lsl	x0, x0, #1
    4ce4:	add	x0, x0, x1
    4ce8:	lsl	x0, x0, #2
    4cec:	add	x0, x0, x1
    4cf0:	lsl	x0, x0, #4
    4cf4:	add	x0, x2, x0
    4cf8:	ldr	x1, [sp, #104]
    4cfc:	str	x1, [x0, #352]
    4d00:	ldr	x0, [sp, #104]
    4d04:	add	x2, x0, #0xc8
    4d08:	ldr	x3, [sp, #104]
    4d0c:	ldr	x0, [sp, #144]
    4d10:	add	x1, x0, #0x1
    4d14:	mov	x0, x1
    4d18:	lsl	x0, x0, #1
    4d1c:	add	x0, x0, x1
    4d20:	lsl	x0, x0, #2
    4d24:	add	x0, x0, x1
    4d28:	lsl	x0, x0, #4
    4d2c:	add	x0, x3, x0
    4d30:	str	x2, [x0, #208]
    4d34:	ldr	x0, [sp, #144]
    4d38:	add	x0, x0, #0x1
    4d3c:	str	x0, [sp, #144]
    4d40:	ldr	x1, [sp, #144]
    4d44:	ldr	x0, [sp, #120]
    4d48:	cmp	x1, x0
    4d4c:	b.cc	4ca8 <elf_fill@@ELFUTILS_1.0+0x12dc>  // b.lo, b.ul, b.last
    4d50:	ldr	x0, [sp, #104]
    4d54:	add	x1, x0, #0xc8
    4d58:	ldr	x0, [sp, #104]
    4d5c:	str	x1, [x0, #96]
    4d60:	b	53b0 <elf_fill@@ELFUTILS_1.0+0x19e4>
    4d64:	ldr	x0, [sp, #32]
    4d68:	ldr	x1, [sp, #48]
    4d6c:	add	x0, x1, x0
    4d70:	str	x0, [sp, #96]
    4d74:	ldr	x0, [sp, #48]
    4d78:	cmp	x0, #0x0
    4d7c:	b.eq	4db4 <elf_fill@@ELFUTILS_1.0+0x13e8>  // b.none
    4d80:	ldr	x0, [sp, #40]
    4d84:	add	x0, x0, #0x5
    4d88:	ldrb	w0, [x0]
    4d8c:	cmp	w0, #0x1
    4d90:	b.ne	4db4 <elf_fill@@ELFUTILS_1.0+0x13e8>  // b.any
    4d94:	ldr	x0, [sp, #96]
    4d98:	and	x0, x0, #0x7
    4d9c:	cmp	x0, #0x0
    4da0:	b.ne	4db4 <elf_fill@@ELFUTILS_1.0+0x13e8>  // b.any
    4da4:	ldr	x0, [sp, #104]
    4da8:	ldr	x1, [sp, #96]
    4dac:	str	x1, [x0, #72]
    4db0:	b	4f20 <elf_fill@@ELFUTILS_1.0+0x1554>
    4db4:	ldr	x0, [sp, #104]
    4db8:	add	x0, x0, #0x88
    4dbc:	mov	x2, #0x40                  	// #64
    4dc0:	ldr	x1, [sp, #40]
    4dc4:	bl	30a0 <memcpy@plt>
    4dc8:	mov	x1, x0
    4dcc:	ldr	x0, [sp, #104]
    4dd0:	str	x1, [x0, #72]
    4dd4:	ldr	x0, [sp, #40]
    4dd8:	add	x0, x0, #0x5
    4ddc:	ldrb	w0, [x0]
    4de0:	cmp	w0, #0x1
    4de4:	b.eq	4f20 <elf_fill@@ELFUTILS_1.0+0x1554>  // b.none
    4de8:	ldr	x0, [sp, #104]
    4dec:	ldrh	w0, [x0, #152]
    4df0:	bl	39f0 <elf_fill@@ELFUTILS_1.0+0x24>
    4df4:	and	w1, w0, #0xffff
    4df8:	ldr	x0, [sp, #104]
    4dfc:	strh	w1, [x0, #152]
    4e00:	ldr	x0, [sp, #104]
    4e04:	ldrh	w0, [x0, #154]
    4e08:	bl	39f0 <elf_fill@@ELFUTILS_1.0+0x24>
    4e0c:	and	w1, w0, #0xffff
    4e10:	ldr	x0, [sp, #104]
    4e14:	strh	w1, [x0, #154]
    4e18:	ldr	x0, [sp, #104]
    4e1c:	ldr	w0, [x0, #156]
    4e20:	bl	3a0c <elf_fill@@ELFUTILS_1.0+0x40>
    4e24:	mov	w1, w0
    4e28:	ldr	x0, [sp, #104]
    4e2c:	str	w1, [x0, #156]
    4e30:	ldr	x0, [sp, #104]
    4e34:	ldr	x0, [x0, #160]
    4e38:	bl	3a24 <elf_fill@@ELFUTILS_1.0+0x58>
    4e3c:	mov	x1, x0
    4e40:	ldr	x0, [sp, #104]
    4e44:	str	x1, [x0, #160]
    4e48:	ldr	x0, [sp, #104]
    4e4c:	ldr	x0, [x0, #168]
    4e50:	bl	3a24 <elf_fill@@ELFUTILS_1.0+0x58>
    4e54:	mov	x1, x0
    4e58:	ldr	x0, [sp, #104]
    4e5c:	str	x1, [x0, #168]
    4e60:	ldr	x0, [sp, #104]
    4e64:	ldr	x0, [x0, #176]
    4e68:	bl	3a24 <elf_fill@@ELFUTILS_1.0+0x58>
    4e6c:	mov	x1, x0
    4e70:	ldr	x0, [sp, #104]
    4e74:	str	x1, [x0, #176]
    4e78:	ldr	x0, [sp, #104]
    4e7c:	ldr	w0, [x0, #184]
    4e80:	bl	3a0c <elf_fill@@ELFUTILS_1.0+0x40>
    4e84:	mov	w1, w0
    4e88:	ldr	x0, [sp, #104]
    4e8c:	str	w1, [x0, #184]
    4e90:	ldr	x0, [sp, #104]
    4e94:	ldrh	w0, [x0, #188]
    4e98:	bl	39f0 <elf_fill@@ELFUTILS_1.0+0x24>
    4e9c:	and	w1, w0, #0xffff
    4ea0:	ldr	x0, [sp, #104]
    4ea4:	strh	w1, [x0, #188]
    4ea8:	ldr	x0, [sp, #104]
    4eac:	ldrh	w0, [x0, #190]
    4eb0:	bl	39f0 <elf_fill@@ELFUTILS_1.0+0x24>
    4eb4:	and	w1, w0, #0xffff
    4eb8:	ldr	x0, [sp, #104]
    4ebc:	strh	w1, [x0, #190]
    4ec0:	ldr	x0, [sp, #104]
    4ec4:	ldrh	w0, [x0, #192]
    4ec8:	bl	39f0 <elf_fill@@ELFUTILS_1.0+0x24>
    4ecc:	and	w1, w0, #0xffff
    4ed0:	ldr	x0, [sp, #104]
    4ed4:	strh	w1, [x0, #192]
    4ed8:	ldr	x0, [sp, #104]
    4edc:	ldrh	w0, [x0, #194]
    4ee0:	bl	39f0 <elf_fill@@ELFUTILS_1.0+0x24>
    4ee4:	and	w1, w0, #0xffff
    4ee8:	ldr	x0, [sp, #104]
    4eec:	strh	w1, [x0, #194]
    4ef0:	ldr	x0, [sp, #104]
    4ef4:	ldrh	w0, [x0, #196]
    4ef8:	bl	39f0 <elf_fill@@ELFUTILS_1.0+0x24>
    4efc:	and	w1, w0, #0xffff
    4f00:	ldr	x0, [sp, #104]
    4f04:	strh	w1, [x0, #196]
    4f08:	ldr	x0, [sp, #104]
    4f0c:	ldrh	w0, [x0, #198]
    4f10:	bl	39f0 <elf_fill@@ELFUTILS_1.0+0x24>
    4f14:	and	w1, w0, #0xffff
    4f18:	ldr	x0, [sp, #104]
    4f1c:	strh	w1, [x0, #198]
    4f20:	ldr	x0, [sp, #104]
    4f24:	ldr	x0, [x0, #72]
    4f28:	ldr	x0, [x0, #40]
    4f2c:	str	x0, [sp, #88]
    4f30:	ldr	x0, [sp, #48]
    4f34:	cmp	x0, #0x0
    4f38:	b.eq	52f0 <elf_fill@@ELFUTILS_1.0+0x1924>  // b.none
    4f3c:	ldr	x0, [sp, #40]
    4f40:	add	x0, x0, #0x5
    4f44:	ldrb	w0, [x0]
    4f48:	cmp	w0, #0x1
    4f4c:	b.ne	52f0 <elf_fill@@ELFUTILS_1.0+0x1924>  // b.any
    4f50:	ldr	w0, [sp, #56]
    4f54:	cmp	w0, #0x8
    4f58:	b.eq	52f0 <elf_fill@@ELFUTILS_1.0+0x1924>  // b.none
    4f5c:	ldr	x1, [sp, #96]
    4f60:	ldr	x0, [sp, #88]
    4f64:	add	x0, x1, x0
    4f68:	and	x0, x0, #0x7
    4f6c:	cmp	x0, #0x0
    4f70:	b.ne	52f0 <elf_fill@@ELFUTILS_1.0+0x1924>  // b.any
    4f74:	ldr	x0, [sp, #120]
    4f78:	cmp	x0, #0x0
    4f7c:	cset	w0, ne  // ne = any
    4f80:	and	w0, w0, #0xff
    4f84:	and	x0, x0, #0xff
    4f88:	cmp	x0, #0x0
    4f8c:	b.eq	4fb0 <elf_fill@@ELFUTILS_1.0+0x15e4>  // b.none
    4f90:	ldr	x1, [sp, #88]
    4f94:	ldr	x0, [sp, #24]
    4f98:	cmp	x1, x0
    4f9c:	cset	w0, cs  // cs = hs, nlast
    4fa0:	and	w0, w0, #0xff
    4fa4:	and	x0, x0, #0xff
    4fa8:	cmp	x0, #0x0
    4fac:	b.ne	4900 <elf_fill@@ELFUTILS_1.0+0xf34>  // b.any
    4fb0:	ldr	x1, [sp, #24]
    4fb4:	ldr	x0, [sp, #88]
    4fb8:	sub	x1, x1, x0
    4fbc:	ldr	x0, [sp, #120]
    4fc0:	lsl	x0, x0, #6
    4fc4:	cmp	x1, x0
    4fc8:	cset	w0, cc  // cc = lo, ul, last
    4fcc:	and	w0, w0, #0xff
    4fd0:	and	x0, x0, #0xff
    4fd4:	cmp	x0, #0x0
    4fd8:	b.ne	4900 <elf_fill@@ELFUTILS_1.0+0xf34>  // b.any
    4fdc:	ldr	x1, [sp, #96]
    4fe0:	ldr	x0, [sp, #88]
    4fe4:	add	x1, x1, x0
    4fe8:	ldr	x0, [sp, #104]
    4fec:	str	x1, [x0, #80]
    4ff0:	str	xzr, [sp, #136]
    4ff4:	b	52dc <elf_fill@@ELFUTILS_1.0+0x1910>
    4ff8:	ldr	x2, [sp, #104]
    4ffc:	ldr	x1, [sp, #136]
    5000:	mov	x0, x1
    5004:	lsl	x0, x0, #1
    5008:	add	x0, x0, x1
    500c:	lsl	x0, x0, #2
    5010:	add	x0, x0, x1
    5014:	lsl	x0, x0, #4
    5018:	add	x0, x2, x0
    501c:	ldr	x1, [sp, #136]
    5020:	str	x1, [x0, #344]
    5024:	ldr	x2, [sp, #104]
    5028:	ldr	x1, [sp, #136]
    502c:	mov	x0, x1
    5030:	lsl	x0, x0, #1
    5034:	add	x0, x0, x1
    5038:	lsl	x0, x0, #2
    503c:	add	x0, x0, x1
    5040:	lsl	x0, x0, #4
    5044:	add	x0, x2, x0
    5048:	ldr	x1, [sp, #104]
    504c:	str	x1, [x0, #352]
    5050:	ldr	x0, [sp, #104]
    5054:	ldr	x1, [x0, #80]
    5058:	ldr	x0, [sp, #136]
    505c:	lsl	x0, x0, #6
    5060:	add	x2, x1, x0
    5064:	ldr	x3, [sp, #104]
    5068:	ldr	x1, [sp, #136]
    506c:	mov	x0, x1
    5070:	lsl	x0, x0, #1
    5074:	add	x0, x0, x1
    5078:	lsl	x0, x0, #2
    507c:	add	x0, x0, x1
    5080:	lsl	x0, x0, #4
    5084:	add	x0, x3, x0
    5088:	str	x2, [x0, #360]
    508c:	ldr	x0, [sp, #104]
    5090:	ldr	x1, [x0, #80]
    5094:	ldr	x0, [sp, #136]
    5098:	lsl	x0, x0, #6
    509c:	add	x0, x1, x0
    50a0:	ldr	x0, [x0, #24]
    50a4:	ldr	x1, [sp, #24]
    50a8:	cmp	x1, x0
    50ac:	cset	w0, hi  // hi = pmore
    50b0:	and	w0, w0, #0xff
    50b4:	and	x0, x0, #0xff
    50b8:	cmp	x0, #0x0
    50bc:	b.eq	51b0 <elf_fill@@ELFUTILS_1.0+0x17e4>  // b.none
    50c0:	ldr	x0, [sp, #104]
    50c4:	ldr	x1, [x0, #80]
    50c8:	ldr	x0, [sp, #136]
    50cc:	lsl	x0, x0, #6
    50d0:	add	x0, x1, x0
    50d4:	ldr	x1, [x0, #32]
    50d8:	ldr	x0, [sp, #104]
    50dc:	ldr	x2, [x0, #80]
    50e0:	ldr	x0, [sp, #136]
    50e4:	lsl	x0, x0, #6
    50e8:	add	x0, x2, x0
    50ec:	ldr	x0, [x0, #24]
    50f0:	ldr	x2, [sp, #24]
    50f4:	sub	x0, x2, x0
    50f8:	cmp	x1, x0
    50fc:	cset	w0, ls  // ls = plast
    5100:	and	w0, w0, #0xff
    5104:	and	x0, x0, #0xff
    5108:	cmp	x0, #0x0
    510c:	b.eq	51b0 <elf_fill@@ELFUTILS_1.0+0x17e4>  // b.none
    5110:	ldr	x0, [sp, #104]
    5114:	ldr	x1, [x0, #80]
    5118:	ldr	x0, [sp, #136]
    511c:	lsl	x0, x0, #6
    5120:	add	x0, x1, x0
    5124:	ldr	x1, [x0, #24]
    5128:	ldr	x0, [sp, #32]
    512c:	add	x0, x1, x0
    5130:	ldr	x1, [sp, #48]
    5134:	add	x2, x1, x0
    5138:	ldr	x3, [sp, #104]
    513c:	ldr	x1, [sp, #136]
    5140:	mov	x0, x1
    5144:	lsl	x0, x0, #1
    5148:	add	x0, x0, x1
    514c:	lsl	x0, x0, #2
    5150:	add	x0, x0, x1
    5154:	lsl	x0, x0, #4
    5158:	add	x0, x3, x0
    515c:	str	x2, [x0, #384]
    5160:	ldr	x2, [sp, #104]
    5164:	ldr	x1, [sp, #136]
    5168:	mov	x0, x1
    516c:	lsl	x0, x0, #1
    5170:	add	x0, x0, x1
    5174:	lsl	x0, x0, #2
    5178:	add	x0, x0, x1
    517c:	lsl	x0, x0, #4
    5180:	add	x0, x2, x0
    5184:	ldr	x2, [x0, #384]
    5188:	ldr	x3, [sp, #104]
    518c:	ldr	x1, [sp, #136]
    5190:	mov	x0, x1
    5194:	lsl	x0, x0, #1
    5198:	add	x0, x0, x1
    519c:	lsl	x0, x0, #2
    51a0:	add	x0, x0, x1
    51a4:	lsl	x0, x0, #4
    51a8:	add	x0, x3, x0
    51ac:	str	x2, [x0, #376]
    51b0:	ldr	x0, [sp, #104]
    51b4:	add	x2, x0, #0xc8
    51b8:	ldr	x3, [sp, #104]
    51bc:	ldr	x0, [sp, #136]
    51c0:	add	x1, x0, #0x1
    51c4:	mov	x0, x1
    51c8:	lsl	x0, x0, #1
    51cc:	add	x0, x0, x1
    51d0:	lsl	x0, x0, #2
    51d4:	add	x0, x0, x1
    51d8:	lsl	x0, x0, #4
    51dc:	add	x0, x3, x0
    51e0:	str	x2, [x0, #208]
    51e4:	ldr	x0, [sp, #104]
    51e8:	ldr	x1, [x0, #80]
    51ec:	ldr	x0, [sp, #136]
    51f0:	lsl	x0, x0, #6
    51f4:	add	x0, x1, x0
    51f8:	ldr	w0, [x0, #4]
    51fc:	cmp	w0, #0x12
    5200:	b.ne	5274 <elf_fill@@ELFUTILS_1.0+0x18a8>  // b.any
    5204:	ldr	x0, [sp, #104]
    5208:	ldr	x1, [x0, #80]
    520c:	ldr	x0, [sp, #136]
    5210:	lsl	x0, x0, #6
    5214:	add	x0, x1, x0
    5218:	ldr	w0, [x0, #40]
    521c:	mov	w0, w0
    5220:	ldr	x1, [sp, #120]
    5224:	cmp	x1, x0
    5228:	b.ls	5274 <elf_fill@@ELFUTILS_1.0+0x18a8>  // b.plast
    522c:	ldr	x0, [sp, #104]
    5230:	ldr	x1, [x0, #80]
    5234:	ldr	x0, [sp, #136]
    5238:	lsl	x0, x0, #6
    523c:	add	x0, x1, x0
    5240:	ldr	w0, [x0, #40]
    5244:	ldr	x1, [sp, #136]
    5248:	mov	w3, w1
    524c:	ldr	x2, [sp, #104]
    5250:	mov	w1, w0
    5254:	mov	x0, x1
    5258:	lsl	x0, x0, #1
    525c:	add	x0, x0, x1
    5260:	lsl	x0, x0, #2
    5264:	add	x0, x0, x1
    5268:	lsl	x0, x0, #4
    526c:	add	x0, x2, x0
    5270:	str	w3, [x0, #340]
    5274:	ldr	x2, [sp, #104]
    5278:	ldr	x1, [sp, #136]
    527c:	mov	x0, x1
    5280:	lsl	x0, x0, #1
    5284:	add	x0, x0, x1
    5288:	lsl	x0, x0, #2
    528c:	add	x0, x0, x1
    5290:	lsl	x0, x0, #4
    5294:	add	x0, x2, x0
    5298:	ldr	w0, [x0, #340]
    529c:	cmp	w0, #0x0
    52a0:	b.ne	52d0 <elf_fill@@ELFUTILS_1.0+0x1904>  // b.any
    52a4:	ldr	x2, [sp, #104]
    52a8:	ldr	x1, [sp, #136]
    52ac:	mov	x0, x1
    52b0:	lsl	x0, x0, #1
    52b4:	add	x0, x0, x1
    52b8:	lsl	x0, x0, #2
    52bc:	add	x0, x0, x1
    52c0:	lsl	x0, x0, #4
    52c4:	add	x0, x2, x0
    52c8:	mov	w1, #0xffffffff            	// #-1
    52cc:	str	w1, [x0, #340]
    52d0:	ldr	x0, [sp, #136]
    52d4:	add	x0, x0, #0x1
    52d8:	str	x0, [sp, #136]
    52dc:	ldr	x1, [sp, #136]
    52e0:	ldr	x0, [sp, #120]
    52e4:	cmp	x1, x0
    52e8:	b.cc	4ff8 <elf_fill@@ELFUTILS_1.0+0x162c>  // b.lo, b.ul, b.last
    52ec:	b	53a0 <elf_fill@@ELFUTILS_1.0+0x19d4>
    52f0:	str	xzr, [sp, #128]
    52f4:	b	5390 <elf_fill@@ELFUTILS_1.0+0x19c4>
    52f8:	ldr	x2, [sp, #104]
    52fc:	ldr	x1, [sp, #128]
    5300:	mov	x0, x1
    5304:	lsl	x0, x0, #1
    5308:	add	x0, x0, x1
    530c:	lsl	x0, x0, #2
    5310:	add	x0, x0, x1
    5314:	lsl	x0, x0, #4
    5318:	add	x0, x2, x0
    531c:	ldr	x1, [sp, #128]
    5320:	str	x1, [x0, #344]
    5324:	ldr	x2, [sp, #104]
    5328:	ldr	x1, [sp, #128]
    532c:	mov	x0, x1
    5330:	lsl	x0, x0, #1
    5334:	add	x0, x0, x1
    5338:	lsl	x0, x0, #2
    533c:	add	x0, x0, x1
    5340:	lsl	x0, x0, #4
    5344:	add	x0, x2, x0
    5348:	ldr	x1, [sp, #104]
    534c:	str	x1, [x0, #352]
    5350:	ldr	x0, [sp, #104]
    5354:	add	x2, x0, #0xc8
    5358:	ldr	x3, [sp, #104]
    535c:	ldr	x0, [sp, #128]
    5360:	add	x1, x0, #0x1
    5364:	mov	x0, x1
    5368:	lsl	x0, x0, #1
    536c:	add	x0, x0, x1
    5370:	lsl	x0, x0, #2
    5374:	add	x0, x0, x1
    5378:	lsl	x0, x0, #4
    537c:	add	x0, x3, x0
    5380:	str	x2, [x0, #208]
    5384:	ldr	x0, [sp, #128]
    5388:	add	x0, x0, #0x1
    538c:	str	x0, [sp, #128]
    5390:	ldr	x1, [sp, #128]
    5394:	ldr	x0, [sp, #120]
    5398:	cmp	x1, x0
    539c:	b.cc	52f8 <elf_fill@@ELFUTILS_1.0+0x192c>  // b.lo, b.ul, b.last
    53a0:	ldr	x0, [sp, #104]
    53a4:	add	x1, x0, #0xc8
    53a8:	ldr	x0, [sp, #104]
    53ac:	str	x1, [x0, #96]
    53b0:	ldr	x0, [sp, #104]
    53b4:	ldp	x29, x30, [sp], #160
    53b8:	ret
    53bc:	stp	x29, x30, [sp, #-80]!
    53c0:	mov	x29, sp
    53c4:	str	w0, [sp, #60]
    53c8:	str	x1, [sp, #48]
    53cc:	str	x2, [sp, #40]
    53d0:	str	x3, [sp, #32]
    53d4:	str	w4, [sp, #56]
    53d8:	str	x5, [sp, #24]
    53dc:	ldr	x0, [sp, #40]
    53e0:	ldr	x1, [sp, #48]
    53e4:	add	x0, x1, x0
    53e8:	str	x0, [sp, #72]
    53ec:	ldr	x1, [sp, #32]
    53f0:	ldr	x0, [sp, #72]
    53f4:	bl	3b08 <elf_fill@@ELFUTILS_1.0+0x13c>
    53f8:	str	w0, [sp, #68]
    53fc:	ldr	w0, [sp, #68]
    5400:	cmp	w0, #0x1
    5404:	b.eq	5438 <elf_fill@@ELFUTILS_1.0+0x1a6c>  // b.none
    5408:	ldr	w0, [sp, #68]
    540c:	cmp	w0, #0x3
    5410:	b.ne	5458 <elf_fill@@ELFUTILS_1.0+0x1a8c>  // b.any
    5414:	ldr	x6, [sp, #24]
    5418:	ldr	w5, [sp, #56]
    541c:	ldr	x4, [sp, #32]
    5420:	ldr	x3, [sp, #40]
    5424:	ldr	x2, [sp, #72]
    5428:	ldr	x1, [sp, #48]
    542c:	ldr	w0, [sp, #60]
    5430:	bl	43d8 <elf_fill@@ELFUTILS_1.0+0xa0c>
    5434:	b	5480 <elf_fill@@ELFUTILS_1.0+0x1ab4>
    5438:	ldr	x5, [sp, #24]
    543c:	ldr	w4, [sp, #56]
    5440:	ldr	x3, [sp, #32]
    5444:	ldr	x2, [sp, #40]
    5448:	ldr	x1, [sp, #48]
    544c:	ldr	w0, [sp, #60]
    5450:	bl	3d84 <elf_fill@@ELFUTILS_1.0+0x3b8>
    5454:	b	5480 <elf_fill@@ELFUTILS_1.0+0x1ab4>
    5458:	nop
    545c:	mov	x7, #0x0                   	// #0
    5460:	mov	w6, #0x0                   	// #0
    5464:	ldr	x5, [sp, #24]
    5468:	ldr	w4, [sp, #56]
    546c:	ldr	x3, [sp, #32]
    5470:	ldr	x2, [sp, #40]
    5474:	ldr	x1, [sp, #48]
    5478:	ldr	w0, [sp, #60]
    547c:	bl	3bf0 <elf_fill@@ELFUTILS_1.0+0x224>
    5480:	ldp	x29, x30, [sp], #80
    5484:	ret
    5488:	stp	x29, x30, [sp, #-128]!
    548c:	mov	x29, sp
    5490:	str	w0, [sp, #44]
    5494:	str	x1, [sp, #32]
    5498:	str	x2, [sp, #24]
    549c:	str	w3, [sp, #40]
    54a0:	str	x4, [sp, #16]
    54a4:	ldr	x2, [sp, #24]
    54a8:	ldr	x1, [sp, #24]
    54ac:	mov	x0, #0x40                  	// #64
    54b0:	cmp	x2, #0x40
    54b4:	csel	x1, x1, x0, ls  // ls = plast
    54b8:	add	x0, sp, #0x30
    54bc:	ldr	x3, [sp, #32]
    54c0:	mov	x2, x1
    54c4:	mov	x1, x0
    54c8:	ldr	w0, [sp, #44]
    54cc:	bl	3a3c <elf_fill@@ELFUTILS_1.0+0x70>
    54d0:	str	x0, [sp, #120]
    54d4:	ldr	x0, [sp, #120]
    54d8:	cmn	x0, #0x1
    54dc:	cset	w0, eq  // eq = none
    54e0:	and	w0, w0, #0xff
    54e4:	and	x0, x0, #0xff
    54e8:	cmp	x0, #0x0
    54ec:	b.eq	5500 <elf_fill@@ELFUTILS_1.0+0x1b34>  // b.none
    54f0:	mov	w0, #0x9                   	// #9
    54f4:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    54f8:	mov	x0, #0x0                   	// #0
    54fc:	b	55c0 <elf_fill@@ELFUTILS_1.0+0x1bf4>
    5500:	ldr	x1, [sp, #120]
    5504:	add	x0, sp, #0x30
    5508:	bl	3b08 <elf_fill@@ELFUTILS_1.0+0x13c>
    550c:	str	w0, [sp, #116]
    5510:	ldr	w0, [sp, #116]
    5514:	cmp	w0, #0x1
    5518:	b.eq	552c <elf_fill@@ELFUTILS_1.0+0x1b60>  // b.none
    551c:	ldr	w0, [sp, #116]
    5520:	cmp	w0, #0x3
    5524:	b.eq	554c <elf_fill@@ELFUTILS_1.0+0x1b80>  // b.none
    5528:	b	5598 <elf_fill@@ELFUTILS_1.0+0x1bcc>
    552c:	ldr	x5, [sp, #16]
    5530:	ldr	w4, [sp, #40]
    5534:	ldr	x3, [sp, #24]
    5538:	ldr	x2, [sp, #32]
    553c:	mov	x1, #0x0                   	// #0
    5540:	ldr	w0, [sp, #44]
    5544:	bl	3d84 <elf_fill@@ELFUTILS_1.0+0x3b8>
    5548:	b	55c0 <elf_fill@@ELFUTILS_1.0+0x1bf4>
    554c:	ldrb	w0, [sp, #52]
    5550:	cmp	w0, #0x1
    5554:	b.ne	5560 <elf_fill@@ELFUTILS_1.0+0x1b94>  // b.any
    5558:	mov	x0, #0x34                  	// #52
    555c:	b	5564 <elf_fill@@ELFUTILS_1.0+0x1b98>
    5560:	mov	x0, #0x40                  	// #64
    5564:	ldr	x1, [sp, #120]
    5568:	cmp	x0, x1
    556c:	b.hi	5598 <elf_fill@@ELFUTILS_1.0+0x1bcc>  // b.pmore
    5570:	add	x0, sp, #0x30
    5574:	ldr	x6, [sp, #16]
    5578:	ldr	w5, [sp, #40]
    557c:	ldr	x4, [sp, #24]
    5580:	ldr	x3, [sp, #32]
    5584:	mov	x2, x0
    5588:	mov	x1, #0x0                   	// #0
    558c:	ldr	w0, [sp, #44]
    5590:	bl	43d8 <elf_fill@@ELFUTILS_1.0+0xa0c>
    5594:	b	55c0 <elf_fill@@ELFUTILS_1.0+0x1bf4>
    5598:	nop
    559c:	mov	x7, #0x0                   	// #0
    55a0:	mov	w6, #0x0                   	// #0
    55a4:	ldr	x5, [sp, #16]
    55a8:	ldr	w4, [sp, #40]
    55ac:	ldr	x3, [sp, #24]
    55b0:	ldr	x2, [sp, #32]
    55b4:	mov	x1, #0x0                   	// #0
    55b8:	ldr	w0, [sp, #44]
    55bc:	bl	3bf0 <elf_fill@@ELFUTILS_1.0+0x224>
    55c0:	ldp	x29, x30, [sp], #128
    55c4:	ret
    55c8:	stp	x29, x30, [sp, #-208]!
    55cc:	mov	x29, sp
    55d0:	str	w0, [sp, #44]
    55d4:	str	x1, [sp, #32]
    55d8:	str	x2, [sp, #24]
    55dc:	str	w3, [sp, #40]
    55e0:	str	x4, [sp, #16]
    55e4:	str	xzr, [sp, #200]
    55e8:	ldr	w0, [sp, #40]
    55ec:	cmp	w0, #0x8
    55f0:	b.eq	5618 <elf_fill@@ELFUTILS_1.0+0x1c4c>  // b.none
    55f4:	ldr	w0, [sp, #40]
    55f8:	cmp	w0, #0x9
    55fc:	b.eq	5618 <elf_fill@@ELFUTILS_1.0+0x1c4c>  // b.none
    5600:	ldr	w0, [sp, #40]
    5604:	cmp	w0, #0xa
    5608:	b.eq	5618 <elf_fill@@ELFUTILS_1.0+0x1c4c>  // b.none
    560c:	ldr	w0, [sp, #40]
    5610:	cmp	w0, #0xb
    5614:	b.ne	5620 <elf_fill@@ELFUTILS_1.0+0x1c54>  // b.any
    5618:	mov	w0, #0x1                   	// #1
    561c:	b	5624 <elf_fill@@ELFUTILS_1.0+0x1c58>
    5620:	mov	w0, #0x0                   	// #0
    5624:	str	w0, [sp, #196]
    5628:	ldr	x0, [sp, #16]
    562c:	cmp	x0, #0x0
    5630:	b.ne	5664 <elf_fill@@ELFUTILS_1.0+0x1c98>  // b.any
    5634:	ldr	x0, [sp, #24]
    5638:	cmn	x0, #0x1
    563c:	b.ne	5690 <elf_fill@@ELFUTILS_1.0+0x1cc4>  // b.any
    5640:	add	x0, sp, #0x38
    5644:	mov	x1, x0
    5648:	ldr	w0, [sp, #44]
    564c:	bl	20af8 <elf_compress_gnu@@ELFUTILS_1.7+0x454>
    5650:	cmp	w0, #0x0
    5654:	b.ne	5690 <elf_fill@@ELFUTILS_1.0+0x1cc4>  // b.any
    5658:	ldr	x0, [sp, #104]
    565c:	str	x0, [sp, #24]
    5660:	b	5690 <elf_fill@@ELFUTILS_1.0+0x1cc4>
    5664:	ldr	x0, [sp, #24]
    5668:	cmn	x0, #0x1
    566c:	b.ne	5690 <elf_fill@@ELFUTILS_1.0+0x1cc4>  // b.any
    5670:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    5674:	add	x3, x0, #0x340
    5678:	mov	w2, #0x291                 	// #657
    567c:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    5680:	add	x1, x0, #0x258
    5684:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    5688:	add	x0, x0, #0x288
    568c:	bl	33d0 <__assert_fail@plt>
    5690:	ldr	w0, [sp, #196]
    5694:	cmp	w0, #0x0
    5698:	b.eq	5724 <elf_fill@@ELFUTILS_1.0+0x1d58>  // b.none
    569c:	ldr	x0, [sp, #16]
    56a0:	cmp	x0, #0x0
    56a4:	b.ne	5718 <elf_fill@@ELFUTILS_1.0+0x1d4c>  // b.any
    56a8:	ldr	w0, [sp, #40]
    56ac:	cmp	w0, #0x8
    56b0:	b.ne	56bc <elf_fill@@ELFUTILS_1.0+0x1cf0>  // b.any
    56b4:	mov	w0, #0x1                   	// #1
    56b8:	b	56c0 <elf_fill@@ELFUTILS_1.0+0x1cf4>
    56bc:	mov	w0, #0x3                   	// #3
    56c0:	ldr	w1, [sp, #40]
    56c4:	cmp	w1, #0xb
    56c8:	b.eq	56d8 <elf_fill@@ELFUTILS_1.0+0x1d0c>  // b.none
    56cc:	ldr	w1, [sp, #40]
    56d0:	cmp	w1, #0x8
    56d4:	b.ne	56e0 <elf_fill@@ELFUTILS_1.0+0x1d14>  // b.any
    56d8:	mov	w1, #0x2                   	// #2
    56dc:	b	56e4 <elf_fill@@ELFUTILS_1.0+0x1d18>
    56e0:	mov	w1, #0x1                   	// #1
    56e4:	ldr	x5, [sp, #32]
    56e8:	ldr	w4, [sp, #44]
    56ec:	mov	w3, w1
    56f0:	mov	w2, w0
    56f4:	ldr	x1, [sp, #24]
    56f8:	mov	x0, #0x0                   	// #0
    56fc:	bl	3280 <mmap@plt>
    5700:	str	x0, [sp, #200]
    5704:	ldr	x0, [sp, #200]
    5708:	cmn	x0, #0x1
    570c:	b.ne	5724 <elf_fill@@ELFUTILS_1.0+0x1d58>  // b.any
    5710:	str	xzr, [sp, #200]
    5714:	b	5724 <elf_fill@@ELFUTILS_1.0+0x1d58>
    5718:	ldr	x0, [sp, #16]
    571c:	ldr	x0, [x0]
    5720:	str	x0, [sp, #200]
    5724:	ldr	x0, [sp, #200]
    5728:	cmp	x0, #0x0
    572c:	b.eq	57e0 <elf_fill@@ELFUTILS_1.0+0x1e14>  // b.none
    5730:	ldr	x0, [sp, #200]
    5734:	cmn	x0, #0x1
    5738:	b.ne	575c <elf_fill@@ELFUTILS_1.0+0x1d90>  // b.any
    573c:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    5740:	add	x3, x0, #0x340
    5744:	mov	w2, #0x2ad                 	// #685
    5748:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    574c:	add	x1, x0, #0x258
    5750:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    5754:	add	x0, x0, #0x2a8
    5758:	bl	33d0 <__assert_fail@plt>
    575c:	ldr	x5, [sp, #16]
    5760:	ldr	w4, [sp, #40]
    5764:	ldr	x3, [sp, #24]
    5768:	ldr	x2, [sp, #32]
    576c:	ldr	x1, [sp, #200]
    5770:	ldr	w0, [sp, #44]
    5774:	bl	53bc <elf_fill@@ELFUTILS_1.0+0x19f0>
    5778:	str	x0, [sp, #184]
    577c:	ldr	x0, [sp, #184]
    5780:	cmp	x0, #0x0
    5784:	b.ne	57b8 <elf_fill@@ELFUTILS_1.0+0x1dec>  // b.any
    5788:	ldr	x0, [sp, #16]
    578c:	cmp	x0, #0x0
    5790:	b.eq	57a8 <elf_fill@@ELFUTILS_1.0+0x1ddc>  // b.none
    5794:	ldr	x0, [sp, #16]
    5798:	ldr	x0, [x0]
    579c:	ldr	x1, [sp, #200]
    57a0:	cmp	x1, x0
    57a4:	b.eq	57b8 <elf_fill@@ELFUTILS_1.0+0x1dec>  // b.none
    57a8:	ldr	x1, [sp, #24]
    57ac:	ldr	x0, [sp, #200]
    57b0:	bl	3350 <munmap@plt>
    57b4:	b	57d8 <elf_fill@@ELFUTILS_1.0+0x1e0c>
    57b8:	ldr	x0, [sp, #16]
    57bc:	cmp	x0, #0x0
    57c0:	b.ne	57d8 <elf_fill@@ELFUTILS_1.0+0x1e0c>  // b.any
    57c4:	ldr	x0, [sp, #184]
    57c8:	ldr	w0, [x0, #56]
    57cc:	orr	w1, w0, #0x40
    57d0:	ldr	x0, [sp, #184]
    57d4:	str	w1, [x0, #56]
    57d8:	ldr	x0, [sp, #184]
    57dc:	b	57f8 <elf_fill@@ELFUTILS_1.0+0x1e2c>
    57e0:	ldr	x4, [sp, #16]
    57e4:	ldr	w3, [sp, #40]
    57e8:	ldr	x2, [sp, #24]
    57ec:	ldr	x1, [sp, #32]
    57f0:	ldr	w0, [sp, #44]
    57f4:	bl	5488 <elf_fill@@ELFUTILS_1.0+0x1abc>
    57f8:	ldp	x29, x30, [sp], #208
    57fc:	ret
    5800:	stp	x29, x30, [sp, #-176]!
    5804:	mov	x29, sp
    5808:	str	x0, [sp, #24]
    580c:	mov	x0, #0x8                   	// #8
    5810:	str	x0, [sp, #168]
    5814:	ldr	x0, [sp, #24]
    5818:	ldr	x0, [x0]
    581c:	cmp	x0, #0x0
    5820:	b.eq	5870 <elf_fill@@ELFUTILS_1.0+0x1ea4>  // b.none
    5824:	ldr	x0, [sp, #24]
    5828:	ldr	x1, [x0, #48]
    582c:	ldr	x0, [sp, #168]
    5830:	cmp	x1, x0
    5834:	b.cc	5850 <elf_fill@@ELFUTILS_1.0+0x1e84>  // b.lo, b.ul, b.last
    5838:	ldr	x0, [sp, #24]
    583c:	ldr	x1, [x0, #48]
    5840:	ldr	x0, [sp, #168]
    5844:	sub	x0, x1, x0
    5848:	cmp	x0, #0x3b
    584c:	b.hi	5858 <elf_fill@@ELFUTILS_1.0+0x1e8c>  // b.pmore
    5850:	mov	x0, #0x0                   	// #0
    5854:	b	5b08 <elf_fill@@ELFUTILS_1.0+0x213c>
    5858:	ldr	x0, [sp, #24]
    585c:	ldr	x1, [x0]
    5860:	ldr	x0, [sp, #168]
    5864:	add	x0, x1, x0
    5868:	str	x0, [sp, #160]
    586c:	b	58c8 <elf_fill@@ELFUTILS_1.0+0x1efc>
    5870:	ldr	x0, [sp, #24]
    5874:	ldr	w4, [x0, #36]
    5878:	ldr	x0, [sp, #24]
    587c:	ldr	x1, [x0, #40]
    5880:	ldr	x0, [sp, #168]
    5884:	add	x1, x1, x0
    5888:	add	x0, sp, #0x38
    588c:	mov	x3, x1
    5890:	mov	x2, #0x3c                  	// #60
    5894:	mov	x1, x0
    5898:	mov	w0, w4
    589c:	bl	3a3c <elf_fill@@ELFUTILS_1.0+0x70>
    58a0:	cmp	x0, #0x3c
    58a4:	cset	w0, ne  // ne = any
    58a8:	and	w0, w0, #0xff
    58ac:	and	x0, x0, #0xff
    58b0:	cmp	x0, #0x0
    58b4:	b.eq	58c0 <elf_fill@@ELFUTILS_1.0+0x1ef4>  // b.none
    58b8:	mov	x0, #0x0                   	// #0
    58bc:	b	5b08 <elf_fill@@ELFUTILS_1.0+0x213c>
    58c0:	add	x0, sp, #0x38
    58c4:	str	x0, [sp, #160]
    58c8:	ldr	x0, [sp, #160]
    58cc:	add	x0, x0, #0x30
    58d0:	str	x0, [sp, #152]
    58d4:	ldr	x0, [sp, #160]
    58d8:	ldrb	w0, [x0, #57]
    58dc:	cmp	w0, #0x20
    58e0:	b.eq	5904 <elf_fill@@ELFUTILS_1.0+0x1f38>  // b.none
    58e4:	ldr	x0, [sp, #160]
    58e8:	add	x1, x0, #0x30
    58ec:	add	x0, sp, #0x28
    58f0:	mov	x2, #0xa                   	// #10
    58f4:	bl	32b0 <mempcpy@plt>
    58f8:	strb	wzr, [x0]
    58fc:	add	x0, sp, #0x28
    5900:	str	x0, [sp, #152]
    5904:	ldr	x0, [sp, #152]
    5908:	bl	3220 <atol@plt>
    590c:	str	x0, [sp, #136]
    5910:	ldr	x3, [sp, #160]
    5914:	mov	x2, #0x10                  	// #16
    5918:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    591c:	add	x1, x0, #0x2c8
    5920:	mov	x0, x3
    5924:	bl	3250 <memcmp@plt>
    5928:	cmp	w0, #0x0
    592c:	b.ne	5944 <elf_fill@@ELFUTILS_1.0+0x1f78>  // b.any
    5930:	ldr	x0, [sp, #24]
    5934:	ldr	x0, [x0]
    5938:	cmp	x0, #0x0
    593c:	b.ne	5964 <elf_fill@@ELFUTILS_1.0+0x1f98>  // b.any
    5940:	b	598c <elf_fill@@ELFUTILS_1.0+0x1fc0>
    5944:	ldr	x0, [sp, #136]
    5948:	add	x0, x0, #0x1
    594c:	and	x1, x0, #0xfffffffffffffffe
    5950:	ldr	x0, [sp, #168]
    5954:	add	x0, x1, x0
    5958:	add	x0, x0, #0x3c
    595c:	str	x0, [sp, #168]
    5960:	b	5814 <elf_fill@@ELFUTILS_1.0+0x1e48>
    5964:	ldr	x0, [sp, #24]
    5968:	ldr	x1, [x0, #48]
    596c:	ldr	x0, [sp, #168]
    5970:	sub	x0, x1, x0
    5974:	sub	x0, x0, #0x3c
    5978:	ldr	x1, [sp, #136]
    597c:	cmp	x1, x0
    5980:	b.ls	598c <elf_fill@@ELFUTILS_1.0+0x1fc0>  // b.plast
    5984:	mov	x0, #0x0                   	// #0
    5988:	b	5b08 <elf_fill@@ELFUTILS_1.0+0x213c>
    598c:	ldr	x0, [sp, #136]
    5990:	bl	3140 <malloc@plt>
    5994:	str	x0, [sp, #128]
    5998:	ldr	x0, [sp, #128]
    599c:	cmp	x0, #0x0
    59a0:	b.eq	5b04 <elf_fill@@ELFUTILS_1.0+0x2138>  // b.none
    59a4:	ldr	x0, [sp, #24]
    59a8:	ldr	x0, [x0]
    59ac:	cmp	x0, #0x0
    59b0:	b.eq	59e8 <elf_fill@@ELFUTILS_1.0+0x201c>  // b.none
    59b4:	ldr	x0, [sp, #24]
    59b8:	ldr	x1, [x0]
    59bc:	ldr	x0, [sp, #168]
    59c0:	add	x0, x0, #0x3c
    59c4:	add	x0, x1, x0
    59c8:	ldr	x2, [sp, #136]
    59cc:	mov	x1, x0
    59d0:	ldr	x0, [sp, #128]
    59d4:	bl	30a0 <memcpy@plt>
    59d8:	mov	x1, x0
    59dc:	ldr	x0, [sp, #24]
    59e0:	str	x1, [x0, #96]
    59e4:	b	5a5c <elf_fill@@ELFUTILS_1.0+0x2090>
    59e8:	ldr	x0, [sp, #24]
    59ec:	ldr	w4, [x0, #36]
    59f0:	ldr	x0, [sp, #24]
    59f4:	ldr	x1, [x0, #40]
    59f8:	ldr	x0, [sp, #168]
    59fc:	add	x0, x1, x0
    5a00:	add	x0, x0, #0x3c
    5a04:	mov	x3, x0
    5a08:	ldr	x2, [sp, #136]
    5a0c:	ldr	x1, [sp, #128]
    5a10:	mov	w0, w4
    5a14:	bl	3a3c <elf_fill@@ELFUTILS_1.0+0x70>
    5a18:	mov	x1, x0
    5a1c:	ldr	x0, [sp, #136]
    5a20:	cmp	x1, x0
    5a24:	cset	w0, ne  // ne = any
    5a28:	and	w0, w0, #0xff
    5a2c:	and	x0, x0, #0xff
    5a30:	cmp	x0, #0x0
    5a34:	b.eq	5a50 <elf_fill@@ELFUTILS_1.0+0x2084>  // b.none
    5a38:	ldr	x0, [sp, #128]
    5a3c:	bl	32a0 <free@plt>
    5a40:	ldr	x0, [sp, #24]
    5a44:	str	xzr, [x0, #96]
    5a48:	mov	x0, #0x0                   	// #0
    5a4c:	b	5b08 <elf_fill@@ELFUTILS_1.0+0x213c>
    5a50:	ldr	x0, [sp, #24]
    5a54:	ldr	x1, [sp, #128]
    5a58:	str	x1, [x0, #96]
    5a5c:	ldr	x0, [sp, #24]
    5a60:	ldr	x1, [sp, #136]
    5a64:	str	x1, [x0, #104]
    5a68:	ldr	x0, [sp, #128]
    5a6c:	str	x0, [sp, #144]
    5a70:	ldr	x0, [sp, #144]
    5a74:	str	x0, [sp, #120]
    5a78:	ldr	x1, [sp, #128]
    5a7c:	ldr	x0, [sp, #136]
    5a80:	add	x1, x1, x0
    5a84:	ldr	x0, [sp, #144]
    5a88:	sub	x0, x1, x0
    5a8c:	mov	x2, x0
    5a90:	mov	w1, #0x2f                  	// #47
    5a94:	ldr	x0, [sp, #144]
    5a98:	bl	3370 <memchr@plt>
    5a9c:	str	x0, [sp, #144]
    5aa0:	ldr	x0, [sp, #144]
    5aa4:	cmp	x0, #0x0
    5aa8:	b.ne	5ad4 <elf_fill@@ELFUTILS_1.0+0x2108>  // b.any
    5aac:	ldr	x1, [sp, #128]
    5ab0:	ldr	x0, [sp, #136]
    5ab4:	add	x1, x1, x0
    5ab8:	ldr	x0, [sp, #120]
    5abc:	sub	x0, x1, x0
    5ac0:	mov	x2, x0
    5ac4:	mov	w1, #0x0                   	// #0
    5ac8:	ldr	x0, [sp, #120]
    5acc:	bl	3180 <memset@plt>
    5ad0:	b	5b04 <elf_fill@@ELFUTILS_1.0+0x2138>
    5ad4:	ldr	x0, [sp, #144]
    5ad8:	add	x1, x0, #0x1
    5adc:	str	x1, [sp, #144]
    5ae0:	strb	wzr, [x0]
    5ae4:	ldr	x1, [sp, #128]
    5ae8:	ldr	x0, [sp, #136]
    5aec:	add	x0, x1, x0
    5af0:	ldr	x1, [sp, #144]
    5af4:	cmp	x1, x0
    5af8:	b.cs	5b00 <elf_fill@@ELFUTILS_1.0+0x2134>  // b.hs, b.nlast
    5afc:	b	5a70 <elf_fill@@ELFUTILS_1.0+0x20a4>
    5b00:	nop
    5b04:	ldr	x0, [sp, #128]
    5b08:	ldp	x29, x30, [sp], #176
    5b0c:	ret
    5b10:	stp	x29, x30, [sp, #-192]!
    5b14:	mov	x29, sp
    5b18:	str	x0, [sp, #24]
    5b1c:	ldr	x0, [sp, #24]
    5b20:	ldr	x0, [x0]
    5b24:	cmp	x0, #0x0
    5b28:	b.eq	5bd0 <elf_fill@@ELFUTILS_1.0+0x2204>  // b.none
    5b2c:	ldr	x0, [sp, #24]
    5b30:	ldr	x0, [x0, #112]
    5b34:	mov	x1, x0
    5b38:	ldr	x0, [sp, #24]
    5b3c:	ldr	x0, [x0, #40]
    5b40:	mov	x2, x0
    5b44:	ldr	x0, [sp, #24]
    5b48:	ldr	x0, [x0, #48]
    5b4c:	add	x0, x2, x0
    5b50:	cmp	x1, x0
    5b54:	cset	w0, hi  // hi = pmore
    5b58:	and	w0, w0, #0xff
    5b5c:	and	x0, x0, #0xff
    5b60:	cmp	x0, #0x0
    5b64:	b.ne	5ba4 <elf_fill@@ELFUTILS_1.0+0x21d8>  // b.any
    5b68:	ldr	x0, [sp, #24]
    5b6c:	ldr	x0, [x0, #40]
    5b70:	mov	x1, x0
    5b74:	ldr	x0, [sp, #24]
    5b78:	ldr	x0, [x0, #48]
    5b7c:	add	x0, x1, x0
    5b80:	ldr	x1, [sp, #24]
    5b84:	ldr	x1, [x1, #112]
    5b88:	sub	x0, x0, x1
    5b8c:	cmp	x0, #0x3b
    5b90:	cset	w0, ls  // ls = plast
    5b94:	and	w0, w0, #0xff
    5b98:	and	x0, x0, #0xff
    5b9c:	cmp	x0, #0x0
    5ba0:	b.eq	5bb4 <elf_fill@@ELFUTILS_1.0+0x21e8>  // b.none
    5ba4:	mov	w0, #0xe                   	// #14
    5ba8:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    5bac:	mov	w0, #0xffffffff            	// #-1
    5bb0:	b	617c <elf_fill@@ELFUTILS_1.0+0x27b0>
    5bb4:	ldr	x0, [sp, #24]
    5bb8:	ldr	x0, [x0]
    5bbc:	ldr	x1, [sp, #24]
    5bc0:	ldr	x1, [x1, #112]
    5bc4:	add	x0, x0, x1
    5bc8:	str	x0, [sp, #136]
    5bcc:	b	5c28 <elf_fill@@ELFUTILS_1.0+0x225c>
    5bd0:	ldr	x0, [sp, #24]
    5bd4:	add	x0, x0, #0xa8
    5bd8:	str	x0, [sp, #136]
    5bdc:	ldr	x0, [sp, #24]
    5be0:	ldr	w4, [x0, #36]
    5be4:	ldr	x0, [sp, #24]
    5be8:	ldr	x0, [x0, #112]
    5bec:	mov	x3, x0
    5bf0:	mov	x2, #0x3c                  	// #60
    5bf4:	ldr	x1, [sp, #136]
    5bf8:	mov	w0, w4
    5bfc:	bl	3a3c <elf_fill@@ELFUTILS_1.0+0x70>
    5c00:	cmp	x0, #0x3c
    5c04:	cset	w0, ne  // ne = any
    5c08:	and	w0, w0, #0xff
    5c0c:	and	x0, x0, #0xff
    5c10:	cmp	x0, #0x0
    5c14:	b.eq	5c28 <elf_fill@@ELFUTILS_1.0+0x225c>  // b.none
    5c18:	mov	w0, #0xe                   	// #14
    5c1c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    5c20:	mov	w0, #0xffffffff            	// #-1
    5c24:	b	617c <elf_fill@@ELFUTILS_1.0+0x27b0>
    5c28:	ldr	x0, [sp, #136]
    5c2c:	add	x3, x0, #0x3a
    5c30:	mov	x2, #0x2                   	// #2
    5c34:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    5c38:	add	x1, x0, #0x2e0
    5c3c:	mov	x0, x3
    5c40:	bl	3250 <memcmp@plt>
    5c44:	cmp	w0, #0x0
    5c48:	cset	w0, ne  // ne = any
    5c4c:	and	w0, w0, #0xff
    5c50:	and	x0, x0, #0xff
    5c54:	cmp	x0, #0x0
    5c58:	b.eq	5c6c <elf_fill@@ELFUTILS_1.0+0x22a0>  // b.none
    5c5c:	mov	w0, #0xf                   	// #15
    5c60:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    5c64:	mov	w0, #0xffffffff            	// #-1
    5c68:	b	617c <elf_fill@@ELFUTILS_1.0+0x27b0>
    5c6c:	ldr	x0, [sp, #24]
    5c70:	add	x2, x0, #0xf4
    5c74:	ldr	x0, [sp, #136]
    5c78:	ldp	x0, x1, [x0]
    5c7c:	stp	x0, x1, [x2]
    5c80:	add	x0, x2, #0x10
    5c84:	strb	wzr, [x0]
    5c88:	ldr	x0, [sp, #24]
    5c8c:	add	x0, x0, #0x78
    5c90:	str	x0, [sp, #128]
    5c94:	ldr	x0, [sp, #136]
    5c98:	ldrb	w0, [x0]
    5c9c:	cmp	w0, #0x2f
    5ca0:	b.ne	5eb4 <elf_fill@@ELFUTILS_1.0+0x24e8>  // b.any
    5ca4:	ldr	x0, [sp, #136]
    5ca8:	ldrb	w0, [x0, #1]
    5cac:	cmp	w0, #0x20
    5cb0:	b.ne	5d00 <elf_fill@@ELFUTILS_1.0+0x2334>  // b.any
    5cb4:	ldr	x3, [sp, #136]
    5cb8:	mov	x2, #0x10                  	// #16
    5cbc:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    5cc0:	add	x1, x0, #0x2e8
    5cc4:	mov	x0, x3
    5cc8:	bl	3250 <memcmp@plt>
    5ccc:	cmp	w0, #0x0
    5cd0:	b.ne	5d00 <elf_fill@@ELFUTILS_1.0+0x2334>  // b.any
    5cd4:	ldr	x0, [sp, #24]
    5cd8:	add	x3, x0, #0xe4
    5cdc:	mov	x2, #0x2                   	// #2
    5ce0:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    5ce4:	add	x1, x0, #0x300
    5ce8:	mov	x0, x3
    5cec:	bl	30a0 <memcpy@plt>
    5cf0:	mov	x1, x0
    5cf4:	ldr	x0, [sp, #128]
    5cf8:	str	x1, [x0]
    5cfc:	b	5f44 <elf_fill@@ELFUTILS_1.0+0x2578>
    5d00:	ldr	x0, [sp, #136]
    5d04:	ldrb	w0, [x0, #1]
    5d08:	cmp	w0, #0x53
    5d0c:	b.ne	5d5c <elf_fill@@ELFUTILS_1.0+0x2390>  // b.any
    5d10:	ldr	x3, [sp, #136]
    5d14:	mov	x2, #0x10                  	// #16
    5d18:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    5d1c:	add	x1, x0, #0x308
    5d20:	mov	x0, x3
    5d24:	bl	3250 <memcmp@plt>
    5d28:	cmp	w0, #0x0
    5d2c:	b.ne	5d5c <elf_fill@@ELFUTILS_1.0+0x2390>  // b.any
    5d30:	ldr	x0, [sp, #24]
    5d34:	add	x3, x0, #0xe4
    5d38:	mov	x2, #0x8                   	// #8
    5d3c:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    5d40:	add	x1, x0, #0x320
    5d44:	mov	x0, x3
    5d48:	bl	30a0 <memcpy@plt>
    5d4c:	mov	x1, x0
    5d50:	ldr	x0, [sp, #128]
    5d54:	str	x1, [x0]
    5d58:	b	5f44 <elf_fill@@ELFUTILS_1.0+0x2578>
    5d5c:	ldr	x0, [sp, #136]
    5d60:	ldrb	w0, [x0, #1]
    5d64:	cmp	w0, #0x2f
    5d68:	b.ne	5db8 <elf_fill@@ELFUTILS_1.0+0x23ec>  // b.any
    5d6c:	ldr	x3, [sp, #136]
    5d70:	mov	x2, #0x10                  	// #16
    5d74:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    5d78:	add	x1, x0, #0x2c8
    5d7c:	mov	x0, x3
    5d80:	bl	3250 <memcmp@plt>
    5d84:	cmp	w0, #0x0
    5d88:	b.ne	5db8 <elf_fill@@ELFUTILS_1.0+0x23ec>  // b.any
    5d8c:	ldr	x0, [sp, #24]
    5d90:	add	x3, x0, #0xe4
    5d94:	mov	x2, #0x3                   	// #3
    5d98:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    5d9c:	add	x1, x0, #0x328
    5da0:	mov	x0, x3
    5da4:	bl	30a0 <memcpy@plt>
    5da8:	mov	x1, x0
    5dac:	ldr	x0, [sp, #128]
    5db0:	str	x1, [x0]
    5db4:	b	5f44 <elf_fill@@ELFUTILS_1.0+0x2578>
    5db8:	bl	3270 <__ctype_b_loc@plt>
    5dbc:	ldr	x1, [x0]
    5dc0:	ldr	x0, [sp, #136]
    5dc4:	ldrb	w0, [x0, #1]
    5dc8:	and	x0, x0, #0xff
    5dcc:	lsl	x0, x0, #1
    5dd0:	add	x0, x1, x0
    5dd4:	ldrh	w0, [x0]
    5dd8:	and	w0, w0, #0x800
    5ddc:	cmp	w0, #0x0
    5de0:	cset	w0, ne  // ne = any
    5de4:	and	w0, w0, #0xff
    5de8:	and	x0, x0, #0xff
    5dec:	cmp	x0, #0x0
    5df0:	b.eq	5ea4 <elf_fill@@ELFUTILS_1.0+0x24d8>  // b.none
    5df4:	ldr	x0, [sp, #24]
    5df8:	ldr	x0, [x0, #96]
    5dfc:	cmp	x0, #0x0
    5e00:	cset	w0, eq  // eq = none
    5e04:	and	w0, w0, #0xff
    5e08:	and	x0, x0, #0xff
    5e0c:	cmp	x0, #0x0
    5e10:	b.eq	5e44 <elf_fill@@ELFUTILS_1.0+0x2478>  // b.none
    5e14:	ldr	x0, [sp, #24]
    5e18:	bl	5800 <elf_fill@@ELFUTILS_1.0+0x1e34>
    5e1c:	cmp	x0, #0x0
    5e20:	cset	w0, eq  // eq = none
    5e24:	and	w0, w0, #0xff
    5e28:	and	x0, x0, #0xff
    5e2c:	cmp	x0, #0x0
    5e30:	b.eq	5e44 <elf_fill@@ELFUTILS_1.0+0x2478>  // b.none
    5e34:	mov	w0, #0x10                  	// #16
    5e38:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    5e3c:	mov	w0, #0xffffffff            	// #-1
    5e40:	b	617c <elf_fill@@ELFUTILS_1.0+0x27b0>
    5e44:	ldr	x0, [sp, #136]
    5e48:	add	x0, x0, #0x1
    5e4c:	bl	3220 <atol@plt>
    5e50:	str	x0, [sp, #112]
    5e54:	ldr	x0, [sp, #24]
    5e58:	ldr	x0, [x0, #104]
    5e5c:	ldr	x1, [sp, #112]
    5e60:	cmp	x1, x0
    5e64:	cset	w0, cs  // cs = hs, nlast
    5e68:	and	w0, w0, #0xff
    5e6c:	and	x0, x0, #0xff
    5e70:	cmp	x0, #0x0
    5e74:	b.eq	5e88 <elf_fill@@ELFUTILS_1.0+0x24bc>  // b.none
    5e78:	mov	w0, #0x10                  	// #16
    5e7c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    5e80:	mov	w0, #0xffffffff            	// #-1
    5e84:	b	617c <elf_fill@@ELFUTILS_1.0+0x27b0>
    5e88:	ldr	x0, [sp, #24]
    5e8c:	ldr	x1, [x0, #96]
    5e90:	ldr	x0, [sp, #112]
    5e94:	add	x1, x1, x0
    5e98:	ldr	x0, [sp, #128]
    5e9c:	str	x1, [x0]
    5ea0:	b	5f44 <elf_fill@@ELFUTILS_1.0+0x2578>
    5ea4:	mov	w0, #0x10                  	// #16
    5ea8:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    5eac:	mov	w0, #0xffffffff            	// #-1
    5eb0:	b	617c <elf_fill@@ELFUTILS_1.0+0x27b0>
    5eb4:	ldr	x0, [sp, #24]
    5eb8:	add	x0, x0, #0xe4
    5ebc:	ldr	x1, [sp, #136]
    5ec0:	mov	x3, #0x10                  	// #16
    5ec4:	mov	w2, #0x2f                  	// #47
    5ec8:	bl	30e0 <memccpy@plt>
    5ecc:	str	x0, [sp, #120]
    5ed0:	ldr	x0, [sp, #120]
    5ed4:	cmp	x0, #0x0
    5ed8:	b.eq	5eec <elf_fill@@ELFUTILS_1.0+0x2520>  // b.none
    5edc:	ldr	x0, [sp, #120]
    5ee0:	sub	x0, x0, #0x1
    5ee4:	strb	wzr, [x0]
    5ee8:	b	5f34 <elf_fill@@ELFUTILS_1.0+0x2568>
    5eec:	mov	x0, #0xf                   	// #15
    5ef0:	str	x0, [sp, #152]
    5ef4:	ldr	x1, [sp, #24]
    5ef8:	ldr	x0, [sp, #152]
    5efc:	add	x0, x1, x0
    5f00:	strb	wzr, [x0, #228]
    5f04:	ldr	x0, [sp, #152]
    5f08:	cmp	x0, #0x0
    5f0c:	b.eq	5f34 <elf_fill@@ELFUTILS_1.0+0x2568>  // b.none
    5f10:	ldr	x0, [sp, #152]
    5f14:	sub	x0, x0, #0x1
    5f18:	str	x0, [sp, #152]
    5f1c:	ldr	x1, [sp, #24]
    5f20:	ldr	x0, [sp, #152]
    5f24:	add	x0, x1, x0
    5f28:	ldrb	w0, [x0, #228]
    5f2c:	cmp	w0, #0x20
    5f30:	b.eq	5ef4 <elf_fill@@ELFUTILS_1.0+0x2528>  // b.none
    5f34:	ldr	x0, [sp, #24]
    5f38:	add	x1, x0, #0xe4
    5f3c:	ldr	x0, [sp, #128]
    5f40:	str	x1, [x0]
    5f44:	ldr	x0, [sp, #136]
    5f48:	ldrb	w0, [x0, #48]
    5f4c:	cmp	w0, #0x20
    5f50:	cset	w0, eq  // eq = none
    5f54:	and	w0, w0, #0xff
    5f58:	and	x0, x0, #0xff
    5f5c:	cmp	x0, #0x0
    5f60:	b.eq	5f74 <elf_fill@@ELFUTILS_1.0+0x25a8>  // b.none
    5f64:	mov	w0, #0x10                  	// #16
    5f68:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    5f6c:	mov	w0, #0xffffffff            	// #-1
    5f70:	b	617c <elf_fill@@ELFUTILS_1.0+0x27b0>
    5f74:	ldr	x0, [sp, #136]
    5f78:	add	x0, x0, #0x10
    5f7c:	str	x0, [sp, #144]
    5f80:	ldr	x0, [sp, #136]
    5f84:	ldrb	w0, [x0, #27]
    5f88:	cmp	w0, #0x20
    5f8c:	b.eq	5fb0 <elf_fill@@ELFUTILS_1.0+0x25e4>  // b.none
    5f90:	ldr	x0, [sp, #136]
    5f94:	add	x1, x0, #0x10
    5f98:	add	x0, sp, #0x58
    5f9c:	mov	x2, #0xc                   	// #12
    5fa0:	bl	32b0 <mempcpy@plt>
    5fa4:	strb	wzr, [x0]
    5fa8:	add	x0, sp, #0x58
    5fac:	str	x0, [sp, #144]
    5fb0:	ldr	x0, [sp, #144]
    5fb4:	bl	3220 <atol@plt>
    5fb8:	mov	x1, x0
    5fbc:	ldr	x0, [sp, #128]
    5fc0:	str	x1, [x0, #8]
    5fc4:	ldr	x0, [sp, #136]
    5fc8:	add	x0, x0, #0x1c
    5fcc:	str	x0, [sp, #168]
    5fd0:	ldr	x0, [sp, #136]
    5fd4:	ldrb	w0, [x0, #33]
    5fd8:	cmp	w0, #0x20
    5fdc:	b.eq	6000 <elf_fill@@ELFUTILS_1.0+0x2634>  // b.none
    5fe0:	ldr	x0, [sp, #136]
    5fe4:	add	x1, x0, #0x1c
    5fe8:	add	x0, sp, #0x50
    5fec:	mov	x2, #0x6                   	// #6
    5ff0:	bl	32b0 <mempcpy@plt>
    5ff4:	strb	wzr, [x0]
    5ff8:	add	x0, sp, #0x50
    5ffc:	str	x0, [sp, #168]
    6000:	ldr	x0, [sp, #168]
    6004:	bl	3220 <atol@plt>
    6008:	mov	w1, w0
    600c:	ldr	x0, [sp, #128]
    6010:	str	w1, [x0, #16]
    6014:	ldr	x0, [sp, #136]
    6018:	add	x0, x0, #0x22
    601c:	str	x0, [sp, #160]
    6020:	ldr	x0, [sp, #136]
    6024:	ldrb	w0, [x0, #39]
    6028:	cmp	w0, #0x20
    602c:	b.eq	6050 <elf_fill@@ELFUTILS_1.0+0x2684>  // b.none
    6030:	ldr	x0, [sp, #136]
    6034:	add	x1, x0, #0x22
    6038:	add	x0, sp, #0x48
    603c:	mov	x2, #0x6                   	// #6
    6040:	bl	32b0 <mempcpy@plt>
    6044:	strb	wzr, [x0]
    6048:	add	x0, sp, #0x48
    604c:	str	x0, [sp, #160]
    6050:	ldr	x0, [sp, #160]
    6054:	bl	3220 <atol@plt>
    6058:	mov	w1, w0
    605c:	ldr	x0, [sp, #128]
    6060:	str	w1, [x0, #20]
    6064:	ldr	x0, [sp, #136]
    6068:	add	x0, x0, #0x28
    606c:	str	x0, [sp, #184]
    6070:	ldr	x0, [sp, #136]
    6074:	ldrb	w0, [x0, #47]
    6078:	cmp	w0, #0x20
    607c:	b.eq	60a4 <elf_fill@@ELFUTILS_1.0+0x26d8>  // b.none
    6080:	ldr	x0, [sp, #136]
    6084:	add	x0, x0, #0x28
    6088:	ldr	x0, [x0]
    608c:	str	x0, [sp, #56]
    6090:	add	x0, sp, #0x38
    6094:	add	x0, x0, #0x8
    6098:	strb	wzr, [x0]
    609c:	add	x0, sp, #0x38
    60a0:	str	x0, [sp, #184]
    60a4:	ldr	x0, [sp, #184]
    60a8:	bl	3220 <atol@plt>
    60ac:	mov	w1, w0
    60b0:	ldr	x0, [sp, #128]
    60b4:	str	w1, [x0, #24]
    60b8:	ldr	x0, [sp, #136]
    60bc:	add	x0, x0, #0x30
    60c0:	str	x0, [sp, #176]
    60c4:	ldr	x0, [sp, #136]
    60c8:	ldrb	w0, [x0, #57]
    60cc:	cmp	w0, #0x20
    60d0:	b.eq	60f4 <elf_fill@@ELFUTILS_1.0+0x2728>  // b.none
    60d4:	ldr	x0, [sp, #136]
    60d8:	add	x1, x0, #0x30
    60dc:	add	x0, sp, #0x28
    60e0:	mov	x2, #0xa                   	// #10
    60e4:	bl	32b0 <mempcpy@plt>
    60e8:	strb	wzr, [x0]
    60ec:	add	x0, sp, #0x28
    60f0:	str	x0, [sp, #176]
    60f4:	ldr	x0, [sp, #176]
    60f8:	bl	3220 <atol@plt>
    60fc:	mov	x1, x0
    6100:	ldr	x0, [sp, #128]
    6104:	str	x1, [x0, #32]
    6108:	ldr	x0, [sp, #128]
    610c:	ldr	x0, [x0, #32]
    6110:	cmp	x0, #0x0
    6114:	b.ge	6128 <elf_fill@@ELFUTILS_1.0+0x275c>  // b.tcont
    6118:	mov	w0, #0x10                  	// #16
    611c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    6120:	mov	w0, #0xffffffff            	// #-1
    6124:	b	617c <elf_fill@@ELFUTILS_1.0+0x27b0>
    6128:	ldr	x0, [sp, #24]
    612c:	ldr	x0, [x0, #40]
    6130:	mov	x1, x0
    6134:	ldr	x0, [sp, #24]
    6138:	ldr	x0, [x0, #48]
    613c:	add	x0, x1, x0
    6140:	ldr	x1, [sp, #24]
    6144:	ldr	x1, [x1, #112]
    6148:	sub	x0, x0, x1
    614c:	sub	x0, x0, #0x3c
    6150:	str	x0, [sp, #104]
    6154:	ldr	x0, [sp, #128]
    6158:	ldr	x0, [x0, #32]
    615c:	mov	x1, x0
    6160:	ldr	x0, [sp, #104]
    6164:	cmp	x0, x1
    6168:	b.cs	6178 <elf_fill@@ELFUTILS_1.0+0x27ac>  // b.hs, b.nlast
    616c:	ldr	x1, [sp, #104]
    6170:	ldr	x0, [sp, #128]
    6174:	str	x1, [x0, #32]
    6178:	mov	w0, #0x0                   	// #0
    617c:	ldp	x29, x30, [sp], #192
    6180:	ret
    6184:	stp	x29, x30, [sp, #-48]!
    6188:	mov	x29, sp
    618c:	str	w0, [sp, #28]
    6190:	str	w1, [sp, #24]
    6194:	str	x2, [sp, #16]
    6198:	ldr	w0, [sp, #28]
    619c:	cmn	w0, #0x1
    61a0:	b.ne	61b4 <elf_fill@@ELFUTILS_1.0+0x27e8>  // b.any
    61a4:	ldr	x0, [sp, #16]
    61a8:	ldr	w0, [x0, #36]
    61ac:	str	w0, [sp, #28]
    61b0:	b	6208 <elf_fill@@ELFUTILS_1.0+0x283c>
    61b4:	ldr	x0, [sp, #16]
    61b8:	ldr	w0, [x0, #36]
    61bc:	cmn	w0, #0x1
    61c0:	cset	w0, ne  // ne = any
    61c4:	and	w0, w0, #0xff
    61c8:	and	x0, x0, #0xff
    61cc:	cmp	x0, #0x0
    61d0:	b.eq	6208 <elf_fill@@ELFUTILS_1.0+0x283c>  // b.none
    61d4:	ldr	x0, [sp, #16]
    61d8:	ldr	w0, [x0, #36]
    61dc:	ldr	w1, [sp, #28]
    61e0:	cmp	w1, w0
    61e4:	cset	w0, ne  // ne = any
    61e8:	and	w0, w0, #0xff
    61ec:	and	x0, x0, #0xff
    61f0:	cmp	x0, #0x0
    61f4:	b.eq	6208 <elf_fill@@ELFUTILS_1.0+0x283c>  // b.none
    61f8:	mov	w0, #0x1c                  	// #28
    61fc:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    6200:	mov	x0, #0x0                   	// #0
    6204:	b	640c <elf_fill@@ELFUTILS_1.0+0x2a40>
    6208:	ldr	x0, [sp, #16]
    620c:	ldr	w0, [x0, #28]
    6210:	cmp	w0, #0x1
    6214:	cset	w0, ne  // ne = any
    6218:	and	w0, w0, #0xff
    621c:	and	x0, x0, #0xff
    6220:	cmp	x0, #0x0
    6224:	b.eq	6250 <elf_fill@@ELFUTILS_1.0+0x2884>  // b.none
    6228:	ldr	x0, [sp, #16]
    622c:	ldr	w0, [x0, #28]
    6230:	cmp	w0, #0x8
    6234:	cset	w0, ne  // ne = any
    6238:	and	w0, w0, #0xff
    623c:	and	x0, x0, #0xff
    6240:	cmp	x0, #0x0
    6244:	b.eq	6250 <elf_fill@@ELFUTILS_1.0+0x2884>  // b.none
    6248:	mov	w0, #0x1                   	// #1
    624c:	b	6254 <elf_fill@@ELFUTILS_1.0+0x2888>
    6250:	mov	w0, #0x0                   	// #0
    6254:	cmp	w0, #0x0
    6258:	b.eq	6284 <elf_fill@@ELFUTILS_1.0+0x28b8>  // b.none
    625c:	ldr	x0, [sp, #16]
    6260:	ldr	w0, [x0, #28]
    6264:	cmp	w0, #0x3
    6268:	cset	w0, ne  // ne = any
    626c:	and	w0, w0, #0xff
    6270:	and	x0, x0, #0xff
    6274:	cmp	x0, #0x0
    6278:	b.eq	6284 <elf_fill@@ELFUTILS_1.0+0x28b8>  // b.none
    627c:	mov	w0, #0x1                   	// #1
    6280:	b	6288 <elf_fill@@ELFUTILS_1.0+0x28bc>
    6284:	mov	w0, #0x0                   	// #0
    6288:	cmp	w0, #0x0
    628c:	b.eq	62b8 <elf_fill@@ELFUTILS_1.0+0x28ec>  // b.none
    6290:	ldr	x0, [sp, #16]
    6294:	ldr	w0, [x0, #28]
    6298:	cmp	w0, #0xa
    629c:	cset	w0, ne  // ne = any
    62a0:	and	w0, w0, #0xff
    62a4:	and	x0, x0, #0xff
    62a8:	cmp	x0, #0x0
    62ac:	b.eq	62b8 <elf_fill@@ELFUTILS_1.0+0x28ec>  // b.none
    62b0:	mov	w0, #0x1                   	// #1
    62b4:	b	62bc <elf_fill@@ELFUTILS_1.0+0x28f0>
    62b8:	mov	w0, #0x0                   	// #0
    62bc:	cmp	w0, #0x0
    62c0:	b.eq	62ec <elf_fill@@ELFUTILS_1.0+0x2920>  // b.none
    62c4:	ldr	x0, [sp, #16]
    62c8:	ldr	w0, [x0, #28]
    62cc:	cmp	w0, #0x2
    62d0:	cset	w0, ne  // ne = any
    62d4:	and	w0, w0, #0xff
    62d8:	and	x0, x0, #0xff
    62dc:	cmp	x0, #0x0
    62e0:	b.eq	62ec <elf_fill@@ELFUTILS_1.0+0x2920>  // b.none
    62e4:	mov	w0, #0x1                   	// #1
    62e8:	b	62f0 <elf_fill@@ELFUTILS_1.0+0x2924>
    62ec:	mov	w0, #0x0                   	// #0
    62f0:	cmp	w0, #0x0
    62f4:	b.eq	6320 <elf_fill@@ELFUTILS_1.0+0x2954>  // b.none
    62f8:	ldr	x0, [sp, #16]
    62fc:	ldr	w0, [x0, #28]
    6300:	cmp	w0, #0x9
    6304:	cset	w0, ne  // ne = any
    6308:	and	w0, w0, #0xff
    630c:	and	x0, x0, #0xff
    6310:	cmp	x0, #0x0
    6314:	b.eq	6320 <elf_fill@@ELFUTILS_1.0+0x2954>  // b.none
    6318:	mov	w0, #0x1                   	// #1
    631c:	b	6324 <elf_fill@@ELFUTILS_1.0+0x2958>
    6320:	mov	w0, #0x0                   	// #0
    6324:	cmp	w0, #0x0
    6328:	b.eq	635c <elf_fill@@ELFUTILS_1.0+0x2990>  // b.none
    632c:	ldr	x0, [sp, #16]
    6330:	ldr	w0, [x0, #28]
    6334:	cmp	w0, #0xb
    6338:	cset	w0, ne  // ne = any
    633c:	and	w0, w0, #0xff
    6340:	and	x0, x0, #0xff
    6344:	cmp	x0, #0x0
    6348:	b.eq	635c <elf_fill@@ELFUTILS_1.0+0x2990>  // b.none
    634c:	mov	w0, #0xb                   	// #11
    6350:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    6354:	mov	x0, #0x0                   	// #0
    6358:	b	640c <elf_fill@@ELFUTILS_1.0+0x2a40>
    635c:	ldr	x0, [sp, #16]
    6360:	ldr	w0, [x0, #24]
    6364:	cmp	w0, #0x1
    6368:	b.eq	6388 <elf_fill@@ELFUTILS_1.0+0x29bc>  // b.none
    636c:	ldr	x0, [sp, #16]
    6370:	ldr	w0, [x0, #60]
    6374:	add	w1, w0, #0x1
    6378:	ldr	x0, [sp, #16]
    637c:	str	w1, [x0, #60]
    6380:	ldr	x0, [sp, #16]
    6384:	b	640c <elf_fill@@ELFUTILS_1.0+0x2a40>
    6388:	ldr	x0, [sp, #16]
    638c:	ldr	x0, [x0, #120]
    6390:	cmp	x0, #0x0
    6394:	b.ne	63b0 <elf_fill@@ELFUTILS_1.0+0x29e4>  // b.any
    6398:	ldr	x0, [sp, #16]
    639c:	bl	5b10 <elf_fill@@ELFUTILS_1.0+0x2144>
    63a0:	cmp	w0, #0x0
    63a4:	b.eq	63b0 <elf_fill@@ELFUTILS_1.0+0x29e4>  // b.none
    63a8:	mov	x0, #0x0                   	// #0
    63ac:	b	640c <elf_fill@@ELFUTILS_1.0+0x2a40>
    63b0:	ldr	x0, [sp, #16]
    63b4:	ldr	x0, [x0, #112]
    63b8:	add	x0, x0, #0x3c
    63bc:	mov	x1, x0
    63c0:	ldr	x0, [sp, #16]
    63c4:	ldr	x0, [x0, #152]
    63c8:	ldr	x4, [sp, #16]
    63cc:	ldr	w3, [sp, #24]
    63d0:	mov	x2, x0
    63d4:	ldr	w0, [sp, #28]
    63d8:	bl	55c8 <elf_fill@@ELFUTILS_1.0+0x1bfc>
    63dc:	str	x0, [sp, #40]
    63e0:	ldr	x0, [sp, #40]
    63e4:	cmp	x0, #0x0
    63e8:	b.eq	6408 <elf_fill@@ELFUTILS_1.0+0x2a3c>  // b.none
    63ec:	ldr	x0, [sp, #16]
    63f0:	ldr	x1, [x0, #72]
    63f4:	ldr	x0, [sp, #40]
    63f8:	str	x1, [x0, #16]
    63fc:	ldr	x0, [sp, #16]
    6400:	ldr	x1, [sp, #40]
    6404:	str	x1, [x0, #72]
    6408:	ldr	x0, [sp, #40]
    640c:	ldp	x29, x30, [sp], #48
    6410:	ret
    6414:	stp	x29, x30, [sp, #-48]!
    6418:	mov	x29, sp
    641c:	str	w0, [sp, #28]
    6420:	str	w1, [sp, #24]
    6424:	mov	x7, #0x820                 	// #2080
    6428:	mov	w6, #0x3                   	// #3
    642c:	mov	x5, #0x0                   	// #0
    6430:	ldr	w4, [sp, #24]
    6434:	mov	x3, #0x0                   	// #0
    6438:	mov	x2, #0x0                   	// #0
    643c:	mov	x1, #0x0                   	// #0
    6440:	ldr	w0, [sp, #28]
    6444:	bl	3bf0 <elf_fill@@ELFUTILS_1.0+0x224>
    6448:	str	x0, [sp, #40]
    644c:	ldr	x0, [sp, #40]
    6450:	cmp	x0, #0x0
    6454:	b.eq	648c <elf_fill@@ELFUTILS_1.0+0x2ac0>  // b.none
    6458:	ldr	x0, [sp, #40]
    645c:	mov	w1, #0x1                   	// #1
    6460:	str	w1, [x0, #56]
    6464:	ldr	x0, [sp, #40]
    6468:	mov	w1, #0xa                   	// #10
    646c:	str	w1, [x0, #112]
    6470:	ldr	x0, [sp, #40]
    6474:	add	x1, x0, #0xc8
    6478:	ldr	x0, [sp, #40]
    647c:	str	x1, [x0, #96]
    6480:	ldr	x0, [sp, #40]
    6484:	mov	w1, #0xa                   	// #10
    6488:	str	w1, [x0, #204]
    648c:	ldr	x0, [sp, #40]
    6490:	ldp	x29, x30, [sp], #48
    6494:	ret
    6498:	stp	x29, x30, [sp, #-32]!
    649c:	mov	x29, sp
    64a0:	str	w0, [sp, #28]
    64a4:	str	w1, [sp, #24]
    64a8:	str	x2, [sp, #16]
    64ac:	ldr	x2, [sp, #16]
    64b0:	ldr	w1, [sp, #24]
    64b4:	ldr	w0, [sp, #28]
    64b8:	bl	6184 <elf_fill@@ELFUTILS_1.0+0x27b8>
    64bc:	ldp	x29, x30, [sp], #32
    64c0:	ret

00000000000064c4 <elf_begin@@ELFUTILS_1.0>:
    64c4:	stp	x29, x30, [sp, #-48]!
    64c8:	mov	x29, sp
    64cc:	str	w0, [sp, #28]
    64d0:	str	w1, [sp, #24]
    64d4:	str	x2, [sp, #16]
    64d8:	adrp	x0, 36000 <elf_compress_gnu@@ELFUTILS_1.7+0x1595c>
    64dc:	add	x0, x0, #0x1c4
    64e0:	ldr	w0, [x0]
    64e4:	cmp	w0, #0x1
    64e8:	cset	w0, ne  // ne = any
    64ec:	and	w0, w0, #0xff
    64f0:	and	x0, x0, #0xff
    64f4:	cmp	x0, #0x0
    64f8:	b.eq	650c <elf_begin@@ELFUTILS_1.0+0x48>  // b.none
    64fc:	mov	w0, #0xc                   	// #12
    6500:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    6504:	mov	x0, #0x0                   	// #0
    6508:	b	67d4 <elf_begin@@ELFUTILS_1.0+0x310>
    650c:	ldr	x0, [sp, #16]
    6510:	cmp	x0, #0x0
    6514:	b.ne	656c <elf_begin@@ELFUTILS_1.0+0xa8>  // b.any
    6518:	mov	w1, #0x1                   	// #1
    651c:	ldr	w0, [sp, #28]
    6520:	bl	3330 <fcntl@plt>
    6524:	cmn	w0, #0x1
    6528:	cset	w0, eq  // eq = none
    652c:	and	w0, w0, #0xff
    6530:	and	x0, x0, #0xff
    6534:	cmp	x0, #0x0
    6538:	b.eq	656c <elf_begin@@ELFUTILS_1.0+0xa8>  // b.none
    653c:	bl	33e0 <__errno_location@plt>
    6540:	ldr	w0, [x0]
    6544:	cmp	w0, #0x9
    6548:	cset	w0, eq  // eq = none
    654c:	and	w0, w0, #0xff
    6550:	and	x0, x0, #0xff
    6554:	cmp	x0, #0x0
    6558:	b.eq	656c <elf_begin@@ELFUTILS_1.0+0xa8>  // b.none
    655c:	mov	w0, #0x9                   	// #9
    6560:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    6564:	mov	x0, #0x0                   	// #0
    6568:	b	67d4 <elf_begin@@ELFUTILS_1.0+0x310>
    656c:	ldr	w0, [sp, #24]
    6570:	cmp	w0, #0xb
    6574:	b.eq	6620 <elf_begin@@ELFUTILS_1.0+0x15c>  // b.none
    6578:	ldr	w0, [sp, #24]
    657c:	cmp	w0, #0xb
    6580:	b.hi	67c0 <elf_begin@@ELFUTILS_1.0+0x2fc>  // b.pmore
    6584:	ldr	w0, [sp, #24]
    6588:	cmp	w0, #0xa
    658c:	b.eq	67ac <elf_begin@@ELFUTILS_1.0+0x2e8>  // b.none
    6590:	ldr	w0, [sp, #24]
    6594:	cmp	w0, #0xa
    6598:	b.hi	67c0 <elf_begin@@ELFUTILS_1.0+0x2fc>  // b.pmore
    659c:	ldr	w0, [sp, #24]
    65a0:	cmp	w0, #0x9
    65a4:	b.eq	66b0 <elf_begin@@ELFUTILS_1.0+0x1ec>  // b.none
    65a8:	ldr	w0, [sp, #24]
    65ac:	cmp	w0, #0x9
    65b0:	b.hi	67c0 <elf_begin@@ELFUTILS_1.0+0x2fc>  // b.pmore
    65b4:	ldr	w0, [sp, #24]
    65b8:	cmp	w0, #0x8
    65bc:	b.eq	666c <elf_begin@@ELFUTILS_1.0+0x1a8>  // b.none
    65c0:	ldr	w0, [sp, #24]
    65c4:	cmp	w0, #0x8
    65c8:	b.hi	67c0 <elf_begin@@ELFUTILS_1.0+0x2fc>  // b.pmore
    65cc:	ldr	w0, [sp, #24]
    65d0:	cmp	w0, #0x3
    65d4:	b.eq	67ac <elf_begin@@ELFUTILS_1.0+0x2e8>  // b.none
    65d8:	ldr	w0, [sp, #24]
    65dc:	cmp	w0, #0x3
    65e0:	b.hi	67c0 <elf_begin@@ELFUTILS_1.0+0x2fc>  // b.pmore
    65e4:	ldr	w0, [sp, #24]
    65e8:	cmp	w0, #0x2
    65ec:	b.eq	66b0 <elf_begin@@ELFUTILS_1.0+0x1ec>  // b.none
    65f0:	ldr	w0, [sp, #24]
    65f4:	cmp	w0, #0x2
    65f8:	b.hi	67c0 <elf_begin@@ELFUTILS_1.0+0x2fc>  // b.pmore
    65fc:	ldr	w0, [sp, #24]
    6600:	cmp	w0, #0x0
    6604:	b.eq	6618 <elf_begin@@ELFUTILS_1.0+0x154>  // b.none
    6608:	ldr	w0, [sp, #24]
    660c:	cmp	w0, #0x1
    6610:	b.eq	666c <elf_begin@@ELFUTILS_1.0+0x1a8>  // b.none
    6614:	b	67c0 <elf_begin@@ELFUTILS_1.0+0x2fc>
    6618:	str	xzr, [sp, #40]
    661c:	b	67d0 <elf_begin@@ELFUTILS_1.0+0x30c>
    6620:	ldr	x0, [sp, #16]
    6624:	cmp	x0, #0x0
    6628:	cset	w0, ne  // ne = any
    662c:	and	w0, w0, #0xff
    6630:	and	x0, x0, #0xff
    6634:	cmp	x0, #0x0
    6638:	b.eq	666c <elf_begin@@ELFUTILS_1.0+0x1a8>  // b.none
    663c:	ldr	x0, [sp, #16]
    6640:	ldr	w0, [x0, #28]
    6644:	cmp	w0, #0xb
    6648:	cset	w0, ne  // ne = any
    664c:	and	w0, w0, #0xff
    6650:	and	x0, x0, #0xff
    6654:	cmp	x0, #0x0
    6658:	b.eq	666c <elf_begin@@ELFUTILS_1.0+0x1a8>  // b.none
    665c:	mov	w0, #0xd                   	// #13
    6660:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    6664:	str	xzr, [sp, #40]
    6668:	b	67d0 <elf_begin@@ELFUTILS_1.0+0x30c>
    666c:	ldr	x0, [sp, #16]
    6670:	cmp	x0, #0x0
    6674:	b.eq	6690 <elf_begin@@ELFUTILS_1.0+0x1cc>  // b.none
    6678:	ldr	x2, [sp, #16]
    667c:	ldr	w1, [sp, #24]
    6680:	ldr	w0, [sp, #28]
    6684:	bl	6498 <elf_fill@@ELFUTILS_1.0+0x2acc>
    6688:	str	x0, [sp, #40]
    668c:	b	67d0 <elf_begin@@ELFUTILS_1.0+0x30c>
    6690:	mov	x4, #0x0                   	// #0
    6694:	ldr	w3, [sp, #24]
    6698:	mov	x2, #0xffffffffffffffff    	// #-1
    669c:	mov	x1, #0x0                   	// #0
    66a0:	ldr	w0, [sp, #28]
    66a4:	bl	55c8 <elf_fill@@ELFUTILS_1.0+0x1bfc>
    66a8:	str	x0, [sp, #40]
    66ac:	b	67d0 <elf_begin@@ELFUTILS_1.0+0x30c>
    66b0:	ldr	x0, [sp, #16]
    66b4:	cmp	x0, #0x0
    66b8:	b.eq	678c <elf_begin@@ELFUTILS_1.0+0x2c8>  // b.none
    66bc:	ldr	x0, [sp, #16]
    66c0:	ldr	w0, [x0, #28]
    66c4:	cmp	w0, #0x2
    66c8:	cset	w0, ne  // ne = any
    66cc:	and	w0, w0, #0xff
    66d0:	and	x0, x0, #0xff
    66d4:	cmp	x0, #0x0
    66d8:	b.eq	6704 <elf_begin@@ELFUTILS_1.0+0x240>  // b.none
    66dc:	ldr	x0, [sp, #16]
    66e0:	ldr	w0, [x0, #28]
    66e4:	cmp	w0, #0x9
    66e8:	cset	w0, ne  // ne = any
    66ec:	and	w0, w0, #0xff
    66f0:	and	x0, x0, #0xff
    66f4:	cmp	x0, #0x0
    66f8:	b.eq	6704 <elf_begin@@ELFUTILS_1.0+0x240>  // b.none
    66fc:	mov	w0, #0x1                   	// #1
    6700:	b	6708 <elf_begin@@ELFUTILS_1.0+0x244>
    6704:	mov	w0, #0x0                   	// #0
    6708:	cmp	w0, #0x0
    670c:	b.eq	6738 <elf_begin@@ELFUTILS_1.0+0x274>  // b.none
    6710:	ldr	x0, [sp, #16]
    6714:	ldr	w0, [x0, #28]
    6718:	cmp	w0, #0x3
    671c:	cset	w0, ne  // ne = any
    6720:	and	w0, w0, #0xff
    6724:	and	x0, x0, #0xff
    6728:	cmp	x0, #0x0
    672c:	b.eq	6738 <elf_begin@@ELFUTILS_1.0+0x274>  // b.none
    6730:	mov	w0, #0x1                   	// #1
    6734:	b	673c <elf_begin@@ELFUTILS_1.0+0x278>
    6738:	mov	w0, #0x0                   	// #0
    673c:	cmp	w0, #0x0
    6740:	b.eq	6774 <elf_begin@@ELFUTILS_1.0+0x2b0>  // b.none
    6744:	ldr	x0, [sp, #16]
    6748:	ldr	w0, [x0, #28]
    674c:	cmp	w0, #0xa
    6750:	cset	w0, ne  // ne = any
    6754:	and	w0, w0, #0xff
    6758:	and	x0, x0, #0xff
    675c:	cmp	x0, #0x0
    6760:	b.eq	6774 <elf_begin@@ELFUTILS_1.0+0x2b0>  // b.none
    6764:	mov	w0, #0xd                   	// #13
    6768:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    676c:	str	xzr, [sp, #40]
    6770:	b	67d0 <elf_begin@@ELFUTILS_1.0+0x30c>
    6774:	ldr	x2, [sp, #16]
    6778:	ldr	w1, [sp, #24]
    677c:	ldr	w0, [sp, #28]
    6780:	bl	6498 <elf_fill@@ELFUTILS_1.0+0x2acc>
    6784:	str	x0, [sp, #40]
    6788:	b	67d0 <elf_begin@@ELFUTILS_1.0+0x30c>
    678c:	mov	x4, #0x0                   	// #0
    6790:	ldr	w3, [sp, #24]
    6794:	mov	x2, #0xffffffffffffffff    	// #-1
    6798:	mov	x1, #0x0                   	// #0
    679c:	ldr	w0, [sp, #28]
    67a0:	bl	55c8 <elf_fill@@ELFUTILS_1.0+0x1bfc>
    67a4:	str	x0, [sp, #40]
    67a8:	b	67d0 <elf_begin@@ELFUTILS_1.0+0x30c>
    67ac:	ldr	w1, [sp, #24]
    67b0:	ldr	w0, [sp, #28]
    67b4:	bl	6414 <elf_fill@@ELFUTILS_1.0+0x2a48>
    67b8:	str	x0, [sp, #40]
    67bc:	b	67d0 <elf_begin@@ELFUTILS_1.0+0x30c>
    67c0:	mov	w0, #0xd                   	// #13
    67c4:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    67c8:	str	xzr, [sp, #40]
    67cc:	nop
    67d0:	ldr	x0, [sp, #40]
    67d4:	ldp	x29, x30, [sp], #48
    67d8:	ret

00000000000067dc <elf_next@@ELFUTILS_1.0>:
    67dc:	stp	x29, x30, [sp, #-48]!
    67e0:	mov	x29, sp
    67e4:	str	x0, [sp, #24]
    67e8:	ldr	x0, [sp, #24]
    67ec:	cmp	x0, #0x0
    67f0:	b.eq	6804 <elf_next@@ELFUTILS_1.0+0x28>  // b.none
    67f4:	ldr	x0, [sp, #24]
    67f8:	ldr	x0, [x0, #8]
    67fc:	cmp	x0, #0x0
    6800:	b.ne	680c <elf_next@@ELFUTILS_1.0+0x30>  // b.any
    6804:	mov	w0, #0x0                   	// #0
    6808:	b	68b4 <elf_next@@ELFUTILS_1.0+0xd8>
    680c:	ldr	x0, [sp, #24]
    6810:	ldr	x0, [x0, #8]
    6814:	str	x0, [sp, #40]
    6818:	ldr	x0, [sp, #40]
    681c:	ldr	w0, [x0, #24]
    6820:	cmp	w0, #0x1
    6824:	b.eq	6848 <elf_next@@ELFUTILS_1.0+0x6c>  // b.none
    6828:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    682c:	add	x3, x0, #0x380
    6830:	mov	w2, #0x35                  	// #53
    6834:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    6838:	add	x1, x0, #0x350
    683c:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    6840:	add	x0, x0, #0x360
    6844:	bl	33d0 <__assert_fail@plt>
    6848:	ldr	x0, [sp, #40]
    684c:	ldr	x0, [x0, #112]
    6850:	mov	x1, x0
    6854:	ldr	x0, [sp, #40]
    6858:	ldr	x0, [x0, #152]
    685c:	add	x0, x0, #0x1
    6860:	and	x0, x0, #0xfffffffffffffffe
    6864:	add	x0, x1, x0
    6868:	add	x0, x0, #0x3c
    686c:	mov	x1, x0
    6870:	ldr	x0, [sp, #40]
    6874:	str	x1, [x0, #112]
    6878:	ldr	x0, [sp, #40]
    687c:	bl	5b10 <elf_fill@@ELFUTILS_1.0+0x2144>
    6880:	cmp	w0, #0x0
    6884:	b.ne	6894 <elf_next@@ELFUTILS_1.0+0xb8>  // b.any
    6888:	ldr	x0, [sp, #24]
    688c:	ldr	w0, [x0, #28]
    6890:	b	6898 <elf_next@@ELFUTILS_1.0+0xbc>
    6894:	mov	w0, #0x0                   	// #0
    6898:	str	w0, [sp, #36]
    689c:	ldr	w0, [sp, #36]
    68a0:	cmp	w0, #0x0
    68a4:	b.ne	68b0 <elf_next@@ELFUTILS_1.0+0xd4>  // b.any
    68a8:	ldr	x0, [sp, #40]
    68ac:	str	xzr, [x0, #120]
    68b0:	ldr	w0, [sp, #36]
    68b4:	ldp	x29, x30, [sp], #48
    68b8:	ret

00000000000068bc <elf_rand@@ELFUTILS_1.0>:
    68bc:	stp	x29, x30, [sp, #-32]!
    68c0:	mov	x29, sp
    68c4:	str	x0, [sp, #24]
    68c8:	str	x1, [sp, #16]
    68cc:	ldr	x0, [sp, #24]
    68d0:	cmp	x0, #0x0
    68d4:	b.eq	68e8 <elf_rand@@ELFUTILS_1.0+0x2c>  // b.none
    68d8:	ldr	x0, [sp, #24]
    68dc:	ldr	w0, [x0, #24]
    68e0:	cmp	w0, #0x1
    68e4:	b.eq	68f0 <elf_rand@@ELFUTILS_1.0+0x34>  // b.none
    68e8:	mov	x0, #0x0                   	// #0
    68ec:	b	6934 <elf_rand@@ELFUTILS_1.0+0x78>
    68f0:	ldr	x0, [sp, #24]
    68f4:	ldr	x0, [x0, #40]
    68f8:	mov	x1, x0
    68fc:	ldr	x0, [sp, #16]
    6900:	add	x0, x1, x0
    6904:	mov	x1, x0
    6908:	ldr	x0, [sp, #24]
    690c:	str	x1, [x0, #112]
    6910:	ldr	x0, [sp, #24]
    6914:	bl	5b10 <elf_fill@@ELFUTILS_1.0+0x2144>
    6918:	cmp	w0, #0x0
    691c:	b.eq	6930 <elf_rand@@ELFUTILS_1.0+0x74>  // b.none
    6920:	ldr	x0, [sp, #24]
    6924:	str	xzr, [x0, #120]
    6928:	mov	x0, #0x0                   	// #0
    692c:	b	6934 <elf_rand@@ELFUTILS_1.0+0x78>
    6930:	ldr	x0, [sp, #16]
    6934:	ldp	x29, x30, [sp], #32
    6938:	ret

000000000000693c <elf_end@@ELFUTILS_1.0>:
    693c:	stp	x29, x30, [sp, #-128]!
    6940:	mov	x29, sp
    6944:	str	x0, [sp, #24]
    6948:	ldr	x0, [sp, #24]
    694c:	cmp	x0, #0x0
    6950:	b.ne	695c <elf_end@@ELFUTILS_1.0+0x20>  // b.any
    6954:	mov	w0, #0x0                   	// #0
    6958:	b	6dd0 <elf_end@@ELFUTILS_1.0+0x494>
    695c:	ldr	x0, [sp, #24]
    6960:	ldr	w0, [x0, #60]
    6964:	cmp	w0, #0x0
    6968:	b.eq	69a4 <elf_end@@ELFUTILS_1.0+0x68>  // b.none
    696c:	ldr	x0, [sp, #24]
    6970:	ldr	w0, [x0, #60]
    6974:	sub	w1, w0, #0x1
    6978:	ldr	x0, [sp, #24]
    697c:	str	w1, [x0, #60]
    6980:	ldr	x0, [sp, #24]
    6984:	ldr	w0, [x0, #60]
    6988:	cmp	w0, #0x0
    698c:	b.eq	69a4 <elf_end@@ELFUTILS_1.0+0x68>  // b.none
    6990:	ldr	x0, [sp, #24]
    6994:	ldr	w0, [x0, #60]
    6998:	str	w0, [sp, #84]
    699c:	ldr	w0, [sp, #84]
    69a0:	b	6dd0 <elf_end@@ELFUTILS_1.0+0x494>
    69a4:	ldr	x0, [sp, #24]
    69a8:	ldr	w0, [x0, #24]
    69ac:	cmp	w0, #0x1
    69b0:	b.ne	69f0 <elf_end@@ELFUTILS_1.0+0xb4>  // b.any
    69b4:	ldr	x0, [sp, #24]
    69b8:	ldr	x0, [x0, #80]
    69bc:	cmn	x0, #0x1
    69c0:	b.eq	69d0 <elf_end@@ELFUTILS_1.0+0x94>  // b.none
    69c4:	ldr	x0, [sp, #24]
    69c8:	ldr	x0, [x0, #80]
    69cc:	bl	32a0 <free@plt>
    69d0:	ldr	x0, [sp, #24]
    69d4:	str	xzr, [x0, #80]
    69d8:	ldr	x0, [sp, #24]
    69dc:	ldr	x0, [x0, #72]
    69e0:	cmp	x0, #0x0
    69e4:	b.eq	69f0 <elf_end@@ELFUTILS_1.0+0xb4>  // b.none
    69e8:	mov	w0, #0x0                   	// #0
    69ec:	b	6dd0 <elf_end@@ELFUTILS_1.0+0x494>
    69f0:	ldr	x0, [sp, #24]
    69f4:	ldr	x0, [x0, #8]
    69f8:	str	x0, [sp, #72]
    69fc:	ldr	x0, [sp, #72]
    6a00:	cmp	x0, #0x0
    6a04:	b.eq	6a70 <elf_end@@ELFUTILS_1.0+0x134>  // b.none
    6a08:	ldr	x0, [sp, #72]
    6a0c:	ldr	x0, [x0, #72]
    6a10:	ldr	x1, [sp, #24]
    6a14:	cmp	x1, x0
    6a18:	b.ne	6a30 <elf_end@@ELFUTILS_1.0+0xf4>  // b.any
    6a1c:	ldr	x0, [sp, #24]
    6a20:	ldr	x1, [x0, #16]
    6a24:	ldr	x0, [sp, #72]
    6a28:	str	x1, [x0, #72]
    6a2c:	b	6a70 <elf_end@@ELFUTILS_1.0+0x134>
    6a30:	ldr	x0, [sp, #72]
    6a34:	ldr	x0, [x0, #72]
    6a38:	str	x0, [sp, #120]
    6a3c:	b	6a4c <elf_end@@ELFUTILS_1.0+0x110>
    6a40:	ldr	x0, [sp, #120]
    6a44:	ldr	x0, [x0, #16]
    6a48:	str	x0, [sp, #120]
    6a4c:	ldr	x0, [sp, #120]
    6a50:	ldr	x0, [x0, #16]
    6a54:	ldr	x1, [sp, #24]
    6a58:	cmp	x1, x0
    6a5c:	b.ne	6a40 <elf_end@@ELFUTILS_1.0+0x104>  // b.any
    6a60:	ldr	x0, [sp, #24]
    6a64:	ldr	x1, [x0, #16]
    6a68:	ldr	x0, [sp, #120]
    6a6c:	str	x1, [x0, #16]
    6a70:	ldr	x0, [sp, #24]
    6a74:	ldr	w0, [x0, #24]
    6a78:	cmp	w0, #0x1
    6a7c:	b.eq	6a8c <elf_end@@ELFUTILS_1.0+0x150>  // b.none
    6a80:	cmp	w0, #0x3
    6a84:	b.eq	6aac <elf_end@@ELFUTILS_1.0+0x170>  // b.none
    6a88:	b	6d2c <elf_end@@ELFUTILS_1.0+0x3f0>
    6a8c:	ldr	x0, [sp, #24]
    6a90:	ldr	x0, [x0, #96]
    6a94:	cmp	x0, #0x0
    6a98:	b.eq	6d20 <elf_end@@ELFUTILS_1.0+0x3e4>  // b.none
    6a9c:	ldr	x0, [sp, #24]
    6aa0:	ldr	x0, [x0, #96]
    6aa4:	bl	32a0 <free@plt>
    6aa8:	b	6d20 <elf_end@@ELFUTILS_1.0+0x3e4>
    6aac:	ldr	x0, [sp, #24]
    6ab0:	ldr	x0, [x0, #104]
    6ab4:	str	x0, [sp, #112]
    6ab8:	b	6af8 <elf_end@@ELFUTILS_1.0+0x1bc>
    6abc:	ldr	x0, [sp, #112]
    6ac0:	ldr	x0, [x0, #48]
    6ac4:	str	x0, [sp, #40]
    6ac8:	ldr	x0, [sp, #112]
    6acc:	ldr	w0, [x0, #204]
    6ad0:	and	w0, w0, #0x80
    6ad4:	cmp	w0, #0x0
    6ad8:	b.eq	6ae8 <elf_end@@ELFUTILS_1.0+0x1ac>  // b.none
    6adc:	ldr	x0, [sp, #112]
    6ae0:	ldr	x0, [x0]
    6ae4:	bl	32a0 <free@plt>
    6ae8:	ldr	x0, [sp, #112]
    6aec:	bl	32a0 <free@plt>
    6af0:	ldr	x0, [sp, #40]
    6af4:	str	x0, [sp, #112]
    6af8:	ldr	x0, [sp, #112]
    6afc:	cmp	x0, #0x0
    6b00:	b.ne	6abc <elf_end@@ELFUTILS_1.0+0x180>  // b.any
    6b04:	ldr	x0, [sp, #24]
    6b08:	add	x0, x0, #0xc8
    6b0c:	str	x0, [sp, #104]
    6b10:	ldr	x0, [sp, #104]
    6b14:	ldr	w0, [x0, #4]
    6b18:	mov	w0, w0
    6b1c:	str	x0, [sp, #96]
    6b20:	b	6c4c <elf_end@@ELFUTILS_1.0+0x310>
    6b24:	ldr	x1, [sp, #96]
    6b28:	mov	x0, x1
    6b2c:	lsl	x0, x0, #1
    6b30:	add	x0, x0, x1
    6b34:	lsl	x0, x0, #2
    6b38:	add	x0, x0, x1
    6b3c:	lsl	x0, x0, #4
    6b40:	add	x0, x0, #0x10
    6b44:	ldr	x1, [sp, #104]
    6b48:	add	x0, x1, x0
    6b4c:	str	x0, [sp, #56]
    6b50:	ldr	x0, [sp, #56]
    6b54:	ldr	w0, [x0, #152]
    6b58:	and	w0, w0, #0x80
    6b5c:	cmp	w0, #0x0
    6b60:	b.eq	6b70 <elf_end@@ELFUTILS_1.0+0x234>  // b.none
    6b64:	ldr	x0, [sp, #56]
    6b68:	ldr	x0, [x0, #144]
    6b6c:	bl	32a0 <free@plt>
    6b70:	ldr	x0, [sp, #56]
    6b74:	ldr	x1, [x0, #176]
    6b78:	ldr	x0, [sp, #56]
    6b7c:	ldr	x0, [x0, #160]
    6b80:	cmp	x1, x0
    6b84:	b.eq	6b94 <elf_end@@ELFUTILS_1.0+0x258>  // b.none
    6b88:	ldr	x0, [sp, #56]
    6b8c:	ldr	x0, [x0, #176]
    6b90:	bl	32a0 <free@plt>
    6b94:	ldr	x0, [sp, #56]
    6b98:	ldr	x1, [x0, #168]
    6b9c:	ldr	x0, [sp, #56]
    6ba0:	ldr	x0, [x0, #160]
    6ba4:	cmp	x1, x0
    6ba8:	b.eq	6bb8 <elf_end@@ELFUTILS_1.0+0x27c>  // b.none
    6bac:	ldr	x0, [sp, #56]
    6bb0:	ldr	x0, [x0, #168]
    6bb4:	bl	32a0 <free@plt>
    6bb8:	ldr	x0, [sp, #24]
    6bbc:	ldr	x0, [x0]
    6bc0:	cmp	x0, #0x0
    6bc4:	b.eq	6bf4 <elf_end@@ELFUTILS_1.0+0x2b8>  // b.none
    6bc8:	ldr	x0, [sp, #56]
    6bcc:	ldr	x1, [x0, #160]
    6bd0:	ldr	x0, [sp, #56]
    6bd4:	ldr	x0, [x0, #176]
    6bd8:	cmp	x1, x0
    6bdc:	b.eq	6bf4 <elf_end@@ELFUTILS_1.0+0x2b8>  // b.none
    6be0:	ldr	x0, [sp, #56]
    6be4:	ldr	w0, [x0, #156]
    6be8:	and	w0, w0, #0x80
    6bec:	cmp	w0, #0x0
    6bf0:	b.eq	6c00 <elf_end@@ELFUTILS_1.0+0x2c4>  // b.none
    6bf4:	ldr	x0, [sp, #56]
    6bf8:	ldr	x0, [x0, #160]
    6bfc:	bl	32a0 <free@plt>
    6c00:	ldr	x0, [sp, #56]
    6c04:	ldr	x0, [x0, #48]
    6c08:	str	x0, [sp, #88]
    6c0c:	b	6c40 <elf_end@@ELFUTILS_1.0+0x304>
    6c10:	ldr	x0, [sp, #88]
    6c14:	str	x0, [sp, #48]
    6c18:	ldr	x0, [sp, #88]
    6c1c:	ldr	x0, [x0, #48]
    6c20:	str	x0, [sp, #88]
    6c24:	ldr	x0, [sp, #48]
    6c28:	ldr	w0, [x0, #56]
    6c2c:	and	w0, w0, #0x80
    6c30:	cmp	w0, #0x0
    6c34:	b.eq	6c40 <elf_end@@ELFUTILS_1.0+0x304>  // b.none
    6c38:	ldr	x0, [sp, #48]
    6c3c:	bl	32a0 <free@plt>
    6c40:	ldr	x0, [sp, #88]
    6c44:	cmp	x0, #0x0
    6c48:	b.ne	6c10 <elf_end@@ELFUTILS_1.0+0x2d4>  // b.any
    6c4c:	ldr	x0, [sp, #96]
    6c50:	sub	x1, x0, #0x1
    6c54:	str	x1, [sp, #96]
    6c58:	cmp	x0, #0x0
    6c5c:	b.ne	6b24 <elf_end@@ELFUTILS_1.0+0x1e8>  // b.any
    6c60:	ldr	x0, [sp, #104]
    6c64:	str	x0, [sp, #64]
    6c68:	ldr	x0, [sp, #104]
    6c6c:	ldr	x0, [x0, #8]
    6c70:	str	x0, [sp, #104]
    6c74:	ldr	x0, [sp, #104]
    6c78:	cmp	x0, #0x0
    6c7c:	b.eq	6cb8 <elf_end@@ELFUTILS_1.0+0x37c>  // b.none
    6c80:	ldr	x0, [sp, #64]
    6c84:	ldr	w1, [x0]
    6c88:	ldr	x0, [sp, #64]
    6c8c:	ldr	w0, [x0, #4]
    6c90:	cmp	w1, w0
    6c94:	b.eq	6cb8 <elf_end@@ELFUTILS_1.0+0x37c>  // b.none
    6c98:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    6c9c:	add	x3, x0, #0x3c8
    6ca0:	mov	w2, #0xbd                  	// #189
    6ca4:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    6ca8:	add	x1, x0, #0x390
    6cac:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    6cb0:	add	x0, x0, #0x3a0
    6cb4:	bl	33d0 <__assert_fail@plt>
    6cb8:	ldr	x0, [sp, #24]
    6cbc:	add	x0, x0, #0xc8
    6cc0:	ldr	x1, [sp, #64]
    6cc4:	cmp	x1, x0
    6cc8:	b.eq	6cd4 <elf_end@@ELFUTILS_1.0+0x398>  // b.none
    6ccc:	ldr	x0, [sp, #64]
    6cd0:	bl	32a0 <free@plt>
    6cd4:	ldr	x0, [sp, #104]
    6cd8:	cmp	x0, #0x0
    6cdc:	b.ne	6b10 <elf_end@@ELFUTILS_1.0+0x1d4>  // b.any
    6ce0:	ldr	x0, [sp, #24]
    6ce4:	ldr	w0, [x0, #124]
    6ce8:	cmp	w0, #0x0
    6cec:	b.eq	6cfc <elf_end@@ELFUTILS_1.0+0x3c0>  // b.none
    6cf0:	ldr	x0, [sp, #24]
    6cf4:	ldr	x0, [x0, #80]
    6cf8:	bl	32a0 <free@plt>
    6cfc:	ldr	x0, [sp, #24]
    6d00:	ldr	w0, [x0, #120]
    6d04:	and	w0, w0, #0x80
    6d08:	cmp	w0, #0x0
    6d0c:	b.eq	6d28 <elf_end@@ELFUTILS_1.0+0x3ec>  // b.none
    6d10:	ldr	x0, [sp, #24]
    6d14:	ldr	x0, [x0, #88]
    6d18:	bl	32a0 <free@plt>
    6d1c:	b	6d28 <elf_end@@ELFUTILS_1.0+0x3ec>
    6d20:	nop
    6d24:	b	6d2c <elf_end@@ELFUTILS_1.0+0x3f0>
    6d28:	nop
    6d2c:	ldr	x0, [sp, #24]
    6d30:	ldr	x0, [x0]
    6d34:	cmp	x0, #0x0
    6d38:	b.eq	6d9c <elf_end@@ELFUTILS_1.0+0x460>  // b.none
    6d3c:	ldr	x0, [sp, #72]
    6d40:	cmp	x0, #0x0
    6d44:	b.ne	6d9c <elf_end@@ELFUTILS_1.0+0x460>  // b.any
    6d48:	ldr	x0, [sp, #24]
    6d4c:	ldr	w0, [x0, #56]
    6d50:	and	w0, w0, #0x80
    6d54:	cmp	w0, #0x0
    6d58:	b.eq	6d6c <elf_end@@ELFUTILS_1.0+0x430>  // b.none
    6d5c:	ldr	x0, [sp, #24]
    6d60:	ldr	x0, [x0]
    6d64:	bl	32a0 <free@plt>
    6d68:	b	6d9c <elf_end@@ELFUTILS_1.0+0x460>
    6d6c:	ldr	x0, [sp, #24]
    6d70:	ldr	w0, [x0, #56]
    6d74:	and	w0, w0, #0x40
    6d78:	cmp	w0, #0x0
    6d7c:	b.eq	6d9c <elf_end@@ELFUTILS_1.0+0x460>  // b.none
    6d80:	ldr	x0, [sp, #24]
    6d84:	ldr	x2, [x0]
    6d88:	ldr	x0, [sp, #24]
    6d8c:	ldr	x0, [x0, #48]
    6d90:	mov	x1, x0
    6d94:	mov	x0, x2
    6d98:	bl	3350 <munmap@plt>
    6d9c:	ldr	x0, [sp, #24]
    6da0:	bl	32a0 <free@plt>
    6da4:	ldr	x0, [sp, #72]
    6da8:	cmp	x0, #0x0
    6dac:	b.eq	6dcc <elf_end@@ELFUTILS_1.0+0x490>  // b.none
    6db0:	ldr	x0, [sp, #72]
    6db4:	ldr	w0, [x0, #60]
    6db8:	cmp	w0, #0x0
    6dbc:	b.ne	6dcc <elf_end@@ELFUTILS_1.0+0x490>  // b.any
    6dc0:	ldr	x0, [sp, #72]
    6dc4:	bl	693c <elf_end@@ELFUTILS_1.0>
    6dc8:	b	6dd0 <elf_end@@ELFUTILS_1.0+0x494>
    6dcc:	mov	w0, #0x0                   	// #0
    6dd0:	ldp	x29, x30, [sp], #128
    6dd4:	ret

0000000000006dd8 <elf_kind@@ELFUTILS_1.0>:
    6dd8:	sub	sp, sp, #0x10
    6ddc:	str	x0, [sp, #8]
    6de0:	ldr	x0, [sp, #8]
    6de4:	cmp	x0, #0x0
    6de8:	b.eq	6df8 <elf_kind@@ELFUTILS_1.0+0x20>  // b.none
    6dec:	ldr	x0, [sp, #8]
    6df0:	ldr	w0, [x0, #24]
    6df4:	b	6dfc <elf_kind@@ELFUTILS_1.0+0x24>
    6df8:	mov	w0, #0x0                   	// #0
    6dfc:	add	sp, sp, #0x10
    6e00:	ret

0000000000006e04 <gelf_getclass@@ELFUTILS_1.0>:
    6e04:	sub	sp, sp, #0x10
    6e08:	str	x0, [sp, #8]
    6e0c:	ldr	x0, [sp, #8]
    6e10:	cmp	x0, #0x0
    6e14:	b.eq	6e34 <gelf_getclass@@ELFUTILS_1.0+0x30>  // b.none
    6e18:	ldr	x0, [sp, #8]
    6e1c:	ldr	w0, [x0, #24]
    6e20:	cmp	w0, #0x3
    6e24:	b.ne	6e34 <gelf_getclass@@ELFUTILS_1.0+0x30>  // b.any
    6e28:	ldr	x0, [sp, #8]
    6e2c:	ldr	w0, [x0, #32]
    6e30:	b	6e38 <gelf_getclass@@ELFUTILS_1.0+0x34>
    6e34:	mov	w0, #0x0                   	// #0
    6e38:	add	sp, sp, #0x10
    6e3c:	ret

0000000000006e40 <elf_getbase@@ELFUTILS_1.0>:
    6e40:	sub	sp, sp, #0x10
    6e44:	str	x0, [sp, #8]
    6e48:	ldr	x0, [sp, #8]
    6e4c:	cmp	x0, #0x0
    6e50:	b.eq	6e60 <elf_getbase@@ELFUTILS_1.0+0x20>  // b.none
    6e54:	ldr	x0, [sp, #8]
    6e58:	ldr	x0, [x0, #40]
    6e5c:	b	6e64 <elf_getbase@@ELFUTILS_1.0+0x24>
    6e60:	mov	x0, #0xffffffffffffffff    	// #-1
    6e64:	add	sp, sp, #0x10
    6e68:	ret

0000000000006e6c <elf_getident@@ELFUTILS_1.0>:
    6e6c:	sub	sp, sp, #0x10
    6e70:	str	x0, [sp, #8]
    6e74:	str	x1, [sp]
    6e78:	ldr	x0, [sp, #8]
    6e7c:	cmp	x0, #0x0
    6e80:	b.eq	6e94 <elf_getident@@ELFUTILS_1.0+0x28>  // b.none
    6e84:	ldr	x0, [sp, #8]
    6e88:	ldr	w0, [x0, #24]
    6e8c:	cmp	w0, #0x3
    6e90:	b.eq	6eb0 <elf_getident@@ELFUTILS_1.0+0x44>  // b.none
    6e94:	ldr	x0, [sp]
    6e98:	cmp	x0, #0x0
    6e9c:	b.eq	6ea8 <elf_getident@@ELFUTILS_1.0+0x3c>  // b.none
    6ea0:	ldr	x0, [sp]
    6ea4:	str	xzr, [x0]
    6ea8:	mov	x0, #0x0                   	// #0
    6eac:	b	6ed0 <elf_getident@@ELFUTILS_1.0+0x64>
    6eb0:	ldr	x0, [sp]
    6eb4:	cmp	x0, #0x0
    6eb8:	b.eq	6ec8 <elf_getident@@ELFUTILS_1.0+0x5c>  // b.none
    6ebc:	ldr	x0, [sp]
    6ec0:	mov	x1, #0x10                  	// #16
    6ec4:	str	x1, [x0]
    6ec8:	ldr	x0, [sp, #8]
    6ecc:	ldr	x0, [x0, #72]
    6ed0:	add	sp, sp, #0x10
    6ed4:	ret

0000000000006ed8 <elf32_fsize@@ELFUTILS_1.0>:
    6ed8:	stp	x29, x30, [sp, #-32]!
    6edc:	mov	x29, sp
    6ee0:	str	w0, [sp, #28]
    6ee4:	str	x1, [sp, #16]
    6ee8:	str	w2, [sp, #24]
    6eec:	ldr	w0, [sp, #24]
    6ef0:	cmp	w0, #0x1
    6ef4:	cset	w0, ne  // ne = any
    6ef8:	and	w0, w0, #0xff
    6efc:	and	x0, x0, #0xff
    6f00:	cmp	x0, #0x0
    6f04:	b.eq	6f18 <elf32_fsize@@ELFUTILS_1.0+0x40>  // b.none
    6f08:	mov	w0, #0x2                   	// #2
    6f0c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    6f10:	mov	x0, #0x0                   	// #0
    6f14:	b	6f5c <elf32_fsize@@ELFUTILS_1.0+0x84>
    6f18:	ldr	w0, [sp, #28]
    6f1c:	cmp	w0, #0x1a
    6f20:	cset	w0, hi  // hi = pmore
    6f24:	and	w0, w0, #0xff
    6f28:	and	x0, x0, #0xff
    6f2c:	cmp	x0, #0x0
    6f30:	b.eq	6f44 <elf32_fsize@@ELFUTILS_1.0+0x6c>  // b.none
    6f34:	mov	w0, #0x3                   	// #3
    6f38:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    6f3c:	mov	x0, #0x0                   	// #0
    6f40:	b	6f5c <elf32_fsize@@ELFUTILS_1.0+0x84>
    6f44:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    6f48:	add	x0, x0, #0x3d0
    6f4c:	ldr	w1, [sp, #28]
    6f50:	ldr	x1, [x0, x1, lsl #3]
    6f54:	ldr	x0, [sp, #16]
    6f58:	mul	x0, x1, x0
    6f5c:	ldp	x29, x30, [sp], #32
    6f60:	ret

0000000000006f64 <elf64_fsize@@ELFUTILS_1.0>:
    6f64:	stp	x29, x30, [sp, #-32]!
    6f68:	mov	x29, sp
    6f6c:	str	w0, [sp, #28]
    6f70:	str	x1, [sp, #16]
    6f74:	str	w2, [sp, #24]
    6f78:	ldr	w0, [sp, #24]
    6f7c:	cmp	w0, #0x1
    6f80:	cset	w0, ne  // ne = any
    6f84:	and	w0, w0, #0xff
    6f88:	and	x0, x0, #0xff
    6f8c:	cmp	x0, #0x0
    6f90:	b.eq	6fa4 <elf64_fsize@@ELFUTILS_1.0+0x40>  // b.none
    6f94:	mov	w0, #0x2                   	// #2
    6f98:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    6f9c:	mov	x0, #0x0                   	// #0
    6fa0:	b	6fec <elf64_fsize@@ELFUTILS_1.0+0x88>
    6fa4:	ldr	w0, [sp, #28]
    6fa8:	cmp	w0, #0x1a
    6fac:	cset	w0, hi  // hi = pmore
    6fb0:	and	w0, w0, #0xff
    6fb4:	and	x0, x0, #0xff
    6fb8:	cmp	x0, #0x0
    6fbc:	b.eq	6fd0 <elf64_fsize@@ELFUTILS_1.0+0x6c>  // b.none
    6fc0:	mov	w0, #0x3                   	// #3
    6fc4:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    6fc8:	mov	x0, #0x0                   	// #0
    6fcc:	b	6fec <elf64_fsize@@ELFUTILS_1.0+0x88>
    6fd0:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    6fd4:	add	x0, x0, #0x3d0
    6fd8:	ldr	w1, [sp, #28]
    6fdc:	add	x1, x1, #0x1b
    6fe0:	ldr	x1, [x0, x1, lsl #3]
    6fe4:	ldr	x0, [sp, #16]
    6fe8:	mul	x0, x1, x0
    6fec:	ldp	x29, x30, [sp], #32
    6ff0:	ret

0000000000006ff4 <gelf_fsize@@ELFUTILS_1.0>:
    6ff4:	stp	x29, x30, [sp, #-48]!
    6ff8:	mov	x29, sp
    6ffc:	str	x0, [sp, #40]
    7000:	str	w1, [sp, #36]
    7004:	str	x2, [sp, #24]
    7008:	str	w3, [sp, #32]
    700c:	ldr	x0, [sp, #40]
    7010:	cmp	x0, #0x0
    7014:	b.ne	7020 <gelf_fsize@@ELFUTILS_1.0+0x2c>  // b.any
    7018:	mov	x0, #0x0                   	// #0
    701c:	b	7098 <gelf_fsize@@ELFUTILS_1.0+0xa4>
    7020:	ldr	w0, [sp, #32]
    7024:	cmp	w0, #0x1
    7028:	b.eq	703c <gelf_fsize@@ELFUTILS_1.0+0x48>  // b.none
    702c:	mov	w0, #0x2                   	// #2
    7030:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    7034:	mov	x0, #0x0                   	// #0
    7038:	b	7098 <gelf_fsize@@ELFUTILS_1.0+0xa4>
    703c:	ldr	w0, [sp, #36]
    7040:	cmp	w0, #0x1a
    7044:	b.ls	7058 <gelf_fsize@@ELFUTILS_1.0+0x64>  // b.plast
    7048:	mov	w0, #0x3                   	// #3
    704c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    7050:	mov	x0, #0x0                   	// #0
    7054:	b	7098 <gelf_fsize@@ELFUTILS_1.0+0xa4>
    7058:	ldr	x0, [sp, #40]
    705c:	ldr	w0, [x0, #32]
    7060:	sub	w1, w0, #0x1
    7064:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    7068:	add	x2, x0, #0x3d0
    706c:	ldr	w3, [sp, #36]
    7070:	mov	w1, w1
    7074:	mov	x0, x1
    7078:	lsl	x0, x0, #3
    707c:	sub	x0, x0, x1
    7080:	lsl	x0, x0, #2
    7084:	sub	x0, x0, x1
    7088:	add	x0, x0, x3
    708c:	ldr	x1, [x2, x0, lsl #3]
    7090:	ldr	x0, [sp, #24]
    7094:	mul	x0, x1, x0
    7098:	ldp	x29, x30, [sp], #48
    709c:	ret

00000000000070a0 <elf32_xlatetof@@ELFUTILS_1.0>:
    70a0:	stp	x29, x30, [sp, #-64]!
    70a4:	mov	x29, sp
    70a8:	str	x0, [sp, #40]
    70ac:	str	x1, [sp, #32]
    70b0:	str	w2, [sp, #28]
    70b4:	ldr	x0, [sp, #32]
    70b8:	ldr	w1, [x0, #8]
    70bc:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    70c0:	add	x0, x0, #0x3d0
    70c4:	mov	w1, w1
    70c8:	ldr	x0, [x0, x1, lsl #3]
    70cc:	str	x0, [sp, #56]
    70d0:	ldr	x0, [sp, #32]
    70d4:	ldr	x0, [x0, #16]
    70d8:	ldr	x1, [sp, #56]
    70dc:	udiv	x2, x0, x1
    70e0:	ldr	x1, [sp, #56]
    70e4:	mul	x1, x2, x1
    70e8:	sub	x0, x0, x1
    70ec:	cmp	x0, #0x0
    70f0:	b.eq	7104 <elf32_xlatetof@@ELFUTILS_1.0+0x64>  // b.none
    70f4:	mov	w0, #0x21                  	// #33
    70f8:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    70fc:	mov	x0, #0x0                   	// #0
    7100:	b	720c <elf32_xlatetof@@ELFUTILS_1.0+0x16c>
    7104:	ldr	x0, [sp, #32]
    7108:	ldr	x1, [x0, #16]
    710c:	ldr	x0, [sp, #40]
    7110:	ldr	x0, [x0, #16]
    7114:	cmp	x1, x0
    7118:	b.ls	712c <elf32_xlatetof@@ELFUTILS_1.0+0x8c>  // b.plast
    711c:	mov	w0, #0x6                   	// #6
    7120:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    7124:	mov	x0, #0x0                   	// #0
    7128:	b	720c <elf32_xlatetof@@ELFUTILS_1.0+0x16c>
    712c:	ldr	w0, [sp, #28]
    7130:	cmp	w0, #0x1
    7134:	b.eq	7154 <elf32_xlatetof@@ELFUTILS_1.0+0xb4>  // b.none
    7138:	ldr	w0, [sp, #28]
    713c:	cmp	w0, #0x2
    7140:	b.eq	7154 <elf32_xlatetof@@ELFUTILS_1.0+0xb4>  // b.none
    7144:	mov	w0, #0x7                   	// #7
    7148:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    714c:	mov	x0, #0x0                   	// #0
    7150:	b	720c <elf32_xlatetof@@ELFUTILS_1.0+0x16c>
    7154:	ldr	w0, [sp, #28]
    7158:	cmp	w0, #0x1
    715c:	b.ne	71a0 <elf32_xlatetof@@ELFUTILS_1.0+0x100>  // b.any
    7160:	ldr	x0, [sp, #32]
    7164:	ldr	x1, [x0]
    7168:	ldr	x0, [sp, #40]
    716c:	ldr	x0, [x0]
    7170:	cmp	x1, x0
    7174:	b.eq	71e8 <elf32_xlatetof@@ELFUTILS_1.0+0x148>  // b.none
    7178:	ldr	x0, [sp, #40]
    717c:	ldr	x3, [x0]
    7180:	ldr	x0, [sp, #32]
    7184:	ldr	x1, [x0]
    7188:	ldr	x0, [sp, #32]
    718c:	ldr	x0, [x0, #16]
    7190:	mov	x2, x0
    7194:	mov	x0, x3
    7198:	bl	30b0 <memmove@plt>
    719c:	b	71e8 <elf32_xlatetof@@ELFUTILS_1.0+0x148>
    71a0:	ldr	x0, [sp, #32]
    71a4:	ldr	w1, [x0, #8]
    71a8:	adrp	x0, 35000 <elf_compress_gnu@@ELFUTILS_1.7+0x1495c>
    71ac:	add	x0, x0, #0xbd8
    71b0:	mov	w1, w1
    71b4:	ldr	x0, [x0, x1, lsl #3]
    71b8:	str	x0, [sp, #48]
    71bc:	ldr	x0, [sp, #40]
    71c0:	ldr	x5, [x0]
    71c4:	ldr	x0, [sp, #32]
    71c8:	ldr	x1, [x0]
    71cc:	ldr	x0, [sp, #32]
    71d0:	ldr	x0, [x0, #16]
    71d4:	ldr	x4, [sp, #48]
    71d8:	mov	w3, #0x1                   	// #1
    71dc:	mov	x2, x0
    71e0:	mov	x0, x5
    71e4:	blr	x4
    71e8:	ldr	x0, [sp, #32]
    71ec:	ldr	w1, [x0, #8]
    71f0:	ldr	x0, [sp, #40]
    71f4:	str	w1, [x0, #8]
    71f8:	ldr	x0, [sp, #32]
    71fc:	ldr	x1, [x0, #16]
    7200:	ldr	x0, [sp, #40]
    7204:	str	x1, [x0, #16]
    7208:	ldr	x0, [sp, #40]
    720c:	ldp	x29, x30, [sp], #64
    7210:	ret

0000000000007214 <elf32_xlatetom@@ELFUTILS_1.0>:
    7214:	stp	x29, x30, [sp, #-64]!
    7218:	mov	x29, sp
    721c:	str	x0, [sp, #40]
    7220:	str	x1, [sp, #32]
    7224:	str	w2, [sp, #28]
    7228:	ldr	x0, [sp, #32]
    722c:	ldr	w1, [x0, #8]
    7230:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    7234:	add	x0, x0, #0x3d0
    7238:	mov	w1, w1
    723c:	ldr	x0, [x0, x1, lsl #3]
    7240:	str	x0, [sp, #56]
    7244:	ldr	x0, [sp, #32]
    7248:	ldr	w0, [x0, #8]
    724c:	cmp	w0, #0x13
    7250:	b.eq	7298 <elf32_xlatetom@@ELFUTILS_1.0+0x84>  // b.none
    7254:	ldr	x0, [sp, #32]
    7258:	ldr	w0, [x0, #8]
    725c:	cmp	w0, #0x1a
    7260:	b.eq	7298 <elf32_xlatetom@@ELFUTILS_1.0+0x84>  // b.none
    7264:	ldr	x0, [sp, #32]
    7268:	ldr	x0, [x0, #16]
    726c:	ldr	x1, [sp, #56]
    7270:	udiv	x2, x0, x1
    7274:	ldr	x1, [sp, #56]
    7278:	mul	x1, x2, x1
    727c:	sub	x0, x0, x1
    7280:	cmp	x0, #0x0
    7284:	b.eq	7298 <elf32_xlatetom@@ELFUTILS_1.0+0x84>  // b.none
    7288:	mov	w0, #0x21                  	// #33
    728c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    7290:	mov	x0, #0x0                   	// #0
    7294:	b	73a0 <elf32_xlatetom@@ELFUTILS_1.0+0x18c>
    7298:	ldr	x0, [sp, #32]
    729c:	ldr	x1, [x0, #16]
    72a0:	ldr	x0, [sp, #40]
    72a4:	ldr	x0, [x0, #16]
    72a8:	cmp	x1, x0
    72ac:	b.ls	72c0 <elf32_xlatetom@@ELFUTILS_1.0+0xac>  // b.plast
    72b0:	mov	w0, #0x6                   	// #6
    72b4:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    72b8:	mov	x0, #0x0                   	// #0
    72bc:	b	73a0 <elf32_xlatetom@@ELFUTILS_1.0+0x18c>
    72c0:	ldr	w0, [sp, #28]
    72c4:	cmp	w0, #0x1
    72c8:	b.eq	72e8 <elf32_xlatetom@@ELFUTILS_1.0+0xd4>  // b.none
    72cc:	ldr	w0, [sp, #28]
    72d0:	cmp	w0, #0x2
    72d4:	b.eq	72e8 <elf32_xlatetom@@ELFUTILS_1.0+0xd4>  // b.none
    72d8:	mov	w0, #0x7                   	// #7
    72dc:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    72e0:	mov	x0, #0x0                   	// #0
    72e4:	b	73a0 <elf32_xlatetom@@ELFUTILS_1.0+0x18c>
    72e8:	ldr	w0, [sp, #28]
    72ec:	cmp	w0, #0x1
    72f0:	b.ne	7334 <elf32_xlatetom@@ELFUTILS_1.0+0x120>  // b.any
    72f4:	ldr	x0, [sp, #32]
    72f8:	ldr	x1, [x0]
    72fc:	ldr	x0, [sp, #40]
    7300:	ldr	x0, [x0]
    7304:	cmp	x1, x0
    7308:	b.eq	737c <elf32_xlatetom@@ELFUTILS_1.0+0x168>  // b.none
    730c:	ldr	x0, [sp, #40]
    7310:	ldr	x3, [x0]
    7314:	ldr	x0, [sp, #32]
    7318:	ldr	x1, [x0]
    731c:	ldr	x0, [sp, #32]
    7320:	ldr	x0, [x0, #16]
    7324:	mov	x2, x0
    7328:	mov	x0, x3
    732c:	bl	30b0 <memmove@plt>
    7330:	b	737c <elf32_xlatetom@@ELFUTILS_1.0+0x168>
    7334:	ldr	x0, [sp, #32]
    7338:	ldr	w1, [x0, #8]
    733c:	adrp	x0, 35000 <elf_compress_gnu@@ELFUTILS_1.7+0x1495c>
    7340:	add	x0, x0, #0xbd8
    7344:	mov	w1, w1
    7348:	ldr	x0, [x0, x1, lsl #3]
    734c:	str	x0, [sp, #48]
    7350:	ldr	x0, [sp, #40]
    7354:	ldr	x5, [x0]
    7358:	ldr	x0, [sp, #32]
    735c:	ldr	x1, [x0]
    7360:	ldr	x0, [sp, #32]
    7364:	ldr	x0, [x0, #16]
    7368:	ldr	x4, [sp, #48]
    736c:	mov	w3, #0x0                   	// #0
    7370:	mov	x2, x0
    7374:	mov	x0, x5
    7378:	blr	x4
    737c:	ldr	x0, [sp, #32]
    7380:	ldr	w1, [x0, #8]
    7384:	ldr	x0, [sp, #40]
    7388:	str	w1, [x0, #8]
    738c:	ldr	x0, [sp, #32]
    7390:	ldr	x1, [x0, #16]
    7394:	ldr	x0, [sp, #40]
    7398:	str	x1, [x0, #16]
    739c:	ldr	x0, [sp, #40]
    73a0:	ldp	x29, x30, [sp], #64
    73a4:	ret

00000000000073a8 <elf64_xlatetof@@ELFUTILS_1.0>:
    73a8:	stp	x29, x30, [sp, #-64]!
    73ac:	mov	x29, sp
    73b0:	str	x0, [sp, #40]
    73b4:	str	x1, [sp, #32]
    73b8:	str	w2, [sp, #28]
    73bc:	ldr	x0, [sp, #32]
    73c0:	ldr	w1, [x0, #8]
    73c4:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    73c8:	add	x0, x0, #0x3d0
    73cc:	mov	w1, w1
    73d0:	add	x1, x1, #0x1b
    73d4:	ldr	x0, [x0, x1, lsl #3]
    73d8:	str	x0, [sp, #56]
    73dc:	ldr	x0, [sp, #32]
    73e0:	ldr	x0, [x0, #16]
    73e4:	ldr	x1, [sp, #56]
    73e8:	udiv	x2, x0, x1
    73ec:	ldr	x1, [sp, #56]
    73f0:	mul	x1, x2, x1
    73f4:	sub	x0, x0, x1
    73f8:	cmp	x0, #0x0
    73fc:	b.eq	7410 <elf64_xlatetof@@ELFUTILS_1.0+0x68>  // b.none
    7400:	mov	w0, #0x21                  	// #33
    7404:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    7408:	mov	x0, #0x0                   	// #0
    740c:	b	751c <elf64_xlatetof@@ELFUTILS_1.0+0x174>
    7410:	ldr	x0, [sp, #32]
    7414:	ldr	x1, [x0, #16]
    7418:	ldr	x0, [sp, #40]
    741c:	ldr	x0, [x0, #16]
    7420:	cmp	x1, x0
    7424:	b.ls	7438 <elf64_xlatetof@@ELFUTILS_1.0+0x90>  // b.plast
    7428:	mov	w0, #0x6                   	// #6
    742c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    7430:	mov	x0, #0x0                   	// #0
    7434:	b	751c <elf64_xlatetof@@ELFUTILS_1.0+0x174>
    7438:	ldr	w0, [sp, #28]
    743c:	cmp	w0, #0x1
    7440:	b.eq	7460 <elf64_xlatetof@@ELFUTILS_1.0+0xb8>  // b.none
    7444:	ldr	w0, [sp, #28]
    7448:	cmp	w0, #0x2
    744c:	b.eq	7460 <elf64_xlatetof@@ELFUTILS_1.0+0xb8>  // b.none
    7450:	mov	w0, #0x7                   	// #7
    7454:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    7458:	mov	x0, #0x0                   	// #0
    745c:	b	751c <elf64_xlatetof@@ELFUTILS_1.0+0x174>
    7460:	ldr	w0, [sp, #28]
    7464:	cmp	w0, #0x1
    7468:	b.ne	74ac <elf64_xlatetof@@ELFUTILS_1.0+0x104>  // b.any
    746c:	ldr	x0, [sp, #32]
    7470:	ldr	x1, [x0]
    7474:	ldr	x0, [sp, #40]
    7478:	ldr	x0, [x0]
    747c:	cmp	x1, x0
    7480:	b.eq	74f8 <elf64_xlatetof@@ELFUTILS_1.0+0x150>  // b.none
    7484:	ldr	x0, [sp, #40]
    7488:	ldr	x3, [x0]
    748c:	ldr	x0, [sp, #32]
    7490:	ldr	x1, [x0]
    7494:	ldr	x0, [sp, #32]
    7498:	ldr	x0, [x0, #16]
    749c:	mov	x2, x0
    74a0:	mov	x0, x3
    74a4:	bl	30b0 <memmove@plt>
    74a8:	b	74f8 <elf64_xlatetof@@ELFUTILS_1.0+0x150>
    74ac:	ldr	x0, [sp, #32]
    74b0:	ldr	w1, [x0, #8]
    74b4:	adrp	x0, 35000 <elf_compress_gnu@@ELFUTILS_1.7+0x1495c>
    74b8:	add	x0, x0, #0xbd8
    74bc:	mov	w1, w1
    74c0:	add	x1, x1, #0x1b
    74c4:	ldr	x0, [x0, x1, lsl #3]
    74c8:	str	x0, [sp, #48]
    74cc:	ldr	x0, [sp, #40]
    74d0:	ldr	x5, [x0]
    74d4:	ldr	x0, [sp, #32]
    74d8:	ldr	x1, [x0]
    74dc:	ldr	x0, [sp, #32]
    74e0:	ldr	x0, [x0, #16]
    74e4:	ldr	x4, [sp, #48]
    74e8:	mov	w3, #0x1                   	// #1
    74ec:	mov	x2, x0
    74f0:	mov	x0, x5
    74f4:	blr	x4
    74f8:	ldr	x0, [sp, #32]
    74fc:	ldr	w1, [x0, #8]
    7500:	ldr	x0, [sp, #40]
    7504:	str	w1, [x0, #8]
    7508:	ldr	x0, [sp, #32]
    750c:	ldr	x1, [x0, #16]
    7510:	ldr	x0, [sp, #40]
    7514:	str	x1, [x0, #16]
    7518:	ldr	x0, [sp, #40]
    751c:	ldp	x29, x30, [sp], #64
    7520:	ret

0000000000007524 <elf64_xlatetom@@ELFUTILS_1.0>:
    7524:	stp	x29, x30, [sp, #-64]!
    7528:	mov	x29, sp
    752c:	str	x0, [sp, #40]
    7530:	str	x1, [sp, #32]
    7534:	str	w2, [sp, #28]
    7538:	ldr	x0, [sp, #32]
    753c:	ldr	w1, [x0, #8]
    7540:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    7544:	add	x0, x0, #0x3d0
    7548:	mov	w1, w1
    754c:	add	x1, x1, #0x1b
    7550:	ldr	x0, [x0, x1, lsl #3]
    7554:	str	x0, [sp, #56]
    7558:	ldr	x0, [sp, #32]
    755c:	ldr	w0, [x0, #8]
    7560:	cmp	w0, #0x13
    7564:	b.eq	75ac <elf64_xlatetom@@ELFUTILS_1.0+0x88>  // b.none
    7568:	ldr	x0, [sp, #32]
    756c:	ldr	w0, [x0, #8]
    7570:	cmp	w0, #0x1a
    7574:	b.eq	75ac <elf64_xlatetom@@ELFUTILS_1.0+0x88>  // b.none
    7578:	ldr	x0, [sp, #32]
    757c:	ldr	x0, [x0, #16]
    7580:	ldr	x1, [sp, #56]
    7584:	udiv	x2, x0, x1
    7588:	ldr	x1, [sp, #56]
    758c:	mul	x1, x2, x1
    7590:	sub	x0, x0, x1
    7594:	cmp	x0, #0x0
    7598:	b.eq	75ac <elf64_xlatetom@@ELFUTILS_1.0+0x88>  // b.none
    759c:	mov	w0, #0x21                  	// #33
    75a0:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    75a4:	mov	x0, #0x0                   	// #0
    75a8:	b	76b8 <elf64_xlatetom@@ELFUTILS_1.0+0x194>
    75ac:	ldr	x0, [sp, #32]
    75b0:	ldr	x1, [x0, #16]
    75b4:	ldr	x0, [sp, #40]
    75b8:	ldr	x0, [x0, #16]
    75bc:	cmp	x1, x0
    75c0:	b.ls	75d4 <elf64_xlatetom@@ELFUTILS_1.0+0xb0>  // b.plast
    75c4:	mov	w0, #0x6                   	// #6
    75c8:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    75cc:	mov	x0, #0x0                   	// #0
    75d0:	b	76b8 <elf64_xlatetom@@ELFUTILS_1.0+0x194>
    75d4:	ldr	w0, [sp, #28]
    75d8:	cmp	w0, #0x1
    75dc:	b.eq	75fc <elf64_xlatetom@@ELFUTILS_1.0+0xd8>  // b.none
    75e0:	ldr	w0, [sp, #28]
    75e4:	cmp	w0, #0x2
    75e8:	b.eq	75fc <elf64_xlatetom@@ELFUTILS_1.0+0xd8>  // b.none
    75ec:	mov	w0, #0x7                   	// #7
    75f0:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    75f4:	mov	x0, #0x0                   	// #0
    75f8:	b	76b8 <elf64_xlatetom@@ELFUTILS_1.0+0x194>
    75fc:	ldr	w0, [sp, #28]
    7600:	cmp	w0, #0x1
    7604:	b.ne	7648 <elf64_xlatetom@@ELFUTILS_1.0+0x124>  // b.any
    7608:	ldr	x0, [sp, #32]
    760c:	ldr	x1, [x0]
    7610:	ldr	x0, [sp, #40]
    7614:	ldr	x0, [x0]
    7618:	cmp	x1, x0
    761c:	b.eq	7694 <elf64_xlatetom@@ELFUTILS_1.0+0x170>  // b.none
    7620:	ldr	x0, [sp, #40]
    7624:	ldr	x3, [x0]
    7628:	ldr	x0, [sp, #32]
    762c:	ldr	x1, [x0]
    7630:	ldr	x0, [sp, #32]
    7634:	ldr	x0, [x0, #16]
    7638:	mov	x2, x0
    763c:	mov	x0, x3
    7640:	bl	30b0 <memmove@plt>
    7644:	b	7694 <elf64_xlatetom@@ELFUTILS_1.0+0x170>
    7648:	ldr	x0, [sp, #32]
    764c:	ldr	w1, [x0, #8]
    7650:	adrp	x0, 35000 <elf_compress_gnu@@ELFUTILS_1.7+0x1495c>
    7654:	add	x0, x0, #0xbd8
    7658:	mov	w1, w1
    765c:	add	x1, x1, #0x1b
    7660:	ldr	x0, [x0, x1, lsl #3]
    7664:	str	x0, [sp, #48]
    7668:	ldr	x0, [sp, #40]
    766c:	ldr	x5, [x0]
    7670:	ldr	x0, [sp, #32]
    7674:	ldr	x1, [x0]
    7678:	ldr	x0, [sp, #32]
    767c:	ldr	x0, [x0, #16]
    7680:	ldr	x4, [sp, #48]
    7684:	mov	w3, #0x0                   	// #0
    7688:	mov	x2, x0
    768c:	mov	x0, x5
    7690:	blr	x4
    7694:	ldr	x0, [sp, #32]
    7698:	ldr	w1, [x0, #8]
    769c:	ldr	x0, [sp, #40]
    76a0:	str	w1, [x0, #8]
    76a4:	ldr	x0, [sp, #32]
    76a8:	ldr	x1, [x0, #16]
    76ac:	ldr	x0, [sp, #40]
    76b0:	str	x1, [x0, #16]
    76b4:	ldr	x0, [sp, #40]
    76b8:	ldp	x29, x30, [sp], #64
    76bc:	ret
    76c0:	sub	sp, sp, #0x10
    76c4:	strh	w0, [sp, #14]
    76c8:	ldrh	w0, [sp, #14]
    76cc:	rev16	w0, w0
    76d0:	and	w0, w0, #0xffff
    76d4:	add	sp, sp, #0x10
    76d8:	ret
    76dc:	sub	sp, sp, #0x10
    76e0:	str	w0, [sp, #12]
    76e4:	ldr	w0, [sp, #12]
    76e8:	rev	w0, w0
    76ec:	add	sp, sp, #0x10
    76f0:	ret
    76f4:	sub	sp, sp, #0x10
    76f8:	str	x0, [sp, #8]
    76fc:	ldr	x0, [sp, #8]
    7700:	rev	x0, x0
    7704:	add	sp, sp, #0x10
    7708:	ret
    770c:	stp	x29, x30, [sp, #-48]!
    7710:	mov	x29, sp
    7714:	str	x0, [sp, #40]
    7718:	str	x1, [sp, #32]
    771c:	str	x2, [sp, #24]
    7720:	str	w3, [sp, #20]
    7724:	ldr	x0, [sp, #24]
    7728:	cmp	x0, #0x0
    772c:	b.eq	7740 <elf64_xlatetom@@ELFUTILS_1.0+0x21c>  // b.none
    7730:	ldr	x2, [sp, #24]
    7734:	ldr	x1, [sp, #32]
    7738:	ldr	x0, [sp, #40]
    773c:	bl	30b0 <memmove@plt>
    7740:	nop
    7744:	ldp	x29, x30, [sp], #48
    7748:	ret
    774c:	stp	x29, x30, [sp, #-32]!
    7750:	mov	x29, sp
    7754:	str	x0, [sp, #24]
    7758:	str	x1, [sp, #16]
    775c:	ldr	x0, [sp, #16]
    7760:	ldr	w0, [x0]
    7764:	bl	76dc <elf64_xlatetom@@ELFUTILS_1.0+0x1b8>
    7768:	mov	w1, w0
    776c:	ldr	x0, [sp, #24]
    7770:	str	w1, [x0]
    7774:	nop
    7778:	nop
    777c:	ldp	x29, x30, [sp], #32
    7780:	ret
    7784:	stp	x29, x30, [sp, #-64]!
    7788:	mov	x29, sp
    778c:	str	x0, [sp, #40]
    7790:	str	x1, [sp, #32]
    7794:	str	x2, [sp, #24]
    7798:	str	w3, [sp, #20]
    779c:	ldr	x0, [sp, #24]
    77a0:	lsr	x0, x0, #2
    77a4:	str	x0, [sp, #56]
    77a8:	ldr	x1, [sp, #40]
    77ac:	ldr	x0, [sp, #32]
    77b0:	cmp	x1, x0
    77b4:	b.cs	77f8 <elf64_xlatetom@@ELFUTILS_1.0+0x2d4>  // b.hs, b.nlast
    77b8:	b	77e0 <elf64_xlatetom@@ELFUTILS_1.0+0x2bc>
    77bc:	ldr	x1, [sp, #32]
    77c0:	ldr	x0, [sp, #40]
    77c4:	bl	774c <elf64_xlatetom@@ELFUTILS_1.0+0x228>
    77c8:	ldr	x0, [sp, #40]
    77cc:	add	x0, x0, #0x4
    77d0:	str	x0, [sp, #40]
    77d4:	ldr	x0, [sp, #32]
    77d8:	add	x0, x0, #0x4
    77dc:	str	x0, [sp, #32]
    77e0:	ldr	x0, [sp, #56]
    77e4:	sub	x1, x0, #0x1
    77e8:	str	x1, [sp, #56]
    77ec:	cmp	x0, #0x0
    77f0:	b.ne	77bc <elf64_xlatetom@@ELFUTILS_1.0+0x298>  // b.any
    77f4:	b	7854 <elf64_xlatetom@@ELFUTILS_1.0+0x330>
    77f8:	ldr	x1, [sp, #40]
    77fc:	ldr	x0, [sp, #24]
    7800:	add	x0, x1, x0
    7804:	str	x0, [sp, #40]
    7808:	ldr	x1, [sp, #32]
    780c:	ldr	x0, [sp, #24]
    7810:	add	x0, x1, x0
    7814:	str	x0, [sp, #32]
    7818:	b	7840 <elf64_xlatetom@@ELFUTILS_1.0+0x31c>
    781c:	ldr	x0, [sp, #32]
    7820:	sub	x0, x0, #0x4
    7824:	str	x0, [sp, #32]
    7828:	ldr	x0, [sp, #40]
    782c:	sub	x0, x0, #0x4
    7830:	str	x0, [sp, #40]
    7834:	ldr	x1, [sp, #32]
    7838:	ldr	x0, [sp, #40]
    783c:	bl	774c <elf64_xlatetom@@ELFUTILS_1.0+0x228>
    7840:	ldr	x0, [sp, #56]
    7844:	sub	x1, x0, #0x1
    7848:	str	x1, [sp, #56]
    784c:	cmp	x0, #0x0
    7850:	b.ne	781c <elf64_xlatetom@@ELFUTILS_1.0+0x2f8>  // b.any
    7854:	nop
    7858:	ldp	x29, x30, [sp], #64
    785c:	ret
    7860:	stp	x29, x30, [sp, #-32]!
    7864:	mov	x29, sp
    7868:	str	x0, [sp, #24]
    786c:	str	x1, [sp, #16]
    7870:	ldr	x0, [sp, #16]
    7874:	ldr	w0, [x0]
    7878:	bl	76dc <elf64_xlatetom@@ELFUTILS_1.0+0x1b8>
    787c:	mov	w1, w0
    7880:	ldr	x0, [sp, #24]
    7884:	str	w1, [x0]
    7888:	nop
    788c:	nop
    7890:	ldp	x29, x30, [sp], #32
    7894:	ret
    7898:	stp	x29, x30, [sp, #-64]!
    789c:	mov	x29, sp
    78a0:	str	x0, [sp, #40]
    78a4:	str	x1, [sp, #32]
    78a8:	str	x2, [sp, #24]
    78ac:	str	w3, [sp, #20]
    78b0:	ldr	x0, [sp, #24]
    78b4:	lsr	x0, x0, #2
    78b8:	str	x0, [sp, #56]
    78bc:	ldr	x1, [sp, #40]
    78c0:	ldr	x0, [sp, #32]
    78c4:	cmp	x1, x0
    78c8:	b.cs	790c <elf64_xlatetom@@ELFUTILS_1.0+0x3e8>  // b.hs, b.nlast
    78cc:	b	78f4 <elf64_xlatetom@@ELFUTILS_1.0+0x3d0>
    78d0:	ldr	x1, [sp, #32]
    78d4:	ldr	x0, [sp, #40]
    78d8:	bl	7860 <elf64_xlatetom@@ELFUTILS_1.0+0x33c>
    78dc:	ldr	x0, [sp, #40]
    78e0:	add	x0, x0, #0x4
    78e4:	str	x0, [sp, #40]
    78e8:	ldr	x0, [sp, #32]
    78ec:	add	x0, x0, #0x4
    78f0:	str	x0, [sp, #32]
    78f4:	ldr	x0, [sp, #56]
    78f8:	sub	x1, x0, #0x1
    78fc:	str	x1, [sp, #56]
    7900:	cmp	x0, #0x0
    7904:	b.ne	78d0 <elf64_xlatetom@@ELFUTILS_1.0+0x3ac>  // b.any
    7908:	b	7968 <elf64_xlatetom@@ELFUTILS_1.0+0x444>
    790c:	ldr	x1, [sp, #40]
    7910:	ldr	x0, [sp, #24]
    7914:	add	x0, x1, x0
    7918:	str	x0, [sp, #40]
    791c:	ldr	x1, [sp, #32]
    7920:	ldr	x0, [sp, #24]
    7924:	add	x0, x1, x0
    7928:	str	x0, [sp, #32]
    792c:	b	7954 <elf64_xlatetom@@ELFUTILS_1.0+0x430>
    7930:	ldr	x0, [sp, #32]
    7934:	sub	x0, x0, #0x4
    7938:	str	x0, [sp, #32]
    793c:	ldr	x0, [sp, #40]
    7940:	sub	x0, x0, #0x4
    7944:	str	x0, [sp, #40]
    7948:	ldr	x1, [sp, #32]
    794c:	ldr	x0, [sp, #40]
    7950:	bl	7860 <elf64_xlatetom@@ELFUTILS_1.0+0x33c>
    7954:	ldr	x0, [sp, #56]
    7958:	sub	x1, x0, #0x1
    795c:	str	x1, [sp, #56]
    7960:	cmp	x0, #0x0
    7964:	b.ne	7930 <elf64_xlatetom@@ELFUTILS_1.0+0x40c>  // b.any
    7968:	nop
    796c:	ldp	x29, x30, [sp], #64
    7970:	ret
    7974:	stp	x29, x30, [sp, #-32]!
    7978:	mov	x29, sp
    797c:	str	x0, [sp, #24]
    7980:	str	x1, [sp, #16]
    7984:	ldr	x0, [sp, #16]
    7988:	ldrh	w0, [x0]
    798c:	bl	76c0 <elf64_xlatetom@@ELFUTILS_1.0+0x19c>
    7990:	and	w1, w0, #0xffff
    7994:	ldr	x0, [sp, #24]
    7998:	strh	w1, [x0]
    799c:	nop
    79a0:	nop
    79a4:	ldp	x29, x30, [sp], #32
    79a8:	ret
    79ac:	stp	x29, x30, [sp, #-64]!
    79b0:	mov	x29, sp
    79b4:	str	x0, [sp, #40]
    79b8:	str	x1, [sp, #32]
    79bc:	str	x2, [sp, #24]
    79c0:	str	w3, [sp, #20]
    79c4:	ldr	x0, [sp, #24]
    79c8:	lsr	x0, x0, #1
    79cc:	str	x0, [sp, #56]
    79d0:	ldr	x1, [sp, #40]
    79d4:	ldr	x0, [sp, #32]
    79d8:	cmp	x1, x0
    79dc:	b.cs	7a20 <elf64_xlatetom@@ELFUTILS_1.0+0x4fc>  // b.hs, b.nlast
    79e0:	b	7a08 <elf64_xlatetom@@ELFUTILS_1.0+0x4e4>
    79e4:	ldr	x1, [sp, #32]
    79e8:	ldr	x0, [sp, #40]
    79ec:	bl	7974 <elf64_xlatetom@@ELFUTILS_1.0+0x450>
    79f0:	ldr	x0, [sp, #40]
    79f4:	add	x0, x0, #0x2
    79f8:	str	x0, [sp, #40]
    79fc:	ldr	x0, [sp, #32]
    7a00:	add	x0, x0, #0x2
    7a04:	str	x0, [sp, #32]
    7a08:	ldr	x0, [sp, #56]
    7a0c:	sub	x1, x0, #0x1
    7a10:	str	x1, [sp, #56]
    7a14:	cmp	x0, #0x0
    7a18:	b.ne	79e4 <elf64_xlatetom@@ELFUTILS_1.0+0x4c0>  // b.any
    7a1c:	b	7a7c <elf64_xlatetom@@ELFUTILS_1.0+0x558>
    7a20:	ldr	x1, [sp, #40]
    7a24:	ldr	x0, [sp, #24]
    7a28:	add	x0, x1, x0
    7a2c:	str	x0, [sp, #40]
    7a30:	ldr	x1, [sp, #32]
    7a34:	ldr	x0, [sp, #24]
    7a38:	add	x0, x1, x0
    7a3c:	str	x0, [sp, #32]
    7a40:	b	7a68 <elf64_xlatetom@@ELFUTILS_1.0+0x544>
    7a44:	ldr	x0, [sp, #32]
    7a48:	sub	x0, x0, #0x2
    7a4c:	str	x0, [sp, #32]
    7a50:	ldr	x0, [sp, #40]
    7a54:	sub	x0, x0, #0x2
    7a58:	str	x0, [sp, #40]
    7a5c:	ldr	x1, [sp, #32]
    7a60:	ldr	x0, [sp, #40]
    7a64:	bl	7974 <elf64_xlatetom@@ELFUTILS_1.0+0x450>
    7a68:	ldr	x0, [sp, #56]
    7a6c:	sub	x1, x0, #0x1
    7a70:	str	x1, [sp, #56]
    7a74:	cmp	x0, #0x0
    7a78:	b.ne	7a44 <elf64_xlatetom@@ELFUTILS_1.0+0x520>  // b.any
    7a7c:	nop
    7a80:	ldp	x29, x30, [sp], #64
    7a84:	ret
    7a88:	stp	x29, x30, [sp, #-32]!
    7a8c:	mov	x29, sp
    7a90:	str	x0, [sp, #24]
    7a94:	str	x1, [sp, #16]
    7a98:	ldr	x0, [sp, #16]
    7a9c:	ldr	w0, [x0]
    7aa0:	bl	76dc <elf64_xlatetom@@ELFUTILS_1.0+0x1b8>
    7aa4:	mov	w1, w0
    7aa8:	ldr	x0, [sp, #24]
    7aac:	str	w1, [x0]
    7ab0:	nop
    7ab4:	nop
    7ab8:	ldp	x29, x30, [sp], #32
    7abc:	ret
    7ac0:	stp	x29, x30, [sp, #-64]!
    7ac4:	mov	x29, sp
    7ac8:	str	x0, [sp, #40]
    7acc:	str	x1, [sp, #32]
    7ad0:	str	x2, [sp, #24]
    7ad4:	str	w3, [sp, #20]
    7ad8:	ldr	x0, [sp, #24]
    7adc:	lsr	x0, x0, #2
    7ae0:	str	x0, [sp, #56]
    7ae4:	ldr	x1, [sp, #40]
    7ae8:	ldr	x0, [sp, #32]
    7aec:	cmp	x1, x0
    7af0:	b.cs	7b34 <elf64_xlatetom@@ELFUTILS_1.0+0x610>  // b.hs, b.nlast
    7af4:	b	7b1c <elf64_xlatetom@@ELFUTILS_1.0+0x5f8>
    7af8:	ldr	x1, [sp, #32]
    7afc:	ldr	x0, [sp, #40]
    7b00:	bl	7a88 <elf64_xlatetom@@ELFUTILS_1.0+0x564>
    7b04:	ldr	x0, [sp, #40]
    7b08:	add	x0, x0, #0x4
    7b0c:	str	x0, [sp, #40]
    7b10:	ldr	x0, [sp, #32]
    7b14:	add	x0, x0, #0x4
    7b18:	str	x0, [sp, #32]
    7b1c:	ldr	x0, [sp, #56]
    7b20:	sub	x1, x0, #0x1
    7b24:	str	x1, [sp, #56]
    7b28:	cmp	x0, #0x0
    7b2c:	b.ne	7af8 <elf64_xlatetom@@ELFUTILS_1.0+0x5d4>  // b.any
    7b30:	b	7b90 <elf64_xlatetom@@ELFUTILS_1.0+0x66c>
    7b34:	ldr	x1, [sp, #40]
    7b38:	ldr	x0, [sp, #24]
    7b3c:	add	x0, x1, x0
    7b40:	str	x0, [sp, #40]
    7b44:	ldr	x1, [sp, #32]
    7b48:	ldr	x0, [sp, #24]
    7b4c:	add	x0, x1, x0
    7b50:	str	x0, [sp, #32]
    7b54:	b	7b7c <elf64_xlatetom@@ELFUTILS_1.0+0x658>
    7b58:	ldr	x0, [sp, #32]
    7b5c:	sub	x0, x0, #0x4
    7b60:	str	x0, [sp, #32]
    7b64:	ldr	x0, [sp, #40]
    7b68:	sub	x0, x0, #0x4
    7b6c:	str	x0, [sp, #40]
    7b70:	ldr	x1, [sp, #32]
    7b74:	ldr	x0, [sp, #40]
    7b78:	bl	7a88 <elf64_xlatetom@@ELFUTILS_1.0+0x564>
    7b7c:	ldr	x0, [sp, #56]
    7b80:	sub	x1, x0, #0x1
    7b84:	str	x1, [sp, #56]
    7b88:	cmp	x0, #0x0
    7b8c:	b.ne	7b58 <elf64_xlatetom@@ELFUTILS_1.0+0x634>  // b.any
    7b90:	nop
    7b94:	ldp	x29, x30, [sp], #64
    7b98:	ret
    7b9c:	stp	x29, x30, [sp, #-32]!
    7ba0:	mov	x29, sp
    7ba4:	str	x0, [sp, #24]
    7ba8:	str	x1, [sp, #16]
    7bac:	ldr	x0, [sp, #16]
    7bb0:	ldr	w0, [x0]
    7bb4:	bl	76dc <elf64_xlatetom@@ELFUTILS_1.0+0x1b8>
    7bb8:	mov	w1, w0
    7bbc:	ldr	x0, [sp, #24]
    7bc0:	str	w1, [x0]
    7bc4:	nop
    7bc8:	nop
    7bcc:	ldp	x29, x30, [sp], #32
    7bd0:	ret
    7bd4:	stp	x29, x30, [sp, #-64]!
    7bd8:	mov	x29, sp
    7bdc:	str	x0, [sp, #40]
    7be0:	str	x1, [sp, #32]
    7be4:	str	x2, [sp, #24]
    7be8:	str	w3, [sp, #20]
    7bec:	ldr	x0, [sp, #24]
    7bf0:	lsr	x0, x0, #2
    7bf4:	str	x0, [sp, #56]
    7bf8:	ldr	x1, [sp, #40]
    7bfc:	ldr	x0, [sp, #32]
    7c00:	cmp	x1, x0
    7c04:	b.cs	7c48 <elf64_xlatetom@@ELFUTILS_1.0+0x724>  // b.hs, b.nlast
    7c08:	b	7c30 <elf64_xlatetom@@ELFUTILS_1.0+0x70c>
    7c0c:	ldr	x1, [sp, #32]
    7c10:	ldr	x0, [sp, #40]
    7c14:	bl	7b9c <elf64_xlatetom@@ELFUTILS_1.0+0x678>
    7c18:	ldr	x0, [sp, #40]
    7c1c:	add	x0, x0, #0x4
    7c20:	str	x0, [sp, #40]
    7c24:	ldr	x0, [sp, #32]
    7c28:	add	x0, x0, #0x4
    7c2c:	str	x0, [sp, #32]
    7c30:	ldr	x0, [sp, #56]
    7c34:	sub	x1, x0, #0x1
    7c38:	str	x1, [sp, #56]
    7c3c:	cmp	x0, #0x0
    7c40:	b.ne	7c0c <elf64_xlatetom@@ELFUTILS_1.0+0x6e8>  // b.any
    7c44:	b	7ca4 <elf64_xlatetom@@ELFUTILS_1.0+0x780>
    7c48:	ldr	x1, [sp, #40]
    7c4c:	ldr	x0, [sp, #24]
    7c50:	add	x0, x1, x0
    7c54:	str	x0, [sp, #40]
    7c58:	ldr	x1, [sp, #32]
    7c5c:	ldr	x0, [sp, #24]
    7c60:	add	x0, x1, x0
    7c64:	str	x0, [sp, #32]
    7c68:	b	7c90 <elf64_xlatetom@@ELFUTILS_1.0+0x76c>
    7c6c:	ldr	x0, [sp, #32]
    7c70:	sub	x0, x0, #0x4
    7c74:	str	x0, [sp, #32]
    7c78:	ldr	x0, [sp, #40]
    7c7c:	sub	x0, x0, #0x4
    7c80:	str	x0, [sp, #40]
    7c84:	ldr	x1, [sp, #32]
    7c88:	ldr	x0, [sp, #40]
    7c8c:	bl	7b9c <elf64_xlatetom@@ELFUTILS_1.0+0x678>
    7c90:	ldr	x0, [sp, #56]
    7c94:	sub	x1, x0, #0x1
    7c98:	str	x1, [sp, #56]
    7c9c:	cmp	x0, #0x0
    7ca0:	b.ne	7c6c <elf64_xlatetom@@ELFUTILS_1.0+0x748>  // b.any
    7ca4:	nop
    7ca8:	ldp	x29, x30, [sp], #64
    7cac:	ret
    7cb0:	stp	x29, x30, [sp, #-32]!
    7cb4:	mov	x29, sp
    7cb8:	str	x0, [sp, #24]
    7cbc:	str	x1, [sp, #16]
    7cc0:	ldr	x0, [sp, #16]
    7cc4:	ldr	x0, [x0]
    7cc8:	bl	76f4 <elf64_xlatetom@@ELFUTILS_1.0+0x1d0>
    7ccc:	mov	x1, x0
    7cd0:	ldr	x0, [sp, #24]
    7cd4:	str	x1, [x0]
    7cd8:	nop
    7cdc:	ldp	x29, x30, [sp], #32
    7ce0:	ret
    7ce4:	stp	x29, x30, [sp, #-64]!
    7ce8:	mov	x29, sp
    7cec:	str	x0, [sp, #40]
    7cf0:	str	x1, [sp, #32]
    7cf4:	str	x2, [sp, #24]
    7cf8:	str	w3, [sp, #20]
    7cfc:	ldr	x0, [sp, #24]
    7d00:	lsr	x0, x0, #3
    7d04:	str	x0, [sp, #56]
    7d08:	ldr	x1, [sp, #40]
    7d0c:	ldr	x0, [sp, #32]
    7d10:	cmp	x1, x0
    7d14:	b.cs	7d58 <elf64_xlatetom@@ELFUTILS_1.0+0x834>  // b.hs, b.nlast
    7d18:	b	7d40 <elf64_xlatetom@@ELFUTILS_1.0+0x81c>
    7d1c:	ldr	x1, [sp, #32]
    7d20:	ldr	x0, [sp, #40]
    7d24:	bl	7cb0 <elf64_xlatetom@@ELFUTILS_1.0+0x78c>
    7d28:	ldr	x0, [sp, #40]
    7d2c:	add	x0, x0, #0x8
    7d30:	str	x0, [sp, #40]
    7d34:	ldr	x0, [sp, #32]
    7d38:	add	x0, x0, #0x8
    7d3c:	str	x0, [sp, #32]
    7d40:	ldr	x0, [sp, #56]
    7d44:	sub	x1, x0, #0x1
    7d48:	str	x1, [sp, #56]
    7d4c:	cmp	x0, #0x0
    7d50:	b.ne	7d1c <elf64_xlatetom@@ELFUTILS_1.0+0x7f8>  // b.any
    7d54:	b	7db4 <elf64_xlatetom@@ELFUTILS_1.0+0x890>
    7d58:	ldr	x1, [sp, #40]
    7d5c:	ldr	x0, [sp, #24]
    7d60:	add	x0, x1, x0
    7d64:	str	x0, [sp, #40]
    7d68:	ldr	x1, [sp, #32]
    7d6c:	ldr	x0, [sp, #24]
    7d70:	add	x0, x1, x0
    7d74:	str	x0, [sp, #32]
    7d78:	b	7da0 <elf64_xlatetom@@ELFUTILS_1.0+0x87c>
    7d7c:	ldr	x0, [sp, #32]
    7d80:	sub	x0, x0, #0x8
    7d84:	str	x0, [sp, #32]
    7d88:	ldr	x0, [sp, #40]
    7d8c:	sub	x0, x0, #0x8
    7d90:	str	x0, [sp, #40]
    7d94:	ldr	x1, [sp, #32]
    7d98:	ldr	x0, [sp, #40]
    7d9c:	bl	7cb0 <elf64_xlatetom@@ELFUTILS_1.0+0x78c>
    7da0:	ldr	x0, [sp, #56]
    7da4:	sub	x1, x0, #0x1
    7da8:	str	x1, [sp, #56]
    7dac:	cmp	x0, #0x0
    7db0:	b.ne	7d7c <elf64_xlatetom@@ELFUTILS_1.0+0x858>  // b.any
    7db4:	nop
    7db8:	ldp	x29, x30, [sp], #64
    7dbc:	ret
    7dc0:	stp	x29, x30, [sp, #-32]!
    7dc4:	mov	x29, sp
    7dc8:	str	x0, [sp, #24]
    7dcc:	str	x1, [sp, #16]
    7dd0:	ldr	x0, [sp, #16]
    7dd4:	ldr	x0, [x0]
    7dd8:	bl	76f4 <elf64_xlatetom@@ELFUTILS_1.0+0x1d0>
    7ddc:	mov	x1, x0
    7de0:	ldr	x0, [sp, #24]
    7de4:	str	x1, [x0]
    7de8:	nop
    7dec:	ldp	x29, x30, [sp], #32
    7df0:	ret
    7df4:	stp	x29, x30, [sp, #-64]!
    7df8:	mov	x29, sp
    7dfc:	str	x0, [sp, #40]
    7e00:	str	x1, [sp, #32]
    7e04:	str	x2, [sp, #24]
    7e08:	str	w3, [sp, #20]
    7e0c:	ldr	x0, [sp, #24]
    7e10:	lsr	x0, x0, #3
    7e14:	str	x0, [sp, #56]
    7e18:	ldr	x1, [sp, #40]
    7e1c:	ldr	x0, [sp, #32]
    7e20:	cmp	x1, x0
    7e24:	b.cs	7e68 <elf64_xlatetom@@ELFUTILS_1.0+0x944>  // b.hs, b.nlast
    7e28:	b	7e50 <elf64_xlatetom@@ELFUTILS_1.0+0x92c>
    7e2c:	ldr	x1, [sp, #32]
    7e30:	ldr	x0, [sp, #40]
    7e34:	bl	7dc0 <elf64_xlatetom@@ELFUTILS_1.0+0x89c>
    7e38:	ldr	x0, [sp, #40]
    7e3c:	add	x0, x0, #0x8
    7e40:	str	x0, [sp, #40]
    7e44:	ldr	x0, [sp, #32]
    7e48:	add	x0, x0, #0x8
    7e4c:	str	x0, [sp, #32]
    7e50:	ldr	x0, [sp, #56]
    7e54:	sub	x1, x0, #0x1
    7e58:	str	x1, [sp, #56]
    7e5c:	cmp	x0, #0x0
    7e60:	b.ne	7e2c <elf64_xlatetom@@ELFUTILS_1.0+0x908>  // b.any
    7e64:	b	7ec4 <elf64_xlatetom@@ELFUTILS_1.0+0x9a0>
    7e68:	ldr	x1, [sp, #40]
    7e6c:	ldr	x0, [sp, #24]
    7e70:	add	x0, x1, x0
    7e74:	str	x0, [sp, #40]
    7e78:	ldr	x1, [sp, #32]
    7e7c:	ldr	x0, [sp, #24]
    7e80:	add	x0, x1, x0
    7e84:	str	x0, [sp, #32]
    7e88:	b	7eb0 <elf64_xlatetom@@ELFUTILS_1.0+0x98c>
    7e8c:	ldr	x0, [sp, #32]
    7e90:	sub	x0, x0, #0x8
    7e94:	str	x0, [sp, #32]
    7e98:	ldr	x0, [sp, #40]
    7e9c:	sub	x0, x0, #0x8
    7ea0:	str	x0, [sp, #40]
    7ea4:	ldr	x1, [sp, #32]
    7ea8:	ldr	x0, [sp, #40]
    7eac:	bl	7dc0 <elf64_xlatetom@@ELFUTILS_1.0+0x89c>
    7eb0:	ldr	x0, [sp, #56]
    7eb4:	sub	x1, x0, #0x1
    7eb8:	str	x1, [sp, #56]
    7ebc:	cmp	x0, #0x0
    7ec0:	b.ne	7e8c <elf64_xlatetom@@ELFUTILS_1.0+0x968>  // b.any
    7ec4:	nop
    7ec8:	ldp	x29, x30, [sp], #64
    7ecc:	ret
    7ed0:	stp	x29, x30, [sp, #-80]!
    7ed4:	mov	x29, sp
    7ed8:	str	x0, [sp, #40]
    7edc:	str	x1, [sp, #32]
    7ee0:	str	x2, [sp, #24]
    7ee4:	str	w3, [sp, #20]
    7ee8:	ldr	x0, [sp, #40]
    7eec:	str	x0, [sp, #72]
    7ef0:	ldr	x0, [sp, #32]
    7ef4:	str	x0, [sp, #64]
    7ef8:	ldr	x1, [sp, #24]
    7efc:	mov	x0, #0x4ec5                	// #20165
    7f00:	movk	x0, #0xc4ec, lsl #16
    7f04:	movk	x0, #0xec4e, lsl #32
    7f08:	movk	x0, #0x4ec4, lsl #48
    7f0c:	umulh	x0, x1, x0
    7f10:	lsr	x0, x0, #4
    7f14:	str	x0, [sp, #56]
    7f18:	b	80bc <elf64_xlatetom@@ELFUTILS_1.0+0xb98>
    7f1c:	ldr	x2, [sp, #72]
    7f20:	ldr	x0, [sp, #64]
    7f24:	ldp	x0, x1, [x0]
    7f28:	stp	x0, x1, [x2]
    7f2c:	ldr	x0, [sp, #72]
    7f30:	add	x2, x0, #0x10
    7f34:	ldr	x0, [sp, #64]
    7f38:	add	x0, x0, #0x10
    7f3c:	mov	x1, x0
    7f40:	mov	x0, x2
    7f44:	bl	7974 <elf64_xlatetom@@ELFUTILS_1.0+0x450>
    7f48:	ldr	x0, [sp, #72]
    7f4c:	add	x2, x0, #0x12
    7f50:	ldr	x0, [sp, #64]
    7f54:	add	x0, x0, #0x12
    7f58:	mov	x1, x0
    7f5c:	mov	x0, x2
    7f60:	bl	7974 <elf64_xlatetom@@ELFUTILS_1.0+0x450>
    7f64:	ldr	x0, [sp, #72]
    7f68:	add	x2, x0, #0x14
    7f6c:	ldr	x0, [sp, #64]
    7f70:	add	x0, x0, #0x14
    7f74:	mov	x1, x0
    7f78:	mov	x0, x2
    7f7c:	bl	7a88 <elf64_xlatetom@@ELFUTILS_1.0+0x564>
    7f80:	ldr	x0, [sp, #72]
    7f84:	add	x2, x0, #0x18
    7f88:	ldr	x0, [sp, #64]
    7f8c:	add	x0, x0, #0x18
    7f90:	mov	x1, x0
    7f94:	mov	x0, x2
    7f98:	bl	774c <elf64_xlatetom@@ELFUTILS_1.0+0x228>
    7f9c:	ldr	x0, [sp, #72]
    7fa0:	add	x2, x0, #0x1c
    7fa4:	ldr	x0, [sp, #64]
    7fa8:	add	x0, x0, #0x1c
    7fac:	mov	x1, x0
    7fb0:	mov	x0, x2
    7fb4:	bl	7860 <elf64_xlatetom@@ELFUTILS_1.0+0x33c>
    7fb8:	ldr	x0, [sp, #72]
    7fbc:	add	x2, x0, #0x20
    7fc0:	ldr	x0, [sp, #64]
    7fc4:	add	x0, x0, #0x20
    7fc8:	mov	x1, x0
    7fcc:	mov	x0, x2
    7fd0:	bl	7860 <elf64_xlatetom@@ELFUTILS_1.0+0x33c>
    7fd4:	ldr	x0, [sp, #72]
    7fd8:	add	x2, x0, #0x24
    7fdc:	ldr	x0, [sp, #64]
    7fe0:	add	x0, x0, #0x24
    7fe4:	mov	x1, x0
    7fe8:	mov	x0, x2
    7fec:	bl	7a88 <elf64_xlatetom@@ELFUTILS_1.0+0x564>
    7ff0:	ldr	x0, [sp, #72]
    7ff4:	add	x2, x0, #0x28
    7ff8:	ldr	x0, [sp, #64]
    7ffc:	add	x0, x0, #0x28
    8000:	mov	x1, x0
    8004:	mov	x0, x2
    8008:	bl	7974 <elf64_xlatetom@@ELFUTILS_1.0+0x450>
    800c:	ldr	x0, [sp, #72]
    8010:	add	x2, x0, #0x2a
    8014:	ldr	x0, [sp, #64]
    8018:	add	x0, x0, #0x2a
    801c:	mov	x1, x0
    8020:	mov	x0, x2
    8024:	bl	7974 <elf64_xlatetom@@ELFUTILS_1.0+0x450>
    8028:	ldr	x0, [sp, #72]
    802c:	add	x2, x0, #0x2c
    8030:	ldr	x0, [sp, #64]
    8034:	add	x0, x0, #0x2c
    8038:	mov	x1, x0
    803c:	mov	x0, x2
    8040:	bl	7974 <elf64_xlatetom@@ELFUTILS_1.0+0x450>
    8044:	ldr	x0, [sp, #72]
    8048:	add	x2, x0, #0x2e
    804c:	ldr	x0, [sp, #64]
    8050:	add	x0, x0, #0x2e
    8054:	mov	x1, x0
    8058:	mov	x0, x2
    805c:	bl	7974 <elf64_xlatetom@@ELFUTILS_1.0+0x450>
    8060:	ldr	x0, [sp, #72]
    8064:	add	x2, x0, #0x30
    8068:	ldr	x0, [sp, #64]
    806c:	add	x0, x0, #0x30
    8070:	mov	x1, x0
    8074:	mov	x0, x2
    8078:	bl	7974 <elf64_xlatetom@@ELFUTILS_1.0+0x450>
    807c:	ldr	x0, [sp, #72]
    8080:	add	x2, x0, #0x32
    8084:	ldr	x0, [sp, #64]
    8088:	add	x0, x0, #0x32
    808c:	mov	x1, x0
    8090:	mov	x0, x2
    8094:	bl	7974 <elf64_xlatetom@@ELFUTILS_1.0+0x450>
    8098:	ldr	x0, [sp, #72]
    809c:	add	x0, x0, #0x34
    80a0:	str	x0, [sp, #72]
    80a4:	ldr	x0, [sp, #64]
    80a8:	add	x0, x0, #0x34
    80ac:	str	x0, [sp, #64]
    80b0:	ldr	x0, [sp, #56]
    80b4:	sub	x0, x0, #0x1
    80b8:	str	x0, [sp, #56]
    80bc:	ldr	x0, [sp, #56]
    80c0:	cmp	x0, #0x0
    80c4:	b.ne	7f1c <elf64_xlatetom@@ELFUTILS_1.0+0x9f8>  // b.any
    80c8:	nop
    80cc:	nop
    80d0:	ldp	x29, x30, [sp], #80
    80d4:	ret
    80d8:	stp	x29, x30, [sp, #-80]!
    80dc:	mov	x29, sp
    80e0:	str	x0, [sp, #40]
    80e4:	str	x1, [sp, #32]
    80e8:	str	x2, [sp, #24]
    80ec:	str	w3, [sp, #20]
    80f0:	ldr	x0, [sp, #40]
    80f4:	str	x0, [sp, #72]
    80f8:	ldr	x0, [sp, #32]
    80fc:	str	x0, [sp, #64]
    8100:	ldr	x0, [sp, #24]
    8104:	lsr	x0, x0, #5
    8108:	str	x0, [sp, #56]
    810c:	b	8204 <elf64_xlatetom@@ELFUTILS_1.0+0xce0>
    8110:	ldr	x0, [sp, #72]
    8114:	ldr	x1, [sp, #64]
    8118:	bl	7a88 <elf64_xlatetom@@ELFUTILS_1.0+0x564>
    811c:	ldr	x0, [sp, #72]
    8120:	add	x2, x0, #0x4
    8124:	ldr	x0, [sp, #64]
    8128:	add	x0, x0, #0x4
    812c:	mov	x1, x0
    8130:	mov	x0, x2
    8134:	bl	7860 <elf64_xlatetom@@ELFUTILS_1.0+0x33c>
    8138:	ldr	x0, [sp, #72]
    813c:	add	x2, x0, #0x8
    8140:	ldr	x0, [sp, #64]
    8144:	add	x0, x0, #0x8
    8148:	mov	x1, x0
    814c:	mov	x0, x2
    8150:	bl	774c <elf64_xlatetom@@ELFUTILS_1.0+0x228>
    8154:	ldr	x0, [sp, #72]
    8158:	add	x2, x0, #0xc
    815c:	ldr	x0, [sp, #64]
    8160:	add	x0, x0, #0xc
    8164:	mov	x1, x0
    8168:	mov	x0, x2
    816c:	bl	774c <elf64_xlatetom@@ELFUTILS_1.0+0x228>
    8170:	ldr	x0, [sp, #72]
    8174:	add	x2, x0, #0x10
    8178:	ldr	x0, [sp, #64]
    817c:	add	x0, x0, #0x10
    8180:	mov	x1, x0
    8184:	mov	x0, x2
    8188:	bl	7a88 <elf64_xlatetom@@ELFUTILS_1.0+0x564>
    818c:	ldr	x0, [sp, #72]
    8190:	add	x2, x0, #0x14
    8194:	ldr	x0, [sp, #64]
    8198:	add	x0, x0, #0x14
    819c:	mov	x1, x0
    81a0:	mov	x0, x2
    81a4:	bl	7a88 <elf64_xlatetom@@ELFUTILS_1.0+0x564>
    81a8:	ldr	x0, [sp, #72]
    81ac:	add	x2, x0, #0x18
    81b0:	ldr	x0, [sp, #64]
    81b4:	add	x0, x0, #0x18
    81b8:	mov	x1, x0
    81bc:	mov	x0, x2
    81c0:	bl	7a88 <elf64_xlatetom@@ELFUTILS_1.0+0x564>
    81c4:	ldr	x0, [sp, #72]
    81c8:	add	x2, x0, #0x1c
    81cc:	ldr	x0, [sp, #64]
    81d0:	add	x0, x0, #0x1c
    81d4:	mov	x1, x0
    81d8:	mov	x0, x2
    81dc:	bl	7a88 <elf64_xlatetom@@ELFUTILS_1.0+0x564>
    81e0:	ldr	x0, [sp, #72]
    81e4:	add	x0, x0, #0x20
    81e8:	str	x0, [sp, #72]
    81ec:	ldr	x0, [sp, #64]
    81f0:	add	x0, x0, #0x20
    81f4:	str	x0, [sp, #64]
    81f8:	ldr	x0, [sp, #56]
    81fc:	sub	x0, x0, #0x1
    8200:	str	x0, [sp, #56]
    8204:	ldr	x0, [sp, #56]
    8208:	cmp	x0, #0x0
    820c:	b.ne	8110 <elf64_xlatetom@@ELFUTILS_1.0+0xbec>  // b.any
    8210:	nop
    8214:	nop
    8218:	ldp	x29, x30, [sp], #80
    821c:	ret
    8220:	stp	x29, x30, [sp, #-80]!
    8224:	mov	x29, sp
    8228:	str	x0, [sp, #40]
    822c:	str	x1, [sp, #32]
    8230:	str	x2, [sp, #24]
    8234:	str	w3, [sp, #20]
    8238:	ldr	x0, [sp, #40]
    823c:	str	x0, [sp, #72]
    8240:	ldr	x0, [sp, #32]
    8244:	str	x0, [sp, #64]
    8248:	ldr	x1, [sp, #24]
    824c:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
    8250:	movk	x0, #0xcccd
    8254:	umulh	x0, x1, x0
    8258:	lsr	x0, x0, #5
    825c:	str	x0, [sp, #56]
    8260:	b	8390 <elf64_xlatetom@@ELFUTILS_1.0+0xe6c>
    8264:	ldr	x0, [sp, #72]
    8268:	ldr	x1, [sp, #64]
    826c:	bl	7a88 <elf64_xlatetom@@ELFUTILS_1.0+0x564>
    8270:	ldr	x0, [sp, #72]
    8274:	add	x2, x0, #0x4
    8278:	ldr	x0, [sp, #64]
    827c:	add	x0, x0, #0x4
    8280:	mov	x1, x0
    8284:	mov	x0, x2
    8288:	bl	7a88 <elf64_xlatetom@@ELFUTILS_1.0+0x564>
    828c:	ldr	x0, [sp, #72]
    8290:	add	x2, x0, #0x8
    8294:	ldr	x0, [sp, #64]
    8298:	add	x0, x0, #0x8
    829c:	mov	x1, x0
    82a0:	mov	x0, x2
    82a4:	bl	7a88 <elf64_xlatetom@@ELFUTILS_1.0+0x564>
    82a8:	ldr	x0, [sp, #72]
    82ac:	add	x2, x0, #0xc
    82b0:	ldr	x0, [sp, #64]
    82b4:	add	x0, x0, #0xc
    82b8:	mov	x1, x0
    82bc:	mov	x0, x2
    82c0:	bl	774c <elf64_xlatetom@@ELFUTILS_1.0+0x228>
    82c4:	ldr	x0, [sp, #72]
    82c8:	add	x2, x0, #0x10
    82cc:	ldr	x0, [sp, #64]
    82d0:	add	x0, x0, #0x10
    82d4:	mov	x1, x0
    82d8:	mov	x0, x2
    82dc:	bl	7860 <elf64_xlatetom@@ELFUTILS_1.0+0x33c>
    82e0:	ldr	x0, [sp, #72]
    82e4:	add	x2, x0, #0x14
    82e8:	ldr	x0, [sp, #64]
    82ec:	add	x0, x0, #0x14
    82f0:	mov	x1, x0
    82f4:	mov	x0, x2
    82f8:	bl	7a88 <elf64_xlatetom@@ELFUTILS_1.0+0x564>
    82fc:	ldr	x0, [sp, #72]
    8300:	add	x2, x0, #0x18
    8304:	ldr	x0, [sp, #64]
    8308:	add	x0, x0, #0x18
    830c:	mov	x1, x0
    8310:	mov	x0, x2
    8314:	bl	7a88 <elf64_xlatetom@@ELFUTILS_1.0+0x564>
    8318:	ldr	x0, [sp, #72]
    831c:	add	x2, x0, #0x1c
    8320:	ldr	x0, [sp, #64]
    8324:	add	x0, x0, #0x1c
    8328:	mov	x1, x0
    832c:	mov	x0, x2
    8330:	bl	7a88 <elf64_xlatetom@@ELFUTILS_1.0+0x564>
    8334:	ldr	x0, [sp, #72]
    8338:	add	x2, x0, #0x20
    833c:	ldr	x0, [sp, #64]
    8340:	add	x0, x0, #0x20
    8344:	mov	x1, x0
    8348:	mov	x0, x2
    834c:	bl	7a88 <elf64_xlatetom@@ELFUTILS_1.0+0x564>
    8350:	ldr	x0, [sp, #72]
    8354:	add	x2, x0, #0x24
    8358:	ldr	x0, [sp, #64]
    835c:	add	x0, x0, #0x24
    8360:	mov	x1, x0
    8364:	mov	x0, x2
    8368:	bl	7a88 <elf64_xlatetom@@ELFUTILS_1.0+0x564>
    836c:	ldr	x0, [sp, #72]
    8370:	add	x0, x0, #0x28
    8374:	str	x0, [sp, #72]
    8378:	ldr	x0, [sp, #64]
    837c:	add	x0, x0, #0x28
    8380:	str	x0, [sp, #64]
    8384:	ldr	x0, [sp, #56]
    8388:	sub	x0, x0, #0x1
    838c:	str	x0, [sp, #56]
    8390:	ldr	x0, [sp, #56]
    8394:	cmp	x0, #0x0
    8398:	b.ne	8264 <elf64_xlatetom@@ELFUTILS_1.0+0xd40>  // b.any
    839c:	nop
    83a0:	nop
    83a4:	ldp	x29, x30, [sp], #80
    83a8:	ret
    83ac:	stp	x29, x30, [sp, #-80]!
    83b0:	mov	x29, sp
    83b4:	str	x0, [sp, #40]
    83b8:	str	x1, [sp, #32]
    83bc:	str	x2, [sp, #24]
    83c0:	str	w3, [sp, #20]
    83c4:	ldr	x0, [sp, #40]
    83c8:	str	x0, [sp, #72]
    83cc:	ldr	x0, [sp, #32]
    83d0:	str	x0, [sp, #64]
    83d4:	ldr	x0, [sp, #24]
    83d8:	lsr	x0, x0, #4
    83dc:	str	x0, [sp, #56]
    83e0:	b	8488 <elf64_xlatetom@@ELFUTILS_1.0+0xf64>
    83e4:	ldr	x0, [sp, #72]
    83e8:	ldr	x1, [sp, #64]
    83ec:	bl	7a88 <elf64_xlatetom@@ELFUTILS_1.0+0x564>
    83f0:	ldr	x0, [sp, #72]
    83f4:	add	x2, x0, #0x4
    83f8:	ldr	x0, [sp, #64]
    83fc:	add	x0, x0, #0x4
    8400:	mov	x1, x0
    8404:	mov	x0, x2
    8408:	bl	774c <elf64_xlatetom@@ELFUTILS_1.0+0x228>
    840c:	ldr	x0, [sp, #72]
    8410:	add	x2, x0, #0x8
    8414:	ldr	x0, [sp, #64]
    8418:	add	x0, x0, #0x8
    841c:	mov	x1, x0
    8420:	mov	x0, x2
    8424:	bl	7a88 <elf64_xlatetom@@ELFUTILS_1.0+0x564>
    8428:	ldr	x0, [sp, #64]
    842c:	ldrb	w1, [x0, #12]
    8430:	ldr	x0, [sp, #72]
    8434:	strb	w1, [x0, #12]
    8438:	ldr	x0, [sp, #64]
    843c:	ldrb	w1, [x0, #13]
    8440:	ldr	x0, [sp, #72]
    8444:	strb	w1, [x0, #13]
    8448:	ldr	x0, [sp, #72]
    844c:	add	x2, x0, #0xe
    8450:	ldr	x0, [sp, #64]
    8454:	add	x0, x0, #0xe
    8458:	mov	x1, x0
    845c:	mov	x0, x2
    8460:	bl	7974 <elf64_xlatetom@@ELFUTILS_1.0+0x450>
    8464:	ldr	x0, [sp, #72]
    8468:	add	x0, x0, #0x10
    846c:	str	x0, [sp, #72]
    8470:	ldr	x0, [sp, #64]
    8474:	add	x0, x0, #0x10
    8478:	str	x0, [sp, #64]
    847c:	ldr	x0, [sp, #56]
    8480:	sub	x0, x0, #0x1
    8484:	str	x0, [sp, #56]
    8488:	ldr	x0, [sp, #56]
    848c:	cmp	x0, #0x0
    8490:	b.ne	83e4 <elf64_xlatetom@@ELFUTILS_1.0+0xec0>  // b.any
    8494:	nop
    8498:	nop
    849c:	ldp	x29, x30, [sp], #80
    84a0:	ret
    84a4:	stp	x29, x30, [sp, #-80]!
    84a8:	mov	x29, sp
    84ac:	str	x0, [sp, #40]
    84b0:	str	x1, [sp, #32]
    84b4:	str	x2, [sp, #24]
    84b8:	str	w3, [sp, #20]
    84bc:	ldr	x0, [sp, #40]
    84c0:	str	x0, [sp, #72]
    84c4:	ldr	x0, [sp, #32]
    84c8:	str	x0, [sp, #64]
    84cc:	ldr	x0, [sp, #24]
    84d0:	lsr	x0, x0, #3
    84d4:	str	x0, [sp, #56]
    84d8:	b	8528 <elf64_xlatetom@@ELFUTILS_1.0+0x1004>
    84dc:	ldr	x0, [sp, #72]
    84e0:	ldr	x1, [sp, #64]
    84e4:	bl	774c <elf64_xlatetom@@ELFUTILS_1.0+0x228>
    84e8:	ldr	x0, [sp, #72]
    84ec:	add	x2, x0, #0x4
    84f0:	ldr	x0, [sp, #64]
    84f4:	add	x0, x0, #0x4
    84f8:	mov	x1, x0
    84fc:	mov	x0, x2
    8500:	bl	7a88 <elf64_xlatetom@@ELFUTILS_1.0+0x564>
    8504:	ldr	x0, [sp, #72]
    8508:	add	x0, x0, #0x8
    850c:	str	x0, [sp, #72]
    8510:	ldr	x0, [sp, #64]
    8514:	add	x0, x0, #0x8
    8518:	str	x0, [sp, #64]
    851c:	ldr	x0, [sp, #56]
    8520:	sub	x0, x0, #0x1
    8524:	str	x0, [sp, #56]
    8528:	ldr	x0, [sp, #56]
    852c:	cmp	x0, #0x0
    8530:	b.ne	84dc <elf64_xlatetom@@ELFUTILS_1.0+0xfb8>  // b.any
    8534:	nop
    8538:	nop
    853c:	ldp	x29, x30, [sp], #80
    8540:	ret
    8544:	stp	x29, x30, [sp, #-80]!
    8548:	mov	x29, sp
    854c:	str	x0, [sp, #40]
    8550:	str	x1, [sp, #32]
    8554:	str	x2, [sp, #24]
    8558:	str	w3, [sp, #20]
    855c:	ldr	x0, [sp, #40]
    8560:	str	x0, [sp, #72]
    8564:	ldr	x0, [sp, #32]
    8568:	str	x0, [sp, #64]
    856c:	ldr	x1, [sp, #24]
    8570:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    8574:	movk	x0, #0xaaab
    8578:	umulh	x0, x1, x0
    857c:	lsr	x0, x0, #3
    8580:	str	x0, [sp, #56]
    8584:	b	85f0 <elf64_xlatetom@@ELFUTILS_1.0+0x10cc>
    8588:	ldr	x0, [sp, #72]
    858c:	ldr	x1, [sp, #64]
    8590:	bl	774c <elf64_xlatetom@@ELFUTILS_1.0+0x228>
    8594:	ldr	x0, [sp, #72]
    8598:	add	x2, x0, #0x4
    859c:	ldr	x0, [sp, #64]
    85a0:	add	x0, x0, #0x4
    85a4:	mov	x1, x0
    85a8:	mov	x0, x2
    85ac:	bl	7a88 <elf64_xlatetom@@ELFUTILS_1.0+0x564>
    85b0:	ldr	x0, [sp, #72]
    85b4:	add	x2, x0, #0x8
    85b8:	ldr	x0, [sp, #64]
    85bc:	add	x0, x0, #0x8
    85c0:	mov	x1, x0
    85c4:	mov	x0, x2
    85c8:	bl	7b9c <elf64_xlatetom@@ELFUTILS_1.0+0x678>
    85cc:	ldr	x0, [sp, #72]
    85d0:	add	x0, x0, #0xc
    85d4:	str	x0, [sp, #72]
    85d8:	ldr	x0, [sp, #64]
    85dc:	add	x0, x0, #0xc
    85e0:	str	x0, [sp, #64]
    85e4:	ldr	x0, [sp, #56]
    85e8:	sub	x0, x0, #0x1
    85ec:	str	x0, [sp, #56]
    85f0:	ldr	x0, [sp, #56]
    85f4:	cmp	x0, #0x0
    85f8:	b.ne	8588 <elf64_xlatetom@@ELFUTILS_1.0+0x1064>  // b.any
    85fc:	nop
    8600:	nop
    8604:	ldp	x29, x30, [sp], #80
    8608:	ret
    860c:	stp	x29, x30, [sp, #-80]!
    8610:	mov	x29, sp
    8614:	str	x0, [sp, #40]
    8618:	str	x1, [sp, #32]
    861c:	str	x2, [sp, #24]
    8620:	str	w3, [sp, #20]
    8624:	ldr	x0, [sp, #40]
    8628:	str	x0, [sp, #72]
    862c:	ldr	x0, [sp, #32]
    8630:	str	x0, [sp, #64]
    8634:	ldr	x1, [sp, #24]
    8638:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    863c:	movk	x0, #0xaaab
    8640:	umulh	x0, x1, x0
    8644:	lsr	x0, x0, #3
    8648:	str	x0, [sp, #56]
    864c:	b	86b8 <elf64_xlatetom@@ELFUTILS_1.0+0x1194>
    8650:	ldr	x0, [sp, #72]
    8654:	ldr	x1, [sp, #64]
    8658:	bl	7a88 <elf64_xlatetom@@ELFUTILS_1.0+0x564>
    865c:	ldr	x0, [sp, #72]
    8660:	add	x2, x0, #0x4
    8664:	ldr	x0, [sp, #64]
    8668:	add	x0, x0, #0x4
    866c:	mov	x1, x0
    8670:	mov	x0, x2
    8674:	bl	7a88 <elf64_xlatetom@@ELFUTILS_1.0+0x564>
    8678:	ldr	x0, [sp, #72]
    867c:	add	x2, x0, #0x8
    8680:	ldr	x0, [sp, #64]
    8684:	add	x0, x0, #0x8
    8688:	mov	x1, x0
    868c:	mov	x0, x2
    8690:	bl	7a88 <elf64_xlatetom@@ELFUTILS_1.0+0x564>
    8694:	ldr	x0, [sp, #72]
    8698:	add	x0, x0, #0xc
    869c:	str	x0, [sp, #72]
    86a0:	ldr	x0, [sp, #64]
    86a4:	add	x0, x0, #0xc
    86a8:	str	x0, [sp, #64]
    86ac:	ldr	x0, [sp, #56]
    86b0:	sub	x0, x0, #0x1
    86b4:	str	x0, [sp, #56]
    86b8:	ldr	x0, [sp, #56]
    86bc:	cmp	x0, #0x0
    86c0:	b.ne	8650 <elf64_xlatetom@@ELFUTILS_1.0+0x112c>  // b.any
    86c4:	nop
    86c8:	nop
    86cc:	ldp	x29, x30, [sp], #80
    86d0:	ret
    86d4:	stp	x29, x30, [sp, #-80]!
    86d8:	mov	x29, sp
    86dc:	str	x0, [sp, #40]
    86e0:	str	x1, [sp, #32]
    86e4:	str	x2, [sp, #24]
    86e8:	str	w3, [sp, #20]
    86ec:	ldr	x0, [sp, #40]
    86f0:	str	x0, [sp, #72]
    86f4:	ldr	x0, [sp, #32]
    86f8:	str	x0, [sp, #64]
    86fc:	ldr	x0, [sp, #24]
    8700:	lsr	x0, x0, #3
    8704:	str	x0, [sp, #56]
    8708:	b	8758 <elf64_xlatetom@@ELFUTILS_1.0+0x1234>
    870c:	ldr	x0, [sp, #72]
    8710:	ldr	x1, [sp, #64]
    8714:	bl	7b9c <elf64_xlatetom@@ELFUTILS_1.0+0x678>
    8718:	ldr	x0, [sp, #72]
    871c:	add	x2, x0, #0x4
    8720:	ldr	x0, [sp, #64]
    8724:	add	x0, x0, #0x4
    8728:	mov	x1, x0
    872c:	mov	x0, x2
    8730:	bl	774c <elf64_xlatetom@@ELFUTILS_1.0+0x228>
    8734:	ldr	x0, [sp, #72]
    8738:	add	x0, x0, #0x8
    873c:	str	x0, [sp, #72]
    8740:	ldr	x0, [sp, #64]
    8744:	add	x0, x0, #0x8
    8748:	str	x0, [sp, #64]
    874c:	ldr	x0, [sp, #56]
    8750:	sub	x0, x0, #0x1
    8754:	str	x0, [sp, #56]
    8758:	ldr	x0, [sp, #56]
    875c:	cmp	x0, #0x0
    8760:	b.ne	870c <elf64_xlatetom@@ELFUTILS_1.0+0x11e8>  // b.any
    8764:	nop
    8768:	nop
    876c:	ldp	x29, x30, [sp], #80
    8770:	ret
    8774:	stp	x29, x30, [sp, #-80]!
    8778:	mov	x29, sp
    877c:	str	x0, [sp, #40]
    8780:	str	x1, [sp, #32]
    8784:	str	x2, [sp, #24]
    8788:	str	w3, [sp, #20]
    878c:	ldr	x0, [sp, #40]
    8790:	str	x0, [sp, #72]
    8794:	ldr	x0, [sp, #32]
    8798:	str	x0, [sp, #64]
    879c:	ldr	x0, [sp, #24]
    87a0:	lsr	x0, x0, #2
    87a4:	str	x0, [sp, #56]
    87a8:	b	87f8 <elf64_xlatetom@@ELFUTILS_1.0+0x12d4>
    87ac:	ldr	x0, [sp, #72]
    87b0:	ldr	x1, [sp, #64]
    87b4:	bl	7974 <elf64_xlatetom@@ELFUTILS_1.0+0x450>
    87b8:	ldr	x0, [sp, #72]
    87bc:	add	x2, x0, #0x2
    87c0:	ldr	x0, [sp, #64]
    87c4:	add	x0, x0, #0x2
    87c8:	mov	x1, x0
    87cc:	mov	x0, x2
    87d0:	bl	7974 <elf64_xlatetom@@ELFUTILS_1.0+0x450>
    87d4:	ldr	x0, [sp, #72]
    87d8:	add	x0, x0, #0x4
    87dc:	str	x0, [sp, #72]
    87e0:	ldr	x0, [sp, #64]
    87e4:	add	x0, x0, #0x4
    87e8:	str	x0, [sp, #64]
    87ec:	ldr	x0, [sp, #56]
    87f0:	sub	x0, x0, #0x1
    87f4:	str	x0, [sp, #56]
    87f8:	ldr	x0, [sp, #56]
    87fc:	cmp	x0, #0x0
    8800:	b.ne	87ac <elf64_xlatetom@@ELFUTILS_1.0+0x1288>  // b.any
    8804:	nop
    8808:	nop
    880c:	ldp	x29, x30, [sp], #80
    8810:	ret
    8814:	stp	x29, x30, [sp, #-80]!
    8818:	mov	x29, sp
    881c:	str	x0, [sp, #40]
    8820:	str	x1, [sp, #32]
    8824:	str	x2, [sp, #24]
    8828:	str	w3, [sp, #20]
    882c:	ldr	x0, [sp, #40]
    8830:	str	x0, [sp, #72]
    8834:	ldr	x0, [sp, #32]
    8838:	str	x0, [sp, #64]
    883c:	ldr	x1, [sp, #24]
    8840:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    8844:	movk	x0, #0xaaab
    8848:	umulh	x0, x1, x0
    884c:	lsr	x0, x0, #4
    8850:	str	x0, [sp, #56]
    8854:	b	88f8 <elf64_xlatetom@@ELFUTILS_1.0+0x13d4>
    8858:	ldr	x0, [sp, #72]
    885c:	ldr	x1, [sp, #64]
    8860:	bl	7cb0 <elf64_xlatetom@@ELFUTILS_1.0+0x78c>
    8864:	ldr	x0, [sp, #72]
    8868:	add	x2, x0, #0x8
    886c:	ldr	x0, [sp, #64]
    8870:	add	x0, x0, #0x8
    8874:	mov	x1, x0
    8878:	mov	x0, x2
    887c:	bl	7cb0 <elf64_xlatetom@@ELFUTILS_1.0+0x78c>
    8880:	ldr	x0, [sp, #72]
    8884:	add	x2, x0, #0xc
    8888:	ldr	x0, [sp, #64]
    888c:	add	x0, x0, #0xc
    8890:	mov	x1, x0
    8894:	mov	x0, x2
    8898:	bl	7cb0 <elf64_xlatetom@@ELFUTILS_1.0+0x78c>
    889c:	ldr	x0, [sp, #72]
    88a0:	add	x2, x0, #0x10
    88a4:	ldr	x0, [sp, #64]
    88a8:	add	x0, x0, #0x10
    88ac:	mov	x1, x0
    88b0:	mov	x0, x2
    88b4:	bl	7974 <elf64_xlatetom@@ELFUTILS_1.0+0x450>
    88b8:	ldr	x0, [sp, #72]
    88bc:	add	x2, x0, #0x12
    88c0:	ldr	x0, [sp, #64]
    88c4:	add	x0, x0, #0x12
    88c8:	mov	x1, x0
    88cc:	mov	x0, x2
    88d0:	bl	7974 <elf64_xlatetom@@ELFUTILS_1.0+0x450>
    88d4:	ldr	x0, [sp, #72]
    88d8:	add	x0, x0, #0x18
    88dc:	str	x0, [sp, #72]
    88e0:	ldr	x0, [sp, #64]
    88e4:	add	x0, x0, #0x18
    88e8:	str	x0, [sp, #64]
    88ec:	ldr	x0, [sp, #56]
    88f0:	sub	x0, x0, #0x1
    88f4:	str	x0, [sp, #56]
    88f8:	ldr	x0, [sp, #56]
    88fc:	cmp	x0, #0x0
    8900:	b.ne	8858 <elf64_xlatetom@@ELFUTILS_1.0+0x1334>  // b.any
    8904:	nop
    8908:	nop
    890c:	ldp	x29, x30, [sp], #80
    8910:	ret
    8914:	stp	x29, x30, [sp, #-80]!
    8918:	mov	x29, sp
    891c:	str	x0, [sp, #40]
    8920:	str	x1, [sp, #32]
    8924:	str	x2, [sp, #24]
    8928:	str	w3, [sp, #20]
    892c:	ldr	x0, [sp, #40]
    8930:	str	x0, [sp, #72]
    8934:	ldr	x0, [sp, #32]
    8938:	str	x0, [sp, #64]
    893c:	ldr	x1, [sp, #24]
    8940:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
    8944:	movk	x0, #0xcccd
    8948:	umulh	x0, x1, x0
    894c:	lsr	x0, x0, #4
    8950:	str	x0, [sp, #56]
    8954:	b	89f8 <elf64_xlatetom@@ELFUTILS_1.0+0x14d4>
    8958:	ldr	x0, [sp, #72]
    895c:	ldr	x1, [sp, #64]
    8960:	bl	7a88 <elf64_xlatetom@@ELFUTILS_1.0+0x564>
    8964:	ldr	x0, [sp, #72]
    8968:	add	x2, x0, #0x4
    896c:	ldr	x0, [sp, #64]
    8970:	add	x0, x0, #0x4
    8974:	mov	x1, x0
    8978:	mov	x0, x2
    897c:	bl	7a88 <elf64_xlatetom@@ELFUTILS_1.0+0x564>
    8980:	ldr	x0, [sp, #72]
    8984:	add	x2, x0, #0x8
    8988:	ldr	x0, [sp, #64]
    898c:	add	x0, x0, #0x8
    8990:	mov	x1, x0
    8994:	mov	x0, x2
    8998:	bl	7a88 <elf64_xlatetom@@ELFUTILS_1.0+0x564>
    899c:	ldr	x0, [sp, #72]
    89a0:	add	x2, x0, #0xc
    89a4:	ldr	x0, [sp, #64]
    89a8:	add	x0, x0, #0xc
    89ac:	mov	x1, x0
    89b0:	mov	x0, x2
    89b4:	bl	7a88 <elf64_xlatetom@@ELFUTILS_1.0+0x564>
    89b8:	ldr	x0, [sp, #72]
    89bc:	add	x2, x0, #0x10
    89c0:	ldr	x0, [sp, #64]
    89c4:	add	x0, x0, #0x10
    89c8:	mov	x1, x0
    89cc:	mov	x0, x2
    89d0:	bl	7a88 <elf64_xlatetom@@ELFUTILS_1.0+0x564>
    89d4:	ldr	x0, [sp, #72]
    89d8:	add	x0, x0, #0x14
    89dc:	str	x0, [sp, #72]
    89e0:	ldr	x0, [sp, #64]
    89e4:	add	x0, x0, #0x14
    89e8:	str	x0, [sp, #64]
    89ec:	ldr	x0, [sp, #56]
    89f0:	sub	x0, x0, #0x1
    89f4:	str	x0, [sp, #56]
    89f8:	ldr	x0, [sp, #56]
    89fc:	cmp	x0, #0x0
    8a00:	b.ne	8958 <elf64_xlatetom@@ELFUTILS_1.0+0x1434>  // b.any
    8a04:	nop
    8a08:	nop
    8a0c:	ldp	x29, x30, [sp], #80
    8a10:	ret
    8a14:	stp	x29, x30, [sp, #-80]!
    8a18:	mov	x29, sp
    8a1c:	str	x0, [sp, #40]
    8a20:	str	x1, [sp, #32]
    8a24:	str	x2, [sp, #24]
    8a28:	str	w3, [sp, #20]
    8a2c:	ldr	x0, [sp, #40]
    8a30:	str	x0, [sp, #72]
    8a34:	ldr	x0, [sp, #32]
    8a38:	str	x0, [sp, #64]
    8a3c:	ldr	x0, [sp, #24]
    8a40:	lsr	x0, x0, #3
    8a44:	str	x0, [sp, #56]
    8a48:	b	8a98 <elf64_xlatetom@@ELFUTILS_1.0+0x1574>
    8a4c:	ldr	x0, [sp, #72]
    8a50:	ldr	x1, [sp, #64]
    8a54:	bl	7a88 <elf64_xlatetom@@ELFUTILS_1.0+0x564>
    8a58:	ldr	x0, [sp, #72]
    8a5c:	add	x2, x0, #0x4
    8a60:	ldr	x0, [sp, #64]
    8a64:	add	x0, x0, #0x4
    8a68:	mov	x1, x0
    8a6c:	mov	x0, x2
    8a70:	bl	774c <elf64_xlatetom@@ELFUTILS_1.0+0x228>
    8a74:	ldr	x0, [sp, #72]
    8a78:	add	x0, x0, #0x8
    8a7c:	str	x0, [sp, #72]
    8a80:	ldr	x0, [sp, #64]
    8a84:	add	x0, x0, #0x8
    8a88:	str	x0, [sp, #64]
    8a8c:	ldr	x0, [sp, #56]
    8a90:	sub	x0, x0, #0x1
    8a94:	str	x0, [sp, #56]
    8a98:	ldr	x0, [sp, #56]
    8a9c:	cmp	x0, #0x0
    8aa0:	b.ne	8a4c <elf64_xlatetom@@ELFUTILS_1.0+0x1528>  // b.any
    8aa4:	nop
    8aa8:	nop
    8aac:	ldp	x29, x30, [sp], #80
    8ab0:	ret
    8ab4:	stp	x29, x30, [sp, #-80]!
    8ab8:	mov	x29, sp
    8abc:	str	x0, [sp, #40]
    8ac0:	str	x1, [sp, #32]
    8ac4:	str	x2, [sp, #24]
    8ac8:	str	w3, [sp, #20]
    8acc:	ldr	x0, [sp, #40]
    8ad0:	str	x0, [sp, #72]
    8ad4:	ldr	x0, [sp, #32]
    8ad8:	str	x0, [sp, #64]
    8adc:	ldr	x1, [sp, #24]
    8ae0:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    8ae4:	movk	x0, #0xaaab
    8ae8:	umulh	x0, x1, x0
    8aec:	lsr	x0, x0, #3
    8af0:	str	x0, [sp, #56]
    8af4:	b	8b60 <elf64_xlatetom@@ELFUTILS_1.0+0x163c>
    8af8:	ldr	x0, [sp, #72]
    8afc:	ldr	x1, [sp, #64]
    8b00:	bl	7a88 <elf64_xlatetom@@ELFUTILS_1.0+0x564>
    8b04:	ldr	x0, [sp, #72]
    8b08:	add	x2, x0, #0x4
    8b0c:	ldr	x0, [sp, #64]
    8b10:	add	x0, x0, #0x4
    8b14:	mov	x1, x0
    8b18:	mov	x0, x2
    8b1c:	bl	7a88 <elf64_xlatetom@@ELFUTILS_1.0+0x564>
    8b20:	ldr	x0, [sp, #72]
    8b24:	add	x2, x0, #0x8
    8b28:	ldr	x0, [sp, #64]
    8b2c:	add	x0, x0, #0x8
    8b30:	mov	x1, x0
    8b34:	mov	x0, x2
    8b38:	bl	7a88 <elf64_xlatetom@@ELFUTILS_1.0+0x564>
    8b3c:	ldr	x0, [sp, #72]
    8b40:	add	x0, x0, #0xc
    8b44:	str	x0, [sp, #72]
    8b48:	ldr	x0, [sp, #64]
    8b4c:	add	x0, x0, #0xc
    8b50:	str	x0, [sp, #64]
    8b54:	ldr	x0, [sp, #56]
    8b58:	sub	x0, x0, #0x1
    8b5c:	str	x0, [sp, #56]
    8b60:	ldr	x0, [sp, #56]
    8b64:	cmp	x0, #0x0
    8b68:	b.ne	8af8 <elf64_xlatetom@@ELFUTILS_1.0+0x15d4>  // b.any
    8b6c:	nop
    8b70:	nop
    8b74:	ldp	x29, x30, [sp], #80
    8b78:	ret
    8b7c:	stp	x29, x30, [sp, #-32]!
    8b80:	mov	x29, sp
    8b84:	str	x0, [sp, #24]
    8b88:	str	x1, [sp, #16]
    8b8c:	ldr	x0, [sp, #16]
    8b90:	ldr	x0, [x0]
    8b94:	bl	76f4 <elf64_xlatetom@@ELFUTILS_1.0+0x1d0>
    8b98:	mov	x1, x0
    8b9c:	ldr	x0, [sp, #24]
    8ba0:	str	x1, [x0]
    8ba4:	nop
    8ba8:	ldp	x29, x30, [sp], #32
    8bac:	ret
    8bb0:	stp	x29, x30, [sp, #-64]!
    8bb4:	mov	x29, sp
    8bb8:	str	x0, [sp, #40]
    8bbc:	str	x1, [sp, #32]
    8bc0:	str	x2, [sp, #24]
    8bc4:	str	w3, [sp, #20]
    8bc8:	ldr	x0, [sp, #24]
    8bcc:	lsr	x0, x0, #3
    8bd0:	str	x0, [sp, #56]
    8bd4:	ldr	x1, [sp, #40]
    8bd8:	ldr	x0, [sp, #32]
    8bdc:	cmp	x1, x0
    8be0:	b.cs	8c24 <elf64_xlatetom@@ELFUTILS_1.0+0x1700>  // b.hs, b.nlast
    8be4:	b	8c0c <elf64_xlatetom@@ELFUTILS_1.0+0x16e8>
    8be8:	ldr	x1, [sp, #32]
    8bec:	ldr	x0, [sp, #40]
    8bf0:	bl	8b7c <elf64_xlatetom@@ELFUTILS_1.0+0x1658>
    8bf4:	ldr	x0, [sp, #40]
    8bf8:	add	x0, x0, #0x8
    8bfc:	str	x0, [sp, #40]
    8c00:	ldr	x0, [sp, #32]
    8c04:	add	x0, x0, #0x8
    8c08:	str	x0, [sp, #32]
    8c0c:	ldr	x0, [sp, #56]
    8c10:	sub	x1, x0, #0x1
    8c14:	str	x1, [sp, #56]
    8c18:	cmp	x0, #0x0
    8c1c:	b.ne	8be8 <elf64_xlatetom@@ELFUTILS_1.0+0x16c4>  // b.any
    8c20:	b	8c80 <elf64_xlatetom@@ELFUTILS_1.0+0x175c>
    8c24:	ldr	x1, [sp, #40]
    8c28:	ldr	x0, [sp, #24]
    8c2c:	add	x0, x1, x0
    8c30:	str	x0, [sp, #40]
    8c34:	ldr	x1, [sp, #32]
    8c38:	ldr	x0, [sp, #24]
    8c3c:	add	x0, x1, x0
    8c40:	str	x0, [sp, #32]
    8c44:	b	8c6c <elf64_xlatetom@@ELFUTILS_1.0+0x1748>
    8c48:	ldr	x0, [sp, #32]
    8c4c:	sub	x0, x0, #0x8
    8c50:	str	x0, [sp, #32]
    8c54:	ldr	x0, [sp, #40]
    8c58:	sub	x0, x0, #0x8
    8c5c:	str	x0, [sp, #40]
    8c60:	ldr	x1, [sp, #32]
    8c64:	ldr	x0, [sp, #40]
    8c68:	bl	8b7c <elf64_xlatetom@@ELFUTILS_1.0+0x1658>
    8c6c:	ldr	x0, [sp, #56]
    8c70:	sub	x1, x0, #0x1
    8c74:	str	x1, [sp, #56]
    8c78:	cmp	x0, #0x0
    8c7c:	b.ne	8c48 <elf64_xlatetom@@ELFUTILS_1.0+0x1724>  // b.any
    8c80:	nop
    8c84:	ldp	x29, x30, [sp], #64
    8c88:	ret
    8c8c:	stp	x29, x30, [sp, #-32]!
    8c90:	mov	x29, sp
    8c94:	str	x0, [sp, #24]
    8c98:	str	x1, [sp, #16]
    8c9c:	ldr	x0, [sp, #16]
    8ca0:	ldr	x0, [x0]
    8ca4:	bl	76f4 <elf64_xlatetom@@ELFUTILS_1.0+0x1d0>
    8ca8:	mov	x1, x0
    8cac:	ldr	x0, [sp, #24]
    8cb0:	str	x1, [x0]
    8cb4:	nop
    8cb8:	ldp	x29, x30, [sp], #32
    8cbc:	ret
    8cc0:	stp	x29, x30, [sp, #-64]!
    8cc4:	mov	x29, sp
    8cc8:	str	x0, [sp, #40]
    8ccc:	str	x1, [sp, #32]
    8cd0:	str	x2, [sp, #24]
    8cd4:	str	w3, [sp, #20]
    8cd8:	ldr	x0, [sp, #24]
    8cdc:	lsr	x0, x0, #3
    8ce0:	str	x0, [sp, #56]
    8ce4:	ldr	x1, [sp, #40]
    8ce8:	ldr	x0, [sp, #32]
    8cec:	cmp	x1, x0
    8cf0:	b.cs	8d34 <elf64_xlatetom@@ELFUTILS_1.0+0x1810>  // b.hs, b.nlast
    8cf4:	b	8d1c <elf64_xlatetom@@ELFUTILS_1.0+0x17f8>
    8cf8:	ldr	x1, [sp, #32]
    8cfc:	ldr	x0, [sp, #40]
    8d00:	bl	8c8c <elf64_xlatetom@@ELFUTILS_1.0+0x1768>
    8d04:	ldr	x0, [sp, #40]
    8d08:	add	x0, x0, #0x8
    8d0c:	str	x0, [sp, #40]
    8d10:	ldr	x0, [sp, #32]
    8d14:	add	x0, x0, #0x8
    8d18:	str	x0, [sp, #32]
    8d1c:	ldr	x0, [sp, #56]
    8d20:	sub	x1, x0, #0x1
    8d24:	str	x1, [sp, #56]
    8d28:	cmp	x0, #0x0
    8d2c:	b.ne	8cf8 <elf64_xlatetom@@ELFUTILS_1.0+0x17d4>  // b.any
    8d30:	b	8d90 <elf64_xlatetom@@ELFUTILS_1.0+0x186c>
    8d34:	ldr	x1, [sp, #40]
    8d38:	ldr	x0, [sp, #24]
    8d3c:	add	x0, x1, x0
    8d40:	str	x0, [sp, #40]
    8d44:	ldr	x1, [sp, #32]
    8d48:	ldr	x0, [sp, #24]
    8d4c:	add	x0, x1, x0
    8d50:	str	x0, [sp, #32]
    8d54:	b	8d7c <elf64_xlatetom@@ELFUTILS_1.0+0x1858>
    8d58:	ldr	x0, [sp, #32]
    8d5c:	sub	x0, x0, #0x8
    8d60:	str	x0, [sp, #32]
    8d64:	ldr	x0, [sp, #40]
    8d68:	sub	x0, x0, #0x8
    8d6c:	str	x0, [sp, #40]
    8d70:	ldr	x1, [sp, #32]
    8d74:	ldr	x0, [sp, #40]
    8d78:	bl	8c8c <elf64_xlatetom@@ELFUTILS_1.0+0x1768>
    8d7c:	ldr	x0, [sp, #56]
    8d80:	sub	x1, x0, #0x1
    8d84:	str	x1, [sp, #56]
    8d88:	cmp	x0, #0x0
    8d8c:	b.ne	8d58 <elf64_xlatetom@@ELFUTILS_1.0+0x1834>  // b.any
    8d90:	nop
    8d94:	ldp	x29, x30, [sp], #64
    8d98:	ret
    8d9c:	stp	x29, x30, [sp, #-32]!
    8da0:	mov	x29, sp
    8da4:	str	x0, [sp, #24]
    8da8:	str	x1, [sp, #16]
    8dac:	ldr	x0, [sp, #16]
    8db0:	ldrh	w0, [x0]
    8db4:	bl	76c0 <elf64_xlatetom@@ELFUTILS_1.0+0x19c>
    8db8:	and	w1, w0, #0xffff
    8dbc:	ldr	x0, [sp, #24]
    8dc0:	strh	w1, [x0]
    8dc4:	nop
    8dc8:	nop
    8dcc:	ldp	x29, x30, [sp], #32
    8dd0:	ret
    8dd4:	stp	x29, x30, [sp, #-64]!
    8dd8:	mov	x29, sp
    8ddc:	str	x0, [sp, #40]
    8de0:	str	x1, [sp, #32]
    8de4:	str	x2, [sp, #24]
    8de8:	str	w3, [sp, #20]
    8dec:	ldr	x0, [sp, #24]
    8df0:	lsr	x0, x0, #1
    8df4:	str	x0, [sp, #56]
    8df8:	ldr	x1, [sp, #40]
    8dfc:	ldr	x0, [sp, #32]
    8e00:	cmp	x1, x0
    8e04:	b.cs	8e48 <elf64_xlatetom@@ELFUTILS_1.0+0x1924>  // b.hs, b.nlast
    8e08:	b	8e30 <elf64_xlatetom@@ELFUTILS_1.0+0x190c>
    8e0c:	ldr	x1, [sp, #32]
    8e10:	ldr	x0, [sp, #40]
    8e14:	bl	8d9c <elf64_xlatetom@@ELFUTILS_1.0+0x1878>
    8e18:	ldr	x0, [sp, #40]
    8e1c:	add	x0, x0, #0x2
    8e20:	str	x0, [sp, #40]
    8e24:	ldr	x0, [sp, #32]
    8e28:	add	x0, x0, #0x2
    8e2c:	str	x0, [sp, #32]
    8e30:	ldr	x0, [sp, #56]
    8e34:	sub	x1, x0, #0x1
    8e38:	str	x1, [sp, #56]
    8e3c:	cmp	x0, #0x0
    8e40:	b.ne	8e0c <elf64_xlatetom@@ELFUTILS_1.0+0x18e8>  // b.any
    8e44:	b	8ea4 <elf64_xlatetom@@ELFUTILS_1.0+0x1980>
    8e48:	ldr	x1, [sp, #40]
    8e4c:	ldr	x0, [sp, #24]
    8e50:	add	x0, x1, x0
    8e54:	str	x0, [sp, #40]
    8e58:	ldr	x1, [sp, #32]
    8e5c:	ldr	x0, [sp, #24]
    8e60:	add	x0, x1, x0
    8e64:	str	x0, [sp, #32]
    8e68:	b	8e90 <elf64_xlatetom@@ELFUTILS_1.0+0x196c>
    8e6c:	ldr	x0, [sp, #32]
    8e70:	sub	x0, x0, #0x2
    8e74:	str	x0, [sp, #32]
    8e78:	ldr	x0, [sp, #40]
    8e7c:	sub	x0, x0, #0x2
    8e80:	str	x0, [sp, #40]
    8e84:	ldr	x1, [sp, #32]
    8e88:	ldr	x0, [sp, #40]
    8e8c:	bl	8d9c <elf64_xlatetom@@ELFUTILS_1.0+0x1878>
    8e90:	ldr	x0, [sp, #56]
    8e94:	sub	x1, x0, #0x1
    8e98:	str	x1, [sp, #56]
    8e9c:	cmp	x0, #0x0
    8ea0:	b.ne	8e6c <elf64_xlatetom@@ELFUTILS_1.0+0x1948>  // b.any
    8ea4:	nop
    8ea8:	ldp	x29, x30, [sp], #64
    8eac:	ret
    8eb0:	stp	x29, x30, [sp, #-32]!
    8eb4:	mov	x29, sp
    8eb8:	str	x0, [sp, #24]
    8ebc:	str	x1, [sp, #16]
    8ec0:	ldr	x0, [sp, #16]
    8ec4:	ldr	w0, [x0]
    8ec8:	bl	76dc <elf64_xlatetom@@ELFUTILS_1.0+0x1b8>
    8ecc:	mov	w1, w0
    8ed0:	ldr	x0, [sp, #24]
    8ed4:	str	w1, [x0]
    8ed8:	nop
    8edc:	nop
    8ee0:	ldp	x29, x30, [sp], #32
    8ee4:	ret
    8ee8:	stp	x29, x30, [sp, #-64]!
    8eec:	mov	x29, sp
    8ef0:	str	x0, [sp, #40]
    8ef4:	str	x1, [sp, #32]
    8ef8:	str	x2, [sp, #24]
    8efc:	str	w3, [sp, #20]
    8f00:	ldr	x0, [sp, #24]
    8f04:	lsr	x0, x0, #2
    8f08:	str	x0, [sp, #56]
    8f0c:	ldr	x1, [sp, #40]
    8f10:	ldr	x0, [sp, #32]
    8f14:	cmp	x1, x0
    8f18:	b.cs	8f5c <elf64_xlatetom@@ELFUTILS_1.0+0x1a38>  // b.hs, b.nlast
    8f1c:	b	8f44 <elf64_xlatetom@@ELFUTILS_1.0+0x1a20>
    8f20:	ldr	x1, [sp, #32]
    8f24:	ldr	x0, [sp, #40]
    8f28:	bl	8eb0 <elf64_xlatetom@@ELFUTILS_1.0+0x198c>
    8f2c:	ldr	x0, [sp, #40]
    8f30:	add	x0, x0, #0x4
    8f34:	str	x0, [sp, #40]
    8f38:	ldr	x0, [sp, #32]
    8f3c:	add	x0, x0, #0x4
    8f40:	str	x0, [sp, #32]
    8f44:	ldr	x0, [sp, #56]
    8f48:	sub	x1, x0, #0x1
    8f4c:	str	x1, [sp, #56]
    8f50:	cmp	x0, #0x0
    8f54:	b.ne	8f20 <elf64_xlatetom@@ELFUTILS_1.0+0x19fc>  // b.any
    8f58:	b	8fb8 <elf64_xlatetom@@ELFUTILS_1.0+0x1a94>
    8f5c:	ldr	x1, [sp, #40]
    8f60:	ldr	x0, [sp, #24]
    8f64:	add	x0, x1, x0
    8f68:	str	x0, [sp, #40]
    8f6c:	ldr	x1, [sp, #32]
    8f70:	ldr	x0, [sp, #24]
    8f74:	add	x0, x1, x0
    8f78:	str	x0, [sp, #32]
    8f7c:	b	8fa4 <elf64_xlatetom@@ELFUTILS_1.0+0x1a80>
    8f80:	ldr	x0, [sp, #32]
    8f84:	sub	x0, x0, #0x4
    8f88:	str	x0, [sp, #32]
    8f8c:	ldr	x0, [sp, #40]
    8f90:	sub	x0, x0, #0x4
    8f94:	str	x0, [sp, #40]
    8f98:	ldr	x1, [sp, #32]
    8f9c:	ldr	x0, [sp, #40]
    8fa0:	bl	8eb0 <elf64_xlatetom@@ELFUTILS_1.0+0x198c>
    8fa4:	ldr	x0, [sp, #56]
    8fa8:	sub	x1, x0, #0x1
    8fac:	str	x1, [sp, #56]
    8fb0:	cmp	x0, #0x0
    8fb4:	b.ne	8f80 <elf64_xlatetom@@ELFUTILS_1.0+0x1a5c>  // b.any
    8fb8:	nop
    8fbc:	ldp	x29, x30, [sp], #64
    8fc0:	ret
    8fc4:	stp	x29, x30, [sp, #-32]!
    8fc8:	mov	x29, sp
    8fcc:	str	x0, [sp, #24]
    8fd0:	str	x1, [sp, #16]
    8fd4:	ldr	x0, [sp, #16]
    8fd8:	ldr	w0, [x0]
    8fdc:	bl	76dc <elf64_xlatetom@@ELFUTILS_1.0+0x1b8>
    8fe0:	mov	w1, w0
    8fe4:	ldr	x0, [sp, #24]
    8fe8:	str	w1, [x0]
    8fec:	nop
    8ff0:	nop
    8ff4:	ldp	x29, x30, [sp], #32
    8ff8:	ret
    8ffc:	stp	x29, x30, [sp, #-64]!
    9000:	mov	x29, sp
    9004:	str	x0, [sp, #40]
    9008:	str	x1, [sp, #32]
    900c:	str	x2, [sp, #24]
    9010:	str	w3, [sp, #20]
    9014:	ldr	x0, [sp, #24]
    9018:	lsr	x0, x0, #2
    901c:	str	x0, [sp, #56]
    9020:	ldr	x1, [sp, #40]
    9024:	ldr	x0, [sp, #32]
    9028:	cmp	x1, x0
    902c:	b.cs	9070 <elf64_xlatetom@@ELFUTILS_1.0+0x1b4c>  // b.hs, b.nlast
    9030:	b	9058 <elf64_xlatetom@@ELFUTILS_1.0+0x1b34>
    9034:	ldr	x1, [sp, #32]
    9038:	ldr	x0, [sp, #40]
    903c:	bl	8fc4 <elf64_xlatetom@@ELFUTILS_1.0+0x1aa0>
    9040:	ldr	x0, [sp, #40]
    9044:	add	x0, x0, #0x4
    9048:	str	x0, [sp, #40]
    904c:	ldr	x0, [sp, #32]
    9050:	add	x0, x0, #0x4
    9054:	str	x0, [sp, #32]
    9058:	ldr	x0, [sp, #56]
    905c:	sub	x1, x0, #0x1
    9060:	str	x1, [sp, #56]
    9064:	cmp	x0, #0x0
    9068:	b.ne	9034 <elf64_xlatetom@@ELFUTILS_1.0+0x1b10>  // b.any
    906c:	b	90cc <elf64_xlatetom@@ELFUTILS_1.0+0x1ba8>
    9070:	ldr	x1, [sp, #40]
    9074:	ldr	x0, [sp, #24]
    9078:	add	x0, x1, x0
    907c:	str	x0, [sp, #40]
    9080:	ldr	x1, [sp, #32]
    9084:	ldr	x0, [sp, #24]
    9088:	add	x0, x1, x0
    908c:	str	x0, [sp, #32]
    9090:	b	90b8 <elf64_xlatetom@@ELFUTILS_1.0+0x1b94>
    9094:	ldr	x0, [sp, #32]
    9098:	sub	x0, x0, #0x4
    909c:	str	x0, [sp, #32]
    90a0:	ldr	x0, [sp, #40]
    90a4:	sub	x0, x0, #0x4
    90a8:	str	x0, [sp, #40]
    90ac:	ldr	x1, [sp, #32]
    90b0:	ldr	x0, [sp, #40]
    90b4:	bl	8fc4 <elf64_xlatetom@@ELFUTILS_1.0+0x1aa0>
    90b8:	ldr	x0, [sp, #56]
    90bc:	sub	x1, x0, #0x1
    90c0:	str	x1, [sp, #56]
    90c4:	cmp	x0, #0x0
    90c8:	b.ne	9094 <elf64_xlatetom@@ELFUTILS_1.0+0x1b70>  // b.any
    90cc:	nop
    90d0:	ldp	x29, x30, [sp], #64
    90d4:	ret
    90d8:	stp	x29, x30, [sp, #-32]!
    90dc:	mov	x29, sp
    90e0:	str	x0, [sp, #24]
    90e4:	str	x1, [sp, #16]
    90e8:	ldr	x0, [sp, #16]
    90ec:	ldr	x0, [x0]
    90f0:	bl	76f4 <elf64_xlatetom@@ELFUTILS_1.0+0x1d0>
    90f4:	mov	x1, x0
    90f8:	ldr	x0, [sp, #24]
    90fc:	str	x1, [x0]
    9100:	nop
    9104:	ldp	x29, x30, [sp], #32
    9108:	ret
    910c:	stp	x29, x30, [sp, #-64]!
    9110:	mov	x29, sp
    9114:	str	x0, [sp, #40]
    9118:	str	x1, [sp, #32]
    911c:	str	x2, [sp, #24]
    9120:	str	w3, [sp, #20]
    9124:	ldr	x0, [sp, #24]
    9128:	lsr	x0, x0, #3
    912c:	str	x0, [sp, #56]
    9130:	ldr	x1, [sp, #40]
    9134:	ldr	x0, [sp, #32]
    9138:	cmp	x1, x0
    913c:	b.cs	9180 <elf64_xlatetom@@ELFUTILS_1.0+0x1c5c>  // b.hs, b.nlast
    9140:	b	9168 <elf64_xlatetom@@ELFUTILS_1.0+0x1c44>
    9144:	ldr	x1, [sp, #32]
    9148:	ldr	x0, [sp, #40]
    914c:	bl	90d8 <elf64_xlatetom@@ELFUTILS_1.0+0x1bb4>
    9150:	ldr	x0, [sp, #40]
    9154:	add	x0, x0, #0x8
    9158:	str	x0, [sp, #40]
    915c:	ldr	x0, [sp, #32]
    9160:	add	x0, x0, #0x8
    9164:	str	x0, [sp, #32]
    9168:	ldr	x0, [sp, #56]
    916c:	sub	x1, x0, #0x1
    9170:	str	x1, [sp, #56]
    9174:	cmp	x0, #0x0
    9178:	b.ne	9144 <elf64_xlatetom@@ELFUTILS_1.0+0x1c20>  // b.any
    917c:	b	91dc <elf64_xlatetom@@ELFUTILS_1.0+0x1cb8>
    9180:	ldr	x1, [sp, #40]
    9184:	ldr	x0, [sp, #24]
    9188:	add	x0, x1, x0
    918c:	str	x0, [sp, #40]
    9190:	ldr	x1, [sp, #32]
    9194:	ldr	x0, [sp, #24]
    9198:	add	x0, x1, x0
    919c:	str	x0, [sp, #32]
    91a0:	b	91c8 <elf64_xlatetom@@ELFUTILS_1.0+0x1ca4>
    91a4:	ldr	x0, [sp, #32]
    91a8:	sub	x0, x0, #0x8
    91ac:	str	x0, [sp, #32]
    91b0:	ldr	x0, [sp, #40]
    91b4:	sub	x0, x0, #0x8
    91b8:	str	x0, [sp, #40]
    91bc:	ldr	x1, [sp, #32]
    91c0:	ldr	x0, [sp, #40]
    91c4:	bl	90d8 <elf64_xlatetom@@ELFUTILS_1.0+0x1bb4>
    91c8:	ldr	x0, [sp, #56]
    91cc:	sub	x1, x0, #0x1
    91d0:	str	x1, [sp, #56]
    91d4:	cmp	x0, #0x0
    91d8:	b.ne	91a4 <elf64_xlatetom@@ELFUTILS_1.0+0x1c80>  // b.any
    91dc:	nop
    91e0:	ldp	x29, x30, [sp], #64
    91e4:	ret
    91e8:	stp	x29, x30, [sp, #-32]!
    91ec:	mov	x29, sp
    91f0:	str	x0, [sp, #24]
    91f4:	str	x1, [sp, #16]
    91f8:	ldr	x0, [sp, #16]
    91fc:	ldr	x0, [x0]
    9200:	bl	76f4 <elf64_xlatetom@@ELFUTILS_1.0+0x1d0>
    9204:	mov	x1, x0
    9208:	ldr	x0, [sp, #24]
    920c:	str	x1, [x0]
    9210:	nop
    9214:	ldp	x29, x30, [sp], #32
    9218:	ret
    921c:	stp	x29, x30, [sp, #-64]!
    9220:	mov	x29, sp
    9224:	str	x0, [sp, #40]
    9228:	str	x1, [sp, #32]
    922c:	str	x2, [sp, #24]
    9230:	str	w3, [sp, #20]
    9234:	ldr	x0, [sp, #24]
    9238:	lsr	x0, x0, #3
    923c:	str	x0, [sp, #56]
    9240:	ldr	x1, [sp, #40]
    9244:	ldr	x0, [sp, #32]
    9248:	cmp	x1, x0
    924c:	b.cs	9290 <elf64_xlatetom@@ELFUTILS_1.0+0x1d6c>  // b.hs, b.nlast
    9250:	b	9278 <elf64_xlatetom@@ELFUTILS_1.0+0x1d54>
    9254:	ldr	x1, [sp, #32]
    9258:	ldr	x0, [sp, #40]
    925c:	bl	91e8 <elf64_xlatetom@@ELFUTILS_1.0+0x1cc4>
    9260:	ldr	x0, [sp, #40]
    9264:	add	x0, x0, #0x8
    9268:	str	x0, [sp, #40]
    926c:	ldr	x0, [sp, #32]
    9270:	add	x0, x0, #0x8
    9274:	str	x0, [sp, #32]
    9278:	ldr	x0, [sp, #56]
    927c:	sub	x1, x0, #0x1
    9280:	str	x1, [sp, #56]
    9284:	cmp	x0, #0x0
    9288:	b.ne	9254 <elf64_xlatetom@@ELFUTILS_1.0+0x1d30>  // b.any
    928c:	b	92ec <elf64_xlatetom@@ELFUTILS_1.0+0x1dc8>
    9290:	ldr	x1, [sp, #40]
    9294:	ldr	x0, [sp, #24]
    9298:	add	x0, x1, x0
    929c:	str	x0, [sp, #40]
    92a0:	ldr	x1, [sp, #32]
    92a4:	ldr	x0, [sp, #24]
    92a8:	add	x0, x1, x0
    92ac:	str	x0, [sp, #32]
    92b0:	b	92d8 <elf64_xlatetom@@ELFUTILS_1.0+0x1db4>
    92b4:	ldr	x0, [sp, #32]
    92b8:	sub	x0, x0, #0x8
    92bc:	str	x0, [sp, #32]
    92c0:	ldr	x0, [sp, #40]
    92c4:	sub	x0, x0, #0x8
    92c8:	str	x0, [sp, #40]
    92cc:	ldr	x1, [sp, #32]
    92d0:	ldr	x0, [sp, #40]
    92d4:	bl	91e8 <elf64_xlatetom@@ELFUTILS_1.0+0x1cc4>
    92d8:	ldr	x0, [sp, #56]
    92dc:	sub	x1, x0, #0x1
    92e0:	str	x1, [sp, #56]
    92e4:	cmp	x0, #0x0
    92e8:	b.ne	92b4 <elf64_xlatetom@@ELFUTILS_1.0+0x1d90>  // b.any
    92ec:	nop
    92f0:	ldp	x29, x30, [sp], #64
    92f4:	ret
    92f8:	stp	x29, x30, [sp, #-80]!
    92fc:	mov	x29, sp
    9300:	str	x0, [sp, #40]
    9304:	str	x1, [sp, #32]
    9308:	str	x2, [sp, #24]
    930c:	str	w3, [sp, #20]
    9310:	ldr	x0, [sp, #40]
    9314:	str	x0, [sp, #72]
    9318:	ldr	x0, [sp, #32]
    931c:	str	x0, [sp, #64]
    9320:	ldr	x0, [sp, #24]
    9324:	lsr	x0, x0, #6
    9328:	str	x0, [sp, #56]
    932c:	b	94d0 <elf64_xlatetom@@ELFUTILS_1.0+0x1fac>
    9330:	ldr	x2, [sp, #72]
    9334:	ldr	x0, [sp, #64]
    9338:	ldp	x0, x1, [x0]
    933c:	stp	x0, x1, [x2]
    9340:	ldr	x0, [sp, #72]
    9344:	add	x2, x0, #0x10
    9348:	ldr	x0, [sp, #64]
    934c:	add	x0, x0, #0x10
    9350:	mov	x1, x0
    9354:	mov	x0, x2
    9358:	bl	8d9c <elf64_xlatetom@@ELFUTILS_1.0+0x1878>
    935c:	ldr	x0, [sp, #72]
    9360:	add	x2, x0, #0x12
    9364:	ldr	x0, [sp, #64]
    9368:	add	x0, x0, #0x12
    936c:	mov	x1, x0
    9370:	mov	x0, x2
    9374:	bl	8d9c <elf64_xlatetom@@ELFUTILS_1.0+0x1878>
    9378:	ldr	x0, [sp, #72]
    937c:	add	x2, x0, #0x14
    9380:	ldr	x0, [sp, #64]
    9384:	add	x0, x0, #0x14
    9388:	mov	x1, x0
    938c:	mov	x0, x2
    9390:	bl	8eb0 <elf64_xlatetom@@ELFUTILS_1.0+0x198c>
    9394:	ldr	x0, [sp, #72]
    9398:	add	x2, x0, #0x18
    939c:	ldr	x0, [sp, #64]
    93a0:	add	x0, x0, #0x18
    93a4:	mov	x1, x0
    93a8:	mov	x0, x2
    93ac:	bl	8b7c <elf64_xlatetom@@ELFUTILS_1.0+0x1658>
    93b0:	ldr	x0, [sp, #72]
    93b4:	add	x2, x0, #0x20
    93b8:	ldr	x0, [sp, #64]
    93bc:	add	x0, x0, #0x20
    93c0:	mov	x1, x0
    93c4:	mov	x0, x2
    93c8:	bl	8c8c <elf64_xlatetom@@ELFUTILS_1.0+0x1768>
    93cc:	ldr	x0, [sp, #72]
    93d0:	add	x2, x0, #0x28
    93d4:	ldr	x0, [sp, #64]
    93d8:	add	x0, x0, #0x28
    93dc:	mov	x1, x0
    93e0:	mov	x0, x2
    93e4:	bl	8c8c <elf64_xlatetom@@ELFUTILS_1.0+0x1768>
    93e8:	ldr	x0, [sp, #72]
    93ec:	add	x2, x0, #0x30
    93f0:	ldr	x0, [sp, #64]
    93f4:	add	x0, x0, #0x30
    93f8:	mov	x1, x0
    93fc:	mov	x0, x2
    9400:	bl	8eb0 <elf64_xlatetom@@ELFUTILS_1.0+0x198c>
    9404:	ldr	x0, [sp, #72]
    9408:	add	x2, x0, #0x34
    940c:	ldr	x0, [sp, #64]
    9410:	add	x0, x0, #0x34
    9414:	mov	x1, x0
    9418:	mov	x0, x2
    941c:	bl	8d9c <elf64_xlatetom@@ELFUTILS_1.0+0x1878>
    9420:	ldr	x0, [sp, #72]
    9424:	add	x2, x0, #0x36
    9428:	ldr	x0, [sp, #64]
    942c:	add	x0, x0, #0x36
    9430:	mov	x1, x0
    9434:	mov	x0, x2
    9438:	bl	8d9c <elf64_xlatetom@@ELFUTILS_1.0+0x1878>
    943c:	ldr	x0, [sp, #72]
    9440:	add	x2, x0, #0x38
    9444:	ldr	x0, [sp, #64]
    9448:	add	x0, x0, #0x38
    944c:	mov	x1, x0
    9450:	mov	x0, x2
    9454:	bl	8d9c <elf64_xlatetom@@ELFUTILS_1.0+0x1878>
    9458:	ldr	x0, [sp, #72]
    945c:	add	x2, x0, #0x3a
    9460:	ldr	x0, [sp, #64]
    9464:	add	x0, x0, #0x3a
    9468:	mov	x1, x0
    946c:	mov	x0, x2
    9470:	bl	8d9c <elf64_xlatetom@@ELFUTILS_1.0+0x1878>
    9474:	ldr	x0, [sp, #72]
    9478:	add	x2, x0, #0x3c
    947c:	ldr	x0, [sp, #64]
    9480:	add	x0, x0, #0x3c
    9484:	mov	x1, x0
    9488:	mov	x0, x2
    948c:	bl	8d9c <elf64_xlatetom@@ELFUTILS_1.0+0x1878>
    9490:	ldr	x0, [sp, #72]
    9494:	add	x2, x0, #0x3e
    9498:	ldr	x0, [sp, #64]
    949c:	add	x0, x0, #0x3e
    94a0:	mov	x1, x0
    94a4:	mov	x0, x2
    94a8:	bl	8d9c <elf64_xlatetom@@ELFUTILS_1.0+0x1878>
    94ac:	ldr	x0, [sp, #72]
    94b0:	add	x0, x0, #0x40
    94b4:	str	x0, [sp, #72]
    94b8:	ldr	x0, [sp, #64]
    94bc:	add	x0, x0, #0x40
    94c0:	str	x0, [sp, #64]
    94c4:	ldr	x0, [sp, #56]
    94c8:	sub	x0, x0, #0x1
    94cc:	str	x0, [sp, #56]
    94d0:	ldr	x0, [sp, #56]
    94d4:	cmp	x0, #0x0
    94d8:	b.ne	9330 <elf64_xlatetom@@ELFUTILS_1.0+0x1e0c>  // b.any
    94dc:	nop
    94e0:	nop
    94e4:	ldp	x29, x30, [sp], #80
    94e8:	ret
    94ec:	stp	x29, x30, [sp, #-80]!
    94f0:	mov	x29, sp
    94f4:	str	x0, [sp, #40]
    94f8:	str	x1, [sp, #32]
    94fc:	str	x2, [sp, #24]
    9500:	str	w3, [sp, #20]
    9504:	ldr	x0, [sp, #40]
    9508:	str	x0, [sp, #72]
    950c:	ldr	x0, [sp, #32]
    9510:	str	x0, [sp, #64]
    9514:	ldr	x0, [sp, #24]
    9518:	lsr	x1, x0, #3
    951c:	mov	x0, #0x2493                	// #9363
    9520:	movk	x0, #0x9249, lsl #16
    9524:	movk	x0, #0x4924, lsl #32
    9528:	movk	x0, #0x2492, lsl #48
    952c:	umulh	x0, x1, x0
    9530:	str	x0, [sp, #56]
    9534:	b	962c <elf64_xlatetom@@ELFUTILS_1.0+0x2108>
    9538:	ldr	x0, [sp, #72]
    953c:	ldr	x1, [sp, #64]
    9540:	bl	8eb0 <elf64_xlatetom@@ELFUTILS_1.0+0x198c>
    9544:	ldr	x0, [sp, #72]
    9548:	add	x2, x0, #0x4
    954c:	ldr	x0, [sp, #64]
    9550:	add	x0, x0, #0x4
    9554:	mov	x1, x0
    9558:	mov	x0, x2
    955c:	bl	8eb0 <elf64_xlatetom@@ELFUTILS_1.0+0x198c>
    9560:	ldr	x0, [sp, #72]
    9564:	add	x2, x0, #0x8
    9568:	ldr	x0, [sp, #64]
    956c:	add	x0, x0, #0x8
    9570:	mov	x1, x0
    9574:	mov	x0, x2
    9578:	bl	8c8c <elf64_xlatetom@@ELFUTILS_1.0+0x1768>
    957c:	ldr	x0, [sp, #72]
    9580:	add	x2, x0, #0x10
    9584:	ldr	x0, [sp, #64]
    9588:	add	x0, x0, #0x10
    958c:	mov	x1, x0
    9590:	mov	x0, x2
    9594:	bl	8b7c <elf64_xlatetom@@ELFUTILS_1.0+0x1658>
    9598:	ldr	x0, [sp, #72]
    959c:	add	x2, x0, #0x18
    95a0:	ldr	x0, [sp, #64]
    95a4:	add	x0, x0, #0x18
    95a8:	mov	x1, x0
    95ac:	mov	x0, x2
    95b0:	bl	8b7c <elf64_xlatetom@@ELFUTILS_1.0+0x1658>
    95b4:	ldr	x0, [sp, #72]
    95b8:	add	x2, x0, #0x20
    95bc:	ldr	x0, [sp, #64]
    95c0:	add	x0, x0, #0x20
    95c4:	mov	x1, x0
    95c8:	mov	x0, x2
    95cc:	bl	90d8 <elf64_xlatetom@@ELFUTILS_1.0+0x1bb4>
    95d0:	ldr	x0, [sp, #72]
    95d4:	add	x2, x0, #0x28
    95d8:	ldr	x0, [sp, #64]
    95dc:	add	x0, x0, #0x28
    95e0:	mov	x1, x0
    95e4:	mov	x0, x2
    95e8:	bl	90d8 <elf64_xlatetom@@ELFUTILS_1.0+0x1bb4>
    95ec:	ldr	x0, [sp, #72]
    95f0:	add	x2, x0, #0x30
    95f4:	ldr	x0, [sp, #64]
    95f8:	add	x0, x0, #0x30
    95fc:	mov	x1, x0
    9600:	mov	x0, x2
    9604:	bl	90d8 <elf64_xlatetom@@ELFUTILS_1.0+0x1bb4>
    9608:	ldr	x0, [sp, #72]
    960c:	add	x0, x0, #0x38
    9610:	str	x0, [sp, #72]
    9614:	ldr	x0, [sp, #64]
    9618:	add	x0, x0, #0x38
    961c:	str	x0, [sp, #64]
    9620:	ldr	x0, [sp, #56]
    9624:	sub	x0, x0, #0x1
    9628:	str	x0, [sp, #56]
    962c:	ldr	x0, [sp, #56]
    9630:	cmp	x0, #0x0
    9634:	b.ne	9538 <elf64_xlatetom@@ELFUTILS_1.0+0x2014>  // b.any
    9638:	nop
    963c:	nop
    9640:	ldp	x29, x30, [sp], #80
    9644:	ret
    9648:	stp	x29, x30, [sp, #-80]!
    964c:	mov	x29, sp
    9650:	str	x0, [sp, #40]
    9654:	str	x1, [sp, #32]
    9658:	str	x2, [sp, #24]
    965c:	str	w3, [sp, #20]
    9660:	ldr	x0, [sp, #40]
    9664:	str	x0, [sp, #72]
    9668:	ldr	x0, [sp, #32]
    966c:	str	x0, [sp, #64]
    9670:	ldr	x0, [sp, #24]
    9674:	lsr	x0, x0, #6
    9678:	str	x0, [sp, #56]
    967c:	b	97ac <elf64_xlatetom@@ELFUTILS_1.0+0x2288>
    9680:	ldr	x0, [sp, #72]
    9684:	ldr	x1, [sp, #64]
    9688:	bl	8eb0 <elf64_xlatetom@@ELFUTILS_1.0+0x198c>
    968c:	ldr	x0, [sp, #72]
    9690:	add	x2, x0, #0x4
    9694:	ldr	x0, [sp, #64]
    9698:	add	x0, x0, #0x4
    969c:	mov	x1, x0
    96a0:	mov	x0, x2
    96a4:	bl	8eb0 <elf64_xlatetom@@ELFUTILS_1.0+0x198c>
    96a8:	ldr	x0, [sp, #72]
    96ac:	add	x2, x0, #0x8
    96b0:	ldr	x0, [sp, #64]
    96b4:	add	x0, x0, #0x8
    96b8:	mov	x1, x0
    96bc:	mov	x0, x2
    96c0:	bl	90d8 <elf64_xlatetom@@ELFUTILS_1.0+0x1bb4>
    96c4:	ldr	x0, [sp, #72]
    96c8:	add	x2, x0, #0x10
    96cc:	ldr	x0, [sp, #64]
    96d0:	add	x0, x0, #0x10
    96d4:	mov	x1, x0
    96d8:	mov	x0, x2
    96dc:	bl	8b7c <elf64_xlatetom@@ELFUTILS_1.0+0x1658>
    96e0:	ldr	x0, [sp, #72]
    96e4:	add	x2, x0, #0x18
    96e8:	ldr	x0, [sp, #64]
    96ec:	add	x0, x0, #0x18
    96f0:	mov	x1, x0
    96f4:	mov	x0, x2
    96f8:	bl	8c8c <elf64_xlatetom@@ELFUTILS_1.0+0x1768>
    96fc:	ldr	x0, [sp, #72]
    9700:	add	x2, x0, #0x20
    9704:	ldr	x0, [sp, #64]
    9708:	add	x0, x0, #0x20
    970c:	mov	x1, x0
    9710:	mov	x0, x2
    9714:	bl	90d8 <elf64_xlatetom@@ELFUTILS_1.0+0x1bb4>
    9718:	ldr	x0, [sp, #72]
    971c:	add	x2, x0, #0x28
    9720:	ldr	x0, [sp, #64]
    9724:	add	x0, x0, #0x28
    9728:	mov	x1, x0
    972c:	mov	x0, x2
    9730:	bl	8eb0 <elf64_xlatetom@@ELFUTILS_1.0+0x198c>
    9734:	ldr	x0, [sp, #72]
    9738:	add	x2, x0, #0x2c
    973c:	ldr	x0, [sp, #64]
    9740:	add	x0, x0, #0x2c
    9744:	mov	x1, x0
    9748:	mov	x0, x2
    974c:	bl	8eb0 <elf64_xlatetom@@ELFUTILS_1.0+0x198c>
    9750:	ldr	x0, [sp, #72]
    9754:	add	x2, x0, #0x30
    9758:	ldr	x0, [sp, #64]
    975c:	add	x0, x0, #0x30
    9760:	mov	x1, x0
    9764:	mov	x0, x2
    9768:	bl	90d8 <elf64_xlatetom@@ELFUTILS_1.0+0x1bb4>
    976c:	ldr	x0, [sp, #72]
    9770:	add	x2, x0, #0x38
    9774:	ldr	x0, [sp, #64]
    9778:	add	x0, x0, #0x38
    977c:	mov	x1, x0
    9780:	mov	x0, x2
    9784:	bl	90d8 <elf64_xlatetom@@ELFUTILS_1.0+0x1bb4>
    9788:	ldr	x0, [sp, #72]
    978c:	add	x0, x0, #0x40
    9790:	str	x0, [sp, #72]
    9794:	ldr	x0, [sp, #64]
    9798:	add	x0, x0, #0x40
    979c:	str	x0, [sp, #64]
    97a0:	ldr	x0, [sp, #56]
    97a4:	sub	x0, x0, #0x1
    97a8:	str	x0, [sp, #56]
    97ac:	ldr	x0, [sp, #56]
    97b0:	cmp	x0, #0x0
    97b4:	b.ne	9680 <elf64_xlatetom@@ELFUTILS_1.0+0x215c>  // b.any
    97b8:	nop
    97bc:	nop
    97c0:	ldp	x29, x30, [sp], #80
    97c4:	ret
    97c8:	stp	x29, x30, [sp, #-80]!
    97cc:	mov	x29, sp
    97d0:	str	x0, [sp, #40]
    97d4:	str	x1, [sp, #32]
    97d8:	str	x2, [sp, #24]
    97dc:	str	w3, [sp, #20]
    97e0:	ldr	x0, [sp, #40]
    97e4:	str	x0, [sp, #72]
    97e8:	ldr	x0, [sp, #32]
    97ec:	str	x0, [sp, #64]
    97f0:	ldr	x1, [sp, #24]
    97f4:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    97f8:	movk	x0, #0xaaab
    97fc:	umulh	x0, x1, x0
    9800:	lsr	x0, x0, #4
    9804:	str	x0, [sp, #56]
    9808:	b	98b0 <elf64_xlatetom@@ELFUTILS_1.0+0x238c>
    980c:	ldr	x0, [sp, #72]
    9810:	ldr	x1, [sp, #64]
    9814:	bl	8eb0 <elf64_xlatetom@@ELFUTILS_1.0+0x198c>
    9818:	ldr	x0, [sp, #64]
    981c:	ldrb	w1, [x0, #4]
    9820:	ldr	x0, [sp, #72]
    9824:	strb	w1, [x0, #4]
    9828:	ldr	x0, [sp, #64]
    982c:	ldrb	w1, [x0, #5]
    9830:	ldr	x0, [sp, #72]
    9834:	strb	w1, [x0, #5]
    9838:	ldr	x0, [sp, #72]
    983c:	add	x2, x0, #0x6
    9840:	ldr	x0, [sp, #64]
    9844:	add	x0, x0, #0x6
    9848:	mov	x1, x0
    984c:	mov	x0, x2
    9850:	bl	8d9c <elf64_xlatetom@@ELFUTILS_1.0+0x1878>
    9854:	ldr	x0, [sp, #72]
    9858:	add	x2, x0, #0x8
    985c:	ldr	x0, [sp, #64]
    9860:	add	x0, x0, #0x8
    9864:	mov	x1, x0
    9868:	mov	x0, x2
    986c:	bl	8b7c <elf64_xlatetom@@ELFUTILS_1.0+0x1658>
    9870:	ldr	x0, [sp, #72]
    9874:	add	x2, x0, #0x10
    9878:	ldr	x0, [sp, #64]
    987c:	add	x0, x0, #0x10
    9880:	mov	x1, x0
    9884:	mov	x0, x2
    9888:	bl	90d8 <elf64_xlatetom@@ELFUTILS_1.0+0x1bb4>
    988c:	ldr	x0, [sp, #72]
    9890:	add	x0, x0, #0x18
    9894:	str	x0, [sp, #72]
    9898:	ldr	x0, [sp, #64]
    989c:	add	x0, x0, #0x18
    98a0:	str	x0, [sp, #64]
    98a4:	ldr	x0, [sp, #56]
    98a8:	sub	x0, x0, #0x1
    98ac:	str	x0, [sp, #56]
    98b0:	ldr	x0, [sp, #56]
    98b4:	cmp	x0, #0x0
    98b8:	b.ne	980c <elf64_xlatetom@@ELFUTILS_1.0+0x22e8>  // b.any
    98bc:	nop
    98c0:	nop
    98c4:	ldp	x29, x30, [sp], #80
    98c8:	ret
    98cc:	stp	x29, x30, [sp, #-80]!
    98d0:	mov	x29, sp
    98d4:	str	x0, [sp, #40]
    98d8:	str	x1, [sp, #32]
    98dc:	str	x2, [sp, #24]
    98e0:	str	w3, [sp, #20]
    98e4:	ldr	x0, [sp, #40]
    98e8:	str	x0, [sp, #72]
    98ec:	ldr	x0, [sp, #32]
    98f0:	str	x0, [sp, #64]
    98f4:	ldr	x0, [sp, #24]
    98f8:	lsr	x0, x0, #4
    98fc:	str	x0, [sp, #56]
    9900:	b	9950 <elf64_xlatetom@@ELFUTILS_1.0+0x242c>
    9904:	ldr	x0, [sp, #72]
    9908:	ldr	x1, [sp, #64]
    990c:	bl	8b7c <elf64_xlatetom@@ELFUTILS_1.0+0x1658>
    9910:	ldr	x0, [sp, #72]
    9914:	add	x2, x0, #0x8
    9918:	ldr	x0, [sp, #64]
    991c:	add	x0, x0, #0x8
    9920:	mov	x1, x0
    9924:	mov	x0, x2
    9928:	bl	90d8 <elf64_xlatetom@@ELFUTILS_1.0+0x1bb4>
    992c:	ldr	x0, [sp, #72]
    9930:	add	x0, x0, #0x10
    9934:	str	x0, [sp, #72]
    9938:	ldr	x0, [sp, #64]
    993c:	add	x0, x0, #0x10
    9940:	str	x0, [sp, #64]
    9944:	ldr	x0, [sp, #56]
    9948:	sub	x0, x0, #0x1
    994c:	str	x0, [sp, #56]
    9950:	ldr	x0, [sp, #56]
    9954:	cmp	x0, #0x0
    9958:	b.ne	9904 <elf64_xlatetom@@ELFUTILS_1.0+0x23e0>  // b.any
    995c:	nop
    9960:	nop
    9964:	ldp	x29, x30, [sp], #80
    9968:	ret
    996c:	stp	x29, x30, [sp, #-80]!
    9970:	mov	x29, sp
    9974:	str	x0, [sp, #40]
    9978:	str	x1, [sp, #32]
    997c:	str	x2, [sp, #24]
    9980:	str	w3, [sp, #20]
    9984:	ldr	x0, [sp, #40]
    9988:	str	x0, [sp, #72]
    998c:	ldr	x0, [sp, #32]
    9990:	str	x0, [sp, #64]
    9994:	ldr	x1, [sp, #24]
    9998:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    999c:	movk	x0, #0xaaab
    99a0:	umulh	x0, x1, x0
    99a4:	lsr	x0, x0, #4
    99a8:	str	x0, [sp, #56]
    99ac:	b	9a18 <elf64_xlatetom@@ELFUTILS_1.0+0x24f4>
    99b0:	ldr	x0, [sp, #72]
    99b4:	ldr	x1, [sp, #64]
    99b8:	bl	8b7c <elf64_xlatetom@@ELFUTILS_1.0+0x1658>
    99bc:	ldr	x0, [sp, #72]
    99c0:	add	x2, x0, #0x8
    99c4:	ldr	x0, [sp, #64]
    99c8:	add	x0, x0, #0x8
    99cc:	mov	x1, x0
    99d0:	mov	x0, x2
    99d4:	bl	90d8 <elf64_xlatetom@@ELFUTILS_1.0+0x1bb4>
    99d8:	ldr	x0, [sp, #72]
    99dc:	add	x2, x0, #0x10
    99e0:	ldr	x0, [sp, #64]
    99e4:	add	x0, x0, #0x10
    99e8:	mov	x1, x0
    99ec:	mov	x0, x2
    99f0:	bl	91e8 <elf64_xlatetom@@ELFUTILS_1.0+0x1cc4>
    99f4:	ldr	x0, [sp, #72]
    99f8:	add	x0, x0, #0x18
    99fc:	str	x0, [sp, #72]
    9a00:	ldr	x0, [sp, #64]
    9a04:	add	x0, x0, #0x18
    9a08:	str	x0, [sp, #64]
    9a0c:	ldr	x0, [sp, #56]
    9a10:	sub	x0, x0, #0x1
    9a14:	str	x0, [sp, #56]
    9a18:	ldr	x0, [sp, #56]
    9a1c:	cmp	x0, #0x0
    9a20:	b.ne	99b0 <elf64_xlatetom@@ELFUTILS_1.0+0x248c>  // b.any
    9a24:	nop
    9a28:	nop
    9a2c:	ldp	x29, x30, [sp], #80
    9a30:	ret
    9a34:	stp	x29, x30, [sp, #-80]!
    9a38:	mov	x29, sp
    9a3c:	str	x0, [sp, #40]
    9a40:	str	x1, [sp, #32]
    9a44:	str	x2, [sp, #24]
    9a48:	str	w3, [sp, #20]
    9a4c:	ldr	x0, [sp, #40]
    9a50:	str	x0, [sp, #72]
    9a54:	ldr	x0, [sp, #32]
    9a58:	str	x0, [sp, #64]
    9a5c:	ldr	x1, [sp, #24]
    9a60:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    9a64:	movk	x0, #0xaaab
    9a68:	umulh	x0, x1, x0
    9a6c:	lsr	x0, x0, #3
    9a70:	str	x0, [sp, #56]
    9a74:	b	9ae0 <elf64_xlatetom@@ELFUTILS_1.0+0x25bc>
    9a78:	ldr	x0, [sp, #72]
    9a7c:	ldr	x1, [sp, #64]
    9a80:	bl	8eb0 <elf64_xlatetom@@ELFUTILS_1.0+0x198c>
    9a84:	ldr	x0, [sp, #72]
    9a88:	add	x2, x0, #0x4
    9a8c:	ldr	x0, [sp, #64]
    9a90:	add	x0, x0, #0x4
    9a94:	mov	x1, x0
    9a98:	mov	x0, x2
    9a9c:	bl	8eb0 <elf64_xlatetom@@ELFUTILS_1.0+0x198c>
    9aa0:	ldr	x0, [sp, #72]
    9aa4:	add	x2, x0, #0x8
    9aa8:	ldr	x0, [sp, #64]
    9aac:	add	x0, x0, #0x8
    9ab0:	mov	x1, x0
    9ab4:	mov	x0, x2
    9ab8:	bl	8eb0 <elf64_xlatetom@@ELFUTILS_1.0+0x198c>
    9abc:	ldr	x0, [sp, #72]
    9ac0:	add	x0, x0, #0xc
    9ac4:	str	x0, [sp, #72]
    9ac8:	ldr	x0, [sp, #64]
    9acc:	add	x0, x0, #0xc
    9ad0:	str	x0, [sp, #64]
    9ad4:	ldr	x0, [sp, #56]
    9ad8:	sub	x0, x0, #0x1
    9adc:	str	x0, [sp, #56]
    9ae0:	ldr	x0, [sp, #56]
    9ae4:	cmp	x0, #0x0
    9ae8:	b.ne	9a78 <elf64_xlatetom@@ELFUTILS_1.0+0x2554>  // b.any
    9aec:	nop
    9af0:	nop
    9af4:	ldp	x29, x30, [sp], #80
    9af8:	ret
    9afc:	stp	x29, x30, [sp, #-80]!
    9b00:	mov	x29, sp
    9b04:	str	x0, [sp, #40]
    9b08:	str	x1, [sp, #32]
    9b0c:	str	x2, [sp, #24]
    9b10:	str	w3, [sp, #20]
    9b14:	ldr	x0, [sp, #40]
    9b18:	str	x0, [sp, #72]
    9b1c:	ldr	x0, [sp, #32]
    9b20:	str	x0, [sp, #64]
    9b24:	ldr	x0, [sp, #24]
    9b28:	lsr	x0, x0, #4
    9b2c:	str	x0, [sp, #56]
    9b30:	b	9b80 <elf64_xlatetom@@ELFUTILS_1.0+0x265c>
    9b34:	ldr	x0, [sp, #72]
    9b38:	ldr	x1, [sp, #64]
    9b3c:	bl	90d8 <elf64_xlatetom@@ELFUTILS_1.0+0x1bb4>
    9b40:	ldr	x0, [sp, #72]
    9b44:	add	x2, x0, #0x8
    9b48:	ldr	x0, [sp, #64]
    9b4c:	add	x0, x0, #0x8
    9b50:	mov	x1, x0
    9b54:	mov	x0, x2
    9b58:	bl	8b7c <elf64_xlatetom@@ELFUTILS_1.0+0x1658>
    9b5c:	ldr	x0, [sp, #72]
    9b60:	add	x0, x0, #0x10
    9b64:	str	x0, [sp, #72]
    9b68:	ldr	x0, [sp, #64]
    9b6c:	add	x0, x0, #0x10
    9b70:	str	x0, [sp, #64]
    9b74:	ldr	x0, [sp, #56]
    9b78:	sub	x0, x0, #0x1
    9b7c:	str	x0, [sp, #56]
    9b80:	ldr	x0, [sp, #56]
    9b84:	cmp	x0, #0x0
    9b88:	b.ne	9b34 <elf64_xlatetom@@ELFUTILS_1.0+0x2610>  // b.any
    9b8c:	nop
    9b90:	nop
    9b94:	ldp	x29, x30, [sp], #80
    9b98:	ret
    9b9c:	stp	x29, x30, [sp, #-80]!
    9ba0:	mov	x29, sp
    9ba4:	str	x0, [sp, #40]
    9ba8:	str	x1, [sp, #32]
    9bac:	str	x2, [sp, #24]
    9bb0:	str	w3, [sp, #20]
    9bb4:	ldr	x0, [sp, #40]
    9bb8:	str	x0, [sp, #72]
    9bbc:	ldr	x0, [sp, #32]
    9bc0:	str	x0, [sp, #64]
    9bc4:	ldr	x0, [sp, #24]
    9bc8:	lsr	x0, x0, #2
    9bcc:	str	x0, [sp, #56]
    9bd0:	b	9c20 <elf64_xlatetom@@ELFUTILS_1.0+0x26fc>
    9bd4:	ldr	x0, [sp, #72]
    9bd8:	ldr	x1, [sp, #64]
    9bdc:	bl	8d9c <elf64_xlatetom@@ELFUTILS_1.0+0x1878>
    9be0:	ldr	x0, [sp, #72]
    9be4:	add	x2, x0, #0x2
    9be8:	ldr	x0, [sp, #64]
    9bec:	add	x0, x0, #0x2
    9bf0:	mov	x1, x0
    9bf4:	mov	x0, x2
    9bf8:	bl	8d9c <elf64_xlatetom@@ELFUTILS_1.0+0x1878>
    9bfc:	ldr	x0, [sp, #72]
    9c00:	add	x0, x0, #0x4
    9c04:	str	x0, [sp, #72]
    9c08:	ldr	x0, [sp, #64]
    9c0c:	add	x0, x0, #0x4
    9c10:	str	x0, [sp, #64]
    9c14:	ldr	x0, [sp, #56]
    9c18:	sub	x0, x0, #0x1
    9c1c:	str	x0, [sp, #56]
    9c20:	ldr	x0, [sp, #56]
    9c24:	cmp	x0, #0x0
    9c28:	b.ne	9bd4 <elf64_xlatetom@@ELFUTILS_1.0+0x26b0>  // b.any
    9c2c:	nop
    9c30:	nop
    9c34:	ldp	x29, x30, [sp], #80
    9c38:	ret
    9c3c:	stp	x29, x30, [sp, #-80]!
    9c40:	mov	x29, sp
    9c44:	str	x0, [sp, #40]
    9c48:	str	x1, [sp, #32]
    9c4c:	str	x2, [sp, #24]
    9c50:	str	w3, [sp, #20]
    9c54:	ldr	x0, [sp, #40]
    9c58:	str	x0, [sp, #72]
    9c5c:	ldr	x0, [sp, #32]
    9c60:	str	x0, [sp, #64]
    9c64:	ldr	x0, [sp, #24]
    9c68:	lsr	x0, x0, #5
    9c6c:	str	x0, [sp, #56]
    9c70:	b	9d14 <elf64_xlatetom@@ELFUTILS_1.0+0x27f0>
    9c74:	ldr	x0, [sp, #72]
    9c78:	ldr	x1, [sp, #64]
    9c7c:	bl	90d8 <elf64_xlatetom@@ELFUTILS_1.0+0x1bb4>
    9c80:	ldr	x0, [sp, #72]
    9c84:	add	x2, x0, #0x8
    9c88:	ldr	x0, [sp, #64]
    9c8c:	add	x0, x0, #0x8
    9c90:	mov	x1, x0
    9c94:	mov	x0, x2
    9c98:	bl	90d8 <elf64_xlatetom@@ELFUTILS_1.0+0x1bb4>
    9c9c:	ldr	x0, [sp, #72]
    9ca0:	add	x2, x0, #0x10
    9ca4:	ldr	x0, [sp, #64]
    9ca8:	add	x0, x0, #0x10
    9cac:	mov	x1, x0
    9cb0:	mov	x0, x2
    9cb4:	bl	90d8 <elf64_xlatetom@@ELFUTILS_1.0+0x1bb4>
    9cb8:	ldr	x0, [sp, #72]
    9cbc:	add	x2, x0, #0x18
    9cc0:	ldr	x0, [sp, #64]
    9cc4:	add	x0, x0, #0x18
    9cc8:	mov	x1, x0
    9ccc:	mov	x0, x2
    9cd0:	bl	8d9c <elf64_xlatetom@@ELFUTILS_1.0+0x1878>
    9cd4:	ldr	x0, [sp, #72]
    9cd8:	add	x2, x0, #0x1a
    9cdc:	ldr	x0, [sp, #64]
    9ce0:	add	x0, x0, #0x1a
    9ce4:	mov	x1, x0
    9ce8:	mov	x0, x2
    9cec:	bl	8d9c <elf64_xlatetom@@ELFUTILS_1.0+0x1878>
    9cf0:	ldr	x0, [sp, #72]
    9cf4:	add	x0, x0, #0x20
    9cf8:	str	x0, [sp, #72]
    9cfc:	ldr	x0, [sp, #64]
    9d00:	add	x0, x0, #0x20
    9d04:	str	x0, [sp, #64]
    9d08:	ldr	x0, [sp, #56]
    9d0c:	sub	x0, x0, #0x1
    9d10:	str	x0, [sp, #56]
    9d14:	ldr	x0, [sp, #56]
    9d18:	cmp	x0, #0x0
    9d1c:	b.ne	9c74 <elf64_xlatetom@@ELFUTILS_1.0+0x2750>  // b.any
    9d20:	nop
    9d24:	nop
    9d28:	ldp	x29, x30, [sp], #80
    9d2c:	ret
    9d30:	stp	x29, x30, [sp, #-80]!
    9d34:	mov	x29, sp
    9d38:	str	x0, [sp, #40]
    9d3c:	str	x1, [sp, #32]
    9d40:	str	x2, [sp, #24]
    9d44:	str	w3, [sp, #20]
    9d48:	ldr	x0, [sp, #40]
    9d4c:	str	x0, [sp, #72]
    9d50:	ldr	x0, [sp, #32]
    9d54:	str	x0, [sp, #64]
    9d58:	ldr	x1, [sp, #24]
    9d5c:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
    9d60:	movk	x0, #0xcccd
    9d64:	umulh	x0, x1, x0
    9d68:	lsr	x0, x0, #4
    9d6c:	str	x0, [sp, #56]
    9d70:	b	9e14 <elf64_xlatetom@@ELFUTILS_1.0+0x28f0>
    9d74:	ldr	x0, [sp, #72]
    9d78:	ldr	x1, [sp, #64]
    9d7c:	bl	8eb0 <elf64_xlatetom@@ELFUTILS_1.0+0x198c>
    9d80:	ldr	x0, [sp, #72]
    9d84:	add	x2, x0, #0x4
    9d88:	ldr	x0, [sp, #64]
    9d8c:	add	x0, x0, #0x4
    9d90:	mov	x1, x0
    9d94:	mov	x0, x2
    9d98:	bl	8eb0 <elf64_xlatetom@@ELFUTILS_1.0+0x198c>
    9d9c:	ldr	x0, [sp, #72]
    9da0:	add	x2, x0, #0x8
    9da4:	ldr	x0, [sp, #64]
    9da8:	add	x0, x0, #0x8
    9dac:	mov	x1, x0
    9db0:	mov	x0, x2
    9db4:	bl	8eb0 <elf64_xlatetom@@ELFUTILS_1.0+0x198c>
    9db8:	ldr	x0, [sp, #72]
    9dbc:	add	x2, x0, #0xc
    9dc0:	ldr	x0, [sp, #64]
    9dc4:	add	x0, x0, #0xc
    9dc8:	mov	x1, x0
    9dcc:	mov	x0, x2
    9dd0:	bl	8eb0 <elf64_xlatetom@@ELFUTILS_1.0+0x198c>
    9dd4:	ldr	x0, [sp, #72]
    9dd8:	add	x2, x0, #0x10
    9ddc:	ldr	x0, [sp, #64]
    9de0:	add	x0, x0, #0x10
    9de4:	mov	x1, x0
    9de8:	mov	x0, x2
    9dec:	bl	8eb0 <elf64_xlatetom@@ELFUTILS_1.0+0x198c>
    9df0:	ldr	x0, [sp, #72]
    9df4:	add	x0, x0, #0x14
    9df8:	str	x0, [sp, #72]
    9dfc:	ldr	x0, [sp, #64]
    9e00:	add	x0, x0, #0x14
    9e04:	str	x0, [sp, #64]
    9e08:	ldr	x0, [sp, #56]
    9e0c:	sub	x0, x0, #0x1
    9e10:	str	x0, [sp, #56]
    9e14:	ldr	x0, [sp, #56]
    9e18:	cmp	x0, #0x0
    9e1c:	b.ne	9d74 <elf64_xlatetom@@ELFUTILS_1.0+0x2850>  // b.any
    9e20:	nop
    9e24:	nop
    9e28:	ldp	x29, x30, [sp], #80
    9e2c:	ret
    9e30:	stp	x29, x30, [sp, #-80]!
    9e34:	mov	x29, sp
    9e38:	str	x0, [sp, #40]
    9e3c:	str	x1, [sp, #32]
    9e40:	str	x2, [sp, #24]
    9e44:	str	w3, [sp, #20]
    9e48:	ldr	x0, [sp, #40]
    9e4c:	str	x0, [sp, #72]
    9e50:	ldr	x0, [sp, #32]
    9e54:	str	x0, [sp, #64]
    9e58:	ldr	x0, [sp, #24]
    9e5c:	lsr	x0, x0, #4
    9e60:	str	x0, [sp, #56]
    9e64:	b	9eb4 <elf64_xlatetom@@ELFUTILS_1.0+0x2990>
    9e68:	ldr	x0, [sp, #72]
    9e6c:	ldr	x1, [sp, #64]
    9e70:	bl	90d8 <elf64_xlatetom@@ELFUTILS_1.0+0x1bb4>
    9e74:	ldr	x0, [sp, #72]
    9e78:	add	x2, x0, #0x8
    9e7c:	ldr	x0, [sp, #64]
    9e80:	add	x0, x0, #0x8
    9e84:	mov	x1, x0
    9e88:	mov	x0, x2
    9e8c:	bl	8b7c <elf64_xlatetom@@ELFUTILS_1.0+0x1658>
    9e90:	ldr	x0, [sp, #72]
    9e94:	add	x0, x0, #0x10
    9e98:	str	x0, [sp, #72]
    9e9c:	ldr	x0, [sp, #64]
    9ea0:	add	x0, x0, #0x10
    9ea4:	str	x0, [sp, #64]
    9ea8:	ldr	x0, [sp, #56]
    9eac:	sub	x0, x0, #0x1
    9eb0:	str	x0, [sp, #56]
    9eb4:	ldr	x0, [sp, #56]
    9eb8:	cmp	x0, #0x0
    9ebc:	b.ne	9e68 <elf64_xlatetom@@ELFUTILS_1.0+0x2944>  // b.any
    9ec0:	nop
    9ec4:	nop
    9ec8:	ldp	x29, x30, [sp], #80
    9ecc:	ret
    9ed0:	stp	x29, x30, [sp, #-80]!
    9ed4:	mov	x29, sp
    9ed8:	str	x0, [sp, #40]
    9edc:	str	x1, [sp, #32]
    9ee0:	str	x2, [sp, #24]
    9ee4:	str	w3, [sp, #20]
    9ee8:	ldr	x0, [sp, #40]
    9eec:	str	x0, [sp, #72]
    9ef0:	ldr	x0, [sp, #32]
    9ef4:	str	x0, [sp, #64]
    9ef8:	ldr	x1, [sp, #24]
    9efc:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    9f00:	movk	x0, #0xaaab
    9f04:	umulh	x0, x1, x0
    9f08:	lsr	x0, x0, #4
    9f0c:	str	x0, [sp, #56]
    9f10:	b	9f98 <elf64_xlatetom@@ELFUTILS_1.0+0x2a74>
    9f14:	ldr	x0, [sp, #72]
    9f18:	ldr	x1, [sp, #64]
    9f1c:	bl	8eb0 <elf64_xlatetom@@ELFUTILS_1.0+0x198c>
    9f20:	ldr	x0, [sp, #72]
    9f24:	add	x2, x0, #0x4
    9f28:	ldr	x0, [sp, #64]
    9f2c:	add	x0, x0, #0x4
    9f30:	mov	x1, x0
    9f34:	mov	x0, x2
    9f38:	bl	8eb0 <elf64_xlatetom@@ELFUTILS_1.0+0x198c>
    9f3c:	ldr	x0, [sp, #72]
    9f40:	add	x2, x0, #0x8
    9f44:	ldr	x0, [sp, #64]
    9f48:	add	x0, x0, #0x8
    9f4c:	mov	x1, x0
    9f50:	mov	x0, x2
    9f54:	bl	90d8 <elf64_xlatetom@@ELFUTILS_1.0+0x1bb4>
    9f58:	ldr	x0, [sp, #72]
    9f5c:	add	x2, x0, #0x10
    9f60:	ldr	x0, [sp, #64]
    9f64:	add	x0, x0, #0x10
    9f68:	mov	x1, x0
    9f6c:	mov	x0, x2
    9f70:	bl	90d8 <elf64_xlatetom@@ELFUTILS_1.0+0x1bb4>
    9f74:	ldr	x0, [sp, #72]
    9f78:	add	x0, x0, #0x18
    9f7c:	str	x0, [sp, #72]
    9f80:	ldr	x0, [sp, #64]
    9f84:	add	x0, x0, #0x18
    9f88:	str	x0, [sp, #64]
    9f8c:	ldr	x0, [sp, #56]
    9f90:	sub	x0, x0, #0x1
    9f94:	str	x0, [sp, #56]
    9f98:	ldr	x0, [sp, #56]
    9f9c:	cmp	x0, #0x0
    9fa0:	b.ne	9f14 <elf64_xlatetom@@ELFUTILS_1.0+0x29f0>  // b.any
    9fa4:	nop
    9fa8:	nop
    9fac:	ldp	x29, x30, [sp], #80
    9fb0:	ret
    9fb4:	stp	x29, x30, [sp, #-96]!
    9fb8:	mov	x29, sp
    9fbc:	str	x0, [sp, #40]
    9fc0:	str	x1, [sp, #32]
    9fc4:	str	x2, [sp, #24]
    9fc8:	str	w3, [sp, #20]
    9fcc:	str	xzr, [sp, #88]
    9fd0:	ldr	x0, [sp, #24]
    9fd4:	cmp	x0, #0x0
    9fd8:	b.eq	a2e0 <elf64_xlatetom@@ELFUTILS_1.0+0x2dbc>  // b.none
    9fdc:	ldr	x2, [sp, #24]
    9fe0:	ldr	x1, [sp, #32]
    9fe4:	ldr	x0, [sp, #40]
    9fe8:	bl	30b0 <memmove@plt>
    9fec:	ldr	x1, [sp, #88]
    9ff0:	ldr	x0, [sp, #24]
    9ff4:	cmp	x1, x0
    9ff8:	b.hi	a2e8 <elf64_xlatetom@@ELFUTILS_1.0+0x2dc4>  // b.pmore
    9ffc:	ldr	x1, [sp, #24]
    a000:	ldr	x0, [sp, #88]
    a004:	sub	x0, x1, x0
    a008:	cmp	x0, #0x13
    a00c:	b.ls	a2e8 <elf64_xlatetom@@ELFUTILS_1.0+0x2dc4>  // b.plast
    a010:	ldr	x1, [sp, #40]
    a014:	ldr	x0, [sp, #88]
    a018:	add	x0, x1, x0
    a01c:	str	x0, [sp, #72]
    a020:	ldr	x1, [sp, #32]
    a024:	ldr	x0, [sp, #88]
    a028:	add	x0, x1, x0
    a02c:	str	x0, [sp, #64]
    a030:	ldr	w0, [sp, #20]
    a034:	cmp	w0, #0x0
    a038:	b.ne	a100 <elf64_xlatetom@@ELFUTILS_1.0+0x2bdc>  // b.any
    a03c:	ldr	x0, [sp, #64]
    a040:	ldrh	w0, [x0]
    a044:	bl	76c0 <elf64_xlatetom@@ELFUTILS_1.0+0x19c>
    a048:	and	w1, w0, #0xffff
    a04c:	ldr	x0, [sp, #72]
    a050:	strh	w1, [x0]
    a054:	ldr	x0, [sp, #64]
    a058:	ldrh	w0, [x0, #2]
    a05c:	bl	76c0 <elf64_xlatetom@@ELFUTILS_1.0+0x19c>
    a060:	and	w1, w0, #0xffff
    a064:	ldr	x0, [sp, #72]
    a068:	strh	w1, [x0, #2]
    a06c:	ldr	x0, [sp, #64]
    a070:	ldrh	w0, [x0, #4]
    a074:	bl	76c0 <elf64_xlatetom@@ELFUTILS_1.0+0x19c>
    a078:	and	w1, w0, #0xffff
    a07c:	ldr	x0, [sp, #72]
    a080:	strh	w1, [x0, #4]
    a084:	ldr	x0, [sp, #64]
    a088:	ldrh	w0, [x0, #6]
    a08c:	bl	76c0 <elf64_xlatetom@@ELFUTILS_1.0+0x19c>
    a090:	and	w1, w0, #0xffff
    a094:	ldr	x0, [sp, #72]
    a098:	strh	w1, [x0, #6]
    a09c:	ldr	x0, [sp, #64]
    a0a0:	ldr	w0, [x0, #8]
    a0a4:	bl	76dc <elf64_xlatetom@@ELFUTILS_1.0+0x1b8>
    a0a8:	mov	w1, w0
    a0ac:	ldr	x0, [sp, #72]
    a0b0:	str	w1, [x0, #8]
    a0b4:	ldr	x0, [sp, #64]
    a0b8:	ldr	w0, [x0, #12]
    a0bc:	bl	76dc <elf64_xlatetom@@ELFUTILS_1.0+0x1b8>
    a0c0:	mov	w1, w0
    a0c4:	ldr	x0, [sp, #72]
    a0c8:	str	w1, [x0, #12]
    a0cc:	ldr	x0, [sp, #64]
    a0d0:	ldr	w0, [x0, #16]
    a0d4:	bl	76dc <elf64_xlatetom@@ELFUTILS_1.0+0x1b8>
    a0d8:	mov	w1, w0
    a0dc:	ldr	x0, [sp, #72]
    a0e0:	str	w1, [x0, #16]
    a0e4:	ldr	x0, [sp, #72]
    a0e8:	ldr	w0, [x0, #12]
    a0ec:	mov	w0, w0
    a0f0:	ldr	x1, [sp, #88]
    a0f4:	add	x0, x1, x0
    a0f8:	str	x0, [sp, #80]
    a0fc:	b	a118 <elf64_xlatetom@@ELFUTILS_1.0+0x2bf4>
    a100:	ldr	x0, [sp, #64]
    a104:	ldr	w0, [x0, #12]
    a108:	mov	w0, w0
    a10c:	ldr	x1, [sp, #88]
    a110:	add	x0, x1, x0
    a114:	str	x0, [sp, #80]
    a118:	ldr	x1, [sp, #80]
    a11c:	ldr	x0, [sp, #24]
    a120:	cmp	x1, x0
    a124:	b.hi	a2f0 <elf64_xlatetom@@ELFUTILS_1.0+0x2dcc>  // b.pmore
    a128:	ldr	x1, [sp, #24]
    a12c:	ldr	x0, [sp, #80]
    a130:	sub	x0, x1, x0
    a134:	cmp	x0, #0x7
    a138:	b.ls	a2f0 <elf64_xlatetom@@ELFUTILS_1.0+0x2dcc>  // b.plast
    a13c:	ldr	x1, [sp, #40]
    a140:	ldr	x0, [sp, #80]
    a144:	add	x0, x1, x0
    a148:	str	x0, [sp, #56]
    a14c:	ldr	x1, [sp, #32]
    a150:	ldr	x0, [sp, #80]
    a154:	add	x0, x1, x0
    a158:	str	x0, [sp, #48]
    a15c:	ldr	w0, [sp, #20]
    a160:	cmp	w0, #0x0
    a164:	b.eq	a180 <elf64_xlatetom@@ELFUTILS_1.0+0x2c5c>  // b.none
    a168:	ldr	x0, [sp, #48]
    a16c:	ldr	w0, [x0, #4]
    a170:	mov	w0, w0
    a174:	ldr	x1, [sp, #80]
    a178:	add	x0, x1, x0
    a17c:	str	x0, [sp, #80]
    a180:	ldr	x0, [sp, #48]
    a184:	ldr	w0, [x0]
    a188:	bl	76dc <elf64_xlatetom@@ELFUTILS_1.0+0x1b8>
    a18c:	mov	w1, w0
    a190:	ldr	x0, [sp, #56]
    a194:	str	w1, [x0]
    a198:	ldr	x0, [sp, #48]
    a19c:	ldr	w0, [x0, #4]
    a1a0:	bl	76dc <elf64_xlatetom@@ELFUTILS_1.0+0x1b8>
    a1a4:	mov	w1, w0
    a1a8:	ldr	x0, [sp, #56]
    a1ac:	str	w1, [x0, #4]
    a1b0:	ldr	w0, [sp, #20]
    a1b4:	cmp	w0, #0x0
    a1b8:	b.ne	a1d4 <elf64_xlatetom@@ELFUTILS_1.0+0x2cb0>  // b.any
    a1bc:	ldr	x0, [sp, #56]
    a1c0:	ldr	w0, [x0, #4]
    a1c4:	mov	w0, w0
    a1c8:	ldr	x1, [sp, #80]
    a1cc:	add	x0, x1, x0
    a1d0:	str	x0, [sp, #80]
    a1d4:	ldr	x0, [sp, #48]
    a1d8:	ldr	w0, [x0, #4]
    a1dc:	cmp	w0, #0x0
    a1e0:	b.ne	a118 <elf64_xlatetom@@ELFUTILS_1.0+0x2bf4>  // b.any
    a1e4:	ldr	w0, [sp, #20]
    a1e8:	cmp	w0, #0x0
    a1ec:	b.eq	a2b4 <elf64_xlatetom@@ELFUTILS_1.0+0x2d90>  // b.none
    a1f0:	ldr	x0, [sp, #64]
    a1f4:	ldr	w0, [x0, #16]
    a1f8:	mov	w0, w0
    a1fc:	ldr	x1, [sp, #88]
    a200:	add	x0, x1, x0
    a204:	str	x0, [sp, #88]
    a208:	ldr	x0, [sp, #64]
    a20c:	ldrh	w0, [x0]
    a210:	bl	76c0 <elf64_xlatetom@@ELFUTILS_1.0+0x19c>
    a214:	and	w1, w0, #0xffff
    a218:	ldr	x0, [sp, #72]
    a21c:	strh	w1, [x0]
    a220:	ldr	x0, [sp, #64]
    a224:	ldrh	w0, [x0, #2]
    a228:	bl	76c0 <elf64_xlatetom@@ELFUTILS_1.0+0x19c>
    a22c:	and	w1, w0, #0xffff
    a230:	ldr	x0, [sp, #72]
    a234:	strh	w1, [x0, #2]
    a238:	ldr	x0, [sp, #64]
    a23c:	ldrh	w0, [x0, #4]
    a240:	bl	76c0 <elf64_xlatetom@@ELFUTILS_1.0+0x19c>
    a244:	and	w1, w0, #0xffff
    a248:	ldr	x0, [sp, #72]
    a24c:	strh	w1, [x0, #4]
    a250:	ldr	x0, [sp, #64]
    a254:	ldrh	w0, [x0, #6]
    a258:	bl	76c0 <elf64_xlatetom@@ELFUTILS_1.0+0x19c>
    a25c:	and	w1, w0, #0xffff
    a260:	ldr	x0, [sp, #72]
    a264:	strh	w1, [x0, #6]
    a268:	ldr	x0, [sp, #64]
    a26c:	ldr	w0, [x0, #8]
    a270:	bl	76dc <elf64_xlatetom@@ELFUTILS_1.0+0x1b8>
    a274:	mov	w1, w0
    a278:	ldr	x0, [sp, #72]
    a27c:	str	w1, [x0, #8]
    a280:	ldr	x0, [sp, #64]
    a284:	ldr	w0, [x0, #12]
    a288:	bl	76dc <elf64_xlatetom@@ELFUTILS_1.0+0x1b8>
    a28c:	mov	w1, w0
    a290:	ldr	x0, [sp, #72]
    a294:	str	w1, [x0, #12]
    a298:	ldr	x0, [sp, #64]
    a29c:	ldr	w0, [x0, #16]
    a2a0:	bl	76dc <elf64_xlatetom@@ELFUTILS_1.0+0x1b8>
    a2a4:	mov	w1, w0
    a2a8:	ldr	x0, [sp, #72]
    a2ac:	str	w1, [x0, #16]
    a2b0:	b	a2cc <elf64_xlatetom@@ELFUTILS_1.0+0x2da8>
    a2b4:	ldr	x0, [sp, #72]
    a2b8:	ldr	w0, [x0, #16]
    a2bc:	mov	w0, w0
    a2c0:	ldr	x1, [sp, #88]
    a2c4:	add	x0, x1, x0
    a2c8:	str	x0, [sp, #88]
    a2cc:	ldr	x0, [sp, #64]
    a2d0:	ldr	w0, [x0, #16]
    a2d4:	cmp	w0, #0x0
    a2d8:	b.ne	9fec <elf64_xlatetom@@ELFUTILS_1.0+0x2ac8>  // b.any
    a2dc:	b	a2f4 <elf64_xlatetom@@ELFUTILS_1.0+0x2dd0>
    a2e0:	nop
    a2e4:	b	a2f4 <elf64_xlatetom@@ELFUTILS_1.0+0x2dd0>
    a2e8:	nop
    a2ec:	b	a2f4 <elf64_xlatetom@@ELFUTILS_1.0+0x2dd0>
    a2f0:	nop
    a2f4:	ldp	x29, x30, [sp], #96
    a2f8:	ret
    a2fc:	stp	x29, x30, [sp, #-96]!
    a300:	mov	x29, sp
    a304:	str	x0, [sp, #40]
    a308:	str	x1, [sp, #32]
    a30c:	str	x2, [sp, #24]
    a310:	str	w3, [sp, #20]
    a314:	str	xzr, [sp, #88]
    a318:	ldr	x0, [sp, #24]
    a31c:	cmp	x0, #0x0
    a320:	b.eq	a610 <elf64_xlatetom@@ELFUTILS_1.0+0x30ec>  // b.none
    a324:	ldr	x2, [sp, #24]
    a328:	ldr	x1, [sp, #32]
    a32c:	ldr	x0, [sp, #40]
    a330:	bl	30b0 <memmove@plt>
    a334:	ldr	x1, [sp, #88]
    a338:	ldr	x0, [sp, #24]
    a33c:	cmp	x1, x0
    a340:	b.hi	a618 <elf64_xlatetom@@ELFUTILS_1.0+0x30f4>  // b.pmore
    a344:	ldr	x1, [sp, #24]
    a348:	ldr	x0, [sp, #88]
    a34c:	sub	x0, x1, x0
    a350:	cmp	x0, #0xf
    a354:	b.ls	a618 <elf64_xlatetom@@ELFUTILS_1.0+0x30f4>  // b.plast
    a358:	ldr	x1, [sp, #40]
    a35c:	ldr	x0, [sp, #88]
    a360:	add	x0, x1, x0
    a364:	str	x0, [sp, #72]
    a368:	ldr	x1, [sp, #32]
    a36c:	ldr	x0, [sp, #88]
    a370:	add	x0, x1, x0
    a374:	str	x0, [sp, #64]
    a378:	ldr	w0, [sp, #20]
    a37c:	cmp	w0, #0x0
    a380:	b.ne	a418 <elf64_xlatetom@@ELFUTILS_1.0+0x2ef4>  // b.any
    a384:	ldr	x0, [sp, #64]
    a388:	ldrh	w0, [x0]
    a38c:	bl	76c0 <elf64_xlatetom@@ELFUTILS_1.0+0x19c>
    a390:	and	w1, w0, #0xffff
    a394:	ldr	x0, [sp, #72]
    a398:	strh	w1, [x0]
    a39c:	ldr	x0, [sp, #64]
    a3a0:	ldrh	w0, [x0, #2]
    a3a4:	bl	76c0 <elf64_xlatetom@@ELFUTILS_1.0+0x19c>
    a3a8:	and	w1, w0, #0xffff
    a3ac:	ldr	x0, [sp, #72]
    a3b0:	strh	w1, [x0, #2]
    a3b4:	ldr	x0, [sp, #64]
    a3b8:	ldr	w0, [x0, #4]
    a3bc:	bl	76dc <elf64_xlatetom@@ELFUTILS_1.0+0x1b8>
    a3c0:	mov	w1, w0
    a3c4:	ldr	x0, [sp, #72]
    a3c8:	str	w1, [x0, #4]
    a3cc:	ldr	x0, [sp, #64]
    a3d0:	ldr	w0, [x0, #8]
    a3d4:	bl	76dc <elf64_xlatetom@@ELFUTILS_1.0+0x1b8>
    a3d8:	mov	w1, w0
    a3dc:	ldr	x0, [sp, #72]
    a3e0:	str	w1, [x0, #8]
    a3e4:	ldr	x0, [sp, #64]
    a3e8:	ldr	w0, [x0, #12]
    a3ec:	bl	76dc <elf64_xlatetom@@ELFUTILS_1.0+0x1b8>
    a3f0:	mov	w1, w0
    a3f4:	ldr	x0, [sp, #72]
    a3f8:	str	w1, [x0, #12]
    a3fc:	ldr	x0, [sp, #72]
    a400:	ldr	w0, [x0, #8]
    a404:	mov	w0, w0
    a408:	ldr	x1, [sp, #88]
    a40c:	add	x0, x1, x0
    a410:	str	x0, [sp, #80]
    a414:	b	a430 <elf64_xlatetom@@ELFUTILS_1.0+0x2f0c>
    a418:	ldr	x0, [sp, #64]
    a41c:	ldr	w0, [x0, #8]
    a420:	mov	w0, w0
    a424:	ldr	x1, [sp, #88]
    a428:	add	x0, x1, x0
    a42c:	str	x0, [sp, #80]
    a430:	ldr	x1, [sp, #80]
    a434:	ldr	x0, [sp, #24]
    a438:	cmp	x1, x0
    a43c:	b.hi	a620 <elf64_xlatetom@@ELFUTILS_1.0+0x30fc>  // b.pmore
    a440:	ldr	x1, [sp, #24]
    a444:	ldr	x0, [sp, #80]
    a448:	sub	x0, x1, x0
    a44c:	cmp	x0, #0xf
    a450:	b.ls	a620 <elf64_xlatetom@@ELFUTILS_1.0+0x30fc>  // b.plast
    a454:	ldr	x1, [sp, #40]
    a458:	ldr	x0, [sp, #80]
    a45c:	add	x0, x1, x0
    a460:	str	x0, [sp, #56]
    a464:	ldr	x1, [sp, #32]
    a468:	ldr	x0, [sp, #80]
    a46c:	add	x0, x1, x0
    a470:	str	x0, [sp, #48]
    a474:	ldr	w0, [sp, #20]
    a478:	cmp	w0, #0x0
    a47c:	b.eq	a498 <elf64_xlatetom@@ELFUTILS_1.0+0x2f74>  // b.none
    a480:	ldr	x0, [sp, #48]
    a484:	ldr	w0, [x0, #12]
    a488:	mov	w0, w0
    a48c:	ldr	x1, [sp, #80]
    a490:	add	x0, x1, x0
    a494:	str	x0, [sp, #80]
    a498:	ldr	x0, [sp, #48]
    a49c:	ldr	w0, [x0]
    a4a0:	bl	76dc <elf64_xlatetom@@ELFUTILS_1.0+0x1b8>
    a4a4:	mov	w1, w0
    a4a8:	ldr	x0, [sp, #56]
    a4ac:	str	w1, [x0]
    a4b0:	ldr	x0, [sp, #48]
    a4b4:	ldrh	w0, [x0, #4]
    a4b8:	bl	76c0 <elf64_xlatetom@@ELFUTILS_1.0+0x19c>
    a4bc:	and	w1, w0, #0xffff
    a4c0:	ldr	x0, [sp, #56]
    a4c4:	strh	w1, [x0, #4]
    a4c8:	ldr	x0, [sp, #48]
    a4cc:	ldrh	w0, [x0, #6]
    a4d0:	bl	76c0 <elf64_xlatetom@@ELFUTILS_1.0+0x19c>
    a4d4:	and	w1, w0, #0xffff
    a4d8:	ldr	x0, [sp, #56]
    a4dc:	strh	w1, [x0, #6]
    a4e0:	ldr	x0, [sp, #48]
    a4e4:	ldr	w0, [x0, #8]
    a4e8:	bl	76dc <elf64_xlatetom@@ELFUTILS_1.0+0x1b8>
    a4ec:	mov	w1, w0
    a4f0:	ldr	x0, [sp, #56]
    a4f4:	str	w1, [x0, #8]
    a4f8:	ldr	x0, [sp, #48]
    a4fc:	ldr	w0, [x0, #12]
    a500:	bl	76dc <elf64_xlatetom@@ELFUTILS_1.0+0x1b8>
    a504:	mov	w1, w0
    a508:	ldr	x0, [sp, #56]
    a50c:	str	w1, [x0, #12]
    a510:	ldr	w0, [sp, #20]
    a514:	cmp	w0, #0x0
    a518:	b.ne	a534 <elf64_xlatetom@@ELFUTILS_1.0+0x3010>  // b.any
    a51c:	ldr	x0, [sp, #56]
    a520:	ldr	w0, [x0, #12]
    a524:	mov	w0, w0
    a528:	ldr	x1, [sp, #80]
    a52c:	add	x0, x1, x0
    a530:	str	x0, [sp, #80]
    a534:	ldr	x0, [sp, #48]
    a538:	ldr	w0, [x0, #12]
    a53c:	cmp	w0, #0x0
    a540:	b.ne	a430 <elf64_xlatetom@@ELFUTILS_1.0+0x2f0c>  // b.any
    a544:	ldr	w0, [sp, #20]
    a548:	cmp	w0, #0x0
    a54c:	b.eq	a5e4 <elf64_xlatetom@@ELFUTILS_1.0+0x30c0>  // b.none
    a550:	ldr	x0, [sp, #64]
    a554:	ldr	w0, [x0, #12]
    a558:	mov	w0, w0
    a55c:	ldr	x1, [sp, #88]
    a560:	add	x0, x1, x0
    a564:	str	x0, [sp, #88]
    a568:	ldr	x0, [sp, #64]
    a56c:	ldrh	w0, [x0]
    a570:	bl	76c0 <elf64_xlatetom@@ELFUTILS_1.0+0x19c>
    a574:	and	w1, w0, #0xffff
    a578:	ldr	x0, [sp, #72]
    a57c:	strh	w1, [x0]
    a580:	ldr	x0, [sp, #64]
    a584:	ldrh	w0, [x0, #2]
    a588:	bl	76c0 <elf64_xlatetom@@ELFUTILS_1.0+0x19c>
    a58c:	and	w1, w0, #0xffff
    a590:	ldr	x0, [sp, #72]
    a594:	strh	w1, [x0, #2]
    a598:	ldr	x0, [sp, #64]
    a59c:	ldr	w0, [x0, #4]
    a5a0:	bl	76dc <elf64_xlatetom@@ELFUTILS_1.0+0x1b8>
    a5a4:	mov	w1, w0
    a5a8:	ldr	x0, [sp, #72]
    a5ac:	str	w1, [x0, #4]
    a5b0:	ldr	x0, [sp, #64]
    a5b4:	ldr	w0, [x0, #8]
    a5b8:	bl	76dc <elf64_xlatetom@@ELFUTILS_1.0+0x1b8>
    a5bc:	mov	w1, w0
    a5c0:	ldr	x0, [sp, #72]
    a5c4:	str	w1, [x0, #8]
    a5c8:	ldr	x0, [sp, #64]
    a5cc:	ldr	w0, [x0, #12]
    a5d0:	bl	76dc <elf64_xlatetom@@ELFUTILS_1.0+0x1b8>
    a5d4:	mov	w1, w0
    a5d8:	ldr	x0, [sp, #72]
    a5dc:	str	w1, [x0, #12]
    a5e0:	b	a5fc <elf64_xlatetom@@ELFUTILS_1.0+0x30d8>
    a5e4:	ldr	x0, [sp, #72]
    a5e8:	ldr	w0, [x0, #12]
    a5ec:	mov	w0, w0
    a5f0:	ldr	x1, [sp, #88]
    a5f4:	add	x0, x1, x0
    a5f8:	str	x0, [sp, #88]
    a5fc:	ldr	x0, [sp, #64]
    a600:	ldr	w0, [x0, #12]
    a604:	cmp	w0, #0x0
    a608:	b.ne	a334 <elf64_xlatetom@@ELFUTILS_1.0+0x2e10>  // b.any
    a60c:	b	a624 <elf64_xlatetom@@ELFUTILS_1.0+0x3100>
    a610:	nop
    a614:	b	a624 <elf64_xlatetom@@ELFUTILS_1.0+0x3100>
    a618:	nop
    a61c:	b	a624 <elf64_xlatetom@@ELFUTILS_1.0+0x3100>
    a620:	nop
    a624:	ldp	x29, x30, [sp], #96
    a628:	ret
    a62c:	stp	x29, x30, [sp, #-112]!
    a630:	mov	x29, sp
    a634:	str	x19, [sp, #16]
    a638:	str	x0, [sp, #56]
    a63c:	str	x1, [sp, #48]
    a640:	str	x2, [sp, #40]
    a644:	str	w3, [sp, #36]
    a648:	ldr	x0, [sp, #56]
    a64c:	str	x0, [sp, #104]
    a650:	ldr	x0, [sp, #48]
    a654:	str	x0, [sp, #96]
    a658:	str	wzr, [sp, #92]
    a65c:	b	a6b4 <elf64_xlatetom@@ELFUTILS_1.0+0x3190>
    a660:	ldr	x0, [sp, #40]
    a664:	cmp	x0, #0x3
    a668:	b.ls	a7e0 <elf64_xlatetom@@ELFUTILS_1.0+0x32bc>  // b.plast
    a66c:	ldr	w0, [sp, #92]
    a670:	lsl	x0, x0, #2
    a674:	ldr	x1, [sp, #96]
    a678:	add	x0, x1, x0
    a67c:	ldr	w2, [x0]
    a680:	ldr	w0, [sp, #92]
    a684:	lsl	x0, x0, #2
    a688:	ldr	x1, [sp, #104]
    a68c:	add	x19, x1, x0
    a690:	mov	w0, w2
    a694:	bl	76dc <elf64_xlatetom@@ELFUTILS_1.0+0x1b8>
    a698:	str	w0, [x19]
    a69c:	ldr	x0, [sp, #40]
    a6a0:	sub	x0, x0, #0x4
    a6a4:	str	x0, [sp, #40]
    a6a8:	ldr	w0, [sp, #92]
    a6ac:	add	w0, w0, #0x1
    a6b0:	str	w0, [sp, #92]
    a6b4:	ldr	w0, [sp, #92]
    a6b8:	cmp	w0, #0x3
    a6bc:	b.ls	a660 <elf64_xlatetom@@ELFUTILS_1.0+0x313c>  // b.plast
    a6c0:	ldr	w0, [sp, #36]
    a6c4:	cmp	w0, #0x0
    a6c8:	b.eq	a6dc <elf64_xlatetom@@ELFUTILS_1.0+0x31b8>  // b.none
    a6cc:	ldr	x0, [sp, #96]
    a6d0:	add	x0, x0, #0x8
    a6d4:	ldr	w0, [x0]
    a6d8:	b	a6e8 <elf64_xlatetom@@ELFUTILS_1.0+0x31c4>
    a6dc:	ldr	x0, [sp, #104]
    a6e0:	add	x0, x0, #0x8
    a6e4:	ldr	w0, [x0]
    a6e8:	str	w0, [sp, #84]
    a6ec:	ldr	x0, [sp, #104]
    a6f0:	add	x0, x0, #0x10
    a6f4:	str	x0, [sp, #72]
    a6f8:	ldr	x0, [sp, #96]
    a6fc:	add	x0, x0, #0x10
    a700:	str	x0, [sp, #64]
    a704:	str	wzr, [sp, #88]
    a708:	b	a760 <elf64_xlatetom@@ELFUTILS_1.0+0x323c>
    a70c:	ldr	x0, [sp, #40]
    a710:	cmp	x0, #0x7
    a714:	b.ls	a7e8 <elf64_xlatetom@@ELFUTILS_1.0+0x32c4>  // b.plast
    a718:	ldr	w0, [sp, #88]
    a71c:	lsl	x0, x0, #3
    a720:	ldr	x1, [sp, #64]
    a724:	add	x0, x1, x0
    a728:	ldr	x2, [x0]
    a72c:	ldr	w0, [sp, #88]
    a730:	lsl	x0, x0, #3
    a734:	ldr	x1, [sp, #72]
    a738:	add	x19, x1, x0
    a73c:	mov	x0, x2
    a740:	bl	76f4 <elf64_xlatetom@@ELFUTILS_1.0+0x1d0>
    a744:	str	x0, [x19]
    a748:	ldr	x0, [sp, #40]
    a74c:	sub	x0, x0, #0x8
    a750:	str	x0, [sp, #40]
    a754:	ldr	w0, [sp, #88]
    a758:	add	w0, w0, #0x1
    a75c:	str	w0, [sp, #88]
    a760:	ldr	w1, [sp, #88]
    a764:	ldr	w0, [sp, #84]
    a768:	cmp	w1, w0
    a76c:	b.cc	a70c <elf64_xlatetom@@ELFUTILS_1.0+0x31e8>  // b.lo, b.ul, b.last
    a770:	ldr	w0, [sp, #84]
    a774:	lsl	x0, x0, #3
    a778:	ldr	x1, [sp, #64]
    a77c:	add	x0, x1, x0
    a780:	str	x0, [sp, #96]
    a784:	ldr	w0, [sp, #84]
    a788:	lsl	x0, x0, #3
    a78c:	ldr	x1, [sp, #72]
    a790:	add	x0, x1, x0
    a794:	str	x0, [sp, #104]
    a798:	b	a7d0 <elf64_xlatetom@@ELFUTILS_1.0+0x32ac>
    a79c:	ldr	x0, [sp, #96]
    a7a0:	add	x1, x0, #0x4
    a7a4:	str	x1, [sp, #96]
    a7a8:	ldr	w1, [x0]
    a7ac:	ldr	x19, [sp, #104]
    a7b0:	add	x0, x19, #0x4
    a7b4:	str	x0, [sp, #104]
    a7b8:	mov	w0, w1
    a7bc:	bl	76dc <elf64_xlatetom@@ELFUTILS_1.0+0x1b8>
    a7c0:	str	w0, [x19]
    a7c4:	ldr	x0, [sp, #40]
    a7c8:	sub	x0, x0, #0x4
    a7cc:	str	x0, [sp, #40]
    a7d0:	ldr	x0, [sp, #40]
    a7d4:	cmp	x0, #0x3
    a7d8:	b.hi	a79c <elf64_xlatetom@@ELFUTILS_1.0+0x3278>  // b.pmore
    a7dc:	b	a7ec <elf64_xlatetom@@ELFUTILS_1.0+0x32c8>
    a7e0:	nop
    a7e4:	b	a7ec <elf64_xlatetom@@ELFUTILS_1.0+0x32c8>
    a7e8:	nop
    a7ec:	ldr	x19, [sp, #16]
    a7f0:	ldp	x29, x30, [sp], #112
    a7f4:	ret
    a7f8:	stp	x29, x30, [sp, #-80]!
    a7fc:	mov	x29, sp
    a800:	str	x0, [sp, #40]
    a804:	str	x1, [sp, #32]
    a808:	str	x2, [sp, #24]
    a80c:	str	w3, [sp, #20]
    a810:	strb	w4, [sp, #19]
    a814:	b	a9d4 <elf64_xlatetom@@ELFUTILS_1.0+0x34b0>
    a818:	ldr	w3, [sp, #20]
    a81c:	mov	x2, #0xc                   	// #12
    a820:	ldr	x1, [sp, #32]
    a824:	ldr	x0, [sp, #40]
    a828:	bl	860c <elf64_xlatetom@@ELFUTILS_1.0+0x10e8>
    a82c:	ldr	w0, [sp, #20]
    a830:	cmp	w0, #0x0
    a834:	b.eq	a840 <elf64_xlatetom@@ELFUTILS_1.0+0x331c>  // b.none
    a838:	ldr	x0, [sp, #32]
    a83c:	b	a844 <elf64_xlatetom@@ELFUTILS_1.0+0x3320>
    a840:	ldr	x0, [sp, #40]
    a844:	str	x0, [sp, #72]
    a848:	mov	x0, #0xc                   	// #12
    a84c:	str	x0, [sp, #64]
    a850:	ldr	x0, [sp, #72]
    a854:	ldr	w0, [x0]
    a858:	mov	w0, w0
    a85c:	ldr	x1, [sp, #64]
    a860:	add	x0, x1, x0
    a864:	str	x0, [sp, #64]
    a868:	ldrb	w0, [sp, #19]
    a86c:	cmp	w0, #0x0
    a870:	b.eq	a884 <elf64_xlatetom@@ELFUTILS_1.0+0x3360>  // b.none
    a874:	ldr	x0, [sp, #64]
    a878:	add	x0, x0, #0x7
    a87c:	and	x0, x0, #0xfffffff8
    a880:	b	a890 <elf64_xlatetom@@ELFUTILS_1.0+0x336c>
    a884:	ldr	x0, [sp, #64]
    a888:	add	x0, x0, #0x3
    a88c:	and	x0, x0, #0xfffffffc
    a890:	str	x0, [sp, #64]
    a894:	ldr	x1, [sp, #64]
    a898:	ldr	x0, [sp, #24]
    a89c:	cmp	x1, x0
    a8a0:	b.hi	a8b0 <elf64_xlatetom@@ELFUTILS_1.0+0x338c>  // b.pmore
    a8a4:	ldr	x0, [sp, #64]
    a8a8:	cmp	x0, #0xb
    a8ac:	b.hi	a8d8 <elf64_xlatetom@@ELFUTILS_1.0+0x33b4>  // b.pmore
    a8b0:	ldr	x0, [sp, #24]
    a8b4:	sub	x0, x0, #0xc
    a8b8:	str	x0, [sp, #24]
    a8bc:	ldr	x0, [sp, #32]
    a8c0:	add	x0, x0, #0xc
    a8c4:	str	x0, [sp, #32]
    a8c8:	ldr	x0, [sp, #40]
    a8cc:	add	x0, x0, #0xc
    a8d0:	str	x0, [sp, #40]
    a8d4:	b	a9e0 <elf64_xlatetom@@ELFUTILS_1.0+0x34bc>
    a8d8:	ldr	x0, [sp, #72]
    a8dc:	ldr	w0, [x0, #4]
    a8e0:	mov	w0, w0
    a8e4:	ldr	x1, [sp, #64]
    a8e8:	add	x0, x1, x0
    a8ec:	str	x0, [sp, #64]
    a8f0:	ldrb	w0, [sp, #19]
    a8f4:	cmp	w0, #0x0
    a8f8:	b.eq	a90c <elf64_xlatetom@@ELFUTILS_1.0+0x33e8>  // b.none
    a8fc:	ldr	x0, [sp, #64]
    a900:	add	x0, x0, #0x7
    a904:	and	x0, x0, #0xfffffff8
    a908:	b	a918 <elf64_xlatetom@@ELFUTILS_1.0+0x33f4>
    a90c:	ldr	x0, [sp, #64]
    a910:	add	x0, x0, #0x3
    a914:	and	x0, x0, #0xfffffffc
    a918:	str	x0, [sp, #64]
    a91c:	ldr	x1, [sp, #64]
    a920:	ldr	x0, [sp, #24]
    a924:	cmp	x1, x0
    a928:	b.hi	a938 <elf64_xlatetom@@ELFUTILS_1.0+0x3414>  // b.pmore
    a92c:	ldr	x0, [sp, #64]
    a930:	cmp	x0, #0xb
    a934:	b.hi	a960 <elf64_xlatetom@@ELFUTILS_1.0+0x343c>  // b.pmore
    a938:	ldr	x0, [sp, #24]
    a93c:	sub	x0, x0, #0xc
    a940:	str	x0, [sp, #24]
    a944:	ldr	x0, [sp, #32]
    a948:	add	x0, x0, #0xc
    a94c:	str	x0, [sp, #32]
    a950:	ldr	x0, [sp, #40]
    a954:	add	x0, x0, #0xc
    a958:	str	x0, [sp, #40]
    a95c:	b	a9e0 <elf64_xlatetom@@ELFUTILS_1.0+0x34bc>
    a960:	ldr	x0, [sp, #64]
    a964:	sub	x0, x0, #0xc
    a968:	str	x0, [sp, #56]
    a96c:	ldr	x0, [sp, #32]
    a970:	add	x0, x0, #0xc
    a974:	str	x0, [sp, #32]
    a978:	ldr	x0, [sp, #40]
    a97c:	add	x0, x0, #0xc
    a980:	str	x0, [sp, #40]
    a984:	ldr	x1, [sp, #32]
    a988:	ldr	x0, [sp, #40]
    a98c:	cmp	x1, x0
    a990:	b.eq	a9a4 <elf64_xlatetom@@ELFUTILS_1.0+0x3480>  // b.none
    a994:	ldr	x2, [sp, #56]
    a998:	ldr	x1, [sp, #32]
    a99c:	ldr	x0, [sp, #40]
    a9a0:	bl	30a0 <memcpy@plt>
    a9a4:	ldr	x1, [sp, #32]
    a9a8:	ldr	x0, [sp, #56]
    a9ac:	add	x0, x1, x0
    a9b0:	str	x0, [sp, #32]
    a9b4:	ldr	x1, [sp, #40]
    a9b8:	ldr	x0, [sp, #56]
    a9bc:	add	x0, x1, x0
    a9c0:	str	x0, [sp, #40]
    a9c4:	ldr	x1, [sp, #24]
    a9c8:	ldr	x0, [sp, #64]
    a9cc:	sub	x0, x1, x0
    a9d0:	str	x0, [sp, #24]
    a9d4:	ldr	x0, [sp, #24]
    a9d8:	cmp	x0, #0xb
    a9dc:	b.hi	a818 <elf64_xlatetom@@ELFUTILS_1.0+0x32f4>  // b.pmore
    a9e0:	ldr	x0, [sp, #24]
    a9e4:	cmp	x0, #0x0
    a9e8:	cset	w0, ne  // ne = any
    a9ec:	and	w0, w0, #0xff
    a9f0:	and	x0, x0, #0xff
    a9f4:	cmp	x0, #0x0
    a9f8:	b.eq	aa1c <elf64_xlatetom@@ELFUTILS_1.0+0x34f8>  // b.none
    a9fc:	ldr	x1, [sp, #32]
    aa00:	ldr	x0, [sp, #40]
    aa04:	cmp	x1, x0
    aa08:	b.eq	aa1c <elf64_xlatetom@@ELFUTILS_1.0+0x34f8>  // b.none
    aa0c:	ldr	x2, [sp, #24]
    aa10:	ldr	x1, [sp, #32]
    aa14:	ldr	x0, [sp, #40]
    aa18:	bl	30a0 <memcpy@plt>
    aa1c:	nop
    aa20:	ldp	x29, x30, [sp], #80
    aa24:	ret
    aa28:	stp	x29, x30, [sp, #-48]!
    aa2c:	mov	x29, sp
    aa30:	str	x0, [sp, #40]
    aa34:	str	x1, [sp, #32]
    aa38:	str	x2, [sp, #24]
    aa3c:	str	w3, [sp, #20]
    aa40:	mov	w4, #0x0                   	// #0
    aa44:	ldr	w3, [sp, #20]
    aa48:	ldr	x2, [sp, #24]
    aa4c:	ldr	x1, [sp, #32]
    aa50:	ldr	x0, [sp, #40]
    aa54:	bl	a7f8 <elf64_xlatetom@@ELFUTILS_1.0+0x32d4>
    aa58:	nop
    aa5c:	ldp	x29, x30, [sp], #48
    aa60:	ret
    aa64:	stp	x29, x30, [sp, #-48]!
    aa68:	mov	x29, sp
    aa6c:	str	x0, [sp, #40]
    aa70:	str	x1, [sp, #32]
    aa74:	str	x2, [sp, #24]
    aa78:	str	w3, [sp, #20]
    aa7c:	mov	w4, #0x1                   	// #1
    aa80:	ldr	w3, [sp, #20]
    aa84:	ldr	x2, [sp, #24]
    aa88:	ldr	x1, [sp, #32]
    aa8c:	ldr	x0, [sp, #40]
    aa90:	bl	a7f8 <elf64_xlatetom@@ELFUTILS_1.0+0x32d4>
    aa94:	nop
    aa98:	ldp	x29, x30, [sp], #48
    aa9c:	ret
    aaa0:	stp	x29, x30, [sp, #-48]!
    aaa4:	mov	x29, sp
    aaa8:	str	x0, [sp, #24]
    aaac:	ldr	x0, [sp, #24]
    aab0:	ldr	w0, [x0, #24]
    aab4:	cmp	w0, #0x1
    aab8:	b.ne	aafc <elf64_xlatetom@@ELFUTILS_1.0+0x35d8>  // b.any
    aabc:	ldr	x0, [sp, #24]
    aac0:	ldr	x0, [x0, #72]
    aac4:	str	x0, [sp, #40]
    aac8:	b	aaf0 <elf64_xlatetom@@ELFUTILS_1.0+0x35cc>
    aacc:	ldr	x0, [sp, #40]
    aad0:	ldr	w0, [x0, #60]
    aad4:	cmp	w0, #0x0
    aad8:	b.eq	aae4 <elf64_xlatetom@@ELFUTILS_1.0+0x35c0>  // b.none
    aadc:	ldr	x0, [sp, #40]
    aae0:	bl	aaa0 <elf64_xlatetom@@ELFUTILS_1.0+0x357c>
    aae4:	ldr	x0, [sp, #40]
    aae8:	ldr	x0, [x0, #16]
    aaec:	str	x0, [sp, #40]
    aaf0:	ldr	x0, [sp, #40]
    aaf4:	cmp	x0, #0x0
    aaf8:	b.ne	aacc <elf64_xlatetom@@ELFUTILS_1.0+0x35a8>  // b.any
    aafc:	nop
    ab00:	ldp	x29, x30, [sp], #48
    ab04:	ret
    ab08:	stp	x29, x30, [sp, #-48]!
    ab0c:	mov	x29, sp
    ab10:	str	x0, [sp, #24]
    ab14:	ldr	x0, [sp, #24]
    ab18:	ldr	w0, [x0, #24]
    ab1c:	cmp	w0, #0x1
    ab20:	b.ne	ab64 <elf64_xlatetom@@ELFUTILS_1.0+0x3640>  // b.any
    ab24:	ldr	x0, [sp, #24]
    ab28:	ldr	x0, [x0, #72]
    ab2c:	str	x0, [sp, #40]
    ab30:	b	ab58 <elf64_xlatetom@@ELFUTILS_1.0+0x3634>
    ab34:	ldr	x0, [sp, #40]
    ab38:	ldr	w0, [x0, #60]
    ab3c:	cmp	w0, #0x0
    ab40:	b.eq	ab4c <elf64_xlatetom@@ELFUTILS_1.0+0x3628>  // b.none
    ab44:	ldr	x0, [sp, #40]
    ab48:	bl	ab08 <elf64_xlatetom@@ELFUTILS_1.0+0x35e4>
    ab4c:	ldr	x0, [sp, #40]
    ab50:	ldr	x0, [x0, #16]
    ab54:	str	x0, [sp, #40]
    ab58:	ldr	x0, [sp, #40]
    ab5c:	cmp	x0, #0x0
    ab60:	b.ne	ab34 <elf64_xlatetom@@ELFUTILS_1.0+0x3610>  // b.any
    ab64:	nop
    ab68:	ldp	x29, x30, [sp], #48
    ab6c:	ret
    ab70:	stp	x29, x30, [sp, #-48]!
    ab74:	mov	x29, sp
    ab78:	str	x0, [sp, #40]
    ab7c:	str	x1, [sp, #32]
    ab80:	str	x2, [sp, #24]
    ab84:	str	w3, [sp, #20]
    ab88:	ldr	x0, [sp, #24]
    ab8c:	cmp	x0, #0x0
    ab90:	b.eq	abd8 <elf64_xlatetom@@ELFUTILS_1.0+0x36b4>  // b.none
    ab94:	ldr	x1, [sp, #40]
    ab98:	ldr	x0, [sp, #32]
    ab9c:	cmp	x1, x0
    aba0:	b.eq	abb4 <elf64_xlatetom@@ELFUTILS_1.0+0x3690>  // b.none
    aba4:	ldr	x2, [sp, #24]
    aba8:	ldr	x1, [sp, #32]
    abac:	ldr	x0, [sp, #40]
    abb0:	bl	30b0 <memmove@plt>
    abb4:	ldr	x0, [sp, #24]
    abb8:	cmp	x0, #0xb
    abbc:	b.ls	abdc <elf64_xlatetom@@ELFUTILS_1.0+0x36b8>  // b.plast
    abc0:	ldr	w3, [sp, #20]
    abc4:	mov	x2, #0xc                   	// #12
    abc8:	ldr	x1, [sp, #32]
    abcc:	ldr	x0, [sp, #40]
    abd0:	bl	8ab4 <elf64_xlatetom@@ELFUTILS_1.0+0x1590>
    abd4:	b	abdc <elf64_xlatetom@@ELFUTILS_1.0+0x36b8>
    abd8:	nop
    abdc:	ldp	x29, x30, [sp], #48
    abe0:	ret
    abe4:	stp	x29, x30, [sp, #-48]!
    abe8:	mov	x29, sp
    abec:	str	x0, [sp, #40]
    abf0:	str	x1, [sp, #32]
    abf4:	str	x2, [sp, #24]
    abf8:	str	w3, [sp, #20]
    abfc:	ldr	x0, [sp, #24]
    ac00:	cmp	x0, #0x0
    ac04:	b.eq	ac4c <elf64_xlatetom@@ELFUTILS_1.0+0x3728>  // b.none
    ac08:	ldr	x1, [sp, #40]
    ac0c:	ldr	x0, [sp, #32]
    ac10:	cmp	x1, x0
    ac14:	b.eq	ac28 <elf64_xlatetom@@ELFUTILS_1.0+0x3704>  // b.none
    ac18:	ldr	x2, [sp, #24]
    ac1c:	ldr	x1, [sp, #32]
    ac20:	ldr	x0, [sp, #40]
    ac24:	bl	30b0 <memmove@plt>
    ac28:	ldr	x0, [sp, #24]
    ac2c:	cmp	x0, #0x17
    ac30:	b.ls	ac50 <elf64_xlatetom@@ELFUTILS_1.0+0x372c>  // b.plast
    ac34:	ldr	w3, [sp, #20]
    ac38:	mov	x2, #0x18                  	// #24
    ac3c:	ldr	x1, [sp, #32]
    ac40:	ldr	x0, [sp, #40]
    ac44:	bl	9ed0 <elf64_xlatetom@@ELFUTILS_1.0+0x29ac>
    ac48:	b	ac50 <elf64_xlatetom@@ELFUTILS_1.0+0x372c>
    ac4c:	nop
    ac50:	ldp	x29, x30, [sp], #48
    ac54:	ret
    ac58:	stp	x29, x30, [sp, #-32]!
    ac5c:	mov	x29, sp
    ac60:	str	x0, [sp, #24]
    ac64:	str	w1, [sp, #20]
    ac68:	ldr	x0, [sp, #24]
    ac6c:	cmp	x0, #0x0
    ac70:	b.ne	ac7c <elf64_xlatetom@@ELFUTILS_1.0+0x3758>  // b.any
    ac74:	mov	x0, #0x0                   	// #0
    ac78:	b	ad20 <elf64_xlatetom@@ELFUTILS_1.0+0x37fc>
    ac7c:	ldr	x0, [sp, #24]
    ac80:	ldr	w0, [x0, #24]
    ac84:	cmp	w0, #0x3
    ac88:	cset	w0, ne  // ne = any
    ac8c:	and	w0, w0, #0xff
    ac90:	and	x0, x0, #0xff
    ac94:	cmp	x0, #0x0
    ac98:	b.eq	acac <elf64_xlatetom@@ELFUTILS_1.0+0x3788>  // b.none
    ac9c:	mov	w0, #0x4                   	// #4
    aca0:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    aca4:	mov	x0, #0x0                   	// #0
    aca8:	b	ad20 <elf64_xlatetom@@ELFUTILS_1.0+0x37fc>
    acac:	nop
    acb0:	ldr	x0, [sp, #24]
    acb4:	ldr	w0, [x0, #32]
    acb8:	cmp	w0, #0x0
    acbc:	b.ne	ace8 <elf64_xlatetom@@ELFUTILS_1.0+0x37c4>  // b.any
    acc0:	ldr	w0, [sp, #20]
    acc4:	cmp	w0, #0x0
    acc8:	b.ne	acd8 <elf64_xlatetom@@ELFUTILS_1.0+0x37b4>  // b.any
    accc:	mov	w0, #0x1                   	// #1
    acd0:	str	w0, [sp, #20]
    acd4:	b	acb0 <elf64_xlatetom@@ELFUTILS_1.0+0x378c>
    acd8:	ldr	x0, [sp, #24]
    acdc:	mov	w1, #0x1                   	// #1
    ace0:	str	w1, [x0, #32]
    ace4:	b	ad18 <elf64_xlatetom@@ELFUTILS_1.0+0x37f4>
    ace8:	ldr	x0, [sp, #24]
    acec:	ldr	w0, [x0, #32]
    acf0:	cmp	w0, #0x1
    acf4:	cset	w0, ne  // ne = any
    acf8:	and	w0, w0, #0xff
    acfc:	and	x0, x0, #0xff
    ad00:	cmp	x0, #0x0
    ad04:	b.eq	ad18 <elf64_xlatetom@@ELFUTILS_1.0+0x37f4>  // b.none
    ad08:	mov	w0, #0x15                  	// #21
    ad0c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    ad10:	mov	x0, #0x0                   	// #0
    ad14:	b	ad20 <elf64_xlatetom@@ELFUTILS_1.0+0x37fc>
    ad18:	ldr	x0, [sp, #24]
    ad1c:	ldr	x0, [x0, #72]
    ad20:	ldp	x29, x30, [sp], #32
    ad24:	ret
    ad28:	stp	x29, x30, [sp, #-32]!
    ad2c:	mov	x29, sp
    ad30:	str	x0, [sp, #24]
    ad34:	mov	w1, #0x1                   	// #1
    ad38:	ldr	x0, [sp, #24]
    ad3c:	bl	ac58 <elf64_xlatetom@@ELFUTILS_1.0+0x3734>
    ad40:	ldp	x29, x30, [sp], #32
    ad44:	ret

000000000000ad48 <elf32_getehdr@@ELFUTILS_1.0>:
    ad48:	stp	x29, x30, [sp, #-48]!
    ad4c:	mov	x29, sp
    ad50:	str	x0, [sp, #24]
    ad54:	ldr	x0, [sp, #24]
    ad58:	cmp	x0, #0x0
    ad5c:	b.ne	ad68 <elf32_getehdr@@ELFUTILS_1.0+0x20>  // b.any
    ad60:	mov	x0, #0x0                   	// #0
    ad64:	b	ad7c <elf32_getehdr@@ELFUTILS_1.0+0x34>
    ad68:	mov	w1, #0x0                   	// #0
    ad6c:	ldr	x0, [sp, #24]
    ad70:	bl	ac58 <elf64_xlatetom@@ELFUTILS_1.0+0x3734>
    ad74:	str	x0, [sp, #40]
    ad78:	ldr	x0, [sp, #40]
    ad7c:	ldp	x29, x30, [sp], #48
    ad80:	ret
    ad84:	stp	x29, x30, [sp, #-32]!
    ad88:	mov	x29, sp
    ad8c:	str	x0, [sp, #24]
    ad90:	str	w1, [sp, #20]
    ad94:	ldr	x0, [sp, #24]
    ad98:	cmp	x0, #0x0
    ad9c:	b.ne	ada8 <elf32_getehdr@@ELFUTILS_1.0+0x60>  // b.any
    ada0:	mov	x0, #0x0                   	// #0
    ada4:	b	ae4c <elf32_getehdr@@ELFUTILS_1.0+0x104>
    ada8:	ldr	x0, [sp, #24]
    adac:	ldr	w0, [x0, #24]
    adb0:	cmp	w0, #0x3
    adb4:	cset	w0, ne  // ne = any
    adb8:	and	w0, w0, #0xff
    adbc:	and	x0, x0, #0xff
    adc0:	cmp	x0, #0x0
    adc4:	b.eq	add8 <elf32_getehdr@@ELFUTILS_1.0+0x90>  // b.none
    adc8:	mov	w0, #0x4                   	// #4
    adcc:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    add0:	mov	x0, #0x0                   	// #0
    add4:	b	ae4c <elf32_getehdr@@ELFUTILS_1.0+0x104>
    add8:	nop
    addc:	ldr	x0, [sp, #24]
    ade0:	ldr	w0, [x0, #32]
    ade4:	cmp	w0, #0x0
    ade8:	b.ne	ae14 <elf32_getehdr@@ELFUTILS_1.0+0xcc>  // b.any
    adec:	ldr	w0, [sp, #20]
    adf0:	cmp	w0, #0x0
    adf4:	b.ne	ae04 <elf32_getehdr@@ELFUTILS_1.0+0xbc>  // b.any
    adf8:	mov	w0, #0x1                   	// #1
    adfc:	str	w0, [sp, #20]
    ae00:	b	addc <elf32_getehdr@@ELFUTILS_1.0+0x94>
    ae04:	ldr	x0, [sp, #24]
    ae08:	mov	w1, #0x2                   	// #2
    ae0c:	str	w1, [x0, #32]
    ae10:	b	ae44 <elf32_getehdr@@ELFUTILS_1.0+0xfc>
    ae14:	ldr	x0, [sp, #24]
    ae18:	ldr	w0, [x0, #32]
    ae1c:	cmp	w0, #0x2
    ae20:	cset	w0, ne  // ne = any
    ae24:	and	w0, w0, #0xff
    ae28:	and	x0, x0, #0xff
    ae2c:	cmp	x0, #0x0
    ae30:	b.eq	ae44 <elf32_getehdr@@ELFUTILS_1.0+0xfc>  // b.none
    ae34:	mov	w0, #0x15                  	// #21
    ae38:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    ae3c:	mov	x0, #0x0                   	// #0
    ae40:	b	ae4c <elf32_getehdr@@ELFUTILS_1.0+0x104>
    ae44:	ldr	x0, [sp, #24]
    ae48:	ldr	x0, [x0, #72]
    ae4c:	ldp	x29, x30, [sp], #32
    ae50:	ret
    ae54:	stp	x29, x30, [sp, #-32]!
    ae58:	mov	x29, sp
    ae5c:	str	x0, [sp, #24]
    ae60:	mov	w1, #0x1                   	// #1
    ae64:	ldr	x0, [sp, #24]
    ae68:	bl	ad84 <elf32_getehdr@@ELFUTILS_1.0+0x3c>
    ae6c:	ldp	x29, x30, [sp], #32
    ae70:	ret

000000000000ae74 <elf64_getehdr@@ELFUTILS_1.0>:
    ae74:	stp	x29, x30, [sp, #-48]!
    ae78:	mov	x29, sp
    ae7c:	str	x0, [sp, #24]
    ae80:	ldr	x0, [sp, #24]
    ae84:	cmp	x0, #0x0
    ae88:	b.ne	ae94 <elf64_getehdr@@ELFUTILS_1.0+0x20>  // b.any
    ae8c:	mov	x0, #0x0                   	// #0
    ae90:	b	aea8 <elf64_getehdr@@ELFUTILS_1.0+0x34>
    ae94:	mov	w1, #0x0                   	// #0
    ae98:	ldr	x0, [sp, #24]
    ae9c:	bl	ad84 <elf32_getehdr@@ELFUTILS_1.0+0x3c>
    aea0:	str	x0, [sp, #40]
    aea4:	ldr	x0, [sp, #40]
    aea8:	ldp	x29, x30, [sp], #48
    aeac:	ret
    aeb0:	stp	x29, x30, [sp, #-48]!
    aeb4:	mov	x29, sp
    aeb8:	str	x0, [sp, #24]
    aebc:	str	x1, [sp, #16]
    aec0:	str	xzr, [sp, #40]
    aec4:	ldr	x0, [sp, #24]
    aec8:	cmp	x0, #0x0
    aecc:	b.ne	aed8 <elf64_getehdr@@ELFUTILS_1.0+0x64>  // b.any
    aed0:	mov	x0, #0x0                   	// #0
    aed4:	b	b068 <elf64_getehdr@@ELFUTILS_1.0+0x1f4>
    aed8:	ldr	x0, [sp, #24]
    aedc:	ldr	w0, [x0, #24]
    aee0:	cmp	w0, #0x3
    aee4:	cset	w0, ne  // ne = any
    aee8:	and	w0, w0, #0xff
    aeec:	and	x0, x0, #0xff
    aef0:	cmp	x0, #0x0
    aef4:	b.eq	af08 <elf64_getehdr@@ELFUTILS_1.0+0x94>  // b.none
    aef8:	mov	w0, #0x4                   	// #4
    aefc:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    af00:	mov	x0, #0x0                   	// #0
    af04:	b	b068 <elf64_getehdr@@ELFUTILS_1.0+0x1f4>
    af08:	ldr	x0, [sp, #24]
    af0c:	ldr	x0, [x0, #72]
    af10:	cmp	x0, #0x0
    af14:	cset	w0, eq  // eq = none
    af18:	and	w0, w0, #0xff
    af1c:	and	x0, x0, #0xff
    af20:	cmp	x0, #0x0
    af24:	b.eq	af34 <elf64_getehdr@@ELFUTILS_1.0+0xc0>  // b.none
    af28:	mov	w0, #0x1a                  	// #26
    af2c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    af30:	b	b064 <elf64_getehdr@@ELFUTILS_1.0+0x1f0>
    af34:	ldr	x0, [sp, #24]
    af38:	ldr	w0, [x0, #32]
    af3c:	cmp	w0, #0x1
    af40:	b.ne	b048 <elf64_getehdr@@ELFUTILS_1.0+0x1d4>  // b.any
    af44:	ldr	x0, [sp, #24]
    af48:	ldr	x0, [x0, #72]
    af4c:	str	x0, [sp, #32]
    af50:	ldr	x2, [sp, #16]
    af54:	ldr	x0, [sp, #32]
    af58:	ldp	x0, x1, [x0]
    af5c:	stp	x0, x1, [x2]
    af60:	ldr	x0, [sp, #32]
    af64:	ldrh	w1, [x0, #16]
    af68:	ldr	x0, [sp, #16]
    af6c:	strh	w1, [x0, #16]
    af70:	ldr	x0, [sp, #32]
    af74:	ldrh	w1, [x0, #18]
    af78:	ldr	x0, [sp, #16]
    af7c:	strh	w1, [x0, #18]
    af80:	ldr	x0, [sp, #32]
    af84:	ldr	w1, [x0, #20]
    af88:	ldr	x0, [sp, #16]
    af8c:	str	w1, [x0, #20]
    af90:	ldr	x0, [sp, #32]
    af94:	ldr	w0, [x0, #24]
    af98:	mov	w1, w0
    af9c:	ldr	x0, [sp, #16]
    afa0:	str	x1, [x0, #24]
    afa4:	ldr	x0, [sp, #32]
    afa8:	ldr	w0, [x0, #28]
    afac:	mov	w1, w0
    afb0:	ldr	x0, [sp, #16]
    afb4:	str	x1, [x0, #32]
    afb8:	ldr	x0, [sp, #32]
    afbc:	ldr	w0, [x0, #32]
    afc0:	mov	w1, w0
    afc4:	ldr	x0, [sp, #16]
    afc8:	str	x1, [x0, #40]
    afcc:	ldr	x0, [sp, #32]
    afd0:	ldr	w1, [x0, #36]
    afd4:	ldr	x0, [sp, #16]
    afd8:	str	w1, [x0, #48]
    afdc:	ldr	x0, [sp, #32]
    afe0:	ldrh	w1, [x0, #40]
    afe4:	ldr	x0, [sp, #16]
    afe8:	strh	w1, [x0, #52]
    afec:	ldr	x0, [sp, #32]
    aff0:	ldrh	w1, [x0, #42]
    aff4:	ldr	x0, [sp, #16]
    aff8:	strh	w1, [x0, #54]
    affc:	ldr	x0, [sp, #32]
    b000:	ldrh	w1, [x0, #44]
    b004:	ldr	x0, [sp, #16]
    b008:	strh	w1, [x0, #56]
    b00c:	ldr	x0, [sp, #32]
    b010:	ldrh	w1, [x0, #46]
    b014:	ldr	x0, [sp, #16]
    b018:	strh	w1, [x0, #58]
    b01c:	ldr	x0, [sp, #32]
    b020:	ldrh	w1, [x0, #48]
    b024:	ldr	x0, [sp, #16]
    b028:	strh	w1, [x0, #60]
    b02c:	ldr	x0, [sp, #32]
    b030:	ldrh	w1, [x0, #50]
    b034:	ldr	x0, [sp, #16]
    b038:	strh	w1, [x0, #62]
    b03c:	ldr	x0, [sp, #16]
    b040:	str	x0, [sp, #40]
    b044:	b	b064 <elf64_getehdr@@ELFUTILS_1.0+0x1f0>
    b048:	ldr	x0, [sp, #24]
    b04c:	ldr	x0, [x0, #72]
    b050:	mov	x2, #0x40                  	// #64
    b054:	mov	x1, x0
    b058:	ldr	x0, [sp, #16]
    b05c:	bl	30a0 <memcpy@plt>
    b060:	str	x0, [sp, #40]
    b064:	ldr	x0, [sp, #40]
    b068:	ldp	x29, x30, [sp], #48
    b06c:	ret

000000000000b070 <gelf_getehdr@@ELFUTILS_1.0>:
    b070:	stp	x29, x30, [sp, #-48]!
    b074:	mov	x29, sp
    b078:	str	x0, [sp, #24]
    b07c:	str	x1, [sp, #16]
    b080:	ldr	x0, [sp, #24]
    b084:	cmp	x0, #0x0
    b088:	b.ne	b094 <gelf_getehdr@@ELFUTILS_1.0+0x24>  // b.any
    b08c:	mov	x0, #0x0                   	// #0
    b090:	b	b0a8 <gelf_getehdr@@ELFUTILS_1.0+0x38>
    b094:	ldr	x1, [sp, #16]
    b098:	ldr	x0, [sp, #24]
    b09c:	bl	aeb0 <elf64_getehdr@@ELFUTILS_1.0+0x3c>
    b0a0:	str	x0, [sp, #40]
    b0a4:	ldr	x0, [sp, #40]
    b0a8:	ldp	x29, x30, [sp], #48
    b0ac:	ret

000000000000b0b0 <elf32_newehdr@@ELFUTILS_1.0>:
    b0b0:	stp	x29, x30, [sp, #-48]!
    b0b4:	mov	x29, sp
    b0b8:	str	x0, [sp, #24]
    b0bc:	ldr	x0, [sp, #24]
    b0c0:	cmp	x0, #0x0
    b0c4:	b.ne	b0d0 <elf32_newehdr@@ELFUTILS_1.0+0x20>  // b.any
    b0c8:	mov	x0, #0x0                   	// #0
    b0cc:	b	b1a8 <elf32_newehdr@@ELFUTILS_1.0+0xf8>
    b0d0:	ldr	x0, [sp, #24]
    b0d4:	ldr	w0, [x0, #24]
    b0d8:	cmp	w0, #0x3
    b0dc:	cset	w0, ne  // ne = any
    b0e0:	and	w0, w0, #0xff
    b0e4:	and	x0, x0, #0xff
    b0e8:	cmp	x0, #0x0
    b0ec:	b.eq	b100 <elf32_newehdr@@ELFUTILS_1.0+0x50>  // b.none
    b0f0:	mov	w0, #0x4                   	// #4
    b0f4:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    b0f8:	mov	x0, #0x0                   	// #0
    b0fc:	b	b1a8 <elf32_newehdr@@ELFUTILS_1.0+0xf8>
    b100:	ldr	x0, [sp, #24]
    b104:	ldr	w0, [x0, #32]
    b108:	cmp	w0, #0x0
    b10c:	b.ne	b120 <elf32_newehdr@@ELFUTILS_1.0+0x70>  // b.any
    b110:	ldr	x0, [sp, #24]
    b114:	mov	w1, #0x1                   	// #1
    b118:	str	w1, [x0, #32]
    b11c:	b	b150 <elf32_newehdr@@ELFUTILS_1.0+0xa0>
    b120:	ldr	x0, [sp, #24]
    b124:	ldr	w0, [x0, #32]
    b128:	cmp	w0, #0x1
    b12c:	cset	w0, ne  // ne = any
    b130:	and	w0, w0, #0xff
    b134:	and	x0, x0, #0xff
    b138:	cmp	x0, #0x0
    b13c:	b.eq	b150 <elf32_newehdr@@ELFUTILS_1.0+0xa0>  // b.none
    b140:	mov	w0, #0x15                  	// #21
    b144:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    b148:	str	xzr, [sp, #40]
    b14c:	b	b1a4 <elf32_newehdr@@ELFUTILS_1.0+0xf4>
    b150:	ldr	x0, [sp, #24]
    b154:	ldr	x0, [x0, #72]
    b158:	cmp	x0, #0x0
    b15c:	b.ne	b198 <elf32_newehdr@@ELFUTILS_1.0+0xe8>  // b.any
    b160:	ldr	x0, [sp, #24]
    b164:	add	x1, x0, #0x88
    b168:	ldr	x0, [sp, #24]
    b16c:	str	x1, [x0, #72]
    b170:	ldr	x0, [sp, #24]
    b174:	ldr	x0, [x0, #72]
    b178:	mov	x2, #0x34                  	// #52
    b17c:	mov	w1, #0x0                   	// #0
    b180:	bl	3180 <memset@plt>
    b184:	ldr	x0, [sp, #24]
    b188:	ldr	w0, [x0, #116]
    b18c:	orr	w1, w0, #0x1
    b190:	ldr	x0, [sp, #24]
    b194:	str	w1, [x0, #116]
    b198:	ldr	x0, [sp, #24]
    b19c:	ldr	x0, [x0, #72]
    b1a0:	str	x0, [sp, #40]
    b1a4:	ldr	x0, [sp, #40]
    b1a8:	ldp	x29, x30, [sp], #48
    b1ac:	ret

000000000000b1b0 <elf64_newehdr@@ELFUTILS_1.0>:
    b1b0:	stp	x29, x30, [sp, #-48]!
    b1b4:	mov	x29, sp
    b1b8:	str	x0, [sp, #24]
    b1bc:	ldr	x0, [sp, #24]
    b1c0:	cmp	x0, #0x0
    b1c4:	b.ne	b1d0 <elf64_newehdr@@ELFUTILS_1.0+0x20>  // b.any
    b1c8:	mov	x0, #0x0                   	// #0
    b1cc:	b	b2a8 <elf64_newehdr@@ELFUTILS_1.0+0xf8>
    b1d0:	ldr	x0, [sp, #24]
    b1d4:	ldr	w0, [x0, #24]
    b1d8:	cmp	w0, #0x3
    b1dc:	cset	w0, ne  // ne = any
    b1e0:	and	w0, w0, #0xff
    b1e4:	and	x0, x0, #0xff
    b1e8:	cmp	x0, #0x0
    b1ec:	b.eq	b200 <elf64_newehdr@@ELFUTILS_1.0+0x50>  // b.none
    b1f0:	mov	w0, #0x4                   	// #4
    b1f4:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    b1f8:	mov	x0, #0x0                   	// #0
    b1fc:	b	b2a8 <elf64_newehdr@@ELFUTILS_1.0+0xf8>
    b200:	ldr	x0, [sp, #24]
    b204:	ldr	w0, [x0, #32]
    b208:	cmp	w0, #0x0
    b20c:	b.ne	b220 <elf64_newehdr@@ELFUTILS_1.0+0x70>  // b.any
    b210:	ldr	x0, [sp, #24]
    b214:	mov	w1, #0x2                   	// #2
    b218:	str	w1, [x0, #32]
    b21c:	b	b250 <elf64_newehdr@@ELFUTILS_1.0+0xa0>
    b220:	ldr	x0, [sp, #24]
    b224:	ldr	w0, [x0, #32]
    b228:	cmp	w0, #0x2
    b22c:	cset	w0, ne  // ne = any
    b230:	and	w0, w0, #0xff
    b234:	and	x0, x0, #0xff
    b238:	cmp	x0, #0x0
    b23c:	b.eq	b250 <elf64_newehdr@@ELFUTILS_1.0+0xa0>  // b.none
    b240:	mov	w0, #0x15                  	// #21
    b244:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    b248:	str	xzr, [sp, #40]
    b24c:	b	b2a4 <elf64_newehdr@@ELFUTILS_1.0+0xf4>
    b250:	ldr	x0, [sp, #24]
    b254:	ldr	x0, [x0, #72]
    b258:	cmp	x0, #0x0
    b25c:	b.ne	b298 <elf64_newehdr@@ELFUTILS_1.0+0xe8>  // b.any
    b260:	ldr	x0, [sp, #24]
    b264:	add	x1, x0, #0x88
    b268:	ldr	x0, [sp, #24]
    b26c:	str	x1, [x0, #72]
    b270:	ldr	x0, [sp, #24]
    b274:	ldr	x0, [x0, #72]
    b278:	mov	x2, #0x40                  	// #64
    b27c:	mov	w1, #0x0                   	// #0
    b280:	bl	3180 <memset@plt>
    b284:	ldr	x0, [sp, #24]
    b288:	ldr	w0, [x0, #116]
    b28c:	orr	w1, w0, #0x1
    b290:	ldr	x0, [sp, #24]
    b294:	str	w1, [x0, #116]
    b298:	ldr	x0, [sp, #24]
    b29c:	ldr	x0, [x0, #72]
    b2a0:	str	x0, [sp, #40]
    b2a4:	ldr	x0, [sp, #40]
    b2a8:	ldp	x29, x30, [sp], #48
    b2ac:	ret

000000000000b2b0 <gelf_newehdr@@ELFUTILS_1.0>:
    b2b0:	stp	x29, x30, [sp, #-32]!
    b2b4:	mov	x29, sp
    b2b8:	str	x0, [sp, #24]
    b2bc:	str	w1, [sp, #20]
    b2c0:	ldr	w0, [sp, #20]
    b2c4:	cmp	w0, #0x1
    b2c8:	b.ne	b2d8 <gelf_newehdr@@ELFUTILS_1.0+0x28>  // b.any
    b2cc:	ldr	x0, [sp, #24]
    b2d0:	bl	b0b0 <elf32_newehdr@@ELFUTILS_1.0>
    b2d4:	b	b2e0 <gelf_newehdr@@ELFUTILS_1.0+0x30>
    b2d8:	ldr	x0, [sp, #24]
    b2dc:	bl	b1b0 <elf64_newehdr@@ELFUTILS_1.0>
    b2e0:	ldp	x29, x30, [sp], #32
    b2e4:	ret

000000000000b2e8 <gelf_update_ehdr@@ELFUTILS_1.0>:
    b2e8:	stp	x29, x30, [sp, #-64]!
    b2ec:	mov	x29, sp
    b2f0:	str	x0, [sp, #24]
    b2f4:	str	x1, [sp, #16]
    b2f8:	str	wzr, [sp, #60]
    b2fc:	ldr	x0, [sp, #24]
    b300:	cmp	x0, #0x0
    b304:	b.ne	b310 <gelf_update_ehdr@@ELFUTILS_1.0+0x28>  // b.any
    b308:	mov	w0, #0x0                   	// #0
    b30c:	b	b530 <gelf_update_ehdr@@ELFUTILS_1.0+0x248>
    b310:	ldr	x0, [sp, #24]
    b314:	ldr	w0, [x0, #24]
    b318:	cmp	w0, #0x3
    b31c:	cset	w0, ne  // ne = any
    b320:	and	w0, w0, #0xff
    b324:	and	x0, x0, #0xff
    b328:	cmp	x0, #0x0
    b32c:	b.eq	b340 <gelf_update_ehdr@@ELFUTILS_1.0+0x58>  // b.none
    b330:	mov	w0, #0x4                   	// #4
    b334:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    b338:	mov	w0, #0x0                   	// #0
    b33c:	b	b530 <gelf_update_ehdr@@ELFUTILS_1.0+0x248>
    b340:	ldr	x0, [sp, #24]
    b344:	ldr	w0, [x0, #32]
    b348:	cmp	w0, #0x1
    b34c:	b.ne	b4dc <gelf_update_ehdr@@ELFUTILS_1.0+0x1f4>  // b.any
    b350:	ldr	x0, [sp, #24]
    b354:	ldr	x0, [x0, #72]
    b358:	str	x0, [sp, #40]
    b35c:	ldr	x0, [sp, #40]
    b360:	cmp	x0, #0x0
    b364:	b.ne	b374 <gelf_update_ehdr@@ELFUTILS_1.0+0x8c>  // b.any
    b368:	mov	w0, #0x1a                  	// #26
    b36c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    b370:	b	b52c <gelf_update_ehdr@@ELFUTILS_1.0+0x244>
    b374:	ldr	x0, [sp, #16]
    b378:	ldr	x1, [x0, #24]
    b37c:	mov	x0, #0xffffffff            	// #4294967295
    b380:	cmp	x1, x0
    b384:	cset	w0, hi  // hi = pmore
    b388:	and	w0, w0, #0xff
    b38c:	and	x0, x0, #0xff
    b390:	cmp	x0, #0x0
    b394:	b.ne	b3e0 <gelf_update_ehdr@@ELFUTILS_1.0+0xf8>  // b.any
    b398:	ldr	x0, [sp, #16]
    b39c:	ldr	x1, [x0, #32]
    b3a0:	mov	x0, #0xffffffff            	// #4294967295
    b3a4:	cmp	x1, x0
    b3a8:	cset	w0, hi  // hi = pmore
    b3ac:	and	w0, w0, #0xff
    b3b0:	and	x0, x0, #0xff
    b3b4:	cmp	x0, #0x0
    b3b8:	b.ne	b3e0 <gelf_update_ehdr@@ELFUTILS_1.0+0xf8>  // b.any
    b3bc:	ldr	x0, [sp, #16]
    b3c0:	ldr	x1, [x0, #40]
    b3c4:	mov	x0, #0xffffffff            	// #4294967295
    b3c8:	cmp	x1, x0
    b3cc:	cset	w0, hi  // hi = pmore
    b3d0:	and	w0, w0, #0xff
    b3d4:	and	x0, x0, #0xff
    b3d8:	cmp	x0, #0x0
    b3dc:	b.eq	b3ec <gelf_update_ehdr@@ELFUTILS_1.0+0x104>  // b.none
    b3e0:	mov	w0, #0x21                  	// #33
    b3e4:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    b3e8:	b	b52c <gelf_update_ehdr@@ELFUTILS_1.0+0x244>
    b3ec:	ldr	x2, [sp, #40]
    b3f0:	ldr	x0, [sp, #16]
    b3f4:	ldp	x0, x1, [x0]
    b3f8:	stp	x0, x1, [x2]
    b3fc:	ldr	x0, [sp, #16]
    b400:	ldrh	w1, [x0, #16]
    b404:	ldr	x0, [sp, #40]
    b408:	strh	w1, [x0, #16]
    b40c:	ldr	x0, [sp, #16]
    b410:	ldrh	w1, [x0, #18]
    b414:	ldr	x0, [sp, #40]
    b418:	strh	w1, [x0, #18]
    b41c:	ldr	x0, [sp, #16]
    b420:	ldr	w1, [x0, #20]
    b424:	ldr	x0, [sp, #40]
    b428:	str	w1, [x0, #20]
    b42c:	ldr	x0, [sp, #16]
    b430:	ldr	x0, [x0, #24]
    b434:	mov	w1, w0
    b438:	ldr	x0, [sp, #40]
    b43c:	str	w1, [x0, #24]
    b440:	ldr	x0, [sp, #16]
    b444:	ldr	x0, [x0, #32]
    b448:	mov	w1, w0
    b44c:	ldr	x0, [sp, #40]
    b450:	str	w1, [x0, #28]
    b454:	ldr	x0, [sp, #16]
    b458:	ldr	x0, [x0, #40]
    b45c:	mov	w1, w0
    b460:	ldr	x0, [sp, #40]
    b464:	str	w1, [x0, #32]
    b468:	ldr	x0, [sp, #16]
    b46c:	ldr	w1, [x0, #48]
    b470:	ldr	x0, [sp, #40]
    b474:	str	w1, [x0, #36]
    b478:	ldr	x0, [sp, #16]
    b47c:	ldrh	w1, [x0, #52]
    b480:	ldr	x0, [sp, #40]
    b484:	strh	w1, [x0, #40]
    b488:	ldr	x0, [sp, #16]
    b48c:	ldrh	w1, [x0, #54]
    b490:	ldr	x0, [sp, #40]
    b494:	strh	w1, [x0, #42]
    b498:	ldr	x0, [sp, #16]
    b49c:	ldrh	w1, [x0, #56]
    b4a0:	ldr	x0, [sp, #40]
    b4a4:	strh	w1, [x0, #44]
    b4a8:	ldr	x0, [sp, #16]
    b4ac:	ldrh	w1, [x0, #58]
    b4b0:	ldr	x0, [sp, #40]
    b4b4:	strh	w1, [x0, #46]
    b4b8:	ldr	x0, [sp, #16]
    b4bc:	ldrh	w1, [x0, #60]
    b4c0:	ldr	x0, [sp, #40]
    b4c4:	strh	w1, [x0, #48]
    b4c8:	ldr	x0, [sp, #16]
    b4cc:	ldrh	w1, [x0, #62]
    b4d0:	ldr	x0, [sp, #40]
    b4d4:	strh	w1, [x0, #50]
    b4d8:	b	b510 <gelf_update_ehdr@@ELFUTILS_1.0+0x228>
    b4dc:	ldr	x0, [sp, #24]
    b4e0:	ldr	x0, [x0, #72]
    b4e4:	str	x0, [sp, #48]
    b4e8:	ldr	x0, [sp, #48]
    b4ec:	cmp	x0, #0x0
    b4f0:	b.ne	b500 <gelf_update_ehdr@@ELFUTILS_1.0+0x218>  // b.any
    b4f4:	mov	w0, #0x1a                  	// #26
    b4f8:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    b4fc:	b	b52c <gelf_update_ehdr@@ELFUTILS_1.0+0x244>
    b500:	mov	x2, #0x40                  	// #64
    b504:	ldr	x1, [sp, #16]
    b508:	ldr	x0, [sp, #48]
    b50c:	bl	30a0 <memcpy@plt>
    b510:	ldr	x0, [sp, #24]
    b514:	ldr	w0, [x0, #116]
    b518:	orr	w1, w0, #0x1
    b51c:	ldr	x0, [sp, #24]
    b520:	str	w1, [x0, #116]
    b524:	mov	w0, #0x1                   	// #1
    b528:	str	w0, [sp, #60]
    b52c:	ldr	w0, [sp, #60]
    b530:	ldp	x29, x30, [sp], #64
    b534:	ret
    b538:	sub	sp, sp, #0x10
    b53c:	str	w0, [sp, #12]
    b540:	ldr	w0, [sp, #12]
    b544:	rev	w0, w0
    b548:	add	sp, sp, #0x10
    b54c:	ret
    b550:	stp	x29, x30, [sp, #-80]!
    b554:	mov	x29, sp
    b558:	str	w0, [sp, #44]
    b55c:	str	x1, [sp, #32]
    b560:	str	x2, [sp, #24]
    b564:	str	x3, [sp, #16]
    b568:	str	xzr, [sp, #72]
    b56c:	ldr	x0, [sp, #72]
    b570:	ldr	x1, [sp, #32]
    b574:	add	x4, x1, x0
    b578:	ldr	x0, [sp, #72]
    b57c:	ldr	x1, [sp, #24]
    b580:	sub	x2, x1, x0
    b584:	ldr	x1, [sp, #16]
    b588:	ldr	x0, [sp, #72]
    b58c:	add	x0, x1, x0
    b590:	mov	x3, x0
    b594:	mov	x1, x4
    b598:	ldr	w0, [sp, #44]
    b59c:	bl	3300 <pread@plt>
    b5a0:	str	x0, [sp, #64]
    b5a4:	ldr	x0, [sp, #64]
    b5a8:	cmn	x0, #0x1
    b5ac:	b.ne	b5c0 <gelf_update_ehdr@@ELFUTILS_1.0+0x2d8>  // b.any
    b5b0:	bl	33e0 <__errno_location@plt>
    b5b4:	ldr	w0, [x0]
    b5b8:	cmp	w0, #0x4
    b5bc:	b.eq	b56c <gelf_update_ehdr@@ELFUTILS_1.0+0x284>  // b.none
    b5c0:	ldr	x0, [sp, #64]
    b5c4:	str	x0, [sp, #56]
    b5c8:	ldr	x0, [sp, #56]
    b5cc:	cmp	x0, #0x0
    b5d0:	b.gt	b5f0 <gelf_update_ehdr@@ELFUTILS_1.0+0x308>
    b5d4:	ldr	x0, [sp, #56]
    b5d8:	cmp	x0, #0x0
    b5dc:	b.ge	b5e8 <gelf_update_ehdr@@ELFUTILS_1.0+0x300>  // b.tcont
    b5e0:	ldr	x0, [sp, #56]
    b5e4:	b	b614 <gelf_update_ehdr@@ELFUTILS_1.0+0x32c>
    b5e8:	ldr	x0, [sp, #72]
    b5ec:	b	b614 <gelf_update_ehdr@@ELFUTILS_1.0+0x32c>
    b5f0:	ldr	x1, [sp, #72]
    b5f4:	ldr	x0, [sp, #56]
    b5f8:	add	x0, x1, x0
    b5fc:	str	x0, [sp, #72]
    b600:	ldr	x0, [sp, #72]
    b604:	ldr	x1, [sp, #24]
    b608:	cmp	x1, x0
    b60c:	b.hi	b56c <gelf_update_ehdr@@ELFUTILS_1.0+0x284>  // b.pmore
    b610:	ldr	x0, [sp, #72]
    b614:	ldp	x29, x30, [sp], #80
    b618:	ret
    b61c:	stp	x29, x30, [sp, #-48]!
    b620:	mov	x29, sp
    b624:	str	x0, [sp, #24]
    b628:	ldr	x0, [sp, #24]
    b62c:	ldr	w0, [x0, #24]
    b630:	cmp	w0, #0x1
    b634:	b.ne	b678 <gelf_update_ehdr@@ELFUTILS_1.0+0x390>  // b.any
    b638:	ldr	x0, [sp, #24]
    b63c:	ldr	x0, [x0, #72]
    b640:	str	x0, [sp, #40]
    b644:	b	b66c <gelf_update_ehdr@@ELFUTILS_1.0+0x384>
    b648:	ldr	x0, [sp, #40]
    b64c:	ldr	w0, [x0, #60]
    b650:	cmp	w0, #0x0
    b654:	b.eq	b660 <gelf_update_ehdr@@ELFUTILS_1.0+0x378>  // b.none
    b658:	ldr	x0, [sp, #40]
    b65c:	bl	b61c <gelf_update_ehdr@@ELFUTILS_1.0+0x334>
    b660:	ldr	x0, [sp, #40]
    b664:	ldr	x0, [x0, #16]
    b668:	str	x0, [sp, #40]
    b66c:	ldr	x0, [sp, #40]
    b670:	cmp	x0, #0x0
    b674:	b.ne	b648 <gelf_update_ehdr@@ELFUTILS_1.0+0x360>  // b.any
    b678:	nop
    b67c:	ldp	x29, x30, [sp], #48
    b680:	ret
    b684:	stp	x29, x30, [sp, #-48]!
    b688:	mov	x29, sp
    b68c:	str	x0, [sp, #24]
    b690:	ldr	x0, [sp, #24]
    b694:	ldr	w0, [x0, #24]
    b698:	cmp	w0, #0x1
    b69c:	b.ne	b6e0 <gelf_update_ehdr@@ELFUTILS_1.0+0x3f8>  // b.any
    b6a0:	ldr	x0, [sp, #24]
    b6a4:	ldr	x0, [x0, #72]
    b6a8:	str	x0, [sp, #40]
    b6ac:	b	b6d4 <gelf_update_ehdr@@ELFUTILS_1.0+0x3ec>
    b6b0:	ldr	x0, [sp, #40]
    b6b4:	ldr	w0, [x0, #60]
    b6b8:	cmp	w0, #0x0
    b6bc:	b.eq	b6c8 <gelf_update_ehdr@@ELFUTILS_1.0+0x3e0>  // b.none
    b6c0:	ldr	x0, [sp, #40]
    b6c4:	bl	b684 <gelf_update_ehdr@@ELFUTILS_1.0+0x39c>
    b6c8:	ldr	x0, [sp, #40]
    b6cc:	ldr	x0, [x0, #16]
    b6d0:	str	x0, [sp, #40]
    b6d4:	ldr	x0, [sp, #40]
    b6d8:	cmp	x0, #0x0
    b6dc:	b.ne	b6b0 <gelf_update_ehdr@@ELFUTILS_1.0+0x3c8>  // b.any
    b6e0:	nop
    b6e4:	ldp	x29, x30, [sp], #48
    b6e8:	ret
    b6ec:	stp	x29, x30, [sp, #-144]!
    b6f0:	mov	x29, sp
    b6f4:	str	x19, [sp, #16]
    b6f8:	str	x0, [sp, #40]
    b6fc:	ldr	x0, [sp, #40]
    b700:	ldr	x0, [x0, #88]
    b704:	str	x0, [sp, #136]
    b708:	ldr	x0, [sp, #136]
    b70c:	cmp	x0, #0x0
    b710:	cset	w0, ne  // ne = any
    b714:	and	w0, w0, #0xff
    b718:	and	x0, x0, #0xff
    b71c:	cmp	x0, #0x0
    b720:	b.eq	b72c <gelf_update_ehdr@@ELFUTILS_1.0+0x444>  // b.none
    b724:	ldr	x0, [sp, #136]
    b728:	b	be94 <gelf_update_ehdr@@ELFUTILS_1.0+0xbac>
    b72c:	ldr	x0, [sp, #40]
    b730:	ldr	w0, [x0, #32]
    b734:	cmp	w0, #0x0
    b738:	b.ne	b74c <gelf_update_ehdr@@ELFUTILS_1.0+0x464>  // b.any
    b73c:	ldr	x0, [sp, #40]
    b740:	mov	w1, #0x1                   	// #1
    b744:	str	w1, [x0, #32]
    b748:	b	b76c <gelf_update_ehdr@@ELFUTILS_1.0+0x484>
    b74c:	ldr	x0, [sp, #40]
    b750:	ldr	w0, [x0, #32]
    b754:	cmp	w0, #0x1
    b758:	b.eq	b76c <gelf_update_ehdr@@ELFUTILS_1.0+0x484>  // b.none
    b75c:	mov	w0, #0x15                  	// #21
    b760:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    b764:	str	xzr, [sp, #136]
    b768:	b	be90 <gelf_update_ehdr@@ELFUTILS_1.0+0xba8>
    b76c:	ldr	x0, [sp, #136]
    b770:	cmp	x0, #0x0
    b774:	cset	w0, eq  // eq = none
    b778:	and	w0, w0, #0xff
    b77c:	and	x0, x0, #0xff
    b780:	cmp	x0, #0x0
    b784:	b.eq	be84 <gelf_update_ehdr@@ELFUTILS_1.0+0xb9c>  // b.none
    b788:	ldr	x0, [sp, #40]
    b78c:	ldr	x0, [x0, #72]
    b790:	str	x0, [sp, #104]
    b794:	add	x0, sp, #0x30
    b798:	mov	x1, x0
    b79c:	ldr	x0, [sp, #40]
    b7a0:	bl	1d2c0 <gelf_update_verdaux@@ELFUTILS_1.0+0xf4>
    b7a4:	cmp	w0, #0x0
    b7a8:	b.ne	be8c <gelf_update_ehdr@@ELFUTILS_1.0+0xba4>  // b.any
    b7ac:	ldr	x0, [sp, #48]
    b7b0:	cmp	x0, #0x0
    b7b4:	b.eq	b7c8 <gelf_update_ehdr@@ELFUTILS_1.0+0x4e0>  // b.none
    b7b8:	ldr	x0, [sp, #104]
    b7bc:	ldr	w0, [x0, #28]
    b7c0:	cmp	w0, #0x0
    b7c4:	b.ne	b7d4 <gelf_update_ehdr@@ELFUTILS_1.0+0x4ec>  // b.any
    b7c8:	mov	w0, #0x2a                  	// #42
    b7cc:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    b7d0:	b	be90 <gelf_update_ehdr@@ELFUTILS_1.0+0xba8>
    b7d4:	ldr	x0, [sp, #48]
    b7d8:	lsl	x0, x0, #5
    b7dc:	str	x0, [sp, #96]
    b7e0:	ldr	x1, [sp, #48]
    b7e4:	mov	x0, #0x7ffffffffffffff     	// #576460752303423487
    b7e8:	cmp	x1, x0
    b7ec:	b.hi	b830 <gelf_update_ehdr@@ELFUTILS_1.0+0x548>  // b.pmore
    b7f0:	ldr	x0, [sp, #104]
    b7f4:	ldr	w0, [x0, #28]
    b7f8:	mov	w1, w0
    b7fc:	ldr	x0, [sp, #40]
    b800:	ldr	x0, [x0, #48]
    b804:	cmp	x1, x0
    b808:	b.hi	b830 <gelf_update_ehdr@@ELFUTILS_1.0+0x548>  // b.pmore
    b80c:	ldr	x0, [sp, #40]
    b810:	ldr	x1, [x0, #48]
    b814:	ldr	x0, [sp, #104]
    b818:	ldr	w0, [x0, #28]
    b81c:	mov	w0, w0
    b820:	sub	x0, x1, x0
    b824:	ldr	x1, [sp, #96]
    b828:	cmp	x1, x0
    b82c:	b.ls	b83c <gelf_update_ehdr@@ELFUTILS_1.0+0x554>  // b.plast
    b830:	mov	w0, #0x21                  	// #33
    b834:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    b838:	b	be90 <gelf_update_ehdr@@ELFUTILS_1.0+0xba8>
    b83c:	ldr	x0, [sp, #40]
    b840:	ldr	x0, [x0]
    b844:	cmp	x0, #0x0
    b848:	b.eq	bbc0 <gelf_update_ehdr@@ELFUTILS_1.0+0x8d8>  // b.none
    b84c:	ldr	x0, [sp, #104]
    b850:	ldr	w0, [x0, #28]
    b854:	mov	w1, w0
    b858:	ldr	x0, [sp, #40]
    b85c:	ldr	x0, [x0, #48]
    b860:	cmp	x1, x0
    b864:	cset	w0, cs  // cs = hs, nlast
    b868:	and	w0, w0, #0xff
    b86c:	and	x0, x0, #0xff
    b870:	cmp	x0, #0x0
    b874:	b.ne	b8ac <gelf_update_ehdr@@ELFUTILS_1.0+0x5c4>  // b.any
    b878:	ldr	x0, [sp, #40]
    b87c:	ldr	x1, [x0, #48]
    b880:	ldr	x0, [sp, #104]
    b884:	ldr	w0, [x0, #28]
    b888:	mov	w0, w0
    b88c:	sub	x0, x1, x0
    b890:	ldr	x1, [sp, #96]
    b894:	cmp	x1, x0
    b898:	cset	w0, hi  // hi = pmore
    b89c:	and	w0, w0, #0xff
    b8a0:	and	x0, x0, #0xff
    b8a4:	cmp	x0, #0x0
    b8a8:	b.eq	b8b8 <gelf_update_ehdr@@ELFUTILS_1.0+0x5d0>  // b.none
    b8ac:	mov	w0, #0x29                  	// #41
    b8b0:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    b8b4:	b	be90 <gelf_update_ehdr@@ELFUTILS_1.0+0xba8>
    b8b8:	ldr	x0, [sp, #40]
    b8bc:	ldr	x1, [x0]
    b8c0:	ldr	x0, [sp, #40]
    b8c4:	ldr	x0, [x0, #40]
    b8c8:	mov	x2, x0
    b8cc:	ldr	x0, [sp, #104]
    b8d0:	ldr	w0, [x0, #28]
    b8d4:	mov	w0, w0
    b8d8:	add	x0, x2, x0
    b8dc:	add	x0, x1, x0
    b8e0:	str	x0, [sp, #72]
    b8e4:	ldr	x0, [sp, #104]
    b8e8:	ldrb	w0, [x0, #5]
    b8ec:	cmp	w0, #0x1
    b8f0:	b.ne	b914 <gelf_update_ehdr@@ELFUTILS_1.0+0x62c>  // b.any
    b8f4:	ldr	x0, [sp, #72]
    b8f8:	and	x0, x0, #0x3
    b8fc:	cmp	x0, #0x0
    b900:	b.ne	b914 <gelf_update_ehdr@@ELFUTILS_1.0+0x62c>  // b.any
    b904:	ldr	x0, [sp, #40]
    b908:	ldr	x1, [sp, #72]
    b90c:	str	x1, [x0, #88]
    b910:	b	be74 <gelf_update_ehdr@@ELFUTILS_1.0+0xb8c>
    b914:	ldr	x0, [sp, #96]
    b918:	bl	3140 <malloc@plt>
    b91c:	mov	x1, x0
    b920:	ldr	x0, [sp, #40]
    b924:	str	x1, [x0, #88]
    b928:	ldr	x0, [sp, #40]
    b92c:	ldr	x0, [x0, #88]
    b930:	str	x0, [sp, #64]
    b934:	ldr	x0, [sp, #40]
    b938:	ldr	x0, [x0, #88]
    b93c:	cmp	x0, #0x0
    b940:	b.ne	b950 <gelf_update_ehdr@@ELFUTILS_1.0+0x668>  // b.any
    b944:	mov	w0, #0x8                   	// #8
    b948:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    b94c:	b	be90 <gelf_update_ehdr@@ELFUTILS_1.0+0xba8>
    b950:	ldr	x0, [sp, #40]
    b954:	ldr	w1, [x0, #120]
    b958:	mov	w0, #0x81                  	// #129
    b95c:	orr	w1, w1, w0
    b960:	ldr	x0, [sp, #40]
    b964:	str	w1, [x0, #120]
    b968:	ldr	x0, [sp, #104]
    b96c:	ldrb	w0, [x0, #5]
    b970:	cmp	w0, #0x1
    b974:	b.ne	b98c <gelf_update_ehdr@@ELFUTILS_1.0+0x6a4>  // b.any
    b978:	ldr	x2, [sp, #96]
    b97c:	ldr	x1, [sp, #72]
    b980:	ldr	x0, [sp, #64]
    b984:	bl	30a0 <memcpy@plt>
    b988:	b	be74 <gelf_update_ehdr@@ELFUTILS_1.0+0xb8c>
    b98c:	ldr	x0, [sp, #72]
    b990:	and	x0, x0, #0x3
    b994:	cmp	x0, #0x0
    b998:	cset	w0, ne  // ne = any
    b99c:	strb	w0, [sp, #63]
    b9a0:	ldrb	w0, [sp, #63]
    b9a4:	eor	w0, w0, #0x1
    b9a8:	and	w0, w0, #0xff
    b9ac:	cmp	w0, #0x0
    b9b0:	b.eq	b9c0 <gelf_update_ehdr@@ELFUTILS_1.0+0x6d8>  // b.none
    b9b4:	ldr	x0, [sp, #72]
    b9b8:	str	x0, [sp, #128]
    b9bc:	b	ba04 <gelf_update_ehdr@@ELFUTILS_1.0+0x71c>
    b9c0:	ldr	x0, [sp, #96]
    b9c4:	bl	3140 <malloc@plt>
    b9c8:	str	x0, [sp, #128]
    b9cc:	ldr	x0, [sp, #128]
    b9d0:	cmp	x0, #0x0
    b9d4:	cset	w0, eq  // eq = none
    b9d8:	and	w0, w0, #0xff
    b9dc:	and	x0, x0, #0xff
    b9e0:	cmp	x0, #0x0
    b9e4:	b.eq	b9f4 <gelf_update_ehdr@@ELFUTILS_1.0+0x70c>  // b.none
    b9e8:	mov	w0, #0x8                   	// #8
    b9ec:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    b9f0:	b	be90 <gelf_update_ehdr@@ELFUTILS_1.0+0xba8>
    b9f4:	ldr	x2, [sp, #96]
    b9f8:	ldr	x1, [sp, #72]
    b9fc:	ldr	x0, [sp, #128]
    ba00:	bl	30a0 <memcpy@plt>
    ba04:	str	xzr, [sp, #120]
    ba08:	b	bb98 <gelf_update_ehdr@@ELFUTILS_1.0+0x8b0>
    ba0c:	ldr	x0, [sp, #120]
    ba10:	lsl	x0, x0, #5
    ba14:	ldr	x1, [sp, #128]
    ba18:	add	x0, x1, x0
    ba1c:	ldr	w2, [x0]
    ba20:	ldr	x0, [sp, #120]
    ba24:	lsl	x0, x0, #5
    ba28:	ldr	x1, [sp, #64]
    ba2c:	add	x19, x1, x0
    ba30:	mov	w0, w2
    ba34:	bl	b538 <gelf_update_ehdr@@ELFUTILS_1.0+0x250>
    ba38:	str	w0, [x19]
    ba3c:	ldr	x0, [sp, #120]
    ba40:	lsl	x0, x0, #5
    ba44:	ldr	x1, [sp, #128]
    ba48:	add	x0, x1, x0
    ba4c:	ldr	w2, [x0, #4]
    ba50:	ldr	x0, [sp, #120]
    ba54:	lsl	x0, x0, #5
    ba58:	ldr	x1, [sp, #64]
    ba5c:	add	x19, x1, x0
    ba60:	mov	w0, w2
    ba64:	bl	b538 <gelf_update_ehdr@@ELFUTILS_1.0+0x250>
    ba68:	str	w0, [x19, #4]
    ba6c:	ldr	x0, [sp, #120]
    ba70:	lsl	x0, x0, #5
    ba74:	ldr	x1, [sp, #128]
    ba78:	add	x0, x1, x0
    ba7c:	ldr	w2, [x0, #8]
    ba80:	ldr	x0, [sp, #120]
    ba84:	lsl	x0, x0, #5
    ba88:	ldr	x1, [sp, #64]
    ba8c:	add	x19, x1, x0
    ba90:	mov	w0, w2
    ba94:	bl	b538 <gelf_update_ehdr@@ELFUTILS_1.0+0x250>
    ba98:	str	w0, [x19, #8]
    ba9c:	ldr	x0, [sp, #120]
    baa0:	lsl	x0, x0, #5
    baa4:	ldr	x1, [sp, #128]
    baa8:	add	x0, x1, x0
    baac:	ldr	w2, [x0, #12]
    bab0:	ldr	x0, [sp, #120]
    bab4:	lsl	x0, x0, #5
    bab8:	ldr	x1, [sp, #64]
    babc:	add	x19, x1, x0
    bac0:	mov	w0, w2
    bac4:	bl	b538 <gelf_update_ehdr@@ELFUTILS_1.0+0x250>
    bac8:	str	w0, [x19, #12]
    bacc:	ldr	x0, [sp, #120]
    bad0:	lsl	x0, x0, #5
    bad4:	ldr	x1, [sp, #128]
    bad8:	add	x0, x1, x0
    badc:	ldr	w2, [x0, #16]
    bae0:	ldr	x0, [sp, #120]
    bae4:	lsl	x0, x0, #5
    bae8:	ldr	x1, [sp, #64]
    baec:	add	x19, x1, x0
    baf0:	mov	w0, w2
    baf4:	bl	b538 <gelf_update_ehdr@@ELFUTILS_1.0+0x250>
    baf8:	str	w0, [x19, #16]
    bafc:	ldr	x0, [sp, #120]
    bb00:	lsl	x0, x0, #5
    bb04:	ldr	x1, [sp, #128]
    bb08:	add	x0, x1, x0
    bb0c:	ldr	w2, [x0, #20]
    bb10:	ldr	x0, [sp, #120]
    bb14:	lsl	x0, x0, #5
    bb18:	ldr	x1, [sp, #64]
    bb1c:	add	x19, x1, x0
    bb20:	mov	w0, w2
    bb24:	bl	b538 <gelf_update_ehdr@@ELFUTILS_1.0+0x250>
    bb28:	str	w0, [x19, #20]
    bb2c:	ldr	x0, [sp, #120]
    bb30:	lsl	x0, x0, #5
    bb34:	ldr	x1, [sp, #128]
    bb38:	add	x0, x1, x0
    bb3c:	ldr	w2, [x0, #24]
    bb40:	ldr	x0, [sp, #120]
    bb44:	lsl	x0, x0, #5
    bb48:	ldr	x1, [sp, #64]
    bb4c:	add	x19, x1, x0
    bb50:	mov	w0, w2
    bb54:	bl	b538 <gelf_update_ehdr@@ELFUTILS_1.0+0x250>
    bb58:	str	w0, [x19, #24]
    bb5c:	ldr	x0, [sp, #120]
    bb60:	lsl	x0, x0, #5
    bb64:	ldr	x1, [sp, #128]
    bb68:	add	x0, x1, x0
    bb6c:	ldr	w2, [x0, #28]
    bb70:	ldr	x0, [sp, #120]
    bb74:	lsl	x0, x0, #5
    bb78:	ldr	x1, [sp, #64]
    bb7c:	add	x19, x1, x0
    bb80:	mov	w0, w2
    bb84:	bl	b538 <gelf_update_ehdr@@ELFUTILS_1.0+0x250>
    bb88:	str	w0, [x19, #28]
    bb8c:	ldr	x0, [sp, #120]
    bb90:	add	x0, x0, #0x1
    bb94:	str	x0, [sp, #120]
    bb98:	ldr	x0, [sp, #48]
    bb9c:	ldr	x1, [sp, #120]
    bba0:	cmp	x1, x0
    bba4:	b.cc	ba0c <gelf_update_ehdr@@ELFUTILS_1.0+0x724>  // b.lo, b.ul, b.last
    bba8:	ldrb	w0, [sp, #63]
    bbac:	cmp	w0, #0x0
    bbb0:	b.eq	be74 <gelf_update_ehdr@@ELFUTILS_1.0+0xb8c>  // b.none
    bbb4:	ldr	x0, [sp, #128]
    bbb8:	bl	32a0 <free@plt>
    bbbc:	b	be74 <gelf_update_ehdr@@ELFUTILS_1.0+0xb8c>
    bbc0:	ldr	x0, [sp, #40]
    bbc4:	ldr	w0, [x0, #36]
    bbc8:	cmn	w0, #0x1
    bbcc:	cset	w0, ne  // ne = any
    bbd0:	and	w0, w0, #0xff
    bbd4:	and	x0, x0, #0xff
    bbd8:	cmp	x0, #0x0
    bbdc:	b.eq	be68 <gelf_update_ehdr@@ELFUTILS_1.0+0xb80>  // b.none
    bbe0:	ldr	x0, [sp, #96]
    bbe4:	bl	3140 <malloc@plt>
    bbe8:	mov	x1, x0
    bbec:	ldr	x0, [sp, #40]
    bbf0:	str	x1, [x0, #88]
    bbf4:	ldr	x0, [sp, #40]
    bbf8:	ldr	x0, [x0, #88]
    bbfc:	cmp	x0, #0x0
    bc00:	b.ne	bc10 <gelf_update_ehdr@@ELFUTILS_1.0+0x928>  // b.any
    bc04:	mov	w0, #0x8                   	// #8
    bc08:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    bc0c:	b	be90 <gelf_update_ehdr@@ELFUTILS_1.0+0xba8>
    bc10:	ldr	x0, [sp, #40]
    bc14:	ldr	w0, [x0, #120]
    bc18:	orr	w1, w0, #0x80
    bc1c:	ldr	x0, [sp, #40]
    bc20:	str	w1, [x0, #120]
    bc24:	ldr	x0, [sp, #40]
    bc28:	ldr	w4, [x0, #36]
    bc2c:	ldr	x0, [sp, #40]
    bc30:	ldr	x5, [x0, #88]
    bc34:	ldr	x0, [sp, #40]
    bc38:	ldr	x1, [x0, #40]
    bc3c:	ldr	x0, [sp, #104]
    bc40:	ldr	w0, [x0, #28]
    bc44:	mov	w0, w0
    bc48:	add	x0, x1, x0
    bc4c:	mov	x3, x0
    bc50:	ldr	x2, [sp, #96]
    bc54:	mov	x1, x5
    bc58:	mov	w0, w4
    bc5c:	bl	b550 <gelf_update_ehdr@@ELFUTILS_1.0+0x268>
    bc60:	str	x0, [sp, #88]
    bc64:	ldr	x0, [sp, #96]
    bc68:	ldr	x1, [sp, #88]
    bc6c:	cmp	x1, x0
    bc70:	cset	w0, ne  // ne = any
    bc74:	and	w0, w0, #0xff
    bc78:	and	x0, x0, #0xff
    bc7c:	cmp	x0, #0x0
    bc80:	b.eq	bca4 <gelf_update_ehdr@@ELFUTILS_1.0+0x9bc>  // b.none
    bc84:	mov	w0, #0x13                  	// #19
    bc88:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    bc8c:	ldr	x0, [sp, #40]
    bc90:	ldr	x0, [x0, #88]
    bc94:	bl	32a0 <free@plt>
    bc98:	ldr	x0, [sp, #40]
    bc9c:	str	xzr, [x0, #88]
    bca0:	b	be90 <gelf_update_ehdr@@ELFUTILS_1.0+0xba8>
    bca4:	ldr	x0, [sp, #104]
    bca8:	ldrb	w0, [x0, #5]
    bcac:	cmp	w0, #0x1
    bcb0:	b.eq	be74 <gelf_update_ehdr@@ELFUTILS_1.0+0xb8c>  // b.none
    bcb4:	ldr	x0, [sp, #40]
    bcb8:	ldr	x0, [x0, #88]
    bcbc:	str	x0, [sp, #80]
    bcc0:	str	xzr, [sp, #112]
    bcc4:	b	be54 <gelf_update_ehdr@@ELFUTILS_1.0+0xb6c>
    bcc8:	ldr	x0, [sp, #112]
    bccc:	lsl	x0, x0, #5
    bcd0:	ldr	x1, [sp, #80]
    bcd4:	add	x0, x1, x0
    bcd8:	ldr	w2, [x0]
    bcdc:	ldr	x0, [sp, #112]
    bce0:	lsl	x0, x0, #5
    bce4:	ldr	x1, [sp, #80]
    bce8:	add	x19, x1, x0
    bcec:	mov	w0, w2
    bcf0:	bl	b538 <gelf_update_ehdr@@ELFUTILS_1.0+0x250>
    bcf4:	str	w0, [x19]
    bcf8:	ldr	x0, [sp, #112]
    bcfc:	lsl	x0, x0, #5
    bd00:	ldr	x1, [sp, #80]
    bd04:	add	x0, x1, x0
    bd08:	ldr	w2, [x0, #4]
    bd0c:	ldr	x0, [sp, #112]
    bd10:	lsl	x0, x0, #5
    bd14:	ldr	x1, [sp, #80]
    bd18:	add	x19, x1, x0
    bd1c:	mov	w0, w2
    bd20:	bl	b538 <gelf_update_ehdr@@ELFUTILS_1.0+0x250>
    bd24:	str	w0, [x19, #4]
    bd28:	ldr	x0, [sp, #112]
    bd2c:	lsl	x0, x0, #5
    bd30:	ldr	x1, [sp, #80]
    bd34:	add	x0, x1, x0
    bd38:	ldr	w2, [x0, #8]
    bd3c:	ldr	x0, [sp, #112]
    bd40:	lsl	x0, x0, #5
    bd44:	ldr	x1, [sp, #80]
    bd48:	add	x19, x1, x0
    bd4c:	mov	w0, w2
    bd50:	bl	b538 <gelf_update_ehdr@@ELFUTILS_1.0+0x250>
    bd54:	str	w0, [x19, #8]
    bd58:	ldr	x0, [sp, #112]
    bd5c:	lsl	x0, x0, #5
    bd60:	ldr	x1, [sp, #80]
    bd64:	add	x0, x1, x0
    bd68:	ldr	w2, [x0, #12]
    bd6c:	ldr	x0, [sp, #112]
    bd70:	lsl	x0, x0, #5
    bd74:	ldr	x1, [sp, #80]
    bd78:	add	x19, x1, x0
    bd7c:	mov	w0, w2
    bd80:	bl	b538 <gelf_update_ehdr@@ELFUTILS_1.0+0x250>
    bd84:	str	w0, [x19, #12]
    bd88:	ldr	x0, [sp, #112]
    bd8c:	lsl	x0, x0, #5
    bd90:	ldr	x1, [sp, #80]
    bd94:	add	x0, x1, x0
    bd98:	ldr	w2, [x0, #16]
    bd9c:	ldr	x0, [sp, #112]
    bda0:	lsl	x0, x0, #5
    bda4:	ldr	x1, [sp, #80]
    bda8:	add	x19, x1, x0
    bdac:	mov	w0, w2
    bdb0:	bl	b538 <gelf_update_ehdr@@ELFUTILS_1.0+0x250>
    bdb4:	str	w0, [x19, #16]
    bdb8:	ldr	x0, [sp, #112]
    bdbc:	lsl	x0, x0, #5
    bdc0:	ldr	x1, [sp, #80]
    bdc4:	add	x0, x1, x0
    bdc8:	ldr	w2, [x0, #20]
    bdcc:	ldr	x0, [sp, #112]
    bdd0:	lsl	x0, x0, #5
    bdd4:	ldr	x1, [sp, #80]
    bdd8:	add	x19, x1, x0
    bddc:	mov	w0, w2
    bde0:	bl	b538 <gelf_update_ehdr@@ELFUTILS_1.0+0x250>
    bde4:	str	w0, [x19, #20]
    bde8:	ldr	x0, [sp, #112]
    bdec:	lsl	x0, x0, #5
    bdf0:	ldr	x1, [sp, #80]
    bdf4:	add	x0, x1, x0
    bdf8:	ldr	w2, [x0, #24]
    bdfc:	ldr	x0, [sp, #112]
    be00:	lsl	x0, x0, #5
    be04:	ldr	x1, [sp, #80]
    be08:	add	x19, x1, x0
    be0c:	mov	w0, w2
    be10:	bl	b538 <gelf_update_ehdr@@ELFUTILS_1.0+0x250>
    be14:	str	w0, [x19, #24]
    be18:	ldr	x0, [sp, #112]
    be1c:	lsl	x0, x0, #5
    be20:	ldr	x1, [sp, #80]
    be24:	add	x0, x1, x0
    be28:	ldr	w2, [x0, #28]
    be2c:	ldr	x0, [sp, #112]
    be30:	lsl	x0, x0, #5
    be34:	ldr	x1, [sp, #80]
    be38:	add	x19, x1, x0
    be3c:	mov	w0, w2
    be40:	bl	b538 <gelf_update_ehdr@@ELFUTILS_1.0+0x250>
    be44:	str	w0, [x19, #28]
    be48:	ldr	x0, [sp, #112]
    be4c:	add	x0, x0, #0x1
    be50:	str	x0, [sp, #112]
    be54:	ldr	x0, [sp, #48]
    be58:	ldr	x1, [sp, #112]
    be5c:	cmp	x1, x0
    be60:	b.cc	bcc8 <gelf_update_ehdr@@ELFUTILS_1.0+0x9e0>  // b.lo, b.ul, b.last
    be64:	b	be74 <gelf_update_ehdr@@ELFUTILS_1.0+0xb8c>
    be68:	mov	w0, #0x1b                  	// #27
    be6c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    be70:	b	be90 <gelf_update_ehdr@@ELFUTILS_1.0+0xba8>
    be74:	ldr	x0, [sp, #40]
    be78:	ldr	x0, [x0, #88]
    be7c:	str	x0, [sp, #136]
    be80:	b	be90 <gelf_update_ehdr@@ELFUTILS_1.0+0xba8>
    be84:	nop
    be88:	b	be90 <gelf_update_ehdr@@ELFUTILS_1.0+0xba8>
    be8c:	nop
    be90:	ldr	x0, [sp, #136]
    be94:	ldr	x19, [sp, #16]
    be98:	ldp	x29, x30, [sp], #144
    be9c:	ret

000000000000bea0 <elf32_getphdr@@ELFUTILS_1.0>:
    bea0:	stp	x29, x30, [sp, #-48]!
    bea4:	mov	x29, sp
    bea8:	str	x0, [sp, #24]
    beac:	ldr	x0, [sp, #24]
    beb0:	cmp	x0, #0x0
    beb4:	b.ne	bec0 <elf32_getphdr@@ELFUTILS_1.0+0x20>  // b.any
    beb8:	mov	x0, #0x0                   	// #0
    bebc:	b	bf30 <elf32_getphdr@@ELFUTILS_1.0+0x90>
    bec0:	ldr	x0, [sp, #24]
    bec4:	ldr	w0, [x0, #24]
    bec8:	cmp	w0, #0x3
    becc:	cset	w0, ne  // ne = any
    bed0:	and	w0, w0, #0xff
    bed4:	and	x0, x0, #0xff
    bed8:	cmp	x0, #0x0
    bedc:	b.eq	bef0 <elf32_getphdr@@ELFUTILS_1.0+0x50>  // b.none
    bee0:	mov	w0, #0x4                   	// #4
    bee4:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    bee8:	mov	x0, #0x0                   	// #0
    beec:	b	bf30 <elf32_getphdr@@ELFUTILS_1.0+0x90>
    bef0:	ldr	x0, [sp, #24]
    bef4:	ldr	x0, [x0, #88]
    bef8:	str	x0, [sp, #40]
    befc:	ldr	x0, [sp, #40]
    bf00:	cmp	x0, #0x0
    bf04:	cset	w0, ne  // ne = any
    bf08:	and	w0, w0, #0xff
    bf0c:	and	x0, x0, #0xff
    bf10:	cmp	x0, #0x0
    bf14:	b.eq	bf20 <elf32_getphdr@@ELFUTILS_1.0+0x80>  // b.none
    bf18:	ldr	x0, [sp, #40]
    bf1c:	b	bf30 <elf32_getphdr@@ELFUTILS_1.0+0x90>
    bf20:	ldr	x0, [sp, #24]
    bf24:	bl	b6ec <gelf_update_ehdr@@ELFUTILS_1.0+0x404>
    bf28:	str	x0, [sp, #40]
    bf2c:	ldr	x0, [sp, #40]
    bf30:	ldp	x29, x30, [sp], #48
    bf34:	ret
    bf38:	sub	sp, sp, #0x10
    bf3c:	str	w0, [sp, #12]
    bf40:	ldr	w0, [sp, #12]
    bf44:	rev	w0, w0
    bf48:	add	sp, sp, #0x10
    bf4c:	ret
    bf50:	sub	sp, sp, #0x10
    bf54:	str	x0, [sp, #8]
    bf58:	ldr	x0, [sp, #8]
    bf5c:	rev	x0, x0
    bf60:	add	sp, sp, #0x10
    bf64:	ret
    bf68:	stp	x29, x30, [sp, #-80]!
    bf6c:	mov	x29, sp
    bf70:	str	w0, [sp, #44]
    bf74:	str	x1, [sp, #32]
    bf78:	str	x2, [sp, #24]
    bf7c:	str	x3, [sp, #16]
    bf80:	str	xzr, [sp, #72]
    bf84:	ldr	x0, [sp, #72]
    bf88:	ldr	x1, [sp, #32]
    bf8c:	add	x4, x1, x0
    bf90:	ldr	x0, [sp, #72]
    bf94:	ldr	x1, [sp, #24]
    bf98:	sub	x2, x1, x0
    bf9c:	ldr	x1, [sp, #16]
    bfa0:	ldr	x0, [sp, #72]
    bfa4:	add	x0, x1, x0
    bfa8:	mov	x3, x0
    bfac:	mov	x1, x4
    bfb0:	ldr	w0, [sp, #44]
    bfb4:	bl	3300 <pread@plt>
    bfb8:	str	x0, [sp, #64]
    bfbc:	ldr	x0, [sp, #64]
    bfc0:	cmn	x0, #0x1
    bfc4:	b.ne	bfd8 <elf32_getphdr@@ELFUTILS_1.0+0x138>  // b.any
    bfc8:	bl	33e0 <__errno_location@plt>
    bfcc:	ldr	w0, [x0]
    bfd0:	cmp	w0, #0x4
    bfd4:	b.eq	bf84 <elf32_getphdr@@ELFUTILS_1.0+0xe4>  // b.none
    bfd8:	ldr	x0, [sp, #64]
    bfdc:	str	x0, [sp, #56]
    bfe0:	ldr	x0, [sp, #56]
    bfe4:	cmp	x0, #0x0
    bfe8:	b.gt	c008 <elf32_getphdr@@ELFUTILS_1.0+0x168>
    bfec:	ldr	x0, [sp, #56]
    bff0:	cmp	x0, #0x0
    bff4:	b.ge	c000 <elf32_getphdr@@ELFUTILS_1.0+0x160>  // b.tcont
    bff8:	ldr	x0, [sp, #56]
    bffc:	b	c02c <elf32_getphdr@@ELFUTILS_1.0+0x18c>
    c000:	ldr	x0, [sp, #72]
    c004:	b	c02c <elf32_getphdr@@ELFUTILS_1.0+0x18c>
    c008:	ldr	x1, [sp, #72]
    c00c:	ldr	x0, [sp, #56]
    c010:	add	x0, x1, x0
    c014:	str	x0, [sp, #72]
    c018:	ldr	x0, [sp, #72]
    c01c:	ldr	x1, [sp, #24]
    c020:	cmp	x1, x0
    c024:	b.hi	bf84 <elf32_getphdr@@ELFUTILS_1.0+0xe4>  // b.pmore
    c028:	ldr	x0, [sp, #72]
    c02c:	ldp	x29, x30, [sp], #80
    c030:	ret
    c034:	stp	x29, x30, [sp, #-48]!
    c038:	mov	x29, sp
    c03c:	str	x0, [sp, #24]
    c040:	ldr	x0, [sp, #24]
    c044:	ldr	w0, [x0, #24]
    c048:	cmp	w0, #0x1
    c04c:	b.ne	c090 <elf32_getphdr@@ELFUTILS_1.0+0x1f0>  // b.any
    c050:	ldr	x0, [sp, #24]
    c054:	ldr	x0, [x0, #72]
    c058:	str	x0, [sp, #40]
    c05c:	b	c084 <elf32_getphdr@@ELFUTILS_1.0+0x1e4>
    c060:	ldr	x0, [sp, #40]
    c064:	ldr	w0, [x0, #60]
    c068:	cmp	w0, #0x0
    c06c:	b.eq	c078 <elf32_getphdr@@ELFUTILS_1.0+0x1d8>  // b.none
    c070:	ldr	x0, [sp, #40]
    c074:	bl	c034 <elf32_getphdr@@ELFUTILS_1.0+0x194>
    c078:	ldr	x0, [sp, #40]
    c07c:	ldr	x0, [x0, #16]
    c080:	str	x0, [sp, #40]
    c084:	ldr	x0, [sp, #40]
    c088:	cmp	x0, #0x0
    c08c:	b.ne	c060 <elf32_getphdr@@ELFUTILS_1.0+0x1c0>  // b.any
    c090:	nop
    c094:	ldp	x29, x30, [sp], #48
    c098:	ret
    c09c:	stp	x29, x30, [sp, #-48]!
    c0a0:	mov	x29, sp
    c0a4:	str	x0, [sp, #24]
    c0a8:	ldr	x0, [sp, #24]
    c0ac:	ldr	w0, [x0, #24]
    c0b0:	cmp	w0, #0x1
    c0b4:	b.ne	c0f8 <elf32_getphdr@@ELFUTILS_1.0+0x258>  // b.any
    c0b8:	ldr	x0, [sp, #24]
    c0bc:	ldr	x0, [x0, #72]
    c0c0:	str	x0, [sp, #40]
    c0c4:	b	c0ec <elf32_getphdr@@ELFUTILS_1.0+0x24c>
    c0c8:	ldr	x0, [sp, #40]
    c0cc:	ldr	w0, [x0, #60]
    c0d0:	cmp	w0, #0x0
    c0d4:	b.eq	c0e0 <elf32_getphdr@@ELFUTILS_1.0+0x240>  // b.none
    c0d8:	ldr	x0, [sp, #40]
    c0dc:	bl	c09c <elf32_getphdr@@ELFUTILS_1.0+0x1fc>
    c0e0:	ldr	x0, [sp, #40]
    c0e4:	ldr	x0, [x0, #16]
    c0e8:	str	x0, [sp, #40]
    c0ec:	ldr	x0, [sp, #40]
    c0f0:	cmp	x0, #0x0
    c0f4:	b.ne	c0c8 <elf32_getphdr@@ELFUTILS_1.0+0x228>  // b.any
    c0f8:	nop
    c0fc:	ldp	x29, x30, [sp], #48
    c100:	ret
    c104:	stp	x29, x30, [sp, #-144]!
    c108:	mov	x29, sp
    c10c:	str	x19, [sp, #16]
    c110:	str	x0, [sp, #40]
    c114:	ldr	x0, [sp, #40]
    c118:	ldr	x0, [x0, #88]
    c11c:	str	x0, [sp, #136]
    c120:	ldr	x0, [sp, #136]
    c124:	cmp	x0, #0x0
    c128:	cset	w0, ne  // ne = any
    c12c:	and	w0, w0, #0xff
    c130:	and	x0, x0, #0xff
    c134:	cmp	x0, #0x0
    c138:	b.eq	c144 <elf32_getphdr@@ELFUTILS_1.0+0x2a4>  // b.none
    c13c:	ldr	x0, [sp, #136]
    c140:	b	caac <elf32_getphdr@@ELFUTILS_1.0+0xc0c>
    c144:	ldr	x0, [sp, #40]
    c148:	ldr	w0, [x0, #32]
    c14c:	cmp	w0, #0x0
    c150:	b.ne	c164 <elf32_getphdr@@ELFUTILS_1.0+0x2c4>  // b.any
    c154:	ldr	x0, [sp, #40]
    c158:	mov	w1, #0x2                   	// #2
    c15c:	str	w1, [x0, #32]
    c160:	b	c184 <elf32_getphdr@@ELFUTILS_1.0+0x2e4>
    c164:	ldr	x0, [sp, #40]
    c168:	ldr	w0, [x0, #32]
    c16c:	cmp	w0, #0x2
    c170:	b.eq	c184 <elf32_getphdr@@ELFUTILS_1.0+0x2e4>  // b.none
    c174:	mov	w0, #0x15                  	// #21
    c178:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    c17c:	str	xzr, [sp, #136]
    c180:	b	caa8 <elf32_getphdr@@ELFUTILS_1.0+0xc08>
    c184:	ldr	x0, [sp, #136]
    c188:	cmp	x0, #0x0
    c18c:	cset	w0, eq  // eq = none
    c190:	and	w0, w0, #0xff
    c194:	and	x0, x0, #0xff
    c198:	cmp	x0, #0x0
    c19c:	b.eq	ca9c <elf32_getphdr@@ELFUTILS_1.0+0xbfc>  // b.none
    c1a0:	ldr	x0, [sp, #40]
    c1a4:	ldr	x0, [x0, #72]
    c1a8:	str	x0, [sp, #104]
    c1ac:	add	x0, sp, #0x30
    c1b0:	mov	x1, x0
    c1b4:	ldr	x0, [sp, #40]
    c1b8:	bl	1d2c0 <gelf_update_verdaux@@ELFUTILS_1.0+0xf4>
    c1bc:	cmp	w0, #0x0
    c1c0:	b.ne	caa4 <elf32_getphdr@@ELFUTILS_1.0+0xc04>  // b.any
    c1c4:	ldr	x0, [sp, #48]
    c1c8:	cmp	x0, #0x0
    c1cc:	b.eq	c1e0 <elf32_getphdr@@ELFUTILS_1.0+0x340>  // b.none
    c1d0:	ldr	x0, [sp, #104]
    c1d4:	ldr	x0, [x0, #32]
    c1d8:	cmp	x0, #0x0
    c1dc:	b.ne	c1ec <elf32_getphdr@@ELFUTILS_1.0+0x34c>  // b.any
    c1e0:	mov	w0, #0x2a                  	// #42
    c1e4:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    c1e8:	b	caa8 <elf32_getphdr@@ELFUTILS_1.0+0xc08>
    c1ec:	ldr	x1, [sp, #48]
    c1f0:	mov	x0, x1
    c1f4:	lsl	x0, x0, #3
    c1f8:	sub	x0, x0, x1
    c1fc:	lsl	x0, x0, #3
    c200:	str	x0, [sp, #96]
    c204:	ldr	x1, [sp, #48]
    c208:	mov	x0, #0x2492                	// #9362
    c20c:	movk	x0, #0x9249, lsl #16
    c210:	movk	x0, #0x4924, lsl #32
    c214:	movk	x0, #0x492, lsl #48
    c218:	cmp	x1, x0
    c21c:	b.hi	c258 <elf32_getphdr@@ELFUTILS_1.0+0x3b8>  // b.pmore
    c220:	ldr	x0, [sp, #104]
    c224:	ldr	x1, [x0, #32]
    c228:	ldr	x0, [sp, #40]
    c22c:	ldr	x0, [x0, #48]
    c230:	cmp	x1, x0
    c234:	b.hi	c258 <elf32_getphdr@@ELFUTILS_1.0+0x3b8>  // b.pmore
    c238:	ldr	x0, [sp, #40]
    c23c:	ldr	x1, [x0, #48]
    c240:	ldr	x0, [sp, #104]
    c244:	ldr	x0, [x0, #32]
    c248:	sub	x0, x1, x0
    c24c:	ldr	x1, [sp, #96]
    c250:	cmp	x1, x0
    c254:	b.ls	c264 <elf32_getphdr@@ELFUTILS_1.0+0x3c4>  // b.plast
    c258:	mov	w0, #0x21                  	// #33
    c25c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    c260:	b	caa8 <elf32_getphdr@@ELFUTILS_1.0+0xc08>
    c264:	ldr	x0, [sp, #40]
    c268:	ldr	x0, [x0]
    c26c:	cmp	x0, #0x0
    c270:	b.eq	c6dc <elf32_getphdr@@ELFUTILS_1.0+0x83c>  // b.none
    c274:	ldr	x0, [sp, #104]
    c278:	ldr	x1, [x0, #32]
    c27c:	ldr	x0, [sp, #40]
    c280:	ldr	x0, [x0, #48]
    c284:	cmp	x1, x0
    c288:	cset	w0, cs  // cs = hs, nlast
    c28c:	and	w0, w0, #0xff
    c290:	and	x0, x0, #0xff
    c294:	cmp	x0, #0x0
    c298:	b.ne	c2cc <elf32_getphdr@@ELFUTILS_1.0+0x42c>  // b.any
    c29c:	ldr	x0, [sp, #40]
    c2a0:	ldr	x1, [x0, #48]
    c2a4:	ldr	x0, [sp, #104]
    c2a8:	ldr	x0, [x0, #32]
    c2ac:	sub	x0, x1, x0
    c2b0:	ldr	x1, [sp, #96]
    c2b4:	cmp	x1, x0
    c2b8:	cset	w0, hi  // hi = pmore
    c2bc:	and	w0, w0, #0xff
    c2c0:	and	x0, x0, #0xff
    c2c4:	cmp	x0, #0x0
    c2c8:	b.eq	c2d8 <elf32_getphdr@@ELFUTILS_1.0+0x438>  // b.none
    c2cc:	mov	w0, #0x29                  	// #41
    c2d0:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    c2d4:	b	caa8 <elf32_getphdr@@ELFUTILS_1.0+0xc08>
    c2d8:	ldr	x0, [sp, #40]
    c2dc:	ldr	x1, [x0]
    c2e0:	ldr	x0, [sp, #40]
    c2e4:	ldr	x0, [x0, #40]
    c2e8:	mov	x2, x0
    c2ec:	ldr	x0, [sp, #104]
    c2f0:	ldr	x0, [x0, #32]
    c2f4:	add	x0, x2, x0
    c2f8:	add	x0, x1, x0
    c2fc:	str	x0, [sp, #72]
    c300:	ldr	x0, [sp, #104]
    c304:	ldrb	w0, [x0, #5]
    c308:	cmp	w0, #0x1
    c30c:	b.ne	c330 <elf32_getphdr@@ELFUTILS_1.0+0x490>  // b.any
    c310:	ldr	x0, [sp, #72]
    c314:	and	x0, x0, #0x7
    c318:	cmp	x0, #0x0
    c31c:	b.ne	c330 <elf32_getphdr@@ELFUTILS_1.0+0x490>  // b.any
    c320:	ldr	x0, [sp, #40]
    c324:	ldr	x1, [sp, #72]
    c328:	str	x1, [x0, #88]
    c32c:	b	ca8c <elf32_getphdr@@ELFUTILS_1.0+0xbec>
    c330:	ldr	x0, [sp, #96]
    c334:	bl	3140 <malloc@plt>
    c338:	mov	x1, x0
    c33c:	ldr	x0, [sp, #40]
    c340:	str	x1, [x0, #88]
    c344:	ldr	x0, [sp, #40]
    c348:	ldr	x0, [x0, #88]
    c34c:	str	x0, [sp, #64]
    c350:	ldr	x0, [sp, #40]
    c354:	ldr	x0, [x0, #88]
    c358:	cmp	x0, #0x0
    c35c:	b.ne	c36c <elf32_getphdr@@ELFUTILS_1.0+0x4cc>  // b.any
    c360:	mov	w0, #0x8                   	// #8
    c364:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    c368:	b	caa8 <elf32_getphdr@@ELFUTILS_1.0+0xc08>
    c36c:	ldr	x0, [sp, #40]
    c370:	ldr	w1, [x0, #120]
    c374:	mov	w0, #0x81                  	// #129
    c378:	orr	w1, w1, w0
    c37c:	ldr	x0, [sp, #40]
    c380:	str	w1, [x0, #120]
    c384:	ldr	x0, [sp, #104]
    c388:	ldrb	w0, [x0, #5]
    c38c:	cmp	w0, #0x1
    c390:	b.ne	c3a8 <elf32_getphdr@@ELFUTILS_1.0+0x508>  // b.any
    c394:	ldr	x2, [sp, #96]
    c398:	ldr	x1, [sp, #72]
    c39c:	ldr	x0, [sp, #64]
    c3a0:	bl	30a0 <memcpy@plt>
    c3a4:	b	ca8c <elf32_getphdr@@ELFUTILS_1.0+0xbec>
    c3a8:	ldr	x0, [sp, #72]
    c3ac:	and	x0, x0, #0x7
    c3b0:	cmp	x0, #0x0
    c3b4:	cset	w0, ne  // ne = any
    c3b8:	strb	w0, [sp, #63]
    c3bc:	ldrb	w0, [sp, #63]
    c3c0:	eor	w0, w0, #0x1
    c3c4:	and	w0, w0, #0xff
    c3c8:	cmp	w0, #0x0
    c3cc:	b.eq	c3dc <elf32_getphdr@@ELFUTILS_1.0+0x53c>  // b.none
    c3d0:	ldr	x0, [sp, #72]
    c3d4:	str	x0, [sp, #128]
    c3d8:	b	c420 <elf32_getphdr@@ELFUTILS_1.0+0x580>
    c3dc:	ldr	x0, [sp, #96]
    c3e0:	bl	3140 <malloc@plt>
    c3e4:	str	x0, [sp, #128]
    c3e8:	ldr	x0, [sp, #128]
    c3ec:	cmp	x0, #0x0
    c3f0:	cset	w0, eq  // eq = none
    c3f4:	and	w0, w0, #0xff
    c3f8:	and	x0, x0, #0xff
    c3fc:	cmp	x0, #0x0
    c400:	b.eq	c410 <elf32_getphdr@@ELFUTILS_1.0+0x570>  // b.none
    c404:	mov	w0, #0x8                   	// #8
    c408:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    c40c:	b	caa8 <elf32_getphdr@@ELFUTILS_1.0+0xc08>
    c410:	ldr	x2, [sp, #96]
    c414:	ldr	x1, [sp, #72]
    c418:	ldr	x0, [sp, #128]
    c41c:	bl	30a0 <memcpy@plt>
    c420:	str	xzr, [sp, #120]
    c424:	b	c6b4 <elf32_getphdr@@ELFUTILS_1.0+0x814>
    c428:	ldr	x1, [sp, #120]
    c42c:	mov	x0, x1
    c430:	lsl	x0, x0, #3
    c434:	sub	x0, x0, x1
    c438:	lsl	x0, x0, #3
    c43c:	mov	x1, x0
    c440:	ldr	x0, [sp, #128]
    c444:	add	x0, x0, x1
    c448:	ldr	w2, [x0]
    c44c:	ldr	x1, [sp, #120]
    c450:	mov	x0, x1
    c454:	lsl	x0, x0, #3
    c458:	sub	x0, x0, x1
    c45c:	lsl	x0, x0, #3
    c460:	mov	x1, x0
    c464:	ldr	x0, [sp, #64]
    c468:	add	x19, x0, x1
    c46c:	mov	w0, w2
    c470:	bl	bf38 <elf32_getphdr@@ELFUTILS_1.0+0x98>
    c474:	str	w0, [x19]
    c478:	ldr	x1, [sp, #120]
    c47c:	mov	x0, x1
    c480:	lsl	x0, x0, #3
    c484:	sub	x0, x0, x1
    c488:	lsl	x0, x0, #3
    c48c:	mov	x1, x0
    c490:	ldr	x0, [sp, #128]
    c494:	add	x0, x0, x1
    c498:	ldr	x2, [x0, #8]
    c49c:	ldr	x1, [sp, #120]
    c4a0:	mov	x0, x1
    c4a4:	lsl	x0, x0, #3
    c4a8:	sub	x0, x0, x1
    c4ac:	lsl	x0, x0, #3
    c4b0:	mov	x1, x0
    c4b4:	ldr	x0, [sp, #64]
    c4b8:	add	x19, x0, x1
    c4bc:	mov	x0, x2
    c4c0:	bl	bf50 <elf32_getphdr@@ELFUTILS_1.0+0xb0>
    c4c4:	str	x0, [x19, #8]
    c4c8:	ldr	x1, [sp, #120]
    c4cc:	mov	x0, x1
    c4d0:	lsl	x0, x0, #3
    c4d4:	sub	x0, x0, x1
    c4d8:	lsl	x0, x0, #3
    c4dc:	mov	x1, x0
    c4e0:	ldr	x0, [sp, #128]
    c4e4:	add	x0, x0, x1
    c4e8:	ldr	x2, [x0, #16]
    c4ec:	ldr	x1, [sp, #120]
    c4f0:	mov	x0, x1
    c4f4:	lsl	x0, x0, #3
    c4f8:	sub	x0, x0, x1
    c4fc:	lsl	x0, x0, #3
    c500:	mov	x1, x0
    c504:	ldr	x0, [sp, #64]
    c508:	add	x19, x0, x1
    c50c:	mov	x0, x2
    c510:	bl	bf50 <elf32_getphdr@@ELFUTILS_1.0+0xb0>
    c514:	str	x0, [x19, #16]
    c518:	ldr	x1, [sp, #120]
    c51c:	mov	x0, x1
    c520:	lsl	x0, x0, #3
    c524:	sub	x0, x0, x1
    c528:	lsl	x0, x0, #3
    c52c:	mov	x1, x0
    c530:	ldr	x0, [sp, #128]
    c534:	add	x0, x0, x1
    c538:	ldr	x2, [x0, #24]
    c53c:	ldr	x1, [sp, #120]
    c540:	mov	x0, x1
    c544:	lsl	x0, x0, #3
    c548:	sub	x0, x0, x1
    c54c:	lsl	x0, x0, #3
    c550:	mov	x1, x0
    c554:	ldr	x0, [sp, #64]
    c558:	add	x19, x0, x1
    c55c:	mov	x0, x2
    c560:	bl	bf50 <elf32_getphdr@@ELFUTILS_1.0+0xb0>
    c564:	str	x0, [x19, #24]
    c568:	ldr	x1, [sp, #120]
    c56c:	mov	x0, x1
    c570:	lsl	x0, x0, #3
    c574:	sub	x0, x0, x1
    c578:	lsl	x0, x0, #3
    c57c:	mov	x1, x0
    c580:	ldr	x0, [sp, #128]
    c584:	add	x0, x0, x1
    c588:	ldr	x2, [x0, #32]
    c58c:	ldr	x1, [sp, #120]
    c590:	mov	x0, x1
    c594:	lsl	x0, x0, #3
    c598:	sub	x0, x0, x1
    c59c:	lsl	x0, x0, #3
    c5a0:	mov	x1, x0
    c5a4:	ldr	x0, [sp, #64]
    c5a8:	add	x19, x0, x1
    c5ac:	mov	x0, x2
    c5b0:	bl	bf50 <elf32_getphdr@@ELFUTILS_1.0+0xb0>
    c5b4:	str	x0, [x19, #32]
    c5b8:	ldr	x1, [sp, #120]
    c5bc:	mov	x0, x1
    c5c0:	lsl	x0, x0, #3
    c5c4:	sub	x0, x0, x1
    c5c8:	lsl	x0, x0, #3
    c5cc:	mov	x1, x0
    c5d0:	ldr	x0, [sp, #128]
    c5d4:	add	x0, x0, x1
    c5d8:	ldr	x2, [x0, #40]
    c5dc:	ldr	x1, [sp, #120]
    c5e0:	mov	x0, x1
    c5e4:	lsl	x0, x0, #3
    c5e8:	sub	x0, x0, x1
    c5ec:	lsl	x0, x0, #3
    c5f0:	mov	x1, x0
    c5f4:	ldr	x0, [sp, #64]
    c5f8:	add	x19, x0, x1
    c5fc:	mov	x0, x2
    c600:	bl	bf50 <elf32_getphdr@@ELFUTILS_1.0+0xb0>
    c604:	str	x0, [x19, #40]
    c608:	ldr	x1, [sp, #120]
    c60c:	mov	x0, x1
    c610:	lsl	x0, x0, #3
    c614:	sub	x0, x0, x1
    c618:	lsl	x0, x0, #3
    c61c:	mov	x1, x0
    c620:	ldr	x0, [sp, #128]
    c624:	add	x0, x0, x1
    c628:	ldr	w2, [x0, #4]
    c62c:	ldr	x1, [sp, #120]
    c630:	mov	x0, x1
    c634:	lsl	x0, x0, #3
    c638:	sub	x0, x0, x1
    c63c:	lsl	x0, x0, #3
    c640:	mov	x1, x0
    c644:	ldr	x0, [sp, #64]
    c648:	add	x19, x0, x1
    c64c:	mov	w0, w2
    c650:	bl	bf38 <elf32_getphdr@@ELFUTILS_1.0+0x98>
    c654:	str	w0, [x19, #4]
    c658:	ldr	x1, [sp, #120]
    c65c:	mov	x0, x1
    c660:	lsl	x0, x0, #3
    c664:	sub	x0, x0, x1
    c668:	lsl	x0, x0, #3
    c66c:	mov	x1, x0
    c670:	ldr	x0, [sp, #128]
    c674:	add	x0, x0, x1
    c678:	ldr	x2, [x0, #48]
    c67c:	ldr	x1, [sp, #120]
    c680:	mov	x0, x1
    c684:	lsl	x0, x0, #3
    c688:	sub	x0, x0, x1
    c68c:	lsl	x0, x0, #3
    c690:	mov	x1, x0
    c694:	ldr	x0, [sp, #64]
    c698:	add	x19, x0, x1
    c69c:	mov	x0, x2
    c6a0:	bl	bf50 <elf32_getphdr@@ELFUTILS_1.0+0xb0>
    c6a4:	str	x0, [x19, #48]
    c6a8:	ldr	x0, [sp, #120]
    c6ac:	add	x0, x0, #0x1
    c6b0:	str	x0, [sp, #120]
    c6b4:	ldr	x0, [sp, #48]
    c6b8:	ldr	x1, [sp, #120]
    c6bc:	cmp	x1, x0
    c6c0:	b.cc	c428 <elf32_getphdr@@ELFUTILS_1.0+0x588>  // b.lo, b.ul, b.last
    c6c4:	ldrb	w0, [sp, #63]
    c6c8:	cmp	w0, #0x0
    c6cc:	b.eq	ca8c <elf32_getphdr@@ELFUTILS_1.0+0xbec>  // b.none
    c6d0:	ldr	x0, [sp, #128]
    c6d4:	bl	32a0 <free@plt>
    c6d8:	b	ca8c <elf32_getphdr@@ELFUTILS_1.0+0xbec>
    c6dc:	ldr	x0, [sp, #40]
    c6e0:	ldr	w0, [x0, #36]
    c6e4:	cmn	w0, #0x1
    c6e8:	cset	w0, ne  // ne = any
    c6ec:	and	w0, w0, #0xff
    c6f0:	and	x0, x0, #0xff
    c6f4:	cmp	x0, #0x0
    c6f8:	b.eq	ca80 <elf32_getphdr@@ELFUTILS_1.0+0xbe0>  // b.none
    c6fc:	ldr	x0, [sp, #96]
    c700:	bl	3140 <malloc@plt>
    c704:	mov	x1, x0
    c708:	ldr	x0, [sp, #40]
    c70c:	str	x1, [x0, #88]
    c710:	ldr	x0, [sp, #40]
    c714:	ldr	x0, [x0, #88]
    c718:	cmp	x0, #0x0
    c71c:	b.ne	c72c <elf32_getphdr@@ELFUTILS_1.0+0x88c>  // b.any
    c720:	mov	w0, #0x8                   	// #8
    c724:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    c728:	b	caa8 <elf32_getphdr@@ELFUTILS_1.0+0xc08>
    c72c:	ldr	x0, [sp, #40]
    c730:	ldr	w0, [x0, #120]
    c734:	orr	w1, w0, #0x80
    c738:	ldr	x0, [sp, #40]
    c73c:	str	w1, [x0, #120]
    c740:	ldr	x0, [sp, #40]
    c744:	ldr	w4, [x0, #36]
    c748:	ldr	x0, [sp, #40]
    c74c:	ldr	x1, [x0, #88]
    c750:	ldr	x0, [sp, #40]
    c754:	ldr	x0, [x0, #40]
    c758:	mov	x2, x0
    c75c:	ldr	x0, [sp, #104]
    c760:	ldr	x0, [x0, #32]
    c764:	add	x0, x2, x0
    c768:	mov	x3, x0
    c76c:	ldr	x2, [sp, #96]
    c770:	mov	w0, w4
    c774:	bl	bf68 <elf32_getphdr@@ELFUTILS_1.0+0xc8>
    c778:	str	x0, [sp, #88]
    c77c:	ldr	x0, [sp, #96]
    c780:	ldr	x1, [sp, #88]
    c784:	cmp	x1, x0
    c788:	cset	w0, ne  // ne = any
    c78c:	and	w0, w0, #0xff
    c790:	and	x0, x0, #0xff
    c794:	cmp	x0, #0x0
    c798:	b.eq	c7bc <elf32_getphdr@@ELFUTILS_1.0+0x91c>  // b.none
    c79c:	mov	w0, #0x13                  	// #19
    c7a0:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    c7a4:	ldr	x0, [sp, #40]
    c7a8:	ldr	x0, [x0, #88]
    c7ac:	bl	32a0 <free@plt>
    c7b0:	ldr	x0, [sp, #40]
    c7b4:	str	xzr, [x0, #88]
    c7b8:	b	caa8 <elf32_getphdr@@ELFUTILS_1.0+0xc08>
    c7bc:	ldr	x0, [sp, #104]
    c7c0:	ldrb	w0, [x0, #5]
    c7c4:	cmp	w0, #0x1
    c7c8:	b.eq	ca8c <elf32_getphdr@@ELFUTILS_1.0+0xbec>  // b.none
    c7cc:	ldr	x0, [sp, #40]
    c7d0:	ldr	x0, [x0, #88]
    c7d4:	str	x0, [sp, #80]
    c7d8:	str	xzr, [sp, #112]
    c7dc:	b	ca6c <elf32_getphdr@@ELFUTILS_1.0+0xbcc>
    c7e0:	ldr	x1, [sp, #112]
    c7e4:	mov	x0, x1
    c7e8:	lsl	x0, x0, #3
    c7ec:	sub	x0, x0, x1
    c7f0:	lsl	x0, x0, #3
    c7f4:	mov	x1, x0
    c7f8:	ldr	x0, [sp, #80]
    c7fc:	add	x0, x0, x1
    c800:	ldr	w2, [x0]
    c804:	ldr	x1, [sp, #112]
    c808:	mov	x0, x1
    c80c:	lsl	x0, x0, #3
    c810:	sub	x0, x0, x1
    c814:	lsl	x0, x0, #3
    c818:	mov	x1, x0
    c81c:	ldr	x0, [sp, #80]
    c820:	add	x19, x0, x1
    c824:	mov	w0, w2
    c828:	bl	bf38 <elf32_getphdr@@ELFUTILS_1.0+0x98>
    c82c:	str	w0, [x19]
    c830:	ldr	x1, [sp, #112]
    c834:	mov	x0, x1
    c838:	lsl	x0, x0, #3
    c83c:	sub	x0, x0, x1
    c840:	lsl	x0, x0, #3
    c844:	mov	x1, x0
    c848:	ldr	x0, [sp, #80]
    c84c:	add	x0, x0, x1
    c850:	ldr	x2, [x0, #8]
    c854:	ldr	x1, [sp, #112]
    c858:	mov	x0, x1
    c85c:	lsl	x0, x0, #3
    c860:	sub	x0, x0, x1
    c864:	lsl	x0, x0, #3
    c868:	mov	x1, x0
    c86c:	ldr	x0, [sp, #80]
    c870:	add	x19, x0, x1
    c874:	mov	x0, x2
    c878:	bl	bf50 <elf32_getphdr@@ELFUTILS_1.0+0xb0>
    c87c:	str	x0, [x19, #8]
    c880:	ldr	x1, [sp, #112]
    c884:	mov	x0, x1
    c888:	lsl	x0, x0, #3
    c88c:	sub	x0, x0, x1
    c890:	lsl	x0, x0, #3
    c894:	mov	x1, x0
    c898:	ldr	x0, [sp, #80]
    c89c:	add	x0, x0, x1
    c8a0:	ldr	x2, [x0, #16]
    c8a4:	ldr	x1, [sp, #112]
    c8a8:	mov	x0, x1
    c8ac:	lsl	x0, x0, #3
    c8b0:	sub	x0, x0, x1
    c8b4:	lsl	x0, x0, #3
    c8b8:	mov	x1, x0
    c8bc:	ldr	x0, [sp, #80]
    c8c0:	add	x19, x0, x1
    c8c4:	mov	x0, x2
    c8c8:	bl	bf50 <elf32_getphdr@@ELFUTILS_1.0+0xb0>
    c8cc:	str	x0, [x19, #16]
    c8d0:	ldr	x1, [sp, #112]
    c8d4:	mov	x0, x1
    c8d8:	lsl	x0, x0, #3
    c8dc:	sub	x0, x0, x1
    c8e0:	lsl	x0, x0, #3
    c8e4:	mov	x1, x0
    c8e8:	ldr	x0, [sp, #80]
    c8ec:	add	x0, x0, x1
    c8f0:	ldr	x2, [x0, #24]
    c8f4:	ldr	x1, [sp, #112]
    c8f8:	mov	x0, x1
    c8fc:	lsl	x0, x0, #3
    c900:	sub	x0, x0, x1
    c904:	lsl	x0, x0, #3
    c908:	mov	x1, x0
    c90c:	ldr	x0, [sp, #80]
    c910:	add	x19, x0, x1
    c914:	mov	x0, x2
    c918:	bl	bf50 <elf32_getphdr@@ELFUTILS_1.0+0xb0>
    c91c:	str	x0, [x19, #24]
    c920:	ldr	x1, [sp, #112]
    c924:	mov	x0, x1
    c928:	lsl	x0, x0, #3
    c92c:	sub	x0, x0, x1
    c930:	lsl	x0, x0, #3
    c934:	mov	x1, x0
    c938:	ldr	x0, [sp, #80]
    c93c:	add	x0, x0, x1
    c940:	ldr	x2, [x0, #32]
    c944:	ldr	x1, [sp, #112]
    c948:	mov	x0, x1
    c94c:	lsl	x0, x0, #3
    c950:	sub	x0, x0, x1
    c954:	lsl	x0, x0, #3
    c958:	mov	x1, x0
    c95c:	ldr	x0, [sp, #80]
    c960:	add	x19, x0, x1
    c964:	mov	x0, x2
    c968:	bl	bf50 <elf32_getphdr@@ELFUTILS_1.0+0xb0>
    c96c:	str	x0, [x19, #32]
    c970:	ldr	x1, [sp, #112]
    c974:	mov	x0, x1
    c978:	lsl	x0, x0, #3
    c97c:	sub	x0, x0, x1
    c980:	lsl	x0, x0, #3
    c984:	mov	x1, x0
    c988:	ldr	x0, [sp, #80]
    c98c:	add	x0, x0, x1
    c990:	ldr	x2, [x0, #40]
    c994:	ldr	x1, [sp, #112]
    c998:	mov	x0, x1
    c99c:	lsl	x0, x0, #3
    c9a0:	sub	x0, x0, x1
    c9a4:	lsl	x0, x0, #3
    c9a8:	mov	x1, x0
    c9ac:	ldr	x0, [sp, #80]
    c9b0:	add	x19, x0, x1
    c9b4:	mov	x0, x2
    c9b8:	bl	bf50 <elf32_getphdr@@ELFUTILS_1.0+0xb0>
    c9bc:	str	x0, [x19, #40]
    c9c0:	ldr	x1, [sp, #112]
    c9c4:	mov	x0, x1
    c9c8:	lsl	x0, x0, #3
    c9cc:	sub	x0, x0, x1
    c9d0:	lsl	x0, x0, #3
    c9d4:	mov	x1, x0
    c9d8:	ldr	x0, [sp, #80]
    c9dc:	add	x0, x0, x1
    c9e0:	ldr	w2, [x0, #4]
    c9e4:	ldr	x1, [sp, #112]
    c9e8:	mov	x0, x1
    c9ec:	lsl	x0, x0, #3
    c9f0:	sub	x0, x0, x1
    c9f4:	lsl	x0, x0, #3
    c9f8:	mov	x1, x0
    c9fc:	ldr	x0, [sp, #80]
    ca00:	add	x19, x0, x1
    ca04:	mov	w0, w2
    ca08:	bl	bf38 <elf32_getphdr@@ELFUTILS_1.0+0x98>
    ca0c:	str	w0, [x19, #4]
    ca10:	ldr	x1, [sp, #112]
    ca14:	mov	x0, x1
    ca18:	lsl	x0, x0, #3
    ca1c:	sub	x0, x0, x1
    ca20:	lsl	x0, x0, #3
    ca24:	mov	x1, x0
    ca28:	ldr	x0, [sp, #80]
    ca2c:	add	x0, x0, x1
    ca30:	ldr	x2, [x0, #48]
    ca34:	ldr	x1, [sp, #112]
    ca38:	mov	x0, x1
    ca3c:	lsl	x0, x0, #3
    ca40:	sub	x0, x0, x1
    ca44:	lsl	x0, x0, #3
    ca48:	mov	x1, x0
    ca4c:	ldr	x0, [sp, #80]
    ca50:	add	x19, x0, x1
    ca54:	mov	x0, x2
    ca58:	bl	bf50 <elf32_getphdr@@ELFUTILS_1.0+0xb0>
    ca5c:	str	x0, [x19, #48]
    ca60:	ldr	x0, [sp, #112]
    ca64:	add	x0, x0, #0x1
    ca68:	str	x0, [sp, #112]
    ca6c:	ldr	x0, [sp, #48]
    ca70:	ldr	x1, [sp, #112]
    ca74:	cmp	x1, x0
    ca78:	b.cc	c7e0 <elf32_getphdr@@ELFUTILS_1.0+0x940>  // b.lo, b.ul, b.last
    ca7c:	b	ca8c <elf32_getphdr@@ELFUTILS_1.0+0xbec>
    ca80:	mov	w0, #0x1b                  	// #27
    ca84:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    ca88:	b	caa8 <elf32_getphdr@@ELFUTILS_1.0+0xc08>
    ca8c:	ldr	x0, [sp, #40]
    ca90:	ldr	x0, [x0, #88]
    ca94:	str	x0, [sp, #136]
    ca98:	b	caa8 <elf32_getphdr@@ELFUTILS_1.0+0xc08>
    ca9c:	nop
    caa0:	b	caa8 <elf32_getphdr@@ELFUTILS_1.0+0xc08>
    caa4:	nop
    caa8:	ldr	x0, [sp, #136]
    caac:	ldr	x19, [sp, #16]
    cab0:	ldp	x29, x30, [sp], #144
    cab4:	ret

000000000000cab8 <elf64_getphdr@@ELFUTILS_1.0>:
    cab8:	stp	x29, x30, [sp, #-48]!
    cabc:	mov	x29, sp
    cac0:	str	x0, [sp, #24]
    cac4:	ldr	x0, [sp, #24]
    cac8:	cmp	x0, #0x0
    cacc:	b.ne	cad8 <elf64_getphdr@@ELFUTILS_1.0+0x20>  // b.any
    cad0:	mov	x0, #0x0                   	// #0
    cad4:	b	cb48 <elf64_getphdr@@ELFUTILS_1.0+0x90>
    cad8:	ldr	x0, [sp, #24]
    cadc:	ldr	w0, [x0, #24]
    cae0:	cmp	w0, #0x3
    cae4:	cset	w0, ne  // ne = any
    cae8:	and	w0, w0, #0xff
    caec:	and	x0, x0, #0xff
    caf0:	cmp	x0, #0x0
    caf4:	b.eq	cb08 <elf64_getphdr@@ELFUTILS_1.0+0x50>  // b.none
    caf8:	mov	w0, #0x4                   	// #4
    cafc:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    cb00:	mov	x0, #0x0                   	// #0
    cb04:	b	cb48 <elf64_getphdr@@ELFUTILS_1.0+0x90>
    cb08:	ldr	x0, [sp, #24]
    cb0c:	ldr	x0, [x0, #88]
    cb10:	str	x0, [sp, #40]
    cb14:	ldr	x0, [sp, #40]
    cb18:	cmp	x0, #0x0
    cb1c:	cset	w0, ne  // ne = any
    cb20:	and	w0, w0, #0xff
    cb24:	and	x0, x0, #0xff
    cb28:	cmp	x0, #0x0
    cb2c:	b.eq	cb38 <elf64_getphdr@@ELFUTILS_1.0+0x80>  // b.none
    cb30:	ldr	x0, [sp, #40]
    cb34:	b	cb48 <elf64_getphdr@@ELFUTILS_1.0+0x90>
    cb38:	ldr	x0, [sp, #24]
    cb3c:	bl	c104 <elf32_getphdr@@ELFUTILS_1.0+0x264>
    cb40:	str	x0, [sp, #40]
    cb44:	ldr	x0, [sp, #40]
    cb48:	ldp	x29, x30, [sp], #48
    cb4c:	ret

000000000000cb50 <gelf_getphdr@@ELFUTILS_1.0>:
    cb50:	stp	x29, x30, [sp, #-96]!
    cb54:	mov	x29, sp
    cb58:	str	x0, [sp, #40]
    cb5c:	str	w1, [sp, #36]
    cb60:	str	x2, [sp, #24]
    cb64:	str	xzr, [sp, #88]
    cb68:	ldr	x0, [sp, #40]
    cb6c:	cmp	x0, #0x0
    cb70:	b.ne	cb7c <gelf_getphdr@@ELFUTILS_1.0+0x2c>  // b.any
    cb74:	mov	x0, #0x0                   	// #0
    cb78:	b	cda0 <gelf_getphdr@@ELFUTILS_1.0+0x250>
    cb7c:	ldr	x0, [sp, #40]
    cb80:	ldr	w0, [x0, #24]
    cb84:	cmp	w0, #0x3
    cb88:	cset	w0, ne  // ne = any
    cb8c:	and	w0, w0, #0xff
    cb90:	and	x0, x0, #0xff
    cb94:	cmp	x0, #0x0
    cb98:	b.eq	cbac <gelf_getphdr@@ELFUTILS_1.0+0x5c>  // b.none
    cb9c:	mov	w0, #0x4                   	// #4
    cba0:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    cba4:	mov	x0, #0x0                   	// #0
    cba8:	b	cda0 <gelf_getphdr@@ELFUTILS_1.0+0x250>
    cbac:	ldr	x0, [sp, #24]
    cbb0:	cmp	x0, #0x0
    cbb4:	b.ne	cbc8 <gelf_getphdr@@ELFUTILS_1.0+0x78>  // b.any
    cbb8:	mov	w0, #0x17                  	// #23
    cbbc:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    cbc0:	mov	x0, #0x0                   	// #0
    cbc4:	b	cda0 <gelf_getphdr@@ELFUTILS_1.0+0x250>
    cbc8:	ldr	x0, [sp, #40]
    cbcc:	ldr	w0, [x0, #32]
    cbd0:	cmp	w0, #0x1
    cbd4:	b.ne	ccfc <gelf_getphdr@@ELFUTILS_1.0+0x1ac>  // b.any
    cbd8:	ldr	x0, [sp, #40]
    cbdc:	ldr	x0, [x0, #88]
    cbe0:	str	x0, [sp, #80]
    cbe4:	ldr	x0, [sp, #80]
    cbe8:	cmp	x0, #0x0
    cbec:	b.ne	cc10 <gelf_getphdr@@ELFUTILS_1.0+0xc0>  // b.any
    cbf0:	ldr	x0, [sp, #40]
    cbf4:	bl	bea0 <elf32_getphdr@@ELFUTILS_1.0>
    cbf8:	str	x0, [sp, #80]
    cbfc:	ldr	x0, [sp, #80]
    cc00:	cmp	x0, #0x0
    cc04:	b.ne	cc10 <gelf_getphdr@@ELFUTILS_1.0+0xc0>  // b.any
    cc08:	mov	x0, #0x0                   	// #0
    cc0c:	b	cda0 <gelf_getphdr@@ELFUTILS_1.0+0x250>
    cc10:	add	x0, sp, #0x40
    cc14:	mov	x1, x0
    cc18:	ldr	x0, [sp, #40]
    cc1c:	bl	1d448 <gelf_update_verdaux@@ELFUTILS_1.0+0x27c>
    cc20:	cmp	w0, #0x0
    cc24:	b.ne	cc38 <gelf_getphdr@@ELFUTILS_1.0+0xe8>  // b.any
    cc28:	ldrsw	x1, [sp, #36]
    cc2c:	ldr	x0, [sp, #64]
    cc30:	cmp	x1, x0
    cc34:	b.cc	cc44 <gelf_getphdr@@ELFUTILS_1.0+0xf4>  // b.lo, b.ul, b.last
    cc38:	mov	w0, #0x16                  	// #22
    cc3c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    cc40:	b	cd9c <gelf_getphdr@@ELFUTILS_1.0+0x24c>
    cc44:	ldr	x0, [sp, #24]
    cc48:	str	x0, [sp, #88]
    cc4c:	ldrsw	x0, [sp, #36]
    cc50:	lsl	x0, x0, #5
    cc54:	ldr	x1, [sp, #80]
    cc58:	add	x0, x1, x0
    cc5c:	str	x0, [sp, #80]
    cc60:	ldr	x0, [sp, #80]
    cc64:	ldr	w1, [x0]
    cc68:	ldr	x0, [sp, #88]
    cc6c:	str	w1, [x0]
    cc70:	ldr	x0, [sp, #80]
    cc74:	ldr	w0, [x0, #4]
    cc78:	mov	w1, w0
    cc7c:	ldr	x0, [sp, #88]
    cc80:	str	x1, [x0, #8]
    cc84:	ldr	x0, [sp, #80]
    cc88:	ldr	w0, [x0, #8]
    cc8c:	mov	w1, w0
    cc90:	ldr	x0, [sp, #88]
    cc94:	str	x1, [x0, #16]
    cc98:	ldr	x0, [sp, #80]
    cc9c:	ldr	w0, [x0, #12]
    cca0:	mov	w1, w0
    cca4:	ldr	x0, [sp, #88]
    cca8:	str	x1, [x0, #24]
    ccac:	ldr	x0, [sp, #80]
    ccb0:	ldr	w0, [x0, #16]
    ccb4:	mov	w1, w0
    ccb8:	ldr	x0, [sp, #88]
    ccbc:	str	x1, [x0, #32]
    ccc0:	ldr	x0, [sp, #80]
    ccc4:	ldr	w0, [x0, #20]
    ccc8:	mov	w1, w0
    cccc:	ldr	x0, [sp, #88]
    ccd0:	str	x1, [x0, #40]
    ccd4:	ldr	x0, [sp, #80]
    ccd8:	ldr	w1, [x0, #24]
    ccdc:	ldr	x0, [sp, #88]
    cce0:	str	w1, [x0, #4]
    cce4:	ldr	x0, [sp, #80]
    cce8:	ldr	w0, [x0, #28]
    ccec:	mov	w1, w0
    ccf0:	ldr	x0, [sp, #88]
    ccf4:	str	x1, [x0, #48]
    ccf8:	b	cd9c <gelf_getphdr@@ELFUTILS_1.0+0x24c>
    ccfc:	ldr	x0, [sp, #40]
    cd00:	ldr	x0, [x0, #88]
    cd04:	str	x0, [sp, #72]
    cd08:	ldr	x0, [sp, #72]
    cd0c:	cmp	x0, #0x0
    cd10:	b.ne	cd34 <gelf_getphdr@@ELFUTILS_1.0+0x1e4>  // b.any
    cd14:	ldr	x0, [sp, #40]
    cd18:	bl	cab8 <elf64_getphdr@@ELFUTILS_1.0>
    cd1c:	str	x0, [sp, #72]
    cd20:	ldr	x0, [sp, #72]
    cd24:	cmp	x0, #0x0
    cd28:	b.ne	cd34 <gelf_getphdr@@ELFUTILS_1.0+0x1e4>  // b.any
    cd2c:	mov	x0, #0x0                   	// #0
    cd30:	b	cda0 <gelf_getphdr@@ELFUTILS_1.0+0x250>
    cd34:	add	x0, sp, #0x38
    cd38:	mov	x1, x0
    cd3c:	ldr	x0, [sp, #40]
    cd40:	bl	1d448 <gelf_update_verdaux@@ELFUTILS_1.0+0x27c>
    cd44:	cmp	w0, #0x0
    cd48:	b.ne	cd5c <gelf_getphdr@@ELFUTILS_1.0+0x20c>  // b.any
    cd4c:	ldrsw	x1, [sp, #36]
    cd50:	ldr	x0, [sp, #56]
    cd54:	cmp	x1, x0
    cd58:	b.cc	cd68 <gelf_getphdr@@ELFUTILS_1.0+0x218>  // b.lo, b.ul, b.last
    cd5c:	mov	w0, #0x16                  	// #22
    cd60:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    cd64:	b	cd9c <gelf_getphdr@@ELFUTILS_1.0+0x24c>
    cd68:	ldrsw	x1, [sp, #36]
    cd6c:	mov	x0, x1
    cd70:	lsl	x0, x0, #3
    cd74:	sub	x0, x0, x1
    cd78:	lsl	x0, x0, #3
    cd7c:	mov	x1, x0
    cd80:	ldr	x0, [sp, #72]
    cd84:	add	x0, x0, x1
    cd88:	mov	x2, #0x38                  	// #56
    cd8c:	mov	x1, x0
    cd90:	ldr	x0, [sp, #24]
    cd94:	bl	30a0 <memcpy@plt>
    cd98:	str	x0, [sp, #88]
    cd9c:	ldr	x0, [sp, #88]
    cda0:	ldp	x29, x30, [sp], #96
    cda4:	ret

000000000000cda8 <elf32_newphdr@@ELFUTILS_1.0>:
    cda8:	stp	x29, x30, [sp, #-48]!
    cdac:	mov	x29, sp
    cdb0:	str	x0, [sp, #24]
    cdb4:	str	x1, [sp, #16]
    cdb8:	ldr	x0, [sp, #24]
    cdbc:	cmp	x0, #0x0
    cdc0:	b.ne	cdcc <elf32_newphdr@@ELFUTILS_1.0+0x24>  // b.any
    cdc4:	mov	x0, #0x0                   	// #0
    cdc8:	b	d1fc <elf32_newphdr@@ELFUTILS_1.0+0x454>
    cdcc:	ldr	x0, [sp, #24]
    cdd0:	ldr	w0, [x0, #24]
    cdd4:	cmp	w0, #0x3
    cdd8:	cset	w0, ne  // ne = any
    cddc:	and	w0, w0, #0xff
    cde0:	and	x0, x0, #0xff
    cde4:	cmp	x0, #0x0
    cde8:	b.eq	cdfc <elf32_newphdr@@ELFUTILS_1.0+0x54>  // b.none
    cdec:	mov	w0, #0x4                   	// #4
    cdf0:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    cdf4:	mov	x0, #0x0                   	// #0
    cdf8:	b	d1fc <elf32_newphdr@@ELFUTILS_1.0+0x454>
    cdfc:	ldr	x0, [sp, #16]
    ce00:	mov	w0, w0
    ce04:	ldr	x1, [sp, #16]
    ce08:	cmp	x1, x0
    ce0c:	cset	w0, ne  // ne = any
    ce10:	and	w0, w0, #0xff
    ce14:	and	x0, x0, #0xff
    ce18:	cmp	x0, #0x0
    ce1c:	b.eq	ce30 <elf32_newphdr@@ELFUTILS_1.0+0x88>  // b.none
    ce20:	mov	w0, #0x17                  	// #23
    ce24:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    ce28:	mov	x0, #0x0                   	// #0
    ce2c:	b	d1fc <elf32_newphdr@@ELFUTILS_1.0+0x454>
    ce30:	ldr	x0, [sp, #24]
    ce34:	ldr	w0, [x0, #32]
    ce38:	cmp	w0, #0x0
    ce3c:	b.ne	ce50 <elf32_newphdr@@ELFUTILS_1.0+0xa8>  // b.any
    ce40:	ldr	x0, [sp, #24]
    ce44:	mov	w1, #0x1                   	// #1
    ce48:	str	w1, [x0, #32]
    ce4c:	b	ce80 <elf32_newphdr@@ELFUTILS_1.0+0xd8>
    ce50:	ldr	x0, [sp, #24]
    ce54:	ldr	w0, [x0, #32]
    ce58:	cmp	w0, #0x1
    ce5c:	cset	w0, ne  // ne = any
    ce60:	and	w0, w0, #0xff
    ce64:	and	x0, x0, #0xff
    ce68:	cmp	x0, #0x0
    ce6c:	b.eq	ce80 <elf32_newphdr@@ELFUTILS_1.0+0xd8>  // b.none
    ce70:	mov	w0, #0x15                  	// #21
    ce74:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    ce78:	str	xzr, [sp, #40]
    ce7c:	b	d1f8 <elf32_newphdr@@ELFUTILS_1.0+0x450>
    ce80:	ldr	x0, [sp, #24]
    ce84:	ldr	x0, [x0, #72]
    ce88:	cmp	x0, #0x0
    ce8c:	cset	w0, eq  // eq = none
    ce90:	and	w0, w0, #0xff
    ce94:	and	x0, x0, #0xff
    ce98:	cmp	x0, #0x0
    ce9c:	b.eq	ceb0 <elf32_newphdr@@ELFUTILS_1.0+0x108>  // b.none
    cea0:	mov	w0, #0x1a                  	// #26
    cea4:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    cea8:	str	xzr, [sp, #40]
    ceac:	b	d1f8 <elf32_newphdr@@ELFUTILS_1.0+0x450>
    ceb0:	ldr	x0, [sp, #16]
    ceb4:	cmp	x0, #0x0
    ceb8:	b.ne	cf64 <elf32_newphdr@@ELFUTILS_1.0+0x1bc>  // b.any
    cebc:	ldr	x0, [sp, #24]
    cec0:	ldr	x0, [x0, #88]
    cec4:	cmp	x0, #0x0
    cec8:	b.eq	cf5c <elf32_newphdr@@ELFUTILS_1.0+0x1b4>  // b.none
    cecc:	ldr	x0, [sp, #24]
    ced0:	ldr	w0, [x0, #120]
    ced4:	and	w0, w0, #0x80
    ced8:	cmp	w0, #0x0
    cedc:	b.eq	ceec <elf32_newphdr@@ELFUTILS_1.0+0x144>  // b.none
    cee0:	ldr	x0, [sp, #24]
    cee4:	ldr	x0, [x0, #88]
    cee8:	bl	32a0 <free@plt>
    ceec:	ldr	x0, [sp, #24]
    cef0:	str	xzr, [x0, #88]
    cef4:	ldr	x0, [sp, #24]
    cef8:	ldr	x0, [x0, #72]
    cefc:	strh	wzr, [x0, #44]
    cf00:	ldr	x0, [sp, #24]
    cf04:	ldr	w0, [x0, #200]
    cf08:	cmp	w0, #0x0
    cf0c:	b.eq	cf1c <elf32_newphdr@@ELFUTILS_1.0+0x174>  // b.none
    cf10:	ldr	x0, [sp, #24]
    cf14:	ldr	x0, [x0, #360]
    cf18:	str	wzr, [x0, #28]
    cf1c:	ldr	x0, [sp, #24]
    cf20:	ldr	x0, [x0, #72]
    cf24:	mov	w1, #0x20                  	// #32
    cf28:	strh	w1, [x0, #42]
    cf2c:	ldr	x0, [sp, #24]
    cf30:	ldr	w0, [x0, #120]
    cf34:	orr	w1, w0, #0x1
    cf38:	ldr	x0, [sp, #24]
    cf3c:	str	w1, [x0, #120]
    cf40:	ldr	x0, [sp, #24]
    cf44:	ldr	w0, [x0, #56]
    cf48:	orr	w1, w0, #0x1
    cf4c:	ldr	x0, [sp, #24]
    cf50:	str	w1, [x0, #56]
    cf54:	mov	w0, #0x0                   	// #0
    cf58:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    cf5c:	str	xzr, [sp, #40]
    cf60:	b	d1f8 <elf32_newphdr@@ELFUTILS_1.0+0x450>
    cf64:	ldr	x0, [sp, #24]
    cf68:	ldr	x0, [x0, #72]
    cf6c:	ldrh	w0, [x0, #44]
    cf70:	and	x0, x0, #0xffff
    cf74:	ldr	x1, [sp, #16]
    cf78:	cmp	x1, x0
    cf7c:	b.ne	cfa0 <elf32_newphdr@@ELFUTILS_1.0+0x1f8>  // b.any
    cf80:	ldr	x1, [sp, #16]
    cf84:	mov	x0, #0xffff                	// #65535
    cf88:	cmp	x1, x0
    cf8c:	b.eq	cfa0 <elf32_newphdr@@ELFUTILS_1.0+0x1f8>  // b.none
    cf90:	ldr	x0, [sp, #24]
    cf94:	ldr	x0, [x0, #88]
    cf98:	cmp	x0, #0x0
    cf9c:	b.ne	d17c <elf32_newphdr@@ELFUTILS_1.0+0x3d4>  // b.any
    cfa0:	ldr	x1, [sp, #16]
    cfa4:	mov	x0, #0x7ffffffffffffff     	// #576460752303423487
    cfa8:	cmp	x1, x0
    cfac:	cset	w0, hi  // hi = pmore
    cfb0:	and	w0, w0, #0xff
    cfb4:	and	x0, x0, #0xff
    cfb8:	cmp	x0, #0x0
    cfbc:	b.eq	cfd0 <elf32_newphdr@@ELFUTILS_1.0+0x228>  // b.none
    cfc0:	mov	w0, #0x16                  	// #22
    cfc4:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    cfc8:	str	xzr, [sp, #40]
    cfcc:	b	d1f8 <elf32_newphdr@@ELFUTILS_1.0+0x450>
    cfd0:	ldr	x0, [sp, #24]
    cfd4:	add	x0, x0, #0xd8
    cfd8:	str	x0, [sp, #32]
    cfdc:	ldr	x1, [sp, #16]
    cfe0:	mov	x0, #0xfffe                	// #65534
    cfe4:	cmp	x1, x0
    cfe8:	cset	w0, hi  // hi = pmore
    cfec:	and	w0, w0, #0xff
    cff0:	and	x0, x0, #0xff
    cff4:	cmp	x0, #0x0
    cff8:	b.eq	d02c <elf32_newphdr@@ELFUTILS_1.0+0x284>  // b.none
    cffc:	ldr	x0, [sp, #32]
    d000:	ldr	x0, [x0, #144]
    d004:	cmp	x0, #0x0
    d008:	cset	w0, eq  // eq = none
    d00c:	and	w0, w0, #0xff
    d010:	and	x0, x0, #0xff
    d014:	cmp	x0, #0x0
    d018:	b.eq	d02c <elf32_newphdr@@ELFUTILS_1.0+0x284>  // b.none
    d01c:	mov	w0, #0x20                  	// #32
    d020:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    d024:	str	xzr, [sp, #40]
    d028:	b	d1f8 <elf32_newphdr@@ELFUTILS_1.0+0x450>
    d02c:	ldr	x0, [sp, #24]
    d030:	ldr	x2, [x0, #88]
    d034:	ldr	x0, [sp, #16]
    d038:	lsl	x0, x0, #5
    d03c:	mov	x1, x0
    d040:	mov	x0, x2
    d044:	bl	31e0 <realloc@plt>
    d048:	str	x0, [sp, #40]
    d04c:	ldr	x0, [sp, #40]
    d050:	cmp	x0, #0x0
    d054:	b.ne	d064 <elf32_newphdr@@ELFUTILS_1.0+0x2bc>  // b.any
    d058:	mov	w0, #0x8                   	// #8
    d05c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    d060:	b	d1f8 <elf32_newphdr@@ELFUTILS_1.0+0x450>
    d064:	ldr	x0, [sp, #24]
    d068:	ldr	x1, [sp, #40]
    d06c:	str	x1, [x0, #88]
    d070:	ldr	x1, [sp, #16]
    d074:	mov	x0, #0xfffe                	// #65534
    d078:	cmp	x1, x0
    d07c:	b.ls	d104 <elf32_newphdr@@ELFUTILS_1.0+0x35c>  // b.plast
    d080:	ldr	x0, [sp, #24]
    d084:	ldr	w0, [x0, #200]
    d088:	cmp	w0, #0x0
    d08c:	b.ne	d0cc <elf32_newphdr@@ELFUTILS_1.0+0x324>  // b.any
    d090:	ldr	x0, [sp, #24]
    d094:	ldr	w0, [x0, #204]
    d098:	cmp	w0, #0x0
    d09c:	b.ne	d0c0 <elf32_newphdr@@ELFUTILS_1.0+0x318>  // b.any
    d0a0:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    d0a4:	add	x3, x0, #0x620
    d0a8:	mov	w2, #0x97                  	// #151
    d0ac:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    d0b0:	add	x1, x0, #0x580
    d0b4:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    d0b8:	add	x0, x0, #0x590
    d0bc:	bl	33d0 <__assert_fail@plt>
    d0c0:	ldr	x0, [sp, #24]
    d0c4:	mov	w1, #0x1                   	// #1
    d0c8:	str	w1, [x0, #200]
    d0cc:	ldr	x0, [sp, #32]
    d0d0:	ldr	x0, [x0, #144]
    d0d4:	ldr	x1, [sp, #16]
    d0d8:	str	w1, [x0, #28]
    d0dc:	ldr	x0, [sp, #32]
    d0e0:	ldr	w0, [x0, #152]
    d0e4:	orr	w1, w0, #0x1
    d0e8:	ldr	x0, [sp, #32]
    d0ec:	str	w1, [x0, #152]
    d0f0:	ldr	x0, [sp, #24]
    d0f4:	ldr	x0, [x0, #72]
    d0f8:	mov	w1, #0xffffffff            	// #-1
    d0fc:	strh	w1, [x0, #44]
    d100:	b	d118 <elf32_newphdr@@ELFUTILS_1.0+0x370>
    d104:	ldr	x0, [sp, #24]
    d108:	ldr	x0, [x0, #72]
    d10c:	ldr	x1, [sp, #16]
    d110:	and	w1, w1, #0xffff
    d114:	strh	w1, [x0, #44]
    d118:	ldr	x0, [sp, #16]
    d11c:	lsl	x0, x0, #5
    d120:	mov	x2, x0
    d124:	mov	w1, #0x0                   	// #0
    d128:	ldr	x0, [sp, #40]
    d12c:	bl	3180 <memset@plt>
    d130:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    d134:	add	x0, x0, #0x3d0
    d138:	ldr	x1, [x0, #48]
    d13c:	ldr	x0, [sp, #24]
    d140:	ldr	x0, [x0, #72]
    d144:	and	w1, w1, #0xffff
    d148:	strh	w1, [x0, #42]
    d14c:	ldr	x0, [sp, #24]
    d150:	ldr	w1, [x0, #120]
    d154:	mov	w0, #0x81                  	// #129
    d158:	orr	w1, w1, w0
    d15c:	ldr	x0, [sp, #24]
    d160:	str	w1, [x0, #120]
    d164:	ldr	x0, [sp, #24]
    d168:	ldr	w0, [x0, #56]
    d16c:	orr	w1, w0, #0x1
    d170:	ldr	x0, [sp, #24]
    d174:	str	w1, [x0, #56]
    d178:	b	d1f8 <elf32_newphdr@@ELFUTILS_1.0+0x450>
    d17c:	ldr	x0, [sp, #24]
    d180:	ldr	x0, [x0, #72]
    d184:	ldrh	w0, [x0, #42]
    d188:	and	x1, x0, #0xffff
    d18c:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    d190:	add	x0, x0, #0x3d0
    d194:	ldr	x0, [x0, #48]
    d198:	cmp	x1, x0
    d19c:	b.eq	d1c0 <elf32_newphdr@@ELFUTILS_1.0+0x418>  // b.none
    d1a0:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    d1a4:	add	x3, x0, #0x620
    d1a8:	mov	w2, #0xb2                  	// #178
    d1ac:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    d1b0:	add	x1, x0, #0x580
    d1b4:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    d1b8:	add	x0, x0, #0x5c0
    d1bc:	bl	33d0 <__assert_fail@plt>
    d1c0:	ldr	x0, [sp, #24]
    d1c4:	ldr	w0, [x0, #120]
    d1c8:	orr	w1, w0, #0x1
    d1cc:	ldr	x0, [sp, #24]
    d1d0:	str	w1, [x0, #120]
    d1d4:	ldr	x0, [sp, #24]
    d1d8:	ldr	x0, [x0, #88]
    d1dc:	str	x0, [sp, #40]
    d1e0:	ldr	x0, [sp, #16]
    d1e4:	lsl	x0, x0, #5
    d1e8:	mov	x2, x0
    d1ec:	mov	w1, #0x0                   	// #0
    d1f0:	ldr	x0, [sp, #40]
    d1f4:	bl	3180 <memset@plt>
    d1f8:	ldr	x0, [sp, #40]
    d1fc:	ldp	x29, x30, [sp], #48
    d200:	ret

000000000000d204 <elf64_newphdr@@ELFUTILS_1.0>:
    d204:	stp	x29, x30, [sp, #-48]!
    d208:	mov	x29, sp
    d20c:	str	x0, [sp, #24]
    d210:	str	x1, [sp, #16]
    d214:	ldr	x0, [sp, #24]
    d218:	cmp	x0, #0x0
    d21c:	b.ne	d228 <elf64_newphdr@@ELFUTILS_1.0+0x24>  // b.any
    d220:	mov	x0, #0x0                   	// #0
    d224:	b	d688 <elf64_newphdr@@ELFUTILS_1.0+0x484>
    d228:	ldr	x0, [sp, #24]
    d22c:	ldr	w0, [x0, #24]
    d230:	cmp	w0, #0x3
    d234:	cset	w0, ne  // ne = any
    d238:	and	w0, w0, #0xff
    d23c:	and	x0, x0, #0xff
    d240:	cmp	x0, #0x0
    d244:	b.eq	d258 <elf64_newphdr@@ELFUTILS_1.0+0x54>  // b.none
    d248:	mov	w0, #0x4                   	// #4
    d24c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    d250:	mov	x0, #0x0                   	// #0
    d254:	b	d688 <elf64_newphdr@@ELFUTILS_1.0+0x484>
    d258:	ldr	x0, [sp, #16]
    d25c:	mov	w0, w0
    d260:	ldr	x1, [sp, #16]
    d264:	cmp	x1, x0
    d268:	cset	w0, ne  // ne = any
    d26c:	and	w0, w0, #0xff
    d270:	and	x0, x0, #0xff
    d274:	cmp	x0, #0x0
    d278:	b.eq	d28c <elf64_newphdr@@ELFUTILS_1.0+0x88>  // b.none
    d27c:	mov	w0, #0x17                  	// #23
    d280:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    d284:	mov	x0, #0x0                   	// #0
    d288:	b	d688 <elf64_newphdr@@ELFUTILS_1.0+0x484>
    d28c:	ldr	x0, [sp, #24]
    d290:	ldr	w0, [x0, #32]
    d294:	cmp	w0, #0x0
    d298:	b.ne	d2ac <elf64_newphdr@@ELFUTILS_1.0+0xa8>  // b.any
    d29c:	ldr	x0, [sp, #24]
    d2a0:	mov	w1, #0x2                   	// #2
    d2a4:	str	w1, [x0, #32]
    d2a8:	b	d2dc <elf64_newphdr@@ELFUTILS_1.0+0xd8>
    d2ac:	ldr	x0, [sp, #24]
    d2b0:	ldr	w0, [x0, #32]
    d2b4:	cmp	w0, #0x2
    d2b8:	cset	w0, ne  // ne = any
    d2bc:	and	w0, w0, #0xff
    d2c0:	and	x0, x0, #0xff
    d2c4:	cmp	x0, #0x0
    d2c8:	b.eq	d2dc <elf64_newphdr@@ELFUTILS_1.0+0xd8>  // b.none
    d2cc:	mov	w0, #0x15                  	// #21
    d2d0:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    d2d4:	str	xzr, [sp, #40]
    d2d8:	b	d684 <elf64_newphdr@@ELFUTILS_1.0+0x480>
    d2dc:	ldr	x0, [sp, #24]
    d2e0:	ldr	x0, [x0, #72]
    d2e4:	cmp	x0, #0x0
    d2e8:	cset	w0, eq  // eq = none
    d2ec:	and	w0, w0, #0xff
    d2f0:	and	x0, x0, #0xff
    d2f4:	cmp	x0, #0x0
    d2f8:	b.eq	d30c <elf64_newphdr@@ELFUTILS_1.0+0x108>  // b.none
    d2fc:	mov	w0, #0x1a                  	// #26
    d300:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    d304:	str	xzr, [sp, #40]
    d308:	b	d684 <elf64_newphdr@@ELFUTILS_1.0+0x480>
    d30c:	ldr	x0, [sp, #16]
    d310:	cmp	x0, #0x0
    d314:	b.ne	d3c0 <elf64_newphdr@@ELFUTILS_1.0+0x1bc>  // b.any
    d318:	ldr	x0, [sp, #24]
    d31c:	ldr	x0, [x0, #88]
    d320:	cmp	x0, #0x0
    d324:	b.eq	d3b8 <elf64_newphdr@@ELFUTILS_1.0+0x1b4>  // b.none
    d328:	ldr	x0, [sp, #24]
    d32c:	ldr	w0, [x0, #120]
    d330:	and	w0, w0, #0x80
    d334:	cmp	w0, #0x0
    d338:	b.eq	d348 <elf64_newphdr@@ELFUTILS_1.0+0x144>  // b.none
    d33c:	ldr	x0, [sp, #24]
    d340:	ldr	x0, [x0, #88]
    d344:	bl	32a0 <free@plt>
    d348:	ldr	x0, [sp, #24]
    d34c:	str	xzr, [x0, #88]
    d350:	ldr	x0, [sp, #24]
    d354:	ldr	x0, [x0, #72]
    d358:	strh	wzr, [x0, #56]
    d35c:	ldr	x0, [sp, #24]
    d360:	ldr	w0, [x0, #200]
    d364:	cmp	w0, #0x0
    d368:	b.eq	d378 <elf64_newphdr@@ELFUTILS_1.0+0x174>  // b.none
    d36c:	ldr	x0, [sp, #24]
    d370:	ldr	x0, [x0, #360]
    d374:	str	wzr, [x0, #44]
    d378:	ldr	x0, [sp, #24]
    d37c:	ldr	x0, [x0, #72]
    d380:	mov	w1, #0x38                  	// #56
    d384:	strh	w1, [x0, #54]
    d388:	ldr	x0, [sp, #24]
    d38c:	ldr	w0, [x0, #120]
    d390:	orr	w1, w0, #0x1
    d394:	ldr	x0, [sp, #24]
    d398:	str	w1, [x0, #120]
    d39c:	ldr	x0, [sp, #24]
    d3a0:	ldr	w0, [x0, #56]
    d3a4:	orr	w1, w0, #0x1
    d3a8:	ldr	x0, [sp, #24]
    d3ac:	str	w1, [x0, #56]
    d3b0:	mov	w0, #0x0                   	// #0
    d3b4:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    d3b8:	str	xzr, [sp, #40]
    d3bc:	b	d684 <elf64_newphdr@@ELFUTILS_1.0+0x480>
    d3c0:	ldr	x0, [sp, #24]
    d3c4:	ldr	x0, [x0, #72]
    d3c8:	ldrh	w0, [x0, #56]
    d3cc:	and	x0, x0, #0xffff
    d3d0:	ldr	x1, [sp, #16]
    d3d4:	cmp	x1, x0
    d3d8:	b.ne	d3fc <elf64_newphdr@@ELFUTILS_1.0+0x1f8>  // b.any
    d3dc:	ldr	x1, [sp, #16]
    d3e0:	mov	x0, #0xffff                	// #65535
    d3e4:	cmp	x1, x0
    d3e8:	b.eq	d3fc <elf64_newphdr@@ELFUTILS_1.0+0x1f8>  // b.none
    d3ec:	ldr	x0, [sp, #24]
    d3f0:	ldr	x0, [x0, #88]
    d3f4:	cmp	x0, #0x0
    d3f8:	b.ne	d5fc <elf64_newphdr@@ELFUTILS_1.0+0x3f8>  // b.any
    d3fc:	ldr	x1, [sp, #16]
    d400:	mov	x0, #0x2492                	// #9362
    d404:	movk	x0, #0x9249, lsl #16
    d408:	movk	x0, #0x4924, lsl #32
    d40c:	movk	x0, #0x492, lsl #48
    d410:	cmp	x1, x0
    d414:	cset	w0, hi  // hi = pmore
    d418:	and	w0, w0, #0xff
    d41c:	and	x0, x0, #0xff
    d420:	cmp	x0, #0x0
    d424:	b.eq	d438 <elf64_newphdr@@ELFUTILS_1.0+0x234>  // b.none
    d428:	mov	w0, #0x16                  	// #22
    d42c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    d430:	str	xzr, [sp, #40]
    d434:	b	d684 <elf64_newphdr@@ELFUTILS_1.0+0x480>
    d438:	ldr	x0, [sp, #24]
    d43c:	add	x0, x0, #0xd8
    d440:	str	x0, [sp, #32]
    d444:	ldr	x1, [sp, #16]
    d448:	mov	x0, #0xfffe                	// #65534
    d44c:	cmp	x1, x0
    d450:	cset	w0, hi  // hi = pmore
    d454:	and	w0, w0, #0xff
    d458:	and	x0, x0, #0xff
    d45c:	cmp	x0, #0x0
    d460:	b.eq	d494 <elf64_newphdr@@ELFUTILS_1.0+0x290>  // b.none
    d464:	ldr	x0, [sp, #32]
    d468:	ldr	x0, [x0, #144]
    d46c:	cmp	x0, #0x0
    d470:	cset	w0, eq  // eq = none
    d474:	and	w0, w0, #0xff
    d478:	and	x0, x0, #0xff
    d47c:	cmp	x0, #0x0
    d480:	b.eq	d494 <elf64_newphdr@@ELFUTILS_1.0+0x290>  // b.none
    d484:	mov	w0, #0x20                  	// #32
    d488:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    d48c:	str	xzr, [sp, #40]
    d490:	b	d684 <elf64_newphdr@@ELFUTILS_1.0+0x480>
    d494:	ldr	x0, [sp, #24]
    d498:	ldr	x2, [x0, #88]
    d49c:	ldr	x1, [sp, #16]
    d4a0:	mov	x0, x1
    d4a4:	lsl	x0, x0, #3
    d4a8:	sub	x0, x0, x1
    d4ac:	lsl	x0, x0, #3
    d4b0:	mov	x1, x0
    d4b4:	mov	x0, x2
    d4b8:	bl	31e0 <realloc@plt>
    d4bc:	str	x0, [sp, #40]
    d4c0:	ldr	x0, [sp, #40]
    d4c4:	cmp	x0, #0x0
    d4c8:	b.ne	d4d8 <elf64_newphdr@@ELFUTILS_1.0+0x2d4>  // b.any
    d4cc:	mov	w0, #0x8                   	// #8
    d4d0:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    d4d4:	b	d684 <elf64_newphdr@@ELFUTILS_1.0+0x480>
    d4d8:	ldr	x0, [sp, #24]
    d4dc:	ldr	x1, [sp, #40]
    d4e0:	str	x1, [x0, #88]
    d4e4:	ldr	x1, [sp, #16]
    d4e8:	mov	x0, #0xfffe                	// #65534
    d4ec:	cmp	x1, x0
    d4f0:	b.ls	d578 <elf64_newphdr@@ELFUTILS_1.0+0x374>  // b.plast
    d4f4:	ldr	x0, [sp, #24]
    d4f8:	ldr	w0, [x0, #200]
    d4fc:	cmp	w0, #0x0
    d500:	b.ne	d540 <elf64_newphdr@@ELFUTILS_1.0+0x33c>  // b.any
    d504:	ldr	x0, [sp, #24]
    d508:	ldr	w0, [x0, #204]
    d50c:	cmp	w0, #0x0
    d510:	b.ne	d534 <elf64_newphdr@@ELFUTILS_1.0+0x330>  // b.any
    d514:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    d518:	add	x3, x0, #0x6d0
    d51c:	mov	w2, #0x97                  	// #151
    d520:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    d524:	add	x1, x0, #0x630
    d528:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    d52c:	add	x0, x0, #0x640
    d530:	bl	33d0 <__assert_fail@plt>
    d534:	ldr	x0, [sp, #24]
    d538:	mov	w1, #0x1                   	// #1
    d53c:	str	w1, [x0, #200]
    d540:	ldr	x0, [sp, #32]
    d544:	ldr	x0, [x0, #144]
    d548:	ldr	x1, [sp, #16]
    d54c:	str	w1, [x0, #44]
    d550:	ldr	x0, [sp, #32]
    d554:	ldr	w0, [x0, #152]
    d558:	orr	w1, w0, #0x1
    d55c:	ldr	x0, [sp, #32]
    d560:	str	w1, [x0, #152]
    d564:	ldr	x0, [sp, #24]
    d568:	ldr	x0, [x0, #72]
    d56c:	mov	w1, #0xffffffff            	// #-1
    d570:	strh	w1, [x0, #56]
    d574:	b	d58c <elf64_newphdr@@ELFUTILS_1.0+0x388>
    d578:	ldr	x0, [sp, #24]
    d57c:	ldr	x0, [x0, #72]
    d580:	ldr	x1, [sp, #16]
    d584:	and	w1, w1, #0xffff
    d588:	strh	w1, [x0, #56]
    d58c:	ldr	x1, [sp, #16]
    d590:	mov	x0, x1
    d594:	lsl	x0, x0, #3
    d598:	sub	x0, x0, x1
    d59c:	lsl	x0, x0, #3
    d5a0:	mov	x2, x0
    d5a4:	mov	w1, #0x0                   	// #0
    d5a8:	ldr	x0, [sp, #40]
    d5ac:	bl	3180 <memset@plt>
    d5b0:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    d5b4:	add	x0, x0, #0x3d0
    d5b8:	ldr	x1, [x0, #264]
    d5bc:	ldr	x0, [sp, #24]
    d5c0:	ldr	x0, [x0, #72]
    d5c4:	and	w1, w1, #0xffff
    d5c8:	strh	w1, [x0, #54]
    d5cc:	ldr	x0, [sp, #24]
    d5d0:	ldr	w1, [x0, #120]
    d5d4:	mov	w0, #0x81                  	// #129
    d5d8:	orr	w1, w1, w0
    d5dc:	ldr	x0, [sp, #24]
    d5e0:	str	w1, [x0, #120]
    d5e4:	ldr	x0, [sp, #24]
    d5e8:	ldr	w0, [x0, #56]
    d5ec:	orr	w1, w0, #0x1
    d5f0:	ldr	x0, [sp, #24]
    d5f4:	str	w1, [x0, #56]
    d5f8:	b	d684 <elf64_newphdr@@ELFUTILS_1.0+0x480>
    d5fc:	ldr	x0, [sp, #24]
    d600:	ldr	x0, [x0, #72]
    d604:	ldrh	w0, [x0, #54]
    d608:	and	x1, x0, #0xffff
    d60c:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    d610:	add	x0, x0, #0x3d0
    d614:	ldr	x0, [x0, #264]
    d618:	cmp	x1, x0
    d61c:	b.eq	d640 <elf64_newphdr@@ELFUTILS_1.0+0x43c>  // b.none
    d620:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    d624:	add	x3, x0, #0x6d0
    d628:	mov	w2, #0xb2                  	// #178
    d62c:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    d630:	add	x1, x0, #0x630
    d634:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    d638:	add	x0, x0, #0x670
    d63c:	bl	33d0 <__assert_fail@plt>
    d640:	ldr	x0, [sp, #24]
    d644:	ldr	w0, [x0, #120]
    d648:	orr	w1, w0, #0x1
    d64c:	ldr	x0, [sp, #24]
    d650:	str	w1, [x0, #120]
    d654:	ldr	x0, [sp, #24]
    d658:	ldr	x0, [x0, #88]
    d65c:	str	x0, [sp, #40]
    d660:	ldr	x1, [sp, #16]
    d664:	mov	x0, x1
    d668:	lsl	x0, x0, #3
    d66c:	sub	x0, x0, x1
    d670:	lsl	x0, x0, #3
    d674:	mov	x2, x0
    d678:	mov	w1, #0x0                   	// #0
    d67c:	ldr	x0, [sp, #40]
    d680:	bl	3180 <memset@plt>
    d684:	ldr	x0, [sp, #40]
    d688:	ldp	x29, x30, [sp], #48
    d68c:	ret

000000000000d690 <gelf_newphdr@@ELFUTILS_1.0>:
    d690:	stp	x29, x30, [sp, #-32]!
    d694:	mov	x29, sp
    d698:	str	x0, [sp, #24]
    d69c:	str	x1, [sp, #16]
    d6a0:	ldr	x0, [sp, #24]
    d6a4:	ldr	w0, [x0, #32]
    d6a8:	cmp	w0, #0x1
    d6ac:	b.ne	d6c0 <gelf_newphdr@@ELFUTILS_1.0+0x30>  // b.any
    d6b0:	ldr	x1, [sp, #16]
    d6b4:	ldr	x0, [sp, #24]
    d6b8:	bl	cda8 <elf32_newphdr@@ELFUTILS_1.0>
    d6bc:	b	d6cc <gelf_newphdr@@ELFUTILS_1.0+0x3c>
    d6c0:	ldr	x1, [sp, #16]
    d6c4:	ldr	x0, [sp, #24]
    d6c8:	bl	d204 <elf64_newphdr@@ELFUTILS_1.0>
    d6cc:	ldp	x29, x30, [sp], #32
    d6d0:	ret

000000000000d6d4 <gelf_update_phdr@@ELFUTILS_1.0>:
    d6d4:	stp	x29, x30, [sp, #-96]!
    d6d8:	mov	x29, sp
    d6dc:	str	x0, [sp, #40]
    d6e0:	str	w1, [sp, #36]
    d6e4:	str	x2, [sp, #24]
    d6e8:	str	wzr, [sp, #92]
    d6ec:	ldr	x0, [sp, #40]
    d6f0:	cmp	x0, #0x0
    d6f4:	b.ne	d700 <gelf_update_phdr@@ELFUTILS_1.0+0x2c>  // b.any
    d6f8:	mov	w0, #0x0                   	// #0
    d6fc:	b	da60 <gelf_update_phdr@@ELFUTILS_1.0+0x38c>
    d700:	ldr	x0, [sp, #40]
    d704:	ldr	w0, [x0, #24]
    d708:	cmp	w0, #0x3
    d70c:	cset	w0, ne  // ne = any
    d710:	and	w0, w0, #0xff
    d714:	and	x0, x0, #0xff
    d718:	cmp	x0, #0x0
    d71c:	b.eq	d730 <gelf_update_phdr@@ELFUTILS_1.0+0x5c>  // b.none
    d720:	mov	w0, #0x4                   	// #4
    d724:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    d728:	mov	w0, #0x0                   	// #0
    d72c:	b	da60 <gelf_update_phdr@@ELFUTILS_1.0+0x38c>
    d730:	ldr	x0, [sp, #40]
    d734:	ldr	w0, [x0, #32]
    d738:	cmp	w0, #0x1
    d73c:	b.ne	d96c <gelf_update_phdr@@ELFUTILS_1.0+0x298>  // b.any
    d740:	ldr	x0, [sp, #40]
    d744:	ldr	x0, [x0, #88]
    d748:	str	x0, [sp, #80]
    d74c:	ldr	x0, [sp, #24]
    d750:	ldr	x1, [x0, #8]
    d754:	mov	x0, #0xffffffff            	// #4294967295
    d758:	cmp	x1, x0
    d75c:	cset	w0, hi  // hi = pmore
    d760:	and	w0, w0, #0xff
    d764:	and	x0, x0, #0xff
    d768:	cmp	x0, #0x0
    d76c:	b.ne	d824 <gelf_update_phdr@@ELFUTILS_1.0+0x150>  // b.any
    d770:	ldr	x0, [sp, #24]
    d774:	ldr	x1, [x0, #16]
    d778:	mov	x0, #0xffffffff            	// #4294967295
    d77c:	cmp	x1, x0
    d780:	cset	w0, hi  // hi = pmore
    d784:	and	w0, w0, #0xff
    d788:	and	x0, x0, #0xff
    d78c:	cmp	x0, #0x0
    d790:	b.ne	d824 <gelf_update_phdr@@ELFUTILS_1.0+0x150>  // b.any
    d794:	ldr	x0, [sp, #24]
    d798:	ldr	x1, [x0, #24]
    d79c:	mov	x0, #0xffffffff            	// #4294967295
    d7a0:	cmp	x1, x0
    d7a4:	cset	w0, hi  // hi = pmore
    d7a8:	and	w0, w0, #0xff
    d7ac:	and	x0, x0, #0xff
    d7b0:	cmp	x0, #0x0
    d7b4:	b.ne	d824 <gelf_update_phdr@@ELFUTILS_1.0+0x150>  // b.any
    d7b8:	ldr	x0, [sp, #24]
    d7bc:	ldr	x1, [x0, #32]
    d7c0:	mov	x0, #0xffffffff            	// #4294967295
    d7c4:	cmp	x1, x0
    d7c8:	cset	w0, hi  // hi = pmore
    d7cc:	and	w0, w0, #0xff
    d7d0:	and	x0, x0, #0xff
    d7d4:	cmp	x0, #0x0
    d7d8:	b.ne	d824 <gelf_update_phdr@@ELFUTILS_1.0+0x150>  // b.any
    d7dc:	ldr	x0, [sp, #24]
    d7e0:	ldr	x1, [x0, #40]
    d7e4:	mov	x0, #0xffffffff            	// #4294967295
    d7e8:	cmp	x1, x0
    d7ec:	cset	w0, hi  // hi = pmore
    d7f0:	and	w0, w0, #0xff
    d7f4:	and	x0, x0, #0xff
    d7f8:	cmp	x0, #0x0
    d7fc:	b.ne	d824 <gelf_update_phdr@@ELFUTILS_1.0+0x150>  // b.any
    d800:	ldr	x0, [sp, #24]
    d804:	ldr	x1, [x0, #48]
    d808:	mov	x0, #0xffffffff            	// #4294967295
    d80c:	cmp	x1, x0
    d810:	cset	w0, hi  // hi = pmore
    d814:	and	w0, w0, #0xff
    d818:	and	x0, x0, #0xff
    d81c:	cmp	x0, #0x0
    d820:	b.eq	d830 <gelf_update_phdr@@ELFUTILS_1.0+0x15c>  // b.none
    d824:	mov	w0, #0x21                  	// #33
    d828:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    d82c:	b	da5c <gelf_update_phdr@@ELFUTILS_1.0+0x388>
    d830:	ldr	x0, [sp, #80]
    d834:	cmp	x0, #0x0
    d838:	b.ne	d854 <gelf_update_phdr@@ELFUTILS_1.0+0x180>  // b.any
    d83c:	ldr	x0, [sp, #40]
    d840:	bl	b6ec <gelf_update_ehdr@@ELFUTILS_1.0+0x404>
    d844:	str	x0, [sp, #80]
    d848:	ldr	x0, [sp, #80]
    d84c:	cmp	x0, #0x0
    d850:	b.eq	da50 <gelf_update_phdr@@ELFUTILS_1.0+0x37c>  // b.none
    d854:	ldr	x0, [sp, #40]
    d858:	ldr	x0, [x0, #72]
    d85c:	ldrh	w0, [x0, #44]
    d860:	mov	w1, w0
    d864:	ldr	w0, [sp, #36]
    d868:	cmp	w0, w1
    d86c:	b.lt	d8bc <gelf_update_phdr@@ELFUTILS_1.0+0x1e8>  // b.tstop
    d870:	ldr	x0, [sp, #40]
    d874:	ldr	x0, [x0, #72]
    d878:	ldrh	w1, [x0, #44]
    d87c:	mov	w0, #0xffff                	// #65535
    d880:	cmp	w1, w0
    d884:	b.ne	d8b0 <gelf_update_phdr@@ELFUTILS_1.0+0x1dc>  // b.any
    d888:	add	x0, sp, #0x40
    d88c:	mov	x1, x0
    d890:	ldr	x0, [sp, #40]
    d894:	bl	1d2c0 <gelf_update_verdaux@@ELFUTILS_1.0+0xf4>
    d898:	cmp	w0, #0x0
    d89c:	b.ne	d8b0 <gelf_update_phdr@@ELFUTILS_1.0+0x1dc>  // b.any
    d8a0:	ldrsw	x1, [sp, #36]
    d8a4:	ldr	x0, [sp, #64]
    d8a8:	cmp	x1, x0
    d8ac:	b.cc	d8bc <gelf_update_phdr@@ELFUTILS_1.0+0x1e8>  // b.lo, b.ul, b.last
    d8b0:	mov	w0, #0x16                  	// #22
    d8b4:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    d8b8:	b	da5c <gelf_update_phdr@@ELFUTILS_1.0+0x388>
    d8bc:	ldrsw	x0, [sp, #36]
    d8c0:	lsl	x0, x0, #5
    d8c4:	ldr	x1, [sp, #80]
    d8c8:	add	x0, x1, x0
    d8cc:	str	x0, [sp, #80]
    d8d0:	ldr	x0, [sp, #24]
    d8d4:	ldr	w1, [x0]
    d8d8:	ldr	x0, [sp, #80]
    d8dc:	str	w1, [x0]
    d8e0:	ldr	x0, [sp, #24]
    d8e4:	ldr	x0, [x0, #8]
    d8e8:	mov	w1, w0
    d8ec:	ldr	x0, [sp, #80]
    d8f0:	str	w1, [x0, #4]
    d8f4:	ldr	x0, [sp, #24]
    d8f8:	ldr	x0, [x0, #16]
    d8fc:	mov	w1, w0
    d900:	ldr	x0, [sp, #80]
    d904:	str	w1, [x0, #8]
    d908:	ldr	x0, [sp, #24]
    d90c:	ldr	x0, [x0, #24]
    d910:	mov	w1, w0
    d914:	ldr	x0, [sp, #80]
    d918:	str	w1, [x0, #12]
    d91c:	ldr	x0, [sp, #24]
    d920:	ldr	x0, [x0, #32]
    d924:	mov	w1, w0
    d928:	ldr	x0, [sp, #80]
    d92c:	str	w1, [x0, #16]
    d930:	ldr	x0, [sp, #24]
    d934:	ldr	x0, [x0, #40]
    d938:	mov	w1, w0
    d93c:	ldr	x0, [sp, #80]
    d940:	str	w1, [x0, #20]
    d944:	ldr	x0, [sp, #24]
    d948:	ldr	w1, [x0, #4]
    d94c:	ldr	x0, [sp, #80]
    d950:	str	w1, [x0, #24]
    d954:	ldr	x0, [sp, #24]
    d958:	ldr	x0, [x0, #48]
    d95c:	mov	w1, w0
    d960:	ldr	x0, [sp, #80]
    d964:	str	w1, [x0, #28]
    d968:	b	da30 <gelf_update_phdr@@ELFUTILS_1.0+0x35c>
    d96c:	ldr	x0, [sp, #40]
    d970:	ldr	x0, [x0, #88]
    d974:	str	x0, [sp, #72]
    d978:	ldr	x0, [sp, #72]
    d97c:	cmp	x0, #0x0
    d980:	b.ne	d99c <gelf_update_phdr@@ELFUTILS_1.0+0x2c8>  // b.any
    d984:	ldr	x0, [sp, #40]
    d988:	bl	c104 <elf32_getphdr@@ELFUTILS_1.0+0x264>
    d98c:	str	x0, [sp, #72]
    d990:	ldr	x0, [sp, #72]
    d994:	cmp	x0, #0x0
    d998:	b.eq	da58 <gelf_update_phdr@@ELFUTILS_1.0+0x384>  // b.none
    d99c:	ldr	x0, [sp, #40]
    d9a0:	ldr	x0, [x0, #72]
    d9a4:	ldrh	w0, [x0, #56]
    d9a8:	mov	w1, w0
    d9ac:	ldr	w0, [sp, #36]
    d9b0:	cmp	w0, w1
    d9b4:	b.lt	da04 <gelf_update_phdr@@ELFUTILS_1.0+0x330>  // b.tstop
    d9b8:	ldr	x0, [sp, #40]
    d9bc:	ldr	x0, [x0, #72]
    d9c0:	ldrh	w1, [x0, #56]
    d9c4:	mov	w0, #0xffff                	// #65535
    d9c8:	cmp	w1, w0
    d9cc:	b.ne	d9f8 <gelf_update_phdr@@ELFUTILS_1.0+0x324>  // b.any
    d9d0:	add	x0, sp, #0x38
    d9d4:	mov	x1, x0
    d9d8:	ldr	x0, [sp, #40]
    d9dc:	bl	1d2c0 <gelf_update_verdaux@@ELFUTILS_1.0+0xf4>
    d9e0:	cmp	w0, #0x0
    d9e4:	b.ne	d9f8 <gelf_update_phdr@@ELFUTILS_1.0+0x324>  // b.any
    d9e8:	ldrsw	x1, [sp, #36]
    d9ec:	ldr	x0, [sp, #56]
    d9f0:	cmp	x1, x0
    d9f4:	b.cc	da04 <gelf_update_phdr@@ELFUTILS_1.0+0x330>  // b.lo, b.ul, b.last
    d9f8:	mov	w0, #0x16                  	// #22
    d9fc:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    da00:	b	da5c <gelf_update_phdr@@ELFUTILS_1.0+0x388>
    da04:	ldrsw	x1, [sp, #36]
    da08:	mov	x0, x1
    da0c:	lsl	x0, x0, #3
    da10:	sub	x0, x0, x1
    da14:	lsl	x0, x0, #3
    da18:	mov	x1, x0
    da1c:	ldr	x0, [sp, #72]
    da20:	add	x0, x0, x1
    da24:	mov	x2, #0x38                  	// #56
    da28:	ldr	x1, [sp, #24]
    da2c:	bl	30a0 <memcpy@plt>
    da30:	ldr	x0, [sp, #40]
    da34:	ldr	w0, [x0, #120]
    da38:	orr	w1, w0, #0x1
    da3c:	ldr	x0, [sp, #40]
    da40:	str	w1, [x0, #120]
    da44:	mov	w0, #0x1                   	// #1
    da48:	str	w0, [sp, #92]
    da4c:	b	da5c <gelf_update_phdr@@ELFUTILS_1.0+0x388>
    da50:	nop
    da54:	b	da5c <gelf_update_phdr@@ELFUTILS_1.0+0x388>
    da58:	nop
    da5c:	ldr	w0, [sp, #92]
    da60:	ldp	x29, x30, [sp], #96
    da64:	ret

000000000000da68 <elf_getarhdr@@ELFUTILS_1.0>:
    da68:	stp	x29, x30, [sp, #-48]!
    da6c:	mov	x29, sp
    da70:	str	x0, [sp, #24]
    da74:	ldr	x0, [sp, #24]
    da78:	cmp	x0, #0x0
    da7c:	b.ne	da88 <elf_getarhdr@@ELFUTILS_1.0+0x20>  // b.any
    da80:	mov	x0, #0x0                   	// #0
    da84:	b	db28 <elf_getarhdr@@ELFUTILS_1.0+0xc0>
    da88:	ldr	x0, [sp, #24]
    da8c:	ldr	x0, [x0, #8]
    da90:	str	x0, [sp, #40]
    da94:	ldr	x0, [sp, #40]
    da98:	cmp	x0, #0x0
    da9c:	b.ne	dab0 <elf_getarhdr@@ELFUTILS_1.0+0x48>  // b.any
    daa0:	mov	w0, #0xb                   	// #11
    daa4:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    daa8:	mov	x0, #0x0                   	// #0
    daac:	b	db28 <elf_getarhdr@@ELFUTILS_1.0+0xc0>
    dab0:	ldr	x0, [sp, #40]
    dab4:	ldr	x0, [x0, #120]
    dab8:	cmp	x0, #0x0
    dabc:	b.ne	daf0 <elf_getarhdr@@ELFUTILS_1.0+0x88>  // b.any
    dac0:	ldr	x0, [sp, #40]
    dac4:	bl	5b10 <elf_fill@@ELFUTILS_1.0+0x2144>
    dac8:	cmp	w0, #0x0
    dacc:	b.eq	daf0 <elf_getarhdr@@ELFUTILS_1.0+0x88>  // b.none
    dad0:	ldr	x0, [sp, #40]
    dad4:	bl	5b10 <elf_fill@@ELFUTILS_1.0+0x2144>
    dad8:	str	w0, [sp, #36]
    dadc:	ldr	w0, [sp, #36]
    dae0:	cmp	w0, #0x0
    dae4:	b.eq	daf0 <elf_getarhdr@@ELFUTILS_1.0+0x88>  // b.none
    dae8:	mov	x0, #0x0                   	// #0
    daec:	b	db28 <elf_getarhdr@@ELFUTILS_1.0+0xc0>
    daf0:	ldr	x0, [sp, #40]
    daf4:	ldr	w0, [x0, #24]
    daf8:	cmp	w0, #0x1
    dafc:	b.eq	db20 <elf_getarhdr@@ELFUTILS_1.0+0xb8>  // b.none
    db00:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    db04:	add	x3, x0, #0x710
    db08:	mov	w2, #0x46                  	// #70
    db0c:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    db10:	add	x1, x0, #0x6e0
    db14:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    db18:	add	x0, x0, #0x6f0
    db1c:	bl	33d0 <__assert_fail@plt>
    db20:	ldr	x0, [sp, #40]
    db24:	add	x0, x0, #0x78
    db28:	ldp	x29, x30, [sp], #48
    db2c:	ret
    db30:	sub	sp, sp, #0x10
    db34:	str	w0, [sp, #12]
    db38:	ldr	w0, [sp, #12]
    db3c:	rev	w0, w0
    db40:	add	sp, sp, #0x10
    db44:	ret
    db48:	sub	sp, sp, #0x10
    db4c:	str	x0, [sp, #8]
    db50:	ldr	x0, [sp, #8]
    db54:	rev	x0, x0
    db58:	add	sp, sp, #0x10
    db5c:	ret
    db60:	stp	x29, x30, [sp, #-80]!
    db64:	mov	x29, sp
    db68:	str	w0, [sp, #44]
    db6c:	str	x1, [sp, #32]
    db70:	str	x2, [sp, #24]
    db74:	str	x3, [sp, #16]
    db78:	str	xzr, [sp, #72]
    db7c:	ldr	x0, [sp, #72]
    db80:	ldr	x1, [sp, #32]
    db84:	add	x4, x1, x0
    db88:	ldr	x0, [sp, #72]
    db8c:	ldr	x1, [sp, #24]
    db90:	sub	x2, x1, x0
    db94:	ldr	x1, [sp, #16]
    db98:	ldr	x0, [sp, #72]
    db9c:	add	x0, x1, x0
    dba0:	mov	x3, x0
    dba4:	mov	x1, x4
    dba8:	ldr	w0, [sp, #44]
    dbac:	bl	3300 <pread@plt>
    dbb0:	str	x0, [sp, #64]
    dbb4:	ldr	x0, [sp, #64]
    dbb8:	cmn	x0, #0x1
    dbbc:	b.ne	dbd0 <elf_getarhdr@@ELFUTILS_1.0+0x168>  // b.any
    dbc0:	bl	33e0 <__errno_location@plt>
    dbc4:	ldr	w0, [x0]
    dbc8:	cmp	w0, #0x4
    dbcc:	b.eq	db7c <elf_getarhdr@@ELFUTILS_1.0+0x114>  // b.none
    dbd0:	ldr	x0, [sp, #64]
    dbd4:	str	x0, [sp, #56]
    dbd8:	ldr	x0, [sp, #56]
    dbdc:	cmp	x0, #0x0
    dbe0:	b.gt	dc00 <elf_getarhdr@@ELFUTILS_1.0+0x198>
    dbe4:	ldr	x0, [sp, #56]
    dbe8:	cmp	x0, #0x0
    dbec:	b.ge	dbf8 <elf_getarhdr@@ELFUTILS_1.0+0x190>  // b.tcont
    dbf0:	ldr	x0, [sp, #56]
    dbf4:	b	dc24 <elf_getarhdr@@ELFUTILS_1.0+0x1bc>
    dbf8:	ldr	x0, [sp, #72]
    dbfc:	b	dc24 <elf_getarhdr@@ELFUTILS_1.0+0x1bc>
    dc00:	ldr	x1, [sp, #72]
    dc04:	ldr	x0, [sp, #56]
    dc08:	add	x0, x1, x0
    dc0c:	str	x0, [sp, #72]
    dc10:	ldr	x0, [sp, #72]
    dc14:	ldr	x1, [sp, #24]
    dc18:	cmp	x1, x0
    dc1c:	b.hi	db7c <elf_getarhdr@@ELFUTILS_1.0+0x114>  // b.pmore
    dc20:	ldr	x0, [sp, #72]
    dc24:	ldp	x29, x30, [sp], #80
    dc28:	ret
    dc2c:	sub	sp, sp, #0x30
    dc30:	str	x0, [sp, #8]
    dc34:	ldr	x0, [sp, #8]
    dc38:	str	x0, [sp, #40]
    dc3c:	ldr	x0, [sp, #40]
    dc40:	ldrb	w0, [x0]
    dc44:	and	x0, x0, #0xff
    dc48:	str	x0, [sp, #32]
    dc4c:	ldr	x0, [sp, #32]
    dc50:	cmp	x0, #0x0
    dc54:	b.eq	dd98 <elf_getarhdr@@ELFUTILS_1.0+0x330>  // b.none
    dc58:	ldr	x0, [sp, #40]
    dc5c:	add	x0, x0, #0x1
    dc60:	ldrb	w0, [x0]
    dc64:	cmp	w0, #0x0
    dc68:	b.eq	dd98 <elf_getarhdr@@ELFUTILS_1.0+0x330>  // b.none
    dc6c:	ldr	x0, [sp, #32]
    dc70:	lsl	x1, x0, #4
    dc74:	ldr	x0, [sp, #40]
    dc78:	add	x0, x0, #0x1
    dc7c:	ldrb	w0, [x0]
    dc80:	and	x0, x0, #0xff
    dc84:	add	x0, x1, x0
    dc88:	str	x0, [sp, #32]
    dc8c:	ldr	x0, [sp, #40]
    dc90:	add	x0, x0, #0x2
    dc94:	ldrb	w0, [x0]
    dc98:	cmp	w0, #0x0
    dc9c:	b.eq	dd98 <elf_getarhdr@@ELFUTILS_1.0+0x330>  // b.none
    dca0:	ldr	x0, [sp, #32]
    dca4:	lsl	x1, x0, #4
    dca8:	ldr	x0, [sp, #40]
    dcac:	add	x0, x0, #0x2
    dcb0:	ldrb	w0, [x0]
    dcb4:	and	x0, x0, #0xff
    dcb8:	add	x0, x1, x0
    dcbc:	str	x0, [sp, #32]
    dcc0:	ldr	x0, [sp, #40]
    dcc4:	add	x0, x0, #0x3
    dcc8:	ldrb	w0, [x0]
    dccc:	cmp	w0, #0x0
    dcd0:	b.eq	dd98 <elf_getarhdr@@ELFUTILS_1.0+0x330>  // b.none
    dcd4:	ldr	x0, [sp, #32]
    dcd8:	lsl	x1, x0, #4
    dcdc:	ldr	x0, [sp, #40]
    dce0:	add	x0, x0, #0x3
    dce4:	ldrb	w0, [x0]
    dce8:	and	x0, x0, #0xff
    dcec:	add	x0, x1, x0
    dcf0:	str	x0, [sp, #32]
    dcf4:	ldr	x0, [sp, #40]
    dcf8:	add	x0, x0, #0x4
    dcfc:	ldrb	w0, [x0]
    dd00:	cmp	w0, #0x0
    dd04:	b.eq	dd98 <elf_getarhdr@@ELFUTILS_1.0+0x330>  // b.none
    dd08:	ldr	x0, [sp, #32]
    dd0c:	lsl	x1, x0, #4
    dd10:	ldr	x0, [sp, #40]
    dd14:	add	x0, x0, #0x4
    dd18:	ldrb	w0, [x0]
    dd1c:	and	x0, x0, #0xff
    dd20:	add	x0, x1, x0
    dd24:	str	x0, [sp, #32]
    dd28:	ldr	x0, [sp, #40]
    dd2c:	add	x0, x0, #0x5
    dd30:	str	x0, [sp, #40]
    dd34:	b	dd7c <elf_getarhdr@@ELFUTILS_1.0+0x314>
    dd38:	ldr	x0, [sp, #32]
    dd3c:	lsl	x1, x0, #4
    dd40:	ldr	x0, [sp, #40]
    dd44:	add	x2, x0, #0x1
    dd48:	str	x2, [sp, #40]
    dd4c:	ldrb	w0, [x0]
    dd50:	and	x0, x0, #0xff
    dd54:	add	x0, x1, x0
    dd58:	str	x0, [sp, #32]
    dd5c:	ldr	x0, [sp, #32]
    dd60:	and	x0, x0, #0xf0000000
    dd64:	str	x0, [sp, #24]
    dd68:	ldr	x0, [sp, #24]
    dd6c:	lsr	x0, x0, #24
    dd70:	ldr	x1, [sp, #32]
    dd74:	eor	x0, x1, x0
    dd78:	str	x0, [sp, #32]
    dd7c:	ldr	x0, [sp, #40]
    dd80:	ldrb	w0, [x0]
    dd84:	cmp	w0, #0x0
    dd88:	b.ne	dd38 <elf_getarhdr@@ELFUTILS_1.0+0x2d0>  // b.any
    dd8c:	ldr	x0, [sp, #32]
    dd90:	and	x0, x0, #0xfffffff
    dd94:	str	x0, [sp, #32]
    dd98:	ldr	x0, [sp, #32]
    dd9c:	add	sp, sp, #0x30
    dda0:	ret
    dda4:	stp	x29, x30, [sp, #-64]!
    dda8:	mov	x29, sp
    ddac:	str	x0, [sp, #40]
    ddb0:	str	x1, [sp, #32]
    ddb4:	str	x2, [sp, #24]
    ddb8:	strb	w3, [sp, #23]
    ddbc:	ldrb	w0, [sp, #23]
    ddc0:	cmp	w0, #0x0
    ddc4:	b.eq	ddd0 <elf_getarhdr@@ELFUTILS_1.0+0x368>  // b.none
    ddc8:	mov	x0, #0x8                   	// #8
    ddcc:	b	ddd4 <elf_getarhdr@@ELFUTILS_1.0+0x36c>
    ddd0:	mov	x0, #0x4                   	// #4
    ddd4:	str	x0, [sp, #56]
    ddd8:	ldr	x0, [sp, #32]
    dddc:	ldr	x0, [x0]
    dde0:	cmp	x0, #0x0
    dde4:	b.eq	de08 <elf_getarhdr@@ELFUTILS_1.0+0x3a0>  // b.none
    dde8:	ldr	x0, [sp, #32]
    ddec:	ldr	x1, [x0]
    ddf0:	ldr	x0, [sp, #24]
    ddf4:	ldr	x0, [x0]
    ddf8:	add	x0, x1, x0
    ddfc:	ldr	x0, [x0]
    de00:	str	x0, [sp, #48]
    de04:	b	de4c <elf_getarhdr@@ELFUTILS_1.0+0x3e4>
    de08:	ldr	x0, [sp, #32]
    de0c:	ldr	w4, [x0, #36]
    de10:	ldr	x0, [sp, #24]
    de14:	ldr	x0, [x0]
    de18:	mov	x1, x0
    de1c:	add	x0, sp, #0x30
    de20:	mov	x3, x1
    de24:	ldr	x2, [sp, #56]
    de28:	mov	x1, x0
    de2c:	mov	w0, w4
    de30:	bl	db60 <elf_getarhdr@@ELFUTILS_1.0+0xf8>
    de34:	mov	x1, x0
    de38:	ldr	x0, [sp, #56]
    de3c:	cmp	x1, x0
    de40:	b.eq	de4c <elf_getarhdr@@ELFUTILS_1.0+0x3e4>  // b.none
    de44:	mov	w0, #0xffffffff            	// #-1
    de48:	b	de94 <elf_getarhdr@@ELFUTILS_1.0+0x42c>
    de4c:	ldr	x0, [sp, #24]
    de50:	ldr	x1, [x0]
    de54:	ldr	x0, [sp, #56]
    de58:	add	x1, x1, x0
    de5c:	ldr	x0, [sp, #24]
    de60:	str	x1, [x0]
    de64:	ldrb	w0, [sp, #23]
    de68:	cmp	w0, #0x0
    de6c:	b.eq	de7c <elf_getarhdr@@ELFUTILS_1.0+0x414>  // b.none
    de70:	ldr	x0, [sp, #48]
    de74:	bl	db48 <elf_getarhdr@@ELFUTILS_1.0+0xe0>
    de78:	b	de88 <elf_getarhdr@@ELFUTILS_1.0+0x420>
    de7c:	ldr	w0, [sp, #48]
    de80:	bl	db30 <elf_getarhdr@@ELFUTILS_1.0+0xc8>
    de84:	mov	w0, w0
    de88:	ldr	x1, [sp, #40]
    de8c:	str	x0, [x1]
    de90:	mov	w0, #0x0                   	// #0
    de94:	ldp	x29, x30, [sp], #64
    de98:	ret

000000000000de9c <elf_getarsym@@ELFUTILS_1.0>:
    de9c:	stp	x29, x30, [sp, #-288]!
    dea0:	mov	x29, sp
    dea4:	stp	x20, x21, [sp, #16]
    dea8:	stp	x22, x23, [sp, #32]
    deac:	stp	x24, x25, [sp, #48]
    deb0:	stp	x26, x27, [sp, #64]
    deb4:	str	x0, [sp, #88]
    deb8:	str	x1, [sp, #80]
    debc:	ldr	x0, [sp, #88]
    dec0:	ldr	w0, [x0, #24]
    dec4:	cmp	w0, #0x1
    dec8:	b.eq	dedc <elf_getarsym@@ELFUTILS_1.0+0x40>  // b.none
    decc:	mov	w0, #0x11                  	// #17
    ded0:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    ded4:	mov	x0, #0x0                   	// #0
    ded8:	b	e61c <elf_getarsym@@ELFUTILS_1.0+0x780>
    dedc:	ldr	x0, [sp, #80]
    dee0:	cmp	x0, #0x0
    dee4:	b.eq	def8 <elf_getarsym@@ELFUTILS_1.0+0x5c>  // b.none
    dee8:	ldr	x0, [sp, #88]
    deec:	ldr	x1, [x0, #88]
    def0:	ldr	x0, [sp, #80]
    def4:	str	x1, [x0]
    def8:	ldr	x0, [sp, #88]
    defc:	ldr	x0, [x0, #80]
    df00:	cmn	x0, #0x1
    df04:	b.ne	df18 <elf_getarsym@@ELFUTILS_1.0+0x7c>  // b.any
    df08:	mov	w0, #0x12                  	// #18
    df0c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    df10:	mov	x0, #0x0                   	// #0
    df14:	b	e61c <elf_getarsym@@ELFUTILS_1.0+0x780>
    df18:	ldr	x0, [sp, #88]
    df1c:	ldr	x0, [x0, #80]
    df20:	str	x0, [sp, #240]
    df24:	ldr	x0, [sp, #240]
    df28:	cmp	x0, #0x0
    df2c:	b.ne	e5fc <elf_getarsym@@ELFUTILS_1.0+0x760>  // b.any
    df30:	ldr	x0, [sp, #88]
    df34:	mov	x1, #0xffffffffffffffff    	// #-1
    df38:	str	x1, [x0, #80]
    df3c:	str	xzr, [sp, #248]
    df40:	ldr	x0, [sp, #88]
    df44:	ldr	x0, [x0]
    df48:	cmp	x0, #0x0
    df4c:	b.ne	dfd0 <elf_getarsym@@ELFUTILS_1.0+0x134>  // b.any
    df50:	ldr	x0, [sp, #88]
    df54:	ldr	w0, [x0, #36]
    df58:	cmn	w0, #0x1
    df5c:	b.ne	df80 <elf_getarsym@@ELFUTILS_1.0+0xe4>  // b.any
    df60:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    df64:	add	x3, x0, #0x780
    df68:	mov	w2, #0x72                  	// #114
    df6c:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    df70:	add	x1, x0, #0x720
    df74:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    df78:	add	x0, x0, #0x730
    df7c:	bl	33d0 <__assert_fail@plt>
    df80:	ldr	x0, [sp, #88]
    df84:	ldr	w4, [x0, #36]
    df88:	ldr	x0, [sp, #88]
    df8c:	add	x1, x0, #0xa8
    df90:	ldr	x0, [sp, #88]
    df94:	ldr	x0, [x0, #40]
    df98:	add	x0, x0, #0x8
    df9c:	mov	x3, x0
    dfa0:	mov	x2, #0x3c                  	// #60
    dfa4:	mov	w0, w4
    dfa8:	bl	db60 <elf_getarhdr@@ELFUTILS_1.0+0xf8>
    dfac:	cmp	x0, #0x3c
    dfb0:	b.eq	dfc0 <elf_getarsym@@ELFUTILS_1.0+0x124>  // b.none
    dfb4:	mov	w0, #0x13                  	// #19
    dfb8:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    dfbc:	b	e5f4 <elf_getarsym@@ELFUTILS_1.0+0x758>
    dfc0:	ldr	x0, [sp, #88]
    dfc4:	add	x0, x0, #0xa8
    dfc8:	str	x0, [sp, #256]
    dfcc:	b	e008 <elf_getarsym@@ELFUTILS_1.0+0x16c>
    dfd0:	ldr	x0, [sp, #88]
    dfd4:	ldr	x0, [x0, #48]
    dfd8:	cmp	x0, #0x43
    dfdc:	b.hi	dfec <elf_getarsym@@ELFUTILS_1.0+0x150>  // b.pmore
    dfe0:	mov	w0, #0x12                  	// #18
    dfe4:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    dfe8:	b	e5f4 <elf_getarsym@@ELFUTILS_1.0+0x758>
    dfec:	ldr	x0, [sp, #88]
    dff0:	ldr	x1, [x0]
    dff4:	ldr	x0, [sp, #88]
    dff8:	ldr	x0, [x0, #40]
    dffc:	add	x0, x0, #0x8
    e000:	add	x0, x1, x0
    e004:	str	x0, [sp, #256]
    e008:	ldr	x0, [sp, #256]
    e00c:	add	x3, x0, #0x3a
    e010:	mov	x2, #0x2                   	// #2
    e014:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    e018:	add	x1, x0, #0x748
    e01c:	mov	x0, x3
    e020:	bl	3250 <memcmp@plt>
    e024:	cmp	w0, #0x0
    e028:	b.eq	e038 <elf_getarsym@@ELFUTILS_1.0+0x19c>  // b.none
    e02c:	mov	w0, #0xf                   	// #15
    e030:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    e034:	b	e5f4 <elf_getarsym@@ELFUTILS_1.0+0x758>
    e038:	ldr	x3, [sp, #256]
    e03c:	mov	x2, #0x10                  	// #16
    e040:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    e044:	add	x1, x0, #0x750
    e048:	mov	x0, x3
    e04c:	bl	3250 <memcmp@plt>
    e050:	cmp	w0, #0x0
    e054:	b.ne	e060 <elf_getarsym@@ELFUTILS_1.0+0x1c4>  // b.any
    e058:	strb	wzr, [sp, #271]
    e05c:	b	e098 <elf_getarsym@@ELFUTILS_1.0+0x1fc>
    e060:	ldr	x3, [sp, #256]
    e064:	mov	x2, #0x10                  	// #16
    e068:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    e06c:	add	x1, x0, #0x768
    e070:	mov	x0, x3
    e074:	bl	3250 <memcmp@plt>
    e078:	cmp	w0, #0x0
    e07c:	b.ne	e08c <elf_getarsym@@ELFUTILS_1.0+0x1f0>  // b.any
    e080:	mov	w0, #0x1                   	// #1
    e084:	strb	w0, [sp, #271]
    e088:	b	e098 <elf_getarsym@@ELFUTILS_1.0+0x1fc>
    e08c:	mov	w0, #0x12                  	// #18
    e090:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    e094:	b	e5f4 <elf_getarsym@@ELFUTILS_1.0+0x758>
    e098:	ldrb	w0, [sp, #271]
    e09c:	cmp	w0, #0x0
    e0a0:	b.eq	e0ac <elf_getarsym@@ELFUTILS_1.0+0x210>  // b.none
    e0a4:	mov	w0, #0x8                   	// #8
    e0a8:	b	e0b0 <elf_getarsym@@ELFUTILS_1.0+0x214>
    e0ac:	mov	w0, #0x4                   	// #4
    e0b0:	str	w0, [sp, #228]
    e0b4:	str	xzr, [sp, #128]
    e0b8:	ldr	x0, [sp, #88]
    e0bc:	ldr	x0, [x0, #40]
    e0c0:	add	x0, x0, #0x44
    e0c4:	str	x0, [sp, #120]
    e0c8:	add	x1, sp, #0x78
    e0cc:	add	x0, sp, #0x80
    e0d0:	ldrb	w3, [sp, #271]
    e0d4:	mov	x2, x1
    e0d8:	ldr	x1, [sp, #88]
    e0dc:	bl	dda4 <elf_getarhdr@@ELFUTILS_1.0+0x33c>
    e0e0:	cmp	w0, #0x0
    e0e4:	b.ge	e0f4 <elf_getarsym@@ELFUTILS_1.0+0x258>  // b.tcont
    e0e8:	mov	w0, #0x12                  	// #18
    e0ec:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    e0f0:	b	e5f4 <elf_getarsym@@ELFUTILS_1.0+0x758>
    e0f4:	ldr	x0, [sp, #256]
    e0f8:	add	x1, x0, #0x30
    e0fc:	add	x0, sp, #0x60
    e100:	mov	x2, #0xa                   	// #10
    e104:	bl	30a0 <memcpy@plt>
    e108:	strb	wzr, [sp, #106]
    e10c:	add	x0, sp, #0x60
    e110:	bl	3220 <atol@plt>
    e114:	str	x0, [sp, #216]
    e118:	ldr	x0, [sp, #88]
    e11c:	ldr	x0, [x0, #48]
    e120:	ldr	x1, [sp, #216]
    e124:	cmp	x1, x0
    e128:	b.hi	e15c <elf_getarsym@@ELFUTILS_1.0+0x2c0>  // b.pmore
    e12c:	ldr	x0, [sp, #88]
    e130:	ldr	x1, [x0, #48]
    e134:	ldr	x0, [sp, #216]
    e138:	sub	x0, x1, x0
    e13c:	cmp	x0, #0x43
    e140:	b.ls	e15c <elf_getarsym@@ELFUTILS_1.0+0x2c0>  // b.plast
    e144:	ldrsw	x0, [sp, #228]
    e148:	ldr	x1, [sp, #216]
    e14c:	udiv	x1, x1, x0
    e150:	ldr	x0, [sp, #128]
    e154:	cmp	x1, x0
    e158:	b.cs	e168 <elf_getarsym@@ELFUTILS_1.0+0x2cc>  // b.hs, b.nlast
    e15c:	mov	w0, #0x12                  	// #18
    e160:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    e164:	b	e5f4 <elf_getarsym@@ELFUTILS_1.0+0x758>
    e168:	ldr	x0, [sp, #128]
    e16c:	add	x1, x0, #0x1
    e170:	mov	x0, x1
    e174:	lsl	x0, x0, #1
    e178:	add	x0, x0, x1
    e17c:	lsl	x0, x0, #3
    e180:	str	x0, [sp, #208]
    e184:	ldr	x0, [sp, #208]
    e188:	bl	3140 <malloc@plt>
    e18c:	mov	x1, x0
    e190:	ldr	x0, [sp, #88]
    e194:	str	x1, [x0, #80]
    e198:	ldr	x0, [sp, #88]
    e19c:	ldr	x0, [x0, #80]
    e1a0:	cmp	x0, #0x0
    e1a4:	b.eq	e5e8 <elf_getarsym@@ELFUTILS_1.0+0x74c>  // b.none
    e1a8:	ldrsw	x1, [sp, #228]
    e1ac:	ldr	x0, [sp, #128]
    e1b0:	mul	x0, x1, x0
    e1b4:	str	x0, [sp, #200]
    e1b8:	ldr	x0, [sp, #88]
    e1bc:	ldr	x0, [x0]
    e1c0:	cmp	x0, #0x0
    e1c4:	b.ne	e338 <elf_getarsym@@ELFUTILS_1.0+0x49c>  // b.any
    e1c8:	ldr	x0, [sp, #200]
    e1cc:	bl	3140 <malloc@plt>
    e1d0:	str	x0, [sp, #248]
    e1d4:	ldr	x0, [sp, #248]
    e1d8:	cmp	x0, #0x0
    e1dc:	cset	w0, eq  // eq = none
    e1e0:	and	w0, w0, #0xff
    e1e4:	and	x0, x0, #0xff
    e1e8:	cmp	x0, #0x0
    e1ec:	b.eq	e1fc <elf_getarsym@@ELFUTILS_1.0+0x360>  // b.none
    e1f0:	mov	w0, #0x8                   	// #8
    e1f4:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    e1f8:	b	e5f4 <elf_getarsym@@ELFUTILS_1.0+0x758>
    e1fc:	ldr	x0, [sp, #248]
    e200:	str	x0, [sp, #272]
    e204:	ldrsw	x1, [sp, #228]
    e208:	ldr	x0, [sp, #128]
    e20c:	mul	x0, x1, x0
    e210:	ldr	x1, [sp, #216]
    e214:	sub	x0, x1, x0
    e218:	ldr	x1, [sp, #208]
    e21c:	add	x0, x1, x0
    e220:	str	x0, [sp, #208]
    e224:	ldr	x0, [sp, #88]
    e228:	ldr	x0, [x0, #80]
    e22c:	ldr	x1, [sp, #208]
    e230:	bl	31e0 <realloc@plt>
    e234:	str	x0, [sp, #192]
    e238:	ldr	x0, [sp, #192]
    e23c:	cmp	x0, #0x0
    e240:	b.ne	e264 <elf_getarsym@@ELFUTILS_1.0+0x3c8>  // b.any
    e244:	ldr	x0, [sp, #88]
    e248:	ldr	x0, [x0, #80]
    e24c:	bl	32a0 <free@plt>
    e250:	ldr	x0, [sp, #88]
    e254:	str	xzr, [x0, #80]
    e258:	mov	w0, #0x8                   	// #8
    e25c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    e260:	b	e5f4 <elf_getarsym@@ELFUTILS_1.0+0x758>
    e264:	ldr	x0, [sp, #88]
    e268:	ldr	x1, [sp, #192]
    e26c:	str	x1, [x0, #80]
    e270:	ldr	x0, [sp, #88]
    e274:	ldr	x2, [x0, #80]
    e278:	ldr	x0, [sp, #128]
    e27c:	add	x1, x0, #0x1
    e280:	mov	x0, x1
    e284:	lsl	x0, x0, #1
    e288:	add	x0, x0, x1
    e28c:	lsl	x0, x0, #3
    e290:	add	x0, x2, x0
    e294:	str	x0, [sp, #184]
    e298:	ldr	x0, [sp, #88]
    e29c:	ldr	w0, [x0, #36]
    e2a0:	ldr	x1, [sp, #120]
    e2a4:	mov	x3, x1
    e2a8:	ldr	x2, [sp, #200]
    e2ac:	ldr	x1, [sp, #272]
    e2b0:	bl	db60 <elf_getarhdr@@ELFUTILS_1.0+0xf8>
    e2b4:	mov	x1, x0
    e2b8:	ldr	x0, [sp, #200]
    e2bc:	cmp	x1, x0
    e2c0:	b.ne	e30c <elf_getarsym@@ELFUTILS_1.0+0x470>  // b.any
    e2c4:	ldr	x0, [sp, #88]
    e2c8:	ldr	w4, [x0, #36]
    e2cc:	ldr	x1, [sp, #216]
    e2d0:	ldr	x0, [sp, #200]
    e2d4:	sub	x2, x1, x0
    e2d8:	ldr	x1, [sp, #120]
    e2dc:	ldr	x0, [sp, #200]
    e2e0:	add	x0, x1, x0
    e2e4:	mov	x3, x0
    e2e8:	ldr	x1, [sp, #184]
    e2ec:	mov	w0, w4
    e2f0:	bl	db60 <elf_getarhdr@@ELFUTILS_1.0+0xf8>
    e2f4:	mov	x2, x0
    e2f8:	ldr	x1, [sp, #216]
    e2fc:	ldr	x0, [sp, #200]
    e300:	sub	x0, x1, x0
    e304:	cmp	x2, x0
    e308:	b.eq	e32c <elf_getarsym@@ELFUTILS_1.0+0x490>  // b.none
    e30c:	ldr	x0, [sp, #88]
    e310:	ldr	x0, [x0, #80]
    e314:	bl	32a0 <free@plt>
    e318:	ldr	x0, [sp, #88]
    e31c:	str	xzr, [x0, #80]
    e320:	mov	w0, #0x12                  	// #18
    e324:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    e328:	b	e5f4 <elf_getarsym@@ELFUTILS_1.0+0x758>
    e32c:	ldr	x0, [sp, #184]
    e330:	str	x0, [sp, #280]
    e334:	b	e3d8 <elf_getarsym@@ELFUTILS_1.0+0x53c>
    e338:	ldr	x0, [sp, #88]
    e33c:	ldr	x1, [x0]
    e340:	ldr	x0, [sp, #120]
    e344:	add	x0, x1, x0
    e348:	str	x0, [sp, #272]
    e34c:	ldr	x0, [sp, #128]
    e350:	neg	x1, x0
    e354:	ldr	x0, [sp, #272]
    e358:	and	x0, x1, x0
    e35c:	cmp	x0, #0x0
    e360:	b.eq	e3bc <elf_getarsym@@ELFUTILS_1.0+0x520>  // b.none
    e364:	ldr	x0, [sp, #200]
    e368:	bl	3140 <malloc@plt>
    e36c:	str	x0, [sp, #248]
    e370:	ldr	x0, [sp, #248]
    e374:	cmp	x0, #0x0
    e378:	cset	w0, eq  // eq = none
    e37c:	and	w0, w0, #0xff
    e380:	and	x0, x0, #0xff
    e384:	cmp	x0, #0x0
    e388:	b.eq	e398 <elf_getarsym@@ELFUTILS_1.0+0x4fc>  // b.none
    e38c:	mov	w0, #0x8                   	// #8
    e390:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    e394:	b	e5f4 <elf_getarsym@@ELFUTILS_1.0+0x758>
    e398:	ldr	x0, [sp, #88]
    e39c:	ldr	x1, [x0]
    e3a0:	ldr	x0, [sp, #120]
    e3a4:	add	x0, x1, x0
    e3a8:	ldr	x2, [sp, #200]
    e3ac:	mov	x1, x0
    e3b0:	ldr	x0, [sp, #248]
    e3b4:	bl	30a0 <memcpy@plt>
    e3b8:	str	x0, [sp, #272]
    e3bc:	ldr	x0, [sp, #88]
    e3c0:	ldr	x1, [x0]
    e3c4:	ldr	x2, [sp, #120]
    e3c8:	ldr	x0, [sp, #200]
    e3cc:	add	x0, x2, x0
    e3d0:	add	x0, x1, x0
    e3d4:	str	x0, [sp, #280]
    e3d8:	ldr	x0, [sp, #88]
    e3dc:	ldr	x0, [x0, #80]
    e3e0:	str	x0, [sp, #176]
    e3e4:	ldr	x1, [sp, #128]
    e3e8:	mov	x0, x1
    e3ec:	sub	x0, x0, #0x1
    e3f0:	str	x0, [sp, #168]
    e3f4:	mov	x26, x1
    e3f8:	mov	x27, #0x0                   	// #0
    e3fc:	lsr	x0, x26, #58
    e400:	lsl	x23, x27, #6
    e404:	orr	x23, x0, x23
    e408:	lsl	x22, x26, #6
    e40c:	ldr	x0, [sp, #272]
    e410:	str	x0, [sp, #160]
    e414:	ldr	x1, [sp, #128]
    e418:	mov	x0, x1
    e41c:	sub	x0, x0, #0x1
    e420:	str	x0, [sp, #152]
    e424:	mov	x24, x1
    e428:	mov	x25, #0x0                   	// #0
    e42c:	lsr	x0, x24, #59
    e430:	lsl	x21, x25, #5
    e434:	orr	x21, x0, x21
    e438:	lsl	x20, x24, #5
    e43c:	ldr	x0, [sp, #272]
    e440:	str	x0, [sp, #144]
    e444:	str	xzr, [sp, #232]
    e448:	b	e558 <elf_getarsym@@ELFUTILS_1.0+0x6bc>
    e44c:	ldr	x1, [sp, #232]
    e450:	mov	x0, x1
    e454:	lsl	x0, x0, #1
    e458:	add	x0, x0, x1
    e45c:	lsl	x0, x0, #3
    e460:	mov	x1, x0
    e464:	ldr	x0, [sp, #176]
    e468:	add	x0, x0, x1
    e46c:	ldr	x1, [sp, #280]
    e470:	str	x1, [x0]
    e474:	ldrb	w0, [sp, #271]
    e478:	cmp	w0, #0x0
    e47c:	b.eq	e4c8 <elf_getarsym@@ELFUTILS_1.0+0x62c>  // b.none
    e480:	ldr	x0, [sp, #160]
    e484:	ldr	x1, [sp, #232]
    e488:	ldr	x0, [x0, x1, lsl #3]
    e48c:	str	x0, [sp, #136]
    e490:	ldr	x0, [sp, #136]
    e494:	bl	db48 <elf_getarhdr@@ELFUTILS_1.0+0xe0>
    e498:	str	x0, [sp, #136]
    e49c:	ldr	x1, [sp, #232]
    e4a0:	mov	x0, x1
    e4a4:	lsl	x0, x0, #1
    e4a8:	add	x0, x0, x1
    e4ac:	lsl	x0, x0, #3
    e4b0:	mov	x1, x0
    e4b4:	ldr	x0, [sp, #176]
    e4b8:	add	x0, x0, x1
    e4bc:	ldr	x1, [sp, #136]
    e4c0:	str	x1, [x0, #8]
    e4c4:	b	e504 <elf_getarsym@@ELFUTILS_1.0+0x668>
    e4c8:	ldr	x0, [sp, #144]
    e4cc:	ldr	x1, [sp, #232]
    e4d0:	ldr	w0, [x0, x1, lsl #2]
    e4d4:	bl	db30 <elf_getarhdr@@ELFUTILS_1.0+0xc8>
    e4d8:	mov	w2, w0
    e4dc:	ldr	x1, [sp, #232]
    e4e0:	mov	x0, x1
    e4e4:	lsl	x0, x0, #1
    e4e8:	add	x0, x0, x1
    e4ec:	lsl	x0, x0, #3
    e4f0:	mov	x1, x0
    e4f4:	ldr	x0, [sp, #176]
    e4f8:	add	x0, x0, x1
    e4fc:	mov	w1, w2
    e500:	str	x1, [x0, #8]
    e504:	ldr	x0, [sp, #280]
    e508:	bl	dc2c <elf_getarhdr@@ELFUTILS_1.0+0x1c4>
    e50c:	mov	w2, w0
    e510:	ldr	x1, [sp, #232]
    e514:	mov	x0, x1
    e518:	lsl	x0, x0, #1
    e51c:	add	x0, x0, x1
    e520:	lsl	x0, x0, #3
    e524:	mov	x1, x0
    e528:	ldr	x0, [sp, #176]
    e52c:	add	x0, x0, x1
    e530:	mov	w1, w2
    e534:	str	x1, [x0, #16]
    e538:	mov	w1, #0x0                   	// #0
    e53c:	ldr	x0, [sp, #280]
    e540:	bl	32c0 <rawmemchr@plt>
    e544:	add	x0, x0, #0x1
    e548:	str	x0, [sp, #280]
    e54c:	ldr	x0, [sp, #232]
    e550:	add	x0, x0, #0x1
    e554:	str	x0, [sp, #232]
    e558:	ldr	x0, [sp, #128]
    e55c:	ldr	x1, [sp, #232]
    e560:	cmp	x1, x0
    e564:	b.cc	e44c <elf_getarsym@@ELFUTILS_1.0+0x5b0>  // b.lo, b.ul, b.last
    e568:	ldr	x1, [sp, #128]
    e56c:	mov	x0, x1
    e570:	lsl	x0, x0, #1
    e574:	add	x0, x0, x1
    e578:	lsl	x0, x0, #3
    e57c:	mov	x1, x0
    e580:	ldr	x0, [sp, #176]
    e584:	add	x0, x0, x1
    e588:	str	xzr, [x0]
    e58c:	ldr	x1, [sp, #128]
    e590:	mov	x0, x1
    e594:	lsl	x0, x0, #1
    e598:	add	x0, x0, x1
    e59c:	lsl	x0, x0, #3
    e5a0:	mov	x1, x0
    e5a4:	ldr	x0, [sp, #176]
    e5a8:	add	x0, x0, x1
    e5ac:	str	xzr, [x0, #8]
    e5b0:	ldr	x1, [sp, #128]
    e5b4:	mov	x0, x1
    e5b8:	lsl	x0, x0, #1
    e5bc:	add	x0, x0, x1
    e5c0:	lsl	x0, x0, #3
    e5c4:	mov	x1, x0
    e5c8:	ldr	x0, [sp, #176]
    e5cc:	add	x0, x0, x1
    e5d0:	mov	x1, #0xffffffffffffffff    	// #-1
    e5d4:	str	x1, [x0, #16]
    e5d8:	ldr	x0, [sp, #128]
    e5dc:	add	x1, x0, #0x1
    e5e0:	ldr	x0, [sp, #88]
    e5e4:	str	x1, [x0, #88]
    e5e8:	ldr	x0, [sp, #88]
    e5ec:	ldr	x0, [x0, #80]
    e5f0:	str	x0, [sp, #240]
    e5f4:	ldr	x0, [sp, #248]
    e5f8:	bl	32a0 <free@plt>
    e5fc:	ldr	x0, [sp, #80]
    e600:	cmp	x0, #0x0
    e604:	b.eq	e618 <elf_getarsym@@ELFUTILS_1.0+0x77c>  // b.none
    e608:	ldr	x0, [sp, #88]
    e60c:	ldr	x1, [x0, #88]
    e610:	ldr	x0, [sp, #80]
    e614:	str	x1, [x0]
    e618:	ldr	x0, [sp, #240]
    e61c:	ldp	x20, x21, [sp, #16]
    e620:	ldp	x22, x23, [sp, #32]
    e624:	ldp	x24, x25, [sp, #48]
    e628:	ldp	x26, x27, [sp, #64]
    e62c:	ldp	x29, x30, [sp], #288
    e630:	ret

000000000000e634 <elf_rawfile@@ELFUTILS_1.0>:
    e634:	stp	x29, x30, [sp, #-48]!
    e638:	mov	x29, sp
    e63c:	str	x0, [sp, #24]
    e640:	str	x1, [sp, #16]
    e644:	ldr	x0, [sp, #24]
    e648:	cmp	x0, #0x0
    e64c:	b.ne	e67c <elf_rawfile@@ELFUTILS_1.0+0x48>  // b.any
    e650:	mov	w0, #0x4                   	// #4
    e654:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    e658:	b	e660 <elf_rawfile@@ELFUTILS_1.0+0x2c>
    e65c:	nop
    e660:	ldr	x0, [sp, #16]
    e664:	cmp	x0, #0x0
    e668:	b.eq	e674 <elf_rawfile@@ELFUTILS_1.0+0x40>  // b.none
    e66c:	ldr	x0, [sp, #16]
    e670:	str	xzr, [x0]
    e674:	mov	x0, #0x0                   	// #0
    e678:	b	e6d4 <elf_rawfile@@ELFUTILS_1.0+0xa0>
    e67c:	ldr	x0, [sp, #24]
    e680:	ldr	x0, [x0]
    e684:	cmp	x0, #0x0
    e688:	b.ne	e69c <elf_rawfile@@ELFUTILS_1.0+0x68>  // b.any
    e68c:	ldr	x0, [sp, #24]
    e690:	bl	e948 <elf_rawfile@@ELFUTILS_1.0+0x314>
    e694:	cmp	x0, #0x0
    e698:	b.eq	e65c <elf_rawfile@@ELFUTILS_1.0+0x28>  // b.none
    e69c:	ldr	x0, [sp, #16]
    e6a0:	cmp	x0, #0x0
    e6a4:	b.eq	e6b8 <elf_rawfile@@ELFUTILS_1.0+0x84>  // b.none
    e6a8:	ldr	x0, [sp, #24]
    e6ac:	ldr	x1, [x0, #48]
    e6b0:	ldr	x0, [sp, #16]
    e6b4:	str	x1, [x0]
    e6b8:	ldr	x0, [sp, #24]
    e6bc:	ldr	x0, [x0]
    e6c0:	ldr	x1, [sp, #24]
    e6c4:	ldr	x1, [x1, #40]
    e6c8:	add	x0, x0, x1
    e6cc:	str	x0, [sp, #40]
    e6d0:	ldr	x0, [sp, #40]
    e6d4:	ldp	x29, x30, [sp], #48
    e6d8:	ret
    e6dc:	stp	x29, x30, [sp, #-80]!
    e6e0:	mov	x29, sp
    e6e4:	str	w0, [sp, #44]
    e6e8:	str	x1, [sp, #32]
    e6ec:	str	x2, [sp, #24]
    e6f0:	str	x3, [sp, #16]
    e6f4:	str	xzr, [sp, #72]
    e6f8:	ldr	x0, [sp, #72]
    e6fc:	ldr	x1, [sp, #32]
    e700:	add	x4, x1, x0
    e704:	ldr	x0, [sp, #72]
    e708:	ldr	x1, [sp, #24]
    e70c:	sub	x2, x1, x0
    e710:	ldr	x1, [sp, #16]
    e714:	ldr	x0, [sp, #72]
    e718:	add	x0, x1, x0
    e71c:	mov	x3, x0
    e720:	mov	x1, x4
    e724:	ldr	w0, [sp, #44]
    e728:	bl	3300 <pread@plt>
    e72c:	str	x0, [sp, #64]
    e730:	ldr	x0, [sp, #64]
    e734:	cmn	x0, #0x1
    e738:	b.ne	e74c <elf_rawfile@@ELFUTILS_1.0+0x118>  // b.any
    e73c:	bl	33e0 <__errno_location@plt>
    e740:	ldr	w0, [x0]
    e744:	cmp	w0, #0x4
    e748:	b.eq	e6f8 <elf_rawfile@@ELFUTILS_1.0+0xc4>  // b.none
    e74c:	ldr	x0, [sp, #64]
    e750:	str	x0, [sp, #56]
    e754:	ldr	x0, [sp, #56]
    e758:	cmp	x0, #0x0
    e75c:	b.gt	e77c <elf_rawfile@@ELFUTILS_1.0+0x148>
    e760:	ldr	x0, [sp, #56]
    e764:	cmp	x0, #0x0
    e768:	b.ge	e774 <elf_rawfile@@ELFUTILS_1.0+0x140>  // b.tcont
    e76c:	ldr	x0, [sp, #56]
    e770:	b	e7a0 <elf_rawfile@@ELFUTILS_1.0+0x16c>
    e774:	ldr	x0, [sp, #72]
    e778:	b	e7a0 <elf_rawfile@@ELFUTILS_1.0+0x16c>
    e77c:	ldr	x1, [sp, #72]
    e780:	ldr	x0, [sp, #56]
    e784:	add	x0, x1, x0
    e788:	str	x0, [sp, #72]
    e78c:	ldr	x0, [sp, #72]
    e790:	ldr	x1, [sp, #24]
    e794:	cmp	x1, x0
    e798:	b.hi	e6f8 <elf_rawfile@@ELFUTILS_1.0+0xc4>  // b.pmore
    e79c:	ldr	x0, [sp, #72]
    e7a0:	ldp	x29, x30, [sp], #80
    e7a4:	ret
    e7a8:	stp	x29, x30, [sp, #-48]!
    e7ac:	mov	x29, sp
    e7b0:	str	x0, [sp, #24]
    e7b4:	ldr	x0, [sp, #24]
    e7b8:	ldr	w0, [x0, #24]
    e7bc:	cmp	w0, #0x1
    e7c0:	b.ne	e804 <elf_rawfile@@ELFUTILS_1.0+0x1d0>  // b.any
    e7c4:	ldr	x0, [sp, #24]
    e7c8:	ldr	x0, [x0, #72]
    e7cc:	str	x0, [sp, #40]
    e7d0:	b	e7f8 <elf_rawfile@@ELFUTILS_1.0+0x1c4>
    e7d4:	ldr	x0, [sp, #40]
    e7d8:	ldr	w0, [x0, #60]
    e7dc:	cmp	w0, #0x0
    e7e0:	b.eq	e7ec <elf_rawfile@@ELFUTILS_1.0+0x1b8>  // b.none
    e7e4:	ldr	x0, [sp, #40]
    e7e8:	bl	e7a8 <elf_rawfile@@ELFUTILS_1.0+0x174>
    e7ec:	ldr	x0, [sp, #40]
    e7f0:	ldr	x0, [x0, #16]
    e7f4:	str	x0, [sp, #40]
    e7f8:	ldr	x0, [sp, #40]
    e7fc:	cmp	x0, #0x0
    e800:	b.ne	e7d4 <elf_rawfile@@ELFUTILS_1.0+0x1a0>  // b.any
    e804:	nop
    e808:	ldp	x29, x30, [sp], #48
    e80c:	ret
    e810:	stp	x29, x30, [sp, #-48]!
    e814:	mov	x29, sp
    e818:	str	x0, [sp, #24]
    e81c:	ldr	x0, [sp, #24]
    e820:	ldr	w0, [x0, #24]
    e824:	cmp	w0, #0x1
    e828:	b.ne	e86c <elf_rawfile@@ELFUTILS_1.0+0x238>  // b.any
    e82c:	ldr	x0, [sp, #24]
    e830:	ldr	x0, [x0, #72]
    e834:	str	x0, [sp, #40]
    e838:	b	e860 <elf_rawfile@@ELFUTILS_1.0+0x22c>
    e83c:	ldr	x0, [sp, #40]
    e840:	ldr	w0, [x0, #60]
    e844:	cmp	w0, #0x0
    e848:	b.eq	e854 <elf_rawfile@@ELFUTILS_1.0+0x220>  // b.none
    e84c:	ldr	x0, [sp, #40]
    e850:	bl	e810 <elf_rawfile@@ELFUTILS_1.0+0x1dc>
    e854:	ldr	x0, [sp, #40]
    e858:	ldr	x0, [x0, #16]
    e85c:	str	x0, [sp, #40]
    e860:	ldr	x0, [sp, #40]
    e864:	cmp	x0, #0x0
    e868:	b.ne	e83c <elf_rawfile@@ELFUTILS_1.0+0x208>  // b.any
    e86c:	nop
    e870:	ldp	x29, x30, [sp], #48
    e874:	ret
    e878:	stp	x29, x30, [sp, #-48]!
    e87c:	mov	x29, sp
    e880:	str	x0, [sp, #24]
    e884:	str	x1, [sp, #16]
    e888:	ldr	x0, [sp, #24]
    e88c:	ldr	w0, [x0, #24]
    e890:	cmp	w0, #0x1
    e894:	b.ne	e93c <elf_rawfile@@ELFUTILS_1.0+0x308>  // b.any
    e898:	ldr	x0, [sp, #24]
    e89c:	ldr	x0, [x0, #72]
    e8a0:	str	x0, [sp, #40]
    e8a4:	b	e930 <elf_rawfile@@ELFUTILS_1.0+0x2fc>
    e8a8:	ldr	x0, [sp, #40]
    e8ac:	ldr	x0, [x0]
    e8b0:	cmp	x0, #0x0
    e8b4:	b.ne	e924 <elf_rawfile@@ELFUTILS_1.0+0x2f0>  // b.any
    e8b8:	ldr	x0, [sp, #24]
    e8bc:	ldr	x1, [x0]
    e8c0:	ldr	x0, [sp, #40]
    e8c4:	str	x1, [x0]
    e8c8:	ldr	x0, [sp, #40]
    e8cc:	ldr	x0, [x0, #40]
    e8d0:	mov	x1, x0
    e8d4:	ldr	x0, [sp, #16]
    e8d8:	sub	x0, x1, x0
    e8dc:	mov	x1, x0
    e8e0:	ldr	x0, [sp, #40]
    e8e4:	str	x1, [x0, #40]
    e8e8:	ldr	x0, [sp, #40]
    e8ec:	ldr	w0, [x0, #24]
    e8f0:	cmp	w0, #0x1
    e8f4:	b.ne	e918 <elf_rawfile@@ELFUTILS_1.0+0x2e4>  // b.any
    e8f8:	ldr	x0, [sp, #40]
    e8fc:	ldr	x0, [x0, #112]
    e900:	mov	x1, x0
    e904:	ldr	x0, [sp, #16]
    e908:	sub	x0, x1, x0
    e90c:	mov	x1, x0
    e910:	ldr	x0, [sp, #40]
    e914:	str	x1, [x0, #112]
    e918:	ldr	x1, [sp, #16]
    e91c:	ldr	x0, [sp, #40]
    e920:	bl	e878 <elf_rawfile@@ELFUTILS_1.0+0x244>
    e924:	ldr	x0, [sp, #40]
    e928:	ldr	x0, [x0, #16]
    e92c:	str	x0, [sp, #40]
    e930:	ldr	x0, [sp, #40]
    e934:	cmp	x0, #0x0
    e938:	b.ne	e8a8 <elf_rawfile@@ELFUTILS_1.0+0x274>  // b.any
    e93c:	nop
    e940:	ldp	x29, x30, [sp], #48
    e944:	ret
    e948:	stp	x29, x30, [sp, #-176]!
    e94c:	mov	x29, sp
    e950:	str	x0, [sp, #24]
    e954:	ldr	x0, [sp, #24]
    e958:	ldr	x0, [x0]
    e95c:	cmp	x0, #0x0
    e960:	b.ne	e994 <elf_rawfile@@ELFUTILS_1.0+0x360>  // b.any
    e964:	ldr	x0, [sp, #24]
    e968:	ldr	w0, [x0, #36]
    e96c:	cmn	w0, #0x1
    e970:	cset	w0, eq  // eq = none
    e974:	and	w0, w0, #0xff
    e978:	and	x0, x0, #0xff
    e97c:	cmp	x0, #0x0
    e980:	b.eq	e994 <elf_rawfile@@ELFUTILS_1.0+0x360>  // b.none
    e984:	mov	w0, #0x4                   	// #4
    e988:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    e98c:	mov	x0, #0x0                   	// #0
    e990:	b	eaf4 <elf_rawfile@@ELFUTILS_1.0+0x4c0>
    e994:	ldr	x0, [sp, #24]
    e998:	ldr	x0, [x0]
    e99c:	cmp	x0, #0x0
    e9a0:	b.ne	eaec <elf_rawfile@@ELFUTILS_1.0+0x4b8>  // b.any
    e9a4:	str	xzr, [sp, #168]
    e9a8:	ldr	x0, [sp, #24]
    e9ac:	bl	e7a8 <elf_rawfile@@ELFUTILS_1.0+0x174>
    e9b0:	ldr	x0, [sp, #24]
    e9b4:	ldr	x0, [x0, #48]
    e9b8:	cmn	x0, #0x1
    e9bc:	b.ne	e9e8 <elf_rawfile@@ELFUTILS_1.0+0x3b4>  // b.any
    e9c0:	ldr	x0, [sp, #24]
    e9c4:	ldr	w0, [x0, #36]
    e9c8:	add	x1, sp, #0x28
    e9cc:	bl	20af8 <elf_compress_gnu@@ELFUTILS_1.7+0x454>
    e9d0:	cmp	w0, #0x0
    e9d4:	b.lt	ea58 <elf_rawfile@@ELFUTILS_1.0+0x424>  // b.tstop
    e9d8:	ldr	x0, [sp, #88]
    e9dc:	mov	x1, x0
    e9e0:	ldr	x0, [sp, #24]
    e9e4:	str	x1, [x0, #48]
    e9e8:	ldr	x0, [sp, #24]
    e9ec:	ldr	x0, [x0, #48]
    e9f0:	bl	3140 <malloc@plt>
    e9f4:	str	x0, [sp, #168]
    e9f8:	ldr	x0, [sp, #168]
    e9fc:	cmp	x0, #0x0
    ea00:	b.eq	eadc <elf_rawfile@@ELFUTILS_1.0+0x4a8>  // b.none
    ea04:	ldr	x0, [sp, #24]
    ea08:	ldr	w4, [x0, #36]
    ea0c:	ldr	x0, [sp, #24]
    ea10:	ldr	x1, [x0, #48]
    ea14:	ldr	x0, [sp, #24]
    ea18:	ldr	x0, [x0, #40]
    ea1c:	mov	x3, x0
    ea20:	mov	x2, x1
    ea24:	ldr	x1, [sp, #168]
    ea28:	mov	w0, w4
    ea2c:	bl	e6dc <elf_rawfile@@ELFUTILS_1.0+0xa8>
    ea30:	mov	x1, x0
    ea34:	ldr	x0, [sp, #24]
    ea38:	ldr	x0, [x0, #48]
    ea3c:	cmp	x1, x0
    ea40:	cset	w0, ne  // ne = any
    ea44:	and	w0, w0, #0xff
    ea48:	and	x0, x0, #0xff
    ea4c:	cmp	x0, #0x0
    ea50:	b.eq	ea70 <elf_rawfile@@ELFUTILS_1.0+0x43c>  // b.none
    ea54:	b	ea5c <elf_rawfile@@ELFUTILS_1.0+0x428>
    ea58:	nop
    ea5c:	mov	w0, #0x13                  	// #19
    ea60:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    ea64:	ldr	x0, [sp, #168]
    ea68:	bl	32a0 <free@plt>
    ea6c:	b	eae4 <elf_rawfile@@ELFUTILS_1.0+0x4b0>
    ea70:	ldr	x0, [sp, #24]
    ea74:	ldr	x1, [sp, #168]
    ea78:	str	x1, [x0]
    ea7c:	ldr	x0, [sp, #24]
    ea80:	ldr	w0, [x0, #56]
    ea84:	orr	w1, w0, #0x80
    ea88:	ldr	x0, [sp, #24]
    ea8c:	str	w1, [x0, #56]
    ea90:	ldr	x0, [sp, #24]
    ea94:	ldr	x0, [x0, #40]
    ea98:	mov	x1, x0
    ea9c:	ldr	x0, [sp, #24]
    eaa0:	bl	e878 <elf_rawfile@@ELFUTILS_1.0+0x244>
    eaa4:	ldr	x0, [sp, #24]
    eaa8:	ldr	w0, [x0, #24]
    eaac:	cmp	w0, #0x1
    eab0:	b.ne	ead0 <elf_rawfile@@ELFUTILS_1.0+0x49c>  // b.any
    eab4:	ldr	x0, [sp, #24]
    eab8:	ldr	x1, [x0, #112]
    eabc:	ldr	x0, [sp, #24]
    eac0:	ldr	x0, [x0, #40]
    eac4:	sub	x1, x1, x0
    eac8:	ldr	x0, [sp, #24]
    eacc:	str	x1, [x0, #112]
    ead0:	ldr	x0, [sp, #24]
    ead4:	str	xzr, [x0, #40]
    ead8:	b	eae4 <elf_rawfile@@ELFUTILS_1.0+0x4b0>
    eadc:	mov	w0, #0x8                   	// #8
    eae0:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    eae4:	ldr	x0, [sp, #24]
    eae8:	bl	e810 <elf_rawfile@@ELFUTILS_1.0+0x1dc>
    eaec:	ldr	x0, [sp, #24]
    eaf0:	ldr	x0, [x0]
    eaf4:	ldp	x29, x30, [sp], #176
    eaf8:	ret

000000000000eafc <elf_cntl@@ELFUTILS_1.0>:
    eafc:	stp	x29, x30, [sp, #-48]!
    eb00:	mov	x29, sp
    eb04:	str	x0, [sp, #24]
    eb08:	str	w1, [sp, #20]
    eb0c:	str	wzr, [sp, #44]
    eb10:	ldr	x0, [sp, #24]
    eb14:	cmp	x0, #0x0
    eb18:	b.ne	eb24 <elf_cntl@@ELFUTILS_1.0+0x28>  // b.any
    eb1c:	mov	w0, #0xffffffff            	// #-1
    eb20:	b	ebb0 <elf_cntl@@ELFUTILS_1.0+0xb4>
    eb24:	ldr	x0, [sp, #24]
    eb28:	ldr	w0, [x0, #36]
    eb2c:	cmn	w0, #0x1
    eb30:	b.ne	eb44 <elf_cntl@@ELFUTILS_1.0+0x48>  // b.any
    eb34:	mov	w0, #0x4                   	// #4
    eb38:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    eb3c:	mov	w0, #0xffffffff            	// #-1
    eb40:	b	ebb0 <elf_cntl@@ELFUTILS_1.0+0xb4>
    eb44:	ldr	w0, [sp, #20]
    eb48:	cmp	w0, #0x6
    eb4c:	b.eq	eb88 <elf_cntl@@ELFUTILS_1.0+0x8c>  // b.none
    eb50:	ldr	w0, [sp, #20]
    eb54:	cmp	w0, #0x7
    eb58:	b.ne	eb98 <elf_cntl@@ELFUTILS_1.0+0x9c>  // b.any
    eb5c:	ldr	x0, [sp, #24]
    eb60:	ldr	x0, [x0]
    eb64:	cmp	x0, #0x0
    eb68:	b.ne	eb88 <elf_cntl@@ELFUTILS_1.0+0x8c>  // b.any
    eb6c:	ldr	x0, [sp, #24]
    eb70:	bl	e948 <elf_rawfile@@ELFUTILS_1.0+0x314>
    eb74:	cmp	x0, #0x0
    eb78:	b.ne	eb88 <elf_cntl@@ELFUTILS_1.0+0x8c>  // b.any
    eb7c:	mov	w0, #0xffffffff            	// #-1
    eb80:	str	w0, [sp, #44]
    eb84:	b	ebac <elf_cntl@@ELFUTILS_1.0+0xb0>
    eb88:	ldr	x0, [sp, #24]
    eb8c:	mov	w1, #0xffffffff            	// #-1
    eb90:	str	w1, [x0, #36]
    eb94:	b	ebac <elf_cntl@@ELFUTILS_1.0+0xb0>
    eb98:	mov	w0, #0xd                   	// #13
    eb9c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    eba0:	mov	w0, #0xffffffff            	// #-1
    eba4:	str	w0, [sp, #44]
    eba8:	nop
    ebac:	ldr	w0, [sp, #44]
    ebb0:	ldp	x29, x30, [sp], #48
    ebb4:	ret

000000000000ebb8 <elf_getscn@@ELFUTILS_1.0>:
    ebb8:	stp	x29, x30, [sp, #-64]!
    ebbc:	mov	x29, sp
    ebc0:	str	x0, [sp, #24]
    ebc4:	str	x1, [sp, #16]
    ebc8:	ldr	x0, [sp, #24]
    ebcc:	cmp	x0, #0x0
    ebd0:	b.ne	ebdc <elf_getscn@@ELFUTILS_1.0+0x24>  // b.any
    ebd4:	mov	x0, #0x0                   	// #0
    ebd8:	b	edb4 <elf_getscn@@ELFUTILS_1.0+0x1fc>
    ebdc:	ldr	x0, [sp, #24]
    ebe0:	ldr	w0, [x0, #24]
    ebe4:	cmp	w0, #0x3
    ebe8:	cset	w0, ne  // ne = any
    ebec:	and	w0, w0, #0xff
    ebf0:	and	x0, x0, #0xff
    ebf4:	cmp	x0, #0x0
    ebf8:	b.eq	ec0c <elf_getscn@@ELFUTILS_1.0+0x54>  // b.none
    ebfc:	mov	w0, #0x4                   	// #4
    ec00:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    ec04:	mov	x0, #0x0                   	// #0
    ec08:	b	edb4 <elf_getscn@@ELFUTILS_1.0+0x1fc>
    ec0c:	str	xzr, [sp, #56]
    ec10:	ldr	x0, [sp, #24]
    ec14:	add	x0, x0, #0xc8
    ec18:	str	x0, [sp, #48]
    ec1c:	ldr	x0, [sp, #16]
    ec20:	cmp	x0, #0x0
    ec24:	b.ne	ed0c <elf_getscn@@ELFUTILS_1.0+0x154>  // b.any
    ec28:	ldr	x0, [sp, #48]
    ec2c:	ldr	w0, [x0]
    ec30:	cmp	w0, #0x0
    ec34:	b.ne	ed0c <elf_getscn@@ELFUTILS_1.0+0x154>  // b.any
    ec38:	ldr	x0, [sp, #48]
    ec3c:	ldr	w0, [x0, #4]
    ec40:	cmp	w0, #0x0
    ec44:	b.eq	ed0c <elf_getscn@@ELFUTILS_1.0+0x154>  // b.none
    ec48:	ldr	x0, [sp, #48]
    ec4c:	add	x0, x0, #0x10
    ec50:	str	x0, [sp, #40]
    ec54:	ldr	x0, [sp, #24]
    ec58:	ldr	w0, [x0, #32]
    ec5c:	cmp	w0, #0x1
    ec60:	b.ne	ec98 <elf_getscn@@ELFUTILS_1.0+0xe0>  // b.any
    ec64:	mov	x1, #0x28                  	// #40
    ec68:	mov	x0, #0x1                   	// #1
    ec6c:	bl	31c0 <calloc@plt>
    ec70:	mov	x1, x0
    ec74:	ldr	x0, [sp, #40]
    ec78:	str	x1, [x0, #144]
    ec7c:	ldr	x0, [sp, #40]
    ec80:	ldr	x0, [x0, #144]
    ec84:	cmp	x0, #0x0
    ec88:	b.ne	eccc <elf_getscn@@ELFUTILS_1.0+0x114>  // b.any
    ec8c:	mov	w0, #0x8                   	// #8
    ec90:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    ec94:	b	edb0 <elf_getscn@@ELFUTILS_1.0+0x1f8>
    ec98:	mov	x1, #0x40                  	// #64
    ec9c:	mov	x0, #0x1                   	// #1
    eca0:	bl	31c0 <calloc@plt>
    eca4:	mov	x1, x0
    eca8:	ldr	x0, [sp, #40]
    ecac:	str	x1, [x0, #144]
    ecb0:	ldr	x0, [sp, #40]
    ecb4:	ldr	x0, [x0, #144]
    ecb8:	cmp	x0, #0x0
    ecbc:	b.ne	eccc <elf_getscn@@ELFUTILS_1.0+0x114>  // b.any
    ecc0:	mov	w0, #0x8                   	// #8
    ecc4:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    ecc8:	b	edb0 <elf_getscn@@ELFUTILS_1.0+0x1f8>
    eccc:	ldr	x0, [sp, #40]
    ecd0:	ldr	x1, [sp, #24]
    ecd4:	str	x1, [x0, #136]
    ecd8:	ldr	x0, [sp, #40]
    ecdc:	mov	w1, #0x81                  	// #129
    ece0:	str	w1, [x0, #152]
    ece4:	ldr	x0, [sp, #24]
    ece8:	ldr	x1, [x0, #96]
    ecec:	ldr	x0, [sp, #40]
    ecf0:	str	x1, [x0, #200]
    ecf4:	ldr	x0, [sp, #40]
    ecf8:	mov	w1, #0x1                   	// #1
    ecfc:	str	w1, [x0, #120]
    ed00:	ldr	x0, [sp, #48]
    ed04:	mov	w1, #0x1                   	// #1
    ed08:	str	w1, [x0]
    ed0c:	ldr	x0, [sp, #48]
    ed10:	ldr	w0, [x0, #4]
    ed14:	mov	w0, w0
    ed18:	ldr	x1, [sp, #16]
    ed1c:	cmp	x1, x0
    ed20:	b.cs	ed78 <elf_getscn@@ELFUTILS_1.0+0x1c0>  // b.hs, b.nlast
    ed24:	ldr	x0, [sp, #48]
    ed28:	ldr	w0, [x0]
    ed2c:	mov	w0, w0
    ed30:	ldr	x1, [sp, #16]
    ed34:	cmp	x1, x0
    ed38:	b.cs	ed6c <elf_getscn@@ELFUTILS_1.0+0x1b4>  // b.hs, b.nlast
    ed3c:	ldr	x1, [sp, #16]
    ed40:	mov	x0, x1
    ed44:	lsl	x0, x0, #1
    ed48:	add	x0, x0, x1
    ed4c:	lsl	x0, x0, #2
    ed50:	add	x0, x0, x1
    ed54:	lsl	x0, x0, #4
    ed58:	add	x0, x0, #0x10
    ed5c:	ldr	x1, [sp, #48]
    ed60:	add	x0, x1, x0
    ed64:	str	x0, [sp, #56]
    ed68:	b	edb0 <elf_getscn@@ELFUTILS_1.0+0x1f8>
    ed6c:	mov	w0, #0x16                  	// #22
    ed70:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    ed74:	b	edb0 <elf_getscn@@ELFUTILS_1.0+0x1f8>
    ed78:	ldr	x0, [sp, #48]
    ed7c:	ldr	w0, [x0, #4]
    ed80:	mov	w0, w0
    ed84:	ldr	x1, [sp, #16]
    ed88:	sub	x0, x1, x0
    ed8c:	str	x0, [sp, #16]
    ed90:	ldr	x0, [sp, #48]
    ed94:	ldr	x0, [x0, #8]
    ed98:	str	x0, [sp, #48]
    ed9c:	ldr	x0, [sp, #48]
    eda0:	cmp	x0, #0x0
    eda4:	b.ne	ed0c <elf_getscn@@ELFUTILS_1.0+0x154>  // b.any
    eda8:	mov	w0, #0x16                  	// #22
    edac:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    edb0:	ldr	x0, [sp, #56]
    edb4:	ldp	x29, x30, [sp], #64
    edb8:	ret

000000000000edbc <elf_nextscn@@ELFUTILS_1.0>:
    edbc:	stp	x29, x30, [sp, #-48]!
    edc0:	mov	x29, sp
    edc4:	str	x0, [sp, #24]
    edc8:	str	x1, [sp, #16]
    edcc:	str	xzr, [sp, #32]
    edd0:	ldr	x0, [sp, #24]
    edd4:	cmp	x0, #0x0
    edd8:	b.ne	ede4 <elf_nextscn@@ELFUTILS_1.0+0x28>  // b.any
    eddc:	mov	x0, #0x0                   	// #0
    ede0:	b	ef00 <elf_nextscn@@ELFUTILS_1.0+0x144>
    ede4:	ldr	x0, [sp, #16]
    ede8:	cmp	x0, #0x0
    edec:	b.ne	ee0c <elf_nextscn@@ELFUTILS_1.0+0x50>  // b.any
    edf0:	ldr	x0, [sp, #24]
    edf4:	add	x0, x0, #0xc8
    edf8:	str	x0, [sp, #40]
    edfc:	ldr	x0, [sp, #40]
    ee00:	add	x0, x0, #0x10
    ee04:	str	x0, [sp, #16]
    ee08:	b	ee18 <elf_nextscn@@ELFUTILS_1.0+0x5c>
    ee0c:	ldr	x0, [sp, #16]
    ee10:	ldr	x0, [x0, #200]
    ee14:	str	x0, [sp, #40]
    ee18:	ldr	x0, [sp, #16]
    ee1c:	add	x2, x0, #0xd0
    ee20:	ldr	x0, [sp, #40]
    ee24:	ldr	w0, [x0]
    ee28:	mov	w1, w0
    ee2c:	mov	x0, x1
    ee30:	lsl	x0, x0, #1
    ee34:	add	x0, x0, x1
    ee38:	lsl	x0, x0, #2
    ee3c:	add	x0, x0, x1
    ee40:	lsl	x0, x0, #4
    ee44:	add	x0, x0, #0x10
    ee48:	ldr	x1, [sp, #40]
    ee4c:	add	x0, x1, x0
    ee50:	cmp	x2, x0
    ee54:	b.cs	ee68 <elf_nextscn@@ELFUTILS_1.0+0xac>  // b.hs, b.nlast
    ee58:	ldr	x0, [sp, #16]
    ee5c:	add	x0, x0, #0xd0
    ee60:	str	x0, [sp, #32]
    ee64:	b	eefc <elf_nextscn@@ELFUTILS_1.0+0x140>
    ee68:	ldr	x0, [sp, #16]
    ee6c:	add	x2, x0, #0xd0
    ee70:	ldr	x0, [sp, #40]
    ee74:	ldr	w0, [x0, #4]
    ee78:	mov	w1, w0
    ee7c:	mov	x0, x1
    ee80:	lsl	x0, x0, #1
    ee84:	add	x0, x0, x1
    ee88:	lsl	x0, x0, #2
    ee8c:	add	x0, x0, x1
    ee90:	lsl	x0, x0, #4
    ee94:	add	x0, x0, #0x10
    ee98:	ldr	x1, [sp, #40]
    ee9c:	add	x0, x1, x0
    eea0:	cmp	x2, x0
    eea4:	b.ne	eefc <elf_nextscn@@ELFUTILS_1.0+0x140>  // b.any
    eea8:	ldr	x0, [sp, #40]
    eeac:	ldr	x0, [x0, #8]
    eeb0:	str	x0, [sp, #40]
    eeb4:	ldr	x0, [sp, #40]
    eeb8:	cmp	x0, #0x0
    eebc:	b.eq	eefc <elf_nextscn@@ELFUTILS_1.0+0x140>  // b.none
    eec0:	ldr	x0, [sp, #40]
    eec4:	ldr	w0, [x0]
    eec8:	cmp	w0, #0x0
    eecc:	b.ne	eef0 <elf_nextscn@@ELFUTILS_1.0+0x134>  // b.any
    eed0:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    eed4:	add	x3, x0, #0x7b0
    eed8:	mov	w2, #0x4b                  	// #75
    eedc:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    eee0:	add	x1, x0, #0x790
    eee4:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    eee8:	add	x0, x0, #0x7a0
    eeec:	bl	33d0 <__assert_fail@plt>
    eef0:	ldr	x0, [sp, #40]
    eef4:	add	x0, x0, #0x10
    eef8:	str	x0, [sp, #32]
    eefc:	ldr	x0, [sp, #32]
    ef00:	ldp	x29, x30, [sp], #48
    ef04:	ret

000000000000ef08 <elf_ndxscn@@ELFUTILS_1.0>:
    ef08:	sub	sp, sp, #0x10
    ef0c:	str	x0, [sp, #8]
    ef10:	ldr	x0, [sp, #8]
    ef14:	cmp	x0, #0x0
    ef18:	b.ne	ef24 <elf_ndxscn@@ELFUTILS_1.0+0x1c>  // b.any
    ef1c:	mov	x0, #0x0                   	// #0
    ef20:	b	ef2c <elf_ndxscn@@ELFUTILS_1.0+0x24>
    ef24:	ldr	x0, [sp, #8]
    ef28:	ldr	x0, [x0, #128]
    ef2c:	add	sp, sp, #0x10
    ef30:	ret

000000000000ef34 <elf_newscn@@ELFUTILS_1.0>:
    ef34:	stp	x29, x30, [sp, #-64]!
    ef38:	mov	x29, sp
    ef3c:	str	x0, [sp, #24]
    ef40:	str	xzr, [sp, #56]
    ef44:	strb	wzr, [sp, #55]
    ef48:	ldr	x0, [sp, #24]
    ef4c:	cmp	x0, #0x0
    ef50:	b.ne	ef5c <elf_newscn@@ELFUTILS_1.0+0x28>  // b.any
    ef54:	mov	x0, #0x0                   	// #0
    ef58:	b	f250 <elf_newscn@@ELFUTILS_1.0+0x31c>
    ef5c:	ldr	x0, [sp, #24]
    ef60:	ldr	x0, [x0, #96]
    ef64:	ldr	w1, [x0]
    ef68:	ldr	x0, [sp, #24]
    ef6c:	ldr	x0, [x0, #96]
    ef70:	ldr	w0, [x0, #4]
    ef74:	cmp	w1, w0
    ef78:	b.cs	f04c <elf_newscn@@ELFUTILS_1.0+0x118>  // b.hs, b.nlast
    ef7c:	ldr	x0, [sp, #24]
    ef80:	ldr	x2, [x0, #96]
    ef84:	ldr	x0, [sp, #24]
    ef88:	ldr	x0, [x0, #96]
    ef8c:	ldr	w0, [x0]
    ef90:	mov	w1, w0
    ef94:	mov	x0, x1
    ef98:	lsl	x0, x0, #1
    ef9c:	add	x0, x0, x1
    efa0:	lsl	x0, x0, #2
    efa4:	add	x0, x0, x1
    efa8:	lsl	x0, x0, #4
    efac:	add	x0, x0, #0x10
    efb0:	add	x0, x2, x0
    efb4:	str	x0, [sp, #56]
    efb8:	ldr	x0, [sp, #24]
    efbc:	ldr	x0, [x0, #96]
    efc0:	ldr	w1, [x0]
    efc4:	add	w1, w1, #0x1
    efc8:	str	w1, [x0]
    efcc:	ldr	w0, [x0]
    efd0:	cmp	w0, #0x1
    efd4:	b.ne	effc <elf_newscn@@ELFUTILS_1.0+0xc8>  // b.any
    efd8:	ldr	x0, [sp, #24]
    efdc:	ldr	x1, [x0, #96]
    efe0:	ldr	x0, [sp, #24]
    efe4:	add	x0, x0, #0xc8
    efe8:	cmp	x1, x0
    efec:	b.ne	effc <elf_newscn@@ELFUTILS_1.0+0xc8>  // b.any
    eff0:	mov	w0, #0x1                   	// #1
    eff4:	strb	w0, [sp, #55]
    eff8:	b	f174 <elf_newscn@@ELFUTILS_1.0+0x240>
    effc:	ldr	x0, [sp, #24]
    f000:	ldr	x0, [x0, #96]
    f004:	ldr	w0, [x0]
    f008:	cmp	w0, #0x1
    f00c:	b.hi	f030 <elf_newscn@@ELFUTILS_1.0+0xfc>  // b.pmore
    f010:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    f014:	add	x3, x0, #0x818
    f018:	mov	w2, #0x4e                  	// #78
    f01c:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    f020:	add	x1, x0, #0x7c0
    f024:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    f028:	add	x0, x0, #0x7d0
    f02c:	bl	33d0 <__assert_fail@plt>
    f030:	ldr	x0, [sp, #56]
    f034:	sub	x0, x0, #0xd0
    f038:	ldr	x0, [x0, #128]
    f03c:	add	x1, x0, #0x1
    f040:	ldr	x0, [sp, #56]
    f044:	str	x1, [x0, #128]
    f048:	b	f174 <elf_newscn@@ELFUTILS_1.0+0x240>
    f04c:	str	xzr, [sp, #40]
    f050:	ldr	x0, [sp, #24]
    f054:	ldr	w0, [x0, #112]
    f058:	cmp	w0, #0x0
    f05c:	b.ne	f080 <elf_newscn@@ELFUTILS_1.0+0x14c>  // b.any
    f060:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    f064:	add	x3, x0, #0x818
    f068:	mov	w2, #0x57                  	// #87
    f06c:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    f070:	add	x1, x0, #0x7c0
    f074:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    f078:	add	x0, x0, #0x7f8
    f07c:	bl	33d0 <__assert_fail@plt>
    f080:	ldr	x0, [sp, #24]
    f084:	ldr	w0, [x0, #112]
    f088:	lsl	w1, w0, #1
    f08c:	ldr	x0, [sp, #24]
    f090:	str	w1, [x0, #112]
    f094:	ldr	x0, [sp, #24]
    f098:	ldr	w0, [x0, #112]
    f09c:	mov	w1, w0
    f0a0:	mov	x0, x1
    f0a4:	lsl	x0, x0, #1
    f0a8:	add	x0, x0, x1
    f0ac:	lsl	x0, x0, #2
    f0b0:	add	x0, x0, x1
    f0b4:	lsl	x0, x0, #4
    f0b8:	add	x0, x0, #0x10
    f0bc:	mov	x1, #0x1                   	// #1
    f0c0:	bl	31c0 <calloc@plt>
    f0c4:	str	x0, [sp, #40]
    f0c8:	ldr	x0, [sp, #40]
    f0cc:	cmp	x0, #0x0
    f0d0:	b.ne	f0e0 <elf_newscn@@ELFUTILS_1.0+0x1ac>  // b.any
    f0d4:	mov	w0, #0x8                   	// #8
    f0d8:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    f0dc:	b	f24c <elf_newscn@@ELFUTILS_1.0+0x318>
    f0e0:	ldr	x0, [sp, #40]
    f0e4:	add	x0, x0, #0x10
    f0e8:	str	x0, [sp, #56]
    f0ec:	ldr	x0, [sp, #40]
    f0f0:	ldr	w0, [x0]
    f0f4:	add	w1, w0, #0x1
    f0f8:	ldr	x0, [sp, #40]
    f0fc:	str	w1, [x0]
    f100:	ldr	x0, [sp, #24]
    f104:	ldr	w1, [x0, #112]
    f108:	ldr	x0, [sp, #40]
    f10c:	str	w1, [x0, #4]
    f110:	ldr	x0, [sp, #24]
    f114:	ldr	x2, [x0, #96]
    f118:	ldr	x0, [sp, #24]
    f11c:	ldr	x0, [x0, #96]
    f120:	ldr	w0, [x0, #4]
    f124:	sub	w0, w0, #0x1
    f128:	mov	w1, w0
    f12c:	mov	x0, x1
    f130:	lsl	x0, x0, #1
    f134:	add	x0, x0, x1
    f138:	lsl	x0, x0, #2
    f13c:	add	x0, x0, x1
    f140:	lsl	x0, x0, #4
    f144:	add	x0, x2, x0
    f148:	ldr	x0, [x0, #144]
    f14c:	add	x1, x0, #0x1
    f150:	ldr	x0, [sp, #40]
    f154:	str	x1, [x0, #144]
    f158:	ldr	x0, [sp, #24]
    f15c:	ldr	x0, [x0, #96]
    f160:	ldr	x1, [sp, #40]
    f164:	str	x1, [x0, #8]
    f168:	ldr	x1, [x0, #8]
    f16c:	ldr	x0, [sp, #24]
    f170:	str	x1, [x0, #96]
    f174:	ldr	x0, [sp, #24]
    f178:	ldr	w0, [x0, #32]
    f17c:	cmp	w0, #0x1
    f180:	b.ne	f1b8 <elf_newscn@@ELFUTILS_1.0+0x284>  // b.any
    f184:	mov	x1, #0x28                  	// #40
    f188:	mov	x0, #0x1                   	// #1
    f18c:	bl	31c0 <calloc@plt>
    f190:	mov	x1, x0
    f194:	ldr	x0, [sp, #56]
    f198:	str	x1, [x0, #144]
    f19c:	ldr	x0, [sp, #56]
    f1a0:	ldr	x0, [x0, #144]
    f1a4:	cmp	x0, #0x0
    f1a8:	b.ne	f1ec <elf_newscn@@ELFUTILS_1.0+0x2b8>  // b.any
    f1ac:	mov	w0, #0x8                   	// #8
    f1b0:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    f1b4:	b	f24c <elf_newscn@@ELFUTILS_1.0+0x318>
    f1b8:	mov	x1, #0x40                  	// #64
    f1bc:	mov	x0, #0x1                   	// #1
    f1c0:	bl	31c0 <calloc@plt>
    f1c4:	mov	x1, x0
    f1c8:	ldr	x0, [sp, #56]
    f1cc:	str	x1, [x0, #144]
    f1d0:	ldr	x0, [sp, #56]
    f1d4:	ldr	x0, [x0, #144]
    f1d8:	cmp	x0, #0x0
    f1dc:	b.ne	f1ec <elf_newscn@@ELFUTILS_1.0+0x2b8>  // b.any
    f1e0:	mov	w0, #0x8                   	// #8
    f1e4:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    f1e8:	b	f24c <elf_newscn@@ELFUTILS_1.0+0x318>
    f1ec:	ldr	x0, [sp, #56]
    f1f0:	ldr	x1, [sp, #24]
    f1f4:	str	x1, [x0, #136]
    f1f8:	ldr	x0, [sp, #56]
    f1fc:	mov	w1, #0x81                  	// #129
    f200:	str	w1, [x0, #152]
    f204:	ldr	x0, [sp, #24]
    f208:	ldr	x1, [x0, #96]
    f20c:	ldr	x0, [sp, #56]
    f210:	str	x1, [x0, #200]
    f214:	ldr	x0, [sp, #56]
    f218:	mov	w1, #0x1                   	// #1
    f21c:	str	w1, [x0, #120]
    f220:	ldrb	w0, [sp, #55]
    f224:	and	x0, x0, #0xff
    f228:	cmp	x0, #0x0
    f22c:	b.eq	f238 <elf_newscn@@ELFUTILS_1.0+0x304>  // b.none
    f230:	strb	wzr, [sp, #55]
    f234:	b	ef5c <elf_newscn@@ELFUTILS_1.0+0x28>
    f238:	ldr	x0, [sp, #56]
    f23c:	ldr	w0, [x0, #156]
    f240:	orr	w1, w0, #0x1
    f244:	ldr	x0, [sp, #56]
    f248:	str	w1, [x0, #156]
    f24c:	ldr	x0, [sp, #56]
    f250:	ldp	x29, x30, [sp], #64
    f254:	ret
    f258:	sub	sp, sp, #0x10
    f25c:	str	w0, [sp, #12]
    f260:	ldr	w0, [sp, #12]
    f264:	rev	w0, w0
    f268:	add	sp, sp, #0x10
    f26c:	ret
    f270:	stp	x29, x30, [sp, #-80]!
    f274:	mov	x29, sp
    f278:	str	w0, [sp, #44]
    f27c:	str	x1, [sp, #32]
    f280:	str	x2, [sp, #24]
    f284:	str	x3, [sp, #16]
    f288:	str	xzr, [sp, #72]
    f28c:	ldr	x0, [sp, #72]
    f290:	ldr	x1, [sp, #32]
    f294:	add	x4, x1, x0
    f298:	ldr	x0, [sp, #72]
    f29c:	ldr	x1, [sp, #24]
    f2a0:	sub	x2, x1, x0
    f2a4:	ldr	x1, [sp, #16]
    f2a8:	ldr	x0, [sp, #72]
    f2ac:	add	x0, x1, x0
    f2b0:	mov	x3, x0
    f2b4:	mov	x1, x4
    f2b8:	ldr	w0, [sp, #44]
    f2bc:	bl	3300 <pread@plt>
    f2c0:	str	x0, [sp, #64]
    f2c4:	ldr	x0, [sp, #64]
    f2c8:	cmn	x0, #0x1
    f2cc:	b.ne	f2e0 <elf_newscn@@ELFUTILS_1.0+0x3ac>  // b.any
    f2d0:	bl	33e0 <__errno_location@plt>
    f2d4:	ldr	w0, [x0]
    f2d8:	cmp	w0, #0x4
    f2dc:	b.eq	f28c <elf_newscn@@ELFUTILS_1.0+0x358>  // b.none
    f2e0:	ldr	x0, [sp, #64]
    f2e4:	str	x0, [sp, #56]
    f2e8:	ldr	x0, [sp, #56]
    f2ec:	cmp	x0, #0x0
    f2f0:	b.gt	f310 <elf_newscn@@ELFUTILS_1.0+0x3dc>
    f2f4:	ldr	x0, [sp, #56]
    f2f8:	cmp	x0, #0x0
    f2fc:	b.ge	f308 <elf_newscn@@ELFUTILS_1.0+0x3d4>  // b.tcont
    f300:	ldr	x0, [sp, #56]
    f304:	b	f334 <elf_newscn@@ELFUTILS_1.0+0x400>
    f308:	ldr	x0, [sp, #72]
    f30c:	b	f334 <elf_newscn@@ELFUTILS_1.0+0x400>
    f310:	ldr	x1, [sp, #72]
    f314:	ldr	x0, [sp, #56]
    f318:	add	x0, x1, x0
    f31c:	str	x0, [sp, #72]
    f320:	ldr	x0, [sp, #72]
    f324:	ldr	x1, [sp, #24]
    f328:	cmp	x1, x0
    f32c:	b.hi	f28c <elf_newscn@@ELFUTILS_1.0+0x358>  // b.pmore
    f330:	ldr	x0, [sp, #72]
    f334:	ldp	x29, x30, [sp], #80
    f338:	ret
    f33c:	stp	x29, x30, [sp, #-48]!
    f340:	mov	x29, sp
    f344:	str	x0, [sp, #24]
    f348:	ldr	x0, [sp, #24]
    f34c:	ldr	w0, [x0, #24]
    f350:	cmp	w0, #0x1
    f354:	b.ne	f398 <elf_newscn@@ELFUTILS_1.0+0x464>  // b.any
    f358:	ldr	x0, [sp, #24]
    f35c:	ldr	x0, [x0, #72]
    f360:	str	x0, [sp, #40]
    f364:	b	f38c <elf_newscn@@ELFUTILS_1.0+0x458>
    f368:	ldr	x0, [sp, #40]
    f36c:	ldr	w0, [x0, #60]
    f370:	cmp	w0, #0x0
    f374:	b.eq	f380 <elf_newscn@@ELFUTILS_1.0+0x44c>  // b.none
    f378:	ldr	x0, [sp, #40]
    f37c:	bl	f33c <elf_newscn@@ELFUTILS_1.0+0x408>
    f380:	ldr	x0, [sp, #40]
    f384:	ldr	x0, [x0, #16]
    f388:	str	x0, [sp, #40]
    f38c:	ldr	x0, [sp, #40]
    f390:	cmp	x0, #0x0
    f394:	b.ne	f368 <elf_newscn@@ELFUTILS_1.0+0x434>  // b.any
    f398:	nop
    f39c:	ldp	x29, x30, [sp], #48
    f3a0:	ret
    f3a4:	stp	x29, x30, [sp, #-48]!
    f3a8:	mov	x29, sp
    f3ac:	str	x0, [sp, #24]
    f3b0:	ldr	x0, [sp, #24]
    f3b4:	ldr	w0, [x0, #24]
    f3b8:	cmp	w0, #0x1
    f3bc:	b.ne	f400 <elf_newscn@@ELFUTILS_1.0+0x4cc>  // b.any
    f3c0:	ldr	x0, [sp, #24]
    f3c4:	ldr	x0, [x0, #72]
    f3c8:	str	x0, [sp, #40]
    f3cc:	b	f3f4 <elf_newscn@@ELFUTILS_1.0+0x4c0>
    f3d0:	ldr	x0, [sp, #40]
    f3d4:	ldr	w0, [x0, #60]
    f3d8:	cmp	w0, #0x0
    f3dc:	b.eq	f3e8 <elf_newscn@@ELFUTILS_1.0+0x4b4>  // b.none
    f3e0:	ldr	x0, [sp, #40]
    f3e4:	bl	f3a4 <elf_newscn@@ELFUTILS_1.0+0x470>
    f3e8:	ldr	x0, [sp, #40]
    f3ec:	ldr	x0, [x0, #16]
    f3f0:	str	x0, [sp, #40]
    f3f4:	ldr	x0, [sp, #40]
    f3f8:	cmp	x0, #0x0
    f3fc:	b.ne	f3d0 <elf_newscn@@ELFUTILS_1.0+0x49c>  // b.any
    f400:	nop
    f404:	ldp	x29, x30, [sp], #48
    f408:	ret
    f40c:	stp	x29, x30, [sp, #-160]!
    f410:	mov	x29, sp
    f414:	str	x19, [sp, #16]
    f418:	str	x0, [sp, #40]
    f41c:	ldr	x0, [sp, #40]
    f420:	ldr	x0, [x0, #136]
    f424:	str	x0, [sp, #112]
    f428:	ldr	x0, [sp, #112]
    f42c:	ldr	x0, [x0, #72]
    f430:	str	x0, [sp, #104]
    f434:	ldr	x0, [sp, #40]
    f438:	ldr	x0, [x0, #144]
    f43c:	str	x0, [sp, #152]
    f440:	ldr	x0, [sp, #152]
    f444:	cmp	x0, #0x0
    f448:	b.ne	ffe4 <elf_newscn@@ELFUTILS_1.0+0x10b0>  // b.any
    f44c:	add	x0, sp, #0x38
    f450:	mov	x1, x0
    f454:	ldr	x0, [sp, #112]
    f458:	bl	1d64c <elf_getphdrnum@@ELFUTILS_1.6+0x70>
    f45c:	cmp	w0, #0x0
    f460:	b.ne	ffec <elf_newscn@@ELFUTILS_1.0+0x10b8>  // b.any
    f464:	ldr	x1, [sp, #56]
    f468:	mov	x0, #0x6666666666666666    	// #7378697629483820646
    f46c:	movk	x0, #0x666, lsl #48
    f470:	cmp	x1, x0
    f474:	b.hi	ffec <elf_newscn@@ELFUTILS_1.0+0x10b8>  // b.pmore
    f478:	ldr	x1, [sp, #56]
    f47c:	mov	x0, x1
    f480:	lsl	x0, x0, #2
    f484:	add	x0, x0, x1
    f488:	lsl	x0, x0, #3
    f48c:	str	x0, [sp, #96]
    f490:	ldr	x0, [sp, #96]
    f494:	bl	3140 <malloc@plt>
    f498:	mov	x1, x0
    f49c:	ldr	x0, [sp, #112]
    f4a0:	str	x1, [x0, #80]
    f4a4:	ldr	x0, [sp, #112]
    f4a8:	ldr	x0, [x0, #80]
    f4ac:	str	x0, [sp, #88]
    f4b0:	ldr	x0, [sp, #112]
    f4b4:	ldr	x0, [x0, #80]
    f4b8:	cmp	x0, #0x0
    f4bc:	b.ne	f4cc <elf_newscn@@ELFUTILS_1.0+0x598>  // b.any
    f4c0:	mov	w0, #0x8                   	// #8
    f4c4:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    f4c8:	b	fff0 <elf_newscn@@ELFUTILS_1.0+0x10bc>
    f4cc:	ldr	x0, [sp, #112]
    f4d0:	mov	w1, #0x1                   	// #1
    f4d4:	str	w1, [x0, #124]
    f4d8:	ldr	x0, [sp, #112]
    f4dc:	ldr	x0, [x0]
    f4e0:	cmp	x0, #0x0
    f4e4:	b.eq	fb38 <elf_newscn@@ELFUTILS_1.0+0xc04>  // b.none
    f4e8:	ldr	x0, [sp, #104]
    f4ec:	ldr	w0, [x0, #32]
    f4f0:	mov	w1, w0
    f4f4:	ldr	x0, [sp, #112]
    f4f8:	ldr	x0, [x0, #48]
    f4fc:	cmp	x1, x0
    f500:	cset	w0, cs  // cs = hs, nlast
    f504:	and	w0, w0, #0xff
    f508:	and	x0, x0, #0xff
    f50c:	cmp	x0, #0x0
    f510:	b.ne	f548 <elf_newscn@@ELFUTILS_1.0+0x614>  // b.any
    f514:	ldr	x0, [sp, #112]
    f518:	ldr	x1, [x0, #48]
    f51c:	ldr	x0, [sp, #104]
    f520:	ldr	w0, [x0, #32]
    f524:	mov	w0, w0
    f528:	sub	x0, x1, x0
    f52c:	ldr	x1, [sp, #96]
    f530:	cmp	x1, x0
    f534:	cset	w0, hi  // hi = pmore
    f538:	and	w0, w0, #0xff
    f53c:	and	x0, x0, #0xff
    f540:	cmp	x0, #0x0
    f544:	b.eq	f554 <elf_newscn@@ELFUTILS_1.0+0x620>  // b.none
    f548:	mov	w0, #0x20                  	// #32
    f54c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    f550:	b	ff24 <elf_newscn@@ELFUTILS_1.0+0xff0>
    f554:	ldr	x0, [sp, #112]
    f558:	ldr	x1, [x0]
    f55c:	ldr	x0, [sp, #112]
    f560:	ldr	x0, [x0, #40]
    f564:	mov	x2, x0
    f568:	ldr	x0, [sp, #104]
    f56c:	ldr	w0, [x0, #32]
    f570:	mov	w0, w0
    f574:	add	x0, x2, x0
    f578:	add	x0, x1, x0
    f57c:	str	x0, [sp, #72]
    f580:	ldr	x0, [sp, #112]
    f584:	ldr	w0, [x0, #56]
    f588:	and	w0, w0, #0x80
    f58c:	cmp	w0, #0x0
    f590:	b.ne	f5e4 <elf_newscn@@ELFUTILS_1.0+0x6b0>  // b.any
    f594:	ldr	x0, [sp, #104]
    f598:	ldrb	w0, [x0, #5]
    f59c:	cmp	w0, #0x1
    f5a0:	b.ne	f5e4 <elf_newscn@@ELFUTILS_1.0+0x6b0>  // b.any
    f5a4:	ldr	x0, [sp, #112]
    f5a8:	ldr	w0, [x0, #28]
    f5ac:	cmp	w0, #0x8
    f5b0:	b.eq	f5e4 <elf_newscn@@ELFUTILS_1.0+0x6b0>  // b.none
    f5b4:	ldr	x0, [sp, #72]
    f5b8:	and	x0, x0, #0x3
    f5bc:	cmp	x0, #0x0
    f5c0:	b.ne	f5e4 <elf_newscn@@ELFUTILS_1.0+0x6b0>  // b.any
    f5c4:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    f5c8:	add	x3, x0, #0x918
    f5cc:	mov	w2, #0x64                  	// #100
    f5d0:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    f5d4:	add	x1, x0, #0x828
    f5d8:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    f5dc:	add	x0, x0, #0x838
    f5e0:	bl	33d0 <__assert_fail@plt>
    f5e4:	ldr	x0, [sp, #104]
    f5e8:	ldrb	w0, [x0, #5]
    f5ec:	cmp	w0, #0x1
    f5f0:	b.ne	f608 <elf_newscn@@ELFUTILS_1.0+0x6d4>  // b.any
    f5f4:	ldr	x2, [sp, #96]
    f5f8:	ldr	x1, [sp, #72]
    f5fc:	ldr	x0, [sp, #88]
    f600:	bl	30a0 <memcpy@plt>
    f604:	b	ff40 <elf_newscn@@ELFUTILS_1.0+0x100c>
    f608:	ldr	x0, [sp, #72]
    f60c:	and	x0, x0, #0x3
    f610:	cmp	x0, #0x0
    f614:	cset	w0, ne  // ne = any
    f618:	strb	w0, [sp, #71]
    f61c:	ldrb	w0, [sp, #71]
    f620:	eor	w0, w0, #0x1
    f624:	and	w0, w0, #0xff
    f628:	cmp	w0, #0x0
    f62c:	b.eq	f660 <elf_newscn@@ELFUTILS_1.0+0x72c>  // b.none
    f630:	ldr	x0, [sp, #112]
    f634:	ldr	x1, [x0]
    f638:	ldr	x0, [sp, #112]
    f63c:	ldr	x0, [x0, #40]
    f640:	mov	x2, x0
    f644:	ldr	x0, [sp, #104]
    f648:	ldr	w0, [x0, #32]
    f64c:	mov	w0, w0
    f650:	add	x0, x2, x0
    f654:	add	x0, x1, x0
    f658:	str	x0, [sp, #144]
    f65c:	b	f6cc <elf_newscn@@ELFUTILS_1.0+0x798>
    f660:	ldr	x0, [sp, #96]
    f664:	bl	3140 <malloc@plt>
    f668:	str	x0, [sp, #144]
    f66c:	ldr	x0, [sp, #144]
    f670:	cmp	x0, #0x0
    f674:	cset	w0, eq  // eq = none
    f678:	and	w0, w0, #0xff
    f67c:	and	x0, x0, #0xff
    f680:	cmp	x0, #0x0
    f684:	b.eq	f694 <elf_newscn@@ELFUTILS_1.0+0x760>  // b.none
    f688:	mov	w0, #0x8                   	// #8
    f68c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    f690:	b	fff0 <elf_newscn@@ELFUTILS_1.0+0x10bc>
    f694:	ldr	x0, [sp, #112]
    f698:	ldr	x1, [x0]
    f69c:	ldr	x0, [sp, #112]
    f6a0:	ldr	x0, [x0, #40]
    f6a4:	mov	x2, x0
    f6a8:	ldr	x0, [sp, #104]
    f6ac:	ldr	w0, [x0, #32]
    f6b0:	mov	w0, w0
    f6b4:	add	x0, x2, x0
    f6b8:	add	x0, x1, x0
    f6bc:	ldr	x2, [sp, #96]
    f6c0:	mov	x1, x0
    f6c4:	ldr	x0, [sp, #144]
    f6c8:	bl	30a0 <memcpy@plt>
    f6cc:	str	xzr, [sp, #136]
    f6d0:	b	fb10 <elf_newscn@@ELFUTILS_1.0+0xbdc>
    f6d4:	ldr	x1, [sp, #136]
    f6d8:	mov	x0, x1
    f6dc:	lsl	x0, x0, #2
    f6e0:	add	x0, x0, x1
    f6e4:	lsl	x0, x0, #3
    f6e8:	mov	x1, x0
    f6ec:	ldr	x0, [sp, #144]
    f6f0:	add	x0, x0, x1
    f6f4:	ldr	w2, [x0]
    f6f8:	ldr	x1, [sp, #136]
    f6fc:	mov	x0, x1
    f700:	lsl	x0, x0, #2
    f704:	add	x0, x0, x1
    f708:	lsl	x0, x0, #3
    f70c:	mov	x1, x0
    f710:	ldr	x0, [sp, #88]
    f714:	add	x19, x0, x1
    f718:	mov	w0, w2
    f71c:	bl	f258 <elf_newscn@@ELFUTILS_1.0+0x324>
    f720:	str	w0, [x19]
    f724:	ldr	x1, [sp, #136]
    f728:	mov	x0, x1
    f72c:	lsl	x0, x0, #2
    f730:	add	x0, x0, x1
    f734:	lsl	x0, x0, #3
    f738:	mov	x1, x0
    f73c:	ldr	x0, [sp, #144]
    f740:	add	x0, x0, x1
    f744:	ldr	w2, [x0, #4]
    f748:	ldr	x1, [sp, #136]
    f74c:	mov	x0, x1
    f750:	lsl	x0, x0, #2
    f754:	add	x0, x0, x1
    f758:	lsl	x0, x0, #3
    f75c:	mov	x1, x0
    f760:	ldr	x0, [sp, #88]
    f764:	add	x19, x0, x1
    f768:	mov	w0, w2
    f76c:	bl	f258 <elf_newscn@@ELFUTILS_1.0+0x324>
    f770:	str	w0, [x19, #4]
    f774:	ldr	x1, [sp, #136]
    f778:	mov	x0, x1
    f77c:	lsl	x0, x0, #2
    f780:	add	x0, x0, x1
    f784:	lsl	x0, x0, #3
    f788:	mov	x1, x0
    f78c:	ldr	x0, [sp, #144]
    f790:	add	x0, x0, x1
    f794:	ldr	w2, [x0, #8]
    f798:	ldr	x1, [sp, #136]
    f79c:	mov	x0, x1
    f7a0:	lsl	x0, x0, #2
    f7a4:	add	x0, x0, x1
    f7a8:	lsl	x0, x0, #3
    f7ac:	mov	x1, x0
    f7b0:	ldr	x0, [sp, #88]
    f7b4:	add	x19, x0, x1
    f7b8:	mov	w0, w2
    f7bc:	bl	f258 <elf_newscn@@ELFUTILS_1.0+0x324>
    f7c0:	str	w0, [x19, #8]
    f7c4:	ldr	x1, [sp, #136]
    f7c8:	mov	x0, x1
    f7cc:	lsl	x0, x0, #2
    f7d0:	add	x0, x0, x1
    f7d4:	lsl	x0, x0, #3
    f7d8:	mov	x1, x0
    f7dc:	ldr	x0, [sp, #144]
    f7e0:	add	x0, x0, x1
    f7e4:	ldr	w2, [x0, #12]
    f7e8:	ldr	x1, [sp, #136]
    f7ec:	mov	x0, x1
    f7f0:	lsl	x0, x0, #2
    f7f4:	add	x0, x0, x1
    f7f8:	lsl	x0, x0, #3
    f7fc:	mov	x1, x0
    f800:	ldr	x0, [sp, #88]
    f804:	add	x19, x0, x1
    f808:	mov	w0, w2
    f80c:	bl	f258 <elf_newscn@@ELFUTILS_1.0+0x324>
    f810:	str	w0, [x19, #12]
    f814:	ldr	x1, [sp, #136]
    f818:	mov	x0, x1
    f81c:	lsl	x0, x0, #2
    f820:	add	x0, x0, x1
    f824:	lsl	x0, x0, #3
    f828:	mov	x1, x0
    f82c:	ldr	x0, [sp, #144]
    f830:	add	x0, x0, x1
    f834:	ldr	w2, [x0, #16]
    f838:	ldr	x1, [sp, #136]
    f83c:	mov	x0, x1
    f840:	lsl	x0, x0, #2
    f844:	add	x0, x0, x1
    f848:	lsl	x0, x0, #3
    f84c:	mov	x1, x0
    f850:	ldr	x0, [sp, #88]
    f854:	add	x19, x0, x1
    f858:	mov	w0, w2
    f85c:	bl	f258 <elf_newscn@@ELFUTILS_1.0+0x324>
    f860:	str	w0, [x19, #16]
    f864:	ldr	x1, [sp, #136]
    f868:	mov	x0, x1
    f86c:	lsl	x0, x0, #2
    f870:	add	x0, x0, x1
    f874:	lsl	x0, x0, #3
    f878:	mov	x1, x0
    f87c:	ldr	x0, [sp, #144]
    f880:	add	x0, x0, x1
    f884:	ldr	w2, [x0, #20]
    f888:	ldr	x1, [sp, #136]
    f88c:	mov	x0, x1
    f890:	lsl	x0, x0, #2
    f894:	add	x0, x0, x1
    f898:	lsl	x0, x0, #3
    f89c:	mov	x1, x0
    f8a0:	ldr	x0, [sp, #88]
    f8a4:	add	x19, x0, x1
    f8a8:	mov	w0, w2
    f8ac:	bl	f258 <elf_newscn@@ELFUTILS_1.0+0x324>
    f8b0:	str	w0, [x19, #20]
    f8b4:	ldr	x1, [sp, #136]
    f8b8:	mov	x0, x1
    f8bc:	lsl	x0, x0, #2
    f8c0:	add	x0, x0, x1
    f8c4:	lsl	x0, x0, #3
    f8c8:	mov	x1, x0
    f8cc:	ldr	x0, [sp, #144]
    f8d0:	add	x0, x0, x1
    f8d4:	ldr	w2, [x0, #24]
    f8d8:	ldr	x1, [sp, #136]
    f8dc:	mov	x0, x1
    f8e0:	lsl	x0, x0, #2
    f8e4:	add	x0, x0, x1
    f8e8:	lsl	x0, x0, #3
    f8ec:	mov	x1, x0
    f8f0:	ldr	x0, [sp, #88]
    f8f4:	add	x19, x0, x1
    f8f8:	mov	w0, w2
    f8fc:	bl	f258 <elf_newscn@@ELFUTILS_1.0+0x324>
    f900:	str	w0, [x19, #24]
    f904:	ldr	x1, [sp, #136]
    f908:	mov	x0, x1
    f90c:	lsl	x0, x0, #2
    f910:	add	x0, x0, x1
    f914:	lsl	x0, x0, #3
    f918:	mov	x1, x0
    f91c:	ldr	x0, [sp, #144]
    f920:	add	x0, x0, x1
    f924:	ldr	w2, [x0, #28]
    f928:	ldr	x1, [sp, #136]
    f92c:	mov	x0, x1
    f930:	lsl	x0, x0, #2
    f934:	add	x0, x0, x1
    f938:	lsl	x0, x0, #3
    f93c:	mov	x1, x0
    f940:	ldr	x0, [sp, #88]
    f944:	add	x19, x0, x1
    f948:	mov	w0, w2
    f94c:	bl	f258 <elf_newscn@@ELFUTILS_1.0+0x324>
    f950:	str	w0, [x19, #28]
    f954:	ldr	x1, [sp, #136]
    f958:	mov	x0, x1
    f95c:	lsl	x0, x0, #2
    f960:	add	x0, x0, x1
    f964:	lsl	x0, x0, #3
    f968:	mov	x1, x0
    f96c:	ldr	x0, [sp, #144]
    f970:	add	x0, x0, x1
    f974:	ldr	w2, [x0, #32]
    f978:	ldr	x1, [sp, #136]
    f97c:	mov	x0, x1
    f980:	lsl	x0, x0, #2
    f984:	add	x0, x0, x1
    f988:	lsl	x0, x0, #3
    f98c:	mov	x1, x0
    f990:	ldr	x0, [sp, #88]
    f994:	add	x19, x0, x1
    f998:	mov	w0, w2
    f99c:	bl	f258 <elf_newscn@@ELFUTILS_1.0+0x324>
    f9a0:	str	w0, [x19, #32]
    f9a4:	ldr	x1, [sp, #136]
    f9a8:	mov	x0, x1
    f9ac:	lsl	x0, x0, #2
    f9b0:	add	x0, x0, x1
    f9b4:	lsl	x0, x0, #3
    f9b8:	mov	x1, x0
    f9bc:	ldr	x0, [sp, #144]
    f9c0:	add	x0, x0, x1
    f9c4:	ldr	w2, [x0, #36]
    f9c8:	ldr	x1, [sp, #136]
    f9cc:	mov	x0, x1
    f9d0:	lsl	x0, x0, #2
    f9d4:	add	x0, x0, x1
    f9d8:	lsl	x0, x0, #3
    f9dc:	mov	x1, x0
    f9e0:	ldr	x0, [sp, #88]
    f9e4:	add	x19, x0, x1
    f9e8:	mov	w0, w2
    f9ec:	bl	f258 <elf_newscn@@ELFUTILS_1.0+0x324>
    f9f0:	str	w0, [x19, #36]
    f9f4:	ldr	x1, [sp, #136]
    f9f8:	mov	x0, x1
    f9fc:	lsl	x0, x0, #2
    fa00:	add	x0, x0, x1
    fa04:	lsl	x0, x0, #3
    fa08:	mov	x1, x0
    fa0c:	ldr	x0, [sp, #88]
    fa10:	add	x0, x0, x1
    fa14:	ldr	w0, [x0, #4]
    fa18:	cmp	w0, #0x12
    fa1c:	b.ne	faa8 <elf_newscn@@ELFUTILS_1.0+0xb74>  // b.any
    fa20:	ldr	x1, [sp, #136]
    fa24:	mov	x0, x1
    fa28:	lsl	x0, x0, #2
    fa2c:	add	x0, x0, x1
    fa30:	lsl	x0, x0, #3
    fa34:	mov	x1, x0
    fa38:	ldr	x0, [sp, #88]
    fa3c:	add	x0, x0, x1
    fa40:	ldr	w0, [x0, #24]
    fa44:	mov	w1, w0
    fa48:	ldr	x0, [sp, #56]
    fa4c:	cmp	x1, x0
    fa50:	b.cs	faa8 <elf_newscn@@ELFUTILS_1.0+0xb74>  // b.hs, b.nlast
    fa54:	ldr	x1, [sp, #136]
    fa58:	mov	x0, x1
    fa5c:	lsl	x0, x0, #2
    fa60:	add	x0, x0, x1
    fa64:	lsl	x0, x0, #3
    fa68:	mov	x1, x0
    fa6c:	ldr	x0, [sp, #88]
    fa70:	add	x0, x0, x1
    fa74:	ldr	w0, [x0, #24]
    fa78:	ldr	x1, [sp, #136]
    fa7c:	mov	w3, w1
    fa80:	ldr	x2, [sp, #112]
    fa84:	mov	w1, w0
    fa88:	mov	x0, x1
    fa8c:	lsl	x0, x0, #1
    fa90:	add	x0, x0, x1
    fa94:	lsl	x0, x0, #2
    fa98:	add	x0, x0, x1
    fa9c:	lsl	x0, x0, #4
    faa0:	add	x0, x2, x0
    faa4:	str	w3, [x0, #340]
    faa8:	ldr	x2, [sp, #112]
    faac:	ldr	x1, [sp, #136]
    fab0:	mov	x0, x1
    fab4:	lsl	x0, x0, #1
    fab8:	add	x0, x0, x1
    fabc:	lsl	x0, x0, #2
    fac0:	add	x0, x0, x1
    fac4:	lsl	x0, x0, #4
    fac8:	add	x0, x2, x0
    facc:	ldr	w0, [x0, #340]
    fad0:	cmp	w0, #0x0
    fad4:	b.ne	fb04 <elf_newscn@@ELFUTILS_1.0+0xbd0>  // b.any
    fad8:	ldr	x2, [sp, #112]
    fadc:	ldr	x1, [sp, #136]
    fae0:	mov	x0, x1
    fae4:	lsl	x0, x0, #1
    fae8:	add	x0, x0, x1
    faec:	lsl	x0, x0, #2
    faf0:	add	x0, x0, x1
    faf4:	lsl	x0, x0, #4
    faf8:	add	x0, x2, x0
    fafc:	mov	w1, #0xffffffff            	// #-1
    fb00:	str	w1, [x0, #340]
    fb04:	ldr	x0, [sp, #136]
    fb08:	add	x0, x0, #0x1
    fb0c:	str	x0, [sp, #136]
    fb10:	ldr	x0, [sp, #56]
    fb14:	ldr	x1, [sp, #136]
    fb18:	cmp	x1, x0
    fb1c:	b.cc	f6d4 <elf_newscn@@ELFUTILS_1.0+0x7a0>  // b.lo, b.ul, b.last
    fb20:	ldrb	w0, [sp, #71]
    fb24:	cmp	w0, #0x0
    fb28:	b.eq	ff40 <elf_newscn@@ELFUTILS_1.0+0x100c>  // b.none
    fb2c:	ldr	x0, [sp, #144]
    fb30:	bl	32a0 <free@plt>
    fb34:	b	ff40 <elf_newscn@@ELFUTILS_1.0+0x100c>
    fb38:	ldr	x0, [sp, #112]
    fb3c:	ldr	w0, [x0, #36]
    fb40:	cmn	w0, #0x1
    fb44:	cset	w0, ne  // ne = any
    fb48:	and	w0, w0, #0xff
    fb4c:	and	x0, x0, #0xff
    fb50:	cmp	x0, #0x0
    fb54:	b.eq	ff1c <elf_newscn@@ELFUTILS_1.0+0xfe8>  // b.none
    fb58:	ldr	x0, [sp, #112]
    fb5c:	ldr	w4, [x0, #36]
    fb60:	ldr	x0, [sp, #112]
    fb64:	ldr	x5, [x0, #80]
    fb68:	ldr	x0, [sp, #112]
    fb6c:	ldr	x1, [x0, #40]
    fb70:	ldr	x0, [sp, #104]
    fb74:	ldr	w0, [x0, #32]
    fb78:	mov	w0, w0
    fb7c:	add	x0, x1, x0
    fb80:	mov	x3, x0
    fb84:	ldr	x2, [sp, #96]
    fb88:	mov	x1, x5
    fb8c:	mov	w0, w4
    fb90:	bl	f270 <elf_newscn@@ELFUTILS_1.0+0x33c>
    fb94:	str	x0, [sp, #80]
    fb98:	ldr	x0, [sp, #96]
    fb9c:	ldr	x1, [sp, #80]
    fba0:	cmp	x1, x0
    fba4:	cset	w0, ne  // ne = any
    fba8:	and	w0, w0, #0xff
    fbac:	and	x0, x0, #0xff
    fbb0:	cmp	x0, #0x0
    fbb4:	b.eq	fbc4 <elf_newscn@@ELFUTILS_1.0+0xc90>  // b.none
    fbb8:	mov	w0, #0x13                  	// #19
    fbbc:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    fbc0:	b	ff24 <elf_newscn@@ELFUTILS_1.0+0xff0>
    fbc4:	ldr	x0, [sp, #104]
    fbc8:	ldrb	w0, [x0, #5]
    fbcc:	cmp	w0, #0x1
    fbd0:	b.eq	ff40 <elf_newscn@@ELFUTILS_1.0+0x100c>  // b.none
    fbd4:	str	xzr, [sp, #128]
    fbd8:	b	ff08 <elf_newscn@@ELFUTILS_1.0+0xfd4>
    fbdc:	ldr	x1, [sp, #128]
    fbe0:	mov	x0, x1
    fbe4:	lsl	x0, x0, #2
    fbe8:	add	x0, x0, x1
    fbec:	lsl	x0, x0, #3
    fbf0:	mov	x1, x0
    fbf4:	ldr	x0, [sp, #88]
    fbf8:	add	x0, x0, x1
    fbfc:	ldr	w2, [x0]
    fc00:	ldr	x1, [sp, #128]
    fc04:	mov	x0, x1
    fc08:	lsl	x0, x0, #2
    fc0c:	add	x0, x0, x1
    fc10:	lsl	x0, x0, #3
    fc14:	mov	x1, x0
    fc18:	ldr	x0, [sp, #88]
    fc1c:	add	x19, x0, x1
    fc20:	mov	w0, w2
    fc24:	bl	f258 <elf_newscn@@ELFUTILS_1.0+0x324>
    fc28:	str	w0, [x19]
    fc2c:	ldr	x1, [sp, #128]
    fc30:	mov	x0, x1
    fc34:	lsl	x0, x0, #2
    fc38:	add	x0, x0, x1
    fc3c:	lsl	x0, x0, #3
    fc40:	mov	x1, x0
    fc44:	ldr	x0, [sp, #88]
    fc48:	add	x0, x0, x1
    fc4c:	ldr	w2, [x0, #4]
    fc50:	ldr	x1, [sp, #128]
    fc54:	mov	x0, x1
    fc58:	lsl	x0, x0, #2
    fc5c:	add	x0, x0, x1
    fc60:	lsl	x0, x0, #3
    fc64:	mov	x1, x0
    fc68:	ldr	x0, [sp, #88]
    fc6c:	add	x19, x0, x1
    fc70:	mov	w0, w2
    fc74:	bl	f258 <elf_newscn@@ELFUTILS_1.0+0x324>
    fc78:	str	w0, [x19, #4]
    fc7c:	ldr	x1, [sp, #128]
    fc80:	mov	x0, x1
    fc84:	lsl	x0, x0, #2
    fc88:	add	x0, x0, x1
    fc8c:	lsl	x0, x0, #3
    fc90:	mov	x1, x0
    fc94:	ldr	x0, [sp, #88]
    fc98:	add	x0, x0, x1
    fc9c:	ldr	w2, [x0, #8]
    fca0:	ldr	x1, [sp, #128]
    fca4:	mov	x0, x1
    fca8:	lsl	x0, x0, #2
    fcac:	add	x0, x0, x1
    fcb0:	lsl	x0, x0, #3
    fcb4:	mov	x1, x0
    fcb8:	ldr	x0, [sp, #88]
    fcbc:	add	x19, x0, x1
    fcc0:	mov	w0, w2
    fcc4:	bl	f258 <elf_newscn@@ELFUTILS_1.0+0x324>
    fcc8:	str	w0, [x19, #8]
    fccc:	ldr	x1, [sp, #128]
    fcd0:	mov	x0, x1
    fcd4:	lsl	x0, x0, #2
    fcd8:	add	x0, x0, x1
    fcdc:	lsl	x0, x0, #3
    fce0:	mov	x1, x0
    fce4:	ldr	x0, [sp, #88]
    fce8:	add	x0, x0, x1
    fcec:	ldr	w2, [x0, #12]
    fcf0:	ldr	x1, [sp, #128]
    fcf4:	mov	x0, x1
    fcf8:	lsl	x0, x0, #2
    fcfc:	add	x0, x0, x1
    fd00:	lsl	x0, x0, #3
    fd04:	mov	x1, x0
    fd08:	ldr	x0, [sp, #88]
    fd0c:	add	x19, x0, x1
    fd10:	mov	w0, w2
    fd14:	bl	f258 <elf_newscn@@ELFUTILS_1.0+0x324>
    fd18:	str	w0, [x19, #12]
    fd1c:	ldr	x1, [sp, #128]
    fd20:	mov	x0, x1
    fd24:	lsl	x0, x0, #2
    fd28:	add	x0, x0, x1
    fd2c:	lsl	x0, x0, #3
    fd30:	mov	x1, x0
    fd34:	ldr	x0, [sp, #88]
    fd38:	add	x0, x0, x1
    fd3c:	ldr	w2, [x0, #16]
    fd40:	ldr	x1, [sp, #128]
    fd44:	mov	x0, x1
    fd48:	lsl	x0, x0, #2
    fd4c:	add	x0, x0, x1
    fd50:	lsl	x0, x0, #3
    fd54:	mov	x1, x0
    fd58:	ldr	x0, [sp, #88]
    fd5c:	add	x19, x0, x1
    fd60:	mov	w0, w2
    fd64:	bl	f258 <elf_newscn@@ELFUTILS_1.0+0x324>
    fd68:	str	w0, [x19, #16]
    fd6c:	ldr	x1, [sp, #128]
    fd70:	mov	x0, x1
    fd74:	lsl	x0, x0, #2
    fd78:	add	x0, x0, x1
    fd7c:	lsl	x0, x0, #3
    fd80:	mov	x1, x0
    fd84:	ldr	x0, [sp, #88]
    fd88:	add	x0, x0, x1
    fd8c:	ldr	w2, [x0, #20]
    fd90:	ldr	x1, [sp, #128]
    fd94:	mov	x0, x1
    fd98:	lsl	x0, x0, #2
    fd9c:	add	x0, x0, x1
    fda0:	lsl	x0, x0, #3
    fda4:	mov	x1, x0
    fda8:	ldr	x0, [sp, #88]
    fdac:	add	x19, x0, x1
    fdb0:	mov	w0, w2
    fdb4:	bl	f258 <elf_newscn@@ELFUTILS_1.0+0x324>
    fdb8:	str	w0, [x19, #20]
    fdbc:	ldr	x1, [sp, #128]
    fdc0:	mov	x0, x1
    fdc4:	lsl	x0, x0, #2
    fdc8:	add	x0, x0, x1
    fdcc:	lsl	x0, x0, #3
    fdd0:	mov	x1, x0
    fdd4:	ldr	x0, [sp, #88]
    fdd8:	add	x0, x0, x1
    fddc:	ldr	w2, [x0, #24]
    fde0:	ldr	x1, [sp, #128]
    fde4:	mov	x0, x1
    fde8:	lsl	x0, x0, #2
    fdec:	add	x0, x0, x1
    fdf0:	lsl	x0, x0, #3
    fdf4:	mov	x1, x0
    fdf8:	ldr	x0, [sp, #88]
    fdfc:	add	x19, x0, x1
    fe00:	mov	w0, w2
    fe04:	bl	f258 <elf_newscn@@ELFUTILS_1.0+0x324>
    fe08:	str	w0, [x19, #24]
    fe0c:	ldr	x1, [sp, #128]
    fe10:	mov	x0, x1
    fe14:	lsl	x0, x0, #2
    fe18:	add	x0, x0, x1
    fe1c:	lsl	x0, x0, #3
    fe20:	mov	x1, x0
    fe24:	ldr	x0, [sp, #88]
    fe28:	add	x0, x0, x1
    fe2c:	ldr	w2, [x0, #28]
    fe30:	ldr	x1, [sp, #128]
    fe34:	mov	x0, x1
    fe38:	lsl	x0, x0, #2
    fe3c:	add	x0, x0, x1
    fe40:	lsl	x0, x0, #3
    fe44:	mov	x1, x0
    fe48:	ldr	x0, [sp, #88]
    fe4c:	add	x19, x0, x1
    fe50:	mov	w0, w2
    fe54:	bl	f258 <elf_newscn@@ELFUTILS_1.0+0x324>
    fe58:	str	w0, [x19, #28]
    fe5c:	ldr	x1, [sp, #128]
    fe60:	mov	x0, x1
    fe64:	lsl	x0, x0, #2
    fe68:	add	x0, x0, x1
    fe6c:	lsl	x0, x0, #3
    fe70:	mov	x1, x0
    fe74:	ldr	x0, [sp, #88]
    fe78:	add	x0, x0, x1
    fe7c:	ldr	w2, [x0, #32]
    fe80:	ldr	x1, [sp, #128]
    fe84:	mov	x0, x1
    fe88:	lsl	x0, x0, #2
    fe8c:	add	x0, x0, x1
    fe90:	lsl	x0, x0, #3
    fe94:	mov	x1, x0
    fe98:	ldr	x0, [sp, #88]
    fe9c:	add	x19, x0, x1
    fea0:	mov	w0, w2
    fea4:	bl	f258 <elf_newscn@@ELFUTILS_1.0+0x324>
    fea8:	str	w0, [x19, #32]
    feac:	ldr	x1, [sp, #128]
    feb0:	mov	x0, x1
    feb4:	lsl	x0, x0, #2
    feb8:	add	x0, x0, x1
    febc:	lsl	x0, x0, #3
    fec0:	mov	x1, x0
    fec4:	ldr	x0, [sp, #88]
    fec8:	add	x0, x0, x1
    fecc:	ldr	w2, [x0, #36]
    fed0:	ldr	x1, [sp, #128]
    fed4:	mov	x0, x1
    fed8:	lsl	x0, x0, #2
    fedc:	add	x0, x0, x1
    fee0:	lsl	x0, x0, #3
    fee4:	mov	x1, x0
    fee8:	ldr	x0, [sp, #88]
    feec:	add	x19, x0, x1
    fef0:	mov	w0, w2
    fef4:	bl	f258 <elf_newscn@@ELFUTILS_1.0+0x324>
    fef8:	str	w0, [x19, #36]
    fefc:	ldr	x0, [sp, #128]
    ff00:	add	x0, x0, #0x1
    ff04:	str	x0, [sp, #128]
    ff08:	ldr	x0, [sp, #56]
    ff0c:	ldr	x1, [sp, #128]
    ff10:	cmp	x1, x0
    ff14:	b.cc	fbdc <elf_newscn@@ELFUTILS_1.0+0xca8>  // b.lo, b.ul, b.last
    ff18:	b	ff40 <elf_newscn@@ELFUTILS_1.0+0x100c>
    ff1c:	mov	w0, #0x1b                  	// #27
    ff20:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
    ff24:	ldr	x0, [sp, #88]
    ff28:	bl	32a0 <free@plt>
    ff2c:	ldr	x0, [sp, #112]
    ff30:	str	xzr, [x0, #80]
    ff34:	ldr	x0, [sp, #112]
    ff38:	str	wzr, [x0, #124]
    ff3c:	b	fff0 <elf_newscn@@ELFUTILS_1.0+0x10bc>
    ff40:	str	xzr, [sp, #120]
    ff44:	b	ff9c <elf_newscn@@ELFUTILS_1.0+0x1068>
    ff48:	ldr	x0, [sp, #112]
    ff4c:	ldr	x2, [x0, #80]
    ff50:	ldr	x1, [sp, #120]
    ff54:	mov	x0, x1
    ff58:	lsl	x0, x0, #2
    ff5c:	add	x0, x0, x1
    ff60:	lsl	x0, x0, #3
    ff64:	add	x2, x2, x0
    ff68:	ldr	x3, [sp, #112]
    ff6c:	ldr	x1, [sp, #120]
    ff70:	mov	x0, x1
    ff74:	lsl	x0, x0, #1
    ff78:	add	x0, x0, x1
    ff7c:	lsl	x0, x0, #2
    ff80:	add	x0, x0, x1
    ff84:	lsl	x0, x0, #4
    ff88:	add	x0, x3, x0
    ff8c:	str	x2, [x0, #360]
    ff90:	ldr	x0, [sp, #120]
    ff94:	add	x0, x0, #0x1
    ff98:	str	x0, [sp, #120]
    ff9c:	ldr	x0, [sp, #56]
    ffa0:	ldr	x1, [sp, #120]
    ffa4:	cmp	x1, x0
    ffa8:	b.cc	ff48 <elf_newscn@@ELFUTILS_1.0+0x1014>  // b.lo, b.ul, b.last
    ffac:	ldr	x0, [sp, #40]
    ffb0:	ldr	x0, [x0, #144]
    ffb4:	str	x0, [sp, #152]
    ffb8:	ldr	x0, [sp, #152]
    ffbc:	cmp	x0, #0x0
    ffc0:	b.ne	fff0 <elf_newscn@@ELFUTILS_1.0+0x10bc>  // b.any
    ffc4:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    ffc8:	add	x3, x0, #0x918
    ffcc:	mov	w2, #0xdd                  	// #221
    ffd0:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    ffd4:	add	x1, x0, #0x828
    ffd8:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
    ffdc:	add	x0, x0, #0x908
    ffe0:	bl	33d0 <__assert_fail@plt>
    ffe4:	nop
    ffe8:	b	fff0 <elf_newscn@@ELFUTILS_1.0+0x10bc>
    ffec:	nop
    fff0:	ldr	x0, [sp, #152]
    fff4:	ldr	x19, [sp, #16]
    fff8:	ldp	x29, x30, [sp], #160
    fffc:	ret
   10000:	stp	x29, x30, [sp, #-32]!
   10004:	mov	x29, sp
   10008:	str	x0, [sp, #24]
   1000c:	ldr	x0, [sp, #24]
   10010:	cmp	x0, #0x0
   10014:	b.ne	10020 <elf_newscn@@ELFUTILS_1.0+0x10ec>  // b.any
   10018:	mov	w0, #0x0                   	// #0
   1001c:	b	1008c <elf_newscn@@ELFUTILS_1.0+0x1158>
   10020:	ldr	x0, [sp, #24]
   10024:	ldr	x0, [x0, #136]
   10028:	ldr	x0, [x0, #72]
   1002c:	cmp	x0, #0x0
   10030:	cset	w0, eq  // eq = none
   10034:	and	w0, w0, #0xff
   10038:	and	x0, x0, #0xff
   1003c:	cmp	x0, #0x0
   10040:	b.eq	10054 <elf_newscn@@ELFUTILS_1.0+0x1120>  // b.none
   10044:	mov	w0, #0x1a                  	// #26
   10048:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1004c:	mov	w0, #0x0                   	// #0
   10050:	b	1008c <elf_newscn@@ELFUTILS_1.0+0x1158>
   10054:	ldr	x0, [sp, #24]
   10058:	ldr	x0, [x0, #136]
   1005c:	ldr	w0, [x0, #32]
   10060:	cmp	w0, #0x1
   10064:	cset	w0, ne  // ne = any
   10068:	and	w0, w0, #0xff
   1006c:	and	x0, x0, #0xff
   10070:	cmp	x0, #0x0
   10074:	b.eq	10088 <elf_newscn@@ELFUTILS_1.0+0x1154>  // b.none
   10078:	mov	w0, #0x15                  	// #21
   1007c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   10080:	mov	w0, #0x0                   	// #0
   10084:	b	1008c <elf_newscn@@ELFUTILS_1.0+0x1158>
   10088:	mov	w0, #0x1                   	// #1
   1008c:	ldp	x29, x30, [sp], #32
   10090:	ret
   10094:	stp	x29, x30, [sp, #-48]!
   10098:	mov	x29, sp
   1009c:	str	x0, [sp, #24]
   100a0:	ldr	x0, [sp, #24]
   100a4:	bl	10000 <elf_newscn@@ELFUTILS_1.0+0x10cc>
   100a8:	and	w0, w0, #0xff
   100ac:	eor	w0, w0, #0x1
   100b0:	and	w0, w0, #0xff
   100b4:	cmp	w0, #0x0
   100b8:	b.eq	100c4 <elf_newscn@@ELFUTILS_1.0+0x1190>  // b.none
   100bc:	mov	x0, #0x0                   	// #0
   100c0:	b	10104 <elf_newscn@@ELFUTILS_1.0+0x11d0>
   100c4:	ldr	x0, [sp, #24]
   100c8:	ldr	x0, [x0, #144]
   100cc:	str	x0, [sp, #40]
   100d0:	ldr	x0, [sp, #40]
   100d4:	cmp	x0, #0x0
   100d8:	b.ne	10100 <elf_newscn@@ELFUTILS_1.0+0x11cc>  // b.any
   100dc:	ldr	x0, [sp, #24]
   100e0:	ldr	x0, [x0, #144]
   100e4:	str	x0, [sp, #40]
   100e8:	ldr	x0, [sp, #40]
   100ec:	cmp	x0, #0x0
   100f0:	b.ne	10100 <elf_newscn@@ELFUTILS_1.0+0x11cc>  // b.any
   100f4:	ldr	x0, [sp, #24]
   100f8:	bl	f40c <elf_newscn@@ELFUTILS_1.0+0x4d8>
   100fc:	str	x0, [sp, #40]
   10100:	ldr	x0, [sp, #40]
   10104:	ldp	x29, x30, [sp], #48
   10108:	ret
   1010c:	stp	x29, x30, [sp, #-48]!
   10110:	mov	x29, sp
   10114:	str	x0, [sp, #24]
   10118:	ldr	x0, [sp, #24]
   1011c:	bl	10000 <elf_newscn@@ELFUTILS_1.0+0x10cc>
   10120:	and	w0, w0, #0xff
   10124:	eor	w0, w0, #0x1
   10128:	and	w0, w0, #0xff
   1012c:	cmp	w0, #0x0
   10130:	b.eq	1013c <elf_newscn@@ELFUTILS_1.0+0x1208>  // b.none
   10134:	mov	x0, #0x0                   	// #0
   10138:	b	10164 <elf_newscn@@ELFUTILS_1.0+0x1230>
   1013c:	ldr	x0, [sp, #24]
   10140:	ldr	x0, [x0, #144]
   10144:	str	x0, [sp, #40]
   10148:	ldr	x0, [sp, #40]
   1014c:	cmp	x0, #0x0
   10150:	b.ne	10160 <elf_newscn@@ELFUTILS_1.0+0x122c>  // b.any
   10154:	ldr	x0, [sp, #24]
   10158:	bl	f40c <elf_newscn@@ELFUTILS_1.0+0x4d8>
   1015c:	str	x0, [sp, #40]
   10160:	ldr	x0, [sp, #40]
   10164:	ldp	x29, x30, [sp], #48
   10168:	ret

000000000001016c <elf32_getshdr@@ELFUTILS_1.0>:
   1016c:	stp	x29, x30, [sp, #-48]!
   10170:	mov	x29, sp
   10174:	str	x0, [sp, #24]
   10178:	ldr	x0, [sp, #24]
   1017c:	bl	10000 <elf_newscn@@ELFUTILS_1.0+0x10cc>
   10180:	and	w0, w0, #0xff
   10184:	eor	w0, w0, #0x1
   10188:	and	w0, w0, #0xff
   1018c:	cmp	w0, #0x0
   10190:	b.eq	1019c <elf32_getshdr@@ELFUTILS_1.0+0x30>  // b.none
   10194:	mov	x0, #0x0                   	// #0
   10198:	b	101ac <elf32_getshdr@@ELFUTILS_1.0+0x40>
   1019c:	ldr	x0, [sp, #24]
   101a0:	bl	10094 <elf_newscn@@ELFUTILS_1.0+0x1160>
   101a4:	str	x0, [sp, #40]
   101a8:	ldr	x0, [sp, #40]
   101ac:	ldp	x29, x30, [sp], #48
   101b0:	ret
   101b4:	sub	sp, sp, #0x10
   101b8:	str	w0, [sp, #12]
   101bc:	ldr	w0, [sp, #12]
   101c0:	rev	w0, w0
   101c4:	add	sp, sp, #0x10
   101c8:	ret
   101cc:	sub	sp, sp, #0x10
   101d0:	str	x0, [sp, #8]
   101d4:	ldr	x0, [sp, #8]
   101d8:	rev	x0, x0
   101dc:	add	sp, sp, #0x10
   101e0:	ret
   101e4:	stp	x29, x30, [sp, #-80]!
   101e8:	mov	x29, sp
   101ec:	str	w0, [sp, #44]
   101f0:	str	x1, [sp, #32]
   101f4:	str	x2, [sp, #24]
   101f8:	str	x3, [sp, #16]
   101fc:	str	xzr, [sp, #72]
   10200:	ldr	x0, [sp, #72]
   10204:	ldr	x1, [sp, #32]
   10208:	add	x4, x1, x0
   1020c:	ldr	x0, [sp, #72]
   10210:	ldr	x1, [sp, #24]
   10214:	sub	x2, x1, x0
   10218:	ldr	x1, [sp, #16]
   1021c:	ldr	x0, [sp, #72]
   10220:	add	x0, x1, x0
   10224:	mov	x3, x0
   10228:	mov	x1, x4
   1022c:	ldr	w0, [sp, #44]
   10230:	bl	3300 <pread@plt>
   10234:	str	x0, [sp, #64]
   10238:	ldr	x0, [sp, #64]
   1023c:	cmn	x0, #0x1
   10240:	b.ne	10254 <elf32_getshdr@@ELFUTILS_1.0+0xe8>  // b.any
   10244:	bl	33e0 <__errno_location@plt>
   10248:	ldr	w0, [x0]
   1024c:	cmp	w0, #0x4
   10250:	b.eq	10200 <elf32_getshdr@@ELFUTILS_1.0+0x94>  // b.none
   10254:	ldr	x0, [sp, #64]
   10258:	str	x0, [sp, #56]
   1025c:	ldr	x0, [sp, #56]
   10260:	cmp	x0, #0x0
   10264:	b.gt	10284 <elf32_getshdr@@ELFUTILS_1.0+0x118>
   10268:	ldr	x0, [sp, #56]
   1026c:	cmp	x0, #0x0
   10270:	b.ge	1027c <elf32_getshdr@@ELFUTILS_1.0+0x110>  // b.tcont
   10274:	ldr	x0, [sp, #56]
   10278:	b	102a8 <elf32_getshdr@@ELFUTILS_1.0+0x13c>
   1027c:	ldr	x0, [sp, #72]
   10280:	b	102a8 <elf32_getshdr@@ELFUTILS_1.0+0x13c>
   10284:	ldr	x1, [sp, #72]
   10288:	ldr	x0, [sp, #56]
   1028c:	add	x0, x1, x0
   10290:	str	x0, [sp, #72]
   10294:	ldr	x0, [sp, #72]
   10298:	ldr	x1, [sp, #24]
   1029c:	cmp	x1, x0
   102a0:	b.hi	10200 <elf32_getshdr@@ELFUTILS_1.0+0x94>  // b.pmore
   102a4:	ldr	x0, [sp, #72]
   102a8:	ldp	x29, x30, [sp], #80
   102ac:	ret
   102b0:	stp	x29, x30, [sp, #-48]!
   102b4:	mov	x29, sp
   102b8:	str	x0, [sp, #24]
   102bc:	ldr	x0, [sp, #24]
   102c0:	ldr	w0, [x0, #24]
   102c4:	cmp	w0, #0x1
   102c8:	b.ne	1030c <elf32_getshdr@@ELFUTILS_1.0+0x1a0>  // b.any
   102cc:	ldr	x0, [sp, #24]
   102d0:	ldr	x0, [x0, #72]
   102d4:	str	x0, [sp, #40]
   102d8:	b	10300 <elf32_getshdr@@ELFUTILS_1.0+0x194>
   102dc:	ldr	x0, [sp, #40]
   102e0:	ldr	w0, [x0, #60]
   102e4:	cmp	w0, #0x0
   102e8:	b.eq	102f4 <elf32_getshdr@@ELFUTILS_1.0+0x188>  // b.none
   102ec:	ldr	x0, [sp, #40]
   102f0:	bl	102b0 <elf32_getshdr@@ELFUTILS_1.0+0x144>
   102f4:	ldr	x0, [sp, #40]
   102f8:	ldr	x0, [x0, #16]
   102fc:	str	x0, [sp, #40]
   10300:	ldr	x0, [sp, #40]
   10304:	cmp	x0, #0x0
   10308:	b.ne	102dc <elf32_getshdr@@ELFUTILS_1.0+0x170>  // b.any
   1030c:	nop
   10310:	ldp	x29, x30, [sp], #48
   10314:	ret
   10318:	stp	x29, x30, [sp, #-48]!
   1031c:	mov	x29, sp
   10320:	str	x0, [sp, #24]
   10324:	ldr	x0, [sp, #24]
   10328:	ldr	w0, [x0, #24]
   1032c:	cmp	w0, #0x1
   10330:	b.ne	10374 <elf32_getshdr@@ELFUTILS_1.0+0x208>  // b.any
   10334:	ldr	x0, [sp, #24]
   10338:	ldr	x0, [x0, #72]
   1033c:	str	x0, [sp, #40]
   10340:	b	10368 <elf32_getshdr@@ELFUTILS_1.0+0x1fc>
   10344:	ldr	x0, [sp, #40]
   10348:	ldr	w0, [x0, #60]
   1034c:	cmp	w0, #0x0
   10350:	b.eq	1035c <elf32_getshdr@@ELFUTILS_1.0+0x1f0>  // b.none
   10354:	ldr	x0, [sp, #40]
   10358:	bl	10318 <elf32_getshdr@@ELFUTILS_1.0+0x1ac>
   1035c:	ldr	x0, [sp, #40]
   10360:	ldr	x0, [x0, #16]
   10364:	str	x0, [sp, #40]
   10368:	ldr	x0, [sp, #40]
   1036c:	cmp	x0, #0x0
   10370:	b.ne	10344 <elf32_getshdr@@ELFUTILS_1.0+0x1d8>  // b.any
   10374:	nop
   10378:	ldp	x29, x30, [sp], #48
   1037c:	ret
   10380:	stp	x29, x30, [sp, #-160]!
   10384:	mov	x29, sp
   10388:	str	x19, [sp, #16]
   1038c:	str	x0, [sp, #40]
   10390:	ldr	x0, [sp, #40]
   10394:	ldr	x0, [x0, #136]
   10398:	str	x0, [sp, #112]
   1039c:	ldr	x0, [sp, #112]
   103a0:	ldr	x0, [x0, #72]
   103a4:	str	x0, [sp, #104]
   103a8:	ldr	x0, [sp, #40]
   103ac:	ldr	x0, [x0, #144]
   103b0:	str	x0, [sp, #152]
   103b4:	ldr	x0, [sp, #152]
   103b8:	cmp	x0, #0x0
   103bc:	b.ne	10c74 <elf32_getshdr@@ELFUTILS_1.0+0xb08>  // b.any
   103c0:	add	x0, sp, #0x38
   103c4:	mov	x1, x0
   103c8:	ldr	x0, [sp, #112]
   103cc:	bl	1d64c <elf_getphdrnum@@ELFUTILS_1.6+0x70>
   103d0:	cmp	w0, #0x0
   103d4:	b.ne	10c7c <elf32_getshdr@@ELFUTILS_1.0+0xb10>  // b.any
   103d8:	ldr	x1, [sp, #56]
   103dc:	mov	x0, #0x3ffffffffffffff     	// #288230376151711743
   103e0:	cmp	x1, x0
   103e4:	b.hi	10c7c <elf32_getshdr@@ELFUTILS_1.0+0xb10>  // b.pmore
   103e8:	ldr	x0, [sp, #56]
   103ec:	lsl	x0, x0, #6
   103f0:	str	x0, [sp, #96]
   103f4:	ldr	x0, [sp, #96]
   103f8:	bl	3140 <malloc@plt>
   103fc:	mov	x1, x0
   10400:	ldr	x0, [sp, #112]
   10404:	str	x1, [x0, #80]
   10408:	ldr	x0, [sp, #112]
   1040c:	ldr	x0, [x0, #80]
   10410:	str	x0, [sp, #88]
   10414:	ldr	x0, [sp, #112]
   10418:	ldr	x0, [x0, #80]
   1041c:	cmp	x0, #0x0
   10420:	b.ne	10430 <elf32_getshdr@@ELFUTILS_1.0+0x2c4>  // b.any
   10424:	mov	w0, #0x8                   	// #8
   10428:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1042c:	b	10c80 <elf32_getshdr@@ELFUTILS_1.0+0xb14>
   10430:	ldr	x0, [sp, #112]
   10434:	mov	w1, #0x1                   	// #1
   10438:	str	w1, [x0, #124]
   1043c:	ldr	x0, [sp, #112]
   10440:	ldr	x0, [x0]
   10444:	cmp	x0, #0x0
   10448:	b.eq	10918 <elf32_getshdr@@ELFUTILS_1.0+0x7ac>  // b.none
   1044c:	ldr	x0, [sp, #104]
   10450:	ldr	x1, [x0, #40]
   10454:	ldr	x0, [sp, #112]
   10458:	ldr	x0, [x0, #48]
   1045c:	cmp	x1, x0
   10460:	cset	w0, cs  // cs = hs, nlast
   10464:	and	w0, w0, #0xff
   10468:	and	x0, x0, #0xff
   1046c:	cmp	x0, #0x0
   10470:	b.ne	104a4 <elf32_getshdr@@ELFUTILS_1.0+0x338>  // b.any
   10474:	ldr	x0, [sp, #112]
   10478:	ldr	x1, [x0, #48]
   1047c:	ldr	x0, [sp, #104]
   10480:	ldr	x0, [x0, #40]
   10484:	sub	x0, x1, x0
   10488:	ldr	x1, [sp, #96]
   1048c:	cmp	x1, x0
   10490:	cset	w0, hi  // hi = pmore
   10494:	and	w0, w0, #0xff
   10498:	and	x0, x0, #0xff
   1049c:	cmp	x0, #0x0
   104a0:	b.eq	104b0 <elf32_getshdr@@ELFUTILS_1.0+0x344>  // b.none
   104a4:	mov	w0, #0x20                  	// #32
   104a8:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   104ac:	b	10bc0 <elf32_getshdr@@ELFUTILS_1.0+0xa54>
   104b0:	ldr	x0, [sp, #112]
   104b4:	ldr	x1, [x0]
   104b8:	ldr	x0, [sp, #112]
   104bc:	ldr	x0, [x0, #40]
   104c0:	mov	x2, x0
   104c4:	ldr	x0, [sp, #104]
   104c8:	ldr	x0, [x0, #40]
   104cc:	add	x0, x2, x0
   104d0:	add	x0, x1, x0
   104d4:	str	x0, [sp, #72]
   104d8:	ldr	x0, [sp, #112]
   104dc:	ldr	w0, [x0, #56]
   104e0:	and	w0, w0, #0x80
   104e4:	cmp	w0, #0x0
   104e8:	b.ne	1053c <elf32_getshdr@@ELFUTILS_1.0+0x3d0>  // b.any
   104ec:	ldr	x0, [sp, #104]
   104f0:	ldrb	w0, [x0, #5]
   104f4:	cmp	w0, #0x1
   104f8:	b.ne	1053c <elf32_getshdr@@ELFUTILS_1.0+0x3d0>  // b.any
   104fc:	ldr	x0, [sp, #112]
   10500:	ldr	w0, [x0, #28]
   10504:	cmp	w0, #0x8
   10508:	b.eq	1053c <elf32_getshdr@@ELFUTILS_1.0+0x3d0>  // b.none
   1050c:	ldr	x0, [sp, #72]
   10510:	and	x0, x0, #0x7
   10514:	cmp	x0, #0x0
   10518:	b.ne	1053c <elf32_getshdr@@ELFUTILS_1.0+0x3d0>  // b.any
   1051c:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   10520:	add	x3, x0, #0xa20
   10524:	mov	w2, #0x64                  	// #100
   10528:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   1052c:	add	x1, x0, #0x930
   10530:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   10534:	add	x0, x0, #0x940
   10538:	bl	33d0 <__assert_fail@plt>
   1053c:	ldr	x0, [sp, #104]
   10540:	ldrb	w0, [x0, #5]
   10544:	cmp	w0, #0x1
   10548:	b.ne	10560 <elf32_getshdr@@ELFUTILS_1.0+0x3f4>  // b.any
   1054c:	ldr	x2, [sp, #96]
   10550:	ldr	x1, [sp, #72]
   10554:	ldr	x0, [sp, #88]
   10558:	bl	30a0 <memcpy@plt>
   1055c:	b	10bdc <elf32_getshdr@@ELFUTILS_1.0+0xa70>
   10560:	ldr	x0, [sp, #72]
   10564:	and	x0, x0, #0x7
   10568:	cmp	x0, #0x0
   1056c:	cset	w0, ne  // ne = any
   10570:	strb	w0, [sp, #71]
   10574:	ldrb	w0, [sp, #71]
   10578:	eor	w0, w0, #0x1
   1057c:	and	w0, w0, #0xff
   10580:	cmp	w0, #0x0
   10584:	b.eq	105b4 <elf32_getshdr@@ELFUTILS_1.0+0x448>  // b.none
   10588:	ldr	x0, [sp, #112]
   1058c:	ldr	x1, [x0]
   10590:	ldr	x0, [sp, #112]
   10594:	ldr	x0, [x0, #40]
   10598:	mov	x2, x0
   1059c:	ldr	x0, [sp, #104]
   105a0:	ldr	x0, [x0, #40]
   105a4:	add	x0, x2, x0
   105a8:	add	x0, x1, x0
   105ac:	str	x0, [sp, #144]
   105b0:	b	1061c <elf32_getshdr@@ELFUTILS_1.0+0x4b0>
   105b4:	ldr	x0, [sp, #96]
   105b8:	bl	3140 <malloc@plt>
   105bc:	str	x0, [sp, #144]
   105c0:	ldr	x0, [sp, #144]
   105c4:	cmp	x0, #0x0
   105c8:	cset	w0, eq  // eq = none
   105cc:	and	w0, w0, #0xff
   105d0:	and	x0, x0, #0xff
   105d4:	cmp	x0, #0x0
   105d8:	b.eq	105e8 <elf32_getshdr@@ELFUTILS_1.0+0x47c>  // b.none
   105dc:	mov	w0, #0x8                   	// #8
   105e0:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   105e4:	b	10c80 <elf32_getshdr@@ELFUTILS_1.0+0xb14>
   105e8:	ldr	x0, [sp, #112]
   105ec:	ldr	x1, [x0]
   105f0:	ldr	x0, [sp, #112]
   105f4:	ldr	x0, [x0, #40]
   105f8:	mov	x2, x0
   105fc:	ldr	x0, [sp, #104]
   10600:	ldr	x0, [x0, #40]
   10604:	add	x0, x2, x0
   10608:	add	x0, x1, x0
   1060c:	ldr	x2, [sp, #96]
   10610:	mov	x1, x0
   10614:	ldr	x0, [sp, #144]
   10618:	bl	30a0 <memcpy@plt>
   1061c:	str	xzr, [sp, #136]
   10620:	b	108f0 <elf32_getshdr@@ELFUTILS_1.0+0x784>
   10624:	ldr	x0, [sp, #136]
   10628:	lsl	x0, x0, #6
   1062c:	ldr	x1, [sp, #144]
   10630:	add	x0, x1, x0
   10634:	ldr	w2, [x0]
   10638:	ldr	x0, [sp, #136]
   1063c:	lsl	x0, x0, #6
   10640:	ldr	x1, [sp, #88]
   10644:	add	x19, x1, x0
   10648:	mov	w0, w2
   1064c:	bl	101b4 <elf32_getshdr@@ELFUTILS_1.0+0x48>
   10650:	str	w0, [x19]
   10654:	ldr	x0, [sp, #136]
   10658:	lsl	x0, x0, #6
   1065c:	ldr	x1, [sp, #144]
   10660:	add	x0, x1, x0
   10664:	ldr	w2, [x0, #4]
   10668:	ldr	x0, [sp, #136]
   1066c:	lsl	x0, x0, #6
   10670:	ldr	x1, [sp, #88]
   10674:	add	x19, x1, x0
   10678:	mov	w0, w2
   1067c:	bl	101b4 <elf32_getshdr@@ELFUTILS_1.0+0x48>
   10680:	str	w0, [x19, #4]
   10684:	ldr	x0, [sp, #136]
   10688:	lsl	x0, x0, #6
   1068c:	ldr	x1, [sp, #144]
   10690:	add	x0, x1, x0
   10694:	ldr	x2, [x0, #8]
   10698:	ldr	x0, [sp, #136]
   1069c:	lsl	x0, x0, #6
   106a0:	ldr	x1, [sp, #88]
   106a4:	add	x19, x1, x0
   106a8:	mov	x0, x2
   106ac:	bl	101cc <elf32_getshdr@@ELFUTILS_1.0+0x60>
   106b0:	str	x0, [x19, #8]
   106b4:	ldr	x0, [sp, #136]
   106b8:	lsl	x0, x0, #6
   106bc:	ldr	x1, [sp, #144]
   106c0:	add	x0, x1, x0
   106c4:	ldr	x2, [x0, #16]
   106c8:	ldr	x0, [sp, #136]
   106cc:	lsl	x0, x0, #6
   106d0:	ldr	x1, [sp, #88]
   106d4:	add	x19, x1, x0
   106d8:	mov	x0, x2
   106dc:	bl	101cc <elf32_getshdr@@ELFUTILS_1.0+0x60>
   106e0:	str	x0, [x19, #16]
   106e4:	ldr	x0, [sp, #136]
   106e8:	lsl	x0, x0, #6
   106ec:	ldr	x1, [sp, #144]
   106f0:	add	x0, x1, x0
   106f4:	ldr	x2, [x0, #24]
   106f8:	ldr	x0, [sp, #136]
   106fc:	lsl	x0, x0, #6
   10700:	ldr	x1, [sp, #88]
   10704:	add	x19, x1, x0
   10708:	mov	x0, x2
   1070c:	bl	101cc <elf32_getshdr@@ELFUTILS_1.0+0x60>
   10710:	str	x0, [x19, #24]
   10714:	ldr	x0, [sp, #136]
   10718:	lsl	x0, x0, #6
   1071c:	ldr	x1, [sp, #144]
   10720:	add	x0, x1, x0
   10724:	ldr	x2, [x0, #32]
   10728:	ldr	x0, [sp, #136]
   1072c:	lsl	x0, x0, #6
   10730:	ldr	x1, [sp, #88]
   10734:	add	x19, x1, x0
   10738:	mov	x0, x2
   1073c:	bl	101cc <elf32_getshdr@@ELFUTILS_1.0+0x60>
   10740:	str	x0, [x19, #32]
   10744:	ldr	x0, [sp, #136]
   10748:	lsl	x0, x0, #6
   1074c:	ldr	x1, [sp, #144]
   10750:	add	x0, x1, x0
   10754:	ldr	w2, [x0, #40]
   10758:	ldr	x0, [sp, #136]
   1075c:	lsl	x0, x0, #6
   10760:	ldr	x1, [sp, #88]
   10764:	add	x19, x1, x0
   10768:	mov	w0, w2
   1076c:	bl	101b4 <elf32_getshdr@@ELFUTILS_1.0+0x48>
   10770:	str	w0, [x19, #40]
   10774:	ldr	x0, [sp, #136]
   10778:	lsl	x0, x0, #6
   1077c:	ldr	x1, [sp, #144]
   10780:	add	x0, x1, x0
   10784:	ldr	w2, [x0, #44]
   10788:	ldr	x0, [sp, #136]
   1078c:	lsl	x0, x0, #6
   10790:	ldr	x1, [sp, #88]
   10794:	add	x19, x1, x0
   10798:	mov	w0, w2
   1079c:	bl	101b4 <elf32_getshdr@@ELFUTILS_1.0+0x48>
   107a0:	str	w0, [x19, #44]
   107a4:	ldr	x0, [sp, #136]
   107a8:	lsl	x0, x0, #6
   107ac:	ldr	x1, [sp, #144]
   107b0:	add	x0, x1, x0
   107b4:	ldr	x2, [x0, #48]
   107b8:	ldr	x0, [sp, #136]
   107bc:	lsl	x0, x0, #6
   107c0:	ldr	x1, [sp, #88]
   107c4:	add	x19, x1, x0
   107c8:	mov	x0, x2
   107cc:	bl	101cc <elf32_getshdr@@ELFUTILS_1.0+0x60>
   107d0:	str	x0, [x19, #48]
   107d4:	ldr	x0, [sp, #136]
   107d8:	lsl	x0, x0, #6
   107dc:	ldr	x1, [sp, #144]
   107e0:	add	x0, x1, x0
   107e4:	ldr	x2, [x0, #56]
   107e8:	ldr	x0, [sp, #136]
   107ec:	lsl	x0, x0, #6
   107f0:	ldr	x1, [sp, #88]
   107f4:	add	x19, x1, x0
   107f8:	mov	x0, x2
   107fc:	bl	101cc <elf32_getshdr@@ELFUTILS_1.0+0x60>
   10800:	str	x0, [x19, #56]
   10804:	ldr	x0, [sp, #136]
   10808:	lsl	x0, x0, #6
   1080c:	ldr	x1, [sp, #88]
   10810:	add	x0, x1, x0
   10814:	ldr	w0, [x0, #4]
   10818:	cmp	w0, #0x12
   1081c:	b.ne	10888 <elf32_getshdr@@ELFUTILS_1.0+0x71c>  // b.any
   10820:	ldr	x0, [sp, #136]
   10824:	lsl	x0, x0, #6
   10828:	ldr	x1, [sp, #88]
   1082c:	add	x0, x1, x0
   10830:	ldr	w0, [x0, #40]
   10834:	mov	w1, w0
   10838:	ldr	x0, [sp, #56]
   1083c:	cmp	x1, x0
   10840:	b.cs	10888 <elf32_getshdr@@ELFUTILS_1.0+0x71c>  // b.hs, b.nlast
   10844:	ldr	x0, [sp, #136]
   10848:	lsl	x0, x0, #6
   1084c:	ldr	x1, [sp, #88]
   10850:	add	x0, x1, x0
   10854:	ldr	w0, [x0, #40]
   10858:	ldr	x1, [sp, #136]
   1085c:	mov	w3, w1
   10860:	ldr	x2, [sp, #112]
   10864:	mov	w1, w0
   10868:	mov	x0, x1
   1086c:	lsl	x0, x0, #1
   10870:	add	x0, x0, x1
   10874:	lsl	x0, x0, #2
   10878:	add	x0, x0, x1
   1087c:	lsl	x0, x0, #4
   10880:	add	x0, x2, x0
   10884:	str	w3, [x0, #340]
   10888:	ldr	x2, [sp, #112]
   1088c:	ldr	x1, [sp, #136]
   10890:	mov	x0, x1
   10894:	lsl	x0, x0, #1
   10898:	add	x0, x0, x1
   1089c:	lsl	x0, x0, #2
   108a0:	add	x0, x0, x1
   108a4:	lsl	x0, x0, #4
   108a8:	add	x0, x2, x0
   108ac:	ldr	w0, [x0, #340]
   108b0:	cmp	w0, #0x0
   108b4:	b.ne	108e4 <elf32_getshdr@@ELFUTILS_1.0+0x778>  // b.any
   108b8:	ldr	x2, [sp, #112]
   108bc:	ldr	x1, [sp, #136]
   108c0:	mov	x0, x1
   108c4:	lsl	x0, x0, #1
   108c8:	add	x0, x0, x1
   108cc:	lsl	x0, x0, #2
   108d0:	add	x0, x0, x1
   108d4:	lsl	x0, x0, #4
   108d8:	add	x0, x2, x0
   108dc:	mov	w1, #0xffffffff            	// #-1
   108e0:	str	w1, [x0, #340]
   108e4:	ldr	x0, [sp, #136]
   108e8:	add	x0, x0, #0x1
   108ec:	str	x0, [sp, #136]
   108f0:	ldr	x0, [sp, #56]
   108f4:	ldr	x1, [sp, #136]
   108f8:	cmp	x1, x0
   108fc:	b.cc	10624 <elf32_getshdr@@ELFUTILS_1.0+0x4b8>  // b.lo, b.ul, b.last
   10900:	ldrb	w0, [sp, #71]
   10904:	cmp	w0, #0x0
   10908:	b.eq	10bdc <elf32_getshdr@@ELFUTILS_1.0+0xa70>  // b.none
   1090c:	ldr	x0, [sp, #144]
   10910:	bl	32a0 <free@plt>
   10914:	b	10bdc <elf32_getshdr@@ELFUTILS_1.0+0xa70>
   10918:	ldr	x0, [sp, #112]
   1091c:	ldr	w0, [x0, #36]
   10920:	cmn	w0, #0x1
   10924:	cset	w0, ne  // ne = any
   10928:	and	w0, w0, #0xff
   1092c:	and	x0, x0, #0xff
   10930:	cmp	x0, #0x0
   10934:	b.eq	10bb8 <elf32_getshdr@@ELFUTILS_1.0+0xa4c>  // b.none
   10938:	ldr	x0, [sp, #112]
   1093c:	ldr	w4, [x0, #36]
   10940:	ldr	x0, [sp, #112]
   10944:	ldr	x1, [x0, #80]
   10948:	ldr	x0, [sp, #112]
   1094c:	ldr	x0, [x0, #40]
   10950:	mov	x2, x0
   10954:	ldr	x0, [sp, #104]
   10958:	ldr	x0, [x0, #40]
   1095c:	add	x0, x2, x0
   10960:	mov	x3, x0
   10964:	ldr	x2, [sp, #96]
   10968:	mov	w0, w4
   1096c:	bl	101e4 <elf32_getshdr@@ELFUTILS_1.0+0x78>
   10970:	str	x0, [sp, #80]
   10974:	ldr	x0, [sp, #96]
   10978:	ldr	x1, [sp, #80]
   1097c:	cmp	x1, x0
   10980:	cset	w0, ne  // ne = any
   10984:	and	w0, w0, #0xff
   10988:	and	x0, x0, #0xff
   1098c:	cmp	x0, #0x0
   10990:	b.eq	109a0 <elf32_getshdr@@ELFUTILS_1.0+0x834>  // b.none
   10994:	mov	w0, #0x13                  	// #19
   10998:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1099c:	b	10bc0 <elf32_getshdr@@ELFUTILS_1.0+0xa54>
   109a0:	ldr	x0, [sp, #104]
   109a4:	ldrb	w0, [x0, #5]
   109a8:	cmp	w0, #0x1
   109ac:	b.eq	10bdc <elf32_getshdr@@ELFUTILS_1.0+0xa70>  // b.none
   109b0:	str	xzr, [sp, #128]
   109b4:	b	10ba4 <elf32_getshdr@@ELFUTILS_1.0+0xa38>
   109b8:	ldr	x0, [sp, #128]
   109bc:	lsl	x0, x0, #6
   109c0:	ldr	x1, [sp, #88]
   109c4:	add	x0, x1, x0
   109c8:	ldr	w2, [x0]
   109cc:	ldr	x0, [sp, #128]
   109d0:	lsl	x0, x0, #6
   109d4:	ldr	x1, [sp, #88]
   109d8:	add	x19, x1, x0
   109dc:	mov	w0, w2
   109e0:	bl	101b4 <elf32_getshdr@@ELFUTILS_1.0+0x48>
   109e4:	str	w0, [x19]
   109e8:	ldr	x0, [sp, #128]
   109ec:	lsl	x0, x0, #6
   109f0:	ldr	x1, [sp, #88]
   109f4:	add	x0, x1, x0
   109f8:	ldr	w2, [x0, #4]
   109fc:	ldr	x0, [sp, #128]
   10a00:	lsl	x0, x0, #6
   10a04:	ldr	x1, [sp, #88]
   10a08:	add	x19, x1, x0
   10a0c:	mov	w0, w2
   10a10:	bl	101b4 <elf32_getshdr@@ELFUTILS_1.0+0x48>
   10a14:	str	w0, [x19, #4]
   10a18:	ldr	x0, [sp, #128]
   10a1c:	lsl	x0, x0, #6
   10a20:	ldr	x1, [sp, #88]
   10a24:	add	x0, x1, x0
   10a28:	ldr	x2, [x0, #8]
   10a2c:	ldr	x0, [sp, #128]
   10a30:	lsl	x0, x0, #6
   10a34:	ldr	x1, [sp, #88]
   10a38:	add	x19, x1, x0
   10a3c:	mov	x0, x2
   10a40:	bl	101cc <elf32_getshdr@@ELFUTILS_1.0+0x60>
   10a44:	str	x0, [x19, #8]
   10a48:	ldr	x0, [sp, #128]
   10a4c:	lsl	x0, x0, #6
   10a50:	ldr	x1, [sp, #88]
   10a54:	add	x0, x1, x0
   10a58:	ldr	x2, [x0, #16]
   10a5c:	ldr	x0, [sp, #128]
   10a60:	lsl	x0, x0, #6
   10a64:	ldr	x1, [sp, #88]
   10a68:	add	x19, x1, x0
   10a6c:	mov	x0, x2
   10a70:	bl	101cc <elf32_getshdr@@ELFUTILS_1.0+0x60>
   10a74:	str	x0, [x19, #16]
   10a78:	ldr	x0, [sp, #128]
   10a7c:	lsl	x0, x0, #6
   10a80:	ldr	x1, [sp, #88]
   10a84:	add	x0, x1, x0
   10a88:	ldr	x2, [x0, #24]
   10a8c:	ldr	x0, [sp, #128]
   10a90:	lsl	x0, x0, #6
   10a94:	ldr	x1, [sp, #88]
   10a98:	add	x19, x1, x0
   10a9c:	mov	x0, x2
   10aa0:	bl	101cc <elf32_getshdr@@ELFUTILS_1.0+0x60>
   10aa4:	str	x0, [x19, #24]
   10aa8:	ldr	x0, [sp, #128]
   10aac:	lsl	x0, x0, #6
   10ab0:	ldr	x1, [sp, #88]
   10ab4:	add	x0, x1, x0
   10ab8:	ldr	x2, [x0, #32]
   10abc:	ldr	x0, [sp, #128]
   10ac0:	lsl	x0, x0, #6
   10ac4:	ldr	x1, [sp, #88]
   10ac8:	add	x19, x1, x0
   10acc:	mov	x0, x2
   10ad0:	bl	101cc <elf32_getshdr@@ELFUTILS_1.0+0x60>
   10ad4:	str	x0, [x19, #32]
   10ad8:	ldr	x0, [sp, #128]
   10adc:	lsl	x0, x0, #6
   10ae0:	ldr	x1, [sp, #88]
   10ae4:	add	x0, x1, x0
   10ae8:	ldr	w2, [x0, #40]
   10aec:	ldr	x0, [sp, #128]
   10af0:	lsl	x0, x0, #6
   10af4:	ldr	x1, [sp, #88]
   10af8:	add	x19, x1, x0
   10afc:	mov	w0, w2
   10b00:	bl	101b4 <elf32_getshdr@@ELFUTILS_1.0+0x48>
   10b04:	str	w0, [x19, #40]
   10b08:	ldr	x0, [sp, #128]
   10b0c:	lsl	x0, x0, #6
   10b10:	ldr	x1, [sp, #88]
   10b14:	add	x0, x1, x0
   10b18:	ldr	w2, [x0, #44]
   10b1c:	ldr	x0, [sp, #128]
   10b20:	lsl	x0, x0, #6
   10b24:	ldr	x1, [sp, #88]
   10b28:	add	x19, x1, x0
   10b2c:	mov	w0, w2
   10b30:	bl	101b4 <elf32_getshdr@@ELFUTILS_1.0+0x48>
   10b34:	str	w0, [x19, #44]
   10b38:	ldr	x0, [sp, #128]
   10b3c:	lsl	x0, x0, #6
   10b40:	ldr	x1, [sp, #88]
   10b44:	add	x0, x1, x0
   10b48:	ldr	x2, [x0, #48]
   10b4c:	ldr	x0, [sp, #128]
   10b50:	lsl	x0, x0, #6
   10b54:	ldr	x1, [sp, #88]
   10b58:	add	x19, x1, x0
   10b5c:	mov	x0, x2
   10b60:	bl	101cc <elf32_getshdr@@ELFUTILS_1.0+0x60>
   10b64:	str	x0, [x19, #48]
   10b68:	ldr	x0, [sp, #128]
   10b6c:	lsl	x0, x0, #6
   10b70:	ldr	x1, [sp, #88]
   10b74:	add	x0, x1, x0
   10b78:	ldr	x2, [x0, #56]
   10b7c:	ldr	x0, [sp, #128]
   10b80:	lsl	x0, x0, #6
   10b84:	ldr	x1, [sp, #88]
   10b88:	add	x19, x1, x0
   10b8c:	mov	x0, x2
   10b90:	bl	101cc <elf32_getshdr@@ELFUTILS_1.0+0x60>
   10b94:	str	x0, [x19, #56]
   10b98:	ldr	x0, [sp, #128]
   10b9c:	add	x0, x0, #0x1
   10ba0:	str	x0, [sp, #128]
   10ba4:	ldr	x0, [sp, #56]
   10ba8:	ldr	x1, [sp, #128]
   10bac:	cmp	x1, x0
   10bb0:	b.cc	109b8 <elf32_getshdr@@ELFUTILS_1.0+0x84c>  // b.lo, b.ul, b.last
   10bb4:	b	10bdc <elf32_getshdr@@ELFUTILS_1.0+0xa70>
   10bb8:	mov	w0, #0x1b                  	// #27
   10bbc:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   10bc0:	ldr	x0, [sp, #88]
   10bc4:	bl	32a0 <free@plt>
   10bc8:	ldr	x0, [sp, #112]
   10bcc:	str	xzr, [x0, #80]
   10bd0:	ldr	x0, [sp, #112]
   10bd4:	str	wzr, [x0, #124]
   10bd8:	b	10c80 <elf32_getshdr@@ELFUTILS_1.0+0xb14>
   10bdc:	str	xzr, [sp, #120]
   10be0:	b	10c2c <elf32_getshdr@@ELFUTILS_1.0+0xac0>
   10be4:	ldr	x0, [sp, #112]
   10be8:	ldr	x1, [x0, #80]
   10bec:	ldr	x0, [sp, #120]
   10bf0:	lsl	x0, x0, #6
   10bf4:	add	x2, x1, x0
   10bf8:	ldr	x3, [sp, #112]
   10bfc:	ldr	x1, [sp, #120]
   10c00:	mov	x0, x1
   10c04:	lsl	x0, x0, #1
   10c08:	add	x0, x0, x1
   10c0c:	lsl	x0, x0, #2
   10c10:	add	x0, x0, x1
   10c14:	lsl	x0, x0, #4
   10c18:	add	x0, x3, x0
   10c1c:	str	x2, [x0, #360]
   10c20:	ldr	x0, [sp, #120]
   10c24:	add	x0, x0, #0x1
   10c28:	str	x0, [sp, #120]
   10c2c:	ldr	x0, [sp, #56]
   10c30:	ldr	x1, [sp, #120]
   10c34:	cmp	x1, x0
   10c38:	b.cc	10be4 <elf32_getshdr@@ELFUTILS_1.0+0xa78>  // b.lo, b.ul, b.last
   10c3c:	ldr	x0, [sp, #40]
   10c40:	ldr	x0, [x0, #144]
   10c44:	str	x0, [sp, #152]
   10c48:	ldr	x0, [sp, #152]
   10c4c:	cmp	x0, #0x0
   10c50:	b.ne	10c80 <elf32_getshdr@@ELFUTILS_1.0+0xb14>  // b.any
   10c54:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   10c58:	add	x3, x0, #0xa20
   10c5c:	mov	w2, #0xdd                  	// #221
   10c60:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   10c64:	add	x1, x0, #0x930
   10c68:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   10c6c:	add	x0, x0, #0xa10
   10c70:	bl	33d0 <__assert_fail@plt>
   10c74:	nop
   10c78:	b	10c80 <elf32_getshdr@@ELFUTILS_1.0+0xb14>
   10c7c:	nop
   10c80:	ldr	x0, [sp, #152]
   10c84:	ldr	x19, [sp, #16]
   10c88:	ldp	x29, x30, [sp], #160
   10c8c:	ret
   10c90:	stp	x29, x30, [sp, #-32]!
   10c94:	mov	x29, sp
   10c98:	str	x0, [sp, #24]
   10c9c:	ldr	x0, [sp, #24]
   10ca0:	cmp	x0, #0x0
   10ca4:	b.ne	10cb0 <elf32_getshdr@@ELFUTILS_1.0+0xb44>  // b.any
   10ca8:	mov	w0, #0x0                   	// #0
   10cac:	b	10d1c <elf32_getshdr@@ELFUTILS_1.0+0xbb0>
   10cb0:	ldr	x0, [sp, #24]
   10cb4:	ldr	x0, [x0, #136]
   10cb8:	ldr	x0, [x0, #72]
   10cbc:	cmp	x0, #0x0
   10cc0:	cset	w0, eq  // eq = none
   10cc4:	and	w0, w0, #0xff
   10cc8:	and	x0, x0, #0xff
   10ccc:	cmp	x0, #0x0
   10cd0:	b.eq	10ce4 <elf32_getshdr@@ELFUTILS_1.0+0xb78>  // b.none
   10cd4:	mov	w0, #0x1a                  	// #26
   10cd8:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   10cdc:	mov	w0, #0x0                   	// #0
   10ce0:	b	10d1c <elf32_getshdr@@ELFUTILS_1.0+0xbb0>
   10ce4:	ldr	x0, [sp, #24]
   10ce8:	ldr	x0, [x0, #136]
   10cec:	ldr	w0, [x0, #32]
   10cf0:	cmp	w0, #0x2
   10cf4:	cset	w0, ne  // ne = any
   10cf8:	and	w0, w0, #0xff
   10cfc:	and	x0, x0, #0xff
   10d00:	cmp	x0, #0x0
   10d04:	b.eq	10d18 <elf32_getshdr@@ELFUTILS_1.0+0xbac>  // b.none
   10d08:	mov	w0, #0x15                  	// #21
   10d0c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   10d10:	mov	w0, #0x0                   	// #0
   10d14:	b	10d1c <elf32_getshdr@@ELFUTILS_1.0+0xbb0>
   10d18:	mov	w0, #0x1                   	// #1
   10d1c:	ldp	x29, x30, [sp], #32
   10d20:	ret
   10d24:	stp	x29, x30, [sp, #-48]!
   10d28:	mov	x29, sp
   10d2c:	str	x0, [sp, #24]
   10d30:	ldr	x0, [sp, #24]
   10d34:	bl	10c90 <elf32_getshdr@@ELFUTILS_1.0+0xb24>
   10d38:	and	w0, w0, #0xff
   10d3c:	eor	w0, w0, #0x1
   10d40:	and	w0, w0, #0xff
   10d44:	cmp	w0, #0x0
   10d48:	b.eq	10d54 <elf32_getshdr@@ELFUTILS_1.0+0xbe8>  // b.none
   10d4c:	mov	x0, #0x0                   	// #0
   10d50:	b	10d94 <elf32_getshdr@@ELFUTILS_1.0+0xc28>
   10d54:	ldr	x0, [sp, #24]
   10d58:	ldr	x0, [x0, #144]
   10d5c:	str	x0, [sp, #40]
   10d60:	ldr	x0, [sp, #40]
   10d64:	cmp	x0, #0x0
   10d68:	b.ne	10d90 <elf32_getshdr@@ELFUTILS_1.0+0xc24>  // b.any
   10d6c:	ldr	x0, [sp, #24]
   10d70:	ldr	x0, [x0, #144]
   10d74:	str	x0, [sp, #40]
   10d78:	ldr	x0, [sp, #40]
   10d7c:	cmp	x0, #0x0
   10d80:	b.ne	10d90 <elf32_getshdr@@ELFUTILS_1.0+0xc24>  // b.any
   10d84:	ldr	x0, [sp, #24]
   10d88:	bl	10380 <elf32_getshdr@@ELFUTILS_1.0+0x214>
   10d8c:	str	x0, [sp, #40]
   10d90:	ldr	x0, [sp, #40]
   10d94:	ldp	x29, x30, [sp], #48
   10d98:	ret
   10d9c:	stp	x29, x30, [sp, #-48]!
   10da0:	mov	x29, sp
   10da4:	str	x0, [sp, #24]
   10da8:	ldr	x0, [sp, #24]
   10dac:	bl	10c90 <elf32_getshdr@@ELFUTILS_1.0+0xb24>
   10db0:	and	w0, w0, #0xff
   10db4:	eor	w0, w0, #0x1
   10db8:	and	w0, w0, #0xff
   10dbc:	cmp	w0, #0x0
   10dc0:	b.eq	10dcc <elf32_getshdr@@ELFUTILS_1.0+0xc60>  // b.none
   10dc4:	mov	x0, #0x0                   	// #0
   10dc8:	b	10df4 <elf32_getshdr@@ELFUTILS_1.0+0xc88>
   10dcc:	ldr	x0, [sp, #24]
   10dd0:	ldr	x0, [x0, #144]
   10dd4:	str	x0, [sp, #40]
   10dd8:	ldr	x0, [sp, #40]
   10ddc:	cmp	x0, #0x0
   10de0:	b.ne	10df0 <elf32_getshdr@@ELFUTILS_1.0+0xc84>  // b.any
   10de4:	ldr	x0, [sp, #24]
   10de8:	bl	10380 <elf32_getshdr@@ELFUTILS_1.0+0x214>
   10dec:	str	x0, [sp, #40]
   10df0:	ldr	x0, [sp, #40]
   10df4:	ldp	x29, x30, [sp], #48
   10df8:	ret

0000000000010dfc <elf64_getshdr@@ELFUTILS_1.0>:
   10dfc:	stp	x29, x30, [sp, #-48]!
   10e00:	mov	x29, sp
   10e04:	str	x0, [sp, #24]
   10e08:	ldr	x0, [sp, #24]
   10e0c:	bl	10c90 <elf32_getshdr@@ELFUTILS_1.0+0xb24>
   10e10:	and	w0, w0, #0xff
   10e14:	eor	w0, w0, #0x1
   10e18:	and	w0, w0, #0xff
   10e1c:	cmp	w0, #0x0
   10e20:	b.eq	10e2c <elf64_getshdr@@ELFUTILS_1.0+0x30>  // b.none
   10e24:	mov	x0, #0x0                   	// #0
   10e28:	b	10e3c <elf64_getshdr@@ELFUTILS_1.0+0x40>
   10e2c:	ldr	x0, [sp, #24]
   10e30:	bl	10d24 <elf32_getshdr@@ELFUTILS_1.0+0xbb8>
   10e34:	str	x0, [sp, #40]
   10e38:	ldr	x0, [sp, #40]
   10e3c:	ldp	x29, x30, [sp], #48
   10e40:	ret

0000000000010e44 <gelf_getshdr@@ELFUTILS_1.0>:
   10e44:	stp	x29, x30, [sp, #-64]!
   10e48:	mov	x29, sp
   10e4c:	str	x0, [sp, #24]
   10e50:	str	x1, [sp, #16]
   10e54:	str	xzr, [sp, #56]
   10e58:	ldr	x0, [sp, #24]
   10e5c:	cmp	x0, #0x0
   10e60:	b.ne	10e6c <gelf_getshdr@@ELFUTILS_1.0+0x28>  // b.any
   10e64:	mov	x0, #0x0                   	// #0
   10e68:	b	10fe0 <gelf_getshdr@@ELFUTILS_1.0+0x19c>
   10e6c:	ldr	x0, [sp, #16]
   10e70:	cmp	x0, #0x0
   10e74:	b.ne	10e88 <gelf_getshdr@@ELFUTILS_1.0+0x44>  // b.any
   10e78:	mov	w0, #0x17                  	// #23
   10e7c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   10e80:	mov	x0, #0x0                   	// #0
   10e84:	b	10fe0 <gelf_getshdr@@ELFUTILS_1.0+0x19c>
   10e88:	ldr	x0, [sp, #24]
   10e8c:	ldr	x0, [x0, #136]
   10e90:	ldr	w0, [x0, #32]
   10e94:	cmp	w0, #0x1
   10e98:	b.ne	10f94 <gelf_getshdr@@ELFUTILS_1.0+0x150>  // b.any
   10e9c:	ldr	x0, [sp, #24]
   10ea0:	ldr	x0, [x0, #144]
   10ea4:	cmp	x0, #0x0
   10ea8:	b.ne	10eb4 <gelf_getshdr@@ELFUTILS_1.0+0x70>  // b.any
   10eac:	ldr	x0, [sp, #24]
   10eb0:	bl	10094 <elf_newscn@@ELFUTILS_1.0+0x1160>
   10eb4:	str	x0, [sp, #40]
   10eb8:	ldr	x0, [sp, #40]
   10ebc:	cmp	x0, #0x0
   10ec0:	b.ne	10ed0 <gelf_getshdr@@ELFUTILS_1.0+0x8c>  // b.any
   10ec4:	mov	w0, #0x17                  	// #23
   10ec8:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   10ecc:	b	10fdc <gelf_getshdr@@ELFUTILS_1.0+0x198>
   10ed0:	ldr	x0, [sp, #40]
   10ed4:	ldr	w1, [x0]
   10ed8:	ldr	x0, [sp, #16]
   10edc:	str	w1, [x0]
   10ee0:	ldr	x0, [sp, #40]
   10ee4:	ldr	w1, [x0, #4]
   10ee8:	ldr	x0, [sp, #16]
   10eec:	str	w1, [x0, #4]
   10ef0:	ldr	x0, [sp, #40]
   10ef4:	ldr	w0, [x0, #8]
   10ef8:	mov	w1, w0
   10efc:	ldr	x0, [sp, #16]
   10f00:	str	x1, [x0, #8]
   10f04:	ldr	x0, [sp, #40]
   10f08:	ldr	w0, [x0, #12]
   10f0c:	mov	w1, w0
   10f10:	ldr	x0, [sp, #16]
   10f14:	str	x1, [x0, #16]
   10f18:	ldr	x0, [sp, #40]
   10f1c:	ldr	w0, [x0, #16]
   10f20:	mov	w1, w0
   10f24:	ldr	x0, [sp, #16]
   10f28:	str	x1, [x0, #24]
   10f2c:	ldr	x0, [sp, #40]
   10f30:	ldr	w0, [x0, #20]
   10f34:	mov	w1, w0
   10f38:	ldr	x0, [sp, #16]
   10f3c:	str	x1, [x0, #32]
   10f40:	ldr	x0, [sp, #40]
   10f44:	ldr	w1, [x0, #24]
   10f48:	ldr	x0, [sp, #16]
   10f4c:	str	w1, [x0, #40]
   10f50:	ldr	x0, [sp, #40]
   10f54:	ldr	w1, [x0, #28]
   10f58:	ldr	x0, [sp, #16]
   10f5c:	str	w1, [x0, #44]
   10f60:	ldr	x0, [sp, #40]
   10f64:	ldr	w0, [x0, #32]
   10f68:	mov	w1, w0
   10f6c:	ldr	x0, [sp, #16]
   10f70:	str	x1, [x0, #48]
   10f74:	ldr	x0, [sp, #40]
   10f78:	ldr	w0, [x0, #36]
   10f7c:	mov	w1, w0
   10f80:	ldr	x0, [sp, #16]
   10f84:	str	x1, [x0, #56]
   10f88:	ldr	x0, [sp, #16]
   10f8c:	str	x0, [sp, #56]
   10f90:	b	10fdc <gelf_getshdr@@ELFUTILS_1.0+0x198>
   10f94:	ldr	x0, [sp, #24]
   10f98:	ldr	x0, [x0, #144]
   10f9c:	cmp	x0, #0x0
   10fa0:	b.ne	10fac <gelf_getshdr@@ELFUTILS_1.0+0x168>  // b.any
   10fa4:	ldr	x0, [sp, #24]
   10fa8:	bl	10d24 <elf32_getshdr@@ELFUTILS_1.0+0xbb8>
   10fac:	str	x0, [sp, #48]
   10fb0:	ldr	x0, [sp, #48]
   10fb4:	cmp	x0, #0x0
   10fb8:	b.ne	10fc8 <gelf_getshdr@@ELFUTILS_1.0+0x184>  // b.any
   10fbc:	mov	w0, #0x17                  	// #23
   10fc0:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   10fc4:	b	10fdc <gelf_getshdr@@ELFUTILS_1.0+0x198>
   10fc8:	mov	x2, #0x40                  	// #64
   10fcc:	ldr	x1, [sp, #48]
   10fd0:	ldr	x0, [sp, #16]
   10fd4:	bl	30a0 <memcpy@plt>
   10fd8:	str	x0, [sp, #56]
   10fdc:	ldr	x0, [sp, #56]
   10fe0:	ldp	x29, x30, [sp], #64
   10fe4:	ret

0000000000010fe8 <gelf_update_shdr@@ELFUTILS_1.0>:
   10fe8:	stp	x29, x30, [sp, #-64]!
   10fec:	mov	x29, sp
   10ff0:	str	x0, [sp, #24]
   10ff4:	str	x1, [sp, #16]
   10ff8:	str	wzr, [sp, #60]
   10ffc:	ldr	x0, [sp, #24]
   11000:	cmp	x0, #0x0
   11004:	b.eq	11014 <gelf_update_shdr@@ELFUTILS_1.0+0x2c>  // b.none
   11008:	ldr	x0, [sp, #16]
   1100c:	cmp	x0, #0x0
   11010:	b.ne	1101c <gelf_update_shdr@@ELFUTILS_1.0+0x34>  // b.any
   11014:	mov	w0, #0x0                   	// #0
   11018:	b	11270 <gelf_update_shdr@@ELFUTILS_1.0+0x288>
   1101c:	ldr	x0, [sp, #24]
   11020:	ldr	x0, [x0, #136]
   11024:	str	x0, [sp, #48]
   11028:	ldr	x0, [sp, #48]
   1102c:	ldr	w0, [x0, #32]
   11030:	cmp	w0, #0x1
   11034:	b.ne	1120c <gelf_update_shdr@@ELFUTILS_1.0+0x224>  // b.any
   11038:	ldr	x0, [sp, #24]
   1103c:	ldr	x0, [x0, #144]
   11040:	cmp	x0, #0x0
   11044:	b.ne	11050 <gelf_update_shdr@@ELFUTILS_1.0+0x68>  // b.any
   11048:	ldr	x0, [sp, #24]
   1104c:	bl	1010c <elf_newscn@@ELFUTILS_1.0+0x11d8>
   11050:	str	x0, [sp, #32]
   11054:	ldr	x0, [sp, #32]
   11058:	cmp	x0, #0x0
   1105c:	b.ne	1106c <gelf_update_shdr@@ELFUTILS_1.0+0x84>  // b.any
   11060:	mov	w0, #0x17                  	// #23
   11064:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   11068:	b	1126c <gelf_update_shdr@@ELFUTILS_1.0+0x284>
   1106c:	ldr	x0, [sp, #16]
   11070:	ldr	x1, [x0, #8]
   11074:	mov	x0, #0xffffffff            	// #4294967295
   11078:	cmp	x1, x0
   1107c:	cset	w0, hi  // hi = pmore
   11080:	and	w0, w0, #0xff
   11084:	and	x0, x0, #0xff
   11088:	cmp	x0, #0x0
   1108c:	b.ne	11144 <gelf_update_shdr@@ELFUTILS_1.0+0x15c>  // b.any
   11090:	ldr	x0, [sp, #16]
   11094:	ldr	x1, [x0, #16]
   11098:	mov	x0, #0xffffffff            	// #4294967295
   1109c:	cmp	x1, x0
   110a0:	cset	w0, hi  // hi = pmore
   110a4:	and	w0, w0, #0xff
   110a8:	and	x0, x0, #0xff
   110ac:	cmp	x0, #0x0
   110b0:	b.ne	11144 <gelf_update_shdr@@ELFUTILS_1.0+0x15c>  // b.any
   110b4:	ldr	x0, [sp, #16]
   110b8:	ldr	x1, [x0, #24]
   110bc:	mov	x0, #0xffffffff            	// #4294967295
   110c0:	cmp	x1, x0
   110c4:	cset	w0, hi  // hi = pmore
   110c8:	and	w0, w0, #0xff
   110cc:	and	x0, x0, #0xff
   110d0:	cmp	x0, #0x0
   110d4:	b.ne	11144 <gelf_update_shdr@@ELFUTILS_1.0+0x15c>  // b.any
   110d8:	ldr	x0, [sp, #16]
   110dc:	ldr	x1, [x0, #32]
   110e0:	mov	x0, #0xffffffff            	// #4294967295
   110e4:	cmp	x1, x0
   110e8:	cset	w0, hi  // hi = pmore
   110ec:	and	w0, w0, #0xff
   110f0:	and	x0, x0, #0xff
   110f4:	cmp	x0, #0x0
   110f8:	b.ne	11144 <gelf_update_shdr@@ELFUTILS_1.0+0x15c>  // b.any
   110fc:	ldr	x0, [sp, #16]
   11100:	ldr	x1, [x0, #48]
   11104:	mov	x0, #0xffffffff            	// #4294967295
   11108:	cmp	x1, x0
   1110c:	cset	w0, hi  // hi = pmore
   11110:	and	w0, w0, #0xff
   11114:	and	x0, x0, #0xff
   11118:	cmp	x0, #0x0
   1111c:	b.ne	11144 <gelf_update_shdr@@ELFUTILS_1.0+0x15c>  // b.any
   11120:	ldr	x0, [sp, #16]
   11124:	ldr	x1, [x0, #56]
   11128:	mov	x0, #0xffffffff            	// #4294967295
   1112c:	cmp	x1, x0
   11130:	cset	w0, hi  // hi = pmore
   11134:	and	w0, w0, #0xff
   11138:	and	x0, x0, #0xff
   1113c:	cmp	x0, #0x0
   11140:	b.eq	11150 <gelf_update_shdr@@ELFUTILS_1.0+0x168>  // b.none
   11144:	mov	w0, #0x21                  	// #33
   11148:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1114c:	b	1126c <gelf_update_shdr@@ELFUTILS_1.0+0x284>
   11150:	ldr	x0, [sp, #16]
   11154:	ldr	w1, [x0]
   11158:	ldr	x0, [sp, #32]
   1115c:	str	w1, [x0]
   11160:	ldr	x0, [sp, #16]
   11164:	ldr	w1, [x0, #4]
   11168:	ldr	x0, [sp, #32]
   1116c:	str	w1, [x0, #4]
   11170:	ldr	x0, [sp, #16]
   11174:	ldr	x0, [x0, #8]
   11178:	mov	w1, w0
   1117c:	ldr	x0, [sp, #32]
   11180:	str	w1, [x0, #8]
   11184:	ldr	x0, [sp, #16]
   11188:	ldr	x0, [x0, #16]
   1118c:	mov	w1, w0
   11190:	ldr	x0, [sp, #32]
   11194:	str	w1, [x0, #12]
   11198:	ldr	x0, [sp, #16]
   1119c:	ldr	x0, [x0, #24]
   111a0:	mov	w1, w0
   111a4:	ldr	x0, [sp, #32]
   111a8:	str	w1, [x0, #16]
   111ac:	ldr	x0, [sp, #16]
   111b0:	ldr	x0, [x0, #32]
   111b4:	mov	w1, w0
   111b8:	ldr	x0, [sp, #32]
   111bc:	str	w1, [x0, #20]
   111c0:	ldr	x0, [sp, #16]
   111c4:	ldr	w1, [x0, #40]
   111c8:	ldr	x0, [sp, #32]
   111cc:	str	w1, [x0, #24]
   111d0:	ldr	x0, [sp, #16]
   111d4:	ldr	w1, [x0, #44]
   111d8:	ldr	x0, [sp, #32]
   111dc:	str	w1, [x0, #28]
   111e0:	ldr	x0, [sp, #16]
   111e4:	ldr	x0, [x0, #48]
   111e8:	mov	w1, w0
   111ec:	ldr	x0, [sp, #32]
   111f0:	str	w1, [x0, #32]
   111f4:	ldr	x0, [sp, #16]
   111f8:	ldr	x0, [x0, #56]
   111fc:	mov	w1, w0
   11200:	ldr	x0, [sp, #32]
   11204:	str	w1, [x0, #36]
   11208:	b	11250 <gelf_update_shdr@@ELFUTILS_1.0+0x268>
   1120c:	ldr	x0, [sp, #24]
   11210:	ldr	x0, [x0, #144]
   11214:	cmp	x0, #0x0
   11218:	b.ne	11224 <gelf_update_shdr@@ELFUTILS_1.0+0x23c>  // b.any
   1121c:	ldr	x0, [sp, #24]
   11220:	bl	10d9c <elf32_getshdr@@ELFUTILS_1.0+0xc30>
   11224:	str	x0, [sp, #40]
   11228:	ldr	x0, [sp, #40]
   1122c:	cmp	x0, #0x0
   11230:	b.ne	11240 <gelf_update_shdr@@ELFUTILS_1.0+0x258>  // b.any
   11234:	mov	w0, #0x17                  	// #23
   11238:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1123c:	b	1126c <gelf_update_shdr@@ELFUTILS_1.0+0x284>
   11240:	mov	x2, #0x40                  	// #64
   11244:	ldr	x1, [sp, #16]
   11248:	ldr	x0, [sp, #40]
   1124c:	bl	30a0 <memcpy@plt>
   11250:	ldr	x0, [sp, #24]
   11254:	ldr	w0, [x0, #152]
   11258:	orr	w1, w0, #0x1
   1125c:	ldr	x0, [sp, #24]
   11260:	str	w1, [x0, #152]
   11264:	mov	w0, #0x1                   	// #1
   11268:	str	w0, [sp, #60]
   1126c:	ldr	w0, [sp, #60]
   11270:	ldp	x29, x30, [sp], #64
   11274:	ret
   11278:	stp	x29, x30, [sp, #-64]!
   1127c:	mov	x29, sp
   11280:	str	x0, [sp, #24]
   11284:	add	x1, sp, #0x28
   11288:	add	x0, sp, #0x30
   1128c:	mov	x2, x1
   11290:	mov	x1, x0
   11294:	ldr	x0, [sp, #24]
   11298:	bl	1fdb0 <gelf_getchdr@@ELFUTILS_1.7+0x920>
   1129c:	str	x0, [sp, #56]
   112a0:	ldr	x0, [sp, #56]
   112a4:	cmp	x0, #0x0
   112a8:	b.ne	112b4 <gelf_update_shdr@@ELFUTILS_1.0+0x2cc>  // b.any
   112ac:	mov	x0, #0x0                   	// #0
   112b0:	b	112dc <gelf_update_shdr@@ELFUTILS_1.0+0x2f4>
   112b4:	ldr	x0, [sp, #24]
   112b8:	ldr	x1, [sp, #56]
   112bc:	str	x1, [x0, #176]
   112c0:	ldr	x1, [sp, #48]
   112c4:	ldr	x0, [sp, #24]
   112c8:	str	x1, [x0, #184]
   112cc:	ldr	x1, [sp, #40]
   112d0:	ldr	x0, [sp, #24]
   112d4:	str	x1, [x0, #192]
   112d8:	ldr	x0, [sp, #56]
   112dc:	ldp	x29, x30, [sp], #64
   112e0:	ret
   112e4:	stp	x29, x30, [sp, #-48]!
   112e8:	mov	x29, sp
   112ec:	str	x0, [sp, #40]
   112f0:	str	x1, [sp, #32]
   112f4:	str	x2, [sp, #24]
   112f8:	ldr	x1, [sp, #40]
   112fc:	ldr	x0, [sp, #32]
   11300:	add	x3, x1, x0
   11304:	ldr	x1, [sp, #24]
   11308:	ldr	x0, [sp, #32]
   1130c:	sub	x0, x1, x0
   11310:	mov	x2, x0
   11314:	mov	w1, #0x0                   	// #0
   11318:	mov	x0, x3
   1131c:	bl	3310 <memrchr@plt>
   11320:	cmp	x0, #0x0
   11324:	cset	w0, ne  // ne = any
   11328:	and	w0, w0, #0xff
   1132c:	ldp	x29, x30, [sp], #48
   11330:	ret

0000000000011334 <elf_strptr@@ELFUTILS_1.0>:
   11334:	stp	x29, x30, [sp, #-112]!
   11338:	mov	x29, sp
   1133c:	str	x0, [sp, #40]
   11340:	str	x1, [sp, #32]
   11344:	str	x2, [sp, #24]
   11348:	ldr	x0, [sp, #40]
   1134c:	cmp	x0, #0x0
   11350:	b.ne	1135c <elf_strptr@@ELFUTILS_1.0+0x28>  // b.any
   11354:	mov	x0, #0x0                   	// #0
   11358:	b	117e8 <elf_strptr@@ELFUTILS_1.0+0x4b4>
   1135c:	ldr	x0, [sp, #40]
   11360:	ldr	w0, [x0, #24]
   11364:	cmp	w0, #0x3
   11368:	b.eq	1137c <elf_strptr@@ELFUTILS_1.0+0x48>  // b.none
   1136c:	mov	w0, #0x4                   	// #4
   11370:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   11374:	mov	x0, #0x0                   	// #0
   11378:	b	117e8 <elf_strptr@@ELFUTILS_1.0+0x4b4>
   1137c:	str	xzr, [sp, #104]
   11380:	ldr	x0, [sp, #40]
   11384:	add	x0, x0, #0xc8
   11388:	str	x0, [sp, #96]
   1138c:	ldr	x0, [sp, #96]
   11390:	ldr	w0, [x0, #4]
   11394:	mov	w0, w0
   11398:	ldr	x1, [sp, #32]
   1139c:	cmp	x1, x0
   113a0:	b.cs	11410 <elf_strptr@@ELFUTILS_1.0+0xdc>  // b.hs, b.nlast
   113a4:	ldr	x0, [sp, #96]
   113a8:	ldr	w0, [x0]
   113ac:	mov	w0, w0
   113b0:	ldr	x1, [sp, #32]
   113b4:	cmp	x1, x0
   113b8:	b.cs	11404 <elf_strptr@@ELFUTILS_1.0+0xd0>  // b.hs, b.nlast
   113bc:	ldr	x1, [sp, #32]
   113c0:	mov	x0, x1
   113c4:	lsl	x0, x0, #1
   113c8:	add	x0, x0, x1
   113cc:	lsl	x0, x0, #2
   113d0:	add	x0, x0, x1
   113d4:	lsl	x0, x0, #4
   113d8:	add	x0, x0, #0x10
   113dc:	ldr	x1, [sp, #96]
   113e0:	add	x0, x1, x0
   113e4:	str	x0, [sp, #72]
   113e8:	nop
   113ec:	str	xzr, [sp, #88]
   113f0:	ldr	x0, [sp, #40]
   113f4:	ldr	w0, [x0, #32]
   113f8:	cmp	w0, #0x1
   113fc:	b.ne	11514 <elf_strptr@@ELFUTILS_1.0+0x1e0>  // b.any
   11400:	b	1144c <elf_strptr@@ELFUTILS_1.0+0x118>
   11404:	mov	w0, #0x16                  	// #22
   11408:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1140c:	b	117e4 <elf_strptr@@ELFUTILS_1.0+0x4b0>
   11410:	ldr	x0, [sp, #96]
   11414:	ldr	w0, [x0, #4]
   11418:	mov	w0, w0
   1141c:	ldr	x1, [sp, #32]
   11420:	sub	x0, x1, x0
   11424:	str	x0, [sp, #32]
   11428:	ldr	x0, [sp, #96]
   1142c:	ldr	x0, [x0, #8]
   11430:	str	x0, [sp, #96]
   11434:	ldr	x0, [sp, #96]
   11438:	cmp	x0, #0x0
   1143c:	b.ne	1138c <elf_strptr@@ELFUTILS_1.0+0x58>  // b.any
   11440:	mov	w0, #0x16                  	// #22
   11444:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   11448:	b	117e4 <elf_strptr@@ELFUTILS_1.0+0x4b0>
   1144c:	ldr	x0, [sp, #72]
   11450:	ldr	x0, [x0, #144]
   11454:	cmp	x0, #0x0
   11458:	b.ne	11464 <elf_strptr@@ELFUTILS_1.0+0x130>  // b.any
   1145c:	ldr	x0, [sp, #72]
   11460:	bl	10094 <elf_newscn@@ELFUTILS_1.0+0x1160>
   11464:	str	x0, [sp, #56]
   11468:	ldr	x0, [sp, #56]
   1146c:	ldr	w0, [x0, #4]
   11470:	cmp	w0, #0x3
   11474:	cset	w0, ne  // ne = any
   11478:	and	w0, w0, #0xff
   1147c:	and	x0, x0, #0xff
   11480:	cmp	x0, #0x0
   11484:	b.eq	11494 <elf_strptr@@ELFUTILS_1.0+0x160>  // b.none
   11488:	mov	w0, #0x18                  	// #24
   1148c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   11490:	b	117e4 <elf_strptr@@ELFUTILS_1.0+0x4b0>
   11494:	ldr	x0, [sp, #56]
   11498:	ldr	w0, [x0, #8]
   1149c:	and	w0, w0, #0x800
   114a0:	cmp	w0, #0x0
   114a4:	b.ne	114bc <elf_strptr@@ELFUTILS_1.0+0x188>  // b.any
   114a8:	ldr	x0, [sp, #56]
   114ac:	ldr	w0, [x0, #20]
   114b0:	mov	w0, w0
   114b4:	str	x0, [sp, #88]
   114b8:	b	114e8 <elf_strptr@@ELFUTILS_1.0+0x1b4>
   114bc:	ldr	x0, [sp, #72]
   114c0:	ldr	x0, [x0, #176]
   114c4:	cmp	x0, #0x0
   114c8:	b.ne	114dc <elf_strptr@@ELFUTILS_1.0+0x1a8>  // b.any
   114cc:	ldr	x0, [sp, #72]
   114d0:	bl	11278 <gelf_update_shdr@@ELFUTILS_1.0+0x290>
   114d4:	cmp	x0, #0x0
   114d8:	b.eq	117d0 <elf_strptr@@ELFUTILS_1.0+0x49c>  // b.none
   114dc:	ldr	x0, [sp, #72]
   114e0:	ldr	x0, [x0, #184]
   114e4:	str	x0, [sp, #88]
   114e8:	ldr	x1, [sp, #24]
   114ec:	ldr	x0, [sp, #88]
   114f0:	cmp	x1, x0
   114f4:	cset	w0, cs  // cs = hs, nlast
   114f8:	and	w0, w0, #0xff
   114fc:	and	x0, x0, #0xff
   11500:	cmp	x0, #0x0
   11504:	b.eq	115d8 <elf_strptr@@ELFUTILS_1.0+0x2a4>  // b.none
   11508:	mov	w0, #0x1d                  	// #29
   1150c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   11510:	b	117e4 <elf_strptr@@ELFUTILS_1.0+0x4b0>
   11514:	ldr	x0, [sp, #72]
   11518:	ldr	x0, [x0, #144]
   1151c:	cmp	x0, #0x0
   11520:	b.ne	1152c <elf_strptr@@ELFUTILS_1.0+0x1f8>  // b.any
   11524:	ldr	x0, [sp, #72]
   11528:	bl	10d24 <elf32_getshdr@@ELFUTILS_1.0+0xbb8>
   1152c:	str	x0, [sp, #64]
   11530:	ldr	x0, [sp, #64]
   11534:	ldr	w0, [x0, #4]
   11538:	cmp	w0, #0x3
   1153c:	cset	w0, ne  // ne = any
   11540:	and	w0, w0, #0xff
   11544:	and	x0, x0, #0xff
   11548:	cmp	x0, #0x0
   1154c:	b.eq	1155c <elf_strptr@@ELFUTILS_1.0+0x228>  // b.none
   11550:	mov	w0, #0x18                  	// #24
   11554:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   11558:	b	117e4 <elf_strptr@@ELFUTILS_1.0+0x4b0>
   1155c:	ldr	x0, [sp, #64]
   11560:	ldr	x0, [x0, #8]
   11564:	and	x0, x0, #0x800
   11568:	cmp	x0, #0x0
   1156c:	b.ne	11580 <elf_strptr@@ELFUTILS_1.0+0x24c>  // b.any
   11570:	ldr	x0, [sp, #64]
   11574:	ldr	x0, [x0, #32]
   11578:	str	x0, [sp, #88]
   1157c:	b	115ac <elf_strptr@@ELFUTILS_1.0+0x278>
   11580:	ldr	x0, [sp, #72]
   11584:	ldr	x0, [x0, #176]
   11588:	cmp	x0, #0x0
   1158c:	b.ne	115a0 <elf_strptr@@ELFUTILS_1.0+0x26c>  // b.any
   11590:	ldr	x0, [sp, #72]
   11594:	bl	11278 <gelf_update_shdr@@ELFUTILS_1.0+0x290>
   11598:	cmp	x0, #0x0
   1159c:	b.eq	117d8 <elf_strptr@@ELFUTILS_1.0+0x4a4>  // b.none
   115a0:	ldr	x0, [sp, #72]
   115a4:	ldr	x0, [x0, #184]
   115a8:	str	x0, [sp, #88]
   115ac:	ldr	x1, [sp, #24]
   115b0:	ldr	x0, [sp, #88]
   115b4:	cmp	x1, x0
   115b8:	cset	w0, cs  // cs = hs, nlast
   115bc:	and	w0, w0, #0xff
   115c0:	and	x0, x0, #0xff
   115c4:	cmp	x0, #0x0
   115c8:	b.eq	115d8 <elf_strptr@@ELFUTILS_1.0+0x2a4>  // b.none
   115cc:	mov	w0, #0x1d                  	// #29
   115d0:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   115d4:	b	117e4 <elf_strptr@@ELFUTILS_1.0+0x4b0>
   115d8:	ldr	x0, [sp, #72]
   115dc:	ldr	x0, [x0, #160]
   115e0:	cmp	x0, #0x0
   115e4:	b.ne	11628 <elf_strptr@@ELFUTILS_1.0+0x2f4>  // b.any
   115e8:	ldr	x0, [sp, #72]
   115ec:	ldr	w0, [x0, #120]
   115f0:	cmp	w0, #0x0
   115f4:	b.ne	11628 <elf_strptr@@ELFUTILS_1.0+0x2f4>  // b.any
   115f8:	ldr	x0, [sp, #72]
   115fc:	ldr	x0, [x0, #160]
   11600:	cmp	x0, #0x0
   11604:	b.ne	11628 <elf_strptr@@ELFUTILS_1.0+0x2f4>  // b.any
   11608:	ldr	x0, [sp, #72]
   1160c:	ldr	w0, [x0, #120]
   11610:	cmp	w0, #0x0
   11614:	b.ne	11628 <elf_strptr@@ELFUTILS_1.0+0x2f4>  // b.any
   11618:	ldr	x0, [sp, #72]
   1161c:	bl	11e24 <elf_rawdata@@ELFUTILS_1.0+0x634>
   11620:	cmp	w0, #0x0
   11624:	b.ne	117e0 <elf_strptr@@ELFUTILS_1.0+0x4ac>  // b.any
   11628:	ldr	x0, [sp, #72]
   1162c:	ldr	x0, [x0, #176]
   11630:	cmp	x0, #0x0
   11634:	cset	w0, ne  // ne = any
   11638:	and	w0, w0, #0xff
   1163c:	and	x0, x0, #0xff
   11640:	cmp	x0, #0x0
   11644:	b.eq	11690 <elf_strptr@@ELFUTILS_1.0+0x35c>  // b.none
   11648:	ldr	x0, [sp, #72]
   1164c:	ldr	x0, [x0, #176]
   11650:	ldr	x2, [sp, #88]
   11654:	ldr	x1, [sp, #24]
   11658:	bl	112e4 <gelf_update_shdr@@ELFUTILS_1.0+0x2fc>
   1165c:	and	w0, w0, #0xff
   11660:	and	x0, x0, #0xff
   11664:	cmp	x0, #0x0
   11668:	b.eq	11684 <elf_strptr@@ELFUTILS_1.0+0x350>  // b.none
   1166c:	ldr	x0, [sp, #72]
   11670:	ldr	x1, [x0, #176]
   11674:	ldr	x0, [sp, #24]
   11678:	add	x0, x1, x0
   1167c:	str	x0, [sp, #104]
   11680:	b	117e4 <elf_strptr@@ELFUTILS_1.0+0x4b0>
   11684:	mov	w0, #0x16                  	// #22
   11688:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1168c:	b	117e4 <elf_strptr@@ELFUTILS_1.0+0x4b0>
   11690:	ldr	x0, [sp, #72]
   11694:	ldr	x0, [x0, #64]
   11698:	cmp	x0, #0x0
   1169c:	cset	w0, eq  // eq = none
   116a0:	and	w0, w0, #0xff
   116a4:	and	x0, x0, #0xff
   116a8:	cmp	x0, #0x0
   116ac:	b.eq	116f8 <elf_strptr@@ELFUTILS_1.0+0x3c4>  // b.none
   116b0:	ldr	x0, [sp, #72]
   116b4:	ldr	x0, [x0, #160]
   116b8:	ldr	x2, [sp, #88]
   116bc:	ldr	x1, [sp, #24]
   116c0:	bl	112e4 <gelf_update_shdr@@ELFUTILS_1.0+0x2fc>
   116c4:	and	w0, w0, #0xff
   116c8:	and	x0, x0, #0xff
   116cc:	cmp	x0, #0x0
   116d0:	b.eq	116ec <elf_strptr@@ELFUTILS_1.0+0x3b8>  // b.none
   116d4:	ldr	x0, [sp, #72]
   116d8:	ldr	x1, [x0, #160]
   116dc:	ldr	x0, [sp, #24]
   116e0:	add	x0, x1, x0
   116e4:	str	x0, [sp, #104]
   116e8:	b	117e4 <elf_strptr@@ELFUTILS_1.0+0x4b0>
   116ec:	mov	w0, #0x16                  	// #22
   116f0:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   116f4:	b	117e4 <elf_strptr@@ELFUTILS_1.0+0x4b0>
   116f8:	ldr	x0, [sp, #72]
   116fc:	str	x0, [sp, #80]
   11700:	b	117c0 <elf_strptr@@ELFUTILS_1.0+0x48c>
   11704:	ldr	x0, [sp, #80]
   11708:	ldr	x0, [x0, #24]
   1170c:	mov	x1, x0
   11710:	ldr	x0, [sp, #24]
   11714:	cmp	x0, x1
   11718:	b.cc	117b4 <elf_strptr@@ELFUTILS_1.0+0x480>  // b.lo, b.ul, b.last
   1171c:	ldr	x0, [sp, #80]
   11720:	ldr	x0, [x0, #24]
   11724:	mov	x1, x0
   11728:	ldr	x0, [sp, #80]
   1172c:	ldr	x0, [x0, #16]
   11730:	add	x0, x1, x0
   11734:	ldr	x1, [sp, #24]
   11738:	cmp	x1, x0
   1173c:	b.cs	117b4 <elf_strptr@@ELFUTILS_1.0+0x480>  // b.hs, b.nlast
   11740:	ldr	x0, [sp, #80]
   11744:	ldr	x3, [x0]
   11748:	ldr	x0, [sp, #80]
   1174c:	ldr	x0, [x0, #24]
   11750:	mov	x1, x0
   11754:	ldr	x0, [sp, #24]
   11758:	sub	x1, x0, x1
   1175c:	ldr	x0, [sp, #80]
   11760:	ldr	x0, [x0, #16]
   11764:	mov	x2, x0
   11768:	mov	x0, x3
   1176c:	bl	112e4 <gelf_update_shdr@@ELFUTILS_1.0+0x2fc>
   11770:	and	w0, w0, #0xff
   11774:	and	x0, x0, #0xff
   11778:	cmp	x0, #0x0
   1177c:	b.eq	117a8 <elf_strptr@@ELFUTILS_1.0+0x474>  // b.none
   11780:	ldr	x0, [sp, #80]
   11784:	ldr	x1, [x0]
   11788:	ldr	x0, [sp, #80]
   1178c:	ldr	x0, [x0, #24]
   11790:	mov	x2, x0
   11794:	ldr	x0, [sp, #24]
   11798:	sub	x0, x0, x2
   1179c:	add	x0, x1, x0
   117a0:	str	x0, [sp, #104]
   117a4:	b	117e4 <elf_strptr@@ELFUTILS_1.0+0x4b0>
   117a8:	mov	w0, #0x16                  	// #22
   117ac:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   117b0:	b	117e4 <elf_strptr@@ELFUTILS_1.0+0x4b0>
   117b4:	ldr	x0, [sp, #80]
   117b8:	ldr	x0, [x0, #48]
   117bc:	str	x0, [sp, #80]
   117c0:	ldr	x0, [sp, #80]
   117c4:	cmp	x0, #0x0
   117c8:	b.ne	11704 <elf_strptr@@ELFUTILS_1.0+0x3d0>  // b.any
   117cc:	b	117e4 <elf_strptr@@ELFUTILS_1.0+0x4b0>
   117d0:	nop
   117d4:	b	117e4 <elf_strptr@@ELFUTILS_1.0+0x4b0>
   117d8:	nop
   117dc:	b	117e4 <elf_strptr@@ELFUTILS_1.0+0x4b0>
   117e0:	nop
   117e4:	ldr	x0, [sp, #104]
   117e8:	ldp	x29, x30, [sp], #112
   117ec:	ret

00000000000117f0 <elf_rawdata@@ELFUTILS_1.0>:
   117f0:	stp	x29, x30, [sp, #-32]!
   117f4:	mov	x29, sp
   117f8:	str	x0, [sp, #24]
   117fc:	str	x1, [sp, #16]
   11800:	ldr	x0, [sp, #24]
   11804:	cmp	x0, #0x0
   11808:	b.eq	11820 <elf_rawdata@@ELFUTILS_1.0+0x30>  // b.none
   1180c:	ldr	x0, [sp, #24]
   11810:	ldr	x0, [x0, #136]
   11814:	ldr	w0, [x0, #24]
   11818:	cmp	w0, #0x3
   1181c:	b.eq	11830 <elf_rawdata@@ELFUTILS_1.0+0x40>  // b.none
   11820:	mov	w0, #0x4                   	// #4
   11824:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   11828:	mov	x0, #0x0                   	// #0
   1182c:	b	118a0 <elf_rawdata@@ELFUTILS_1.0+0xb0>
   11830:	ldr	x0, [sp, #16]
   11834:	cmp	x0, #0x0
   11838:	b.ne	11860 <elf_rawdata@@ELFUTILS_1.0+0x70>  // b.any
   1183c:	ldr	x0, [sp, #24]
   11840:	ldr	w0, [x0, #120]
   11844:	cmp	w0, #0x0
   11848:	b.eq	11870 <elf_rawdata@@ELFUTILS_1.0+0x80>  // b.none
   1184c:	ldr	x0, [sp, #24]
   11850:	ldr	w0, [x0, #156]
   11854:	and	w0, w0, #0x100
   11858:	cmp	w0, #0x0
   1185c:	b.ne	11870 <elf_rawdata@@ELFUTILS_1.0+0x80>  // b.any
   11860:	mov	w0, #0x1f                  	// #31
   11864:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   11868:	mov	x0, #0x0                   	// #0
   1186c:	b	118a0 <elf_rawdata@@ELFUTILS_1.0+0xb0>
   11870:	ldr	x0, [sp, #24]
   11874:	ldr	w0, [x0, #120]
   11878:	cmp	w0, #0x0
   1187c:	b.ne	11898 <elf_rawdata@@ELFUTILS_1.0+0xa8>  // b.any
   11880:	ldr	x0, [sp, #24]
   11884:	bl	124a8 <elf_rawdata@@ELFUTILS_1.0+0xcb8>
   11888:	cmp	w0, #0x0
   1188c:	b.eq	11898 <elf_rawdata@@ELFUTILS_1.0+0xa8>  // b.none
   11890:	mov	x0, #0x0                   	// #0
   11894:	b	118a0 <elf_rawdata@@ELFUTILS_1.0+0xb0>
   11898:	ldr	x0, [sp, #24]
   1189c:	add	x0, x0, #0x48
   118a0:	ldp	x29, x30, [sp], #32
   118a4:	ret
   118a8:	stp	x29, x30, [sp, #-80]!
   118ac:	mov	x29, sp
   118b0:	str	w0, [sp, #44]
   118b4:	str	x1, [sp, #32]
   118b8:	str	x2, [sp, #24]
   118bc:	str	x3, [sp, #16]
   118c0:	str	xzr, [sp, #72]
   118c4:	ldr	x0, [sp, #72]
   118c8:	ldr	x1, [sp, #32]
   118cc:	add	x4, x1, x0
   118d0:	ldr	x0, [sp, #72]
   118d4:	ldr	x1, [sp, #24]
   118d8:	sub	x2, x1, x0
   118dc:	ldr	x1, [sp, #16]
   118e0:	ldr	x0, [sp, #72]
   118e4:	add	x0, x1, x0
   118e8:	mov	x3, x0
   118ec:	mov	x1, x4
   118f0:	ldr	w0, [sp, #44]
   118f4:	bl	3300 <pread@plt>
   118f8:	str	x0, [sp, #64]
   118fc:	ldr	x0, [sp, #64]
   11900:	cmn	x0, #0x1
   11904:	b.ne	11918 <elf_rawdata@@ELFUTILS_1.0+0x128>  // b.any
   11908:	bl	33e0 <__errno_location@plt>
   1190c:	ldr	w0, [x0]
   11910:	cmp	w0, #0x4
   11914:	b.eq	118c4 <elf_rawdata@@ELFUTILS_1.0+0xd4>  // b.none
   11918:	ldr	x0, [sp, #64]
   1191c:	str	x0, [sp, #56]
   11920:	ldr	x0, [sp, #56]
   11924:	cmp	x0, #0x0
   11928:	b.gt	11948 <elf_rawdata@@ELFUTILS_1.0+0x158>
   1192c:	ldr	x0, [sp, #56]
   11930:	cmp	x0, #0x0
   11934:	b.ge	11940 <elf_rawdata@@ELFUTILS_1.0+0x150>  // b.tcont
   11938:	ldr	x0, [sp, #56]
   1193c:	b	1196c <elf_rawdata@@ELFUTILS_1.0+0x17c>
   11940:	ldr	x0, [sp, #72]
   11944:	b	1196c <elf_rawdata@@ELFUTILS_1.0+0x17c>
   11948:	ldr	x1, [sp, #72]
   1194c:	ldr	x0, [sp, #56]
   11950:	add	x0, x1, x0
   11954:	str	x0, [sp, #72]
   11958:	ldr	x0, [sp, #72]
   1195c:	ldr	x1, [sp, #24]
   11960:	cmp	x1, x0
   11964:	b.hi	118c4 <elf_rawdata@@ELFUTILS_1.0+0xd4>  // b.pmore
   11968:	ldr	x0, [sp, #72]
   1196c:	ldp	x29, x30, [sp], #80
   11970:	ret
   11974:	stp	x29, x30, [sp, #-48]!
   11978:	mov	x29, sp
   1197c:	str	x0, [sp, #24]
   11980:	ldr	x0, [sp, #24]
   11984:	ldr	w0, [x0, #24]
   11988:	cmp	w0, #0x1
   1198c:	b.ne	119d0 <elf_rawdata@@ELFUTILS_1.0+0x1e0>  // b.any
   11990:	ldr	x0, [sp, #24]
   11994:	ldr	x0, [x0, #72]
   11998:	str	x0, [sp, #40]
   1199c:	b	119c4 <elf_rawdata@@ELFUTILS_1.0+0x1d4>
   119a0:	ldr	x0, [sp, #40]
   119a4:	ldr	w0, [x0, #60]
   119a8:	cmp	w0, #0x0
   119ac:	b.eq	119b8 <elf_rawdata@@ELFUTILS_1.0+0x1c8>  // b.none
   119b0:	ldr	x0, [sp, #40]
   119b4:	bl	11974 <elf_rawdata@@ELFUTILS_1.0+0x184>
   119b8:	ldr	x0, [sp, #40]
   119bc:	ldr	x0, [x0, #16]
   119c0:	str	x0, [sp, #40]
   119c4:	ldr	x0, [sp, #40]
   119c8:	cmp	x0, #0x0
   119cc:	b.ne	119a0 <elf_rawdata@@ELFUTILS_1.0+0x1b0>  // b.any
   119d0:	nop
   119d4:	ldp	x29, x30, [sp], #48
   119d8:	ret
   119dc:	stp	x29, x30, [sp, #-48]!
   119e0:	mov	x29, sp
   119e4:	str	x0, [sp, #24]
   119e8:	ldr	x0, [sp, #24]
   119ec:	ldr	w0, [x0, #24]
   119f0:	cmp	w0, #0x1
   119f4:	b.ne	11a38 <elf_rawdata@@ELFUTILS_1.0+0x248>  // b.any
   119f8:	ldr	x0, [sp, #24]
   119fc:	ldr	x0, [x0, #72]
   11a00:	str	x0, [sp, #40]
   11a04:	b	11a2c <elf_rawdata@@ELFUTILS_1.0+0x23c>
   11a08:	ldr	x0, [sp, #40]
   11a0c:	ldr	w0, [x0, #60]
   11a10:	cmp	w0, #0x0
   11a14:	b.eq	11a20 <elf_rawdata@@ELFUTILS_1.0+0x230>  // b.none
   11a18:	ldr	x0, [sp, #40]
   11a1c:	bl	119dc <elf_rawdata@@ELFUTILS_1.0+0x1ec>
   11a20:	ldr	x0, [sp, #40]
   11a24:	ldr	x0, [x0, #16]
   11a28:	str	x0, [sp, #40]
   11a2c:	ldr	x0, [sp, #40]
   11a30:	cmp	x0, #0x0
   11a34:	b.ne	11a08 <elf_rawdata@@ELFUTILS_1.0+0x218>  // b.any
   11a38:	nop
   11a3c:	ldp	x29, x30, [sp], #48
   11a40:	ret
   11a44:	stp	x29, x30, [sp, #-128]!
   11a48:	mov	x29, sp
   11a4c:	str	x0, [sp, #40]
   11a50:	str	w1, [sp, #36]
   11a54:	str	x2, [sp, #24]
   11a58:	ldr	w0, [sp, #36]
   11a5c:	cmp	w0, #0x5
   11a60:	b.ne	11acc <elf_rawdata@@ELFUTILS_1.0+0x2dc>  // b.any
   11a64:	ldr	x0, [sp, #40]
   11a68:	ldr	w0, [x0, #32]
   11a6c:	cmp	w0, #0x2
   11a70:	b.ne	11acc <elf_rawdata@@ELFUTILS_1.0+0x2dc>  // b.any
   11a74:	add	x0, sp, #0x30
   11a78:	mov	x1, x0
   11a7c:	ldr	x0, [sp, #40]
   11a80:	bl	aeb0 <elf64_getehdr@@ELFUTILS_1.0+0x3c>
   11a84:	str	x0, [sp, #112]
   11a88:	ldr	x0, [sp, #112]
   11a8c:	ldrh	w1, [x0, #18]
   11a90:	mov	w0, #0x9026                	// #36902
   11a94:	cmp	w1, w0
   11a98:	b.eq	11ac4 <elf_rawdata@@ELFUTILS_1.0+0x2d4>  // b.none
   11a9c:	ldr	x0, [sp, #112]
   11aa0:	ldrh	w0, [x0, #18]
   11aa4:	cmp	w0, #0x16
   11aa8:	b.ne	11abc <elf_rawdata@@ELFUTILS_1.0+0x2cc>  // b.any
   11aac:	ldr	x0, [sp, #112]
   11ab0:	ldrb	w0, [x0, #4]
   11ab4:	cmp	w0, #0x2
   11ab8:	b.eq	11ac4 <elf_rawdata@@ELFUTILS_1.0+0x2d4>  // b.none
   11abc:	mov	w0, #0xc                   	// #12
   11ac0:	b	11b60 <elf_rawdata@@ELFUTILS_1.0+0x370>
   11ac4:	mov	w0, #0xd                   	// #13
   11ac8:	b	11b60 <elf_rawdata@@ELFUTILS_1.0+0x370>
   11acc:	ldr	w0, [sp, #36]
   11ad0:	cmp	w0, #0x0
   11ad4:	b.lt	11ae4 <elf_rawdata@@ELFUTILS_1.0+0x2f4>  // b.tstop
   11ad8:	ldr	w0, [sp, #36]
   11adc:	cmp	w0, #0x12
   11ae0:	b.le	11b24 <elf_rawdata@@ELFUTILS_1.0+0x334>
   11ae4:	ldr	w1, [sp, #36]
   11ae8:	mov	w0, #0xfff5                	// #65525
   11aec:	movk	w0, #0x6fff, lsl #16
   11af0:	cmp	w1, w0
   11af4:	b.le	11b1c <elf_rawdata@@ELFUTILS_1.0+0x32c>
   11af8:	ldr	w1, [sp, #36]
   11afc:	mov	w0, #0x6fffffff            	// #1879048191
   11b00:	cmp	w1, w0
   11b04:	b.gt	11b1c <elf_rawdata@@ELFUTILS_1.0+0x32c>
   11b08:	ldr	w1, [sp, #36]
   11b0c:	mov	w0, #0x1d                  	// #29
   11b10:	movk	w0, #0x9000, lsl #16
   11b14:	add	w0, w1, w0
   11b18:	b	11b28 <elf_rawdata@@ELFUTILS_1.0+0x338>
   11b1c:	mov	w0, #0x0                   	// #0
   11b20:	b	11b28 <elf_rawdata@@ELFUTILS_1.0+0x338>
   11b24:	ldr	w0, [sp, #36]
   11b28:	adrp	x1, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   11b2c:	add	x1, x1, #0xa38
   11b30:	sxtw	x0, w0
   11b34:	ldr	w0, [x1, x0, lsl #2]
   11b38:	str	w0, [sp, #124]
   11b3c:	ldr	w0, [sp, #124]
   11b40:	cmp	w0, #0x13
   11b44:	b.ne	11b5c <elf_rawdata@@ELFUTILS_1.0+0x36c>  // b.any
   11b48:	ldr	x0, [sp, #24]
   11b4c:	cmp	x0, #0x8
   11b50:	b.ne	11b5c <elf_rawdata@@ELFUTILS_1.0+0x36c>  // b.any
   11b54:	mov	w0, #0x1a                  	// #26
   11b58:	str	w0, [sp, #124]
   11b5c:	ldr	w0, [sp, #124]
   11b60:	ldp	x29, x30, [sp], #128
   11b64:	ret
   11b68:	stp	x29, x30, [sp, #-80]!
   11b6c:	mov	x29, sp
   11b70:	str	x0, [sp, #40]
   11b74:	str	w1, [sp, #36]
   11b78:	str	w2, [sp, #32]
   11b7c:	str	x3, [sp, #24]
   11b80:	str	w4, [sp, #20]
   11b84:	ldr	w0, [sp, #36]
   11b88:	sub	w1, w0, #0x1
   11b8c:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   11b90:	add	x3, x0, #0xab0
   11b94:	ldr	w2, [sp, #20]
   11b98:	sxtw	x1, w1
   11b9c:	mov	x0, x1
   11ba0:	lsl	x0, x0, #3
   11ba4:	sub	x0, x0, x1
   11ba8:	lsl	x0, x0, #2
   11bac:	sub	x0, x0, x1
   11bb0:	add	x0, x3, x0
   11bb4:	add	x0, x0, x2
   11bb8:	ldrb	w0, [x0]
   11bbc:	cmp	w0, #0x0
   11bc0:	b.eq	11c04 <elf_rawdata@@ELFUTILS_1.0+0x414>  // b.none
   11bc4:	ldr	w0, [sp, #36]
   11bc8:	sub	w1, w0, #0x1
   11bcc:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   11bd0:	add	x3, x0, #0xab0
   11bd4:	ldr	w2, [sp, #20]
   11bd8:	sxtw	x1, w1
   11bdc:	mov	x0, x1
   11be0:	lsl	x0, x0, #3
   11be4:	sub	x0, x0, x1
   11be8:	lsl	x0, x0, #2
   11bec:	sub	x0, x0, x1
   11bf0:	add	x0, x3, x0
   11bf4:	add	x0, x0, x2
   11bf8:	ldrb	w0, [x0]
   11bfc:	and	x0, x0, #0xff
   11c00:	b	11c08 <elf_rawdata@@ELFUTILS_1.0+0x418>
   11c04:	mov	x0, #0x1                   	// #1
   11c08:	str	x0, [sp, #64]
   11c0c:	ldr	w0, [sp, #32]
   11c10:	cmp	w0, #0x1
   11c14:	b.eq	11c24 <elf_rawdata@@ELFUTILS_1.0+0x434>  // b.none
   11c18:	ldr	w0, [sp, #20]
   11c1c:	cmp	w0, #0x0
   11c20:	b.ne	11cac <elf_rawdata@@ELFUTILS_1.0+0x4bc>  // b.any
   11c24:	ldr	x0, [sp, #40]
   11c28:	ldr	x0, [x0, #160]
   11c2c:	mov	x1, x0
   11c30:	ldr	x0, [sp, #64]
   11c34:	sub	x0, x0, #0x1
   11c38:	and	x0, x1, x0
   11c3c:	cmp	x0, #0x0
   11c40:	b.ne	11c58 <elf_rawdata@@ELFUTILS_1.0+0x468>  // b.any
   11c44:	ldr	x0, [sp, #40]
   11c48:	ldr	x1, [x0, #160]
   11c4c:	ldr	x0, [sp, #40]
   11c50:	str	x1, [x0, #168]
   11c54:	b	11db8 <elf_rawdata@@ELFUTILS_1.0+0x5c8>
   11c58:	ldr	x0, [sp, #24]
   11c5c:	bl	3140 <malloc@plt>
   11c60:	mov	x1, x0
   11c64:	ldr	x0, [sp, #40]
   11c68:	str	x1, [x0, #168]
   11c6c:	ldr	x0, [sp, #40]
   11c70:	ldr	x0, [x0, #168]
   11c74:	cmp	x0, #0x0
   11c78:	b.ne	11c88 <elf_rawdata@@ELFUTILS_1.0+0x498>  // b.any
   11c7c:	mov	w0, #0x8                   	// #8
   11c80:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   11c84:	b	11e1c <elf_rawdata@@ELFUTILS_1.0+0x62c>
   11c88:	ldr	x0, [sp, #40]
   11c8c:	ldr	x3, [x0, #168]
   11c90:	ldr	x0, [sp, #40]
   11c94:	ldr	x0, [x0, #160]
   11c98:	ldr	x2, [sp, #24]
   11c9c:	mov	x1, x0
   11ca0:	mov	x0, x3
   11ca4:	bl	30a0 <memcpy@plt>
   11ca8:	b	11db8 <elf_rawdata@@ELFUTILS_1.0+0x5c8>
   11cac:	ldr	x0, [sp, #24]
   11cb0:	bl	3140 <malloc@plt>
   11cb4:	mov	x1, x0
   11cb8:	ldr	x0, [sp, #40]
   11cbc:	str	x1, [x0, #168]
   11cc0:	ldr	x0, [sp, #40]
   11cc4:	ldr	x0, [x0, #168]
   11cc8:	cmp	x0, #0x0
   11ccc:	b.ne	11cdc <elf_rawdata@@ELFUTILS_1.0+0x4ec>  // b.any
   11cd0:	mov	w0, #0x8                   	// #8
   11cd4:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   11cd8:	b	11e1c <elf_rawdata@@ELFUTILS_1.0+0x62c>
   11cdc:	ldr	x0, [sp, #40]
   11ce0:	ldr	x0, [x0, #160]
   11ce4:	mov	x1, x0
   11ce8:	ldr	x0, [sp, #64]
   11cec:	sub	x0, x0, #0x1
   11cf0:	and	x0, x1, x0
   11cf4:	cmp	x0, #0x0
   11cf8:	b.ne	11d0c <elf_rawdata@@ELFUTILS_1.0+0x51c>  // b.any
   11cfc:	ldr	x0, [sp, #40]
   11d00:	ldr	x0, [x0, #160]
   11d04:	str	x0, [sp, #72]
   11d08:	b	11d48 <elf_rawdata@@ELFUTILS_1.0+0x558>
   11d0c:	ldr	x0, [sp, #24]
   11d10:	bl	3140 <malloc@plt>
   11d14:	str	x0, [sp, #72]
   11d18:	ldr	x0, [sp, #72]
   11d1c:	cmp	x0, #0x0
   11d20:	b.ne	11d30 <elf_rawdata@@ELFUTILS_1.0+0x540>  // b.any
   11d24:	mov	w0, #0x8                   	// #8
   11d28:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   11d2c:	b	11e1c <elf_rawdata@@ELFUTILS_1.0+0x62c>
   11d30:	ldr	x0, [sp, #40]
   11d34:	ldr	x0, [x0, #160]
   11d38:	ldr	x2, [sp, #24]
   11d3c:	mov	x1, x0
   11d40:	ldr	x0, [sp, #72]
   11d44:	bl	30a0 <memcpy@plt>
   11d48:	ldr	w0, [sp, #36]
   11d4c:	sub	w1, w0, #0x1
   11d50:	adrp	x0, 35000 <elf_compress_gnu@@ELFUTILS_1.7+0x1495c>
   11d54:	add	x2, x0, #0xbd8
   11d58:	ldr	w3, [sp, #20]
   11d5c:	sxtw	x1, w1
   11d60:	mov	x0, x1
   11d64:	lsl	x0, x0, #3
   11d68:	sub	x0, x0, x1
   11d6c:	lsl	x0, x0, #2
   11d70:	sub	x0, x0, x1
   11d74:	add	x0, x0, x3
   11d78:	ldr	x0, [x2, x0, lsl #3]
   11d7c:	str	x0, [sp, #56]
   11d80:	ldr	x0, [sp, #40]
   11d84:	ldr	x0, [x0, #168]
   11d88:	ldr	x4, [sp, #56]
   11d8c:	mov	w3, #0x0                   	// #0
   11d90:	ldr	x2, [sp, #24]
   11d94:	ldr	x1, [sp, #72]
   11d98:	blr	x4
   11d9c:	ldr	x0, [sp, #40]
   11da0:	ldr	x0, [x0, #160]
   11da4:	ldr	x1, [sp, #72]
   11da8:	cmp	x1, x0
   11dac:	b.eq	11db8 <elf_rawdata@@ELFUTILS_1.0+0x5c8>  // b.none
   11db0:	ldr	x0, [sp, #72]
   11db4:	bl	32a0 <free@plt>
   11db8:	ldr	x0, [sp, #40]
   11dbc:	ldr	x1, [x0, #168]
   11dc0:	ldr	x0, [sp, #40]
   11dc4:	str	x1, [x0]
   11dc8:	ldr	x0, [sp, #40]
   11dcc:	ldr	x1, [sp, #24]
   11dd0:	str	x1, [x0, #16]
   11dd4:	ldr	x0, [sp, #40]
   11dd8:	ldr	w1, [sp, #20]
   11ddc:	str	w1, [x0, #8]
   11de0:	ldr	x0, [sp, #40]
   11de4:	ldr	x1, [x0, #96]
   11de8:	ldr	x0, [sp, #40]
   11dec:	str	x1, [x0, #24]
   11df0:	ldr	x0, [sp, #40]
   11df4:	ldr	x1, [x0, #104]
   11df8:	ldr	x0, [sp, #40]
   11dfc:	str	x1, [x0, #32]
   11e00:	ldr	x0, [sp, #40]
   11e04:	ldr	w1, [x0, #84]
   11e08:	ldr	x0, [sp, #40]
   11e0c:	str	w1, [x0, #12]
   11e10:	ldr	x0, [sp, #40]
   11e14:	ldr	x1, [sp, #40]
   11e18:	str	x1, [x0, #40]
   11e1c:	ldp	x29, x30, [sp], #80
   11e20:	ret
   11e24:	stp	x29, x30, [sp, #-192]!
   11e28:	mov	x29, sp
   11e2c:	str	x0, [sp, #24]
   11e30:	ldr	x0, [sp, #24]
   11e34:	ldr	x0, [x0, #136]
   11e38:	str	x0, [sp, #128]
   11e3c:	ldr	x0, [sp, #128]
   11e40:	ldr	w0, [x0, #32]
   11e44:	cmp	w0, #0x1
   11e48:	b.ne	11ecc <elf_rawdata@@ELFUTILS_1.0+0x6dc>  // b.any
   11e4c:	ldr	x0, [sp, #24]
   11e50:	ldr	x0, [x0, #144]
   11e54:	cmp	x0, #0x0
   11e58:	b.ne	11e64 <elf_rawdata@@ELFUTILS_1.0+0x674>  // b.any
   11e5c:	ldr	x0, [sp, #24]
   11e60:	bl	1010c <elf_newscn@@ELFUTILS_1.0+0x11d8>
   11e64:	str	x0, [sp, #112]
   11e68:	ldr	x0, [sp, #112]
   11e6c:	cmp	x0, #0x0
   11e70:	b.ne	11e7c <elf_rawdata@@ELFUTILS_1.0+0x68c>  // b.any
   11e74:	mov	w0, #0x1                   	// #1
   11e78:	b	124a0 <elf_rawdata@@ELFUTILS_1.0+0xcb0>
   11e7c:	ldr	x0, [sp, #112]
   11e80:	ldr	w0, [x0, #16]
   11e84:	mov	w0, w0
   11e88:	str	x0, [sp, #184]
   11e8c:	ldr	x0, [sp, #112]
   11e90:	ldr	w0, [x0, #20]
   11e94:	mov	w0, w0
   11e98:	str	x0, [sp, #176]
   11e9c:	ldr	x0, [sp, #112]
   11ea0:	ldr	w0, [x0, #4]
   11ea4:	str	w0, [sp, #156]
   11ea8:	ldr	x0, [sp, #112]
   11eac:	ldr	w0, [x0, #32]
   11eb0:	mov	w0, w0
   11eb4:	str	x0, [sp, #168]
   11eb8:	ldr	x0, [sp, #112]
   11ebc:	ldr	w0, [x0, #8]
   11ec0:	mov	w0, w0
   11ec4:	str	x0, [sp, #160]
   11ec8:	b	11f38 <elf_rawdata@@ELFUTILS_1.0+0x748>
   11ecc:	ldr	x0, [sp, #24]
   11ed0:	ldr	x0, [x0, #144]
   11ed4:	cmp	x0, #0x0
   11ed8:	b.ne	11ee4 <elf_rawdata@@ELFUTILS_1.0+0x6f4>  // b.any
   11edc:	ldr	x0, [sp, #24]
   11ee0:	bl	10d9c <elf32_getshdr@@ELFUTILS_1.0+0xc30>
   11ee4:	str	x0, [sp, #120]
   11ee8:	ldr	x0, [sp, #120]
   11eec:	cmp	x0, #0x0
   11ef0:	b.ne	11efc <elf_rawdata@@ELFUTILS_1.0+0x70c>  // b.any
   11ef4:	mov	w0, #0x1                   	// #1
   11ef8:	b	124a0 <elf_rawdata@@ELFUTILS_1.0+0xcb0>
   11efc:	ldr	x0, [sp, #120]
   11f00:	ldr	x0, [x0, #24]
   11f04:	str	x0, [sp, #184]
   11f08:	ldr	x0, [sp, #120]
   11f0c:	ldr	x0, [x0, #32]
   11f10:	str	x0, [sp, #176]
   11f14:	ldr	x0, [sp, #120]
   11f18:	ldr	w0, [x0, #4]
   11f1c:	str	w0, [sp, #156]
   11f20:	ldr	x0, [sp, #120]
   11f24:	ldr	x0, [x0, #48]
   11f28:	str	x0, [sp, #168]
   11f2c:	ldr	x0, [sp, #120]
   11f30:	ldr	x0, [x0, #8]
   11f34:	str	x0, [sp, #160]
   11f38:	ldr	x0, [sp, #176]
   11f3c:	cmp	x0, #0x0
   11f40:	b.eq	123c4 <elf_rawdata@@ELFUTILS_1.0+0xbd4>  // b.none
   11f44:	ldr	w0, [sp, #156]
   11f48:	cmp	w0, #0x8
   11f4c:	b.eq	123c4 <elf_rawdata@@ELFUTILS_1.0+0xbd4>  // b.none
   11f50:	ldr	x0, [sp, #160]
   11f54:	and	x0, x0, #0x800
   11f58:	cmp	x0, #0x0
   11f5c:	b.eq	11fec <elf_rawdata@@ELFUTILS_1.0+0x7fc>  // b.none
   11f60:	mov	x0, #0x1                   	// #1
   11f64:	str	x0, [sp, #144]
   11f68:	ldr	x0, [sp, #128]
   11f6c:	ldr	w0, [x0, #32]
   11f70:	sub	w1, w0, #0x1
   11f74:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   11f78:	add	x2, x0, #0xab0
   11f7c:	mov	w1, w1
   11f80:	mov	x0, x1
   11f84:	lsl	x0, x0, #3
   11f88:	sub	x0, x0, x1
   11f8c:	lsl	x0, x0, #2
   11f90:	sub	x0, x0, x1
   11f94:	add	x0, x2, x0
   11f98:	ldrb	w0, [x0, #25]
   11f9c:	cmp	w0, #0x0
   11fa0:	b.eq	11fe0 <elf_rawdata@@ELFUTILS_1.0+0x7f0>  // b.none
   11fa4:	ldr	x0, [sp, #128]
   11fa8:	ldr	w0, [x0, #32]
   11fac:	sub	w1, w0, #0x1
   11fb0:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   11fb4:	add	x2, x0, #0xab0
   11fb8:	mov	w1, w1
   11fbc:	mov	x0, x1
   11fc0:	lsl	x0, x0, #3
   11fc4:	sub	x0, x0, x1
   11fc8:	lsl	x0, x0, #2
   11fcc:	sub	x0, x0, x1
   11fd0:	add	x0, x2, x0
   11fd4:	ldrb	w0, [x0, #25]
   11fd8:	and	x0, x0, #0xff
   11fdc:	b	11fe4 <elf_rawdata@@ELFUTILS_1.0+0x7f4>
   11fe0:	mov	x0, #0x1                   	// #1
   11fe4:	str	x0, [sp, #168]
   11fe8:	b	1216c <elf_rawdata@@ELFUTILS_1.0+0x97c>
   11fec:	ldr	w0, [sp, #156]
   11ff0:	cmp	w0, #0x5
   11ff4:	b.ne	12054 <elf_rawdata@@ELFUTILS_1.0+0x864>  // b.any
   11ff8:	add	x0, sp, #0x20
   11ffc:	mov	x1, x0
   12000:	ldr	x0, [sp, #128]
   12004:	bl	aeb0 <elf64_getehdr@@ELFUTILS_1.0+0x3c>
   12008:	str	x0, [sp, #104]
   1200c:	ldr	x0, [sp, #104]
   12010:	ldrh	w1, [x0, #18]
   12014:	mov	w0, #0x9026                	// #36902
   12018:	cmp	w1, w0
   1201c:	b.eq	12040 <elf_rawdata@@ELFUTILS_1.0+0x850>  // b.none
   12020:	ldr	x0, [sp, #104]
   12024:	ldrh	w0, [x0, #18]
   12028:	cmp	w0, #0x16
   1202c:	b.ne	12048 <elf_rawdata@@ELFUTILS_1.0+0x858>  // b.any
   12030:	ldr	x0, [sp, #104]
   12034:	ldrb	w0, [x0, #4]
   12038:	cmp	w0, #0x2
   1203c:	b.ne	12048 <elf_rawdata@@ELFUTILS_1.0+0x858>  // b.any
   12040:	mov	x0, #0x8                   	// #8
   12044:	b	1204c <elf_rawdata@@ELFUTILS_1.0+0x85c>
   12048:	mov	x0, #0x4                   	// #4
   1204c:	str	x0, [sp, #144]
   12050:	b	1216c <elf_rawdata@@ELFUTILS_1.0+0x97c>
   12054:	ldr	w0, [sp, #156]
   12058:	cmp	w0, #0x0
   1205c:	b.lt	1206c <elf_rawdata@@ELFUTILS_1.0+0x87c>  // b.tstop
   12060:	ldr	w0, [sp, #156]
   12064:	cmp	w0, #0x12
   12068:	b.le	120ac <elf_rawdata@@ELFUTILS_1.0+0x8bc>
   1206c:	ldr	w1, [sp, #156]
   12070:	mov	w0, #0xfff5                	// #65525
   12074:	movk	w0, #0x6fff, lsl #16
   12078:	cmp	w1, w0
   1207c:	b.le	120a4 <elf_rawdata@@ELFUTILS_1.0+0x8b4>
   12080:	ldr	w1, [sp, #156]
   12084:	mov	w0, #0x6fffffff            	// #1879048191
   12088:	cmp	w1, w0
   1208c:	b.gt	120a4 <elf_rawdata@@ELFUTILS_1.0+0x8b4>
   12090:	ldr	w1, [sp, #156]
   12094:	mov	w0, #0x1d                  	// #29
   12098:	movk	w0, #0x9000, lsl #16
   1209c:	add	w0, w1, w0
   120a0:	b	120b0 <elf_rawdata@@ELFUTILS_1.0+0x8c0>
   120a4:	mov	w0, #0x0                   	// #0
   120a8:	b	120b0 <elf_rawdata@@ELFUTILS_1.0+0x8c0>
   120ac:	ldr	w0, [sp, #156]
   120b0:	adrp	x1, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   120b4:	add	x1, x1, #0xa38
   120b8:	sxtw	x0, w0
   120bc:	ldr	w0, [x1, x0, lsl #2]
   120c0:	str	w0, [sp, #140]
   120c4:	ldr	w0, [sp, #140]
   120c8:	cmp	w0, #0x13
   120cc:	b.ne	120e4 <elf_rawdata@@ELFUTILS_1.0+0x8f4>  // b.any
   120d0:	ldr	x0, [sp, #168]
   120d4:	cmp	x0, #0x8
   120d8:	b.ne	120e4 <elf_rawdata@@ELFUTILS_1.0+0x8f4>  // b.any
   120dc:	mov	w0, #0x1a                  	// #26
   120e0:	str	w0, [sp, #140]
   120e4:	ldr	w0, [sp, #140]
   120e8:	cmp	w0, #0xf
   120ec:	b.eq	12124 <elf_rawdata@@ELFUTILS_1.0+0x934>  // b.none
   120f0:	ldr	w0, [sp, #140]
   120f4:	cmp	w0, #0x13
   120f8:	b.eq	12124 <elf_rawdata@@ELFUTILS_1.0+0x934>  // b.none
   120fc:	ldr	w0, [sp, #140]
   12100:	cmp	w0, #0x1a
   12104:	b.eq	12124 <elf_rawdata@@ELFUTILS_1.0+0x934>  // b.none
   12108:	ldr	w0, [sp, #140]
   1210c:	cmp	w0, #0x17
   12110:	b.ne	12130 <elf_rawdata@@ELFUTILS_1.0+0x940>  // b.any
   12114:	ldr	x0, [sp, #128]
   12118:	ldr	w0, [x0, #32]
   1211c:	cmp	w0, #0x2
   12120:	b.ne	12130 <elf_rawdata@@ELFUTILS_1.0+0x940>  // b.any
   12124:	mov	x0, #0x1                   	// #1
   12128:	str	x0, [sp, #144]
   1212c:	b	1216c <elf_rawdata@@ELFUTILS_1.0+0x97c>
   12130:	ldr	x0, [sp, #128]
   12134:	ldr	w0, [x0, #32]
   12138:	sub	w1, w0, #0x1
   1213c:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   12140:	add	x2, x0, #0x3d0
   12144:	ldr	w3, [sp, #140]
   12148:	mov	w1, w1
   1214c:	mov	x0, x1
   12150:	lsl	x0, x0, #3
   12154:	sub	x0, x0, x1
   12158:	lsl	x0, x0, #2
   1215c:	sub	x0, x0, x1
   12160:	add	x0, x0, x3
   12164:	ldr	x0, [x2, x0, lsl #3]
   12168:	str	x0, [sp, #144]
   1216c:	ldr	x0, [sp, #144]
   12170:	cmp	x0, #0x0
   12174:	b.ne	12180 <elf_rawdata@@ELFUTILS_1.0+0x990>  // b.any
   12178:	mov	x0, #0x1                   	// #1
   1217c:	str	x0, [sp, #144]
   12180:	ldr	x0, [sp, #176]
   12184:	ldr	x1, [sp, #144]
   12188:	udiv	x2, x0, x1
   1218c:	ldr	x1, [sp, #144]
   12190:	mul	x1, x2, x1
   12194:	sub	x0, x0, x1
   12198:	cmp	x0, #0x0
   1219c:	cset	w0, ne  // ne = any
   121a0:	and	w0, w0, #0xff
   121a4:	and	x0, x0, #0xff
   121a8:	cmp	x0, #0x0
   121ac:	b.eq	121c0 <elf_rawdata@@ELFUTILS_1.0+0x9d0>  // b.none
   121b0:	mov	w0, #0x21                  	// #33
   121b4:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   121b8:	mov	w0, #0x1                   	// #1
   121bc:	b	124a0 <elf_rawdata@@ELFUTILS_1.0+0xcb0>
   121c0:	ldr	x0, [sp, #128]
   121c4:	ldr	x0, [x0]
   121c8:	cmp	x0, #0x0
   121cc:	b.eq	1226c <elf_rawdata@@ELFUTILS_1.0+0xa7c>  // b.none
   121d0:	ldr	x0, [sp, #128]
   121d4:	ldr	x0, [x0, #48]
   121d8:	ldr	x1, [sp, #184]
   121dc:	cmp	x1, x0
   121e0:	cset	w0, hi  // hi = pmore
   121e4:	and	w0, w0, #0xff
   121e8:	and	x0, x0, #0xff
   121ec:	cmp	x0, #0x0
   121f0:	b.ne	12220 <elf_rawdata@@ELFUTILS_1.0+0xa30>  // b.any
   121f4:	ldr	x0, [sp, #128]
   121f8:	ldr	x1, [x0, #48]
   121fc:	ldr	x0, [sp, #184]
   12200:	sub	x0, x1, x0
   12204:	ldr	x1, [sp, #176]
   12208:	cmp	x1, x0
   1220c:	cset	w0, hi  // hi = pmore
   12210:	and	w0, w0, #0xff
   12214:	and	x0, x0, #0xff
   12218:	cmp	x0, #0x0
   1221c:	b.eq	12230 <elf_rawdata@@ELFUTILS_1.0+0xa40>  // b.none
   12220:	mov	w0, #0x20                  	// #32
   12224:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   12228:	mov	w0, #0x1                   	// #1
   1222c:	b	124a0 <elf_rawdata@@ELFUTILS_1.0+0xcb0>
   12230:	ldr	x0, [sp, #128]
   12234:	ldr	x1, [x0]
   12238:	ldr	x0, [sp, #128]
   1223c:	ldr	x0, [x0, #40]
   12240:	mov	x2, x0
   12244:	ldr	x0, [sp, #184]
   12248:	add	x0, x2, x0
   1224c:	add	x1, x1, x0
   12250:	ldr	x0, [sp, #24]
   12254:	str	x1, [x0, #72]
   12258:	ldr	x0, [sp, #24]
   1225c:	ldr	x1, [x0, #72]
   12260:	ldr	x0, [sp, #24]
   12264:	str	x1, [x0, #160]
   12268:	b	123c4 <elf_rawdata@@ELFUTILS_1.0+0xbd4>
   1226c:	ldr	x0, [sp, #128]
   12270:	ldr	w0, [x0, #36]
   12274:	cmn	w0, #0x1
   12278:	cset	w0, ne  // ne = any
   1227c:	and	w0, w0, #0xff
   12280:	and	x0, x0, #0xff
   12284:	cmp	x0, #0x0
   12288:	b.eq	123b4 <elf_rawdata@@ELFUTILS_1.0+0xbc4>  // b.none
   1228c:	ldr	x0, [sp, #128]
   12290:	ldr	x0, [x0, #48]
   12294:	ldr	x1, [sp, #184]
   12298:	cmp	x1, x0
   1229c:	cset	w0, hi  // hi = pmore
   122a0:	and	w0, w0, #0xff
   122a4:	and	x0, x0, #0xff
   122a8:	cmp	x0, #0x0
   122ac:	b.ne	122dc <elf_rawdata@@ELFUTILS_1.0+0xaec>  // b.any
   122b0:	ldr	x0, [sp, #128]
   122b4:	ldr	x1, [x0, #48]
   122b8:	ldr	x0, [sp, #184]
   122bc:	sub	x0, x1, x0
   122c0:	ldr	x1, [sp, #176]
   122c4:	cmp	x1, x0
   122c8:	cset	w0, hi  // hi = pmore
   122cc:	and	w0, w0, #0xff
   122d0:	and	x0, x0, #0xff
   122d4:	cmp	x0, #0x0
   122d8:	b.eq	122ec <elf_rawdata@@ELFUTILS_1.0+0xafc>  // b.none
   122dc:	mov	w0, #0x20                  	// #32
   122e0:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   122e4:	mov	w0, #0x1                   	// #1
   122e8:	b	124a0 <elf_rawdata@@ELFUTILS_1.0+0xcb0>
   122ec:	ldr	x0, [sp, #176]
   122f0:	bl	3140 <malloc@plt>
   122f4:	mov	x1, x0
   122f8:	ldr	x0, [sp, #24]
   122fc:	str	x1, [x0, #72]
   12300:	ldr	x0, [sp, #24]
   12304:	ldr	x1, [x0, #72]
   12308:	ldr	x0, [sp, #24]
   1230c:	str	x1, [x0, #160]
   12310:	ldr	x0, [sp, #24]
   12314:	ldr	x0, [x0, #72]
   12318:	cmp	x0, #0x0
   1231c:	b.ne	12330 <elf_rawdata@@ELFUTILS_1.0+0xb40>  // b.any
   12320:	mov	w0, #0x8                   	// #8
   12324:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   12328:	mov	w0, #0x1                   	// #1
   1232c:	b	124a0 <elf_rawdata@@ELFUTILS_1.0+0xcb0>
   12330:	ldr	x0, [sp, #128]
   12334:	ldr	w4, [x0, #36]
   12338:	ldr	x0, [sp, #24]
   1233c:	ldr	x1, [x0, #72]
   12340:	ldr	x0, [sp, #128]
   12344:	ldr	x0, [x0, #40]
   12348:	mov	x2, x0
   1234c:	ldr	x0, [sp, #184]
   12350:	add	x0, x2, x0
   12354:	mov	x3, x0
   12358:	ldr	x2, [sp, #176]
   1235c:	mov	w0, w4
   12360:	bl	118a8 <elf_rawdata@@ELFUTILS_1.0+0xb8>
   12364:	str	x0, [sp, #96]
   12368:	ldr	x0, [sp, #176]
   1236c:	ldr	x1, [sp, #96]
   12370:	cmp	x1, x0
   12374:	cset	w0, ne  // ne = any
   12378:	and	w0, w0, #0xff
   1237c:	and	x0, x0, #0xff
   12380:	cmp	x0, #0x0
   12384:	b.eq	123c4 <elf_rawdata@@ELFUTILS_1.0+0xbd4>  // b.none
   12388:	ldr	x0, [sp, #24]
   1238c:	ldr	x0, [x0, #72]
   12390:	bl	32a0 <free@plt>
   12394:	ldr	x0, [sp, #24]
   12398:	str	xzr, [x0, #72]
   1239c:	ldr	x0, [sp, #24]
   123a0:	str	xzr, [x0, #160]
   123a4:	mov	w0, #0x13                  	// #19
   123a8:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   123ac:	mov	w0, #0x1                   	// #1
   123b0:	b	124a0 <elf_rawdata@@ELFUTILS_1.0+0xcb0>
   123b4:	mov	w0, #0x1b                  	// #27
   123b8:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   123bc:	mov	w0, #0x1                   	// #1
   123c0:	b	124a0 <elf_rawdata@@ELFUTILS_1.0+0xcb0>
   123c4:	ldr	x0, [sp, #24]
   123c8:	ldr	x1, [sp, #176]
   123cc:	str	x1, [x0, #88]
   123d0:	ldr	x0, [sp, #160]
   123d4:	and	x0, x0, #0x800
   123d8:	cmp	x0, #0x0
   123dc:	b.eq	123f0 <elf_rawdata@@ELFUTILS_1.0+0xc00>  // b.none
   123e0:	ldr	x0, [sp, #24]
   123e4:	mov	w1, #0x19                  	// #25
   123e8:	str	w1, [x0, #80]
   123ec:	b	1240c <elf_rawdata@@ELFUTILS_1.0+0xc1c>
   123f0:	ldr	x2, [sp, #168]
   123f4:	ldr	w1, [sp, #156]
   123f8:	ldr	x0, [sp, #128]
   123fc:	bl	11a44 <elf_rawdata@@ELFUTILS_1.0+0x254>
   12400:	mov	w1, w0
   12404:	ldr	x0, [sp, #24]
   12408:	str	w1, [x0, #80]
   1240c:	ldr	x0, [sp, #24]
   12410:	str	xzr, [x0, #96]
   12414:	ldr	x0, [sp, #168]
   12418:	cmp	x0, #0x0
   1241c:	b.ne	12424 <elf_rawdata@@ELFUTILS_1.0+0xc34>  // b.any
   12420:	mov	x0, #0x1                   	// #1
   12424:	str	x0, [sp, #168]
   12428:	ldr	w0, [sp, #156]
   1242c:	cmp	w0, #0x8
   12430:	b.eq	1244c <elf_rawdata@@ELFUTILS_1.0+0xc5c>  // b.none
   12434:	ldr	x1, [sp, #168]
   12438:	ldr	x0, [sp, #184]
   1243c:	cmp	x1, x0
   12440:	b.ls	1244c <elf_rawdata@@ELFUTILS_1.0+0xc5c>  // b.plast
   12444:	ldr	x0, [sp, #184]
   12448:	str	x0, [sp, #168]
   1244c:	ldr	x0, [sp, #24]
   12450:	ldr	x1, [sp, #168]
   12454:	str	x1, [x0, #104]
   12458:	ldr	x0, [sp, #128]
   1245c:	ldr	x0, [x0, #72]
   12460:	ldrb	w0, [x0, #6]
   12464:	mov	w1, w0
   12468:	ldr	x0, [sp, #24]
   1246c:	str	w1, [x0, #84]
   12470:	ldr	x0, [sp, #24]
   12474:	ldr	x1, [sp, #24]
   12478:	str	x1, [x0, #112]
   1247c:	ldr	x0, [sp, #24]
   12480:	mov	w1, #0x1                   	// #1
   12484:	str	w1, [x0, #120]
   12488:	ldr	x0, [sp, #24]
   1248c:	ldr	w0, [x0, #156]
   12490:	orr	w1, w0, #0x100
   12494:	ldr	x0, [sp, #24]
   12498:	str	w1, [x0, #156]
   1249c:	mov	w0, #0x0                   	// #0
   124a0:	ldp	x29, x30, [sp], #192
   124a4:	ret
   124a8:	stp	x29, x30, [sp, #-48]!
   124ac:	mov	x29, sp
   124b0:	str	x0, [sp, #24]
   124b4:	ldr	x0, [sp, #24]
   124b8:	cmp	x0, #0x0
   124bc:	b.ne	124c8 <elf_rawdata@@ELFUTILS_1.0+0xcd8>  // b.any
   124c0:	mov	w0, #0x1                   	// #1
   124c4:	b	124d8 <elf_rawdata@@ELFUTILS_1.0+0xce8>
   124c8:	ldr	x0, [sp, #24]
   124cc:	bl	11e24 <elf_rawdata@@ELFUTILS_1.0+0x634>
   124d0:	str	w0, [sp, #44]
   124d4:	ldr	w0, [sp, #44]
   124d8:	ldp	x29, x30, [sp], #48
   124dc:	ret
   124e0:	stp	x29, x30, [sp, #-48]!
   124e4:	mov	x29, sp
   124e8:	str	x0, [sp, #24]
   124ec:	str	w1, [sp, #20]
   124f0:	ldr	x0, [sp, #24]
   124f4:	ldr	x0, [x0, #72]
   124f8:	cmp	x0, #0x0
   124fc:	b.eq	1257c <elf_rawdata@@ELFUTILS_1.0+0xd8c>  // b.none
   12500:	ldr	x0, [sp, #24]
   12504:	ldr	x0, [x0, #88]
   12508:	cmp	x0, #0x0
   1250c:	b.eq	1257c <elf_rawdata@@ELFUTILS_1.0+0xd8c>  // b.none
   12510:	ldr	x0, [sp, #24]
   12514:	ldr	x0, [x0, #136]
   12518:	str	x0, [sp, #40]
   1251c:	ldr	w0, [sp, #20]
   12520:	cmp	w0, #0x0
   12524:	b.ne	12538 <elf_rawdata@@ELFUTILS_1.0+0xd48>  // b.any
   12528:	ldr	x0, [sp, #24]
   1252c:	ldr	x0, [x0, #64]
   12530:	cmp	x0, #0x0
   12534:	b.ne	125c0 <elf_rawdata@@ELFUTILS_1.0+0xdd0>  // b.any
   12538:	ldr	x0, [sp, #40]
   1253c:	ldr	w0, [x0, #32]
   12540:	mov	w5, w0
   12544:	ldr	x0, [sp, #40]
   12548:	ldr	x0, [x0, #72]
   1254c:	ldrb	w0, [x0, #5]
   12550:	mov	w2, w0
   12554:	ldr	x0, [sp, #24]
   12558:	ldr	x1, [x0, #88]
   1255c:	ldr	x0, [sp, #24]
   12560:	ldr	w0, [x0, #80]
   12564:	mov	w4, w0
   12568:	mov	x3, x1
   1256c:	mov	w1, w5
   12570:	ldr	x0, [sp, #24]
   12574:	bl	11b68 <elf_rawdata@@ELFUTILS_1.0+0x378>
   12578:	b	125b0 <elf_rawdata@@ELFUTILS_1.0+0xdc0>
   1257c:	ldr	x2, [sp, #24]
   12580:	ldr	x0, [sp, #24]
   12584:	add	x1, x0, #0x48
   12588:	mov	x0, x2
   1258c:	ldp	x2, x3, [x1]
   12590:	stp	x2, x3, [x0]
   12594:	ldp	x2, x3, [x1, #16]
   12598:	stp	x2, x3, [x0, #16]
   1259c:	ldr	x1, [x1, #32]
   125a0:	str	x1, [x0, #32]
   125a4:	ldr	x0, [sp, #24]
   125a8:	ldr	x1, [sp, #24]
   125ac:	str	x1, [x0, #40]
   125b0:	ldr	x1, [sp, #24]
   125b4:	ldr	x0, [sp, #24]
   125b8:	str	x1, [x0, #64]
   125bc:	b	125c4 <elf_rawdata@@ELFUTILS_1.0+0xdd4>
   125c0:	nop
   125c4:	ldp	x29, x30, [sp], #48
   125c8:	ret
   125cc:	stp	x29, x30, [sp, #-64]!
   125d0:	mov	x29, sp
   125d4:	str	x0, [sp, #24]
   125d8:	str	x1, [sp, #16]
   125dc:	str	xzr, [sp, #56]
   125e0:	str	wzr, [sp, #52]
   125e4:	ldr	x0, [sp, #24]
   125e8:	cmp	x0, #0x0
   125ec:	b.ne	125f8 <elf_rawdata@@ELFUTILS_1.0+0xe08>  // b.any
   125f0:	mov	x0, #0x0                   	// #0
   125f4:	b	12758 <elf_rawdata@@ELFUTILS_1.0+0xf68>
   125f8:	ldr	x0, [sp, #24]
   125fc:	ldr	x0, [x0, #136]
   12600:	ldr	w0, [x0, #24]
   12604:	cmp	w0, #0x3
   12608:	cset	w0, ne  // ne = any
   1260c:	and	w0, w0, #0xff
   12610:	and	x0, x0, #0xff
   12614:	cmp	x0, #0x0
   12618:	b.eq	1262c <elf_rawdata@@ELFUTILS_1.0+0xe3c>  // b.none
   1261c:	mov	w0, #0x4                   	// #4
   12620:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   12624:	mov	x0, #0x0                   	// #0
   12628:	b	12758 <elf_rawdata@@ELFUTILS_1.0+0xf68>
   1262c:	ldr	x0, [sp, #24]
   12630:	ldr	x0, [x0, #136]
   12634:	str	x0, [sp, #32]
   12638:	ldr	x0, [sp, #16]
   1263c:	cmp	x0, #0x0
   12640:	b.eq	126f0 <elf_rawdata@@ELFUTILS_1.0+0xf00>  // b.none
   12644:	ldr	x0, [sp, #24]
   12648:	ldr	x0, [x0, #64]
   1264c:	cmp	x0, #0x0
   12650:	b.eq	12678 <elf_rawdata@@ELFUTILS_1.0+0xe88>  // b.none
   12654:	ldr	x0, [sp, #16]
   12658:	ldr	x0, [x0, #40]
   1265c:	ldr	x1, [sp, #24]
   12660:	cmp	x1, x0
   12664:	cset	w0, ne  // ne = any
   12668:	and	w0, w0, #0xff
   1266c:	and	x0, x0, #0xff
   12670:	cmp	x0, #0x0
   12674:	b.eq	12684 <elf_rawdata@@ELFUTILS_1.0+0xe94>  // b.none
   12678:	mov	w0, #0x1f                  	// #31
   1267c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   12680:	b	12754 <elf_rawdata@@ELFUTILS_1.0+0xf64>
   12684:	ldr	x0, [sp, #24]
   12688:	str	x0, [sp, #40]
   1268c:	ldr	x0, [sp, #40]
   12690:	cmp	x0, #0x0
   12694:	b.ne	126a4 <elf_rawdata@@ELFUTILS_1.0+0xeb4>  // b.any
   12698:	mov	w0, #0x1f                  	// #31
   1269c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   126a0:	b	12754 <elf_rawdata@@ELFUTILS_1.0+0xf64>
   126a4:	ldr	x0, [sp, #40]
   126a8:	ldr	x1, [sp, #16]
   126ac:	cmp	x1, x0
   126b0:	b.eq	126c4 <elf_rawdata@@ELFUTILS_1.0+0xed4>  // b.none
   126b4:	ldr	x0, [sp, #40]
   126b8:	ldr	x0, [x0, #48]
   126bc:	str	x0, [sp, #40]
   126c0:	b	1268c <elf_rawdata@@ELFUTILS_1.0+0xe9c>
   126c4:	nop
   126c8:	ldr	x0, [sp, #40]
   126cc:	ldr	x0, [x0, #48]
   126d0:	cmp	x0, #0x0
   126d4:	b.eq	126e4 <elf_rawdata@@ELFUTILS_1.0+0xef4>  // b.none
   126d8:	ldr	x0, [sp, #40]
   126dc:	ldr	x0, [x0, #48]
   126e0:	b	126e8 <elf_rawdata@@ELFUTILS_1.0+0xef8>
   126e4:	mov	x0, #0x0                   	// #0
   126e8:	str	x0, [sp, #56]
   126ec:	b	12754 <elf_rawdata@@ELFUTILS_1.0+0xf64>
   126f0:	ldr	x0, [sp, #24]
   126f4:	ldr	w0, [x0, #120]
   126f8:	cmp	w0, #0x0
   126fc:	b.ne	12728 <elf_rawdata@@ELFUTILS_1.0+0xf38>  // b.any
   12700:	mov	w0, #0x1                   	// #1
   12704:	str	w0, [sp, #52]
   12708:	ldr	x0, [sp, #24]
   1270c:	ldr	w0, [x0, #120]
   12710:	cmp	w0, #0x0
   12714:	b.ne	12728 <elf_rawdata@@ELFUTILS_1.0+0xf38>  // b.any
   12718:	ldr	x0, [sp, #24]
   1271c:	bl	11e24 <elf_rawdata@@ELFUTILS_1.0+0x634>
   12720:	cmp	w0, #0x0
   12724:	b.ne	12750 <elf_rawdata@@ELFUTILS_1.0+0xf60>  // b.any
   12728:	ldr	x0, [sp, #24]
   1272c:	ldr	x0, [x0, #64]
   12730:	cmp	x0, #0x0
   12734:	b.ne	12744 <elf_rawdata@@ELFUTILS_1.0+0xf54>  // b.any
   12738:	ldr	w1, [sp, #52]
   1273c:	ldr	x0, [sp, #24]
   12740:	bl	124e0 <elf_rawdata@@ELFUTILS_1.0+0xcf0>
   12744:	ldr	x0, [sp, #24]
   12748:	str	x0, [sp, #56]
   1274c:	b	12754 <elf_rawdata@@ELFUTILS_1.0+0xf64>
   12750:	nop
   12754:	ldr	x0, [sp, #56]
   12758:	ldp	x29, x30, [sp], #64
   1275c:	ret

0000000000012760 <elf_getdata@@ELFUTILS_1.0>:
   12760:	stp	x29, x30, [sp, #-48]!
   12764:	mov	x29, sp
   12768:	str	x0, [sp, #24]
   1276c:	str	x1, [sp, #16]
   12770:	ldr	x0, [sp, #24]
   12774:	cmp	x0, #0x0
   12778:	b.ne	12784 <elf_getdata@@ELFUTILS_1.0+0x24>  // b.any
   1277c:	mov	x0, #0x0                   	// #0
   12780:	b	12798 <elf_getdata@@ELFUTILS_1.0+0x38>
   12784:	ldr	x1, [sp, #16]
   12788:	ldr	x0, [sp, #24]
   1278c:	bl	125cc <elf_rawdata@@ELFUTILS_1.0+0xddc>
   12790:	str	x0, [sp, #40]
   12794:	ldr	x0, [sp, #40]
   12798:	ldp	x29, x30, [sp], #48
   1279c:	ret

00000000000127a0 <elf_newdata@@ELFUTILS_1.0>:
   127a0:	stp	x29, x30, [sp, #-48]!
   127a4:	mov	x29, sp
   127a8:	str	x0, [sp, #24]
   127ac:	str	xzr, [sp, #40]
   127b0:	ldr	x0, [sp, #24]
   127b4:	cmp	x0, #0x0
   127b8:	b.ne	127c4 <elf_newdata@@ELFUTILS_1.0+0x24>  // b.any
   127bc:	mov	x0, #0x0                   	// #0
   127c0:	b	1293c <elf_newdata@@ELFUTILS_1.0+0x19c>
   127c4:	ldr	x0, [sp, #24]
   127c8:	ldr	x0, [x0, #128]
   127cc:	cmp	x0, #0x0
   127d0:	cset	w0, eq  // eq = none
   127d4:	and	w0, w0, #0xff
   127d8:	and	x0, x0, #0xff
   127dc:	cmp	x0, #0x0
   127e0:	b.eq	127f4 <elf_newdata@@ELFUTILS_1.0+0x54>  // b.none
   127e4:	mov	w0, #0x1e                  	// #30
   127e8:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   127ec:	mov	x0, #0x0                   	// #0
   127f0:	b	1293c <elf_newdata@@ELFUTILS_1.0+0x19c>
   127f4:	ldr	x0, [sp, #24]
   127f8:	ldr	x0, [x0, #136]
   127fc:	ldr	x0, [x0, #72]
   12800:	cmp	x0, #0x0
   12804:	b.ne	12818 <elf_newdata@@ELFUTILS_1.0+0x78>  // b.any
   12808:	mov	w0, #0x1a                  	// #26
   1280c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   12810:	mov	x0, #0x0                   	// #0
   12814:	b	1293c <elf_newdata@@ELFUTILS_1.0+0x19c>
   12818:	ldr	x0, [sp, #24]
   1281c:	ldr	w0, [x0, #120]
   12820:	cmp	w0, #0x0
   12824:	b.eq	12854 <elf_newdata@@ELFUTILS_1.0+0xb4>  // b.none
   12828:	ldr	x0, [sp, #24]
   1282c:	ldr	x0, [x0, #160]
   12830:	cmp	x0, #0x0
   12834:	b.eq	12854 <elf_newdata@@ELFUTILS_1.0+0xb4>  // b.none
   12838:	ldr	x0, [sp, #24]
   1283c:	ldr	x0, [x0, #64]
   12840:	cmp	x0, #0x0
   12844:	b.ne	12854 <elf_newdata@@ELFUTILS_1.0+0xb4>  // b.any
   12848:	mov	w1, #0x1                   	// #1
   1284c:	ldr	x0, [sp, #24]
   12850:	bl	124e0 <elf_rawdata@@ELFUTILS_1.0+0xcf0>
   12854:	ldr	x0, [sp, #24]
   12858:	ldr	w0, [x0, #120]
   1285c:	cmp	w0, #0x0
   12860:	b.eq	1288c <elf_newdata@@ELFUTILS_1.0+0xec>  // b.none
   12864:	ldr	x0, [sp, #24]
   12868:	ldr	x0, [x0, #64]
   1286c:	cmp	x0, #0x0
   12870:	b.ne	1288c <elf_newdata@@ELFUTILS_1.0+0xec>  // b.any
   12874:	ldr	x0, [sp, #24]
   12878:	str	x0, [sp, #40]
   1287c:	ldr	x0, [sp, #40]
   12880:	mov	w1, #0x1                   	// #1
   12884:	str	w1, [x0, #56]
   12888:	b	128ec <elf_newdata@@ELFUTILS_1.0+0x14c>
   1288c:	ldr	x0, [sp, #24]
   12890:	ldr	w0, [x0, #120]
   12894:	cmp	w0, #0x0
   12898:	b.ne	128b8 <elf_newdata@@ELFUTILS_1.0+0x118>  // b.any
   1289c:	ldr	x0, [sp, #24]
   128a0:	bl	11e24 <elf_rawdata@@ELFUTILS_1.0+0x634>
   128a4:	cmp	w0, #0x0
   128a8:	b.ne	12934 <elf_newdata@@ELFUTILS_1.0+0x194>  // b.any
   128ac:	mov	w1, #0x1                   	// #1
   128b0:	ldr	x0, [sp, #24]
   128b4:	bl	124e0 <elf_rawdata@@ELFUTILS_1.0+0xcf0>
   128b8:	mov	x1, #0x40                  	// #64
   128bc:	mov	x0, #0x1                   	// #1
   128c0:	bl	31c0 <calloc@plt>
   128c4:	str	x0, [sp, #40]
   128c8:	ldr	x0, [sp, #40]
   128cc:	cmp	x0, #0x0
   128d0:	b.ne	128e0 <elf_newdata@@ELFUTILS_1.0+0x140>  // b.any
   128d4:	mov	w0, #0x8                   	// #8
   128d8:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   128dc:	b	12938 <elf_newdata@@ELFUTILS_1.0+0x198>
   128e0:	ldr	x0, [sp, #40]
   128e4:	mov	w1, #0x81                  	// #129
   128e8:	str	w1, [x0, #56]
   128ec:	ldr	x0, [sp, #40]
   128f0:	mov	w1, #0x1                   	// #1
   128f4:	str	w1, [x0, #12]
   128f8:	ldr	x0, [sp, #40]
   128fc:	ldr	x1, [sp, #24]
   12900:	str	x1, [x0, #40]
   12904:	ldr	x0, [sp, #24]
   12908:	ldr	x0, [x0, #64]
   1290c:	cmp	x0, #0x0
   12910:	b.eq	12924 <elf_newdata@@ELFUTILS_1.0+0x184>  // b.none
   12914:	ldr	x0, [sp, #24]
   12918:	ldr	x0, [x0, #64]
   1291c:	ldr	x1, [sp, #40]
   12920:	str	x1, [x0, #48]
   12924:	ldr	x0, [sp, #24]
   12928:	ldr	x1, [sp, #40]
   1292c:	str	x1, [x0, #64]
   12930:	b	12938 <elf_newdata@@ELFUTILS_1.0+0x198>
   12934:	nop
   12938:	ldr	x0, [sp, #40]
   1293c:	ldp	x29, x30, [sp], #48
   12940:	ret
   12944:	stp	x29, x30, [sp, #-80]!
   12948:	mov	x29, sp
   1294c:	str	w0, [sp, #44]
   12950:	str	x1, [sp, #32]
   12954:	str	x2, [sp, #24]
   12958:	str	x3, [sp, #16]
   1295c:	str	xzr, [sp, #72]
   12960:	ldr	x0, [sp, #72]
   12964:	ldr	x1, [sp, #32]
   12968:	add	x4, x1, x0
   1296c:	ldr	x0, [sp, #72]
   12970:	ldr	x1, [sp, #24]
   12974:	sub	x2, x1, x0
   12978:	ldr	x1, [sp, #16]
   1297c:	ldr	x0, [sp, #72]
   12980:	add	x0, x1, x0
   12984:	mov	x3, x0
   12988:	mov	x1, x4
   1298c:	ldr	w0, [sp, #44]
   12990:	bl	3300 <pread@plt>
   12994:	str	x0, [sp, #64]
   12998:	ldr	x0, [sp, #64]
   1299c:	cmn	x0, #0x1
   129a0:	b.ne	129b4 <elf_newdata@@ELFUTILS_1.0+0x214>  // b.any
   129a4:	bl	33e0 <__errno_location@plt>
   129a8:	ldr	w0, [x0]
   129ac:	cmp	w0, #0x4
   129b0:	b.eq	12960 <elf_newdata@@ELFUTILS_1.0+0x1c0>  // b.none
   129b4:	ldr	x0, [sp, #64]
   129b8:	str	x0, [sp, #56]
   129bc:	ldr	x0, [sp, #56]
   129c0:	cmp	x0, #0x0
   129c4:	b.gt	129e4 <elf_newdata@@ELFUTILS_1.0+0x244>
   129c8:	ldr	x0, [sp, #56]
   129cc:	cmp	x0, #0x0
   129d0:	b.ge	129dc <elf_newdata@@ELFUTILS_1.0+0x23c>  // b.tcont
   129d4:	ldr	x0, [sp, #56]
   129d8:	b	12a08 <elf_newdata@@ELFUTILS_1.0+0x268>
   129dc:	ldr	x0, [sp, #72]
   129e0:	b	12a08 <elf_newdata@@ELFUTILS_1.0+0x268>
   129e4:	ldr	x1, [sp, #72]
   129e8:	ldr	x0, [sp, #56]
   129ec:	add	x0, x1, x0
   129f0:	str	x0, [sp, #72]
   129f4:	ldr	x0, [sp, #72]
   129f8:	ldr	x1, [sp, #24]
   129fc:	cmp	x1, x0
   12a00:	b.hi	12960 <elf_newdata@@ELFUTILS_1.0+0x1c0>  // b.pmore
   12a04:	ldr	x0, [sp, #72]
   12a08:	ldp	x29, x30, [sp], #80
   12a0c:	ret
   12a10:	stp	x29, x30, [sp, #-48]!
   12a14:	mov	x29, sp
   12a18:	str	x0, [sp, #24]
   12a1c:	ldr	x0, [sp, #24]
   12a20:	ldr	w0, [x0, #24]
   12a24:	cmp	w0, #0x1
   12a28:	b.ne	12a6c <elf_newdata@@ELFUTILS_1.0+0x2cc>  // b.any
   12a2c:	ldr	x0, [sp, #24]
   12a30:	ldr	x0, [x0, #72]
   12a34:	str	x0, [sp, #40]
   12a38:	b	12a60 <elf_newdata@@ELFUTILS_1.0+0x2c0>
   12a3c:	ldr	x0, [sp, #40]
   12a40:	ldr	w0, [x0, #60]
   12a44:	cmp	w0, #0x0
   12a48:	b.eq	12a54 <elf_newdata@@ELFUTILS_1.0+0x2b4>  // b.none
   12a4c:	ldr	x0, [sp, #40]
   12a50:	bl	12a10 <elf_newdata@@ELFUTILS_1.0+0x270>
   12a54:	ldr	x0, [sp, #40]
   12a58:	ldr	x0, [x0, #16]
   12a5c:	str	x0, [sp, #40]
   12a60:	ldr	x0, [sp, #40]
   12a64:	cmp	x0, #0x0
   12a68:	b.ne	12a3c <elf_newdata@@ELFUTILS_1.0+0x29c>  // b.any
   12a6c:	nop
   12a70:	ldp	x29, x30, [sp], #48
   12a74:	ret
   12a78:	stp	x29, x30, [sp, #-48]!
   12a7c:	mov	x29, sp
   12a80:	str	x0, [sp, #24]
   12a84:	ldr	x0, [sp, #24]
   12a88:	ldr	w0, [x0, #24]
   12a8c:	cmp	w0, #0x1
   12a90:	b.ne	12ad4 <elf_newdata@@ELFUTILS_1.0+0x334>  // b.any
   12a94:	ldr	x0, [sp, #24]
   12a98:	ldr	x0, [x0, #72]
   12a9c:	str	x0, [sp, #40]
   12aa0:	b	12ac8 <elf_newdata@@ELFUTILS_1.0+0x328>
   12aa4:	ldr	x0, [sp, #40]
   12aa8:	ldr	w0, [x0, #60]
   12aac:	cmp	w0, #0x0
   12ab0:	b.eq	12abc <elf_newdata@@ELFUTILS_1.0+0x31c>  // b.none
   12ab4:	ldr	x0, [sp, #40]
   12ab8:	bl	12a78 <elf_newdata@@ELFUTILS_1.0+0x2d8>
   12abc:	ldr	x0, [sp, #40]
   12ac0:	ldr	x0, [x0, #16]
   12ac4:	str	x0, [sp, #40]
   12ac8:	ldr	x0, [sp, #40]
   12acc:	cmp	x0, #0x0
   12ad0:	b.ne	12aa4 <elf_newdata@@ELFUTILS_1.0+0x304>  // b.any
   12ad4:	nop
   12ad8:	ldp	x29, x30, [sp], #48
   12adc:	ret

0000000000012ae0 <elf_getdata_rawchunk@@ELFUTILS_1.3>:
   12ae0:	stp	x29, x30, [sp, #-112]!
   12ae4:	mov	x29, sp
   12ae8:	str	x0, [sp, #40]
   12aec:	str	x1, [sp, #32]
   12af0:	str	x2, [sp, #24]
   12af4:	str	w3, [sp, #20]
   12af8:	ldr	x0, [sp, #40]
   12afc:	cmp	x0, #0x0
   12b00:	cset	w0, eq  // eq = none
   12b04:	and	w0, w0, #0xff
   12b08:	and	x0, x0, #0xff
   12b0c:	cmp	x0, #0x0
   12b10:	b.eq	12b1c <elf_getdata_rawchunk@@ELFUTILS_1.3+0x3c>  // b.none
   12b14:	mov	x0, #0x0                   	// #0
   12b18:	b	12fc0 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x4e0>
   12b1c:	ldr	x0, [sp, #40]
   12b20:	ldr	w0, [x0, #24]
   12b24:	cmp	w0, #0x3
   12b28:	cset	w0, ne  // ne = any
   12b2c:	and	w0, w0, #0xff
   12b30:	and	x0, x0, #0xff
   12b34:	cmp	x0, #0x0
   12b38:	b.eq	12b4c <elf_getdata_rawchunk@@ELFUTILS_1.3+0x6c>  // b.none
   12b3c:	mov	w0, #0x4                   	// #4
   12b40:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   12b44:	mov	x0, #0x0                   	// #0
   12b48:	b	12fc0 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x4e0>
   12b4c:	ldr	x0, [sp, #32]
   12b50:	lsr	x0, x0, #63
   12b54:	and	w0, w0, #0xff
   12b58:	and	x0, x0, #0xff
   12b5c:	cmp	x0, #0x0
   12b60:	b.ne	12b88 <elf_getdata_rawchunk@@ELFUTILS_1.3+0xa8>  // b.any
   12b64:	ldr	x0, [sp, #40]
   12b68:	ldr	x1, [x0, #48]
   12b6c:	ldr	x0, [sp, #32]
   12b70:	cmp	x1, x0
   12b74:	cset	w0, cc  // cc = lo, ul, last
   12b78:	and	w0, w0, #0xff
   12b7c:	and	x0, x0, #0xff
   12b80:	cmp	x0, #0x0
   12b84:	b.eq	12b90 <elf_getdata_rawchunk@@ELFUTILS_1.3+0xb0>  // b.none
   12b88:	mov	w0, #0x1                   	// #1
   12b8c:	b	12b94 <elf_getdata_rawchunk@@ELFUTILS_1.3+0xb4>
   12b90:	mov	w0, #0x0                   	// #0
   12b94:	cmp	w0, #0x0
   12b98:	b.ne	12bc8 <elf_getdata_rawchunk@@ELFUTILS_1.3+0xe8>  // b.any
   12b9c:	ldr	x0, [sp, #40]
   12ba0:	ldr	x1, [x0, #48]
   12ba4:	ldr	x0, [sp, #32]
   12ba8:	sub	x0, x1, x0
   12bac:	ldr	x1, [sp, #24]
   12bb0:	cmp	x1, x0
   12bb4:	cset	w0, hi  // hi = pmore
   12bb8:	and	w0, w0, #0xff
   12bbc:	and	x0, x0, #0xff
   12bc0:	cmp	x0, #0x0
   12bc4:	b.eq	12bd8 <elf_getdata_rawchunk@@ELFUTILS_1.3+0xf8>  // b.none
   12bc8:	mov	w0, #0xb                   	// #11
   12bcc:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   12bd0:	mov	x0, #0x0                   	// #0
   12bd4:	b	12fc0 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x4e0>
   12bd8:	ldr	w0, [sp, #20]
   12bdc:	cmp	w0, #0x1a
   12be0:	b.ls	12bf4 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x114>  // b.plast
   12be4:	mov	w0, #0x3                   	// #3
   12be8:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   12bec:	mov	x0, #0x0                   	// #0
   12bf0:	b	12fc0 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x4e0>
   12bf4:	str	wzr, [sp, #100]
   12bf8:	str	xzr, [sp, #88]
   12bfc:	ldr	x0, [sp, #40]
   12c00:	ldr	w0, [x0, #32]
   12c04:	sub	w1, w0, #0x1
   12c08:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   12c0c:	add	x3, x0, #0xab0
   12c10:	ldr	w2, [sp, #20]
   12c14:	mov	w1, w1
   12c18:	mov	x0, x1
   12c1c:	lsl	x0, x0, #3
   12c20:	sub	x0, x0, x1
   12c24:	lsl	x0, x0, #2
   12c28:	sub	x0, x0, x1
   12c2c:	add	x0, x3, x0
   12c30:	add	x0, x0, x2
   12c34:	ldrb	w0, [x0]
   12c38:	cmp	w0, #0x0
   12c3c:	b.eq	12c84 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x1a4>  // b.none
   12c40:	ldr	x0, [sp, #40]
   12c44:	ldr	w0, [x0, #32]
   12c48:	sub	w1, w0, #0x1
   12c4c:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   12c50:	add	x3, x0, #0xab0
   12c54:	ldr	w2, [sp, #20]
   12c58:	mov	w1, w1
   12c5c:	mov	x0, x1
   12c60:	lsl	x0, x0, #3
   12c64:	sub	x0, x0, x1
   12c68:	lsl	x0, x0, #2
   12c6c:	sub	x0, x0, x1
   12c70:	add	x0, x3, x0
   12c74:	add	x0, x0, x2
   12c78:	ldrb	w0, [x0]
   12c7c:	and	x0, x0, #0xff
   12c80:	b	12c88 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x1a8>
   12c84:	mov	x0, #0x1                   	// #1
   12c88:	str	x0, [sp, #72]
   12c8c:	ldr	x0, [sp, #40]
   12c90:	ldr	x0, [x0]
   12c94:	cmp	x0, #0x0
   12c98:	b.eq	12d18 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x238>  // b.none
   12c9c:	ldr	x0, [sp, #40]
   12ca0:	ldr	x1, [x0]
   12ca4:	ldr	x0, [sp, #40]
   12ca8:	ldr	x0, [x0, #40]
   12cac:	mov	x2, x0
   12cb0:	ldr	x0, [sp, #32]
   12cb4:	add	x0, x2, x0
   12cb8:	add	x0, x1, x0
   12cbc:	str	x0, [sp, #64]
   12cc0:	ldr	x0, [sp, #72]
   12cc4:	sub	x1, x0, #0x1
   12cc8:	ldr	x0, [sp, #64]
   12ccc:	and	x0, x1, x0
   12cd0:	cmp	x0, #0x0
   12cd4:	b.ne	12ce4 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x204>  // b.any
   12cd8:	ldr	x0, [sp, #64]
   12cdc:	str	x0, [sp, #104]
   12ce0:	b	12dc4 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x2e4>
   12ce4:	ldr	x0, [sp, #24]
   12ce8:	bl	3140 <malloc@plt>
   12cec:	str	x0, [sp, #104]
   12cf0:	ldr	x0, [sp, #104]
   12cf4:	cmp	x0, #0x0
   12cf8:	b.eq	12d34 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x254>  // b.none
   12cfc:	ldr	x2, [sp, #24]
   12d00:	ldr	x1, [sp, #64]
   12d04:	ldr	x0, [sp, #104]
   12d08:	bl	30a0 <memcpy@plt>
   12d0c:	mov	w0, #0x80                  	// #128
   12d10:	str	w0, [sp, #100]
   12d14:	b	12dc4 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x2e4>
   12d18:	ldr	x0, [sp, #24]
   12d1c:	bl	3140 <malloc@plt>
   12d20:	str	x0, [sp, #104]
   12d24:	ldr	x0, [sp, #104]
   12d28:	cmp	x0, #0x0
   12d2c:	b.ne	12d5c <elf_getdata_rawchunk@@ELFUTILS_1.3+0x27c>  // b.any
   12d30:	b	12d50 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x270>
   12d34:	nop
   12d38:	b	12d50 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x270>
   12d3c:	nop
   12d40:	b	12d50 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x270>
   12d44:	nop
   12d48:	b	12d50 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x270>
   12d4c:	nop
   12d50:	mov	w0, #0x8                   	// #8
   12d54:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   12d58:	b	12fbc <elf_getdata_rawchunk@@ELFUTILS_1.3+0x4dc>
   12d5c:	ldr	x0, [sp, #40]
   12d60:	ldr	w4, [x0, #36]
   12d64:	ldr	x0, [sp, #40]
   12d68:	ldr	x1, [x0, #40]
   12d6c:	ldr	x0, [sp, #32]
   12d70:	add	x0, x1, x0
   12d74:	mov	x3, x0
   12d78:	ldr	x2, [sp, #24]
   12d7c:	ldr	x1, [sp, #104]
   12d80:	mov	w0, w4
   12d84:	bl	12944 <elf_newdata@@ELFUTILS_1.0+0x1a4>
   12d88:	mov	x1, x0
   12d8c:	ldr	x0, [sp, #24]
   12d90:	cmp	x1, x0
   12d94:	cset	w0, ne  // ne = any
   12d98:	and	w0, w0, #0xff
   12d9c:	and	x0, x0, #0xff
   12da0:	cmp	x0, #0x0
   12da4:	b.eq	12dbc <elf_getdata_rawchunk@@ELFUTILS_1.3+0x2dc>  // b.none
   12da8:	ldr	x0, [sp, #104]
   12dac:	bl	32a0 <free@plt>
   12db0:	mov	w0, #0x13                  	// #19
   12db4:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   12db8:	b	12fbc <elf_getdata_rawchunk@@ELFUTILS_1.3+0x4dc>
   12dbc:	mov	w0, #0x80                  	// #128
   12dc0:	str	w0, [sp, #100]
   12dc4:	ldr	x0, [sp, #40]
   12dc8:	ldr	x0, [x0, #72]
   12dcc:	ldrb	w0, [x0, #5]
   12dd0:	cmp	w0, #0x1
   12dd4:	b.ne	12e6c <elf_getdata_rawchunk@@ELFUTILS_1.3+0x38c>  // b.any
   12dd8:	ldr	x0, [sp, #72]
   12ddc:	sub	x1, x0, #0x1
   12de0:	ldr	x0, [sp, #104]
   12de4:	and	x0, x1, x0
   12de8:	cmp	x0, #0x0
   12dec:	b.ne	12dfc <elf_getdata_rawchunk@@ELFUTILS_1.3+0x31c>  // b.any
   12df0:	ldr	x0, [sp, #104]
   12df4:	str	x0, [sp, #80]
   12df8:	b	12f00 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x420>
   12dfc:	ldr	w0, [sp, #100]
   12e00:	cmp	w0, #0x0
   12e04:	b.eq	12e28 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x348>  // b.none
   12e08:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   12e0c:	add	x3, x0, #0xb10
   12e10:	mov	w2, #0x82                  	// #130
   12e14:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   12e18:	add	x1, x0, #0xae8
   12e1c:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   12e20:	add	x0, x0, #0xb00
   12e24:	bl	33d0 <__assert_fail@plt>
   12e28:	ldr	x0, [sp, #24]
   12e2c:	bl	3140 <malloc@plt>
   12e30:	str	x0, [sp, #80]
   12e34:	ldr	x0, [sp, #80]
   12e38:	cmp	x0, #0x0
   12e3c:	cset	w0, eq  // eq = none
   12e40:	and	w0, w0, #0xff
   12e44:	and	x0, x0, #0xff
   12e48:	cmp	x0, #0x0
   12e4c:	b.ne	12d3c <elf_getdata_rawchunk@@ELFUTILS_1.3+0x25c>  // b.any
   12e50:	mov	w0, #0x80                  	// #128
   12e54:	str	w0, [sp, #100]
   12e58:	ldr	x2, [sp, #24]
   12e5c:	ldr	x1, [sp, #104]
   12e60:	ldr	x0, [sp, #80]
   12e64:	bl	30a0 <memcpy@plt>
   12e68:	b	12f00 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x420>
   12e6c:	ldr	w0, [sp, #100]
   12e70:	cmp	w0, #0x0
   12e74:	b.eq	12e84 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x3a4>  // b.none
   12e78:	ldr	x0, [sp, #104]
   12e7c:	str	x0, [sp, #80]
   12e80:	b	12eb4 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x3d4>
   12e84:	ldr	x0, [sp, #24]
   12e88:	bl	3140 <malloc@plt>
   12e8c:	str	x0, [sp, #80]
   12e90:	ldr	x0, [sp, #80]
   12e94:	cmp	x0, #0x0
   12e98:	cset	w0, eq  // eq = none
   12e9c:	and	w0, w0, #0xff
   12ea0:	and	x0, x0, #0xff
   12ea4:	cmp	x0, #0x0
   12ea8:	b.ne	12d44 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x264>  // b.any
   12eac:	mov	w0, #0x80                  	// #128
   12eb0:	str	w0, [sp, #100]
   12eb4:	ldr	x0, [sp, #40]
   12eb8:	ldr	w0, [x0, #32]
   12ebc:	sub	w1, w0, #0x1
   12ec0:	adrp	x0, 35000 <elf_compress_gnu@@ELFUTILS_1.7+0x1495c>
   12ec4:	add	x2, x0, #0xbd8
   12ec8:	ldr	w3, [sp, #20]
   12ecc:	mov	w1, w1
   12ed0:	mov	x0, x1
   12ed4:	lsl	x0, x0, #3
   12ed8:	sub	x0, x0, x1
   12edc:	lsl	x0, x0, #2
   12ee0:	sub	x0, x0, x1
   12ee4:	add	x0, x0, x3
   12ee8:	ldr	x4, [x2, x0, lsl #3]
   12eec:	mov	w3, #0x0                   	// #0
   12ef0:	ldr	x2, [sp, #24]
   12ef4:	ldr	x1, [sp, #104]
   12ef8:	ldr	x0, [sp, #80]
   12efc:	blr	x4
   12f00:	mov	x1, #0x100                 	// #256
   12f04:	mov	x0, #0x1                   	// #1
   12f08:	bl	31c0 <calloc@plt>
   12f0c:	str	x0, [sp, #56]
   12f10:	ldr	x0, [sp, #56]
   12f14:	cmp	x0, #0x0
   12f18:	b.ne	12f34 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x454>  // b.any
   12f1c:	ldr	w0, [sp, #100]
   12f20:	cmp	w0, #0x0
   12f24:	b.eq	12d4c <elf_getdata_rawchunk@@ELFUTILS_1.3+0x26c>  // b.none
   12f28:	ldr	x0, [sp, #80]
   12f2c:	bl	32a0 <free@plt>
   12f30:	b	12d4c <elf_getdata_rawchunk@@ELFUTILS_1.3+0x26c>
   12f34:	ldr	x0, [sp, #56]
   12f38:	ldr	x1, [sp, #40]
   12f3c:	str	x1, [x0, #184]
   12f40:	ldr	w1, [sp, #100]
   12f44:	ldr	x0, [sp, #56]
   12f48:	str	w1, [x0, #204]
   12f4c:	ldr	x0, [sp, #56]
   12f50:	add	x1, x0, #0x30
   12f54:	ldr	x0, [sp, #56]
   12f58:	str	x1, [x0, #40]
   12f5c:	ldr	x0, [sp, #56]
   12f60:	ldr	x1, [sp, #80]
   12f64:	str	x1, [x0]
   12f68:	ldr	x0, [sp, #56]
   12f6c:	ldr	x1, [sp, #24]
   12f70:	str	x1, [x0, #16]
   12f74:	ldr	x0, [sp, #56]
   12f78:	ldr	w1, [sp, #20]
   12f7c:	str	w1, [x0, #8]
   12f80:	ldr	x0, [sp, #56]
   12f84:	ldr	x1, [sp, #72]
   12f88:	str	x1, [x0, #32]
   12f8c:	ldr	x0, [sp, #56]
   12f90:	mov	w1, #0x1                   	// #1
   12f94:	str	w1, [x0, #12]
   12f98:	ldr	x0, [sp, #40]
   12f9c:	ldr	x1, [x0, #104]
   12fa0:	ldr	x0, [sp, #56]
   12fa4:	str	x1, [x0, #48]
   12fa8:	ldr	x0, [sp, #40]
   12fac:	ldr	x1, [sp, #56]
   12fb0:	str	x1, [x0, #104]
   12fb4:	ldr	x0, [sp, #56]
   12fb8:	str	x0, [sp, #88]
   12fbc:	ldr	x0, [sp, #88]
   12fc0:	ldp	x29, x30, [sp], #112
   12fc4:	ret

0000000000012fc8 <elf_flagelf@@ELFUTILS_1.0>:
   12fc8:	stp	x29, x30, [sp, #-48]!
   12fcc:	mov	x29, sp
   12fd0:	str	x0, [sp, #24]
   12fd4:	str	w1, [sp, #20]
   12fd8:	str	w2, [sp, #16]
   12fdc:	ldr	x0, [sp, #24]
   12fe0:	cmp	x0, #0x0
   12fe4:	b.ne	12ff0 <elf_flagelf@@ELFUTILS_1.0+0x28>  // b.any
   12fe8:	mov	w0, #0x0                   	// #0
   12fec:	b	130e0 <elf_flagelf@@ELFUTILS_1.0+0x118>
   12ff0:	ldr	x0, [sp, #24]
   12ff4:	ldr	w0, [x0, #24]
   12ff8:	cmp	w0, #0x3
   12ffc:	cset	w0, ne  // ne = any
   13000:	and	w0, w0, #0xff
   13004:	and	x0, x0, #0xff
   13008:	cmp	x0, #0x0
   1300c:	b.eq	13020 <elf_flagelf@@ELFUTILS_1.0+0x58>  // b.none
   13010:	mov	w0, #0x4                   	// #4
   13014:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   13018:	mov	w0, #0x0                   	// #0
   1301c:	b	130e0 <elf_flagelf@@ELFUTILS_1.0+0x118>
   13020:	ldr	w0, [sp, #20]
   13024:	cmp	w0, #0x5
   13028:	cset	w0, eq  // eq = none
   1302c:	and	w0, w0, #0xff
   13030:	and	x0, x0, #0xff
   13034:	cmp	x0, #0x0
   13038:	b.eq	13074 <elf_flagelf@@ELFUTILS_1.0+0xac>  // b.none
   1303c:	ldr	x0, [sp, #24]
   13040:	ldr	w0, [x0, #56]
   13044:	mov	w2, w0
   13048:	ldr	w1, [sp, #16]
   1304c:	mov	w0, #0xd                   	// #13
   13050:	and	w0, w1, w0
   13054:	orr	w0, w2, w0
   13058:	mov	w1, w0
   1305c:	ldr	x0, [sp, #24]
   13060:	str	w1, [x0, #56]
   13064:	ldr	x0, [sp, #24]
   13068:	ldr	w0, [x0, #56]
   1306c:	str	w0, [sp, #44]
   13070:	b	130dc <elf_flagelf@@ELFUTILS_1.0+0x114>
   13074:	ldr	w0, [sp, #20]
   13078:	cmp	w0, #0x4
   1307c:	cset	w0, eq  // eq = none
   13080:	and	w0, w0, #0xff
   13084:	and	x0, x0, #0xff
   13088:	cmp	x0, #0x0
   1308c:	b.eq	130cc <elf_flagelf@@ELFUTILS_1.0+0x104>  // b.none
   13090:	ldr	x0, [sp, #24]
   13094:	ldr	w0, [x0, #56]
   13098:	mov	w2, w0
   1309c:	ldr	w1, [sp, #16]
   130a0:	mov	w0, #0xd                   	// #13
   130a4:	and	w0, w1, w0
   130a8:	mvn	w0, w0
   130ac:	and	w0, w2, w0
   130b0:	mov	w1, w0
   130b4:	ldr	x0, [sp, #24]
   130b8:	str	w1, [x0, #56]
   130bc:	ldr	x0, [sp, #24]
   130c0:	ldr	w0, [x0, #56]
   130c4:	str	w0, [sp, #44]
   130c8:	b	130dc <elf_flagelf@@ELFUTILS_1.0+0x114>
   130cc:	mov	w0, #0x19                  	// #25
   130d0:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   130d4:	mov	w0, #0x0                   	// #0
   130d8:	b	130e0 <elf_flagelf@@ELFUTILS_1.0+0x118>
   130dc:	ldr	w0, [sp, #44]
   130e0:	ldp	x29, x30, [sp], #48
   130e4:	ret

00000000000130e8 <elf_flagehdr@@ELFUTILS_1.0>:
   130e8:	stp	x29, x30, [sp, #-48]!
   130ec:	mov	x29, sp
   130f0:	str	x0, [sp, #24]
   130f4:	str	w1, [sp, #20]
   130f8:	str	w2, [sp, #16]
   130fc:	ldr	x0, [sp, #24]
   13100:	cmp	x0, #0x0
   13104:	b.ne	13110 <elf_flagehdr@@ELFUTILS_1.0+0x28>  // b.any
   13108:	mov	w0, #0x0                   	// #0
   1310c:	b	131e8 <elf_flagehdr@@ELFUTILS_1.0+0x100>
   13110:	ldr	x0, [sp, #24]
   13114:	ldr	w0, [x0, #24]
   13118:	cmp	w0, #0x3
   1311c:	cset	w0, ne  // ne = any
   13120:	and	w0, w0, #0xff
   13124:	and	x0, x0, #0xff
   13128:	cmp	x0, #0x0
   1312c:	b.eq	13140 <elf_flagehdr@@ELFUTILS_1.0+0x58>  // b.none
   13130:	mov	w0, #0x4                   	// #4
   13134:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   13138:	mov	w0, #0x0                   	// #0
   1313c:	b	131e8 <elf_flagehdr@@ELFUTILS_1.0+0x100>
   13140:	ldr	w0, [sp, #20]
   13144:	cmp	w0, #0x5
   13148:	cset	w0, eq  // eq = none
   1314c:	and	w0, w0, #0xff
   13150:	and	x0, x0, #0xff
   13154:	cmp	x0, #0x0
   13158:	b.eq	13190 <elf_flagehdr@@ELFUTILS_1.0+0xa8>  // b.none
   1315c:	ldr	x0, [sp, #24]
   13160:	ldr	w0, [x0, #116]
   13164:	mov	w1, w0
   13168:	ldr	w0, [sp, #16]
   1316c:	and	w0, w0, #0x1
   13170:	orr	w0, w1, w0
   13174:	mov	w1, w0
   13178:	ldr	x0, [sp, #24]
   1317c:	str	w1, [x0, #116]
   13180:	ldr	x0, [sp, #24]
   13184:	ldr	w0, [x0, #116]
   13188:	str	w0, [sp, #44]
   1318c:	b	131e4 <elf_flagehdr@@ELFUTILS_1.0+0xfc>
   13190:	ldr	w0, [sp, #20]
   13194:	cmp	w0, #0x4
   13198:	b.ne	131d4 <elf_flagehdr@@ELFUTILS_1.0+0xec>  // b.any
   1319c:	ldr	x0, [sp, #24]
   131a0:	ldr	w0, [x0, #116]
   131a4:	mov	w1, w0
   131a8:	ldr	w0, [sp, #16]
   131ac:	and	w0, w0, #0x1
   131b0:	mvn	w0, w0
   131b4:	and	w0, w1, w0
   131b8:	mov	w1, w0
   131bc:	ldr	x0, [sp, #24]
   131c0:	str	w1, [x0, #116]
   131c4:	ldr	x0, [sp, #24]
   131c8:	ldr	w0, [x0, #116]
   131cc:	str	w0, [sp, #44]
   131d0:	b	131e4 <elf_flagehdr@@ELFUTILS_1.0+0xfc>
   131d4:	mov	w0, #0x19                  	// #25
   131d8:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   131dc:	mov	w0, #0x0                   	// #0
   131e0:	b	131e8 <elf_flagehdr@@ELFUTILS_1.0+0x100>
   131e4:	ldr	w0, [sp, #44]
   131e8:	ldp	x29, x30, [sp], #48
   131ec:	ret

00000000000131f0 <elf_flagphdr@@ELFUTILS_1.0>:
   131f0:	stp	x29, x30, [sp, #-48]!
   131f4:	mov	x29, sp
   131f8:	str	x0, [sp, #24]
   131fc:	str	w1, [sp, #20]
   13200:	str	w2, [sp, #16]
   13204:	ldr	x0, [sp, #24]
   13208:	cmp	x0, #0x0
   1320c:	b.ne	13218 <elf_flagphdr@@ELFUTILS_1.0+0x28>  // b.any
   13210:	mov	w0, #0x0                   	// #0
   13214:	b	13300 <elf_flagphdr@@ELFUTILS_1.0+0x110>
   13218:	ldr	x0, [sp, #24]
   1321c:	ldr	w0, [x0, #24]
   13220:	cmp	w0, #0x3
   13224:	cset	w0, ne  // ne = any
   13228:	and	w0, w0, #0xff
   1322c:	and	x0, x0, #0xff
   13230:	cmp	x0, #0x0
   13234:	b.eq	13248 <elf_flagphdr@@ELFUTILS_1.0+0x58>  // b.none
   13238:	mov	w0, #0x4                   	// #4
   1323c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   13240:	mov	w0, #0x0                   	// #0
   13244:	b	13300 <elf_flagphdr@@ELFUTILS_1.0+0x110>
   13248:	ldr	w0, [sp, #20]
   1324c:	cmp	w0, #0x5
   13250:	cset	w0, eq  // eq = none
   13254:	and	w0, w0, #0xff
   13258:	and	x0, x0, #0xff
   1325c:	cmp	x0, #0x0
   13260:	b.eq	13298 <elf_flagphdr@@ELFUTILS_1.0+0xa8>  // b.none
   13264:	ldr	x0, [sp, #24]
   13268:	ldr	w0, [x0, #120]
   1326c:	mov	w1, w0
   13270:	ldr	w0, [sp, #16]
   13274:	and	w0, w0, #0x1
   13278:	orr	w0, w1, w0
   1327c:	mov	w1, w0
   13280:	ldr	x0, [sp, #24]
   13284:	str	w1, [x0, #120]
   13288:	ldr	x0, [sp, #24]
   1328c:	ldr	w0, [x0, #120]
   13290:	str	w0, [sp, #44]
   13294:	b	132fc <elf_flagphdr@@ELFUTILS_1.0+0x10c>
   13298:	ldr	w0, [sp, #20]
   1329c:	cmp	w0, #0x4
   132a0:	cset	w0, eq  // eq = none
   132a4:	and	w0, w0, #0xff
   132a8:	and	x0, x0, #0xff
   132ac:	cmp	x0, #0x0
   132b0:	b.eq	132ec <elf_flagphdr@@ELFUTILS_1.0+0xfc>  // b.none
   132b4:	ldr	x0, [sp, #24]
   132b8:	ldr	w0, [x0, #120]
   132bc:	mov	w1, w0
   132c0:	ldr	w0, [sp, #16]
   132c4:	and	w0, w0, #0x1
   132c8:	mvn	w0, w0
   132cc:	and	w0, w1, w0
   132d0:	mov	w1, w0
   132d4:	ldr	x0, [sp, #24]
   132d8:	str	w1, [x0, #120]
   132dc:	ldr	x0, [sp, #24]
   132e0:	ldr	w0, [x0, #120]
   132e4:	str	w0, [sp, #44]
   132e8:	b	132fc <elf_flagphdr@@ELFUTILS_1.0+0x10c>
   132ec:	mov	w0, #0x19                  	// #25
   132f0:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   132f4:	mov	w0, #0x0                   	// #0
   132f8:	b	13300 <elf_flagphdr@@ELFUTILS_1.0+0x110>
   132fc:	ldr	w0, [sp, #44]
   13300:	ldp	x29, x30, [sp], #48
   13304:	ret

0000000000013308 <elf_flagscn@@ELFUTILS_1.0>:
   13308:	stp	x29, x30, [sp, #-48]!
   1330c:	mov	x29, sp
   13310:	str	x0, [sp, #24]
   13314:	str	w1, [sp, #20]
   13318:	str	w2, [sp, #16]
   1331c:	ldr	x0, [sp, #24]
   13320:	cmp	x0, #0x0
   13324:	b.ne	13330 <elf_flagscn@@ELFUTILS_1.0+0x28>  // b.any
   13328:	mov	w0, #0x0                   	// #0
   1332c:	b	1340c <elf_flagscn@@ELFUTILS_1.0+0x104>
   13330:	ldr	x0, [sp, #24]
   13334:	ldr	x0, [x0, #136]
   13338:	ldr	w0, [x0, #24]
   1333c:	cmp	w0, #0x3
   13340:	cset	w0, ne  // ne = any
   13344:	and	w0, w0, #0xff
   13348:	and	x0, x0, #0xff
   1334c:	cmp	x0, #0x0
   13350:	b.eq	13364 <elf_flagscn@@ELFUTILS_1.0+0x5c>  // b.none
   13354:	mov	w0, #0x4                   	// #4
   13358:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1335c:	mov	w0, #0x0                   	// #0
   13360:	b	1340c <elf_flagscn@@ELFUTILS_1.0+0x104>
   13364:	ldr	w0, [sp, #20]
   13368:	cmp	w0, #0x5
   1336c:	cset	w0, eq  // eq = none
   13370:	and	w0, w0, #0xff
   13374:	and	x0, x0, #0xff
   13378:	cmp	x0, #0x0
   1337c:	b.eq	133ac <elf_flagscn@@ELFUTILS_1.0+0xa4>  // b.none
   13380:	ldr	x0, [sp, #24]
   13384:	ldr	w1, [x0, #156]
   13388:	ldr	w0, [sp, #16]
   1338c:	and	w0, w0, #0x1
   13390:	orr	w1, w1, w0
   13394:	ldr	x0, [sp, #24]
   13398:	str	w1, [x0, #156]
   1339c:	ldr	x0, [sp, #24]
   133a0:	ldr	w0, [x0, #156]
   133a4:	str	w0, [sp, #44]
   133a8:	b	13408 <elf_flagscn@@ELFUTILS_1.0+0x100>
   133ac:	ldr	w0, [sp, #20]
   133b0:	cmp	w0, #0x4
   133b4:	cset	w0, eq  // eq = none
   133b8:	and	w0, w0, #0xff
   133bc:	and	x0, x0, #0xff
   133c0:	cmp	x0, #0x0
   133c4:	b.eq	133f8 <elf_flagscn@@ELFUTILS_1.0+0xf0>  // b.none
   133c8:	ldr	x0, [sp, #24]
   133cc:	ldr	w1, [x0, #156]
   133d0:	ldr	w0, [sp, #16]
   133d4:	and	w0, w0, #0x1
   133d8:	mvn	w0, w0
   133dc:	and	w1, w1, w0
   133e0:	ldr	x0, [sp, #24]
   133e4:	str	w1, [x0, #156]
   133e8:	ldr	x0, [sp, #24]
   133ec:	ldr	w0, [x0, #156]
   133f0:	str	w0, [sp, #44]
   133f4:	b	13408 <elf_flagscn@@ELFUTILS_1.0+0x100>
   133f8:	mov	w0, #0x19                  	// #25
   133fc:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   13400:	mov	w0, #0x0                   	// #0
   13404:	b	1340c <elf_flagscn@@ELFUTILS_1.0+0x104>
   13408:	ldr	w0, [sp, #44]
   1340c:	ldp	x29, x30, [sp], #48
   13410:	ret

0000000000013414 <elf_flagshdr@@ELFUTILS_1.0>:
   13414:	stp	x29, x30, [sp, #-48]!
   13418:	mov	x29, sp
   1341c:	str	x0, [sp, #24]
   13420:	str	w1, [sp, #20]
   13424:	str	w2, [sp, #16]
   13428:	ldr	x0, [sp, #24]
   1342c:	cmp	x0, #0x0
   13430:	b.ne	1343c <elf_flagshdr@@ELFUTILS_1.0+0x28>  // b.any
   13434:	mov	w0, #0x0                   	// #0
   13438:	b	13518 <elf_flagshdr@@ELFUTILS_1.0+0x104>
   1343c:	ldr	x0, [sp, #24]
   13440:	ldr	x0, [x0, #136]
   13444:	ldr	w0, [x0, #24]
   13448:	cmp	w0, #0x3
   1344c:	cset	w0, ne  // ne = any
   13450:	and	w0, w0, #0xff
   13454:	and	x0, x0, #0xff
   13458:	cmp	x0, #0x0
   1345c:	b.eq	13470 <elf_flagshdr@@ELFUTILS_1.0+0x5c>  // b.none
   13460:	mov	w0, #0x4                   	// #4
   13464:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   13468:	mov	w0, #0x0                   	// #0
   1346c:	b	13518 <elf_flagshdr@@ELFUTILS_1.0+0x104>
   13470:	ldr	w0, [sp, #20]
   13474:	cmp	w0, #0x5
   13478:	cset	w0, eq  // eq = none
   1347c:	and	w0, w0, #0xff
   13480:	and	x0, x0, #0xff
   13484:	cmp	x0, #0x0
   13488:	b.eq	134b8 <elf_flagshdr@@ELFUTILS_1.0+0xa4>  // b.none
   1348c:	ldr	x0, [sp, #24]
   13490:	ldr	w1, [x0, #152]
   13494:	ldr	w0, [sp, #16]
   13498:	and	w0, w0, #0x1
   1349c:	orr	w1, w1, w0
   134a0:	ldr	x0, [sp, #24]
   134a4:	str	w1, [x0, #152]
   134a8:	ldr	x0, [sp, #24]
   134ac:	ldr	w0, [x0, #152]
   134b0:	str	w0, [sp, #44]
   134b4:	b	13514 <elf_flagshdr@@ELFUTILS_1.0+0x100>
   134b8:	ldr	w0, [sp, #20]
   134bc:	cmp	w0, #0x4
   134c0:	cset	w0, eq  // eq = none
   134c4:	and	w0, w0, #0xff
   134c8:	and	x0, x0, #0xff
   134cc:	cmp	x0, #0x0
   134d0:	b.eq	13504 <elf_flagshdr@@ELFUTILS_1.0+0xf0>  // b.none
   134d4:	ldr	x0, [sp, #24]
   134d8:	ldr	w1, [x0, #152]
   134dc:	ldr	w0, [sp, #16]
   134e0:	and	w0, w0, #0x1
   134e4:	mvn	w0, w0
   134e8:	and	w1, w1, w0
   134ec:	ldr	x0, [sp, #24]
   134f0:	str	w1, [x0, #152]
   134f4:	ldr	x0, [sp, #24]
   134f8:	ldr	w0, [x0, #152]
   134fc:	str	w0, [sp, #44]
   13500:	b	13514 <elf_flagshdr@@ELFUTILS_1.0+0x100>
   13504:	mov	w0, #0x19                  	// #25
   13508:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1350c:	mov	w0, #0x0                   	// #0
   13510:	b	13518 <elf_flagshdr@@ELFUTILS_1.0+0x104>
   13514:	ldr	w0, [sp, #44]
   13518:	ldp	x29, x30, [sp], #48
   1351c:	ret

0000000000013520 <elf_flagdata@@ELFUTILS_1.0>:
   13520:	stp	x29, x30, [sp, #-48]!
   13524:	mov	x29, sp
   13528:	str	x0, [sp, #24]
   1352c:	str	w1, [sp, #20]
   13530:	str	w2, [sp, #16]
   13534:	ldr	x0, [sp, #24]
   13538:	cmp	x0, #0x0
   1353c:	b.ne	13548 <elf_flagdata@@ELFUTILS_1.0+0x28>  // b.any
   13540:	mov	w0, #0x0                   	// #0
   13544:	b	13644 <elf_flagdata@@ELFUTILS_1.0+0x124>
   13548:	ldr	x0, [sp, #24]
   1354c:	str	x0, [sp, #32]
   13550:	ldr	x0, [sp, #32]
   13554:	cmp	x0, #0x0
   13558:	b.eq	13584 <elf_flagdata@@ELFUTILS_1.0+0x64>  // b.none
   1355c:	ldr	x0, [sp, #32]
   13560:	ldr	x0, [x0, #40]
   13564:	ldr	x0, [x0, #136]
   13568:	ldr	w0, [x0, #24]
   1356c:	cmp	w0, #0x3
   13570:	cset	w0, ne  // ne = any
   13574:	and	w0, w0, #0xff
   13578:	and	x0, x0, #0xff
   1357c:	cmp	x0, #0x0
   13580:	b.eq	13594 <elf_flagdata@@ELFUTILS_1.0+0x74>  // b.none
   13584:	mov	w0, #0x4                   	// #4
   13588:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1358c:	mov	w0, #0x0                   	// #0
   13590:	b	13644 <elf_flagdata@@ELFUTILS_1.0+0x124>
   13594:	ldr	w0, [sp, #20]
   13598:	cmp	w0, #0x5
   1359c:	cset	w0, eq  // eq = none
   135a0:	and	w0, w0, #0xff
   135a4:	and	x0, x0, #0xff
   135a8:	cmp	x0, #0x0
   135ac:	b.eq	135e0 <elf_flagdata@@ELFUTILS_1.0+0xc0>  // b.none
   135b0:	ldr	x0, [sp, #32]
   135b4:	ldr	x0, [x0, #40]
   135b8:	ldr	w2, [x0, #156]
   135bc:	ldr	w0, [sp, #16]
   135c0:	and	w1, w0, #0x1
   135c4:	ldr	x0, [sp, #32]
   135c8:	ldr	x0, [x0, #40]
   135cc:	orr	w1, w2, w1
   135d0:	str	w1, [x0, #156]
   135d4:	ldr	w0, [x0, #156]
   135d8:	str	w0, [sp, #44]
   135dc:	b	13640 <elf_flagdata@@ELFUTILS_1.0+0x120>
   135e0:	ldr	w0, [sp, #20]
   135e4:	cmp	w0, #0x4
   135e8:	cset	w0, eq  // eq = none
   135ec:	and	w0, w0, #0xff
   135f0:	and	x0, x0, #0xff
   135f4:	cmp	x0, #0x0
   135f8:	b.eq	13630 <elf_flagdata@@ELFUTILS_1.0+0x110>  // b.none
   135fc:	ldr	x0, [sp, #32]
   13600:	ldr	x0, [x0, #40]
   13604:	ldr	w2, [x0, #156]
   13608:	ldr	w0, [sp, #16]
   1360c:	and	w0, w0, #0x1
   13610:	mvn	w1, w0
   13614:	ldr	x0, [sp, #32]
   13618:	ldr	x0, [x0, #40]
   1361c:	and	w1, w2, w1
   13620:	str	w1, [x0, #156]
   13624:	ldr	w0, [x0, #156]
   13628:	str	w0, [sp, #44]
   1362c:	b	13640 <elf_flagdata@@ELFUTILS_1.0+0x120>
   13630:	mov	w0, #0x19                  	// #25
   13634:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   13638:	mov	w0, #0x0                   	// #0
   1363c:	b	13644 <elf_flagdata@@ELFUTILS_1.0+0x124>
   13640:	ldr	w0, [sp, #44]
   13644:	ldp	x29, x30, [sp], #48
   13648:	ret

000000000001364c <elf_memory@@ELFUTILS_1.0>:
   1364c:	stp	x29, x30, [sp, #-32]!
   13650:	mov	x29, sp
   13654:	str	x0, [sp, #24]
   13658:	str	x1, [sp, #16]
   1365c:	ldr	x0, [sp, #24]
   13660:	cmp	x0, #0x0
   13664:	b.ne	13678 <elf_memory@@ELFUTILS_1.0+0x2c>  // b.any
   13668:	mov	w0, #0x17                  	// #23
   1366c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   13670:	mov	x0, #0x0                   	// #0
   13674:	b	13694 <elf_memory@@ELFUTILS_1.0+0x48>
   13678:	mov	x5, #0x0                   	// #0
   1367c:	mov	w4, #0x1                   	// #1
   13680:	ldr	x3, [sp, #16]
   13684:	mov	x2, #0x0                   	// #0
   13688:	ldr	x1, [sp, #24]
   1368c:	mov	w0, #0xffffffff            	// #-1
   13690:	bl	53bc <elf_fill@@ELFUTILS_1.0+0x19f0>
   13694:	ldp	x29, x30, [sp], #32
   13698:	ret
   1369c:	stp	x29, x30, [sp, #-192]!
   136a0:	mov	x29, sp
   136a4:	str	x0, [sp, #40]
   136a8:	str	x1, [sp, #32]
   136ac:	str	w2, [sp, #28]
   136b0:	str	x3, [sp, #16]
   136b4:	ldr	x0, [sp, #40]
   136b8:	ldr	w0, [x0, #32]
   136bc:	str	w0, [sp, #188]
   136c0:	ldr	x0, [sp, #40]
   136c4:	ldr	w0, [x0, #36]
   136c8:	add	x1, sp, #0x38
   136cc:	bl	20af8 <elf_compress_gnu@@ELFUTILS_1.7+0x454>
   136d0:	cmp	w0, #0x0
   136d4:	cset	w0, ne  // ne = any
   136d8:	and	w0, w0, #0xff
   136dc:	and	x0, x0, #0xff
   136e0:	cmp	x0, #0x0
   136e4:	b.eq	136f8 <elf_memory@@ELFUTILS_1.0+0xac>  // b.none
   136e8:	mov	w0, #0x14                  	// #20
   136ec:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   136f0:	mov	x0, #0xffffffffffffffff    	// #-1
   136f4:	b	13ab0 <elf_memory@@ELFUTILS_1.0+0x464>
   136f8:	ldr	x0, [sp, #40]
   136fc:	ldr	x0, [x0, #8]
   13700:	cmp	x0, #0x0
   13704:	b.ne	13764 <elf_memory@@ELFUTILS_1.0+0x118>  // b.any
   13708:	ldr	x0, [sp, #40]
   1370c:	ldr	x0, [x0, #48]
   13710:	cmn	x0, #0x1
   13714:	b.eq	1372c <elf_memory@@ELFUTILS_1.0+0xe0>  // b.none
   13718:	ldr	x0, [sp, #40]
   1371c:	ldr	x1, [x0, #48]
   13720:	ldr	x0, [sp, #32]
   13724:	cmp	x1, x0
   13728:	b.cs	13764 <elf_memory@@ELFUTILS_1.0+0x118>  // b.hs, b.nlast
   1372c:	ldr	x0, [sp, #40]
   13730:	ldr	w0, [x0, #36]
   13734:	ldr	x1, [sp, #32]
   13738:	bl	33c0 <ftruncate@plt>
   1373c:	cmp	w0, #0x0
   13740:	cset	w0, ne  // ne = any
   13744:	and	w0, w0, #0xff
   13748:	and	x0, x0, #0xff
   1374c:	cmp	x0, #0x0
   13750:	b.eq	13764 <elf_memory@@ELFUTILS_1.0+0x118>  // b.none
   13754:	mov	w0, #0x14                  	// #20
   13758:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1375c:	mov	x0, #0xffffffffffffffff    	// #-1
   13760:	b	13ab0 <elf_memory@@ELFUTILS_1.0+0x464>
   13764:	ldr	x0, [sp, #40]
   13768:	ldr	x0, [x0]
   1376c:	cmp	x0, #0x0
   13770:	b.ne	137f4 <elf_memory@@ELFUTILS_1.0+0x1a8>  // b.any
   13774:	ldr	x0, [sp, #40]
   13778:	ldr	w0, [x0, #28]
   1377c:	cmp	w0, #0xa
   13780:	b.ne	137f4 <elf_memory@@ELFUTILS_1.0+0x1a8>  // b.any
   13784:	ldr	x1, [sp, #32]
   13788:	ldr	x0, [sp, #40]
   1378c:	ldr	w0, [x0, #36]
   13790:	mov	x5, #0x0                   	// #0
   13794:	mov	w4, w0
   13798:	mov	w3, #0x1                   	// #1
   1379c:	mov	w2, #0x3                   	// #3
   137a0:	mov	x0, #0x0                   	// #0
   137a4:	bl	3280 <mmap@plt>
   137a8:	mov	x1, x0
   137ac:	ldr	x0, [sp, #40]
   137b0:	str	x1, [x0]
   137b4:	ldr	x0, [sp, #40]
   137b8:	ldr	x0, [x0]
   137bc:	cmn	x0, #0x1
   137c0:	cset	w0, eq  // eq = none
   137c4:	and	w0, w0, #0xff
   137c8:	and	x0, x0, #0xff
   137cc:	cmp	x0, #0x0
   137d0:	b.eq	137e0 <elf_memory@@ELFUTILS_1.0+0x194>  // b.none
   137d4:	ldr	x0, [sp, #40]
   137d8:	str	xzr, [x0]
   137dc:	b	137f4 <elf_memory@@ELFUTILS_1.0+0x1a8>
   137e0:	ldr	x0, [sp, #40]
   137e4:	ldr	w0, [x0, #56]
   137e8:	orr	w1, w0, #0x40
   137ec:	ldr	x0, [sp, #40]
   137f0:	str	w1, [x0, #56]
   137f4:	ldr	x0, [sp, #40]
   137f8:	ldr	x0, [x0]
   137fc:	cmp	x0, #0x0
   13800:	b.eq	13950 <elf_memory@@ELFUTILS_1.0+0x304>  // b.none
   13804:	ldr	x0, [sp, #40]
   13808:	ldr	x0, [x0, #8]
   1380c:	cmp	x0, #0x0
   13810:	b.ne	138f4 <elf_memory@@ELFUTILS_1.0+0x2a8>  // b.any
   13814:	ldr	x0, [sp, #40]
   13818:	ldr	x0, [x0, #48]
   1381c:	cmn	x0, #0x1
   13820:	b.eq	13838 <elf_memory@@ELFUTILS_1.0+0x1ec>  // b.none
   13824:	ldr	x0, [sp, #40]
   13828:	ldr	x1, [x0, #48]
   1382c:	ldr	x0, [sp, #32]
   13830:	cmp	x1, x0
   13834:	b.cs	138f4 <elf_memory@@ELFUTILS_1.0+0x2a8>  // b.hs, b.nlast
   13838:	ldr	x0, [sp, #40]
   1383c:	ldr	w0, [x0, #36]
   13840:	ldr	x2, [sp, #32]
   13844:	mov	x1, #0x0                   	// #0
   13848:	bl	30d0 <posix_fallocate@plt>
   1384c:	cmp	w0, #0x0
   13850:	cset	w0, ne  // ne = any
   13854:	and	w0, w0, #0xff
   13858:	and	x0, x0, #0xff
   1385c:	cmp	x0, #0x0
   13860:	b.eq	13884 <elf_memory@@ELFUTILS_1.0+0x238>  // b.none
   13864:	bl	33e0 <__errno_location@plt>
   13868:	ldr	w0, [x0]
   1386c:	cmp	w0, #0x1c
   13870:	b.ne	13884 <elf_memory@@ELFUTILS_1.0+0x238>  // b.any
   13874:	mov	w0, #0x14                  	// #20
   13878:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1387c:	mov	x0, #0xffffffffffffffff    	// #-1
   13880:	b	13ab0 <elf_memory@@ELFUTILS_1.0+0x464>
   13884:	ldr	x0, [sp, #40]
   13888:	ldr	w0, [x0, #28]
   1388c:	cmp	w0, #0x9
   13890:	b.ne	138f4 <elf_memory@@ELFUTILS_1.0+0x2a8>  // b.any
   13894:	ldr	x0, [sp, #40]
   13898:	ldr	x1, [x0, #48]
   1389c:	ldr	x0, [sp, #32]
   138a0:	cmp	x1, x0
   138a4:	b.cs	138f4 <elf_memory@@ELFUTILS_1.0+0x2a8>  // b.hs, b.nlast
   138a8:	ldr	x0, [sp, #40]
   138ac:	ldr	x4, [x0]
   138b0:	ldr	x0, [sp, #40]
   138b4:	ldr	x0, [x0, #48]
   138b8:	ldr	x1, [sp, #32]
   138bc:	mov	w3, #0x0                   	// #0
   138c0:	mov	x2, x1
   138c4:	mov	x1, x0
   138c8:	mov	x0, x4
   138cc:	bl	3100 <mremap@plt>
   138d0:	cmn	x0, #0x1
   138d4:	b.ne	138e8 <elf_memory@@ELFUTILS_1.0+0x29c>  // b.any
   138d8:	mov	w0, #0x14                  	// #20
   138dc:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   138e0:	mov	x0, #0xffffffffffffffff    	// #-1
   138e4:	b	13ab0 <elf_memory@@ELFUTILS_1.0+0x464>
   138e8:	ldr	x1, [sp, #32]
   138ec:	ldr	x0, [sp, #40]
   138f0:	str	x1, [x0, #48]
   138f4:	ldr	w0, [sp, #188]
   138f8:	cmp	w0, #0x1
   138fc:	b.ne	13920 <elf_memory@@ELFUTILS_1.0+0x2d4>  // b.any
   13900:	ldr	x2, [sp, #16]
   13904:	ldr	w1, [sp, #28]
   13908:	ldr	x0, [sp, #40]
   1390c:	bl	16118 <elf_update@@ELFUTILS_1.0+0x2660>
   13910:	cmp	w0, #0x0
   13914:	cset	w0, ne  // ne = any
   13918:	and	w0, w0, #0xff
   1391c:	b	1393c <elf_memory@@ELFUTILS_1.0+0x2f0>
   13920:	ldr	x2, [sp, #16]
   13924:	ldr	w1, [sp, #28]
   13928:	ldr	x0, [sp, #40]
   1392c:	bl	18388 <elf_update@@ELFUTILS_1.0+0x48d0>
   13930:	cmp	w0, #0x0
   13934:	cset	w0, ne  // ne = any
   13938:	and	w0, w0, #0xff
   1393c:	cmp	w0, #0x0
   13940:	b.eq	139a8 <elf_memory@@ELFUTILS_1.0+0x35c>  // b.none
   13944:	mov	x0, #0xffffffffffffffff    	// #-1
   13948:	str	x0, [sp, #32]
   1394c:	b	139a8 <elf_memory@@ELFUTILS_1.0+0x35c>
   13950:	ldr	w0, [sp, #188]
   13954:	cmp	w0, #0x1
   13958:	b.ne	1397c <elf_memory@@ELFUTILS_1.0+0x330>  // b.any
   1395c:	ldr	x2, [sp, #16]
   13960:	ldr	w1, [sp, #28]
   13964:	ldr	x0, [sp, #40]
   13968:	bl	171c4 <elf_update@@ELFUTILS_1.0+0x370c>
   1396c:	cmp	w0, #0x0
   13970:	cset	w0, ne  // ne = any
   13974:	and	w0, w0, #0xff
   13978:	b	13998 <elf_memory@@ELFUTILS_1.0+0x34c>
   1397c:	ldr	x2, [sp, #16]
   13980:	ldr	w1, [sp, #28]
   13984:	ldr	x0, [sp, #40]
   13988:	bl	193e8 <elf_update@@ELFUTILS_1.0+0x5930>
   1398c:	cmp	w0, #0x0
   13990:	cset	w0, ne  // ne = any
   13994:	and	w0, w0, #0xff
   13998:	cmp	w0, #0x0
   1399c:	b.eq	139a8 <elf_memory@@ELFUTILS_1.0+0x35c>  // b.none
   139a0:	mov	x0, #0xffffffffffffffff    	// #-1
   139a4:	str	x0, [sp, #32]
   139a8:	ldr	x0, [sp, #32]
   139ac:	cmn	x0, #0x1
   139b0:	b.eq	13a20 <elf_memory@@ELFUTILS_1.0+0x3d4>  // b.none
   139b4:	ldr	x0, [sp, #40]
   139b8:	ldr	x0, [x0, #8]
   139bc:	cmp	x0, #0x0
   139c0:	b.ne	13a20 <elf_memory@@ELFUTILS_1.0+0x3d4>  // b.any
   139c4:	ldr	x0, [sp, #40]
   139c8:	ldr	x0, [x0, #48]
   139cc:	cmn	x0, #0x1
   139d0:	b.eq	13a20 <elf_memory@@ELFUTILS_1.0+0x3d4>  // b.none
   139d4:	ldr	x0, [sp, #40]
   139d8:	ldr	x1, [x0, #48]
   139dc:	ldr	x0, [sp, #32]
   139e0:	cmp	x1, x0
   139e4:	b.ls	13a20 <elf_memory@@ELFUTILS_1.0+0x3d4>  // b.plast
   139e8:	ldr	x0, [sp, #40]
   139ec:	ldr	w0, [x0, #36]
   139f0:	ldr	x1, [sp, #32]
   139f4:	bl	33c0 <ftruncate@plt>
   139f8:	cmp	w0, #0x0
   139fc:	cset	w0, ne  // ne = any
   13a00:	and	w0, w0, #0xff
   13a04:	and	x0, x0, #0xff
   13a08:	cmp	x0, #0x0
   13a0c:	b.eq	13a20 <elf_memory@@ELFUTILS_1.0+0x3d4>  // b.none
   13a10:	mov	w0, #0x14                  	// #20
   13a14:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   13a18:	mov	x0, #0xffffffffffffffff    	// #-1
   13a1c:	str	x0, [sp, #32]
   13a20:	ldr	x0, [sp, #32]
   13a24:	cmn	x0, #0x1
   13a28:	b.eq	13a84 <elf_memory@@ELFUTILS_1.0+0x438>  // b.none
   13a2c:	ldr	w0, [sp, #72]
   13a30:	and	w0, w0, #0xc00
   13a34:	cmp	w0, #0x0
   13a38:	cset	w0, ne  // ne = any
   13a3c:	and	w0, w0, #0xff
   13a40:	and	x0, x0, #0xff
   13a44:	cmp	x0, #0x0
   13a48:	b.eq	13a84 <elf_memory@@ELFUTILS_1.0+0x438>  // b.none
   13a4c:	ldr	x0, [sp, #40]
   13a50:	ldr	w0, [x0, #36]
   13a54:	ldr	w1, [sp, #72]
   13a58:	bl	31a0 <fchmod@plt>
   13a5c:	cmp	w0, #0x0
   13a60:	cset	w0, ne  // ne = any
   13a64:	and	w0, w0, #0xff
   13a68:	and	x0, x0, #0xff
   13a6c:	cmp	x0, #0x0
   13a70:	b.eq	13a84 <elf_memory@@ELFUTILS_1.0+0x438>  // b.none
   13a74:	mov	w0, #0x14                  	// #20
   13a78:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   13a7c:	mov	x0, #0xffffffffffffffff    	// #-1
   13a80:	str	x0, [sp, #32]
   13a84:	ldr	x0, [sp, #32]
   13a88:	cmn	x0, #0x1
   13a8c:	b.eq	13aac <elf_memory@@ELFUTILS_1.0+0x460>  // b.none
   13a90:	ldr	x0, [sp, #40]
   13a94:	ldr	x0, [x0, #8]
   13a98:	cmp	x0, #0x0
   13a9c:	b.ne	13aac <elf_memory@@ELFUTILS_1.0+0x460>  // b.any
   13aa0:	ldr	x1, [sp, #32]
   13aa4:	ldr	x0, [sp, #40]
   13aa8:	str	x1, [x0, #48]
   13aac:	ldr	x0, [sp, #32]
   13ab0:	ldp	x29, x30, [sp], #192
   13ab4:	ret

0000000000013ab8 <elf_update@@ELFUTILS_1.0>:
   13ab8:	stp	x29, x30, [sp, #-64]!
   13abc:	mov	x29, sp
   13ac0:	str	x0, [sp, #24]
   13ac4:	str	w1, [sp, #20]
   13ac8:	str	wzr, [sp, #44]
   13acc:	ldr	w0, [sp, #20]
   13ad0:	cmp	w0, #0x0
   13ad4:	b.eq	13b10 <elf_update@@ELFUTILS_1.0+0x58>  // b.none
   13ad8:	ldr	w0, [sp, #20]
   13adc:	cmp	w0, #0x3
   13ae0:	b.eq	13b10 <elf_update@@ELFUTILS_1.0+0x58>  // b.none
   13ae4:	ldr	w0, [sp, #20]
   13ae8:	cmp	w0, #0xa
   13aec:	cset	w0, ne  // ne = any
   13af0:	and	w0, w0, #0xff
   13af4:	and	x0, x0, #0xff
   13af8:	cmp	x0, #0x0
   13afc:	b.eq	13b10 <elf_update@@ELFUTILS_1.0+0x58>  // b.none
   13b00:	mov	w0, #0xd                   	// #13
   13b04:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   13b08:	mov	x0, #0xffffffffffffffff    	// #-1
   13b0c:	b	13cfc <elf_update@@ELFUTILS_1.0+0x244>
   13b10:	ldr	x0, [sp, #24]
   13b14:	cmp	x0, #0x0
   13b18:	b.ne	13b24 <elf_update@@ELFUTILS_1.0+0x6c>  // b.any
   13b1c:	mov	x0, #0xffffffffffffffff    	// #-1
   13b20:	b	13cfc <elf_update@@ELFUTILS_1.0+0x244>
   13b24:	ldr	x0, [sp, #24]
   13b28:	ldr	w0, [x0, #24]
   13b2c:	cmp	w0, #0x3
   13b30:	b.eq	13b44 <elf_update@@ELFUTILS_1.0+0x8c>  // b.none
   13b34:	mov	w0, #0x4                   	// #4
   13b38:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   13b3c:	mov	x0, #0xffffffffffffffff    	// #-1
   13b40:	b	13cfc <elf_update@@ELFUTILS_1.0+0x244>
   13b44:	ldr	x0, [sp, #24]
   13b48:	ldr	x0, [x0, #72]
   13b4c:	cmp	x0, #0x0
   13b50:	b.ne	13b68 <elf_update@@ELFUTILS_1.0+0xb0>  // b.any
   13b54:	mov	w0, #0x1a                  	// #26
   13b58:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   13b5c:	mov	x0, #0xffffffffffffffff    	// #-1
   13b60:	str	x0, [sp, #56]
   13b64:	b	13cf8 <elf_update@@ELFUTILS_1.0+0x240>
   13b68:	ldr	x0, [sp, #24]
   13b6c:	ldr	x0, [x0, #96]
   13b70:	ldr	w0, [x0]
   13b74:	cmp	w0, #0x0
   13b78:	b.eq	13bc0 <elf_update@@ELFUTILS_1.0+0x108>  // b.none
   13b7c:	ldr	x0, [sp, #24]
   13b80:	ldr	x2, [x0, #96]
   13b84:	ldr	x0, [sp, #24]
   13b88:	ldr	x0, [x0, #96]
   13b8c:	ldr	w0, [x0]
   13b90:	sub	w0, w0, #0x1
   13b94:	mov	w1, w0
   13b98:	mov	x0, x1
   13b9c:	lsl	x0, x0, #1
   13ba0:	add	x0, x0, x1
   13ba4:	lsl	x0, x0, #2
   13ba8:	add	x0, x0, x1
   13bac:	lsl	x0, x0, #4
   13bb0:	add	x0, x2, x0
   13bb4:	ldr	x0, [x0, #144]
   13bb8:	add	x0, x0, #0x1
   13bbc:	b	13bc4 <elf_update@@ELFUTILS_1.0+0x10c>
   13bc0:	mov	x0, #0x0                   	// #0
   13bc4:	str	x0, [sp, #48]
   13bc8:	ldr	x0, [sp, #24]
   13bcc:	ldr	w0, [x0, #32]
   13bd0:	cmp	w0, #0x1
   13bd4:	b.ne	13bf0 <elf_update@@ELFUTILS_1.0+0x138>  // b.any
   13bd8:	add	x0, sp, #0x2c
   13bdc:	ldr	x2, [sp, #48]
   13be0:	mov	x1, x0
   13be4:	ldr	x0, [sp, #24]
   13be8:	bl	14074 <elf_update@@ELFUTILS_1.0+0x5bc>
   13bec:	b	13c04 <elf_update@@ELFUTILS_1.0+0x14c>
   13bf0:	add	x0, sp, #0x2c
   13bf4:	ldr	x2, [sp, #48]
   13bf8:	mov	x1, x0
   13bfc:	ldr	x0, [sp, #24]
   13c00:	bl	15098 <elf_update@@ELFUTILS_1.0+0x15e0>
   13c04:	str	x0, [sp, #56]
   13c08:	ldr	x0, [sp, #56]
   13c0c:	cmn	x0, #0x1
   13c10:	cset	w0, ne  // ne = any
   13c14:	and	w0, w0, #0xff
   13c18:	and	x0, x0, #0xff
   13c1c:	cmp	x0, #0x0
   13c20:	b.eq	13cf4 <elf_update@@ELFUTILS_1.0+0x23c>  // b.none
   13c24:	ldr	w0, [sp, #20]
   13c28:	cmp	w0, #0x3
   13c2c:	b.eq	13c3c <elf_update@@ELFUTILS_1.0+0x184>  // b.none
   13c30:	ldr	w0, [sp, #20]
   13c34:	cmp	w0, #0xa
   13c38:	b.ne	13cf4 <elf_update@@ELFUTILS_1.0+0x23c>  // b.any
   13c3c:	ldr	x0, [sp, #24]
   13c40:	ldr	w0, [x0, #28]
   13c44:	cmp	w0, #0x2
   13c48:	b.eq	13ca0 <elf_update@@ELFUTILS_1.0+0x1e8>  // b.none
   13c4c:	ldr	x0, [sp, #24]
   13c50:	ldr	w0, [x0, #28]
   13c54:	cmp	w0, #0x9
   13c58:	b.eq	13ca0 <elf_update@@ELFUTILS_1.0+0x1e8>  // b.none
   13c5c:	ldr	x0, [sp, #24]
   13c60:	ldr	w0, [x0, #28]
   13c64:	cmp	w0, #0x3
   13c68:	b.eq	13ca0 <elf_update@@ELFUTILS_1.0+0x1e8>  // b.none
   13c6c:	ldr	x0, [sp, #24]
   13c70:	ldr	w0, [x0, #28]
   13c74:	cmp	w0, #0xa
   13c78:	cset	w0, ne  // ne = any
   13c7c:	and	w0, w0, #0xff
   13c80:	and	x0, x0, #0xff
   13c84:	cmp	x0, #0x0
   13c88:	b.eq	13ca0 <elf_update@@ELFUTILS_1.0+0x1e8>  // b.none
   13c8c:	mov	w0, #0x26                  	// #38
   13c90:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   13c94:	mov	x0, #0xffffffffffffffff    	// #-1
   13c98:	str	x0, [sp, #56]
   13c9c:	b	13cf8 <elf_update@@ELFUTILS_1.0+0x240>
   13ca0:	ldr	x0, [sp, #24]
   13ca4:	ldr	w0, [x0, #36]
   13ca8:	cmn	w0, #0x1
   13cac:	cset	w0, eq  // eq = none
   13cb0:	and	w0, w0, #0xff
   13cb4:	and	x0, x0, #0xff
   13cb8:	cmp	x0, #0x0
   13cbc:	b.eq	13cd4 <elf_update@@ELFUTILS_1.0+0x21c>  // b.none
   13cc0:	mov	w0, #0x1b                  	// #27
   13cc4:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   13cc8:	mov	x0, #0xffffffffffffffff    	// #-1
   13ccc:	str	x0, [sp, #56]
   13cd0:	b	13cf8 <elf_update@@ELFUTILS_1.0+0x240>
   13cd4:	ldr	w0, [sp, #44]
   13cd8:	ldr	x3, [sp, #48]
   13cdc:	mov	w2, w0
   13ce0:	ldr	x1, [sp, #56]
   13ce4:	ldr	x0, [sp, #24]
   13ce8:	bl	1369c <elf_memory@@ELFUTILS_1.0+0x50>
   13cec:	str	x0, [sp, #56]
   13cf0:	b	13cf8 <elf_update@@ELFUTILS_1.0+0x240>
   13cf4:	nop
   13cf8:	ldr	x0, [sp, #56]
   13cfc:	ldp	x29, x30, [sp], #64
   13d00:	ret
   13d04:	stp	x29, x30, [sp, #-112]!
   13d08:	mov	x29, sp
   13d0c:	str	x0, [sp, #40]
   13d10:	str	x1, [sp, #32]
   13d14:	str	x2, [sp, #24]
   13d18:	str	x3, [sp, #16]
   13d1c:	ldr	x3, [sp, #32]
   13d20:	mov	x2, #0x4                   	// #4
   13d24:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   13d28:	add	x1, x0, #0xb28
   13d2c:	mov	x0, x3
   13d30:	bl	3250 <memcmp@plt>
   13d34:	cmp	w0, #0x0
   13d38:	b.eq	13d68 <elf_update@@ELFUTILS_1.0+0x2b0>  // b.none
   13d3c:	ldr	x3, [sp, #32]
   13d40:	mov	x2, #0x4                   	// #4
   13d44:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   13d48:	add	x1, x0, #0xb28
   13d4c:	mov	x0, x3
   13d50:	bl	30a0 <memcpy@plt>
   13d54:	ldr	x0, [sp, #40]
   13d58:	ldr	w0, [x0, #116]
   13d5c:	orr	w1, w0, #0x1
   13d60:	ldr	x0, [sp, #40]
   13d64:	str	w1, [x0, #116]
   13d68:	ldr	x0, [sp, #32]
   13d6c:	add	x0, x0, #0x4
   13d70:	str	x0, [sp, #104]
   13d74:	mov	w0, #0x1                   	// #1
   13d78:	str	w0, [sp, #100]
   13d7c:	ldr	x0, [sp, #104]
   13d80:	ldrb	w0, [x0]
   13d84:	mov	w1, w0
   13d88:	ldr	w0, [sp, #100]
   13d8c:	cmp	w0, w1
   13d90:	b.eq	13db8 <elf_update@@ELFUTILS_1.0+0x300>  // b.none
   13d94:	ldr	w0, [sp, #100]
   13d98:	and	w1, w0, #0xff
   13d9c:	ldr	x0, [sp, #104]
   13da0:	strb	w1, [x0]
   13da4:	ldr	x0, [sp, #40]
   13da8:	ldr	w0, [x0, #116]
   13dac:	orr	w1, w0, #0x1
   13db0:	ldr	x0, [sp, #40]
   13db4:	str	w1, [x0, #116]
   13db8:	ldr	x0, [sp, #32]
   13dbc:	ldrb	w0, [x0, #5]
   13dc0:	cmp	w0, #0x0
   13dc4:	cset	w0, eq  // eq = none
   13dc8:	and	w0, w0, #0xff
   13dcc:	and	x0, x0, #0xff
   13dd0:	cmp	x0, #0x0
   13dd4:	b.eq	13dfc <elf_update@@ELFUTILS_1.0+0x344>  // b.none
   13dd8:	ldr	x0, [sp, #32]
   13ddc:	mov	w1, #0x1                   	// #1
   13de0:	strb	w1, [x0, #5]
   13de4:	ldr	x0, [sp, #40]
   13de8:	ldr	w0, [x0, #116]
   13dec:	orr	w1, w0, #0x1
   13df0:	ldr	x0, [sp, #40]
   13df4:	str	w1, [x0, #116]
   13df8:	b	13e4c <elf_update@@ELFUTILS_1.0+0x394>
   13dfc:	ldr	x0, [sp, #32]
   13e00:	ldrb	w0, [x0, #5]
   13e04:	cmp	w0, #0x2
   13e08:	cset	w0, hi  // hi = pmore
   13e0c:	and	w0, w0, #0xff
   13e10:	and	x0, x0, #0xff
   13e14:	cmp	x0, #0x0
   13e18:	b.eq	13e2c <elf_update@@ELFUTILS_1.0+0x374>  // b.none
   13e1c:	mov	w0, #0x22                  	// #34
   13e20:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   13e24:	mov	w0, #0x1                   	// #1
   13e28:	b	1406c <elf_update@@ELFUTILS_1.0+0x5b4>
   13e2c:	ldr	x0, [sp, #32]
   13e30:	ldrb	w0, [x0, #5]
   13e34:	cmp	w0, #0x1
   13e38:	cset	w0, ne  // ne = any
   13e3c:	and	w0, w0, #0xff
   13e40:	mov	w1, w0
   13e44:	ldr	x0, [sp, #16]
   13e48:	str	w1, [x0]
   13e4c:	ldr	x0, [sp, #32]
   13e50:	add	x0, x0, #0x6
   13e54:	str	x0, [sp, #88]
   13e58:	mov	w0, #0x1                   	// #1
   13e5c:	str	w0, [sp, #84]
   13e60:	ldr	x0, [sp, #88]
   13e64:	ldrb	w0, [x0]
   13e68:	mov	w1, w0
   13e6c:	ldr	w0, [sp, #84]
   13e70:	cmp	w0, w1
   13e74:	b.eq	13e9c <elf_update@@ELFUTILS_1.0+0x3e4>  // b.none
   13e78:	ldr	w0, [sp, #84]
   13e7c:	and	w1, w0, #0xff
   13e80:	ldr	x0, [sp, #88]
   13e84:	strb	w1, [x0]
   13e88:	ldr	x0, [sp, #40]
   13e8c:	ldr	w0, [x0, #116]
   13e90:	orr	w1, w0, #0x1
   13e94:	ldr	x0, [sp, #40]
   13e98:	str	w1, [x0, #116]
   13e9c:	ldr	x0, [sp, #32]
   13ea0:	ldr	w0, [x0, #20]
   13ea4:	cmp	w0, #0x0
   13ea8:	cset	w0, eq  // eq = none
   13eac:	and	w0, w0, #0xff
   13eb0:	and	x0, x0, #0xff
   13eb4:	cmp	x0, #0x0
   13eb8:	b.eq	13ee0 <elf_update@@ELFUTILS_1.0+0x428>  // b.none
   13ebc:	ldr	x0, [sp, #32]
   13ec0:	mov	w1, #0x1                   	// #1
   13ec4:	str	w1, [x0, #20]
   13ec8:	ldr	x0, [sp, #40]
   13ecc:	ldr	w0, [x0, #116]
   13ed0:	orr	w1, w0, #0x1
   13ed4:	ldr	x0, [sp, #40]
   13ed8:	str	w1, [x0, #116]
   13edc:	b	13f10 <elf_update@@ELFUTILS_1.0+0x458>
   13ee0:	ldr	x0, [sp, #32]
   13ee4:	ldr	w0, [x0, #20]
   13ee8:	cmp	w0, #0x1
   13eec:	cset	w0, ne  // ne = any
   13ef0:	and	w0, w0, #0xff
   13ef4:	and	x0, x0, #0xff
   13ef8:	cmp	x0, #0x0
   13efc:	b.eq	13f10 <elf_update@@ELFUTILS_1.0+0x458>  // b.none
   13f00:	mov	w0, #0x2                   	// #2
   13f04:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   13f08:	mov	w0, #0x1                   	// #1
   13f0c:	b	1406c <elf_update@@ELFUTILS_1.0+0x5b4>
   13f10:	ldr	x1, [sp, #24]
   13f14:	mov	x0, #0xfeff                	// #65279
   13f18:	cmp	x1, x0
   13f1c:	cset	w0, hi  // hi = pmore
   13f20:	and	w0, w0, #0xff
   13f24:	and	x0, x0, #0xff
   13f28:	cmp	x0, #0x0
   13f2c:	b.eq	13f80 <elf_update@@ELFUTILS_1.0+0x4c8>  // b.none
   13f30:	ldr	x0, [sp, #32]
   13f34:	add	x0, x0, #0x30
   13f38:	str	x0, [sp, #56]
   13f3c:	str	wzr, [sp, #52]
   13f40:	ldr	x0, [sp, #56]
   13f44:	ldrh	w0, [x0]
   13f48:	mov	w1, w0
   13f4c:	ldr	w0, [sp, #52]
   13f50:	cmp	w0, w1
   13f54:	b.eq	13fd0 <elf_update@@ELFUTILS_1.0+0x518>  // b.none
   13f58:	ldr	w0, [sp, #52]
   13f5c:	and	w1, w0, #0xffff
   13f60:	ldr	x0, [sp, #56]
   13f64:	strh	w1, [x0]
   13f68:	ldr	x0, [sp, #40]
   13f6c:	ldr	w0, [x0, #116]
   13f70:	orr	w1, w0, #0x1
   13f74:	ldr	x0, [sp, #40]
   13f78:	str	w1, [x0, #116]
   13f7c:	b	13fd0 <elf_update@@ELFUTILS_1.0+0x518>
   13f80:	ldr	x0, [sp, #32]
   13f84:	add	x0, x0, #0x30
   13f88:	str	x0, [sp, #72]
   13f8c:	ldr	x0, [sp, #24]
   13f90:	str	x0, [sp, #64]
   13f94:	ldr	x0, [sp, #72]
   13f98:	ldrh	w0, [x0]
   13f9c:	and	x0, x0, #0xffff
   13fa0:	ldr	x1, [sp, #64]
   13fa4:	cmp	x1, x0
   13fa8:	b.eq	13fd0 <elf_update@@ELFUTILS_1.0+0x518>  // b.none
   13fac:	ldr	x0, [sp, #64]
   13fb0:	and	w1, w0, #0xffff
   13fb4:	ldr	x0, [sp, #72]
   13fb8:	strh	w1, [x0]
   13fbc:	ldr	x0, [sp, #40]
   13fc0:	ldr	w0, [x0, #116]
   13fc4:	orr	w1, w0, #0x1
   13fc8:	ldr	x0, [sp, #40]
   13fcc:	str	w1, [x0, #116]
   13fd0:	ldr	x0, [sp, #32]
   13fd4:	ldrh	w0, [x0, #40]
   13fd8:	and	x1, x0, #0xffff
   13fdc:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   13fe0:	add	x0, x0, #0x3d0
   13fe4:	ldr	x0, [x0, #24]
   13fe8:	cmp	x1, x0
   13fec:	cset	w0, ne  // ne = any
   13ff0:	and	w0, w0, #0xff
   13ff4:	and	x0, x0, #0xff
   13ff8:	cmp	x0, #0x0
   13ffc:	b.eq	1402c <elf_update@@ELFUTILS_1.0+0x574>  // b.none
   14000:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   14004:	add	x0, x0, #0x3d0
   14008:	ldr	x0, [x0, #24]
   1400c:	and	w1, w0, #0xffff
   14010:	ldr	x0, [sp, #32]
   14014:	strh	w1, [x0, #40]
   14018:	ldr	x0, [sp, #40]
   1401c:	ldr	w0, [x0, #116]
   14020:	orr	w1, w0, #0x1
   14024:	ldr	x0, [sp, #40]
   14028:	str	w1, [x0, #116]
   1402c:	ldr	x0, [sp, #32]
   14030:	ldrh	w0, [x0, #44]
   14034:	cmp	w0, #0x0
   14038:	b.ne	14068 <elf_update@@ELFUTILS_1.0+0x5b0>  // b.any
   1403c:	ldr	x0, [sp, #32]
   14040:	ldr	w0, [x0, #28]
   14044:	cmp	w0, #0x0
   14048:	b.eq	14068 <elf_update@@ELFUTILS_1.0+0x5b0>  // b.none
   1404c:	ldr	x0, [sp, #32]
   14050:	str	wzr, [x0, #28]
   14054:	ldr	x0, [sp, #40]
   14058:	ldr	w0, [x0, #116]
   1405c:	orr	w1, w0, #0x1
   14060:	ldr	x0, [sp, #40]
   14064:	str	w1, [x0, #116]
   14068:	mov	w0, #0x0                   	// #0
   1406c:	ldp	x29, x30, [sp], #112
   14070:	ret
   14074:	stp	x29, x30, [sp, #-336]!
   14078:	mov	x29, sp
   1407c:	str	x0, [sp, #40]
   14080:	str	x1, [sp, #32]
   14084:	str	x2, [sp, #24]
   14088:	str	wzr, [sp, #332]
   1408c:	str	wzr, [sp, #328]
   14090:	ldr	x0, [sp, #40]
   14094:	bl	ad28 <elf64_xlatetom@@ELFUTILS_1.0+0x3804>
   14098:	str	x0, [sp, #232]
   1409c:	ldr	x3, [sp, #32]
   140a0:	ldr	x2, [sp, #24]
   140a4:	ldr	x1, [sp, #232]
   140a8:	ldr	x0, [sp, #40]
   140ac:	bl	13d04 <elf_update@@ELFUTILS_1.0+0x24c>
   140b0:	cmp	w0, #0x0
   140b4:	b.eq	140c0 <elf_update@@ELFUTILS_1.0+0x608>  // b.none
   140b8:	mov	x0, #0xffffffffffffffff    	// #-1
   140bc:	b	14d20 <elf_update@@ELFUTILS_1.0+0x1268>
   140c0:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   140c4:	add	x0, x0, #0x3d0
   140c8:	ldr	x0, [x0, #24]
   140cc:	str	w0, [sp, #324]
   140d0:	ldr	x0, [sp, #40]
   140d4:	ldr	x0, [x0, #88]
   140d8:	cmp	x0, #0x0
   140dc:	b.ne	140e8 <elf_update@@ELFUTILS_1.0+0x630>  // b.any
   140e0:	ldr	x0, [sp, #40]
   140e4:	bl	b6ec <gelf_update_ehdr@@ELFUTILS_1.0+0x404>
   140e8:	ldr	x0, [sp, #40]
   140ec:	ldr	x0, [x0, #88]
   140f0:	cmp	x0, #0x0
   140f4:	b.eq	141e8 <elf_update@@ELFUTILS_1.0+0x730>  // b.none
   140f8:	add	x0, sp, #0x30
   140fc:	mov	x1, x0
   14100:	ldr	x0, [sp, #40]
   14104:	bl	1d2c0 <gelf_update_verdaux@@ELFUTILS_1.0+0xf4>
   14108:	cmp	w0, #0x0
   1410c:	cset	w0, ne  // ne = any
   14110:	and	w0, w0, #0xff
   14114:	and	x0, x0, #0xff
   14118:	cmp	x0, #0x0
   1411c:	b.eq	14128 <elf_update@@ELFUTILS_1.0+0x670>  // b.none
   14120:	mov	x0, #0xffffffffffffffff    	// #-1
   14124:	b	14d20 <elf_update@@ELFUTILS_1.0+0x1268>
   14128:	ldr	x0, [sp, #40]
   1412c:	ldr	w0, [x0, #56]
   14130:	and	w0, w0, #0x4
   14134:	cmp	w0, #0x0
   14138:	b.eq	14174 <elf_update@@ELFUTILS_1.0+0x6bc>  // b.none
   1413c:	ldr	x0, [sp, #232]
   14140:	ldr	w0, [x0, #28]
   14144:	mov	w1, w0
   14148:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   1414c:	add	x0, x0, #0x3d0
   14150:	ldr	x2, [x0, #48]
   14154:	ldr	x0, [sp, #48]
   14158:	mul	x0, x2, x0
   1415c:	add	x1, x1, x0
   14160:	ldr	w0, [sp, #324]
   14164:	cmp	x1, x0
   14168:	csel	x0, x1, x0, cs  // cs = hs, nlast
   1416c:	str	w0, [sp, #324]
   14170:	b	141e8 <elf_update@@ELFUTILS_1.0+0x730>
   14174:	ldr	x0, [sp, #232]
   14178:	add	x0, x0, #0x1c
   1417c:	str	x0, [sp, #224]
   14180:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   14184:	add	x0, x0, #0x3d0
   14188:	ldr	x0, [x0, #24]
   1418c:	str	x0, [sp, #216]
   14190:	ldr	x0, [sp, #224]
   14194:	ldr	w0, [x0]
   14198:	mov	w0, w0
   1419c:	ldr	x1, [sp, #216]
   141a0:	cmp	x1, x0
   141a4:	b.eq	141c4 <elf_update@@ELFUTILS_1.0+0x70c>  // b.none
   141a8:	ldr	x0, [sp, #216]
   141ac:	mov	w1, w0
   141b0:	ldr	x0, [sp, #224]
   141b4:	str	w1, [x0]
   141b8:	ldr	w0, [sp, #328]
   141bc:	orr	w0, w0, #0x1
   141c0:	str	w0, [sp, #328]
   141c4:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   141c8:	add	x0, x0, #0x3d0
   141cc:	ldr	x0, [x0, #48]
   141d0:	mov	w1, w0
   141d4:	ldr	x0, [sp, #48]
   141d8:	mul	w0, w1, w0
   141dc:	ldr	w1, [sp, #324]
   141e0:	add	w0, w1, w0
   141e4:	str	w0, [sp, #324]
   141e8:	ldr	x0, [sp, #24]
   141ec:	cmp	x0, #0x0
   141f0:	b.eq	14d04 <elf_update@@ELFUTILS_1.0+0x124c>  // b.none
   141f4:	str	xzr, [sp, #312]
   141f8:	mov	w0, #0x1                   	// #1
   141fc:	strb	w0, [sp, #303]
   14200:	ldr	x0, [sp, #40]
   14204:	ldr	w0, [x0, #200]
   14208:	cmp	w0, #0x0
   1420c:	b.ne	14230 <elf_update@@ELFUTILS_1.0+0x778>  // b.any
   14210:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   14214:	add	x3, x0, #0xbb8
   14218:	mov	w2, #0xb4                  	// #180
   1421c:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   14220:	add	x1, x0, #0xb30
   14224:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   14228:	add	x0, x0, #0xb48
   1422c:	bl	33d0 <__assert_fail@plt>
   14230:	ldr	x1, [sp, #24]
   14234:	mov	x0, #0xfeff                	// #65279
   14238:	cmp	x1, x0
   1423c:	b.ls	142a0 <elf_update@@ELFUTILS_1.0+0x7e8>  // b.plast
   14240:	ldr	x0, [sp, #40]
   14244:	add	x0, x0, #0xd8
   14248:	str	x0, [sp, #208]
   1424c:	ldr	x0, [sp, #208]
   14250:	ldr	x0, [x0, #144]
   14254:	add	x0, x0, #0x14
   14258:	str	x0, [sp, #200]
   1425c:	ldr	x0, [sp, #24]
   14260:	str	x0, [sp, #192]
   14264:	ldr	x0, [sp, #200]
   14268:	ldr	w0, [x0]
   1426c:	mov	w0, w0
   14270:	ldr	x1, [sp, #192]
   14274:	cmp	x1, x0
   14278:	b.eq	142a0 <elf_update@@ELFUTILS_1.0+0x7e8>  // b.none
   1427c:	ldr	x0, [sp, #192]
   14280:	mov	w1, w0
   14284:	ldr	x0, [sp, #200]
   14288:	str	w1, [x0]
   1428c:	ldr	x0, [sp, #208]
   14290:	ldr	w0, [x0, #152]
   14294:	orr	w1, w0, #0x1
   14298:	ldr	x0, [sp, #208]
   1429c:	str	w1, [x0, #152]
   142a0:	ldr	x0, [sp, #40]
   142a4:	add	x0, x0, #0xc8
   142a8:	str	x0, [sp, #304]
   142ac:	ldr	x0, [sp, #304]
   142b0:	ldr	w0, [x0]
   142b4:	cmp	w0, #0x1
   142b8:	b.ls	142cc <elf_update@@ELFUTILS_1.0+0x814>  // b.plast
   142bc:	ldr	x0, [sp, #304]
   142c0:	add	x0, x0, #0xe0
   142c4:	str	x0, [sp, #312]
   142c8:	b	142ec <elf_update@@ELFUTILS_1.0+0x834>
   142cc:	ldr	x0, [sp, #304]
   142d0:	ldr	x0, [x0, #8]
   142d4:	cmp	x0, #0x0
   142d8:	b.eq	142ec <elf_update@@ELFUTILS_1.0+0x834>  // b.none
   142dc:	ldr	x0, [sp, #304]
   142e0:	ldr	x0, [x0, #8]
   142e4:	add	x0, x0, #0x10
   142e8:	str	x0, [sp, #312]
   142ec:	ldr	x0, [sp, #312]
   142f0:	cmp	x0, #0x0
   142f4:	b.eq	14310 <elf_update@@ELFUTILS_1.0+0x858>  // b.none
   142f8:	ldr	x0, [sp, #312]
   142fc:	ldr	x0, [x0, #144]
   14300:	cmp	x0, #0x0
   14304:	b.ne	14310 <elf_update@@ELFUTILS_1.0+0x858>  // b.any
   14308:	ldr	x0, [sp, #312]
   1430c:	bl	1010c <elf_newscn@@ELFUTILS_1.0+0x11d8>
   14310:	ldrb	w0, [sp, #303]
   14314:	and	x0, x0, #0xff
   14318:	str	x0, [sp, #288]
   1431c:	b	14b70 <elf_update@@ELFUTILS_1.0+0x10b8>
   14320:	ldr	x1, [sp, #288]
   14324:	mov	x0, x1
   14328:	lsl	x0, x0, #1
   1432c:	add	x0, x0, x1
   14330:	lsl	x0, x0, #2
   14334:	add	x0, x0, x1
   14338:	lsl	x0, x0, #4
   1433c:	add	x0, x0, #0x10
   14340:	ldr	x1, [sp, #304]
   14344:	add	x0, x1, x0
   14348:	str	x0, [sp, #152]
   1434c:	ldr	x0, [sp, #152]
   14350:	ldr	x0, [x0, #144]
   14354:	str	x0, [sp, #144]
   14358:	str	xzr, [sp, #280]
   1435c:	ldr	x0, [sp, #144]
   14360:	cmp	x0, #0x0
   14364:	b.ne	14388 <elf_update@@ELFUTILS_1.0+0x8d0>  // b.any
   14368:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   1436c:	add	x3, x0, #0xbb8
   14370:	mov	w2, #0xd6                  	// #214
   14374:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   14378:	add	x1, x0, #0xb30
   1437c:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   14380:	add	x0, x0, #0xb78
   14384:	bl	33d0 <__assert_fail@plt>
   14388:	ldr	x0, [sp, #144]
   1438c:	ldr	w0, [x0, #36]
   14390:	str	w0, [sp, #276]
   14394:	ldr	x0, [sp, #144]
   14398:	ldr	w0, [x0, #32]
   1439c:	cmp	w0, #0x0
   143a0:	b.ne	143a8 <elf_update@@ELFUTILS_1.0+0x8f0>  // b.any
   143a4:	mov	w0, #0x1                   	// #1
   143a8:	str	w0, [sp, #272]
   143ac:	ldr	w0, [sp, #272]
   143b0:	sub	w1, w0, #0x1
   143b4:	ldr	w0, [sp, #272]
   143b8:	and	w0, w1, w0
   143bc:	cmp	w0, #0x0
   143c0:	cset	w0, ne  // ne = any
   143c4:	and	w0, w0, #0xff
   143c8:	and	x0, x0, #0xff
   143cc:	cmp	x0, #0x0
   143d0:	b.eq	143e4 <elf_update@@ELFUTILS_1.0+0x92c>  // b.none
   143d4:	mov	w0, #0x24                  	// #36
   143d8:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   143dc:	mov	x0, #0xffffffffffffffff    	// #-1
   143e0:	b	14d20 <elf_update@@ELFUTILS_1.0+0x1268>
   143e4:	ldr	x0, [sp, #144]
   143e8:	ldr	w0, [x0, #4]
   143ec:	mov	w1, #0xfffc                	// #65532
   143f0:	movk	w1, #0x6fff, lsl #16
   143f4:	cmp	w0, w1
   143f8:	b.eq	14594 <elf_update@@ELFUTILS_1.0+0xadc>  // b.none
   143fc:	mov	w1, #0xfffc                	// #65532
   14400:	movk	w1, #0x6fff, lsl #16
   14404:	cmp	w0, w1
   14408:	b.hi	145a8 <elf_update@@ELFUTILS_1.0+0xaf0>  // b.pmore
   1440c:	mov	w1, #0xfffa                	// #65530
   14410:	movk	w1, #0x6fff, lsl #16
   14414:	cmp	w0, w1
   14418:	b.eq	14580 <elf_update@@ELFUTILS_1.0+0xac8>  // b.none
   1441c:	mov	w1, #0xfffa                	// #65530
   14420:	movk	w1, #0x6fff, lsl #16
   14424:	cmp	w0, w1
   14428:	b.hi	145a8 <elf_update@@ELFUTILS_1.0+0xaf0>  // b.pmore
   1442c:	cmp	w0, #0x12
   14430:	b.eq	144e8 <elf_update@@ELFUTILS_1.0+0xa30>  // b.none
   14434:	cmp	w0, #0x12
   14438:	b.hi	145a8 <elf_update@@ELFUTILS_1.0+0xaf0>  // b.pmore
   1443c:	cmp	w0, #0x11
   14440:	b.eq	144c8 <elf_update@@ELFUTILS_1.0+0xa10>  // b.none
   14444:	cmp	w0, #0x11
   14448:	b.hi	145a8 <elf_update@@ELFUTILS_1.0+0xaf0>  // b.pmore
   1444c:	cmp	w0, #0xb
   14450:	b.eq	1456c <elf_update@@ELFUTILS_1.0+0xab4>  // b.none
   14454:	cmp	w0, #0xb
   14458:	b.hi	145a8 <elf_update@@ELFUTILS_1.0+0xaf0>  // b.pmore
   1445c:	cmp	w0, #0x9
   14460:	b.eq	14558 <elf_update@@ELFUTILS_1.0+0xaa0>  // b.none
   14464:	cmp	w0, #0x9
   14468:	b.hi	145a8 <elf_update@@ELFUTILS_1.0+0xaf0>  // b.pmore
   1446c:	cmp	w0, #0x6
   14470:	b.eq	14544 <elf_update@@ELFUTILS_1.0+0xa8c>  // b.none
   14474:	cmp	w0, #0x6
   14478:	b.hi	145a8 <elf_update@@ELFUTILS_1.0+0xaf0>  // b.pmore
   1447c:	cmp	w0, #0x5
   14480:	b.eq	144fc <elf_update@@ELFUTILS_1.0+0xa44>  // b.none
   14484:	cmp	w0, #0x5
   14488:	b.hi	145a8 <elf_update@@ELFUTILS_1.0+0xaf0>  // b.pmore
   1448c:	cmp	w0, #0x2
   14490:	b.eq	144a0 <elf_update@@ELFUTILS_1.0+0x9e8>  // b.none
   14494:	cmp	w0, #0x4
   14498:	b.eq	144b4 <elf_update@@ELFUTILS_1.0+0x9fc>  // b.none
   1449c:	b	145a8 <elf_update@@ELFUTILS_1.0+0xaf0>
   144a0:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   144a4:	add	x0, x0, #0x3d0
   144a8:	ldr	x0, [x0, #88]
   144ac:	str	w0, [sp, #276]
   144b0:	b	145ac <elf_update@@ELFUTILS_1.0+0xaf4>
   144b4:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   144b8:	add	x0, x0, #0x3d0
   144bc:	ldr	x0, [x0, #56]
   144c0:	str	w0, [sp, #276]
   144c4:	b	145ac <elf_update@@ELFUTILS_1.0+0xaf4>
   144c8:	ldr	x0, [sp, #232]
   144cc:	ldrh	w0, [x0, #16]
   144d0:	cmp	w0, #0x1
   144d4:	b.eq	144e8 <elf_update@@ELFUTILS_1.0+0xa30>  // b.none
   144d8:	mov	w0, #0x28                  	// #40
   144dc:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   144e0:	mov	x0, #0xffffffffffffffff    	// #-1
   144e4:	b	14d20 <elf_update@@ELFUTILS_1.0+0x1268>
   144e8:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   144ec:	add	x0, x0, #0x3d0
   144f0:	ldr	x0, [x0, #96]
   144f4:	str	w0, [sp, #276]
   144f8:	b	145ac <elf_update@@ELFUTILS_1.0+0xaf4>
   144fc:	ldr	x0, [sp, #232]
   14500:	ldrh	w1, [x0, #18]
   14504:	mov	w0, #0x9026                	// #36902
   14508:	cmp	w1, w0
   1450c:	b.eq	14530 <elf_update@@ELFUTILS_1.0+0xa78>  // b.none
   14510:	ldr	x0, [sp, #232]
   14514:	ldrh	w0, [x0, #18]
   14518:	cmp	w0, #0x16
   1451c:	b.ne	14538 <elf_update@@ELFUTILS_1.0+0xa80>  // b.any
   14520:	ldr	x0, [sp, #232]
   14524:	ldrb	w0, [x0, #4]
   14528:	cmp	w0, #0x2
   1452c:	b.ne	14538 <elf_update@@ELFUTILS_1.0+0xa80>  // b.any
   14530:	mov	w0, #0x8                   	// #8
   14534:	b	1453c <elf_update@@ELFUTILS_1.0+0xa84>
   14538:	mov	w0, #0x4                   	// #4
   1453c:	str	w0, [sp, #276]
   14540:	b	145ac <elf_update@@ELFUTILS_1.0+0xaf4>
   14544:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   14548:	add	x0, x0, #0x3d0
   1454c:	ldr	x0, [x0, #16]
   14550:	str	w0, [sp, #276]
   14554:	b	145ac <elf_update@@ELFUTILS_1.0+0xaf4>
   14558:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   1455c:	add	x0, x0, #0x3d0
   14560:	ldr	x0, [x0, #64]
   14564:	str	w0, [sp, #276]
   14568:	b	145ac <elf_update@@ELFUTILS_1.0+0xaf4>
   1456c:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   14570:	add	x0, x0, #0x3d0
   14574:	ldr	x0, [x0, #88]
   14578:	str	w0, [sp, #276]
   1457c:	b	145ac <elf_update@@ELFUTILS_1.0+0xaf4>
   14580:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   14584:	add	x0, x0, #0x3d0
   14588:	ldr	x0, [x0, #168]
   1458c:	str	w0, [sp, #276]
   14590:	b	145ac <elf_update@@ELFUTILS_1.0+0xaf4>
   14594:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   14598:	add	x0, x0, #0x3d0
   1459c:	ldr	x0, [x0, #160]
   145a0:	str	w0, [sp, #276]
   145a4:	b	145ac <elf_update@@ELFUTILS_1.0+0xaf4>
   145a8:	nop
   145ac:	ldr	x0, [sp, #144]
   145b0:	add	x0, x0, #0x24
   145b4:	str	x0, [sp, #136]
   145b8:	ldr	w0, [sp, #276]
   145bc:	str	w0, [sp, #132]
   145c0:	ldr	x0, [sp, #136]
   145c4:	ldr	w0, [x0]
   145c8:	ldr	w1, [sp, #132]
   145cc:	cmp	w1, w0
   145d0:	b.eq	145f4 <elf_update@@ELFUTILS_1.0+0xb3c>  // b.none
   145d4:	ldr	x0, [sp, #136]
   145d8:	ldr	w1, [sp, #132]
   145dc:	str	w1, [x0]
   145e0:	ldr	x0, [sp, #152]
   145e4:	ldr	w0, [x0, #152]
   145e8:	orr	w1, w0, #0x1
   145ec:	ldr	x0, [sp, #152]
   145f0:	str	w1, [x0, #152]
   145f4:	ldr	x0, [sp, #152]
   145f8:	ldr	w0, [x0, #120]
   145fc:	cmp	w0, #0x0
   14600:	b.ne	1461c <elf_update@@ELFUTILS_1.0+0xb64>  // b.any
   14604:	ldr	x0, [sp, #152]
   14608:	bl	11e24 <elf_rawdata@@ELFUTILS_1.0+0x634>
   1460c:	cmp	w0, #0x0
   14610:	b.eq	1461c <elf_update@@ELFUTILS_1.0+0xb64>  // b.none
   14614:	mov	x0, #0xffffffffffffffff    	// #-1
   14618:	b	14d20 <elf_update@@ELFUTILS_1.0+0x1268>
   1461c:	ldr	x2, [sp, #304]
   14620:	ldr	x1, [sp, #288]
   14624:	mov	x0, x1
   14628:	lsl	x0, x0, #1
   1462c:	add	x0, x0, x1
   14630:	lsl	x0, x0, #2
   14634:	add	x0, x0, x1
   14638:	lsl	x0, x0, #4
   1463c:	add	x0, x2, x0
   14640:	ldr	x0, [x0, #80]
   14644:	cmp	x0, #0x0
   14648:	b.eq	14818 <elf_update@@ELFUTILS_1.0+0xd60>  // b.none
   1464c:	ldr	x0, [sp, #152]
   14650:	str	x0, [sp, #264]
   14654:	b	14808 <elf_update@@ELFUTILS_1.0+0xd50>
   14658:	ldr	x0, [sp, #264]
   1465c:	str	x0, [sp, #256]
   14660:	ldr	x0, [sp, #152]
   14664:	ldr	x1, [sp, #264]
   14668:	cmp	x1, x0
   1466c:	b.ne	1469c <elf_update@@ELFUTILS_1.0+0xbe4>  // b.any
   14670:	ldr	x0, [sp, #256]
   14674:	ldr	x0, [x0]
   14678:	cmp	x0, #0x0
   1467c:	b.ne	1469c <elf_update@@ELFUTILS_1.0+0xbe4>  // b.any
   14680:	ldr	x0, [sp, #152]
   14684:	ldr	x0, [x0, #72]
   14688:	cmp	x0, #0x0
   1468c:	b.eq	1469c <elf_update@@ELFUTILS_1.0+0xbe4>  // b.none
   14690:	ldr	x0, [sp, #152]
   14694:	add	x0, x0, #0x48
   14698:	str	x0, [sp, #256]
   1469c:	ldr	x0, [sp, #256]
   146a0:	ldr	w0, [x0, #12]
   146a4:	cmp	w0, #0x1
   146a8:	cset	w0, ne  // ne = any
   146ac:	and	w0, w0, #0xff
   146b0:	and	x0, x0, #0xff
   146b4:	cmp	x0, #0x0
   146b8:	b.eq	146cc <elf_update@@ELFUTILS_1.0+0xc14>  // b.none
   146bc:	mov	w0, #0x2                   	// #2
   146c0:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   146c4:	mov	x0, #0xffffffffffffffff    	// #-1
   146c8:	b	14d20 <elf_update@@ELFUTILS_1.0+0x1268>
   146cc:	ldr	x0, [sp, #256]
   146d0:	ldr	x0, [x0, #32]
   146d4:	sub	x1, x0, #0x1
   146d8:	ldr	x0, [sp, #256]
   146dc:	ldr	x0, [x0, #32]
   146e0:	and	x0, x1, x0
   146e4:	cmp	x0, #0x0
   146e8:	cset	w0, ne  // ne = any
   146ec:	and	w0, w0, #0xff
   146f0:	and	x0, x0, #0xff
   146f4:	cmp	x0, #0x0
   146f8:	b.eq	1470c <elf_update@@ELFUTILS_1.0+0xc54>  // b.none
   146fc:	mov	w0, #0x24                  	// #36
   14700:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   14704:	mov	x0, #0xffffffffffffffff    	// #-1
   14708:	b	14d20 <elf_update@@ELFUTILS_1.0+0x1268>
   1470c:	ldr	x0, [sp, #256]
   14710:	ldr	x1, [x0, #32]
   14714:	ldr	w0, [sp, #272]
   14718:	cmp	x1, x0
   1471c:	csel	x0, x1, x0, cs  // cs = hs, nlast
   14720:	str	w0, [sp, #272]
   14724:	ldr	x0, [sp, #40]
   14728:	ldr	w0, [x0, #56]
   1472c:	and	w0, w0, #0x4
   14730:	cmp	w0, #0x0
   14734:	b.eq	14780 <elf_update@@ELFUTILS_1.0+0xcc8>  // b.none
   14738:	ldr	x0, [sp, #256]
   1473c:	ldr	x0, [x0, #24]
   14740:	mov	w1, w0
   14744:	ldr	x0, [sp, #256]
   14748:	ldr	x0, [x0, #16]
   1474c:	add	w1, w1, w0
   14750:	ldr	x0, [sp, #144]
   14754:	ldr	w0, [x0, #20]
   14758:	cmp	w1, w0
   1475c:	cset	w0, hi  // hi = pmore
   14760:	and	w0, w0, #0xff
   14764:	and	x0, x0, #0xff
   14768:	cmp	x0, #0x0
   1476c:	b.eq	147fc <elf_update@@ELFUTILS_1.0+0xd44>  // b.none
   14770:	mov	w0, #0x23                  	// #35
   14774:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   14778:	mov	x0, #0xffffffffffffffff    	// #-1
   1477c:	b	14d20 <elf_update@@ELFUTILS_1.0+0x1268>
   14780:	ldr	x0, [sp, #256]
   14784:	ldr	x1, [x0, #32]
   14788:	ldr	x0, [sp, #280]
   1478c:	add	x0, x1, x0
   14790:	sub	x1, x0, #0x1
   14794:	ldr	x0, [sp, #256]
   14798:	ldr	x0, [x0, #32]
   1479c:	neg	x0, x0
   147a0:	and	x0, x1, x0
   147a4:	str	x0, [sp, #280]
   147a8:	ldr	x0, [sp, #256]
   147ac:	add	x0, x0, #0x18
   147b0:	str	x0, [sp, #120]
   147b4:	ldr	x0, [sp, #280]
   147b8:	str	x0, [sp, #112]
   147bc:	ldr	x0, [sp, #120]
   147c0:	ldr	x0, [x0]
   147c4:	ldr	x1, [sp, #112]
   147c8:	cmp	x1, x0
   147cc:	b.eq	147e8 <elf_update@@ELFUTILS_1.0+0xd30>  // b.none
   147d0:	ldr	x0, [sp, #120]
   147d4:	ldr	x1, [sp, #112]
   147d8:	str	x1, [x0]
   147dc:	ldr	w0, [sp, #332]
   147e0:	orr	w0, w0, #0x1
   147e4:	str	w0, [sp, #332]
   147e8:	ldr	x0, [sp, #256]
   147ec:	ldr	x1, [x0, #16]
   147f0:	ldr	x0, [sp, #280]
   147f4:	add	x0, x1, x0
   147f8:	str	x0, [sp, #280]
   147fc:	ldr	x0, [sp, #264]
   14800:	ldr	x0, [x0, #48]
   14804:	str	x0, [sp, #264]
   14808:	ldr	x0, [sp, #264]
   1480c:	cmp	x0, #0x0
   14810:	b.ne	14658 <elf_update@@ELFUTILS_1.0+0xba0>  // b.any
   14814:	b	1482c <elf_update@@ELFUTILS_1.0+0xd74>
   14818:	ldr	x0, [sp, #152]
   1481c:	ldr	x1, [x0, #88]
   14820:	ldr	x0, [sp, #280]
   14824:	add	x0, x1, x0
   14828:	str	x0, [sp, #280]
   1482c:	ldr	x0, [sp, #40]
   14830:	ldr	w0, [x0, #56]
   14834:	and	w0, w0, #0x4
   14838:	cmp	w0, #0x0
   1483c:	b.eq	148ec <elf_update@@ELFUTILS_1.0+0xe34>  // b.none
   14840:	ldr	x0, [sp, #144]
   14844:	ldr	w0, [x0, #4]
   14848:	cmp	w0, #0x8
   1484c:	b.eq	14868 <elf_update@@ELFUTILS_1.0+0xdb0>  // b.none
   14850:	ldr	x0, [sp, #144]
   14854:	ldr	w1, [x0, #16]
   14858:	ldr	x0, [sp, #144]
   1485c:	ldr	w0, [x0, #20]
   14860:	add	w0, w1, w0
   14864:	b	1486c <elf_update@@ELFUTILS_1.0+0xdb4>
   14868:	mov	w0, #0x0                   	// #0
   1486c:	ldr	w1, [sp, #324]
   14870:	cmp	w0, w1
   14874:	csel	w0, w0, w1, cs  // cs = hs, nlast
   14878:	str	w0, [sp, #324]
   1487c:	ldr	x0, [sp, #144]
   14880:	ldr	w0, [x0, #32]
   14884:	sub	w1, w0, #0x1
   14888:	ldr	x0, [sp, #144]
   1488c:	ldr	w0, [x0, #32]
   14890:	and	w0, w1, w0
   14894:	cmp	w0, #0x0
   14898:	cset	w0, ne  // ne = any
   1489c:	and	w0, w0, #0xff
   148a0:	and	x0, x0, #0xff
   148a4:	cmp	x0, #0x0
   148a8:	b.ne	148dc <elf_update@@ELFUTILS_1.0+0xe24>  // b.any
   148ac:	ldr	x0, [sp, #144]
   148b0:	ldr	w0, [x0, #32]
   148b4:	cmp	w0, #0x0
   148b8:	b.ne	148c0 <elf_update@@ELFUTILS_1.0+0xe08>  // b.any
   148bc:	mov	w0, #0x1                   	// #1
   148c0:	ldr	w1, [sp, #272]
   148c4:	cmp	w0, w1
   148c8:	cset	w0, cc  // cc = lo, ul, last
   148cc:	and	w0, w0, #0xff
   148d0:	and	x0, x0, #0xff
   148d4:	cmp	x0, #0x0
   148d8:	b.eq	14a90 <elf_update@@ELFUTILS_1.0+0xfd8>  // b.none
   148dc:	mov	w0, #0x24                  	// #36
   148e0:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   148e4:	mov	x0, #0xffffffffffffffff    	// #-1
   148e8:	b	14d20 <elf_update@@ELFUTILS_1.0+0x1268>
   148ec:	ldr	x0, [sp, #144]
   148f0:	add	x0, x0, #0x20
   148f4:	str	x0, [sp, #104]
   148f8:	ldr	w0, [sp, #272]
   148fc:	str	w0, [sp, #100]
   14900:	ldr	x0, [sp, #104]
   14904:	ldr	w0, [x0]
   14908:	ldr	w1, [sp, #100]
   1490c:	cmp	w1, w0
   14910:	b.eq	14934 <elf_update@@ELFUTILS_1.0+0xe7c>  // b.none
   14914:	ldr	x0, [sp, #104]
   14918:	ldr	w1, [sp, #100]
   1491c:	str	w1, [x0]
   14920:	ldr	x0, [sp, #152]
   14924:	ldr	w0, [x0, #152]
   14928:	orr	w1, w0, #0x1
   1492c:	ldr	x0, [sp, #152]
   14930:	str	w1, [x0, #152]
   14934:	ldr	w1, [sp, #324]
   14938:	ldr	w0, [sp, #272]
   1493c:	add	w0, w1, w0
   14940:	sub	w1, w0, #0x1
   14944:	ldr	w0, [sp, #272]
   14948:	neg	w0, w0
   1494c:	and	w0, w1, w0
   14950:	str	w0, [sp, #324]
   14954:	str	wzr, [sp, #252]
   14958:	ldr	x0, [sp, #144]
   1495c:	add	x0, x0, #0x10
   14960:	str	x0, [sp, #88]
   14964:	ldr	w0, [sp, #324]
   14968:	str	w0, [sp, #84]
   1496c:	ldr	x0, [sp, #88]
   14970:	ldr	w0, [x0]
   14974:	ldr	w1, [sp, #84]
   14978:	cmp	w1, w0
   1497c:	b.eq	14998 <elf_update@@ELFUTILS_1.0+0xee0>  // b.none
   14980:	ldr	x0, [sp, #88]
   14984:	ldr	w1, [sp, #84]
   14988:	str	w1, [x0]
   1498c:	ldr	w0, [sp, #252]
   14990:	orr	w0, w0, #0x1
   14994:	str	w0, [sp, #252]
   14998:	ldr	w1, [sp, #332]
   1499c:	ldr	w0, [sp, #252]
   149a0:	orr	w0, w1, w0
   149a4:	str	w0, [sp, #332]
   149a8:	ldr	w0, [sp, #252]
   149ac:	cmp	w0, #0x0
   149b0:	b.eq	149e0 <elf_update@@ELFUTILS_1.0+0xf28>  // b.none
   149b4:	ldr	x0, [sp, #152]
   149b8:	ldr	x0, [x0, #64]
   149bc:	cmp	x0, #0x0
   149c0:	b.ne	149e0 <elf_update@@ELFUTILS_1.0+0xf28>  // b.any
   149c4:	mov	x1, #0x0                   	// #0
   149c8:	ldr	x0, [sp, #152]
   149cc:	bl	125cc <elf_rawdata@@ELFUTILS_1.0+0xddc>
   149d0:	cmp	x0, #0x0
   149d4:	b.ne	149e0 <elf_update@@ELFUTILS_1.0+0xf28>  // b.any
   149d8:	mov	x0, #0xffffffffffffffff    	// #-1
   149dc:	b	14d20 <elf_update@@ELFUTILS_1.0+0x1268>
   149e0:	str	wzr, [sp, #248]
   149e4:	ldr	x0, [sp, #144]
   149e8:	add	x0, x0, #0x14
   149ec:	str	x0, [sp, #72]
   149f0:	ldr	x0, [sp, #280]
   149f4:	str	w0, [sp, #68]
   149f8:	ldr	x0, [sp, #72]
   149fc:	ldr	w0, [x0]
   14a00:	ldr	w1, [sp, #68]
   14a04:	cmp	w1, w0
   14a08:	b.eq	14a24 <elf_update@@ELFUTILS_1.0+0xf6c>  // b.none
   14a0c:	ldr	x0, [sp, #72]
   14a10:	ldr	w1, [sp, #68]
   14a14:	str	w1, [x0]
   14a18:	ldr	w0, [sp, #248]
   14a1c:	orr	w0, w0, #0x1
   14a20:	str	w0, [sp, #248]
   14a24:	ldr	w1, [sp, #332]
   14a28:	ldr	w0, [sp, #248]
   14a2c:	orr	w0, w1, w0
   14a30:	str	w0, [sp, #332]
   14a34:	ldr	x0, [sp, #144]
   14a38:	ldr	w0, [x0, #4]
   14a3c:	cmp	w0, #0x8
   14a40:	b.eq	14a58 <elf_update@@ELFUTILS_1.0+0xfa0>  // b.none
   14a44:	ldr	x0, [sp, #280]
   14a48:	mov	w1, w0
   14a4c:	ldr	w0, [sp, #324]
   14a50:	add	w0, w0, w1
   14a54:	str	w0, [sp, #324]
   14a58:	ldr	x0, [sp, #152]
   14a5c:	ldr	w0, [x0, #152]
   14a60:	ldr	w2, [sp, #252]
   14a64:	ldr	w1, [sp, #248]
   14a68:	orr	w1, w2, w1
   14a6c:	orr	w1, w0, w1
   14a70:	ldr	x0, [sp, #152]
   14a74:	str	w1, [x0, #152]
   14a78:	ldr	x0, [sp, #152]
   14a7c:	ldr	w1, [x0, #156]
   14a80:	ldr	w0, [sp, #332]
   14a84:	orr	w1, w1, w0
   14a88:	ldr	x0, [sp, #152]
   14a8c:	str	w1, [x0, #156]
   14a90:	ldr	x0, [sp, #144]
   14a94:	ldr	w0, [x0, #36]
   14a98:	cmp	w0, #0x0
   14a9c:	b.eq	14b64 <elf_update@@ELFUTILS_1.0+0x10ac>  // b.none
   14aa0:	ldr	x0, [sp, #144]
   14aa4:	ldr	w0, [x0, #36]
   14aa8:	cmp	w0, #0x1
   14aac:	b.eq	14b64 <elf_update@@ELFUTILS_1.0+0x10ac>  // b.none
   14ab0:	ldr	x0, [sp, #40]
   14ab4:	ldr	w0, [x0, #56]
   14ab8:	and	w0, w0, #0x8
   14abc:	cmp	w0, #0x0
   14ac0:	b.ne	14b64 <elf_update@@ELFUTILS_1.0+0x10ac>  // b.any
   14ac4:	ldr	x0, [sp, #144]
   14ac8:	ldr	w0, [x0, #8]
   14acc:	and	w0, w0, #0x800
   14ad0:	cmp	w0, #0x0
   14ad4:	b.ne	14ae8 <elf_update@@ELFUTILS_1.0+0x1030>  // b.any
   14ad8:	ldr	x0, [sp, #144]
   14adc:	ldr	w0, [x0, #20]
   14ae0:	str	w0, [sp, #244]
   14ae4:	b	14b24 <elf_update@@ELFUTILS_1.0+0x106c>
   14ae8:	ldr	x0, [sp, #152]
   14aec:	bl	3110 <elf32_getchdr@plt>
   14af0:	str	x0, [sp, #56]
   14af4:	ldr	x0, [sp, #56]
   14af8:	cmp	x0, #0x0
   14afc:	cset	w0, eq  // eq = none
   14b00:	and	w0, w0, #0xff
   14b04:	and	x0, x0, #0xff
   14b08:	cmp	x0, #0x0
   14b0c:	b.eq	14b18 <elf_update@@ELFUTILS_1.0+0x1060>  // b.none
   14b10:	mov	x0, #0xffffffffffffffff    	// #-1
   14b14:	b	14d20 <elf_update@@ELFUTILS_1.0+0x1268>
   14b18:	ldr	x0, [sp, #56]
   14b1c:	ldr	w0, [x0, #4]
   14b20:	str	w0, [sp, #244]
   14b24:	ldr	x0, [sp, #144]
   14b28:	ldr	w1, [x0, #36]
   14b2c:	ldr	w0, [sp, #244]
   14b30:	udiv	w2, w0, w1
   14b34:	mul	w1, w2, w1
   14b38:	sub	w0, w0, w1
   14b3c:	cmp	w0, #0x0
   14b40:	cset	w0, ne  // ne = any
   14b44:	and	w0, w0, #0xff
   14b48:	and	x0, x0, #0xff
   14b4c:	cmp	x0, #0x0
   14b50:	b.eq	14b64 <elf_update@@ELFUTILS_1.0+0x10ac>  // b.none
   14b54:	mov	w0, #0x25                  	// #37
   14b58:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   14b5c:	mov	x0, #0xffffffffffffffff    	// #-1
   14b60:	b	14d20 <elf_update@@ELFUTILS_1.0+0x1268>
   14b64:	ldr	x0, [sp, #288]
   14b68:	add	x0, x0, #0x1
   14b6c:	str	x0, [sp, #288]
   14b70:	ldr	x0, [sp, #304]
   14b74:	ldr	w0, [x0]
   14b78:	mov	w0, w0
   14b7c:	ldr	x1, [sp, #288]
   14b80:	cmp	x1, x0
   14b84:	b.cc	14320 <elf_update@@ELFUTILS_1.0+0x868>  // b.lo, b.ul, b.last
   14b88:	ldr	x0, [sp, #304]
   14b8c:	ldr	x0, [x0, #8]
   14b90:	cmp	x0, #0x0
   14b94:	b.eq	14bd0 <elf_update@@ELFUTILS_1.0+0x1118>  // b.none
   14b98:	ldr	x0, [sp, #304]
   14b9c:	ldr	w1, [x0]
   14ba0:	ldr	x0, [sp, #304]
   14ba4:	ldr	w0, [x0, #4]
   14ba8:	cmp	w1, w0
   14bac:	b.eq	14bd0 <elf_update@@ELFUTILS_1.0+0x1118>  // b.none
   14bb0:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   14bb4:	add	x3, x0, #0xbb8
   14bb8:	mov	w2, #0x19b                 	// #411
   14bbc:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   14bc0:	add	x1, x0, #0xb30
   14bc4:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   14bc8:	add	x0, x0, #0xb88
   14bcc:	bl	33d0 <__assert_fail@plt>
   14bd0:	strb	wzr, [sp, #303]
   14bd4:	ldr	x0, [sp, #304]
   14bd8:	ldr	x0, [x0, #8]
   14bdc:	str	x0, [sp, #304]
   14be0:	ldr	x0, [sp, #304]
   14be4:	cmp	x0, #0x0
   14be8:	b.ne	14310 <elf_update@@ELFUTILS_1.0+0x858>  // b.any
   14bec:	ldr	x0, [sp, #232]
   14bf0:	add	x0, x0, #0x2e
   14bf4:	str	x0, [sp, #184]
   14bf8:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   14bfc:	add	x0, x0, #0x3d0
   14c00:	ldr	x0, [x0, #72]
   14c04:	str	x0, [sp, #176]
   14c08:	ldr	x0, [sp, #184]
   14c0c:	ldrh	w0, [x0]
   14c10:	and	x0, x0, #0xffff
   14c14:	ldr	x1, [sp, #176]
   14c18:	cmp	x1, x0
   14c1c:	b.eq	14c3c <elf_update@@ELFUTILS_1.0+0x1184>  // b.none
   14c20:	ldr	x0, [sp, #176]
   14c24:	and	w1, w0, #0xffff
   14c28:	ldr	x0, [sp, #184]
   14c2c:	strh	w1, [x0]
   14c30:	ldr	w0, [sp, #328]
   14c34:	orr	w0, w0, #0x1
   14c38:	str	w0, [sp, #328]
   14c3c:	ldr	x0, [sp, #40]
   14c40:	ldr	w0, [x0, #56]
   14c44:	and	w0, w0, #0x4
   14c48:	cmp	w0, #0x0
   14c4c:	b.eq	14c88 <elf_update@@ELFUTILS_1.0+0x11d0>  // b.none
   14c50:	ldr	x0, [sp, #232]
   14c54:	ldr	w0, [x0, #32]
   14c58:	mov	w1, w0
   14c5c:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   14c60:	add	x0, x0, #0x3d0
   14c64:	ldr	x2, [x0, #72]
   14c68:	ldr	x0, [sp, #24]
   14c6c:	mul	x0, x2, x0
   14c70:	add	x1, x1, x0
   14c74:	ldr	w0, [sp, #324]
   14c78:	cmp	x1, x0
   14c7c:	csel	x0, x1, x0, cs  // cs = hs, nlast
   14c80:	str	w0, [sp, #324]
   14c84:	b	14d04 <elf_update@@ELFUTILS_1.0+0x124c>
   14c88:	ldr	w0, [sp, #324]
   14c8c:	add	w0, w0, #0x3
   14c90:	and	w0, w0, #0xfffffffc
   14c94:	str	w0, [sp, #324]
   14c98:	ldr	x0, [sp, #232]
   14c9c:	add	x0, x0, #0x20
   14ca0:	str	x0, [sp, #168]
   14ca4:	ldr	w0, [sp, #324]
   14ca8:	str	w0, [sp, #164]
   14cac:	ldr	x0, [sp, #168]
   14cb0:	ldr	w0, [x0]
   14cb4:	ldr	w1, [sp, #164]
   14cb8:	cmp	w1, w0
   14cbc:	b.eq	14ce0 <elf_update@@ELFUTILS_1.0+0x1228>  // b.none
   14cc0:	ldr	x0, [sp, #168]
   14cc4:	ldr	w1, [sp, #164]
   14cc8:	str	w1, [x0]
   14ccc:	ldr	x0, [sp, #40]
   14cd0:	ldr	w0, [x0, #56]
   14cd4:	orr	w1, w0, #0x1
   14cd8:	ldr	x0, [sp, #40]
   14cdc:	str	w1, [x0, #56]
   14ce0:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   14ce4:	add	x0, x0, #0x3d0
   14ce8:	ldr	x0, [x0, #72]
   14cec:	mov	w1, w0
   14cf0:	ldr	x0, [sp, #24]
   14cf4:	mul	w0, w1, w0
   14cf8:	ldr	w1, [sp, #324]
   14cfc:	add	w0, w1, w0
   14d00:	str	w0, [sp, #324]
   14d04:	ldr	x0, [sp, #40]
   14d08:	ldr	w1, [x0, #116]
   14d0c:	ldr	w0, [sp, #328]
   14d10:	orr	w1, w1, w0
   14d14:	ldr	x0, [sp, #40]
   14d18:	str	w1, [x0, #116]
   14d1c:	ldr	w0, [sp, #324]
   14d20:	ldp	x29, x30, [sp], #336
   14d24:	ret
   14d28:	stp	x29, x30, [sp, #-112]!
   14d2c:	mov	x29, sp
   14d30:	str	x0, [sp, #40]
   14d34:	str	x1, [sp, #32]
   14d38:	str	x2, [sp, #24]
   14d3c:	str	x3, [sp, #16]
   14d40:	ldr	x3, [sp, #32]
   14d44:	mov	x2, #0x4                   	// #4
   14d48:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   14d4c:	add	x1, x0, #0xbd8
   14d50:	mov	x0, x3
   14d54:	bl	3250 <memcmp@plt>
   14d58:	cmp	w0, #0x0
   14d5c:	b.eq	14d8c <elf_update@@ELFUTILS_1.0+0x12d4>  // b.none
   14d60:	ldr	x3, [sp, #32]
   14d64:	mov	x2, #0x4                   	// #4
   14d68:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   14d6c:	add	x1, x0, #0xbd8
   14d70:	mov	x0, x3
   14d74:	bl	30a0 <memcpy@plt>
   14d78:	ldr	x0, [sp, #40]
   14d7c:	ldr	w0, [x0, #116]
   14d80:	orr	w1, w0, #0x1
   14d84:	ldr	x0, [sp, #40]
   14d88:	str	w1, [x0, #116]
   14d8c:	ldr	x0, [sp, #32]
   14d90:	add	x0, x0, #0x4
   14d94:	str	x0, [sp, #104]
   14d98:	mov	w0, #0x2                   	// #2
   14d9c:	str	w0, [sp, #100]
   14da0:	ldr	x0, [sp, #104]
   14da4:	ldrb	w0, [x0]
   14da8:	mov	w1, w0
   14dac:	ldr	w0, [sp, #100]
   14db0:	cmp	w0, w1
   14db4:	b.eq	14ddc <elf_update@@ELFUTILS_1.0+0x1324>  // b.none
   14db8:	ldr	w0, [sp, #100]
   14dbc:	and	w1, w0, #0xff
   14dc0:	ldr	x0, [sp, #104]
   14dc4:	strb	w1, [x0]
   14dc8:	ldr	x0, [sp, #40]
   14dcc:	ldr	w0, [x0, #116]
   14dd0:	orr	w1, w0, #0x1
   14dd4:	ldr	x0, [sp, #40]
   14dd8:	str	w1, [x0, #116]
   14ddc:	ldr	x0, [sp, #32]
   14de0:	ldrb	w0, [x0, #5]
   14de4:	cmp	w0, #0x0
   14de8:	cset	w0, eq  // eq = none
   14dec:	and	w0, w0, #0xff
   14df0:	and	x0, x0, #0xff
   14df4:	cmp	x0, #0x0
   14df8:	b.eq	14e20 <elf_update@@ELFUTILS_1.0+0x1368>  // b.none
   14dfc:	ldr	x0, [sp, #32]
   14e00:	mov	w1, #0x1                   	// #1
   14e04:	strb	w1, [x0, #5]
   14e08:	ldr	x0, [sp, #40]
   14e0c:	ldr	w0, [x0, #116]
   14e10:	orr	w1, w0, #0x1
   14e14:	ldr	x0, [sp, #40]
   14e18:	str	w1, [x0, #116]
   14e1c:	b	14e70 <elf_update@@ELFUTILS_1.0+0x13b8>
   14e20:	ldr	x0, [sp, #32]
   14e24:	ldrb	w0, [x0, #5]
   14e28:	cmp	w0, #0x2
   14e2c:	cset	w0, hi  // hi = pmore
   14e30:	and	w0, w0, #0xff
   14e34:	and	x0, x0, #0xff
   14e38:	cmp	x0, #0x0
   14e3c:	b.eq	14e50 <elf_update@@ELFUTILS_1.0+0x1398>  // b.none
   14e40:	mov	w0, #0x22                  	// #34
   14e44:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   14e48:	mov	w0, #0x1                   	// #1
   14e4c:	b	15090 <elf_update@@ELFUTILS_1.0+0x15d8>
   14e50:	ldr	x0, [sp, #32]
   14e54:	ldrb	w0, [x0, #5]
   14e58:	cmp	w0, #0x1
   14e5c:	cset	w0, ne  // ne = any
   14e60:	and	w0, w0, #0xff
   14e64:	mov	w1, w0
   14e68:	ldr	x0, [sp, #16]
   14e6c:	str	w1, [x0]
   14e70:	ldr	x0, [sp, #32]
   14e74:	add	x0, x0, #0x6
   14e78:	str	x0, [sp, #88]
   14e7c:	mov	w0, #0x1                   	// #1
   14e80:	str	w0, [sp, #84]
   14e84:	ldr	x0, [sp, #88]
   14e88:	ldrb	w0, [x0]
   14e8c:	mov	w1, w0
   14e90:	ldr	w0, [sp, #84]
   14e94:	cmp	w0, w1
   14e98:	b.eq	14ec0 <elf_update@@ELFUTILS_1.0+0x1408>  // b.none
   14e9c:	ldr	w0, [sp, #84]
   14ea0:	and	w1, w0, #0xff
   14ea4:	ldr	x0, [sp, #88]
   14ea8:	strb	w1, [x0]
   14eac:	ldr	x0, [sp, #40]
   14eb0:	ldr	w0, [x0, #116]
   14eb4:	orr	w1, w0, #0x1
   14eb8:	ldr	x0, [sp, #40]
   14ebc:	str	w1, [x0, #116]
   14ec0:	ldr	x0, [sp, #32]
   14ec4:	ldr	w0, [x0, #20]
   14ec8:	cmp	w0, #0x0
   14ecc:	cset	w0, eq  // eq = none
   14ed0:	and	w0, w0, #0xff
   14ed4:	and	x0, x0, #0xff
   14ed8:	cmp	x0, #0x0
   14edc:	b.eq	14f04 <elf_update@@ELFUTILS_1.0+0x144c>  // b.none
   14ee0:	ldr	x0, [sp, #32]
   14ee4:	mov	w1, #0x1                   	// #1
   14ee8:	str	w1, [x0, #20]
   14eec:	ldr	x0, [sp, #40]
   14ef0:	ldr	w0, [x0, #116]
   14ef4:	orr	w1, w0, #0x1
   14ef8:	ldr	x0, [sp, #40]
   14efc:	str	w1, [x0, #116]
   14f00:	b	14f34 <elf_update@@ELFUTILS_1.0+0x147c>
   14f04:	ldr	x0, [sp, #32]
   14f08:	ldr	w0, [x0, #20]
   14f0c:	cmp	w0, #0x1
   14f10:	cset	w0, ne  // ne = any
   14f14:	and	w0, w0, #0xff
   14f18:	and	x0, x0, #0xff
   14f1c:	cmp	x0, #0x0
   14f20:	b.eq	14f34 <elf_update@@ELFUTILS_1.0+0x147c>  // b.none
   14f24:	mov	w0, #0x2                   	// #2
   14f28:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   14f2c:	mov	w0, #0x1                   	// #1
   14f30:	b	15090 <elf_update@@ELFUTILS_1.0+0x15d8>
   14f34:	ldr	x1, [sp, #24]
   14f38:	mov	x0, #0xfeff                	// #65279
   14f3c:	cmp	x1, x0
   14f40:	cset	w0, hi  // hi = pmore
   14f44:	and	w0, w0, #0xff
   14f48:	and	x0, x0, #0xff
   14f4c:	cmp	x0, #0x0
   14f50:	b.eq	14fa4 <elf_update@@ELFUTILS_1.0+0x14ec>  // b.none
   14f54:	ldr	x0, [sp, #32]
   14f58:	add	x0, x0, #0x3c
   14f5c:	str	x0, [sp, #56]
   14f60:	str	wzr, [sp, #52]
   14f64:	ldr	x0, [sp, #56]
   14f68:	ldrh	w0, [x0]
   14f6c:	mov	w1, w0
   14f70:	ldr	w0, [sp, #52]
   14f74:	cmp	w0, w1
   14f78:	b.eq	14ff4 <elf_update@@ELFUTILS_1.0+0x153c>  // b.none
   14f7c:	ldr	w0, [sp, #52]
   14f80:	and	w1, w0, #0xffff
   14f84:	ldr	x0, [sp, #56]
   14f88:	strh	w1, [x0]
   14f8c:	ldr	x0, [sp, #40]
   14f90:	ldr	w0, [x0, #116]
   14f94:	orr	w1, w0, #0x1
   14f98:	ldr	x0, [sp, #40]
   14f9c:	str	w1, [x0, #116]
   14fa0:	b	14ff4 <elf_update@@ELFUTILS_1.0+0x153c>
   14fa4:	ldr	x0, [sp, #32]
   14fa8:	add	x0, x0, #0x3c
   14fac:	str	x0, [sp, #72]
   14fb0:	ldr	x0, [sp, #24]
   14fb4:	str	x0, [sp, #64]
   14fb8:	ldr	x0, [sp, #72]
   14fbc:	ldrh	w0, [x0]
   14fc0:	and	x0, x0, #0xffff
   14fc4:	ldr	x1, [sp, #64]
   14fc8:	cmp	x1, x0
   14fcc:	b.eq	14ff4 <elf_update@@ELFUTILS_1.0+0x153c>  // b.none
   14fd0:	ldr	x0, [sp, #64]
   14fd4:	and	w1, w0, #0xffff
   14fd8:	ldr	x0, [sp, #72]
   14fdc:	strh	w1, [x0]
   14fe0:	ldr	x0, [sp, #40]
   14fe4:	ldr	w0, [x0, #116]
   14fe8:	orr	w1, w0, #0x1
   14fec:	ldr	x0, [sp, #40]
   14ff0:	str	w1, [x0, #116]
   14ff4:	ldr	x0, [sp, #32]
   14ff8:	ldrh	w0, [x0, #52]
   14ffc:	and	x1, x0, #0xffff
   15000:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   15004:	add	x0, x0, #0x3d0
   15008:	ldr	x0, [x0, #240]
   1500c:	cmp	x1, x0
   15010:	cset	w0, ne  // ne = any
   15014:	and	w0, w0, #0xff
   15018:	and	x0, x0, #0xff
   1501c:	cmp	x0, #0x0
   15020:	b.eq	15050 <elf_update@@ELFUTILS_1.0+0x1598>  // b.none
   15024:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   15028:	add	x0, x0, #0x3d0
   1502c:	ldr	x0, [x0, #240]
   15030:	and	w1, w0, #0xffff
   15034:	ldr	x0, [sp, #32]
   15038:	strh	w1, [x0, #52]
   1503c:	ldr	x0, [sp, #40]
   15040:	ldr	w0, [x0, #116]
   15044:	orr	w1, w0, #0x1
   15048:	ldr	x0, [sp, #40]
   1504c:	str	w1, [x0, #116]
   15050:	ldr	x0, [sp, #32]
   15054:	ldrh	w0, [x0, #56]
   15058:	cmp	w0, #0x0
   1505c:	b.ne	1508c <elf_update@@ELFUTILS_1.0+0x15d4>  // b.any
   15060:	ldr	x0, [sp, #32]
   15064:	ldr	x0, [x0, #32]
   15068:	cmp	x0, #0x0
   1506c:	b.eq	1508c <elf_update@@ELFUTILS_1.0+0x15d4>  // b.none
   15070:	ldr	x0, [sp, #32]
   15074:	str	xzr, [x0, #32]
   15078:	ldr	x0, [sp, #40]
   1507c:	ldr	w0, [x0, #116]
   15080:	orr	w1, w0, #0x1
   15084:	ldr	x0, [sp, #40]
   15088:	str	w1, [x0, #116]
   1508c:	mov	w0, #0x0                   	// #0
   15090:	ldp	x29, x30, [sp], #112
   15094:	ret
   15098:	stp	x29, x30, [sp, #-352]!
   1509c:	mov	x29, sp
   150a0:	str	x0, [sp, #40]
   150a4:	str	x1, [sp, #32]
   150a8:	str	x2, [sp, #24]
   150ac:	str	wzr, [sp, #348]
   150b0:	str	wzr, [sp, #344]
   150b4:	ldr	x0, [sp, #40]
   150b8:	bl	ae54 <elf32_getehdr@@ELFUTILS_1.0+0x10c>
   150bc:	str	x0, [sp, #240]
   150c0:	ldr	x3, [sp, #32]
   150c4:	ldr	x2, [sp, #24]
   150c8:	ldr	x1, [sp, #240]
   150cc:	ldr	x0, [sp, #40]
   150d0:	bl	14d28 <elf_update@@ELFUTILS_1.0+0x1270>
   150d4:	cmp	w0, #0x0
   150d8:	b.eq	150e4 <elf_update@@ELFUTILS_1.0+0x162c>  // b.none
   150dc:	mov	x0, #0xffffffffffffffff    	// #-1
   150e0:	b	15d2c <elf_update@@ELFUTILS_1.0+0x2274>
   150e4:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   150e8:	add	x0, x0, #0x3d0
   150ec:	ldr	x0, [x0, #240]
   150f0:	str	x0, [sp, #336]
   150f4:	ldr	x0, [sp, #40]
   150f8:	ldr	x0, [x0, #88]
   150fc:	cmp	x0, #0x0
   15100:	b.ne	1510c <elf_update@@ELFUTILS_1.0+0x1654>  // b.any
   15104:	ldr	x0, [sp, #40]
   15108:	bl	c104 <elf32_getphdr@@ELFUTILS_1.0+0x264>
   1510c:	ldr	x0, [sp, #40]
   15110:	ldr	x0, [x0, #88]
   15114:	cmp	x0, #0x0
   15118:	b.eq	15200 <elf_update@@ELFUTILS_1.0+0x1748>  // b.none
   1511c:	add	x0, sp, #0x38
   15120:	mov	x1, x0
   15124:	ldr	x0, [sp, #40]
   15128:	bl	1d2c0 <gelf_update_verdaux@@ELFUTILS_1.0+0xf4>
   1512c:	cmp	w0, #0x0
   15130:	cset	w0, ne  // ne = any
   15134:	and	w0, w0, #0xff
   15138:	and	x0, x0, #0xff
   1513c:	cmp	x0, #0x0
   15140:	b.eq	1514c <elf_update@@ELFUTILS_1.0+0x1694>  // b.none
   15144:	mov	x0, #0xffffffffffffffff    	// #-1
   15148:	b	15d2c <elf_update@@ELFUTILS_1.0+0x2274>
   1514c:	ldr	x0, [sp, #40]
   15150:	ldr	w0, [x0, #56]
   15154:	and	w0, w0, #0x4
   15158:	cmp	w0, #0x0
   1515c:	b.eq	15198 <elf_update@@ELFUTILS_1.0+0x16e0>  // b.none
   15160:	ldr	x0, [sp, #240]
   15164:	ldr	x1, [x0, #32]
   15168:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   1516c:	add	x0, x0, #0x3d0
   15170:	ldr	x2, [x0, #264]
   15174:	ldr	x0, [sp, #56]
   15178:	mul	x0, x2, x0
   1517c:	add	x0, x1, x0
   15180:	ldr	x2, [sp, #336]
   15184:	ldr	x1, [sp, #336]
   15188:	cmp	x2, x0
   1518c:	csel	x0, x1, x0, cs  // cs = hs, nlast
   15190:	str	x0, [sp, #336]
   15194:	b	15200 <elf_update@@ELFUTILS_1.0+0x1748>
   15198:	ldr	x0, [sp, #240]
   1519c:	add	x0, x0, #0x20
   151a0:	str	x0, [sp, #232]
   151a4:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   151a8:	add	x0, x0, #0x3d0
   151ac:	ldr	x0, [x0, #240]
   151b0:	str	x0, [sp, #224]
   151b4:	ldr	x0, [sp, #232]
   151b8:	ldr	x0, [x0]
   151bc:	ldr	x1, [sp, #224]
   151c0:	cmp	x1, x0
   151c4:	b.eq	151e0 <elf_update@@ELFUTILS_1.0+0x1728>  // b.none
   151c8:	ldr	x0, [sp, #232]
   151cc:	ldr	x1, [sp, #224]
   151d0:	str	x1, [x0]
   151d4:	ldr	w0, [sp, #344]
   151d8:	orr	w0, w0, #0x1
   151dc:	str	w0, [sp, #344]
   151e0:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   151e4:	add	x0, x0, #0x3d0
   151e8:	ldr	x1, [x0, #264]
   151ec:	ldr	x0, [sp, #56]
   151f0:	mul	x0, x1, x0
   151f4:	ldr	x1, [sp, #336]
   151f8:	add	x0, x1, x0
   151fc:	str	x0, [sp, #336]
   15200:	ldr	x0, [sp, #24]
   15204:	cmp	x0, #0x0
   15208:	b.eq	15d10 <elf_update@@ELFUTILS_1.0+0x2258>  // b.none
   1520c:	str	xzr, [sp, #328]
   15210:	mov	w0, #0x1                   	// #1
   15214:	strb	w0, [sp, #319]
   15218:	ldr	x0, [sp, #40]
   1521c:	ldr	w0, [x0, #200]
   15220:	cmp	w0, #0x0
   15224:	b.ne	15248 <elf_update@@ELFUTILS_1.0+0x1790>  // b.any
   15228:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   1522c:	add	x3, x0, #0xc68
   15230:	mov	w2, #0xb4                  	// #180
   15234:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   15238:	add	x1, x0, #0xbe0
   1523c:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   15240:	add	x0, x0, #0xbf8
   15244:	bl	33d0 <__assert_fail@plt>
   15248:	ldr	x1, [sp, #24]
   1524c:	mov	x0, #0xfeff                	// #65279
   15250:	cmp	x1, x0
   15254:	b.ls	152b0 <elf_update@@ELFUTILS_1.0+0x17f8>  // b.plast
   15258:	ldr	x0, [sp, #40]
   1525c:	add	x0, x0, #0xd8
   15260:	str	x0, [sp, #216]
   15264:	ldr	x0, [sp, #216]
   15268:	ldr	x0, [x0, #144]
   1526c:	add	x0, x0, #0x20
   15270:	str	x0, [sp, #208]
   15274:	ldr	x0, [sp, #24]
   15278:	str	x0, [sp, #200]
   1527c:	ldr	x0, [sp, #208]
   15280:	ldr	x0, [x0]
   15284:	ldr	x1, [sp, #200]
   15288:	cmp	x1, x0
   1528c:	b.eq	152b0 <elf_update@@ELFUTILS_1.0+0x17f8>  // b.none
   15290:	ldr	x0, [sp, #208]
   15294:	ldr	x1, [sp, #200]
   15298:	str	x1, [x0]
   1529c:	ldr	x0, [sp, #216]
   152a0:	ldr	w0, [x0, #152]
   152a4:	orr	w1, w0, #0x1
   152a8:	ldr	x0, [sp, #216]
   152ac:	str	w1, [x0, #152]
   152b0:	ldr	x0, [sp, #40]
   152b4:	add	x0, x0, #0xc8
   152b8:	str	x0, [sp, #320]
   152bc:	ldr	x0, [sp, #320]
   152c0:	ldr	w0, [x0]
   152c4:	cmp	w0, #0x1
   152c8:	b.ls	152dc <elf_update@@ELFUTILS_1.0+0x1824>  // b.plast
   152cc:	ldr	x0, [sp, #320]
   152d0:	add	x0, x0, #0xe0
   152d4:	str	x0, [sp, #328]
   152d8:	b	152fc <elf_update@@ELFUTILS_1.0+0x1844>
   152dc:	ldr	x0, [sp, #320]
   152e0:	ldr	x0, [x0, #8]
   152e4:	cmp	x0, #0x0
   152e8:	b.eq	152fc <elf_update@@ELFUTILS_1.0+0x1844>  // b.none
   152ec:	ldr	x0, [sp, #320]
   152f0:	ldr	x0, [x0, #8]
   152f4:	add	x0, x0, #0x10
   152f8:	str	x0, [sp, #328]
   152fc:	ldr	x0, [sp, #328]
   15300:	cmp	x0, #0x0
   15304:	b.eq	15320 <elf_update@@ELFUTILS_1.0+0x1868>  // b.none
   15308:	ldr	x0, [sp, #328]
   1530c:	ldr	x0, [x0, #144]
   15310:	cmp	x0, #0x0
   15314:	b.ne	15320 <elf_update@@ELFUTILS_1.0+0x1868>  // b.any
   15318:	ldr	x0, [sp, #328]
   1531c:	bl	10d9c <elf32_getshdr@@ELFUTILS_1.0+0xc30>
   15320:	ldrb	w0, [sp, #319]
   15324:	and	x0, x0, #0xff
   15328:	str	x0, [sp, #304]
   1532c:	b	15b80 <elf_update@@ELFUTILS_1.0+0x20c8>
   15330:	ldr	x1, [sp, #304]
   15334:	mov	x0, x1
   15338:	lsl	x0, x0, #1
   1533c:	add	x0, x0, x1
   15340:	lsl	x0, x0, #2
   15344:	add	x0, x0, x1
   15348:	lsl	x0, x0, #4
   1534c:	add	x0, x0, #0x10
   15350:	ldr	x1, [sp, #320]
   15354:	add	x0, x1, x0
   15358:	str	x0, [sp, #160]
   1535c:	ldr	x0, [sp, #160]
   15360:	ldr	x0, [x0, #144]
   15364:	str	x0, [sp, #152]
   15368:	str	xzr, [sp, #296]
   1536c:	ldr	x0, [sp, #152]
   15370:	cmp	x0, #0x0
   15374:	b.ne	15398 <elf_update@@ELFUTILS_1.0+0x18e0>  // b.any
   15378:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   1537c:	add	x3, x0, #0xc68
   15380:	mov	w2, #0xd6                  	// #214
   15384:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   15388:	add	x1, x0, #0xbe0
   1538c:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   15390:	add	x0, x0, #0xc28
   15394:	bl	33d0 <__assert_fail@plt>
   15398:	ldr	x0, [sp, #152]
   1539c:	ldr	x0, [x0, #56]
   153a0:	str	x0, [sp, #288]
   153a4:	ldr	x0, [sp, #152]
   153a8:	ldr	x0, [x0, #48]
   153ac:	cmp	x0, #0x0
   153b0:	b.ne	153b8 <elf_update@@ELFUTILS_1.0+0x1900>  // b.any
   153b4:	mov	x0, #0x1                   	// #1
   153b8:	str	x0, [sp, #280]
   153bc:	ldr	x0, [sp, #280]
   153c0:	sub	x1, x0, #0x1
   153c4:	ldr	x0, [sp, #280]
   153c8:	and	x0, x1, x0
   153cc:	cmp	x0, #0x0
   153d0:	cset	w0, ne  // ne = any
   153d4:	and	w0, w0, #0xff
   153d8:	and	x0, x0, #0xff
   153dc:	cmp	x0, #0x0
   153e0:	b.eq	153f4 <elf_update@@ELFUTILS_1.0+0x193c>  // b.none
   153e4:	mov	w0, #0x24                  	// #36
   153e8:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   153ec:	mov	x0, #0xffffffffffffffff    	// #-1
   153f0:	b	15d2c <elf_update@@ELFUTILS_1.0+0x2274>
   153f4:	ldr	x0, [sp, #152]
   153f8:	ldr	w0, [x0, #4]
   153fc:	mov	w1, #0xfffc                	// #65532
   15400:	movk	w1, #0x6fff, lsl #16
   15404:	cmp	w0, w1
   15408:	b.eq	155a4 <elf_update@@ELFUTILS_1.0+0x1aec>  // b.none
   1540c:	mov	w1, #0xfffc                	// #65532
   15410:	movk	w1, #0x6fff, lsl #16
   15414:	cmp	w0, w1
   15418:	b.hi	155b8 <elf_update@@ELFUTILS_1.0+0x1b00>  // b.pmore
   1541c:	mov	w1, #0xfffa                	// #65530
   15420:	movk	w1, #0x6fff, lsl #16
   15424:	cmp	w0, w1
   15428:	b.eq	15590 <elf_update@@ELFUTILS_1.0+0x1ad8>  // b.none
   1542c:	mov	w1, #0xfffa                	// #65530
   15430:	movk	w1, #0x6fff, lsl #16
   15434:	cmp	w0, w1
   15438:	b.hi	155b8 <elf_update@@ELFUTILS_1.0+0x1b00>  // b.pmore
   1543c:	cmp	w0, #0x12
   15440:	b.eq	154f8 <elf_update@@ELFUTILS_1.0+0x1a40>  // b.none
   15444:	cmp	w0, #0x12
   15448:	b.hi	155b8 <elf_update@@ELFUTILS_1.0+0x1b00>  // b.pmore
   1544c:	cmp	w0, #0x11
   15450:	b.eq	154d8 <elf_update@@ELFUTILS_1.0+0x1a20>  // b.none
   15454:	cmp	w0, #0x11
   15458:	b.hi	155b8 <elf_update@@ELFUTILS_1.0+0x1b00>  // b.pmore
   1545c:	cmp	w0, #0xb
   15460:	b.eq	1557c <elf_update@@ELFUTILS_1.0+0x1ac4>  // b.none
   15464:	cmp	w0, #0xb
   15468:	b.hi	155b8 <elf_update@@ELFUTILS_1.0+0x1b00>  // b.pmore
   1546c:	cmp	w0, #0x9
   15470:	b.eq	15568 <elf_update@@ELFUTILS_1.0+0x1ab0>  // b.none
   15474:	cmp	w0, #0x9
   15478:	b.hi	155b8 <elf_update@@ELFUTILS_1.0+0x1b00>  // b.pmore
   1547c:	cmp	w0, #0x6
   15480:	b.eq	15554 <elf_update@@ELFUTILS_1.0+0x1a9c>  // b.none
   15484:	cmp	w0, #0x6
   15488:	b.hi	155b8 <elf_update@@ELFUTILS_1.0+0x1b00>  // b.pmore
   1548c:	cmp	w0, #0x5
   15490:	b.eq	1550c <elf_update@@ELFUTILS_1.0+0x1a54>  // b.none
   15494:	cmp	w0, #0x5
   15498:	b.hi	155b8 <elf_update@@ELFUTILS_1.0+0x1b00>  // b.pmore
   1549c:	cmp	w0, #0x2
   154a0:	b.eq	154b0 <elf_update@@ELFUTILS_1.0+0x19f8>  // b.none
   154a4:	cmp	w0, #0x4
   154a8:	b.eq	154c4 <elf_update@@ELFUTILS_1.0+0x1a0c>  // b.none
   154ac:	b	155b8 <elf_update@@ELFUTILS_1.0+0x1b00>
   154b0:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   154b4:	add	x0, x0, #0x3d0
   154b8:	ldr	x0, [x0, #304]
   154bc:	str	x0, [sp, #288]
   154c0:	b	155bc <elf_update@@ELFUTILS_1.0+0x1b04>
   154c4:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   154c8:	add	x0, x0, #0x3d0
   154cc:	ldr	x0, [x0, #272]
   154d0:	str	x0, [sp, #288]
   154d4:	b	155bc <elf_update@@ELFUTILS_1.0+0x1b04>
   154d8:	ldr	x0, [sp, #240]
   154dc:	ldrh	w0, [x0, #16]
   154e0:	cmp	w0, #0x1
   154e4:	b.eq	154f8 <elf_update@@ELFUTILS_1.0+0x1a40>  // b.none
   154e8:	mov	w0, #0x28                  	// #40
   154ec:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   154f0:	mov	x0, #0xffffffffffffffff    	// #-1
   154f4:	b	15d2c <elf_update@@ELFUTILS_1.0+0x2274>
   154f8:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   154fc:	add	x0, x0, #0x3d0
   15500:	ldr	x0, [x0, #96]
   15504:	str	x0, [sp, #288]
   15508:	b	155bc <elf_update@@ELFUTILS_1.0+0x1b04>
   1550c:	ldr	x0, [sp, #240]
   15510:	ldrh	w1, [x0, #18]
   15514:	mov	w0, #0x9026                	// #36902
   15518:	cmp	w1, w0
   1551c:	b.eq	15540 <elf_update@@ELFUTILS_1.0+0x1a88>  // b.none
   15520:	ldr	x0, [sp, #240]
   15524:	ldrh	w0, [x0, #18]
   15528:	cmp	w0, #0x16
   1552c:	b.ne	15548 <elf_update@@ELFUTILS_1.0+0x1a90>  // b.any
   15530:	ldr	x0, [sp, #240]
   15534:	ldrb	w0, [x0, #4]
   15538:	cmp	w0, #0x2
   1553c:	b.ne	15548 <elf_update@@ELFUTILS_1.0+0x1a90>  // b.any
   15540:	mov	x0, #0x8                   	// #8
   15544:	b	1554c <elf_update@@ELFUTILS_1.0+0x1a94>
   15548:	mov	x0, #0x4                   	// #4
   1554c:	str	x0, [sp, #288]
   15550:	b	155bc <elf_update@@ELFUTILS_1.0+0x1b04>
   15554:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   15558:	add	x0, x0, #0x3d0
   1555c:	ldr	x0, [x0, #232]
   15560:	str	x0, [sp, #288]
   15564:	b	155bc <elf_update@@ELFUTILS_1.0+0x1b04>
   15568:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   1556c:	add	x0, x0, #0x3d0
   15570:	ldr	x0, [x0, #280]
   15574:	str	x0, [sp, #288]
   15578:	b	155bc <elf_update@@ELFUTILS_1.0+0x1b04>
   1557c:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   15580:	add	x0, x0, #0x3d0
   15584:	ldr	x0, [x0, #304]
   15588:	str	x0, [sp, #288]
   1558c:	b	155bc <elf_update@@ELFUTILS_1.0+0x1b04>
   15590:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   15594:	add	x0, x0, #0x3d0
   15598:	ldr	x0, [x0, #384]
   1559c:	str	x0, [sp, #288]
   155a0:	b	155bc <elf_update@@ELFUTILS_1.0+0x1b04>
   155a4:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   155a8:	add	x0, x0, #0x3d0
   155ac:	ldr	x0, [x0, #376]
   155b0:	str	x0, [sp, #288]
   155b4:	b	155bc <elf_update@@ELFUTILS_1.0+0x1b04>
   155b8:	nop
   155bc:	ldr	x0, [sp, #152]
   155c0:	add	x0, x0, #0x38
   155c4:	str	x0, [sp, #144]
   155c8:	ldr	x0, [sp, #288]
   155cc:	str	x0, [sp, #136]
   155d0:	ldr	x0, [sp, #144]
   155d4:	ldr	x0, [x0]
   155d8:	ldr	x1, [sp, #136]
   155dc:	cmp	x1, x0
   155e0:	b.eq	15604 <elf_update@@ELFUTILS_1.0+0x1b4c>  // b.none
   155e4:	ldr	x0, [sp, #144]
   155e8:	ldr	x1, [sp, #136]
   155ec:	str	x1, [x0]
   155f0:	ldr	x0, [sp, #160]
   155f4:	ldr	w0, [x0, #152]
   155f8:	orr	w1, w0, #0x1
   155fc:	ldr	x0, [sp, #160]
   15600:	str	w1, [x0, #152]
   15604:	ldr	x0, [sp, #160]
   15608:	ldr	w0, [x0, #120]
   1560c:	cmp	w0, #0x0
   15610:	b.ne	1562c <elf_update@@ELFUTILS_1.0+0x1b74>  // b.any
   15614:	ldr	x0, [sp, #160]
   15618:	bl	11e24 <elf_rawdata@@ELFUTILS_1.0+0x634>
   1561c:	cmp	w0, #0x0
   15620:	b.eq	1562c <elf_update@@ELFUTILS_1.0+0x1b74>  // b.none
   15624:	mov	x0, #0xffffffffffffffff    	// #-1
   15628:	b	15d2c <elf_update@@ELFUTILS_1.0+0x2274>
   1562c:	ldr	x2, [sp, #320]
   15630:	ldr	x1, [sp, #304]
   15634:	mov	x0, x1
   15638:	lsl	x0, x0, #1
   1563c:	add	x0, x0, x1
   15640:	lsl	x0, x0, #2
   15644:	add	x0, x0, x1
   15648:	lsl	x0, x0, #4
   1564c:	add	x0, x2, x0
   15650:	ldr	x0, [x0, #80]
   15654:	cmp	x0, #0x0
   15658:	b.eq	1582c <elf_update@@ELFUTILS_1.0+0x1d74>  // b.none
   1565c:	ldr	x0, [sp, #160]
   15660:	str	x0, [sp, #272]
   15664:	b	1581c <elf_update@@ELFUTILS_1.0+0x1d64>
   15668:	ldr	x0, [sp, #272]
   1566c:	str	x0, [sp, #264]
   15670:	ldr	x0, [sp, #160]
   15674:	ldr	x1, [sp, #272]
   15678:	cmp	x1, x0
   1567c:	b.ne	156ac <elf_update@@ELFUTILS_1.0+0x1bf4>  // b.any
   15680:	ldr	x0, [sp, #264]
   15684:	ldr	x0, [x0]
   15688:	cmp	x0, #0x0
   1568c:	b.ne	156ac <elf_update@@ELFUTILS_1.0+0x1bf4>  // b.any
   15690:	ldr	x0, [sp, #160]
   15694:	ldr	x0, [x0, #72]
   15698:	cmp	x0, #0x0
   1569c:	b.eq	156ac <elf_update@@ELFUTILS_1.0+0x1bf4>  // b.none
   156a0:	ldr	x0, [sp, #160]
   156a4:	add	x0, x0, #0x48
   156a8:	str	x0, [sp, #264]
   156ac:	ldr	x0, [sp, #264]
   156b0:	ldr	w0, [x0, #12]
   156b4:	cmp	w0, #0x1
   156b8:	cset	w0, ne  // ne = any
   156bc:	and	w0, w0, #0xff
   156c0:	and	x0, x0, #0xff
   156c4:	cmp	x0, #0x0
   156c8:	b.eq	156dc <elf_update@@ELFUTILS_1.0+0x1c24>  // b.none
   156cc:	mov	w0, #0x2                   	// #2
   156d0:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   156d4:	mov	x0, #0xffffffffffffffff    	// #-1
   156d8:	b	15d2c <elf_update@@ELFUTILS_1.0+0x2274>
   156dc:	ldr	x0, [sp, #264]
   156e0:	ldr	x0, [x0, #32]
   156e4:	sub	x1, x0, #0x1
   156e8:	ldr	x0, [sp, #264]
   156ec:	ldr	x0, [x0, #32]
   156f0:	and	x0, x1, x0
   156f4:	cmp	x0, #0x0
   156f8:	cset	w0, ne  // ne = any
   156fc:	and	w0, w0, #0xff
   15700:	and	x0, x0, #0xff
   15704:	cmp	x0, #0x0
   15708:	b.eq	1571c <elf_update@@ELFUTILS_1.0+0x1c64>  // b.none
   1570c:	mov	w0, #0x24                  	// #36
   15710:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   15714:	mov	x0, #0xffffffffffffffff    	// #-1
   15718:	b	15d2c <elf_update@@ELFUTILS_1.0+0x2274>
   1571c:	ldr	x0, [sp, #264]
   15720:	ldr	x0, [x0, #32]
   15724:	ldr	x2, [sp, #280]
   15728:	ldr	x1, [sp, #280]
   1572c:	cmp	x2, x0
   15730:	csel	x0, x1, x0, cs  // cs = hs, nlast
   15734:	str	x0, [sp, #280]
   15738:	ldr	x0, [sp, #40]
   1573c:	ldr	w0, [x0, #56]
   15740:	and	w0, w0, #0x4
   15744:	cmp	w0, #0x0
   15748:	b.eq	15794 <elf_update@@ELFUTILS_1.0+0x1cdc>  // b.none
   1574c:	ldr	x0, [sp, #264]
   15750:	ldr	x0, [x0, #24]
   15754:	mov	x1, x0
   15758:	ldr	x0, [sp, #264]
   1575c:	ldr	x0, [x0, #16]
   15760:	add	x1, x1, x0
   15764:	ldr	x0, [sp, #152]
   15768:	ldr	x0, [x0, #32]
   1576c:	cmp	x1, x0
   15770:	cset	w0, hi  // hi = pmore
   15774:	and	w0, w0, #0xff
   15778:	and	x0, x0, #0xff
   1577c:	cmp	x0, #0x0
   15780:	b.eq	15810 <elf_update@@ELFUTILS_1.0+0x1d58>  // b.none
   15784:	mov	w0, #0x23                  	// #35
   15788:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1578c:	mov	x0, #0xffffffffffffffff    	// #-1
   15790:	b	15d2c <elf_update@@ELFUTILS_1.0+0x2274>
   15794:	ldr	x0, [sp, #264]
   15798:	ldr	x1, [x0, #32]
   1579c:	ldr	x0, [sp, #296]
   157a0:	add	x0, x1, x0
   157a4:	sub	x1, x0, #0x1
   157a8:	ldr	x0, [sp, #264]
   157ac:	ldr	x0, [x0, #32]
   157b0:	neg	x0, x0
   157b4:	and	x0, x1, x0
   157b8:	str	x0, [sp, #296]
   157bc:	ldr	x0, [sp, #264]
   157c0:	add	x0, x0, #0x18
   157c4:	str	x0, [sp, #128]
   157c8:	ldr	x0, [sp, #296]
   157cc:	str	x0, [sp, #120]
   157d0:	ldr	x0, [sp, #128]
   157d4:	ldr	x0, [x0]
   157d8:	ldr	x1, [sp, #120]
   157dc:	cmp	x1, x0
   157e0:	b.eq	157fc <elf_update@@ELFUTILS_1.0+0x1d44>  // b.none
   157e4:	ldr	x0, [sp, #128]
   157e8:	ldr	x1, [sp, #120]
   157ec:	str	x1, [x0]
   157f0:	ldr	w0, [sp, #348]
   157f4:	orr	w0, w0, #0x1
   157f8:	str	w0, [sp, #348]
   157fc:	ldr	x0, [sp, #264]
   15800:	ldr	x1, [x0, #16]
   15804:	ldr	x0, [sp, #296]
   15808:	add	x0, x1, x0
   1580c:	str	x0, [sp, #296]
   15810:	ldr	x0, [sp, #272]
   15814:	ldr	x0, [x0, #48]
   15818:	str	x0, [sp, #272]
   1581c:	ldr	x0, [sp, #272]
   15820:	cmp	x0, #0x0
   15824:	b.ne	15668 <elf_update@@ELFUTILS_1.0+0x1bb0>  // b.any
   15828:	b	15840 <elf_update@@ELFUTILS_1.0+0x1d88>
   1582c:	ldr	x0, [sp, #160]
   15830:	ldr	x1, [x0, #88]
   15834:	ldr	x0, [sp, #296]
   15838:	add	x0, x1, x0
   1583c:	str	x0, [sp, #296]
   15840:	ldr	x0, [sp, #40]
   15844:	ldr	w0, [x0, #56]
   15848:	and	w0, w0, #0x4
   1584c:	cmp	w0, #0x0
   15850:	b.eq	15900 <elf_update@@ELFUTILS_1.0+0x1e48>  // b.none
   15854:	ldr	x0, [sp, #152]
   15858:	ldr	w0, [x0, #4]
   1585c:	cmp	w0, #0x8
   15860:	b.eq	1587c <elf_update@@ELFUTILS_1.0+0x1dc4>  // b.none
   15864:	ldr	x0, [sp, #152]
   15868:	ldr	x1, [x0, #24]
   1586c:	ldr	x0, [sp, #152]
   15870:	ldr	x0, [x0, #32]
   15874:	add	x0, x1, x0
   15878:	b	15880 <elf_update@@ELFUTILS_1.0+0x1dc8>
   1587c:	mov	x0, #0x0                   	// #0
   15880:	ldr	x1, [sp, #336]
   15884:	cmp	x0, x1
   15888:	csel	x0, x0, x1, cs  // cs = hs, nlast
   1588c:	str	x0, [sp, #336]
   15890:	ldr	x0, [sp, #152]
   15894:	ldr	x0, [x0, #48]
   15898:	sub	x1, x0, #0x1
   1589c:	ldr	x0, [sp, #152]
   158a0:	ldr	x0, [x0, #48]
   158a4:	and	x0, x1, x0
   158a8:	cmp	x0, #0x0
   158ac:	cset	w0, ne  // ne = any
   158b0:	and	w0, w0, #0xff
   158b4:	and	x0, x0, #0xff
   158b8:	cmp	x0, #0x0
   158bc:	b.ne	158f0 <elf_update@@ELFUTILS_1.0+0x1e38>  // b.any
   158c0:	ldr	x0, [sp, #152]
   158c4:	ldr	x0, [x0, #48]
   158c8:	cmp	x0, #0x0
   158cc:	b.ne	158d4 <elf_update@@ELFUTILS_1.0+0x1e1c>  // b.any
   158d0:	mov	x0, #0x1                   	// #1
   158d4:	ldr	x1, [sp, #280]
   158d8:	cmp	x0, x1
   158dc:	cset	w0, cc  // cc = lo, ul, last
   158e0:	and	w0, w0, #0xff
   158e4:	and	x0, x0, #0xff
   158e8:	cmp	x0, #0x0
   158ec:	b.eq	15aa0 <elf_update@@ELFUTILS_1.0+0x1fe8>  // b.none
   158f0:	mov	w0, #0x24                  	// #36
   158f4:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   158f8:	mov	x0, #0xffffffffffffffff    	// #-1
   158fc:	b	15d2c <elf_update@@ELFUTILS_1.0+0x2274>
   15900:	ldr	x0, [sp, #152]
   15904:	add	x0, x0, #0x30
   15908:	str	x0, [sp, #112]
   1590c:	ldr	x0, [sp, #280]
   15910:	str	x0, [sp, #104]
   15914:	ldr	x0, [sp, #112]
   15918:	ldr	x0, [x0]
   1591c:	ldr	x1, [sp, #104]
   15920:	cmp	x1, x0
   15924:	b.eq	15948 <elf_update@@ELFUTILS_1.0+0x1e90>  // b.none
   15928:	ldr	x0, [sp, #112]
   1592c:	ldr	x1, [sp, #104]
   15930:	str	x1, [x0]
   15934:	ldr	x0, [sp, #160]
   15938:	ldr	w0, [x0, #152]
   1593c:	orr	w1, w0, #0x1
   15940:	ldr	x0, [sp, #160]
   15944:	str	w1, [x0, #152]
   15948:	ldr	x1, [sp, #336]
   1594c:	ldr	x0, [sp, #280]
   15950:	add	x0, x1, x0
   15954:	sub	x1, x0, #0x1
   15958:	ldr	x0, [sp, #280]
   1595c:	neg	x0, x0
   15960:	and	x0, x1, x0
   15964:	str	x0, [sp, #336]
   15968:	str	wzr, [sp, #260]
   1596c:	ldr	x0, [sp, #152]
   15970:	add	x0, x0, #0x18
   15974:	str	x0, [sp, #96]
   15978:	ldr	x0, [sp, #336]
   1597c:	str	x0, [sp, #88]
   15980:	ldr	x0, [sp, #96]
   15984:	ldr	x0, [x0]
   15988:	ldr	x1, [sp, #88]
   1598c:	cmp	x1, x0
   15990:	b.eq	159ac <elf_update@@ELFUTILS_1.0+0x1ef4>  // b.none
   15994:	ldr	x0, [sp, #96]
   15998:	ldr	x1, [sp, #88]
   1599c:	str	x1, [x0]
   159a0:	ldr	w0, [sp, #260]
   159a4:	orr	w0, w0, #0x1
   159a8:	str	w0, [sp, #260]
   159ac:	ldr	w1, [sp, #348]
   159b0:	ldr	w0, [sp, #260]
   159b4:	orr	w0, w1, w0
   159b8:	str	w0, [sp, #348]
   159bc:	ldr	w0, [sp, #260]
   159c0:	cmp	w0, #0x0
   159c4:	b.eq	159f4 <elf_update@@ELFUTILS_1.0+0x1f3c>  // b.none
   159c8:	ldr	x0, [sp, #160]
   159cc:	ldr	x0, [x0, #64]
   159d0:	cmp	x0, #0x0
   159d4:	b.ne	159f4 <elf_update@@ELFUTILS_1.0+0x1f3c>  // b.any
   159d8:	mov	x1, #0x0                   	// #0
   159dc:	ldr	x0, [sp, #160]
   159e0:	bl	125cc <elf_rawdata@@ELFUTILS_1.0+0xddc>
   159e4:	cmp	x0, #0x0
   159e8:	b.ne	159f4 <elf_update@@ELFUTILS_1.0+0x1f3c>  // b.any
   159ec:	mov	x0, #0xffffffffffffffff    	// #-1
   159f0:	b	15d2c <elf_update@@ELFUTILS_1.0+0x2274>
   159f4:	str	wzr, [sp, #256]
   159f8:	ldr	x0, [sp, #152]
   159fc:	add	x0, x0, #0x20
   15a00:	str	x0, [sp, #80]
   15a04:	ldr	x0, [sp, #296]
   15a08:	str	x0, [sp, #72]
   15a0c:	ldr	x0, [sp, #80]
   15a10:	ldr	x0, [x0]
   15a14:	ldr	x1, [sp, #72]
   15a18:	cmp	x1, x0
   15a1c:	b.eq	15a38 <elf_update@@ELFUTILS_1.0+0x1f80>  // b.none
   15a20:	ldr	x0, [sp, #80]
   15a24:	ldr	x1, [sp, #72]
   15a28:	str	x1, [x0]
   15a2c:	ldr	w0, [sp, #256]
   15a30:	orr	w0, w0, #0x1
   15a34:	str	w0, [sp, #256]
   15a38:	ldr	w1, [sp, #348]
   15a3c:	ldr	w0, [sp, #256]
   15a40:	orr	w0, w1, w0
   15a44:	str	w0, [sp, #348]
   15a48:	ldr	x0, [sp, #152]
   15a4c:	ldr	w0, [x0, #4]
   15a50:	cmp	w0, #0x8
   15a54:	b.eq	15a68 <elf_update@@ELFUTILS_1.0+0x1fb0>  // b.none
   15a58:	ldr	x0, [sp, #296]
   15a5c:	ldr	x1, [sp, #336]
   15a60:	add	x0, x1, x0
   15a64:	str	x0, [sp, #336]
   15a68:	ldr	x0, [sp, #160]
   15a6c:	ldr	w0, [x0, #152]
   15a70:	ldr	w2, [sp, #260]
   15a74:	ldr	w1, [sp, #256]
   15a78:	orr	w1, w2, w1
   15a7c:	orr	w1, w0, w1
   15a80:	ldr	x0, [sp, #160]
   15a84:	str	w1, [x0, #152]
   15a88:	ldr	x0, [sp, #160]
   15a8c:	ldr	w1, [x0, #156]
   15a90:	ldr	w0, [sp, #348]
   15a94:	orr	w1, w1, w0
   15a98:	ldr	x0, [sp, #160]
   15a9c:	str	w1, [x0, #156]
   15aa0:	ldr	x0, [sp, #152]
   15aa4:	ldr	x0, [x0, #56]
   15aa8:	cmp	x0, #0x0
   15aac:	b.eq	15b74 <elf_update@@ELFUTILS_1.0+0x20bc>  // b.none
   15ab0:	ldr	x0, [sp, #152]
   15ab4:	ldr	x0, [x0, #56]
   15ab8:	cmp	x0, #0x1
   15abc:	b.eq	15b74 <elf_update@@ELFUTILS_1.0+0x20bc>  // b.none
   15ac0:	ldr	x0, [sp, #40]
   15ac4:	ldr	w0, [x0, #56]
   15ac8:	and	w0, w0, #0x8
   15acc:	cmp	w0, #0x0
   15ad0:	b.ne	15b74 <elf_update@@ELFUTILS_1.0+0x20bc>  // b.any
   15ad4:	ldr	x0, [sp, #152]
   15ad8:	ldr	x0, [x0, #8]
   15adc:	and	x0, x0, #0x800
   15ae0:	cmp	x0, #0x0
   15ae4:	b.ne	15af8 <elf_update@@ELFUTILS_1.0+0x2040>  // b.any
   15ae8:	ldr	x0, [sp, #152]
   15aec:	ldr	x0, [x0, #32]
   15af0:	str	x0, [sp, #248]
   15af4:	b	15b34 <elf_update@@ELFUTILS_1.0+0x207c>
   15af8:	ldr	x0, [sp, #160]
   15afc:	bl	3210 <elf64_getchdr@plt>
   15b00:	str	x0, [sp, #64]
   15b04:	ldr	x0, [sp, #64]
   15b08:	cmp	x0, #0x0
   15b0c:	cset	w0, eq  // eq = none
   15b10:	and	w0, w0, #0xff
   15b14:	and	x0, x0, #0xff
   15b18:	cmp	x0, #0x0
   15b1c:	b.eq	15b28 <elf_update@@ELFUTILS_1.0+0x2070>  // b.none
   15b20:	mov	x0, #0xffffffffffffffff    	// #-1
   15b24:	b	15d2c <elf_update@@ELFUTILS_1.0+0x2274>
   15b28:	ldr	x0, [sp, #64]
   15b2c:	ldr	x0, [x0, #8]
   15b30:	str	x0, [sp, #248]
   15b34:	ldr	x0, [sp, #152]
   15b38:	ldr	x1, [x0, #56]
   15b3c:	ldr	x0, [sp, #248]
   15b40:	udiv	x2, x0, x1
   15b44:	mul	x1, x2, x1
   15b48:	sub	x0, x0, x1
   15b4c:	cmp	x0, #0x0
   15b50:	cset	w0, ne  // ne = any
   15b54:	and	w0, w0, #0xff
   15b58:	and	x0, x0, #0xff
   15b5c:	cmp	x0, #0x0
   15b60:	b.eq	15b74 <elf_update@@ELFUTILS_1.0+0x20bc>  // b.none
   15b64:	mov	w0, #0x25                  	// #37
   15b68:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   15b6c:	mov	x0, #0xffffffffffffffff    	// #-1
   15b70:	b	15d2c <elf_update@@ELFUTILS_1.0+0x2274>
   15b74:	ldr	x0, [sp, #304]
   15b78:	add	x0, x0, #0x1
   15b7c:	str	x0, [sp, #304]
   15b80:	ldr	x0, [sp, #320]
   15b84:	ldr	w0, [x0]
   15b88:	mov	w0, w0
   15b8c:	ldr	x1, [sp, #304]
   15b90:	cmp	x1, x0
   15b94:	b.cc	15330 <elf_update@@ELFUTILS_1.0+0x1878>  // b.lo, b.ul, b.last
   15b98:	ldr	x0, [sp, #320]
   15b9c:	ldr	x0, [x0, #8]
   15ba0:	cmp	x0, #0x0
   15ba4:	b.eq	15be0 <elf_update@@ELFUTILS_1.0+0x2128>  // b.none
   15ba8:	ldr	x0, [sp, #320]
   15bac:	ldr	w1, [x0]
   15bb0:	ldr	x0, [sp, #320]
   15bb4:	ldr	w0, [x0, #4]
   15bb8:	cmp	w1, w0
   15bbc:	b.eq	15be0 <elf_update@@ELFUTILS_1.0+0x2128>  // b.none
   15bc0:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   15bc4:	add	x3, x0, #0xc68
   15bc8:	mov	w2, #0x19b                 	// #411
   15bcc:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   15bd0:	add	x1, x0, #0xbe0
   15bd4:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   15bd8:	add	x0, x0, #0xc38
   15bdc:	bl	33d0 <__assert_fail@plt>
   15be0:	strb	wzr, [sp, #319]
   15be4:	ldr	x0, [sp, #320]
   15be8:	ldr	x0, [x0, #8]
   15bec:	str	x0, [sp, #320]
   15bf0:	ldr	x0, [sp, #320]
   15bf4:	cmp	x0, #0x0
   15bf8:	b.ne	15320 <elf_update@@ELFUTILS_1.0+0x1868>  // b.any
   15bfc:	ldr	x0, [sp, #240]
   15c00:	add	x0, x0, #0x3a
   15c04:	str	x0, [sp, #192]
   15c08:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   15c0c:	add	x0, x0, #0x3d0
   15c10:	ldr	x0, [x0, #288]
   15c14:	str	x0, [sp, #184]
   15c18:	ldr	x0, [sp, #192]
   15c1c:	ldrh	w0, [x0]
   15c20:	and	x0, x0, #0xffff
   15c24:	ldr	x1, [sp, #184]
   15c28:	cmp	x1, x0
   15c2c:	b.eq	15c4c <elf_update@@ELFUTILS_1.0+0x2194>  // b.none
   15c30:	ldr	x0, [sp, #184]
   15c34:	and	w1, w0, #0xffff
   15c38:	ldr	x0, [sp, #192]
   15c3c:	strh	w1, [x0]
   15c40:	ldr	w0, [sp, #344]
   15c44:	orr	w0, w0, #0x1
   15c48:	str	w0, [sp, #344]
   15c4c:	ldr	x0, [sp, #40]
   15c50:	ldr	w0, [x0, #56]
   15c54:	and	w0, w0, #0x4
   15c58:	cmp	w0, #0x0
   15c5c:	b.eq	15c98 <elf_update@@ELFUTILS_1.0+0x21e0>  // b.none
   15c60:	ldr	x0, [sp, #240]
   15c64:	ldr	x1, [x0, #40]
   15c68:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   15c6c:	add	x0, x0, #0x3d0
   15c70:	ldr	x2, [x0, #288]
   15c74:	ldr	x0, [sp, #24]
   15c78:	mul	x0, x2, x0
   15c7c:	add	x0, x1, x0
   15c80:	ldr	x2, [sp, #336]
   15c84:	ldr	x1, [sp, #336]
   15c88:	cmp	x2, x0
   15c8c:	csel	x0, x1, x0, cs  // cs = hs, nlast
   15c90:	str	x0, [sp, #336]
   15c94:	b	15d10 <elf_update@@ELFUTILS_1.0+0x2258>
   15c98:	ldr	x0, [sp, #336]
   15c9c:	add	x0, x0, #0x7
   15ca0:	and	x0, x0, #0xfffffffffffffff8
   15ca4:	str	x0, [sp, #336]
   15ca8:	ldr	x0, [sp, #240]
   15cac:	add	x0, x0, #0x28
   15cb0:	str	x0, [sp, #176]
   15cb4:	ldr	x0, [sp, #336]
   15cb8:	str	x0, [sp, #168]
   15cbc:	ldr	x0, [sp, #176]
   15cc0:	ldr	x0, [x0]
   15cc4:	ldr	x1, [sp, #168]
   15cc8:	cmp	x1, x0
   15ccc:	b.eq	15cf0 <elf_update@@ELFUTILS_1.0+0x2238>  // b.none
   15cd0:	ldr	x0, [sp, #176]
   15cd4:	ldr	x1, [sp, #168]
   15cd8:	str	x1, [x0]
   15cdc:	ldr	x0, [sp, #40]
   15ce0:	ldr	w0, [x0, #56]
   15ce4:	orr	w1, w0, #0x1
   15ce8:	ldr	x0, [sp, #40]
   15cec:	str	w1, [x0, #56]
   15cf0:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   15cf4:	add	x0, x0, #0x3d0
   15cf8:	ldr	x1, [x0, #288]
   15cfc:	ldr	x0, [sp, #24]
   15d00:	mul	x0, x1, x0
   15d04:	ldr	x1, [sp, #336]
   15d08:	add	x0, x1, x0
   15d0c:	str	x0, [sp, #336]
   15d10:	ldr	x0, [sp, #40]
   15d14:	ldr	w1, [x0, #116]
   15d18:	ldr	w0, [sp, #344]
   15d1c:	orr	w1, w1, w0
   15d20:	ldr	x0, [sp, #40]
   15d24:	str	w1, [x0, #116]
   15d28:	ldr	x0, [sp, #336]
   15d2c:	ldp	x29, x30, [sp], #352
   15d30:	ret
   15d34:	stp	x29, x30, [sp, #-80]!
   15d38:	mov	x29, sp
   15d3c:	str	w0, [sp, #44]
   15d40:	str	x1, [sp, #32]
   15d44:	str	x2, [sp, #24]
   15d48:	str	x3, [sp, #16]
   15d4c:	str	xzr, [sp, #72]
   15d50:	ldr	x0, [sp, #72]
   15d54:	ldr	x1, [sp, #32]
   15d58:	add	x4, x1, x0
   15d5c:	ldr	x0, [sp, #72]
   15d60:	ldr	x1, [sp, #24]
   15d64:	sub	x2, x1, x0
   15d68:	ldr	x1, [sp, #16]
   15d6c:	ldr	x0, [sp, #72]
   15d70:	add	x0, x1, x0
   15d74:	mov	x3, x0
   15d78:	mov	x1, x4
   15d7c:	ldr	w0, [sp, #44]
   15d80:	bl	32d0 <pwrite@plt>
   15d84:	str	x0, [sp, #64]
   15d88:	ldr	x0, [sp, #64]
   15d8c:	cmn	x0, #0x1
   15d90:	b.ne	15da4 <elf_update@@ELFUTILS_1.0+0x22ec>  // b.any
   15d94:	bl	33e0 <__errno_location@plt>
   15d98:	ldr	w0, [x0]
   15d9c:	cmp	w0, #0x4
   15da0:	b.eq	15d50 <elf_update@@ELFUTILS_1.0+0x2298>  // b.none
   15da4:	ldr	x0, [sp, #64]
   15da8:	str	x0, [sp, #56]
   15dac:	ldr	x0, [sp, #56]
   15db0:	cmp	x0, #0x0
   15db4:	b.gt	15dd4 <elf_update@@ELFUTILS_1.0+0x231c>
   15db8:	ldr	x0, [sp, #56]
   15dbc:	cmp	x0, #0x0
   15dc0:	b.ge	15dcc <elf_update@@ELFUTILS_1.0+0x2314>  // b.tcont
   15dc4:	ldr	x0, [sp, #56]
   15dc8:	b	15df8 <elf_update@@ELFUTILS_1.0+0x2340>
   15dcc:	ldr	x0, [sp, #72]
   15dd0:	b	15df8 <elf_update@@ELFUTILS_1.0+0x2340>
   15dd4:	ldr	x1, [sp, #72]
   15dd8:	ldr	x0, [sp, #56]
   15ddc:	add	x0, x1, x0
   15de0:	str	x0, [sp, #72]
   15de4:	ldr	x0, [sp, #72]
   15de8:	ldr	x1, [sp, #24]
   15dec:	cmp	x1, x0
   15df0:	b.hi	15d50 <elf_update@@ELFUTILS_1.0+0x2298>  // b.pmore
   15df4:	ldr	x0, [sp, #72]
   15df8:	ldp	x29, x30, [sp], #80
   15dfc:	ret
   15e00:	sub	sp, sp, #0x20
   15e04:	str	x0, [sp, #8]
   15e08:	str	x1, [sp]
   15e0c:	ldr	x0, [sp, #8]
   15e10:	str	x0, [sp, #24]
   15e14:	ldr	x0, [sp]
   15e18:	str	x0, [sp, #16]
   15e1c:	ldr	x0, [sp, #24]
   15e20:	ldr	x0, [x0]
   15e24:	ldr	x0, [x0, #144]
   15e28:	ldr	w1, [x0, #16]
   15e2c:	ldr	x0, [sp, #16]
   15e30:	ldr	x0, [x0]
   15e34:	ldr	x0, [x0, #144]
   15e38:	ldr	w0, [x0, #16]
   15e3c:	cmp	w1, w0
   15e40:	b.cs	15e4c <elf_update@@ELFUTILS_1.0+0x2394>  // b.hs, b.nlast
   15e44:	mov	w0, #0xffffffff            	// #-1
   15e48:	b	15f30 <elf_update@@ELFUTILS_1.0+0x2478>
   15e4c:	ldr	x0, [sp, #24]
   15e50:	ldr	x0, [x0]
   15e54:	ldr	x0, [x0, #144]
   15e58:	ldr	w1, [x0, #16]
   15e5c:	ldr	x0, [sp, #16]
   15e60:	ldr	x0, [x0]
   15e64:	ldr	x0, [x0, #144]
   15e68:	ldr	w0, [x0, #16]
   15e6c:	cmp	w1, w0
   15e70:	b.ls	15e7c <elf_update@@ELFUTILS_1.0+0x23c4>  // b.plast
   15e74:	mov	w0, #0x1                   	// #1
   15e78:	b	15f30 <elf_update@@ELFUTILS_1.0+0x2478>
   15e7c:	ldr	x0, [sp, #24]
   15e80:	ldr	x0, [x0]
   15e84:	ldr	x0, [x0, #144]
   15e88:	ldr	w1, [x0, #20]
   15e8c:	ldr	x0, [sp, #16]
   15e90:	ldr	x0, [x0]
   15e94:	ldr	x0, [x0, #144]
   15e98:	ldr	w0, [x0, #20]
   15e9c:	cmp	w1, w0
   15ea0:	b.cs	15eac <elf_update@@ELFUTILS_1.0+0x23f4>  // b.hs, b.nlast
   15ea4:	mov	w0, #0xffffffff            	// #-1
   15ea8:	b	15f30 <elf_update@@ELFUTILS_1.0+0x2478>
   15eac:	ldr	x0, [sp, #24]
   15eb0:	ldr	x0, [x0]
   15eb4:	ldr	x0, [x0, #144]
   15eb8:	ldr	w1, [x0, #20]
   15ebc:	ldr	x0, [sp, #16]
   15ec0:	ldr	x0, [x0]
   15ec4:	ldr	x0, [x0, #144]
   15ec8:	ldr	w0, [x0, #20]
   15ecc:	cmp	w1, w0
   15ed0:	b.ls	15edc <elf_update@@ELFUTILS_1.0+0x2424>  // b.plast
   15ed4:	mov	w0, #0x1                   	// #1
   15ed8:	b	15f30 <elf_update@@ELFUTILS_1.0+0x2478>
   15edc:	ldr	x0, [sp, #24]
   15ee0:	ldr	x0, [x0]
   15ee4:	ldr	x1, [x0, #128]
   15ee8:	ldr	x0, [sp, #16]
   15eec:	ldr	x0, [x0]
   15ef0:	ldr	x0, [x0, #128]
   15ef4:	cmp	x1, x0
   15ef8:	b.cs	15f04 <elf_update@@ELFUTILS_1.0+0x244c>  // b.hs, b.nlast
   15efc:	mov	w0, #0xffffffff            	// #-1
   15f00:	b	15f30 <elf_update@@ELFUTILS_1.0+0x2478>
   15f04:	ldr	x0, [sp, #24]
   15f08:	ldr	x0, [x0]
   15f0c:	ldr	x1, [x0, #128]
   15f10:	ldr	x0, [sp, #16]
   15f14:	ldr	x0, [x0]
   15f18:	ldr	x0, [x0, #128]
   15f1c:	cmp	x1, x0
   15f20:	b.ls	15f2c <elf_update@@ELFUTILS_1.0+0x2474>  // b.plast
   15f24:	mov	w0, #0x1                   	// #1
   15f28:	b	15f30 <elf_update@@ELFUTILS_1.0+0x2478>
   15f2c:	mov	w0, #0x0                   	// #0
   15f30:	add	sp, sp, #0x20
   15f34:	ret
   15f38:	stp	x29, x30, [sp, #-48]!
   15f3c:	mov	x29, sp
   15f40:	str	x0, [sp, #24]
   15f44:	str	x1, [sp, #16]
   15f48:	ldr	x0, [sp, #24]
   15f4c:	str	x0, [sp, #40]
   15f50:	str	xzr, [sp, #32]
   15f54:	b	15f9c <elf_update@@ELFUTILS_1.0+0x24e4>
   15f58:	ldr	x2, [sp, #40]
   15f5c:	add	x0, x2, #0x8
   15f60:	str	x0, [sp, #40]
   15f64:	ldr	x1, [sp, #32]
   15f68:	mov	x0, x1
   15f6c:	lsl	x0, x0, #1
   15f70:	add	x0, x0, x1
   15f74:	lsl	x0, x0, #2
   15f78:	add	x0, x0, x1
   15f7c:	lsl	x0, x0, #4
   15f80:	add	x0, x0, #0x10
   15f84:	ldr	x1, [sp, #16]
   15f88:	add	x0, x1, x0
   15f8c:	str	x0, [x2]
   15f90:	ldr	x0, [sp, #32]
   15f94:	add	x0, x0, #0x1
   15f98:	str	x0, [sp, #32]
   15f9c:	ldr	x0, [sp, #16]
   15fa0:	ldr	w0, [x0]
   15fa4:	mov	w0, w0
   15fa8:	ldr	x1, [sp, #32]
   15fac:	cmp	x1, x0
   15fb0:	b.cc	15f58 <elf_update@@ELFUTILS_1.0+0x24a0>  // b.lo, b.ul, b.last
   15fb4:	ldr	x0, [sp, #16]
   15fb8:	ldr	x0, [x0, #8]
   15fbc:	str	x0, [sp, #16]
   15fc0:	ldr	x0, [sp, #16]
   15fc4:	cmp	x0, #0x0
   15fc8:	b.ne	15f50 <elf_update@@ELFUTILS_1.0+0x2498>  // b.any
   15fcc:	ldr	x1, [sp, #40]
   15fd0:	ldr	x0, [sp, #24]
   15fd4:	sub	x0, x1, x0
   15fd8:	asr	x0, x0, #3
   15fdc:	mov	x1, x0
   15fe0:	adrp	x0, 15000 <elf_update@@ELFUTILS_1.0+0x1548>
   15fe4:	add	x3, x0, #0xe00
   15fe8:	mov	x2, #0x8                   	// #8
   15fec:	ldr	x0, [sp, #24]
   15ff0:	bl	3130 <qsort@plt>
   15ff4:	nop
   15ff8:	ldp	x29, x30, [sp], #48
   15ffc:	ret
   16000:	stp	x29, x30, [sp, #-80]!
   16004:	mov	x29, sp
   16008:	str	x0, [sp, #56]
   1600c:	str	x1, [sp, #48]
   16010:	str	x2, [sp, #40]
   16014:	str	x3, [sp, #32]
   16018:	str	x4, [sp, #24]
   1601c:	str	xzr, [sp, #72]
   16020:	ldr	x1, [sp, #48]
   16024:	ldr	x0, [sp, #32]
   16028:	cmp	x1, x0
   1602c:	b.cs	1608c <elf_update@@ELFUTILS_1.0+0x25d4>  // b.hs, b.nlast
   16030:	ldr	x1, [sp, #40]
   16034:	ldr	x0, [sp, #56]
   16038:	add	x0, x1, x0
   1603c:	ldr	x1, [sp, #32]
   16040:	cmp	x1, x0
   16044:	b.ls	16060 <elf_update@@ELFUTILS_1.0+0x25a8>  // b.plast
   16048:	ldr	x1, [sp, #40]
   1604c:	ldr	x0, [sp, #56]
   16050:	add	x1, x1, x0
   16054:	ldr	x0, [sp, #48]
   16058:	sub	x0, x1, x0
   1605c:	b	1606c <elf_update@@ELFUTILS_1.0+0x25b4>
   16060:	ldr	x1, [sp, #32]
   16064:	ldr	x0, [sp, #48]
   16068:	sub	x0, x1, x0
   1606c:	str	x0, [sp, #72]
   16070:	adrp	x0, 36000 <elf_compress_gnu@@ELFUTILS_1.7+0x1595c>
   16074:	add	x0, x0, #0x1c8
   16078:	ldr	w0, [x0]
   1607c:	ldr	x2, [sp, #72]
   16080:	mov	w1, w0
   16084:	ldr	x0, [sp, #48]
   16088:	bl	3180 <memset@plt>
   1608c:	ldr	x1, [sp, #48]
   16090:	ldr	x0, [sp, #72]
   16094:	add	x1, x1, x0
   16098:	ldr	x2, [sp, #40]
   1609c:	ldr	x0, [sp, #56]
   160a0:	add	x0, x2, x0
   160a4:	cmp	x1, x0
   160a8:	b.eq	1610c <elf_update@@ELFUTILS_1.0+0x2654>  // b.none
   160ac:	ldr	x1, [sp, #40]
   160b0:	ldr	x0, [sp, #56]
   160b4:	add	x0, x1, x0
   160b8:	ldr	x1, [sp, #24]
   160bc:	cmp	x1, x0
   160c0:	b.cs	1610c <elf_update@@ELFUTILS_1.0+0x2654>  // b.hs, b.nlast
   160c4:	ldr	x0, [sp, #24]
   160c8:	ldr	x2, [sp, #40]
   160cc:	ldr	x1, [sp, #40]
   160d0:	cmp	x2, x0
   160d4:	csel	x0, x1, x0, cs  // cs = hs, nlast
   160d8:	str	x0, [sp, #64]
   160dc:	adrp	x0, 36000 <elf_compress_gnu@@ELFUTILS_1.7+0x1595c>
   160e0:	add	x0, x0, #0x1c8
   160e4:	ldr	w3, [x0]
   160e8:	ldr	x1, [sp, #40]
   160ec:	ldr	x0, [sp, #56]
   160f0:	add	x1, x1, x0
   160f4:	ldr	x0, [sp, #64]
   160f8:	sub	x0, x1, x0
   160fc:	mov	x2, x0
   16100:	mov	w1, w3
   16104:	ldr	x0, [sp, #64]
   16108:	bl	3180 <memset@plt>
   1610c:	nop
   16110:	ldp	x29, x30, [sp], #80
   16114:	ret
   16118:	stp	x29, x30, [sp, #-272]!
   1611c:	mov	x29, sp
   16120:	stp	x19, x20, [sp, #16]
   16124:	str	x0, [sp, #56]
   16128:	str	w1, [sp, #52]
   1612c:	str	x2, [sp, #40]
   16130:	strb	wzr, [sp, #271]
   16134:	ldr	x0, [sp, #56]
   16138:	ldr	x0, [x0, #72]
   1613c:	str	x0, [sp, #208]
   16140:	ldr	x0, [sp, #56]
   16144:	ldr	w1, [x0, #116]
   16148:	ldr	x0, [sp, #56]
   1614c:	ldr	w0, [x0, #56]
   16150:	orr	w0, w1, w0
   16154:	and	w0, w0, #0x1
   16158:	cmp	w0, #0x0
   1615c:	b.eq	1624c <elf_update@@ELFUTILS_1.0+0x2794>  // b.none
   16160:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   16164:	add	x0, x0, #0x3d0
   16168:	ldr	x0, [x0, #24]
   1616c:	cmp	x0, #0x34
   16170:	b.eq	16194 <elf_update@@ELFUTILS_1.0+0x26dc>  // b.none
   16174:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   16178:	add	x3, x0, #0xf00
   1617c:	mov	w2, #0x8c                  	// #140
   16180:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   16184:	add	x1, x0, #0xc88
   16188:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   1618c:	add	x0, x0, #0xca0
   16190:	bl	33d0 <__assert_fail@plt>
   16194:	ldr	w0, [sp, #52]
   16198:	cmp	w0, #0x0
   1619c:	cset	w0, ne  // ne = any
   161a0:	and	w0, w0, #0xff
   161a4:	and	x0, x0, #0xff
   161a8:	cmp	x0, #0x0
   161ac:	b.eq	161e4 <elf_update@@ELFUTILS_1.0+0x272c>  // b.none
   161b0:	adrp	x0, 35000 <elf_compress_gnu@@ELFUTILS_1.7+0x1495c>
   161b4:	add	x0, x0, #0xbd8
   161b8:	ldr	x4, [x0, #24]
   161bc:	ldr	x0, [sp, #56]
   161c0:	ldr	x0, [x0]
   161c4:	ldr	x1, [sp, #56]
   161c8:	ldr	x1, [x1, #40]
   161cc:	add	x0, x0, x1
   161d0:	mov	w3, #0x1                   	// #1
   161d4:	mov	x2, #0x34                  	// #52
   161d8:	ldr	x1, [sp, #208]
   161dc:	blr	x4
   161e0:	b	16224 <elf_update@@ELFUTILS_1.0+0x276c>
   161e4:	ldr	x0, [sp, #56]
   161e8:	ldr	x0, [x0]
   161ec:	ldr	x1, [sp, #56]
   161f0:	ldr	x1, [x1, #40]
   161f4:	add	x0, x0, x1
   161f8:	ldr	x1, [sp, #208]
   161fc:	cmp	x1, x0
   16200:	b.eq	16224 <elf_update@@ELFUTILS_1.0+0x276c>  // b.none
   16204:	ldr	x0, [sp, #56]
   16208:	ldr	x0, [x0]
   1620c:	ldr	x1, [sp, #56]
   16210:	ldr	x1, [x1, #40]
   16214:	add	x0, x0, x1
   16218:	mov	x2, #0x34                  	// #52
   1621c:	ldr	x1, [sp, #208]
   16220:	bl	30a0 <memcpy@plt>
   16224:	ldr	x0, [sp, #56]
   16228:	ldr	w0, [x0, #116]
   1622c:	and	w1, w0, #0xfffffffe
   16230:	ldr	x0, [sp, #56]
   16234:	str	w1, [x0, #116]
   16238:	ldr	x0, [sp, #56]
   1623c:	ldr	x0, [x0, #88]
   16240:	cmp	x0, #0x0
   16244:	cset	w0, eq  // eq = none
   16248:	strb	w0, [sp, #271]
   1624c:	add	x0, sp, #0x48
   16250:	mov	x1, x0
   16254:	ldr	x0, [sp, #56]
   16258:	bl	1d2c0 <gelf_update_verdaux@@ELFUTILS_1.0+0xf4>
   1625c:	cmp	w0, #0x0
   16260:	cset	w0, ne  // ne = any
   16264:	and	w0, w0, #0xff
   16268:	and	x0, x0, #0xff
   1626c:	cmp	x0, #0x0
   16270:	b.eq	1627c <elf_update@@ELFUTILS_1.0+0x27c4>  // b.none
   16274:	mov	w0, #0xffffffff            	// #-1
   16278:	b	17070 <elf_update@@ELFUTILS_1.0+0x35b8>
   1627c:	ldr	x0, [sp, #56]
   16280:	ldr	x0, [x0, #88]
   16284:	cmp	x0, #0x0
   16288:	b.eq	16428 <elf_update@@ELFUTILS_1.0+0x2970>  // b.none
   1628c:	ldr	x0, [sp, #56]
   16290:	ldr	w1, [x0, #120]
   16294:	ldr	x0, [sp, #56]
   16298:	ldr	w0, [x0, #56]
   1629c:	orr	w0, w1, w0
   162a0:	and	w0, w0, #0x1
   162a4:	cmp	w0, #0x0
   162a8:	b.eq	16428 <elf_update@@ELFUTILS_1.0+0x2970>  // b.none
   162ac:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   162b0:	add	x0, x0, #0x3d0
   162b4:	ldr	x0, [x0, #48]
   162b8:	cmp	x0, #0x20
   162bc:	b.eq	162e0 <elf_update@@ELFUTILS_1.0+0x2828>  // b.none
   162c0:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   162c4:	add	x3, x0, #0xf00
   162c8:	mov	w2, #0xaf                  	// #175
   162cc:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   162d0:	add	x1, x0, #0xc88
   162d4:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   162d8:	add	x0, x0, #0xcf0
   162dc:	bl	33d0 <__assert_fail@plt>
   162e0:	ldr	x0, [sp, #208]
   162e4:	ldr	w0, [x0, #28]
   162e8:	ldr	x1, [sp, #208]
   162ec:	ldrh	w1, [x1, #40]
   162f0:	cmp	w0, w1
   162f4:	b.ls	16354 <elf_update@@ELFUTILS_1.0+0x289c>  // b.plast
   162f8:	ldr	x0, [sp, #56]
   162fc:	ldr	x1, [x0]
   16300:	ldr	x0, [sp, #56]
   16304:	ldr	x0, [x0, #40]
   16308:	mov	x2, x0
   1630c:	ldr	x0, [sp, #208]
   16310:	ldrh	w0, [x0, #40]
   16314:	and	x0, x0, #0xffff
   16318:	add	x0, x2, x0
   1631c:	add	x3, x1, x0
   16320:	adrp	x0, 36000 <elf_compress_gnu@@ELFUTILS_1.7+0x1595c>
   16324:	add	x0, x0, #0x1c8
   16328:	ldr	w4, [x0]
   1632c:	ldr	x0, [sp, #208]
   16330:	ldr	w0, [x0, #28]
   16334:	ldr	x1, [sp, #208]
   16338:	ldrh	w1, [x1, #40]
   1633c:	sub	w0, w0, w1
   16340:	mov	w0, w0
   16344:	mov	x2, x0
   16348:	mov	w1, w4
   1634c:	mov	x0, x3
   16350:	bl	3180 <memset@plt>
   16354:	ldr	w0, [sp, #52]
   16358:	cmp	w0, #0x0
   1635c:	cset	w0, ne  // ne = any
   16360:	and	w0, w0, #0xff
   16364:	and	x0, x0, #0xff
   16368:	cmp	x0, #0x0
   1636c:	b.eq	163c8 <elf_update@@ELFUTILS_1.0+0x2910>  // b.none
   16370:	adrp	x0, 35000 <elf_compress_gnu@@ELFUTILS_1.7+0x1495c>
   16374:	add	x0, x0, #0xbd8
   16378:	ldr	x4, [x0, #48]
   1637c:	ldr	x0, [sp, #56]
   16380:	ldr	x1, [x0]
   16384:	ldr	x0, [sp, #56]
   16388:	ldr	x0, [x0, #40]
   1638c:	mov	x2, x0
   16390:	ldr	x0, [sp, #208]
   16394:	ldr	w0, [x0, #28]
   16398:	mov	w0, w0
   1639c:	add	x0, x2, x0
   163a0:	add	x5, x1, x0
   163a4:	ldr	x0, [sp, #56]
   163a8:	ldr	x1, [x0, #88]
   163ac:	ldr	x0, [sp, #72]
   163b0:	lsl	x0, x0, #5
   163b4:	mov	w3, #0x1                   	// #1
   163b8:	mov	x2, x0
   163bc:	mov	x0, x5
   163c0:	blr	x4
   163c4:	b	1640c <elf_update@@ELFUTILS_1.0+0x2954>
   163c8:	ldr	x0, [sp, #56]
   163cc:	ldr	x1, [x0]
   163d0:	ldr	x0, [sp, #56]
   163d4:	ldr	x0, [x0, #40]
   163d8:	mov	x2, x0
   163dc:	ldr	x0, [sp, #208]
   163e0:	ldr	w0, [x0, #28]
   163e4:	mov	w0, w0
   163e8:	add	x0, x2, x0
   163ec:	add	x3, x1, x0
   163f0:	ldr	x0, [sp, #56]
   163f4:	ldr	x1, [x0, #88]
   163f8:	ldr	x0, [sp, #72]
   163fc:	lsl	x0, x0, #5
   16400:	mov	x2, x0
   16404:	mov	x0, x3
   16408:	bl	30b0 <memmove@plt>
   1640c:	ldr	x0, [sp, #56]
   16410:	ldr	w0, [x0, #120]
   16414:	and	w1, w0, #0xfffffffe
   16418:	ldr	x0, [sp, #56]
   1641c:	str	w1, [x0, #120]
   16420:	mov	w0, #0x1                   	// #1
   16424:	strb	w0, [sp, #271]
   16428:	ldr	x0, [sp, #56]
   1642c:	ldr	x2, [x0]
   16430:	ldr	x0, [sp, #56]
   16434:	ldr	x0, [x0, #40]
   16438:	mov	x3, x0
   1643c:	ldr	x0, [sp, #208]
   16440:	ldr	w0, [x0, #28]
   16444:	mov	w1, w0
   16448:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   1644c:	add	x0, x0, #0x3d0
   16450:	ldr	x0, [x0, #24]
   16454:	cmp	x1, x0
   16458:	csel	x0, x1, x0, cs  // cs = hs, nlast
   1645c:	add	x1, x3, x0
   16460:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   16464:	add	x0, x0, #0x3d0
   16468:	ldr	x3, [x0, #48]
   1646c:	ldr	x0, [sp, #72]
   16470:	mul	x0, x3, x0
   16474:	add	x0, x1, x0
   16478:	add	x0, x2, x0
   1647c:	str	x0, [sp, #256]
   16480:	ldr	x0, [sp, #40]
   16484:	cmp	x0, #0x0
   16488:	b.eq	16fcc <elf_update@@ELFUTILS_1.0+0x3514>  // b.none
   1648c:	ldr	x1, [sp, #40]
   16490:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   16494:	cmp	x1, x0
   16498:	cset	w0, hi  // hi = pmore
   1649c:	and	w0, w0, #0xff
   164a0:	and	x0, x0, #0xff
   164a4:	cmp	x0, #0x0
   164a8:	b.eq	164b4 <elf_update@@ELFUTILS_1.0+0x29fc>  // b.none
   164ac:	mov	w0, #0x1                   	// #1
   164b0:	b	17070 <elf_update@@ELFUTILS_1.0+0x35b8>
   164b4:	ldr	x0, [sp, #56]
   164b8:	add	x0, x0, #0xc8
   164bc:	str	x0, [sp, #200]
   164c0:	ldr	x0, [sp, #40]
   164c4:	lsl	x0, x0, #3
   164c8:	bl	3140 <malloc@plt>
   164cc:	str	x0, [sp, #192]
   164d0:	ldr	x0, [sp, #192]
   164d4:	cmp	x0, #0x0
   164d8:	cset	w0, eq  // eq = none
   164dc:	and	w0, w0, #0xff
   164e0:	and	x0, x0, #0xff
   164e4:	cmp	x0, #0x0
   164e8:	b.eq	164fc <elf_update@@ELFUTILS_1.0+0x2a44>  // b.none
   164ec:	mov	w0, #0x8                   	// #8
   164f0:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   164f4:	mov	w0, #0xffffffff            	// #-1
   164f8:	b	17070 <elf_update@@ELFUTILS_1.0+0x35b8>
   164fc:	ldr	x0, [sp, #56]
   16500:	ldr	x1, [x0]
   16504:	ldr	x0, [sp, #56]
   16508:	ldr	x0, [x0, #40]
   1650c:	mov	x2, x0
   16510:	ldr	x0, [sp, #208]
   16514:	ldr	w0, [x0, #32]
   16518:	mov	w0, w0
   1651c:	add	x0, x2, x0
   16520:	add	x0, x1, x0
   16524:	str	x0, [sp, #184]
   16528:	ldr	x0, [sp, #208]
   1652c:	ldrh	w0, [x0, #46]
   16530:	and	x1, x0, #0xffff
   16534:	ldr	x0, [sp, #40]
   16538:	mul	x0, x1, x0
   1653c:	ldr	x1, [sp, #184]
   16540:	add	x0, x1, x0
   16544:	str	x0, [sp, #176]
   16548:	ldr	x1, [sp, #200]
   1654c:	ldr	x0, [sp, #192]
   16550:	bl	15f38 <elf_update@@ELFUTILS_1.0+0x2480>
   16554:	str	xzr, [sp, #248]
   16558:	b	167e4 <elf_update@@ELFUTILS_1.0+0x2d2c>
   1655c:	ldr	x0, [sp, #248]
   16560:	lsl	x0, x0, #3
   16564:	ldr	x1, [sp, #192]
   16568:	add	x0, x1, x0
   1656c:	ldr	x0, [x0]
   16570:	str	x0, [sp, #112]
   16574:	ldr	x0, [sp, #56]
   16578:	ldr	w0, [x0, #124]
   1657c:	cmp	w0, #0x0
   16580:	b.ne	166c8 <elf_update@@ELFUTILS_1.0+0x2c10>  // b.any
   16584:	ldr	x0, [sp, #112]
   16588:	ldr	w0, [x0, #152]
   1658c:	and	w0, w0, #0x80
   16590:	cmp	w0, #0x0
   16594:	b.ne	166c8 <elf_update@@ELFUTILS_1.0+0x2c10>  // b.any
   16598:	ldr	x0, [sp, #112]
   1659c:	ldr	x2, [x0, #144]
   165a0:	ldr	x0, [sp, #112]
   165a4:	ldr	x1, [x0, #128]
   165a8:	mov	x0, x1
   165ac:	lsl	x0, x0, #2
   165b0:	add	x0, x0, x1
   165b4:	lsl	x0, x0, #3
   165b8:	mov	x1, x0
   165bc:	ldr	x0, [sp, #184]
   165c0:	add	x0, x0, x1
   165c4:	cmp	x2, x0
   165c8:	b.eq	166c8 <elf_update@@ELFUTILS_1.0+0x2c10>  // b.none
   165cc:	ldr	x0, [sp, #56]
   165d0:	ldr	x0, [x0]
   165d4:	ldr	x1, [sp, #56]
   165d8:	ldr	x1, [x1, #40]
   165dc:	add	x1, x0, x1
   165e0:	ldr	x0, [sp, #112]
   165e4:	ldr	x0, [x0, #144]
   165e8:	cmp	x1, x0
   165ec:	b.cc	16610 <elf_update@@ELFUTILS_1.0+0x2b58>  // b.lo, b.ul, b.last
   165f0:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   165f4:	add	x3, x0, #0xf00
   165f8:	mov	w2, #0xf8                  	// #248
   165fc:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   16600:	add	x1, x0, #0xc88
   16604:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   16608:	add	x0, x0, #0xd40
   1660c:	bl	33d0 <__assert_fail@plt>
   16610:	ldr	x0, [sp, #112]
   16614:	ldr	x1, [x0, #144]
   16618:	ldr	x0, [sp, #56]
   1661c:	ldr	x2, [x0]
   16620:	ldr	x0, [sp, #56]
   16624:	ldr	x0, [x0, #40]
   16628:	mov	x3, x0
   1662c:	ldr	x0, [sp, #56]
   16630:	ldr	x0, [x0, #48]
   16634:	add	x0, x3, x0
   16638:	add	x0, x2, x0
   1663c:	cmp	x1, x0
   16640:	b.cc	16664 <elf_update@@ELFUTILS_1.0+0x2bac>  // b.lo, b.ul, b.last
   16644:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   16648:	add	x3, x0, #0xf00
   1664c:	mov	w2, #0xfa                  	// #250
   16650:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   16654:	add	x1, x0, #0xc88
   16658:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   1665c:	add	x0, x0, #0xd98
   16660:	bl	33d0 <__assert_fail@plt>
   16664:	mov	x0, #0x28                  	// #40
   16668:	bl	3140 <malloc@plt>
   1666c:	str	x0, [sp, #104]
   16670:	ldr	x0, [sp, #104]
   16674:	cmp	x0, #0x0
   16678:	cset	w0, eq  // eq = none
   1667c:	and	w0, w0, #0xff
   16680:	and	x0, x0, #0xff
   16684:	cmp	x0, #0x0
   16688:	b.eq	166a4 <elf_update@@ELFUTILS_1.0+0x2bec>  // b.none
   1668c:	ldr	x0, [sp, #192]
   16690:	bl	32a0 <free@plt>
   16694:	mov	w0, #0x8                   	// #8
   16698:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1669c:	mov	w0, #0xffffffff            	// #-1
   166a0:	b	17070 <elf_update@@ELFUTILS_1.0+0x35b8>
   166a4:	ldr	x0, [sp, #112]
   166a8:	ldr	x0, [x0, #144]
   166ac:	mov	x2, #0x28                  	// #40
   166b0:	mov	x1, x0
   166b4:	ldr	x0, [sp, #104]
   166b8:	bl	30a0 <memcpy@plt>
   166bc:	mov	x1, x0
   166c0:	ldr	x0, [sp, #112]
   166c4:	str	x1, [x0, #144]
   166c8:	ldr	x0, [sp, #56]
   166cc:	ldr	x0, [x0]
   166d0:	ldr	x1, [sp, #56]
   166d4:	ldr	x1, [x1, #40]
   166d8:	add	x1, x0, x1
   166dc:	ldr	x0, [sp, #112]
   166e0:	ldr	x0, [x0]
   166e4:	cmp	x1, x0
   166e8:	b.hi	167d8 <elf_update@@ELFUTILS_1.0+0x2d20>  // b.pmore
   166ec:	ldr	x0, [sp, #112]
   166f0:	ldr	x1, [x0]
   166f4:	ldr	x0, [sp, #56]
   166f8:	ldr	x2, [x0]
   166fc:	ldr	x0, [sp, #56]
   16700:	ldr	x0, [x0, #40]
   16704:	mov	x3, x0
   16708:	ldr	x0, [sp, #56]
   1670c:	ldr	x0, [x0, #48]
   16710:	add	x0, x3, x0
   16714:	add	x0, x2, x0
   16718:	cmp	x1, x0
   1671c:	b.cs	167d8 <elf_update@@ELFUTILS_1.0+0x2d20>  // b.hs, b.nlast
   16720:	ldr	x0, [sp, #56]
   16724:	ldr	x1, [x0]
   16728:	ldr	x0, [sp, #56]
   1672c:	ldr	x0, [x0, #40]
   16730:	mov	x2, x0
   16734:	ldr	x0, [sp, #112]
   16738:	ldr	x0, [x0, #144]
   1673c:	ldr	w0, [x0, #16]
   16740:	mov	w0, w0
   16744:	add	x0, x2, x0
   16748:	add	x1, x1, x0
   1674c:	ldr	x0, [sp, #112]
   16750:	ldr	x0, [x0]
   16754:	cmp	x1, x0
   16758:	b.ls	167d8 <elf_update@@ELFUTILS_1.0+0x2d20>  // b.plast
   1675c:	ldr	x0, [sp, #112]
   16760:	ldr	x0, [x0, #16]
   16764:	bl	3140 <malloc@plt>
   16768:	str	x0, [sp, #96]
   1676c:	ldr	x0, [sp, #96]
   16770:	cmp	x0, #0x0
   16774:	cset	w0, eq  // eq = none
   16778:	and	w0, w0, #0xff
   1677c:	and	x0, x0, #0xff
   16780:	cmp	x0, #0x0
   16784:	b.eq	167a0 <elf_update@@ELFUTILS_1.0+0x2ce8>  // b.none
   16788:	ldr	x0, [sp, #192]
   1678c:	bl	32a0 <free@plt>
   16790:	mov	w0, #0x8                   	// #8
   16794:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   16798:	mov	w0, #0xffffffff            	// #-1
   1679c:	b	17070 <elf_update@@ELFUTILS_1.0+0x35b8>
   167a0:	ldr	x0, [sp, #112]
   167a4:	ldr	x1, [x0]
   167a8:	ldr	x0, [sp, #112]
   167ac:	ldr	x0, [x0, #16]
   167b0:	mov	x2, x0
   167b4:	ldr	x0, [sp, #96]
   167b8:	bl	30a0 <memcpy@plt>
   167bc:	mov	x1, x0
   167c0:	ldr	x0, [sp, #112]
   167c4:	str	x1, [x0, #168]
   167c8:	ldr	x0, [sp, #112]
   167cc:	ldr	x1, [x0, #168]
   167d0:	ldr	x0, [sp, #112]
   167d4:	str	x1, [x0]
   167d8:	ldr	x0, [sp, #248]
   167dc:	add	x0, x0, #0x1
   167e0:	str	x0, [sp, #248]
   167e4:	ldr	x1, [sp, #248]
   167e8:	ldr	x0, [sp, #40]
   167ec:	cmp	x1, x0
   167f0:	b.cc	1655c <elf_update@@ELFUTILS_1.0+0x2aa4>  // b.lo, b.ul, b.last
   167f4:	str	xzr, [sp, #240]
   167f8:	b	16d78 <elf_update@@ELFUTILS_1.0+0x32c0>
   167fc:	ldr	x0, [sp, #240]
   16800:	lsl	x0, x0, #3
   16804:	ldr	x1, [sp, #192]
   16808:	add	x0, x1, x0
   1680c:	ldr	x0, [x0]
   16810:	str	x0, [sp, #160]
   16814:	ldr	x0, [sp, #160]
   16818:	ldr	x0, [x0, #128]
   1681c:	cmp	x0, #0x0
   16820:	b.ne	16858 <elf_update@@ELFUTILS_1.0+0x2da0>  // b.any
   16824:	ldr	x0, [sp, #160]
   16828:	ldr	w0, [x0, #156]
   1682c:	and	w0, w0, #0x1
   16830:	cmp	w0, #0x0
   16834:	b.eq	16d68 <elf_update@@ELFUTILS_1.0+0x32b0>  // b.none
   16838:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   1683c:	add	x3, x0, #0xf00
   16840:	mov	w2, #0x12f                 	// #303
   16844:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   16848:	add	x1, x0, #0xc88
   1684c:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   16850:	add	x0, x0, #0xe08
   16854:	bl	33d0 <__assert_fail@plt>
   16858:	ldr	x0, [sp, #160]
   1685c:	ldr	x0, [x0, #144]
   16860:	str	x0, [sp, #152]
   16864:	ldr	x0, [sp, #152]
   16868:	ldr	w0, [x0, #4]
   1686c:	cmp	w0, #0x8
   16870:	b.eq	16d4c <elf_update@@ELFUTILS_1.0+0x3294>  // b.none
   16874:	ldr	x0, [sp, #56]
   16878:	ldr	x1, [x0]
   1687c:	ldr	x0, [sp, #56]
   16880:	ldr	x0, [x0, #40]
   16884:	mov	x2, x0
   16888:	ldr	x0, [sp, #152]
   1688c:	ldr	w0, [x0, #16]
   16890:	mov	w0, w0
   16894:	add	x0, x2, x0
   16898:	add	x0, x1, x0
   1689c:	str	x0, [sp, #144]
   168a0:	ldr	x0, [sp, #160]
   168a4:	str	x0, [sp, #232]
   168a8:	strb	wzr, [sp, #231]
   168ac:	ldr	x0, [sp, #160]
   168b0:	ldr	x0, [x0, #64]
   168b4:	cmp	x0, #0x0
   168b8:	b.eq	16cf4 <elf_update@@ELFUTILS_1.0+0x323c>  // b.none
   168bc:	ldr	x0, [sp, #232]
   168c0:	ldr	x0, [x0, #24]
   168c4:	cmp	x0, #0x0
   168c8:	b.ge	168ec <elf_update@@ELFUTILS_1.0+0x2e34>  // b.tcont
   168cc:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   168d0:	add	x3, x0, #0xf00
   168d4:	mov	w2, #0x13f                 	// #319
   168d8:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   168dc:	add	x1, x0, #0xc88
   168e0:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   168e4:	add	x0, x0, #0xe28
   168e8:	bl	33d0 <__assert_fail@plt>
   168ec:	ldr	x0, [sp, #232]
   168f0:	ldr	x0, [x0, #24]
   168f4:	mov	x1, x0
   168f8:	ldr	x0, [sp, #152]
   168fc:	ldr	w0, [x0, #20]
   16900:	mov	w0, w0
   16904:	cmp	x1, x0
   16908:	b.ls	1692c <elf_update@@ELFUTILS_1.0+0x2e74>  // b.plast
   1690c:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   16910:	add	x3, x0, #0xf00
   16914:	mov	w2, #0x140                 	// #320
   16918:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   1691c:	add	x1, x0, #0xc88
   16920:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   16924:	add	x0, x0, #0xe40
   16928:	bl	33d0 <__assert_fail@plt>
   1692c:	ldr	x0, [sp, #232]
   16930:	ldr	x1, [x0, #16]
   16934:	ldr	x0, [sp, #152]
   16938:	ldr	w0, [x0, #20]
   1693c:	mov	w0, w0
   16940:	ldr	x2, [sp, #232]
   16944:	ldr	x2, [x2, #24]
   16948:	sub	x0, x0, x2
   1694c:	cmp	x1, x0
   16950:	b.ls	16974 <elf_update@@ELFUTILS_1.0+0x2ebc>  // b.plast
   16954:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   16958:	add	x3, x0, #0xf00
   1695c:	mov	w2, #0x141                 	// #321
   16960:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   16964:	add	x1, x0, #0xc88
   16968:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   1696c:	add	x0, x0, #0xe70
   16970:	bl	33d0 <__assert_fail@plt>
   16974:	ldr	x0, [sp, #232]
   16978:	ldr	x0, [x0, #24]
   1697c:	mov	x1, x0
   16980:	ldr	x0, [sp, #144]
   16984:	add	x0, x0, x1
   16988:	ldr	x1, [sp, #256]
   1698c:	cmp	x1, x0
   16990:	b.cs	169ec <elf_update@@ELFUTILS_1.0+0x2f34>  // b.hs, b.nlast
   16994:	ldr	x0, [sp, #232]
   16998:	ldr	x0, [x0, #24]
   1699c:	cmp	x0, #0x0
   169a0:	b.eq	169d0 <elf_update@@ELFUTILS_1.0+0x2f18>  // b.none
   169a4:	ldr	x0, [sp, #160]
   169a8:	ldr	w0, [x0, #156]
   169ac:	ldr	x1, [sp, #232]
   169b0:	ldr	w1, [x1, #56]
   169b4:	orr	w0, w0, w1
   169b8:	ldr	x1, [sp, #56]
   169bc:	ldr	w1, [x1, #56]
   169c0:	orr	w0, w0, w1
   169c4:	and	w0, w0, #0x1
   169c8:	cmp	w0, #0x0
   169cc:	b.eq	169ec <elf_update@@ELFUTILS_1.0+0x2f34>  // b.none
   169d0:	ldr	x0, [sp, #232]
   169d4:	ldr	x0, [x0, #24]
   169d8:	ldr	x4, [sp, #176]
   169dc:	ldr	x3, [sp, #184]
   169e0:	ldr	x2, [sp, #144]
   169e4:	ldr	x1, [sp, #256]
   169e8:	bl	16000 <elf_update@@ELFUTILS_1.0+0x2548>
   169ec:	ldr	x0, [sp, #232]
   169f0:	ldr	x0, [x0, #24]
   169f4:	mov	x1, x0
   169f8:	ldr	x0, [sp, #144]
   169fc:	add	x0, x0, x1
   16a00:	str	x0, [sp, #256]
   16a04:	ldr	x0, [sp, #160]
   16a08:	ldr	w0, [x0, #156]
   16a0c:	ldr	x1, [sp, #232]
   16a10:	ldr	w1, [x1, #56]
   16a14:	orr	w0, w0, w1
   16a18:	ldr	x1, [sp, #56]
   16a1c:	ldr	w1, [x1, #56]
   16a20:	orr	w0, w0, w1
   16a24:	and	w0, w0, #0x1
   16a28:	cmp	w0, #0x0
   16a2c:	b.eq	16c64 <elf_update@@ELFUTILS_1.0+0x31ac>  // b.none
   16a30:	ldr	w0, [sp, #52]
   16a34:	cmp	w0, #0x0
   16a38:	cset	w0, ne  // ne = any
   16a3c:	and	w0, w0, #0xff
   16a40:	and	x0, x0, #0xff
   16a44:	cmp	x0, #0x0
   16a48:	b.eq	16a74 <elf_update@@ELFUTILS_1.0+0x2fbc>  // b.none
   16a4c:	ldr	x0, [sp, #232]
   16a50:	ldr	x0, [x0, #16]
   16a54:	cmp	x0, #0x0
   16a58:	cset	w0, ne  // ne = any
   16a5c:	and	w0, w0, #0xff
   16a60:	and	x0, x0, #0xff
   16a64:	cmp	x0, #0x0
   16a68:	b.eq	16a74 <elf_update@@ELFUTILS_1.0+0x2fbc>  // b.none
   16a6c:	mov	w0, #0x1                   	// #1
   16a70:	b	16a78 <elf_update@@ELFUTILS_1.0+0x2fc0>
   16a74:	mov	w0, #0x0                   	// #0
   16a78:	cmp	w0, #0x0
   16a7c:	b.eq	16c18 <elf_update@@ELFUTILS_1.0+0x3160>  // b.none
   16a80:	ldr	x0, [sp, #232]
   16a84:	ldr	w0, [x0, #8]
   16a88:	cmp	w0, #0x0
   16a8c:	cset	w0, ne  // ne = any
   16a90:	and	w0, w0, #0xff
   16a94:	and	x0, x0, #0xff
   16a98:	cmp	x0, #0x0
   16a9c:	b.eq	16c18 <elf_update@@ELFUTILS_1.0+0x3160>  // b.none
   16aa0:	ldr	x0, [sp, #232]
   16aa4:	ldr	w2, [x0, #8]
   16aa8:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   16aac:	add	x1, x0, #0xab0
   16ab0:	mov	w0, w2
   16ab4:	ldrb	w0, [x1, x0]
   16ab8:	cmp	w0, #0x0
   16abc:	b.eq	16ae0 <elf_update@@ELFUTILS_1.0+0x3028>  // b.none
   16ac0:	ldr	x0, [sp, #232]
   16ac4:	ldr	w2, [x0, #8]
   16ac8:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   16acc:	add	x1, x0, #0xab0
   16ad0:	mov	w0, w2
   16ad4:	ldrb	w0, [x1, x0]
   16ad8:	and	x0, x0, #0xff
   16adc:	b	16ae4 <elf_update@@ELFUTILS_1.0+0x302c>
   16ae0:	mov	x0, #0x1                   	// #1
   16ae4:	str	x0, [sp, #136]
   16ae8:	ldr	x0, [sp, #136]
   16aec:	sub	x1, x0, #0x1
   16af0:	ldr	x0, [sp, #256]
   16af4:	and	x0, x1, x0
   16af8:	cmp	x0, #0x0
   16afc:	b.ne	16b3c <elf_update@@ELFUTILS_1.0+0x3084>  // b.any
   16b00:	ldr	x0, [sp, #232]
   16b04:	ldr	w1, [x0, #8]
   16b08:	adrp	x0, 35000 <elf_compress_gnu@@ELFUTILS_1.7+0x1495c>
   16b0c:	add	x0, x0, #0xbd8
   16b10:	mov	w1, w1
   16b14:	ldr	x4, [x0, x1, lsl #3]
   16b18:	ldr	x0, [sp, #232]
   16b1c:	ldr	x1, [x0]
   16b20:	ldr	x0, [sp, #232]
   16b24:	ldr	x0, [x0, #16]
   16b28:	mov	w3, #0x1                   	// #1
   16b2c:	mov	x2, x0
   16b30:	ldr	x0, [sp, #256]
   16b34:	blr	x4
   16b38:	b	16c00 <elf_update@@ELFUTILS_1.0+0x3148>
   16b3c:	ldr	x0, [sp, #232]
   16b40:	ldr	x0, [x0, #16]
   16b44:	str	x0, [sp, #128]
   16b48:	ldr	x0, [sp, #136]
   16b4c:	cmp	x0, #0x7
   16b50:	b.hi	16b64 <elf_update@@ELFUTILS_1.0+0x30ac>  // b.pmore
   16b54:	ldr	x0, [sp, #128]
   16b58:	bl	3140 <malloc@plt>
   16b5c:	str	x0, [sp, #64]
   16b60:	b	16b88 <elf_update@@ELFUTILS_1.0+0x30d0>
   16b64:	add	x0, sp, #0x40
   16b68:	ldr	x2, [sp, #128]
   16b6c:	ldr	x1, [sp, #136]
   16b70:	bl	31b0 <posix_memalign@plt>
   16b74:	str	w0, [sp, #124]
   16b78:	ldr	w0, [sp, #124]
   16b7c:	cmp	w0, #0x0
   16b80:	b.eq	16b88 <elf_update@@ELFUTILS_1.0+0x30d0>  // b.none
   16b84:	str	xzr, [sp, #64]
   16b88:	ldr	x0, [sp, #64]
   16b8c:	cmp	x0, #0x0
   16b90:	b.ne	16bac <elf_update@@ELFUTILS_1.0+0x30f4>  // b.any
   16b94:	ldr	x0, [sp, #192]
   16b98:	bl	32a0 <free@plt>
   16b9c:	mov	w0, #0x8                   	// #8
   16ba0:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   16ba4:	mov	w0, #0x1                   	// #1
   16ba8:	b	17070 <elf_update@@ELFUTILS_1.0+0x35b8>
   16bac:	ldr	x0, [sp, #232]
   16bb0:	ldr	w1, [x0, #8]
   16bb4:	adrp	x0, 35000 <elf_compress_gnu@@ELFUTILS_1.7+0x1495c>
   16bb8:	add	x0, x0, #0xbd8
   16bbc:	mov	w1, w1
   16bc0:	ldr	x4, [x0, x1, lsl #3]
   16bc4:	ldr	x5, [sp, #64]
   16bc8:	ldr	x0, [sp, #232]
   16bcc:	ldr	x0, [x0]
   16bd0:	mov	w3, #0x1                   	// #1
   16bd4:	ldr	x2, [sp, #128]
   16bd8:	mov	x1, x0
   16bdc:	mov	x0, x5
   16be0:	blr	x4
   16be4:	ldr	x0, [sp, #64]
   16be8:	ldr	x2, [sp, #128]
   16bec:	mov	x1, x0
   16bf0:	ldr	x0, [sp, #256]
   16bf4:	bl	30a0 <memcpy@plt>
   16bf8:	ldr	x0, [sp, #64]
   16bfc:	bl	32a0 <free@plt>
   16c00:	ldr	x0, [sp, #232]
   16c04:	ldr	x0, [x0, #16]
   16c08:	ldr	x1, [sp, #256]
   16c0c:	add	x0, x1, x0
   16c10:	str	x0, [sp, #256]
   16c14:	b	16c58 <elf_update@@ELFUTILS_1.0+0x31a0>
   16c18:	ldr	x0, [sp, #232]
   16c1c:	ldr	x0, [x0, #16]
   16c20:	cmp	x0, #0x0
   16c24:	b.eq	16c58 <elf_update@@ELFUTILS_1.0+0x31a0>  // b.none
   16c28:	ldr	x0, [sp, #232]
   16c2c:	ldr	x1, [x0]
   16c30:	ldr	x0, [sp, #232]
   16c34:	ldr	x0, [x0, #16]
   16c38:	mov	x2, x0
   16c3c:	ldr	x0, [sp, #256]
   16c40:	bl	30b0 <memmove@plt>
   16c44:	ldr	x0, [sp, #232]
   16c48:	ldr	x0, [x0, #16]
   16c4c:	ldr	x1, [sp, #256]
   16c50:	add	x0, x1, x0
   16c54:	str	x0, [sp, #256]
   16c58:	mov	w0, #0x1                   	// #1
   16c5c:	strb	w0, [sp, #231]
   16c60:	b	16c78 <elf_update@@ELFUTILS_1.0+0x31c0>
   16c64:	ldr	x0, [sp, #232]
   16c68:	ldr	x0, [x0, #16]
   16c6c:	ldr	x1, [sp, #256]
   16c70:	add	x0, x1, x0
   16c74:	str	x0, [sp, #256]
   16c78:	ldr	x0, [sp, #232]
   16c7c:	ldr	x0, [x0, #24]
   16c80:	mov	x1, x0
   16c84:	ldr	x0, [sp, #232]
   16c88:	ldr	x0, [x0, #16]
   16c8c:	add	x0, x1, x0
   16c90:	ldr	x1, [sp, #144]
   16c94:	add	x0, x1, x0
   16c98:	ldr	x1, [sp, #256]
   16c9c:	cmp	x1, x0
   16ca0:	b.eq	16cc4 <elf_update@@ELFUTILS_1.0+0x320c>  // b.none
   16ca4:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   16ca8:	add	x3, x0, #0xf00
   16cac:	mov	w2, #0x197                 	// #407
   16cb0:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   16cb4:	add	x1, x0, #0xc88
   16cb8:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   16cbc:	add	x0, x0, #0xeb8
   16cc0:	bl	33d0 <__assert_fail@plt>
   16cc4:	ldr	x0, [sp, #232]
   16cc8:	ldr	w0, [x0, #56]
   16ccc:	and	w1, w0, #0xfffffffe
   16cd0:	ldr	x0, [sp, #232]
   16cd4:	str	w1, [x0, #56]
   16cd8:	ldr	x0, [sp, #232]
   16cdc:	ldr	x0, [x0, #48]
   16ce0:	str	x0, [sp, #232]
   16ce4:	ldr	x0, [sp, #232]
   16ce8:	cmp	x0, #0x0
   16cec:	b.ne	168bc <elf_update@@ELFUTILS_1.0+0x2e04>  // b.any
   16cf0:	b	16d40 <elf_update@@ELFUTILS_1.0+0x3288>
   16cf4:	ldr	x1, [sp, #144]
   16cf8:	ldr	x0, [sp, #256]
   16cfc:	cmp	x1, x0
   16d00:	b.ls	16d28 <elf_update@@ELFUTILS_1.0+0x3270>  // b.plast
   16d04:	ldrb	w0, [sp, #271]
   16d08:	cmp	w0, #0x0
   16d0c:	b.eq	16d28 <elf_update@@ELFUTILS_1.0+0x3270>  // b.none
   16d10:	ldr	x4, [sp, #176]
   16d14:	ldr	x3, [sp, #184]
   16d18:	ldr	x2, [sp, #144]
   16d1c:	ldr	x1, [sp, #256]
   16d20:	mov	x0, #0x0                   	// #0
   16d24:	bl	16000 <elf_update@@ELFUTILS_1.0+0x2548>
   16d28:	ldr	x0, [sp, #152]
   16d2c:	ldr	w0, [x0, #20]
   16d30:	mov	w0, w0
   16d34:	ldr	x1, [sp, #144]
   16d38:	add	x0, x1, x0
   16d3c:	str	x0, [sp, #256]
   16d40:	ldrb	w0, [sp, #231]
   16d44:	strb	w0, [sp, #271]
   16d48:	b	16d50 <elf_update@@ELFUTILS_1.0+0x3298>
   16d4c:	nop
   16d50:	ldr	x0, [sp, #160]
   16d54:	ldr	w0, [x0, #156]
   16d58:	and	w1, w0, #0xfffffffe
   16d5c:	ldr	x0, [sp, #160]
   16d60:	str	w1, [x0, #156]
   16d64:	b	16d6c <elf_update@@ELFUTILS_1.0+0x32b4>
   16d68:	nop
   16d6c:	ldr	x0, [sp, #240]
   16d70:	add	x0, x0, #0x1
   16d74:	str	x0, [sp, #240]
   16d78:	ldr	x1, [sp, #240]
   16d7c:	ldr	x0, [sp, #40]
   16d80:	cmp	x1, x0
   16d84:	b.cc	167fc <elf_update@@ELFUTILS_1.0+0x2d44>  // b.lo, b.ul, b.last
   16d88:	ldr	x0, [sp, #56]
   16d8c:	ldr	w0, [x0, #56]
   16d90:	and	w0, w0, #0x1
   16d94:	cmp	w0, #0x0
   16d98:	b.eq	16e1c <elf_update@@ELFUTILS_1.0+0x3364>  // b.none
   16d9c:	ldr	x0, [sp, #56]
   16da0:	ldr	x1, [x0]
   16da4:	ldr	x0, [sp, #56]
   16da8:	ldr	x0, [x0, #40]
   16dac:	mov	x2, x0
   16db0:	ldr	x0, [sp, #208]
   16db4:	ldr	w0, [x0, #32]
   16db8:	mov	w0, w0
   16dbc:	add	x0, x2, x0
   16dc0:	add	x0, x1, x0
   16dc4:	ldr	x1, [sp, #256]
   16dc8:	cmp	x1, x0
   16dcc:	b.cs	16e1c <elf_update@@ELFUTILS_1.0+0x3364>  // b.hs, b.nlast
   16dd0:	adrp	x0, 36000 <elf_compress_gnu@@ELFUTILS_1.7+0x1595c>
   16dd4:	add	x0, x0, #0x1c8
   16dd8:	ldr	w3, [x0]
   16ddc:	ldr	x0, [sp, #56]
   16de0:	ldr	x1, [x0]
   16de4:	ldr	x0, [sp, #56]
   16de8:	ldr	x0, [x0, #40]
   16dec:	mov	x2, x0
   16df0:	ldr	x0, [sp, #208]
   16df4:	ldr	w0, [x0, #32]
   16df8:	mov	w0, w0
   16dfc:	add	x0, x2, x0
   16e00:	add	x1, x1, x0
   16e04:	ldr	x0, [sp, #256]
   16e08:	sub	x0, x1, x0
   16e0c:	mov	x2, x0
   16e10:	mov	w1, w3
   16e14:	ldr	x0, [sp, #256]
   16e18:	bl	3180 <memset@plt>
   16e1c:	str	xzr, [sp, #216]
   16e20:	b	16fb4 <elf_update@@ELFUTILS_1.0+0x34fc>
   16e24:	ldr	x0, [sp, #216]
   16e28:	lsl	x0, x0, #3
   16e2c:	ldr	x1, [sp, #192]
   16e30:	add	x0, x1, x0
   16e34:	ldr	x0, [x0]
   16e38:	str	x0, [sp, #168]
   16e3c:	ldr	x0, [sp, #168]
   16e40:	ldr	w0, [x0, #152]
   16e44:	ldr	x1, [sp, #56]
   16e48:	ldr	w1, [x1, #56]
   16e4c:	orr	w0, w0, w1
   16e50:	and	w0, w0, #0x1
   16e54:	cmp	w0, #0x0
   16e58:	b.eq	16fa8 <elf_update@@ELFUTILS_1.0+0x34f0>  // b.none
   16e5c:	ldr	w0, [sp, #52]
   16e60:	cmp	w0, #0x0
   16e64:	cset	w0, ne  // ne = any
   16e68:	and	w0, w0, #0xff
   16e6c:	and	x0, x0, #0xff
   16e70:	cmp	x0, #0x0
   16e74:	b.eq	16ec8 <elf_update@@ELFUTILS_1.0+0x3410>  // b.none
   16e78:	adrp	x0, 35000 <elf_compress_gnu@@ELFUTILS_1.7+0x1495c>
   16e7c:	add	x0, x0, #0xbd8
   16e80:	ldr	x4, [x0, #72]
   16e84:	ldr	x0, [sp, #168]
   16e88:	ldr	x1, [x0, #128]
   16e8c:	mov	x0, x1
   16e90:	lsl	x0, x0, #2
   16e94:	add	x0, x0, x1
   16e98:	lsl	x0, x0, #3
   16e9c:	mov	x1, x0
   16ea0:	ldr	x0, [sp, #184]
   16ea4:	add	x5, x0, x1
   16ea8:	ldr	x0, [sp, #168]
   16eac:	ldr	x0, [x0, #144]
   16eb0:	mov	w3, #0x1                   	// #1
   16eb4:	mov	x2, #0x28                  	// #40
   16eb8:	mov	x1, x0
   16ebc:	mov	x0, x5
   16ec0:	blr	x4
   16ec4:	b	16f04 <elf_update@@ELFUTILS_1.0+0x344c>
   16ec8:	ldr	x0, [sp, #168]
   16ecc:	ldr	x1, [x0, #128]
   16ed0:	mov	x0, x1
   16ed4:	lsl	x0, x0, #2
   16ed8:	add	x0, x0, x1
   16edc:	lsl	x0, x0, #3
   16ee0:	mov	x1, x0
   16ee4:	ldr	x0, [sp, #184]
   16ee8:	add	x3, x0, x1
   16eec:	ldr	x0, [sp, #168]
   16ef0:	ldr	x0, [x0, #144]
   16ef4:	mov	x2, #0x28                  	// #40
   16ef8:	mov	x1, x0
   16efc:	mov	x0, x3
   16f00:	bl	30a0 <memcpy@plt>
   16f04:	ldr	x0, [sp, #56]
   16f08:	ldr	w0, [x0, #124]
   16f0c:	cmp	w0, #0x0
   16f10:	b.ne	16f94 <elf_update@@ELFUTILS_1.0+0x34dc>  // b.any
   16f14:	ldr	x0, [sp, #168]
   16f18:	ldr	w0, [x0, #152]
   16f1c:	and	w0, w0, #0x80
   16f20:	cmp	w0, #0x0
   16f24:	b.ne	16f94 <elf_update@@ELFUTILS_1.0+0x34dc>  // b.any
   16f28:	ldr	x0, [sp, #168]
   16f2c:	ldr	x2, [x0, #144]
   16f30:	ldr	x0, [sp, #168]
   16f34:	ldr	x1, [x0, #128]
   16f38:	mov	x0, x1
   16f3c:	lsl	x0, x0, #2
   16f40:	add	x0, x0, x1
   16f44:	lsl	x0, x0, #3
   16f48:	mov	x1, x0
   16f4c:	ldr	x0, [sp, #184]
   16f50:	add	x0, x0, x1
   16f54:	cmp	x2, x0
   16f58:	b.eq	16f94 <elf_update@@ELFUTILS_1.0+0x34dc>  // b.none
   16f5c:	ldr	x0, [sp, #168]
   16f60:	ldr	x0, [x0, #144]
   16f64:	bl	32a0 <free@plt>
   16f68:	ldr	x0, [sp, #168]
   16f6c:	ldr	x1, [x0, #128]
   16f70:	mov	x0, x1
   16f74:	lsl	x0, x0, #2
   16f78:	add	x0, x0, x1
   16f7c:	lsl	x0, x0, #3
   16f80:	mov	x1, x0
   16f84:	ldr	x0, [sp, #184]
   16f88:	add	x1, x0, x1
   16f8c:	ldr	x0, [sp, #168]
   16f90:	str	x1, [x0, #144]
   16f94:	ldr	x0, [sp, #168]
   16f98:	ldr	w0, [x0, #152]
   16f9c:	and	w1, w0, #0xfffffffe
   16fa0:	ldr	x0, [sp, #168]
   16fa4:	str	w1, [x0, #152]
   16fa8:	ldr	x0, [sp, #216]
   16fac:	add	x0, x0, #0x1
   16fb0:	str	x0, [sp, #216]
   16fb4:	ldr	x1, [sp, #216]
   16fb8:	ldr	x0, [sp, #40]
   16fbc:	cmp	x1, x0
   16fc0:	b.cc	16e24 <elf_update@@ELFUTILS_1.0+0x336c>  // b.lo, b.ul, b.last
   16fc4:	ldr	x0, [sp, #192]
   16fc8:	bl	32a0 <free@plt>
   16fcc:	ldr	x0, [sp, #56]
   16fd0:	ldr	w0, [x0, #56]
   16fd4:	and	w1, w0, #0xfffffffe
   16fd8:	ldr	x0, [sp, #56]
   16fdc:	str	w1, [x0, #56]
   16fe0:	ldr	x0, [sp, #56]
   16fe4:	ldr	x19, [x0]
   16fe8:	ldr	x0, [sp, #56]
   16fec:	ldr	x20, [x0, #40]
   16ff0:	mov	w0, #0x1e                  	// #30
   16ff4:	bl	3380 <sysconf@plt>
   16ff8:	sub	x0, x0, #0x1
   16ffc:	mvn	x0, x0
   17000:	and	x0, x20, x0
   17004:	add	x0, x19, x0
   17008:	str	x0, [sp, #88]
   1700c:	ldr	x0, [sp, #56]
   17010:	ldr	x1, [x0]
   17014:	ldr	x0, [sp, #56]
   17018:	ldr	x0, [x0, #40]
   1701c:	mov	x2, x0
   17020:	ldr	x0, [sp, #208]
   17024:	ldr	w0, [x0, #32]
   17028:	mov	w0, w0
   1702c:	add	x2, x2, x0
   17030:	ldr	x0, [sp, #208]
   17034:	ldrh	w0, [x0, #46]
   17038:	and	x3, x0, #0xffff
   1703c:	ldr	x0, [sp, #40]
   17040:	mul	x0, x3, x0
   17044:	add	x0, x2, x0
   17048:	add	x0, x1, x0
   1704c:	str	x0, [sp, #80]
   17050:	ldr	x1, [sp, #80]
   17054:	ldr	x0, [sp, #88]
   17058:	sub	x0, x1, x0
   1705c:	mov	w2, #0x4                   	// #4
   17060:	mov	x1, x0
   17064:	ldr	x0, [sp, #88]
   17068:	bl	30c0 <msync@plt>
   1706c:	mov	w0, #0x0                   	// #0
   17070:	ldp	x19, x20, [sp, #16]
   17074:	ldp	x29, x30, [sp], #272
   17078:	ret
   1707c:	stp	x29, x30, [sp, #-96]!
   17080:	mov	x29, sp
   17084:	str	w0, [sp, #60]
   17088:	str	x1, [sp, #48]
   1708c:	str	x2, [sp, #40]
   17090:	str	x3, [sp, #32]
   17094:	str	x4, [sp, #24]
   17098:	ldr	x0, [sp, #24]
   1709c:	ldr	x0, [x0]
   170a0:	str	x0, [sp, #88]
   170a4:	ldr	x2, [sp, #40]
   170a8:	ldr	x1, [sp, #40]
   170ac:	mov	x0, #0x1000                	// #4096
   170b0:	cmp	x2, #0x1, lsl #12
   170b4:	csel	x0, x1, x0, ls  // ls = plast
   170b8:	str	x0, [sp, #80]
   170bc:	ldr	x1, [sp, #80]
   170c0:	ldr	x0, [sp, #88]
   170c4:	cmp	x1, x0
   170c8:	cset	w0, hi  // hi = pmore
   170cc:	and	w0, w0, #0xff
   170d0:	and	x0, x0, #0xff
   170d4:	cmp	x0, #0x0
   170d8:	b.eq	17130 <elf_update@@ELFUTILS_1.0+0x3678>  // b.none
   170dc:	ldr	x0, [sp, #88]
   170e0:	cmp	x0, #0xfff
   170e4:	b.hi	17130 <elf_update@@ELFUTILS_1.0+0x3678>  // b.pmore
   170e8:	ldr	x1, [sp, #32]
   170ec:	ldr	x0, [sp, #88]
   170f0:	add	x3, x1, x0
   170f4:	adrp	x0, 36000 <elf_compress_gnu@@ELFUTILS_1.7+0x1595c>
   170f8:	add	x0, x0, #0x1c8
   170fc:	ldr	w4, [x0]
   17100:	ldr	x1, [sp, #80]
   17104:	ldr	x0, [sp, #88]
   17108:	sub	x0, x1, x0
   1710c:	mov	x2, x0
   17110:	mov	w1, w4
   17114:	mov	x0, x3
   17118:	bl	3180 <memset@plt>
   1711c:	ldr	x0, [sp, #80]
   17120:	str	x0, [sp, #88]
   17124:	ldr	x0, [sp, #24]
   17128:	ldr	x1, [sp, #88]
   1712c:	str	x1, [x0]
   17130:	ldr	x0, [sp, #88]
   17134:	ldr	x2, [sp, #40]
   17138:	ldr	x1, [sp, #40]
   1713c:	cmp	x2, x0
   17140:	csel	x0, x1, x0, ls  // ls = plast
   17144:	str	x0, [sp, #72]
   17148:	ldr	x3, [sp, #48]
   1714c:	ldr	x2, [sp, #72]
   17150:	ldr	x1, [sp, #32]
   17154:	ldr	w0, [sp, #60]
   17158:	bl	15d34 <elf_update@@ELFUTILS_1.0+0x227c>
   1715c:	mov	x1, x0
   17160:	ldr	x0, [sp, #72]
   17164:	cmp	x1, x0
   17168:	cset	w0, ne  // ne = any
   1716c:	and	w0, w0, #0xff
   17170:	and	x0, x0, #0xff
   17174:	cmp	x0, #0x0
   17178:	b.eq	1718c <elf_update@@ELFUTILS_1.0+0x36d4>  // b.none
   1717c:	mov	w0, #0x14                  	// #20
   17180:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   17184:	mov	w0, #0x1                   	// #1
   17188:	b	171bc <elf_update@@ELFUTILS_1.0+0x3704>
   1718c:	ldr	x1, [sp, #48]
   17190:	ldr	x0, [sp, #72]
   17194:	add	x0, x1, x0
   17198:	str	x0, [sp, #48]
   1719c:	ldr	x1, [sp, #40]
   171a0:	ldr	x0, [sp, #72]
   171a4:	sub	x0, x1, x0
   171a8:	str	x0, [sp, #40]
   171ac:	ldr	x0, [sp, #40]
   171b0:	cmp	x0, #0x0
   171b4:	b.ne	17130 <elf_update@@ELFUTILS_1.0+0x3678>  // b.any
   171b8:	mov	w0, #0x0                   	// #0
   171bc:	ldp	x29, x30, [sp], #96
   171c0:	ret
   171c4:	mov	x12, #0x90f0                	// #37104
   171c8:	sub	sp, sp, x12
   171cc:	stp	x29, x30, [sp]
   171d0:	mov	x29, sp
   171d4:	str	x0, [sp, #40]
   171d8:	str	w1, [sp, #36]
   171dc:	str	x2, [sp, #24]
   171e0:	add	x0, sp, #0x8, lsl #12
   171e4:	str	xzr, [x0, #64]
   171e8:	add	x0, sp, #0x9, lsl #12
   171ec:	strb	wzr, [x0, #239]
   171f0:	ldr	x0, [sp, #40]
   171f4:	ldr	x0, [x0, #72]
   171f8:	add	x1, sp, #0x8, lsl #12
   171fc:	str	x0, [x1, #4232]
   17200:	ldr	x0, [sp, #40]
   17204:	ldr	w1, [x0, #116]
   17208:	ldr	x0, [sp, #40]
   1720c:	ldr	w0, [x0, #56]
   17210:	orr	w0, w1, w0
   17214:	and	w0, w0, #0x1
   17218:	cmp	w0, #0x0
   1721c:	b.eq	17320 <elf_update@@ELFUTILS_1.0+0x3868>  // b.none
   17220:	add	x0, sp, #0x8, lsl #12
   17224:	ldr	x0, [x0, #4232]
   17228:	add	x1, sp, #0x8, lsl #12
   1722c:	str	x0, [x1, #4320]
   17230:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   17234:	add	x0, x0, #0x3d0
   17238:	ldr	x0, [x0, #24]
   1723c:	cmp	x0, #0x34
   17240:	b.eq	17264 <elf_update@@ELFUTILS_1.0+0x37ac>  // b.none
   17244:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   17248:	add	x3, x0, #0xf18
   1724c:	mov	w2, #0x228                 	// #552
   17250:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   17254:	add	x1, x0, #0xc88
   17258:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   1725c:	add	x0, x0, #0xca0
   17260:	bl	33d0 <__assert_fail@plt>
   17264:	ldr	w0, [sp, #36]
   17268:	cmp	w0, #0x0
   1726c:	cset	w0, ne  // ne = any
   17270:	and	w0, w0, #0xff
   17274:	and	x0, x0, #0xff
   17278:	cmp	x0, #0x0
   1727c:	b.eq	172b0 <elf_update@@ELFUTILS_1.0+0x37f8>  // b.none
   17280:	adrp	x0, 35000 <elf_compress_gnu@@ELFUTILS_1.7+0x1495c>
   17284:	add	x0, x0, #0xbd8
   17288:	ldr	x4, [x0, #24]
   1728c:	add	x0, sp, #0x38
   17290:	mov	w3, #0x1                   	// #1
   17294:	mov	x2, #0x34                  	// #52
   17298:	add	x1, sp, #0x8, lsl #12
   1729c:	ldr	x1, [x1, #4232]
   172a0:	blr	x4
   172a4:	add	x0, sp, #0x38
   172a8:	add	x1, sp, #0x8, lsl #12
   172ac:	str	x0, [x1, #4320]
   172b0:	ldr	x0, [sp, #40]
   172b4:	ldr	w0, [x0, #36]
   172b8:	mov	x3, #0x0                   	// #0
   172bc:	mov	x2, #0x34                  	// #52
   172c0:	add	x1, sp, #0x8, lsl #12
   172c4:	ldr	x1, [x1, #4320]
   172c8:	bl	15d34 <elf_update@@ELFUTILS_1.0+0x227c>
   172cc:	cmp	x0, #0x34
   172d0:	cset	w0, ne  // ne = any
   172d4:	and	w0, w0, #0xff
   172d8:	and	x0, x0, #0xff
   172dc:	cmp	x0, #0x0
   172e0:	b.eq	172f4 <elf_update@@ELFUTILS_1.0+0x383c>  // b.none
   172e4:	mov	w0, #0x14                  	// #20
   172e8:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   172ec:	mov	w0, #0x1                   	// #1
   172f0:	b	17f94 <elf_update@@ELFUTILS_1.0+0x44dc>
   172f4:	ldr	x0, [sp, #40]
   172f8:	ldr	w0, [x0, #116]
   172fc:	and	w1, w0, #0xfffffffe
   17300:	ldr	x0, [sp, #40]
   17304:	str	w1, [x0, #116]
   17308:	ldr	x0, [sp, #40]
   1730c:	ldr	x0, [x0, #88]
   17310:	cmp	x0, #0x0
   17314:	cset	w0, eq  // eq = none
   17318:	add	x1, sp, #0x9, lsl #12
   1731c:	strb	w0, [x1, #239]
   17320:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   17324:	add	x0, x0, #0x3d0
   17328:	ldr	x0, [x0, #48]
   1732c:	cmp	x0, #0x20
   17330:	b.eq	17354 <elf_update@@ELFUTILS_1.0+0x389c>  // b.none
   17334:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   17338:	add	x3, x0, #0xf18
   1733c:	mov	w2, #0x24a                 	// #586
   17340:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   17344:	add	x1, x0, #0xc88
   17348:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   1734c:	add	x0, x0, #0xcf0
   17350:	bl	33d0 <__assert_fail@plt>
   17354:	add	x0, sp, #0x8, lsl #12
   17358:	add	x0, x0, #0x38
   1735c:	mov	x1, x0
   17360:	ldr	x0, [sp, #40]
   17364:	bl	1d2c0 <gelf_update_verdaux@@ELFUTILS_1.0+0xf4>
   17368:	cmp	w0, #0x0
   1736c:	cset	w0, ne  // ne = any
   17370:	and	w0, w0, #0xff
   17374:	and	x0, x0, #0xff
   17378:	cmp	x0, #0x0
   1737c:	b.eq	17388 <elf_update@@ELFUTILS_1.0+0x38d0>  // b.none
   17380:	mov	w0, #0xffffffff            	// #-1
   17384:	b	17f94 <elf_update@@ELFUTILS_1.0+0x44dc>
   17388:	ldr	x0, [sp, #40]
   1738c:	ldr	x0, [x0, #88]
   17390:	cmp	x0, #0x0
   17394:	b.eq	175c0 <elf_update@@ELFUTILS_1.0+0x3b08>  // b.none
   17398:	ldr	x0, [sp, #40]
   1739c:	ldr	w1, [x0, #120]
   173a0:	ldr	x0, [sp, #40]
   173a4:	ldr	w0, [x0, #56]
   173a8:	orr	w0, w1, w0
   173ac:	and	w0, w0, #0x1
   173b0:	cmp	w0, #0x0
   173b4:	b.eq	175c0 <elf_update@@ELFUTILS_1.0+0x3b08>  // b.none
   173b8:	add	x0, sp, #0x8, lsl #12
   173bc:	str	xzr, [x0, #4312]
   173c0:	ldr	x0, [sp, #40]
   173c4:	ldr	x0, [x0, #88]
   173c8:	add	x1, sp, #0x8, lsl #12
   173cc:	str	x0, [x1, #4304]
   173d0:	add	x0, sp, #0x8, lsl #12
   173d4:	ldr	x0, [x0, #4232]
   173d8:	ldr	w0, [x0, #28]
   173dc:	add	x1, sp, #0x8, lsl #12
   173e0:	ldr	x1, [x1, #4232]
   173e4:	ldrh	w1, [x1, #40]
   173e8:	cmp	w0, w1
   173ec:	b.ls	17470 <elf_update@@ELFUTILS_1.0+0x39b8>  // b.plast
   173f0:	ldr	x0, [sp, #40]
   173f4:	ldr	w5, [x0, #36]
   173f8:	add	x0, sp, #0x8, lsl #12
   173fc:	ldr	x0, [x0, #4232]
   17400:	ldrh	w0, [x0, #40]
   17404:	and	x6, x0, #0xffff
   17408:	add	x0, sp, #0x8, lsl #12
   1740c:	ldr	x0, [x0, #4232]
   17410:	ldr	w0, [x0, #28]
   17414:	add	x1, sp, #0x8, lsl #12
   17418:	ldr	x1, [x1, #4232]
   1741c:	ldrh	w1, [x1, #40]
   17420:	sub	w0, w0, w1
   17424:	mov	w0, w0
   17428:	add	x2, sp, #0x8, lsl #12
   1742c:	add	x2, x2, #0x40
   17430:	add	x1, sp, #0x8, lsl #12
   17434:	add	x1, x1, #0x48
   17438:	mov	x4, x2
   1743c:	mov	x3, x1
   17440:	mov	x2, x0
   17444:	mov	x1, x6
   17448:	mov	w0, w5
   1744c:	bl	1707c <elf_update@@ELFUTILS_1.0+0x35c4>
   17450:	cmp	w0, #0x0
   17454:	cset	w0, ne  // ne = any
   17458:	and	w0, w0, #0xff
   1745c:	and	x0, x0, #0xff
   17460:	cmp	x0, #0x0
   17464:	b.eq	17470 <elf_update@@ELFUTILS_1.0+0x39b8>  // b.none
   17468:	mov	w0, #0x1                   	// #1
   1746c:	b	17f94 <elf_update@@ELFUTILS_1.0+0x44dc>
   17470:	ldr	w0, [sp, #36]
   17474:	cmp	w0, #0x0
   17478:	cset	w0, ne  // ne = any
   1747c:	and	w0, w0, #0xff
   17480:	and	x0, x0, #0xff
   17484:	cmp	x0, #0x0
   17488:	b.eq	17518 <elf_update@@ELFUTILS_1.0+0x3a60>  // b.none
   1748c:	add	x0, sp, #0x8, lsl #12
   17490:	ldr	x0, [x0, #56]
   17494:	lsl	x0, x0, #5
   17498:	bl	3140 <malloc@plt>
   1749c:	add	x1, sp, #0x8, lsl #12
   174a0:	str	x0, [x1, #4312]
   174a4:	add	x0, sp, #0x8, lsl #12
   174a8:	ldr	x0, [x0, #4312]
   174ac:	cmp	x0, #0x0
   174b0:	cset	w0, eq  // eq = none
   174b4:	and	w0, w0, #0xff
   174b8:	and	x0, x0, #0xff
   174bc:	cmp	x0, #0x0
   174c0:	b.eq	174d4 <elf_update@@ELFUTILS_1.0+0x3a1c>  // b.none
   174c4:	mov	w0, #0x8                   	// #8
   174c8:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   174cc:	mov	w0, #0x1                   	// #1
   174d0:	b	17f94 <elf_update@@ELFUTILS_1.0+0x44dc>
   174d4:	adrp	x0, 35000 <elf_compress_gnu@@ELFUTILS_1.7+0x1495c>
   174d8:	add	x0, x0, #0xbd8
   174dc:	ldr	x4, [x0, #48]
   174e0:	ldr	x0, [sp, #40]
   174e4:	ldr	x1, [x0, #88]
   174e8:	add	x0, sp, #0x8, lsl #12
   174ec:	ldr	x0, [x0, #56]
   174f0:	lsl	x0, x0, #5
   174f4:	mov	w3, #0x1                   	// #1
   174f8:	mov	x2, x0
   174fc:	add	x0, sp, #0x8, lsl #12
   17500:	ldr	x0, [x0, #4312]
   17504:	blr	x4
   17508:	add	x0, sp, #0x8, lsl #12
   1750c:	ldr	x0, [x0, #4312]
   17510:	add	x1, sp, #0x8, lsl #12
   17514:	str	x0, [x1, #4304]
   17518:	add	x0, sp, #0x8, lsl #12
   1751c:	ldr	x0, [x0, #56]
   17520:	lsl	x0, x0, #5
   17524:	add	x1, sp, #0x8, lsl #12
   17528:	str	x0, [x1, #4224]
   1752c:	ldr	x0, [sp, #40]
   17530:	ldr	w4, [x0, #36]
   17534:	add	x0, sp, #0x8, lsl #12
   17538:	ldr	x0, [x0, #4232]
   1753c:	ldr	w0, [x0, #28]
   17540:	mov	w0, w0
   17544:	mov	x3, x0
   17548:	add	x0, sp, #0x8, lsl #12
   1754c:	ldr	x2, [x0, #4224]
   17550:	add	x0, sp, #0x8, lsl #12
   17554:	ldr	x1, [x0, #4304]
   17558:	mov	w0, w4
   1755c:	bl	15d34 <elf_update@@ELFUTILS_1.0+0x227c>
   17560:	mov	x1, x0
   17564:	add	x0, sp, #0x8, lsl #12
   17568:	ldr	x0, [x0, #4224]
   1756c:	cmp	x1, x0
   17570:	cset	w0, ne  // ne = any
   17574:	and	w0, w0, #0xff
   17578:	and	x0, x0, #0xff
   1757c:	cmp	x0, #0x0
   17580:	b.eq	17594 <elf_update@@ELFUTILS_1.0+0x3adc>  // b.none
   17584:	mov	w0, #0x14                  	// #20
   17588:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1758c:	mov	w0, #0x1                   	// #1
   17590:	b	17f94 <elf_update@@ELFUTILS_1.0+0x44dc>
   17594:	add	x0, sp, #0x8, lsl #12
   17598:	ldr	x0, [x0, #4312]
   1759c:	bl	32a0 <free@plt>
   175a0:	ldr	x0, [sp, #40]
   175a4:	ldr	w0, [x0, #120]
   175a8:	and	w1, w0, #0xfffffffe
   175ac:	ldr	x0, [sp, #40]
   175b0:	str	w1, [x0, #120]
   175b4:	mov	w0, #0x1                   	// #1
   175b8:	add	x1, sp, #0x9, lsl #12
   175bc:	strb	w0, [x1, #239]
   175c0:	ldr	x0, [sp, #40]
   175c4:	ldr	x0, [x0, #88]
   175c8:	cmp	x0, #0x0
   175cc:	b.ne	175e8 <elf_update@@ELFUTILS_1.0+0x3b30>  // b.any
   175d0:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   175d4:	add	x0, x0, #0x3d0
   175d8:	ldr	x0, [x0, #24]
   175dc:	add	x1, sp, #0x8, lsl #12
   175e0:	str	x0, [x1, #4296]
   175e4:	b	17610 <elf_update@@ELFUTILS_1.0+0x3b58>
   175e8:	add	x0, sp, #0x8, lsl #12
   175ec:	ldr	x0, [x0, #4232]
   175f0:	ldr	w0, [x0, #28]
   175f4:	mov	w1, w0
   175f8:	add	x0, sp, #0x8, lsl #12
   175fc:	ldr	x0, [x0, #56]
   17600:	lsl	x0, x0, #5
   17604:	add	x0, x1, x0
   17608:	add	x1, sp, #0x8, lsl #12
   1760c:	str	x0, [x1, #4296]
   17610:	ldr	x0, [sp, #24]
   17614:	cmp	x0, #0x0
   17618:	b.eq	17f7c <elf_update@@ELFUTILS_1.0+0x44c4>  // b.none
   1761c:	ldr	x1, [sp, #24]
   17620:	mov	x0, #0x5555555555555555    	// #6148914691236517205
   17624:	movk	x0, #0x555, lsl #48
   17628:	cmp	x1, x0
   1762c:	cset	w0, hi  // hi = pmore
   17630:	and	w0, w0, #0xff
   17634:	and	x0, x0, #0xff
   17638:	cmp	x0, #0x0
   1763c:	b.eq	17648 <elf_update@@ELFUTILS_1.0+0x3b90>  // b.none
   17640:	mov	w0, #0x1                   	// #1
   17644:	b	17f94 <elf_update@@ELFUTILS_1.0+0x44dc>
   17648:	ldr	x0, [sp, #40]
   1764c:	ldr	x1, [x0, #40]
   17650:	add	x0, sp, #0x8, lsl #12
   17654:	ldr	x0, [x0, #4232]
   17658:	ldr	w0, [x0, #32]
   1765c:	mov	w0, w0
   17660:	add	x0, x1, x0
   17664:	add	x1, sp, #0x8, lsl #12
   17668:	str	x0, [x1, #4216]
   1766c:	add	x0, sp, #0x8, lsl #12
   17670:	str	xzr, [x0, #4280]
   17674:	ldr	w0, [sp, #36]
   17678:	cmp	w0, #0x0
   1767c:	b.ne	176a4 <elf_update@@ELFUTILS_1.0+0x3bec>  // b.any
   17680:	ldr	x0, [sp, #40]
   17684:	ldr	x0, [x0, #80]
   17688:	cmp	x0, #0x0
   1768c:	b.eq	176a4 <elf_update@@ELFUTILS_1.0+0x3bec>  // b.none
   17690:	ldr	x0, [sp, #40]
   17694:	ldr	w0, [x0, #56]
   17698:	and	w0, w0, #0x1
   1769c:	cmp	w0, #0x0
   176a0:	b.eq	17708 <elf_update@@ELFUTILS_1.0+0x3c50>  // b.none
   176a4:	ldr	x1, [sp, #24]
   176a8:	mov	x0, x1
   176ac:	lsl	x0, x0, #2
   176b0:	add	x0, x0, x1
   176b4:	lsl	x0, x0, #3
   176b8:	bl	3140 <malloc@plt>
   176bc:	add	x1, sp, #0x8, lsl #12
   176c0:	str	x0, [x1, #4280]
   176c4:	add	x0, sp, #0x8, lsl #12
   176c8:	ldr	x0, [x0, #4280]
   176cc:	cmp	x0, #0x0
   176d0:	cset	w0, eq  // eq = none
   176d4:	and	w0, w0, #0xff
   176d8:	and	x0, x0, #0xff
   176dc:	cmp	x0, #0x0
   176e0:	b.eq	176f4 <elf_update@@ELFUTILS_1.0+0x3c3c>  // b.none
   176e4:	mov	w0, #0x8                   	// #8
   176e8:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   176ec:	mov	w0, #0xffffffff            	// #-1
   176f0:	b	17f94 <elf_update@@ELFUTILS_1.0+0x44dc>
   176f4:	add	x0, sp, #0x8, lsl #12
   176f8:	ldr	x0, [x0, #4280]
   176fc:	add	x1, sp, #0x8, lsl #12
   17700:	str	x0, [x1, #4288]
   17704:	b	17718 <elf_update@@ELFUTILS_1.0+0x3c60>
   17708:	ldr	x0, [sp, #40]
   1770c:	ldr	x0, [x0, #80]
   17710:	add	x1, sp, #0x8, lsl #12
   17714:	str	x0, [x1, #4288]
   17718:	ldr	x0, [sp, #40]
   1771c:	ldr	w0, [x0, #56]
   17720:	add	x1, sp, #0x8, lsl #12
   17724:	str	w0, [x1, #4276]
   17728:	ldr	x0, [sp, #40]
   1772c:	add	x0, x0, #0xc8
   17730:	add	x1, sp, #0x8, lsl #12
   17734:	str	x0, [x1, #4208]
   17738:	ldr	x0, [sp, #24]
   1773c:	lsl	x0, x0, #3
   17740:	bl	3140 <malloc@plt>
   17744:	add	x1, sp, #0x8, lsl #12
   17748:	str	x0, [x1, #4200]
   1774c:	add	x0, sp, #0x8, lsl #12
   17750:	ldr	x0, [x0, #4200]
   17754:	cmp	x0, #0x0
   17758:	cset	w0, eq  // eq = none
   1775c:	and	w0, w0, #0xff
   17760:	and	x0, x0, #0xff
   17764:	cmp	x0, #0x0
   17768:	b.eq	17788 <elf_update@@ELFUTILS_1.0+0x3cd0>  // b.none
   1776c:	add	x0, sp, #0x8, lsl #12
   17770:	ldr	x0, [x0, #4280]
   17774:	bl	32a0 <free@plt>
   17778:	mov	w0, #0x8                   	// #8
   1777c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   17780:	mov	w0, #0xffffffff            	// #-1
   17784:	b	17f94 <elf_update@@ELFUTILS_1.0+0x44dc>
   17788:	add	x0, sp, #0x8, lsl #12
   1778c:	ldr	x1, [x0, #4208]
   17790:	add	x0, sp, #0x8, lsl #12
   17794:	ldr	x0, [x0, #4200]
   17798:	bl	15f38 <elf_update@@ELFUTILS_1.0+0x2480>
   1779c:	add	x0, sp, #0x8, lsl #12
   177a0:	str	xzr, [x0, #4264]
   177a4:	b	17e3c <elf_update@@ELFUTILS_1.0+0x4384>
   177a8:	add	x0, sp, #0x8, lsl #12
   177ac:	ldr	x0, [x0, #4264]
   177b0:	lsl	x0, x0, #3
   177b4:	add	x1, sp, #0x8, lsl #12
   177b8:	ldr	x1, [x1, #4200]
   177bc:	add	x0, x1, x0
   177c0:	ldr	x0, [x0]
   177c4:	add	x1, sp, #0x8, lsl #12
   177c8:	str	x0, [x1, #4192]
   177cc:	add	x0, sp, #0x8, lsl #12
   177d0:	ldr	x0, [x0, #4192]
   177d4:	ldr	x0, [x0, #128]
   177d8:	cmp	x0, #0x0
   177dc:	b.ne	17818 <elf_update@@ELFUTILS_1.0+0x3d60>  // b.any
   177e0:	add	x0, sp, #0x8, lsl #12
   177e4:	ldr	x0, [x0, #4192]
   177e8:	ldr	w0, [x0, #156]
   177ec:	and	w0, w0, #0x1
   177f0:	cmp	w0, #0x0
   177f4:	b.eq	17cfc <elf_update@@ELFUTILS_1.0+0x4244>  // b.none
   177f8:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   177fc:	add	x3, x0, #0xf18
   17800:	mov	w2, #0x2c3                 	// #707
   17804:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   17808:	add	x1, x0, #0xc88
   1780c:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   17810:	add	x0, x0, #0xe08
   17814:	bl	33d0 <__assert_fail@plt>
   17818:	add	x0, sp, #0x8, lsl #12
   1781c:	ldr	x0, [x0, #4192]
   17820:	ldr	x0, [x0, #144]
   17824:	add	x1, sp, #0x8, lsl #12
   17828:	str	x0, [x1, #4184]
   1782c:	add	x0, sp, #0x8, lsl #12
   17830:	ldr	x0, [x0, #4184]
   17834:	ldr	w0, [x0, #4]
   17838:	cmp	w0, #0x8
   1783c:	b.eq	17d04 <elf_update@@ELFUTILS_1.0+0x424c>  // b.none
   17840:	ldr	x0, [sp, #40]
   17844:	ldr	x1, [x0, #40]
   17848:	add	x0, sp, #0x8, lsl #12
   1784c:	ldr	x0, [x0, #4184]
   17850:	ldr	w0, [x0, #16]
   17854:	mov	w0, w0
   17858:	add	x0, x1, x0
   1785c:	add	x1, sp, #0x8, lsl #12
   17860:	str	x0, [x1, #4176]
   17864:	add	x0, sp, #0x8, lsl #12
   17868:	ldr	x0, [x0, #4192]
   1786c:	add	x1, sp, #0x8, lsl #12
   17870:	str	x0, [x1, #4256]
   17874:	add	x0, sp, #0x9, lsl #12
   17878:	strb	wzr, [x0, #159]
   1787c:	add	x0, sp, #0x8, lsl #12
   17880:	ldr	x0, [x0, #4192]
   17884:	ldr	x0, [x0, #64]
   17888:	cmp	x0, #0x0
   1788c:	b.eq	17c3c <elf_update@@ELFUTILS_1.0+0x4184>  // b.none
   17890:	add	x0, sp, #0x8, lsl #12
   17894:	ldr	x0, [x0, #4256]
   17898:	ldr	x1, [x0, #24]
   1789c:	add	x0, sp, #0x8, lsl #12
   178a0:	ldr	x0, [x0, #4176]
   178a4:	add	x0, x1, x0
   178a8:	add	x1, sp, #0x8, lsl #12
   178ac:	ldr	x1, [x1, #4296]
   178b0:	cmp	x1, x0
   178b4:	b.ge	179b4 <elf_update@@ELFUTILS_1.0+0x3efc>  // b.tcont
   178b8:	add	x0, sp, #0x9, lsl #12
   178bc:	ldrb	w0, [x0, #239]
   178c0:	cmp	w0, #0x0
   178c4:	b.eq	178dc <elf_update@@ELFUTILS_1.0+0x3e24>  // b.none
   178c8:	add	x0, sp, #0x8, lsl #12
   178cc:	ldr	x0, [x0, #4256]
   178d0:	ldr	x0, [x0, #24]
   178d4:	cmp	x0, #0x0
   178d8:	b.eq	17910 <elf_update@@ELFUTILS_1.0+0x3e58>  // b.none
   178dc:	add	x0, sp, #0x8, lsl #12
   178e0:	ldr	x0, [x0, #4192]
   178e4:	ldr	w0, [x0, #156]
   178e8:	add	x1, sp, #0x8, lsl #12
   178ec:	ldr	x1, [x1, #4256]
   178f0:	ldr	w1, [x1, #56]
   178f4:	orr	w0, w0, w1
   178f8:	ldr	x1, [sp, #40]
   178fc:	ldr	w1, [x1, #56]
   17900:	orr	w0, w0, w1
   17904:	and	w0, w0, #0x1
   17908:	cmp	w0, #0x0
   1790c:	b.eq	179b4 <elf_update@@ELFUTILS_1.0+0x3efc>  // b.none
   17910:	ldr	x0, [sp, #40]
   17914:	ldr	w5, [x0, #36]
   17918:	add	x0, sp, #0x8, lsl #12
   1791c:	ldr	x0, [x0, #4256]
   17920:	ldr	x1, [x0, #24]
   17924:	add	x0, sp, #0x8, lsl #12
   17928:	ldr	x0, [x0, #4176]
   1792c:	add	x1, x1, x0
   17930:	add	x0, sp, #0x8, lsl #12
   17934:	ldr	x0, [x0, #4296]
   17938:	sub	x0, x1, x0
   1793c:	mov	x2, x0
   17940:	add	x1, sp, #0x8, lsl #12
   17944:	add	x1, x1, #0x40
   17948:	add	x0, sp, #0x8, lsl #12
   1794c:	add	x0, x0, #0x48
   17950:	mov	x4, x1
   17954:	mov	x3, x0
   17958:	add	x0, sp, #0x8, lsl #12
   1795c:	ldr	x1, [x0, #4296]
   17960:	mov	w0, w5
   17964:	bl	1707c <elf_update@@ELFUTILS_1.0+0x35c4>
   17968:	cmp	w0, #0x0
   1796c:	cset	w0, ne  // ne = any
   17970:	and	w0, w0, #0xff
   17974:	and	x0, x0, #0xff
   17978:	cmp	x0, #0x0
   1797c:	b.eq	179b4 <elf_update@@ELFUTILS_1.0+0x3efc>  // b.none
   17980:	nop
   17984:	b	17994 <elf_update@@ELFUTILS_1.0+0x3edc>
   17988:	nop
   1798c:	b	17994 <elf_update@@ELFUTILS_1.0+0x3edc>
   17990:	nop
   17994:	add	x0, sp, #0x8, lsl #12
   17998:	ldr	x0, [x0, #4280]
   1799c:	bl	32a0 <free@plt>
   179a0:	add	x0, sp, #0x8, lsl #12
   179a4:	ldr	x0, [x0, #4200]
   179a8:	bl	32a0 <free@plt>
   179ac:	mov	w0, #0x1                   	// #1
   179b0:	b	17f94 <elf_update@@ELFUTILS_1.0+0x44dc>
   179b4:	add	x0, sp, #0x8, lsl #12
   179b8:	ldr	x0, [x0, #4256]
   179bc:	ldr	x0, [x0, #24]
   179c0:	add	x1, sp, #0x8, lsl #12
   179c4:	ldr	x1, [x1, #4176]
   179c8:	add	x0, x1, x0
   179cc:	add	x1, sp, #0x8, lsl #12
   179d0:	str	x0, [x1, #4296]
   179d4:	add	x0, sp, #0x8, lsl #12
   179d8:	ldr	x0, [x0, #4192]
   179dc:	ldr	w0, [x0, #156]
   179e0:	add	x1, sp, #0x8, lsl #12
   179e4:	ldr	x1, [x1, #4256]
   179e8:	ldr	w1, [x1, #56]
   179ec:	orr	w0, w0, w1
   179f0:	ldr	x1, [sp, #40]
   179f4:	ldr	w1, [x1, #56]
   179f8:	orr	w0, w0, w1
   179fc:	and	w0, w0, #0x1
   17a00:	cmp	w0, #0x0
   17a04:	b.eq	17bd8 <elf_update@@ELFUTILS_1.0+0x4120>  // b.none
   17a08:	add	x0, sp, #0x8, lsl #12
   17a0c:	ldr	x0, [x0, #4256]
   17a10:	ldr	x0, [x0]
   17a14:	add	x1, sp, #0x8, lsl #12
   17a18:	str	x0, [x1, #4240]
   17a1c:	ldr	w0, [sp, #36]
   17a20:	cmp	w0, #0x0
   17a24:	cset	w0, ne  // ne = any
   17a28:	and	w0, w0, #0xff
   17a2c:	and	x0, x0, #0xff
   17a30:	cmp	x0, #0x0
   17a34:	b.eq	17ae4 <elf_update@@ELFUTILS_1.0+0x402c>  // b.none
   17a38:	add	x0, sp, #0x38
   17a3c:	add	x1, sp, #0x8, lsl #12
   17a40:	str	x0, [x1, #4240]
   17a44:	add	x0, sp, #0x8, lsl #12
   17a48:	ldr	x0, [x0, #4256]
   17a4c:	ldr	x0, [x0, #16]
   17a50:	cmp	x0, #0x8, lsl #12
   17a54:	b.ls	17a9c <elf_update@@ELFUTILS_1.0+0x3fe4>  // b.plast
   17a58:	add	x0, sp, #0x8, lsl #12
   17a5c:	ldr	x0, [x0, #4256]
   17a60:	ldr	x0, [x0, #16]
   17a64:	bl	3140 <malloc@plt>
   17a68:	add	x1, sp, #0x8, lsl #12
   17a6c:	str	x0, [x1, #4240]
   17a70:	add	x0, sp, #0x8, lsl #12
   17a74:	ldr	x0, [x0, #4240]
   17a78:	cmp	x0, #0x0
   17a7c:	cset	w0, eq  // eq = none
   17a80:	and	w0, w0, #0xff
   17a84:	and	x0, x0, #0xff
   17a88:	cmp	x0, #0x0
   17a8c:	b.eq	17a9c <elf_update@@ELFUTILS_1.0+0x3fe4>  // b.none
   17a90:	mov	w0, #0x8                   	// #8
   17a94:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   17a98:	b	17994 <elf_update@@ELFUTILS_1.0+0x3edc>
   17a9c:	add	x0, sp, #0x8, lsl #12
   17aa0:	ldr	x0, [x0, #4256]
   17aa4:	ldr	w1, [x0, #8]
   17aa8:	adrp	x0, 35000 <elf_compress_gnu@@ELFUTILS_1.7+0x1495c>
   17aac:	add	x0, x0, #0xbd8
   17ab0:	mov	w1, w1
   17ab4:	ldr	x4, [x0, x1, lsl #3]
   17ab8:	add	x0, sp, #0x8, lsl #12
   17abc:	ldr	x0, [x0, #4256]
   17ac0:	ldr	x1, [x0]
   17ac4:	add	x0, sp, #0x8, lsl #12
   17ac8:	ldr	x0, [x0, #4256]
   17acc:	ldr	x0, [x0, #16]
   17ad0:	mov	w3, #0x1                   	// #1
   17ad4:	mov	x2, x0
   17ad8:	add	x0, sp, #0x8, lsl #12
   17adc:	ldr	x0, [x0, #4240]
   17ae0:	blr	x4
   17ae4:	ldr	x0, [sp, #40]
   17ae8:	ldr	w4, [x0, #36]
   17aec:	add	x0, sp, #0x8, lsl #12
   17af0:	ldr	x0, [x0, #4256]
   17af4:	ldr	x0, [x0, #16]
   17af8:	add	x1, sp, #0x8, lsl #12
   17afc:	ldr	x3, [x1, #4296]
   17b00:	mov	x2, x0
   17b04:	add	x0, sp, #0x8, lsl #12
   17b08:	ldr	x1, [x0, #4240]
   17b0c:	mov	w0, w4
   17b10:	bl	15d34 <elf_update@@ELFUTILS_1.0+0x227c>
   17b14:	add	x1, sp, #0x8, lsl #12
   17b18:	str	x0, [x1, #4168]
   17b1c:	add	x0, sp, #0x8, lsl #12
   17b20:	ldr	x0, [x0, #4256]
   17b24:	ldr	x1, [x0, #16]
   17b28:	add	x0, sp, #0x8, lsl #12
   17b2c:	ldr	x0, [x0, #4168]
   17b30:	cmp	x1, x0
   17b34:	cset	w0, ne  // ne = any
   17b38:	and	w0, w0, #0xff
   17b3c:	and	x0, x0, #0xff
   17b40:	cmp	x0, #0x0
   17b44:	b.eq	17b90 <elf_update@@ELFUTILS_1.0+0x40d8>  // b.none
   17b48:	add	x0, sp, #0x8, lsl #12
   17b4c:	ldr	x0, [x0, #4256]
   17b50:	ldr	x0, [x0]
   17b54:	add	x1, sp, #0x8, lsl #12
   17b58:	ldr	x1, [x1, #4240]
   17b5c:	cmp	x1, x0
   17b60:	b.eq	17b84 <elf_update@@ELFUTILS_1.0+0x40cc>  // b.none
   17b64:	add	x0, sp, #0x38
   17b68:	add	x1, sp, #0x8, lsl #12
   17b6c:	ldr	x1, [x1, #4240]
   17b70:	cmp	x1, x0
   17b74:	b.eq	17b84 <elf_update@@ELFUTILS_1.0+0x40cc>  // b.none
   17b78:	add	x0, sp, #0x8, lsl #12
   17b7c:	ldr	x0, [x0, #4240]
   17b80:	bl	32a0 <free@plt>
   17b84:	mov	w0, #0x14                  	// #20
   17b88:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   17b8c:	b	17994 <elf_update@@ELFUTILS_1.0+0x3edc>
   17b90:	add	x0, sp, #0x8, lsl #12
   17b94:	ldr	x0, [x0, #4256]
   17b98:	ldr	x0, [x0]
   17b9c:	add	x1, sp, #0x8, lsl #12
   17ba0:	ldr	x1, [x1, #4240]
   17ba4:	cmp	x1, x0
   17ba8:	b.eq	17bcc <elf_update@@ELFUTILS_1.0+0x4114>  // b.none
   17bac:	add	x0, sp, #0x38
   17bb0:	add	x1, sp, #0x8, lsl #12
   17bb4:	ldr	x1, [x1, #4240]
   17bb8:	cmp	x1, x0
   17bbc:	b.eq	17bcc <elf_update@@ELFUTILS_1.0+0x4114>  // b.none
   17bc0:	add	x0, sp, #0x8, lsl #12
   17bc4:	ldr	x0, [x0, #4240]
   17bc8:	bl	32a0 <free@plt>
   17bcc:	mov	w0, #0x1                   	// #1
   17bd0:	add	x1, sp, #0x9, lsl #12
   17bd4:	strb	w0, [x1, #159]
   17bd8:	add	x0, sp, #0x8, lsl #12
   17bdc:	ldr	x0, [x0, #4256]
   17be0:	ldr	x1, [x0, #16]
   17be4:	add	x0, sp, #0x8, lsl #12
   17be8:	ldr	x0, [x0, #4296]
   17bec:	add	x0, x1, x0
   17bf0:	add	x1, sp, #0x8, lsl #12
   17bf4:	str	x0, [x1, #4296]
   17bf8:	add	x0, sp, #0x8, lsl #12
   17bfc:	ldr	x0, [x0, #4256]
   17c00:	ldr	w0, [x0, #56]
   17c04:	and	w1, w0, #0xfffffffe
   17c08:	add	x0, sp, #0x8, lsl #12
   17c0c:	ldr	x0, [x0, #4256]
   17c10:	str	w1, [x0, #56]
   17c14:	add	x0, sp, #0x8, lsl #12
   17c18:	ldr	x0, [x0, #4256]
   17c1c:	ldr	x0, [x0, #48]
   17c20:	add	x1, sp, #0x8, lsl #12
   17c24:	str	x0, [x1, #4256]
   17c28:	add	x0, sp, #0x8, lsl #12
   17c2c:	ldr	x0, [x0, #4256]
   17c30:	cmp	x0, #0x0
   17c34:	b.ne	17890 <elf_update@@ELFUTILS_1.0+0x3dd8>  // b.any
   17c38:	b	17ce8 <elf_update@@ELFUTILS_1.0+0x4230>
   17c3c:	add	x0, sp, #0x8, lsl #12
   17c40:	ldr	x1, [x0, #4176]
   17c44:	add	x0, sp, #0x8, lsl #12
   17c48:	ldr	x0, [x0, #4296]
   17c4c:	cmp	x1, x0
   17c50:	b.le	17cc4 <elf_update@@ELFUTILS_1.0+0x420c>
   17c54:	add	x0, sp, #0x9, lsl #12
   17c58:	ldrb	w0, [x0, #239]
   17c5c:	cmp	w0, #0x0
   17c60:	b.eq	17cc4 <elf_update@@ELFUTILS_1.0+0x420c>  // b.none
   17c64:	ldr	x0, [sp, #40]
   17c68:	ldr	w5, [x0, #36]
   17c6c:	add	x0, sp, #0x8, lsl #12
   17c70:	ldr	x1, [x0, #4176]
   17c74:	add	x0, sp, #0x8, lsl #12
   17c78:	ldr	x0, [x0, #4296]
   17c7c:	sub	x0, x1, x0
   17c80:	mov	x2, x0
   17c84:	add	x1, sp, #0x8, lsl #12
   17c88:	add	x1, x1, #0x40
   17c8c:	add	x0, sp, #0x8, lsl #12
   17c90:	add	x0, x0, #0x48
   17c94:	mov	x4, x1
   17c98:	mov	x3, x0
   17c9c:	add	x0, sp, #0x8, lsl #12
   17ca0:	ldr	x1, [x0, #4296]
   17ca4:	mov	w0, w5
   17ca8:	bl	1707c <elf_update@@ELFUTILS_1.0+0x35c4>
   17cac:	cmp	w0, #0x0
   17cb0:	cset	w0, ne  // ne = any
   17cb4:	and	w0, w0, #0xff
   17cb8:	and	x0, x0, #0xff
   17cbc:	cmp	x0, #0x0
   17cc0:	b.ne	17988 <elf_update@@ELFUTILS_1.0+0x3ed0>  // b.any
   17cc4:	add	x0, sp, #0x8, lsl #12
   17cc8:	ldr	x0, [x0, #4184]
   17ccc:	ldr	w0, [x0, #20]
   17cd0:	mov	w0, w0
   17cd4:	add	x1, sp, #0x8, lsl #12
   17cd8:	ldr	x1, [x1, #4176]
   17cdc:	add	x0, x1, x0
   17ce0:	add	x1, sp, #0x8, lsl #12
   17ce4:	str	x0, [x1, #4296]
   17ce8:	add	x0, sp, #0x9, lsl #12
   17cec:	ldrb	w0, [x0, #159]
   17cf0:	add	x1, sp, #0x9, lsl #12
   17cf4:	strb	w0, [x1, #239]
   17cf8:	b	17d08 <elf_update@@ELFUTILS_1.0+0x4250>
   17cfc:	nop
   17d00:	b	17d08 <elf_update@@ELFUTILS_1.0+0x4250>
   17d04:	nop
   17d08:	ldr	w0, [sp, #36]
   17d0c:	cmp	w0, #0x0
   17d10:	cset	w0, ne  // ne = any
   17d14:	and	w0, w0, #0xff
   17d18:	and	x0, x0, #0xff
   17d1c:	cmp	x0, #0x0
   17d20:	b.eq	17d80 <elf_update@@ELFUTILS_1.0+0x42c8>  // b.none
   17d24:	adrp	x0, 35000 <elf_compress_gnu@@ELFUTILS_1.7+0x1495c>
   17d28:	add	x0, x0, #0xbd8
   17d2c:	ldr	x4, [x0, #72]
   17d30:	add	x0, sp, #0x8, lsl #12
   17d34:	ldr	x0, [x0, #4192]
   17d38:	ldr	x1, [x0, #128]
   17d3c:	mov	x0, x1
   17d40:	lsl	x0, x0, #2
   17d44:	add	x0, x0, x1
   17d48:	lsl	x0, x0, #3
   17d4c:	mov	x1, x0
   17d50:	add	x0, sp, #0x8, lsl #12
   17d54:	ldr	x0, [x0, #4288]
   17d58:	add	x5, x0, x1
   17d5c:	add	x0, sp, #0x8, lsl #12
   17d60:	ldr	x0, [x0, #4192]
   17d64:	ldr	x0, [x0, #144]
   17d68:	mov	w3, #0x1                   	// #1
   17d6c:	mov	x2, #0x28                  	// #40
   17d70:	mov	x1, x0
   17d74:	mov	x0, x5
   17d78:	blr	x4
   17d7c:	b	17dec <elf_update@@ELFUTILS_1.0+0x4334>
   17d80:	ldr	x0, [sp, #40]
   17d84:	ldr	x0, [x0, #80]
   17d88:	cmp	x0, #0x0
   17d8c:	b.eq	17da4 <elf_update@@ELFUTILS_1.0+0x42ec>  // b.none
   17d90:	ldr	x0, [sp, #40]
   17d94:	ldr	w0, [x0, #56]
   17d98:	and	w0, w0, #0x1
   17d9c:	cmp	w0, #0x0
   17da0:	b.eq	17dec <elf_update@@ELFUTILS_1.0+0x4334>  // b.none
   17da4:	add	x0, sp, #0x8, lsl #12
   17da8:	ldr	x0, [x0, #4192]
   17dac:	ldr	x1, [x0, #128]
   17db0:	mov	x0, x1
   17db4:	lsl	x0, x0, #2
   17db8:	add	x0, x0, x1
   17dbc:	lsl	x0, x0, #3
   17dc0:	mov	x1, x0
   17dc4:	add	x0, sp, #0x8, lsl #12
   17dc8:	ldr	x0, [x0, #4288]
   17dcc:	add	x3, x0, x1
   17dd0:	add	x0, sp, #0x8, lsl #12
   17dd4:	ldr	x0, [x0, #4192]
   17dd8:	ldr	x0, [x0, #144]
   17ddc:	mov	x2, #0x28                  	// #40
   17de0:	mov	x1, x0
   17de4:	mov	x0, x3
   17de8:	bl	30a0 <memcpy@plt>
   17dec:	add	x0, sp, #0x8, lsl #12
   17df0:	ldr	x0, [x0, #4192]
   17df4:	ldr	w1, [x0, #152]
   17df8:	add	x0, sp, #0x8, lsl #12
   17dfc:	ldr	w0, [x0, #4276]
   17e00:	orr	w0, w1, w0
   17e04:	add	x1, sp, #0x8, lsl #12
   17e08:	str	w0, [x1, #4276]
   17e0c:	add	x0, sp, #0x8, lsl #12
   17e10:	ldr	x0, [x0, #4192]
   17e14:	ldr	w0, [x0, #152]
   17e18:	and	w1, w0, #0xfffffffe
   17e1c:	add	x0, sp, #0x8, lsl #12
   17e20:	ldr	x0, [x0, #4192]
   17e24:	str	w1, [x0, #152]
   17e28:	add	x0, sp, #0x8, lsl #12
   17e2c:	ldr	x0, [x0, #4264]
   17e30:	add	x0, x0, #0x1
   17e34:	add	x1, sp, #0x8, lsl #12
   17e38:	str	x0, [x1, #4264]
   17e3c:	add	x0, sp, #0x8, lsl #12
   17e40:	ldr	x1, [x0, #4264]
   17e44:	ldr	x0, [sp, #24]
   17e48:	cmp	x1, x0
   17e4c:	b.cc	177a8 <elf_update@@ELFUTILS_1.0+0x3cf0>  // b.lo, b.ul, b.last
   17e50:	ldr	x0, [sp, #40]
   17e54:	ldr	w0, [x0, #56]
   17e58:	and	w0, w0, #0x1
   17e5c:	cmp	w0, #0x0
   17e60:	b.eq	17edc <elf_update@@ELFUTILS_1.0+0x4424>  // b.none
   17e64:	add	x0, sp, #0x8, lsl #12
   17e68:	ldr	x1, [x0, #4296]
   17e6c:	add	x0, sp, #0x8, lsl #12
   17e70:	ldr	x0, [x0, #4216]
   17e74:	cmp	x1, x0
   17e78:	b.ge	17edc <elf_update@@ELFUTILS_1.0+0x4424>  // b.tcont
   17e7c:	ldr	x0, [sp, #40]
   17e80:	ldr	w5, [x0, #36]
   17e84:	add	x0, sp, #0x8, lsl #12
   17e88:	ldr	x1, [x0, #4216]
   17e8c:	add	x0, sp, #0x8, lsl #12
   17e90:	ldr	x0, [x0, #4296]
   17e94:	sub	x0, x1, x0
   17e98:	mov	x2, x0
   17e9c:	add	x1, sp, #0x8, lsl #12
   17ea0:	add	x1, x1, #0x40
   17ea4:	add	x0, sp, #0x8, lsl #12
   17ea8:	add	x0, x0, #0x48
   17eac:	mov	x4, x1
   17eb0:	mov	x3, x0
   17eb4:	add	x0, sp, #0x8, lsl #12
   17eb8:	ldr	x1, [x0, #4296]
   17ebc:	mov	w0, w5
   17ec0:	bl	1707c <elf_update@@ELFUTILS_1.0+0x35c4>
   17ec4:	cmp	w0, #0x0
   17ec8:	cset	w0, ne  // ne = any
   17ecc:	and	w0, w0, #0xff
   17ed0:	and	x0, x0, #0xff
   17ed4:	cmp	x0, #0x0
   17ed8:	b.ne	17990 <elf_update@@ELFUTILS_1.0+0x3ed8>  // b.any
   17edc:	add	x0, sp, #0x8, lsl #12
   17ee0:	ldr	w0, [x0, #4276]
   17ee4:	and	w0, w0, #0x1
   17ee8:	cmp	w0, #0x0
   17eec:	b.eq	17f64 <elf_update@@ELFUTILS_1.0+0x44ac>  // b.none
   17ef0:	ldr	x0, [sp, #40]
   17ef4:	ldr	w4, [x0, #36]
   17ef8:	ldr	x1, [sp, #24]
   17efc:	mov	x0, x1
   17f00:	lsl	x0, x0, #2
   17f04:	add	x0, x0, x1
   17f08:	lsl	x0, x0, #3
   17f0c:	add	x1, sp, #0x8, lsl #12
   17f10:	ldr	x3, [x1, #4216]
   17f14:	mov	x2, x0
   17f18:	add	x0, sp, #0x8, lsl #12
   17f1c:	ldr	x1, [x0, #4288]
   17f20:	mov	w0, w4
   17f24:	bl	15d34 <elf_update@@ELFUTILS_1.0+0x227c>
   17f28:	mov	x2, x0
   17f2c:	ldr	x1, [sp, #24]
   17f30:	mov	x0, x1
   17f34:	lsl	x0, x0, #2
   17f38:	add	x0, x0, x1
   17f3c:	lsl	x0, x0, #3
   17f40:	cmp	x2, x0
   17f44:	cset	w0, ne  // ne = any
   17f48:	and	w0, w0, #0xff
   17f4c:	and	x0, x0, #0xff
   17f50:	cmp	x0, #0x0
   17f54:	b.eq	17f64 <elf_update@@ELFUTILS_1.0+0x44ac>  // b.none
   17f58:	mov	w0, #0x14                  	// #20
   17f5c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   17f60:	b	17994 <elf_update@@ELFUTILS_1.0+0x3edc>
   17f64:	add	x0, sp, #0x8, lsl #12
   17f68:	ldr	x0, [x0, #4280]
   17f6c:	bl	32a0 <free@plt>
   17f70:	add	x0, sp, #0x8, lsl #12
   17f74:	ldr	x0, [x0, #4200]
   17f78:	bl	32a0 <free@plt>
   17f7c:	ldr	x0, [sp, #40]
   17f80:	ldr	w0, [x0, #56]
   17f84:	and	w1, w0, #0xfffffffe
   17f88:	ldr	x0, [sp, #40]
   17f8c:	str	w1, [x0, #56]
   17f90:	mov	w0, #0x0                   	// #0
   17f94:	ldp	x29, x30, [sp]
   17f98:	mov	x12, #0x90f0                	// #37104
   17f9c:	add	sp, sp, x12
   17fa0:	ret
   17fa4:	stp	x29, x30, [sp, #-80]!
   17fa8:	mov	x29, sp
   17fac:	str	w0, [sp, #44]
   17fb0:	str	x1, [sp, #32]
   17fb4:	str	x2, [sp, #24]
   17fb8:	str	x3, [sp, #16]
   17fbc:	str	xzr, [sp, #72]
   17fc0:	ldr	x0, [sp, #72]
   17fc4:	ldr	x1, [sp, #32]
   17fc8:	add	x4, x1, x0
   17fcc:	ldr	x0, [sp, #72]
   17fd0:	ldr	x1, [sp, #24]
   17fd4:	sub	x2, x1, x0
   17fd8:	ldr	x1, [sp, #16]
   17fdc:	ldr	x0, [sp, #72]
   17fe0:	add	x0, x1, x0
   17fe4:	mov	x3, x0
   17fe8:	mov	x1, x4
   17fec:	ldr	w0, [sp, #44]
   17ff0:	bl	32d0 <pwrite@plt>
   17ff4:	str	x0, [sp, #64]
   17ff8:	ldr	x0, [sp, #64]
   17ffc:	cmn	x0, #0x1
   18000:	b.ne	18014 <elf_update@@ELFUTILS_1.0+0x455c>  // b.any
   18004:	bl	33e0 <__errno_location@plt>
   18008:	ldr	w0, [x0]
   1800c:	cmp	w0, #0x4
   18010:	b.eq	17fc0 <elf_update@@ELFUTILS_1.0+0x4508>  // b.none
   18014:	ldr	x0, [sp, #64]
   18018:	str	x0, [sp, #56]
   1801c:	ldr	x0, [sp, #56]
   18020:	cmp	x0, #0x0
   18024:	b.gt	18044 <elf_update@@ELFUTILS_1.0+0x458c>
   18028:	ldr	x0, [sp, #56]
   1802c:	cmp	x0, #0x0
   18030:	b.ge	1803c <elf_update@@ELFUTILS_1.0+0x4584>  // b.tcont
   18034:	ldr	x0, [sp, #56]
   18038:	b	18068 <elf_update@@ELFUTILS_1.0+0x45b0>
   1803c:	ldr	x0, [sp, #72]
   18040:	b	18068 <elf_update@@ELFUTILS_1.0+0x45b0>
   18044:	ldr	x1, [sp, #72]
   18048:	ldr	x0, [sp, #56]
   1804c:	add	x0, x1, x0
   18050:	str	x0, [sp, #72]
   18054:	ldr	x0, [sp, #72]
   18058:	ldr	x1, [sp, #24]
   1805c:	cmp	x1, x0
   18060:	b.hi	17fc0 <elf_update@@ELFUTILS_1.0+0x4508>  // b.pmore
   18064:	ldr	x0, [sp, #72]
   18068:	ldp	x29, x30, [sp], #80
   1806c:	ret
   18070:	sub	sp, sp, #0x20
   18074:	str	x0, [sp, #8]
   18078:	str	x1, [sp]
   1807c:	ldr	x0, [sp, #8]
   18080:	str	x0, [sp, #24]
   18084:	ldr	x0, [sp]
   18088:	str	x0, [sp, #16]
   1808c:	ldr	x0, [sp, #24]
   18090:	ldr	x0, [x0]
   18094:	ldr	x0, [x0, #144]
   18098:	ldr	x1, [x0, #24]
   1809c:	ldr	x0, [sp, #16]
   180a0:	ldr	x0, [x0]
   180a4:	ldr	x0, [x0, #144]
   180a8:	ldr	x0, [x0, #24]
   180ac:	cmp	x1, x0
   180b0:	b.cs	180bc <elf_update@@ELFUTILS_1.0+0x4604>  // b.hs, b.nlast
   180b4:	mov	w0, #0xffffffff            	// #-1
   180b8:	b	181a0 <elf_update@@ELFUTILS_1.0+0x46e8>
   180bc:	ldr	x0, [sp, #24]
   180c0:	ldr	x0, [x0]
   180c4:	ldr	x0, [x0, #144]
   180c8:	ldr	x1, [x0, #24]
   180cc:	ldr	x0, [sp, #16]
   180d0:	ldr	x0, [x0]
   180d4:	ldr	x0, [x0, #144]
   180d8:	ldr	x0, [x0, #24]
   180dc:	cmp	x1, x0
   180e0:	b.ls	180ec <elf_update@@ELFUTILS_1.0+0x4634>  // b.plast
   180e4:	mov	w0, #0x1                   	// #1
   180e8:	b	181a0 <elf_update@@ELFUTILS_1.0+0x46e8>
   180ec:	ldr	x0, [sp, #24]
   180f0:	ldr	x0, [x0]
   180f4:	ldr	x0, [x0, #144]
   180f8:	ldr	x1, [x0, #32]
   180fc:	ldr	x0, [sp, #16]
   18100:	ldr	x0, [x0]
   18104:	ldr	x0, [x0, #144]
   18108:	ldr	x0, [x0, #32]
   1810c:	cmp	x1, x0
   18110:	b.cs	1811c <elf_update@@ELFUTILS_1.0+0x4664>  // b.hs, b.nlast
   18114:	mov	w0, #0xffffffff            	// #-1
   18118:	b	181a0 <elf_update@@ELFUTILS_1.0+0x46e8>
   1811c:	ldr	x0, [sp, #24]
   18120:	ldr	x0, [x0]
   18124:	ldr	x0, [x0, #144]
   18128:	ldr	x1, [x0, #32]
   1812c:	ldr	x0, [sp, #16]
   18130:	ldr	x0, [x0]
   18134:	ldr	x0, [x0, #144]
   18138:	ldr	x0, [x0, #32]
   1813c:	cmp	x1, x0
   18140:	b.ls	1814c <elf_update@@ELFUTILS_1.0+0x4694>  // b.plast
   18144:	mov	w0, #0x1                   	// #1
   18148:	b	181a0 <elf_update@@ELFUTILS_1.0+0x46e8>
   1814c:	ldr	x0, [sp, #24]
   18150:	ldr	x0, [x0]
   18154:	ldr	x1, [x0, #128]
   18158:	ldr	x0, [sp, #16]
   1815c:	ldr	x0, [x0]
   18160:	ldr	x0, [x0, #128]
   18164:	cmp	x1, x0
   18168:	b.cs	18174 <elf_update@@ELFUTILS_1.0+0x46bc>  // b.hs, b.nlast
   1816c:	mov	w0, #0xffffffff            	// #-1
   18170:	b	181a0 <elf_update@@ELFUTILS_1.0+0x46e8>
   18174:	ldr	x0, [sp, #24]
   18178:	ldr	x0, [x0]
   1817c:	ldr	x1, [x0, #128]
   18180:	ldr	x0, [sp, #16]
   18184:	ldr	x0, [x0]
   18188:	ldr	x0, [x0, #128]
   1818c:	cmp	x1, x0
   18190:	b.ls	1819c <elf_update@@ELFUTILS_1.0+0x46e4>  // b.plast
   18194:	mov	w0, #0x1                   	// #1
   18198:	b	181a0 <elf_update@@ELFUTILS_1.0+0x46e8>
   1819c:	mov	w0, #0x0                   	// #0
   181a0:	add	sp, sp, #0x20
   181a4:	ret
   181a8:	stp	x29, x30, [sp, #-48]!
   181ac:	mov	x29, sp
   181b0:	str	x0, [sp, #24]
   181b4:	str	x1, [sp, #16]
   181b8:	ldr	x0, [sp, #24]
   181bc:	str	x0, [sp, #40]
   181c0:	str	xzr, [sp, #32]
   181c4:	b	1820c <elf_update@@ELFUTILS_1.0+0x4754>
   181c8:	ldr	x2, [sp, #40]
   181cc:	add	x0, x2, #0x8
   181d0:	str	x0, [sp, #40]
   181d4:	ldr	x1, [sp, #32]
   181d8:	mov	x0, x1
   181dc:	lsl	x0, x0, #1
   181e0:	add	x0, x0, x1
   181e4:	lsl	x0, x0, #2
   181e8:	add	x0, x0, x1
   181ec:	lsl	x0, x0, #4
   181f0:	add	x0, x0, #0x10
   181f4:	ldr	x1, [sp, #16]
   181f8:	add	x0, x1, x0
   181fc:	str	x0, [x2]
   18200:	ldr	x0, [sp, #32]
   18204:	add	x0, x0, #0x1
   18208:	str	x0, [sp, #32]
   1820c:	ldr	x0, [sp, #16]
   18210:	ldr	w0, [x0]
   18214:	mov	w0, w0
   18218:	ldr	x1, [sp, #32]
   1821c:	cmp	x1, x0
   18220:	b.cc	181c8 <elf_update@@ELFUTILS_1.0+0x4710>  // b.lo, b.ul, b.last
   18224:	ldr	x0, [sp, #16]
   18228:	ldr	x0, [x0, #8]
   1822c:	str	x0, [sp, #16]
   18230:	ldr	x0, [sp, #16]
   18234:	cmp	x0, #0x0
   18238:	b.ne	181c0 <elf_update@@ELFUTILS_1.0+0x4708>  // b.any
   1823c:	ldr	x1, [sp, #40]
   18240:	ldr	x0, [sp, #24]
   18244:	sub	x0, x1, x0
   18248:	asr	x0, x0, #3
   1824c:	mov	x1, x0
   18250:	adrp	x0, 18000 <elf_update@@ELFUTILS_1.0+0x4548>
   18254:	add	x3, x0, #0x70
   18258:	mov	x2, #0x8                   	// #8
   1825c:	ldr	x0, [sp, #24]
   18260:	bl	3130 <qsort@plt>
   18264:	nop
   18268:	ldp	x29, x30, [sp], #48
   1826c:	ret
   18270:	stp	x29, x30, [sp, #-80]!
   18274:	mov	x29, sp
   18278:	str	x0, [sp, #56]
   1827c:	str	x1, [sp, #48]
   18280:	str	x2, [sp, #40]
   18284:	str	x3, [sp, #32]
   18288:	str	x4, [sp, #24]
   1828c:	str	xzr, [sp, #72]
   18290:	ldr	x1, [sp, #48]
   18294:	ldr	x0, [sp, #32]
   18298:	cmp	x1, x0
   1829c:	b.cs	182fc <elf_update@@ELFUTILS_1.0+0x4844>  // b.hs, b.nlast
   182a0:	ldr	x1, [sp, #40]
   182a4:	ldr	x0, [sp, #56]
   182a8:	add	x0, x1, x0
   182ac:	ldr	x1, [sp, #32]
   182b0:	cmp	x1, x0
   182b4:	b.ls	182d0 <elf_update@@ELFUTILS_1.0+0x4818>  // b.plast
   182b8:	ldr	x1, [sp, #40]
   182bc:	ldr	x0, [sp, #56]
   182c0:	add	x1, x1, x0
   182c4:	ldr	x0, [sp, #48]
   182c8:	sub	x0, x1, x0
   182cc:	b	182dc <elf_update@@ELFUTILS_1.0+0x4824>
   182d0:	ldr	x1, [sp, #32]
   182d4:	ldr	x0, [sp, #48]
   182d8:	sub	x0, x1, x0
   182dc:	str	x0, [sp, #72]
   182e0:	adrp	x0, 36000 <elf_compress_gnu@@ELFUTILS_1.7+0x1595c>
   182e4:	add	x0, x0, #0x1c8
   182e8:	ldr	w0, [x0]
   182ec:	ldr	x2, [sp, #72]
   182f0:	mov	w1, w0
   182f4:	ldr	x0, [sp, #48]
   182f8:	bl	3180 <memset@plt>
   182fc:	ldr	x1, [sp, #48]
   18300:	ldr	x0, [sp, #72]
   18304:	add	x1, x1, x0
   18308:	ldr	x2, [sp, #40]
   1830c:	ldr	x0, [sp, #56]
   18310:	add	x0, x2, x0
   18314:	cmp	x1, x0
   18318:	b.eq	1837c <elf_update@@ELFUTILS_1.0+0x48c4>  // b.none
   1831c:	ldr	x1, [sp, #40]
   18320:	ldr	x0, [sp, #56]
   18324:	add	x0, x1, x0
   18328:	ldr	x1, [sp, #24]
   1832c:	cmp	x1, x0
   18330:	b.cs	1837c <elf_update@@ELFUTILS_1.0+0x48c4>  // b.hs, b.nlast
   18334:	ldr	x0, [sp, #24]
   18338:	ldr	x2, [sp, #40]
   1833c:	ldr	x1, [sp, #40]
   18340:	cmp	x2, x0
   18344:	csel	x0, x1, x0, cs  // cs = hs, nlast
   18348:	str	x0, [sp, #64]
   1834c:	adrp	x0, 36000 <elf_compress_gnu@@ELFUTILS_1.7+0x1595c>
   18350:	add	x0, x0, #0x1c8
   18354:	ldr	w3, [x0]
   18358:	ldr	x1, [sp, #40]
   1835c:	ldr	x0, [sp, #56]
   18360:	add	x1, x1, x0
   18364:	ldr	x0, [sp, #64]
   18368:	sub	x0, x1, x0
   1836c:	mov	x2, x0
   18370:	mov	w1, w3
   18374:	ldr	x0, [sp, #64]
   18378:	bl	3180 <memset@plt>
   1837c:	nop
   18380:	ldp	x29, x30, [sp], #80
   18384:	ret
   18388:	stp	x29, x30, [sp, #-272]!
   1838c:	mov	x29, sp
   18390:	stp	x19, x20, [sp, #16]
   18394:	str	x0, [sp, #56]
   18398:	str	w1, [sp, #52]
   1839c:	str	x2, [sp, #40]
   183a0:	strb	wzr, [sp, #271]
   183a4:	ldr	x0, [sp, #56]
   183a8:	ldr	x0, [x0, #72]
   183ac:	str	x0, [sp, #208]
   183b0:	ldr	x0, [sp, #56]
   183b4:	ldr	w1, [x0, #116]
   183b8:	ldr	x0, [sp, #56]
   183bc:	ldr	w0, [x0, #56]
   183c0:	orr	w0, w1, w0
   183c4:	and	w0, w0, #0x1
   183c8:	cmp	w0, #0x0
   183cc:	b.eq	184bc <elf_update@@ELFUTILS_1.0+0x4a04>  // b.none
   183d0:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   183d4:	add	x0, x0, #0x3d0
   183d8:	ldr	x0, [x0, #240]
   183dc:	cmp	x0, #0x40
   183e0:	b.eq	18404 <elf_update@@ELFUTILS_1.0+0x494c>  // b.none
   183e4:	adrp	x0, 22000 <elf_compress_gnu@@ELFUTILS_1.7+0x195c>
   183e8:	add	x3, x0, #0x1a8
   183ec:	mov	w2, #0x8c                  	// #140
   183f0:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   183f4:	add	x1, x0, #0xf30
   183f8:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   183fc:	add	x0, x0, #0xf48
   18400:	bl	33d0 <__assert_fail@plt>
   18404:	ldr	w0, [sp, #52]
   18408:	cmp	w0, #0x0
   1840c:	cset	w0, ne  // ne = any
   18410:	and	w0, w0, #0xff
   18414:	and	x0, x0, #0xff
   18418:	cmp	x0, #0x0
   1841c:	b.eq	18454 <elf_update@@ELFUTILS_1.0+0x499c>  // b.none
   18420:	adrp	x0, 35000 <elf_compress_gnu@@ELFUTILS_1.7+0x1495c>
   18424:	add	x0, x0, #0xbd8
   18428:	ldr	x4, [x0, #240]
   1842c:	ldr	x0, [sp, #56]
   18430:	ldr	x0, [x0]
   18434:	ldr	x1, [sp, #56]
   18438:	ldr	x1, [x1, #40]
   1843c:	add	x0, x0, x1
   18440:	mov	w3, #0x1                   	// #1
   18444:	mov	x2, #0x40                  	// #64
   18448:	ldr	x1, [sp, #208]
   1844c:	blr	x4
   18450:	b	18494 <elf_update@@ELFUTILS_1.0+0x49dc>
   18454:	ldr	x0, [sp, #56]
   18458:	ldr	x0, [x0]
   1845c:	ldr	x1, [sp, #56]
   18460:	ldr	x1, [x1, #40]
   18464:	add	x0, x0, x1
   18468:	ldr	x1, [sp, #208]
   1846c:	cmp	x1, x0
   18470:	b.eq	18494 <elf_update@@ELFUTILS_1.0+0x49dc>  // b.none
   18474:	ldr	x0, [sp, #56]
   18478:	ldr	x0, [x0]
   1847c:	ldr	x1, [sp, #56]
   18480:	ldr	x1, [x1, #40]
   18484:	add	x0, x0, x1
   18488:	mov	x2, #0x40                  	// #64
   1848c:	ldr	x1, [sp, #208]
   18490:	bl	30a0 <memcpy@plt>
   18494:	ldr	x0, [sp, #56]
   18498:	ldr	w0, [x0, #116]
   1849c:	and	w1, w0, #0xfffffffe
   184a0:	ldr	x0, [sp, #56]
   184a4:	str	w1, [x0, #116]
   184a8:	ldr	x0, [sp, #56]
   184ac:	ldr	x0, [x0, #88]
   184b0:	cmp	x0, #0x0
   184b4:	cset	w0, eq  // eq = none
   184b8:	strb	w0, [sp, #271]
   184bc:	add	x0, sp, #0x48
   184c0:	mov	x1, x0
   184c4:	ldr	x0, [sp, #56]
   184c8:	bl	1d2c0 <gelf_update_verdaux@@ELFUTILS_1.0+0xf4>
   184cc:	cmp	w0, #0x0
   184d0:	cset	w0, ne  // ne = any
   184d4:	and	w0, w0, #0xff
   184d8:	and	x0, x0, #0xff
   184dc:	cmp	x0, #0x0
   184e0:	b.eq	184ec <elf_update@@ELFUTILS_1.0+0x4a34>  // b.none
   184e4:	mov	w0, #0xffffffff            	// #-1
   184e8:	b	19294 <elf_update@@ELFUTILS_1.0+0x57dc>
   184ec:	ldr	x0, [sp, #56]
   184f0:	ldr	x0, [x0, #88]
   184f4:	cmp	x0, #0x0
   184f8:	b.eq	186b4 <elf_update@@ELFUTILS_1.0+0x4bfc>  // b.none
   184fc:	ldr	x0, [sp, #56]
   18500:	ldr	w1, [x0, #120]
   18504:	ldr	x0, [sp, #56]
   18508:	ldr	w0, [x0, #56]
   1850c:	orr	w0, w1, w0
   18510:	and	w0, w0, #0x1
   18514:	cmp	w0, #0x0
   18518:	b.eq	186b4 <elf_update@@ELFUTILS_1.0+0x4bfc>  // b.none
   1851c:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   18520:	add	x0, x0, #0x3d0
   18524:	ldr	x0, [x0, #264]
   18528:	cmp	x0, #0x38
   1852c:	b.eq	18550 <elf_update@@ELFUTILS_1.0+0x4a98>  // b.none
   18530:	adrp	x0, 22000 <elf_compress_gnu@@ELFUTILS_1.7+0x195c>
   18534:	add	x3, x0, #0x1a8
   18538:	mov	w2, #0xaf                  	// #175
   1853c:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   18540:	add	x1, x0, #0xf30
   18544:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   18548:	add	x0, x0, #0xf98
   1854c:	bl	33d0 <__assert_fail@plt>
   18550:	ldr	x0, [sp, #208]
   18554:	ldr	x1, [x0, #32]
   18558:	ldr	x0, [sp, #208]
   1855c:	ldrh	w0, [x0, #52]
   18560:	and	x0, x0, #0xffff
   18564:	cmp	x1, x0
   18568:	b.ls	185c8 <elf_update@@ELFUTILS_1.0+0x4b10>  // b.plast
   1856c:	ldr	x0, [sp, #56]
   18570:	ldr	x1, [x0]
   18574:	ldr	x0, [sp, #56]
   18578:	ldr	x0, [x0, #40]
   1857c:	mov	x2, x0
   18580:	ldr	x0, [sp, #208]
   18584:	ldrh	w0, [x0, #52]
   18588:	and	x0, x0, #0xffff
   1858c:	add	x0, x2, x0
   18590:	add	x3, x1, x0
   18594:	adrp	x0, 36000 <elf_compress_gnu@@ELFUTILS_1.7+0x1595c>
   18598:	add	x0, x0, #0x1c8
   1859c:	ldr	w4, [x0]
   185a0:	ldr	x0, [sp, #208]
   185a4:	ldr	x1, [x0, #32]
   185a8:	ldr	x0, [sp, #208]
   185ac:	ldrh	w0, [x0, #52]
   185b0:	and	x0, x0, #0xffff
   185b4:	sub	x0, x1, x0
   185b8:	mov	x2, x0
   185bc:	mov	w1, w4
   185c0:	mov	x0, x3
   185c4:	bl	3180 <memset@plt>
   185c8:	ldr	w0, [sp, #52]
   185cc:	cmp	w0, #0x0
   185d0:	cset	w0, ne  // ne = any
   185d4:	and	w0, w0, #0xff
   185d8:	and	x0, x0, #0xff
   185dc:	cmp	x0, #0x0
   185e0:	b.eq	18648 <elf_update@@ELFUTILS_1.0+0x4b90>  // b.none
   185e4:	adrp	x0, 35000 <elf_compress_gnu@@ELFUTILS_1.7+0x1495c>
   185e8:	add	x0, x0, #0xbd8
   185ec:	ldr	x4, [x0, #264]
   185f0:	ldr	x0, [sp, #56]
   185f4:	ldr	x1, [x0]
   185f8:	ldr	x0, [sp, #56]
   185fc:	ldr	x0, [x0, #40]
   18600:	mov	x2, x0
   18604:	ldr	x0, [sp, #208]
   18608:	ldr	x0, [x0, #32]
   1860c:	add	x0, x2, x0
   18610:	add	x5, x1, x0
   18614:	ldr	x0, [sp, #56]
   18618:	ldr	x6, [x0, #88]
   1861c:	ldr	x1, [sp, #72]
   18620:	mov	x0, x1
   18624:	lsl	x0, x0, #3
   18628:	sub	x0, x0, x1
   1862c:	lsl	x0, x0, #3
   18630:	mov	w3, #0x1                   	// #1
   18634:	mov	x2, x0
   18638:	mov	x1, x6
   1863c:	mov	x0, x5
   18640:	blr	x4
   18644:	b	18698 <elf_update@@ELFUTILS_1.0+0x4be0>
   18648:	ldr	x0, [sp, #56]
   1864c:	ldr	x1, [x0]
   18650:	ldr	x0, [sp, #56]
   18654:	ldr	x0, [x0, #40]
   18658:	mov	x2, x0
   1865c:	ldr	x0, [sp, #208]
   18660:	ldr	x0, [x0, #32]
   18664:	add	x0, x2, x0
   18668:	add	x3, x1, x0
   1866c:	ldr	x0, [sp, #56]
   18670:	ldr	x4, [x0, #88]
   18674:	ldr	x1, [sp, #72]
   18678:	mov	x0, x1
   1867c:	lsl	x0, x0, #3
   18680:	sub	x0, x0, x1
   18684:	lsl	x0, x0, #3
   18688:	mov	x2, x0
   1868c:	mov	x1, x4
   18690:	mov	x0, x3
   18694:	bl	30b0 <memmove@plt>
   18698:	ldr	x0, [sp, #56]
   1869c:	ldr	w0, [x0, #120]
   186a0:	and	w1, w0, #0xfffffffe
   186a4:	ldr	x0, [sp, #56]
   186a8:	str	w1, [x0, #120]
   186ac:	mov	w0, #0x1                   	// #1
   186b0:	strb	w0, [sp, #271]
   186b4:	ldr	x0, [sp, #56]
   186b8:	ldr	x2, [x0]
   186bc:	ldr	x0, [sp, #56]
   186c0:	ldr	x0, [x0, #40]
   186c4:	mov	x3, x0
   186c8:	ldr	x0, [sp, #208]
   186cc:	ldr	x1, [x0, #32]
   186d0:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   186d4:	add	x0, x0, #0x3d0
   186d8:	ldr	x0, [x0, #240]
   186dc:	cmp	x1, x0
   186e0:	csel	x0, x1, x0, cs  // cs = hs, nlast
   186e4:	add	x1, x3, x0
   186e8:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   186ec:	add	x0, x0, #0x3d0
   186f0:	ldr	x3, [x0, #264]
   186f4:	ldr	x0, [sp, #72]
   186f8:	mul	x0, x3, x0
   186fc:	add	x0, x1, x0
   18700:	add	x0, x2, x0
   18704:	str	x0, [sp, #256]
   18708:	ldr	x0, [sp, #40]
   1870c:	cmp	x0, #0x0
   18710:	b.eq	191f4 <elf_update@@ELFUTILS_1.0+0x573c>  // b.none
   18714:	ldr	x1, [sp, #40]
   18718:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   1871c:	cmp	x1, x0
   18720:	cset	w0, hi  // hi = pmore
   18724:	and	w0, w0, #0xff
   18728:	and	x0, x0, #0xff
   1872c:	cmp	x0, #0x0
   18730:	b.eq	1873c <elf_update@@ELFUTILS_1.0+0x4c84>  // b.none
   18734:	mov	w0, #0x1                   	// #1
   18738:	b	19294 <elf_update@@ELFUTILS_1.0+0x57dc>
   1873c:	ldr	x0, [sp, #56]
   18740:	add	x0, x0, #0xc8
   18744:	str	x0, [sp, #200]
   18748:	ldr	x0, [sp, #40]
   1874c:	lsl	x0, x0, #3
   18750:	bl	3140 <malloc@plt>
   18754:	str	x0, [sp, #192]
   18758:	ldr	x0, [sp, #192]
   1875c:	cmp	x0, #0x0
   18760:	cset	w0, eq  // eq = none
   18764:	and	w0, w0, #0xff
   18768:	and	x0, x0, #0xff
   1876c:	cmp	x0, #0x0
   18770:	b.eq	18784 <elf_update@@ELFUTILS_1.0+0x4ccc>  // b.none
   18774:	mov	w0, #0x8                   	// #8
   18778:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1877c:	mov	w0, #0xffffffff            	// #-1
   18780:	b	19294 <elf_update@@ELFUTILS_1.0+0x57dc>
   18784:	ldr	x0, [sp, #56]
   18788:	ldr	x1, [x0]
   1878c:	ldr	x0, [sp, #56]
   18790:	ldr	x0, [x0, #40]
   18794:	mov	x2, x0
   18798:	ldr	x0, [sp, #208]
   1879c:	ldr	x0, [x0, #40]
   187a0:	add	x0, x2, x0
   187a4:	add	x0, x1, x0
   187a8:	str	x0, [sp, #184]
   187ac:	ldr	x0, [sp, #208]
   187b0:	ldrh	w0, [x0, #58]
   187b4:	and	x1, x0, #0xffff
   187b8:	ldr	x0, [sp, #40]
   187bc:	mul	x0, x1, x0
   187c0:	ldr	x1, [sp, #184]
   187c4:	add	x0, x1, x0
   187c8:	str	x0, [sp, #176]
   187cc:	ldr	x1, [sp, #200]
   187d0:	ldr	x0, [sp, #192]
   187d4:	bl	181a8 <elf_update@@ELFUTILS_1.0+0x46f0>
   187d8:	str	xzr, [sp, #248]
   187dc:	b	18a54 <elf_update@@ELFUTILS_1.0+0x4f9c>
   187e0:	ldr	x0, [sp, #248]
   187e4:	lsl	x0, x0, #3
   187e8:	ldr	x1, [sp, #192]
   187ec:	add	x0, x1, x0
   187f0:	ldr	x0, [x0]
   187f4:	str	x0, [sp, #112]
   187f8:	ldr	x0, [sp, #56]
   187fc:	ldr	w0, [x0, #124]
   18800:	cmp	w0, #0x0
   18804:	b.ne	1893c <elf_update@@ELFUTILS_1.0+0x4e84>  // b.any
   18808:	ldr	x0, [sp, #112]
   1880c:	ldr	w0, [x0, #152]
   18810:	and	w0, w0, #0x80
   18814:	cmp	w0, #0x0
   18818:	b.ne	1893c <elf_update@@ELFUTILS_1.0+0x4e84>  // b.any
   1881c:	ldr	x0, [sp, #112]
   18820:	ldr	x1, [x0, #144]
   18824:	ldr	x0, [sp, #112]
   18828:	ldr	x0, [x0, #128]
   1882c:	lsl	x0, x0, #6
   18830:	ldr	x2, [sp, #184]
   18834:	add	x0, x2, x0
   18838:	cmp	x1, x0
   1883c:	b.eq	1893c <elf_update@@ELFUTILS_1.0+0x4e84>  // b.none
   18840:	ldr	x0, [sp, #56]
   18844:	ldr	x0, [x0]
   18848:	ldr	x1, [sp, #56]
   1884c:	ldr	x1, [x1, #40]
   18850:	add	x1, x0, x1
   18854:	ldr	x0, [sp, #112]
   18858:	ldr	x0, [x0, #144]
   1885c:	cmp	x1, x0
   18860:	b.cc	18884 <elf_update@@ELFUTILS_1.0+0x4dcc>  // b.lo, b.ul, b.last
   18864:	adrp	x0, 22000 <elf_compress_gnu@@ELFUTILS_1.7+0x195c>
   18868:	add	x3, x0, #0x1a8
   1886c:	mov	w2, #0xf8                  	// #248
   18870:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   18874:	add	x1, x0, #0xf30
   18878:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   1887c:	add	x0, x0, #0xfe8
   18880:	bl	33d0 <__assert_fail@plt>
   18884:	ldr	x0, [sp, #112]
   18888:	ldr	x1, [x0, #144]
   1888c:	ldr	x0, [sp, #56]
   18890:	ldr	x2, [x0]
   18894:	ldr	x0, [sp, #56]
   18898:	ldr	x0, [x0, #40]
   1889c:	mov	x3, x0
   188a0:	ldr	x0, [sp, #56]
   188a4:	ldr	x0, [x0, #48]
   188a8:	add	x0, x3, x0
   188ac:	add	x0, x2, x0
   188b0:	cmp	x1, x0
   188b4:	b.cc	188d8 <elf_update@@ELFUTILS_1.0+0x4e20>  // b.lo, b.ul, b.last
   188b8:	adrp	x0, 22000 <elf_compress_gnu@@ELFUTILS_1.7+0x195c>
   188bc:	add	x3, x0, #0x1a8
   188c0:	mov	w2, #0xfa                  	// #250
   188c4:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   188c8:	add	x1, x0, #0xf30
   188cc:	adrp	x0, 22000 <elf_compress_gnu@@ELFUTILS_1.7+0x195c>
   188d0:	add	x0, x0, #0x40
   188d4:	bl	33d0 <__assert_fail@plt>
   188d8:	mov	x0, #0x40                  	// #64
   188dc:	bl	3140 <malloc@plt>
   188e0:	str	x0, [sp, #104]
   188e4:	ldr	x0, [sp, #104]
   188e8:	cmp	x0, #0x0
   188ec:	cset	w0, eq  // eq = none
   188f0:	and	w0, w0, #0xff
   188f4:	and	x0, x0, #0xff
   188f8:	cmp	x0, #0x0
   188fc:	b.eq	18918 <elf_update@@ELFUTILS_1.0+0x4e60>  // b.none
   18900:	ldr	x0, [sp, #192]
   18904:	bl	32a0 <free@plt>
   18908:	mov	w0, #0x8                   	// #8
   1890c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   18910:	mov	w0, #0xffffffff            	// #-1
   18914:	b	19294 <elf_update@@ELFUTILS_1.0+0x57dc>
   18918:	ldr	x0, [sp, #112]
   1891c:	ldr	x0, [x0, #144]
   18920:	mov	x2, #0x40                  	// #64
   18924:	mov	x1, x0
   18928:	ldr	x0, [sp, #104]
   1892c:	bl	30a0 <memcpy@plt>
   18930:	mov	x1, x0
   18934:	ldr	x0, [sp, #112]
   18938:	str	x1, [x0, #144]
   1893c:	ldr	x0, [sp, #56]
   18940:	ldr	x0, [x0]
   18944:	ldr	x1, [sp, #56]
   18948:	ldr	x1, [x1, #40]
   1894c:	add	x1, x0, x1
   18950:	ldr	x0, [sp, #112]
   18954:	ldr	x0, [x0]
   18958:	cmp	x1, x0
   1895c:	b.hi	18a48 <elf_update@@ELFUTILS_1.0+0x4f90>  // b.pmore
   18960:	ldr	x0, [sp, #112]
   18964:	ldr	x1, [x0]
   18968:	ldr	x0, [sp, #56]
   1896c:	ldr	x2, [x0]
   18970:	ldr	x0, [sp, #56]
   18974:	ldr	x0, [x0, #40]
   18978:	mov	x3, x0
   1897c:	ldr	x0, [sp, #56]
   18980:	ldr	x0, [x0, #48]
   18984:	add	x0, x3, x0
   18988:	add	x0, x2, x0
   1898c:	cmp	x1, x0
   18990:	b.cs	18a48 <elf_update@@ELFUTILS_1.0+0x4f90>  // b.hs, b.nlast
   18994:	ldr	x0, [sp, #56]
   18998:	ldr	x1, [x0]
   1899c:	ldr	x0, [sp, #56]
   189a0:	ldr	x0, [x0, #40]
   189a4:	mov	x2, x0
   189a8:	ldr	x0, [sp, #112]
   189ac:	ldr	x0, [x0, #144]
   189b0:	ldr	x0, [x0, #24]
   189b4:	add	x0, x2, x0
   189b8:	add	x1, x1, x0
   189bc:	ldr	x0, [sp, #112]
   189c0:	ldr	x0, [x0]
   189c4:	cmp	x1, x0
   189c8:	b.ls	18a48 <elf_update@@ELFUTILS_1.0+0x4f90>  // b.plast
   189cc:	ldr	x0, [sp, #112]
   189d0:	ldr	x0, [x0, #16]
   189d4:	bl	3140 <malloc@plt>
   189d8:	str	x0, [sp, #96]
   189dc:	ldr	x0, [sp, #96]
   189e0:	cmp	x0, #0x0
   189e4:	cset	w0, eq  // eq = none
   189e8:	and	w0, w0, #0xff
   189ec:	and	x0, x0, #0xff
   189f0:	cmp	x0, #0x0
   189f4:	b.eq	18a10 <elf_update@@ELFUTILS_1.0+0x4f58>  // b.none
   189f8:	ldr	x0, [sp, #192]
   189fc:	bl	32a0 <free@plt>
   18a00:	mov	w0, #0x8                   	// #8
   18a04:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   18a08:	mov	w0, #0xffffffff            	// #-1
   18a0c:	b	19294 <elf_update@@ELFUTILS_1.0+0x57dc>
   18a10:	ldr	x0, [sp, #112]
   18a14:	ldr	x1, [x0]
   18a18:	ldr	x0, [sp, #112]
   18a1c:	ldr	x0, [x0, #16]
   18a20:	mov	x2, x0
   18a24:	ldr	x0, [sp, #96]
   18a28:	bl	30a0 <memcpy@plt>
   18a2c:	mov	x1, x0
   18a30:	ldr	x0, [sp, #112]
   18a34:	str	x1, [x0, #168]
   18a38:	ldr	x0, [sp, #112]
   18a3c:	ldr	x1, [x0, #168]
   18a40:	ldr	x0, [sp, #112]
   18a44:	str	x1, [x0]
   18a48:	ldr	x0, [sp, #248]
   18a4c:	add	x0, x0, #0x1
   18a50:	str	x0, [sp, #248]
   18a54:	ldr	x1, [sp, #248]
   18a58:	ldr	x0, [sp, #40]
   18a5c:	cmp	x1, x0
   18a60:	b.cc	187e0 <elf_update@@ELFUTILS_1.0+0x4d28>  // b.lo, b.ul, b.last
   18a64:	str	xzr, [sp, #240]
   18a68:	b	18fe8 <elf_update@@ELFUTILS_1.0+0x5530>
   18a6c:	ldr	x0, [sp, #240]
   18a70:	lsl	x0, x0, #3
   18a74:	ldr	x1, [sp, #192]
   18a78:	add	x0, x1, x0
   18a7c:	ldr	x0, [x0]
   18a80:	str	x0, [sp, #160]
   18a84:	ldr	x0, [sp, #160]
   18a88:	ldr	x0, [x0, #128]
   18a8c:	cmp	x0, #0x0
   18a90:	b.ne	18ac8 <elf_update@@ELFUTILS_1.0+0x5010>  // b.any
   18a94:	ldr	x0, [sp, #160]
   18a98:	ldr	w0, [x0, #156]
   18a9c:	and	w0, w0, #0x1
   18aa0:	cmp	w0, #0x0
   18aa4:	b.eq	18fd8 <elf_update@@ELFUTILS_1.0+0x5520>  // b.none
   18aa8:	adrp	x0, 22000 <elf_compress_gnu@@ELFUTILS_1.7+0x195c>
   18aac:	add	x3, x0, #0x1a8
   18ab0:	mov	w2, #0x12f                 	// #303
   18ab4:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   18ab8:	add	x1, x0, #0xf30
   18abc:	adrp	x0, 22000 <elf_compress_gnu@@ELFUTILS_1.7+0x195c>
   18ac0:	add	x0, x0, #0xb0
   18ac4:	bl	33d0 <__assert_fail@plt>
   18ac8:	ldr	x0, [sp, #160]
   18acc:	ldr	x0, [x0, #144]
   18ad0:	str	x0, [sp, #152]
   18ad4:	ldr	x0, [sp, #152]
   18ad8:	ldr	w0, [x0, #4]
   18adc:	cmp	w0, #0x8
   18ae0:	b.eq	18fbc <elf_update@@ELFUTILS_1.0+0x5504>  // b.none
   18ae4:	ldr	x0, [sp, #56]
   18ae8:	ldr	x1, [x0]
   18aec:	ldr	x0, [sp, #56]
   18af0:	ldr	x0, [x0, #40]
   18af4:	mov	x2, x0
   18af8:	ldr	x0, [sp, #152]
   18afc:	ldr	x0, [x0, #24]
   18b00:	add	x0, x2, x0
   18b04:	add	x0, x1, x0
   18b08:	str	x0, [sp, #144]
   18b0c:	ldr	x0, [sp, #160]
   18b10:	str	x0, [sp, #232]
   18b14:	strb	wzr, [sp, #231]
   18b18:	ldr	x0, [sp, #160]
   18b1c:	ldr	x0, [x0, #64]
   18b20:	cmp	x0, #0x0
   18b24:	b.eq	18f68 <elf_update@@ELFUTILS_1.0+0x54b0>  // b.none
   18b28:	ldr	x0, [sp, #232]
   18b2c:	ldr	x0, [x0, #24]
   18b30:	cmp	x0, #0x0
   18b34:	b.ge	18b58 <elf_update@@ELFUTILS_1.0+0x50a0>  // b.tcont
   18b38:	adrp	x0, 22000 <elf_compress_gnu@@ELFUTILS_1.7+0x195c>
   18b3c:	add	x3, x0, #0x1a8
   18b40:	mov	w2, #0x13f                 	// #319
   18b44:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   18b48:	add	x1, x0, #0xf30
   18b4c:	adrp	x0, 22000 <elf_compress_gnu@@ELFUTILS_1.7+0x195c>
   18b50:	add	x0, x0, #0xd0
   18b54:	bl	33d0 <__assert_fail@plt>
   18b58:	ldr	x0, [sp, #232]
   18b5c:	ldr	x0, [x0, #24]
   18b60:	mov	x1, x0
   18b64:	ldr	x0, [sp, #152]
   18b68:	ldr	x0, [x0, #32]
   18b6c:	cmp	x1, x0
   18b70:	b.ls	18b94 <elf_update@@ELFUTILS_1.0+0x50dc>  // b.plast
   18b74:	adrp	x0, 22000 <elf_compress_gnu@@ELFUTILS_1.7+0x195c>
   18b78:	add	x3, x0, #0x1a8
   18b7c:	mov	w2, #0x140                 	// #320
   18b80:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   18b84:	add	x1, x0, #0xf30
   18b88:	adrp	x0, 22000 <elf_compress_gnu@@ELFUTILS_1.7+0x195c>
   18b8c:	add	x0, x0, #0xe8
   18b90:	bl	33d0 <__assert_fail@plt>
   18b94:	ldr	x0, [sp, #232]
   18b98:	ldr	x1, [x0, #16]
   18b9c:	ldr	x0, [sp, #152]
   18ba0:	ldr	x0, [x0, #32]
   18ba4:	ldr	x2, [sp, #232]
   18ba8:	ldr	x2, [x2, #24]
   18bac:	sub	x0, x0, x2
   18bb0:	cmp	x1, x0
   18bb4:	b.ls	18bd8 <elf_update@@ELFUTILS_1.0+0x5120>  // b.plast
   18bb8:	adrp	x0, 22000 <elf_compress_gnu@@ELFUTILS_1.7+0x195c>
   18bbc:	add	x3, x0, #0x1a8
   18bc0:	mov	w2, #0x141                 	// #321
   18bc4:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   18bc8:	add	x1, x0, #0xf30
   18bcc:	adrp	x0, 22000 <elf_compress_gnu@@ELFUTILS_1.7+0x195c>
   18bd0:	add	x0, x0, #0x118
   18bd4:	bl	33d0 <__assert_fail@plt>
   18bd8:	ldr	x0, [sp, #232]
   18bdc:	ldr	x0, [x0, #24]
   18be0:	mov	x1, x0
   18be4:	ldr	x0, [sp, #144]
   18be8:	add	x0, x0, x1
   18bec:	ldr	x1, [sp, #256]
   18bf0:	cmp	x1, x0
   18bf4:	b.cs	18c50 <elf_update@@ELFUTILS_1.0+0x5198>  // b.hs, b.nlast
   18bf8:	ldr	x0, [sp, #232]
   18bfc:	ldr	x0, [x0, #24]
   18c00:	cmp	x0, #0x0
   18c04:	b.eq	18c34 <elf_update@@ELFUTILS_1.0+0x517c>  // b.none
   18c08:	ldr	x0, [sp, #160]
   18c0c:	ldr	w0, [x0, #156]
   18c10:	ldr	x1, [sp, #232]
   18c14:	ldr	w1, [x1, #56]
   18c18:	orr	w0, w0, w1
   18c1c:	ldr	x1, [sp, #56]
   18c20:	ldr	w1, [x1, #56]
   18c24:	orr	w0, w0, w1
   18c28:	and	w0, w0, #0x1
   18c2c:	cmp	w0, #0x0
   18c30:	b.eq	18c50 <elf_update@@ELFUTILS_1.0+0x5198>  // b.none
   18c34:	ldr	x0, [sp, #232]
   18c38:	ldr	x0, [x0, #24]
   18c3c:	ldr	x4, [sp, #176]
   18c40:	ldr	x3, [sp, #184]
   18c44:	ldr	x2, [sp, #144]
   18c48:	ldr	x1, [sp, #256]
   18c4c:	bl	18270 <elf_update@@ELFUTILS_1.0+0x47b8>
   18c50:	ldr	x0, [sp, #232]
   18c54:	ldr	x0, [x0, #24]
   18c58:	mov	x1, x0
   18c5c:	ldr	x0, [sp, #144]
   18c60:	add	x0, x0, x1
   18c64:	str	x0, [sp, #256]
   18c68:	ldr	x0, [sp, #160]
   18c6c:	ldr	w0, [x0, #156]
   18c70:	ldr	x1, [sp, #232]
   18c74:	ldr	w1, [x1, #56]
   18c78:	orr	w0, w0, w1
   18c7c:	ldr	x1, [sp, #56]
   18c80:	ldr	w1, [x1, #56]
   18c84:	orr	w0, w0, w1
   18c88:	and	w0, w0, #0x1
   18c8c:	cmp	w0, #0x0
   18c90:	b.eq	18ed8 <elf_update@@ELFUTILS_1.0+0x5420>  // b.none
   18c94:	ldr	w0, [sp, #52]
   18c98:	cmp	w0, #0x0
   18c9c:	cset	w0, ne  // ne = any
   18ca0:	and	w0, w0, #0xff
   18ca4:	and	x0, x0, #0xff
   18ca8:	cmp	x0, #0x0
   18cac:	b.eq	18cd8 <elf_update@@ELFUTILS_1.0+0x5220>  // b.none
   18cb0:	ldr	x0, [sp, #232]
   18cb4:	ldr	x0, [x0, #16]
   18cb8:	cmp	x0, #0x0
   18cbc:	cset	w0, ne  // ne = any
   18cc0:	and	w0, w0, #0xff
   18cc4:	and	x0, x0, #0xff
   18cc8:	cmp	x0, #0x0
   18ccc:	b.eq	18cd8 <elf_update@@ELFUTILS_1.0+0x5220>  // b.none
   18cd0:	mov	w0, #0x1                   	// #1
   18cd4:	b	18cdc <elf_update@@ELFUTILS_1.0+0x5224>
   18cd8:	mov	w0, #0x0                   	// #0
   18cdc:	cmp	w0, #0x0
   18ce0:	b.eq	18e8c <elf_update@@ELFUTILS_1.0+0x53d4>  // b.none
   18ce4:	ldr	x0, [sp, #232]
   18ce8:	ldr	w0, [x0, #8]
   18cec:	cmp	w0, #0x0
   18cf0:	cset	w0, ne  // ne = any
   18cf4:	and	w0, w0, #0xff
   18cf8:	and	x0, x0, #0xff
   18cfc:	cmp	x0, #0x0
   18d00:	b.eq	18e8c <elf_update@@ELFUTILS_1.0+0x53d4>  // b.none
   18d04:	ldr	x0, [sp, #232]
   18d08:	ldr	w2, [x0, #8]
   18d0c:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   18d10:	add	x1, x0, #0xab0
   18d14:	mov	w0, w2
   18d18:	add	x0, x1, x0
   18d1c:	ldrb	w0, [x0, #27]
   18d20:	cmp	w0, #0x0
   18d24:	b.eq	18d4c <elf_update@@ELFUTILS_1.0+0x5294>  // b.none
   18d28:	ldr	x0, [sp, #232]
   18d2c:	ldr	w2, [x0, #8]
   18d30:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   18d34:	add	x1, x0, #0xab0
   18d38:	mov	w0, w2
   18d3c:	add	x0, x1, x0
   18d40:	ldrb	w0, [x0, #27]
   18d44:	and	x0, x0, #0xff
   18d48:	b	18d50 <elf_update@@ELFUTILS_1.0+0x5298>
   18d4c:	mov	x0, #0x1                   	// #1
   18d50:	str	x0, [sp, #136]
   18d54:	ldr	x0, [sp, #136]
   18d58:	sub	x1, x0, #0x1
   18d5c:	ldr	x0, [sp, #256]
   18d60:	and	x0, x1, x0
   18d64:	cmp	x0, #0x0
   18d68:	b.ne	18dac <elf_update@@ELFUTILS_1.0+0x52f4>  // b.any
   18d6c:	ldr	x0, [sp, #232]
   18d70:	ldr	w1, [x0, #8]
   18d74:	adrp	x0, 35000 <elf_compress_gnu@@ELFUTILS_1.7+0x1495c>
   18d78:	add	x0, x0, #0xbd8
   18d7c:	mov	w1, w1
   18d80:	add	x1, x1, #0x1b
   18d84:	ldr	x4, [x0, x1, lsl #3]
   18d88:	ldr	x0, [sp, #232]
   18d8c:	ldr	x1, [x0]
   18d90:	ldr	x0, [sp, #232]
   18d94:	ldr	x0, [x0, #16]
   18d98:	mov	w3, #0x1                   	// #1
   18d9c:	mov	x2, x0
   18da0:	ldr	x0, [sp, #256]
   18da4:	blr	x4
   18da8:	b	18e74 <elf_update@@ELFUTILS_1.0+0x53bc>
   18dac:	ldr	x0, [sp, #232]
   18db0:	ldr	x0, [x0, #16]
   18db4:	str	x0, [sp, #128]
   18db8:	ldr	x0, [sp, #136]
   18dbc:	cmp	x0, #0x7
   18dc0:	b.hi	18dd4 <elf_update@@ELFUTILS_1.0+0x531c>  // b.pmore
   18dc4:	ldr	x0, [sp, #128]
   18dc8:	bl	3140 <malloc@plt>
   18dcc:	str	x0, [sp, #64]
   18dd0:	b	18df8 <elf_update@@ELFUTILS_1.0+0x5340>
   18dd4:	add	x0, sp, #0x40
   18dd8:	ldr	x2, [sp, #128]
   18ddc:	ldr	x1, [sp, #136]
   18de0:	bl	31b0 <posix_memalign@plt>
   18de4:	str	w0, [sp, #124]
   18de8:	ldr	w0, [sp, #124]
   18dec:	cmp	w0, #0x0
   18df0:	b.eq	18df8 <elf_update@@ELFUTILS_1.0+0x5340>  // b.none
   18df4:	str	xzr, [sp, #64]
   18df8:	ldr	x0, [sp, #64]
   18dfc:	cmp	x0, #0x0
   18e00:	b.ne	18e1c <elf_update@@ELFUTILS_1.0+0x5364>  // b.any
   18e04:	ldr	x0, [sp, #192]
   18e08:	bl	32a0 <free@plt>
   18e0c:	mov	w0, #0x8                   	// #8
   18e10:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   18e14:	mov	w0, #0x1                   	// #1
   18e18:	b	19294 <elf_update@@ELFUTILS_1.0+0x57dc>
   18e1c:	ldr	x0, [sp, #232]
   18e20:	ldr	w1, [x0, #8]
   18e24:	adrp	x0, 35000 <elf_compress_gnu@@ELFUTILS_1.7+0x1495c>
   18e28:	add	x0, x0, #0xbd8
   18e2c:	mov	w1, w1
   18e30:	add	x1, x1, #0x1b
   18e34:	ldr	x4, [x0, x1, lsl #3]
   18e38:	ldr	x5, [sp, #64]
   18e3c:	ldr	x0, [sp, #232]
   18e40:	ldr	x0, [x0]
   18e44:	mov	w3, #0x1                   	// #1
   18e48:	ldr	x2, [sp, #128]
   18e4c:	mov	x1, x0
   18e50:	mov	x0, x5
   18e54:	blr	x4
   18e58:	ldr	x0, [sp, #64]
   18e5c:	ldr	x2, [sp, #128]
   18e60:	mov	x1, x0
   18e64:	ldr	x0, [sp, #256]
   18e68:	bl	30a0 <memcpy@plt>
   18e6c:	ldr	x0, [sp, #64]
   18e70:	bl	32a0 <free@plt>
   18e74:	ldr	x0, [sp, #232]
   18e78:	ldr	x0, [x0, #16]
   18e7c:	ldr	x1, [sp, #256]
   18e80:	add	x0, x1, x0
   18e84:	str	x0, [sp, #256]
   18e88:	b	18ecc <elf_update@@ELFUTILS_1.0+0x5414>
   18e8c:	ldr	x0, [sp, #232]
   18e90:	ldr	x0, [x0, #16]
   18e94:	cmp	x0, #0x0
   18e98:	b.eq	18ecc <elf_update@@ELFUTILS_1.0+0x5414>  // b.none
   18e9c:	ldr	x0, [sp, #232]
   18ea0:	ldr	x1, [x0]
   18ea4:	ldr	x0, [sp, #232]
   18ea8:	ldr	x0, [x0, #16]
   18eac:	mov	x2, x0
   18eb0:	ldr	x0, [sp, #256]
   18eb4:	bl	30b0 <memmove@plt>
   18eb8:	ldr	x0, [sp, #232]
   18ebc:	ldr	x0, [x0, #16]
   18ec0:	ldr	x1, [sp, #256]
   18ec4:	add	x0, x1, x0
   18ec8:	str	x0, [sp, #256]
   18ecc:	mov	w0, #0x1                   	// #1
   18ed0:	strb	w0, [sp, #231]
   18ed4:	b	18eec <elf_update@@ELFUTILS_1.0+0x5434>
   18ed8:	ldr	x0, [sp, #232]
   18edc:	ldr	x0, [x0, #16]
   18ee0:	ldr	x1, [sp, #256]
   18ee4:	add	x0, x1, x0
   18ee8:	str	x0, [sp, #256]
   18eec:	ldr	x0, [sp, #232]
   18ef0:	ldr	x0, [x0, #24]
   18ef4:	mov	x1, x0
   18ef8:	ldr	x0, [sp, #232]
   18efc:	ldr	x0, [x0, #16]
   18f00:	add	x0, x1, x0
   18f04:	ldr	x1, [sp, #144]
   18f08:	add	x0, x1, x0
   18f0c:	ldr	x1, [sp, #256]
   18f10:	cmp	x1, x0
   18f14:	b.eq	18f38 <elf_update@@ELFUTILS_1.0+0x5480>  // b.none
   18f18:	adrp	x0, 22000 <elf_compress_gnu@@ELFUTILS_1.7+0x195c>
   18f1c:	add	x3, x0, #0x1a8
   18f20:	mov	w2, #0x197                 	// #407
   18f24:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   18f28:	add	x1, x0, #0xf30
   18f2c:	adrp	x0, 22000 <elf_compress_gnu@@ELFUTILS_1.7+0x195c>
   18f30:	add	x0, x0, #0x160
   18f34:	bl	33d0 <__assert_fail@plt>
   18f38:	ldr	x0, [sp, #232]
   18f3c:	ldr	w0, [x0, #56]
   18f40:	and	w1, w0, #0xfffffffe
   18f44:	ldr	x0, [sp, #232]
   18f48:	str	w1, [x0, #56]
   18f4c:	ldr	x0, [sp, #232]
   18f50:	ldr	x0, [x0, #48]
   18f54:	str	x0, [sp, #232]
   18f58:	ldr	x0, [sp, #232]
   18f5c:	cmp	x0, #0x0
   18f60:	b.ne	18b28 <elf_update@@ELFUTILS_1.0+0x5070>  // b.any
   18f64:	b	18fb0 <elf_update@@ELFUTILS_1.0+0x54f8>
   18f68:	ldr	x1, [sp, #144]
   18f6c:	ldr	x0, [sp, #256]
   18f70:	cmp	x1, x0
   18f74:	b.ls	18f9c <elf_update@@ELFUTILS_1.0+0x54e4>  // b.plast
   18f78:	ldrb	w0, [sp, #271]
   18f7c:	cmp	w0, #0x0
   18f80:	b.eq	18f9c <elf_update@@ELFUTILS_1.0+0x54e4>  // b.none
   18f84:	ldr	x4, [sp, #176]
   18f88:	ldr	x3, [sp, #184]
   18f8c:	ldr	x2, [sp, #144]
   18f90:	ldr	x1, [sp, #256]
   18f94:	mov	x0, #0x0                   	// #0
   18f98:	bl	18270 <elf_update@@ELFUTILS_1.0+0x47b8>
   18f9c:	ldr	x0, [sp, #152]
   18fa0:	ldr	x0, [x0, #32]
   18fa4:	ldr	x1, [sp, #144]
   18fa8:	add	x0, x1, x0
   18fac:	str	x0, [sp, #256]
   18fb0:	ldrb	w0, [sp, #231]
   18fb4:	strb	w0, [sp, #271]
   18fb8:	b	18fc0 <elf_update@@ELFUTILS_1.0+0x5508>
   18fbc:	nop
   18fc0:	ldr	x0, [sp, #160]
   18fc4:	ldr	w0, [x0, #156]
   18fc8:	and	w1, w0, #0xfffffffe
   18fcc:	ldr	x0, [sp, #160]
   18fd0:	str	w1, [x0, #156]
   18fd4:	b	18fdc <elf_update@@ELFUTILS_1.0+0x5524>
   18fd8:	nop
   18fdc:	ldr	x0, [sp, #240]
   18fe0:	add	x0, x0, #0x1
   18fe4:	str	x0, [sp, #240]
   18fe8:	ldr	x1, [sp, #240]
   18fec:	ldr	x0, [sp, #40]
   18ff0:	cmp	x1, x0
   18ff4:	b.cc	18a6c <elf_update@@ELFUTILS_1.0+0x4fb4>  // b.lo, b.ul, b.last
   18ff8:	ldr	x0, [sp, #56]
   18ffc:	ldr	w0, [x0, #56]
   19000:	and	w0, w0, #0x1
   19004:	cmp	w0, #0x0
   19008:	b.eq	19084 <elf_update@@ELFUTILS_1.0+0x55cc>  // b.none
   1900c:	ldr	x0, [sp, #56]
   19010:	ldr	x1, [x0]
   19014:	ldr	x0, [sp, #56]
   19018:	ldr	x0, [x0, #40]
   1901c:	mov	x2, x0
   19020:	ldr	x0, [sp, #208]
   19024:	ldr	x0, [x0, #40]
   19028:	add	x0, x2, x0
   1902c:	add	x0, x1, x0
   19030:	ldr	x1, [sp, #256]
   19034:	cmp	x1, x0
   19038:	b.cs	19084 <elf_update@@ELFUTILS_1.0+0x55cc>  // b.hs, b.nlast
   1903c:	adrp	x0, 36000 <elf_compress_gnu@@ELFUTILS_1.7+0x1595c>
   19040:	add	x0, x0, #0x1c8
   19044:	ldr	w3, [x0]
   19048:	ldr	x0, [sp, #56]
   1904c:	ldr	x1, [x0]
   19050:	ldr	x0, [sp, #56]
   19054:	ldr	x0, [x0, #40]
   19058:	mov	x2, x0
   1905c:	ldr	x0, [sp, #208]
   19060:	ldr	x0, [x0, #40]
   19064:	add	x0, x2, x0
   19068:	add	x1, x1, x0
   1906c:	ldr	x0, [sp, #256]
   19070:	sub	x0, x1, x0
   19074:	mov	x2, x0
   19078:	mov	w1, w3
   1907c:	ldr	x0, [sp, #256]
   19080:	bl	3180 <memset@plt>
   19084:	str	xzr, [sp, #216]
   19088:	b	191dc <elf_update@@ELFUTILS_1.0+0x5724>
   1908c:	ldr	x0, [sp, #216]
   19090:	lsl	x0, x0, #3
   19094:	ldr	x1, [sp, #192]
   19098:	add	x0, x1, x0
   1909c:	ldr	x0, [x0]
   190a0:	str	x0, [sp, #168]
   190a4:	ldr	x0, [sp, #168]
   190a8:	ldr	w0, [x0, #152]
   190ac:	ldr	x1, [sp, #56]
   190b0:	ldr	w1, [x1, #56]
   190b4:	orr	w0, w0, w1
   190b8:	and	w0, w0, #0x1
   190bc:	cmp	w0, #0x0
   190c0:	b.eq	191d0 <elf_update@@ELFUTILS_1.0+0x5718>  // b.none
   190c4:	ldr	w0, [sp, #52]
   190c8:	cmp	w0, #0x0
   190cc:	cset	w0, ne  // ne = any
   190d0:	and	w0, w0, #0xff
   190d4:	and	x0, x0, #0xff
   190d8:	cmp	x0, #0x0
   190dc:	b.eq	19120 <elf_update@@ELFUTILS_1.0+0x5668>  // b.none
   190e0:	adrp	x0, 35000 <elf_compress_gnu@@ELFUTILS_1.7+0x1495c>
   190e4:	add	x0, x0, #0xbd8
   190e8:	ldr	x4, [x0, #288]
   190ec:	ldr	x0, [sp, #168]
   190f0:	ldr	x0, [x0, #128]
   190f4:	lsl	x0, x0, #6
   190f8:	ldr	x1, [sp, #184]
   190fc:	add	x5, x1, x0
   19100:	ldr	x0, [sp, #168]
   19104:	ldr	x0, [x0, #144]
   19108:	mov	w3, #0x1                   	// #1
   1910c:	mov	x2, #0x40                  	// #64
   19110:	mov	x1, x0
   19114:	mov	x0, x5
   19118:	blr	x4
   1911c:	b	1914c <elf_update@@ELFUTILS_1.0+0x5694>
   19120:	ldr	x0, [sp, #168]
   19124:	ldr	x0, [x0, #128]
   19128:	lsl	x0, x0, #6
   1912c:	ldr	x1, [sp, #184]
   19130:	add	x3, x1, x0
   19134:	ldr	x0, [sp, #168]
   19138:	ldr	x0, [x0, #144]
   1913c:	mov	x2, #0x40                  	// #64
   19140:	mov	x1, x0
   19144:	mov	x0, x3
   19148:	bl	30a0 <memcpy@plt>
   1914c:	ldr	x0, [sp, #56]
   19150:	ldr	w0, [x0, #124]
   19154:	cmp	w0, #0x0
   19158:	b.ne	191bc <elf_update@@ELFUTILS_1.0+0x5704>  // b.any
   1915c:	ldr	x0, [sp, #168]
   19160:	ldr	w0, [x0, #152]
   19164:	and	w0, w0, #0x80
   19168:	cmp	w0, #0x0
   1916c:	b.ne	191bc <elf_update@@ELFUTILS_1.0+0x5704>  // b.any
   19170:	ldr	x0, [sp, #168]
   19174:	ldr	x1, [x0, #144]
   19178:	ldr	x0, [sp, #168]
   1917c:	ldr	x0, [x0, #128]
   19180:	lsl	x0, x0, #6
   19184:	ldr	x2, [sp, #184]
   19188:	add	x0, x2, x0
   1918c:	cmp	x1, x0
   19190:	b.eq	191bc <elf_update@@ELFUTILS_1.0+0x5704>  // b.none
   19194:	ldr	x0, [sp, #168]
   19198:	ldr	x0, [x0, #144]
   1919c:	bl	32a0 <free@plt>
   191a0:	ldr	x0, [sp, #168]
   191a4:	ldr	x0, [x0, #128]
   191a8:	lsl	x0, x0, #6
   191ac:	ldr	x1, [sp, #184]
   191b0:	add	x1, x1, x0
   191b4:	ldr	x0, [sp, #168]
   191b8:	str	x1, [x0, #144]
   191bc:	ldr	x0, [sp, #168]
   191c0:	ldr	w0, [x0, #152]
   191c4:	and	w1, w0, #0xfffffffe
   191c8:	ldr	x0, [sp, #168]
   191cc:	str	w1, [x0, #152]
   191d0:	ldr	x0, [sp, #216]
   191d4:	add	x0, x0, #0x1
   191d8:	str	x0, [sp, #216]
   191dc:	ldr	x1, [sp, #216]
   191e0:	ldr	x0, [sp, #40]
   191e4:	cmp	x1, x0
   191e8:	b.cc	1908c <elf_update@@ELFUTILS_1.0+0x55d4>  // b.lo, b.ul, b.last
   191ec:	ldr	x0, [sp, #192]
   191f0:	bl	32a0 <free@plt>
   191f4:	ldr	x0, [sp, #56]
   191f8:	ldr	w0, [x0, #56]
   191fc:	and	w1, w0, #0xfffffffe
   19200:	ldr	x0, [sp, #56]
   19204:	str	w1, [x0, #56]
   19208:	ldr	x0, [sp, #56]
   1920c:	ldr	x19, [x0]
   19210:	ldr	x0, [sp, #56]
   19214:	ldr	x20, [x0, #40]
   19218:	mov	w0, #0x1e                  	// #30
   1921c:	bl	3380 <sysconf@plt>
   19220:	sub	x0, x0, #0x1
   19224:	mvn	x0, x0
   19228:	and	x0, x20, x0
   1922c:	add	x0, x19, x0
   19230:	str	x0, [sp, #88]
   19234:	ldr	x0, [sp, #56]
   19238:	ldr	x1, [x0]
   1923c:	ldr	x0, [sp, #56]
   19240:	ldr	x0, [x0, #40]
   19244:	mov	x2, x0
   19248:	ldr	x0, [sp, #208]
   1924c:	ldr	x0, [x0, #40]
   19250:	add	x2, x2, x0
   19254:	ldr	x0, [sp, #208]
   19258:	ldrh	w0, [x0, #58]
   1925c:	and	x3, x0, #0xffff
   19260:	ldr	x0, [sp, #40]
   19264:	mul	x0, x3, x0
   19268:	add	x0, x2, x0
   1926c:	add	x0, x1, x0
   19270:	str	x0, [sp, #80]
   19274:	ldr	x1, [sp, #80]
   19278:	ldr	x0, [sp, #88]
   1927c:	sub	x0, x1, x0
   19280:	mov	w2, #0x4                   	// #4
   19284:	mov	x1, x0
   19288:	ldr	x0, [sp, #88]
   1928c:	bl	30c0 <msync@plt>
   19290:	mov	w0, #0x0                   	// #0
   19294:	ldp	x19, x20, [sp, #16]
   19298:	ldp	x29, x30, [sp], #272
   1929c:	ret
   192a0:	stp	x29, x30, [sp, #-96]!
   192a4:	mov	x29, sp
   192a8:	str	w0, [sp, #60]
   192ac:	str	x1, [sp, #48]
   192b0:	str	x2, [sp, #40]
   192b4:	str	x3, [sp, #32]
   192b8:	str	x4, [sp, #24]
   192bc:	ldr	x0, [sp, #24]
   192c0:	ldr	x0, [x0]
   192c4:	str	x0, [sp, #88]
   192c8:	ldr	x2, [sp, #40]
   192cc:	ldr	x1, [sp, #40]
   192d0:	mov	x0, #0x1000                	// #4096
   192d4:	cmp	x2, #0x1, lsl #12
   192d8:	csel	x0, x1, x0, ls  // ls = plast
   192dc:	str	x0, [sp, #80]
   192e0:	ldr	x1, [sp, #80]
   192e4:	ldr	x0, [sp, #88]
   192e8:	cmp	x1, x0
   192ec:	cset	w0, hi  // hi = pmore
   192f0:	and	w0, w0, #0xff
   192f4:	and	x0, x0, #0xff
   192f8:	cmp	x0, #0x0
   192fc:	b.eq	19354 <elf_update@@ELFUTILS_1.0+0x589c>  // b.none
   19300:	ldr	x0, [sp, #88]
   19304:	cmp	x0, #0xfff
   19308:	b.hi	19354 <elf_update@@ELFUTILS_1.0+0x589c>  // b.pmore
   1930c:	ldr	x1, [sp, #32]
   19310:	ldr	x0, [sp, #88]
   19314:	add	x3, x1, x0
   19318:	adrp	x0, 36000 <elf_compress_gnu@@ELFUTILS_1.7+0x1595c>
   1931c:	add	x0, x0, #0x1c8
   19320:	ldr	w4, [x0]
   19324:	ldr	x1, [sp, #80]
   19328:	ldr	x0, [sp, #88]
   1932c:	sub	x0, x1, x0
   19330:	mov	x2, x0
   19334:	mov	w1, w4
   19338:	mov	x0, x3
   1933c:	bl	3180 <memset@plt>
   19340:	ldr	x0, [sp, #80]
   19344:	str	x0, [sp, #88]
   19348:	ldr	x0, [sp, #24]
   1934c:	ldr	x1, [sp, #88]
   19350:	str	x1, [x0]
   19354:	ldr	x0, [sp, #88]
   19358:	ldr	x2, [sp, #40]
   1935c:	ldr	x1, [sp, #40]
   19360:	cmp	x2, x0
   19364:	csel	x0, x1, x0, ls  // ls = plast
   19368:	str	x0, [sp, #72]
   1936c:	ldr	x3, [sp, #48]
   19370:	ldr	x2, [sp, #72]
   19374:	ldr	x1, [sp, #32]
   19378:	ldr	w0, [sp, #60]
   1937c:	bl	17fa4 <elf_update@@ELFUTILS_1.0+0x44ec>
   19380:	mov	x1, x0
   19384:	ldr	x0, [sp, #72]
   19388:	cmp	x1, x0
   1938c:	cset	w0, ne  // ne = any
   19390:	and	w0, w0, #0xff
   19394:	and	x0, x0, #0xff
   19398:	cmp	x0, #0x0
   1939c:	b.eq	193b0 <elf_update@@ELFUTILS_1.0+0x58f8>  // b.none
   193a0:	mov	w0, #0x14                  	// #20
   193a4:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   193a8:	mov	w0, #0x1                   	// #1
   193ac:	b	193e0 <elf_update@@ELFUTILS_1.0+0x5928>
   193b0:	ldr	x1, [sp, #48]
   193b4:	ldr	x0, [sp, #72]
   193b8:	add	x0, x1, x0
   193bc:	str	x0, [sp, #48]
   193c0:	ldr	x1, [sp, #40]
   193c4:	ldr	x0, [sp, #72]
   193c8:	sub	x0, x1, x0
   193cc:	str	x0, [sp, #40]
   193d0:	ldr	x0, [sp, #40]
   193d4:	cmp	x0, #0x0
   193d8:	b.ne	19354 <elf_update@@ELFUTILS_1.0+0x589c>  // b.any
   193dc:	mov	w0, #0x0                   	// #0
   193e0:	ldp	x29, x30, [sp], #96
   193e4:	ret
   193e8:	mov	x12, #0x90f0                	// #37104
   193ec:	sub	sp, sp, x12
   193f0:	stp	x29, x30, [sp]
   193f4:	mov	x29, sp
   193f8:	str	x0, [sp, #40]
   193fc:	str	w1, [sp, #36]
   19400:	str	x2, [sp, #24]
   19404:	add	x0, sp, #0x8, lsl #12
   19408:	str	xzr, [x0, #64]
   1940c:	add	x0, sp, #0x9, lsl #12
   19410:	strb	wzr, [x0, #239]
   19414:	ldr	x0, [sp, #40]
   19418:	ldr	x0, [x0, #72]
   1941c:	add	x1, sp, #0x8, lsl #12
   19420:	str	x0, [x1, #4232]
   19424:	ldr	x0, [sp, #40]
   19428:	ldr	w1, [x0, #116]
   1942c:	ldr	x0, [sp, #40]
   19430:	ldr	w0, [x0, #56]
   19434:	orr	w0, w1, w0
   19438:	and	w0, w0, #0x1
   1943c:	cmp	w0, #0x0
   19440:	b.eq	19544 <elf_update@@ELFUTILS_1.0+0x5a8c>  // b.none
   19444:	add	x0, sp, #0x8, lsl #12
   19448:	ldr	x0, [x0, #4232]
   1944c:	add	x1, sp, #0x8, lsl #12
   19450:	str	x0, [x1, #4320]
   19454:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   19458:	add	x0, x0, #0x3d0
   1945c:	ldr	x0, [x0, #240]
   19460:	cmp	x0, #0x40
   19464:	b.eq	19488 <elf_update@@ELFUTILS_1.0+0x59d0>  // b.none
   19468:	adrp	x0, 22000 <elf_compress_gnu@@ELFUTILS_1.7+0x195c>
   1946c:	add	x3, x0, #0x1c0
   19470:	mov	w2, #0x228                 	// #552
   19474:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   19478:	add	x1, x0, #0xf30
   1947c:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   19480:	add	x0, x0, #0xf48
   19484:	bl	33d0 <__assert_fail@plt>
   19488:	ldr	w0, [sp, #36]
   1948c:	cmp	w0, #0x0
   19490:	cset	w0, ne  // ne = any
   19494:	and	w0, w0, #0xff
   19498:	and	x0, x0, #0xff
   1949c:	cmp	x0, #0x0
   194a0:	b.eq	194d4 <elf_update@@ELFUTILS_1.0+0x5a1c>  // b.none
   194a4:	adrp	x0, 35000 <elf_compress_gnu@@ELFUTILS_1.7+0x1495c>
   194a8:	add	x0, x0, #0xbd8
   194ac:	ldr	x4, [x0, #240]
   194b0:	add	x0, sp, #0x38
   194b4:	mov	w3, #0x1                   	// #1
   194b8:	mov	x2, #0x40                  	// #64
   194bc:	add	x1, sp, #0x8, lsl #12
   194c0:	ldr	x1, [x1, #4232]
   194c4:	blr	x4
   194c8:	add	x0, sp, #0x38
   194cc:	add	x1, sp, #0x8, lsl #12
   194d0:	str	x0, [x1, #4320]
   194d4:	ldr	x0, [sp, #40]
   194d8:	ldr	w0, [x0, #36]
   194dc:	mov	x3, #0x0                   	// #0
   194e0:	mov	x2, #0x40                  	// #64
   194e4:	add	x1, sp, #0x8, lsl #12
   194e8:	ldr	x1, [x1, #4320]
   194ec:	bl	17fa4 <elf_update@@ELFUTILS_1.0+0x44ec>
   194f0:	cmp	x0, #0x40
   194f4:	cset	w0, ne  // ne = any
   194f8:	and	w0, w0, #0xff
   194fc:	and	x0, x0, #0xff
   19500:	cmp	x0, #0x0
   19504:	b.eq	19518 <elf_update@@ELFUTILS_1.0+0x5a60>  // b.none
   19508:	mov	w0, #0x14                  	// #20
   1950c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   19510:	mov	w0, #0x1                   	// #1
   19514:	b	1a1ac <elf_update@@ELFUTILS_1.0+0x66f4>
   19518:	ldr	x0, [sp, #40]
   1951c:	ldr	w0, [x0, #116]
   19520:	and	w1, w0, #0xfffffffe
   19524:	ldr	x0, [sp, #40]
   19528:	str	w1, [x0, #116]
   1952c:	ldr	x0, [sp, #40]
   19530:	ldr	x0, [x0, #88]
   19534:	cmp	x0, #0x0
   19538:	cset	w0, eq  // eq = none
   1953c:	add	x1, sp, #0x9, lsl #12
   19540:	strb	w0, [x1, #239]
   19544:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   19548:	add	x0, x0, #0x3d0
   1954c:	ldr	x0, [x0, #264]
   19550:	cmp	x0, #0x38
   19554:	b.eq	19578 <elf_update@@ELFUTILS_1.0+0x5ac0>  // b.none
   19558:	adrp	x0, 22000 <elf_compress_gnu@@ELFUTILS_1.7+0x195c>
   1955c:	add	x3, x0, #0x1c0
   19560:	mov	w2, #0x24a                 	// #586
   19564:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   19568:	add	x1, x0, #0xf30
   1956c:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   19570:	add	x0, x0, #0xf98
   19574:	bl	33d0 <__assert_fail@plt>
   19578:	add	x0, sp, #0x8, lsl #12
   1957c:	add	x0, x0, #0x38
   19580:	mov	x1, x0
   19584:	ldr	x0, [sp, #40]
   19588:	bl	1d2c0 <gelf_update_verdaux@@ELFUTILS_1.0+0xf4>
   1958c:	cmp	w0, #0x0
   19590:	cset	w0, ne  // ne = any
   19594:	and	w0, w0, #0xff
   19598:	and	x0, x0, #0xff
   1959c:	cmp	x0, #0x0
   195a0:	b.eq	195ac <elf_update@@ELFUTILS_1.0+0x5af4>  // b.none
   195a4:	mov	w0, #0xffffffff            	// #-1
   195a8:	b	1a1ac <elf_update@@ELFUTILS_1.0+0x66f4>
   195ac:	ldr	x0, [sp, #40]
   195b0:	ldr	x0, [x0, #88]
   195b4:	cmp	x0, #0x0
   195b8:	b.eq	1980c <elf_update@@ELFUTILS_1.0+0x5d54>  // b.none
   195bc:	ldr	x0, [sp, #40]
   195c0:	ldr	w1, [x0, #120]
   195c4:	ldr	x0, [sp, #40]
   195c8:	ldr	w0, [x0, #56]
   195cc:	orr	w0, w1, w0
   195d0:	and	w0, w0, #0x1
   195d4:	cmp	w0, #0x0
   195d8:	b.eq	1980c <elf_update@@ELFUTILS_1.0+0x5d54>  // b.none
   195dc:	add	x0, sp, #0x8, lsl #12
   195e0:	str	xzr, [x0, #4312]
   195e4:	ldr	x0, [sp, #40]
   195e8:	ldr	x0, [x0, #88]
   195ec:	add	x1, sp, #0x8, lsl #12
   195f0:	str	x0, [x1, #4304]
   195f4:	add	x0, sp, #0x8, lsl #12
   195f8:	ldr	x0, [x0, #4232]
   195fc:	ldr	x1, [x0, #32]
   19600:	add	x0, sp, #0x8, lsl #12
   19604:	ldr	x0, [x0, #4232]
   19608:	ldrh	w0, [x0, #52]
   1960c:	and	x0, x0, #0xffff
   19610:	cmp	x1, x0
   19614:	b.ls	19698 <elf_update@@ELFUTILS_1.0+0x5be0>  // b.plast
   19618:	ldr	x0, [sp, #40]
   1961c:	ldr	w5, [x0, #36]
   19620:	add	x0, sp, #0x8, lsl #12
   19624:	ldr	x0, [x0, #4232]
   19628:	ldrh	w0, [x0, #52]
   1962c:	and	x6, x0, #0xffff
   19630:	add	x0, sp, #0x8, lsl #12
   19634:	ldr	x0, [x0, #4232]
   19638:	ldr	x1, [x0, #32]
   1963c:	add	x0, sp, #0x8, lsl #12
   19640:	ldr	x0, [x0, #4232]
   19644:	ldrh	w0, [x0, #52]
   19648:	and	x0, x0, #0xffff
   1964c:	sub	x0, x1, x0
   19650:	add	x2, sp, #0x8, lsl #12
   19654:	add	x2, x2, #0x40
   19658:	add	x1, sp, #0x8, lsl #12
   1965c:	add	x1, x1, #0x48
   19660:	mov	x4, x2
   19664:	mov	x3, x1
   19668:	mov	x2, x0
   1966c:	mov	x1, x6
   19670:	mov	w0, w5
   19674:	bl	192a0 <elf_update@@ELFUTILS_1.0+0x57e8>
   19678:	cmp	w0, #0x0
   1967c:	cset	w0, ne  // ne = any
   19680:	and	w0, w0, #0xff
   19684:	and	x0, x0, #0xff
   19688:	cmp	x0, #0x0
   1968c:	b.eq	19698 <elf_update@@ELFUTILS_1.0+0x5be0>  // b.none
   19690:	mov	w0, #0x1                   	// #1
   19694:	b	1a1ac <elf_update@@ELFUTILS_1.0+0x66f4>
   19698:	ldr	w0, [sp, #36]
   1969c:	cmp	w0, #0x0
   196a0:	cset	w0, ne  // ne = any
   196a4:	and	w0, w0, #0xff
   196a8:	and	x0, x0, #0xff
   196ac:	cmp	x0, #0x0
   196b0:	b.eq	1975c <elf_update@@ELFUTILS_1.0+0x5ca4>  // b.none
   196b4:	add	x0, sp, #0x8, lsl #12
   196b8:	ldr	x1, [x0, #56]
   196bc:	mov	x0, x1
   196c0:	lsl	x0, x0, #3
   196c4:	sub	x0, x0, x1
   196c8:	lsl	x0, x0, #3
   196cc:	bl	3140 <malloc@plt>
   196d0:	add	x1, sp, #0x8, lsl #12
   196d4:	str	x0, [x1, #4312]
   196d8:	add	x0, sp, #0x8, lsl #12
   196dc:	ldr	x0, [x0, #4312]
   196e0:	cmp	x0, #0x0
   196e4:	cset	w0, eq  // eq = none
   196e8:	and	w0, w0, #0xff
   196ec:	and	x0, x0, #0xff
   196f0:	cmp	x0, #0x0
   196f4:	b.eq	19708 <elf_update@@ELFUTILS_1.0+0x5c50>  // b.none
   196f8:	mov	w0, #0x8                   	// #8
   196fc:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   19700:	mov	w0, #0x1                   	// #1
   19704:	b	1a1ac <elf_update@@ELFUTILS_1.0+0x66f4>
   19708:	adrp	x0, 35000 <elf_compress_gnu@@ELFUTILS_1.7+0x1495c>
   1970c:	add	x0, x0, #0xbd8
   19710:	ldr	x4, [x0, #264]
   19714:	ldr	x0, [sp, #40]
   19718:	ldr	x5, [x0, #88]
   1971c:	add	x0, sp, #0x8, lsl #12
   19720:	ldr	x1, [x0, #56]
   19724:	mov	x0, x1
   19728:	lsl	x0, x0, #3
   1972c:	sub	x0, x0, x1
   19730:	lsl	x0, x0, #3
   19734:	mov	w3, #0x1                   	// #1
   19738:	mov	x2, x0
   1973c:	mov	x1, x5
   19740:	add	x0, sp, #0x8, lsl #12
   19744:	ldr	x0, [x0, #4312]
   19748:	blr	x4
   1974c:	add	x0, sp, #0x8, lsl #12
   19750:	ldr	x0, [x0, #4312]
   19754:	add	x1, sp, #0x8, lsl #12
   19758:	str	x0, [x1, #4304]
   1975c:	add	x0, sp, #0x8, lsl #12
   19760:	ldr	x1, [x0, #56]
   19764:	mov	x0, x1
   19768:	lsl	x0, x0, #3
   1976c:	sub	x0, x0, x1
   19770:	lsl	x0, x0, #3
   19774:	add	x1, sp, #0x8, lsl #12
   19778:	str	x0, [x1, #4224]
   1977c:	ldr	x0, [sp, #40]
   19780:	ldr	w4, [x0, #36]
   19784:	add	x0, sp, #0x8, lsl #12
   19788:	ldr	x0, [x0, #4232]
   1978c:	ldr	x0, [x0, #32]
   19790:	mov	x3, x0
   19794:	add	x0, sp, #0x8, lsl #12
   19798:	ldr	x2, [x0, #4224]
   1979c:	add	x0, sp, #0x8, lsl #12
   197a0:	ldr	x1, [x0, #4304]
   197a4:	mov	w0, w4
   197a8:	bl	17fa4 <elf_update@@ELFUTILS_1.0+0x44ec>
   197ac:	mov	x1, x0
   197b0:	add	x0, sp, #0x8, lsl #12
   197b4:	ldr	x0, [x0, #4224]
   197b8:	cmp	x1, x0
   197bc:	cset	w0, ne  // ne = any
   197c0:	and	w0, w0, #0xff
   197c4:	and	x0, x0, #0xff
   197c8:	cmp	x0, #0x0
   197cc:	b.eq	197e0 <elf_update@@ELFUTILS_1.0+0x5d28>  // b.none
   197d0:	mov	w0, #0x14                  	// #20
   197d4:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   197d8:	mov	w0, #0x1                   	// #1
   197dc:	b	1a1ac <elf_update@@ELFUTILS_1.0+0x66f4>
   197e0:	add	x0, sp, #0x8, lsl #12
   197e4:	ldr	x0, [x0, #4312]
   197e8:	bl	32a0 <free@plt>
   197ec:	ldr	x0, [sp, #40]
   197f0:	ldr	w0, [x0, #120]
   197f4:	and	w1, w0, #0xfffffffe
   197f8:	ldr	x0, [sp, #40]
   197fc:	str	w1, [x0, #120]
   19800:	mov	w0, #0x1                   	// #1
   19804:	add	x1, sp, #0x9, lsl #12
   19808:	strb	w0, [x1, #239]
   1980c:	ldr	x0, [sp, #40]
   19810:	ldr	x0, [x0, #88]
   19814:	cmp	x0, #0x0
   19818:	b.ne	19834 <elf_update@@ELFUTILS_1.0+0x5d7c>  // b.any
   1981c:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   19820:	add	x0, x0, #0x3d0
   19824:	ldr	x0, [x0, #240]
   19828:	add	x1, sp, #0x8, lsl #12
   1982c:	str	x0, [x1, #4296]
   19830:	b	19864 <elf_update@@ELFUTILS_1.0+0x5dac>
   19834:	add	x0, sp, #0x8, lsl #12
   19838:	ldr	x0, [x0, #4232]
   1983c:	ldr	x2, [x0, #32]
   19840:	add	x0, sp, #0x8, lsl #12
   19844:	ldr	x1, [x0, #56]
   19848:	mov	x0, x1
   1984c:	lsl	x0, x0, #3
   19850:	sub	x0, x0, x1
   19854:	lsl	x0, x0, #3
   19858:	add	x0, x2, x0
   1985c:	add	x1, sp, #0x8, lsl #12
   19860:	str	x0, [x1, #4296]
   19864:	ldr	x0, [sp, #24]
   19868:	cmp	x0, #0x0
   1986c:	b.eq	1a194 <elf_update@@ELFUTILS_1.0+0x66dc>  // b.none
   19870:	ldr	x1, [sp, #24]
   19874:	mov	x0, #0xe38e                	// #58254
   19878:	movk	x0, #0x8e38, lsl #16
   1987c:	movk	x0, #0x38e3, lsl #32
   19880:	movk	x0, #0x38e, lsl #48
   19884:	cmp	x1, x0
   19888:	cset	w0, hi  // hi = pmore
   1988c:	and	w0, w0, #0xff
   19890:	and	x0, x0, #0xff
   19894:	cmp	x0, #0x0
   19898:	b.eq	198a4 <elf_update@@ELFUTILS_1.0+0x5dec>  // b.none
   1989c:	mov	w0, #0x1                   	// #1
   198a0:	b	1a1ac <elf_update@@ELFUTILS_1.0+0x66f4>
   198a4:	ldr	x0, [sp, #40]
   198a8:	ldr	x0, [x0, #40]
   198ac:	mov	x1, x0
   198b0:	add	x0, sp, #0x8, lsl #12
   198b4:	ldr	x0, [x0, #4232]
   198b8:	ldr	x0, [x0, #40]
   198bc:	add	x0, x1, x0
   198c0:	add	x1, sp, #0x8, lsl #12
   198c4:	str	x0, [x1, #4216]
   198c8:	add	x0, sp, #0x8, lsl #12
   198cc:	str	xzr, [x0, #4280]
   198d0:	ldr	w0, [sp, #36]
   198d4:	cmp	w0, #0x0
   198d8:	b.ne	19900 <elf_update@@ELFUTILS_1.0+0x5e48>  // b.any
   198dc:	ldr	x0, [sp, #40]
   198e0:	ldr	x0, [x0, #80]
   198e4:	cmp	x0, #0x0
   198e8:	b.eq	19900 <elf_update@@ELFUTILS_1.0+0x5e48>  // b.none
   198ec:	ldr	x0, [sp, #40]
   198f0:	ldr	w0, [x0, #56]
   198f4:	and	w0, w0, #0x1
   198f8:	cmp	w0, #0x0
   198fc:	b.eq	19958 <elf_update@@ELFUTILS_1.0+0x5ea0>  // b.none
   19900:	ldr	x0, [sp, #24]
   19904:	lsl	x0, x0, #6
   19908:	bl	3140 <malloc@plt>
   1990c:	add	x1, sp, #0x8, lsl #12
   19910:	str	x0, [x1, #4280]
   19914:	add	x0, sp, #0x8, lsl #12
   19918:	ldr	x0, [x0, #4280]
   1991c:	cmp	x0, #0x0
   19920:	cset	w0, eq  // eq = none
   19924:	and	w0, w0, #0xff
   19928:	and	x0, x0, #0xff
   1992c:	cmp	x0, #0x0
   19930:	b.eq	19944 <elf_update@@ELFUTILS_1.0+0x5e8c>  // b.none
   19934:	mov	w0, #0x8                   	// #8
   19938:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1993c:	mov	w0, #0xffffffff            	// #-1
   19940:	b	1a1ac <elf_update@@ELFUTILS_1.0+0x66f4>
   19944:	add	x0, sp, #0x8, lsl #12
   19948:	ldr	x0, [x0, #4280]
   1994c:	add	x1, sp, #0x8, lsl #12
   19950:	str	x0, [x1, #4288]
   19954:	b	19968 <elf_update@@ELFUTILS_1.0+0x5eb0>
   19958:	ldr	x0, [sp, #40]
   1995c:	ldr	x0, [x0, #80]
   19960:	add	x1, sp, #0x8, lsl #12
   19964:	str	x0, [x1, #4288]
   19968:	ldr	x0, [sp, #40]
   1996c:	ldr	w0, [x0, #56]
   19970:	add	x1, sp, #0x8, lsl #12
   19974:	str	w0, [x1, #4276]
   19978:	ldr	x0, [sp, #40]
   1997c:	add	x0, x0, #0xc8
   19980:	add	x1, sp, #0x8, lsl #12
   19984:	str	x0, [x1, #4208]
   19988:	ldr	x0, [sp, #24]
   1998c:	lsl	x0, x0, #3
   19990:	bl	3140 <malloc@plt>
   19994:	add	x1, sp, #0x8, lsl #12
   19998:	str	x0, [x1, #4200]
   1999c:	add	x0, sp, #0x8, lsl #12
   199a0:	ldr	x0, [x0, #4200]
   199a4:	cmp	x0, #0x0
   199a8:	cset	w0, eq  // eq = none
   199ac:	and	w0, w0, #0xff
   199b0:	and	x0, x0, #0xff
   199b4:	cmp	x0, #0x0
   199b8:	b.eq	199d8 <elf_update@@ELFUTILS_1.0+0x5f20>  // b.none
   199bc:	add	x0, sp, #0x8, lsl #12
   199c0:	ldr	x0, [x0, #4280]
   199c4:	bl	32a0 <free@plt>
   199c8:	mov	w0, #0x8                   	// #8
   199cc:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   199d0:	mov	w0, #0xffffffff            	// #-1
   199d4:	b	1a1ac <elf_update@@ELFUTILS_1.0+0x66f4>
   199d8:	add	x0, sp, #0x8, lsl #12
   199dc:	ldr	x1, [x0, #4208]
   199e0:	add	x0, sp, #0x8, lsl #12
   199e4:	ldr	x0, [x0, #4200]
   199e8:	bl	181a8 <elf_update@@ELFUTILS_1.0+0x46f0>
   199ec:	add	x0, sp, #0x8, lsl #12
   199f0:	str	xzr, [x0, #4264]
   199f4:	b	1a06c <elf_update@@ELFUTILS_1.0+0x65b4>
   199f8:	add	x0, sp, #0x8, lsl #12
   199fc:	ldr	x0, [x0, #4264]
   19a00:	lsl	x0, x0, #3
   19a04:	add	x1, sp, #0x8, lsl #12
   19a08:	ldr	x1, [x1, #4200]
   19a0c:	add	x0, x1, x0
   19a10:	ldr	x0, [x0]
   19a14:	add	x1, sp, #0x8, lsl #12
   19a18:	str	x0, [x1, #4192]
   19a1c:	add	x0, sp, #0x8, lsl #12
   19a20:	ldr	x0, [x0, #4192]
   19a24:	ldr	x0, [x0, #128]
   19a28:	cmp	x0, #0x0
   19a2c:	b.ne	19a68 <elf_update@@ELFUTILS_1.0+0x5fb0>  // b.any
   19a30:	add	x0, sp, #0x8, lsl #12
   19a34:	ldr	x0, [x0, #4192]
   19a38:	ldr	w0, [x0, #156]
   19a3c:	and	w0, w0, #0x1
   19a40:	cmp	w0, #0x0
   19a44:	b.eq	19f4c <elf_update@@ELFUTILS_1.0+0x6494>  // b.none
   19a48:	adrp	x0, 22000 <elf_compress_gnu@@ELFUTILS_1.7+0x195c>
   19a4c:	add	x3, x0, #0x1c0
   19a50:	mov	w2, #0x2c3                 	// #707
   19a54:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   19a58:	add	x1, x0, #0xf30
   19a5c:	adrp	x0, 22000 <elf_compress_gnu@@ELFUTILS_1.7+0x195c>
   19a60:	add	x0, x0, #0xb0
   19a64:	bl	33d0 <__assert_fail@plt>
   19a68:	add	x0, sp, #0x8, lsl #12
   19a6c:	ldr	x0, [x0, #4192]
   19a70:	ldr	x0, [x0, #144]
   19a74:	add	x1, sp, #0x8, lsl #12
   19a78:	str	x0, [x1, #4184]
   19a7c:	add	x0, sp, #0x8, lsl #12
   19a80:	ldr	x0, [x0, #4184]
   19a84:	ldr	w0, [x0, #4]
   19a88:	cmp	w0, #0x8
   19a8c:	b.eq	19f54 <elf_update@@ELFUTILS_1.0+0x649c>  // b.none
   19a90:	ldr	x0, [sp, #40]
   19a94:	ldr	x0, [x0, #40]
   19a98:	mov	x1, x0
   19a9c:	add	x0, sp, #0x8, lsl #12
   19aa0:	ldr	x0, [x0, #4184]
   19aa4:	ldr	x0, [x0, #24]
   19aa8:	add	x0, x1, x0
   19aac:	add	x1, sp, #0x8, lsl #12
   19ab0:	str	x0, [x1, #4176]
   19ab4:	add	x0, sp, #0x8, lsl #12
   19ab8:	ldr	x0, [x0, #4192]
   19abc:	add	x1, sp, #0x8, lsl #12
   19ac0:	str	x0, [x1, #4256]
   19ac4:	add	x0, sp, #0x9, lsl #12
   19ac8:	strb	wzr, [x0, #159]
   19acc:	add	x0, sp, #0x8, lsl #12
   19ad0:	ldr	x0, [x0, #4192]
   19ad4:	ldr	x0, [x0, #64]
   19ad8:	cmp	x0, #0x0
   19adc:	b.eq	19e90 <elf_update@@ELFUTILS_1.0+0x63d8>  // b.none
   19ae0:	add	x0, sp, #0x8, lsl #12
   19ae4:	ldr	x0, [x0, #4256]
   19ae8:	ldr	x1, [x0, #24]
   19aec:	add	x0, sp, #0x8, lsl #12
   19af0:	ldr	x0, [x0, #4176]
   19af4:	add	x0, x1, x0
   19af8:	add	x1, sp, #0x8, lsl #12
   19afc:	ldr	x1, [x1, #4296]
   19b00:	cmp	x1, x0
   19b04:	b.ge	19c04 <elf_update@@ELFUTILS_1.0+0x614c>  // b.tcont
   19b08:	add	x0, sp, #0x9, lsl #12
   19b0c:	ldrb	w0, [x0, #239]
   19b10:	cmp	w0, #0x0
   19b14:	b.eq	19b2c <elf_update@@ELFUTILS_1.0+0x6074>  // b.none
   19b18:	add	x0, sp, #0x8, lsl #12
   19b1c:	ldr	x0, [x0, #4256]
   19b20:	ldr	x0, [x0, #24]
   19b24:	cmp	x0, #0x0
   19b28:	b.eq	19b60 <elf_update@@ELFUTILS_1.0+0x60a8>  // b.none
   19b2c:	add	x0, sp, #0x8, lsl #12
   19b30:	ldr	x0, [x0, #4192]
   19b34:	ldr	w0, [x0, #156]
   19b38:	add	x1, sp, #0x8, lsl #12
   19b3c:	ldr	x1, [x1, #4256]
   19b40:	ldr	w1, [x1, #56]
   19b44:	orr	w0, w0, w1
   19b48:	ldr	x1, [sp, #40]
   19b4c:	ldr	w1, [x1, #56]
   19b50:	orr	w0, w0, w1
   19b54:	and	w0, w0, #0x1
   19b58:	cmp	w0, #0x0
   19b5c:	b.eq	19c04 <elf_update@@ELFUTILS_1.0+0x614c>  // b.none
   19b60:	ldr	x0, [sp, #40]
   19b64:	ldr	w5, [x0, #36]
   19b68:	add	x0, sp, #0x8, lsl #12
   19b6c:	ldr	x0, [x0, #4256]
   19b70:	ldr	x1, [x0, #24]
   19b74:	add	x0, sp, #0x8, lsl #12
   19b78:	ldr	x0, [x0, #4176]
   19b7c:	add	x1, x1, x0
   19b80:	add	x0, sp, #0x8, lsl #12
   19b84:	ldr	x0, [x0, #4296]
   19b88:	sub	x0, x1, x0
   19b8c:	mov	x2, x0
   19b90:	add	x1, sp, #0x8, lsl #12
   19b94:	add	x1, x1, #0x40
   19b98:	add	x0, sp, #0x8, lsl #12
   19b9c:	add	x0, x0, #0x48
   19ba0:	mov	x4, x1
   19ba4:	mov	x3, x0
   19ba8:	add	x0, sp, #0x8, lsl #12
   19bac:	ldr	x1, [x0, #4296]
   19bb0:	mov	w0, w5
   19bb4:	bl	192a0 <elf_update@@ELFUTILS_1.0+0x57e8>
   19bb8:	cmp	w0, #0x0
   19bbc:	cset	w0, ne  // ne = any
   19bc0:	and	w0, w0, #0xff
   19bc4:	and	x0, x0, #0xff
   19bc8:	cmp	x0, #0x0
   19bcc:	b.eq	19c04 <elf_update@@ELFUTILS_1.0+0x614c>  // b.none
   19bd0:	nop
   19bd4:	b	19be4 <elf_update@@ELFUTILS_1.0+0x612c>
   19bd8:	nop
   19bdc:	b	19be4 <elf_update@@ELFUTILS_1.0+0x612c>
   19be0:	nop
   19be4:	add	x0, sp, #0x8, lsl #12
   19be8:	ldr	x0, [x0, #4280]
   19bec:	bl	32a0 <free@plt>
   19bf0:	add	x0, sp, #0x8, lsl #12
   19bf4:	ldr	x0, [x0, #4200]
   19bf8:	bl	32a0 <free@plt>
   19bfc:	mov	w0, #0x1                   	// #1
   19c00:	b	1a1ac <elf_update@@ELFUTILS_1.0+0x66f4>
   19c04:	add	x0, sp, #0x8, lsl #12
   19c08:	ldr	x0, [x0, #4256]
   19c0c:	ldr	x0, [x0, #24]
   19c10:	add	x1, sp, #0x8, lsl #12
   19c14:	ldr	x1, [x1, #4176]
   19c18:	add	x0, x1, x0
   19c1c:	add	x1, sp, #0x8, lsl #12
   19c20:	str	x0, [x1, #4296]
   19c24:	add	x0, sp, #0x8, lsl #12
   19c28:	ldr	x0, [x0, #4192]
   19c2c:	ldr	w0, [x0, #156]
   19c30:	add	x1, sp, #0x8, lsl #12
   19c34:	ldr	x1, [x1, #4256]
   19c38:	ldr	w1, [x1, #56]
   19c3c:	orr	w0, w0, w1
   19c40:	ldr	x1, [sp, #40]
   19c44:	ldr	w1, [x1, #56]
   19c48:	orr	w0, w0, w1
   19c4c:	and	w0, w0, #0x1
   19c50:	cmp	w0, #0x0
   19c54:	b.eq	19e2c <elf_update@@ELFUTILS_1.0+0x6374>  // b.none
   19c58:	add	x0, sp, #0x8, lsl #12
   19c5c:	ldr	x0, [x0, #4256]
   19c60:	ldr	x0, [x0]
   19c64:	add	x1, sp, #0x8, lsl #12
   19c68:	str	x0, [x1, #4240]
   19c6c:	ldr	w0, [sp, #36]
   19c70:	cmp	w0, #0x0
   19c74:	cset	w0, ne  // ne = any
   19c78:	and	w0, w0, #0xff
   19c7c:	and	x0, x0, #0xff
   19c80:	cmp	x0, #0x0
   19c84:	b.eq	19d38 <elf_update@@ELFUTILS_1.0+0x6280>  // b.none
   19c88:	add	x0, sp, #0x38
   19c8c:	add	x1, sp, #0x8, lsl #12
   19c90:	str	x0, [x1, #4240]
   19c94:	add	x0, sp, #0x8, lsl #12
   19c98:	ldr	x0, [x0, #4256]
   19c9c:	ldr	x0, [x0, #16]
   19ca0:	cmp	x0, #0x8, lsl #12
   19ca4:	b.ls	19cec <elf_update@@ELFUTILS_1.0+0x6234>  // b.plast
   19ca8:	add	x0, sp, #0x8, lsl #12
   19cac:	ldr	x0, [x0, #4256]
   19cb0:	ldr	x0, [x0, #16]
   19cb4:	bl	3140 <malloc@plt>
   19cb8:	add	x1, sp, #0x8, lsl #12
   19cbc:	str	x0, [x1, #4240]
   19cc0:	add	x0, sp, #0x8, lsl #12
   19cc4:	ldr	x0, [x0, #4240]
   19cc8:	cmp	x0, #0x0
   19ccc:	cset	w0, eq  // eq = none
   19cd0:	and	w0, w0, #0xff
   19cd4:	and	x0, x0, #0xff
   19cd8:	cmp	x0, #0x0
   19cdc:	b.eq	19cec <elf_update@@ELFUTILS_1.0+0x6234>  // b.none
   19ce0:	mov	w0, #0x8                   	// #8
   19ce4:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   19ce8:	b	19be4 <elf_update@@ELFUTILS_1.0+0x612c>
   19cec:	add	x0, sp, #0x8, lsl #12
   19cf0:	ldr	x0, [x0, #4256]
   19cf4:	ldr	w1, [x0, #8]
   19cf8:	adrp	x0, 35000 <elf_compress_gnu@@ELFUTILS_1.7+0x1495c>
   19cfc:	add	x0, x0, #0xbd8
   19d00:	mov	w1, w1
   19d04:	add	x1, x1, #0x1b
   19d08:	ldr	x4, [x0, x1, lsl #3]
   19d0c:	add	x0, sp, #0x8, lsl #12
   19d10:	ldr	x0, [x0, #4256]
   19d14:	ldr	x1, [x0]
   19d18:	add	x0, sp, #0x8, lsl #12
   19d1c:	ldr	x0, [x0, #4256]
   19d20:	ldr	x0, [x0, #16]
   19d24:	mov	w3, #0x1                   	// #1
   19d28:	mov	x2, x0
   19d2c:	add	x0, sp, #0x8, lsl #12
   19d30:	ldr	x0, [x0, #4240]
   19d34:	blr	x4
   19d38:	ldr	x0, [sp, #40]
   19d3c:	ldr	w4, [x0, #36]
   19d40:	add	x0, sp, #0x8, lsl #12
   19d44:	ldr	x0, [x0, #4256]
   19d48:	ldr	x0, [x0, #16]
   19d4c:	add	x1, sp, #0x8, lsl #12
   19d50:	ldr	x3, [x1, #4296]
   19d54:	mov	x2, x0
   19d58:	add	x0, sp, #0x8, lsl #12
   19d5c:	ldr	x1, [x0, #4240]
   19d60:	mov	w0, w4
   19d64:	bl	17fa4 <elf_update@@ELFUTILS_1.0+0x44ec>
   19d68:	add	x1, sp, #0x8, lsl #12
   19d6c:	str	x0, [x1, #4168]
   19d70:	add	x0, sp, #0x8, lsl #12
   19d74:	ldr	x0, [x0, #4256]
   19d78:	ldr	x1, [x0, #16]
   19d7c:	add	x0, sp, #0x8, lsl #12
   19d80:	ldr	x0, [x0, #4168]
   19d84:	cmp	x1, x0
   19d88:	cset	w0, ne  // ne = any
   19d8c:	and	w0, w0, #0xff
   19d90:	and	x0, x0, #0xff
   19d94:	cmp	x0, #0x0
   19d98:	b.eq	19de4 <elf_update@@ELFUTILS_1.0+0x632c>  // b.none
   19d9c:	add	x0, sp, #0x8, lsl #12
   19da0:	ldr	x0, [x0, #4256]
   19da4:	ldr	x0, [x0]
   19da8:	add	x1, sp, #0x8, lsl #12
   19dac:	ldr	x1, [x1, #4240]
   19db0:	cmp	x1, x0
   19db4:	b.eq	19dd8 <elf_update@@ELFUTILS_1.0+0x6320>  // b.none
   19db8:	add	x0, sp, #0x38
   19dbc:	add	x1, sp, #0x8, lsl #12
   19dc0:	ldr	x1, [x1, #4240]
   19dc4:	cmp	x1, x0
   19dc8:	b.eq	19dd8 <elf_update@@ELFUTILS_1.0+0x6320>  // b.none
   19dcc:	add	x0, sp, #0x8, lsl #12
   19dd0:	ldr	x0, [x0, #4240]
   19dd4:	bl	32a0 <free@plt>
   19dd8:	mov	w0, #0x14                  	// #20
   19ddc:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   19de0:	b	19be4 <elf_update@@ELFUTILS_1.0+0x612c>
   19de4:	add	x0, sp, #0x8, lsl #12
   19de8:	ldr	x0, [x0, #4256]
   19dec:	ldr	x0, [x0]
   19df0:	add	x1, sp, #0x8, lsl #12
   19df4:	ldr	x1, [x1, #4240]
   19df8:	cmp	x1, x0
   19dfc:	b.eq	19e20 <elf_update@@ELFUTILS_1.0+0x6368>  // b.none
   19e00:	add	x0, sp, #0x38
   19e04:	add	x1, sp, #0x8, lsl #12
   19e08:	ldr	x1, [x1, #4240]
   19e0c:	cmp	x1, x0
   19e10:	b.eq	19e20 <elf_update@@ELFUTILS_1.0+0x6368>  // b.none
   19e14:	add	x0, sp, #0x8, lsl #12
   19e18:	ldr	x0, [x0, #4240]
   19e1c:	bl	32a0 <free@plt>
   19e20:	mov	w0, #0x1                   	// #1
   19e24:	add	x1, sp, #0x9, lsl #12
   19e28:	strb	w0, [x1, #159]
   19e2c:	add	x0, sp, #0x8, lsl #12
   19e30:	ldr	x0, [x0, #4256]
   19e34:	ldr	x1, [x0, #16]
   19e38:	add	x0, sp, #0x8, lsl #12
   19e3c:	ldr	x0, [x0, #4296]
   19e40:	add	x0, x1, x0
   19e44:	add	x1, sp, #0x8, lsl #12
   19e48:	str	x0, [x1, #4296]
   19e4c:	add	x0, sp, #0x8, lsl #12
   19e50:	ldr	x0, [x0, #4256]
   19e54:	ldr	w0, [x0, #56]
   19e58:	and	w1, w0, #0xfffffffe
   19e5c:	add	x0, sp, #0x8, lsl #12
   19e60:	ldr	x0, [x0, #4256]
   19e64:	str	w1, [x0, #56]
   19e68:	add	x0, sp, #0x8, lsl #12
   19e6c:	ldr	x0, [x0, #4256]
   19e70:	ldr	x0, [x0, #48]
   19e74:	add	x1, sp, #0x8, lsl #12
   19e78:	str	x0, [x1, #4256]
   19e7c:	add	x0, sp, #0x8, lsl #12
   19e80:	ldr	x0, [x0, #4256]
   19e84:	cmp	x0, #0x0
   19e88:	b.ne	19ae0 <elf_update@@ELFUTILS_1.0+0x6028>  // b.any
   19e8c:	b	19f38 <elf_update@@ELFUTILS_1.0+0x6480>
   19e90:	add	x0, sp, #0x8, lsl #12
   19e94:	ldr	x1, [x0, #4176]
   19e98:	add	x0, sp, #0x8, lsl #12
   19e9c:	ldr	x0, [x0, #4296]
   19ea0:	cmp	x1, x0
   19ea4:	b.le	19f18 <elf_update@@ELFUTILS_1.0+0x6460>
   19ea8:	add	x0, sp, #0x9, lsl #12
   19eac:	ldrb	w0, [x0, #239]
   19eb0:	cmp	w0, #0x0
   19eb4:	b.eq	19f18 <elf_update@@ELFUTILS_1.0+0x6460>  // b.none
   19eb8:	ldr	x0, [sp, #40]
   19ebc:	ldr	w5, [x0, #36]
   19ec0:	add	x0, sp, #0x8, lsl #12
   19ec4:	ldr	x1, [x0, #4176]
   19ec8:	add	x0, sp, #0x8, lsl #12
   19ecc:	ldr	x0, [x0, #4296]
   19ed0:	sub	x0, x1, x0
   19ed4:	mov	x2, x0
   19ed8:	add	x1, sp, #0x8, lsl #12
   19edc:	add	x1, x1, #0x40
   19ee0:	add	x0, sp, #0x8, lsl #12
   19ee4:	add	x0, x0, #0x48
   19ee8:	mov	x4, x1
   19eec:	mov	x3, x0
   19ef0:	add	x0, sp, #0x8, lsl #12
   19ef4:	ldr	x1, [x0, #4296]
   19ef8:	mov	w0, w5
   19efc:	bl	192a0 <elf_update@@ELFUTILS_1.0+0x57e8>
   19f00:	cmp	w0, #0x0
   19f04:	cset	w0, ne  // ne = any
   19f08:	and	w0, w0, #0xff
   19f0c:	and	x0, x0, #0xff
   19f10:	cmp	x0, #0x0
   19f14:	b.ne	19bd8 <elf_update@@ELFUTILS_1.0+0x6120>  // b.any
   19f18:	add	x0, sp, #0x8, lsl #12
   19f1c:	ldr	x0, [x0, #4184]
   19f20:	ldr	x1, [x0, #32]
   19f24:	add	x0, sp, #0x8, lsl #12
   19f28:	ldr	x0, [x0, #4176]
   19f2c:	add	x0, x1, x0
   19f30:	add	x1, sp, #0x8, lsl #12
   19f34:	str	x0, [x1, #4296]
   19f38:	add	x0, sp, #0x9, lsl #12
   19f3c:	ldrb	w0, [x0, #159]
   19f40:	add	x1, sp, #0x9, lsl #12
   19f44:	strb	w0, [x1, #239]
   19f48:	b	19f58 <elf_update@@ELFUTILS_1.0+0x64a0>
   19f4c:	nop
   19f50:	b	19f58 <elf_update@@ELFUTILS_1.0+0x64a0>
   19f54:	nop
   19f58:	ldr	w0, [sp, #36]
   19f5c:	cmp	w0, #0x0
   19f60:	cset	w0, ne  // ne = any
   19f64:	and	w0, w0, #0xff
   19f68:	and	x0, x0, #0xff
   19f6c:	cmp	x0, #0x0
   19f70:	b.eq	19fc0 <elf_update@@ELFUTILS_1.0+0x6508>  // b.none
   19f74:	adrp	x0, 35000 <elf_compress_gnu@@ELFUTILS_1.7+0x1495c>
   19f78:	add	x0, x0, #0xbd8
   19f7c:	ldr	x4, [x0, #288]
   19f80:	add	x0, sp, #0x8, lsl #12
   19f84:	ldr	x0, [x0, #4192]
   19f88:	ldr	x0, [x0, #128]
   19f8c:	lsl	x0, x0, #6
   19f90:	add	x1, sp, #0x8, lsl #12
   19f94:	ldr	x1, [x1, #4288]
   19f98:	add	x5, x1, x0
   19f9c:	add	x0, sp, #0x8, lsl #12
   19fa0:	ldr	x0, [x0, #4192]
   19fa4:	ldr	x0, [x0, #144]
   19fa8:	mov	w3, #0x1                   	// #1
   19fac:	mov	x2, #0x40                  	// #64
   19fb0:	mov	x1, x0
   19fb4:	mov	x0, x5
   19fb8:	blr	x4
   19fbc:	b	1a01c <elf_update@@ELFUTILS_1.0+0x6564>
   19fc0:	ldr	x0, [sp, #40]
   19fc4:	ldr	x0, [x0, #80]
   19fc8:	cmp	x0, #0x0
   19fcc:	b.eq	19fe4 <elf_update@@ELFUTILS_1.0+0x652c>  // b.none
   19fd0:	ldr	x0, [sp, #40]
   19fd4:	ldr	w0, [x0, #56]
   19fd8:	and	w0, w0, #0x1
   19fdc:	cmp	w0, #0x0
   19fe0:	b.eq	1a01c <elf_update@@ELFUTILS_1.0+0x6564>  // b.none
   19fe4:	add	x0, sp, #0x8, lsl #12
   19fe8:	ldr	x0, [x0, #4192]
   19fec:	ldr	x0, [x0, #128]
   19ff0:	lsl	x0, x0, #6
   19ff4:	add	x1, sp, #0x8, lsl #12
   19ff8:	ldr	x1, [x1, #4288]
   19ffc:	add	x3, x1, x0
   1a000:	add	x0, sp, #0x8, lsl #12
   1a004:	ldr	x0, [x0, #4192]
   1a008:	ldr	x0, [x0, #144]
   1a00c:	mov	x2, #0x40                  	// #64
   1a010:	mov	x1, x0
   1a014:	mov	x0, x3
   1a018:	bl	30a0 <memcpy@plt>
   1a01c:	add	x0, sp, #0x8, lsl #12
   1a020:	ldr	x0, [x0, #4192]
   1a024:	ldr	w1, [x0, #152]
   1a028:	add	x0, sp, #0x8, lsl #12
   1a02c:	ldr	w0, [x0, #4276]
   1a030:	orr	w0, w1, w0
   1a034:	add	x1, sp, #0x8, lsl #12
   1a038:	str	w0, [x1, #4276]
   1a03c:	add	x0, sp, #0x8, lsl #12
   1a040:	ldr	x0, [x0, #4192]
   1a044:	ldr	w0, [x0, #152]
   1a048:	and	w1, w0, #0xfffffffe
   1a04c:	add	x0, sp, #0x8, lsl #12
   1a050:	ldr	x0, [x0, #4192]
   1a054:	str	w1, [x0, #152]
   1a058:	add	x0, sp, #0x8, lsl #12
   1a05c:	ldr	x0, [x0, #4264]
   1a060:	add	x0, x0, #0x1
   1a064:	add	x1, sp, #0x8, lsl #12
   1a068:	str	x0, [x1, #4264]
   1a06c:	add	x0, sp, #0x8, lsl #12
   1a070:	ldr	x1, [x0, #4264]
   1a074:	ldr	x0, [sp, #24]
   1a078:	cmp	x1, x0
   1a07c:	b.cc	199f8 <elf_update@@ELFUTILS_1.0+0x5f40>  // b.lo, b.ul, b.last
   1a080:	ldr	x0, [sp, #40]
   1a084:	ldr	w0, [x0, #56]
   1a088:	and	w0, w0, #0x1
   1a08c:	cmp	w0, #0x0
   1a090:	b.eq	1a10c <elf_update@@ELFUTILS_1.0+0x6654>  // b.none
   1a094:	add	x0, sp, #0x8, lsl #12
   1a098:	ldr	x1, [x0, #4296]
   1a09c:	add	x0, sp, #0x8, lsl #12
   1a0a0:	ldr	x0, [x0, #4216]
   1a0a4:	cmp	x1, x0
   1a0a8:	b.ge	1a10c <elf_update@@ELFUTILS_1.0+0x6654>  // b.tcont
   1a0ac:	ldr	x0, [sp, #40]
   1a0b0:	ldr	w5, [x0, #36]
   1a0b4:	add	x0, sp, #0x8, lsl #12
   1a0b8:	ldr	x1, [x0, #4216]
   1a0bc:	add	x0, sp, #0x8, lsl #12
   1a0c0:	ldr	x0, [x0, #4296]
   1a0c4:	sub	x0, x1, x0
   1a0c8:	mov	x2, x0
   1a0cc:	add	x1, sp, #0x8, lsl #12
   1a0d0:	add	x1, x1, #0x40
   1a0d4:	add	x0, sp, #0x8, lsl #12
   1a0d8:	add	x0, x0, #0x48
   1a0dc:	mov	x4, x1
   1a0e0:	mov	x3, x0
   1a0e4:	add	x0, sp, #0x8, lsl #12
   1a0e8:	ldr	x1, [x0, #4296]
   1a0ec:	mov	w0, w5
   1a0f0:	bl	192a0 <elf_update@@ELFUTILS_1.0+0x57e8>
   1a0f4:	cmp	w0, #0x0
   1a0f8:	cset	w0, ne  // ne = any
   1a0fc:	and	w0, w0, #0xff
   1a100:	and	x0, x0, #0xff
   1a104:	cmp	x0, #0x0
   1a108:	b.ne	19be0 <elf_update@@ELFUTILS_1.0+0x6128>  // b.any
   1a10c:	add	x0, sp, #0x8, lsl #12
   1a110:	ldr	w0, [x0, #4276]
   1a114:	and	w0, w0, #0x1
   1a118:	cmp	w0, #0x0
   1a11c:	b.eq	1a17c <elf_update@@ELFUTILS_1.0+0x66c4>  // b.none
   1a120:	ldr	x0, [sp, #40]
   1a124:	ldr	w4, [x0, #36]
   1a128:	ldr	x0, [sp, #24]
   1a12c:	lsl	x0, x0, #6
   1a130:	add	x1, sp, #0x8, lsl #12
   1a134:	ldr	x3, [x1, #4216]
   1a138:	mov	x2, x0
   1a13c:	add	x0, sp, #0x8, lsl #12
   1a140:	ldr	x1, [x0, #4288]
   1a144:	mov	w0, w4
   1a148:	bl	17fa4 <elf_update@@ELFUTILS_1.0+0x44ec>
   1a14c:	mov	x1, x0
   1a150:	ldr	x0, [sp, #24]
   1a154:	lsl	x0, x0, #6
   1a158:	cmp	x1, x0
   1a15c:	cset	w0, ne  // ne = any
   1a160:	and	w0, w0, #0xff
   1a164:	and	x0, x0, #0xff
   1a168:	cmp	x0, #0x0
   1a16c:	b.eq	1a17c <elf_update@@ELFUTILS_1.0+0x66c4>  // b.none
   1a170:	mov	w0, #0x14                  	// #20
   1a174:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1a178:	b	19be4 <elf_update@@ELFUTILS_1.0+0x612c>
   1a17c:	add	x0, sp, #0x8, lsl #12
   1a180:	ldr	x0, [x0, #4280]
   1a184:	bl	32a0 <free@plt>
   1a188:	add	x0, sp, #0x8, lsl #12
   1a18c:	ldr	x0, [x0, #4200]
   1a190:	bl	32a0 <free@plt>
   1a194:	ldr	x0, [sp, #40]
   1a198:	ldr	w0, [x0, #56]
   1a19c:	and	w1, w0, #0xfffffffe
   1a1a0:	ldr	x0, [sp, #40]
   1a1a4:	str	w1, [x0, #56]
   1a1a8:	mov	w0, #0x0                   	// #0
   1a1ac:	ldp	x29, x30, [sp]
   1a1b0:	mov	x12, #0x90f0                	// #37104
   1a1b4:	add	sp, sp, x12
   1a1b8:	ret

000000000001a1bc <gelf_getsym@@ELFUTILS_1.0>:
   1a1bc:	stp	x29, x30, [sp, #-80]!
   1a1c0:	mov	x29, sp
   1a1c4:	str	x0, [sp, #40]
   1a1c8:	str	w1, [sp, #36]
   1a1cc:	str	x2, [sp, #24]
   1a1d0:	ldr	x0, [sp, #40]
   1a1d4:	str	x0, [sp, #64]
   1a1d8:	str	xzr, [sp, #72]
   1a1dc:	ldr	x0, [sp, #40]
   1a1e0:	cmp	x0, #0x0
   1a1e4:	b.ne	1a1f0 <gelf_getsym@@ELFUTILS_1.0+0x34>  // b.any
   1a1e8:	mov	x0, #0x0                   	// #0
   1a1ec:	b	1a380 <gelf_getsym@@ELFUTILS_1.0+0x1c4>
   1a1f0:	ldr	x0, [sp, #40]
   1a1f4:	ldr	w0, [x0, #8]
   1a1f8:	cmp	w0, #0xb
   1a1fc:	cset	w0, ne  // ne = any
   1a200:	and	w0, w0, #0xff
   1a204:	and	x0, x0, #0xff
   1a208:	cmp	x0, #0x0
   1a20c:	b.eq	1a220 <gelf_getsym@@ELFUTILS_1.0+0x64>  // b.none
   1a210:	mov	w0, #0x4                   	// #4
   1a214:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1a218:	mov	x0, #0x0                   	// #0
   1a21c:	b	1a380 <gelf_getsym@@ELFUTILS_1.0+0x1c4>
   1a220:	ldr	x0, [sp, #64]
   1a224:	ldr	x0, [x0, #40]
   1a228:	ldr	x0, [x0, #136]
   1a22c:	ldr	w0, [x0, #32]
   1a230:	cmp	w0, #0x1
   1a234:	b.ne	1a2f4 <gelf_getsym@@ELFUTILS_1.0+0x138>  // b.any
   1a238:	ldr	x0, [sp, #40]
   1a23c:	ldr	x0, [x0, #16]
   1a240:	lsr	x1, x0, #4
   1a244:	ldr	w0, [sp, #36]
   1a248:	mov	w0, w0
   1a24c:	cmp	x1, x0
   1a250:	cset	w0, ls  // ls = plast
   1a254:	and	w0, w0, #0xff
   1a258:	and	x0, x0, #0xff
   1a25c:	cmp	x0, #0x0
   1a260:	b.eq	1a270 <gelf_getsym@@ELFUTILS_1.0+0xb4>  // b.none
   1a264:	mov	w0, #0x16                  	// #22
   1a268:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1a26c:	b	1a37c <gelf_getsym@@ELFUTILS_1.0+0x1c0>
   1a270:	ldr	x0, [sp, #40]
   1a274:	ldr	x1, [x0]
   1a278:	ldrsw	x0, [sp, #36]
   1a27c:	lsl	x0, x0, #4
   1a280:	add	x0, x1, x0
   1a284:	str	x0, [sp, #56]
   1a288:	ldr	x0, [sp, #56]
   1a28c:	ldr	w1, [x0]
   1a290:	ldr	x0, [sp, #24]
   1a294:	str	w1, [x0]
   1a298:	ldr	x0, [sp, #56]
   1a29c:	ldrb	w1, [x0, #12]
   1a2a0:	ldr	x0, [sp, #24]
   1a2a4:	strb	w1, [x0, #4]
   1a2a8:	ldr	x0, [sp, #56]
   1a2ac:	ldrb	w1, [x0, #13]
   1a2b0:	ldr	x0, [sp, #24]
   1a2b4:	strb	w1, [x0, #5]
   1a2b8:	ldr	x0, [sp, #56]
   1a2bc:	ldrh	w1, [x0, #14]
   1a2c0:	ldr	x0, [sp, #24]
   1a2c4:	strh	w1, [x0, #6]
   1a2c8:	ldr	x0, [sp, #56]
   1a2cc:	ldr	w0, [x0, #4]
   1a2d0:	mov	w1, w0
   1a2d4:	ldr	x0, [sp, #24]
   1a2d8:	str	x1, [x0, #8]
   1a2dc:	ldr	x0, [sp, #56]
   1a2e0:	ldr	w0, [x0, #8]
   1a2e4:	mov	w1, w0
   1a2e8:	ldr	x0, [sp, #24]
   1a2ec:	str	x1, [x0, #16]
   1a2f0:	b	1a374 <gelf_getsym@@ELFUTILS_1.0+0x1b8>
   1a2f4:	ldr	x0, [sp, #40]
   1a2f8:	ldr	x1, [x0, #16]
   1a2fc:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   1a300:	movk	x0, #0xaaab
   1a304:	umulh	x0, x1, x0
   1a308:	lsr	x1, x0, #4
   1a30c:	ldr	w0, [sp, #36]
   1a310:	mov	w0, w0
   1a314:	cmp	x1, x0
   1a318:	cset	w0, ls  // ls = plast
   1a31c:	and	w0, w0, #0xff
   1a320:	and	x0, x0, #0xff
   1a324:	cmp	x0, #0x0
   1a328:	b.eq	1a338 <gelf_getsym@@ELFUTILS_1.0+0x17c>  // b.none
   1a32c:	mov	w0, #0x16                  	// #22
   1a330:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1a334:	b	1a37c <gelf_getsym@@ELFUTILS_1.0+0x1c0>
   1a338:	ldr	x0, [sp, #40]
   1a33c:	ldr	x2, [x0]
   1a340:	ldrsw	x1, [sp, #36]
   1a344:	mov	x0, x1
   1a348:	lsl	x0, x0, #1
   1a34c:	add	x0, x0, x1
   1a350:	lsl	x0, x0, #3
   1a354:	add	x0, x2, x0
   1a358:	ldr	x1, [sp, #24]
   1a35c:	mov	x2, x1
   1a360:	mov	x3, x0
   1a364:	ldp	x0, x1, [x3]
   1a368:	stp	x0, x1, [x2]
   1a36c:	ldr	x0, [x3, #16]
   1a370:	str	x0, [x2, #16]
   1a374:	ldr	x0, [sp, #24]
   1a378:	str	x0, [sp, #72]
   1a37c:	ldr	x0, [sp, #72]
   1a380:	ldp	x29, x30, [sp], #80
   1a384:	ret

000000000001a388 <gelf_update_sym@@ELFUTILS_1.0>:
   1a388:	stp	x29, x30, [sp, #-80]!
   1a38c:	mov	x29, sp
   1a390:	str	x0, [sp, #40]
   1a394:	str	w1, [sp, #36]
   1a398:	str	x2, [sp, #24]
   1a39c:	ldr	x0, [sp, #40]
   1a3a0:	str	x0, [sp, #64]
   1a3a4:	str	wzr, [sp, #76]
   1a3a8:	ldr	x0, [sp, #40]
   1a3ac:	cmp	x0, #0x0
   1a3b0:	b.ne	1a3bc <gelf_update_sym@@ELFUTILS_1.0+0x34>  // b.any
   1a3b4:	mov	w0, #0x0                   	// #0
   1a3b8:	b	1a5bc <gelf_update_sym@@ELFUTILS_1.0+0x234>
   1a3bc:	ldr	x0, [sp, #64]
   1a3c0:	ldr	w0, [x0, #8]
   1a3c4:	cmp	w0, #0xb
   1a3c8:	cset	w0, ne  // ne = any
   1a3cc:	and	w0, w0, #0xff
   1a3d0:	and	x0, x0, #0xff
   1a3d4:	cmp	x0, #0x0
   1a3d8:	b.eq	1a3ec <gelf_update_sym@@ELFUTILS_1.0+0x64>  // b.none
   1a3dc:	mov	w0, #0x1f                  	// #31
   1a3e0:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1a3e4:	mov	w0, #0x0                   	// #0
   1a3e8:	b	1a5bc <gelf_update_sym@@ELFUTILS_1.0+0x234>
   1a3ec:	ldr	x0, [sp, #64]
   1a3f0:	ldr	x0, [x0, #40]
   1a3f4:	str	x0, [sp, #56]
   1a3f8:	ldr	x0, [sp, #56]
   1a3fc:	ldr	x0, [x0, #136]
   1a400:	ldr	w0, [x0, #32]
   1a404:	cmp	w0, #0x1
   1a408:	b.ne	1a51c <gelf_update_sym@@ELFUTILS_1.0+0x194>  // b.any
   1a40c:	ldr	x0, [sp, #24]
   1a410:	ldr	x1, [x0, #8]
   1a414:	mov	x0, #0xffffffff            	// #4294967295
   1a418:	cmp	x1, x0
   1a41c:	cset	w0, hi  // hi = pmore
   1a420:	and	w0, w0, #0xff
   1a424:	and	x0, x0, #0xff
   1a428:	cmp	x0, #0x0
   1a42c:	b.ne	1a454 <gelf_update_sym@@ELFUTILS_1.0+0xcc>  // b.any
   1a430:	ldr	x0, [sp, #24]
   1a434:	ldr	x1, [x0, #16]
   1a438:	mov	x0, #0xffffffff            	// #4294967295
   1a43c:	cmp	x1, x0
   1a440:	cset	w0, hi  // hi = pmore
   1a444:	and	w0, w0, #0xff
   1a448:	and	x0, x0, #0xff
   1a44c:	cmp	x0, #0x0
   1a450:	b.eq	1a460 <gelf_update_sym@@ELFUTILS_1.0+0xd8>  // b.none
   1a454:	mov	w0, #0x21                  	// #33
   1a458:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1a45c:	b	1a5b8 <gelf_update_sym@@ELFUTILS_1.0+0x230>
   1a460:	ldr	x0, [sp, #64]
   1a464:	ldr	x0, [x0, #16]
   1a468:	lsr	x1, x0, #4
   1a46c:	ldr	w0, [sp, #36]
   1a470:	mov	w0, w0
   1a474:	cmp	x1, x0
   1a478:	cset	w0, ls  // ls = plast
   1a47c:	and	w0, w0, #0xff
   1a480:	and	x0, x0, #0xff
   1a484:	cmp	x0, #0x0
   1a488:	b.eq	1a498 <gelf_update_sym@@ELFUTILS_1.0+0x110>  // b.none
   1a48c:	mov	w0, #0x16                  	// #22
   1a490:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1a494:	b	1a5b8 <gelf_update_sym@@ELFUTILS_1.0+0x230>
   1a498:	ldr	x0, [sp, #64]
   1a49c:	ldr	x1, [x0]
   1a4a0:	ldrsw	x0, [sp, #36]
   1a4a4:	lsl	x0, x0, #4
   1a4a8:	add	x0, x1, x0
   1a4ac:	str	x0, [sp, #48]
   1a4b0:	ldr	x0, [sp, #24]
   1a4b4:	ldr	w1, [x0]
   1a4b8:	ldr	x0, [sp, #48]
   1a4bc:	str	w1, [x0]
   1a4c0:	ldr	x0, [sp, #24]
   1a4c4:	ldr	x0, [x0, #8]
   1a4c8:	mov	w1, w0
   1a4cc:	ldr	x0, [sp, #48]
   1a4d0:	str	w1, [x0, #4]
   1a4d4:	ldr	x0, [sp, #24]
   1a4d8:	ldr	x0, [x0, #16]
   1a4dc:	mov	w1, w0
   1a4e0:	ldr	x0, [sp, #48]
   1a4e4:	str	w1, [x0, #8]
   1a4e8:	ldr	x0, [sp, #24]
   1a4ec:	ldrb	w1, [x0, #4]
   1a4f0:	ldr	x0, [sp, #48]
   1a4f4:	strb	w1, [x0, #12]
   1a4f8:	ldr	x0, [sp, #24]
   1a4fc:	ldrb	w1, [x0, #5]
   1a500:	ldr	x0, [sp, #48]
   1a504:	strb	w1, [x0, #13]
   1a508:	ldr	x0, [sp, #24]
   1a50c:	ldrh	w1, [x0, #6]
   1a510:	ldr	x0, [sp, #48]
   1a514:	strh	w1, [x0, #14]
   1a518:	b	1a59c <gelf_update_sym@@ELFUTILS_1.0+0x214>
   1a51c:	ldr	x0, [sp, #64]
   1a520:	ldr	x1, [x0, #16]
   1a524:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   1a528:	movk	x0, #0xaaab
   1a52c:	umulh	x0, x1, x0
   1a530:	lsr	x1, x0, #4
   1a534:	ldr	w0, [sp, #36]
   1a538:	mov	w0, w0
   1a53c:	cmp	x1, x0
   1a540:	cset	w0, ls  // ls = plast
   1a544:	and	w0, w0, #0xff
   1a548:	and	x0, x0, #0xff
   1a54c:	cmp	x0, #0x0
   1a550:	b.eq	1a560 <gelf_update_sym@@ELFUTILS_1.0+0x1d8>  // b.none
   1a554:	mov	w0, #0x16                  	// #22
   1a558:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1a55c:	b	1a5b8 <gelf_update_sym@@ELFUTILS_1.0+0x230>
   1a560:	ldr	x0, [sp, #64]
   1a564:	ldr	x2, [x0]
   1a568:	ldrsw	x1, [sp, #36]
   1a56c:	mov	x0, x1
   1a570:	lsl	x0, x0, #1
   1a574:	add	x0, x0, x1
   1a578:	lsl	x0, x0, #3
   1a57c:	add	x1, x2, x0
   1a580:	ldr	x0, [sp, #24]
   1a584:	mov	x2, x1
   1a588:	mov	x3, x0
   1a58c:	ldp	x0, x1, [x3]
   1a590:	stp	x0, x1, [x2]
   1a594:	ldr	x0, [x3, #16]
   1a598:	str	x0, [x2, #16]
   1a59c:	mov	w0, #0x1                   	// #1
   1a5a0:	str	w0, [sp, #76]
   1a5a4:	ldr	x0, [sp, #56]
   1a5a8:	ldr	w0, [x0, #156]
   1a5ac:	orr	w1, w0, #0x1
   1a5b0:	ldr	x0, [sp, #56]
   1a5b4:	str	w1, [x0, #156]
   1a5b8:	ldr	w0, [sp, #76]
   1a5bc:	ldp	x29, x30, [sp], #80
   1a5c0:	ret

000000000001a5c4 <gelf_getversym@@ELFUTILS_1.0>:
   1a5c4:	stp	x29, x30, [sp, #-80]!
   1a5c8:	mov	x29, sp
   1a5cc:	str	x0, [sp, #40]
   1a5d0:	str	w1, [sp, #36]
   1a5d4:	str	x2, [sp, #24]
   1a5d8:	ldr	x0, [sp, #40]
   1a5dc:	str	x0, [sp, #64]
   1a5e0:	ldr	x0, [sp, #40]
   1a5e4:	cmp	x0, #0x0
   1a5e8:	b.ne	1a5f4 <gelf_getversym@@ELFUTILS_1.0+0x30>  // b.any
   1a5ec:	mov	x0, #0x0                   	// #0
   1a5f0:	b	1a698 <gelf_getversym@@ELFUTILS_1.0+0xd4>
   1a5f4:	ldr	x0, [sp, #40]
   1a5f8:	ldr	w0, [x0, #8]
   1a5fc:	cmp	w0, #0x4
   1a600:	cset	w0, ne  // ne = any
   1a604:	and	w0, w0, #0xff
   1a608:	and	x0, x0, #0xff
   1a60c:	cmp	x0, #0x0
   1a610:	b.eq	1a624 <gelf_getversym@@ELFUTILS_1.0+0x60>  // b.none
   1a614:	mov	w0, #0x4                   	// #4
   1a618:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1a61c:	mov	x0, #0x0                   	// #0
   1a620:	b	1a698 <gelf_getversym@@ELFUTILS_1.0+0xd4>
   1a624:	ldr	x0, [sp, #64]
   1a628:	ldr	x0, [x0, #40]
   1a62c:	str	x0, [sp, #56]
   1a630:	ldr	x0, [sp, #40]
   1a634:	ldr	x0, [x0, #16]
   1a638:	lsr	x1, x0, #1
   1a63c:	ldr	w0, [sp, #36]
   1a640:	mov	w0, w0
   1a644:	cmp	x1, x0
   1a648:	cset	w0, ls  // ls = plast
   1a64c:	and	w0, w0, #0xff
   1a650:	and	x0, x0, #0xff
   1a654:	cmp	x0, #0x0
   1a658:	b.eq	1a66c <gelf_getversym@@ELFUTILS_1.0+0xa8>  // b.none
   1a65c:	mov	w0, #0x16                  	// #22
   1a660:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1a664:	str	xzr, [sp, #72]
   1a668:	b	1a694 <gelf_getversym@@ELFUTILS_1.0+0xd0>
   1a66c:	ldr	x0, [sp, #40]
   1a670:	ldr	x1, [x0]
   1a674:	ldrsw	x0, [sp, #36]
   1a678:	lsl	x0, x0, #1
   1a67c:	add	x0, x1, x0
   1a680:	ldrh	w1, [x0]
   1a684:	ldr	x0, [sp, #24]
   1a688:	strh	w1, [x0]
   1a68c:	ldr	x0, [sp, #24]
   1a690:	str	x0, [sp, #72]
   1a694:	ldr	x0, [sp, #72]
   1a698:	ldp	x29, x30, [sp], #80
   1a69c:	ret

000000000001a6a0 <gelf_getverneed@@ELFUTILS_1.0>:
   1a6a0:	stp	x29, x30, [sp, #-64]!
   1a6a4:	mov	x29, sp
   1a6a8:	str	x0, [sp, #40]
   1a6ac:	str	w1, [sp, #36]
   1a6b0:	str	x2, [sp, #24]
   1a6b4:	ldr	x0, [sp, #40]
   1a6b8:	cmp	x0, #0x0
   1a6bc:	b.ne	1a6c8 <gelf_getverneed@@ELFUTILS_1.0+0x28>  // b.any
   1a6c0:	mov	x0, #0x0                   	// #0
   1a6c4:	b	1a790 <gelf_getverneed@@ELFUTILS_1.0+0xf0>
   1a6c8:	ldr	x0, [sp, #40]
   1a6cc:	ldr	w0, [x0, #8]
   1a6d0:	cmp	w0, #0x11
   1a6d4:	cset	w0, ne  // ne = any
   1a6d8:	and	w0, w0, #0xff
   1a6dc:	and	x0, x0, #0xff
   1a6e0:	cmp	x0, #0x0
   1a6e4:	b.eq	1a6f8 <gelf_getverneed@@ELFUTILS_1.0+0x58>  // b.none
   1a6e8:	mov	w0, #0x4                   	// #4
   1a6ec:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1a6f0:	mov	x0, #0x0                   	// #0
   1a6f4:	b	1a790 <gelf_getverneed@@ELFUTILS_1.0+0xf0>
   1a6f8:	ldr	w0, [sp, #36]
   1a6fc:	lsr	w0, w0, #31
   1a700:	and	w0, w0, #0xff
   1a704:	and	x0, x0, #0xff
   1a708:	cmp	x0, #0x0
   1a70c:	b.ne	1a758 <gelf_getverneed@@ELFUTILS_1.0+0xb8>  // b.any
   1a710:	ldrsw	x0, [sp, #36]
   1a714:	add	x1, x0, #0x10
   1a718:	ldr	x0, [sp, #40]
   1a71c:	ldr	x0, [x0, #16]
   1a720:	cmp	x1, x0
   1a724:	cset	w0, hi  // hi = pmore
   1a728:	and	w0, w0, #0xff
   1a72c:	and	x0, x0, #0xff
   1a730:	cmp	x0, #0x0
   1a734:	b.ne	1a758 <gelf_getverneed@@ELFUTILS_1.0+0xb8>  // b.any
   1a738:	ldrsw	x0, [sp, #36]
   1a73c:	and	x0, x0, #0xf
   1a740:	cmp	x0, #0x0
   1a744:	cset	w0, ne  // ne = any
   1a748:	and	w0, w0, #0xff
   1a74c:	and	x0, x0, #0xff
   1a750:	cmp	x0, #0x0
   1a754:	b.eq	1a768 <gelf_getverneed@@ELFUTILS_1.0+0xc8>  // b.none
   1a758:	mov	w0, #0x1d                  	// #29
   1a75c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1a760:	str	xzr, [sp, #56]
   1a764:	b	1a78c <gelf_getverneed@@ELFUTILS_1.0+0xec>
   1a768:	ldr	x0, [sp, #40]
   1a76c:	ldr	x1, [x0]
   1a770:	ldrsw	x0, [sp, #36]
   1a774:	add	x0, x1, x0
   1a778:	ldp	x0, x1, [x0]
   1a77c:	ldr	x2, [sp, #24]
   1a780:	stp	x0, x1, [x2]
   1a784:	ldr	x0, [sp, #24]
   1a788:	str	x0, [sp, #56]
   1a78c:	ldr	x0, [sp, #56]
   1a790:	ldp	x29, x30, [sp], #64
   1a794:	ret

000000000001a798 <gelf_getvernaux@@ELFUTILS_1.0>:
   1a798:	stp	x29, x30, [sp, #-64]!
   1a79c:	mov	x29, sp
   1a7a0:	str	x0, [sp, #40]
   1a7a4:	str	w1, [sp, #36]
   1a7a8:	str	x2, [sp, #24]
   1a7ac:	ldr	x0, [sp, #40]
   1a7b0:	cmp	x0, #0x0
   1a7b4:	b.ne	1a7c0 <gelf_getvernaux@@ELFUTILS_1.0+0x28>  // b.any
   1a7b8:	mov	x0, #0x0                   	// #0
   1a7bc:	b	1a888 <gelf_getvernaux@@ELFUTILS_1.0+0xf0>
   1a7c0:	ldr	x0, [sp, #40]
   1a7c4:	ldr	w0, [x0, #8]
   1a7c8:	cmp	w0, #0x11
   1a7cc:	cset	w0, ne  // ne = any
   1a7d0:	and	w0, w0, #0xff
   1a7d4:	and	x0, x0, #0xff
   1a7d8:	cmp	x0, #0x0
   1a7dc:	b.eq	1a7f0 <gelf_getvernaux@@ELFUTILS_1.0+0x58>  // b.none
   1a7e0:	mov	w0, #0x4                   	// #4
   1a7e4:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1a7e8:	mov	x0, #0x0                   	// #0
   1a7ec:	b	1a888 <gelf_getvernaux@@ELFUTILS_1.0+0xf0>
   1a7f0:	ldr	w0, [sp, #36]
   1a7f4:	lsr	w0, w0, #31
   1a7f8:	and	w0, w0, #0xff
   1a7fc:	and	x0, x0, #0xff
   1a800:	cmp	x0, #0x0
   1a804:	b.ne	1a850 <gelf_getvernaux@@ELFUTILS_1.0+0xb8>  // b.any
   1a808:	ldrsw	x0, [sp, #36]
   1a80c:	add	x1, x0, #0x10
   1a810:	ldr	x0, [sp, #40]
   1a814:	ldr	x0, [x0, #16]
   1a818:	cmp	x1, x0
   1a81c:	cset	w0, hi  // hi = pmore
   1a820:	and	w0, w0, #0xff
   1a824:	and	x0, x0, #0xff
   1a828:	cmp	x0, #0x0
   1a82c:	b.ne	1a850 <gelf_getvernaux@@ELFUTILS_1.0+0xb8>  // b.any
   1a830:	ldrsw	x0, [sp, #36]
   1a834:	and	x0, x0, #0xf
   1a838:	cmp	x0, #0x0
   1a83c:	cset	w0, ne  // ne = any
   1a840:	and	w0, w0, #0xff
   1a844:	and	x0, x0, #0xff
   1a848:	cmp	x0, #0x0
   1a84c:	b.eq	1a860 <gelf_getvernaux@@ELFUTILS_1.0+0xc8>  // b.none
   1a850:	mov	w0, #0x1d                  	// #29
   1a854:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1a858:	str	xzr, [sp, #56]
   1a85c:	b	1a884 <gelf_getvernaux@@ELFUTILS_1.0+0xec>
   1a860:	ldr	x0, [sp, #40]
   1a864:	ldr	x1, [x0]
   1a868:	ldrsw	x0, [sp, #36]
   1a86c:	add	x0, x1, x0
   1a870:	ldp	x0, x1, [x0]
   1a874:	ldr	x2, [sp, #24]
   1a878:	stp	x0, x1, [x2]
   1a87c:	ldr	x0, [sp, #24]
   1a880:	str	x0, [sp, #56]
   1a884:	ldr	x0, [sp, #56]
   1a888:	ldp	x29, x30, [sp], #64
   1a88c:	ret

000000000001a890 <gelf_getverdef@@ELFUTILS_1.0>:
   1a890:	stp	x29, x30, [sp, #-64]!
   1a894:	mov	x29, sp
   1a898:	str	x0, [sp, #40]
   1a89c:	str	w1, [sp, #36]
   1a8a0:	str	x2, [sp, #24]
   1a8a4:	ldr	x0, [sp, #40]
   1a8a8:	cmp	x0, #0x0
   1a8ac:	b.ne	1a8b8 <gelf_getverdef@@ELFUTILS_1.0+0x28>  // b.any
   1a8b0:	mov	x0, #0x0                   	// #0
   1a8b4:	b	1a980 <gelf_getverdef@@ELFUTILS_1.0+0xf0>
   1a8b8:	ldr	x0, [sp, #40]
   1a8bc:	ldr	w0, [x0, #8]
   1a8c0:	cmp	w0, #0xf
   1a8c4:	cset	w0, ne  // ne = any
   1a8c8:	and	w0, w0, #0xff
   1a8cc:	and	x0, x0, #0xff
   1a8d0:	cmp	x0, #0x0
   1a8d4:	b.eq	1a8e8 <gelf_getverdef@@ELFUTILS_1.0+0x58>  // b.none
   1a8d8:	mov	w0, #0x4                   	// #4
   1a8dc:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1a8e0:	mov	x0, #0x0                   	// #0
   1a8e4:	b	1a980 <gelf_getverdef@@ELFUTILS_1.0+0xf0>
   1a8e8:	ldr	w0, [sp, #36]
   1a8ec:	lsr	w0, w0, #31
   1a8f0:	and	w0, w0, #0xff
   1a8f4:	and	x0, x0, #0xff
   1a8f8:	cmp	x0, #0x0
   1a8fc:	b.ne	1a948 <gelf_getverdef@@ELFUTILS_1.0+0xb8>  // b.any
   1a900:	ldrsw	x0, [sp, #36]
   1a904:	add	x1, x0, #0x14
   1a908:	ldr	x0, [sp, #40]
   1a90c:	ldr	x0, [x0, #16]
   1a910:	cmp	x1, x0
   1a914:	cset	w0, hi  // hi = pmore
   1a918:	and	w0, w0, #0xff
   1a91c:	and	x0, x0, #0xff
   1a920:	cmp	x0, #0x0
   1a924:	b.ne	1a948 <gelf_getverdef@@ELFUTILS_1.0+0xb8>  // b.any
   1a928:	ldrsw	x0, [sp, #36]
   1a92c:	and	x0, x0, #0x3
   1a930:	cmp	x0, #0x0
   1a934:	cset	w0, ne  // ne = any
   1a938:	and	w0, w0, #0xff
   1a93c:	and	x0, x0, #0xff
   1a940:	cmp	x0, #0x0
   1a944:	b.eq	1a958 <gelf_getverdef@@ELFUTILS_1.0+0xc8>  // b.none
   1a948:	mov	w0, #0x1d                  	// #29
   1a94c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1a950:	str	xzr, [sp, #56]
   1a954:	b	1a97c <gelf_getverdef@@ELFUTILS_1.0+0xec>
   1a958:	ldr	x0, [sp, #40]
   1a95c:	ldr	x1, [x0]
   1a960:	ldrsw	x0, [sp, #36]
   1a964:	add	x0, x1, x0
   1a968:	mov	x2, #0x14                  	// #20
   1a96c:	mov	x1, x0
   1a970:	ldr	x0, [sp, #24]
   1a974:	bl	30a0 <memcpy@plt>
   1a978:	str	x0, [sp, #56]
   1a97c:	ldr	x0, [sp, #56]
   1a980:	ldp	x29, x30, [sp], #64
   1a984:	ret

000000000001a988 <gelf_getverdaux@@ELFUTILS_1.0>:
   1a988:	stp	x29, x30, [sp, #-64]!
   1a98c:	mov	x29, sp
   1a990:	str	x0, [sp, #40]
   1a994:	str	w1, [sp, #36]
   1a998:	str	x2, [sp, #24]
   1a99c:	ldr	x0, [sp, #40]
   1a9a0:	cmp	x0, #0x0
   1a9a4:	b.ne	1a9b0 <gelf_getverdaux@@ELFUTILS_1.0+0x28>  // b.any
   1a9a8:	mov	x0, #0x0                   	// #0
   1a9ac:	b	1aa78 <gelf_getverdaux@@ELFUTILS_1.0+0xf0>
   1a9b0:	ldr	x0, [sp, #40]
   1a9b4:	ldr	w0, [x0, #8]
   1a9b8:	cmp	w0, #0xf
   1a9bc:	cset	w0, ne  // ne = any
   1a9c0:	and	w0, w0, #0xff
   1a9c4:	and	x0, x0, #0xff
   1a9c8:	cmp	x0, #0x0
   1a9cc:	b.eq	1a9e0 <gelf_getverdaux@@ELFUTILS_1.0+0x58>  // b.none
   1a9d0:	mov	w0, #0x4                   	// #4
   1a9d4:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1a9d8:	mov	x0, #0x0                   	// #0
   1a9dc:	b	1aa78 <gelf_getverdaux@@ELFUTILS_1.0+0xf0>
   1a9e0:	ldr	w0, [sp, #36]
   1a9e4:	lsr	w0, w0, #31
   1a9e8:	and	w0, w0, #0xff
   1a9ec:	and	x0, x0, #0xff
   1a9f0:	cmp	x0, #0x0
   1a9f4:	b.ne	1aa40 <gelf_getverdaux@@ELFUTILS_1.0+0xb8>  // b.any
   1a9f8:	ldrsw	x0, [sp, #36]
   1a9fc:	add	x1, x0, #0x8
   1aa00:	ldr	x0, [sp, #40]
   1aa04:	ldr	x0, [x0, #16]
   1aa08:	cmp	x1, x0
   1aa0c:	cset	w0, hi  // hi = pmore
   1aa10:	and	w0, w0, #0xff
   1aa14:	and	x0, x0, #0xff
   1aa18:	cmp	x0, #0x0
   1aa1c:	b.ne	1aa40 <gelf_getverdaux@@ELFUTILS_1.0+0xb8>  // b.any
   1aa20:	ldrsw	x0, [sp, #36]
   1aa24:	and	x0, x0, #0x3
   1aa28:	cmp	x0, #0x0
   1aa2c:	cset	w0, ne  // ne = any
   1aa30:	and	w0, w0, #0xff
   1aa34:	and	x0, x0, #0xff
   1aa38:	cmp	x0, #0x0
   1aa3c:	b.eq	1aa50 <gelf_getverdaux@@ELFUTILS_1.0+0xc8>  // b.none
   1aa40:	mov	w0, #0x1d                  	// #29
   1aa44:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1aa48:	str	xzr, [sp, #56]
   1aa4c:	b	1aa74 <gelf_getverdaux@@ELFUTILS_1.0+0xec>
   1aa50:	ldr	x0, [sp, #40]
   1aa54:	ldr	x1, [x0]
   1aa58:	ldrsw	x0, [sp, #36]
   1aa5c:	add	x0, x1, x0
   1aa60:	ldr	x1, [x0]
   1aa64:	ldr	x0, [sp, #24]
   1aa68:	str	x1, [x0]
   1aa6c:	ldr	x0, [sp, #24]
   1aa70:	str	x0, [sp, #56]
   1aa74:	ldr	x0, [sp, #56]
   1aa78:	ldp	x29, x30, [sp], #64
   1aa7c:	ret

000000000001aa80 <gelf_getrel@@ELFUTILS_1.0>:
   1aa80:	stp	x29, x30, [sp, #-80]!
   1aa84:	mov	x29, sp
   1aa88:	str	x0, [sp, #40]
   1aa8c:	str	w1, [sp, #36]
   1aa90:	str	x2, [sp, #24]
   1aa94:	ldr	x0, [sp, #40]
   1aa98:	str	x0, [sp, #64]
   1aa9c:	ldr	x0, [sp, #64]
   1aaa0:	cmp	x0, #0x0
   1aaa4:	b.ne	1aab0 <gelf_getrel@@ELFUTILS_1.0+0x30>  // b.any
   1aaa8:	mov	x0, #0x0                   	// #0
   1aaac:	b	1ac0c <gelf_getrel@@ELFUTILS_1.0+0x18c>
   1aab0:	ldr	x0, [sp, #64]
   1aab4:	ldr	w0, [x0, #8]
   1aab8:	cmp	w0, #0x8
   1aabc:	cset	w0, ne  // ne = any
   1aac0:	and	w0, w0, #0xff
   1aac4:	and	x0, x0, #0xff
   1aac8:	cmp	x0, #0x0
   1aacc:	b.eq	1aae0 <gelf_getrel@@ELFUTILS_1.0+0x60>  // b.none
   1aad0:	mov	w0, #0x4                   	// #4
   1aad4:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1aad8:	mov	x0, #0x0                   	// #0
   1aadc:	b	1ac0c <gelf_getrel@@ELFUTILS_1.0+0x18c>
   1aae0:	ldr	x0, [sp, #64]
   1aae4:	ldr	x0, [x0, #40]
   1aae8:	str	x0, [sp, #56]
   1aaec:	ldr	x0, [sp, #56]
   1aaf0:	ldr	x0, [x0, #136]
   1aaf4:	ldr	w0, [x0, #32]
   1aaf8:	cmp	w0, #0x1
   1aafc:	b.ne	1aba4 <gelf_getrel@@ELFUTILS_1.0+0x124>  // b.any
   1ab00:	ldr	x0, [sp, #64]
   1ab04:	ldr	x0, [x0, #16]
   1ab08:	lsr	x1, x0, #3
   1ab0c:	ldr	w0, [sp, #36]
   1ab10:	mov	w0, w0
   1ab14:	cmp	x1, x0
   1ab18:	cset	w0, ls  // ls = plast
   1ab1c:	and	w0, w0, #0xff
   1ab20:	and	x0, x0, #0xff
   1ab24:	cmp	x0, #0x0
   1ab28:	b.eq	1ab3c <gelf_getrel@@ELFUTILS_1.0+0xbc>  // b.none
   1ab2c:	mov	w0, #0x16                  	// #22
   1ab30:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1ab34:	str	xzr, [sp, #72]
   1ab38:	b	1ac08 <gelf_getrel@@ELFUTILS_1.0+0x188>
   1ab3c:	ldr	x0, [sp, #64]
   1ab40:	ldr	x1, [x0]
   1ab44:	ldrsw	x0, [sp, #36]
   1ab48:	lsl	x0, x0, #3
   1ab4c:	add	x0, x1, x0
   1ab50:	str	x0, [sp, #48]
   1ab54:	ldr	x0, [sp, #48]
   1ab58:	ldr	w0, [x0]
   1ab5c:	mov	w1, w0
   1ab60:	ldr	x0, [sp, #24]
   1ab64:	str	x1, [x0]
   1ab68:	ldr	x0, [sp, #48]
   1ab6c:	ldr	w0, [x0, #4]
   1ab70:	lsr	w0, w0, #8
   1ab74:	mov	w0, w0
   1ab78:	lsl	x1, x0, #32
   1ab7c:	ldr	x0, [sp, #48]
   1ab80:	ldr	w0, [x0, #4]
   1ab84:	mov	w0, w0
   1ab88:	and	x0, x0, #0xff
   1ab8c:	add	x1, x1, x0
   1ab90:	ldr	x0, [sp, #24]
   1ab94:	str	x1, [x0, #8]
   1ab98:	ldr	x0, [sp, #24]
   1ab9c:	str	x0, [sp, #72]
   1aba0:	b	1ac08 <gelf_getrel@@ELFUTILS_1.0+0x188>
   1aba4:	ldr	x0, [sp, #64]
   1aba8:	ldr	x0, [x0, #16]
   1abac:	lsr	x1, x0, #4
   1abb0:	ldr	w0, [sp, #36]
   1abb4:	mov	w0, w0
   1abb8:	cmp	x1, x0
   1abbc:	cset	w0, ls  // ls = plast
   1abc0:	and	w0, w0, #0xff
   1abc4:	and	x0, x0, #0xff
   1abc8:	cmp	x0, #0x0
   1abcc:	b.eq	1abe0 <gelf_getrel@@ELFUTILS_1.0+0x160>  // b.none
   1abd0:	mov	w0, #0x16                  	// #22
   1abd4:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1abd8:	str	xzr, [sp, #72]
   1abdc:	b	1ac08 <gelf_getrel@@ELFUTILS_1.0+0x188>
   1abe0:	ldr	x0, [sp, #64]
   1abe4:	ldr	x1, [x0]
   1abe8:	ldrsw	x0, [sp, #36]
   1abec:	lsl	x0, x0, #4
   1abf0:	add	x0, x1, x0
   1abf4:	ldp	x0, x1, [x0]
   1abf8:	ldr	x2, [sp, #24]
   1abfc:	stp	x0, x1, [x2]
   1ac00:	ldr	x0, [sp, #24]
   1ac04:	str	x0, [sp, #72]
   1ac08:	ldr	x0, [sp, #72]
   1ac0c:	ldp	x29, x30, [sp], #80
   1ac10:	ret

000000000001ac14 <gelf_getrela@@ELFUTILS_1.0>:
   1ac14:	stp	x29, x30, [sp, #-80]!
   1ac18:	mov	x29, sp
   1ac1c:	str	x0, [sp, #40]
   1ac20:	str	w1, [sp, #36]
   1ac24:	str	x2, [sp, #24]
   1ac28:	ldr	x0, [sp, #40]
   1ac2c:	str	x0, [sp, #64]
   1ac30:	ldr	x0, [sp, #64]
   1ac34:	cmp	x0, #0x0
   1ac38:	b.ne	1ac44 <gelf_getrela@@ELFUTILS_1.0+0x30>  // b.any
   1ac3c:	mov	x0, #0x0                   	// #0
   1ac40:	b	1ade4 <gelf_getrela@@ELFUTILS_1.0+0x1d0>
   1ac44:	ldr	x0, [sp, #64]
   1ac48:	ldr	w0, [x0, #8]
   1ac4c:	cmp	w0, #0x7
   1ac50:	cset	w0, ne  // ne = any
   1ac54:	and	w0, w0, #0xff
   1ac58:	and	x0, x0, #0xff
   1ac5c:	cmp	x0, #0x0
   1ac60:	b.eq	1ac74 <gelf_getrela@@ELFUTILS_1.0+0x60>  // b.none
   1ac64:	mov	w0, #0x4                   	// #4
   1ac68:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1ac6c:	mov	x0, #0x0                   	// #0
   1ac70:	b	1ade4 <gelf_getrela@@ELFUTILS_1.0+0x1d0>
   1ac74:	ldr	x0, [sp, #64]
   1ac78:	ldr	x0, [x0, #40]
   1ac7c:	str	x0, [sp, #56]
   1ac80:	ldr	x0, [sp, #56]
   1ac84:	ldr	x0, [x0, #136]
   1ac88:	ldr	w0, [x0, #32]
   1ac8c:	cmp	w0, #0x1
   1ac90:	b.ne	1ad64 <gelf_getrela@@ELFUTILS_1.0+0x150>  // b.any
   1ac94:	ldr	x0, [sp, #64]
   1ac98:	ldr	x1, [x0, #16]
   1ac9c:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   1aca0:	movk	x0, #0xaaab
   1aca4:	umulh	x0, x1, x0
   1aca8:	lsr	x1, x0, #3
   1acac:	ldr	w0, [sp, #36]
   1acb0:	mov	w0, w0
   1acb4:	cmp	x1, x0
   1acb8:	cset	w0, ls  // ls = plast
   1acbc:	and	w0, w0, #0xff
   1acc0:	and	x0, x0, #0xff
   1acc4:	cmp	x0, #0x0
   1acc8:	b.eq	1acdc <gelf_getrela@@ELFUTILS_1.0+0xc8>  // b.none
   1accc:	mov	w0, #0x16                  	// #22
   1acd0:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1acd4:	str	xzr, [sp, #72]
   1acd8:	b	1ade0 <gelf_getrela@@ELFUTILS_1.0+0x1cc>
   1acdc:	ldr	x0, [sp, #64]
   1ace0:	ldr	x2, [x0]
   1ace4:	ldrsw	x1, [sp, #36]
   1ace8:	mov	x0, x1
   1acec:	lsl	x0, x0, #1
   1acf0:	add	x0, x0, x1
   1acf4:	lsl	x0, x0, #2
   1acf8:	add	x0, x2, x0
   1acfc:	str	x0, [sp, #48]
   1ad00:	ldr	x0, [sp, #48]
   1ad04:	ldr	w0, [x0]
   1ad08:	mov	w1, w0
   1ad0c:	ldr	x0, [sp, #24]
   1ad10:	str	x1, [x0]
   1ad14:	ldr	x0, [sp, #48]
   1ad18:	ldr	w0, [x0, #4]
   1ad1c:	lsr	w0, w0, #8
   1ad20:	mov	w0, w0
   1ad24:	lsl	x1, x0, #32
   1ad28:	ldr	x0, [sp, #48]
   1ad2c:	ldr	w0, [x0, #4]
   1ad30:	mov	w0, w0
   1ad34:	and	x0, x0, #0xff
   1ad38:	add	x1, x1, x0
   1ad3c:	ldr	x0, [sp, #24]
   1ad40:	str	x1, [x0, #8]
   1ad44:	ldr	x0, [sp, #48]
   1ad48:	ldr	w0, [x0, #8]
   1ad4c:	sxtw	x1, w0
   1ad50:	ldr	x0, [sp, #24]
   1ad54:	str	x1, [x0, #16]
   1ad58:	ldr	x0, [sp, #24]
   1ad5c:	str	x0, [sp, #72]
   1ad60:	b	1ade0 <gelf_getrela@@ELFUTILS_1.0+0x1cc>
   1ad64:	ldr	x0, [sp, #64]
   1ad68:	ldr	x1, [x0, #16]
   1ad6c:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   1ad70:	movk	x0, #0xaaab
   1ad74:	umulh	x0, x1, x0
   1ad78:	lsr	x1, x0, #4
   1ad7c:	ldr	w0, [sp, #36]
   1ad80:	mov	w0, w0
   1ad84:	cmp	x1, x0
   1ad88:	cset	w0, ls  // ls = plast
   1ad8c:	and	w0, w0, #0xff
   1ad90:	and	x0, x0, #0xff
   1ad94:	cmp	x0, #0x0
   1ad98:	b.eq	1adac <gelf_getrela@@ELFUTILS_1.0+0x198>  // b.none
   1ad9c:	mov	w0, #0x16                  	// #22
   1ada0:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1ada4:	str	xzr, [sp, #72]
   1ada8:	b	1ade0 <gelf_getrela@@ELFUTILS_1.0+0x1cc>
   1adac:	ldr	x0, [sp, #64]
   1adb0:	ldr	x2, [x0]
   1adb4:	ldrsw	x1, [sp, #36]
   1adb8:	mov	x0, x1
   1adbc:	lsl	x0, x0, #1
   1adc0:	add	x0, x0, x1
   1adc4:	lsl	x0, x0, #3
   1adc8:	add	x0, x2, x0
   1adcc:	mov	x2, #0x18                  	// #24
   1add0:	mov	x1, x0
   1add4:	ldr	x0, [sp, #24]
   1add8:	bl	30a0 <memcpy@plt>
   1addc:	str	x0, [sp, #72]
   1ade0:	ldr	x0, [sp, #72]
   1ade4:	ldp	x29, x30, [sp], #80
   1ade8:	ret

000000000001adec <gelf_update_rel@@ELFUTILS_1.0>:
   1adec:	stp	x29, x30, [sp, #-80]!
   1adf0:	mov	x29, sp
   1adf4:	str	x0, [sp, #40]
   1adf8:	str	w1, [sp, #36]
   1adfc:	str	x2, [sp, #24]
   1ae00:	ldr	x0, [sp, #40]
   1ae04:	str	x0, [sp, #64]
   1ae08:	str	wzr, [sp, #76]
   1ae0c:	ldr	x0, [sp, #40]
   1ae10:	cmp	x0, #0x0
   1ae14:	b.ne	1ae20 <gelf_update_rel@@ELFUTILS_1.0+0x34>  // b.any
   1ae18:	mov	w0, #0x0                   	// #0
   1ae1c:	b	1aff4 <gelf_update_rel@@ELFUTILS_1.0+0x208>
   1ae20:	ldr	x0, [sp, #64]
   1ae24:	ldr	w0, [x0, #8]
   1ae28:	cmp	w0, #0x8
   1ae2c:	cset	w0, ne  // ne = any
   1ae30:	and	w0, w0, #0xff
   1ae34:	and	x0, x0, #0xff
   1ae38:	cmp	x0, #0x0
   1ae3c:	b.eq	1ae50 <gelf_update_rel@@ELFUTILS_1.0+0x64>  // b.none
   1ae40:	mov	w0, #0x1f                  	// #31
   1ae44:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1ae48:	mov	w0, #0x0                   	// #0
   1ae4c:	b	1aff4 <gelf_update_rel@@ELFUTILS_1.0+0x208>
   1ae50:	ldr	x0, [sp, #64]
   1ae54:	ldr	x0, [x0, #40]
   1ae58:	str	x0, [sp, #56]
   1ae5c:	ldr	x0, [sp, #56]
   1ae60:	ldr	x0, [x0, #136]
   1ae64:	ldr	w0, [x0, #32]
   1ae68:	cmp	w0, #0x1
   1ae6c:	b.ne	1af7c <gelf_update_rel@@ELFUTILS_1.0+0x190>  // b.any
   1ae70:	ldr	x0, [sp, #24]
   1ae74:	ldr	x1, [x0]
   1ae78:	mov	x0, #0xffffffff            	// #4294967295
   1ae7c:	cmp	x1, x0
   1ae80:	cset	w0, hi  // hi = pmore
   1ae84:	and	w0, w0, #0xff
   1ae88:	and	x0, x0, #0xff
   1ae8c:	cmp	x0, #0x0
   1ae90:	b.ne	1aee0 <gelf_update_rel@@ELFUTILS_1.0+0xf4>  // b.any
   1ae94:	ldr	x0, [sp, #24]
   1ae98:	ldr	x0, [x0, #8]
   1ae9c:	lsr	x1, x0, #32
   1aea0:	mov	x0, #0xffffff              	// #16777215
   1aea4:	cmp	x1, x0
   1aea8:	cset	w0, hi  // hi = pmore
   1aeac:	and	w0, w0, #0xff
   1aeb0:	and	x0, x0, #0xff
   1aeb4:	cmp	x0, #0x0
   1aeb8:	b.ne	1aee0 <gelf_update_rel@@ELFUTILS_1.0+0xf4>  // b.any
   1aebc:	ldr	x0, [sp, #24]
   1aec0:	ldr	x0, [x0, #8]
   1aec4:	and	x0, x0, #0xffffff00
   1aec8:	cmp	x0, #0x0
   1aecc:	cset	w0, ne  // ne = any
   1aed0:	and	w0, w0, #0xff
   1aed4:	and	x0, x0, #0xff
   1aed8:	cmp	x0, #0x0
   1aedc:	b.eq	1aeec <gelf_update_rel@@ELFUTILS_1.0+0x100>  // b.none
   1aee0:	mov	w0, #0x21                  	// #33
   1aee4:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1aee8:	b	1aff0 <gelf_update_rel@@ELFUTILS_1.0+0x204>
   1aeec:	ldr	x0, [sp, #64]
   1aef0:	ldr	x0, [x0, #16]
   1aef4:	lsr	x1, x0, #3
   1aef8:	ldr	w0, [sp, #36]
   1aefc:	mov	w0, w0
   1af00:	cmp	x1, x0
   1af04:	cset	w0, ls  // ls = plast
   1af08:	and	w0, w0, #0xff
   1af0c:	and	x0, x0, #0xff
   1af10:	cmp	x0, #0x0
   1af14:	b.eq	1af24 <gelf_update_rel@@ELFUTILS_1.0+0x138>  // b.none
   1af18:	mov	w0, #0x16                  	// #22
   1af1c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1af20:	b	1aff0 <gelf_update_rel@@ELFUTILS_1.0+0x204>
   1af24:	ldr	x0, [sp, #64]
   1af28:	ldr	x1, [x0]
   1af2c:	ldrsw	x0, [sp, #36]
   1af30:	lsl	x0, x0, #3
   1af34:	add	x0, x1, x0
   1af38:	str	x0, [sp, #48]
   1af3c:	ldr	x0, [sp, #24]
   1af40:	ldr	x0, [x0]
   1af44:	mov	w1, w0
   1af48:	ldr	x0, [sp, #48]
   1af4c:	str	w1, [x0]
   1af50:	ldr	x0, [sp, #24]
   1af54:	ldr	x0, [x0, #8]
   1af58:	lsr	x0, x0, #32
   1af5c:	lsl	w1, w0, #8
   1af60:	ldr	x0, [sp, #24]
   1af64:	ldr	x0, [x0, #8]
   1af68:	and	w0, w0, #0xff
   1af6c:	add	w1, w1, w0
   1af70:	ldr	x0, [sp, #48]
   1af74:	str	w1, [x0, #4]
   1af78:	b	1afd4 <gelf_update_rel@@ELFUTILS_1.0+0x1e8>
   1af7c:	ldr	x0, [sp, #64]
   1af80:	ldr	x0, [x0, #16]
   1af84:	lsr	x1, x0, #4
   1af88:	ldr	w0, [sp, #36]
   1af8c:	mov	w0, w0
   1af90:	cmp	x1, x0
   1af94:	cset	w0, ls  // ls = plast
   1af98:	and	w0, w0, #0xff
   1af9c:	and	x0, x0, #0xff
   1afa0:	cmp	x0, #0x0
   1afa4:	b.eq	1afb4 <gelf_update_rel@@ELFUTILS_1.0+0x1c8>  // b.none
   1afa8:	mov	w0, #0x16                  	// #22
   1afac:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1afb0:	b	1aff0 <gelf_update_rel@@ELFUTILS_1.0+0x204>
   1afb4:	ldr	x0, [sp, #64]
   1afb8:	ldr	x1, [x0]
   1afbc:	ldrsw	x0, [sp, #36]
   1afc0:	lsl	x0, x0, #4
   1afc4:	add	x2, x1, x0
   1afc8:	ldr	x0, [sp, #24]
   1afcc:	ldp	x0, x1, [x0]
   1afd0:	stp	x0, x1, [x2]
   1afd4:	mov	w0, #0x1                   	// #1
   1afd8:	str	w0, [sp, #76]
   1afdc:	ldr	x0, [sp, #56]
   1afe0:	ldr	w0, [x0, #156]
   1afe4:	orr	w1, w0, #0x1
   1afe8:	ldr	x0, [sp, #56]
   1afec:	str	w1, [x0, #156]
   1aff0:	ldr	w0, [sp, #76]
   1aff4:	ldp	x29, x30, [sp], #80
   1aff8:	ret

000000000001affc <gelf_update_rela@@ELFUTILS_1.0>:
   1affc:	stp	x29, x30, [sp, #-80]!
   1b000:	mov	x29, sp
   1b004:	str	x0, [sp, #40]
   1b008:	str	w1, [sp, #36]
   1b00c:	str	x2, [sp, #24]
   1b010:	ldr	x0, [sp, #40]
   1b014:	str	x0, [sp, #64]
   1b018:	str	wzr, [sp, #76]
   1b01c:	ldr	x0, [sp, #40]
   1b020:	cmp	x0, #0x0
   1b024:	b.ne	1b030 <gelf_update_rela@@ELFUTILS_1.0+0x34>  // b.any
   1b028:	mov	w0, #0x0                   	// #0
   1b02c:	b	1b2a0 <gelf_update_rela@@ELFUTILS_1.0+0x2a4>
   1b030:	ldr	x0, [sp, #64]
   1b034:	ldr	w0, [x0, #8]
   1b038:	cmp	w0, #0x7
   1b03c:	cset	w0, ne  // ne = any
   1b040:	and	w0, w0, #0xff
   1b044:	and	x0, x0, #0xff
   1b048:	cmp	x0, #0x0
   1b04c:	b.eq	1b060 <gelf_update_rela@@ELFUTILS_1.0+0x64>  // b.none
   1b050:	mov	w0, #0x1f                  	// #31
   1b054:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1b058:	mov	w0, #0x0                   	// #0
   1b05c:	b	1b2a0 <gelf_update_rela@@ELFUTILS_1.0+0x2a4>
   1b060:	ldr	x0, [sp, #64]
   1b064:	ldr	x0, [x0, #40]
   1b068:	str	x0, [sp, #56]
   1b06c:	ldr	x0, [sp, #56]
   1b070:	ldr	x0, [x0, #136]
   1b074:	ldr	w0, [x0, #32]
   1b078:	cmp	w0, #0x1
   1b07c:	b.ne	1b200 <gelf_update_rela@@ELFUTILS_1.0+0x204>  // b.any
   1b080:	ldr	x0, [sp, #24]
   1b084:	ldr	x1, [x0]
   1b088:	mov	x0, #0xffffffff            	// #4294967295
   1b08c:	cmp	x1, x0
   1b090:	cset	w0, hi  // hi = pmore
   1b094:	and	w0, w0, #0xff
   1b098:	and	x0, x0, #0xff
   1b09c:	cmp	x0, #0x0
   1b0a0:	b.ne	1b138 <gelf_update_rela@@ELFUTILS_1.0+0x13c>  // b.any
   1b0a4:	ldr	x0, [sp, #24]
   1b0a8:	ldr	x0, [x0, #8]
   1b0ac:	lsr	x1, x0, #32
   1b0b0:	mov	x0, #0xffffff              	// #16777215
   1b0b4:	cmp	x1, x0
   1b0b8:	cset	w0, hi  // hi = pmore
   1b0bc:	and	w0, w0, #0xff
   1b0c0:	and	x0, x0, #0xff
   1b0c4:	cmp	x0, #0x0
   1b0c8:	b.ne	1b138 <gelf_update_rela@@ELFUTILS_1.0+0x13c>  // b.any
   1b0cc:	ldr	x0, [sp, #24]
   1b0d0:	ldr	x0, [x0, #8]
   1b0d4:	and	x0, x0, #0xffffff00
   1b0d8:	cmp	x0, #0x0
   1b0dc:	cset	w0, ne  // ne = any
   1b0e0:	and	w0, w0, #0xff
   1b0e4:	and	x0, x0, #0xff
   1b0e8:	cmp	x0, #0x0
   1b0ec:	b.ne	1b138 <gelf_update_rela@@ELFUTILS_1.0+0x13c>  // b.any
   1b0f0:	ldr	x0, [sp, #24]
   1b0f4:	ldr	x1, [x0, #16]
   1b0f8:	mov	x0, #0xffffffff80000000    	// #-2147483648
   1b0fc:	cmp	x1, x0
   1b100:	cset	w0, lt  // lt = tstop
   1b104:	and	w0, w0, #0xff
   1b108:	and	x0, x0, #0xff
   1b10c:	cmp	x0, #0x0
   1b110:	b.ne	1b138 <gelf_update_rela@@ELFUTILS_1.0+0x13c>  // b.any
   1b114:	ldr	x0, [sp, #24]
   1b118:	ldr	x1, [x0, #16]
   1b11c:	mov	x0, #0x7fffffff            	// #2147483647
   1b120:	cmp	x1, x0
   1b124:	cset	w0, gt
   1b128:	and	w0, w0, #0xff
   1b12c:	and	x0, x0, #0xff
   1b130:	cmp	x0, #0x0
   1b134:	b.eq	1b144 <gelf_update_rela@@ELFUTILS_1.0+0x148>  // b.none
   1b138:	mov	w0, #0x21                  	// #33
   1b13c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1b140:	b	1b29c <gelf_update_rela@@ELFUTILS_1.0+0x2a0>
   1b144:	ldr	x0, [sp, #64]
   1b148:	ldr	x1, [x0, #16]
   1b14c:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   1b150:	movk	x0, #0xaaab
   1b154:	umulh	x0, x1, x0
   1b158:	lsr	x1, x0, #3
   1b15c:	ldr	w0, [sp, #36]
   1b160:	mov	w0, w0
   1b164:	cmp	x1, x0
   1b168:	cset	w0, ls  // ls = plast
   1b16c:	and	w0, w0, #0xff
   1b170:	and	x0, x0, #0xff
   1b174:	cmp	x0, #0x0
   1b178:	b.eq	1b188 <gelf_update_rela@@ELFUTILS_1.0+0x18c>  // b.none
   1b17c:	mov	w0, #0x16                  	// #22
   1b180:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1b184:	b	1b29c <gelf_update_rela@@ELFUTILS_1.0+0x2a0>
   1b188:	ldr	x0, [sp, #64]
   1b18c:	ldr	x2, [x0]
   1b190:	ldrsw	x1, [sp, #36]
   1b194:	mov	x0, x1
   1b198:	lsl	x0, x0, #1
   1b19c:	add	x0, x0, x1
   1b1a0:	lsl	x0, x0, #2
   1b1a4:	add	x0, x2, x0
   1b1a8:	str	x0, [sp, #48]
   1b1ac:	ldr	x0, [sp, #24]
   1b1b0:	ldr	x0, [x0]
   1b1b4:	mov	w1, w0
   1b1b8:	ldr	x0, [sp, #48]
   1b1bc:	str	w1, [x0]
   1b1c0:	ldr	x0, [sp, #24]
   1b1c4:	ldr	x0, [x0, #8]
   1b1c8:	lsr	x0, x0, #32
   1b1cc:	lsl	w1, w0, #8
   1b1d0:	ldr	x0, [sp, #24]
   1b1d4:	ldr	x0, [x0, #8]
   1b1d8:	and	w0, w0, #0xff
   1b1dc:	add	w1, w1, w0
   1b1e0:	ldr	x0, [sp, #48]
   1b1e4:	str	w1, [x0, #4]
   1b1e8:	ldr	x0, [sp, #24]
   1b1ec:	ldr	x0, [x0, #16]
   1b1f0:	mov	w1, w0
   1b1f4:	ldr	x0, [sp, #48]
   1b1f8:	str	w1, [x0, #8]
   1b1fc:	b	1b280 <gelf_update_rela@@ELFUTILS_1.0+0x284>
   1b200:	ldr	x0, [sp, #64]
   1b204:	ldr	x1, [x0, #16]
   1b208:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   1b20c:	movk	x0, #0xaaab
   1b210:	umulh	x0, x1, x0
   1b214:	lsr	x1, x0, #4
   1b218:	ldr	w0, [sp, #36]
   1b21c:	mov	w0, w0
   1b220:	cmp	x1, x0
   1b224:	cset	w0, ls  // ls = plast
   1b228:	and	w0, w0, #0xff
   1b22c:	and	x0, x0, #0xff
   1b230:	cmp	x0, #0x0
   1b234:	b.eq	1b244 <gelf_update_rela@@ELFUTILS_1.0+0x248>  // b.none
   1b238:	mov	w0, #0x16                  	// #22
   1b23c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1b240:	b	1b29c <gelf_update_rela@@ELFUTILS_1.0+0x2a0>
   1b244:	ldr	x0, [sp, #64]
   1b248:	ldr	x2, [x0]
   1b24c:	ldrsw	x1, [sp, #36]
   1b250:	mov	x0, x1
   1b254:	lsl	x0, x0, #1
   1b258:	add	x0, x0, x1
   1b25c:	lsl	x0, x0, #3
   1b260:	add	x1, x2, x0
   1b264:	ldr	x0, [sp, #24]
   1b268:	mov	x2, x1
   1b26c:	mov	x3, x0
   1b270:	ldp	x0, x1, [x3]
   1b274:	stp	x0, x1, [x2]
   1b278:	ldr	x0, [x3, #16]
   1b27c:	str	x0, [x2, #16]
   1b280:	mov	w0, #0x1                   	// #1
   1b284:	str	w0, [sp, #76]
   1b288:	ldr	x0, [sp, #56]
   1b28c:	ldr	w0, [x0, #156]
   1b290:	orr	w1, w0, #0x1
   1b294:	ldr	x0, [sp, #56]
   1b298:	str	w1, [x0, #156]
   1b29c:	ldr	w0, [sp, #76]
   1b2a0:	ldp	x29, x30, [sp], #80
   1b2a4:	ret

000000000001b2a8 <gelf_getdyn@@ELFUTILS_1.0>:
   1b2a8:	stp	x29, x30, [sp, #-80]!
   1b2ac:	mov	x29, sp
   1b2b0:	str	x0, [sp, #40]
   1b2b4:	str	w1, [sp, #36]
   1b2b8:	str	x2, [sp, #24]
   1b2bc:	ldr	x0, [sp, #40]
   1b2c0:	str	x0, [sp, #64]
   1b2c4:	str	xzr, [sp, #72]
   1b2c8:	ldr	x0, [sp, #64]
   1b2cc:	cmp	x0, #0x0
   1b2d0:	b.ne	1b2dc <gelf_getdyn@@ELFUTILS_1.0+0x34>  // b.any
   1b2d4:	mov	x0, #0x0                   	// #0
   1b2d8:	b	1b40c <gelf_getdyn@@ELFUTILS_1.0+0x164>
   1b2dc:	ldr	x0, [sp, #64]
   1b2e0:	ldr	w0, [x0, #8]
   1b2e4:	cmp	w0, #0x2
   1b2e8:	cset	w0, ne  // ne = any
   1b2ec:	and	w0, w0, #0xff
   1b2f0:	and	x0, x0, #0xff
   1b2f4:	cmp	x0, #0x0
   1b2f8:	b.eq	1b30c <gelf_getdyn@@ELFUTILS_1.0+0x64>  // b.none
   1b2fc:	mov	w0, #0x4                   	// #4
   1b300:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1b304:	mov	x0, #0x0                   	// #0
   1b308:	b	1b40c <gelf_getdyn@@ELFUTILS_1.0+0x164>
   1b30c:	ldr	x0, [sp, #64]
   1b310:	ldr	x0, [x0, #40]
   1b314:	ldr	x0, [x0, #136]
   1b318:	str	x0, [sp, #56]
   1b31c:	ldr	x0, [sp, #56]
   1b320:	ldr	w0, [x0, #32]
   1b324:	cmp	w0, #0x1
   1b328:	b.ne	1b3a8 <gelf_getdyn@@ELFUTILS_1.0+0x100>  // b.any
   1b32c:	ldr	x0, [sp, #64]
   1b330:	ldr	x0, [x0, #16]
   1b334:	lsr	x1, x0, #3
   1b338:	ldr	w0, [sp, #36]
   1b33c:	mov	w0, w0
   1b340:	cmp	x1, x0
   1b344:	cset	w0, ls  // ls = plast
   1b348:	and	w0, w0, #0xff
   1b34c:	and	x0, x0, #0xff
   1b350:	cmp	x0, #0x0
   1b354:	b.eq	1b364 <gelf_getdyn@@ELFUTILS_1.0+0xbc>  // b.none
   1b358:	mov	w0, #0x16                  	// #22
   1b35c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1b360:	b	1b408 <gelf_getdyn@@ELFUTILS_1.0+0x160>
   1b364:	ldr	x0, [sp, #64]
   1b368:	ldr	x1, [x0]
   1b36c:	ldrsw	x0, [sp, #36]
   1b370:	lsl	x0, x0, #3
   1b374:	add	x0, x1, x0
   1b378:	str	x0, [sp, #48]
   1b37c:	ldr	x0, [sp, #48]
   1b380:	ldr	w0, [x0]
   1b384:	sxtw	x1, w0
   1b388:	ldr	x0, [sp, #24]
   1b38c:	str	x1, [x0]
   1b390:	ldr	x0, [sp, #48]
   1b394:	ldr	w0, [x0, #4]
   1b398:	mov	w1, w0
   1b39c:	ldr	x0, [sp, #24]
   1b3a0:	str	x1, [x0, #8]
   1b3a4:	b	1b400 <gelf_getdyn@@ELFUTILS_1.0+0x158>
   1b3a8:	ldr	x0, [sp, #64]
   1b3ac:	ldr	x0, [x0, #16]
   1b3b0:	lsr	x1, x0, #4
   1b3b4:	ldr	w0, [sp, #36]
   1b3b8:	mov	w0, w0
   1b3bc:	cmp	x1, x0
   1b3c0:	cset	w0, ls  // ls = plast
   1b3c4:	and	w0, w0, #0xff
   1b3c8:	and	x0, x0, #0xff
   1b3cc:	cmp	x0, #0x0
   1b3d0:	b.eq	1b3e0 <gelf_getdyn@@ELFUTILS_1.0+0x138>  // b.none
   1b3d4:	mov	w0, #0x16                  	// #22
   1b3d8:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1b3dc:	b	1b408 <gelf_getdyn@@ELFUTILS_1.0+0x160>
   1b3e0:	ldr	x0, [sp, #64]
   1b3e4:	ldr	x1, [x0]
   1b3e8:	ldrsw	x0, [sp, #36]
   1b3ec:	lsl	x0, x0, #4
   1b3f0:	add	x0, x1, x0
   1b3f4:	ldr	x2, [sp, #24]
   1b3f8:	ldp	x0, x1, [x0]
   1b3fc:	stp	x0, x1, [x2]
   1b400:	ldr	x0, [sp, #24]
   1b404:	str	x0, [sp, #72]
   1b408:	ldr	x0, [sp, #72]
   1b40c:	ldp	x29, x30, [sp], #80
   1b410:	ret

000000000001b414 <gelf_update_dyn@@ELFUTILS_1.0>:
   1b414:	stp	x29, x30, [sp, #-80]!
   1b418:	mov	x29, sp
   1b41c:	str	x0, [sp, #40]
   1b420:	str	w1, [sp, #36]
   1b424:	str	x2, [sp, #24]
   1b428:	ldr	x0, [sp, #40]
   1b42c:	str	x0, [sp, #64]
   1b430:	str	wzr, [sp, #76]
   1b434:	ldr	x0, [sp, #40]
   1b438:	cmp	x0, #0x0
   1b43c:	b.ne	1b448 <gelf_update_dyn@@ELFUTILS_1.0+0x34>  // b.any
   1b440:	mov	w0, #0x0                   	// #0
   1b444:	b	1b604 <gelf_update_dyn@@ELFUTILS_1.0+0x1f0>
   1b448:	ldr	x0, [sp, #64]
   1b44c:	ldr	w0, [x0, #8]
   1b450:	cmp	w0, #0x2
   1b454:	cset	w0, ne  // ne = any
   1b458:	and	w0, w0, #0xff
   1b45c:	and	x0, x0, #0xff
   1b460:	cmp	x0, #0x0
   1b464:	b.eq	1b478 <gelf_update_dyn@@ELFUTILS_1.0+0x64>  // b.none
   1b468:	mov	w0, #0x1f                  	// #31
   1b46c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1b470:	mov	w0, #0x0                   	// #0
   1b474:	b	1b604 <gelf_update_dyn@@ELFUTILS_1.0+0x1f0>
   1b478:	ldr	x0, [sp, #64]
   1b47c:	ldr	x0, [x0, #40]
   1b480:	str	x0, [sp, #56]
   1b484:	ldr	x0, [sp, #56]
   1b488:	ldr	x0, [x0, #136]
   1b48c:	ldr	w0, [x0, #32]
   1b490:	cmp	w0, #0x1
   1b494:	b.ne	1b58c <gelf_update_dyn@@ELFUTILS_1.0+0x178>  // b.any
   1b498:	ldr	x0, [sp, #24]
   1b49c:	ldr	x1, [x0]
   1b4a0:	mov	x0, #0xffffffff80000000    	// #-2147483648
   1b4a4:	cmp	x1, x0
   1b4a8:	cset	w0, lt  // lt = tstop
   1b4ac:	and	w0, w0, #0xff
   1b4b0:	and	x0, x0, #0xff
   1b4b4:	cmp	x0, #0x0
   1b4b8:	b.ne	1b504 <gelf_update_dyn@@ELFUTILS_1.0+0xf0>  // b.any
   1b4bc:	ldr	x0, [sp, #24]
   1b4c0:	ldr	x1, [x0]
   1b4c4:	mov	x0, #0x7fffffff            	// #2147483647
   1b4c8:	cmp	x1, x0
   1b4cc:	cset	w0, gt
   1b4d0:	and	w0, w0, #0xff
   1b4d4:	and	x0, x0, #0xff
   1b4d8:	cmp	x0, #0x0
   1b4dc:	b.ne	1b504 <gelf_update_dyn@@ELFUTILS_1.0+0xf0>  // b.any
   1b4e0:	ldr	x0, [sp, #24]
   1b4e4:	ldr	x1, [x0, #8]
   1b4e8:	mov	x0, #0xffffffff            	// #4294967295
   1b4ec:	cmp	x1, x0
   1b4f0:	cset	w0, hi  // hi = pmore
   1b4f4:	and	w0, w0, #0xff
   1b4f8:	and	x0, x0, #0xff
   1b4fc:	cmp	x0, #0x0
   1b500:	b.eq	1b510 <gelf_update_dyn@@ELFUTILS_1.0+0xfc>  // b.none
   1b504:	mov	w0, #0x21                  	// #33
   1b508:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1b50c:	b	1b600 <gelf_update_dyn@@ELFUTILS_1.0+0x1ec>
   1b510:	ldr	x0, [sp, #64]
   1b514:	ldr	x0, [x0, #16]
   1b518:	lsr	x1, x0, #3
   1b51c:	ldr	w0, [sp, #36]
   1b520:	mov	w0, w0
   1b524:	cmp	x1, x0
   1b528:	cset	w0, ls  // ls = plast
   1b52c:	and	w0, w0, #0xff
   1b530:	and	x0, x0, #0xff
   1b534:	cmp	x0, #0x0
   1b538:	b.eq	1b548 <gelf_update_dyn@@ELFUTILS_1.0+0x134>  // b.none
   1b53c:	mov	w0, #0x16                  	// #22
   1b540:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1b544:	b	1b600 <gelf_update_dyn@@ELFUTILS_1.0+0x1ec>
   1b548:	ldr	x0, [sp, #64]
   1b54c:	ldr	x1, [x0]
   1b550:	ldrsw	x0, [sp, #36]
   1b554:	lsl	x0, x0, #3
   1b558:	add	x0, x1, x0
   1b55c:	str	x0, [sp, #48]
   1b560:	ldr	x0, [sp, #24]
   1b564:	ldr	x0, [x0]
   1b568:	mov	w1, w0
   1b56c:	ldr	x0, [sp, #48]
   1b570:	str	w1, [x0]
   1b574:	ldr	x0, [sp, #24]
   1b578:	ldr	x0, [x0, #8]
   1b57c:	mov	w1, w0
   1b580:	ldr	x0, [sp, #48]
   1b584:	str	w1, [x0, #4]
   1b588:	b	1b5e4 <gelf_update_dyn@@ELFUTILS_1.0+0x1d0>
   1b58c:	ldr	x0, [sp, #64]
   1b590:	ldr	x0, [x0, #16]
   1b594:	lsr	x1, x0, #4
   1b598:	ldr	w0, [sp, #36]
   1b59c:	mov	w0, w0
   1b5a0:	cmp	x1, x0
   1b5a4:	cset	w0, ls  // ls = plast
   1b5a8:	and	w0, w0, #0xff
   1b5ac:	and	x0, x0, #0xff
   1b5b0:	cmp	x0, #0x0
   1b5b4:	b.eq	1b5c4 <gelf_update_dyn@@ELFUTILS_1.0+0x1b0>  // b.none
   1b5b8:	mov	w0, #0x16                  	// #22
   1b5bc:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1b5c0:	b	1b600 <gelf_update_dyn@@ELFUTILS_1.0+0x1ec>
   1b5c4:	ldr	x0, [sp, #64]
   1b5c8:	ldr	x1, [x0]
   1b5cc:	ldrsw	x0, [sp, #36]
   1b5d0:	lsl	x0, x0, #4
   1b5d4:	add	x2, x1, x0
   1b5d8:	ldr	x0, [sp, #24]
   1b5dc:	ldp	x0, x1, [x0]
   1b5e0:	stp	x0, x1, [x2]
   1b5e4:	mov	w0, #0x1                   	// #1
   1b5e8:	str	w0, [sp, #76]
   1b5ec:	ldr	x0, [sp, #56]
   1b5f0:	ldr	w0, [x0, #156]
   1b5f4:	orr	w1, w0, #0x1
   1b5f8:	ldr	x0, [sp, #56]
   1b5fc:	str	w1, [x0, #156]
   1b600:	ldr	w0, [sp, #76]
   1b604:	ldp	x29, x30, [sp], #80
   1b608:	ret

000000000001b60c <gelf_getmove@@ELFUTILS_1.0>:
   1b60c:	stp	x29, x30, [sp, #-64]!
   1b610:	mov	x29, sp
   1b614:	str	x0, [sp, #40]
   1b618:	str	w1, [sp, #36]
   1b61c:	str	x2, [sp, #24]
   1b620:	str	xzr, [sp, #56]
   1b624:	ldr	x0, [sp, #40]
   1b628:	cmp	x0, #0x0
   1b62c:	b.ne	1b638 <gelf_getmove@@ELFUTILS_1.0+0x2c>  // b.any
   1b630:	mov	x0, #0x0                   	// #0
   1b634:	b	1b688 <gelf_getmove@@ELFUTILS_1.0+0x7c>
   1b638:	ldr	x0, [sp, #40]
   1b63c:	ldr	w0, [x0, #8]
   1b640:	cmp	w0, #0x15
   1b644:	cset	w0, ne  // ne = any
   1b648:	and	w0, w0, #0xff
   1b64c:	and	x0, x0, #0xff
   1b650:	cmp	x0, #0x0
   1b654:	b.eq	1b668 <gelf_getmove@@ELFUTILS_1.0+0x5c>  // b.none
   1b658:	mov	w0, #0x4                   	// #4
   1b65c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1b660:	mov	x0, #0x0                   	// #0
   1b664:	b	1b688 <gelf_getmove@@ELFUTILS_1.0+0x7c>
   1b668:	adrp	x0, 22000 <elf_compress_gnu@@ELFUTILS_1.7+0x195c>
   1b66c:	add	x3, x0, #0x218
   1b670:	mov	w2, #0x39                  	// #57
   1b674:	adrp	x0, 22000 <elf_compress_gnu@@ELFUTILS_1.7+0x195c>
   1b678:	add	x1, x0, #0x1d8
   1b67c:	adrp	x0, 22000 <elf_compress_gnu@@ELFUTILS_1.7+0x195c>
   1b680:	add	x0, x0, #0x1e8
   1b684:	bl	33d0 <__assert_fail@plt>
   1b688:	ldp	x29, x30, [sp], #64
   1b68c:	ret

000000000001b690 <gelf_update_move@@ELFUTILS_1.0>:
   1b690:	stp	x29, x30, [sp, #-64]!
   1b694:	mov	x29, sp
   1b698:	str	x0, [sp, #40]
   1b69c:	str	w1, [sp, #36]
   1b6a0:	str	x2, [sp, #24]
   1b6a4:	ldr	x0, [sp, #40]
   1b6a8:	str	x0, [sp, #56]
   1b6ac:	ldr	x0, [sp, #40]
   1b6b0:	cmp	x0, #0x0
   1b6b4:	b.ne	1b6c0 <gelf_update_move@@ELFUTILS_1.0+0x30>  // b.any
   1b6b8:	mov	w0, #0x0                   	// #0
   1b6bc:	b	1b6e0 <gelf_update_move@@ELFUTILS_1.0+0x50>
   1b6c0:	adrp	x0, 22000 <elf_compress_gnu@@ELFUTILS_1.7+0x195c>
   1b6c4:	add	x3, x0, #0x270
   1b6c8:	mov	w2, #0x32                  	// #50
   1b6cc:	adrp	x0, 22000 <elf_compress_gnu@@ELFUTILS_1.7+0x195c>
   1b6d0:	add	x1, x0, #0x228
   1b6d4:	adrp	x0, 22000 <elf_compress_gnu@@ELFUTILS_1.7+0x195c>
   1b6d8:	add	x0, x0, #0x240
   1b6dc:	bl	33d0 <__assert_fail@plt>
   1b6e0:	ldp	x29, x30, [sp], #64
   1b6e4:	ret

000000000001b6e8 <gelf_getsyminfo@@ELFUTILS_1.0>:
   1b6e8:	stp	x29, x30, [sp, #-64]!
   1b6ec:	mov	x29, sp
   1b6f0:	str	x0, [sp, #40]
   1b6f4:	str	w1, [sp, #36]
   1b6f8:	str	x2, [sp, #24]
   1b6fc:	str	xzr, [sp, #56]
   1b700:	ldr	x0, [sp, #40]
   1b704:	cmp	x0, #0x0
   1b708:	b.ne	1b714 <gelf_getsyminfo@@ELFUTILS_1.0+0x2c>  // b.any
   1b70c:	mov	x0, #0x0                   	// #0
   1b710:	b	1b7a8 <gelf_getsyminfo@@ELFUTILS_1.0+0xc0>
   1b714:	ldr	x0, [sp, #40]
   1b718:	ldr	w0, [x0, #8]
   1b71c:	cmp	w0, #0x14
   1b720:	cset	w0, ne  // ne = any
   1b724:	and	w0, w0, #0xff
   1b728:	and	x0, x0, #0xff
   1b72c:	cmp	x0, #0x0
   1b730:	b.eq	1b744 <gelf_getsyminfo@@ELFUTILS_1.0+0x5c>  // b.none
   1b734:	mov	w0, #0x4                   	// #4
   1b738:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1b73c:	mov	x0, #0x0                   	// #0
   1b740:	b	1b7a8 <gelf_getsyminfo@@ELFUTILS_1.0+0xc0>
   1b744:	ldr	x0, [sp, #40]
   1b748:	ldr	x0, [x0, #16]
   1b74c:	lsr	x1, x0, #2
   1b750:	ldr	w0, [sp, #36]
   1b754:	mov	w0, w0
   1b758:	cmp	x1, x0
   1b75c:	cset	w0, ls  // ls = plast
   1b760:	and	w0, w0, #0xff
   1b764:	and	x0, x0, #0xff
   1b768:	cmp	x0, #0x0
   1b76c:	b.eq	1b77c <gelf_getsyminfo@@ELFUTILS_1.0+0x94>  // b.none
   1b770:	mov	w0, #0x16                  	// #22
   1b774:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1b778:	b	1b7a4 <gelf_getsyminfo@@ELFUTILS_1.0+0xbc>
   1b77c:	ldr	x0, [sp, #40]
   1b780:	ldr	x1, [x0]
   1b784:	ldrsw	x0, [sp, #36]
   1b788:	lsl	x0, x0, #2
   1b78c:	add	x1, x1, x0
   1b790:	ldr	x0, [sp, #24]
   1b794:	ldr	w1, [x1]
   1b798:	str	w1, [x0]
   1b79c:	ldr	x0, [sp, #24]
   1b7a0:	str	x0, [sp, #56]
   1b7a4:	ldr	x0, [sp, #56]
   1b7a8:	ldp	x29, x30, [sp], #64
   1b7ac:	ret

000000000001b7b0 <gelf_update_syminfo@@ELFUTILS_1.0>:
   1b7b0:	stp	x29, x30, [sp, #-80]!
   1b7b4:	mov	x29, sp
   1b7b8:	str	x0, [sp, #40]
   1b7bc:	str	w1, [sp, #36]
   1b7c0:	str	x2, [sp, #24]
   1b7c4:	ldr	x0, [sp, #40]
   1b7c8:	str	x0, [sp, #64]
   1b7cc:	str	wzr, [sp, #76]
   1b7d0:	ldr	x0, [sp, #40]
   1b7d4:	cmp	x0, #0x0
   1b7d8:	b.ne	1b7e4 <gelf_update_syminfo@@ELFUTILS_1.0+0x34>  // b.any
   1b7dc:	mov	w0, #0x0                   	// #0
   1b7e0:	b	1b898 <gelf_update_syminfo@@ELFUTILS_1.0+0xe8>
   1b7e4:	ldr	x0, [sp, #64]
   1b7e8:	ldr	w0, [x0, #8]
   1b7ec:	cmp	w0, #0x14
   1b7f0:	cset	w0, ne  // ne = any
   1b7f4:	and	w0, w0, #0xff
   1b7f8:	and	x0, x0, #0xff
   1b7fc:	cmp	x0, #0x0
   1b800:	b.eq	1b814 <gelf_update_syminfo@@ELFUTILS_1.0+0x64>  // b.none
   1b804:	mov	w0, #0x1f                  	// #31
   1b808:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1b80c:	mov	w0, #0x0                   	// #0
   1b810:	b	1b898 <gelf_update_syminfo@@ELFUTILS_1.0+0xe8>
   1b814:	ldr	x0, [sp, #64]
   1b818:	ldr	x0, [x0, #40]
   1b81c:	str	x0, [sp, #56]
   1b820:	ldr	x0, [sp, #64]
   1b824:	ldr	x0, [x0, #16]
   1b828:	lsr	x1, x0, #2
   1b82c:	ldr	w0, [sp, #36]
   1b830:	mov	w0, w0
   1b834:	cmp	x1, x0
   1b838:	cset	w0, ls  // ls = plast
   1b83c:	and	w0, w0, #0xff
   1b840:	and	x0, x0, #0xff
   1b844:	cmp	x0, #0x0
   1b848:	b.eq	1b858 <gelf_update_syminfo@@ELFUTILS_1.0+0xa8>  // b.none
   1b84c:	mov	w0, #0x16                  	// #22
   1b850:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1b854:	b	1b894 <gelf_update_syminfo@@ELFUTILS_1.0+0xe4>
   1b858:	ldr	x0, [sp, #64]
   1b85c:	ldr	x1, [x0]
   1b860:	ldrsw	x0, [sp, #36]
   1b864:	lsl	x0, x0, #2
   1b868:	add	x0, x1, x0
   1b86c:	ldr	x1, [sp, #24]
   1b870:	ldr	w1, [x1]
   1b874:	str	w1, [x0]
   1b878:	mov	w0, #0x1                   	// #1
   1b87c:	str	w0, [sp, #76]
   1b880:	ldr	x0, [sp, #56]
   1b884:	ldr	w0, [x0, #156]
   1b888:	orr	w1, w0, #0x1
   1b88c:	ldr	x0, [sp, #56]
   1b890:	str	w1, [x0, #156]
   1b894:	ldr	w0, [sp, #76]
   1b898:	ldp	x29, x30, [sp], #80
   1b89c:	ret

000000000001b8a0 <gelf_getauxv@@ELFUTILS_1.3>:
   1b8a0:	stp	x29, x30, [sp, #-80]!
   1b8a4:	mov	x29, sp
   1b8a8:	str	x0, [sp, #40]
   1b8ac:	str	w1, [sp, #36]
   1b8b0:	str	x2, [sp, #24]
   1b8b4:	ldr	x0, [sp, #40]
   1b8b8:	str	x0, [sp, #64]
   1b8bc:	str	xzr, [sp, #72]
   1b8c0:	ldr	x0, [sp, #64]
   1b8c4:	cmp	x0, #0x0
   1b8c8:	b.ne	1b8d4 <gelf_getauxv@@ELFUTILS_1.3+0x34>  // b.any
   1b8cc:	mov	x0, #0x0                   	// #0
   1b8d0:	b	1ba0c <gelf_getauxv@@ELFUTILS_1.3+0x16c>
   1b8d4:	ldr	x0, [sp, #64]
   1b8d8:	ldr	w0, [x0, #8]
   1b8dc:	cmp	w0, #0x18
   1b8e0:	cset	w0, ne  // ne = any
   1b8e4:	and	w0, w0, #0xff
   1b8e8:	and	x0, x0, #0xff
   1b8ec:	cmp	x0, #0x0
   1b8f0:	b.eq	1b904 <gelf_getauxv@@ELFUTILS_1.3+0x64>  // b.none
   1b8f4:	mov	w0, #0x4                   	// #4
   1b8f8:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1b8fc:	mov	x0, #0x0                   	// #0
   1b900:	b	1ba0c <gelf_getauxv@@ELFUTILS_1.3+0x16c>
   1b904:	ldr	x0, [sp, #64]
   1b908:	ldr	x0, [x0, #40]
   1b90c:	ldr	x0, [x0, #136]
   1b910:	str	x0, [sp, #56]
   1b914:	ldr	x0, [sp, #56]
   1b918:	ldr	w0, [x0, #32]
   1b91c:	cmp	w0, #0x1
   1b920:	b.ne	1b9a4 <gelf_getauxv@@ELFUTILS_1.3+0x104>  // b.any
   1b924:	ldr	w0, [sp, #36]
   1b928:	add	w0, w0, #0x1
   1b92c:	sxtw	x0, w0
   1b930:	lsl	x1, x0, #3
   1b934:	ldr	x0, [sp, #64]
   1b938:	ldr	x0, [x0, #16]
   1b93c:	cmp	x1, x0
   1b940:	cset	w0, hi  // hi = pmore
   1b944:	and	w0, w0, #0xff
   1b948:	and	x0, x0, #0xff
   1b94c:	cmp	x0, #0x0
   1b950:	b.eq	1b960 <gelf_getauxv@@ELFUTILS_1.3+0xc0>  // b.none
   1b954:	mov	w0, #0x16                  	// #22
   1b958:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1b95c:	b	1ba08 <gelf_getauxv@@ELFUTILS_1.3+0x168>
   1b960:	ldr	x0, [sp, #64]
   1b964:	ldr	x1, [x0]
   1b968:	ldrsw	x0, [sp, #36]
   1b96c:	lsl	x0, x0, #3
   1b970:	add	x0, x1, x0
   1b974:	str	x0, [sp, #48]
   1b978:	ldr	x0, [sp, #48]
   1b97c:	ldr	w0, [x0]
   1b980:	mov	w1, w0
   1b984:	ldr	x0, [sp, #24]
   1b988:	str	x1, [x0]
   1b98c:	ldr	x0, [sp, #48]
   1b990:	ldr	w0, [x0, #4]
   1b994:	mov	w1, w0
   1b998:	ldr	x0, [sp, #24]
   1b99c:	str	x1, [x0, #8]
   1b9a0:	b	1ba00 <gelf_getauxv@@ELFUTILS_1.3+0x160>
   1b9a4:	ldr	w0, [sp, #36]
   1b9a8:	add	w0, w0, #0x1
   1b9ac:	sxtw	x0, w0
   1b9b0:	lsl	x1, x0, #4
   1b9b4:	ldr	x0, [sp, #64]
   1b9b8:	ldr	x0, [x0, #16]
   1b9bc:	cmp	x1, x0
   1b9c0:	cset	w0, hi  // hi = pmore
   1b9c4:	and	w0, w0, #0xff
   1b9c8:	and	x0, x0, #0xff
   1b9cc:	cmp	x0, #0x0
   1b9d0:	b.eq	1b9e0 <gelf_getauxv@@ELFUTILS_1.3+0x140>  // b.none
   1b9d4:	mov	w0, #0x16                  	// #22
   1b9d8:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1b9dc:	b	1ba08 <gelf_getauxv@@ELFUTILS_1.3+0x168>
   1b9e0:	ldr	x0, [sp, #64]
   1b9e4:	ldr	x1, [x0]
   1b9e8:	ldrsw	x0, [sp, #36]
   1b9ec:	lsl	x0, x0, #4
   1b9f0:	add	x0, x1, x0
   1b9f4:	ldp	x0, x1, [x0]
   1b9f8:	ldr	x2, [sp, #24]
   1b9fc:	stp	x0, x1, [x2]
   1ba00:	ldr	x0, [sp, #24]
   1ba04:	str	x0, [sp, #72]
   1ba08:	ldr	x0, [sp, #72]
   1ba0c:	ldp	x29, x30, [sp], #80
   1ba10:	ret

000000000001ba14 <gelf_update_auxv@@ELFUTILS_1.3>:
   1ba14:	stp	x29, x30, [sp, #-80]!
   1ba18:	mov	x29, sp
   1ba1c:	str	x0, [sp, #40]
   1ba20:	str	w1, [sp, #36]
   1ba24:	str	x2, [sp, #24]
   1ba28:	ldr	x0, [sp, #40]
   1ba2c:	str	x0, [sp, #64]
   1ba30:	str	wzr, [sp, #76]
   1ba34:	ldr	x0, [sp, #40]
   1ba38:	cmp	x0, #0x0
   1ba3c:	b.ne	1ba48 <gelf_update_auxv@@ELFUTILS_1.3+0x34>  // b.any
   1ba40:	mov	w0, #0x0                   	// #0
   1ba44:	b	1bc10 <gelf_update_auxv@@ELFUTILS_1.3+0x1fc>
   1ba48:	ldr	w0, [sp, #36]
   1ba4c:	lsr	w0, w0, #31
   1ba50:	and	w0, w0, #0xff
   1ba54:	and	x0, x0, #0xff
   1ba58:	cmp	x0, #0x0
   1ba5c:	b.eq	1ba70 <gelf_update_auxv@@ELFUTILS_1.3+0x5c>  // b.none
   1ba60:	mov	w0, #0x16                  	// #22
   1ba64:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1ba68:	mov	w0, #0x0                   	// #0
   1ba6c:	b	1bc10 <gelf_update_auxv@@ELFUTILS_1.3+0x1fc>
   1ba70:	ldr	x0, [sp, #64]
   1ba74:	ldr	w0, [x0, #8]
   1ba78:	cmp	w0, #0x18
   1ba7c:	cset	w0, ne  // ne = any
   1ba80:	and	w0, w0, #0xff
   1ba84:	and	x0, x0, #0xff
   1ba88:	cmp	x0, #0x0
   1ba8c:	b.eq	1baa0 <gelf_update_auxv@@ELFUTILS_1.3+0x8c>  // b.none
   1ba90:	mov	w0, #0x1f                  	// #31
   1ba94:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1ba98:	mov	w0, #0x0                   	// #0
   1ba9c:	b	1bc10 <gelf_update_auxv@@ELFUTILS_1.3+0x1fc>
   1baa0:	ldr	x0, [sp, #64]
   1baa4:	ldr	x0, [x0, #40]
   1baa8:	str	x0, [sp, #56]
   1baac:	ldr	x0, [sp, #56]
   1bab0:	ldr	x0, [x0, #136]
   1bab4:	ldr	w0, [x0, #32]
   1bab8:	cmp	w0, #0x1
   1babc:	b.ne	1bb94 <gelf_update_auxv@@ELFUTILS_1.3+0x180>  // b.any
   1bac0:	ldr	x0, [sp, #24]
   1bac4:	ldr	x1, [x0]
   1bac8:	mov	x0, #0xffffffff            	// #4294967295
   1bacc:	cmp	x1, x0
   1bad0:	cset	w0, hi  // hi = pmore
   1bad4:	and	w0, w0, #0xff
   1bad8:	and	x0, x0, #0xff
   1badc:	cmp	x0, #0x0
   1bae0:	b.ne	1bb08 <gelf_update_auxv@@ELFUTILS_1.3+0xf4>  // b.any
   1bae4:	ldr	x0, [sp, #24]
   1bae8:	ldr	x1, [x0, #8]
   1baec:	mov	x0, #0xffffffff            	// #4294967295
   1baf0:	cmp	x1, x0
   1baf4:	cset	w0, hi  // hi = pmore
   1baf8:	and	w0, w0, #0xff
   1bafc:	and	x0, x0, #0xff
   1bb00:	cmp	x0, #0x0
   1bb04:	b.eq	1bb14 <gelf_update_auxv@@ELFUTILS_1.3+0x100>  // b.none
   1bb08:	mov	w0, #0x21                  	// #33
   1bb0c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1bb10:	b	1bc0c <gelf_update_auxv@@ELFUTILS_1.3+0x1f8>
   1bb14:	ldr	w0, [sp, #36]
   1bb18:	add	w0, w0, #0x1
   1bb1c:	sxtw	x0, w0
   1bb20:	lsl	x1, x0, #3
   1bb24:	ldr	x0, [sp, #64]
   1bb28:	ldr	x0, [x0, #16]
   1bb2c:	cmp	x1, x0
   1bb30:	cset	w0, hi  // hi = pmore
   1bb34:	and	w0, w0, #0xff
   1bb38:	and	x0, x0, #0xff
   1bb3c:	cmp	x0, #0x0
   1bb40:	b.eq	1bb50 <gelf_update_auxv@@ELFUTILS_1.3+0x13c>  // b.none
   1bb44:	mov	w0, #0x16                  	// #22
   1bb48:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1bb4c:	b	1bc0c <gelf_update_auxv@@ELFUTILS_1.3+0x1f8>
   1bb50:	ldr	x0, [sp, #64]
   1bb54:	ldr	x1, [x0]
   1bb58:	ldrsw	x0, [sp, #36]
   1bb5c:	lsl	x0, x0, #3
   1bb60:	add	x0, x1, x0
   1bb64:	str	x0, [sp, #48]
   1bb68:	ldr	x0, [sp, #24]
   1bb6c:	ldr	x0, [x0]
   1bb70:	mov	w1, w0
   1bb74:	ldr	x0, [sp, #48]
   1bb78:	str	w1, [x0]
   1bb7c:	ldr	x0, [sp, #24]
   1bb80:	ldr	x0, [x0, #8]
   1bb84:	mov	w1, w0
   1bb88:	ldr	x0, [sp, #48]
   1bb8c:	str	w1, [x0, #4]
   1bb90:	b	1bbf0 <gelf_update_auxv@@ELFUTILS_1.3+0x1dc>
   1bb94:	ldr	w0, [sp, #36]
   1bb98:	add	w0, w0, #0x1
   1bb9c:	sxtw	x0, w0
   1bba0:	lsl	x1, x0, #4
   1bba4:	ldr	x0, [sp, #64]
   1bba8:	ldr	x0, [x0, #16]
   1bbac:	cmp	x1, x0
   1bbb0:	cset	w0, hi  // hi = pmore
   1bbb4:	and	w0, w0, #0xff
   1bbb8:	and	x0, x0, #0xff
   1bbbc:	cmp	x0, #0x0
   1bbc0:	b.eq	1bbd0 <gelf_update_auxv@@ELFUTILS_1.3+0x1bc>  // b.none
   1bbc4:	mov	w0, #0x16                  	// #22
   1bbc8:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1bbcc:	b	1bc0c <gelf_update_auxv@@ELFUTILS_1.3+0x1f8>
   1bbd0:	ldr	x0, [sp, #64]
   1bbd4:	ldr	x1, [x0]
   1bbd8:	ldrsw	x0, [sp, #36]
   1bbdc:	lsl	x0, x0, #4
   1bbe0:	add	x2, x1, x0
   1bbe4:	ldr	x0, [sp, #24]
   1bbe8:	ldp	x0, x1, [x0]
   1bbec:	stp	x0, x1, [x2]
   1bbf0:	mov	w0, #0x1                   	// #1
   1bbf4:	str	w0, [sp, #76]
   1bbf8:	ldr	x0, [sp, #56]
   1bbfc:	ldr	w0, [x0, #156]
   1bc00:	orr	w1, w0, #0x1
   1bc04:	ldr	x0, [sp, #56]
   1bc08:	str	w1, [x0, #156]
   1bc0c:	ldr	w0, [sp, #76]
   1bc10:	ldp	x29, x30, [sp], #80
   1bc14:	ret

000000000001bc18 <gelf_getnote@@ELFUTILS_1.3>:
   1bc18:	stp	x29, x30, [sp, #-80]!
   1bc1c:	mov	x29, sp
   1bc20:	str	x0, [sp, #56]
   1bc24:	str	x1, [sp, #48]
   1bc28:	str	x2, [sp, #40]
   1bc2c:	str	x3, [sp, #32]
   1bc30:	str	x4, [sp, #24]
   1bc34:	ldr	x0, [sp, #56]
   1bc38:	cmp	x0, #0x0
   1bc3c:	b.ne	1bc48 <gelf_getnote@@ELFUTILS_1.3+0x30>  // b.any
   1bc40:	mov	x0, #0x0                   	// #0
   1bc44:	b	1befc <gelf_getnote@@ELFUTILS_1.3+0x2e4>
   1bc48:	ldr	x0, [sp, #56]
   1bc4c:	ldr	w0, [x0, #8]
   1bc50:	cmp	w0, #0x13
   1bc54:	cset	w0, ne  // ne = any
   1bc58:	and	w0, w0, #0xff
   1bc5c:	and	x0, x0, #0xff
   1bc60:	cmp	x0, #0x0
   1bc64:	b.eq	1bc98 <gelf_getnote@@ELFUTILS_1.3+0x80>  // b.none
   1bc68:	ldr	x0, [sp, #56]
   1bc6c:	ldr	w0, [x0, #8]
   1bc70:	cmp	w0, #0x1a
   1bc74:	cset	w0, ne  // ne = any
   1bc78:	and	w0, w0, #0xff
   1bc7c:	and	x0, x0, #0xff
   1bc80:	cmp	x0, #0x0
   1bc84:	b.eq	1bc98 <gelf_getnote@@ELFUTILS_1.3+0x80>  // b.none
   1bc88:	mov	w0, #0x4                   	// #4
   1bc8c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1bc90:	mov	x0, #0x0                   	// #0
   1bc94:	b	1befc <gelf_getnote@@ELFUTILS_1.3+0x2e4>
   1bc98:	ldr	x0, [sp, #56]
   1bc9c:	ldr	x0, [x0, #16]
   1bca0:	ldr	x1, [sp, #48]
   1bca4:	cmp	x1, x0
   1bca8:	cset	w0, hi  // hi = pmore
   1bcac:	and	w0, w0, #0xff
   1bcb0:	and	x0, x0, #0xff
   1bcb4:	cmp	x0, #0x0
   1bcb8:	b.ne	1bce4 <gelf_getnote@@ELFUTILS_1.3+0xcc>  // b.any
   1bcbc:	ldr	x0, [sp, #56]
   1bcc0:	ldr	x1, [x0, #16]
   1bcc4:	ldr	x0, [sp, #48]
   1bcc8:	sub	x0, x1, x0
   1bccc:	cmp	x0, #0xb
   1bcd0:	cset	w0, ls  // ls = plast
   1bcd4:	and	w0, w0, #0xff
   1bcd8:	and	x0, x0, #0xff
   1bcdc:	cmp	x0, #0x0
   1bce0:	b.eq	1bcf4 <gelf_getnote@@ELFUTILS_1.3+0xdc>  // b.none
   1bce4:	mov	w0, #0x1d                  	// #29
   1bce8:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1bcec:	str	xzr, [sp, #48]
   1bcf0:	b	1bef8 <gelf_getnote@@ELFUTILS_1.3+0x2e0>
   1bcf4:	ldr	x0, [sp, #56]
   1bcf8:	ldr	x1, [x0]
   1bcfc:	ldr	x0, [sp, #48]
   1bd00:	add	x0, x1, x0
   1bd04:	str	x0, [sp, #72]
   1bd08:	ldr	x0, [sp, #48]
   1bd0c:	add	x0, x0, #0xc
   1bd10:	str	x0, [sp, #48]
   1bd14:	ldr	x0, [sp, #56]
   1bd18:	ldr	x0, [x0, #16]
   1bd1c:	ldr	x1, [sp, #48]
   1bd20:	cmp	x1, x0
   1bd24:	b.ls	1bd30 <gelf_getnote@@ELFUTILS_1.3+0x118>  // b.plast
   1bd28:	str	xzr, [sp, #48]
   1bd2c:	b	1bef8 <gelf_getnote@@ELFUTILS_1.3+0x2e0>
   1bd30:	ldr	x0, [sp, #32]
   1bd34:	ldr	x1, [sp, #48]
   1bd38:	str	x1, [x0]
   1bd3c:	ldr	x0, [sp, #72]
   1bd40:	ldr	w0, [x0]
   1bd44:	mov	w1, w0
   1bd48:	ldr	x0, [sp, #56]
   1bd4c:	ldr	x0, [x0, #16]
   1bd50:	cmp	x1, x0
   1bd54:	b.hi	1bd7c <gelf_getnote@@ELFUTILS_1.3+0x164>  // b.pmore
   1bd58:	ldr	x0, [sp, #56]
   1bd5c:	ldr	x1, [x0, #16]
   1bd60:	ldr	x0, [sp, #72]
   1bd64:	ldr	w0, [x0]
   1bd68:	mov	w0, w0
   1bd6c:	sub	x0, x1, x0
   1bd70:	ldr	x1, [sp, #48]
   1bd74:	cmp	x1, x0
   1bd78:	b.ls	1bd84 <gelf_getnote@@ELFUTILS_1.3+0x16c>  // b.plast
   1bd7c:	str	xzr, [sp, #48]
   1bd80:	b	1bef8 <gelf_getnote@@ELFUTILS_1.3+0x2e0>
   1bd84:	ldr	x0, [sp, #72]
   1bd88:	ldr	w0, [x0]
   1bd8c:	mov	w0, w0
   1bd90:	ldr	x1, [sp, #48]
   1bd94:	add	x0, x1, x0
   1bd98:	str	x0, [sp, #48]
   1bd9c:	ldr	x0, [sp, #56]
   1bda0:	ldr	w0, [x0, #8]
   1bda4:	cmp	w0, #0x1a
   1bda8:	b.ne	1bdc0 <gelf_getnote@@ELFUTILS_1.3+0x1a8>  // b.any
   1bdac:	ldr	x0, [sp, #72]
   1bdb0:	ldr	w0, [x0, #4]
   1bdb4:	add	w0, w0, #0x7
   1bdb8:	and	w0, w0, #0xfffffff8
   1bdbc:	b	1bdd0 <gelf_getnote@@ELFUTILS_1.3+0x1b8>
   1bdc0:	ldr	x0, [sp, #72]
   1bdc4:	ldr	w0, [x0, #4]
   1bdc8:	add	w0, w0, #0x3
   1bdcc:	and	w0, w0, #0xfffffffc
   1bdd0:	str	w0, [sp, #68]
   1bdd4:	ldr	x0, [sp, #56]
   1bdd8:	ldr	w0, [x0, #8]
   1bddc:	cmp	w0, #0x1a
   1bde0:	b.ne	1bdf8 <gelf_getnote@@ELFUTILS_1.3+0x1e0>  // b.any
   1bde4:	ldr	x0, [sp, #48]
   1bde8:	add	x0, x0, #0x7
   1bdec:	and	x0, x0, #0xfffffff8
   1bdf0:	str	x0, [sp, #48]
   1bdf4:	b	1be08 <gelf_getnote@@ELFUTILS_1.3+0x1f0>
   1bdf8:	ldr	x0, [sp, #48]
   1bdfc:	add	x0, x0, #0x3
   1be00:	and	x0, x0, #0xfffffffc
   1be04:	str	x0, [sp, #48]
   1be08:	ldr	x0, [sp, #56]
   1be0c:	ldr	x0, [x0, #16]
   1be10:	ldr	x1, [sp, #48]
   1be14:	cmp	x1, x0
   1be18:	cset	w0, hi  // hi = pmore
   1be1c:	and	w0, w0, #0xff
   1be20:	and	x0, x0, #0xff
   1be24:	cmp	x0, #0x0
   1be28:	b.ne	1be58 <gelf_getnote@@ELFUTILS_1.3+0x240>  // b.any
   1be2c:	ldr	x0, [sp, #56]
   1be30:	ldr	x1, [x0, #16]
   1be34:	ldr	x0, [sp, #48]
   1be38:	sub	x1, x1, x0
   1be3c:	ldr	w0, [sp, #68]
   1be40:	cmp	x1, x0
   1be44:	cset	w0, cc  // cc = lo, ul, last
   1be48:	and	w0, w0, #0xff
   1be4c:	and	x0, x0, #0xff
   1be50:	cmp	x0, #0x0
   1be54:	b.eq	1be60 <gelf_getnote@@ELFUTILS_1.3+0x248>  // b.none
   1be58:	mov	w0, #0x1                   	// #1
   1be5c:	b	1be64 <gelf_getnote@@ELFUTILS_1.3+0x24c>
   1be60:	mov	w0, #0x0                   	// #0
   1be64:	cmp	w0, #0x0
   1be68:	b.ne	1bebc <gelf_getnote@@ELFUTILS_1.3+0x2a4>  // b.any
   1be6c:	ldr	w0, [sp, #68]
   1be70:	cmp	w0, #0x0
   1be74:	cset	w0, eq  // eq = none
   1be78:	and	w0, w0, #0xff
   1be7c:	and	x0, x0, #0xff
   1be80:	cmp	x0, #0x0
   1be84:	b.eq	1beb0 <gelf_getnote@@ELFUTILS_1.3+0x298>  // b.none
   1be88:	ldr	x0, [sp, #72]
   1be8c:	ldr	w0, [x0, #4]
   1be90:	cmp	w0, #0x0
   1be94:	cset	w0, ne  // ne = any
   1be98:	and	w0, w0, #0xff
   1be9c:	and	x0, x0, #0xff
   1bea0:	cmp	x0, #0x0
   1bea4:	b.eq	1beb0 <gelf_getnote@@ELFUTILS_1.3+0x298>  // b.none
   1bea8:	mov	w0, #0x1                   	// #1
   1beac:	b	1beb4 <gelf_getnote@@ELFUTILS_1.3+0x29c>
   1beb0:	mov	w0, #0x0                   	// #0
   1beb4:	cmp	w0, #0x0
   1beb8:	b.eq	1bec4 <gelf_getnote@@ELFUTILS_1.3+0x2ac>  // b.none
   1bebc:	str	xzr, [sp, #48]
   1bec0:	b	1bef8 <gelf_getnote@@ELFUTILS_1.3+0x2e0>
   1bec4:	ldr	x0, [sp, #24]
   1bec8:	ldr	x1, [sp, #48]
   1becc:	str	x1, [x0]
   1bed0:	ldr	w0, [sp, #68]
   1bed4:	ldr	x1, [sp, #48]
   1bed8:	add	x0, x1, x0
   1bedc:	str	x0, [sp, #48]
   1bee0:	ldr	x0, [sp, #40]
   1bee4:	ldr	x1, [sp, #72]
   1bee8:	ldr	x2, [x1]
   1beec:	str	x2, [x0]
   1bef0:	ldr	w1, [x1, #8]
   1bef4:	str	w1, [x0, #8]
   1bef8:	ldr	x0, [sp, #48]
   1befc:	ldp	x29, x30, [sp], #80
   1bf00:	ret

000000000001bf04 <gelf_xlatetof@@ELFUTILS_1.0>:
   1bf04:	stp	x29, x30, [sp, #-48]!
   1bf08:	mov	x29, sp
   1bf0c:	str	x0, [sp, #40]
   1bf10:	str	x1, [sp, #32]
   1bf14:	str	x2, [sp, #24]
   1bf18:	str	w3, [sp, #20]
   1bf1c:	ldr	x0, [sp, #40]
   1bf20:	cmp	x0, #0x0
   1bf24:	b.ne	1bf30 <gelf_xlatetof@@ELFUTILS_1.0+0x2c>  // b.any
   1bf28:	mov	x0, #0x0                   	// #0
   1bf2c:	b	1bf68 <gelf_xlatetof@@ELFUTILS_1.0+0x64>
   1bf30:	ldr	x0, [sp, #40]
   1bf34:	ldr	w0, [x0, #32]
   1bf38:	cmp	w0, #0x1
   1bf3c:	b.ne	1bf54 <gelf_xlatetof@@ELFUTILS_1.0+0x50>  // b.any
   1bf40:	ldr	w2, [sp, #20]
   1bf44:	ldr	x1, [sp, #24]
   1bf48:	ldr	x0, [sp, #32]
   1bf4c:	bl	70a0 <elf32_xlatetof@@ELFUTILS_1.0>
   1bf50:	b	1bf64 <gelf_xlatetof@@ELFUTILS_1.0+0x60>
   1bf54:	ldr	w2, [sp, #20]
   1bf58:	ldr	x1, [sp, #24]
   1bf5c:	ldr	x0, [sp, #32]
   1bf60:	bl	73a8 <elf64_xlatetof@@ELFUTILS_1.0>
   1bf64:	nop
   1bf68:	ldp	x29, x30, [sp], #48
   1bf6c:	ret

000000000001bf70 <gelf_xlatetom@@ELFUTILS_1.0>:
   1bf70:	stp	x29, x30, [sp, #-48]!
   1bf74:	mov	x29, sp
   1bf78:	str	x0, [sp, #40]
   1bf7c:	str	x1, [sp, #32]
   1bf80:	str	x2, [sp, #24]
   1bf84:	str	w3, [sp, #20]
   1bf88:	ldr	x0, [sp, #40]
   1bf8c:	cmp	x0, #0x0
   1bf90:	b.ne	1bf9c <gelf_xlatetom@@ELFUTILS_1.0+0x2c>  // b.any
   1bf94:	mov	x0, #0x0                   	// #0
   1bf98:	b	1bfd4 <gelf_xlatetom@@ELFUTILS_1.0+0x64>
   1bf9c:	ldr	x0, [sp, #40]
   1bfa0:	ldr	w0, [x0, #32]
   1bfa4:	cmp	w0, #0x1
   1bfa8:	b.ne	1bfc0 <gelf_xlatetom@@ELFUTILS_1.0+0x50>  // b.any
   1bfac:	ldr	w2, [sp, #20]
   1bfb0:	ldr	x1, [sp, #24]
   1bfb4:	ldr	x0, [sp, #32]
   1bfb8:	bl	7214 <elf32_xlatetom@@ELFUTILS_1.0>
   1bfbc:	b	1bfd0 <gelf_xlatetom@@ELFUTILS_1.0+0x60>
   1bfc0:	ldr	w2, [sp, #20]
   1bfc4:	ldr	x1, [sp, #24]
   1bfc8:	ldr	x0, [sp, #32]
   1bfcc:	bl	7524 <elf64_xlatetom@@ELFUTILS_1.0>
   1bfd0:	nop
   1bfd4:	ldp	x29, x30, [sp], #48
   1bfd8:	ret
   1bfdc:	stp	x29, x30, [sp, #-48]!
   1bfe0:	mov	x29, sp
   1bfe4:	str	x0, [sp, #24]
   1bfe8:	mov	x0, #0xffffffffffffffff    	// #-1
   1bfec:	str	x0, [sp, #40]
   1bff0:	ldr	x1, [sp, #40]
   1bff4:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   1bff8:	movk	x0, #0xaaab
   1bffc:	umulh	x0, x1, x0
   1c000:	lsr	x0, x0, #1
   1c004:	lsl	x0, x0, #1
   1c008:	ldr	x1, [sp, #24]
   1c00c:	cmp	x1, x0
   1c010:	b.cc	1c02c <gelf_xlatetom@@ELFUTILS_1.0+0xbc>  // b.lo, b.ul, b.last
   1c014:	bl	33e0 <__errno_location@plt>
   1c018:	mov	x1, x0
   1c01c:	mov	w0, #0x16                  	// #22
   1c020:	str	w0, [x1]
   1c024:	mov	x0, #0x0                   	// #0
   1c028:	b	1c0b4 <gelf_xlatetom@@ELFUTILS_1.0+0x144>
   1c02c:	ldr	x1, [sp, #24]
   1c030:	mov	x0, x1
   1c034:	lsl	x0, x0, #1
   1c038:	add	x0, x0, x1
   1c03c:	cmp	x0, #0x15
   1c040:	b.ls	1c05c <gelf_xlatetom@@ELFUTILS_1.0+0xec>  // b.plast
   1c044:	ldr	x1, [sp, #24]
   1c048:	mov	x0, x1
   1c04c:	lsl	x0, x0, #1
   1c050:	add	x0, x0, x1
   1c054:	lsr	x0, x0, #1
   1c058:	b	1c060 <gelf_xlatetom@@ELFUTILS_1.0+0xf0>
   1c05c:	mov	x0, #0xa                   	// #10
   1c060:	bl	1e4e4 <elf64_checksum@@ELFUTILS_1.0+0x42c>
   1c064:	str	x0, [sp, #24]
   1c068:	ldr	x0, [sp, #24]
   1c06c:	add	x1, x0, #0x1
   1c070:	mov	x0, x1
   1c074:	lsl	x0, x0, #2
   1c078:	add	x0, x0, x1
   1c07c:	lsl	x0, x0, #3
   1c080:	add	x0, x0, #0x8
   1c084:	mov	x1, #0x1                   	// #1
   1c088:	bl	31c0 <calloc@plt>
   1c08c:	str	x0, [sp, #32]
   1c090:	ldr	x0, [sp, #32]
   1c094:	cmp	x0, #0x0
   1c098:	b.ne	1c0a4 <gelf_xlatetom@@ELFUTILS_1.0+0x134>  // b.any
   1c09c:	mov	x0, #0x0                   	// #0
   1c0a0:	b	1c0b4 <gelf_xlatetom@@ELFUTILS_1.0+0x144>
   1c0a4:	ldr	x0, [sp, #32]
   1c0a8:	ldr	x1, [sp, #24]
   1c0ac:	str	x1, [x0]
   1c0b0:	ldr	x0, [sp, #32]
   1c0b4:	ldp	x29, x30, [sp], #48
   1c0b8:	ret
   1c0bc:	stp	x29, x30, [sp, #-32]!
   1c0c0:	mov	x29, sp
   1c0c4:	str	x0, [sp, #24]
   1c0c8:	ldr	x0, [sp, #24]
   1c0cc:	bl	32a0 <free@plt>
   1c0d0:	nop
   1c0d4:	ldp	x29, x30, [sp], #32
   1c0d8:	ret
   1c0dc:	stp	x29, x30, [sp, #-64]!
   1c0e0:	mov	x29, sp
   1c0e4:	str	x0, [sp, #40]
   1c0e8:	str	x1, [sp, #32]
   1c0ec:	str	x2, [sp, #24]
   1c0f0:	ldr	x0, [sp, #40]
   1c0f4:	ldr	x1, [x0]
   1c0f8:	ldr	x0, [sp, #32]
   1c0fc:	udiv	x2, x0, x1
   1c100:	mul	x1, x2, x1
   1c104:	sub	x0, x0, x1
   1c108:	add	x0, x0, #0x1
   1c10c:	str	x0, [sp, #56]
   1c110:	ldr	x2, [sp, #40]
   1c114:	ldr	x1, [sp, #56]
   1c118:	mov	x0, x1
   1c11c:	lsl	x0, x0, #2
   1c120:	add	x0, x0, x1
   1c124:	lsl	x0, x0, #3
   1c128:	add	x0, x2, x0
   1c12c:	ldr	x0, [x0, #8]
   1c130:	cmp	x0, #0x0
   1c134:	b.eq	1c2dc <gelf_xlatetom@@ELFUTILS_1.0+0x36c>  // b.none
   1c138:	ldr	x2, [sp, #40]
   1c13c:	ldr	x1, [sp, #56]
   1c140:	mov	x0, x1
   1c144:	lsl	x0, x0, #2
   1c148:	add	x0, x0, x1
   1c14c:	lsl	x0, x0, #3
   1c150:	add	x0, x2, x0
   1c154:	ldr	x0, [x0, #8]
   1c158:	ldr	x1, [sp, #32]
   1c15c:	cmp	x1, x0
   1c160:	b.ne	1c1c4 <gelf_xlatetom@@ELFUTILS_1.0+0x254>  // b.any
   1c164:	ldr	x0, [sp, #24]
   1c168:	ldr	x3, [x0]
   1c16c:	ldr	x2, [sp, #40]
   1c170:	ldr	x1, [sp, #56]
   1c174:	mov	x0, x1
   1c178:	lsl	x0, x0, #2
   1c17c:	add	x0, x0, x1
   1c180:	lsl	x0, x0, #3
   1c184:	add	x0, x2, x0
   1c188:	ldr	x0, [x0, #16]
   1c18c:	mov	x1, x0
   1c190:	mov	x0, x3
   1c194:	bl	3260 <strcmp@plt>
   1c198:	cmp	w0, #0x0
   1c19c:	b.ne	1c1c4 <gelf_xlatetom@@ELFUTILS_1.0+0x254>  // b.any
   1c1a0:	ldr	x1, [sp, #56]
   1c1a4:	mov	x0, x1
   1c1a8:	lsl	x0, x0, #2
   1c1ac:	add	x0, x0, x1
   1c1b0:	lsl	x0, x0, #3
   1c1b4:	ldr	x1, [sp, #40]
   1c1b8:	add	x0, x1, x0
   1c1bc:	add	x0, x0, #0x8
   1c1c0:	b	1c2fc <gelf_xlatetom@@ELFUTILS_1.0+0x38c>
   1c1c4:	ldr	x0, [sp, #40]
   1c1c8:	ldr	x0, [x0]
   1c1cc:	sub	x1, x0, #0x2
   1c1d0:	ldr	x0, [sp, #32]
   1c1d4:	udiv	x2, x0, x1
   1c1d8:	mul	x1, x2, x1
   1c1dc:	sub	x0, x0, x1
   1c1e0:	add	x0, x0, #0x1
   1c1e4:	str	x0, [sp, #48]
   1c1e8:	ldr	x1, [sp, #56]
   1c1ec:	ldr	x0, [sp, #48]
   1c1f0:	cmp	x1, x0
   1c1f4:	b.hi	1c218 <gelf_xlatetom@@ELFUTILS_1.0+0x2a8>  // b.pmore
   1c1f8:	ldr	x0, [sp, #40]
   1c1fc:	ldr	x1, [x0]
   1c200:	ldr	x0, [sp, #56]
   1c204:	add	x1, x1, x0
   1c208:	ldr	x0, [sp, #48]
   1c20c:	sub	x0, x1, x0
   1c210:	str	x0, [sp, #56]
   1c214:	b	1c228 <gelf_xlatetom@@ELFUTILS_1.0+0x2b8>
   1c218:	ldr	x1, [sp, #56]
   1c21c:	ldr	x0, [sp, #48]
   1c220:	sub	x0, x1, x0
   1c224:	str	x0, [sp, #56]
   1c228:	ldr	x2, [sp, #40]
   1c22c:	ldr	x1, [sp, #56]
   1c230:	mov	x0, x1
   1c234:	lsl	x0, x0, #2
   1c238:	add	x0, x0, x1
   1c23c:	lsl	x0, x0, #3
   1c240:	add	x0, x2, x0
   1c244:	ldr	x0, [x0, #8]
   1c248:	ldr	x1, [sp, #32]
   1c24c:	cmp	x1, x0
   1c250:	b.ne	1c2b4 <gelf_xlatetom@@ELFUTILS_1.0+0x344>  // b.any
   1c254:	ldr	x0, [sp, #24]
   1c258:	ldr	x3, [x0]
   1c25c:	ldr	x2, [sp, #40]
   1c260:	ldr	x1, [sp, #56]
   1c264:	mov	x0, x1
   1c268:	lsl	x0, x0, #2
   1c26c:	add	x0, x0, x1
   1c270:	lsl	x0, x0, #3
   1c274:	add	x0, x2, x0
   1c278:	ldr	x0, [x0, #16]
   1c27c:	mov	x1, x0
   1c280:	mov	x0, x3
   1c284:	bl	3260 <strcmp@plt>
   1c288:	cmp	w0, #0x0
   1c28c:	b.ne	1c2b4 <gelf_xlatetom@@ELFUTILS_1.0+0x344>  // b.any
   1c290:	ldr	x1, [sp, #56]
   1c294:	mov	x0, x1
   1c298:	lsl	x0, x0, #2
   1c29c:	add	x0, x0, x1
   1c2a0:	lsl	x0, x0, #3
   1c2a4:	ldr	x1, [sp, #40]
   1c2a8:	add	x0, x1, x0
   1c2ac:	add	x0, x0, #0x8
   1c2b0:	b	1c2fc <gelf_xlatetom@@ELFUTILS_1.0+0x38c>
   1c2b4:	ldr	x2, [sp, #40]
   1c2b8:	ldr	x1, [sp, #56]
   1c2bc:	mov	x0, x1
   1c2c0:	lsl	x0, x0, #2
   1c2c4:	add	x0, x0, x1
   1c2c8:	lsl	x0, x0, #3
   1c2cc:	add	x0, x2, x0
   1c2d0:	ldr	x0, [x0, #8]
   1c2d4:	cmp	x0, #0x0
   1c2d8:	b.ne	1c1e8 <gelf_xlatetom@@ELFUTILS_1.0+0x278>  // b.any
   1c2dc:	ldr	x1, [sp, #56]
   1c2e0:	mov	x0, x1
   1c2e4:	lsl	x0, x0, #2
   1c2e8:	add	x0, x0, x1
   1c2ec:	lsl	x0, x0, #3
   1c2f0:	ldr	x1, [sp, #40]
   1c2f4:	add	x0, x1, x0
   1c2f8:	add	x0, x0, #0x8
   1c2fc:	ldp	x29, x30, [sp], #64
   1c300:	ret
   1c304:	stp	x29, x30, [sp, #-64]!
   1c308:	mov	x29, sp
   1c30c:	str	x0, [sp, #40]
   1c310:	str	x1, [sp, #32]
   1c314:	str	x2, [sp, #24]
   1c318:	str	x3, [sp, #16]
   1c31c:	ldr	x0, [sp, #32]
   1c320:	bl	3780 <elf_hash@@ELFUTILS_1.0>
   1c324:	str	x0, [sp, #56]
   1c328:	ldr	x2, [sp, #16]
   1c32c:	ldr	x1, [sp, #56]
   1c330:	ldr	x0, [sp, #40]
   1c334:	bl	1c0dc <gelf_xlatetom@@ELFUTILS_1.0+0x16c>
   1c338:	str	x0, [sp, #48]
   1c33c:	ldr	x0, [sp, #48]
   1c340:	ldr	x0, [x0]
   1c344:	cmp	x0, #0x0
   1c348:	b.eq	1c354 <gelf_xlatetom@@ELFUTILS_1.0+0x3e4>  // b.none
   1c34c:	mov	w0, #0xffffffff            	// #-1
   1c350:	b	1c388 <gelf_xlatetom@@ELFUTILS_1.0+0x418>
   1c354:	ldr	x0, [sp, #48]
   1c358:	ldr	x1, [sp, #56]
   1c35c:	str	x1, [x0]
   1c360:	ldr	x0, [sp, #48]
   1c364:	add	x1, x0, #0x8
   1c368:	ldr	x0, [sp, #16]
   1c36c:	mov	x2, x1
   1c370:	mov	x3, x0
   1c374:	ldp	x0, x1, [x3]
   1c378:	stp	x0, x1, [x2]
   1c37c:	ldp	x0, x1, [x3, #16]
   1c380:	stp	x0, x1, [x2, #16]
   1c384:	mov	w0, #0x0                   	// #0
   1c388:	ldp	x29, x30, [sp], #64
   1c38c:	ret
   1c390:	stp	x29, x30, [sp, #-64]!
   1c394:	mov	x29, sp
   1c398:	str	x0, [sp, #40]
   1c39c:	str	x1, [sp, #32]
   1c3a0:	str	x2, [sp, #24]
   1c3a4:	str	x3, [sp, #16]
   1c3a8:	ldr	x0, [sp, #32]
   1c3ac:	bl	3780 <elf_hash@@ELFUTILS_1.0>
   1c3b0:	str	x0, [sp, #56]
   1c3b4:	ldr	x2, [sp, #16]
   1c3b8:	ldr	x1, [sp, #56]
   1c3bc:	ldr	x0, [sp, #40]
   1c3c0:	bl	1c0dc <gelf_xlatetom@@ELFUTILS_1.0+0x16c>
   1c3c4:	str	x0, [sp, #48]
   1c3c8:	ldr	x0, [sp, #48]
   1c3cc:	ldr	x1, [sp, #56]
   1c3d0:	str	x1, [x0]
   1c3d4:	ldr	x0, [sp, #48]
   1c3d8:	add	x1, x0, #0x8
   1c3dc:	ldr	x0, [sp, #16]
   1c3e0:	mov	x2, x1
   1c3e4:	mov	x3, x0
   1c3e8:	ldp	x0, x1, [x3]
   1c3ec:	stp	x0, x1, [x2]
   1c3f0:	ldp	x0, x1, [x3, #16]
   1c3f4:	stp	x0, x1, [x2, #16]
   1c3f8:	mov	w0, #0x0                   	// #0
   1c3fc:	ldp	x29, x30, [sp], #64
   1c400:	ret
   1c404:	stp	x29, x30, [sp, #-64]!
   1c408:	mov	x29, sp
   1c40c:	str	x0, [sp, #40]
   1c410:	str	x1, [sp, #32]
   1c414:	str	x2, [sp, #24]
   1c418:	str	x3, [sp, #16]
   1c41c:	ldr	x0, [sp, #32]
   1c420:	bl	3780 <elf_hash@@ELFUTILS_1.0>
   1c424:	str	x0, [sp, #56]
   1c428:	ldr	x2, [sp, #16]
   1c42c:	ldr	x1, [sp, #56]
   1c430:	ldr	x0, [sp, #40]
   1c434:	bl	1c0dc <gelf_xlatetom@@ELFUTILS_1.0+0x16c>
   1c438:	str	x0, [sp, #48]
   1c43c:	ldr	x0, [sp, #48]
   1c440:	ldr	x0, [x0]
   1c444:	cmp	x0, #0x0
   1c448:	b.ne	1c454 <gelf_xlatetom@@ELFUTILS_1.0+0x4e4>  // b.any
   1c44c:	mov	x0, #0x0                   	// #0
   1c450:	b	1c45c <gelf_xlatetom@@ELFUTILS_1.0+0x4ec>
   1c454:	ldr	x0, [sp, #48]
   1c458:	add	x0, x0, #0x8
   1c45c:	ldp	x29, x30, [sp], #64
   1c460:	ret

000000000001c464 <nlist@@ELFUTILS_1.0>:
   1c464:	stp	x29, x30, [sp, #-240]!
   1c468:	mov	x29, sp
   1c46c:	str	x19, [sp, #16]
   1c470:	str	x0, [sp, #40]
   1c474:	str	x1, [sp, #32]
   1c478:	str	xzr, [sp, #232]
   1c47c:	str	xzr, [sp, #224]
   1c480:	str	xzr, [sp, #216]
   1c484:	mov	w1, #0x0                   	// #0
   1c488:	ldr	x0, [sp, #40]
   1c48c:	bl	3150 <open@plt>
   1c490:	str	w0, [sp, #204]
   1c494:	ldr	w0, [sp, #204]
   1c498:	cmn	w0, #0x1
   1c49c:	b.ne	1c4ac <nlist@@ELFUTILS_1.0+0x48>  // b.any
   1c4a0:	mov	w0, #0x27                  	// #39
   1c4a4:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1c4a8:	b	1c808 <nlist@@ELFUTILS_1.0+0x3a4>
   1c4ac:	mov	w0, #0x1                   	// #1
   1c4b0:	bl	35a0 <elf_version@@ELFUTILS_1.0>
   1c4b4:	mov	x2, #0x0                   	// #0
   1c4b8:	mov	w1, #0x8                   	// #8
   1c4bc:	ldr	w0, [sp, #204]
   1c4c0:	bl	64c4 <elf_begin@@ELFUTILS_1.0>
   1c4c4:	str	x0, [sp, #192]
   1c4c8:	ldr	x0, [sp, #192]
   1c4cc:	cmp	x0, #0x0
   1c4d0:	b.eq	1c7fc <nlist@@ELFUTILS_1.0+0x398>  // b.none
   1c4d4:	b	1c52c <nlist@@ELFUTILS_1.0+0xc8>
   1c4d8:	add	x0, sp, #0x58
   1c4dc:	mov	x1, x0
   1c4e0:	ldr	x0, [sp, #232]
   1c4e4:	bl	10e44 <gelf_getshdr@@ELFUTILS_1.0>
   1c4e8:	str	x0, [sp, #216]
   1c4ec:	ldr	x0, [sp, #216]
   1c4f0:	cmp	x0, #0x0
   1c4f4:	b.eq	1c7d4 <nlist@@ELFUTILS_1.0+0x370>  // b.none
   1c4f8:	ldr	x0, [sp, #216]
   1c4fc:	ldr	w0, [x0, #4]
   1c500:	cmp	w0, #0x2
   1c504:	b.ne	1c514 <nlist@@ELFUTILS_1.0+0xb0>  // b.any
   1c508:	ldr	x0, [sp, #232]
   1c50c:	str	x0, [sp, #224]
   1c510:	b	1c548 <nlist@@ELFUTILS_1.0+0xe4>
   1c514:	ldr	x0, [sp, #216]
   1c518:	ldr	w0, [x0, #4]
   1c51c:	cmp	w0, #0xb
   1c520:	b.ne	1c52c <nlist@@ELFUTILS_1.0+0xc8>  // b.any
   1c524:	ldr	x0, [sp, #232]
   1c528:	str	x0, [sp, #224]
   1c52c:	ldr	x1, [sp, #232]
   1c530:	ldr	x0, [sp, #192]
   1c534:	bl	edbc <elf_nextscn@@ELFUTILS_1.0>
   1c538:	str	x0, [sp, #232]
   1c53c:	ldr	x0, [sp, #232]
   1c540:	cmp	x0, #0x0
   1c544:	b.ne	1c4d8 <nlist@@ELFUTILS_1.0+0x74>  // b.any
   1c548:	ldr	x0, [sp, #224]
   1c54c:	cmp	x0, #0x0
   1c550:	b.eq	1c7dc <nlist@@ELFUTILS_1.0+0x378>  // b.none
   1c554:	ldr	x0, [sp, #232]
   1c558:	cmp	x0, #0x0
   1c55c:	b.ne	1c590 <nlist@@ELFUTILS_1.0+0x12c>  // b.any
   1c560:	add	x0, sp, #0x58
   1c564:	mov	x1, x0
   1c568:	ldr	x0, [sp, #224]
   1c56c:	bl	10e44 <gelf_getshdr@@ELFUTILS_1.0>
   1c570:	str	x0, [sp, #216]
   1c574:	ldr	x0, [sp, #216]
   1c578:	cmp	x0, #0x0
   1c57c:	cset	w0, eq  // eq = none
   1c580:	and	w0, w0, #0xff
   1c584:	and	x0, x0, #0xff
   1c588:	cmp	x0, #0x0
   1c58c:	b.ne	1c7e4 <nlist@@ELFUTILS_1.0+0x380>  // b.any
   1c590:	mov	x1, #0x0                   	// #0
   1c594:	ldr	x0, [sp, #224]
   1c598:	bl	12760 <elf_getdata@@ELFUTILS_1.0>
   1c59c:	str	x0, [sp, #184]
   1c5a0:	ldr	x0, [sp, #184]
   1c5a4:	cmp	x0, #0x0
   1c5a8:	b.eq	1c7ec <nlist@@ELFUTILS_1.0+0x388>  // b.none
   1c5ac:	ldr	x0, [sp, #216]
   1c5b0:	ldr	x19, [x0, #32]
   1c5b4:	mov	w3, #0x1                   	// #1
   1c5b8:	mov	x2, #0x1                   	// #1
   1c5bc:	mov	w1, #0xb                   	// #11
   1c5c0:	ldr	x0, [sp, #192]
   1c5c4:	bl	6ff4 <gelf_fsize@@ELFUTILS_1.0>
   1c5c8:	udiv	x0, x19, x0
   1c5cc:	str	x0, [sp, #176]
   1c5d0:	ldr	x0, [sp, #176]
   1c5d4:	bl	1bfdc <gelf_xlatetom@@ELFUTILS_1.0+0x6c>
   1c5d8:	str	x0, [sp, #168]
   1c5dc:	ldr	x0, [sp, #168]
   1c5e0:	cmp	x0, #0x0
   1c5e4:	b.ne	1c5f4 <nlist@@ELFUTILS_1.0+0x190>  // b.any
   1c5e8:	mov	w0, #0x8                   	// #8
   1c5ec:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1c5f0:	b	1c7f0 <nlist@@ELFUTILS_1.0+0x38c>
   1c5f4:	str	xzr, [sp, #208]
   1c5f8:	b	1c69c <nlist@@ELFUTILS_1.0+0x238>
   1c5fc:	ldr	x0, [sp, #208]
   1c600:	mov	w1, w0
   1c604:	add	x0, sp, #0x38
   1c608:	add	x0, x0, #0x8
   1c60c:	mov	x2, x0
   1c610:	ldr	x0, [sp, #184]
   1c614:	bl	1a1bc <gelf_getsym@@ELFUTILS_1.0>
   1c618:	str	x0, [sp, #152]
   1c61c:	ldr	x0, [sp, #152]
   1c620:	cmp	x0, #0x0
   1c624:	b.eq	1c7bc <nlist@@ELFUTILS_1.0+0x358>  // b.none
   1c628:	ldr	x0, [sp, #216]
   1c62c:	ldr	w0, [x0, #40]
   1c630:	mov	w1, w0
   1c634:	ldr	x0, [sp, #152]
   1c638:	ldr	w0, [x0]
   1c63c:	mov	w0, w0
   1c640:	mov	x2, x0
   1c644:	ldr	x0, [sp, #192]
   1c648:	bl	11334 <elf_strptr@@ELFUTILS_1.0>
   1c64c:	str	x0, [sp, #56]
   1c650:	ldr	x0, [sp, #56]
   1c654:	cmp	x0, #0x0
   1c658:	b.eq	1c7c4 <nlist@@ELFUTILS_1.0+0x360>  // b.none
   1c65c:	ldr	x0, [sp, #56]
   1c660:	ldrb	w0, [x0]
   1c664:	cmp	w0, #0x0
   1c668:	b.eq	1c68c <nlist@@ELFUTILS_1.0+0x228>  // b.none
   1c66c:	ldr	x0, [sp, #56]
   1c670:	add	x1, sp, #0x38
   1c674:	mov	x3, x1
   1c678:	mov	x2, #0x0                   	// #0
   1c67c:	mov	x1, x0
   1c680:	ldr	x0, [sp, #168]
   1c684:	bl	1c390 <gelf_xlatetom@@ELFUTILS_1.0+0x420>
   1c688:	b	1c690 <nlist@@ELFUTILS_1.0+0x22c>
   1c68c:	nop
   1c690:	ldr	x0, [sp, #208]
   1c694:	add	x0, x0, #0x1
   1c698:	str	x0, [sp, #208]
   1c69c:	ldr	x1, [sp, #208]
   1c6a0:	ldr	x0, [sp, #176]
   1c6a4:	cmp	x1, x0
   1c6a8:	b.cc	1c5fc <nlist@@ELFUTILS_1.0+0x198>  // b.lo, b.ul, b.last
   1c6ac:	b	1c778 <nlist@@ELFUTILS_1.0+0x314>
   1c6b0:	ldr	x0, [sp, #32]
   1c6b4:	ldr	x0, [x0]
   1c6b8:	str	x0, [sp, #56]
   1c6bc:	ldr	x0, [sp, #32]
   1c6c0:	ldr	x0, [x0]
   1c6c4:	add	x1, sp, #0x38
   1c6c8:	mov	x3, x1
   1c6cc:	mov	x2, #0x0                   	// #0
   1c6d0:	mov	x1, x0
   1c6d4:	ldr	x0, [sp, #168]
   1c6d8:	bl	1c404 <gelf_xlatetom@@ELFUTILS_1.0+0x494>
   1c6dc:	str	x0, [sp, #160]
   1c6e0:	ldr	x0, [sp, #160]
   1c6e4:	cmp	x0, #0x0
   1c6e8:	b.eq	1c744 <nlist@@ELFUTILS_1.0+0x2e0>  // b.none
   1c6ec:	ldr	x0, [sp, #160]
   1c6f0:	ldr	x0, [x0, #16]
   1c6f4:	mov	x1, x0
   1c6f8:	ldr	x0, [sp, #32]
   1c6fc:	str	x1, [x0, #8]
   1c700:	ldr	x0, [sp, #160]
   1c704:	ldrh	w0, [x0, #14]
   1c708:	sxth	w1, w0
   1c70c:	ldr	x0, [sp, #32]
   1c710:	strh	w1, [x0, #16]
   1c714:	ldr	x0, [sp, #160]
   1c718:	ldrb	w0, [x0, #12]
   1c71c:	and	w0, w0, #0xffff
   1c720:	and	w0, w0, #0xf
   1c724:	and	w1, w0, #0xffff
   1c728:	ldr	x0, [sp, #32]
   1c72c:	strh	w1, [x0, #18]
   1c730:	ldr	x0, [sp, #32]
   1c734:	strb	wzr, [x0, #20]
   1c738:	ldr	x0, [sp, #32]
   1c73c:	strb	wzr, [x0, #21]
   1c740:	b	1c76c <nlist@@ELFUTILS_1.0+0x308>
   1c744:	ldr	x0, [sp, #32]
   1c748:	str	xzr, [x0, #8]
   1c74c:	ldr	x0, [sp, #32]
   1c750:	strh	wzr, [x0, #16]
   1c754:	ldr	x0, [sp, #32]
   1c758:	strh	wzr, [x0, #18]
   1c75c:	ldr	x0, [sp, #32]
   1c760:	strb	wzr, [x0, #20]
   1c764:	ldr	x0, [sp, #32]
   1c768:	strb	wzr, [x0, #21]
   1c76c:	ldr	x0, [sp, #32]
   1c770:	add	x0, x0, #0x18
   1c774:	str	x0, [sp, #32]
   1c778:	ldr	x0, [sp, #32]
   1c77c:	ldr	x0, [x0]
   1c780:	cmp	x0, #0x0
   1c784:	b.eq	1c79c <nlist@@ELFUTILS_1.0+0x338>  // b.none
   1c788:	ldr	x0, [sp, #32]
   1c78c:	ldr	x0, [x0]
   1c790:	ldrb	w0, [x0]
   1c794:	cmp	w0, #0x0
   1c798:	b.ne	1c6b0 <nlist@@ELFUTILS_1.0+0x24c>  // b.any
   1c79c:	ldr	x0, [sp, #168]
   1c7a0:	bl	1c0bc <gelf_xlatetom@@ELFUTILS_1.0+0x14c>
   1c7a4:	ldr	x0, [sp, #192]
   1c7a8:	bl	693c <elf_end@@ELFUTILS_1.0>
   1c7ac:	ldr	w0, [sp, #204]
   1c7b0:	bl	3200 <close@plt>
   1c7b4:	mov	w0, #0x0                   	// #0
   1c7b8:	b	1c868 <nlist@@ELFUTILS_1.0+0x404>
   1c7bc:	nop
   1c7c0:	b	1c7c8 <nlist@@ELFUTILS_1.0+0x364>
   1c7c4:	nop
   1c7c8:	ldr	x0, [sp, #168]
   1c7cc:	bl	1c0bc <gelf_xlatetom@@ELFUTILS_1.0+0x14c>
   1c7d0:	b	1c7f0 <nlist@@ELFUTILS_1.0+0x38c>
   1c7d4:	nop
   1c7d8:	b	1c7f0 <nlist@@ELFUTILS_1.0+0x38c>
   1c7dc:	nop
   1c7e0:	b	1c7f0 <nlist@@ELFUTILS_1.0+0x38c>
   1c7e4:	nop
   1c7e8:	b	1c7f0 <nlist@@ELFUTILS_1.0+0x38c>
   1c7ec:	nop
   1c7f0:	ldr	x0, [sp, #192]
   1c7f4:	bl	693c <elf_end@@ELFUTILS_1.0>
   1c7f8:	b	1c800 <nlist@@ELFUTILS_1.0+0x39c>
   1c7fc:	nop
   1c800:	ldr	w0, [sp, #204]
   1c804:	bl	3200 <close@plt>
   1c808:	b	1c840 <nlist@@ELFUTILS_1.0+0x3dc>
   1c80c:	ldr	x0, [sp, #32]
   1c810:	str	xzr, [x0, #8]
   1c814:	ldr	x0, [sp, #32]
   1c818:	strh	wzr, [x0, #16]
   1c81c:	ldr	x0, [sp, #32]
   1c820:	strh	wzr, [x0, #18]
   1c824:	ldr	x0, [sp, #32]
   1c828:	strb	wzr, [x0, #20]
   1c82c:	ldr	x0, [sp, #32]
   1c830:	strb	wzr, [x0, #21]
   1c834:	ldr	x0, [sp, #32]
   1c838:	add	x0, x0, #0x18
   1c83c:	str	x0, [sp, #32]
   1c840:	ldr	x0, [sp, #32]
   1c844:	ldr	x0, [x0]
   1c848:	cmp	x0, #0x0
   1c84c:	b.eq	1c864 <nlist@@ELFUTILS_1.0+0x400>  // b.none
   1c850:	ldr	x0, [sp, #32]
   1c854:	ldr	x0, [x0]
   1c858:	ldrb	w0, [x0]
   1c85c:	cmp	w0, #0x0
   1c860:	b.ne	1c80c <nlist@@ELFUTILS_1.0+0x3a8>  // b.any
   1c864:	mov	w0, #0xffffffff            	// #-1
   1c868:	ldr	x19, [sp, #16]
   1c86c:	ldp	x29, x30, [sp], #240
   1c870:	ret

000000000001c874 <gelf_getsymshndx@@ELFUTILS_1.0>:
   1c874:	stp	x29, x30, [sp, #-112]!
   1c878:	mov	x29, sp
   1c87c:	str	x0, [sp, #56]
   1c880:	str	x1, [sp, #48]
   1c884:	str	w2, [sp, #44]
   1c888:	str	x3, [sp, #32]
   1c88c:	str	x4, [sp, #24]
   1c890:	ldr	x0, [sp, #56]
   1c894:	str	x0, [sp, #88]
   1c898:	ldr	x0, [sp, #48]
   1c89c:	str	x0, [sp, #80]
   1c8a0:	str	xzr, [sp, #104]
   1c8a4:	str	wzr, [sp, #100]
   1c8a8:	ldr	x0, [sp, #56]
   1c8ac:	cmp	x0, #0x0
   1c8b0:	b.ne	1c8bc <gelf_getsymshndx@@ELFUTILS_1.0+0x48>  // b.any
   1c8b4:	mov	x0, #0x0                   	// #0
   1c8b8:	b	1cb10 <gelf_getsymshndx@@ELFUTILS_1.0+0x29c>
   1c8bc:	ldr	x0, [sp, #56]
   1c8c0:	ldr	w0, [x0, #8]
   1c8c4:	cmp	w0, #0xb
   1c8c8:	cset	w0, ne  // ne = any
   1c8cc:	and	w0, w0, #0xff
   1c8d0:	and	x0, x0, #0xff
   1c8d4:	cmp	x0, #0x0
   1c8d8:	b.ne	1c918 <gelf_getsymshndx@@ELFUTILS_1.0+0xa4>  // b.any
   1c8dc:	ldr	x0, [sp, #80]
   1c8e0:	cmp	x0, #0x0
   1c8e4:	cset	w0, ne  // ne = any
   1c8e8:	and	w0, w0, #0xff
   1c8ec:	and	x0, x0, #0xff
   1c8f0:	cmp	x0, #0x0
   1c8f4:	b.eq	1c928 <gelf_getsymshndx@@ELFUTILS_1.0+0xb4>  // b.none
   1c8f8:	ldr	x0, [sp, #48]
   1c8fc:	ldr	w0, [x0, #8]
   1c900:	cmp	w0, #0xc
   1c904:	cset	w0, ne  // ne = any
   1c908:	and	w0, w0, #0xff
   1c90c:	and	x0, x0, #0xff
   1c910:	cmp	x0, #0x0
   1c914:	b.eq	1c928 <gelf_getsymshndx@@ELFUTILS_1.0+0xb4>  // b.none
   1c918:	mov	w0, #0x4                   	// #4
   1c91c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1c920:	mov	x0, #0x0                   	// #0
   1c924:	b	1cb10 <gelf_getsymshndx@@ELFUTILS_1.0+0x29c>
   1c928:	ldr	x0, [sp, #80]
   1c92c:	cmp	x0, #0x0
   1c930:	cset	w0, ne  // ne = any
   1c934:	and	w0, w0, #0xff
   1c938:	and	x0, x0, #0xff
   1c93c:	cmp	x0, #0x0
   1c940:	b.eq	1c998 <gelf_getsymshndx@@ELFUTILS_1.0+0x124>  // b.none
   1c944:	ldr	x0, [sp, #80]
   1c948:	ldr	x0, [x0, #16]
   1c94c:	lsr	x1, x0, #2
   1c950:	ldr	w0, [sp, #44]
   1c954:	mov	w0, w0
   1c958:	cmp	x1, x0
   1c95c:	cset	w0, ls  // ls = plast
   1c960:	and	w0, w0, #0xff
   1c964:	and	x0, x0, #0xff
   1c968:	cmp	x0, #0x0
   1c96c:	b.eq	1c97c <gelf_getsymshndx@@ELFUTILS_1.0+0x108>  // b.none
   1c970:	mov	w0, #0x16                  	// #22
   1c974:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1c978:	b	1cb0c <gelf_getsymshndx@@ELFUTILS_1.0+0x298>
   1c97c:	ldr	x0, [sp, #80]
   1c980:	ldr	x1, [x0]
   1c984:	ldrsw	x0, [sp, #44]
   1c988:	lsl	x0, x0, #2
   1c98c:	add	x0, x1, x0
   1c990:	ldr	w0, [x0]
   1c994:	str	w0, [sp, #100]
   1c998:	ldr	x0, [sp, #88]
   1c99c:	ldr	x0, [x0, #40]
   1c9a0:	ldr	x0, [x0, #136]
   1c9a4:	ldr	w0, [x0, #32]
   1c9a8:	cmp	w0, #0x1
   1c9ac:	b.ne	1ca6c <gelf_getsymshndx@@ELFUTILS_1.0+0x1f8>  // b.any
   1c9b0:	ldr	x0, [sp, #56]
   1c9b4:	ldr	x0, [x0, #16]
   1c9b8:	lsr	x1, x0, #4
   1c9bc:	ldr	w0, [sp, #44]
   1c9c0:	mov	w0, w0
   1c9c4:	cmp	x1, x0
   1c9c8:	cset	w0, ls  // ls = plast
   1c9cc:	and	w0, w0, #0xff
   1c9d0:	and	x0, x0, #0xff
   1c9d4:	cmp	x0, #0x0
   1c9d8:	b.eq	1c9e8 <gelf_getsymshndx@@ELFUTILS_1.0+0x174>  // b.none
   1c9dc:	mov	w0, #0x16                  	// #22
   1c9e0:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1c9e4:	b	1cb0c <gelf_getsymshndx@@ELFUTILS_1.0+0x298>
   1c9e8:	ldr	x0, [sp, #56]
   1c9ec:	ldr	x1, [x0]
   1c9f0:	ldrsw	x0, [sp, #44]
   1c9f4:	lsl	x0, x0, #4
   1c9f8:	add	x0, x1, x0
   1c9fc:	str	x0, [sp, #72]
   1ca00:	ldr	x0, [sp, #72]
   1ca04:	ldr	w1, [x0]
   1ca08:	ldr	x0, [sp, #32]
   1ca0c:	str	w1, [x0]
   1ca10:	ldr	x0, [sp, #72]
   1ca14:	ldrb	w1, [x0, #12]
   1ca18:	ldr	x0, [sp, #32]
   1ca1c:	strb	w1, [x0, #4]
   1ca20:	ldr	x0, [sp, #72]
   1ca24:	ldrb	w1, [x0, #13]
   1ca28:	ldr	x0, [sp, #32]
   1ca2c:	strb	w1, [x0, #5]
   1ca30:	ldr	x0, [sp, #72]
   1ca34:	ldrh	w1, [x0, #14]
   1ca38:	ldr	x0, [sp, #32]
   1ca3c:	strh	w1, [x0, #6]
   1ca40:	ldr	x0, [sp, #72]
   1ca44:	ldr	w0, [x0, #4]
   1ca48:	mov	w1, w0
   1ca4c:	ldr	x0, [sp, #32]
   1ca50:	str	x1, [x0, #8]
   1ca54:	ldr	x0, [sp, #72]
   1ca58:	ldr	w0, [x0, #8]
   1ca5c:	mov	w1, w0
   1ca60:	ldr	x0, [sp, #32]
   1ca64:	str	x1, [x0, #16]
   1ca68:	b	1caec <gelf_getsymshndx@@ELFUTILS_1.0+0x278>
   1ca6c:	ldr	x0, [sp, #56]
   1ca70:	ldr	x1, [x0, #16]
   1ca74:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   1ca78:	movk	x0, #0xaaab
   1ca7c:	umulh	x0, x1, x0
   1ca80:	lsr	x1, x0, #4
   1ca84:	ldr	w0, [sp, #44]
   1ca88:	mov	w0, w0
   1ca8c:	cmp	x1, x0
   1ca90:	cset	w0, ls  // ls = plast
   1ca94:	and	w0, w0, #0xff
   1ca98:	and	x0, x0, #0xff
   1ca9c:	cmp	x0, #0x0
   1caa0:	b.eq	1cab0 <gelf_getsymshndx@@ELFUTILS_1.0+0x23c>  // b.none
   1caa4:	mov	w0, #0x16                  	// #22
   1caa8:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1caac:	b	1cb0c <gelf_getsymshndx@@ELFUTILS_1.0+0x298>
   1cab0:	ldr	x0, [sp, #56]
   1cab4:	ldr	x2, [x0]
   1cab8:	ldrsw	x1, [sp, #44]
   1cabc:	mov	x0, x1
   1cac0:	lsl	x0, x0, #1
   1cac4:	add	x0, x0, x1
   1cac8:	lsl	x0, x0, #3
   1cacc:	add	x0, x2, x0
   1cad0:	ldr	x1, [sp, #32]
   1cad4:	mov	x2, x1
   1cad8:	mov	x3, x0
   1cadc:	ldp	x0, x1, [x3]
   1cae0:	stp	x0, x1, [x2]
   1cae4:	ldr	x0, [x3, #16]
   1cae8:	str	x0, [x2, #16]
   1caec:	ldr	x0, [sp, #24]
   1caf0:	cmp	x0, #0x0
   1caf4:	b.eq	1cb04 <gelf_getsymshndx@@ELFUTILS_1.0+0x290>  // b.none
   1caf8:	ldr	x0, [sp, #24]
   1cafc:	ldr	w1, [sp, #100]
   1cb00:	str	w1, [x0]
   1cb04:	ldr	x0, [sp, #32]
   1cb08:	str	x0, [sp, #104]
   1cb0c:	ldr	x0, [sp, #104]
   1cb10:	ldp	x29, x30, [sp], #112
   1cb14:	ret

000000000001cb18 <gelf_update_symshndx@@ELFUTILS_1.0>:
   1cb18:	stp	x29, x30, [sp, #-96]!
   1cb1c:	mov	x29, sp
   1cb20:	str	x0, [sp, #40]
   1cb24:	str	x1, [sp, #32]
   1cb28:	str	w2, [sp, #28]
   1cb2c:	str	x3, [sp, #16]
   1cb30:	str	w4, [sp, #24]
   1cb34:	ldr	x0, [sp, #40]
   1cb38:	str	x0, [sp, #72]
   1cb3c:	ldr	x0, [sp, #32]
   1cb40:	str	x0, [sp, #64]
   1cb44:	str	xzr, [sp, #88]
   1cb48:	str	wzr, [sp, #84]
   1cb4c:	ldr	x0, [sp, #40]
   1cb50:	cmp	x0, #0x0
   1cb54:	b.ne	1cb60 <gelf_update_symshndx@@ELFUTILS_1.0+0x48>  // b.any
   1cb58:	mov	w0, #0x0                   	// #0
   1cb5c:	b	1ce04 <gelf_update_symshndx@@ELFUTILS_1.0+0x2ec>
   1cb60:	ldr	x0, [sp, #72]
   1cb64:	ldr	w0, [x0, #8]
   1cb68:	cmp	w0, #0xb
   1cb6c:	cset	w0, ne  // ne = any
   1cb70:	and	w0, w0, #0xff
   1cb74:	and	x0, x0, #0xff
   1cb78:	cmp	x0, #0x0
   1cb7c:	b.eq	1cb90 <gelf_update_symshndx@@ELFUTILS_1.0+0x78>  // b.none
   1cb80:	mov	w0, #0x1f                  	// #31
   1cb84:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1cb88:	mov	w0, #0x0                   	// #0
   1cb8c:	b	1ce04 <gelf_update_symshndx@@ELFUTILS_1.0+0x2ec>
   1cb90:	ldr	x0, [sp, #72]
   1cb94:	ldr	x0, [x0, #40]
   1cb98:	str	x0, [sp, #56]
   1cb9c:	ldr	x0, [sp, #64]
   1cba0:	cmp	x0, #0x0
   1cba4:	b.eq	1cc00 <gelf_update_symshndx@@ELFUTILS_1.0+0xe8>  // b.none
   1cba8:	ldr	w0, [sp, #28]
   1cbac:	add	w0, w0, #0x1
   1cbb0:	sxtw	x0, w0
   1cbb4:	lsl	x1, x0, #2
   1cbb8:	ldr	x0, [sp, #64]
   1cbbc:	ldr	x0, [x0, #16]
   1cbc0:	cmp	x1, x0
   1cbc4:	cset	w0, hi  // hi = pmore
   1cbc8:	and	w0, w0, #0xff
   1cbcc:	and	x0, x0, #0xff
   1cbd0:	cmp	x0, #0x0
   1cbd4:	b.eq	1cbe4 <gelf_update_symshndx@@ELFUTILS_1.0+0xcc>  // b.none
   1cbd8:	mov	w0, #0x16                  	// #22
   1cbdc:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1cbe0:	b	1ce00 <gelf_update_symshndx@@ELFUTILS_1.0+0x2e8>
   1cbe4:	ldr	x0, [sp, #64]
   1cbe8:	ldr	x1, [x0]
   1cbec:	ldrsw	x0, [sp, #28]
   1cbf0:	lsl	x0, x0, #2
   1cbf4:	add	x0, x1, x0
   1cbf8:	str	x0, [sp, #88]
   1cbfc:	b	1cc28 <gelf_update_symshndx@@ELFUTILS_1.0+0x110>
   1cc00:	ldr	w0, [sp, #24]
   1cc04:	cmp	w0, #0x0
   1cc08:	cset	w0, ne  // ne = any
   1cc0c:	and	w0, w0, #0xff
   1cc10:	and	x0, x0, #0xff
   1cc14:	cmp	x0, #0x0
   1cc18:	b.eq	1cc28 <gelf_update_symshndx@@ELFUTILS_1.0+0x110>  // b.none
   1cc1c:	mov	w0, #0x16                  	// #22
   1cc20:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1cc24:	b	1ce00 <gelf_update_symshndx@@ELFUTILS_1.0+0x2e8>
   1cc28:	ldr	x0, [sp, #56]
   1cc2c:	ldr	x0, [x0, #136]
   1cc30:	ldr	w0, [x0, #32]
   1cc34:	cmp	w0, #0x1
   1cc38:	b.ne	1cd4c <gelf_update_symshndx@@ELFUTILS_1.0+0x234>  // b.any
   1cc3c:	ldr	x0, [sp, #16]
   1cc40:	ldr	x1, [x0, #8]
   1cc44:	mov	x0, #0xffffffff            	// #4294967295
   1cc48:	cmp	x1, x0
   1cc4c:	cset	w0, hi  // hi = pmore
   1cc50:	and	w0, w0, #0xff
   1cc54:	and	x0, x0, #0xff
   1cc58:	cmp	x0, #0x0
   1cc5c:	b.ne	1cc84 <gelf_update_symshndx@@ELFUTILS_1.0+0x16c>  // b.any
   1cc60:	ldr	x0, [sp, #16]
   1cc64:	ldr	x1, [x0, #16]
   1cc68:	mov	x0, #0xffffffff            	// #4294967295
   1cc6c:	cmp	x1, x0
   1cc70:	cset	w0, hi  // hi = pmore
   1cc74:	and	w0, w0, #0xff
   1cc78:	and	x0, x0, #0xff
   1cc7c:	cmp	x0, #0x0
   1cc80:	b.eq	1cc90 <gelf_update_symshndx@@ELFUTILS_1.0+0x178>  // b.none
   1cc84:	mov	w0, #0x21                  	// #33
   1cc88:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1cc8c:	b	1ce00 <gelf_update_symshndx@@ELFUTILS_1.0+0x2e8>
   1cc90:	ldr	x0, [sp, #72]
   1cc94:	ldr	x0, [x0, #16]
   1cc98:	lsr	x1, x0, #4
   1cc9c:	ldr	w0, [sp, #28]
   1cca0:	mov	w0, w0
   1cca4:	cmp	x1, x0
   1cca8:	cset	w0, ls  // ls = plast
   1ccac:	and	w0, w0, #0xff
   1ccb0:	and	x0, x0, #0xff
   1ccb4:	cmp	x0, #0x0
   1ccb8:	b.eq	1ccc8 <gelf_update_symshndx@@ELFUTILS_1.0+0x1b0>  // b.none
   1ccbc:	mov	w0, #0x16                  	// #22
   1ccc0:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1ccc4:	b	1ce00 <gelf_update_symshndx@@ELFUTILS_1.0+0x2e8>
   1ccc8:	ldr	x0, [sp, #72]
   1cccc:	ldr	x1, [x0]
   1ccd0:	ldrsw	x0, [sp, #28]
   1ccd4:	lsl	x0, x0, #4
   1ccd8:	add	x0, x1, x0
   1ccdc:	str	x0, [sp, #48]
   1cce0:	ldr	x0, [sp, #16]
   1cce4:	ldr	w1, [x0]
   1cce8:	ldr	x0, [sp, #48]
   1ccec:	str	w1, [x0]
   1ccf0:	ldr	x0, [sp, #16]
   1ccf4:	ldr	x0, [x0, #8]
   1ccf8:	mov	w1, w0
   1ccfc:	ldr	x0, [sp, #48]
   1cd00:	str	w1, [x0, #4]
   1cd04:	ldr	x0, [sp, #16]
   1cd08:	ldr	x0, [x0, #16]
   1cd0c:	mov	w1, w0
   1cd10:	ldr	x0, [sp, #48]
   1cd14:	str	w1, [x0, #8]
   1cd18:	ldr	x0, [sp, #16]
   1cd1c:	ldrb	w1, [x0, #4]
   1cd20:	ldr	x0, [sp, #48]
   1cd24:	strb	w1, [x0, #12]
   1cd28:	ldr	x0, [sp, #16]
   1cd2c:	ldrb	w1, [x0, #5]
   1cd30:	ldr	x0, [sp, #48]
   1cd34:	strb	w1, [x0, #13]
   1cd38:	ldr	x0, [sp, #16]
   1cd3c:	ldrh	w1, [x0, #6]
   1cd40:	ldr	x0, [sp, #48]
   1cd44:	strh	w1, [x0, #14]
   1cd48:	b	1cdcc <gelf_update_symshndx@@ELFUTILS_1.0+0x2b4>
   1cd4c:	ldr	x0, [sp, #72]
   1cd50:	ldr	x1, [x0, #16]
   1cd54:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   1cd58:	movk	x0, #0xaaab
   1cd5c:	umulh	x0, x1, x0
   1cd60:	lsr	x1, x0, #4
   1cd64:	ldr	w0, [sp, #28]
   1cd68:	mov	w0, w0
   1cd6c:	cmp	x1, x0
   1cd70:	cset	w0, ls  // ls = plast
   1cd74:	and	w0, w0, #0xff
   1cd78:	and	x0, x0, #0xff
   1cd7c:	cmp	x0, #0x0
   1cd80:	b.eq	1cd90 <gelf_update_symshndx@@ELFUTILS_1.0+0x278>  // b.none
   1cd84:	mov	w0, #0x16                  	// #22
   1cd88:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1cd8c:	b	1ce00 <gelf_update_symshndx@@ELFUTILS_1.0+0x2e8>
   1cd90:	ldr	x0, [sp, #72]
   1cd94:	ldr	x2, [x0]
   1cd98:	ldrsw	x1, [sp, #28]
   1cd9c:	mov	x0, x1
   1cda0:	lsl	x0, x0, #1
   1cda4:	add	x0, x0, x1
   1cda8:	lsl	x0, x0, #3
   1cdac:	add	x1, x2, x0
   1cdb0:	ldr	x0, [sp, #16]
   1cdb4:	mov	x2, x1
   1cdb8:	mov	x3, x0
   1cdbc:	ldp	x0, x1, [x3]
   1cdc0:	stp	x0, x1, [x2]
   1cdc4:	ldr	x0, [x3, #16]
   1cdc8:	str	x0, [x2, #16]
   1cdcc:	ldr	x0, [sp, #88]
   1cdd0:	cmp	x0, #0x0
   1cdd4:	b.eq	1cde4 <gelf_update_symshndx@@ELFUTILS_1.0+0x2cc>  // b.none
   1cdd8:	ldr	x0, [sp, #88]
   1cddc:	ldr	w1, [sp, #24]
   1cde0:	str	w1, [x0]
   1cde4:	mov	w0, #0x1                   	// #1
   1cde8:	str	w0, [sp, #84]
   1cdec:	ldr	x0, [sp, #56]
   1cdf0:	ldr	w0, [x0, #156]
   1cdf4:	orr	w1, w0, #0x1
   1cdf8:	ldr	x0, [sp, #56]
   1cdfc:	str	w1, [x0, #156]
   1ce00:	ldr	w0, [sp, #84]
   1ce04:	ldp	x29, x30, [sp], #96
   1ce08:	ret

000000000001ce0c <gelf_update_versym@@ELFUTILS_1.0>:
   1ce0c:	stp	x29, x30, [sp, #-64]!
   1ce10:	mov	x29, sp
   1ce14:	str	x0, [sp, #40]
   1ce18:	str	w1, [sp, #36]
   1ce1c:	str	x2, [sp, #24]
   1ce20:	ldr	x0, [sp, #40]
   1ce24:	str	x0, [sp, #56]
   1ce28:	ldr	x0, [sp, #40]
   1ce2c:	cmp	x0, #0x0
   1ce30:	b.ne	1ce3c <gelf_update_versym@@ELFUTILS_1.0+0x30>  // b.any
   1ce34:	mov	w0, #0x0                   	// #0
   1ce38:	b	1cee8 <gelf_update_versym@@ELFUTILS_1.0+0xdc>
   1ce3c:	ldr	x0, [sp, #56]
   1ce40:	ldr	x0, [x0, #16]
   1ce44:	lsr	x1, x0, #1
   1ce48:	ldr	w0, [sp, #36]
   1ce4c:	mov	w0, w0
   1ce50:	cmp	x1, x0
   1ce54:	cset	w0, ls  // ls = plast
   1ce58:	and	w0, w0, #0xff
   1ce5c:	and	x0, x0, #0xff
   1ce60:	cmp	x0, #0x0
   1ce64:	b.eq	1ce78 <gelf_update_versym@@ELFUTILS_1.0+0x6c>  // b.none
   1ce68:	mov	w0, #0x16                  	// #22
   1ce6c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1ce70:	mov	w0, #0x0                   	// #0
   1ce74:	b	1cee8 <gelf_update_versym@@ELFUTILS_1.0+0xdc>
   1ce78:	ldr	x0, [sp, #56]
   1ce7c:	ldr	w0, [x0, #8]
   1ce80:	cmp	w0, #0x4
   1ce84:	cset	w0, ne  // ne = any
   1ce88:	and	w0, w0, #0xff
   1ce8c:	and	x0, x0, #0xff
   1ce90:	cmp	x0, #0x0
   1ce94:	b.eq	1cea8 <gelf_update_versym@@ELFUTILS_1.0+0x9c>  // b.none
   1ce98:	mov	w0, #0x1f                  	// #31
   1ce9c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1cea0:	mov	w0, #0x0                   	// #0
   1cea4:	b	1cee8 <gelf_update_versym@@ELFUTILS_1.0+0xdc>
   1cea8:	ldr	x0, [sp, #56]
   1ceac:	ldr	x1, [x0]
   1ceb0:	ldrsw	x0, [sp, #36]
   1ceb4:	lsl	x0, x0, #1
   1ceb8:	add	x0, x1, x0
   1cebc:	ldr	x1, [sp, #24]
   1cec0:	ldrh	w1, [x1]
   1cec4:	strh	w1, [x0]
   1cec8:	ldr	x0, [sp, #56]
   1cecc:	ldr	x0, [x0, #40]
   1ced0:	ldr	w1, [x0, #156]
   1ced4:	ldr	x0, [sp, #56]
   1ced8:	ldr	x0, [x0, #40]
   1cedc:	orr	w1, w1, #0x1
   1cee0:	str	w1, [x0, #156]
   1cee4:	mov	w0, #0x1                   	// #1
   1cee8:	ldp	x29, x30, [sp], #64
   1ceec:	ret

000000000001cef0 <gelf_update_verneed@@ELFUTILS_1.0>:
   1cef0:	stp	x29, x30, [sp, #-64]!
   1cef4:	mov	x29, sp
   1cef8:	str	x0, [sp, #40]
   1cefc:	str	w1, [sp, #36]
   1cf00:	str	x2, [sp, #24]
   1cf04:	ldr	x0, [sp, #40]
   1cf08:	str	x0, [sp, #56]
   1cf0c:	ldr	x0, [sp, #40]
   1cf10:	cmp	x0, #0x0
   1cf14:	b.ne	1cf20 <gelf_update_verneed@@ELFUTILS_1.0+0x30>  // b.any
   1cf18:	mov	w0, #0x0                   	// #0
   1cf1c:	b	1cfdc <gelf_update_verneed@@ELFUTILS_1.0+0xec>
   1cf20:	ldr	w0, [sp, #36]
   1cf24:	lsr	w0, w0, #31
   1cf28:	and	w0, w0, #0xff
   1cf2c:	and	x0, x0, #0xff
   1cf30:	cmp	x0, #0x0
   1cf34:	b.ne	1cf60 <gelf_update_verneed@@ELFUTILS_1.0+0x70>  // b.any
   1cf38:	ldrsw	x0, [sp, #36]
   1cf3c:	add	x1, x0, #0x10
   1cf40:	ldr	x0, [sp, #56]
   1cf44:	ldr	x0, [x0, #16]
   1cf48:	cmp	x1, x0
   1cf4c:	cset	w0, hi  // hi = pmore
   1cf50:	and	w0, w0, #0xff
   1cf54:	and	x0, x0, #0xff
   1cf58:	cmp	x0, #0x0
   1cf5c:	b.eq	1cf70 <gelf_update_verneed@@ELFUTILS_1.0+0x80>  // b.none
   1cf60:	mov	w0, #0x16                  	// #22
   1cf64:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1cf68:	mov	w0, #0x0                   	// #0
   1cf6c:	b	1cfdc <gelf_update_verneed@@ELFUTILS_1.0+0xec>
   1cf70:	ldr	x0, [sp, #56]
   1cf74:	ldr	w0, [x0, #8]
   1cf78:	cmp	w0, #0x11
   1cf7c:	cset	w0, ne  // ne = any
   1cf80:	and	w0, w0, #0xff
   1cf84:	and	x0, x0, #0xff
   1cf88:	cmp	x0, #0x0
   1cf8c:	b.eq	1cfa0 <gelf_update_verneed@@ELFUTILS_1.0+0xb0>  // b.none
   1cf90:	mov	w0, #0x1f                  	// #31
   1cf94:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1cf98:	mov	w0, #0x0                   	// #0
   1cf9c:	b	1cfdc <gelf_update_verneed@@ELFUTILS_1.0+0xec>
   1cfa0:	ldr	x0, [sp, #56]
   1cfa4:	ldr	x1, [x0]
   1cfa8:	ldrsw	x0, [sp, #36]
   1cfac:	add	x2, x1, x0
   1cfb0:	ldr	x0, [sp, #24]
   1cfb4:	ldp	x0, x1, [x0]
   1cfb8:	stp	x0, x1, [x2]
   1cfbc:	ldr	x0, [sp, #56]
   1cfc0:	ldr	x0, [x0, #40]
   1cfc4:	ldr	w1, [x0, #156]
   1cfc8:	ldr	x0, [sp, #56]
   1cfcc:	ldr	x0, [x0, #40]
   1cfd0:	orr	w1, w1, #0x1
   1cfd4:	str	w1, [x0, #156]
   1cfd8:	mov	w0, #0x1                   	// #1
   1cfdc:	ldp	x29, x30, [sp], #64
   1cfe0:	ret

000000000001cfe4 <gelf_update_vernaux@@ELFUTILS_1.0>:
   1cfe4:	stp	x29, x30, [sp, #-64]!
   1cfe8:	mov	x29, sp
   1cfec:	str	x0, [sp, #40]
   1cff0:	str	w1, [sp, #36]
   1cff4:	str	x2, [sp, #24]
   1cff8:	ldr	x0, [sp, #40]
   1cffc:	str	x0, [sp, #56]
   1d000:	ldr	x0, [sp, #40]
   1d004:	cmp	x0, #0x0
   1d008:	b.ne	1d014 <gelf_update_vernaux@@ELFUTILS_1.0+0x30>  // b.any
   1d00c:	mov	w0, #0x0                   	// #0
   1d010:	b	1d0d0 <gelf_update_vernaux@@ELFUTILS_1.0+0xec>
   1d014:	ldr	w0, [sp, #36]
   1d018:	lsr	w0, w0, #31
   1d01c:	and	w0, w0, #0xff
   1d020:	and	x0, x0, #0xff
   1d024:	cmp	x0, #0x0
   1d028:	b.ne	1d054 <gelf_update_vernaux@@ELFUTILS_1.0+0x70>  // b.any
   1d02c:	ldrsw	x0, [sp, #36]
   1d030:	add	x1, x0, #0x10
   1d034:	ldr	x0, [sp, #56]
   1d038:	ldr	x0, [x0, #16]
   1d03c:	cmp	x1, x0
   1d040:	cset	w0, hi  // hi = pmore
   1d044:	and	w0, w0, #0xff
   1d048:	and	x0, x0, #0xff
   1d04c:	cmp	x0, #0x0
   1d050:	b.eq	1d064 <gelf_update_vernaux@@ELFUTILS_1.0+0x80>  // b.none
   1d054:	mov	w0, #0x16                  	// #22
   1d058:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1d05c:	mov	w0, #0x0                   	// #0
   1d060:	b	1d0d0 <gelf_update_vernaux@@ELFUTILS_1.0+0xec>
   1d064:	ldr	x0, [sp, #56]
   1d068:	ldr	w0, [x0, #8]
   1d06c:	cmp	w0, #0x11
   1d070:	cset	w0, ne  // ne = any
   1d074:	and	w0, w0, #0xff
   1d078:	and	x0, x0, #0xff
   1d07c:	cmp	x0, #0x0
   1d080:	b.eq	1d094 <gelf_update_vernaux@@ELFUTILS_1.0+0xb0>  // b.none
   1d084:	mov	w0, #0x1f                  	// #31
   1d088:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1d08c:	mov	w0, #0x0                   	// #0
   1d090:	b	1d0d0 <gelf_update_vernaux@@ELFUTILS_1.0+0xec>
   1d094:	ldr	x0, [sp, #56]
   1d098:	ldr	x1, [x0]
   1d09c:	ldrsw	x0, [sp, #36]
   1d0a0:	add	x2, x1, x0
   1d0a4:	ldr	x0, [sp, #24]
   1d0a8:	ldp	x0, x1, [x0]
   1d0ac:	stp	x0, x1, [x2]
   1d0b0:	ldr	x0, [sp, #56]
   1d0b4:	ldr	x0, [x0, #40]
   1d0b8:	ldr	w1, [x0, #156]
   1d0bc:	ldr	x0, [sp, #56]
   1d0c0:	ldr	x0, [x0, #40]
   1d0c4:	orr	w1, w1, #0x1
   1d0c8:	str	w1, [x0, #156]
   1d0cc:	mov	w0, #0x1                   	// #1
   1d0d0:	ldp	x29, x30, [sp], #64
   1d0d4:	ret

000000000001d0d8 <gelf_update_verdef@@ELFUTILS_1.0>:
   1d0d8:	stp	x29, x30, [sp, #-64]!
   1d0dc:	mov	x29, sp
   1d0e0:	str	x0, [sp, #40]
   1d0e4:	str	w1, [sp, #36]
   1d0e8:	str	x2, [sp, #24]
   1d0ec:	ldr	x0, [sp, #40]
   1d0f0:	str	x0, [sp, #56]
   1d0f4:	ldr	x0, [sp, #40]
   1d0f8:	cmp	x0, #0x0
   1d0fc:	b.ne	1d108 <gelf_update_verdef@@ELFUTILS_1.0+0x30>  // b.any
   1d100:	mov	w0, #0x0                   	// #0
   1d104:	b	1d1c4 <gelf_update_verdef@@ELFUTILS_1.0+0xec>
   1d108:	ldr	w0, [sp, #36]
   1d10c:	lsr	w0, w0, #31
   1d110:	and	w0, w0, #0xff
   1d114:	and	x0, x0, #0xff
   1d118:	cmp	x0, #0x0
   1d11c:	b.ne	1d148 <gelf_update_verdef@@ELFUTILS_1.0+0x70>  // b.any
   1d120:	ldrsw	x0, [sp, #36]
   1d124:	add	x1, x0, #0x14
   1d128:	ldr	x0, [sp, #56]
   1d12c:	ldr	x0, [x0, #16]
   1d130:	cmp	x1, x0
   1d134:	cset	w0, hi  // hi = pmore
   1d138:	and	w0, w0, #0xff
   1d13c:	and	x0, x0, #0xff
   1d140:	cmp	x0, #0x0
   1d144:	b.eq	1d158 <gelf_update_verdef@@ELFUTILS_1.0+0x80>  // b.none
   1d148:	mov	w0, #0x16                  	// #22
   1d14c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1d150:	mov	w0, #0x0                   	// #0
   1d154:	b	1d1c4 <gelf_update_verdef@@ELFUTILS_1.0+0xec>
   1d158:	ldr	x0, [sp, #56]
   1d15c:	ldr	w0, [x0, #8]
   1d160:	cmp	w0, #0xf
   1d164:	cset	w0, ne  // ne = any
   1d168:	and	w0, w0, #0xff
   1d16c:	and	x0, x0, #0xff
   1d170:	cmp	x0, #0x0
   1d174:	b.eq	1d188 <gelf_update_verdef@@ELFUTILS_1.0+0xb0>  // b.none
   1d178:	mov	w0, #0x1f                  	// #31
   1d17c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1d180:	mov	w0, #0x0                   	// #0
   1d184:	b	1d1c4 <gelf_update_verdef@@ELFUTILS_1.0+0xec>
   1d188:	ldr	x0, [sp, #56]
   1d18c:	ldr	x1, [x0]
   1d190:	ldrsw	x0, [sp, #36]
   1d194:	add	x0, x1, x0
   1d198:	mov	x2, #0x14                  	// #20
   1d19c:	ldr	x1, [sp, #24]
   1d1a0:	bl	30a0 <memcpy@plt>
   1d1a4:	ldr	x0, [sp, #56]
   1d1a8:	ldr	x0, [x0, #40]
   1d1ac:	ldr	w1, [x0, #156]
   1d1b0:	ldr	x0, [sp, #56]
   1d1b4:	ldr	x0, [x0, #40]
   1d1b8:	orr	w1, w1, #0x1
   1d1bc:	str	w1, [x0, #156]
   1d1c0:	mov	w0, #0x1                   	// #1
   1d1c4:	ldp	x29, x30, [sp], #64
   1d1c8:	ret

000000000001d1cc <gelf_update_verdaux@@ELFUTILS_1.0>:
   1d1cc:	stp	x29, x30, [sp, #-64]!
   1d1d0:	mov	x29, sp
   1d1d4:	str	x0, [sp, #40]
   1d1d8:	str	w1, [sp, #36]
   1d1dc:	str	x2, [sp, #24]
   1d1e0:	ldr	x0, [sp, #40]
   1d1e4:	str	x0, [sp, #56]
   1d1e8:	ldr	x0, [sp, #40]
   1d1ec:	cmp	x0, #0x0
   1d1f0:	b.ne	1d1fc <gelf_update_verdaux@@ELFUTILS_1.0+0x30>  // b.any
   1d1f4:	mov	w0, #0x0                   	// #0
   1d1f8:	b	1d2b8 <gelf_update_verdaux@@ELFUTILS_1.0+0xec>
   1d1fc:	ldr	w0, [sp, #36]
   1d200:	lsr	w0, w0, #31
   1d204:	and	w0, w0, #0xff
   1d208:	and	x0, x0, #0xff
   1d20c:	cmp	x0, #0x0
   1d210:	b.ne	1d23c <gelf_update_verdaux@@ELFUTILS_1.0+0x70>  // b.any
   1d214:	ldrsw	x0, [sp, #36]
   1d218:	add	x1, x0, #0x8
   1d21c:	ldr	x0, [sp, #56]
   1d220:	ldr	x0, [x0, #16]
   1d224:	cmp	x1, x0
   1d228:	cset	w0, hi  // hi = pmore
   1d22c:	and	w0, w0, #0xff
   1d230:	and	x0, x0, #0xff
   1d234:	cmp	x0, #0x0
   1d238:	b.eq	1d24c <gelf_update_verdaux@@ELFUTILS_1.0+0x80>  // b.none
   1d23c:	mov	w0, #0x16                  	// #22
   1d240:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1d244:	mov	w0, #0x0                   	// #0
   1d248:	b	1d2b8 <gelf_update_verdaux@@ELFUTILS_1.0+0xec>
   1d24c:	ldr	x0, [sp, #56]
   1d250:	ldr	w0, [x0, #8]
   1d254:	cmp	w0, #0xf
   1d258:	cset	w0, ne  // ne = any
   1d25c:	and	w0, w0, #0xff
   1d260:	and	x0, x0, #0xff
   1d264:	cmp	x0, #0x0
   1d268:	b.eq	1d27c <gelf_update_verdaux@@ELFUTILS_1.0+0xb0>  // b.none
   1d26c:	mov	w0, #0x1f                  	// #31
   1d270:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1d274:	mov	w0, #0x0                   	// #0
   1d278:	b	1d2b8 <gelf_update_verdaux@@ELFUTILS_1.0+0xec>
   1d27c:	ldr	x0, [sp, #56]
   1d280:	ldr	x1, [x0]
   1d284:	ldrsw	x0, [sp, #36]
   1d288:	add	x0, x1, x0
   1d28c:	ldr	x1, [sp, #24]
   1d290:	ldr	x1, [x1]
   1d294:	str	x1, [x0]
   1d298:	ldr	x0, [sp, #56]
   1d29c:	ldr	x0, [x0, #40]
   1d2a0:	ldr	w1, [x0, #156]
   1d2a4:	ldr	x0, [sp, #56]
   1d2a8:	ldr	x0, [x0, #40]
   1d2ac:	orr	w1, w1, #0x1
   1d2b0:	str	w1, [x0, #156]
   1d2b4:	mov	w0, #0x1                   	// #1
   1d2b8:	ldp	x29, x30, [sp], #64
   1d2bc:	ret
   1d2c0:	stp	x29, x30, [sp, #-48]!
   1d2c4:	mov	x29, sp
   1d2c8:	str	x0, [sp, #24]
   1d2cc:	str	x1, [sp, #16]
   1d2d0:	ldr	x0, [sp, #24]
   1d2d4:	ldr	x0, [x0, #72]
   1d2d8:	cmp	x0, #0x0
   1d2dc:	cset	w0, eq  // eq = none
   1d2e0:	and	w0, w0, #0xff
   1d2e4:	and	x0, x0, #0xff
   1d2e8:	cmp	x0, #0x0
   1d2ec:	b.eq	1d300 <gelf_update_verdaux@@ELFUTILS_1.0+0x134>  // b.none
   1d2f0:	mov	w0, #0x1a                  	// #26
   1d2f4:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1d2f8:	mov	w0, #0xffffffff            	// #-1
   1d2fc:	b	1d440 <gelf_update_verdaux@@ELFUTILS_1.0+0x274>
   1d300:	ldr	x0, [sp, #24]
   1d304:	ldr	w0, [x0, #32]
   1d308:	cmp	w0, #0x1
   1d30c:	b.ne	1d324 <gelf_update_verdaux@@ELFUTILS_1.0+0x158>  // b.any
   1d310:	ldr	x0, [sp, #24]
   1d314:	ldr	x0, [x0, #72]
   1d318:	ldrh	w0, [x0, #44]
   1d31c:	and	x0, x0, #0xffff
   1d320:	b	1d334 <gelf_update_verdaux@@ELFUTILS_1.0+0x168>
   1d324:	ldr	x0, [sp, #24]
   1d328:	ldr	x0, [x0, #72]
   1d32c:	ldrh	w0, [x0, #56]
   1d330:	and	x0, x0, #0xffff
   1d334:	ldr	x1, [sp, #16]
   1d338:	str	x0, [x1]
   1d33c:	ldr	x0, [sp, #16]
   1d340:	ldr	x1, [x0]
   1d344:	mov	x0, #0xffff                	// #65535
   1d348:	cmp	x1, x0
   1d34c:	b.ne	1d43c <gelf_update_verdaux@@ELFUTILS_1.0+0x270>  // b.any
   1d350:	ldr	x0, [sp, #24]
   1d354:	ldr	w0, [x0, #32]
   1d358:	cmp	w0, #0x1
   1d35c:	b.ne	1d36c <gelf_update_verdaux@@ELFUTILS_1.0+0x1a0>  // b.any
   1d360:	ldr	x0, [sp, #24]
   1d364:	add	x0, x0, #0xc8
   1d368:	b	1d374 <gelf_update_verdaux@@ELFUTILS_1.0+0x1a8>
   1d36c:	ldr	x0, [sp, #24]
   1d370:	add	x0, x0, #0xc8
   1d374:	str	x0, [sp, #40]
   1d378:	ldr	x0, [sp, #24]
   1d37c:	ldr	w0, [x0, #32]
   1d380:	cmp	w0, #0x1
   1d384:	b.ne	1d3e4 <gelf_update_verdaux@@ELFUTILS_1.0+0x218>  // b.any
   1d388:	ldr	x0, [sp, #40]
   1d38c:	ldr	w0, [x0]
   1d390:	cmp	w0, #0x0
   1d394:	cset	w0, ne  // ne = any
   1d398:	and	w0, w0, #0xff
   1d39c:	and	x0, x0, #0xff
   1d3a0:	cmp	x0, #0x0
   1d3a4:	b.eq	1d43c <gelf_update_verdaux@@ELFUTILS_1.0+0x270>  // b.none
   1d3a8:	ldr	x0, [sp, #24]
   1d3ac:	ldr	x0, [x0, #360]
   1d3b0:	cmp	x0, #0x0
   1d3b4:	cset	w0, ne  // ne = any
   1d3b8:	and	w0, w0, #0xff
   1d3bc:	and	x0, x0, #0xff
   1d3c0:	cmp	x0, #0x0
   1d3c4:	b.eq	1d43c <gelf_update_verdaux@@ELFUTILS_1.0+0x270>  // b.none
   1d3c8:	ldr	x0, [sp, #40]
   1d3cc:	ldr	x0, [x0, #160]
   1d3d0:	ldr	w0, [x0, #28]
   1d3d4:	mov	w1, w0
   1d3d8:	ldr	x0, [sp, #16]
   1d3dc:	str	x1, [x0]
   1d3e0:	b	1d43c <gelf_update_verdaux@@ELFUTILS_1.0+0x270>
   1d3e4:	ldr	x0, [sp, #40]
   1d3e8:	ldr	w0, [x0]
   1d3ec:	cmp	w0, #0x0
   1d3f0:	cset	w0, ne  // ne = any
   1d3f4:	and	w0, w0, #0xff
   1d3f8:	and	x0, x0, #0xff
   1d3fc:	cmp	x0, #0x0
   1d400:	b.eq	1d43c <gelf_update_verdaux@@ELFUTILS_1.0+0x270>  // b.none
   1d404:	ldr	x0, [sp, #24]
   1d408:	ldr	x0, [x0, #360]
   1d40c:	cmp	x0, #0x0
   1d410:	cset	w0, ne  // ne = any
   1d414:	and	w0, w0, #0xff
   1d418:	and	x0, x0, #0xff
   1d41c:	cmp	x0, #0x0
   1d420:	b.eq	1d43c <gelf_update_verdaux@@ELFUTILS_1.0+0x270>  // b.none
   1d424:	ldr	x0, [sp, #40]
   1d428:	ldr	x0, [x0, #160]
   1d42c:	ldr	w0, [x0, #44]
   1d430:	mov	w1, w0
   1d434:	ldr	x0, [sp, #16]
   1d438:	str	x1, [x0]
   1d43c:	mov	w0, #0x0                   	// #0
   1d440:	ldp	x29, x30, [sp], #48
   1d444:	ret
   1d448:	stp	x29, x30, [sp, #-64]!
   1d44c:	mov	x29, sp
   1d450:	str	x0, [sp, #24]
   1d454:	str	x1, [sp, #16]
   1d458:	ldr	x1, [sp, #16]
   1d45c:	ldr	x0, [sp, #24]
   1d460:	bl	1d2c0 <gelf_update_verdaux@@ELFUTILS_1.0+0xf4>
   1d464:	str	w0, [sp, #60]
   1d468:	ldr	x0, [sp, #24]
   1d46c:	ldr	x0, [x0, #88]
   1d470:	cmp	x0, #0x0
   1d474:	b.ne	1d5d0 <gelf_update_verdaux@@ELFUTILS_1.0+0x404>  // b.any
   1d478:	ldr	x0, [sp, #24]
   1d47c:	ldr	w0, [x0, #32]
   1d480:	cmp	w0, #0x1
   1d484:	b.ne	1d49c <gelf_update_verdaux@@ELFUTILS_1.0+0x2d0>  // b.any
   1d488:	ldr	x0, [sp, #24]
   1d48c:	ldr	x0, [x0, #72]
   1d490:	ldr	w0, [x0, #28]
   1d494:	mov	w0, w0
   1d498:	b	1d4a8 <gelf_update_verdaux@@ELFUTILS_1.0+0x2dc>
   1d49c:	ldr	x0, [sp, #24]
   1d4a0:	ldr	x0, [x0, #72]
   1d4a4:	ldr	x0, [x0, #32]
   1d4a8:	str	x0, [sp, #48]
   1d4ac:	ldr	x0, [sp, #48]
   1d4b0:	cmp	x0, #0x0
   1d4b4:	cset	w0, eq  // eq = none
   1d4b8:	and	w0, w0, #0xff
   1d4bc:	and	x0, x0, #0xff
   1d4c0:	cmp	x0, #0x0
   1d4c4:	b.eq	1d4d8 <gelf_update_verdaux@@ELFUTILS_1.0+0x30c>  // b.none
   1d4c8:	ldr	x0, [sp, #16]
   1d4cc:	str	xzr, [x0]
   1d4d0:	ldr	w0, [sp, #60]
   1d4d4:	b	1d5d4 <gelf_update_verdaux@@ELFUTILS_1.0+0x408>
   1d4d8:	ldr	x0, [sp, #24]
   1d4dc:	ldr	x0, [x0, #48]
   1d4e0:	ldr	x1, [sp, #48]
   1d4e4:	cmp	x1, x0
   1d4e8:	cset	w0, cs  // cs = hs, nlast
   1d4ec:	and	w0, w0, #0xff
   1d4f0:	and	x0, x0, #0xff
   1d4f4:	cmp	x0, #0x0
   1d4f8:	b.eq	1d50c <gelf_update_verdaux@@ELFUTILS_1.0+0x340>  // b.none
   1d4fc:	mov	w0, #0x21                  	// #33
   1d500:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1d504:	mov	w0, #0xffffffff            	// #-1
   1d508:	b	1d5d4 <gelf_update_verdaux@@ELFUTILS_1.0+0x408>
   1d50c:	ldr	x0, [sp, #24]
   1d510:	ldr	w0, [x0, #32]
   1d514:	cmp	w0, #0x1
   1d518:	b.ne	1d524 <gelf_update_verdaux@@ELFUTILS_1.0+0x358>  // b.any
   1d51c:	mov	x0, #0x20                  	// #32
   1d520:	b	1d528 <gelf_update_verdaux@@ELFUTILS_1.0+0x35c>
   1d524:	mov	x0, #0x38                  	// #56
   1d528:	str	x0, [sp, #40]
   1d52c:	ldr	x0, [sp, #16]
   1d530:	ldr	x1, [x0]
   1d534:	mov	x2, #0x0                   	// #0
   1d538:	ldr	x0, [sp, #40]
   1d53c:	umulh	x0, x1, x0
   1d540:	cmp	x0, #0x0
   1d544:	b.eq	1d54c <gelf_update_verdaux@@ELFUTILS_1.0+0x380>  // b.none
   1d548:	mov	x2, #0x1                   	// #1
   1d54c:	mov	x0, x2
   1d550:	cmp	x0, #0x0
   1d554:	cset	w0, ne  // ne = any
   1d558:	and	w0, w0, #0xff
   1d55c:	and	x0, x0, #0xff
   1d560:	cmp	x0, #0x0
   1d564:	b.eq	1d578 <gelf_update_verdaux@@ELFUTILS_1.0+0x3ac>  // b.none
   1d568:	mov	w0, #0x21                  	// #33
   1d56c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1d570:	mov	w0, #0xffffffff            	// #-1
   1d574:	b	1d5d4 <gelf_update_verdaux@@ELFUTILS_1.0+0x408>
   1d578:	ldr	x0, [sp, #24]
   1d57c:	ldr	x1, [x0, #48]
   1d580:	ldr	x0, [sp, #48]
   1d584:	sub	x1, x1, x0
   1d588:	ldr	x0, [sp, #16]
   1d58c:	ldr	x2, [x0]
   1d590:	ldr	x0, [sp, #40]
   1d594:	mul	x0, x2, x0
   1d598:	cmp	x1, x0
   1d59c:	cset	w0, cc  // cc = lo, ul, last
   1d5a0:	and	w0, w0, #0xff
   1d5a4:	and	x0, x0, #0xff
   1d5a8:	cmp	x0, #0x0
   1d5ac:	b.eq	1d5d0 <gelf_update_verdaux@@ELFUTILS_1.0+0x404>  // b.none
   1d5b0:	ldr	x0, [sp, #24]
   1d5b4:	ldr	x1, [x0, #48]
   1d5b8:	ldr	x0, [sp, #48]
   1d5bc:	sub	x1, x1, x0
   1d5c0:	ldr	x0, [sp, #40]
   1d5c4:	udiv	x1, x1, x0
   1d5c8:	ldr	x0, [sp, #16]
   1d5cc:	str	x1, [x0]
   1d5d0:	ldr	w0, [sp, #60]
   1d5d4:	ldp	x29, x30, [sp], #64
   1d5d8:	ret

000000000001d5dc <elf_getphdrnum@@ELFUTILS_1.6>:
   1d5dc:	stp	x29, x30, [sp, #-48]!
   1d5e0:	mov	x29, sp
   1d5e4:	str	x0, [sp, #24]
   1d5e8:	str	x1, [sp, #16]
   1d5ec:	ldr	x0, [sp, #24]
   1d5f0:	cmp	x0, #0x0
   1d5f4:	b.ne	1d600 <elf_getphdrnum@@ELFUTILS_1.6+0x24>  // b.any
   1d5f8:	mov	w0, #0xffffffff            	// #-1
   1d5fc:	b	1d644 <elf_getphdrnum@@ELFUTILS_1.6+0x68>
   1d600:	ldr	x0, [sp, #24]
   1d604:	ldr	w0, [x0, #24]
   1d608:	cmp	w0, #0x3
   1d60c:	cset	w0, ne  // ne = any
   1d610:	and	w0, w0, #0xff
   1d614:	and	x0, x0, #0xff
   1d618:	cmp	x0, #0x0
   1d61c:	b.eq	1d630 <elf_getphdrnum@@ELFUTILS_1.6+0x54>  // b.none
   1d620:	mov	w0, #0x4                   	// #4
   1d624:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1d628:	mov	w0, #0xffffffff            	// #-1
   1d62c:	b	1d644 <elf_getphdrnum@@ELFUTILS_1.6+0x68>
   1d630:	ldr	x1, [sp, #16]
   1d634:	ldr	x0, [sp, #24]
   1d638:	bl	1d448 <gelf_update_verdaux@@ELFUTILS_1.0+0x27c>
   1d63c:	str	w0, [sp, #44]
   1d640:	ldr	w0, [sp, #44]
   1d644:	ldp	x29, x30, [sp], #48
   1d648:	ret
   1d64c:	stp	x29, x30, [sp, #-48]!
   1d650:	mov	x29, sp
   1d654:	str	x0, [sp, #24]
   1d658:	str	x1, [sp, #16]
   1d65c:	str	wzr, [sp, #44]
   1d660:	ldr	x0, [sp, #24]
   1d664:	cmp	x0, #0x0
   1d668:	b.ne	1d674 <elf_getphdrnum@@ELFUTILS_1.6+0x98>  // b.any
   1d66c:	mov	w0, #0xffffffff            	// #-1
   1d670:	b	1d728 <elf_getphdrnum@@ELFUTILS_1.6+0x14c>
   1d674:	ldr	x0, [sp, #24]
   1d678:	ldr	w0, [x0, #24]
   1d67c:	cmp	w0, #0x3
   1d680:	cset	w0, ne  // ne = any
   1d684:	and	w0, w0, #0xff
   1d688:	and	x0, x0, #0xff
   1d68c:	cmp	x0, #0x0
   1d690:	b.eq	1d6a4 <elf_getphdrnum@@ELFUTILS_1.6+0xc8>  // b.none
   1d694:	mov	w0, #0x4                   	// #4
   1d698:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1d69c:	mov	w0, #0xffffffff            	// #-1
   1d6a0:	b	1d728 <elf_getphdrnum@@ELFUTILS_1.6+0x14c>
   1d6a4:	ldr	x0, [sp, #24]
   1d6a8:	ldr	x0, [x0, #96]
   1d6ac:	ldr	w0, [x0]
   1d6b0:	str	w0, [sp, #40]
   1d6b4:	ldr	w0, [sp, #40]
   1d6b8:	cmp	w0, #0x0
   1d6bc:	b.ne	1d6d8 <elf_getphdrnum@@ELFUTILS_1.6+0xfc>  // b.any
   1d6c0:	ldr	x0, [sp, #24]
   1d6c4:	ldr	x1, [x0, #96]
   1d6c8:	ldr	x0, [sp, #24]
   1d6cc:	add	x0, x0, #0xc8
   1d6d0:	cmp	x1, x0
   1d6d4:	b.eq	1d71c <elf_getphdrnum@@ELFUTILS_1.6+0x140>  // b.none
   1d6d8:	ldr	x0, [sp, #24]
   1d6dc:	ldr	x2, [x0, #96]
   1d6e0:	ldr	w0, [sp, #40]
   1d6e4:	sub	w0, w0, #0x1
   1d6e8:	sxtw	x1, w0
   1d6ec:	mov	x0, x1
   1d6f0:	lsl	x0, x0, #1
   1d6f4:	add	x0, x0, x1
   1d6f8:	lsl	x0, x0, #2
   1d6fc:	add	x0, x0, x1
   1d700:	lsl	x0, x0, #4
   1d704:	add	x0, x2, x0
   1d708:	ldr	x0, [x0, #144]
   1d70c:	add	x1, x0, #0x1
   1d710:	ldr	x0, [sp, #16]
   1d714:	str	x1, [x0]
   1d718:	b	1d724 <elf_getphdrnum@@ELFUTILS_1.6+0x148>
   1d71c:	ldr	x0, [sp, #16]
   1d720:	str	xzr, [x0]
   1d724:	ldr	w0, [sp, #44]
   1d728:	ldp	x29, x30, [sp], #48
   1d72c:	ret

000000000001d730 <elf_getshdrnum@@ELFUTILS_1.5>:
   1d730:	stp	x29, x30, [sp, #-48]!
   1d734:	mov	x29, sp
   1d738:	str	x0, [sp, #24]
   1d73c:	str	x1, [sp, #16]
   1d740:	ldr	x0, [sp, #24]
   1d744:	cmp	x0, #0x0
   1d748:	b.ne	1d754 <elf_getshdrnum@@ELFUTILS_1.5+0x24>  // b.any
   1d74c:	mov	w0, #0xffffffff            	// #-1
   1d750:	b	1d768 <elf_getshdrnum@@ELFUTILS_1.5+0x38>
   1d754:	ldr	x1, [sp, #16]
   1d758:	ldr	x0, [sp, #24]
   1d75c:	bl	1d64c <elf_getphdrnum@@ELFUTILS_1.6+0x70>
   1d760:	str	w0, [sp, #44]
   1d764:	ldr	w0, [sp, #44]
   1d768:	ldp	x29, x30, [sp], #48
   1d76c:	ret
   1d770:	sub	sp, sp, #0x10
   1d774:	str	w0, [sp, #12]
   1d778:	ldr	w0, [sp, #12]
   1d77c:	rev	w0, w0
   1d780:	add	sp, sp, #0x10
   1d784:	ret
   1d788:	stp	x29, x30, [sp, #-80]!
   1d78c:	mov	x29, sp
   1d790:	str	w0, [sp, #44]
   1d794:	str	x1, [sp, #32]
   1d798:	str	x2, [sp, #24]
   1d79c:	str	x3, [sp, #16]
   1d7a0:	str	xzr, [sp, #72]
   1d7a4:	ldr	x0, [sp, #72]
   1d7a8:	ldr	x1, [sp, #32]
   1d7ac:	add	x4, x1, x0
   1d7b0:	ldr	x0, [sp, #72]
   1d7b4:	ldr	x1, [sp, #24]
   1d7b8:	sub	x2, x1, x0
   1d7bc:	ldr	x1, [sp, #16]
   1d7c0:	ldr	x0, [sp, #72]
   1d7c4:	add	x0, x1, x0
   1d7c8:	mov	x3, x0
   1d7cc:	mov	x1, x4
   1d7d0:	ldr	w0, [sp, #44]
   1d7d4:	bl	3300 <pread@plt>
   1d7d8:	str	x0, [sp, #64]
   1d7dc:	ldr	x0, [sp, #64]
   1d7e0:	cmn	x0, #0x1
   1d7e4:	b.ne	1d7f8 <elf_getshdrnum@@ELFUTILS_1.5+0xc8>  // b.any
   1d7e8:	bl	33e0 <__errno_location@plt>
   1d7ec:	ldr	w0, [x0]
   1d7f0:	cmp	w0, #0x4
   1d7f4:	b.eq	1d7a4 <elf_getshdrnum@@ELFUTILS_1.5+0x74>  // b.none
   1d7f8:	ldr	x0, [sp, #64]
   1d7fc:	str	x0, [sp, #56]
   1d800:	ldr	x0, [sp, #56]
   1d804:	cmp	x0, #0x0
   1d808:	b.gt	1d828 <elf_getshdrnum@@ELFUTILS_1.5+0xf8>
   1d80c:	ldr	x0, [sp, #56]
   1d810:	cmp	x0, #0x0
   1d814:	b.ge	1d820 <elf_getshdrnum@@ELFUTILS_1.5+0xf0>  // b.tcont
   1d818:	ldr	x0, [sp, #56]
   1d81c:	b	1d84c <elf_getshdrnum@@ELFUTILS_1.5+0x11c>
   1d820:	ldr	x0, [sp, #72]
   1d824:	b	1d84c <elf_getshdrnum@@ELFUTILS_1.5+0x11c>
   1d828:	ldr	x1, [sp, #72]
   1d82c:	ldr	x0, [sp, #56]
   1d830:	add	x0, x1, x0
   1d834:	str	x0, [sp, #72]
   1d838:	ldr	x0, [sp, #72]
   1d83c:	ldr	x1, [sp, #24]
   1d840:	cmp	x1, x0
   1d844:	b.hi	1d7a4 <elf_getshdrnum@@ELFUTILS_1.5+0x74>  // b.pmore
   1d848:	ldr	x0, [sp, #72]
   1d84c:	ldp	x29, x30, [sp], #80
   1d850:	ret
   1d854:	stp	x29, x30, [sp, #-48]!
   1d858:	mov	x29, sp
   1d85c:	str	x0, [sp, #24]
   1d860:	ldr	x0, [sp, #24]
   1d864:	ldr	w0, [x0, #24]
   1d868:	cmp	w0, #0x1
   1d86c:	b.ne	1d8b0 <elf_getshdrnum@@ELFUTILS_1.5+0x180>  // b.any
   1d870:	ldr	x0, [sp, #24]
   1d874:	ldr	x0, [x0, #72]
   1d878:	str	x0, [sp, #40]
   1d87c:	b	1d8a4 <elf_getshdrnum@@ELFUTILS_1.5+0x174>
   1d880:	ldr	x0, [sp, #40]
   1d884:	ldr	w0, [x0, #60]
   1d888:	cmp	w0, #0x0
   1d88c:	b.eq	1d898 <elf_getshdrnum@@ELFUTILS_1.5+0x168>  // b.none
   1d890:	ldr	x0, [sp, #40]
   1d894:	bl	1d854 <elf_getshdrnum@@ELFUTILS_1.5+0x124>
   1d898:	ldr	x0, [sp, #40]
   1d89c:	ldr	x0, [x0, #16]
   1d8a0:	str	x0, [sp, #40]
   1d8a4:	ldr	x0, [sp, #40]
   1d8a8:	cmp	x0, #0x0
   1d8ac:	b.ne	1d880 <elf_getshdrnum@@ELFUTILS_1.5+0x150>  // b.any
   1d8b0:	nop
   1d8b4:	ldp	x29, x30, [sp], #48
   1d8b8:	ret
   1d8bc:	stp	x29, x30, [sp, #-48]!
   1d8c0:	mov	x29, sp
   1d8c4:	str	x0, [sp, #24]
   1d8c8:	ldr	x0, [sp, #24]
   1d8cc:	ldr	w0, [x0, #24]
   1d8d0:	cmp	w0, #0x1
   1d8d4:	b.ne	1d918 <elf_getshdrnum@@ELFUTILS_1.5+0x1e8>  // b.any
   1d8d8:	ldr	x0, [sp, #24]
   1d8dc:	ldr	x0, [x0, #72]
   1d8e0:	str	x0, [sp, #40]
   1d8e4:	b	1d90c <elf_getshdrnum@@ELFUTILS_1.5+0x1dc>
   1d8e8:	ldr	x0, [sp, #40]
   1d8ec:	ldr	w0, [x0, #60]
   1d8f0:	cmp	w0, #0x0
   1d8f4:	b.eq	1d900 <elf_getshdrnum@@ELFUTILS_1.5+0x1d0>  // b.none
   1d8f8:	ldr	x0, [sp, #40]
   1d8fc:	bl	1d8bc <elf_getshdrnum@@ELFUTILS_1.5+0x18c>
   1d900:	ldr	x0, [sp, #40]
   1d904:	ldr	x0, [x0, #16]
   1d908:	str	x0, [sp, #40]
   1d90c:	ldr	x0, [sp, #40]
   1d910:	cmp	x0, #0x0
   1d914:	b.ne	1d8e8 <elf_getshdrnum@@ELFUTILS_1.5+0x1b8>  // b.any
   1d918:	nop
   1d91c:	ldp	x29, x30, [sp], #48
   1d920:	ret

000000000001d924 <elf_getshdrstrndx@@ELFUTILS_1.5>:
   1d924:	stp	x29, x30, [sp, #-144]!
   1d928:	mov	x29, sp
   1d92c:	str	x0, [sp, #24]
   1d930:	str	x1, [sp, #16]
   1d934:	str	wzr, [sp, #140]
   1d938:	ldr	x0, [sp, #24]
   1d93c:	cmp	x0, #0x0
   1d940:	b.ne	1d94c <elf_getshdrstrndx@@ELFUTILS_1.5+0x28>  // b.any
   1d944:	mov	w0, #0xffffffff            	// #-1
   1d948:	b	1dd90 <elf_getshdrstrndx@@ELFUTILS_1.5+0x46c>
   1d94c:	ldr	x0, [sp, #24]
   1d950:	ldr	w0, [x0, #24]
   1d954:	cmp	w0, #0x3
   1d958:	cset	w0, ne  // ne = any
   1d95c:	and	w0, w0, #0xff
   1d960:	and	x0, x0, #0xff
   1d964:	cmp	x0, #0x0
   1d968:	b.eq	1d97c <elf_getshdrstrndx@@ELFUTILS_1.5+0x58>  // b.none
   1d96c:	mov	w0, #0x4                   	// #4
   1d970:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1d974:	mov	w0, #0xffffffff            	// #-1
   1d978:	b	1dd90 <elf_getshdrstrndx@@ELFUTILS_1.5+0x46c>
   1d97c:	ldr	x0, [sp, #24]
   1d980:	ldr	x0, [x0, #72]
   1d984:	cmp	x0, #0x0
   1d988:	cset	w0, eq  // eq = none
   1d98c:	and	w0, w0, #0xff
   1d990:	and	x0, x0, #0xff
   1d994:	cmp	x0, #0x0
   1d998:	b.eq	1d9b0 <elf_getshdrstrndx@@ELFUTILS_1.5+0x8c>  // b.none
   1d99c:	mov	w0, #0x1a                  	// #26
   1d9a0:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1d9a4:	mov	w0, #0xffffffff            	// #-1
   1d9a8:	str	w0, [sp, #140]
   1d9ac:	b	1dd8c <elf_getshdrstrndx@@ELFUTILS_1.5+0x468>
   1d9b0:	ldr	x0, [sp, #24]
   1d9b4:	ldr	w0, [x0, #32]
   1d9b8:	cmp	w0, #0x1
   1d9bc:	b.ne	1d9d0 <elf_getshdrstrndx@@ELFUTILS_1.5+0xac>  // b.any
   1d9c0:	ldr	x0, [sp, #24]
   1d9c4:	ldr	x0, [x0, #72]
   1d9c8:	ldrh	w0, [x0, #50]
   1d9cc:	b	1d9dc <elf_getshdrstrndx@@ELFUTILS_1.5+0xb8>
   1d9d0:	ldr	x0, [sp, #24]
   1d9d4:	ldr	x0, [x0, #72]
   1d9d8:	ldrh	w0, [x0, #62]
   1d9dc:	str	w0, [sp, #136]
   1d9e0:	ldr	w1, [sp, #136]
   1d9e4:	mov	w0, #0xffff                	// #65535
   1d9e8:	cmp	w1, w0
   1d9ec:	cset	w0, eq  // eq = none
   1d9f0:	and	w0, w0, #0xff
   1d9f4:	and	x0, x0, #0xff
   1d9f8:	cmp	x0, #0x0
   1d9fc:	b.eq	1dd7c <elf_getshdrstrndx@@ELFUTILS_1.5+0x458>  // b.none
   1da00:	ldr	x0, [sp, #24]
   1da04:	ldr	w0, [x0, #32]
   1da08:	cmp	w0, #0x1
   1da0c:	b.ne	1dbc8 <elf_getshdrstrndx@@ELFUTILS_1.5+0x2a4>  // b.any
   1da10:	ldr	x0, [sp, #24]
   1da14:	ldr	w0, [x0, #200]
   1da18:	cmp	w0, #0x0
   1da1c:	cset	w0, eq  // eq = none
   1da20:	and	w0, w0, #0xff
   1da24:	and	x0, x0, #0xff
   1da28:	cmp	x0, #0x0
   1da2c:	b.eq	1da44 <elf_getshdrstrndx@@ELFUTILS_1.5+0x120>  // b.none
   1da30:	mov	w0, #0x20                  	// #32
   1da34:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1da38:	mov	w0, #0xffffffff            	// #-1
   1da3c:	str	w0, [sp, #140]
   1da40:	b	1dd8c <elf_getshdrstrndx@@ELFUTILS_1.5+0x468>
   1da44:	ldr	x0, [sp, #24]
   1da48:	ldr	x0, [x0, #360]
   1da4c:	cmp	x0, #0x0
   1da50:	b.eq	1da68 <elf_getshdrstrndx@@ELFUTILS_1.5+0x144>  // b.none
   1da54:	ldr	x0, [sp, #24]
   1da58:	ldr	x0, [x0, #360]
   1da5c:	ldr	w0, [x0, #24]
   1da60:	str	w0, [sp, #136]
   1da64:	b	1dd80 <elf_getshdrstrndx@@ELFUTILS_1.5+0x45c>
   1da68:	ldr	x0, [sp, #24]
   1da6c:	ldr	x0, [x0, #72]
   1da70:	ldr	w0, [x0, #32]
   1da74:	mov	w0, w0
   1da78:	str	x0, [sp, #112]
   1da7c:	ldr	x0, [sp, #24]
   1da80:	ldr	x0, [x0]
   1da84:	cmp	x0, #0x0
   1da88:	b.eq	1db34 <elf_getshdrstrndx@@ELFUTILS_1.5+0x210>  // b.none
   1da8c:	ldr	x0, [sp, #24]
   1da90:	ldr	x0, [x0, #72]
   1da94:	ldrb	w0, [x0, #5]
   1da98:	cmp	w0, #0x1
   1da9c:	b.ne	1db34 <elf_getshdrstrndx@@ELFUTILS_1.5+0x210>  // b.any
   1daa0:	ldr	x0, [sp, #24]
   1daa4:	ldr	x1, [x0]
   1daa8:	ldr	x0, [sp, #24]
   1daac:	ldr	x0, [x0, #40]
   1dab0:	mov	x2, x0
   1dab4:	ldr	x0, [sp, #112]
   1dab8:	add	x0, x2, x0
   1dabc:	add	x0, x1, x0
   1dac0:	and	x0, x0, #0x3
   1dac4:	cmp	x0, #0x0
   1dac8:	b.ne	1db34 <elf_getshdrstrndx@@ELFUTILS_1.5+0x210>  // b.any
   1dacc:	ldr	x0, [sp, #24]
   1dad0:	ldr	x1, [x0, #48]
   1dad4:	ldr	x0, [sp, #112]
   1dad8:	sub	x0, x1, x0
   1dadc:	cmp	x0, #0x27
   1dae0:	cset	w0, ls  // ls = plast
   1dae4:	and	w0, w0, #0xff
   1dae8:	and	x0, x0, #0xff
   1daec:	cmp	x0, #0x0
   1daf0:	b.eq	1db08 <elf_getshdrstrndx@@ELFUTILS_1.5+0x1e4>  // b.none
   1daf4:	mov	w0, #0x20                  	// #32
   1daf8:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1dafc:	mov	w0, #0xffffffff            	// #-1
   1db00:	str	w0, [sp, #140]
   1db04:	b	1dd8c <elf_getshdrstrndx@@ELFUTILS_1.5+0x468>
   1db08:	ldr	x0, [sp, #24]
   1db0c:	ldr	x1, [x0]
   1db10:	ldr	x0, [sp, #24]
   1db14:	ldr	x0, [x0, #40]
   1db18:	mov	x2, x0
   1db1c:	ldr	x0, [sp, #112]
   1db20:	add	x0, x2, x0
   1db24:	add	x0, x1, x0
   1db28:	ldr	w0, [x0, #24]
   1db2c:	str	w0, [sp, #136]
   1db30:	b	1dd80 <elf_getshdrstrndx@@ELFUTILS_1.5+0x45c>
   1db34:	ldr	x0, [sp, #24]
   1db38:	ldr	w0, [x0, #36]
   1db3c:	ldr	x2, [sp, #112]
   1db40:	add	x1, sp, #0x28
   1db44:	mov	x3, x2
   1db48:	mov	x2, #0x28                  	// #40
   1db4c:	bl	1d788 <elf_getshdrnum@@ELFUTILS_1.5+0x58>
   1db50:	str	x0, [sp, #104]
   1db54:	ldr	x0, [sp, #104]
   1db58:	cmp	x0, #0x28
   1db5c:	cset	w0, ne  // ne = any
   1db60:	and	w0, w0, #0xff
   1db64:	and	x0, x0, #0xff
   1db68:	cmp	x0, #0x0
   1db6c:	b.eq	1db9c <elf_getshdrstrndx@@ELFUTILS_1.5+0x278>  // b.none
   1db70:	ldr	x0, [sp, #104]
   1db74:	cmp	x0, #0x0
   1db78:	b.ge	1db88 <elf_getshdrstrndx@@ELFUTILS_1.5+0x264>  // b.tcont
   1db7c:	mov	w0, #0x9                   	// #9
   1db80:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1db84:	b	1db90 <elf_getshdrstrndx@@ELFUTILS_1.5+0x26c>
   1db88:	mov	w0, #0xa                   	// #10
   1db8c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1db90:	mov	w0, #0xffffffff            	// #-1
   1db94:	str	w0, [sp, #140]
   1db98:	b	1dd8c <elf_getshdrstrndx@@ELFUTILS_1.5+0x468>
   1db9c:	ldr	x0, [sp, #24]
   1dba0:	ldr	x0, [x0, #72]
   1dba4:	ldrb	w0, [x0, #5]
   1dba8:	cmp	w0, #0x1
   1dbac:	b.eq	1dbbc <elf_getshdrstrndx@@ELFUTILS_1.5+0x298>  // b.none
   1dbb0:	ldr	w0, [sp, #64]
   1dbb4:	bl	1d770 <elf_getshdrnum@@ELFUTILS_1.5+0x40>
   1dbb8:	str	w0, [sp, #64]
   1dbbc:	ldr	w0, [sp, #64]
   1dbc0:	str	w0, [sp, #136]
   1dbc4:	b	1dd80 <elf_getshdrstrndx@@ELFUTILS_1.5+0x45c>
   1dbc8:	ldr	x0, [sp, #24]
   1dbcc:	ldr	w0, [x0, #200]
   1dbd0:	cmp	w0, #0x0
   1dbd4:	cset	w0, eq  // eq = none
   1dbd8:	and	w0, w0, #0xff
   1dbdc:	and	x0, x0, #0xff
   1dbe0:	cmp	x0, #0x0
   1dbe4:	b.eq	1dbfc <elf_getshdrstrndx@@ELFUTILS_1.5+0x2d8>  // b.none
   1dbe8:	mov	w0, #0x20                  	// #32
   1dbec:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1dbf0:	mov	w0, #0xffffffff            	// #-1
   1dbf4:	str	w0, [sp, #140]
   1dbf8:	b	1dd8c <elf_getshdrstrndx@@ELFUTILS_1.5+0x468>
   1dbfc:	ldr	x0, [sp, #24]
   1dc00:	ldr	x0, [x0, #360]
   1dc04:	cmp	x0, #0x0
   1dc08:	b.eq	1dc20 <elf_getshdrstrndx@@ELFUTILS_1.5+0x2fc>  // b.none
   1dc0c:	ldr	x0, [sp, #24]
   1dc10:	ldr	x0, [x0, #360]
   1dc14:	ldr	w0, [x0, #40]
   1dc18:	str	w0, [sp, #136]
   1dc1c:	b	1dd80 <elf_getshdrstrndx@@ELFUTILS_1.5+0x45c>
   1dc20:	ldr	x0, [sp, #24]
   1dc24:	ldr	x0, [x0, #72]
   1dc28:	ldr	x0, [x0, #40]
   1dc2c:	str	x0, [sp, #128]
   1dc30:	ldr	x0, [sp, #24]
   1dc34:	ldr	x0, [x0]
   1dc38:	cmp	x0, #0x0
   1dc3c:	b.eq	1dce8 <elf_getshdrstrndx@@ELFUTILS_1.5+0x3c4>  // b.none
   1dc40:	ldr	x0, [sp, #24]
   1dc44:	ldr	x0, [x0, #72]
   1dc48:	ldrb	w0, [x0, #5]
   1dc4c:	cmp	w0, #0x1
   1dc50:	b.ne	1dce8 <elf_getshdrstrndx@@ELFUTILS_1.5+0x3c4>  // b.any
   1dc54:	ldr	x0, [sp, #24]
   1dc58:	ldr	x1, [x0]
   1dc5c:	ldr	x0, [sp, #24]
   1dc60:	ldr	x0, [x0, #40]
   1dc64:	mov	x2, x0
   1dc68:	ldr	x0, [sp, #128]
   1dc6c:	add	x0, x2, x0
   1dc70:	add	x0, x1, x0
   1dc74:	and	x0, x0, #0x7
   1dc78:	cmp	x0, #0x0
   1dc7c:	b.ne	1dce8 <elf_getshdrstrndx@@ELFUTILS_1.5+0x3c4>  // b.any
   1dc80:	ldr	x0, [sp, #24]
   1dc84:	ldr	x1, [x0, #48]
   1dc88:	ldr	x0, [sp, #128]
   1dc8c:	sub	x0, x1, x0
   1dc90:	cmp	x0, #0x3f
   1dc94:	cset	w0, ls  // ls = plast
   1dc98:	and	w0, w0, #0xff
   1dc9c:	and	x0, x0, #0xff
   1dca0:	cmp	x0, #0x0
   1dca4:	b.eq	1dcbc <elf_getshdrstrndx@@ELFUTILS_1.5+0x398>  // b.none
   1dca8:	mov	w0, #0x20                  	// #32
   1dcac:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1dcb0:	mov	w0, #0xffffffff            	// #-1
   1dcb4:	str	w0, [sp, #140]
   1dcb8:	b	1dd8c <elf_getshdrstrndx@@ELFUTILS_1.5+0x468>
   1dcbc:	ldr	x0, [sp, #24]
   1dcc0:	ldr	x1, [x0]
   1dcc4:	ldr	x0, [sp, #24]
   1dcc8:	ldr	x0, [x0, #40]
   1dccc:	mov	x2, x0
   1dcd0:	ldr	x0, [sp, #128]
   1dcd4:	add	x0, x2, x0
   1dcd8:	add	x0, x1, x0
   1dcdc:	ldr	w0, [x0, #40]
   1dce0:	str	w0, [sp, #136]
   1dce4:	b	1dd80 <elf_getshdrstrndx@@ELFUTILS_1.5+0x45c>
   1dce8:	ldr	x0, [sp, #24]
   1dcec:	ldr	w0, [x0, #36]
   1dcf0:	ldr	x2, [sp, #128]
   1dcf4:	add	x1, sp, #0x28
   1dcf8:	mov	x3, x2
   1dcfc:	mov	x2, #0x40                  	// #64
   1dd00:	bl	1d788 <elf_getshdrnum@@ELFUTILS_1.5+0x58>
   1dd04:	str	x0, [sp, #120]
   1dd08:	ldr	x0, [sp, #120]
   1dd0c:	cmp	x0, #0x40
   1dd10:	cset	w0, ne  // ne = any
   1dd14:	and	w0, w0, #0xff
   1dd18:	and	x0, x0, #0xff
   1dd1c:	cmp	x0, #0x0
   1dd20:	b.eq	1dd50 <elf_getshdrstrndx@@ELFUTILS_1.5+0x42c>  // b.none
   1dd24:	ldr	x0, [sp, #120]
   1dd28:	cmp	x0, #0x0
   1dd2c:	b.ge	1dd3c <elf_getshdrstrndx@@ELFUTILS_1.5+0x418>  // b.tcont
   1dd30:	mov	w0, #0x9                   	// #9
   1dd34:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1dd38:	b	1dd44 <elf_getshdrstrndx@@ELFUTILS_1.5+0x420>
   1dd3c:	mov	w0, #0xa                   	// #10
   1dd40:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1dd44:	mov	w0, #0xffffffff            	// #-1
   1dd48:	str	w0, [sp, #140]
   1dd4c:	b	1dd8c <elf_getshdrstrndx@@ELFUTILS_1.5+0x468>
   1dd50:	ldr	x0, [sp, #24]
   1dd54:	ldr	x0, [x0, #72]
   1dd58:	ldrb	w0, [x0, #5]
   1dd5c:	cmp	w0, #0x1
   1dd60:	b.eq	1dd70 <elf_getshdrstrndx@@ELFUTILS_1.5+0x44c>  // b.none
   1dd64:	ldr	w0, [sp, #80]
   1dd68:	bl	1d770 <elf_getshdrnum@@ELFUTILS_1.5+0x40>
   1dd6c:	str	w0, [sp, #80]
   1dd70:	ldr	w0, [sp, #80]
   1dd74:	str	w0, [sp, #136]
   1dd78:	b	1dd80 <elf_getshdrstrndx@@ELFUTILS_1.5+0x45c>
   1dd7c:	nop
   1dd80:	ldr	w1, [sp, #136]
   1dd84:	ldr	x0, [sp, #16]
   1dd88:	str	x1, [x0]
   1dd8c:	ldr	w0, [sp, #140]
   1dd90:	ldp	x29, x30, [sp], #144
   1dd94:	ret

000000000001dd98 <gelf_checksum@@ELFUTILS_1.0>:
   1dd98:	stp	x29, x30, [sp, #-32]!
   1dd9c:	mov	x29, sp
   1dda0:	str	x0, [sp, #24]
   1dda4:	ldr	x0, [sp, #24]
   1dda8:	cmp	x0, #0x0
   1ddac:	b.ne	1ddb8 <gelf_checksum@@ELFUTILS_1.0+0x20>  // b.any
   1ddb0:	mov	x0, #0xffffffffffffffff    	// #-1
   1ddb4:	b	1dde0 <gelf_checksum@@ELFUTILS_1.0+0x48>
   1ddb8:	ldr	x0, [sp, #24]
   1ddbc:	ldr	w0, [x0, #32]
   1ddc0:	cmp	w0, #0x1
   1ddc4:	b.ne	1ddd4 <gelf_checksum@@ELFUTILS_1.0+0x3c>  // b.any
   1ddc8:	ldr	x0, [sp, #24]
   1ddcc:	bl	1dde8 <elf32_checksum@@ELFUTILS_1.0>
   1ddd0:	b	1dddc <gelf_checksum@@ELFUTILS_1.0+0x44>
   1ddd4:	ldr	x0, [sp, #24]
   1ddd8:	bl	1e0b8 <elf64_checksum@@ELFUTILS_1.0>
   1dddc:	nop
   1dde0:	ldp	x29, x30, [sp], #32
   1dde4:	ret

000000000001dde8 <elf32_checksum@@ELFUTILS_1.0>:
   1dde8:	stp	x29, x30, [sp, #-160]!
   1ddec:	mov	x29, sp
   1ddf0:	str	x0, [sp, #24]
   1ddf4:	str	xzr, [sp, #144]
   1ddf8:	ldr	x0, [sp, #24]
   1ddfc:	cmp	x0, #0x0
   1de00:	b.ne	1de0c <elf32_checksum@@ELFUTILS_1.0+0x24>  // b.any
   1de04:	mov	x0, #0xffffffffffffffff    	// #-1
   1de08:	b	1e0b0 <elf32_checksum@@ELFUTILS_1.0+0x2c8>
   1de0c:	add	x0, sp, #0x68
   1de10:	mov	x1, x0
   1de14:	ldr	x0, [sp, #24]
   1de18:	bl	1d924 <elf_getshdrstrndx@@ELFUTILS_1.5>
   1de1c:	cmp	w0, #0x0
   1de20:	b.ge	1de34 <elf32_checksum@@ELFUTILS_1.0+0x4c>  // b.tcont
   1de24:	mov	w0, #0x4                   	// #4
   1de28:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1de2c:	mov	x0, #0xffffffffffffffff    	// #-1
   1de30:	b	1e0b0 <elf32_checksum@@ELFUTILS_1.0+0x2c8>
   1de34:	ldr	x0, [sp, #24]
   1de38:	ldr	x0, [x0, #72]
   1de3c:	str	x0, [sp, #128]
   1de40:	ldr	x0, [sp, #128]
   1de44:	add	x0, x0, #0x5
   1de48:	ldrb	w0, [x0]
   1de4c:	cmp	w0, #0x1
   1de50:	cset	w0, eq  // eq = none
   1de54:	strb	w0, [sp, #127]
   1de58:	str	xzr, [sp, #152]
   1de5c:	b	1e08c <elf32_checksum@@ELFUTILS_1.0+0x2a4>
   1de60:	add	x0, sp, #0x28
   1de64:	mov	x1, x0
   1de68:	ldr	x0, [sp, #152]
   1de6c:	bl	10e44 <gelf_getshdr@@ELFUTILS_1.0>
   1de70:	str	x0, [sp, #112]
   1de74:	ldr	x0, [sp, #112]
   1de78:	cmp	x0, #0x0
   1de7c:	b.ne	1de94 <elf32_checksum@@ELFUTILS_1.0+0xac>  // b.any
   1de80:	mov	w0, #0x20                  	// #32
   1de84:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1de88:	mov	x0, #0xffffffffffffffff    	// #-1
   1de8c:	str	x0, [sp, #144]
   1de90:	b	1e0ac <elf32_checksum@@ELFUTILS_1.0+0x2c4>
   1de94:	ldr	x0, [sp, #112]
   1de98:	ldr	x0, [x0, #8]
   1de9c:	and	x0, x0, #0x2
   1dea0:	cmp	x0, #0x0
   1dea4:	b.ne	1df28 <elf32_checksum@@ELFUTILS_1.0+0x140>  // b.any
   1dea8:	ldr	x0, [sp, #112]
   1deac:	ldr	w0, [x0, #4]
   1deb0:	cmp	w0, #0x7
   1deb4:	b.eq	1df28 <elf32_checksum@@ELFUTILS_1.0+0x140>  // b.none
   1deb8:	ldr	x0, [sp, #112]
   1debc:	ldr	w0, [x0, #4]
   1dec0:	cmp	w0, #0x1
   1dec4:	b.ne	1e080 <elf32_checksum@@ELFUTILS_1.0+0x298>  // b.any
   1dec8:	ldr	x1, [sp, #104]
   1decc:	ldr	x0, [sp, #112]
   1ded0:	ldr	w0, [x0]
   1ded4:	mov	w0, w0
   1ded8:	mov	x2, x0
   1dedc:	ldr	x0, [sp, #24]
   1dee0:	bl	11334 <elf_strptr@@ELFUTILS_1.0>
   1dee4:	cmp	x0, #0x0
   1dee8:	b.eq	1df28 <elf32_checksum@@ELFUTILS_1.0+0x140>  // b.none
   1deec:	ldr	x1, [sp, #104]
   1def0:	ldr	x0, [sp, #112]
   1def4:	ldr	w0, [x0]
   1def8:	mov	w0, w0
   1defc:	mov	x2, x0
   1df00:	ldr	x0, [sp, #24]
   1df04:	bl	11334 <elf_strptr@@ELFUTILS_1.0>
   1df08:	mov	x3, x0
   1df0c:	mov	x2, #0xd                   	// #13
   1df10:	adrp	x0, 22000 <elf_compress_gnu@@ELFUTILS_1.7+0x195c>
   1df14:	add	x1, x0, #0x288
   1df18:	mov	x0, x3
   1df1c:	bl	3170 <strncmp@plt>
   1df20:	cmp	w0, #0x0
   1df24:	b.ne	1e080 <elf32_checksum@@ELFUTILS_1.0+0x298>  // b.any
   1df28:	ldr	x0, [sp, #112]
   1df2c:	ldr	w0, [x0, #4]
   1df30:	cmp	w0, #0x8
   1df34:	b.eq	1e088 <elf32_checksum@@ELFUTILS_1.0+0x2a0>  // b.none
   1df38:	mov	x1, #0x0                   	// #0
   1df3c:	ldr	x0, [sp, #152]
   1df40:	bl	117f0 <elf_rawdata@@ELFUTILS_1.0>
   1df44:	str	x0, [sp, #136]
   1df48:	ldr	x0, [sp, #136]
   1df4c:	cmp	x0, #0x0
   1df50:	b.eq	1e060 <elf32_checksum@@ELFUTILS_1.0+0x278>  // b.none
   1df54:	ldr	x0, [sp, #144]
   1df58:	mov	w3, w0
   1df5c:	ldr	x0, [sp, #136]
   1df60:	ldr	x1, [x0]
   1df64:	ldr	x0, [sp, #136]
   1df68:	ldr	x0, [x0, #16]
   1df6c:	mov	x2, x0
   1df70:	mov	w0, w3
   1df74:	bl	1e388 <elf64_checksum@@ELFUTILS_1.0+0x2d0>
   1df78:	mov	w0, w0
   1df7c:	str	x0, [sp, #144]
   1df80:	b	1e060 <elf32_checksum@@ELFUTILS_1.0+0x278>
   1df84:	ldrb	w0, [sp, #127]
   1df88:	and	x0, x0, #0xff
   1df8c:	cmp	x0, #0x0
   1df90:	b.ne	1dfa4 <elf32_checksum@@ELFUTILS_1.0+0x1bc>  // b.any
   1df94:	ldr	x0, [sp, #136]
   1df98:	ldr	w0, [x0, #8]
   1df9c:	cmp	w0, #0x0
   1dfa0:	b.ne	1dfd4 <elf32_checksum@@ELFUTILS_1.0+0x1ec>  // b.any
   1dfa4:	ldr	x0, [sp, #144]
   1dfa8:	mov	w3, w0
   1dfac:	ldr	x0, [sp, #136]
   1dfb0:	ldr	x1, [x0]
   1dfb4:	ldr	x0, [sp, #136]
   1dfb8:	ldr	x0, [x0, #16]
   1dfbc:	mov	x2, x0
   1dfc0:	mov	w0, w3
   1dfc4:	bl	1e388 <elf64_checksum@@ELFUTILS_1.0+0x2d0>
   1dfc8:	mov	w0, w0
   1dfcc:	str	x0, [sp, #144]
   1dfd0:	b	1e060 <elf32_checksum@@ELFUTILS_1.0+0x278>
   1dfd4:	ldr	x0, [sp, #128]
   1dfd8:	add	x0, x0, #0x5
   1dfdc:	ldrb	w0, [x0]
   1dfe0:	mov	w2, w0
   1dfe4:	ldr	x1, [sp, #136]
   1dfe8:	ldr	x0, [sp, #136]
   1dfec:	bl	70a0 <elf32_xlatetof@@ELFUTILS_1.0>
   1dff0:	cmp	x0, #0x0
   1dff4:	b.ne	1e004 <elf32_checksum@@ELFUTILS_1.0+0x21c>  // b.any
   1dff8:	mov	x0, #0xffffffffffffffff    	// #-1
   1dffc:	str	x0, [sp, #144]
   1e000:	b	1e0ac <elf32_checksum@@ELFUTILS_1.0+0x2c4>
   1e004:	ldr	x0, [sp, #144]
   1e008:	mov	w3, w0
   1e00c:	ldr	x0, [sp, #136]
   1e010:	ldr	x1, [x0]
   1e014:	ldr	x0, [sp, #136]
   1e018:	ldr	x0, [x0, #16]
   1e01c:	mov	x2, x0
   1e020:	mov	w0, w3
   1e024:	bl	1e388 <elf64_checksum@@ELFUTILS_1.0+0x2d0>
   1e028:	mov	w0, w0
   1e02c:	str	x0, [sp, #144]
   1e030:	ldr	x0, [sp, #128]
   1e034:	add	x0, x0, #0x5
   1e038:	ldrb	w0, [x0]
   1e03c:	mov	w2, w0
   1e040:	ldr	x1, [sp, #136]
   1e044:	ldr	x0, [sp, #136]
   1e048:	bl	7214 <elf32_xlatetom@@ELFUTILS_1.0>
   1e04c:	cmp	x0, #0x0
   1e050:	b.ne	1e060 <elf32_checksum@@ELFUTILS_1.0+0x278>  // b.any
   1e054:	mov	x0, #0xffffffffffffffff    	// #-1
   1e058:	str	x0, [sp, #144]
   1e05c:	b	1e0ac <elf32_checksum@@ELFUTILS_1.0+0x2c4>
   1e060:	ldr	x1, [sp, #136]
   1e064:	ldr	x0, [sp, #152]
   1e068:	bl	12760 <elf_getdata@@ELFUTILS_1.0>
   1e06c:	str	x0, [sp, #136]
   1e070:	ldr	x0, [sp, #136]
   1e074:	cmp	x0, #0x0
   1e078:	b.ne	1df84 <elf32_checksum@@ELFUTILS_1.0+0x19c>  // b.any
   1e07c:	b	1e08c <elf32_checksum@@ELFUTILS_1.0+0x2a4>
   1e080:	nop
   1e084:	b	1e08c <elf32_checksum@@ELFUTILS_1.0+0x2a4>
   1e088:	nop
   1e08c:	ldr	x1, [sp, #152]
   1e090:	ldr	x0, [sp, #24]
   1e094:	bl	edbc <elf_nextscn@@ELFUTILS_1.0>
   1e098:	str	x0, [sp, #152]
   1e09c:	ldr	x0, [sp, #152]
   1e0a0:	cmp	x0, #0x0
   1e0a4:	b.ne	1de60 <elf32_checksum@@ELFUTILS_1.0+0x78>  // b.any
   1e0a8:	nop
   1e0ac:	ldr	x0, [sp, #144]
   1e0b0:	ldp	x29, x30, [sp], #160
   1e0b4:	ret

000000000001e0b8 <elf64_checksum@@ELFUTILS_1.0>:
   1e0b8:	stp	x29, x30, [sp, #-160]!
   1e0bc:	mov	x29, sp
   1e0c0:	str	x0, [sp, #24]
   1e0c4:	str	xzr, [sp, #144]
   1e0c8:	ldr	x0, [sp, #24]
   1e0cc:	cmp	x0, #0x0
   1e0d0:	b.ne	1e0dc <elf64_checksum@@ELFUTILS_1.0+0x24>  // b.any
   1e0d4:	mov	x0, #0xffffffffffffffff    	// #-1
   1e0d8:	b	1e380 <elf64_checksum@@ELFUTILS_1.0+0x2c8>
   1e0dc:	add	x0, sp, #0x68
   1e0e0:	mov	x1, x0
   1e0e4:	ldr	x0, [sp, #24]
   1e0e8:	bl	1d924 <elf_getshdrstrndx@@ELFUTILS_1.5>
   1e0ec:	cmp	w0, #0x0
   1e0f0:	b.ge	1e104 <elf64_checksum@@ELFUTILS_1.0+0x4c>  // b.tcont
   1e0f4:	mov	w0, #0x4                   	// #4
   1e0f8:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1e0fc:	mov	x0, #0xffffffffffffffff    	// #-1
   1e100:	b	1e380 <elf64_checksum@@ELFUTILS_1.0+0x2c8>
   1e104:	ldr	x0, [sp, #24]
   1e108:	ldr	x0, [x0, #72]
   1e10c:	str	x0, [sp, #128]
   1e110:	ldr	x0, [sp, #128]
   1e114:	add	x0, x0, #0x5
   1e118:	ldrb	w0, [x0]
   1e11c:	cmp	w0, #0x1
   1e120:	cset	w0, eq  // eq = none
   1e124:	strb	w0, [sp, #127]
   1e128:	str	xzr, [sp, #152]
   1e12c:	b	1e35c <elf64_checksum@@ELFUTILS_1.0+0x2a4>
   1e130:	add	x0, sp, #0x28
   1e134:	mov	x1, x0
   1e138:	ldr	x0, [sp, #152]
   1e13c:	bl	10e44 <gelf_getshdr@@ELFUTILS_1.0>
   1e140:	str	x0, [sp, #112]
   1e144:	ldr	x0, [sp, #112]
   1e148:	cmp	x0, #0x0
   1e14c:	b.ne	1e164 <elf64_checksum@@ELFUTILS_1.0+0xac>  // b.any
   1e150:	mov	w0, #0x20                  	// #32
   1e154:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1e158:	mov	x0, #0xffffffffffffffff    	// #-1
   1e15c:	str	x0, [sp, #144]
   1e160:	b	1e37c <elf64_checksum@@ELFUTILS_1.0+0x2c4>
   1e164:	ldr	x0, [sp, #112]
   1e168:	ldr	x0, [x0, #8]
   1e16c:	and	x0, x0, #0x2
   1e170:	cmp	x0, #0x0
   1e174:	b.ne	1e1f8 <elf64_checksum@@ELFUTILS_1.0+0x140>  // b.any
   1e178:	ldr	x0, [sp, #112]
   1e17c:	ldr	w0, [x0, #4]
   1e180:	cmp	w0, #0x7
   1e184:	b.eq	1e1f8 <elf64_checksum@@ELFUTILS_1.0+0x140>  // b.none
   1e188:	ldr	x0, [sp, #112]
   1e18c:	ldr	w0, [x0, #4]
   1e190:	cmp	w0, #0x1
   1e194:	b.ne	1e350 <elf64_checksum@@ELFUTILS_1.0+0x298>  // b.any
   1e198:	ldr	x1, [sp, #104]
   1e19c:	ldr	x0, [sp, #112]
   1e1a0:	ldr	w0, [x0]
   1e1a4:	mov	w0, w0
   1e1a8:	mov	x2, x0
   1e1ac:	ldr	x0, [sp, #24]
   1e1b0:	bl	11334 <elf_strptr@@ELFUTILS_1.0>
   1e1b4:	cmp	x0, #0x0
   1e1b8:	b.eq	1e1f8 <elf64_checksum@@ELFUTILS_1.0+0x140>  // b.none
   1e1bc:	ldr	x1, [sp, #104]
   1e1c0:	ldr	x0, [sp, #112]
   1e1c4:	ldr	w0, [x0]
   1e1c8:	mov	w0, w0
   1e1cc:	mov	x2, x0
   1e1d0:	ldr	x0, [sp, #24]
   1e1d4:	bl	11334 <elf_strptr@@ELFUTILS_1.0>
   1e1d8:	mov	x3, x0
   1e1dc:	mov	x2, #0xd                   	// #13
   1e1e0:	adrp	x0, 22000 <elf_compress_gnu@@ELFUTILS_1.7+0x195c>
   1e1e4:	add	x1, x0, #0x298
   1e1e8:	mov	x0, x3
   1e1ec:	bl	3170 <strncmp@plt>
   1e1f0:	cmp	w0, #0x0
   1e1f4:	b.ne	1e350 <elf64_checksum@@ELFUTILS_1.0+0x298>  // b.any
   1e1f8:	ldr	x0, [sp, #112]
   1e1fc:	ldr	w0, [x0, #4]
   1e200:	cmp	w0, #0x8
   1e204:	b.eq	1e358 <elf64_checksum@@ELFUTILS_1.0+0x2a0>  // b.none
   1e208:	mov	x1, #0x0                   	// #0
   1e20c:	ldr	x0, [sp, #152]
   1e210:	bl	117f0 <elf_rawdata@@ELFUTILS_1.0>
   1e214:	str	x0, [sp, #136]
   1e218:	ldr	x0, [sp, #136]
   1e21c:	cmp	x0, #0x0
   1e220:	b.eq	1e330 <elf64_checksum@@ELFUTILS_1.0+0x278>  // b.none
   1e224:	ldr	x0, [sp, #144]
   1e228:	mov	w3, w0
   1e22c:	ldr	x0, [sp, #136]
   1e230:	ldr	x1, [x0]
   1e234:	ldr	x0, [sp, #136]
   1e238:	ldr	x0, [x0, #16]
   1e23c:	mov	x2, x0
   1e240:	mov	w0, w3
   1e244:	bl	1e388 <elf64_checksum@@ELFUTILS_1.0+0x2d0>
   1e248:	mov	w0, w0
   1e24c:	str	x0, [sp, #144]
   1e250:	b	1e330 <elf64_checksum@@ELFUTILS_1.0+0x278>
   1e254:	ldrb	w0, [sp, #127]
   1e258:	and	x0, x0, #0xff
   1e25c:	cmp	x0, #0x0
   1e260:	b.ne	1e274 <elf64_checksum@@ELFUTILS_1.0+0x1bc>  // b.any
   1e264:	ldr	x0, [sp, #136]
   1e268:	ldr	w0, [x0, #8]
   1e26c:	cmp	w0, #0x0
   1e270:	b.ne	1e2a4 <elf64_checksum@@ELFUTILS_1.0+0x1ec>  // b.any
   1e274:	ldr	x0, [sp, #144]
   1e278:	mov	w3, w0
   1e27c:	ldr	x0, [sp, #136]
   1e280:	ldr	x1, [x0]
   1e284:	ldr	x0, [sp, #136]
   1e288:	ldr	x0, [x0, #16]
   1e28c:	mov	x2, x0
   1e290:	mov	w0, w3
   1e294:	bl	1e388 <elf64_checksum@@ELFUTILS_1.0+0x2d0>
   1e298:	mov	w0, w0
   1e29c:	str	x0, [sp, #144]
   1e2a0:	b	1e330 <elf64_checksum@@ELFUTILS_1.0+0x278>
   1e2a4:	ldr	x0, [sp, #128]
   1e2a8:	add	x0, x0, #0x5
   1e2ac:	ldrb	w0, [x0]
   1e2b0:	mov	w2, w0
   1e2b4:	ldr	x1, [sp, #136]
   1e2b8:	ldr	x0, [sp, #136]
   1e2bc:	bl	73a8 <elf64_xlatetof@@ELFUTILS_1.0>
   1e2c0:	cmp	x0, #0x0
   1e2c4:	b.ne	1e2d4 <elf64_checksum@@ELFUTILS_1.0+0x21c>  // b.any
   1e2c8:	mov	x0, #0xffffffffffffffff    	// #-1
   1e2cc:	str	x0, [sp, #144]
   1e2d0:	b	1e37c <elf64_checksum@@ELFUTILS_1.0+0x2c4>
   1e2d4:	ldr	x0, [sp, #144]
   1e2d8:	mov	w3, w0
   1e2dc:	ldr	x0, [sp, #136]
   1e2e0:	ldr	x1, [x0]
   1e2e4:	ldr	x0, [sp, #136]
   1e2e8:	ldr	x0, [x0, #16]
   1e2ec:	mov	x2, x0
   1e2f0:	mov	w0, w3
   1e2f4:	bl	1e388 <elf64_checksum@@ELFUTILS_1.0+0x2d0>
   1e2f8:	mov	w0, w0
   1e2fc:	str	x0, [sp, #144]
   1e300:	ldr	x0, [sp, #128]
   1e304:	add	x0, x0, #0x5
   1e308:	ldrb	w0, [x0]
   1e30c:	mov	w2, w0
   1e310:	ldr	x1, [sp, #136]
   1e314:	ldr	x0, [sp, #136]
   1e318:	bl	7524 <elf64_xlatetom@@ELFUTILS_1.0>
   1e31c:	cmp	x0, #0x0
   1e320:	b.ne	1e330 <elf64_checksum@@ELFUTILS_1.0+0x278>  // b.any
   1e324:	mov	x0, #0xffffffffffffffff    	// #-1
   1e328:	str	x0, [sp, #144]
   1e32c:	b	1e37c <elf64_checksum@@ELFUTILS_1.0+0x2c4>
   1e330:	ldr	x1, [sp, #136]
   1e334:	ldr	x0, [sp, #152]
   1e338:	bl	12760 <elf_getdata@@ELFUTILS_1.0>
   1e33c:	str	x0, [sp, #136]
   1e340:	ldr	x0, [sp, #136]
   1e344:	cmp	x0, #0x0
   1e348:	b.ne	1e254 <elf64_checksum@@ELFUTILS_1.0+0x19c>  // b.any
   1e34c:	b	1e35c <elf64_checksum@@ELFUTILS_1.0+0x2a4>
   1e350:	nop
   1e354:	b	1e35c <elf64_checksum@@ELFUTILS_1.0+0x2a4>
   1e358:	nop
   1e35c:	ldr	x1, [sp, #152]
   1e360:	ldr	x0, [sp, #24]
   1e364:	bl	edbc <elf_nextscn@@ELFUTILS_1.0>
   1e368:	str	x0, [sp, #152]
   1e36c:	ldr	x0, [sp, #152]
   1e370:	cmp	x0, #0x0
   1e374:	b.ne	1e130 <elf64_checksum@@ELFUTILS_1.0+0x78>  // b.any
   1e378:	nop
   1e37c:	ldr	x0, [sp, #144]
   1e380:	ldp	x29, x30, [sp], #160
   1e384:	ret
   1e388:	sub	sp, sp, #0x30
   1e38c:	str	w0, [sp, #28]
   1e390:	str	x1, [sp, #16]
   1e394:	str	x2, [sp, #8]
   1e398:	ldr	w0, [sp, #28]
   1e39c:	mvn	w0, w0
   1e3a0:	str	w0, [sp, #28]
   1e3a4:	ldr	x1, [sp, #16]
   1e3a8:	ldr	x0, [sp, #8]
   1e3ac:	add	x0, x1, x0
   1e3b0:	str	x0, [sp, #40]
   1e3b4:	b	1e3fc <elf64_checksum@@ELFUTILS_1.0+0x344>
   1e3b8:	ldr	x0, [sp, #16]
   1e3bc:	ldrb	w0, [x0]
   1e3c0:	mov	w1, w0
   1e3c4:	ldr	w0, [sp, #28]
   1e3c8:	eor	w0, w1, w0
   1e3cc:	and	w1, w0, #0xff
   1e3d0:	adrp	x0, 22000 <elf_compress_gnu@@ELFUTILS_1.7+0x195c>
   1e3d4:	add	x0, x0, #0x2a8
   1e3d8:	mov	w1, w1
   1e3dc:	ldr	w1, [x0, x1, lsl #2]
   1e3e0:	ldr	w0, [sp, #28]
   1e3e4:	lsr	w0, w0, #8
   1e3e8:	eor	w0, w1, w0
   1e3ec:	str	w0, [sp, #28]
   1e3f0:	ldr	x0, [sp, #16]
   1e3f4:	add	x0, x0, #0x1
   1e3f8:	str	x0, [sp, #16]
   1e3fc:	ldr	x1, [sp, #16]
   1e400:	ldr	x0, [sp, #40]
   1e404:	cmp	x1, x0
   1e408:	b.cc	1e3b8 <elf64_checksum@@ELFUTILS_1.0+0x300>  // b.lo, b.ul, b.last
   1e40c:	ldr	w0, [sp, #28]
   1e410:	mvn	w0, w0
   1e414:	add	sp, sp, #0x30
   1e418:	ret
   1e41c:	sub	sp, sp, #0x30
   1e420:	str	x0, [sp, #8]
   1e424:	mov	x0, #0x3                   	// #3
   1e428:	str	x0, [sp, #40]
   1e42c:	ldr	x0, [sp, #40]
   1e430:	mul	x0, x0, x0
   1e434:	str	x0, [sp, #32]
   1e438:	b	1e488 <elf64_checksum@@ELFUTILS_1.0+0x3d0>
   1e43c:	ldr	x0, [sp, #32]
   1e440:	str	x0, [sp, #24]
   1e444:	ldr	x0, [sp, #40]
   1e448:	add	x0, x0, #0x1
   1e44c:	str	x0, [sp, #40]
   1e450:	ldr	x0, [sp, #40]
   1e454:	lsl	x0, x0, #2
   1e458:	ldr	x1, [sp, #32]
   1e45c:	add	x0, x1, x0
   1e460:	str	x0, [sp, #32]
   1e464:	ldr	x1, [sp, #32]
   1e468:	ldr	x0, [sp, #24]
   1e46c:	cmp	x1, x0
   1e470:	b.cs	1e47c <elf64_checksum@@ELFUTILS_1.0+0x3c4>  // b.hs, b.nlast
   1e474:	mov	w0, #0x1                   	// #1
   1e478:	b	1e4dc <elf64_checksum@@ELFUTILS_1.0+0x424>
   1e47c:	ldr	x0, [sp, #40]
   1e480:	add	x0, x0, #0x1
   1e484:	str	x0, [sp, #40]
   1e488:	ldr	x1, [sp, #32]
   1e48c:	ldr	x0, [sp, #8]
   1e490:	cmp	x1, x0
   1e494:	b.cs	1e4b8 <elf64_checksum@@ELFUTILS_1.0+0x400>  // b.hs, b.nlast
   1e498:	ldr	x0, [sp, #8]
   1e49c:	ldr	x1, [sp, #40]
   1e4a0:	udiv	x2, x0, x1
   1e4a4:	ldr	x1, [sp, #40]
   1e4a8:	mul	x1, x2, x1
   1e4ac:	sub	x0, x0, x1
   1e4b0:	cmp	x0, #0x0
   1e4b4:	b.ne	1e43c <elf64_checksum@@ELFUTILS_1.0+0x384>  // b.any
   1e4b8:	ldr	x0, [sp, #8]
   1e4bc:	ldr	x1, [sp, #40]
   1e4c0:	udiv	x2, x0, x1
   1e4c4:	ldr	x1, [sp, #40]
   1e4c8:	mul	x1, x2, x1
   1e4cc:	sub	x0, x0, x1
   1e4d0:	cmp	x0, #0x0
   1e4d4:	cset	w0, ne  // ne = any
   1e4d8:	and	w0, w0, #0xff
   1e4dc:	add	sp, sp, #0x30
   1e4e0:	ret
   1e4e4:	stp	x29, x30, [sp, #-32]!
   1e4e8:	mov	x29, sp
   1e4ec:	str	x0, [sp, #24]
   1e4f0:	ldr	x0, [sp, #24]
   1e4f4:	orr	x0, x0, #0x1
   1e4f8:	str	x0, [sp, #24]
   1e4fc:	b	1e50c <elf64_checksum@@ELFUTILS_1.0+0x454>
   1e500:	ldr	x0, [sp, #24]
   1e504:	add	x0, x0, #0x2
   1e508:	str	x0, [sp, #24]
   1e50c:	ldr	x0, [sp, #24]
   1e510:	bl	1e41c <elf64_checksum@@ELFUTILS_1.0+0x364>
   1e514:	cmp	w0, #0x0
   1e518:	b.eq	1e500 <elf64_checksum@@ELFUTILS_1.0+0x448>  // b.none
   1e51c:	ldr	x0, [sp, #24]
   1e520:	ldp	x29, x30, [sp], #32
   1e524:	ret
   1e528:	stp	x29, x30, [sp, #-96]!
   1e52c:	mov	x29, sp
   1e530:	str	w0, [sp, #76]
   1e534:	str	x1, [sp, #64]
   1e538:	str	x2, [sp, #56]
   1e53c:	str	x3, [sp, #48]
   1e540:	str	w4, [sp, #72]
   1e544:	str	x5, [sp, #40]
   1e548:	str	w6, [sp, #36]
   1e54c:	str	x7, [sp, #24]
   1e550:	ldr	x0, [sp, #24]
   1e554:	add	x0, x0, #0x108
   1e558:	mov	x1, x0
   1e55c:	mov	x0, #0x1                   	// #1
   1e560:	bl	31c0 <calloc@plt>
   1e564:	str	x0, [sp, #88]
   1e568:	ldr	x0, [sp, #88]
   1e56c:	cmp	x0, #0x0
   1e570:	b.ne	1e580 <elf64_checksum@@ELFUTILS_1.0+0x4c8>  // b.any
   1e574:	mov	w0, #0x8                   	// #8
   1e578:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1e57c:	b	1e5e0 <elf64_checksum@@ELFUTILS_1.0+0x528>
   1e580:	ldr	x0, [sp, #88]
   1e584:	ldr	w1, [sp, #36]
   1e588:	str	w1, [x0, #24]
   1e58c:	ldr	x0, [sp, #88]
   1e590:	mov	w1, #0x1                   	// #1
   1e594:	str	w1, [x0, #60]
   1e598:	ldr	x0, [sp, #88]
   1e59c:	ldr	w1, [sp, #72]
   1e5a0:	str	w1, [x0, #28]
   1e5a4:	ldr	x0, [sp, #88]
   1e5a8:	ldr	w1, [sp, #76]
   1e5ac:	str	w1, [x0, #36]
   1e5b0:	ldr	x0, [sp, #88]
   1e5b4:	ldr	x1, [sp, #56]
   1e5b8:	str	x1, [x0, #40]
   1e5bc:	ldr	x0, [sp, #88]
   1e5c0:	ldr	x1, [sp, #48]
   1e5c4:	str	x1, [x0, #48]
   1e5c8:	ldr	x0, [sp, #88]
   1e5cc:	ldr	x1, [sp, #64]
   1e5d0:	str	x1, [x0]
   1e5d4:	ldr	x0, [sp, #88]
   1e5d8:	ldr	x1, [sp, #40]
   1e5dc:	str	x1, [x0, #8]
   1e5e0:	ldr	x0, [sp, #88]
   1e5e4:	ldp	x29, x30, [sp], #96
   1e5e8:	ret
   1e5ec:	stp	x29, x30, [sp, #-48]!
   1e5f0:	mov	x29, sp
   1e5f4:	str	x0, [sp, #24]
   1e5f8:	ldr	x0, [sp, #24]
   1e5fc:	ldr	w0, [x0, #24]
   1e600:	cmp	w0, #0x1
   1e604:	b.ne	1e648 <elf64_checksum@@ELFUTILS_1.0+0x590>  // b.any
   1e608:	ldr	x0, [sp, #24]
   1e60c:	ldr	x0, [x0, #72]
   1e610:	str	x0, [sp, #40]
   1e614:	b	1e63c <elf64_checksum@@ELFUTILS_1.0+0x584>
   1e618:	ldr	x0, [sp, #40]
   1e61c:	ldr	w0, [x0, #60]
   1e620:	cmp	w0, #0x0
   1e624:	b.eq	1e630 <elf64_checksum@@ELFUTILS_1.0+0x578>  // b.none
   1e628:	ldr	x0, [sp, #40]
   1e62c:	bl	1e5ec <elf64_checksum@@ELFUTILS_1.0+0x534>
   1e630:	ldr	x0, [sp, #40]
   1e634:	ldr	x0, [x0, #16]
   1e638:	str	x0, [sp, #40]
   1e63c:	ldr	x0, [sp, #40]
   1e640:	cmp	x0, #0x0
   1e644:	b.ne	1e618 <elf64_checksum@@ELFUTILS_1.0+0x560>  // b.any
   1e648:	nop
   1e64c:	ldp	x29, x30, [sp], #48
   1e650:	ret
   1e654:	stp	x29, x30, [sp, #-48]!
   1e658:	mov	x29, sp
   1e65c:	str	x0, [sp, #24]
   1e660:	ldr	x0, [sp, #24]
   1e664:	ldr	w0, [x0, #24]
   1e668:	cmp	w0, #0x1
   1e66c:	b.ne	1e6b0 <elf64_checksum@@ELFUTILS_1.0+0x5f8>  // b.any
   1e670:	ldr	x0, [sp, #24]
   1e674:	ldr	x0, [x0, #72]
   1e678:	str	x0, [sp, #40]
   1e67c:	b	1e6a4 <elf64_checksum@@ELFUTILS_1.0+0x5ec>
   1e680:	ldr	x0, [sp, #40]
   1e684:	ldr	w0, [x0, #60]
   1e688:	cmp	w0, #0x0
   1e68c:	b.eq	1e698 <elf64_checksum@@ELFUTILS_1.0+0x5e0>  // b.none
   1e690:	ldr	x0, [sp, #40]
   1e694:	bl	1e654 <elf64_checksum@@ELFUTILS_1.0+0x59c>
   1e698:	ldr	x0, [sp, #40]
   1e69c:	ldr	x0, [x0, #16]
   1e6a0:	str	x0, [sp, #40]
   1e6a4:	ldr	x0, [sp, #40]
   1e6a8:	cmp	x0, #0x0
   1e6ac:	b.ne	1e680 <elf64_checksum@@ELFUTILS_1.0+0x5c8>  // b.any
   1e6b0:	nop
   1e6b4:	ldp	x29, x30, [sp], #48
   1e6b8:	ret

000000000001e6bc <elf_clone@@ELFUTILS_1.0>:
   1e6bc:	stp	x29, x30, [sp, #-48]!
   1e6c0:	mov	x29, sp
   1e6c4:	str	x0, [sp, #24]
   1e6c8:	str	w1, [sp, #20]
   1e6cc:	str	xzr, [sp, #40]
   1e6d0:	ldr	x0, [sp, #24]
   1e6d4:	cmp	x0, #0x0
   1e6d8:	b.ne	1e6e4 <elf_clone@@ELFUTILS_1.0+0x28>  // b.any
   1e6dc:	mov	x0, #0x0                   	// #0
   1e6e0:	b	1e7c8 <elf_clone@@ELFUTILS_1.0+0x10c>
   1e6e4:	ldr	w0, [sp, #20]
   1e6e8:	cmp	w0, #0xc
   1e6ec:	b.ne	1e7b8 <elf_clone@@ELFUTILS_1.0+0xfc>  // b.any
   1e6f0:	ldr	x0, [sp, #24]
   1e6f4:	ldr	w8, [x0, #36]
   1e6f8:	ldr	x0, [sp, #24]
   1e6fc:	ldr	x9, [x0]
   1e700:	ldr	x0, [sp, #24]
   1e704:	ldr	x2, [x0, #40]
   1e708:	ldr	x0, [sp, #24]
   1e70c:	ldr	x3, [x0, #48]
   1e710:	ldr	x0, [sp, #24]
   1e714:	ldr	w4, [x0, #28]
   1e718:	ldr	x0, [sp, #24]
   1e71c:	ldr	x5, [x0, #8]
   1e720:	ldr	x0, [sp, #24]
   1e724:	ldr	w6, [x0, #24]
   1e728:	ldr	x0, [sp, #24]
   1e72c:	ldr	w0, [x0, #204]
   1e730:	mov	w1, w0
   1e734:	mov	x0, x1
   1e738:	lsl	x0, x0, #1
   1e73c:	add	x0, x0, x1
   1e740:	lsl	x0, x0, #2
   1e744:	add	x0, x0, x1
   1e748:	lsl	x0, x0, #4
   1e74c:	mov	x7, x0
   1e750:	mov	x1, x9
   1e754:	mov	w0, w8
   1e758:	bl	1e528 <elf64_checksum@@ELFUTILS_1.0+0x470>
   1e75c:	str	x0, [sp, #40]
   1e760:	ldr	x0, [sp, #40]
   1e764:	cmp	x0, #0x0
   1e768:	b.eq	1e7c0 <elf_clone@@ELFUTILS_1.0+0x104>  // b.none
   1e76c:	ldr	x0, [sp, #40]
   1e770:	mov	w1, #0x1                   	// #1
   1e774:	str	w1, [x0, #56]
   1e778:	ldr	x0, [sp, #40]
   1e77c:	mov	w1, #0xa                   	// #10
   1e780:	str	w1, [x0, #112]
   1e784:	ldr	x0, [sp, #40]
   1e788:	add	x1, x0, #0xc8
   1e78c:	ldr	x0, [sp, #40]
   1e790:	str	x1, [x0, #96]
   1e794:	ldr	x0, [sp, #24]
   1e798:	ldr	w1, [x0, #204]
   1e79c:	ldr	x0, [sp, #40]
   1e7a0:	str	w1, [x0, #204]
   1e7a4:	ldr	x0, [sp, #24]
   1e7a8:	ldr	w1, [x0, #32]
   1e7ac:	ldr	x0, [sp, #40]
   1e7b0:	str	w1, [x0, #32]
   1e7b4:	b	1e7c4 <elf_clone@@ELFUTILS_1.0+0x108>
   1e7b8:	nop
   1e7bc:	b	1e7c4 <elf_clone@@ELFUTILS_1.0+0x108>
   1e7c0:	nop
   1e7c4:	ldr	x0, [sp, #40]
   1e7c8:	ldp	x29, x30, [sp], #48
   1e7cc:	ret

000000000001e7d0 <gelf_getlib@@ELFUTILS_1.1>:
   1e7d0:	stp	x29, x30, [sp, #-64]!
   1e7d4:	mov	x29, sp
   1e7d8:	str	x0, [sp, #40]
   1e7dc:	str	w1, [sp, #36]
   1e7e0:	str	x2, [sp, #24]
   1e7e4:	ldr	x0, [sp, #40]
   1e7e8:	cmp	x0, #0x0
   1e7ec:	b.ne	1e7f8 <gelf_getlib@@ELFUTILS_1.1+0x28>  // b.any
   1e7f0:	mov	x0, #0x0                   	// #0
   1e7f4:	b	1e8c0 <gelf_getlib@@ELFUTILS_1.1+0xf0>
   1e7f8:	ldr	x0, [sp, #40]
   1e7fc:	ldr	w0, [x0, #8]
   1e800:	cmp	w0, #0x16
   1e804:	cset	w0, ne  // ne = any
   1e808:	and	w0, w0, #0xff
   1e80c:	and	x0, x0, #0xff
   1e810:	cmp	x0, #0x0
   1e814:	b.eq	1e828 <gelf_getlib@@ELFUTILS_1.1+0x58>  // b.none
   1e818:	mov	w0, #0x4                   	// #4
   1e81c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1e820:	mov	x0, #0x0                   	// #0
   1e824:	b	1e8c0 <gelf_getlib@@ELFUTILS_1.1+0xf0>
   1e828:	ldr	x0, [sp, #40]
   1e82c:	str	x0, [sp, #48]
   1e830:	str	xzr, [sp, #56]
   1e834:	ldr	x0, [sp, #40]
   1e838:	ldr	x1, [x0, #16]
   1e83c:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   1e840:	movk	x0, #0xcccd
   1e844:	umulh	x0, x1, x0
   1e848:	lsr	x1, x0, #4
   1e84c:	ldr	w0, [sp, #36]
   1e850:	mov	w0, w0
   1e854:	cmp	x1, x0
   1e858:	cset	w0, ls  // ls = plast
   1e85c:	and	w0, w0, #0xff
   1e860:	and	x0, x0, #0xff
   1e864:	cmp	x0, #0x0
   1e868:	b.eq	1e878 <gelf_getlib@@ELFUTILS_1.1+0xa8>  // b.none
   1e86c:	mov	w0, #0x16                  	// #22
   1e870:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1e874:	b	1e8bc <gelf_getlib@@ELFUTILS_1.1+0xec>
   1e878:	ldr	x0, [sp, #40]
   1e87c:	ldr	x2, [x0]
   1e880:	ldrsw	x1, [sp, #36]
   1e884:	mov	x0, x1
   1e888:	lsl	x0, x0, #2
   1e88c:	add	x0, x0, x1
   1e890:	lsl	x0, x0, #2
   1e894:	add	x0, x2, x0
   1e898:	ldr	x1, [sp, #24]
   1e89c:	mov	x2, x1
   1e8a0:	mov	x3, x0
   1e8a4:	ldp	x0, x1, [x3]
   1e8a8:	stp	x0, x1, [x2]
   1e8ac:	ldr	w0, [x3, #16]
   1e8b0:	str	w0, [x2, #16]
   1e8b4:	ldr	x0, [sp, #24]
   1e8b8:	str	x0, [sp, #56]
   1e8bc:	ldr	x0, [sp, #56]
   1e8c0:	ldp	x29, x30, [sp], #64
   1e8c4:	ret

000000000001e8c8 <gelf_update_lib@@ELFUTILS_1.1>:
   1e8c8:	stp	x29, x30, [sp, #-80]!
   1e8cc:	mov	x29, sp
   1e8d0:	str	x0, [sp, #40]
   1e8d4:	str	w1, [sp, #36]
   1e8d8:	str	x2, [sp, #24]
   1e8dc:	ldr	x0, [sp, #40]
   1e8e0:	cmp	x0, #0x0
   1e8e4:	b.ne	1e8f0 <gelf_update_lib@@ELFUTILS_1.1+0x28>  // b.any
   1e8e8:	mov	w0, #0x0                   	// #0
   1e8ec:	b	1e9d8 <gelf_update_lib@@ELFUTILS_1.1+0x110>
   1e8f0:	ldr	x0, [sp, #40]
   1e8f4:	str	x0, [sp, #64]
   1e8f8:	ldr	x0, [sp, #64]
   1e8fc:	ldr	w0, [x0, #8]
   1e900:	cmp	w0, #0x16
   1e904:	cset	w0, ne  // ne = any
   1e908:	and	w0, w0, #0xff
   1e90c:	and	x0, x0, #0xff
   1e910:	cmp	x0, #0x0
   1e914:	b.eq	1e928 <gelf_update_lib@@ELFUTILS_1.1+0x60>  // b.none
   1e918:	mov	w0, #0x1f                  	// #31
   1e91c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1e920:	mov	w0, #0x0                   	// #0
   1e924:	b	1e9d8 <gelf_update_lib@@ELFUTILS_1.1+0x110>
   1e928:	ldr	x0, [sp, #64]
   1e92c:	ldr	x0, [x0, #40]
   1e930:	str	x0, [sp, #56]
   1e934:	str	wzr, [sp, #76]
   1e938:	ldr	x0, [sp, #64]
   1e93c:	ldr	x1, [x0, #16]
   1e940:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   1e944:	movk	x0, #0xcccd
   1e948:	umulh	x0, x1, x0
   1e94c:	lsr	x1, x0, #4
   1e950:	ldr	w0, [sp, #36]
   1e954:	mov	w0, w0
   1e958:	cmp	x1, x0
   1e95c:	cset	w0, ls  // ls = plast
   1e960:	and	w0, w0, #0xff
   1e964:	and	x0, x0, #0xff
   1e968:	cmp	x0, #0x0
   1e96c:	b.eq	1e97c <gelf_update_lib@@ELFUTILS_1.1+0xb4>  // b.none
   1e970:	mov	w0, #0x16                  	// #22
   1e974:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1e978:	b	1e9d4 <gelf_update_lib@@ELFUTILS_1.1+0x10c>
   1e97c:	ldr	x0, [sp, #64]
   1e980:	ldr	x2, [x0]
   1e984:	ldrsw	x1, [sp, #36]
   1e988:	mov	x0, x1
   1e98c:	lsl	x0, x0, #2
   1e990:	add	x0, x0, x1
   1e994:	lsl	x0, x0, #2
   1e998:	add	x1, x2, x0
   1e99c:	ldr	x0, [sp, #24]
   1e9a0:	mov	x2, x1
   1e9a4:	mov	x3, x0
   1e9a8:	ldp	x0, x1, [x3]
   1e9ac:	stp	x0, x1, [x2]
   1e9b0:	ldr	w0, [x3, #16]
   1e9b4:	str	w0, [x2, #16]
   1e9b8:	mov	w0, #0x1                   	// #1
   1e9bc:	str	w0, [sp, #76]
   1e9c0:	ldr	x0, [sp, #56]
   1e9c4:	ldr	w0, [x0, #156]
   1e9c8:	orr	w1, w0, #0x1
   1e9cc:	ldr	x0, [sp, #56]
   1e9d0:	str	w1, [x0, #156]
   1e9d4:	ldr	w0, [sp, #76]
   1e9d8:	ldp	x29, x30, [sp], #80
   1e9dc:	ret

000000000001e9e0 <elf32_offscn@@ELFUTILS_1.1.1>:
   1e9e0:	stp	x29, x30, [sp, #-64]!
   1e9e4:	mov	x29, sp
   1e9e8:	str	x0, [sp, #24]
   1e9ec:	str	w1, [sp, #20]
   1e9f0:	ldr	x0, [sp, #24]
   1e9f4:	cmp	x0, #0x0
   1e9f8:	b.ne	1ea04 <elf32_offscn@@ELFUTILS_1.1.1+0x24>  // b.any
   1e9fc:	mov	x0, #0x0                   	// #0
   1ea00:	b	1ebc0 <elf32_offscn@@ELFUTILS_1.1.1+0x1e0>
   1ea04:	ldr	x0, [sp, #24]
   1ea08:	ldr	w0, [x0, #24]
   1ea0c:	cmp	w0, #0x3
   1ea10:	cset	w0, ne  // ne = any
   1ea14:	and	w0, w0, #0xff
   1ea18:	and	x0, x0, #0xff
   1ea1c:	cmp	x0, #0x0
   1ea20:	b.eq	1ea34 <elf32_offscn@@ELFUTILS_1.1.1+0x54>  // b.none
   1ea24:	mov	w0, #0x4                   	// #4
   1ea28:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1ea2c:	mov	x0, #0x0                   	// #0
   1ea30:	b	1ebc0 <elf32_offscn@@ELFUTILS_1.1.1+0x1e0>
   1ea34:	ldr	x0, [sp, #24]
   1ea38:	add	x0, x0, #0xc8
   1ea3c:	str	x0, [sp, #56]
   1ea40:	ldr	x0, [sp, #56]
   1ea44:	ldr	w0, [x0]
   1ea48:	cmp	w0, #0x0
   1ea4c:	b.eq	1ea9c <elf32_offscn@@ELFUTILS_1.1.1+0xbc>  // b.none
   1ea50:	ldr	x0, [sp, #56]
   1ea54:	ldr	x0, [x0, #160]
   1ea58:	cmp	x0, #0x0
   1ea5c:	cset	w0, eq  // eq = none
   1ea60:	and	w0, w0, #0xff
   1ea64:	and	x0, x0, #0xff
   1ea68:	cmp	x0, #0x0
   1ea6c:	b.eq	1ea9c <elf32_offscn@@ELFUTILS_1.1.1+0xbc>  // b.none
   1ea70:	ldr	x0, [sp, #56]
   1ea74:	add	x0, x0, #0x10
   1ea78:	bl	3340 <elf32_getshdr@plt>
   1ea7c:	cmp	x0, #0x0
   1ea80:	cset	w0, eq  // eq = none
   1ea84:	and	w0, w0, #0xff
   1ea88:	and	x0, x0, #0xff
   1ea8c:	cmp	x0, #0x0
   1ea90:	b.eq	1ea9c <elf32_offscn@@ELFUTILS_1.1.1+0xbc>  // b.none
   1ea94:	mov	x0, #0x0                   	// #0
   1ea98:	b	1ebc0 <elf32_offscn@@ELFUTILS_1.1.1+0x1e0>
   1ea9c:	str	xzr, [sp, #48]
   1eaa0:	str	wzr, [sp, #44]
   1eaa4:	b	1eb80 <elf32_offscn@@ELFUTILS_1.1.1+0x1a0>
   1eaa8:	ldr	x2, [sp, #56]
   1eaac:	ldr	w1, [sp, #44]
   1eab0:	mov	x0, x1
   1eab4:	lsl	x0, x0, #1
   1eab8:	add	x0, x0, x1
   1eabc:	lsl	x0, x0, #2
   1eac0:	add	x0, x0, x1
   1eac4:	lsl	x0, x0, #4
   1eac8:	add	x0, x2, x0
   1eacc:	ldr	x0, [x0, #160]
   1ead0:	ldr	w0, [x0, #16]
   1ead4:	ldr	w1, [sp, #20]
   1ead8:	cmp	w1, w0
   1eadc:	b.ne	1eb74 <elf32_offscn@@ELFUTILS_1.1.1+0x194>  // b.any
   1eae0:	ldr	w1, [sp, #44]
   1eae4:	mov	x0, x1
   1eae8:	lsl	x0, x0, #1
   1eaec:	add	x0, x0, x1
   1eaf0:	lsl	x0, x0, #2
   1eaf4:	add	x0, x0, x1
   1eaf8:	lsl	x0, x0, #4
   1eafc:	add	x0, x0, #0x10
   1eb00:	ldr	x1, [sp, #56]
   1eb04:	add	x0, x1, x0
   1eb08:	str	x0, [sp, #48]
   1eb0c:	ldr	x2, [sp, #56]
   1eb10:	ldr	w1, [sp, #44]
   1eb14:	mov	x0, x1
   1eb18:	lsl	x0, x0, #1
   1eb1c:	add	x0, x0, x1
   1eb20:	lsl	x0, x0, #2
   1eb24:	add	x0, x0, x1
   1eb28:	lsl	x0, x0, #4
   1eb2c:	add	x0, x2, x0
   1eb30:	ldr	x0, [x0, #160]
   1eb34:	ldr	w0, [x0, #20]
   1eb38:	cmp	w0, #0x0
   1eb3c:	b.eq	1eb74 <elf32_offscn@@ELFUTILS_1.1.1+0x194>  // b.none
   1eb40:	ldr	x2, [sp, #56]
   1eb44:	ldr	w1, [sp, #44]
   1eb48:	mov	x0, x1
   1eb4c:	lsl	x0, x0, #1
   1eb50:	add	x0, x0, x1
   1eb54:	lsl	x0, x0, #2
   1eb58:	add	x0, x0, x1
   1eb5c:	lsl	x0, x0, #4
   1eb60:	add	x0, x2, x0
   1eb64:	ldr	x0, [x0, #160]
   1eb68:	ldr	w0, [x0, #4]
   1eb6c:	cmp	w0, #0x8
   1eb70:	b.ne	1ebb8 <elf32_offscn@@ELFUTILS_1.1.1+0x1d8>  // b.any
   1eb74:	ldr	w0, [sp, #44]
   1eb78:	add	w0, w0, #0x1
   1eb7c:	str	w0, [sp, #44]
   1eb80:	ldr	x0, [sp, #56]
   1eb84:	ldr	w0, [x0]
   1eb88:	ldr	w1, [sp, #44]
   1eb8c:	cmp	w1, w0
   1eb90:	b.cc	1eaa8 <elf32_offscn@@ELFUTILS_1.1.1+0xc8>  // b.lo, b.ul, b.last
   1eb94:	ldr	x0, [sp, #56]
   1eb98:	ldr	x0, [x0, #8]
   1eb9c:	str	x0, [sp, #56]
   1eba0:	ldr	x0, [sp, #56]
   1eba4:	cmp	x0, #0x0
   1eba8:	b.ne	1eaa0 <elf32_offscn@@ELFUTILS_1.1.1+0xc0>  // b.any
   1ebac:	mov	w0, #0x2b                  	// #43
   1ebb0:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1ebb4:	b	1ebbc <elf32_offscn@@ELFUTILS_1.1.1+0x1dc>
   1ebb8:	nop
   1ebbc:	ldr	x0, [sp, #48]
   1ebc0:	ldp	x29, x30, [sp], #64
   1ebc4:	ret

000000000001ebc8 <elf64_offscn@@ELFUTILS_1.1.1>:
   1ebc8:	stp	x29, x30, [sp, #-64]!
   1ebcc:	mov	x29, sp
   1ebd0:	str	x0, [sp, #24]
   1ebd4:	str	x1, [sp, #16]
   1ebd8:	ldr	x0, [sp, #24]
   1ebdc:	cmp	x0, #0x0
   1ebe0:	b.ne	1ebec <elf64_offscn@@ELFUTILS_1.1.1+0x24>  // b.any
   1ebe4:	mov	x0, #0x0                   	// #0
   1ebe8:	b	1eda8 <elf64_offscn@@ELFUTILS_1.1.1+0x1e0>
   1ebec:	ldr	x0, [sp, #24]
   1ebf0:	ldr	w0, [x0, #24]
   1ebf4:	cmp	w0, #0x3
   1ebf8:	cset	w0, ne  // ne = any
   1ebfc:	and	w0, w0, #0xff
   1ec00:	and	x0, x0, #0xff
   1ec04:	cmp	x0, #0x0
   1ec08:	b.eq	1ec1c <elf64_offscn@@ELFUTILS_1.1.1+0x54>  // b.none
   1ec0c:	mov	w0, #0x4                   	// #4
   1ec10:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1ec14:	mov	x0, #0x0                   	// #0
   1ec18:	b	1eda8 <elf64_offscn@@ELFUTILS_1.1.1+0x1e0>
   1ec1c:	ldr	x0, [sp, #24]
   1ec20:	add	x0, x0, #0xc8
   1ec24:	str	x0, [sp, #56]
   1ec28:	ldr	x0, [sp, #56]
   1ec2c:	ldr	w0, [x0]
   1ec30:	cmp	w0, #0x0
   1ec34:	b.eq	1ec84 <elf64_offscn@@ELFUTILS_1.1.1+0xbc>  // b.none
   1ec38:	ldr	x0, [sp, #56]
   1ec3c:	ldr	x0, [x0, #160]
   1ec40:	cmp	x0, #0x0
   1ec44:	cset	w0, eq  // eq = none
   1ec48:	and	w0, w0, #0xff
   1ec4c:	and	x0, x0, #0xff
   1ec50:	cmp	x0, #0x0
   1ec54:	b.eq	1ec84 <elf64_offscn@@ELFUTILS_1.1.1+0xbc>  // b.none
   1ec58:	ldr	x0, [sp, #56]
   1ec5c:	add	x0, x0, #0x10
   1ec60:	bl	3190 <elf64_getshdr@plt>
   1ec64:	cmp	x0, #0x0
   1ec68:	cset	w0, eq  // eq = none
   1ec6c:	and	w0, w0, #0xff
   1ec70:	and	x0, x0, #0xff
   1ec74:	cmp	x0, #0x0
   1ec78:	b.eq	1ec84 <elf64_offscn@@ELFUTILS_1.1.1+0xbc>  // b.none
   1ec7c:	mov	x0, #0x0                   	// #0
   1ec80:	b	1eda8 <elf64_offscn@@ELFUTILS_1.1.1+0x1e0>
   1ec84:	str	xzr, [sp, #48]
   1ec88:	str	wzr, [sp, #44]
   1ec8c:	b	1ed68 <elf64_offscn@@ELFUTILS_1.1.1+0x1a0>
   1ec90:	ldr	x2, [sp, #56]
   1ec94:	ldr	w1, [sp, #44]
   1ec98:	mov	x0, x1
   1ec9c:	lsl	x0, x0, #1
   1eca0:	add	x0, x0, x1
   1eca4:	lsl	x0, x0, #2
   1eca8:	add	x0, x0, x1
   1ecac:	lsl	x0, x0, #4
   1ecb0:	add	x0, x2, x0
   1ecb4:	ldr	x0, [x0, #160]
   1ecb8:	ldr	x0, [x0, #24]
   1ecbc:	ldr	x1, [sp, #16]
   1ecc0:	cmp	x1, x0
   1ecc4:	b.ne	1ed5c <elf64_offscn@@ELFUTILS_1.1.1+0x194>  // b.any
   1ecc8:	ldr	w1, [sp, #44]
   1eccc:	mov	x0, x1
   1ecd0:	lsl	x0, x0, #1
   1ecd4:	add	x0, x0, x1
   1ecd8:	lsl	x0, x0, #2
   1ecdc:	add	x0, x0, x1
   1ece0:	lsl	x0, x0, #4
   1ece4:	add	x0, x0, #0x10
   1ece8:	ldr	x1, [sp, #56]
   1ecec:	add	x0, x1, x0
   1ecf0:	str	x0, [sp, #48]
   1ecf4:	ldr	x2, [sp, #56]
   1ecf8:	ldr	w1, [sp, #44]
   1ecfc:	mov	x0, x1
   1ed00:	lsl	x0, x0, #1
   1ed04:	add	x0, x0, x1
   1ed08:	lsl	x0, x0, #2
   1ed0c:	add	x0, x0, x1
   1ed10:	lsl	x0, x0, #4
   1ed14:	add	x0, x2, x0
   1ed18:	ldr	x0, [x0, #160]
   1ed1c:	ldr	x0, [x0, #32]
   1ed20:	cmp	x0, #0x0
   1ed24:	b.eq	1ed5c <elf64_offscn@@ELFUTILS_1.1.1+0x194>  // b.none
   1ed28:	ldr	x2, [sp, #56]
   1ed2c:	ldr	w1, [sp, #44]
   1ed30:	mov	x0, x1
   1ed34:	lsl	x0, x0, #1
   1ed38:	add	x0, x0, x1
   1ed3c:	lsl	x0, x0, #2
   1ed40:	add	x0, x0, x1
   1ed44:	lsl	x0, x0, #4
   1ed48:	add	x0, x2, x0
   1ed4c:	ldr	x0, [x0, #160]
   1ed50:	ldr	w0, [x0, #4]
   1ed54:	cmp	w0, #0x8
   1ed58:	b.ne	1eda0 <elf64_offscn@@ELFUTILS_1.1.1+0x1d8>  // b.any
   1ed5c:	ldr	w0, [sp, #44]
   1ed60:	add	w0, w0, #0x1
   1ed64:	str	w0, [sp, #44]
   1ed68:	ldr	x0, [sp, #56]
   1ed6c:	ldr	w0, [x0]
   1ed70:	ldr	w1, [sp, #44]
   1ed74:	cmp	w1, w0
   1ed78:	b.cc	1ec90 <elf64_offscn@@ELFUTILS_1.1.1+0xc8>  // b.lo, b.ul, b.last
   1ed7c:	ldr	x0, [sp, #56]
   1ed80:	ldr	x0, [x0, #8]
   1ed84:	str	x0, [sp, #56]
   1ed88:	ldr	x0, [sp, #56]
   1ed8c:	cmp	x0, #0x0
   1ed90:	b.ne	1ec88 <elf64_offscn@@ELFUTILS_1.1.1+0xc0>  // b.any
   1ed94:	mov	w0, #0x2b                  	// #43
   1ed98:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1ed9c:	b	1eda4 <elf64_offscn@@ELFUTILS_1.1.1+0x1dc>
   1eda0:	nop
   1eda4:	ldr	x0, [sp, #48]
   1eda8:	ldp	x29, x30, [sp], #64
   1edac:	ret

000000000001edb0 <gelf_offscn@@ELFUTILS_1.1.1>:
   1edb0:	stp	x29, x30, [sp, #-32]!
   1edb4:	mov	x29, sp
   1edb8:	str	x0, [sp, #24]
   1edbc:	str	x1, [sp, #16]
   1edc0:	ldr	x0, [sp, #24]
   1edc4:	ldr	w0, [x0, #32]
   1edc8:	cmp	w0, #0x1
   1edcc:	b.ne	1ee08 <gelf_offscn@@ELFUTILS_1.1.1+0x58>  // b.any
   1edd0:	ldr	x0, [sp, #16]
   1edd4:	mov	w0, w0
   1edd8:	ldr	x1, [sp, #16]
   1eddc:	cmp	x1, x0
   1ede0:	b.eq	1edf4 <gelf_offscn@@ELFUTILS_1.1.1+0x44>  // b.none
   1ede4:	mov	w0, #0x2b                  	// #43
   1ede8:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1edec:	mov	x0, #0x0                   	// #0
   1edf0:	b	1ee14 <gelf_offscn@@ELFUTILS_1.1.1+0x64>
   1edf4:	ldr	x0, [sp, #16]
   1edf8:	mov	w1, w0
   1edfc:	ldr	x0, [sp, #24]
   1ee00:	bl	1e9e0 <elf32_offscn@@ELFUTILS_1.1.1>
   1ee04:	b	1ee14 <gelf_offscn@@ELFUTILS_1.1.1+0x64>
   1ee08:	ldr	x1, [sp, #16]
   1ee0c:	ldr	x0, [sp, #24]
   1ee10:	bl	1ebc8 <elf64_offscn@@ELFUTILS_1.1.1>
   1ee14:	ldp	x29, x30, [sp], #32
   1ee18:	ret

000000000001ee1c <elf_getaroff@@ELFUTILS_1.1.1>:
   1ee1c:	stp	x29, x30, [sp, #-48]!
   1ee20:	mov	x29, sp
   1ee24:	str	x0, [sp, #24]
   1ee28:	ldr	x0, [sp, #24]
   1ee2c:	cmp	x0, #0x0
   1ee30:	b.eq	1ee44 <elf_getaroff@@ELFUTILS_1.1.1+0x28>  // b.none
   1ee34:	ldr	x0, [sp, #24]
   1ee38:	ldr	x0, [x0, #8]
   1ee3c:	cmp	x0, #0x0
   1ee40:	b.ne	1ee4c <elf_getaroff@@ELFUTILS_1.1.1+0x30>  // b.any
   1ee44:	mov	x0, #0x0                   	// #0
   1ee48:	b	1eea4 <elf_getaroff@@ELFUTILS_1.1.1+0x88>
   1ee4c:	ldr	x0, [sp, #24]
   1ee50:	ldr	x0, [x0, #8]
   1ee54:	str	x0, [sp, #40]
   1ee58:	ldr	x0, [sp, #40]
   1ee5c:	ldr	w0, [x0, #24]
   1ee60:	cmp	w0, #0x1
   1ee64:	b.eq	1ee88 <elf_getaroff@@ELFUTILS_1.1.1+0x6c>  // b.none
   1ee68:	adrp	x0, 22000 <elf_compress_gnu@@ELFUTILS_1.7+0x195c>
   1ee6c:	add	x3, x0, #0x6d8
   1ee70:	mov	w2, #0x32                  	// #50
   1ee74:	adrp	x0, 22000 <elf_compress_gnu@@ELFUTILS_1.7+0x195c>
   1ee78:	add	x1, x0, #0x6a8
   1ee7c:	adrp	x0, 22000 <elf_compress_gnu@@ELFUTILS_1.7+0x195c>
   1ee80:	add	x0, x0, #0x6b8
   1ee84:	bl	33d0 <__assert_fail@plt>
   1ee88:	ldr	x0, [sp, #24]
   1ee8c:	ldr	x0, [x0, #40]
   1ee90:	mov	x1, x0
   1ee94:	ldr	x0, [sp, #40]
   1ee98:	ldr	x0, [x0, #40]
   1ee9c:	sub	x0, x1, x0
   1eea0:	sub	x0, x0, #0x3c
   1eea4:	ldp	x29, x30, [sp], #48
   1eea8:	ret
   1eeac:	sub	sp, sp, #0x30
   1eeb0:	str	x0, [sp, #8]
   1eeb4:	ldr	x0, [sp, #8]
   1eeb8:	str	x0, [sp, #40]
   1eebc:	ldr	x0, [sp, #40]
   1eec0:	ldrb	w0, [x0]
   1eec4:	and	x0, x0, #0xff
   1eec8:	str	x0, [sp, #32]
   1eecc:	ldr	x0, [sp, #32]
   1eed0:	cmp	x0, #0x0
   1eed4:	b.eq	1f018 <elf_getaroff@@ELFUTILS_1.1.1+0x1fc>  // b.none
   1eed8:	ldr	x0, [sp, #40]
   1eedc:	add	x0, x0, #0x1
   1eee0:	ldrb	w0, [x0]
   1eee4:	cmp	w0, #0x0
   1eee8:	b.eq	1f018 <elf_getaroff@@ELFUTILS_1.1.1+0x1fc>  // b.none
   1eeec:	ldr	x0, [sp, #32]
   1eef0:	lsl	x1, x0, #4
   1eef4:	ldr	x0, [sp, #40]
   1eef8:	add	x0, x0, #0x1
   1eefc:	ldrb	w0, [x0]
   1ef00:	and	x0, x0, #0xff
   1ef04:	add	x0, x1, x0
   1ef08:	str	x0, [sp, #32]
   1ef0c:	ldr	x0, [sp, #40]
   1ef10:	add	x0, x0, #0x2
   1ef14:	ldrb	w0, [x0]
   1ef18:	cmp	w0, #0x0
   1ef1c:	b.eq	1f018 <elf_getaroff@@ELFUTILS_1.1.1+0x1fc>  // b.none
   1ef20:	ldr	x0, [sp, #32]
   1ef24:	lsl	x1, x0, #4
   1ef28:	ldr	x0, [sp, #40]
   1ef2c:	add	x0, x0, #0x2
   1ef30:	ldrb	w0, [x0]
   1ef34:	and	x0, x0, #0xff
   1ef38:	add	x0, x1, x0
   1ef3c:	str	x0, [sp, #32]
   1ef40:	ldr	x0, [sp, #40]
   1ef44:	add	x0, x0, #0x3
   1ef48:	ldrb	w0, [x0]
   1ef4c:	cmp	w0, #0x0
   1ef50:	b.eq	1f018 <elf_getaroff@@ELFUTILS_1.1.1+0x1fc>  // b.none
   1ef54:	ldr	x0, [sp, #32]
   1ef58:	lsl	x1, x0, #4
   1ef5c:	ldr	x0, [sp, #40]
   1ef60:	add	x0, x0, #0x3
   1ef64:	ldrb	w0, [x0]
   1ef68:	and	x0, x0, #0xff
   1ef6c:	add	x0, x1, x0
   1ef70:	str	x0, [sp, #32]
   1ef74:	ldr	x0, [sp, #40]
   1ef78:	add	x0, x0, #0x4
   1ef7c:	ldrb	w0, [x0]
   1ef80:	cmp	w0, #0x0
   1ef84:	b.eq	1f018 <elf_getaroff@@ELFUTILS_1.1.1+0x1fc>  // b.none
   1ef88:	ldr	x0, [sp, #32]
   1ef8c:	lsl	x1, x0, #4
   1ef90:	ldr	x0, [sp, #40]
   1ef94:	add	x0, x0, #0x4
   1ef98:	ldrb	w0, [x0]
   1ef9c:	and	x0, x0, #0xff
   1efa0:	add	x0, x1, x0
   1efa4:	str	x0, [sp, #32]
   1efa8:	ldr	x0, [sp, #40]
   1efac:	add	x0, x0, #0x5
   1efb0:	str	x0, [sp, #40]
   1efb4:	b	1effc <elf_getaroff@@ELFUTILS_1.1.1+0x1e0>
   1efb8:	ldr	x0, [sp, #32]
   1efbc:	lsl	x1, x0, #4
   1efc0:	ldr	x0, [sp, #40]
   1efc4:	add	x2, x0, #0x1
   1efc8:	str	x2, [sp, #40]
   1efcc:	ldrb	w0, [x0]
   1efd0:	and	x0, x0, #0xff
   1efd4:	add	x0, x1, x0
   1efd8:	str	x0, [sp, #32]
   1efdc:	ldr	x0, [sp, #32]
   1efe0:	and	x0, x0, #0xf0000000
   1efe4:	str	x0, [sp, #24]
   1efe8:	ldr	x0, [sp, #24]
   1efec:	lsr	x0, x0, #24
   1eff0:	ldr	x1, [sp, #32]
   1eff4:	eor	x0, x1, x0
   1eff8:	str	x0, [sp, #32]
   1effc:	ldr	x0, [sp, #40]
   1f000:	ldrb	w0, [x0]
   1f004:	cmp	w0, #0x0
   1f008:	b.ne	1efb8 <elf_getaroff@@ELFUTILS_1.1.1+0x19c>  // b.any
   1f00c:	ldr	x0, [sp, #32]
   1f010:	and	x0, x0, #0xfffffff
   1f014:	str	x0, [sp, #32]
   1f018:	ldr	x0, [sp, #32]
   1f01c:	add	sp, sp, #0x30
   1f020:	ret

000000000001f024 <elf_gnu_hash@@ELFUTILS_1.2>:
   1f024:	sub	sp, sp, #0x20
   1f028:	str	x0, [sp, #8]
   1f02c:	mov	x0, #0x1505                	// #5381
   1f030:	str	x0, [sp, #24]
   1f034:	ldr	x0, [sp, #8]
   1f038:	ldrb	w0, [x0]
   1f03c:	strb	w0, [sp, #23]
   1f040:	b	1f078 <elf_gnu_hash@@ELFUTILS_1.2+0x54>
   1f044:	ldr	x1, [sp, #24]
   1f048:	mov	x0, x1
   1f04c:	lsl	x0, x0, #5
   1f050:	add	x1, x0, x1
   1f054:	ldrb	w0, [sp, #23]
   1f058:	add	x0, x1, x0
   1f05c:	str	x0, [sp, #24]
   1f060:	ldr	x0, [sp, #8]
   1f064:	add	x0, x0, #0x1
   1f068:	str	x0, [sp, #8]
   1f06c:	ldr	x0, [sp, #8]
   1f070:	ldrb	w0, [x0]
   1f074:	strb	w0, [sp, #23]
   1f078:	ldrb	w0, [sp, #23]
   1f07c:	cmp	w0, #0x0
   1f080:	b.ne	1f044 <elf_gnu_hash@@ELFUTILS_1.2+0x20>  // b.any
   1f084:	ldr	x0, [sp, #24]
   1f088:	and	x0, x0, #0xffffffff
   1f08c:	add	sp, sp, #0x20
   1f090:	ret

000000000001f094 <elf_scnshndx@@ELFUTILS_1.4>:
   1f094:	stp	x29, x30, [sp, #-96]!
   1f098:	mov	x29, sp
   1f09c:	str	x0, [sp, #24]
   1f0a0:	ldr	x0, [sp, #24]
   1f0a4:	ldr	w0, [x0, #124]
   1f0a8:	cmp	w0, #0x0
   1f0ac:	cset	w0, eq  // eq = none
   1f0b0:	and	w0, w0, #0xff
   1f0b4:	and	x0, x0, #0xff
   1f0b8:	cmp	x0, #0x0
   1f0bc:	b.eq	1f0d0 <elf_scnshndx@@ELFUTILS_1.4+0x3c>  // b.none
   1f0c0:	add	x0, sp, #0x20
   1f0c4:	mov	x1, x0
   1f0c8:	ldr	x0, [sp, #24]
   1f0cc:	bl	10e44 <gelf_getshdr@@ELFUTILS_1.0>
   1f0d0:	ldr	x0, [sp, #24]
   1f0d4:	ldr	w0, [x0, #124]
   1f0d8:	ldp	x29, x30, [sp], #96
   1f0dc:	ret
   1f0e0:	stp	x29, x30, [sp, #-48]!
   1f0e4:	mov	x29, sp
   1f0e8:	str	x0, [sp, #24]
   1f0ec:	ldr	x0, [sp, #24]
   1f0f0:	ldr	w0, [x0, #24]
   1f0f4:	cmp	w0, #0x1
   1f0f8:	b.ne	1f13c <elf_scnshndx@@ELFUTILS_1.4+0xa8>  // b.any
   1f0fc:	ldr	x0, [sp, #24]
   1f100:	ldr	x0, [x0, #72]
   1f104:	str	x0, [sp, #40]
   1f108:	b	1f130 <elf_scnshndx@@ELFUTILS_1.4+0x9c>
   1f10c:	ldr	x0, [sp, #40]
   1f110:	ldr	w0, [x0, #60]
   1f114:	cmp	w0, #0x0
   1f118:	b.eq	1f124 <elf_scnshndx@@ELFUTILS_1.4+0x90>  // b.none
   1f11c:	ldr	x0, [sp, #40]
   1f120:	bl	1f0e0 <elf_scnshndx@@ELFUTILS_1.4+0x4c>
   1f124:	ldr	x0, [sp, #40]
   1f128:	ldr	x0, [x0, #16]
   1f12c:	str	x0, [sp, #40]
   1f130:	ldr	x0, [sp, #40]
   1f134:	cmp	x0, #0x0
   1f138:	b.ne	1f10c <elf_scnshndx@@ELFUTILS_1.4+0x78>  // b.any
   1f13c:	nop
   1f140:	ldp	x29, x30, [sp], #48
   1f144:	ret
   1f148:	stp	x29, x30, [sp, #-48]!
   1f14c:	mov	x29, sp
   1f150:	str	x0, [sp, #24]
   1f154:	ldr	x0, [sp, #24]
   1f158:	ldr	w0, [x0, #24]
   1f15c:	cmp	w0, #0x1
   1f160:	b.ne	1f1a4 <elf_scnshndx@@ELFUTILS_1.4+0x110>  // b.any
   1f164:	ldr	x0, [sp, #24]
   1f168:	ldr	x0, [x0, #72]
   1f16c:	str	x0, [sp, #40]
   1f170:	b	1f198 <elf_scnshndx@@ELFUTILS_1.4+0x104>
   1f174:	ldr	x0, [sp, #40]
   1f178:	ldr	w0, [x0, #60]
   1f17c:	cmp	w0, #0x0
   1f180:	b.eq	1f18c <elf_scnshndx@@ELFUTILS_1.4+0xf8>  // b.none
   1f184:	ldr	x0, [sp, #40]
   1f188:	bl	1f148 <elf_scnshndx@@ELFUTILS_1.4+0xb4>
   1f18c:	ldr	x0, [sp, #40]
   1f190:	ldr	x0, [x0, #16]
   1f194:	str	x0, [sp, #40]
   1f198:	ldr	x0, [sp, #40]
   1f19c:	cmp	x0, #0x0
   1f1a0:	b.ne	1f174 <elf_scnshndx@@ELFUTILS_1.4+0xe0>  // b.any
   1f1a4:	nop
   1f1a8:	ldp	x29, x30, [sp], #48
   1f1ac:	ret

000000000001f1b0 <elf32_getchdr@@ELFUTILS_1.7>:
   1f1b0:	stp	x29, x30, [sp, #-48]!
   1f1b4:	mov	x29, sp
   1f1b8:	str	x0, [sp, #24]
   1f1bc:	ldr	x0, [sp, #24]
   1f1c0:	bl	3340 <elf32_getshdr@plt>
   1f1c4:	str	x0, [sp, #40]
   1f1c8:	ldr	x0, [sp, #40]
   1f1cc:	cmp	x0, #0x0
   1f1d0:	b.ne	1f1dc <elf32_getchdr@@ELFUTILS_1.7+0x2c>  // b.any
   1f1d4:	mov	x0, #0x0                   	// #0
   1f1d8:	b	1f2b0 <elf32_getchdr@@ELFUTILS_1.7+0x100>
   1f1dc:	ldr	x0, [sp, #40]
   1f1e0:	ldr	w0, [x0, #8]
   1f1e4:	and	w0, w0, #0x2
   1f1e8:	cmp	w0, #0x0
   1f1ec:	b.eq	1f200 <elf32_getchdr@@ELFUTILS_1.7+0x50>  // b.none
   1f1f0:	mov	w0, #0x2d                  	// #45
   1f1f4:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1f1f8:	mov	x0, #0x0                   	// #0
   1f1fc:	b	1f2b0 <elf32_getchdr@@ELFUTILS_1.7+0x100>
   1f200:	ldr	x0, [sp, #40]
   1f204:	ldr	w0, [x0, #4]
   1f208:	cmp	w0, #0x0
   1f20c:	b.eq	1f220 <elf32_getchdr@@ELFUTILS_1.7+0x70>  // b.none
   1f210:	ldr	x0, [sp, #40]
   1f214:	ldr	w0, [x0, #4]
   1f218:	cmp	w0, #0x8
   1f21c:	b.ne	1f230 <elf32_getchdr@@ELFUTILS_1.7+0x80>  // b.any
   1f220:	mov	w0, #0x2c                  	// #44
   1f224:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1f228:	mov	x0, #0x0                   	// #0
   1f22c:	b	1f2b0 <elf32_getchdr@@ELFUTILS_1.7+0x100>
   1f230:	ldr	x0, [sp, #40]
   1f234:	ldr	w0, [x0, #8]
   1f238:	and	w0, w0, #0x800
   1f23c:	cmp	w0, #0x0
   1f240:	b.ne	1f254 <elf32_getchdr@@ELFUTILS_1.7+0xa4>  // b.any
   1f244:	mov	w0, #0x2e                  	// #46
   1f248:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1f24c:	mov	x0, #0x0                   	// #0
   1f250:	b	1f2b0 <elf32_getchdr@@ELFUTILS_1.7+0x100>
   1f254:	mov	x1, #0x0                   	// #0
   1f258:	ldr	x0, [sp, #24]
   1f25c:	bl	3390 <elf_getdata@plt>
   1f260:	str	x0, [sp, #32]
   1f264:	ldr	x0, [sp, #32]
   1f268:	cmp	x0, #0x0
   1f26c:	b.ne	1f278 <elf32_getchdr@@ELFUTILS_1.7+0xc8>  // b.any
   1f270:	mov	x0, #0x0                   	// #0
   1f274:	b	1f2b0 <elf32_getchdr@@ELFUTILS_1.7+0x100>
   1f278:	ldr	x0, [sp, #32]
   1f27c:	ldr	x0, [x0, #16]
   1f280:	cmp	x0, #0xb
   1f284:	b.ls	1f298 <elf32_getchdr@@ELFUTILS_1.7+0xe8>  // b.plast
   1f288:	ldr	x0, [sp, #32]
   1f28c:	ldr	x0, [x0]
   1f290:	cmp	x0, #0x0
   1f294:	b.ne	1f2a8 <elf32_getchdr@@ELFUTILS_1.7+0xf8>  // b.any
   1f298:	mov	w0, #0x21                  	// #33
   1f29c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1f2a0:	mov	x0, #0x0                   	// #0
   1f2a4:	b	1f2b0 <elf32_getchdr@@ELFUTILS_1.7+0x100>
   1f2a8:	ldr	x0, [sp, #32]
   1f2ac:	ldr	x0, [x0]
   1f2b0:	ldp	x29, x30, [sp], #48
   1f2b4:	ret
   1f2b8:	stp	x29, x30, [sp, #-48]!
   1f2bc:	mov	x29, sp
   1f2c0:	str	x0, [sp, #24]
   1f2c4:	ldr	x0, [sp, #24]
   1f2c8:	ldr	w0, [x0, #24]
   1f2cc:	cmp	w0, #0x1
   1f2d0:	b.ne	1f314 <elf32_getchdr@@ELFUTILS_1.7+0x164>  // b.any
   1f2d4:	ldr	x0, [sp, #24]
   1f2d8:	ldr	x0, [x0, #72]
   1f2dc:	str	x0, [sp, #40]
   1f2e0:	b	1f308 <elf32_getchdr@@ELFUTILS_1.7+0x158>
   1f2e4:	ldr	x0, [sp, #40]
   1f2e8:	ldr	w0, [x0, #60]
   1f2ec:	cmp	w0, #0x0
   1f2f0:	b.eq	1f2fc <elf32_getchdr@@ELFUTILS_1.7+0x14c>  // b.none
   1f2f4:	ldr	x0, [sp, #40]
   1f2f8:	bl	1f2b8 <elf32_getchdr@@ELFUTILS_1.7+0x108>
   1f2fc:	ldr	x0, [sp, #40]
   1f300:	ldr	x0, [x0, #16]
   1f304:	str	x0, [sp, #40]
   1f308:	ldr	x0, [sp, #40]
   1f30c:	cmp	x0, #0x0
   1f310:	b.ne	1f2e4 <elf32_getchdr@@ELFUTILS_1.7+0x134>  // b.any
   1f314:	nop
   1f318:	ldp	x29, x30, [sp], #48
   1f31c:	ret
   1f320:	stp	x29, x30, [sp, #-48]!
   1f324:	mov	x29, sp
   1f328:	str	x0, [sp, #24]
   1f32c:	ldr	x0, [sp, #24]
   1f330:	ldr	w0, [x0, #24]
   1f334:	cmp	w0, #0x1
   1f338:	b.ne	1f37c <elf32_getchdr@@ELFUTILS_1.7+0x1cc>  // b.any
   1f33c:	ldr	x0, [sp, #24]
   1f340:	ldr	x0, [x0, #72]
   1f344:	str	x0, [sp, #40]
   1f348:	b	1f370 <elf32_getchdr@@ELFUTILS_1.7+0x1c0>
   1f34c:	ldr	x0, [sp, #40]
   1f350:	ldr	w0, [x0, #60]
   1f354:	cmp	w0, #0x0
   1f358:	b.eq	1f364 <elf32_getchdr@@ELFUTILS_1.7+0x1b4>  // b.none
   1f35c:	ldr	x0, [sp, #40]
   1f360:	bl	1f320 <elf32_getchdr@@ELFUTILS_1.7+0x170>
   1f364:	ldr	x0, [sp, #40]
   1f368:	ldr	x0, [x0, #16]
   1f36c:	str	x0, [sp, #40]
   1f370:	ldr	x0, [sp, #40]
   1f374:	cmp	x0, #0x0
   1f378:	b.ne	1f34c <elf32_getchdr@@ELFUTILS_1.7+0x19c>  // b.any
   1f37c:	nop
   1f380:	ldp	x29, x30, [sp], #48
   1f384:	ret

000000000001f388 <elf64_getchdr@@ELFUTILS_1.7>:
   1f388:	stp	x29, x30, [sp, #-48]!
   1f38c:	mov	x29, sp
   1f390:	str	x0, [sp, #24]
   1f394:	ldr	x0, [sp, #24]
   1f398:	bl	3190 <elf64_getshdr@plt>
   1f39c:	str	x0, [sp, #40]
   1f3a0:	ldr	x0, [sp, #40]
   1f3a4:	cmp	x0, #0x0
   1f3a8:	b.ne	1f3b4 <elf64_getchdr@@ELFUTILS_1.7+0x2c>  // b.any
   1f3ac:	mov	x0, #0x0                   	// #0
   1f3b0:	b	1f488 <elf64_getchdr@@ELFUTILS_1.7+0x100>
   1f3b4:	ldr	x0, [sp, #40]
   1f3b8:	ldr	x0, [x0, #8]
   1f3bc:	and	x0, x0, #0x2
   1f3c0:	cmp	x0, #0x0
   1f3c4:	b.eq	1f3d8 <elf64_getchdr@@ELFUTILS_1.7+0x50>  // b.none
   1f3c8:	mov	w0, #0x2d                  	// #45
   1f3cc:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1f3d0:	mov	x0, #0x0                   	// #0
   1f3d4:	b	1f488 <elf64_getchdr@@ELFUTILS_1.7+0x100>
   1f3d8:	ldr	x0, [sp, #40]
   1f3dc:	ldr	w0, [x0, #4]
   1f3e0:	cmp	w0, #0x0
   1f3e4:	b.eq	1f3f8 <elf64_getchdr@@ELFUTILS_1.7+0x70>  // b.none
   1f3e8:	ldr	x0, [sp, #40]
   1f3ec:	ldr	w0, [x0, #4]
   1f3f0:	cmp	w0, #0x8
   1f3f4:	b.ne	1f408 <elf64_getchdr@@ELFUTILS_1.7+0x80>  // b.any
   1f3f8:	mov	w0, #0x2c                  	// #44
   1f3fc:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1f400:	mov	x0, #0x0                   	// #0
   1f404:	b	1f488 <elf64_getchdr@@ELFUTILS_1.7+0x100>
   1f408:	ldr	x0, [sp, #40]
   1f40c:	ldr	x0, [x0, #8]
   1f410:	and	x0, x0, #0x800
   1f414:	cmp	x0, #0x0
   1f418:	b.ne	1f42c <elf64_getchdr@@ELFUTILS_1.7+0xa4>  // b.any
   1f41c:	mov	w0, #0x2e                  	// #46
   1f420:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1f424:	mov	x0, #0x0                   	// #0
   1f428:	b	1f488 <elf64_getchdr@@ELFUTILS_1.7+0x100>
   1f42c:	mov	x1, #0x0                   	// #0
   1f430:	ldr	x0, [sp, #24]
   1f434:	bl	3390 <elf_getdata@plt>
   1f438:	str	x0, [sp, #32]
   1f43c:	ldr	x0, [sp, #32]
   1f440:	cmp	x0, #0x0
   1f444:	b.ne	1f450 <elf64_getchdr@@ELFUTILS_1.7+0xc8>  // b.any
   1f448:	mov	x0, #0x0                   	// #0
   1f44c:	b	1f488 <elf64_getchdr@@ELFUTILS_1.7+0x100>
   1f450:	ldr	x0, [sp, #32]
   1f454:	ldr	x0, [x0, #16]
   1f458:	cmp	x0, #0x17
   1f45c:	b.ls	1f470 <elf64_getchdr@@ELFUTILS_1.7+0xe8>  // b.plast
   1f460:	ldr	x0, [sp, #32]
   1f464:	ldr	x0, [x0]
   1f468:	cmp	x0, #0x0
   1f46c:	b.ne	1f480 <elf64_getchdr@@ELFUTILS_1.7+0xf8>  // b.any
   1f470:	mov	w0, #0x21                  	// #33
   1f474:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1f478:	mov	x0, #0x0                   	// #0
   1f47c:	b	1f488 <elf64_getchdr@@ELFUTILS_1.7+0x100>
   1f480:	ldr	x0, [sp, #32]
   1f484:	ldr	x0, [x0]
   1f488:	ldp	x29, x30, [sp], #48
   1f48c:	ret

000000000001f490 <gelf_getchdr@@ELFUTILS_1.7>:
   1f490:	stp	x29, x30, [sp, #-48]!
   1f494:	mov	x29, sp
   1f498:	str	x0, [sp, #24]
   1f49c:	str	x1, [sp, #16]
   1f4a0:	ldr	x0, [sp, #24]
   1f4a4:	cmp	x0, #0x0
   1f4a8:	b.ne	1f4b4 <gelf_getchdr@@ELFUTILS_1.7+0x24>  // b.any
   1f4ac:	mov	x0, #0x0                   	// #0
   1f4b0:	b	1f584 <gelf_getchdr@@ELFUTILS_1.7+0xf4>
   1f4b4:	ldr	x0, [sp, #16]
   1f4b8:	cmp	x0, #0x0
   1f4bc:	b.ne	1f4d0 <gelf_getchdr@@ELFUTILS_1.7+0x40>  // b.any
   1f4c0:	mov	w0, #0x17                  	// #23
   1f4c4:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1f4c8:	mov	x0, #0x0                   	// #0
   1f4cc:	b	1f584 <gelf_getchdr@@ELFUTILS_1.7+0xf4>
   1f4d0:	ldr	x0, [sp, #24]
   1f4d4:	ldr	x0, [x0, #136]
   1f4d8:	ldr	w0, [x0, #32]
   1f4dc:	cmp	w0, #0x1
   1f4e0:	b.ne	1f540 <gelf_getchdr@@ELFUTILS_1.7+0xb0>  // b.any
   1f4e4:	ldr	x0, [sp, #24]
   1f4e8:	bl	3110 <elf32_getchdr@plt>
   1f4ec:	str	x0, [sp, #32]
   1f4f0:	ldr	x0, [sp, #32]
   1f4f4:	cmp	x0, #0x0
   1f4f8:	b.ne	1f504 <gelf_getchdr@@ELFUTILS_1.7+0x74>  // b.any
   1f4fc:	mov	x0, #0x0                   	// #0
   1f500:	b	1f584 <gelf_getchdr@@ELFUTILS_1.7+0xf4>
   1f504:	ldr	x0, [sp, #32]
   1f508:	ldr	w1, [x0]
   1f50c:	ldr	x0, [sp, #16]
   1f510:	str	w1, [x0]
   1f514:	ldr	x0, [sp, #32]
   1f518:	ldr	w0, [x0, #4]
   1f51c:	mov	w1, w0
   1f520:	ldr	x0, [sp, #16]
   1f524:	str	x1, [x0, #8]
   1f528:	ldr	x0, [sp, #32]
   1f52c:	ldr	w0, [x0, #8]
   1f530:	mov	w1, w0
   1f534:	ldr	x0, [sp, #16]
   1f538:	str	x1, [x0, #16]
   1f53c:	b	1f580 <gelf_getchdr@@ELFUTILS_1.7+0xf0>
   1f540:	ldr	x0, [sp, #24]
   1f544:	bl	3210 <elf64_getchdr@plt>
   1f548:	str	x0, [sp, #40]
   1f54c:	ldr	x0, [sp, #40]
   1f550:	cmp	x0, #0x0
   1f554:	b.ne	1f560 <gelf_getchdr@@ELFUTILS_1.7+0xd0>  // b.any
   1f558:	mov	x0, #0x0                   	// #0
   1f55c:	b	1f584 <gelf_getchdr@@ELFUTILS_1.7+0xf4>
   1f560:	ldr	x1, [sp, #16]
   1f564:	ldr	x0, [sp, #40]
   1f568:	mov	x2, x1
   1f56c:	mov	x3, x0
   1f570:	ldp	x0, x1, [x3]
   1f574:	stp	x0, x1, [x2]
   1f578:	ldr	x0, [x3, #16]
   1f57c:	str	x0, [x2, #16]
   1f580:	ldr	x0, [sp, #16]
   1f584:	ldp	x29, x30, [sp], #48
   1f588:	ret
   1f58c:	sub	sp, sp, #0x10
   1f590:	str	w0, [sp, #12]
   1f594:	ldr	w0, [sp, #12]
   1f598:	rev	w0, w0
   1f59c:	add	sp, sp, #0x10
   1f5a0:	ret
   1f5a4:	sub	sp, sp, #0x10
   1f5a8:	str	x0, [sp, #8]
   1f5ac:	ldr	x0, [sp, #8]
   1f5b0:	rev	x0, x0
   1f5b4:	add	sp, sp, #0x10
   1f5b8:	ret
   1f5bc:	stp	x29, x30, [sp, #-48]!
   1f5c0:	mov	x29, sp
   1f5c4:	str	x0, [sp, #24]
   1f5c8:	ldr	x0, [sp, #24]
   1f5cc:	ldr	w0, [x0, #24]
   1f5d0:	cmp	w0, #0x1
   1f5d4:	b.ne	1f618 <gelf_getchdr@@ELFUTILS_1.7+0x188>  // b.any
   1f5d8:	ldr	x0, [sp, #24]
   1f5dc:	ldr	x0, [x0, #72]
   1f5e0:	str	x0, [sp, #40]
   1f5e4:	b	1f60c <gelf_getchdr@@ELFUTILS_1.7+0x17c>
   1f5e8:	ldr	x0, [sp, #40]
   1f5ec:	ldr	w0, [x0, #60]
   1f5f0:	cmp	w0, #0x0
   1f5f4:	b.eq	1f600 <gelf_getchdr@@ELFUTILS_1.7+0x170>  // b.none
   1f5f8:	ldr	x0, [sp, #40]
   1f5fc:	bl	1f5bc <gelf_getchdr@@ELFUTILS_1.7+0x12c>
   1f600:	ldr	x0, [sp, #40]
   1f604:	ldr	x0, [x0, #16]
   1f608:	str	x0, [sp, #40]
   1f60c:	ldr	x0, [sp, #40]
   1f610:	cmp	x0, #0x0
   1f614:	b.ne	1f5e8 <gelf_getchdr@@ELFUTILS_1.7+0x158>  // b.any
   1f618:	nop
   1f61c:	ldp	x29, x30, [sp], #48
   1f620:	ret
   1f624:	stp	x29, x30, [sp, #-48]!
   1f628:	mov	x29, sp
   1f62c:	str	x0, [sp, #24]
   1f630:	ldr	x0, [sp, #24]
   1f634:	ldr	w0, [x0, #24]
   1f638:	cmp	w0, #0x1
   1f63c:	b.ne	1f680 <gelf_getchdr@@ELFUTILS_1.7+0x1f0>  // b.any
   1f640:	ldr	x0, [sp, #24]
   1f644:	ldr	x0, [x0, #72]
   1f648:	str	x0, [sp, #40]
   1f64c:	b	1f674 <gelf_getchdr@@ELFUTILS_1.7+0x1e4>
   1f650:	ldr	x0, [sp, #40]
   1f654:	ldr	w0, [x0, #60]
   1f658:	cmp	w0, #0x0
   1f65c:	b.eq	1f668 <gelf_getchdr@@ELFUTILS_1.7+0x1d8>  // b.none
   1f660:	ldr	x0, [sp, #40]
   1f664:	bl	1f624 <gelf_getchdr@@ELFUTILS_1.7+0x194>
   1f668:	ldr	x0, [sp, #40]
   1f66c:	ldr	x0, [x0, #16]
   1f670:	str	x0, [sp, #40]
   1f674:	ldr	x0, [sp, #40]
   1f678:	cmp	x0, #0x0
   1f67c:	b.ne	1f650 <gelf_getchdr@@ELFUTILS_1.7+0x1c0>  // b.any
   1f680:	nop
   1f684:	ldp	x29, x30, [sp], #48
   1f688:	ret
   1f68c:	stp	x29, x30, [sp, #-48]!
   1f690:	mov	x29, sp
   1f694:	str	x0, [sp, #40]
   1f698:	str	x1, [sp, #32]
   1f69c:	str	x2, [sp, #24]
   1f6a0:	str	x3, [sp, #16]
   1f6a4:	ldr	x0, [sp, #32]
   1f6a8:	bl	32e0 <deflateEnd@plt>
   1f6ac:	ldr	x0, [sp, #24]
   1f6b0:	bl	32a0 <free@plt>
   1f6b4:	ldr	x0, [sp, #16]
   1f6b8:	cmp	x0, #0x0
   1f6bc:	b.eq	1f6cc <gelf_getchdr@@ELFUTILS_1.7+0x23c>  // b.none
   1f6c0:	ldr	x0, [sp, #16]
   1f6c4:	ldr	x0, [x0]
   1f6c8:	bl	32a0 <free@plt>
   1f6cc:	ldr	x0, [sp, #40]
   1f6d0:	ldp	x29, x30, [sp], #48
   1f6d4:	ret
   1f6d8:	stp	x29, x30, [sp, #-288]!
   1f6dc:	mov	x29, sp
   1f6e0:	str	x0, [sp, #56]
   1f6e4:	str	x1, [sp, #48]
   1f6e8:	str	w2, [sp, #44]
   1f6ec:	str	x3, [sp, #32]
   1f6f0:	str	x4, [sp, #24]
   1f6f4:	str	x5, [sp, #16]
   1f6f8:	strb	w6, [sp, #43]
   1f6fc:	mov	x1, #0x0                   	// #0
   1f700:	ldr	x0, [sp, #56]
   1f704:	bl	3390 <elf_getdata@plt>
   1f708:	str	x0, [sp, #280]
   1f70c:	ldr	x0, [sp, #280]
   1f710:	cmp	x0, #0x0
   1f714:	b.ne	1f720 <gelf_getchdr@@ELFUTILS_1.7+0x290>  // b.any
   1f718:	mov	x0, #0x0                   	// #0
   1f71c:	b	1fba0 <gelf_getchdr@@ELFUTILS_1.7+0x710>
   1f720:	ldr	x1, [sp, #280]
   1f724:	ldr	x0, [sp, #56]
   1f728:	bl	3390 <elf_getdata@plt>
   1f72c:	str	x0, [sp, #272]
   1f730:	ldr	x0, [sp, #272]
   1f734:	cmp	x0, #0x0
   1f738:	b.ne	1f770 <gelf_getchdr@@ELFUTILS_1.7+0x2e0>  // b.any
   1f73c:	ldrb	w0, [sp, #43]
   1f740:	eor	w0, w0, #0x1
   1f744:	and	w0, w0, #0xff
   1f748:	cmp	w0, #0x0
   1f74c:	b.eq	1f770 <gelf_getchdr@@ELFUTILS_1.7+0x2e0>  // b.none
   1f750:	ldr	x0, [sp, #280]
   1f754:	ldr	x1, [x0, #16]
   1f758:	ldr	x0, [sp, #48]
   1f75c:	add	x0, x0, #0xb
   1f760:	cmp	x1, x0
   1f764:	b.hi	1f770 <gelf_getchdr@@ELFUTILS_1.7+0x2e0>  // b.pmore
   1f768:	mov	x0, #0xffffffffffffffff    	// #-1
   1f76c:	b	1fba0 <gelf_getchdr@@ELFUTILS_1.7+0x710>
   1f770:	ldr	x0, [sp, #280]
   1f774:	ldr	x1, [x0, #32]
   1f778:	ldr	x0, [sp, #24]
   1f77c:	str	x1, [x0]
   1f780:	ldr	x0, [sp, #280]
   1f784:	ldr	x1, [x0, #16]
   1f788:	ldr	x0, [sp, #32]
   1f78c:	str	x1, [x0]
   1f790:	ldr	x0, [sp, #280]
   1f794:	ldr	x0, [x0, #16]
   1f798:	lsr	x0, x0, #3
   1f79c:	ldr	x1, [sp, #48]
   1f7a0:	add	x0, x1, x0
   1f7a4:	str	x0, [sp, #232]
   1f7a8:	ldr	x0, [sp, #232]
   1f7ac:	lsl	x0, x0, #1
   1f7b0:	str	x0, [sp, #264]
   1f7b4:	ldr	x0, [sp, #264]
   1f7b8:	bl	3140 <malloc@plt>
   1f7bc:	str	x0, [sp, #256]
   1f7c0:	ldr	x0, [sp, #256]
   1f7c4:	cmp	x0, #0x0
   1f7c8:	b.ne	1f7dc <gelf_getchdr@@ELFUTILS_1.7+0x34c>  // b.any
   1f7cc:	mov	w0, #0x8                   	// #8
   1f7d0:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1f7d4:	mov	x0, #0x0                   	// #0
   1f7d8:	b	1fba0 <gelf_getchdr@@ELFUTILS_1.7+0x710>
   1f7dc:	ldr	x0, [sp, #48]
   1f7e0:	str	x0, [sp, #248]
   1f7e4:	str	xzr, [sp, #168]
   1f7e8:	str	xzr, [sp, #176]
   1f7ec:	str	xzr, [sp, #184]
   1f7f0:	add	x4, sp, #0x68
   1f7f4:	mov	w3, #0x70                  	// #112
   1f7f8:	adrp	x0, 22000 <elf_compress_gnu@@ELFUTILS_1.7+0x195c>
   1f7fc:	add	x2, x0, #0x6e8
   1f800:	mov	w1, #0x9                   	// #9
   1f804:	mov	x0, x4
   1f808:	bl	31f0 <deflateInit_@plt>
   1f80c:	str	w0, [sp, #228]
   1f810:	ldr	w0, [sp, #228]
   1f814:	cmp	w0, #0x0
   1f818:	b.eq	1f834 <gelf_getchdr@@ELFUTILS_1.7+0x3a4>  // b.none
   1f81c:	ldr	x0, [sp, #256]
   1f820:	bl	32a0 <free@plt>
   1f824:	mov	w0, #0x31                  	// #49
   1f828:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1f82c:	mov	x0, #0x0                   	// #0
   1f830:	b	1fba0 <gelf_getchdr@@ELFUTILS_1.7+0x710>
   1f834:	str	xzr, [sp, #64]
   1f838:	str	wzr, [sp, #244]
   1f83c:	ldr	x1, [sp, #280]
   1f840:	add	x0, sp, #0x40
   1f844:	ldp	x2, x3, [x1]
   1f848:	stp	x2, x3, [x0]
   1f84c:	ldp	x2, x3, [x1, #16]
   1f850:	stp	x2, x3, [x0, #16]
   1f854:	ldr	x1, [x1, #32]
   1f858:	str	x1, [x0, #32]
   1f85c:	ldr	w0, [sp, #44]
   1f860:	cmp	w0, #0x1
   1f864:	b.eq	1f880 <gelf_getchdr@@ELFUTILS_1.7+0x3f0>  // b.none
   1f868:	ldr	x0, [sp, #280]
   1f86c:	ldr	x0, [x0, #16]
   1f870:	cmp	x0, #0x0
   1f874:	b.eq	1f880 <gelf_getchdr@@ELFUTILS_1.7+0x3f0>  // b.none
   1f878:	mov	w0, #0x1                   	// #1
   1f87c:	b	1f884 <gelf_getchdr@@ELFUTILS_1.7+0x3f4>
   1f880:	mov	w0, #0x0                   	// #0
   1f884:	strb	w0, [sp, #227]
   1f888:	ldrb	w0, [sp, #227]
   1f88c:	and	w0, w0, #0x1
   1f890:	strb	w0, [sp, #227]
   1f894:	ldrb	w0, [sp, #227]
   1f898:	cmp	w0, #0x0
   1f89c:	b.eq	1f924 <gelf_getchdr@@ELFUTILS_1.7+0x494>  // b.none
   1f8a0:	ldr	x0, [sp, #280]
   1f8a4:	ldr	x0, [x0, #16]
   1f8a8:	bl	3140 <malloc@plt>
   1f8ac:	str	x0, [sp, #64]
   1f8b0:	ldr	x0, [sp, #64]
   1f8b4:	cmp	x0, #0x0
   1f8b8:	b.ne	1f8e0 <gelf_getchdr@@ELFUTILS_1.7+0x450>  // b.any
   1f8bc:	mov	w0, #0x8                   	// #8
   1f8c0:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1f8c4:	add	x0, sp, #0x68
   1f8c8:	mov	x3, #0x0                   	// #0
   1f8cc:	ldr	x2, [sp, #256]
   1f8d0:	mov	x1, x0
   1f8d4:	mov	x0, #0x0                   	// #0
   1f8d8:	bl	1f68c <gelf_getchdr@@ELFUTILS_1.7+0x1fc>
   1f8dc:	b	1fba0 <gelf_getchdr@@ELFUTILS_1.7+0x710>
   1f8e0:	ldr	x0, [sp, #56]
   1f8e4:	ldr	x0, [x0, #136]
   1f8e8:	ldr	w2, [sp, #44]
   1f8ec:	add	x1, sp, #0x40
   1f8f0:	mov	w3, w2
   1f8f4:	ldr	x2, [sp, #280]
   1f8f8:	bl	31d0 <gelf_xlatetof@plt>
   1f8fc:	cmp	x0, #0x0
   1f900:	b.ne	1f924 <gelf_getchdr@@ELFUTILS_1.7+0x494>  // b.any
   1f904:	add	x1, sp, #0x40
   1f908:	add	x0, sp, #0x68
   1f90c:	mov	x3, x1
   1f910:	ldr	x2, [sp, #256]
   1f914:	mov	x1, x0
   1f918:	mov	x0, #0x0                   	// #0
   1f91c:	bl	1f68c <gelf_getchdr@@ELFUTILS_1.7+0x1fc>
   1f920:	b	1fba0 <gelf_getchdr@@ELFUTILS_1.7+0x710>
   1f924:	ldr	x0, [sp, #80]
   1f928:	str	w0, [sp, #112]
   1f92c:	ldr	x0, [sp, #64]
   1f930:	str	x0, [sp, #104]
   1f934:	ldr	x0, [sp, #272]
   1f938:	str	x0, [sp, #280]
   1f93c:	ldr	x0, [sp, #280]
   1f940:	cmp	x0, #0x0
   1f944:	b.eq	1f998 <gelf_getchdr@@ELFUTILS_1.7+0x508>  // b.none
   1f948:	ldr	x0, [sp, #280]
   1f94c:	ldr	x1, [x0, #32]
   1f950:	ldr	x0, [sp, #24]
   1f954:	ldr	x0, [x0]
   1f958:	cmp	x1, x0
   1f95c:	csel	x1, x1, x0, cs  // cs = hs, nlast
   1f960:	ldr	x0, [sp, #24]
   1f964:	str	x1, [x0]
   1f968:	ldr	x0, [sp, #32]
   1f96c:	ldr	x1, [x0]
   1f970:	ldr	x0, [sp, #280]
   1f974:	ldr	x0, [x0, #16]
   1f978:	add	x1, x1, x0
   1f97c:	ldr	x0, [sp, #32]
   1f980:	str	x1, [x0]
   1f984:	ldr	x1, [sp, #280]
   1f988:	ldr	x0, [sp, #56]
   1f98c:	bl	3390 <elf_getdata@plt>
   1f990:	str	x0, [sp, #272]
   1f994:	b	1f9a0 <gelf_getchdr@@ELFUTILS_1.7+0x510>
   1f998:	mov	w0, #0x4                   	// #4
   1f99c:	str	w0, [sp, #244]
   1f9a0:	ldr	x0, [sp, #264]
   1f9a4:	mov	w1, w0
   1f9a8:	ldr	x0, [sp, #248]
   1f9ac:	sub	w0, w1, w0
   1f9b0:	str	w0, [sp, #136]
   1f9b4:	ldr	x1, [sp, #256]
   1f9b8:	ldr	x0, [sp, #248]
   1f9bc:	add	x0, x1, x0
   1f9c0:	str	x0, [sp, #128]
   1f9c4:	add	x0, sp, #0x68
   1f9c8:	ldr	w1, [sp, #244]
   1f9cc:	bl	3160 <deflate@plt>
   1f9d0:	str	w0, [sp, #228]
   1f9d4:	ldr	w0, [sp, #228]
   1f9d8:	cmn	w0, #0x2
   1f9dc:	b.ne	1fa18 <gelf_getchdr@@ELFUTILS_1.7+0x588>  // b.any
   1f9e0:	mov	w0, #0x31                  	// #49
   1f9e4:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1f9e8:	ldrb	w0, [sp, #227]
   1f9ec:	cmp	w0, #0x0
   1f9f0:	b.eq	1f9fc <gelf_getchdr@@ELFUTILS_1.7+0x56c>  // b.none
   1f9f4:	add	x0, sp, #0x40
   1f9f8:	b	1fa00 <gelf_getchdr@@ELFUTILS_1.7+0x570>
   1f9fc:	mov	x0, #0x0                   	// #0
   1fa00:	add	x1, sp, #0x68
   1fa04:	mov	x3, x0
   1fa08:	ldr	x2, [sp, #256]
   1fa0c:	mov	x0, #0x0                   	// #0
   1fa10:	bl	1f68c <gelf_getchdr@@ELFUTILS_1.7+0x1fc>
   1fa14:	b	1fba0 <gelf_getchdr@@ELFUTILS_1.7+0x710>
   1fa18:	ldr	x1, [sp, #264]
   1fa1c:	ldr	x0, [sp, #248]
   1fa20:	sub	x1, x1, x0
   1fa24:	ldr	w0, [sp, #136]
   1fa28:	mov	w0, w0
   1fa2c:	sub	x0, x1, x0
   1fa30:	ldr	x1, [sp, #248]
   1fa34:	add	x0, x1, x0
   1fa38:	str	x0, [sp, #248]
   1fa3c:	ldrb	w0, [sp, #43]
   1fa40:	eor	w0, w0, #0x1
   1fa44:	and	w0, w0, #0xff
   1fa48:	cmp	w0, #0x0
   1fa4c:	b.eq	1faa0 <gelf_getchdr@@ELFUTILS_1.7+0x610>  // b.none
   1fa50:	ldr	w0, [sp, #244]
   1fa54:	cmp	w0, #0x4
   1fa58:	b.ne	1faa0 <gelf_getchdr@@ELFUTILS_1.7+0x610>  // b.any
   1fa5c:	ldr	x0, [sp, #32]
   1fa60:	ldr	x0, [x0]
   1fa64:	ldr	x1, [sp, #248]
   1fa68:	cmp	x1, x0
   1fa6c:	b.cc	1faa0 <gelf_getchdr@@ELFUTILS_1.7+0x610>  // b.lo, b.ul, b.last
   1fa70:	ldrb	w0, [sp, #227]
   1fa74:	cmp	w0, #0x0
   1fa78:	b.eq	1fa84 <gelf_getchdr@@ELFUTILS_1.7+0x5f4>  // b.none
   1fa7c:	add	x0, sp, #0x40
   1fa80:	b	1fa88 <gelf_getchdr@@ELFUTILS_1.7+0x5f8>
   1fa84:	mov	x0, #0x0                   	// #0
   1fa88:	add	x1, sp, #0x68
   1fa8c:	mov	x3, x0
   1fa90:	ldr	x2, [sp, #256]
   1fa94:	mov	x0, #0xffffffffffffffff    	// #-1
   1fa98:	bl	1f68c <gelf_getchdr@@ELFUTILS_1.7+0x1fc>
   1fa9c:	b	1fba0 <gelf_getchdr@@ELFUTILS_1.7+0x710>
   1faa0:	ldr	w0, [sp, #136]
   1faa4:	cmp	w0, #0x0
   1faa8:	b.ne	1fb24 <gelf_getchdr@@ELFUTILS_1.7+0x694>  // b.any
   1faac:	ldr	x1, [sp, #264]
   1fab0:	ldr	x0, [sp, #232]
   1fab4:	add	x0, x1, x0
   1fab8:	mov	x1, x0
   1fabc:	ldr	x0, [sp, #256]
   1fac0:	bl	31e0 <realloc@plt>
   1fac4:	str	x0, [sp, #216]
   1fac8:	ldr	x0, [sp, #216]
   1facc:	cmp	x0, #0x0
   1fad0:	b.ne	1fb0c <gelf_getchdr@@ELFUTILS_1.7+0x67c>  // b.any
   1fad4:	mov	w0, #0x8                   	// #8
   1fad8:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1fadc:	ldrb	w0, [sp, #227]
   1fae0:	cmp	w0, #0x0
   1fae4:	b.eq	1faf0 <gelf_getchdr@@ELFUTILS_1.7+0x660>  // b.none
   1fae8:	add	x0, sp, #0x40
   1faec:	b	1faf4 <gelf_getchdr@@ELFUTILS_1.7+0x664>
   1faf0:	mov	x0, #0x0                   	// #0
   1faf4:	add	x1, sp, #0x68
   1faf8:	mov	x3, x0
   1fafc:	ldr	x2, [sp, #256]
   1fb00:	mov	x0, #0x0                   	// #0
   1fb04:	bl	1f68c <gelf_getchdr@@ELFUTILS_1.7+0x1fc>
   1fb08:	b	1fba0 <gelf_getchdr@@ELFUTILS_1.7+0x710>
   1fb0c:	ldr	x0, [sp, #216]
   1fb10:	str	x0, [sp, #256]
   1fb14:	ldr	x1, [sp, #264]
   1fb18:	ldr	x0, [sp, #232]
   1fb1c:	add	x0, x1, x0
   1fb20:	str	x0, [sp, #264]
   1fb24:	ldr	w0, [sp, #136]
   1fb28:	cmp	w0, #0x0
   1fb2c:	b.eq	1f9a0 <gelf_getchdr@@ELFUTILS_1.7+0x510>  // b.none
   1fb30:	ldrb	w0, [sp, #227]
   1fb34:	cmp	w0, #0x0
   1fb38:	b.eq	1fb48 <gelf_getchdr@@ELFUTILS_1.7+0x6b8>  // b.none
   1fb3c:	ldr	x0, [sp, #64]
   1fb40:	bl	32a0 <free@plt>
   1fb44:	str	xzr, [sp, #64]
   1fb48:	ldr	w0, [sp, #244]
   1fb4c:	cmp	w0, #0x4
   1fb50:	b.ne	1f83c <gelf_getchdr@@ELFUTILS_1.7+0x3ac>  // b.any
   1fb54:	add	x0, sp, #0x68
   1fb58:	bl	32e0 <deflateEnd@plt>
   1fb5c:	str	w0, [sp, #228]
   1fb60:	ldr	w0, [sp, #228]
   1fb64:	cmp	w0, #0x0
   1fb68:	b.eq	1fb90 <gelf_getchdr@@ELFUTILS_1.7+0x700>  // b.none
   1fb6c:	mov	w0, #0x31                  	// #49
   1fb70:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1fb74:	add	x0, sp, #0x68
   1fb78:	mov	x3, #0x0                   	// #0
   1fb7c:	ldr	x2, [sp, #256]
   1fb80:	mov	x1, x0
   1fb84:	mov	x0, #0x0                   	// #0
   1fb88:	bl	1f68c <gelf_getchdr@@ELFUTILS_1.7+0x1fc>
   1fb8c:	b	1fba0 <gelf_getchdr@@ELFUTILS_1.7+0x710>
   1fb90:	ldr	x0, [sp, #16]
   1fb94:	ldr	x1, [sp, #248]
   1fb98:	str	x1, [x0]
   1fb9c:	ldr	x0, [sp, #256]
   1fba0:	ldp	x29, x30, [sp], #288
   1fba4:	ret
   1fba8:	stp	x29, x30, [sp, #-176]!
   1fbac:	mov	x29, sp
   1fbb0:	str	x0, [sp, #40]
   1fbb4:	str	x1, [sp, #32]
   1fbb8:	str	x2, [sp, #24]
   1fbbc:	ldr	x1, [sp, #24]
   1fbc0:	mov	x0, #0x80ff                	// #33023
   1fbc4:	movk	x0, #0xe03f, lsl #16
   1fbc8:	movk	x0, #0xf80f, lsl #32
   1fbcc:	movk	x0, #0xfe03, lsl #48
   1fbd0:	umulh	x0, x1, x0
   1fbd4:	lsr	x0, x0, #10
   1fbd8:	ldr	x1, [sp, #32]
   1fbdc:	cmp	x1, x0
   1fbe0:	cset	w0, cc  // cc = lo, ul, last
   1fbe4:	and	w0, w0, #0xff
   1fbe8:	and	x0, x0, #0xff
   1fbec:	cmp	x0, #0x0
   1fbf0:	b.eq	1fc04 <gelf_getchdr@@ELFUTILS_1.7+0x774>  // b.none
   1fbf4:	mov	w0, #0x21                  	// #33
   1fbf8:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1fbfc:	mov	x0, #0x0                   	// #0
   1fc00:	b	1fda8 <gelf_getchdr@@ELFUTILS_1.7+0x918>
   1fc04:	ldr	x0, [sp, #24]
   1fc08:	cmp	x0, #0x0
   1fc0c:	b.ne	1fc14 <gelf_getchdr@@ELFUTILS_1.7+0x784>  // b.any
   1fc10:	mov	x0, #0x1                   	// #1
   1fc14:	bl	3140 <malloc@plt>
   1fc18:	str	x0, [sp, #160]
   1fc1c:	ldr	x0, [sp, #160]
   1fc20:	cmp	x0, #0x0
   1fc24:	cset	w0, eq  // eq = none
   1fc28:	and	w0, w0, #0xff
   1fc2c:	and	x0, x0, #0xff
   1fc30:	cmp	x0, #0x0
   1fc34:	b.eq	1fc48 <gelf_getchdr@@ELFUTILS_1.7+0x7b8>  // b.none
   1fc38:	mov	w0, #0x8                   	// #8
   1fc3c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1fc40:	mov	x0, #0x0                   	// #0
   1fc44:	b	1fda8 <gelf_getchdr@@ELFUTILS_1.7+0x918>
   1fc48:	stp	xzr, xzr, [sp, #48]
   1fc4c:	stp	xzr, xzr, [sp, #64]
   1fc50:	stp	xzr, xzr, [sp, #80]
   1fc54:	stp	xzr, xzr, [sp, #96]
   1fc58:	stp	xzr, xzr, [sp, #112]
   1fc5c:	stp	xzr, xzr, [sp, #128]
   1fc60:	stp	xzr, xzr, [sp, #144]
   1fc64:	ldr	x0, [sp, #40]
   1fc68:	str	x0, [sp, #48]
   1fc6c:	ldr	x0, [sp, #32]
   1fc70:	str	w0, [sp, #56]
   1fc74:	ldr	x0, [sp, #160]
   1fc78:	str	x0, [sp, #72]
   1fc7c:	ldr	x0, [sp, #24]
   1fc80:	str	w0, [sp, #80]
   1fc84:	add	x3, sp, #0x30
   1fc88:	mov	w2, #0x70                  	// #112
   1fc8c:	adrp	x0, 22000 <elf_compress_gnu@@ELFUTILS_1.7+0x195c>
   1fc90:	add	x1, x0, #0x6e8
   1fc94:	mov	x0, x3
   1fc98:	bl	3320 <inflateInit_@plt>
   1fc9c:	str	w0, [sp, #172]
   1fca0:	b	1fd04 <gelf_getchdr@@ELFUTILS_1.7+0x874>
   1fca4:	ldr	w0, [sp, #80]
   1fca8:	mov	w0, w0
   1fcac:	ldr	x1, [sp, #24]
   1fcb0:	sub	x0, x1, x0
   1fcb4:	ldr	x1, [sp, #160]
   1fcb8:	add	x0, x1, x0
   1fcbc:	str	x0, [sp, #72]
   1fcc0:	add	x0, sp, #0x30
   1fcc4:	mov	w1, #0x4                   	// #4
   1fcc8:	bl	30f0 <inflate@plt>
   1fccc:	str	w0, [sp, #172]
   1fcd0:	ldr	w0, [sp, #172]
   1fcd4:	cmp	w0, #0x1
   1fcd8:	cset	w0, ne  // ne = any
   1fcdc:	and	w0, w0, #0xff
   1fce0:	and	x0, x0, #0xff
   1fce4:	cmp	x0, #0x0
   1fce8:	b.eq	1fcf8 <gelf_getchdr@@ELFUTILS_1.7+0x868>  // b.none
   1fcec:	mov	w0, #0xfffffffd            	// #-3
   1fcf0:	str	w0, [sp, #172]
   1fcf4:	b	1fd2c <gelf_getchdr@@ELFUTILS_1.7+0x89c>
   1fcf8:	add	x0, sp, #0x30
   1fcfc:	bl	33b0 <inflateReset@plt>
   1fd00:	str	w0, [sp, #172]
   1fd04:	ldr	w0, [sp, #56]
   1fd08:	cmp	w0, #0x0
   1fd0c:	b.eq	1fd2c <gelf_getchdr@@ELFUTILS_1.7+0x89c>  // b.none
   1fd10:	ldr	w0, [sp, #172]
   1fd14:	cmp	w0, #0x0
   1fd18:	cset	w0, eq  // eq = none
   1fd1c:	and	w0, w0, #0xff
   1fd20:	and	x0, x0, #0xff
   1fd24:	cmp	x0, #0x0
   1fd28:	b.ne	1fca4 <gelf_getchdr@@ELFUTILS_1.7+0x814>  // b.any
   1fd2c:	ldr	w0, [sp, #172]
   1fd30:	cmp	w0, #0x0
   1fd34:	cset	w0, eq  // eq = none
   1fd38:	and	w0, w0, #0xff
   1fd3c:	and	x0, x0, #0xff
   1fd40:	cmp	x0, #0x0
   1fd44:	b.eq	1fd54 <gelf_getchdr@@ELFUTILS_1.7+0x8c4>  // b.none
   1fd48:	add	x0, sp, #0x30
   1fd4c:	bl	3240 <inflateEnd@plt>
   1fd50:	str	w0, [sp, #172]
   1fd54:	ldr	w0, [sp, #172]
   1fd58:	cmp	w0, #0x0
   1fd5c:	cset	w0, ne  // ne = any
   1fd60:	and	w0, w0, #0xff
   1fd64:	and	x0, x0, #0xff
   1fd68:	cmp	x0, #0x0
   1fd6c:	b.ne	1fd8c <gelf_getchdr@@ELFUTILS_1.7+0x8fc>  // b.any
   1fd70:	ldr	w0, [sp, #80]
   1fd74:	cmp	w0, #0x0
   1fd78:	cset	w0, ne  // ne = any
   1fd7c:	and	w0, w0, #0xff
   1fd80:	and	x0, x0, #0xff
   1fd84:	cmp	x0, #0x0
   1fd88:	b.eq	1fda4 <gelf_getchdr@@ELFUTILS_1.7+0x914>  // b.none
   1fd8c:	ldr	x0, [sp, #160]
   1fd90:	bl	32a0 <free@plt>
   1fd94:	mov	w0, #0x32                  	// #50
   1fd98:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1fd9c:	mov	x0, #0x0                   	// #0
   1fda0:	b	1fda8 <gelf_getchdr@@ELFUTILS_1.7+0x918>
   1fda4:	ldr	x0, [sp, #160]
   1fda8:	ldp	x29, x30, [sp], #176
   1fdac:	ret
   1fdb0:	stp	x29, x30, [sp, #-128]!
   1fdb4:	mov	x29, sp
   1fdb8:	str	x0, [sp, #40]
   1fdbc:	str	x1, [sp, #32]
   1fdc0:	str	x2, [sp, #24]
   1fdc4:	add	x0, sp, #0x38
   1fdc8:	mov	x1, x0
   1fdcc:	ldr	x0, [sp, #40]
   1fdd0:	bl	32f0 <gelf_getchdr@plt>
   1fdd4:	cmp	x0, #0x0
   1fdd8:	b.ne	1fde4 <gelf_getchdr@@ELFUTILS_1.7+0x954>  // b.any
   1fddc:	mov	x0, #0x0                   	// #0
   1fde0:	b	1fed4 <gelf_getchdr@@ELFUTILS_1.7+0xa44>
   1fde4:	ldr	w0, [sp, #56]
   1fde8:	cmp	w0, #0x1
   1fdec:	b.eq	1fe00 <gelf_getchdr@@ELFUTILS_1.7+0x970>  // b.none
   1fdf0:	mov	w0, #0x30                  	// #48
   1fdf4:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1fdf8:	mov	x0, #0x0                   	// #0
   1fdfc:	b	1fed4 <gelf_getchdr@@ELFUTILS_1.7+0xa44>
   1fe00:	ldr	x0, [sp, #72]
   1fe04:	sub	x1, x0, #0x1
   1fe08:	ldr	x0, [sp, #72]
   1fe0c:	and	x0, x1, x0
   1fe10:	cmp	x0, #0x0
   1fe14:	b.eq	1fe28 <gelf_getchdr@@ELFUTILS_1.7+0x998>  // b.none
   1fe18:	mov	w0, #0x24                  	// #36
   1fe1c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   1fe20:	mov	x0, #0x0                   	// #0
   1fe24:	b	1fed4 <gelf_getchdr@@ELFUTILS_1.7+0xa44>
   1fe28:	mov	x1, #0x0                   	// #0
   1fe2c:	ldr	x0, [sp, #40]
   1fe30:	bl	3390 <elf_getdata@plt>
   1fe34:	str	x0, [sp, #120]
   1fe38:	ldr	x0, [sp, #120]
   1fe3c:	cmp	x0, #0x0
   1fe40:	b.ne	1fe4c <gelf_getchdr@@ELFUTILS_1.7+0x9bc>  // b.any
   1fe44:	mov	x0, #0x0                   	// #0
   1fe48:	b	1fed4 <gelf_getchdr@@ELFUTILS_1.7+0xa44>
   1fe4c:	ldr	x0, [sp, #40]
   1fe50:	ldr	x0, [x0, #136]
   1fe54:	ldr	w0, [x0, #32]
   1fe58:	str	w0, [sp, #116]
   1fe5c:	ldr	w0, [sp, #116]
   1fe60:	cmp	w0, #0x1
   1fe64:	b.ne	1fe70 <gelf_getchdr@@ELFUTILS_1.7+0x9e0>  // b.any
   1fe68:	mov	x0, #0xc                   	// #12
   1fe6c:	b	1fe74 <gelf_getchdr@@ELFUTILS_1.7+0x9e4>
   1fe70:	mov	x0, #0x18                  	// #24
   1fe74:	str	x0, [sp, #104]
   1fe78:	ldr	x0, [sp, #120]
   1fe7c:	ldr	x1, [x0, #16]
   1fe80:	ldr	x0, [sp, #104]
   1fe84:	sub	x0, x1, x0
   1fe88:	str	x0, [sp, #96]
   1fe8c:	ldr	x0, [sp, #120]
   1fe90:	ldr	x1, [x0]
   1fe94:	ldr	x0, [sp, #104]
   1fe98:	add	x0, x1, x0
   1fe9c:	str	x0, [sp, #88]
   1fea0:	ldr	x0, [sp, #64]
   1fea4:	mov	x2, x0
   1fea8:	ldr	x1, [sp, #96]
   1feac:	ldr	x0, [sp, #88]
   1feb0:	bl	1fba8 <gelf_getchdr@@ELFUTILS_1.7+0x718>
   1feb4:	str	x0, [sp, #80]
   1feb8:	ldr	x1, [sp, #64]
   1febc:	ldr	x0, [sp, #32]
   1fec0:	str	x1, [x0]
   1fec4:	ldr	x1, [sp, #72]
   1fec8:	ldr	x0, [sp, #24]
   1fecc:	str	x1, [x0]
   1fed0:	ldr	x0, [sp, #80]
   1fed4:	ldp	x29, x30, [sp], #128
   1fed8:	ret
   1fedc:	stp	x29, x30, [sp, #-64]!
   1fee0:	mov	x29, sp
   1fee4:	str	x0, [sp, #56]
   1fee8:	str	x1, [sp, #48]
   1feec:	str	x2, [sp, #40]
   1fef0:	str	x3, [sp, #32]
   1fef4:	str	w4, [sp, #28]
   1fef8:	ldr	x0, [sp, #56]
   1fefc:	str	xzr, [x0, #96]
   1ff00:	ldr	x0, [sp, #56]
   1ff04:	mov	w1, #0x1                   	// #1
   1ff08:	str	w1, [x0, #84]
   1ff0c:	ldr	x0, [sp, #56]
   1ff10:	ldr	x1, [sp, #48]
   1ff14:	str	x1, [x0, #72]
   1ff18:	ldr	x0, [sp, #56]
   1ff1c:	ldr	x1, [sp, #40]
   1ff20:	str	x1, [x0, #88]
   1ff24:	ldr	x0, [sp, #56]
   1ff28:	ldr	x1, [sp, #32]
   1ff2c:	str	x1, [x0, #104]
   1ff30:	ldr	x0, [sp, #56]
   1ff34:	ldr	w1, [sp, #28]
   1ff38:	str	w1, [x0, #80]
   1ff3c:	ldr	x0, [sp, #56]
   1ff40:	str	xzr, [x0, #64]
   1ff44:	ldr	x0, [sp, #56]
   1ff48:	ldr	x1, [x0, #168]
   1ff4c:	ldr	x0, [sp, #56]
   1ff50:	ldr	x0, [x0, #160]
   1ff54:	cmp	x1, x0
   1ff58:	b.eq	1ff68 <gelf_getchdr@@ELFUTILS_1.7+0xad8>  // b.none
   1ff5c:	ldr	x0, [sp, #56]
   1ff60:	ldr	x0, [x0, #168]
   1ff64:	bl	32a0 <free@plt>
   1ff68:	ldr	x0, [sp, #56]
   1ff6c:	str	xzr, [x0, #168]
   1ff70:	ldr	x0, [sp, #56]
   1ff74:	ldr	x0, [x0, #136]
   1ff78:	ldr	x0, [x0]
   1ff7c:	cmp	x0, #0x0
   1ff80:	b.eq	1ffb0 <gelf_getchdr@@ELFUTILS_1.7+0xb20>  // b.none
   1ff84:	ldr	x0, [sp, #56]
   1ff88:	ldr	x1, [x0, #160]
   1ff8c:	ldr	x0, [sp, #56]
   1ff90:	ldr	x0, [x0, #176]
   1ff94:	cmp	x1, x0
   1ff98:	b.eq	1ffb0 <gelf_getchdr@@ELFUTILS_1.7+0xb20>  // b.none
   1ff9c:	ldr	x0, [sp, #56]
   1ffa0:	ldr	w0, [x0, #156]
   1ffa4:	and	w0, w0, #0x80
   1ffa8:	cmp	w0, #0x0
   1ffac:	b.eq	1ffbc <gelf_getchdr@@ELFUTILS_1.7+0xb2c>  // b.none
   1ffb0:	ldr	x0, [sp, #56]
   1ffb4:	ldr	x0, [x0, #160]
   1ffb8:	bl	32a0 <free@plt>
   1ffbc:	ldr	x0, [sp, #56]
   1ffc0:	ldr	x1, [sp, #48]
   1ffc4:	str	x1, [x0, #160]
   1ffc8:	ldr	x0, [sp, #56]
   1ffcc:	ldr	w0, [x0, #156]
   1ffd0:	orr	w1, w0, #0x80
   1ffd4:	ldr	x0, [sp, #56]
   1ffd8:	str	w1, [x0, #156]
   1ffdc:	ldr	x0, [sp, #56]
   1ffe0:	mov	w1, #0x1                   	// #1
   1ffe4:	str	w1, [x0, #120]
   1ffe8:	ldr	x0, [sp, #56]
   1ffec:	ldr	w0, [x0, #156]
   1fff0:	orr	w1, w0, #0x100
   1fff4:	ldr	x0, [sp, #56]
   1fff8:	str	w1, [x0, #156]
   1fffc:	mov	w1, #0x1                   	// #1
   20000:	ldr	x0, [sp, #56]
   20004:	bl	124e0 <elf_rawdata@@ELFUTILS_1.0+0xcf0>
   20008:	nop
   2000c:	ldp	x29, x30, [sp], #64
   20010:	ret

0000000000020014 <elf_compress@@ELFUTILS_1.7>:
   20014:	stp	x29, x30, [sp, #-336]!
   20018:	mov	x29, sp
   2001c:	stp	x19, x20, [sp, #16]
   20020:	str	x21, [sp, #32]
   20024:	str	x0, [sp, #56]
   20028:	str	w1, [sp, #52]
   2002c:	str	w2, [sp, #48]
   20030:	ldr	x0, [sp, #56]
   20034:	cmp	x0, #0x0
   20038:	b.ne	20044 <elf_compress@@ELFUTILS_1.7+0x30>  // b.any
   2003c:	mov	w0, #0xffffffff            	// #-1
   20040:	b	205ac <elf_compress@@ELFUTILS_1.7+0x598>
   20044:	ldr	w0, [sp, #48]
   20048:	and	w0, w0, #0xfffffffe
   2004c:	cmp	w0, #0x0
   20050:	b.eq	20064 <elf_compress@@ELFUTILS_1.7+0x50>  // b.none
   20054:	mov	w0, #0x17                  	// #23
   20058:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   2005c:	mov	w0, #0xffffffff            	// #-1
   20060:	b	205ac <elf_compress@@ELFUTILS_1.7+0x598>
   20064:	ldr	w0, [sp, #48]
   20068:	and	w0, w0, #0x1
   2006c:	cmp	w0, #0x0
   20070:	cset	w0, ne  // ne = any
   20074:	strb	w0, [sp, #311]
   20078:	ldr	x0, [sp, #56]
   2007c:	ldr	x0, [x0, #136]
   20080:	str	x0, [sp, #296]
   20084:	add	x0, sp, #0x90
   20088:	mov	x1, x0
   2008c:	ldr	x0, [sp, #296]
   20090:	bl	3360 <gelf_getehdr@plt>
   20094:	cmp	x0, #0x0
   20098:	b.ne	200a4 <elf_compress@@ELFUTILS_1.7+0x90>  // b.any
   2009c:	mov	w0, #0xffffffff            	// #-1
   200a0:	b	205ac <elf_compress@@ELFUTILS_1.7+0x598>
   200a4:	ldr	x0, [sp, #296]
   200a8:	ldr	w0, [x0, #32]
   200ac:	str	w0, [sp, #292]
   200b0:	ldrb	w0, [sp, #149]
   200b4:	str	w0, [sp, #288]
   200b8:	ldr	w0, [sp, #292]
   200bc:	cmp	w0, #0x1
   200c0:	b.ne	20114 <elf_compress@@ELFUTILS_1.7+0x100>  // b.any
   200c4:	ldr	x0, [sp, #56]
   200c8:	bl	3340 <elf32_getshdr@plt>
   200cc:	str	x0, [sp, #272]
   200d0:	ldr	x0, [sp, #272]
   200d4:	cmp	x0, #0x0
   200d8:	b.ne	200e4 <elf_compress@@ELFUTILS_1.7+0xd0>  // b.any
   200dc:	mov	w0, #0xffffffff            	// #-1
   200e0:	b	205ac <elf_compress@@ELFUTILS_1.7+0x598>
   200e4:	ldr	x0, [sp, #272]
   200e8:	ldr	w0, [x0, #8]
   200ec:	mov	w0, w0
   200f0:	str	x0, [sp, #328]
   200f4:	ldr	x0, [sp, #272]
   200f8:	ldr	w0, [x0, #4]
   200fc:	str	w0, [sp, #324]
   20100:	ldr	x0, [sp, #272]
   20104:	ldr	w0, [x0, #32]
   20108:	mov	w0, w0
   2010c:	str	x0, [sp, #312]
   20110:	b	20158 <elf_compress@@ELFUTILS_1.7+0x144>
   20114:	ldr	x0, [sp, #56]
   20118:	bl	3190 <elf64_getshdr@plt>
   2011c:	str	x0, [sp, #280]
   20120:	ldr	x0, [sp, #280]
   20124:	cmp	x0, #0x0
   20128:	b.ne	20134 <elf_compress@@ELFUTILS_1.7+0x120>  // b.any
   2012c:	mov	w0, #0xffffffff            	// #-1
   20130:	b	205ac <elf_compress@@ELFUTILS_1.7+0x598>
   20134:	ldr	x0, [sp, #280]
   20138:	ldr	x0, [x0, #8]
   2013c:	str	x0, [sp, #328]
   20140:	ldr	x0, [sp, #280]
   20144:	ldr	w0, [x0, #4]
   20148:	str	w0, [sp, #324]
   2014c:	ldr	x0, [sp, #280]
   20150:	ldr	x0, [x0, #48]
   20154:	str	x0, [sp, #312]
   20158:	ldr	x0, [sp, #328]
   2015c:	and	x0, x0, #0x2
   20160:	cmp	x0, #0x0
   20164:	b.eq	20178 <elf_compress@@ELFUTILS_1.7+0x164>  // b.none
   20168:	mov	w0, #0x2d                  	// #45
   2016c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   20170:	mov	w0, #0xffffffff            	// #-1
   20174:	b	205ac <elf_compress@@ELFUTILS_1.7+0x598>
   20178:	ldr	w0, [sp, #324]
   2017c:	cmp	w0, #0x0
   20180:	b.eq	20190 <elf_compress@@ELFUTILS_1.7+0x17c>  // b.none
   20184:	ldr	w0, [sp, #324]
   20188:	cmp	w0, #0x8
   2018c:	b.ne	201a0 <elf_compress@@ELFUTILS_1.7+0x18c>  // b.any
   20190:	mov	w0, #0x2c                  	// #44
   20194:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   20198:	mov	w0, #0xffffffff            	// #-1
   2019c:	b	205ac <elf_compress@@ELFUTILS_1.7+0x598>
   201a0:	ldr	x0, [sp, #328]
   201a4:	and	w0, w0, #0x800
   201a8:	str	w0, [sp, #268]
   201ac:	ldr	w0, [sp, #52]
   201b0:	cmp	w0, #0x1
   201b4:	b.ne	2042c <elf_compress@@ELFUTILS_1.7+0x418>  // b.any
   201b8:	ldr	w0, [sp, #268]
   201bc:	cmp	w0, #0x1
   201c0:	b.ne	201d4 <elf_compress@@ELFUTILS_1.7+0x1c0>  // b.any
   201c4:	mov	w0, #0x2f                  	// #47
   201c8:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   201cc:	mov	w0, #0xffffffff            	// #-1
   201d0:	b	205ac <elf_compress@@ELFUTILS_1.7+0x598>
   201d4:	ldr	w0, [sp, #292]
   201d8:	cmp	w0, #0x1
   201dc:	b.ne	201e8 <elf_compress@@ELFUTILS_1.7+0x1d4>  // b.any
   201e0:	mov	x0, #0xc                   	// #12
   201e4:	b	201ec <elf_compress@@ELFUTILS_1.7+0x1d8>
   201e8:	mov	x0, #0x18                  	// #24
   201ec:	str	x0, [sp, #232]
   201f0:	add	x2, sp, #0x78
   201f4:	add	x1, sp, #0x80
   201f8:	add	x0, sp, #0x88
   201fc:	ldrb	w6, [sp, #311]
   20200:	mov	x5, x2
   20204:	mov	x4, x1
   20208:	mov	x3, x0
   2020c:	ldr	w2, [sp, #288]
   20210:	ldr	x1, [sp, #232]
   20214:	ldr	x0, [sp, #56]
   20218:	bl	1f6d8 <gelf_getchdr@@ELFUTILS_1.7+0x248>
   2021c:	str	x0, [sp, #224]
   20220:	ldr	x0, [sp, #224]
   20224:	cmn	x0, #0x1
   20228:	b.ne	20234 <elf_compress@@ELFUTILS_1.7+0x220>  // b.any
   2022c:	mov	w0, #0x0                   	// #0
   20230:	b	205ac <elf_compress@@ELFUTILS_1.7+0x598>
   20234:	ldr	x0, [sp, #224]
   20238:	cmp	x0, #0x0
   2023c:	b.ne	20248 <elf_compress@@ELFUTILS_1.7+0x234>  // b.any
   20240:	mov	w0, #0xffffffff            	// #-1
   20244:	b	205ac <elf_compress@@ELFUTILS_1.7+0x598>
   20248:	ldr	w0, [sp, #292]
   2024c:	cmp	w0, #0x1
   20250:	b.ne	202bc <elf_compress@@ELFUTILS_1.7+0x2a8>  // b.any
   20254:	mov	w0, #0x1                   	// #1
   20258:	str	w0, [sp, #104]
   2025c:	ldr	x0, [sp, #136]
   20260:	str	w0, [sp, #108]
   20264:	ldr	x0, [sp, #128]
   20268:	str	w0, [sp, #112]
   2026c:	ldr	w0, [sp, #288]
   20270:	cmp	w0, #0x1
   20274:	b.eq	2029c <elf_compress@@ELFUTILS_1.7+0x288>  // b.none
   20278:	ldr	w0, [sp, #104]
   2027c:	bl	1f58c <gelf_getchdr@@ELFUTILS_1.7+0xfc>
   20280:	str	w0, [sp, #104]
   20284:	ldr	w0, [sp, #108]
   20288:	bl	1f58c <gelf_getchdr@@ELFUTILS_1.7+0xfc>
   2028c:	str	w0, [sp, #108]
   20290:	ldr	w0, [sp, #112]
   20294:	bl	1f58c <gelf_getchdr@@ELFUTILS_1.7+0xfc>
   20298:	str	w0, [sp, #112]
   2029c:	ldr	x0, [sp, #224]
   202a0:	mov	x1, x0
   202a4:	add	x0, sp, #0x68
   202a8:	ldr	x2, [x0]
   202ac:	str	x2, [x1]
   202b0:	ldr	w0, [x0, #8]
   202b4:	str	w0, [x1, #8]
   202b8:	b	20330 <elf_compress@@ELFUTILS_1.7+0x31c>
   202bc:	mov	w0, #0x1                   	// #1
   202c0:	str	w0, [sp, #80]
   202c4:	str	wzr, [sp, #84]
   202c8:	ldr	x0, [sp, #136]
   202cc:	str	x0, [sp, #88]
   202d0:	ldr	x0, [sp, #312]
   202d4:	str	x0, [sp, #96]
   202d8:	ldr	w0, [sp, #288]
   202dc:	cmp	w0, #0x1
   202e0:	b.eq	20314 <elf_compress@@ELFUTILS_1.7+0x300>  // b.none
   202e4:	ldr	w0, [sp, #80]
   202e8:	bl	1f58c <gelf_getchdr@@ELFUTILS_1.7+0xfc>
   202ec:	str	w0, [sp, #80]
   202f0:	ldr	w0, [sp, #84]
   202f4:	bl	1f58c <gelf_getchdr@@ELFUTILS_1.7+0xfc>
   202f8:	str	w0, [sp, #84]
   202fc:	ldr	x0, [sp, #88]
   20300:	bl	1f5a4 <gelf_getchdr@@ELFUTILS_1.7+0x114>
   20304:	str	x0, [sp, #88]
   20308:	ldr	x0, [sp, #96]
   2030c:	bl	1f5a4 <gelf_getchdr@@ELFUTILS_1.7+0x114>
   20310:	str	x0, [sp, #96]
   20314:	ldr	x0, [sp, #224]
   20318:	mov	x3, x0
   2031c:	add	x2, sp, #0x50
   20320:	ldp	x0, x1, [x2]
   20324:	stp	x0, x1, [x3]
   20328:	ldr	x0, [x2, #16]
   2032c:	str	x0, [x3, #16]
   20330:	ldr	w0, [sp, #292]
   20334:	cmp	w0, #0x1
   20338:	b.ne	203a0 <elf_compress@@ELFUTILS_1.7+0x38c>  // b.any
   2033c:	ldr	x0, [sp, #56]
   20340:	bl	3340 <elf32_getshdr@plt>
   20344:	str	x0, [sp, #208]
   20348:	ldr	x0, [sp, #120]
   2034c:	mov	w1, w0
   20350:	ldr	x0, [sp, #208]
   20354:	str	w1, [x0, #20]
   20358:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   2035c:	add	x0, x0, #0xab0
   20360:	ldrb	w0, [x0, #25]
   20364:	cmp	w0, #0x0
   20368:	b.eq	2037c <elf_compress@@ELFUTILS_1.7+0x368>  // b.none
   2036c:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   20370:	add	x0, x0, #0xab0
   20374:	ldrb	w0, [x0, #25]
   20378:	b	20380 <elf_compress@@ELFUTILS_1.7+0x36c>
   2037c:	mov	w0, #0x1                   	// #1
   20380:	ldr	x1, [sp, #208]
   20384:	str	w0, [x1, #32]
   20388:	ldr	x0, [sp, #208]
   2038c:	ldr	w0, [x0, #8]
   20390:	orr	w1, w0, #0x800
   20394:	ldr	x0, [sp, #208]
   20398:	str	w1, [x0, #8]
   2039c:	b	20400 <elf_compress@@ELFUTILS_1.7+0x3ec>
   203a0:	ldr	x0, [sp, #56]
   203a4:	bl	3190 <elf64_getshdr@plt>
   203a8:	str	x0, [sp, #216]
   203ac:	ldr	x1, [sp, #120]
   203b0:	ldr	x0, [sp, #216]
   203b4:	str	x1, [x0, #32]
   203b8:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   203bc:	add	x0, x0, #0xab0
   203c0:	ldrb	w0, [x0, #52]
   203c4:	cmp	w0, #0x0
   203c8:	b.eq	203e0 <elf_compress@@ELFUTILS_1.7+0x3cc>  // b.none
   203cc:	adrp	x0, 21000 <elf_compress_gnu@@ELFUTILS_1.7+0x95c>
   203d0:	add	x0, x0, #0xab0
   203d4:	ldrb	w0, [x0, #52]
   203d8:	and	x0, x0, #0xff
   203dc:	b	203e4 <elf_compress@@ELFUTILS_1.7+0x3d0>
   203e0:	mov	x0, #0x1                   	// #1
   203e4:	ldr	x1, [sp, #216]
   203e8:	str	x0, [x1, #48]
   203ec:	ldr	x0, [sp, #216]
   203f0:	ldr	x0, [x0, #8]
   203f4:	orr	x1, x0, #0x800
   203f8:	ldr	x0, [sp, #216]
   203fc:	str	x1, [x0, #8]
   20400:	ldr	x0, [sp, #120]
   20404:	mov	w4, #0x19                  	// #25
   20408:	mov	x3, #0x1                   	// #1
   2040c:	mov	x2, x0
   20410:	ldr	x1, [sp, #224]
   20414:	ldr	x0, [sp, #56]
   20418:	bl	1fedc <gelf_getchdr@@ELFUTILS_1.7+0xa4c>
   2041c:	ldr	x0, [sp, #56]
   20420:	str	xzr, [x0, #176]
   20424:	mov	w0, #0x1                   	// #1
   20428:	b	205ac <elf_compress@@ELFUTILS_1.7+0x598>
   2042c:	ldr	w0, [sp, #52]
   20430:	cmp	w0, #0x0
   20434:	b.ne	205a0 <elf_compress@@ELFUTILS_1.7+0x58c>  // b.any
   20438:	ldr	w0, [sp, #268]
   2043c:	cmp	w0, #0x0
   20440:	b.ne	20454 <elf_compress@@ELFUTILS_1.7+0x440>  // b.any
   20444:	mov	w0, #0x2e                  	// #46
   20448:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   2044c:	mov	w0, #0xffffffff            	// #-1
   20450:	b	205ac <elf_compress@@ELFUTILS_1.7+0x598>
   20454:	ldr	x0, [sp, #56]
   20458:	ldr	x0, [x0, #176]
   2045c:	cmp	x0, #0x0
   20460:	b.ne	204b8 <elf_compress@@ELFUTILS_1.7+0x4a4>  // b.any
   20464:	add	x1, sp, #0x40
   20468:	add	x0, sp, #0x48
   2046c:	mov	x2, x1
   20470:	mov	x1, x0
   20474:	ldr	x0, [sp, #56]
   20478:	bl	1fdb0 <gelf_getchdr@@ELFUTILS_1.7+0x920>
   2047c:	str	x0, [sp, #256]
   20480:	ldr	x0, [sp, #256]
   20484:	cmp	x0, #0x0
   20488:	b.ne	20494 <elf_compress@@ELFUTILS_1.7+0x480>  // b.any
   2048c:	mov	w0, #0xffffffff            	// #-1
   20490:	b	205ac <elf_compress@@ELFUTILS_1.7+0x598>
   20494:	ldr	x0, [sp, #56]
   20498:	ldr	x1, [sp, #256]
   2049c:	str	x1, [x0, #176]
   204a0:	ldr	x1, [sp, #72]
   204a4:	ldr	x0, [sp, #56]
   204a8:	str	x1, [x0, #184]
   204ac:	ldr	x1, [sp, #64]
   204b0:	ldr	x0, [sp, #56]
   204b4:	str	x1, [x0, #192]
   204b8:	ldr	w0, [sp, #292]
   204bc:	cmp	w0, #0x1
   204c0:	b.ne	20510 <elf_compress@@ELFUTILS_1.7+0x4fc>  // b.any
   204c4:	ldr	x0, [sp, #56]
   204c8:	bl	3340 <elf32_getshdr@plt>
   204cc:	str	x0, [sp, #240]
   204d0:	ldr	x0, [sp, #56]
   204d4:	ldr	x0, [x0, #184]
   204d8:	mov	w1, w0
   204dc:	ldr	x0, [sp, #240]
   204e0:	str	w1, [x0, #20]
   204e4:	ldr	x0, [sp, #56]
   204e8:	ldr	x0, [x0, #192]
   204ec:	mov	w1, w0
   204f0:	ldr	x0, [sp, #240]
   204f4:	str	w1, [x0, #32]
   204f8:	ldr	x0, [sp, #240]
   204fc:	ldr	w0, [x0, #8]
   20500:	and	w1, w0, #0xfffff7ff
   20504:	ldr	x0, [sp, #240]
   20508:	str	w1, [x0, #8]
   2050c:	b	20550 <elf_compress@@ELFUTILS_1.7+0x53c>
   20510:	ldr	x0, [sp, #56]
   20514:	bl	3190 <elf64_getshdr@plt>
   20518:	str	x0, [sp, #248]
   2051c:	ldr	x0, [sp, #56]
   20520:	ldr	x1, [x0, #184]
   20524:	ldr	x0, [sp, #248]
   20528:	str	x1, [x0, #32]
   2052c:	ldr	x0, [sp, #56]
   20530:	ldr	x1, [x0, #192]
   20534:	ldr	x0, [sp, #248]
   20538:	str	x1, [x0, #48]
   2053c:	ldr	x0, [sp, #248]
   20540:	ldr	x0, [x0, #8]
   20544:	and	x1, x0, #0xfffffffffffff7ff
   20548:	ldr	x0, [sp, #248]
   2054c:	str	x1, [x0, #8]
   20550:	ldr	x0, [sp, #56]
   20554:	ldr	x19, [x0, #176]
   20558:	ldr	x0, [sp, #56]
   2055c:	ldr	x20, [x0, #184]
   20560:	ldr	x0, [sp, #56]
   20564:	ldr	x21, [x0, #192]
   20568:	ldr	w1, [sp, #324]
   2056c:	ldr	x0, [sp, #56]
   20570:	ldr	x0, [x0, #192]
   20574:	mov	x2, x0
   20578:	ldr	x0, [sp, #296]
   2057c:	bl	11a44 <elf_rawdata@@ELFUTILS_1.0+0x254>
   20580:	mov	w4, w0
   20584:	mov	x3, x21
   20588:	mov	x2, x20
   2058c:	mov	x1, x19
   20590:	ldr	x0, [sp, #56]
   20594:	bl	1fedc <gelf_getchdr@@ELFUTILS_1.7+0xa4c>
   20598:	mov	w0, #0x1                   	// #1
   2059c:	b	205ac <elf_compress@@ELFUTILS_1.7+0x598>
   205a0:	mov	w0, #0x30                  	// #48
   205a4:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   205a8:	mov	w0, #0xffffffff            	// #-1
   205ac:	ldp	x19, x20, [sp, #16]
   205b0:	ldr	x21, [sp, #32]
   205b4:	ldp	x29, x30, [sp], #336
   205b8:	ret
   205bc:	sub	sp, sp, #0x10
   205c0:	str	x0, [sp, #8]
   205c4:	ldr	x0, [sp, #8]
   205c8:	rev	x0, x0
   205cc:	add	sp, sp, #0x10
   205d0:	ret
   205d4:	stp	x29, x30, [sp, #-48]!
   205d8:	mov	x29, sp
   205dc:	str	x0, [sp, #24]
   205e0:	ldr	x0, [sp, #24]
   205e4:	ldr	w0, [x0, #24]
   205e8:	cmp	w0, #0x1
   205ec:	b.ne	20630 <elf_compress@@ELFUTILS_1.7+0x61c>  // b.any
   205f0:	ldr	x0, [sp, #24]
   205f4:	ldr	x0, [x0, #72]
   205f8:	str	x0, [sp, #40]
   205fc:	b	20624 <elf_compress@@ELFUTILS_1.7+0x610>
   20600:	ldr	x0, [sp, #40]
   20604:	ldr	w0, [x0, #60]
   20608:	cmp	w0, #0x0
   2060c:	b.eq	20618 <elf_compress@@ELFUTILS_1.7+0x604>  // b.none
   20610:	ldr	x0, [sp, #40]
   20614:	bl	205d4 <elf_compress@@ELFUTILS_1.7+0x5c0>
   20618:	ldr	x0, [sp, #40]
   2061c:	ldr	x0, [x0, #16]
   20620:	str	x0, [sp, #40]
   20624:	ldr	x0, [sp, #40]
   20628:	cmp	x0, #0x0
   2062c:	b.ne	20600 <elf_compress@@ELFUTILS_1.7+0x5ec>  // b.any
   20630:	nop
   20634:	ldp	x29, x30, [sp], #48
   20638:	ret
   2063c:	stp	x29, x30, [sp, #-48]!
   20640:	mov	x29, sp
   20644:	str	x0, [sp, #24]
   20648:	ldr	x0, [sp, #24]
   2064c:	ldr	w0, [x0, #24]
   20650:	cmp	w0, #0x1
   20654:	b.ne	20698 <elf_compress@@ELFUTILS_1.7+0x684>  // b.any
   20658:	ldr	x0, [sp, #24]
   2065c:	ldr	x0, [x0, #72]
   20660:	str	x0, [sp, #40]
   20664:	b	2068c <elf_compress@@ELFUTILS_1.7+0x678>
   20668:	ldr	x0, [sp, #40]
   2066c:	ldr	w0, [x0, #60]
   20670:	cmp	w0, #0x0
   20674:	b.eq	20680 <elf_compress@@ELFUTILS_1.7+0x66c>  // b.none
   20678:	ldr	x0, [sp, #40]
   2067c:	bl	2063c <elf_compress@@ELFUTILS_1.7+0x628>
   20680:	ldr	x0, [sp, #40]
   20684:	ldr	x0, [x0, #16]
   20688:	str	x0, [sp, #40]
   2068c:	ldr	x0, [sp, #40]
   20690:	cmp	x0, #0x0
   20694:	b.ne	20668 <elf_compress@@ELFUTILS_1.7+0x654>  // b.any
   20698:	nop
   2069c:	ldp	x29, x30, [sp], #48
   206a0:	ret

00000000000206a4 <elf_compress_gnu@@ELFUTILS_1.7>:
   206a4:	stp	x29, x30, [sp, #-304]!
   206a8:	mov	x29, sp
   206ac:	str	x0, [sp, #24]
   206b0:	str	w1, [sp, #20]
   206b4:	str	w2, [sp, #16]
   206b8:	ldr	x0, [sp, #24]
   206bc:	cmp	x0, #0x0
   206c0:	b.ne	206cc <elf_compress_gnu@@ELFUTILS_1.7+0x28>  // b.any
   206c4:	mov	w0, #0xffffffff            	// #-1
   206c8:	b	20af0 <elf_compress_gnu@@ELFUTILS_1.7+0x44c>
   206cc:	ldr	w0, [sp, #16]
   206d0:	and	w0, w0, #0xfffffffe
   206d4:	cmp	w0, #0x0
   206d8:	b.eq	206ec <elf_compress_gnu@@ELFUTILS_1.7+0x48>  // b.none
   206dc:	mov	w0, #0x17                  	// #23
   206e0:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   206e4:	mov	w0, #0xffffffff            	// #-1
   206e8:	b	20af0 <elf_compress_gnu@@ELFUTILS_1.7+0x44c>
   206ec:	ldr	w0, [sp, #16]
   206f0:	and	w0, w0, #0x1
   206f4:	cmp	w0, #0x0
   206f8:	cset	w0, ne  // ne = any
   206fc:	strb	w0, [sp, #279]
   20700:	ldr	x0, [sp, #24]
   20704:	ldr	x0, [x0, #136]
   20708:	str	x0, [sp, #264]
   2070c:	add	x0, sp, #0x50
   20710:	mov	x1, x0
   20714:	ldr	x0, [sp, #264]
   20718:	bl	3360 <gelf_getehdr@plt>
   2071c:	cmp	x0, #0x0
   20720:	b.ne	2072c <elf_compress_gnu@@ELFUTILS_1.7+0x88>  // b.any
   20724:	mov	w0, #0xffffffff            	// #-1
   20728:	b	20af0 <elf_compress_gnu@@ELFUTILS_1.7+0x44c>
   2072c:	ldr	x0, [sp, #264]
   20730:	ldr	w0, [x0, #32]
   20734:	str	w0, [sp, #260]
   20738:	ldrb	w0, [sp, #85]
   2073c:	str	w0, [sp, #256]
   20740:	ldr	w0, [sp, #260]
   20744:	cmp	w0, #0x1
   20748:	b.ne	2079c <elf_compress_gnu@@ELFUTILS_1.7+0xf8>  // b.any
   2074c:	ldr	x0, [sp, #24]
   20750:	bl	3340 <elf32_getshdr@plt>
   20754:	str	x0, [sp, #240]
   20758:	ldr	x0, [sp, #240]
   2075c:	cmp	x0, #0x0
   20760:	b.ne	2076c <elf_compress_gnu@@ELFUTILS_1.7+0xc8>  // b.any
   20764:	mov	w0, #0xffffffff            	// #-1
   20768:	b	20af0 <elf_compress_gnu@@ELFUTILS_1.7+0x44c>
   2076c:	ldr	x0, [sp, #240]
   20770:	ldr	w0, [x0, #8]
   20774:	mov	w0, w0
   20778:	str	x0, [sp, #296]
   2077c:	ldr	x0, [sp, #240]
   20780:	ldr	w0, [x0, #4]
   20784:	str	w0, [sp, #292]
   20788:	ldr	x0, [sp, #240]
   2078c:	ldr	w0, [x0, #32]
   20790:	mov	w0, w0
   20794:	str	x0, [sp, #280]
   20798:	b	207e0 <elf_compress_gnu@@ELFUTILS_1.7+0x13c>
   2079c:	ldr	x0, [sp, #24]
   207a0:	bl	3190 <elf64_getshdr@plt>
   207a4:	str	x0, [sp, #248]
   207a8:	ldr	x0, [sp, #248]
   207ac:	cmp	x0, #0x0
   207b0:	b.ne	207bc <elf_compress_gnu@@ELFUTILS_1.7+0x118>  // b.any
   207b4:	mov	w0, #0xffffffff            	// #-1
   207b8:	b	20af0 <elf_compress_gnu@@ELFUTILS_1.7+0x44c>
   207bc:	ldr	x0, [sp, #248]
   207c0:	ldr	x0, [x0, #8]
   207c4:	str	x0, [sp, #296]
   207c8:	ldr	x0, [sp, #248]
   207cc:	ldr	w0, [x0, #4]
   207d0:	str	w0, [sp, #292]
   207d4:	ldr	x0, [sp, #248]
   207d8:	ldr	x0, [x0, #48]
   207dc:	str	x0, [sp, #280]
   207e0:	ldr	x0, [sp, #296]
   207e4:	and	x0, x0, #0x2
   207e8:	cmp	x0, #0x0
   207ec:	b.ne	20800 <elf_compress_gnu@@ELFUTILS_1.7+0x15c>  // b.any
   207f0:	ldr	x0, [sp, #296]
   207f4:	and	x0, x0, #0x800
   207f8:	cmp	x0, #0x0
   207fc:	b.eq	20810 <elf_compress_gnu@@ELFUTILS_1.7+0x16c>  // b.none
   20800:	mov	w0, #0x2d                  	// #45
   20804:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   20808:	mov	w0, #0xffffffff            	// #-1
   2080c:	b	20af0 <elf_compress_gnu@@ELFUTILS_1.7+0x44c>
   20810:	ldr	w0, [sp, #292]
   20814:	cmp	w0, #0x0
   20818:	b.eq	20828 <elf_compress_gnu@@ELFUTILS_1.7+0x184>  // b.none
   2081c:	ldr	w0, [sp, #292]
   20820:	cmp	w0, #0x8
   20824:	b.ne	20838 <elf_compress_gnu@@ELFUTILS_1.7+0x194>  // b.any
   20828:	mov	w0, #0x2c                  	// #44
   2082c:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   20830:	mov	w0, #0xffffffff            	// #-1
   20834:	b	20af0 <elf_compress_gnu@@ELFUTILS_1.7+0x44c>
   20838:	ldr	w0, [sp, #20]
   2083c:	cmp	w0, #0x1
   20840:	b.ne	20940 <elf_compress_gnu@@ELFUTILS_1.7+0x29c>  // b.any
   20844:	mov	x0, #0xc                   	// #12
   20848:	str	x0, [sp, #168]
   2084c:	add	x2, sp, #0x40
   20850:	add	x1, sp, #0x38
   20854:	add	x0, sp, #0x48
   20858:	ldrb	w6, [sp, #279]
   2085c:	mov	x5, x2
   20860:	mov	x4, x1
   20864:	mov	x3, x0
   20868:	ldr	w2, [sp, #256]
   2086c:	ldr	x1, [sp, #168]
   20870:	ldr	x0, [sp, #24]
   20874:	bl	1f6d8 <gelf_getchdr@@ELFUTILS_1.7+0x248>
   20878:	str	x0, [sp, #160]
   2087c:	ldr	x0, [sp, #160]
   20880:	cmn	x0, #0x1
   20884:	b.ne	20890 <elf_compress_gnu@@ELFUTILS_1.7+0x1ec>  // b.any
   20888:	mov	w0, #0x0                   	// #0
   2088c:	b	20af0 <elf_compress_gnu@@ELFUTILS_1.7+0x44c>
   20890:	ldr	x0, [sp, #160]
   20894:	cmp	x0, #0x0
   20898:	b.ne	208a4 <elf_compress_gnu@@ELFUTILS_1.7+0x200>  // b.any
   2089c:	mov	w0, #0xffffffff            	// #-1
   208a0:	b	20af0 <elf_compress_gnu@@ELFUTILS_1.7+0x44c>
   208a4:	ldr	x0, [sp, #72]
   208a8:	bl	205bc <elf_compress@@ELFUTILS_1.7+0x5a8>
   208ac:	str	x0, [sp, #48]
   208b0:	ldr	x0, [sp, #160]
   208b4:	mov	w1, #0x4c5a                	// #19546
   208b8:	movk	w1, #0x4249, lsl #16
   208bc:	str	w1, [x0]
   208c0:	ldr	x0, [sp, #160]
   208c4:	add	x0, x0, #0x4
   208c8:	ldr	x1, [sp, #48]
   208cc:	str	x1, [x0]
   208d0:	ldr	w0, [sp, #260]
   208d4:	cmp	w0, #0x1
   208d8:	b.ne	208fc <elf_compress_gnu@@ELFUTILS_1.7+0x258>  // b.any
   208dc:	ldr	x0, [sp, #24]
   208e0:	bl	3340 <elf32_getshdr@plt>
   208e4:	str	x0, [sp, #144]
   208e8:	ldr	x0, [sp, #64]
   208ec:	mov	w1, w0
   208f0:	ldr	x0, [sp, #144]
   208f4:	str	w1, [x0, #20]
   208f8:	b	20914 <elf_compress_gnu@@ELFUTILS_1.7+0x270>
   208fc:	ldr	x0, [sp, #24]
   20900:	bl	3190 <elf64_getshdr@plt>
   20904:	str	x0, [sp, #152]
   20908:	ldr	x1, [sp, #64]
   2090c:	ldr	x0, [sp, #152]
   20910:	str	x1, [x0, #32]
   20914:	ldr	x0, [sp, #64]
   20918:	mov	w4, #0x0                   	// #0
   2091c:	mov	x3, #0x1                   	// #1
   20920:	mov	x2, x0
   20924:	ldr	x1, [sp, #160]
   20928:	ldr	x0, [sp, #24]
   2092c:	bl	1fedc <gelf_getchdr@@ELFUTILS_1.7+0xa4c>
   20930:	ldr	x0, [sp, #24]
   20934:	str	xzr, [x0, #176]
   20938:	mov	w0, #0x1                   	// #1
   2093c:	b	20af0 <elf_compress_gnu@@ELFUTILS_1.7+0x44c>
   20940:	ldr	w0, [sp, #20]
   20944:	cmp	w0, #0x0
   20948:	b.ne	20ae4 <elf_compress_gnu@@ELFUTILS_1.7+0x440>  // b.any
   2094c:	mov	x1, #0x0                   	// #0
   20950:	ldr	x0, [sp, #24]
   20954:	bl	3390 <elf_getdata@plt>
   20958:	str	x0, [sp, #232]
   2095c:	ldr	x0, [sp, #232]
   20960:	cmp	x0, #0x0
   20964:	b.ne	20970 <elf_compress_gnu@@ELFUTILS_1.7+0x2cc>  // b.any
   20968:	mov	w0, #0xffffffff            	// #-1
   2096c:	b	20af0 <elf_compress_gnu@@ELFUTILS_1.7+0x44c>
   20970:	mov	x0, #0xc                   	// #12
   20974:	str	x0, [sp, #224]
   20978:	ldr	x0, [sp, #232]
   2097c:	ldr	x0, [x0, #16]
   20980:	ldr	x1, [sp, #224]
   20984:	cmp	x1, x0
   20988:	b.hi	209b0 <elf_compress_gnu@@ELFUTILS_1.7+0x30c>  // b.pmore
   2098c:	ldr	x0, [sp, #232]
   20990:	ldr	x3, [x0]
   20994:	mov	x2, #0x4                   	// #4
   20998:	adrp	x0, 22000 <elf_compress_gnu@@ELFUTILS_1.7+0x195c>
   2099c:	add	x1, x0, #0x6f0
   209a0:	mov	x0, x3
   209a4:	bl	3250 <memcmp@plt>
   209a8:	cmp	w0, #0x0
   209ac:	b.eq	209c0 <elf_compress_gnu@@ELFUTILS_1.7+0x31c>  // b.none
   209b0:	mov	w0, #0x2e                  	// #46
   209b4:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   209b8:	mov	w0, #0xffffffff            	// #-1
   209bc:	b	20af0 <elf_compress_gnu@@ELFUTILS_1.7+0x44c>
   209c0:	ldr	x0, [sp, #232]
   209c4:	ldr	x0, [x0]
   209c8:	add	x0, x0, #0x4
   209cc:	ldr	x0, [x0]
   209d0:	str	x0, [sp, #40]
   209d4:	ldr	x0, [sp, #40]
   209d8:	bl	205bc <elf_compress@@ELFUTILS_1.7+0x5a8>
   209dc:	str	x0, [sp, #40]
   209e0:	ldr	x0, [sp, #40]
   209e4:	add	x1, x0, #0x17
   209e8:	ldr	x0, [sp, #232]
   209ec:	ldr	x0, [x0, #16]
   209f0:	cmp	x1, x0
   209f4:	b.cs	20a08 <elf_compress_gnu@@ELFUTILS_1.7+0x364>  // b.hs, b.nlast
   209f8:	mov	w0, #0x2e                  	// #46
   209fc:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   20a00:	mov	w0, #0xffffffff            	// #-1
   20a04:	b	20af0 <elf_compress_gnu@@ELFUTILS_1.7+0x44c>
   20a08:	ldr	x0, [sp, #40]
   20a0c:	str	x0, [sp, #216]
   20a10:	ldr	x0, [sp, #232]
   20a14:	ldr	x1, [x0, #16]
   20a18:	ldr	x0, [sp, #224]
   20a1c:	sub	x0, x1, x0
   20a20:	str	x0, [sp, #208]
   20a24:	ldr	x0, [sp, #232]
   20a28:	ldr	x1, [x0]
   20a2c:	ldr	x0, [sp, #224]
   20a30:	add	x0, x1, x0
   20a34:	str	x0, [sp, #200]
   20a38:	ldr	x2, [sp, #216]
   20a3c:	ldr	x1, [sp, #208]
   20a40:	ldr	x0, [sp, #200]
   20a44:	bl	1fba8 <gelf_getchdr@@ELFUTILS_1.7+0x718>
   20a48:	str	x0, [sp, #192]
   20a4c:	ldr	x0, [sp, #192]
   20a50:	cmp	x0, #0x0
   20a54:	b.ne	20a60 <elf_compress_gnu@@ELFUTILS_1.7+0x3bc>  // b.any
   20a58:	mov	w0, #0xffffffff            	// #-1
   20a5c:	b	20af0 <elf_compress_gnu@@ELFUTILS_1.7+0x44c>
   20a60:	ldr	w0, [sp, #260]
   20a64:	cmp	w0, #0x1
   20a68:	b.ne	20a8c <elf_compress_gnu@@ELFUTILS_1.7+0x3e8>  // b.any
   20a6c:	ldr	x0, [sp, #24]
   20a70:	bl	3340 <elf32_getshdr@plt>
   20a74:	str	x0, [sp, #176]
   20a78:	ldr	x0, [sp, #216]
   20a7c:	mov	w1, w0
   20a80:	ldr	x0, [sp, #176]
   20a84:	str	w1, [x0, #20]
   20a88:	b	20aa4 <elf_compress_gnu@@ELFUTILS_1.7+0x400>
   20a8c:	ldr	x0, [sp, #24]
   20a90:	bl	3190 <elf64_getshdr@plt>
   20a94:	str	x0, [sp, #184]
   20a98:	ldr	x0, [sp, #184]
   20a9c:	ldr	x1, [sp, #216]
   20aa0:	str	x1, [x0, #32]
   20aa4:	ldr	w0, [sp, #292]
   20aa8:	ldr	x2, [sp, #280]
   20aac:	mov	w1, w0
   20ab0:	ldr	x0, [sp, #264]
   20ab4:	bl	11a44 <elf_rawdata@@ELFUTILS_1.0+0x254>
   20ab8:	mov	w4, w0
   20abc:	ldr	x3, [sp, #280]
   20ac0:	ldr	x2, [sp, #216]
   20ac4:	ldr	x1, [sp, #192]
   20ac8:	ldr	x0, [sp, #24]
   20acc:	bl	1fedc <gelf_getchdr@@ELFUTILS_1.7+0xa4c>
   20ad0:	ldr	x0, [sp, #24]
   20ad4:	ldr	x1, [sp, #192]
   20ad8:	str	x1, [x0, #176]
   20adc:	mov	w0, #0x1                   	// #1
   20ae0:	b	20af0 <elf_compress_gnu@@ELFUTILS_1.7+0x44c>
   20ae4:	mov	w0, #0x30                  	// #48
   20ae8:	bl	37f0 <elf_errno@@ELFUTILS_1.0+0x50>
   20aec:	mov	w0, #0xffffffff            	// #-1
   20af0:	ldp	x29, x30, [sp], #304
   20af4:	ret
   20af8:	mov	x2, x1
   20afc:	mov	w1, w0
   20b00:	mov	w0, #0x0                   	// #0
   20b04:	b	33a0 <__fxstat@plt>

Disassembly of section .fini:

0000000000020b08 <.fini>:
   20b08:	stp	x29, x30, [sp, #-16]!
   20b0c:	mov	x29, sp
   20b10:	ldp	x29, x30, [sp], #16
   20b14:	ret
