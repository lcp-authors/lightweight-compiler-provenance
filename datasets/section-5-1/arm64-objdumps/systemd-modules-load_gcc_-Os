
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-modules-load_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401170 <_init>:
  401170:	stp	x29, x30, [sp, #-16]!
  401174:	mov	x29, sp
  401178:	bl	401830 <call_weak_fn>
  40117c:	ldp	x29, x30, [sp], #16
  401180:	ret

Disassembly of section .plt:

0000000000401190 <.plt>:
  401190:	stp	x16, x30, [sp, #-16]!
  401194:	adrp	x16, 412000 <__FRAME_END__+0xfcc0>
  401198:	ldr	x17, [x16, #3776]
  40119c:	add	x16, x16, #0xec0
  4011a0:	br	x17
  4011a4:	nop
  4011a8:	nop
  4011ac:	nop

00000000004011b0 <safe_fclose@plt>:
  4011b0:	adrp	x16, 412000 <__FRAME_END__+0xfcc0>
  4011b4:	ldr	x17, [x16, #3784]
  4011b8:	add	x16, x16, #0xec8
  4011bc:	br	x17

00000000004011c0 <read_line_full@plt>:
  4011c0:	adrp	x16, 412000 <__FRAME_END__+0xfcc0>
  4011c4:	ldr	x17, [x16, #3792]
  4011c8:	add	x16, x16, #0xed0
  4011cc:	br	x17

00000000004011d0 <__libc_start_main@plt>:
  4011d0:	adrp	x16, 412000 <__FRAME_END__+0xfcc0>
  4011d4:	ldr	x17, [x16, #3800]
  4011d8:	add	x16, x16, #0xed8
  4011dc:	br	x17

00000000004011e0 <strv_extend_strv@plt>:
  4011e0:	adrp	x16, 412000 <__FRAME_END__+0xfcc0>
  4011e4:	ldr	x17, [x16, #3808]
  4011e8:	add	x16, x16, #0xee0
  4011ec:	br	x17

00000000004011f0 <__gmon_start__@plt>:
  4011f0:	adrp	x16, 412000 <__FRAME_END__+0xfcc0>
  4011f4:	ldr	x17, [x16, #3816]
  4011f8:	add	x16, x16, #0xee8
  4011fc:	br	x17

0000000000401200 <polkit_agent_close@plt>:
  401200:	adrp	x16, 412000 <__FRAME_END__+0xfcc0>
  401204:	ldr	x17, [x16, #3824]
  401208:	add	x16, x16, #0xef0
  40120c:	br	x17

0000000000401210 <strv_split_full@plt>:
  401210:	adrp	x16, 412000 <__FRAME_END__+0xfcc0>
  401214:	ldr	x17, [x16, #3832]
  401218:	add	x16, x16, #0xef8
  40121c:	br	x17

0000000000401220 <proc_cmdline_key_streq@plt>:
  401220:	adrp	x16, 412000 <__FRAME_END__+0xfcc0>
  401224:	ldr	x17, [x16, #3840]
  401228:	add	x16, x16, #0xf00
  40122c:	br	x17

0000000000401230 <kmod_new@plt>:
  401230:	adrp	x16, 412000 <__FRAME_END__+0xfcc0>
  401234:	ldr	x17, [x16, #3848]
  401238:	add	x16, x16, #0xf08
  40123c:	br	x17

0000000000401240 <kmod_set_log_fn@plt>:
  401240:	adrp	x16, 412000 <__FRAME_END__+0xfcc0>
  401244:	ldr	x17, [x16, #3856]
  401248:	add	x16, x16, #0xf10
  40124c:	br	x17

0000000000401250 <log_setup_service@plt>:
  401250:	adrp	x16, 412000 <__FRAME_END__+0xfcc0>
  401254:	ldr	x17, [x16, #3864]
  401258:	add	x16, x16, #0xf18
  40125c:	br	x17

0000000000401260 <log_assert_failed_realm@plt>:
  401260:	adrp	x16, 412000 <__FRAME_END__+0xfcc0>
  401264:	ldr	x17, [x16, #3872]
  401268:	add	x16, x16, #0xf20
  40126c:	br	x17

0000000000401270 <getopt_long@plt>:
  401270:	adrp	x16, 412000 <__FRAME_END__+0xfcc0>
  401274:	ldr	x17, [x16, #3880]
  401278:	add	x16, x16, #0xf28
  40127c:	br	x17

0000000000401280 <log_assert_failed_unreachable_realm@plt>:
  401280:	adrp	x16, 412000 <__FRAME_END__+0xfcc0>
  401284:	ldr	x17, [x16, #3888]
  401288:	add	x16, x16, #0xf30
  40128c:	br	x17

0000000000401290 <umask@plt>:
  401290:	adrp	x16, 412000 <__FRAME_END__+0xfcc0>
  401294:	ldr	x17, [x16, #3896]
  401298:	add	x16, x16, #0xf38
  40129c:	br	x17

00000000004012a0 <abort@plt>:
  4012a0:	adrp	x16, 412000 <__FRAME_END__+0xfcc0>
  4012a4:	ldr	x17, [x16, #3904]
  4012a8:	add	x16, x16, #0xf40
  4012ac:	br	x17

00000000004012b0 <kmod_unref@plt>:
  4012b0:	adrp	x16, 412000 <__FRAME_END__+0xfcc0>
  4012b4:	ldr	x17, [x16, #3912]
  4012b8:	add	x16, x16, #0xf48
  4012bc:	br	x17

00000000004012c0 <strv_free@plt>:
  4012c0:	adrp	x16, 412000 <__FRAME_END__+0xfcc0>
  4012c4:	ldr	x17, [x16, #3920]
  4012c8:	add	x16, x16, #0xf50
  4012cc:	br	x17

00000000004012d0 <module_load_and_warn@plt>:
  4012d0:	adrp	x16, 412000 <__FRAME_END__+0xfcc0>
  4012d4:	ldr	x17, [x16, #3928]
  4012d8:	add	x16, x16, #0xf58
  4012dc:	br	x17

00000000004012e0 <terminal_urlify_man@plt>:
  4012e0:	adrp	x16, 412000 <__FRAME_END__+0xfcc0>
  4012e4:	ldr	x17, [x16, #3936]
  4012e8:	add	x16, x16, #0xf60
  4012ec:	br	x17

00000000004012f0 <__stack_chk_fail@plt>:
  4012f0:	adrp	x16, 412000 <__FRAME_END__+0xfcc0>
  4012f4:	ldr	x17, [x16, #3944]
  4012f8:	add	x16, x16, #0xf68
  4012fc:	br	x17

0000000000401300 <conf_files_list_nulstr@plt>:
  401300:	adrp	x16, 412000 <__FRAME_END__+0xfcc0>
  401304:	ldr	x17, [x16, #3952]
  401308:	add	x16, x16, #0xf70
  40130c:	br	x17

0000000000401310 <ask_password_agent_close@plt>:
  401310:	adrp	x16, 412000 <__FRAME_END__+0xfcc0>
  401314:	ldr	x17, [x16, #3960]
  401318:	add	x16, x16, #0xf78
  40131c:	br	x17

0000000000401320 <version@plt>:
  401320:	adrp	x16, 412000 <__FRAME_END__+0xfcc0>
  401324:	ldr	x17, [x16, #3968]
  401328:	add	x16, x16, #0xf80
  40132c:	br	x17

0000000000401330 <pager_close@plt>:
  401330:	adrp	x16, 412000 <__FRAME_END__+0xfcc0>
  401334:	ldr	x17, [x16, #3976]
  401338:	add	x16, x16, #0xf88
  40133c:	br	x17

0000000000401340 <log_internal_realm@plt>:
  401340:	adrp	x16, 412000 <__FRAME_END__+0xfcc0>
  401344:	ldr	x17, [x16, #3984]
  401348:	add	x16, x16, #0xf90
  40134c:	br	x17

0000000000401350 <strchr@plt>:
  401350:	adrp	x16, 412000 <__FRAME_END__+0xfcc0>
  401354:	ldr	x17, [x16, #3992]
  401358:	add	x16, x16, #0xf98
  40135c:	br	x17

0000000000401360 <proc_cmdline_parse@plt>:
  401360:	adrp	x16, 412000 <__FRAME_END__+0xfcc0>
  401364:	ldr	x17, [x16, #4000]
  401368:	add	x16, x16, #0xfa0
  40136c:	br	x17

0000000000401370 <log_internalv_realm@plt>:
  401370:	adrp	x16, 412000 <__FRAME_END__+0xfcc0>
  401374:	ldr	x17, [x16, #4008]
  401378:	add	x16, x16, #0xfa8
  40137c:	br	x17

0000000000401380 <strstrip@plt>:
  401380:	adrp	x16, 412000 <__FRAME_END__+0xfcc0>
  401384:	ldr	x17, [x16, #4016]
  401388:	add	x16, x16, #0xfb0
  40138c:	br	x17

0000000000401390 <free@plt>:
  401390:	adrp	x16, 412000 <__FRAME_END__+0xfcc0>
  401394:	ldr	x17, [x16, #4024]
  401398:	add	x16, x16, #0xfb8
  40139c:	br	x17

00000000004013a0 <search_and_fopen_nulstr@plt>:
  4013a0:	adrp	x16, 412000 <__FRAME_END__+0xfcc0>
  4013a4:	ldr	x17, [x16, #4032]
  4013a8:	add	x16, x16, #0xfc0
  4013ac:	br	x17

00000000004013b0 <mac_selinux_finish@plt>:
  4013b0:	adrp	x16, 412000 <__FRAME_END__+0xfcc0>
  4013b4:	ldr	x17, [x16, #4040]
  4013b8:	add	x16, x16, #0xfc8
  4013bc:	br	x17

00000000004013c0 <printf@plt>:
  4013c0:	adrp	x16, 412000 <__FRAME_END__+0xfcc0>
  4013c4:	ldr	x17, [x16, #4048]
  4013c8:	add	x16, x16, #0xfd0
  4013cc:	br	x17

00000000004013d0 <kmod_load_resources@plt>:
  4013d0:	adrp	x16, 412000 <__FRAME_END__+0xfcc0>
  4013d4:	ldr	x17, [x16, #4056]
  4013d8:	add	x16, x16, #0xfd8
  4013dc:	br	x17

00000000004013e0 <log_oom_internal@plt>:
  4013e0:	adrp	x16, 412000 <__FRAME_END__+0xfcc0>
  4013e4:	ldr	x17, [x16, #4064]
  4013e8:	add	x16, x16, #0xfe0
  4013ec:	br	x17

00000000004013f0 <log_get_max_level_realm@plt>:
  4013f0:	adrp	x16, 412000 <__FRAME_END__+0xfcc0>
  4013f4:	ldr	x17, [x16, #4072]
  4013f8:	add	x16, x16, #0xfe8
  4013fc:	br	x17

Disassembly of section .text:

0000000000401400 <main>:
  401400:	stp	x29, x30, [sp, #-80]!
  401404:	mov	x29, sp
  401408:	stp	x21, x22, [sp, #32]
  40140c:	adrp	x22, 412000 <__FRAME_END__+0xfcc0>
  401410:	add	x22, x22, #0xc68
  401414:	ldr	x2, [x22]
  401418:	str	x2, [sp, #72]
  40141c:	mov	x2, #0x0                   	// #0
  401420:	stp	x19, x20, [sp, #16]
  401424:	adrp	x2, 413000 <saved_argv@@SD_SHARED>
  401428:	stp	x23, x24, [sp, #48]
  40142c:	str	w0, [x2, #24]
  401430:	adrp	x2, 413000 <saved_argv@@SD_SHARED>
  401434:	str	x1, [x2]
  401438:	tbz	w0, #31, 401460 <main+0x60>
  40143c:	adrp	x4, 401000 <_init-0x170>
  401440:	adrp	x2, 401000 <_init-0x170>
  401444:	adrp	x1, 401000 <_init-0x170>
  401448:	add	x4, x4, #0xfe8
  40144c:	add	x2, x2, #0xdcd
  401450:	add	x1, x1, #0xe39
  401454:	mov	w3, #0x8b                  	// #139
  401458:	mov	w0, #0x0                   	// #0
  40145c:	bl	401260 <log_assert_failed_realm@plt>
  401460:	mov	x24, x1
  401464:	cbnz	x1, 40157c <main+0x17c>
  401468:	adrp	x4, 401000 <_init-0x170>
  40146c:	adrp	x2, 401000 <_init-0x170>
  401470:	adrp	x1, 401000 <_init-0x170>
  401474:	add	x4, x4, #0xfe8
  401478:	add	x2, x2, #0xdcd
  40147c:	add	x1, x1, #0xe43
  401480:	mov	w3, #0x8c                  	// #140
  401484:	b	401458 <main+0x58>
  401488:	cmp	w0, #0x68
  40148c:	b.eq	4014a8 <main+0xa8>  // b.none
  401490:	cmp	w0, #0x100
  401494:	b.eq	40154c <main+0x14c>  // b.none
  401498:	cmp	w0, #0x3f
  40149c:	b.ne	401558 <main+0x158>  // b.any
  4014a0:	mov	w19, #0xffffffea            	// #-22
  4014a4:	b	4014f8 <main+0xf8>
  4014a8:	adrp	x1, 401000 <_init-0x170>
  4014ac:	adrp	x0, 401000 <_init-0x170>
  4014b0:	add	x2, sp, #0x40
  4014b4:	add	x1, x1, #0xe48
  4014b8:	add	x0, x0, #0xe4a
  4014bc:	str	xzr, [sp, #64]
  4014c0:	bl	4012e0 <terminal_urlify_man@plt>
  4014c4:	tbz	w0, #31, 40152c <main+0x12c>
  4014c8:	adrp	x3, 401000 <_init-0x170>
  4014cc:	mov	w2, #0x70                  	// #112
  4014d0:	add	x3, x3, #0xffe
  4014d4:	adrp	x1, 401000 <_init-0x170>
  4014d8:	mov	w0, #0x0                   	// #0
  4014dc:	add	x1, x1, #0xdcd
  4014e0:	bl	4013e0 <log_oom_internal@plt>
  4014e4:	mov	w19, w0
  4014e8:	ldr	x0, [sp, #64]
  4014ec:	bl	401390 <free@plt>
  4014f0:	cmp	w19, #0x0
  4014f4:	b.gt	40159c <main+0x19c>
  4014f8:	bl	401310 <ask_password_agent_close@plt>
  4014fc:	bl	401200 <polkit_agent_close@plt>
  401500:	bl	401330 <pager_close@plt>
  401504:	bl	4013b0 <mac_selinux_finish@plt>
  401508:	adrp	x0, 401000 <_init-0x170>
  40150c:	ldr	x0, [x0, #4056]
  401510:	cbnz	x0, 40179c <main+0x39c>
  401514:	lsr	w0, w19, #31
  401518:	ldr	x2, [sp, #72]
  40151c:	ldr	x1, [x22]
  401520:	eor	x1, x2, x1
  401524:	cbz	x1, 4017cc <main+0x3cc>
  401528:	bl	4012f0 <__stack_chk_fail@plt>
  40152c:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401530:	mov	w19, #0x0                   	// #0
  401534:	ldr	x2, [sp, #64]
  401538:	ldr	x1, [x0, #8]
  40153c:	adrp	x0, 401000 <_init-0x170>
  401540:	add	x0, x0, #0xe67
  401544:	bl	4013c0 <printf@plt>
  401548:	b	4014e8 <main+0xe8>
  40154c:	bl	401320 <version@plt>
  401550:	mov	w19, w0
  401554:	b	4014f0 <main+0xf0>
  401558:	adrp	x4, 401000 <_init-0x170>
  40155c:	adrp	x2, 401000 <_init-0x170>
  401560:	adrp	x1, 401000 <_init-0x170>
  401564:	add	x4, x4, #0xfe8
  401568:	add	x2, x2, #0xdcd
  40156c:	add	x1, x1, #0xf2b
  401570:	mov	w3, #0x9b                  	// #155
  401574:	mov	w0, #0x0                   	// #0
  401578:	bl	401280 <log_assert_failed_unreachable_realm@plt>
  40157c:	adrp	x3, 402000 <__func__.10019+0x2>
  401580:	adrp	x2, 401000 <_init-0x170>
  401584:	mov	w23, w0
  401588:	add	x3, x3, #0xb0
  40158c:	add	x2, x2, #0xdc8
  401590:	mov	x4, #0x0                   	// #0
  401594:	bl	401270 <getopt_long@plt>
  401598:	tbz	w0, #31, 401488 <main+0x88>
  40159c:	bl	401250 <log_setup_service@plt>
  4015a0:	mov	w0, #0x12                  	// #18
  4015a4:	bl	401290 <umask@plt>
  4015a8:	mov	w2, #0x1                   	// #1
  4015ac:	mov	x1, #0x0                   	// #0
  4015b0:	adrp	x0, 401000 <_init-0x170>
  4015b4:	add	x0, x0, #0x950
  4015b8:	bl	401360 <proc_cmdline_parse@plt>
  4015bc:	mov	w19, w0
  4015c0:	tbz	w0, #31, 4015fc <main+0x1fc>
  4015c4:	mov	w0, #0x0                   	// #0
  4015c8:	bl	4013f0 <log_get_max_level_realm@plt>
  4015cc:	cmp	w0, #0x3
  4015d0:	b.le	4015fc <main+0x1fc>
  4015d4:	adrp	x5, 401000 <_init-0x170>
  4015d8:	adrp	x4, 402000 <__func__.10019+0x2>
  4015dc:	adrp	x2, 401000 <_init-0x170>
  4015e0:	add	x5, x5, #0xf3c
  4015e4:	add	x4, x4, #0x3
  4015e8:	add	x2, x2, #0xdcd
  4015ec:	mov	w1, w19
  4015f0:	mov	w3, #0xaf                  	// #175
  4015f4:	mov	w0, #0x4                   	// #4
  4015f8:	bl	401340 <log_internal_realm@plt>
  4015fc:	mov	x1, #0x0                   	// #0
  401600:	mov	x0, #0x0                   	// #0
  401604:	bl	401230 <kmod_new@plt>
  401608:	mov	x20, x0
  40160c:	cbnz	x0, 401650 <main+0x250>
  401610:	mov	w0, #0x0                   	// #0
  401614:	bl	4013f0 <log_get_max_level_realm@plt>
  401618:	cmp	w0, #0x2
  40161c:	b.le	401648 <main+0x248>
  401620:	adrp	x5, 401000 <_init-0x170>
  401624:	adrp	x4, 402000 <__func__.10019+0x2>
  401628:	adrp	x2, 401000 <_init-0x170>
  40162c:	add	x5, x5, #0xf6e
  401630:	add	x4, x4, #0x3
  401634:	add	x2, x2, #0xdcd
  401638:	mov	w3, #0xb3                  	// #179
  40163c:	mov	w1, #0x0                   	// #0
  401640:	mov	w0, #0x3                   	// #3
  401644:	bl	401340 <log_internal_realm@plt>
  401648:	mov	w19, #0xfffffff4            	// #-12
  40164c:	b	4014f8 <main+0xf8>
  401650:	bl	4013d0 <kmod_load_resources@plt>
  401654:	mov	x0, x20
  401658:	mov	x2, #0x0                   	// #0
  40165c:	adrp	x1, 401000 <_init-0x170>
  401660:	add	x1, x1, #0x90c
  401664:	bl	401240 <kmod_set_log_fn@plt>
  401668:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  40166c:	ldr	w21, [x0, #16]
  401670:	cmp	w23, w21
  401674:	b.le	4016b4 <main+0x2b4>
  401678:	sxtw	x21, w21
  40167c:	mov	w19, #0x0                   	// #0
  401680:	ldr	x1, [x24, x21, lsl #3]
  401684:	mov	x0, x20
  401688:	mov	w2, #0x0                   	// #0
  40168c:	add	x21, x21, #0x1
  401690:	bl	401a48 <apply_file>
  401694:	cmp	w0, #0x0
  401698:	ccmp	w19, #0x0, #0x0, lt  // lt = tstop
  40169c:	csel	w19, w19, w0, ne  // ne = any
  4016a0:	cmp	w23, w21
  4016a4:	b.gt	401680 <main+0x280>
  4016a8:	mov	x0, x20
  4016ac:	bl	4012b0 <kmod_unref@plt>
  4016b0:	b	4014f8 <main+0xf8>
  4016b4:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  4016b8:	mov	w19, #0x0                   	// #0
  4016bc:	str	xzr, [sp, #64]
  4016c0:	ldr	x21, [x0, #32]
  4016c4:	cbz	x21, 4016d0 <main+0x2d0>
  4016c8:	ldr	x1, [x21]
  4016cc:	cbnz	x1, 401744 <main+0x344>
  4016d0:	add	x0, sp, #0x40
  4016d4:	adrp	x4, 402000 <__func__.10019+0x2>
  4016d8:	mov	w3, #0x0                   	// #0
  4016dc:	add	x4, x4, #0x39
  4016e0:	mov	x2, #0x0                   	// #0
  4016e4:	adrp	x1, 401000 <_init-0x170>
  4016e8:	add	x1, x1, #0xf92
  4016ec:	bl	401300 <conf_files_list_nulstr@plt>
  4016f0:	mov	w21, w0
  4016f4:	tbz	w0, #31, 40176c <main+0x36c>
  4016f8:	mov	w0, #0x0                   	// #0
  4016fc:	bl	4013f0 <log_get_max_level_realm@plt>
  401700:	cmp	w0, #0x2
  401704:	b.le	401730 <main+0x330>
  401708:	adrp	x5, 401000 <_init-0x170>
  40170c:	adrp	x4, 402000 <__func__.10019+0x2>
  401710:	adrp	x2, 401000 <_init-0x170>
  401714:	add	x5, x5, #0xf98
  401718:	add	x4, x4, #0x3
  40171c:	add	x2, x2, #0xdcd
  401720:	mov	w1, w21
  401724:	mov	w3, #0xd3                  	// #211
  401728:	mov	w0, #0x3                   	// #3
  40172c:	bl	401340 <log_internal_realm@plt>
  401730:	cmp	w19, #0x0
  401734:	csel	w19, w19, w21, ne  // ne = any
  401738:	ldr	x0, [sp, #64]
  40173c:	bl	40193c <strv_freep.isra.0>
  401740:	b	4016a8 <main+0x2a8>
  401744:	mov	x0, x20
  401748:	mov	w2, #0x1                   	// #1
  40174c:	bl	4012d0 <module_load_and_warn@plt>
  401750:	cmn	w0, #0x2
  401754:	b.eq	401764 <main+0x364>  // b.none
  401758:	cmp	w0, #0x0
  40175c:	ccmp	w19, #0x0, #0x0, lt  // lt = tstop
  401760:	csel	w19, w19, w0, ne  // ne = any
  401764:	add	x21, x21, #0x8
  401768:	b	4016c4 <main+0x2c4>
  40176c:	ldr	x21, [sp, #64]
  401770:	cbz	x21, 401738 <main+0x338>
  401774:	ldr	x1, [x21]
  401778:	cbz	x1, 401738 <main+0x338>
  40177c:	mov	x0, x20
  401780:	mov	w2, #0x1                   	// #1
  401784:	bl	401a48 <apply_file>
  401788:	cmp	w0, #0x0
  40178c:	ccmp	w19, #0x0, #0x0, lt  // lt = tstop
  401790:	add	x21, x21, #0x8
  401794:	csel	w19, w0, w19, eq  // eq = none
  401798:	b	401770 <main+0x370>
  40179c:	add	x0, x0, #0x7
  4017a0:	adrp	x21, 401000 <_init-0x170>
  4017a4:	and	x0, x0, #0xfffffffffffffff8
  4017a8:	ldr	x1, [x21, #4064]
  4017ac:	cmp	x0, x1
  4017b0:	b.cs	401514 <main+0x114>  // b.hs, b.nlast
  4017b4:	mov	x20, x0
  4017b8:	ldr	x1, [x0, #8]
  4017bc:	ldr	x0, [x20], #23
  4017c0:	blr	x1
  4017c4:	and	x0, x20, #0xfffffffffffffff8
  4017c8:	b	4017a8 <main+0x3a8>
  4017cc:	ldp	x19, x20, [sp, #16]
  4017d0:	ldp	x21, x22, [sp, #32]
  4017d4:	ldp	x23, x24, [sp, #48]
  4017d8:	ldp	x29, x30, [sp], #80
  4017dc:	ret

00000000004017e0 <_start>:
  4017e0:	mov	x29, #0x0                   	// #0
  4017e4:	mov	x30, #0x0                   	// #0
  4017e8:	mov	x5, x0
  4017ec:	ldr	x1, [sp]
  4017f0:	add	x2, sp, #0x8
  4017f4:	mov	x6, sp
  4017f8:	movz	x0, #0x0, lsl #48
  4017fc:	movk	x0, #0x0, lsl #32
  401800:	movk	x0, #0x40, lsl #16
  401804:	movk	x0, #0x1400
  401808:	movz	x3, #0x0, lsl #48
  40180c:	movk	x3, #0x0, lsl #32
  401810:	movk	x3, #0x40, lsl #16
  401814:	movk	x3, #0x1cb8
  401818:	movz	x4, #0x0, lsl #48
  40181c:	movk	x4, #0x0, lsl #32
  401820:	movk	x4, #0x40, lsl #16
  401824:	movk	x4, #0x1d38
  401828:	bl	4011d0 <__libc_start_main@plt>
  40182c:	bl	4012a0 <abort@plt>

0000000000401830 <call_weak_fn>:
  401830:	adrp	x0, 412000 <__FRAME_END__+0xfcc0>
  401834:	ldr	x0, [x0, #4088]
  401838:	cbz	x0, 401840 <call_weak_fn+0x10>
  40183c:	b	4011f0 <__gmon_start__@plt>
  401840:	ret

0000000000401844 <deregister_tm_clones>:
  401844:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401848:	add	x1, x0, #0x0
  40184c:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401850:	add	x0, x0, #0x0
  401854:	cmp	x1, x0
  401858:	b.eq	401884 <deregister_tm_clones+0x40>  // b.none
  40185c:	sub	sp, sp, #0x10
  401860:	adrp	x1, 401000 <_init-0x170>
  401864:	ldr	x1, [x1, #3408]
  401868:	str	x1, [sp, #8]
  40186c:	cbz	x1, 40187c <deregister_tm_clones+0x38>
  401870:	mov	x16, x1
  401874:	add	sp, sp, #0x10
  401878:	br	x16
  40187c:	add	sp, sp, #0x10
  401880:	ret
  401884:	ret

0000000000401888 <register_tm_clones>:
  401888:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  40188c:	add	x1, x0, #0x0
  401890:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401894:	add	x0, x0, #0x0
  401898:	sub	x1, x1, x0
  40189c:	mov	x2, #0x2                   	// #2
  4018a0:	asr	x1, x1, #3
  4018a4:	sdiv	x1, x1, x2
  4018a8:	cbz	x1, 4018d4 <register_tm_clones+0x4c>
  4018ac:	sub	sp, sp, #0x10
  4018b0:	adrp	x2, 401000 <_init-0x170>
  4018b4:	ldr	x2, [x2, #3416]
  4018b8:	str	x2, [sp, #8]
  4018bc:	cbz	x2, 4018cc <register_tm_clones+0x44>
  4018c0:	mov	x16, x2
  4018c4:	add	sp, sp, #0x10
  4018c8:	br	x16
  4018cc:	add	sp, sp, #0x10
  4018d0:	ret
  4018d4:	ret

00000000004018d8 <__do_global_dtors_aux>:
  4018d8:	stp	x29, x30, [sp, #-32]!
  4018dc:	mov	x29, sp
  4018e0:	str	x19, [sp, #16]
  4018e4:	adrp	x19, 413000 <saved_argv@@SD_SHARED>
  4018e8:	ldrb	w0, [x19, #28]
  4018ec:	cbnz	w0, 4018fc <__do_global_dtors_aux+0x24>
  4018f0:	bl	401844 <deregister_tm_clones>
  4018f4:	mov	w0, #0x1                   	// #1
  4018f8:	strb	w0, [x19, #28]
  4018fc:	ldr	x19, [sp, #16]
  401900:	ldp	x29, x30, [sp], #32
  401904:	ret

0000000000401908 <frame_dummy>:
  401908:	b	401888 <register_tm_clones>

000000000040190c <systemd_kmod_log>:
  40190c:	stp	x29, x30, [sp, #-48]!
  401910:	mov	w0, w1
  401914:	mov	w1, #0x0                   	// #0
  401918:	mov	x29, sp
  40191c:	ldp	x8, x9, [x6]
  401920:	stp	x8, x9, [sp, #16]
  401924:	ldp	x6, x7, [x6, #16]
  401928:	stp	x6, x7, [sp, #32]
  40192c:	add	x6, sp, #0x10
  401930:	bl	401370 <log_internalv_realm@plt>
  401934:	ldp	x29, x30, [sp], #48
  401938:	ret

000000000040193c <strv_freep.isra.0>:
  40193c:	cbz	x0, 401944 <strv_freep.isra.0+0x8>
  401940:	b	4012c0 <strv_free@plt>
  401944:	ret

0000000000401948 <__unique_prefix_static_destructor_wrapper0>:
  401948:	ldr	x0, [x0]
  40194c:	b	40193c <strv_freep.isra.0>

0000000000401950 <parse_proc_cmdline_item>:
  401950:	stp	x29, x30, [sp, #-32]!
  401954:	mov	x29, sp
  401958:	stp	x19, x20, [sp, #16]
  40195c:	mov	x20, x0
  401960:	mov	x19, x1
  401964:	adrp	x1, 401000 <_init-0x170>
  401968:	add	x1, x1, #0xd60
  40196c:	bl	401220 <proc_cmdline_key_streq@plt>
  401970:	tst	w0, #0xff
  401974:	b.eq	401a10 <parse_proc_cmdline_item+0xc0>  // b.none
  401978:	cbz	x19, 4019d4 <parse_proc_cmdline_item+0x84>
  40197c:	mov	x0, x19
  401980:	mov	w2, #0x0                   	// #0
  401984:	adrp	x1, 401000 <_init-0x170>
  401988:	add	x1, x1, #0xd6d
  40198c:	bl	401210 <strv_split_full@plt>
  401990:	mov	x20, x0
  401994:	cbnz	x0, 401a18 <parse_proc_cmdline_item+0xc8>
  401998:	adrp	x3, 402000 <__func__.10019+0x2>
  40199c:	add	x3, x3, #0x22
  4019a0:	mov	w2, #0x27                  	// #39
  4019a4:	adrp	x1, 401000 <_init-0x170>
  4019a8:	mov	w0, #0x0                   	// #0
  4019ac:	add	x1, x1, #0xdcd
  4019b0:	bl	4013e0 <log_oom_internal@plt>
  4019b4:	mov	w19, w0
  4019b8:	mov	x0, x20
  4019bc:	bl	40193c <strv_freep.isra.0>
  4019c0:	cmp	w19, #0x0
  4019c4:	csel	w0, w19, wzr, le
  4019c8:	ldp	x19, x20, [sp, #16]
  4019cc:	ldp	x29, x30, [sp], #32
  4019d0:	ret
  4019d4:	mov	w0, #0x0                   	// #0
  4019d8:	bl	4013f0 <log_get_max_level_realm@plt>
  4019dc:	cmp	w0, #0x3
  4019e0:	b.le	401a10 <parse_proc_cmdline_item+0xc0>
  4019e4:	adrp	x5, 401000 <_init-0x170>
  4019e8:	adrp	x4, 402000 <__func__.10019+0x2>
  4019ec:	adrp	x2, 401000 <_init-0x170>
  4019f0:	mov	x6, x20
  4019f4:	add	x5, x5, #0xd6f
  4019f8:	add	x4, x4, #0x7
  4019fc:	add	x2, x2, #0xdb1
  401a00:	mov	w3, #0x21                  	// #33
  401a04:	mov	w1, #0x0                   	// #0
  401a08:	mov	w0, #0x4                   	// #4
  401a0c:	bl	401340 <log_internal_realm@plt>
  401a10:	mov	w0, #0x0                   	// #0
  401a14:	b	4019c8 <parse_proc_cmdline_item+0x78>
  401a18:	mov	x1, x0
  401a1c:	mov	w2, #0x1                   	// #1
  401a20:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401a24:	add	x0, x0, #0x20
  401a28:	bl	4011e0 <strv_extend_strv@plt>
  401a2c:	tbz	w0, #31, 401a40 <parse_proc_cmdline_item+0xf0>
  401a30:	adrp	x3, 402000 <__func__.10019+0x2>
  401a34:	mov	w2, #0x2a                  	// #42
  401a38:	add	x3, x3, #0x22
  401a3c:	b	4019a4 <parse_proc_cmdline_item+0x54>
  401a40:	mov	w19, #0x0                   	// #0
  401a44:	b	4019b8 <parse_proc_cmdline_item+0x68>

0000000000401a48 <apply_file>:
  401a48:	stp	x29, x30, [sp, #-96]!
  401a4c:	mov	x29, sp
  401a50:	stp	x21, x22, [sp, #32]
  401a54:	adrp	x22, 412000 <__FRAME_END__+0xfcc0>
  401a58:	add	x22, x22, #0xc68
  401a5c:	stp	x23, x24, [sp, #48]
  401a60:	mov	x23, x0
  401a64:	ldr	x0, [x22]
  401a68:	str	x0, [sp, #88]
  401a6c:	mov	x0, #0x0                   	// #0
  401a70:	stp	x19, x20, [sp, #16]
  401a74:	str	xzr, [sp, #72]
  401a78:	cbnz	x23, 401a9c <apply_file+0x54>
  401a7c:	adrp	x4, 401000 <_init-0x170>
  401a80:	adrp	x2, 401000 <_init-0x170>
  401a84:	adrp	x1, 401000 <_init-0x170>
  401a88:	add	x4, x4, #0xff3
  401a8c:	add	x2, x2, #0xdcd
  401a90:	add	x1, x1, #0xded
  401a94:	mov	w3, #0x43                  	// #67
  401a98:	bl	401260 <log_assert_failed_realm@plt>
  401a9c:	mov	x21, x1
  401aa0:	cbnz	x1, 401ac8 <apply_file+0x80>
  401aa4:	adrp	x4, 401000 <_init-0x170>
  401aa8:	adrp	x2, 401000 <_init-0x170>
  401aac:	adrp	x1, 401000 <_init-0x170>
  401ab0:	add	x4, x4, #0xff3
  401ab4:	add	x2, x2, #0xdcd
  401ab8:	add	x1, x1, #0xdf1
  401abc:	mov	w3, #0x44                  	// #68
  401ac0:	mov	w0, #0x0                   	// #0
  401ac4:	b	401a98 <apply_file+0x50>
  401ac8:	and	w20, w2, #0xff
  401acc:	add	x4, sp, #0x48
  401ad0:	mov	x0, x21
  401ad4:	adrp	x3, 402000 <__func__.10019+0x2>
  401ad8:	mov	x2, #0x0                   	// #0
  401adc:	add	x3, x3, #0x39
  401ae0:	adrp	x1, 401000 <_init-0x170>
  401ae4:	add	x1, x1, #0xdf6
  401ae8:	bl	4013a0 <search_and_fopen_nulstr@plt>
  401aec:	mov	w19, w0
  401af0:	tbz	w0, #31, 401b6c <apply_file+0x124>
  401af4:	cmp	w20, #0x0
  401af8:	ccmn	w0, #0x2, #0x0, ne  // ne = any
  401afc:	b.eq	401c98 <apply_file+0x250>  // b.none
  401b00:	mov	w0, #0x0                   	// #0
  401b04:	bl	4013f0 <log_get_max_level_realm@plt>
  401b08:	cmp	w0, #0x2
  401b0c:	b.le	401b5c <apply_file+0x114>
  401b10:	mov	w1, w19
  401b14:	mov	x6, x21
  401b18:	adrp	x5, 401000 <_init-0x170>
  401b1c:	adrp	x4, 402000 <__func__.10019+0x2>
  401b20:	add	x5, x5, #0xdf9
  401b24:	add	x4, x4, #0x2e
  401b28:	mov	w3, #0x4b                  	// #75
  401b2c:	adrp	x2, 401000 <_init-0x170>
  401b30:	mov	w0, #0x3                   	// #3
  401b34:	add	x2, x2, #0xdcd
  401b38:	bl	401340 <log_internal_realm@plt>
  401b3c:	mov	w19, w0
  401b40:	ldr	x0, [sp, #72]
  401b44:	bl	4011b0 <safe_fclose@plt>
  401b48:	ldr	x1, [sp, #88]
  401b4c:	ldr	x0, [x22]
  401b50:	eor	x0, x1, x0
  401b54:	cbz	x0, 401ca0 <apply_file+0x258>
  401b58:	bl	4012f0 <__stack_chk_fail@plt>
  401b5c:	neg	w19, w19
  401b60:	and	w19, w19, #0xff
  401b64:	neg	w19, w19
  401b68:	b	401b40 <apply_file+0xf8>
  401b6c:	mov	w0, #0x0                   	// #0
  401b70:	bl	4013f0 <log_get_max_level_realm@plt>
  401b74:	cmp	w0, #0x6
  401b78:	b.le	401ba8 <apply_file+0x160>
  401b7c:	adrp	x5, 401000 <_init-0x170>
  401b80:	adrp	x4, 402000 <__func__.10019+0x2>
  401b84:	adrp	x2, 401000 <_init-0x170>
  401b88:	mov	x6, x21
  401b8c:	add	x5, x5, #0xe0f
  401b90:	add	x4, x4, #0x2e
  401b94:	add	x2, x2, #0xdcd
  401b98:	mov	w3, #0x4e                  	// #78
  401b9c:	mov	w1, #0x0                   	// #0
  401ba0:	mov	w0, #0x7                   	// #7
  401ba4:	bl	401340 <log_internal_realm@plt>
  401ba8:	adrp	x24, 401000 <_init-0x170>
  401bac:	add	x24, x24, #0xe36
  401bb0:	ldr	x0, [sp, #72]
  401bb4:	add	x3, sp, #0x50
  401bb8:	mov	w2, #0x0                   	// #0
  401bbc:	mov	x1, #0x100000              	// #1048576
  401bc0:	str	xzr, [sp, #80]
  401bc4:	bl	4011c0 <read_line_full@plt>
  401bc8:	mov	w20, w0
  401bcc:	cmp	w0, #0x0
  401bd0:	b.ge	401c30 <apply_file+0x1e8>  // b.tcont
  401bd4:	mov	w0, #0x0                   	// #0
  401bd8:	bl	4013f0 <log_get_max_level_realm@plt>
  401bdc:	cmp	w0, #0x2
  401be0:	b.le	401c20 <apply_file+0x1d8>
  401be4:	mov	x6, x21
  401be8:	mov	w1, w20
  401bec:	adrp	x5, 401000 <_init-0x170>
  401bf0:	adrp	x4, 402000 <__func__.10019+0x2>
  401bf4:	add	x5, x5, #0xe19
  401bf8:	add	x4, x4, #0x2e
  401bfc:	mov	w3, #0x56                  	// #86
  401c00:	adrp	x2, 401000 <_init-0x170>
  401c04:	mov	w0, #0x3                   	// #3
  401c08:	add	x2, x2, #0xdcd
  401c0c:	bl	401340 <log_internal_realm@plt>
  401c10:	mov	w19, w0
  401c14:	ldr	x0, [sp, #80]
  401c18:	bl	401390 <free@plt>
  401c1c:	b	401b40 <apply_file+0xf8>
  401c20:	neg	w19, w20
  401c24:	and	w19, w19, #0xff
  401c28:	neg	w19, w19
  401c2c:	b	401c14 <apply_file+0x1cc>
  401c30:	ldr	x0, [sp, #80]
  401c34:	b.eq	401c18 <apply_file+0x1d0>  // b.none
  401c38:	bl	401380 <strstrip@plt>
  401c3c:	mov	x20, x0
  401c40:	cbz	x0, 401c8c <apply_file+0x244>
  401c44:	ldrb	w1, [x0]
  401c48:	cbz	w1, 401c8c <apply_file+0x244>
  401c4c:	mov	x0, x24
  401c50:	bl	401350 <strchr@plt>
  401c54:	cbnz	x0, 401c8c <apply_file+0x244>
  401c58:	mov	x1, x20
  401c5c:	mov	x0, x23
  401c60:	mov	w2, #0x1                   	// #1
  401c64:	bl	4012d0 <module_load_and_warn@plt>
  401c68:	cmn	w0, #0x2
  401c6c:	b.eq	401c8c <apply_file+0x244>  // b.none
  401c70:	cmp	w0, #0x0
  401c74:	ccmp	w19, #0x0, #0x1, lt  // lt = tstop
  401c78:	csel	w20, w0, w19, ge  // ge = tcont
  401c7c:	ldr	x0, [sp, #80]
  401c80:	mov	w19, w20
  401c84:	bl	401390 <free@plt>
  401c88:	b	401bb0 <apply_file+0x168>
  401c8c:	ldr	x0, [sp, #80]
  401c90:	bl	401390 <free@plt>
  401c94:	b	401bb0 <apply_file+0x168>
  401c98:	mov	w19, #0x0                   	// #0
  401c9c:	b	401b40 <apply_file+0xf8>
  401ca0:	mov	w0, w19
  401ca4:	ldp	x19, x20, [sp, #16]
  401ca8:	ldp	x21, x22, [sp, #32]
  401cac:	ldp	x23, x24, [sp, #48]
  401cb0:	ldp	x29, x30, [sp], #96
  401cb4:	ret

0000000000401cb8 <__libc_csu_init>:
  401cb8:	stp	x29, x30, [sp, #-64]!
  401cbc:	mov	x29, sp
  401cc0:	stp	x19, x20, [sp, #16]
  401cc4:	adrp	x20, 412000 <__FRAME_END__+0xfcc0>
  401cc8:	add	x20, x20, #0xc60
  401ccc:	stp	x21, x22, [sp, #32]
  401cd0:	adrp	x21, 412000 <__FRAME_END__+0xfcc0>
  401cd4:	add	x21, x21, #0xc58
  401cd8:	sub	x20, x20, x21
  401cdc:	mov	w22, w0
  401ce0:	stp	x23, x24, [sp, #48]
  401ce4:	mov	x23, x1
  401ce8:	mov	x24, x2
  401cec:	bl	401170 <_init>
  401cf0:	cmp	xzr, x20, asr #3
  401cf4:	b.eq	401d20 <__libc_csu_init+0x68>  // b.none
  401cf8:	asr	x20, x20, #3
  401cfc:	mov	x19, #0x0                   	// #0
  401d00:	ldr	x3, [x21, x19, lsl #3]
  401d04:	mov	x2, x24
  401d08:	add	x19, x19, #0x1
  401d0c:	mov	x1, x23
  401d10:	mov	w0, w22
  401d14:	blr	x3
  401d18:	cmp	x20, x19
  401d1c:	b.ne	401d00 <__libc_csu_init+0x48>  // b.any
  401d20:	ldp	x19, x20, [sp, #16]
  401d24:	ldp	x21, x22, [sp, #32]
  401d28:	ldp	x23, x24, [sp, #48]
  401d2c:	ldp	x29, x30, [sp], #64
  401d30:	ret
  401d34:	nop

0000000000401d38 <__libc_csu_fini>:
  401d38:	ret

Disassembly of section .fini:

0000000000401d3c <_fini>:
  401d3c:	stp	x29, x30, [sp, #-16]!
  401d40:	mov	x29, sp
  401d44:	ldp	x29, x30, [sp], #16
  401d48:	ret
