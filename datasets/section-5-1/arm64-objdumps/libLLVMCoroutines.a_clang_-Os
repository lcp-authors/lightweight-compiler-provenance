In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMCoroutines.a_clang_-Os:

Coroutines.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	str	x19, [sp, #16]
       8:	mov	x29, sp
       c:	mov	x19, x0
      10:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
      14:	mov	x0, x19
      18:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
      1c:	mov	x0, x19
      20:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
      24:	mov	x0, x19
      28:	ldr	x19, [sp, #16]
      2c:	ldp	x29, x30, [sp], #32
      30:	b	0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>

0000000000000034 <_ZN4llvm35addCoroutinePassesToExtensionPointsERNS_18PassManagerBuilderE>:
      34:	sub	sp, sp, #0xd0
      38:	stp	x29, x30, [sp, #160]
      3c:	str	x21, [sp, #176]
      40:	stp	x20, x19, [sp, #192]
      44:	add	x29, sp, #0xa0
      48:	adrp	x8, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
      4c:	adrp	x20, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
      50:	adrp	x21, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
      54:	add	x8, x8, #0x0
      58:	add	x20, x20, #0x0
      5c:	add	x21, x21, #0x0
      60:	sub	x2, x29, #0x20
      64:	mov	w1, wzr
      68:	mov	x19, x0
      6c:	stp	x21, x20, [x29, #-16]
      70:	stur	x8, [x29, #-32]
      74:	bl	0 <_ZN4llvm18PassManagerBuilder12addExtensionENS0_16ExtensionPointTyESt8functionIFvRKS0_RNS_6legacy15PassManagerBaseEEE>
      78:	ldur	x8, [x29, #-16]
      7c:	cbz	x8, 90 <_ZN4llvm35addCoroutinePassesToExtensionPointsERNS_18PassManagerBuilderE+0x5c>
      80:	sub	x0, x29, #0x20
      84:	sub	x1, x29, #0x20
      88:	mov	w2, #0x3                   	// #3
      8c:	blr	x8
      90:	adrp	x8, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
      94:	add	x8, x8, #0x0
      98:	sub	x2, x29, #0x40
      9c:	mov	w1, #0x6                   	// #6
      a0:	mov	x0, x19
      a4:	stp	x21, x20, [x29, #-48]
      a8:	stur	x8, [x29, #-64]
      ac:	bl	0 <_ZN4llvm18PassManagerBuilder12addExtensionENS0_16ExtensionPointTyESt8functionIFvRKS0_RNS_6legacy15PassManagerBaseEEE>
      b0:	ldur	x8, [x29, #-48]
      b4:	cbz	x8, c8 <_ZN4llvm35addCoroutinePassesToExtensionPointsERNS_18PassManagerBuilderE+0x94>
      b8:	sub	x0, x29, #0x40
      bc:	sub	x1, x29, #0x40
      c0:	mov	w2, #0x3                   	// #3
      c4:	blr	x8
      c8:	adrp	x8, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
      cc:	add	x8, x8, #0x0
      d0:	add	x2, sp, #0x40
      d4:	mov	w1, #0x9                   	// #9
      d8:	mov	x0, x19
      dc:	stp	x21, x20, [sp, #80]
      e0:	str	x8, [sp, #64]
      e4:	bl	0 <_ZN4llvm18PassManagerBuilder12addExtensionENS0_16ExtensionPointTyESt8functionIFvRKS0_RNS_6legacy15PassManagerBaseEEE>
      e8:	ldr	x8, [sp, #80]
      ec:	cbz	x8, 100 <_ZN4llvm35addCoroutinePassesToExtensionPointsERNS_18PassManagerBuilderE+0xcc>
      f0:	add	x0, sp, #0x40
      f4:	add	x1, sp, #0x40
      f8:	mov	w2, #0x3                   	// #3
      fc:	blr	x8
     100:	adrp	x8, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     104:	add	x8, x8, #0x0
     108:	add	x2, sp, #0x20
     10c:	mov	w1, #0x3                   	// #3
     110:	mov	x0, x19
     114:	stp	x21, x20, [sp, #48]
     118:	str	x8, [sp, #32]
     11c:	bl	0 <_ZN4llvm18PassManagerBuilder12addExtensionENS0_16ExtensionPointTyESt8functionIFvRKS0_RNS_6legacy15PassManagerBaseEEE>
     120:	ldr	x8, [sp, #48]
     124:	cbz	x8, 138 <_ZN4llvm35addCoroutinePassesToExtensionPointsERNS_18PassManagerBuilderE+0x104>
     128:	add	x0, sp, #0x20
     12c:	add	x1, sp, #0x20
     130:	mov	w2, #0x3                   	// #3
     134:	blr	x8
     138:	adrp	x8, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     13c:	add	x8, x8, #0x0
     140:	mov	x2, sp
     144:	mov	w1, #0x4                   	// #4
     148:	mov	x0, x19
     14c:	stp	x21, x20, [sp, #16]
     150:	str	x8, [sp]
     154:	bl	0 <_ZN4llvm18PassManagerBuilder12addExtensionENS0_16ExtensionPointTyESt8functionIFvRKS0_RNS_6legacy15PassManagerBaseEEE>
     158:	ldr	x8, [sp, #16]
     15c:	cbz	x8, 170 <_ZN4llvm35addCoroutinePassesToExtensionPointsERNS_18PassManagerBuilderE+0x13c>
     160:	mov	x0, sp
     164:	mov	x1, sp
     168:	mov	w2, #0x3                   	// #3
     16c:	blr	x8
     170:	ldp	x20, x19, [sp, #192]
     174:	ldr	x21, [sp, #176]
     178:	ldp	x29, x30, [sp, #160]
     17c:	add	sp, sp, #0xd0
     180:	ret

0000000000000184 <_ZL23addCoroutineEarlyPassesRKN4llvm18PassManagerBuilderERNS_6legacy15PassManagerBaseE>:
     184:	stp	x29, x30, [sp, #-32]!
     188:	str	x19, [sp, #16]
     18c:	mov	x29, sp
     190:	mov	x19, x1
     194:	bl	0 <_ZN4llvm25createCoroEarlyLegacyPassEv>
     198:	ldr	x8, [x19]
     19c:	mov	x1, x0
     1a0:	mov	x0, x19
     1a4:	ldr	x19, [sp, #16]
     1a8:	ldr	x2, [x8, #16]
     1ac:	ldp	x29, x30, [sp], #32
     1b0:	br	x2

00000000000001b4 <_ZL22addCoroutineOpt0PassesRKN4llvm18PassManagerBuilderERNS_6legacy15PassManagerBaseE>:
     1b4:	stp	x29, x30, [sp, #-32]!
     1b8:	str	x19, [sp, #16]
     1bc:	mov	x29, sp
     1c0:	mov	x19, x1
     1c4:	bl	0 <_ZN4llvm25createCoroSplitLegacyPassEv>
     1c8:	ldr	x8, [x19]
     1cc:	mov	x1, x0
     1d0:	mov	x0, x19
     1d4:	ldr	x8, [x8, #16]
     1d8:	blr	x8
     1dc:	bl	0 <_ZN4llvm25createCoroElideLegacyPassEv>
     1e0:	ldr	x8, [x19]
     1e4:	mov	x1, x0
     1e8:	mov	x0, x19
     1ec:	ldr	x8, [x8, #16]
     1f0:	blr	x8
     1f4:	bl	0 <_ZN4llvm21createBarrierNoopPassEv>
     1f8:	ldr	x8, [x19]
     1fc:	mov	x1, x0
     200:	mov	x0, x19
     204:	ldr	x8, [x8, #16]
     208:	blr	x8
     20c:	bl	0 <_ZN4llvm27createCoroCleanupLegacyPassEv>
     210:	ldr	x8, [x19]
     214:	mov	x1, x0
     218:	mov	x0, x19
     21c:	ldr	x19, [sp, #16]
     220:	ldr	x2, [x8, #16]
     224:	ldp	x29, x30, [sp], #32
     228:	br	x2

000000000000022c <_ZL21addCoroutineSCCPassesRKN4llvm18PassManagerBuilderERNS_6legacy15PassManagerBaseE>:
     22c:	stp	x29, x30, [sp, #-32]!
     230:	str	x19, [sp, #16]
     234:	mov	x29, sp
     238:	mov	x19, x1
     23c:	bl	0 <_ZN4llvm25createCoroSplitLegacyPassEv>
     240:	ldr	x8, [x19]
     244:	mov	x1, x0
     248:	mov	x0, x19
     24c:	ldr	x19, [sp, #16]
     250:	ldr	x2, [x8, #16]
     254:	ldp	x29, x30, [sp], #32
     258:	br	x2

000000000000025c <_ZL33addCoroutineScalarOptimizerPassesRKN4llvm18PassManagerBuilderERNS_6legacy15PassManagerBaseE>:
     25c:	stp	x29, x30, [sp, #-32]!
     260:	str	x19, [sp, #16]
     264:	mov	x29, sp
     268:	mov	x19, x1
     26c:	bl	0 <_ZN4llvm25createCoroElideLegacyPassEv>
     270:	ldr	x8, [x19]
     274:	mov	x1, x0
     278:	mov	x0, x19
     27c:	ldr	x19, [sp, #16]
     280:	ldr	x2, [x8, #16]
     284:	ldp	x29, x30, [sp], #32
     288:	br	x2

000000000000028c <_ZL31addCoroutineOptimizerLastPassesRKN4llvm18PassManagerBuilderERNS_6legacy15PassManagerBaseE>:
     28c:	stp	x29, x30, [sp, #-32]!
     290:	str	x19, [sp, #16]
     294:	mov	x29, sp
     298:	mov	x19, x1
     29c:	bl	0 <_ZN4llvm27createCoroCleanupLegacyPassEv>
     2a0:	ldr	x8, [x19]
     2a4:	mov	x1, x0
     2a8:	mov	x0, x19
     2ac:	ldr	x19, [sp, #16]
     2b0:	ldr	x2, [x8, #16]
     2b4:	ldp	x29, x30, [sp], #32
     2b8:	br	x2

00000000000002bc <_ZN4llvm4coro11LowererBaseC1ERNS_6ModuleE>:
     2bc:	stp	x29, x30, [sp, #-32]!
     2c0:	str	x19, [sp, #16]
     2c4:	mov	x29, sp
     2c8:	str	x1, [x0]
     2cc:	mov	x19, x0
     2d0:	ldr	x0, [x1]
     2d4:	mov	w1, wzr
     2d8:	str	x0, [x19, #8]
     2dc:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
     2e0:	ldr	x8, [x19, #8]
     2e4:	str	x0, [x19, #16]
     2e8:	mov	x0, x8
     2ec:	bl	0 <_ZN4llvm4Type9getVoidTyERNS_11LLVMContextE>
     2f0:	ldr	x8, [x19, #16]
     2f4:	add	x1, x29, #0x18
     2f8:	mov	w2, #0x1                   	// #1
     2fc:	mov	w3, wzr
     300:	str	x8, [x29, #24]
     304:	bl	0 <_ZN4llvm12FunctionType3getEPNS_4TypeENS_8ArrayRefIS2_EEb>
     308:	ldr	x8, [x19, #16]
     30c:	str	x0, [x19, #24]
     310:	mov	x0, x8
     314:	bl	0 <_ZN4llvm19ConstantPointerNull3getEPNS_11PointerTypeE>
     318:	str	x0, [x19, #32]
     31c:	ldr	x19, [sp, #16]
     320:	ldp	x29, x30, [sp], #32
     324:	ret

0000000000000328 <_ZN4llvm4coro11LowererBase13makeSubFnCallEPNS_5ValueEiPNS_11InstructionE>:
     328:	sub	sp, sp, #0x70
     32c:	stp	x29, x30, [sp, #48]
     330:	str	x23, [sp, #64]
     334:	stp	x22, x21, [sp, #80]
     338:	stp	x20, x19, [sp, #96]
     33c:	add	x29, sp, #0x30
     340:	mov	x20, x0
     344:	ldr	x0, [x0, #8]
     348:	mov	x19, x3
     34c:	mov	w22, w2
     350:	mov	x21, x1
     354:	bl	0 <_ZN4llvm4Type9getInt8TyERNS_11LLVMContextE>
     358:	sxtw	x1, w22
     35c:	mov	w2, wzr
     360:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
     364:	ldr	x8, [x20]
     368:	mov	x23, x0
     36c:	mov	w1, #0x22                  	// #34
     370:	mov	x2, xzr
     374:	mov	x0, x8
     378:	mov	x3, xzr
     37c:	bl	0 <_ZN4llvm9Intrinsic14getDeclarationEPNS_6ModuleEjNS_8ArrayRefIPNS_4TypeEEE>
     380:	add	w8, w22, #0x1
     384:	cmp	w8, #0x3
     388:	b.hi	428 <_ZN4llvm4coro11LowererBase13makeSubFnCallEPNS_5ValueEiPNS_11InstructionE+0x100>  // b.pmore
     38c:	stp	x21, x23, [x29, #-16]
     390:	adrp	x21, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     394:	add	x21, x21, #0x0
     398:	mov	x22, x0
     39c:	add	x0, sp, #0x8
     3a0:	mov	x1, x21
     3a4:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     3a8:	sub	x1, x29, #0x10
     3ac:	add	x3, sp, #0x8
     3b0:	mov	w2, #0x2                   	// #2
     3b4:	mov	x0, x22
     3b8:	mov	x4, x19
     3bc:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     3c0:	mov	x22, x0
     3c4:	mov	w0, #0x38                  	// #56
     3c8:	mov	w1, #0x1                   	// #1
     3cc:	bl	0 <_ZN4llvm4UsernwEmj>
     3d0:	ldr	x8, [x20, #24]
     3d4:	mov	x20, x0
     3d8:	mov	w1, wzr
     3dc:	mov	x0, x8
     3e0:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
     3e4:	mov	x23, x0
     3e8:	add	x0, sp, #0x8
     3ec:	mov	x1, x21
     3f0:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     3f4:	add	x3, sp, #0x8
     3f8:	mov	x0, x20
     3fc:	mov	x1, x22
     400:	mov	x2, x23
     404:	mov	x4, x19
     408:	bl	0 <_ZN4llvm11BitCastInstC1EPNS_5ValueEPNS_4TypeERKNS_5TwineEPNS_11InstructionE>
     40c:	mov	x0, x20
     410:	ldp	x20, x19, [sp, #96]
     414:	ldp	x22, x21, [sp, #80]
     418:	ldr	x23, [sp, #64]
     41c:	ldp	x29, x30, [sp, #48]
     420:	add	sp, sp, #0x70
     424:	ret
     428:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     42c:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     430:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     434:	add	x0, x0, #0x0
     438:	add	x1, x1, #0x0
     43c:	add	x3, x3, #0x0
     440:	mov	w2, #0x73                  	// #115
     444:	bl	0 <__assert_fail>

0000000000000448 <_ZN4llvm4coro18declaresIntrinsicsERKNS_6ModuleESt16initializer_listINS_9StringRefEE>:
     448:	stp	x29, x30, [sp, #-64]!
     44c:	stp	x24, x23, [sp, #16]
     450:	stp	x22, x21, [sp, #32]
     454:	stp	x20, x19, [sp, #48]
     458:	mov	x29, sp
     45c:	cbz	x2, 4b4 <_ZN4llvm4coro18declaresIntrinsicsERKNS_6ModuleESt16initializer_listINS_9StringRefEE+0x6c>
     460:	adrp	x21, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     464:	mov	x19, x1
     468:	mov	x20, x0
     46c:	add	x24, x1, x2, lsl #4
     470:	add	x21, x21, #0x0
     474:	ldp	x22, x23, [x19]
     478:	mov	w1, #0x14                  	// #20
     47c:	mov	x0, x21
     480:	mov	x2, x22
     484:	mov	x3, x23
     488:	bl	0 <_ZN4llvm9Intrinsic25lookupLLVMIntrinsicByNameENS_8ArrayRefIPKcEENS_9StringRefE>
     48c:	cmn	w0, #0x1
     490:	b.eq	4d4 <_ZN4llvm4coro18declaresIntrinsicsERKNS_6ModuleESt16initializer_listINS_9StringRefEE+0x8c>  // b.none
     494:	mov	x0, x20
     498:	mov	x1, x22
     49c:	mov	x2, x23
     4a0:	bl	0 <_ZNK4llvm6Module13getNamedValueENS_9StringRefE>
     4a4:	cbnz	x0, 4bc <_ZN4llvm4coro18declaresIntrinsicsERKNS_6ModuleESt16initializer_listINS_9StringRefEE+0x74>
     4a8:	add	x19, x19, #0x10
     4ac:	cmp	x19, x24
     4b0:	b.ne	474 <_ZN4llvm4coro18declaresIntrinsicsERKNS_6ModuleESt16initializer_listINS_9StringRefEE+0x2c>  // b.any
     4b4:	mov	w0, wzr
     4b8:	b	4c0 <_ZN4llvm4coro18declaresIntrinsicsERKNS_6ModuleESt16initializer_listINS_9StringRefEE+0x78>
     4bc:	mov	w0, #0x1                   	// #1
     4c0:	ldp	x20, x19, [sp, #48]
     4c4:	ldp	x22, x21, [sp, #32]
     4c8:	ldp	x24, x23, [sp, #16]
     4cc:	ldp	x29, x30, [sp], #64
     4d0:	ret
     4d4:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     4d8:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     4dc:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     4e0:	add	x0, x0, #0x0
     4e4:	add	x1, x1, #0x0
     4e8:	add	x3, x3, #0x0
     4ec:	mov	w2, #0x9d                  	// #157
     4f0:	bl	0 <__assert_fail>

00000000000004f4 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb>:
     4f4:	sub	sp, sp, #0x70
     4f8:	stp	x29, x30, [sp, #64]
     4fc:	stp	x22, x21, [sp, #80]
     500:	stp	x20, x19, [sp, #96]
     504:	add	x29, sp, #0x40
     508:	adrp	x8, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     50c:	ldr	d0, [x8]
     510:	add	x8, sp, #0x10
     514:	add	x8, x8, #0x10
     518:	mov	w20, w1
     51c:	mov	x19, x0
     520:	str	x8, [sp, #16]
     524:	str	d0, [sp, #24]
     528:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
     52c:	ldr	x8, [x19, #8]
     530:	str	x8, [sp, #8]
     534:	cbz	x8, 59c <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0xa8>
     538:	add	x0, sp, #0x8
     53c:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     540:	cbz	x0, 630 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x13c>
     544:	ldrb	w8, [x0, #16]
     548:	cmp	w8, #0x50
     54c:	b.ne	588 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x94>  // b.any
     550:	ldur	x8, [x0, #-24]
     554:	cbz	x8, 588 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x94>
     558:	ldrb	w9, [x8, #16]
     55c:	cbnz	w9, 588 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x94>
     560:	ldrb	w9, [x8, #33]
     564:	tbz	w9, #5, 588 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x94>
     568:	ldr	w8, [x8, #36]
     56c:	cmp	w8, #0x17
     570:	b.ne	588 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x94>  // b.any
     574:	str	x0, [sp]
     578:	add	x0, sp, #0x10
     57c:	mov	x1, sp
     580:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     584:	b	58c <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x98>
     588:	str	xzr, [sp]
     58c:	ldr	x8, [sp, #8]
     590:	cbz	x8, 650 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x15c>
     594:	ldr	x8, [x8, #8]
     598:	b	530 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x3c>
     59c:	ldr	w8, [sp, #24]
     5a0:	cbz	w8, 604 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x110>
     5a4:	tbz	w20, #0, 5c0 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0xcc>
     5a8:	mov	x0, x19
     5ac:	bl	0 <_ZNK4llvm5Value10getContextEv>
     5b0:	mov	w1, wzr
     5b4:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
     5b8:	bl	0 <_ZN4llvm19ConstantPointerNull3getEPNS_11PointerTypeE>
     5bc:	b	5d0 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0xdc>
     5c0:	ldr	x8, [sp, #16]
     5c4:	mov	w1, #0x1                   	// #1
     5c8:	ldr	x0, [x8]
     5cc:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     5d0:	ldr	w8, [sp, #24]
     5d4:	mov	x19, x0
     5d8:	cbz	w8, 604 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x110>
     5dc:	ldr	x21, [sp, #16]
     5e0:	lsl	x22, x8, #3
     5e4:	ldr	x20, [x21], #8
     5e8:	mov	x1, x19
     5ec:	mov	x0, x20
     5f0:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
     5f4:	mov	x0, x20
     5f8:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
     5fc:	subs	x22, x22, #0x8
     600:	b.ne	5e4 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0xf0>  // b.any
     604:	ldr	x0, [sp, #16]
     608:	add	x8, sp, #0x10
     60c:	add	x8, x8, #0x10
     610:	cmp	x0, x8
     614:	b.eq	61c <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x128>  // b.none
     618:	bl	0 <free>
     61c:	ldp	x20, x19, [sp, #96]
     620:	ldp	x22, x21, [sp, #80]
     624:	ldp	x29, x30, [sp, #64]
     628:	add	sp, sp, #0x70
     62c:	ret
     630:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     634:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     638:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     63c:	add	x0, x0, #0x0
     640:	add	x1, x1, #0x0
     644:	add	x3, x3, #0x0
     648:	mov	w2, #0x69                  	// #105
     64c:	bl	0 <__assert_fail>
     650:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     654:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     658:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     65c:	add	x0, x0, #0x0
     660:	add	x1, x1, #0x0
     664:	add	x3, x3, #0x0
     668:	mov	w2, #0x8d                  	// #141
     66c:	bl	0 <__assert_fail>

0000000000000670 <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE>:
     670:	sub	sp, sp, #0x90
     674:	stp	x29, x30, [sp, #80]
     678:	str	x23, [sp, #96]
     67c:	stp	x22, x21, [sp, #112]
     680:	stp	x20, x19, [sp, #128]
     684:	add	x29, sp, #0x50
     688:	ldr	x9, [x3, #24]
     68c:	cbz	x9, 798 <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0x128>
     690:	add	x8, x3, #0x10
     694:	mov	x19, x4
     698:	mov	x20, x3
     69c:	mov	x22, x2
     6a0:	mov	x21, x1
     6a4:	mov	x10, x8
     6a8:	ldr	x11, [x9, #32]
     6ac:	add	x12, x9, #0x18
     6b0:	add	x13, x9, #0x10
     6b4:	cmp	x11, x0
     6b8:	csel	x10, x10, x9, cc  // cc = lo, ul, last
     6bc:	csel	x9, x12, x13, cc  // cc = lo, ul, last
     6c0:	ldr	x9, [x9]
     6c4:	cbnz	x9, 6a8 <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0x38>
     6c8:	cmp	x10, x8
     6cc:	b.eq	798 <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0x128>  // b.none
     6d0:	ldr	x9, [x10, #32]
     6d4:	cmp	x9, x0
     6d8:	csel	x9, x8, x10, hi  // hi = pmore
     6dc:	cmp	x9, x8
     6e0:	b.eq	798 <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0x128>  // b.none
     6e4:	ldr	x23, [x9, #40]
     6e8:	mov	x0, x23
     6ec:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     6f0:	mov	x0, x20
     6f4:	mov	x1, x23
     6f8:	bl	7b8 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE>
     6fc:	ldr	x1, [x19, #16]!
     700:	adrp	x8, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     704:	ldr	d0, [x8]
     708:	mov	x8, sp
     70c:	ldr	x2, [x19, #8]
     710:	add	x23, x8, #0x10
     714:	mov	x0, sp
     718:	str	x23, [sp]
     71c:	str	d0, [sp, #8]
     720:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     724:	cbz	x22, 75c <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0xec>
     728:	lsl	x22, x22, #3
     72c:	ldr	x1, [x21], #8
     730:	mov	x0, x20
     734:	bl	0 <_ZN4llvm9CallGraph19getOrInsertFunctionEPKNS_8FunctionE>
     738:	str	x0, [x29, #24]
     73c:	mov	x0, sp
     740:	add	x1, x29, #0x18
     744:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     748:	ldr	x1, [x29, #24]
     74c:	mov	x0, x20
     750:	bl	7b8 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE>
     754:	subs	x22, x22, #0x8
     758:	b.ne	72c <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0xbc>  // b.any
     75c:	ldr	x1, [sp]
     760:	ldr	w8, [sp, #8]
     764:	mov	x0, x19
     768:	add	x2, x1, x8, lsl #3
     76c:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     770:	ldr	x0, [sp]
     774:	cmp	x0, x23
     778:	b.eq	780 <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0x110>  // b.none
     77c:	bl	0 <free>
     780:	ldp	x20, x19, [sp, #128]
     784:	ldp	x22, x21, [sp, #112]
     788:	ldr	x23, [sp, #96]
     78c:	ldp	x29, x30, [sp, #80]
     790:	add	sp, sp, #0x90
     794:	ret
     798:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     79c:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     7a0:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     7a4:	add	x0, x0, #0x0
     7a8:	add	x1, x1, #0x0
     7ac:	add	x3, x3, #0x0
     7b0:	mov	w2, #0x82                  	// #130
     7b4:	bl	0 <__assert_fail>

00000000000007b8 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE>:
     7b8:	sub	sp, sp, #0x80
     7bc:	stp	x29, x30, [sp, #32]
     7c0:	stp	x28, x27, [sp, #48]
     7c4:	stp	x26, x25, [sp, #64]
     7c8:	stp	x24, x23, [sp, #80]
     7cc:	stp	x22, x21, [sp, #96]
     7d0:	stp	x20, x19, [sp, #112]
     7d4:	add	x29, sp, #0x20
     7d8:	ldr	x21, [x1]
     7dc:	mov	x19, x1
     7e0:	mov	x20, x0
     7e4:	add	x0, sp, #0x8
     7e8:	mov	x1, x21
     7ec:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     7f0:	ldp	x23, x25, [sp, #8]
     7f4:	ldr	x26, [sp, #24]
     7f8:	add	x24, x21, #0x48
     7fc:	cmp	x23, x24
     800:	cset	w8, ne  // ne = any
     804:	cmp	x26, #0x0
     808:	cset	w9, ne  // ne = any
     80c:	cmp	x24, x25
     810:	b.ne	81c <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0x64>  // b.any
     814:	and	w8, w8, w9
     818:	cbz	w8, 910 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0x158>
     81c:	mov	x28, #0x41                  	// #65
     820:	mov	w27, #0x1                   	// #1
     824:	movk	x28, #0x8, lsl #48
     828:	ldrb	w8, [x26]
     82c:	tbnz	w8, #2, 950 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0x198>
     830:	sub	x8, x26, #0x18
     834:	cmp	x26, #0x0
     838:	csel	x21, xzr, x8, eq  // eq = none
     83c:	cbz	x26, 96c <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0x1b4>
     840:	ldrb	w8, [x21, #16]
     844:	sub	w8, w8, #0x1d
     848:	cmp	w8, #0x33
     84c:	b.hi	8a4 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0xec>  // b.pmore
     850:	lsl	x8, x27, x8
     854:	tst	x8, x28
     858:	b.eq	8a4 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0xec>  // b.none
     85c:	ldur	x22, [x21, #-24]
     860:	cbz	x22, 894 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0xdc>
     864:	ldrb	w8, [x22, #16]
     868:	cbnz	w8, 894 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0xdc>
     86c:	ldr	w0, [x22, #36]
     870:	bl	0 <_ZN4llvm9Intrinsic6isLeafEj>
     874:	tbz	w0, #0, 894 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0xdc>
     878:	ldrb	w8, [x22, #33]
     87c:	tbnz	w8, #5, 8a4 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0xec>
     880:	mov	x0, x20
     884:	mov	x1, x22
     888:	bl	0 <_ZN4llvm9CallGraph19getOrInsertFunctionEPKNS_8FunctionE>
     88c:	mov	x2, x0
     890:	b	898 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0xe0>
     894:	ldr	x2, [x20, #64]
     898:	mov	x0, x19
     89c:	mov	x1, x21
     8a0:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     8a4:	ldrb	w8, [x25]
     8a8:	tbnz	w8, #2, 930 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0x178>
     8ac:	ldr	x26, [x26, #8]
     8b0:	sub	x8, x25, #0x18
     8b4:	cmp	x25, #0x0
     8b8:	csel	x8, xzr, x8, eq  // eq = none
     8bc:	add	x8, x8, #0x28
     8c0:	cmp	x8, x26
     8c4:	b.ne	8f0 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0x138>  // b.any
     8c8:	ldr	x25, [x25, #8]
     8cc:	cmp	x23, x25
     8d0:	b.eq	8f0 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0x138>  // b.none
     8d4:	ldrb	w8, [x25]
     8d8:	tbnz	w8, #2, 930 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0x178>
     8dc:	sub	x8, x25, #0x18
     8e0:	cmp	x25, #0x0
     8e4:	csel	x8, xzr, x8, eq  // eq = none
     8e8:	ldr	x26, [x8, #48]
     8ec:	b	8bc <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0x104>
     8f0:	cmp	x23, x24
     8f4:	cset	w8, ne  // ne = any
     8f8:	cmp	x26, #0x0
     8fc:	cset	w9, ne  // ne = any
     900:	cmp	x24, x25
     904:	b.ne	828 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0x70>  // b.any
     908:	and	w8, w8, w9
     90c:	tbnz	w8, #0, 828 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0x70>
     910:	ldp	x20, x19, [sp, #112]
     914:	ldp	x22, x21, [sp, #96]
     918:	ldp	x24, x23, [sp, #80]
     91c:	ldp	x26, x25, [sp, #64]
     920:	ldp	x28, x27, [sp, #48]
     924:	ldp	x29, x30, [sp, #32]
     928:	add	sp, sp, #0x80
     92c:	ret
     930:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     934:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     938:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     93c:	add	x0, x0, #0x0
     940:	add	x1, x1, #0x0
     944:	add	x3, x3, #0x0
     948:	mov	w2, #0x8b                  	// #139
     94c:	bl	0 <__assert_fail>
     950:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     954:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     958:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     95c:	add	x0, x0, #0x0
     960:	add	x1, x1, #0x0
     964:	add	x3, x3, #0x0
     968:	b	948 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0x190>
     96c:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     970:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     974:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     978:	add	x0, x0, #0x0
     97c:	add	x1, x1, #0x0
     980:	add	x3, x3, #0x0
     984:	mov	w2, #0x69                  	// #105
     988:	bl	0 <__assert_fail>

000000000000098c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE>:
     98c:	sub	sp, sp, #0x150
     990:	stp	x29, x30, [sp, #240]
     994:	stp	x28, x27, [sp, #256]
     998:	stp	x26, x25, [sp, #272]
     99c:	stp	x24, x23, [sp, #288]
     9a0:	stp	x22, x21, [sp, #304]
     9a4:	stp	x20, x19, [sp, #320]
     9a8:	add	x29, sp, #0xf0
     9ac:	adrp	x8, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     9b0:	ldr	d0, [x8]
     9b4:	adrp	x8, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     9b8:	str	xzr, [x0]
     9bc:	str	wzr, [x0, #16]
     9c0:	str	wzr, [x0, #64]
     9c4:	str	wzr, [x0, #96]
     9c8:	stp	xzr, xzr, [x0, #184]
     9cc:	str	xzr, [x0, #176]
     9d0:	str	d0, [sp, #128]
     9d4:	ldr	d0, [x8]
     9d8:	add	x8, sp, #0x78
     9dc:	add	x8, x8, #0x10
     9e0:	str	x8, [sp, #120]
     9e4:	add	x8, sp, #0x58
     9e8:	str	x0, [sp, #32]
     9ec:	add	x8, x8, #0x10
     9f0:	sub	x0, x29, #0x28
     9f4:	mov	x20, x1
     9f8:	str	x8, [sp, #88]
     9fc:	str	d0, [sp, #96]
     a00:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     a04:	ldp	x27, x22, [x29, #-40]
     a08:	ldur	x23, [x29, #-24]
     a0c:	add	x28, x20, #0x48
     a10:	cmp	x27, x28
     a14:	cset	w8, ne  // ne = any
     a18:	cmp	x23, #0x0
     a1c:	cset	w9, ne  // ne = any
     a20:	cmp	x28, x22
     a24:	b.ne	d30 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x3a4>  // b.any
     a28:	and	w8, w8, w9
     a2c:	cbnz	w8, d30 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x3a4>
     a30:	mov	x19, xzr
     a34:	mov	w26, wzr
     a38:	ldr	x23, [sp, #32]
     a3c:	ldr	x0, [x23]
     a40:	cbz	x0, 109c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x710>
     a44:	str	x19, [sp, #8]
     a48:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     a4c:	ldur	x8, [x0, #-24]
     a50:	mov	x21, x0
     a54:	ldrb	w9, [x8, #16]
     a58:	cmp	w9, #0x0
     a5c:	csel	x8, x8, xzr, eq  // eq = none
     a60:	ldr	w19, [x8, #36]
     a64:	sub	w8, w19, #0x19
     a68:	cmp	w8, #0x2
     a6c:	b.cs	1188 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x7fc>  // b.hs, b.nlast
     a70:	sub	x0, x29, #0x28
     a74:	stur	x21, [x29, #-40]
     a78:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     a7c:	tbz	w0, #0, 16f8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xd6c>
     a80:	mov	x0, x21
     a84:	bl	1754 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv>
     a88:	cmp	w19, #0x19
     a8c:	mov	w8, #0x1                   	// #1
     a90:	cinc	w8, w8, ne  // ne = any
     a94:	mov	x0, x21
     a98:	str	w8, [x23, #168]
     a9c:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     aa0:	str	x0, [sp]
     aa4:	str	x0, [x23, #200]
     aa8:	mov	x0, x21
     aac:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     ab0:	str	x0, [x23, #208]
     ab4:	mov	x0, x21
     ab8:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     abc:	stp	x0, xzr, [x23, #216]
     ac0:	mov	x0, x23
     ac4:	strb	wzr, [x23, #232]
     ac8:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     acc:	str	x0, [sp, #24]
     ad0:	mov	x0, x23
     ad4:	str	x1, [sp, #72]
     ad8:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     adc:	ldr	w8, [x23, #96]
     ae0:	str	x0, [sp, #40]
     ae4:	cbz	w8, 12b8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x92c>
     ae8:	ldr	x9, [sp, #32]
     aec:	mov	x19, x1
     af0:	str	x1, [sp, #64]
     af4:	ldr	x10, [x9, #88]
     af8:	ldr	x9, [sp, #72]
     afc:	add	x8, x10, x8, lsl #3
     b00:	cmp	x9, #0x0
     b04:	lsl	x9, x9, #3
     b08:	cset	w11, ne  // ne = any
     b0c:	sub	x9, x9, #0x8
     b10:	str	w11, [sp, #60]
     b14:	str	x9, [sp, #16]
     b18:	str	x8, [sp, #48]
     b1c:	ldr	x25, [x10]
     b20:	sub	x0, x29, #0x28
     b24:	str	x10, [sp, #80]
     b28:	stur	x25, [x29, #-40]
     b2c:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     b30:	tbz	w0, #0, 1430 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xaa4>
     b34:	sub	x0, x29, #0x28
     b38:	stur	x25, [x29, #-40]
     b3c:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     b40:	tbz	w0, #0, 149c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xb10>
     b44:	cbz	x25, 1430 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xaa4>
     b48:	ldr	w8, [x25, #20]
     b4c:	mov	w23, #0x18                  	// #24
     b50:	mov	x0, x25
     b54:	and	x19, x8, #0xfffffff
     b58:	mneg	x8, x19, x23
     b5c:	add	x21, x25, x8
     b60:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     b64:	mov	w20, w0
     b68:	mneg	x8, x20, x23
     b6c:	mov	x0, x25
     b70:	add	x22, x25, x8
     b74:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     b78:	mov	w10, w0
     b7c:	mneg	x8, x10, x23
     b80:	add	x8, x22, x8
     b84:	ldr	x9, [sp, #72]
     b88:	sub	x8, x8, #0x18
     b8c:	cmp	x21, x8
     b90:	mov	w11, #0x18                  	// #24
     b94:	cset	w8, ne  // ne = any
     b98:	cbz	x9, c94 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x308>
     b9c:	ldr	w9, [sp, #60]
     ba0:	b.eq	c98 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x30c>  // b.none
     ba4:	mov	x8, #0xffffffffffffffe8    	// #-24
     ba8:	mul	x22, x19, x8
     bac:	ldp	x19, x23, [sp, #16]
     bb0:	add	x8, x20, x10
     bb4:	mov	x9, #0xffffffffffffffd0    	// #-48
     bb8:	msub	x24, x8, x11, x9
     bbc:	mov	x26, x25
     bc0:	add	x27, x26, x22
     bc4:	ldr	x8, [x27]
     bc8:	ldr	x1, [x23]
     bcc:	ldr	x0, [x8]
     bd0:	cmp	x0, x1
     bd4:	b.eq	c64 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x2d8>  // b.none
     bd8:	bl	0 <_ZN4llvm8CastInst13isBitCastableEPNS_4TypeES2_>
     bdc:	tbz	w0, #0, 13ec <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xa60>
     be0:	mov	w0, #0x38                  	// #56
     be4:	mov	w1, #0x1                   	// #1
     be8:	bl	0 <_ZN4llvm4UsernwEmj>
     bec:	ldr	x20, [x26, x22]
     bf0:	ldr	x21, [x23]
     bf4:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     bf8:	mov	x28, x0
     bfc:	sub	x0, x29, #0x28
     c00:	add	x1, x1, #0x0
     c04:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     c08:	sub	x3, x29, #0x28
     c0c:	mov	x0, x28
     c10:	mov	x1, x20
     c14:	mov	x2, x21
     c18:	mov	x4, x25
     c1c:	bl	0 <_ZN4llvm11BitCastInstC1EPNS_5ValueEPNS_4TypeERKNS_5TwineEPNS_11InstructionE>
     c20:	ldr	x8, [x26, x22]
     c24:	cbz	x8, c50 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x2c4>
     c28:	add	x9, x26, x22
     c2c:	ldp	x10, x8, [x9, #8]
     c30:	and	x8, x8, #0xfffffffffffffffc
     c34:	str	x10, [x8]
     c38:	ldr	x9, [x9, #8]
     c3c:	cbz	x9, c50 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x2c4>
     c40:	ldr	x10, [x9, #16]
     c44:	and	x10, x10, #0x3
     c48:	orr	x8, x10, x8
     c4c:	str	x8, [x9, #16]
     c50:	str	x28, [x26, x22]
     c54:	cbz	x28, c64 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x2d8>
     c58:	add	x1, x28, #0x8
     c5c:	mov	x0, x27
     c60:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     c64:	cmp	x22, x24
     c68:	cset	w8, ne  // ne = any
     c6c:	cmp	x19, #0x0
     c70:	cset	w9, ne  // ne = any
     c74:	cbz	x19, c98 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x30c>
     c78:	add	x23, x23, #0x8
     c7c:	cmp	x22, x24
     c80:	sub	x24, x24, #0x18
     c84:	add	x26, x26, #0x18
     c88:	sub	x19, x19, #0x8
     c8c:	b.ne	bc0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x234>  // b.any
     c90:	b	c98 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x30c>
     c94:	ldr	w9, [sp, #60]
     c98:	tbnz	w9, #0, 1444 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xab8>
     c9c:	cbnz	w8, 1444 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xab8>
     ca0:	ldr	x9, [x25]
     ca4:	ldr	x19, [sp, #64]
     ca8:	stur	x9, [x29, #-40]
     cac:	ldrb	w8, [x9, #8]
     cb0:	cbz	w8, ccc <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x340>
     cb4:	cbz	x9, 1508 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xb7c>
     cb8:	cmp	w8, #0xd
     cbc:	b.ne	cd8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x34c>  // b.any
     cc0:	ldr	x8, [x9, #16]
     cc4:	ldr	w9, [x9, #12]
     cc8:	b	ce0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x354>
     ccc:	mov	x8, xzr
     cd0:	mov	x9, xzr
     cd4:	b	ce0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x354>
     cd8:	sub	x8, x29, #0x28
     cdc:	mov	w9, #0x1                   	// #1
     ce0:	cmp	x9, x19
     ce4:	b.ne	14b8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xb2c>  // b.any
     ce8:	cbz	x19, d18 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x38c>
     cec:	ldr	x9, [sp, #40]
     cf0:	mov	x10, x19
     cf4:	cbz	x10, 13ac <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xa20>
     cf8:	ldr	x11, [x8]
     cfc:	ldr	x12, [x9]
     d00:	cmp	x11, x12
     d04:	b.ne	13cc <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xa40>  // b.any
     d08:	subs	x10, x10, #0x1
     d0c:	add	x9, x9, #0x8
     d10:	add	x8, x8, #0x8
     d14:	b.ne	cf4 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x368>  // b.any
     d18:	ldr	x10, [sp, #80]
     d1c:	ldr	x8, [sp, #48]
     d20:	add	x10, x10, #0x8
     d24:	cmp	x10, x8
     d28:	b.ne	b1c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x190>  // b.any
     d2c:	b	12b8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x92c>
     d30:	ldr	x8, [sp, #32]
     d34:	mov	w26, wzr
     d38:	mov	x19, xzr
     d3c:	add	x21, x8, #0x8
     d40:	add	x25, x8, #0x38
     d44:	add	x8, x8, #0x58
     d48:	str	x8, [sp, #80]
     d4c:	ldrb	w8, [x23]
     d50:	tbnz	w8, #2, 1464 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xad8>
     d54:	sub	x8, x23, #0x18
     d58:	cmp	x23, #0x0
     d5c:	csel	x24, xzr, x8, eq  // eq = none
     d60:	cbz	x23, 1480 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xaf4>
     d64:	ldrb	w8, [x24, #16]
     d68:	cmp	w8, #0x50
     d6c:	b.ne	d88 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x3fc>  // b.any
     d70:	ldur	x8, [x24, #-24]
     d74:	cbz	x8, d88 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x3fc>
     d78:	ldrb	w9, [x8, #16]
     d7c:	cbnz	w9, d88 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x3fc>
     d80:	ldrb	w9, [x8, #33]
     d84:	tbnz	w9, #5, df8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x46c>
     d88:	ldrb	w8, [x22]
     d8c:	tbnz	w8, #2, 1410 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xa84>
     d90:	ldr	x23, [x23, #8]
     d94:	sub	x8, x22, #0x18
     d98:	cmp	x22, #0x0
     d9c:	csel	x8, xzr, x8, eq  // eq = none
     da0:	add	x8, x8, #0x28
     da4:	cmp	x8, x23
     da8:	b.ne	dd4 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x448>  // b.any
     dac:	ldr	x22, [x22, #8]
     db0:	cmp	x27, x22
     db4:	b.eq	dd4 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x448>  // b.none
     db8:	ldrb	w8, [x22]
     dbc:	tbnz	w8, #2, 1410 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xa84>
     dc0:	sub	x8, x22, #0x18
     dc4:	cmp	x22, #0x0
     dc8:	csel	x8, xzr, x8, eq  // eq = none
     dcc:	ldr	x23, [x8, #48]
     dd0:	b	da0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x414>
     dd4:	cmp	x27, x28
     dd8:	cset	w8, ne  // ne = any
     ddc:	cmp	x23, #0x0
     de0:	cset	w9, ne  // ne = any
     de4:	cmp	x28, x22
     de8:	b.ne	d4c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x3c0>  // b.any
     dec:	and	w8, w8, w9
     df0:	tbnz	w8, #0, d4c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x3c0>
     df4:	b	a38 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xac>
     df8:	ldr	w8, [x8, #36]
     dfc:	cmp	w8, #0x1f
     e00:	b.le	e5c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x4d0>
     e04:	sub	w8, w8, #0x20
     e08:	cmp	w8, #0x4
     e0c:	b.hi	d88 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x3fc>  // b.pmore
     e10:	adrp	x11, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     e14:	add	x11, x11, #0x0
     e18:	adr	x9, d88 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x3fc>
     e1c:	ldrb	w10, [x11, x8]
     e20:	add	x9, x9, x10, lsl #2
     e24:	br	x9
     e28:	mov	x0, x24
     e2c:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
     e30:	ldr	x8, [x24, #8]
     e34:	cbnz	x8, d88 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x3fc>
     e38:	sub	x0, x29, #0x28
     e3c:	stur	x24, [x29, #-40]
     e40:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     e44:	tbz	w0, #0, 15b8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xc2c>
     e48:	add	x0, sp, #0x58
     e4c:	sub	x1, x29, #0x28
     e50:	stur	x24, [x29, #-40]
     e54:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     e58:	b	d88 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x3fc>
     e5c:	cmp	w8, #0x12
     e60:	b.eq	f24 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x598>  // b.none
     e64:	cmp	w8, #0x15
     e68:	b.eq	1014 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x688>  // b.none
     e6c:	cmp	w8, #0x16
     e70:	b.ne	d88 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x3fc>  // b.any
     e74:	sub	x0, x29, #0x28
     e78:	stur	x24, [x29, #-40]
     e7c:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     e80:	tbz	w0, #0, 15d4 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xc48>
     e84:	add	x0, sp, #0x78
     e88:	sub	x1, x29, #0x28
     e8c:	stur	x24, [x29, #-40]
     e90:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     e94:	b	d88 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x3fc>
     e98:	sub	x0, x29, #0x28
     e9c:	stur	x24, [x29, #-40]
     ea0:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     ea4:	tbz	w0, #0, 15f0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xc64>
     ea8:	ldr	x0, [sp, #80]
     eac:	sub	x1, x29, #0x28
     eb0:	stur	x24, [x29, #-40]
     eb4:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     eb8:	mov	x0, x24
     ebc:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     ec0:	tbz	w0, #0, d88 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x3fc>
     ec4:	tbnz	w26, #0, 160c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xc80>
     ec8:	ldr	x8, [sp, #32]
     ecc:	mov	w26, #0x1                   	// #1
     ed0:	ldr	w8, [x8, #96]
     ed4:	sub	x19, x8, #0x1
     ed8:	b	d88 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x3fc>
     edc:	sub	x0, x29, #0x28
     ee0:	stur	x24, [x29, #-40]
     ee4:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     ee8:	tbz	w0, #0, 1618 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xc8c>
     eec:	ldr	x0, [sp, #80]
     ef0:	sub	x1, x29, #0x28
     ef4:	stur	x24, [x29, #-40]
     ef8:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     efc:	b	d88 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x3fc>
     f00:	sub	x0, x29, #0x28
     f04:	stur	x24, [x29, #-40]
     f08:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     f0c:	tbz	w0, #0, 1634 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xca8>
     f10:	sub	x1, x29, #0x28
     f14:	mov	x0, x25
     f18:	stur	x24, [x29, #-40]
     f1c:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     f20:	b	d88 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x3fc>
     f24:	sub	x0, x29, #0x28
     f28:	str	w26, [sp, #72]
     f2c:	mov	x26, x21
     f30:	mov	x21, x25
     f34:	stur	x24, [x29, #-40]
     f38:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     f3c:	tbz	w0, #0, 1650 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xcc4>
     f40:	mov	x0, x24
     f44:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     f48:	mov	x25, x0
     f4c:	stur	x0, [x29, #-40]
     f50:	sub	x0, x29, #0x28
     f54:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     f58:	tbz	w0, #0, f7c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x5f0>
     f5c:	sub	x0, x29, #0x28
     f60:	stur	x25, [x29, #-40]
     f64:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     f68:	tbz	w0, #0, 159c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xc10>
     f6c:	cbz	x25, f7c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x5f0>
     f70:	mov	x0, x25
     f74:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     f78:	cbnz	x1, 1004 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x678>
     f7c:	mov	x25, x19
     f80:	ldr	x19, [sp, #32]
     f84:	ldr	x8, [x19]
     f88:	cbnz	x8, 166c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xce0>
     f8c:	ldr	x8, [x24, #56]
     f90:	mov	x0, x24
     f94:	stur	x8, [x29, #-40]
     f98:	bl	0 <_ZNK4llvm5Value10getContextEv>
     f9c:	mov	x1, x0
     fa0:	sub	x0, x29, #0x28
     fa4:	mov	w3, #0x23                  	// #35
     fa8:	mov	w2, wzr
     fac:	bl	0 <_ZNK4llvm13AttributeList12addAttributeERNS_11LLVMContextEjNS_9Attribute8AttrKindE>
     fb0:	str	x0, [x24, #56]
     fb4:	stur	x0, [x29, #-40]
     fb8:	mov	x0, x24
     fbc:	bl	0 <_ZNK4llvm5Value10getContextEv>
     fc0:	mov	x1, x0
     fc4:	sub	x0, x29, #0x28
     fc8:	mov	w3, #0x15                  	// #21
     fcc:	mov	w2, wzr
     fd0:	bl	0 <_ZNK4llvm13AttributeList12addAttributeERNS_11LLVMContextEjNS_9Attribute8AttrKindE>
     fd4:	str	x0, [x24, #56]
     fd8:	stur	x0, [x29, #-40]
     fdc:	mov	x0, x24
     fe0:	bl	0 <_ZNK4llvm5Value10getContextEv>
     fe4:	mov	x1, x0
     fe8:	sub	x0, x29, #0x28
     fec:	mov	w2, #0xffffffff            	// #-1
     ff0:	mov	w3, #0x19                  	// #25
     ff4:	bl	0 <_ZNK4llvm13AttributeList15removeAttributeERNS_11LLVMContextEjNS_9Attribute8AttrKindE>
     ff8:	str	x0, [x24, #56]
     ffc:	str	x24, [x19]
    1000:	mov	x19, x25
    1004:	mov	x25, x21
    1008:	mov	x21, x26
    100c:	ldr	w26, [sp, #72]
    1010:	b	d88 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x3fc>
    1014:	sub	x0, x29, #0x28
    1018:	stur	x24, [x29, #-40]
    101c:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1020:	tbz	w0, #0, 1678 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xcec>
    1024:	sub	x1, x29, #0x28
    1028:	mov	x0, x21
    102c:	stur	x24, [x29, #-40]
    1030:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1034:	ldr	x8, [sp, #32]
    1038:	ldr	w8, [x8, #16]
    103c:	cbz	w8, 1694 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xd08>
    1040:	ldr	x9, [x21]
    1044:	add	x8, x9, x8, lsl #3
    1048:	ldur	x0, [x8, #-8]
    104c:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1050:	tbnz	w0, #0, d88 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x3fc>
    1054:	ldr	x8, [sp, #32]
    1058:	ldr	w8, [x8, #16]
    105c:	cmp	w8, #0x2
    1060:	b.cc	d88 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x3fc>  // b.lo, b.ul, b.last
    1064:	ldr	x8, [x21]
    1068:	ldr	x0, [x8]
    106c:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1070:	tbz	w0, #0, 16b4 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xd28>
    1074:	ldr	x8, [sp, #32]
    1078:	ldr	w8, [x8, #16]
    107c:	cbz	w8, 16c0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xd34>
    1080:	ldr	x9, [x21]
    1084:	add	x8, x9, x8, lsl #3
    1088:	ldur	x10, [x8, #-8]
    108c:	ldr	x11, [x9]
    1090:	str	x10, [x9]
    1094:	stur	x11, [x8, #-8]
    1098:	b	d88 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x3fc>
    109c:	mov	x0, x20
    10a0:	bl	0 <_ZNK4llvm8Function10getContextEv>
    10a4:	mov	w1, wzr
    10a8:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
    10ac:	bl	0 <_ZN4llvm10UndefValue3getEPNS_4TypeE>
    10b0:	ldr	w8, [sp, #128]
    10b4:	cbz	w8, 10e4 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x758>
    10b8:	ldr	x19, [sp, #120]
    10bc:	mov	x20, x0
    10c0:	lsl	x22, x8, #3
    10c4:	ldr	x21, [x19], #8
    10c8:	mov	x1, x20
    10cc:	mov	x0, x21
    10d0:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    10d4:	mov	x0, x21
    10d8:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    10dc:	subs	x22, x22, #0x8
    10e0:	b.ne	10c4 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x738>  // b.any
    10e4:	ldr	w8, [x23, #96]
    10e8:	cbz	w8, 1154 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x7c8>
    10ec:	ldr	x19, [x23, #88]
    10f0:	lsl	x21, x8, #3
    10f4:	ldr	x20, [x19]
    10f8:	ldr	x0, [x20]
    10fc:	bl	0 <_ZN4llvm10UndefValue3getEPNS_4TypeE>
    1100:	mov	x1, x0
    1104:	mov	x0, x20
    1108:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    110c:	mov	x0, x20
    1110:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    1114:	sub	x0, x29, #0x28
    1118:	stur	x20, [x29, #-40]
    111c:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1120:	tbz	w0, #0, 1148 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x7bc>
    1124:	sub	x0, x29, #0x28
    1128:	stur	x20, [x29, #-40]
    112c:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1130:	tbz	w0, #0, 1540 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xbb4>
    1134:	cbz	x20, 1148 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x7bc>
    1138:	mov	x0, x20
    113c:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1140:	cbz	x0, 1148 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x7bc>
    1144:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    1148:	subs	x21, x21, #0x8
    114c:	add	x19, x19, #0x8
    1150:	b.ne	10f4 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x768>  // b.any
    1154:	ldr	w8, [x23, #16]
    1158:	cbz	w8, 1314 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x988>
    115c:	ldr	x19, [x23, #8]
    1160:	lsl	x20, x8, #3
    1164:	ldr	x0, [x19], #8
    1168:	mov	w1, wzr
    116c:	mov	w2, wzr
    1170:	mov	x3, xzr
    1174:	mov	x4, xzr
    1178:	bl	0 <_ZN4llvm19changeToUnreachableEPNS_11InstructionEbbPNS_14DomTreeUpdaterEPNS_16MemorySSAUpdaterE>
    117c:	subs	x20, x20, #0x8
    1180:	b.ne	1164 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x7d8>  // b.any
    1184:	b	1314 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x988>
    1188:	cmp	w19, #0x18
    118c:	b.ne	16e0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xd54>  // b.any
    1190:	sub	x0, x29, #0x28
    1194:	stur	x21, [x29, #-40]
    1198:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    119c:	tbz	w0, #0, 159c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xc10>
    11a0:	and	w8, w26, #0x1
    11a4:	mov	x0, x21
    11a8:	str	wzr, [x23, #168]
    11ac:	strb	w8, [x23, #224]
    11b0:	str	xzr, [x23, #200]
    11b4:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    11b8:	ldr	w8, [x23, #96]
    11bc:	stp	x0, xzr, [x23, #208]
    11c0:	cbz	w8, 12b8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x92c>
    11c4:	ldr	x9, [sp, #32]
    11c8:	adrp	x20, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    11cc:	lsl	x23, x8, #3
    11d0:	add	x20, x20, #0x0
    11d4:	ldr	x19, [x9, #88]
    11d8:	ldr	x21, [x19]
    11dc:	sub	x0, x29, #0x28
    11e0:	stur	x21, [x29, #-40]
    11e4:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    11e8:	tbz	w0, #0, 14d8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xb4c>
    11ec:	sub	x0, x29, #0x28
    11f0:	stur	x21, [x29, #-40]
    11f4:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    11f8:	tbz	w0, #0, 1524 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xb98>
    11fc:	cbz	x21, 14d8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xb4c>
    1200:	mov	x0, x21
    1204:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1208:	cbnz	x0, 12ac <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x920>
    120c:	ldr	x8, [sp, #32]
    1210:	mov	x0, x21
    1214:	ldr	x24, [x8]
    1218:	bl	0 <_ZNK4llvm11Instruction9getModuleEv>
    121c:	mov	w1, #0x20                  	// #32
    1220:	mov	x2, xzr
    1224:	mov	x3, xzr
    1228:	bl	0 <_ZN4llvm9Intrinsic14getDeclarationEPNS_6ModuleEjNS_8ArrayRefIPNS_4TypeEEE>
    122c:	mov	x22, x0
    1230:	sub	x0, x29, #0x28
    1234:	mov	x1, x20
    1238:	stur	x24, [x29, #-16]
    123c:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1240:	sub	x1, x29, #0x10
    1244:	sub	x3, x29, #0x28
    1248:	mov	w2, #0x1                   	// #1
    124c:	mov	x0, x22
    1250:	mov	x4, x21
    1254:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1258:	cbz	x0, 155c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xbd0>
    125c:	ldrb	w8, [x0, #16]
    1260:	mov	x22, x0
    1264:	cmp	w8, #0x50
    1268:	b.ne	14ec <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xb60>  // b.any
    126c:	ldur	x8, [x22, #-24]
    1270:	cbz	x8, 14ec <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xb60>
    1274:	ldrb	w9, [x8, #16]
    1278:	cbnz	w9, 14ec <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xb60>
    127c:	ldrb	w9, [x8, #33]
    1280:	tbz	w9, #5, 14ec <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xb60>
    1284:	ldr	w8, [x8, #36]
    1288:	cmp	w8, #0x20
    128c:	b.ne	14ec <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xb60>  // b.any
    1290:	mov	x0, x21
    1294:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1298:	cbnz	x0, 157c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xbf0>
    129c:	mov	x0, x21
    12a0:	mov	w1, wzr
    12a4:	mov	x2, x22
    12a8:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    12ac:	subs	x23, x23, #0x8
    12b0:	add	x19, x19, #0x8
    12b4:	b.ne	11d8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x84c>  // b.any
    12b8:	ldr	w8, [sp, #128]
    12bc:	ldr	x22, [sp, #32]
    12c0:	cbz	w8, 12ec <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x960>
    12c4:	ldr	x19, [sp, #120]
    12c8:	lsl	x21, x8, #3
    12cc:	ldr	x20, [x19], #8
    12d0:	ldr	x1, [x22]
    12d4:	mov	x0, x20
    12d8:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    12dc:	mov	x0, x20
    12e0:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    12e4:	subs	x21, x21, #0x8
    12e8:	b.ne	12cc <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x940>  // b.any
    12ec:	ldr	w8, [x22, #168]
    12f0:	cbz	w8, 1364 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x9d8>
    12f4:	ldr	w8, [sp, #96]
    12f8:	cbz	w8, 1314 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x988>
    12fc:	ldr	x19, [sp, #88]
    1300:	lsl	x20, x8, #3
    1304:	ldr	x0, [x19], #8
    1308:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    130c:	subs	x20, x20, #0x8
    1310:	b.ne	1304 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x978>  // b.any
    1314:	ldr	x0, [sp, #88]
    1318:	add	x8, sp, #0x58
    131c:	add	x8, x8, #0x10
    1320:	cmp	x0, x8
    1324:	b.eq	132c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x9a0>  // b.none
    1328:	bl	0 <free>
    132c:	ldr	x0, [sp, #120]
    1330:	add	x8, sp, #0x78
    1334:	add	x8, x8, #0x10
    1338:	cmp	x0, x8
    133c:	b.eq	1344 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x9b8>  // b.none
    1340:	bl	0 <free>
    1344:	ldp	x20, x19, [sp, #320]
    1348:	ldp	x22, x21, [sp, #304]
    134c:	ldp	x24, x23, [sp, #288]
    1350:	ldp	x26, x25, [sp, #272]
    1354:	ldp	x28, x27, [sp, #256]
    1358:	ldp	x29, x30, [sp, #240]
    135c:	add	sp, sp, #0x150
    1360:	ret
    1364:	ldrb	w8, [x22, #224]
    1368:	cbz	w8, 12f4 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x968>
    136c:	ldr	w8, [x22, #96]
    1370:	ldr	x10, [sp, #8]
    1374:	sub	x9, x8, #0x1
    1378:	cmp	x10, x9
    137c:	b.eq	12f4 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x968>  // b.none
    1380:	ldr	x12, [sp, #8]
    1384:	cmp	x12, x8
    1388:	b.cs	1718 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xd8c>  // b.hs, b.nlast
    138c:	cbz	w8, 1738 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xdac>
    1390:	ldr	x9, [x22, #88]
    1394:	add	x8, x9, x8, lsl #3
    1398:	ldur	x10, [x8, #-8]
    139c:	ldr	x11, [x9, x12, lsl #3]
    13a0:	str	x10, [x9, x12, lsl #3]
    13a4:	stur	x11, [x8, #-8]
    13a8:	b	12f4 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x968>
    13ac:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    13b0:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    13b4:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    13b8:	add	x0, x0, #0x0
    13bc:	add	x1, x1, #0x0
    13c0:	add	x3, x3, #0x0
    13c4:	mov	w2, #0xfa                  	// #250
    13c8:	bl	0 <__assert_fail>
    13cc:	mov	x0, x25
    13d0:	bl	0 <_ZNK4llvm5Value4dumpEv>
    13d4:	ldr	x0, [sp]
    13d8:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    13dc:	bl	0 <_ZNK4llvm4Type4dumpEv>
    13e0:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    13e4:	add	x0, x0, #0x0
    13e8:	b	1408 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xa7c>
    13ec:	mov	x0, x25
    13f0:	bl	0 <_ZNK4llvm5Value4dumpEv>
    13f4:	ldr	x0, [sp]
    13f8:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    13fc:	bl	0 <_ZNK4llvm4Type4dumpEv>
    1400:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1404:	add	x0, x0, #0x0
    1408:	mov	w1, #0x1                   	// #1
    140c:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    1410:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1414:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1418:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    141c:	add	x0, x0, #0x0
    1420:	add	x1, x1, #0x0
    1424:	add	x3, x3, #0x0
    1428:	mov	w2, #0x8b                  	// #139
    142c:	bl	0 <__assert_fail>
    1430:	mov	x0, x25
    1434:	bl	0 <_ZNK4llvm5Value4dumpEv>
    1438:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    143c:	add	x0, x0, #0x0
    1440:	b	1408 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xa7c>
    1444:	mov	x0, x25
    1448:	bl	0 <_ZNK4llvm5Value4dumpEv>
    144c:	ldr	x0, [sp]
    1450:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1454:	bl	0 <_ZNK4llvm4Type4dumpEv>
    1458:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    145c:	add	x0, x0, #0x0
    1460:	b	1408 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xa7c>
    1464:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1468:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    146c:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1470:	add	x0, x0, #0x0
    1474:	add	x1, x1, #0x0
    1478:	add	x3, x3, #0x0
    147c:	b	1428 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xa9c>
    1480:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1484:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1488:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    148c:	add	x0, x0, #0x0
    1490:	add	x1, x1, #0x0
    1494:	add	x3, x3, #0x0
    1498:	b	1574 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xbe8>
    149c:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    14a0:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    14a4:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    14a8:	add	x0, x0, #0x0
    14ac:	add	x1, x1, #0x0
    14b0:	add	x3, x3, #0x0
    14b4:	b	1710 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xd84>
    14b8:	mov	x0, x25
    14bc:	bl	0 <_ZNK4llvm5Value4dumpEv>
    14c0:	ldr	x0, [sp]
    14c4:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    14c8:	bl	0 <_ZNK4llvm4Type4dumpEv>
    14cc:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    14d0:	add	x0, x0, #0x0
    14d4:	b	1408 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xa7c>
    14d8:	mov	x0, x21
    14dc:	bl	0 <_ZNK4llvm5Value4dumpEv>
    14e0:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    14e4:	add	x0, x0, #0x0
    14e8:	b	1408 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xa7c>
    14ec:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    14f0:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    14f4:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    14f8:	add	x0, x0, #0x0
    14fc:	add	x1, x1, #0x0
    1500:	add	x3, x3, #0x0
    1504:	b	1710 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xd84>
    1508:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    150c:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1510:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1514:	add	x0, x0, #0x0
    1518:	add	x1, x1, #0x0
    151c:	add	x3, x3, #0x0
    1520:	b	1574 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xbe8>
    1524:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1528:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    152c:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1530:	add	x0, x0, #0x0
    1534:	add	x1, x1, #0x0
    1538:	add	x3, x3, #0x0
    153c:	b	1710 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xd84>
    1540:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1544:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1548:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    154c:	add	x0, x0, #0x0
    1550:	add	x1, x1, #0x0
    1554:	add	x3, x3, #0x0
    1558:	b	1710 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xd84>
    155c:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1560:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1564:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1568:	add	x0, x0, #0x0
    156c:	add	x1, x1, #0x0
    1570:	add	x3, x3, #0x0
    1574:	mov	w2, #0x69                  	// #105
    1578:	bl	0 <__assert_fail>
    157c:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1580:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1584:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1588:	add	x0, x0, #0x0
    158c:	add	x1, x1, #0x0
    1590:	add	x3, x3, #0x0
    1594:	mov	w2, #0xf3                  	// #243
    1598:	bl	0 <__assert_fail>
    159c:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    15a0:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    15a4:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    15a8:	add	x0, x0, #0x0
    15ac:	add	x1, x1, #0x0
    15b0:	add	x3, x3, #0x0
    15b4:	b	1710 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xd84>
    15b8:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    15bc:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    15c0:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    15c4:	add	x0, x0, #0x0
    15c8:	add	x1, x1, #0x0
    15cc:	add	x3, x3, #0x0
    15d0:	b	1710 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xd84>
    15d4:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    15d8:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    15dc:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    15e0:	add	x0, x0, #0x0
    15e4:	add	x1, x1, #0x0
    15e8:	add	x3, x3, #0x0
    15ec:	b	1710 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xd84>
    15f0:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    15f4:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    15f8:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    15fc:	add	x0, x0, #0x0
    1600:	add	x1, x1, #0x0
    1604:	add	x3, x3, #0x0
    1608:	b	1710 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xd84>
    160c:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1610:	add	x0, x0, #0x0
    1614:	b	1408 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xa7c>
    1618:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    161c:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1620:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1624:	add	x0, x0, #0x0
    1628:	add	x1, x1, #0x0
    162c:	add	x3, x3, #0x0
    1630:	b	1710 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xd84>
    1634:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1638:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    163c:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1640:	add	x0, x0, #0x0
    1644:	add	x1, x1, #0x0
    1648:	add	x3, x3, #0x0
    164c:	b	1710 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xd84>
    1650:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1654:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1658:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    165c:	add	x0, x0, #0x0
    1660:	add	x1, x1, #0x0
    1664:	add	x3, x3, #0x0
    1668:	b	1710 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xd84>
    166c:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1670:	add	x0, x0, #0x0
    1674:	b	1408 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xa7c>
    1678:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    167c:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1680:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1684:	add	x0, x0, #0x0
    1688:	add	x1, x1, #0x0
    168c:	add	x3, x3, #0x0
    1690:	b	1710 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xd84>
    1694:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1698:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    169c:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    16a0:	add	x0, x0, #0x0
    16a4:	add	x1, x1, #0x0
    16a8:	add	x3, x3, #0x0
    16ac:	mov	w2, #0xa7                  	// #167
    16b0:	bl	0 <__assert_fail>
    16b4:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    16b8:	add	x0, x0, #0x0
    16bc:	b	1408 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xa7c>
    16c0:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    16c4:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    16c8:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    16cc:	add	x0, x0, #0x0
    16d0:	add	x1, x1, #0x0
    16d4:	add	x3, x3, #0x0
    16d8:	mov	w2, #0x9e                  	// #158
    16dc:	bl	0 <__assert_fail>
    16e0:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    16e4:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    16e8:	add	x0, x0, #0x0
    16ec:	add	x1, x1, #0x0
    16f0:	mov	w2, #0x1d5                 	// #469
    16f4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    16f8:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    16fc:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1700:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1704:	add	x0, x0, #0x0
    1708:	add	x1, x1, #0x0
    170c:	add	x3, x3, #0x0
    1710:	mov	w2, #0x108                 	// #264
    1714:	bl	0 <__assert_fail>
    1718:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    171c:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1720:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1724:	add	x0, x0, #0x0
    1728:	add	x1, x1, #0x0
    172c:	add	x3, x3, #0x0
    1730:	mov	w2, #0x95                  	// #149
    1734:	bl	0 <__assert_fail>
    1738:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    173c:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1740:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1744:	add	x0, x0, #0x0
    1748:	add	x1, x1, #0x0
    174c:	add	x3, x3, #0x0
    1750:	b	16ac <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xd20>

0000000000001754 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv>:
    1754:	sub	sp, sp, #0x40
    1758:	stp	x29, x30, [sp, #16]
    175c:	stp	x22, x21, [sp, #32]
    1760:	stp	x20, x19, [sp, #48]
    1764:	add	x29, sp, #0x10
    1768:	mov	w1, wzr
    176c:	mov	x19, x0
    1770:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1774:	adrp	x2, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1778:	mov	x1, x0
    177c:	add	x2, x2, #0x0
    1780:	mov	x0, x19
    1784:	bl	1e24 <_ZL16checkConstantIntPKN4llvm11InstructionEPNS_5ValueEPKc>
    1788:	mov	w1, #0x1                   	// #1
    178c:	mov	x0, x19
    1790:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1794:	adrp	x2, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1798:	mov	x1, x0
    179c:	add	x2, x2, #0x0
    17a0:	mov	x0, x19
    17a4:	bl	1e24 <_ZL16checkConstantIntPKN4llvm11InstructionEPNS_5ValueEPKc>
    17a8:	mov	w1, #0x3                   	// #3
    17ac:	mov	x0, x19
    17b0:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    17b4:	mov	x21, x0
    17b8:	bl	0 <_ZNK4llvm5Value17stripPointerCastsEv>
    17bc:	cbz	x0, 199c <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x248>
    17c0:	ldrb	w8, [x0, #16]
    17c4:	mov	x20, x0
    17c8:	cbnz	w8, 19e0 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x28c>
    17cc:	ldr	x21, [x20, #24]
    17d0:	cbz	x21, 1960 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x20c>
    17d4:	ldrb	w8, [x21, #8]
    17d8:	cmp	w8, #0xc
    17dc:	b.ne	197c <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x228>  // b.any
    17e0:	add	x0, sp, #0x8
    17e4:	str	x19, [sp, #8]
    17e8:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    17ec:	tbz	w0, #0, 1860 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x10c>
    17f0:	ldr	x8, [x21, #16]
    17f4:	ldr	x22, [x8]
    17f8:	ldr	w8, [x22, #8]
    17fc:	and	w9, w8, #0xff
    1800:	cmp	w9, #0xf
    1804:	b.eq	1834 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0xe0>  // b.none
    1808:	cbz	x22, 1a48 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x2f4>
    180c:	and	w8, w8, #0x1ff
    1810:	cmp	w8, #0x10d
    1814:	b.ne	1a28 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x2d4>  // b.any
    1818:	ldr	w8, [x22, #12]
    181c:	cbz	w8, 1a28 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x2d4>
    1820:	ldr	x8, [x22, #16]
    1824:	ldr	x8, [x8]
    1828:	ldrb	w8, [x8, #8]
    182c:	cmp	w8, #0xf
    1830:	b.ne	1a28 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x2d4>  // b.any
    1834:	mov	x0, x19
    1838:	bl	0 <_ZNK4llvm11Instruction11getFunctionEv>
    183c:	ldr	x8, [x0, #24]
    1840:	cbz	x8, 1960 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x20c>
    1844:	ldrb	w9, [x8, #8]
    1848:	cmp	w9, #0xc
    184c:	b.ne	197c <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x228>  // b.any
    1850:	ldr	x8, [x8, #16]
    1854:	ldr	x8, [x8]
    1858:	cmp	x22, x8
    185c:	b.ne	1a34 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x2e0>  // b.any
    1860:	ldr	w8, [x21, #12]
    1864:	cmp	w8, #0x1
    1868:	b.eq	19bc <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x268>  // b.none
    186c:	ldr	x8, [x21, #16]
    1870:	ldr	x8, [x8, #8]
    1874:	ldrb	w8, [x8, #8]
    1878:	cmp	w8, #0xf
    187c:	b.ne	19bc <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x268>  // b.any
    1880:	mov	w1, #0x4                   	// #4
    1884:	mov	x0, x19
    1888:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    188c:	mov	x20, x0
    1890:	bl	0 <_ZNK4llvm5Value17stripPointerCastsEv>
    1894:	cbz	x0, 199c <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x248>
    1898:	ldrb	w8, [x0, #16]
    189c:	mov	x2, x0
    18a0:	cbnz	w8, 19f4 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x2a0>
    18a4:	ldr	x8, [x2, #24]
    18a8:	cbz	x8, 1960 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x20c>
    18ac:	ldrb	w9, [x8, #8]
    18b0:	cmp	w9, #0xc
    18b4:	b.ne	197c <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x228>  // b.any
    18b8:	ldr	x9, [x8, #16]
    18bc:	ldr	x10, [x9]
    18c0:	ldrb	w10, [x10, #8]
    18c4:	cmp	w10, #0xf
    18c8:	b.ne	1a00 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x2ac>  // b.any
    18cc:	ldr	w8, [x8, #12]
    18d0:	cmp	w8, #0x2
    18d4:	b.ne	19c8 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x274>  // b.any
    18d8:	ldr	x8, [x9, #8]
    18dc:	ldrb	w8, [x8, #8]
    18e0:	cmp	w8, #0xb
    18e4:	b.ne	19c8 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x274>  // b.any
    18e8:	mov	w1, #0x5                   	// #5
    18ec:	mov	x0, x19
    18f0:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    18f4:	mov	x20, x0
    18f8:	bl	0 <_ZNK4llvm5Value17stripPointerCastsEv>
    18fc:	cbz	x0, 199c <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x248>
    1900:	ldrb	w8, [x0, #16]
    1904:	mov	x2, x0
    1908:	cbnz	w8, 1a0c <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x2b8>
    190c:	ldr	x8, [x2, #24]
    1910:	cbz	x8, 1960 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x20c>
    1914:	ldrb	w9, [x8, #8]
    1918:	cmp	w9, #0xc
    191c:	b.ne	197c <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x228>  // b.any
    1920:	ldr	x9, [x8, #16]
    1924:	ldr	x10, [x9]
    1928:	ldrb	w10, [x10, #8]
    192c:	cbnz	w10, 1a18 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x2c4>
    1930:	ldr	w8, [x8, #12]
    1934:	cmp	w8, #0x2
    1938:	b.ne	19d4 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x280>  // b.any
    193c:	ldr	x8, [x9, #8]
    1940:	ldrb	w8, [x8, #8]
    1944:	cmp	w8, #0xf
    1948:	b.ne	19d4 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x280>  // b.any
    194c:	ldp	x20, x19, [sp, #48]
    1950:	ldp	x22, x21, [sp, #32]
    1954:	ldp	x29, x30, [sp, #16]
    1958:	add	sp, sp, #0x40
    195c:	ret
    1960:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1964:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1968:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    196c:	add	x0, x0, #0x0
    1970:	add	x1, x1, #0x0
    1974:	add	x3, x3, #0x0
    1978:	b	19b4 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x260>
    197c:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1980:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1984:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1988:	add	x0, x0, #0x0
    198c:	add	x1, x1, #0x0
    1990:	add	x3, x3, #0x0
    1994:	mov	w2, #0x108                 	// #264
    1998:	bl	0 <__assert_fail>
    199c:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    19a0:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    19a4:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    19a8:	add	x0, x0, #0x0
    19ac:	add	x1, x1, #0x0
    19b0:	add	x3, x3, #0x0
    19b4:	mov	w2, #0x69                  	// #105
    19b8:	bl	0 <__assert_fail>
    19bc:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    19c0:	add	x1, x1, #0x0
    19c4:	b	1a3c <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x2e8>
    19c8:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    19cc:	add	x1, x1, #0x0
    19d0:	b	1a20 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x2cc>
    19d4:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    19d8:	add	x1, x1, #0x0
    19dc:	b	1a20 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x2cc>
    19e0:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    19e4:	add	x1, x1, #0x0
    19e8:	mov	x0, x19
    19ec:	mov	x2, x21
    19f0:	bl	1f34 <_ZL4failPKN4llvm11InstructionEPKcPNS_5ValueE>
    19f4:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    19f8:	add	x1, x1, #0x0
    19fc:	b	1a3c <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x2e8>
    1a00:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1a04:	add	x1, x1, #0x0
    1a08:	b	1a20 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x2cc>
    1a0c:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1a10:	add	x1, x1, #0x0
    1a14:	b	1a3c <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x2e8>
    1a18:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1a1c:	add	x1, x1, #0x0
    1a20:	mov	x0, x19
    1a24:	bl	1f34 <_ZL4failPKN4llvm11InstructionEPKcPNS_5ValueE>
    1a28:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1a2c:	add	x1, x1, #0x0
    1a30:	b	1a3c <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x2e8>
    1a34:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1a38:	add	x1, x1, #0x0
    1a3c:	mov	x0, x19
    1a40:	mov	x2, x20
    1a44:	bl	1f34 <_ZL4failPKN4llvm11InstructionEPKcPNS_5ValueE>
    1a48:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1a4c:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1a50:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1a54:	add	x0, x0, #0x0
    1a58:	add	x1, x1, #0x0
    1a5c:	add	x3, x3, #0x0
    1a60:	b	19b4 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x260>

0000000000001a64 <_ZNK4llvm4coro5Shape9emitAllocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE>:
    1a64:	sub	sp, sp, #0x60
    1a68:	stp	x29, x30, [sp, #32]
    1a6c:	stp	x24, x23, [sp, #48]
    1a70:	stp	x22, x21, [sp, #64]
    1a74:	stp	x20, x19, [sp, #80]
    1a78:	add	x29, sp, #0x20
    1a7c:	stur	x2, [x29, #-8]
    1a80:	ldr	w8, [x0, #168]
    1a84:	sub	w9, w8, #0x1
    1a88:	cmp	w9, #0x2
    1a8c:	b.cs	1b50 <_ZNK4llvm4coro5Shape9emitAllocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0xec>  // b.hs, b.nlast
    1a90:	ldr	x20, [x0, #208]
    1a94:	ldr	x8, [x20, #24]
    1a98:	cbz	x8, 1b6c <_ZNK4llvm4coro5Shape9emitAllocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x108>
    1a9c:	ldrb	w9, [x8, #8]
    1aa0:	cmp	w9, #0xc
    1aa4:	b.ne	1b8c <_ZNK4llvm4coro5Shape9emitAllocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x128>  // b.any
    1aa8:	ldr	x8, [x8, #16]
    1aac:	adrp	x24, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1ab0:	add	x24, x24, #0x0
    1ab4:	mov	x21, x1
    1ab8:	ldr	x23, [x8, #8]
    1abc:	mov	x0, sp
    1ac0:	mov	x1, x24
    1ac4:	mov	x19, x3
    1ac8:	mov	x22, x2
    1acc:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1ad0:	mov	x4, sp
    1ad4:	mov	x0, x21
    1ad8:	mov	x1, x22
    1adc:	mov	x2, x23
    1ae0:	mov	w3, wzr
    1ae4:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1ae8:	stur	x0, [x29, #-8]
    1aec:	mov	x0, sp
    1af0:	mov	x1, x24
    1af4:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1af8:	sub	x2, x29, #0x8
    1afc:	mov	x4, sp
    1b00:	mov	w3, #0x1                   	// #1
    1b04:	mov	x0, x21
    1b08:	mov	x1, x20
    1b0c:	mov	x5, xzr
    1b10:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1b14:	ldrh	w8, [x20, #18]
    1b18:	mov	x21, x0
    1b1c:	ubfx	w1, w8, #4, #10
    1b20:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1b24:	mov	x0, x19
    1b28:	mov	x1, x21
    1b2c:	mov	x2, x20
    1b30:	bl	1bc4 <_ZL18addCallToCallGraphPN4llvm9CallGraphEPNS_8CallInstEPNS_8FunctionE>
    1b34:	mov	x0, x21
    1b38:	ldp	x20, x19, [sp, #80]
    1b3c:	ldp	x22, x21, [sp, #64]
    1b40:	ldp	x24, x23, [sp, #48]
    1b44:	ldp	x29, x30, [sp, #32]
    1b48:	add	sp, sp, #0x60
    1b4c:	ret
    1b50:	cbnz	w8, 1bac <_ZNK4llvm4coro5Shape9emitAllocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x148>
    1b54:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1b58:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1b5c:	add	x0, x0, #0x0
    1b60:	add	x1, x1, #0x0
    1b64:	mov	w2, #0x1f7                 	// #503
    1b68:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    1b6c:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1b70:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1b74:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1b78:	add	x0, x0, #0x0
    1b7c:	add	x1, x1, #0x0
    1b80:	add	x3, x3, #0x0
    1b84:	mov	w2, #0x69                  	// #105
    1b88:	bl	0 <__assert_fail>
    1b8c:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1b90:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1b94:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1b98:	add	x0, x0, #0x0
    1b9c:	add	x1, x1, #0x0
    1ba0:	add	x3, x3, #0x0
    1ba4:	mov	w2, #0x108                 	// #264
    1ba8:	bl	0 <__assert_fail>
    1bac:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1bb0:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1bb4:	add	x0, x0, #0x0
    1bb8:	add	x1, x1, #0x0
    1bbc:	mov	w2, #0x205                 	// #517
    1bc0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000001bc4 <_ZL18addCallToCallGraphPN4llvm9CallGraphEPNS_8CallInstEPNS_8FunctionE>:
    1bc4:	stp	x29, x30, [sp, #-48]!
    1bc8:	str	x21, [sp, #16]
    1bcc:	stp	x20, x19, [sp, #32]
    1bd0:	mov	x29, sp
    1bd4:	cbz	x0, 1c98 <_ZL18addCallToCallGraphPN4llvm9CallGraphEPNS_8CallInstEPNS_8FunctionE+0xd4>
    1bd8:	mov	x21, x0
    1bdc:	mov	x0, x1
    1be0:	mov	x20, x2
    1be4:	mov	x19, x1
    1be8:	bl	0 <_ZNK4llvm11Instruction11getFunctionEv>
    1bec:	ldr	x9, [x21, #24]
    1bf0:	cbz	x9, 1ca8 <_ZL18addCallToCallGraphPN4llvm9CallGraphEPNS_8CallInstEPNS_8FunctionE+0xe4>
    1bf4:	add	x8, x21, #0x10
    1bf8:	mov	x11, x9
    1bfc:	mov	x10, x8
    1c00:	ldr	x12, [x11, #32]
    1c04:	add	x13, x11, #0x18
    1c08:	add	x14, x11, #0x10
    1c0c:	cmp	x12, x0
    1c10:	csel	x10, x10, x11, cc  // cc = lo, ul, last
    1c14:	csel	x11, x13, x14, cc  // cc = lo, ul, last
    1c18:	ldr	x11, [x11]
    1c1c:	cbnz	x11, 1c00 <_ZL18addCallToCallGraphPN4llvm9CallGraphEPNS_8CallInstEPNS_8FunctionE+0x3c>
    1c20:	cmp	x10, x8
    1c24:	b.eq	1ca8 <_ZL18addCallToCallGraphPN4llvm9CallGraphEPNS_8CallInstEPNS_8FunctionE+0xe4>  // b.none
    1c28:	ldr	x11, [x10, #32]
    1c2c:	cmp	x11, x0
    1c30:	csel	x10, x8, x10, hi  // hi = pmore
    1c34:	cmp	x10, x8
    1c38:	b.eq	1ca8 <_ZL18addCallToCallGraphPN4llvm9CallGraphEPNS_8CallInstEPNS_8FunctionE+0xe4>  // b.none
    1c3c:	ldr	x0, [x10, #40]
    1c40:	mov	x10, x8
    1c44:	ldr	x11, [x9, #32]
    1c48:	add	x12, x9, #0x18
    1c4c:	add	x13, x9, #0x10
    1c50:	cmp	x11, x20
    1c54:	csel	x10, x10, x9, cc  // cc = lo, ul, last
    1c58:	csel	x9, x12, x13, cc  // cc = lo, ul, last
    1c5c:	ldr	x9, [x9]
    1c60:	cbnz	x9, 1c44 <_ZL18addCallToCallGraphPN4llvm9CallGraphEPNS_8CallInstEPNS_8FunctionE+0x80>
    1c64:	cmp	x10, x8
    1c68:	b.eq	1ca8 <_ZL18addCallToCallGraphPN4llvm9CallGraphEPNS_8CallInstEPNS_8FunctionE+0xe4>  // b.none
    1c6c:	ldr	x9, [x10, #32]
    1c70:	cmp	x9, x20
    1c74:	csel	x9, x8, x10, hi  // hi = pmore
    1c78:	cmp	x9, x8
    1c7c:	b.eq	1ca8 <_ZL18addCallToCallGraphPN4llvm9CallGraphEPNS_8CallInstEPNS_8FunctionE+0xe4>  // b.none
    1c80:	ldr	x2, [x9, #40]
    1c84:	mov	x1, x19
    1c88:	ldp	x20, x19, [sp, #32]
    1c8c:	ldr	x21, [sp, #16]
    1c90:	ldp	x29, x30, [sp], #48
    1c94:	b	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1c98:	ldp	x20, x19, [sp, #32]
    1c9c:	ldr	x21, [sp, #16]
    1ca0:	ldp	x29, x30, [sp], #48
    1ca4:	ret
    1ca8:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1cac:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1cb0:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1cb4:	add	x0, x0, #0x0
    1cb8:	add	x1, x1, #0x0
    1cbc:	add	x3, x3, #0x0
    1cc0:	mov	w2, #0x82                  	// #130
    1cc4:	bl	0 <__assert_fail>

0000000000001cc8 <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE>:
    1cc8:	sub	sp, sp, #0x60
    1ccc:	stp	x29, x30, [sp, #32]
    1cd0:	stp	x24, x23, [sp, #48]
    1cd4:	stp	x22, x21, [sp, #64]
    1cd8:	stp	x20, x19, [sp, #80]
    1cdc:	add	x29, sp, #0x20
    1ce0:	stur	x2, [x29, #-8]
    1ce4:	ldr	w8, [x0, #168]
    1ce8:	sub	w9, w8, #0x1
    1cec:	cmp	w9, #0x2
    1cf0:	b.cs	1db0 <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0xe8>  // b.hs, b.nlast
    1cf4:	ldr	x20, [x0, #216]
    1cf8:	ldr	x8, [x20, #24]
    1cfc:	cbz	x8, 1dcc <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x104>
    1d00:	ldrb	w9, [x8, #8]
    1d04:	cmp	w9, #0xc
    1d08:	b.ne	1dec <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x124>  // b.any
    1d0c:	ldr	x8, [x8, #16]
    1d10:	adrp	x24, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1d14:	add	x24, x24, #0x0
    1d18:	mov	x21, x1
    1d1c:	ldr	x23, [x8, #8]
    1d20:	mov	x0, sp
    1d24:	mov	x1, x24
    1d28:	mov	x19, x3
    1d2c:	mov	x22, x2
    1d30:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1d34:	mov	x4, sp
    1d38:	mov	w1, #0x31                  	// #49
    1d3c:	mov	x0, x21
    1d40:	mov	x2, x22
    1d44:	mov	x3, x23
    1d48:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1d4c:	stur	x0, [x29, #-8]
    1d50:	mov	x0, sp
    1d54:	mov	x1, x24
    1d58:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1d5c:	sub	x2, x29, #0x8
    1d60:	mov	x4, sp
    1d64:	mov	w3, #0x1                   	// #1
    1d68:	mov	x0, x21
    1d6c:	mov	x1, x20
    1d70:	mov	x5, xzr
    1d74:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1d78:	ldrh	w8, [x20, #18]
    1d7c:	mov	x21, x0
    1d80:	ubfx	w1, w8, #4, #10
    1d84:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1d88:	mov	x0, x19
    1d8c:	mov	x1, x21
    1d90:	mov	x2, x20
    1d94:	bl	1bc4 <_ZL18addCallToCallGraphPN4llvm9CallGraphEPNS_8CallInstEPNS_8FunctionE>
    1d98:	ldp	x20, x19, [sp, #80]
    1d9c:	ldp	x22, x21, [sp, #64]
    1da0:	ldp	x24, x23, [sp, #48]
    1da4:	ldp	x29, x30, [sp, #32]
    1da8:	add	sp, sp, #0x60
    1dac:	ret
    1db0:	cbnz	w8, 1e0c <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x144>
    1db4:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1db8:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1dbc:	add	x0, x0, #0x0
    1dc0:	add	x1, x1, #0x0
    1dc4:	mov	w2, #0x20c                 	// #524
    1dc8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    1dcc:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1dd0:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1dd4:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1dd8:	add	x0, x0, #0x0
    1ddc:	add	x1, x1, #0x0
    1de0:	add	x3, x3, #0x0
    1de4:	mov	w2, #0x69                  	// #105
    1de8:	bl	0 <__assert_fail>
    1dec:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1df0:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1df4:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1df8:	add	x0, x0, #0x0
    1dfc:	add	x1, x1, #0x0
    1e00:	add	x3, x3, #0x0
    1e04:	mov	w2, #0x108                 	// #264
    1e08:	bl	0 <__assert_fail>
    1e0c:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1e10:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1e14:	add	x0, x0, #0x0
    1e18:	add	x1, x1, #0x0
    1e1c:	mov	w2, #0x219                 	// #537
    1e20:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000001e24 <_ZL16checkConstantIntPKN4llvm11InstructionEPNS_5ValueEPKc>:
    1e24:	stp	x29, x30, [sp, #-16]!
    1e28:	mov	x29, sp
    1e2c:	cbz	x1, 1e48 <_ZL16checkConstantIntPKN4llvm11InstructionEPNS_5ValueEPKc+0x24>
    1e30:	ldrb	w9, [x1, #16]
    1e34:	mov	x8, x1
    1e38:	cmp	w9, #0xd
    1e3c:	b.ne	1e68 <_ZL16checkConstantIntPKN4llvm11InstructionEPNS_5ValueEPKc+0x44>  // b.any
    1e40:	ldp	x29, x30, [sp], #16
    1e44:	ret
    1e48:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1e4c:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1e50:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1e54:	add	x0, x0, #0x0
    1e58:	add	x1, x1, #0x0
    1e5c:	add	x3, x3, #0x0
    1e60:	mov	w2, #0x69                  	// #105
    1e64:	bl	0 <__assert_fail>
    1e68:	mov	x1, x2
    1e6c:	mov	x2, x8
    1e70:	bl	1f34 <_ZL4failPKN4llvm11InstructionEPKcPNS_5ValueE>

0000000000001e74 <LLVMAddCoroEarlyPass>:
    1e74:	stp	x29, x30, [sp, #-32]!
    1e78:	str	x19, [sp, #16]
    1e7c:	mov	x29, sp
    1e80:	mov	x19, x0
    1e84:	bl	0 <_ZN4llvm25createCoroEarlyLegacyPassEv>
    1e88:	ldr	x8, [x19]
    1e8c:	mov	x1, x0
    1e90:	mov	x0, x19
    1e94:	ldr	x19, [sp, #16]
    1e98:	ldr	x2, [x8, #16]
    1e9c:	ldp	x29, x30, [sp], #32
    1ea0:	br	x2

0000000000001ea4 <LLVMAddCoroSplitPass>:
    1ea4:	stp	x29, x30, [sp, #-32]!
    1ea8:	str	x19, [sp, #16]
    1eac:	mov	x29, sp
    1eb0:	mov	x19, x0
    1eb4:	bl	0 <_ZN4llvm25createCoroSplitLegacyPassEv>
    1eb8:	ldr	x8, [x19]
    1ebc:	mov	x1, x0
    1ec0:	mov	x0, x19
    1ec4:	ldr	x19, [sp, #16]
    1ec8:	ldr	x2, [x8, #16]
    1ecc:	ldp	x29, x30, [sp], #32
    1ed0:	br	x2

0000000000001ed4 <LLVMAddCoroElidePass>:
    1ed4:	stp	x29, x30, [sp, #-32]!
    1ed8:	str	x19, [sp, #16]
    1edc:	mov	x29, sp
    1ee0:	mov	x19, x0
    1ee4:	bl	0 <_ZN4llvm25createCoroElideLegacyPassEv>
    1ee8:	ldr	x8, [x19]
    1eec:	mov	x1, x0
    1ef0:	mov	x0, x19
    1ef4:	ldr	x19, [sp, #16]
    1ef8:	ldr	x2, [x8, #16]
    1efc:	ldp	x29, x30, [sp], #32
    1f00:	br	x2

0000000000001f04 <LLVMAddCoroCleanupPass>:
    1f04:	stp	x29, x30, [sp, #-32]!
    1f08:	str	x19, [sp, #16]
    1f0c:	mov	x29, sp
    1f10:	mov	x19, x0
    1f14:	bl	0 <_ZN4llvm27createCoroCleanupLegacyPassEv>
    1f18:	ldr	x8, [x19]
    1f1c:	mov	x1, x0
    1f20:	mov	x0, x19
    1f24:	ldr	x19, [sp, #16]
    1f28:	ldr	x2, [x8, #16]
    1f2c:	ldp	x29, x30, [sp], #32
    1f30:	br	x2

0000000000001f34 <_ZL4failPKN4llvm11InstructionEPKcPNS_5ValueE>:
    1f34:	stp	x29, x30, [sp, #-32]!
    1f38:	stp	x20, x19, [sp, #16]
    1f3c:	mov	x29, sp
    1f40:	mov	x20, x2
    1f44:	mov	x19, x1
    1f48:	bl	0 <_ZNK4llvm5Value4dumpEv>
    1f4c:	cbz	x20, 1fa8 <_ZL4failPKN4llvm11InstructionEPKcPNS_5ValueE+0x74>
    1f50:	bl	0 <_ZN4llvm4errsEv>
    1f54:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1f58:	add	x1, x1, #0x0
    1f5c:	mov	w2, #0x9                   	// #9
    1f60:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1f64:	bl	0 <_ZN4llvm4errsEv>
    1f68:	mov	x1, x0
    1f6c:	mov	w2, #0x1                   	// #1
    1f70:	mov	x0, x20
    1f74:	mov	x3, xzr
    1f78:	bl	0 <_ZNK4llvm5Value14printAsOperandERNS_11raw_ostreamEbPKNS_6ModuleE>
    1f7c:	bl	0 <_ZN4llvm4errsEv>
    1f80:	ldp	x9, x8, [x0, #16]
    1f84:	cmp	x8, x9
    1f88:	b.cs	1fa0 <_ZL4failPKN4llvm11InstructionEPKcPNS_5ValueE+0x6c>  // b.hs, b.nlast
    1f8c:	add	x9, x8, #0x1
    1f90:	mov	w10, #0xa                   	// #10
    1f94:	str	x9, [x0, #24]
    1f98:	strb	w10, [x8]
    1f9c:	b	1fa8 <_ZL4failPKN4llvm11InstructionEPKcPNS_5ValueE+0x74>
    1fa0:	mov	w1, #0xa                   	// #10
    1fa4:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    1fa8:	mov	w1, #0x1                   	// #1
    1fac:	mov	x0, x19
    1fb0:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>

Disassembly of section .text._ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x9, [x0]
   c:	cbz	x9, 50 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE+0x50>
  10:	ldrb	w10, [x9, #8]
  14:	cmp	w10, #0xf
  18:	b.ne	6c <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE+0x6c>  // b.any
  1c:	mov	x8, x0
  20:	ldr	x0, [x9, #24]
  24:	cbz	x0, 88 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE+0x88>
  28:	ldrb	w9, [x0, #8]
  2c:	cmp	w9, #0xc
  30:	b.ne	a8 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE+0xa8>  // b.any
  34:	mov	x5, x4
  38:	mov	x4, x3
  3c:	mov	x3, x2
  40:	mov	x2, x1
  44:	mov	x1, x8
  48:	ldp	x29, x30, [sp], #16
  4c:	b	0 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE>
  50:	adrp	x0, 0 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE>
  54:	adrp	x1, 0 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE>
  58:	adrp	x3, 0 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE>
  5c:	add	x0, x0, #0x0
  60:	add	x1, x1, #0x0
  64:	add	x3, x3, #0x0
  68:	b	a0 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE+0xa0>
  6c:	adrp	x0, 0 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE>
  70:	adrp	x1, 0 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE>
  74:	adrp	x3, 0 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE>
  78:	add	x0, x0, #0x0
  7c:	add	x1, x1, #0x0
  80:	add	x3, x3, #0x0
  84:	b	c0 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE+0xc0>
  88:	adrp	x0, 0 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE>
  8c:	adrp	x1, 0 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE>
  90:	adrp	x3, 0 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE>
  94:	add	x0, x0, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x3, x3, #0x0
  a0:	mov	w2, #0x69                  	// #105
  a4:	bl	0 <__assert_fail>
  a8:	adrp	x0, 0 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE>
  ac:	adrp	x1, 0 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE>
  b0:	adrp	x3, 0 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE>
  b4:	add	x0, x0, #0x0
  b8:	add	x1, x1, #0x0
  bc:	add	x3, x3, #0x0
  c0:	mov	w2, #0x108                 	// #264
  c4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm5TwineC2EPKc:

0000000000000000 <_ZN4llvm5TwineC2EPKc>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w8, #0x101                 	// #257
   c:	stp	xzr, xzr, [x0]
  10:	strh	w8, [x0, #16]
  14:	ldrb	w8, [x1]
  18:	cbz	w8, 28 <_ZN4llvm5TwineC2EPKc+0x28>
  1c:	mov	w8, #0x3                   	// #3
  20:	str	x1, [x0]
  24:	b	2c <_ZN4llvm5TwineC2EPKc+0x2c>
  28:	mov	w8, #0x1                   	// #1
  2c:	strb	w8, [x0, #16]
  30:	bl	0 <_ZN4llvm5TwineC2EPKc>
  34:	tbz	w0, #0, 40 <_ZN4llvm5TwineC2EPKc+0x40>
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZN4llvm5TwineC2EPKc>
  44:	adrp	x1, 0 <_ZN4llvm5TwineC2EPKc>
  48:	adrp	x3, 0 <_ZN4llvm5TwineC2EPKc>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x112                 	// #274
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm5Value18user_iterator_implINS_4UserEEdeEv:

0000000000000000 <_ZNK4llvm5Value18user_iterator_implINS_4UserEEdeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0]
   c:	cbz	x0, 18 <_ZNK4llvm5Value18user_iterator_implINS_4UserEEdeEv+0x18>
  10:	ldp	x29, x30, [sp], #16
  14:	b	0 <_ZNK4llvm3Use7getUserEv>
  18:	adrp	x0, 0 <_ZNK4llvm5Value18user_iterator_implINS_4UserEEdeEv>
  1c:	adrp	x1, 0 <_ZNK4llvm5Value18user_iterator_implINS_4UserEEdeEv>
  20:	adrp	x3, 0 <_ZNK4llvm5Value18user_iterator_implINS_4UserEEdeEv>
  24:	add	x0, x0, #0x0
  28:	add	x1, x1, #0x0
  2c:	add	x3, x3, #0x0
  30:	mov	w2, #0x99                  	// #153
  34:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIPNS_12CoroFreeInstELb1EE9push_backERKS2_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIPNS_12CoroFreeInstELb1EE9push_backERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseIPNS_12CoroFreeInstELb1EE9push_backERKS2_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	x10, [x20]
  28:	str	x10, [x9, w8, uxtw #3]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseIPNS_12CoroFreeInstELb1EE9push_backERKS2_+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x8                   	// #8
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseIPNS_12CoroFreeInstELb1EE9push_backERKS2_+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_12CoroFreeInstELb1EE9push_backERKS2_>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_12CoroFreeInstELb1EE9push_backERKS2_>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_12CoroFreeInstELb1EE9push_backERKS2_>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13CallGraphNode24removeAllCalledFunctionsEv:

0000000000000000 <_ZN4llvm13CallGraphNode24removeAllCalledFunctionsEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	x8, x9, [x0, #8]
  14:	cmp	x8, x9
  18:	b.eq	74 <_ZN4llvm13CallGraphNode24removeAllCalledFunctionsEv+0x74>  // b.none
  1c:	mov	w21, #0x101                 	// #257
  20:	mov	x19, x0
  24:	mov	w20, #0x1                   	// #1
  28:	movk	w21, #0x1, lsl #16
  2c:	ldur	x10, [x9, #-8]
  30:	sub	x0, x9, #0x20
  34:	ldr	w11, [x10, #32]
  38:	sub	w11, w11, #0x1
  3c:	str	w11, [x10, #32]
  40:	str	x0, [x19, #16]
  44:	ldur	x9, [x9, #-16]
  48:	add	x9, x9, #0x10
  4c:	cmp	x9, #0x10
  50:	b.hi	60 <_ZN4llvm13CallGraphNode24removeAllCalledFunctionsEv+0x60>  // b.pmore
  54:	lsl	x9, x20, x9
  58:	tst	x9, x21
  5c:	b.ne	68 <_ZN4llvm13CallGraphNode24removeAllCalledFunctionsEv+0x68>  // b.any
  60:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
  64:	ldp	x8, x0, [x19, #8]
  68:	cmp	x8, x0
  6c:	mov	x9, x0
  70:	b.ne	2c <_ZN4llvm13CallGraphNode24removeAllCalledFunctionsEv+0x2c>  // b.any
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIPNS_13CallGraphNodeELb1EE9push_backERKS2_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIPNS_13CallGraphNodeELb1EE9push_backERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseIPNS_13CallGraphNodeELb1EE9push_backERKS2_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	x10, [x20]
  28:	str	x10, [x9, w8, uxtw #3]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseIPNS_13CallGraphNodeELb1EE9push_backERKS2_+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x8                   	// #8
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseIPNS_13CallGraphNodeELb1EE9push_backERKS2_+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_13CallGraphNodeELb1EE9push_backERKS2_>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_13CallGraphNodeELb1EE9push_backERKS2_>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_13CallGraphNodeELb1EE9push_backERKS2_>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIPNS_12CoroSizeInstELb1EE9push_backERKS2_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIPNS_12CoroSizeInstELb1EE9push_backERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseIPNS_12CoroSizeInstELb1EE9push_backERKS2_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	x10, [x20]
  28:	str	x10, [x9, w8, uxtw #3]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseIPNS_12CoroSizeInstELb1EE9push_backERKS2_+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x8                   	// #8
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseIPNS_12CoroSizeInstELb1EE9push_backERKS2_+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_12CoroSizeInstELb1EE9push_backERKS2_>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_12CoroSizeInstELb1EE9push_backERKS2_>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_12CoroSizeInstELb1EE9push_backERKS2_>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIPNS_13CoroFrameInstELb1EE9push_backERKS2_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIPNS_13CoroFrameInstELb1EE9push_backERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseIPNS_13CoroFrameInstELb1EE9push_backERKS2_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	x10, [x20]
  28:	str	x10, [x9, w8, uxtw #3]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseIPNS_13CoroFrameInstELb1EE9push_backERKS2_+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x8                   	// #8
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseIPNS_13CoroFrameInstELb1EE9push_backERKS2_+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_13CoroFrameInstELb1EE9push_backERKS2_>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_13CoroFrameInstELb1EE9push_backERKS2_>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_13CoroFrameInstELb1EE9push_backERKS2_>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIPNS_12CoroSaveInstELb1EE9push_backERKS2_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIPNS_12CoroSaveInstELb1EE9push_backERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseIPNS_12CoroSaveInstELb1EE9push_backERKS2_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	x10, [x20]
  28:	str	x10, [x9, w8, uxtw #3]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseIPNS_12CoroSaveInstELb1EE9push_backERKS2_+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x8                   	// #8
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseIPNS_12CoroSaveInstELb1EE9push_backERKS2_+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_12CoroSaveInstELb1EE9push_backERKS2_>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_12CoroSaveInstELb1EE9push_backERKS2_>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_12CoroSaveInstELb1EE9push_backERKS2_>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIPNS_18AnyCoroSuspendInstELb1EE9push_backERKS2_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIPNS_18AnyCoroSuspendInstELb1EE9push_backERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseIPNS_18AnyCoroSuspendInstELb1EE9push_backERKS2_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	x10, [x20]
  28:	str	x10, [x9, w8, uxtw #3]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseIPNS_18AnyCoroSuspendInstELb1EE9push_backERKS2_+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x8                   	// #8
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseIPNS_18AnyCoroSuspendInstELb1EE9push_backERKS2_+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_18AnyCoroSuspendInstELb1EE9push_backERKS2_>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_18AnyCoroSuspendInstELb1EE9push_backERKS2_>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_18AnyCoroSuspendInstELb1EE9push_backERKS2_>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm15CoroSuspendInst7isFinalEv:

0000000000000000 <_ZNK4llvm15CoroSuspendInst7isFinalEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w1, #0x1                   	// #1
   c:	bl	0 <_ZNK4llvm15CoroSuspendInst7isFinalEv>
  10:	cbz	x0, 28 <_ZNK4llvm15CoroSuspendInst7isFinalEv+0x28>
  14:	ldrb	w8, [x0, #16]
  18:	cmp	w8, #0x11
  1c:	b.cs	48 <_ZNK4llvm15CoroSuspendInst7isFinalEv+0x48>  // b.hs, b.nlast
  20:	ldp	x29, x30, [sp], #16
  24:	b	0 <_ZNK4llvm8Constant10isOneValueEv>
  28:	adrp	x0, 0 <_ZNK4llvm15CoroSuspendInst7isFinalEv>
  2c:	adrp	x1, 0 <_ZNK4llvm15CoroSuspendInst7isFinalEv>
  30:	adrp	x3, 0 <_ZNK4llvm15CoroSuspendInst7isFinalEv>
  34:	add	x0, x0, #0x0
  38:	add	x1, x1, #0x0
  3c:	add	x3, x3, #0x0
  40:	mov	w2, #0x69                  	// #105
  44:	bl	0 <__assert_fail>
  48:	adrp	x0, 0 <_ZNK4llvm15CoroSuspendInst7isFinalEv>
  4c:	adrp	x1, 0 <_ZNK4llvm15CoroSuspendInst7isFinalEv>
  50:	adrp	x3, 0 <_ZNK4llvm15CoroSuspendInst7isFinalEv>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x108                 	// #264
  64:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm13CoroBeginInst5getIdEv:

0000000000000000 <_ZNK4llvm13CoroBeginInst5getIdEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	w1, wzr
  10:	bl	0 <_ZNK4llvm13CoroBeginInst5getIdEv>
  14:	mov	x19, x0
  18:	str	x0, [x29, #24]
  1c:	add	x0, x29, #0x18
  20:	bl	0 <_ZNK4llvm13CoroBeginInst5getIdEv>
  24:	tbz	w0, #0, 38 <_ZNK4llvm13CoroBeginInst5getIdEv+0x38>
  28:	mov	x0, x19
  2c:	ldr	x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret
  38:	adrp	x0, 0 <_ZNK4llvm13CoroBeginInst5getIdEv>
  3c:	adrp	x1, 0 <_ZNK4llvm13CoroBeginInst5getIdEv>
  40:	adrp	x3, 0 <_ZNK4llvm13CoroBeginInst5getIdEv>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x108                 	// #264
  54:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10CoroIdInst7getInfoEv:

0000000000000000 <_ZNK4llvm10CoroIdInst7getInfoEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	bl	0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  10:	cbz	x0, e4 <_ZNK4llvm10CoroIdInst7getInfoEv+0xe4>
  14:	ldrb	w8, [x0, #16]
  18:	mov	x19, x0
  1c:	cmp	w8, #0x3
  20:	b.ne	b0 <_ZNK4llvm10CoroIdInst7getInfoEv+0xb0>  // b.any
  24:	ldrb	w8, [x19, #80]
  28:	tbz	w8, #0, c4 <_ZNK4llvm10CoroIdInst7getInfoEv+0xc4>
  2c:	mov	x0, x19
  30:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
  34:	tbnz	w0, #0, c4 <_ZNK4llvm10CoroIdInst7getInfoEv+0xc4>
  38:	ldr	w8, [x19, #32]
  3c:	and	w8, w8, #0xf
  40:	cmp	w8, #0xa
  44:	b.hi	100 <_ZNK4llvm10CoroIdInst7getInfoEv+0x100>  // b.pmore
  48:	mov	w9, #0x1                   	// #1
  4c:	lsl	w8, w9, w8
  50:	mov	w9, #0x1eb                 	// #491
  54:	tst	w8, w9
  58:	b.eq	c4 <_ZNK4llvm10CoroIdInst7getInfoEv+0xc4>  // b.none
  5c:	ldrb	w8, [x19, #80]
  60:	tbnz	w8, #1, c4 <_ZNK4llvm10CoroIdInst7getInfoEv+0xc4>
  64:	mov	x0, x19
  68:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
  6c:	tbnz	w0, #0, 118 <_ZNK4llvm10CoroIdInst7getInfoEv+0x118>
  70:	ldur	x1, [x19, #-24]
  74:	cbz	x1, 138 <_ZNK4llvm10CoroIdInst7getInfoEv+0x138>
  78:	ldrb	w8, [x1, #16]
  7c:	cmp	w8, #0x7
  80:	csel	x0, x1, xzr, eq  // eq = none
  84:	cbnz	x0, b4 <_ZNK4llvm10CoroIdInst7getInfoEv+0xb4>
  88:	cmp	w8, #0x6
  8c:	b.eq	b8 <_ZNK4llvm10CoroIdInst7getInfoEv+0xb8>  // b.none
  90:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  94:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  98:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  9c:	add	x0, x0, #0x0
  a0:	add	x1, x1, #0x0
  a4:	add	x3, x3, #0x0
  a8:	mov	w2, #0x108                 	// #264
  ac:	bl	0 <__assert_fail>
  b0:	mov	x0, xzr
  b4:	mov	x1, xzr
  b8:	ldr	x19, [sp, #16]
  bc:	ldp	x29, x30, [sp], #32
  c0:	ret
  c4:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  c8:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  cc:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  d0:	add	x0, x0, #0x0
  d4:	add	x1, x1, #0x0
  d8:	add	x3, x3, #0x0
  dc:	mov	w2, #0xa8                  	// #168
  e0:	bl	0 <__assert_fail>
  e4:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  e8:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  ec:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  f0:	add	x0, x0, #0x0
  f4:	add	x1, x1, #0x0
  f8:	add	x3, x3, #0x0
  fc:	b	150 <_ZNK4llvm10CoroIdInst7getInfoEv+0x150>
 100:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 104:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	mov	w2, #0x16d                 	// #365
 114:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 118:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 11c:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 120:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 124:	add	x0, x0, #0x0
 128:	add	x1, x1, #0x0
 12c:	add	x3, x3, #0x0
 130:	mov	w2, #0x8d                  	// #141
 134:	bl	0 <__assert_fail>
 138:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 13c:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 140:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 144:	add	x0, x0, #0x0
 148:	add	x1, x1, #0x0
 14c:	add	x3, x3, #0x0
 150:	mov	w2, #0x69                  	// #105
 154:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIPNS_11CoroEndInstELb1EE9push_backERKS2_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIPNS_11CoroEndInstELb1EE9push_backERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseIPNS_11CoroEndInstELb1EE9push_backERKS2_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	x10, [x20]
  28:	str	x10, [x9, w8, uxtw #3]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseIPNS_11CoroEndInstELb1EE9push_backERKS2_+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x8                   	// #8
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseIPNS_11CoroEndInstELb1EE9push_backERKS2_+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_11CoroEndInstELb1EE9push_backERKS2_>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_11CoroEndInstELb1EE9push_backERKS2_>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_11CoroEndInstELb1EE9push_backERKS2_>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10CoroIdInst10getPromiseEv:

0000000000000000 <_ZNK4llvm10CoroIdInst10getPromiseEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w1, #0x1                   	// #1
   c:	bl	0 <_ZNK4llvm10CoroIdInst10getPromiseEv>
  10:	cbz	x0, 44 <_ZNK4llvm10CoroIdInst10getPromiseEv+0x44>
  14:	ldrb	w8, [x0, #16]
  18:	cmp	w8, #0xf
  1c:	b.ne	28 <_ZNK4llvm10CoroIdInst10getPromiseEv+0x28>  // b.any
  20:	mov	x0, xzr
  24:	b	3c <_ZNK4llvm10CoroIdInst10getPromiseEv+0x3c>
  28:	bl	0 <_ZNK4llvm5Value17stripPointerCastsEv>
  2c:	cbz	x0, 60 <_ZNK4llvm10CoroIdInst10getPromiseEv+0x60>
  30:	ldrb	w8, [x0, #16]
  34:	cmp	w8, #0x37
  38:	b.ne	80 <_ZNK4llvm10CoroIdInst10getPromiseEv+0x80>  // b.any
  3c:	ldp	x29, x30, [sp], #16
  40:	ret
  44:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst10getPromiseEv>
  48:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst10getPromiseEv>
  4c:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst10getPromiseEv>
  50:	add	x0, x0, #0x0
  54:	add	x1, x1, #0x0
  58:	add	x3, x3, #0x0
  5c:	b	78 <_ZNK4llvm10CoroIdInst10getPromiseEv+0x78>
  60:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst10getPromiseEv>
  64:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst10getPromiseEv>
  68:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst10getPromiseEv>
  6c:	add	x0, x0, #0x0
  70:	add	x1, x1, #0x0
  74:	add	x3, x3, #0x0
  78:	mov	w2, #0x69                  	// #105
  7c:	bl	0 <__assert_fail>
  80:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst10getPromiseEv>
  84:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst10getPromiseEv>
  88:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst10getPromiseEv>
  8c:	add	x0, x0, #0x0
  90:	add	x1, x1, #0x0
  94:	add	x3, x3, #0x0
  98:	mov	w2, #0x108                 	// #264
  9c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm15CoroSuspendInst11getCoroSaveEv:

0000000000000000 <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w1, wzr
   c:	bl	0 <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv>
  10:	cbz	x0, 78 <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv+0x78>
  14:	ldrb	w8, [x0, #16]
  18:	cmp	w8, #0x10
  1c:	b.eq	6c <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv+0x6c>  // b.none
  20:	cmp	w8, #0x50
  24:	b.ne	4c <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv+0x4c>  // b.any
  28:	ldur	x8, [x0, #-24]
  2c:	cbz	x8, 4c <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv+0x4c>
  30:	ldrb	w9, [x8, #16]
  34:	cbnz	w9, 4c <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv+0x4c>
  38:	ldrb	w9, [x8, #33]
  3c:	tbz	w9, #5, 4c <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv+0x4c>
  40:	ldr	w8, [x8, #36]
  44:	cmp	w8, #0x20
  48:	b.eq	70 <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv+0x70>  // b.none
  4c:	adrp	x0, 0 <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv>
  50:	adrp	x1, 0 <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv>
  54:	adrp	x3, 0 <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv>
  58:	add	x0, x0, #0x0
  5c:	add	x1, x1, #0x0
  60:	add	x3, x3, #0x0
  64:	mov	w2, #0x17c                 	// #380
  68:	bl	0 <__assert_fail>
  6c:	mov	x0, xzr
  70:	ldp	x29, x30, [sp], #16
  74:	ret
  78:	adrp	x0, 0 <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv>
  7c:	adrp	x1, 0 <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv>
  80:	adrp	x3, 0 <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv>
  84:	add	x0, x0, #0x0
  88:	add	x1, x1, #0x0
  8c:	add	x3, x3, #0x0
  90:	mov	w2, #0x69                  	// #105
  94:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm19AnyCoroIdRetconInst12getPrototypeEv:

0000000000000000 <_ZNK4llvm19AnyCoroIdRetconInst12getPrototypeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w1, #0x3                   	// #3
   c:	bl	0 <_ZNK4llvm19AnyCoroIdRetconInst12getPrototypeEv>
  10:	bl	0 <_ZNK4llvm5Value17stripPointerCastsEv>
  14:	cbz	x0, 28 <_ZNK4llvm19AnyCoroIdRetconInst12getPrototypeEv+0x28>
  18:	ldrb	w8, [x0, #16]
  1c:	cbnz	w8, 48 <_ZNK4llvm19AnyCoroIdRetconInst12getPrototypeEv+0x48>
  20:	ldp	x29, x30, [sp], #16
  24:	ret
  28:	adrp	x0, 0 <_ZNK4llvm19AnyCoroIdRetconInst12getPrototypeEv>
  2c:	adrp	x1, 0 <_ZNK4llvm19AnyCoroIdRetconInst12getPrototypeEv>
  30:	adrp	x3, 0 <_ZNK4llvm19AnyCoroIdRetconInst12getPrototypeEv>
  34:	add	x0, x0, #0x0
  38:	add	x1, x1, #0x0
  3c:	add	x3, x3, #0x0
  40:	mov	w2, #0x69                  	// #105
  44:	bl	0 <__assert_fail>
  48:	adrp	x0, 0 <_ZNK4llvm19AnyCoroIdRetconInst12getPrototypeEv>
  4c:	adrp	x1, 0 <_ZNK4llvm19AnyCoroIdRetconInst12getPrototypeEv>
  50:	adrp	x3, 0 <_ZNK4llvm19AnyCoroIdRetconInst12getPrototypeEv>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x108                 	// #264
  64:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm19AnyCoroIdRetconInst16getAllocFunctionEv:

0000000000000000 <_ZNK4llvm19AnyCoroIdRetconInst16getAllocFunctionEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w1, #0x4                   	// #4
   c:	bl	0 <_ZNK4llvm19AnyCoroIdRetconInst16getAllocFunctionEv>
  10:	bl	0 <_ZNK4llvm5Value17stripPointerCastsEv>
  14:	cbz	x0, 28 <_ZNK4llvm19AnyCoroIdRetconInst16getAllocFunctionEv+0x28>
  18:	ldrb	w8, [x0, #16]
  1c:	cbnz	w8, 48 <_ZNK4llvm19AnyCoroIdRetconInst16getAllocFunctionEv+0x48>
  20:	ldp	x29, x30, [sp], #16
  24:	ret
  28:	adrp	x0, 0 <_ZNK4llvm19AnyCoroIdRetconInst16getAllocFunctionEv>
  2c:	adrp	x1, 0 <_ZNK4llvm19AnyCoroIdRetconInst16getAllocFunctionEv>
  30:	adrp	x3, 0 <_ZNK4llvm19AnyCoroIdRetconInst16getAllocFunctionEv>
  34:	add	x0, x0, #0x0
  38:	add	x1, x1, #0x0
  3c:	add	x3, x3, #0x0
  40:	mov	w2, #0x69                  	// #105
  44:	bl	0 <__assert_fail>
  48:	adrp	x0, 0 <_ZNK4llvm19AnyCoroIdRetconInst16getAllocFunctionEv>
  4c:	adrp	x1, 0 <_ZNK4llvm19AnyCoroIdRetconInst16getAllocFunctionEv>
  50:	adrp	x3, 0 <_ZNK4llvm19AnyCoroIdRetconInst16getAllocFunctionEv>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x108                 	// #264
  64:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm19AnyCoroIdRetconInst18getDeallocFunctionEv:

0000000000000000 <_ZNK4llvm19AnyCoroIdRetconInst18getDeallocFunctionEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w1, #0x5                   	// #5
   c:	bl	0 <_ZNK4llvm19AnyCoroIdRetconInst18getDeallocFunctionEv>
  10:	bl	0 <_ZNK4llvm5Value17stripPointerCastsEv>
  14:	cbz	x0, 28 <_ZNK4llvm19AnyCoroIdRetconInst18getDeallocFunctionEv+0x28>
  18:	ldrb	w8, [x0, #16]
  1c:	cbnz	w8, 48 <_ZNK4llvm19AnyCoroIdRetconInst18getDeallocFunctionEv+0x48>
  20:	ldp	x29, x30, [sp], #16
  24:	ret
  28:	adrp	x0, 0 <_ZNK4llvm19AnyCoroIdRetconInst18getDeallocFunctionEv>
  2c:	adrp	x1, 0 <_ZNK4llvm19AnyCoroIdRetconInst18getDeallocFunctionEv>
  30:	adrp	x3, 0 <_ZNK4llvm19AnyCoroIdRetconInst18getDeallocFunctionEv>
  34:	add	x0, x0, #0x0
  38:	add	x1, x1, #0x0
  3c:	add	x3, x3, #0x0
  40:	mov	w2, #0x69                  	// #105
  44:	bl	0 <__assert_fail>
  48:	adrp	x0, 0 <_ZNK4llvm19AnyCoroIdRetconInst18getDeallocFunctionEv>
  4c:	adrp	x1, 0 <_ZNK4llvm19AnyCoroIdRetconInst18getDeallocFunctionEv>
  50:	adrp	x3, 0 <_ZNK4llvm19AnyCoroIdRetconInst18getDeallocFunctionEv>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x108                 	// #264
  64:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm4coro5Shape20getRetconResultTypesEv:

0000000000000000 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #168]
   c:	sub	w8, w8, #0x1
  10:	cmp	w8, #0x2
  14:	b.cs	70 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv+0x70>  // b.hs, b.nlast
  18:	ldr	x0, [x0]
  1c:	bl	0 <_ZNK4llvm11Instruction11getFunctionEv>
  20:	ldr	x8, [x0, #24]
  24:	cbz	x8, 90 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv+0x90>
  28:	ldrb	w9, [x8, #8]
  2c:	cmp	w9, #0xc
  30:	b.ne	ac <_ZNK4llvm4coro5Shape20getRetconResultTypesEv+0xac>  // b.any
  34:	ldr	x8, [x8, #16]
  38:	ldr	x8, [x8]
  3c:	cbz	x8, cc <_ZNK4llvm4coro5Shape20getRetconResultTypesEv+0xcc>
  40:	ldrb	w9, [x8, #8]
  44:	cmp	w9, #0xd
  48:	b.ne	60 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv+0x60>  // b.any
  4c:	ldr	w9, [x8, #12]
  50:	ldr	x8, [x8, #16]
  54:	sub	x1, x9, #0x1
  58:	add	x0, x8, #0x8
  5c:	b	68 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv+0x68>
  60:	mov	x1, xzr
  64:	mov	x0, xzr
  68:	ldp	x29, x30, [sp], #16
  6c:	ret
  70:	adrp	x0, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  74:	adrp	x1, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  78:	adrp	x3, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  7c:	add	x0, x0, #0x0
  80:	add	x1, x1, #0x0
  84:	add	x3, x3, #0x0
  88:	mov	w2, #0xae                  	// #174
  8c:	bl	0 <__assert_fail>
  90:	adrp	x0, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  94:	adrp	x1, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  98:	adrp	x3, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  9c:	add	x0, x0, #0x0
  a0:	add	x1, x1, #0x0
  a4:	add	x3, x3, #0x0
  a8:	b	e4 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv+0xe4>
  ac:	adrp	x0, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  b0:	adrp	x1, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  b4:	adrp	x3, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  b8:	add	x0, x0, #0x0
  bc:	add	x1, x1, #0x0
  c0:	add	x3, x3, #0x0
  c4:	mov	w2, #0x108                 	// #264
  c8:	bl	0 <__assert_fail>
  cc:	adrp	x0, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  d0:	adrp	x1, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  d4:	adrp	x3, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  d8:	add	x0, x0, #0x0
  dc:	add	x1, x1, #0x0
  e0:	add	x3, x3, #0x0
  e4:	mov	w2, #0x69                  	// #105
  e8:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm4coro5Shape20getRetconResumeTypesEv:

0000000000000000 <_ZNK4llvm4coro5Shape20getRetconResumeTypesEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #168]
   c:	sub	w8, w8, #0x1
  10:	cmp	w8, #0x2
  14:	b.cs	54 <_ZNK4llvm4coro5Shape20getRetconResumeTypesEv+0x54>  // b.hs, b.nlast
  18:	ldr	x8, [x0, #200]
  1c:	ldr	x8, [x8, #24]
  20:	cbz	x8, 74 <_ZNK4llvm4coro5Shape20getRetconResumeTypesEv+0x74>
  24:	ldrb	w9, [x8, #8]
  28:	cmp	w9, #0xc
  2c:	b.ne	94 <_ZNK4llvm4coro5Shape20getRetconResumeTypesEv+0x94>  // b.any
  30:	ldr	w9, [x8, #12]
  34:	ldr	x8, [x8, #16]
  38:	lsl	x9, x9, #3
  3c:	sub	x9, x9, #0x8
  40:	asr	x9, x9, #3
  44:	sub	x1, x9, #0x1
  48:	add	x0, x8, #0x10
  4c:	ldp	x29, x30, [sp], #16
  50:	ret
  54:	adrp	x0, 0 <_ZNK4llvm4coro5Shape20getRetconResumeTypesEv>
  58:	adrp	x1, 0 <_ZNK4llvm4coro5Shape20getRetconResumeTypesEv>
  5c:	adrp	x3, 0 <_ZNK4llvm4coro5Shape20getRetconResumeTypesEv>
  60:	add	x0, x0, #0x0
  64:	add	x1, x1, #0x0
  68:	add	x3, x3, #0x0
  6c:	mov	w2, #0xbb                  	// #187
  70:	bl	0 <__assert_fail>
  74:	adrp	x0, 0 <_ZNK4llvm4coro5Shape20getRetconResumeTypesEv>
  78:	adrp	x1, 0 <_ZNK4llvm4coro5Shape20getRetconResumeTypesEv>
  7c:	adrp	x3, 0 <_ZNK4llvm4coro5Shape20getRetconResumeTypesEv>
  80:	add	x0, x0, #0x0
  84:	add	x1, x1, #0x0
  88:	add	x3, x3, #0x0
  8c:	mov	w2, #0x69                  	// #105
  90:	bl	0 <__assert_fail>
  94:	adrp	x0, 0 <_ZNK4llvm4coro5Shape20getRetconResumeTypesEv>
  98:	adrp	x1, 0 <_ZNK4llvm4coro5Shape20getRetconResumeTypesEv>
  9c:	adrp	x3, 0 <_ZNK4llvm4coro5Shape20getRetconResumeTypesEv>
  a0:	add	x0, x0, #0x0
  a4:	add	x1, x1, #0x0
  a8:	add	x3, x3, #0x0
  ac:	mov	w2, #0x108                 	// #264
  b0:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8Function15getFunctionTypeEv:

0000000000000000 <_ZNK4llvm8Function15getFunctionTypeEv>:
   0:	ldr	x0, [x0, #24]
   4:	b	0 <_ZNK4llvm8Function15getFunctionTypeEv>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE13CreateIntCastEPNS_5ValueEPNS_4TypeEbRKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE13CreateIntCastEPNS_5ValueEPNS_4TypeEbRKNS_5TwineE>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	str	x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	ldr	x8, [x1]
  1c:	mov	x19, x1
  20:	cmp	x8, x2
  24:	b.eq	90 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE13CreateIntCastEPNS_5ValueEPNS_4TypeEbRKNS_5TwineE+0x90>  // b.none
  28:	ldrb	w8, [x19, #16]
  2c:	mov	w23, w3
  30:	mov	x22, x2
  34:	cmp	w8, #0x10
  38:	b.ls	ac <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE13CreateIntCastEPNS_5ValueEPNS_4TypeEbRKNS_5TwineE+0xac>  // b.plast
  3c:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE13CreateIntCastEPNS_5ValueEPNS_4TypeEbRKNS_5TwineE>
  40:	mov	x21, x0
  44:	add	x1, x1, #0x0
  48:	add	x0, sp, #0x8
  4c:	mov	x20, x4
  50:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE13CreateIntCastEPNS_5ValueEPNS_4TypeEbRKNS_5TwineE>
  54:	and	w2, w23, #0x1
  58:	add	x3, sp, #0x8
  5c:	mov	x0, x19
  60:	mov	x1, x22
  64:	mov	x4, xzr
  68:	bl	0 <_ZN4llvm8CastInst17CreateIntegerCastEPNS_5ValueEPNS_4TypeEbRKNS_5TwineEPNS_11InstructionE>
  6c:	ldp	x3, x4, [x21, #8]
  70:	mov	x19, x0
  74:	mov	x0, x21
  78:	mov	x1, x19
  7c:	mov	x2, x20
  80:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE13CreateIntCastEPNS_5ValueEPNS_4TypeEbRKNS_5TwineE>
  84:	mov	x0, x21
  88:	mov	x1, x19
  8c:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE13CreateIntCastEPNS_5ValueEPNS_4TypeEbRKNS_5TwineE>
  90:	mov	x0, x19
  94:	ldp	x20, x19, [sp, #80]
  98:	ldp	x22, x21, [sp, #64]
  9c:	ldr	x23, [sp, #48]
  a0:	ldp	x29, x30, [sp, #32]
  a4:	add	sp, sp, #0x60
  a8:	ret
  ac:	and	w2, w23, #0x1
  b0:	mov	x0, x19
  b4:	mov	x1, x22
  b8:	ldp	x20, x19, [sp, #80]
  bc:	ldp	x22, x21, [sp, #64]
  c0:	ldr	x23, [sp, #48]
  c4:	ldp	x29, x30, [sp, #32]
  c8:	add	sp, sp, #0x60
  cc:	b	0 <_ZN4llvm12ConstantExpr14getIntegerCastEPNS_8ConstantEPNS_4TypeEb>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x1]
   c:	ldrb	w9, [x8, #8]
  10:	cmp	w9, #0xf
  14:	b.ne	4c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x4c>  // b.any
  18:	ldr	x8, [x8, #16]
  1c:	mov	x6, x5
  20:	mov	x5, x4
  24:	mov	x4, x3
  28:	mov	x3, x2
  2c:	mov	x2, x1
  30:	ldr	x1, [x8]
  34:	cbz	x1, 6c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x6c>
  38:	ldrb	w8, [x1, #8]
  3c:	cmp	w8, #0xc
  40:	b.ne	8c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x8c>  // b.any
  44:	ldp	x29, x30, [sp], #16
  48:	b	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
  4c:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
  50:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
  54:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
  58:	add	x0, x0, #0x0
  5c:	add	x1, x1, #0x0
  60:	add	x3, x3, #0x0
  64:	mov	w2, #0x17e                 	// #382
  68:	bl	0 <__assert_fail>
  6c:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
  70:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
  74:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
  78:	add	x0, x0, #0x0
  7c:	add	x1, x1, #0x0
  80:	add	x3, x3, #0x0
  84:	mov	w2, #0x69                  	// #105
  88:	bl	0 <__assert_fail>
  8c:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
  90:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
  94:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
  98:	add	x0, x0, #0x0
  9c:	add	x1, x1, #0x0
  a0:	add	x3, x3, #0x0
  a4:	mov	w2, #0x108                 	// #264
  a8:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase13getArgOperandEj:

0000000000000000 <_ZNK4llvm8CallBase13getArgOperandEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	w19, w1
  10:	mov	x20, x0
  14:	bl	0 <_ZNK4llvm8CallBase13getArgOperandEj>
  18:	cmp	w0, w19
  1c:	b.ls	50 <_ZNK4llvm8CallBase13getArgOperandEj+0x50>  // b.plast
  20:	ldr	w8, [x20, #20]
  24:	and	x8, x8, #0xfffffff
  28:	cmp	w8, w19
  2c:	b.ls	70 <_ZNK4llvm8CallBase13getArgOperandEj+0x70>  // b.plast
  30:	mov	w9, #0x18                  	// #24
  34:	mneg	x8, x8, x9
  38:	add	x8, x20, x8
  3c:	umull	x9, w19, w9
  40:	ldr	x0, [x8, x9]
  44:	ldp	x20, x19, [sp, #16]
  48:	ldp	x29, x30, [sp], #32
  4c:	ret
  50:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  54:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  58:	adrp	x3, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  5c:	add	x0, x0, #0x0
  60:	add	x1, x1, #0x0
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x4df                 	// #1247
  6c:	bl	0 <__assert_fail>
  70:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  74:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  78:	adrp	x3, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  7c:	add	x0, x0, #0x0
  80:	add	x1, x1, #0x0
  84:	add	x3, x3, #0x0
  88:	mov	w2, #0x86a                 	// #2154
  8c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x21, x3
  1c:	add	w25, w21, #0x1
  20:	mov	x23, x1
  24:	mov	x24, x0
  28:	mov	w0, #0x48                  	// #72
  2c:	mov	w1, w25
  30:	mov	x19, x5
  34:	mov	x20, x4
  38:	mov	x22, x2
  3c:	bl	0 <_ZN4llvm4UsernwEmj>
  40:	ldr	x8, [x24, #16]
  44:	mov	w9, #0x18                  	// #24
  48:	mov	w2, #0x38                  	// #56
  4c:	mov	w4, w25
  50:	ldr	x1, [x8]
  54:	mvn	x8, x21
  58:	madd	x3, x8, x9, x0
  5c:	mov	x5, x19
  60:	mov	x26, x0
  64:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
  68:	mov	x0, x26
  6c:	mov	x1, x24
  70:	mov	x2, x23
  74:	mov	x3, x22
  78:	mov	x4, x21
  7c:	mov	x5, xzr
  80:	mov	x6, xzr
  84:	mov	x7, x20
  88:	str	xzr, [x26, #56]
  8c:	bl	0 <_ZN4llvm8CallInst4initEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineE>
  90:	mov	x0, x26
  94:	ldp	x20, x19, [sp, #64]
  98:	ldp	x22, x21, [sp, #48]
  9c:	ldp	x24, x23, [sp, #32]
  a0:	ldp	x26, x25, [sp, #16]
  a4:	ldp	x29, x30, [sp], #80
  a8:	ret

Disassembly of section .text._ZN4llvm4castINS_12FunctionTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm4castINS_12FunctionTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x0, 20 <_ZN4llvm4castINS_12FunctionTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x20>
   c:	ldrb	w8, [x0, #8]
  10:	cmp	w8, #0xc
  14:	b.ne	40 <_ZN4llvm4castINS_12FunctionTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x40>  // b.any
  18:	ldp	x29, x30, [sp], #16
  1c:	ret
  20:	adrp	x0, 0 <_ZN4llvm4castINS_12FunctionTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  24:	adrp	x1, 0 <_ZN4llvm4castINS_12FunctionTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  28:	adrp	x3, 0 <_ZN4llvm4castINS_12FunctionTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  2c:	add	x0, x0, #0x0
  30:	add	x1, x1, #0x0
  34:	add	x3, x3, #0x0
  38:	mov	w2, #0x69                  	// #105
  3c:	bl	0 <__assert_fail>
  40:	adrp	x0, 0 <_ZN4llvm4castINS_12FunctionTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  44:	adrp	x1, 0 <_ZN4llvm4castINS_12FunctionTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  48:	adrp	x3, 0 <_ZN4llvm4castINS_12FunctionTypeENS_4TypeEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x108                 	// #264
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm5Twine7isValidEv:

0000000000000000 <_ZNK4llvm5Twine7isValidEv>:
   0:	ldrb	w9, [x0, #16]
   4:	ldrb	w8, [x0, #17]
   8:	cmp	w9, #0x1
   c:	b.hi	1c <_ZNK4llvm5Twine7isValidEv+0x1c>  // b.pmore
  10:	cmp	w8, #0x1
  14:	b.ne	78 <_ZNK4llvm5Twine7isValidEv+0x78>  // b.any
  18:	b	80 <_ZNK4llvm5Twine7isValidEv+0x80>
  1c:	cbz	w8, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  20:	cmp	w8, #0x1
  24:	b.ne	38 <_ZNK4llvm5Twine7isValidEv+0x38>  // b.any
  28:	cmp	w9, #0x2
  2c:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  30:	mov	w8, #0x1                   	// #1
  34:	b	40 <_ZNK4llvm5Twine7isValidEv+0x40>
  38:	cmp	w9, #0x2
  3c:	b.ne	58 <_ZNK4llvm5Twine7isValidEv+0x58>  // b.any
  40:	ldr	x9, [x0]
  44:	ldrb	w10, [x9, #16]
  48:	cbz	w10, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  4c:	ldrb	w9, [x9, #17]
  50:	cmp	w9, #0x1
  54:	b.eq	78 <_ZNK4llvm5Twine7isValidEv+0x78>  // b.none
  58:	cmp	w8, #0x2
  5c:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  60:	ldr	x8, [x0, #8]
  64:	ldrb	w9, [x8, #16]
  68:	cbz	w9, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  6c:	ldrb	w8, [x8, #17]
  70:	cmp	w8, #0x1
  74:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  78:	mov	w0, wzr
  7c:	ret
  80:	mov	w0, #0x1                   	// #1
  84:	ret

Disassembly of section .text._ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_:

0000000000000000 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	str	x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	mov	x19, x0
  14:	str	x1, [x29, #24]
  18:	str	x2, [sp, #8]
  1c:	cbz	x1, 44 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0x44>
  20:	ldur	x8, [x1, #-24]
  24:	cbz	x8, 44 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0x44>
  28:	ldrb	w9, [x8, #16]
  2c:	cbnz	w9, 44 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0x44>
  30:	ldrb	w9, [x8, #33]
  34:	tbz	w9, #5, 44 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0x44>
  38:	ldr	w0, [x8, #36]
  3c:	bl	0 <_ZN4llvm9Intrinsic6isLeafEj>
  40:	tbnz	w0, #0, 74 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0x74>
  44:	add	x0, x19, #0x8
  48:	add	x1, x29, #0x18
  4c:	add	x2, sp, #0x8
  50:	bl	0 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_>
  54:	ldr	x8, [sp, #8]
  58:	ldr	x19, [sp, #32]
  5c:	ldr	w9, [x8, #32]
  60:	add	w9, w9, #0x1
  64:	str	w9, [x8, #32]
  68:	ldp	x29, x30, [sp, #16]
  6c:	add	sp, sp, #0x30
  70:	ret
  74:	adrp	x0, 0 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_>
  78:	adrp	x1, 0 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_>
  7c:	adrp	x3, 0 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_>
  80:	add	x0, x0, #0x0
  84:	add	x1, x1, #0x0
  88:	add	x3, x3, #0x0
  8c:	mov	w2, #0xeb                  	// #235
  90:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_:

0000000000000000 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	add	x8, x1, #0x48
  10:	str	x8, [x0]
  14:	ldr	x9, [x1, #80]
  18:	mov	x20, x0
  1c:	str	x9, [x20, #8]!
  20:	cmp	x9, x8
  24:	str	xzr, [x20, #8]
  28:	b.eq	6c <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x6c>  // b.none
  2c:	mov	x19, x0
  30:	mov	x0, x20
  34:	bl	0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  38:	ldr	x8, [x0, #48]
  3c:	mov	x0, x20
  40:	str	x8, [x19, #16]
  44:	bl	0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  48:	ldr	x8, [x19, #16]
  4c:	add	x9, x0, #0x28
  50:	cmp	x8, x9
  54:	b.ne	6c <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x6c>  // b.any
  58:	ldp	x9, x8, [x19]
  5c:	ldr	x8, [x8, #8]
  60:	cmp	x9, x8
  64:	str	x8, [x19, #8]
  68:	b.ne	30 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x30>  // b.any
  6c:	ldp	x20, x19, [sp, #16]
  70:	ldp	x29, x30, [sp], #32
  74:	ret

Disassembly of section .text._ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv:

0000000000000000 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	ldrb	w9, [x8]
  10:	tbnz	w9, #2, 28 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv+0x28>
  14:	sub	x9, x8, #0x18
  18:	cmp	x8, #0x0
  1c:	csel	x0, xzr, x9, eq  // eq = none
  20:	ldp	x29, x30, [sp], #16
  24:	ret
  28:	adrp	x0, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv>
  2c:	adrp	x1, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv>
  30:	adrp	x3, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv>
  34:	add	x0, x0, #0x0
  38:	add	x1, x1, #0x0
  3c:	add	x3, x3, #0x0
  40:	mov	w2, #0x8b                  	// #139
  44:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE12emplace_backIJRPNS1_8CallBaseERS4_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE12emplace_backIJRPNS1_8CallBaseERS4_EEEvDpOT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	x21, x8, [x0, #8]
  14:	mov	x19, x2
  18:	mov	x20, x0
  1c:	mov	x2, x1
  20:	cmp	x21, x8
  24:	b.eq	8c <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE12emplace_backIJRPNS1_8CallBaseERS4_EEEvDpOT_+0x8c>  // b.none
  28:	ldr	x9, [x2]
  2c:	mov	w8, #0x6                   	// #6
  30:	stp	x8, xzr, [x21]
  34:	add	x8, x9, #0x10
  38:	cmp	x8, #0x10
  3c:	str	x9, [x21, #16]
  40:	b.hi	60 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE12emplace_backIJRPNS1_8CallBaseERS4_EEEvDpOT_+0x60>  // b.pmore
  44:	mov	w9, #0x1                   	// #1
  48:	lsl	x8, x9, x8
  4c:	mov	w9, #0x101                 	// #257
  50:	movk	w9, #0x1, lsl #16
  54:	tst	x8, x9
  58:	mov	x8, x21
  5c:	b.ne	6c <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE12emplace_backIJRPNS1_8CallBaseERS4_EEEvDpOT_+0x6c>  // b.any
  60:	mov	x0, x21
  64:	bl	0 <_ZN4llvm15ValueHandleBase12AddToUseListEv>
  68:	ldr	x8, [x20, #8]
  6c:	ldr	x9, [x19]
  70:	add	x8, x8, #0x20
  74:	str	x9, [x21, #24]
  78:	str	x8, [x20, #8]
  7c:	ldp	x20, x19, [sp, #32]
  80:	ldr	x21, [sp, #16]
  84:	ldp	x29, x30, [sp], #48
  88:	ret
  8c:	mov	x0, x20
  90:	mov	x1, x21
  94:	mov	x3, x19
  98:	ldp	x20, x19, [sp, #32]
  9c:	ldr	x21, [sp, #16]
  a0:	ldp	x29, x30, [sp], #48
  a4:	b	0 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE12emplace_backIJRPNS1_8CallBaseERS4_EEEvDpOT_>

Disassembly of section .text._ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	stp	x28, x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	mov	x25, x2
  20:	adrp	x2, 0 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
  24:	mov	x23, x1
  28:	add	x2, x2, #0x0
  2c:	mov	w1, #0x1                   	// #1
  30:	mov	x24, x3
  34:	mov	x19, x0
  38:	bl	0 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
  3c:	ldp	x21, x26, [x19]
  40:	mov	x20, x0
  44:	mov	x0, x19
  48:	mov	x1, x20
  4c:	sub	x28, x23, x21
  50:	asr	x27, x28, #5
  54:	bl	0 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
  58:	ldr	x9, [x25]
  5c:	mov	x22, x0
  60:	add	x0, x0, x28
  64:	mov	w8, #0x6                   	// #6
  68:	stp	x8, xzr, [x0]
  6c:	add	x8, x9, #0x10
  70:	cmp	x8, #0x10
  74:	str	x9, [x0, #16]
  78:	b.hi	94 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x94>  // b.pmore
  7c:	mov	w9, #0x1                   	// #1
  80:	lsl	x8, x9, x8
  84:	mov	w9, #0x101                 	// #257
  88:	movk	w9, #0x1, lsl #16
  8c:	tst	x8, x9
  90:	b.ne	98 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x98>  // b.any
  94:	bl	0 <_ZN4llvm15ValueHandleBase12AddToUseListEv>
  98:	ldr	x8, [x24]
  9c:	add	x9, x22, x27, lsl #5
  a0:	cmp	x21, x23
  a4:	mov	x24, x22
  a8:	str	x8, [x9, #24]
  ac:	b.eq	e8 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xe8>  // b.none
  b0:	mov	x24, x22
  b4:	mov	x25, x21
  b8:	mov	x0, x24
  bc:	mov	x1, x25
  c0:	bl	0 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
  c4:	add	x25, x25, #0x20
  c8:	cmp	x23, x25
  cc:	add	x24, x24, #0x20
  d0:	b.ne	b8 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xb8>  // b.any
  d4:	b	e8 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xe8>
  d8:	mov	x0, x24
  dc:	mov	x1, x23
  e0:	bl	0 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
  e4:	add	x23, x23, #0x20
  e8:	cmp	x26, x23
  ec:	add	x24, x24, #0x20
  f0:	b.ne	d8 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xd8>  // b.any
  f4:	cmp	x21, x26
  f8:	b.eq	13c <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x13c>  // b.none
  fc:	mov	w27, #0x101                 	// #257
 100:	mov	w25, #0x1                   	// #1
 104:	movk	w27, #0x1, lsl #16
 108:	mov	x23, x21
 10c:	ldr	x8, [x23, #16]
 110:	add	x8, x8, #0x10
 114:	cmp	x8, #0x10
 118:	b.hi	128 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x128>  // b.pmore
 11c:	lsl	x8, x25, x8
 120:	tst	x8, x27
 124:	b.ne	130 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x130>  // b.any
 128:	mov	x0, x23
 12c:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 130:	add	x23, x23, #0x20
 134:	cmp	x26, x23
 138:	b.ne	10c <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x10c>  // b.any
 13c:	cbz	x21, 148 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x148>
 140:	mov	x0, x21
 144:	bl	0 <_ZdlPv>
 148:	add	x8, x22, x20, lsl #5
 14c:	stp	x22, x24, [x19]
 150:	str	x8, [x19, #16]
 154:	ldp	x20, x19, [sp, #80]
 158:	ldp	x22, x21, [sp, #64]
 15c:	ldp	x24, x23, [sp, #48]
 160:	ldp	x26, x25, [sp, #32]
 164:	ldp	x28, x27, [sp, #16]
 168:	ldp	x29, x30, [sp], #96
 16c:	ret

Disassembly of section .text._ZNKSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE12_M_check_lenEmPKc:

0000000000000000 <_ZNKSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE12_M_check_lenEmPKc>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x9, x8, [x0]
   c:	sub	x9, x8, x9
  10:	mov	x8, #0x3ffffffffffffff     	// #288230376151711743
  14:	sub	x10, x8, x9, asr #5
  18:	cmp	x10, x1
  1c:	b.cc	54 <_ZNKSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE12_M_check_lenEmPKc+0x54>  // b.lo, b.ul, b.last
  20:	asr	x9, x9, #5
  24:	cmp	x9, x1
  28:	csel	x10, x1, x9, cc  // cc = lo, ul, last
  2c:	adds	x9, x10, x9
  30:	lsr	x11, x9, #58
  34:	cset	w10, cs  // cs = hs, nlast
  38:	cmp	x11, #0x0
  3c:	cset	w11, ne  // ne = any
  40:	orr	w10, w10, w11
  44:	cmp	w10, #0x0
  48:	csel	x0, x8, x9, ne  // ne = any
  4c:	ldp	x29, x30, [sp], #16
  50:	ret
  54:	mov	x0, x2
  58:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt12_Vector_baseISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE11_M_allocateEm:

0000000000000000 <_ZNSt12_Vector_baseISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE11_M_allocateEm>:
   0:	cbz	x1, 14 <_ZNSt12_Vector_baseISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE11_M_allocateEm+0x14>
   4:	lsr	x8, x1, #58
   8:	cbnz	x8, 1c <_ZNSt12_Vector_baseISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE11_M_allocateEm+0x1c>
   c:	lsl	x0, x1, #5
  10:	b	0 <_Znwm>
  14:	mov	x0, xzr
  18:	ret
  1c:	stp	x29, x30, [sp, #-16]!
  20:	mov	x29, sp
  24:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZNSt4pairIN4llvm14WeakTrackingVHEPNS0_13CallGraphNodeEEC2ERKS4_:

0000000000000000 <_ZNSt4pairIN4llvm14WeakTrackingVHEPNS0_13CallGraphNodeEEC2ERKS4_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	w8, #0x6                   	// #6
  10:	stp	x8, xzr, [x0]
  14:	ldr	x9, [x1, #16]
  18:	mov	x20, x1
  1c:	mov	x19, x0
  20:	add	x8, x9, #0x10
  24:	cmp	x8, #0x10
  28:	str	x9, [x0, #16]
  2c:	b.hi	48 <_ZNSt4pairIN4llvm14WeakTrackingVHEPNS0_13CallGraphNodeEEC2ERKS4_+0x48>  // b.pmore
  30:	mov	w9, #0x1                   	// #1
  34:	lsl	x8, x9, x8
  38:	mov	w9, #0x101                 	// #257
  3c:	movk	w9, #0x1, lsl #16
  40:	tst	x8, x9
  44:	b.ne	58 <_ZNSt4pairIN4llvm14WeakTrackingVHEPNS0_13CallGraphNodeEEC2ERKS4_+0x58>  // b.any
  48:	ldr	x8, [x20]
  4c:	mov	x0, x19
  50:	and	x1, x8, #0xfffffffffffffff8
  54:	bl	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
  58:	ldr	x8, [x20, #24]
  5c:	str	x8, [x19, #24]
  60:	ldp	x20, x19, [sp, #16]
  64:	ldp	x29, x30, [sp], #32
  68:	ret

Disassembly of section .text._ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag:

0000000000000000 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	x8, [x0, #16]
  1c:	ldr	x25, [x0]
  20:	sub	x24, x2, x1
  24:	asr	x20, x24, #3
  28:	mov	x21, x1
  2c:	sub	x8, x8, x25
  30:	mov	x19, x0
  34:	cmp	x20, x8, asr #3
  38:	b.ls	84 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x84>  // b.plast
  3c:	lsr	x8, x20, #60
  40:	cbnz	x8, 114 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x114>
  44:	mov	x0, x19
  48:	mov	x1, x20
  4c:	bl	0 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag>
  50:	mov	x22, x0
  54:	cbz	x24, 68 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x68>
  58:	mov	x0, x22
  5c:	mov	x1, x21
  60:	mov	x2, x24
  64:	bl	0 <memmove>
  68:	ldr	x0, [x19]
  6c:	cbz	x0, 74 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x74>
  70:	bl	0 <_ZdlPv>
  74:	add	x8, x22, x20, lsl #3
  78:	stp	x22, x8, [x19]
  7c:	str	x8, [x19, #16]
  80:	b	fc <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xfc>
  84:	ldr	x22, [x19, #8]
  88:	mov	x23, x2
  8c:	sub	x2, x22, x25
  90:	asr	x8, x2, #3
  94:	cmp	x8, x20
  98:	b.cs	d4 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xd4>  // b.hs, b.nlast
  9c:	add	x20, x21, x8, lsl #3
  a0:	cbz	x2, b4 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xb4>
  a4:	mov	x0, x25
  a8:	mov	x1, x21
  ac:	bl	0 <memmove>
  b0:	ldr	x22, [x19, #8]
  b4:	subs	x2, x23, x20
  b8:	asr	x21, x2, #3
  bc:	b.eq	cc <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xcc>  // b.none
  c0:	mov	x0, x22
  c4:	mov	x1, x20
  c8:	bl	0 <memmove>
  cc:	add	x8, x22, x21, lsl #3
  d0:	b	f8 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xf8>
  d4:	cbz	x24, ec <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xec>
  d8:	mov	x0, x25
  dc:	mov	x1, x21
  e0:	mov	x2, x24
  e4:	bl	0 <memmove>
  e8:	ldr	x22, [x19, #8]
  ec:	add	x8, x25, x20, lsl #3
  f0:	cmp	x22, x8
  f4:	b.eq	fc <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xfc>  // b.none
  f8:	str	x8, [x19, #8]
  fc:	ldp	x20, x19, [sp, #64]
 100:	ldp	x22, x21, [sp, #48]
 104:	ldp	x24, x23, [sp, #32]
 108:	ldr	x25, [sp, #16]
 10c:	ldp	x29, x30, [sp], #80
 110:	ret
 114:	adrp	x0, 0 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag>
 118:	add	x0, x0, #0x0
 11c:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt12_Vector_baseIPN4llvm13CallGraphNodeESaIS2_EE11_M_allocateEm:

0000000000000000 <_ZNSt12_Vector_baseIPN4llvm13CallGraphNodeESaIS2_EE11_M_allocateEm>:
   0:	cbz	x1, 14 <_ZNSt12_Vector_baseIPN4llvm13CallGraphNodeESaIS2_EE11_M_allocateEm+0x14>
   4:	lsr	x8, x1, #60
   8:	cbnz	x8, 1c <_ZNSt12_Vector_baseIPN4llvm13CallGraphNodeESaIS2_EE11_M_allocateEm+0x1c>
   c:	lsl	x0, x1, #3
  10:	b	0 <_Znwm>
  14:	mov	x0, xzr
  18:	ret
  1c:	stp	x29, x30, [sp, #-16]!
  20:	mov	x29, sp
  24:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZN4llvm13isa_impl_wrapINS_13AnyCoroIdInstEPKNS_5ValueES4_E4doitERKS4_:

0000000000000000 <_ZN4llvm13isa_impl_wrapINS_13AnyCoroIdInstEPKNS_5ValueES4_E4doitERKS4_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0]
   c:	cbz	x0, 18 <_ZN4llvm13isa_impl_wrapINS_13AnyCoroIdInstEPKNS_5ValueES4_E4doitERKS4_+0x18>
  10:	ldp	x29, x30, [sp], #16
  14:	b	0 <_ZN4llvm13isa_impl_wrapINS_13AnyCoroIdInstEPKNS_5ValueES4_E4doitERKS4_>
  18:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_13AnyCoroIdInstEPKNS_5ValueES4_E4doitERKS4_>
  1c:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_13AnyCoroIdInstEPKNS_5ValueES4_E4doitERKS4_>
  20:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_13AnyCoroIdInstEPKNS_5ValueES4_E4doitERKS4_>
  24:	add	x0, x0, #0x0
  28:	add	x1, x1, #0x0
  2c:	add	x3, x3, #0x0
  30:	mov	w2, #0x69                  	// #105
  34:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13AnyCoroIdInst7classofEPKNS_5ValueE:

0000000000000000 <_ZN4llvm13AnyCoroIdInst7classofEPKNS_5ValueE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x0, 5c <_ZN4llvm13AnyCoroIdInst7classofEPKNS_5ValueE+0x5c>
   c:	ldrb	w8, [x0, #16]
  10:	cmp	w8, #0x50
  14:	b.ne	30 <_ZN4llvm13AnyCoroIdInst7classofEPKNS_5ValueE+0x30>  // b.any
  18:	ldur	x8, [x0, #-24]
  1c:	cbz	x8, 30 <_ZN4llvm13AnyCoroIdInst7classofEPKNS_5ValueE+0x30>
  20:	ldrb	w9, [x8, #16]
  24:	cbnz	w9, 30 <_ZN4llvm13AnyCoroIdInst7classofEPKNS_5ValueE+0x30>
  28:	ldrb	w9, [x8, #33]
  2c:	tbnz	w9, #5, 3c <_ZN4llvm13AnyCoroIdInst7classofEPKNS_5ValueE+0x3c>
  30:	mov	w0, wzr
  34:	ldp	x29, x30, [sp], #16
  38:	ret
  3c:	ldr	w8, [x8, #36]
  40:	orr	w9, w8, #0x1
  44:	cmp	w9, #0x19
  48:	cset	w9, eq  // eq = none
  4c:	cmp	w8, #0x1a
  50:	cset	w8, eq  // eq = none
  54:	orr	w0, w8, w9
  58:	b	34 <_ZN4llvm13AnyCoroIdInst7classofEPKNS_5ValueE+0x34>
  5c:	adrp	x0, 0 <_ZN4llvm13AnyCoroIdInst7classofEPKNS_5ValueE>
  60:	adrp	x1, 0 <_ZN4llvm13AnyCoroIdInst7classofEPKNS_5ValueE>
  64:	adrp	x3, 0 <_ZN4llvm13AnyCoroIdInst7classofEPKNS_5ValueE>
  68:	add	x0, x0, #0x0
  6c:	add	x1, x1, #0x0
  70:	add	x3, x3, #0x0
  74:	mov	w2, #0x69                  	// #105
  78:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10CoroIdInst10getRawInfoEv:

0000000000000000 <_ZNK4llvm10CoroIdInst10getRawInfoEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w1, #0x3                   	// #3
   c:	bl	0 <_ZNK4llvm10CoroIdInst10getRawInfoEv>
  10:	bl	0 <_ZNK4llvm5Value17stripPointerCastsEv>
  14:	cbz	x0, 2c <_ZNK4llvm10CoroIdInst10getRawInfoEv+0x2c>
  18:	ldrb	w8, [x0, #16]
  1c:	cmp	w8, #0x11
  20:	b.cs	4c <_ZNK4llvm10CoroIdInst10getRawInfoEv+0x4c>  // b.hs, b.nlast
  24:	ldp	x29, x30, [sp], #16
  28:	ret
  2c:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst10getRawInfoEv>
  30:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst10getRawInfoEv>
  34:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst10getRawInfoEv>
  38:	add	x0, x0, #0x0
  3c:	add	x1, x1, #0x0
  40:	add	x3, x3, #0x0
  44:	mov	w2, #0x69                  	// #105
  48:	bl	0 <__assert_fail>
  4c:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst10getRawInfoEv>
  50:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst10getRawInfoEv>
  54:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst10getRawInfoEv>
  58:	add	x0, x0, #0x0
  5c:	add	x1, x1, #0x0
  60:	add	x3, x3, #0x0
  64:	mov	w2, #0x108                 	// #264
  68:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm11CoroEndInst8isUnwindEv:

0000000000000000 <_ZNK4llvm11CoroEndInst8isUnwindEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w1, #0x1                   	// #1
   c:	bl	0 <_ZNK4llvm11CoroEndInst8isUnwindEv>
  10:	cbz	x0, 28 <_ZNK4llvm11CoroEndInst8isUnwindEv+0x28>
  14:	ldrb	w8, [x0, #16]
  18:	cmp	w8, #0x11
  1c:	b.cs	48 <_ZNK4llvm11CoroEndInst8isUnwindEv+0x48>  // b.hs, b.nlast
  20:	ldp	x29, x30, [sp], #16
  24:	b	0 <_ZNK4llvm8Constant10isOneValueEv>
  28:	adrp	x0, 0 <_ZNK4llvm11CoroEndInst8isUnwindEv>
  2c:	adrp	x1, 0 <_ZNK4llvm11CoroEndInst8isUnwindEv>
  30:	adrp	x3, 0 <_ZNK4llvm11CoroEndInst8isUnwindEv>
  34:	add	x0, x0, #0x0
  38:	add	x1, x1, #0x0
  3c:	add	x3, x3, #0x0
  40:	mov	w2, #0x69                  	// #105
  44:	bl	0 <__assert_fail>
  48:	adrp	x0, 0 <_ZNK4llvm11CoroEndInst8isUnwindEv>
  4c:	adrp	x1, 0 <_ZNK4llvm11CoroEndInst8isUnwindEv>
  50:	adrp	x3, 0 <_ZNK4llvm11CoroEndInst8isUnwindEv>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x108                 	// #264
  64:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13isa_impl_wrapINS_15CoroSuspendInstEPKNS_18AnyCoroSuspendInstES4_E4doitERKS4_:

0000000000000000 <_ZN4llvm13isa_impl_wrapINS_15CoroSuspendInstEPKNS_18AnyCoroSuspendInstES4_E4doitERKS4_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	cbz	x8, 34 <_ZN4llvm13isa_impl_wrapINS_15CoroSuspendInstEPKNS_18AnyCoroSuspendInstES4_E4doitERKS4_+0x34>
  10:	ldur	x8, [x8, #-24]
  14:	ldrb	w9, [x8, #16]
  18:	cmp	w9, #0x0
  1c:	csel	x8, x8, xzr, eq  // eq = none
  20:	ldr	w8, [x8, #36]
  24:	cmp	w8, #0x23
  28:	cset	w0, eq  // eq = none
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_15CoroSuspendInstEPKNS_18AnyCoroSuspendInstES4_E4doitERKS4_>
  38:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_15CoroSuspendInstEPKNS_18AnyCoroSuspendInstES4_E4doitERKS4_>
  3c:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_15CoroSuspendInstEPKNS_18AnyCoroSuspendInstES4_E4doitERKS4_>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x69                  	// #105
  50:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE:

0000000000000000 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x2
  14:	mov	w20, w1
  18:	mov	x21, x0
  1c:	bl	0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
  20:	cmp	w0, w20
  24:	b.ls	a0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0xa0>  // b.plast
  28:	ldr	w8, [x21, #20]
  2c:	and	x8, x8, #0xfffffff
  30:	cmp	w8, w20
  34:	b.ls	c0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0xc0>  // b.plast
  38:	mov	w9, #0x18                  	// #24
  3c:	mneg	x8, x8, x9
  40:	add	x8, x21, x8
  44:	umaddl	x0, w20, w9, x8
  48:	ldr	x8, [x0]
  4c:	cbz	x8, 74 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x74>
  50:	ldp	x9, x8, [x0, #8]
  54:	and	x8, x8, #0xfffffffffffffffc
  58:	str	x9, [x8]
  5c:	ldr	x9, [x0, #8]
  60:	cbz	x9, 74 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x74>
  64:	ldr	x10, [x9, #16]
  68:	and	x10, x10, #0x3
  6c:	orr	x8, x10, x8
  70:	str	x8, [x9, #16]
  74:	str	x19, [x0]
  78:	cbz	x19, 90 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x90>
  7c:	add	x1, x19, #0x8
  80:	ldp	x20, x19, [sp, #32]
  84:	ldr	x21, [sp, #16]
  88:	ldp	x29, x30, [sp], #48
  8c:	b	0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
  90:	ldp	x20, x19, [sp, #32]
  94:	ldr	x21, [sp, #16]
  98:	ldp	x29, x30, [sp], #48
  9c:	ret
  a0:	adrp	x0, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
  a4:	adrp	x1, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
  a8:	adrp	x3, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
  ac:	add	x0, x0, #0x0
  b0:	add	x1, x1, #0x0
  b4:	add	x3, x3, #0x0
  b8:	mov	w2, #0x4e4                 	// #1252
  bc:	bl	0 <__assert_fail>
  c0:	adrp	x0, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
  c4:	adrp	x1, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
  c8:	adrp	x3, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
  cc:	add	x0, x0, #0x0
  d0:	add	x1, x1, #0x0
  d4:	add	x3, x3, #0x0
  d8:	mov	w2, #0x86a                 	// #2154
  dc:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase17getNumArgOperandsEv:

0000000000000000 <_ZNK4llvm8CallBase17getNumArgOperandsEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	bl	0 <_ZNK4llvm8CallBase17getNumArgOperandsEv>
  18:	mov	w8, w0
  1c:	mov	w20, #0x18                  	// #24
  20:	mneg	x8, x8, x20
  24:	mov	x0, x19
  28:	add	x21, x19, x8
  2c:	bl	0 <_ZNK4llvm8CallBase17getNumArgOperandsEv>
  30:	ldr	w8, [x19, #20]
  34:	mov	w9, w0
  38:	mneg	x9, x9, x20
  3c:	add	x9, x21, x9
  40:	and	x8, x8, #0xfffffff
  44:	mneg	x8, x8, x20
  48:	add	x8, x19, x8
  4c:	sub	x8, x9, x8
  50:	ldp	x20, x19, [sp, #32]
  54:	ldr	x21, [sp, #16]
  58:	sub	x8, x8, #0x18
  5c:	mov	w9, #0xaaab                	// #43691
  60:	lsr	x8, x8, #3
  64:	movk	w9, #0xaaaa, lsl #16
  68:	mul	w0, w8, w9
  6c:	ldp	x29, x30, [sp], #48
  70:	ret

Disassembly of section .text._ZNK4llvm8CallBase25getNumTotalBundleOperandsEv:

0000000000000000 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
  14:	cbz	w0, 34 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x34>
  18:	mov	x0, x19
  1c:	bl	0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
  20:	mov	w20, w0
  24:	mov	x0, x19
  28:	bl	0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
  2c:	subs	w0, w0, w20
  30:	b.cc	40 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x40>  // b.lo, b.ul, b.last
  34:	ldp	x20, x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret
  40:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
  44:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
  48:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x710                 	// #1808
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv:

0000000000000000 <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #16]
   c:	cmp	w8, #0x50
  10:	b.eq	34 <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv+0x34>  // b.none
  14:	cmp	w8, #0x23
  18:	b.eq	2c <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv+0x2c>  // b.none
  1c:	cmp	w8, #0x1d
  20:	b.ne	40 <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv+0x40>  // b.any
  24:	mov	w0, #0x2                   	// #2
  28:	b	38 <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv+0x38>
  2c:	ldp	x29, x30, [sp], #16
  30:	b	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
  34:	mov	w0, wzr
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv>
  44:	adrp	x1, 0 <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv>
  48:	add	x0, x0, #0x0
  4c:	add	x1, x1, #0x0
  50:	mov	w2, #0x46a                 	// #1130
  54:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZNK4llvm8CallBase27getBundleOperandsStartIndexEv:

0000000000000000 <_ZNK4llvm8CallBase27getBundleOperandsStartIndexEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZNK4llvm8CallBase27getBundleOperandsStartIndexEv>
  14:	cbz	w0, 30 <_ZNK4llvm8CallBase27getBundleOperandsStartIndexEv+0x30>
  18:	mov	x0, x19
  1c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  20:	ldr	w0, [x0, #8]
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	ret
  30:	adrp	x0, 0 <_ZNK4llvm8CallBase27getBundleOperandsStartIndexEv>
  34:	adrp	x1, 0 <_ZNK4llvm8CallBase27getBundleOperandsStartIndexEv>
  38:	adrp	x3, 0 <_ZNK4llvm8CallBase27getBundleOperandsStartIndexEv>
  3c:	add	x0, x0, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0x6ed                 	// #1773
  4c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase25getBundleOperandsEndIndexEv:

0000000000000000 <_ZNK4llvm8CallBase25getBundleOperandsEndIndexEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZNK4llvm8CallBase25getBundleOperandsEndIndexEv>
  14:	cbz	w0, 34 <_ZNK4llvm8CallBase25getBundleOperandsEndIndexEv+0x34>
  18:	mov	x0, x19
  1c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  20:	add	x8, x0, x1
  24:	ldur	w0, [x8, #-4]
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	ret
  34:	adrp	x0, 0 <_ZNK4llvm8CallBase25getBundleOperandsEndIndexEv>
  38:	adrp	x1, 0 <_ZNK4llvm8CallBase25getBundleOperandsEndIndexEv>
  3c:	adrp	x3, 0 <_ZNK4llvm8CallBase25getBundleOperandsEndIndexEv>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x6f3                 	// #1779
  50:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase20getNumOperandBundlesEv:

0000000000000000 <_ZNK4llvm8CallBase20getNumOperandBundlesEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #20]
  10:	tbnz	w8, #31, 1c <_ZNK4llvm8CallBase20getNumOperandBundlesEv+0x1c>
  14:	mov	x19, xzr
  18:	b	30 <_ZNK4llvm8CallBase20getNumOperandBundlesEv+0x30>
  1c:	mov	x20, x0
  20:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  24:	ldr	w8, [x20, #20]
  28:	mov	x19, x0
  2c:	tbnz	w8, #31, 48 <_ZNK4llvm8CallBase20getNumOperandBundlesEv+0x48>
  30:	mov	x8, xzr
  34:	sub	x8, x8, x19
  38:	ldp	x20, x19, [sp, #16]
  3c:	lsr	x0, x8, #4
  40:	ldp	x29, x30, [sp], #32
  44:	ret
  48:	mov	x0, x20
  4c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  50:	add	x8, x0, x1
  54:	b	34 <_ZNK4llvm8CallBase20getNumOperandBundlesEv+0x34>

Disassembly of section .text._ZN4llvm3Use9addToListEPPS0_:

0000000000000000 <_ZN4llvm3Use9addToListEPPS0_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x1]
   c:	mov	x9, x0
  10:	str	x8, [x9, #8]!
  14:	cbz	x8, 30 <_ZN4llvm3Use9addToListEPPS0_+0x30>
  18:	tst	x9, #0x3
  1c:	b.ne	54 <_ZN4llvm3Use9addToListEPPS0_+0x54>  // b.any
  20:	ldr	x10, [x8, #16]
  24:	and	x10, x10, #0x3
  28:	orr	x9, x10, x9
  2c:	str	x9, [x8, #16]
  30:	tst	x1, #0x3
  34:	b.ne	54 <_ZN4llvm3Use9addToListEPPS0_+0x54>  // b.any
  38:	ldr	x8, [x0, #16]
  3c:	and	x8, x8, #0x3
  40:	orr	x8, x8, x1
  44:	str	x8, [x0, #16]
  48:	str	x0, [x1]
  4c:	ldp	x29, x30, [sp], #16
  50:	ret
  54:	adrp	x0, 0 <_ZN4llvm3Use9addToListEPPS0_>
  58:	adrp	x1, 0 <_ZN4llvm3Use9addToListEPPS0_>
  5c:	adrp	x3, 0 <_ZN4llvm3Use9addToListEPPS0_>
  60:	add	x0, x0, #0x0
  64:	add	x1, x1, #0x0
  68:	add	x3, x3, #0x0
  6c:	mov	w2, #0xb3                  	// #179
  70:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8CallBase14setCallingConvEj:

0000000000000000 <_ZN4llvm8CallBase14setCallingConvEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cmp	w1, #0x400
   c:	b.cs	38 <_ZN4llvm8CallBase14setCallingConvEj+0x38>  // b.hs, b.nlast
  10:	ldrh	w8, [x0, #18]
  14:	mov	w9, w8
  18:	bfi	w9, w1, #2, #30
  1c:	sxth	w9, w9
  20:	tbnz	w9, #31, 58 <_ZN4llvm8CallBase14setCallingConvEj+0x58>
  24:	and	w8, w8, #0x8000
  28:	orr	w8, w9, w8
  2c:	strh	w8, [x0, #18]
  30:	ldp	x29, x30, [sp], #16
  34:	ret
  38:	adrp	x0, 0 <_ZN4llvm8CallBase14setCallingConvEj>
  3c:	adrp	x1, 0 <_ZN4llvm8CallBase14setCallingConvEj>
  40:	adrp	x3, 0 <_ZN4llvm8CallBase14setCallingConvEj>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x558                 	// #1368
  54:	bl	0 <__assert_fail>
  58:	adrp	x0, 0 <_ZN4llvm8CallBase14setCallingConvEj>
  5c:	adrp	x1, 0 <_ZN4llvm8CallBase14setCallingConvEj>
  60:	adrp	x3, 0 <_ZN4llvm8CallBase14setCallingConvEj>
  64:	add	x0, x0, #0x0
  68:	add	x1, x1, #0x0
  6c:	add	x3, x3, #0x0
  70:	mov	w2, #0x2fd                 	// #765
  74:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm11raw_ostreamlsENS_9StringRefE:

0000000000000000 <_ZN4llvm11raw_ostreamlsENS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x20, x0
  10:	ldp	x8, x0, [x0, #16]
  14:	mov	x19, x2
  18:	sub	x8, x8, x0
  1c:	cmp	x2, x8
  20:	b.ls	38 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x38>  // b.plast
  24:	mov	x0, x20
  28:	mov	x2, x19
  2c:	ldp	x20, x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  38:	cbz	x19, 50 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x50>
  3c:	mov	x2, x19
  40:	bl	0 <memcpy>
  44:	ldr	x8, [x20, #24]
  48:	add	x8, x8, x19
  4c:	str	x8, [x20, #24]
  50:	mov	x0, x20
  54:	ldp	x20, x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	ret

Disassembly of section .text._ZN4llvm13isa_impl_wrapINS_16CoroIdRetconInstEPKNS_19AnyCoroIdRetconInstES4_E4doitERKS4_:

0000000000000000 <_ZN4llvm13isa_impl_wrapINS_16CoroIdRetconInstEPKNS_19AnyCoroIdRetconInstES4_E4doitERKS4_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	cbz	x8, 34 <_ZN4llvm13isa_impl_wrapINS_16CoroIdRetconInstEPKNS_19AnyCoroIdRetconInstES4_E4doitERKS4_+0x34>
  10:	ldur	x8, [x8, #-24]
  14:	ldrb	w9, [x8, #16]
  18:	cmp	w9, #0x0
  1c:	csel	x8, x8, xzr, eq  // eq = none
  20:	ldr	w8, [x8, #36]
  24:	cmp	w8, #0x19
  28:	cset	w0, eq  // eq = none
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_16CoroIdRetconInstEPKNS_19AnyCoroIdRetconInstES4_E4doitERKS4_>
  38:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_16CoroIdRetconInstEPKNS_19AnyCoroIdRetconInstES4_E4doitERKS4_>
  3c:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_16CoroIdRetconInstEPKNS_19AnyCoroIdRetconInstES4_E4doitERKS4_>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x69                  	// #105
  50:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13isa_impl_wrapINS_10CoroIdInstEPKNS_13AnyCoroIdInstES4_E4doitERKS4_:

0000000000000000 <_ZN4llvm13isa_impl_wrapINS_10CoroIdInstEPKNS_13AnyCoroIdInstES4_E4doitERKS4_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	cbz	x8, 34 <_ZN4llvm13isa_impl_wrapINS_10CoroIdInstEPKNS_13AnyCoroIdInstES4_E4doitERKS4_+0x34>
  10:	ldur	x8, [x8, #-24]
  14:	ldrb	w9, [x8, #16]
  18:	cmp	w9, #0x0
  1c:	csel	x8, x8, xzr, eq  // eq = none
  20:	ldr	w8, [x8, #36]
  24:	cmp	w8, #0x18
  28:	cset	w0, eq  // eq = none
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_10CoroIdInstEPKNS_13AnyCoroIdInstES4_E4doitERKS4_>
  38:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_10CoroIdInstEPKNS_13AnyCoroIdInstES4_E4doitERKS4_>
  3c:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_10CoroIdInstEPKNS_13AnyCoroIdInstES4_E4doitERKS4_>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x69                  	// #105
  50:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13isa_impl_wrapINS_19AnyCoroIdRetconInstEPKNS_13AnyCoroIdInstES4_E4doitERKS4_:

0000000000000000 <_ZN4llvm13isa_impl_wrapINS_19AnyCoroIdRetconInstEPKNS_13AnyCoroIdInstES4_E4doitERKS4_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	cbz	x8, 38 <_ZN4llvm13isa_impl_wrapINS_19AnyCoroIdRetconInstEPKNS_13AnyCoroIdInstES4_E4doitERKS4_+0x38>
  10:	ldur	x8, [x8, #-24]
  14:	ldrb	w9, [x8, #16]
  18:	cmp	w9, #0x0
  1c:	csel	x8, x8, xzr, eq  // eq = none
  20:	ldr	w8, [x8, #36]
  24:	sub	w8, w8, #0x19
  28:	cmp	w8, #0x2
  2c:	cset	w0, cc  // cc = lo, ul, last
  30:	ldp	x29, x30, [sp], #16
  34:	ret
  38:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_19AnyCoroIdRetconInstEPKNS_13AnyCoroIdInstES4_E4doitERKS4_>
  3c:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_19AnyCoroIdRetconInstEPKNS_13AnyCoroIdInstES4_E4doitERKS4_>
  40:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_19AnyCoroIdRetconInstEPKNS_13AnyCoroIdInstES4_E4doitERKS4_>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x69                  	// #105
  54:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt17_Function_handlerIFvRKN4llvm18PassManagerBuilderERNS0_6legacy15PassManagerBaseEEPS7_E9_M_invokeERKSt9_Any_dataS3_S6_:

0000000000000000 <_ZNSt17_Function_handlerIFvRKN4llvm18PassManagerBuilderERNS0_6legacy15PassManagerBaseEEPS7_E9_M_invokeERKSt9_Any_dataS3_S6_>:
   0:	ldr	x3, [x0]
   4:	mov	x0, x1
   8:	mov	x1, x2
   c:	br	x3

Disassembly of section .text._ZNSt14_Function_base13_Base_managerIPFvRKN4llvm18PassManagerBuilderERNS1_6legacy15PassManagerBaseEEE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation:

0000000000000000 <_ZNSt14_Function_base13_Base_managerIPFvRKN4llvm18PassManagerBuilderERNS1_6legacy15PassManagerBaseEEE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation>:
   0:	cmp	w2, #0x2
   4:	b.eq	18 <_ZNSt14_Function_base13_Base_managerIPFvRKN4llvm18PassManagerBuilderERNS1_6legacy15PassManagerBaseEEE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation+0x18>  // b.none
   8:	cmp	w2, #0x1
   c:	b.ne	20 <_ZNSt14_Function_base13_Base_managerIPFvRKN4llvm18PassManagerBuilderERNS1_6legacy15PassManagerBaseEEE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation+0x20>  // b.any
  10:	str	x1, [x0]
  14:	b	20 <_ZNSt14_Function_base13_Base_managerIPFvRKN4llvm18PassManagerBuilderERNS1_6legacy15PassManagerBaseEEE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation+0x20>
  18:	ldr	x8, [x1]
  1c:	str	x8, [x0]
  20:	mov	w0, wzr
  24:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplIPNS_13CallGraphNodeEE6appendIN9__gnu_cxx17__normal_iteratorIPKS2_St6vectorIS2_SaIS2_EEEEvEEvT_SD_:

0000000000000000 <_ZN4llvm15SmallVectorImplIPNS_13CallGraphNodeEE6appendIN9__gnu_cxx17__normal_iteratorIPKS2_St6vectorIS2_SaIS2_EEEEvEEvT_SD_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	w8, w9, [x0, #8]
  14:	sub	x21, x2, x1
  18:	asr	x22, x21, #3
  1c:	mov	x20, x1
  20:	sub	x9, x9, x8
  24:	mov	x19, x0
  28:	cmp	x22, x9
  2c:	b.ls	44 <_ZN4llvm15SmallVectorImplIPNS_13CallGraphNodeEE6appendIN9__gnu_cxx17__normal_iteratorIPKS2_St6vectorIS2_SaIS2_EEEEvEEvT_SD_+0x44>  // b.plast
  30:	add	x2, x22, x8
  34:	add	x1, x19, #0x10
  38:	mov	w3, #0x8                   	// #8
  3c:	mov	x0, x19
  40:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  44:	cbz	x21, 60 <_ZN4llvm15SmallVectorImplIPNS_13CallGraphNodeEE6appendIN9__gnu_cxx17__normal_iteratorIPKS2_St6vectorIS2_SaIS2_EEEEvEEvT_SD_+0x60>
  48:	ldr	x8, [x19]
  4c:	ldr	w9, [x19, #8]
  50:	mov	x1, x20
  54:	mov	x2, x21
  58:	add	x0, x8, x9, lsl #3
  5c:	bl	0 <memmove>
  60:	ldp	w8, w9, [x19, #8]
  64:	add	x8, x22, x8
  68:	cmp	x8, x9
  6c:	b.hi	84 <_ZN4llvm15SmallVectorImplIPNS_13CallGraphNodeEE6appendIN9__gnu_cxx17__normal_iteratorIPKS2_St6vectorIS2_SaIS2_EEEEvEEvT_SD_+0x84>  // b.pmore
  70:	str	w8, [x19, #8]
  74:	ldp	x20, x19, [sp, #32]
  78:	ldp	x22, x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	ret
  84:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_13CallGraphNodeEE6appendIN9__gnu_cxx17__normal_iteratorIPKS2_St6vectorIS2_SaIS2_EEEEvEEvT_SD_>
  88:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_13CallGraphNodeEE6appendIN9__gnu_cxx17__normal_iteratorIPKS2_St6vectorIS2_SaIS2_EEEEvEEvT_SD_>
  8c:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_13CallGraphNodeEE6appendIN9__gnu_cxx17__normal_iteratorIPKS2_St6vectorIS2_SaIS2_EEEEvEEvT_SD_>
  90:	add	x0, x0, #0x0
  94:	add	x1, x1, #0x0
  98:	add	x3, x3, #0x0
  9c:	mov	w2, #0x43                  	// #67
  a0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13isa_impl_wrapINS_12CoroSizeInstEPKNS_13IntrinsicInstES4_E4doitERKS4_:

0000000000000000 <_ZN4llvm13isa_impl_wrapINS_12CoroSizeInstEPKNS_13IntrinsicInstES4_E4doitERKS4_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	cbz	x8, 34 <_ZN4llvm13isa_impl_wrapINS_12CoroSizeInstEPKNS_13IntrinsicInstES4_E4doitERKS4_+0x34>
  10:	ldur	x8, [x8, #-24]
  14:	ldrb	w9, [x8, #16]
  18:	cmp	w9, #0x0
  1c:	csel	x8, x8, xzr, eq  // eq = none
  20:	ldr	w8, [x8, #36]
  24:	cmp	w8, #0x21
  28:	cset	w0, eq  // eq = none
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_12CoroSizeInstEPKNS_13IntrinsicInstES4_E4doitERKS4_>
  38:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_12CoroSizeInstEPKNS_13IntrinsicInstES4_E4doitERKS4_>
  3c:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_12CoroSizeInstEPKNS_13IntrinsicInstES4_E4doitERKS4_>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x69                  	// #105
  50:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13isa_impl_wrapINS_13CoroFrameInstEPKNS_13IntrinsicInstES4_E4doitERKS4_:

0000000000000000 <_ZN4llvm13isa_impl_wrapINS_13CoroFrameInstEPKNS_13IntrinsicInstES4_E4doitERKS4_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	cbz	x8, 34 <_ZN4llvm13isa_impl_wrapINS_13CoroFrameInstEPKNS_13IntrinsicInstES4_E4doitERKS4_+0x34>
  10:	ldur	x8, [x8, #-24]
  14:	ldrb	w9, [x8, #16]
  18:	cmp	w9, #0x0
  1c:	csel	x8, x8, xzr, eq  // eq = none
  20:	ldr	w8, [x8, #36]
  24:	cmp	w8, #0x16
  28:	cset	w0, eq  // eq = none
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_13CoroFrameInstEPKNS_13IntrinsicInstES4_E4doitERKS4_>
  38:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_13CoroFrameInstEPKNS_13IntrinsicInstES4_E4doitERKS4_>
  3c:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_13CoroFrameInstEPKNS_13IntrinsicInstES4_E4doitERKS4_>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x69                  	// #105
  50:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13isa_impl_wrapINS_12CoroSaveInstEPKNS_13IntrinsicInstES4_E4doitERKS4_:

0000000000000000 <_ZN4llvm13isa_impl_wrapINS_12CoroSaveInstEPKNS_13IntrinsicInstES4_E4doitERKS4_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	cbz	x8, 34 <_ZN4llvm13isa_impl_wrapINS_12CoroSaveInstEPKNS_13IntrinsicInstES4_E4doitERKS4_+0x34>
  10:	ldur	x8, [x8, #-24]
  14:	ldrb	w9, [x8, #16]
  18:	cmp	w9, #0x0
  1c:	csel	x8, x8, xzr, eq  // eq = none
  20:	ldr	w8, [x8, #36]
  24:	cmp	w8, #0x20
  28:	cset	w0, eq  // eq = none
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_12CoroSaveInstEPKNS_13IntrinsicInstES4_E4doitERKS4_>
  38:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_12CoroSaveInstEPKNS_13IntrinsicInstES4_E4doitERKS4_>
  3c:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_12CoroSaveInstEPKNS_13IntrinsicInstES4_E4doitERKS4_>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x69                  	// #105
  50:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13isa_impl_wrapINS_21CoroSuspendRetconInstEPKNS_13IntrinsicInstES4_E4doitERKS4_:

0000000000000000 <_ZN4llvm13isa_impl_wrapINS_21CoroSuspendRetconInstEPKNS_13IntrinsicInstES4_E4doitERKS4_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	cbz	x8, 34 <_ZN4llvm13isa_impl_wrapINS_21CoroSuspendRetconInstEPKNS_13IntrinsicInstES4_E4doitERKS4_+0x34>
  10:	ldur	x8, [x8, #-24]
  14:	ldrb	w9, [x8, #16]
  18:	cmp	w9, #0x0
  1c:	csel	x8, x8, xzr, eq  // eq = none
  20:	ldr	w8, [x8, #36]
  24:	cmp	w8, #0x24
  28:	cset	w0, eq  // eq = none
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_21CoroSuspendRetconInstEPKNS_13IntrinsicInstES4_E4doitERKS4_>
  38:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_21CoroSuspendRetconInstEPKNS_13IntrinsicInstES4_E4doitERKS4_>
  3c:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_21CoroSuspendRetconInstEPKNS_13IntrinsicInstES4_E4doitERKS4_>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x69                  	// #105
  50:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13isa_impl_wrapINS_15CoroSuspendInstEPKNS_13IntrinsicInstES4_E4doitERKS4_:

0000000000000000 <_ZN4llvm13isa_impl_wrapINS_15CoroSuspendInstEPKNS_13IntrinsicInstES4_E4doitERKS4_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	cbz	x8, 34 <_ZN4llvm13isa_impl_wrapINS_15CoroSuspendInstEPKNS_13IntrinsicInstES4_E4doitERKS4_+0x34>
  10:	ldur	x8, [x8, #-24]
  14:	ldrb	w9, [x8, #16]
  18:	cmp	w9, #0x0
  1c:	csel	x8, x8, xzr, eq  // eq = none
  20:	ldr	w8, [x8, #36]
  24:	cmp	w8, #0x23
  28:	cset	w0, eq  // eq = none
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_15CoroSuspendInstEPKNS_13IntrinsicInstES4_E4doitERKS4_>
  38:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_15CoroSuspendInstEPKNS_13IntrinsicInstES4_E4doitERKS4_>
  3c:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_15CoroSuspendInstEPKNS_13IntrinsicInstES4_E4doitERKS4_>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x69                  	// #105
  50:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13isa_impl_wrapINS_13CoroBeginInstEPKNS_13IntrinsicInstES4_E4doitERKS4_:

0000000000000000 <_ZN4llvm13isa_impl_wrapINS_13CoroBeginInstEPKNS_13IntrinsicInstES4_E4doitERKS4_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	cbz	x8, 34 <_ZN4llvm13isa_impl_wrapINS_13CoroBeginInstEPKNS_13IntrinsicInstES4_E4doitERKS4_+0x34>
  10:	ldur	x8, [x8, #-24]
  14:	ldrb	w9, [x8, #16]
  18:	cmp	w9, #0x0
  1c:	csel	x8, x8, xzr, eq  // eq = none
  20:	ldr	w8, [x8, #36]
  24:	cmp	w8, #0x12
  28:	cset	w0, eq  // eq = none
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_13CoroBeginInstEPKNS_13IntrinsicInstES4_E4doitERKS4_>
  38:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_13CoroBeginInstEPKNS_13IntrinsicInstES4_E4doitERKS4_>
  3c:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_13CoroBeginInstEPKNS_13IntrinsicInstES4_E4doitERKS4_>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x69                  	// #105
  50:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13isa_impl_wrapINS_11CoroEndInstEPKNS_13IntrinsicInstES4_E4doitERKS4_:

0000000000000000 <_ZN4llvm13isa_impl_wrapINS_11CoroEndInstEPKNS_13IntrinsicInstES4_E4doitERKS4_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	cbz	x8, 34 <_ZN4llvm13isa_impl_wrapINS_11CoroEndInstEPKNS_13IntrinsicInstES4_E4doitERKS4_+0x34>
  10:	ldur	x8, [x8, #-24]
  14:	ldrb	w9, [x8, #16]
  18:	cmp	w9, #0x0
  1c:	csel	x8, x8, xzr, eq  // eq = none
  20:	ldr	w8, [x8, #36]
  24:	cmp	w8, #0x15
  28:	cset	w0, eq  // eq = none
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11CoroEndInstEPKNS_13IntrinsicInstES4_E4doitERKS4_>
  38:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11CoroEndInstEPKNS_13IntrinsicInstES4_E4doitERKS4_>
  3c:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11CoroEndInstEPKNS_13IntrinsicInstES4_E4doitERKS4_>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x69                  	// #105
  50:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13isa_impl_wrapINS_21CoroSuspendRetconInstEPKNS_18AnyCoroSuspendInstES4_E4doitERKS4_:

0000000000000000 <_ZN4llvm13isa_impl_wrapINS_21CoroSuspendRetconInstEPKNS_18AnyCoroSuspendInstES4_E4doitERKS4_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	cbz	x8, 34 <_ZN4llvm13isa_impl_wrapINS_21CoroSuspendRetconInstEPKNS_18AnyCoroSuspendInstES4_E4doitERKS4_+0x34>
  10:	ldur	x8, [x8, #-24]
  14:	ldrb	w9, [x8, #16]
  18:	cmp	w9, #0x0
  1c:	csel	x8, x8, xzr, eq  // eq = none
  20:	ldr	w8, [x8, #36]
  24:	cmp	w8, #0x24
  28:	cset	w0, eq  // eq = none
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_21CoroSuspendRetconInstEPKNS_18AnyCoroSuspendInstES4_E4doitERKS4_>
  38:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_21CoroSuspendRetconInstEPKNS_18AnyCoroSuspendInstES4_E4doitERKS4_>
  3c:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_21CoroSuspendRetconInstEPKNS_18AnyCoroSuspendInstES4_E4doitERKS4_>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x69                  	// #105
  50:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm24IRBuilderDefaultInserter12InsertHelperEPNS_11InstructionERKNS_5TwineEPNS_10BasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS1_Lb1ELb0EvEELb0ELb0EEE:

0000000000000000 <_ZNK4llvm24IRBuilderDefaultInserter12InsertHelperEPNS_11InstructionERKNS_5TwineEPNS_10BasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS1_Lb1ELb0EvEELb0ELb0EEE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x2
  14:	mov	x20, x1
  18:	cbz	x3, 38 <_ZNK4llvm24IRBuilderDefaultInserter12InsertHelperEPNS_11InstructionERKNS_5TwineEPNS_10BasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS1_Lb1ELb0EvEELb0ELb0EEE+0x38>
  1c:	add	x0, x3, #0x28
  20:	mov	x1, x20
  24:	mov	x21, x4
  28:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  2c:	add	x1, x20, #0x18
  30:	mov	x0, x21
  34:	bl	0 <_ZNK4llvm24IRBuilderDefaultInserter12InsertHelperEPNS_11InstructionERKNS_5TwineEPNS_10BasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS1_Lb1ELb0EvEELb0ELb0EEE>
  38:	mov	x0, x20
  3c:	mov	x1, x19
  40:	ldp	x20, x19, [sp, #32]
  44:	ldr	x21, [sp, #16]
  48:	ldp	x29, x30, [sp], #48
  4c:	b	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>

Disassembly of section .text._ZNK4llvm13IRBuilderBase20SetInstDebugLocationEPNS_11InstructionE:

0000000000000000 <_ZNK4llvm13IRBuilderBase20SetInstDebugLocationEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x0]
  10:	cbz	x8, 48 <_ZNK4llvm13IRBuilderBase20SetInstDebugLocationEPNS_11InstructionE+0x48>
  14:	mov	x19, x1
  18:	add	x0, x29, #0x18
  1c:	mov	w2, #0x2                   	// #2
  20:	mov	x1, x8
  24:	str	x8, [x29, #24]
  28:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  2c:	add	x0, x19, #0x30
  30:	add	x1, x29, #0x18
  34:	bl	0 <_ZNK4llvm13IRBuilderBase20SetInstDebugLocationEPNS_11InstructionE>
  38:	ldr	x1, [x29, #24]
  3c:	cbz	x1, 48 <_ZNK4llvm13IRBuilderBase20SetInstDebugLocationEPNS_11InstructionE+0x48>
  40:	add	x0, x29, #0x18
  44:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  48:	ldr	x19, [sp, #16]
  4c:	ldp	x29, x30, [sp], #32
  50:	ret

Disassembly of section .text._ZN4llvm10ilist_baseILb1EE16insertBeforeImplERNS_15ilist_node_baseILb1EEES4_:

0000000000000000 <_ZN4llvm10ilist_baseILb1EE16insertBeforeImplERNS_15ilist_node_baseILb1EEES4_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	ldr	x9, [x1]
  10:	tst	x1, #0x7
  14:	and	x10, x8, #0xfffffffffffffff8
  18:	bfxil	x8, x9, #0, #3
  1c:	stp	x8, x0, [x1]
  20:	str	x1, [x10, #8]
  24:	b.ne	40 <_ZN4llvm10ilist_baseILb1EE16insertBeforeImplERNS_15ilist_node_baseILb1EEES4_+0x40>  // b.any
  28:	ldr	x8, [x0]
  2c:	and	x8, x8, #0x7
  30:	orr	x8, x8, x1
  34:	str	x8, [x0]
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZN4llvm10ilist_baseILb1EE16insertBeforeImplERNS_15ilist_node_baseILb1EEES4_>
  44:	adrp	x1, 0 <_ZN4llvm10ilist_baseILb1EE16insertBeforeImplERNS_15ilist_node_baseILb1EEES4_>
  48:	adrp	x3, 0 <_ZN4llvm10ilist_baseILb1EE16insertBeforeImplERNS_15ilist_node_baseILb1EEES4_>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0xb3                  	// #179
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13TrackingMDRefaSEOS0_:

0000000000000000 <_ZN4llvm13TrackingMDRefaSEOS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	cmp	x1, x0
  14:	b.eq	40 <_ZN4llvm13TrackingMDRefaSEOS0_+0x40>  // b.none
  18:	mov	x20, x1
  1c:	ldr	x1, [x19]
  20:	cbz	x1, 2c <_ZN4llvm13TrackingMDRefaSEOS0_+0x2c>
  24:	mov	x0, x19
  28:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  2c:	ldr	x8, [x20]
  30:	mov	x0, x19
  34:	mov	x1, x20
  38:	str	x8, [x19]
  3c:	bl	0 <_ZN4llvm13TrackingMDRefaSEOS0_>
  40:	mov	x0, x19
  44:	ldp	x20, x19, [sp, #16]
  48:	ldp	x29, x30, [sp], #32
  4c:	ret

Disassembly of section .text._ZN4llvm13TrackingMDRef7retrackERS0_:

0000000000000000 <_ZN4llvm13TrackingMDRef7retrackERS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x1
  10:	ldr	x1, [x0]
  14:	ldr	x8, [x19]
  18:	cmp	x1, x8
  1c:	b.ne	40 <_ZN4llvm13TrackingMDRef7retrackERS0_+0x40>  // b.any
  20:	cbz	x1, 34 <_ZN4llvm13TrackingMDRef7retrackERS0_+0x34>
  24:	mov	x2, x0
  28:	mov	x0, x19
  2c:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  30:	str	xzr, [x19]
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret
  40:	adrp	x0, 0 <_ZN4llvm13TrackingMDRef7retrackERS0_>
  44:	adrp	x1, 0 <_ZN4llvm13TrackingMDRef7retrackERS0_>
  48:	adrp	x3, 0 <_ZN4llvm13TrackingMDRef7retrackERS0_>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x5e                  	// #94
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #32]
   8:	str	x27, [sp, #48]
   c:	stp	x26, x25, [sp, #64]
  10:	stp	x24, x23, [sp, #80]
  14:	stp	x22, x21, [sp, #96]
  18:	stp	x20, x19, [sp, #112]
  1c:	add	x29, sp, #0x20
  20:	ldp	x25, x26, [x0, #48]
  24:	mov	x27, x1
  28:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
  2c:	mov	x19, x0
  30:	add	x1, x1, #0x0
  34:	add	x0, sp, #0x8
  38:	mov	x21, x6
  3c:	mov	x20, x5
  40:	mov	x22, x4
  44:	mov	x23, x3
  48:	mov	x24, x2
  4c:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
  50:	add	x6, sp, #0x8
  54:	mov	x0, x27
  58:	mov	x1, x24
  5c:	mov	x2, x23
  60:	mov	x3, x22
  64:	mov	x4, x25
  68:	mov	x5, x26
  6c:	mov	x7, xzr
  70:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
  74:	ldrb	w8, [x19, #44]
  78:	mov	x22, x0
  7c:	cbz	w8, 8c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x8c>
  80:	mov	x0, x19
  84:	mov	x1, x22
  88:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
  8c:	add	x0, sp, #0x8
  90:	str	x22, [sp, #8]
  94:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
  98:	tbz	w0, #0, b0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0xb0>
  9c:	ldr	w3, [x19, #40]
  a0:	mov	x0, x19
  a4:	mov	x1, x22
  a8:	mov	x2, x21
  ac:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
  b0:	ldp	x3, x4, [x19, #8]
  b4:	mov	x0, x19
  b8:	mov	x1, x22
  bc:	mov	x2, x20
  c0:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
  c4:	mov	x0, x19
  c8:	mov	x1, x22
  cc:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
  d0:	mov	x0, x22
  d4:	ldp	x20, x19, [sp, #112]
  d8:	ldp	x22, x21, [sp, #96]
  dc:	ldp	x24, x23, [sp, #80]
  e0:	ldp	x26, x25, [sp, #64]
  e4:	ldr	x27, [sp, #48]
  e8:	ldp	x29, x30, [sp, #32]
  ec:	add	sp, sp, #0x80
  f0:	ret

Disassembly of section .text._ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	stp	x28, x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	mov	x26, x7
  20:	mov	x19, x6
  24:	mov	x20, x5
  28:	mov	x21, x4
  2c:	mov	x22, x3
  30:	mov	x23, x2
  34:	mov	x24, x1
  38:	mov	x25, x0
  3c:	mov	w8, wzr
  40:	cbz	x5, 6c <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x6c>
  44:	mov	w9, #0x38                  	// #56
  48:	mul	x9, x20, x9
  4c:	add	x10, x21, #0x28
  50:	ldp	x12, x11, [x10, #-8]
  54:	subs	x9, x9, #0x38
  58:	add	x10, x10, #0x38
  5c:	sub	x11, x11, x12
  60:	lsr	x11, x11, #3
  64:	add	w8, w8, w11
  68:	b.ne	50 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x50>  // b.any
  6c:	add	w28, w22, #0x1
  70:	add	w1, w8, w28
  74:	lsl	w2, w20, #4
  78:	mov	w0, #0x48                  	// #72
  7c:	bl	0 <_ZN4llvm4UsernwEmjj>
  80:	ldr	x8, [x25, #16]
  84:	mov	x27, x0
  88:	ldr	x1, [x8]
  8c:	cbz	x20, f0 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0xf0>
  90:	mov	w8, #0x38                  	// #56
  94:	mov	w9, wzr
  98:	mul	x8, x20, x8
  9c:	add	x10, x21, #0x28
  a0:	ldp	x12, x11, [x10, #-8]
  a4:	subs	x8, x8, #0x38
  a8:	add	x10, x10, #0x38
  ac:	sub	x11, x11, x12
  b0:	lsr	x11, x11, #3
  b4:	add	w9, w9, w11
  b8:	b.ne	a0 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0xa0>  // b.any
  bc:	mov	w10, #0x38                  	// #56
  c0:	mov	w9, w9
  c4:	mul	x10, x20, x10
  c8:	add	x11, x21, #0x28
  cc:	ldp	x13, x12, [x11, #-8]
  d0:	subs	x10, x10, #0x38
  d4:	add	x11, x11, #0x38
  d8:	sub	x12, x12, x13
  dc:	lsr	x12, x12, #3
  e0:	add	w8, w8, w12
  e4:	b.ne	cc <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0xcc>  // b.any
  e8:	add	x9, x22, x9
  ec:	b	f8 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0xf8>
  f0:	mov	w8, wzr
  f4:	mov	x9, x22
  f8:	mvn	x9, x9
  fc:	mov	w10, #0x18                  	// #24
 100:	madd	x3, x9, x10, x27
 104:	add	w4, w8, w28
 108:	mov	w2, #0x38                  	// #56
 10c:	mov	x0, x27
 110:	mov	x5, x26
 114:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
 118:	mov	x0, x27
 11c:	mov	x1, x25
 120:	mov	x2, x24
 124:	mov	x3, x23
 128:	mov	x4, x22
 12c:	mov	x5, x21
 130:	mov	x6, x20
 134:	mov	x7, x19
 138:	str	xzr, [x27, #56]
 13c:	bl	0 <_ZN4llvm8CallInst4initEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineE>
 140:	mov	x0, x27
 144:	ldp	x20, x19, [sp, #80]
 148:	ldp	x22, x21, [sp, #64]
 14c:	ldp	x24, x23, [sp, #48]
 150:	ldp	x26, x25, [sp, #32]
 154:	ldp	x28, x27, [sp, #16]
 158:	ldp	x29, x30, [sp], #96
 15c:	ret

Disassembly of section .text._ZN4llvm13IRBuilderBase24setConstrainedFPCallAttrEPNS_8CallInstE:

0000000000000000 <_ZN4llvm13IRBuilderBase24setConstrainedFPCallAttrEPNS_8CallInstE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x1
  10:	mov	w1, #0x39                  	// #57
  14:	mov	x0, x19
  18:	bl	0 <_ZN4llvm13IRBuilderBase24setConstrainedFPCallAttrEPNS_8CallInstE>
  1c:	tbnz	w0, #0, 48 <_ZN4llvm13IRBuilderBase24setConstrainedFPCallAttrEPNS_8CallInstE+0x48>
  20:	ldr	x8, [x19, #56]
  24:	mov	x0, x19
  28:	str	x8, [x29, #24]
  2c:	bl	0 <_ZNK4llvm5Value10getContextEv>
  30:	mov	x1, x0
  34:	add	x0, x29, #0x18
  38:	mov	w2, #0xffffffff            	// #-1
  3c:	mov	w3, #0x39                  	// #57
  40:	bl	0 <_ZNK4llvm13AttributeList12addAttributeERNS_11LLVMContextEjNS_9Attribute8AttrKindE>
  44:	str	x0, [x19, #56]
  48:	ldr	x19, [sp, #16]
  4c:	ldp	x29, x30, [sp], #32
  50:	ret

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10setFPAttrsEPNS_11InstructionEPNS_6MDNodeENS_13FastMathFlagsE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10setFPAttrsEPNS_11InstructionEPNS_6MDNodeENS_13FastMathFlagsE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x20, x3
  10:	mov	x19, x1
  14:	cbnz	x2, 20 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10setFPAttrsEPNS_11InstructionEPNS_6MDNodeENS_13FastMathFlagsE+0x20>
  18:	ldr	x2, [x0, #32]
  1c:	cbz	x2, 2c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10setFPAttrsEPNS_11InstructionEPNS_6MDNodeENS_13FastMathFlagsE+0x2c>
  20:	mov	w1, #0x3                   	// #3
  24:	mov	x0, x19
  28:	bl	0 <_ZN4llvm11Instruction11setMetadataEjPNS_6MDNodeE>
  2c:	and	x1, x20, #0xffffffff
  30:	mov	x0, x19
  34:	bl	0 <_ZN4llvm11Instruction16setFastMathFlagsENS_13FastMathFlagsE>
  38:	mov	x0, x19
  3c:	ldp	x20, x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	ret

Disassembly of section .text._ZNK4llvm8CallBase13hasFnAttrImplINS_9Attribute8AttrKindEEEbT_:

0000000000000000 <_ZNK4llvm8CallBase13hasFnAttrImplINS_9Attribute8AttrKindEEEbT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	w19, w1
  10:	mov	x20, x0
  14:	add	x0, x0, #0x38
  18:	mov	w1, #0xffffffff            	// #-1
  1c:	mov	w2, w19
  20:	bl	0 <_ZNK4llvm13AttributeList12hasAttributeEjNS_9Attribute8AttrKindE>
  24:	tbz	w0, #0, 30 <_ZNK4llvm8CallBase13hasFnAttrImplINS_9Attribute8AttrKindEEEbT_+0x30>
  28:	mov	w0, #0x1                   	// #1
  2c:	b	44 <_ZNK4llvm8CallBase13hasFnAttrImplINS_9Attribute8AttrKindEEEbT_+0x44>
  30:	mov	x0, x20
  34:	mov	w1, w19
  38:	bl	0 <_ZNK4llvm8CallBase13hasFnAttrImplINS_9Attribute8AttrKindEEEbT_>
  3c:	tbz	w0, #0, 50 <_ZNK4llvm8CallBase13hasFnAttrImplINS_9Attribute8AttrKindEEEbT_+0x50>
  40:	mov	w0, wzr
  44:	ldp	x20, x19, [sp, #16]
  48:	ldp	x29, x30, [sp], #32
  4c:	ret
  50:	mov	x0, x20
  54:	mov	w1, w19
  58:	ldp	x20, x19, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	b	0 <_ZNK4llvm8CallBase25hasFnAttrOnCalledFunctionENS_9Attribute8AttrKindE>

Disassembly of section .text._ZNK4llvm8CallBase28isFnAttrDisallowedByOpBundleENS_9Attribute8AttrKindE:

0000000000000000 <_ZNK4llvm8CallBase28isFnAttrDisallowedByOpBundleENS_9Attribute8AttrKindE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	x8, x0
   c:	cmp	w1, #0xe
  10:	mov	w0, wzr
  14:	b.le	34 <_ZNK4llvm8CallBase28isFnAttrDisallowedByOpBundleENS_9Attribute8AttrKindE+0x34>
  18:	cmp	w1, #0x28
  1c:	b.eq	5c <_ZNK4llvm8CallBase28isFnAttrDisallowedByOpBundleENS_9Attribute8AttrKindE+0x5c>  // b.none
  20:	cmp	w1, #0x27
  24:	b.eq	44 <_ZNK4llvm8CallBase28isFnAttrDisallowedByOpBundleENS_9Attribute8AttrKindE+0x44>  // b.none
  28:	cmp	w1, #0xf
  2c:	b.eq	44 <_ZNK4llvm8CallBase28isFnAttrDisallowedByOpBundleENS_9Attribute8AttrKindE+0x44>  // b.none
  30:	b	54 <_ZNK4llvm8CallBase28isFnAttrDisallowedByOpBundleENS_9Attribute8AttrKindE+0x54>
  34:	cmp	w1, #0x4
  38:	b.eq	44 <_ZNK4llvm8CallBase28isFnAttrDisallowedByOpBundleENS_9Attribute8AttrKindE+0x44>  // b.none
  3c:	cmp	w1, #0xe
  40:	b.ne	54 <_ZNK4llvm8CallBase28isFnAttrDisallowedByOpBundleENS_9Attribute8AttrKindE+0x54>  // b.any
  44:	mov	x0, x8
  48:	bl	0 <_ZNK4llvm8CallBase28isFnAttrDisallowedByOpBundleENS_9Attribute8AttrKindE>
  4c:	cmp	w0, #0x0
  50:	cset	w0, ne  // ne = any
  54:	ldp	x29, x30, [sp], #16
  58:	ret
  5c:	mov	x0, x8
  60:	ldp	x29, x30, [sp], #16
  64:	b	0 <_ZNK4llvm8CallBase28isFnAttrDisallowedByOpBundleENS_9Attribute8AttrKindE>

Disassembly of section .text._ZNK4llvm8CallBase27hasClobberingOperandBundlesEv:

0000000000000000 <_ZNK4llvm8CallBase27hasClobberingOperandBundlesEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	bl	0 <_ZNK4llvm8CallBase27hasClobberingOperandBundlesEv>
   c:	cmp	x0, x1
  10:	b.eq	2c <_ZNK4llvm8CallBase27hasClobberingOperandBundlesEv+0x2c>  // b.none
  14:	ldr	x8, [x0], #16
  18:	ldr	w8, [x8, #8]
  1c:	cmp	w8, #0x2
  20:	b.cs	34 <_ZNK4llvm8CallBase27hasClobberingOperandBundlesEv+0x34>  // b.hs, b.nlast
  24:	cmp	x1, x0
  28:	b.ne	14 <_ZNK4llvm8CallBase27hasClobberingOperandBundlesEv+0x14>  // b.any
  2c:	mov	w0, wzr
  30:	b	38 <_ZNK4llvm8CallBase27hasClobberingOperandBundlesEv+0x38>
  34:	mov	w0, #0x1                   	// #1
  38:	ldp	x29, x30, [sp], #16
  3c:	ret

Disassembly of section .text._ZNK4llvm8CallBase15bundle_op_infosEv:

0000000000000000 <_ZNK4llvm8CallBase15bundle_op_infosEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #20]
  10:	tbnz	w8, #31, 1c <_ZNK4llvm8CallBase15bundle_op_infosEv+0x1c>
  14:	mov	x19, xzr
  18:	b	30 <_ZNK4llvm8CallBase15bundle_op_infosEv+0x30>
  1c:	mov	x20, x0
  20:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  24:	ldr	w8, [x20, #20]
  28:	mov	x19, x0
  2c:	tbnz	w8, #31, 44 <_ZNK4llvm8CallBase15bundle_op_infosEv+0x44>
  30:	mov	x1, xzr
  34:	mov	x0, x19
  38:	ldp	x20, x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret
  44:	mov	x0, x20
  48:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  4c:	add	x1, x0, x1
  50:	b	34 <_ZNK4llvm8CallBase15bundle_op_infosEv+0x34>

Disassembly of section .text._ZN4llvm13isa_impl_wrapINS_14FPMathOperatorEPKNS_8CallInstES4_E4doitERKS4_:

0000000000000000 <_ZN4llvm13isa_impl_wrapINS_14FPMathOperatorEPKNS_8CallInstES4_E4doitERKS4_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0]
   c:	cbz	x0, 18 <_ZN4llvm13isa_impl_wrapINS_14FPMathOperatorEPKNS_8CallInstES4_E4doitERKS4_+0x18>
  10:	ldp	x29, x30, [sp], #16
  14:	b	0 <_ZN4llvm13isa_impl_wrapINS_14FPMathOperatorEPKNS_8CallInstES4_E4doitERKS4_>
  18:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_14FPMathOperatorEPKNS_8CallInstES4_E4doitERKS4_>
  1c:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_14FPMathOperatorEPKNS_8CallInstES4_E4doitERKS4_>
  20:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_14FPMathOperatorEPKNS_8CallInstES4_E4doitERKS4_>
  24:	add	x0, x0, #0x0
  28:	add	x1, x1, #0x0
  2c:	add	x3, x3, #0x0
  30:	mov	w2, #0x69                  	// #105
  34:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm14FPMathOperator7classofEPKNS_5ValueE:

0000000000000000 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x0, cc <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0xcc>
   c:	ldrb	w9, [x0, #16]
  10:	subs	w8, w9, #0x18
  14:	b.cs	24 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x24>  // b.hs, b.nlast
  18:	cmp	w9, #0x5
  1c:	b.ne	9c <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x9c>  // b.any
  20:	ldrh	w8, [x0, #18]
  24:	cmp	w8, #0x39
  28:	b.hi	9c <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x9c>  // b.pmore
  2c:	mov	x10, #0x5000                	// #20480
  30:	mov	w9, #0x1                   	// #1
  34:	movk	x10, #0x125, lsl #16
  38:	lsl	x9, x9, x8
  3c:	movk	x10, #0x40, lsl #48
  40:	tst	x9, x10
  44:	b.eq	50 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x50>  // b.none
  48:	mov	w0, #0x1                   	// #1
  4c:	b	c4 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0xc4>
  50:	mov	w9, #0x1                   	// #1
  54:	lsl	x8, x9, x8
  58:	tst	x8, #0x380000000000000
  5c:	b.eq	9c <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x9c>  // b.none
  60:	ldr	x8, [x0]
  64:	cbz	x8, 7c <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x7c>
  68:	ldrb	w9, [x8, #8]
  6c:	cmp	w9, #0xe
  70:	b.ne	a4 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0xa4>  // b.any
  74:	ldr	x8, [x8, #24]
  78:	cbnz	x8, 68 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x68>
  7c:	adrp	x0, 0 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE>
  80:	adrp	x1, 0 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE>
  84:	adrp	x3, 0 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE>
  88:	add	x0, x0, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0x69                  	// #105
  98:	bl	0 <__assert_fail>
  9c:	mov	w0, wzr
  a0:	b	c4 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0xc4>
  a4:	cmp	w9, #0x10
  a8:	b.ne	b8 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0xb8>  // b.any
  ac:	ldr	x8, [x8, #16]
  b0:	ldr	x8, [x8]
  b4:	ldrb	w9, [x8, #8]
  b8:	sub	w8, w9, #0x1
  bc:	cmp	w8, #0x6
  c0:	cset	w0, cc  // cc = lo, ul, last
  c4:	ldp	x29, x30, [sp], #16
  c8:	ret
  cc:	adrp	x0, 0 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE>
  d0:	adrp	x1, 0 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE>
  d4:	adrp	x3, 0 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE>
  d8:	add	x0, x0, #0x0
  dc:	add	x1, x1, #0x0
  e0:	add	x3, x3, #0x0
  e4:	b	94 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x94>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCastENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCastENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineE>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	str	x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	ldr	x8, [x2]
  1c:	mov	x19, x2
  20:	cmp	x8, x3
  24:	b.eq	90 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCastENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineE+0x90>  // b.none
  28:	ldrb	w8, [x19, #16]
  2c:	mov	x22, x3
  30:	mov	w23, w1
  34:	cmp	w8, #0x10
  38:	b.ls	ac <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCastENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineE+0xac>  // b.plast
  3c:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCastENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineE>
  40:	mov	x21, x0
  44:	add	x1, x1, #0x0
  48:	add	x0, sp, #0x8
  4c:	mov	x20, x4
  50:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCastENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineE>
  54:	add	x3, sp, #0x8
  58:	mov	w0, w23
  5c:	mov	x1, x19
  60:	mov	x2, x22
  64:	mov	x4, xzr
  68:	bl	0 <_ZN4llvm8CastInst6CreateENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineEPS1_>
  6c:	ldp	x3, x4, [x21, #8]
  70:	mov	x19, x0
  74:	mov	x0, x21
  78:	mov	x1, x19
  7c:	mov	x2, x20
  80:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCastENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineE>
  84:	mov	x0, x21
  88:	mov	x1, x19
  8c:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCastENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineE>
  90:	mov	x0, x19
  94:	ldp	x20, x19, [sp, #80]
  98:	ldp	x22, x21, [sp, #64]
  9c:	ldr	x23, [sp, #48]
  a0:	ldp	x29, x30, [sp, #32]
  a4:	add	sp, sp, #0x60
  a8:	ret
  ac:	mov	w0, w23
  b0:	mov	x1, x19
  b4:	mov	x2, x22
  b8:	ldp	x20, x19, [sp, #80]
  bc:	ldp	x22, x21, [sp, #64]
  c0:	ldr	x23, [sp, #48]
  c4:	ldp	x29, x30, [sp, #32]
  c8:	mov	w3, wzr
  cc:	add	sp, sp, #0x60
  d0:	b	0 <_ZN4llvm12ConstantExpr7getCastEjPNS_8ConstantEPNS_4TypeEb>

CoroCleanup.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>:
   0:	sub	sp, sp, #0x20
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	str	x0, [sp, #8]
  10:	adrp	x0, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
  14:	adrp	x1, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
  18:	add	x0, x0, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x2, sp, #0x8
  24:	bl	0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
  28:	ldp	x29, x30, [sp, #16]
  2c:	add	sp, sp, #0x20
  30:	ret

0000000000000034 <_ZL35initializeCoroCleanupLegacyPassOnceRN4llvm12PassRegistryE>:
  34:	stp	x29, x30, [sp, #-32]!
  38:	stp	x20, x19, [sp, #16]
  3c:	mov	x29, sp
  40:	mov	x19, x0
  44:	mov	w0, #0x50                  	// #80
  48:	bl	0 <_Znwm>
  4c:	adrp	x8, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
  50:	add	x8, x8, #0x0
  54:	mov	w9, #0x26                  	// #38
  58:	adrp	x10, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
  5c:	add	x10, x10, #0x0
  60:	stp	x8, x9, [x0]
  64:	mov	w8, #0xc                   	// #12
  68:	stp	x10, x8, [x0, #16]
  6c:	adrp	x8, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
  70:	add	x8, x8, #0x0
  74:	str	x8, [x0, #32]
  78:	adrp	x8, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
  7c:	mov	x20, x0
  80:	add	x8, x8, #0x0
  84:	strh	wzr, [x0, #40]
  88:	strb	wzr, [x0, #42]
  8c:	stp	xzr, xzr, [x0, #48]
  90:	stp	xzr, x8, [x0, #64]
  94:	mov	w2, #0x1                   	// #1
  98:	mov	x0, x19
  9c:	mov	x1, x20
  a0:	bl	0 <_ZN4llvm12PassRegistry12registerPassERKNS_8PassInfoEb>
  a4:	mov	x0, x20
  a8:	ldp	x20, x19, [sp, #16]
  ac:	ldp	x29, x30, [sp], #32
  b0:	ret

00000000000000b4 <_ZN4llvm27createCoroCleanupLegacyPassEv>:
  b4:	stp	x29, x30, [sp, #-32]!
  b8:	str	x19, [sp, #16]
  bc:	mov	x29, sp
  c0:	mov	w0, #0x28                  	// #40
  c4:	bl	0 <_Znwm>
  c8:	mov	x19, x0
  cc:	bl	e0 <_ZN12_GLOBAL__N_117CoroCleanupLegacyC2Ev>
  d0:	mov	x0, x19
  d4:	ldr	x19, [sp, #16]
  d8:	ldp	x29, x30, [sp], #32
  dc:	ret

00000000000000e0 <_ZN12_GLOBAL__N_117CoroCleanupLegacyC2Ev>:
  e0:	sub	sp, sp, #0x20
  e4:	stp	x29, x30, [sp, #16]
  e8:	add	x29, sp, #0x10
  ec:	adrp	x8, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
  f0:	adrp	x10, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
  f4:	add	x8, x8, #0x0
  f8:	mov	w9, #0x2                   	// #2
  fc:	add	x10, x10, #0x0
 100:	stp	xzr, x8, [x0, #8]
 104:	str	w9, [x0, #24]
 108:	str	x10, [x0]
 10c:	str	xzr, [x0, #32]
 110:	bl	0 <_ZN4llvm12PassRegistry15getPassRegistryEv>
 114:	str	x0, [sp, #8]
 118:	adrp	x0, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 11c:	adrp	x1, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 120:	add	x0, x0, #0x0
 124:	add	x1, x1, #0x0
 128:	add	x2, sp, #0x8
 12c:	bl	0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 130:	ldp	x29, x30, [sp, #16]
 134:	add	sp, sp, #0x20
 138:	ret

000000000000013c <_ZN4llvm15callDefaultCtorIN12_GLOBAL__N_117CoroCleanupLegacyEEEPNS_4PassEv>:
 13c:	stp	x29, x30, [sp, #-32]!
 140:	str	x19, [sp, #16]
 144:	mov	x29, sp
 148:	mov	w0, #0x28                  	// #40
 14c:	bl	0 <_Znwm>
 150:	mov	x19, x0
 154:	bl	e0 <_ZN12_GLOBAL__N_117CoroCleanupLegacyC2Ev>
 158:	mov	x0, x19
 15c:	ldr	x19, [sp, #16]
 160:	ldp	x29, x30, [sp], #32
 164:	ret

0000000000000168 <_ZN12_GLOBAL__N_117CoroCleanupLegacyD2Ev>:
 168:	stp	x29, x30, [sp, #-32]!
 16c:	str	x19, [sp, #16]
 170:	mov	x29, sp
 174:	mov	x19, x0
 178:	ldr	x0, [x0, #32]
 17c:	adrp	x8, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 180:	add	x8, x8, #0x0
 184:	str	x8, [x19]
 188:	cbz	x0, 190 <_ZN12_GLOBAL__N_117CoroCleanupLegacyD2Ev+0x28>
 18c:	bl	694 <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_>
 190:	str	xzr, [x19, #32]
 194:	mov	x0, x19
 198:	ldr	x19, [sp, #16]
 19c:	ldp	x29, x30, [sp], #32
 1a0:	b	0 <_ZN4llvm4PassD2Ev>

00000000000001a4 <_ZN12_GLOBAL__N_117CoroCleanupLegacyD0Ev>:
 1a4:	stp	x29, x30, [sp, #-32]!
 1a8:	str	x19, [sp, #16]
 1ac:	mov	x29, sp
 1b0:	mov	x19, x0
 1b4:	ldr	x0, [x0, #32]
 1b8:	adrp	x8, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 1bc:	add	x8, x8, #0x0
 1c0:	str	x8, [x19]
 1c4:	cbz	x0, 1cc <_ZN12_GLOBAL__N_117CoroCleanupLegacyD0Ev+0x28>
 1c8:	bl	694 <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_>
 1cc:	mov	x0, x19
 1d0:	str	xzr, [x19, #32]
 1d4:	bl	0 <_ZN4llvm4PassD2Ev>
 1d8:	mov	x0, x19
 1dc:	ldr	x19, [sp, #16]
 1e0:	ldp	x29, x30, [sp], #32
 1e4:	b	0 <_ZdlPv>

00000000000001e8 <_ZNK12_GLOBAL__N_117CoroCleanupLegacy11getPassNameEv>:
 1e8:	adrp	x0, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 1ec:	add	x0, x0, #0x0
 1f0:	mov	w1, #0x11                  	// #17
 1f4:	ret

00000000000001f8 <_ZN12_GLOBAL__N_117CoroCleanupLegacy16doInitializationERN4llvm6ModuleE>:
 1f8:	sub	sp, sp, #0xa0
 1fc:	stp	x29, x30, [sp, #112]
 200:	str	x21, [sp, #128]
 204:	stp	x20, x19, [sp, #144]
 208:	add	x29, sp, #0x70
 20c:	mov	x20, x1
 210:	adrp	x1, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 214:	mov	x19, x0
 218:	add	x1, x1, #0x0
 21c:	mov	x0, sp
 220:	mov	w2, #0x70                  	// #112
 224:	bl	0 <memcpy>
 228:	mov	x1, sp
 22c:	mov	w2, #0x7                   	// #7
 230:	mov	x0, x20
 234:	bl	0 <_ZN4llvm4coro18declaresIntrinsicsERKNS_6ModuleESt16initializer_listINS_9StringRefEE>
 238:	tbz	w0, #0, 284 <_ZN12_GLOBAL__N_117CoroCleanupLegacy16doInitializationERN4llvm6ModuleE+0x8c>
 23c:	mov	w0, #0x70                  	// #112
 240:	bl	0 <_Znwm>
 244:	mov	x1, x20
 248:	mov	x21, x0
 24c:	bl	0 <_ZN4llvm4coro11LowererBaseC2ERNS_6ModuleE>
 250:	ldr	x8, [x21, #8]
 254:	mov	w9, #0x200                 	// #512
 258:	str	wzr, [x21, #80]
 25c:	strb	wzr, [x21, #86]
 260:	stp	x8, xzr, [x21, #64]
 264:	stp	xzr, xzr, [x21, #40]
 268:	strh	w9, [x21, #84]
 26c:	str	xzr, [x21, #56]
 270:	stp	xzr, xzr, [x21, #88]
 274:	ldr	x0, [x19, #32]
 278:	str	x21, [x19, #32]
 27c:	cbz	x0, 284 <_ZN12_GLOBAL__N_117CoroCleanupLegacy16doInitializationERN4llvm6ModuleE+0x8c>
 280:	bl	694 <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_>
 284:	ldp	x20, x19, [sp, #144]
 288:	ldr	x21, [sp, #128]
 28c:	ldp	x29, x30, [sp, #112]
 290:	mov	w0, wzr
 294:	add	sp, sp, #0xa0
 298:	ret

000000000000029c <_ZNK12_GLOBAL__N_117CoroCleanupLegacy16getAnalysisUsageERN4llvm13AnalysisUsageE>:
 29c:	ldr	x8, [x0, #32]
 2a0:	cbz	x8, 2a8 <_ZNK12_GLOBAL__N_117CoroCleanupLegacy16getAnalysisUsageERN4llvm13AnalysisUsageE+0xc>
 2a4:	ret
 2a8:	mov	w8, #0x1                   	// #1
 2ac:	strb	w8, [x1, #160]
 2b0:	ret

00000000000002b4 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE>:
 2b4:	sub	sp, sp, #0xa0
 2b8:	stp	x29, x30, [sp, #64]
 2bc:	stp	x28, x27, [sp, #80]
 2c0:	stp	x26, x25, [sp, #96]
 2c4:	stp	x24, x23, [sp, #112]
 2c8:	stp	x22, x21, [sp, #128]
 2cc:	stp	x20, x19, [sp, #144]
 2d0:	add	x29, sp, #0x40
 2d4:	ldr	x27, [x0, #32]
 2d8:	cbz	x27, 5d0 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x31c>
 2dc:	sub	x0, x29, #0x18
 2e0:	mov	x19, x1
 2e4:	bl	0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 2e8:	adrp	x21, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 2ec:	adrp	x26, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 2f0:	mov	w8, wzr
 2f4:	add	x28, x19, #0x48
 2f8:	add	x20, x27, #0x28
 2fc:	add	x21, x21, #0x0
 300:	add	x26, x26, #0x0
 304:	ldur	x9, [x29, #-24]
 308:	ldur	x10, [x29, #-16]
 30c:	cmp	x10, x28
 310:	b.eq	31c <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x68>  // b.none
 314:	ldur	x11, [x29, #-8]
 318:	b	32c <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x78>
 31c:	cmp	x28, x9
 320:	b.eq	550 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x29c>  // b.none
 324:	ldur	x11, [x29, #-8]
 328:	cbz	x11, 550 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x29c>
 32c:	ldr	x12, [x11, #8]
 330:	stur	x12, [x29, #-8]
 334:	ldrb	w13, [x10]
 338:	tbnz	w13, #2, 5f8 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x344>
 33c:	add	x13, x10, #0x10
 340:	cmp	x13, x12
 344:	b.ne	388 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0xd4>  // b.any
 348:	ldr	x10, [x10, #8]
 34c:	cmp	x9, x10
 350:	b.eq	384 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0xd0>  // b.none
 354:	ldrb	w12, [x10]
 358:	tbnz	w12, #2, 5f4 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x340>
 35c:	sub	x12, x10, #0x18
 360:	cmp	x10, #0x0
 364:	csel	x12, xzr, x12, eq  // eq = none
 368:	ldr	x13, [x12, #48]
 36c:	stur	x13, [x29, #-8]
 370:	ldrb	w14, [x10]
 374:	tbnz	w14, #2, 5f4 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x340>
 378:	add	x12, x12, #0x28
 37c:	cmp	x12, x13
 380:	b.eq	348 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x94>  // b.none
 384:	stur	x10, [x29, #-16]
 388:	ldrb	w10, [x11]
 38c:	tbnz	w10, #2, 618 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x364>
 390:	sub	x10, x11, #0x18
 394:	cmp	x11, #0x0
 398:	csel	x22, xzr, x10, eq  // eq = none
 39c:	cbz	x11, 634 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x380>
 3a0:	ldrb	w10, [x22, #16]
 3a4:	cmp	w10, #0x50
 3a8:	b.ne	308 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x54>  // b.any
 3ac:	ldur	x10, [x22, #-24]
 3b0:	cbz	x10, 308 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x54>
 3b4:	ldrb	w11, [x10, #16]
 3b8:	cbnz	w11, 308 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x54>
 3bc:	ldrb	w11, [x10, #33]
 3c0:	tbz	w11, #5, 308 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x54>
 3c4:	ldr	w11, [x10, #36]
 3c8:	sub	w10, w11, #0xe
 3cc:	cmp	w10, #0xc
 3d0:	b.hi	3e4 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x130>  // b.pmore
 3d4:	adr	x11, 308 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x54>
 3d8:	ldrb	w12, [x26, x10]
 3dc:	add	x11, x11, x12, lsl #2
 3e0:	br	x11
 3e4:	cmp	w11, #0x22
 3e8:	b.ne	308 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x54>  // b.any
 3ec:	add	x0, sp, #0x8
 3f0:	str	x22, [sp, #8]
 3f4:	bl	0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 3f8:	tbz	w0, #0, 654 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x3a0>
 3fc:	mov	x0, x20
 400:	mov	x1, x22
 404:	bl	0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 408:	mov	x0, x22
 40c:	mov	w1, wzr
 410:	bl	0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 414:	str	x0, [sp]
 418:	mov	x0, x22
 41c:	bl	0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 420:	mov	w23, w0
 424:	mov	x0, x22
 428:	bl	0 <_ZNK4llvm5Value10getContextEv>
 42c:	ldr	x8, [x27, #64]
 430:	mov	x24, x0
 434:	mov	w1, wzr
 438:	mov	x0, x8
 43c:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
 440:	str	x0, [sp, #8]
 444:	ldr	x0, [x27, #64]
 448:	mov	w1, wzr
 44c:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
 450:	str	x0, [sp, #16]
 454:	add	x1, sp, #0x8
 458:	mov	w2, #0x2                   	// #2
 45c:	mov	x0, x24
 460:	mov	w3, wzr
 464:	bl	0 <_ZN4llvm10StructType3getERNS_11LLVMContextENS_8ArrayRefIPNS_4TypeEEEb>
 468:	mov	w1, wzr
 46c:	mov	x24, x0
 470:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
 474:	mov	x25, x0
 478:	mov	x0, x20
 47c:	mov	x1, x22
 480:	bl	0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 484:	add	x0, sp, #0x8
 488:	mov	x1, x21
 48c:	bl	0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 490:	ldr	x2, [sp]
 494:	add	x4, sp, #0x8
 498:	mov	w1, #0x31                  	// #49
 49c:	mov	x0, x20
 4a0:	mov	x3, x25
 4a4:	bl	0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 4a8:	mov	x25, x0
 4ac:	add	x0, sp, #0x8
 4b0:	mov	x1, x21
 4b4:	bl	0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 4b8:	add	x5, sp, #0x8
 4bc:	mov	x0, x20
 4c0:	mov	x1, x24
 4c4:	mov	x2, x25
 4c8:	mov	w3, wzr
 4cc:	mov	w4, w23
 4d0:	bl	0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 4d4:	ldr	w8, [x24, #12]
 4d8:	cmp	w8, w23
 4dc:	b.ls	674 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x3c0>  // b.plast
 4e0:	ldr	x8, [x24, #16]
 4e4:	mov	x25, x0
 4e8:	add	x0, sp, #0x8
 4ec:	mov	x1, x21
 4f0:	ldr	x23, [x8, w23, uxtw #3]
 4f4:	bl	0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 4f8:	add	x3, sp, #0x8
 4fc:	mov	x0, x20
 500:	mov	x1, x23
 504:	mov	x2, x25
 508:	bl	0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 50c:	b	534 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x280>
 510:	ldr	x0, [x27, #8]
 514:	bl	0 <_ZN4llvm17ConstantTokenNone3getERNS_11LLVMContextE>
 518:	b	534 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x280>
 51c:	mov	w1, #0x1                   	// #1
 520:	mov	x0, x22
 524:	bl	0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 528:	b	534 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x280>
 52c:	ldr	x0, [x27, #8]
 530:	bl	0 <_ZN4llvm11ConstantInt7getTrueERNS_11LLVMContextE>
 534:	mov	x1, x0
 538:	mov	x0, x22
 53c:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
 540:	mov	x0, x22
 544:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
 548:	mov	w8, #0x1                   	// #1
 54c:	b	304 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x50>
 550:	tbz	w8, #0, 5d0 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x31c>
 554:	ldr	x1, [x19, #40]
 558:	sub	x0, x29, #0x18
 55c:	bl	0 <_ZN4llvm6legacy19FunctionPassManagerC1EPNS_6ModuleE>
 560:	add	x5, sp, #0x8
 564:	mov	w0, #0x1                   	// #1
 568:	mov	w3, #0x1                   	// #1
 56c:	mov	w1, wzr
 570:	mov	w2, wzr
 574:	mov	w4, wzr
 578:	str	xzr, [sp, #24]
 57c:	bl	0 <_ZN4llvm27createCFGSimplificationPassEjbbbbSt8functionIFbRKNS_8FunctionEEE>
 580:	mov	x1, x0
 584:	sub	x0, x29, #0x18
 588:	bl	0 <_ZN4llvm6legacy19FunctionPassManager3addEPNS_4PassE>
 58c:	ldr	x8, [sp, #24]
 590:	cbz	x8, 5a4 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x2f0>
 594:	add	x0, sp, #0x8
 598:	add	x1, sp, #0x8
 59c:	mov	w2, #0x3                   	// #3
 5a0:	blr	x8
 5a4:	sub	x0, x29, #0x18
 5a8:	bl	0 <_ZN4llvm6legacy19FunctionPassManager16doInitializationEv>
 5ac:	sub	x0, x29, #0x18
 5b0:	mov	x1, x19
 5b4:	bl	0 <_ZN4llvm6legacy19FunctionPassManager3runERNS_8FunctionE>
 5b8:	sub	x0, x29, #0x18
 5bc:	bl	0 <_ZN4llvm6legacy19FunctionPassManager14doFinalizationEv>
 5c0:	sub	x0, x29, #0x18
 5c4:	bl	0 <_ZN4llvm6legacy19FunctionPassManagerD1Ev>
 5c8:	mov	w0, #0x1                   	// #1
 5cc:	b	5d4 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x320>
 5d0:	mov	w0, wzr
 5d4:	ldp	x20, x19, [sp, #144]
 5d8:	ldp	x22, x21, [sp, #128]
 5dc:	ldp	x24, x23, [sp, #112]
 5e0:	ldp	x26, x25, [sp, #96]
 5e4:	ldp	x28, x27, [sp, #80]
 5e8:	ldp	x29, x30, [sp, #64]
 5ec:	add	sp, sp, #0xa0
 5f0:	ret
 5f4:	stur	x10, [x29, #-16]
 5f8:	adrp	x0, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 5fc:	adrp	x1, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 600:	adrp	x3, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 604:	add	x0, x0, #0x0
 608:	add	x1, x1, #0x0
 60c:	add	x3, x3, #0x0
 610:	mov	w2, #0x8b                  	// #139
 614:	bl	0 <__assert_fail>
 618:	adrp	x0, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 61c:	adrp	x1, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 620:	adrp	x3, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 624:	add	x0, x0, #0x0
 628:	add	x1, x1, #0x0
 62c:	add	x3, x3, #0x0
 630:	b	610 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x35c>
 634:	adrp	x0, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 638:	adrp	x1, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 63c:	adrp	x3, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 640:	add	x0, x0, #0x0
 644:	add	x1, x1, #0x0
 648:	add	x3, x3, #0x0
 64c:	mov	w2, #0x69                  	// #105
 650:	bl	0 <__assert_fail>
 654:	adrp	x0, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 658:	adrp	x1, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 65c:	adrp	x3, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 660:	add	x0, x0, #0x0
 664:	add	x1, x1, #0x0
 668:	add	x3, x3, #0x0
 66c:	mov	w2, #0x108                 	// #264
 670:	bl	0 <__assert_fail>
 674:	adrp	x0, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 678:	adrp	x1, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 67c:	adrp	x3, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 680:	add	x0, x0, #0x0
 684:	add	x1, x1, #0x0
 688:	add	x3, x3, #0x0
 68c:	mov	w2, #0x160                 	// #352
 690:	bl	0 <__assert_fail>

0000000000000694 <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_>:
 694:	cbz	x0, 6c4 <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_+0x30>
 698:	stp	x29, x30, [sp, #-32]!
 69c:	str	x19, [sp, #16]
 6a0:	mov	x29, sp
 6a4:	mov	x19, x0
 6a8:	ldr	x1, [x0, #40]!
 6ac:	cbz	x1, 6b4 <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_+0x20>
 6b0:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
 6b4:	mov	x0, x19
 6b8:	ldr	x19, [sp, #16]
 6bc:	ldp	x29, x30, [sp], #32
 6c0:	b	0 <_ZdlPv>
 6c4:	ret

Disassembly of section .text._ZN4llvm4Pass14doFinalizationERNS_6ModuleE:

0000000000000000 <_ZN4llvm4Pass14doFinalizationERNS_6ModuleE>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZNK4llvm8CallBase13getArgOperandEj:

0000000000000000 <_ZNK4llvm8CallBase13getArgOperandEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	w19, w1
  14:	mov	x20, x0
  18:	bl	0 <_ZNK4llvm8CallBase13getArgOperandEj>
  1c:	mov	w8, w0
  20:	mov	w21, #0x18                  	// #24
  24:	mneg	x8, x8, x21
  28:	mov	x0, x20
  2c:	add	x22, x20, x8
  30:	bl	0 <_ZNK4llvm8CallBase13getArgOperandEj>
  34:	ldr	w8, [x20, #20]
  38:	mov	w9, w0
  3c:	mneg	x9, x9, x21
  40:	add	x10, x22, x9
  44:	and	x9, x8, #0xfffffff
  48:	mneg	x8, x9, x21
  4c:	add	x8, x20, x8
  50:	sub	x10, x10, x8
  54:	sub	x10, x10, #0x18
  58:	mov	w11, #0xaaab                	// #43691
  5c:	lsr	x10, x10, #3
  60:	movk	w11, #0xaaaa, lsl #16
  64:	mul	w10, w10, w11
  68:	cmp	w10, w19
  6c:	b.ls	94 <_ZNK4llvm8CallBase13getArgOperandEj+0x94>  // b.plast
  70:	cmp	w9, w19
  74:	b.ls	b4 <_ZNK4llvm8CallBase13getArgOperandEj+0xb4>  // b.plast
  78:	mov	w9, #0x18                  	// #24
  7c:	umull	x9, w19, w9
  80:	ldr	x0, [x8, x9]
  84:	ldp	x20, x19, [sp, #32]
  88:	ldp	x22, x21, [sp, #16]
  8c:	ldp	x29, x30, [sp], #48
  90:	ret
  94:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  98:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  9c:	adrp	x3, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  a0:	add	x0, x0, #0x0
  a4:	add	x1, x1, #0x0
  a8:	add	x3, x3, #0x0
  ac:	mov	w2, #0x4df                 	// #1247
  b0:	bl	0 <__assert_fail>
  b4:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  b8:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  bc:	adrp	x3, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  c0:	add	x0, x0, #0x0
  c4:	add	x1, x1, #0x0
  c8:	add	x3, x3, #0x0
  cc:	mov	w2, #0x86a                 	// #2154
  d0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_:

0000000000000000 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	add	x8, x1, #0x48
  10:	str	x8, [x0]
  14:	ldr	x9, [x1, #80]
  18:	mov	x20, x0
  1c:	str	x9, [x20, #8]!
  20:	cmp	x9, x8
  24:	str	xzr, [x20, #8]
  28:	b.eq	6c <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x6c>  // b.none
  2c:	mov	x19, x0
  30:	mov	x0, x20
  34:	bl	0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  38:	ldr	x8, [x0, #48]
  3c:	mov	x0, x20
  40:	str	x8, [x19, #16]
  44:	bl	0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  48:	ldr	x8, [x19, #16]
  4c:	add	x9, x0, #0x28
  50:	cmp	x8, x9
  54:	b.ne	6c <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x6c>  // b.any
  58:	ldp	x9, x8, [x19]
  5c:	ldr	x8, [x8, #8]
  60:	cmp	x9, x8
  64:	str	x8, [x19, #8]
  68:	b.ne	30 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x30>  // b.any
  6c:	ldp	x20, x19, [sp, #16]
  70:	ldp	x29, x30, [sp], #32
  74:	ret

Disassembly of section .text._ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv:

0000000000000000 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	ldrb	w9, [x8]
  10:	tbnz	w9, #2, 28 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv+0x28>
  14:	sub	x9, x8, #0x18
  18:	cmp	x8, #0x0
  1c:	csel	x0, xzr, x9, eq  // eq = none
  20:	ldp	x29, x30, [sp], #16
  24:	ret
  28:	adrp	x0, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv>
  2c:	adrp	x1, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv>
  30:	adrp	x3, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv>
  34:	add	x0, x0, #0x0
  38:	add	x1, x1, #0x0
  3c:	add	x3, x3, #0x0
  40:	mov	w2, #0x8b                  	// #139
  44:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase25getNumTotalBundleOperandsEv:

0000000000000000 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
  14:	cbz	w0, 34 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x34>
  18:	mov	x0, x19
  1c:	bl	0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
  20:	mov	w20, w0
  24:	mov	x0, x19
  28:	bl	0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
  2c:	subs	w0, w0, w20
  30:	b.cc	40 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x40>  // b.lo, b.ul, b.last
  34:	ldp	x20, x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret
  40:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
  44:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
  48:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x710                 	// #1808
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv:

0000000000000000 <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #16]
   c:	cmp	w8, #0x50
  10:	b.eq	34 <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv+0x34>  // b.none
  14:	cmp	w8, #0x23
  18:	b.eq	2c <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv+0x2c>  // b.none
  1c:	cmp	w8, #0x1d
  20:	b.ne	40 <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv+0x40>  // b.any
  24:	mov	w0, #0x2                   	// #2
  28:	b	38 <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv+0x38>
  2c:	ldp	x29, x30, [sp], #16
  30:	b	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
  34:	mov	w0, wzr
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv>
  44:	adrp	x1, 0 <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv>
  48:	add	x0, x0, #0x0
  4c:	add	x1, x1, #0x0
  50:	mov	w2, #0x46a                 	// #1130
  54:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZNK4llvm8CallBase27getBundleOperandsStartIndexEv:

0000000000000000 <_ZNK4llvm8CallBase27getBundleOperandsStartIndexEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZNK4llvm8CallBase27getBundleOperandsStartIndexEv>
  14:	cbz	w0, 30 <_ZNK4llvm8CallBase27getBundleOperandsStartIndexEv+0x30>
  18:	mov	x0, x19
  1c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  20:	ldr	w0, [x0, #8]
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	ret
  30:	adrp	x0, 0 <_ZNK4llvm8CallBase27getBundleOperandsStartIndexEv>
  34:	adrp	x1, 0 <_ZNK4llvm8CallBase27getBundleOperandsStartIndexEv>
  38:	adrp	x3, 0 <_ZNK4llvm8CallBase27getBundleOperandsStartIndexEv>
  3c:	add	x0, x0, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0x6ed                 	// #1773
  4c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase25getBundleOperandsEndIndexEv:

0000000000000000 <_ZNK4llvm8CallBase25getBundleOperandsEndIndexEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZNK4llvm8CallBase25getBundleOperandsEndIndexEv>
  14:	cbz	w0, 34 <_ZNK4llvm8CallBase25getBundleOperandsEndIndexEv+0x34>
  18:	mov	x0, x19
  1c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  20:	add	x8, x0, x1
  24:	ldur	w0, [x8, #-4]
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	ret
  34:	adrp	x0, 0 <_ZNK4llvm8CallBase25getBundleOperandsEndIndexEv>
  38:	adrp	x1, 0 <_ZNK4llvm8CallBase25getBundleOperandsEndIndexEv>
  3c:	adrp	x3, 0 <_ZNK4llvm8CallBase25getBundleOperandsEndIndexEv>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x6f3                 	// #1779
  50:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase20getNumOperandBundlesEv:

0000000000000000 <_ZNK4llvm8CallBase20getNumOperandBundlesEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #20]
  10:	tbnz	w8, #31, 1c <_ZNK4llvm8CallBase20getNumOperandBundlesEv+0x1c>
  14:	mov	x19, xzr
  18:	b	30 <_ZNK4llvm8CallBase20getNumOperandBundlesEv+0x30>
  1c:	mov	x20, x0
  20:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  24:	ldr	w8, [x20, #20]
  28:	mov	x19, x0
  2c:	tbnz	w8, #31, 48 <_ZNK4llvm8CallBase20getNumOperandBundlesEv+0x48>
  30:	mov	x8, xzr
  34:	sub	x8, x8, x19
  38:	ldp	x20, x19, [sp, #16]
  3c:	lsr	x0, x8, #4
  40:	ldp	x29, x30, [sp], #32
  44:	ret
  48:	mov	x0, x20
  4c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  50:	add	x8, x0, x1
  54:	b	34 <_ZNK4llvm8CallBase20getNumOperandBundlesEv+0x34>

Disassembly of section .text._ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE:

0000000000000000 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x1, #40]
  10:	add	x9, x1, #0x18
  14:	add	x10, x8, #0x28
  18:	cmp	x9, x10
  1c:	stp	x8, x9, [x0, #8]
  20:	b.eq	68 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x68>  // b.none
  24:	ldr	x1, [x1, #48]
  28:	mov	x19, x0
  2c:	str	x1, [x29, #24]
  30:	cbz	x1, 40 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x40>
  34:	add	x0, x29, #0x18
  38:	mov	w2, #0x2                   	// #2
  3c:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  40:	add	x1, x29, #0x18
  44:	mov	x0, x19
  48:	bl	0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>
  4c:	ldr	x1, [x29, #24]
  50:	cbz	x1, 5c <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x5c>
  54:	add	x0, x29, #0x18
  58:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  5c:	ldr	x19, [sp, #16]
  60:	ldp	x29, x30, [sp], #32
  64:	ret
  68:	adrp	x0, 0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>
  6c:	adrp	x1, 0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>
  70:	adrp	x3, 0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x8e                  	// #142
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm13CoroSubFnInst8getIndexEv:

0000000000000000 <_ZNK4llvm13CoroSubFnInst8getIndexEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w1, #0x1                   	// #1
   c:	bl	0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  10:	cbz	x0, 3c <_ZNK4llvm13CoroSubFnInst8getIndexEv+0x3c>
  14:	ldrb	w8, [x0, #16]
  18:	cmp	w8, #0xd
  1c:	b.ne	5c <_ZNK4llvm13CoroSubFnInst8getIndexEv+0x5c>  // b.any
  20:	add	x0, x0, #0x18
  24:	bl	0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  28:	add	x8, x0, #0x1
  2c:	cmp	x8, #0x3
  30:	b.hi	7c <_ZNK4llvm13CoroSubFnInst8getIndexEv+0x7c>  // b.pmore
  34:	ldp	x29, x30, [sp], #16
  38:	ret
  3c:	adrp	x0, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  40:	adrp	x1, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  44:	adrp	x3, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  48:	add	x0, x0, #0x0
  4c:	add	x1, x1, #0x0
  50:	add	x3, x3, #0x0
  54:	mov	w2, #0x69                  	// #105
  58:	bl	0 <__assert_fail>
  5c:	adrp	x0, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  60:	adrp	x1, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  64:	adrp	x3, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  68:	add	x0, x0, #0x0
  6c:	add	x1, x1, #0x0
  70:	add	x3, x3, #0x0
  74:	mov	w2, #0x108                 	// #264
  78:	bl	0 <__assert_fail>
  7c:	adrp	x0, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  80:	adrp	x1, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  84:	adrp	x3, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  88:	add	x0, x0, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0x34                  	// #52
  98:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm5TwineC2EPKc:

0000000000000000 <_ZN4llvm5TwineC2EPKc>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w8, #0x101                 	// #257
   c:	stp	xzr, xzr, [x0]
  10:	strh	w8, [x0, #16]
  14:	ldrb	w8, [x1]
  18:	cbz	w8, 28 <_ZN4llvm5TwineC2EPKc+0x28>
  1c:	mov	w8, #0x3                   	// #3
  20:	str	x1, [x0]
  24:	b	2c <_ZN4llvm5TwineC2EPKc+0x2c>
  28:	mov	w8, #0x1                   	// #1
  2c:	strb	w8, [x0, #16]
  30:	bl	0 <_ZN4llvm5TwineC2EPKc>
  34:	tbz	w0, #0, 40 <_ZN4llvm5TwineC2EPKc+0x40>
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZN4llvm5TwineC2EPKc>
  44:	adrp	x1, 0 <_ZN4llvm5TwineC2EPKc>
  48:	adrp	x3, 0 <_ZN4llvm5TwineC2EPKc>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x112                 	// #274
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #48]
   8:	stp	x24, x23, [sp, #64]
   c:	stp	x22, x21, [sp, #80]
  10:	stp	x20, x19, [sp, #96]
  14:	add	x29, sp, #0x30
  18:	mov	x19, x0
  1c:	ldr	x0, [x0, #24]
  20:	mov	x20, x5
  24:	mov	w23, w4
  28:	mov	w24, w3
  2c:	mov	x21, x2
  30:	mov	x22, x1
  34:	bl	0 <_ZN4llvm4Type10getInt32TyERNS_11LLVMContextE>
  38:	mov	w1, w24
  3c:	mov	w2, wzr
  40:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
  44:	stur	x0, [x29, #-16]
  48:	ldr	x0, [x19, #24]
  4c:	bl	0 <_ZN4llvm4Type10getInt32TyERNS_11LLVMContextE>
  50:	mov	w1, w23
  54:	mov	w2, wzr
  58:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
  5c:	stur	x0, [x29, #-8]
  60:	cbz	x21, 10c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE+0x10c>
  64:	ldrb	w8, [x21, #16]
  68:	cmp	w8, #0x10
  6c:	b.ls	cc <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE+0xcc>  // b.plast
  70:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  74:	add	x1, x1, #0x0
  78:	add	x0, sp, #0x8
  7c:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  80:	sub	x2, x29, #0x10
  84:	add	x4, sp, #0x8
  88:	mov	w3, #0x2                   	// #2
  8c:	mov	x0, x22
  90:	mov	x1, x21
  94:	mov	x5, xzr
  98:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  9c:	mov	w1, #0x1                   	// #1
  a0:	mov	x21, x0
  a4:	bl	0 <_ZN4llvm17GetElementPtrInst13setIsInBoundsEb>
  a8:	ldp	x3, x4, [x19, #8]
  ac:	mov	x0, x19
  b0:	mov	x1, x21
  b4:	mov	x2, x20
  b8:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  bc:	mov	x0, x19
  c0:	mov	x1, x21
  c4:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  c8:	b	f0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE+0xf0>
  cc:	sub	x2, x29, #0x10
  d0:	mov	w3, #0x2                   	// #2
  d4:	mov	w4, #0x1                   	// #1
  d8:	mov	x0, x22
  dc:	mov	x1, x21
  e0:	mov	x5, xzr
  e4:	mov	x6, xzr
  e8:	bl	0 <_ZN4llvm12ConstantExpr16getGetElementPtrEPNS_4TypeEPNS_8ConstantENS_8ArrayRefIPNS_5ValueEEEbNS_8OptionalIjEES2_>
  ec:	mov	x21, x0
  f0:	mov	x0, x21
  f4:	ldp	x20, x19, [sp, #96]
  f8:	ldp	x22, x21, [sp, #80]
  fc:	ldp	x24, x23, [sp, #64]
 100:	ldp	x29, x30, [sp, #48]
 104:	add	sp, sp, #0x70
 108:	ret
 10c:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
 110:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
 114:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
 118:	add	x0, x0, #0x0
 11c:	add	x1, x1, #0x0
 120:	add	x3, x3, #0x0
 124:	mov	w2, #0x69                  	// #105
 128:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_4TypeEPNS_5ValueERKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_4TypeEPNS_5ValueERKNS_5TwineE>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	str	x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	mov	x21, x1
  1c:	mov	x22, x0
  20:	mov	w0, #0x40                  	// #64
  24:	mov	w1, #0x1                   	// #1
  28:	mov	x19, x3
  2c:	mov	x20, x2
  30:	bl	0 <_ZN4llvm4UsernwEmj>
  34:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_4TypeEPNS_5ValueERKNS_5TwineE>
  38:	mov	x23, x0
  3c:	add	x1, x1, #0x0
  40:	add	x0, sp, #0x8
  44:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_4TypeEPNS_5ValueERKNS_5TwineE>
  48:	add	x3, sp, #0x8
  4c:	mov	x0, x23
  50:	mov	x1, x21
  54:	mov	x2, x20
  58:	mov	x4, xzr
  5c:	bl	0 <_ZN4llvm8LoadInstC1EPNS_4TypeEPNS_5ValueERKNS_5TwineEPNS_11InstructionE>
  60:	ldp	x3, x4, [x22, #8]
  64:	mov	x0, x22
  68:	mov	x1, x23
  6c:	mov	x2, x19
  70:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_4TypeEPNS_5ValueERKNS_5TwineE>
  74:	mov	x0, x22
  78:	mov	x1, x23
  7c:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_4TypeEPNS_5ValueERKNS_5TwineE>
  80:	mov	x0, x23
  84:	ldp	x20, x19, [sp, #80]
  88:	ldp	x22, x21, [sp, #64]
  8c:	ldr	x23, [sp, #48]
  90:	ldp	x29, x30, [sp, #32]
  94:	add	sp, sp, #0x60
  98:	ret

Disassembly of section .text._ZN4llvm13TrackingMDRefaSEOS0_:

0000000000000000 <_ZN4llvm13TrackingMDRefaSEOS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	cmp	x1, x0
  14:	b.eq	40 <_ZN4llvm13TrackingMDRefaSEOS0_+0x40>  // b.none
  18:	mov	x20, x1
  1c:	ldr	x1, [x19]
  20:	cbz	x1, 2c <_ZN4llvm13TrackingMDRefaSEOS0_+0x2c>
  24:	mov	x0, x19
  28:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  2c:	ldr	x8, [x20]
  30:	mov	x0, x19
  34:	mov	x1, x20
  38:	str	x8, [x19]
  3c:	bl	0 <_ZN4llvm13TrackingMDRefaSEOS0_>
  40:	mov	x0, x19
  44:	ldp	x20, x19, [sp, #16]
  48:	ldp	x29, x30, [sp], #32
  4c:	ret

Disassembly of section .text._ZN4llvm13TrackingMDRef7retrackERS0_:

0000000000000000 <_ZN4llvm13TrackingMDRef7retrackERS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x1
  10:	ldr	x1, [x0]
  14:	ldr	x8, [x19]
  18:	cmp	x1, x8
  1c:	b.ne	40 <_ZN4llvm13TrackingMDRef7retrackERS0_+0x40>  // b.any
  20:	cbz	x1, 34 <_ZN4llvm13TrackingMDRef7retrackERS0_+0x34>
  24:	mov	x2, x0
  28:	mov	x0, x19
  2c:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  30:	str	xzr, [x19]
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret
  40:	adrp	x0, 0 <_ZN4llvm13TrackingMDRef7retrackERS0_>
  44:	adrp	x1, 0 <_ZN4llvm13TrackingMDRef7retrackERS0_>
  48:	adrp	x3, 0 <_ZN4llvm13TrackingMDRef7retrackERS0_>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x5e                  	// #94
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm5APInt12getSExtValueEv:

0000000000000000 <_ZNK4llvm5APInt12getSExtValueEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #8]
  10:	mov	x19, x0
  14:	cmp	w8, #0x40
  18:	b.hi	34 <_ZNK4llvm5APInt12getSExtValueEv+0x34>  // b.pmore
  1c:	cbz	w8, 58 <_ZNK4llvm5APInt12getSExtValueEv+0x58>
  20:	ldr	x9, [x19]
  24:	neg	x8, x8
  28:	lsl	x9, x9, x8
  2c:	asr	x0, x9, x8
  30:	b	4c <_ZNK4llvm5APInt12getSExtValueEv+0x4c>
  34:	mov	x0, x19
  38:	bl	0 <_ZNK4llvm5APInt12getSExtValueEv>
  3c:	cmp	w0, #0x41
  40:	b.cs	78 <_ZNK4llvm5APInt12getSExtValueEv+0x78>  // b.hs, b.nlast
  44:	ldr	x8, [x19]
  48:	ldr	x0, [x8]
  4c:	ldr	x19, [sp, #16]
  50:	ldp	x29, x30, [sp], #32
  54:	ret
  58:	adrp	x0, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  5c:	adrp	x1, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  60:	adrp	x3, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  64:	add	x0, x0, #0x0
  68:	add	x1, x1, #0x0
  6c:	add	x3, x3, #0x0
  70:	mov	w2, #0x307                 	// #775
  74:	bl	0 <__assert_fail>
  78:	adrp	x0, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  7c:	adrp	x1, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  80:	adrp	x3, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  84:	add	x0, x0, #0x0
  88:	add	x1, x1, #0x0
  8c:	add	x3, x3, #0x0
  90:	mov	w2, #0x663                 	// #1635
  94:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm5APInt16getMinSignedBitsEv:

0000000000000000 <_ZNK4llvm5APInt16getMinSignedBitsEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #8]
  10:	mov	x19, x0
  14:	sub	w1, w8, #0x1
  18:	bl	0 <_ZNK4llvm5APInt16getMinSignedBitsEv>
  1c:	ldr	w20, [x19, #8]
  20:	tbz	w0, #0, 30 <_ZNK4llvm5APInt16getMinSignedBitsEv+0x30>
  24:	mov	x0, x19
  28:	bl	0 <_ZNK4llvm5APInt16getMinSignedBitsEv>
  2c:	b	54 <_ZNK4llvm5APInt16getMinSignedBitsEv+0x54>
  30:	cmp	w20, #0x40
  34:	b.hi	4c <_ZNK4llvm5APInt16getMinSignedBitsEv+0x4c>  // b.pmore
  38:	ldr	x8, [x19]
  3c:	clz	x8, x8
  40:	add	w8, w20, w8
  44:	sub	w0, w8, #0x40
  48:	b	54 <_ZNK4llvm5APInt16getMinSignedBitsEv+0x54>
  4c:	mov	x0, x19
  50:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
  54:	sub	w8, w20, w0
  58:	ldp	x20, x19, [sp, #16]
  5c:	add	w0, w8, #0x1
  60:	ldp	x29, x30, [sp], #32
  64:	ret

Disassembly of section .text._ZNK4llvm5APInt16countLeadingOnesEv:

0000000000000000 <_ZNK4llvm5APInt16countLeadingOnesEv>:
   0:	ldr	w8, [x0, #8]
   4:	cmp	w8, #0x40
   8:	b.hi	30 <_ZNK4llvm5APInt16countLeadingOnesEv+0x30>  // b.pmore
   c:	ldr	x9, [x0]
  10:	neg	x8, x8
  14:	lsl	x8, x9, x8
  18:	mvn	x9, x8
  1c:	cmn	x8, #0x1
  20:	clz	x8, x9
  24:	mov	w9, #0x40                  	// #64
  28:	csel	w0, w9, w8, eq  // eq = none
  2c:	ret
  30:	b	0 <_ZNK4llvm5APInt24countLeadingOnesSlowCaseEv>

Disassembly of section .text._ZNK4llvm5APIntixEj:

0000000000000000 <_ZNK4llvm5APIntixEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, w1
  10:	b.ls	44 <_ZNK4llvm5APIntixEj+0x44>  // b.plast
  14:	mov	w9, #0x1                   	// #1
  18:	cmp	w8, #0x40
  1c:	lsl	x8, x9, x1
  20:	b.ls	30 <_ZNK4llvm5APIntixEj+0x30>  // b.plast
  24:	ldr	x9, [x0]
  28:	lsr	w10, w1, #6
  2c:	add	x0, x9, w10, uxtw #3
  30:	ldr	x9, [x0]
  34:	tst	x9, x8
  38:	cset	w0, ne  // ne = any
  3c:	ldp	x29, x30, [sp], #16
  40:	ret
  44:	adrp	x0, 0 <_ZNK4llvm5APIntixEj>
  48:	adrp	x1, 0 <_ZNK4llvm5APIntixEj>
  4c:	adrp	x3, 0 <_ZNK4llvm5APIntixEj>
  50:	add	x0, x0, #0x0
  54:	add	x1, x1, #0x0
  58:	add	x3, x3, #0x0
  5c:	mov	w2, #0x472                 	// #1138
  60:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCastENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCastENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineE>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	str	x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	ldr	x8, [x2]
  1c:	mov	x19, x2
  20:	cmp	x8, x3
  24:	b.eq	90 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCastENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineE+0x90>  // b.none
  28:	ldrb	w8, [x19, #16]
  2c:	mov	x22, x3
  30:	mov	w23, w1
  34:	cmp	w8, #0x10
  38:	b.ls	ac <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCastENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineE+0xac>  // b.plast
  3c:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCastENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineE>
  40:	mov	x21, x0
  44:	add	x1, x1, #0x0
  48:	add	x0, sp, #0x8
  4c:	mov	x20, x4
  50:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCastENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineE>
  54:	add	x3, sp, #0x8
  58:	mov	w0, w23
  5c:	mov	x1, x19
  60:	mov	x2, x22
  64:	mov	x4, xzr
  68:	bl	0 <_ZN4llvm8CastInst6CreateENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineEPS1_>
  6c:	ldp	x3, x4, [x21, #8]
  70:	mov	x19, x0
  74:	mov	x0, x21
  78:	mov	x1, x19
  7c:	mov	x2, x20
  80:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCastENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineE>
  84:	mov	x0, x21
  88:	mov	x1, x19
  8c:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCastENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineE>
  90:	mov	x0, x19
  94:	ldp	x20, x19, [sp, #80]
  98:	ldp	x22, x21, [sp, #64]
  9c:	ldr	x23, [sp, #48]
  a0:	ldp	x29, x30, [sp, #32]
  a4:	add	sp, sp, #0x60
  a8:	ret
  ac:	mov	w0, w23
  b0:	mov	x1, x19
  b4:	mov	x2, x22
  b8:	ldp	x20, x19, [sp, #80]
  bc:	ldp	x22, x21, [sp, #64]
  c0:	ldr	x23, [sp, #48]
  c4:	ldp	x29, x30, [sp, #32]
  c8:	mov	w3, wzr
  cc:	add	sp, sp, #0x60
  d0:	b	0 <_ZN4llvm12ConstantExpr7getCastEjPNS_8ConstantEPNS_4TypeEb>

Disassembly of section .text._ZNK4llvm24IRBuilderDefaultInserter12InsertHelperEPNS_11InstructionERKNS_5TwineEPNS_10BasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS1_Lb1ELb0EvEELb0ELb0EEE:

0000000000000000 <_ZNK4llvm24IRBuilderDefaultInserter12InsertHelperEPNS_11InstructionERKNS_5TwineEPNS_10BasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS1_Lb1ELb0EvEELb0ELb0EEE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x2
  14:	mov	x20, x1
  18:	cbz	x3, 38 <_ZNK4llvm24IRBuilderDefaultInserter12InsertHelperEPNS_11InstructionERKNS_5TwineEPNS_10BasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS1_Lb1ELb0EvEELb0ELb0EEE+0x38>
  1c:	add	x0, x3, #0x28
  20:	mov	x1, x20
  24:	mov	x21, x4
  28:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  2c:	add	x1, x20, #0x18
  30:	mov	x0, x21
  34:	bl	0 <_ZNK4llvm24IRBuilderDefaultInserter12InsertHelperEPNS_11InstructionERKNS_5TwineEPNS_10BasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS1_Lb1ELb0EvEELb0ELb0EEE>
  38:	mov	x0, x20
  3c:	mov	x1, x19
  40:	ldp	x20, x19, [sp, #32]
  44:	ldr	x21, [sp, #16]
  48:	ldp	x29, x30, [sp], #48
  4c:	b	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>

Disassembly of section .text._ZNK4llvm13IRBuilderBase20SetInstDebugLocationEPNS_11InstructionE:

0000000000000000 <_ZNK4llvm13IRBuilderBase20SetInstDebugLocationEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x0]
  10:	cbz	x8, 48 <_ZNK4llvm13IRBuilderBase20SetInstDebugLocationEPNS_11InstructionE+0x48>
  14:	mov	x19, x1
  18:	add	x0, x29, #0x18
  1c:	mov	w2, #0x2                   	// #2
  20:	mov	x1, x8
  24:	str	x8, [x29, #24]
  28:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  2c:	add	x0, x19, #0x30
  30:	add	x1, x29, #0x18
  34:	bl	0 <_ZNK4llvm13IRBuilderBase20SetInstDebugLocationEPNS_11InstructionE>
  38:	ldr	x1, [x29, #24]
  3c:	cbz	x1, 48 <_ZNK4llvm13IRBuilderBase20SetInstDebugLocationEPNS_11InstructionE+0x48>
  40:	add	x0, x29, #0x18
  44:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  48:	ldr	x19, [sp, #16]
  4c:	ldp	x29, x30, [sp], #32
  50:	ret

Disassembly of section .text._ZN4llvm10ilist_baseILb1EE16insertBeforeImplERNS_15ilist_node_baseILb1EEES4_:

0000000000000000 <_ZN4llvm10ilist_baseILb1EE16insertBeforeImplERNS_15ilist_node_baseILb1EEES4_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	ldr	x9, [x1]
  10:	tst	x1, #0x7
  14:	and	x10, x8, #0xfffffffffffffff8
  18:	bfxil	x8, x9, #0, #3
  1c:	stp	x8, x0, [x1]
  20:	str	x1, [x10, #8]
  24:	b.ne	40 <_ZN4llvm10ilist_baseILb1EE16insertBeforeImplERNS_15ilist_node_baseILb1EEES4_+0x40>  // b.any
  28:	ldr	x8, [x0]
  2c:	and	x8, x8, #0x7
  30:	orr	x8, x8, x1
  34:	str	x8, [x0]
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZN4llvm10ilist_baseILb1EE16insertBeforeImplERNS_15ilist_node_baseILb1EEES4_>
  44:	adrp	x1, 0 <_ZN4llvm10ilist_baseILb1EE16insertBeforeImplERNS_15ilist_node_baseILb1EEES4_>
  48:	adrp	x3, 0 <_ZN4llvm10ilist_baseILb1EE16insertBeforeImplERNS_15ilist_node_baseILb1EEES4_>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0xb3                  	// #179
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm5Twine7isValidEv:

0000000000000000 <_ZNK4llvm5Twine7isValidEv>:
   0:	ldrb	w9, [x0, #16]
   4:	ldrb	w8, [x0, #17]
   8:	cmp	w9, #0x1
   c:	b.hi	1c <_ZNK4llvm5Twine7isValidEv+0x1c>  // b.pmore
  10:	cmp	w8, #0x1
  14:	b.ne	78 <_ZNK4llvm5Twine7isValidEv+0x78>  // b.any
  18:	b	80 <_ZNK4llvm5Twine7isValidEv+0x80>
  1c:	cbz	w8, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  20:	cmp	w8, #0x1
  24:	b.ne	38 <_ZNK4llvm5Twine7isValidEv+0x38>  // b.any
  28:	cmp	w9, #0x2
  2c:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  30:	mov	w8, #0x1                   	// #1
  34:	b	40 <_ZNK4llvm5Twine7isValidEv+0x40>
  38:	cmp	w9, #0x2
  3c:	b.ne	58 <_ZNK4llvm5Twine7isValidEv+0x58>  // b.any
  40:	ldr	x9, [x0]
  44:	ldrb	w10, [x9, #16]
  48:	cbz	w10, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  4c:	ldrb	w9, [x9, #17]
  50:	cmp	w9, #0x1
  54:	b.eq	78 <_ZNK4llvm5Twine7isValidEv+0x78>  // b.none
  58:	cmp	w8, #0x2
  5c:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  60:	ldr	x8, [x0, #8]
  64:	ldrb	w9, [x8, #16]
  68:	cbz	w9, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  6c:	ldrb	w8, [x8, #17]
  70:	cmp	w8, #0x1
  74:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  78:	mov	w0, wzr
  7c:	ret
  80:	mov	w0, #0x1                   	// #1
  84:	ret

Disassembly of section .text._ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	x8, [x1]
  1c:	mov	x19, x5
  20:	mov	x20, x4
  24:	mov	x21, x3
  28:	ldrb	w9, [x8, #8]
  2c:	mov	x22, x2
  30:	mov	x23, x1
  34:	mov	x24, x0
  38:	cmp	w9, #0x10
  3c:	b.ne	48 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0x48>  // b.any
  40:	ldr	x8, [x8, #16]
  44:	ldr	x8, [x8]
  48:	cbz	x8, dc <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0xdc>
  4c:	ldrb	w9, [x8, #8]
  50:	cmp	w9, #0xf
  54:	b.ne	fc <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0xfc>  // b.any
  58:	ldr	x8, [x8, #24]
  5c:	cbz	x24, 88 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0x88>
  60:	cmp	x8, x24
  64:	b.eq	8c <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0x8c>  // b.none
  68:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  6c:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  70:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x3a1                 	// #929
  84:	bl	0 <__assert_fail>
  88:	mov	x24, x8
  8c:	add	w25, w21, #0x1
  90:	mov	w0, #0x48                  	// #72
  94:	mov	w1, w25
  98:	bl	0 <_ZN4llvm4UsernwEmj>
  9c:	mov	x1, x24
  a0:	mov	x2, x23
  a4:	mov	x3, x22
  a8:	mov	x4, x21
  ac:	mov	w5, w25
  b0:	mov	x6, x20
  b4:	mov	x7, x19
  b8:	mov	x26, x0
  bc:	bl	0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  c0:	mov	x0, x26
  c4:	ldp	x20, x19, [sp, #64]
  c8:	ldp	x22, x21, [sp, #48]
  cc:	ldp	x24, x23, [sp, #32]
  d0:	ldp	x26, x25, [sp, #16]
  d4:	ldp	x29, x30, [sp], #80
  d8:	ret
  dc:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  e0:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  e4:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x69                  	// #105
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
 100:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
 104:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x108                 	// #264
 118:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x21, x3
  1c:	mov	x22, x2
  20:	mov	x26, x1
  24:	mov	x23, x0
  28:	mov	x0, x1
  2c:	mov	x1, x2
  30:	mov	x2, x3
  34:	mov	x3, x4
  38:	mov	x24, x7
  3c:	mov	x19, x6
  40:	mov	w25, w5
  44:	mov	x20, x4
  48:	bl	0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  4c:	mov	w8, w25
  50:	mov	w9, #0x18                  	// #24
  54:	mneg	x8, x8, x9
  58:	mov	x1, x0
  5c:	add	x3, x23, x8
  60:	mov	w2, #0x22                  	// #34
  64:	mov	x0, x23
  68:	mov	w4, w25
  6c:	mov	x5, x24
  70:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
  74:	mov	x0, x26
  78:	mov	x1, x21
  7c:	mov	x2, x20
  80:	str	x26, [x23, #56]
  84:	bl	0 <_ZN4llvm17GetElementPtrInst14getIndexedTypeEPNS_4TypeENS_8ArrayRefIPNS_5ValueEEE>
  88:	ldr	x8, [x23]
  8c:	str	x0, [x23, #64]
  90:	ldrb	w9, [x8, #8]
  94:	cmp	w9, #0x10
  98:	b.ne	a4 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0xa4>  // b.any
  9c:	ldr	x8, [x8, #16]
  a0:	ldr	x8, [x8]
  a4:	cbz	x8, ec <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0xec>
  a8:	ldrb	w9, [x8, #8]
  ac:	cmp	w9, #0xf
  b0:	b.ne	10c <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0x10c>  // b.any
  b4:	ldr	x8, [x8, #24]
  b8:	cmp	x0, x8
  bc:	b.ne	12c <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0x12c>  // b.any
  c0:	mov	x0, x23
  c4:	mov	x1, x22
  c8:	mov	x2, x21
  cc:	mov	x3, x20
  d0:	mov	x4, x19
  d4:	ldp	x20, x19, [sp, #64]
  d8:	ldp	x22, x21, [sp, #48]
  dc:	ldp	x24, x23, [sp, #32]
  e0:	ldp	x26, x25, [sp, #16]
  e4:	ldp	x29, x30, [sp], #80
  e8:	b	0 <_ZN4llvm17GetElementPtrInst4initEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineE>
  ec:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  f0:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  f4:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  f8:	add	x0, x0, #0x0
  fc:	add	x1, x1, #0x0
 100:	add	x3, x3, #0x0
 104:	mov	w2, #0x69                  	// #105
 108:	bl	0 <__assert_fail>
 10c:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 110:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 114:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 118:	add	x0, x0, #0x0
 11c:	add	x1, x1, #0x0
 120:	add	x3, x3, #0x0
 124:	mov	w2, #0x108                 	// #264
 128:	bl	0 <__assert_fail>
 12c:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 130:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 134:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 138:	add	x0, x0, #0x0
 13c:	add	x1, x1, #0x0
 140:	add	x3, x3, #0x0
 144:	mov	w2, #0x46a                 	// #1130
 148:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE:

0000000000000000 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x2
  14:	mov	x21, x1
  18:	mov	x1, x2
  1c:	mov	x2, x3
  20:	mov	x20, x3
  24:	bl	0 <_ZN4llvm17GetElementPtrInst14getIndexedTypeEPNS_4TypeENS_8ArrayRefIPNS_5ValueEEE>
  28:	cbz	x0, cc <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xcc>
  2c:	ldr	x9, [x21]
  30:	ldr	w8, [x9, #8]
  34:	and	w10, w8, #0xff
  38:	cmp	w10, #0x10
  3c:	b.ne	50 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x50>  // b.any
  40:	ldr	x8, [x9, #16]
  44:	ldr	x8, [x8]
  48:	cbz	x8, 128 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x128>
  4c:	ldr	w8, [x8, #8]
  50:	and	w9, w8, #0xff
  54:	cmp	w9, #0xf
  58:	b.ne	ec <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xec>  // b.any
  5c:	lsr	w1, w8, #8
  60:	bl	0 <_ZN4llvm11PointerType3getEPNS_4TypeEj>
  64:	ldr	x8, [x21]
  68:	ldrb	w9, [x8, #8]
  6c:	cmp	w9, #0x10
  70:	b.ne	80 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x80>  // b.any
  74:	cbz	x8, 10c <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x10c>
  78:	ldr	w1, [x8, #32]
  7c:	b	bc <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xbc>
  80:	cbz	x20, a4 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xa4>
  84:	lsl	x8, x20, #3
  88:	ldr	x9, [x19], #8
  8c:	ldr	x9, [x9]
  90:	ldrb	w10, [x9, #8]
  94:	cmp	w10, #0x10
  98:	b.eq	b4 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xb4>  // b.none
  9c:	subs	x8, x8, #0x8
  a0:	b.ne	88 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x88>  // b.any
  a4:	ldp	x20, x19, [sp, #32]
  a8:	ldr	x21, [sp, #16]
  ac:	ldp	x29, x30, [sp], #48
  b0:	ret
  b4:	cbz	x9, 10c <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x10c>
  b8:	ldr	w1, [x9, #32]
  bc:	ldp	x20, x19, [sp, #32]
  c0:	ldr	x21, [sp, #16]
  c4:	ldp	x29, x30, [sp], #48
  c8:	b	0 <_ZN4llvm10VectorType3getEPNS_4TypeENS_12ElementCountE>
  cc:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  d0:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  d4:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  d8:	add	x0, x0, #0x0
  dc:	add	x1, x1, #0x0
  e0:	add	x3, x3, #0x0
  e4:	mov	w2, #0x375                 	// #885
  e8:	bl	0 <__assert_fail>
  ec:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  f0:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  f4:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  f8:	add	x0, x0, #0x0
  fc:	add	x1, x1, #0x0
 100:	add	x3, x3, #0x0
 104:	mov	w2, #0x108                 	// #264
 108:	bl	0 <__assert_fail>
 10c:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 110:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 114:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 118:	add	x0, x0, #0x0
 11c:	add	x1, x1, #0x0
 120:	add	x3, x3, #0x0
 124:	b	140 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x140>
 128:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 12c:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 130:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 134:	add	x0, x0, #0x0
 138:	add	x1, x1, #0x0
 13c:	add	x3, x3, #0x0
 140:	mov	w2, #0x69                  	// #105
 144:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13isa_impl_wrapINS_13CoroSubFnInstEPKNS_13IntrinsicInstES4_E4doitERKS4_:

0000000000000000 <_ZN4llvm13isa_impl_wrapINS_13CoroSubFnInstEPKNS_13IntrinsicInstES4_E4doitERKS4_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	cbz	x8, 34 <_ZN4llvm13isa_impl_wrapINS_13CoroSubFnInstEPKNS_13IntrinsicInstES4_E4doitERKS4_+0x34>
  10:	ldur	x8, [x8, #-24]
  14:	ldrb	w9, [x8, #16]
  18:	cmp	w9, #0x0
  1c:	csel	x8, x8, xzr, eq  // eq = none
  20:	ldr	w8, [x8, #36]
  24:	cmp	w8, #0x22
  28:	cset	w0, eq  // eq = none
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_13CoroSubFnInstEPKNS_13IntrinsicInstES4_E4doitERKS4_>
  38:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_13CoroSubFnInstEPKNS_13IntrinsicInstES4_E4doitERKS4_>
  3c:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_13CoroSubFnInstEPKNS_13IntrinsicInstES4_E4doitERKS4_>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x69                  	// #105
  50:	bl	0 <__assert_fail>

Disassembly of section .text._ZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_:

0000000000000000 <_ZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_>:
   0:	sub	sp, sp, #0x20
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	mov	x8, x0
  10:	stp	x1, x2, [sp]
  14:	adrp	x0, 0 <_ZSt15__once_callable>
  18:	ldr	x1, [x0]
  1c:	add	x0, x0, #0x0
  20:	blr	x1
  24:	mrs	x9, tpidr_el0
  28:	mov	x10, sp
  2c:	str	x10, [x9, x0]
  30:	adrp	x0, 0 <_ZSt11__once_call>
  34:	ldr	x1, [x0]
  38:	add	x0, x0, #0x0
  3c:	blr	x1
  40:	adrp	x11, 0 <__pthread_key_create>
  44:	ldr	x11, [x11]
  48:	adrp	x10, 0 <_ZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_>
  4c:	add	x10, x10, #0x0
  50:	str	x10, [x9, x0]
  54:	cbz	x11, 78 <_ZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_+0x78>
  58:	adrp	x1, 0 <__once_proxy>
  5c:	ldr	x1, [x1]
  60:	mov	x0, x8
  64:	bl	0 <pthread_once>
  68:	cbnz	w0, 7c <_ZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_+0x7c>
  6c:	ldp	x29, x30, [sp, #16]
  70:	add	sp, sp, #0x20
  74:	ret
  78:	mov	w0, #0xffffffff            	// #-1
  7c:	bl	0 <_ZSt20__throw_system_errori>

Disassembly of section .text._ZZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_ENUlvE0_8__invokeEv:

0000000000000000 <_ZZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_ENUlvE0_8__invokeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	adrp	x0, 0 <_ZSt15__once_callable>
   c:	ldr	x1, [x0]
  10:	add	x0, x0, #0x0
  14:	blr	x1
  18:	mrs	x8, tpidr_el0
  1c:	ldr	x8, [x8, x0]
  20:	ldp	x1, x9, [x8]
  24:	ldr	x0, [x9]
  28:	ldp	x29, x30, [sp], #16
  2c:	br	x1

CoroEarly.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>:
   0:	sub	sp, sp, #0x20
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	str	x0, [sp, #8]
  10:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
  14:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
  18:	add	x0, x0, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x2, sp, #0x8
  24:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
  28:	ldp	x29, x30, [sp, #16]
  2c:	add	sp, sp, #0x20
  30:	ret

0000000000000034 <_ZL33initializeCoroEarlyLegacyPassOnceRN4llvm12PassRegistryE>:
  34:	stp	x29, x30, [sp, #-32]!
  38:	stp	x20, x19, [sp, #16]
  3c:	mov	x29, sp
  40:	mov	x19, x0
  44:	mov	w0, #0x50                  	// #80
  48:	bl	0 <_Znwm>
  4c:	adrp	x8, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
  50:	add	x8, x8, #0x0
  54:	mov	w9, #0x20                  	// #32
  58:	adrp	x10, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
  5c:	add	x10, x10, #0x0
  60:	stp	x8, x9, [x0]
  64:	mov	w8, #0xa                   	// #10
  68:	stp	x10, x8, [x0, #16]
  6c:	adrp	x8, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
  70:	add	x8, x8, #0x0
  74:	str	x8, [x0, #32]
  78:	adrp	x8, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
  7c:	mov	x20, x0
  80:	add	x8, x8, #0x0
  84:	strh	wzr, [x0, #40]
  88:	strb	wzr, [x0, #42]
  8c:	stp	xzr, xzr, [x0, #48]
  90:	stp	xzr, x8, [x0, #64]
  94:	mov	w2, #0x1                   	// #1
  98:	mov	x0, x19
  9c:	mov	x1, x20
  a0:	bl	0 <_ZN4llvm12PassRegistry12registerPassERKNS_8PassInfoEb>
  a4:	mov	x0, x20
  a8:	ldp	x20, x19, [sp, #16]
  ac:	ldp	x29, x30, [sp], #32
  b0:	ret

00000000000000b4 <_ZN4llvm25createCoroEarlyLegacyPassEv>:
  b4:	stp	x29, x30, [sp, #-32]!
  b8:	str	x19, [sp, #16]
  bc:	mov	x29, sp
  c0:	mov	w0, #0x28                  	// #40
  c4:	bl	0 <_Znwm>
  c8:	mov	x19, x0
  cc:	bl	e0 <_ZN12_GLOBAL__N_115CoroEarlyLegacyC2Ev>
  d0:	mov	x0, x19
  d4:	ldr	x19, [sp, #16]
  d8:	ldp	x29, x30, [sp], #32
  dc:	ret

00000000000000e0 <_ZN12_GLOBAL__N_115CoroEarlyLegacyC2Ev>:
  e0:	sub	sp, sp, #0x20
  e4:	stp	x29, x30, [sp, #16]
  e8:	add	x29, sp, #0x10
  ec:	adrp	x8, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
  f0:	adrp	x10, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
  f4:	add	x8, x8, #0x0
  f8:	mov	w9, #0x2                   	// #2
  fc:	add	x10, x10, #0x0
 100:	stp	xzr, x8, [x0, #8]
 104:	str	w9, [x0, #24]
 108:	str	x10, [x0]
 10c:	str	xzr, [x0, #32]
 110:	bl	0 <_ZN4llvm12PassRegistry15getPassRegistryEv>
 114:	str	x0, [sp, #8]
 118:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 11c:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 120:	add	x0, x0, #0x0
 124:	add	x1, x1, #0x0
 128:	add	x2, sp, #0x8
 12c:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 130:	ldp	x29, x30, [sp, #16]
 134:	add	sp, sp, #0x20
 138:	ret

000000000000013c <_ZN4llvm15callDefaultCtorIN12_GLOBAL__N_115CoroEarlyLegacyEEEPNS_4PassEv>:
 13c:	stp	x29, x30, [sp, #-32]!
 140:	str	x19, [sp, #16]
 144:	mov	x29, sp
 148:	mov	w0, #0x28                  	// #40
 14c:	bl	0 <_Znwm>
 150:	mov	x19, x0
 154:	bl	e0 <_ZN12_GLOBAL__N_115CoroEarlyLegacyC2Ev>
 158:	mov	x0, x19
 15c:	ldr	x19, [sp, #16]
 160:	ldp	x29, x30, [sp], #32
 164:	ret

0000000000000168 <_ZN12_GLOBAL__N_115CoroEarlyLegacyD2Ev>:
 168:	stp	x29, x30, [sp, #-32]!
 16c:	str	x19, [sp, #16]
 170:	mov	x29, sp
 174:	mov	x19, x0
 178:	ldr	x0, [x0, #32]
 17c:	adrp	x8, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 180:	add	x8, x8, #0x0
 184:	str	x8, [x19]
 188:	cbz	x0, 190 <_ZN12_GLOBAL__N_115CoroEarlyLegacyD2Ev+0x28>
 18c:	bl	d10 <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_>
 190:	str	xzr, [x19, #32]
 194:	mov	x0, x19
 198:	ldr	x19, [sp, #16]
 19c:	ldp	x29, x30, [sp], #32
 1a0:	b	0 <_ZN4llvm4PassD2Ev>

00000000000001a4 <_ZN12_GLOBAL__N_115CoroEarlyLegacyD0Ev>:
 1a4:	stp	x29, x30, [sp, #-32]!
 1a8:	str	x19, [sp, #16]
 1ac:	mov	x29, sp
 1b0:	mov	x19, x0
 1b4:	ldr	x0, [x0, #32]
 1b8:	adrp	x8, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 1bc:	add	x8, x8, #0x0
 1c0:	str	x8, [x19]
 1c4:	cbz	x0, 1cc <_ZN12_GLOBAL__N_115CoroEarlyLegacyD0Ev+0x28>
 1c8:	bl	d10 <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_>
 1cc:	mov	x0, x19
 1d0:	str	xzr, [x19, #32]
 1d4:	bl	0 <_ZN4llvm4PassD2Ev>
 1d8:	mov	x0, x19
 1dc:	ldr	x19, [sp, #16]
 1e0:	ldp	x29, x30, [sp], #32
 1e4:	b	0 <_ZdlPv>

00000000000001e8 <_ZNK12_GLOBAL__N_115CoroEarlyLegacy11getPassNameEv>:
 1e8:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 1ec:	add	x0, x0, #0x0
 1f0:	mov	w1, #0x20                  	// #32
 1f4:	ret

00000000000001f8 <_ZN12_GLOBAL__N_115CoroEarlyLegacy16doInitializationERN4llvm6ModuleE>:
 1f8:	sub	sp, sp, #0xe0
 1fc:	stp	x29, x30, [sp, #176]
 200:	str	x21, [sp, #192]
 204:	stp	x20, x19, [sp, #208]
 208:	add	x29, sp, #0xb0
 20c:	mov	x20, x1
 210:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 214:	mov	x19, x0
 218:	add	x1, x1, #0x0
 21c:	mov	x0, sp
 220:	mov	w2, #0xb0                  	// #176
 224:	bl	0 <memcpy>
 228:	mov	x1, sp
 22c:	mov	w2, #0xb                   	// #11
 230:	mov	x0, x20
 234:	bl	0 <_ZN4llvm4coro18declaresIntrinsicsERKNS_6ModuleESt16initializer_listINS_9StringRefEE>
 238:	tbz	w0, #0, 2ac <_ZN12_GLOBAL__N_115CoroEarlyLegacy16doInitializationERN4llvm6ModuleE+0xb4>
 23c:	mov	w0, #0x80                  	// #128
 240:	bl	0 <_Znwm>
 244:	mov	x1, x20
 248:	mov	x21, x0
 24c:	bl	0 <_ZN4llvm4coro11LowererBaseC2ERNS_6ModuleE>
 250:	ldr	x0, [x21, #8]
 254:	mov	w8, #0x200                 	// #512
 258:	str	wzr, [x21, #80]
 25c:	strb	wzr, [x21, #86]
 260:	stp	x0, xzr, [x21, #64]
 264:	stp	xzr, xzr, [x21, #40]
 268:	strh	w8, [x21, #84]
 26c:	str	xzr, [x21, #56]
 270:	stp	xzr, xzr, [x21, #88]
 274:	bl	0 <_ZN4llvm4Type9getVoidTyERNS_11LLVMContextE>
 278:	ldr	x8, [x21, #16]
 27c:	mov	x1, sp
 280:	mov	w2, #0x1                   	// #1
 284:	mov	w3, wzr
 288:	str	x8, [sp]
 28c:	bl	0 <_ZN4llvm12FunctionType3getEPNS_4TypeENS_8ArrayRefIS2_EEb>
 290:	mov	w1, wzr
 294:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
 298:	stp	x0, xzr, [x21, #112]
 29c:	ldr	x0, [x19, #32]
 2a0:	str	x21, [x19, #32]
 2a4:	cbz	x0, 2ac <_ZN12_GLOBAL__N_115CoroEarlyLegacy16doInitializationERN4llvm6ModuleE+0xb4>
 2a8:	bl	d10 <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_>
 2ac:	ldp	x20, x19, [sp, #208]
 2b0:	ldr	x21, [sp, #192]
 2b4:	ldp	x29, x30, [sp, #176]
 2b8:	mov	w0, wzr
 2bc:	add	sp, sp, #0xe0
 2c0:	ret

00000000000002c4 <_ZNK12_GLOBAL__N_115CoroEarlyLegacy16getAnalysisUsageERN4llvm13AnalysisUsageE>:
 2c4:	mov	x0, x1
 2c8:	b	0 <_ZN4llvm13AnalysisUsage15setPreservesCFGEv>

00000000000002cc <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE>:
 2cc:	sub	sp, sp, #0x100
 2d0:	stp	x29, x30, [sp, #160]
 2d4:	stp	x28, x27, [sp, #176]
 2d8:	stp	x26, x25, [sp, #192]
 2dc:	stp	x24, x23, [sp, #208]
 2e0:	stp	x22, x21, [sp, #224]
 2e4:	stp	x20, x19, [sp, #240]
 2e8:	add	x29, sp, #0xa0
 2ec:	ldr	x19, [x0, #32]
 2f0:	cbz	x19, ad4 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x808>
 2f4:	adrp	x8, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 2f8:	ldr	d0, [x8]
 2fc:	add	x8, sp, #0x48
 300:	add	x8, x8, #0x10
 304:	add	x0, sp, #0x30
 308:	mov	x25, x1
 30c:	str	x8, [sp, #72]
 310:	str	d0, [sp, #80]
 314:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 318:	adrp	x27, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 31c:	mov	w22, wzr
 320:	add	x20, x25, #0x48
 324:	add	x28, x19, #0x28
 328:	add	x27, x27, #0x0
 32c:	stp	xzr, x28, [sp, #24]
 330:	ldr	x8, [sp, #56]
 334:	cmp	x8, x20
 338:	b.eq	344 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x78>  // b.none
 33c:	ldr	x23, [sp, #64]
 340:	b	358 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x8c>
 344:	ldr	x9, [sp, #48]
 348:	cmp	x20, x9
 34c:	b.eq	a88 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x7bc>  // b.none
 350:	ldr	x23, [sp, #64]
 354:	cbz	x23, a88 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x7bc>
 358:	ldr	x9, [x23, #8]
 35c:	str	x9, [sp, #64]
 360:	ldrb	w10, [x8]
 364:	tbnz	w10, #2, b00 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x834>
 368:	add	x10, x8, #0x10
 36c:	cmp	x10, x9
 370:	b.ne	3b8 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xec>  // b.any
 374:	ldr	x9, [sp, #48]
 378:	ldr	x8, [x8, #8]
 37c:	cmp	x9, x8
 380:	b.eq	3b4 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xe8>  // b.none
 384:	ldrb	w10, [x8]
 388:	tbnz	w10, #2, afc <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x830>
 38c:	sub	x10, x8, #0x18
 390:	cmp	x8, #0x0
 394:	csel	x10, xzr, x10, eq  // eq = none
 398:	ldr	x11, [x10, #48]
 39c:	str	x11, [sp, #64]
 3a0:	ldrb	w12, [x8]
 3a4:	tbnz	w12, #2, afc <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x830>
 3a8:	add	x10, x10, #0x28
 3ac:	cmp	x10, x11
 3b0:	b.eq	378 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xac>  // b.none
 3b4:	str	x8, [sp, #56]
 3b8:	ldrb	w8, [x23]
 3bc:	tbnz	w8, #2, b20 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x854>
 3c0:	sub	x8, x23, #0x18
 3c4:	cmp	x23, #0x0
 3c8:	csel	x26, xzr, x8, eq  // eq = none
 3cc:	mov	x0, x26
 3d0:	str	xzr, [sp, #40]
 3d4:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 3d8:	cmp	x0, #0x8
 3dc:	str	x0, [sp, #40]
 3e0:	b.cc	330 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x64>  // b.lo, b.ul, b.last
 3e4:	add	x0, sp, #0x28
 3e8:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 3ec:	cbz	x0, 330 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x64>
 3f0:	ldr	w8, [x0, #36]
 3f4:	sub	w8, w8, #0x13
 3f8:	cmp	w8, #0x10
 3fc:	b.hi	330 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x64>  // b.pmore
 400:	adr	x9, 330 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x64>
 404:	ldrh	w10, [x27, x8, lsl #1]
 408:	add	x9, x9, x10, lsl #2
 40c:	br	x9
 410:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 414:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 418:	mov	w2, #0x12                  	// #18
 41c:	mov	w4, #0x1                   	// #1
 420:	mov	x0, x25
 424:	add	x1, x1, #0x0
 428:	add	x3, x3, #0x0
 42c:	mov	w22, #0x1                   	// #1
 430:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 434:	b	330 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x64>
 438:	cbz	x23, c44 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x978>
 43c:	ldrb	w8, [x26, #16]
 440:	cmp	w8, #0x50
 444:	b.ne	bb4 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x8e8>  // b.any
 448:	ldur	x8, [x26, #-24]
 44c:	cbz	x8, bb4 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x8e8>
 450:	ldrb	w9, [x8, #16]
 454:	cbnz	w9, bb4 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x8e8>
 458:	ldrb	w9, [x8, #33]
 45c:	tbz	w9, #5, bb4 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x8e8>
 460:	ldr	w8, [x8, #36]
 464:	cmp	w8, #0x1e
 468:	b.ne	bb4 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x8e8>  // b.any
 46c:	mov	x0, x26
 470:	mov	w1, wzr
 474:	mov	x21, x27
 478:	mov	x27, x25
 47c:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 480:	mov	x24, x0
 484:	mov	x0, x26
 488:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 48c:	ldr	x8, [x19, #64]
 490:	mov	w28, w0
 494:	mov	x0, x8
 498:	bl	0 <_ZN4llvm4Type9getInt8TyERNS_11LLVMContextE>
 49c:	mov	x25, x0
 4a0:	ldr	x8, [x19, #112]
 4a4:	ldr	x0, [x19, #8]
 4a8:	sub	x1, x29, #0x18
 4ac:	mov	w2, #0x3                   	// #3
 4b0:	mov	w3, wzr
 4b4:	stp	x8, x8, [x29, #-24]
 4b8:	stur	x25, [x29, #-8]
 4bc:	bl	0 <_ZN4llvm10StructType3getERNS_11LLVMContextENS_8ArrayRefIPNS_4TypeEEEb>
 4c0:	ldr	x8, [x19]
 4c4:	mov	x22, x0
 4c8:	mov	x0, x8
 4cc:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
 4d0:	mov	x1, x22
 4d4:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 4d8:	ldr	w8, [x0, #12]
 4dc:	and	w8, w8, #0x7fffffff
 4e0:	cmp	w8, #0x2
 4e4:	b.ls	c60 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x994>  // b.plast
 4e8:	cbz	w28, c80 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x9b4>
 4ec:	ldr	x8, [x0, #32]
 4f0:	mov	w9, w28
 4f4:	mov	x0, x26
 4f8:	add	x8, x9, x8
 4fc:	sub	x8, x8, #0x1
 500:	udiv	x8, x8, x9
 504:	mul	w23, w8, w9
 508:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 50c:	ldr	x28, [sp, #32]
 510:	mov	w22, w0
 514:	mov	x1, x26
 518:	mov	x0, x28
 51c:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 520:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 524:	tst	w22, #0x1
 528:	sub	x0, x29, #0x18
 52c:	add	x1, x1, #0x0
 530:	cneg	w22, w23, ne  // ne = any
 534:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 538:	sub	x4, x29, #0x18
 53c:	mov	x0, x28
 540:	mov	x1, x25
 544:	mov	x2, x24
 548:	mov	w3, w22
 54c:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 550:	mov	x1, x0
 554:	mov	x0, x26
 558:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
 55c:	mov	x0, x26
 560:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
 564:	mov	w22, #0x1                   	// #1
 568:	mov	x25, x27
 56c:	mov	x27, x21
 570:	b	330 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x64>
 574:	cbz	x23, ca0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x9d4>
 578:	ldrb	w8, [x26, #16]
 57c:	cmp	w8, #0x50
 580:	b.ne	b98 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x8cc>  // b.any
 584:	ldur	x8, [x26, #-24]
 588:	cbz	x8, b98 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x8cc>
 58c:	ldrb	w9, [x8, #16]
 590:	cbnz	w9, b98 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x8cc>
 594:	ldrb	w9, [x8, #33]
 598:	tbz	w9, #5, b98 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x8cc>
 59c:	ldr	w8, [x8, #36]
 5a0:	cmp	w8, #0x18
 5a4:	b.ne	b98 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x8cc>  // b.any
 5a8:	mov	x0, x26
 5ac:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 5b0:	cbnz	x1, a3c <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x770>
 5b4:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 5b8:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 5bc:	mov	w2, #0x12                  	// #18
 5c0:	mov	w4, #0x1                   	// #1
 5c4:	mov	x0, x25
 5c8:	add	x1, x1, #0x0
 5cc:	add	x3, x3, #0x0
 5d0:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 5d4:	mov	x0, x26
 5d8:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
 5dc:	ldr	x8, [x26, #8]
 5e0:	stur	x8, [x29, #-40]
 5e4:	cbz	x8, a44 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x778>
 5e8:	sub	x0, x29, #0x28
 5ec:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 5f0:	cbz	x0, b58 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x88c>
 5f4:	ldrb	w8, [x0, #16]
 5f8:	mov	x24, x0
 5fc:	cmp	w8, #0x50
 600:	b.ne	650 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x384>  // b.any
 604:	ldur	x8, [x24, #-24]
 608:	cbz	x8, 650 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x384>
 60c:	ldrb	w9, [x8, #16]
 610:	cbnz	w9, 650 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x384>
 614:	ldrb	w9, [x8, #33]
 618:	tbz	w9, #5, 650 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x384>
 61c:	ldr	w8, [x8, #36]
 620:	cmp	w8, #0x12
 624:	b.ne	650 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x384>  // b.any
 628:	ldr	x8, [x24, #56]
 62c:	mov	x0, x24
 630:	stur	x8, [x29, #-24]
 634:	bl	0 <_ZNK4llvm5Value10getContextEv>
 638:	mov	x1, x0
 63c:	sub	x0, x29, #0x18
 640:	mov	w2, #0xffffffff            	// #-1
 644:	mov	w3, #0x19                  	// #25
 648:	bl	0 <_ZNK4llvm13AttributeList12addAttributeERNS_11LLVMContextEjNS_9Attribute8AttrKindE>
 64c:	str	x0, [x24, #56]
 650:	ldur	x8, [x29, #-40]
 654:	cbz	x8, b78 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x8ac>
 658:	ldr	x8, [x8, #8]
 65c:	b	5e0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x314>
 660:	cbz	x23, cf4 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xa28>
 664:	ldrb	w8, [x26, #16]
 668:	cmp	w8, #0x50
 66c:	b.ne	bd0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x904>  // b.any
 670:	ldur	x8, [x26, #-24]
 674:	cbz	x8, bd0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x904>
 678:	ldrb	w9, [x8, #16]
 67c:	cbnz	w9, bd0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x904>
 680:	ldrb	w9, [x8, #33]
 684:	tbz	w9, #5, bd0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x904>
 688:	ldr	w8, [x8, #36]
 68c:	cmp	w8, #0x15
 690:	b.ne	bd0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x904>  // b.any
 694:	mov	x0, x26
 698:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 69c:	tbz	w0, #0, a34 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x768>
 6a0:	b	a3c <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x770>
 6a4:	cbz	x23, cbc <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x9f0>
 6a8:	ldrb	w8, [x26, #16]
 6ac:	cmp	w8, #0x50
 6b0:	b.ne	bec <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x920>  // b.any
 6b4:	ldur	x8, [x26, #-24]
 6b8:	cbz	x8, bec <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x920>
 6bc:	ldrb	w9, [x8, #16]
 6c0:	cbnz	w9, bec <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x920>
 6c4:	ldrb	w9, [x8, #33]
 6c8:	tbz	w9, #5, bec <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x920>
 6cc:	ldr	w8, [x8, #36]
 6d0:	cmp	w8, #0x17
 6d4:	b.ne	bec <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x920>  // b.any
 6d8:	add	x0, sp, #0x48
 6dc:	sub	x1, x29, #0x18
 6e0:	stur	x26, [x29, #-24]
 6e4:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 6e8:	b	a3c <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x770>
 6ec:	ldr	x1, [sp, #40]
 6f0:	mov	x0, x19
 6f4:	mov	w2, wzr
 6f8:	bl	d44 <_ZN12_GLOBAL__N_17Lowerer20lowerResumeOrDestroyEN4llvm8CallSiteENS1_13CoroSubFnInst10ResumeKindE>
 6fc:	b	a3c <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x770>
 700:	ldr	x1, [sp, #40]
 704:	mov	w2, #0x1                   	// #1
 708:	mov	x0, x19
 70c:	mov	w22, #0x1                   	// #1
 710:	bl	d44 <_ZN12_GLOBAL__N_17Lowerer20lowerResumeOrDestroyEN4llvm8CallSiteENS1_13CoroSubFnInst10ResumeKindE>
 714:	b	330 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x64>
 718:	cbz	x23, c28 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x95c>
 71c:	ldrb	w8, [x26, #16]
 720:	cmp	w8, #0x50
 724:	b.ne	b3c <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x870>  // b.any
 728:	ldur	x8, [x26, #-24]
 72c:	cbz	x8, b3c <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x870>
 730:	ldrb	w9, [x8, #16]
 734:	cbnz	w9, b3c <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x870>
 738:	ldrb	w8, [x8, #33]
 73c:	tbz	w8, #5, b3c <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x870>
 740:	mov	x0, x26
 744:	mov	w1, wzr
 748:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 74c:	ldr	x8, [x19, #16]
 750:	mov	x22, x0
 754:	mov	w1, wzr
 758:	mov	x0, x8
 75c:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
 760:	mov	x23, x0
 764:	mov	x0, x28
 768:	mov	x1, x26
 76c:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 770:	adrp	x21, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 774:	add	x21, x21, #0x0
 778:	sub	x0, x29, #0x18
 77c:	mov	x1, x21
 780:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 784:	sub	x4, x29, #0x18
 788:	mov	w1, #0x31                  	// #49
 78c:	mov	x0, x28
 790:	mov	x2, x22
 794:	mov	x3, x23
 798:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 79c:	mov	x22, x0
 7a0:	sub	x0, x29, #0x18
 7a4:	mov	x1, x21
 7a8:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 7ac:	sub	x2, x29, #0x18
 7b0:	mov	x0, x28
 7b4:	mov	x1, x22
 7b8:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 7bc:	ldr	x22, [x19, #32]
 7c0:	mov	x23, x0
 7c4:	sub	x0, x29, #0x18
 7c8:	mov	x1, x21
 7cc:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 7d0:	sub	x4, x29, #0x18
 7d4:	mov	w1, #0x20                  	// #32
 7d8:	mov	x0, x28
 7dc:	mov	x2, x23
 7e0:	mov	x3, x22
 7e4:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 7e8:	b	9dc <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x710>
 7ec:	cbz	x23, c28 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x95c>
 7f0:	ldrb	w8, [x26, #16]
 7f4:	cmp	w8, #0x50
 7f8:	b.ne	b3c <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x870>  // b.any
 7fc:	ldur	x8, [x26, #-24]
 800:	cbz	x8, b3c <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x870>
 804:	ldrb	w9, [x8, #16]
 808:	cbnz	w9, b3c <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x870>
 80c:	ldrb	w8, [x8, #33]
 810:	tbz	w8, #5, b3c <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x870>
 814:	ldr	x8, [x19, #120]
 818:	cbnz	x8, 9a0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x6d4>
 81c:	ldr	x24, [x19, #64]
 820:	mov	x0, x26
 824:	bl	0 <_ZNK4llvm11Instruction9getModuleEv>
 828:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 82c:	mov	x28, x0
 830:	mov	w2, #0xe                   	// #14
 834:	mov	x0, x24
 838:	add	x1, x1, #0x0
 83c:	bl	0 <_ZN4llvm10StructType6createERNS_11LLVMContextENS_9StringRefE>
 840:	mov	w1, wzr
 844:	mov	x27, x25
 848:	mov	x25, x0
 84c:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
 850:	mov	x23, x0
 854:	mov	x0, x24
 858:	bl	0 <_ZN4llvm4Type9getVoidTyERNS_11LLVMContextE>
 85c:	sub	x1, x29, #0x18
 860:	mov	w2, #0x1                   	// #1
 864:	mov	w3, wzr
 868:	stur	x23, [x29, #-24]
 86c:	bl	0 <_ZN4llvm12FunctionType3getEPNS_4TypeENS_8ArrayRefIS2_EEb>
 870:	mov	w1, wzr
 874:	mov	x23, x0
 878:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
 87c:	stp	x0, x0, [x29, #-24]
 880:	sub	x1, x29, #0x18
 884:	mov	w2, #0x2                   	// #2
 888:	mov	x0, x25
 88c:	mov	w3, wzr
 890:	bl	0 <_ZN4llvm10StructType7setBodyENS_8ArrayRefIPNS_4TypeEEEb>
 894:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 898:	sub	x0, x29, #0x18
 89c:	add	x1, x1, #0x0
 8a0:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 8a4:	mov	w0, #0x78                  	// #120
 8a8:	bl	0 <_ZN4llvm4UsernwEm>
 8ac:	sub	x4, x29, #0x18
 8b0:	mov	w2, #0x8                   	// #8
 8b4:	mov	w3, #0xffffffff            	// #-1
 8b8:	mov	x1, x23
 8bc:	mov	x5, x28
 8c0:	mov	x22, x0
 8c4:	bl	0 <_ZN4llvm8FunctionC1EPNS_12FunctionTypeENS_11GlobalValue12LinkageTypesEjRKNS_5TwineEPNS_6ModuleE>
 8c8:	ldrh	w8, [x22, #18]
 8cc:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 8d0:	sub	x0, x29, #0x18
 8d4:	add	x1, x1, #0x0
 8d8:	and	w8, w8, #0xffffc00f
 8dc:	orr	w8, w8, #0x80
 8e0:	strh	w8, [x22, #18]
 8e4:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 8e8:	mov	w0, #0x40                  	// #64
 8ec:	bl	0 <_Znwm>
 8f0:	sub	x2, x29, #0x18
 8f4:	mov	x1, x24
 8f8:	mov	x3, x22
 8fc:	mov	x4, xzr
 900:	mov	x23, x0
 904:	bl	0 <_ZN4llvm10BasicBlockC1ERNS_11LLVMContextERKNS_5TwineEPNS_8FunctionEPS0_>
 908:	mov	w0, #0x38                  	// #56
 90c:	mov	w1, wzr
 910:	bl	0 <_ZN4llvm4UsernwEmj>
 914:	mov	x1, x24
 918:	mov	x2, x23
 91c:	bl	0 <_ZN4llvm10ReturnInstC1ERNS_11LLVMContextEPNS_10BasicBlockE>
 920:	sub	x1, x29, #0x28
 924:	mov	w2, #0x2                   	// #2
 928:	mov	x0, x25
 92c:	stp	x22, x22, [x29, #-40]
 930:	mov	x25, x27
 934:	bl	0 <_ZN4llvm14ConstantStruct3getEPNS_10StructTypeENS_8ArrayRefIPNS_8ConstantEEE>
 938:	mov	x22, x0
 93c:	mov	w0, #0x58                  	// #88
 940:	mov	w1, #0x1                   	// #1
 944:	bl	0 <_ZN4llvm4UsernwEmj>
 948:	ldr	x23, [x22]
 94c:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 950:	mov	x24, x0
 954:	sub	x0, x29, #0x18
 958:	add	x1, x1, #0x0
 95c:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 960:	mov	x1, x28
 964:	ldr	x28, [sp, #32]
 968:	sub	x6, x29, #0x18
 96c:	mov	w3, #0x1                   	// #1
 970:	mov	w4, #0x8                   	// #8
 974:	mov	x0, x24
 978:	adrp	x27, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 97c:	mov	x2, x23
 980:	mov	x5, x22
 984:	mov	x7, xzr
 988:	strb	wzr, [sp, #16]
 98c:	str	wzr, [sp, #8]
 990:	str	wzr, [sp]
 994:	add	x27, x27, #0x0
 998:	bl	0 <_ZN4llvm14GlobalVariableC1ERNS_6ModuleEPNS_4TypeEbNS_11GlobalValue12LinkageTypesEPNS_8ConstantERKNS_5TwineEPS0_NS5_15ThreadLocalModeEjb>
 99c:	str	x24, [x19, #120]
 9a0:	mov	x0, x28
 9a4:	mov	x1, x26
 9a8:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 9ac:	ldr	x22, [x19, #120]
 9b0:	ldr	x23, [x19, #16]
 9b4:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 9b8:	sub	x0, x29, #0x18
 9bc:	add	x1, x1, #0x0
 9c0:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 9c4:	sub	x4, x29, #0x18
 9c8:	mov	w1, #0x31                  	// #49
 9cc:	mov	x0, x28
 9d0:	mov	x2, x22
 9d4:	mov	x3, x23
 9d8:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 9dc:	mov	x1, x0
 9e0:	mov	x0, x26
 9e4:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
 9e8:	mov	x0, x26
 9ec:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
 9f0:	b	a3c <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x770>
 9f4:	cbz	x23, cd8 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xa0c>
 9f8:	ldrb	w8, [x26, #16]
 9fc:	cmp	w8, #0x50
 a00:	b.ne	c08 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x93c>  // b.any
 a04:	ldur	x8, [x26, #-24]
 a08:	cbz	x8, c08 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x93c>
 a0c:	ldrb	w9, [x8, #16]
 a10:	cbnz	w9, c08 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x93c>
 a14:	ldrb	w9, [x8, #33]
 a18:	tbz	w9, #5, c08 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x93c>
 a1c:	ldr	w8, [x8, #36]
 a20:	cmp	w8, #0x23
 a24:	b.ne	c08 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x93c>  // b.any
 a28:	mov	x0, x26
 a2c:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 a30:	tbz	w0, #0, a3c <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x770>
 a34:	add	x0, sp, #0x28
 a38:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 a3c:	mov	w22, #0x1                   	// #1
 a40:	b	330 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x64>
 a44:	mov	x0, x26
 a48:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 a4c:	ldrb	w8, [x26, #16]
 a50:	cmp	w8, #0x50
 a54:	b.ne	b98 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x8cc>  // b.any
 a58:	ldur	x8, [x26, #-24]
 a5c:	cbz	x8, b98 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x8cc>
 a60:	ldrb	w9, [x8, #16]
 a64:	cbnz	w9, b98 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x8cc>
 a68:	ldrb	w9, [x8, #33]
 a6c:	tbz	w9, #5, b98 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x8cc>
 a70:	ldr	w8, [x8, #36]
 a74:	cmp	w8, #0x18
 a78:	b.ne	b98 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x8cc>  // b.any
 a7c:	mov	w22, #0x1                   	// #1
 a80:	str	x26, [sp, #24]
 a84:	b	330 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x64>
 a88:	ldr	x21, [sp, #24]
 a8c:	cbz	x21, ab8 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x7ec>
 a90:	ldr	w8, [sp, #80]
 a94:	cbz	w8, ab8 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x7ec>
 a98:	ldr	x19, [sp, #72]
 a9c:	lsl	x20, x8, #3
 aa0:	ldr	x0, [x19], #8
 aa4:	mov	w1, wzr
 aa8:	mov	x2, x21
 aac:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 ab0:	subs	x20, x20, #0x8
 ab4:	b.ne	aa0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x7d4>  // b.any
 ab8:	ldr	x0, [sp, #72]
 abc:	add	x8, sp, #0x48
 ac0:	add	x8, x8, #0x10
 ac4:	cmp	x0, x8
 ac8:	b.eq	ad8 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x80c>  // b.none
 acc:	bl	0 <free>
 ad0:	b	ad8 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x80c>
 ad4:	mov	w22, wzr
 ad8:	and	w0, w22, #0x1
 adc:	ldp	x20, x19, [sp, #240]
 ae0:	ldp	x22, x21, [sp, #224]
 ae4:	ldp	x24, x23, [sp, #208]
 ae8:	ldp	x26, x25, [sp, #192]
 aec:	ldp	x28, x27, [sp, #176]
 af0:	ldp	x29, x30, [sp, #160]
 af4:	add	sp, sp, #0x100
 af8:	ret
 afc:	str	x8, [sp, #56]
 b00:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 b04:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 b08:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 b0c:	add	x0, x0, #0x0
 b10:	add	x1, x1, #0x0
 b14:	add	x3, x3, #0x0
 b18:	mov	w2, #0x8b                  	// #139
 b1c:	bl	0 <__assert_fail>
 b20:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 b24:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 b28:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 b2c:	add	x0, x0, #0x0
 b30:	add	x1, x1, #0x0
 b34:	add	x3, x3, #0x0
 b38:	b	b18 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x84c>
 b3c:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 b40:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 b44:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 b48:	add	x0, x0, #0x0
 b4c:	add	x1, x1, #0x0
 b50:	add	x3, x3, #0x0
 b54:	b	c20 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x954>
 b58:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 b5c:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 b60:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 b64:	add	x0, x0, #0x0
 b68:	add	x1, x1, #0x0
 b6c:	add	x3, x3, #0x0
 b70:	mov	w2, #0x69                  	// #105
 b74:	bl	0 <__assert_fail>
 b78:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 b7c:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 b80:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 b84:	add	x0, x0, #0x0
 b88:	add	x1, x1, #0x0
 b8c:	add	x3, x3, #0x0
 b90:	mov	w2, #0x8d                  	// #141
 b94:	bl	0 <__assert_fail>
 b98:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 b9c:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 ba0:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 ba4:	add	x0, x0, #0x0
 ba8:	add	x1, x1, #0x0
 bac:	add	x3, x3, #0x0
 bb0:	b	c20 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x954>
 bb4:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 bb8:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 bbc:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 bc0:	add	x0, x0, #0x0
 bc4:	add	x1, x1, #0x0
 bc8:	add	x3, x3, #0x0
 bcc:	b	c20 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x954>
 bd0:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 bd4:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 bd8:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 bdc:	add	x0, x0, #0x0
 be0:	add	x1, x1, #0x0
 be4:	add	x3, x3, #0x0
 be8:	b	c20 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x954>
 bec:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 bf0:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 bf4:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 bf8:	add	x0, x0, #0x0
 bfc:	add	x1, x1, #0x0
 c00:	add	x3, x3, #0x0
 c04:	b	c20 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x954>
 c08:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 c0c:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 c10:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 c14:	add	x0, x0, #0x0
 c18:	add	x1, x1, #0x0
 c1c:	add	x3, x3, #0x0
 c20:	mov	w2, #0x108                 	// #264
 c24:	bl	0 <__assert_fail>
 c28:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 c2c:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 c30:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 c34:	add	x0, x0, #0x0
 c38:	add	x1, x1, #0x0
 c3c:	add	x3, x3, #0x0
 c40:	b	b70 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x8a4>
 c44:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 c48:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 c4c:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 c50:	add	x0, x0, #0x0
 c54:	add	x1, x1, #0x0
 c58:	add	x3, x3, #0x0
 c5c:	b	b70 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x8a4>
 c60:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 c64:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 c68:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 c6c:	add	x0, x0, #0x0
 c70:	add	x1, x1, #0x0
 c74:	add	x3, x3, #0x0
 c78:	mov	w2, #0x260                 	// #608
 c7c:	bl	0 <__assert_fail>
 c80:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 c84:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 c88:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 c8c:	add	x0, x0, #0x0
 c90:	add	x1, x1, #0x0
 c94:	add	x3, x3, #0x0
 c98:	mov	w2, #0x2ce                 	// #718
 c9c:	bl	0 <__assert_fail>
 ca0:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 ca4:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 ca8:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 cac:	add	x0, x0, #0x0
 cb0:	add	x1, x1, #0x0
 cb4:	add	x3, x3, #0x0
 cb8:	b	b70 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x8a4>
 cbc:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 cc0:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 cc4:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 cc8:	add	x0, x0, #0x0
 ccc:	add	x1, x1, #0x0
 cd0:	add	x3, x3, #0x0
 cd4:	b	b70 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x8a4>
 cd8:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 cdc:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 ce0:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 ce4:	add	x0, x0, #0x0
 ce8:	add	x1, x1, #0x0
 cec:	add	x3, x3, #0x0
 cf0:	b	b70 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x8a4>
 cf4:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 cf8:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 cfc:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 d00:	add	x0, x0, #0x0
 d04:	add	x1, x1, #0x0
 d08:	add	x3, x3, #0x0
 d0c:	b	b70 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x8a4>

0000000000000d10 <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_>:
 d10:	cbz	x0, d40 <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_+0x30>
 d14:	stp	x29, x30, [sp, #-32]!
 d18:	str	x19, [sp, #16]
 d1c:	mov	x29, sp
 d20:	mov	x19, x0
 d24:	ldr	x1, [x0, #40]!
 d28:	cbz	x1, d30 <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_+0x20>
 d2c:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
 d30:	mov	x0, x19
 d34:	ldr	x19, [sp, #16]
 d38:	ldp	x29, x30, [sp], #32
 d3c:	b	0 <_ZdlPv>
 d40:	ret

0000000000000d44 <_ZN12_GLOBAL__N_17Lowerer20lowerResumeOrDestroyEN4llvm8CallSiteENS1_13CoroSubFnInst10ResumeKindE>:
 d44:	sub	sp, sp, #0x30
 d48:	stp	x29, x30, [sp, #16]
 d4c:	stp	x20, x19, [sp, #32]
 d50:	add	x29, sp, #0x10
 d54:	mov	x20, x0
 d58:	str	x1, [sp, #8]
 d5c:	add	x0, sp, #0x8
 d60:	mov	w1, wzr
 d64:	mov	w19, w2
 d68:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 d6c:	ldr	x8, [sp, #8]
 d70:	mov	x1, x0
 d74:	mov	x0, x20
 d78:	mov	w2, w19
 d7c:	and	x3, x8, #0xfffffffffffffff8
 d80:	bl	0 <_ZN4llvm4coro11LowererBase13makeSubFnCallEPNS_5ValueEiPNS_11InstructionE>
 d84:	mov	x1, x0
 d88:	add	x0, sp, #0x8
 d8c:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 d90:	add	x0, sp, #0x8
 d94:	mov	w1, #0x8                   	// #8
 d98:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
 d9c:	ldp	x20, x19, [sp, #32]
 da0:	ldp	x29, x30, [sp, #16]
 da4:	add	sp, sp, #0x30
 da8:	ret

Disassembly of section .text._ZN4llvm4Pass14doFinalizationERNS_6ModuleE:

0000000000000000 <_ZN4llvm4Pass14doFinalizationERNS_6ModuleE>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIPNS_12CoroFreeInstELb1EE9push_backERKS2_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIPNS_12CoroFreeInstELb1EE9push_backERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseIPNS_12CoroFreeInstELb1EE9push_backERKS2_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	x10, [x20]
  28:	str	x10, [x9, w8, uxtw #3]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseIPNS_12CoroFreeInstELb1EE9push_backERKS2_+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x8                   	// #8
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseIPNS_12CoroFreeInstELb1EE9push_backERKS2_+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_12CoroFreeInstELb1EE9push_backERKS2_>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_12CoroFreeInstELb1EE9push_backERKS2_>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_12CoroFreeInstELb1EE9push_backERKS2_>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm15CoroSuspendInst7isFinalEv:

0000000000000000 <_ZNK4llvm15CoroSuspendInst7isFinalEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w1, #0x1                   	// #1
   c:	bl	0 <_ZNK4llvm15CoroSuspendInst7isFinalEv>
  10:	cbz	x0, 28 <_ZNK4llvm15CoroSuspendInst7isFinalEv+0x28>
  14:	ldrb	w8, [x0, #16]
  18:	cmp	w8, #0x11
  1c:	b.cs	48 <_ZNK4llvm15CoroSuspendInst7isFinalEv+0x48>  // b.hs, b.nlast
  20:	ldp	x29, x30, [sp], #16
  24:	b	0 <_ZNK4llvm8Constant10isOneValueEv>
  28:	adrp	x0, 0 <_ZNK4llvm15CoroSuspendInst7isFinalEv>
  2c:	adrp	x1, 0 <_ZNK4llvm15CoroSuspendInst7isFinalEv>
  30:	adrp	x3, 0 <_ZNK4llvm15CoroSuspendInst7isFinalEv>
  34:	add	x0, x0, #0x0
  38:	add	x1, x1, #0x0
  3c:	add	x3, x3, #0x0
  40:	mov	w2, #0x69                  	// #105
  44:	bl	0 <__assert_fail>
  48:	adrp	x0, 0 <_ZNK4llvm15CoroSuspendInst7isFinalEv>
  4c:	adrp	x1, 0 <_ZNK4llvm15CoroSuspendInst7isFinalEv>
  50:	adrp	x3, 0 <_ZNK4llvm15CoroSuspendInst7isFinalEv>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x108                 	// #264
  64:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv:

0000000000000000 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x9, [x0]
  10:	and	x8, x9, #0x6
  14:	cmp	x8, #0x4
  18:	and	x19, x9, #0xfffffffffffffff8
  1c:	b.eq	54 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv+0x54>  // b.none
  20:	cmp	x8, #0x2
  24:	b.ne	80 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv+0x80>  // b.any
  28:	cbz	x19, c4 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv+0xc4>
  2c:	ldrb	w8, [x19, #16]
  30:	cmp	w8, #0x50
  34:	b.eq	90 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv+0x90>  // b.none
  38:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
  3c:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
  40:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	b	134 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv+0x134>
  54:	cbz	x19, e0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv+0xe0>
  58:	ldrb	w8, [x19, #16]
  5c:	cmp	w8, #0x23
  60:	b.eq	90 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv+0x90>  // b.none
  64:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
  68:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
  6c:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
  70:	add	x0, x0, #0x0
  74:	add	x1, x1, #0x0
  78:	add	x3, x3, #0x0
  7c:	b	134 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv+0x134>
  80:	cbz	x19, fc <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv+0xfc>
  84:	ldrb	w8, [x19, #16]
  88:	cmp	w8, #0x1d
  8c:	b.ne	11c <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv+0x11c>  // b.any
  90:	ldr	x8, [x19, #56]
  94:	mov	x0, x19
  98:	str	x8, [x29, #24]
  9c:	bl	0 <_ZNK4llvm5Value10getContextEv>
  a0:	mov	x1, x0
  a4:	add	x0, x29, #0x18
  a8:	mov	w2, #0xffffffff            	// #-1
  ac:	mov	w3, #0x19                  	// #25
  b0:	bl	0 <_ZNK4llvm13AttributeList12addAttributeERNS_11LLVMContextEjNS_9Attribute8AttrKindE>
  b4:	str	x0, [x19, #56]
  b8:	ldr	x19, [sp, #16]
  bc:	ldp	x29, x30, [sp], #32
  c0:	ret
  c4:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
  c8:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
  cc:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
  d0:	add	x0, x0, #0x0
  d4:	add	x1, x1, #0x0
  d8:	add	x3, x3, #0x0
  dc:	b	114 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv+0x114>
  e0:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
  e4:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
  e8:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
  ec:	add	x0, x0, #0x0
  f0:	add	x1, x1, #0x0
  f4:	add	x3, x3, #0x0
  f8:	b	114 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv+0x114>
  fc:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
 100:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
 104:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x69                  	// #105
 118:	bl	0 <__assert_fail>
 11c:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
 120:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
 124:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
 128:	add	x0, x0, #0x0
 12c:	add	x1, x1, #0x0
 130:	add	x3, x3, #0x0
 134:	mov	w2, #0x108                 	// #264
 138:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10CoroIdInst7getInfoEv:

0000000000000000 <_ZNK4llvm10CoroIdInst7getInfoEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	bl	0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  10:	cbz	x0, e4 <_ZNK4llvm10CoroIdInst7getInfoEv+0xe4>
  14:	ldrb	w8, [x0, #16]
  18:	mov	x19, x0
  1c:	cmp	w8, #0x3
  20:	b.ne	b0 <_ZNK4llvm10CoroIdInst7getInfoEv+0xb0>  // b.any
  24:	ldrb	w8, [x19, #80]
  28:	tbz	w8, #0, c4 <_ZNK4llvm10CoroIdInst7getInfoEv+0xc4>
  2c:	mov	x0, x19
  30:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
  34:	tbnz	w0, #0, c4 <_ZNK4llvm10CoroIdInst7getInfoEv+0xc4>
  38:	ldr	w8, [x19, #32]
  3c:	and	w8, w8, #0xf
  40:	cmp	w8, #0xa
  44:	b.hi	100 <_ZNK4llvm10CoroIdInst7getInfoEv+0x100>  // b.pmore
  48:	mov	w9, #0x1                   	// #1
  4c:	lsl	w8, w9, w8
  50:	mov	w9, #0x1eb                 	// #491
  54:	tst	w8, w9
  58:	b.eq	c4 <_ZNK4llvm10CoroIdInst7getInfoEv+0xc4>  // b.none
  5c:	ldrb	w8, [x19, #80]
  60:	tbnz	w8, #1, c4 <_ZNK4llvm10CoroIdInst7getInfoEv+0xc4>
  64:	mov	x0, x19
  68:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
  6c:	tbnz	w0, #0, 118 <_ZNK4llvm10CoroIdInst7getInfoEv+0x118>
  70:	ldur	x1, [x19, #-24]
  74:	cbz	x1, 138 <_ZNK4llvm10CoroIdInst7getInfoEv+0x138>
  78:	ldrb	w8, [x1, #16]
  7c:	cmp	w8, #0x7
  80:	csel	x0, x1, xzr, eq  // eq = none
  84:	cbnz	x0, b4 <_ZNK4llvm10CoroIdInst7getInfoEv+0xb4>
  88:	cmp	w8, #0x6
  8c:	b.eq	b8 <_ZNK4llvm10CoroIdInst7getInfoEv+0xb8>  // b.none
  90:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  94:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  98:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  9c:	add	x0, x0, #0x0
  a0:	add	x1, x1, #0x0
  a4:	add	x3, x3, #0x0
  a8:	mov	w2, #0x108                 	// #264
  ac:	bl	0 <__assert_fail>
  b0:	mov	x0, xzr
  b4:	mov	x1, xzr
  b8:	ldr	x19, [sp, #16]
  bc:	ldp	x29, x30, [sp], #32
  c0:	ret
  c4:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  c8:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  cc:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  d0:	add	x0, x0, #0x0
  d4:	add	x1, x1, #0x0
  d8:	add	x3, x3, #0x0
  dc:	mov	w2, #0xa8                  	// #168
  e0:	bl	0 <__assert_fail>
  e4:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  e8:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  ec:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  f0:	add	x0, x0, #0x0
  f4:	add	x1, x1, #0x0
  f8:	add	x3, x3, #0x0
  fc:	b	150 <_ZNK4llvm10CoroIdInst7getInfoEv+0x150>
 100:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 104:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	mov	w2, #0x16d                 	// #365
 114:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 118:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 11c:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 120:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 124:	add	x0, x0, #0x0
 128:	add	x1, x1, #0x0
 12c:	add	x3, x3, #0x0
 130:	mov	w2, #0x8d                  	// #141
 134:	bl	0 <__assert_fail>
 138:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 13c:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 140:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 144:	add	x0, x0, #0x0
 148:	add	x1, x1, #0x0
 14c:	add	x3, x3, #0x0
 150:	mov	w2, #0x69                  	// #105
 154:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8Function9addFnAttrENS_9StringRefES1_:

0000000000000000 <_ZN4llvm8Function9addFnAttrENS_9StringRefES1_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x19, x4
  18:	mov	x20, x3
  1c:	mov	x21, x2
  20:	mov	x22, x1
  24:	mov	x23, x0
  28:	bl	0 <_ZNK4llvm8Function10getContextEv>
  2c:	mov	x1, x22
  30:	mov	x2, x21
  34:	mov	x3, x20
  38:	mov	x4, x19
  3c:	bl	0 <_ZN4llvm9Attribute3getERNS_11LLVMContextENS_9StringRefES3_>
  40:	mov	x2, x0
  44:	mov	x0, x23
  48:	ldp	x20, x19, [sp, #48]
  4c:	ldp	x22, x21, [sp, #32]
  50:	ldr	x23, [sp, #16]
  54:	mov	w1, #0xffffffff            	// #-1
  58:	ldp	x29, x30, [sp], #64
  5c:	b	0 <_ZN4llvm8Function12addAttributeEjNS_9AttributeE>

Disassembly of section .text._ZN4llvm10CoroIdInst16setCoroutineSelfEv:

0000000000000000 <_ZN4llvm10CoroIdInst16setCoroutineSelfEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	w1, #0x2                   	// #2
  10:	mov	x19, x0
  14:	bl	0 <_ZN4llvm10CoroIdInst16setCoroutineSelfEv>
  18:	cbz	x0, 68 <_ZN4llvm10CoroIdInst16setCoroutineSelfEv+0x68>
  1c:	ldrb	w8, [x0, #16]
  20:	cmp	w8, #0xf
  24:	b.ne	88 <_ZN4llvm10CoroIdInst16setCoroutineSelfEv+0x88>  // b.any
  28:	mov	x0, x19
  2c:	bl	0 <_ZNK4llvm5Value10getContextEv>
  30:	mov	w1, wzr
  34:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
  38:	mov	x20, x0
  3c:	mov	x0, x19
  40:	bl	0 <_ZNK4llvm11Instruction11getFunctionEv>
  44:	mov	x1, x20
  48:	mov	w2, wzr
  4c:	bl	0 <_ZN4llvm12ConstantExpr10getBitCastEPNS_8ConstantEPNS_4TypeEb>
  50:	mov	x2, x0
  54:	mov	x0, x19
  58:	ldp	x20, x19, [sp, #16]
  5c:	mov	w1, #0x2                   	// #2
  60:	ldp	x29, x30, [sp], #32
  64:	b	0 <_ZN4llvm10CoroIdInst16setCoroutineSelfEv>
  68:	adrp	x0, 0 <_ZN4llvm10CoroIdInst16setCoroutineSelfEv>
  6c:	adrp	x1, 0 <_ZN4llvm10CoroIdInst16setCoroutineSelfEv>
  70:	adrp	x3, 0 <_ZN4llvm10CoroIdInst16setCoroutineSelfEv>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x69                  	// #105
  84:	bl	0 <__assert_fail>
  88:	adrp	x0, 0 <_ZN4llvm10CoroIdInst16setCoroutineSelfEv>
  8c:	adrp	x1, 0 <_ZN4llvm10CoroIdInst16setCoroutineSelfEv>
  90:	adrp	x3, 0 <_ZN4llvm10CoroIdInst16setCoroutineSelfEv>
  94:	add	x0, x0, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x3, x3, #0x0
  a0:	mov	w2, #0xbb                  	// #187
  a4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE:

0000000000000000 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x2
  14:	mov	w20, w1
  18:	mov	x21, x0
  1c:	bl	0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
  20:	cmp	w0, w20
  24:	b.ls	a0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0xa0>  // b.plast
  28:	ldr	w8, [x21, #20]
  2c:	and	x8, x8, #0xfffffff
  30:	cmp	w8, w20
  34:	b.ls	c0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0xc0>  // b.plast
  38:	mov	w9, #0x18                  	// #24
  3c:	mneg	x8, x8, x9
  40:	add	x8, x21, x8
  44:	umaddl	x0, w20, w9, x8
  48:	ldr	x8, [x0]
  4c:	cbz	x8, 74 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x74>
  50:	ldp	x9, x8, [x0, #8]
  54:	and	x8, x8, #0xfffffffffffffffc
  58:	str	x9, [x8]
  5c:	ldr	x9, [x0, #8]
  60:	cbz	x9, 74 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x74>
  64:	ldr	x10, [x9, #16]
  68:	and	x10, x10, #0x3
  6c:	orr	x8, x10, x8
  70:	str	x8, [x9, #16]
  74:	str	x19, [x0]
  78:	cbz	x19, 90 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x90>
  7c:	add	x1, x19, #0x8
  80:	ldp	x20, x19, [sp, #32]
  84:	ldr	x21, [sp, #16]
  88:	ldp	x29, x30, [sp], #48
  8c:	b	0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
  90:	ldp	x20, x19, [sp, #32]
  94:	ldr	x21, [sp, #16]
  98:	ldp	x29, x30, [sp], #48
  9c:	ret
  a0:	adrp	x0, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
  a4:	adrp	x1, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
  a8:	adrp	x3, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
  ac:	add	x0, x0, #0x0
  b0:	add	x1, x1, #0x0
  b4:	add	x3, x3, #0x0
  b8:	mov	w2, #0x4e4                 	// #1252
  bc:	bl	0 <__assert_fail>
  c0:	adrp	x0, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
  c4:	adrp	x1, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
  c8:	adrp	x3, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
  cc:	add	x0, x0, #0x0
  d0:	add	x1, x1, #0x0
  d4:	add	x3, x3, #0x0
  d8:	mov	w2, #0x86a                 	// #2154
  dc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_:

0000000000000000 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	add	x8, x1, #0x48
  10:	str	x8, [x0]
  14:	ldr	x9, [x1, #80]
  18:	mov	x20, x0
  1c:	str	x9, [x20, #8]!
  20:	cmp	x9, x8
  24:	str	xzr, [x20, #8]
  28:	b.eq	6c <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x6c>  // b.none
  2c:	mov	x19, x0
  30:	mov	x0, x20
  34:	bl	0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  38:	ldr	x8, [x0, #48]
  3c:	mov	x0, x20
  40:	str	x8, [x19, #16]
  44:	bl	0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  48:	ldr	x8, [x19, #16]
  4c:	add	x9, x0, #0x28
  50:	cmp	x8, x9
  54:	b.ne	6c <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x6c>  // b.any
  58:	ldp	x9, x8, [x19]
  5c:	ldr	x8, [x8, #8]
  60:	cmp	x9, x8
  64:	str	x8, [x19, #8]
  68:	b.ne	30 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x30>  // b.any
  6c:	ldp	x20, x19, [sp, #16]
  70:	ldp	x29, x30, [sp], #32
  74:	ret

Disassembly of section .text._ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv:

0000000000000000 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	ldrb	w9, [x8]
  10:	tbnz	w9, #2, 28 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv+0x28>
  14:	sub	x9, x8, #0x18
  18:	cmp	x8, #0x0
  1c:	csel	x0, xzr, x9, eq  // eq = none
  20:	ldp	x29, x30, [sp], #16
  24:	ret
  28:	adrp	x0, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv>
  2c:	adrp	x1, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv>
  30:	adrp	x3, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv>
  34:	add	x0, x0, #0x0
  38:	add	x1, x1, #0x0
  3c:	add	x3, x3, #0x0
  40:	mov	w2, #0x8b                  	// #139
  44:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_:

0000000000000000 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x0, 74 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0x74>
   c:	ldrb	w8, [x0, #16]
  10:	cmp	w8, #0x18
  14:	b.cs	24 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0x24>  // b.hs, b.nlast
  18:	mov	x0, xzr
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	cmp	w8, #0x1d
  28:	b.eq	64 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0x64>  // b.none
  2c:	cmp	w8, #0x23
  30:	b.eq	50 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0x50>  // b.none
  34:	cmp	w8, #0x50
  38:	b.ne	18 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0x18>  // b.any
  3c:	tst	x0, #0x7
  40:	b.ne	94 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0x94>  // b.any
  44:	and	x8, x0, #0xfffffffffffffff9
  48:	orr	x0, x8, #0x2
  4c:	b	1c <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0x1c>
  50:	tst	x0, #0x7
  54:	b.ne	94 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0x94>  // b.any
  58:	and	x8, x0, #0xfffffffffffffff9
  5c:	orr	x0, x8, #0x4
  60:	b	1c <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0x1c>
  64:	tst	x0, #0x7
  68:	b.ne	94 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0x94>  // b.any
  6c:	and	x0, x0, #0xfffffffffffffff9
  70:	b	1c <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0x1c>
  74:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_>
  78:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_>
  7c:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_>
  80:	add	x0, x0, #0x0
  84:	add	x1, x1, #0x0
  88:	add	x3, x3, #0x0
  8c:	mov	w2, #0x69                  	// #105
  90:	bl	0 <__assert_fail>
  94:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_>
  98:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_>
  9c:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_>
  a0:	add	x0, x0, #0x0
  a4:	add	x1, x1, #0x0
  a8:	add	x3, x3, #0x0
  ac:	mov	w2, #0xb3                  	// #179
  b0:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17getCalledFunctionEv:

0000000000000000 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17getCalledFunctionEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	bl	0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17getCalledFunctionEv>
   c:	cbz	x0, 24 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17getCalledFunctionEv+0x24>
  10:	ldrb	w8, [x0, #16]
  14:	cmp	w8, #0x0
  18:	csel	x0, x0, xzr, eq  // eq = none
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17getCalledFunctionEv>
  28:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17getCalledFunctionEv>
  2c:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17getCalledFunctionEv>
  30:	add	x0, x0, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x3, x3, #0x0
  3c:	mov	w2, #0x69                  	// #105
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14getCalledValueEv:

0000000000000000 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14getCalledValueEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	ands	x8, x8, #0xfffffffffffffff8
  10:	b.eq	68 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14getCalledValueEv+0x68>  // b.none
  14:	ldrb	w9, [x8, #16]
  18:	sub	w9, w9, #0x1d
  1c:	cmp	w9, #0x33
  20:	b.hi	48 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14getCalledValueEv+0x48>  // b.pmore
  24:	mov	w10, #0x1                   	// #1
  28:	lsl	x9, x10, x9
  2c:	mov	x10, #0x41                  	// #65
  30:	movk	x10, #0x8, lsl #48
  34:	tst	x9, x10
  38:	b.eq	48 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14getCalledValueEv+0x48>  // b.none
  3c:	ldur	x0, [x8, #-24]
  40:	ldp	x29, x30, [sp], #16
  44:	ret
  48:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14getCalledValueEv>
  4c:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14getCalledValueEv>
  50:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14getCalledValueEv>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x108                 	// #264
  64:	bl	0 <__assert_fail>
  68:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14getCalledValueEv>
  6c:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14getCalledValueEv>
  70:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14getCalledValueEv>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x69                  	// #105
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase13getArgOperandEj:

0000000000000000 <_ZNK4llvm8CallBase13getArgOperandEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	w19, w1
  10:	mov	x20, x0
  14:	bl	0 <_ZNK4llvm8CallBase13getArgOperandEj>
  18:	cmp	w0, w19
  1c:	b.ls	50 <_ZNK4llvm8CallBase13getArgOperandEj+0x50>  // b.plast
  20:	ldr	w8, [x20, #20]
  24:	and	x8, x8, #0xfffffff
  28:	cmp	w8, w19
  2c:	b.ls	70 <_ZNK4llvm8CallBase13getArgOperandEj+0x70>  // b.plast
  30:	mov	w9, #0x18                  	// #24
  34:	mneg	x8, x8, x9
  38:	add	x8, x20, x8
  3c:	umull	x9, w19, w9
  40:	ldr	x0, [x8, x9]
  44:	ldp	x20, x19, [sp, #16]
  48:	ldp	x29, x30, [sp], #32
  4c:	ret
  50:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  54:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  58:	adrp	x3, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  5c:	add	x0, x0, #0x0
  60:	add	x1, x1, #0x0
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x4df                 	// #1247
  6c:	bl	0 <__assert_fail>
  70:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  74:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  78:	adrp	x3, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  7c:	add	x0, x0, #0x0
  80:	add	x1, x1, #0x0
  84:	add	x3, x3, #0x0
  88:	mov	w2, #0x86a                 	// #2154
  8c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase17getNumArgOperandsEv:

0000000000000000 <_ZNK4llvm8CallBase17getNumArgOperandsEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	bl	0 <_ZNK4llvm8CallBase17getNumArgOperandsEv>
  18:	mov	w8, w0
  1c:	mov	w20, #0x18                  	// #24
  20:	mneg	x8, x8, x20
  24:	mov	x0, x19
  28:	add	x21, x19, x8
  2c:	bl	0 <_ZNK4llvm8CallBase17getNumArgOperandsEv>
  30:	ldr	w8, [x19, #20]
  34:	mov	w9, w0
  38:	mneg	x9, x9, x20
  3c:	add	x9, x21, x9
  40:	and	x8, x8, #0xfffffff
  44:	mneg	x8, x8, x20
  48:	add	x8, x19, x8
  4c:	sub	x8, x9, x8
  50:	ldp	x20, x19, [sp, #32]
  54:	ldr	x21, [sp, #16]
  58:	sub	x8, x8, #0x18
  5c:	mov	w9, #0xaaab                	// #43691
  60:	lsr	x8, x8, #3
  64:	movk	w9, #0xaaaa, lsl #16
  68:	mul	w0, w8, w9
  6c:	ldp	x29, x30, [sp], #48
  70:	ret

Disassembly of section .text._ZNK4llvm8CallBase25getNumTotalBundleOperandsEv:

0000000000000000 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
  14:	cbz	w0, 34 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x34>
  18:	mov	x0, x19
  1c:	bl	0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
  20:	mov	w20, w0
  24:	mov	x0, x19
  28:	bl	0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
  2c:	subs	w0, w0, w20
  30:	b.cc	40 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x40>  // b.lo, b.ul, b.last
  34:	ldp	x20, x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret
  40:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
  44:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
  48:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x710                 	// #1808
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv:

0000000000000000 <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #16]
   c:	cmp	w8, #0x50
  10:	b.eq	34 <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv+0x34>  // b.none
  14:	cmp	w8, #0x23
  18:	b.eq	2c <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv+0x2c>  // b.none
  1c:	cmp	w8, #0x1d
  20:	b.ne	40 <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv+0x40>  // b.any
  24:	mov	w0, #0x2                   	// #2
  28:	b	38 <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv+0x38>
  2c:	ldp	x29, x30, [sp], #16
  30:	b	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
  34:	mov	w0, wzr
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv>
  44:	adrp	x1, 0 <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv>
  48:	add	x0, x0, #0x0
  4c:	add	x1, x1, #0x0
  50:	mov	w2, #0x46a                 	// #1130
  54:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZNK4llvm8CallBase27getBundleOperandsStartIndexEv:

0000000000000000 <_ZNK4llvm8CallBase27getBundleOperandsStartIndexEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZNK4llvm8CallBase27getBundleOperandsStartIndexEv>
  14:	cbz	w0, 30 <_ZNK4llvm8CallBase27getBundleOperandsStartIndexEv+0x30>
  18:	mov	x0, x19
  1c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  20:	ldr	w0, [x0, #8]
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	ret
  30:	adrp	x0, 0 <_ZNK4llvm8CallBase27getBundleOperandsStartIndexEv>
  34:	adrp	x1, 0 <_ZNK4llvm8CallBase27getBundleOperandsStartIndexEv>
  38:	adrp	x3, 0 <_ZNK4llvm8CallBase27getBundleOperandsStartIndexEv>
  3c:	add	x0, x0, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0x6ed                 	// #1773
  4c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase25getBundleOperandsEndIndexEv:

0000000000000000 <_ZNK4llvm8CallBase25getBundleOperandsEndIndexEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZNK4llvm8CallBase25getBundleOperandsEndIndexEv>
  14:	cbz	w0, 34 <_ZNK4llvm8CallBase25getBundleOperandsEndIndexEv+0x34>
  18:	mov	x0, x19
  1c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  20:	add	x8, x0, x1
  24:	ldur	w0, [x8, #-4]
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	ret
  34:	adrp	x0, 0 <_ZNK4llvm8CallBase25getBundleOperandsEndIndexEv>
  38:	adrp	x1, 0 <_ZNK4llvm8CallBase25getBundleOperandsEndIndexEv>
  3c:	adrp	x3, 0 <_ZNK4llvm8CallBase25getBundleOperandsEndIndexEv>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x6f3                 	// #1779
  50:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase20getNumOperandBundlesEv:

0000000000000000 <_ZNK4llvm8CallBase20getNumOperandBundlesEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #20]
  10:	tbnz	w8, #31, 1c <_ZNK4llvm8CallBase20getNumOperandBundlesEv+0x1c>
  14:	mov	x19, xzr
  18:	b	30 <_ZNK4llvm8CallBase20getNumOperandBundlesEv+0x30>
  1c:	mov	x20, x0
  20:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  24:	ldr	w8, [x20, #20]
  28:	mov	x19, x0
  2c:	tbnz	w8, #31, 48 <_ZNK4llvm8CallBase20getNumOperandBundlesEv+0x48>
  30:	mov	x8, xzr
  34:	sub	x8, x8, x19
  38:	ldp	x20, x19, [sp, #16]
  3c:	lsr	x0, x8, #4
  40:	ldp	x29, x30, [sp], #32
  44:	ret
  48:	mov	x0, x20
  4c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  50:	add	x8, x0, x1
  54:	b	34 <_ZNK4llvm8CallBase20getNumOperandBundlesEv+0x34>

Disassembly of section .text._ZNK4llvm11CoroEndInst8isUnwindEv:

0000000000000000 <_ZNK4llvm11CoroEndInst8isUnwindEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w1, #0x1                   	// #1
   c:	bl	0 <_ZNK4llvm11CoroEndInst8isUnwindEv>
  10:	cbz	x0, 28 <_ZNK4llvm11CoroEndInst8isUnwindEv+0x28>
  14:	ldrb	w8, [x0, #16]
  18:	cmp	w8, #0x11
  1c:	b.cs	48 <_ZNK4llvm11CoroEndInst8isUnwindEv+0x48>  // b.hs, b.nlast
  20:	ldp	x29, x30, [sp], #16
  24:	b	0 <_ZNK4llvm8Constant10isOneValueEv>
  28:	adrp	x0, 0 <_ZNK4llvm11CoroEndInst8isUnwindEv>
  2c:	adrp	x1, 0 <_ZNK4llvm11CoroEndInst8isUnwindEv>
  30:	adrp	x3, 0 <_ZNK4llvm11CoroEndInst8isUnwindEv>
  34:	add	x0, x0, #0x0
  38:	add	x1, x1, #0x0
  3c:	add	x3, x3, #0x0
  40:	mov	w2, #0x69                  	// #105
  44:	bl	0 <__assert_fail>
  48:	adrp	x0, 0 <_ZNK4llvm11CoroEndInst8isUnwindEv>
  4c:	adrp	x1, 0 <_ZNK4llvm11CoroEndInst8isUnwindEv>
  50:	adrp	x3, 0 <_ZNK4llvm11CoroEndInst8isUnwindEv>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x108                 	// #264
  64:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm5TwineC2EPKc:

0000000000000000 <_ZN4llvm5TwineC2EPKc>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w8, #0x101                 	// #257
   c:	stp	xzr, xzr, [x0]
  10:	strh	w8, [x0, #16]
  14:	ldrb	w8, [x1]
  18:	cbz	w8, 28 <_ZN4llvm5TwineC2EPKc+0x28>
  1c:	mov	w8, #0x3                   	// #3
  20:	str	x1, [x0]
  24:	b	2c <_ZN4llvm5TwineC2EPKc+0x2c>
  28:	mov	w8, #0x1                   	// #1
  2c:	strb	w8, [x0, #16]
  30:	bl	0 <_ZN4llvm5TwineC2EPKc>
  34:	tbz	w0, #0, 40 <_ZN4llvm5TwineC2EPKc+0x40>
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZN4llvm5TwineC2EPKc>
  44:	adrp	x1, 0 <_ZN4llvm5TwineC2EPKc>
  48:	adrp	x3, 0 <_ZN4llvm5TwineC2EPKc>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x112                 	// #274
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE:

0000000000000000 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x1, #40]
  10:	add	x9, x1, #0x18
  14:	add	x10, x8, #0x28
  18:	cmp	x9, x10
  1c:	stp	x8, x9, [x0, #8]
  20:	b.eq	68 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x68>  // b.none
  24:	ldr	x1, [x1, #48]
  28:	mov	x19, x0
  2c:	str	x1, [x29, #24]
  30:	cbz	x1, 40 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x40>
  34:	add	x0, x29, #0x18
  38:	mov	w2, #0x2                   	// #2
  3c:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  40:	add	x1, x29, #0x18
  44:	mov	x0, x19
  48:	bl	0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>
  4c:	ldr	x1, [x29, #24]
  50:	cbz	x1, 5c <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x5c>
  54:	add	x0, x29, #0x18
  58:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  5c:	ldr	x19, [sp, #16]
  60:	ldp	x29, x30, [sp], #32
  64:	ret
  68:	adrp	x0, 0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>
  6c:	adrp	x1, 0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>
  70:	adrp	x3, 0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x8e                  	// #142
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm5Twine7isValidEv:

0000000000000000 <_ZNK4llvm5Twine7isValidEv>:
   0:	ldrb	w9, [x0, #16]
   4:	ldrb	w8, [x0, #17]
   8:	cmp	w9, #0x1
   c:	b.hi	1c <_ZNK4llvm5Twine7isValidEv+0x1c>  // b.pmore
  10:	cmp	w8, #0x1
  14:	b.ne	78 <_ZNK4llvm5Twine7isValidEv+0x78>  // b.any
  18:	b	80 <_ZNK4llvm5Twine7isValidEv+0x80>
  1c:	cbz	w8, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  20:	cmp	w8, #0x1
  24:	b.ne	38 <_ZNK4llvm5Twine7isValidEv+0x38>  // b.any
  28:	cmp	w9, #0x2
  2c:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  30:	mov	w8, #0x1                   	// #1
  34:	b	40 <_ZNK4llvm5Twine7isValidEv+0x40>
  38:	cmp	w9, #0x2
  3c:	b.ne	58 <_ZNK4llvm5Twine7isValidEv+0x58>  // b.any
  40:	ldr	x9, [x0]
  44:	ldrb	w10, [x9, #16]
  48:	cbz	w10, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  4c:	ldrb	w9, [x9, #17]
  50:	cmp	w9, #0x1
  54:	b.eq	78 <_ZNK4llvm5Twine7isValidEv+0x78>  // b.none
  58:	cmp	w8, #0x2
  5c:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  60:	ldr	x8, [x0, #8]
  64:	ldrb	w9, [x8, #16]
  68:	cbz	w9, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  6c:	ldrb	w8, [x8, #17]
  70:	cmp	w8, #0x1
  74:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  78:	mov	w0, wzr
  7c:	ret
  80:	mov	w0, #0x1                   	// #1
  84:	ret

Disassembly of section .text._ZN4llvm13TrackingMDRefaSEOS0_:

0000000000000000 <_ZN4llvm13TrackingMDRefaSEOS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	cmp	x1, x0
  14:	b.eq	40 <_ZN4llvm13TrackingMDRefaSEOS0_+0x40>  // b.none
  18:	mov	x20, x1
  1c:	ldr	x1, [x19]
  20:	cbz	x1, 2c <_ZN4llvm13TrackingMDRefaSEOS0_+0x2c>
  24:	mov	x0, x19
  28:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  2c:	ldr	x8, [x20]
  30:	mov	x0, x19
  34:	mov	x1, x20
  38:	str	x8, [x19]
  3c:	bl	0 <_ZN4llvm13TrackingMDRefaSEOS0_>
  40:	mov	x0, x19
  44:	ldp	x20, x19, [sp, #16]
  48:	ldp	x29, x30, [sp], #32
  4c:	ret

Disassembly of section .text._ZN4llvm13TrackingMDRef7retrackERS0_:

0000000000000000 <_ZN4llvm13TrackingMDRef7retrackERS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x1
  10:	ldr	x1, [x0]
  14:	ldr	x8, [x19]
  18:	cmp	x1, x8
  1c:	b.ne	40 <_ZN4llvm13TrackingMDRef7retrackERS0_+0x40>  // b.any
  20:	cbz	x1, 34 <_ZN4llvm13TrackingMDRef7retrackERS0_+0x34>
  24:	mov	x2, x0
  28:	mov	x0, x19
  2c:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  30:	str	xzr, [x19]
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret
  40:	adrp	x0, 0 <_ZN4llvm13TrackingMDRef7retrackERS0_>
  44:	adrp	x1, 0 <_ZN4llvm13TrackingMDRef7retrackERS0_>
  48:	adrp	x3, 0 <_ZN4llvm13TrackingMDRef7retrackERS0_>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x5e                  	// #94
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCastENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCastENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineE>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	str	x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	ldr	x8, [x2]
  1c:	mov	x19, x2
  20:	cmp	x8, x3
  24:	b.eq	90 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCastENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineE+0x90>  // b.none
  28:	ldrb	w8, [x19, #16]
  2c:	mov	x22, x3
  30:	mov	w23, w1
  34:	cmp	w8, #0x10
  38:	b.ls	ac <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCastENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineE+0xac>  // b.plast
  3c:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCastENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineE>
  40:	mov	x21, x0
  44:	add	x1, x1, #0x0
  48:	add	x0, sp, #0x8
  4c:	mov	x20, x4
  50:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCastENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineE>
  54:	add	x3, sp, #0x8
  58:	mov	w0, w23
  5c:	mov	x1, x19
  60:	mov	x2, x22
  64:	mov	x4, xzr
  68:	bl	0 <_ZN4llvm8CastInst6CreateENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineEPS1_>
  6c:	ldp	x3, x4, [x21, #8]
  70:	mov	x19, x0
  74:	mov	x0, x21
  78:	mov	x1, x19
  7c:	mov	x2, x20
  80:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCastENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineE>
  84:	mov	x0, x21
  88:	mov	x1, x19
  8c:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCastENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineE>
  90:	mov	x0, x19
  94:	ldp	x20, x19, [sp, #80]
  98:	ldp	x22, x21, [sp, #64]
  9c:	ldr	x23, [sp, #48]
  a0:	ldp	x29, x30, [sp, #32]
  a4:	add	sp, sp, #0x60
  a8:	ret
  ac:	mov	w0, w23
  b0:	mov	x1, x19
  b4:	mov	x2, x22
  b8:	ldp	x20, x19, [sp, #80]
  bc:	ldp	x22, x21, [sp, #64]
  c0:	ldr	x23, [sp, #48]
  c4:	ldp	x29, x30, [sp, #32]
  c8:	mov	w3, wzr
  cc:	add	sp, sp, #0x60
  d0:	b	0 <_ZN4llvm12ConstantExpr7getCastEjPNS_8ConstantEPNS_4TypeEb>

Disassembly of section .text._ZNK4llvm24IRBuilderDefaultInserter12InsertHelperEPNS_11InstructionERKNS_5TwineEPNS_10BasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS1_Lb1ELb0EvEELb0ELb0EEE:

0000000000000000 <_ZNK4llvm24IRBuilderDefaultInserter12InsertHelperEPNS_11InstructionERKNS_5TwineEPNS_10BasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS1_Lb1ELb0EvEELb0ELb0EEE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x2
  14:	mov	x20, x1
  18:	cbz	x3, 38 <_ZNK4llvm24IRBuilderDefaultInserter12InsertHelperEPNS_11InstructionERKNS_5TwineEPNS_10BasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS1_Lb1ELb0EvEELb0ELb0EEE+0x38>
  1c:	add	x0, x3, #0x28
  20:	mov	x1, x20
  24:	mov	x21, x4
  28:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  2c:	add	x1, x20, #0x18
  30:	mov	x0, x21
  34:	bl	0 <_ZNK4llvm24IRBuilderDefaultInserter12InsertHelperEPNS_11InstructionERKNS_5TwineEPNS_10BasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS1_Lb1ELb0EvEELb0ELb0EEE>
  38:	mov	x0, x20
  3c:	mov	x1, x19
  40:	ldp	x20, x19, [sp, #32]
  44:	ldr	x21, [sp, #16]
  48:	ldp	x29, x30, [sp], #48
  4c:	b	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>

Disassembly of section .text._ZNK4llvm13IRBuilderBase20SetInstDebugLocationEPNS_11InstructionE:

0000000000000000 <_ZNK4llvm13IRBuilderBase20SetInstDebugLocationEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x0]
  10:	cbz	x8, 48 <_ZNK4llvm13IRBuilderBase20SetInstDebugLocationEPNS_11InstructionE+0x48>
  14:	mov	x19, x1
  18:	add	x0, x29, #0x18
  1c:	mov	w2, #0x2                   	// #2
  20:	mov	x1, x8
  24:	str	x8, [x29, #24]
  28:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  2c:	add	x0, x19, #0x30
  30:	add	x1, x29, #0x18
  34:	bl	0 <_ZNK4llvm13IRBuilderBase20SetInstDebugLocationEPNS_11InstructionE>
  38:	ldr	x1, [x29, #24]
  3c:	cbz	x1, 48 <_ZNK4llvm13IRBuilderBase20SetInstDebugLocationEPNS_11InstructionE+0x48>
  40:	add	x0, x29, #0x18
  44:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  48:	ldr	x19, [sp, #16]
  4c:	ldp	x29, x30, [sp], #32
  50:	ret

Disassembly of section .text._ZN4llvm10ilist_baseILb1EE16insertBeforeImplERNS_15ilist_node_baseILb1EEES4_:

0000000000000000 <_ZN4llvm10ilist_baseILb1EE16insertBeforeImplERNS_15ilist_node_baseILb1EEES4_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	ldr	x9, [x1]
  10:	tst	x1, #0x7
  14:	and	x10, x8, #0xfffffffffffffff8
  18:	bfxil	x8, x9, #0, #3
  1c:	stp	x8, x0, [x1]
  20:	str	x1, [x10, #8]
  24:	b.ne	40 <_ZN4llvm10ilist_baseILb1EE16insertBeforeImplERNS_15ilist_node_baseILb1EEES4_+0x40>  // b.any
  28:	ldr	x8, [x0]
  2c:	and	x8, x8, #0x7
  30:	orr	x8, x8, x1
  34:	str	x8, [x0]
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZN4llvm10ilist_baseILb1EE16insertBeforeImplERNS_15ilist_node_baseILb1EEES4_>
  44:	adrp	x1, 0 <_ZN4llvm10ilist_baseILb1EE16insertBeforeImplERNS_15ilist_node_baseILb1EEES4_>
  48:	adrp	x3, 0 <_ZN4llvm10ilist_baseILb1EE16insertBeforeImplERNS_15ilist_node_baseILb1EEES4_>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0xb3                  	// #179
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10CoroIdInst10getRawInfoEv:

0000000000000000 <_ZNK4llvm10CoroIdInst10getRawInfoEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w1, #0x3                   	// #3
   c:	bl	0 <_ZNK4llvm10CoroIdInst10getRawInfoEv>
  10:	bl	0 <_ZNK4llvm5Value17stripPointerCastsEv>
  14:	cbz	x0, 2c <_ZNK4llvm10CoroIdInst10getRawInfoEv+0x2c>
  18:	ldrb	w8, [x0, #16]
  1c:	cmp	w8, #0x11
  20:	b.cs	4c <_ZNK4llvm10CoroIdInst10getRawInfoEv+0x4c>  // b.hs, b.nlast
  24:	ldp	x29, x30, [sp], #16
  28:	ret
  2c:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst10getRawInfoEv>
  30:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst10getRawInfoEv>
  34:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst10getRawInfoEv>
  38:	add	x0, x0, #0x0
  3c:	add	x1, x1, #0x0
  40:	add	x3, x3, #0x0
  44:	mov	w2, #0x69                  	// #105
  48:	bl	0 <__assert_fail>
  4c:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst10getRawInfoEv>
  50:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst10getRawInfoEv>
  54:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst10getRawInfoEv>
  58:	add	x0, x0, #0x0
  5c:	add	x1, x1, #0x0
  60:	add	x3, x3, #0x0
  64:	mov	w2, #0x108                 	// #264
  68:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm5Value18user_iterator_implINS_4UserEEdeEv:

0000000000000000 <_ZNK4llvm5Value18user_iterator_implINS_4UserEEdeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0]
   c:	cbz	x0, 18 <_ZNK4llvm5Value18user_iterator_implINS_4UserEEdeEv+0x18>
  10:	ldp	x29, x30, [sp], #16
  14:	b	0 <_ZNK4llvm3Use7getUserEv>
  18:	adrp	x0, 0 <_ZNK4llvm5Value18user_iterator_implINS_4UserEEdeEv>
  1c:	adrp	x1, 0 <_ZNK4llvm5Value18user_iterator_implINS_4UserEEdeEv>
  20:	adrp	x3, 0 <_ZNK4llvm5Value18user_iterator_implINS_4UserEEdeEv>
  24:	add	x0, x0, #0x0
  28:	add	x1, x1, #0x0
  2c:	add	x3, x3, #0x0
  30:	mov	w2, #0x99                  	// #153
  34:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj:

0000000000000000 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x9, [x0]
   c:	and	x8, x9, #0x6
  10:	cmp	x8, #0x4
  14:	and	x0, x9, #0xfffffffffffffff8
  18:	b.eq	50 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj+0x50>  // b.none
  1c:	cmp	x8, #0x2
  20:	b.ne	7c <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj+0x7c>  // b.any
  24:	cbz	x0, 94 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj+0x94>
  28:	ldrb	w8, [x0, #16]
  2c:	cmp	w8, #0x50
  30:	b.eq	8c <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj+0x8c>  // b.none
  34:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  38:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  3c:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	b	104 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj+0x104>
  50:	cbz	x0, b0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj+0xb0>
  54:	ldrb	w8, [x0, #16]
  58:	cmp	w8, #0x23
  5c:	b.eq	8c <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj+0x8c>  // b.none
  60:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  64:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  68:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  6c:	add	x0, x0, #0x0
  70:	add	x1, x1, #0x0
  74:	add	x3, x3, #0x0
  78:	b	104 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj+0x104>
  7c:	cbz	x0, cc <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj+0xcc>
  80:	ldrb	w8, [x0, #16]
  84:	cmp	w8, #0x1d
  88:	b.ne	ec <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj+0xec>  // b.any
  8c:	ldp	x29, x30, [sp], #16
  90:	b	0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  94:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  98:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  9c:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  a0:	add	x0, x0, #0x0
  a4:	add	x1, x1, #0x0
  a8:	add	x3, x3, #0x0
  ac:	b	e4 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj+0xe4>
  b0:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  b4:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  b8:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	b	e4 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj+0xe4>
  cc:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  d0:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  d4:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  d8:	add	x0, x0, #0x0
  dc:	add	x1, x1, #0x0
  e0:	add	x3, x3, #0x0
  e4:	mov	w2, #0x69                  	// #105
  e8:	bl	0 <__assert_fail>
  ec:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  f0:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  f4:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  f8:	add	x0, x0, #0x0
  fc:	add	x1, x1, #0x0
 100:	add	x3, x3, #0x0
 104:	mov	w2, #0x108                 	// #264
 108:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_:

0000000000000000 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	ands	x0, x8, #0xfffffffffffffff8
  10:	b.eq	dc <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_+0xdc>  // b.none
  14:	ldr	x8, [x1]
  18:	cbz	x8, fc <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_+0xfc>
  1c:	ldrb	w9, [x8, #8]
  20:	cmp	w9, #0xf
  24:	b.ne	11c <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_+0x11c>  // b.any
  28:	ldrb	w9, [x0, #16]
  2c:	sub	w9, w9, #0x1d
  30:	cmp	w9, #0x33
  34:	b.hi	c0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_+0xc0>  // b.pmore
  38:	mov	w10, #0x1                   	// #1
  3c:	mov	x11, #0x41                  	// #65
  40:	lsl	x10, x10, x9
  44:	movk	x11, #0x8, lsl #48
  48:	tst	x10, x11
  4c:	b.eq	c0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_+0xc0>  // b.none
  50:	ldr	x8, [x8, #24]
  54:	ldr	x10, [x0, #64]
  58:	cmp	x8, x10
  5c:	b.ne	13c <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_+0x13c>  // b.any
  60:	cmp	w9, #0x33
  64:	b.hi	c0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_+0xc0>  // b.pmore
  68:	mov	w8, #0x1                   	// #1
  6c:	lsl	x8, x8, x9
  70:	mov	x9, #0x41                  	// #65
  74:	movk	x9, #0x8, lsl #48
  78:	tst	x8, x9
  7c:	b.eq	c0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_+0xc0>  // b.none
  80:	ldr	x8, [x0, #-24]!
  84:	cbz	x8, ac <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_+0xac>
  88:	ldp	x9, x8, [x0, #8]
  8c:	and	x8, x8, #0xfffffffffffffffc
  90:	str	x9, [x8]
  94:	ldr	x9, [x0, #8]
  98:	cbz	x9, ac <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_+0xac>
  9c:	ldr	x10, [x9, #16]
  a0:	and	x10, x10, #0x3
  a4:	orr	x8, x10, x8
  a8:	str	x8, [x9, #16]
  ac:	add	x8, x1, #0x8
  b0:	str	x1, [x0]
  b4:	mov	x1, x8
  b8:	ldp	x29, x30, [sp], #16
  bc:	b	0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
  c0:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
  c4:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
  c8:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
  cc:	add	x0, x0, #0x0
  d0:	add	x1, x1, #0x0
  d4:	add	x3, x3, #0x0
  d8:	b	134 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_+0x134>
  dc:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
  e0:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
  e4:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x83                  	// #131
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
 100:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
 104:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x69                  	// #105
 118:	bl	0 <__assert_fail>
 11c:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
 120:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
 124:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
 128:	add	x0, x0, #0x0
 12c:	add	x1, x1, #0x0
 130:	add	x3, x3, #0x0
 134:	mov	w2, #0x108                 	// #264
 138:	bl	0 <__assert_fail>
 13c:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
 140:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
 144:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
 148:	add	x0, x0, #0x0
 14c:	add	x1, x1, #0x0
 150:	add	x3, x3, #0x0
 154:	mov	w2, #0x86                  	// #134
 158:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj:

0000000000000000 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x9, [x0]
   c:	and	x8, x9, #0x6
  10:	cmp	x8, #0x4
  14:	and	x0, x9, #0xfffffffffffffff8
  18:	b.eq	50 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj+0x50>  // b.none
  1c:	cmp	x8, #0x2
  20:	b.ne	7c <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj+0x7c>  // b.any
  24:	cbz	x0, 94 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj+0x94>
  28:	ldrb	w8, [x0, #16]
  2c:	cmp	w8, #0x50
  30:	b.eq	8c <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj+0x8c>  // b.none
  34:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
  38:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
  3c:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	b	104 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj+0x104>
  50:	cbz	x0, b0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj+0xb0>
  54:	ldrb	w8, [x0, #16]
  58:	cmp	w8, #0x23
  5c:	b.eq	8c <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj+0x8c>  // b.none
  60:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
  64:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
  68:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
  6c:	add	x0, x0, #0x0
  70:	add	x1, x1, #0x0
  74:	add	x3, x3, #0x0
  78:	b	104 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj+0x104>
  7c:	cbz	x0, cc <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj+0xcc>
  80:	ldrb	w8, [x0, #16]
  84:	cmp	w8, #0x1d
  88:	b.ne	ec <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj+0xec>  // b.any
  8c:	ldp	x29, x30, [sp], #16
  90:	b	0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
  94:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
  98:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
  9c:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
  a0:	add	x0, x0, #0x0
  a4:	add	x1, x1, #0x0
  a8:	add	x3, x3, #0x0
  ac:	b	e4 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj+0xe4>
  b0:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
  b4:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
  b8:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	b	e4 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj+0xe4>
  cc:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
  d0:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
  d4:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
  d8:	add	x0, x0, #0x0
  dc:	add	x1, x1, #0x0
  e0:	add	x3, x3, #0x0
  e4:	mov	w2, #0x69                  	// #105
  e8:	bl	0 <__assert_fail>
  ec:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
  f0:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
  f4:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
  f8:	add	x0, x0, #0x0
  fc:	add	x1, x1, #0x0
 100:	add	x3, x3, #0x0
 104:	mov	w2, #0x108                 	// #264
 108:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3Use9addToListEPPS0_:

0000000000000000 <_ZN4llvm3Use9addToListEPPS0_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x1]
   c:	mov	x9, x0
  10:	str	x8, [x9, #8]!
  14:	cbz	x8, 30 <_ZN4llvm3Use9addToListEPPS0_+0x30>
  18:	tst	x9, #0x3
  1c:	b.ne	54 <_ZN4llvm3Use9addToListEPPS0_+0x54>  // b.any
  20:	ldr	x10, [x8, #16]
  24:	and	x10, x10, #0x3
  28:	orr	x9, x10, x9
  2c:	str	x9, [x8, #16]
  30:	tst	x1, #0x3
  34:	b.ne	54 <_ZN4llvm3Use9addToListEPPS0_+0x54>  // b.any
  38:	ldr	x8, [x0, #16]
  3c:	and	x8, x8, #0x3
  40:	orr	x8, x8, x1
  44:	str	x8, [x0, #16]
  48:	str	x0, [x1]
  4c:	ldp	x29, x30, [sp], #16
  50:	ret
  54:	adrp	x0, 0 <_ZN4llvm3Use9addToListEPPS0_>
  58:	adrp	x1, 0 <_ZN4llvm3Use9addToListEPPS0_>
  5c:	adrp	x3, 0 <_ZN4llvm3Use9addToListEPPS0_>
  60:	add	x0, x0, #0x0
  64:	add	x1, x1, #0x0
  68:	add	x3, x3, #0x0
  6c:	mov	w2, #0xb3                  	// #179
  70:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8CallBase14setCallingConvEj:

0000000000000000 <_ZN4llvm8CallBase14setCallingConvEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cmp	w1, #0x400
   c:	b.cs	38 <_ZN4llvm8CallBase14setCallingConvEj+0x38>  // b.hs, b.nlast
  10:	ldrh	w8, [x0, #18]
  14:	mov	w9, w8
  18:	bfi	w9, w1, #2, #30
  1c:	sxth	w9, w9
  20:	tbnz	w9, #31, 58 <_ZN4llvm8CallBase14setCallingConvEj+0x58>
  24:	and	w8, w8, #0x8000
  28:	orr	w8, w9, w8
  2c:	strh	w8, [x0, #18]
  30:	ldp	x29, x30, [sp], #16
  34:	ret
  38:	adrp	x0, 0 <_ZN4llvm8CallBase14setCallingConvEj>
  3c:	adrp	x1, 0 <_ZN4llvm8CallBase14setCallingConvEj>
  40:	adrp	x3, 0 <_ZN4llvm8CallBase14setCallingConvEj>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x558                 	// #1368
  54:	bl	0 <__assert_fail>
  58:	adrp	x0, 0 <_ZN4llvm8CallBase14setCallingConvEj>
  5c:	adrp	x1, 0 <_ZN4llvm8CallBase14setCallingConvEj>
  60:	adrp	x3, 0 <_ZN4llvm8CallBase14setCallingConvEj>
  64:	add	x0, x0, #0x0
  68:	add	x1, x1, #0x0
  6c:	add	x3, x3, #0x0
  70:	mov	w2, #0x2fd                 	// #765
  74:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm15CoroPromiseInst12getAlignmentEv:

0000000000000000 <_ZNK4llvm15CoroPromiseInst12getAlignmentEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w1, #0x1                   	// #1
   c:	bl	0 <_ZNK4llvm15CoroPromiseInst12getAlignmentEv>
  10:	cbz	x0, 30 <_ZNK4llvm15CoroPromiseInst12getAlignmentEv+0x30>
  14:	ldrb	w8, [x0, #16]
  18:	cmp	w8, #0xd
  1c:	b.ne	50 <_ZNK4llvm15CoroPromiseInst12getAlignmentEv+0x50>  // b.any
  20:	add	x0, x0, #0x18
  24:	bl	0 <_ZNK4llvm15CoroPromiseInst12getAlignmentEv>
  28:	ldp	x29, x30, [sp], #16
  2c:	ret
  30:	adrp	x0, 0 <_ZNK4llvm15CoroPromiseInst12getAlignmentEv>
  34:	adrp	x1, 0 <_ZNK4llvm15CoroPromiseInst12getAlignmentEv>
  38:	adrp	x3, 0 <_ZNK4llvm15CoroPromiseInst12getAlignmentEv>
  3c:	add	x0, x0, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0x69                  	// #105
  4c:	bl	0 <__assert_fail>
  50:	adrp	x0, 0 <_ZNK4llvm15CoroPromiseInst12getAlignmentEv>
  54:	adrp	x1, 0 <_ZNK4llvm15CoroPromiseInst12getAlignmentEv>
  58:	adrp	x3, 0 <_ZNK4llvm15CoroPromiseInst12getAlignmentEv>
  5c:	add	x0, x0, #0x0
  60:	add	x1, x1, #0x0
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x108                 	// #264
  6c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm15CoroPromiseInst13isFromPromiseEv:

0000000000000000 <_ZNK4llvm15CoroPromiseInst13isFromPromiseEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w1, #0x2                   	// #2
   c:	bl	0 <_ZNK4llvm15CoroPromiseInst13isFromPromiseEv>
  10:	cbz	x0, 28 <_ZNK4llvm15CoroPromiseInst13isFromPromiseEv+0x28>
  14:	ldrb	w8, [x0, #16]
  18:	cmp	w8, #0x11
  1c:	b.cs	48 <_ZNK4llvm15CoroPromiseInst13isFromPromiseEv+0x48>  // b.hs, b.nlast
  20:	ldp	x29, x30, [sp], #16
  24:	b	0 <_ZNK4llvm8Constant10isOneValueEv>
  28:	adrp	x0, 0 <_ZNK4llvm15CoroPromiseInst13isFromPromiseEv>
  2c:	adrp	x1, 0 <_ZNK4llvm15CoroPromiseInst13isFromPromiseEv>
  30:	adrp	x3, 0 <_ZNK4llvm15CoroPromiseInst13isFromPromiseEv>
  34:	add	x0, x0, #0x0
  38:	add	x1, x1, #0x0
  3c:	add	x3, x3, #0x0
  40:	mov	w2, #0x69                  	// #105
  44:	bl	0 <__assert_fail>
  48:	adrp	x0, 0 <_ZNK4llvm15CoroPromiseInst13isFromPromiseEv>
  4c:	adrp	x1, 0 <_ZNK4llvm15CoroPromiseInst13isFromPromiseEv>
  50:	adrp	x3, 0 <_ZNK4llvm15CoroPromiseInst13isFromPromiseEv>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x108                 	// #264
  64:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP1_32EPNS_4TypeEPNS_5ValueEjRKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP1_32EPNS_4TypeEPNS_5ValueEjRKNS_5TwineE>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	str	x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	mov	x19, x0
  1c:	ldr	x0, [x0, #24]
  20:	mov	x20, x4
  24:	mov	w23, w3
  28:	mov	x21, x2
  2c:	mov	x22, x1
  30:	bl	0 <_ZN4llvm4Type10getInt32TyERNS_11LLVMContextE>
  34:	mov	w1, w23
  38:	mov	w2, wzr
  3c:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
  40:	str	x0, [x29, #24]
  44:	cbz	x21, f0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP1_32EPNS_4TypeEPNS_5ValueEjRKNS_5TwineE+0xf0>
  48:	ldrb	w8, [x21, #16]
  4c:	cmp	w8, #0x10
  50:	b.ls	b0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP1_32EPNS_4TypeEPNS_5ValueEjRKNS_5TwineE+0xb0>  // b.plast
  54:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP1_32EPNS_4TypeEPNS_5ValueEjRKNS_5TwineE>
  58:	add	x1, x1, #0x0
  5c:	add	x0, sp, #0x8
  60:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP1_32EPNS_4TypeEPNS_5ValueEjRKNS_5TwineE>
  64:	add	x2, x29, #0x18
  68:	add	x4, sp, #0x8
  6c:	mov	w3, #0x1                   	// #1
  70:	mov	x0, x22
  74:	mov	x1, x21
  78:	mov	x5, xzr
  7c:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP1_32EPNS_4TypeEPNS_5ValueEjRKNS_5TwineE>
  80:	mov	w1, #0x1                   	// #1
  84:	mov	x21, x0
  88:	bl	0 <_ZN4llvm17GetElementPtrInst13setIsInBoundsEb>
  8c:	ldp	x3, x4, [x19, #8]
  90:	mov	x0, x19
  94:	mov	x1, x21
  98:	mov	x2, x20
  9c:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP1_32EPNS_4TypeEPNS_5ValueEjRKNS_5TwineE>
  a0:	mov	x0, x19
  a4:	mov	x1, x21
  a8:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP1_32EPNS_4TypeEPNS_5ValueEjRKNS_5TwineE>
  ac:	b	d4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP1_32EPNS_4TypeEPNS_5ValueEjRKNS_5TwineE+0xd4>
  b0:	add	x2, x29, #0x18
  b4:	mov	w3, #0x1                   	// #1
  b8:	mov	w4, #0x1                   	// #1
  bc:	mov	x0, x22
  c0:	mov	x1, x21
  c4:	mov	x5, xzr
  c8:	mov	x6, xzr
  cc:	bl	0 <_ZN4llvm12ConstantExpr16getGetElementPtrEPNS_4TypeEPNS_8ConstantENS_8ArrayRefIPNS_5ValueEEEbNS_8OptionalIjEES2_>
  d0:	mov	x21, x0
  d4:	mov	x0, x21
  d8:	ldp	x20, x19, [sp, #80]
  dc:	ldp	x22, x21, [sp, #64]
  e0:	ldr	x23, [sp, #48]
  e4:	ldp	x29, x30, [sp, #32]
  e8:	add	sp, sp, #0x60
  ec:	ret
  f0:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP1_32EPNS_4TypeEPNS_5ValueEjRKNS_5TwineE>
  f4:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP1_32EPNS_4TypeEPNS_5ValueEjRKNS_5TwineE>
  f8:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP1_32EPNS_4TypeEPNS_5ValueEjRKNS_5TwineE>
  fc:	add	x0, x0, #0x0
 100:	add	x1, x1, #0x0
 104:	add	x3, x3, #0x0
 108:	mov	w2, #0x69                  	// #105
 10c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm5APInt12getZExtValueEv:

0000000000000000 <_ZNK4llvm5APInt12getZExtValueEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w20, [x0, #8]
  10:	mov	x19, x0
  14:	cmp	w20, #0x40
  18:	b.ls	34 <_ZNK4llvm5APInt12getZExtValueEv+0x34>  // b.plast
  1c:	mov	x0, x19
  20:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
  24:	sub	w8, w20, w0
  28:	cmp	w8, #0x41
  2c:	b.cs	44 <_ZNK4llvm5APInt12getZExtValueEv+0x44>  // b.hs, b.nlast
  30:	ldr	x19, [x19]
  34:	ldr	x0, [x19]
  38:	ldp	x20, x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret
  44:	adrp	x0, 0 <_ZNK4llvm5APInt12getZExtValueEv>
  48:	adrp	x1, 0 <_ZNK4llvm5APInt12getZExtValueEv>
  4c:	adrp	x3, 0 <_ZNK4llvm5APInt12getZExtValueEv>
  50:	add	x0, x0, #0x0
  54:	add	x1, x1, #0x0
  58:	add	x3, x3, #0x0
  5c:	mov	w2, #0x657                 	// #1623
  60:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	x8, [x1]
  1c:	mov	x19, x5
  20:	mov	x20, x4
  24:	mov	x21, x3
  28:	ldrb	w9, [x8, #8]
  2c:	mov	x22, x2
  30:	mov	x23, x1
  34:	mov	x24, x0
  38:	cmp	w9, #0x10
  3c:	b.ne	48 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0x48>  // b.any
  40:	ldr	x8, [x8, #16]
  44:	ldr	x8, [x8]
  48:	cbz	x8, dc <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0xdc>
  4c:	ldrb	w9, [x8, #8]
  50:	cmp	w9, #0xf
  54:	b.ne	fc <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0xfc>  // b.any
  58:	ldr	x8, [x8, #24]
  5c:	cbz	x24, 88 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0x88>
  60:	cmp	x8, x24
  64:	b.eq	8c <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0x8c>  // b.none
  68:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  6c:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  70:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x3a1                 	// #929
  84:	bl	0 <__assert_fail>
  88:	mov	x24, x8
  8c:	add	w25, w21, #0x1
  90:	mov	w0, #0x48                  	// #72
  94:	mov	w1, w25
  98:	bl	0 <_ZN4llvm4UsernwEmj>
  9c:	mov	x1, x24
  a0:	mov	x2, x23
  a4:	mov	x3, x22
  a8:	mov	x4, x21
  ac:	mov	w5, w25
  b0:	mov	x6, x20
  b4:	mov	x7, x19
  b8:	mov	x26, x0
  bc:	bl	0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  c0:	mov	x0, x26
  c4:	ldp	x20, x19, [sp, #64]
  c8:	ldp	x22, x21, [sp, #48]
  cc:	ldp	x24, x23, [sp, #32]
  d0:	ldp	x26, x25, [sp, #16]
  d4:	ldp	x29, x30, [sp], #80
  d8:	ret
  dc:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  e0:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  e4:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x69                  	// #105
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
 100:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
 104:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x108                 	// #264
 118:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x21, x3
  1c:	mov	x22, x2
  20:	mov	x26, x1
  24:	mov	x23, x0
  28:	mov	x0, x1
  2c:	mov	x1, x2
  30:	mov	x2, x3
  34:	mov	x3, x4
  38:	mov	x24, x7
  3c:	mov	x19, x6
  40:	mov	w25, w5
  44:	mov	x20, x4
  48:	bl	0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  4c:	mov	w8, w25
  50:	mov	w9, #0x18                  	// #24
  54:	mneg	x8, x8, x9
  58:	mov	x1, x0
  5c:	add	x3, x23, x8
  60:	mov	w2, #0x22                  	// #34
  64:	mov	x0, x23
  68:	mov	w4, w25
  6c:	mov	x5, x24
  70:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
  74:	mov	x0, x26
  78:	mov	x1, x21
  7c:	mov	x2, x20
  80:	str	x26, [x23, #56]
  84:	bl	0 <_ZN4llvm17GetElementPtrInst14getIndexedTypeEPNS_4TypeENS_8ArrayRefIPNS_5ValueEEE>
  88:	ldr	x8, [x23]
  8c:	str	x0, [x23, #64]
  90:	ldrb	w9, [x8, #8]
  94:	cmp	w9, #0x10
  98:	b.ne	a4 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0xa4>  // b.any
  9c:	ldr	x8, [x8, #16]
  a0:	ldr	x8, [x8]
  a4:	cbz	x8, ec <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0xec>
  a8:	ldrb	w9, [x8, #8]
  ac:	cmp	w9, #0xf
  b0:	b.ne	10c <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0x10c>  // b.any
  b4:	ldr	x8, [x8, #24]
  b8:	cmp	x0, x8
  bc:	b.ne	12c <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0x12c>  // b.any
  c0:	mov	x0, x23
  c4:	mov	x1, x22
  c8:	mov	x2, x21
  cc:	mov	x3, x20
  d0:	mov	x4, x19
  d4:	ldp	x20, x19, [sp, #64]
  d8:	ldp	x22, x21, [sp, #48]
  dc:	ldp	x24, x23, [sp, #32]
  e0:	ldp	x26, x25, [sp, #16]
  e4:	ldp	x29, x30, [sp], #80
  e8:	b	0 <_ZN4llvm17GetElementPtrInst4initEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineE>
  ec:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  f0:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  f4:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  f8:	add	x0, x0, #0x0
  fc:	add	x1, x1, #0x0
 100:	add	x3, x3, #0x0
 104:	mov	w2, #0x69                  	// #105
 108:	bl	0 <__assert_fail>
 10c:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 110:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 114:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 118:	add	x0, x0, #0x0
 11c:	add	x1, x1, #0x0
 120:	add	x3, x3, #0x0
 124:	mov	w2, #0x108                 	// #264
 128:	bl	0 <__assert_fail>
 12c:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 130:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 134:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 138:	add	x0, x0, #0x0
 13c:	add	x1, x1, #0x0
 140:	add	x3, x3, #0x0
 144:	mov	w2, #0x46a                 	// #1130
 148:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE:

0000000000000000 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x2
  14:	mov	x21, x1
  18:	mov	x1, x2
  1c:	mov	x2, x3
  20:	mov	x20, x3
  24:	bl	0 <_ZN4llvm17GetElementPtrInst14getIndexedTypeEPNS_4TypeENS_8ArrayRefIPNS_5ValueEEE>
  28:	cbz	x0, cc <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xcc>
  2c:	ldr	x9, [x21]
  30:	ldr	w8, [x9, #8]
  34:	and	w10, w8, #0xff
  38:	cmp	w10, #0x10
  3c:	b.ne	50 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x50>  // b.any
  40:	ldr	x8, [x9, #16]
  44:	ldr	x8, [x8]
  48:	cbz	x8, 128 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x128>
  4c:	ldr	w8, [x8, #8]
  50:	and	w9, w8, #0xff
  54:	cmp	w9, #0xf
  58:	b.ne	ec <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xec>  // b.any
  5c:	lsr	w1, w8, #8
  60:	bl	0 <_ZN4llvm11PointerType3getEPNS_4TypeEj>
  64:	ldr	x8, [x21]
  68:	ldrb	w9, [x8, #8]
  6c:	cmp	w9, #0x10
  70:	b.ne	80 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x80>  // b.any
  74:	cbz	x8, 10c <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x10c>
  78:	ldr	w1, [x8, #32]
  7c:	b	bc <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xbc>
  80:	cbz	x20, a4 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xa4>
  84:	lsl	x8, x20, #3
  88:	ldr	x9, [x19], #8
  8c:	ldr	x9, [x9]
  90:	ldrb	w10, [x9, #8]
  94:	cmp	w10, #0x10
  98:	b.eq	b4 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xb4>  // b.none
  9c:	subs	x8, x8, #0x8
  a0:	b.ne	88 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x88>  // b.any
  a4:	ldp	x20, x19, [sp, #32]
  a8:	ldr	x21, [sp, #16]
  ac:	ldp	x29, x30, [sp], #48
  b0:	ret
  b4:	cbz	x9, 10c <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x10c>
  b8:	ldr	w1, [x9, #32]
  bc:	ldp	x20, x19, [sp, #32]
  c0:	ldr	x21, [sp, #16]
  c4:	ldp	x29, x30, [sp], #48
  c8:	b	0 <_ZN4llvm10VectorType3getEPNS_4TypeENS_12ElementCountE>
  cc:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  d0:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  d4:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  d8:	add	x0, x0, #0x0
  dc:	add	x1, x1, #0x0
  e0:	add	x3, x3, #0x0
  e4:	mov	w2, #0x375                 	// #885
  e8:	bl	0 <__assert_fail>
  ec:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  f0:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  f4:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  f8:	add	x0, x0, #0x0
  fc:	add	x1, x1, #0x0
 100:	add	x3, x3, #0x0
 104:	mov	w2, #0x108                 	// #264
 108:	bl	0 <__assert_fail>
 10c:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 110:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 114:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 118:	add	x0, x0, #0x0
 11c:	add	x1, x1, #0x0
 120:	add	x3, x3, #0x0
 124:	b	140 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x140>
 128:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 12c:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 130:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 134:	add	x0, x0, #0x0
 138:	add	x1, x1, #0x0
 13c:	add	x3, x3, #0x0
 140:	mov	w2, #0x69                  	// #105
 144:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_5ValueERKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_5ValueERKNS_5TwineE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x1]
   c:	ldrb	w9, [x8, #8]
  10:	cmp	w9, #0xf
  14:	b.ne	30 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_5ValueERKNS_5TwineE+0x30>  // b.any
  18:	ldr	x8, [x8, #16]
  1c:	mov	x3, x2
  20:	mov	x2, x1
  24:	ldr	x1, [x8]
  28:	ldp	x29, x30, [sp], #16
  2c:	b	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_5ValueERKNS_5TwineE>
  30:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_5ValueERKNS_5TwineE>
  34:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_5ValueERKNS_5TwineE>
  38:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_5ValueERKNS_5TwineE>
  3c:	add	x0, x0, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0x17e                 	// #382
  4c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_4TypeEPNS_5ValueERKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_4TypeEPNS_5ValueERKNS_5TwineE>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	str	x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	mov	x21, x1
  1c:	mov	x22, x0
  20:	mov	w0, #0x40                  	// #64
  24:	mov	w1, #0x1                   	// #1
  28:	mov	x19, x3
  2c:	mov	x20, x2
  30:	bl	0 <_ZN4llvm4UsernwEmj>
  34:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_4TypeEPNS_5ValueERKNS_5TwineE>
  38:	mov	x23, x0
  3c:	add	x1, x1, #0x0
  40:	add	x0, sp, #0x8
  44:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_4TypeEPNS_5ValueERKNS_5TwineE>
  48:	add	x3, sp, #0x8
  4c:	mov	x0, x23
  50:	mov	x1, x21
  54:	mov	x2, x20
  58:	mov	x4, xzr
  5c:	bl	0 <_ZN4llvm8LoadInstC1EPNS_4TypeEPNS_5ValueERKNS_5TwineEPNS_11InstructionE>
  60:	ldp	x3, x4, [x22, #8]
  64:	mov	x0, x22
  68:	mov	x1, x23
  6c:	mov	x2, x19
  70:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_4TypeEPNS_5ValueERKNS_5TwineE>
  74:	mov	x0, x22
  78:	mov	x1, x23
  7c:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_4TypeEPNS_5ValueERKNS_5TwineE>
  80:	mov	x0, x23
  84:	ldp	x20, x19, [sp, #80]
  88:	ldp	x22, x21, [sp, #64]
  8c:	ldr	x23, [sp, #48]
  90:	ldp	x29, x30, [sp, #32]
  94:	add	sp, sp, #0x60
  98:	ret

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x24, x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	cbz	x2, e8 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0xe8>
  1c:	ldrb	w8, [x2, #16]
  20:	mov	x20, x4
  24:	mov	x21, x3
  28:	mov	x22, x2
  2c:	mov	w23, w1
  30:	mov	x19, x0
  34:	cmp	w8, #0x10
  38:	b.hi	4c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0x4c>  // b.pmore
  3c:	cbz	x21, e8 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0xe8>
  40:	ldrb	w8, [x21, #16]
  44:	cmp	w8, #0x10
  48:	b.ls	c0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0xc0>  // b.plast
  4c:	mov	w0, #0x38                  	// #56
  50:	mov	w1, #0x2                   	// #2
  54:	bl	0 <_ZN4llvm4UsernwEmj>
  58:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  5c:	mov	x24, x0
  60:	add	x1, x1, #0x0
  64:	add	x0, sp, #0x8
  68:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  6c:	add	x4, sp, #0x8
  70:	mov	x0, x24
  74:	mov	w1, w23
  78:	mov	x2, x22
  7c:	mov	x3, x21
  80:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  84:	ldp	x3, x4, [x19, #8]
  88:	mov	x0, x19
  8c:	mov	x1, x24
  90:	mov	x2, x20
  94:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  98:	mov	x0, x19
  9c:	mov	x1, x24
  a0:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  a4:	mov	x0, x24
  a8:	ldp	x20, x19, [sp, #80]
  ac:	ldp	x22, x21, [sp, #64]
  b0:	ldp	x24, x23, [sp, #48]
  b4:	ldp	x29, x30, [sp, #32]
  b8:	add	sp, sp, #0x60
  bc:	ret
  c0:	mov	w0, w23
  c4:	mov	x1, x22
  c8:	mov	x2, x21
  cc:	ldp	x20, x19, [sp, #80]
  d0:	ldp	x22, x21, [sp, #64]
  d4:	ldp	x24, x23, [sp, #48]
  d8:	ldp	x29, x30, [sp, #32]
  dc:	mov	w3, wzr
  e0:	add	sp, sp, #0x60
  e4:	b	0 <_ZN4llvm12ConstantExpr10getCompareEtPNS_8ConstantES2_b>
  e8:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  ec:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  f0:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  f4:	add	x0, x0, #0x0
  f8:	add	x1, x1, #0x0
  fc:	add	x3, x3, #0x0
 100:	mov	w2, #0x69                  	// #105
 104:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE:

0000000000000000 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #16]
   8:	str	x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	add	x29, sp, #0x10
  18:	ldr	x8, [x2]
  1c:	mov	x23, x0
  20:	mov	x19, x4
  24:	mov	x20, x3
  28:	mov	x0, x8
  2c:	mov	x21, x2
  30:	mov	w22, w1
  34:	bl	0 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE>
  38:	mov	x1, x0
  3c:	mov	w2, #0x35                  	// #53
  40:	mov	x0, x23
  44:	mov	w3, w22
  48:	mov	x4, x21
  4c:	mov	x5, x20
  50:	mov	x6, x19
  54:	mov	x7, xzr
  58:	str	xzr, [sp]
  5c:	bl	0 <_ZN4llvm7CmpInstC2EPNS_4TypeENS_11Instruction8OtherOpsENS0_9PredicateEPNS_5ValueES7_RKNS_5TwineEPS3_SB_>
  60:	mov	x0, x23
  64:	ldp	x20, x19, [sp, #64]
  68:	ldp	x22, x21, [sp, #48]
  6c:	ldr	x23, [sp, #32]
  70:	ldp	x29, x30, [sp, #16]
  74:	add	sp, sp, #0x50
  78:	b	0 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE>

Disassembly of section .text._ZN4llvm7CmpInst17makeCmpResultTypeEPNS_4TypeE:

0000000000000000 <_ZN4llvm7CmpInst17makeCmpResultTypeEPNS_4TypeE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	cbz	x0, 54 <_ZN4llvm7CmpInst17makeCmpResultTypeEPNS_4TypeE+0x54>
  10:	mov	x19, x0
  14:	ldrb	w20, [x0, #8]
  18:	ldr	x0, [x0]
  1c:	bl	0 <_ZN4llvm4Type9getInt1TyERNS_11LLVMContextE>
  20:	cmp	w20, #0x10
  24:	b.ne	48 <_ZN4llvm7CmpInst17makeCmpResultTypeEPNS_4TypeE+0x48>  // b.any
  28:	ldr	x8, [x19, #32]
  2c:	lsr	x9, x8, #32
  30:	cbnz	x9, 74 <_ZN4llvm7CmpInst17makeCmpResultTypeEPNS_4TypeE+0x74>
  34:	ldrb	w9, [x19, #40]
  38:	ldp	x20, x19, [sp, #16]
  3c:	orr	x1, x8, x9, lsl #32
  40:	ldp	x29, x30, [sp], #32
  44:	b	0 <_ZN4llvm10VectorType3getEPNS_4TypeENS_12ElementCountE>
  48:	ldp	x20, x19, [sp, #16]
  4c:	ldp	x29, x30, [sp], #32
  50:	ret
  54:	adrp	x0, 0 <_ZN4llvm7CmpInst17makeCmpResultTypeEPNS_4TypeE>
  58:	adrp	x1, 0 <_ZN4llvm7CmpInst17makeCmpResultTypeEPNS_4TypeE>
  5c:	adrp	x3, 0 <_ZN4llvm7CmpInst17makeCmpResultTypeEPNS_4TypeE>
  60:	add	x0, x0, #0x0
  64:	add	x1, x1, #0x0
  68:	add	x3, x3, #0x0
  6c:	mov	w2, #0x69                  	// #105
  70:	bl	0 <__assert_fail>
  74:	adrp	x0, 0 <_ZN4llvm7CmpInst17makeCmpResultTypeEPNS_4TypeE>
  78:	adrp	x1, 0 <_ZN4llvm7CmpInst17makeCmpResultTypeEPNS_4TypeE>
  7c:	adrp	x3, 0 <_ZN4llvm7CmpInst17makeCmpResultTypeEPNS_4TypeE>
  80:	add	x0, x0, #0x0
  84:	add	x1, x1, #0x0
  88:	add	x3, x3, #0x0
  8c:	mov	w2, #0x220                 	// #544
  90:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8ICmpInst8AssertOKEv:

0000000000000000 <_ZN4llvm8ICmpInst8AssertOKEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrh	w8, [x0, #18]
   c:	and	w8, w8, #0x7fff
  10:	sub	w8, w8, #0x20
  14:	cmp	w8, #0xa
  18:	b.cs	7c <_ZN4llvm8ICmpInst8AssertOKEv+0x7c>  // b.hs, b.nlast
  1c:	ldur	x8, [x0, #-48]
  20:	ldur	x9, [x0, #-24]
  24:	ldr	x8, [x8]
  28:	ldr	x9, [x9]
  2c:	cmp	x8, x9
  30:	b.ne	9c <_ZN4llvm8ICmpInst8AssertOKEv+0x9c>  // b.any
  34:	ldrb	w9, [x8, #8]
  38:	cmp	w9, #0x10
  3c:	mov	w10, w9
  40:	b.ne	50 <_ZN4llvm8ICmpInst8AssertOKEv+0x50>  // b.any
  44:	ldr	x10, [x8, #16]
  48:	ldr	x10, [x10]
  4c:	ldrb	w10, [x10, #8]
  50:	cmp	w10, #0xb
  54:	b.eq	74 <_ZN4llvm8ICmpInst8AssertOKEv+0x74>  // b.none
  58:	cmp	w9, #0x10
  5c:	b.ne	6c <_ZN4llvm8ICmpInst8AssertOKEv+0x6c>  // b.any
  60:	ldr	x8, [x8, #16]
  64:	ldr	x8, [x8]
  68:	ldrb	w9, [x8, #8]
  6c:	cmp	w9, #0xf
  70:	b.ne	bc <_ZN4llvm8ICmpInst8AssertOKEv+0xbc>  // b.any
  74:	ldp	x29, x30, [sp], #16
  78:	ret
  7c:	adrp	x0, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  80:	adrp	x1, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  84:	adrp	x3, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  88:	add	x0, x0, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0x489                 	// #1161
  98:	bl	0 <__assert_fail>
  9c:	adrp	x0, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  a0:	adrp	x1, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  a4:	adrp	x3, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  a8:	add	x0, x0, #0x0
  ac:	add	x1, x1, #0x0
  b0:	add	x3, x3, #0x0
  b4:	mov	w2, #0x48b                 	// #1163
  b8:	bl	0 <__assert_fail>
  bc:	adrp	x0, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  c0:	adrp	x1, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  c4:	adrp	x3, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  c8:	add	x0, x0, #0x0
  cc:	add	x1, x1, #0x0
  d0:	add	x3, x3, #0x0
  d4:	mov	w2, #0x48f                 	// #1167
  d8:	bl	0 <__assert_fail>

Disassembly of section .text._ZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_:

0000000000000000 <_ZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_>:
   0:	sub	sp, sp, #0x20
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	mov	x8, x0
  10:	stp	x1, x2, [sp]
  14:	adrp	x0, 0 <_ZSt15__once_callable>
  18:	ldr	x1, [x0]
  1c:	add	x0, x0, #0x0
  20:	blr	x1
  24:	mrs	x9, tpidr_el0
  28:	mov	x10, sp
  2c:	str	x10, [x9, x0]
  30:	adrp	x0, 0 <_ZSt11__once_call>
  34:	ldr	x1, [x0]
  38:	add	x0, x0, #0x0
  3c:	blr	x1
  40:	adrp	x11, 0 <__pthread_key_create>
  44:	ldr	x11, [x11]
  48:	adrp	x10, 0 <_ZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_>
  4c:	add	x10, x10, #0x0
  50:	str	x10, [x9, x0]
  54:	cbz	x11, 78 <_ZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_+0x78>
  58:	adrp	x1, 0 <__once_proxy>
  5c:	ldr	x1, [x1]
  60:	mov	x0, x8
  64:	bl	0 <pthread_once>
  68:	cbnz	w0, 7c <_ZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_+0x7c>
  6c:	ldp	x29, x30, [sp, #16]
  70:	add	sp, sp, #0x20
  74:	ret
  78:	mov	w0, #0xffffffff            	// #-1
  7c:	bl	0 <_ZSt20__throw_system_errori>

Disassembly of section .text._ZZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_ENUlvE0_8__invokeEv:

0000000000000000 <_ZZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_ENUlvE0_8__invokeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	adrp	x0, 0 <_ZSt15__once_callable>
   c:	ldr	x1, [x0]
  10:	add	x0, x0, #0x0
  14:	blr	x1
  18:	mrs	x8, tpidr_el0
  1c:	ldr	x8, [x8, x0]
  20:	ldp	x1, x9, [x8]
  24:	ldr	x0, [x9]
  28:	ldp	x29, x30, [sp], #16
  2c:	br	x1

CoroElide.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>:
       0:	sub	sp, sp, #0x20
       4:	stp	x29, x30, [sp, #16]
       8:	add	x29, sp, #0x10
       c:	str	x0, [sp, #8]
      10:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
      14:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
      18:	add	x0, x0, #0x0
      1c:	add	x1, x1, #0x0
      20:	add	x2, sp, #0x8
      24:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
      28:	ldp	x29, x30, [sp, #16]
      2c:	add	sp, sp, #0x20
      30:	ret

0000000000000034 <_ZL33initializeCoroElideLegacyPassOnceRN4llvm12PassRegistryE>:
      34:	stp	x29, x30, [sp, #-32]!
      38:	stp	x20, x19, [sp, #16]
      3c:	mov	x29, sp
      40:	mov	x19, x0
      44:	bl	0 <_ZN4llvm34initializeAAResultsWrapperPassPassERNS_12PassRegistryE>
      48:	mov	w0, #0x50                  	// #80
      4c:	bl	0 <_Znwm>
      50:	adrp	x8, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
      54:	add	x8, x8, #0x0
      58:	mov	w9, #0x41                  	// #65
      5c:	adrp	x10, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
      60:	add	x10, x10, #0x0
      64:	stp	x8, x9, [x0]
      68:	mov	w8, #0xa                   	// #10
      6c:	stp	x10, x8, [x0, #16]
      70:	adrp	x8, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
      74:	add	x8, x8, #0x0
      78:	str	x8, [x0, #32]
      7c:	adrp	x8, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
      80:	mov	x20, x0
      84:	add	x8, x8, #0x0
      88:	strh	wzr, [x0, #40]
      8c:	strb	wzr, [x0, #42]
      90:	stp	xzr, xzr, [x0, #48]
      94:	stp	xzr, x8, [x0, #64]
      98:	mov	w2, #0x1                   	// #1
      9c:	mov	x0, x19
      a0:	mov	x1, x20
      a4:	bl	0 <_ZN4llvm12PassRegistry12registerPassERKNS_8PassInfoEb>
      a8:	mov	x0, x20
      ac:	ldp	x20, x19, [sp, #16]
      b0:	ldp	x29, x30, [sp], #32
      b4:	ret

00000000000000b8 <_ZN4llvm25createCoroElideLegacyPassEv>:
      b8:	stp	x29, x30, [sp, #-32]!
      bc:	str	x19, [sp, #16]
      c0:	mov	x29, sp
      c4:	mov	w0, #0x28                  	// #40
      c8:	bl	0 <_Znwm>
      cc:	mov	x19, x0
      d0:	bl	e4 <_ZN12_GLOBAL__N_115CoroElideLegacyC2Ev>
      d4:	mov	x0, x19
      d8:	ldr	x19, [sp, #16]
      dc:	ldp	x29, x30, [sp], #32
      e0:	ret

00000000000000e4 <_ZN12_GLOBAL__N_115CoroElideLegacyC2Ev>:
      e4:	sub	sp, sp, #0x20
      e8:	stp	x29, x30, [sp, #16]
      ec:	add	x29, sp, #0x10
      f0:	adrp	x8, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
      f4:	adrp	x10, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
      f8:	add	x8, x8, #0x0
      fc:	mov	w9, #0x2                   	// #2
     100:	add	x10, x10, #0x0
     104:	stp	xzr, x8, [x0, #8]
     108:	str	w9, [x0, #24]
     10c:	str	x10, [x0]
     110:	str	xzr, [x0, #32]
     114:	bl	0 <_ZN4llvm12PassRegistry15getPassRegistryEv>
     118:	str	x0, [sp, #8]
     11c:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     120:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     124:	add	x0, x0, #0x0
     128:	add	x1, x1, #0x0
     12c:	add	x2, sp, #0x8
     130:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     134:	ldp	x29, x30, [sp, #16]
     138:	add	sp, sp, #0x20
     13c:	ret

0000000000000140 <_ZN4llvm15callDefaultCtorIN12_GLOBAL__N_115CoroElideLegacyEEEPNS_4PassEv>:
     140:	stp	x29, x30, [sp, #-32]!
     144:	str	x19, [sp, #16]
     148:	mov	x29, sp
     14c:	mov	w0, #0x28                  	// #40
     150:	bl	0 <_Znwm>
     154:	mov	x19, x0
     158:	bl	e4 <_ZN12_GLOBAL__N_115CoroElideLegacyC2Ev>
     15c:	mov	x0, x19
     160:	ldr	x19, [sp, #16]
     164:	ldp	x29, x30, [sp], #32
     168:	ret

000000000000016c <_ZN12_GLOBAL__N_115CoroElideLegacyD2Ev>:
     16c:	stp	x29, x30, [sp, #-32]!
     170:	str	x19, [sp, #16]
     174:	mov	x29, sp
     178:	mov	x19, x0
     17c:	ldr	x0, [x0, #32]
     180:	adrp	x8, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     184:	add	x8, x8, #0x0
     188:	str	x8, [x19]
     18c:	cbz	x0, 194 <_ZN12_GLOBAL__N_115CoroElideLegacyD2Ev+0x28>
     190:	bl	11e8 <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_>
     194:	str	xzr, [x19, #32]
     198:	mov	x0, x19
     19c:	ldr	x19, [sp, #16]
     1a0:	ldp	x29, x30, [sp], #32
     1a4:	b	0 <_ZN4llvm4PassD2Ev>

00000000000001a8 <_ZN12_GLOBAL__N_115CoroElideLegacyD0Ev>:
     1a8:	stp	x29, x30, [sp, #-32]!
     1ac:	str	x19, [sp, #16]
     1b0:	mov	x29, sp
     1b4:	mov	x19, x0
     1b8:	ldr	x0, [x0, #32]
     1bc:	adrp	x8, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     1c0:	add	x8, x8, #0x0
     1c4:	str	x8, [x19]
     1c8:	cbz	x0, 1d0 <_ZN12_GLOBAL__N_115CoroElideLegacyD0Ev+0x28>
     1cc:	bl	11e8 <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_>
     1d0:	mov	x0, x19
     1d4:	str	xzr, [x19, #32]
     1d8:	bl	0 <_ZN4llvm4PassD2Ev>
     1dc:	mov	x0, x19
     1e0:	ldr	x19, [sp, #16]
     1e4:	ldp	x29, x30, [sp], #32
     1e8:	b	0 <_ZdlPv>

00000000000001ec <_ZNK12_GLOBAL__N_115CoroElideLegacy11getPassNameEv>:
     1ec:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     1f0:	add	x0, x0, #0x0
     1f4:	mov	w1, #0x11                  	// #17
     1f8:	ret

00000000000001fc <_ZN12_GLOBAL__N_115CoroElideLegacy16doInitializationERN4llvm6ModuleE>:
     1fc:	sub	sp, sp, #0x40
     200:	stp	x29, x30, [sp, #16]
     204:	str	x21, [sp, #32]
     208:	stp	x20, x19, [sp, #48]
     20c:	add	x29, sp, #0x10
     210:	mov	x20, x1
     214:	adrp	x8, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     218:	mov	x19, x0
     21c:	add	x8, x8, #0x0
     220:	mov	w9, #0xc                   	// #12
     224:	mov	x1, sp
     228:	mov	w2, #0x1                   	// #1
     22c:	mov	x0, x20
     230:	stp	x8, x9, [sp]
     234:	bl	0 <_ZN4llvm4coro18declaresIntrinsicsERKNS_6ModuleESt16initializer_listINS_9StringRefEE>
     238:	tbz	w0, #0, 2b8 <_ZN12_GLOBAL__N_115CoroElideLegacy16doInitializationERN4llvm6ModuleE+0xbc>
     23c:	mov	w0, #0x100                 	// #256
     240:	bl	0 <_Znwm>
     244:	mov	x1, x20
     248:	mov	x21, x0
     24c:	bl	0 <_ZN4llvm4coro11LowererBaseC2ERNS_6ModuleE>
     250:	add	x8, x21, #0x38
     254:	str	x8, [x21, #40]
     258:	adrp	x8, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     25c:	ldr	d0, [x8]
     260:	add	x8, x21, #0x68
     264:	str	x8, [x21, #88]
     268:	adrp	x8, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     26c:	ldr	d1, [x8]
     270:	add	x8, x21, #0x80
     274:	str	x8, [x21, #112]
     278:	add	x8, x21, #0x98
     27c:	str	x8, [x21, #136]
     280:	add	x8, x21, #0xc8
     284:	str	x8, [x21, #184]
     288:	add	x8, x21, #0xf8
     28c:	str	x8, [x21, #232]
     290:	str	d0, [x21, #48]
     294:	str	d1, [x21, #96]
     298:	str	d1, [x21, #120]
     29c:	str	d0, [x21, #144]
     2a0:	str	d0, [x21, #192]
     2a4:	str	d1, [x21, #240]
     2a8:	ldr	x0, [x19, #32]
     2ac:	str	x21, [x19, #32]
     2b0:	cbz	x0, 2b8 <_ZN12_GLOBAL__N_115CoroElideLegacy16doInitializationERN4llvm6ModuleE+0xbc>
     2b4:	bl	11e8 <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_>
     2b8:	ldp	x20, x19, [sp, #48]
     2bc:	ldr	x21, [sp, #32]
     2c0:	ldp	x29, x30, [sp, #16]
     2c4:	mov	w0, wzr
     2c8:	add	sp, sp, #0x40
     2cc:	ret

00000000000002d0 <_ZNK12_GLOBAL__N_115CoroElideLegacy16getAnalysisUsageERN4llvm13AnalysisUsageE>:
     2d0:	stp	x29, x30, [sp, #-32]!
     2d4:	str	x19, [sp, #16]
     2d8:	mov	x29, sp
     2dc:	mov	x19, x1
     2e0:	adrp	x1, 0 <_ZN4llvm20AAResultsWrapperPass2IDE>
     2e4:	ldr	x1, [x1]
     2e8:	mov	x0, x19
     2ec:	bl	0 <_ZN4llvm13AnalysisUsage13addRequiredIDERc>
     2f0:	adrp	x1, 0 <_ZN4llvm24DominatorTreeWrapperPass2IDE>
     2f4:	ldr	x1, [x1]
     2f8:	mov	x0, x19
     2fc:	ldr	x19, [sp, #16]
     300:	ldp	x29, x30, [sp], #32
     304:	b	0 <_ZN4llvm13AnalysisUsage13addRequiredIDERc>

0000000000000308 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE>:
     308:	stp	d9, d8, [sp, #-112]!
     30c:	stp	x29, x30, [sp, #16]
     310:	stp	x28, x27, [sp, #32]
     314:	stp	x26, x25, [sp, #48]
     318:	stp	x24, x23, [sp, #64]
     31c:	stp	x22, x21, [sp, #80]
     320:	stp	x20, x19, [sp, #96]
     324:	mov	x29, sp
     328:	sub	sp, sp, #0x1e0
     32c:	ldr	x8, [x0, #32]
     330:	cbz	x8, 4ac <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1a4>
     334:	mov	x25, x0
     338:	mov	x20, x1
     33c:	add	x0, x1, #0x70
     340:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     344:	add	x1, x1, #0x0
     348:	mov	w2, #0x12                  	// #18
     34c:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9StringRefE>
     350:	tbz	w0, #0, 4b4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1ac>
     354:	adrp	x8, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     358:	ldr	d0, [x8]
     35c:	add	x8, sp, #0xa0
     360:	add	x8, x8, #0x10
     364:	sub	x0, x29, #0x70
     368:	mov	x1, x20
     36c:	str	x8, [sp, #160]
     370:	str	d0, [sp, #168]
     374:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     378:	ldp	x19, x22, [x29, #-112]
     37c:	ldur	x23, [x29, #-96]
     380:	add	x21, x20, #0x48
     384:	cmp	x19, x21
     388:	cset	w8, ne  // ne = any
     38c:	cmp	x23, #0x0
     390:	cset	w9, ne  // ne = any
     394:	cmp	x21, x22
     398:	b.ne	3a4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x9c>  // b.any
     39c:	and	w8, w8, w9
     3a0:	cbz	w8, 47c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x174>
     3a4:	ldrb	w8, [x23]
     3a8:	tbnz	w8, #2, 1024 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xd1c>
     3ac:	sub	x8, x23, #0x18
     3b0:	cmp	x23, #0x0
     3b4:	csel	x0, xzr, x8, eq  // eq = none
     3b8:	cbz	x23, 1108 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xe00>
     3bc:	ldrb	w8, [x0, #16]
     3c0:	cmp	w8, #0x50
     3c4:	b.ne	40c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x104>  // b.any
     3c8:	ldur	x8, [x0, #-24]
     3cc:	cbz	x8, 40c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x104>
     3d0:	ldrb	w9, [x8, #16]
     3d4:	cbnz	w9, 40c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x104>
     3d8:	ldrb	w9, [x8, #33]
     3dc:	tbz	w9, #5, 40c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x104>
     3e0:	ldr	w8, [x8, #36]
     3e4:	cmp	w8, #0x22
     3e8:	b.ne	40c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x104>  // b.any
     3ec:	stur	x0, [x29, #-112]
     3f0:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     3f4:	cmn	w0, #0x1
     3f8:	b.ne	410 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x108>  // b.any
     3fc:	add	x0, sp, #0xa0
     400:	sub	x1, x29, #0x70
     404:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     408:	b	410 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x108>
     40c:	stur	xzr, [x29, #-112]
     410:	ldrb	w8, [x22]
     414:	tbnz	w8, #2, fd4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xccc>
     418:	ldr	x23, [x23, #8]
     41c:	sub	x8, x22, #0x18
     420:	cmp	x22, #0x0
     424:	csel	x8, xzr, x8, eq  // eq = none
     428:	add	x8, x8, #0x28
     42c:	cmp	x8, x23
     430:	b.ne	45c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x154>  // b.any
     434:	ldr	x22, [x22, #8]
     438:	cmp	x19, x22
     43c:	b.eq	45c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x154>  // b.none
     440:	ldrb	w8, [x22]
     444:	tbnz	w8, #2, fd4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xccc>
     448:	sub	x8, x22, #0x18
     44c:	cmp	x22, #0x0
     450:	csel	x8, xzr, x8, eq  // eq = none
     454:	ldr	x23, [x8, #48]
     458:	b	428 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x120>
     45c:	cmp	x19, x21
     460:	cset	w8, ne  // ne = any
     464:	cmp	x23, #0x0
     468:	cset	w9, ne  // ne = any
     46c:	cmp	x21, x22
     470:	b.ne	3a4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x9c>  // b.any
     474:	and	w8, w8, w9
     478:	tbnz	w8, #0, 3a4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x9c>
     47c:	ldr	w8, [sp, #168]
     480:	cbz	w8, 4bc <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1b4>
     484:	ldr	x0, [x20, #40]
     488:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     48c:	add	x1, x1, #0x0
     490:	mov	w2, #0x13                  	// #19
     494:	bl	0 <_ZNK4llvm6Module11getFunctionENS_9StringRefE>
     498:	cbz	x0, 11c8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xec0>
     49c:	add	x1, sp, #0xa0
     4a0:	bl	1288 <_ZL19replaceWithConstantPN4llvm8ConstantERNS_15SmallVectorImplIPNS_13CoroSubFnInstEEE>
     4a4:	mov	w21, #0x1                   	// #1
     4a8:	b	4c0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1b8>
     4ac:	mov	w21, wzr
     4b0:	b	f4c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xc44>
     4b4:	mov	w21, wzr
     4b8:	b	4d8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1d0>
     4bc:	mov	w21, wzr
     4c0:	ldr	x0, [sp, #160]
     4c4:	add	x8, sp, #0xa0
     4c8:	add	x8, x8, #0x10
     4cc:	cmp	x0, x8
     4d0:	b.eq	4d8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1d0>  // b.none
     4d4:	bl	0 <free>
     4d8:	ldr	x8, [x25, #32]
     4dc:	sub	x0, x29, #0x70
     4e0:	mov	x1, x20
     4e4:	str	wzr, [x8, #48]
     4e8:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     4ec:	ldp	x19, x23, [x29, #-112]
     4f0:	ldur	x24, [x29, #-96]
     4f4:	add	x22, x20, #0x48
     4f8:	cmp	x19, x22
     4fc:	cset	w8, ne  // ne = any
     500:	cmp	x24, #0x0
     504:	cset	w9, ne  // ne = any
     508:	cmp	x22, x23
     50c:	b.ne	518 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x210>  // b.any
     510:	and	w8, w8, w9
     514:	cbz	w8, 610 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x308>
     518:	ldrb	w8, [x24]
     51c:	tbnz	w8, #2, 1024 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xd1c>
     520:	sub	x8, x24, #0x18
     524:	cmp	x24, #0x0
     528:	csel	x0, xzr, x8, eq  // eq = none
     52c:	cbz	x24, 10cc <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xdc4>
     530:	ldrb	w8, [x0, #16]
     534:	cmp	w8, #0x50
     538:	b.ne	5a0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x298>  // b.any
     53c:	ldur	x8, [x0, #-24]
     540:	cbz	x8, 5a0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x298>
     544:	ldrb	w9, [x8, #16]
     548:	cbnz	w9, 5a0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x298>
     54c:	ldrb	w9, [x8, #33]
     550:	tbz	w9, #5, 5a0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x298>
     554:	ldr	w8, [x8, #36]
     558:	cmp	w8, #0x18
     55c:	b.ne	5a0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x298>  // b.any
     560:	stur	x0, [x29, #-112]
     564:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     568:	cbz	x1, 5a4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x29c>
     56c:	ldur	x0, [x29, #-112]
     570:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     574:	ldur	x8, [x29, #-112]
     578:	mov	x20, x0
     57c:	mov	x0, x8
     580:	bl	0 <_ZNK4llvm11Instruction11getFunctionEv>
     584:	cmp	x20, x0
     588:	b.eq	5a4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x29c>  // b.none
     58c:	ldr	x8, [x25, #32]
     590:	sub	x1, x29, #0x70
     594:	add	x0, x8, #0x28
     598:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     59c:	b	5a4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x29c>
     5a0:	stur	xzr, [x29, #-112]
     5a4:	ldrb	w8, [x23]
     5a8:	tbnz	w8, #2, fd4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xccc>
     5ac:	ldr	x24, [x24, #8]
     5b0:	sub	x8, x23, #0x18
     5b4:	cmp	x23, #0x0
     5b8:	csel	x8, xzr, x8, eq  // eq = none
     5bc:	add	x8, x8, #0x28
     5c0:	cmp	x8, x24
     5c4:	b.ne	5f0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x2e8>  // b.any
     5c8:	ldr	x23, [x23, #8]
     5cc:	cmp	x19, x23
     5d0:	b.eq	5f0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x2e8>  // b.none
     5d4:	ldrb	w8, [x23]
     5d8:	tbnz	w8, #2, fd4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xccc>
     5dc:	sub	x8, x23, #0x18
     5e0:	cmp	x23, #0x0
     5e4:	csel	x8, xzr, x8, eq  // eq = none
     5e8:	ldr	x24, [x8, #48]
     5ec:	b	5bc <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x2b4>
     5f0:	cmp	x19, x22
     5f4:	cset	w8, ne  // ne = any
     5f8:	cmp	x24, #0x0
     5fc:	cset	w9, ne  // ne = any
     600:	cmp	x22, x23
     604:	b.ne	518 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x210>  // b.any
     608:	and	w8, w8, w9
     60c:	tbnz	w8, #0, 518 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x210>
     610:	ldr	x8, [x25, #32]
     614:	ldr	w8, [x8, #48]
     618:	cbz	w8, f4c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xc44>
     61c:	mov	x0, x25
     620:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     624:	ldr	x8, [x0, #32]
     628:	mov	x0, x25
     62c:	str	x8, [sp, #80]
     630:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     634:	ldr	x27, [x25, #32]
     638:	str	x25, [sp, #32]
     63c:	ldr	w8, [x27, #48]
     640:	cbz	w8, f4c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xc44>
     644:	ldr	x13, [x27, #40]
     648:	adrp	x11, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     64c:	adrp	x12, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     650:	ldr	d8, [x11]
     654:	ldr	d9, [x12]
     658:	sub	x15, x29, #0xb8
     65c:	sub	x14, x29, #0x70
     660:	add	x9, sp, #0xa0
     664:	sub	x10, x29, #0x70
     668:	add	x11, x15, #0x28
     66c:	add	x21, x0, #0x20
     670:	add	x14, x14, #0x28
     674:	str	x11, [sp, #8]
     678:	add	x11, x9, #0x28
     67c:	add	x10, x10, #0x10
     680:	add	x19, x9, #0x10
     684:	add	x8, x13, x8, lsl #3
     688:	str	x14, [sp, #16]
     68c:	str	x11, [sp]
     690:	str	x10, [sp, #72]
     694:	str	x8, [sp, #40]
     698:	ldr	x20, [x13]
     69c:	str	x13, [sp, #56]
     6a0:	str	wzr, [x27, #96]
     6a4:	str	wzr, [x27, #120]
     6a8:	mov	x0, x20
     6ac:	str	wzr, [x27, #240]
     6b0:	str	wzr, [x27, #144]
     6b4:	str	wzr, [x27, #192]
     6b8:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
     6bc:	ldr	x8, [x20, #8]
     6c0:	stur	x8, [x29, #-112]
     6c4:	cbz	x8, 7c0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x4b8>
     6c8:	add	x25, x27, #0x58
     6cc:	add	x26, x27, #0x70
     6d0:	add	x22, x27, #0xe8
     6d4:	sub	x0, x29, #0x70
     6d8:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     6dc:	cbz	x0, ff0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xce8>
     6e0:	ldrb	w8, [x0, #16]
     6e4:	cmp	w8, #0x50
     6e8:	b.ne	724 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x41c>  // b.any
     6ec:	ldur	x8, [x0, #-24]
     6f0:	cbz	x8, 730 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x428>
     6f4:	ldrb	w9, [x8, #16]
     6f8:	cbnz	w9, 730 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x428>
     6fc:	ldrb	w9, [x8, #33]
     700:	tbz	w9, #5, 730 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x428>
     704:	ldr	w8, [x8, #36]
     708:	cmp	w8, #0x12
     70c:	b.ne	730 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x428>  // b.any
     710:	str	x0, [sp, #160]
     714:	add	x1, sp, #0xa0
     718:	mov	x0, x25
     71c:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     720:	b	7ac <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x4a4>
     724:	str	xzr, [sp, #160]
     728:	stur	xzr, [x29, #-184]
     72c:	b	7a8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x4a0>
     730:	str	xzr, [sp, #160]
     734:	ldur	x8, [x0, #-24]
     738:	cbz	x8, 76c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x464>
     73c:	ldrb	w9, [x8, #16]
     740:	cbnz	w9, 76c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x464>
     744:	ldrb	w9, [x8, #33]
     748:	tbz	w9, #5, 76c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x464>
     74c:	ldr	w8, [x8, #36]
     750:	cmp	w8, #0xe
     754:	b.ne	76c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x464>  // b.any
     758:	stur	x0, [x29, #-184]
     75c:	sub	x1, x29, #0xb8
     760:	mov	x0, x26
     764:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     768:	b	7ac <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x4a4>
     76c:	stur	xzr, [x29, #-184]
     770:	ldur	x8, [x0, #-24]
     774:	cbz	x8, 7a8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x4a0>
     778:	ldrb	w9, [x8, #16]
     77c:	cbnz	w9, 7a8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x4a0>
     780:	ldrb	w9, [x8, #33]
     784:	tbz	w9, #5, 7a8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x4a0>
     788:	ldr	w8, [x8, #36]
     78c:	cmp	w8, #0x17
     790:	b.ne	7a8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x4a0>  // b.any
     794:	str	x0, [sp, #88]
     798:	add	x1, sp, #0x58
     79c:	mov	x0, x22
     7a0:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     7a4:	b	7ac <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x4a4>
     7a8:	str	xzr, [sp, #88]
     7ac:	ldur	x8, [x29, #-112]
     7b0:	cbz	x8, f74 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xc6c>
     7b4:	ldr	x8, [x8, #8]
     7b8:	stur	x8, [x29, #-112]
     7bc:	cbnz	x8, 6d4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x3cc>
     7c0:	ldr	w8, [x27, #96]
     7c4:	add	x28, x27, #0x88
     7c8:	add	x25, x27, #0xb8
     7cc:	str	x20, [sp, #64]
     7d0:	cbz	w8, 880 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x578>
     7d4:	ldr	x23, [x27, #88]
     7d8:	add	x26, x23, x8, lsl #3
     7dc:	ldr	x22, [x23]
     7e0:	mov	x0, x22
     7e4:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
     7e8:	ldr	x8, [x22, #8]
     7ec:	stur	x8, [x29, #-112]
     7f0:	cbz	x8, 874 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x56c>
     7f4:	sub	x0, x29, #0x70
     7f8:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     7fc:	cbz	x0, f94 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xc8c>
     800:	ldrb	w8, [x0, #16]
     804:	cmp	w8, #0x50
     808:	b.ne	850 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x548>  // b.any
     80c:	ldur	x8, [x0, #-24]
     810:	cbz	x8, 850 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x548>
     814:	ldrb	w9, [x8, #16]
     818:	cbnz	w9, 850 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x548>
     81c:	ldrb	w9, [x8, #33]
     820:	tbz	w9, #5, 850 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x548>
     824:	ldr	w8, [x8, #36]
     828:	cmp	w8, #0x22
     82c:	b.ne	850 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x548>  // b.any
     830:	str	x0, [sp, #160]
     834:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     838:	cmp	w0, #0x1
     83c:	b.eq	864 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x55c>  // b.none
     840:	cbnz	w0, 100c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xd04>
     844:	add	x1, sp, #0xa0
     848:	mov	x0, x28
     84c:	b	86c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x564>
     850:	str	xzr, [sp, #160]
     854:	ldur	x8, [x29, #-112]
     858:	cbz	x8, f74 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xc6c>
     85c:	ldr	x8, [x8, #8]
     860:	b	7ec <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x4e4>
     864:	add	x1, sp, #0xa0
     868:	mov	x0, x25
     86c:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     870:	b	854 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x54c>
     874:	add	x23, x23, #0x8
     878:	cmp	x23, x26
     87c:	b.ne	7dc <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x4d4>  // b.any
     880:	ldr	x23, [sp, #64]
     884:	mov	x0, x23
     888:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     88c:	cbz	x1, 10e8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xde0>
     890:	mov	x20, x1
     894:	sub	x1, x29, #0x70
     898:	mov	w2, #0x1                   	// #1
     89c:	mov	x0, x20
     8a0:	mov	x3, xzr
     8a4:	stur	wzr, [x29, #-112]
     8a8:	bl	0 <_ZN4llvm12ConstantExpr15getExtractValueEPNS_8ConstantENS_8ArrayRefIjEEPNS_4TypeE>
     8ac:	mov	x1, x28
     8b0:	mov	x24, x0
     8b4:	bl	1288 <_ZL19replaceWithConstantPN4llvm8ConstantERNS_15SmallVectorImplIPNS_13CoroSubFnInstEEE>
     8b8:	mov	x0, x23
     8bc:	bl	0 <_ZNK4llvm11Instruction11getFunctionEv>
     8c0:	ldr	w8, [x27, #120]
     8c4:	cbz	w8, a58 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x750>
     8c8:	ldr	x8, [sp, #16]
     8cc:	stur	d8, [x29, #-88]
     8d0:	stur	wzr, [x29, #-80]
     8d4:	add	x28, x0, #0x48
     8d8:	stp	xzr, x8, [x29, #-112]
     8dc:	stur	x8, [x29, #-96]
     8e0:	ldr	x26, [x0, #80]
     8e4:	cmp	x28, x26
     8e8:	b.eq	938 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x630>  // b.none
     8ec:	ldrb	w8, [x26]
     8f0:	tbnz	w8, #2, fd4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xccc>
     8f4:	sub	x8, x26, #0x18
     8f8:	cmp	x26, #0x0
     8fc:	csel	x0, xzr, x8, eq  // eq = none
     900:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
     904:	mov	x22, x0
     908:	bl	0 <_ZNK4llvm11Instruction16getNumSuccessorsEv>
     90c:	cbnz	w0, 930 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x628>
     910:	ldrb	w8, [x22, #16]
     914:	sub	w8, w8, #0x1d
     918:	cmp	w8, #0x6
     91c:	b.cc	930 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x628>  // b.lo, b.ul, b.last
     920:	add	x8, sp, #0xa0
     924:	sub	x0, x29, #0x70
     928:	mov	x1, x22
     92c:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     930:	ldr	x26, [x26, #8]
     934:	b	8e4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x5dc>
     938:	ldr	x9, [sp, #8]
     93c:	stur	d9, [x29, #-160]
     940:	stur	wzr, [x29, #-152]
     944:	str	x20, [sp, #48]
     948:	stp	xzr, x9, [x29, #-184]
     94c:	stur	x9, [x29, #-168]
     950:	ldr	w8, [x27, #192]
     954:	cbz	w8, a80 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x778>
     958:	ldr	x22, [x27, #184]
     95c:	str	x24, [sp, #24]
     960:	add	x26, x22, x8, lsl #3
     964:	ldp	x9, x8, [x29, #-104]
     968:	sub	x23, x29, #0x70
     96c:	add	x20, x23, #0x1c
     970:	add	x24, x23, #0x18
     974:	cmp	x8, x9
     978:	csel	x9, x20, x24, eq  // eq = none
     97c:	ldr	w9, [x9]
     980:	ldr	x28, [x22]
     984:	add	x0, sp, #0x58
     988:	add	x9, x8, x9, lsl #3
     98c:	stp	x8, x9, [sp, #88]
     990:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     994:	ldp	x10, x8, [x29, #-104]
     998:	ldur	x9, [x29, #-112]
     99c:	sub	x0, x29, #0xd8
     9a0:	cmp	x8, x10
     9a4:	stp	x23, x9, [sp, #104]
     9a8:	csel	x9, x20, x24, eq  // eq = none
     9ac:	ldr	w9, [x9]
     9b0:	add	x8, x8, x9, lsl #3
     9b4:	stp	x8, x8, [x29, #-216]
     9b8:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     9bc:	ldr	x8, [sp, #88]
     9c0:	ldur	x9, [x29, #-216]
     9c4:	ldur	x10, [x29, #-112]
     9c8:	cmp	x8, x9
     9cc:	stp	x23, x10, [x29, #-200]
     9d0:	b.eq	a38 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x730>  // b.none
     9d4:	add	x0, sp, #0x58
     9d8:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     9dc:	mov	x2, x0
     9e0:	mov	x0, x21
     9e4:	mov	x1, x28
     9e8:	bl	0 <_ZNK4llvm13DominatorTree9dominatesEPKNS_11InstructionES3_>
     9ec:	tbnz	w0, #0, a28 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x720>
     9f0:	ldp	x8, x9, [sp, #104]
     9f4:	ldr	x8, [x8]
     9f8:	cmp	x8, x9
     9fc:	b.ne	fb4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xcac>  // b.any
     a00:	ldr	x8, [sp, #88]
     a04:	add	x0, sp, #0x58
     a08:	add	x8, x8, #0x8
     a0c:	str	x8, [sp, #88]
     a10:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     a14:	ldr	x8, [sp, #88]
     a18:	ldur	x9, [x29, #-216]
     a1c:	cmp	x8, x9
     a20:	b.ne	9d4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x6cc>  // b.any
     a24:	b	a38 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x730>
     a28:	add	x8, sp, #0xa0
     a2c:	sub	x0, x29, #0xb8
     a30:	mov	x1, x28
     a34:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     a38:	add	x22, x22, #0x8
     a3c:	cmp	x22, x26
     a40:	b.ne	964 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x65c>  // b.any
     a44:	ldp	x11, x9, [x29, #-176]
     a48:	ldp	w10, w8, [x29, #-160]
     a4c:	ldr	x23, [sp, #64]
     a50:	ldr	x24, [sp, #24]
     a54:	b	a88 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x780>
     a58:	mov	w8, #0x1                   	// #1
     a5c:	sub	x1, x29, #0x70
     a60:	mov	w2, #0x1                   	// #1
     a64:	mov	x0, x20
     a68:	mov	x3, xzr
     a6c:	stur	w8, [x29, #-112]
     a70:	bl	0 <_ZN4llvm12ConstantExpr15getExtractValueEPNS_8ConstantENS_8ArrayRefIjEEPNS_4TypeE>
     a74:	mov	x1, x25
     a78:	bl	1288 <_ZL19replaceWithConstantPN4llvm8ConstantERNS_15SmallVectorImplIPNS_13CoroSubFnInstEEE>
     a7c:	b	f28 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xc20>
     a80:	mov	w10, #0x4                   	// #4
     a84:	mov	x11, x9
     a88:	ldr	x12, [sp]
     a8c:	cmp	x9, x11
     a90:	csel	w8, w8, w10, eq  // eq = none
     a94:	add	x8, x9, w8, uxtw #3
     a98:	sub	x0, x29, #0xd8
     a9c:	stp	xzr, x12, [sp, #160]
     aa0:	str	x12, [sp, #176]
     aa4:	str	d8, [sp, #184]
     aa8:	str	wzr, [sp, #192]
     aac:	stp	x9, x8, [x29, #-216]
     ab0:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     ab4:	ldp	x10, x8, [x29, #-176]
     ab8:	ldur	x9, [x29, #-184]
     abc:	sub	x20, x29, #0xb8
     ac0:	add	x11, x20, #0x1c
     ac4:	add	x12, x20, #0x18
     ac8:	cmp	x8, x10
     acc:	stp	x20, x9, [x29, #-200]
     ad0:	csel	x9, x11, x12, eq  // eq = none
     ad4:	ldr	w9, [x9]
     ad8:	add	x0, sp, #0x80
     adc:	add	x8, x8, x9, lsl #3
     ae0:	stp	x8, x8, [sp, #128]
     ae4:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     ae8:	ldur	x10, [x29, #-184]
     aec:	ldur	x8, [x29, #-216]
     af0:	ldr	x9, [sp, #128]
     af4:	stp	x20, x10, [sp, #144]
     af8:	ldr	x20, [sp, #48]
     afc:	cmp	x8, x9
     b00:	b.eq	b8c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x884>  // b.none
     b04:	sub	x0, x29, #0xd8
     b08:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     b0c:	mov	w1, wzr
     b10:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     b14:	cbz	x0, 1094 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xd8c>
     b18:	ldrb	w8, [x0, #16]
     b1c:	mov	x1, x0
     b20:	cmp	w8, #0x50
     b24:	b.ne	ba4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x89c>  // b.any
     b28:	ldur	x8, [x1, #-24]
     b2c:	cbz	x8, ba4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x89c>
     b30:	ldrb	w9, [x8, #16]
     b34:	cbnz	w9, ba4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x89c>
     b38:	ldrb	w9, [x8, #33]
     b3c:	tbz	w9, #5, ba4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x89c>
     b40:	ldr	w8, [x8, #36]
     b44:	cmp	w8, #0x12
     b48:	b.ne	ba4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x89c>  // b.any
     b4c:	add	x8, sp, #0x58
     b50:	add	x0, sp, #0xa0
     b54:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     b58:	ldp	x8, x9, [x29, #-200]
     b5c:	ldr	x8, [x8]
     b60:	cmp	x8, x9
     b64:	b.ne	10b0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xda8>  // b.any
     b68:	ldur	x8, [x29, #-216]
     b6c:	sub	x0, x29, #0xd8
     b70:	add	x8, x8, #0x8
     b74:	stur	x8, [x29, #-216]
     b78:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     b7c:	ldur	x8, [x29, #-216]
     b80:	ldr	x9, [sp, #128]
     b84:	cmp	x8, x9
     b88:	b.ne	b04 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x7fc>  // b.any
     b8c:	ldp	w8, w9, [sp, #188]
     b90:	ldr	w10, [x27, #96]
     b94:	sub	w8, w8, w9
     b98:	cmp	w10, w8
     b9c:	cset	w22, eq  // eq = none
     ba0:	b	ba8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x8a0>
     ba4:	mov	w22, wzr
     ba8:	ldp	x8, x0, [sp, #168]
     bac:	cmp	x0, x8
     bb0:	b.eq	bb8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x8b0>  // b.none
     bb4:	bl	0 <free>
     bb8:	ldp	x8, x0, [x29, #-176]
     bbc:	cmp	x0, x8
     bc0:	b.eq	bc8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x8c0>  // b.none
     bc4:	bl	0 <free>
     bc8:	ldp	x8, x0, [x29, #-104]
     bcc:	cmp	x0, x8
     bd0:	b.eq	bd8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x8d0>  // b.none
     bd4:	bl	0 <free>
     bd8:	cmp	w22, #0x0
     bdc:	mov	w8, #0x1                   	// #1
     be0:	cinc	w8, w8, ne  // ne = any
     be4:	sub	x1, x29, #0x70
     be8:	mov	w2, #0x1                   	// #1
     bec:	mov	x0, x20
     bf0:	mov	x3, xzr
     bf4:	stur	w8, [x29, #-112]
     bf8:	bl	0 <_ZN4llvm12ConstantExpr15getExtractValueEPNS_8ConstantENS_8ArrayRefIjEEPNS_4TypeE>
     bfc:	mov	x1, x25
     c00:	bl	1288 <_ZL19replaceWithConstantPN4llvm8ConstantERNS_15SmallVectorImplIPNS_13CoroSubFnInstEEE>
     c04:	cbz	w22, f28 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xc20>
     c08:	cbz	x24, 1124 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xe1c>
     c0c:	ldrb	w8, [x24, #16]
     c10:	cbnz	w8, 1140 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xe38>
     c14:	ldrb	w8, [x24, #18]
     c18:	tbz	w8, #0, c24 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x91c>
     c1c:	mov	x0, x24
     c20:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
     c24:	ldr	x8, [x24, #88]
     c28:	ldr	x8, [x8]
     c2c:	cbz	x8, 115c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xe54>
     c30:	ldrb	w9, [x8, #8]
     c34:	cmp	w9, #0xf
     c38:	b.ne	1178 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xe70>  // b.any
     c3c:	ldr	x26, [x8, #24]
     c40:	mov	x0, x23
     c44:	bl	0 <_ZNK4llvm11Instruction11getFunctionEv>
     c48:	ldr	w8, [x27, #48]
     c4c:	cbz	w8, 1198 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xe90>
     c50:	ldr	x8, [x27, #40]
     c54:	mov	x25, x0
     c58:	ldr	x20, [x26]
     c5c:	ldr	x0, [x8]
     c60:	bl	0 <_ZNK4llvm11Instruction11getFunctionEv>
     c64:	add	x0, x0, #0x48
     c68:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     c6c:	ldr	x8, [x0, #48]
     c70:	add	x9, x0, #0x28
     c74:	cmp	x9, x8
     c78:	b.eq	1044 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xd3c>  // b.none
     c7c:	ldrb	w10, [x8]
     c80:	tbnz	w10, #2, 1024 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xd1c>
     c84:	sub	x10, x8, #0x18
     c88:	cmp	x8, #0x0
     c8c:	csel	x28, xzr, x10, eq  // eq = none
     c90:	cbz	x8, 105c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xd54>
     c94:	ldrb	w10, [x28, #16]
     c98:	cmp	w10, #0x37
     c9c:	b.ne	ca8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x9a0>  // b.any
     ca0:	ldr	x8, [x8, #8]
     ca4:	b	c74 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x96c>
     ca8:	mov	x0, x20
     cac:	str	x20, [sp, #48]
     cb0:	bl	0 <_ZN4llvm11ConstantInt8getFalseERNS_11LLVMContextE>
     cb4:	ldr	w8, [x27, #120]
     cb8:	cbz	w8, ce8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x9e0>
     cbc:	ldr	x20, [x27, #112]
     cc0:	mov	x22, x0
     cc4:	lsl	x24, x8, #3
     cc8:	ldr	x23, [x20], #8
     ccc:	mov	x1, x22
     cd0:	mov	x0, x23
     cd4:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
     cd8:	mov	x0, x23
     cdc:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
     ce0:	subs	x24, x24, #0x8
     ce4:	b.ne	cc8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x9c0>  // b.any
     ce8:	ldr	x0, [x25, #40]
     cec:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
     cf0:	mov	x22, x0
     cf4:	mov	w0, #0x40                  	// #64
     cf8:	mov	w1, #0x1                   	// #1
     cfc:	bl	0 <_ZN4llvm4UsernwEmj>
     d00:	ldr	w22, [x22, #4]
     d04:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     d08:	mov	x25, x0
     d0c:	sub	x0, x29, #0x70
     d10:	add	x1, x1, #0x0
     d14:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     d18:	sub	x3, x29, #0x70
     d1c:	mov	x0, x25
     d20:	mov	x1, x26
     d24:	mov	w2, w22
     d28:	mov	x4, x28
     d2c:	bl	0 <_ZN4llvm10AllocaInstC1EPNS_4TypeEjRKNS_5TwineEPNS_11InstructionE>
     d30:	mov	w0, #0x38                  	// #56
     d34:	mov	w1, #0x1                   	// #1
     d38:	bl	0 <_ZN4llvm4UsernwEmj>
     d3c:	mov	x26, x0
     d40:	ldr	x0, [sp, #48]
     d44:	mov	w1, wzr
     d48:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
     d4c:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     d50:	mov	x22, x0
     d54:	sub	x0, x29, #0x70
     d58:	add	x1, x1, #0x0
     d5c:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     d60:	sub	x3, x29, #0x70
     d64:	mov	x0, x26
     d68:	mov	x1, x25
     d6c:	mov	x2, x22
     d70:	mov	x4, x28
     d74:	bl	0 <_ZN4llvm11BitCastInstC1EPNS_5ValueEPNS_4TypeERKNS_5TwineEPNS_11InstructionE>
     d78:	ldr	w8, [x27, #96]
     d7c:	cbz	w8, da8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xaa0>
     d80:	ldr	x20, [x27, #88]
     d84:	lsl	x23, x8, #3
     d88:	ldr	x22, [x20], #8
     d8c:	mov	x1, x26
     d90:	mov	x0, x22
     d94:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
     d98:	mov	x0, x22
     d9c:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
     da0:	subs	x23, x23, #0x8
     da4:	b.ne	d88 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xa80>  // b.any
     da8:	mov	x0, x25
     dac:	bl	0 <_ZNK4llvm11Instruction11getFunctionEv>
     db0:	mov	x22, x0
     db4:	sub	x0, x29, #0x70
     db8:	mov	x1, x22
     dbc:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     dc0:	ldp	x23, x26, [x29, #-112]
     dc4:	ldur	x27, [x29, #-96]
     dc8:	add	x22, x22, #0x48
     dcc:	cmp	x23, x22
     dd0:	cset	w8, ne  // ne = any
     dd4:	cmp	x27, #0x0
     dd8:	cset	w9, ne  // ne = any
     ddc:	cmp	x22, x26
     de0:	b.ne	dec <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xae4>  // b.any
     de4:	and	w8, w8, w9
     de8:	cbz	w8, f1c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xc14>
     dec:	ldrb	w8, [x27]
     df0:	tbnz	w8, #2, 1024 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xd1c>
     df4:	sub	x8, x27, #0x18
     df8:	cmp	x27, #0x0
     dfc:	csel	x28, xzr, x8, eq  // eq = none
     e00:	cbz	x27, 1078 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xd70>
     e04:	ldrb	w8, [x28, #16]
     e08:	cmp	w8, #0x50
     e0c:	b.ne	eb0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xba8>  // b.any
     e10:	ldrh	w8, [x28, #18]
     e14:	and	w8, w8, #0x3
     e18:	sub	w8, w8, #0x1
     e1c:	cmp	w8, #0x1
     e20:	b.hi	eb0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xba8>  // b.pmore
     e24:	ldr	w8, [x28, #20]
     e28:	tbnz	w8, #30, e44 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xb3c>
     e2c:	and	w8, w8, #0xfffffff
     e30:	mov	w9, #0x18                  	// #24
     e34:	mneg	x9, x8, x9
     e38:	add	x24, x28, x9
     e3c:	cbnz	x8, e50 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xb48>
     e40:	b	eb0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xba8>
     e44:	ldur	x24, [x28, #-8]
     e48:	and	x8, x8, #0xfffffff
     e4c:	cbz	x8, eb0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xba8>
     e50:	add	x8, x8, x8, lsl #1
     e54:	lsl	x20, x8, #3
     e58:	ldr	x8, [x24], #24
     e5c:	mov	x9, #0xffffffffffffffff    	// #-1
     e60:	movi	v0.2d, #0x0
     e64:	sub	x1, x29, #0x70
     e68:	stp	x8, x9, [x29, #-112]
     e6c:	ldp	x8, x0, [sp, #72]
     e70:	add	x2, sp, #0xa0
     e74:	stp	x25, x9, [sp, #160]
     e78:	stp	q0, q0, [x19]
     e7c:	stp	q0, q0, [x8]
     e80:	bl	0 <_ZN4llvm9AAResults5aliasERKNS_14MemoryLocationES3_>
     e84:	tst	w0, #0xff
     e88:	b.ne	e98 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xb90>  // b.any
     e8c:	subs	x20, x20, #0x18
     e90:	b.ne	e58 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xb50>  // b.any
     e94:	b	eb0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xba8>
     e98:	ldrh	w8, [x28, #18]
     e9c:	and	w9, w8, #0x3
     ea0:	cmp	w9, #0x2
     ea4:	b.eq	11b8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xeb0>  // b.none
     ea8:	and	w8, w8, #0xfffc
     eac:	strh	w8, [x28, #18]
     eb0:	ldrb	w8, [x26]
     eb4:	tbnz	w8, #2, fd4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xccc>
     eb8:	ldr	x27, [x27, #8]
     ebc:	sub	x8, x26, #0x18
     ec0:	cmp	x26, #0x0
     ec4:	csel	x8, xzr, x8, eq  // eq = none
     ec8:	add	x8, x8, #0x28
     ecc:	cmp	x8, x27
     ed0:	b.ne	efc <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xbf4>  // b.any
     ed4:	ldr	x26, [x26, #8]
     ed8:	cmp	x23, x26
     edc:	b.eq	efc <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xbf4>  // b.none
     ee0:	ldrb	w8, [x26]
     ee4:	tbnz	w8, #2, fd4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xccc>
     ee8:	sub	x8, x26, #0x18
     eec:	cmp	x26, #0x0
     ef0:	csel	x8, xzr, x8, eq  // eq = none
     ef4:	ldr	x27, [x8, #48]
     ef8:	b	ec8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xbc0>
     efc:	cmp	x23, x22
     f00:	cset	w8, ne  // ne = any
     f04:	cmp	x27, #0x0
     f08:	cset	w9, ne  // ne = any
     f0c:	cmp	x22, x26
     f10:	b.ne	dec <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xae4>  // b.any
     f14:	and	w8, w8, w9
     f18:	tbnz	w8, #0, dec <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xae4>
     f1c:	ldr	x0, [sp, #64]
     f20:	mov	w1, #0x1                   	// #1
     f24:	bl	0 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb>
     f28:	ldr	x13, [sp, #56]
     f2c:	ldr	x8, [sp, #40]
     f30:	add	x13, x13, #0x8
     f34:	cmp	x13, x8
     f38:	b.eq	f48 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xc40>  // b.none
     f3c:	ldr	x8, [sp, #32]
     f40:	ldr	x27, [x8, #32]
     f44:	b	698 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x390>
     f48:	mov	w21, #0x1                   	// #1
     f4c:	mov	w0, w21
     f50:	add	sp, sp, #0x1e0
     f54:	ldp	x20, x19, [sp, #96]
     f58:	ldp	x22, x21, [sp, #80]
     f5c:	ldp	x24, x23, [sp, #64]
     f60:	ldp	x26, x25, [sp, #48]
     f64:	ldp	x28, x27, [sp, #32]
     f68:	ldp	x29, x30, [sp, #16]
     f6c:	ldp	d9, d8, [sp], #112
     f70:	ret
     f74:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     f78:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     f7c:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     f80:	add	x0, x0, #0x0
     f84:	add	x1, x1, #0x0
     f88:	add	x3, x3, #0x0
     f8c:	mov	w2, #0x8d                  	// #141
     f90:	bl	0 <__assert_fail>
     f94:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     f98:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     f9c:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     fa0:	add	x0, x0, #0x0
     fa4:	add	x1, x1, #0x0
     fa8:	add	x3, x3, #0x0
     fac:	mov	w2, #0x69                  	// #105
     fb0:	bl	0 <__assert_fail>
     fb4:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     fb8:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     fbc:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     fc0:	add	x0, x0, #0x0
     fc4:	add	x1, x1, #0x0
     fc8:	add	x3, x3, #0x0
     fcc:	mov	w2, #0x126                 	// #294
     fd0:	bl	0 <__assert_fail>
     fd4:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     fd8:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     fdc:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     fe0:	add	x0, x0, #0x0
     fe4:	add	x1, x1, #0x0
     fe8:	add	x3, x3, #0x0
     fec:	b	103c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xd34>
     ff0:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     ff4:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     ff8:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     ffc:	add	x0, x0, #0x0
    1000:	add	x1, x1, #0x0
    1004:	add	x3, x3, #0x0
    1008:	b	fac <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xca4>
    100c:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1010:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1014:	add	x0, x0, #0x0
    1018:	add	x1, x1, #0x0
    101c:	mov	w2, #0xe0                  	// #224
    1020:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    1024:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1028:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    102c:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1030:	add	x0, x0, #0x0
    1034:	add	x1, x1, #0x0
    1038:	add	x3, x3, #0x0
    103c:	mov	w2, #0x8b                  	// #139
    1040:	bl	0 <__assert_fail>
    1044:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1048:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    104c:	add	x0, x0, #0x0
    1050:	add	x1, x1, #0x0
    1054:	mov	w2, #0x68                  	// #104
    1058:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    105c:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1060:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1064:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1068:	add	x0, x0, #0x0
    106c:	add	x1, x1, #0x0
    1070:	add	x3, x3, #0x0
    1074:	b	fac <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xca4>
    1078:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    107c:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1080:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1084:	add	x0, x0, #0x0
    1088:	add	x1, x1, #0x0
    108c:	add	x3, x3, #0x0
    1090:	b	fac <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xca4>
    1094:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1098:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    109c:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    10a0:	add	x0, x0, #0x0
    10a4:	add	x1, x1, #0x0
    10a8:	add	x3, x3, #0x0
    10ac:	b	fac <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xca4>
    10b0:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    10b4:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    10b8:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    10bc:	add	x0, x0, #0x0
    10c0:	add	x1, x1, #0x0
    10c4:	add	x3, x3, #0x0
    10c8:	b	fcc <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xcc4>
    10cc:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    10d0:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    10d4:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    10d8:	add	x0, x0, #0x0
    10dc:	add	x1, x1, #0x0
    10e0:	add	x3, x3, #0x0
    10e4:	b	fac <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xca4>
    10e8:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    10ec:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    10f0:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    10f4:	add	x0, x0, #0x0
    10f8:	add	x1, x1, #0x0
    10fc:	add	x3, x3, #0x0
    1100:	mov	w2, #0xe8                  	// #232
    1104:	bl	0 <__assert_fail>
    1108:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    110c:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1110:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1114:	add	x0, x0, #0x0
    1118:	add	x1, x1, #0x0
    111c:	add	x3, x3, #0x0
    1120:	b	fac <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xca4>
    1124:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1128:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    112c:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1130:	add	x0, x0, #0x0
    1134:	add	x1, x1, #0x0
    1138:	add	x3, x3, #0x0
    113c:	b	fac <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xca4>
    1140:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1144:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1148:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    114c:	add	x0, x0, #0x0
    1150:	add	x1, x1, #0x0
    1154:	add	x3, x3, #0x0
    1158:	b	1190 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xe88>
    115c:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1160:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1164:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1168:	add	x0, x0, #0x0
    116c:	add	x1, x1, #0x0
    1170:	add	x3, x3, #0x0
    1174:	b	fac <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xca4>
    1178:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    117c:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1180:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1184:	add	x0, x0, #0x0
    1188:	add	x1, x1, #0x0
    118c:	add	x3, x3, #0x0
    1190:	mov	w2, #0x108                 	// #264
    1194:	bl	0 <__assert_fail>
    1198:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    119c:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    11a0:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    11a4:	add	x0, x0, #0x0
    11a8:	add	x1, x1, #0x0
    11ac:	add	x3, x3, #0x0
    11b0:	mov	w2, #0x9e                  	// #158
    11b4:	bl	0 <__assert_fail>
    11b8:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    11bc:	add	x0, x0, #0x0
    11c0:	mov	w1, #0x1                   	// #1
    11c4:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    11c8:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    11cc:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    11d0:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    11d4:	add	x0, x0, #0x0
    11d8:	add	x1, x1, #0x0
    11dc:	add	x3, x3, #0x0
    11e0:	mov	w2, #0x10d                 	// #269
    11e4:	bl	0 <__assert_fail>

00000000000011e8 <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_>:
    11e8:	cbz	x0, 1284 <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_+0x9c>
    11ec:	stp	x29, x30, [sp, #-32]!
    11f0:	str	x19, [sp, #16]
    11f4:	mov	x29, sp
    11f8:	mov	x19, x0
    11fc:	ldr	x0, [x0, #232]
    1200:	add	x8, x19, #0xf8
    1204:	cmp	x0, x8
    1208:	b.eq	1210 <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_+0x28>  // b.none
    120c:	bl	0 <free>
    1210:	ldr	x0, [x19, #184]
    1214:	add	x8, x19, #0xc8
    1218:	cmp	x0, x8
    121c:	b.eq	1224 <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_+0x3c>  // b.none
    1220:	bl	0 <free>
    1224:	ldr	x0, [x19, #136]
    1228:	add	x8, x19, #0x98
    122c:	cmp	x0, x8
    1230:	b.eq	1238 <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_+0x50>  // b.none
    1234:	bl	0 <free>
    1238:	ldr	x0, [x19, #112]
    123c:	add	x8, x19, #0x80
    1240:	cmp	x0, x8
    1244:	b.eq	124c <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_+0x64>  // b.none
    1248:	bl	0 <free>
    124c:	ldr	x0, [x19, #88]
    1250:	add	x8, x19, #0x68
    1254:	cmp	x0, x8
    1258:	b.eq	1260 <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_+0x78>  // b.none
    125c:	bl	0 <free>
    1260:	ldr	x0, [x19, #40]
    1264:	add	x8, x19, #0x38
    1268:	cmp	x0, x8
    126c:	b.eq	1274 <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_+0x8c>  // b.none
    1270:	bl	0 <free>
    1274:	mov	x0, x19
    1278:	ldr	x19, [sp, #16]
    127c:	ldp	x29, x30, [sp], #32
    1280:	b	0 <_ZdlPv>
    1284:	ret

0000000000001288 <_ZL19replaceWithConstantPN4llvm8ConstantERNS_15SmallVectorImplIPNS_13CoroSubFnInstEEE>:
    1288:	stp	x29, x30, [sp, #-48]!
    128c:	str	x21, [sp, #16]
    1290:	stp	x20, x19, [sp, #32]
    1294:	mov	x29, sp
    1298:	ldr	w8, [x1, #8]
    129c:	cbz	w8, 131c <_ZL19replaceWithConstantPN4llvm8ConstantERNS_15SmallVectorImplIPNS_13CoroSubFnInstEEE+0x94>
    12a0:	ldr	x21, [x1]
    12a4:	mov	x20, x1
    12a8:	mov	x19, x0
    12ac:	ldr	x9, [x21]
    12b0:	ldr	x1, [x9]
    12b4:	ldr	x9, [x0]
    12b8:	cmp	x9, x1
    12bc:	b.eq	12f4 <_ZL19replaceWithConstantPN4llvm8ConstantERNS_15SmallVectorImplIPNS_13CoroSubFnInstEEE+0x6c>  // b.none
    12c0:	ldrb	w8, [x9, #8]
    12c4:	cmp	w8, #0xf
    12c8:	b.ne	132c <_ZL19replaceWithConstantPN4llvm8ConstantERNS_15SmallVectorImplIPNS_13CoroSubFnInstEEE+0xa4>  // b.any
    12cc:	ldrb	w8, [x1, #8]
    12d0:	cmp	w8, #0xf
    12d4:	b.ne	132c <_ZL19replaceWithConstantPN4llvm8ConstantERNS_15SmallVectorImplIPNS_13CoroSubFnInstEEE+0xa4>  // b.any
    12d8:	mov	x0, x19
    12dc:	mov	w2, wzr
    12e0:	bl	0 <_ZN4llvm12ConstantExpr10getBitCastEPNS_8ConstantEPNS_4TypeEb>
    12e4:	ldr	w8, [x20, #8]
    12e8:	cbz	w8, 131c <_ZL19replaceWithConstantPN4llvm8ConstantERNS_15SmallVectorImplIPNS_13CoroSubFnInstEEE+0x94>
    12ec:	ldr	x21, [x20]
    12f0:	mov	x19, x0
    12f4:	add	x20, x21, x8, lsl #3
    12f8:	ldr	x0, [x21], #8
    12fc:	mov	x1, x19
    1300:	mov	x2, xzr
    1304:	mov	x3, xzr
    1308:	mov	x4, xzr
    130c:	mov	x5, xzr
    1310:	bl	0 <_ZN4llvm29replaceAndRecursivelySimplifyEPNS_11InstructionEPNS_5ValueEPKNS_17TargetLibraryInfoEPKNS_13DominatorTreeEPNS_15AssumptionCacheEPNS_14SmallSetVectorIS1_Lj8EEE>
    1314:	cmp	x20, x21
    1318:	b.ne	12f8 <_ZL19replaceWithConstantPN4llvm8ConstantERNS_15SmallVectorImplIPNS_13CoroSubFnInstEEE+0x70>  // b.any
    131c:	ldp	x20, x19, [sp, #32]
    1320:	ldr	x21, [sp, #16]
    1324:	ldp	x29, x30, [sp], #48
    1328:	ret
    132c:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1330:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1334:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1338:	add	x0, x0, #0x0
    133c:	add	x1, x1, #0x0
    1340:	add	x3, x3, #0x0
    1344:	mov	w2, #0x3b                  	// #59
    1348:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm4Pass14doFinalizationERNS_6ModuleE:

0000000000000000 <_ZN4llvm4Pass14doFinalizationERNS_6ModuleE>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZNK4llvm10CoroIdInst7getInfoEv:

0000000000000000 <_ZNK4llvm10CoroIdInst7getInfoEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	bl	0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  10:	cbz	x0, e4 <_ZNK4llvm10CoroIdInst7getInfoEv+0xe4>
  14:	ldrb	w8, [x0, #16]
  18:	mov	x19, x0
  1c:	cmp	w8, #0x3
  20:	b.ne	b0 <_ZNK4llvm10CoroIdInst7getInfoEv+0xb0>  // b.any
  24:	ldrb	w8, [x19, #80]
  28:	tbz	w8, #0, c4 <_ZNK4llvm10CoroIdInst7getInfoEv+0xc4>
  2c:	mov	x0, x19
  30:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
  34:	tbnz	w0, #0, c4 <_ZNK4llvm10CoroIdInst7getInfoEv+0xc4>
  38:	ldr	w8, [x19, #32]
  3c:	and	w8, w8, #0xf
  40:	cmp	w8, #0xa
  44:	b.hi	100 <_ZNK4llvm10CoroIdInst7getInfoEv+0x100>  // b.pmore
  48:	mov	w9, #0x1                   	// #1
  4c:	lsl	w8, w9, w8
  50:	mov	w9, #0x1eb                 	// #491
  54:	tst	w8, w9
  58:	b.eq	c4 <_ZNK4llvm10CoroIdInst7getInfoEv+0xc4>  // b.none
  5c:	ldrb	w8, [x19, #80]
  60:	tbnz	w8, #1, c4 <_ZNK4llvm10CoroIdInst7getInfoEv+0xc4>
  64:	mov	x0, x19
  68:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
  6c:	tbnz	w0, #0, 118 <_ZNK4llvm10CoroIdInst7getInfoEv+0x118>
  70:	ldur	x1, [x19, #-24]
  74:	cbz	x1, 138 <_ZNK4llvm10CoroIdInst7getInfoEv+0x138>
  78:	ldrb	w8, [x1, #16]
  7c:	cmp	w8, #0x7
  80:	csel	x0, x1, xzr, eq  // eq = none
  84:	cbnz	x0, b4 <_ZNK4llvm10CoroIdInst7getInfoEv+0xb4>
  88:	cmp	w8, #0x6
  8c:	b.eq	b8 <_ZNK4llvm10CoroIdInst7getInfoEv+0xb8>  // b.none
  90:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  94:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  98:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  9c:	add	x0, x0, #0x0
  a0:	add	x1, x1, #0x0
  a4:	add	x3, x3, #0x0
  a8:	mov	w2, #0x108                 	// #264
  ac:	bl	0 <__assert_fail>
  b0:	mov	x0, xzr
  b4:	mov	x1, xzr
  b8:	ldr	x19, [sp, #16]
  bc:	ldp	x29, x30, [sp], #32
  c0:	ret
  c4:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  c8:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  cc:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  d0:	add	x0, x0, #0x0
  d4:	add	x1, x1, #0x0
  d8:	add	x3, x3, #0x0
  dc:	mov	w2, #0xa8                  	// #168
  e0:	bl	0 <__assert_fail>
  e4:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  e8:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  ec:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  f0:	add	x0, x0, #0x0
  f4:	add	x1, x1, #0x0
  f8:	add	x3, x3, #0x0
  fc:	b	150 <_ZNK4llvm10CoroIdInst7getInfoEv+0x150>
 100:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 104:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	mov	w2, #0x16d                 	// #365
 114:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 118:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 11c:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 120:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 124:	add	x0, x0, #0x0
 128:	add	x1, x1, #0x0
 12c:	add	x3, x3, #0x0
 130:	mov	w2, #0x8d                  	// #141
 134:	bl	0 <__assert_fail>
 138:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 13c:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 140:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 144:	add	x0, x0, #0x0
 148:	add	x1, x1, #0x0
 14c:	add	x3, x3, #0x0
 150:	mov	w2, #0x69                  	// #105
 154:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10CoroIdInst12getCoroutineEv:

0000000000000000 <_ZNK4llvm10CoroIdInst12getCoroutineEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w1, #0x2                   	// #2
   c:	bl	0 <_ZNK4llvm10CoroIdInst12getCoroutineEv>
  10:	bl	0 <_ZNK4llvm5Value17stripPointerCastsEv>
  14:	cbz	x0, 28 <_ZNK4llvm10CoroIdInst12getCoroutineEv+0x28>
  18:	ldrb	w8, [x0, #16]
  1c:	cbnz	w8, 48 <_ZNK4llvm10CoroIdInst12getCoroutineEv+0x48>
  20:	ldp	x29, x30, [sp], #16
  24:	ret
  28:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst12getCoroutineEv>
  2c:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst12getCoroutineEv>
  30:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst12getCoroutineEv>
  34:	add	x0, x0, #0x0
  38:	add	x1, x1, #0x0
  3c:	add	x3, x3, #0x0
  40:	mov	w2, #0x69                  	// #105
  44:	bl	0 <__assert_fail>
  48:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst12getCoroutineEv>
  4c:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst12getCoroutineEv>
  50:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst12getCoroutineEv>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x108                 	// #264
  64:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIPNS_10CoroIdInstELb1EE9push_backERKS2_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIPNS_10CoroIdInstELb1EE9push_backERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseIPNS_10CoroIdInstELb1EE9push_backERKS2_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	x10, [x20]
  28:	str	x10, [x9, w8, uxtw #3]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseIPNS_10CoroIdInstELb1EE9push_backERKS2_+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x8                   	// #8
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseIPNS_10CoroIdInstELb1EE9push_backERKS2_+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_10CoroIdInstELb1EE9push_backERKS2_>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_10CoroIdInstELb1EE9push_backERKS2_>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_10CoroIdInstELb1EE9push_backERKS2_>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm4Pass11getAnalysisINS_20AAResultsWrapperPassEEERT_v:

0000000000000000 <_ZNK4llvm4Pass11getAnalysisINS_20AAResultsWrapperPassEEERT_v>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #8]
   c:	cbz	x8, 20 <_ZNK4llvm4Pass11getAnalysisINS_20AAResultsWrapperPassEEERT_v+0x20>
  10:	adrp	x1, 0 <_ZN4llvm20AAResultsWrapperPass2IDE>
  14:	ldr	x1, [x1]
  18:	ldp	x29, x30, [sp], #16
  1c:	b	0 <_ZNK4llvm4Pass11getAnalysisINS_20AAResultsWrapperPassEEERT_v>
  20:	adrp	x0, 0 <_ZNK4llvm4Pass11getAnalysisINS_20AAResultsWrapperPassEEERT_v>
  24:	adrp	x1, 0 <_ZNK4llvm4Pass11getAnalysisINS_20AAResultsWrapperPassEEERT_v>
  28:	adrp	x3, 0 <_ZNK4llvm4Pass11getAnalysisINS_20AAResultsWrapperPassEEERT_v>
  2c:	add	x0, x0, #0x0
  30:	add	x1, x1, #0x0
  34:	add	x3, x3, #0x0
  38:	mov	w2, #0xdd                  	// #221
  3c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm4Pass11getAnalysisINS_24DominatorTreeWrapperPassEEERT_v:

0000000000000000 <_ZNK4llvm4Pass11getAnalysisINS_24DominatorTreeWrapperPassEEERT_v>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #8]
   c:	cbz	x8, 20 <_ZNK4llvm4Pass11getAnalysisINS_24DominatorTreeWrapperPassEEERT_v+0x20>
  10:	adrp	x1, 0 <_ZN4llvm24DominatorTreeWrapperPass2IDE>
  14:	ldr	x1, [x1]
  18:	ldp	x29, x30, [sp], #16
  1c:	b	0 <_ZNK4llvm4Pass11getAnalysisINS_24DominatorTreeWrapperPassEEERT_v>
  20:	adrp	x0, 0 <_ZNK4llvm4Pass11getAnalysisINS_24DominatorTreeWrapperPassEEERT_v>
  24:	adrp	x1, 0 <_ZNK4llvm4Pass11getAnalysisINS_24DominatorTreeWrapperPassEEERT_v>
  28:	adrp	x3, 0 <_ZNK4llvm4Pass11getAnalysisINS_24DominatorTreeWrapperPassEEERT_v>
  2c:	add	x0, x0, #0x0
  30:	add	x1, x1, #0x0
  34:	add	x3, x3, #0x0
  38:	mov	w2, #0xdd                  	// #221
  3c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm13CoroSubFnInst8getIndexEv:

0000000000000000 <_ZNK4llvm13CoroSubFnInst8getIndexEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w1, #0x1                   	// #1
   c:	bl	0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  10:	cbz	x0, 3c <_ZNK4llvm13CoroSubFnInst8getIndexEv+0x3c>
  14:	ldrb	w8, [x0, #16]
  18:	cmp	w8, #0xd
  1c:	b.ne	5c <_ZNK4llvm13CoroSubFnInst8getIndexEv+0x5c>  // b.any
  20:	add	x0, x0, #0x18
  24:	bl	0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  28:	add	x8, x0, #0x1
  2c:	cmp	x8, #0x3
  30:	b.hi	7c <_ZNK4llvm13CoroSubFnInst8getIndexEv+0x7c>  // b.pmore
  34:	ldp	x29, x30, [sp], #16
  38:	ret
  3c:	adrp	x0, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  40:	adrp	x1, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  44:	adrp	x3, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  48:	add	x0, x0, #0x0
  4c:	add	x1, x1, #0x0
  50:	add	x3, x3, #0x0
  54:	mov	w2, #0x69                  	// #105
  58:	bl	0 <__assert_fail>
  5c:	adrp	x0, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  60:	adrp	x1, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  64:	adrp	x3, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  68:	add	x0, x0, #0x0
  6c:	add	x1, x1, #0x0
  70:	add	x3, x3, #0x0
  74:	mov	w2, #0x108                 	// #264
  78:	bl	0 <__assert_fail>
  7c:	adrp	x0, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  80:	adrp	x1, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  84:	adrp	x3, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  88:	add	x0, x0, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0x34                  	// #52
  98:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIPNS_13CoroSubFnInstELb1EE9push_backERKS2_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIPNS_13CoroSubFnInstELb1EE9push_backERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseIPNS_13CoroSubFnInstELb1EE9push_backERKS2_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	x10, [x20]
  28:	str	x10, [x9, w8, uxtw #3]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseIPNS_13CoroSubFnInstELb1EE9push_backERKS2_+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x8                   	// #8
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseIPNS_13CoroSubFnInstELb1EE9push_backERKS2_+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_13CoroSubFnInstELb1EE9push_backERKS2_>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_13CoroSubFnInstELb1EE9push_backERKS2_>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_13CoroSubFnInstELb1EE9push_backERKS2_>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm5APInt12getSExtValueEv:

0000000000000000 <_ZNK4llvm5APInt12getSExtValueEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #8]
  10:	mov	x19, x0
  14:	cmp	w8, #0x40
  18:	b.hi	34 <_ZNK4llvm5APInt12getSExtValueEv+0x34>  // b.pmore
  1c:	cbz	w8, 58 <_ZNK4llvm5APInt12getSExtValueEv+0x58>
  20:	ldr	x9, [x19]
  24:	neg	x8, x8
  28:	lsl	x9, x9, x8
  2c:	asr	x0, x9, x8
  30:	b	4c <_ZNK4llvm5APInt12getSExtValueEv+0x4c>
  34:	mov	x0, x19
  38:	bl	0 <_ZNK4llvm5APInt12getSExtValueEv>
  3c:	cmp	w0, #0x41
  40:	b.cs	78 <_ZNK4llvm5APInt12getSExtValueEv+0x78>  // b.hs, b.nlast
  44:	ldr	x8, [x19]
  48:	ldr	x0, [x8]
  4c:	ldr	x19, [sp, #16]
  50:	ldp	x29, x30, [sp], #32
  54:	ret
  58:	adrp	x0, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  5c:	adrp	x1, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  60:	adrp	x3, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  64:	add	x0, x0, #0x0
  68:	add	x1, x1, #0x0
  6c:	add	x3, x3, #0x0
  70:	mov	w2, #0x307                 	// #775
  74:	bl	0 <__assert_fail>
  78:	adrp	x0, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  7c:	adrp	x1, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  80:	adrp	x3, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  84:	add	x0, x0, #0x0
  88:	add	x1, x1, #0x0
  8c:	add	x3, x3, #0x0
  90:	mov	w2, #0x663                 	// #1635
  94:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase13getArgOperandEj:

0000000000000000 <_ZNK4llvm8CallBase13getArgOperandEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	w19, w1
  14:	mov	x20, x0
  18:	bl	0 <_ZNK4llvm8CallBase13getArgOperandEj>
  1c:	mov	w8, w0
  20:	mov	w21, #0x18                  	// #24
  24:	mneg	x8, x8, x21
  28:	mov	x0, x20
  2c:	add	x22, x20, x8
  30:	bl	0 <_ZNK4llvm8CallBase13getArgOperandEj>
  34:	ldr	w8, [x20, #20]
  38:	mov	w9, w0
  3c:	mneg	x9, x9, x21
  40:	add	x10, x22, x9
  44:	and	x9, x8, #0xfffffff
  48:	mneg	x8, x9, x21
  4c:	add	x8, x20, x8
  50:	sub	x10, x10, x8
  54:	sub	x10, x10, #0x18
  58:	mov	w11, #0xaaab                	// #43691
  5c:	lsr	x10, x10, #3
  60:	movk	w11, #0xaaaa, lsl #16
  64:	mul	w10, w10, w11
  68:	cmp	w10, w19
  6c:	b.ls	94 <_ZNK4llvm8CallBase13getArgOperandEj+0x94>  // b.plast
  70:	cmp	w9, w19
  74:	b.ls	b4 <_ZNK4llvm8CallBase13getArgOperandEj+0xb4>  // b.plast
  78:	mov	w9, #0x18                  	// #24
  7c:	umull	x9, w19, w9
  80:	ldr	x0, [x8, x9]
  84:	ldp	x20, x19, [sp, #32]
  88:	ldp	x22, x21, [sp, #16]
  8c:	ldp	x29, x30, [sp], #48
  90:	ret
  94:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  98:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  9c:	adrp	x3, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  a0:	add	x0, x0, #0x0
  a4:	add	x1, x1, #0x0
  a8:	add	x3, x3, #0x0
  ac:	mov	w2, #0x4df                 	// #1247
  b0:	bl	0 <__assert_fail>
  b4:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  b8:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  bc:	adrp	x3, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  c0:	add	x0, x0, #0x0
  c4:	add	x1, x1, #0x0
  c8:	add	x3, x3, #0x0
  cc:	mov	w2, #0x86a                 	// #2154
  d0:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase25getNumTotalBundleOperandsEv:

0000000000000000 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
  14:	cbz	w0, 34 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x34>
  18:	mov	x0, x19
  1c:	bl	0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
  20:	mov	w20, w0
  24:	mov	x0, x19
  28:	bl	0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
  2c:	subs	w0, w0, w20
  30:	b.cc	40 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x40>  // b.lo, b.ul, b.last
  34:	ldp	x20, x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret
  40:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
  44:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
  48:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x710                 	// #1808
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv:

0000000000000000 <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #16]
   c:	cmp	w8, #0x50
  10:	b.eq	34 <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv+0x34>  // b.none
  14:	cmp	w8, #0x23
  18:	b.eq	2c <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv+0x2c>  // b.none
  1c:	cmp	w8, #0x1d
  20:	b.ne	40 <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv+0x40>  // b.any
  24:	mov	w0, #0x2                   	// #2
  28:	b	38 <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv+0x38>
  2c:	ldp	x29, x30, [sp], #16
  30:	b	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
  34:	mov	w0, wzr
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv>
  44:	adrp	x1, 0 <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv>
  48:	add	x0, x0, #0x0
  4c:	add	x1, x1, #0x0
  50:	mov	w2, #0x46a                 	// #1130
  54:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZNK4llvm8CallBase27getBundleOperandsStartIndexEv:

0000000000000000 <_ZNK4llvm8CallBase27getBundleOperandsStartIndexEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZNK4llvm8CallBase27getBundleOperandsStartIndexEv>
  14:	cbz	w0, 30 <_ZNK4llvm8CallBase27getBundleOperandsStartIndexEv+0x30>
  18:	mov	x0, x19
  1c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  20:	ldr	w0, [x0, #8]
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	ret
  30:	adrp	x0, 0 <_ZNK4llvm8CallBase27getBundleOperandsStartIndexEv>
  34:	adrp	x1, 0 <_ZNK4llvm8CallBase27getBundleOperandsStartIndexEv>
  38:	adrp	x3, 0 <_ZNK4llvm8CallBase27getBundleOperandsStartIndexEv>
  3c:	add	x0, x0, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0x6ed                 	// #1773
  4c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase25getBundleOperandsEndIndexEv:

0000000000000000 <_ZNK4llvm8CallBase25getBundleOperandsEndIndexEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZNK4llvm8CallBase25getBundleOperandsEndIndexEv>
  14:	cbz	w0, 34 <_ZNK4llvm8CallBase25getBundleOperandsEndIndexEv+0x34>
  18:	mov	x0, x19
  1c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  20:	add	x8, x0, x1
  24:	ldur	w0, [x8, #-4]
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	ret
  34:	adrp	x0, 0 <_ZNK4llvm8CallBase25getBundleOperandsEndIndexEv>
  38:	adrp	x1, 0 <_ZNK4llvm8CallBase25getBundleOperandsEndIndexEv>
  3c:	adrp	x3, 0 <_ZNK4llvm8CallBase25getBundleOperandsEndIndexEv>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x6f3                 	// #1779
  50:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase20getNumOperandBundlesEv:

0000000000000000 <_ZNK4llvm8CallBase20getNumOperandBundlesEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #20]
  10:	tbnz	w8, #31, 1c <_ZNK4llvm8CallBase20getNumOperandBundlesEv+0x1c>
  14:	mov	x19, xzr
  18:	b	30 <_ZNK4llvm8CallBase20getNumOperandBundlesEv+0x30>
  1c:	mov	x20, x0
  20:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  24:	ldr	w8, [x20, #20]
  28:	mov	x19, x0
  2c:	tbnz	w8, #31, 48 <_ZNK4llvm8CallBase20getNumOperandBundlesEv+0x48>
  30:	mov	x8, xzr
  34:	sub	x8, x8, x19
  38:	ldp	x20, x19, [sp, #16]
  3c:	lsr	x0, x8, #4
  40:	ldp	x29, x30, [sp], #32
  44:	ret
  48:	mov	x0, x20
  4c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  50:	add	x8, x0, x1
  54:	b	34 <_ZNK4llvm8CallBase20getNumOperandBundlesEv+0x34>

Disassembly of section .text._ZNK4llvm5APInt16getMinSignedBitsEv:

0000000000000000 <_ZNK4llvm5APInt16getMinSignedBitsEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #8]
  10:	mov	x19, x0
  14:	sub	w1, w8, #0x1
  18:	bl	0 <_ZNK4llvm5APInt16getMinSignedBitsEv>
  1c:	ldr	w20, [x19, #8]
  20:	tbz	w0, #0, 30 <_ZNK4llvm5APInt16getMinSignedBitsEv+0x30>
  24:	mov	x0, x19
  28:	bl	0 <_ZNK4llvm5APInt16getMinSignedBitsEv>
  2c:	b	54 <_ZNK4llvm5APInt16getMinSignedBitsEv+0x54>
  30:	cmp	w20, #0x40
  34:	b.hi	4c <_ZNK4llvm5APInt16getMinSignedBitsEv+0x4c>  // b.pmore
  38:	ldr	x8, [x19]
  3c:	clz	x8, x8
  40:	add	w8, w20, w8
  44:	sub	w0, w8, #0x40
  48:	b	54 <_ZNK4llvm5APInt16getMinSignedBitsEv+0x54>
  4c:	mov	x0, x19
  50:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
  54:	sub	w8, w20, w0
  58:	ldp	x20, x19, [sp, #16]
  5c:	add	w0, w8, #0x1
  60:	ldp	x29, x30, [sp], #32
  64:	ret

Disassembly of section .text._ZNK4llvm5APInt16countLeadingOnesEv:

0000000000000000 <_ZNK4llvm5APInt16countLeadingOnesEv>:
   0:	ldr	w8, [x0, #8]
   4:	cmp	w8, #0x40
   8:	b.hi	30 <_ZNK4llvm5APInt16countLeadingOnesEv+0x30>  // b.pmore
   c:	ldr	x9, [x0]
  10:	neg	x8, x8
  14:	lsl	x8, x9, x8
  18:	mvn	x9, x8
  1c:	cmn	x8, #0x1
  20:	clz	x8, x9
  24:	mov	w9, #0x40                  	// #64
  28:	csel	w0, w9, w8, eq  // eq = none
  2c:	ret
  30:	b	0 <_ZNK4llvm5APInt24countLeadingOnesSlowCaseEv>

Disassembly of section .text._ZNK4llvm5APIntixEj:

0000000000000000 <_ZNK4llvm5APIntixEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmp	w8, w1
  10:	b.ls	44 <_ZNK4llvm5APIntixEj+0x44>  // b.plast
  14:	mov	w9, #0x1                   	// #1
  18:	cmp	w8, #0x40
  1c:	lsl	x8, x9, x1
  20:	b.ls	30 <_ZNK4llvm5APIntixEj+0x30>  // b.plast
  24:	ldr	x9, [x0]
  28:	lsr	w10, w1, #6
  2c:	add	x0, x9, w10, uxtw #3
  30:	ldr	x9, [x0]
  34:	tst	x9, x8
  38:	cset	w0, ne  // ne = any
  3c:	ldp	x29, x30, [sp], #16
  40:	ret
  44:	adrp	x0, 0 <_ZNK4llvm5APIntixEj>
  48:	adrp	x1, 0 <_ZNK4llvm5APIntixEj>
  4c:	adrp	x3, 0 <_ZNK4llvm5APIntixEj>
  50:	add	x0, x0, #0x0
  54:	add	x1, x1, #0x0
  58:	add	x3, x3, #0x0
  5c:	mov	w2, #0x472                 	// #1138
  60:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_:

0000000000000000 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	add	x8, x1, #0x48
  10:	str	x8, [x0]
  14:	ldr	x9, [x1, #80]
  18:	mov	x20, x0
  1c:	str	x9, [x20, #8]!
  20:	cmp	x9, x8
  24:	str	xzr, [x20, #8]
  28:	b.eq	6c <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x6c>  // b.none
  2c:	mov	x19, x0
  30:	mov	x0, x20
  34:	bl	0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  38:	ldr	x8, [x0, #48]
  3c:	mov	x0, x20
  40:	str	x8, [x19, #16]
  44:	bl	0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  48:	ldr	x8, [x19, #16]
  4c:	add	x9, x0, #0x28
  50:	cmp	x8, x9
  54:	b.ne	6c <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x6c>  // b.any
  58:	ldp	x9, x8, [x19]
  5c:	ldr	x8, [x8, #8]
  60:	cmp	x9, x8
  64:	str	x8, [x19, #8]
  68:	b.ne	30 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x30>  // b.any
  6c:	ldp	x20, x19, [sp, #16]
  70:	ldp	x29, x30, [sp], #32
  74:	ret

Disassembly of section .text._ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv:

0000000000000000 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	ldrb	w9, [x8]
  10:	tbnz	w9, #2, 28 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv+0x28>
  14:	sub	x9, x8, #0x18
  18:	cmp	x8, #0x0
  1c:	csel	x0, xzr, x9, eq  // eq = none
  20:	ldp	x29, x30, [sp], #16
  24:	ret
  28:	adrp	x0, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv>
  2c:	adrp	x1, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv>
  30:	adrp	x3, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv>
  34:	add	x0, x0, #0x0
  38:	add	x1, x1, #0x0
  3c:	add	x3, x3, #0x0
  40:	mov	w2, #0x8b                  	// #139
  44:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10CoroIdInst10getRawInfoEv:

0000000000000000 <_ZNK4llvm10CoroIdInst10getRawInfoEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w1, #0x3                   	// #3
   c:	bl	0 <_ZNK4llvm10CoroIdInst10getRawInfoEv>
  10:	bl	0 <_ZNK4llvm5Value17stripPointerCastsEv>
  14:	cbz	x0, 2c <_ZNK4llvm10CoroIdInst10getRawInfoEv+0x2c>
  18:	ldrb	w8, [x0, #16]
  1c:	cmp	w8, #0x11
  20:	b.cs	4c <_ZNK4llvm10CoroIdInst10getRawInfoEv+0x4c>  // b.hs, b.nlast
  24:	ldp	x29, x30, [sp], #16
  28:	ret
  2c:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst10getRawInfoEv>
  30:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst10getRawInfoEv>
  34:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst10getRawInfoEv>
  38:	add	x0, x0, #0x0
  3c:	add	x1, x1, #0x0
  40:	add	x3, x3, #0x0
  44:	mov	w2, #0x69                  	// #105
  48:	bl	0 <__assert_fail>
  4c:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst10getRawInfoEv>
  50:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst10getRawInfoEv>
  54:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst10getRawInfoEv>
  58:	add	x0, x0, #0x0
  5c:	add	x1, x1, #0x0
  60:	add	x3, x3, #0x0
  64:	mov	w2, #0x108                 	// #264
  68:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm4Pass13getAnalysisIDINS_20AAResultsWrapperPassEEERT_PKv:

0000000000000000 <_ZNK4llvm4Pass13getAnalysisIDINS_20AAResultsWrapperPassEEERT_PKv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x1, 78 <_ZNK4llvm4Pass13getAnalysisIDINS_20AAResultsWrapperPassEEERT_PKv+0x78>
   c:	ldr	x9, [x0, #8]
  10:	cbz	x9, 98 <_ZNK4llvm4Pass13getAnalysisIDINS_20AAResultsWrapperPassEEERT_PKv+0x98>
  14:	ldr	x8, [x9]
  18:	ldr	x9, [x9, #8]
  1c:	cmp	x8, x9
  20:	b.eq	58 <_ZNK4llvm4Pass13getAnalysisIDINS_20AAResultsWrapperPassEEERT_PKv+0x58>  // b.none
  24:	mov	x0, xzr
  28:	ldp	x10, x11, [x8]
  2c:	cmp	x10, x1
  30:	csel	x0, x11, x0, eq  // eq = none
  34:	b.eq	44 <_ZNK4llvm4Pass13getAnalysisIDINS_20AAResultsWrapperPassEEERT_PKv+0x44>  // b.none
  38:	add	x8, x8, #0x10
  3c:	cmp	x8, x9
  40:	b.ne	28 <_ZNK4llvm4Pass13getAnalysisIDINS_20AAResultsWrapperPassEEERT_PKv+0x28>  // b.any
  44:	cbz	x0, 58 <_ZNK4llvm4Pass13getAnalysisIDINS_20AAResultsWrapperPassEEERT_PKv+0x58>
  48:	ldr	x8, [x0]
  4c:	ldr	x2, [x8, #96]
  50:	ldp	x29, x30, [sp], #16
  54:	br	x2
  58:	adrp	x0, 0 <_ZNK4llvm4Pass13getAnalysisIDINS_20AAResultsWrapperPassEEERT_PKv>
  5c:	adrp	x1, 0 <_ZNK4llvm4Pass13getAnalysisIDINS_20AAResultsWrapperPassEEERT_PKv>
  60:	adrp	x3, 0 <_ZNK4llvm4Pass13getAnalysisIDINS_20AAResultsWrapperPassEEERT_PKv>
  64:	add	x0, x0, #0x0
  68:	add	x1, x1, #0x0
  6c:	add	x3, x3, #0x0
  70:	mov	w2, #0xeb                  	// #235
  74:	bl	0 <__assert_fail>
  78:	adrp	x0, 0 <_ZNK4llvm4Pass13getAnalysisIDINS_20AAResultsWrapperPassEEERT_PKv>
  7c:	adrp	x1, 0 <_ZNK4llvm4Pass13getAnalysisIDINS_20AAResultsWrapperPassEEERT_PKv>
  80:	adrp	x3, 0 <_ZNK4llvm4Pass13getAnalysisIDINS_20AAResultsWrapperPassEEERT_PKv>
  84:	add	x0, x0, #0x0
  88:	add	x1, x1, #0x0
  8c:	add	x3, x3, #0x0
  90:	mov	w2, #0xe3                  	// #227
  94:	bl	0 <__assert_fail>
  98:	adrp	x0, 0 <_ZNK4llvm4Pass13getAnalysisIDINS_20AAResultsWrapperPassEEERT_PKv>
  9c:	adrp	x1, 0 <_ZNK4llvm4Pass13getAnalysisIDINS_20AAResultsWrapperPassEEERT_PKv>
  a0:	adrp	x3, 0 <_ZNK4llvm4Pass13getAnalysisIDINS_20AAResultsWrapperPassEEERT_PKv>
  a4:	add	x0, x0, #0x0
  a8:	add	x1, x1, #0x0
  ac:	add	x3, x3, #0x0
  b0:	mov	w2, #0xe4                  	// #228
  b4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm4Pass13getAnalysisIDINS_24DominatorTreeWrapperPassEEERT_PKv:

0000000000000000 <_ZNK4llvm4Pass13getAnalysisIDINS_24DominatorTreeWrapperPassEEERT_PKv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x1, 78 <_ZNK4llvm4Pass13getAnalysisIDINS_24DominatorTreeWrapperPassEEERT_PKv+0x78>
   c:	ldr	x9, [x0, #8]
  10:	cbz	x9, 98 <_ZNK4llvm4Pass13getAnalysisIDINS_24DominatorTreeWrapperPassEEERT_PKv+0x98>
  14:	ldr	x8, [x9]
  18:	ldr	x9, [x9, #8]
  1c:	cmp	x8, x9
  20:	b.eq	58 <_ZNK4llvm4Pass13getAnalysisIDINS_24DominatorTreeWrapperPassEEERT_PKv+0x58>  // b.none
  24:	mov	x0, xzr
  28:	ldp	x10, x11, [x8]
  2c:	cmp	x10, x1
  30:	csel	x0, x11, x0, eq  // eq = none
  34:	b.eq	44 <_ZNK4llvm4Pass13getAnalysisIDINS_24DominatorTreeWrapperPassEEERT_PKv+0x44>  // b.none
  38:	add	x8, x8, #0x10
  3c:	cmp	x8, x9
  40:	b.ne	28 <_ZNK4llvm4Pass13getAnalysisIDINS_24DominatorTreeWrapperPassEEERT_PKv+0x28>  // b.any
  44:	cbz	x0, 58 <_ZNK4llvm4Pass13getAnalysisIDINS_24DominatorTreeWrapperPassEEERT_PKv+0x58>
  48:	ldr	x8, [x0]
  4c:	ldr	x2, [x8, #96]
  50:	ldp	x29, x30, [sp], #16
  54:	br	x2
  58:	adrp	x0, 0 <_ZNK4llvm4Pass13getAnalysisIDINS_24DominatorTreeWrapperPassEEERT_PKv>
  5c:	adrp	x1, 0 <_ZNK4llvm4Pass13getAnalysisIDINS_24DominatorTreeWrapperPassEEERT_PKv>
  60:	adrp	x3, 0 <_ZNK4llvm4Pass13getAnalysisIDINS_24DominatorTreeWrapperPassEEERT_PKv>
  64:	add	x0, x0, #0x0
  68:	add	x1, x1, #0x0
  6c:	add	x3, x3, #0x0
  70:	mov	w2, #0xeb                  	// #235
  74:	bl	0 <__assert_fail>
  78:	adrp	x0, 0 <_ZNK4llvm4Pass13getAnalysisIDINS_24DominatorTreeWrapperPassEEERT_PKv>
  7c:	adrp	x1, 0 <_ZNK4llvm4Pass13getAnalysisIDINS_24DominatorTreeWrapperPassEEERT_PKv>
  80:	adrp	x3, 0 <_ZNK4llvm4Pass13getAnalysisIDINS_24DominatorTreeWrapperPassEEERT_PKv>
  84:	add	x0, x0, #0x0
  88:	add	x1, x1, #0x0
  8c:	add	x3, x3, #0x0
  90:	mov	w2, #0xe3                  	// #227
  94:	bl	0 <__assert_fail>
  98:	adrp	x0, 0 <_ZNK4llvm4Pass13getAnalysisIDINS_24DominatorTreeWrapperPassEEERT_PKv>
  9c:	adrp	x1, 0 <_ZNK4llvm4Pass13getAnalysisIDINS_24DominatorTreeWrapperPassEEERT_PKv>
  a0:	adrp	x3, 0 <_ZNK4llvm4Pass13getAnalysisIDINS_24DominatorTreeWrapperPassEEERT_PKv>
  a4:	add	x0, x0, #0x0
  a8:	add	x1, x1, #0x0
  ac:	add	x3, x3, #0x0
  b0:	mov	w2, #0xe4                  	// #228
  b4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm5Value18user_iterator_implINS_4UserEEdeEv:

0000000000000000 <_ZNK4llvm5Value18user_iterator_implINS_4UserEEdeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0]
   c:	cbz	x0, 18 <_ZNK4llvm5Value18user_iterator_implINS_4UserEEdeEv+0x18>
  10:	ldp	x29, x30, [sp], #16
  14:	b	0 <_ZNK4llvm3Use7getUserEv>
  18:	adrp	x0, 0 <_ZNK4llvm5Value18user_iterator_implINS_4UserEEdeEv>
  1c:	adrp	x1, 0 <_ZNK4llvm5Value18user_iterator_implINS_4UserEEdeEv>
  20:	adrp	x3, 0 <_ZNK4llvm5Value18user_iterator_implINS_4UserEEdeEv>
  24:	add	x0, x0, #0x0
  28:	add	x1, x1, #0x0
  2c:	add	x3, x3, #0x0
  30:	mov	w2, #0x99                  	// #153
  34:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIPNS_13CoroBeginInstELb1EE9push_backERKS2_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIPNS_13CoroBeginInstELb1EE9push_backERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseIPNS_13CoroBeginInstELb1EE9push_backERKS2_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	x10, [x20]
  28:	str	x10, [x9, w8, uxtw #3]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseIPNS_13CoroBeginInstELb1EE9push_backERKS2_+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x8                   	// #8
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseIPNS_13CoroBeginInstELb1EE9push_backERKS2_+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_13CoroBeginInstELb1EE9push_backERKS2_>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_13CoroBeginInstELb1EE9push_backERKS2_>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_13CoroBeginInstELb1EE9push_backERKS2_>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIPNS_13CoroAllocInstELb1EE9push_backERKS2_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIPNS_13CoroAllocInstELb1EE9push_backERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseIPNS_13CoroAllocInstELb1EE9push_backERKS2_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	x10, [x20]
  28:	str	x10, [x9, w8, uxtw #3]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseIPNS_13CoroAllocInstELb1EE9push_backERKS2_+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x8                   	// #8
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseIPNS_13CoroAllocInstELb1EE9push_backERKS2_+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_13CoroAllocInstELb1EE9push_backERKS2_>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_13CoroAllocInstELb1EE9push_backERKS2_>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_13CoroAllocInstELb1EE9push_backERKS2_>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIPNS_12CoroFreeInstELb1EE9push_backERKS2_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIPNS_12CoroFreeInstELb1EE9push_backERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseIPNS_12CoroFreeInstELb1EE9push_backERKS2_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	x10, [x20]
  28:	str	x10, [x9, w8, uxtw #3]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseIPNS_12CoroFreeInstELb1EE9push_backERKS2_+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x8                   	// #8
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseIPNS_12CoroFreeInstELb1EE9push_backERKS2_+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_12CoroFreeInstELb1EE9push_backERKS2_>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_12CoroFreeInstELb1EE9push_backERKS2_>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_12CoroFreeInstELb1EE9push_backERKS2_>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallPtrSetImplIPNS_11InstructionEE6insertES2_:

0000000000000000 <_ZN4llvm15SmallPtrSetImplIPNS_11InstructionEE6insertES2_>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #32]
   8:	str	x21, [sp, #48]
   c:	stp	x20, x19, [sp, #64]
  10:	add	x29, sp, #0x20
  14:	mov	x19, x0
  18:	mov	x20, x8
  1c:	bl	0 <_ZN4llvm15SmallPtrSetImplIPNS_11InstructionEE6insertES2_>
  20:	ldp	x9, x8, [x19, #8]
  24:	mov	w10, #0x18                  	// #24
  28:	mov	w11, #0x1c                  	// #28
  2c:	mov	x21, x1
  30:	cmp	x8, x9
  34:	csel	x9, x11, x10, eq  // eq = none
  38:	ldr	w9, [x19, x9]
  3c:	add	x8, x8, x9, lsl #3
  40:	stp	x0, x8, [sp]
  44:	mov	x0, sp
  48:	bl	0 <_ZN4llvm15SmallPtrSetImplIPNS_11InstructionEE6insertES2_>
  4c:	ldr	x8, [x19]
  50:	strb	w21, [x20, #32]
  54:	ldr	x21, [sp, #48]
  58:	ldp	x29, x30, [sp, #32]
  5c:	stp	x19, x8, [sp, #16]
  60:	ldp	q1, q0, [sp]
  64:	stp	q1, q0, [x20]
  68:	ldp	x20, x19, [sp, #64]
  6c:	add	sp, sp, #0x50
  70:	ret

Disassembly of section .text._ZNK4llvm19SmallPtrSetIteratorIPNS_11InstructionEEdeEv:

0000000000000000 <_ZNK4llvm19SmallPtrSetIteratorIPNS_11InstructionEEdeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x8, x9, [x0, #16]
   c:	ldr	x8, [x8]
  10:	cmp	x8, x9
  14:	b.ne	30 <_ZNK4llvm19SmallPtrSetIteratorIPNS_11InstructionEEdeEv+0x30>  // b.any
  18:	ldp	x8, x9, [x0]
  1c:	cmp	x8, x9
  20:	b.cs	50 <_ZNK4llvm19SmallPtrSetIteratorIPNS_11InstructionEEdeEv+0x50>  // b.hs, b.nlast
  24:	ldr	x0, [x8]
  28:	ldp	x29, x30, [sp], #16
  2c:	ret
  30:	adrp	x0, 0 <_ZNK4llvm19SmallPtrSetIteratorIPNS_11InstructionEEdeEv>
  34:	adrp	x1, 0 <_ZNK4llvm19SmallPtrSetIteratorIPNS_11InstructionEEdeEv>
  38:	adrp	x3, 0 <_ZNK4llvm19SmallPtrSetIteratorIPNS_11InstructionEEdeEv>
  3c:	add	x0, x0, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0x11c                 	// #284
  4c:	bl	0 <__assert_fail>
  50:	adrp	x0, 0 <_ZNK4llvm19SmallPtrSetIteratorIPNS_11InstructionEEdeEv>
  54:	adrp	x1, 0 <_ZNK4llvm19SmallPtrSetIteratorIPNS_11InstructionEEdeEv>
  58:	adrp	x3, 0 <_ZNK4llvm19SmallPtrSetIteratorIPNS_11InstructionEEdeEv>
  5c:	add	x0, x0, #0x0
  60:	add	x1, x1, #0x0
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x121                 	// #289
  6c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallPtrSetImplIPNS_13CoroSubFnInstEE6insertES2_:

0000000000000000 <_ZN4llvm15SmallPtrSetImplIPNS_13CoroSubFnInstEE6insertES2_>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #32]
   8:	str	x21, [sp, #48]
   c:	stp	x20, x19, [sp, #64]
  10:	add	x29, sp, #0x20
  14:	mov	x19, x0
  18:	mov	x20, x8
  1c:	bl	0 <_ZN4llvm15SmallPtrSetImplIPNS_13CoroSubFnInstEE6insertES2_>
  20:	ldp	x9, x8, [x19, #8]
  24:	mov	w10, #0x18                  	// #24
  28:	mov	w11, #0x1c                  	// #28
  2c:	mov	x21, x1
  30:	cmp	x8, x9
  34:	csel	x9, x11, x10, eq  // eq = none
  38:	ldr	w9, [x19, x9]
  3c:	add	x8, x8, x9, lsl #3
  40:	stp	x0, x8, [sp]
  44:	mov	x0, sp
  48:	bl	0 <_ZN4llvm15SmallPtrSetImplIPNS_13CoroSubFnInstEE6insertES2_>
  4c:	ldr	x8, [x19]
  50:	strb	w21, [x20, #32]
  54:	ldr	x21, [sp, #48]
  58:	ldp	x29, x30, [sp, #32]
  5c:	stp	x19, x8, [sp, #16]
  60:	ldp	q1, q0, [sp]
  64:	stp	q1, q0, [x20]
  68:	ldp	x20, x19, [sp, #64]
  6c:	add	sp, sp, #0x50
  70:	ret

Disassembly of section .text._ZNK4llvm19SmallPtrSetIteratorIPNS_13CoroSubFnInstEEdeEv:

0000000000000000 <_ZNK4llvm19SmallPtrSetIteratorIPNS_13CoroSubFnInstEEdeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x8, x9, [x0, #16]
   c:	ldr	x8, [x8]
  10:	cmp	x8, x9
  14:	b.ne	30 <_ZNK4llvm19SmallPtrSetIteratorIPNS_13CoroSubFnInstEEdeEv+0x30>  // b.any
  18:	ldp	x8, x9, [x0]
  1c:	cmp	x8, x9
  20:	b.cs	50 <_ZNK4llvm19SmallPtrSetIteratorIPNS_13CoroSubFnInstEEdeEv+0x50>  // b.hs, b.nlast
  24:	ldr	x0, [x8]
  28:	ldp	x29, x30, [sp], #16
  2c:	ret
  30:	adrp	x0, 0 <_ZNK4llvm19SmallPtrSetIteratorIPNS_13CoroSubFnInstEEdeEv>
  34:	adrp	x1, 0 <_ZNK4llvm19SmallPtrSetIteratorIPNS_13CoroSubFnInstEEdeEv>
  38:	adrp	x3, 0 <_ZNK4llvm19SmallPtrSetIteratorIPNS_13CoroSubFnInstEEdeEv>
  3c:	add	x0, x0, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0x11c                 	// #284
  4c:	bl	0 <__assert_fail>
  50:	adrp	x0, 0 <_ZNK4llvm19SmallPtrSetIteratorIPNS_13CoroSubFnInstEEdeEv>
  54:	adrp	x1, 0 <_ZNK4llvm19SmallPtrSetIteratorIPNS_13CoroSubFnInstEEdeEv>
  58:	adrp	x3, 0 <_ZNK4llvm19SmallPtrSetIteratorIPNS_13CoroSubFnInstEEdeEv>
  5c:	add	x0, x0, #0x0
  60:	add	x1, x1, #0x0
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x121                 	// #289
  6c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallPtrSetImplIPNS_13CoroBeginInstEE6insertES2_:

0000000000000000 <_ZN4llvm15SmallPtrSetImplIPNS_13CoroBeginInstEE6insertES2_>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #32]
   8:	str	x21, [sp, #48]
   c:	stp	x20, x19, [sp, #64]
  10:	add	x29, sp, #0x20
  14:	mov	x19, x0
  18:	mov	x20, x8
  1c:	bl	0 <_ZN4llvm15SmallPtrSetImplIPNS_13CoroBeginInstEE6insertES2_>
  20:	ldp	x9, x8, [x19, #8]
  24:	mov	w10, #0x18                  	// #24
  28:	mov	w11, #0x1c                  	// #28
  2c:	mov	x21, x1
  30:	cmp	x8, x9
  34:	csel	x9, x11, x10, eq  // eq = none
  38:	ldr	w9, [x19, x9]
  3c:	add	x8, x8, x9, lsl #3
  40:	stp	x0, x8, [sp]
  44:	mov	x0, sp
  48:	bl	0 <_ZN4llvm15SmallPtrSetImplIPNS_13CoroBeginInstEE6insertES2_>
  4c:	ldr	x8, [x19]
  50:	strb	w21, [x20, #32]
  54:	ldr	x21, [sp, #48]
  58:	ldp	x29, x30, [sp, #32]
  5c:	stp	x19, x8, [sp, #16]
  60:	ldp	q1, q0, [sp]
  64:	stp	q1, q0, [x20]
  68:	ldp	x20, x19, [sp, #64]
  6c:	add	sp, sp, #0x50
  70:	ret

Disassembly of section .text._ZN4llvm19SmallPtrSetImplBase10insert_impEPKv:

0000000000000000 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x12, x9, [x0, #8]
   c:	mov	x8, x0
  10:	cmp	x9, x12
  14:	b.eq	34 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0x34>  // b.none
  18:	mov	x0, x8
  1c:	bl	0 <_ZN4llvm19SmallPtrSetImplBase14insert_imp_bigEPKv>
  20:	and	x11, x1, #0xffffffffffffff00
  24:	and	x8, x1, #0xff
  28:	orr	x1, x11, x8
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	ldr	w10, [x8, #28]
  38:	cbz	w10, 98 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0x98>
  3c:	mov	x0, xzr
  40:	add	x13, x9, #0x8
  44:	lsl	x11, x10, #3
  48:	mov	x14, x13
  4c:	ldur	x13, [x13, #-8]
  50:	cmp	x13, x1
  54:	b.eq	cc <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0xcc>  // b.none
  58:	cmn	x13, #0x2
  5c:	csel	x0, x12, x0, eq  // eq = none
  60:	subs	x11, x11, #0x8
  64:	add	x13, x14, #0x8
  68:	mov	x12, x14
  6c:	b.ne	48 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0x48>  // b.any
  70:	cbz	x0, 98 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0x98>
  74:	str	x1, [x0]
  78:	ldr	w9, [x8, #32]
  7c:	ldr	x10, [x8]
  80:	mov	x11, xzr
  84:	sub	w9, w9, #0x1
  88:	add	x10, x10, #0x1
  8c:	str	w9, [x8, #32]
  90:	str	x10, [x8]
  94:	b	c4 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0xc4>
  98:	ldr	w11, [x8, #24]
  9c:	cmp	w10, w11
  a0:	b.cs	18 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0x18>  // b.hs, b.nlast
  a4:	add	w12, w10, #0x1
  a8:	str	w12, [x8, #28]
  ac:	str	x1, [x9, x10, lsl #3]
  b0:	ldp	x9, x12, [x8]
  b4:	mov	x11, xzr
  b8:	add	x9, x9, #0x1
  bc:	add	x0, x12, x10, lsl #3
  c0:	str	x9, [x8]
  c4:	mov	w8, #0x1                   	// #1
  c8:	b	28 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0x28>
  cc:	mov	x8, xzr
  d0:	mov	x11, xzr
  d4:	mov	x0, x12
  d8:	b	28 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0x28>

Disassembly of section .text._ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv:

0000000000000000 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x8, x9, [x0]
   c:	cmp	x8, x9
  10:	b.hi	3c <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv+0x3c>  // b.pmore
  14:	b.eq	34 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv+0x34>  // b.none
  18:	ldr	x10, [x8]
  1c:	cmn	x10, #0x2
  20:	b.cc	34 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv+0x34>  // b.lo, b.ul, b.last
  24:	add	x8, x8, #0x8
  28:	cmp	x9, x8
  2c:	str	x8, [x0]
  30:	b.ne	18 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv+0x18>  // b.any
  34:	ldp	x29, x30, [sp], #16
  38:	ret
  3c:	adrp	x0, 0 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv>
  40:	adrp	x1, 0 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv>
  44:	adrp	x3, 0 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv>
  48:	add	x0, x0, #0x0
  4c:	add	x1, x1, #0x0
  50:	add	x3, x3, #0x0
  54:	mov	w2, #0xf8                  	// #248
  58:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm5TwineC2EPKc:

0000000000000000 <_ZN4llvm5TwineC2EPKc>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w8, #0x101                 	// #257
   c:	stp	xzr, xzr, [x0]
  10:	strh	w8, [x0, #16]
  14:	ldrb	w8, [x1]
  18:	cbz	w8, 28 <_ZN4llvm5TwineC2EPKc+0x28>
  1c:	mov	w8, #0x3                   	// #3
  20:	str	x1, [x0]
  24:	b	2c <_ZN4llvm5TwineC2EPKc+0x2c>
  28:	mov	w8, #0x1                   	// #1
  2c:	strb	w8, [x0, #16]
  30:	bl	0 <_ZN4llvm5TwineC2EPKc>
  34:	tbz	w0, #0, 40 <_ZN4llvm5TwineC2EPKc+0x40>
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZN4llvm5TwineC2EPKc>
  44:	adrp	x1, 0 <_ZN4llvm5TwineC2EPKc>
  48:	adrp	x3, 0 <_ZN4llvm5TwineC2EPKc>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x112                 	// #274
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12simple_ilistINS_10BasicBlockEJEE5frontEv:

0000000000000000 <_ZN4llvm12simple_ilistINS_10BasicBlockEJEE5frontEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #8]
   c:	ldrb	w9, [x8]
  10:	tbnz	w9, #2, 28 <_ZN4llvm12simple_ilistINS_10BasicBlockEJEE5frontEv+0x28>
  14:	sub	x9, x8, #0x18
  18:	cmp	x8, #0x0
  1c:	csel	x0, xzr, x9, eq  // eq = none
  20:	ldp	x29, x30, [sp], #16
  24:	ret
  28:	adrp	x0, 0 <_ZN4llvm12simple_ilistINS_10BasicBlockEJEE5frontEv>
  2c:	adrp	x1, 0 <_ZN4llvm12simple_ilistINS_10BasicBlockEJEE5frontEv>
  30:	adrp	x3, 0 <_ZN4llvm12simple_ilistINS_10BasicBlockEJEE5frontEv>
  34:	add	x0, x0, #0x0
  38:	add	x1, x1, #0x0
  3c:	add	x3, x3, #0x0
  40:	mov	w2, #0x8b                  	// #139
  44:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm5Twine7isValidEv:

0000000000000000 <_ZNK4llvm5Twine7isValidEv>:
   0:	ldrb	w9, [x0, #16]
   4:	ldrb	w8, [x0, #17]
   8:	cmp	w9, #0x1
   c:	b.hi	1c <_ZNK4llvm5Twine7isValidEv+0x1c>  // b.pmore
  10:	cmp	w8, #0x1
  14:	b.ne	78 <_ZNK4llvm5Twine7isValidEv+0x78>  // b.any
  18:	b	80 <_ZNK4llvm5Twine7isValidEv+0x80>
  1c:	cbz	w8, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  20:	cmp	w8, #0x1
  24:	b.ne	38 <_ZNK4llvm5Twine7isValidEv+0x38>  // b.any
  28:	cmp	w9, #0x2
  2c:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  30:	mov	w8, #0x1                   	// #1
  34:	b	40 <_ZNK4llvm5Twine7isValidEv+0x40>
  38:	cmp	w9, #0x2
  3c:	b.ne	58 <_ZNK4llvm5Twine7isValidEv+0x58>  // b.any
  40:	ldr	x9, [x0]
  44:	ldrb	w10, [x9, #16]
  48:	cbz	w10, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  4c:	ldrb	w9, [x9, #17]
  50:	cmp	w9, #0x1
  54:	b.eq	78 <_ZNK4llvm5Twine7isValidEv+0x78>  // b.none
  58:	cmp	w8, #0x2
  5c:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  60:	ldr	x8, [x0, #8]
  64:	ldrb	w9, [x8, #16]
  68:	cbz	w9, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  6c:	ldrb	w8, [x8, #17]
  70:	cmp	w8, #0x1
  74:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  78:	mov	w0, wzr
  7c:	ret
  80:	mov	w0, #0x1                   	// #1
  84:	ret

Disassembly of section .text._ZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_:

0000000000000000 <_ZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_>:
   0:	sub	sp, sp, #0x20
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	mov	x8, x0
  10:	stp	x1, x2, [sp]
  14:	adrp	x0, 0 <_ZSt15__once_callable>
  18:	ldr	x1, [x0]
  1c:	add	x0, x0, #0x0
  20:	blr	x1
  24:	mrs	x9, tpidr_el0
  28:	mov	x10, sp
  2c:	str	x10, [x9, x0]
  30:	adrp	x0, 0 <_ZSt11__once_call>
  34:	ldr	x1, [x0]
  38:	add	x0, x0, #0x0
  3c:	blr	x1
  40:	adrp	x11, 0 <__pthread_key_create>
  44:	ldr	x11, [x11]
  48:	adrp	x10, 0 <_ZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_>
  4c:	add	x10, x10, #0x0
  50:	str	x10, [x9, x0]
  54:	cbz	x11, 78 <_ZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_+0x78>
  58:	adrp	x1, 0 <__once_proxy>
  5c:	ldr	x1, [x1]
  60:	mov	x0, x8
  64:	bl	0 <pthread_once>
  68:	cbnz	w0, 7c <_ZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_+0x7c>
  6c:	ldp	x29, x30, [sp, #16]
  70:	add	sp, sp, #0x20
  74:	ret
  78:	mov	w0, #0xffffffff            	// #-1
  7c:	bl	0 <_ZSt20__throw_system_errori>

Disassembly of section .text._ZZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_ENUlvE0_8__invokeEv:

0000000000000000 <_ZZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_ENUlvE0_8__invokeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	adrp	x0, 0 <_ZSt15__once_callable>
   c:	ldr	x1, [x0]
  10:	add	x0, x0, #0x0
  14:	blr	x1
  18:	mrs	x8, tpidr_el0
  1c:	ldr	x8, [x8, x0]
  20:	ldp	x1, x9, [x8]
  24:	ldr	x0, [x9]
  28:	ldp	x29, x30, [sp], #16
  2c:	br	x1

CoroFrame.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>:
       0:	stp	x29, x30, [sp, #-64]!
       4:	stp	x24, x23, [sp, #16]
       8:	stp	x22, x21, [sp, #32]
       c:	stp	x20, x19, [sp, #48]
      10:	mov	x29, sp
      14:	mov	x19, x3
      18:	mov	x21, x2
      1c:	mov	x22, x1
      20:	mov	x20, x0
      24:	bl	0 <_ZN4llvm4dbgsEv>
      28:	mov	x1, x22
      2c:	mov	x2, x21
      30:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
      34:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
      38:	add	x1, x1, #0x0
      3c:	mov	w2, #0x1                   	// #1
      40:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
      44:	ldr	w24, [x19, #16]
      48:	cbz	w24, b8 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE+0xb8>
      4c:	adrp	x22, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
      50:	mov	x21, xzr
      54:	add	x22, x22, #0x0
      58:	mov	x0, x19
      5c:	mov	w1, w21
      60:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
      64:	tbz	w0, #0, ac <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE+0xac>
      68:	bl	0 <_ZN4llvm4dbgsEv>
      6c:	mov	w2, #0x1                   	// #1
      70:	mov	x1, x22
      74:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
      78:	ldr	w8, [x20, #8]
      7c:	cmp	w8, w21
      80:	b.ls	dc <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE+0xdc>  // b.plast
      84:	ldr	x8, [x20]
      88:	mov	x23, x0
      8c:	ldr	x0, [x8, x21, lsl #3]
      90:	bl	0 <_ZNK4llvm5Value7getNameEv>
      94:	mov	x2, x0
      98:	mov	x3, x1
      9c:	mov	x0, x23
      a0:	mov	x1, x2
      a4:	mov	x2, x3
      a8:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
      ac:	add	x21, x21, #0x1
      b0:	cmp	x24, x21
      b4:	b.ne	58 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE+0x58>  // b.any
      b8:	bl	0 <_ZN4llvm4dbgsEv>
      bc:	ldp	x20, x19, [sp, #48]
      c0:	ldp	x22, x21, [sp, #32]
      c4:	ldp	x24, x23, [sp, #16]
      c8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
      cc:	add	x1, x1, #0x0
      d0:	mov	w2, #0x1                   	// #1
      d4:	ldp	x29, x30, [sp], #64
      d8:	b	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
      dc:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
      e0:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
      e4:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
      e8:	add	x0, x0, #0x0
      ec:	add	x1, x1, #0x0
      f0:	add	x3, x3, #0x0
      f4:	mov	w2, #0x99                  	// #153
      f8:	bl	0 <__assert_fail>

00000000000000fc <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEv>:
      fc:	stp	x29, x30, [sp, #-96]!
     100:	str	x27, [sp, #16]
     104:	stp	x26, x25, [sp, #32]
     108:	stp	x24, x23, [sp, #48]
     10c:	stp	x22, x21, [sp, #64]
     110:	stp	x20, x19, [sp, #80]
     114:	mov	x29, sp
     118:	ldr	w25, [x0, #280]
     11c:	cbz	w25, 1e8 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEv+0xec>
     120:	adrp	x20, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     124:	adrp	x21, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     128:	adrp	x22, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     12c:	mov	x19, x0
     130:	mov	x26, xzr
     134:	mov	x27, xzr
     138:	add	x20, x20, #0x0
     13c:	add	x21, x21, #0x0
     140:	add	x22, x22, #0x0
     144:	ldr	w8, [x19, #8]
     148:	cmp	w8, w27
     14c:	b.ls	230 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEv+0x134>  // b.plast
     150:	ldr	x8, [x19]
     154:	ldr	x23, [x8, x27, lsl #3]
     158:	bl	0 <_ZN4llvm4dbgsEv>
     15c:	mov	x24, x0
     160:	mov	x0, x23
     164:	bl	0 <_ZNK4llvm5Value7getNameEv>
     168:	mov	x2, x0
     16c:	mov	x3, x1
     170:	mov	x0, x24
     174:	mov	x1, x2
     178:	mov	x2, x3
     17c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     180:	mov	w2, #0x2                   	// #2
     184:	mov	x1, x20
     188:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     18c:	ldr	w8, [x19, #280]
     190:	cmp	x27, x8
     194:	b.cs	214 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEv+0x118>  // b.hs, b.nlast
     198:	ldr	x8, [x19, #272]
     19c:	mov	w2, #0xb                   	// #11
     1a0:	mov	x0, x19
     1a4:	mov	x1, x21
     1a8:	add	x3, x8, x26
     1ac:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     1b0:	ldr	w8, [x19, #280]
     1b4:	cmp	x27, x8
     1b8:	b.cs	214 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEv+0x118>  // b.hs, b.nlast
     1bc:	ldr	x8, [x19, #272]
     1c0:	mov	w2, #0xb                   	// #11
     1c4:	mov	x0, x19
     1c8:	mov	x1, x22
     1cc:	add	x8, x8, x26
     1d0:	add	x3, x8, #0x18
     1d4:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     1d8:	add	x27, x27, #0x1
     1dc:	cmp	x25, x27
     1e0:	add	x26, x26, #0x38
     1e4:	b.ne	144 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEv+0x48>  // b.any
     1e8:	bl	0 <_ZN4llvm4dbgsEv>
     1ec:	ldp	x20, x19, [sp, #80]
     1f0:	ldp	x22, x21, [sp, #64]
     1f4:	ldp	x24, x23, [sp, #48]
     1f8:	ldp	x26, x25, [sp, #32]
     1fc:	ldr	x27, [sp, #16]
     200:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     204:	add	x1, x1, #0x0
     208:	mov	w2, #0x1                   	// #1
     20c:	ldp	x29, x30, [sp], #96
     210:	b	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     214:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     218:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     21c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     220:	add	x0, x0, #0x0
     224:	add	x1, x1, #0x0
     228:	add	x3, x3, #0x0
     22c:	b	248 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEv+0x14c>
     230:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     234:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     238:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     23c:	add	x0, x0, #0x0
     240:	add	x1, x1, #0x0
     244:	add	x3, x3, #0x0
     248:	mov	w2, #0x99                  	// #153
     24c:	bl	0 <__assert_fail>

0000000000000250 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE>:
     250:	str	d10, [sp, #-128]!
     254:	stp	d9, d8, [sp, #16]
     258:	stp	x29, x30, [sp, #32]
     25c:	stp	x28, x27, [sp, #48]
     260:	stp	x26, x25, [sp, #64]
     264:	stp	x24, x23, [sp, #80]
     268:	stp	x22, x21, [sp, #96]
     26c:	stp	x20, x19, [sp, #112]
     270:	mov	x29, sp
     274:	sub	sp, sp, #0xae0
     278:	mov	x21, x1
     27c:	mov	x19, x0
     280:	bl	0 <_ZN4llvm15LowerDbgDeclareERNS_8FunctionE>
     284:	adrp	x8, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     288:	ldr	d9, [x8]
     28c:	add	x8, sp, #0xc0
     290:	add	x8, x8, #0x10
     294:	mov	x0, x19
     298:	str	x8, [sp, #192]
     29c:	str	d9, [sp, #200]
     2a0:	str	x19, [sp, #48]
     2a4:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     2a8:	cmp	x0, x1
     2ac:	str	x21, [sp, #16]
     2b0:	b.eq	454 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x204>  // b.none
     2b4:	mov	x20, x0
     2b8:	mov	x19, x1
     2bc:	mov	x0, x20
     2c0:	bl	0 <_ZNK4llvm8Argument17hasSwiftErrorAttrEv>
     2c4:	tbnz	w0, #0, 2d8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x88>
     2c8:	add	x20, x20, #0x28
     2cc:	cmp	x19, x20
     2d0:	b.ne	2bc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x6c>  // b.any
     2d4:	b	454 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x204>
     2d8:	ldr	x8, [sp, #48]
     2dc:	add	x0, x8, #0x48
     2e0:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     2e4:	bl	0 <_ZNK4llvm10BasicBlock19getFirstNonPHIOrDbgEv>
     2e8:	mov	x1, x0
     2ec:	add	x0, sp, #0x1e0
     2f0:	mov	x2, xzr
     2f4:	mov	x3, xzr
     2f8:	mov	x4, xzr
     2fc:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     300:	ldr	x8, [x20]
     304:	cbz	x8, 2b7c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x292c>
     308:	ldr	w9, [x8, #8]
     30c:	and	w10, w9, #0xff
     310:	cmp	w10, #0xf
     314:	b.ne	2b98 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2948>  // b.any
     318:	ldr	x19, [x8, #24]
     31c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     320:	add	x1, x1, #0x0
     324:	sub	x0, x29, #0xd0
     328:	lsr	w21, w9, #8
     32c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     330:	add	x0, sp, #0x1e0
     334:	sub	x4, x29, #0xd0
     338:	mov	x1, x19
     33c:	mov	w2, w21
     340:	mov	x3, xzr
     344:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     348:	mov	x21, x0
     34c:	str	x0, [sp, #400]
     350:	mov	x0, x20
     354:	mov	x1, x21
     358:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
     35c:	mov	x0, x19
     360:	bl	0 <_ZN4llvm8Constant12getNullValueEPNS_4TypeE>
     364:	mov	x1, x0
     368:	add	x0, sp, #0x1e0
     36c:	mov	x2, x21
     370:	mov	w3, wzr
     374:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     378:	ldr	x23, [sp, #16]
     37c:	ldr	w22, [x23, #96]
     380:	cbz	w22, 3c4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x174>
     384:	ldr	x20, [x23, #88]
     388:	mov	x1, x21
     38c:	mov	x2, x23
     390:	ldr	x0, [x20]
     394:	bl	41a0 <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE>
     398:	cmp	w22, #0x1
     39c:	b.eq	3c4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x174>  // b.none
     3a0:	lsl	x8, x22, #3
     3a4:	add	x20, x20, #0x8
     3a8:	sub	x21, x8, #0x8
     3ac:	ldr	x1, [sp, #400]
     3b0:	ldr	x0, [x20], #8
     3b4:	mov	x2, x23
     3b8:	bl	41a0 <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE>
     3bc:	subs	x21, x21, #0x8
     3c0:	b.ne	3ac <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x15c>  // b.any
     3c4:	ldr	w8, [x23, #16]
     3c8:	mov	x21, x23
     3cc:	cbz	w8, 42c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1dc>
     3d0:	ldr	x22, [x21, #8]
     3d4:	adrp	x20, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     3d8:	lsl	x23, x8, #3
     3dc:	add	x20, x20, #0x0
     3e0:	ldr	x1, [x22], #8
     3e4:	add	x0, sp, #0x1e0
     3e8:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     3ec:	ldr	x21, [sp, #400]
     3f0:	sub	x0, x29, #0xd0
     3f4:	mov	x1, x20
     3f8:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     3fc:	mov	x2, x21
     400:	ldr	x21, [sp, #16]
     404:	add	x0, sp, #0x1e0
     408:	sub	x3, x29, #0xd0
     40c:	mov	x1, x19
     410:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     414:	mov	x1, x0
     418:	add	x0, sp, #0x1e0
     41c:	mov	x2, x21
     420:	bl	4388 <_ZL22emitSetSwiftErrorValueRN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueERNS_4coro5ShapeE>
     424:	subs	x23, x23, #0x8
     428:	b.ne	3e0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x190>  // b.any
     42c:	add	x0, sp, #0xc0
     430:	add	x1, sp, #0x190
     434:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     438:	ldr	x0, [sp, #400]
     43c:	mov	x1, x21
     440:	bl	407c <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE>
     444:	ldr	x1, [sp, #480]
     448:	cbz	x1, 454 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x204>
     44c:	add	x0, sp, #0x1e0
     450:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
     454:	ldr	x8, [sp, #48]
     458:	add	x0, x8, #0x48
     45c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     460:	ldr	x19, [x0, #48]
     464:	add	x20, x0, #0x28
     468:	cmp	x20, x19
     46c:	b.eq	4cc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x27c>  // b.none
     470:	ldrb	w8, [x19]
     474:	tbnz	w8, #2, 2834 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x25e4>
     478:	sub	x8, x19, #0x18
     47c:	cmp	x19, #0x0
     480:	csel	x8, xzr, x8, eq  // eq = none
     484:	cbz	x19, 2aa4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2854>
     488:	ldrb	w9, [x8, #16]
     48c:	cmp	w9, #0x37
     490:	csel	x8, x8, xzr, eq  // eq = none
     494:	str	x8, [sp, #480]
     498:	cbz	x8, 4c4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x274>
     49c:	ldrh	w9, [x8, #18]
     4a0:	tbz	w9, #6, 4c4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x274>
     4a4:	and	w9, w9, #0xffffffbf
     4a8:	add	x0, sp, #0xc0
     4ac:	add	x1, sp, #0x1e0
     4b0:	strh	w9, [x8, #18]
     4b4:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     4b8:	ldr	x0, [sp, #480]
     4bc:	mov	x1, x21
     4c0:	bl	407c <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE>
     4c4:	ldr	x19, [x19, #8]
     4c8:	b	468 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x218>
     4cc:	ldr	w8, [sp, #200]
     4d0:	cbz	w8, 55c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x30c>
     4d4:	adrp	x9, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     4d8:	ldr	d0, [x9]
     4dc:	add	x8, sp, #0x1e0
     4e0:	add	x19, x8, #0x18
     4e4:	add	x20, x8, #0x10
     4e8:	mov	x0, x19
     4ec:	mov	w1, wzr
     4f0:	str	x20, [sp, #480]
     4f4:	str	d0, [sp, #488]
     4f8:	str	xzr, [sp, #504]
     4fc:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     500:	ldr	x8, [sp, #48]
     504:	add	x0, sp, #0x1e0
     508:	str	wzr, [sp, #556]
     50c:	strb	wzr, [sp, #552]
     510:	str	xzr, [sp, #536]
     514:	str	x8, [sp, #544]
     518:	bl	0 <_ZN4llvm14DomTreeBuilder9CalculateINS_17DominatorTreeBaseINS_10BasicBlockELb0EEEEEvRT_>
     51c:	ldr	x0, [sp, #192]
     520:	ldr	w1, [sp, #200]
     524:	add	x2, sp, #0x1e0
     528:	mov	x3, xzr
     52c:	bl	0 <_ZN4llvm15PromoteMemToRegENS_8ArrayRefIPNS_10AllocaInstEEERNS_13DominatorTreeEPNS_15AssumptionCacheE>
     530:	mov	x0, x19
     534:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     538:	ldr	x0, [sp, #512]
     53c:	bl	0 <_ZdlPv>
     540:	ldr	x8, [sp, #504]
     544:	ldr	x0, [sp, #480]
     548:	add	x8, x8, #0x1
     54c:	cmp	x0, x20
     550:	str	x8, [sp, #504]
     554:	b.eq	55c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x30c>  // b.none
     558:	bl	0 <free>
     55c:	ldr	x0, [sp, #192]
     560:	add	x8, sp, #0xc0
     564:	add	x8, x8, #0x10
     568:	cmp	x0, x8
     56c:	b.eq	574 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x324>  // b.none
     570:	bl	0 <free>
     574:	ldr	w8, [x21, #168]
     578:	cbnz	w8, 590 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x340>
     57c:	ldr	x8, [x21, #208]
     580:	cbz	x8, 590 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x340>
     584:	mov	x0, x21
     588:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     58c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     590:	ldr	w8, [x21, #96]
     594:	cbz	w8, 628 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3d8>
     598:	ldr	x9, [sp, #16]
     59c:	adrp	x19, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     5a0:	adrp	x20, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     5a4:	lsl	x24, x8, #3
     5a8:	ldr	x23, [x9, #88]
     5ac:	add	x19, x19, #0x0
     5b0:	add	x20, x20, #0x0
     5b4:	ldr	x21, [x23]
     5b8:	add	x0, sp, #0x1e0
     5bc:	str	x21, [sp, #480]
     5c0:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     5c4:	tbz	w0, #0, 604 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3b4>
     5c8:	add	x0, sp, #0x1e0
     5cc:	str	x21, [sp, #480]
     5d0:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     5d4:	tbz	w0, #0, 2ac0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2870>
     5d8:	cbz	x21, 604 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3b4>
     5dc:	mov	x0, x21
     5e0:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     5e4:	cbz	x0, 604 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3b4>
     5e8:	mov	x22, x0
     5ec:	add	x0, sp, #0x1e0
     5f0:	mov	x1, x19
     5f4:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     5f8:	add	x1, sp, #0x1e0
     5fc:	mov	x0, x22
     600:	bl	2bd4 <_ZL11splitAroundPN4llvm11InstructionERKNS_5TwineE>
     604:	add	x0, sp, #0x1e0
     608:	mov	x1, x20
     60c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     610:	add	x1, sp, #0x1e0
     614:	mov	x0, x21
     618:	bl	2bd4 <_ZL11splitAroundPN4llvm11InstructionERKNS_5TwineE>
     61c:	subs	x24, x24, #0x8
     620:	add	x23, x23, #0x8
     624:	b.ne	5b4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x364>  // b.any
     628:	ldr	x8, [sp, #16]
     62c:	ldr	w8, [x8, #16]
     630:	cbz	w8, 66c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x41c>
     634:	ldr	x9, [sp, #16]
     638:	adrp	x19, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     63c:	lsl	x22, x8, #3
     640:	add	x19, x19, #0x0
     644:	ldr	x21, [x9, #8]
     648:	ldr	x20, [x21], #8
     64c:	add	x0, sp, #0x1e0
     650:	mov	x1, x19
     654:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     658:	add	x1, sp, #0x1e0
     65c:	mov	x0, x20
     660:	bl	2bd4 <_ZL11splitAroundPN4llvm11InstructionERKNS_5TwineE>
     664:	subs	x22, x22, #0x8
     668:	b.ne	648 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3f8>  // b.any
     66c:	adrp	x8, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     670:	ldr	d8, [x8]
     674:	add	x8, sp, #0xc0
     678:	add	x8, x8, #0x10
     67c:	str	x8, [sp, #192]
     680:	ldr	x8, [sp, #48]
     684:	str	d8, [sp, #200]
     688:	ldr	x19, [x8, #80]
     68c:	add	x20, x8, #0x48
     690:	str	x20, [sp, #56]
     694:	cmp	x20, x19
     698:	b.eq	eb8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xc68>  // b.none
     69c:	ldrb	w8, [x19]
     6a0:	tbnz	w8, #2, 28ac <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x265c>
     6a4:	sub	x8, x19, #0x18
     6a8:	cmp	x19, #0x0
     6ac:	csel	x20, xzr, x8, eq  // eq = none
     6b0:	add	x0, x20, #0x28
     6b4:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     6b8:	ldrb	w8, [x0, #16]
     6bc:	cmp	w8, #0x4f
     6c0:	b.ne	6e0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x490>  // b.any
     6c4:	ldr	w8, [x0, #20]
     6c8:	tst	w8, #0xffffffe
     6cc:	b.eq	6e0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x490>  // b.none
     6d0:	add	x0, sp, #0xc0
     6d4:	add	x1, sp, #0x1e0
     6d8:	str	x20, [sp, #480]
     6dc:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     6e0:	ldr	x19, [x19, #8]
     6e4:	ldr	x20, [sp, #56]
     6e8:	cmp	x20, x19
     6ec:	b.ne	69c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x44c>  // b.any
     6f0:	ldr	w8, [sp, #200]
     6f4:	ldr	x21, [sp, #192]
     6f8:	cbz	w8, ea0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xc50>
     6fc:	add	x8, x21, x8, lsl #3
     700:	str	x8, [sp, #8]
     704:	add	x8, sp, #0x1e0
     708:	mov	w24, #0x18                  	// #24
     70c:	add	x8, x8, #0x10
     710:	str	x8, [sp, #40]
     714:	ldr	x25, [x21]
     718:	mov	x0, x25
     71c:	bl	0 <_ZNK4llvm10BasicBlock14getFirstNonPHIEv>
     720:	mov	x20, x0
     724:	cbz	x0, 78c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x53c>
     728:	ldrb	w8, [x20, #16]
     72c:	cmp	w8, #0x5a
     730:	b.ne	794 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x544>  // b.any
     734:	ldr	x19, [x20]
     738:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     73c:	add	x0, sp, #0x1e0
     740:	add	x1, x1, #0x0
     744:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     748:	mov	w0, #0x40                  	// #64
     74c:	bl	0 <_ZN4llvm4UsernwEm>
     750:	add	x3, sp, #0x1e0
     754:	mov	w2, #0x1                   	// #1
     758:	mov	w8, #0x1                   	// #1
     75c:	mov	x1, x19
     760:	mov	x4, x20
     764:	mov	x27, x0
     768:	str	w8, [sp, #24]
     76c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     770:	mov	x0, x27
     774:	mov	x1, x20
     778:	bl	0 <_ZN4llvm5Value8takeNameEPS0_>
     77c:	mov	x0, x20
     780:	mov	x1, x27
     784:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
     788:	b	7a0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x550>
     78c:	str	wzr, [sp, #24]
     790:	b	79c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x54c>
     794:	str	wzr, [sp, #24]
     798:	mov	x20, xzr
     79c:	mov	x27, xzr
     7a0:	mov	x0, x25
     7a4:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
     7a8:	ldr	x8, [x25, #8]
     7ac:	str	x21, [sp, #32]
     7b0:	str	x20, [sp, #64]
     7b4:	stur	x8, [x29, #-208]
     7b8:	cbz	x8, 7f4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x5a4>
     7bc:	sub	x0, x29, #0xd0
     7c0:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     7c4:	cbz	x0, 295c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x270c>
     7c8:	ldrb	w8, [x0, #16]
     7cc:	cmp	w8, #0x18
     7d0:	b.cc	7e0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x590>  // b.lo, b.ul, b.last
     7d4:	sub	w8, w8, #0x19
     7d8:	cmp	w8, #0xa
     7dc:	b.ls	7fc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x5ac>  // b.plast
     7e0:	ldur	x8, [x29, #-208]
     7e4:	cbz	x8, 2850 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2600>
     7e8:	ldr	x8, [x8, #8]
     7ec:	stur	x8, [x29, #-208]
     7f0:	cbnz	x8, 7bc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x56c>
     7f4:	mov	x1, xzr
     7f8:	b	800 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x5b0>
     7fc:	ldur	x1, [x29, #-208]
     800:	ldr	x8, [sp, #40]
     804:	add	x0, sp, #0x1e0
     808:	mov	x2, xzr
     80c:	str	d8, [sp, #488]
     810:	str	x8, [sp, #480]
     814:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     818:	ldr	w8, [sp, #488]
     81c:	cbz	w8, e64 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xc14>
     820:	ldr	x26, [sp, #480]
     824:	str	x25, [x29, #8]
     828:	add	x8, x26, x8, lsl #3
     82c:	str	x8, [sp, #80]
     830:	add	x8, x25, #0x28
     834:	str	x8, [sp, #72]
     838:	ldr	x20, [x26]
     83c:	mov	x0, x25
     840:	bl	0 <_ZNK4llvm10BasicBlock14getFirstNonPHIEv>
     844:	mov	x21, x0
     848:	cbnz	x27, 878 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x628>
     84c:	ldrb	w8, [x21, #16]
     850:	sub	w8, w8, #0x22
     854:	cmp	w8, #0x38
     858:	b.hi	e44 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xbf4>  // b.pmore
     85c:	mov	w9, #0x1                   	// #1
     860:	lsl	x8, x9, x8
     864:	mov	x9, #0x1                   	// #1
     868:	movk	x9, #0x600, lsl #32
     86c:	movk	x9, #0x100, lsl #48
     870:	tst	x8, x9
     874:	b.eq	e44 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xbf4>  // b.none
     878:	mov	x0, x20
     87c:	bl	0 <_ZNK4llvm10BasicBlock10getContextEv>
     880:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     884:	mov	x22, x0
     888:	sub	x0, x29, #0xd0
     88c:	add	x1, x1, #0x0
     890:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     894:	ldr	x23, [x20, #56]
     898:	mov	w0, #0x40                  	// #64
     89c:	bl	0 <_Znwm>
     8a0:	sub	x2, x29, #0xd0
     8a4:	mov	x1, x22
     8a8:	mov	x3, x23
     8ac:	mov	x4, x25
     8b0:	mov	x19, x0
     8b4:	bl	0 <_ZN4llvm10BasicBlockC1ERNS_11LLVMContextERKNS_5TwineEPNS_8FunctionEPS0_>
     8b8:	mov	x0, x20
     8bc:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
     8c0:	cbz	x0, 29ec <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x279c>
     8c4:	ldrb	w8, [x0, #16]
     8c8:	cmp	w8, #0x22
     8cc:	b.eq	928 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x6d8>  // b.none
     8d0:	cmp	w8, #0x20
     8d4:	b.eq	91c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x6cc>  // b.none
     8d8:	cmp	w8, #0x1d
     8dc:	b.ne	2a08 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x27b8>  // b.any
     8e0:	ldr	x8, [x0, #-48]!
     8e4:	cbz	x8, 90c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x6bc>
     8e8:	ldp	x9, x8, [x0, #8]
     8ec:	and	x8, x8, #0xfffffffffffffffc
     8f0:	str	x9, [x8]
     8f4:	ldr	x9, [x0, #8]
     8f8:	cbz	x9, 90c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x6bc>
     8fc:	ldr	x10, [x9, #16]
     900:	and	x10, x10, #0x3
     904:	orr	x8, x10, x8
     908:	str	x8, [x9, #16]
     90c:	add	x1, x19, #0x8
     910:	str	x19, [x0]
     914:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     918:	b	930 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x6e0>
     91c:	mov	x1, x19
     920:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     924:	b	930 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x6e0>
     928:	mov	x1, x19
     92c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     930:	ldr	x23, [x25, #48]
     934:	ldrb	w8, [x23]
     938:	tbnz	w8, #2, 2834 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x25e4>
     93c:	mov	w0, wzr
     940:	sub	x8, x23, #0x18
     944:	cmp	x23, #0x0
     948:	csel	x22, xzr, x8, eq  // eq = none
     94c:	ldrb	w8, [x22, #16]
     950:	cmp	w8, #0x4f
     954:	b.ne	9e4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x794>  // b.any
     958:	cmp	x27, x22
     95c:	b.eq	9e4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x794>  // b.none
     960:	ldr	w8, [x22, #20]
     964:	tbnz	w8, #30, 978 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x728>
     968:	and	x9, x8, #0xfffffff
     96c:	mneg	x9, x9, x24
     970:	add	x9, x22, x9
     974:	b	97c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x72c>
     978:	ldur	x9, [x22, #-8]
     97c:	ldr	w10, [x22, #56]
     980:	madd	x9, x10, x24, x9
     984:	add	x9, x9, w0, uxtw #3
     988:	ldr	x9, [x9, #8]
     98c:	cmp	x9, x20
     990:	b.eq	9ac <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x75c>  // b.none
     994:	mov	x0, x22
     998:	mov	x1, x20
     99c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     9a0:	cmn	w0, #0x1
     9a4:	b.eq	2870 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2620>  // b.none
     9a8:	ldr	w8, [x22, #20]
     9ac:	tbnz	w8, #30, 9c0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x770>
     9b0:	and	w8, w8, #0xfffffff
     9b4:	mneg	x8, x8, x24
     9b8:	add	x8, x22, x8
     9bc:	b	9c4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x774>
     9c0:	ldur	x8, [x22, #-8]
     9c4:	ldr	w9, [x22, #56]
     9c8:	madd	x8, x9, x24, x8
     9cc:	add	x8, x8, w0, uxtw #3
     9d0:	str	x19, [x8, #8]
     9d4:	ldr	x23, [x23, #8]
     9d8:	ldrb	w8, [x23]
     9dc:	tbz	w8, #2, 940 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x6f0>
     9e0:	b	2834 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x25e4>
     9e4:	cbz	x27, a30 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x7e0>
     9e8:	ldr	x0, [sp, #64]
     9ec:	bl	0 <_ZNK4llvm11Instruction5cloneEv>
     9f0:	mov	x21, x0
     9f4:	mov	w0, #0x38                  	// #56
     9f8:	mov	w1, #0x1                   	// #1
     9fc:	bl	0 <_ZN4llvm4UsernwEmj>
     a00:	mov	x1, x25
     a04:	mov	x2, x19
     a08:	mov	x22, x0
     a0c:	bl	0 <_ZN4llvm10BranchInstC1EPNS_10BasicBlockES2_>
     a10:	mov	x0, x21
     a14:	mov	x1, x22
     a18:	bl	0 <_ZN4llvm11Instruction12insertBeforeEPS0_>
     a1c:	mov	x0, x27
     a20:	mov	x1, x21
     a24:	mov	x2, x19
     a28:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     a2c:	b	ab0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x860>
     a30:	cbz	x21, 2a60 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2810>
     a34:	ldrb	w8, [x21, #16]
     a38:	sub	w9, w8, #0x4b
     a3c:	cmp	w9, #0x1
     a40:	b.ls	a5c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x80c>  // b.plast
     a44:	cmp	w8, #0x22
     a48:	b.ne	2a7c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x282c>  // b.any
     a4c:	mov	x0, x21
     a50:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     a54:	mov	x21, x0
     a58:	b	a60 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x810>
     a5c:	ldur	x21, [x21, #-24]
     a60:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     a64:	sub	x0, x29, #0xd0
     a68:	add	x1, x1, #0x0
     a6c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     a70:	mov	w0, #0x38                  	// #56
     a74:	mov	w1, #0x1                   	// #1
     a78:	bl	0 <_ZN4llvm4UsernwEmj>
     a7c:	sub	x6, x29, #0xd0
     a80:	mov	w1, #0x33                  	// #51
     a84:	mov	w5, #0x1                   	// #1
     a88:	mov	x2, x21
     a8c:	mov	x3, xzr
     a90:	mov	x4, xzr
     a94:	mov	x7, x19
     a98:	mov	x22, x0
     a9c:	bl	0 <_ZN4llvm14FuncletPadInstC2ENS_11Instruction13FuncletPadOpsEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_10BasicBlockE>
     aa0:	mov	x0, x22
     aa4:	mov	x1, x25
     aa8:	mov	x2, x19
     aac:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     ab0:	mov	x0, x25
     ab4:	bl	0 <_ZNK4llvm5Value7getNameEv>
     ab8:	stp	x0, x1, [x29, #-40]
     abc:	sub	x0, x29, #0x58
     ac0:	sub	x1, x29, #0x28
     ac4:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     ac8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     acc:	add	x0, sp, #0x90
     ad0:	add	x1, x1, #0x0
     ad4:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     ad8:	ldurb	w8, [x29, #-72]
     adc:	cbz	w8, afc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x8ac>
     ae0:	ldrb	w9, [sp, #160]
     ae4:	cbz	w9, afc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x8ac>
     ae8:	cmp	w8, #0x1
     aec:	b.ne	b0c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x8bc>  // b.any
     af0:	ldr	q0, [sp, #144]
     af4:	ldr	x8, [sp, #160]
     af8:	b	b20 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x8d0>
     afc:	mov	w8, #0x100                 	// #256
     b00:	stp	xzr, xzr, [sp, #400]
     b04:	strh	w8, [sp, #416]
     b08:	b	b68 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x918>
     b0c:	cmp	w9, #0x1
     b10:	b.ne	b2c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x8dc>  // b.any
     b14:	sub	x8, x29, #0x58
     b18:	ldr	q0, [x8]
     b1c:	ldur	x8, [x29, #-72]
     b20:	str	q0, [sp, #400]
     b24:	str	x8, [sp, #416]
     b28:	b	b68 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x918>
     b2c:	ldurb	w10, [x29, #-71]
     b30:	ldur	x11, [x29, #-88]
     b34:	ldrb	w12, [sp, #161]
     b38:	ldr	x13, [sp, #144]
     b3c:	cmp	w10, #0x1
     b40:	mov	w10, #0x2                   	// #2
     b44:	csel	w2, w8, w10, eq  // eq = none
     b48:	sub	x8, x29, #0x58
     b4c:	csel	x1, x11, x8, eq  // eq = none
     b50:	cmp	w12, #0x1
     b54:	add	x8, sp, #0x90
     b58:	csel	w4, w9, w10, eq  // eq = none
     b5c:	csel	x3, x13, x8, eq  // eq = none
     b60:	add	x0, sp, #0x190
     b64:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     b68:	mov	x0, x20
     b6c:	bl	0 <_ZNK4llvm5Value7getNameEv>
     b70:	stp	x0, x1, [x29, #-224]
     b74:	add	x0, sp, #0x60
     b78:	sub	x1, x29, #0xe0
     b7c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     b80:	ldrb	w8, [sp, #416]
     b84:	cbz	w8, ba4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x954>
     b88:	ldrb	w9, [sp, #112]
     b8c:	cbz	w9, ba4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x954>
     b90:	cmp	w8, #0x1
     b94:	b.ne	bb4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x964>  // b.any
     b98:	ldr	q0, [sp, #96]
     b9c:	ldr	x8, [sp, #112]
     ba0:	b	bc4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x974>
     ba4:	mov	w8, #0x100                 	// #256
     ba8:	stp	xzr, xzr, [x29, #-208]
     bac:	sturh	w8, [x29, #-192]
     bb0:	b	c0c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x9bc>
     bb4:	cmp	w9, #0x1
     bb8:	b.ne	bd0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x980>  // b.any
     bbc:	ldr	q0, [sp, #400]
     bc0:	ldr	x8, [sp, #416]
     bc4:	stur	q0, [x29, #-208]
     bc8:	stur	x8, [x29, #-192]
     bcc:	b	c0c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x9bc>
     bd0:	ldrb	w10, [sp, #417]
     bd4:	ldr	x11, [sp, #400]
     bd8:	ldrb	w12, [sp, #113]
     bdc:	ldr	x13, [sp, #96]
     be0:	cmp	w10, #0x1
     be4:	mov	w10, #0x2                   	// #2
     be8:	csel	w2, w8, w10, eq  // eq = none
     bec:	add	x8, sp, #0x190
     bf0:	csel	x1, x11, x8, eq  // eq = none
     bf4:	cmp	w12, #0x1
     bf8:	add	x8, sp, #0x60
     bfc:	csel	w4, w9, w10, eq  // eq = none
     c00:	csel	x3, x13, x8, eq  // eq = none
     c04:	sub	x0, x29, #0xd0
     c08:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     c0c:	sub	x1, x29, #0xd0
     c10:	mov	x0, x19
     c14:	str	x26, [sp, #88]
     c18:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
     c1c:	ldr	x0, [sp, #72]
     c20:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     c24:	ldrb	w8, [x0, #16]
     c28:	cmp	w8, #0x4f
     c2c:	b.ne	2978 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2728>  // b.any
     c30:	mov	x23, x0
     c34:	add	x21, x19, #0x28
     c38:	mov	x0, x23
     c3c:	mov	x1, x19
     c40:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     c44:	mov	w22, w0
     c48:	mov	x0, x23
     c4c:	mov	w1, w22
     c50:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     c54:	ldr	x28, [x0]
     c58:	mov	x26, x0
     c5c:	bl	0 <_ZNK4llvm5Value7getNameEv>
     c60:	stp	x0, x1, [x29, #-40]
     c64:	sub	x0, x29, #0x58
     c68:	sub	x1, x29, #0x28
     c6c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     c70:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     c74:	add	x0, sp, #0x90
     c78:	add	x1, x1, #0x0
     c7c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     c80:	ldurb	w8, [x29, #-72]
     c84:	cbz	w8, ca4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xa54>
     c88:	ldrb	w9, [sp, #160]
     c8c:	cbz	w9, ca4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xa54>
     c90:	cmp	w8, #0x1
     c94:	b.ne	cb4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xa64>  // b.any
     c98:	ldr	q0, [sp, #144]
     c9c:	ldr	x8, [sp, #160]
     ca0:	b	cc8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xa78>
     ca4:	mov	w8, #0x100                 	// #256
     ca8:	stp	xzr, xzr, [sp, #400]
     cac:	strh	w8, [sp, #416]
     cb0:	b	d10 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xac0>
     cb4:	cmp	w9, #0x1
     cb8:	b.ne	cd4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xa84>  // b.any
     cbc:	sub	x8, x29, #0x58
     cc0:	ldr	q0, [x8]
     cc4:	ldur	x8, [x29, #-72]
     cc8:	str	q0, [sp, #400]
     ccc:	str	x8, [sp, #416]
     cd0:	b	d10 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xac0>
     cd4:	ldurb	w10, [x29, #-71]
     cd8:	ldur	x11, [x29, #-88]
     cdc:	ldrb	w12, [sp, #161]
     ce0:	ldr	x13, [sp, #144]
     ce4:	cmp	w10, #0x1
     ce8:	mov	w10, #0x2                   	// #2
     cec:	csel	w2, w8, w10, eq  // eq = none
     cf0:	sub	x8, x29, #0x58
     cf4:	csel	x1, x11, x8, eq  // eq = none
     cf8:	cmp	w12, #0x1
     cfc:	add	x8, sp, #0x90
     d00:	csel	w4, w9, w10, eq  // eq = none
     d04:	csel	x3, x13, x8, eq  // eq = none
     d08:	add	x0, sp, #0x190
     d0c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     d10:	mov	x0, x25
     d14:	bl	0 <_ZNK4llvm5Value7getNameEv>
     d18:	stp	x0, x1, [x29, #-224]
     d1c:	add	x0, sp, #0x60
     d20:	sub	x1, x29, #0xe0
     d24:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     d28:	ldrb	w8, [sp, #416]
     d2c:	cbz	w8, d4c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xafc>
     d30:	ldrb	w9, [sp, #112]
     d34:	cbz	w9, d4c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xafc>
     d38:	cmp	w8, #0x1
     d3c:	b.ne	d5c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xb0c>  // b.any
     d40:	ldr	q0, [sp, #96]
     d44:	ldr	x8, [sp, #112]
     d48:	b	d6c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xb1c>
     d4c:	mov	w8, #0x100                 	// #256
     d50:	stp	xzr, xzr, [x29, #-208]
     d54:	sturh	w8, [x29, #-192]
     d58:	b	db4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xb64>
     d5c:	cmp	w9, #0x1
     d60:	b.ne	d78 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xb28>  // b.any
     d64:	ldr	q0, [sp, #400]
     d68:	ldr	x8, [sp, #416]
     d6c:	stur	q0, [x29, #-208]
     d70:	stur	x8, [x29, #-192]
     d74:	b	db4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xb64>
     d78:	ldrb	w10, [sp, #417]
     d7c:	ldr	x11, [sp, #400]
     d80:	ldrb	w12, [sp, #113]
     d84:	ldr	x13, [sp, #96]
     d88:	cmp	w10, #0x1
     d8c:	mov	w10, #0x2                   	// #2
     d90:	csel	w2, w8, w10, eq  // eq = none
     d94:	add	x8, sp, #0x190
     d98:	csel	x1, x11, x8, eq  // eq = none
     d9c:	cmp	w12, #0x1
     da0:	add	x8, sp, #0x60
     da4:	csel	w4, w9, w10, eq  // eq = none
     da8:	csel	x3, x13, x8, eq  // eq = none
     dac:	sub	x0, x29, #0xd0
     db0:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     db4:	mov	x0, x21
     db8:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     dbc:	mov	x24, x0
     dc0:	mov	w0, #0x40                  	// #64
     dc4:	bl	0 <_ZN4llvm4UsernwEm>
     dc8:	sub	x3, x29, #0xd0
     dcc:	mov	w2, #0x1                   	// #1
     dd0:	mov	x1, x28
     dd4:	mov	x4, x24
     dd8:	mov	x25, x0
     ddc:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     de0:	mov	x0, x25
     de4:	mov	x1, x26
     de8:	mov	x2, x20
     dec:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     df0:	mov	x0, x23
     df4:	mov	w1, w22
     df8:	mov	x2, x25
     dfc:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     e00:	ldr	x8, [x23, #40]
     e04:	mov	x1, x23
     e08:	add	x0, x8, #0x28
     e0c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     e10:	cbz	x0, 27f4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x25a4>
     e14:	ldrb	w8, [x0, #16]
     e18:	ldr	x25, [x29, #8]
     e1c:	cmp	w8, #0x4f
     e20:	csel	x23, x0, xzr, eq  // eq = none
     e24:	cmp	x23, x27
     e28:	b.ne	c38 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x9e8>  // b.any
     e2c:	ldp	x8, x26, [sp, #80]
     e30:	mov	w24, #0x18                  	// #24
     e34:	add	x26, x26, #0x8
     e38:	cmp	x26, x8
     e3c:	b.ne	838 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x5e8>  // b.any
     e40:	b	e64 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xc14>
     e44:	mov	x0, x20
     e48:	mov	x1, x25
     e4c:	mov	x2, xzr
     e50:	mov	x3, xzr
     e54:	mov	x4, xzr
     e58:	bl	0 <_ZN4llvm9SplitEdgeEPNS_10BasicBlockES1_PNS_13DominatorTreeEPNS_8LoopInfoEPNS_16MemorySSAUpdaterE>
     e5c:	mov	x19, x0
     e60:	b	ab0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x860>
     e64:	ldr	w8, [sp, #24]
     e68:	tbz	w8, #0, e74 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xc24>
     e6c:	ldr	x0, [sp, #64]
     e70:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
     e74:	ldr	x0, [sp, #480]
     e78:	ldp	x21, x8, [sp, #32]
     e7c:	ldr	x20, [sp, #56]
     e80:	cmp	x0, x8
     e84:	b.eq	e8c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xc3c>  // b.none
     e88:	bl	0 <free>
     e8c:	ldr	x8, [sp, #8]
     e90:	add	x21, x21, #0x8
     e94:	cmp	x21, x8
     e98:	b.ne	714 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x4c4>  // b.any
     e9c:	ldr	x21, [sp, #192]
     ea0:	add	x8, sp, #0xc0
     ea4:	add	x8, x8, #0x10
     ea8:	cmp	x21, x8
     eac:	b.eq	eb8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xc68>  // b.none
     eb0:	mov	x0, x21
     eb4:	bl	0 <free>
     eb8:	adrp	x8, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     ebc:	add	x21, sp, #0x1e0
     ec0:	ldr	d10, [x8]
     ec4:	add	x8, x21, #0x10
     ec8:	str	x8, [sp, #480]
     ecc:	ldr	x8, [sp, #48]
     ed0:	str	d10, [sp, #488]
     ed4:	ldr	x19, [x8, #80]
     ed8:	cmp	x20, x19
     edc:	b.eq	f4c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xcfc>  // b.none
     ee0:	ldrb	w8, [x19]
     ee4:	tbnz	w8, #2, 28ac <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x265c>
     ee8:	sub	x8, x19, #0x18
     eec:	cmp	x19, #0x0
     ef0:	csel	x8, xzr, x8, eq  // eq = none
     ef4:	add	x0, sp, #0x1e0
     ef8:	add	x1, sp, #0xc0
     efc:	str	x8, [sp, #192]
     f00:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     f04:	ldr	x19, [x19, #8]
     f08:	cmp	x20, x19
     f0c:	b.ne	ee0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xc90>  // b.any
     f10:	ldr	w8, [sp, #488]
     f14:	cbz	w8, f4c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xcfc>
     f18:	ldr	x19, [sp, #480]
     f1c:	clz	x9, x8
     f20:	mov	w10, #0x7e                  	// #126
     f24:	sub	x2, x10, x9, lsl #1
     f28:	add	x20, x19, x8, lsl #3
     f2c:	mov	x0, x19
     f30:	mov	x1, x20
     f34:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     f38:	mov	x0, x19
     f3c:	mov	x1, x20
     f40:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     f44:	ldr	w23, [sp, #488]
     f48:	b	f50 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xd00>
     f4c:	mov	w23, wzr
     f50:	add	x22, x21, #0x120
     f54:	mov	w8, w23
     f58:	str	d10, [sp, #760]
     f5c:	str	x22, [sp, #752]
     f60:	str	x8, [sp, #64]
     f64:	cbz	w23, 1144 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xef4>
     f68:	cmp	w23, #0x21
     f6c:	b.cc	fac <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xd5c>  // b.lo, b.ul, b.last
     f70:	ldr	x10, [sp, #64]
     f74:	mov	w8, #0x40                  	// #64
     f78:	mov	w9, #0xffffffff            	// #-1
     f7c:	cmp	x10, #0x40
     f80:	csel	x8, x10, x8, hi  // hi = pmore
     f84:	cmp	x8, x9
     f88:	csel	x20, x8, x9, cc  // cc = lo, ul, last
     f8c:	mov	w8, #0x38                  	// #56
     f90:	mul	x0, x20, x8
     f94:	bl	0 <malloc>
     f98:	cbz	x0, fbc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xd6c>
     f9c:	mov	x19, x0
     fa0:	mov	x8, xzr
     fa4:	mov	x0, x22
     fa8:	b	1048 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xdf8>
     fac:	mov	x8, xzr
     fb0:	mov	w20, #0x20                  	// #32
     fb4:	mov	x19, x22
     fb8:	b	1070 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xe20>
     fbc:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     fc0:	add	x0, x0, #0x0
     fc4:	mov	w1, #0x1                   	// #1
     fc8:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
     fcc:	ldr	w9, [sp, #760]
     fd0:	ldr	x0, [sp, #752]
     fd4:	cbz	w9, 1040 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xdf0>
     fd8:	mov	w10, #0x38                  	// #56
     fdc:	mov	x8, xzr
     fe0:	madd	x9, x9, x10, x0
     fe4:	mov	x10, x0
     fe8:	ldr	q0, [x0, x8]
     fec:	str	q0, [x8]
     ff0:	ldr	w11, [x10, #16]
     ff4:	str	w11, [x8, #16]
     ff8:	ldur	q0, [x10, #24]
     ffc:	stp	xzr, xzr, [x10]
    1000:	str	wzr, [x10, #16]
    1004:	stur	q0, [x8, #24]
    1008:	ldr	w11, [x10, #40]
    100c:	str	w11, [x8, #40]
    1010:	ldrh	w11, [x10, #48]
    1014:	stp	xzr, xzr, [x10, #24]
    1018:	str	wzr, [x10, #40]
    101c:	add	x10, x10, #0x38
    1020:	cmp	x10, x9
    1024:	strh	w11, [x8, #48]
    1028:	add	x8, x8, #0x38
    102c:	b.ne	fe8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xd98>  // b.any
    1030:	ldr	x0, [sp, #752]
    1034:	ldr	w8, [sp, #760]
    1038:	mov	x19, xzr
    103c:	b	1048 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xdf8>
    1040:	mov	x19, xzr
    1044:	mov	x8, xzr
    1048:	mov	w9, #0x38                  	// #56
    104c:	madd	x1, x8, x9, x0
    1050:	bl	4598 <_ZN4llvm23SmallVectorTemplateBaseIN12_GLOBAL__N_119SuspendCrossingInfo9BlockDataELb0EE13destroy_rangeEPS3_S5_>
    1054:	ldr	x0, [sp, #752]
    1058:	cmp	x0, x22
    105c:	b.eq	1064 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xe14>  // b.none
    1060:	bl	0 <free>
    1064:	ldr	w8, [sp, #760]
    1068:	str	x19, [sp, #752]
    106c:	str	w20, [sp, #764]
    1070:	ldr	x9, [sp, #64]
    1074:	cmp	x8, x9
    1078:	b.eq	10c0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xe70>  // b.none
    107c:	ldr	x10, [sp, #64]
    1080:	mov	w9, #0x38                  	// #56
    1084:	mov	x11, #0x2493                	// #9363
    1088:	movk	x11, #0x9249, lsl #16
    108c:	sub	x10, x10, x8
    1090:	madd	x0, x8, x9, x19
    1094:	mul	x8, x10, x9
    1098:	movk	x11, #0x4924, lsl #32
    109c:	sub	x8, x8, #0x38
    10a0:	movk	x11, #0x2492, lsl #48
    10a4:	lsr	x8, x8, #3
    10a8:	umulh	x8, x8, x11
    10ac:	orr	x10, xzr, #0x38
    10b0:	madd	x2, x8, x9, x10
    10b4:	mov	w1, wzr
    10b8:	bl	0 <memset>
    10bc:	ldr	w20, [sp, #764]
    10c0:	cmp	w20, w23
    10c4:	b.cc	2a20 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x27d0>  // b.lo, b.ul, b.last
    10c8:	mov	x19, xzr
    10cc:	mov	w22, #0x38                  	// #56
    10d0:	str	w23, [sp, #760]
    10d4:	ldr	x8, [sp, #752]
    10d8:	mov	w1, w23
    10dc:	mov	w2, wzr
    10e0:	madd	x20, x19, x22, x8
    10e4:	mov	x0, x20
    10e8:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    10ec:	add	x0, x20, #0x18
    10f0:	mov	w1, w23
    10f4:	mov	w2, wzr
    10f8:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    10fc:	mov	x0, x20
    1100:	mov	w1, w19
    1104:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1108:	ldr	x8, [sp, #64]
    110c:	add	x19, x19, #0x1
    1110:	cmp	x19, x8
    1114:	b.eq	1144 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xef4>  // b.none
    1118:	ldr	w8, [sp, #760]
    111c:	cmp	x19, x8
    1120:	b.cc	10d4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xe84>  // b.lo, b.ul, b.last
    1124:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1128:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    112c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1130:	add	x0, x0, #0x0
    1134:	add	x1, x1, #0x0
    1138:	add	x3, x3, #0x0
    113c:	mov	w2, #0x95                  	// #149
    1140:	bl	0 <__assert_fail>
    1144:	ldr	x8, [sp, #16]
    1148:	str	w23, [sp, #40]
    114c:	ldr	w8, [x8, #16]
    1150:	cbz	w8, 1180 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xf30>
    1154:	ldr	x9, [sp, #16]
    1158:	lsl	x20, x8, #3
    115c:	mov	w22, #0x1                   	// #1
    1160:	ldr	x19, [x9, #8]
    1164:	ldr	x8, [x19], #8
    1168:	add	x0, sp, #0x1e0
    116c:	ldr	x1, [x8, #40]
    1170:	bl	44a4 <_ZN12_GLOBAL__N_119SuspendCrossingInfo12getBlockDataEPN4llvm10BasicBlockE>
    1174:	subs	x20, x20, #0x8
    1178:	strb	w22, [x0, #49]
    117c:	b.ne	1164 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xf14>  // b.any
    1180:	ldr	x8, [sp, #16]
    1184:	ldr	w8, [x8, #96]
    1188:	cbz	w8, 1214 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xfc4>
    118c:	ldr	x9, [sp, #16]
    1190:	lsl	x22, x8, #3
    1194:	mov	w23, #0x1                   	// #1
    1198:	ldr	x20, [x9, #88]
    119c:	ldr	x19, [x20]
    11a0:	add	x0, sp, #0x1e0
    11a4:	ldr	x1, [x19, #40]
    11a8:	bl	44a4 <_ZN12_GLOBAL__N_119SuspendCrossingInfo12getBlockDataEPN4llvm10BasicBlockE>
    11ac:	mov	x1, x0
    11b0:	strb	w23, [x0, #48]
    11b4:	add	x0, x0, #0x18
    11b8:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    11bc:	add	x0, sp, #0xc0
    11c0:	str	x19, [sp, #192]
    11c4:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    11c8:	tbz	w0, #0, 1208 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xfb8>
    11cc:	add	x0, sp, #0xc0
    11d0:	str	x19, [sp, #192]
    11d4:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    11d8:	tbz	w0, #0, 2ac0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2870>
    11dc:	cbz	x19, 1208 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xfb8>
    11e0:	mov	x0, x19
    11e4:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    11e8:	cbz	x0, 1208 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xfb8>
    11ec:	ldr	x1, [x0, #40]
    11f0:	add	x0, sp, #0x1e0
    11f4:	bl	44a4 <_ZN12_GLOBAL__N_119SuspendCrossingInfo12getBlockDataEPN4llvm10BasicBlockE>
    11f8:	mov	x1, x0
    11fc:	strb	w23, [x0, #48]
    1200:	add	x0, x0, #0x18
    1204:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1208:	subs	x22, x22, #0x8
    120c:	add	x20, x20, #0x8
    1210:	b.ne	119c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xf4c>  // b.any
    1214:	add	x8, x21, #0x110
    1218:	stp	x8, xzr, [sp, #24]
    121c:	adrp	x23, 0 <_ZN4llvm9DebugFlagE>
    1220:	ldr	x23, [x23]
    1224:	ldrb	w8, [x23]
    1228:	cbz	w8, 1300 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x10b0>
    122c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1230:	add	x0, x0, #0x0
    1234:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    1238:	tbz	w0, #0, 129c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x104c>
    123c:	bl	0 <_ZN4llvm4dbgsEv>
    1240:	ldp	x9, x8, [x0, #16]
    1244:	sub	x9, x9, x8
    1248:	cmp	x9, #0x9
    124c:	b.hi	1264 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1014>  // b.pmore
    1250:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1254:	mov	w2, #0xa                   	// #10
    1258:	add	x1, x1, #0x0
    125c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1260:	b	1288 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1038>
    1264:	adrp	x9, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1268:	add	x9, x9, #0x0
    126c:	ldr	x9, [x9]
    1270:	mov	w10, #0x206e                	// #8302
    1274:	strh	w10, [x8, #8]
    1278:	str	x9, [x8]
    127c:	ldr	x8, [x0, #24]
    1280:	add	x8, x8, #0xa
    1284:	str	x8, [x0, #24]
    1288:	ldr	x8, [sp, #32]
    128c:	add	w8, w8, #0x1
    1290:	sxtw	x1, w8
    1294:	str	x8, [sp, #32]
    1298:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    129c:	ldrb	w8, [x23]
    12a0:	cbz	w8, 1300 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x10b0>
    12a4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    12a8:	add	x0, x0, #0x0
    12ac:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    12b0:	tbz	w0, #0, 1300 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x10b0>
    12b4:	bl	0 <_ZN4llvm4dbgsEv>
    12b8:	ldp	x9, x8, [x0, #16]
    12bc:	sub	x9, x9, x8
    12c0:	cmp	x9, #0xe
    12c4:	b.hi	12dc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x108c>  // b.pmore
    12c8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    12cc:	mov	w2, #0xf                   	// #15
    12d0:	add	x1, x1, #0x0
    12d4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    12d8:	b	1300 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x10b0>
    12dc:	adrp	x10, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    12e0:	add	x10, x10, #0x0
    12e4:	ldur	x9, [x10, #7]
    12e8:	ldr	x10, [x10]
    12ec:	stur	x9, [x8, #7]
    12f0:	str	x10, [x8]
    12f4:	ldr	x8, [x0, #24]
    12f8:	add	x8, x8, #0xf
    12fc:	str	x8, [x0, #24]
    1300:	ldr	w8, [sp, #40]
    1304:	cbz	w8, 17bc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x156c>
    1308:	mov	w20, wzr
    130c:	mov	x24, xzr
    1310:	ldr	w8, [sp, #760]
    1314:	cmp	x24, x8
    1318:	b.cs	1124 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xed4>  // b.hs, b.nlast
    131c:	cbz	w8, 28e8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2698>
    1320:	ldr	w8, [sp, #488]
    1324:	mov	w19, #0x38                  	// #56
    1328:	cmp	w8, w24
    132c:	b.ls	2904 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x26b4>  // b.plast
    1330:	ldr	x8, [sp, #480]
    1334:	ldr	x22, [sp, #752]
    1338:	ldr	x0, [x8, x24, lsl #3]
    133c:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
    1340:	str	x24, [sp, #72]
    1344:	cbz	x0, 17a8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1558>
    1348:	mov	x21, x0
    134c:	bl	0 <_ZNK4llvm11Instruction16getNumSuccessorsEv>
    1350:	cbz	w0, 17a8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1558>
    1354:	madd	x28, x24, x19, x22
    1358:	add	x8, x28, #0x18
    135c:	str	x8, [x29, #8]
    1360:	add	x8, x28, #0x30
    1364:	mov	x26, xzr
    1368:	str	x8, [sp, #88]
    136c:	mov	w8, w0
    1370:	str	x8, [sp, #80]
    1374:	mov	x0, x21
    1378:	mov	w1, w26
    137c:	bl	0 <_ZNK4llvm11Instruction12getSuccessorEj>
    1380:	mov	x22, x0
    1384:	add	x0, sp, #0x1e0
    1388:	mov	x1, x22
    138c:	bl	44fc <_ZNK12_GLOBAL__N_119BlockToIndexMapping12blockToIndexEPN4llvm10BasicBlockE>
    1390:	ldr	w8, [sp, #760]
    1394:	cmp	x0, x8
    1398:	b.cs	1124 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xed4>  // b.hs, b.nlast
    139c:	ldr	x25, [sp, #752]
    13a0:	mov	x23, x0
    13a4:	madd	x27, x0, x19, x25
    13a8:	add	x0, sp, #0xc0
    13ac:	mov	x1, x27
    13b0:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    13b4:	add	x24, x27, #0x18
    13b8:	sub	x0, x29, #0xd0
    13bc:	mov	x1, x24
    13c0:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    13c4:	mov	x0, x27
    13c8:	mov	x1, x28
    13cc:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    13d0:	ldr	x1, [x29, #8]
    13d4:	mov	x0, x24
    13d8:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    13dc:	ldr	x8, [sp, #88]
    13e0:	ldrb	w8, [x8]
    13e4:	cbz	w8, 13f4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x11a4>
    13e8:	mov	x0, x24
    13ec:	mov	x1, x28
    13f0:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    13f4:	mov	w9, #0x38                  	// #56
    13f8:	madd	x8, x23, x9, x25
    13fc:	ldrb	w8, [x8, #48]
    1400:	cbz	w8, 1494 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1244>
    1404:	mov	x0, x24
    1408:	mov	x1, x27
    140c:	mov	w19, #0x38                  	// #56
    1410:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1414:	sub	x1, x29, #0xd0
    1418:	mov	x0, x24
    141c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1420:	adrp	x23, 0 <_ZN4llvm9DebugFlagE>
    1424:	ldr	x23, [x23]
    1428:	tbz	w0, #0, 1440 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x11f0>
    142c:	add	x1, sp, #0xc0
    1430:	mov	x0, x27
    1434:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1438:	eor	w25, w0, #0x1
    143c:	b	1444 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x11f4>
    1440:	mov	w25, #0x1                   	// #1
    1444:	sub	x1, x29, #0xd0
    1448:	mov	x0, x24
    144c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1450:	tbnz	w0, #0, 1614 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x13c4>
    1454:	ldrb	w8, [x23]
    1458:	cbz	w8, 1614 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x13c4>
    145c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1460:	add	x0, x0, #0x0
    1464:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    1468:	tbz	w0, #0, 15b4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1364>
    146c:	bl	0 <_ZN4llvm4dbgsEv>
    1470:	ldp	x9, x8, [x0, #16]
    1474:	sub	x9, x9, x8
    1478:	cmp	x9, #0x6
    147c:	b.hi	14d8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1288>  // b.pmore
    1480:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1484:	mov	w2, #0x7                   	// #7
    1488:	add	x1, x1, #0x0
    148c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1490:	b	14fc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x12ac>
    1494:	madd	x8, x23, x9, x25
    1498:	ldrb	w8, [x8, #49]
    149c:	cbz	w8, 14c4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1274>
    14a0:	madd	x8, x23, x9, x25
    14a4:	ldr	x8, [x8, #32]
    14a8:	mov	w19, #0x38                  	// #56
    14ac:	cbz	x8, 1414 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x11c4>
    14b0:	ldr	x0, [x24]
    14b4:	lsl	x2, x8, #3
    14b8:	mov	w1, wzr
    14bc:	bl	0 <memset>
    14c0:	b	1414 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x11c4>
    14c4:	mov	x0, x24
    14c8:	mov	w1, w23
    14cc:	mov	w19, #0x38                  	// #56
    14d0:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    14d4:	b	1414 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x11c4>
    14d8:	mov	w9, #0x636f                	// #25455
    14dc:	movk	w9, #0x206b, lsl #16
    14e0:	stur	w9, [x8, #3]
    14e4:	mov	w9, #0x620a                	// #25098
    14e8:	movk	w9, #0x6f6c, lsl #16
    14ec:	str	w9, [x8]
    14f0:	ldr	x8, [x0, #24]
    14f4:	add	x8, x8, #0x7
    14f8:	str	x8, [x0, #24]
    14fc:	ldr	x1, [sp, #72]
    1500:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1504:	ldp	x9, x8, [x0, #16]
    1508:	mov	x23, x0
    150c:	sub	x9, x9, x8
    1510:	cmp	x9, #0x9
    1514:	b.hi	1534 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x12e4>  // b.pmore
    1518:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    151c:	mov	w2, #0xa                   	// #10
    1520:	mov	x0, x23
    1524:	add	x1, x1, #0x0
    1528:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    152c:	mov	x23, x0
    1530:	b	1558 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1308>
    1534:	adrp	x9, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1538:	add	x9, x9, #0x0
    153c:	ldr	x9, [x9]
    1540:	mov	w10, #0x2072                	// #8306
    1544:	strh	w10, [x8, #8]
    1548:	str	x9, [x8]
    154c:	ldr	x8, [x23, #24]
    1550:	add	x8, x8, #0xa
    1554:	str	x8, [x23, #24]
    1558:	mov	x0, x22
    155c:	bl	0 <_ZNK4llvm5Value7getNameEv>
    1560:	mov	x2, x0
    1564:	mov	x3, x1
    1568:	mov	x0, x23
    156c:	mov	x1, x2
    1570:	mov	x2, x3
    1574:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1578:	ldp	x9, x8, [x0, #16]
    157c:	cmp	x9, x8
    1580:	b.ne	1598 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1348>  // b.any
    1584:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1588:	mov	w2, #0x1                   	// #1
    158c:	add	x1, x1, #0x0
    1590:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1594:	b	15ac <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x135c>
    1598:	mov	w9, #0xa                   	// #10
    159c:	strb	w9, [x8]
    15a0:	ldr	x8, [x0, #24]
    15a4:	add	x8, x8, #0x1
    15a8:	str	x8, [x0, #24]
    15ac:	adrp	x23, 0 <_ZN4llvm9DebugFlagE>
    15b0:	ldr	x23, [x23]
    15b4:	ldrb	w8, [x23]
    15b8:	cbz	w8, 1614 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x13c4>
    15bc:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    15c0:	add	x0, x0, #0x0
    15c4:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    15c8:	tbz	w0, #0, 15e4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1394>
    15cc:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    15d0:	add	x0, sp, #0x1e0
    15d4:	mov	w2, #0x7                   	// #7
    15d8:	add	x1, x1, #0x0
    15dc:	mov	x3, x24
    15e0:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    15e4:	ldrb	w8, [x23]
    15e8:	cbz	w8, 1614 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x13c4>
    15ec:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    15f0:	add	x0, x0, #0x0
    15f4:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    15f8:	tbz	w0, #0, 1614 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x13c4>
    15fc:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1600:	add	x0, sp, #0x1e0
    1604:	sub	x3, x29, #0xd0
    1608:	mov	w2, #0xa                   	// #10
    160c:	add	x1, x1, #0x0
    1610:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1614:	add	x1, sp, #0xc0
    1618:	mov	x0, x27
    161c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1620:	tbnz	w0, #0, 1774 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1524>
    1624:	ldrb	w8, [x23]
    1628:	cbz	w8, 1774 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1524>
    162c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1630:	add	x0, x0, #0x0
    1634:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    1638:	tbz	w0, #0, 1714 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x14c4>
    163c:	bl	0 <_ZN4llvm4dbgsEv>
    1640:	ldp	x9, x8, [x0, #16]
    1644:	sub	x9, x9, x8
    1648:	cmp	x9, #0x6
    164c:	b.hi	1664 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1414>  // b.pmore
    1650:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1654:	mov	w2, #0x7                   	// #7
    1658:	add	x1, x1, #0x0
    165c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1660:	b	1688 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1438>
    1664:	mov	w9, #0x636f                	// #25455
    1668:	movk	w9, #0x206b, lsl #16
    166c:	stur	w9, [x8, #3]
    1670:	mov	w9, #0x620a                	// #25098
    1674:	movk	w9, #0x6f6c, lsl #16
    1678:	str	w9, [x8]
    167c:	ldr	x8, [x0, #24]
    1680:	add	x8, x8, #0x7
    1684:	str	x8, [x0, #24]
    1688:	ldr	x1, [sp, #72]
    168c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1690:	ldp	x9, x8, [x0, #16]
    1694:	sub	x9, x9, x8
    1698:	cmp	x9, #0x9
    169c:	b.hi	16b4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1464>  // b.pmore
    16a0:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    16a4:	mov	w2, #0xa                   	// #10
    16a8:	add	x1, x1, #0x0
    16ac:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    16b0:	b	16d8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1488>
    16b4:	adrp	x9, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    16b8:	add	x9, x9, #0x0
    16bc:	ldr	x9, [x9]
    16c0:	mov	w10, #0x2072                	// #8306
    16c4:	strh	w10, [x8, #8]
    16c8:	str	x9, [x8]
    16cc:	ldr	x8, [x0, #24]
    16d0:	add	x8, x8, #0xa
    16d4:	str	x8, [x0, #24]
    16d8:	mov	x1, x22
    16dc:	bl	0 <_ZN4llvm11raw_ostreamlsEPKv>
    16e0:	ldp	x9, x8, [x0, #16]
    16e4:	cmp	x9, x8
    16e8:	b.ne	1700 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x14b0>  // b.any
    16ec:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    16f0:	mov	w2, #0x1                   	// #1
    16f4:	add	x1, x1, #0x0
    16f8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    16fc:	b	1714 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x14c4>
    1700:	mov	w9, #0xa                   	// #10
    1704:	strb	w9, [x8]
    1708:	ldr	x8, [x0, #24]
    170c:	add	x8, x8, #0x1
    1710:	str	x8, [x0, #24]
    1714:	ldrb	w8, [x23]
    1718:	cbz	w8, 1774 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1524>
    171c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1720:	add	x0, x0, #0x0
    1724:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    1728:	tbz	w0, #0, 1744 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x14f4>
    172c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1730:	add	x0, sp, #0x1e0
    1734:	mov	w2, #0x9                   	// #9
    1738:	add	x1, x1, #0x0
    173c:	mov	x3, x27
    1740:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1744:	ldrb	w8, [x23]
    1748:	cbz	w8, 1774 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1524>
    174c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1750:	add	x0, x0, #0x0
    1754:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    1758:	tbz	w0, #0, 1774 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1524>
    175c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1760:	add	x0, sp, #0x1e0
    1764:	add	x3, sp, #0xc0
    1768:	mov	w2, #0x9                   	// #9
    176c:	add	x1, x1, #0x0
    1770:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1774:	ldur	x0, [x29, #-208]
    1778:	bl	0 <free>
    177c:	ldr	x0, [sp, #192]
    1780:	bl	0 <free>
    1784:	mov	x0, x21
    1788:	bl	0 <_ZNK4llvm11Instruction16getNumSuccessorsEv>
    178c:	cmp	x26, w0, sxtw
    1790:	b.ge	2814 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x25c4>  // b.tcont
    1794:	ldr	x8, [sp, #80]
    1798:	add	x26, x26, #0x1
    179c:	orr	w20, w20, w25
    17a0:	cmp	x8, x26
    17a4:	b.ne	1374 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1124>  // b.any
    17a8:	ldp	x8, x24, [sp, #64]
    17ac:	add	x24, x24, #0x1
    17b0:	cmp	x24, x8
    17b4:	b.ne	1310 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x10c0>  // b.any
    17b8:	tbnz	w20, #0, 1224 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xfd4>
    17bc:	ldrb	w8, [x23]
    17c0:	cbz	w8, 17dc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x158c>
    17c4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    17c8:	add	x0, x0, #0x0
    17cc:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    17d0:	tbz	w0, #0, 17dc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x158c>
    17d4:	add	x0, sp, #0x1e0
    17d8:	bl	fc <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEv>
    17dc:	ldr	x0, [sp, #48]
    17e0:	bl	0 <_ZNK4llvm8Function10getContextEv>
    17e4:	ldr	x20, [sp, #56]
    17e8:	mov	w8, #0x200                 	// #512
    17ec:	add	x10, sp, #0x90
    17f0:	add	x9, sp, #0xc0
    17f4:	add	x11, sp, #0x60
    17f8:	strh	w8, [sp, #444]
    17fc:	add	x8, x10, #0x10
    1800:	adrp	x19, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1804:	mov	w26, wzr
    1808:	mov	w27, #0x18                  	// #24
    180c:	str	x8, [sp, #144]
    1810:	add	x19, x19, #0x0
    1814:	add	x9, x9, #0x10
    1818:	add	x8, x11, #0x10
    181c:	stp	x0, xzr, [sp, #424]
    1820:	str	wzr, [sp, #440]
    1824:	strb	wzr, [sp, #446]
    1828:	stp	xzr, xzr, [sp, #408]
    182c:	str	xzr, [sp, #400]
    1830:	stp	xzr, xzr, [sp, #448]
    1834:	str	d8, [sp, #200]
    1838:	str	d9, [sp, #152]
    183c:	str	d9, [sp, #104]
    1840:	str	x9, [x29, #8]
    1844:	str	x9, [sp, #192]
    1848:	str	x8, [sp, #96]
    184c:	ldr	x1, [sp, #48]
    1850:	sub	x0, x29, #0xd0
    1854:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1858:	ldp	x23, x24, [x29, #-208]
    185c:	ldur	x25, [x29, #-192]
    1860:	cmp	x23, x20
    1864:	cset	w8, ne  // ne = any
    1868:	cmp	x25, #0x0
    186c:	cset	w9, ne  // ne = any
    1870:	cmp	x20, x24
    1874:	b.ne	18dc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x168c>  // b.any
    1878:	and	w8, w8, w9
    187c:	cbz	w8, 1994 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1744>
    1880:	b	18dc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x168c>
    1884:	mov	x0, x22
    1888:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    188c:	ldr	x8, [x22, #8]
    1890:	stur	x8, [x29, #-208]
    1894:	cbz	x8, 1928 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x16d8>
    1898:	sub	x0, x29, #0xd0
    189c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    18a0:	mov	x2, x0
    18a4:	stur	x0, [x29, #-88]
    18a8:	add	x0, sp, #0x1e0
    18ac:	mov	x1, x22
    18b0:	bl	2cc4 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendERN4llvm11InstructionEPNS1_4UserE>
    18b4:	tbz	w0, #0, 18cc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x167c>
    18b8:	add	x0, sp, #0xc0
    18bc:	sub	x1, x29, #0x28
    18c0:	sub	x2, x29, #0x58
    18c4:	stur	x22, [x29, #-40]
    18c8:	bl	2d58 <_ZN4llvm15SmallVectorImplIN12_GLOBAL__N_15SpillEE12emplace_backIJPNS_11InstructionERPNS_4UserEEEERS2_DpOT_>
    18cc:	ldur	x8, [x29, #-208]
    18d0:	cbz	x8, 2850 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2600>
    18d4:	ldr	x8, [x8, #8]
    18d8:	b	1890 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1640>
    18dc:	ldrb	w8, [x25]
    18e0:	tbnz	w8, #2, 2834 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x25e4>
    18e4:	sub	x8, x25, #0x18
    18e8:	cmp	x25, #0x0
    18ec:	csel	x22, xzr, x8, eq  // eq = none
    18f0:	ldrb	w8, [x22, #16]
    18f4:	cmp	w8, #0x51
    18f8:	b.eq	1884 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1634>  // b.none
    18fc:	sub	w9, w8, #0x4d
    1900:	cmp	w9, #0x2
    1904:	b.cc	1884 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1634>  // b.lo, b.ul, b.last
    1908:	sub	w9, w8, #0x25
    190c:	cmp	w9, #0x12
    1910:	b.cc	1884 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1634>  // b.lo, b.ul, b.last
    1914:	cmp	w8, #0x3a
    1918:	b.eq	1884 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1634>  // b.none
    191c:	sub	w8, w8, #0x3e
    1920:	cmp	w8, #0xc
    1924:	b.ls	1884 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1634>  // b.plast
    1928:	ldrb	w8, [x24]
    192c:	tbnz	w8, #2, 28ac <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x265c>
    1930:	ldr	x25, [x25, #8]
    1934:	sub	x8, x24, #0x18
    1938:	cmp	x24, #0x0
    193c:	csel	x8, xzr, x8, eq  // eq = none
    1940:	add	x8, x8, #0x28
    1944:	cmp	x8, x25
    1948:	b.ne	1974 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1724>  // b.any
    194c:	ldr	x24, [x24, #8]
    1950:	cmp	x23, x24
    1954:	b.eq	1974 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1724>  // b.none
    1958:	ldrb	w8, [x24]
    195c:	tbnz	w8, #2, 28ac <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x265c>
    1960:	sub	x8, x24, #0x18
    1964:	cmp	x24, #0x0
    1968:	csel	x8, xzr, x8, eq  // eq = none
    196c:	ldr	x25, [x8, #48]
    1970:	b	1940 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x16f0>
    1974:	cmp	x23, x20
    1978:	cset	w8, ne  // ne = any
    197c:	cmp	x25, #0x0
    1980:	cset	w9, ne  // ne = any
    1984:	cmp	x20, x24
    1988:	b.ne	18dc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x168c>  // b.any
    198c:	and	w8, w8, w9
    1990:	tbnz	w8, #0, 18dc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x168c>
    1994:	ldr	w8, [sp, #200]
    1998:	cbz	w8, 1ae8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1898>
    199c:	adrp	x9, 0 <_ZN4llvm9DebugFlagE>
    19a0:	ldr	x9, [x9]
    19a4:	ldrb	w9, [x9]
    19a8:	cbz	w9, 19d4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1784>
    19ac:	mov	x0, x19
    19b0:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    19b4:	tbz	w0, #0, 19cc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x177c>
    19b8:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    19bc:	add	x2, sp, #0xc0
    19c0:	mov	w1, #0x10                  	// #16
    19c4:	add	x0, x0, #0x0
    19c8:	bl	2e60 <_ZL4dumpN4llvm9StringRefERKNS_11SmallVectorIN12_GLOBAL__N_15SpillELj8EEE>
    19cc:	ldr	w8, [sp, #200]
    19d0:	cbz	w8, 1ad4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1884>
    19d4:	ldr	x28, [sp, #192]
    19d8:	mov	x20, xzr
    19dc:	mov	x23, xzr
    19e0:	mov	x22, xzr
    19e4:	madd	x21, x8, x27, x28
    19e8:	ldr	x8, [x28]
    19ec:	cmp	x22, x8
    19f0:	b.eq	1a10 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x17c0>  // b.none
    19f4:	cbz	x8, 2994 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2744>
    19f8:	ldrb	w9, [x8, #16]
    19fc:	cmp	w9, #0x17
    1a00:	b.ls	29b0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2760>  // b.plast
    1a04:	mov	x23, xzr
    1a08:	mov	x20, xzr
    1a0c:	mov	x22, x8
    1a10:	ldr	x25, [x28, #8]
    1a14:	ldr	x24, [x25, #40]
    1a18:	cmp	x20, x24
    1a1c:	b.eq	1a80 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1830>  // b.none
    1a20:	cbz	x22, 29d0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2780>
    1a24:	mov	x0, x22
    1a28:	bl	0 <_ZNK4llvm11Instruction5cloneEv>
    1a2c:	mov	x23, x0
    1a30:	mov	x0, x22
    1a34:	bl	0 <_ZNK4llvm5Value7getNameEv>
    1a38:	stp	x0, x1, [x29, #-88]
    1a3c:	sub	x0, x29, #0xd0
    1a40:	sub	x1, x29, #0x58
    1a44:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1a48:	sub	x1, x29, #0xd0
    1a4c:	mov	x0, x23
    1a50:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
    1a54:	mov	x0, x24
    1a58:	bl	0 <_ZNK4llvm10BasicBlock19getFirstInsertionPtEv>
    1a5c:	ldrb	w8, [x0]
    1a60:	tbnz	w8, #2, 2834 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x25e4>
    1a64:	sub	x8, x0, #0x18
    1a68:	cmp	x0, #0x0
    1a6c:	csel	x1, xzr, x8, eq  // eq = none
    1a70:	mov	x0, x23
    1a74:	bl	0 <_ZN4llvm11Instruction12insertBeforeEPS0_>
    1a78:	ldr	x25, [x28, #8]
    1a7c:	mov	x20, x24
    1a80:	cbz	x25, 27f4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x25a4>
    1a84:	ldrb	w8, [x25, #16]
    1a88:	cmp	w8, #0x4f
    1a8c:	b.ne	1ab8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1868>  // b.any
    1a90:	ldr	w8, [x25, #20]
    1a94:	and	w8, w8, #0xfffffff
    1a98:	cmp	w8, #0x1
    1a9c:	b.ne	2a40 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x27f0>  // b.any
    1aa0:	mov	x0, x25
    1aa4:	mov	x1, x23
    1aa8:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    1aac:	mov	x0, x25
    1ab0:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    1ab4:	b	1ac8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1878>
    1ab8:	mov	x0, x25
    1abc:	mov	x1, x22
    1ac0:	mov	x2, x23
    1ac4:	bl	0 <_ZN4llvm4User17replaceUsesOfWithEPNS_5ValueES2_>
    1ac8:	add	x28, x28, #0x18
    1acc:	cmp	x21, x28
    1ad0:	b.ne	19e8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1798>  // b.any
    1ad4:	ldr	x20, [sp, #56]
    1ad8:	add	w26, w26, #0x1
    1adc:	cmp	w26, #0x4
    1ae0:	str	wzr, [sp, #200]
    1ae4:	b.ne	184c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x15fc>  // b.any
    1ae8:	ldr	x0, [sp, #48]
    1aec:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1af0:	cmp	x0, x1
    1af4:	b.eq	1bcc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x197c>  // b.none
    1af8:	mov	x19, x0
    1afc:	mov	x20, x1
    1b00:	mov	w21, #0x18                  	// #24
    1b04:	mov	w23, #0xffffffff            	// #-1
    1b08:	mov	x0, x19
    1b0c:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    1b10:	ldr	x8, [x19, #8]
    1b14:	stur	x8, [x29, #-208]
    1b18:	cbz	x8, 1bc0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1970>
    1b1c:	sub	x0, x29, #0xd0
    1b20:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1b24:	ldr	x8, [x19, #24]
    1b28:	mov	x22, x0
    1b2c:	add	x0, x8, #0x48
    1b30:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1b34:	mov	x1, x0
    1b38:	add	x0, sp, #0x1e0
    1b3c:	mov	x2, x22
    1b40:	bl	45d8 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE>
    1b44:	tbz	w0, #0, 1b94 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1944>
    1b48:	ldp	w8, w9, [sp, #200]
    1b4c:	cmp	w8, w9
    1b50:	b.cs	1ba4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1954>  // b.hs, b.nlast
    1b54:	ldr	x9, [sp, #192]
    1b58:	umaddl	x10, w8, w21, x9
    1b5c:	str	x19, [x10], #8
    1b60:	cbz	x22, 295c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x270c>
    1b64:	ldrb	w11, [x22, #16]
    1b68:	cmp	w11, #0x17
    1b6c:	b.ls	28cc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x267c>  // b.plast
    1b70:	mov	w8, w8
    1b74:	madd	x9, x8, x21, x9
    1b78:	str	x22, [x10]
    1b7c:	str	w23, [x9, #16]
    1b80:	ldr	w9, [sp, #204]
    1b84:	cmp	w8, w9
    1b88:	b.cs	2a20 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x27d0>  // b.hs, b.nlast
    1b8c:	add	w8, w8, #0x1
    1b90:	str	w8, [sp, #200]
    1b94:	ldur	x8, [x29, #-208]
    1b98:	cbz	x8, 2850 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2600>
    1b9c:	ldr	x8, [x8, #8]
    1ba0:	b	1b14 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x18c4>
    1ba4:	ldr	x1, [x29, #8]
    1ba8:	add	x0, sp, #0xc0
    1bac:	mov	w3, #0x18                  	// #24
    1bb0:	mov	x2, xzr
    1bb4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1bb8:	ldr	w8, [sp, #200]
    1bbc:	b	1b54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1904>
    1bc0:	add	x19, x19, #0x28
    1bc4:	cmp	x19, x20
    1bc8:	b.ne	1b08 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x18b8>  // b.any
    1bcc:	ldr	x1, [sp, #48]
    1bd0:	sub	x0, x29, #0xd0
    1bd4:	sub	x19, x29, #0xd0
    1bd8:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1bdc:	ldp	x23, x24, [x29, #-208]
    1be0:	ldr	x20, [sp, #56]
    1be4:	ldur	x25, [x29, #-192]
    1be8:	ldr	x21, [sp, #16]
    1bec:	cmp	x23, x20
    1bf0:	cset	w8, ne  // ne = any
    1bf4:	cmp	x25, #0x0
    1bf8:	cset	w9, ne  // ne = any
    1bfc:	cmp	x20, x24
    1c00:	b.ne	1cd8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1a88>  // b.any
    1c04:	and	w8, w8, w9
    1c08:	cbnz	w8, 1cd8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1a88>
    1c0c:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
    1c10:	ldr	x8, [x8]
    1c14:	ldrb	w8, [x8]
    1c18:	cbz	w8, 1c40 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x19f0>
    1c1c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1c20:	add	x0, x0, #0x0
    1c24:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    1c28:	tbz	w0, #0, 1c40 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x19f0>
    1c2c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1c30:	add	x0, x0, #0x0
    1c34:	add	x2, sp, #0xc0
    1c38:	mov	w1, #0x6                   	// #6
    1c3c:	bl	2e60 <_ZL4dumpN4llvm9StringRefERKNS_11SmallVectorIN12_GLOBAL__N_15SpillELj8EEE>
    1c40:	ldr	x19, [sp, #48]
    1c44:	mov	x0, x19
    1c48:	bl	0 <_ZNK4llvm8Function10getContextEv>
    1c4c:	ldr	x8, [x19, #40]
    1c50:	mov	x20, x0
    1c54:	mov	x0, x8
    1c58:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
    1c5c:	stp	x0, x20, [x29, #-40]
    1c60:	mov	x0, x19
    1c64:	stur	wzr, [x29, #-24]
    1c68:	bl	0 <_ZNK4llvm5Value7getNameEv>
    1c6c:	mov	x8, x0
    1c70:	sub	x9, x29, #0x58
    1c74:	add	x2, x0, x1
    1c78:	add	x9, x9, #0x10
    1c7c:	sub	x0, x29, #0x58
    1c80:	mov	x1, x8
    1c84:	stur	x9, [x29, #-88]
    1c88:	stur	d10, [x29, #-80]
    1c8c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1c90:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1c94:	add	x1, x1, #0x0
    1c98:	add	x2, x1, #0x6
    1c9c:	sub	x0, x29, #0x58
    1ca0:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1ca4:	ldur	x1, [x29, #-88]
    1ca8:	ldur	w2, [x29, #-80]
    1cac:	mov	x0, x20
    1cb0:	bl	0 <_ZN4llvm10StructType6createERNS_11LLVMContextENS_9StringRefE>
    1cb4:	sub	x8, x29, #0xd0
    1cb8:	add	x8, x8, #0x10
    1cbc:	stur	x8, [x29, #-208]
    1cc0:	stur	d8, [x29, #-200]
    1cc4:	ldr	w8, [x21, #168]
    1cc8:	mov	x19, x0
    1ccc:	cbz	w8, 2134 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1ee4>
    1cd0:	mov	x23, xzr
    1cd4:	b	2224 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1fd4>
    1cd8:	adrp	x8, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1cdc:	ldr	d9, [x8]
    1ce0:	add	x26, x19, #0x28
    1ce4:	mov	w27, #0x18                  	// #24
    1ce8:	mov	w28, #0xffffffff            	// #-1
    1cec:	ldrb	w8, [x25]
    1cf0:	tbnz	w8, #2, 2834 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x25e4>
    1cf4:	sub	x8, x25, #0x18
    1cf8:	cmp	x25, #0x0
    1cfc:	csel	x19, xzr, x8, eq  // eq = none
    1d00:	ldrb	w8, [x19, #16]
    1d04:	cmp	w8, #0x50
    1d08:	b.ne	1d24 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1ad4>  // b.any
    1d0c:	ldur	x9, [x19, #-24]
    1d10:	cbz	x9, 1d24 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1ad4>
    1d14:	ldrb	w10, [x9, #16]
    1d18:	cbnz	w10, 1d24 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1ad4>
    1d1c:	ldrb	w10, [x9, #33]
    1d20:	tbnz	w10, #5, 1ef4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1ca4>
    1d24:	ldr	x9, [x21]
    1d28:	cmp	x19, x9
    1d2c:	b.eq	1d44 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1af4>  // b.none
    1d30:	ldr	w9, [x21, #168]
    1d34:	cbnz	w9, 1db4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1b64>
    1d38:	ldr	x9, [x21, #208]
    1d3c:	cmp	x9, x19
    1d40:	b.ne	1db4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1b64>  // b.any
    1d44:	ldrb	w8, [x24]
    1d48:	tbnz	w8, #2, 28ac <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x265c>
    1d4c:	ldr	x25, [x25, #8]
    1d50:	sub	x8, x24, #0x18
    1d54:	cmp	x24, #0x0
    1d58:	csel	x8, xzr, x8, eq  // eq = none
    1d5c:	add	x8, x8, #0x28
    1d60:	cmp	x8, x25
    1d64:	b.ne	1d90 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1b40>  // b.any
    1d68:	ldr	x24, [x24, #8]
    1d6c:	cmp	x23, x24
    1d70:	b.eq	1d90 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1b40>  // b.none
    1d74:	ldrb	w8, [x24]
    1d78:	tbnz	w8, #2, 28ac <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x265c>
    1d7c:	sub	x8, x24, #0x18
    1d80:	cmp	x24, #0x0
    1d84:	csel	x8, xzr, x8, eq  // eq = none
    1d88:	ldr	x25, [x8, #48]
    1d8c:	b	1d5c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1b0c>
    1d90:	cmp	x23, x20
    1d94:	cset	w8, ne  // ne = any
    1d98:	cmp	x25, #0x0
    1d9c:	cset	w9, ne  // ne = any
    1da0:	cmp	x20, x24
    1da4:	b.ne	1cec <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1a9c>  // b.any
    1da8:	and	w8, w8, w9
    1dac:	tbnz	w8, #0, 1cec <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1a9c>
    1db0:	b	1c0c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x19bc>
    1db4:	cbz	x25, 2b18 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x28c8>
    1db8:	cmp	w8, #0x50
    1dbc:	b.ne	1e8c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1c3c>  // b.any
    1dc0:	ldur	x8, [x19, #-24]
    1dc4:	cbz	x8, 1e68 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1c18>
    1dc8:	ldrb	w9, [x8, #16]
    1dcc:	cbnz	w9, 1e68 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1c18>
    1dd0:	ldrb	w9, [x8, #33]
    1dd4:	tbz	w9, #5, 1e68 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1c18>
    1dd8:	ldr	w8, [x8, #36]
    1ddc:	cmp	w8, #0xf
    1de0:	b.ne	1e68 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1c18>  // b.any
    1de4:	mov	x0, x19
    1de8:	stur	x19, [x29, #-224]
    1dec:	stp	xzr, x26, [x29, #-208]
    1df0:	stur	x26, [x29, #-192]
    1df4:	stur	d9, [x29, #-184]
    1df8:	stur	wzr, [x29, #-176]
    1dfc:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    1e00:	ldr	x8, [x19, #8]
    1e04:	stur	x8, [x29, #-40]
    1e08:	cbz	x8, 1f1c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1ccc>
    1e0c:	sub	x0, x29, #0x28
    1e10:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1e14:	cbz	x0, 2940 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x26f0>
    1e18:	ldrb	w8, [x0, #16]
    1e1c:	cmp	w8, #0x50
    1e20:	b.ne	1e58 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1c08>  // b.any
    1e24:	ldur	x8, [x0, #-24]
    1e28:	cbz	x8, 1e58 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1c08>
    1e2c:	ldrb	w9, [x8, #16]
    1e30:	cbnz	w9, 1e58 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1c08>
    1e34:	ldrb	w9, [x8, #33]
    1e38:	tbz	w9, #5, 1e58 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1c08>
    1e3c:	ldr	w8, [x8, #36]
    1e40:	cmp	w8, #0x10
    1e44:	b.ne	1e58 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1c08>  // b.any
    1e48:	ldr	x1, [x0, #40]
    1e4c:	sub	x8, x29, #0x58
    1e50:	sub	x0, x29, #0xd0
    1e54:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1e58:	ldur	x8, [x29, #-40]
    1e5c:	cbz	x8, 2850 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2600>
    1e60:	ldr	x8, [x8, #8]
    1e64:	b	1e04 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1bb4>
    1e68:	ldur	x8, [x19, #-24]
    1e6c:	cbz	x8, 1e8c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1c3c>
    1e70:	ldrb	w9, [x8, #16]
    1e74:	cbnz	w9, 1e8c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1c3c>
    1e78:	ldrb	w9, [x8, #33]
    1e7c:	tbz	w9, #5, 1e8c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1c3c>
    1e80:	ldr	w8, [x8, #36]
    1e84:	cmp	w8, #0x11
    1e88:	b.eq	1d44 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1af4>  // b.none
    1e8c:	mov	x0, x19
    1e90:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    1e94:	ldr	x8, [x19, #8]
    1e98:	stur	x8, [x29, #-208]
    1e9c:	cbz	x8, 1d44 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1af4>
    1ea0:	sub	x0, x29, #0xd0
    1ea4:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1ea8:	mov	x2, x0
    1eac:	stur	x0, [x29, #-88]
    1eb0:	add	x0, sp, #0x1e0
    1eb4:	mov	x1, x19
    1eb8:	bl	2cc4 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendERN4llvm11InstructionEPNS1_4UserE>
    1ebc:	tbz	w0, #0, 1ee4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1c94>
    1ec0:	ldr	x8, [x19]
    1ec4:	ldrb	w8, [x8, #8]
    1ec8:	cmp	w8, #0xa
    1ecc:	b.eq	2a94 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2844>  // b.none
    1ed0:	add	x0, sp, #0xc0
    1ed4:	sub	x1, x29, #0x28
    1ed8:	sub	x2, x29, #0x58
    1edc:	stur	x19, [x29, #-40]
    1ee0:	bl	2d58 <_ZN4llvm15SmallVectorImplIN12_GLOBAL__N_15SpillEE12emplace_backIJPNS_11InstructionERPNS_4UserEEEERS2_DpOT_>
    1ee4:	ldur	x8, [x29, #-208]
    1ee8:	cbz	x8, 2850 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2600>
    1eec:	ldr	x8, [x8, #8]
    1ef0:	b	1e98 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1c48>
    1ef4:	ldr	w10, [x9, #36]
    1ef8:	cmp	w10, #0x18
    1efc:	b.eq	1d44 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1af4>  // b.none
    1f00:	ldr	w10, [x9, #36]
    1f04:	cmp	w10, #0x20
    1f08:	b.eq	1d44 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1af4>  // b.none
    1f0c:	ldr	w9, [x9, #36]
    1f10:	cmp	w9, #0x23
    1f14:	b.ne	1d24 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1ad4>  // b.any
    1f18:	b	1d44 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1af4>
    1f1c:	ldr	x0, [x19, #40]
    1f20:	sub	x1, x29, #0xd0
    1f24:	bl	48c0 <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE>
    1f28:	ldp	x9, x8, [x29, #-200]
    1f2c:	mov	w19, w0
    1f30:	cmp	x8, x9
    1f34:	b.eq	1f40 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1cf0>  // b.none
    1f38:	mov	x0, x8
    1f3c:	bl	0 <free>
    1f40:	tbz	w19, #0, 2040 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1df0>
    1f44:	ldur	x20, [x29, #-224]
    1f48:	sub	x0, x29, #0xd0
    1f4c:	mov	x2, xzr
    1f50:	mov	x3, xzr
    1f54:	mov	x1, x20
    1f58:	mov	x4, xzr
    1f5c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1f60:	mov	x0, x20
    1f64:	mov	w1, wzr
    1f68:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1f6c:	mov	x2, x0
    1f70:	sub	x1, x29, #0xd0
    1f74:	mov	x0, x21
    1f78:	mov	x3, xzr
    1f7c:	bl	0 <_ZNK4llvm4coro5Shape9emitAllocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE>
    1f80:	mov	x19, x0
    1f84:	mov	x0, x20
    1f88:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    1f8c:	ldr	x8, [x20, #8]
    1f90:	stur	x8, [x29, #-88]
    1f94:	cbz	x8, 2050 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1e00>
    1f98:	sub	x0, x29, #0x58
    1f9c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1fa0:	cbz	x0, 2924 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x26d4>
    1fa4:	ldrb	w8, [x0, #16]
    1fa8:	mov	x22, x0
    1fac:	cmp	w8, #0x50
    1fb0:	b.ne	2890 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2640>  // b.any
    1fb4:	ldur	x8, [x22, #-24]
    1fb8:	cbz	x8, 2890 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2640>
    1fbc:	ldrb	w9, [x8, #16]
    1fc0:	cbnz	w9, 2890 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2640>
    1fc4:	ldrb	w9, [x8, #33]
    1fc8:	tbz	w9, #5, 2890 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2640>
    1fcc:	ldr	w9, [x8, #36]
    1fd0:	cmp	w9, #0x11
    1fd4:	b.ne	1fe8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1d98>  // b.any
    1fd8:	mov	x0, x22
    1fdc:	mov	x1, x19
    1fe0:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    1fe4:	b	2014 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1dc4>
    1fe8:	ldr	w8, [x8, #36]
    1fec:	cmp	w8, #0x10
    1ff0:	b.ne	2890 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2640>  // b.any
    1ff4:	sub	x0, x29, #0xd0
    1ff8:	mov	x1, x22
    1ffc:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2000:	sub	x1, x29, #0xd0
    2004:	mov	x0, x21
    2008:	mov	x2, x19
    200c:	mov	x3, xzr
    2010:	bl	0 <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE>
    2014:	ldrb	w8, [x22, #16]
    2018:	cmp	w8, #0x17
    201c:	b.ls	28cc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x267c>  // b.plast
    2020:	add	x0, sp, #0x60
    2024:	sub	x1, x29, #0x28
    2028:	stur	x22, [x29, #-40]
    202c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2030:	ldur	x8, [x29, #-88]
    2034:	cbz	x8, 2850 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2600>
    2038:	ldr	x8, [x8, #8]
    203c:	b	1f90 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1d40>
    2040:	add	x0, sp, #0x90
    2044:	sub	x1, x29, #0xe0
    2048:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    204c:	b	1d44 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1af4>
    2050:	add	x0, sp, #0x60
    2054:	sub	x1, x29, #0x58
    2058:	stur	x20, [x29, #-88]
    205c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2060:	cbz	x19, 2994 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2744>
    2064:	ldrb	w8, [x19, #16]
    2068:	cmp	w8, #0x17
    206c:	b.ls	29b0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2760>  // b.plast
    2070:	ldur	x1, [x29, #-208]
    2074:	cbz	x1, 2080 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1e30>
    2078:	sub	x0, x29, #0xd0
    207c:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    2080:	mov	x0, x19
    2084:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    2088:	ldr	x8, [x19, #8]
    208c:	stur	x8, [x29, #-208]
    2090:	cbz	x8, 212c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1edc>
    2094:	sub	x0, x29, #0xd0
    2098:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    209c:	mov	x20, x0
    20a0:	add	x0, sp, #0x1e0
    20a4:	mov	x1, x19
    20a8:	mov	x2, x20
    20ac:	bl	2cc4 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendERN4llvm11InstructionEPNS1_4UserE>
    20b0:	tbz	w0, #0, 2100 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1eb0>
    20b4:	ldp	w8, w9, [sp, #200]
    20b8:	cmp	w8, w9
    20bc:	b.cs	2110 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1ec0>  // b.hs, b.nlast
    20c0:	ldr	x9, [sp, #192]
    20c4:	umaddl	x10, w8, w27, x9
    20c8:	str	x19, [x10], #8
    20cc:	cbz	x20, 295c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x270c>
    20d0:	ldrb	w11, [x20, #16]
    20d4:	cmp	w11, #0x17
    20d8:	b.ls	28cc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x267c>  // b.plast
    20dc:	mov	w8, w8
    20e0:	madd	x9, x8, x27, x9
    20e4:	str	x20, [x10]
    20e8:	str	w28, [x9, #16]
    20ec:	ldr	w9, [sp, #204]
    20f0:	cmp	w8, w9
    20f4:	b.cs	2a20 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x27d0>  // b.hs, b.nlast
    20f8:	add	w8, w8, #0x1
    20fc:	str	w8, [sp, #200]
    2100:	ldur	x8, [x29, #-208]
    2104:	cbz	x8, 2850 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2600>
    2108:	ldr	x8, [x8, #8]
    210c:	b	208c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1e3c>
    2110:	ldr	x1, [x29, #8]
    2114:	add	x0, sp, #0xc0
    2118:	mov	w3, #0x18                  	// #24
    211c:	mov	x2, xzr
    2120:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2124:	ldr	w8, [sp, #200]
    2128:	b	20c0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1e70>
    212c:	ldr	x20, [sp, #56]
    2130:	b	1d44 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1af4>
    2134:	ldr	x23, [x21, #208]
    2138:	mov	x0, x19
    213c:	mov	w1, wzr
    2140:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
    2144:	mov	x22, x21
    2148:	mov	x21, x0
    214c:	mov	x0, x20
    2150:	bl	0 <_ZN4llvm4Type9getVoidTyERNS_11LLVMContextE>
    2154:	sub	x1, x29, #0xe0
    2158:	mov	w2, #0x1                   	// #1
    215c:	mov	w3, wzr
    2160:	stur	x21, [x29, #-224]
    2164:	bl	0 <_ZN4llvm12FunctionType3getEPNS_4TypeENS_8ArrayRefIS2_EEb>
    2168:	mov	w1, wzr
    216c:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
    2170:	ldr	w8, [x22, #96]
    2174:	mov	w9, #0x40                  	// #64
    2178:	mov	x21, x0
    217c:	sub	x8, x8, #0x1
    2180:	clz	x8, x8
    2184:	sub	w8, w9, w8
    2188:	cmp	w8, #0x1
    218c:	csinc	w22, w8, wzr, hi  // hi = pmore
    2190:	cbz	x23, 21b0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1f60>
    2194:	ldr	x8, [x23]
    2198:	cbz	x8, 2b7c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x292c>
    219c:	ldrb	w9, [x8, #8]
    21a0:	cmp	w9, #0xf
    21a4:	b.ne	2b98 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2948>  // b.any
    21a8:	ldr	x0, [x8, #24]
    21ac:	b	21b8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1f68>
    21b0:	mov	x0, x20
    21b4:	bl	0 <_ZN4llvm4Type9getInt1TyERNS_11LLVMContextE>
    21b8:	stur	x0, [x29, #-224]
    21bc:	mov	x0, x20
    21c0:	mov	w1, w22
    21c4:	bl	0 <_ZN4llvm4Type9getIntNTyERNS_11LLVMContextEj>
    21c8:	stp	x21, x0, [x29, #-104]
    21cc:	sub	x0, x29, #0xd0
    21d0:	sub	x1, x29, #0x68
    21d4:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    21d8:	sub	x0, x29, #0xd0
    21dc:	sub	x1, x29, #0x68
    21e0:	stur	x21, [x29, #-104]
    21e4:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    21e8:	sub	x0, x29, #0xd0
    21ec:	sub	x1, x29, #0xe0
    21f0:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    21f4:	sub	x0, x29, #0xd0
    21f8:	sub	x1, x29, #0x60
    21fc:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2200:	ldur	w8, [x29, #-200]
    2204:	cbz	w8, 2224 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1fd4>
    2208:	ldur	x20, [x29, #-208]
    220c:	lsl	x21, x8, #3
    2210:	ldr	x1, [x20], #8
    2214:	sub	x0, x29, #0x28
    2218:	bl	49c4 <_ZN12_GLOBAL__N_117PaddingCalculator7addTypeEPN4llvm4TypeE>
    221c:	subs	x21, x21, #0x8
    2220:	b.ne	2210 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1fc0>  // b.any
    2224:	ldr	w9, [sp, #200]
    2228:	cbz	w9, 23ac <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x215c>
    222c:	ldr	x10, [sp, #192]
    2230:	add	x9, x9, x9, lsl #1
    2234:	mov	x8, xzr
    2238:	lsl	x21, x9, #3
    223c:	add	x22, x10, #0x10
    2240:	mov	w24, #0x1                   	// #1
    2244:	ldur	x25, [x22, #-16]
    2248:	cmp	x8, x25
    224c:	b.eq	23a0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2150>  // b.none
    2250:	cmp	x25, x23
    2254:	b.eq	233c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x20ec>  // b.none
    2258:	stur	xzr, [x29, #-224]
    225c:	cbz	x25, 2afc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x28ac>
    2260:	ldrb	w8, [x25, #16]
    2264:	cmp	w8, #0x37
    2268:	b.ne	2344 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x20f4>  // b.any
    226c:	ldr	x1, [x25, #56]
    2270:	stur	x1, [x29, #-224]
    2274:	ldrh	w8, [x25, #18]
    2278:	and	w9, w8, #0x1f
    227c:	add	w9, w9, #0xff
    2280:	orr	w9, w9, #0x100
    2284:	tst	w8, #0x1f
    2288:	csel	w8, wzr, w9, eq  // eq = none
    228c:	tbz	w8, #8, 2318 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x20c8>
    2290:	lsl	x20, x24, x8
    2294:	cbz	w20, 2318 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x20c8>
    2298:	ldur	x0, [x29, #-40]
    229c:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
    22a0:	cbz	w0, 2b5c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x290c>
    22a4:	ldur	w8, [x29, #-24]
    22a8:	mov	w10, w0
    22ac:	mov	x9, xzr
    22b0:	sub	x9, x9, w20, uxtw
    22b4:	sub	x11, x8, #0x1
    22b8:	add	x12, x11, x10
    22bc:	add	x11, x11, w20, uxtw
    22c0:	udiv	x12, x12, x10
    22c4:	and	x11, x11, x9
    22c8:	mul	x10, x12, x10
    22cc:	cmp	x10, x11
    22d0:	csel	w9, w11, w10, cc  // cc = lo, ul, last
    22d4:	cmp	x10, x11
    22d8:	b.eq	2318 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x20c8>  // b.none
    22dc:	sub	w20, w9, w8
    22e0:	cbz	w20, 2318 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x20c8>
    22e4:	ldur	x0, [x29, #-32]
    22e8:	bl	0 <_ZN4llvm4Type9getInt8TyERNS_11LLVMContextE>
    22ec:	mov	w1, w20
    22f0:	bl	0 <_ZN4llvm9ArrayType3getEPNS_4TypeEm>
    22f4:	cbz	x0, 2318 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x20c8>
    22f8:	mov	x20, x0
    22fc:	stur	x0, [x29, #-96]
    2300:	sub	x0, x29, #0xd0
    2304:	sub	x1, x29, #0x60
    2308:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    230c:	sub	x0, x29, #0x28
    2310:	mov	x1, x20
    2314:	bl	49c4 <_ZN12_GLOBAL__N_117PaddingCalculator7addTypeEPN4llvm4TypeE>
    2318:	ldur	x8, [x25, #-24]
    231c:	cbz	x8, 2b34 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x28e4>
    2320:	ldrb	w9, [x8, #16]
    2324:	cmp	w9, #0xd
    2328:	b.ne	2b50 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2900>  // b.any
    232c:	add	x0, x8, #0x18
    2330:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2334:	mov	x1, x0
    2338:	b	2350 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2100>
    233c:	mov	x8, x23
    2340:	b	23a0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2150>
    2344:	ldr	x8, [x25]
    2348:	mov	w1, #0x1                   	// #1
    234c:	stur	x8, [x29, #-224]
    2350:	ldr	w8, [x22]
    2354:	cmn	w8, #0x1
    2358:	b.ne	2adc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x288c>  // b.any
    235c:	ldur	w8, [x29, #-200]
    2360:	cmp	x1, #0x1
    2364:	str	w8, [x22]
    2368:	b.ne	2378 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2128>  // b.any
    236c:	sub	x0, x29, #0xd0
    2370:	sub	x1, x29, #0xe0
    2374:	b	238c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x213c>
    2378:	ldur	x0, [x29, #-224]
    237c:	bl	0 <_ZN4llvm9ArrayType3getEPNS_4TypeEm>
    2380:	stur	x0, [x29, #-96]
    2384:	sub	x0, x29, #0xd0
    2388:	sub	x1, x29, #0x60
    238c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2390:	ldur	x1, [x29, #-224]
    2394:	sub	x0, x29, #0x28
    2398:	bl	49c4 <_ZN12_GLOBAL__N_117PaddingCalculator7addTypeEPN4llvm4TypeE>
    239c:	mov	x8, x25
    23a0:	subs	x21, x21, #0x18
    23a4:	add	x22, x22, #0x18
    23a8:	b.ne	2244 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1ff4>  // b.any
    23ac:	ldur	x1, [x29, #-208]
    23b0:	ldur	w2, [x29, #-200]
    23b4:	mov	x0, x19
    23b8:	mov	w3, wzr
    23bc:	bl	0 <_ZN4llvm10StructType7setBodyENS_8ArrayRefIPNS_4TypeEEEb>
    23c0:	ldr	x20, [sp, #16]
    23c4:	ldr	w8, [x20, #168]
    23c8:	sub	w8, w8, #0x1
    23cc:	cmp	w8, #0x2
    23d0:	b.cs	2448 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x21f8>  // b.hs, b.nlast
    23d4:	ldr	x8, [sp, #48]
    23d8:	ldr	x0, [x8, #40]
    23dc:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
    23e0:	mov	x21, x0
    23e4:	mov	x0, x20
    23e8:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    23ec:	mov	x20, x0
    23f0:	mov	x0, x21
    23f4:	mov	x1, x19
    23f8:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    23fc:	tst	w1, #0xff
    2400:	b.ne	2bb4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2964>  // b.any
    2404:	mov	x22, x0
    2408:	mov	x0, x20
    240c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2410:	cmp	x22, x0
    2414:	b.ls	2420 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x21d0>  // b.plast
    2418:	mov	w8, wzr
    241c:	b	2440 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x21f0>
    2420:	mov	x0, x21
    2424:	mov	x1, x19
    2428:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
    242c:	mov	w21, w0
    2430:	mov	x0, x20
    2434:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2438:	cmp	x0, w21, uxtw
    243c:	cset	w8, cs  // cs = hs, nlast
    2440:	ldr	x20, [sp, #16]
    2444:	strb	w8, [x20, #232]
    2448:	ldur	x0, [x29, #-208]
    244c:	sub	x8, x29, #0xd0
    2450:	add	x8, x8, #0x10
    2454:	cmp	x0, x8
    2458:	b.eq	2460 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2210>  // b.none
    245c:	bl	0 <free>
    2460:	ldur	x0, [x29, #-88]
    2464:	sub	x8, x29, #0x58
    2468:	add	x8, x8, #0x10
    246c:	cmp	x0, x8
    2470:	b.eq	2478 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2228>  // b.none
    2474:	bl	0 <free>
    2478:	add	x0, sp, #0xc0
    247c:	mov	x1, x20
    2480:	str	x19, [x20, #176]
    2484:	bl	2f20 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE>
    2488:	str	x0, [x20, #184]
    248c:	ldr	w8, [sp, #152]
    2490:	cbz	w8, 270c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x24bc>
    2494:	ldr	x26, [sp, #144]
    2498:	adrp	x19, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    249c:	add	x19, x19, #0x0
    24a0:	add	x27, x26, x8, lsl #3
    24a4:	ldr	x21, [x26]
    24a8:	mov	x0, x21
    24ac:	bl	0 <_ZNK4llvm11Instruction9getModuleEv>
    24b0:	mov	x22, x0
    24b4:	sub	x0, x29, #0xd0
    24b8:	mov	x1, x21
    24bc:	mov	x2, xzr
    24c0:	mov	x3, xzr
    24c4:	mov	x4, xzr
    24c8:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    24cc:	mov	x0, x21
    24d0:	stur	xzr, [x29, #-40]
    24d4:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    24d8:	ldr	x8, [x21, #8]
    24dc:	stur	x8, [x29, #-88]
    24e0:	cbz	x8, 2584 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2334>
    24e4:	sub	x0, x29, #0x58
    24e8:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    24ec:	cbz	x0, 2940 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x26f0>
    24f0:	ldrb	w8, [x0, #16]
    24f4:	cmp	w8, #0x50
    24f8:	b.ne	2530 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x22e0>  // b.any
    24fc:	ldur	x8, [x0, #-24]
    2500:	cbz	x8, 2530 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x22e0>
    2504:	ldrb	w9, [x8, #16]
    2508:	cbnz	w9, 2530 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x22e0>
    250c:	ldrb	w9, [x8, #33]
    2510:	tbz	w9, #5, 2530 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x22e0>
    2514:	ldr	w8, [x8, #36]
    2518:	cmp	w8, #0x10
    251c:	b.ne	2530 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x22e0>  // b.any
    2520:	ldr	x0, [x0, #40]
    2524:	mov	w1, #0x3                   	// #3
    2528:	bl	4cec <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj>
    252c:	tbz	w0, #0, 2540 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x22f0>
    2530:	ldur	x8, [x29, #-88]
    2534:	cbz	x8, 2850 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2600>
    2538:	ldr	x8, [x8, #8]
    253c:	b	24dc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x228c>
    2540:	mov	w1, #0xf5                  	// #245
    2544:	mov	x0, x22
    2548:	mov	x2, xzr
    254c:	mov	x3, xzr
    2550:	bl	0 <_ZN4llvm9Intrinsic14getDeclarationEPNS_6ModuleEjNS_8ArrayRefIPNS_4TypeEEE>
    2554:	mov	x23, x0
    2558:	sub	x0, x29, #0x58
    255c:	mov	x1, x19
    2560:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2564:	sub	x0, x29, #0xd0
    2568:	sub	x4, x29, #0x58
    256c:	mov	x1, x23
    2570:	mov	x2, xzr
    2574:	mov	x3, xzr
    2578:	mov	x5, xzr
    257c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2580:	stur	x0, [x29, #-40]
    2584:	ldur	x0, [x29, #-184]
    2588:	bl	0 <_ZN4llvm4Type9getInt8TyERNS_11LLVMContextE>
    258c:	mov	x23, x0
    2590:	mov	x0, x21
    2594:	mov	w1, wzr
    2598:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    259c:	mov	x24, x0
    25a0:	sub	x0, x29, #0x58
    25a4:	mov	x1, x19
    25a8:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    25ac:	sub	x0, x29, #0xd0
    25b0:	sub	x3, x29, #0x58
    25b4:	mov	x1, x23
    25b8:	mov	x2, x24
    25bc:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    25c0:	mov	x23, x0
    25c4:	mov	x0, x21
    25c8:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    25cc:	mov	w1, w0
    25d0:	sub	x0, x29, #0x60
    25d4:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    25d8:	ldurh	w8, [x29, #-96]
    25dc:	and	x9, x20, #0xffffffffffff0000
    25e0:	mov	x0, x23
    25e4:	orr	x20, x9, x8
    25e8:	mov	x1, x20
    25ec:	bl	0 <_ZN4llvm10AllocaInst12setAlignmentENS_10MaybeAlignE>
    25f0:	mov	x0, x21
    25f4:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    25f8:	ldr	x8, [x21, #8]
    25fc:	stur	x8, [x29, #-224]
    2600:	cbz	x8, 26e0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2490>
    2604:	sub	x0, x29, #0xe0
    2608:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    260c:	cbz	x0, 2924 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x26d4>
    2610:	ldrb	w8, [x0, #16]
    2614:	mov	x24, x0
    2618:	cmp	w8, #0x50
    261c:	b.ne	2890 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2640>  // b.any
    2620:	ldur	x8, [x24, #-24]
    2624:	cbz	x8, 2890 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2640>
    2628:	ldrb	w9, [x8, #16]
    262c:	cbnz	w9, 2890 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2640>
    2630:	ldrb	w9, [x8, #33]
    2634:	tbz	w9, #5, 2890 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2640>
    2638:	ldr	w9, [x8, #36]
    263c:	cmp	w9, #0x11
    2640:	b.ne	2654 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2404>  // b.any
    2644:	mov	x0, x24
    2648:	mov	x1, x23
    264c:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    2650:	b	26b4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2464>
    2654:	ldr	w8, [x8, #36]
    2658:	cmp	w8, #0x10
    265c:	b.ne	2890 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2640>  // b.any
    2660:	ldur	x8, [x29, #-40]
    2664:	cbz	x8, 26b4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2464>
    2668:	sub	x0, x29, #0xd0
    266c:	mov	x1, x24
    2670:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2674:	mov	w1, #0xf4                  	// #244
    2678:	mov	x0, x22
    267c:	mov	x2, xzr
    2680:	mov	x3, xzr
    2684:	bl	0 <_ZN4llvm9Intrinsic14getDeclarationEPNS_6ModuleEjNS_8ArrayRefIPNS_4TypeEEE>
    2688:	mov	x25, x0
    268c:	sub	x0, x29, #0x58
    2690:	mov	x1, x19
    2694:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2698:	sub	x0, x29, #0xd0
    269c:	sub	x2, x29, #0x28
    26a0:	sub	x4, x29, #0x58
    26a4:	mov	w3, #0x1                   	// #1
    26a8:	mov	x1, x25
    26ac:	mov	x5, xzr
    26b0:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    26b4:	ldrb	w8, [x24, #16]
    26b8:	cmp	w8, #0x17
    26bc:	b.ls	28cc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x267c>  // b.plast
    26c0:	add	x0, sp, #0x60
    26c4:	sub	x1, x29, #0x58
    26c8:	stur	x24, [x29, #-88]
    26cc:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    26d0:	ldur	x8, [x29, #-224]
    26d4:	cbz	x8, 2850 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2600>
    26d8:	ldr	x8, [x8, #8]
    26dc:	b	25fc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x23ac>
    26e0:	add	x0, sp, #0x60
    26e4:	sub	x1, x29, #0x58
    26e8:	stur	x21, [x29, #-88]
    26ec:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    26f0:	ldur	x1, [x29, #-208]
    26f4:	cbz	x1, 2700 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x24b0>
    26f8:	sub	x0, x29, #0xd0
    26fc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    2700:	add	x26, x26, #0x8
    2704:	cmp	x26, x27
    2708:	b.ne	24a4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2254>  // b.any
    270c:	ldr	w8, [sp, #104]
    2710:	ldr	x19, [sp, #96]
    2714:	cbz	w8, 2730 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x24e0>
    2718:	lsl	x20, x8, #3
    271c:	ldr	x0, [x19], #8
    2720:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    2724:	subs	x20, x20, #0x8
    2728:	b.ne	271c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x24cc>  // b.any
    272c:	ldr	x19, [sp, #96]
    2730:	add	x8, sp, #0x60
    2734:	add	x8, x8, #0x10
    2738:	cmp	x19, x8
    273c:	b.eq	2748 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x24f8>  // b.none
    2740:	mov	x0, x19
    2744:	bl	0 <free>
    2748:	ldr	x0, [sp, #144]
    274c:	add	x8, sp, #0x90
    2750:	add	x8, x8, #0x10
    2754:	cmp	x0, x8
    2758:	b.eq	2760 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2510>  // b.none
    275c:	bl	0 <free>
    2760:	ldr	x0, [sp, #192]
    2764:	add	x8, sp, #0xc0
    2768:	add	x8, x8, #0x10
    276c:	cmp	x0, x8
    2770:	b.eq	2778 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2528>  // b.none
    2774:	bl	0 <free>
    2778:	ldr	x1, [sp, #400]
    277c:	cbz	x1, 2788 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2538>
    2780:	add	x0, sp, #0x190
    2784:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    2788:	ldr	x0, [sp, #752]
    278c:	ldr	w8, [sp, #760]
    2790:	mov	w9, #0x38                  	// #56
    2794:	madd	x1, x8, x9, x0
    2798:	bl	4598 <_ZN4llvm23SmallVectorTemplateBaseIN12_GLOBAL__N_119SuspendCrossingInfo9BlockDataELb0EE13destroy_rangeEPS3_S5_>
    279c:	ldr	x8, [sp, #24]
    27a0:	ldr	x0, [sp, #752]
    27a4:	add	x8, x8, #0x10
    27a8:	cmp	x0, x8
    27ac:	b.eq	27b4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2564>  // b.none
    27b0:	bl	0 <free>
    27b4:	ldr	x0, [sp, #480]
    27b8:	add	x8, sp, #0x1e0
    27bc:	add	x8, x8, #0x10
    27c0:	cmp	x0, x8
    27c4:	b.eq	27cc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x257c>  // b.none
    27c8:	bl	0 <free>
    27cc:	add	sp, sp, #0xae0
    27d0:	ldp	x20, x19, [sp, #112]
    27d4:	ldp	x22, x21, [sp, #96]
    27d8:	ldp	x24, x23, [sp, #80]
    27dc:	ldp	x26, x25, [sp, #64]
    27e0:	ldp	x28, x27, [sp, #48]
    27e4:	ldp	x29, x30, [sp, #32]
    27e8:	ldp	d9, d8, [sp, #16]
    27ec:	ldr	d10, [sp], #128
    27f0:	ret
    27f4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    27f8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    27fc:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2800:	add	x0, x0, #0x0
    2804:	add	x1, x1, #0x0
    2808:	add	x3, x3, #0x0
    280c:	mov	w2, #0x69                  	// #105
    2810:	bl	0 <__assert_fail>
    2814:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2818:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    281c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2820:	add	x0, x0, #0x0
    2824:	add	x1, x1, #0x0
    2828:	add	x3, x3, #0x0
    282c:	mov	w2, #0xda                  	// #218
    2830:	bl	0 <__assert_fail>
    2834:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2838:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    283c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2840:	add	x0, x0, #0x0
    2844:	add	x1, x1, #0x0
    2848:	add	x3, x3, #0x0
    284c:	b	28c4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2674>
    2850:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2854:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2858:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    285c:	add	x0, x0, #0x0
    2860:	add	x1, x1, #0x0
    2864:	add	x3, x3, #0x0
    2868:	mov	w2, #0x8d                  	// #141
    286c:	bl	0 <__assert_fail>
    2870:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2874:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2878:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    287c:	add	x0, x0, #0x0
    2880:	add	x1, x1, #0x0
    2884:	add	x3, x3, #0x0
    2888:	mov	w2, #0x33d                 	// #829
    288c:	bl	0 <__assert_fail>
    2890:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2894:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2898:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    289c:	add	x0, x0, #0x0
    28a0:	add	x1, x1, #0x0
    28a4:	add	x3, x3, #0x0
    28a8:	b	29c8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2778>
    28ac:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    28b0:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    28b4:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    28b8:	add	x0, x0, #0x0
    28bc:	add	x1, x1, #0x0
    28c0:	add	x3, x3, #0x0
    28c4:	mov	w2, #0x8b                  	// #139
    28c8:	bl	0 <__assert_fail>
    28cc:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    28d0:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    28d4:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    28d8:	add	x0, x0, #0x0
    28dc:	add	x1, x1, #0x0
    28e0:	add	x3, x3, #0x0
    28e4:	b	29c8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2778>
    28e8:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    28ec:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    28f0:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    28f4:	add	x0, x0, #0x0
    28f8:	add	x1, x1, #0x0
    28fc:	add	x3, x3, #0x0
    2900:	b	291c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x26cc>
    2904:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2908:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    290c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2910:	add	x0, x0, #0x0
    2914:	add	x1, x1, #0x0
    2918:	add	x3, x3, #0x0
    291c:	mov	w2, #0x99                  	// #153
    2920:	bl	0 <__assert_fail>
    2924:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2928:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    292c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2930:	add	x0, x0, #0x0
    2934:	add	x1, x1, #0x0
    2938:	add	x3, x3, #0x0
    293c:	b	280c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x25bc>
    2940:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2944:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2948:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    294c:	add	x0, x0, #0x0
    2950:	add	x1, x1, #0x0
    2954:	add	x3, x3, #0x0
    2958:	b	280c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x25bc>
    295c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2960:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2964:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2968:	add	x0, x0, #0x0
    296c:	add	x1, x1, #0x0
    2970:	add	x3, x3, #0x0
    2974:	b	280c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x25bc>
    2978:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    297c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2980:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2984:	add	x0, x0, #0x0
    2988:	add	x1, x1, #0x0
    298c:	add	x3, x3, #0x0
    2990:	b	29c8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2778>
    2994:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2998:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    299c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    29a0:	add	x0, x0, #0x0
    29a4:	add	x1, x1, #0x0
    29a8:	add	x3, x3, #0x0
    29ac:	b	280c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x25bc>
    29b0:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    29b4:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    29b8:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    29bc:	add	x0, x0, #0x0
    29c0:	add	x1, x1, #0x0
    29c4:	add	x3, x3, #0x0
    29c8:	mov	w2, #0x108                 	// #264
    29cc:	bl	0 <__assert_fail>
    29d0:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    29d4:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    29d8:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    29dc:	add	x0, x0, #0x0
    29e0:	add	x1, x1, #0x0
    29e4:	add	x3, x3, #0x0
    29e8:	b	280c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x25bc>
    29ec:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    29f0:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    29f4:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    29f8:	add	x0, x0, #0x0
    29fc:	add	x1, x1, #0x0
    2a00:	add	x3, x3, #0x0
    2a04:	b	280c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x25bc>
    2a08:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2a0c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2a10:	add	x0, x0, #0x0
    2a14:	add	x1, x1, #0x0
    2a18:	mov	w2, #0x324                 	// #804
    2a1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    2a20:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2a24:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2a28:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2a2c:	add	x0, x0, #0x0
    2a30:	add	x1, x1, #0x0
    2a34:	add	x3, x3, #0x0
    2a38:	mov	w2, #0x43                  	// #67
    2a3c:	bl	0 <__assert_fail>
    2a40:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2a44:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2a48:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2a4c:	add	x0, x0, #0x0
    2a50:	add	x1, x1, #0x0
    2a54:	add	x3, x3, #0x0
    2a58:	mov	w2, #0x3d4                 	// #980
    2a5c:	bl	0 <__assert_fail>
    2a60:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2a64:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2a68:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2a6c:	add	x0, x0, #0x0
    2a70:	add	x1, x1, #0x0
    2a74:	add	x3, x3, #0x0
    2a78:	b	280c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x25bc>
    2a7c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2a80:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2a84:	add	x0, x0, #0x0
    2a88:	add	x1, x1, #0x0
    2a8c:	mov	w2, #0x35c                 	// #860
    2a90:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    2a94:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2a98:	add	x0, x0, #0x0
    2a9c:	mov	w1, #0x1                   	// #1
    2aa0:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    2aa4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2aa8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2aac:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2ab0:	add	x0, x0, #0x0
    2ab4:	add	x1, x1, #0x0
    2ab8:	add	x3, x3, #0x0
    2abc:	b	280c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x25bc>
    2ac0:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2ac4:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2ac8:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2acc:	add	x0, x0, #0x0
    2ad0:	add	x1, x1, #0x0
    2ad4:	add	x3, x3, #0x0
    2ad8:	b	29c8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2778>
    2adc:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2ae0:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2ae4:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2ae8:	add	x0, x0, #0x0
    2aec:	add	x1, x1, #0x0
    2af0:	add	x3, x3, #0x0
    2af4:	mov	w2, #0x137                 	// #311
    2af8:	bl	0 <__assert_fail>
    2afc:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2b00:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2b04:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2b08:	add	x0, x0, #0x0
    2b0c:	add	x1, x1, #0x0
    2b10:	add	x3, x3, #0x0
    2b14:	b	280c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x25bc>
    2b18:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2b1c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2b20:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2b24:	add	x0, x0, #0x0
    2b28:	add	x1, x1, #0x0
    2b2c:	add	x3, x3, #0x0
    2b30:	b	280c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x25bc>
    2b34:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2b38:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2b3c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2b40:	add	x0, x0, #0x0
    2b44:	add	x1, x1, #0x0
    2b48:	add	x3, x3, #0x0
    2b4c:	b	280c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x25bc>
    2b50:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2b54:	add	x0, x0, #0x0
    2b58:	b	2a9c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x284c>
    2b5c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2b60:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2b64:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2b68:	add	x0, x0, #0x0
    2b6c:	add	x1, x1, #0x0
    2b70:	add	x3, x3, #0x0
    2b74:	mov	w2, #0x2ce                 	// #718
    2b78:	bl	0 <__assert_fail>
    2b7c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2b80:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2b84:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2b88:	add	x0, x0, #0x0
    2b8c:	add	x1, x1, #0x0
    2b90:	add	x3, x3, #0x0
    2b94:	b	280c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x25bc>
    2b98:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2b9c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2ba0:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2ba4:	add	x0, x0, #0x0
    2ba8:	add	x1, x1, #0x0
    2bac:	add	x3, x3, #0x0
    2bb0:	b	29c8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2778>
    2bb4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2bb8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2bbc:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2bc0:	add	x0, x0, #0x0
    2bc4:	add	x1, x1, #0x0
    2bc8:	add	x3, x3, #0x0
    2bcc:	mov	w2, #0x7d                  	// #125
    2bd0:	bl	0 <__assert_fail>

0000000000002bd4 <_ZL11splitAroundPN4llvm11InstructionERKNS_5TwineE>:
    2bd4:	sub	sp, sp, #0x60
    2bd8:	stp	x29, x30, [sp, #64]
    2bdc:	stp	x20, x19, [sp, #80]
    2be0:	add	x29, sp, #0x40
    2be4:	mov	x20, x1
    2be8:	mov	x19, x0
    2bec:	bl	4438 <_ZL20splitBlockIfNotFirstPN4llvm11InstructionERKNS_5TwineE>
    2bf0:	ldr	x8, [x19, #40]
    2bf4:	mov	x1, x19
    2bf8:	add	x0, x8, #0x28
    2bfc:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2c00:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2c04:	mov	x19, x0
    2c08:	add	x1, x1, #0x0
    2c0c:	add	x0, sp, #0x8
    2c10:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2c14:	ldrb	w9, [sp, #24]
    2c18:	cbz	w9, 2c40 <_ZL11splitAroundPN4llvm11InstructionERKNS_5TwineE+0x6c>
    2c1c:	ldrb	w8, [x20, #16]
    2c20:	cbz	w8, 2c40 <_ZL11splitAroundPN4llvm11InstructionERKNS_5TwineE+0x6c>
    2c24:	cmp	w9, #0x1
    2c28:	b.ne	2c68 <_ZL11splitAroundPN4llvm11InstructionERKNS_5TwineE+0x94>  // b.any
    2c2c:	ldr	x8, [x20, #16]
    2c30:	ldr	q0, [x20]
    2c34:	str	x8, [sp, #48]
    2c38:	str	q0, [sp, #32]
    2c3c:	b	2c4c <_ZL11splitAroundPN4llvm11InstructionERKNS_5TwineE+0x78>
    2c40:	mov	w8, #0x100                 	// #256
    2c44:	stp	xzr, xzr, [sp, #32]
    2c48:	strh	w8, [sp, #48]
    2c4c:	add	x1, sp, #0x20
    2c50:	mov	x0, x19
    2c54:	bl	4438 <_ZL20splitBlockIfNotFirstPN4llvm11InstructionERKNS_5TwineE>
    2c58:	ldp	x20, x19, [sp, #80]
    2c5c:	ldp	x29, x30, [sp, #64]
    2c60:	add	sp, sp, #0x60
    2c64:	ret
    2c68:	cmp	w8, #0x1
    2c6c:	b.ne	2c84 <_ZL11splitAroundPN4llvm11InstructionERKNS_5TwineE+0xb0>  // b.any
    2c70:	ldur	q0, [sp, #8]
    2c74:	ldr	x8, [sp, #24]
    2c78:	str	q0, [sp, #32]
    2c7c:	str	x8, [sp, #48]
    2c80:	b	2c4c <_ZL11splitAroundPN4llvm11InstructionERKNS_5TwineE+0x78>
    2c84:	ldrb	w10, [sp, #25]
    2c88:	ldr	x11, [sp, #8]
    2c8c:	ldrb	w13, [x20, #17]
    2c90:	mov	w4, #0x2                   	// #2
    2c94:	add	x12, sp, #0x8
    2c98:	cmp	w10, #0x1
    2c9c:	csel	w2, w9, w4, eq  // eq = none
    2ca0:	csel	x1, x11, x12, eq  // eq = none
    2ca4:	cmp	w13, #0x1
    2ca8:	b.ne	2cb4 <_ZL11splitAroundPN4llvm11InstructionERKNS_5TwineE+0xe0>  // b.any
    2cac:	ldr	x20, [x20]
    2cb0:	mov	w4, w8
    2cb4:	add	x0, sp, #0x20
    2cb8:	mov	x3, x20
    2cbc:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2cc0:	b	2c4c <_ZL11splitAroundPN4llvm11InstructionERKNS_5TwineE+0x78>

0000000000002cc4 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendERN4llvm11InstructionEPNS1_4UserE>:
    2cc4:	stp	x29, x30, [sp, #-32]!
    2cc8:	stp	x20, x19, [sp, #16]
    2ccc:	mov	x29, sp
    2cd0:	ldrb	w9, [x1, #16]
    2cd4:	mov	x8, x1
    2cd8:	ldr	x1, [x1, #40]
    2cdc:	mov	x19, x2
    2ce0:	cmp	w9, #0x50
    2ce4:	mov	x20, x0
    2ce8:	b.ne	2d24 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendERN4llvm11InstructionEPNS1_4UserE+0x60>  // b.any
    2cec:	ldur	x8, [x8, #-24]
    2cf0:	cbz	x8, 2d24 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendERN4llvm11InstructionEPNS1_4UserE+0x60>
    2cf4:	ldrb	w9, [x8, #16]
    2cf8:	cbnz	w9, 2d24 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendERN4llvm11InstructionEPNS1_4UserE+0x60>
    2cfc:	ldrb	w9, [x8, #33]
    2d00:	tbz	w9, #5, 2d24 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendERN4llvm11InstructionEPNS1_4UserE+0x60>
    2d04:	ldr	w8, [x8, #36]
    2d08:	sub	w8, w8, #0x23
    2d0c:	cmp	w8, #0x1
    2d10:	b.hi	2d24 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendERN4llvm11InstructionEPNS1_4UserE+0x60>  // b.pmore
    2d14:	mov	x0, x1
    2d18:	bl	0 <_ZNK4llvm10BasicBlock18getSingleSuccessorEv>
    2d1c:	mov	x1, x0
    2d20:	cbz	x0, 2d38 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendERN4llvm11InstructionEPNS1_4UserE+0x74>
    2d24:	mov	x0, x20
    2d28:	mov	x2, x19
    2d2c:	ldp	x20, x19, [sp, #16]
    2d30:	ldp	x29, x30, [sp], #32
    2d34:	b	45d8 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE>
    2d38:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2d3c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2d40:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2d44:	add	x0, x0, #0x0
    2d48:	add	x1, x1, #0x0
    2d4c:	add	x3, x3, #0x0
    2d50:	mov	w2, #0x95                  	// #149
    2d54:	bl	0 <__assert_fail>

0000000000002d58 <_ZN4llvm15SmallVectorImplIN12_GLOBAL__N_15SpillEE12emplace_backIJPNS_11InstructionERPNS_4UserEEEERS2_DpOT_>:
    2d58:	stp	x29, x30, [sp, #-48]!
    2d5c:	str	x21, [sp, #16]
    2d60:	stp	x20, x19, [sp, #32]
    2d64:	mov	x29, sp
    2d68:	ldp	w8, w9, [x0, #8]
    2d6c:	mov	x20, x2
    2d70:	mov	x19, x0
    2d74:	mov	x21, x1
    2d78:	cmp	w8, w9
    2d7c:	b.cs	2de4 <_ZN4llvm15SmallVectorImplIN12_GLOBAL__N_15SpillEE12emplace_backIJPNS_11InstructionERPNS_4UserEEEERS2_DpOT_+0x8c>  // b.hs, b.nlast
    2d80:	ldr	x9, [x19]
    2d84:	ldr	x12, [x21]
    2d88:	ldr	x10, [x20]
    2d8c:	mov	w11, #0x18                  	// #24
    2d90:	umaddl	x11, w8, w11, x9
    2d94:	str	x12, [x11], #8
    2d98:	cbz	x10, 2e00 <_ZN4llvm15SmallVectorImplIN12_GLOBAL__N_15SpillEE12emplace_backIJPNS_11InstructionERPNS_4UserEEEERS2_DpOT_+0xa8>
    2d9c:	ldrb	w12, [x10, #16]
    2da0:	cmp	w12, #0x17
    2da4:	b.ls	2e20 <_ZN4llvm15SmallVectorImplIN12_GLOBAL__N_15SpillEE12emplace_backIJPNS_11InstructionERPNS_4UserEEEERS2_DpOT_+0xc8>  // b.plast
    2da8:	mov	w8, w8
    2dac:	str	x10, [x11]
    2db0:	mov	w10, #0x18                  	// #24
    2db4:	madd	x9, x8, x10, x9
    2db8:	mov	w10, #0xffffffff            	// #-1
    2dbc:	str	w10, [x9, #16]
    2dc0:	ldr	w9, [x19, #12]
    2dc4:	cmp	w8, w9
    2dc8:	b.cs	2e40 <_ZN4llvm15SmallVectorImplIN12_GLOBAL__N_15SpillEE12emplace_backIJPNS_11InstructionERPNS_4UserEEEERS2_DpOT_+0xe8>  // b.hs, b.nlast
    2dcc:	add	w8, w8, #0x1
    2dd0:	str	w8, [x19, #8]
    2dd4:	ldp	x20, x19, [sp, #32]
    2dd8:	ldr	x21, [sp, #16]
    2ddc:	ldp	x29, x30, [sp], #48
    2de0:	ret
    2de4:	add	x1, x19, #0x10
    2de8:	mov	w3, #0x18                  	// #24
    2dec:	mov	x0, x19
    2df0:	mov	x2, xzr
    2df4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2df8:	ldr	w8, [x19, #8]
    2dfc:	b	2d80 <_ZN4llvm15SmallVectorImplIN12_GLOBAL__N_15SpillEE12emplace_backIJPNS_11InstructionERPNS_4UserEEEERS2_DpOT_+0x28>
    2e00:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2e04:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2e08:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2e0c:	add	x0, x0, #0x0
    2e10:	add	x1, x1, #0x0
    2e14:	add	x3, x3, #0x0
    2e18:	mov	w2, #0x69                  	// #105
    2e1c:	bl	0 <__assert_fail>
    2e20:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2e24:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2e28:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2e2c:	add	x0, x0, #0x0
    2e30:	add	x1, x1, #0x0
    2e34:	add	x3, x3, #0x0
    2e38:	mov	w2, #0x108                 	// #264
    2e3c:	bl	0 <__assert_fail>
    2e40:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2e44:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2e48:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2e4c:	add	x0, x0, #0x0
    2e50:	add	x1, x1, #0x0
    2e54:	add	x3, x3, #0x0
    2e58:	mov	w2, #0x43                  	// #67
    2e5c:	bl	0 <__assert_fail>

0000000000002e60 <_ZL4dumpN4llvm9StringRefERKNS_11SmallVectorIN12_GLOBAL__N_15SpillELj8EEE>:
    2e60:	stp	x29, x30, [sp, #-64]!
    2e64:	str	x23, [sp, #16]
    2e68:	stp	x22, x21, [sp, #32]
    2e6c:	stp	x20, x19, [sp, #48]
    2e70:	mov	x29, sp
    2e74:	mov	x19, x2
    2e78:	mov	x20, x1
    2e7c:	mov	x21, x0
    2e80:	bl	0 <_ZN4llvm4dbgsEv>
    2e84:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2e88:	add	x1, x1, #0x0
    2e8c:	mov	w2, #0xe                   	// #14
    2e90:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2e94:	mov	x1, x21
    2e98:	mov	x2, x20
    2e9c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2ea0:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2ea4:	add	x1, x1, #0x0
    2ea8:	mov	w2, #0xf                   	// #15
    2eac:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2eb0:	ldr	w8, [x19, #8]
    2eb4:	cbz	w8, 2f0c <_ZL4dumpN4llvm9StringRefERKNS_11SmallVectorIN12_GLOBAL__N_15SpillELj8EEE+0xac>
    2eb8:	ldr	x21, [x19]
    2ebc:	mov	w9, #0x18                  	// #24
    2ec0:	adrp	x19, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2ec4:	mov	x23, xzr
    2ec8:	madd	x22, x8, x9, x21
    2ecc:	add	x19, x19, #0x0
    2ed0:	ldr	x20, [x21]
    2ed4:	cmp	x23, x20
    2ed8:	b.eq	2ee8 <_ZL4dumpN4llvm9StringRefERKNS_11SmallVectorIN12_GLOBAL__N_15SpillELj8EEE+0x88>  // b.none
    2edc:	mov	x0, x20
    2ee0:	bl	0 <_ZNK4llvm5Value4dumpEv>
    2ee4:	mov	x23, x20
    2ee8:	bl	0 <_ZN4llvm4dbgsEv>
    2eec:	mov	w2, #0x9                   	// #9
    2ef0:	mov	x1, x19
    2ef4:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2ef8:	ldr	x0, [x21, #8]
    2efc:	bl	0 <_ZNK4llvm5Value4dumpEv>
    2f00:	add	x21, x21, #0x18
    2f04:	cmp	x21, x22
    2f08:	b.ne	2ed0 <_ZL4dumpN4llvm9StringRefERKNS_11SmallVectorIN12_GLOBAL__N_15SpillELj8EEE+0x70>  // b.any
    2f0c:	ldp	x20, x19, [sp, #48]
    2f10:	ldp	x22, x21, [sp, #32]
    2f14:	ldr	x23, [sp, #16]
    2f18:	ldp	x29, x30, [sp], #64
    2f1c:	ret

0000000000002f20 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE>:
    2f20:	stp	d9, d8, [sp, #-112]!
    2f24:	stp	x29, x30, [sp, #16]
    2f28:	stp	x28, x27, [sp, #32]
    2f2c:	stp	x26, x25, [sp, #48]
    2f30:	stp	x24, x23, [sp, #64]
    2f34:	stp	x22, x21, [sp, #80]
    2f38:	stp	x20, x19, [sp, #96]
    2f3c:	mov	x29, sp
    2f40:	sub	sp, sp, #0x360
    2f44:	ldr	x19, [x1]
    2f48:	mov	x22, x0
    2f4c:	mov	x21, x1
    2f50:	mov	x0, x19
    2f54:	bl	0 <_ZNK4llvm5Value10getContextEv>
    2f58:	ldr	x8, [x19, #40]
    2f5c:	mov	x23, x0
    2f60:	mov	x1, x19
    2f64:	add	x0, x8, #0x28
    2f68:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2f6c:	mov	x1, x0
    2f70:	add	x0, sp, #0x158
    2f74:	mov	x2, xzr
    2f78:	mov	x3, xzr
    2f7c:	mov	x4, xzr
    2f80:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2f84:	ldr	x0, [x21, #176]
    2f88:	mov	w1, wzr
    2f8c:	str	x0, [sp, #336]
    2f90:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
    2f94:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2f98:	mov	x20, x0
    2f9c:	add	x1, x1, #0x0
    2fa0:	add	x0, sp, #0x1a0
    2fa4:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2fa8:	add	x0, sp, #0x158
    2fac:	add	x4, sp, #0x1a0
    2fb0:	mov	w1, #0x31                  	// #49
    2fb4:	mov	x2, x19
    2fb8:	mov	x3, x20
    2fbc:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2fc0:	cbz	x0, 3f98 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1078>
    2fc4:	ldrb	w8, [x0, #16]
    2fc8:	cmp	w8, #0x17
    2fcc:	b.ls	3fb4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1094>  // b.plast
    2fd0:	str	x0, [sp, #328]
    2fd4:	mov	x0, x19
    2fd8:	bl	0 <_ZNK4llvm11Instruction11getFunctionEv>
    2fdc:	adrp	x9, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2fe0:	ldr	d0, [x9]
    2fe4:	add	x8, sp, #0xf8
    2fe8:	mov	x24, x0
    2fec:	add	x9, x8, #0x10
    2ff0:	add	x0, x8, #0x18
    2ff4:	mov	w1, wzr
    2ff8:	str	x9, [sp, #248]
    2ffc:	str	d0, [sp, #256]
    3000:	str	xzr, [sp, #272]
    3004:	str	x0, [sp, #16]
    3008:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    300c:	add	x0, sp, #0xf8
    3010:	str	wzr, [sp, #324]
    3014:	strb	wzr, [sp, #320]
    3018:	stp	xzr, x24, [sp, #304]
    301c:	bl	0 <_ZN4llvm14DomTreeBuilder9CalculateINS_17DominatorTreeBaseINS_10BasicBlockELb0EEEEEvRT_>
    3020:	adrp	x9, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3024:	ldr	d8, [x9]
    3028:	mov	w8, #0xffffffff            	// #-1
    302c:	str	w8, [sp, #244]
    3030:	add	x8, sp, #0xa0
    3034:	add	x8, x8, #0x10
    3038:	str	x8, [sp, #160]
    303c:	str	d8, [sp, #168]
    3040:	ldr	w8, [x21, #168]
    3044:	str	x21, [sp, #64]
    3048:	cbz	w8, 3054 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x134>
    304c:	str	xzr, [sp, #416]
    3050:	b	3078 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x158>
    3054:	ldr	x8, [x21, #208]
    3058:	str	x8, [sp, #416]
    305c:	cbz	x8, 3078 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x158>
    3060:	mov	w8, #0x2                   	// #2
    3064:	add	x0, sp, #0xa0
    3068:	add	x1, sp, #0x1a0
    306c:	add	x2, sp, #0x48
    3070:	str	w8, [sp, #72]
    3074:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3078:	add	x8, sp, #0x158
    307c:	add	x9, sp, #0x150
    3080:	add	x10, sp, #0x148
    3084:	stp	x23, x8, [sp, #128]
    3088:	stp	x9, x10, [sp, #144]
    308c:	ldr	w8, [x22, #8]
    3090:	cbz	w8, 3678 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x758>
    3094:	ldr	x24, [x22]
    3098:	add	x8, x8, x8, lsl #1
    309c:	adrp	x22, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    30a0:	mov	x28, xzr
    30a4:	mov	x25, xzr
    30a8:	mov	x27, xzr
    30ac:	add	x20, sp, #0x48
    30b0:	add	x22, x22, #0x0
    30b4:	mov	w23, #0x100                 	// #256
    30b8:	lsl	x21, x8, #3
    30bc:	ldr	x26, [x24]
    30c0:	mov	x8, x28
    30c4:	cmp	x27, x26
    30c8:	b.eq	3404 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x4e4>  // b.none
    30cc:	ldr	w8, [x24, #16]
    30d0:	cmn	w8, #0x1
    30d4:	b.eq	3e78 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xf58>  // b.none
    30d8:	str	w8, [sp, #244]
    30dc:	cbz	x26, 3e40 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xf20>
    30e0:	ldrb	w8, [x26, #16]
    30e4:	cmp	w8, #0x37
    30e8:	csel	x9, x26, xzr, eq  // eq = none
    30ec:	str	x9, [sp, #120]
    30f0:	cbz	x9, 3114 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1f4>
    30f4:	add	x0, sp, #0xa0
    30f8:	add	x1, sp, #0x78
    30fc:	add	x2, sp, #0xf4
    3100:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3104:	ldr	x0, [sp, #120]
    3108:	bl	0 <_ZNK4llvm10AllocaInst14isStaticAllocaEv>
    310c:	tbnz	w0, #0, 33f8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x4d8>
    3110:	b	3ef8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xfd8>
    3114:	cmp	w8, #0x4e
    3118:	b.gt	315c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x23c>
    311c:	cmp	w8, #0x11
    3120:	b.eq	31d4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x2b4>  // b.none
    3124:	cmp	w8, #0x1d
    3128:	b.ne	3194 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x274>  // b.any
    312c:	ldur	x1, [x26, #-72]
    3130:	cbz	x1, 3fe0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x10c0>
    3134:	ldrb	w8, [x1, #16]
    3138:	cmp	w8, #0x12
    313c:	b.ne	4000 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x10e0>  // b.any
    3140:	ldr	x0, [x26, #40]
    3144:	mov	x2, xzr
    3148:	mov	x3, xzr
    314c:	mov	x4, xzr
    3150:	bl	0 <_ZN4llvm9SplitEdgeEPNS_10BasicBlockES1_PNS_13DominatorTreeEPNS_8LoopInfoEPNS_16MemorySSAUpdaterE>
    3154:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
    3158:	b	32e0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x3c0>
    315c:	cmp	w8, #0x4f
    3160:	b.eq	3204 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x2e4>  // b.none
    3164:	cmp	w8, #0x50
    3168:	b.ne	3194 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x274>  // b.any
    316c:	ldur	x8, [x26, #-24]
    3170:	cbz	x8, 3194 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x274>
    3174:	ldrb	w9, [x8, #16]
    3178:	cbnz	w9, 3194 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x274>
    317c:	ldrb	w9, [x8, #33]
    3180:	tbz	w9, #5, 3194 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x274>
    3184:	ldr	w8, [x8, #36]
    3188:	sub	w8, w8, #0x23
    318c:	cmp	w8, #0x1
    3190:	b.ls	3668 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x748>  // b.plast
    3194:	ldr	x25, [x24]
    3198:	cbz	x25, 3f98 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1078>
    319c:	ldrb	w8, [x25, #16]
    31a0:	cmp	w8, #0x17
    31a4:	b.ls	3fb4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1094>  // b.plast
    31a8:	sub	w8, w8, #0x19
    31ac:	cmp	w8, #0xa
    31b0:	b.ls	4020 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1100>  // b.plast
    31b4:	add	x0, sp, #0xf8
    31b8:	mov	x1, x19
    31bc:	mov	x2, x25
    31c0:	bl	0 <_ZNK4llvm13DominatorTree9dominatesEPKNS_11InstructionES3_>
    31c4:	tbz	w0, #0, 32d0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x3b0>
    31c8:	ldr	x8, [x25, #40]
    31cc:	mov	x1, x25
    31d0:	b	32d8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x3b8>
    31d4:	ldr	x1, [sp, #328]
    31d8:	ldr	x8, [x1, #40]
    31dc:	add	x0, x8, #0x28
    31e0:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    31e4:	ldr	x8, [x26, #24]
    31e8:	cbz	x8, 4040 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1120>
    31ec:	ldr	w1, [x26, #32]
    31f0:	mov	x25, x0
    31f4:	mov	w2, #0x17                  	// #23
    31f8:	mov	x0, x8
    31fc:	bl	0 <_ZN4llvm8Function15removeParamAttrEjNS_9Attribute8AttrKindE>
    3200:	b	32e4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x3c4>
    3204:	ldr	x8, [x24]
    3208:	cbz	x8, 3f98 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1078>
    320c:	ldrb	w9, [x8, #16]
    3210:	cmp	w9, #0x17
    3214:	b.ls	3fb4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1094>  // b.plast
    3218:	ldr	x27, [x8, #40]
    321c:	mov	x0, x27
    3220:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
    3224:	cbz	x0, 4060 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1140>
    3228:	ldrb	w8, [x0, #16]
    322c:	mov	x25, x0
    3230:	cmp	w8, #0x22
    3234:	b.ne	3370 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x450>  // b.any
    3238:	ldr	x27, [x25, #40]
    323c:	adrp	x20, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3240:	add	x20, x20, #0x0
    3244:	add	x0, sp, #0x1a0
    3248:	mov	x1, x20
    324c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3250:	add	x1, x25, #0x18
    3254:	add	x2, sp, #0x1a0
    3258:	mov	x0, x27
    325c:	bl	0 <_ZN4llvm10BasicBlock15splitBasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEERKNS_5TwineE>
    3260:	mov	x28, x0
    3264:	mov	x0, x27
    3268:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
    326c:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    3270:	mov	x0, x25
    3274:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3278:	mov	x25, x0
    327c:	add	x0, sp, #0x1a0
    3280:	mov	x1, x20
    3284:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3288:	mov	w0, #0x38                  	// #56
    328c:	mov	w1, #0x1                   	// #1
    3290:	bl	0 <_ZN4llvm4UsernwEmj>
    3294:	add	x6, sp, #0x1a0
    3298:	mov	w1, #0x33                  	// #51
    329c:	mov	w5, #0x1                   	// #1
    32a0:	mov	x2, x25
    32a4:	mov	x3, xzr
    32a8:	mov	x4, xzr
    32ac:	mov	x7, x27
    32b0:	mov	x20, x0
    32b4:	bl	0 <_ZN4llvm14FuncletPadInstC2ENS_11Instruction13FuncletPadOpsEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_10BasicBlockE>
    32b8:	mov	x0, x20
    32bc:	mov	x1, x28
    32c0:	mov	x2, x27
    32c4:	add	x20, sp, #0x48
    32c8:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    32cc:	b	32e0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x3c0>
    32d0:	ldr	x1, [sp, #328]
    32d4:	ldr	x8, [x1, #40]
    32d8:	add	x0, x8, #0x28
    32dc:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    32e0:	mov	x25, x0
    32e4:	add	x0, sp, #0x158
    32e8:	mov	x1, x25
    32ec:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    32f0:	ldp	x27, x25, [sp, #328]
    32f4:	ldr	w28, [sp, #244]
    32f8:	mov	x0, x26
    32fc:	bl	0 <_ZNK4llvm5Value7getNameEv>
    3300:	stp	x0, x1, [x29, #-32]
    3304:	add	x0, sp, #0x48
    3308:	sub	x1, x29, #0x20
    330c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3310:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3314:	sub	x0, x29, #0x38
    3318:	add	x1, x1, #0x0
    331c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3320:	ldrb	w8, [sp, #88]
    3324:	cbz	w8, 3344 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x424>
    3328:	ldurb	w9, [x29, #-40]
    332c:	cbz	w9, 3344 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x424>
    3330:	cmp	w8, #0x1
    3334:	b.ne	3350 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x430>  // b.any
    3338:	ldur	q0, [x29, #-56]
    333c:	ldur	x8, [x29, #-40]
    3340:	b	3360 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x440>
    3344:	stp	xzr, xzr, [sp, #416]
    3348:	strh	w23, [sp, #432]
    334c:	b	33c8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x4a8>
    3350:	cmp	w9, #0x1
    3354:	b.ne	3390 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x470>  // b.any
    3358:	ldur	q0, [sp, #72]
    335c:	ldr	x8, [sp, #88]
    3360:	add	x9, sp, #0x1a0
    3364:	str	q0, [x9]
    3368:	str	x8, [sp, #432]
    336c:	b	33c8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x4a8>
    3370:	mov	x0, x27
    3374:	bl	0 <_ZNK4llvm10BasicBlock19getFirstInsertionPtEv>
    3378:	ldrb	w8, [x0]
    337c:	tbnz	w8, #2, 3e98 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xf78>
    3380:	sub	x8, x0, #0x18
    3384:	cmp	x0, #0x0
    3388:	csel	x25, xzr, x8, eq  // eq = none
    338c:	b	32e4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x3c4>
    3390:	ldrb	w10, [sp, #89]
    3394:	ldr	x11, [sp, #72]
    3398:	ldurb	w12, [x29, #-39]
    339c:	ldur	x13, [x29, #-56]
    33a0:	cmp	w10, #0x1
    33a4:	mov	w10, #0x2                   	// #2
    33a8:	csel	w2, w8, w10, eq  // eq = none
    33ac:	csel	x1, x11, x20, eq  // eq = none
    33b0:	cmp	w12, #0x1
    33b4:	sub	x8, x29, #0x38
    33b8:	csel	w4, w9, w10, eq  // eq = none
    33bc:	csel	x3, x13, x8, eq  // eq = none
    33c0:	add	x0, sp, #0x1a0
    33c4:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    33c8:	add	x0, sp, #0x158
    33cc:	add	x5, sp, #0x1a0
    33d0:	mov	x1, x25
    33d4:	mov	x2, x27
    33d8:	mov	w3, wzr
    33dc:	mov	w4, w28
    33e0:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    33e4:	mov	x2, x0
    33e8:	add	x0, sp, #0x158
    33ec:	mov	x1, x26
    33f0:	mov	w3, wzr
    33f4:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    33f8:	mov	x25, xzr
    33fc:	mov	x8, xzr
    3400:	mov	x27, x26
    3404:	ldr	x26, [x24, #8]
    3408:	ldr	x28, [x26, #40]
    340c:	cmp	x8, x28
    3410:	b.eq	34ac <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x58c>  // b.none
    3414:	mov	x0, x28
    3418:	bl	0 <_ZNK4llvm10BasicBlock19getFirstInsertionPtEv>
    341c:	ldrb	w8, [x0]
    3420:	tbnz	w8, #2, 3e98 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xf78>
    3424:	ldr	w8, [sp, #244]
    3428:	cmn	w8, #0x1
    342c:	b.eq	3eb8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xf98>  // b.none
    3430:	sub	x8, x0, #0x18
    3434:	cmp	x0, #0x0
    3438:	csel	x1, xzr, x8, eq  // eq = none
    343c:	add	x0, sp, #0x158
    3440:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3444:	ldr	w1, [sp, #244]
    3448:	add	x0, sp, #0x80
    344c:	mov	x2, x27
    3450:	bl	4a78 <_ZZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeEENK3$_1clEjPNS_5ValueE>
    3454:	mov	x25, x0
    3458:	mov	x0, x27
    345c:	bl	0 <_ZNK4llvm5Value7getNameEv>
    3460:	stp	x0, x1, [x29, #-32]
    3464:	add	x0, sp, #0x48
    3468:	sub	x1, x29, #0x20
    346c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3470:	sub	x0, x29, #0x38
    3474:	mov	x1, x22
    3478:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    347c:	ldrb	w8, [sp, #88]
    3480:	cbz	w8, 34a0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x580>
    3484:	ldurb	w9, [x29, #-40]
    3488:	cbz	w9, 34a0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x580>
    348c:	cmp	w8, #0x1
    3490:	b.ne	34b4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x594>  // b.any
    3494:	ldur	q0, [x29, #-56]
    3498:	ldur	x8, [x29, #-40]
    349c:	b	34c4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x5a4>
    34a0:	stp	xzr, xzr, [sp, #416]
    34a4:	strh	w23, [sp, #432]
    34a8:	b	350c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x5ec>
    34ac:	mov	x28, x8
    34b0:	b	3610 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x6f0>
    34b4:	cmp	w9, #0x1
    34b8:	b.ne	34d4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x5b4>  // b.any
    34bc:	ldur	q0, [sp, #72]
    34c0:	ldr	x8, [sp, #88]
    34c4:	add	x9, sp, #0x1a0
    34c8:	str	q0, [x9]
    34cc:	str	x8, [sp, #432]
    34d0:	b	350c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x5ec>
    34d4:	ldrb	w10, [sp, #89]
    34d8:	ldr	x11, [sp, #72]
    34dc:	ldurb	w12, [x29, #-39]
    34e0:	ldur	x13, [x29, #-56]
    34e4:	cmp	w10, #0x1
    34e8:	mov	w10, #0x2                   	// #2
    34ec:	csel	w2, w8, w10, eq  // eq = none
    34f0:	csel	x1, x11, x20, eq  // eq = none
    34f4:	cmp	w12, #0x1
    34f8:	sub	x8, x29, #0x38
    34fc:	csel	w4, w9, w10, eq  // eq = none
    3500:	csel	x3, x13, x8, eq  // eq = none
    3504:	add	x0, sp, #0x1a0
    3508:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    350c:	add	x1, sp, #0x1a0
    3510:	mov	x0, x25
    3514:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
    3518:	cbz	x27, 3e40 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xf20>
    351c:	ldrb	w8, [x27, #16]
    3520:	cmp	w8, #0x37
    3524:	b.eq	360c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x6ec>  // b.none
    3528:	ldr	x9, [sp, #336]
    352c:	ldr	w8, [sp, #244]
    3530:	ldr	w10, [x9, #12]
    3534:	cmp	w10, w8
    3538:	b.ls	3f04 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xfe4>  // b.plast
    353c:	ldr	x9, [x9, #16]
    3540:	mov	x0, x27
    3544:	ldr	x26, [x9, x8, lsl #3]
    3548:	bl	0 <_ZNK4llvm5Value7getNameEv>
    354c:	stp	x0, x1, [x29, #-32]
    3550:	add	x0, sp, #0x48
    3554:	sub	x1, x29, #0x20
    3558:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    355c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3560:	sub	x0, x29, #0x38
    3564:	add	x1, x1, #0x0
    3568:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    356c:	ldrb	w8, [sp, #88]
    3570:	cbz	w8, 3590 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x670>
    3574:	ldurb	w9, [x29, #-40]
    3578:	cbz	w9, 3590 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x670>
    357c:	cmp	w8, #0x1
    3580:	b.ne	359c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x67c>  // b.any
    3584:	ldur	q0, [x29, #-56]
    3588:	ldur	x8, [x29, #-40]
    358c:	b	35ac <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x68c>
    3590:	stp	xzr, xzr, [sp, #416]
    3594:	strh	w23, [sp, #432]
    3598:	b	35f4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x6d4>
    359c:	cmp	w9, #0x1
    35a0:	b.ne	35bc <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x69c>  // b.any
    35a4:	ldur	q0, [sp, #72]
    35a8:	ldr	x8, [sp, #88]
    35ac:	add	x9, sp, #0x1a0
    35b0:	str	q0, [x9]
    35b4:	str	x8, [sp, #432]
    35b8:	b	35f4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x6d4>
    35bc:	ldrb	w10, [sp, #89]
    35c0:	ldr	x11, [sp, #72]
    35c4:	ldurb	w12, [x29, #-39]
    35c8:	ldur	x13, [x29, #-56]
    35cc:	cmp	w10, #0x1
    35d0:	mov	w10, #0x2                   	// #2
    35d4:	csel	w2, w8, w10, eq  // eq = none
    35d8:	csel	x1, x11, x20, eq  // eq = none
    35dc:	cmp	w12, #0x1
    35e0:	sub	x8, x29, #0x38
    35e4:	csel	w4, w9, w10, eq  // eq = none
    35e8:	csel	x3, x13, x8, eq  // eq = none
    35ec:	add	x0, sp, #0x1a0
    35f0:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    35f4:	add	x0, sp, #0x158
    35f8:	add	x3, sp, #0x1a0
    35fc:	mov	x1, x26
    3600:	mov	x2, x25
    3604:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3608:	mov	x25, x0
    360c:	ldr	x26, [x24, #8]
    3610:	cbz	x26, 3e5c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xf3c>
    3614:	ldrb	w8, [x26, #16]
    3618:	cmp	w8, #0x4f
    361c:	b.ne	3648 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x728>  // b.any
    3620:	ldr	w8, [x26, #20]
    3624:	and	w8, w8, #0xfffffff
    3628:	cmp	w8, #0x1
    362c:	b.ne	3ed8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xfb8>  // b.any
    3630:	mov	x0, x26
    3634:	mov	x1, x25
    3638:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    363c:	mov	x0, x26
    3640:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    3644:	b	3658 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x738>
    3648:	mov	x0, x26
    364c:	mov	x1, x27
    3650:	mov	x2, x25
    3654:	bl	0 <_ZN4llvm4User17replaceUsesOfWithEPNS_5ValueES2_>
    3658:	subs	x21, x21, #0x18
    365c:	add	x24, x24, #0x18
    3660:	b.ne	30bc <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x19c>  // b.any
    3664:	b	3678 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x758>
    3668:	ldr	x0, [x26, #40]
    366c:	bl	0 <_ZNK4llvm10BasicBlock18getSingleSuccessorEv>
    3670:	bl	0 <_ZNK4llvm10BasicBlock14getFirstNonPHIEv>
    3674:	b	32e0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x3c0>
    3678:	ldr	x1, [sp, #328]
    367c:	ldr	x22, [x1, #40]
    3680:	add	x0, x22, #0x28
    3684:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3688:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    368c:	mov	x23, x0
    3690:	add	x1, x1, #0x0
    3694:	add	x0, sp, #0x1a0
    3698:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    369c:	add	x1, x23, #0x18
    36a0:	add	x2, sp, #0x1a0
    36a4:	mov	x0, x22
    36a8:	bl	0 <_ZN4llvm10BasicBlock15splitBasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEERKNS_5TwineE>
    36ac:	add	x23, x0, #0x28
    36b0:	mov	x22, x0
    36b4:	mov	x0, x23
    36b8:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    36bc:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    36c0:	mov	x24, x0
    36c4:	add	x1, x1, #0x0
    36c8:	add	x0, sp, #0x1a0
    36cc:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    36d0:	add	x1, x24, #0x18
    36d4:	add	x2, sp, #0x1a0
    36d8:	mov	x0, x22
    36dc:	bl	0 <_ZN4llvm10BasicBlock15splitBasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEERKNS_5TwineE>
    36e0:	ldr	x8, [sp, #64]
    36e4:	mov	x0, x23
    36e8:	str	x22, [x8, #192]
    36ec:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    36f0:	mov	x1, x0
    36f4:	add	x0, sp, #0x158
    36f8:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    36fc:	ldr	w8, [sp, #168]
    3700:	add	x9, sp, #0x48
    3704:	add	x9, x9, #0x10
    3708:	str	x9, [sp, #8]
    370c:	str	x9, [sp, #72]
    3710:	str	d8, [sp, #80]
    3714:	cbz	w8, 3d0c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xdec>
    3718:	ldr	x23, [sp, #160]
    371c:	mov	w20, wzr
    3720:	add	x24, x23, x8, lsl #4
    3724:	ldr	x21, [x23]
    3728:	str	wzr, [sp, #80]
    372c:	mov	x0, x21
    3730:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    3734:	ldr	x8, [x21, #8]
    3738:	str	x8, [sp, #416]
    373c:	cbz	x8, 3794 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x874>
    3740:	add	x0, sp, #0x1a0
    3744:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3748:	cbz	x0, 3da8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xe88>
    374c:	ldrb	w8, [x0, #16]
    3750:	mov	x2, x0
    3754:	cmp	w8, #0x17
    3758:	b.ls	3dc8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xea8>  // b.plast
    375c:	add	x0, sp, #0xf8
    3760:	mov	x1, x19
    3764:	stur	x2, [x29, #-56]
    3768:	bl	0 <_ZNK4llvm13DominatorTree9dominatesEPKNS_11InstructionES3_>
    376c:	tbz	w0, #0, 3780 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x860>
    3770:	add	x0, sp, #0x48
    3774:	sub	x1, x29, #0x38
    3778:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    377c:	b	3784 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x864>
    3780:	mov	w20, #0x1                   	// #1
    3784:	ldr	x8, [sp, #416]
    3788:	cbz	x8, 3de8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xec8>
    378c:	ldr	x8, [x8, #8]
    3790:	b	3738 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x818>
    3794:	ldr	w8, [sp, #80]
    3798:	cbz	w8, 37e0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x8c0>
    379c:	ldr	w1, [x23, #8]
    37a0:	add	x0, sp, #0x80
    37a4:	mov	x2, x21
    37a8:	bl	4a78 <_ZZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeEENK3$_1clEjPNS_5ValueE>
    37ac:	mov	x1, x21
    37b0:	mov	x22, x0
    37b4:	bl	0 <_ZN4llvm5Value8takeNameEPS0_>
    37b8:	ldr	w8, [sp, #80]
    37bc:	cbz	w8, 37e0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x8c0>
    37c0:	ldr	x25, [sp, #72]
    37c4:	lsl	x26, x8, #3
    37c8:	ldr	x0, [x25], #8
    37cc:	mov	x1, x21
    37d0:	mov	x2, x22
    37d4:	bl	0 <_ZN4llvm4User17replaceUsesOfWithEPNS_5ValueES2_>
    37d8:	subs	x26, x26, #0x8
    37dc:	b.ne	37c8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x8a8>  // b.any
    37e0:	add	x23, x23, #0x10
    37e4:	cmp	x23, x24
    37e8:	b.ne	3724 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x804>  // b.any
    37ec:	tbz	w20, #0, 3d0c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xdec>
    37f0:	ldr	x1, [sp, #328]
    37f4:	ldr	x8, [x1, #40]
    37f8:	add	x0, x8, #0x28
    37fc:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3800:	mov	x1, x0
    3804:	add	x0, sp, #0x158
    3808:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    380c:	ldr	w8, [sp, #168]
    3810:	cbz	w8, 3d0c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xdec>
    3814:	ldr	x21, [sp, #160]
    3818:	adrp	x11, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    381c:	adrp	x12, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3820:	ldr	d8, [x11]
    3824:	ldr	d9, [x12]
    3828:	add	x9, sp, #0x1a0
    382c:	sub	x10, x29, #0x38
    3830:	mov	w13, #0x3                   	// #3
    3834:	add	x11, x9, #0x28
    3838:	adrp	x23, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    383c:	mov	w22, #0x1                   	// #1
    3840:	add	x14, x9, #0x8
    3844:	add	x25, x9, #0x18
    3848:	str	x11, [sp, #56]
    384c:	add	x11, x9, #0x110
    3850:	add	x26, x9, #0x160
    3854:	add	x27, x10, #0x8
    3858:	dup	v0.2d, x13
    385c:	add	x8, x21, x8, lsl #4
    3860:	add	x23, x23, #0x0
    3864:	str	x14, [sp, #64]
    3868:	str	x11, [sp, #48]
    386c:	str	q0, [sp, #32]
    3870:	str	x8, [sp, #24]
    3874:	ldr	x28, [x21]
    3878:	mov	x0, x28
    387c:	bl	0 <_ZNK4llvm11Instruction9getModuleEv>
    3880:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
    3884:	ldr	x8, [sp, #64]
    3888:	str	x0, [sp, #416]
    388c:	stp	xzr, xzr, [x8]
    3890:	ldr	x8, [sp, #56]
    3894:	str	d8, [sp, #448]
    3898:	str	xzr, [sp, #648]
    389c:	str	d9, [sp, #672]
    38a0:	str	x8, [sp, #440]
    38a4:	ldr	x8, [sp, #48]
    38a8:	str	wzr, [sp, #680]
    38ac:	str	w22, [sp, #776]
    38b0:	str	xzr, [sp, #768]
    38b4:	str	x8, [sp, #656]
    38b8:	str	x8, [sp, #664]
    38bc:	add	x8, sp, #0xf8
    38c0:	str	x8, [sp, #784]
    38c4:	str	x19, [sp, #792]
    38c8:	ldr	x1, [x28]
    38cc:	ldrb	w8, [x1, #8]
    38d0:	cmp	w8, #0xf
    38d4:	b.ne	3f24 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1004>  // b.any
    38d8:	bl	0 <_ZNK4llvm10DataLayout12getIndexTypeEPNS_4TypeE>
    38dc:	cbz	x0, 3f44 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1024>
    38e0:	ldrb	w8, [x0, #8]
    38e4:	cmp	w8, #0xb
    38e8:	b.ne	3f60 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1040>  // b.any
    38ec:	strb	w22, [sp, #760]
    38f0:	ldr	w8, [x0, #8]
    38f4:	sub	x0, x29, #0x38
    38f8:	mov	x2, xzr
    38fc:	mov	w3, wzr
    3900:	lsr	w1, w8, #8
    3904:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3908:	sub	x1, x29, #0x38
    390c:	mov	x0, x26
    3910:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3914:	ldur	w8, [x29, #-48]
    3918:	cmp	w8, #0x41
    391c:	b.cc	392c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xa0c>  // b.lo, b.ul, b.last
    3920:	ldur	x0, [x29, #-56]
    3924:	cbz	x0, 392c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xa0c>
    3928:	bl	0 <_ZdaPv>
    392c:	add	x8, sp, #0x1a0
    3930:	ldur	q0, [x8, #8]
    3934:	ldr	q1, [sp, #32]
    3938:	add	x0, sp, #0x1a0
    393c:	mov	x1, x28
    3940:	and	v0.16b, v0.16b, v1.16b
    3944:	stur	q0, [x8, #8]
    3948:	bl	0 <_ZN4llvm6detail17PtrUseVisitorBase12enqueueUsersERNS_11InstructionE>
    394c:	ldr	w8, [sp, #448]
    3950:	cbz	w8, 3b60 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xc40>
    3954:	sub	x8, x29, #0x38
    3958:	mov	x0, x25
    395c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3960:	ldur	x8, [x29, #-56]
    3964:	and	x0, x8, #0xfffffffffffffff8
    3968:	ubfx	w9, w8, #2, #1
    396c:	str	x0, [sp, #752]
    3970:	strb	w9, [sp, #760]
    3974:	tbz	w8, #2, 3988 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xa68>
    3978:	mov	x0, x26
    397c:	mov	x1, x27
    3980:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3984:	ldr	x0, [sp, #752]
    3988:	bl	0 <_ZNK4llvm3Use7getUserEv>
    398c:	cbz	x0, 3da8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xe88>
    3990:	ldrb	w8, [x0, #16]
    3994:	mov	x24, x0
    3998:	cmp	w8, #0x17
    399c:	b.ls	3dc8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xea8>  // b.plast
    39a0:	ldr	x0, [sp, #784]
    39a4:	ldr	x2, [sp, #792]
    39a8:	mov	x1, x24
    39ac:	bl	0 <_ZNK4llvm13DominatorTree9dominatesEPKNS_11InstructionES3_>
    39b0:	tbz	w0, #0, 39f4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xad4>
    39b4:	ldrb	w8, [x24, #16]
    39b8:	sub	w8, w8, #0x19
    39bc:	cmp	w8, #0x42
    39c0:	b.hi	3e08 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xee8>  // b.pmore
    39c4:	adr	x9, 39d4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xab4>
    39c8:	ldrb	w10, [x23, x8]
    39cc:	add	x9, x9, x10, lsl #2
    39d0:	br	x9
    39d4:	ldr	x8, [sp, #424]
    39d8:	tst	x24, #0x7
    39dc:	orr	x8, x8, #0x4
    39e0:	str	x8, [sp, #424]
    39e4:	b.ne	3e20 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xf00>  // b.any
    39e8:	and	x8, x8, #0x7
    39ec:	orr	x8, x8, x24
    39f0:	str	x8, [sp, #424]
    39f4:	ldur	w8, [x29, #-40]
    39f8:	ldr	x20, [sp, #424]
    39fc:	cmp	w8, #0x41
    3a00:	b.cc	3a10 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xaf0>  // b.lo, b.ul, b.last
    3a04:	ldur	x0, [x29, #-48]
    3a08:	cbz	x0, 3a10 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xaf0>
    3a0c:	bl	0 <_ZdaPv>
    3a10:	tbz	w20, #2, 394c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xa2c>
    3a14:	b	3b60 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xc40>
    3a18:	ldur	x8, [x24, #-24]
    3a1c:	cbz	x8, 3a28 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xb08>
    3a20:	ldrb	w9, [x8, #16]
    3a24:	cbz	w9, 3af0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xbd0>
    3a28:	tst	x24, #0x7
    3a2c:	b.ne	3f7c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x105c>  // b.any
    3a30:	and	x8, x24, #0xfffffffffffffff9
    3a34:	orr	x1, x8, #0x2
    3a38:	b	3ac0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xba0>
    3a3c:	tst	x24, #0x7
    3a40:	b.ne	3f7c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x105c>  // b.any
    3a44:	and	x1, x24, #0xfffffffffffffff9
    3a48:	b	3ac0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xba0>
    3a4c:	mov	x0, x24
    3a50:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    3a54:	ldr	x8, [x24, #8]
    3a58:	cbz	x8, 39f4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xad4>
    3a5c:	add	x0, sp, #0x1a0
    3a60:	mov	x1, x24
    3a64:	bl	0 <_ZN4llvm6detail17PtrUseVisitorBase18adjustOffsetForGEPERNS_17GetElementPtrInstE>
    3a68:	tbnz	w0, #0, 3aa0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xb80>
    3a6c:	mov	w8, #0x1                   	// #1
    3a70:	sub	x1, x29, #0x20
    3a74:	mov	x0, x26
    3a78:	strb	wzr, [sp, #760]
    3a7c:	stur	w8, [x29, #-24]
    3a80:	stur	xzr, [x29, #-32]
    3a84:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3a88:	ldur	w8, [x29, #-24]
    3a8c:	cmp	w8, #0x41
    3a90:	b.cc	3aa0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xb80>  // b.lo, b.ul, b.last
    3a94:	ldur	x0, [x29, #-32]
    3a98:	cbz	x0, 3aa0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xb80>
    3a9c:	bl	0 <_ZdaPv>
    3aa0:	add	x0, sp, #0x1a0
    3aa4:	mov	x1, x24
    3aa8:	bl	0 <_ZN4llvm6detail17PtrUseVisitorBase12enqueueUsersERNS_11InstructionE>
    3aac:	b	39f4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xad4>
    3ab0:	tst	x24, #0x7
    3ab4:	b.ne	3f7c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x105c>  // b.any
    3ab8:	and	x8, x24, #0xfffffffffffffff9
    3abc:	orr	x1, x8, #0x4
    3ac0:	add	x0, sp, #0x1a0
    3ac4:	bl	4c1c <_ZN4llvm13PtrUseVisitorIN12_GLOBAL__N_116AllocaUseVisitorEE13visitCallSiteENS_8CallSiteE>
    3ac8:	b	39f4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xad4>
    3acc:	ldr	x8, [sp, #432]
    3ad0:	tst	x24, #0x7
    3ad4:	orr	x8, x8, #0x4
    3ad8:	str	x8, [sp, #432]
    3adc:	b.ne	3e20 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xf00>  // b.any
    3ae0:	and	x8, x8, #0x7
    3ae4:	orr	x8, x8, x24
    3ae8:	str	x8, [sp, #432]
    3aec:	b	39f4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xad4>
    3af0:	ldr	w8, [x8, #36]
    3af4:	cmp	w8, #0xad
    3af8:	b.le	3b28 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xc08>
    3afc:	cmp	w8, #0x104
    3b00:	b.gt	3b3c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xc1c>
    3b04:	sub	w8, w8, #0xae
    3b08:	cmp	w8, #0x4
    3b0c:	b.hi	3b50 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xc30>  // b.pmore
    3b10:	mov	w9, #0x1                   	// #1
    3b14:	lsl	w8, w9, w8
    3b18:	mov	w9, #0x15                  	// #21
    3b1c:	tst	w8, w9
    3b20:	b.ne	39f4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xad4>  // b.any
    3b24:	b	3b50 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xc30>
    3b28:	sub	w9, w8, #0x2a
    3b2c:	cmp	w9, #0x3
    3b30:	b.cc	39f4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xad4>  // b.lo, b.ul, b.last
    3b34:	cbz	w8, 3a28 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xb08>
    3b38:	b	3b50 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xc30>
    3b3c:	cmp	w8, #0x105
    3b40:	b.eq	3b50 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xc30>  // b.none
    3b44:	cmp	w8, #0x106
    3b48:	b.eq	3b50 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xc30>  // b.none
    3b4c:	cmp	w8, #0x107
    3b50:	add	x0, sp, #0x1a0
    3b54:	mov	x1, x24
    3b58:	bl	4c84 <_ZN4llvm13PtrUseVisitorIN12_GLOBAL__N_116AllocaUseVisitorEE18visitIntrinsicInstERNS_13IntrinsicInstE>
    3b5c:	b	39f4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xad4>
    3b60:	ldp	x8, x9, [sp, #424]
    3b64:	orr	w10, w9, w8
    3b68:	tbnz	w10, #2, 3c1c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xcfc>
    3b6c:	mov	w20, wzr
    3b70:	ldr	w8, [sp, #776]
    3b74:	cmp	w8, #0x41
    3b78:	b.cc	3b88 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xc68>  // b.lo, b.ul, b.last
    3b7c:	ldr	x0, [sp, #768]
    3b80:	cbz	x0, 3b88 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xc68>
    3b84:	bl	0 <_ZdaPv>
    3b88:	ldr	x0, [sp, #664]
    3b8c:	ldr	x8, [sp, #656]
    3b90:	cmp	x0, x8
    3b94:	b.eq	3b9c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xc7c>  // b.none
    3b98:	bl	0 <free>
    3b9c:	ldr	x8, [sp, #648]
    3ba0:	mov	x0, x25
    3ba4:	add	x8, x8, #0x1
    3ba8:	str	x8, [sp, #648]
    3bac:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3bb0:	cbz	w20, 3c08 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xce8>
    3bb4:	mov	x0, x28
    3bb8:	bl	0 <_ZNK4llvm10AllocaInst17isArrayAllocationEv>
    3bbc:	tbnz	w0, #0, 3fd0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x10b0>
    3bc0:	ldr	w1, [x21, #8]
    3bc4:	add	x0, sp, #0x80
    3bc8:	mov	x2, x28
    3bcc:	bl	4a78 <_ZZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeEENK3$_1clEjPNS_5ValueE>
    3bd0:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3bd4:	mov	x20, x0
    3bd8:	add	x0, sp, #0x1a0
    3bdc:	add	x1, x1, #0x0
    3be0:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3be4:	add	x0, sp, #0x158
    3be8:	add	x2, sp, #0x1a0
    3bec:	mov	x1, x28
    3bf0:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3bf4:	mov	x1, x0
    3bf8:	add	x0, sp, #0x158
    3bfc:	mov	x2, x20
    3c00:	mov	w3, wzr
    3c04:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3c08:	ldr	x8, [sp, #24]
    3c0c:	add	x21, x21, #0x10
    3c10:	cmp	x21, x8
    3c14:	b.ne	3874 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x954>  // b.any
    3c18:	b	3d0c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xdec>
    3c1c:	and	x10, x9, #0xfffffffffffffff8
    3c20:	and	x8, x8, #0xfffffffffffffff8
    3c24:	tst	x9, #0xfffffffffffffff8
    3c28:	csel	x24, x8, x10, eq  // eq = none
    3c2c:	mov	w20, #0x1                   	// #1
    3c30:	cbz	x24, 3b70 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xc50>
    3c34:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
    3c38:	ldr	x8, [x8]
    3c3c:	ldrb	w8, [x8]
    3c40:	cbz	w8, 3b70 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xc50>
    3c44:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3c48:	add	x0, x0, #0x0
    3c4c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    3c50:	tbz	w0, #0, 3c88 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xd68>
    3c54:	bl	0 <_ZN4llvm4dbgsEv>
    3c58:	ldp	x9, x8, [x0, #16]
    3c5c:	mov	x22, x0
    3c60:	sub	x9, x9, x8
    3c64:	cmp	x9, #0x2d
    3c68:	b.hi	3c90 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xd70>  // b.pmore
    3c6c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3c70:	mov	w2, #0x2e                  	// #46
    3c74:	mov	x0, x22
    3c78:	add	x1, x1, #0x0
    3c7c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3c80:	mov	x22, x0
    3c84:	b	3cb4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xd94>
    3c88:	mov	w20, #0x1                   	// #1
    3c8c:	b	3b70 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xc50>
    3c90:	adrp	x9, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3c94:	add	x9, x9, #0x0
    3c98:	ldur	q0, [x9, #30]
    3c9c:	ldp	q2, q1, [x9]
    3ca0:	stur	q0, [x8, #30]
    3ca4:	stp	q2, q1, [x8]
    3ca8:	ldr	x8, [x22, #24]
    3cac:	add	x8, x8, #0x2e
    3cb0:	str	x8, [x22, #24]
    3cb4:	mov	x0, x24
    3cb8:	mov	x1, x22
    3cbc:	mov	w2, wzr
    3cc0:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
    3cc4:	ldp	x9, x8, [x22, #16]
    3cc8:	cmp	x9, x8
    3ccc:	b.ne	3cec <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xdcc>  // b.any
    3cd0:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3cd4:	mov	w2, #0x1                   	// #1
    3cd8:	mov	x0, x22
    3cdc:	add	x1, x1, #0x0
    3ce0:	mov	w20, #0x1                   	// #1
    3ce4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3ce8:	b	3d04 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xde4>
    3cec:	mov	w9, #0xa                   	// #10
    3cf0:	strb	w9, [x8]
    3cf4:	ldr	x8, [x22, #24]
    3cf8:	mov	w20, #0x1                   	// #1
    3cfc:	add	x8, x8, #0x1
    3d00:	str	x8, [x22, #24]
    3d04:	mov	w22, #0x1                   	// #1
    3d08:	b	3b70 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xc50>
    3d0c:	ldr	x0, [sp, #72]
    3d10:	ldr	x8, [sp, #8]
    3d14:	ldr	x19, [sp, #328]
    3d18:	cmp	x0, x8
    3d1c:	b.eq	3d24 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xe04>  // b.none
    3d20:	bl	0 <free>
    3d24:	ldr	x0, [sp, #160]
    3d28:	add	x8, sp, #0xa0
    3d2c:	add	x8, x8, #0x10
    3d30:	cmp	x0, x8
    3d34:	b.eq	3d3c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xe1c>  // b.none
    3d38:	bl	0 <free>
    3d3c:	ldr	x0, [sp, #16]
    3d40:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3d44:	ldr	x0, [sp, #280]
    3d48:	bl	0 <_ZdlPv>
    3d4c:	ldr	x8, [sp, #272]
    3d50:	ldr	x0, [sp, #248]
    3d54:	add	x9, sp, #0xf8
    3d58:	add	x9, x9, #0x10
    3d5c:	add	x8, x8, #0x1
    3d60:	cmp	x0, x9
    3d64:	str	x8, [sp, #272]
    3d68:	b.eq	3d70 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xe50>  // b.none
    3d6c:	bl	0 <free>
    3d70:	ldr	x1, [sp, #344]
    3d74:	cbz	x1, 3d80 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xe60>
    3d78:	add	x0, sp, #0x158
    3d7c:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    3d80:	mov	x0, x19
    3d84:	add	sp, sp, #0x360
    3d88:	ldp	x20, x19, [sp, #96]
    3d8c:	ldp	x22, x21, [sp, #80]
    3d90:	ldp	x24, x23, [sp, #64]
    3d94:	ldp	x26, x25, [sp, #48]
    3d98:	ldp	x28, x27, [sp, #32]
    3d9c:	ldp	x29, x30, [sp, #16]
    3da0:	ldp	d9, d8, [sp], #112
    3da4:	ret
    3da8:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3dac:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3db0:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3db4:	add	x0, x0, #0x0
    3db8:	add	x1, x1, #0x0
    3dbc:	add	x3, x3, #0x0
    3dc0:	mov	w2, #0x69                  	// #105
    3dc4:	bl	0 <__assert_fail>
    3dc8:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3dcc:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3dd0:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3dd4:	add	x0, x0, #0x0
    3dd8:	add	x1, x1, #0x0
    3ddc:	add	x3, x3, #0x0
    3de0:	mov	w2, #0x108                 	// #264
    3de4:	bl	0 <__assert_fail>
    3de8:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3dec:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3df0:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3df4:	add	x0, x0, #0x0
    3df8:	add	x1, x1, #0x0
    3dfc:	add	x3, x3, #0x0
    3e00:	mov	w2, #0x8d                  	// #141
    3e04:	bl	0 <__assert_fail>
    3e08:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e0c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e10:	add	x0, x0, #0x0
    3e14:	add	x1, x1, #0x0
    3e18:	mov	w2, #0x7a                  	// #122
    3e1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    3e20:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e24:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e28:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e2c:	add	x0, x0, #0x0
    3e30:	add	x1, x1, #0x0
    3e34:	add	x3, x3, #0x0
    3e38:	mov	w2, #0xb3                  	// #179
    3e3c:	bl	0 <__assert_fail>
    3e40:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e44:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e48:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e4c:	add	x0, x0, #0x0
    3e50:	add	x1, x1, #0x0
    3e54:	add	x3, x3, #0x0
    3e58:	b	3dc0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xea0>
    3e5c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e60:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e64:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e68:	add	x0, x0, #0x0
    3e6c:	add	x1, x1, #0x0
    3e70:	add	x3, x3, #0x0
    3e74:	b	3dc0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xea0>
    3e78:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e7c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e80:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e84:	add	x0, x0, #0x0
    3e88:	add	x1, x1, #0x0
    3e8c:	add	x3, x3, #0x0
    3e90:	mov	w2, #0x133                 	// #307
    3e94:	bl	0 <__assert_fail>
    3e98:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e9c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3ea0:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3ea4:	add	x0, x0, #0x0
    3ea8:	add	x1, x1, #0x0
    3eac:	add	x3, x3, #0x0
    3eb0:	mov	w2, #0x8b                  	// #139
    3eb4:	bl	0 <__assert_fail>
    3eb8:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3ebc:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3ec0:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3ec4:	add	x0, x0, #0x0
    3ec8:	add	x1, x1, #0x0
    3ecc:	add	x3, x3, #0x0
    3ed0:	mov	w2, #0x281                 	// #641
    3ed4:	bl	0 <__assert_fail>
    3ed8:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3edc:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3ee0:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3ee4:	add	x0, x0, #0x0
    3ee8:	add	x1, x1, #0x0
    3eec:	add	x3, x3, #0x0
    3ef0:	mov	w2, #0x2dd                 	// #733
    3ef4:	bl	0 <__assert_fail>
    3ef8:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3efc:	add	x0, x0, #0x0
    3f00:	b	3fd8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x10b8>
    3f04:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f08:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f0c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f10:	add	x0, x0, #0x0
    3f14:	add	x1, x1, #0x0
    3f18:	add	x3, x3, #0x0
    3f1c:	mov	w2, #0x160                 	// #352
    3f20:	bl	0 <__assert_fail>
    3f24:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f28:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f2c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f30:	add	x0, x0, #0x0
    3f34:	add	x1, x1, #0x0
    3f38:	add	x3, x3, #0x0
    3f3c:	mov	w2, #0xe0                  	// #224
    3f40:	bl	0 <__assert_fail>
    3f44:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f48:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f4c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f50:	add	x0, x0, #0x0
    3f54:	add	x1, x1, #0x0
    3f58:	add	x3, x3, #0x0
    3f5c:	b	3dc0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xea0>
    3f60:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f64:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f68:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f6c:	add	x0, x0, #0x0
    3f70:	add	x1, x1, #0x0
    3f74:	add	x3, x3, #0x0
    3f78:	b	3de0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xec0>
    3f7c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f80:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f84:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f88:	add	x0, x0, #0x0
    3f8c:	add	x1, x1, #0x0
    3f90:	add	x3, x3, #0x0
    3f94:	b	3e38 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xf18>
    3f98:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f9c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3fa0:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3fa4:	add	x0, x0, #0x0
    3fa8:	add	x1, x1, #0x0
    3fac:	add	x3, x3, #0x0
    3fb0:	b	3dc0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xea0>
    3fb4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3fb8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3fbc:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3fc0:	add	x0, x0, #0x0
    3fc4:	add	x1, x1, #0x0
    3fc8:	add	x3, x3, #0x0
    3fcc:	b	3de0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xec0>
    3fd0:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3fd4:	add	x0, x0, #0x0
    3fd8:	mov	w1, #0x1                   	// #1
    3fdc:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    3fe0:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3fe4:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3fe8:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3fec:	add	x0, x0, #0x0
    3ff0:	add	x1, x1, #0x0
    3ff4:	add	x3, x3, #0x0
    3ff8:	mov	w2, #0x5b                  	// #91
    3ffc:	bl	0 <__assert_fail>
    4000:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4004:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4008:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    400c:	add	x0, x0, #0x0
    4010:	add	x1, x1, #0x0
    4014:	add	x3, x3, #0x0
    4018:	mov	w2, #0xfa                  	// #250
    401c:	bl	0 <__assert_fail>
    4020:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4024:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4028:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    402c:	add	x0, x0, #0x0
    4030:	add	x1, x1, #0x0
    4034:	add	x3, x3, #0x0
    4038:	mov	w2, #0x2be                 	// #702
    403c:	bl	0 <__assert_fail>
    4040:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4044:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4048:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    404c:	add	x0, x0, #0x0
    4050:	add	x1, x1, #0x0
    4054:	add	x3, x3, #0x0
    4058:	mov	w2, #0x30                  	// #48
    405c:	bl	0 <__assert_fail>
    4060:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4064:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4068:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    406c:	add	x0, x0, #0x0
    4070:	add	x1, x1, #0x0
    4074:	add	x3, x3, #0x0
    4078:	b	3dc0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xea0>

000000000000407c <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE>:
    407c:	stp	x29, x30, [sp, #-48]!
    4080:	stp	x22, x21, [sp, #16]
    4084:	stp	x20, x19, [sp, #32]
    4088:	mov	x29, sp
    408c:	mov	x20, x1
    4090:	mov	x19, x0
    4094:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    4098:	ldr	x22, [x19, #8]
    409c:	cbz	x22, 4124 <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE+0xa8>
    40a0:	mov	x21, x22
    40a4:	ldr	x22, [x22, #8]
    40a8:	mov	x0, x21
    40ac:	bl	0 <_ZNK4llvm3Use7getUserEv>
    40b0:	cbz	x0, 4140 <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE+0xc4>
    40b4:	ldrb	w8, [x0, #16]
    40b8:	sub	w9, w8, #0x38
    40bc:	cmp	w9, #0x2
    40c0:	b.cc	409c <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE+0x20>  // b.lo, b.ul, b.last
    40c4:	cmp	w8, #0x1d
    40c8:	b.eq	40d4 <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE+0x58>  // b.none
    40cc:	cmp	w8, #0x50
    40d0:	b.ne	4160 <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE+0xe4>  // b.any
    40d4:	mov	x1, x19
    40d8:	mov	x2, x20
    40dc:	bl	41a0 <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE>
    40e0:	ldr	x8, [x21]
    40e4:	cbz	x8, 410c <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE+0x90>
    40e8:	ldp	x9, x8, [x21, #8]
    40ec:	and	x8, x8, #0xfffffffffffffffc
    40f0:	str	x9, [x8]
    40f4:	ldr	x9, [x21, #8]
    40f8:	cbz	x9, 410c <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE+0x90>
    40fc:	ldr	x10, [x9, #16]
    4100:	and	x10, x10, #0x3
    4104:	orr	x8, x10, x8
    4108:	str	x8, [x9, #16]
    410c:	str	x0, [x21]
    4110:	cbz	x0, 409c <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE+0x20>
    4114:	add	x1, x0, #0x8
    4118:	mov	x0, x21
    411c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4120:	b	409c <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE+0x20>
    4124:	mov	x0, x19
    4128:	bl	0 <_ZN4llvm18isAllocaPromotableEPKNS_10AllocaInstE>
    412c:	tbz	w0, #0, 4180 <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE+0x104>
    4130:	ldp	x20, x19, [sp, #32]
    4134:	ldp	x22, x21, [sp, #16]
    4138:	ldp	x29, x30, [sp], #48
    413c:	ret
    4140:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4144:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4148:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    414c:	add	x0, x0, #0x0
    4150:	add	x1, x1, #0x0
    4154:	add	x3, x3, #0x0
    4158:	mov	w2, #0x69                  	// #105
    415c:	bl	0 <__assert_fail>
    4160:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4164:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4168:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    416c:	add	x0, x0, #0x0
    4170:	add	x1, x1, #0x0
    4174:	add	x3, x3, #0x0
    4178:	mov	w2, #0x4d8                 	// #1240
    417c:	bl	0 <__assert_fail>
    4180:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4184:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4188:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    418c:	add	x0, x0, #0x0
    4190:	add	x1, x1, #0x0
    4194:	add	x3, x3, #0x0
    4198:	mov	w2, #0x4e2                 	// #1250
    419c:	bl	0 <__assert_fail>

00000000000041a0 <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE>:
    41a0:	sub	sp, sp, #0xa0
    41a4:	stp	x29, x30, [sp, #96]
    41a8:	str	x23, [sp, #112]
    41ac:	stp	x22, x21, [sp, #128]
    41b0:	stp	x20, x19, [sp, #144]
    41b4:	add	x29, sp, #0x60
    41b8:	ldr	x22, [x1, #56]
    41bc:	mov	x23, x0
    41c0:	mov	x20, x2
    41c4:	mov	x19, x1
    41c8:	mov	x0, sp
    41cc:	mov	x1, x23
    41d0:	mov	x2, xzr
    41d4:	mov	x3, xzr
    41d8:	mov	x4, xzr
    41dc:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    41e0:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    41e4:	add	x1, x1, #0x0
    41e8:	sub	x0, x29, #0x18
    41ec:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    41f0:	mov	x0, sp
    41f4:	sub	x3, x29, #0x18
    41f8:	mov	x1, x22
    41fc:	mov	x2, x19
    4200:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4204:	mov	x1, x0
    4208:	mov	x0, sp
    420c:	mov	x2, x20
    4210:	bl	4388 <_ZL22emitSetSwiftErrorValueRN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueERNS_4coro5ShapeE>
    4214:	cbz	x23, 4308 <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE+0x168>
    4218:	ldrb	w8, [x23, #16]
    421c:	mov	x21, x0
    4220:	cmp	w8, #0x1d
    4224:	b.eq	4244 <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE+0xa4>  // b.none
    4228:	cmp	w8, #0x50
    422c:	b.ne	4328 <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE+0x188>  // b.any
    4230:	ldr	x8, [x23, #40]
    4234:	mov	x1, x23
    4238:	add	x0, x8, #0x28
    423c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4240:	b	425c <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE+0xbc>
    4244:	ldur	x0, [x23, #-72]
    4248:	cbz	x0, 4348 <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE+0x1a8>
    424c:	ldrb	w8, [x0, #16]
    4250:	cmp	w8, #0x12
    4254:	b.ne	4368 <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE+0x1c8>  // b.any
    4258:	bl	0 <_ZNK4llvm10BasicBlock19getFirstNonPHIOrDbgEv>
    425c:	mov	x1, x0
    4260:	mov	x0, sp
    4264:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4268:	mov	x0, x22
    426c:	mov	x1, xzr
    4270:	mov	x2, xzr
    4274:	mov	w3, wzr
    4278:	bl	0 <_ZN4llvm12FunctionType3getEPNS_4TypeENS_8ArrayRefIS2_EEb>
    427c:	mov	w1, wzr
    4280:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
    4284:	bl	0 <_ZN4llvm19ConstantPointerNull3getEPNS_11PointerTypeE>
    4288:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    428c:	mov	x22, x0
    4290:	add	x1, x1, #0x0
    4294:	sub	x0, x29, #0x18
    4298:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    429c:	mov	x0, sp
    42a0:	sub	x4, x29, #0x18
    42a4:	mov	x1, x22
    42a8:	mov	x2, xzr
    42ac:	mov	x3, xzr
    42b0:	mov	x5, xzr
    42b4:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    42b8:	stur	x0, [x29, #-24]
    42bc:	add	x0, x20, #0x88
    42c0:	sub	x1, x29, #0x18
    42c4:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    42c8:	ldur	x1, [x29, #-24]
    42cc:	mov	x0, sp
    42d0:	mov	x2, x19
    42d4:	mov	w3, wzr
    42d8:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    42dc:	ldr	x1, [sp]
    42e0:	cbz	x1, 42ec <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE+0x14c>
    42e4:	mov	x0, sp
    42e8:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    42ec:	mov	x0, x21
    42f0:	ldp	x20, x19, [sp, #144]
    42f4:	ldp	x22, x21, [sp, #128]
    42f8:	ldr	x23, [sp, #112]
    42fc:	ldp	x29, x30, [sp, #96]
    4300:	add	sp, sp, #0xa0
    4304:	ret
    4308:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    430c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4310:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4314:	add	x0, x0, #0x0
    4318:	add	x1, x1, #0x0
    431c:	add	x3, x3, #0x0
    4320:	mov	w2, #0x69                  	// #105
    4324:	bl	0 <__assert_fail>
    4328:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    432c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4330:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4334:	add	x0, x0, #0x0
    4338:	add	x1, x1, #0x0
    433c:	add	x3, x3, #0x0
    4340:	mov	w2, #0x108                 	// #264
    4344:	bl	0 <__assert_fail>
    4348:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    434c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4350:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4354:	add	x0, x0, #0x0
    4358:	add	x1, x1, #0x0
    435c:	add	x3, x3, #0x0
    4360:	mov	w2, #0x5b                  	// #91
    4364:	bl	0 <__assert_fail>
    4368:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    436c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4370:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4374:	add	x0, x0, #0x0
    4378:	add	x1, x1, #0x0
    437c:	add	x3, x3, #0x0
    4380:	mov	w2, #0xfa                  	// #250
    4384:	bl	0 <__assert_fail>

0000000000004388 <_ZL22emitSetSwiftErrorValueRN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueERNS_4coro5ShapeE>:
    4388:	sub	sp, sp, #0x50
    438c:	stp	x29, x30, [sp, #32]
    4390:	stp	x22, x21, [sp, #48]
    4394:	stp	x20, x19, [sp, #64]
    4398:	add	x29, sp, #0x20
    439c:	ldr	x8, [x1]
    43a0:	mov	x20, x1
    43a4:	mov	x21, x0
    43a8:	mov	w1, wzr
    43ac:	mov	x0, x8
    43b0:	mov	x19, x2
    43b4:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
    43b8:	ldr	x8, [x20]
    43bc:	mov	x1, sp
    43c0:	mov	w2, #0x1                   	// #1
    43c4:	mov	w3, wzr
    43c8:	str	x8, [sp]
    43cc:	bl	0 <_ZN4llvm12FunctionType3getEPNS_4TypeENS_8ArrayRefIS2_EEb>
    43d0:	mov	w1, wzr
    43d4:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
    43d8:	bl	0 <_ZN4llvm19ConstantPointerNull3getEPNS_11PointerTypeE>
    43dc:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    43e0:	mov	x22, x0
    43e4:	add	x1, x1, #0x0
    43e8:	mov	x0, sp
    43ec:	stur	x20, [x29, #-8]
    43f0:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    43f4:	sub	x2, x29, #0x8
    43f8:	mov	x4, sp
    43fc:	mov	w3, #0x1                   	// #1
    4400:	mov	x0, x21
    4404:	mov	x1, x22
    4408:	mov	x5, xzr
    440c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4410:	str	x0, [sp]
    4414:	add	x0, x19, #0x88
    4418:	mov	x1, sp
    441c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4420:	ldr	x0, [sp]
    4424:	ldp	x20, x19, [sp, #64]
    4428:	ldp	x22, x21, [sp, #48]
    442c:	ldp	x29, x30, [sp, #32]
    4430:	add	sp, sp, #0x50
    4434:	ret

0000000000004438 <_ZL20splitBlockIfNotFirstPN4llvm11InstructionERKNS_5TwineE>:
    4438:	stp	x29, x30, [sp, #-48]!
    443c:	str	x21, [sp, #16]
    4440:	stp	x20, x19, [sp, #32]
    4444:	mov	x29, sp
    4448:	ldr	x20, [x0, #40]
    444c:	mov	x21, x0
    4450:	mov	x19, x1
    4454:	add	x0, x20, #0x28
    4458:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    445c:	cmp	x0, x21
    4460:	b.eq	4480 <_ZL20splitBlockIfNotFirstPN4llvm11InstructionERKNS_5TwineE+0x48>  // b.none
    4464:	add	x1, x21, #0x18
    4468:	mov	x0, x20
    446c:	mov	x2, x19
    4470:	ldp	x20, x19, [sp, #32]
    4474:	ldr	x21, [sp, #16]
    4478:	ldp	x29, x30, [sp], #48
    447c:	b	0 <_ZN4llvm10BasicBlock15splitBasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEERKNS_5TwineE>
    4480:	mov	x0, x20
    4484:	bl	0 <_ZNK4llvm10BasicBlock20getSinglePredecessorEv>
    4488:	cbz	x0, 4464 <_ZL20splitBlockIfNotFirstPN4llvm11InstructionERKNS_5TwineE+0x2c>
    448c:	mov	x0, x20
    4490:	mov	x1, x19
    4494:	ldp	x20, x19, [sp, #32]
    4498:	ldr	x21, [sp, #16]
    449c:	ldp	x29, x30, [sp], #48
    44a0:	b	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>

00000000000044a4 <_ZN12_GLOBAL__N_119SuspendCrossingInfo12getBlockDataEPN4llvm10BasicBlockE>:
    44a4:	stp	x29, x30, [sp, #-32]!
    44a8:	str	x19, [sp, #16]
    44ac:	mov	x29, sp
    44b0:	mov	x19, x0
    44b4:	bl	44fc <_ZNK12_GLOBAL__N_119BlockToIndexMapping12blockToIndexEPN4llvm10BasicBlockE>
    44b8:	ldr	w8, [x19, #280]
    44bc:	cmp	x0, x8
    44c0:	b.cs	44dc <_ZN12_GLOBAL__N_119SuspendCrossingInfo12getBlockDataEPN4llvm10BasicBlockE+0x38>  // b.hs, b.nlast
    44c4:	ldr	x8, [x19, #272]
    44c8:	ldr	x19, [sp, #16]
    44cc:	mov	w9, #0x38                  	// #56
    44d0:	madd	x0, x0, x9, x8
    44d4:	ldp	x29, x30, [sp], #32
    44d8:	ret
    44dc:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    44e0:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    44e4:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    44e8:	add	x0, x0, #0x0
    44ec:	add	x1, x1, #0x0
    44f0:	add	x3, x3, #0x0
    44f4:	mov	w2, #0x95                  	// #149
    44f8:	bl	0 <__assert_fail>

00000000000044fc <_ZNK12_GLOBAL__N_119BlockToIndexMapping12blockToIndexEPN4llvm10BasicBlockE>:
    44fc:	stp	x29, x30, [sp, #-16]!
    4500:	mov	x29, sp
    4504:	ldr	w10, [x0, #8]
    4508:	ldr	x8, [x0]
    450c:	cbz	w10, 4548 <_ZNK12_GLOBAL__N_119BlockToIndexMapping12blockToIndexEPN4llvm10BasicBlockE+0x4c>
    4510:	mov	x11, #0xffffffffffffffff    	// #-1
    4514:	mov	x9, x8
    4518:	mov	x12, x10
    451c:	lsr	x13, x12, #1
    4520:	add	x14, x9, x13, lsl #3
    4524:	ldr	x15, [x14], #8
    4528:	eor	x16, x11, x12, lsr #1
    452c:	add	x12, x12, x16
    4530:	cmp	x15, x1
    4534:	csel	x12, x12, x13, cc  // cc = lo, ul, last
    4538:	csel	x9, x14, x9, cc  // cc = lo, ul, last
    453c:	cmp	x12, #0x0
    4540:	b.gt	451c <_ZNK12_GLOBAL__N_119BlockToIndexMapping12blockToIndexEPN4llvm10BasicBlockE+0x20>
    4544:	b	4550 <_ZNK12_GLOBAL__N_119BlockToIndexMapping12blockToIndexEPN4llvm10BasicBlockE+0x54>
    4548:	mov	x10, xzr
    454c:	mov	x9, x8
    4550:	add	x10, x8, x10, lsl #3
    4554:	cmp	x9, x10
    4558:	b.eq	4578 <_ZNK12_GLOBAL__N_119BlockToIndexMapping12blockToIndexEPN4llvm10BasicBlockE+0x7c>  // b.none
    455c:	ldr	x10, [x9]
    4560:	cmp	x10, x1
    4564:	b.ne	4578 <_ZNK12_GLOBAL__N_119BlockToIndexMapping12blockToIndexEPN4llvm10BasicBlockE+0x7c>  // b.any
    4568:	sub	x8, x9, x8
    456c:	asr	x0, x8, #3
    4570:	ldp	x29, x30, [sp], #16
    4574:	ret
    4578:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    457c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4580:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4584:	add	x0, x0, #0x0
    4588:	add	x1, x1, #0x0
    458c:	add	x3, x3, #0x0
    4590:	mov	w2, #0x3a                  	// #58
    4594:	bl	0 <__assert_fail>

0000000000004598 <_ZN4llvm23SmallVectorTemplateBaseIN12_GLOBAL__N_119SuspendCrossingInfo9BlockDataELb0EE13destroy_rangeEPS3_S5_>:
    4598:	stp	x29, x30, [sp, #-32]!
    459c:	stp	x20, x19, [sp, #16]
    45a0:	mov	x29, sp
    45a4:	cmp	x1, x0
    45a8:	b.eq	45cc <_ZN4llvm23SmallVectorTemplateBaseIN12_GLOBAL__N_119SuspendCrossingInfo9BlockDataELb0EE13destroy_rangeEPS3_S5_+0x34>  // b.none
    45ac:	mov	x19, x1
    45b0:	mov	x20, x0
    45b4:	ldur	x0, [x19, #-32]
    45b8:	bl	0 <free>
    45bc:	ldr	x0, [x19, #-56]!
    45c0:	bl	0 <free>
    45c4:	cmp	x20, x19
    45c8:	b.ne	45b4 <_ZN4llvm23SmallVectorTemplateBaseIN12_GLOBAL__N_119SuspendCrossingInfo9BlockDataELb0EE13destroy_rangeEPS3_S5_+0x1c>  // b.any
    45cc:	ldp	x20, x19, [sp, #16]
    45d0:	ldp	x29, x30, [sp], #32
    45d4:	ret

00000000000045d8 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE>:
    45d8:	stp	x29, x30, [sp, #-64]!
    45dc:	str	x23, [sp, #16]
    45e0:	stp	x22, x21, [sp, #32]
    45e4:	stp	x20, x19, [sp, #48]
    45e8:	mov	x29, sp
    45ec:	cbz	x2, 4860 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x288>
    45f0:	ldrb	w8, [x2, #16]
    45f4:	cmp	w8, #0x17
    45f8:	b.ls	4880 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x2a8>  // b.plast
    45fc:	mov	x19, x1
    4600:	mov	x20, x0
    4604:	cmp	w8, #0x4f
    4608:	b.ne	4620 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x48>  // b.any
    460c:	ldr	w8, [x2, #20]
    4610:	tst	w8, #0xffffffe
    4614:	b.eq	4680 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0xa8>  // b.none
    4618:	mov	w20, wzr
    461c:	b	4828 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x250>
    4620:	ldr	x21, [x2, #40]
    4624:	cmp	w8, #0x50
    4628:	b.ne	4684 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0xac>  // b.any
    462c:	ldur	x8, [x2, #-24]
    4630:	cbz	x8, 4684 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0xac>
    4634:	ldrb	w9, [x8, #16]
    4638:	cbnz	w9, 4684 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0xac>
    463c:	ldrb	w9, [x8, #33]
    4640:	tbz	w9, #5, 4684 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0xac>
    4644:	ldr	w8, [x8, #36]
    4648:	cmp	w8, #0x24
    464c:	b.ne	4684 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0xac>  // b.any
    4650:	mov	x0, x21
    4654:	bl	0 <_ZNK4llvm10BasicBlock20getSinglePredecessorEv>
    4658:	mov	x21, x0
    465c:	cbnz	x0, 4684 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0xac>
    4660:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4664:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4668:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    466c:	add	x0, x0, #0x0
    4670:	add	x1, x1, #0x0
    4674:	add	x3, x3, #0x0
    4678:	mov	w2, #0x83                  	// #131
    467c:	bl	0 <__assert_fail>
    4680:	ldr	x21, [x2, #40]
    4684:	mov	x0, x20
    4688:	mov	x1, x19
    468c:	bl	44fc <_ZNK12_GLOBAL__N_119BlockToIndexMapping12blockToIndexEPN4llvm10BasicBlockE>
    4690:	mov	x22, x0
    4694:	mov	x0, x20
    4698:	mov	x1, x21
    469c:	bl	44fc <_ZNK12_GLOBAL__N_119BlockToIndexMapping12blockToIndexEPN4llvm10BasicBlockE>
    46a0:	ldr	w8, [x20, #280]
    46a4:	cmp	x0, x8
    46a8:	b.cs	4840 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x268>  // b.hs, b.nlast
    46ac:	ldr	x8, [x20, #272]
    46b0:	mov	w9, #0x38                  	// #56
    46b4:	mov	x23, x0
    46b8:	mov	w1, w22
    46bc:	madd	x0, x0, x9, x8
    46c0:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    46c4:	tbz	w0, #0, 48a0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x2c8>
    46c8:	ldr	w8, [x20, #280]
    46cc:	cmp	x23, x8
    46d0:	b.cs	4840 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x268>  // b.hs, b.nlast
    46d4:	ldr	x8, [x20, #272]
    46d8:	mov	w9, #0x38                  	// #56
    46dc:	mov	w1, w22
    46e0:	madd	x8, x23, x9, x8
    46e4:	add	x0, x8, #0x18
    46e8:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    46ec:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
    46f0:	ldr	x8, [x8]
    46f4:	mov	w20, w0
    46f8:	ldrb	w8, [x8]
    46fc:	cbz	w8, 4828 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x250>
    4700:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4704:	add	x0, x0, #0x0
    4708:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    470c:	tbz	w0, #0, 4828 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x250>
    4710:	bl	0 <_ZN4llvm4dbgsEv>
    4714:	mov	x22, x0
    4718:	mov	x0, x21
    471c:	bl	0 <_ZNK4llvm5Value7getNameEv>
    4720:	mov	x2, x0
    4724:	mov	x3, x1
    4728:	mov	x0, x22
    472c:	mov	x1, x2
    4730:	mov	x2, x3
    4734:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4738:	ldp	x9, x8, [x0, #16]
    473c:	mov	x21, x0
    4740:	sub	x9, x9, x8
    4744:	cmp	x9, #0x3
    4748:	b.hi	4768 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x190>  // b.pmore
    474c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4750:	add	x1, x1, #0x0
    4754:	mov	w2, #0x4                   	// #4
    4758:	mov	x0, x21
    475c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4760:	mov	x21, x0
    4764:	b	4780 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x1a8>
    4768:	mov	w9, #0x3d20                	// #15648
    476c:	movk	w9, #0x203e, lsl #16
    4770:	str	w9, [x8]
    4774:	ldr	x8, [x21, #24]
    4778:	add	x8, x8, #0x4
    477c:	str	x8, [x21, #24]
    4780:	mov	x0, x19
    4784:	bl	0 <_ZNK4llvm5Value7getNameEv>
    4788:	mov	x2, x0
    478c:	mov	x3, x1
    4790:	mov	x0, x21
    4794:	mov	x1, x2
    4798:	mov	x2, x3
    479c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    47a0:	ldp	x9, x8, [x0, #16]
    47a4:	sub	x9, x9, x8
    47a8:	cmp	x9, #0xa
    47ac:	b.hi	47c4 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x1ec>  // b.pmore
    47b0:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    47b4:	add	x1, x1, #0x0
    47b8:	mov	w2, #0xb                   	// #11
    47bc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    47c0:	b	47ec <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x214>
    47c4:	adrp	x9, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    47c8:	add	x9, x9, #0x0
    47cc:	ldr	x9, [x9]
    47d0:	mov	w10, #0x6920                	// #26912
    47d4:	movk	w10, #0x2073, lsl #16
    47d8:	stur	w10, [x8, #7]
    47dc:	str	x9, [x8]
    47e0:	ldr	x8, [x0, #24]
    47e4:	add	x8, x8, #0xb
    47e8:	str	x8, [x0, #24]
    47ec:	and	x1, x20, #0x1
    47f0:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    47f4:	ldp	x9, x8, [x0, #16]
    47f8:	cmp	x9, x8
    47fc:	b.ne	4814 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x23c>  // b.any
    4800:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4804:	add	x1, x1, #0x0
    4808:	mov	w2, #0x1                   	// #1
    480c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4810:	b	4828 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x250>
    4814:	mov	w9, #0xa                   	// #10
    4818:	strb	w9, [x8]
    481c:	ldr	x8, [x0, #24]
    4820:	add	x8, x8, #0x1
    4824:	str	x8, [x0, #24]
    4828:	and	w0, w20, #0x1
    482c:	ldp	x20, x19, [sp, #48]
    4830:	ldp	x22, x21, [sp, #32]
    4834:	ldr	x23, [sp, #16]
    4838:	ldp	x29, x30, [sp], #64
    483c:	ret
    4840:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4844:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4848:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    484c:	add	x0, x0, #0x0
    4850:	add	x1, x1, #0x0
    4854:	add	x3, x3, #0x0
    4858:	mov	w2, #0x99                  	// #153
    485c:	bl	0 <__assert_fail>
    4860:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4864:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4868:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    486c:	add	x0, x0, #0x0
    4870:	add	x1, x1, #0x0
    4874:	add	x3, x3, #0x0
    4878:	mov	w2, #0x69                  	// #105
    487c:	bl	0 <__assert_fail>
    4880:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4884:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4888:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    488c:	add	x0, x0, #0x0
    4890:	add	x1, x1, #0x0
    4894:	add	x3, x3, #0x0
    4898:	mov	w2, #0x108                 	// #264
    489c:	bl	0 <__assert_fail>
    48a0:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    48a4:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    48a8:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    48ac:	add	x0, x0, #0x0
    48b0:	add	x1, x1, #0x0
    48b4:	add	x3, x3, #0x0
    48b8:	mov	w2, #0x6c                  	// #108
    48bc:	bl	0 <__assert_fail>

00000000000048c0 <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE>:
    48c0:	sub	sp, sp, #0x60
    48c4:	stp	x29, x30, [sp, #48]
    48c8:	stp	x22, x21, [sp, #64]
    48cc:	stp	x20, x19, [sp, #80]
    48d0:	add	x29, sp, #0x30
    48d4:	mov	x20, x0
    48d8:	mov	x19, x1
    48dc:	add	x8, sp, #0x8
    48e0:	mov	x0, x1
    48e4:	mov	x1, x20
    48e8:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    48ec:	ldrb	w8, [sp, #40]
    48f0:	cbz	w8, 498c <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE+0xcc>
    48f4:	add	x0, x20, #0x28
    48f8:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    48fc:	ldrb	w8, [x0, #16]
    4900:	cmp	w8, #0x50
    4904:	b.ne	4938 <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE+0x78>  // b.any
    4908:	ldur	x8, [x0, #-24]
    490c:	cbz	x8, 4938 <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE+0x78>
    4910:	ldrb	w9, [x8, #16]
    4914:	cbnz	w9, 4938 <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE+0x78>
    4918:	ldrb	w9, [x8, #33]
    491c:	tbz	w9, #5, 4938 <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE+0x78>
    4920:	ldr	w8, [x8, #36]
    4924:	sub	w8, w8, #0x23
    4928:	cmp	w8, #0x2
    492c:	b.cs	4938 <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE+0x78>  // b.hs, b.nlast
    4930:	mov	w0, #0x1                   	// #1
    4934:	b	4990 <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE+0xd0>
    4938:	mov	x0, x20
    493c:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
    4940:	cbz	x0, 4990 <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE+0xd0>
    4944:	mov	x20, x0
    4948:	bl	0 <_ZNK4llvm11Instruction16getNumSuccessorsEv>
    494c:	cbz	w0, 4990 <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE+0xd0>
    4950:	mov	x21, xzr
    4954:	mov	w22, w0
    4958:	mov	x0, x20
    495c:	mov	w1, w21
    4960:	bl	0 <_ZNK4llvm11Instruction12getSuccessorEj>
    4964:	mov	x1, x19
    4968:	bl	48c0 <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE>
    496c:	tbnz	w0, #0, 4930 <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE+0x70>
    4970:	mov	x0, x20
    4974:	bl	0 <_ZNK4llvm11Instruction16getNumSuccessorsEv>
    4978:	cmp	x21, w0, sxtw
    497c:	b.ge	49a4 <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE+0xe4>  // b.tcont
    4980:	add	x21, x21, #0x1
    4984:	cmp	x22, x21
    4988:	b.ne	4958 <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE+0x98>  // b.any
    498c:	mov	w0, wzr
    4990:	ldp	x20, x19, [sp, #80]
    4994:	ldp	x22, x21, [sp, #64]
    4998:	ldp	x29, x30, [sp, #48]
    499c:	add	sp, sp, #0x60
    49a0:	ret
    49a4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    49a8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    49ac:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    49b0:	add	x0, x0, #0x0
    49b4:	add	x1, x1, #0x0
    49b8:	add	x3, x3, #0x0
    49bc:	mov	w2, #0xda                  	// #218
    49c0:	bl	0 <__assert_fail>

00000000000049c4 <_ZN12_GLOBAL__N_117PaddingCalculator7addTypeEPN4llvm4TypeE>:
    49c4:	stp	x29, x30, [sp, #-32]!
    49c8:	stp	x20, x19, [sp, #16]
    49cc:	mov	x29, sp
    49d0:	mov	x19, x0
    49d4:	ldr	x0, [x0]
    49d8:	mov	x20, x1
    49dc:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
    49e0:	ldr	w8, [x19, #16]
    49e4:	sub	w9, w0, #0x1
    49e8:	tst	w8, w9
    49ec:	b.eq	4a0c <_ZN12_GLOBAL__N_117PaddingCalculator7addTypeEPN4llvm4TypeE+0x48>  // b.none
    49f0:	cbz	w0, 4a58 <_ZN12_GLOBAL__N_117PaddingCalculator7addTypeEPN4llvm4TypeE+0x94>
    49f4:	mov	w9, w0
    49f8:	add	x8, x9, x8
    49fc:	sub	x8, x8, #0x1
    4a00:	udiv	x8, x8, x9
    4a04:	mul	w8, w8, w9
    4a08:	str	w8, [x19, #16]
    4a0c:	ldr	x0, [x19]
    4a10:	mov	x1, x20
    4a14:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4a18:	tst	w1, #0xff
    4a1c:	b.ne	4a38 <_ZN12_GLOBAL__N_117PaddingCalculator7addTypeEPN4llvm4TypeE+0x74>  // b.any
    4a20:	ldr	w8, [x19, #16]
    4a24:	add	w8, w8, w0
    4a28:	str	w8, [x19, #16]
    4a2c:	ldp	x20, x19, [sp, #16]
    4a30:	ldp	x29, x30, [sp], #32
    4a34:	ret
    4a38:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4a3c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4a40:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4a44:	add	x0, x0, #0x0
    4a48:	add	x1, x1, #0x0
    4a4c:	add	x3, x3, #0x0
    4a50:	mov	w2, #0x7d                  	// #125
    4a54:	bl	0 <__assert_fail>
    4a58:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4a5c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4a60:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4a64:	add	x0, x0, #0x0
    4a68:	add	x1, x1, #0x0
    4a6c:	add	x3, x3, #0x0
    4a70:	mov	w2, #0x2ce                 	// #718
    4a74:	bl	0 <__assert_fail>

0000000000004a78 <_ZZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeEENK3$_1clEjPNS_5ValueE>:
    4a78:	sub	sp, sp, #0x80
    4a7c:	stp	x29, x30, [sp, #64]
    4a80:	str	x23, [sp, #80]
    4a84:	stp	x22, x21, [sp, #96]
    4a88:	stp	x20, x19, [sp, #112]
    4a8c:	add	x29, sp, #0x40
    4a90:	mov	x19, x0
    4a94:	ldr	x0, [x0]
    4a98:	mov	x20, x2
    4a9c:	mov	w21, w1
    4aa0:	bl	0 <_ZN4llvm4Type10getInt32TyERNS_11LLVMContextE>
    4aa4:	mov	x1, xzr
    4aa8:	mov	w2, wzr
    4aac:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
    4ab0:	str	x0, [sp]
    4ab4:	ldr	x0, [x19]
    4ab8:	bl	0 <_ZN4llvm4Type10getInt32TyERNS_11LLVMContextE>
    4abc:	mov	w1, w21
    4ac0:	mov	w2, wzr
    4ac4:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
    4ac8:	adrp	x9, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4acc:	ldr	d0, [x9]
    4ad0:	add	x8, sp, #0x18
    4ad4:	mov	x9, sp
    4ad8:	str	x0, [sp, #8]
    4adc:	add	x8, x8, #0x10
    4ae0:	add	x2, x9, #0x10
    4ae4:	add	x0, sp, #0x18
    4ae8:	mov	x1, sp
    4aec:	str	x8, [sp, #24]
    4af0:	str	d0, [sp, #32]
    4af4:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4af8:	cbz	x20, 4bd0 <_ZZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeEENK3$_1clEjPNS_5ValueE+0x158>
    4afc:	ldrb	w8, [x20, #16]
    4b00:	cmp	w8, #0x37
    4b04:	b.ne	4b50 <_ZZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeEENK3$_1clEjPNS_5ValueE+0xd8>  // b.any
    4b08:	ldur	x8, [x20, #-24]
    4b0c:	cbz	x8, 4bec <_ZZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeEENK3$_1clEjPNS_5ValueE+0x174>
    4b10:	ldrb	w9, [x8, #16]
    4b14:	cmp	w9, #0xd
    4b18:	b.ne	4c0c <_ZZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeEENK3$_1clEjPNS_5ValueE+0x194>  // b.any
    4b1c:	add	x0, x8, #0x18
    4b20:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4b24:	cmp	x0, #0x2
    4b28:	b.cc	4b50 <_ZZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeEENK3$_1clEjPNS_5ValueE+0xd8>  // b.lo, b.ul, b.last
    4b2c:	ldr	x0, [x19]
    4b30:	bl	0 <_ZN4llvm4Type10getInt32TyERNS_11LLVMContextE>
    4b34:	mov	x1, xzr
    4b38:	mov	w2, wzr
    4b3c:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
    4b40:	str	x0, [sp]
    4b44:	add	x0, sp, #0x18
    4b48:	mov	x1, sp
    4b4c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4b50:	ldp	x8, x9, [x19, #16]
    4b54:	ldr	x19, [x19, #8]
    4b58:	ldr	x20, [sp, #24]
    4b5c:	ldr	w23, [sp, #32]
    4b60:	ldr	x21, [x8]
    4b64:	ldr	x22, [x9]
    4b68:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4b6c:	add	x1, x1, #0x0
    4b70:	mov	x0, sp
    4b74:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4b78:	mov	x5, sp
    4b7c:	mov	x0, x19
    4b80:	mov	x1, x21
    4b84:	mov	x2, x22
    4b88:	mov	x3, x20
    4b8c:	mov	x4, x23
    4b90:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4b94:	ldr	x8, [sp, #24]
    4b98:	add	x9, sp, #0x18
    4b9c:	add	x9, x9, #0x10
    4ba0:	mov	x19, x0
    4ba4:	cmp	x8, x9
    4ba8:	b.eq	4bb4 <_ZZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeEENK3$_1clEjPNS_5ValueE+0x13c>  // b.none
    4bac:	mov	x0, x8
    4bb0:	bl	0 <free>
    4bb4:	mov	x0, x19
    4bb8:	ldp	x20, x19, [sp, #112]
    4bbc:	ldp	x22, x21, [sp, #96]
    4bc0:	ldr	x23, [sp, #80]
    4bc4:	ldp	x29, x30, [sp, #64]
    4bc8:	add	sp, sp, #0x80
    4bcc:	ret
    4bd0:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4bd4:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4bd8:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4bdc:	add	x0, x0, #0x0
    4be0:	add	x1, x1, #0x0
    4be4:	add	x3, x3, #0x0
    4be8:	b	4c04 <_ZZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeEENK3$_1clEjPNS_5ValueE+0x18c>
    4bec:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4bf0:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4bf4:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4bf8:	add	x0, x0, #0x0
    4bfc:	add	x1, x1, #0x0
    4c00:	add	x3, x3, #0x0
    4c04:	mov	w2, #0x69                  	// #105
    4c08:	bl	0 <__assert_fail>
    4c0c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4c10:	add	x0, x0, #0x0
    4c14:	mov	w1, #0x1                   	// #1
    4c18:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>

0000000000004c1c <_ZN4llvm13PtrUseVisitorIN12_GLOBAL__N_116AllocaUseVisitorEE13visitCallSiteENS_8CallSiteE>:
    4c1c:	stp	x29, x30, [sp, #-48]!
    4c20:	str	x21, [sp, #16]
    4c24:	stp	x20, x19, [sp, #32]
    4c28:	mov	x29, sp
    4c2c:	add	x19, x0, #0x8
    4c30:	and	x20, x1, #0xfffffffffffffff8
    4c34:	mov	x21, x1
    4c38:	mov	x0, x19
    4c3c:	mov	x1, x20
    4c40:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4c44:	cmp	x21, #0x7
    4c48:	b.ls	4c64 <_ZN4llvm13PtrUseVisitorIN12_GLOBAL__N_116AllocaUseVisitorEE13visitCallSiteENS_8CallSiteE+0x48>  // b.plast
    4c4c:	mov	x0, x19
    4c50:	mov	x1, x20
    4c54:	ldp	x20, x19, [sp, #32]
    4c58:	ldr	x21, [sp, #16]
    4c5c:	ldp	x29, x30, [sp], #48
    4c60:	b	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4c64:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4c68:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4c6c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4c70:	add	x0, x0, #0x0
    4c74:	add	x1, x1, #0x0
    4c78:	add	x3, x3, #0x0
    4c7c:	mov	w2, #0x120                 	// #288
    4c80:	bl	0 <__assert_fail>

0000000000004c84 <_ZN4llvm13PtrUseVisitorIN12_GLOBAL__N_116AllocaUseVisitorEE18visitIntrinsicInstERNS_13IntrinsicInstE>:
    4c84:	stp	x29, x30, [sp, #-16]!
    4c88:	mov	x29, sp
    4c8c:	ldur	x8, [x1, #-24]
    4c90:	ldrb	w9, [x8, #16]
    4c94:	cmp	w9, #0x0
    4c98:	csel	x8, x8, xzr, eq  // eq = none
    4c9c:	ldr	w8, [x8, #36]
    4ca0:	sub	w8, w8, #0x93
    4ca4:	cmp	w8, #0x2
    4ca8:	b.cs	4cb4 <_ZN4llvm13PtrUseVisitorIN12_GLOBAL__N_116AllocaUseVisitorEE18visitIntrinsicInstERNS_13IntrinsicInstE+0x30>  // b.hs, b.nlast
    4cac:	ldp	x29, x30, [sp], #16
    4cb0:	ret
    4cb4:	tst	x1, #0x7
    4cb8:	b.ne	4ccc <_ZN4llvm13PtrUseVisitorIN12_GLOBAL__N_116AllocaUseVisitorEE18visitIntrinsicInstERNS_13IntrinsicInstE+0x48>  // b.any
    4cbc:	and	x8, x1, #0xfffffffffffffff9
    4cc0:	orr	x1, x8, #0x2
    4cc4:	ldp	x29, x30, [sp], #16
    4cc8:	b	4c1c <_ZN4llvm13PtrUseVisitorIN12_GLOBAL__N_116AllocaUseVisitorEE13visitCallSiteENS_8CallSiteE>
    4ccc:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4cd0:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4cd4:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4cd8:	add	x0, x0, #0x0
    4cdc:	add	x1, x1, #0x0
    4ce0:	add	x3, x3, #0x0
    4ce4:	mov	w2, #0xb3                  	// #179
    4ce8:	bl	0 <__assert_fail>

0000000000004cec <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj>:
    4cec:	stp	x29, x30, [sp, #-48]!
    4cf0:	stp	x22, x21, [sp, #16]
    4cf4:	stp	x20, x19, [sp, #32]
    4cf8:	mov	x29, sp
    4cfc:	cbz	w1, 4da4 <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj+0xb8>
    4d00:	mov	x20, x0
    4d04:	add	x0, x0, #0x28
    4d08:	mov	w19, w1
    4d0c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4d10:	ldrb	w8, [x0, #16]
    4d14:	cmp	w8, #0x50
    4d18:	b.ne	4d44 <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj+0x58>  // b.any
    4d1c:	ldur	x8, [x0, #-24]
    4d20:	cbz	x8, 4d44 <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj+0x58>
    4d24:	ldrb	w9, [x8, #16]
    4d28:	cbnz	w9, 4d44 <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj+0x58>
    4d2c:	ldrb	w9, [x8, #33]
    4d30:	tbz	w9, #5, 4d44 <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj+0x58>
    4d34:	ldr	w8, [x8, #36]
    4d38:	sub	w8, w8, #0x23
    4d3c:	cmp	w8, #0x2
    4d40:	b.cc	4d9c <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj+0xb0>  // b.lo, b.ul, b.last
    4d44:	mov	x0, x20
    4d48:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
    4d4c:	cbz	x0, 4d9c <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj+0xb0>
    4d50:	mov	x20, x0
    4d54:	bl	0 <_ZNK4llvm11Instruction16getNumSuccessorsEv>
    4d58:	cbz	w0, 4d9c <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj+0xb0>
    4d5c:	mov	x21, xzr
    4d60:	sub	w19, w19, #0x1
    4d64:	mov	w22, w0
    4d68:	mov	x0, x20
    4d6c:	mov	w1, w21
    4d70:	bl	0 <_ZNK4llvm11Instruction12getSuccessorEj>
    4d74:	mov	w1, w19
    4d78:	bl	4cec <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj>
    4d7c:	tbz	w0, #0, 4da4 <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj+0xb8>
    4d80:	mov	x0, x20
    4d84:	bl	0 <_ZNK4llvm11Instruction16getNumSuccessorsEv>
    4d88:	cmp	x21, w0, sxtw
    4d8c:	b.ge	4db8 <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj+0xcc>  // b.tcont
    4d90:	add	x21, x21, #0x1
    4d94:	cmp	x22, x21
    4d98:	b.ne	4d68 <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj+0x7c>  // b.any
    4d9c:	mov	w0, #0x1                   	// #1
    4da0:	b	4da8 <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj+0xbc>
    4da4:	mov	w0, wzr
    4da8:	ldp	x20, x19, [sp, #32]
    4dac:	ldp	x22, x21, [sp, #16]
    4db0:	ldp	x29, x30, [sp], #48
    4db4:	ret
    4db8:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4dbc:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4dc0:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4dc4:	add	x0, x0, #0x0
    4dc8:	add	x1, x1, #0x0
    4dcc:	add	x3, x3, #0x0
    4dd0:	mov	w2, #0xda                  	// #218
    4dd4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm11raw_ostreamlsENS_9StringRefE:

0000000000000000 <_ZN4llvm11raw_ostreamlsENS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x20, x0
  10:	ldp	x8, x0, [x0, #16]
  14:	mov	x19, x2
  18:	sub	x8, x8, x0
  1c:	cmp	x2, x8
  20:	b.ls	38 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x38>  // b.plast
  24:	mov	x0, x20
  28:	mov	x2, x19
  2c:	ldp	x20, x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  38:	cbz	x19, 50 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x50>
  3c:	mov	x2, x19
  40:	bl	0 <memcpy>
  44:	ldr	x8, [x20, #24]
  48:	add	x8, x8, x19
  4c:	str	x8, [x20, #24]
  50:	mov	x0, x20
  54:	ldp	x20, x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	ret

Disassembly of section .text._ZNK4llvm9BitVectorixEj:

0000000000000000 <_ZNK4llvm9BitVectorixEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #16]
   c:	cmp	w8, w1
  10:	b.ls	3c <_ZNK4llvm9BitVectorixEj+0x3c>  // b.plast
  14:	ldr	x9, [x0, #8]
  18:	lsr	w8, w1, #6
  1c:	cmp	x9, x8
  20:	b.ls	5c <_ZNK4llvm9BitVectorixEj+0x5c>  // b.plast
  24:	ldr	x9, [x0]
  28:	ldr	x8, [x9, x8, lsl #3]
  2c:	lsr	x8, x8, x1
  30:	and	w0, w8, #0x1
  34:	ldp	x29, x30, [sp], #16
  38:	ret
  3c:	adrp	x0, 0 <_ZNK4llvm9BitVectorixEj>
  40:	adrp	x1, 0 <_ZNK4llvm9BitVectorixEj>
  44:	adrp	x3, 0 <_ZNK4llvm9BitVectorixEj>
  48:	add	x0, x0, #0x0
  4c:	add	x1, x1, #0x0
  50:	add	x3, x3, #0x0
  54:	mov	w2, #0x1f0                 	// #496
  58:	bl	0 <__assert_fail>
  5c:	adrp	x0, 0 <_ZNK4llvm9BitVectorixEj>
  60:	adrp	x1, 0 <_ZNK4llvm9BitVectorixEj>
  64:	adrp	x3, 0 <_ZNK4llvm9BitVectorixEj>
  68:	add	x0, x0, #0x0
  6c:	add	x1, x1, #0x0
  70:	add	x3, x3, #0x0
  74:	mov	w2, #0x1ab                 	// #427
  78:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm4coro5Shape15getSwitchCoroIdEv:

0000000000000000 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #168]
  10:	cbnz	w8, 40 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv+0x40>
  14:	ldr	x0, [x0]
  18:	bl	0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  1c:	mov	x19, x0
  20:	str	x0, [x29, #24]
  24:	add	x0, x29, #0x18
  28:	bl	0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  2c:	tbz	w0, #0, 60 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv+0x60>
  30:	mov	x0, x19
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret
  40:	adrp	x0, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  44:	adrp	x1, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  48:	adrp	x3, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x86                  	// #134
  5c:	bl	0 <__assert_fail>
  60:	adrp	x0, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  64:	adrp	x1, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  68:	adrp	x3, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  6c:	add	x0, x0, #0x0
  70:	add	x1, x1, #0x0
  74:	add	x3, x3, #0x0
  78:	mov	w2, #0x108                 	// #264
  7c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm10CoroIdInst12clearPromiseEv:

0000000000000000 <_ZN4llvm10CoroIdInst12clearPromiseEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	w1, #0x1                   	// #1
  10:	mov	x20, x0
  14:	bl	0 <_ZN4llvm10CoroIdInst12clearPromiseEv>
  18:	mov	x19, x0
  1c:	mov	x0, x20
  20:	bl	0 <_ZNK4llvm5Value10getContextEv>
  24:	mov	w1, wzr
  28:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
  2c:	bl	0 <_ZN4llvm19ConstantPointerNull3getEPNS_11PointerTypeE>
  30:	mov	x2, x0
  34:	mov	w1, #0x1                   	// #1
  38:	mov	x0, x20
  3c:	bl	0 <_ZN4llvm10CoroIdInst12clearPromiseEv>
  40:	cbz	x19, b8 <_ZN4llvm10CoroIdInst12clearPromiseEv+0xb8>
  44:	ldrb	w8, [x19, #16]
  48:	cmp	w8, #0x37
  4c:	b.eq	9c <_ZN4llvm10CoroIdInst12clearPromiseEv+0x9c>  // b.none
  50:	cmp	w8, #0x49
  54:	b.eq	60 <_ZN4llvm10CoroIdInst12clearPromiseEv+0x60>  // b.none
  58:	cmp	w8, #0x3a
  5c:	b.ne	d8 <_ZN4llvm10CoroIdInst12clearPromiseEv+0xd8>  // b.any
  60:	mov	x0, x19
  64:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
  68:	ldr	x8, [x19, #8]
  6c:	cbz	x8, a8 <_ZN4llvm10CoroIdInst12clearPromiseEv+0xa8>
  70:	mov	x0, x20
  74:	bl	0 <_ZN4llvm10CoroIdInst12clearPromiseEv>
  78:	ldr	x8, [x0, #40]
  7c:	mov	x1, x0
  80:	add	x0, x8, #0x28
  84:	bl	0 <_ZN4llvm10CoroIdInst12clearPromiseEv>
  88:	mov	x1, x0
  8c:	mov	x0, x19
  90:	ldp	x20, x19, [sp, #16]
  94:	ldp	x29, x30, [sp], #32
  98:	b	0 <_ZN4llvm11Instruction10moveBeforeEPS0_>
  9c:	ldp	x20, x19, [sp, #16]
  a0:	ldp	x29, x30, [sp], #32
  a4:	ret
  a8:	mov	x0, x19
  ac:	ldp	x20, x19, [sp, #16]
  b0:	ldp	x29, x30, [sp], #32
  b4:	b	0 <_ZN4llvm11Instruction15eraseFromParentEv>
  b8:	adrp	x0, 0 <_ZN4llvm10CoroIdInst12clearPromiseEv>
  bc:	adrp	x1, 0 <_ZN4llvm10CoroIdInst12clearPromiseEv>
  c0:	adrp	x3, 0 <_ZN4llvm10CoroIdInst12clearPromiseEv>
  c4:	add	x0, x0, #0x0
  c8:	add	x1, x1, #0x0
  cc:	add	x3, x3, #0x0
  d0:	mov	w2, #0x69                  	// #105
  d4:	bl	0 <__assert_fail>
  d8:	adrp	x0, 0 <_ZN4llvm10CoroIdInst12clearPromiseEv>
  dc:	adrp	x1, 0 <_ZN4llvm10CoroIdInst12clearPromiseEv>
  e0:	adrp	x3, 0 <_ZN4llvm10CoroIdInst12clearPromiseEv>
  e4:	add	x0, x0, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x3, x3, #0x0
  f0:	mov	w2, #0x83                  	// #131
  f4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm5TwineC2EPKc:

0000000000000000 <_ZN4llvm5TwineC2EPKc>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w8, #0x101                 	// #257
   c:	stp	xzr, xzr, [x0]
  10:	strh	w8, [x0, #16]
  14:	ldrb	w8, [x1]
  18:	cbz	w8, 28 <_ZN4llvm5TwineC2EPKc+0x28>
  1c:	mov	w8, #0x3                   	// #3
  20:	str	x1, [x0]
  24:	b	2c <_ZN4llvm5TwineC2EPKc+0x2c>
  28:	mov	w8, #0x1                   	// #1
  2c:	strb	w8, [x0, #16]
  30:	bl	0 <_ZN4llvm5TwineC2EPKc>
  34:	tbz	w0, #0, 40 <_ZN4llvm5TwineC2EPKc+0x40>
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZN4llvm5TwineC2EPKc>
  44:	adrp	x1, 0 <_ZN4llvm5TwineC2EPKc>
  48:	adrp	x3, 0 <_ZN4llvm5TwineC2EPKc>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x112                 	// #274
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm5Value18user_iterator_implINS_4UserEEdeEv:

0000000000000000 <_ZNK4llvm5Value18user_iterator_implINS_4UserEEdeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0]
   c:	cbz	x0, 18 <_ZNK4llvm5Value18user_iterator_implINS_4UserEEdeEv+0x18>
  10:	ldp	x29, x30, [sp], #16
  14:	b	0 <_ZNK4llvm3Use7getUserEv>
  18:	adrp	x0, 0 <_ZNK4llvm5Value18user_iterator_implINS_4UserEEdeEv>
  1c:	adrp	x1, 0 <_ZNK4llvm5Value18user_iterator_implINS_4UserEEdeEv>
  20:	adrp	x3, 0 <_ZNK4llvm5Value18user_iterator_implINS_4UserEEdeEv>
  24:	add	x0, x0, #0x0
  28:	add	x1, x1, #0x0
  2c:	add	x3, x3, #0x0
  30:	mov	w2, #0x99                  	// #153
  34:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8Function4argsEv:

0000000000000000 <_ZN4llvm8Function4argsEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldrb	w8, [x0, #18]
  10:	mov	x19, x0
  14:	tbnz	w8, #0, 20 <_ZN4llvm8Function4argsEv+0x20>
  18:	ldr	x20, [x19, #88]
  1c:	b	34 <_ZN4llvm8Function4argsEv+0x34>
  20:	mov	x0, x19
  24:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
  28:	ldrb	w8, [x19, #18]
  2c:	ldr	x20, [x19, #88]
  30:	tbnz	w8, #0, 3c <_ZN4llvm8Function4argsEv+0x3c>
  34:	mov	x8, x20
  38:	b	48 <_ZN4llvm8Function4argsEv+0x48>
  3c:	mov	x0, x19
  40:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
  44:	ldr	x8, [x19, #88]
  48:	ldr	x9, [x19, #96]
  4c:	mov	x0, x20
  50:	ldp	x20, x19, [sp, #16]
  54:	mov	w10, #0x28                  	// #40
  58:	madd	x1, x9, x10, x8
  5c:	ldp	x29, x30, [sp], #32
  60:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIPNS_19CoroAllocaAllocInstELb1EE9push_backERKS2_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIPNS_19CoroAllocaAllocInstELb1EE9push_backERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseIPNS_19CoroAllocaAllocInstELb1EE9push_backERKS2_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	x10, [x20]
  28:	str	x10, [x9, w8, uxtw #3]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseIPNS_19CoroAllocaAllocInstELb1EE9push_backERKS2_+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x8                   	// #8
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseIPNS_19CoroAllocaAllocInstELb1EE9push_backERKS2_+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_19CoroAllocaAllocInstELb1EE9push_backERKS2_>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_19CoroAllocaAllocInstELb1EE9push_backERKS2_>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_19CoroAllocaAllocInstELb1EE9push_backERKS2_>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIPNS_10AllocaInstELb1EE9push_backERKS2_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIPNS_10AllocaInstELb1EE9push_backERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseIPNS_10AllocaInstELb1EE9push_backERKS2_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	x10, [x20]
  28:	str	x10, [x9, w8, uxtw #3]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseIPNS_10AllocaInstELb1EE9push_backERKS2_+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x8                   	// #8
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseIPNS_10AllocaInstELb1EE9push_backERKS2_+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_10AllocaInstELb1EE9push_backERKS2_>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_10AllocaInstELb1EE9push_backERKS2_>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_10AllocaInstELb1EE9push_backERKS2_>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEC2EPNS_11InstructionEPNS_6MDNodeENS_8ArrayRefINS_17OperandBundleDefTIPNS_5ValueEEEEE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEC2EPNS_11InstructionEPNS_6MDNodeENS_8ArrayRefINS_17OperandBundleDefTIPNS_5ValueEEEEE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x23, x0
  18:	mov	x0, x1
  1c:	mov	x19, x4
  20:	mov	x20, x3
  24:	mov	x21, x2
  28:	mov	x22, x1
  2c:	bl	0 <_ZNK4llvm5Value10getContextEv>
  30:	mov	w8, #0x200                 	// #512
  34:	stp	x0, x21, [x23, #24]
  38:	str	wzr, [x23, #40]
  3c:	strb	wzr, [x23, #46]
  40:	stp	x20, x19, [x23, #48]
  44:	stp	xzr, xzr, [x23, #8]
  48:	strh	w8, [x23, #44]
  4c:	str	xzr, [x23]
  50:	mov	x0, x23
  54:	mov	x1, x22
  58:	ldp	x20, x19, [sp, #48]
  5c:	ldp	x22, x21, [sp, #32]
  60:	ldr	x23, [sp, #16]
  64:	ldp	x29, x30, [sp], #64
  68:	b	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEC2EPNS_11InstructionEPNS_6MDNodeENS_8ArrayRefINS_17OperandBundleDefTIPNS_5ValueEEEEE>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateAllocaEPNS_4TypeEjPNS_5ValueERKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateAllocaEPNS_4TypeEjPNS_5ValueERKNS_5TwineE>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x24, x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	mov	x22, x1
  1c:	mov	x23, x0
  20:	mov	w0, #0x40                  	// #64
  24:	mov	w1, #0x1                   	// #1
  28:	mov	x19, x4
  2c:	mov	x20, x3
  30:	mov	w21, w2
  34:	bl	0 <_ZN4llvm4UsernwEmj>
  38:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateAllocaEPNS_4TypeEjPNS_5ValueERKNS_5TwineE>
  3c:	mov	x24, x0
  40:	add	x1, x1, #0x0
  44:	add	x0, sp, #0x8
  48:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateAllocaEPNS_4TypeEjPNS_5ValueERKNS_5TwineE>
  4c:	add	x4, sp, #0x8
  50:	mov	x0, x24
  54:	mov	x1, x22
  58:	mov	w2, w21
  5c:	mov	x3, x20
  60:	mov	x5, xzr
  64:	bl	0 <_ZN4llvm10AllocaInstC1EPNS_4TypeEjPNS_5ValueERKNS_5TwineEPNS_11InstructionE>
  68:	ldp	x3, x4, [x23, #8]
  6c:	mov	x0, x23
  70:	mov	x1, x24
  74:	mov	x2, x19
  78:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateAllocaEPNS_4TypeEjPNS_5ValueERKNS_5TwineE>
  7c:	mov	x0, x23
  80:	mov	x1, x24
  84:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateAllocaEPNS_4TypeEjPNS_5ValueERKNS_5TwineE>
  88:	mov	x0, x24
  8c:	ldp	x20, x19, [sp, #80]
  90:	ldp	x22, x21, [sp, #64]
  94:	ldp	x24, x23, [sp, #48]
  98:	ldp	x29, x30, [sp, #32]
  9c:	add	sp, sp, #0x60
  a0:	ret

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE11CreateStoreEPNS_5ValueES5_b:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE11CreateStoreEPNS_5ValueES5_b>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	str	x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	mov	x21, x1
  1c:	mov	x22, x0
  20:	mov	w0, #0x40                  	// #64
  24:	mov	w1, #0x2                   	// #2
  28:	mov	w19, w3
  2c:	mov	x20, x2
  30:	bl	0 <_ZN4llvm4UsernwEmj>
  34:	and	w3, w19, #0x1
  38:	mov	x1, x21
  3c:	mov	x2, x20
  40:	mov	x4, xzr
  44:	mov	x23, x0
  48:	bl	0 <_ZN4llvm9StoreInstC1EPNS_5ValueES2_bPNS_11InstructionE>
  4c:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE11CreateStoreEPNS_5ValueES5_b>
  50:	add	x1, x1, #0x0
  54:	add	x0, sp, #0x8
  58:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE11CreateStoreEPNS_5ValueES5_b>
  5c:	ldp	x3, x4, [x22, #8]
  60:	add	x2, sp, #0x8
  64:	mov	x0, x22
  68:	mov	x1, x23
  6c:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE11CreateStoreEPNS_5ValueES5_b>
  70:	mov	x0, x22
  74:	mov	x1, x23
  78:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE11CreateStoreEPNS_5ValueES5_b>
  7c:	mov	x0, x23
  80:	ldp	x20, x19, [sp, #80]
  84:	ldp	x22, x21, [sp, #64]
  88:	ldr	x23, [sp, #48]
  8c:	ldp	x29, x30, [sp, #32]
  90:	add	sp, sp, #0x60
  94:	ret

Disassembly of section .text._ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE:

0000000000000000 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x1, #40]
  10:	add	x9, x1, #0x18
  14:	add	x10, x8, #0x28
  18:	cmp	x9, x10
  1c:	stp	x8, x9, [x0, #8]
  20:	b.eq	68 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x68>  // b.none
  24:	ldr	x1, [x1, #48]
  28:	mov	x19, x0
  2c:	str	x1, [x29, #24]
  30:	cbz	x1, 40 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x40>
  34:	add	x0, x29, #0x18
  38:	mov	w2, #0x2                   	// #2
  3c:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  40:	add	x1, x29, #0x18
  44:	mov	x0, x19
  48:	bl	0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>
  4c:	ldr	x1, [x29, #24]
  50:	cbz	x1, 5c <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x5c>
  54:	add	x0, x29, #0x18
  58:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  5c:	ldr	x19, [sp, #16]
  60:	ldp	x29, x30, [sp], #32
  64:	ret
  68:	adrp	x0, 0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>
  6c:	adrp	x1, 0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>
  70:	adrp	x3, 0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x8e                  	// #142
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_4TypeEPNS_5ValueERKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_4TypeEPNS_5ValueERKNS_5TwineE>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	str	x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	mov	x21, x1
  1c:	mov	x22, x0
  20:	mov	w0, #0x40                  	// #64
  24:	mov	w1, #0x1                   	// #1
  28:	mov	x19, x3
  2c:	mov	x20, x2
  30:	bl	0 <_ZN4llvm4UsernwEmj>
  34:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_4TypeEPNS_5ValueERKNS_5TwineE>
  38:	mov	x23, x0
  3c:	add	x1, x1, #0x0
  40:	add	x0, sp, #0x8
  44:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_4TypeEPNS_5ValueERKNS_5TwineE>
  48:	add	x3, sp, #0x8
  4c:	mov	x0, x23
  50:	mov	x1, x21
  54:	mov	x2, x20
  58:	mov	x4, xzr
  5c:	bl	0 <_ZN4llvm8LoadInstC1EPNS_4TypeEPNS_5ValueERKNS_5TwineEPNS_11InstructionE>
  60:	ldp	x3, x4, [x22, #8]
  64:	mov	x0, x22
  68:	mov	x1, x23
  6c:	mov	x2, x19
  70:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_4TypeEPNS_5ValueERKNS_5TwineE>
  74:	mov	x0, x22
  78:	mov	x1, x23
  7c:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_4TypeEPNS_5ValueERKNS_5TwineE>
  80:	mov	x0, x23
  84:	ldp	x20, x19, [sp, #80]
  88:	ldp	x22, x21, [sp, #64]
  8c:	ldr	x23, [sp, #48]
  90:	ldp	x29, x30, [sp, #32]
  94:	add	sp, sp, #0x60
  98:	ret

Disassembly of section .text._ZNK4llvm24IRBuilderDefaultInserter12InsertHelperEPNS_11InstructionERKNS_5TwineEPNS_10BasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS1_Lb1ELb0EvEELb0ELb0EEE:

0000000000000000 <_ZNK4llvm24IRBuilderDefaultInserter12InsertHelperEPNS_11InstructionERKNS_5TwineEPNS_10BasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS1_Lb1ELb0EvEELb0ELb0EEE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x2
  14:	mov	x20, x1
  18:	cbz	x3, 38 <_ZNK4llvm24IRBuilderDefaultInserter12InsertHelperEPNS_11InstructionERKNS_5TwineEPNS_10BasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS1_Lb1ELb0EvEELb0ELb0EEE+0x38>
  1c:	add	x0, x3, #0x28
  20:	mov	x1, x20
  24:	mov	x21, x4
  28:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  2c:	add	x1, x20, #0x18
  30:	mov	x0, x21
  34:	bl	0 <_ZNK4llvm24IRBuilderDefaultInserter12InsertHelperEPNS_11InstructionERKNS_5TwineEPNS_10BasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS1_Lb1ELb0EvEELb0ELb0EEE>
  38:	mov	x0, x20
  3c:	mov	x1, x19
  40:	ldp	x20, x19, [sp, #32]
  44:	ldr	x21, [sp, #16]
  48:	ldp	x29, x30, [sp], #48
  4c:	b	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>

Disassembly of section .text._ZNK4llvm13IRBuilderBase20SetInstDebugLocationEPNS_11InstructionE:

0000000000000000 <_ZNK4llvm13IRBuilderBase20SetInstDebugLocationEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x0]
  10:	cbz	x8, 48 <_ZNK4llvm13IRBuilderBase20SetInstDebugLocationEPNS_11InstructionE+0x48>
  14:	mov	x19, x1
  18:	add	x0, x29, #0x18
  1c:	mov	w2, #0x2                   	// #2
  20:	mov	x1, x8
  24:	str	x8, [x29, #24]
  28:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  2c:	add	x0, x19, #0x30
  30:	add	x1, x29, #0x18
  34:	bl	0 <_ZNK4llvm13IRBuilderBase20SetInstDebugLocationEPNS_11InstructionE>
  38:	ldr	x1, [x29, #24]
  3c:	cbz	x1, 48 <_ZNK4llvm13IRBuilderBase20SetInstDebugLocationEPNS_11InstructionE+0x48>
  40:	add	x0, x29, #0x18
  44:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  48:	ldr	x19, [sp, #16]
  4c:	ldp	x29, x30, [sp], #32
  50:	ret

Disassembly of section .text._ZN4llvm10ilist_baseILb1EE16insertBeforeImplERNS_15ilist_node_baseILb1EEES4_:

0000000000000000 <_ZN4llvm10ilist_baseILb1EE16insertBeforeImplERNS_15ilist_node_baseILb1EEES4_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	ldr	x9, [x1]
  10:	tst	x1, #0x7
  14:	and	x10, x8, #0xfffffffffffffff8
  18:	bfxil	x8, x9, #0, #3
  1c:	stp	x8, x0, [x1]
  20:	str	x1, [x10, #8]
  24:	b.ne	40 <_ZN4llvm10ilist_baseILb1EE16insertBeforeImplERNS_15ilist_node_baseILb1EEES4_+0x40>  // b.any
  28:	ldr	x8, [x0]
  2c:	and	x8, x8, #0x7
  30:	orr	x8, x8, x1
  34:	str	x8, [x0]
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZN4llvm10ilist_baseILb1EE16insertBeforeImplERNS_15ilist_node_baseILb1EEES4_>
  44:	adrp	x1, 0 <_ZN4llvm10ilist_baseILb1EE16insertBeforeImplERNS_15ilist_node_baseILb1EEES4_>
  48:	adrp	x3, 0 <_ZN4llvm10ilist_baseILb1EE16insertBeforeImplERNS_15ilist_node_baseILb1EEES4_>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0xb3                  	// #179
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13TrackingMDRefaSEOS0_:

0000000000000000 <_ZN4llvm13TrackingMDRefaSEOS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	cmp	x1, x0
  14:	b.eq	40 <_ZN4llvm13TrackingMDRefaSEOS0_+0x40>  // b.none
  18:	mov	x20, x1
  1c:	ldr	x1, [x19]
  20:	cbz	x1, 2c <_ZN4llvm13TrackingMDRefaSEOS0_+0x2c>
  24:	mov	x0, x19
  28:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  2c:	ldr	x8, [x20]
  30:	mov	x0, x19
  34:	mov	x1, x20
  38:	str	x8, [x19]
  3c:	bl	0 <_ZN4llvm13TrackingMDRefaSEOS0_>
  40:	mov	x0, x19
  44:	ldp	x20, x19, [sp, #16]
  48:	ldp	x29, x30, [sp], #32
  4c:	ret

Disassembly of section .text._ZN4llvm13TrackingMDRef7retrackERS0_:

0000000000000000 <_ZN4llvm13TrackingMDRef7retrackERS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x1
  10:	ldr	x1, [x0]
  14:	ldr	x8, [x19]
  18:	cmp	x1, x8
  1c:	b.ne	40 <_ZN4llvm13TrackingMDRef7retrackERS0_+0x40>  // b.any
  20:	cbz	x1, 34 <_ZN4llvm13TrackingMDRef7retrackERS0_+0x34>
  24:	mov	x2, x0
  28:	mov	x0, x19
  2c:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  30:	str	xzr, [x19]
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret
  40:	adrp	x0, 0 <_ZN4llvm13TrackingMDRef7retrackERS0_>
  44:	adrp	x1, 0 <_ZN4llvm13TrackingMDRef7retrackERS0_>
  48:	adrp	x3, 0 <_ZN4llvm13TrackingMDRef7retrackERS0_>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x5e                  	// #94
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm11iplist_implINS_12simple_ilistINS_11InstructionEJEEENS_21SymbolTableListTraitsIS2_EEE11getNextNodeERS2_:

0000000000000000 <_ZNK4llvm11iplist_implINS_12simple_ilistINS_11InstructionEJEEENS_21SymbolTableListTraitsIS2_EEE11getNextNodeERS2_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x1, #32]
   c:	cmp	x0, x8
  10:	b.eq	2c <_ZNK4llvm11iplist_implINS_12simple_ilistINS_11InstructionEJEEENS_21SymbolTableListTraitsIS2_EEE11getNextNodeERS2_+0x2c>  // b.none
  14:	ldrb	w9, [x8]
  18:	tbnz	w9, #2, 38 <_ZNK4llvm11iplist_implINS_12simple_ilistINS_11InstructionEJEEENS_21SymbolTableListTraitsIS2_EEE11getNextNodeERS2_+0x38>
  1c:	sub	x9, x8, #0x18
  20:	cmp	x8, #0x0
  24:	csel	x0, xzr, x9, eq  // eq = none
  28:	b	30 <_ZNK4llvm11iplist_implINS_12simple_ilistINS_11InstructionEJEEENS_21SymbolTableListTraitsIS2_EEE11getNextNodeERS2_+0x30>
  2c:	mov	x0, xzr
  30:	ldp	x29, x30, [sp], #16
  34:	ret
  38:	adrp	x0, 0 <_ZNK4llvm11iplist_implINS_12simple_ilistINS_11InstructionEJEEENS_21SymbolTableListTraitsIS2_EEE11getNextNodeERS2_>
  3c:	adrp	x1, 0 <_ZNK4llvm11iplist_implINS_12simple_ilistINS_11InstructionEJEEENS_21SymbolTableListTraitsIS2_EEE11getNextNodeERS2_>
  40:	adrp	x3, 0 <_ZNK4llvm11iplist_implINS_12simple_ilistINS_11InstructionEJEEENS_21SymbolTableListTraitsIS2_EEE11getNextNodeERS2_>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x8b                  	// #139
  54:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x1]
   c:	ldrb	w9, [x8, #8]
  10:	cmp	w9, #0xf
  14:	b.ne	4c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x4c>  // b.any
  18:	ldr	x8, [x8, #16]
  1c:	mov	x6, x5
  20:	mov	x5, x4
  24:	mov	x4, x3
  28:	mov	x3, x2
  2c:	mov	x2, x1
  30:	ldr	x1, [x8]
  34:	cbz	x1, 6c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x6c>
  38:	ldrb	w8, [x1, #8]
  3c:	cmp	w8, #0xc
  40:	b.ne	8c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x8c>  // b.any
  44:	ldp	x29, x30, [sp], #16
  48:	b	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
  4c:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
  50:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
  54:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
  58:	add	x0, x0, #0x0
  5c:	add	x1, x1, #0x0
  60:	add	x3, x3, #0x0
  64:	mov	w2, #0x17e                 	// #382
  68:	bl	0 <__assert_fail>
  6c:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
  70:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
  74:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
  78:	add	x0, x0, #0x0
  7c:	add	x1, x1, #0x0
  80:	add	x3, x3, #0x0
  84:	mov	w2, #0x69                  	// #105
  88:	bl	0 <__assert_fail>
  8c:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
  90:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
  94:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
  98:	add	x0, x0, #0x0
  9c:	add	x1, x1, #0x0
  a0:	add	x3, x3, #0x0
  a4:	mov	w2, #0x108                 	// #264
  a8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIPNS_8CallInstELb1EE9push_backERKS2_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIPNS_8CallInstELb1EE9push_backERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseIPNS_8CallInstELb1EE9push_backERKS2_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	x10, [x20]
  28:	str	x10, [x9, w8, uxtw #3]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseIPNS_8CallInstELb1EE9push_backERKS2_+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x8                   	// #8
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseIPNS_8CallInstELb1EE9push_backERKS2_+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_8CallInstELb1EE9push_backERKS2_>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_8CallInstELb1EE9push_backERKS2_>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_8CallInstELb1EE9push_backERKS2_>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #32]
   8:	str	x27, [sp, #48]
   c:	stp	x26, x25, [sp, #64]
  10:	stp	x24, x23, [sp, #80]
  14:	stp	x22, x21, [sp, #96]
  18:	stp	x20, x19, [sp, #112]
  1c:	add	x29, sp, #0x20
  20:	ldp	x25, x26, [x0, #48]
  24:	mov	x27, x1
  28:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
  2c:	mov	x19, x0
  30:	add	x1, x1, #0x0
  34:	add	x0, sp, #0x8
  38:	mov	x21, x6
  3c:	mov	x20, x5
  40:	mov	x22, x4
  44:	mov	x23, x3
  48:	mov	x24, x2
  4c:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
  50:	add	x6, sp, #0x8
  54:	mov	x0, x27
  58:	mov	x1, x24
  5c:	mov	x2, x23
  60:	mov	x3, x22
  64:	mov	x4, x25
  68:	mov	x5, x26
  6c:	mov	x7, xzr
  70:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
  74:	ldrb	w8, [x19, #44]
  78:	mov	x22, x0
  7c:	cbz	w8, 8c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x8c>
  80:	mov	x0, x19
  84:	mov	x1, x22
  88:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
  8c:	add	x0, sp, #0x8
  90:	str	x22, [sp, #8]
  94:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
  98:	tbz	w0, #0, b0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0xb0>
  9c:	ldr	w3, [x19, #40]
  a0:	mov	x0, x19
  a4:	mov	x1, x22
  a8:	mov	x2, x21
  ac:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
  b0:	ldp	x3, x4, [x19, #8]
  b4:	mov	x0, x19
  b8:	mov	x1, x22
  bc:	mov	x2, x20
  c0:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
  c4:	mov	x0, x19
  c8:	mov	x1, x22
  cc:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
  d0:	mov	x0, x22
  d4:	ldp	x20, x19, [sp, #112]
  d8:	ldp	x22, x21, [sp, #96]
  dc:	ldp	x24, x23, [sp, #80]
  e0:	ldp	x26, x25, [sp, #64]
  e4:	ldr	x27, [sp, #48]
  e8:	ldp	x29, x30, [sp, #32]
  ec:	add	sp, sp, #0x80
  f0:	ret

Disassembly of section .text._ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	stp	x28, x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	mov	x26, x7
  20:	mov	x19, x6
  24:	mov	x20, x5
  28:	mov	x21, x4
  2c:	mov	x22, x3
  30:	mov	x23, x2
  34:	mov	x24, x1
  38:	mov	x25, x0
  3c:	mov	w8, wzr
  40:	cbz	x5, 6c <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x6c>
  44:	mov	w9, #0x38                  	// #56
  48:	mul	x9, x20, x9
  4c:	add	x10, x21, #0x28
  50:	ldp	x12, x11, [x10, #-8]
  54:	subs	x9, x9, #0x38
  58:	add	x10, x10, #0x38
  5c:	sub	x11, x11, x12
  60:	lsr	x11, x11, #3
  64:	add	w8, w8, w11
  68:	b.ne	50 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x50>  // b.any
  6c:	add	w28, w22, #0x1
  70:	add	w1, w8, w28
  74:	lsl	w2, w20, #4
  78:	mov	w0, #0x48                  	// #72
  7c:	bl	0 <_ZN4llvm4UsernwEmjj>
  80:	ldr	x8, [x25, #16]
  84:	mov	x27, x0
  88:	ldr	x1, [x8]
  8c:	cbz	x20, f0 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0xf0>
  90:	mov	w8, #0x38                  	// #56
  94:	mov	w9, wzr
  98:	mul	x8, x20, x8
  9c:	add	x10, x21, #0x28
  a0:	ldp	x12, x11, [x10, #-8]
  a4:	subs	x8, x8, #0x38
  a8:	add	x10, x10, #0x38
  ac:	sub	x11, x11, x12
  b0:	lsr	x11, x11, #3
  b4:	add	w9, w9, w11
  b8:	b.ne	a0 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0xa0>  // b.any
  bc:	mov	w10, #0x38                  	// #56
  c0:	mov	w9, w9
  c4:	mul	x10, x20, x10
  c8:	add	x11, x21, #0x28
  cc:	ldp	x13, x12, [x11, #-8]
  d0:	subs	x10, x10, #0x38
  d4:	add	x11, x11, #0x38
  d8:	sub	x12, x12, x13
  dc:	lsr	x12, x12, #3
  e0:	add	w8, w8, w12
  e4:	b.ne	cc <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0xcc>  // b.any
  e8:	add	x9, x22, x9
  ec:	b	f8 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0xf8>
  f0:	mov	w8, wzr
  f4:	mov	x9, x22
  f8:	mvn	x9, x9
  fc:	mov	w10, #0x18                  	// #24
 100:	madd	x3, x9, x10, x27
 104:	add	w4, w8, w28
 108:	mov	w2, #0x38                  	// #56
 10c:	mov	x0, x27
 110:	mov	x5, x26
 114:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
 118:	mov	x0, x27
 11c:	mov	x1, x25
 120:	mov	x2, x24
 124:	mov	x3, x23
 128:	mov	x4, x22
 12c:	mov	x5, x21
 130:	mov	x6, x20
 134:	mov	x7, x19
 138:	str	xzr, [x27, #56]
 13c:	bl	0 <_ZN4llvm8CallInst4initEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineE>
 140:	mov	x0, x27
 144:	ldp	x20, x19, [sp, #80]
 148:	ldp	x22, x21, [sp, #64]
 14c:	ldp	x24, x23, [sp, #48]
 150:	ldp	x26, x25, [sp, #32]
 154:	ldp	x28, x27, [sp, #16]
 158:	ldp	x29, x30, [sp], #96
 15c:	ret

Disassembly of section .text._ZN4llvm13IRBuilderBase24setConstrainedFPCallAttrEPNS_8CallInstE:

0000000000000000 <_ZN4llvm13IRBuilderBase24setConstrainedFPCallAttrEPNS_8CallInstE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x1
  10:	mov	w1, #0x39                  	// #57
  14:	mov	x0, x19
  18:	bl	0 <_ZN4llvm13IRBuilderBase24setConstrainedFPCallAttrEPNS_8CallInstE>
  1c:	tbnz	w0, #0, 48 <_ZN4llvm13IRBuilderBase24setConstrainedFPCallAttrEPNS_8CallInstE+0x48>
  20:	ldr	x8, [x19, #56]
  24:	mov	x0, x19
  28:	str	x8, [x29, #24]
  2c:	bl	0 <_ZNK4llvm5Value10getContextEv>
  30:	mov	x1, x0
  34:	add	x0, x29, #0x18
  38:	mov	w2, #0xffffffff            	// #-1
  3c:	mov	w3, #0x39                  	// #57
  40:	bl	0 <_ZNK4llvm13AttributeList12addAttributeERNS_11LLVMContextEjNS_9Attribute8AttrKindE>
  44:	str	x0, [x19, #56]
  48:	ldr	x19, [sp, #16]
  4c:	ldp	x29, x30, [sp], #32
  50:	ret

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10setFPAttrsEPNS_11InstructionEPNS_6MDNodeENS_13FastMathFlagsE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10setFPAttrsEPNS_11InstructionEPNS_6MDNodeENS_13FastMathFlagsE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x20, x3
  10:	mov	x19, x1
  14:	cbnz	x2, 20 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10setFPAttrsEPNS_11InstructionEPNS_6MDNodeENS_13FastMathFlagsE+0x20>
  18:	ldr	x2, [x0, #32]
  1c:	cbz	x2, 2c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10setFPAttrsEPNS_11InstructionEPNS_6MDNodeENS_13FastMathFlagsE+0x2c>
  20:	mov	w1, #0x3                   	// #3
  24:	mov	x0, x19
  28:	bl	0 <_ZN4llvm11Instruction11setMetadataEjPNS_6MDNodeE>
  2c:	and	x1, x20, #0xffffffff
  30:	mov	x0, x19
  34:	bl	0 <_ZN4llvm11Instruction16setFastMathFlagsENS_13FastMathFlagsE>
  38:	mov	x0, x19
  3c:	ldp	x20, x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	ret

Disassembly of section .text._ZNK4llvm8CallBase13hasFnAttrImplINS_9Attribute8AttrKindEEEbT_:

0000000000000000 <_ZNK4llvm8CallBase13hasFnAttrImplINS_9Attribute8AttrKindEEEbT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	w19, w1
  10:	mov	x20, x0
  14:	add	x0, x0, #0x38
  18:	mov	w1, #0xffffffff            	// #-1
  1c:	mov	w2, w19
  20:	bl	0 <_ZNK4llvm13AttributeList12hasAttributeEjNS_9Attribute8AttrKindE>
  24:	tbz	w0, #0, 30 <_ZNK4llvm8CallBase13hasFnAttrImplINS_9Attribute8AttrKindEEEbT_+0x30>
  28:	mov	w0, #0x1                   	// #1
  2c:	b	44 <_ZNK4llvm8CallBase13hasFnAttrImplINS_9Attribute8AttrKindEEEbT_+0x44>
  30:	mov	x0, x20
  34:	mov	w1, w19
  38:	bl	0 <_ZNK4llvm8CallBase13hasFnAttrImplINS_9Attribute8AttrKindEEEbT_>
  3c:	tbz	w0, #0, 50 <_ZNK4llvm8CallBase13hasFnAttrImplINS_9Attribute8AttrKindEEEbT_+0x50>
  40:	mov	w0, wzr
  44:	ldp	x20, x19, [sp, #16]
  48:	ldp	x29, x30, [sp], #32
  4c:	ret
  50:	mov	x0, x20
  54:	mov	w1, w19
  58:	ldp	x20, x19, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	b	0 <_ZNK4llvm8CallBase25hasFnAttrOnCalledFunctionENS_9Attribute8AttrKindE>

Disassembly of section .text._ZNK4llvm8CallBase28isFnAttrDisallowedByOpBundleENS_9Attribute8AttrKindE:

0000000000000000 <_ZNK4llvm8CallBase28isFnAttrDisallowedByOpBundleENS_9Attribute8AttrKindE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	x8, x0
   c:	cmp	w1, #0xe
  10:	mov	w0, wzr
  14:	b.le	34 <_ZNK4llvm8CallBase28isFnAttrDisallowedByOpBundleENS_9Attribute8AttrKindE+0x34>
  18:	cmp	w1, #0x28
  1c:	b.eq	5c <_ZNK4llvm8CallBase28isFnAttrDisallowedByOpBundleENS_9Attribute8AttrKindE+0x5c>  // b.none
  20:	cmp	w1, #0x27
  24:	b.eq	44 <_ZNK4llvm8CallBase28isFnAttrDisallowedByOpBundleENS_9Attribute8AttrKindE+0x44>  // b.none
  28:	cmp	w1, #0xf
  2c:	b.eq	44 <_ZNK4llvm8CallBase28isFnAttrDisallowedByOpBundleENS_9Attribute8AttrKindE+0x44>  // b.none
  30:	b	54 <_ZNK4llvm8CallBase28isFnAttrDisallowedByOpBundleENS_9Attribute8AttrKindE+0x54>
  34:	cmp	w1, #0x4
  38:	b.eq	44 <_ZNK4llvm8CallBase28isFnAttrDisallowedByOpBundleENS_9Attribute8AttrKindE+0x44>  // b.none
  3c:	cmp	w1, #0xe
  40:	b.ne	54 <_ZNK4llvm8CallBase28isFnAttrDisallowedByOpBundleENS_9Attribute8AttrKindE+0x54>  // b.any
  44:	mov	x0, x8
  48:	bl	0 <_ZNK4llvm8CallBase28isFnAttrDisallowedByOpBundleENS_9Attribute8AttrKindE>
  4c:	cmp	w0, #0x0
  50:	cset	w0, ne  // ne = any
  54:	ldp	x29, x30, [sp], #16
  58:	ret
  5c:	mov	x0, x8
  60:	ldp	x29, x30, [sp], #16
  64:	b	0 <_ZNK4llvm8CallBase28isFnAttrDisallowedByOpBundleENS_9Attribute8AttrKindE>

Disassembly of section .text._ZNK4llvm8CallBase27hasClobberingOperandBundlesEv:

0000000000000000 <_ZNK4llvm8CallBase27hasClobberingOperandBundlesEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	bl	0 <_ZNK4llvm8CallBase27hasClobberingOperandBundlesEv>
   c:	cmp	x0, x1
  10:	b.eq	2c <_ZNK4llvm8CallBase27hasClobberingOperandBundlesEv+0x2c>  // b.none
  14:	ldr	x8, [x0], #16
  18:	ldr	w8, [x8, #8]
  1c:	cmp	w8, #0x2
  20:	b.cs	34 <_ZNK4llvm8CallBase27hasClobberingOperandBundlesEv+0x34>  // b.hs, b.nlast
  24:	cmp	x1, x0
  28:	b.ne	14 <_ZNK4llvm8CallBase27hasClobberingOperandBundlesEv+0x14>  // b.any
  2c:	mov	w0, wzr
  30:	b	38 <_ZNK4llvm8CallBase27hasClobberingOperandBundlesEv+0x38>
  34:	mov	w0, #0x1                   	// #1
  38:	ldp	x29, x30, [sp], #16
  3c:	ret

Disassembly of section .text._ZNK4llvm8CallBase20getNumOperandBundlesEv:

0000000000000000 <_ZNK4llvm8CallBase20getNumOperandBundlesEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #20]
  10:	tbnz	w8, #31, 1c <_ZNK4llvm8CallBase20getNumOperandBundlesEv+0x1c>
  14:	mov	x19, xzr
  18:	b	30 <_ZNK4llvm8CallBase20getNumOperandBundlesEv+0x30>
  1c:	mov	x20, x0
  20:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  24:	ldr	w8, [x20, #20]
  28:	mov	x19, x0
  2c:	tbnz	w8, #31, 48 <_ZNK4llvm8CallBase20getNumOperandBundlesEv+0x48>
  30:	mov	x8, xzr
  34:	sub	x8, x8, x19
  38:	ldp	x20, x19, [sp, #16]
  3c:	lsr	x0, x8, #4
  40:	ldp	x29, x30, [sp], #32
  44:	ret
  48:	mov	x0, x20
  4c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  50:	add	x8, x0, x1
  54:	b	34 <_ZNK4llvm8CallBase20getNumOperandBundlesEv+0x34>

Disassembly of section .text._ZNK4llvm8CallBase15bundle_op_infosEv:

0000000000000000 <_ZNK4llvm8CallBase15bundle_op_infosEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #20]
  10:	tbnz	w8, #31, 1c <_ZNK4llvm8CallBase15bundle_op_infosEv+0x1c>
  14:	mov	x19, xzr
  18:	b	30 <_ZNK4llvm8CallBase15bundle_op_infosEv+0x30>
  1c:	mov	x20, x0
  20:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  24:	ldr	w8, [x20, #20]
  28:	mov	x19, x0
  2c:	tbnz	w8, #31, 44 <_ZNK4llvm8CallBase15bundle_op_infosEv+0x44>
  30:	mov	x1, xzr
  34:	mov	x0, x19
  38:	ldp	x20, x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret
  44:	mov	x0, x20
  48:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  4c:	add	x1, x0, x1
  50:	b	34 <_ZNK4llvm8CallBase15bundle_op_infosEv+0x34>

Disassembly of section .text._ZN4llvm13isa_impl_wrapINS_14FPMathOperatorEPKNS_8CallInstES4_E4doitERKS4_:

0000000000000000 <_ZN4llvm13isa_impl_wrapINS_14FPMathOperatorEPKNS_8CallInstES4_E4doitERKS4_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0]
   c:	cbz	x0, 18 <_ZN4llvm13isa_impl_wrapINS_14FPMathOperatorEPKNS_8CallInstES4_E4doitERKS4_+0x18>
  10:	ldp	x29, x30, [sp], #16
  14:	b	0 <_ZN4llvm13isa_impl_wrapINS_14FPMathOperatorEPKNS_8CallInstES4_E4doitERKS4_>
  18:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_14FPMathOperatorEPKNS_8CallInstES4_E4doitERKS4_>
  1c:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_14FPMathOperatorEPKNS_8CallInstES4_E4doitERKS4_>
  20:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_14FPMathOperatorEPKNS_8CallInstES4_E4doitERKS4_>
  24:	add	x0, x0, #0x0
  28:	add	x1, x1, #0x0
  2c:	add	x3, x3, #0x0
  30:	mov	w2, #0x69                  	// #105
  34:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm14FPMathOperator7classofEPKNS_5ValueE:

0000000000000000 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x0, cc <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0xcc>
   c:	ldrb	w9, [x0, #16]
  10:	subs	w8, w9, #0x18
  14:	b.cs	24 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x24>  // b.hs, b.nlast
  18:	cmp	w9, #0x5
  1c:	b.ne	9c <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x9c>  // b.any
  20:	ldrh	w8, [x0, #18]
  24:	cmp	w8, #0x39
  28:	b.hi	9c <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x9c>  // b.pmore
  2c:	mov	x10, #0x5000                	// #20480
  30:	mov	w9, #0x1                   	// #1
  34:	movk	x10, #0x125, lsl #16
  38:	lsl	x9, x9, x8
  3c:	movk	x10, #0x40, lsl #48
  40:	tst	x9, x10
  44:	b.eq	50 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x50>  // b.none
  48:	mov	w0, #0x1                   	// #1
  4c:	b	c4 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0xc4>
  50:	mov	w9, #0x1                   	// #1
  54:	lsl	x8, x9, x8
  58:	tst	x8, #0x380000000000000
  5c:	b.eq	9c <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x9c>  // b.none
  60:	ldr	x8, [x0]
  64:	cbz	x8, 7c <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x7c>
  68:	ldrb	w9, [x8, #8]
  6c:	cmp	w9, #0xe
  70:	b.ne	a4 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0xa4>  // b.any
  74:	ldr	x8, [x8, #24]
  78:	cbnz	x8, 68 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x68>
  7c:	adrp	x0, 0 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE>
  80:	adrp	x1, 0 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE>
  84:	adrp	x3, 0 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE>
  88:	add	x0, x0, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0x69                  	// #105
  98:	bl	0 <__assert_fail>
  9c:	mov	w0, wzr
  a0:	b	c4 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0xc4>
  a4:	cmp	w9, #0x10
  a8:	b.ne	b8 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0xb8>  // b.any
  ac:	ldr	x8, [x8, #16]
  b0:	ldr	x8, [x8]
  b4:	ldrb	w9, [x8, #8]
  b8:	sub	w8, w9, #0x1
  bc:	cmp	w8, #0x6
  c0:	cset	w0, cc  // cc = lo, ul, last
  c4:	ldp	x29, x30, [sp], #16
  c8:	ret
  cc:	adrp	x0, 0 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE>
  d0:	adrp	x1, 0 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE>
  d4:	adrp	x3, 0 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE>
  d8:	add	x0, x0, #0x0
  dc:	add	x1, x1, #0x0
  e0:	add	x3, x3, #0x0
  e4:	b	94 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x94>

Disassembly of section .text._ZN4llvm12simple_ilistINS_10BasicBlockEJEE5frontEv:

0000000000000000 <_ZN4llvm12simple_ilistINS_10BasicBlockEJEE5frontEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #8]
   c:	ldrb	w9, [x8]
  10:	tbnz	w9, #2, 28 <_ZN4llvm12simple_ilistINS_10BasicBlockEJEE5frontEv+0x28>
  14:	sub	x9, x8, #0x18
  18:	cmp	x8, #0x0
  1c:	csel	x0, xzr, x9, eq  // eq = none
  20:	ldp	x29, x30, [sp], #16
  24:	ret
  28:	adrp	x0, 0 <_ZN4llvm12simple_ilistINS_10BasicBlockEJEE5frontEv>
  2c:	adrp	x1, 0 <_ZN4llvm12simple_ilistINS_10BasicBlockEJEE5frontEv>
  30:	adrp	x3, 0 <_ZN4llvm12simple_ilistINS_10BasicBlockEJEE5frontEv>
  34:	add	x0, x0, #0x0
  38:	add	x1, x1, #0x0
  3c:	add	x3, x3, #0x0
  40:	mov	w2, #0x8b                  	// #139
  44:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv:

0000000000000000 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	ldrb	w9, [x8]
  10:	tbnz	w9, #2, 28 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv+0x28>
  14:	sub	x9, x8, #0x18
  18:	cmp	x8, #0x0
  1c:	csel	x0, xzr, x9, eq  // eq = none
  20:	ldp	x29, x30, [sp], #16
  24:	ret
  28:	adrp	x0, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv>
  2c:	adrp	x1, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv>
  30:	adrp	x3, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv>
  34:	add	x0, x0, #0x0
  38:	add	x1, x1, #0x0
  3c:	add	x3, x3, #0x0
  40:	mov	w2, #0x8b                  	// #139
  44:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3Use9addToListEPPS0_:

0000000000000000 <_ZN4llvm3Use9addToListEPPS0_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x1]
   c:	mov	x9, x0
  10:	str	x8, [x9, #8]!
  14:	cbz	x8, 30 <_ZN4llvm3Use9addToListEPPS0_+0x30>
  18:	tst	x9, #0x3
  1c:	b.ne	54 <_ZN4llvm3Use9addToListEPPS0_+0x54>  // b.any
  20:	ldr	x10, [x8, #16]
  24:	and	x10, x10, #0x3
  28:	orr	x9, x10, x9
  2c:	str	x9, [x8, #16]
  30:	tst	x1, #0x3
  34:	b.ne	54 <_ZN4llvm3Use9addToListEPPS0_+0x54>  // b.any
  38:	ldr	x8, [x0, #16]
  3c:	and	x8, x8, #0x3
  40:	orr	x8, x8, x1
  44:	str	x8, [x0, #16]
  48:	str	x0, [x1]
  4c:	ldp	x29, x30, [sp], #16
  50:	ret
  54:	adrp	x0, 0 <_ZN4llvm3Use9addToListEPPS0_>
  58:	adrp	x1, 0 <_ZN4llvm3Use9addToListEPPS0_>
  5c:	adrp	x3, 0 <_ZN4llvm3Use9addToListEPPS0_>
  60:	add	x0, x0, #0x0
  64:	add	x1, x1, #0x0
  68:	add	x3, x3, #0x0
  6c:	mov	w2, #0xb3                  	// #179
  70:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPNS_10BasicBlockESt10unique_ptrINS_15DomTreeNodeBaseIS1_EESt14default_deleteIS5_EENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S8_EEE4initEj:

0000000000000000 <_ZN4llvm8DenseMapIPNS_10BasicBlockESt10unique_ptrINS_15DomTreeNodeBaseIS1_EESt14default_deleteIS5_EENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S8_EEE4initEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm8DenseMapIPNS_10BasicBlockESt10unique_ptrINS_15DomTreeNodeBaseIS1_EESt14default_deleteIS5_EENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S8_EEE4initEj>
  14:	str	w0, [x19, #24]
  18:	cbz	w0, 3c <_ZN4llvm8DenseMapIPNS_10BasicBlockESt10unique_ptrINS_15DomTreeNodeBaseIS1_EESt14default_deleteIS5_EENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S8_EEE4initEj+0x3c>
  1c:	mov	w8, w0
  20:	lsl	x0, x8, #4
  24:	bl	0 <_Znwm>
  28:	str	x0, [x19, #8]
  2c:	mov	x0, x19
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZN4llvm8DenseMapIPNS_10BasicBlockESt10unique_ptrINS_15DomTreeNodeBaseIS1_EESt14default_deleteIS5_EENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S8_EEE4initEj>
  3c:	stp	xzr, xzr, [x19, #8]
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_10BasicBlockESt10unique_ptrINS_15DomTreeNodeBaseIS2_EESt14default_deleteIS6_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S9_EEEES3_S9_SB_SE_E31getMinBucketToReserveForEntriesEj:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_10BasicBlockESt10unique_ptrINS_15DomTreeNodeBaseIS2_EESt14default_deleteIS6_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S9_EEEES3_S9_SB_SE_E31getMinBucketToReserveForEntriesEj>:
   0:	cbz	w1, 40 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_10BasicBlockESt10unique_ptrINS_15DomTreeNodeBaseIS2_EESt14default_deleteIS6_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S9_EEEES3_S9_SB_SE_E31getMinBucketToReserveForEntriesEj+0x40>
   4:	mov	w9, #0xaaab                	// #43691
   8:	lsl	w8, w1, #2
   c:	movk	w9, #0xaaaa, lsl #16
  10:	umull	x8, w8, w9
  14:	lsr	x8, x8, #33
  18:	add	w8, w8, #0x1
  1c:	orr	x8, x8, x8, lsr #1
  20:	orr	x8, x8, x8, lsr #2
  24:	orr	x8, x8, x8, lsr #4
  28:	orr	x8, x8, x8, lsr #8
  2c:	orr	x8, x8, x8, lsr #16
  30:	lsr	x9, x8, #32
  34:	orr	w8, w9, w8
  38:	add	w0, w8, #0x1
  3c:	ret
  40:	mov	w0, wzr
  44:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_10BasicBlockESt10unique_ptrINS_15DomTreeNodeBaseIS2_EESt14default_deleteIS6_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S9_EEEES3_S9_SB_SE_E9initEmptyEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_10BasicBlockESt10unique_ptrINS_15DomTreeNodeBaseIS2_EESt14default_deleteIS6_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S9_EEEES3_S9_SB_SE_E9initEmptyEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w8, w9, #0x1
  14:	tst	w9, w8
  18:	b.ne	40 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_10BasicBlockESt10unique_ptrINS_15DomTreeNodeBaseIS2_EESt14default_deleteIS6_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S9_EEEES3_S9_SB_SE_E9initEmptyEv+0x40>  // b.any
  1c:	cbz	w9, 38 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_10BasicBlockESt10unique_ptrINS_15DomTreeNodeBaseIS2_EESt14default_deleteIS6_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S9_EEEES3_S9_SB_SE_E9initEmptyEv+0x38>
  20:	ldr	x8, [x0, #8]
  24:	lsl	x9, x9, #4
  28:	mov	x10, #0xfffffffffffffff8    	// #-8
  2c:	subs	x9, x9, #0x10
  30:	str	x10, [x8], #16
  34:	b.ne	2c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_10BasicBlockESt10unique_ptrINS_15DomTreeNodeBaseIS2_EESt14default_deleteIS6_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S9_EEEES3_S9_SB_SE_E9initEmptyEv+0x2c>  // b.any
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_10BasicBlockESt10unique_ptrINS_15DomTreeNodeBaseIS2_EESt14default_deleteIS6_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S9_EEEES3_S9_SB_SE_E9initEmptyEv>
  44:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_10BasicBlockESt10unique_ptrINS_15DomTreeNodeBaseIS2_EESt14default_deleteIS6_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S9_EEEES3_S9_SB_SE_E9initEmptyEv>
  48:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_10BasicBlockESt10unique_ptrINS_15DomTreeNodeBaseIS2_EESt14default_deleteIS6_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S9_EEEES3_S9_SB_SE_E9initEmptyEv>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x15c                 	// #348
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_10BasicBlockESt10unique_ptrINS_15DomTreeNodeBaseIS2_EESt14default_deleteIS6_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S9_EEEES3_S9_SB_SE_E10destroyAllEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_10BasicBlockESt10unique_ptrINS_15DomTreeNodeBaseIS2_EESt14default_deleteIS6_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S9_EEEES3_S9_SB_SE_E10destroyAllEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #24]
  14:	cbz	w8, 60 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_10BasicBlockESt10unique_ptrINS_15DomTreeNodeBaseIS2_EESt14default_deleteIS6_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S9_EEEES3_S9_SB_SE_E10destroyAllEv+0x60>
  18:	ldr	x9, [x0, #8]
  1c:	lsl	x20, x8, #4
  20:	add	x21, x9, #0x8
  24:	ldur	x8, [x21, #-8]
  28:	orr	x8, x8, #0x8
  2c:	cmn	x8, #0x8
  30:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_10BasicBlockESt10unique_ptrINS_15DomTreeNodeBaseIS2_EESt14default_deleteIS6_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S9_EEEES3_S9_SB_SE_E10destroyAllEv+0x54>  // b.none
  34:	ldr	x19, [x21]
  38:	cbz	x19, 50 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_10BasicBlockESt10unique_ptrINS_15DomTreeNodeBaseIS2_EESt14default_deleteIS6_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S9_EEEES3_S9_SB_SE_E10destroyAllEv+0x50>
  3c:	ldr	x0, [x19, #24]
  40:	cbz	x0, 48 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_10BasicBlockESt10unique_ptrINS_15DomTreeNodeBaseIS2_EESt14default_deleteIS6_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S9_EEEES3_S9_SB_SE_E10destroyAllEv+0x48>
  44:	bl	0 <_ZdlPv>
  48:	mov	x0, x19
  4c:	bl	0 <_ZdlPv>
  50:	str	xzr, [x21]
  54:	subs	x20, x20, #0x10
  58:	add	x21, x21, #0x10
  5c:	b.ne	24 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_10BasicBlockESt10unique_ptrINS_15DomTreeNodeBaseIS2_EESt14default_deleteIS6_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S9_EEEES3_S9_SB_SE_E10destroyAllEv+0x24>  // b.any
  60:	ldp	x20, x19, [sp, #32]
  64:	ldr	x21, [sp, #16]
  68:	ldp	x29, x30, [sp], #48
  6c:	ret

Disassembly of section .text._ZNK4llvm13CoroBeginInst5getIdEv:

0000000000000000 <_ZNK4llvm13CoroBeginInst5getIdEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	w1, wzr
  10:	bl	0 <_ZNK4llvm13CoroBeginInst5getIdEv>
  14:	mov	x19, x0
  18:	str	x0, [x29, #24]
  1c:	add	x0, x29, #0x18
  20:	bl	0 <_ZNK4llvm13CoroBeginInst5getIdEv>
  24:	tbz	w0, #0, 38 <_ZNK4llvm13CoroBeginInst5getIdEv+0x38>
  28:	mov	x0, x19
  2c:	ldr	x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret
  38:	adrp	x0, 0 <_ZNK4llvm13CoroBeginInst5getIdEv>
  3c:	adrp	x1, 0 <_ZNK4llvm13CoroBeginInst5getIdEv>
  40:	adrp	x3, 0 <_ZNK4llvm13CoroBeginInst5getIdEv>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x108                 	// #264
  54:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13isa_impl_wrapINS_10CoroIdInstEPKNS_13AnyCoroIdInstES4_E4doitERKS4_:

0000000000000000 <_ZN4llvm13isa_impl_wrapINS_10CoroIdInstEPKNS_13AnyCoroIdInstES4_E4doitERKS4_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	cbz	x8, 34 <_ZN4llvm13isa_impl_wrapINS_10CoroIdInstEPKNS_13AnyCoroIdInstES4_E4doitERKS4_+0x34>
  10:	ldur	x8, [x8, #-24]
  14:	ldrb	w9, [x8, #16]
  18:	cmp	w9, #0x0
  1c:	csel	x8, x8, xzr, eq  // eq = none
  20:	ldr	w8, [x8, #36]
  24:	cmp	w8, #0x18
  28:	cset	w0, eq  // eq = none
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_10CoroIdInstEPKNS_13AnyCoroIdInstES4_E4doitERKS4_>
  38:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_10CoroIdInstEPKNS_13AnyCoroIdInstES4_E4doitERKS4_>
  3c:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_10CoroIdInstEPKNS_13AnyCoroIdInstES4_E4doitERKS4_>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x69                  	// #105
  50:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase13getArgOperandEj:

0000000000000000 <_ZNK4llvm8CallBase13getArgOperandEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	w19, w1
  10:	mov	x20, x0
  14:	bl	0 <_ZNK4llvm8CallBase13getArgOperandEj>
  18:	cmp	w0, w19
  1c:	b.ls	50 <_ZNK4llvm8CallBase13getArgOperandEj+0x50>  // b.plast
  20:	ldr	w8, [x20, #20]
  24:	and	x8, x8, #0xfffffff
  28:	cmp	w8, w19
  2c:	b.ls	70 <_ZNK4llvm8CallBase13getArgOperandEj+0x70>  // b.plast
  30:	mov	w9, #0x18                  	// #24
  34:	mneg	x8, x8, x9
  38:	add	x8, x20, x8
  3c:	umull	x9, w19, w9
  40:	ldr	x0, [x8, x9]
  44:	ldp	x20, x19, [sp, #16]
  48:	ldp	x29, x30, [sp], #32
  4c:	ret
  50:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  54:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  58:	adrp	x3, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  5c:	add	x0, x0, #0x0
  60:	add	x1, x1, #0x0
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x4df                 	// #1247
  6c:	bl	0 <__assert_fail>
  70:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  74:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  78:	adrp	x3, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  7c:	add	x0, x0, #0x0
  80:	add	x1, x1, #0x0
  84:	add	x3, x3, #0x0
  88:	mov	w2, #0x86a                 	// #2154
  8c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13isa_impl_wrapINS_13AnyCoroIdInstEPKNS_5ValueES4_E4doitERKS4_:

0000000000000000 <_ZN4llvm13isa_impl_wrapINS_13AnyCoroIdInstEPKNS_5ValueES4_E4doitERKS4_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0]
   c:	cbz	x0, 18 <_ZN4llvm13isa_impl_wrapINS_13AnyCoroIdInstEPKNS_5ValueES4_E4doitERKS4_+0x18>
  10:	ldp	x29, x30, [sp], #16
  14:	b	0 <_ZN4llvm13isa_impl_wrapINS_13AnyCoroIdInstEPKNS_5ValueES4_E4doitERKS4_>
  18:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_13AnyCoroIdInstEPKNS_5ValueES4_E4doitERKS4_>
  1c:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_13AnyCoroIdInstEPKNS_5ValueES4_E4doitERKS4_>
  20:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_13AnyCoroIdInstEPKNS_5ValueES4_E4doitERKS4_>
  24:	add	x0, x0, #0x0
  28:	add	x1, x1, #0x0
  2c:	add	x3, x3, #0x0
  30:	mov	w2, #0x69                  	// #105
  34:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13AnyCoroIdInst7classofEPKNS_5ValueE:

0000000000000000 <_ZN4llvm13AnyCoroIdInst7classofEPKNS_5ValueE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x0, 5c <_ZN4llvm13AnyCoroIdInst7classofEPKNS_5ValueE+0x5c>
   c:	ldrb	w8, [x0, #16]
  10:	cmp	w8, #0x50
  14:	b.ne	30 <_ZN4llvm13AnyCoroIdInst7classofEPKNS_5ValueE+0x30>  // b.any
  18:	ldur	x8, [x0, #-24]
  1c:	cbz	x8, 30 <_ZN4llvm13AnyCoroIdInst7classofEPKNS_5ValueE+0x30>
  20:	ldrb	w9, [x8, #16]
  24:	cbnz	w9, 30 <_ZN4llvm13AnyCoroIdInst7classofEPKNS_5ValueE+0x30>
  28:	ldrb	w9, [x8, #33]
  2c:	tbnz	w9, #5, 3c <_ZN4llvm13AnyCoroIdInst7classofEPKNS_5ValueE+0x3c>
  30:	mov	w0, wzr
  34:	ldp	x29, x30, [sp], #16
  38:	ret
  3c:	ldr	w8, [x8, #36]
  40:	orr	w9, w8, #0x1
  44:	cmp	w9, #0x19
  48:	cset	w9, eq  // eq = none
  4c:	cmp	w8, #0x1a
  50:	cset	w8, eq  // eq = none
  54:	orr	w0, w8, w9
  58:	b	34 <_ZN4llvm13AnyCoroIdInst7classofEPKNS_5ValueE+0x34>
  5c:	adrp	x0, 0 <_ZN4llvm13AnyCoroIdInst7classofEPKNS_5ValueE>
  60:	adrp	x1, 0 <_ZN4llvm13AnyCoroIdInst7classofEPKNS_5ValueE>
  64:	adrp	x3, 0 <_ZN4llvm13AnyCoroIdInst7classofEPKNS_5ValueE>
  68:	add	x0, x0, #0x0
  6c:	add	x1, x1, #0x0
  70:	add	x3, x3, #0x0
  74:	mov	w2, #0x69                  	// #105
  78:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase17getNumArgOperandsEv:

0000000000000000 <_ZNK4llvm8CallBase17getNumArgOperandsEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	bl	0 <_ZNK4llvm8CallBase17getNumArgOperandsEv>
  18:	mov	w8, w0
  1c:	mov	w20, #0x18                  	// #24
  20:	mneg	x8, x8, x20
  24:	mov	x0, x19
  28:	add	x21, x19, x8
  2c:	bl	0 <_ZNK4llvm8CallBase17getNumArgOperandsEv>
  30:	ldr	w8, [x19, #20]
  34:	mov	w9, w0
  38:	mneg	x9, x9, x20
  3c:	add	x9, x21, x9
  40:	and	x8, x8, #0xfffffff
  44:	mneg	x8, x8, x20
  48:	add	x8, x19, x8
  4c:	sub	x8, x9, x8
  50:	ldp	x20, x19, [sp, #32]
  54:	ldr	x21, [sp, #16]
  58:	sub	x8, x8, #0x18
  5c:	mov	w9, #0xaaab                	// #43691
  60:	lsr	x8, x8, #3
  64:	movk	w9, #0xaaaa, lsl #16
  68:	mul	w0, w8, w9
  6c:	ldp	x29, x30, [sp], #48
  70:	ret

Disassembly of section .text._ZNK4llvm8CallBase25getNumTotalBundleOperandsEv:

0000000000000000 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
  14:	cbz	w0, 34 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x34>
  18:	mov	x0, x19
  1c:	bl	0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
  20:	mov	w20, w0
  24:	mov	x0, x19
  28:	bl	0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
  2c:	subs	w0, w0, w20
  30:	b.cc	40 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x40>  // b.lo, b.ul, b.last
  34:	ldp	x20, x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret
  40:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
  44:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
  48:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x710                 	// #1808
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv:

0000000000000000 <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #16]
   c:	cmp	w8, #0x50
  10:	b.eq	34 <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv+0x34>  // b.none
  14:	cmp	w8, #0x23
  18:	b.eq	2c <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv+0x2c>  // b.none
  1c:	cmp	w8, #0x1d
  20:	b.ne	40 <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv+0x40>  // b.any
  24:	mov	w0, #0x2                   	// #2
  28:	b	38 <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv+0x38>
  2c:	ldp	x29, x30, [sp], #16
  30:	b	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
  34:	mov	w0, wzr
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv>
  44:	adrp	x1, 0 <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv>
  48:	add	x0, x0, #0x0
  4c:	add	x1, x1, #0x0
  50:	mov	w2, #0x46a                 	// #1130
  54:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZNK4llvm8CallBase27getBundleOperandsStartIndexEv:

0000000000000000 <_ZNK4llvm8CallBase27getBundleOperandsStartIndexEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZNK4llvm8CallBase27getBundleOperandsStartIndexEv>
  14:	cbz	w0, 30 <_ZNK4llvm8CallBase27getBundleOperandsStartIndexEv+0x30>
  18:	mov	x0, x19
  1c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  20:	ldr	w0, [x0, #8]
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	ret
  30:	adrp	x0, 0 <_ZNK4llvm8CallBase27getBundleOperandsStartIndexEv>
  34:	adrp	x1, 0 <_ZNK4llvm8CallBase27getBundleOperandsStartIndexEv>
  38:	adrp	x3, 0 <_ZNK4llvm8CallBase27getBundleOperandsStartIndexEv>
  3c:	add	x0, x0, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0x6ed                 	// #1773
  4c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase25getBundleOperandsEndIndexEv:

0000000000000000 <_ZNK4llvm8CallBase25getBundleOperandsEndIndexEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZNK4llvm8CallBase25getBundleOperandsEndIndexEv>
  14:	cbz	w0, 34 <_ZNK4llvm8CallBase25getBundleOperandsEndIndexEv+0x34>
  18:	mov	x0, x19
  1c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  20:	add	x8, x0, x1
  24:	ldur	w0, [x8, #-4]
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	ret
  34:	adrp	x0, 0 <_ZNK4llvm8CallBase25getBundleOperandsEndIndexEv>
  38:	adrp	x1, 0 <_ZNK4llvm8CallBase25getBundleOperandsEndIndexEv>
  3c:	adrp	x3, 0 <_ZNK4llvm8CallBase25getBundleOperandsEndIndexEv>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x6f3                 	// #1779
  50:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE:

0000000000000000 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x2
  14:	mov	w20, w1
  18:	mov	x21, x0
  1c:	bl	0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
  20:	cmp	w0, w20
  24:	b.ls	a0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0xa0>  // b.plast
  28:	ldr	w8, [x21, #20]
  2c:	and	x8, x8, #0xfffffff
  30:	cmp	w8, w20
  34:	b.ls	c0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0xc0>  // b.plast
  38:	mov	w9, #0x18                  	// #24
  3c:	mneg	x8, x8, x9
  40:	add	x8, x21, x8
  44:	umaddl	x0, w20, w9, x8
  48:	ldr	x8, [x0]
  4c:	cbz	x8, 74 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x74>
  50:	ldp	x9, x8, [x0, #8]
  54:	and	x8, x8, #0xfffffffffffffffc
  58:	str	x9, [x8]
  5c:	ldr	x9, [x0, #8]
  60:	cbz	x9, 74 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x74>
  64:	ldr	x10, [x9, #16]
  68:	and	x10, x10, #0x3
  6c:	orr	x8, x10, x8
  70:	str	x8, [x9, #16]
  74:	str	x19, [x0]
  78:	cbz	x19, 90 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x90>
  7c:	add	x1, x19, #0x8
  80:	ldp	x20, x19, [sp, #32]
  84:	ldr	x21, [sp, #16]
  88:	ldp	x29, x30, [sp], #48
  8c:	b	0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
  90:	ldp	x20, x19, [sp, #32]
  94:	ldr	x21, [sp, #16]
  98:	ldp	x29, x30, [sp], #48
  9c:	ret
  a0:	adrp	x0, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
  a4:	adrp	x1, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
  a8:	adrp	x3, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
  ac:	add	x0, x0, #0x0
  b0:	add	x1, x1, #0x0
  b4:	add	x3, x3, #0x0
  b8:	mov	w2, #0x4e4                 	// #1252
  bc:	bl	0 <__assert_fail>
  c0:	adrp	x0, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
  c4:	adrp	x1, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
  c8:	adrp	x3, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
  cc:	add	x0, x0, #0x0
  d0:	add	x1, x1, #0x0
  d4:	add	x3, x3, #0x0
  d8:	mov	w2, #0x86a                 	// #2154
  dc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13AnyCoroIdInst12getCoroBeginEv:

0000000000000000 <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
  14:	ldr	x8, [x19, #8]
  18:	str	x8, [x29, #24]
  1c:	cbz	x8, 78 <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv+0x78>
  20:	add	x0, x29, #0x18
  24:	bl	0 <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv>
  28:	cbz	x0, 90 <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv+0x90>
  2c:	ldrb	w8, [x0, #16]
  30:	cmp	w8, #0x50
  34:	b.ne	5c <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv+0x5c>  // b.any
  38:	ldur	x8, [x0, #-24]
  3c:	cbz	x8, 5c <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv+0x5c>
  40:	ldrb	w9, [x8, #16]
  44:	cbnz	w9, 5c <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv+0x5c>
  48:	ldrb	w9, [x8, #33]
  4c:	tbz	w9, #5, 5c <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv+0x5c>
  50:	ldr	w8, [x8, #36]
  54:	cmp	w8, #0x12
  58:	b.eq	6c <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv+0x6c>  // b.none
  5c:	ldr	x8, [x29, #24]
  60:	cbz	x8, b0 <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv+0xb0>
  64:	ldr	x8, [x8, #8]
  68:	b	18 <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv+0x18>
  6c:	ldr	x19, [sp, #16]
  70:	ldp	x29, x30, [sp], #32
  74:	ret
  78:	adrp	x0, 0 <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv>
  7c:	adrp	x1, 0 <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv>
  80:	add	x0, x0, #0x0
  84:	add	x1, x1, #0x0
  88:	mov	w2, #0x60                  	// #96
  8c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  90:	adrp	x0, 0 <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv>
  94:	adrp	x1, 0 <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv>
  98:	adrp	x3, 0 <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv>
  9c:	add	x0, x0, #0x0
  a0:	add	x1, x1, #0x0
  a4:	add	x3, x3, #0x0
  a8:	mov	w2, #0x69                  	// #105
  ac:	bl	0 <__assert_fail>
  b0:	adrp	x0, 0 <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv>
  b4:	adrp	x1, 0 <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv>
  b8:	adrp	x3, 0 <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x8d                  	// #141
  cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm15CoroSuspendInst11getCoroSaveEv:

0000000000000000 <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w1, wzr
   c:	bl	0 <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv>
  10:	cbz	x0, 78 <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv+0x78>
  14:	ldrb	w8, [x0, #16]
  18:	cmp	w8, #0x10
  1c:	b.eq	6c <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv+0x6c>  // b.none
  20:	cmp	w8, #0x50
  24:	b.ne	4c <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv+0x4c>  // b.any
  28:	ldur	x8, [x0, #-24]
  2c:	cbz	x8, 4c <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv+0x4c>
  30:	ldrb	w9, [x8, #16]
  34:	cbnz	w9, 4c <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv+0x4c>
  38:	ldrb	w9, [x8, #33]
  3c:	tbz	w9, #5, 4c <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv+0x4c>
  40:	ldr	w8, [x8, #36]
  44:	cmp	w8, #0x20
  48:	b.eq	70 <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv+0x70>  // b.none
  4c:	adrp	x0, 0 <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv>
  50:	adrp	x1, 0 <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv>
  54:	adrp	x3, 0 <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv>
  58:	add	x0, x0, #0x0
  5c:	add	x1, x1, #0x0
  60:	add	x3, x3, #0x0
  64:	mov	w2, #0x17c                 	// #380
  68:	bl	0 <__assert_fail>
  6c:	mov	x0, xzr
  70:	ldp	x29, x30, [sp], #16
  74:	ret
  78:	adrp	x0, 0 <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv>
  7c:	adrp	x1, 0 <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv>
  80:	adrp	x3, 0 <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv>
  84:	add	x0, x0, #0x0
  88:	add	x1, x1, #0x0
  8c:	add	x3, x3, #0x0
  90:	mov	w2, #0x69                  	// #105
  94:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13isa_impl_wrapINS_15CoroSuspendInstEPKNS_18AnyCoroSuspendInstES4_E4doitERKS4_:

0000000000000000 <_ZN4llvm13isa_impl_wrapINS_15CoroSuspendInstEPKNS_18AnyCoroSuspendInstES4_E4doitERKS4_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	cbz	x8, 34 <_ZN4llvm13isa_impl_wrapINS_15CoroSuspendInstEPKNS_18AnyCoroSuspendInstES4_E4doitERKS4_+0x34>
  10:	ldur	x8, [x8, #-24]
  14:	ldrb	w9, [x8, #16]
  18:	cmp	w9, #0x0
  1c:	csel	x8, x8, xzr, eq  // eq = none
  20:	ldr	w8, [x8, #36]
  24:	cmp	w8, #0x23
  28:	cset	w0, eq  // eq = none
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_15CoroSuspendInstEPKNS_18AnyCoroSuspendInstES4_E4doitERKS4_>
  38:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_15CoroSuspendInstEPKNS_18AnyCoroSuspendInstES4_E4doitERKS4_>
  3c:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_15CoroSuspendInstEPKNS_18AnyCoroSuspendInstES4_E4doitERKS4_>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x69                  	// #105
  50:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12simple_ilistINS_11InstructionEJEE5frontEv:

0000000000000000 <_ZN4llvm12simple_ilistINS_11InstructionEJEE5frontEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #8]
   c:	ldrb	w9, [x8]
  10:	tbnz	w9, #2, 28 <_ZN4llvm12simple_ilistINS_11InstructionEJEE5frontEv+0x28>
  14:	sub	x9, x8, #0x18
  18:	cmp	x8, #0x0
  1c:	csel	x0, xzr, x9, eq  // eq = none
  20:	ldp	x29, x30, [sp], #16
  24:	ret
  28:	adrp	x0, 0 <_ZN4llvm12simple_ilistINS_11InstructionEJEE5frontEv>
  2c:	adrp	x1, 0 <_ZN4llvm12simple_ilistINS_11InstructionEJEE5frontEv>
  30:	adrp	x3, 0 <_ZN4llvm12simple_ilistINS_11InstructionEJEE5frontEv>
  34:	add	x0, x0, #0x0
  38:	add	x1, x1, #0x0
  3c:	add	x3, x3, #0x0
  40:	mov	w2, #0x8b                  	// #139
  44:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm5TwineC2ENS0_5ChildENS0_8NodeKindES1_S2_:

0000000000000000 <_ZN4llvm5TwineC2ENS0_5ChildENS0_8NodeKindES1_S2_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	stp	x1, x3, [x0]
   c:	strb	w2, [x0, #16]
  10:	strb	w4, [x0, #17]
  14:	bl	0 <_ZN4llvm5TwineC2ENS0_5ChildENS0_8NodeKindES1_S2_>
  18:	tbz	w0, #0, 24 <_ZN4llvm5TwineC2ENS0_5ChildENS0_8NodeKindES1_S2_+0x24>
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	adrp	x0, 0 <_ZN4llvm5TwineC2ENS0_5ChildENS0_8NodeKindES1_S2_>
  28:	adrp	x1, 0 <_ZN4llvm5TwineC2ENS0_5ChildENS0_8NodeKindES1_S2_>
  2c:	adrp	x3, 0 <_ZN4llvm5TwineC2ENS0_5ChildENS0_8NodeKindES1_S2_>
  30:	add	x0, x0, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x3, x3, #0x0
  3c:	mov	w2, #0xb8                  	// #184
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm5Twine7isValidEv:

0000000000000000 <_ZNK4llvm5Twine7isValidEv>:
   0:	ldrb	w9, [x0, #16]
   4:	ldrb	w8, [x0, #17]
   8:	cmp	w9, #0x1
   c:	b.hi	1c <_ZNK4llvm5Twine7isValidEv+0x1c>  // b.pmore
  10:	cmp	w8, #0x1
  14:	b.ne	78 <_ZNK4llvm5Twine7isValidEv+0x78>  // b.any
  18:	b	80 <_ZNK4llvm5Twine7isValidEv+0x80>
  1c:	cbz	w8, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  20:	cmp	w8, #0x1
  24:	b.ne	38 <_ZNK4llvm5Twine7isValidEv+0x38>  // b.any
  28:	cmp	w9, #0x2
  2c:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  30:	mov	w8, #0x1                   	// #1
  34:	b	40 <_ZNK4llvm5Twine7isValidEv+0x40>
  38:	cmp	w9, #0x2
  3c:	b.ne	58 <_ZNK4llvm5Twine7isValidEv+0x58>  // b.any
  40:	ldr	x9, [x0]
  44:	ldrb	w10, [x9, #16]
  48:	cbz	w10, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  4c:	ldrb	w9, [x9, #17]
  50:	cmp	w9, #0x1
  54:	b.eq	78 <_ZNK4llvm5Twine7isValidEv+0x78>  // b.none
  58:	cmp	w8, #0x2
  5c:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  60:	ldr	x8, [x0, #8]
  64:	ldrb	w9, [x8, #16]
  68:	cbz	w9, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  6c:	ldrb	w8, [x8, #17]
  70:	cmp	w8, #0x1
  74:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  78:	mov	w0, wzr
  7c:	ret
  80:	mov	w0, #0x1                   	// #1
  84:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIPNS_10BasicBlockELb1EE9push_backERKS2_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIPNS_10BasicBlockELb1EE9push_backERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseIPNS_10BasicBlockELb1EE9push_backERKS2_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	x10, [x20]
  28:	str	x10, [x9, w8, uxtw #3]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseIPNS_10BasicBlockELb1EE9push_backERKS2_+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x8                   	// #8
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseIPNS_10BasicBlockELb1EE9push_backERKS2_+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_10BasicBlockELb1EE9push_backERKS2_>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_10BasicBlockELb1EE9push_backERKS2_>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_10BasicBlockELb1EE9push_backERKS2_>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm5TwineC2ERKNS_9StringRefE:

0000000000000000 <_ZN4llvm5TwineC2ERKNS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w8, #0x105                 	// #261
   c:	strh	w8, [x0, #16]
  10:	stp	x1, xzr, [x0]
  14:	bl	0 <_ZN4llvm5TwineC2ERKNS_9StringRefE>
  18:	tbz	w0, #0, 24 <_ZN4llvm5TwineC2ERKNS_9StringRefE+0x24>
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	adrp	x0, 0 <_ZN4llvm5TwineC2ERKNS_9StringRefE>
  28:	adrp	x1, 0 <_ZN4llvm5TwineC2ERKNS_9StringRefE>
  2c:	adrp	x3, 0 <_ZN4llvm5TwineC2ERKNS_9StringRefE>
  30:	add	x0, x0, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x3, x3, #0x0
  3c:	mov	w2, #0x121                 	// #289
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm7PHINode18getBasicBlockIndexEPKNS_10BasicBlockE:

0000000000000000 <_ZNK4llvm7PHINode18getBasicBlockIndexEPKNS_10BasicBlockE>:
   0:	ldr	w9, [x0, #20]
   4:	and	x10, x9, #0xfffffff
   8:	cbz	w10, 54 <_ZNK4llvm7PHINode18getBasicBlockIndexEPKNS_10BasicBlockE+0x54>
   c:	mov	x8, x0
  10:	ldr	w13, [x8, #56]
  14:	mov	w12, #0x18                  	// #24
  18:	mneg	x11, x10, x12
  1c:	orr	x14, xzr, #0x8
  20:	mov	x0, xzr
  24:	add	x11, x8, x11
  28:	madd	x12, x13, x12, x14
  2c:	mov	x13, x11
  30:	tbz	w9, #30, 38 <_ZNK4llvm7PHINode18getBasicBlockIndexEPKNS_10BasicBlockE+0x38>
  34:	ldur	x13, [x8, #-8]
  38:	add	x13, x13, x12
  3c:	ldr	x13, [x13, x0, lsl #3]
  40:	cmp	x13, x1
  44:	b.eq	58 <_ZNK4llvm7PHINode18getBasicBlockIndexEPKNS_10BasicBlockE+0x58>  // b.none
  48:	add	x0, x0, #0x1
  4c:	cmp	w10, w0
  50:	b.ne	2c <_ZNK4llvm7PHINode18getBasicBlockIndexEPKNS_10BasicBlockE+0x2c>  // b.any
  54:	mov	w0, #0xffffffff            	// #-1
  58:	ret

Disassembly of section .text._ZNK4llvm7PHINode16getIncomingValueEj:

0000000000000000 <_ZNK4llvm7PHINode16getIncomingValueEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #20]
   c:	and	x8, x9, #0xfffffff
  10:	cmp	w8, w1
  14:	b.ls	44 <_ZNK4llvm7PHINode16getIncomingValueEj+0x44>  // b.plast
  18:	tbnz	w9, #30, 2c <_ZNK4llvm7PHINode16getIncomingValueEj+0x2c>
  1c:	mov	w9, #0x18                  	// #24
  20:	mneg	x8, x8, x9
  24:	add	x8, x0, x8
  28:	b	30 <_ZNK4llvm7PHINode16getIncomingValueEj+0x30>
  2c:	ldur	x8, [x0, #-8]
  30:	mov	w9, #0x18                  	// #24
  34:	umull	x9, w1, w9
  38:	ldr	x0, [x8, x9]
  3c:	ldp	x29, x30, [sp], #16
  40:	ret
  44:	adrp	x0, 0 <_ZNK4llvm7PHINode16getIncomingValueEj>
  48:	adrp	x1, 0 <_ZNK4llvm7PHINode16getIncomingValueEj>
  4c:	adrp	x3, 0 <_ZNK4llvm7PHINode16getIncomingValueEj>
  50:	add	x0, x0, #0x0
  54:	add	x1, x1, #0x0
  58:	add	x3, x3, #0x0
  5c:	mov	w2, #0xadf                 	// #2783
  60:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE:

0000000000000000 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #20]
  14:	ldr	w9, [x0, #56]
  18:	mov	x19, x2
  1c:	mov	x20, x0
  20:	and	w8, w8, #0xfffffff
  24:	cmp	w8, w9
  28:	mov	x21, x1
  2c:	b.ne	40 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0x40>  // b.any
  30:	mov	x0, x20
  34:	bl	0 <_ZN4llvm7PHINode12growOperandsEv>
  38:	ldr	w8, [x20, #20]
  3c:	and	w8, w8, #0xfffffff
  40:	add	w1, w8, #0x1
  44:	mov	x0, x20
  48:	bl	0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
  4c:	ldr	w8, [x20, #20]
  50:	mov	x0, x20
  54:	mov	x2, x21
  58:	and	w8, w8, #0xfffffff
  5c:	sub	w1, w8, #0x1
  60:	bl	0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
  64:	ldr	w8, [x20, #20]
  68:	mov	x0, x20
  6c:	mov	x2, x19
  70:	ldp	x20, x19, [sp, #32]
  74:	ldr	x21, [sp, #16]
  78:	and	w8, w8, #0xfffffff
  7c:	sub	w1, w8, #0x1
  80:	ldp	x29, x30, [sp], #48
  84:	b	0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>

Disassembly of section .text._ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE:

0000000000000000 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x2, 94 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0x94>
   c:	ldr	x8, [x0]
  10:	ldr	x9, [x2]
  14:	cmp	x8, x9
  18:	b.ne	b4 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0xb4>  // b.any
  1c:	ldr	w9, [x0, #20]
  20:	and	x8, x9, #0xfffffff
  24:	cmp	w8, w1
  28:	b.ls	d4 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0xd4>  // b.plast
  2c:	tbnz	w9, #30, 40 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0x40>
  30:	mov	w9, #0x18                  	// #24
  34:	mneg	x8, x8, x9
  38:	add	x8, x0, x8
  3c:	b	44 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0x44>
  40:	ldur	x8, [x0, #-8]
  44:	mov	w9, #0x18                  	// #24
  48:	umaddl	x0, w1, w9, x8
  4c:	ldr	x9, [x0]
  50:	cbz	x9, 84 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0x84>
  54:	mov	w9, w1
  58:	mov	w10, #0x18                  	// #24
  5c:	madd	x9, x9, x10, x8
  60:	ldp	x10, x8, [x9, #8]
  64:	and	x8, x8, #0xfffffffffffffffc
  68:	str	x10, [x8]
  6c:	ldr	x9, [x9, #8]
  70:	cbz	x9, 84 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0x84>
  74:	ldr	x10, [x9, #16]
  78:	and	x10, x10, #0x3
  7c:	orr	x8, x10, x8
  80:	str	x8, [x9, #16]
  84:	add	x1, x2, #0x8
  88:	str	x2, [x0]
  8c:	ldp	x29, x30, [sp], #16
  90:	b	0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
  94:	adrp	x0, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
  98:	adrp	x1, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
  9c:	adrp	x3, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
  a0:	add	x0, x0, #0x0
  a4:	add	x1, x1, #0x0
  a8:	add	x3, x3, #0x0
  ac:	mov	w2, #0xa5e                 	// #2654
  b0:	bl	0 <__assert_fail>
  b4:	adrp	x0, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
  b8:	adrp	x1, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
  bc:	adrp	x3, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
  c0:	add	x0, x0, #0x0
  c4:	add	x1, x1, #0x0
  c8:	add	x3, x3, #0x0
  cc:	mov	w2, #0xa60                 	// #2656
  d0:	bl	0 <__assert_fail>
  d4:	adrp	x0, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
  d8:	adrp	x1, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
  dc:	adrp	x3, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
  e0:	add	x0, x0, #0x0
  e4:	add	x1, x1, #0x0
  e8:	add	x3, x3, #0x0
  ec:	mov	w2, #0xadf                 	// #2783
  f0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm7PHINodeC2EPNS_4TypeEjRKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm7PHINodeC2EPNS_4TypeEjRKNS_5TwineEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x5, x4
  14:	mov	x19, x3
  18:	mov	w20, w2
  1c:	mov	w2, #0x37                  	// #55
  20:	mov	x3, xzr
  24:	mov	w4, wzr
  28:	mov	x21, x0
  2c:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
  30:	mov	x0, x21
  34:	mov	x1, x19
  38:	str	w20, [x21, #56]
  3c:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  40:	ldr	w1, [x21, #56]
  44:	mov	x0, x21
  48:	ldp	x20, x19, [sp, #32]
  4c:	ldr	x21, [sp, #16]
  50:	mov	w2, #0x1                   	// #1
  54:	ldp	x29, x30, [sp], #48
  58:	b	0 <_ZN4llvm4User16allocHungoffUsesEjb>

Disassembly of section .text._ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_:

0000000000000000 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	mov	x20, x2
  18:	mov	x21, x1
  1c:	mov	x19, x0
  20:	cmp	x1, x2
  24:	mov	x22, xzr
  28:	str	x1, [sp, #8]
  2c:	b.eq	84 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_+0x84>  // b.none
  30:	mov	x8, x21
  34:	cbz	x8, 128 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_+0x128>
  38:	ldr	x8, [x8, #8]
  3c:	str	x8, [sp, #8]
  40:	cbz	x8, 78 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_+0x78>
  44:	add	x0, sp, #0x8
  48:	bl	0 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_>
  4c:	cbz	x0, e8 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_+0xe8>
  50:	ldrb	w8, [x0, #16]
  54:	cmp	w8, #0x18
  58:	b.cc	68 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_+0x68>  // b.lo, b.ul, b.last
  5c:	sub	w8, w8, #0x19
  60:	cmp	w8, #0xa
  64:	b.ls	74 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_+0x74>  // b.plast
  68:	ldr	x8, [sp, #8]
  6c:	cbnz	x8, 38 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_+0x38>
  70:	b	108 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_+0x108>
  74:	ldr	x8, [sp, #8]
  78:	cmp	x8, x20
  7c:	add	x22, x22, #0x1
  80:	b.ne	34 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_+0x34>  // b.any
  84:	ldp	w8, w9, [x19, #8]
  88:	sub	x9, x9, x8
  8c:	cmp	x22, x9
  90:	b.ls	ac <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_+0xac>  // b.plast
  94:	add	x2, x22, x8
  98:	add	x1, x19, #0x10
  9c:	mov	w3, #0x8                   	// #8
  a0:	mov	x0, x19
  a4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  a8:	ldr	w8, [x19, #8]
  ac:	ldr	x9, [x19]
  b0:	mov	x0, x21
  b4:	mov	x1, x20
  b8:	add	x2, x9, x8, lsl #3
  bc:	bl	0 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_>
  c0:	ldp	w8, w9, [x19, #8]
  c4:	add	x8, x22, x8
  c8:	cmp	x8, x9
  cc:	b.hi	148 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_+0x148>  // b.pmore
  d0:	str	w8, [x19, #8]
  d4:	ldp	x20, x19, [sp, #48]
  d8:	ldp	x22, x21, [sp, #32]
  dc:	ldp	x29, x30, [sp, #16]
  e0:	add	sp, sp, #0x40
  e4:	ret
  e8:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_>
  ec:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_>
  f0:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_>
  f4:	add	x0, x0, #0x0
  f8:	add	x1, x1, #0x0
  fc:	add	x3, x3, #0x0
 100:	mov	w2, #0x69                  	// #105
 104:	bl	0 <__assert_fail>
 108:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_>
 10c:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_>
 110:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_>
 114:	add	x0, x0, #0x0
 118:	add	x1, x1, #0x0
 11c:	add	x3, x3, #0x0
 120:	mov	w2, #0x8d                  	// #141
 124:	bl	0 <__assert_fail>
 128:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_>
 12c:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_>
 130:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_>
 134:	add	x0, x0, #0x0
 138:	add	x1, x1, #0x0
 13c:	add	x3, x3, #0x0
 140:	mov	w2, #0x50                  	// #80
 144:	bl	0 <__assert_fail>
 148:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_>
 14c:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_>
 150:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_>
 154:	add	x0, x0, #0x0
 158:	add	x1, x1, #0x0
 15c:	add	x3, x3, #0x0
 160:	mov	w2, #0x43                  	// #67
 164:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN4llvm12PredIteratorINS2_10BasicBlockENS2_5Value18user_iterator_implINS2_4UserEEEEEPPS4_EET0_T_SD_SC_:

0000000000000000 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN4llvm12PredIteratorINS2_10BasicBlockENS2_5Value18user_iterator_implINS2_4UserEEEEEPPS4_EET0_T_SD_SC_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	mov	x19, x2
  14:	cmp	x0, x1
  18:	str	x0, [sp, #8]
  1c:	b.eq	9c <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN4llvm12PredIteratorINS2_10BasicBlockENS2_5Value18user_iterator_implINS2_4UserEEEEEPPS4_EET0_T_SD_SC_+0x9c>  // b.none
  20:	mov	x20, x1
  24:	cbz	x0, 130 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN4llvm12PredIteratorINS2_10BasicBlockENS2_5Value18user_iterator_implINS2_4UserEEEEEPPS4_EET0_T_SD_SC_+0x130>
  28:	add	x0, sp, #0x8
  2c:	bl	0 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN4llvm12PredIteratorINS2_10BasicBlockENS2_5Value18user_iterator_implINS2_4UserEEEEEPPS4_EET0_T_SD_SC_>
  30:	cbz	x0, b0 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN4llvm12PredIteratorINS2_10BasicBlockENS2_5Value18user_iterator_implINS2_4UserEEEEEPPS4_EET0_T_SD_SC_+0xb0>
  34:	ldrb	w8, [x0, #16]
  38:	cmp	w8, #0x17
  3c:	b.ls	f0 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN4llvm12PredIteratorINS2_10BasicBlockENS2_5Value18user_iterator_implINS2_4UserEEEEEPPS4_EET0_T_SD_SC_+0xf0>  // b.plast
  40:	ldr	x8, [x0, #40]
  44:	str	x8, [x19]
  48:	ldr	x8, [sp, #8]
  4c:	cbz	x8, 110 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN4llvm12PredIteratorINS2_10BasicBlockENS2_5Value18user_iterator_implINS2_4UserEEEEEPPS4_EET0_T_SD_SC_+0x110>
  50:	ldr	x0, [x8, #8]
  54:	str	x0, [sp, #8]
  58:	cbz	x0, 90 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN4llvm12PredIteratorINS2_10BasicBlockENS2_5Value18user_iterator_implINS2_4UserEEEEEPPS4_EET0_T_SD_SC_+0x90>
  5c:	add	x0, sp, #0x8
  60:	bl	0 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN4llvm12PredIteratorINS2_10BasicBlockENS2_5Value18user_iterator_implINS2_4UserEEEEEPPS4_EET0_T_SD_SC_>
  64:	cbz	x0, b0 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN4llvm12PredIteratorINS2_10BasicBlockENS2_5Value18user_iterator_implINS2_4UserEEEEEPPS4_EET0_T_SD_SC_+0xb0>
  68:	ldrb	w8, [x0, #16]
  6c:	cmp	w8, #0x18
  70:	b.cc	80 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN4llvm12PredIteratorINS2_10BasicBlockENS2_5Value18user_iterator_implINS2_4UserEEEEEPPS4_EET0_T_SD_SC_+0x80>  // b.lo, b.ul, b.last
  74:	sub	w8, w8, #0x19
  78:	cmp	w8, #0xa
  7c:	b.ls	8c <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN4llvm12PredIteratorINS2_10BasicBlockENS2_5Value18user_iterator_implINS2_4UserEEEEEPPS4_EET0_T_SD_SC_+0x8c>  // b.plast
  80:	ldr	x8, [sp, #8]
  84:	cbnz	x8, 50 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN4llvm12PredIteratorINS2_10BasicBlockENS2_5Value18user_iterator_implINS2_4UserEEEEEPPS4_EET0_T_SD_SC_+0x50>
  88:	b	d0 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN4llvm12PredIteratorINS2_10BasicBlockENS2_5Value18user_iterator_implINS2_4UserEEEEEPPS4_EET0_T_SD_SC_+0xd0>
  8c:	ldr	x0, [sp, #8]
  90:	cmp	x0, x20
  94:	add	x19, x19, #0x8
  98:	b.ne	24 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN4llvm12PredIteratorINS2_10BasicBlockENS2_5Value18user_iterator_implINS2_4UserEEEEEPPS4_EET0_T_SD_SC_+0x24>  // b.any
  9c:	mov	x0, x19
  a0:	ldp	x20, x19, [sp, #32]
  a4:	ldp	x29, x30, [sp, #16]
  a8:	add	sp, sp, #0x30
  ac:	ret
  b0:	adrp	x0, 0 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN4llvm12PredIteratorINS2_10BasicBlockENS2_5Value18user_iterator_implINS2_4UserEEEEEPPS4_EET0_T_SD_SC_>
  b4:	adrp	x1, 0 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN4llvm12PredIteratorINS2_10BasicBlockENS2_5Value18user_iterator_implINS2_4UserEEEEEPPS4_EET0_T_SD_SC_>
  b8:	adrp	x3, 0 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN4llvm12PredIteratorINS2_10BasicBlockENS2_5Value18user_iterator_implINS2_4UserEEEEEPPS4_EET0_T_SD_SC_>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x69                  	// #105
  cc:	bl	0 <__assert_fail>
  d0:	adrp	x0, 0 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN4llvm12PredIteratorINS2_10BasicBlockENS2_5Value18user_iterator_implINS2_4UserEEEEEPPS4_EET0_T_SD_SC_>
  d4:	adrp	x1, 0 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN4llvm12PredIteratorINS2_10BasicBlockENS2_5Value18user_iterator_implINS2_4UserEEEEEPPS4_EET0_T_SD_SC_>
  d8:	adrp	x3, 0 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN4llvm12PredIteratorINS2_10BasicBlockENS2_5Value18user_iterator_implINS2_4UserEEEEEPPS4_EET0_T_SD_SC_>
  dc:	add	x0, x0, #0x0
  e0:	add	x1, x1, #0x0
  e4:	add	x3, x3, #0x0
  e8:	mov	w2, #0x8d                  	// #141
  ec:	bl	0 <__assert_fail>
  f0:	adrp	x0, 0 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN4llvm12PredIteratorINS2_10BasicBlockENS2_5Value18user_iterator_implINS2_4UserEEEEEPPS4_EET0_T_SD_SC_>
  f4:	adrp	x1, 0 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN4llvm12PredIteratorINS2_10BasicBlockENS2_5Value18user_iterator_implINS2_4UserEEEEEPPS4_EET0_T_SD_SC_>
  f8:	adrp	x3, 0 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN4llvm12PredIteratorINS2_10BasicBlockENS2_5Value18user_iterator_implINS2_4UserEEEEEPPS4_EET0_T_SD_SC_>
  fc:	add	x0, x0, #0x0
 100:	add	x1, x1, #0x0
 104:	add	x3, x3, #0x0
 108:	mov	w2, #0x108                 	// #264
 10c:	bl	0 <__assert_fail>
 110:	adrp	x0, 0 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN4llvm12PredIteratorINS2_10BasicBlockENS2_5Value18user_iterator_implINS2_4UserEEEEEPPS4_EET0_T_SD_SC_>
 114:	adrp	x1, 0 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN4llvm12PredIteratorINS2_10BasicBlockENS2_5Value18user_iterator_implINS2_4UserEEEEEPPS4_EET0_T_SD_SC_>
 118:	adrp	x3, 0 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN4llvm12PredIteratorINS2_10BasicBlockENS2_5Value18user_iterator_implINS2_4UserEEEEEPPS4_EET0_T_SD_SC_>
 11c:	add	x0, x0, #0x0
 120:	add	x1, x1, #0x0
 124:	add	x3, x3, #0x0
 128:	mov	w2, #0x50                  	// #80
 12c:	bl	0 <__assert_fail>
 130:	adrp	x0, 0 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN4llvm12PredIteratorINS2_10BasicBlockENS2_5Value18user_iterator_implINS2_4UserEEEEEPPS4_EET0_T_SD_SC_>
 134:	adrp	x1, 0 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN4llvm12PredIteratorINS2_10BasicBlockENS2_5Value18user_iterator_implINS2_4UserEEEEEPPS4_EET0_T_SD_SC_>
 138:	adrp	x3, 0 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN4llvm12PredIteratorINS2_10BasicBlockENS2_5Value18user_iterator_implINS2_4UserEEEEEPPS4_EET0_T_SD_SC_>
 13c:	add	x0, x0, #0x0
 140:	add	x1, x1, #0x0
 144:	add	x3, x3, #0x0
 148:	mov	w2, #0x4a                  	// #74
 14c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm15CatchSwitchInst12getParentPadEv:

0000000000000000 <_ZNK4llvm15CatchSwitchInst12getParentPadEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #20]
   c:	and	x8, x9, #0xfffffff
  10:	cbz	w8, 38 <_ZNK4llvm15CatchSwitchInst12getParentPadEv+0x38>
  14:	tbnz	w9, #30, 28 <_ZNK4llvm15CatchSwitchInst12getParentPadEv+0x28>
  18:	mov	w9, #0x18                  	// #24
  1c:	mneg	x8, x8, x9
  20:	add	x8, x0, x8
  24:	b	2c <_ZNK4llvm15CatchSwitchInst12getParentPadEv+0x2c>
  28:	ldur	x8, [x0, #-8]
  2c:	ldr	x0, [x8]
  30:	ldp	x29, x30, [sp], #16
  34:	ret
  38:	adrp	x0, 0 <_ZNK4llvm15CatchSwitchInst12getParentPadEv>
  3c:	adrp	x1, 0 <_ZNK4llvm15CatchSwitchInst12getParentPadEv>
  40:	adrp	x3, 0 <_ZNK4llvm15CatchSwitchInst12getParentPadEv>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x1126                	// #4390
  54:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17CleanupReturnInst6CreateEPNS_5ValueEPNS_10BasicBlockES4_:

0000000000000000 <_ZN4llvm17CleanupReturnInst6CreateEPNS_5ValueEPNS_10BasicBlockES4_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	cbz	x0, 6c <_ZN4llvm17CleanupReturnInst6CreateEPNS_5ValueEPNS_10BasicBlockES4_+0x6c>
  18:	cmp	x1, #0x0
  1c:	mov	w8, #0x1                   	// #1
  20:	cinc	w22, w8, ne  // ne = any
  24:	mov	x20, x1
  28:	mov	x21, x0
  2c:	mov	w0, #0x38                  	// #56
  30:	mov	w1, w22
  34:	mov	x19, x2
  38:	bl	0 <_ZN4llvm4UsernwEmj>
  3c:	mov	x1, x21
  40:	mov	x2, x20
  44:	mov	w3, w22
  48:	mov	x4, x19
  4c:	mov	x23, x0
  50:	bl	0 <_ZN4llvm17CleanupReturnInstC1EPNS_5ValueEPNS_10BasicBlockEjS4_>
  54:	mov	x0, x23
  58:	ldp	x20, x19, [sp, #48]
  5c:	ldp	x22, x21, [sp, #32]
  60:	ldr	x23, [sp, #16]
  64:	ldp	x29, x30, [sp], #64
  68:	ret
  6c:	adrp	x0, 0 <_ZN4llvm17CleanupReturnInst6CreateEPNS_5ValueEPNS_10BasicBlockES4_>
  70:	adrp	x1, 0 <_ZN4llvm17CleanupReturnInst6CreateEPNS_5ValueEPNS_10BasicBlockES4_>
  74:	adrp	x3, 0 <_ZN4llvm17CleanupReturnInst6CreateEPNS_5ValueEPNS_10BasicBlockES4_>
  78:	add	x0, x0, #0x0
  7c:	add	x1, x1, #0x0
  80:	add	x3, x3, #0x0
  84:	mov	w2, #0x11f6                	// #4598
  88:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15CatchSwitchInst13setUnwindDestEPNS_10BasicBlockE:

0000000000000000 <_ZN4llvm15CatchSwitchInst13setUnwindDestEPNS_10BasicBlockE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x1, 80 <_ZN4llvm15CatchSwitchInst13setUnwindDestEPNS_10BasicBlockE+0x80>
   c:	ldrb	w8, [x0, #18]
  10:	tbz	w8, #0, a0 <_ZN4llvm15CatchSwitchInst13setUnwindDestEPNS_10BasicBlockE+0xa0>
  14:	ldr	w9, [x0, #20]
  18:	and	x8, x9, #0xfffffff
  1c:	cmp	w8, #0x1
  20:	b.ls	c0 <_ZN4llvm15CatchSwitchInst13setUnwindDestEPNS_10BasicBlockE+0xc0>  // b.plast
  24:	tbnz	w9, #30, 38 <_ZN4llvm15CatchSwitchInst13setUnwindDestEPNS_10BasicBlockE+0x38>
  28:	mov	w9, #0x18                  	// #24
  2c:	mneg	x8, x8, x9
  30:	add	x8, x0, x8
  34:	b	3c <_ZN4llvm15CatchSwitchInst13setUnwindDestEPNS_10BasicBlockE+0x3c>
  38:	ldur	x8, [x0, #-8]
  3c:	mov	x0, x8
  40:	ldr	x9, [x0, #24]!
  44:	cbz	x9, 6c <_ZN4llvm15CatchSwitchInst13setUnwindDestEPNS_10BasicBlockE+0x6c>
  48:	ldp	x10, x9, [x8, #32]
  4c:	and	x9, x9, #0xfffffffffffffffc
  50:	str	x10, [x9]
  54:	ldr	x8, [x8, #32]
  58:	cbz	x8, 6c <_ZN4llvm15CatchSwitchInst13setUnwindDestEPNS_10BasicBlockE+0x6c>
  5c:	ldr	x10, [x8, #16]
  60:	and	x10, x10, #0x3
  64:	orr	x9, x10, x9
  68:	str	x9, [x8, #16]
  6c:	add	x8, x1, #0x8
  70:	str	x1, [x0]
  74:	mov	x1, x8
  78:	ldp	x29, x30, [sp], #16
  7c:	b	0 <_ZN4llvm15CatchSwitchInst13setUnwindDestEPNS_10BasicBlockE>
  80:	adrp	x0, 0 <_ZN4llvm15CatchSwitchInst13setUnwindDestEPNS_10BasicBlockE>
  84:	adrp	x1, 0 <_ZN4llvm15CatchSwitchInst13setUnwindDestEPNS_10BasicBlockE>
  88:	adrp	x3, 0 <_ZN4llvm15CatchSwitchInst13setUnwindDestEPNS_10BasicBlockE>
  8c:	add	x0, x0, #0x0
  90:	add	x1, x1, #0x0
  94:	add	x3, x3, #0x0
  98:	mov	w2, #0x10c3                	// #4291
  9c:	bl	0 <__assert_fail>
  a0:	adrp	x0, 0 <_ZN4llvm15CatchSwitchInst13setUnwindDestEPNS_10BasicBlockE>
  a4:	adrp	x1, 0 <_ZN4llvm15CatchSwitchInst13setUnwindDestEPNS_10BasicBlockE>
  a8:	adrp	x3, 0 <_ZN4llvm15CatchSwitchInst13setUnwindDestEPNS_10BasicBlockE>
  ac:	add	x0, x0, #0x0
  b0:	add	x1, x1, #0x0
  b4:	add	x3, x3, #0x0
  b8:	mov	w2, #0x10c4                	// #4292
  bc:	bl	0 <__assert_fail>
  c0:	adrp	x0, 0 <_ZN4llvm15CatchSwitchInst13setUnwindDestEPNS_10BasicBlockE>
  c4:	adrp	x1, 0 <_ZN4llvm15CatchSwitchInst13setUnwindDestEPNS_10BasicBlockE>
  c8:	adrp	x3, 0 <_ZN4llvm15CatchSwitchInst13setUnwindDestEPNS_10BasicBlockE>
  cc:	add	x0, x0, #0x0
  d0:	add	x1, x1, #0x0
  d4:	add	x3, x3, #0x0
  d8:	mov	w2, #0x1126                	// #4390
  dc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17CleanupReturnInst13setUnwindDestEPNS_10BasicBlockE:

0000000000000000 <_ZN4llvm17CleanupReturnInst13setUnwindDestEPNS_10BasicBlockE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x1, 68 <_ZN4llvm17CleanupReturnInst13setUnwindDestEPNS_10BasicBlockE+0x68>
   c:	ldrb	w8, [x0, #18]
  10:	tbz	w8, #0, 88 <_ZN4llvm17CleanupReturnInst13setUnwindDestEPNS_10BasicBlockE+0x88>
  14:	ldr	w8, [x0, #20]
  18:	mov	w9, #0x18                  	// #24
  1c:	and	x8, x8, #0xfffffff
  20:	mneg	x8, x8, x9
  24:	add	x0, x0, x8
  28:	ldr	x8, [x0, #24]!
  2c:	cbz	x8, 54 <_ZN4llvm17CleanupReturnInst13setUnwindDestEPNS_10BasicBlockE+0x54>
  30:	ldp	x9, x8, [x0, #8]
  34:	and	x8, x8, #0xfffffffffffffffc
  38:	str	x9, [x8]
  3c:	ldr	x9, [x0, #8]
  40:	cbz	x9, 54 <_ZN4llvm17CleanupReturnInst13setUnwindDestEPNS_10BasicBlockE+0x54>
  44:	ldr	x10, [x9, #16]
  48:	and	x10, x10, #0x3
  4c:	orr	x8, x10, x8
  50:	str	x8, [x9, #16]
  54:	add	x8, x1, #0x8
  58:	str	x1, [x0]
  5c:	mov	x1, x8
  60:	ldp	x29, x30, [sp], #16
  64:	b	0 <_ZN4llvm17CleanupReturnInst13setUnwindDestEPNS_10BasicBlockE>
  68:	adrp	x0, 0 <_ZN4llvm17CleanupReturnInst13setUnwindDestEPNS_10BasicBlockE>
  6c:	adrp	x1, 0 <_ZN4llvm17CleanupReturnInst13setUnwindDestEPNS_10BasicBlockE>
  70:	adrp	x3, 0 <_ZN4llvm17CleanupReturnInst13setUnwindDestEPNS_10BasicBlockE>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x1213                	// #4627
  84:	bl	0 <__assert_fail>
  88:	adrp	x0, 0 <_ZN4llvm17CleanupReturnInst13setUnwindDestEPNS_10BasicBlockE>
  8c:	adrp	x1, 0 <_ZN4llvm17CleanupReturnInst13setUnwindDestEPNS_10BasicBlockE>
  90:	adrp	x3, 0 <_ZN4llvm17CleanupReturnInst13setUnwindDestEPNS_10BasicBlockE>
  94:	add	x0, x0, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x3, x3, #0x0
  a0:	mov	w2, #0x1214                	// #4628
  a4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm7PHINode16setIncomingBlockEjPNS_10BasicBlockE:

0000000000000000 <_ZN4llvm7PHINode16setIncomingBlockEjPNS_10BasicBlockE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x2, 48 <_ZN4llvm7PHINode16setIncomingBlockEjPNS_10BasicBlockE+0x48>
   c:	ldr	w8, [x0, #20]
  10:	tbnz	w8, #30, 28 <_ZN4llvm7PHINode16setIncomingBlockEjPNS_10BasicBlockE+0x28>
  14:	and	x8, x8, #0xfffffff
  18:	mov	w9, #0x18                  	// #24
  1c:	mneg	x8, x8, x9
  20:	add	x8, x0, x8
  24:	b	2c <_ZN4llvm7PHINode16setIncomingBlockEjPNS_10BasicBlockE+0x2c>
  28:	ldur	x8, [x0, #-8]
  2c:	ldr	w9, [x0, #56]
  30:	mov	w10, #0x18                  	// #24
  34:	madd	x8, x9, x10, x8
  38:	add	x8, x8, w1, uxtw #3
  3c:	str	x2, [x8, #8]
  40:	ldp	x29, x30, [sp], #16
  44:	ret
  48:	adrp	x0, 0 <_ZN4llvm7PHINode16setIncomingBlockEjPNS_10BasicBlockE>
  4c:	adrp	x1, 0 <_ZN4llvm7PHINode16setIncomingBlockEjPNS_10BasicBlockE>
  50:	adrp	x3, 0 <_ZN4llvm7PHINode16setIncomingBlockEjPNS_10BasicBlockE>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0xa82                 	// #2690
  64:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm4User24setNumHungOffUseOperandsEj:

0000000000000000 <_ZN4llvm4User24setNumHungOffUseOperandsEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #20]
   c:	tbz	w8, #30, 2c <_ZN4llvm4User24setNumHungOffUseOperandsEj+0x2c>
  10:	lsr	w9, w1, #28
  14:	cbnz	w9, 4c <_ZN4llvm4User24setNumHungOffUseOperandsEj+0x4c>
  18:	and	w8, w8, #0xf0000000
  1c:	orr	w8, w8, w1
  20:	str	w8, [x0, #20]
  24:	ldp	x29, x30, [sp], #16
  28:	ret
  2c:	adrp	x0, 0 <_ZN4llvm4User24setNumHungOffUseOperandsEj>
  30:	adrp	x1, 0 <_ZN4llvm4User24setNumHungOffUseOperandsEj>
  34:	adrp	x3, 0 <_ZN4llvm4User24setNumHungOffUseOperandsEj>
  38:	add	x0, x0, #0x0
  3c:	add	x1, x1, #0x0
  40:	add	x3, x3, #0x0
  44:	mov	w2, #0xd8                  	// #216
  48:	bl	0 <__assert_fail>
  4c:	adrp	x0, 0 <_ZN4llvm4User24setNumHungOffUseOperandsEj>
  50:	adrp	x1, 0 <_ZN4llvm4User24setNumHungOffUseOperandsEj>
  54:	adrp	x3, 0 <_ZN4llvm4User24setNumHungOffUseOperandsEj>
  58:	add	x0, x0, #0x0
  5c:	add	x1, x1, #0x0
  60:	add	x3, x3, #0x0
  64:	mov	w2, #0xd9                  	// #217
  68:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9BitVector6resizeEjb:

0000000000000000 <_ZN4llvm9BitVector6resizeEjb>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x22, [x0, #8]
  14:	mov	w8, w1
  18:	mov	x19, x0
  1c:	mov	w21, w1
  20:	cmp	x8, x22, lsl #6
  24:	mov	w20, w2
  28:	b.ls	64 <_ZN4llvm9BitVector6resizeEjb+0x64>  // b.plast
  2c:	mov	x0, x19
  30:	mov	w1, w21
  34:	bl	0 <_ZN4llvm9BitVector6resizeEjb>
  38:	ldr	x9, [x19, #8]
  3c:	cmp	x9, w22, uxtw
  40:	b.cc	b8 <_ZN4llvm9BitVector6resizeEjb+0xb8>  // b.lo, b.ul, b.last
  44:	and	x8, x22, #0xffffffff
  48:	subs	x9, x9, x8
  4c:	b.eq	64 <_ZN4llvm9BitVector6resizeEjb+0x64>  // b.none
  50:	ldr	x10, [x19]
  54:	lsl	x2, x9, #3
  58:	sbfx	w1, w20, #0, #1
  5c:	add	x0, x10, x8, lsl #3
  60:	bl	0 <memset>
  64:	ldr	w8, [x19, #16]
  68:	cmp	w8, w21
  6c:	b.cs	80 <_ZN4llvm9BitVector6resizeEjb+0x80>  // b.hs, b.nlast
  70:	and	w1, w20, #0x1
  74:	mov	x0, x19
  78:	bl	0 <_ZN4llvm9BitVector6resizeEjb>
  7c:	ldr	w8, [x19, #16]
  80:	cmp	w8, w21
  84:	str	w21, [x19, #16]
  88:	b.hi	a0 <_ZN4llvm9BitVector6resizeEjb+0xa0>  // b.pmore
  8c:	tbnz	w20, #0, a0 <_ZN4llvm9BitVector6resizeEjb+0xa0>
  90:	ldp	x20, x19, [sp, #32]
  94:	ldp	x22, x21, [sp, #16]
  98:	ldp	x29, x30, [sp], #48
  9c:	ret
  a0:	mov	x0, x19
  a4:	ldp	x20, x19, [sp, #32]
  a8:	ldp	x22, x21, [sp, #16]
  ac:	mov	w1, wzr
  b0:	ldp	x29, x30, [sp], #48
  b4:	b	0 <_ZN4llvm9BitVector6resizeEjb>
  b8:	adrp	x0, 0 <_ZN4llvm9BitVector6resizeEjb>
  bc:	adrp	x1, 0 <_ZN4llvm9BitVector6resizeEjb>
  c0:	adrp	x3, 0 <_ZN4llvm9BitVector6resizeEjb>
  c4:	add	x0, x0, #0x0
  c8:	add	x1, x1, #0x0
  cc:	add	x3, x3, #0x0
  d0:	mov	w2, #0x174                 	// #372
  d4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9BitVector3setEj:

0000000000000000 <_ZN4llvm9BitVector3setEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	cbz	x8, 3c <_ZN4llvm9BitVector3setEj+0x3c>
  10:	ldr	x10, [x0, #8]
  14:	lsr	w9, w1, #6
  18:	cmp	x10, x9
  1c:	b.ls	5c <_ZN4llvm9BitVector3setEj+0x5c>  // b.plast
  20:	ldr	x10, [x8, x9, lsl #3]
  24:	mov	w11, #0x1                   	// #1
  28:	lsl	x11, x11, x1
  2c:	orr	x10, x10, x11
  30:	str	x10, [x8, x9, lsl #3]
  34:	ldp	x29, x30, [sp], #16
  38:	ret
  3c:	adrp	x0, 0 <_ZN4llvm9BitVector3setEj>
  40:	adrp	x1, 0 <_ZN4llvm9BitVector3setEj>
  44:	adrp	x3, 0 <_ZN4llvm9BitVector3setEj>
  48:	add	x0, x0, #0x0
  4c:	add	x1, x1, #0x0
  50:	add	x3, x3, #0x0
  54:	mov	w2, #0x194                 	// #404
  58:	bl	0 <__assert_fail>
  5c:	adrp	x0, 0 <_ZN4llvm9BitVector3setEj>
  60:	adrp	x1, 0 <_ZN4llvm9BitVector3setEj>
  64:	adrp	x3, 0 <_ZN4llvm9BitVector3setEj>
  68:	add	x0, x0, #0x0
  6c:	add	x1, x1, #0x0
  70:	add	x3, x3, #0x0
  74:	mov	w2, #0x1ab                 	// #427
  78:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9BitVectorC2ERKS0_:

0000000000000000 <_ZN4llvm9BitVectorC2ERKS0_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	stp	xzr, xzr, [x0]
  14:	ldr	w8, [x1, #16]
  18:	mov	x19, x0
  1c:	str	w8, [x0, #16]
  20:	cbz	w8, 60 <_ZN4llvm9BitVectorC2ERKS0_+0x60>
  24:	ldr	w8, [x1, #16]
  28:	mov	x20, x1
  2c:	add	w8, w8, #0x3f
  30:	lsr	w22, w8, #6
  34:	lsl	x21, x22, #3
  38:	mov	x0, x21
  3c:	bl	0 <malloc>
  40:	cbnz	x0, 80 <_ZN4llvm9BitVectorC2ERKS0_+0x80>
  44:	cbz	w22, 74 <_ZN4llvm9BitVectorC2ERKS0_+0x74>
  48:	adrp	x0, 0 <_ZN4llvm9BitVectorC2ERKS0_>
  4c:	add	x0, x0, #0x0
  50:	mov	w1, #0x1                   	// #1
  54:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  58:	mov	x0, xzr
  5c:	b	80 <_ZN4llvm9BitVectorC2ERKS0_+0x80>
  60:	stp	xzr, xzr, [x19]
  64:	ldp	x20, x19, [sp, #32]
  68:	ldp	x22, x21, [sp, #16]
  6c:	ldp	x29, x30, [sp], #48
  70:	ret
  74:	mov	w0, #0x1                   	// #1
  78:	bl	0 <malloc>
  7c:	cbz	x0, 48 <_ZN4llvm9BitVectorC2ERKS0_+0x48>
  80:	stp	x0, x22, [x19]
  84:	ldr	x1, [x20]
  88:	mov	x2, x21
  8c:	ldp	x20, x19, [sp, #32]
  90:	ldp	x22, x21, [sp, #16]
  94:	ldp	x29, x30, [sp], #48
  98:	b	0 <memcpy>

Disassembly of section .text._ZN4llvm9BitVectoroRERKS0_:

0000000000000000 <_ZN4llvm9BitVectoroRERKS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x20, x1
  10:	ldr	w8, [x0, #16]
  14:	ldr	w1, [x1, #16]
  18:	mov	x19, x0
  1c:	cmp	w8, w1
  20:	b.cs	34 <_ZN4llvm9BitVectoroRERKS0_+0x34>  // b.hs, b.nlast
  24:	mov	x0, x19
  28:	mov	w2, wzr
  2c:	bl	0 <_ZN4llvm9BitVectoroRERKS0_>
  30:	ldr	w1, [x20, #16]
  34:	add	w8, w1, #0x3f
  38:	lsr	w8, w8, #6
  3c:	cbz	w8, 80 <_ZN4llvm9BitVectoroRERKS0_+0x80>
  40:	mov	x9, xzr
  44:	ldr	x10, [x20, #8]
  48:	cmp	x10, x9
  4c:	b.ls	90 <_ZN4llvm9BitVectoroRERKS0_+0x90>  // b.plast
  50:	ldr	x10, [x19, #8]
  54:	cmp	x10, x9
  58:	b.ls	90 <_ZN4llvm9BitVectoroRERKS0_+0x90>  // b.plast
  5c:	ldr	x10, [x20]
  60:	ldr	x11, [x19]
  64:	ldr	x10, [x10, x9, lsl #3]
  68:	ldr	x12, [x11, x9, lsl #3]
  6c:	orr	x10, x12, x10
  70:	str	x10, [x11, x9, lsl #3]
  74:	add	x9, x9, #0x1
  78:	cmp	x8, x9
  7c:	b.ne	44 <_ZN4llvm9BitVectoroRERKS0_+0x44>  // b.any
  80:	mov	x0, x19
  84:	ldp	x20, x19, [sp, #16]
  88:	ldp	x29, x30, [sp], #32
  8c:	ret
  90:	adrp	x0, 0 <_ZN4llvm9BitVectoroRERKS0_>
  94:	adrp	x1, 0 <_ZN4llvm9BitVectoroRERKS0_>
  98:	adrp	x3, 0 <_ZN4llvm9BitVectoroRERKS0_>
  9c:	add	x0, x0, #0x0
  a0:	add	x1, x1, #0x0
  a4:	add	x3, x3, #0x0
  a8:	mov	w2, #0x1ab                 	// #427
  ac:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9BitVector5resetEj:

0000000000000000 <_ZN4llvm9BitVector5resetEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x9, [x0, #8]
   c:	lsr	w8, w1, #6
  10:	cmp	x9, x8
  14:	b.ls	38 <_ZN4llvm9BitVector5resetEj+0x38>  // b.plast
  18:	ldr	x9, [x0]
  1c:	mov	w11, #0x1                   	// #1
  20:	lsl	x11, x11, x1
  24:	ldr	x10, [x9, x8, lsl #3]
  28:	bic	x10, x10, x11
  2c:	str	x10, [x9, x8, lsl #3]
  30:	ldp	x29, x30, [sp], #16
  34:	ret
  38:	adrp	x0, 0 <_ZN4llvm9BitVector5resetEj>
  3c:	adrp	x1, 0 <_ZN4llvm9BitVector5resetEj>
  40:	adrp	x3, 0 <_ZN4llvm9BitVector5resetEj>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x1ab                 	// #427
  54:	bl	0 <__assert_fail>

Disassembly of section .text._ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_:

0000000000000000 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #16]
   8:	str	x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	add	x29, sp, #0x10
  18:	sub	x8, x1, x0
  1c:	cmp	x8, #0x81
  20:	b.lt	d8 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0xd8>  // b.tstop
  24:	mov	x20, x1
  28:	mov	x19, x0
  2c:	mov	x21, x2
  30:	add	x22, x0, #0x8
  34:	cbz	x21, b8 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0xb8>
  38:	lsr	x8, x8, #1
  3c:	and	x8, x8, #0x7ffffffffffffff8
  40:	add	x2, x19, x8
  44:	sub	x3, x20, #0x8
  48:	mov	x0, x19
  4c:	mov	x1, x22
  50:	bl	0 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_>
  54:	mov	x8, x20
  58:	mov	x9, x22
  5c:	ldr	x11, [x19]
  60:	ldr	x10, [x9], #8
  64:	cmp	x10, x11
  68:	b.cc	60 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0x60>  // b.lo, b.ul, b.last
  6c:	sub	x23, x9, #0x8
  70:	ldr	x12, [x8, #-8]!
  74:	cmp	x11, x12
  78:	b.cc	70 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0x70>  // b.lo, b.ul, b.last
  7c:	cmp	x23, x8
  80:	b.cs	90 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0x90>  // b.hs, b.nlast
  84:	stur	x12, [x9, #-8]
  88:	str	x10, [x8]
  8c:	b	5c <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0x5c>
  90:	sub	x21, x21, #0x1
  94:	mov	x0, x23
  98:	mov	x1, x20
  9c:	mov	x2, x21
  a0:	bl	0 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_>
  a4:	sub	x8, x23, x19
  a8:	cmp	x8, #0x80
  ac:	mov	x20, x23
  b0:	b.gt	34 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0x34>
  b4:	b	d8 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0xd8>
  b8:	add	x2, x29, #0x18
  bc:	mov	x0, x19
  c0:	mov	x1, x20
  c4:	bl	0 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_>
  c8:	add	x2, sp, #0x8
  cc:	mov	x0, x19
  d0:	mov	x1, x20
  d4:	bl	0 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_>
  d8:	ldp	x20, x19, [sp, #64]
  dc:	ldp	x22, x21, [sp, #48]
  e0:	ldr	x23, [sp, #32]
  e4:	ldp	x29, x30, [sp, #16]
  e8:	add	sp, sp, #0x50
  ec:	ret

Disassembly of section .text._ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_:

0000000000000000 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	sub	x8, x1, x0
  10:	mov	x19, x1
  14:	cmp	x8, #0x81
  18:	b.lt	7c <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0x7c>  // b.tstop
  1c:	add	x20, x0, #0x80
  20:	mov	x1, x20
  24:	bl	0 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_>
  28:	cmp	x20, x19
  2c:	b.eq	70 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0x70>  // b.none
  30:	ldp	x9, x8, [x20, #-8]
  34:	cmp	x9, x8
  38:	mov	x9, x20
  3c:	b.ls	60 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0x60>  // b.plast
  40:	mov	x10, x20
  44:	mov	x9, x20
  48:	ldr	x11, [x9, #-8]!
  4c:	ldur	x12, [x10, #-16]
  50:	str	x11, [x10]
  54:	cmp	x12, x8
  58:	mov	x10, x9
  5c:	b.hi	48 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0x48>  // b.pmore
  60:	add	x20, x20, #0x8
  64:	cmp	x20, x19
  68:	str	x8, [x9]
  6c:	b.ne	30 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0x30>  // b.any
  70:	ldp	x20, x19, [sp, #16]
  74:	ldp	x29, x30, [sp], #32
  78:	ret
  7c:	mov	x1, x19
  80:	ldp	x20, x19, [sp, #16]
  84:	ldp	x29, x30, [sp], #32
  88:	b	0 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_>

Disassembly of section .text._ZSt11__sort_heapIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_RT0_:

0000000000000000 <_ZSt11__sort_heapIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_RT0_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	x8, x1, x0
  14:	cmp	x8, #0x9
  18:	b.lt	4c <_ZSt11__sort_heapIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_RT0_+0x4c>  // b.tstop
  1c:	mov	x19, x0
  20:	sub	x20, x1, #0x8
  24:	ldr	x8, [x19]
  28:	ldr	x3, [x20]
  2c:	sub	x21, x20, x19
  30:	asr	x2, x21, #3
  34:	mov	x0, x19
  38:	mov	x1, xzr
  3c:	str	x8, [x20], #-8
  40:	bl	0 <_ZSt11__sort_heapIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_RT0_>
  44:	cmp	x21, #0x8
  48:	b.gt	24 <_ZSt11__sort_heapIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_RT0_+0x24>
  4c:	ldp	x20, x19, [sp, #32]
  50:	ldr	x21, [sp, #16]
  54:	ldp	x29, x30, [sp], #48
  58:	ret

Disassembly of section .text._ZSt11__make_heapIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_RT0_:

0000000000000000 <_ZSt11__make_heapIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_RT0_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	x8, x1, x0
  14:	cmp	x8, #0x10
  18:	b.lt	58 <_ZSt11__make_heapIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_RT0_+0x58>  // b.tstop
  1c:	asr	x20, x8, #3
  20:	sub	x8, x20, #0x2
  24:	sub	x9, x20, #0x1
  28:	cmp	x8, #0x0
  2c:	csel	x8, x9, x8, lt  // lt = tstop
  30:	mov	x19, x0
  34:	asr	x21, x8, #1
  38:	ldr	x3, [x19, x21, lsl #3]
  3c:	mov	x0, x19
  40:	mov	x1, x21
  44:	mov	x2, x20
  48:	bl	0 <_ZSt11__make_heapIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_RT0_>
  4c:	sub	x21, x21, #0x1
  50:	cmn	x21, #0x1
  54:	b.ne	38 <_ZSt11__make_heapIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_RT0_+0x38>  // b.any
  58:	ldp	x20, x19, [sp, #32]
  5c:	ldr	x21, [sp, #16]
  60:	ldp	x29, x30, [sp], #48
  64:	ret

Disassembly of section .text._ZSt13__adjust_heapIPPN4llvm10BasicBlockElS2_N9__gnu_cxx5__ops15_Iter_less_iterEEvT_T0_S8_T1_T2_:

0000000000000000 <_ZSt13__adjust_heapIPPN4llvm10BasicBlockElS2_N9__gnu_cxx5__ops15_Iter_less_iterEEvT_T0_S8_T1_T2_>:
   0:	sub	x9, x2, #0x1
   4:	cmp	x9, #0x0
   8:	csel	x8, x2, x9, lt  // lt = tstop
   c:	asr	x10, x8, #1
  10:	cmp	x10, x1
  14:	mov	x8, x1
  18:	b.le	54 <_ZSt13__adjust_heapIPPN4llvm10BasicBlockElS2_N9__gnu_cxx5__ops15_Iter_less_iterEEvT_T0_S8_T1_T2_+0x54>
  1c:	mov	x11, x1
  20:	lsl	x8, x11, #1
  24:	mov	w12, #0x1                   	// #1
  28:	add	x8, x8, #0x2
  2c:	bfi	x12, x11, #1, #63
  30:	ldr	x13, [x0, x8, lsl #3]
  34:	ldr	x14, [x0, x12, lsl #3]
  38:	cmp	x13, x14
  3c:	csel	x8, x12, x8, cc  // cc = lo, ul, last
  40:	ldr	x12, [x0, x8, lsl #3]
  44:	cmp	x8, x10
  48:	str	x12, [x0, x11, lsl #3]
  4c:	mov	x11, x8
  50:	b.lt	20 <_ZSt13__adjust_heapIPPN4llvm10BasicBlockElS2_N9__gnu_cxx5__ops15_Iter_less_iterEEvT_T0_S8_T1_T2_+0x20>  // b.tstop
  54:	tbnz	w2, #0, 80 <_ZSt13__adjust_heapIPPN4llvm10BasicBlockElS2_N9__gnu_cxx5__ops15_Iter_less_iterEEvT_T0_S8_T1_T2_+0x80>
  58:	sub	x10, x2, #0x2
  5c:	cmp	x10, #0x0
  60:	csel	x9, x9, x10, lt  // lt = tstop
  64:	cmp	x8, x9, asr #1
  68:	b.ne	80 <_ZSt13__adjust_heapIPPN4llvm10BasicBlockElS2_N9__gnu_cxx5__ops15_Iter_less_iterEEvT_T0_S8_T1_T2_+0x80>  // b.any
  6c:	mov	w9, #0x1                   	// #1
  70:	bfi	x9, x8, #1, #63
  74:	ldr	x10, [x0, x9, lsl #3]
  78:	str	x10, [x0, x8, lsl #3]
  7c:	mov	x8, x9
  80:	cmp	x8, x1
  84:	b.le	b8 <_ZSt13__adjust_heapIPPN4llvm10BasicBlockElS2_N9__gnu_cxx5__ops15_Iter_less_iterEEvT_T0_S8_T1_T2_+0xb8>
  88:	sub	x9, x8, #0x1
  8c:	cmp	x9, #0x0
  90:	csel	x9, x8, x9, lt  // lt = tstop
  94:	asr	x9, x9, #1
  98:	ldr	x10, [x0, x9, lsl #3]
  9c:	cmp	x10, x3
  a0:	b.cs	b8 <_ZSt13__adjust_heapIPPN4llvm10BasicBlockElS2_N9__gnu_cxx5__ops15_Iter_less_iterEEvT_T0_S8_T1_T2_+0xb8>  // b.hs, b.nlast
  a4:	cmp	x9, x1
  a8:	str	x10, [x0, x8, lsl #3]
  ac:	mov	x8, x9
  b0:	b.gt	88 <_ZSt13__adjust_heapIPPN4llvm10BasicBlockElS2_N9__gnu_cxx5__ops15_Iter_less_iterEEvT_T0_S8_T1_T2_+0x88>
  b4:	b	bc <_ZSt13__adjust_heapIPPN4llvm10BasicBlockElS2_N9__gnu_cxx5__ops15_Iter_less_iterEEvT_T0_S8_T1_T2_+0xbc>
  b8:	mov	x9, x8
  bc:	str	x3, [x0, x9, lsl #3]
  c0:	ret

Disassembly of section .text._ZSt22__move_median_to_firstIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_S7_T0_:

0000000000000000 <_ZSt22__move_median_to_firstIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_S7_T0_>:
   0:	ldr	x9, [x1]
   4:	ldr	x11, [x2]
   8:	ldr	x10, [x3]
   c:	cmp	x9, x11
  10:	b.cs	24 <_ZSt22__move_median_to_firstIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_S7_T0_+0x24>  // b.hs, b.nlast
  14:	cmp	x11, x10
  18:	b.cs	34 <_ZSt22__move_median_to_firstIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_S7_T0_+0x34>  // b.hs, b.nlast
  1c:	ldr	x8, [x0]
  20:	b	64 <_ZSt22__move_median_to_firstIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_S7_T0_+0x64>
  24:	cmp	x9, x10
  28:	b.cs	4c <_ZSt22__move_median_to_firstIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_S7_T0_+0x4c>  // b.hs, b.nlast
  2c:	ldr	x8, [x0]
  30:	b	40 <_ZSt22__move_median_to_firstIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_S7_T0_+0x40>
  34:	ldr	x8, [x0]
  38:	cmp	x9, x10
  3c:	b.cc	58 <_ZSt22__move_median_to_firstIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_S7_T0_+0x58>  // b.lo, b.ul, b.last
  40:	str	x9, [x0]
  44:	mov	x2, x1
  48:	b	68 <_ZSt22__move_median_to_firstIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_S7_T0_+0x68>
  4c:	ldr	x8, [x0]
  50:	cmp	x11, x10
  54:	b.cs	64 <_ZSt22__move_median_to_firstIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_S7_T0_+0x64>  // b.hs, b.nlast
  58:	str	x10, [x0]
  5c:	mov	x2, x3
  60:	b	68 <_ZSt22__move_median_to_firstIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_S7_T0_+0x68>
  64:	str	x11, [x0]
  68:	str	x8, [x2]
  6c:	ret

Disassembly of section .text._ZSt16__insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_:

0000000000000000 <_ZSt16__insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cmp	x0, x1
  14:	b.eq	a8 <_ZSt16__insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0xa8>  // b.none
  18:	add	x9, x0, #0x8
  1c:	mov	x19, x1
  20:	mov	x20, x0
  24:	cmp	x9, x1
  28:	b.eq	a8 <_ZSt16__insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0xa8>  // b.none
  2c:	mov	x21, x20
  30:	ldr	x22, [x21, #8]
  34:	ldr	x10, [x20]
  38:	mov	x8, x21
  3c:	mov	x21, x9
  40:	cmp	x22, x10
  44:	b.cs	68 <_ZSt16__insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0x68>  // b.hs, b.nlast
  48:	subs	x2, x21, x20
  4c:	b.eq	60 <_ZSt16__insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0x60>  // b.none
  50:	sub	x8, x8, x2
  54:	add	x0, x8, #0x10
  58:	mov	x1, x20
  5c:	bl	0 <memmove>
  60:	mov	x8, x20
  64:	b	98 <_ZSt16__insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0x98>
  68:	ldr	x8, [x8]
  6c:	cmp	x8, x22
  70:	mov	x8, x21
  74:	b.ls	98 <_ZSt16__insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0x98>  // b.plast
  78:	mov	x9, x21
  7c:	mov	x8, x21
  80:	ldr	x10, [x8, #-8]!
  84:	ldur	x11, [x9, #-16]
  88:	str	x10, [x9]
  8c:	cmp	x11, x22
  90:	mov	x9, x8
  94:	b.hi	80 <_ZSt16__insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0x80>  // b.pmore
  98:	add	x9, x21, #0x8
  9c:	cmp	x9, x19
  a0:	str	x22, [x8]
  a4:	b.ne	30 <_ZSt16__insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0x30>  // b.any
  a8:	ldp	x20, x19, [sp, #32]
  ac:	ldp	x22, x21, [sp, #16]
  b0:	ldp	x29, x30, [sp], #48
  b4:	ret

Disassembly of section .text._ZN4llvm9BitVector4growEj:

0000000000000000 <_ZN4llvm9BitVector4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x8, [x0, #8]
  14:	add	w9, w1, #0x3f
  18:	lsr	w9, w9, #6
  1c:	lsl	x8, x8, #1
  20:	cmp	x8, x9
  24:	csel	x21, x8, x9, hi  // hi = pmore
  28:	cbz	x21, 88 <_ZN4llvm9BitVector4growEj+0x88>
  2c:	mov	x19, x0
  30:	ldr	x0, [x0]
  34:	lsl	x20, x21, #3
  38:	mov	x1, x20
  3c:	bl	0 <realloc>
  40:	cbnz	x0, 6c <_ZN4llvm9BitVector4growEj+0x6c>
  44:	cbz	x20, 60 <_ZN4llvm9BitVector4growEj+0x60>
  48:	adrp	x0, 0 <_ZN4llvm9BitVector4growEj>
  4c:	add	x0, x0, #0x0
  50:	mov	w1, #0x1                   	// #1
  54:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  58:	mov	x0, xzr
  5c:	b	6c <_ZN4llvm9BitVector4growEj+0x6c>
  60:	mov	w0, #0x1                   	// #1
  64:	bl	0 <malloc>
  68:	cbz	x0, 48 <_ZN4llvm9BitVector4growEj+0x48>
  6c:	stp	x0, x21, [x19]
  70:	mov	x0, x19
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	mov	w1, wzr
  80:	ldp	x29, x30, [sp], #48
  84:	b	0 <_ZN4llvm9BitVector4growEj>
  88:	adrp	x0, 0 <_ZN4llvm9BitVector4growEj>
  8c:	adrp	x1, 0 <_ZN4llvm9BitVector4growEj>
  90:	adrp	x3, 0 <_ZN4llvm9BitVector4growEj>
  94:	add	x0, x0, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x3, x3, #0x0
  a0:	mov	w2, #0x376                 	// #886
  a4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9BitVector15set_unused_bitsEb:

0000000000000000 <_ZN4llvm9BitVector15set_unused_bitsEb>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #16]
  14:	ldr	x9, [x0, #8]
  18:	mov	x19, x0
  1c:	mov	w20, w1
  20:	add	w10, w8, #0x3f
  24:	lsr	w21, w10, #6
  28:	subs	x9, x9, x21
  2c:	b.ls	4c <_ZN4llvm9BitVector15set_unused_bitsEb+0x4c>  // b.plast
  30:	b.eq	4c <_ZN4llvm9BitVector15set_unused_bitsEb+0x4c>  // b.none
  34:	ldr	x8, [x19]
  38:	lsl	x2, x9, #3
  3c:	sbfx	w1, w20, #0, #1
  40:	add	x0, x8, x21, lsl #3
  44:	bl	0 <memset>
  48:	ldr	w8, [x19, #16]
  4c:	ands	w8, w8, #0x3f
  50:	b.eq	94 <_ZN4llvm9BitVector15set_unused_bitsEb+0x94>  // b.none
  54:	ldr	x10, [x19, #8]
  58:	mov	x9, #0xffffffffffffffff    	// #-1
  5c:	lsl	x9, x9, x8
  60:	sub	w8, w21, #0x1
  64:	cmp	x10, x8
  68:	tbz	w20, #0, 80 <_ZN4llvm9BitVector15set_unused_bitsEb+0x80>
  6c:	b.ls	a4 <_ZN4llvm9BitVector15set_unused_bitsEb+0xa4>  // b.plast
  70:	ldr	x10, [x19]
  74:	ldr	x11, [x10, x8, lsl #3]
  78:	orr	x9, x11, x9
  7c:	b	90 <_ZN4llvm9BitVector15set_unused_bitsEb+0x90>
  80:	b.ls	a4 <_ZN4llvm9BitVector15set_unused_bitsEb+0xa4>  // b.plast
  84:	ldr	x10, [x19]
  88:	ldr	x11, [x10, x8, lsl #3]
  8c:	bic	x9, x11, x9
  90:	str	x9, [x10, x8, lsl #3]
  94:	ldp	x20, x19, [sp, #32]
  98:	ldr	x21, [sp, #16]
  9c:	ldp	x29, x30, [sp], #48
  a0:	ret
  a4:	adrp	x0, 0 <_ZN4llvm9BitVector15set_unused_bitsEb>
  a8:	adrp	x1, 0 <_ZN4llvm9BitVector15set_unused_bitsEb>
  ac:	adrp	x3, 0 <_ZN4llvm9BitVector15set_unused_bitsEb>
  b0:	add	x0, x0, #0x0
  b4:	add	x1, x1, #0x0
  b8:	add	x3, x3, #0x0
  bc:	mov	w2, #0x1ab                 	// #427
  c0:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9BitVectoreqERKS0_:

0000000000000000 <_ZNK4llvm9BitVectoreqERKS0_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x1, #16]
   c:	ldr	w8, [x0, #16]
  10:	add	w9, w9, #0x3f
  14:	add	w10, w8, #0x3f
  18:	lsr	w9, w9, #6
  1c:	lsr	w8, w10, #6
  20:	cmp	w9, w10, lsr #6
  24:	csel	w10, w9, w8, cc  // cc = lo, ul, last
  28:	cbz	w10, 6c <_ZNK4llvm9BitVectoreqERKS0_+0x6c>
  2c:	ldr	x11, [x0, #8]
  30:	mov	x12, xzr
  34:	cmp	x11, x12
  38:	b.ls	e0 <_ZNK4llvm9BitVectoreqERKS0_+0xe0>  // b.plast
  3c:	ldr	x13, [x1, #8]
  40:	cmp	x13, x12
  44:	b.ls	e0 <_ZNK4llvm9BitVectoreqERKS0_+0xe0>  // b.plast
  48:	ldr	x13, [x0]
  4c:	ldr	x14, [x1]
  50:	ldr	x13, [x13, x12, lsl #3]
  54:	ldr	x14, [x14, x12, lsl #3]
  58:	cmp	x13, x14
  5c:	b.ne	d4 <_ZNK4llvm9BitVectoreqERKS0_+0xd4>  // b.any
  60:	add	x12, x12, #0x1
  64:	cmp	w10, w12
  68:	b.ne	34 <_ZNK4llvm9BitVectoreqERKS0_+0x34>  // b.any
  6c:	cmp	w8, w9
  70:	b.ls	a0 <_ZNK4llvm9BitVectoreqERKS0_+0xa0>  // b.plast
  74:	ldr	x9, [x0, #8]
  78:	cmp	x9, w10, uxtw
  7c:	b.ls	e0 <_ZNK4llvm9BitVectoreqERKS0_+0xe0>  // b.plast
  80:	ldr	x11, [x0]
  84:	mov	w10, w10
  88:	ldr	x11, [x11, x10, lsl #3]
  8c:	cbnz	x11, d4 <_ZNK4llvm9BitVectoreqERKS0_+0xd4>
  90:	add	w10, w10, #0x1
  94:	cmp	w8, w10
  98:	b.ne	78 <_ZNK4llvm9BitVectoreqERKS0_+0x78>  // b.any
  9c:	b	cc <_ZNK4llvm9BitVectoreqERKS0_+0xcc>
  a0:	b.eq	cc <_ZNK4llvm9BitVectoreqERKS0_+0xcc>  // b.none
  a4:	ldr	x10, [x1, #8]
  a8:	cmp	x10, w8, uxtw
  ac:	b.ls	e0 <_ZNK4llvm9BitVectoreqERKS0_+0xe0>  // b.plast
  b0:	ldr	x11, [x1]
  b4:	mov	w8, w8
  b8:	ldr	x11, [x11, x8, lsl #3]
  bc:	cbnz	x11, d4 <_ZNK4llvm9BitVectoreqERKS0_+0xd4>
  c0:	add	w8, w8, #0x1
  c4:	cmp	w9, w8
  c8:	b.ne	a8 <_ZNK4llvm9BitVectoreqERKS0_+0xa8>  // b.any
  cc:	mov	w0, #0x1                   	// #1
  d0:	b	d8 <_ZNK4llvm9BitVectoreqERKS0_+0xd8>
  d4:	mov	w0, wzr
  d8:	ldp	x29, x30, [sp], #16
  dc:	ret
  e0:	adrp	x0, 0 <_ZNK4llvm9BitVectoreqERKS0_>
  e4:	adrp	x1, 0 <_ZNK4llvm9BitVectoreqERKS0_>
  e8:	adrp	x3, 0 <_ZNK4llvm9BitVectoreqERKS0_>
  ec:	add	x0, x0, #0x0
  f0:	add	x1, x1, #0x0
  f4:	add	x3, x3, #0x0
  f8:	mov	w2, #0x1ab                 	// #427
  fc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_:

0000000000000000 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	add	x8, x1, #0x48
  10:	str	x8, [x0]
  14:	ldr	x9, [x1, #80]
  18:	mov	x20, x0
  1c:	str	x9, [x20, #8]!
  20:	cmp	x9, x8
  24:	str	xzr, [x20, #8]
  28:	b.eq	6c <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x6c>  // b.none
  2c:	mov	x19, x0
  30:	mov	x0, x20
  34:	bl	0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  38:	ldr	x8, [x0, #48]
  3c:	mov	x0, x20
  40:	str	x8, [x19, #16]
  44:	bl	0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  48:	ldr	x8, [x19, #16]
  4c:	add	x9, x0, #0x28
  50:	cmp	x8, x9
  54:	b.ne	6c <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x6c>  // b.any
  58:	ldp	x9, x8, [x19]
  5c:	ldr	x8, [x8, #8]
  60:	cmp	x9, x8
  64:	str	x8, [x19, #8]
  68:	b.ne	30 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x30>  // b.any
  6c:	ldp	x20, x19, [sp, #16]
  70:	ldp	x29, x30, [sp], #32
  74:	ret

Disassembly of section .text._ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_:

0000000000000000 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #32]
   8:	str	x21, [sp, #48]
   c:	stp	x20, x19, [sp, #64]
  10:	add	x29, sp, #0x20
  14:	mov	x19, x0
  18:	mov	x20, x8
  1c:	bl	0 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_>
  20:	ldp	x9, x8, [x19, #8]
  24:	mov	w10, #0x18                  	// #24
  28:	mov	w11, #0x1c                  	// #28
  2c:	mov	x21, x1
  30:	cmp	x8, x9
  34:	csel	x9, x11, x10, eq  // eq = none
  38:	ldr	w9, [x19, x9]
  3c:	add	x8, x8, x9, lsl #3
  40:	stp	x0, x8, [sp]
  44:	mov	x0, sp
  48:	bl	0 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_>
  4c:	ldr	x8, [x19]
  50:	strb	w21, [x20, #32]
  54:	ldr	x21, [sp, #48]
  58:	ldp	x29, x30, [sp, #32]
  5c:	stp	x19, x8, [sp, #16]
  60:	ldp	q1, q0, [sp]
  64:	stp	q1, q0, [x20]
  68:	ldp	x20, x19, [sp, #64]
  6c:	add	sp, sp, #0x50
  70:	ret

Disassembly of section .text._ZN4llvm19SmallPtrSetImplBase10insert_impEPKv:

0000000000000000 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x12, x9, [x0, #8]
   c:	mov	x8, x0
  10:	cmp	x9, x12
  14:	b.eq	34 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0x34>  // b.none
  18:	mov	x0, x8
  1c:	bl	0 <_ZN4llvm19SmallPtrSetImplBase14insert_imp_bigEPKv>
  20:	and	x11, x1, #0xffffffffffffff00
  24:	and	x8, x1, #0xff
  28:	orr	x1, x11, x8
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	ldr	w10, [x8, #28]
  38:	cbz	w10, 98 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0x98>
  3c:	mov	x0, xzr
  40:	add	x13, x9, #0x8
  44:	lsl	x11, x10, #3
  48:	mov	x14, x13
  4c:	ldur	x13, [x13, #-8]
  50:	cmp	x13, x1
  54:	b.eq	cc <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0xcc>  // b.none
  58:	cmn	x13, #0x2
  5c:	csel	x0, x12, x0, eq  // eq = none
  60:	subs	x11, x11, #0x8
  64:	add	x13, x14, #0x8
  68:	mov	x12, x14
  6c:	b.ne	48 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0x48>  // b.any
  70:	cbz	x0, 98 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0x98>
  74:	str	x1, [x0]
  78:	ldr	w9, [x8, #32]
  7c:	ldr	x10, [x8]
  80:	mov	x11, xzr
  84:	sub	w9, w9, #0x1
  88:	add	x10, x10, #0x1
  8c:	str	w9, [x8, #32]
  90:	str	x10, [x8]
  94:	b	c4 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0xc4>
  98:	ldr	w11, [x8, #24]
  9c:	cmp	w10, w11
  a0:	b.cs	18 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0x18>  // b.hs, b.nlast
  a4:	add	w12, w10, #0x1
  a8:	str	w12, [x8, #28]
  ac:	str	x1, [x9, x10, lsl #3]
  b0:	ldp	x9, x12, [x8]
  b4:	mov	x11, xzr
  b8:	add	x9, x9, #0x1
  bc:	add	x0, x12, x10, lsl #3
  c0:	str	x9, [x8]
  c4:	mov	w8, #0x1                   	// #1
  c8:	b	28 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0x28>
  cc:	mov	x8, xzr
  d0:	mov	x11, xzr
  d4:	mov	x0, x12
  d8:	b	28 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0x28>

Disassembly of section .text._ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv:

0000000000000000 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x8, x9, [x0]
   c:	cmp	x8, x9
  10:	b.hi	3c <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv+0x3c>  // b.pmore
  14:	b.eq	34 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv+0x34>  // b.none
  18:	ldr	x10, [x8]
  1c:	cmn	x10, #0x2
  20:	b.cc	34 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv+0x34>  // b.lo, b.ul, b.last
  24:	add	x8, x8, #0x8
  28:	cmp	x9, x8
  2c:	str	x8, [x0]
  30:	b.ne	18 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv+0x18>  // b.any
  34:	ldp	x29, x30, [sp], #16
  38:	ret
  3c:	adrp	x0, 0 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv>
  40:	adrp	x1, 0 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv>
  44:	adrp	x3, 0 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv>
  48:	add	x0, x0, #0x0
  4c:	add	x1, x1, #0x0
  50:	add	x3, x3, #0x0
  54:	mov	w2, #0xf8                  	// #248
  58:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIPNS_11InstructionELb1EE9push_backERKS2_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIPNS_11InstructionELb1EE9push_backERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseIPNS_11InstructionELb1EE9push_backERKS2_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	x10, [x20]
  28:	str	x10, [x9, w8, uxtw #3]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseIPNS_11InstructionELb1EE9push_backERKS2_+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x8                   	// #8
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseIPNS_11InstructionELb1EE9push_backERKS2_+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_11InstructionELb1EE9push_backERKS2_>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_11InstructionELb1EE9push_backERKS2_>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_11InstructionELb1EE9push_backERKS2_>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIPNS_4TypeELb1EE9push_backERKS2_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIPNS_4TypeELb1EE9push_backERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseIPNS_4TypeELb1EE9push_backERKS2_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	x10, [x20]
  28:	str	x10, [x9, w8, uxtw #3]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseIPNS_4TypeELb1EE9push_backERKS2_+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x8                   	// #8
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseIPNS_4TypeELb1EE9push_backERKS2_+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_4TypeELb1EE9push_backERKS2_>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_4TypeELb1EE9push_backERKS2_>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_4TypeELb1EE9push_backERKS2_>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm5APInt12getZExtValueEv:

0000000000000000 <_ZNK4llvm5APInt12getZExtValueEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w20, [x0, #8]
  10:	mov	x19, x0
  14:	cmp	w20, #0x40
  18:	b.ls	34 <_ZNK4llvm5APInt12getZExtValueEv+0x34>  // b.plast
  1c:	mov	x0, x19
  20:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
  24:	sub	w8, w20, w0
  28:	cmp	w8, #0x41
  2c:	b.cs	44 <_ZNK4llvm5APInt12getZExtValueEv+0x44>  // b.hs, b.nlast
  30:	ldr	x19, [x19]
  34:	ldr	x0, [x19]
  38:	ldp	x20, x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret
  44:	adrp	x0, 0 <_ZNK4llvm5APInt12getZExtValueEv>
  48:	adrp	x1, 0 <_ZNK4llvm5APInt12getZExtValueEv>
  4c:	adrp	x3, 0 <_ZNK4llvm5APInt12getZExtValueEv>
  50:	add	x0, x0, #0x0
  54:	add	x1, x1, #0x0
  58:	add	x3, x3, #0x0
  5c:	mov	w2, #0x657                 	// #1623
  60:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm4coro5Shape15getRetconCoroIdEv:

0000000000000000 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #168]
  10:	sub	w8, w8, #0x1
  14:	cmp	w8, #0x2
  18:	b.cs	48 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv+0x48>  // b.hs, b.nlast
  1c:	ldr	x0, [x0]
  20:	bl	0 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv>
  24:	mov	x19, x0
  28:	str	x0, [x29, #24]
  2c:	add	x0, x29, #0x18
  30:	bl	0 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv>
  34:	tbz	w0, #0, 68 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv+0x68>
  38:	mov	x0, x19
  3c:	ldr	x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	ret
  48:	adrp	x0, 0 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv>
  4c:	adrp	x1, 0 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv>
  50:	adrp	x3, 0 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x8c                  	// #140
  64:	bl	0 <__assert_fail>
  68:	adrp	x0, 0 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv>
  6c:	adrp	x1, 0 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv>
  70:	adrp	x3, 0 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x108                 	// #264
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE:

0000000000000000 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x21, x1
  14:	mov	x22, x0
  18:	bl	0 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>
  1c:	mov	x19, x0
  20:	mov	x20, x1
  24:	mov	x0, x22
  28:	mov	x1, x21
  2c:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
  30:	cbz	w0, 60 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE+0x60>
  34:	mov	w8, w0
  38:	tst	w20, #0xff
  3c:	add	x9, x19, x8
  40:	ldp	x20, x19, [sp, #32]
  44:	ldp	x22, x21, [sp, #16]
  48:	sub	x9, x9, #0x1
  4c:	udiv	x9, x9, x8
  50:	mul	x0, x9, x8
  54:	cset	w1, ne  // ne = any
  58:	ldp	x29, x30, [sp], #48
  5c:	ret
  60:	adrp	x0, 0 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>
  64:	adrp	x1, 0 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>
  68:	adrp	x3, 0 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>
  6c:	add	x0, x0, #0x0
  70:	add	x1, x1, #0x0
  74:	add	x3, x3, #0x0
  78:	mov	w2, #0xc7                  	// #199
  7c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv:

0000000000000000 <_ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w1, wzr
   c:	bl	0 <_ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv>
  10:	cbz	x0, 2c <_ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv+0x2c>
  14:	ldrb	w8, [x0, #16]
  18:	cmp	w8, #0xd
  1c:	b.ne	4c <_ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv+0x4c>  // b.any
  20:	add	x0, x0, #0x18
  24:	ldp	x29, x30, [sp], #16
  28:	b	0 <_ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv>
  2c:	adrp	x0, 0 <_ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv>
  30:	adrp	x1, 0 <_ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv>
  34:	adrp	x3, 0 <_ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv>
  38:	add	x0, x0, #0x0
  3c:	add	x1, x1, #0x0
  40:	add	x3, x3, #0x0
  44:	mov	w2, #0x69                  	// #105
  48:	bl	0 <__assert_fail>
  4c:	adrp	x0, 0 <_ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv>
  50:	adrp	x1, 0 <_ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv>
  54:	adrp	x3, 0 <_ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv>
  58:	add	x0, x0, #0x0
  5c:	add	x1, x1, #0x0
  60:	add	x3, x3, #0x0
  64:	mov	w2, #0x108                 	// #264
  68:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv:

0000000000000000 <_ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w1, #0x1                   	// #1
   c:	bl	0 <_ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv>
  10:	cbz	x0, 2c <_ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv+0x2c>
  14:	ldrb	w8, [x0, #16]
  18:	cmp	w8, #0xd
  1c:	b.ne	4c <_ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv+0x4c>  // b.any
  20:	add	x0, x0, #0x18
  24:	ldp	x29, x30, [sp], #16
  28:	b	0 <_ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv>
  2c:	adrp	x0, 0 <_ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv>
  30:	adrp	x1, 0 <_ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv>
  34:	adrp	x3, 0 <_ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv>
  38:	add	x0, x0, #0x0
  3c:	add	x1, x1, #0x0
  40:	add	x3, x3, #0x0
  44:	mov	w2, #0x69                  	// #105
  48:	bl	0 <__assert_fail>
  4c:	adrp	x0, 0 <_ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv>
  50:	adrp	x1, 0 <_ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv>
  54:	adrp	x3, 0 <_ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv>
  58:	add	x0, x0, #0x0
  5c:	add	x1, x1, #0x0
  60:	add	x3, x3, #0x0
  64:	mov	w2, #0x108                 	// #264
  68:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplIcE6appendIPKcvEEvT_S5_:

0000000000000000 <_ZN4llvm15SmallVectorImplIcE6appendIPKcvEEvT_S5_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	w8, w9, [x0, #8]
  14:	sub	x20, x2, x1
  18:	mov	x22, x2
  1c:	mov	x21, x1
  20:	sub	x9, x9, x8
  24:	mov	x19, x0
  28:	cmp	x20, x9
  2c:	b.ls	44 <_ZN4llvm15SmallVectorImplIcE6appendIPKcvEEvT_S5_+0x44>  // b.plast
  30:	add	x2, x20, x8
  34:	add	x1, x19, #0x10
  38:	mov	w3, #0x1                   	// #1
  3c:	mov	x0, x19
  40:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  44:	cmp	x21, x22
  48:	b.eq	64 <_ZN4llvm15SmallVectorImplIcE6appendIPKcvEEvT_S5_+0x64>  // b.none
  4c:	ldr	x8, [x19]
  50:	ldr	w9, [x19, #8]
  54:	mov	x1, x21
  58:	mov	x2, x20
  5c:	add	x0, x8, x9
  60:	bl	0 <memcpy>
  64:	ldp	w8, w9, [x19, #8]
  68:	add	x8, x20, x8
  6c:	cmp	x8, x9
  70:	b.hi	88 <_ZN4llvm15SmallVectorImplIcE6appendIPKcvEEvT_S5_+0x88>  // b.pmore
  74:	str	w8, [x19, #8]
  78:	ldp	x20, x19, [sp, #32]
  7c:	ldp	x22, x21, [sp, #16]
  80:	ldp	x29, x30, [sp], #48
  84:	ret
  88:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIcE6appendIPKcvEEvT_S5_>
  8c:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIcE6appendIPKcvEEvT_S5_>
  90:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIcE6appendIPKcvEEvT_S5_>
  94:	add	x0, x0, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x3, x3, #0x0
  a0:	mov	w2, #0x43                  	// #67
  a4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13isa_impl_wrapINS_19AnyCoroIdRetconInstEPKNS_13AnyCoroIdInstES4_E4doitERKS4_:

0000000000000000 <_ZN4llvm13isa_impl_wrapINS_19AnyCoroIdRetconInstEPKNS_13AnyCoroIdInstES4_E4doitERKS4_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	cbz	x8, 38 <_ZN4llvm13isa_impl_wrapINS_19AnyCoroIdRetconInstEPKNS_13AnyCoroIdInstES4_E4doitERKS4_+0x38>
  10:	ldur	x8, [x8, #-24]
  14:	ldrb	w9, [x8, #16]
  18:	cmp	w9, #0x0
  1c:	csel	x8, x8, xzr, eq  // eq = none
  20:	ldr	w8, [x8, #36]
  24:	sub	w8, w8, #0x19
  28:	cmp	w8, #0x2
  2c:	cset	w0, cc  // cc = lo, ul, last
  30:	ldp	x29, x30, [sp], #16
  34:	ret
  38:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_19AnyCoroIdRetconInstEPKNS_13AnyCoroIdInstES4_E4doitERKS4_>
  3c:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_19AnyCoroIdRetconInstEPKNS_13AnyCoroIdInstES4_E4doitERKS4_>
  40:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_19AnyCoroIdRetconInstEPKNS_13AnyCoroIdInstES4_E4doitERKS4_>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x69                  	// #105
  54:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10DataLayout16getTypeStoreSizeEPNS_4TypeE:

0000000000000000 <_ZNK4llvm10DataLayout16getTypeStoreSizeEPNS_4TypeE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	bl	0 <_ZNK4llvm10DataLayout16getTypeStoreSizeEPNS_4TypeE>
   c:	add	x8, x0, #0x7
  10:	tst	w1, #0xff
  14:	lsr	x0, x8, #3
  18:	cset	w1, ne  // ne = any
  1c:	ldp	x29, x30, [sp], #16
  20:	ret

Disassembly of section .text._ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE:

0000000000000000 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x1, #8]
  14:	and	w9, w8, #0xff
  18:	cmp	w9, #0x10
  1c:	b.hi	18c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x18c>  // b.pmore
  20:	mov	w10, #0x1                   	// #1
  24:	lsl	w9, w10, w9
  28:	mov	w10, #0x8a7e                	// #35454
  2c:	mov	x20, x1
  30:	mov	x19, x0
  34:	tst	w9, w10
  38:	b.ne	60 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x60>  // b.any
  3c:	mov	w8, #0x6000                	// #24576
  40:	movk	w8, #0x1, lsl #16
  44:	tst	w9, w8
  48:	b.eq	18c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x18c>  // b.none
  4c:	mov	x0, x20
  50:	mov	x1, xzr
  54:	bl	0 <_ZNK4llvm4Type18isSizedDerivedTypeEPNS_15SmallPtrSetImplIPS0_EE>
  58:	tbz	w0, #0, 18c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x18c>
  5c:	ldr	w8, [x20, #8]
  60:	and	w9, w8, #0xff
  64:	sub	w9, w9, #0x1
  68:	cmp	w9, #0xf
  6c:	b.hi	174 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x174>  // b.pmore
  70:	adrp	x10, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  74:	add	x10, x10, #0x0
  78:	adr	x11, 90 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x90>
  7c:	ldrb	w12, [x10, x9]
  80:	add	x11, x11, x12, lsl #2
  84:	mov	x1, xzr
  88:	mov	w0, #0x10                  	// #16
  8c:	br	x11
  90:	mov	x1, xzr
  94:	mov	w0, #0x40                  	// #64
  98:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
  9c:	mov	x1, xzr
  a0:	mov	w0, #0x80                  	// #128
  a4:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
  a8:	and	w9, w8, #0xff
  ac:	cmp	w9, #0xf
  b0:	b.ne	1ac <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1ac>  // b.any
  b4:	lsr	w1, w8, #8
  b8:	mov	x0, x19
  bc:	b	118 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x118>
  c0:	ldr	x21, [x20, #32]
  c4:	lsr	x8, x21, #32
  c8:	cbnz	x8, 1cc <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1cc>
  cc:	ldr	x1, [x20, #24]
  d0:	ldrb	w22, [x20, #40]
  d4:	mov	x0, x19
  d8:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  dc:	tst	w1, #0xff
  e0:	b.ne	1ec <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1ec>  // b.any
  e4:	and	x8, x21, #0x100000000
  e8:	orr	x8, x8, x22, lsl #32
  ec:	mul	x0, x0, x21
  f0:	lsr	x1, x8, #32
  f4:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
  f8:	mov	x0, x19
  fc:	mov	x1, x20
 100:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 104:	ldr	x8, [x0]
 108:	mov	x1, xzr
 10c:	b	15c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x15c>
 110:	mov	x0, x19
 114:	mov	w1, wzr
 118:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
 11c:	mov	x1, xzr
 120:	lsl	w0, w0, #3
 124:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
 128:	mov	x1, xzr
 12c:	mov	w0, #0x20                  	// #32
 130:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
 134:	mov	x1, xzr
 138:	mov	w0, #0x50                  	// #80
 13c:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
 140:	mov	x1, xzr
 144:	lsr	w0, w8, #8
 148:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
 14c:	ldp	x1, x21, [x20, #24]
 150:	mov	x0, x19
 154:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 158:	mul	x8, x21, x0
 15c:	lsl	x0, x8, #3
 160:	ldp	x20, x19, [sp, #32]
 164:	ldp	x22, x21, [sp, #16]
 168:	and	x1, x1, #0xff
 16c:	ldp	x29, x30, [sp], #48
 170:	ret
 174:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 178:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 17c:	add	x0, x0, #0x0
 180:	add	x1, x1, #0x0
 184:	mov	w2, #0x298                 	// #664
 188:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 18c:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 190:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 194:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 198:	add	x0, x0, #0x0
 19c:	add	x1, x1, #0x0
 1a0:	add	x3, x3, #0x0
 1a4:	mov	w2, #0x271                 	// #625
 1a8:	bl	0 <__assert_fail>
 1ac:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1b0:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1b4:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1b8:	add	x0, x0, #0x0
 1bc:	add	x1, x1, #0x0
 1c0:	add	x3, x3, #0x0
 1c4:	mov	w2, #0x108                 	// #264
 1c8:	bl	0 <__assert_fail>
 1cc:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1d0:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1d4:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1d8:	add	x0, x0, #0x0
 1dc:	add	x1, x1, #0x0
 1e0:	add	x3, x3, #0x0
 1e4:	mov	w2, #0x220                 	// #544
 1e8:	bl	0 <__assert_fail>
 1ec:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1f0:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1f4:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1f8:	add	x0, x0, #0x0
 1fc:	add	x1, x1, #0x0
 200:	add	x3, x3, #0x0
 204:	mov	w2, #0x7d                  	// #125
 208:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplISt4pairIPNS_10AllocaInstEjEE12emplace_backIJRS3_NS_4coro5Shape16SwitchFieldIndexUt_EEEERS4_DpOT_:

0000000000000000 <_ZN4llvm15SmallVectorImplISt4pairIPNS_10AllocaInstEjEE12emplace_backIJRS3_NS_4coro5Shape16SwitchFieldIndexUt_EEEERS4_DpOT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	w8, w9, [x0, #8]
  14:	mov	x20, x2
  18:	mov	x19, x0
  1c:	mov	x21, x1
  20:	cmp	w8, w9
  24:	b.cs	68 <_ZN4llvm15SmallVectorImplISt4pairIPNS_10AllocaInstEjEE12emplace_backIJRS3_NS_4coro5Shape16SwitchFieldIndexUt_EEEERS4_DpOT_+0x68>  // b.hs, b.nlast
  28:	ldr	x10, [x19]
  2c:	ldr	x11, [x21]
  30:	cmp	w8, w9
  34:	add	x12, x10, w8, uxtw #4
  38:	str	x11, [x12]
  3c:	ldr	w11, [x20]
  40:	str	w11, [x12, #8]
  44:	b.cs	7c <_ZN4llvm15SmallVectorImplISt4pairIPNS_10AllocaInstEjEE12emplace_backIJRS3_NS_4coro5Shape16SwitchFieldIndexUt_EEEERS4_DpOT_+0x7c>  // b.hs, b.nlast
  48:	add	w8, w8, #0x1
  4c:	str	w8, [x19, #8]
  50:	ldp	x20, x19, [sp, #32]
  54:	ldr	x21, [sp, #16]
  58:	add	x9, x10, w8, uxtw #4
  5c:	sub	x0, x9, #0x10
  60:	ldp	x29, x30, [sp], #48
  64:	ret
  68:	mov	x0, x19
  6c:	mov	x1, xzr
  70:	bl	0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_10AllocaInstEjEE12emplace_backIJRS3_NS_4coro5Shape16SwitchFieldIndexUt_EEEERS4_DpOT_>
  74:	ldp	w8, w9, [x19, #8]
  78:	b	28 <_ZN4llvm15SmallVectorImplISt4pairIPNS_10AllocaInstEjEE12emplace_backIJRS3_NS_4coro5Shape16SwitchFieldIndexUt_EEEERS4_DpOT_+0x28>
  7c:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_10AllocaInstEjEE12emplace_backIJRS3_NS_4coro5Shape16SwitchFieldIndexUt_EEEERS4_DpOT_>
  80:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_10AllocaInstEjEE12emplace_backIJRS3_NS_4coro5Shape16SwitchFieldIndexUt_EEEERS4_DpOT_>
  84:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_10AllocaInstEjEE12emplace_backIJRS3_NS_4coro5Shape16SwitchFieldIndexUt_EEEERS4_DpOT_>
  88:	add	x0, x0, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0x43                  	// #67
  98:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplISt4pairIPNS_10AllocaInstEjEE12emplace_backIJRS3_RjEEERS4_DpOT_:

0000000000000000 <_ZN4llvm15SmallVectorImplISt4pairIPNS_10AllocaInstEjEE12emplace_backIJRS3_RjEEERS4_DpOT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	w8, w9, [x0, #8]
  14:	mov	x20, x2
  18:	mov	x19, x0
  1c:	mov	x21, x1
  20:	cmp	w8, w9
  24:	b.cs	68 <_ZN4llvm15SmallVectorImplISt4pairIPNS_10AllocaInstEjEE12emplace_backIJRS3_RjEEERS4_DpOT_+0x68>  // b.hs, b.nlast
  28:	ldr	x10, [x19]
  2c:	ldr	x11, [x21]
  30:	cmp	w8, w9
  34:	add	x12, x10, w8, uxtw #4
  38:	str	x11, [x12]
  3c:	ldr	w11, [x20]
  40:	str	w11, [x12, #8]
  44:	b.cs	7c <_ZN4llvm15SmallVectorImplISt4pairIPNS_10AllocaInstEjEE12emplace_backIJRS3_RjEEERS4_DpOT_+0x7c>  // b.hs, b.nlast
  48:	add	w8, w8, #0x1
  4c:	str	w8, [x19, #8]
  50:	ldp	x20, x19, [sp, #32]
  54:	ldr	x21, [sp, #16]
  58:	add	x9, x10, w8, uxtw #4
  5c:	sub	x0, x9, #0x10
  60:	ldp	x29, x30, [sp], #48
  64:	ret
  68:	mov	x0, x19
  6c:	mov	x1, xzr
  70:	bl	0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_10AllocaInstEjEE12emplace_backIJRS3_RjEEERS4_DpOT_>
  74:	ldp	w8, w9, [x19, #8]
  78:	b	28 <_ZN4llvm15SmallVectorImplISt4pairIPNS_10AllocaInstEjEE12emplace_backIJRS3_RjEEERS4_DpOT_+0x28>
  7c:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_10AllocaInstEjEE12emplace_backIJRS3_RjEEERS4_DpOT_>
  80:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_10AllocaInstEjEE12emplace_backIJRS3_RjEEERS4_DpOT_>
  84:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_10AllocaInstEjEE12emplace_backIJRS3_RjEEERS4_DpOT_>
  88:	add	x0, x0, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0x43                  	// #67
  98:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #48]
   8:	stp	x24, x23, [sp, #64]
   c:	stp	x22, x21, [sp, #80]
  10:	stp	x20, x19, [sp, #96]
  14:	add	x29, sp, #0x30
  18:	mov	x19, x0
  1c:	ldr	x0, [x0, #24]
  20:	mov	x20, x5
  24:	mov	w23, w4
  28:	mov	w24, w3
  2c:	mov	x21, x2
  30:	mov	x22, x1
  34:	bl	0 <_ZN4llvm4Type10getInt32TyERNS_11LLVMContextE>
  38:	mov	w1, w24
  3c:	mov	w2, wzr
  40:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
  44:	stur	x0, [x29, #-16]
  48:	ldr	x0, [x19, #24]
  4c:	bl	0 <_ZN4llvm4Type10getInt32TyERNS_11LLVMContextE>
  50:	mov	w1, w23
  54:	mov	w2, wzr
  58:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
  5c:	stur	x0, [x29, #-8]
  60:	cbz	x21, 10c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE+0x10c>
  64:	ldrb	w8, [x21, #16]
  68:	cmp	w8, #0x10
  6c:	b.ls	cc <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE+0xcc>  // b.plast
  70:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  74:	add	x1, x1, #0x0
  78:	add	x0, sp, #0x8
  7c:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  80:	sub	x2, x29, #0x10
  84:	add	x4, sp, #0x8
  88:	mov	w3, #0x2                   	// #2
  8c:	mov	x0, x22
  90:	mov	x1, x21
  94:	mov	x5, xzr
  98:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  9c:	mov	w1, #0x1                   	// #1
  a0:	mov	x21, x0
  a4:	bl	0 <_ZN4llvm17GetElementPtrInst13setIsInBoundsEb>
  a8:	ldp	x3, x4, [x19, #8]
  ac:	mov	x0, x19
  b0:	mov	x1, x21
  b4:	mov	x2, x20
  b8:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  bc:	mov	x0, x19
  c0:	mov	x1, x21
  c4:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  c8:	b	f0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE+0xf0>
  cc:	sub	x2, x29, #0x10
  d0:	mov	w3, #0x2                   	// #2
  d4:	mov	w4, #0x1                   	// #1
  d8:	mov	x0, x22
  dc:	mov	x1, x21
  e0:	mov	x5, xzr
  e4:	mov	x6, xzr
  e8:	bl	0 <_ZN4llvm12ConstantExpr16getGetElementPtrEPNS_4TypeEPNS_8ConstantENS_8ArrayRefIPNS_5ValueEEEbNS_8OptionalIjEES2_>
  ec:	mov	x21, x0
  f0:	mov	x0, x21
  f4:	ldp	x20, x19, [sp, #96]
  f8:	ldp	x22, x21, [sp, #80]
  fc:	ldp	x24, x23, [sp, #64]
 100:	ldp	x29, x30, [sp, #48]
 104:	add	sp, sp, #0x70
 108:	ret
 10c:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
 110:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
 114:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
 118:	add	x0, x0, #0x0
 11c:	add	x1, x1, #0x0
 120:	add	x3, x3, #0x0
 124:	mov	w2, #0x69                  	// #105
 128:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_5ValueERKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_5ValueERKNS_5TwineE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x1]
   c:	ldrb	w9, [x8, #8]
  10:	cmp	w9, #0xf
  14:	b.ne	30 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_5ValueERKNS_5TwineE+0x30>  // b.any
  18:	ldr	x8, [x8, #16]
  1c:	mov	x3, x2
  20:	mov	x2, x1
  24:	ldr	x1, [x8]
  28:	ldp	x29, x30, [sp], #16
  2c:	b	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_5ValueERKNS_5TwineE>
  30:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_5ValueERKNS_5TwineE>
  34:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_5ValueERKNS_5TwineE>
  38:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_5ValueERKNS_5TwineE>
  3c:	add	x0, x0, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0x17e                 	// #382
  4c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCastENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCastENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineE>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	str	x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	ldr	x8, [x2]
  1c:	mov	x19, x2
  20:	cmp	x8, x3
  24:	b.eq	90 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCastENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineE+0x90>  // b.none
  28:	ldrb	w8, [x19, #16]
  2c:	mov	x22, x3
  30:	mov	w23, w1
  34:	cmp	w8, #0x10
  38:	b.ls	ac <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCastENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineE+0xac>  // b.plast
  3c:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCastENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineE>
  40:	mov	x21, x0
  44:	add	x1, x1, #0x0
  48:	add	x0, sp, #0x8
  4c:	mov	x20, x4
  50:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCastENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineE>
  54:	add	x3, sp, #0x8
  58:	mov	w0, w23
  5c:	mov	x1, x19
  60:	mov	x2, x22
  64:	mov	x4, xzr
  68:	bl	0 <_ZN4llvm8CastInst6CreateENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineEPS1_>
  6c:	ldp	x3, x4, [x21, #8]
  70:	mov	x19, x0
  74:	mov	x0, x21
  78:	mov	x1, x19
  7c:	mov	x2, x20
  80:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCastENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineE>
  84:	mov	x0, x21
  88:	mov	x1, x19
  8c:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCastENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineE>
  90:	mov	x0, x19
  94:	ldp	x20, x19, [sp, #80]
  98:	ldp	x22, x21, [sp, #64]
  9c:	ldr	x23, [sp, #48]
  a0:	ldp	x29, x30, [sp, #32]
  a4:	add	sp, sp, #0x60
  a8:	ret
  ac:	mov	w0, w23
  b0:	mov	x1, x19
  b4:	mov	x2, x22
  b8:	ldp	x20, x19, [sp, #80]
  bc:	ldp	x22, x21, [sp, #64]
  c0:	ldr	x23, [sp, #48]
  c4:	ldp	x29, x30, [sp, #32]
  c8:	mov	w3, wzr
  cc:	add	sp, sp, #0x60
  d0:	b	0 <_ZN4llvm12ConstantExpr7getCastEjPNS_8ConstantEPNS_4TypeEb>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_10AllocaInstEjELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_10AllocaInstEjELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_10AllocaInstEjELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_10AllocaInstEjELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	lsl	x0, x21, #4
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_10AllocaInstEjELb0EE4growEm+0xb4>
  78:	cbz	x21, 94 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_10AllocaInstEjELb0EE4growEm+0x94>
  7c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_10AllocaInstEjELb0EE4growEm>
  80:	add	x0, x0, #0x0
  84:	mov	w1, #0x1                   	// #1
  88:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  8c:	mov	x20, xzr
  90:	b	b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_10AllocaInstEjELb0EE4growEm+0xb4>
  94:	mov	w0, #0x1                   	// #1
  98:	bl	0 <malloc>
  9c:	mov	x20, x0
  a0:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_10AllocaInstEjELb0EE4growEm+0xb4>
  a4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_10AllocaInstEjELb0EE4growEm>
  a8:	add	x0, x0, #0x0
  ac:	mov	w1, #0x1                   	// #1
  b0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b4:	ldr	w8, [x19, #8]
  b8:	ldr	x0, [x19]
  bc:	cbz	w8, e0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_10AllocaInstEjELb0EE4growEm+0xe0>
  c0:	lsl	x8, x8, #4
  c4:	mov	x9, x20
  c8:	ldr	q0, [x0], #16
  cc:	subs	x8, x8, #0x10
  d0:	str	q0, [x9]
  d4:	add	x9, x9, #0x10
  d8:	b.ne	c8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_10AllocaInstEjELb0EE4growEm+0xc8>  // b.any
  dc:	ldr	x0, [x19]
  e0:	add	x8, x19, #0x10
  e4:	cmp	x0, x8
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_10AllocaInstEjELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w21, [x19, #12]
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

Disassembly of section .text._ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	x8, [x1]
  1c:	mov	x19, x5
  20:	mov	x20, x4
  24:	mov	x21, x3
  28:	ldrb	w9, [x8, #8]
  2c:	mov	x22, x2
  30:	mov	x23, x1
  34:	mov	x24, x0
  38:	cmp	w9, #0x10
  3c:	b.ne	48 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0x48>  // b.any
  40:	ldr	x8, [x8, #16]
  44:	ldr	x8, [x8]
  48:	cbz	x8, dc <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0xdc>
  4c:	ldrb	w9, [x8, #8]
  50:	cmp	w9, #0xf
  54:	b.ne	fc <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0xfc>  // b.any
  58:	ldr	x8, [x8, #24]
  5c:	cbz	x24, 88 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0x88>
  60:	cmp	x8, x24
  64:	b.eq	8c <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0x8c>  // b.none
  68:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  6c:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  70:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x3a1                 	// #929
  84:	bl	0 <__assert_fail>
  88:	mov	x24, x8
  8c:	add	w25, w21, #0x1
  90:	mov	w0, #0x48                  	// #72
  94:	mov	w1, w25
  98:	bl	0 <_ZN4llvm4UsernwEmj>
  9c:	mov	x1, x24
  a0:	mov	x2, x23
  a4:	mov	x3, x22
  a8:	mov	x4, x21
  ac:	mov	w5, w25
  b0:	mov	x6, x20
  b4:	mov	x7, x19
  b8:	mov	x26, x0
  bc:	bl	0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  c0:	mov	x0, x26
  c4:	ldp	x20, x19, [sp, #64]
  c8:	ldp	x22, x21, [sp, #48]
  cc:	ldp	x24, x23, [sp, #32]
  d0:	ldp	x26, x25, [sp, #16]
  d4:	ldp	x29, x30, [sp], #80
  d8:	ret
  dc:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  e0:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  e4:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x69                  	// #105
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
 100:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
 104:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x108                 	// #264
 118:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x21, x3
  1c:	mov	x22, x2
  20:	mov	x26, x1
  24:	mov	x23, x0
  28:	mov	x0, x1
  2c:	mov	x1, x2
  30:	mov	x2, x3
  34:	mov	x3, x4
  38:	mov	x24, x7
  3c:	mov	x19, x6
  40:	mov	w25, w5
  44:	mov	x20, x4
  48:	bl	0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  4c:	mov	w8, w25
  50:	mov	w9, #0x18                  	// #24
  54:	mneg	x8, x8, x9
  58:	mov	x1, x0
  5c:	add	x3, x23, x8
  60:	mov	w2, #0x22                  	// #34
  64:	mov	x0, x23
  68:	mov	w4, w25
  6c:	mov	x5, x24
  70:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
  74:	mov	x0, x26
  78:	mov	x1, x21
  7c:	mov	x2, x20
  80:	str	x26, [x23, #56]
  84:	bl	0 <_ZN4llvm17GetElementPtrInst14getIndexedTypeEPNS_4TypeENS_8ArrayRefIPNS_5ValueEEE>
  88:	ldr	x8, [x23]
  8c:	str	x0, [x23, #64]
  90:	ldrb	w9, [x8, #8]
  94:	cmp	w9, #0x10
  98:	b.ne	a4 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0xa4>  // b.any
  9c:	ldr	x8, [x8, #16]
  a0:	ldr	x8, [x8]
  a4:	cbz	x8, ec <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0xec>
  a8:	ldrb	w9, [x8, #8]
  ac:	cmp	w9, #0xf
  b0:	b.ne	10c <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0x10c>  // b.any
  b4:	ldr	x8, [x8, #24]
  b8:	cmp	x0, x8
  bc:	b.ne	12c <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0x12c>  // b.any
  c0:	mov	x0, x23
  c4:	mov	x1, x22
  c8:	mov	x2, x21
  cc:	mov	x3, x20
  d0:	mov	x4, x19
  d4:	ldp	x20, x19, [sp, #64]
  d8:	ldp	x22, x21, [sp, #48]
  dc:	ldp	x24, x23, [sp, #32]
  e0:	ldp	x26, x25, [sp, #16]
  e4:	ldp	x29, x30, [sp], #80
  e8:	b	0 <_ZN4llvm17GetElementPtrInst4initEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineE>
  ec:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  f0:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  f4:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  f8:	add	x0, x0, #0x0
  fc:	add	x1, x1, #0x0
 100:	add	x3, x3, #0x0
 104:	mov	w2, #0x69                  	// #105
 108:	bl	0 <__assert_fail>
 10c:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 110:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 114:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 118:	add	x0, x0, #0x0
 11c:	add	x1, x1, #0x0
 120:	add	x3, x3, #0x0
 124:	mov	w2, #0x108                 	// #264
 128:	bl	0 <__assert_fail>
 12c:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 130:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 134:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 138:	add	x0, x0, #0x0
 13c:	add	x1, x1, #0x0
 140:	add	x3, x3, #0x0
 144:	mov	w2, #0x46a                 	// #1130
 148:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE:

0000000000000000 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x2
  14:	mov	x21, x1
  18:	mov	x1, x2
  1c:	mov	x2, x3
  20:	mov	x20, x3
  24:	bl	0 <_ZN4llvm17GetElementPtrInst14getIndexedTypeEPNS_4TypeENS_8ArrayRefIPNS_5ValueEEE>
  28:	cbz	x0, cc <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xcc>
  2c:	ldr	x9, [x21]
  30:	ldr	w8, [x9, #8]
  34:	and	w10, w8, #0xff
  38:	cmp	w10, #0x10
  3c:	b.ne	50 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x50>  // b.any
  40:	ldr	x8, [x9, #16]
  44:	ldr	x8, [x8]
  48:	cbz	x8, 128 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x128>
  4c:	ldr	w8, [x8, #8]
  50:	and	w9, w8, #0xff
  54:	cmp	w9, #0xf
  58:	b.ne	ec <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xec>  // b.any
  5c:	lsr	w1, w8, #8
  60:	bl	0 <_ZN4llvm11PointerType3getEPNS_4TypeEj>
  64:	ldr	x8, [x21]
  68:	ldrb	w9, [x8, #8]
  6c:	cmp	w9, #0x10
  70:	b.ne	80 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x80>  // b.any
  74:	cbz	x8, 10c <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x10c>
  78:	ldr	w1, [x8, #32]
  7c:	b	bc <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xbc>
  80:	cbz	x20, a4 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xa4>
  84:	lsl	x8, x20, #3
  88:	ldr	x9, [x19], #8
  8c:	ldr	x9, [x9]
  90:	ldrb	w10, [x9, #8]
  94:	cmp	w10, #0x10
  98:	b.eq	b4 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xb4>  // b.none
  9c:	subs	x8, x8, #0x8
  a0:	b.ne	88 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x88>  // b.any
  a4:	ldp	x20, x19, [sp, #32]
  a8:	ldr	x21, [sp, #16]
  ac:	ldp	x29, x30, [sp], #48
  b0:	ret
  b4:	cbz	x9, 10c <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x10c>
  b8:	ldr	w1, [x9, #32]
  bc:	ldp	x20, x19, [sp, #32]
  c0:	ldr	x21, [sp, #16]
  c4:	ldp	x29, x30, [sp], #48
  c8:	b	0 <_ZN4llvm10VectorType3getEPNS_4TypeENS_12ElementCountE>
  cc:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  d0:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  d4:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  d8:	add	x0, x0, #0x0
  dc:	add	x1, x1, #0x0
  e0:	add	x3, x3, #0x0
  e4:	mov	w2, #0x375                 	// #885
  e8:	bl	0 <__assert_fail>
  ec:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  f0:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  f4:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  f8:	add	x0, x0, #0x0
  fc:	add	x1, x1, #0x0
 100:	add	x3, x3, #0x0
 104:	mov	w2, #0x108                 	// #264
 108:	bl	0 <__assert_fail>
 10c:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 110:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 114:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 118:	add	x0, x0, #0x0
 11c:	add	x1, x1, #0x0
 120:	add	x3, x3, #0x0
 124:	b	140 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x140>
 128:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 12c:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 130:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 134:	add	x0, x0, #0x0
 138:	add	x1, x1, #0x0
 13c:	add	x3, x3, #0x0
 140:	mov	w2, #0x69                  	// #105
 144:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIPNS_5ValueELb1EE9push_backERKS2_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIPNS_5ValueELb1EE9push_backERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseIPNS_5ValueELb1EE9push_backERKS2_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	x10, [x20]
  28:	str	x10, [x9, w8, uxtw #3]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseIPNS_5ValueELb1EE9push_backERKS2_+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x8                   	// #8
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseIPNS_5ValueELb1EE9push_backERKS2_+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_5ValueELb1EE9push_backERKS2_>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_5ValueELb1EE9push_backERKS2_>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_5ValueELb1EE9push_backERKS2_>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInBoundsGEPEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInBoundsGEPEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineE>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x24, x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	cbz	x2, 114 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInBoundsGEPEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineE+0x114>
  1c:	ldrb	w8, [x2, #16]
  20:	mov	x20, x5
  24:	mov	x21, x4
  28:	mov	x22, x3
  2c:	mov	x23, x2
  30:	mov	x24, x1
  34:	mov	x19, x0
  38:	cmp	w8, #0x10
  3c:	b.ls	b4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInBoundsGEPEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineE+0xb4>  // b.plast
  40:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInBoundsGEPEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineE>
  44:	add	x1, x1, #0x0
  48:	add	x0, sp, #0x8
  4c:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInBoundsGEPEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineE>
  50:	add	x4, sp, #0x8
  54:	mov	x0, x24
  58:	mov	x1, x23
  5c:	mov	x2, x22
  60:	mov	x3, x21
  64:	mov	x5, xzr
  68:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInBoundsGEPEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineE>
  6c:	mov	w1, #0x1                   	// #1
  70:	mov	x21, x0
  74:	bl	0 <_ZN4llvm17GetElementPtrInst13setIsInBoundsEb>
  78:	ldp	x3, x4, [x19, #8]
  7c:	mov	x0, x19
  80:	mov	x1, x21
  84:	mov	x2, x20
  88:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInBoundsGEPEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineE>
  8c:	mov	x0, x19
  90:	mov	x1, x21
  94:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInBoundsGEPEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineE>
  98:	mov	x0, x21
  9c:	ldp	x20, x19, [sp, #80]
  a0:	ldp	x22, x21, [sp, #64]
  a4:	ldp	x24, x23, [sp, #48]
  a8:	ldp	x29, x30, [sp, #32]
  ac:	add	sp, sp, #0x60
  b0:	ret
  b4:	cbz	x21, e0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInBoundsGEPEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineE+0xe0>
  b8:	mov	x8, x22
  bc:	mov	x9, x21
  c0:	ldr	x10, [x8]
  c4:	cbz	x10, 114 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInBoundsGEPEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineE+0x114>
  c8:	ldrb	w10, [x10, #16]
  cc:	cmp	w10, #0x11
  d0:	b.cs	40 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInBoundsGEPEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineE+0x40>  // b.hs, b.nlast
  d4:	subs	x9, x9, #0x1
  d8:	add	x8, x8, #0x8
  dc:	b.ne	c0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInBoundsGEPEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineE+0xc0>  // b.any
  e0:	mov	x0, x24
  e4:	mov	x1, x23
  e8:	mov	x2, x22
  ec:	mov	x3, x21
  f0:	ldp	x20, x19, [sp, #80]
  f4:	ldp	x22, x21, [sp, #64]
  f8:	ldp	x24, x23, [sp, #48]
  fc:	ldp	x29, x30, [sp, #32]
 100:	mov	w4, #0x1                   	// #1
 104:	mov	x5, xzr
 108:	mov	x6, xzr
 10c:	add	sp, sp, #0x60
 110:	b	0 <_ZN4llvm12ConstantExpr16getGetElementPtrEPNS_4TypeEPNS_8ConstantENS_8ArrayRefIPNS_5ValueEEEbNS_8OptionalIjEES2_>
 114:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInBoundsGEPEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineE>
 118:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInBoundsGEPEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineE>
 11c:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInBoundsGEPEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineE>
 120:	add	x0, x0, #0x0
 124:	add	x1, x1, #0x0
 128:	add	x3, x3, #0x0
 12c:	mov	w2, #0x69                  	// #105
 130:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplIPNS_5ValueEE6appendIPKS2_vEEvT_S7_:

0000000000000000 <_ZN4llvm15SmallVectorImplIPNS_5ValueEE6appendIPKS2_vEEvT_S7_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldp	w8, w9, [x0, #8]
  18:	sub	x21, x2, x1
  1c:	asr	x23, x21, #3
  20:	mov	x22, x2
  24:	sub	x9, x9, x8
  28:	mov	x20, x1
  2c:	mov	x19, x0
  30:	cmp	x23, x9
  34:	b.ls	4c <_ZN4llvm15SmallVectorImplIPNS_5ValueEE6appendIPKS2_vEEvT_S7_+0x4c>  // b.plast
  38:	add	x2, x23, x8
  3c:	add	x1, x19, #0x10
  40:	mov	w3, #0x8                   	// #8
  44:	mov	x0, x19
  48:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  4c:	cmp	x20, x22
  50:	b.eq	6c <_ZN4llvm15SmallVectorImplIPNS_5ValueEE6appendIPKS2_vEEvT_S7_+0x6c>  // b.none
  54:	ldr	x8, [x19]
  58:	ldr	w9, [x19, #8]
  5c:	mov	x1, x20
  60:	mov	x2, x21
  64:	add	x0, x8, x9, lsl #3
  68:	bl	0 <memcpy>
  6c:	ldp	w8, w9, [x19, #8]
  70:	add	x8, x23, x8
  74:	cmp	x8, x9
  78:	b.hi	94 <_ZN4llvm15SmallVectorImplIPNS_5ValueEE6appendIPKS2_vEEvT_S7_+0x94>  // b.pmore
  7c:	str	w8, [x19, #8]
  80:	ldp	x20, x19, [sp, #48]
  84:	ldp	x22, x21, [sp, #32]
  88:	ldr	x23, [sp, #16]
  8c:	ldp	x29, x30, [sp], #64
  90:	ret
  94:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_5ValueEE6appendIPKS2_vEEvT_S7_>
  98:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_5ValueEE6appendIPKS2_vEEvT_S7_>
  9c:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_5ValueEE6appendIPKS2_vEEvT_S7_>
  a0:	add	x0, x0, #0x0
  a4:	add	x1, x1, #0x0
  a8:	add	x3, x3, #0x0
  ac:	mov	w2, #0x43                  	// #67
  b0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm5APIntC2Ejmb:

0000000000000000 <_ZN4llvm5APIntC2Ejmb>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	str	w1, [x0, #8]
   c:	cbz	w1, 38 <_ZN4llvm5APIntC2Ejmb+0x38>
  10:	cmp	w1, #0x40
  14:	b.hi	24 <_ZN4llvm5APIntC2Ejmb+0x24>  // b.pmore
  18:	str	x2, [x0]
  1c:	ldp	x29, x30, [sp], #16
  20:	b	0 <_ZN4llvm5APIntC2Ejmb>
  24:	and	w8, w3, #0x1
  28:	mov	x1, x2
  2c:	mov	w2, w8
  30:	ldp	x29, x30, [sp], #16
  34:	b	0 <_ZN4llvm5APInt12initSlowCaseEmb>
  38:	adrp	x0, 0 <_ZN4llvm5APIntC2Ejmb>
  3c:	adrp	x1, 0 <_ZN4llvm5APIntC2Ejmb>
  40:	adrp	x3, 0 <_ZN4llvm5APIntC2Ejmb>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x117                 	// #279
  54:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm5APIntaSEOS0_:

0000000000000000 <_ZN4llvm5APIntaSEOS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	cmp	x0, x1
  10:	b.eq	58 <_ZN4llvm5APIntaSEOS0_+0x58>  // b.none
  14:	ldr	w8, [x0, #8]
  18:	mov	x20, x1
  1c:	mov	x19, x0
  20:	cmp	w8, #0x41
  24:	b.cc	34 <_ZN4llvm5APIntaSEOS0_+0x34>  // b.lo, b.ul, b.last
  28:	ldr	x0, [x19]
  2c:	cbz	x0, 34 <_ZN4llvm5APIntaSEOS0_+0x34>
  30:	bl	0 <_ZdaPv>
  34:	ldr	x8, [x20]
  38:	mov	x0, x19
  3c:	str	x8, [x19]
  40:	ldr	w8, [x20, #8]
  44:	str	w8, [x19, #8]
  48:	str	wzr, [x20, #8]
  4c:	ldp	x20, x19, [sp, #16]
  50:	ldp	x29, x30, [sp], #32
  54:	ret
  58:	adrp	x0, 0 <_ZN4llvm5APIntaSEOS0_>
  5c:	adrp	x1, 0 <_ZN4llvm5APIntaSEOS0_>
  60:	adrp	x3, 0 <_ZN4llvm5APIntaSEOS0_>
  64:	add	x0, x0, #0x0
  68:	add	x1, x1, #0x0
  6c:	add	x3, x3, #0x0
  70:	mov	w2, #0x302                 	// #770
  74:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_6detail17PtrUseVisitorBase10UseToVisitEE12pop_back_valEv:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_6detail17PtrUseVisitorBase10UseToVisitEE12pop_back_valEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #8]
   c:	cbz	w9, 38 <_ZN4llvm15SmallVectorImplINS_6detail17PtrUseVisitorBase10UseToVisitEE12pop_back_valEv+0x38>
  10:	ldr	x10, [x0]
  14:	mov	w11, #0x18                  	// #24
  18:	madd	x9, x9, x11, x10
  1c:	ldur	w10, [x9, #-8]
  20:	str	w10, [x8, #16]
  24:	ldur	q0, [x9, #-24]
  28:	str	q0, [x8]
  2c:	stur	wzr, [x9, #-8]
  30:	ldp	x29, x30, [sp], #16
  34:	b	0 <_ZN4llvm15SmallVectorImplINS_6detail17PtrUseVisitorBase10UseToVisitEE12pop_back_valEv>
  38:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_6detail17PtrUseVisitorBase10UseToVisitEE12pop_back_valEv>
  3c:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_6detail17PtrUseVisitorBase10UseToVisitEE12pop_back_valEv>
  40:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_6detail17PtrUseVisitorBase10UseToVisitEE12pop_back_valEv>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0xa7                  	// #167
  54:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm5APInt15clearUnusedBitsEv:

0000000000000000 <_ZN4llvm5APInt15clearUnusedBitsEv>:
   0:	ldr	w9, [x0, #8]
   4:	mov	x8, #0xffffffffffffffff    	// #-1
   8:	neg	w10, w9
   c:	cmp	w9, #0x40
  10:	lsr	x8, x8, x10
  14:	b.hi	20 <_ZN4llvm5APInt15clearUnusedBitsEv+0x20>  // b.pmore
  18:	mov	x9, x0
  1c:	b	34 <_ZN4llvm5APInt15clearUnusedBitsEv+0x34>
  20:	ldr	x10, [x0]
  24:	add	x9, x9, #0x3f
  28:	lsr	x9, x9, #6
  2c:	sub	w9, w9, #0x1
  30:	add	x9, x10, w9, uxtw #3
  34:	ldr	x10, [x9]
  38:	and	x8, x10, x8
  3c:	str	x8, [x9]
  40:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_6detail17PtrUseVisitorBase10UseToVisitELb0EE8pop_backEv:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_6detail17PtrUseVisitorBase10UseToVisitELb0EE8pop_backEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	w8, w10, [x0, #8]
   c:	sub	x9, x8, #0x1
  10:	cmp	x9, x10
  14:	b.hi	58 <_ZN4llvm23SmallVectorTemplateBaseINS_6detail17PtrUseVisitorBase10UseToVisitELb0EE8pop_backEv+0x58>  // b.pmore
  18:	ldr	x8, [x0]
  1c:	str	w9, [x0, #8]
  20:	and	x9, x9, #0xffffffff
  24:	mov	w10, #0x18                  	// #24
  28:	madd	x10, x9, x10, x8
  2c:	ldr	w10, [x10, #16]
  30:	cmp	w10, #0x41
  34:	b.cc	50 <_ZN4llvm23SmallVectorTemplateBaseINS_6detail17PtrUseVisitorBase10UseToVisitELb0EE8pop_backEv+0x50>  // b.lo, b.ul, b.last
  38:	mov	w10, #0x18                  	// #24
  3c:	madd	x8, x9, x10, x8
  40:	ldr	x0, [x8, #8]
  44:	cbz	x0, 50 <_ZN4llvm23SmallVectorTemplateBaseINS_6detail17PtrUseVisitorBase10UseToVisitELb0EE8pop_backEv+0x50>
  48:	ldp	x29, x30, [sp], #16
  4c:	b	0 <_ZdaPv>
  50:	ldp	x29, x30, [sp], #16
  54:	ret
  58:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_6detail17PtrUseVisitorBase10UseToVisitELb0EE8pop_backEv>
  5c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_6detail17PtrUseVisitorBase10UseToVisitELb0EE8pop_backEv>
  60:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_6detail17PtrUseVisitorBase10UseToVisitELb0EE8pop_backEv>
  64:	add	x0, x0, #0x0
  68:	add	x1, x1, #0x0
  6c:	add	x3, x3, #0x0
  70:	mov	w2, #0x43                  	// #67
  74:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm6detail17PtrUseVisitorBase7PtrInfo10setAbortedEPNS_11InstructionE:

0000000000000000 <_ZN4llvm6detail17PtrUseVisitorBase7PtrInfo10setAbortedEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	tst	x1, #0x7
  10:	orr	x8, x8, #0x4
  14:	str	x8, [x0]
  18:	b.ne	30 <_ZN4llvm6detail17PtrUseVisitorBase7PtrInfo10setAbortedEPNS_11InstructionE+0x30>  // b.any
  1c:	and	x8, x8, #0x7
  20:	orr	x8, x8, x1
  24:	str	x8, [x0]
  28:	ldp	x29, x30, [sp], #16
  2c:	ret
  30:	adrp	x0, 0 <_ZN4llvm6detail17PtrUseVisitorBase7PtrInfo10setAbortedEPNS_11InstructionE>
  34:	adrp	x1, 0 <_ZN4llvm6detail17PtrUseVisitorBase7PtrInfo10setAbortedEPNS_11InstructionE>
  38:	adrp	x3, 0 <_ZN4llvm6detail17PtrUseVisitorBase7PtrInfo10setAbortedEPNS_11InstructionE>
  3c:	add	x0, x0, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0xb3                  	// #179
  4c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm6detail17PtrUseVisitorBase7PtrInfo10setEscapedEPNS_11InstructionE:

0000000000000000 <_ZN4llvm6detail17PtrUseVisitorBase7PtrInfo10setEscapedEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #8]
   c:	tst	x1, #0x7
  10:	orr	x8, x8, #0x4
  14:	str	x8, [x0, #8]
  18:	b.ne	30 <_ZN4llvm6detail17PtrUseVisitorBase7PtrInfo10setEscapedEPNS_11InstructionE+0x30>  // b.any
  1c:	and	x8, x8, #0x7
  20:	orr	x8, x8, x1
  24:	str	x8, [x0, #8]
  28:	ldp	x29, x30, [sp], #16
  2c:	ret
  30:	adrp	x0, 0 <_ZN4llvm6detail17PtrUseVisitorBase7PtrInfo10setEscapedEPNS_11InstructionE>
  34:	adrp	x1, 0 <_ZN4llvm6detail17PtrUseVisitorBase7PtrInfo10setEscapedEPNS_11InstructionE>
  38:	adrp	x3, 0 <_ZN4llvm6detail17PtrUseVisitorBase7PtrInfo10setEscapedEPNS_11InstructionE>
  3c:	add	x0, x0, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0xb3                  	// #179
  4c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm11SmallVectorINS_6detail17PtrUseVisitorBase10UseToVisitELj8EED2Ev:

0000000000000000 <_ZN4llvm11SmallVectorINS_6detail17PtrUseVisitorBase10UseToVisitELj8EED2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #8]
  14:	ldr	x19, [x0]
  18:	mov	x20, x0
  1c:	cbz	w8, 50 <_ZN4llvm11SmallVectorINS_6detail17PtrUseVisitorBase10UseToVisitELj8EED2Ev+0x50>
  20:	add	x8, x8, x8, lsl #1
  24:	lsl	x21, x8, #3
  28:	add	x8, x19, x21
  2c:	ldur	w9, [x8, #-8]
  30:	cmp	w9, #0x41
  34:	b.cc	44 <_ZN4llvm11SmallVectorINS_6detail17PtrUseVisitorBase10UseToVisitELj8EED2Ev+0x44>  // b.lo, b.ul, b.last
  38:	ldur	x0, [x8, #-16]
  3c:	cbz	x0, 44 <_ZN4llvm11SmallVectorINS_6detail17PtrUseVisitorBase10UseToVisitELj8EED2Ev+0x44>
  40:	bl	0 <_ZdaPv>
  44:	subs	x21, x21, #0x18
  48:	b.ne	28 <_ZN4llvm11SmallVectorINS_6detail17PtrUseVisitorBase10UseToVisitELj8EED2Ev+0x28>  // b.any
  4c:	ldr	x19, [x20]
  50:	add	x8, x20, #0x10
  54:	cmp	x19, x8
  58:	b.eq	70 <_ZN4llvm11SmallVectorINS_6detail17PtrUseVisitorBase10UseToVisitELj8EED2Ev+0x70>  // b.none
  5c:	mov	x0, x19
  60:	ldp	x20, x19, [sp, #32]
  64:	ldr	x21, [sp, #16]
  68:	ldp	x29, x30, [sp], #48
  6c:	b	0 <free>
  70:	ldp	x20, x19, [sp, #32]
  74:	ldr	x21, [sp, #16]
  78:	ldp	x29, x30, [sp], #48
  7c:	ret

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateAllocaEPNS_4TypeEPNS_5ValueERKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateAllocaEPNS_4TypeEPNS_5ValueERKNS_5TwineE>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x24, x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	ldr	x8, [x0, #8]
  1c:	mov	x21, x0
  20:	mov	x19, x3
  24:	mov	x20, x2
  28:	ldr	x8, [x8, #56]
  2c:	mov	x22, x1
  30:	ldr	x0, [x8, #40]
  34:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
  38:	mov	x23, x0
  3c:	mov	w0, #0x40                  	// #64
  40:	mov	w1, #0x1                   	// #1
  44:	bl	0 <_ZN4llvm4UsernwEmj>
  48:	ldr	w23, [x23, #4]
  4c:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateAllocaEPNS_4TypeEPNS_5ValueERKNS_5TwineE>
  50:	mov	x24, x0
  54:	add	x1, x1, #0x0
  58:	add	x0, sp, #0x8
  5c:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateAllocaEPNS_4TypeEPNS_5ValueERKNS_5TwineE>
  60:	add	x4, sp, #0x8
  64:	mov	x0, x24
  68:	mov	x1, x22
  6c:	mov	w2, w23
  70:	mov	x3, x20
  74:	mov	x5, xzr
  78:	bl	0 <_ZN4llvm10AllocaInstC1EPNS_4TypeEjPNS_5ValueERKNS_5TwineEPNS_11InstructionE>
  7c:	ldp	x3, x4, [x21, #8]
  80:	mov	x0, x21
  84:	mov	x1, x24
  88:	mov	x2, x19
  8c:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateAllocaEPNS_4TypeEPNS_5ValueERKNS_5TwineE>
  90:	mov	x0, x21
  94:	mov	x1, x24
  98:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateAllocaEPNS_4TypeEPNS_5ValueERKNS_5TwineE>
  9c:	mov	x0, x24
  a0:	ldp	x20, x19, [sp, #80]
  a4:	ldp	x22, x21, [sp, #64]
  a8:	ldp	x24, x23, [sp, #48]
  ac:	ldp	x29, x30, [sp, #32]
  b0:	add	sp, sp, #0x60
  b4:	ret

Disassembly of section .text._ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv:

0000000000000000 <_ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w1, #0x1                   	// #1
   c:	bl	0 <_ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv>
  10:	cbz	x0, 30 <_ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv+0x30>
  14:	ldrb	w8, [x0, #16]
  18:	cmp	w8, #0xd
  1c:	b.ne	50 <_ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv+0x50>  // b.any
  20:	add	x0, x0, #0x18
  24:	bl	0 <_ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv>
  28:	ldp	x29, x30, [sp], #16
  2c:	ret
  30:	adrp	x0, 0 <_ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv>
  34:	adrp	x1, 0 <_ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv>
  38:	adrp	x3, 0 <_ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv>
  3c:	add	x0, x0, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0x69                  	// #105
  4c:	bl	0 <__assert_fail>
  50:	adrp	x0, 0 <_ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv>
  54:	adrp	x1, 0 <_ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv>
  58:	adrp	x3, 0 <_ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv>
  5c:	add	x0, x0, #0x0
  60:	add	x1, x1, #0x0
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x108                 	// #264
  6c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm10MaybeAlignC2Em:

0000000000000000 <_ZN4llvm10MaybeAlignC2Em>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	strh	wzr, [x0]
  10:	cbz	x1, 3c <_ZN4llvm10MaybeAlignC2Em+0x3c>
  14:	fmov	d0, x1
  18:	cnt	v0.8b, v0.8b
  1c:	uaddlv	h0, v0.8b
  20:	fmov	w8, s0
  24:	cmp	x8, #0x1
  28:	b.ne	48 <_ZN4llvm10MaybeAlignC2Em+0x48>  // b.any
  2c:	mov	x19, x0
  30:	bl	0 <_ZN4llvm10MaybeAlignC2Em>
  34:	mov	w8, #0x1                   	// #1
  38:	strb	w8, [x19, #1]
  3c:	ldr	x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	ret
  48:	adrp	x0, 0 <_ZN4llvm10MaybeAlignC2Em>
  4c:	adrp	x1, 0 <_ZN4llvm10MaybeAlignC2Em>
  50:	adrp	x3, 0 <_ZN4llvm10MaybeAlignC2Em>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x88                  	// #136
  64:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm5AlignC2Em:

0000000000000000 <_ZN4llvm5AlignC2Em>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	strb	wzr, [x0]
   c:	cbz	x1, 3c <_ZN4llvm5AlignC2Em+0x3c>
  10:	fmov	d0, x1
  14:	cnt	v0.8b, v0.8b
  18:	uaddlv	h0, v0.8b
  1c:	fmov	w8, s0
  20:	cmp	x8, #0x1
  24:	b.ne	5c <_ZN4llvm5AlignC2Em+0x5c>  // b.any
  28:	clz	x8, x1
  2c:	eor	w8, w8, #0x3f
  30:	strb	w8, [x0]
  34:	ldp	x29, x30, [sp], #16
  38:	ret
  3c:	adrp	x0, 0 <_ZN4llvm5AlignC2Em>
  40:	adrp	x1, 0 <_ZN4llvm5AlignC2Em>
  44:	adrp	x3, 0 <_ZN4llvm5AlignC2Em>
  48:	add	x0, x0, #0x0
  4c:	add	x1, x1, #0x0
  50:	add	x3, x3, #0x0
  54:	mov	w2, #0x4e                  	// #78
  58:	bl	0 <__assert_fail>
  5c:	adrp	x0, 0 <_ZN4llvm5AlignC2Em>
  60:	adrp	x1, 0 <_ZN4llvm5AlignC2Em>
  64:	adrp	x3, 0 <_ZN4llvm5AlignC2Em>
  68:	add	x0, x0, #0x0
  6c:	add	x1, x1, #0x0
  70:	add	x3, x3, #0x0
  74:	mov	w2, #0x4f                  	// #79
  78:	bl	0 <__assert_fail>

CoroSplit.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>:
       0:	sub	sp, sp, #0x20
       4:	stp	x29, x30, [sp, #16]
       8:	add	x29, sp, #0x10
       c:	str	x0, [sp, #8]
      10:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
      14:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
      18:	add	x0, x0, #0x0
      1c:	add	x1, x1, #0x0
      20:	add	x2, sp, #0x8
      24:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
      28:	ldp	x29, x30, [sp, #16]
      2c:	add	sp, sp, #0x20
      30:	ret

0000000000000034 <_ZL33initializeCoroSplitLegacyPassOnceRN4llvm12PassRegistryE>:
      34:	stp	x29, x30, [sp, #-32]!
      38:	stp	x20, x19, [sp, #16]
      3c:	mov	x29, sp
      40:	mov	x19, x0
      44:	bl	0 <_ZN4llvm34initializeCallGraphWrapperPassPassERNS_12PassRegistryE>
      48:	mov	w0, #0x50                  	// #80
      4c:	bl	0 <_Znwm>
      50:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
      54:	add	x8, x8, #0x0
      58:	mov	w9, #0x41                  	// #65
      5c:	adrp	x10, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
      60:	add	x10, x10, #0x0
      64:	stp	x8, x9, [x0]
      68:	mov	w8, #0xa                   	// #10
      6c:	stp	x10, x8, [x0, #16]
      70:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
      74:	add	x8, x8, #0x0
      78:	str	x8, [x0, #32]
      7c:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
      80:	mov	x20, x0
      84:	add	x8, x8, #0x0
      88:	strh	wzr, [x0, #40]
      8c:	strb	wzr, [x0, #42]
      90:	stp	xzr, xzr, [x0, #48]
      94:	stp	xzr, x8, [x0, #64]
      98:	mov	w2, #0x1                   	// #1
      9c:	mov	x0, x19
      a0:	mov	x1, x20
      a4:	bl	0 <_ZN4llvm12PassRegistry12registerPassERKNS_8PassInfoEb>
      a8:	mov	x0, x20
      ac:	ldp	x20, x19, [sp, #16]
      b0:	ldp	x29, x30, [sp], #32
      b4:	ret

00000000000000b8 <_ZN4llvm25createCoroSplitLegacyPassEv>:
      b8:	stp	x29, x30, [sp, #-32]!
      bc:	str	x19, [sp, #16]
      c0:	mov	x29, sp
      c4:	mov	w0, #0x20                  	// #32
      c8:	bl	0 <_Znwm>
      cc:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
      d0:	adrp	x10, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
      d4:	add	x8, x8, #0x0
      d8:	mov	w9, #0x3                   	// #3
      dc:	add	x10, x10, #0x0
      e0:	mov	x19, x0
      e4:	stp	xzr, x8, [x0, #8]
      e8:	str	w9, [x0, #24]
      ec:	str	x10, [x0]
      f0:	strb	wzr, [x0, #28]
      f4:	bl	0 <_ZN4llvm12PassRegistry15getPassRegistryEv>
      f8:	str	x0, [x29, #24]
      fc:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     100:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     104:	add	x0, x0, #0x0
     108:	add	x1, x1, #0x0
     10c:	add	x2, x29, #0x18
     110:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     114:	mov	x0, x19
     118:	ldr	x19, [sp, #16]
     11c:	ldp	x29, x30, [sp], #32
     120:	ret

0000000000000124 <_ZN4llvm15callDefaultCtorIN12_GLOBAL__N_115CoroSplitLegacyEEEPNS_4PassEv>:
     124:	stp	x29, x30, [sp, #-32]!
     128:	str	x19, [sp, #16]
     12c:	mov	x29, sp
     130:	mov	w0, #0x20                  	// #32
     134:	bl	0 <_Znwm>
     138:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     13c:	adrp	x10, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     140:	add	x8, x8, #0x0
     144:	mov	w9, #0x3                   	// #3
     148:	add	x10, x10, #0x0
     14c:	mov	x19, x0
     150:	stp	xzr, x8, [x0, #8]
     154:	str	w9, [x0, #24]
     158:	str	x10, [x0]
     15c:	strb	wzr, [x0, #28]
     160:	bl	0 <_ZN4llvm12PassRegistry15getPassRegistryEv>
     164:	str	x0, [x29, #24]
     168:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     16c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     170:	add	x0, x0, #0x0
     174:	add	x1, x1, #0x0
     178:	add	x2, x29, #0x18
     17c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     180:	mov	x0, x19
     184:	ldr	x19, [sp, #16]
     188:	ldp	x29, x30, [sp], #32
     18c:	ret

0000000000000190 <_ZN12_GLOBAL__N_115CoroSplitLegacyD0Ev>:
     190:	stp	x29, x30, [sp, #-32]!
     194:	str	x19, [sp, #16]
     198:	mov	x29, sp
     19c:	mov	x19, x0
     1a0:	bl	0 <_ZN4llvm4PassD2Ev>
     1a4:	mov	x0, x19
     1a8:	ldr	x19, [sp, #16]
     1ac:	ldp	x29, x30, [sp], #32
     1b0:	b	0 <_ZdlPv>

00000000000001b4 <_ZNK12_GLOBAL__N_115CoroSplitLegacy11getPassNameEv>:
     1b4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     1b8:	add	x0, x0, #0x0
     1bc:	mov	w1, #0x13                  	// #19
     1c0:	ret

00000000000001c4 <_ZNK12_GLOBAL__N_115CoroSplitLegacy16getAnalysisUsageERN4llvm13AnalysisUsageE>:
     1c4:	b	0 <_ZNK4llvm16CallGraphSCCPass16getAnalysisUsageERNS_13AnalysisUsageE>

00000000000001c8 <_ZN12_GLOBAL__N_115CoroSplitLegacy16doInitializationERN4llvm9CallGraphE>:
     1c8:	sub	sp, sp, #0x40
     1cc:	stp	x29, x30, [sp, #32]
     1d0:	str	x19, [sp, #48]
     1d4:	add	x29, sp, #0x20
     1d8:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     1dc:	add	x8, x8, #0x0
     1e0:	mov	x19, x0
     1e4:	ldp	q0, q1, [x8]
     1e8:	ldr	x0, [x1]
     1ec:	mov	x1, sp
     1f0:	mov	w2, #0x2                   	// #2
     1f4:	stp	q0, q1, [sp]
     1f8:	bl	0 <_ZN4llvm4coro18declaresIntrinsicsERKNS_6ModuleESt16initializer_listINS_9StringRefEE>
     1fc:	and	w8, w0, #0x1
     200:	strb	w8, [x19, #28]
     204:	ldr	x19, [sp, #48]
     208:	ldp	x29, x30, [sp, #32]
     20c:	mov	w0, wzr
     210:	add	sp, sp, #0x40
     214:	ret

0000000000000218 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE>:
     218:	sub	sp, sp, #0x130
     21c:	stp	x29, x30, [sp, #208]
     220:	stp	x28, x27, [sp, #224]
     224:	stp	x26, x25, [sp, #240]
     228:	stp	x24, x23, [sp, #256]
     22c:	stp	x22, x21, [sp, #272]
     230:	stp	x20, x19, [sp, #288]
     234:	add	x29, sp, #0xd0
     238:	ldrb	w8, [x0, #28]
     23c:	cbz	w8, 27c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x64>
     240:	ldr	x8, [x1]
     244:	mov	x21, x0
     248:	mov	x23, x1
     24c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     250:	ldr	x0, [x8]
     254:	add	x1, x1, #0x0
     258:	mov	w2, #0x18                  	// #24
     25c:	bl	0 <_ZNK4llvm6Module11getFunctionENS_9StringRefE>
     260:	cbz	x0, 284 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x6c>
     264:	mov	x20, x0
     268:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
     26c:	ldr	x8, [x20, #8]
     270:	cmp	x8, #0x0
     274:	csel	x24, xzr, x20, eq  // eq = none
     278:	b	288 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x70>
     27c:	mov	w19, wzr
     280:	b	768 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x550>
     284:	mov	x24, xzr
     288:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     28c:	ldr	d0, [x8]
     290:	add	x8, sp, #0x28
     294:	add	x8, x8, #0x10
     298:	str	x8, [sp, #40]
     29c:	str	d0, [sp, #48]
     2a0:	mov	x22, x23
     2a4:	ldr	x19, [x22, #16]!
     2a8:	str	x23, [sp, #16]
     2ac:	ldr	x20, [x22, #8]
     2b0:	cmp	x19, x20
     2b4:	b.eq	314 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xfc>  // b.none
     2b8:	adrp	x23, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     2bc:	add	x23, x23, #0x0
     2c0:	ldr	x8, [x19]
     2c4:	ldr	x8, [x8]
     2c8:	stur	x8, [x29, #-88]
     2cc:	cbz	x8, 2f0 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xd8>
     2d0:	add	x0, x8, #0x70
     2d4:	mov	w2, #0x12                  	// #18
     2d8:	mov	x1, x23
     2dc:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9StringRefE>
     2e0:	tbz	w0, #0, 2f0 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xd8>
     2e4:	add	x0, sp, #0x28
     2e8:	sub	x1, x29, #0x58
     2ec:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     2f0:	add	x19, x19, #0x8
     2f4:	cmp	x20, x19
     2f8:	b.ne	2c0 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xa8>  // b.any
     2fc:	ldr	w8, [sp, #48]
     300:	ldr	x23, [sp, #16]
     304:	cmp	w8, #0x0
     308:	cset	w8, ne  // ne = any
     30c:	cbz	x24, 31c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x104>
     310:	b	328 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x110>
     314:	mov	w8, wzr
     318:	cbnz	x24, 328 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x110>
     31c:	tbnz	w8, #0, 328 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x110>
     320:	mov	w19, wzr
     324:	b	750 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x538>
     328:	mov	x0, x21
     32c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     330:	ldr	w8, [sp, #48]
     334:	ldr	x20, [x0, #32]
     338:	cbz	w8, 740 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x528>
     33c:	str	x24, [sp]
     340:	ldr	x24, [x20]
     344:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     348:	add	x1, x1, #0x0
     34c:	mov	w2, #0x13                  	// #19
     350:	mov	x0, x24
     354:	bl	0 <_ZNK4llvm6Module11getFunctionENS_9StringRefE>
     358:	cbnz	x0, 488 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x270>
     35c:	ldr	x23, [x24]
     360:	mov	x0, x23
     364:	bl	0 <_ZN4llvm4Type9getVoidTyERNS_11LLVMContextE>
     368:	mov	x25, x0
     36c:	mov	x0, x23
     370:	mov	w1, wzr
     374:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
     378:	stur	x0, [x29, #-88]
     37c:	sub	x1, x29, #0x58
     380:	mov	w2, #0x1                   	// #1
     384:	mov	x0, x25
     388:	mov	w3, wzr
     38c:	bl	0 <_ZN4llvm12FunctionType3getEPNS_4TypeENS_8ArrayRefIS2_EEb>
     390:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     394:	mov	x25, x0
     398:	add	x1, x1, #0x0
     39c:	sub	x0, x29, #0x58
     3a0:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     3a4:	mov	w0, #0x78                  	// #120
     3a8:	bl	0 <_ZN4llvm4UsernwEm>
     3ac:	sub	x4, x29, #0x58
     3b0:	mov	w2, #0x8                   	// #8
     3b4:	mov	w3, #0xffffffff            	// #-1
     3b8:	mov	x1, x25
     3bc:	mov	x5, x24
     3c0:	mov	x26, x0
     3c4:	bl	0 <_ZN4llvm8FunctionC1EPNS_12FunctionTypeENS_11GlobalValue12LinkageTypesEjRKNS_5TwineEPNS_6ModuleE>
     3c8:	mov	w1, #0xffffffff            	// #-1
     3cc:	mov	w2, #0x3                   	// #3
     3d0:	mov	x0, x26
     3d4:	bl	0 <_ZN4llvm8Function12addAttributeEjNS_9Attribute8AttrKindE>
     3d8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     3dc:	add	x1, x1, #0x0
     3e0:	sub	x0, x29, #0x58
     3e4:	sub	x19, x29, #0x58
     3e8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     3ec:	mov	w0, #0x40                  	// #64
     3f0:	bl	0 <_Znwm>
     3f4:	sub	x2, x29, #0x58
     3f8:	mov	x1, x23
     3fc:	mov	x3, x26
     400:	mov	x4, xzr
     404:	mov	x24, x0
     408:	bl	0 <_ZN4llvm10BasicBlockC1ERNS_11LLVMContextERKNS_5TwineEPNS_8FunctionEPS0_>
     40c:	mov	w0, #0x38                  	// #56
     410:	mov	w1, wzr
     414:	bl	0 <_ZN4llvm4UsernwEmj>
     418:	mov	x1, x23
     41c:	ldr	x23, [sp, #16]
     420:	mov	x2, x24
     424:	bl	0 <_ZN4llvm10ReturnInstC1ERNS_11LLVMContextEPNS_10BasicBlockE>
     428:	mov	x0, x20
     42c:	mov	x1, x26
     430:	bl	0 <_ZN4llvm9CallGraph19getOrInsertFunctionEPKNS_8FunctionE>
     434:	str	x0, [sp, #88]
     438:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     43c:	ldr	d0, [x8]
     440:	ldp	x1, x2, [x23, #16]
     444:	add	x19, x19, #0x10
     448:	sub	x0, x29, #0x58
     44c:	stur	x19, [x29, #-88]
     450:	stur	d0, [x29, #-80]
     454:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     458:	sub	x0, x29, #0x58
     45c:	add	x1, sp, #0x58
     460:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     464:	ldur	x1, [x29, #-88]
     468:	ldur	w8, [x29, #-80]
     46c:	mov	x0, x22
     470:	add	x2, x1, x8, lsl #3
     474:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     478:	ldur	x0, [x29, #-88]
     47c:	cmp	x0, x19
     480:	b.eq	488 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x270>  // b.none
     484:	bl	0 <free>
     488:	ldr	w8, [sp, #48]
     48c:	cbz	w8, 728 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x510>
     490:	add	x9, x20, #0x8
     494:	ldr	x26, [sp, #40]
     498:	str	x9, [sp, #8]
     49c:	adrp	x21, 0 <_ZN4llvm9DebugFlagE>
     4a0:	ldr	x21, [x21]
     4a4:	adrp	x19, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     4a8:	add	x22, x20, #0x10
     4ac:	add	x19, x19, #0x0
     4b0:	add	x8, x26, x8, lsl #3
     4b4:	str	x8, [sp, #24]
     4b8:	ldr	x24, [x26]
     4bc:	mov	w1, #0xffffffff            	// #-1
     4c0:	mov	w3, #0x12                  	// #18
     4c4:	mov	x2, x19
     4c8:	add	x0, x24, #0x70
     4cc:	bl	0 <_ZNK4llvm13AttributeList12getAttributeEjNS_9StringRefE>
     4d0:	str	x0, [sp, #32]
     4d4:	add	x0, sp, #0x20
     4d8:	bl	0 <_ZNK4llvm9Attribute16getValueAsStringEv>
     4dc:	ldrb	w8, [x21]
     4e0:	mov	x25, x0
     4e4:	mov	x27, x1
     4e8:	cbz	w8, 560 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x348>
     4ec:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     4f0:	add	x0, x0, #0x0
     4f4:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     4f8:	tbz	w0, #0, 560 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x348>
     4fc:	bl	0 <_ZN4llvm4dbgsEv>
     500:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     504:	mov	w2, #0x21                  	// #33
     508:	add	x1, x1, #0x0
     50c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     510:	mov	x28, x0
     514:	mov	x0, x24
     518:	bl	0 <_ZNK4llvm5Value7getNameEv>
     51c:	mov	x2, x0
     520:	mov	x3, x1
     524:	mov	x0, x28
     528:	mov	x1, x2
     52c:	mov	x2, x3
     530:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     534:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     538:	mov	w2, #0x9                   	// #9
     53c:	add	x1, x1, #0x0
     540:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     544:	mov	x1, x25
     548:	mov	x2, x27
     54c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     550:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     554:	mov	w2, #0x1                   	// #1
     558:	add	x1, x1, #0x0
     55c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     560:	cmp	x27, #0x1
     564:	b.ne	6dc <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x4c4>  // b.any
     568:	ldrb	w8, [x25]
     56c:	cmp	w8, #0x30
     570:	b.ne	6dc <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x4c4>  // b.any
     574:	ldr	x27, [x24, #40]
     578:	mov	x0, x24
     57c:	mov	x21, x22
     580:	mov	x22, x20
     584:	bl	0 <_ZNK4llvm8Function10getContextEv>
     588:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     58c:	mov	x25, x0
     590:	mov	w2, #0x13                  	// #19
     594:	mov	x0, x27
     598:	add	x1, x1, #0x0
     59c:	bl	0 <_ZNK4llvm6Module11getFunctionENS_9StringRefE>
     5a0:	cbz	x0, 7ac <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x594>
     5a4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     5a8:	mov	w2, #0x12                  	// #18
     5ac:	mov	w4, #0x1                   	// #1
     5b0:	mov	x0, x24
     5b4:	mov	x1, x19
     5b8:	add	x3, x3, #0x0
     5bc:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     5c0:	sub	x0, x29, #0x58
     5c4:	mov	x1, x27
     5c8:	bl	0 <_ZN4llvm4coro11LowererBaseC1ERNS_6ModuleE>
     5cc:	add	x0, x24, #0x48
     5d0:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     5d4:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
     5d8:	mov	x27, x0
     5dc:	mov	x0, x25
     5e0:	mov	w1, wzr
     5e4:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
     5e8:	bl	0 <_ZN4llvm19ConstantPointerNull3getEPNS_11PointerTypeE>
     5ec:	mov	x28, x0
     5f0:	sub	x0, x29, #0x58
     5f4:	mov	w2, #0xffffffff            	// #-1
     5f8:	mov	x1, x28
     5fc:	mov	x3, x27
     600:	bl	0 <_ZN4llvm4coro11LowererBase13makeSubFnCallEPNS_5ValueEiPNS_11InstructionE>
     604:	mov	x23, x0
     608:	mov	x0, x25
     60c:	bl	0 <_ZN4llvm4Type9getVoidTyERNS_11LLVMContextE>
     610:	mov	x20, x0
     614:	mov	x0, x25
     618:	mov	w1, wzr
     61c:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
     620:	str	x0, [sp, #88]
     624:	add	x1, sp, #0x58
     628:	mov	w2, #0x1                   	// #1
     62c:	mov	x0, x20
     630:	mov	w3, wzr
     634:	bl	0 <_ZN4llvm12FunctionType3getEPNS_4TypeENS_8ArrayRefIS2_EEb>
     638:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     63c:	mov	x20, x0
     640:	add	x0, sp, #0x58
     644:	add	x1, x1, #0x0
     648:	stur	x28, [x29, #-96]
     64c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     650:	sub	x2, x29, #0x60
     654:	add	x4, sp, #0x58
     658:	mov	w3, #0x1                   	// #1
     65c:	mov	x0, x20
     660:	mov	x1, x23
     664:	mov	x5, x27
     668:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     66c:	ldp	x8, x23, [sp, #8]
     670:	mov	x20, x22
     674:	mov	x22, x21
     678:	adrp	x21, 0 <_ZN4llvm9DebugFlagE>
     67c:	ldr	x9, [x8, #16]
     680:	ldr	x21, [x21]
     684:	cbz	x9, 78c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x574>
     688:	mov	x1, x0
     68c:	mov	x8, x22
     690:	ldr	x10, [x9, #32]
     694:	add	x11, x9, #0x18
     698:	add	x12, x9, #0x10
     69c:	cmp	x10, x24
     6a0:	csel	x8, x8, x9, cc  // cc = lo, ul, last
     6a4:	csel	x9, x11, x12, cc  // cc = lo, ul, last
     6a8:	ldr	x9, [x9]
     6ac:	cbnz	x9, 690 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x478>
     6b0:	cmp	x8, x22
     6b4:	b.eq	78c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x574>  // b.none
     6b8:	ldr	x9, [x8, #32]
     6bc:	cmp	x9, x24
     6c0:	csel	x8, x22, x8, hi  // hi = pmore
     6c4:	cmp	x8, x22
     6c8:	b.eq	78c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x574>  // b.none
     6cc:	ldr	x0, [x8, #40]
     6d0:	ldr	x2, [x20, #64]
     6d4:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     6d8:	b	718 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x500>
     6dc:	ldr	x8, [x24, #112]
     6e0:	mov	x0, x24
     6e4:	stur	x8, [x29, #-88]
     6e8:	bl	0 <_ZNK4llvm8Function10getContextEv>
     6ec:	mov	x1, x0
     6f0:	sub	x0, x29, #0x58
     6f4:	mov	w2, #0xffffffff            	// #-1
     6f8:	mov	w4, #0x12                  	// #18
     6fc:	mov	x3, x19
     700:	bl	0 <_ZNK4llvm13AttributeList15removeAttributeERNS_11LLVMContextEjNS_9StringRefE>
     704:	str	x0, [x24, #112]
     708:	mov	x0, x24
     70c:	mov	x1, x20
     710:	mov	x2, x23
     714:	bl	b18 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE>
     718:	ldr	x8, [sp, #24]
     71c:	add	x26, x26, #0x8
     720:	cmp	x26, x8
     724:	b.ne	4b8 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x2a0>  // b.any
     728:	ldr	x0, [sp]
     72c:	cbz	x0, 738 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x520>
     730:	mov	x1, x20
     734:	bl	7cc <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE>
     738:	mov	w19, #0x1                   	// #1
     73c:	b	750 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x538>
     740:	mov	x0, x24
     744:	mov	x1, x20
     748:	bl	7cc <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE>
     74c:	mov	w19, w0
     750:	ldr	x0, [sp, #40]
     754:	add	x8, sp, #0x28
     758:	add	x8, x8, #0x10
     75c:	cmp	x0, x8
     760:	b.eq	768 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x550>  // b.none
     764:	bl	0 <free>
     768:	and	w0, w19, #0x1
     76c:	ldp	x20, x19, [sp, #288]
     770:	ldp	x22, x21, [sp, #272]
     774:	ldp	x24, x23, [sp, #256]
     778:	ldp	x26, x25, [sp, #240]
     77c:	ldp	x28, x27, [sp, #224]
     780:	ldp	x29, x30, [sp, #208]
     784:	add	sp, sp, #0x130
     788:	ret
     78c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     790:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     794:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     798:	add	x0, x0, #0x0
     79c:	add	x1, x1, #0x0
     7a0:	add	x3, x3, #0x0
     7a4:	mov	w2, #0x82                  	// #130
     7a8:	bl	0 <__assert_fail>
     7ac:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     7b0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     7b4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     7b8:	add	x0, x0, #0x0
     7bc:	add	x1, x1, #0x0
     7c0:	add	x3, x3, #0x0
     7c4:	mov	w2, #0x579                 	// #1401
     7c8:	bl	0 <__assert_fail>

00000000000007cc <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE>:
     7cc:	sub	sp, sp, #0x80
     7d0:	stp	x29, x30, [sp, #32]
     7d4:	stp	x28, x27, [sp, #48]
     7d8:	stp	x26, x25, [sp, #64]
     7dc:	stp	x24, x23, [sp, #80]
     7e0:	stp	x22, x21, [sp, #96]
     7e4:	stp	x20, x19, [sp, #112]
     7e8:	add	x29, sp, #0x20
     7ec:	mov	x19, x1
     7f0:	mov	x20, x0
     7f4:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
     7f8:	ldr	x27, [x20, #8]
     7fc:	cbz	x27, a24 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x258>
     800:	add	x8, x19, #0x8
     804:	str	x8, [sp, #16]
     808:	add	x8, x19, #0x10
     80c:	str	x8, [sp, #8]
     810:	mov	x0, x27
     814:	ldr	x27, [x27, #8]
     818:	bl	0 <_ZNK4llvm3Use7getUserEv>
     81c:	cbz	x0, ac4 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x2f8>
     820:	ldrb	w8, [x0, #16]
     824:	mov	x20, x0
     828:	cmp	w8, #0x50
     82c:	b.ne	ae0 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x314>  // b.any
     830:	mov	x0, x20
     834:	mov	w1, wzr
     838:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     83c:	mov	x19, x0
     840:	bl	0 <_ZNK4llvm5Value17stripPointerCastsEv>
     844:	cbz	x0, afc <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x330>
     848:	ldrb	w8, [x0, #16]
     84c:	mov	x21, x0
     850:	cbz	w8, 860 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x94>
     854:	mov	x23, xzr
     858:	mov	x22, xzr
     85c:	b	900 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x134>
     860:	mov	x0, x20
     864:	bl	0 <_ZNK4llvm11Instruction11getFunctionEv>
     868:	ldp	x14, x8, [sp, #8]
     86c:	ldr	x8, [x8, #16]
     870:	cbz	x8, aa4 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x2d8>
     874:	mov	x10, x8
     878:	mov	x9, x14
     87c:	ldr	x11, [x10, #32]
     880:	add	x12, x10, #0x18
     884:	add	x13, x10, #0x10
     888:	cmp	x11, x0
     88c:	csel	x9, x9, x10, cc  // cc = lo, ul, last
     890:	csel	x10, x12, x13, cc  // cc = lo, ul, last
     894:	ldr	x10, [x10]
     898:	cbnz	x10, 87c <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0xb0>
     89c:	cmp	x9, x14
     8a0:	b.eq	aa4 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x2d8>  // b.none
     8a4:	ldr	x10, [x9, #32]
     8a8:	cmp	x10, x0
     8ac:	csel	x9, x14, x9, hi  // hi = pmore
     8b0:	cmp	x9, x14
     8b4:	b.eq	aa4 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x2d8>  // b.none
     8b8:	ldr	x22, [x9, #40]
     8bc:	mov	x9, x14
     8c0:	ldr	x10, [x8, #32]
     8c4:	add	x11, x8, #0x18
     8c8:	add	x12, x8, #0x10
     8cc:	cmp	x10, x21
     8d0:	csel	x9, x9, x8, cc  // cc = lo, ul, last
     8d4:	csel	x8, x11, x12, cc  // cc = lo, ul, last
     8d8:	ldr	x8, [x8]
     8dc:	cbnz	x8, 8c0 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0xf4>
     8e0:	cmp	x9, x14
     8e4:	b.eq	aa4 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x2d8>  // b.none
     8e8:	ldr	x8, [x9, #32]
     8ec:	cmp	x8, x21
     8f0:	csel	x8, x14, x9, hi  // hi = pmore
     8f4:	cmp	x8, x14
     8f8:	b.eq	aa4 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x2d8>  // b.none
     8fc:	ldr	x23, [x8, #40]
     900:	mov	x0, x20
     904:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
     908:	ldr	x28, [x20, #8]
     90c:	cbz	x28, 9cc <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x200>
     910:	mov	x0, x28
     914:	ldr	x28, [x28, #8]
     918:	bl	0 <_ZNK4llvm3Use7getUserEv>
     91c:	cbz	x0, a68 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x29c>
     920:	ldrb	w8, [x0, #16]
     924:	mov	x24, x0
     928:	cmp	w8, #0x49
     92c:	b.ne	90c <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x140>  // b.any
     930:	ldr	x8, [x24]
     934:	ldr	x9, [x21]
     938:	cmp	x8, x9
     93c:	b.ne	90c <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x140>  // b.any
     940:	cbz	x22, 9b4 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x1e8>
     944:	mov	x0, x24
     948:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
     94c:	ldr	x25, [x24, #8]
     950:	cbz	x25, 9b4 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x1e8>
     954:	mov	x0, x25
     958:	bl	0 <_ZNK4llvm3Use7getUserEv>
     95c:	mov	x26, x0
     960:	stur	x0, [x29, #-8]
     964:	sub	x0, x29, #0x8
     968:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     96c:	tbz	w0, #0, 9ac <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x1e0>
     970:	sub	x0, x29, #0x8
     974:	stur	x26, [x29, #-8]
     978:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     97c:	tbz	w0, #0, a48 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x27c>
     980:	cbz	x26, 9ac <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x1e0>
     984:	sub	x8, x26, #0x18
     988:	cmp	x25, x8
     98c:	b.ne	9ac <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x1e0>  // b.any
     990:	mov	x0, x22
     994:	mov	x1, x26
     998:	bl	0 <_ZN4llvm13CallGraphNode17removeCallEdgeForERNS_8CallBaseE>
     99c:	mov	x0, x22
     9a0:	mov	x1, x26
     9a4:	mov	x2, x23
     9a8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     9ac:	ldr	x25, [x25, #8]
     9b0:	cbnz	x25, 954 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x188>
     9b4:	mov	x0, x24
     9b8:	mov	x1, x21
     9bc:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
     9c0:	mov	x0, x24
     9c4:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
     9c8:	b	90c <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x140>
     9cc:	mov	x0, x20
     9d0:	mov	x1, x19
     9d4:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
     9d8:	mov	x0, x20
     9dc:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
     9e0:	cbz	x19, a84 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x2b8>
     9e4:	ldrb	w8, [x19, #16]
     9e8:	cmp	w8, #0x49
     9ec:	b.ne	a18 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x24c>  // b.any
     9f0:	mov	x0, x19
     9f4:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
     9f8:	ldr	x8, [x19, #8]
     9fc:	cbnz	x8, a18 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x24c>
     a00:	ldur	x20, [x19, #-24]
     a04:	mov	x0, x19
     a08:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
     a0c:	mov	x19, x20
     a10:	cbnz	x20, 9e4 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x218>
     a14:	b	a84 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x2b8>
     a18:	cbnz	x27, 810 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x44>
     a1c:	mov	w0, #0x1                   	// #1
     a20:	b	a28 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x25c>
     a24:	mov	w0, wzr
     a28:	ldp	x20, x19, [sp, #112]
     a2c:	ldp	x22, x21, [sp, #96]
     a30:	ldp	x24, x23, [sp, #80]
     a34:	ldp	x26, x25, [sp, #64]
     a38:	ldp	x28, x27, [sp, #48]
     a3c:	ldp	x29, x30, [sp, #32]
     a40:	add	sp, sp, #0x80
     a44:	ret
     a48:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     a4c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     a50:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     a54:	add	x0, x0, #0x0
     a58:	add	x1, x1, #0x0
     a5c:	add	x3, x3, #0x0
     a60:	mov	w2, #0x108                 	// #264
     a64:	bl	0 <__assert_fail>
     a68:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     a6c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     a70:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     a74:	add	x0, x0, #0x0
     a78:	add	x1, x1, #0x0
     a7c:	add	x3, x3, #0x0
     a80:	b	a9c <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x2d0>
     a84:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     a88:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     a8c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     a90:	add	x0, x0, #0x0
     a94:	add	x1, x1, #0x0
     a98:	add	x3, x3, #0x0
     a9c:	mov	w2, #0x69                  	// #105
     aa0:	bl	0 <__assert_fail>
     aa4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     aa8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     aac:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     ab0:	add	x0, x0, #0x0
     ab4:	add	x1, x1, #0x0
     ab8:	add	x3, x3, #0x0
     abc:	mov	w2, #0x82                  	// #130
     ac0:	bl	0 <__assert_fail>
     ac4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     ac8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     acc:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     ad0:	add	x0, x0, #0x0
     ad4:	add	x1, x1, #0x0
     ad8:	add	x3, x3, #0x0
     adc:	b	a9c <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x2d0>
     ae0:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     ae4:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     ae8:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     aec:	add	x0, x0, #0x0
     af0:	add	x1, x1, #0x0
     af4:	add	x3, x3, #0x0
     af8:	b	a60 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x294>
     afc:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     b00:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     b04:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     b08:	add	x0, x0, #0x0
     b0c:	add	x1, x1, #0x0
     b10:	add	x3, x3, #0x0
     b14:	b	a9c <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x2d0>

0000000000000b18 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE>:
     b18:	str	d10, [sp, #-128]!
     b1c:	stp	d9, d8, [sp, #16]
     b20:	stp	x29, x30, [sp, #32]
     b24:	stp	x28, x27, [sp, #48]
     b28:	stp	x26, x25, [sp, #64]
     b2c:	stp	x24, x23, [sp, #80]
     b30:	stp	x22, x21, [sp, #96]
     b34:	stp	x20, x19, [sp, #112]
     b38:	mov	x29, sp
     b3c:	sub	sp, sp, #0x330
     b40:	mov	x21, x0
     b44:	add	x0, sp, #0x178
     b48:	mov	x19, x2
     b4c:	mov	x20, x1
     b50:	bl	0 <_ZN4llvm21PrettyStackTraceEntryC2Ev>
     b54:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     b58:	add	x8, x8, #0x0
     b5c:	mov	x0, x21
     b60:	mov	x1, xzr
     b64:	mov	x2, xzr
     b68:	str	x8, [sp, #376]
     b6c:	str	x21, [sp, #392]
     b70:	bl	0 <_ZN4llvm23removeUnreachableBlocksERNS_8FunctionEPNS_14DomTreeUpdaterEPNS_16MemorySSAUpdaterE>
     b74:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     b78:	adrp	x9, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     b7c:	add	x22, sp, #0x88
     b80:	ldr	d8, [x8]
     b84:	ldr	d0, [x9]
     b88:	add	x8, x22, #0x18
     b8c:	str	x8, [sp, #144]
     b90:	add	x8, x22, #0x68
     b94:	add	x9, x22, #0x48
     b98:	str	x8, [sp, #224]
     b9c:	add	x8, x22, #0x98
     ba0:	add	x0, sp, #0x88
     ba4:	mov	x1, x21
     ba8:	add	x25, x22, #0x58
     bac:	str	x9, [sp, #192]
     bb0:	str	x8, [sp, #272]
     bb4:	str	d8, [sp, #152]
     bb8:	str	d0, [sp, #200]
     bbc:	str	d8, [sp, #232]
     bc0:	str	d0, [sp, #280]
     bc4:	str	x21, [x29, #8]
     bc8:	bl	0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE>
     bcc:	ldr	x8, [sp, #136]
     bd0:	cbz	x8, 280c <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1cf4>
     bd4:	ldr	w8, [sp, #304]
     bd8:	stp	x20, x19, [sp, #40]
     bdc:	str	x25, [sp, #56]
     be0:	cbnz	w8, 1090 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x578>
     be4:	ldr	w27, [sp, #232]
     be8:	cbz	w27, 1090 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x578>
     bec:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     bf0:	adrp	x9, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     bf4:	sub	x22, x29, #0xf0
     bf8:	ldr	d9, [x8]
     bfc:	ldr	d10, [x9]
     c00:	add	x8, x22, #0x28
     c04:	str	x8, [sp, #80]
     c08:	add	x8, sp, #0x190
     c0c:	mov	x23, xzr
     c10:	add	x28, x8, #0x10
     c14:	ldr	x8, [sp, #224]
     c18:	sub	x0, x29, #0xf0
     c1c:	ldr	x25, [x8, x23, lsl #3]
     c20:	stur	x25, [x29, #-240]
     c24:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     c28:	tbz	w0, #0, 2a04 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1eec>
     c2c:	ldr	x8, [x25, #40]
     c30:	ldr	x20, [sp, #136]
     c34:	mov	x1, x25
     c38:	add	x0, x8, #0x28
     c3c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     c40:	cbnz	x0, c54 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x13c>
     c44:	ldr	x0, [x25, #40]
     c48:	bl	0 <_ZNK4llvm10BasicBlock20getSinglePredecessorEv>
     c4c:	cbz	x0, f38 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x420>
     c50:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
     c54:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     c58:	cmp	x0, #0x8
     c5c:	stur	x0, [x29, #-256]
     c60:	b.cc	f38 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x420>  // b.lo, b.ul, b.last
     c64:	mov	x19, x0
     c68:	sub	x0, x29, #0x100
     c6c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     c70:	bl	0 <_ZNK4llvm5Value17stripPointerCastsEv>
     c74:	cbz	x0, 2abc <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1fa4>
     c78:	ldrb	w8, [x0, #16]
     c7c:	mov	x24, x0
     c80:	cmp	w8, #0x50
     c84:	b.ne	f38 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x420>  // b.any
     c88:	ldur	x8, [x24, #-24]
     c8c:	cbz	x8, f38 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x420>
     c90:	ldrb	w9, [x8, #16]
     c94:	cbnz	w9, f38 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x420>
     c98:	ldrb	w9, [x8, #33]
     c9c:	tbz	w9, #5, f38 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x420>
     ca0:	ldr	w8, [x8, #36]
     ca4:	cmp	w8, #0x22
     ca8:	b.ne	f38 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x420>  // b.any
     cac:	mov	x0, x24
     cb0:	mov	w1, wzr
     cb4:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     cb8:	cmp	x0, x20
     cbc:	b.ne	f38 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x420>  // b.any
     cc0:	mov	x0, x25
     cc4:	and	x26, x19, #0xfffffffffffffff8
     cc8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     ccc:	ldr	x20, [x0, #40]
     cd0:	ldr	x21, [x26, #40]
     cd4:	mov	x19, x0
     cd8:	mov	x1, x19
     cdc:	add	x0, x20, #0x28
     ce0:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     ce4:	cmp	x20, x21
     ce8:	b.eq	f2c <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x414>  // b.none
     cec:	mov	x1, xzr
     cf0:	bl	3100 <_ZL22hasCallsInBlockBetweenPN4llvm11InstructionES1_>
     cf4:	tbnz	w0, #0, f38 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x420>
     cf8:	mov	x0, x21
     cfc:	bl	0 <_ZNK4llvm10BasicBlock14getFirstNonPHIEv>
     d00:	mov	x1, x26
     d04:	bl	3100 <_ZL22hasCallsInBlockBetweenPN4llvm11InstructionES1_>
     d08:	tbnz	w0, #0, f38 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x420>
     d0c:	ldr	x8, [sp, #80]
     d10:	sub	x0, x29, #0xf0
     d14:	mov	x1, x20
     d18:	str	x21, [sp, #496]
     d1c:	stp	xzr, x8, [x29, #-240]
     d20:	stur	x8, [x29, #-224]
     d24:	add	x8, sp, #0x58
     d28:	stur	d9, [x29, #-216]
     d2c:	stur	wzr, [x29, #-208]
     d30:	str	x28, [sp, #400]
     d34:	str	d10, [sp, #408]
     d38:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     d3c:	add	x0, sp, #0x190
     d40:	add	x1, sp, #0x1f0
     d44:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     d48:	ldr	w8, [sp, #408]
     d4c:	cbz	w8, e50 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x338>
     d50:	add	x0, sp, #0x190
     d54:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     d58:	mov	x21, x0
     d5c:	add	x8, sp, #0x58
     d60:	sub	x0, x29, #0xf0
     d64:	mov	x1, x21
     d68:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     d6c:	mov	x0, x21
     d70:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
     d74:	ldr	x8, [x21, #8]
     d78:	str	x8, [sp, #88]
     d7c:	cbz	x8, db8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x2a0>
     d80:	add	x0, sp, #0x58
     d84:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     d88:	cbz	x0, 2898 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1d80>
     d8c:	ldrb	w8, [x0, #16]
     d90:	cmp	w8, #0x18
     d94:	b.cc	da4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x28c>  // b.lo, b.ul, b.last
     d98:	sub	w8, w8, #0x19
     d9c:	cmp	w8, #0xa
     da0:	b.ls	db4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x29c>  // b.plast
     da4:	ldr	x8, [sp, #88]
     da8:	cbz	x8, 28b8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1da0>
     dac:	ldr	x8, [x8, #8]
     db0:	b	d78 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x260>
     db4:	ldr	x8, [sp, #88]
     db8:	str	x8, [sp, #88]
     dbc:	cbz	x8, d48 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x230>
     dc0:	add	x0, sp, #0x58
     dc4:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     dc8:	cbz	x0, 2898 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1d80>
     dcc:	ldrb	w8, [x0, #16]
     dd0:	cmp	w8, #0x17
     dd4:	b.ls	28f8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1de0>  // b.plast
     dd8:	ldr	x1, [x0, #40]
     ddc:	sub	x0, x29, #0xf0
     de0:	str	x1, [sp, #528]
     de4:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     de8:	cbnz	w0, df8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x2e0>
     dec:	add	x0, sp, #0x190
     df0:	add	x1, sp, #0x210
     df4:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     df8:	ldr	x8, [sp, #88]
     dfc:	cbz	x8, 2918 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1e00>
     e00:	ldr	x8, [x8, #8]
     e04:	str	x8, [sp, #88]
     e08:	cbz	x8, dbc <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x2a4>
     e0c:	add	x0, sp, #0x58
     e10:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     e14:	cbz	x0, 2898 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1d80>
     e18:	ldrb	w8, [x0, #16]
     e1c:	cmp	w8, #0x18
     e20:	b.cc	e30 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x318>  // b.lo, b.ul, b.last
     e24:	sub	w8, w8, #0x19
     e28:	cmp	w8, #0xa
     e2c:	b.ls	e48 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x330>  // b.plast
     e30:	ldr	x8, [sp, #88]
     e34:	cbz	x8, 28b8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1da0>
     e38:	ldr	x8, [x8, #8]
     e3c:	str	x8, [sp, #88]
     e40:	cbnz	x8, e0c <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x2f4>
     e44:	b	d48 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x230>
     e48:	ldr	x8, [sp, #88]
     e4c:	b	dbc <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x2a4>
     e50:	sub	x0, x29, #0xf0
     e54:	mov	x1, x20
     e58:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     e5c:	ldr	x1, [sp, #496]
     e60:	sub	x0, x29, #0xf0
     e64:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     e68:	ldp	x9, x8, [x29, #-232]
     e6c:	add	x20, x22, #0x1c
     e70:	add	x21, x22, #0x18
     e74:	add	x0, sp, #0x58
     e78:	cmp	x8, x9
     e7c:	csel	x9, x20, x21, eq  // eq = none
     e80:	ldr	w9, [x9]
     e84:	add	x9, x8, x9, lsl #3
     e88:	stp	x8, x9, [sp, #88]
     e8c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     e90:	ldp	x10, x8, [x29, #-232]
     e94:	ldur	x9, [x29, #-240]
     e98:	add	x0, sp, #0x210
     e9c:	cmp	x8, x10
     ea0:	stp	x22, x9, [sp, #104]
     ea4:	csel	x9, x20, x21, eq  // eq = none
     ea8:	ldr	w9, [x9]
     eac:	add	x8, x8, x9, lsl #3
     eb0:	str	x8, [sp, #528]
     eb4:	str	x8, [sp, #536]
     eb8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     ebc:	ldr	x8, [sp, #88]
     ec0:	ldr	x9, [sp, #528]
     ec4:	ldur	x10, [x29, #-240]
     ec8:	str	x22, [sp, #544]
     ecc:	cmp	x8, x9
     ed0:	str	x10, [sp, #552]
     ed4:	b.eq	f24 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x40c>  // b.none
     ed8:	add	x0, sp, #0x58
     edc:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     ee0:	bl	0 <_ZNK4llvm10BasicBlock14getFirstNonPHIEv>
     ee4:	mov	x1, xzr
     ee8:	bl	3100 <_ZL22hasCallsInBlockBetweenPN4llvm11InstructionES1_>
     eec:	tbnz	w0, #0, f54 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x43c>
     ef0:	ldp	x8, x9, [sp, #104]
     ef4:	ldr	x8, [x8]
     ef8:	cmp	x8, x9
     efc:	b.ne	2938 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1e20>  // b.any
     f00:	ldr	x8, [sp, #88]
     f04:	add	x0, sp, #0x58
     f08:	add	x8, x8, #0x8
     f0c:	str	x8, [sp, #88]
     f10:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     f14:	ldr	x8, [sp, #88]
     f18:	ldr	x9, [sp, #528]
     f1c:	cmp	x8, x9
     f20:	b.ne	ed8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x3c0>  // b.any
     f24:	mov	w20, wzr
     f28:	b	f58 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x440>
     f2c:	mov	x1, x26
     f30:	bl	3100 <_ZL22hasCallsInBlockBetweenPN4llvm11InstructionES1_>
     f34:	tbz	w0, #0, f7c <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x464>
     f38:	add	x23, x23, #0x1
     f3c:	cmp	x23, x27
     f40:	b.eq	1080 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x568>  // b.none
     f44:	ldr	w8, [sp, #232]
     f48:	cmp	x23, x8
     f4c:	b.cc	c14 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xfc>  // b.lo, b.ul, b.last
     f50:	b	2958 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1e40>
     f54:	mov	w20, #0x1                   	// #1
     f58:	ldr	x0, [sp, #400]
     f5c:	cmp	x0, x28
     f60:	b.eq	f68 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x450>  // b.none
     f64:	bl	0 <free>
     f68:	ldp	x8, x0, [x29, #-232]
     f6c:	cmp	x0, x8
     f70:	b.eq	f78 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x460>  // b.none
     f74:	bl	0 <free>
     f78:	tbnz	w20, #0, f38 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x420>
     f7c:	mov	w1, #0x1                   	// #1
     f80:	mov	x0, x24
     f84:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     f88:	cbz	x0, 29b0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1e98>
     f8c:	ldrb	w8, [x0, #16]
     f90:	mov	x1, x0
     f94:	cmp	w8, #0xd
     f98:	b.ne	2b10 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1ff8>  // b.any
     f9c:	mov	x0, x25
     fa0:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
     fa4:	mov	x0, x25
     fa8:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
     fac:	mov	x0, x19
     fb0:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
     fb4:	cbz	x26, 2b2c <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x2014>
     fb8:	ldrb	w8, [x26, #16]
     fbc:	cmp	w8, #0x1d
     fc0:	b.ne	ff0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x4d8>  // b.any
     fc4:	ldur	x19, [x26, #-72]
     fc8:	cbz	x19, 2bf8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x20e0>
     fcc:	ldrb	w8, [x19, #16]
     fd0:	cmp	w8, #0x12
     fd4:	b.ne	2c18 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x2100>  // b.any
     fd8:	mov	w0, #0x38                  	// #56
     fdc:	mov	w1, #0x1                   	// #1
     fe0:	bl	0 <_ZN4llvm4UsernwEmj>
     fe4:	mov	x1, x19
     fe8:	mov	x2, x26
     fec:	bl	0 <_ZN4llvm10BranchInstC1EPNS_10BasicBlockEPNS_11InstructionE>
     ff0:	sub	x0, x29, #0x100
     ff4:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     ff8:	mov	x19, x0
     ffc:	mov	x0, x26
    1000:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    1004:	cmp	x19, x24
    1008:	b.eq	1030 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x518>  // b.none
    100c:	mov	x0, x19
    1010:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    1014:	ldr	x8, [x19, #8]
    1018:	cbnz	x8, 1030 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x518>
    101c:	ldrb	w8, [x19, #16]
    1020:	cmp	w8, #0x18
    1024:	b.cc	1030 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x518>  // b.lo, b.ul, b.last
    1028:	mov	x0, x19
    102c:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    1030:	mov	x0, x24
    1034:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    1038:	ldr	x8, [x24, #8]
    103c:	cbnz	x8, 1048 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x530>
    1040:	mov	x0, x24
    1044:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    1048:	sub	x27, x27, #0x1
    104c:	cmp	x27, x23
    1050:	b.eq	1084 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x56c>  // b.none
    1054:	ldr	w8, [sp, #232]
    1058:	cmp	x23, x8
    105c:	b.cs	2958 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1e40>  // b.hs, b.nlast
    1060:	cmp	x27, x8
    1064:	b.cs	2958 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1e40>  // b.hs, b.nlast
    1068:	ldr	x8, [sp, #224]
    106c:	ldr	x9, [x8, x27, lsl #3]
    1070:	ldr	x10, [x8, x23, lsl #3]
    1074:	str	x9, [x8, x23, lsl #3]
    1078:	str	x10, [x8, x27, lsl #3]
    107c:	b	c14 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xfc>
    1080:	mov	x23, x27
    1084:	ldr	x0, [sp, #56]
    1088:	mov	x1, x23
    108c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1090:	ldr	x0, [x29, #8]
    1094:	add	x1, sp, #0x88
    1098:	bl	0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE>
    109c:	ldr	w8, [sp, #200]
    10a0:	cbz	w8, 1110 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x5f8>
    10a4:	ldr	x9, [sp, #192]
    10a8:	add	x8, x9, x8, lsl #3
    10ac:	ldur	x19, [x8, #-8]
    10b0:	mov	x0, x19
    10b4:	bl	0 <_ZNK4llvm11Instruction9getModuleEv>
    10b8:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
    10bc:	ldr	x1, [sp, #312]
    10c0:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    10c4:	tst	w1, #0xff
    10c8:	b.ne	2c90 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x2178>  // b.any
    10cc:	mov	x1, x0
    10d0:	ldr	x0, [x19]
    10d4:	mov	w2, wzr
    10d8:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_4TypeEmb>
    10dc:	ldr	w8, [sp, #200]
    10e0:	cbz	w8, 1110 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x5f8>
    10e4:	ldr	x21, [sp, #192]
    10e8:	mov	x19, x0
    10ec:	lsl	x22, x8, #3
    10f0:	ldr	x20, [x21], #8
    10f4:	mov	x1, x19
    10f8:	mov	x0, x20
    10fc:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    1100:	mov	x0, x20
    1104:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    1108:	subs	x22, x22, #0x8
    110c:	b.ne	10f0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x5d8>  // b.any
    1110:	ldr	w8, [sp, #232]
    1114:	add	x9, sp, #0x58
    1118:	add	x19, x9, #0x10
    111c:	str	x19, [sp, #88]
    1120:	str	d8, [sp, #96]
    1124:	cbz	w8, 11a4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x68c>
    1128:	ldr	w8, [sp, #304]
    112c:	sub	w9, w8, #0x1
    1130:	cmp	w9, #0x2
    1134:	b.cs	11ec <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x6d4>  // b.hs, b.nlast
    1138:	ldr	x20, [x29, #8]
    113c:	mov	w1, #0xffffffff            	// #-1
    1140:	mov	w2, #0x1f                  	// #31
    1144:	mov	x0, x20
    1148:	bl	0 <_ZN4llvm8Function15removeAttributeEjNS_9Attribute8AttrKindE>
    114c:	mov	w2, #0x15                  	// #21
    1150:	mov	x0, x20
    1154:	mov	w1, wzr
    1158:	bl	0 <_ZN4llvm8Function15removeAttributeEjNS_9Attribute8AttrKindE>
    115c:	mov	w2, #0x23                  	// #35
    1160:	mov	x0, x20
    1164:	mov	w1, wzr
    1168:	bl	0 <_ZN4llvm8Function15removeAttributeEjNS_9Attribute8AttrKindE>
    116c:	ldr	x0, [sp, #136]
    1170:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1174:	mov	x20, x0
    1178:	stur	x0, [x29, #-240]
    117c:	sub	x0, x29, #0xf0
    1180:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1184:	tbz	w0, #0, 2cc4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x21ac>
    1188:	ldrb	w8, [sp, #368]
    118c:	cbz	w8, 1bcc <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x10b4>
    1190:	mov	w1, #0x2                   	// #2
    1194:	mov	x0, x20
    1198:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    119c:	mov	x23, x0
    11a0:	b	1cd4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x11bc>
    11a4:	ldr	x19, [sp, #136]
    11a8:	mov	x0, x19
    11ac:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    11b0:	mov	x21, x0
    11b4:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    11b8:	ldr	w8, [sp, #304]
    11bc:	sub	w9, w8, #0x1
    11c0:	cmp	w9, #0x2
    11c4:	b.cs	1ad0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xfb8>  // b.hs, b.nlast
    11c8:	ldr	x0, [x19]
    11cc:	bl	0 <_ZN4llvm10UndefValue3getEPNS_4TypeE>
    11d0:	mov	x1, x0
    11d4:	mov	x0, x19
    11d8:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    11dc:	ldp	x26, x25, [sp, #48]
    11e0:	ldr	x27, [sp, #40]
    11e4:	add	x22, sp, #0x88
    11e8:	b	26cc <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1bb4>
    11ec:	cbnz	w8, 2cac <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x2194>
    11f0:	ldr	x19, [x29, #8]
    11f4:	mov	x0, x19
    11f8:	bl	0 <_ZNK4llvm8Function10getContextEv>
    11fc:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1200:	mov	x20, x0
    1204:	add	x1, x1, #0x0
    1208:	sub	x0, x29, #0xf0
    120c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1210:	mov	w0, #0x40                  	// #64
    1214:	bl	0 <_Znwm>
    1218:	sub	x2, x29, #0xf0
    121c:	mov	x1, x20
    1220:	mov	x3, x19
    1224:	mov	x4, xzr
    1228:	mov	x21, x0
    122c:	bl	0 <_ZN4llvm10BasicBlockC1ERNS_11LLVMContextERKNS_5TwineEPNS_8FunctionEPS0_>
    1230:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1234:	add	x1, x1, #0x0
    1238:	sub	x0, x29, #0xf0
    123c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1240:	mov	w0, #0x40                  	// #64
    1244:	bl	0 <_Znwm>
    1248:	sub	x2, x29, #0xf0
    124c:	mov	x1, x20
    1250:	mov	x3, x19
    1254:	mov	x4, xzr
    1258:	mov	x22, x0
    125c:	str	x20, [sp, #80]
    1260:	bl	0 <_ZN4llvm10BasicBlockC1ERNS_11LLVMContextERKNS_5TwineEPNS_8FunctionEPS0_>
    1264:	mov	x0, x21
    1268:	bl	0 <_ZNK4llvm10BasicBlock10getContextEv>
    126c:	ldp	x27, x19, [sp, #312]
    1270:	mov	w8, #0x200                 	// #512
    1274:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1278:	stp	x0, xzr, [x29, #-216]
    127c:	sturh	w8, [x29, #-196]
    1280:	add	x8, x21, #0x28
    1284:	add	x1, x1, #0x0
    1288:	add	x0, sp, #0x190
    128c:	stur	wzr, [x29, #-200]
    1290:	sturb	wzr, [x29, #-194]
    1294:	stp	xzr, xzr, [x29, #-192]
    1298:	stp	xzr, x21, [x29, #-240]
    129c:	str	x21, [sp, #32]
    12a0:	stur	x8, [x29, #-224]
    12a4:	add	x20, sp, #0x190
    12a8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    12ac:	sub	x0, x29, #0xf0
    12b0:	add	x5, sp, #0x190
    12b4:	mov	w4, #0x3                   	// #3
    12b8:	mov	x1, x27
    12bc:	mov	x2, x19
    12c0:	mov	w3, wzr
    12c4:	str	x19, [sp, #72]
    12c8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    12cc:	mov	x19, x0
    12d0:	add	x0, sp, #0x88
    12d4:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    12d8:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    12dc:	mov	x1, x0
    12e0:	add	x3, x3, #0x0
    12e4:	sub	x0, x29, #0xf0
    12e8:	mov	x2, x19
    12ec:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    12f0:	ldr	w3, [sp, #232]
    12f4:	mov	x1, x0
    12f8:	sub	x0, x29, #0xf0
    12fc:	mov	x2, x22
    1300:	mov	x4, xzr
    1304:	mov	x5, xzr
    1308:	str	x22, [sp, #24]
    130c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1310:	ldr	w8, [sp, #232]
    1314:	str	x0, [sp, #336]
    1318:	stur	xzr, [x29, #-24]
    131c:	cbz	w8, 16a4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xb8c>
    1320:	ldr	x22, [sp, #224]
    1324:	mov	x28, x0
    1328:	add	x9, x20, #0x12
    132c:	lsl	x26, x8, #3
    1330:	str	x9, [sp, #64]
    1334:	ldr	x20, [x22]
    1338:	add	x0, sp, #0x190
    133c:	str	x20, [sp, #400]
    1340:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1344:	tbz	w0, #0, 2a04 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1eec>
    1348:	ldur	x19, [x29, #-24]
    134c:	add	x0, sp, #0x88
    1350:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1354:	mov	x1, x19
    1358:	mov	w2, wzr
    135c:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
    1360:	mov	x19, x0
    1364:	mov	x0, x20
    1368:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    136c:	mov	x24, x0
    1370:	sub	x0, x29, #0xf0
    1374:	mov	x1, x24
    1378:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    137c:	mov	x0, x20
    1380:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1384:	tbz	w0, #0, 13f4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x8dc>
    1388:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    138c:	add	x0, sp, #0x190
    1390:	add	x1, x1, #0x0
    1394:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1398:	ldr	x2, [sp, #72]
    139c:	sub	x0, x29, #0xf0
    13a0:	add	x5, sp, #0x190
    13a4:	mov	x1, x27
    13a8:	mov	w3, wzr
    13ac:	mov	w4, wzr
    13b0:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    13b4:	ldr	x8, [x0]
    13b8:	cbz	x8, 2ad8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1fc0>
    13bc:	ldrb	w9, [x8, #8]
    13c0:	cmp	w9, #0xf
    13c4:	b.ne	2af4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1fdc>  // b.any
    13c8:	mov	x21, x0
    13cc:	ldr	x0, [x8, #24]
    13d0:	cbz	x0, 2ad8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1fc0>
    13d4:	ldrb	w8, [x0, #8]
    13d8:	cmp	w8, #0xf
    13dc:	b.ne	2af4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1fdc>  // b.any
    13e0:	bl	0 <_ZN4llvm19ConstantPointerNull3getEPNS_11PointerTypeE>
    13e4:	mov	x1, x0
    13e8:	sub	x0, x29, #0xf0
    13ec:	mov	x2, x21
    13f0:	b	142c <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x914>
    13f4:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    13f8:	add	x0, sp, #0x190
    13fc:	add	x1, x1, #0x0
    1400:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1404:	ldr	x2, [sp, #72]
    1408:	sub	x0, x29, #0xf0
    140c:	add	x5, sp, #0x190
    1410:	mov	w4, #0x3                   	// #3
    1414:	mov	x1, x27
    1418:	mov	w3, wzr
    141c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1420:	mov	x2, x0
    1424:	sub	x0, x29, #0xf0
    1428:	mov	x1, x19
    142c:	mov	w3, wzr
    1430:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1434:	ldr	x0, [sp, #80]
    1438:	bl	0 <_ZN4llvm17ConstantTokenNone3getERNS_11LLVMContextE>
    143c:	mov	x1, x0
    1440:	mov	x0, x24
    1444:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    1448:	mov	x0, x24
    144c:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    1450:	ldr	x25, [x20, #40]
    1454:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1458:	add	x0, sp, #0x210
    145c:	add	x1, x1, #0x0
    1460:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1464:	ldrb	w8, [sp, #544]
    1468:	cmp	w8, #0x1
    146c:	b.eq	1484 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x96c>  // b.none
    1470:	cbnz	w8, 14ac <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x994>
    1474:	mov	w8, #0x100                 	// #256
    1478:	stp	xzr, xzr, [sp, #400]
    147c:	strh	w8, [sp, #416]
    1480:	b	14d8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x9c0>
    1484:	sub	x10, x29, #0x18
    1488:	stp	x10, xzr, [sp, #400]
    148c:	mov	w10, #0x10b                 	// #267
    1490:	ldr	w8, [sp, #496]
    1494:	ldrh	w9, [sp, #500]
    1498:	strh	w10, [sp, #416]
    149c:	ldr	x10, [sp, #64]
    14a0:	strh	w9, [x10, #4]
    14a4:	str	w8, [x10]
    14a8:	b	14d8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x9c0>
    14ac:	ldrb	w9, [sp, #545]
    14b0:	ldr	x10, [sp, #528]
    14b4:	add	x0, sp, #0x190
    14b8:	sub	x3, x29, #0x18
    14bc:	cmp	w9, #0x1
    14c0:	mov	w9, #0x2                   	// #2
    14c4:	csel	w2, w8, w9, eq  // eq = none
    14c8:	add	x8, sp, #0x210
    14cc:	csel	x1, x10, x8, eq  // eq = none
    14d0:	mov	w4, #0xb                   	// #11
    14d4:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    14d8:	add	x1, x20, #0x18
    14dc:	add	x2, sp, #0x190
    14e0:	mov	x0, x25
    14e4:	bl	0 <_ZN4llvm10BasicBlock15splitBasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEERKNS_5TwineE>
    14e8:	ldr	x8, [x20, #40]
    14ec:	mov	x24, x0
    14f0:	mov	x1, x20
    14f4:	add	x0, x8, #0x28
    14f8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    14fc:	mov	x21, x0
    1500:	mov	x0, x24
    1504:	bl	0 <_ZNK4llvm5Value7getNameEv>
    1508:	stp	x0, x1, [x29, #-256]
    150c:	add	x0, sp, #0x210
    1510:	sub	x1, x29, #0x100
    1514:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1518:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    151c:	add	x0, sp, #0x1f0
    1520:	add	x1, x1, #0x0
    1524:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1528:	ldrb	w8, [sp, #544]
    152c:	cbz	w8, 1550 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xa38>
    1530:	ldrb	w9, [sp, #512]
    1534:	cbz	w9, 1550 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xa38>
    1538:	cmp	w8, #0x1
    153c:	b.ne	1560 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xa48>  // b.any
    1540:	add	x9, sp, #0x190
    1544:	ldr	q0, [x9, #96]
    1548:	ldr	x8, [sp, #512]
    154c:	b	1574 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xa5c>
    1550:	mov	w8, #0x100                 	// #256
    1554:	stp	xzr, xzr, [sp, #400]
    1558:	strh	w8, [sp, #416]
    155c:	b	15bc <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xaa4>
    1560:	cmp	w9, #0x1
    1564:	b.ne	1580 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xa68>  // b.any
    1568:	add	x9, sp, #0x190
    156c:	ldr	q0, [x9, #128]
    1570:	ldr	x8, [sp, #544]
    1574:	str	q0, [x9]
    1578:	str	x8, [sp, #416]
    157c:	b	15bc <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xaa4>
    1580:	ldrb	w10, [sp, #545]
    1584:	ldr	x11, [sp, #528]
    1588:	ldrb	w12, [sp, #513]
    158c:	ldr	x13, [sp, #496]
    1590:	cmp	w10, #0x1
    1594:	mov	w10, #0x2                   	// #2
    1598:	csel	w2, w8, w10, eq  // eq = none
    159c:	add	x8, sp, #0x210
    15a0:	csel	x1, x11, x8, eq  // eq = none
    15a4:	cmp	w12, #0x1
    15a8:	add	x8, sp, #0x1f0
    15ac:	csel	w4, w9, w10, eq  // eq = none
    15b0:	csel	x3, x13, x8, eq  // eq = none
    15b4:	add	x0, sp, #0x190
    15b8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    15bc:	add	x1, x21, #0x18
    15c0:	add	x2, sp, #0x190
    15c4:	mov	x0, x24
    15c8:	bl	0 <_ZN4llvm10BasicBlock15splitBasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEERKNS_5TwineE>
    15cc:	mov	x21, x0
    15d0:	mov	x0, x28
    15d4:	mov	x1, x19
    15d8:	mov	x2, x24
    15dc:	bl	0 <_ZN4llvm10SwitchInst7addCaseEPNS_11ConstantIntEPNS_10BasicBlockE>
    15e0:	mov	x0, x25
    15e4:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
    15e8:	cbz	x0, 29cc <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1eb4>
    15ec:	ldrb	w8, [x0, #16]
    15f0:	cmp	w8, #0x1a
    15f4:	b.ne	29e8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1ed0>  // b.any
    15f8:	mov	w1, wzr
    15fc:	mov	x2, x21
    1600:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1604:	ldur	x0, [x29, #-216]
    1608:	bl	0 <_ZN4llvm4Type9getInt8TyERNS_11LLVMContextE>
    160c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1610:	mov	x19, x0
    1614:	add	x0, sp, #0x190
    1618:	add	x1, x1, #0x0
    161c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1620:	add	x0, x21, #0x28
    1624:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1628:	mov	x21, x0
    162c:	mov	w0, #0x40                  	// #64
    1630:	bl	0 <_ZN4llvm4UsernwEm>
    1634:	add	x3, sp, #0x190
    1638:	mov	w2, #0x2                   	// #2
    163c:	mov	x1, x19
    1640:	mov	x4, x21
    1644:	mov	x23, x0
    1648:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    164c:	mov	x0, x20
    1650:	mov	x1, x23
    1654:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    1658:	ldur	x0, [x29, #-216]
    165c:	bl	0 <_ZN4llvm4Type9getInt8TyERNS_11LLVMContextE>
    1660:	mov	w1, #0xff                  	// #255
    1664:	mov	w2, wzr
    1668:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
    166c:	mov	x1, x0
    1670:	mov	x0, x23
    1674:	mov	x2, x25
    1678:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    167c:	mov	x0, x23
    1680:	mov	x1, x20
    1684:	mov	x2, x24
    1688:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    168c:	ldur	x8, [x29, #-24]
    1690:	subs	x26, x26, #0x8
    1694:	add	x22, x22, #0x8
    1698:	add	x8, x8, #0x1
    169c:	stur	x8, [x29, #-24]
    16a0:	b.ne	1334 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x81c>  // b.any
    16a4:	ldr	x9, [sp, #24]
    16a8:	sub	x0, x29, #0xf0
    16ac:	add	x8, x9, #0x28
    16b0:	stp	x9, x8, [x29, #-232]
    16b4:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    16b8:	ldur	x1, [x29, #-240]
    16bc:	ldr	x8, [sp, #32]
    16c0:	str	x8, [sp, #352]
    16c4:	cbz	x1, 16d0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xbb8>
    16c8:	sub	x0, x29, #0xf0
    16cc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    16d0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    16d4:	add	x1, x1, #0x0
    16d8:	sub	x0, x29, #0xf0
    16dc:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    16e0:	ldr	x20, [x29, #8]
    16e4:	sub	x1, x29, #0xf0
    16e8:	add	x2, sp, #0x88
    16ec:	mov	w3, wzr
    16f0:	mov	x0, x20
    16f4:	bl	31a8 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE>
    16f8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    16fc:	mov	x23, x0
    1700:	stur	x0, [x29, #-24]
    1704:	add	x1, x1, #0x0
    1708:	sub	x0, x29, #0xf0
    170c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1710:	sub	x1, x29, #0xf0
    1714:	add	x2, sp, #0x88
    1718:	mov	w3, #0x1                   	// #1
    171c:	mov	x0, x20
    1720:	bl	31a8 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE>
    1724:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1728:	mov	x19, x0
    172c:	str	x0, [sp, #488]
    1730:	add	x1, x1, #0x0
    1734:	sub	x0, x29, #0xf0
    1738:	sub	x21, x29, #0xf0
    173c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1740:	sub	x1, x29, #0xf0
    1744:	add	x2, sp, #0x88
    1748:	mov	w3, #0x2                   	// #2
    174c:	mov	x0, x20
    1750:	bl	31a8 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE>
    1754:	mov	x20, x0
    1758:	str	x0, [sp, #480]
    175c:	mov	x0, x23
    1760:	bl	2f6c <_ZL16postSplitCleanupRN4llvm8FunctionE>
    1764:	mov	x0, x19
    1768:	bl	2f6c <_ZL16postSplitCleanupRN4llvm8FunctionE>
    176c:	mov	x0, x20
    1770:	bl	2f6c <_ZL16postSplitCleanupRN4llvm8FunctionE>
    1774:	add	x8, x21, #0x10
    1778:	add	x0, sp, #0x190
    177c:	mov	x1, x23
    1780:	stur	x8, [x29, #-240]
    1784:	stur	d8, [x29, #-232]
    1788:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    178c:	ldp	x19, x21, [sp, #400]
    1790:	ldr	x22, [sp, #416]
    1794:	add	x20, x23, #0x48
    1798:	ldp	x26, x25, [sp, #48]
    179c:	ldr	x27, [sp, #40]
    17a0:	cmp	x19, x20
    17a4:	cset	w8, ne  // ne = any
    17a8:	cmp	x22, #0x0
    17ac:	cset	w9, ne  // ne = any
    17b0:	cmp	x20, x21
    17b4:	b.ne	17c0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xca8>  // b.any
    17b8:	and	w8, w8, w9
    17bc:	cbz	w8, 18a4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xd8c>
    17c0:	ldrb	w8, [x22]
    17c4:	tbnz	w8, #2, 2b68 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x2050>
    17c8:	sub	x8, x22, #0x18
    17cc:	cmp	x22, #0x0
    17d0:	csel	x8, xzr, x8, eq  // eq = none
    17d4:	cbz	x22, 2b84 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x206c>
    17d8:	ldrb	w9, [x8, #16]
    17dc:	cmp	w9, #0x50
    17e0:	csel	x8, x8, xzr, eq  // eq = none
    17e4:	str	x8, [sp, #400]
    17e8:	cbz	x8, 1838 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xd20>
    17ec:	ldur	x0, [x8, #-24]
    17f0:	cbz	x0, 1838 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xd20>
    17f4:	bl	0 <_ZNK4llvm5Value17stripPointerCastsEv>
    17f8:	cbz	x0, 2abc <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1fa4>
    17fc:	ldrb	w8, [x0, #16]
    1800:	cmp	w8, #0x50
    1804:	b.ne	1838 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xd20>  // b.any
    1808:	ldur	x8, [x0, #-24]
    180c:	cbz	x8, 1838 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xd20>
    1810:	ldrb	w9, [x8, #16]
    1814:	cbnz	w9, 1838 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xd20>
    1818:	ldrb	w9, [x8, #33]
    181c:	tbz	w9, #5, 1838 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xd20>
    1820:	ldr	w8, [x8, #36]
    1824:	cmp	w8, #0x22
    1828:	b.ne	1838 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xd20>  // b.any
    182c:	sub	x0, x29, #0xf0
    1830:	add	x1, sp, #0x190
    1834:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1838:	ldrb	w8, [x21]
    183c:	tbnz	w8, #2, 2990 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1e78>
    1840:	ldr	x22, [x22, #8]
    1844:	sub	x8, x21, #0x18
    1848:	cmp	x21, #0x0
    184c:	csel	x8, xzr, x8, eq  // eq = none
    1850:	add	x8, x8, #0x28
    1854:	cmp	x8, x22
    1858:	b.ne	1884 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xd6c>  // b.any
    185c:	ldr	x21, [x21, #8]
    1860:	cmp	x19, x21
    1864:	b.eq	1884 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xd6c>  // b.none
    1868:	ldrb	w8, [x21]
    186c:	tbnz	w8, #2, 2990 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1e78>
    1870:	sub	x8, x21, #0x18
    1874:	cmp	x21, #0x0
    1878:	csel	x8, xzr, x8, eq  // eq = none
    187c:	ldr	x22, [x8, #48]
    1880:	b	1850 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xd38>
    1884:	cmp	x19, x20
    1888:	cset	w8, ne  // ne = any
    188c:	cmp	x22, #0x0
    1890:	cset	w9, ne  // ne = any
    1894:	cmp	x20, x21
    1898:	b.ne	17c0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xca8>  // b.any
    189c:	and	w8, w8, w9
    18a0:	tbnz	w8, #0, 17c0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xca8>
    18a4:	ldur	w8, [x29, #-232]
    18a8:	cbz	w8, 245c <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1944>
    18ac:	ldur	x22, [x29, #-240]
    18b0:	mov	w28, wzr
    18b4:	add	x27, sp, #0x190
    18b8:	add	x26, x22, x8, lsl #3
    18bc:	ldr	x19, [x22]
    18c0:	ldr	x8, [x19, #40]
    18c4:	mov	x1, x19
    18c8:	add	x0, x8, #0x28
    18cc:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    18d0:	mov	x20, x0
    18d4:	add	x0, sp, #0x190
    18d8:	mov	w1, wzr
    18dc:	str	xzr, [sp, #400]
    18e0:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    18e4:	ldrb	w8, [x20, #16]
    18e8:	sub	w9, w8, #0x19
    18ec:	cmp	w9, #0xa
    18f0:	b.hi	1a28 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xf10>  // b.pmore
    18f4:	mov	x25, xzr
    18f8:	mov	x24, x20
    18fc:	cbz	x24, 2974 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1e5c>
    1900:	and	w9, w8, #0xff
    1904:	cmp	w9, #0x19
    1908:	b.eq	1a40 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xf28>  // b.none
    190c:	cmp	w9, #0x1a
    1910:	b.ne	1940 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xe28>  // b.any
    1914:	ldr	w8, [x24, #20]
    1918:	and	w8, w8, #0xfffffff
    191c:	cmp	w8, #0x1
    1920:	b.ne	1a28 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xf10>  // b.any
    1924:	mov	x0, x24
    1928:	mov	w1, wzr
    192c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1930:	cmp	x24, x20
    1934:	mov	x21, x0
    1938:	csel	x25, x0, x25, eq  // eq = none
    193c:	b	19fc <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xee4>
    1940:	and	w8, w8, #0xff
    1944:	cmp	w8, #0x1b
    1948:	b.ne	1a28 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xf10>  // b.any
    194c:	mov	x0, x24
    1950:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1954:	mov	x21, x0
    1958:	stur	x0, [x29, #-256]
    195c:	add	x0, sp, #0x190
    1960:	sub	x1, x29, #0x100
    1964:	add	x2, sp, #0x1f0
    1968:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    196c:	ldr	w8, [sp, #424]
    1970:	ldp	x9, x11, [sp, #400]
    1974:	ldr	x10, [sp, #496]
    1978:	str	x27, [sp, #528]
    197c:	add	x8, x11, x8, lsl #4
    1980:	str	x9, [sp, #536]
    1984:	tbz	w0, #0, 1990 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xe78>
    1988:	str	x10, [sp, #544]
    198c:	b	1994 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xe7c>
    1990:	str	x8, [sp, #544]
    1994:	add	x0, sp, #0x210
    1998:	add	x1, sp, #0x1f0
    199c:	str	x8, [sp, #552]
    19a0:	stp	x27, x9, [sp, #496]
    19a4:	str	x8, [sp, #512]
    19a8:	str	x8, [sp, #520]
    19ac:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    19b0:	tbz	w0, #0, 19d0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xeb8>
    19b4:	ldr	x8, [sp, #528]
    19b8:	ldr	x9, [sp, #536]
    19bc:	ldr	x8, [x8]
    19c0:	cmp	x8, x9
    19c4:	b.ne	2b48 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x2030>  // b.any
    19c8:	ldr	x8, [sp, #544]
    19cc:	ldr	x21, [x8, #8]
    19d0:	cbz	x21, 29b0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1e98>
    19d4:	ldrb	w8, [x21, #16]
    19d8:	cmp	w8, #0xd
    19dc:	b.ne	1a28 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xf10>  // b.any
    19e0:	mov	x0, x24
    19e4:	mov	x1, x21
    19e8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    19ec:	stp	x0, x1, [sp, #496]
    19f0:	add	x0, sp, #0x1f0
    19f4:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    19f8:	mov	x21, x0
    19fc:	add	x2, sp, #0x190
    1a00:	mov	x0, x24
    1a04:	mov	x1, x21
    1a08:	bl	47cc <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE>
    1a0c:	mov	x0, x21
    1a10:	bl	0 <_ZNK4llvm10BasicBlock29getFirstNonPHIOrDbgOrLifetimeEv>
    1a14:	ldrb	w8, [x0, #16]
    1a18:	mov	x24, x0
    1a1c:	sub	w9, w8, #0x19
    1a20:	cmp	w9, #0xb
    1a24:	b.cc	18fc <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xde4>  // b.lo, b.ul, b.last
    1a28:	ldr	x0, [sp, #408]
    1a2c:	bl	0 <_ZdlPv>
    1a30:	add	x22, x22, #0x8
    1a34:	cmp	x22, x26
    1a38:	b.ne	18bc <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xda4>  // b.any
    1a3c:	b	2440 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1928>
    1a40:	cmp	x24, x20
    1a44:	b.eq	1ab4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xf9c>  // b.none
    1a48:	cbz	x25, 1aa0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xf88>
    1a4c:	mov	x0, x25
    1a50:	bl	0 <_ZN4llvm10BasicBlock4phisEv>
    1a54:	cmp	x0, x1
    1a58:	str	x0, [sp, #528]
    1a5c:	b.eq	1aa0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xf88>  // b.none
    1a60:	mov	x25, x0
    1a64:	mov	x21, x1
    1a68:	ldr	x1, [x20, #40]
    1a6c:	mov	x0, x25
    1a70:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1a74:	cmn	w0, #0x1
    1a78:	b.eq	1a8c <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xf74>  // b.none
    1a7c:	mov	w1, w0
    1a80:	mov	w2, #0x1                   	// #1
    1a84:	mov	x0, x25
    1a88:	bl	0 <_ZN4llvm7PHINode19removeIncomingValueEjb>
    1a8c:	add	x0, sp, #0x210
    1a90:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1a94:	ldr	x25, [sp, #528]
    1a98:	cmp	x25, x21
    1a9c:	b.ne	1a68 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xf50>  // b.any
    1aa0:	mov	x0, x24
    1aa4:	bl	0 <_ZNK4llvm11Instruction5cloneEv>
    1aa8:	mov	x1, x0
    1aac:	mov	x0, x20
    1ab0:	bl	0 <_ZN4llvm19ReplaceInstWithInstEPNS_11InstructionES1_>
    1ab4:	ldr	x0, [sp, #408]
    1ab8:	bl	0 <_ZdlPv>
    1abc:	mov	w1, #0x2                   	// #2
    1ac0:	mov	x0, x19
    1ac4:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1ac8:	mov	w28, #0x1                   	// #1
    1acc:	b	1a30 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0xf18>
    1ad0:	ldp	x26, x25, [sp, #48]
    1ad4:	ldr	x27, [sp, #40]
    1ad8:	add	x22, sp, #0x88
    1adc:	cbnz	w8, 26cc <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1bb4>
    1ae0:	mov	x20, x0
    1ae4:	sub	x0, x29, #0xf0
    1ae8:	stur	x21, [x29, #-240]
    1aec:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1af0:	tbz	w0, #0, 2d80 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x2268>
    1af4:	cmp	x20, #0x0
    1af8:	cset	w1, ne  // ne = any
    1afc:	mov	x0, x21
    1b00:	bl	0 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb>
    1b04:	cbz	x20, 26b4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1b9c>
    1b08:	sub	x0, x29, #0xf0
    1b0c:	mov	x1, x20
    1b10:	mov	x2, xzr
    1b14:	mov	x3, xzr
    1b18:	mov	x4, xzr
    1b1c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1b20:	ldr	x21, [sp, #312]
    1b24:	adrp	x23, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1b28:	add	x23, x23, #0x0
    1b2c:	add	x0, sp, #0x190
    1b30:	mov	x1, x23
    1b34:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1b38:	sub	x0, x29, #0xf0
    1b3c:	add	x3, sp, #0x190
    1b40:	mov	x1, x21
    1b44:	mov	x2, xzr
    1b48:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1b4c:	ldur	x8, [x29, #-216]
    1b50:	mov	x21, x0
    1b54:	mov	w1, wzr
    1b58:	mov	x0, x8
    1b5c:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
    1b60:	mov	x24, x0
    1b64:	add	x0, sp, #0x190
    1b68:	mov	x1, x23
    1b6c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1b70:	sub	x0, x29, #0xf0
    1b74:	add	x4, sp, #0x190
    1b78:	mov	w1, #0x31                  	// #49
    1b7c:	mov	x2, x21
    1b80:	mov	x3, x24
    1b84:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1b88:	ldur	x8, [x29, #-216]
    1b8c:	mov	x21, x0
    1b90:	mov	x0, x8
    1b94:	bl	0 <_ZN4llvm11ConstantInt8getFalseERNS_11LLVMContextE>
    1b98:	mov	x1, x0
    1b9c:	mov	x0, x20
    1ba0:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    1ba4:	mov	x0, x20
    1ba8:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    1bac:	mov	x0, x19
    1bb0:	mov	x1, x21
    1bb4:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    1bb8:	ldur	x1, [x29, #-240]
    1bbc:	cbz	x1, 26cc <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1bb4>
    1bc0:	sub	x0, x29, #0xf0
    1bc4:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    1bc8:	b	26cc <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1bb4>
    1bcc:	sub	x0, x29, #0xf0
    1bd0:	mov	x1, x20
    1bd4:	mov	x2, xzr
    1bd8:	mov	x3, xzr
    1bdc:	mov	x4, xzr
    1be0:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1be4:	ldr	x8, [x29, #8]
    1be8:	ldr	x0, [x8, #40]
    1bec:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
    1bf0:	ldr	x1, [sp, #312]
    1bf4:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1bf8:	tst	w1, #0xff
    1bfc:	b.ne	2c90 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x2178>  // b.any
    1c00:	mov	x21, x0
    1c04:	ldur	x0, [x29, #-216]
    1c08:	bl	0 <_ZN4llvm4Type10getInt64TyERNS_11LLVMContextE>
    1c0c:	mov	x1, x21
    1c10:	mov	w2, wzr
    1c14:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
    1c18:	mov	x2, x0
    1c1c:	add	x0, sp, #0x88
    1c20:	sub	x1, x29, #0xf0
    1c24:	mov	x3, xzr
    1c28:	bl	0 <_ZNK4llvm4coro5Shape9emitAllocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE>
    1c2c:	ldr	x8, [sp, #136]
    1c30:	adrp	x24, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1c34:	add	x24, x24, #0x0
    1c38:	mov	x23, x0
    1c3c:	ldr	x21, [x8]
    1c40:	add	x0, sp, #0x190
    1c44:	mov	x1, x24
    1c48:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1c4c:	sub	x0, x29, #0xf0
    1c50:	add	x4, sp, #0x190
    1c54:	mov	w1, #0x31                  	// #49
    1c58:	mov	x2, x23
    1c5c:	mov	x3, x21
    1c60:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1c64:	mov	x23, x0
    1c68:	mov	w1, #0x2                   	// #2
    1c6c:	mov	x0, x20
    1c70:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1c74:	ldr	x8, [x23]
    1c78:	mov	x20, x0
    1c7c:	mov	w1, wzr
    1c80:	mov	x0, x8
    1c84:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
    1c88:	mov	x21, x0
    1c8c:	add	x0, sp, #0x190
    1c90:	mov	x1, x24
    1c94:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1c98:	sub	x0, x29, #0xf0
    1c9c:	add	x4, sp, #0x190
    1ca0:	mov	w1, #0x31                  	// #49
    1ca4:	mov	x2, x20
    1ca8:	mov	x3, x21
    1cac:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1cb0:	mov	x2, x0
    1cb4:	sub	x0, x29, #0xf0
    1cb8:	mov	x1, x23
    1cbc:	mov	w3, wzr
    1cc0:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1cc4:	ldur	x1, [x29, #-240]
    1cc8:	cbz	x1, 1cd4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x11bc>
    1ccc:	sub	x0, x29, #0xf0
    1cd0:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    1cd4:	ldr	x1, [sp, #320]
    1cd8:	mov	w8, #0x6                   	// #6
    1cdc:	sub	x0, x29, #0xf0
    1ce0:	stp	xzr, xzr, [x29, #-232]
    1ce4:	stur	x8, [x29, #-240]
    1ce8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1cec:	ldr	x0, [sp, #136]
    1cf0:	mov	x1, x23
    1cf4:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    1cf8:	sub	x0, x29, #0xf0
    1cfc:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1d00:	ldur	x8, [x29, #-224]
    1d04:	str	x0, [sp, #320]
    1d08:	add	x8, x8, #0x10
    1d0c:	cmp	x8, #0x10
    1d10:	b.hi	1d2c <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1214>  // b.pmore
    1d14:	mov	w9, #0x1                   	// #1
    1d18:	lsl	x8, x9, x8
    1d1c:	mov	w9, #0x101                 	// #257
    1d20:	movk	w9, #0x1, lsl #16
    1d24:	tst	x8, x9
    1d28:	b.ne	1d34 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x121c>  // b.any
    1d2c:	sub	x0, x29, #0xf0
    1d30:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
    1d34:	add	x8, sp, #0x190
    1d38:	add	x8, x8, #0x10
    1d3c:	str	x8, [sp, #400]
    1d40:	ldr	x8, [x29, #8]
    1d44:	ldr	w2, [sp, #232]
    1d48:	ldr	w9, [sp, #100]
    1d4c:	str	d8, [sp, #408]
    1d50:	ldr	x27, [x8, #64]
    1d54:	cmp	w9, w2
    1d58:	b.cs	1d70 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1258>  // b.hs, b.nlast
    1d5c:	add	x0, sp, #0x58
    1d60:	mov	w3, #0x8                   	// #8
    1d64:	mov	x1, x19
    1d68:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1d6c:	ldr	w2, [sp, #232]
    1d70:	str	xzr, [sp, #496]
    1d74:	cbz	w2, 221c <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1704>
    1d78:	sub	x9, x29, #0xf0
    1d7c:	adrp	x26, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1d80:	mov	x8, xzr
    1d84:	mov	x24, xzr
    1d88:	mov	w23, w2
    1d8c:	add	x26, x26, #0x0
    1d90:	add	x10, x9, #0x30
    1d94:	add	x9, x9, #0x12
    1d98:	stp	x9, x10, [sp, #64]
    1d9c:	str	x23, [sp, #80]
    1da0:	cmp	x8, w2, uxtw
    1da4:	b.cs	2958 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1e40>  // b.hs, b.nlast
    1da8:	ldr	x9, [sp, #224]
    1dac:	sub	x0, x29, #0xf0
    1db0:	ldr	x28, [x9, x8, lsl #3]
    1db4:	stur	x28, [x29, #-240]
    1db8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1dbc:	tbz	w0, #0, 2a20 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1f08>
    1dc0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1dc4:	add	x0, sp, #0x210
    1dc8:	add	x1, x1, #0x0
    1dcc:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1dd0:	ldrb	w8, [sp, #544]
    1dd4:	cmp	w8, #0x1
    1dd8:	b.eq	1df0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x12d8>  // b.none
    1ddc:	cbnz	w8, 1e18 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1300>
    1de0:	mov	w8, #0x100                 	// #256
    1de4:	stp	xzr, xzr, [x29, #-240]
    1de8:	sturh	w8, [x29, #-224]
    1dec:	b	1e44 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x132c>
    1df0:	add	x10, sp, #0x1f0
    1df4:	stp	x10, xzr, [x29, #-240]
    1df8:	mov	w10, #0x10b                 	// #267
    1dfc:	ldur	w8, [x29, #-256]
    1e00:	ldurh	w9, [x29, #-252]
    1e04:	sturh	w10, [x29, #-224]
    1e08:	ldr	x10, [sp, #64]
    1e0c:	strh	w9, [x10, #4]
    1e10:	str	w8, [x10]
    1e14:	b	1e44 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x132c>
    1e18:	ldrb	w9, [sp, #545]
    1e1c:	ldr	x10, [sp, #528]
    1e20:	sub	x0, x29, #0xf0
    1e24:	add	x3, sp, #0x1f0
    1e28:	cmp	w9, #0x1
    1e2c:	mov	w9, #0x2                   	// #2
    1e30:	csel	w2, w8, w9, eq  // eq = none
    1e34:	add	x8, sp, #0x210
    1e38:	csel	x1, x10, x8, eq  // eq = none
    1e3c:	mov	w4, #0xb                   	// #11
    1e40:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1e44:	ldr	x0, [x29, #8]
    1e48:	add	x1, sp, #0x88
    1e4c:	sub	x2, x29, #0xf0
    1e50:	mov	x3, x27
    1e54:	bl	4278 <_ZL22createCloneDeclarationRN4llvm8FunctionERNS_4coro5ShapeERKNS_5TwineENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS0_Lb1ELb0EvEELb0ELb0EEE>
    1e58:	stur	x0, [x29, #-256]
    1e5c:	add	x0, sp, #0x58
    1e60:	sub	x1, x29, #0x100
    1e64:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1e68:	ldr	x20, [x28, #40]
    1e6c:	sub	x0, x29, #0xf0
    1e70:	mov	x1, x26
    1e74:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1e78:	add	x1, x28, #0x18
    1e7c:	sub	x2, x29, #0xf0
    1e80:	mov	x0, x20
    1e84:	bl	0 <_ZN4llvm10BasicBlock15splitBasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEERKNS_5TwineE>
    1e88:	mov	x21, x0
    1e8c:	mov	x0, x20
    1e90:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
    1e94:	cbz	x0, 29cc <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1eb4>
    1e98:	ldrb	w8, [x0, #16]
    1e9c:	mov	x19, x0
    1ea0:	cmp	w8, #0x1a
    1ea4:	b.ne	29e8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1ed0>  // b.any
    1ea8:	cbnz	x24, 2130 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1618>
    1eac:	ldr	x22, [x29, #8]
    1eb0:	mov	x23, x27
    1eb4:	mov	x0, x22
    1eb8:	bl	0 <_ZNK4llvm8Function10getContextEv>
    1ebc:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1ec0:	mov	x27, x0
    1ec4:	sub	x0, x29, #0xf0
    1ec8:	add	x1, x1, #0x0
    1ecc:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1ed0:	mov	w0, #0x40                  	// #64
    1ed4:	bl	0 <_Znwm>
    1ed8:	sub	x2, x29, #0xf0
    1edc:	mov	x1, x27
    1ee0:	mov	x3, x22
    1ee4:	mov	x4, x21
    1ee8:	mov	x24, x0
    1eec:	bl	0 <_ZN4llvm10BasicBlockC1ERNS_11LLVMContextERKNS_5TwineEPNS_8FunctionEPS0_>
    1ef0:	mov	x0, x24
    1ef4:	str	x24, [sp, #360]
    1ef8:	bl	0 <_ZNK4llvm10BasicBlock10getContextEv>
    1efc:	mov	w8, #0x200                 	// #512
    1f00:	ldr	x9, [sp, #72]
    1f04:	sturh	w8, [x29, #-196]
    1f08:	ldr	w8, [sp, #408]
    1f0c:	stp	xzr, x24, [x29, #-240]
    1f10:	stp	x0, xzr, [x29, #-216]
    1f14:	stur	wzr, [x29, #-200]
    1f18:	sturb	wzr, [x29, #-194]
    1f1c:	stp	xzr, xzr, [x9]
    1f20:	add	x9, x24, #0x28
    1f24:	stur	x9, [x29, #-224]
    1f28:	cbnz	w8, 2ba0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x2088>
    1f2c:	ldur	x8, [x29, #-256]
    1f30:	ldr	x21, [x8]
    1f34:	cbz	x21, 2ad8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1fc0>
    1f38:	ldrb	w8, [x21, #8]
    1f3c:	cmp	w8, #0xf
    1f40:	b.ne	2af4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1fdc>  // b.any
    1f44:	ldr	w27, [sp, #232]
    1f48:	add	x0, sp, #0x210
    1f4c:	mov	x1, x26
    1f50:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1f54:	sub	x0, x29, #0xf0
    1f58:	add	x3, sp, #0x210
    1f5c:	mov	x1, x21
    1f60:	mov	w2, w27
    1f64:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1f68:	stur	x0, [x29, #-24]
    1f6c:	add	x0, sp, #0x190
    1f70:	sub	x1, x29, #0x18
    1f74:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1f78:	add	x0, sp, #0x88
    1f7c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1f80:	cbz	x1, 1fcc <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x14b4>
    1f84:	mov	x21, x0
    1f88:	lsl	x22, x1, #3
    1f8c:	ldr	x27, [x21], #8
    1f90:	ldr	w25, [sp, #232]
    1f94:	add	x0, sp, #0x210
    1f98:	mov	x1, x26
    1f9c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1fa0:	sub	x0, x29, #0xf0
    1fa4:	add	x3, sp, #0x210
    1fa8:	mov	x1, x27
    1fac:	mov	w2, w25
    1fb0:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1fb4:	stur	x0, [x29, #-24]
    1fb8:	add	x0, sp, #0x190
    1fbc:	sub	x1, x29, #0x18
    1fc0:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1fc4:	subs	x22, x22, #0x8
    1fc8:	b.ne	1f8c <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1474>  // b.any
    1fcc:	ldr	x8, [x29, #8]
    1fd0:	ldr	x8, [x8, #24]
    1fd4:	cbz	x8, 2bc0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x20a8>
    1fd8:	ldrb	w9, [x8, #8]
    1fdc:	cmp	w9, #0xc
    1fe0:	b.ne	2bdc <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x20c4>  // b.any
    1fe4:	ldr	x9, [x8, #16]
    1fe8:	ldr	w8, [sp, #408]
    1fec:	ldr	x21, [x9]
    1ff0:	cmp	w8, #0x1
    1ff4:	mov	x27, x21
    1ff8:	b.eq	2020 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1508>  // b.none
    1ffc:	cbz	x21, 2c38 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x2120>
    2000:	ldrb	w9, [x21, #8]
    2004:	cmp	w9, #0xd
    2008:	b.ne	2c54 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x213c>  // b.any
    200c:	ldr	w9, [x21, #12]
    2010:	cbz	w9, 2c70 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x2158>
    2014:	cbz	w8, 28d8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1dc0>
    2018:	ldr	x8, [x21, #16]
    201c:	ldr	x27, [x8]
    2020:	ldr	x8, [sp, #400]
    2024:	add	x0, sp, #0x210
    2028:	mov	x1, x26
    202c:	ldr	x25, [x8]
    2030:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2034:	sub	x0, x29, #0xf0
    2038:	add	x4, sp, #0x210
    203c:	mov	w1, #0x31                  	// #49
    2040:	mov	x2, x25
    2044:	mov	x3, x27
    2048:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    204c:	ldr	w8, [sp, #408]
    2050:	mov	x27, x0
    2054:	cmp	w8, #0x1
    2058:	b.eq	210c <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x15f4>  // b.none
    205c:	mov	x0, x21
    2060:	bl	0 <_ZN4llvm10UndefValue3getEPNS_4TypeE>
    2064:	mov	x21, x0
    2068:	add	x0, sp, #0x210
    206c:	mov	x1, x26
    2070:	stur	wzr, [x29, #-24]
    2074:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2078:	sub	x0, x29, #0xf0
    207c:	sub	x3, x29, #0x18
    2080:	add	x5, sp, #0x210
    2084:	mov	w4, #0x1                   	// #1
    2088:	mov	x1, x21
    208c:	mov	x2, x27
    2090:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2094:	ldr	w8, [sp, #408]
    2098:	mov	x27, x0
    209c:	cmp	w8, #0x1
    20a0:	b.eq	210c <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x15f4>  // b.none
    20a4:	cbz	w8, 28d8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1dc0>
    20a8:	mov	w9, #0x2                   	// #2
    20ac:	sub	x25, x9, x8
    20b0:	mov	w22, #0x1                   	// #1
    20b4:	ldr	x8, [sp, #400]
    20b8:	add	x0, sp, #0x210
    20bc:	mov	x1, x26
    20c0:	ldr	x21, [x8, x22, lsl #3]
    20c4:	stur	w22, [x29, #-24]
    20c8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    20cc:	sub	x0, x29, #0xf0
    20d0:	sub	x3, x29, #0x18
    20d4:	add	x5, sp, #0x210
    20d8:	mov	w4, #0x1                   	// #1
    20dc:	mov	x1, x27
    20e0:	mov	x2, x21
    20e4:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    20e8:	add	x8, x25, x22
    20ec:	cmp	x8, #0x1
    20f0:	mov	x27, x0
    20f4:	b.eq	210c <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x15f4>  // b.none
    20f8:	ldr	w8, [sp, #408]
    20fc:	add	x22, x22, #0x1
    2100:	cmp	x22, x8
    2104:	b.cc	20b4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x159c>  // b.lo, b.ul, b.last
    2108:	b	28d8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1dc0>
    210c:	sub	x0, x29, #0xf0
    2110:	mov	x1, x27
    2114:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2118:	ldur	x1, [x29, #-240]
    211c:	cbz	x1, 2128 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1610>
    2120:	sub	x0, x29, #0xf0
    2124:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    2128:	mov	x27, x23
    212c:	ldr	x23, [sp, #80]
    2130:	mov	x0, x19
    2134:	mov	w1, wzr
    2138:	mov	x2, x24
    213c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2140:	ldr	w8, [sp, #408]
    2144:	cbz	w8, 28d8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1dc0>
    2148:	ldr	x8, [sp, #400]
    214c:	ldur	x1, [x29, #-256]
    2150:	mov	x2, x20
    2154:	ldr	x0, [x8]
    2158:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    215c:	ldr	w8, [x28, #20]
    2160:	mov	w25, #0x18                  	// #24
    2164:	mov	x0, x28
    2168:	and	x21, x8, #0xfffffff
    216c:	mneg	x8, x21, x25
    2170:	add	x19, x28, x8
    2174:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2178:	mov	w22, w0
    217c:	mneg	x8, x22, x25
    2180:	mov	x0, x28
    2184:	add	x25, x28, x8
    2188:	mov	w28, #0x18                  	// #24
    218c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2190:	mov	w8, w0
    2194:	mneg	x9, x8, x28
    2198:	add	x9, x25, x9
    219c:	sub	x9, x9, #0x18
    21a0:	cmp	x19, x9
    21a4:	b.eq	21f4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x16dc>  // b.none
    21a8:	add	x8, x22, x8
    21ac:	mul	x8, x8, x28
    21b0:	neg	x8, x8
    21b4:	madd	x8, x21, x28, x8
    21b8:	sub	x21, x8, #0x18
    21bc:	mov	w8, #0x1                   	// #1
    21c0:	ldr	w9, [sp, #408]
    21c4:	cmp	x8, x9
    21c8:	b.cs	28d8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1dc0>  // b.hs, b.nlast
    21cc:	ldr	x9, [sp, #400]
    21d0:	mov	x2, x20
    21d4:	add	x22, x8, #0x1
    21d8:	ldr	x0, [x9, x8, lsl #3]
    21dc:	ldr	x1, [x19], #24
    21e0:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    21e4:	subs	x21, x21, #0x18
    21e8:	mov	x8, x22
    21ec:	b.ne	21c0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x16a8>  // b.any
    21f0:	b	21f8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x16e0>
    21f4:	mov	w22, #0x1                   	// #1
    21f8:	ldr	w8, [sp, #408]
    21fc:	cmp	x22, x8
    2200:	b.ne	2a3c <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1f24>  // b.any
    2204:	ldr	x8, [sp, #496]
    2208:	ldr	w2, [sp, #232]
    220c:	add	x8, x8, #0x1
    2210:	cmp	x8, x23
    2214:	str	x8, [sp, #496]
    2218:	b.ne	1da0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1288>  // b.any
    221c:	ldr	w8, [sp, #96]
    2220:	cmp	w8, w2
    2224:	b.ne	2ce0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x21c8>  // b.any
    2228:	mov	w21, w2
    222c:	stur	xzr, [x29, #-256]
    2230:	cbz	w21, 2418 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1900>
    2234:	ldr	x9, [sp, #224]
    2238:	ldr	x23, [x29, #8]
    223c:	sub	x10, x29, #0xf0
    2240:	add	x11, sp, #0x210
    2244:	mov	x8, xzr
    2248:	add	x20, x10, #0x28
    224c:	add	x12, x10, #0x48
    2250:	add	x26, x10, #0xa8
    2254:	add	x24, x10, #0x78
    2258:	add	x27, x10, #0x80
    225c:	add	x22, x10, #0xc0
    2260:	add	x19, x11, #0x12
    2264:	str	x12, [sp, #80]
    2268:	ldr	x10, [sp, #88]
    226c:	ldr	x25, [x9]
    2270:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2274:	add	x0, sp, #0x1f0
    2278:	ldr	x28, [x10, x8, lsl #3]
    227c:	add	x1, x1, #0x0
    2280:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2284:	ldrb	w8, [sp, #512]
    2288:	cmp	w8, #0x1
    228c:	b.eq	22a8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1790>  // b.none
    2290:	cbnz	w8, 22d0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x17b8>
    2294:	mov	w8, #0x100                 	// #256
    2298:	str	xzr, [sp, #536]
    229c:	str	xzr, [sp, #528]
    22a0:	strh	w8, [sp, #544]
    22a4:	b	22fc <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x17e4>
    22a8:	ldur	w8, [x29, #-24]
    22ac:	ldurh	w9, [x29, #-20]
    22b0:	sub	x10, x29, #0x100
    22b4:	str	x10, [sp, #528]
    22b8:	mov	w10, #0x10b                 	// #267
    22bc:	str	xzr, [sp, #536]
    22c0:	strh	w10, [sp, #544]
    22c4:	strh	w9, [x19, #4]
    22c8:	str	w8, [x19]
    22cc:	b	22fc <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x17e4>
    22d0:	ldrb	w9, [sp, #513]
    22d4:	ldr	x10, [sp, #496]
    22d8:	add	x0, sp, #0x210
    22dc:	sub	x3, x29, #0x100
    22e0:	cmp	w9, #0x1
    22e4:	mov	w9, #0x2                   	// #2
    22e8:	csel	w2, w8, w9, eq  // eq = none
    22ec:	add	x8, sp, #0x1f0
    22f0:	csel	x1, x10, x8, eq  // eq = none
    22f4:	mov	w4, #0xb                   	// #11
    22f8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    22fc:	add	x8, sp, #0x210
    2300:	stur	x8, [x29, #-224]
    2304:	add	x8, sp, #0x88
    2308:	stur	x8, [x29, #-216]
    230c:	mov	w8, #0x3                   	// #3
    2310:	mov	w1, #0x40                  	// #64
    2314:	mov	x0, x20
    2318:	stp	x23, x28, [x29, #-240]
    231c:	stur	w8, [x29, #-208]
    2320:	stur	xzr, [x29, #-200]
    2324:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2328:	mov	x0, x23
    232c:	sturb	wzr, [x29, #-168]
    2330:	sturb	wzr, [x29, #-136]
    2334:	bl	0 <_ZNK4llvm8Function10getContextEv>
    2338:	mov	w8, #0x200                 	// #512
    233c:	sturh	w8, [x29, #-76]
    2340:	ldr	w8, [sp, #304]
    2344:	stur	xzr, [x29, #-120]
    2348:	stp	x0, xzr, [x29, #-96]
    234c:	stur	wzr, [x29, #-80]
    2350:	sub	w8, w8, #0x1
    2354:	cmp	w8, #0x2
    2358:	sturb	wzr, [x29, #-74]
    235c:	stp	xzr, xzr, [x27]
    2360:	stp	xzr, xzr, [x26]
    2364:	stp	xzr, xzr, [x22]
    2368:	stur	x25, [x29, #-32]
    236c:	b.cs	2a5c <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1f44>  // b.hs, b.nlast
    2370:	cbz	x28, 2a7c <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1f64>
    2374:	cbz	x25, 2a9c <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1f84>
    2378:	sub	x0, x29, #0xf0
    237c:	bl	32e4 <_ZN12_GLOBAL__N_110CoroCloner6createEv>
    2380:	ldur	x1, [x29, #-120]
    2384:	cbz	x1, 2390 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1878>
    2388:	mov	x0, x24
    238c:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    2390:	ldurb	w8, [x29, #-136]
    2394:	cbz	w8, 23b8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x18a0>
    2398:	ldr	x0, [sp, #80]
    239c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    23a0:	ldur	x0, [x29, #-160]
    23a4:	bl	0 <_ZdlPv>
    23a8:	ldur	x8, [x29, #-168]
    23ac:	sturb	wzr, [x29, #-136]
    23b0:	add	x8, x8, #0x1
    23b4:	stur	x8, [x29, #-168]
    23b8:	mov	x0, x20
    23bc:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    23c0:	ldur	x0, [x29, #-192]
    23c4:	bl	0 <_ZdlPv>
    23c8:	ldur	x8, [x29, #-256]
    23cc:	add	x8, x8, #0x1
    23d0:	cmp	x8, x21
    23d4:	stur	x8, [x29, #-256]
    23d8:	b.eq	2418 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1900>  // b.none
    23dc:	ldr	w9, [sp, #232]
    23e0:	cmp	x8, x9
    23e4:	b.cs	2958 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1e40>  // b.hs, b.nlast
    23e8:	ldr	w9, [sp, #96]
    23ec:	ldr	x10, [sp, #224]
    23f0:	cmp	x8, x9
    23f4:	add	x9, x10, x8, lsl #3
    23f8:	b.cc	2268 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1750>  // b.lo, b.ul, b.last
    23fc:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2400:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2404:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2408:	add	x0, x0, #0x0
    240c:	add	x1, x1, #0x0
    2410:	add	x3, x3, #0x0
    2414:	b	28f0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1dd8>
    2418:	ldr	x0, [sp, #400]
    241c:	add	x8, sp, #0x190
    2420:	add	x8, x8, #0x10
    2424:	cmp	x0, x8
    2428:	b.eq	2430 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1918>  // b.none
    242c:	bl	0 <free>
    2430:	ldp	x26, x25, [sp, #48]
    2434:	ldr	x27, [sp, #40]
    2438:	add	x22, sp, #0x88
    243c:	b	2790 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1c78>
    2440:	ldp	x26, x25, [sp, #48]
    2444:	ldr	x27, [sp, #40]
    2448:	tbz	w28, #0, 245c <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1944>
    244c:	mov	x0, x23
    2450:	mov	x1, xzr
    2454:	mov	x2, xzr
    2458:	bl	0 <_ZN4llvm23removeUnreachableBlocksERNS_8FunctionEPNS_14DomTreeUpdaterEPNS_16MemorySSAUpdaterE>
    245c:	ldur	x0, [x29, #-240]
    2460:	sub	x8, x29, #0xf0
    2464:	add	x8, x8, #0x10
    2468:	cmp	x0, x8
    246c:	b.eq	2474 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x195c>  // b.none
    2470:	bl	0 <free>
    2474:	ldr	w8, [sp, #304]
    2478:	add	x22, sp, #0x88
    247c:	cbnz	w8, 2d00 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x21e8>
    2480:	ldr	x1, [sp, #320]
    2484:	ldp	x20, x19, [sp, #480]
    2488:	ldur	x21, [x29, #-24]
    248c:	ldr	x8, [x1, #40]
    2490:	add	x0, x8, #0x28
    2494:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2498:	mov	x1, x0
    249c:	sub	x0, x29, #0xf0
    24a0:	mov	x2, xzr
    24a4:	mov	x3, xzr
    24a8:	mov	x4, xzr
    24ac:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    24b0:	ldp	x23, x24, [sp, #312]
    24b4:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    24b8:	add	x1, x1, #0x0
    24bc:	add	x0, sp, #0x190
    24c0:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    24c4:	sub	x0, x29, #0xf0
    24c8:	add	x5, sp, #0x190
    24cc:	mov	x1, x23
    24d0:	mov	x2, x24
    24d4:	mov	w3, wzr
    24d8:	mov	w4, wzr
    24dc:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    24e0:	mov	x2, x0
    24e4:	sub	x0, x29, #0xf0
    24e8:	mov	x1, x21
    24ec:	mov	w3, wzr
    24f0:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    24f4:	add	x0, sp, #0x88
    24f8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    24fc:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2500:	cbz	x0, 2538 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1a20>
    2504:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2508:	mov	x21, x0
    250c:	add	x1, x1, #0x0
    2510:	add	x0, sp, #0x190
    2514:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2518:	sub	x0, x29, #0xf0
    251c:	add	x4, sp, #0x190
    2520:	mov	x1, x21
    2524:	mov	x2, x19
    2528:	mov	x3, x20
    252c:	mov	x5, xzr
    2530:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2534:	mov	x19, x0
    2538:	ldp	x20, x21, [sp, #312]
    253c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2540:	add	x1, x1, #0x0
    2544:	add	x0, sp, #0x190
    2548:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    254c:	sub	x0, x29, #0xf0
    2550:	add	x5, sp, #0x190
    2554:	mov	w4, #0x1                   	// #1
    2558:	mov	x1, x20
    255c:	mov	x2, x21
    2560:	mov	w3, wzr
    2564:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2568:	mov	x2, x0
    256c:	sub	x0, x29, #0xf0
    2570:	mov	x1, x19
    2574:	mov	w3, wzr
    2578:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    257c:	ldur	x1, [x29, #-240]
    2580:	cbz	x1, 258c <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1a74>
    2584:	sub	x0, x29, #0xf0
    2588:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    258c:	ldr	w8, [sp, #96]
    2590:	cbnz	w8, 2d20 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x2208>
    2594:	add	x0, sp, #0x58
    2598:	sub	x1, x29, #0x18
    259c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    25a0:	add	x0, sp, #0x58
    25a4:	add	x1, sp, #0x1e8
    25a8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    25ac:	add	x0, sp, #0x58
    25b0:	add	x1, sp, #0x1e0
    25b4:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    25b8:	ldr	w8, [sp, #304]
    25bc:	cbnz	w8, 2d40 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x2228>
    25c0:	ldr	x19, [sp, #88]
    25c4:	ldr	w8, [sp, #96]
    25c8:	sub	x9, x29, #0xf0
    25cc:	add	x9, x9, #0x10
    25d0:	sub	x0, x29, #0xf0
    25d4:	add	x2, x19, x8, lsl #3
    25d8:	mov	x1, x19
    25dc:	stur	x9, [x29, #-240]
    25e0:	stur	d8, [x29, #-232]
    25e4:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    25e8:	ldur	w1, [x29, #-232]
    25ec:	cbz	w1, 2d60 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x2248>
    25f0:	ldr	x8, [x19]
    25f4:	ldr	x0, [x8]
    25f8:	cbz	x0, 2ad8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1fc0>
    25fc:	ldrb	w9, [x0, #8]
    2600:	cmp	w9, #0xf
    2604:	b.ne	2af4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1fdc>  // b.any
    2608:	ldr	x19, [x8, #40]
    260c:	bl	0 <_ZN4llvm9ArrayType3getEPNS_4TypeEm>
    2610:	ldur	x1, [x29, #-240]
    2614:	ldur	w2, [x29, #-232]
    2618:	bl	0 <_ZN4llvm13ConstantArray3getEPNS_9ArrayTypeENS_8ArrayRefIPNS_8ConstantEEE>
    261c:	mov	x20, x0
    2620:	mov	w0, #0x58                  	// #88
    2624:	mov	w1, #0x1                   	// #1
    2628:	bl	0 <_ZN4llvm4UsernwEmj>
    262c:	mov	x23, x0
    2630:	ldr	x0, [x29, #8]
    2634:	ldr	x24, [x20]
    2638:	bl	0 <_ZNK4llvm5Value7getNameEv>
    263c:	stp	x0, x1, [x29, #-256]
    2640:	add	x0, sp, #0x210
    2644:	sub	x1, x29, #0x100
    2648:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    264c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2650:	add	x1, x1, #0x0
    2654:	add	x0, sp, #0x1f0
    2658:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    265c:	ldrb	w8, [sp, #544]
    2660:	cbz	w8, 2684 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1b6c>
    2664:	ldrb	w9, [sp, #512]
    2668:	cbz	w9, 2684 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1b6c>
    266c:	cmp	w8, #0x1
    2670:	b.ne	2694 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1b7c>  // b.any
    2674:	add	x9, sp, #0x190
    2678:	ldr	q0, [x9, #96]
    267c:	ldr	x8, [sp, #512]
    2680:	b	26a8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1b90>
    2684:	mov	w8, #0x100                 	// #256
    2688:	stp	xzr, xzr, [sp, #400]
    268c:	strh	w8, [sp, #416]
    2690:	b	2714 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1bfc>
    2694:	cmp	w9, #0x1
    2698:	b.ne	26d8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1bc0>  // b.any
    269c:	add	x9, sp, #0x190
    26a0:	ldr	q0, [x9, #128]
    26a4:	ldr	x8, [sp, #544]
    26a8:	str	q0, [x9]
    26ac:	str	x8, [sp, #416]
    26b0:	b	2714 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1bfc>
    26b4:	mov	w1, #0x1                   	// #1
    26b8:	mov	x0, x19
    26bc:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    26c0:	mov	x1, x0
    26c4:	mov	x0, x19
    26c8:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    26cc:	mov	x0, x19
    26d0:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    26d4:	b	2790 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1c78>
    26d8:	ldrb	w10, [sp, #545]
    26dc:	ldr	x11, [sp, #528]
    26e0:	ldrb	w14, [sp, #513]
    26e4:	ldr	x15, [sp, #496]
    26e8:	mov	w12, #0x2                   	// #2
    26ec:	add	x13, sp, #0x210
    26f0:	cmp	w10, #0x1
    26f4:	add	x16, sp, #0x1f0
    26f8:	csel	w2, w8, w12, eq  // eq = none
    26fc:	csel	x1, x11, x13, eq  // eq = none
    2700:	cmp	w14, #0x1
    2704:	csel	w4, w9, w12, eq  // eq = none
    2708:	csel	x3, x15, x16, eq  // eq = none
    270c:	add	x0, sp, #0x190
    2710:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2714:	add	x6, sp, #0x190
    2718:	mov	w3, #0x1                   	// #1
    271c:	mov	w4, #0x8                   	// #8
    2720:	mov	x0, x23
    2724:	mov	x1, x19
    2728:	mov	x2, x24
    272c:	mov	x5, x20
    2730:	mov	x7, xzr
    2734:	strb	wzr, [sp, #16]
    2738:	str	wzr, [sp, #8]
    273c:	str	wzr, [sp]
    2740:	bl	0 <_ZN4llvm14GlobalVariableC1ERNS_6ModuleEPNS_4TypeEbNS_11GlobalValue12LinkageTypesEPNS_8ConstantERKNS_5TwineEPS0_NS5_15ThreadLocalModeEjb>
    2744:	ldr	x0, [x29, #8]
    2748:	bl	0 <_ZNK4llvm8Function10getContextEv>
    274c:	mov	w1, wzr
    2750:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
    2754:	mov	x1, x0
    2758:	mov	x0, x23
    275c:	bl	0 <_ZN4llvm12ConstantExpr14getPointerCastEPNS_8ConstantEPNS_4TypeE>
    2760:	mov	x19, x0
    2764:	add	x0, sp, #0x88
    2768:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    276c:	mov	w1, #0x3                   	// #3
    2770:	mov	x2, x19
    2774:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2778:	ldur	x0, [x29, #-240]
    277c:	sub	x8, x29, #0xf0
    2780:	add	x8, x8, #0x10
    2784:	cmp	x0, x8
    2788:	b.eq	2790 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1c78>  // b.none
    278c:	bl	0 <free>
    2790:	ldr	x0, [x29, #8]
    2794:	add	x1, sp, #0x88
    2798:	mov	x2, xzr
    279c:	bl	2d9c <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE>
    27a0:	ldr	w8, [sp, #152]
    27a4:	cbz	w8, 27d0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1cb8>
    27a8:	ldr	x19, [sp, #144]
    27ac:	lsl	x20, x8, #3
    27b0:	ldr	x0, [x19], #8
    27b4:	ldr	x2, [sp, #320]
    27b8:	add	x1, sp, #0x88
    27bc:	mov	w3, wzr
    27c0:	mov	x4, x27
    27c4:	bl	4414 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE>
    27c8:	subs	x20, x20, #0x8
    27cc:	b.ne	27b0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1c98>  // b.any
    27d0:	ldr	x19, [x29, #8]
    27d4:	mov	x0, x19
    27d8:	bl	2f6c <_ZL16postSplitCleanupRN4llvm8FunctionE>
    27dc:	ldr	x1, [sp, #88]
    27e0:	ldr	w2, [sp, #96]
    27e4:	mov	x0, x19
    27e8:	mov	x3, x27
    27ec:	mov	x4, x26
    27f0:	bl	0 <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE>
    27f4:	ldr	x0, [sp, #88]
    27f8:	add	x8, sp, #0x58
    27fc:	add	x8, x8, #0x10
    2800:	cmp	x0, x8
    2804:	b.eq	280c <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1cf4>  // b.none
    2808:	bl	0 <free>
    280c:	ldr	x0, [sp, #272]
    2810:	add	x8, x22, #0x88
    2814:	add	x8, x8, #0x10
    2818:	cmp	x0, x8
    281c:	b.eq	2824 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1d0c>  // b.none
    2820:	bl	0 <free>
    2824:	ldr	x0, [sp, #224]
    2828:	add	x8, x25, #0x10
    282c:	add	x19, x22, #0x38
    2830:	cmp	x0, x8
    2834:	b.eq	283c <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1d24>  // b.none
    2838:	bl	0 <free>
    283c:	ldr	x0, [sp, #192]
    2840:	add	x8, x19, #0x10
    2844:	add	x19, x22, #0x8
    2848:	cmp	x0, x8
    284c:	b.eq	2854 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1d3c>  // b.none
    2850:	bl	0 <free>
    2854:	ldr	x0, [sp, #144]
    2858:	add	x8, x19, #0x10
    285c:	cmp	x0, x8
    2860:	b.eq	2868 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1d50>  // b.none
    2864:	bl	0 <free>
    2868:	add	x0, sp, #0x178
    286c:	bl	0 <_ZN4llvm21PrettyStackTraceEntryD2Ev>
    2870:	add	sp, sp, #0x330
    2874:	ldp	x20, x19, [sp, #112]
    2878:	ldp	x22, x21, [sp, #96]
    287c:	ldp	x24, x23, [sp, #80]
    2880:	ldp	x26, x25, [sp, #64]
    2884:	ldp	x28, x27, [sp, #48]
    2888:	ldp	x29, x30, [sp, #32]
    288c:	ldp	d9, d8, [sp, #16]
    2890:	ldr	d10, [sp], #128
    2894:	ret
    2898:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    289c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    28a0:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    28a4:	add	x0, x0, #0x0
    28a8:	add	x1, x1, #0x0
    28ac:	add	x3, x3, #0x0
    28b0:	mov	w2, #0x69                  	// #105
    28b4:	bl	0 <__assert_fail>
    28b8:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    28bc:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    28c0:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    28c4:	add	x0, x0, #0x0
    28c8:	add	x1, x1, #0x0
    28cc:	add	x3, x3, #0x0
    28d0:	mov	w2, #0x8d                  	// #141
    28d4:	bl	0 <__assert_fail>
    28d8:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    28dc:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    28e0:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    28e4:	add	x0, x0, #0x0
    28e8:	add	x1, x1, #0x0
    28ec:	add	x3, x3, #0x0
    28f0:	mov	w2, #0x95                  	// #149
    28f4:	bl	0 <__assert_fail>
    28f8:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    28fc:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2900:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2904:	add	x0, x0, #0x0
    2908:	add	x1, x1, #0x0
    290c:	add	x3, x3, #0x0
    2910:	mov	w2, #0x108                 	// #264
    2914:	bl	0 <__assert_fail>
    2918:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    291c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2920:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2924:	add	x0, x0, #0x0
    2928:	add	x1, x1, #0x0
    292c:	add	x3, x3, #0x0
    2930:	mov	w2, #0x50                  	// #80
    2934:	bl	0 <__assert_fail>
    2938:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    293c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2940:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2944:	add	x0, x0, #0x0
    2948:	add	x1, x1, #0x0
    294c:	add	x3, x3, #0x0
    2950:	mov	w2, #0x126                 	// #294
    2954:	bl	0 <__assert_fail>
    2958:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    295c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2960:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2964:	add	x0, x0, #0x0
    2968:	add	x1, x1, #0x0
    296c:	add	x3, x3, #0x0
    2970:	b	28f0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1dd8>
    2974:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2978:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    297c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2980:	add	x0, x0, #0x0
    2984:	add	x1, x1, #0x0
    2988:	add	x3, x3, #0x0
    298c:	b	28b0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1d98>
    2990:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2994:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2998:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    299c:	add	x0, x0, #0x0
    29a0:	add	x1, x1, #0x0
    29a4:	add	x3, x3, #0x0
    29a8:	mov	w2, #0x8b                  	// #139
    29ac:	bl	0 <__assert_fail>
    29b0:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    29b4:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    29b8:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    29bc:	add	x0, x0, #0x0
    29c0:	add	x1, x1, #0x0
    29c4:	add	x3, x3, #0x0
    29c8:	b	28b0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1d98>
    29cc:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    29d0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    29d4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    29d8:	add	x0, x0, #0x0
    29dc:	add	x1, x1, #0x0
    29e0:	add	x3, x3, #0x0
    29e4:	b	28b0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1d98>
    29e8:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    29ec:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    29f0:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    29f4:	add	x0, x0, #0x0
    29f8:	add	x1, x1, #0x0
    29fc:	add	x3, x3, #0x0
    2a00:	b	2910 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1df8>
    2a04:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2a08:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2a0c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2a10:	add	x0, x0, #0x0
    2a14:	add	x1, x1, #0x0
    2a18:	add	x3, x3, #0x0
    2a1c:	b	2910 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1df8>
    2a20:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2a24:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2a28:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2a2c:	add	x0, x0, #0x0
    2a30:	add	x1, x1, #0x0
    2a34:	add	x3, x3, #0x0
    2a38:	b	2910 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1df8>
    2a3c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2a40:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2a44:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2a48:	add	x0, x0, #0x0
    2a4c:	add	x1, x1, #0x0
    2a50:	add	x3, x3, #0x0
    2a54:	mov	w2, #0x528                 	// #1320
    2a58:	bl	0 <__assert_fail>
    2a5c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2a60:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2a64:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2a68:	add	x0, x0, #0x0
    2a6c:	add	x1, x1, #0x0
    2a70:	add	x3, x3, #0x0
    2a74:	mov	w2, #0x7b                  	// #123
    2a78:	bl	0 <__assert_fail>
    2a7c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2a80:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2a84:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2a88:	add	x0, x0, #0x0
    2a8c:	add	x1, x1, #0x0
    2a90:	add	x3, x3, #0x0
    2a94:	mov	w2, #0x7c                  	// #124
    2a98:	bl	0 <__assert_fail>
    2a9c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2aa0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2aa4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2aa8:	add	x0, x0, #0x0
    2aac:	add	x1, x1, #0x0
    2ab0:	add	x3, x3, #0x0
    2ab4:	mov	w2, #0x7d                  	// #125
    2ab8:	bl	0 <__assert_fail>
    2abc:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2ac0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2ac4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2ac8:	add	x0, x0, #0x0
    2acc:	add	x1, x1, #0x0
    2ad0:	add	x3, x3, #0x0
    2ad4:	b	28b0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1d98>
    2ad8:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2adc:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2ae0:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2ae4:	add	x0, x0, #0x0
    2ae8:	add	x1, x1, #0x0
    2aec:	add	x3, x3, #0x0
    2af0:	b	28b0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1d98>
    2af4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2af8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2afc:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2b00:	add	x0, x0, #0x0
    2b04:	add	x1, x1, #0x0
    2b08:	add	x3, x3, #0x0
    2b0c:	b	2910 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1df8>
    2b10:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2b14:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2b18:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2b1c:	add	x0, x0, #0x0
    2b20:	add	x1, x1, #0x0
    2b24:	add	x3, x3, #0x0
    2b28:	b	2910 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1df8>
    2b2c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2b30:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2b34:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2b38:	add	x0, x0, #0x0
    2b3c:	add	x1, x1, #0x0
    2b40:	add	x3, x3, #0x0
    2b44:	b	28b0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1d98>
    2b48:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2b4c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2b50:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2b54:	add	x0, x0, #0x0
    2b58:	add	x1, x1, #0x0
    2b5c:	add	x3, x3, #0x0
    2b60:	mov	w2, #0x4b9                 	// #1209
    2b64:	bl	0 <__assert_fail>
    2b68:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2b6c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2b70:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2b74:	add	x0, x0, #0x0
    2b78:	add	x1, x1, #0x0
    2b7c:	add	x3, x3, #0x0
    2b80:	b	29a8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1e90>
    2b84:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2b88:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2b8c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2b90:	add	x0, x0, #0x0
    2b94:	add	x1, x1, #0x0
    2b98:	add	x3, x3, #0x0
    2b9c:	b	28b0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1d98>
    2ba0:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2ba4:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2ba8:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2bac:	add	x0, x0, #0x0
    2bb0:	add	x1, x1, #0x0
    2bb4:	add	x3, x3, #0x0
    2bb8:	mov	w2, #0x4ff                 	// #1279
    2bbc:	bl	0 <__assert_fail>
    2bc0:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2bc4:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2bc8:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2bcc:	add	x0, x0, #0x0
    2bd0:	add	x1, x1, #0x0
    2bd4:	add	x3, x3, #0x0
    2bd8:	b	28b0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1d98>
    2bdc:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2be0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2be4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2be8:	add	x0, x0, #0x0
    2bec:	add	x1, x1, #0x0
    2bf0:	add	x3, x3, #0x0
    2bf4:	b	2910 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1df8>
    2bf8:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2bfc:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2c00:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2c04:	add	x0, x0, #0x0
    2c08:	add	x1, x1, #0x0
    2c0c:	add	x3, x3, #0x0
    2c10:	mov	w2, #0x5b                  	// #91
    2c14:	bl	0 <__assert_fail>
    2c18:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2c1c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2c20:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2c24:	add	x0, x0, #0x0
    2c28:	add	x1, x1, #0x0
    2c2c:	add	x3, x3, #0x0
    2c30:	mov	w2, #0xfa                  	// #250
    2c34:	bl	0 <__assert_fail>
    2c38:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2c3c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2c40:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2c44:	add	x0, x0, #0x0
    2c48:	add	x1, x1, #0x0
    2c4c:	add	x3, x3, #0x0
    2c50:	b	28b0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1d98>
    2c54:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2c58:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2c5c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2c60:	add	x0, x0, #0x0
    2c64:	add	x1, x1, #0x0
    2c68:	add	x3, x3, #0x0
    2c6c:	b	2910 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1df8>
    2c70:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2c74:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2c78:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2c7c:	add	x0, x0, #0x0
    2c80:	add	x1, x1, #0x0
    2c84:	add	x3, x3, #0x0
    2c88:	mov	w2, #0x160                 	// #352
    2c8c:	bl	0 <__assert_fail>
    2c90:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2c94:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2c98:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2c9c:	add	x0, x0, #0x0
    2ca0:	add	x1, x1, #0x0
    2ca4:	add	x3, x3, #0x0
    2ca8:	b	2ab4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1f9c>
    2cac:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2cb0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2cb4:	add	x0, x0, #0x0
    2cb8:	add	x1, x1, #0x0
    2cbc:	mov	w2, #0x54a                 	// #1354
    2cc0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    2cc4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2cc8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2ccc:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2cd0:	add	x0, x0, #0x0
    2cd4:	add	x1, x1, #0x0
    2cd8:	add	x3, x3, #0x0
    2cdc:	b	2910 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1df8>
    2ce0:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2ce4:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2ce8:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2cec:	add	x0, x0, #0x0
    2cf0:	add	x1, x1, #0x0
    2cf4:	add	x3, x3, #0x0
    2cf8:	mov	w2, #0x52b                 	// #1323
    2cfc:	bl	0 <__assert_fail>
    2d00:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2d04:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2d08:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2d0c:	add	x0, x0, #0x0
    2d10:	add	x1, x1, #0x0
    2d14:	add	x3, x3, #0x0
    2d18:	mov	w2, #0x34e                 	// #846
    2d1c:	bl	0 <__assert_fail>
    2d20:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2d24:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2d28:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2d2c:	add	x0, x0, #0x0
    2d30:	add	x1, x1, #0x0
    2d34:	add	x3, x3, #0x0
    2d38:	mov	w2, #0x4a7                 	// #1191
    2d3c:	bl	0 <__assert_fail>
    2d40:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2d44:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2d48:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2d4c:	add	x0, x0, #0x0
    2d50:	add	x1, x1, #0x0
    2d54:	add	x3, x3, #0x0
    2d58:	mov	w2, #0x338                 	// #824
    2d5c:	bl	0 <__assert_fail>
    2d60:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2d64:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2d68:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2d6c:	add	x0, x0, #0x0
    2d70:	add	x1, x1, #0x0
    2d74:	add	x3, x3, #0x0
    2d78:	mov	w2, #0x33b                 	// #827
    2d7c:	bl	0 <__assert_fail>
    2d80:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2d84:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2d88:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2d8c:	add	x0, x0, #0x0
    2d90:	add	x1, x1, #0x0
    2d94:	add	x3, x3, #0x0
    2d98:	b	2910 <_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE+0x1df8>

0000000000002d9c <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE>:
    2d9c:	sub	sp, sp, #0xd0
    2da0:	stp	x29, x30, [sp, #128]
    2da4:	stp	x26, x25, [sp, #144]
    2da8:	stp	x24, x23, [sp, #160]
    2dac:	stp	x22, x21, [sp, #176]
    2db0:	stp	x20, x19, [sp, #192]
    2db4:	add	x29, sp, #0x80
    2db8:	sub	x8, x29, #0x8
    2dbc:	stp	x0, xzr, [x29, #-16]
    2dc0:	stur	x8, [x29, #-24]
    2dc4:	ldr	w8, [x1, #144]
    2dc8:	mov	x19, x1
    2dcc:	mov	x20, x2
    2dd0:	cbz	w8, 2ee8 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x14c>
    2dd4:	ldr	x25, [x19, #136]
    2dd8:	adrp	x21, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2ddc:	lsl	x26, x8, #3
    2de0:	add	x21, x21, #0x0
    2de4:	ldr	x23, [x25]
    2de8:	mov	x22, x23
    2dec:	cbz	x20, 2e14 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x78>
    2df0:	add	x1, sp, #0x20
    2df4:	mov	x0, x20
    2df8:	str	x23, [sp, #32]
    2dfc:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2e00:	ldr	x22, [x0, #16]
    2e04:	cbz	x22, 2f0c <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x170>
    2e08:	ldrb	w8, [x22, #16]
    2e0c:	cmp	w8, #0x50
    2e10:	b.ne	2f2c <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x190>  // b.any
    2e14:	add	x0, sp, #0x20
    2e18:	mov	x1, x22
    2e1c:	mov	x2, xzr
    2e20:	mov	x3, xzr
    2e24:	mov	x4, xzr
    2e28:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2e2c:	mov	x0, x23
    2e30:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2e34:	cbz	w0, 2e80 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0xe4>
    2e38:	mov	x0, x23
    2e3c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2e40:	cmp	w0, #0x1
    2e44:	b.ne	2f4c <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x1b0>  // b.any
    2e48:	mov	x0, x22
    2e4c:	mov	w1, wzr
    2e50:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2e54:	ldr	x1, [x0]
    2e58:	mov	x24, x0
    2e5c:	sub	x0, x29, #0x18
    2e60:	bl	48e4 <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE>
    2e64:	mov	x23, x0
    2e68:	add	x0, sp, #0x20
    2e6c:	mov	x1, x24
    2e70:	mov	x2, x23
    2e74:	mov	w3, wzr
    2e78:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2e7c:	b	2eb8 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x11c>
    2e80:	ldr	x23, [x23]
    2e84:	sub	x0, x29, #0x18
    2e88:	mov	x1, x23
    2e8c:	bl	48e4 <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE>
    2e90:	mov	x24, x0
    2e94:	add	x0, sp, #0x8
    2e98:	mov	x1, x21
    2e9c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2ea0:	add	x0, sp, #0x20
    2ea4:	add	x3, sp, #0x8
    2ea8:	mov	x1, x23
    2eac:	mov	x2, x24
    2eb0:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2eb4:	mov	x23, x0
    2eb8:	mov	x0, x22
    2ebc:	mov	x1, x23
    2ec0:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    2ec4:	mov	x0, x22
    2ec8:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    2ecc:	ldr	x1, [sp, #32]
    2ed0:	cbz	x1, 2edc <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x140>
    2ed4:	add	x0, sp, #0x20
    2ed8:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    2edc:	subs	x26, x26, #0x8
    2ee0:	add	x25, x25, #0x8
    2ee4:	b.ne	2de4 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x48>  // b.any
    2ee8:	cbnz	x20, 2ef0 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x154>
    2eec:	str	wzr, [x19, #144]
    2ef0:	ldp	x20, x19, [sp, #192]
    2ef4:	ldp	x22, x21, [sp, #176]
    2ef8:	ldp	x24, x23, [sp, #160]
    2efc:	ldp	x26, x25, [sp, #144]
    2f00:	ldp	x29, x30, [sp, #128]
    2f04:	add	sp, sp, #0xd0
    2f08:	ret
    2f0c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2f10:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2f14:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2f18:	add	x0, x0, #0x0
    2f1c:	add	x1, x1, #0x0
    2f20:	add	x3, x3, #0x0
    2f24:	mov	w2, #0x5b                  	// #91
    2f28:	bl	0 <__assert_fail>
    2f2c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2f30:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2f34:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2f38:	add	x0, x0, #0x0
    2f3c:	add	x1, x1, #0x0
    2f40:	add	x3, x3, #0x0
    2f44:	mov	w2, #0x101                 	// #257
    2f48:	bl	0 <__assert_fail>
    2f4c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2f50:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2f54:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2f58:	add	x0, x0, #0x0
    2f5c:	add	x1, x1, #0x0
    2f60:	add	x3, x3, #0x0
    2f64:	mov	w2, #0x21b                 	// #539
    2f68:	bl	0 <__assert_fail>

0000000000002f6c <_ZL16postSplitCleanupRN4llvm8FunctionE>:
    2f6c:	sub	sp, sp, #0x80
    2f70:	stp	x29, x30, [sp, #96]
    2f74:	str	x19, [sp, #112]
    2f78:	add	x29, sp, #0x60
    2f7c:	mov	x1, xzr
    2f80:	mov	x2, xzr
    2f84:	mov	x19, x0
    2f88:	bl	0 <_ZN4llvm23removeUnreachableBlocksERNS_8FunctionEPNS_14DomTreeUpdaterEPNS_16MemorySSAUpdaterE>
    2f8c:	mov	x0, x19
    2f90:	mov	x1, xzr
    2f94:	bl	0 <_ZN4llvm14verifyFunctionERKNS_8FunctionEPNS_11raw_ostreamE>
    2f98:	ldr	x1, [x19, #40]
    2f9c:	sub	x0, x29, #0x18
    2fa0:	bl	0 <_ZN4llvm6legacy19FunctionPassManagerC1EPNS_6ModuleE>
    2fa4:	bl	0 <_ZN4llvm14createSCCPPassEv>
    2fa8:	mov	x1, x0
    2fac:	sub	x0, x29, #0x18
    2fb0:	bl	0 <_ZN4llvm6legacy19FunctionPassManager3addEPNS_4PassE>
    2fb4:	add	x5, sp, #0x28
    2fb8:	mov	w0, #0x1                   	// #1
    2fbc:	mov	w3, #0x1                   	// #1
    2fc0:	mov	w1, wzr
    2fc4:	mov	w2, wzr
    2fc8:	mov	w4, wzr
    2fcc:	str	xzr, [sp, #56]
    2fd0:	bl	0 <_ZN4llvm27createCFGSimplificationPassEjbbbbSt8functionIFbRKNS_8FunctionEEE>
    2fd4:	mov	x1, x0
    2fd8:	sub	x0, x29, #0x18
    2fdc:	bl	0 <_ZN4llvm6legacy19FunctionPassManager3addEPNS_4PassE>
    2fe0:	ldr	x8, [sp, #56]
    2fe4:	cbz	x8, 2ff8 <_ZL16postSplitCleanupRN4llvm8FunctionE+0x8c>
    2fe8:	add	x0, sp, #0x28
    2fec:	add	x1, sp, #0x28
    2ff0:	mov	w2, #0x3                   	// #3
    2ff4:	blr	x8
    2ff8:	mov	w0, wzr
    2ffc:	bl	0 <_ZN4llvm18createEarlyCSEPassEb>
    3000:	mov	x1, x0
    3004:	sub	x0, x29, #0x18
    3008:	bl	0 <_ZN4llvm6legacy19FunctionPassManager3addEPNS_4PassE>
    300c:	add	x5, sp, #0x8
    3010:	mov	w0, #0x1                   	// #1
    3014:	mov	w3, #0x1                   	// #1
    3018:	mov	w1, wzr
    301c:	mov	w2, wzr
    3020:	mov	w4, wzr
    3024:	str	xzr, [sp, #24]
    3028:	bl	0 <_ZN4llvm27createCFGSimplificationPassEjbbbbSt8functionIFbRKNS_8FunctionEEE>
    302c:	mov	x1, x0
    3030:	sub	x0, x29, #0x18
    3034:	bl	0 <_ZN4llvm6legacy19FunctionPassManager3addEPNS_4PassE>
    3038:	ldr	x8, [sp, #24]
    303c:	cbz	x8, 3050 <_ZL16postSplitCleanupRN4llvm8FunctionE+0xe4>
    3040:	add	x0, sp, #0x8
    3044:	add	x1, sp, #0x8
    3048:	mov	w2, #0x3                   	// #3
    304c:	blr	x8
    3050:	sub	x0, x29, #0x18
    3054:	bl	0 <_ZN4llvm6legacy19FunctionPassManager16doInitializationEv>
    3058:	sub	x0, x29, #0x18
    305c:	mov	x1, x19
    3060:	bl	0 <_ZN4llvm6legacy19FunctionPassManager3runERNS_8FunctionE>
    3064:	sub	x0, x29, #0x18
    3068:	bl	0 <_ZN4llvm6legacy19FunctionPassManager14doFinalizationEv>
    306c:	sub	x0, x29, #0x18
    3070:	bl	0 <_ZN4llvm6legacy19FunctionPassManagerD1Ev>
    3074:	ldr	x19, [sp, #112]
    3078:	ldp	x29, x30, [sp, #96]
    307c:	add	sp, sp, #0x80
    3080:	ret

0000000000003084 <_ZN12_GLOBAL__N_124PrettyStackTraceFunctionD0Ev>:
    3084:	stp	x29, x30, [sp, #-32]!
    3088:	str	x19, [sp, #16]
    308c:	mov	x29, sp
    3090:	mov	x19, x0
    3094:	bl	0 <_ZN4llvm21PrettyStackTraceEntryD2Ev>
    3098:	mov	x0, x19
    309c:	ldr	x19, [sp, #16]
    30a0:	ldp	x29, x30, [sp], #32
    30a4:	b	0 <_ZdlPv>

00000000000030a8 <_ZNK12_GLOBAL__N_124PrettyStackTraceFunction5printERN4llvm11raw_ostreamE>:
    30a8:	stp	x29, x30, [sp, #-32]!
    30ac:	stp	x20, x19, [sp, #16]
    30b0:	mov	x29, sp
    30b4:	mov	x19, x1
    30b8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    30bc:	mov	x20, x0
    30c0:	add	x1, x1, #0x0
    30c4:	mov	w2, #0x1a                  	// #26
    30c8:	mov	x0, x19
    30cc:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    30d0:	ldr	x0, [x20, #16]
    30d4:	mov	x1, x19
    30d8:	mov	w2, wzr
    30dc:	ldr	x3, [x0, #40]
    30e0:	bl	0 <_ZNK4llvm5Value14printAsOperandERNS_11raw_ostreamEbPKNS_6ModuleE>
    30e4:	mov	x0, x19
    30e8:	ldp	x20, x19, [sp, #16]
    30ec:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    30f0:	add	x1, x1, #0x0
    30f4:	mov	w2, #0x1                   	// #1
    30f8:	ldp	x29, x30, [sp], #32
    30fc:	b	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>

0000000000003100 <_ZL22hasCallsInBlockBetweenPN4llvm11InstructionES1_>:
    3100:	stp	x29, x30, [sp, #-32]!
    3104:	stp	x20, x19, [sp, #16]
    3108:	mov	x29, sp
    310c:	cmp	x0, x1
    3110:	b.eq	3170 <_ZL22hasCallsInBlockBetweenPN4llvm11InstructionES1_+0x70>  // b.none
    3114:	mov	x19, x1
    3118:	mov	x20, x0
    311c:	cbz	x20, 3188 <_ZL22hasCallsInBlockBetweenPN4llvm11InstructionES1_+0x88>
    3120:	ldrb	w8, [x20, #16]
    3124:	cmp	w8, #0x50
    3128:	b.ne	3144 <_ZL22hasCallsInBlockBetweenPN4llvm11InstructionES1_+0x44>  // b.any
    312c:	ldur	x8, [x20, #-24]
    3130:	cbz	x8, 3144 <_ZL22hasCallsInBlockBetweenPN4llvm11InstructionES1_+0x44>
    3134:	ldrb	w9, [x8, #16]
    3138:	cbnz	w9, 3144 <_ZL22hasCallsInBlockBetweenPN4llvm11InstructionES1_+0x44>
    313c:	ldrb	w8, [x8, #33]
    3140:	tbnz	w8, #5, 3154 <_ZL22hasCallsInBlockBetweenPN4llvm11InstructionES1_+0x54>
    3144:	mov	x0, x20
    3148:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    314c:	cmp	x0, #0x7
    3150:	b.hi	3178 <_ZL22hasCallsInBlockBetweenPN4llvm11InstructionES1_+0x78>  // b.pmore
    3154:	ldr	x8, [x20, #40]
    3158:	mov	x1, x20
    315c:	add	x0, x8, #0x28
    3160:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3164:	mov	x20, x0
    3168:	cmp	x0, x19
    316c:	b.ne	311c <_ZL22hasCallsInBlockBetweenPN4llvm11InstructionES1_+0x1c>  // b.any
    3170:	mov	w0, wzr
    3174:	b	317c <_ZL22hasCallsInBlockBetweenPN4llvm11InstructionES1_+0x7c>
    3178:	mov	w0, #0x1                   	// #1
    317c:	ldp	x20, x19, [sp, #16]
    3180:	ldp	x29, x30, [sp], #32
    3184:	ret
    3188:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    318c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3190:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3194:	add	x0, x0, #0x0
    3198:	add	x1, x1, #0x0
    319c:	add	x3, x3, #0x0
    31a0:	mov	w2, #0x69                  	// #105
    31a4:	bl	0 <__assert_fail>

00000000000031a8 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE>:
    31a8:	sub	sp, sp, #0x120
    31ac:	stp	x29, x30, [sp, #224]
    31b0:	str	x28, [sp, #240]
    31b4:	stp	x22, x21, [sp, #256]
    31b8:	stp	x20, x19, [sp, #272]
    31bc:	add	x29, sp, #0xe0
    31c0:	add	x22, sp, #0x8
    31c4:	add	x19, x22, #0x28
    31c8:	mov	x21, x0
    31cc:	stp	x0, xzr, [sp, #8]
    31d0:	stp	x1, x2, [sp, #24]
    31d4:	mov	w1, #0x40                  	// #64
    31d8:	mov	x0, x19
    31dc:	mov	x20, x2
    31e0:	str	w3, [sp, #40]
    31e4:	str	xzr, [sp, #48]
    31e8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    31ec:	mov	x0, x21
    31f0:	strb	wzr, [sp, #80]
    31f4:	strb	wzr, [sp, #112]
    31f8:	bl	0 <_ZNK4llvm8Function10getContextEv>
    31fc:	mov	w8, #0x200                 	// #512
    3200:	stp	x0, xzr, [sp, #152]
    3204:	str	wzr, [sp, #168]
    3208:	strb	wzr, [sp, #174]
    320c:	stp	xzr, xzr, [sp, #136]
    3210:	str	xzr, [sp, #128]
    3214:	stp	xzr, xzr, [sp, #176]
    3218:	stp	xzr, xzr, [sp, #208]
    321c:	strh	w8, [sp, #172]
    3220:	str	xzr, [sp, #200]
    3224:	ldr	w8, [x20, #168]
    3228:	cbnz	w8, 32a4 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0xfc>
    322c:	add	x0, sp, #0x8
    3230:	add	x21, sp, #0x8
    3234:	bl	32e4 <_ZN12_GLOBAL__N_110CoroCloner6createEv>
    3238:	ldr	x20, [sp, #16]
    323c:	cbz	x20, 32c4 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0x11c>
    3240:	ldr	x1, [sp, #128]
    3244:	cbz	x1, 3250 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0xa8>
    3248:	add	x0, x21, #0x78
    324c:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    3250:	ldrb	w8, [sp, #112]
    3254:	cbz	w8, 3278 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0xd0>
    3258:	add	x0, x22, #0x48
    325c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3260:	ldr	x0, [sp, #88]
    3264:	bl	0 <_ZdlPv>
    3268:	ldr	x8, [sp, #80]
    326c:	strb	wzr, [sp, #112]
    3270:	add	x8, x8, #0x1
    3274:	str	x8, [sp, #80]
    3278:	mov	x0, x19
    327c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3280:	ldr	x0, [sp, #56]
    3284:	bl	0 <_ZdlPv>
    3288:	mov	x0, x20
    328c:	ldp	x20, x19, [sp, #272]
    3290:	ldp	x22, x21, [sp, #256]
    3294:	ldr	x28, [sp, #240]
    3298:	ldp	x29, x30, [sp, #224]
    329c:	add	sp, sp, #0x120
    32a0:	ret
    32a4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    32a8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    32ac:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    32b0:	add	x0, x0, #0x0
    32b4:	add	x1, x1, #0x0
    32b8:	add	x3, x3, #0x0
    32bc:	mov	w2, #0x71                  	// #113
    32c0:	bl	0 <__assert_fail>
    32c4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    32c8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    32cc:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    32d0:	add	x0, x0, #0x0
    32d4:	add	x1, x1, #0x0
    32d8:	add	x3, x3, #0x0
    32dc:	mov	w2, #0x81                  	// #129
    32e0:	bl	0 <__assert_fail>

00000000000032e4 <_ZN12_GLOBAL__N_110CoroCloner6createEv>:
    32e4:	sub	sp, sp, #0x150
    32e8:	stp	x29, x30, [sp, #240]
    32ec:	stp	x28, x27, [sp, #256]
    32f0:	stp	x26, x25, [sp, #272]
    32f4:	stp	x24, x23, [sp, #288]
    32f8:	stp	x22, x21, [sp, #304]
    32fc:	stp	x20, x19, [sp, #320]
    3300:	add	x29, sp, #0xf0
    3304:	ldr	x8, [x0, #8]
    3308:	mov	x19, x0
    330c:	cbnz	x8, 3328 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x44>
    3310:	ldr	x0, [x19]
    3314:	ldp	x2, x1, [x19, #16]
    3318:	ldr	x8, [x0, #40]
    331c:	add	x3, x8, #0x18
    3320:	bl	4278 <_ZL22createCloneDeclarationRN4llvm8FunctionERNS_4coro5ShapeERKNS_5TwineENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS0_Lb1ELb0EvEELb0ELb0EEE>
    3324:	str	x0, [x19, #8]
    3328:	ldr	x0, [x19]
    332c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3330:	cmp	x0, x1
    3334:	b.eq	3378 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x94>  // b.none
    3338:	mov	x22, x0
    333c:	mov	x20, x1
    3340:	add	x21, x19, #0x28
    3344:	mov	x24, x0
    3348:	ldr	x0, [x24], #40
    334c:	bl	0 <_ZN4llvm10UndefValue3getEPNS_4TypeE>
    3350:	mov	x23, x0
    3354:	add	x1, sp, #0x10
    3358:	mov	x0, x21
    335c:	str	x22, [sp, #16]
    3360:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3364:	mov	x1, x23
    3368:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    336c:	cmp	x20, x24
    3370:	mov	x22, x24
    3374:	b.ne	3348 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x64>  // b.any
    3378:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    337c:	ldr	d0, [x8]
    3380:	sub	x8, x29, #0x68
    3384:	add	x8, x8, #0x10
    3388:	stur	x8, [x29, #-104]
    338c:	stur	d0, [x29, #-96]
    3390:	ldr	x8, [x19, #8]
    3394:	add	x20, x19, #0x28
    3398:	adrp	x5, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    339c:	add	x5, x5, #0x0
    33a0:	ldr	w23, [x8, #32]
    33a4:	sub	x4, x29, #0x68
    33a8:	mov	w3, #0x1                   	// #1
    33ac:	mov	x2, x20
    33b0:	and	w9, w23, #0xfffffff0
    33b4:	tst	w23, #0x30
    33b8:	orr	w10, w9, #0x4000
    33bc:	csel	w9, w9, w10, eq  // eq = none
    33c0:	str	w9, [x8, #32]
    33c4:	ldp	x1, x0, [x19]
    33c8:	mov	x6, xzr
    33cc:	mov	x7, xzr
    33d0:	ubfx	w21, w23, #4, #2
    33d4:	and	w22, w23, #0xf
    33d8:	str	xzr, [sp]
    33dc:	bl	0 <_ZN4llvm17CloneFunctionIntoEPNS_8FunctionEPKS0_RNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS7_NS_3sys10SmartMutexILb0EEEEEEEbRNS_15SmallVectorImplIPNS_10ReturnInstEEEPKcPNS_14ClonedCodeInfoEPNS_20ValueMapTypeRemapperEPNS_17ValueMaterializerE>
    33e0:	ldr	x0, [x19, #8]
    33e4:	mov	w1, w22
    33e8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    33ec:	ldr	x0, [x19, #8]
    33f0:	mov	w1, w21
    33f4:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    33f8:	ldr	x8, [x19, #8]
    33fc:	lsr	w10, w23, #6
    3400:	ldr	w9, [x8, #32]
    3404:	bfi	w9, w10, #6, #2
    3408:	str	w9, [x8, #32]
    340c:	ldr	x8, [x19, #8]
    3410:	lsr	w10, w23, #8
    3414:	ldr	w9, [x8, #32]
    3418:	bfi	w9, w10, #8, #2
    341c:	str	w9, [x8, #32]
    3420:	ldr	x0, [x19, #8]
    3424:	bl	0 <_ZNK4llvm8Function10getContextEv>
    3428:	ldr	x8, [x19, #8]
    342c:	mov	x21, x0
    3430:	ldr	x8, [x8, #112]
    3434:	str	xzr, [sp, #120]
    3438:	stur	x8, [x29, #-112]
    343c:	ldr	x8, [x19, #24]
    3440:	ldr	w9, [x8, #168]
    3444:	sub	w10, w9, #0x1
    3448:	cmp	w10, #0x2
    344c:	b.cs	3460 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x17c>  // b.hs, b.nlast
    3450:	ldr	x8, [x8, #200]
    3454:	ldr	x8, [x8, #112]
    3458:	str	x8, [sp, #120]
    345c:	b	34a0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1bc>
    3460:	cbnz	w9, 34a0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1bc>
    3464:	sub	x0, x29, #0x70
    3468:	bl	0 <_ZNK4llvm13AttributeList15getFnAttributesEv>
    346c:	mov	x1, x0
    3470:	add	x0, sp, #0x10
    3474:	add	x22, sp, #0x10
    3478:	bl	0 <_ZN4llvm11AttrBuilderC1ENS_12AttributeSetE>
    347c:	add	x0, sp, #0x78
    3480:	add	x3, sp, #0x10
    3484:	mov	w2, #0xffffffff            	// #-1
    3488:	mov	x1, x21
    348c:	bl	0 <_ZNK4llvm13AttributeList13addAttributesERNS_11LLVMContextEjRKNS_11AttrBuilderE>
    3490:	ldr	x1, [sp, #48]
    3494:	str	x0, [sp, #120]
    3498:	add	x0, x22, #0x10
    349c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    34a0:	add	x0, sp, #0x78
    34a4:	mov	w2, #0x1                   	// #1
    34a8:	mov	w3, #0x23                  	// #35
    34ac:	mov	x1, x21
    34b0:	bl	0 <_ZNK4llvm13AttributeList12addAttributeERNS_11LLVMContextEjNS_9Attribute8AttrKindE>
    34b4:	str	x0, [sp, #120]
    34b8:	add	x0, sp, #0x78
    34bc:	mov	w2, #0x1                   	// #1
    34c0:	mov	w3, #0x15                  	// #21
    34c4:	mov	x1, x21
    34c8:	bl	0 <_ZNK4llvm13AttributeList12addAttributeERNS_11LLVMContextEjNS_9Attribute8AttrKindE>
    34cc:	str	x0, [sp, #120]
    34d0:	ldr	x8, [x19, #24]
    34d4:	ldr	w8, [x8, #168]
    34d8:	orr	w8, w8, #0x2
    34dc:	cmp	w8, #0x2
    34e0:	b.ne	3518 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x234>  // b.any
    34e4:	ldur	w8, [x29, #-96]
    34e8:	cbz	w8, 3518 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x234>
    34ec:	ldur	x21, [x29, #-104]
    34f0:	lsl	x22, x8, #3
    34f4:	ldr	x0, [x21], #8
    34f8:	mov	w1, wzr
    34fc:	mov	w2, wzr
    3500:	mov	x3, xzr
    3504:	mov	x4, xzr
    3508:	bl	0 <_ZN4llvm19changeToUnreachableEPNS_11InstructionEbbPNS_14DomTreeUpdaterEPNS_16MemorySSAUpdaterE>
    350c:	subs	x22, x22, #0x8
    3510:	b.ne	34f4 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x210>  // b.any
    3514:	ldr	x0, [sp, #120]
    3518:	ldr	x8, [x19, #8]
    351c:	str	x0, [x8, #112]
    3520:	ldr	x0, [x19, #24]
    3524:	ldr	x21, [x19, #8]
    3528:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    352c:	cmp	w0, #0x400
    3530:	b.cs	40a0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xdbc>  // b.hs, b.nlast
    3534:	ldrh	w8, [x21, #18]
    3538:	add	x1, sp, #0x10
    353c:	and	w8, w8, #0xffffc00f
    3540:	orr	w8, w8, w0, lsl #4
    3544:	strh	w8, [x21, #18]
    3548:	ldr	x8, [x19, #24]
    354c:	mov	x0, x20
    3550:	ldr	x8, [x8, #192]
    3554:	str	x8, [sp, #16]
    3558:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    355c:	ldr	x22, [x0, #16]
    3560:	cbz	x22, 4068 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xd84>
    3564:	ldrb	w8, [x22, #16]
    3568:	cmp	w8, #0x12
    356c:	b.ne	4084 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xda0>  // b.any
    3570:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3574:	add	x1, x1, #0x0
    3578:	sub	x0, x29, #0x18
    357c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3580:	ldurb	w9, [x29, #-8]
    3584:	cbz	w9, 35b0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x2cc>
    3588:	ldr	x3, [x19, #16]
    358c:	ldrb	w8, [x3, #16]
    3590:	cbz	w8, 35b0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x2cc>
    3594:	cmp	w9, #0x1
    3598:	b.ne	3b28 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x844>  // b.any
    359c:	ldr	x8, [x3, #16]
    35a0:	ldr	q0, [x3]
    35a4:	str	x8, [sp, #32]
    35a8:	str	q0, [sp, #16]
    35ac:	b	35bc <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x2d8>
    35b0:	mov	w8, #0x100                 	// #256
    35b4:	stp	xzr, xzr, [sp, #16]
    35b8:	strh	w8, [sp, #32]
    35bc:	add	x1, sp, #0x10
    35c0:	mov	x0, x22
    35c4:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
    35c8:	ldr	x8, [x19, #8]
    35cc:	add	x0, x8, #0x48
    35d0:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    35d4:	mov	x1, x0
    35d8:	mov	x0, x22
    35dc:	bl	0 <_ZN4llvm10BasicBlock10moveBeforeEPS0_>
    35e0:	mov	x0, x22
    35e4:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
    35e8:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    35ec:	mov	x0, x22
    35f0:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    35f4:	ldr	x8, [x22, #8]
    35f8:	cbz	x8, 402c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xd48>
    35fc:	ldr	x8, [x8, #8]
    3600:	cbnz	x8, 402c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xd48>
    3604:	mov	x0, x22
    3608:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    360c:	ldr	x8, [x22, #8]
    3610:	add	x0, sp, #0x10
    3614:	str	x8, [sp, #16]
    3618:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    361c:	cbz	x0, 40c0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xddc>
    3620:	ldrb	w8, [x0, #16]
    3624:	mov	x23, x0
    3628:	cmp	w8, #0x1a
    362c:	b.ne	40dc <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xdf8>  // b.any
    3630:	ldr	w8, [x23, #20]
    3634:	and	w8, w8, #0xfffffff
    3638:	cmp	w8, #0x1
    363c:	b.ne	40f8 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xe14>  // b.any
    3640:	add	x21, x19, #0x78
    3644:	mov	x0, x21
    3648:	mov	x1, x23
    364c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3650:	mov	x0, x21
    3654:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3658:	mov	x0, x23
    365c:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    3660:	ldr	x8, [x19, #24]
    3664:	add	x9, x22, #0x28
    3668:	stp	x22, x9, [x19, #128]
    366c:	ldr	w9, [x8, #168]
    3670:	sub	w10, w9, #0x1
    3674:	cmp	w10, #0x2
    3678:	b.cs	3704 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x420>  // b.hs, b.nlast
    367c:	ldr	x8, [x19, #208]
    3680:	add	x1, sp, #0x10
    3684:	mov	x0, x20
    3688:	str	x8, [sp, #16]
    368c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3690:	ldr	x1, [x0, #16]
    3694:	cbz	x1, 414c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xe68>
    3698:	ldrb	w8, [x1, #16]
    369c:	cmp	w8, #0x50
    36a0:	b.ne	4010 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xd2c>  // b.any
    36a4:	ldur	x8, [x1, #-24]
    36a8:	cbz	x8, 4010 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xd2c>
    36ac:	ldrb	w9, [x8, #16]
    36b0:	cbnz	w9, 4010 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xd2c>
    36b4:	ldrb	w9, [x8, #33]
    36b8:	tbz	w9, #5, 4010 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xd2c>
    36bc:	ldr	w8, [x8, #36]
    36c0:	cmp	w8, #0x24
    36c4:	b.ne	4010 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xd2c>  // b.any
    36c8:	ldr	x8, [x1, #40]
    36cc:	add	x0, x8, #0x28
    36d0:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    36d4:	cbz	x0, 4168 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xe84>
    36d8:	ldrb	w8, [x0, #16]
    36dc:	cmp	w8, #0x1a
    36e0:	b.ne	4184 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xea0>  // b.any
    36e4:	ldr	w8, [x0, #20]
    36e8:	and	w8, w8, #0xfffffff
    36ec:	cmp	w8, #0x1
    36f0:	b.ne	41a4 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xec0>  // b.any
    36f4:	mov	w1, wzr
    36f8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    36fc:	mov	x1, x0
    3700:	b	3730 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x44c>
    3704:	cbnz	w9, 3738 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x454>
    3708:	ldr	x8, [x8, #216]
    370c:	add	x1, sp, #0x10
    3710:	mov	x0, x20
    3714:	str	x8, [sp, #16]
    3718:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    371c:	ldr	x1, [x0, #16]
    3720:	cbz	x1, 4068 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xd84>
    3724:	ldrb	w8, [x1, #16]
    3728:	cmp	w8, #0x12
    372c:	b.ne	4084 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xda0>  // b.any
    3730:	mov	x0, x21
    3734:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3738:	ldr	x8, [x19, #8]
    373c:	add	x0, x8, #0x48
    3740:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3744:	add	x0, x0, #0x28
    3748:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    374c:	mov	x1, x0
    3750:	mov	x0, x21
    3754:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3758:	ldr	x8, [x19, #24]
    375c:	ldr	w9, [x8, #168]
    3760:	sub	w10, w9, #0x1
    3764:	cmp	w10, #0x2
    3768:	b.cs	37d0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x4ec>  // b.hs, b.nlast
    376c:	ldr	x22, [x19, #8]
    3770:	ldrb	w9, [x22, #18]
    3774:	tbz	w9, #0, 3784 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x4a0>
    3778:	mov	x0, x22
    377c:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
    3780:	ldr	x8, [x19, #24]
    3784:	ldr	x0, [x8, #176]
    3788:	ldr	x22, [x22, #88]
    378c:	mov	w1, wzr
    3790:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
    3794:	ldr	x8, [x19, #24]
    3798:	mov	x23, x0
    379c:	ldrb	w8, [x8, #232]
    37a0:	cbz	w8, 37f0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x50c>
    37a4:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    37a8:	add	x1, x1, #0x0
    37ac:	add	x0, sp, #0x10
    37b0:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    37b4:	add	x4, sp, #0x10
    37b8:	mov	w1, #0x31                  	// #49
    37bc:	mov	x0, x21
    37c0:	mov	x2, x22
    37c4:	mov	x3, x23
    37c8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    37cc:	b	384c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x568>
    37d0:	cbnz	w9, 4118 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xe34>
    37d4:	ldr	x22, [x19, #8]
    37d8:	ldrb	w8, [x22, #18]
    37dc:	tbz	w8, #0, 37e8 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x504>
    37e0:	mov	x0, x22
    37e4:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
    37e8:	ldr	x0, [x22, #88]
    37ec:	b	384c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x568>
    37f0:	mov	x0, x23
    37f4:	mov	w1, wzr
    37f8:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
    37fc:	adrp	x24, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3800:	add	x24, x24, #0x0
    3804:	mov	x23, x0
    3808:	add	x0, sp, #0x10
    380c:	mov	x1, x24
    3810:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3814:	add	x4, sp, #0x10
    3818:	mov	w1, #0x31                  	// #49
    381c:	mov	x0, x21
    3820:	mov	x2, x22
    3824:	mov	x3, x23
    3828:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    382c:	mov	x22, x0
    3830:	add	x0, sp, #0x10
    3834:	mov	x1, x24
    3838:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    383c:	add	x2, sp, #0x10
    3840:	mov	x0, x21
    3844:	mov	x1, x22
    3848:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    384c:	ldr	x8, [x19, #24]
    3850:	str	x0, [x19, #192]
    3854:	add	x1, sp, #0x10
    3858:	mov	x0, x20
    385c:	ldr	x8, [x8, #184]
    3860:	str	x8, [sp, #16]
    3864:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3868:	ldr	x22, [x0, #16]
    386c:	ldr	x0, [x19, #192]
    3870:	mov	x1, x22
    3874:	bl	0 <_ZN4llvm5Value8takeNameEPS0_>
    3878:	ldr	x1, [x19, #192]
    387c:	mov	x0, x22
    3880:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    3884:	ldr	x0, [x19, #144]
    3888:	ldr	x22, [x19, #192]
    388c:	mov	w1, wzr
    3890:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
    3894:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3898:	mov	x23, x0
    389c:	add	x1, x1, #0x0
    38a0:	add	x0, sp, #0x10
    38a4:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    38a8:	add	x4, sp, #0x10
    38ac:	mov	w1, #0x31                  	// #49
    38b0:	mov	x0, x21
    38b4:	mov	x2, x22
    38b8:	mov	x3, x23
    38bc:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    38c0:	ldr	x8, [x19, #24]
    38c4:	mov	x22, x0
    38c8:	add	x1, sp, #0x10
    38cc:	mov	x0, x20
    38d0:	ldr	x8, [x8]
    38d4:	str	x8, [sp, #16]
    38d8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    38dc:	ldr	x0, [x0, #16]
    38e0:	cbz	x0, 4130 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xe4c>
    38e4:	mov	x1, x22
    38e8:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    38ec:	ldr	x8, [x19, #24]
    38f0:	ldr	w9, [x8, #168]
    38f4:	sub	w10, w9, #0x1
    38f8:	cmp	w10, #0x2
    38fc:	b.cs	399c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x6b8>  // b.hs, b.nlast
    3900:	ldr	x8, [x19, #208]
    3904:	cbz	x8, 41c4 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xee0>
    3908:	add	x1, sp, #0x10
    390c:	mov	x0, x20
    3910:	str	x8, [sp, #16]
    3914:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3918:	mov	w8, #0x6                   	// #6
    391c:	stp	x8, xzr, [x29, #-24]
    3920:	ldr	x22, [x0, #16]
    3924:	add	x8, x22, #0x10
    3928:	cmp	x8, #0x10
    392c:	stur	x22, [x29, #-8]
    3930:	b.hi	394c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x668>  // b.pmore
    3934:	mov	w9, #0x1                   	// #1
    3938:	lsl	x8, x9, x8
    393c:	mov	w9, #0x101                 	// #257
    3940:	movk	w9, #0x1, lsl #16
    3944:	tst	x8, x9
    3948:	b.ne	3960 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x67c>  // b.any
    394c:	ldr	x8, [x0]
    3950:	sub	x0, x29, #0x18
    3954:	and	x1, x8, #0xfffffffffffffff8
    3958:	bl	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
    395c:	ldur	x22, [x29, #-8]
    3960:	mov	x0, x22
    3964:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    3968:	ldr	x8, [x22, #8]
    396c:	cbz	x8, 3d48 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xa64>
    3970:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3974:	ldr	d0, [x8]
    3978:	add	x8, sp, #0x10
    397c:	add	x8, x8, #0x10
    3980:	str	x8, [sp, #16]
    3984:	str	d0, [sp, #24]
    3988:	ldr	x22, [x19, #8]
    398c:	ldrb	w8, [x22, #18]
    3990:	tbnz	w8, #0, 3b44 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x860>
    3994:	ldr	x24, [x22, #88]
    3998:	b	3b68 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x884>
    399c:	cbnz	w9, 3d78 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xa94>
    39a0:	ldrb	w9, [x8, #224]
    39a4:	cbz	w9, 3d78 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xa94>
    39a8:	ldr	x8, [x8, #200]
    39ac:	add	x1, sp, #0x10
    39b0:	mov	x0, x20
    39b4:	str	x8, [sp, #16]
    39b8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    39bc:	ldr	x24, [x0, #16]
    39c0:	cbz	x24, 4220 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xf3c>
    39c4:	ldrb	w8, [x24, #16]
    39c8:	cmp	w8, #0x1b
    39cc:	b.ne	423c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xf58>  // b.any
    39d0:	ldr	w8, [x24, #20]
    39d4:	add	x0, sp, #0x10
    39d8:	mov	w1, #0x1                   	// #1
    39dc:	ubfx	w8, w8, #1, #27
    39e0:	sub	w8, w8, #0x1
    39e4:	stp	x24, x8, [sp, #16]
    39e8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    39ec:	ldp	x8, x9, [sp, #16]
    39f0:	sub	x0, x29, #0x18
    39f4:	stp	x8, x9, [x29, #-24]
    39f8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    39fc:	ldp	x1, x2, [x29, #-24]
    3a00:	mov	x22, x0
    3a04:	mov	x0, x24
    3a08:	bl	0 <_ZN4llvm10SwitchInst10removeCaseENS0_16CaseIteratorImplINS0_10CaseHandleEEE>
    3a0c:	mov	x0, x19
    3a10:	bl	43d0 <_ZN12_GLOBAL__N_110CoroCloner23isSwitchDestroyFunctionEv>
    3a14:	tbz	w0, #0, 3d78 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xa94>
    3a18:	ldr	x23, [x24, #40]
    3a1c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3a20:	add	x1, x1, #0x0
    3a24:	add	x0, sp, #0x10
    3a28:	add	x24, x24, #0x18
    3a2c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3a30:	add	x2, sp, #0x10
    3a34:	mov	x0, x23
    3a38:	mov	x1, x24
    3a3c:	bl	0 <_ZN4llvm10BasicBlock15splitBasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEERKNS_5TwineE>
    3a40:	mov	x24, x0
    3a44:	mov	x0, x23
    3a48:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
    3a4c:	mov	x1, x0
    3a50:	mov	x0, x21
    3a54:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3a58:	ldr	x8, [x19, #24]
    3a5c:	ldr	x26, [x19, #192]
    3a60:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3a64:	add	x1, x1, #0x0
    3a68:	ldr	x25, [x8, #176]
    3a6c:	add	x0, sp, #0x10
    3a70:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3a74:	add	x5, sp, #0x10
    3a78:	mov	x0, x21
    3a7c:	mov	x1, x25
    3a80:	mov	x2, x26
    3a84:	mov	w3, wzr
    3a88:	mov	w4, wzr
    3a8c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3a90:	ldr	x8, [x19, #24]
    3a94:	mov	x25, x0
    3a98:	mov	x0, x8
    3a9c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3aa0:	adrp	x27, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3aa4:	add	x27, x27, #0x0
    3aa8:	mov	x26, x0
    3aac:	add	x0, sp, #0x10
    3ab0:	mov	x1, x27
    3ab4:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3ab8:	add	x3, sp, #0x10
    3abc:	mov	x0, x21
    3ac0:	mov	x1, x26
    3ac4:	mov	x2, x25
    3ac8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3acc:	mov	x25, x0
    3ad0:	add	x0, sp, #0x10
    3ad4:	mov	x1, x27
    3ad8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3adc:	ldr	x0, [x25]
    3ae0:	bl	0 <_ZN4llvm8Constant12getNullValueEPNS_4TypeE>
    3ae4:	mov	x3, x0
    3ae8:	add	x4, sp, #0x10
    3aec:	mov	w1, #0x20                  	// #32
    3af0:	mov	x0, x21
    3af4:	mov	x2, x25
    3af8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3afc:	mov	x1, x0
    3b00:	mov	x0, x21
    3b04:	mov	x2, x22
    3b08:	mov	x3, x24
    3b0c:	mov	x4, xzr
    3b10:	mov	x5, xzr
    3b14:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3b18:	mov	x0, x23
    3b1c:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
    3b20:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    3b24:	b	3d78 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xa94>
    3b28:	cmp	w8, #0x1
    3b2c:	b.ne	3ce4 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xa00>  // b.any
    3b30:	ldur	q0, [x29, #-24]
    3b34:	ldur	x8, [x29, #-8]
    3b38:	str	q0, [sp, #16]
    3b3c:	str	x8, [sp, #32]
    3b40:	b	35bc <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x2d8>
    3b44:	mov	x0, x22
    3b48:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
    3b4c:	ldr	x23, [x19, #8]
    3b50:	ldr	x24, [x22, #88]
    3b54:	ldrb	w8, [x23, #18]
    3b58:	tbz	w8, #0, 3b64 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x880>
    3b5c:	mov	x0, x23
    3b60:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
    3b64:	mov	x22, x23
    3b68:	ldp	x8, x9, [x22, #88]
    3b6c:	mov	w10, #0x28                  	// #40
    3b70:	add	x23, x24, #0x28
    3b74:	madd	x22, x9, x10, x8
    3b78:	cmp	x23, x22
    3b7c:	b.eq	3b9c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x8b8>  // b.none
    3b80:	add	x0, sp, #0x10
    3b84:	sub	x1, x29, #0x38
    3b88:	stur	x23, [x29, #-56]
    3b8c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3b90:	add	x23, x23, #0x28
    3b94:	cmp	x22, x23
    3b98:	b.ne	3b80 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x89c>  // b.any
    3b9c:	ldur	x23, [x29, #-8]
    3ba0:	ldr	x8, [x23]
    3ba4:	cbz	x8, 4200 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xf1c>
    3ba8:	ldrb	w8, [x8, #8]
    3bac:	cmp	w8, #0xd
    3bb0:	b.ne	3c20 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x93c>  // b.any
    3bb4:	mov	x0, x23
    3bb8:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    3bbc:	ldr	x23, [x23, #8]
    3bc0:	cbz	x23, 3c38 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x954>
    3bc4:	mov	x0, x23
    3bc8:	ldr	x23, [x23, #8]
    3bcc:	bl	0 <_ZNK4llvm3Use7getUserEv>
    3bd0:	cbz	x0, 3ff4 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xd10>
    3bd4:	ldrb	w8, [x0, #16]
    3bd8:	mov	x22, x0
    3bdc:	cmp	w8, #0x58
    3be0:	b.ne	3bc0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x8dc>  // b.any
    3be4:	ldr	w8, [x22, #64]
    3be8:	cmp	w8, #0x1
    3bec:	b.ne	3bc0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x8dc>  // b.any
    3bf0:	ldr	x8, [x22, #56]
    3bf4:	ldr	w9, [sp, #24]
    3bf8:	ldr	w8, [x8]
    3bfc:	cmp	w9, w8
    3c00:	b.ls	3cc4 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x9e0>  // b.plast
    3c04:	ldr	x9, [sp, #16]
    3c08:	mov	x0, x22
    3c0c:	ldr	x1, [x9, x8, lsl #3]
    3c10:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    3c14:	mov	x0, x22
    3c18:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    3c1c:	b	3bc0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x8dc>
    3c20:	ldr	w8, [sp, #24]
    3c24:	cmp	w8, #0x1
    3c28:	b.ne	4258 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xf74>  // b.any
    3c2c:	ldr	x8, [sp, #16]
    3c30:	ldr	x22, [x8]
    3c34:	b	3d24 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xa40>
    3c38:	ldur	x22, [x29, #-8]
    3c3c:	mov	x0, x22
    3c40:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    3c44:	ldr	x8, [x22, #8]
    3c48:	cbz	x8, 3d30 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xa4c>
    3c4c:	ldur	x8, [x29, #-8]
    3c50:	ldr	x0, [x8]
    3c54:	bl	0 <_ZN4llvm10UndefValue3getEPNS_4TypeE>
    3c58:	ldr	w8, [sp, #24]
    3c5c:	mov	x22, x0
    3c60:	cbz	w8, 3d20 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xa3c>
    3c64:	adrp	x23, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3c68:	mov	x25, xzr
    3c6c:	sub	x26, x8, #0x1
    3c70:	add	x23, x23, #0x0
    3c74:	ldr	x8, [sp, #16]
    3c78:	sub	x0, x29, #0x38
    3c7c:	mov	x1, x23
    3c80:	ldr	x24, [x8, x25, lsl #3]
    3c84:	stur	w25, [x29, #-28]
    3c88:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3c8c:	sub	x3, x29, #0x1c
    3c90:	sub	x5, x29, #0x38
    3c94:	mov	w4, #0x1                   	// #1
    3c98:	mov	x0, x21
    3c9c:	mov	x1, x22
    3ca0:	mov	x2, x24
    3ca4:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3ca8:	cmp	x26, x25
    3cac:	mov	x22, x0
    3cb0:	b.eq	3d20 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xa3c>  // b.none
    3cb4:	ldr	w8, [sp, #24]
    3cb8:	add	x25, x25, #0x1
    3cbc:	cmp	x25, x8
    3cc0:	b.cc	3c74 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x990>  // b.lo, b.ul, b.last
    3cc4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3cc8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3ccc:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3cd0:	add	x0, x0, #0x0
    3cd4:	add	x1, x1, #0x0
    3cd8:	add	x3, x3, #0x0
    3cdc:	mov	w2, #0x95                  	// #149
    3ce0:	bl	0 <__assert_fail>
    3ce4:	ldurb	w10, [x29, #-7]
    3ce8:	ldur	x11, [x29, #-24]
    3cec:	ldrb	w13, [x3, #17]
    3cf0:	mov	w4, #0x2                   	// #2
    3cf4:	sub	x12, x29, #0x18
    3cf8:	cmp	w10, #0x1
    3cfc:	csel	w2, w9, w4, eq  // eq = none
    3d00:	csel	x1, x11, x12, eq  // eq = none
    3d04:	cmp	w13, #0x1
    3d08:	b.ne	3d14 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xa30>  // b.any
    3d0c:	ldr	x3, [x3]
    3d10:	mov	w4, w8
    3d14:	add	x0, sp, #0x10
    3d18:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3d1c:	b	35bc <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x2d8>
    3d20:	ldur	x23, [x29, #-8]
    3d24:	mov	x0, x23
    3d28:	mov	x1, x22
    3d2c:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    3d30:	ldr	x0, [sp, #16]
    3d34:	add	x8, sp, #0x10
    3d38:	add	x8, x8, #0x10
    3d3c:	cmp	x0, x8
    3d40:	b.eq	3d48 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xa64>  // b.none
    3d44:	bl	0 <free>
    3d48:	ldur	x8, [x29, #-8]
    3d4c:	add	x8, x8, #0x10
    3d50:	cmp	x8, #0x10
    3d54:	b.hi	3d70 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xa8c>  // b.pmore
    3d58:	mov	w9, #0x1                   	// #1
    3d5c:	lsl	x8, x9, x8
    3d60:	mov	w9, #0x101                 	// #257
    3d64:	movk	w9, #0x1, lsl #16
    3d68:	tst	x8, x9
    3d6c:	b.ne	3d78 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xa94>  // b.any
    3d70:	sub	x0, x29, #0x18
    3d74:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
    3d78:	ldr	x1, [x19, #24]
    3d7c:	ldr	w8, [x1, #168]
    3d80:	sub	w9, w8, #0x1
    3d84:	cmp	w9, #0x2
    3d88:	b.cc	3e4c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xb68>  // b.lo, b.ul, b.last
    3d8c:	cbnz	w8, 3dbc <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xad8>
    3d90:	mov	x0, x19
    3d94:	bl	43d0 <_ZN12_GLOBAL__N_110CoroCloner23isSwitchDestroyFunctionEv>
    3d98:	ldr	x8, [x19, #144]
    3d9c:	mov	w21, w0
    3da0:	mov	x0, x8
    3da4:	bl	0 <_ZN4llvm4Type9getInt8TyERNS_11LLVMContextE>
    3da8:	and	x1, x21, #0x1
    3dac:	mov	w2, wzr
    3db0:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
    3db4:	ldr	x1, [x19, #24]
    3db8:	mov	x21, x0
    3dbc:	ldr	w8, [x1, #96]
    3dc0:	cbz	w8, 3e4c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xb68>
    3dc4:	ldr	x23, [x1, #88]
    3dc8:	lsl	x24, x8, #3
    3dcc:	ldr	x8, [x23]
    3dd0:	ldr	x9, [x19, #208]
    3dd4:	cmp	x8, x9
    3dd8:	b.eq	3e3c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xb58>  // b.none
    3ddc:	add	x1, sp, #0x10
    3de0:	mov	x0, x20
    3de4:	str	x8, [sp, #16]
    3de8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3dec:	ldr	x22, [x0, #16]
    3df0:	cbz	x22, 3fd4 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xcf0>
    3df4:	ldrb	w8, [x22, #16]
    3df8:	cmp	w8, #0x50
    3dfc:	b.ne	3f98 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xcb4>  // b.any
    3e00:	ldur	x8, [x22, #-24]
    3e04:	cbz	x8, 3f98 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xcb4>
    3e08:	ldrb	w9, [x8, #16]
    3e0c:	cbnz	w9, 3f98 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xcb4>
    3e10:	ldrb	w9, [x8, #33]
    3e14:	tbz	w9, #5, 3f98 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xcb4>
    3e18:	ldr	w8, [x8, #36]
    3e1c:	sub	w8, w8, #0x23
    3e20:	cmp	w8, #0x2
    3e24:	b.cs	3f98 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xcb4>  // b.hs, b.nlast
    3e28:	mov	x0, x22
    3e2c:	mov	x1, x21
    3e30:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    3e34:	mov	x0, x22
    3e38:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    3e3c:	subs	x24, x24, #0x8
    3e40:	add	x23, x23, #0x8
    3e44:	b.ne	3dcc <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xae8>  // b.any
    3e48:	ldr	x1, [x19, #24]
    3e4c:	ldr	x0, [x19, #8]
    3e50:	mov	x2, x20
    3e54:	bl	2d9c <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE>
    3e58:	ldr	x8, [x19, #24]
    3e5c:	ldr	w9, [x8, #16]
    3e60:	cbz	w9, 3edc <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xbf8>
    3e64:	ldr	x21, [x8, #8]
    3e68:	lsl	x22, x9, #3
    3e6c:	ldr	x8, [x21]
    3e70:	add	x1, sp, #0x10
    3e74:	mov	x0, x20
    3e78:	str	x8, [sp, #16]
    3e7c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3e80:	ldr	x0, [x0, #16]
    3e84:	cbz	x0, 3fb8 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xcd4>
    3e88:	ldrb	w8, [x0, #16]
    3e8c:	cmp	w8, #0x50
    3e90:	b.ne	3f7c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xc98>  // b.any
    3e94:	ldur	x8, [x0, #-24]
    3e98:	cbz	x8, 3f7c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xc98>
    3e9c:	ldrb	w9, [x8, #16]
    3ea0:	cbnz	w9, 3f7c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xc98>
    3ea4:	ldrb	w9, [x8, #33]
    3ea8:	tbz	w9, #5, 3f7c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xc98>
    3eac:	ldr	w8, [x8, #36]
    3eb0:	cmp	w8, #0x15
    3eb4:	b.ne	3f7c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xc98>  // b.any
    3eb8:	ldr	x1, [x19, #24]
    3ebc:	ldr	x2, [x19, #192]
    3ec0:	mov	w3, #0x1                   	// #1
    3ec4:	mov	x4, xzr
    3ec8:	bl	4414 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE>
    3ecc:	subs	x22, x22, #0x8
    3ed0:	add	x21, x21, #0x8
    3ed4:	b.ne	3e6c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xb88>  // b.any
    3ed8:	ldr	x8, [x19, #24]
    3edc:	ldr	w9, [x8, #168]
    3ee0:	cbnz	w9, 3f44 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xc60>
    3ee4:	ldr	x0, [x8]
    3ee8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3eec:	str	x0, [sp, #16]
    3ef0:	add	x1, sp, #0x10
    3ef4:	mov	x0, x20
    3ef8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3efc:	ldr	x0, [x0, #16]
    3f00:	cbz	x0, 41e4 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xf00>
    3f04:	ldrb	w8, [x0, #16]
    3f08:	cmp	w8, #0x50
    3f0c:	b.ne	404c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xd68>  // b.any
    3f10:	ldur	x8, [x0, #-24]
    3f14:	cbz	x8, 404c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xd68>
    3f18:	ldrb	w9, [x8, #16]
    3f1c:	cbnz	w9, 404c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xd68>
    3f20:	ldrb	w9, [x8, #33]
    3f24:	tbz	w9, #5, 404c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xd68>
    3f28:	ldr	w8, [x8, #36]
    3f2c:	cmp	w8, #0x18
    3f30:	b.ne	404c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xd68>  // b.any
    3f34:	ldr	w8, [x19, #32]
    3f38:	cmp	w8, #0x2
    3f3c:	cset	w1, eq  // eq = none
    3f40:	bl	0 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb>
    3f44:	ldur	x0, [x29, #-104]
    3f48:	sub	x8, x29, #0x68
    3f4c:	add	x8, x8, #0x10
    3f50:	cmp	x0, x8
    3f54:	b.eq	3f5c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xc78>  // b.none
    3f58:	bl	0 <free>
    3f5c:	ldp	x20, x19, [sp, #320]
    3f60:	ldp	x22, x21, [sp, #304]
    3f64:	ldp	x24, x23, [sp, #288]
    3f68:	ldp	x26, x25, [sp, #272]
    3f6c:	ldp	x28, x27, [sp, #256]
    3f70:	ldp	x29, x30, [sp, #240]
    3f74:	add	sp, sp, #0x150
    3f78:	ret
    3f7c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3f80:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3f84:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3f88:	add	x0, x0, #0x0
    3f8c:	add	x1, x1, #0x0
    3f90:	add	x3, x3, #0x0
    3f94:	b	3fb0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xccc>
    3f98:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3f9c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3fa0:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3fa4:	add	x0, x0, #0x0
    3fa8:	add	x1, x1, #0x0
    3fac:	add	x3, x3, #0x0
    3fb0:	mov	w2, #0x101                 	// #257
    3fb4:	bl	0 <__assert_fail>
    3fb8:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3fbc:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3fc0:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3fc4:	add	x0, x0, #0x0
    3fc8:	add	x1, x1, #0x0
    3fcc:	add	x3, x3, #0x0
    3fd0:	b	3fec <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xd08>
    3fd4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3fd8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3fdc:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3fe0:	add	x0, x0, #0x0
    3fe4:	add	x1, x1, #0x0
    3fe8:	add	x3, x3, #0x0
    3fec:	mov	w2, #0x5b                  	// #91
    3ff0:	bl	0 <__assert_fail>
    3ff4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3ff8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3ffc:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4000:	add	x0, x0, #0x0
    4004:	add	x1, x1, #0x0
    4008:	add	x3, x3, #0x0
    400c:	b	4218 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xf34>
    4010:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4014:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4018:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    401c:	add	x0, x0, #0x0
    4020:	add	x1, x1, #0x0
    4024:	add	x3, x3, #0x0
    4028:	b	3fb0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xccc>
    402c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4030:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4034:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4038:	add	x0, x0, #0x0
    403c:	add	x1, x1, #0x0
    4040:	add	x3, x3, #0x0
    4044:	mov	w2, #0x23f                 	// #575
    4048:	bl	0 <__assert_fail>
    404c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4050:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4054:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4058:	add	x0, x0, #0x0
    405c:	add	x1, x1, #0x0
    4060:	add	x3, x3, #0x0
    4064:	b	3fb0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xccc>
    4068:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    406c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4070:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4074:	add	x0, x0, #0x0
    4078:	add	x1, x1, #0x0
    407c:	add	x3, x3, #0x0
    4080:	b	3fec <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xd08>
    4084:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4088:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    408c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4090:	add	x0, x0, #0x0
    4094:	add	x1, x1, #0x0
    4098:	add	x3, x3, #0x0
    409c:	b	3fb0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xccc>
    40a0:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    40a4:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    40a8:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    40ac:	add	x0, x0, #0x0
    40b0:	add	x1, x1, #0x0
    40b4:	add	x3, x3, #0x0
    40b8:	mov	w2, #0xda                  	// #218
    40bc:	bl	0 <__assert_fail>
    40c0:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    40c4:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    40c8:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    40cc:	add	x0, x0, #0x0
    40d0:	add	x1, x1, #0x0
    40d4:	add	x3, x3, #0x0
    40d8:	b	4218 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xf34>
    40dc:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    40e0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    40e4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    40e8:	add	x0, x0, #0x0
    40ec:	add	x1, x1, #0x0
    40f0:	add	x3, x3, #0x0
    40f4:	b	419c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xeb8>
    40f8:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    40fc:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4100:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4104:	add	x0, x0, #0x0
    4108:	add	x1, x1, #0x0
    410c:	add	x3, x3, #0x0
    4110:	mov	w2, #0x241                 	// #577
    4114:	bl	0 <__assert_fail>
    4118:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    411c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4120:	add	x0, x0, #0x0
    4124:	add	x1, x1, #0x0
    4128:	mov	w2, #0x27c                 	// #636
    412c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    4130:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4134:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4138:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    413c:	add	x0, x0, #0x0
    4140:	add	x1, x1, #0x0
    4144:	add	x3, x3, #0x0
    4148:	b	3fec <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xd08>
    414c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4150:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4154:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4158:	add	x0, x0, #0x0
    415c:	add	x1, x1, #0x0
    4160:	add	x3, x3, #0x0
    4164:	b	3fec <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xd08>
    4168:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    416c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4170:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4174:	add	x0, x0, #0x0
    4178:	add	x1, x1, #0x0
    417c:	add	x3, x3, #0x0
    4180:	b	4218 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xf34>
    4184:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4188:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    418c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4190:	add	x0, x0, #0x0
    4194:	add	x1, x1, #0x0
    4198:	add	x3, x3, #0x0
    419c:	mov	w2, #0x108                 	// #264
    41a0:	bl	0 <__assert_fail>
    41a4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    41a8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    41ac:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    41b0:	add	x0, x0, #0x0
    41b4:	add	x1, x1, #0x0
    41b8:	add	x3, x3, #0x0
    41bc:	mov	w2, #0x25c                 	// #604
    41c0:	bl	0 <__assert_fail>
    41c4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    41c8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    41cc:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    41d0:	add	x0, x0, #0x0
    41d4:	add	x1, x1, #0x0
    41d8:	add	x3, x3, #0x0
    41dc:	mov	w2, #0x2f2                 	// #754
    41e0:	bl	0 <__assert_fail>
    41e4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    41e8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    41ec:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    41f0:	add	x0, x0, #0x0
    41f4:	add	x1, x1, #0x0
    41f8:	add	x3, x3, #0x0
    41fc:	b	3fec <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xd08>
    4200:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4204:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4208:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    420c:	add	x0, x0, #0x0
    4210:	add	x1, x1, #0x0
    4214:	add	x3, x3, #0x0
    4218:	mov	w2, #0x69                  	// #105
    421c:	bl	0 <__assert_fail>
    4220:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4224:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4228:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    422c:	add	x0, x0, #0x0
    4230:	add	x1, x1, #0x0
    4234:	add	x3, x3, #0x0
    4238:	b	3fec <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xd08>
    423c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4240:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4244:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4248:	add	x0, x0, #0x0
    424c:	add	x1, x1, #0x0
    4250:	add	x3, x3, #0x0
    4254:	b	3fb0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xccc>
    4258:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    425c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4260:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4264:	add	x0, x0, #0x0
    4268:	add	x1, x1, #0x0
    426c:	add	x3, x3, #0x0
    4270:	mov	w2, #0x1b0                 	// #432
    4274:	bl	0 <__assert_fail>

0000000000004278 <_ZL22createCloneDeclarationRN4llvm8FunctionERNS_4coro5ShapeERKNS_5TwineENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS0_Lb1ELb0EvEELb0ELb0EEE>:
    4278:	sub	sp, sp, #0x90
    427c:	stp	x29, x30, [sp, #80]
    4280:	str	x23, [sp, #96]
    4284:	stp	x22, x21, [sp, #112]
    4288:	stp	x20, x19, [sp, #128]
    428c:	add	x29, sp, #0x50
    4290:	ldr	x23, [x0, #40]
    4294:	mov	x22, x0
    4298:	mov	x0, x1
    429c:	mov	x19, x3
    42a0:	mov	x21, x2
    42a4:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    42a8:	mov	x20, x0
    42ac:	mov	x0, x22
    42b0:	bl	0 <_ZNK4llvm5Value7getNameEv>
    42b4:	stp	x0, x1, [sp, #8]
    42b8:	add	x0, sp, #0x18
    42bc:	add	x1, sp, #0x8
    42c0:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    42c4:	ldrb	w9, [sp, #40]
    42c8:	cbz	w9, 42f0 <_ZL22createCloneDeclarationRN4llvm8FunctionERNS_4coro5ShapeERKNS_5TwineENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS0_Lb1ELb0EvEELb0ELb0EEE+0x78>
    42cc:	ldrb	w8, [x21, #16]
    42d0:	cbz	w8, 42f0 <_ZL22createCloneDeclarationRN4llvm8FunctionERNS_4coro5ShapeERKNS_5TwineENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS0_Lb1ELb0EvEELb0ELb0EEE+0x78>
    42d4:	cmp	w9, #0x1
    42d8:	b.ne	4374 <_ZL22createCloneDeclarationRN4llvm8FunctionERNS_4coro5ShapeERKNS_5TwineENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS0_Lb1ELb0EvEELb0ELb0EEE+0xfc>  // b.any
    42dc:	ldr	x8, [x21, #16]
    42e0:	ldr	q0, [x21]
    42e4:	stur	x8, [x29, #-16]
    42e8:	stur	q0, [x29, #-32]
    42ec:	b	42fc <_ZL22createCloneDeclarationRN4llvm8FunctionERNS_4coro5ShapeERKNS_5TwineENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS0_Lb1ELb0EvEELb0ELb0EEE+0x84>
    42f0:	mov	w8, #0x100                 	// #256
    42f4:	stp	xzr, xzr, [x29, #-32]
    42f8:	sturh	w8, [x29, #-16]
    42fc:	mov	w0, #0x78                  	// #120
    4300:	bl	0 <_ZN4llvm4UsernwEm>
    4304:	sub	x4, x29, #0x20
    4308:	mov	w2, #0x7                   	// #7
    430c:	mov	w3, #0xffffffff            	// #-1
    4310:	mov	x1, x20
    4314:	mov	x5, xzr
    4318:	mov	x21, x0
    431c:	bl	0 <_ZN4llvm8FunctionC1EPNS_12FunctionTypeENS_11GlobalValue12LinkageTypesEjRKNS_5TwineEPNS_6ModuleE>
    4320:	mov	w2, #0x23                  	// #35
    4324:	mov	x0, x21
    4328:	mov	w1, wzr
    432c:	bl	0 <_ZN4llvm8Function12addParamAttrEjNS_9Attribute8AttrKindE>
    4330:	mov	w2, #0x15                  	// #21
    4334:	mov	x0, x21
    4338:	mov	w1, wzr
    433c:	bl	0 <_ZN4llvm8Function12addParamAttrEjNS_9Attribute8AttrKindE>
    4340:	add	x0, x23, #0x18
    4344:	mov	x1, x21
    4348:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_8FunctionEE13addNodeToListEPS1_>
    434c:	add	x1, x21, #0x38
    4350:	mov	x0, x19
    4354:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4358:	mov	x0, x21
    435c:	ldp	x20, x19, [sp, #128]
    4360:	ldp	x22, x21, [sp, #112]
    4364:	ldr	x23, [sp, #96]
    4368:	ldp	x29, x30, [sp, #80]
    436c:	add	sp, sp, #0x90
    4370:	ret
    4374:	cmp	w8, #0x1
    4378:	b.ne	4390 <_ZL22createCloneDeclarationRN4llvm8FunctionERNS_4coro5ShapeERKNS_5TwineENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS0_Lb1ELb0EvEELb0ELb0EEE+0x118>  // b.any
    437c:	ldur	q0, [sp, #24]
    4380:	ldr	x8, [sp, #40]
    4384:	stur	q0, [x29, #-32]
    4388:	stur	x8, [x29, #-16]
    438c:	b	42fc <_ZL22createCloneDeclarationRN4llvm8FunctionERNS_4coro5ShapeERKNS_5TwineENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS0_Lb1ELb0EvEELb0ELb0EEE+0x84>
    4390:	ldrb	w10, [sp, #41]
    4394:	ldr	x11, [sp, #24]
    4398:	ldrb	w13, [x21, #17]
    439c:	mov	w4, #0x2                   	// #2
    43a0:	add	x12, sp, #0x18
    43a4:	cmp	w10, #0x1
    43a8:	csel	w2, w9, w4, eq  // eq = none
    43ac:	csel	x1, x11, x12, eq  // eq = none
    43b0:	cmp	w13, #0x1
    43b4:	b.ne	43c0 <_ZL22createCloneDeclarationRN4llvm8FunctionERNS_4coro5ShapeERKNS_5TwineENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS0_Lb1ELb0EvEELb0ELb0EEE+0x148>  // b.any
    43b8:	ldr	x21, [x21]
    43bc:	mov	w4, w8
    43c0:	sub	x0, x29, #0x20
    43c4:	mov	x3, x21
    43c8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    43cc:	b	42fc <_ZL22createCloneDeclarationRN4llvm8FunctionERNS_4coro5ShapeERKNS_5TwineENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS0_Lb1ELb0EvEELb0ELb0EEE+0x84>

00000000000043d0 <_ZN12_GLOBAL__N_110CoroCloner23isSwitchDestroyFunctionEv>:
    43d0:	stp	x29, x30, [sp, #-16]!
    43d4:	mov	x29, sp
    43d8:	ldr	w8, [x0, #32]
    43dc:	cmp	w8, #0x4
    43e0:	b.cs	43fc <_ZN12_GLOBAL__N_110CoroCloner23isSwitchDestroyFunctionEv+0x2c>  // b.hs, b.nlast
    43e4:	and	x8, x8, #0xf
    43e8:	mov	w9, #0x6                   	// #6
    43ec:	lsr	w8, w9, w8
    43f0:	and	w0, w8, #0x1
    43f4:	ldp	x29, x30, [sp], #16
    43f8:	ret
    43fc:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4400:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4404:	add	x0, x0, #0x0
    4408:	add	x1, x1, #0x0
    440c:	mov	w2, #0x91                  	// #145
    4410:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000004414 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE>:
    4414:	sub	sp, sp, #0xc0
    4418:	stp	x29, x30, [sp, #128]
    441c:	str	x23, [sp, #144]
    4420:	stp	x22, x21, [sp, #160]
    4424:	stp	x20, x19, [sp, #176]
    4428:	add	x29, sp, #0x80
    442c:	mov	x21, x4
    4430:	mov	w20, w3
    4434:	mov	x23, x2
    4438:	mov	x22, x1
    443c:	mov	x19, x0
    4440:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4444:	tbz	w0, #0, 4488 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x74>
    4448:	add	x0, sp, #0x38
    444c:	mov	x1, x19
    4450:	mov	x2, xzr
    4454:	mov	x3, xzr
    4458:	mov	x4, xzr
    445c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4460:	ldr	w8, [x22, #168]
    4464:	sub	w9, w8, #0x1
    4468:	cmp	w9, #0x2
    446c:	b.cs	44c0 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0xac>  // b.hs, b.nlast
    4470:	add	x0, sp, #0x38
    4474:	mov	x1, x22
    4478:	mov	x2, x23
    447c:	mov	x3, x21
    4480:	bl	4770 <_ZL22maybeFreeRetconStorageRN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEERKNS_4coro5ShapeEPNS_5ValueEPNS_9CallGraphE>
    4484:	b	44c8 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0xb4>
    4488:	add	x0, sp, #0x38
    448c:	mov	x1, x19
    4490:	mov	x2, xzr
    4494:	mov	x3, xzr
    4498:	mov	x4, xzr
    449c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    44a0:	ldr	w8, [x22, #168]
    44a4:	cmp	w8, #0x2
    44a8:	b.eq	45f8 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x1e4>  // b.none
    44ac:	cmp	w8, #0x1
    44b0:	b.eq	453c <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x128>  // b.none
    44b4:	cbnz	w8, 4614 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x200>
    44b8:	tbnz	w20, #0, 460c <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x1f8>
    44bc:	b	4644 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x230>
    44c0:	cbnz	w8, 44c8 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0xb4>
    44c4:	tbz	w20, #0, 4644 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x230>
    44c8:	add	x8, sp, #0x18
    44cc:	mov	w1, #0x1                   	// #1
    44d0:	mov	x0, x19
    44d4:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    44d8:	ldrb	w8, [sp, #48]
    44dc:	cbz	w8, 4644 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x230>
    44e0:	ldr	x8, [sp, #32]
    44e4:	cbz	x8, 4698 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x284>
    44e8:	ldr	x8, [sp, #24]
    44ec:	ldr	x1, [x8]
    44f0:	cbz	x1, 46b4 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x2a0>
    44f4:	ldrb	w8, [x1, #16]
    44f8:	cmp	w8, #0x4b
    44fc:	b.ne	46d4 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x2c0>  // b.any
    4500:	add	x0, sp, #0x38
    4504:	mov	x2, xzr
    4508:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    450c:	ldr	x21, [x19, #40]
    4510:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4514:	mov	x22, x0
    4518:	add	x1, x1, #0x0
    451c:	mov	x0, sp
    4520:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4524:	add	x1, x19, #0x18
    4528:	mov	x2, sp
    452c:	mov	x0, x21
    4530:	bl	0 <_ZN4llvm10BasicBlock15splitBasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEERKNS_5TwineE>
    4534:	ldr	x0, [x22, #40]
    4538:	b	463c <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x228>
    453c:	add	x0, sp, #0x38
    4540:	mov	x1, x22
    4544:	mov	x2, x23
    4548:	mov	x3, x21
    454c:	bl	4770 <_ZL22maybeFreeRetconStorageRN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEERKNS_4coro5ShapeEPNS_5ValueEPNS_9CallGraphE>
    4550:	mov	x0, x22
    4554:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4558:	ldr	x8, [x0, #16]
    455c:	ldr	x0, [x8]
    4560:	cbz	x0, 46f4 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x2e0>
    4564:	ldrb	w22, [x0, #8]
    4568:	cmp	w22, #0xd
    456c:	csel	x21, x0, xzr, eq  // eq = none
    4570:	mov	w8, w22
    4574:	b.ne	4590 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x17c>  // b.any
    4578:	ldr	w8, [x21, #12]
    457c:	cbz	w8, 4730 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x31c>
    4580:	ldr	x8, [x21, #16]
    4584:	ldr	x0, [x8]
    4588:	cbz	x0, 4750 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x33c>
    458c:	ldrb	w8, [x0, #8]
    4590:	cmp	w8, #0xf
    4594:	b.ne	4710 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x2fc>  // b.any
    4598:	bl	0 <_ZN4llvm19ConstantPointerNull3getEPNS_11PointerTypeE>
    459c:	cmp	w22, #0xd
    45a0:	mov	x22, x0
    45a4:	b.ne	45e8 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x1d4>  // b.any
    45a8:	mov	x0, x21
    45ac:	bl	0 <_ZN4llvm10UndefValue3getEPNS_4TypeE>
    45b0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    45b4:	mov	x21, x0
    45b8:	add	x1, x1, #0x0
    45bc:	add	x0, sp, #0x18
    45c0:	str	wzr, [sp]
    45c4:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    45c8:	add	x0, sp, #0x38
    45cc:	mov	x3, sp
    45d0:	add	x5, sp, #0x18
    45d4:	mov	w4, #0x1                   	// #1
    45d8:	mov	x1, x21
    45dc:	mov	x2, x22
    45e0:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    45e4:	mov	x22, x0
    45e8:	add	x0, sp, #0x38
    45ec:	mov	x1, x22
    45f0:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    45f4:	b	4614 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x200>
    45f8:	add	x0, sp, #0x38
    45fc:	mov	x1, x22
    4600:	mov	x2, x23
    4604:	mov	x3, x21
    4608:	bl	4770 <_ZL22maybeFreeRetconStorageRN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEERKNS_4coro5ShapeEPNS_5ValueEPNS_9CallGraphE>
    460c:	add	x0, sp, #0x38
    4610:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4614:	ldr	x21, [x19, #40]
    4618:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    461c:	add	x1, x1, #0x0
    4620:	add	x0, sp, #0x18
    4624:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4628:	add	x1, x19, #0x18
    462c:	add	x2, sp, #0x18
    4630:	mov	x0, x21
    4634:	bl	0 <_ZN4llvm10BasicBlock15splitBasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEERKNS_5TwineE>
    4638:	mov	x0, x21
    463c:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
    4640:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    4644:	ldr	x1, [sp, #56]
    4648:	cbz	x1, 4654 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x240>
    464c:	add	x0, sp, #0x38
    4650:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    4654:	mov	x0, x19
    4658:	bl	0 <_ZNK4llvm5Value10getContextEv>
    465c:	tbz	w20, #0, 4668 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x254>
    4660:	bl	0 <_ZN4llvm11ConstantInt7getTrueERNS_11LLVMContextE>
    4664:	b	466c <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x258>
    4668:	bl	0 <_ZN4llvm11ConstantInt8getFalseERNS_11LLVMContextE>
    466c:	mov	x1, x0
    4670:	mov	x0, x19
    4674:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    4678:	mov	x0, x19
    467c:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    4680:	ldp	x20, x19, [sp, #176]
    4684:	ldp	x22, x21, [sp, #160]
    4688:	ldr	x23, [sp, #144]
    468c:	ldp	x29, x30, [sp, #128]
    4690:	add	sp, sp, #0xc0
    4694:	ret
    4698:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    469c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    46a0:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    46a4:	add	x0, x0, #0x0
    46a8:	add	x1, x1, #0x0
    46ac:	add	x3, x3, #0x0
    46b0:	b	46ec <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x2d8>
    46b4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    46b8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    46bc:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    46c0:	add	x0, x0, #0x0
    46c4:	add	x1, x1, #0x0
    46c8:	add	x3, x3, #0x0
    46cc:	mov	w2, #0x5b                  	// #91
    46d0:	bl	0 <__assert_fail>
    46d4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    46d8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    46dc:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    46e0:	add	x0, x0, #0x0
    46e4:	add	x1, x1, #0x0
    46e8:	add	x3, x3, #0x0
    46ec:	mov	w2, #0xfa                  	// #250
    46f0:	bl	0 <__assert_fail>
    46f4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    46f8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    46fc:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4700:	add	x0, x0, #0x0
    4704:	add	x1, x1, #0x0
    4708:	add	x3, x3, #0x0
    470c:	b	4768 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x354>
    4710:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4714:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4718:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    471c:	add	x0, x0, #0x0
    4720:	add	x1, x1, #0x0
    4724:	add	x3, x3, #0x0
    4728:	mov	w2, #0x108                 	// #264
    472c:	bl	0 <__assert_fail>
    4730:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4734:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4738:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    473c:	add	x0, x0, #0x0
    4740:	add	x1, x1, #0x0
    4744:	add	x3, x3, #0x0
    4748:	mov	w2, #0x160                 	// #352
    474c:	bl	0 <__assert_fail>
    4750:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4754:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4758:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    475c:	add	x0, x0, #0x0
    4760:	add	x1, x1, #0x0
    4764:	add	x3, x3, #0x0
    4768:	mov	w2, #0x69                  	// #105
    476c:	bl	0 <__assert_fail>

0000000000004770 <_ZL22maybeFreeRetconStorageRN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEERKNS_4coro5ShapeEPNS_5ValueEPNS_9CallGraphE>:
    4770:	stp	x29, x30, [sp, #-16]!
    4774:	mov	x29, sp
    4778:	ldr	w8, [x1, #168]
    477c:	sub	w8, w8, #0x1
    4780:	cmp	w8, #0x2
    4784:	b.cs	47ac <_ZL22maybeFreeRetconStorageRN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEERKNS_4coro5ShapeEPNS_5ValueEPNS_9CallGraphE+0x3c>  // b.hs, b.nlast
    4788:	ldrb	w9, [x1, #232]
    478c:	cbz	w9, 4798 <_ZL22maybeFreeRetconStorageRN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEERKNS_4coro5ShapeEPNS_5ValueEPNS_9CallGraphE+0x28>
    4790:	ldp	x29, x30, [sp], #16
    4794:	ret
    4798:	mov	x8, x0
    479c:	mov	x0, x1
    47a0:	mov	x1, x8
    47a4:	ldp	x29, x30, [sp], #16
    47a8:	b	0 <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE>
    47ac:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    47b0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    47b4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    47b8:	add	x0, x0, #0x0
    47bc:	add	x1, x1, #0x0
    47c0:	add	x3, x3, #0x0
    47c4:	mov	w2, #0xa5                  	// #165
    47c8:	bl	0 <__assert_fail>

00000000000047cc <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE>:
    47cc:	sub	sp, sp, #0x80
    47d0:	stp	x29, x30, [sp, #64]
    47d4:	str	x23, [sp, #80]
    47d8:	stp	x22, x21, [sp, #96]
    47dc:	stp	x20, x19, [sp, #112]
    47e0:	add	x29, sp, #0x40
    47e4:	ldr	x20, [x0, #40]
    47e8:	mov	x0, x1
    47ec:	mov	x19, x2
    47f0:	bl	0 <_ZN4llvm10BasicBlock4phisEv>
    47f4:	cmp	x0, x1
    47f8:	str	x0, [x29, #24]
    47fc:	b.eq	48ac <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0xe0>  // b.none
    4800:	mov	x22, x0
    4804:	mov	x21, x1
    4808:	mov	x0, x22
    480c:	mov	x1, x20
    4810:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4814:	mov	x23, x0
    4818:	str	x0, [sp]
    481c:	mov	x1, sp
    4820:	add	x2, sp, #0x20
    4824:	mov	x0, x19
    4828:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    482c:	ldp	x9, x8, [x19]
    4830:	ldr	w11, [x19, #24]
    4834:	ldr	x10, [sp, #32]
    4838:	stp	x19, x9, [sp, #32]
    483c:	add	x8, x8, x11, lsl #4
    4840:	tbz	w0, #0, 484c <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x80>
    4844:	str	x10, [sp, #48]
    4848:	b	4850 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x84>
    484c:	str	x8, [sp, #48]
    4850:	add	x0, sp, #0x20
    4854:	mov	x1, sp
    4858:	str	x8, [sp, #56]
    485c:	stp	x19, x9, [sp]
    4860:	stp	x8, x8, [sp, #16]
    4864:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4868:	tbz	w0, #0, 4884 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0xb8>
    486c:	ldp	x8, x9, [sp, #32]
    4870:	ldr	x8, [x8]
    4874:	cmp	x8, x9
    4878:	b.ne	48c4 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0xf8>  // b.any
    487c:	ldr	x8, [sp, #48]
    4880:	ldr	x23, [x8, #8]
    4884:	mov	x1, sp
    4888:	mov	x0, x19
    488c:	str	x22, [sp]
    4890:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4894:	str	x23, [x0, #8]
    4898:	add	x0, x29, #0x18
    489c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    48a0:	ldr	x22, [x29, #24]
    48a4:	cmp	x22, x21
    48a8:	b.ne	4808 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x3c>  // b.any
    48ac:	ldp	x20, x19, [sp, #112]
    48b0:	ldp	x22, x21, [sp, #96]
    48b4:	ldr	x23, [sp, #80]
    48b8:	ldp	x29, x30, [sp, #64]
    48bc:	add	sp, sp, #0x80
    48c0:	ret
    48c4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    48c8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    48cc:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    48d0:	add	x0, x0, #0x0
    48d4:	add	x1, x1, #0x0
    48d8:	add	x3, x3, #0x0
    48dc:	mov	w2, #0x4b9                 	// #1209
    48e0:	bl	0 <__assert_fail>

00000000000048e4 <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE>:
    48e4:	sub	sp, sp, #0x90
    48e8:	stp	x29, x30, [sp, #96]
    48ec:	stp	x22, x21, [sp, #112]
    48f0:	stp	x20, x19, [sp, #128]
    48f4:	add	x29, sp, #0x60
    48f8:	ldr	x8, [x0]
    48fc:	mov	x19, x1
    4900:	ldr	x20, [x8]
    4904:	cbz	x20, 4948 <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE+0x64>
    4908:	ldr	x8, [x20]
    490c:	ldrb	w9, [x8, #8]
    4910:	cmp	w9, #0xf
    4914:	b.ne	4a34 <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE+0x150>  // b.any
    4918:	ldr	x8, [x8, #16]
    491c:	ldr	x8, [x8]
    4920:	cmp	x8, x19
    4924:	b.eq	4a1c <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE+0x138>  // b.none
    4928:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    492c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4930:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4934:	add	x0, x0, #0x0
    4938:	add	x1, x1, #0x0
    493c:	add	x3, x3, #0x0
    4940:	mov	w2, #0x1f9                 	// #505
    4944:	bl	0 <__assert_fail>
    4948:	mov	x21, x0
    494c:	ldr	x0, [x0, #8]
    4950:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4954:	cmp	x0, x1
    4958:	b.eq	497c <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE+0x98>  // b.none
    495c:	mov	x20, x0
    4960:	mov	x22, x1
    4964:	mov	x0, x20
    4968:	bl	0 <_ZNK4llvm5Value12isSwiftErrorEv>
    496c:	tbnz	w0, #0, 49f4 <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE+0x110>
    4970:	add	x20, x20, #0x28
    4974:	cmp	x22, x20
    4978:	b.ne	4964 <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE+0x80>  // b.any
    497c:	ldr	x8, [x21, #8]
    4980:	add	x0, x8, #0x48
    4984:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4988:	bl	0 <_ZNK4llvm10BasicBlock19getFirstNonPHIOrDbgEv>
    498c:	mov	x1, x0
    4990:	add	x0, sp, #0x18
    4994:	mov	x2, xzr
    4998:	mov	x3, xzr
    499c:	mov	x4, xzr
    49a0:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    49a4:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    49a8:	add	x1, x1, #0x0
    49ac:	mov	x0, sp
    49b0:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    49b4:	add	x0, sp, #0x18
    49b8:	mov	x3, sp
    49bc:	mov	x1, x19
    49c0:	mov	x2, xzr
    49c4:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    49c8:	ldrh	w8, [x0, #18]
    49cc:	mov	x20, x0
    49d0:	orr	w8, w8, #0x40
    49d4:	strh	w8, [x0, #18]
    49d8:	ldr	x8, [x21]
    49dc:	str	x0, [x8]
    49e0:	ldr	x1, [sp, #24]
    49e4:	cbz	x1, 4a1c <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE+0x138>
    49e8:	add	x0, sp, #0x18
    49ec:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    49f0:	b	4a1c <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE+0x138>
    49f4:	ldr	x8, [x21]
    49f8:	str	x20, [x8]
    49fc:	ldr	x8, [x20]
    4a00:	ldrb	w9, [x8, #8]
    4a04:	cmp	w9, #0xf
    4a08:	b.ne	4a34 <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE+0x150>  // b.any
    4a0c:	ldr	x8, [x8, #16]
    4a10:	ldr	x8, [x8]
    4a14:	cmp	x8, x19
    4a18:	b.ne	4a54 <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE+0x170>  // b.any
    4a1c:	mov	x0, x20
    4a20:	ldp	x20, x19, [sp, #128]
    4a24:	ldp	x22, x21, [sp, #112]
    4a28:	ldp	x29, x30, [sp, #96]
    4a2c:	add	sp, sp, #0x90
    4a30:	ret
    4a34:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4a38:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4a3c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4a40:	add	x0, x0, #0x0
    4a44:	add	x1, x1, #0x0
    4a48:	add	x3, x3, #0x0
    4a4c:	mov	w2, #0x17e                 	// #382
    4a50:	bl	0 <__assert_fail>
    4a54:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4a58:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4a5c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4a60:	add	x0, x0, #0x0
    4a64:	add	x1, x1, #0x0
    4a68:	add	x3, x3, #0x0
    4a6c:	mov	w2, #0x202                 	// #514
    4a70:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm4Pass16doInitializationERNS_6ModuleE:

0000000000000000 <_ZN4llvm4Pass16doInitializationERNS_6ModuleE>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZN4llvm4Pass14doFinalizationERNS_6ModuleE:

0000000000000000 <_ZN4llvm4Pass14doFinalizationERNS_6ModuleE>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZNK4llvm16CallGraphSCCPass27getPotentialPassManagerTypeEv:

0000000000000000 <_ZNK4llvm16CallGraphSCCPass27getPotentialPassManagerTypeEv>:
   0:	mov	w0, #0x2                   	// #2
   4:	ret

Disassembly of section .text._ZN4llvm16CallGraphSCCPass14doFinalizationERNS_9CallGraphE:

0000000000000000 <_ZN4llvm16CallGraphSCCPass14doFinalizationERNS_9CallGraphE>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIPNS_8FunctionELb1EE9push_backERKS2_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIPNS_8FunctionELb1EE9push_backERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseIPNS_8FunctionELb1EE9push_backERKS2_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	x10, [x20]
  28:	str	x10, [x9, w8, uxtw #3]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseIPNS_8FunctionELb1EE9push_backERKS2_+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x8                   	// #8
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseIPNS_8FunctionELb1EE9push_backERKS2_+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_8FunctionELb1EE9push_backERKS2_>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_8FunctionELb1EE9push_backERKS2_>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_8FunctionELb1EE9push_backERKS2_>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm4Pass11getAnalysisINS_20CallGraphWrapperPassEEERT_v:

0000000000000000 <_ZNK4llvm4Pass11getAnalysisINS_20CallGraphWrapperPassEEERT_v>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #8]
   c:	cbz	x8, 20 <_ZNK4llvm4Pass11getAnalysisINS_20CallGraphWrapperPassEEERT_v+0x20>
  10:	adrp	x1, 0 <_ZN4llvm20CallGraphWrapperPass2IDE>
  14:	ldr	x1, [x1]
  18:	ldp	x29, x30, [sp], #16
  1c:	b	0 <_ZNK4llvm4Pass11getAnalysisINS_20CallGraphWrapperPassEEERT_v>
  20:	adrp	x0, 0 <_ZNK4llvm4Pass11getAnalysisINS_20CallGraphWrapperPassEEERT_v>
  24:	adrp	x1, 0 <_ZNK4llvm4Pass11getAnalysisINS_20CallGraphWrapperPassEEERT_v>
  28:	adrp	x3, 0 <_ZNK4llvm4Pass11getAnalysisINS_20CallGraphWrapperPassEEERT_v>
  2c:	add	x0, x0, #0x0
  30:	add	x1, x1, #0x0
  34:	add	x3, x3, #0x0
  38:	mov	w2, #0xdd                  	// #221
  3c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm11raw_ostreamlsENS_9StringRefE:

0000000000000000 <_ZN4llvm11raw_ostreamlsENS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x20, x0
  10:	ldp	x8, x0, [x0, #16]
  14:	mov	x19, x2
  18:	sub	x8, x8, x0
  1c:	cmp	x2, x8
  20:	b.ls	38 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x38>  // b.plast
  24:	mov	x0, x20
  28:	mov	x2, x19
  2c:	ldp	x20, x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  38:	cbz	x19, 50 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x50>
  3c:	mov	x2, x19
  40:	bl	0 <memcpy>
  44:	ldr	x8, [x20, #24]
  48:	add	x8, x8, x19
  4c:	str	x8, [x20, #24]
  50:	mov	x0, x20
  54:	ldp	x20, x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	ret

Disassembly of section .text._ZNK4llvm4Pass13getAnalysisIDINS_20CallGraphWrapperPassEEERT_PKv:

0000000000000000 <_ZNK4llvm4Pass13getAnalysisIDINS_20CallGraphWrapperPassEEERT_PKv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x1, 78 <_ZNK4llvm4Pass13getAnalysisIDINS_20CallGraphWrapperPassEEERT_PKv+0x78>
   c:	ldr	x9, [x0, #8]
  10:	cbz	x9, 98 <_ZNK4llvm4Pass13getAnalysisIDINS_20CallGraphWrapperPassEEERT_PKv+0x98>
  14:	ldr	x8, [x9]
  18:	ldr	x9, [x9, #8]
  1c:	cmp	x8, x9
  20:	b.eq	58 <_ZNK4llvm4Pass13getAnalysisIDINS_20CallGraphWrapperPassEEERT_PKv+0x58>  // b.none
  24:	mov	x0, xzr
  28:	ldp	x10, x11, [x8]
  2c:	cmp	x10, x1
  30:	csel	x0, x11, x0, eq  // eq = none
  34:	b.eq	44 <_ZNK4llvm4Pass13getAnalysisIDINS_20CallGraphWrapperPassEEERT_PKv+0x44>  // b.none
  38:	add	x8, x8, #0x10
  3c:	cmp	x8, x9
  40:	b.ne	28 <_ZNK4llvm4Pass13getAnalysisIDINS_20CallGraphWrapperPassEEERT_PKv+0x28>  // b.any
  44:	cbz	x0, 58 <_ZNK4llvm4Pass13getAnalysisIDINS_20CallGraphWrapperPassEEERT_PKv+0x58>
  48:	ldr	x8, [x0]
  4c:	ldr	x2, [x8, #96]
  50:	ldp	x29, x30, [sp], #16
  54:	br	x2
  58:	adrp	x0, 0 <_ZNK4llvm4Pass13getAnalysisIDINS_20CallGraphWrapperPassEEERT_PKv>
  5c:	adrp	x1, 0 <_ZNK4llvm4Pass13getAnalysisIDINS_20CallGraphWrapperPassEEERT_PKv>
  60:	adrp	x3, 0 <_ZNK4llvm4Pass13getAnalysisIDINS_20CallGraphWrapperPassEEERT_PKv>
  64:	add	x0, x0, #0x0
  68:	add	x1, x1, #0x0
  6c:	add	x3, x3, #0x0
  70:	mov	w2, #0xeb                  	// #235
  74:	bl	0 <__assert_fail>
  78:	adrp	x0, 0 <_ZNK4llvm4Pass13getAnalysisIDINS_20CallGraphWrapperPassEEERT_PKv>
  7c:	adrp	x1, 0 <_ZNK4llvm4Pass13getAnalysisIDINS_20CallGraphWrapperPassEEERT_PKv>
  80:	adrp	x3, 0 <_ZNK4llvm4Pass13getAnalysisIDINS_20CallGraphWrapperPassEEERT_PKv>
  84:	add	x0, x0, #0x0
  88:	add	x1, x1, #0x0
  8c:	add	x3, x3, #0x0
  90:	mov	w2, #0xe3                  	// #227
  94:	bl	0 <__assert_fail>
  98:	adrp	x0, 0 <_ZNK4llvm4Pass13getAnalysisIDINS_20CallGraphWrapperPassEEERT_PKv>
  9c:	adrp	x1, 0 <_ZNK4llvm4Pass13getAnalysisIDINS_20CallGraphWrapperPassEEERT_PKv>
  a0:	adrp	x3, 0 <_ZNK4llvm4Pass13getAnalysisIDINS_20CallGraphWrapperPassEEERT_PKv>
  a4:	add	x0, x0, #0x0
  a8:	add	x1, x1, #0x0
  ac:	add	x3, x3, #0x0
  b0:	mov	w2, #0xe4                  	// #228
  b4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase13getArgOperandEj:

0000000000000000 <_ZNK4llvm8CallBase13getArgOperandEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	w19, w1
  10:	mov	x20, x0
  14:	bl	0 <_ZNK4llvm8CallBase13getArgOperandEj>
  18:	cmp	w0, w19
  1c:	b.ls	50 <_ZNK4llvm8CallBase13getArgOperandEj+0x50>  // b.plast
  20:	ldr	w8, [x20, #20]
  24:	and	x8, x8, #0xfffffff
  28:	cmp	w8, w19
  2c:	b.ls	70 <_ZNK4llvm8CallBase13getArgOperandEj+0x70>  // b.plast
  30:	mov	w9, #0x18                  	// #24
  34:	mneg	x8, x8, x9
  38:	add	x8, x20, x8
  3c:	umull	x9, w19, w9
  40:	ldr	x0, [x8, x9]
  44:	ldp	x20, x19, [sp, #16]
  48:	ldp	x29, x30, [sp], #32
  4c:	ret
  50:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  54:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  58:	adrp	x3, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  5c:	add	x0, x0, #0x0
  60:	add	x1, x1, #0x0
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x4df                 	// #1247
  6c:	bl	0 <__assert_fail>
  70:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  74:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  78:	adrp	x3, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  7c:	add	x0, x0, #0x0
  80:	add	x1, x1, #0x0
  84:	add	x3, x3, #0x0
  88:	mov	w2, #0x86a                 	// #2154
  8c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_:

0000000000000000 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	str	x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	mov	x19, x0
  14:	str	x1, [x29, #24]
  18:	str	x2, [sp, #8]
  1c:	cbz	x1, 44 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0x44>
  20:	ldur	x8, [x1, #-24]
  24:	cbz	x8, 44 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0x44>
  28:	ldrb	w9, [x8, #16]
  2c:	cbnz	w9, 44 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0x44>
  30:	ldrb	w9, [x8, #33]
  34:	tbz	w9, #5, 44 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0x44>
  38:	ldr	w0, [x8, #36]
  3c:	bl	0 <_ZN4llvm9Intrinsic6isLeafEj>
  40:	tbnz	w0, #0, 74 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0x74>
  44:	add	x0, x19, #0x8
  48:	add	x1, x29, #0x18
  4c:	add	x2, sp, #0x8
  50:	bl	0 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_>
  54:	ldr	x8, [sp, #8]
  58:	ldr	x19, [sp, #32]
  5c:	ldr	w9, [x8, #32]
  60:	add	w9, w9, #0x1
  64:	str	w9, [x8, #32]
  68:	ldp	x29, x30, [sp, #16]
  6c:	add	sp, sp, #0x30
  70:	ret
  74:	adrp	x0, 0 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_>
  78:	adrp	x1, 0 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_>
  7c:	adrp	x3, 0 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_>
  80:	add	x0, x0, #0x0
  84:	add	x1, x1, #0x0
  88:	add	x3, x3, #0x0
  8c:	mov	w2, #0xeb                  	// #235
  90:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase17getNumArgOperandsEv:

0000000000000000 <_ZNK4llvm8CallBase17getNumArgOperandsEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	bl	0 <_ZNK4llvm8CallBase17getNumArgOperandsEv>
  18:	mov	w8, w0
  1c:	mov	w20, #0x18                  	// #24
  20:	mneg	x8, x8, x20
  24:	mov	x0, x19
  28:	add	x21, x19, x8
  2c:	bl	0 <_ZNK4llvm8CallBase17getNumArgOperandsEv>
  30:	ldr	w8, [x19, #20]
  34:	mov	w9, w0
  38:	mneg	x9, x9, x20
  3c:	add	x9, x21, x9
  40:	and	x8, x8, #0xfffffff
  44:	mneg	x8, x8, x20
  48:	add	x8, x19, x8
  4c:	sub	x8, x9, x8
  50:	ldp	x20, x19, [sp, #32]
  54:	ldr	x21, [sp, #16]
  58:	sub	x8, x8, #0x18
  5c:	mov	w9, #0xaaab                	// #43691
  60:	lsr	x8, x8, #3
  64:	movk	w9, #0xaaaa, lsl #16
  68:	mul	w0, w8, w9
  6c:	ldp	x29, x30, [sp], #48
  70:	ret

Disassembly of section .text._ZNK4llvm8CallBase25getNumTotalBundleOperandsEv:

0000000000000000 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
  14:	cbz	w0, 34 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x34>
  18:	mov	x0, x19
  1c:	bl	0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
  20:	mov	w20, w0
  24:	mov	x0, x19
  28:	bl	0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
  2c:	subs	w0, w0, w20
  30:	b.cc	40 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x40>  // b.lo, b.ul, b.last
  34:	ldp	x20, x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret
  40:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
  44:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
  48:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x710                 	// #1808
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv:

0000000000000000 <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #16]
   c:	cmp	w8, #0x50
  10:	b.eq	34 <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv+0x34>  // b.none
  14:	cmp	w8, #0x23
  18:	b.eq	2c <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv+0x2c>  // b.none
  1c:	cmp	w8, #0x1d
  20:	b.ne	40 <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv+0x40>  // b.any
  24:	mov	w0, #0x2                   	// #2
  28:	b	38 <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv+0x38>
  2c:	ldp	x29, x30, [sp], #16
  30:	b	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
  34:	mov	w0, wzr
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv>
  44:	adrp	x1, 0 <_ZNK4llvm8CallBase27getNumSubclassExtraOperandsEv>
  48:	add	x0, x0, #0x0
  4c:	add	x1, x1, #0x0
  50:	mov	w2, #0x46a                 	// #1130
  54:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZNK4llvm8CallBase27getBundleOperandsStartIndexEv:

0000000000000000 <_ZNK4llvm8CallBase27getBundleOperandsStartIndexEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZNK4llvm8CallBase27getBundleOperandsStartIndexEv>
  14:	cbz	w0, 30 <_ZNK4llvm8CallBase27getBundleOperandsStartIndexEv+0x30>
  18:	mov	x0, x19
  1c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  20:	ldr	w0, [x0, #8]
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	ret
  30:	adrp	x0, 0 <_ZNK4llvm8CallBase27getBundleOperandsStartIndexEv>
  34:	adrp	x1, 0 <_ZNK4llvm8CallBase27getBundleOperandsStartIndexEv>
  38:	adrp	x3, 0 <_ZNK4llvm8CallBase27getBundleOperandsStartIndexEv>
  3c:	add	x0, x0, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0x6ed                 	// #1773
  4c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase25getBundleOperandsEndIndexEv:

0000000000000000 <_ZNK4llvm8CallBase25getBundleOperandsEndIndexEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZNK4llvm8CallBase25getBundleOperandsEndIndexEv>
  14:	cbz	w0, 34 <_ZNK4llvm8CallBase25getBundleOperandsEndIndexEv+0x34>
  18:	mov	x0, x19
  1c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  20:	add	x8, x0, x1
  24:	ldur	w0, [x8, #-4]
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	ret
  34:	adrp	x0, 0 <_ZNK4llvm8CallBase25getBundleOperandsEndIndexEv>
  38:	adrp	x1, 0 <_ZNK4llvm8CallBase25getBundleOperandsEndIndexEv>
  3c:	adrp	x3, 0 <_ZNK4llvm8CallBase25getBundleOperandsEndIndexEv>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x6f3                 	// #1779
  50:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase20getNumOperandBundlesEv:

0000000000000000 <_ZNK4llvm8CallBase20getNumOperandBundlesEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #20]
  10:	tbnz	w8, #31, 1c <_ZNK4llvm8CallBase20getNumOperandBundlesEv+0x1c>
  14:	mov	x19, xzr
  18:	b	30 <_ZNK4llvm8CallBase20getNumOperandBundlesEv+0x30>
  1c:	mov	x20, x0
  20:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  24:	ldr	w8, [x20, #20]
  28:	mov	x19, x0
  2c:	tbnz	w8, #31, 48 <_ZNK4llvm8CallBase20getNumOperandBundlesEv+0x48>
  30:	mov	x8, xzr
  34:	sub	x8, x8, x19
  38:	ldp	x20, x19, [sp, #16]
  3c:	lsr	x0, x8, #4
  40:	ldp	x29, x30, [sp], #32
  44:	ret
  48:	mov	x0, x20
  4c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  50:	add	x8, x0, x1
  54:	b	34 <_ZNK4llvm8CallBase20getNumOperandBundlesEv+0x34>

Disassembly of section .text._ZN4llvm13isa_impl_wrapINS_8CallBaseEPKNS_4UserES4_E4doitERKS4_:

0000000000000000 <_ZN4llvm13isa_impl_wrapINS_8CallBaseEPKNS_4UserES4_E4doitERKS4_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	cbz	x8, 48 <_ZN4llvm13isa_impl_wrapINS_8CallBaseEPKNS_4UserES4_E4doitERKS4_+0x48>
  10:	ldrb	w8, [x8, #16]
  14:	cmp	w8, #0x18
  18:	b.cc	3c <_ZN4llvm13isa_impl_wrapINS_8CallBaseEPKNS_4UserES4_E4doitERKS4_+0x3c>  // b.lo, b.ul, b.last
  1c:	sub	w8, w8, #0x1d
  20:	cmp	w8, #0x33
  24:	b.hi	3c <_ZN4llvm13isa_impl_wrapINS_8CallBaseEPKNS_4UserES4_E4doitERKS4_+0x3c>  // b.pmore
  28:	mov	x9, #0x41                  	// #65
  2c:	movk	x9, #0x8, lsl #48
  30:	lsr	x8, x9, x8
  34:	and	w0, w8, #0x1
  38:	b	40 <_ZN4llvm13isa_impl_wrapINS_8CallBaseEPKNS_4UserES4_E4doitERKS4_+0x40>
  3c:	mov	w0, wzr
  40:	ldp	x29, x30, [sp], #16
  44:	ret
  48:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_8CallBaseEPKNS_4UserES4_E4doitERKS4_>
  4c:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_8CallBaseEPKNS_4UserES4_E4doitERKS4_>
  50:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_8CallBaseEPKNS_4UserES4_E4doitERKS4_>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x69                  	// #105
  64:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE12emplace_backIJRPNS1_8CallBaseERS4_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE12emplace_backIJRPNS1_8CallBaseERS4_EEEvDpOT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	x21, x8, [x0, #8]
  14:	mov	x19, x2
  18:	mov	x20, x0
  1c:	mov	x2, x1
  20:	cmp	x21, x8
  24:	b.eq	8c <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE12emplace_backIJRPNS1_8CallBaseERS4_EEEvDpOT_+0x8c>  // b.none
  28:	ldr	x9, [x2]
  2c:	mov	w8, #0x6                   	// #6
  30:	stp	x8, xzr, [x21]
  34:	add	x8, x9, #0x10
  38:	cmp	x8, #0x10
  3c:	str	x9, [x21, #16]
  40:	b.hi	60 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE12emplace_backIJRPNS1_8CallBaseERS4_EEEvDpOT_+0x60>  // b.pmore
  44:	mov	w9, #0x1                   	// #1
  48:	lsl	x8, x9, x8
  4c:	mov	w9, #0x101                 	// #257
  50:	movk	w9, #0x1, lsl #16
  54:	tst	x8, x9
  58:	mov	x8, x21
  5c:	b.ne	6c <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE12emplace_backIJRPNS1_8CallBaseERS4_EEEvDpOT_+0x6c>  // b.any
  60:	mov	x0, x21
  64:	bl	0 <_ZN4llvm15ValueHandleBase12AddToUseListEv>
  68:	ldr	x8, [x20, #8]
  6c:	ldr	x9, [x19]
  70:	add	x8, x8, #0x20
  74:	str	x9, [x21, #24]
  78:	str	x8, [x20, #8]
  7c:	ldp	x20, x19, [sp, #32]
  80:	ldr	x21, [sp, #16]
  84:	ldp	x29, x30, [sp], #48
  88:	ret
  8c:	mov	x0, x20
  90:	mov	x1, x21
  94:	mov	x3, x19
  98:	ldp	x20, x19, [sp, #32]
  9c:	ldr	x21, [sp, #16]
  a0:	ldp	x29, x30, [sp], #48
  a4:	b	0 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE12emplace_backIJRPNS1_8CallBaseERS4_EEEvDpOT_>

Disassembly of section .text._ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	stp	x28, x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	mov	x25, x2
  20:	adrp	x2, 0 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
  24:	mov	x23, x1
  28:	add	x2, x2, #0x0
  2c:	mov	w1, #0x1                   	// #1
  30:	mov	x24, x3
  34:	mov	x19, x0
  38:	bl	0 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
  3c:	ldp	x21, x26, [x19]
  40:	mov	x20, x0
  44:	mov	x0, x19
  48:	mov	x1, x20
  4c:	sub	x28, x23, x21
  50:	asr	x27, x28, #5
  54:	bl	0 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
  58:	ldr	x9, [x25]
  5c:	mov	x22, x0
  60:	add	x0, x0, x28
  64:	mov	w8, #0x6                   	// #6
  68:	stp	x8, xzr, [x0]
  6c:	add	x8, x9, #0x10
  70:	cmp	x8, #0x10
  74:	str	x9, [x0, #16]
  78:	b.hi	94 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x94>  // b.pmore
  7c:	mov	w9, #0x1                   	// #1
  80:	lsl	x8, x9, x8
  84:	mov	w9, #0x101                 	// #257
  88:	movk	w9, #0x1, lsl #16
  8c:	tst	x8, x9
  90:	b.ne	98 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x98>  // b.any
  94:	bl	0 <_ZN4llvm15ValueHandleBase12AddToUseListEv>
  98:	ldr	x8, [x24]
  9c:	add	x9, x22, x27, lsl #5
  a0:	cmp	x21, x23
  a4:	mov	x24, x22
  a8:	str	x8, [x9, #24]
  ac:	b.eq	e8 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xe8>  // b.none
  b0:	mov	x24, x22
  b4:	mov	x25, x21
  b8:	mov	x0, x24
  bc:	mov	x1, x25
  c0:	bl	0 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
  c4:	add	x25, x25, #0x20
  c8:	cmp	x23, x25
  cc:	add	x24, x24, #0x20
  d0:	b.ne	b8 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xb8>  // b.any
  d4:	b	e8 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xe8>
  d8:	mov	x0, x24
  dc:	mov	x1, x23
  e0:	bl	0 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
  e4:	add	x23, x23, #0x20
  e8:	cmp	x26, x23
  ec:	add	x24, x24, #0x20
  f0:	b.ne	d8 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xd8>  // b.any
  f4:	cmp	x21, x26
  f8:	b.eq	13c <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x13c>  // b.none
  fc:	mov	w27, #0x101                 	// #257
 100:	mov	w25, #0x1                   	// #1
 104:	movk	w27, #0x1, lsl #16
 108:	mov	x23, x21
 10c:	ldr	x8, [x23, #16]
 110:	add	x8, x8, #0x10
 114:	cmp	x8, #0x10
 118:	b.hi	128 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x128>  // b.pmore
 11c:	lsl	x8, x25, x8
 120:	tst	x8, x27
 124:	b.ne	130 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x130>  // b.any
 128:	mov	x0, x23
 12c:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 130:	add	x23, x23, #0x20
 134:	cmp	x26, x23
 138:	b.ne	10c <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x10c>  // b.any
 13c:	cbz	x21, 148 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x148>
 140:	mov	x0, x21
 144:	bl	0 <_ZdlPv>
 148:	add	x8, x22, x20, lsl #5
 14c:	stp	x22, x24, [x19]
 150:	str	x8, [x19, #16]
 154:	ldp	x20, x19, [sp, #80]
 158:	ldp	x22, x21, [sp, #64]
 15c:	ldp	x24, x23, [sp, #48]
 160:	ldp	x26, x25, [sp, #32]
 164:	ldp	x28, x27, [sp, #16]
 168:	ldp	x29, x30, [sp], #96
 16c:	ret

Disassembly of section .text._ZNKSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE12_M_check_lenEmPKc:

0000000000000000 <_ZNKSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE12_M_check_lenEmPKc>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x9, x8, [x0]
   c:	sub	x9, x8, x9
  10:	mov	x8, #0x3ffffffffffffff     	// #288230376151711743
  14:	sub	x10, x8, x9, asr #5
  18:	cmp	x10, x1
  1c:	b.cc	54 <_ZNKSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE12_M_check_lenEmPKc+0x54>  // b.lo, b.ul, b.last
  20:	asr	x9, x9, #5
  24:	cmp	x9, x1
  28:	csel	x10, x1, x9, cc  // cc = lo, ul, last
  2c:	adds	x9, x10, x9
  30:	lsr	x11, x9, #58
  34:	cset	w10, cs  // cs = hs, nlast
  38:	cmp	x11, #0x0
  3c:	cset	w11, ne  // ne = any
  40:	orr	w10, w10, w11
  44:	cmp	w10, #0x0
  48:	csel	x0, x8, x9, ne  // ne = any
  4c:	ldp	x29, x30, [sp], #16
  50:	ret
  54:	mov	x0, x2
  58:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt12_Vector_baseISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE11_M_allocateEm:

0000000000000000 <_ZNSt12_Vector_baseISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE11_M_allocateEm>:
   0:	cbz	x1, 14 <_ZNSt12_Vector_baseISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE11_M_allocateEm+0x14>
   4:	lsr	x8, x1, #58
   8:	cbnz	x8, 1c <_ZNSt12_Vector_baseISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE11_M_allocateEm+0x1c>
   c:	lsl	x0, x1, #5
  10:	b	0 <_Znwm>
  14:	mov	x0, xzr
  18:	ret
  1c:	stp	x29, x30, [sp, #-16]!
  20:	mov	x29, sp
  24:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZNSt4pairIN4llvm14WeakTrackingVHEPNS0_13CallGraphNodeEEC2ERKS4_:

0000000000000000 <_ZNSt4pairIN4llvm14WeakTrackingVHEPNS0_13CallGraphNodeEEC2ERKS4_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	w8, #0x6                   	// #6
  10:	stp	x8, xzr, [x0]
  14:	ldr	x9, [x1, #16]
  18:	mov	x20, x1
  1c:	mov	x19, x0
  20:	add	x8, x9, #0x10
  24:	cmp	x8, #0x10
  28:	str	x9, [x0, #16]
  2c:	b.hi	48 <_ZNSt4pairIN4llvm14WeakTrackingVHEPNS0_13CallGraphNodeEEC2ERKS4_+0x48>  // b.pmore
  30:	mov	w9, #0x1                   	// #1
  34:	lsl	x8, x9, x8
  38:	mov	w9, #0x101                 	// #257
  3c:	movk	w9, #0x1, lsl #16
  40:	tst	x8, x9
  44:	b.ne	58 <_ZNSt4pairIN4llvm14WeakTrackingVHEPNS0_13CallGraphNodeEEC2ERKS4_+0x58>  // b.any
  48:	ldr	x8, [x20]
  4c:	mov	x0, x19
  50:	and	x1, x8, #0xfffffffffffffff8
  54:	bl	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
  58:	ldr	x8, [x20, #24]
  5c:	str	x8, [x19, #24]
  60:	ldp	x20, x19, [sp, #16]
  64:	ldp	x29, x30, [sp], #32
  68:	ret

Disassembly of section .text._ZN4llvm15ValueHandleBaseC2ENS0_14HandleBaseKindERKS0_:

0000000000000000 <_ZN4llvm15ValueHandleBaseC2ENS0_14HandleBaseKindERKS0_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cmp	w1, #0x4
   c:	str	xzr, [x0]
  10:	b.cs	64 <_ZN4llvm15ValueHandleBaseC2ENS0_14HandleBaseKindERKS0_+0x64>  // b.hs, b.nlast
  14:	mov	w8, w1
  18:	lsl	x8, x8, #1
  1c:	stp	x8, xzr, [x0]
  20:	ldr	x9, [x2, #16]
  24:	add	x8, x9, #0x10
  28:	cmp	x8, #0x10
  2c:	str	x9, [x0, #16]
  30:	b.hi	54 <_ZN4llvm15ValueHandleBaseC2ENS0_14HandleBaseKindERKS0_+0x54>  // b.pmore
  34:	mov	w9, #0x1                   	// #1
  38:	lsl	x8, x9, x8
  3c:	mov	w9, #0x101                 	// #257
  40:	movk	w9, #0x1, lsl #16
  44:	tst	x8, x9
  48:	b.eq	54 <_ZN4llvm15ValueHandleBaseC2ENS0_14HandleBaseKindERKS0_+0x54>  // b.none
  4c:	ldp	x29, x30, [sp], #16
  50:	ret
  54:	ldr	x8, [x2]
  58:	and	x1, x8, #0xfffffffffffffff8
  5c:	ldp	x29, x30, [sp], #16
  60:	b	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
  64:	adrp	x0, 0 <_ZN4llvm15ValueHandleBaseC2ENS0_14HandleBaseKindERKS0_>
  68:	adrp	x1, 0 <_ZN4llvm15ValueHandleBaseC2ENS0_14HandleBaseKindERKS0_>
  6c:	adrp	x3, 0 <_ZN4llvm15ValueHandleBaseC2ENS0_14HandleBaseKindERKS0_>
  70:	add	x0, x0, #0x0
  74:	add	x1, x1, #0x0
  78:	add	x3, x3, #0x0
  7c:	mov	w2, #0xba                  	// #186
  80:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm5TwineC2EPKc:

0000000000000000 <_ZN4llvm5TwineC2EPKc>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w8, #0x101                 	// #257
   c:	stp	xzr, xzr, [x0]
  10:	strh	w8, [x0, #16]
  14:	ldrb	w8, [x1]
  18:	cbz	w8, 28 <_ZN4llvm5TwineC2EPKc+0x28>
  1c:	mov	w8, #0x3                   	// #3
  20:	str	x1, [x0]
  24:	b	2c <_ZN4llvm5TwineC2EPKc+0x2c>
  28:	mov	w8, #0x1                   	// #1
  2c:	strb	w8, [x0, #16]
  30:	bl	0 <_ZN4llvm5TwineC2EPKc>
  34:	tbz	w0, #0, 40 <_ZN4llvm5TwineC2EPKc+0x40>
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZN4llvm5TwineC2EPKc>
  44:	adrp	x1, 0 <_ZN4llvm5TwineC2EPKc>
  48:	adrp	x3, 0 <_ZN4llvm5TwineC2EPKc>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x112                 	// #274
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIPNS_13CallGraphNodeELb1EE9push_backERKS2_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIPNS_13CallGraphNodeELb1EE9push_backERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseIPNS_13CallGraphNodeELb1EE9push_backERKS2_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	x10, [x20]
  28:	str	x10, [x9, w8, uxtw #3]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseIPNS_13CallGraphNodeELb1EE9push_backERKS2_+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x8                   	// #8
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseIPNS_13CallGraphNodeELb1EE9push_backERKS2_+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_13CallGraphNodeELb1EE9push_backERKS2_>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_13CallGraphNodeELb1EE9push_backERKS2_>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_13CallGraphNodeELb1EE9push_backERKS2_>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm5Twine7isValidEv:

0000000000000000 <_ZNK4llvm5Twine7isValidEv>:
   0:	ldrb	w9, [x0, #16]
   4:	ldrb	w8, [x0, #17]
   8:	cmp	w9, #0x1
   c:	b.hi	1c <_ZNK4llvm5Twine7isValidEv+0x1c>  // b.pmore
  10:	cmp	w8, #0x1
  14:	b.ne	78 <_ZNK4llvm5Twine7isValidEv+0x78>  // b.any
  18:	b	80 <_ZNK4llvm5Twine7isValidEv+0x80>
  1c:	cbz	w8, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  20:	cmp	w8, #0x1
  24:	b.ne	38 <_ZNK4llvm5Twine7isValidEv+0x38>  // b.any
  28:	cmp	w9, #0x2
  2c:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  30:	mov	w8, #0x1                   	// #1
  34:	b	40 <_ZNK4llvm5Twine7isValidEv+0x40>
  38:	cmp	w9, #0x2
  3c:	b.ne	58 <_ZNK4llvm5Twine7isValidEv+0x58>  // b.any
  40:	ldr	x9, [x0]
  44:	ldrb	w10, [x9, #16]
  48:	cbz	w10, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  4c:	ldrb	w9, [x9, #17]
  50:	cmp	w9, #0x1
  54:	b.eq	78 <_ZNK4llvm5Twine7isValidEv+0x78>  // b.none
  58:	cmp	w8, #0x2
  5c:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  60:	ldr	x8, [x0, #8]
  64:	ldrb	w9, [x8, #16]
  68:	cbz	w9, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  6c:	ldrb	w8, [x8, #17]
  70:	cmp	w8, #0x1
  74:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  78:	mov	w0, wzr
  7c:	ret
  80:	mov	w0, #0x1                   	// #1
  84:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplIPNS_13CallGraphNodeEE6appendIN9__gnu_cxx17__normal_iteratorIPKS2_St6vectorIS2_SaIS2_EEEEvEEvT_SD_:

0000000000000000 <_ZN4llvm15SmallVectorImplIPNS_13CallGraphNodeEE6appendIN9__gnu_cxx17__normal_iteratorIPKS2_St6vectorIS2_SaIS2_EEEEvEEvT_SD_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	w8, w9, [x0, #8]
  14:	sub	x21, x2, x1
  18:	asr	x22, x21, #3
  1c:	mov	x20, x1
  20:	sub	x9, x9, x8
  24:	mov	x19, x0
  28:	cmp	x22, x9
  2c:	b.ls	44 <_ZN4llvm15SmallVectorImplIPNS_13CallGraphNodeEE6appendIN9__gnu_cxx17__normal_iteratorIPKS2_St6vectorIS2_SaIS2_EEEEvEEvT_SD_+0x44>  // b.plast
  30:	add	x2, x22, x8
  34:	add	x1, x19, #0x10
  38:	mov	w3, #0x8                   	// #8
  3c:	mov	x0, x19
  40:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  44:	cbz	x21, 60 <_ZN4llvm15SmallVectorImplIPNS_13CallGraphNodeEE6appendIN9__gnu_cxx17__normal_iteratorIPKS2_St6vectorIS2_SaIS2_EEEEvEEvT_SD_+0x60>
  48:	ldr	x8, [x19]
  4c:	ldr	w9, [x19, #8]
  50:	mov	x1, x20
  54:	mov	x2, x21
  58:	add	x0, x8, x9, lsl #3
  5c:	bl	0 <memmove>
  60:	ldp	w8, w9, [x19, #8]
  64:	add	x8, x22, x8
  68:	cmp	x8, x9
  6c:	b.hi	84 <_ZN4llvm15SmallVectorImplIPNS_13CallGraphNodeEE6appendIN9__gnu_cxx17__normal_iteratorIPKS2_St6vectorIS2_SaIS2_EEEEvEEvT_SD_+0x84>  // b.pmore
  70:	str	w8, [x19, #8]
  74:	ldp	x20, x19, [sp, #32]
  78:	ldp	x22, x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	ret
  84:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_13CallGraphNodeEE6appendIN9__gnu_cxx17__normal_iteratorIPKS2_St6vectorIS2_SaIS2_EEEEvEEvT_SD_>
  88:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_13CallGraphNodeEE6appendIN9__gnu_cxx17__normal_iteratorIPKS2_St6vectorIS2_SaIS2_EEEEvEEvT_SD_>
  8c:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_13CallGraphNodeEE6appendIN9__gnu_cxx17__normal_iteratorIPKS2_St6vectorIS2_SaIS2_EEEEvEEvT_SD_>
  90:	add	x0, x0, #0x0
  94:	add	x1, x1, #0x0
  98:	add	x3, x3, #0x0
  9c:	mov	w2, #0x43                  	// #67
  a0:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag:

0000000000000000 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	x8, [x0, #16]
  1c:	ldr	x25, [x0]
  20:	sub	x24, x2, x1
  24:	asr	x20, x24, #3
  28:	mov	x21, x1
  2c:	sub	x8, x8, x25
  30:	mov	x19, x0
  34:	cmp	x20, x8, asr #3
  38:	b.ls	84 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x84>  // b.plast
  3c:	lsr	x8, x20, #60
  40:	cbnz	x8, 114 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x114>
  44:	mov	x0, x19
  48:	mov	x1, x20
  4c:	bl	0 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag>
  50:	mov	x22, x0
  54:	cbz	x24, 68 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x68>
  58:	mov	x0, x22
  5c:	mov	x1, x21
  60:	mov	x2, x24
  64:	bl	0 <memmove>
  68:	ldr	x0, [x19]
  6c:	cbz	x0, 74 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x74>
  70:	bl	0 <_ZdlPv>
  74:	add	x8, x22, x20, lsl #3
  78:	stp	x22, x8, [x19]
  7c:	str	x8, [x19, #16]
  80:	b	fc <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xfc>
  84:	ldr	x22, [x19, #8]
  88:	mov	x23, x2
  8c:	sub	x2, x22, x25
  90:	asr	x8, x2, #3
  94:	cmp	x8, x20
  98:	b.cs	d4 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xd4>  // b.hs, b.nlast
  9c:	add	x20, x21, x8, lsl #3
  a0:	cbz	x2, b4 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xb4>
  a4:	mov	x0, x25
  a8:	mov	x1, x21
  ac:	bl	0 <memmove>
  b0:	ldr	x22, [x19, #8]
  b4:	subs	x2, x23, x20
  b8:	asr	x21, x2, #3
  bc:	b.eq	cc <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xcc>  // b.none
  c0:	mov	x0, x22
  c4:	mov	x1, x20
  c8:	bl	0 <memmove>
  cc:	add	x8, x22, x21, lsl #3
  d0:	b	f8 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xf8>
  d4:	cbz	x24, ec <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xec>
  d8:	mov	x0, x25
  dc:	mov	x1, x21
  e0:	mov	x2, x24
  e4:	bl	0 <memmove>
  e8:	ldr	x22, [x19, #8]
  ec:	add	x8, x25, x20, lsl #3
  f0:	cmp	x22, x8
  f4:	b.eq	fc <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xfc>  // b.none
  f8:	str	x8, [x19, #8]
  fc:	ldp	x20, x19, [sp, #64]
 100:	ldp	x22, x21, [sp, #48]
 104:	ldp	x24, x23, [sp, #32]
 108:	ldr	x25, [sp, #16]
 10c:	ldp	x29, x30, [sp], #80
 110:	ret
 114:	adrp	x0, 0 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag>
 118:	add	x0, x0, #0x0
 11c:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt12_Vector_baseIPN4llvm13CallGraphNodeESaIS2_EE11_M_allocateEm:

0000000000000000 <_ZNSt12_Vector_baseIPN4llvm13CallGraphNodeESaIS2_EE11_M_allocateEm>:
   0:	cbz	x1, 14 <_ZNSt12_Vector_baseIPN4llvm13CallGraphNodeESaIS2_EE11_M_allocateEm+0x14>
   4:	lsr	x8, x1, #60
   8:	cbnz	x8, 1c <_ZNSt12_Vector_baseIPN4llvm13CallGraphNodeESaIS2_EE11_M_allocateEm+0x1c>
   c:	lsl	x0, x1, #3
  10:	b	0 <_Znwm>
  14:	mov	x0, xzr
  18:	ret
  1c:	stp	x29, x30, [sp, #-16]!
  20:	mov	x29, sp
  24:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZN4llvm8Function9addFnAttrENS_9StringRefES1_:

0000000000000000 <_ZN4llvm8Function9addFnAttrENS_9StringRefES1_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x19, x4
  18:	mov	x20, x3
  1c:	mov	x21, x2
  20:	mov	x22, x1
  24:	mov	x23, x0
  28:	bl	0 <_ZNK4llvm8Function10getContextEv>
  2c:	mov	x1, x22
  30:	mov	x2, x21
  34:	mov	x3, x20
  38:	mov	x4, x19
  3c:	bl	0 <_ZN4llvm9Attribute3getERNS_11LLVMContextENS_9StringRefES3_>
  40:	mov	x2, x0
  44:	mov	x0, x23
  48:	ldp	x20, x19, [sp, #48]
  4c:	ldp	x22, x21, [sp, #32]
  50:	ldr	x23, [sp, #16]
  54:	mov	w1, #0xffffffff            	// #-1
  58:	ldp	x29, x30, [sp], #64
  5c:	b	0 <_ZN4llvm8Function12addAttributeEjNS_9AttributeE>

Disassembly of section .text._ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x21, x3
  1c:	add	w25, w21, #0x1
  20:	mov	x23, x1
  24:	mov	x24, x0
  28:	mov	w0, #0x48                  	// #72
  2c:	mov	w1, w25
  30:	mov	x19, x5
  34:	mov	x20, x4
  38:	mov	x22, x2
  3c:	bl	0 <_ZN4llvm4UsernwEmj>
  40:	ldr	x8, [x24, #16]
  44:	mov	w9, #0x18                  	// #24
  48:	mov	w2, #0x38                  	// #56
  4c:	mov	w4, w25
  50:	ldr	x1, [x8]
  54:	mvn	x8, x21
  58:	madd	x3, x8, x9, x0
  5c:	mov	x5, x19
  60:	mov	x26, x0
  64:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
  68:	mov	x0, x26
  6c:	mov	x1, x24
  70:	mov	x2, x23
  74:	mov	x3, x22
  78:	mov	x4, x21
  7c:	mov	x5, xzr
  80:	mov	x6, xzr
  84:	mov	x7, x20
  88:	str	xzr, [x26, #56]
  8c:	bl	0 <_ZN4llvm8CallInst4initEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineE>
  90:	mov	x0, x26
  94:	ldp	x20, x19, [sp, #64]
  98:	ldp	x22, x21, [sp, #48]
  9c:	ldp	x24, x23, [sp, #32]
  a0:	ldp	x26, x25, [sp, #16]
  a4:	ldp	x29, x30, [sp], #80
  a8:	ret

Disassembly of section .text._ZN4llvm12simple_ilistINS_10BasicBlockEJEE5frontEv:

0000000000000000 <_ZN4llvm12simple_ilistINS_10BasicBlockEJEE5frontEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #8]
   c:	ldrb	w9, [x8]
  10:	tbnz	w9, #2, 28 <_ZN4llvm12simple_ilistINS_10BasicBlockEJEE5frontEv+0x28>
  14:	sub	x9, x8, #0x18
  18:	cmp	x8, #0x0
  1c:	csel	x0, xzr, x9, eq  // eq = none
  20:	ldp	x29, x30, [sp], #16
  24:	ret
  28:	adrp	x0, 0 <_ZN4llvm12simple_ilistINS_10BasicBlockEJEE5frontEv>
  2c:	adrp	x1, 0 <_ZN4llvm12simple_ilistINS_10BasicBlockEJEE5frontEv>
  30:	adrp	x3, 0 <_ZN4llvm12simple_ilistINS_10BasicBlockEJEE5frontEv>
  34:	add	x0, x0, #0x0
  38:	add	x1, x1, #0x0
  3c:	add	x3, x3, #0x0
  40:	mov	w2, #0x8b                  	// #139
  44:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv:

0000000000000000 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	ldrb	w9, [x8]
  10:	tbnz	w9, #2, 28 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv+0x28>
  14:	sub	x9, x8, #0x18
  18:	cmp	x8, #0x0
  1c:	csel	x0, xzr, x9, eq  // eq = none
  20:	ldp	x29, x30, [sp], #16
  24:	ret
  28:	adrp	x0, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv>
  2c:	adrp	x1, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv>
  30:	adrp	x3, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv>
  34:	add	x0, x0, #0x0
  38:	add	x1, x1, #0x0
  3c:	add	x3, x3, #0x0
  40:	mov	w2, #0x8b                  	// #139
  44:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplIPNS_18AnyCoroSuspendInstEE6resizeEm:

0000000000000000 <_ZN4llvm15SmallVectorImplIPNS_18AnyCoroSuspendInstEE6resizeEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	x8, x1
  1c:	b.ls	34 <_ZN4llvm15SmallVectorImplIPNS_18AnyCoroSuspendInstEE6resizeEm+0x34>  // b.plast
  20:	ldr	w8, [x19, #12]
  24:	cmp	x8, x20
  28:	b.cc	8c <_ZN4llvm15SmallVectorImplIPNS_18AnyCoroSuspendInstEE6resizeEm+0x8c>  // b.lo, b.ul, b.last
  2c:	str	w20, [x19, #8]
  30:	b	80 <_ZN4llvm15SmallVectorImplIPNS_18AnyCoroSuspendInstEE6resizeEm+0x80>
  34:	b.cs	80 <_ZN4llvm15SmallVectorImplIPNS_18AnyCoroSuspendInstEE6resizeEm+0x80>  // b.hs, b.nlast
  38:	ldr	w9, [x19, #12]
  3c:	cmp	x9, x20
  40:	b.cs	5c <_ZN4llvm15SmallVectorImplIPNS_18AnyCoroSuspendInstEE6resizeEm+0x5c>  // b.hs, b.nlast
  44:	add	x1, x19, #0x10
  48:	mov	w3, #0x8                   	// #8
  4c:	mov	x0, x19
  50:	mov	x2, x20
  54:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  58:	ldr	w8, [x19, #8]
  5c:	cmp	x8, x20
  60:	b.eq	20 <_ZN4llvm15SmallVectorImplIPNS_18AnyCoroSuspendInstEE6resizeEm+0x20>  // b.none
  64:	ldr	x9, [x19]
  68:	lsl	x10, x20, #3
  6c:	sub	x2, x10, x8, lsl #3
  70:	mov	w1, wzr
  74:	add	x0, x9, x8, lsl #3
  78:	bl	0 <memset>
  7c:	b	20 <_ZN4llvm15SmallVectorImplIPNS_18AnyCoroSuspendInstEE6resizeEm+0x20>
  80:	ldp	x20, x19, [sp, #16]
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_18AnyCoroSuspendInstEE6resizeEm>
  90:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_18AnyCoroSuspendInstEE6resizeEm>
  94:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_18AnyCoroSuspendInstEE6resizeEm>
  98:	add	x0, x0, #0x0
  9c:	add	x1, x1, #0x0
  a0:	add	x3, x3, #0x0
  a4:	mov	w2, #0x43                  	// #67
  a8:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14getCalledValueEv:

0000000000000000 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14getCalledValueEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	ands	x8, x8, #0xfffffffffffffff8
  10:	b.eq	68 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14getCalledValueEv+0x68>  // b.none
  14:	ldrb	w9, [x8, #16]
  18:	sub	w9, w9, #0x1d
  1c:	cmp	w9, #0x33
  20:	b.hi	48 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14getCalledValueEv+0x48>  // b.pmore
  24:	mov	w10, #0x1                   	// #1
  28:	lsl	x9, x10, x9
  2c:	mov	x10, #0x41                  	// #65
  30:	movk	x10, #0x8, lsl #48
  34:	tst	x9, x10
  38:	b.eq	48 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14getCalledValueEv+0x48>  // b.none
  3c:	ldur	x0, [x8, #-24]
  40:	ldp	x29, x30, [sp], #16
  44:	ret
  48:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14getCalledValueEv>
  4c:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14getCalledValueEv>
  50:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14getCalledValueEv>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x108                 	// #264
  64:	bl	0 <__assert_fail>
  68:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14getCalledValueEv>
  6c:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14getCalledValueEv>
  70:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14getCalledValueEv>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x69                  	// #105
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm15CoroSuspendInst11getCoroSaveEv:

0000000000000000 <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w1, wzr
   c:	bl	0 <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv>
  10:	cbz	x0, 78 <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv+0x78>
  14:	ldrb	w8, [x0, #16]
  18:	cmp	w8, #0x10
  1c:	b.eq	6c <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv+0x6c>  // b.none
  20:	cmp	w8, #0x50
  24:	b.ne	4c <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv+0x4c>  // b.any
  28:	ldur	x8, [x0, #-24]
  2c:	cbz	x8, 4c <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv+0x4c>
  30:	ldrb	w9, [x8, #16]
  34:	cbnz	w9, 4c <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv+0x4c>
  38:	ldrb	w9, [x8, #33]
  3c:	tbz	w9, #5, 4c <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv+0x4c>
  40:	ldr	w8, [x8, #36]
  44:	cmp	w8, #0x20
  48:	b.eq	70 <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv+0x70>  // b.none
  4c:	adrp	x0, 0 <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv>
  50:	adrp	x1, 0 <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv>
  54:	adrp	x3, 0 <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv>
  58:	add	x0, x0, #0x0
  5c:	add	x1, x1, #0x0
  60:	add	x3, x3, #0x0
  64:	mov	w2, #0x17c                 	// #380
  68:	bl	0 <__assert_fail>
  6c:	mov	x0, xzr
  70:	ldp	x29, x30, [sp], #16
  74:	ret
  78:	adrp	x0, 0 <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv>
  7c:	adrp	x1, 0 <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv>
  80:	adrp	x3, 0 <_ZNK4llvm15CoroSuspendInst11getCoroSaveEv>
  84:	add	x0, x0, #0x0
  88:	add	x1, x1, #0x0
  8c:	add	x3, x3, #0x0
  90:	mov	w2, #0x69                  	// #105
  94:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm11iplist_implINS_12simple_ilistINS_11InstructionEJEEENS_21SymbolTableListTraitsIS2_EEE11getPrevNodeERS2_:

0000000000000000 <_ZNK4llvm11iplist_implINS_12simple_ilistINS_11InstructionEJEEENS_21SymbolTableListTraitsIS2_EEE11getPrevNodeERS2_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x9, [x0, #8]
   c:	add	x8, x1, #0x18
  10:	cmp	x8, x9
  14:	b.eq	38 <_ZNK4llvm11iplist_implINS_12simple_ilistINS_11InstructionEJEEENS_21SymbolTableListTraitsIS2_EEE11getPrevNodeERS2_+0x38>  // b.none
  18:	ldr	x8, [x8]
  1c:	and	x8, x8, #0xfffffffffffffff8
  20:	ldrb	w9, [x8]
  24:	tbnz	w9, #2, 44 <_ZNK4llvm11iplist_implINS_12simple_ilistINS_11InstructionEJEEENS_21SymbolTableListTraitsIS2_EEE11getPrevNodeERS2_+0x44>
  28:	sub	x9, x8, #0x18
  2c:	cmp	x8, #0x0
  30:	csel	x0, xzr, x9, eq  // eq = none
  34:	b	3c <_ZNK4llvm11iplist_implINS_12simple_ilistINS_11InstructionEJEEENS_21SymbolTableListTraitsIS2_EEE11getPrevNodeERS2_+0x3c>
  38:	mov	x0, xzr
  3c:	ldp	x29, x30, [sp], #16
  40:	ret
  44:	adrp	x0, 0 <_ZNK4llvm11iplist_implINS_12simple_ilistINS_11InstructionEJEEENS_21SymbolTableListTraitsIS2_EEE11getPrevNodeERS2_>
  48:	adrp	x1, 0 <_ZNK4llvm11iplist_implINS_12simple_ilistINS_11InstructionEJEEENS_21SymbolTableListTraitsIS2_EEE11getPrevNodeERS2_>
  4c:	adrp	x3, 0 <_ZNK4llvm11iplist_implINS_12simple_ilistINS_11InstructionEJEEENS_21SymbolTableListTraitsIS2_EEE11getPrevNodeERS2_>
  50:	add	x0, x0, #0x0
  54:	add	x1, x1, #0x0
  58:	add	x3, x3, #0x0
  5c:	mov	w2, #0x8b                  	// #139
  60:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_:

0000000000000000 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x0, 74 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0x74>
   c:	ldrb	w8, [x0, #16]
  10:	cmp	w8, #0x18
  14:	b.cs	24 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0x24>  // b.hs, b.nlast
  18:	mov	x0, xzr
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	cmp	w8, #0x1d
  28:	b.eq	64 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0x64>  // b.none
  2c:	cmp	w8, #0x23
  30:	b.eq	50 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0x50>  // b.none
  34:	cmp	w8, #0x50
  38:	b.ne	18 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0x18>  // b.any
  3c:	tst	x0, #0x7
  40:	b.ne	94 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0x94>  // b.any
  44:	and	x8, x0, #0xfffffffffffffff9
  48:	orr	x0, x8, #0x2
  4c:	b	1c <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0x1c>
  50:	tst	x0, #0x7
  54:	b.ne	94 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0x94>  // b.any
  58:	and	x8, x0, #0xfffffffffffffff9
  5c:	orr	x0, x8, #0x4
  60:	b	1c <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0x1c>
  64:	tst	x0, #0x7
  68:	b.ne	94 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0x94>  // b.any
  6c:	and	x0, x0, #0xfffffffffffffff9
  70:	b	1c <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0x1c>
  74:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_>
  78:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_>
  7c:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_>
  80:	add	x0, x0, #0x0
  84:	add	x1, x1, #0x0
  88:	add	x3, x3, #0x0
  8c:	mov	w2, #0x69                  	// #105
  90:	bl	0 <__assert_fail>
  94:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_>
  98:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_>
  9c:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_>
  a0:	add	x0, x0, #0x0
  a4:	add	x1, x1, #0x0
  a8:	add	x3, x3, #0x0
  ac:	mov	w2, #0xb3                  	// #179
  b0:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm11iplist_implINS_12simple_ilistINS_11InstructionEJEEENS_21SymbolTableListTraitsIS2_EEE11getNextNodeERS2_:

0000000000000000 <_ZNK4llvm11iplist_implINS_12simple_ilistINS_11InstructionEJEEENS_21SymbolTableListTraitsIS2_EEE11getNextNodeERS2_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x1, #32]
   c:	cmp	x0, x8
  10:	b.eq	2c <_ZNK4llvm11iplist_implINS_12simple_ilistINS_11InstructionEJEEENS_21SymbolTableListTraitsIS2_EEE11getNextNodeERS2_+0x2c>  // b.none
  14:	ldrb	w9, [x8]
  18:	tbnz	w9, #2, 38 <_ZNK4llvm11iplist_implINS_12simple_ilistINS_11InstructionEJEEENS_21SymbolTableListTraitsIS2_EEE11getNextNodeERS2_+0x38>
  1c:	sub	x9, x8, #0x18
  20:	cmp	x8, #0x0
  24:	csel	x0, xzr, x9, eq  // eq = none
  28:	b	30 <_ZNK4llvm11iplist_implINS_12simple_ilistINS_11InstructionEJEEENS_21SymbolTableListTraitsIS2_EEE11getNextNodeERS2_+0x30>
  2c:	mov	x0, xzr
  30:	ldp	x29, x30, [sp], #16
  34:	ret
  38:	adrp	x0, 0 <_ZNK4llvm11iplist_implINS_12simple_ilistINS_11InstructionEJEEENS_21SymbolTableListTraitsIS2_EEE11getNextNodeERS2_>
  3c:	adrp	x1, 0 <_ZNK4llvm11iplist_implINS_12simple_ilistINS_11InstructionEJEEENS_21SymbolTableListTraitsIS2_EEE11getNextNodeERS2_>
  40:	adrp	x3, 0 <_ZNK4llvm11iplist_implINS_12simple_ilistINS_11InstructionEJEEENS_21SymbolTableListTraitsIS2_EEE11getNextNodeERS2_>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x8b                  	// #139
  54:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_:

0000000000000000 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #32]
   8:	str	x21, [sp, #48]
   c:	stp	x20, x19, [sp, #64]
  10:	add	x29, sp, #0x20
  14:	mov	x19, x0
  18:	mov	x20, x8
  1c:	bl	0 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_>
  20:	ldp	x9, x8, [x19, #8]
  24:	mov	w10, #0x18                  	// #24
  28:	mov	w11, #0x1c                  	// #28
  2c:	mov	x21, x1
  30:	cmp	x8, x9
  34:	csel	x9, x11, x10, eq  // eq = none
  38:	ldr	w9, [x19, x9]
  3c:	add	x8, x8, x9, lsl #3
  40:	stp	x0, x8, [sp]
  44:	mov	x0, sp
  48:	bl	0 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_>
  4c:	ldr	x8, [x19]
  50:	strb	w21, [x20, #32]
  54:	ldr	x21, [sp, #48]
  58:	ldp	x29, x30, [sp, #32]
  5c:	stp	x19, x8, [sp, #16]
  60:	ldp	q1, q0, [sp]
  64:	stp	q1, q0, [x20]
  68:	ldp	x20, x19, [sp, #64]
  6c:	add	sp, sp, #0x50
  70:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIPNS_10BasicBlockELb1EE9push_backERKS2_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIPNS_10BasicBlockELb1EE9push_backERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseIPNS_10BasicBlockELb1EE9push_backERKS2_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	x10, [x20]
  28:	str	x10, [x9, w8, uxtw #3]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseIPNS_10BasicBlockELb1EE9push_backERKS2_+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x8                   	// #8
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseIPNS_10BasicBlockELb1EE9push_backERKS2_+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_10BasicBlockELb1EE9push_backERKS2_>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_10BasicBlockELb1EE9push_backERKS2_>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_10BasicBlockELb1EE9push_backERKS2_>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE12pop_back_valEv:

0000000000000000 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE12pop_back_valEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cbz	w8, 3c <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE12pop_back_valEv+0x3c>
  10:	ldr	w10, [x0, #12]
  14:	sub	x9, x8, #0x1
  18:	cmp	x9, x10
  1c:	b.hi	5c <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE12pop_back_valEv+0x5c>  // b.pmore
  20:	ldr	x10, [x0]
  24:	add	x8, x10, x8, lsl #3
  28:	ldur	x8, [x8, #-8]
  2c:	str	w9, [x0, #8]
  30:	mov	x0, x8
  34:	ldp	x29, x30, [sp], #16
  38:	ret
  3c:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE12pop_back_valEv>
  40:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE12pop_back_valEv>
  44:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE12pop_back_valEv>
  48:	add	x0, x0, #0x0
  4c:	add	x1, x1, #0x0
  50:	add	x3, x3, #0x0
  54:	mov	w2, #0xa7                  	// #167
  58:	bl	0 <__assert_fail>
  5c:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE12pop_back_valEv>
  60:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE12pop_back_valEv>
  64:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE12pop_back_valEv>
  68:	add	x0, x0, #0x0
  6c:	add	x1, x1, #0x0
  70:	add	x3, x3, #0x0
  74:	mov	w2, #0x43                  	// #67
  78:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm15SmallPtrSetImplIPNS_10BasicBlockEE5countEPKS1_:

0000000000000000 <_ZNK4llvm15SmallPtrSetImplIPNS_10BasicBlockEE5countEPKS1_>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #64]
   8:	str	x19, [sp, #80]
   c:	add	x29, sp, #0x40
  10:	add	x8, sp, #0x20
  14:	mov	x19, x0
  18:	bl	0 <_ZNK4llvm15SmallPtrSetImplIPNS_10BasicBlockEE5countEPKS1_>
  1c:	ldp	x9, x8, [x19, #8]
  20:	mov	w10, #0x18                  	// #24
  24:	mov	w11, #0x1c                  	// #28
  28:	mov	x0, sp
  2c:	cmp	x8, x9
  30:	csel	x9, x11, x10, eq  // eq = none
  34:	ldr	w9, [x19, x9]
  38:	add	x8, x8, x9, lsl #3
  3c:	stp	x8, x8, [sp]
  40:	bl	0 <_ZNK4llvm15SmallPtrSetImplIPNS_10BasicBlockEE5countEPKS1_>
  44:	ldr	x8, [sp, #32]
  48:	ldr	x9, [sp]
  4c:	ldr	x19, [sp, #80]
  50:	ldp	x29, x30, [sp, #64]
  54:	cmp	x8, x9
  58:	cset	w0, ne  // ne = any
  5c:	add	sp, sp, #0x60
  60:	ret

Disassembly of section .text._ZNK4llvm19SmallPtrSetIteratorIPNS_10BasicBlockEEdeEv:

0000000000000000 <_ZNK4llvm19SmallPtrSetIteratorIPNS_10BasicBlockEEdeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x8, x9, [x0, #16]
   c:	ldr	x8, [x8]
  10:	cmp	x8, x9
  14:	b.ne	30 <_ZNK4llvm19SmallPtrSetIteratorIPNS_10BasicBlockEEdeEv+0x30>  // b.any
  18:	ldp	x8, x9, [x0]
  1c:	cmp	x8, x9
  20:	b.cs	50 <_ZNK4llvm19SmallPtrSetIteratorIPNS_10BasicBlockEEdeEv+0x50>  // b.hs, b.nlast
  24:	ldr	x0, [x8]
  28:	ldp	x29, x30, [sp], #16
  2c:	ret
  30:	adrp	x0, 0 <_ZNK4llvm19SmallPtrSetIteratorIPNS_10BasicBlockEEdeEv>
  34:	adrp	x1, 0 <_ZNK4llvm19SmallPtrSetIteratorIPNS_10BasicBlockEEdeEv>
  38:	adrp	x3, 0 <_ZNK4llvm19SmallPtrSetIteratorIPNS_10BasicBlockEEdeEv>
  3c:	add	x0, x0, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0x11c                 	// #284
  4c:	bl	0 <__assert_fail>
  50:	adrp	x0, 0 <_ZNK4llvm19SmallPtrSetIteratorIPNS_10BasicBlockEEdeEv>
  54:	adrp	x1, 0 <_ZNK4llvm19SmallPtrSetIteratorIPNS_10BasicBlockEEdeEv>
  58:	adrp	x3, 0 <_ZNK4llvm19SmallPtrSetIteratorIPNS_10BasicBlockEEdeEv>
  5c:	add	x0, x0, #0x0
  60:	add	x1, x1, #0x0
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x121                 	// #289
  6c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm19SmallPtrSetImplBase10insert_impEPKv:

0000000000000000 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x12, x9, [x0, #8]
   c:	mov	x8, x0
  10:	cmp	x9, x12
  14:	b.eq	34 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0x34>  // b.none
  18:	mov	x0, x8
  1c:	bl	0 <_ZN4llvm19SmallPtrSetImplBase14insert_imp_bigEPKv>
  20:	and	x11, x1, #0xffffffffffffff00
  24:	and	x8, x1, #0xff
  28:	orr	x1, x11, x8
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	ldr	w10, [x8, #28]
  38:	cbz	w10, 98 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0x98>
  3c:	mov	x0, xzr
  40:	add	x13, x9, #0x8
  44:	lsl	x11, x10, #3
  48:	mov	x14, x13
  4c:	ldur	x13, [x13, #-8]
  50:	cmp	x13, x1
  54:	b.eq	cc <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0xcc>  // b.none
  58:	cmn	x13, #0x2
  5c:	csel	x0, x12, x0, eq  // eq = none
  60:	subs	x11, x11, #0x8
  64:	add	x13, x14, #0x8
  68:	mov	x12, x14
  6c:	b.ne	48 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0x48>  // b.any
  70:	cbz	x0, 98 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0x98>
  74:	str	x1, [x0]
  78:	ldr	w9, [x8, #32]
  7c:	ldr	x10, [x8]
  80:	mov	x11, xzr
  84:	sub	w9, w9, #0x1
  88:	add	x10, x10, #0x1
  8c:	str	w9, [x8, #32]
  90:	str	x10, [x8]
  94:	b	c4 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0xc4>
  98:	ldr	w11, [x8, #24]
  9c:	cmp	w10, w11
  a0:	b.cs	18 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0x18>  // b.hs, b.nlast
  a4:	add	w12, w10, #0x1
  a8:	str	w12, [x8, #28]
  ac:	str	x1, [x9, x10, lsl #3]
  b0:	ldp	x9, x12, [x8]
  b4:	mov	x11, xzr
  b8:	add	x9, x9, #0x1
  bc:	add	x0, x12, x10, lsl #3
  c0:	str	x9, [x8]
  c4:	mov	w8, #0x1                   	// #1
  c8:	b	28 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0x28>
  cc:	mov	x8, xzr
  d0:	mov	x11, xzr
  d4:	mov	x0, x12
  d8:	b	28 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0x28>

Disassembly of section .text._ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv:

0000000000000000 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x8, x9, [x0]
   c:	cmp	x8, x9
  10:	b.hi	3c <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv+0x3c>  // b.pmore
  14:	b.eq	34 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv+0x34>  // b.none
  18:	ldr	x10, [x8]
  1c:	cmn	x10, #0x2
  20:	b.cc	34 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv+0x34>  // b.lo, b.ul, b.last
  24:	add	x8, x8, #0x8
  28:	cmp	x9, x8
  2c:	str	x8, [x0]
  30:	b.ne	18 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv+0x18>  // b.any
  34:	ldp	x29, x30, [sp], #16
  38:	ret
  3c:	adrp	x0, 0 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv>
  40:	adrp	x1, 0 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv>
  44:	adrp	x3, 0 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv>
  48:	add	x0, x0, #0x0
  4c:	add	x1, x1, #0x0
  50:	add	x3, x3, #0x0
  54:	mov	w2, #0xf8                  	// #248
  58:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm5Value18user_iterator_implINS_4UserEEdeEv:

0000000000000000 <_ZNK4llvm5Value18user_iterator_implINS_4UserEEdeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0]
   c:	cbz	x0, 18 <_ZNK4llvm5Value18user_iterator_implINS_4UserEEdeEv+0x18>
  10:	ldp	x29, x30, [sp], #16
  14:	b	0 <_ZNK4llvm3Use7getUserEv>
  18:	adrp	x0, 0 <_ZNK4llvm5Value18user_iterator_implINS_4UserEEdeEv>
  1c:	adrp	x1, 0 <_ZNK4llvm5Value18user_iterator_implINS_4UserEEdeEv>
  20:	adrp	x3, 0 <_ZNK4llvm5Value18user_iterator_implINS_4UserEEdeEv>
  24:	add	x0, x0, #0x0
  28:	add	x1, x1, #0x0
  2c:	add	x3, x3, #0x0
  30:	mov	w2, #0x99                  	// #153
  34:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm15SmallPtrSetImplIPNS_10BasicBlockEE4findEPKS1_:

0000000000000000 <_ZNK4llvm15SmallPtrSetImplIPNS_10BasicBlockEE4findEPKS1_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	mov	x20, x8
  14:	bl	0 <_ZNK4llvm15SmallPtrSetImplIPNS_10BasicBlockEE4findEPKS1_>
  18:	ldp	x9, x8, [x19, #8]
  1c:	mov	w10, #0x18                  	// #24
  20:	mov	w11, #0x1c                  	// #28
  24:	cmp	x8, x9
  28:	csel	x9, x11, x10, eq  // eq = none
  2c:	ldr	w9, [x19, x9]
  30:	add	x8, x8, x9, lsl #3
  34:	stp	x0, x8, [x20]
  38:	mov	x0, x20
  3c:	bl	0 <_ZNK4llvm15SmallPtrSetImplIPNS_10BasicBlockEE4findEPKS1_>
  40:	ldr	x8, [x19]
  44:	stp	x19, x8, [x20, #16]
  48:	ldp	x20, x19, [sp, #16]
  4c:	ldp	x29, x30, [sp], #32
  50:	ret

Disassembly of section .text._ZNK4llvm19SmallPtrSetImplBase8find_impEPKv:

0000000000000000 <_ZNK4llvm19SmallPtrSetImplBase8find_impEPKv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	x9, x8, [x0, #8]
  10:	mov	x20, x0
  14:	mov	x19, x1
  18:	cmp	x8, x9
  1c:	b.eq	58 <_ZNK4llvm19SmallPtrSetImplBase8find_impEPKv+0x58>  // b.none
  20:	mov	x0, x20
  24:	mov	x1, x19
  28:	bl	0 <_ZNK4llvm19SmallPtrSetImplBase13FindBucketForEPKv>
  2c:	ldr	x8, [x0]
  30:	cmp	x8, x19
  34:	b.eq	88 <_ZNK4llvm19SmallPtrSetImplBase8find_impEPKv+0x88>  // b.none
  38:	ldp	x9, x8, [x20, #8]
  3c:	mov	w10, #0x18                  	// #24
  40:	cmp	x8, x9
  44:	mov	w9, #0x1c                  	// #28
  48:	csel	x9, x9, x10, eq  // eq = none
  4c:	ldr	w9, [x20, x9]
  50:	add	x0, x8, x9, lsl #3
  54:	b	88 <_ZNK4llvm19SmallPtrSetImplBase8find_impEPKv+0x88>
  58:	ldr	w9, [x20, #28]
  5c:	add	x0, x8, x9, lsl #3
  60:	cbz	w9, 88 <_ZNK4llvm19SmallPtrSetImplBase8find_impEPKv+0x88>
  64:	lsl	x9, x9, #3
  68:	ldr	x10, [x8]
  6c:	cmp	x10, x19
  70:	b.eq	84 <_ZNK4llvm19SmallPtrSetImplBase8find_impEPKv+0x84>  // b.none
  74:	subs	x9, x9, #0x8
  78:	add	x8, x8, #0x8
  7c:	b.ne	68 <_ZNK4llvm19SmallPtrSetImplBase8find_impEPKv+0x68>  // b.any
  80:	b	88 <_ZNK4llvm19SmallPtrSetImplBase8find_impEPKv+0x88>
  84:	mov	x0, x8
  88:	ldp	x20, x19, [sp, #16]
  8c:	ldp	x29, x30, [sp], #32
  90:	ret

Disassembly of section .text._ZN4llvm19SmallPtrSetImplBase9erase_impEPKv:

0000000000000000 <_ZN4llvm19SmallPtrSetImplBase9erase_impEPKv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x20, x1
  10:	mov	x19, x0
  14:	bl	0 <_ZN4llvm19SmallPtrSetImplBase9erase_impEPKv>
  18:	ldp	x9, x8, [x19, #8]
  1c:	mov	w10, #0x18                  	// #24
  20:	cmp	x8, x9
  24:	mov	w9, #0x1c                  	// #28
  28:	csel	x9, x9, x10, eq  // eq = none
  2c:	ldr	w9, [x19, x9]
  30:	add	x8, x8, x9, lsl #3
  34:	cmp	x0, x8
  38:	b.eq	64 <_ZN4llvm19SmallPtrSetImplBase9erase_impEPKv+0x64>  // b.none
  3c:	ldr	x8, [x0]
  40:	cmp	x8, x20
  44:	b.ne	74 <_ZN4llvm19SmallPtrSetImplBase9erase_impEPKv+0x74>  // b.any
  48:	mov	x8, #0xfffffffffffffffe    	// #-2
  4c:	str	x8, [x0]
  50:	ldr	w8, [x19, #32]
  54:	mov	w0, #0x1                   	// #1
  58:	add	w8, w8, #0x1
  5c:	str	w8, [x19, #32]
  60:	b	68 <_ZN4llvm19SmallPtrSetImplBase9erase_impEPKv+0x68>
  64:	mov	w0, wzr
  68:	ldp	x20, x19, [sp, #16]
  6c:	ldp	x29, x30, [sp], #32
  70:	ret
  74:	adrp	x0, 0 <_ZN4llvm19SmallPtrSetImplBase9erase_impEPKv>
  78:	adrp	x1, 0 <_ZN4llvm19SmallPtrSetImplBase9erase_impEPKv>
  7c:	adrp	x3, 0 <_ZN4llvm19SmallPtrSetImplBase9erase_impEPKv>
  80:	add	x0, x0, #0x0
  84:	add	x1, x1, #0x0
  88:	add	x3, x3, #0x0
  8c:	mov	w2, #0xa7                  	// #167
  90:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13isa_impl_wrapINS_15CoroSuspendInstEPKNS_18AnyCoroSuspendInstES4_E4doitERKS4_:

0000000000000000 <_ZN4llvm13isa_impl_wrapINS_15CoroSuspendInstEPKNS_18AnyCoroSuspendInstES4_E4doitERKS4_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	cbz	x8, 34 <_ZN4llvm13isa_impl_wrapINS_15CoroSuspendInstEPKNS_18AnyCoroSuspendInstES4_E4doitERKS4_+0x34>
  10:	ldur	x8, [x8, #-24]
  14:	ldrb	w9, [x8, #16]
  18:	cmp	w9, #0x0
  1c:	csel	x8, x8, xzr, eq  // eq = none
  20:	ldr	w8, [x8, #36]
  24:	cmp	w8, #0x23
  28:	cset	w0, eq  // eq = none
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_15CoroSuspendInstEPKNS_18AnyCoroSuspendInstES4_E4doitERKS4_>
  38:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_15CoroSuspendInstEPKNS_18AnyCoroSuspendInstES4_E4doitERKS4_>
  3c:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_15CoroSuspendInstEPKNS_18AnyCoroSuspendInstES4_E4doitERKS4_>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x69                  	// #105
  50:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE:

0000000000000000 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x21, x1
  14:	mov	x22, x0
  18:	bl	0 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>
  1c:	mov	x19, x0
  20:	mov	x20, x1
  24:	mov	x0, x22
  28:	mov	x1, x21
  2c:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
  30:	cbz	w0, 60 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE+0x60>
  34:	mov	w8, w0
  38:	tst	w20, #0xff
  3c:	add	x9, x19, x8
  40:	ldp	x20, x19, [sp, #32]
  44:	ldp	x22, x21, [sp, #16]
  48:	sub	x9, x9, #0x1
  4c:	udiv	x9, x9, x8
  50:	mul	x0, x9, x8
  54:	cset	w1, ne  // ne = any
  58:	ldp	x29, x30, [sp], #48
  5c:	ret
  60:	adrp	x0, 0 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>
  64:	adrp	x1, 0 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>
  68:	adrp	x3, 0 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>
  6c:	add	x0, x0, #0x0
  70:	add	x1, x1, #0x0
  74:	add	x3, x3, #0x0
  78:	mov	w2, #0xc7                  	// #199
  7c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10DataLayout16getTypeStoreSizeEPNS_4TypeE:

0000000000000000 <_ZNK4llvm10DataLayout16getTypeStoreSizeEPNS_4TypeE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	bl	0 <_ZNK4llvm10DataLayout16getTypeStoreSizeEPNS_4TypeE>
   c:	add	x8, x0, #0x7
  10:	tst	w1, #0xff
  14:	lsr	x0, x8, #3
  18:	cset	w1, ne  // ne = any
  1c:	ldp	x29, x30, [sp], #16
  20:	ret

Disassembly of section .text._ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE:

0000000000000000 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x1, #8]
  14:	and	w9, w8, #0xff
  18:	cmp	w9, #0x10
  1c:	b.hi	18c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x18c>  // b.pmore
  20:	mov	w10, #0x1                   	// #1
  24:	lsl	w9, w10, w9
  28:	mov	w10, #0x8a7e                	// #35454
  2c:	mov	x20, x1
  30:	mov	x19, x0
  34:	tst	w9, w10
  38:	b.ne	60 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x60>  // b.any
  3c:	mov	w8, #0x6000                	// #24576
  40:	movk	w8, #0x1, lsl #16
  44:	tst	w9, w8
  48:	b.eq	18c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x18c>  // b.none
  4c:	mov	x0, x20
  50:	mov	x1, xzr
  54:	bl	0 <_ZNK4llvm4Type18isSizedDerivedTypeEPNS_15SmallPtrSetImplIPS0_EE>
  58:	tbz	w0, #0, 18c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x18c>
  5c:	ldr	w8, [x20, #8]
  60:	and	w9, w8, #0xff
  64:	sub	w9, w9, #0x1
  68:	cmp	w9, #0xf
  6c:	b.hi	174 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x174>  // b.pmore
  70:	adrp	x10, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  74:	add	x10, x10, #0x0
  78:	adr	x11, 90 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x90>
  7c:	ldrb	w12, [x10, x9]
  80:	add	x11, x11, x12, lsl #2
  84:	mov	x1, xzr
  88:	mov	w0, #0x10                  	// #16
  8c:	br	x11
  90:	mov	x1, xzr
  94:	mov	w0, #0x40                  	// #64
  98:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
  9c:	mov	x1, xzr
  a0:	mov	w0, #0x80                  	// #128
  a4:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
  a8:	and	w9, w8, #0xff
  ac:	cmp	w9, #0xf
  b0:	b.ne	1ac <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1ac>  // b.any
  b4:	lsr	w1, w8, #8
  b8:	mov	x0, x19
  bc:	b	118 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x118>
  c0:	ldr	x21, [x20, #32]
  c4:	lsr	x8, x21, #32
  c8:	cbnz	x8, 1cc <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1cc>
  cc:	ldr	x1, [x20, #24]
  d0:	ldrb	w22, [x20, #40]
  d4:	mov	x0, x19
  d8:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  dc:	tst	w1, #0xff
  e0:	b.ne	1ec <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1ec>  // b.any
  e4:	and	x8, x21, #0x100000000
  e8:	orr	x8, x8, x22, lsl #32
  ec:	mul	x0, x0, x21
  f0:	lsr	x1, x8, #32
  f4:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
  f8:	mov	x0, x19
  fc:	mov	x1, x20
 100:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 104:	ldr	x8, [x0]
 108:	mov	x1, xzr
 10c:	b	15c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x15c>
 110:	mov	x0, x19
 114:	mov	w1, wzr
 118:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
 11c:	mov	x1, xzr
 120:	lsl	w0, w0, #3
 124:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
 128:	mov	x1, xzr
 12c:	mov	w0, #0x20                  	// #32
 130:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
 134:	mov	x1, xzr
 138:	mov	w0, #0x50                  	// #80
 13c:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
 140:	mov	x1, xzr
 144:	lsr	w0, w8, #8
 148:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
 14c:	ldp	x1, x21, [x20, #24]
 150:	mov	x0, x19
 154:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 158:	mul	x8, x21, x0
 15c:	lsl	x0, x8, #3
 160:	ldp	x20, x19, [sp, #32]
 164:	ldp	x22, x21, [sp, #16]
 168:	and	x1, x1, #0xff
 16c:	ldp	x29, x30, [sp], #48
 170:	ret
 174:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 178:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 17c:	add	x0, x0, #0x0
 180:	add	x1, x1, #0x0
 184:	mov	w2, #0x298                 	// #664
 188:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 18c:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 190:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 194:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 198:	add	x0, x0, #0x0
 19c:	add	x1, x1, #0x0
 1a0:	add	x3, x3, #0x0
 1a4:	mov	w2, #0x271                 	// #625
 1a8:	bl	0 <__assert_fail>
 1ac:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1b0:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1b4:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1b8:	add	x0, x0, #0x0
 1bc:	add	x1, x1, #0x0
 1c0:	add	x3, x3, #0x0
 1c4:	mov	w2, #0x108                 	// #264
 1c8:	bl	0 <__assert_fail>
 1cc:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1d0:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1d4:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1d8:	add	x0, x0, #0x0
 1dc:	add	x1, x1, #0x0
 1e0:	add	x3, x3, #0x0
 1e4:	mov	w2, #0x220                 	// #544
 1e8:	bl	0 <__assert_fail>
 1ec:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1f0:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1f4:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1f8:	add	x0, x0, #0x0
 1fc:	add	x1, x1, #0x0
 200:	add	x3, x3, #0x0
 204:	mov	w2, #0x7d                  	// #125
 208:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm13CoroBeginInst5getIdEv:

0000000000000000 <_ZNK4llvm13CoroBeginInst5getIdEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	w1, wzr
  10:	bl	0 <_ZNK4llvm13CoroBeginInst5getIdEv>
  14:	mov	x19, x0
  18:	str	x0, [x29, #24]
  1c:	add	x0, x29, #0x18
  20:	bl	0 <_ZNK4llvm13CoroBeginInst5getIdEv>
  24:	tbz	w0, #0, 38 <_ZNK4llvm13CoroBeginInst5getIdEv+0x38>
  28:	mov	x0, x19
  2c:	ldr	x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret
  38:	adrp	x0, 0 <_ZNK4llvm13CoroBeginInst5getIdEv>
  3c:	adrp	x1, 0 <_ZNK4llvm13CoroBeginInst5getIdEv>
  40:	adrp	x3, 0 <_ZNK4llvm13CoroBeginInst5getIdEv>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x108                 	// #264
  54:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13AnyCoroIdInst12getCoroAllocEv:

0000000000000000 <_ZN4llvm13AnyCoroIdInst12getCoroAllocEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
  14:	ldr	x8, [x19, #8]
  18:	str	x8, [x29, #24]
  1c:	cbz	x8, 6c <_ZN4llvm13AnyCoroIdInst12getCoroAllocEv+0x6c>
  20:	add	x0, x29, #0x18
  24:	bl	0 <_ZN4llvm13AnyCoroIdInst12getCoroAllocEv>
  28:	cbz	x0, 7c <_ZN4llvm13AnyCoroIdInst12getCoroAllocEv+0x7c>
  2c:	ldrb	w8, [x0, #16]
  30:	cmp	w8, #0x50
  34:	b.ne	5c <_ZN4llvm13AnyCoroIdInst12getCoroAllocEv+0x5c>  // b.any
  38:	ldur	x8, [x0, #-24]
  3c:	cbz	x8, 5c <_ZN4llvm13AnyCoroIdInst12getCoroAllocEv+0x5c>
  40:	ldrb	w9, [x8, #16]
  44:	cbnz	w9, 5c <_ZN4llvm13AnyCoroIdInst12getCoroAllocEv+0x5c>
  48:	ldrb	w9, [x8, #33]
  4c:	tbz	w9, #5, 5c <_ZN4llvm13AnyCoroIdInst12getCoroAllocEv+0x5c>
  50:	ldr	w8, [x8, #36]
  54:	cmp	w8, #0xe
  58:	b.eq	70 <_ZN4llvm13AnyCoroIdInst12getCoroAllocEv+0x70>  // b.none
  5c:	ldr	x8, [x29, #24]
  60:	cbz	x8, 9c <_ZN4llvm13AnyCoroIdInst12getCoroAllocEv+0x9c>
  64:	ldr	x8, [x8, #8]
  68:	b	18 <_ZN4llvm13AnyCoroIdInst12getCoroAllocEv+0x18>
  6c:	mov	x0, xzr
  70:	ldr	x19, [sp, #16]
  74:	ldp	x29, x30, [sp], #32
  78:	ret
  7c:	adrp	x0, 0 <_ZN4llvm13AnyCoroIdInst12getCoroAllocEv>
  80:	adrp	x1, 0 <_ZN4llvm13AnyCoroIdInst12getCoroAllocEv>
  84:	adrp	x3, 0 <_ZN4llvm13AnyCoroIdInst12getCoroAllocEv>
  88:	add	x0, x0, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0x69                  	// #105
  98:	bl	0 <__assert_fail>
  9c:	adrp	x0, 0 <_ZN4llvm13AnyCoroIdInst12getCoroAllocEv>
  a0:	adrp	x1, 0 <_ZN4llvm13AnyCoroIdInst12getCoroAllocEv>
  a4:	adrp	x3, 0 <_ZN4llvm13AnyCoroIdInst12getCoroAllocEv>
  a8:	add	x0, x0, #0x0
  ac:	add	x1, x1, #0x0
  b0:	add	x3, x3, #0x0
  b4:	mov	w2, #0x8d                  	// #141
  b8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEC2EPNS_11InstructionEPNS_6MDNodeENS_8ArrayRefINS_17OperandBundleDefTIPNS_5ValueEEEEE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEC2EPNS_11InstructionEPNS_6MDNodeENS_8ArrayRefINS_17OperandBundleDefTIPNS_5ValueEEEEE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x23, x0
  18:	mov	x0, x1
  1c:	mov	x19, x4
  20:	mov	x20, x3
  24:	mov	x21, x2
  28:	mov	x22, x1
  2c:	bl	0 <_ZNK4llvm5Value10getContextEv>
  30:	mov	w8, #0x200                 	// #512
  34:	stp	x0, x21, [x23, #24]
  38:	str	wzr, [x23, #40]
  3c:	strb	wzr, [x23, #46]
  40:	stp	x20, x19, [x23, #48]
  44:	stp	xzr, xzr, [x23, #8]
  48:	strh	w8, [x23, #44]
  4c:	str	xzr, [x23]
  50:	mov	x0, x23
  54:	mov	x1, x22
  58:	ldp	x20, x19, [sp, #48]
  5c:	ldp	x22, x21, [sp, #32]
  60:	ldr	x23, [sp, #16]
  64:	ldp	x29, x30, [sp], #64
  68:	b	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEC2EPNS_11InstructionEPNS_6MDNodeENS_8ArrayRefINS_17OperandBundleDefTIPNS_5ValueEEEEE>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateAllocaEPNS_4TypeEPNS_5ValueERKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateAllocaEPNS_4TypeEPNS_5ValueERKNS_5TwineE>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x24, x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	ldr	x8, [x0, #8]
  1c:	mov	x21, x0
  20:	mov	x19, x3
  24:	mov	x20, x2
  28:	ldr	x8, [x8, #56]
  2c:	mov	x22, x1
  30:	ldr	x0, [x8, #40]
  34:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
  38:	mov	x23, x0
  3c:	mov	w0, #0x40                  	// #64
  40:	mov	w1, #0x1                   	// #1
  44:	bl	0 <_ZN4llvm4UsernwEmj>
  48:	ldr	w23, [x23, #4]
  4c:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateAllocaEPNS_4TypeEPNS_5ValueERKNS_5TwineE>
  50:	mov	x24, x0
  54:	add	x1, x1, #0x0
  58:	add	x0, sp, #0x8
  5c:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateAllocaEPNS_4TypeEPNS_5ValueERKNS_5TwineE>
  60:	add	x4, sp, #0x8
  64:	mov	x0, x24
  68:	mov	x1, x22
  6c:	mov	w2, w23
  70:	mov	x3, x20
  74:	mov	x5, xzr
  78:	bl	0 <_ZN4llvm10AllocaInstC1EPNS_4TypeEjPNS_5ValueERKNS_5TwineEPNS_11InstructionE>
  7c:	ldp	x3, x4, [x21, #8]
  80:	mov	x0, x21
  84:	mov	x1, x24
  88:	mov	x2, x19
  8c:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateAllocaEPNS_4TypeEPNS_5ValueERKNS_5TwineE>
  90:	mov	x0, x21
  94:	mov	x1, x24
  98:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateAllocaEPNS_4TypeEPNS_5ValueERKNS_5TwineE>
  9c:	mov	x0, x24
  a0:	ldp	x20, x19, [sp, #80]
  a4:	ldp	x22, x21, [sp, #64]
  a8:	ldp	x24, x23, [sp, #48]
  ac:	ldp	x29, x30, [sp, #32]
  b0:	add	sp, sp, #0x60
  b4:	ret

Disassembly of section .text._ZN4llvm13isa_impl_wrapINS_13AnyCoroIdInstEPKNS_5ValueES4_E4doitERKS4_:

0000000000000000 <_ZN4llvm13isa_impl_wrapINS_13AnyCoroIdInstEPKNS_5ValueES4_E4doitERKS4_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0]
   c:	cbz	x0, 18 <_ZN4llvm13isa_impl_wrapINS_13AnyCoroIdInstEPKNS_5ValueES4_E4doitERKS4_+0x18>
  10:	ldp	x29, x30, [sp], #16
  14:	b	0 <_ZN4llvm13isa_impl_wrapINS_13AnyCoroIdInstEPKNS_5ValueES4_E4doitERKS4_>
  18:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_13AnyCoroIdInstEPKNS_5ValueES4_E4doitERKS4_>
  1c:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_13AnyCoroIdInstEPKNS_5ValueES4_E4doitERKS4_>
  20:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_13AnyCoroIdInstEPKNS_5ValueES4_E4doitERKS4_>
  24:	add	x0, x0, #0x0
  28:	add	x1, x1, #0x0
  2c:	add	x3, x3, #0x0
  30:	mov	w2, #0x69                  	// #105
  34:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13AnyCoroIdInst7classofEPKNS_5ValueE:

0000000000000000 <_ZN4llvm13AnyCoroIdInst7classofEPKNS_5ValueE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x0, 5c <_ZN4llvm13AnyCoroIdInst7classofEPKNS_5ValueE+0x5c>
   c:	ldrb	w8, [x0, #16]
  10:	cmp	w8, #0x50
  14:	b.ne	30 <_ZN4llvm13AnyCoroIdInst7classofEPKNS_5ValueE+0x30>  // b.any
  18:	ldur	x8, [x0, #-24]
  1c:	cbz	x8, 30 <_ZN4llvm13AnyCoroIdInst7classofEPKNS_5ValueE+0x30>
  20:	ldrb	w9, [x8, #16]
  24:	cbnz	w9, 30 <_ZN4llvm13AnyCoroIdInst7classofEPKNS_5ValueE+0x30>
  28:	ldrb	w9, [x8, #33]
  2c:	tbnz	w9, #5, 3c <_ZN4llvm13AnyCoroIdInst7classofEPKNS_5ValueE+0x3c>
  30:	mov	w0, wzr
  34:	ldp	x29, x30, [sp], #16
  38:	ret
  3c:	ldr	w8, [x8, #36]
  40:	orr	w9, w8, #0x1
  44:	cmp	w9, #0x19
  48:	cset	w9, eq  // eq = none
  4c:	cmp	w8, #0x1a
  50:	cset	w8, eq  // eq = none
  54:	orr	w0, w8, w9
  58:	b	34 <_ZN4llvm13AnyCoroIdInst7classofEPKNS_5ValueE+0x34>
  5c:	adrp	x0, 0 <_ZN4llvm13AnyCoroIdInst7classofEPKNS_5ValueE>
  60:	adrp	x1, 0 <_ZN4llvm13AnyCoroIdInst7classofEPKNS_5ValueE>
  64:	adrp	x3, 0 <_ZN4llvm13AnyCoroIdInst7classofEPKNS_5ValueE>
  68:	add	x0, x0, #0x0
  6c:	add	x1, x1, #0x0
  70:	add	x3, x3, #0x0
  74:	mov	w2, #0x69                  	// #105
  78:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13isa_impl_wrapINS_10CoroIdInstEPKNS_13AnyCoroIdInstES4_E4doitERKS4_:

0000000000000000 <_ZN4llvm13isa_impl_wrapINS_10CoroIdInstEPKNS_13AnyCoroIdInstES4_E4doitERKS4_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	cbz	x8, 34 <_ZN4llvm13isa_impl_wrapINS_10CoroIdInstEPKNS_13AnyCoroIdInstES4_E4doitERKS4_+0x34>
  10:	ldur	x8, [x8, #-24]
  14:	ldrb	w9, [x8, #16]
  18:	cmp	w9, #0x0
  1c:	csel	x8, x8, xzr, eq  // eq = none
  20:	ldr	w8, [x8, #36]
  24:	cmp	w8, #0x18
  28:	cset	w0, eq  // eq = none
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_10CoroIdInstEPKNS_13AnyCoroIdInstES4_E4doitERKS4_>
  38:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_10CoroIdInstEPKNS_13AnyCoroIdInstES4_E4doitERKS4_>
  3c:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_10CoroIdInstEPKNS_13AnyCoroIdInstES4_E4doitERKS4_>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x69                  	// #105
  50:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE:

0000000000000000 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x1, #40]
  10:	add	x9, x1, #0x18
  14:	add	x10, x8, #0x28
  18:	cmp	x9, x10
  1c:	stp	x8, x9, [x0, #8]
  20:	b.eq	68 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x68>  // b.none
  24:	ldr	x1, [x1, #48]
  28:	mov	x19, x0
  2c:	str	x1, [x29, #24]
  30:	cbz	x1, 40 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x40>
  34:	add	x0, x29, #0x18
  38:	mov	w2, #0x2                   	// #2
  3c:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  40:	add	x1, x29, #0x18
  44:	mov	x0, x19
  48:	bl	0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>
  4c:	ldr	x1, [x29, #24]
  50:	cbz	x1, 5c <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x5c>
  54:	add	x0, x29, #0x18
  58:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  5c:	ldr	x19, [sp, #16]
  60:	ldp	x29, x30, [sp], #32
  64:	ret
  68:	adrp	x0, 0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>
  6c:	adrp	x1, 0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>
  70:	adrp	x3, 0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x8e                  	// #142
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13TrackingMDRefaSEOS0_:

0000000000000000 <_ZN4llvm13TrackingMDRefaSEOS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	cmp	x1, x0
  14:	b.eq	40 <_ZN4llvm13TrackingMDRefaSEOS0_+0x40>  // b.none
  18:	mov	x20, x1
  1c:	ldr	x1, [x19]
  20:	cbz	x1, 2c <_ZN4llvm13TrackingMDRefaSEOS0_+0x2c>
  24:	mov	x0, x19
  28:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  2c:	ldr	x8, [x20]
  30:	mov	x0, x19
  34:	mov	x1, x20
  38:	str	x8, [x19]
  3c:	bl	0 <_ZN4llvm13TrackingMDRefaSEOS0_>
  40:	mov	x0, x19
  44:	ldp	x20, x19, [sp, #16]
  48:	ldp	x29, x30, [sp], #32
  4c:	ret

Disassembly of section .text._ZN4llvm13TrackingMDRef7retrackERS0_:

0000000000000000 <_ZN4llvm13TrackingMDRef7retrackERS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x1
  10:	ldr	x1, [x0]
  14:	ldr	x8, [x19]
  18:	cmp	x1, x8
  1c:	b.ne	40 <_ZN4llvm13TrackingMDRef7retrackERS0_+0x40>  // b.any
  20:	cbz	x1, 34 <_ZN4llvm13TrackingMDRef7retrackERS0_+0x34>
  24:	mov	x2, x0
  28:	mov	x0, x19
  2c:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  30:	str	xzr, [x19]
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret
  40:	adrp	x0, 0 <_ZN4llvm13TrackingMDRef7retrackERS0_>
  44:	adrp	x1, 0 <_ZN4llvm13TrackingMDRef7retrackERS0_>
  48:	adrp	x3, 0 <_ZN4llvm13TrackingMDRef7retrackERS0_>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x5e                  	// #94
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm24IRBuilderDefaultInserter12InsertHelperEPNS_11InstructionERKNS_5TwineEPNS_10BasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS1_Lb1ELb0EvEELb0ELb0EEE:

0000000000000000 <_ZNK4llvm24IRBuilderDefaultInserter12InsertHelperEPNS_11InstructionERKNS_5TwineEPNS_10BasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS1_Lb1ELb0EvEELb0ELb0EEE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x2
  14:	mov	x20, x1
  18:	cbz	x3, 38 <_ZNK4llvm24IRBuilderDefaultInserter12InsertHelperEPNS_11InstructionERKNS_5TwineEPNS_10BasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS1_Lb1ELb0EvEELb0ELb0EEE+0x38>
  1c:	add	x0, x3, #0x28
  20:	mov	x1, x20
  24:	mov	x21, x4
  28:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  2c:	add	x1, x20, #0x18
  30:	mov	x0, x21
  34:	bl	0 <_ZNK4llvm24IRBuilderDefaultInserter12InsertHelperEPNS_11InstructionERKNS_5TwineEPNS_10BasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS1_Lb1ELb0EvEELb0ELb0EEE>
  38:	mov	x0, x20
  3c:	mov	x1, x19
  40:	ldp	x20, x19, [sp, #32]
  44:	ldr	x21, [sp, #16]
  48:	ldp	x29, x30, [sp], #48
  4c:	b	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>

Disassembly of section .text._ZNK4llvm13IRBuilderBase20SetInstDebugLocationEPNS_11InstructionE:

0000000000000000 <_ZNK4llvm13IRBuilderBase20SetInstDebugLocationEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x0]
  10:	cbz	x8, 48 <_ZNK4llvm13IRBuilderBase20SetInstDebugLocationEPNS_11InstructionE+0x48>
  14:	mov	x19, x1
  18:	add	x0, x29, #0x18
  1c:	mov	w2, #0x2                   	// #2
  20:	mov	x1, x8
  24:	str	x8, [x29, #24]
  28:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  2c:	add	x0, x19, #0x30
  30:	add	x1, x29, #0x18
  34:	bl	0 <_ZNK4llvm13IRBuilderBase20SetInstDebugLocationEPNS_11InstructionE>
  38:	ldr	x1, [x29, #24]
  3c:	cbz	x1, 48 <_ZNK4llvm13IRBuilderBase20SetInstDebugLocationEPNS_11InstructionE+0x48>
  40:	add	x0, x29, #0x18
  44:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  48:	ldr	x19, [sp, #16]
  4c:	ldp	x29, x30, [sp], #32
  50:	ret

Disassembly of section .text._ZN4llvm10ilist_baseILb1EE16insertBeforeImplERNS_15ilist_node_baseILb1EEES4_:

0000000000000000 <_ZN4llvm10ilist_baseILb1EE16insertBeforeImplERNS_15ilist_node_baseILb1EEES4_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	ldr	x9, [x1]
  10:	tst	x1, #0x7
  14:	and	x10, x8, #0xfffffffffffffff8
  18:	bfxil	x8, x9, #0, #3
  1c:	stp	x8, x0, [x1]
  20:	str	x1, [x10, #8]
  24:	b.ne	40 <_ZN4llvm10ilist_baseILb1EE16insertBeforeImplERNS_15ilist_node_baseILb1EEES4_+0x40>  // b.any
  28:	ldr	x8, [x0]
  2c:	and	x8, x8, #0x7
  30:	orr	x8, x8, x1
  34:	str	x8, [x0]
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZN4llvm10ilist_baseILb1EE16insertBeforeImplERNS_15ilist_node_baseILb1EEES4_>
  44:	adrp	x1, 0 <_ZN4llvm10ilist_baseILb1EE16insertBeforeImplERNS_15ilist_node_baseILb1EEES4_>
  48:	adrp	x3, 0 <_ZN4llvm10ilist_baseILb1EE16insertBeforeImplERNS_15ilist_node_baseILb1EEES4_>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0xb3                  	// #179
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCastENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCastENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineE>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	str	x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	ldr	x8, [x2]
  1c:	mov	x19, x2
  20:	cmp	x8, x3
  24:	b.eq	90 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCastENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineE+0x90>  // b.none
  28:	ldrb	w8, [x19, #16]
  2c:	mov	x22, x3
  30:	mov	w23, w1
  34:	cmp	w8, #0x10
  38:	b.ls	ac <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCastENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineE+0xac>  // b.plast
  3c:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCastENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineE>
  40:	mov	x21, x0
  44:	add	x1, x1, #0x0
  48:	add	x0, sp, #0x8
  4c:	mov	x20, x4
  50:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCastENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineE>
  54:	add	x3, sp, #0x8
  58:	mov	w0, w23
  5c:	mov	x1, x19
  60:	mov	x2, x22
  64:	mov	x4, xzr
  68:	bl	0 <_ZN4llvm8CastInst6CreateENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineEPS1_>
  6c:	ldp	x3, x4, [x21, #8]
  70:	mov	x19, x0
  74:	mov	x0, x21
  78:	mov	x1, x19
  7c:	mov	x2, x20
  80:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCastENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineE>
  84:	mov	x0, x21
  88:	mov	x1, x19
  8c:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCastENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineE>
  90:	mov	x0, x19
  94:	ldp	x20, x19, [sp, #80]
  98:	ldp	x22, x21, [sp, #64]
  9c:	ldr	x23, [sp, #48]
  a0:	ldp	x29, x30, [sp, #32]
  a4:	add	sp, sp, #0x60
  a8:	ret
  ac:	mov	w0, w23
  b0:	mov	x1, x19
  b4:	mov	x2, x22
  b8:	ldp	x20, x19, [sp, #80]
  bc:	ldp	x22, x21, [sp, #64]
  c0:	ldr	x23, [sp, #48]
  c4:	ldp	x29, x30, [sp, #32]
  c8:	mov	w3, wzr
  cc:	add	sp, sp, #0x60
  d0:	b	0 <_ZN4llvm12ConstantExpr7getCastEjPNS_8ConstantEPNS_4TypeEb>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_4TypeEPNS_5ValueEPKc:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_4TypeEPNS_5ValueEPKc>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #48]
   8:	str	x23, [sp, #64]
   c:	stp	x22, x21, [sp, #80]
  10:	stp	x20, x19, [sp, #96]
  14:	add	x29, sp, #0x30
  18:	mov	x21, x1
  1c:	mov	x22, x0
  20:	mov	w0, #0x40                  	// #64
  24:	mov	w1, #0x1                   	// #1
  28:	mov	x19, x3
  2c:	mov	x20, x2
  30:	bl	0 <_ZN4llvm4UsernwEmj>
  34:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_4TypeEPNS_5ValueEPKc>
  38:	mov	x23, x0
  3c:	add	x1, x1, #0x0
  40:	add	x0, sp, #0x18
  44:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_4TypeEPNS_5ValueEPKc>
  48:	add	x3, sp, #0x18
  4c:	mov	x0, x23
  50:	mov	x1, x21
  54:	mov	x2, x20
  58:	mov	x4, xzr
  5c:	bl	0 <_ZN4llvm8LoadInstC1EPNS_4TypeEPNS_5ValueERKNS_5TwineEPNS_11InstructionE>
  60:	mov	x0, sp
  64:	mov	x1, x19
  68:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_4TypeEPNS_5ValueEPKc>
  6c:	ldp	x3, x4, [x22, #8]
  70:	mov	x2, sp
  74:	mov	x0, x22
  78:	mov	x1, x23
  7c:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_4TypeEPNS_5ValueEPKc>
  80:	mov	x0, x22
  84:	mov	x1, x23
  88:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_4TypeEPNS_5ValueEPKc>
  8c:	mov	x0, x23
  90:	ldp	x20, x19, [sp, #96]
  94:	ldp	x22, x21, [sp, #80]
  98:	ldr	x23, [sp, #64]
  9c:	ldp	x29, x30, [sp, #48]
  a0:	add	sp, sp, #0x70
  a4:	ret

Disassembly of section .text._ZNK4llvm4coro5Shape12getIndexTypeEv:

0000000000000000 <_ZNK4llvm4coro5Shape12getIndexTypeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #168]
   c:	cbnz	w8, 44 <_ZNK4llvm4coro5Shape12getIndexTypeEv+0x44>
  10:	ldr	x8, [x0, #176]
  14:	cbz	x8, 64 <_ZNK4llvm4coro5Shape12getIndexTypeEv+0x64>
  18:	ldr	w9, [x8, #12]
  1c:	cmp	w9, #0x3
  20:	b.ls	84 <_ZNK4llvm4coro5Shape12getIndexTypeEv+0x84>  // b.plast
  24:	ldr	x8, [x8, #16]
  28:	ldr	x0, [x8, #24]
  2c:	cbz	x0, a4 <_ZNK4llvm4coro5Shape12getIndexTypeEv+0xa4>
  30:	ldrb	w8, [x0, #8]
  34:	cmp	w8, #0xb
  38:	b.ne	c4 <_ZNK4llvm4coro5Shape12getIndexTypeEv+0xc4>  // b.any
  3c:	ldp	x29, x30, [sp], #16
  40:	ret
  44:	adrp	x0, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  48:	adrp	x1, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  4c:	adrp	x3, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  50:	add	x0, x0, #0x0
  54:	add	x1, x1, #0x0
  58:	add	x3, x3, #0x0
  5c:	mov	w2, #0x91                  	// #145
  60:	bl	0 <__assert_fail>
  64:	adrp	x0, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  68:	adrp	x1, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  6c:	adrp	x3, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  70:	add	x0, x0, #0x0
  74:	add	x1, x1, #0x0
  78:	add	x3, x3, #0x0
  7c:	mov	w2, #0x92                  	// #146
  80:	bl	0 <__assert_fail>
  84:	adrp	x0, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  88:	adrp	x1, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  8c:	adrp	x3, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  90:	add	x0, x0, #0x0
  94:	add	x1, x1, #0x0
  98:	add	x3, x3, #0x0
  9c:	mov	w2, #0x160                 	// #352
  a0:	bl	0 <__assert_fail>
  a4:	adrp	x0, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  a8:	adrp	x1, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  ac:	adrp	x3, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  b0:	add	x0, x0, #0x0
  b4:	add	x1, x1, #0x0
  b8:	add	x3, x3, #0x0
  bc:	mov	w2, #0x69                  	// #105
  c0:	bl	0 <__assert_fail>
  c4:	adrp	x0, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  c8:	adrp	x1, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  cc:	adrp	x3, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  d0:	add	x0, x0, #0x0
  d4:	add	x1, x1, #0x0
  d8:	add	x3, x3, #0x0
  dc:	mov	w2, #0x108                 	// #264
  e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSwitchEPNS_5ValueEPNS_10BasicBlockEjPNS_6MDNodeES9_:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSwitchEPNS_5ValueEPNS_10BasicBlockEjPNS_6MDNodeES9_>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #32]
   8:	str	x25, [sp, #48]
   c:	stp	x24, x23, [sp, #64]
  10:	stp	x22, x21, [sp, #80]
  14:	stp	x20, x19, [sp, #96]
  18:	add	x29, sp, #0x20
  1c:	mov	x24, x0
  20:	mov	w0, #0x40                  	// #64
  24:	mov	x19, x5
  28:	mov	x20, x4
  2c:	mov	w21, w3
  30:	mov	x22, x2
  34:	mov	x23, x1
  38:	bl	0 <_ZN4llvm4UsernwEm>
  3c:	mov	x1, x23
  40:	mov	x2, x22
  44:	mov	w3, w21
  48:	mov	x4, xzr
  4c:	mov	x25, x0
  50:	bl	0 <_ZN4llvm10SwitchInstC1EPNS_5ValueEPNS_10BasicBlockEjPNS_11InstructionE>
  54:	mov	x0, x24
  58:	mov	x1, x25
  5c:	mov	x2, x20
  60:	mov	x3, x19
  64:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSwitchEPNS_5ValueEPNS_10BasicBlockEjPNS_6MDNodeES9_>
  68:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSwitchEPNS_5ValueEPNS_10BasicBlockEjPNS_6MDNodeES9_>
  6c:	mov	x19, x0
  70:	add	x1, x1, #0x0
  74:	add	x0, sp, #0x8
  78:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSwitchEPNS_5ValueEPNS_10BasicBlockEjPNS_6MDNodeES9_>
  7c:	ldp	x3, x4, [x24, #8]
  80:	add	x2, sp, #0x8
  84:	mov	x0, x24
  88:	mov	x1, x19
  8c:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSwitchEPNS_5ValueEPNS_10BasicBlockEjPNS_6MDNodeES9_>
  90:	mov	x0, x24
  94:	mov	x1, x19
  98:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSwitchEPNS_5ValueEPNS_10BasicBlockEjPNS_6MDNodeES9_>
  9c:	mov	x0, x19
  a0:	ldp	x20, x19, [sp, #96]
  a4:	ldp	x22, x21, [sp, #80]
  a8:	ldp	x24, x23, [sp, #64]
  ac:	ldr	x25, [sp, #48]
  b0:	ldp	x29, x30, [sp, #32]
  b4:	add	sp, sp, #0x70
  b8:	ret

Disassembly of section .text._ZNK4llvm15CoroSuspendInst7isFinalEv:

0000000000000000 <_ZNK4llvm15CoroSuspendInst7isFinalEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w1, #0x1                   	// #1
   c:	bl	0 <_ZNK4llvm15CoroSuspendInst7isFinalEv>
  10:	cbz	x0, 28 <_ZNK4llvm15CoroSuspendInst7isFinalEv+0x28>
  14:	ldrb	w8, [x0, #16]
  18:	cmp	w8, #0x11
  1c:	b.cs	48 <_ZNK4llvm15CoroSuspendInst7isFinalEv+0x48>  // b.hs, b.nlast
  20:	ldp	x29, x30, [sp], #16
  24:	b	0 <_ZNK4llvm8Constant10isOneValueEv>
  28:	adrp	x0, 0 <_ZNK4llvm15CoroSuspendInst7isFinalEv>
  2c:	adrp	x1, 0 <_ZNK4llvm15CoroSuspendInst7isFinalEv>
  30:	adrp	x3, 0 <_ZNK4llvm15CoroSuspendInst7isFinalEv>
  34:	add	x0, x0, #0x0
  38:	add	x1, x1, #0x0
  3c:	add	x3, x3, #0x0
  40:	mov	w2, #0x69                  	// #105
  44:	bl	0 <__assert_fail>
  48:	adrp	x0, 0 <_ZNK4llvm15CoroSuspendInst7isFinalEv>
  4c:	adrp	x1, 0 <_ZNK4llvm15CoroSuspendInst7isFinalEv>
  50:	adrp	x3, 0 <_ZNK4llvm15CoroSuspendInst7isFinalEv>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x108                 	// #264
  64:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE11CreateStoreEPNS_5ValueES5_b:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE11CreateStoreEPNS_5ValueES5_b>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	str	x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	mov	x21, x1
  1c:	mov	x22, x0
  20:	mov	w0, #0x40                  	// #64
  24:	mov	w1, #0x2                   	// #2
  28:	mov	w19, w3
  2c:	mov	x20, x2
  30:	bl	0 <_ZN4llvm4UsernwEmj>
  34:	and	w3, w19, #0x1
  38:	mov	x1, x21
  3c:	mov	x2, x20
  40:	mov	x4, xzr
  44:	mov	x23, x0
  48:	bl	0 <_ZN4llvm9StoreInstC1EPNS_5ValueES2_bPNS_11InstructionE>
  4c:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE11CreateStoreEPNS_5ValueES5_b>
  50:	add	x1, x1, #0x0
  54:	add	x0, sp, #0x8
  58:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE11CreateStoreEPNS_5ValueES5_b>
  5c:	ldp	x3, x4, [x22, #8]
  60:	add	x2, sp, #0x8
  64:	mov	x0, x22
  68:	mov	x1, x23
  6c:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE11CreateStoreEPNS_5ValueES5_b>
  70:	mov	x0, x22
  74:	mov	x1, x23
  78:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE11CreateStoreEPNS_5ValueES5_b>
  7c:	mov	x0, x23
  80:	ldp	x20, x19, [sp, #80]
  84:	ldp	x22, x21, [sp, #64]
  88:	ldr	x23, [sp, #48]
  8c:	ldp	x29, x30, [sp, #32]
  90:	add	sp, sp, #0x60
  94:	ret

Disassembly of section .text._ZN4llvm5TwineC2ERKNS_9StringRefE:

0000000000000000 <_ZN4llvm5TwineC2ERKNS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w8, #0x105                 	// #261
   c:	strh	w8, [x0, #16]
  10:	stp	x1, xzr, [x0]
  14:	bl	0 <_ZN4llvm5TwineC2ERKNS_9StringRefE>
  18:	tbz	w0, #0, 24 <_ZN4llvm5TwineC2ERKNS_9StringRefE+0x24>
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	adrp	x0, 0 <_ZN4llvm5TwineC2ERKNS_9StringRefE>
  28:	adrp	x1, 0 <_ZN4llvm5TwineC2ERKNS_9StringRefE>
  2c:	adrp	x3, 0 <_ZN4llvm5TwineC2ERKNS_9StringRefE>
  30:	add	x0, x0, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x3, x3, #0x0
  3c:	mov	w2, #0x121                 	// #289
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm10BranchInst12setSuccessorEjPNS_10BasicBlockE:

0000000000000000 <_ZN4llvm10BranchInst12setSuccessorEjPNS_10BasicBlockE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #20]
   c:	and	w8, w8, #0xfffffff
  10:	cmp	w8, #0x3
  14:	mov	w8, #0x1                   	// #1
  18:	cinc	w8, w8, eq  // eq = none
  1c:	cmp	w8, w1
  20:	b.ls	90 <_ZN4llvm10BranchInst12setSuccessorEjPNS_10BasicBlockE+0x90>  // b.plast
  24:	mov	w9, w1
  28:	mov	w10, #0x18                  	// #24
  2c:	sub	x8, x0, #0x18
  30:	mneg	x9, x9, x10
  34:	add	x0, x8, x9
  38:	ldr	x9, [x0]
  3c:	cbz	x9, 74 <_ZN4llvm10BranchInst12setSuccessorEjPNS_10BasicBlockE+0x74>
  40:	mov	x9, xzr
  44:	sub	x9, x9, w1, uxtw
  48:	mov	w10, #0x18                  	// #24
  4c:	madd	x9, x9, x10, x8
  50:	ldp	x10, x8, [x9, #8]
  54:	and	x8, x8, #0xfffffffffffffffc
  58:	str	x10, [x8]
  5c:	ldr	x9, [x9, #8]
  60:	cbz	x9, 74 <_ZN4llvm10BranchInst12setSuccessorEjPNS_10BasicBlockE+0x74>
  64:	ldr	x10, [x9, #16]
  68:	and	x10, x10, #0x3
  6c:	orr	x8, x10, x8
  70:	str	x8, [x9, #16]
  74:	str	x2, [x0]
  78:	cbz	x2, 88 <_ZN4llvm10BranchInst12setSuccessorEjPNS_10BasicBlockE+0x88>
  7c:	add	x1, x2, #0x8
  80:	ldp	x29, x30, [sp], #16
  84:	b	0 <_ZN4llvm10BranchInst12setSuccessorEjPNS_10BasicBlockE>
  88:	ldp	x29, x30, [sp], #16
  8c:	ret
  90:	adrp	x0, 0 <_ZN4llvm10BranchInst12setSuccessorEjPNS_10BasicBlockE>
  94:	adrp	x1, 0 <_ZN4llvm10BranchInst12setSuccessorEjPNS_10BasicBlockE>
  98:	adrp	x3, 0 <_ZN4llvm10BranchInst12setSuccessorEjPNS_10BasicBlockE>
  9c:	add	x0, x0, #0x0
  a0:	add	x1, x1, #0x0
  a4:	add	x3, x3, #0x0
  a8:	mov	w2, #0xc08                 	// #3080
  ac:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE:

0000000000000000 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #20]
  14:	ldr	w9, [x0, #56]
  18:	mov	x19, x2
  1c:	mov	x20, x0
  20:	and	w8, w8, #0xfffffff
  24:	cmp	w8, w9
  28:	mov	x21, x1
  2c:	b.ne	40 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0x40>  // b.any
  30:	mov	x0, x20
  34:	bl	0 <_ZN4llvm7PHINode12growOperandsEv>
  38:	ldr	w8, [x20, #20]
  3c:	and	w8, w8, #0xfffffff
  40:	add	w1, w8, #0x1
  44:	mov	x0, x20
  48:	bl	0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
  4c:	ldr	w8, [x20, #20]
  50:	mov	x0, x20
  54:	mov	x2, x21
  58:	and	w8, w8, #0xfffffff
  5c:	sub	w1, w8, #0x1
  60:	bl	0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
  64:	ldr	w8, [x20, #20]
  68:	mov	x0, x20
  6c:	mov	x2, x19
  70:	ldp	x20, x19, [sp, #32]
  74:	ldr	x21, [sp, #16]
  78:	and	w8, w8, #0xfffffff
  7c:	sub	w1, w8, #0x1
  80:	ldp	x29, x30, [sp], #48
  84:	b	0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateUnreachableEv:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateUnreachableEv>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x20, x19, [sp, #48]
   c:	add	x29, sp, #0x20
  10:	mov	x19, x0
  14:	mov	w0, #0x38                  	// #56
  18:	mov	w1, wzr
  1c:	bl	0 <_ZN4llvm4UsernwEmj>
  20:	ldr	x1, [x19, #24]
  24:	mov	x2, xzr
  28:	mov	x20, x0
  2c:	bl	0 <_ZN4llvm15UnreachableInstC1ERNS_11LLVMContextEPNS_11InstructionE>
  30:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateUnreachableEv>
  34:	add	x1, x1, #0x0
  38:	add	x0, sp, #0x8
  3c:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateUnreachableEv>
  40:	ldp	x3, x4, [x19, #8]
  44:	add	x2, sp, #0x8
  48:	mov	x0, x19
  4c:	mov	x1, x20
  50:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateUnreachableEv>
  54:	mov	x0, x19
  58:	mov	x1, x20
  5c:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateUnreachableEv>
  60:	mov	x0, x20
  64:	ldp	x20, x19, [sp, #48]
  68:	ldp	x29, x30, [sp, #32]
  6c:	add	sp, sp, #0x40
  70:	ret

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #48]
   8:	stp	x24, x23, [sp, #64]
   c:	stp	x22, x21, [sp, #80]
  10:	stp	x20, x19, [sp, #96]
  14:	add	x29, sp, #0x30
  18:	mov	x19, x0
  1c:	ldr	x0, [x0, #24]
  20:	mov	x20, x5
  24:	mov	w23, w4
  28:	mov	w24, w3
  2c:	mov	x21, x2
  30:	mov	x22, x1
  34:	bl	0 <_ZN4llvm4Type10getInt32TyERNS_11LLVMContextE>
  38:	mov	w1, w24
  3c:	mov	w2, wzr
  40:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
  44:	stur	x0, [x29, #-16]
  48:	ldr	x0, [x19, #24]
  4c:	bl	0 <_ZN4llvm4Type10getInt32TyERNS_11LLVMContextE>
  50:	mov	w1, w23
  54:	mov	w2, wzr
  58:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
  5c:	stur	x0, [x29, #-8]
  60:	cbz	x21, 10c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE+0x10c>
  64:	ldrb	w8, [x21, #16]
  68:	cmp	w8, #0x10
  6c:	b.ls	cc <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE+0xcc>  // b.plast
  70:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  74:	add	x1, x1, #0x0
  78:	add	x0, sp, #0x8
  7c:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  80:	sub	x2, x29, #0x10
  84:	add	x4, sp, #0x8
  88:	mov	w3, #0x2                   	// #2
  8c:	mov	x0, x22
  90:	mov	x1, x21
  94:	mov	x5, xzr
  98:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  9c:	mov	w1, #0x1                   	// #1
  a0:	mov	x21, x0
  a4:	bl	0 <_ZN4llvm17GetElementPtrInst13setIsInBoundsEb>
  a8:	ldp	x3, x4, [x19, #8]
  ac:	mov	x0, x19
  b0:	mov	x1, x21
  b4:	mov	x2, x20
  b8:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  bc:	mov	x0, x19
  c0:	mov	x1, x21
  c4:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  c8:	b	f0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE+0xf0>
  cc:	sub	x2, x29, #0x10
  d0:	mov	w3, #0x2                   	// #2
  d4:	mov	w4, #0x1                   	// #1
  d8:	mov	x0, x22
  dc:	mov	x1, x21
  e0:	mov	x5, xzr
  e4:	mov	x6, xzr
  e8:	bl	0 <_ZN4llvm12ConstantExpr16getGetElementPtrEPNS_4TypeEPNS_8ConstantENS_8ArrayRefIPNS_5ValueEEEbNS_8OptionalIjEES2_>
  ec:	mov	x21, x0
  f0:	mov	x0, x21
  f4:	ldp	x20, x19, [sp, #96]
  f8:	ldp	x22, x21, [sp, #80]
  fc:	ldp	x24, x23, [sp, #64]
 100:	ldp	x29, x30, [sp, #48]
 104:	add	sp, sp, #0x70
 108:	ret
 10c:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
 110:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
 114:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
 118:	add	x0, x0, #0x0
 11c:	add	x1, x1, #0x0
 120:	add	x3, x3, #0x0
 124:	mov	w2, #0x69                  	// #105
 128:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	x8, [x1]
  1c:	mov	x19, x5
  20:	mov	x20, x4
  24:	mov	x21, x3
  28:	ldrb	w9, [x8, #8]
  2c:	mov	x22, x2
  30:	mov	x23, x1
  34:	mov	x24, x0
  38:	cmp	w9, #0x10
  3c:	b.ne	48 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0x48>  // b.any
  40:	ldr	x8, [x8, #16]
  44:	ldr	x8, [x8]
  48:	cbz	x8, dc <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0xdc>
  4c:	ldrb	w9, [x8, #8]
  50:	cmp	w9, #0xf
  54:	b.ne	fc <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0xfc>  // b.any
  58:	ldr	x8, [x8, #24]
  5c:	cbz	x24, 88 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0x88>
  60:	cmp	x8, x24
  64:	b.eq	8c <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0x8c>  // b.none
  68:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  6c:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  70:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x3a1                 	// #929
  84:	bl	0 <__assert_fail>
  88:	mov	x24, x8
  8c:	add	w25, w21, #0x1
  90:	mov	w0, #0x48                  	// #72
  94:	mov	w1, w25
  98:	bl	0 <_ZN4llvm4UsernwEmj>
  9c:	mov	x1, x24
  a0:	mov	x2, x23
  a4:	mov	x3, x22
  a8:	mov	x4, x21
  ac:	mov	w5, w25
  b0:	mov	x6, x20
  b4:	mov	x7, x19
  b8:	mov	x26, x0
  bc:	bl	0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  c0:	mov	x0, x26
  c4:	ldp	x20, x19, [sp, #64]
  c8:	ldp	x22, x21, [sp, #48]
  cc:	ldp	x24, x23, [sp, #32]
  d0:	ldp	x26, x25, [sp, #16]
  d4:	ldp	x29, x30, [sp], #80
  d8:	ret
  dc:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  e0:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  e4:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x69                  	// #105
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
 100:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
 104:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x108                 	// #264
 118:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x21, x3
  1c:	mov	x22, x2
  20:	mov	x26, x1
  24:	mov	x23, x0
  28:	mov	x0, x1
  2c:	mov	x1, x2
  30:	mov	x2, x3
  34:	mov	x3, x4
  38:	mov	x24, x7
  3c:	mov	x19, x6
  40:	mov	w25, w5
  44:	mov	x20, x4
  48:	bl	0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  4c:	mov	w8, w25
  50:	mov	w9, #0x18                  	// #24
  54:	mneg	x8, x8, x9
  58:	mov	x1, x0
  5c:	add	x3, x23, x8
  60:	mov	w2, #0x22                  	// #34
  64:	mov	x0, x23
  68:	mov	w4, w25
  6c:	mov	x5, x24
  70:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
  74:	mov	x0, x26
  78:	mov	x1, x21
  7c:	mov	x2, x20
  80:	str	x26, [x23, #56]
  84:	bl	0 <_ZN4llvm17GetElementPtrInst14getIndexedTypeEPNS_4TypeENS_8ArrayRefIPNS_5ValueEEE>
  88:	ldr	x8, [x23]
  8c:	str	x0, [x23, #64]
  90:	ldrb	w9, [x8, #8]
  94:	cmp	w9, #0x10
  98:	b.ne	a4 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0xa4>  // b.any
  9c:	ldr	x8, [x8, #16]
  a0:	ldr	x8, [x8]
  a4:	cbz	x8, ec <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0xec>
  a8:	ldrb	w9, [x8, #8]
  ac:	cmp	w9, #0xf
  b0:	b.ne	10c <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0x10c>  // b.any
  b4:	ldr	x8, [x8, #24]
  b8:	cmp	x0, x8
  bc:	b.ne	12c <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0x12c>  // b.any
  c0:	mov	x0, x23
  c4:	mov	x1, x22
  c8:	mov	x2, x21
  cc:	mov	x3, x20
  d0:	mov	x4, x19
  d4:	ldp	x20, x19, [sp, #64]
  d8:	ldp	x22, x21, [sp, #48]
  dc:	ldp	x24, x23, [sp, #32]
  e0:	ldp	x26, x25, [sp, #16]
  e4:	ldp	x29, x30, [sp], #80
  e8:	b	0 <_ZN4llvm17GetElementPtrInst4initEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineE>
  ec:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  f0:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  f4:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  f8:	add	x0, x0, #0x0
  fc:	add	x1, x1, #0x0
 100:	add	x3, x3, #0x0
 104:	mov	w2, #0x69                  	// #105
 108:	bl	0 <__assert_fail>
 10c:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 110:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 114:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 118:	add	x0, x0, #0x0
 11c:	add	x1, x1, #0x0
 120:	add	x3, x3, #0x0
 124:	mov	w2, #0x108                 	// #264
 128:	bl	0 <__assert_fail>
 12c:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 130:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 134:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 138:	add	x0, x0, #0x0
 13c:	add	x1, x1, #0x0
 140:	add	x3, x3, #0x0
 144:	mov	w2, #0x46a                 	// #1130
 148:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE:

0000000000000000 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x2
  14:	mov	x21, x1
  18:	mov	x1, x2
  1c:	mov	x2, x3
  20:	mov	x20, x3
  24:	bl	0 <_ZN4llvm17GetElementPtrInst14getIndexedTypeEPNS_4TypeENS_8ArrayRefIPNS_5ValueEEE>
  28:	cbz	x0, cc <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xcc>
  2c:	ldr	x9, [x21]
  30:	ldr	w8, [x9, #8]
  34:	and	w10, w8, #0xff
  38:	cmp	w10, #0x10
  3c:	b.ne	50 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x50>  // b.any
  40:	ldr	x8, [x9, #16]
  44:	ldr	x8, [x8]
  48:	cbz	x8, 128 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x128>
  4c:	ldr	w8, [x8, #8]
  50:	and	w9, w8, #0xff
  54:	cmp	w9, #0xf
  58:	b.ne	ec <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xec>  // b.any
  5c:	lsr	w1, w8, #8
  60:	bl	0 <_ZN4llvm11PointerType3getEPNS_4TypeEj>
  64:	ldr	x8, [x21]
  68:	ldrb	w9, [x8, #8]
  6c:	cmp	w9, #0x10
  70:	b.ne	80 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x80>  // b.any
  74:	cbz	x8, 10c <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x10c>
  78:	ldr	w1, [x8, #32]
  7c:	b	bc <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xbc>
  80:	cbz	x20, a4 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xa4>
  84:	lsl	x8, x20, #3
  88:	ldr	x9, [x19], #8
  8c:	ldr	x9, [x9]
  90:	ldrb	w10, [x9, #8]
  94:	cmp	w10, #0x10
  98:	b.eq	b4 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xb4>  // b.none
  9c:	subs	x8, x8, #0x8
  a0:	b.ne	88 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x88>  // b.any
  a4:	ldp	x20, x19, [sp, #32]
  a8:	ldr	x21, [sp, #16]
  ac:	ldp	x29, x30, [sp], #48
  b0:	ret
  b4:	cbz	x9, 10c <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x10c>
  b8:	ldr	w1, [x9, #32]
  bc:	ldp	x20, x19, [sp, #32]
  c0:	ldr	x21, [sp, #16]
  c4:	ldp	x29, x30, [sp], #48
  c8:	b	0 <_ZN4llvm10VectorType3getEPNS_4TypeENS_12ElementCountE>
  cc:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  d0:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  d4:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  d8:	add	x0, x0, #0x0
  dc:	add	x1, x1, #0x0
  e0:	add	x3, x3, #0x0
  e4:	mov	w2, #0x375                 	// #885
  e8:	bl	0 <__assert_fail>
  ec:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  f0:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  f4:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  f8:	add	x0, x0, #0x0
  fc:	add	x1, x1, #0x0
 100:	add	x3, x3, #0x0
 104:	mov	w2, #0x108                 	// #264
 108:	bl	0 <__assert_fail>
 10c:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 110:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 114:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 118:	add	x0, x0, #0x0
 11c:	add	x1, x1, #0x0
 120:	add	x3, x3, #0x0
 124:	b	140 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x140>
 128:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 12c:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 130:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 134:	add	x0, x0, #0x0
 138:	add	x1, x1, #0x0
 13c:	add	x3, x3, #0x0
 140:	mov	w2, #0x69                  	// #105
 144:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17addBranchMetadataINS_10SwitchInstEEEPT_S7_PNS_6MDNodeES9_:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17addBranchMetadataINS_10SwitchInstEEEPT_S7_PNS_6MDNodeES9_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x20, x3
  10:	mov	x19, x1
  14:	cbz	x2, 24 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17addBranchMetadataINS_10SwitchInstEEEPT_S7_PNS_6MDNodeES9_+0x24>
  18:	mov	w1, #0x2                   	// #2
  1c:	mov	x0, x19
  20:	bl	0 <_ZN4llvm11Instruction11setMetadataEjPNS_6MDNodeE>
  24:	cbz	x20, 38 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17addBranchMetadataINS_10SwitchInstEEEPT_S7_PNS_6MDNodeES9_+0x38>
  28:	mov	w1, #0xf                   	// #15
  2c:	mov	x0, x19
  30:	mov	x2, x20
  34:	bl	0 <_ZN4llvm11Instruction11setMetadataEjPNS_6MDNodeE>
  38:	mov	x0, x19
  3c:	ldp	x20, x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	ret

Disassembly of section .text._ZN4llvm5TwineC2ENS0_5ChildENS0_8NodeKindES1_S2_:

0000000000000000 <_ZN4llvm5TwineC2ENS0_5ChildENS0_8NodeKindES1_S2_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	stp	x1, x3, [x0]
   c:	strb	w2, [x0, #16]
  10:	strb	w4, [x0, #17]
  14:	bl	0 <_ZN4llvm5TwineC2ENS0_5ChildENS0_8NodeKindES1_S2_>
  18:	tbz	w0, #0, 24 <_ZN4llvm5TwineC2ENS0_5ChildENS0_8NodeKindES1_S2_+0x24>
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	adrp	x0, 0 <_ZN4llvm5TwineC2ENS0_5ChildENS0_8NodeKindES1_S2_>
  28:	adrp	x1, 0 <_ZN4llvm5TwineC2ENS0_5ChildENS0_8NodeKindES1_S2_>
  2c:	adrp	x3, 0 <_ZN4llvm5TwineC2ENS0_5ChildENS0_8NodeKindES1_S2_>
  30:	add	x0, x0, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x3, x3, #0x0
  3c:	mov	w2, #0xb8                  	// #184
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3Use9addToListEPPS0_:

0000000000000000 <_ZN4llvm3Use9addToListEPPS0_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x1]
   c:	mov	x9, x0
  10:	str	x8, [x9, #8]!
  14:	cbz	x8, 30 <_ZN4llvm3Use9addToListEPPS0_+0x30>
  18:	tst	x9, #0x3
  1c:	b.ne	54 <_ZN4llvm3Use9addToListEPPS0_+0x54>  // b.any
  20:	ldr	x10, [x8, #16]
  24:	and	x10, x10, #0x3
  28:	orr	x9, x10, x9
  2c:	str	x9, [x8, #16]
  30:	tst	x1, #0x3
  34:	b.ne	54 <_ZN4llvm3Use9addToListEPPS0_+0x54>  // b.any
  38:	ldr	x8, [x0, #16]
  3c:	and	x8, x8, #0x3
  40:	orr	x8, x8, x1
  44:	str	x8, [x0, #16]
  48:	str	x0, [x1]
  4c:	ldp	x29, x30, [sp], #16
  50:	ret
  54:	adrp	x0, 0 <_ZN4llvm3Use9addToListEPPS0_>
  58:	adrp	x1, 0 <_ZN4llvm3Use9addToListEPPS0_>
  5c:	adrp	x3, 0 <_ZN4llvm3Use9addToListEPPS0_>
  60:	add	x0, x0, #0x0
  64:	add	x1, x1, #0x0
  68:	add	x3, x3, #0x0
  6c:	mov	w2, #0xb3                  	// #179
  70:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm7PHINodeC2EPNS_4TypeEjRKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm7PHINodeC2EPNS_4TypeEjRKNS_5TwineEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x5, x4
  14:	mov	x19, x3
  18:	mov	w20, w2
  1c:	mov	w2, #0x37                  	// #55
  20:	mov	x3, xzr
  24:	mov	w4, wzr
  28:	mov	x21, x0
  2c:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
  30:	mov	x0, x21
  34:	mov	x1, x19
  38:	str	w20, [x21, #56]
  3c:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  40:	ldr	w1, [x21, #56]
  44:	mov	x0, x21
  48:	ldp	x20, x19, [sp, #32]
  4c:	ldr	x21, [sp, #16]
  50:	mov	w2, #0x1                   	// #1
  54:	ldp	x29, x30, [sp], #48
  58:	b	0 <_ZN4llvm4User16allocHungoffUsesEjb>

Disassembly of section .text._ZN4llvm12simple_ilistINS_11InstructionEJEE5frontEv:

0000000000000000 <_ZN4llvm12simple_ilistINS_11InstructionEJEE5frontEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #8]
   c:	ldrb	w9, [x8]
  10:	tbnz	w9, #2, 28 <_ZN4llvm12simple_ilistINS_11InstructionEJEE5frontEv+0x28>
  14:	sub	x9, x8, #0x18
  18:	cmp	x8, #0x0
  1c:	csel	x0, xzr, x9, eq  // eq = none
  20:	ldp	x29, x30, [sp], #16
  24:	ret
  28:	adrp	x0, 0 <_ZN4llvm12simple_ilistINS_11InstructionEJEE5frontEv>
  2c:	adrp	x1, 0 <_ZN4llvm12simple_ilistINS_11InstructionEJEE5frontEv>
  30:	adrp	x3, 0 <_ZN4llvm12simple_ilistINS_11InstructionEJEE5frontEv>
  34:	add	x0, x0, #0x0
  38:	add	x1, x1, #0x0
  3c:	add	x3, x3, #0x0
  40:	mov	w2, #0x8b                  	// #139
  44:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm4User24setNumHungOffUseOperandsEj:

0000000000000000 <_ZN4llvm4User24setNumHungOffUseOperandsEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #20]
   c:	tbz	w8, #30, 2c <_ZN4llvm4User24setNumHungOffUseOperandsEj+0x2c>
  10:	lsr	w9, w1, #28
  14:	cbnz	w9, 4c <_ZN4llvm4User24setNumHungOffUseOperandsEj+0x4c>
  18:	and	w8, w8, #0xf0000000
  1c:	orr	w8, w8, w1
  20:	str	w8, [x0, #20]
  24:	ldp	x29, x30, [sp], #16
  28:	ret
  2c:	adrp	x0, 0 <_ZN4llvm4User24setNumHungOffUseOperandsEj>
  30:	adrp	x1, 0 <_ZN4llvm4User24setNumHungOffUseOperandsEj>
  34:	adrp	x3, 0 <_ZN4llvm4User24setNumHungOffUseOperandsEj>
  38:	add	x0, x0, #0x0
  3c:	add	x1, x1, #0x0
  40:	add	x3, x3, #0x0
  44:	mov	w2, #0xd8                  	// #216
  48:	bl	0 <__assert_fail>
  4c:	adrp	x0, 0 <_ZN4llvm4User24setNumHungOffUseOperandsEj>
  50:	adrp	x1, 0 <_ZN4llvm4User24setNumHungOffUseOperandsEj>
  54:	adrp	x3, 0 <_ZN4llvm4User24setNumHungOffUseOperandsEj>
  58:	add	x0, x0, #0x0
  5c:	add	x1, x1, #0x0
  60:	add	x3, x3, #0x0
  64:	mov	w2, #0xd9                  	// #217
  68:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE:

0000000000000000 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x2, 94 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0x94>
   c:	ldr	x8, [x0]
  10:	ldr	x9, [x2]
  14:	cmp	x8, x9
  18:	b.ne	b4 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0xb4>  // b.any
  1c:	ldr	w9, [x0, #20]
  20:	and	x8, x9, #0xfffffff
  24:	cmp	w8, w1
  28:	b.ls	d4 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0xd4>  // b.plast
  2c:	tbnz	w9, #30, 40 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0x40>
  30:	mov	w9, #0x18                  	// #24
  34:	mneg	x8, x8, x9
  38:	add	x8, x0, x8
  3c:	b	44 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0x44>
  40:	ldur	x8, [x0, #-8]
  44:	mov	w9, #0x18                  	// #24
  48:	umaddl	x0, w1, w9, x8
  4c:	ldr	x9, [x0]
  50:	cbz	x9, 84 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0x84>
  54:	mov	w9, w1
  58:	mov	w10, #0x18                  	// #24
  5c:	madd	x9, x9, x10, x8
  60:	ldp	x10, x8, [x9, #8]
  64:	and	x8, x8, #0xfffffffffffffffc
  68:	str	x10, [x8]
  6c:	ldr	x9, [x9, #8]
  70:	cbz	x9, 84 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0x84>
  74:	ldr	x10, [x9, #16]
  78:	and	x10, x10, #0x3
  7c:	orr	x8, x10, x8
  80:	str	x8, [x9, #16]
  84:	add	x1, x2, #0x8
  88:	str	x2, [x0]
  8c:	ldp	x29, x30, [sp], #16
  90:	b	0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
  94:	adrp	x0, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
  98:	adrp	x1, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
  9c:	adrp	x3, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
  a0:	add	x0, x0, #0x0
  a4:	add	x1, x1, #0x0
  a8:	add	x3, x3, #0x0
  ac:	mov	w2, #0xa5e                 	// #2654
  b0:	bl	0 <__assert_fail>
  b4:	adrp	x0, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
  b8:	adrp	x1, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
  bc:	adrp	x3, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
  c0:	add	x0, x0, #0x0
  c4:	add	x1, x1, #0x0
  c8:	add	x3, x3, #0x0
  cc:	mov	w2, #0xa60                 	// #2656
  d0:	bl	0 <__assert_fail>
  d4:	adrp	x0, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
  d8:	adrp	x1, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
  dc:	adrp	x3, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
  e0:	add	x0, x0, #0x0
  e4:	add	x1, x1, #0x0
  e8:	add	x3, x3, #0x0
  ec:	mov	w2, #0xadf                 	// #2783
  f0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm7PHINode16setIncomingBlockEjPNS_10BasicBlockE:

0000000000000000 <_ZN4llvm7PHINode16setIncomingBlockEjPNS_10BasicBlockE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x2, 48 <_ZN4llvm7PHINode16setIncomingBlockEjPNS_10BasicBlockE+0x48>
   c:	ldr	w8, [x0, #20]
  10:	tbnz	w8, #30, 28 <_ZN4llvm7PHINode16setIncomingBlockEjPNS_10BasicBlockE+0x28>
  14:	and	x8, x8, #0xfffffff
  18:	mov	w9, #0x18                  	// #24
  1c:	mneg	x8, x8, x9
  20:	add	x8, x0, x8
  24:	b	2c <_ZN4llvm7PHINode16setIncomingBlockEjPNS_10BasicBlockE+0x2c>
  28:	ldur	x8, [x0, #-8]
  2c:	ldr	w9, [x0, #56]
  30:	mov	w10, #0x18                  	// #24
  34:	madd	x8, x9, x10, x8
  38:	add	x8, x8, w1, uxtw #3
  3c:	str	x2, [x8, #8]
  40:	ldp	x29, x30, [sp], #16
  44:	ret
  48:	adrp	x0, 0 <_ZN4llvm7PHINode16setIncomingBlockEjPNS_10BasicBlockE>
  4c:	adrp	x1, 0 <_ZN4llvm7PHINode16setIncomingBlockEjPNS_10BasicBlockE>
  50:	adrp	x3, 0 <_ZN4llvm7PHINode16setIncomingBlockEjPNS_10BasicBlockE>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0xa82                 	// #2690
  64:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS4_NS_3sys10SmartMutexILb0EEEEEEES5_NS_12DenseMapInfoISB_EENS_6detail12DenseMapPairISB_S5_EEE4initEj:

0000000000000000 <_ZN4llvm8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS4_NS_3sys10SmartMutexILb0EEEEEEES5_NS_12DenseMapInfoISB_EENS_6detail12DenseMapPairISB_S5_EEE4initEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS4_NS_3sys10SmartMutexILb0EEEEEEES5_NS_12DenseMapInfoISB_EENS_6detail12DenseMapPairISB_S5_EEE4initEj>
  14:	str	w0, [x19, #24]
  18:	cbz	w0, 3c <_ZN4llvm8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS4_NS_3sys10SmartMutexILb0EEEEEEES5_NS_12DenseMapInfoISB_EENS_6detail12DenseMapPairISB_S5_EEE4initEj+0x3c>
  1c:	mov	w8, w0
  20:	lsl	x0, x8, #6
  24:	bl	0 <_Znwm>
  28:	str	x0, [x19, #8]
  2c:	mov	x0, x19
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZN4llvm8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS4_NS_3sys10SmartMutexILb0EEEEEEES5_NS_12DenseMapInfoISB_EENS_6detail12DenseMapPairISB_S5_EEE4initEj>
  3c:	stp	xzr, xzr, [x19, #8]
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E31getMinBucketToReserveForEntriesEj:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E31getMinBucketToReserveForEntriesEj>:
   0:	cbz	w1, 40 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E31getMinBucketToReserveForEntriesEj+0x40>
   4:	mov	w9, #0xaaab                	// #43691
   8:	lsl	w8, w1, #2
   c:	movk	w9, #0xaaaa, lsl #16
  10:	umull	x8, w8, w9
  14:	lsr	x8, x8, #33
  18:	add	w8, w8, #0x1
  1c:	orr	x8, x8, x8, lsr #1
  20:	orr	x8, x8, x8, lsr #2
  24:	orr	x8, x8, x8, lsr #4
  28:	orr	x8, x8, x8, lsr #8
  2c:	orr	x8, x8, x8, lsr #16
  30:	lsr	x9, x8, #32
  34:	orr	w8, w9, w8
  38:	add	w0, w8, #0x1
  3c:	ret
  40:	mov	w0, wzr
  44:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E9initEmptyEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E9initEmptyEv>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #48]
   8:	str	x23, [sp, #64]
   c:	stp	x22, x21, [sp, #80]
  10:	stp	x20, x19, [sp, #96]
  14:	add	x29, sp, #0x30
  18:	ldr	w20, [x0, #24]
  1c:	str	xzr, [x0, #16]
  20:	sub	w8, w20, #0x1
  24:	tst	w20, w8
  28:	b.ne	104 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E9initEmptyEv+0x104>  // b.any
  2c:	adrp	x21, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E9initEmptyEv>
  30:	ldr	x21, [x21]
  34:	mov	w8, #0x2                   	// #2
  38:	mov	x9, #0xfffffffffffffff8    	// #-8
  3c:	stp	xzr, x9, [sp, #24]
  40:	add	x23, x21, #0x10
  44:	stp	x23, x8, [sp, #8]
  48:	str	xzr, [sp, #40]
  4c:	cbz	w20, ec <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E9initEmptyEv+0xec>
  50:	ldr	x22, [x0, #8]
  54:	add	x8, sp, #0x8
  58:	add	x19, x8, #0x8
  5c:	mov	w1, #0x1                   	// #1
  60:	add	x0, x22, #0x8
  64:	mov	x2, x19
  68:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E9initEmptyEv>
  6c:	str	x23, [x22]
  70:	ldr	x8, [sp, #40]
  74:	cmp	w20, #0x1
  78:	str	x8, [x22, #32]
  7c:	b.eq	b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E9initEmptyEv+0xb8>  // b.none
  80:	lsl	x8, x20, #6
  84:	add	x22, x22, #0x60
  88:	sub	x20, x8, #0x40
  8c:	add	x21, x21, #0x10
  90:	ldr	w8, [sp, #16]
  94:	sub	x0, x22, #0x18
  98:	mov	x2, x19
  9c:	ubfx	w1, w8, #1, #2
  a0:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E9initEmptyEv>
  a4:	stur	x21, [x22, #-32]
  a8:	ldr	x8, [sp, #40]
  ac:	subs	x20, x20, #0x40
  b0:	str	x8, [x22], #64
  b4:	b.ne	90 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E9initEmptyEv+0x90>  // b.any
  b8:	ldr	x8, [sp, #32]
  bc:	add	x8, x8, #0x10
  c0:	cmp	x8, #0x10
  c4:	b.hi	e0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E9initEmptyEv+0xe0>  // b.pmore
  c8:	mov	w9, #0x1                   	// #1
  cc:	lsl	x8, x9, x8
  d0:	mov	w9, #0x101                 	// #257
  d4:	movk	w9, #0x1, lsl #16
  d8:	tst	x8, x9
  dc:	b.ne	ec <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E9initEmptyEv+0xec>  // b.any
  e0:	add	x8, sp, #0x8
  e4:	add	x0, x8, #0x8
  e8:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
  ec:	ldp	x20, x19, [sp, #96]
  f0:	ldp	x22, x21, [sp, #80]
  f4:	ldr	x23, [sp, #64]
  f8:	ldp	x29, x30, [sp, #48]
  fc:	add	sp, sp, #0x70
 100:	ret
 104:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E9initEmptyEv>
 108:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E9initEmptyEv>
 10c:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E9initEmptyEv>
 110:	add	x0, x0, #0x0
 114:	add	x1, x1, #0x0
 118:	add	x3, x3, #0x0
 11c:	mov	w2, #0x15c                 	// #348
 120:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE7deletedEv:

0000000000000000 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE7deletedEv>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #48]
   8:	stp	x20, x19, [sp, #64]
   c:	add	x29, sp, #0x30
  10:	mov	x20, x0
  14:	ldr	w9, [x20, #8]!
  18:	add	x8, sp, #0x8
  1c:	add	x19, x8, #0x8
  20:	mov	x0, x19
  24:	ubfx	w1, w9, #1, #2
  28:	mov	x2, x20
  2c:	bl	0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE7deletedEv>
  30:	adrp	x8, 0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE7deletedEv>
  34:	ldr	x8, [x8]
  38:	add	x1, sp, #0x8
  3c:	add	x8, x8, #0x10
  40:	str	x8, [sp, #8]
  44:	ldr	x0, [x20, #24]
  48:	str	x0, [sp, #40]
  4c:	bl	0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE7deletedEv>
  50:	ldr	x8, [sp, #32]
  54:	add	x8, x8, #0x10
  58:	cmp	x8, #0x10
  5c:	b.hi	78 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE7deletedEv+0x78>  // b.pmore
  60:	mov	w9, #0x1                   	// #1
  64:	lsl	x8, x9, x8
  68:	mov	w9, #0x101                 	// #257
  6c:	movk	w9, #0x1, lsl #16
  70:	tst	x8, x9
  74:	b.ne	80 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE7deletedEv+0x80>  // b.any
  78:	mov	x0, x19
  7c:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
  80:	ldp	x20, x19, [sp, #64]
  84:	ldp	x29, x30, [sp, #48]
  88:	add	sp, sp, #0x50
  8c:	ret

Disassembly of section .text._ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_:

0000000000000000 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_>:
   0:	sub	sp, sp, #0x110
   4:	stp	x29, x30, [sp, #224]
   8:	stp	x28, x21, [sp, #240]
   c:	stp	x20, x19, [sp, #256]
  10:	add	x29, sp, #0xe0
  14:	cbz	x1, 244 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x244>
  18:	mov	x21, x0
  1c:	ldr	w8, [x21, #8]!
  20:	sub	x9, x29, #0x28
  24:	add	x19, x9, #0x8
  28:	mov	x20, x1
  2c:	ubfx	w1, w8, #1, #2
  30:	mov	x0, x19
  34:	mov	x2, x21
  38:	bl	0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_>
  3c:	adrp	x8, 0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_>
  40:	ldr	x8, [x8]
  44:	sub	x1, x29, #0x28
  48:	add	x2, sp, #0x8
  4c:	add	x8, x8, #0x10
  50:	stur	x8, [x29, #-40]
  54:	ldr	x21, [x21, #24]
  58:	stur	xzr, [x29, #-56]
  5c:	sturb	wzr, [x29, #-48]
  60:	mov	x0, x21
  64:	stur	x21, [x29, #-8]
  68:	bl	0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_>
  6c:	ldr	w10, [x21, #24]
  70:	stur	x21, [x29, #-88]
  74:	ldp	x11, x8, [x21]
  78:	ldr	x9, [sp, #8]
  7c:	add	x8, x8, x10, lsl #6
  80:	stur	x11, [x29, #-80]
  84:	tbz	w0, #0, 90 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x90>
  88:	stur	x9, [x29, #-72]
  8c:	b	94 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x94>
  90:	stur	x8, [x29, #-72]
  94:	ldur	x9, [x29, #-8]
  98:	stur	x8, [x29, #-64]
  9c:	sub	x0, x29, #0x58
  a0:	add	x1, sp, #0x8
  a4:	ldr	w8, [x9, #24]
  a8:	ldp	x11, x10, [x9]
  ac:	add	x8, x10, x8, lsl #6
  b0:	stp	x9, x11, [sp, #8]
  b4:	stp	x8, x8, [sp, #24]
  b8:	bl	0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_>
  bc:	tbz	w0, #0, 200 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x200>
  c0:	ldp	x8, x9, [x29, #-88]
  c4:	ldr	x8, [x8]
  c8:	cmp	x8, x9
  cc:	b.ne	264 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x264>  // b.any
  d0:	ldur	x8, [x29, #-72]
  d4:	mov	w9, #0x6                   	// #6
  d8:	stp	x9, xzr, [sp, #112]
  dc:	ldr	x10, [x8, #56]
  e0:	add	x9, x10, #0x10
  e4:	cmp	x9, #0x10
  e8:	str	x10, [sp, #128]
  ec:	b.hi	108 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x108>  // b.pmore
  f0:	mov	w10, #0x1                   	// #1
  f4:	lsl	x9, x10, x9
  f8:	mov	w10, #0x101                 	// #257
  fc:	movk	w10, #0x1, lsl #16
 100:	tst	x9, x10
 104:	b.ne	118 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x118>  // b.any
 108:	ldr	x8, [x8, #40]
 10c:	add	x0, sp, #0x70
 110:	and	x1, x8, #0xfffffffffffffff8
 114:	bl	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
 118:	ldur	q0, [x29, #-88]
 11c:	ldur	q1, [x29, #-72]
 120:	ldur	x0, [x29, #-8]
 124:	add	x1, sp, #0x50
 128:	stp	q0, q1, [sp, #80]
 12c:	bl	0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_>
 130:	ldr	x9, [sp, #128]
 134:	ldur	x21, [x29, #-8]
 138:	mov	w8, #0x6                   	// #6
 13c:	stp	x20, x8, [sp, #48]
 140:	add	x8, x9, #0x10
 144:	cmp	x8, #0x10
 148:	stp	xzr, x9, [sp, #64]
 14c:	b.hi	168 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x168>  // b.pmore
 150:	mov	w9, #0x1                   	// #1
 154:	lsl	x8, x9, x8
 158:	mov	w9, #0x101                 	// #257
 15c:	movk	w9, #0x1, lsl #16
 160:	tst	x8, x9
 164:	b.ne	17c <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x17c>  // b.any
 168:	ldr	x8, [sp, #112]
 16c:	add	x9, sp, #0x30
 170:	add	x0, x9, #0x8
 174:	and	x1, x8, #0xfffffffffffffff8
 178:	bl	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
 17c:	add	x8, sp, #0x8
 180:	add	x1, sp, #0x30
 184:	mov	x0, x21
 188:	add	x20, sp, #0x30
 18c:	bl	0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_>
 190:	ldr	x8, [sp, #72]
 194:	add	x8, x8, #0x10
 198:	cmp	x8, #0x10
 19c:	b.hi	1b8 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x1b8>  // b.pmore
 1a0:	mov	w9, #0x1                   	// #1
 1a4:	lsl	x8, x9, x8
 1a8:	mov	w9, #0x101                 	// #257
 1ac:	movk	w9, #0x1, lsl #16
 1b0:	tst	x8, x9
 1b4:	b.ne	1c0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x1c0>  // b.any
 1b8:	add	x0, x20, #0x8
 1bc:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 1c0:	ldr	x8, [sp, #128]
 1c4:	add	x8, x8, #0x10
 1c8:	cmp	x8, #0x10
 1cc:	b.hi	1e8 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x1e8>  // b.pmore
 1d0:	mov	w9, #0x1                   	// #1
 1d4:	lsl	x8, x9, x8
 1d8:	mov	w9, #0x101                 	// #257
 1dc:	movk	w9, #0x1, lsl #16
 1e0:	tst	x8, x9
 1e4:	b.ne	1f0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x1f0>  // b.any
 1e8:	add	x0, sp, #0x70
 1ec:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 1f0:	ldurb	w8, [x29, #-48]
 1f4:	cbz	w8, 200 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x200>
 1f8:	sub	x0, x29, #0x38
 1fc:	bl	0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_>
 200:	ldur	x8, [x29, #-16]
 204:	add	x8, x8, #0x10
 208:	cmp	x8, #0x10
 20c:	b.hi	228 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x228>  // b.pmore
 210:	mov	w9, #0x1                   	// #1
 214:	lsl	x8, x9, x8
 218:	mov	w9, #0x101                 	// #257
 21c:	movk	w9, #0x1, lsl #16
 220:	tst	x8, x9
 224:	b.ne	230 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x230>  // b.any
 228:	mov	x0, x19
 22c:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 230:	ldp	x20, x19, [sp, #256]
 234:	ldp	x28, x21, [sp, #240]
 238:	ldp	x29, x30, [sp, #224]
 23c:	add	sp, sp, #0x110
 240:	ret
 244:	adrp	x0, 0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_>
 248:	adrp	x1, 0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_>
 24c:	adrp	x3, 0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_>
 250:	add	x0, x0, #0x0
 254:	add	x1, x1, #0x0
 258:	add	x3, x3, #0x0
 25c:	mov	w2, #0x69                  	// #105
 260:	bl	0 <__assert_fail>
 264:	adrp	x0, 0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_>
 268:	adrp	x1, 0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_>
 26c:	adrp	x3, 0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_>
 270:	add	x0, x0, #0x0
 274:	add	x1, x1, #0x0
 278:	add	x3, x3, #0x0
 27c:	mov	w2, #0x4b9                 	// #1209
 280:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #48]
   8:	str	x21, [sp, #64]
   c:	stp	x20, x19, [sp, #80]
  10:	add	x29, sp, #0x30
  14:	add	x2, sp, #0x8
  18:	mov	x19, x0
  1c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_>
  20:	tbz	w0, #0, e0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_+0xe0>
  24:	ldr	x21, [sp, #8]
  28:	ldr	x8, [x21, #56]
  2c:	add	x8, x8, #0x10
  30:	cmp	x8, #0x10
  34:	b.hi	50 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_+0x50>  // b.pmore
  38:	mov	w9, #0x1                   	// #1
  3c:	lsl	x8, x9, x8
  40:	mov	w9, #0x101                 	// #257
  44:	movk	w9, #0x1, lsl #16
  48:	tst	x8, x9
  4c:	b.ne	58 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_+0x58>  // b.any
  50:	add	x0, x21, #0x28
  54:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
  58:	adrp	x11, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_>
  5c:	ldr	x11, [x11]
  60:	add	x8, sp, #0x8
  64:	add	x20, x8, #0x8
  68:	mov	w9, #0x2                   	// #2
  6c:	mov	x10, #0xfffffffffffffff0    	// #-16
  70:	add	x8, x11, #0x10
  74:	add	x0, x21, #0x8
  78:	mov	x1, x20
  7c:	stp	x10, xzr, [sp, #32]
  80:	stp	x9, xzr, [sp, #16]
  84:	str	x8, [sp, #8]
  88:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_>
  8c:	ldr	x8, [sp, #40]
  90:	str	x8, [x21, #32]
  94:	ldr	x8, [sp, #32]
  98:	add	x8, x8, #0x10
  9c:	cmp	x8, #0x10
  a0:	b.hi	bc <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_+0xbc>  // b.pmore
  a4:	mov	w9, #0x1                   	// #1
  a8:	lsl	x8, x9, x8
  ac:	mov	w9, #0x101                 	// #257
  b0:	movk	w9, #0x1, lsl #16
  b4:	tst	x8, x9
  b8:	b.ne	c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_+0xc4>  // b.any
  bc:	mov	x0, x20
  c0:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
  c4:	adrp	x8, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_>
  c8:	ldr	d0, [x19, #16]
  cc:	ldr	d1, [x8]
  d0:	mov	w0, #0x1                   	// #1
  d4:	add	v0.2s, v0.2s, v1.2s
  d8:	str	d0, [x19, #16]
  dc:	b	e4 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_+0xe4>
  e0:	mov	w0, wzr
  e4:	ldp	x20, x19, [sp, #80]
  e8:	ldr	x21, [sp, #64]
  ec:	ldp	x29, x30, [sp, #48]
  f0:	add	sp, sp, #0x60
  f4:	ret

Disassembly of section .text._ZNSt11unique_lockIN4llvm3sys10SmartMutexILb0EEEE6unlockEv:

0000000000000000 <_ZNSt11unique_lockIN4llvm3sys10SmartMutexILb0EEEE6unlockEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldrb	w8, [x0, #8]
  10:	cbz	w8, 40 <_ZNSt11unique_lockIN4llvm3sys10SmartMutexILb0EEEE6unlockEv+0x40>
  14:	mov	x19, x0
  18:	ldr	x0, [x0]
  1c:	cbz	x0, 34 <_ZNSt11unique_lockIN4llvm3sys10SmartMutexILb0EEEE6unlockEv+0x34>
  20:	adrp	x8, 0 <__pthread_key_create>
  24:	ldr	x8, [x8]
  28:	cbz	x8, 30 <_ZNSt11unique_lockIN4llvm3sys10SmartMutexILb0EEEE6unlockEv+0x30>
  2c:	bl	0 <pthread_mutex_unlock>
  30:	strb	wzr, [x19, #8]
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret
  40:	mov	w0, #0x1                   	// #1
  44:	bl	0 <_ZSt20__throw_system_errori>

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E15LookupBucketForISC_EEbRKT_RPKSH_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E15LookupBucketForISC_EEbRKT_RPKSH_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	cbz	w8, 4c <_ZNK4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E15LookupBucketForISC_EEbRKT_RPKSH_+0x4c>
  10:	ldr	x9, [x1, #24]
  14:	orr	x10, x9, #0x8
  18:	cmn	x10, #0x8
  1c:	b.eq	b0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E15LookupBucketForISC_EEbRKT_RPKSH_+0xb0>  // b.none
  20:	ldr	x10, [x0, #8]
  24:	ubfx	x11, x9, #4, #28
  28:	eor	w12, w11, w9, lsr #9
  2c:	sub	w11, w8, #0x1
  30:	and	w12, w12, w11
  34:	add	x8, x10, x12, lsl #6
  38:	ldr	x14, [x8, #24]
  3c:	cmp	x14, x9
  40:	b.ne	60 <_ZNK4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E15LookupBucketForISC_EEbRKT_RPKSH_+0x60>  // b.any
  44:	mov	w0, #0x1                   	// #1
  48:	b	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E15LookupBucketForISC_EEbRKT_RPKSH_+0x54>
  4c:	mov	x8, xzr
  50:	mov	w0, wzr
  54:	str	x8, [x2]
  58:	ldp	x29, x30, [sp], #16
  5c:	ret
  60:	mov	x13, xzr
  64:	mov	w15, #0x1                   	// #1
  68:	mov	w0, #0x1                   	// #1
  6c:	cmn	x14, #0x8
  70:	b.eq	a0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E15LookupBucketForISC_EEbRKT_RPKSH_+0xa0>  // b.none
  74:	cmn	x14, #0x10
  78:	add	w12, w12, w15
  7c:	ccmp	x13, #0x0, #0x0, eq  // eq = none
  80:	and	w12, w12, w11
  84:	csel	x13, x13, x8, ne  // ne = any
  88:	add	x8, x10, x12, lsl #6
  8c:	ldr	x14, [x8, #24]
  90:	add	w15, w15, #0x1
  94:	cmp	x14, x9
  98:	b.eq	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E15LookupBucketForISC_EEbRKT_RPKSH_+0x54>  // b.none
  9c:	b	6c <_ZNK4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E15LookupBucketForISC_EEbRKT_RPKSH_+0x6c>
  a0:	cmp	x13, #0x0
  a4:	mov	w0, wzr
  a8:	csel	x8, x8, x13, eq  // eq = none
  ac:	b	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E15LookupBucketForISC_EEbRKT_RPKSH_+0x54>
  b0:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E15LookupBucketForISC_EEbRKT_RPKSH_>
  b4:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E15LookupBucketForISC_EEbRKT_RPKSH_>
  b8:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E15LookupBucketForISC_EEbRKT_RPKSH_>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x252                 	// #594
  cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15ValueHandleBaseaSERKS0_:

0000000000000000 <_ZN4llvm15ValueHandleBaseaSERKS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	ldr	x8, [x0, #16]
  14:	ldr	x0, [x1, #16]
  18:	cmp	x8, x0
  1c:	b.eq	94 <_ZN4llvm15ValueHandleBaseaSERKS0_+0x94>  // b.none
  20:	add	x8, x8, #0x10
  24:	mov	x20, x1
  28:	cmp	x8, #0x10
  2c:	b.hi	48 <_ZN4llvm15ValueHandleBaseaSERKS0_+0x48>  // b.pmore
  30:	mov	w9, #0x1                   	// #1
  34:	lsl	x8, x9, x8
  38:	mov	w9, #0x101                 	// #257
  3c:	movk	w9, #0x1, lsl #16
  40:	tst	x8, x9
  44:	b.ne	54 <_ZN4llvm15ValueHandleBaseaSERKS0_+0x54>  // b.any
  48:	mov	x0, x19
  4c:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
  50:	ldr	x0, [x20, #16]
  54:	add	x8, x0, #0x10
  58:	cmp	x8, #0x10
  5c:	str	x0, [x19, #16]
  60:	b.hi	7c <_ZN4llvm15ValueHandleBaseaSERKS0_+0x7c>  // b.pmore
  64:	mov	w9, #0x1                   	// #1
  68:	lsl	x8, x9, x8
  6c:	mov	w9, #0x101                 	// #257
  70:	movk	w9, #0x1, lsl #16
  74:	tst	x8, x9
  78:	b.ne	98 <_ZN4llvm15ValueHandleBaseaSERKS0_+0x98>  // b.any
  7c:	ldr	x8, [x20]
  80:	mov	x0, x19
  84:	and	x1, x8, #0xfffffffffffffff8
  88:	bl	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
  8c:	ldr	x0, [x19, #16]
  90:	b	98 <_ZN4llvm15ValueHandleBaseaSERKS0_+0x98>
  94:	mov	x0, x8
  98:	ldp	x20, x19, [sp, #16]
  9c:	ldp	x29, x30, [sp], #32
  a0:	ret

Disassembly of section .text._ZNK4llvm16DenseMapIteratorINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS4_NS_3sys10SmartMutexILb0EEEEEEES5_NS_12DenseMapInfoISB_EENS_6detail12DenseMapPairISB_S5_EELb0EEneERKNS0_ISB_S5_SD_SG_Lb1EEE:

0000000000000000 <_ZNK4llvm16DenseMapIteratorINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS4_NS_3sys10SmartMutexILb0EEEEEEES5_NS_12DenseMapInfoISB_EENS_6detail12DenseMapPairISB_S5_EELb0EEneERKNS0_ISB_S5_SD_SG_Lb1EEE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #16]
   c:	cbz	x8, 20 <_ZNK4llvm16DenseMapIteratorINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS4_NS_3sys10SmartMutexILb0EEEEEEES5_NS_12DenseMapInfoISB_EENS_6detail12DenseMapPairISB_S5_EELb0EEneERKNS0_ISB_S5_SD_SG_Lb1EEE+0x20>
  10:	ldp	x9, x10, [x0]
  14:	ldr	x9, [x9]
  18:	cmp	x9, x10
  1c:	b.ne	98 <_ZNK4llvm16DenseMapIteratorINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS4_NS_3sys10SmartMutexILb0EEEEEEES5_NS_12DenseMapInfoISB_EENS_6detail12DenseMapPairISB_S5_EELb0EEneERKNS0_ISB_S5_SD_SG_Lb1EEE+0x98>  // b.any
  20:	ldr	x9, [x1, #16]
  24:	cbz	x9, 58 <_ZNK4llvm16DenseMapIteratorINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS4_NS_3sys10SmartMutexILb0EEEEEEES5_NS_12DenseMapInfoISB_EENS_6detail12DenseMapPairISB_S5_EELb0EEneERKNS0_ISB_S5_SD_SG_Lb1EEE+0x58>
  28:	ldp	x10, x11, [x1]
  2c:	ldr	x12, [x10]
  30:	cmp	x12, x11
  34:	b.eq	5c <_ZNK4llvm16DenseMapIteratorINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS4_NS_3sys10SmartMutexILb0EEEEEEES5_NS_12DenseMapInfoISB_EENS_6detail12DenseMapPairISB_S5_EELb0EEneERKNS0_ISB_S5_SD_SG_Lb1EEE+0x5c>  // b.none
  38:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS4_NS_3sys10SmartMutexILb0EEEEEEES5_NS_12DenseMapInfoISB_EENS_6detail12DenseMapPairISB_S5_EELb0EEneERKNS0_ISB_S5_SD_SG_Lb1EEE>
  3c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS4_NS_3sys10SmartMutexILb0EEEEEEES5_NS_12DenseMapInfoISB_EENS_6detail12DenseMapPairISB_S5_EELb0EEneERKNS0_ISB_S5_SD_SG_Lb1EEE>
  40:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS4_NS_3sys10SmartMutexILb0EEEEEEES5_NS_12DenseMapInfoISB_EENS_6detail12DenseMapPairISB_S5_EELb0EEneERKNS0_ISB_S5_SD_SG_Lb1EEE>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x4c8                 	// #1224
  54:	bl	0 <__assert_fail>
  58:	ldr	x10, [x1]
  5c:	ldr	x11, [x0]
  60:	cmp	x11, x10
  64:	b.ne	78 <_ZNK4llvm16DenseMapIteratorINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS4_NS_3sys10SmartMutexILb0EEEEEEES5_NS_12DenseMapInfoISB_EENS_6detail12DenseMapPairISB_S5_EELb0EEneERKNS0_ISB_S5_SD_SG_Lb1EEE+0x78>  // b.any
  68:	cmp	x8, x9
  6c:	cset	w0, ne  // ne = any
  70:	ldp	x29, x30, [sp], #16
  74:	ret
  78:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS4_NS_3sys10SmartMutexILb0EEEEEEES5_NS_12DenseMapInfoISB_EENS_6detail12DenseMapPairISB_S5_EELb0EEneERKNS0_ISB_S5_SD_SG_Lb1EEE>
  7c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS4_NS_3sys10SmartMutexILb0EEEEEEES5_NS_12DenseMapInfoISB_EENS_6detail12DenseMapPairISB_S5_EELb0EEneERKNS0_ISB_S5_SD_SG_Lb1EEE>
  80:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS4_NS_3sys10SmartMutexILb0EEEEEEES5_NS_12DenseMapInfoISB_EENS_6detail12DenseMapPairISB_S5_EELb0EEneERKNS0_ISB_S5_SD_SG_Lb1EEE>
  84:	add	x0, x0, #0x0
  88:	add	x1, x1, #0x0
  8c:	add	x3, x3, #0x0
  90:	mov	w2, #0x4ca                 	// #1226
  94:	bl	0 <__assert_fail>
  98:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS4_NS_3sys10SmartMutexILb0EEEEEEES5_NS_12DenseMapInfoISB_EENS_6detail12DenseMapPairISB_S5_EELb0EEneERKNS0_ISB_S5_SD_SG_Lb1EEE>
  9c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS4_NS_3sys10SmartMutexILb0EEEEEEES5_NS_12DenseMapInfoISB_EENS_6detail12DenseMapPairISB_S5_EELb0EEneERKNS0_ISB_S5_SD_SG_Lb1EEE>
  a0:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS4_NS_3sys10SmartMutexILb0EEEEEEES5_NS_12DenseMapInfoISB_EENS_6detail12DenseMapPairISB_S5_EELb0EEneERKNS0_ISB_S5_SD_SG_Lb1EEE>
  a4:	add	x0, x0, #0x0
  a8:	add	x1, x1, #0x0
  ac:	add	x3, x3, #0x0
  b0:	mov	w2, #0x4c7                 	// #1223
  b4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseENS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEE:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseENS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEE>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #48]
   8:	str	x21, [sp, #64]
   c:	stp	x20, x19, [sp, #80]
  10:	add	x29, sp, #0x30
  14:	ldp	x8, x9, [x1]
  18:	ldr	x8, [x8]
  1c:	cmp	x8, x9
  20:	b.ne	f0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseENS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEE+0xf0>  // b.any
  24:	ldr	x21, [x1, #16]
  28:	mov	x19, x0
  2c:	ldr	x8, [x21, #56]
  30:	add	x8, x8, #0x10
  34:	cmp	x8, #0x10
  38:	b.hi	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseENS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEE+0x54>  // b.pmore
  3c:	mov	w9, #0x1                   	// #1
  40:	lsl	x8, x9, x8
  44:	mov	w9, #0x101                 	// #257
  48:	movk	w9, #0x1, lsl #16
  4c:	tst	x8, x9
  50:	b.ne	5c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseENS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEE+0x5c>  // b.any
  54:	add	x0, x21, #0x28
  58:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
  5c:	adrp	x11, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseENS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEE>
  60:	ldr	x11, [x11]
  64:	add	x8, sp, #0x8
  68:	add	x20, x8, #0x8
  6c:	mov	w9, #0x2                   	// #2
  70:	mov	x10, #0xfffffffffffffff0    	// #-16
  74:	add	x8, x11, #0x10
  78:	add	x0, x21, #0x8
  7c:	mov	x1, x20
  80:	stp	x10, xzr, [sp, #32]
  84:	stp	x9, xzr, [sp, #16]
  88:	str	x8, [sp, #8]
  8c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseENS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEE>
  90:	ldr	x8, [sp, #40]
  94:	str	x8, [x21, #32]
  98:	ldr	x8, [sp, #32]
  9c:	add	x8, x8, #0x10
  a0:	cmp	x8, #0x10
  a4:	b.hi	c0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseENS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEE+0xc0>  // b.pmore
  a8:	mov	w9, #0x1                   	// #1
  ac:	lsl	x8, x9, x8
  b0:	mov	w9, #0x101                 	// #257
  b4:	movk	w9, #0x1, lsl #16
  b8:	tst	x8, x9
  bc:	b.ne	c8 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseENS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEE+0xc8>  // b.any
  c0:	mov	x0, x20
  c4:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
  c8:	adrp	x8, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseENS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEE>
  cc:	ldr	d0, [x19, #16]
  d0:	ldr	d1, [x8]
  d4:	ldr	x21, [sp, #64]
  d8:	add	v0.2s, v0.2s, v1.2s
  dc:	str	d0, [x19, #16]
  e0:	ldp	x20, x19, [sp, #80]
  e4:	ldp	x29, x30, [sp, #48]
  e8:	add	sp, sp, #0x60
  ec:	ret
  f0:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseENS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEE>
  f4:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseENS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEE>
  f8:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseENS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEE>
  fc:	add	x0, x0, #0x0
 100:	add	x1, x1, #0x0
 104:	add	x3, x3, #0x0
 108:	mov	w2, #0x4b3                 	// #1203
 10c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E:

0000000000000000 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E>:
   0:	sub	sp, sp, #0xc0
   4:	stp	x29, x30, [sp, #144]
   8:	stp	x22, x21, [sp, #160]
   c:	stp	x20, x19, [sp, #176]
  10:	add	x29, sp, #0x90
  14:	ldr	x9, [x1]
  18:	mov	x19, x8
  1c:	mov	x8, sp
  20:	add	x20, x8, #0x8
  24:	mov	w8, #0x2                   	// #2
  28:	stp	x8, xzr, [sp, #8]
  2c:	add	x8, x9, #0x10
  30:	mov	x22, x1
  34:	mov	x21, x0
  38:	cmp	x8, #0x10
  3c:	str	x9, [sp, #24]
  40:	b.hi	5c <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E+0x5c>  // b.pmore
  44:	mov	w9, #0x1                   	// #1
  48:	lsl	x8, x9, x8
  4c:	mov	w9, #0x101                 	// #257
  50:	movk	w9, #0x1, lsl #16
  54:	tst	x8, x9
  58:	b.ne	64 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E+0x64>  // b.any
  5c:	mov	x0, x20
  60:	bl	0 <_ZN4llvm15ValueHandleBase12AddToUseListEv>
  64:	adrp	x8, 0 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E>
  68:	ldr	x8, [x8]
  6c:	add	x2, x22, #0x8
  70:	add	x0, sp, #0x28
  74:	mov	x1, sp
  78:	add	x8, x8, #0x10
  7c:	str	x8, [sp]
  80:	str	x21, [sp, #32]
  84:	add	x22, sp, #0x28
  88:	bl	0 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E>
  8c:	add	x22, x22, #0x28
  90:	sub	x8, x29, #0x28
  94:	add	x1, sp, #0x28
  98:	mov	x0, x21
  9c:	mov	x2, x22
  a0:	bl	0 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E>
  a4:	ldr	x8, [sp, #96]
  a8:	add	x8, x8, #0x10
  ac:	cmp	x8, #0x10
  b0:	b.hi	cc <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E+0xcc>  // b.pmore
  b4:	mov	w9, #0x1                   	// #1
  b8:	lsl	x8, x9, x8
  bc:	mov	w9, #0x101                 	// #257
  c0:	movk	w9, #0x1, lsl #16
  c4:	tst	x8, x9
  c8:	b.ne	d4 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E+0xd4>  // b.any
  cc:	mov	x0, x22
  d0:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
  d4:	ldr	x8, [sp, #64]
  d8:	add	x8, x8, #0x10
  dc:	cmp	x8, #0x10
  e0:	b.hi	fc <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E+0xfc>  // b.pmore
  e4:	mov	w9, #0x1                   	// #1
  e8:	lsl	x8, x9, x8
  ec:	mov	w9, #0x101                 	// #257
  f0:	movk	w9, #0x1, lsl #16
  f4:	tst	x8, x9
  f8:	b.ne	108 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E+0x108>  // b.any
  fc:	add	x8, sp, #0x28
 100:	add	x0, x8, #0x8
 104:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 108:	ldr	x8, [sp, #24]
 10c:	add	x8, x8, #0x10
 110:	cmp	x8, #0x10
 114:	b.hi	130 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E+0x130>  // b.pmore
 118:	mov	w9, #0x1                   	// #1
 11c:	lsl	x8, x9, x8
 120:	mov	w9, #0x101                 	// #257
 124:	movk	w9, #0x1, lsl #16
 128:	tst	x8, x9
 12c:	b.ne	138 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E+0x138>  // b.any
 130:	mov	x0, x20
 134:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 138:	ldur	q0, [x29, #-24]
 13c:	ldur	q1, [x29, #-40]
 140:	ldurb	w8, [x29, #-8]
 144:	ldp	x22, x21, [sp, #160]
 148:	ldp	x29, x30, [sp, #144]
 14c:	stp	q1, q0, [x19]
 150:	strb	w8, [x19, #32]
 154:	ldp	x20, x19, [sp, #176]
 158:	add	sp, sp, #0xc0
 15c:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEEbEOSC_DpOT_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEEbEOSC_DpOT_>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	mov	x21, x2
  18:	add	x2, sp, #0x8
  1c:	mov	x22, x1
  20:	mov	x20, x0
  24:	mov	x19, x8
  28:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEEbEOSC_DpOT_>
  2c:	ldr	x1, [sp, #8]
  30:	tbz	w0, #0, 3c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEEbEOSC_DpOT_+0x3c>
  34:	mov	w8, wzr
  38:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEEbEOSC_DpOT_+0x54>
  3c:	mov	x0, x20
  40:	mov	x2, x22
  44:	mov	x3, x21
  48:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEEbEOSC_DpOT_>
  4c:	mov	x1, x0
  50:	mov	w8, #0x1                   	// #1
  54:	ldr	w9, [x20, #24]
  58:	ldp	x11, x10, [x20]
  5c:	strb	w8, [x19, #32]
  60:	ldp	x22, x21, [sp, #32]
  64:	ldp	x29, x30, [sp, #16]
  68:	add	x9, x10, x9, lsl #6
  6c:	stp	x20, x11, [x19]
  70:	stp	x1, x9, [x19, #16]
  74:	ldp	x20, x19, [sp, #48]
  78:	add	sp, sp, #0x40
  7c:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E16InsertIntoBucketISC_JS6_EEEPSH_SL_OT_DpOT0_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E16InsertIntoBucketISC_JS6_EEEPSH_SL_OT_DpOT0_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x3
  14:	mov	x3, x1
  18:	mov	x1, x2
  1c:	mov	x21, x2
  20:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E16InsertIntoBucketISC_JS6_EEEPSH_SL_OT_DpOT0_>
  24:	mov	x20, x0
  28:	add	x0, x0, #0x8
  2c:	add	x1, x21, #0x8
  30:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E16InsertIntoBucketISC_JS6_EEEPSH_SL_OT_DpOT0_>
  34:	ldr	x8, [x21, #32]
  38:	mov	w9, #0x6                   	// #6
  3c:	mov	x0, x20
  40:	str	x8, [x20, #32]
  44:	str	x9, [x0, #40]!
  48:	str	xzr, [x20, #48]
  4c:	ldr	x9, [x19, #16]
  50:	add	x8, x9, #0x10
  54:	cmp	x8, #0x10
  58:	str	x9, [x20, #56]
  5c:	b.hi	78 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E16InsertIntoBucketISC_JS6_EEEPSH_SL_OT_DpOT0_+0x78>  // b.pmore
  60:	mov	w9, #0x1                   	// #1
  64:	lsl	x8, x9, x8
  68:	mov	w9, #0x101                 	// #257
  6c:	movk	w9, #0x1, lsl #16
  70:	tst	x8, x9
  74:	b.ne	84 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E16InsertIntoBucketISC_JS6_EEEPSH_SL_OT_DpOT0_+0x84>  // b.any
  78:	ldr	x8, [x19]
  7c:	and	x1, x8, #0xfffffffffffffff8
  80:	bl	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
  84:	mov	x0, x20
  88:	ldp	x20, x19, [sp, #32]
  8c:	ldr	x21, [sp, #16]
  90:	ldp	x29, x30, [sp], #48
  94:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	ldr	w8, [x0, #16]
  14:	ldr	w1, [x0, #24]
  18:	ldr	x9, [x0]
  1c:	mov	x20, x2
  20:	lsl	w10, w8, #2
  24:	add	w10, w10, #0x4
  28:	add	w11, w1, w1, lsl #1
  2c:	mov	x19, x0
  30:	add	x9, x9, #0x1
  34:	cmp	w10, w11
  38:	str	x9, [x0]
  3c:	b.cs	94 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_+0x94>  // b.hs, b.nlast
  40:	ldr	w9, [x19, #20]
  44:	mvn	w8, w8
  48:	add	w8, w1, w8
  4c:	sub	w8, w8, w9
  50:	cmp	w8, w1, lsr #3
  54:	b.ls	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_+0x98>  // b.plast
  58:	cbz	x3, b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_+0xb8>
  5c:	ldr	w8, [x19, #16]
  60:	add	w8, w8, #0x1
  64:	str	w8, [x19, #16]
  68:	ldr	x8, [x3, #24]
  6c:	cmn	x8, #0x8
  70:	b.eq	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_+0x80>  // b.none
  74:	ldr	w8, [x19, #20]
  78:	sub	w8, w8, #0x1
  7c:	str	w8, [x19, #20]
  80:	ldp	x20, x19, [sp, #32]
  84:	ldp	x29, x30, [sp, #16]
  88:	mov	x0, x3
  8c:	add	sp, sp, #0x30
  90:	ret
  94:	lsl	w1, w1, #1
  98:	mov	x0, x19
  9c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_>
  a0:	add	x2, sp, #0x8
  a4:	mov	x0, x19
  a8:	mov	x1, x20
  ac:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_>
  b0:	ldr	x3, [sp, #8]
  b4:	cbnz	x3, 5c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_+0x5c>
  b8:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_>
  bc:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_>
  c0:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_>
  c4:	add	x0, x0, #0x0
  c8:	add	x1, x1, #0x0
  cc:	add	x3, x3, #0x0
  d0:	mov	w2, #0x22f                 	// #559
  d4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS4_NS_3sys10SmartMutexILb0EEEEEEES5_NS_12DenseMapInfoISB_EENS_6detail12DenseMapPairISB_S5_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS4_NS_3sys10SmartMutexILb0EEEEEEES5_NS_12DenseMapInfoISB_EENS_6detail12DenseMapPairISB_S5_EEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x19, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x20, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #6
  54:	bl	0 <_Znwm>
  58:	str	x0, [x20, #8]
  5c:	cbz	x19, 84 <_ZN4llvm8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS4_NS_3sys10SmartMutexILb0EEEEEEES5_NS_12DenseMapInfoISB_EENS_6detail12DenseMapPairISB_S5_EEE4growEj+0x84>
  60:	add	x2, x19, x21, lsl #6
  64:	mov	x0, x20
  68:	mov	x1, x19
  6c:	bl	0 <_ZN4llvm8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS4_NS_3sys10SmartMutexILb0EEEEEEES5_NS_12DenseMapInfoISB_EENS_6detail12DenseMapPairISB_S5_EEE4growEj>
  70:	mov	x0, x19
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	mov	x0, x20
  88:	ldp	x20, x19, [sp, #32]
  8c:	ldr	x21, [sp, #16]
  90:	ldp	x29, x30, [sp], #48
  94:	b	0 <_ZN4llvm8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS4_NS_3sys10SmartMutexILb0EEEEEEES5_NS_12DenseMapInfoISB_EENS_6detail12DenseMapPairISB_S5_EEE4growEj>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_>:
   0:	sub	sp, sp, #0xa0
   4:	stp	x29, x30, [sp, #80]
   8:	str	x25, [sp, #96]
   c:	stp	x24, x23, [sp, #112]
  10:	stp	x22, x21, [sp, #128]
  14:	stp	x20, x19, [sp, #144]
  18:	add	x29, sp, #0x50
  1c:	mov	x21, x2
  20:	mov	x19, x1
  24:	mov	x20, x0
  28:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_>
  2c:	mov	x9, #0xfffffffffffffff8    	// #-8
  30:	stp	xzr, x9, [sp, #56]
  34:	mov	x9, #0xfffffffffffffff0    	// #-16
  38:	stp	xzr, x9, [sp, #16]
  3c:	adrp	x9, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_>
  40:	ldr	x9, [x9]
  44:	mov	w8, #0x2                   	// #2
  48:	cmp	x19, x21
  4c:	str	xzr, [sp, #72]
  50:	add	x9, x9, #0x10
  54:	stp	x9, x8, [sp, #40]
  58:	stp	x9, x8, [sp]
  5c:	str	xzr, [sp, #32]
  60:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x198>  // b.none
  64:	mov	w24, #0x101                 	// #257
  68:	sub	x22, x21, #0x40
  6c:	mov	x9, #0xfffffffffffffff8    	// #-8
  70:	mov	x8, #0xfffffffffffffff0    	// #-16
  74:	mov	w23, #0x1                   	// #1
  78:	movk	w24, #0x1, lsl #16
  7c:	mov	w25, #0x6                   	// #6
  80:	ldr	x10, [x19, #24]
  84:	cmp	x10, x9
  88:	b.eq	128 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x128>  // b.none
  8c:	cmp	x10, x8
  90:	b.eq	128 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x128>  // b.none
  94:	add	x2, x29, #0x18
  98:	mov	x0, x20
  9c:	mov	x1, x19
  a0:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_>
  a4:	tbnz	w0, #0, 1e8 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x1e8>
  a8:	ldr	x21, [x29, #24]
  ac:	add	x1, x19, #0x8
  b0:	add	x0, x21, #0x8
  b4:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_>
  b8:	ldr	x8, [x19, #32]
  bc:	str	x25, [x21, #40]!
  c0:	str	xzr, [x21, #8]
  c4:	stur	x8, [x21, #-8]
  c8:	ldr	x9, [x19, #56]
  cc:	add	x8, x9, #0x10
  d0:	cmp	x8, #0x10
  d4:	str	x9, [x21, #16]
  d8:	b.hi	e8 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0xe8>  // b.pmore
  dc:	lsl	x8, x23, x8
  e0:	tst	x8, x24
  e4:	b.ne	f8 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0xf8>  // b.any
  e8:	ldr	x8, [x19, #40]
  ec:	mov	x0, x21
  f0:	and	x1, x8, #0xfffffffffffffff8
  f4:	bl	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
  f8:	ldr	w8, [x20, #16]
  fc:	add	w8, w8, #0x1
 100:	str	w8, [x20, #16]
 104:	ldr	x8, [x19, #56]
 108:	add	x8, x8, #0x10
 10c:	cmp	x8, #0x10
 110:	b.hi	120 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x120>  // b.pmore
 114:	lsl	x8, x23, x8
 118:	tst	x8, x24
 11c:	b.ne	128 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x128>  // b.any
 120:	add	x0, x19, #0x28
 124:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 128:	ldr	x8, [x19, #24]
 12c:	add	x8, x8, #0x10
 130:	cmp	x8, #0x10
 134:	b.hi	144 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x144>  // b.pmore
 138:	lsl	x8, x23, x8
 13c:	tst	x8, x24
 140:	b.ne	14c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x14c>  // b.any
 144:	add	x0, x19, #0x8
 148:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 14c:	cmp	x22, x19
 150:	b.eq	164 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x164>  // b.none
 154:	ldr	x9, [sp, #64]
 158:	ldr	x8, [sp, #24]
 15c:	add	x19, x19, #0x40
 160:	b	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x80>
 164:	ldr	x8, [sp, #24]
 168:	add	x8, x8, #0x10
 16c:	cmp	x8, #0x10
 170:	b.hi	18c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x18c>  // b.pmore
 174:	mov	w9, #0x1                   	// #1
 178:	lsl	x8, x9, x8
 17c:	mov	w9, #0x101                 	// #257
 180:	movk	w9, #0x1, lsl #16
 184:	tst	x8, x9
 188:	b.ne	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x198>  // b.any
 18c:	mov	x8, sp
 190:	add	x0, x8, #0x8
 194:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 198:	ldr	x8, [sp, #64]
 19c:	add	x8, x8, #0x10
 1a0:	cmp	x8, #0x10
 1a4:	b.hi	1c0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x1c0>  // b.pmore
 1a8:	mov	w9, #0x1                   	// #1
 1ac:	lsl	x8, x9, x8
 1b0:	mov	w9, #0x101                 	// #257
 1b4:	movk	w9, #0x1, lsl #16
 1b8:	tst	x8, x9
 1bc:	b.ne	1cc <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x1cc>  // b.any
 1c0:	add	x8, sp, #0x28
 1c4:	add	x0, x8, #0x8
 1c8:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 1cc:	ldp	x20, x19, [sp, #144]
 1d0:	ldp	x22, x21, [sp, #128]
 1d4:	ldp	x24, x23, [sp, #112]
 1d8:	ldr	x25, [sp, #96]
 1dc:	ldp	x29, x30, [sp, #80]
 1e0:	add	sp, sp, #0xa0
 1e4:	ret
 1e8:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_>
 1ec:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_>
 1f0:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_>
 1f4:	add	x0, x0, #0x0
 1f8:	add	x1, x1, #0x0
 1fc:	add	x3, x3, #0x0
 200:	mov	w2, #0x17a                 	// #378
 204:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt4pairIN4llvm18ValueMapCallbackVHIPKNS0_5ValueENS0_14WeakTrackingVHENS0_14ValueMapConfigIS4_NS0_3sys10SmartMutexILb0EEEEEEES5_EC2ISB_S5_Lb1EEEOT_OT0_:

0000000000000000 <_ZNSt4pairIN4llvm18ValueMapCallbackVHIPKNS0_5ValueENS0_14WeakTrackingVHENS0_14ValueMapConfigIS4_NS0_3sys10SmartMutexILb0EEEEEEES5_EC2ISB_S5_Lb1EEEOT_OT0_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x21, x1
  14:	ldr	w8, [x21, #8]!
  18:	mov	x19, x2
  1c:	mov	x20, x0
  20:	add	x0, x0, #0x8
  24:	ubfx	w1, w8, #1, #2
  28:	mov	x2, x21
  2c:	bl	0 <_ZNSt4pairIN4llvm18ValueMapCallbackVHIPKNS0_5ValueENS0_14WeakTrackingVHENS0_14ValueMapConfigIS4_NS0_3sys10SmartMutexILb0EEEEEEES5_EC2ISB_S5_Lb1EEEOT_OT0_>
  30:	adrp	x8, 0 <_ZNSt4pairIN4llvm18ValueMapCallbackVHIPKNS0_5ValueENS0_14WeakTrackingVHENS0_14ValueMapConfigIS4_NS0_3sys10SmartMutexILb0EEEEEEES5_EC2ISB_S5_Lb1EEEOT_OT0_>
  34:	ldr	x8, [x8]
  38:	mov	w9, #0x6                   	// #6
  3c:	add	x8, x8, #0x10
  40:	str	x8, [x20]
  44:	ldr	x8, [x21, #24]
  48:	str	x9, [x20, #40]!
  4c:	str	xzr, [x20, #8]
  50:	stur	x8, [x20, #-8]
  54:	ldr	x9, [x19, #16]
  58:	add	x8, x9, #0x10
  5c:	cmp	x8, #0x10
  60:	str	x9, [x20, #16]
  64:	b.hi	90 <_ZNSt4pairIN4llvm18ValueMapCallbackVHIPKNS0_5ValueENS0_14WeakTrackingVHENS0_14ValueMapConfigIS4_NS0_3sys10SmartMutexILb0EEEEEEES5_EC2ISB_S5_Lb1EEEOT_OT0_+0x90>  // b.pmore
  68:	mov	w9, #0x1                   	// #1
  6c:	lsl	x8, x9, x8
  70:	mov	w9, #0x101                 	// #257
  74:	movk	w9, #0x1, lsl #16
  78:	tst	x8, x9
  7c:	b.eq	90 <_ZNSt4pairIN4llvm18ValueMapCallbackVHIPKNS0_5ValueENS0_14WeakTrackingVHENS0_14ValueMapConfigIS4_NS0_3sys10SmartMutexILb0EEEEEEES5_EC2ISB_S5_Lb1EEEOT_OT0_+0x90>  // b.none
  80:	ldp	x20, x19, [sp, #32]
  84:	ldr	x21, [sp, #16]
  88:	ldp	x29, x30, [sp], #48
  8c:	ret
  90:	ldr	x8, [x19]
  94:	mov	x0, x20
  98:	ldp	x20, x19, [sp, #32]
  9c:	ldr	x21, [sp, #16]
  a0:	and	x1, x8, #0xfffffffffffffff8
  a4:	ldp	x29, x30, [sp], #48
  a8:	b	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>

Disassembly of section .text._ZN4llvm8Function4argsEv:

0000000000000000 <_ZN4llvm8Function4argsEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldrb	w8, [x0, #18]
  10:	mov	x19, x0
  14:	tbnz	w8, #0, 20 <_ZN4llvm8Function4argsEv+0x20>
  18:	ldr	x20, [x19, #88]
  1c:	b	34 <_ZN4llvm8Function4argsEv+0x34>
  20:	mov	x0, x19
  24:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
  28:	ldrb	w8, [x19, #18]
  2c:	ldr	x20, [x19, #88]
  30:	tbnz	w8, #0, 3c <_ZN4llvm8Function4argsEv+0x3c>
  34:	mov	x8, x20
  38:	b	48 <_ZN4llvm8Function4argsEv+0x48>
  3c:	mov	x0, x19
  40:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
  44:	ldr	x8, [x19, #88]
  48:	ldr	x9, [x19, #96]
  4c:	mov	x0, x20
  50:	ldp	x20, x19, [sp, #16]
  54:	mov	w10, #0x28                  	// #40
  58:	madd	x1, x9, x10, x8
  5c:	ldp	x29, x30, [sp], #32
  60:	ret

Disassembly of section .text._ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEixERKS3_:

0000000000000000 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEixERKS3_>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #48]
   8:	stp	x20, x19, [sp, #64]
   c:	add	x29, sp, #0x30
  10:	ldr	x9, [x1]
  14:	add	x8, sp, #0x8
  18:	add	x19, x8, #0x8
  1c:	mov	w8, #0x2                   	// #2
  20:	stp	x8, xzr, [sp, #16]
  24:	add	x8, x9, #0x10
  28:	mov	x20, x0
  2c:	cmp	x8, #0x10
  30:	str	x9, [sp, #32]
  34:	b.hi	50 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEixERKS3_+0x50>  // b.pmore
  38:	mov	w9, #0x1                   	// #1
  3c:	lsl	x8, x9, x8
  40:	mov	w9, #0x101                 	// #257
  44:	movk	w9, #0x1, lsl #16
  48:	tst	x8, x9
  4c:	b.ne	58 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEixERKS3_+0x58>  // b.any
  50:	mov	x0, x19
  54:	bl	0 <_ZN4llvm15ValueHandleBase12AddToUseListEv>
  58:	adrp	x8, 0 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEixERKS3_>
  5c:	ldr	x8, [x8]
  60:	add	x1, sp, #0x8
  64:	mov	x0, x20
  68:	str	x20, [sp, #40]
  6c:	add	x8, x8, #0x10
  70:	str	x8, [sp, #8]
  74:	bl	0 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEixERKS3_>
  78:	ldr	x8, [sp, #32]
  7c:	add	x20, x0, #0x28
  80:	add	x8, x8, #0x10
  84:	cmp	x8, #0x10
  88:	b.hi	a4 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEixERKS3_+0xa4>  // b.pmore
  8c:	mov	w9, #0x1                   	// #1
  90:	lsl	x8, x9, x8
  94:	mov	w9, #0x101                 	// #257
  98:	movk	w9, #0x1, lsl #16
  9c:	tst	x8, x9
  a0:	b.ne	ac <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEixERKS3_+0xac>  // b.any
  a4:	mov	x0, x19
  a8:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
  ac:	mov	x0, x20
  b0:	ldp	x20, x19, [sp, #64]
  b4:	ldp	x29, x30, [sp, #48]
  b8:	add	sp, sp, #0x50
  bc:	ret

Disassembly of section .text._ZN4llvm11GlobalValue10setLinkageENS0_12LinkageTypesE:

0000000000000000 <_ZN4llvm11GlobalValue10setLinkageENS0_12LinkageTypesE>:
   0:	ldr	w8, [x0, #32]
   4:	sub	w9, w1, #0x7
   8:	cmp	w9, #0x1
   c:	b.hi	18 <_ZN4llvm11GlobalValue10setLinkageENS0_12LinkageTypesE+0x18>  // b.pmore
  10:	and	w8, w8, #0xffffffcf
  14:	str	w8, [x0, #32]
  18:	and	w10, w1, #0xf
  1c:	mov	w9, w8
  20:	sub	w11, w10, #0x7
  24:	bfxil	w9, w1, #0, #4
  28:	cmp	w11, #0x2
  2c:	str	w9, [x0, #32]
  30:	b.cc	44 <_ZN4llvm11GlobalValue10setLinkageENS0_12LinkageTypesE+0x44>  // b.lo, b.ul, b.last
  34:	cmp	w10, #0x9
  38:	b.eq	4c <_ZN4llvm11GlobalValue10setLinkageENS0_12LinkageTypesE+0x4c>  // b.none
  3c:	and	w8, w8, #0x30
  40:	cbz	w8, 4c <_ZN4llvm11GlobalValue10setLinkageENS0_12LinkageTypesE+0x4c>
  44:	orr	w8, w9, #0x4000
  48:	str	w8, [x0, #32]
  4c:	ret

Disassembly of section .text._ZN4llvm11GlobalValue13setVisibilityENS0_15VisibilityTypesE:

0000000000000000 <_ZN4llvm11GlobalValue13setVisibilityENS0_15VisibilityTypesE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #32]
   c:	and	w9, w8, #0xf
  10:	sub	w10, w9, #0x7
  14:	cbz	w1, 20 <_ZN4llvm11GlobalValue13setVisibilityENS0_15VisibilityTypesE+0x20>
  18:	cmp	w10, #0x2
  1c:	b.cc	50 <_ZN4llvm11GlobalValue13setVisibilityENS0_15VisibilityTypesE+0x50>  // b.lo, b.ul, b.last
  20:	bfi	w8, w1, #4, #2
  24:	cmp	w10, #0x2
  28:	str	w8, [x0, #32]
  2c:	b.cc	40 <_ZN4llvm11GlobalValue13setVisibilityENS0_15VisibilityTypesE+0x40>  // b.lo, b.ul, b.last
  30:	ubfiz	w10, w1, #4, #2
  34:	cbz	w10, 48 <_ZN4llvm11GlobalValue13setVisibilityENS0_15VisibilityTypesE+0x48>
  38:	cmp	w9, #0x9
  3c:	b.eq	48 <_ZN4llvm11GlobalValue13setVisibilityENS0_15VisibilityTypesE+0x48>  // b.none
  40:	orr	w8, w8, #0x4000
  44:	str	w8, [x0, #32]
  48:	ldp	x29, x30, [sp], #16
  4c:	ret
  50:	adrp	x0, 0 <_ZN4llvm11GlobalValue13setVisibilityENS0_15VisibilityTypesE>
  54:	adrp	x1, 0 <_ZN4llvm11GlobalValue13setVisibilityENS0_15VisibilityTypesE>
  58:	adrp	x3, 0 <_ZN4llvm11GlobalValue13setVisibilityENS0_15VisibilityTypesE>
  5c:	add	x0, x0, #0x0
  60:	add	x1, x1, #0x0
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0xf4                  	// #244
  6c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm4coro5Shape19getResumeFunctionCCEv:

0000000000000000 <_ZNK4llvm4coro5Shape19getResumeFunctionCCEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #168]
   c:	sub	w9, w8, #0x1
  10:	cmp	w9, #0x2
  14:	b.cs	28 <_ZNK4llvm4coro5Shape19getResumeFunctionCCEv+0x28>  // b.hs, b.nlast
  18:	ldr	x8, [x0, #200]
  1c:	ldrh	w8, [x8, #18]
  20:	ubfx	w0, w8, #4, #10
  24:	b	30 <_ZNK4llvm4coro5Shape19getResumeFunctionCCEv+0x30>
  28:	cbnz	w8, 38 <_ZNK4llvm4coro5Shape19getResumeFunctionCCEv+0x38>
  2c:	mov	w0, #0x8                   	// #8
  30:	ldp	x29, x30, [sp], #16
  34:	ret
  38:	adrp	x0, 0 <_ZNK4llvm4coro5Shape19getResumeFunctionCCEv>
  3c:	adrp	x1, 0 <_ZNK4llvm4coro5Shape19getResumeFunctionCCEv>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	mov	w2, #0xcb                  	// #203
  4c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZNK4llvm4coro5Shape21getResumeFunctionTypeEv:

0000000000000000 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #168]
   c:	sub	w9, w8, #0x1
  10:	cmp	w9, #0x2
  14:	b.cs	38 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv+0x38>  // b.hs, b.nlast
  18:	ldr	x8, [x0, #200]
  1c:	ldr	x0, [x8, #24]
  20:	cbz	x0, 58 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv+0x58>
  24:	ldrb	w8, [x0, #8]
  28:	cmp	w8, #0xc
  2c:	b.ne	90 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv+0x90>  // b.any
  30:	ldp	x29, x30, [sp], #16
  34:	ret
  38:	cbnz	w8, 78 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv+0x78>
  3c:	bl	0 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv>
  40:	ldrb	w8, [x0, #8]
  44:	cmp	w8, #0xf
  48:	b.ne	b0 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv+0xb0>  // b.any
  4c:	ldr	x8, [x0, #16]
  50:	ldr	x0, [x8]
  54:	cbnz	x0, 24 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv+0x24>
  58:	adrp	x0, 0 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv>
  5c:	adrp	x1, 0 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv>
  60:	adrp	x3, 0 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv>
  64:	add	x0, x0, #0x0
  68:	add	x1, x1, #0x0
  6c:	add	x3, x3, #0x0
  70:	mov	w2, #0x69                  	// #105
  74:	bl	0 <__assert_fail>
  78:	adrp	x0, 0 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv>
  7c:	adrp	x1, 0 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv>
  80:	add	x0, x0, #0x0
  84:	add	x1, x1, #0x0
  88:	mov	w2, #0xa9                  	// #169
  8c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  90:	adrp	x0, 0 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv>
  94:	adrp	x1, 0 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv>
  98:	adrp	x3, 0 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv>
  9c:	add	x0, x0, #0x0
  a0:	add	x1, x1, #0x0
  a4:	add	x3, x3, #0x0
  a8:	mov	w2, #0x108                 	// #264
  ac:	bl	0 <__assert_fail>
  b0:	adrp	x0, 0 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv>
  b4:	adrp	x1, 0 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv>
  b8:	adrp	x3, 0 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x17e                 	// #382
  cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv:

0000000000000000 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #168]
   c:	cbnz	w8, 40 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv+0x40>
  10:	ldr	x8, [x0, #176]
  14:	cbz	x8, 60 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv+0x60>
  18:	ldr	w9, [x8, #12]
  1c:	cbz	w9, 80 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv+0x80>
  20:	ldr	x8, [x8, #16]
  24:	ldr	x0, [x8]
  28:	cbz	x0, a0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv+0xa0>
  2c:	ldrb	w8, [x0, #8]
  30:	cmp	w8, #0xf
  34:	b.ne	c0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv+0xc0>  // b.any
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  44:	adrp	x1, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  48:	adrp	x3, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x9a                  	// #154
  5c:	bl	0 <__assert_fail>
  60:	adrp	x0, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  64:	adrp	x1, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  68:	adrp	x3, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  6c:	add	x0, x0, #0x0
  70:	add	x1, x1, #0x0
  74:	add	x3, x3, #0x0
  78:	mov	w2, #0x9b                  	// #155
  7c:	bl	0 <__assert_fail>
  80:	adrp	x0, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  84:	adrp	x1, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  88:	adrp	x3, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  8c:	add	x0, x0, #0x0
  90:	add	x1, x1, #0x0
  94:	add	x3, x3, #0x0
  98:	mov	w2, #0x160                 	// #352
  9c:	bl	0 <__assert_fail>
  a0:	adrp	x0, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  a4:	adrp	x1, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  a8:	adrp	x3, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  ac:	add	x0, x0, #0x0
  b0:	add	x1, x1, #0x0
  b4:	add	x3, x3, #0x0
  b8:	mov	w2, #0x69                  	// #105
  bc:	bl	0 <__assert_fail>
  c0:	adrp	x0, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  c4:	adrp	x1, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  c8:	adrp	x3, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  cc:	add	x0, x0, #0x0
  d0:	add	x1, x1, #0x0
  d4:	add	x3, x3, #0x0
  d8:	mov	w2, #0x108                 	// #264
  dc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E16FindAndConstructEOSC_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E16FindAndConstructEOSC_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	add	x2, x29, #0x18
  14:	mov	x20, x1
  18:	mov	x21, x0
  1c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E16FindAndConstructEOSC_>
  20:	ldr	x19, [x29, #24]
  24:	tbnz	w0, #0, 5c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E16FindAndConstructEOSC_+0x5c>
  28:	mov	x0, x21
  2c:	mov	x1, x20
  30:	mov	x2, x20
  34:	mov	x3, x19
  38:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E16FindAndConstructEOSC_>
  3c:	mov	x19, x0
  40:	add	x0, x0, #0x8
  44:	add	x1, x20, #0x8
  48:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E16FindAndConstructEOSC_>
  4c:	ldr	x8, [x20, #32]
  50:	mov	w9, #0x6                   	// #6
  54:	stp	xzr, xzr, [x19, #48]
  58:	stp	x8, x9, [x19, #32]
  5c:	mov	x0, x19
  60:	ldp	x20, x19, [sp, #32]
  64:	ldr	x21, [sp, #16]
  68:	ldp	x29, x30, [sp], #48
  6c:	ret

Disassembly of section .text._ZN4llvm15ValueHandleBaseaSEPNS_5ValueE:

0000000000000000 <_ZN4llvm15ValueHandleBaseaSEPNS_5ValueE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x0, #16]
  10:	mov	x19, x1
  14:	cmp	x8, x1
  18:	b.eq	7c <_ZN4llvm15ValueHandleBaseaSEPNS_5ValueE+0x7c>  // b.none
  1c:	add	x8, x8, #0x10
  20:	mov	x20, x0
  24:	cmp	x8, #0x10
  28:	b.hi	44 <_ZN4llvm15ValueHandleBaseaSEPNS_5ValueE+0x44>  // b.pmore
  2c:	mov	w9, #0x1                   	// #1
  30:	lsl	x8, x9, x8
  34:	mov	w9, #0x101                 	// #257
  38:	movk	w9, #0x1, lsl #16
  3c:	tst	x8, x9
  40:	b.ne	4c <_ZN4llvm15ValueHandleBaseaSEPNS_5ValueE+0x4c>  // b.any
  44:	mov	x0, x20
  48:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
  4c:	add	x8, x19, #0x10
  50:	cmp	x8, #0x10
  54:	str	x19, [x20, #16]
  58:	b.hi	74 <_ZN4llvm15ValueHandleBaseaSEPNS_5ValueE+0x74>  // b.pmore
  5c:	mov	w9, #0x1                   	// #1
  60:	lsl	x8, x9, x8
  64:	mov	w9, #0x101                 	// #257
  68:	movk	w9, #0x1, lsl #16
  6c:	tst	x8, x9
  70:	b.ne	7c <_ZN4llvm15ValueHandleBaseaSEPNS_5ValueE+0x7c>  // b.any
  74:	mov	x0, x20
  78:	bl	0 <_ZN4llvm15ValueHandleBase12AddToUseListEv>
  7c:	mov	x0, x19
  80:	ldp	x20, x19, [sp, #16]
  84:	ldp	x29, x30, [sp], #32
  88:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIvESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIvESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cbz	x1, 48 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIvESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x48>
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	ldr	x1, [x20, #24]
  20:	mov	x0, x19
  24:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIvESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
  28:	ldr	x21, [x20, #16]
  2c:	add	x1, x20, #0x20
  30:	mov	x0, x19
  34:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIvESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
  38:	mov	x0, x20
  3c:	bl	0 <_ZdlPv>
  40:	mov	x20, x21
  44:	cbnz	x21, 1c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIvESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x1c>
  48:	ldp	x20, x19, [sp, #32]
  4c:	ldr	x21, [sp, #16]
  50:	ldp	x29, x30, [sp], #48
  54:	ret

Disassembly of section .text._ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE7destroyISA_EEvPT_:

0000000000000000 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE7destroyISA_EEvPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x0, [x1, #32]
  10:	add	x8, x1, #0x30
  14:	mov	x19, x1
  18:	cmp	x0, x8
  1c:	b.eq	24 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE7destroyISA_EEvPT_+0x24>  // b.none
  20:	bl	0 <_ZdlPv>
  24:	ldr	x0, [x19], #16
  28:	cmp	x0, x19
  2c:	b.eq	3c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE7destroyISA_EEvPT_+0x3c>  // b.none
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZdlPv>
  3c:	ldr	x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	ret

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE8CreateBrEPNS_10BasicBlockE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE8CreateBrEPNS_10BasicBlockE>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #32]
   8:	str	x21, [sp, #48]
   c:	stp	x20, x19, [sp, #64]
  10:	add	x29, sp, #0x20
  14:	mov	x19, x1
  18:	mov	x20, x0
  1c:	mov	w0, #0x38                  	// #56
  20:	mov	w1, #0x1                   	// #1
  24:	bl	0 <_ZN4llvm4UsernwEmj>
  28:	mov	x1, x19
  2c:	mov	x2, xzr
  30:	mov	x21, x0
  34:	bl	0 <_ZN4llvm10BranchInstC1EPNS_10BasicBlockEPNS_11InstructionE>
  38:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE8CreateBrEPNS_10BasicBlockE>
  3c:	add	x1, x1, #0x0
  40:	add	x0, sp, #0x8
  44:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE8CreateBrEPNS_10BasicBlockE>
  48:	ldp	x3, x4, [x20, #8]
  4c:	add	x2, sp, #0x8
  50:	mov	x0, x20
  54:	mov	x1, x21
  58:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE8CreateBrEPNS_10BasicBlockE>
  5c:	mov	x0, x20
  60:	mov	x1, x21
  64:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE8CreateBrEPNS_10BasicBlockE>
  68:	mov	x0, x21
  6c:	ldp	x20, x19, [sp, #64]
  70:	ldr	x21, [sp, #48]
  74:	ldp	x29, x30, [sp, #32]
  78:	add	sp, sp, #0x50
  7c:	ret

Disassembly of section .text._ZNK4llvm10BranchInst12getSuccessorEj:

0000000000000000 <_ZNK4llvm10BranchInst12getSuccessorEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #20]
   c:	and	w8, w8, #0xfffffff
  10:	cmp	w8, #0x3
  14:	mov	w8, #0x1                   	// #1
  18:	cinc	w8, w8, eq  // eq = none
  1c:	cmp	w8, w1
  20:	b.ls	50 <_ZNK4llvm10BranchInst12getSuccessorEj+0x50>  // b.plast
  24:	mov	w8, w1
  28:	mov	w9, #0x18                  	// #24
  2c:	mneg	x8, x8, x9
  30:	add	x8, x0, x8
  34:	ldur	x0, [x8, #-24]
  38:	cbz	x0, 48 <_ZNK4llvm10BranchInst12getSuccessorEj+0x48>
  3c:	ldrb	w8, [x0, #16]
  40:	cmp	w8, #0x12
  44:	b.ne	70 <_ZNK4llvm10BranchInst12getSuccessorEj+0x70>  // b.any
  48:	ldp	x29, x30, [sp], #16
  4c:	ret
  50:	adrp	x0, 0 <_ZNK4llvm10BranchInst12getSuccessorEj>
  54:	adrp	x1, 0 <_ZNK4llvm10BranchInst12getSuccessorEj>
  58:	adrp	x3, 0 <_ZNK4llvm10BranchInst12getSuccessorEj>
  5c:	add	x0, x0, #0x0
  60:	add	x1, x1, #0x0
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0xc03                 	// #3075
  6c:	bl	0 <__assert_fail>
  70:	adrp	x0, 0 <_ZNK4llvm10BranchInst12getSuccessorEj>
  74:	adrp	x1, 0 <_ZNK4llvm10BranchInst12getSuccessorEj>
  78:	adrp	x3, 0 <_ZNK4llvm10BranchInst12getSuccessorEj>
  7c:	add	x0, x0, #0x0
  80:	add	x1, x1, #0x0
  84:	add	x3, x3, #0x0
  88:	mov	w2, #0x134                 	// #308
  8c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_5ValueERKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_5ValueERKNS_5TwineE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x1]
   c:	ldrb	w9, [x8, #8]
  10:	cmp	w9, #0xf
  14:	b.ne	30 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_5ValueERKNS_5TwineE+0x30>  // b.any
  18:	ldr	x8, [x8, #16]
  1c:	mov	x3, x2
  20:	mov	x2, x1
  24:	ldr	x1, [x8]
  28:	ldp	x29, x30, [sp], #16
  2c:	b	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_5ValueERKNS_5TwineE>
  30:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_5ValueERKNS_5TwineE>
  34:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_5ValueERKNS_5TwineE>
  38:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_5ValueERKNS_5TwineE>
  3c:	add	x0, x0, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0x17e                 	// #382
  4c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_4TypeEPNS_5ValueERKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_4TypeEPNS_5ValueERKNS_5TwineE>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	str	x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	mov	x21, x1
  1c:	mov	x22, x0
  20:	mov	w0, #0x40                  	// #64
  24:	mov	w1, #0x1                   	// #1
  28:	mov	x19, x3
  2c:	mov	x20, x2
  30:	bl	0 <_ZN4llvm4UsernwEmj>
  34:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_4TypeEPNS_5ValueERKNS_5TwineE>
  38:	mov	x23, x0
  3c:	add	x1, x1, #0x0
  40:	add	x0, sp, #0x8
  44:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_4TypeEPNS_5ValueERKNS_5TwineE>
  48:	add	x3, sp, #0x8
  4c:	mov	x0, x23
  50:	mov	x1, x21
  54:	mov	x2, x20
  58:	mov	x4, xzr
  5c:	bl	0 <_ZN4llvm8LoadInstC1EPNS_4TypeEPNS_5ValueERKNS_5TwineEPNS_11InstructionE>
  60:	ldp	x3, x4, [x22, #8]
  64:	mov	x0, x22
  68:	mov	x1, x23
  6c:	mov	x2, x19
  70:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_4TypeEPNS_5ValueERKNS_5TwineE>
  74:	mov	x0, x22
  78:	mov	x1, x23
  7c:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateLoadEPNS_4TypeEPNS_5ValueERKNS_5TwineE>
  80:	mov	x0, x23
  84:	ldp	x20, x19, [sp, #80]
  88:	ldp	x22, x21, [sp, #64]
  8c:	ldr	x23, [sp, #48]
  90:	ldp	x29, x30, [sp, #32]
  94:	add	sp, sp, #0x60
  98:	ret

Disassembly of section .text._ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE16getCaseSuccessorEv:

0000000000000000 <_ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE16getCaseSuccessorEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #8]
  10:	ldr	x19, [x0]
  14:	cmn	w8, #0x2
  18:	b.eq	30 <_ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE16getCaseSuccessorEv+0x30>  // b.none
  1c:	ldr	w9, [x19, #20]
  20:	ubfx	w9, w9, #1, #27
  24:	sub	w9, w9, #0x1
  28:	cmp	w9, w8
  2c:	b.ls	48 <_ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE16getCaseSuccessorEv+0x48>  // b.plast
  30:	bl	0 <_ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE16getCaseSuccessorEv>
  34:	mov	w1, w0
  38:	mov	x0, x19
  3c:	ldr	x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	b	0 <_ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE16getCaseSuccessorEv>
  48:	adrp	x0, 0 <_ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE16getCaseSuccessorEv>
  4c:	adrp	x1, 0 <_ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE16getCaseSuccessorEv>
  50:	adrp	x3, 0 <_ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE16getCaseSuccessorEv>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0xc81                 	// #3201
  64:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateCondBrEPNS_5ValueEPNS_10BasicBlockES7_PNS_6MDNodeES9_:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateCondBrEPNS_5ValueEPNS_10BasicBlockES7_PNS_6MDNodeES9_>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #32]
   8:	str	x25, [sp, #48]
   c:	stp	x24, x23, [sp, #64]
  10:	stp	x22, x21, [sp, #80]
  14:	stp	x20, x19, [sp, #96]
  18:	add	x29, sp, #0x20
  1c:	mov	x23, x1
  20:	mov	x24, x0
  24:	mov	w0, #0x38                  	// #56
  28:	mov	w1, #0x3                   	// #3
  2c:	mov	x19, x5
  30:	mov	x20, x4
  34:	mov	x21, x3
  38:	mov	x22, x2
  3c:	bl	0 <_ZN4llvm4UsernwEmj>
  40:	mov	x1, x22
  44:	mov	x2, x21
  48:	mov	x3, x23
  4c:	mov	x4, xzr
  50:	mov	x25, x0
  54:	bl	0 <_ZN4llvm10BranchInstC1EPNS_10BasicBlockES2_PNS_5ValueEPNS_11InstructionE>
  58:	mov	x0, x24
  5c:	mov	x1, x25
  60:	mov	x2, x20
  64:	mov	x3, x19
  68:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateCondBrEPNS_5ValueEPNS_10BasicBlockES7_PNS_6MDNodeES9_>
  6c:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateCondBrEPNS_5ValueEPNS_10BasicBlockES7_PNS_6MDNodeES9_>
  70:	mov	x19, x0
  74:	add	x1, x1, #0x0
  78:	add	x0, sp, #0x8
  7c:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateCondBrEPNS_5ValueEPNS_10BasicBlockES7_PNS_6MDNodeES9_>
  80:	ldp	x3, x4, [x24, #8]
  84:	add	x2, sp, #0x8
  88:	mov	x0, x24
  8c:	mov	x1, x19
  90:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateCondBrEPNS_5ValueEPNS_10BasicBlockES7_PNS_6MDNodeES9_>
  94:	mov	x0, x24
  98:	mov	x1, x19
  9c:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateCondBrEPNS_5ValueEPNS_10BasicBlockES7_PNS_6MDNodeES9_>
  a0:	mov	x0, x19
  a4:	ldp	x20, x19, [sp, #96]
  a8:	ldp	x22, x21, [sp, #80]
  ac:	ldp	x24, x23, [sp, #64]
  b0:	ldr	x25, [sp, #48]
  b4:	ldp	x29, x30, [sp, #32]
  b8:	add	sp, sp, #0x70
  bc:	ret

Disassembly of section .text._ZN4llvm10SwitchInst16CaseIteratorImplINS0_10CaseHandleEEpLEl:

0000000000000000 <_ZN4llvm10SwitchInst16CaseIteratorImplINS0_10CaseHandleEEpLEl>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #8]
   c:	adds	x8, x8, x1
  10:	b.mi	38 <_ZN4llvm10SwitchInst16CaseIteratorImplINS0_10CaseHandleEEpLEl+0x38>  // b.first
  14:	ldr	x9, [x0]
  18:	ldr	w9, [x9, #20]
  1c:	ubfx	w9, w9, #1, #27
  20:	sub	w9, w9, #0x1
  24:	cmp	w9, w8
  28:	b.cc	38 <_ZN4llvm10SwitchInst16CaseIteratorImplINS0_10CaseHandleEEpLEl+0x38>  // b.lo, b.ul, b.last
  2c:	str	x8, [x0, #8]
  30:	ldp	x29, x30, [sp], #16
  34:	ret
  38:	adrp	x0, 0 <_ZN4llvm10SwitchInst16CaseIteratorImplINS0_10CaseHandleEEpLEl>
  3c:	adrp	x1, 0 <_ZN4llvm10SwitchInst16CaseIteratorImplINS0_10CaseHandleEEpLEl>
  40:	adrp	x3, 0 <_ZN4llvm10SwitchInst16CaseIteratorImplINS0_10CaseHandleEEpLEl>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0xcd4                 	// #3284
  54:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm10SwitchInst16CaseIteratorImplINS0_10CaseHandleEEmIEl:

0000000000000000 <_ZN4llvm10SwitchInst16CaseIteratorImplINS0_10CaseHandleEEmIEl>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #8]
   c:	subs	x8, x8, x1
  10:	b.mi	38 <_ZN4llvm10SwitchInst16CaseIteratorImplINS0_10CaseHandleEEmIEl+0x38>  // b.first
  14:	ldr	x9, [x0]
  18:	ldr	w9, [x9, #20]
  1c:	ubfx	w9, w9, #1, #27
  20:	sub	w9, w9, #0x1
  24:	cmp	w9, w8
  28:	b.cc	38 <_ZN4llvm10SwitchInst16CaseIteratorImplINS0_10CaseHandleEEmIEl+0x38>  // b.lo, b.ul, b.last
  2c:	str	x8, [x0, #8]
  30:	ldp	x29, x30, [sp], #16
  34:	ret
  38:	adrp	x0, 0 <_ZN4llvm10SwitchInst16CaseIteratorImplINS0_10CaseHandleEEmIEl>
  3c:	adrp	x1, 0 <_ZN4llvm10SwitchInst16CaseIteratorImplINS0_10CaseHandleEEmIEl>
  40:	adrp	x3, 0 <_ZN4llvm10SwitchInst16CaseIteratorImplINS0_10CaseHandleEEmIEl>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0xcdd                 	// #3293
  54:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10SwitchInst12getSuccessorEj:

0000000000000000 <_ZNK4llvm10SwitchInst12getSuccessorEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #20]
   c:	ubfx	w8, w9, #1, #27
  10:	cmp	w8, w1
  14:	b.ls	68 <_ZNK4llvm10SwitchInst12getSuccessorEj+0x68>  // b.plast
  18:	mov	w8, #0x1                   	// #1
  1c:	bfi	w8, w1, #1, #31
  20:	and	x10, x9, #0xfffffff
  24:	cmp	w10, w8
  28:	b.ls	88 <_ZNK4llvm10SwitchInst12getSuccessorEj+0x88>  // b.plast
  2c:	tbnz	w9, #30, 40 <_ZNK4llvm10SwitchInst12getSuccessorEj+0x40>
  30:	mov	w9, #0x18                  	// #24
  34:	mneg	x9, x10, x9
  38:	add	x9, x0, x9
  3c:	b	44 <_ZNK4llvm10SwitchInst12getSuccessorEj+0x44>
  40:	ldur	x9, [x0, #-8]
  44:	mov	w10, #0x18                  	// #24
  48:	umull	x8, w8, w10
  4c:	ldr	x0, [x9, x8]
  50:	cbz	x0, a8 <_ZNK4llvm10SwitchInst12getSuccessorEj+0xa8>
  54:	ldrb	w8, [x0, #16]
  58:	cmp	w8, #0x12
  5c:	b.ne	c8 <_ZNK4llvm10SwitchInst12getSuccessorEj+0xc8>  // b.any
  60:	ldp	x29, x30, [sp], #16
  64:	ret
  68:	adrp	x0, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  6c:	adrp	x1, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  70:	adrp	x3, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0xd7c                 	// #3452
  84:	bl	0 <__assert_fail>
  88:	adrp	x0, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  8c:	adrp	x1, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  90:	adrp	x3, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  94:	add	x0, x0, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x3, x3, #0x0
  a0:	mov	w2, #0xdbe                 	// #3518
  a4:	bl	0 <__assert_fail>
  a8:	adrp	x0, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  ac:	adrp	x1, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  b0:	adrp	x3, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  b4:	add	x0, x0, #0x0
  b8:	add	x1, x1, #0x0
  bc:	add	x3, x3, #0x0
  c0:	mov	w2, #0x69                  	// #105
  c4:	bl	0 <__assert_fail>
  c8:	adrp	x0, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  cc:	adrp	x1, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  d0:	adrp	x3, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  d4:	add	x0, x0, #0x0
  d8:	add	x1, x1, #0x0
  dc:	add	x3, x3, #0x0
  e0:	mov	w2, #0x108                 	// #264
  e4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE17getSuccessorIndexEv:

0000000000000000 <_ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE17getSuccessorIndexEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cmn	w8, #0x2
  10:	b.eq	2c <_ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE17getSuccessorIndexEv+0x2c>  // b.none
  14:	ldr	x9, [x0]
  18:	ldr	w9, [x9, #20]
  1c:	ubfx	w9, w9, #1, #27
  20:	sub	w9, w9, #0x1
  24:	cmp	w9, w8
  28:	b.ls	3c <_ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE17getSuccessorIndexEv+0x3c>  // b.plast
  2c:	cmn	w8, #0x2
  30:	csinc	w0, wzr, w8, eq  // eq = none
  34:	ldp	x29, x30, [sp], #16
  38:	ret
  3c:	adrp	x0, 0 <_ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE17getSuccessorIndexEv>
  40:	adrp	x1, 0 <_ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE17getSuccessorIndexEv>
  44:	adrp	x3, 0 <_ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE17getSuccessorIndexEv>
  48:	add	x0, x0, #0x0
  4c:	add	x1, x1, #0x0
  50:	add	x3, x3, #0x0
  54:	mov	w2, #0xc8c                 	// #3212
  58:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x24, x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	cbz	x2, e8 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0xe8>
  1c:	ldrb	w8, [x2, #16]
  20:	mov	x20, x4
  24:	mov	x21, x3
  28:	mov	x22, x2
  2c:	mov	w23, w1
  30:	mov	x19, x0
  34:	cmp	w8, #0x10
  38:	b.hi	4c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0x4c>  // b.pmore
  3c:	cbz	x21, e8 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0xe8>
  40:	ldrb	w8, [x21, #16]
  44:	cmp	w8, #0x10
  48:	b.ls	c0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0xc0>  // b.plast
  4c:	mov	w0, #0x38                  	// #56
  50:	mov	w1, #0x2                   	// #2
  54:	bl	0 <_ZN4llvm4UsernwEmj>
  58:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  5c:	mov	x24, x0
  60:	add	x1, x1, #0x0
  64:	add	x0, sp, #0x8
  68:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  6c:	add	x4, sp, #0x8
  70:	mov	x0, x24
  74:	mov	w1, w23
  78:	mov	x2, x22
  7c:	mov	x3, x21
  80:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  84:	ldp	x3, x4, [x19, #8]
  88:	mov	x0, x19
  8c:	mov	x1, x24
  90:	mov	x2, x20
  94:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  98:	mov	x0, x19
  9c:	mov	x1, x24
  a0:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  a4:	mov	x0, x24
  a8:	ldp	x20, x19, [sp, #80]
  ac:	ldp	x22, x21, [sp, #64]
  b0:	ldp	x24, x23, [sp, #48]
  b4:	ldp	x29, x30, [sp, #32]
  b8:	add	sp, sp, #0x60
  bc:	ret
  c0:	mov	w0, w23
  c4:	mov	x1, x22
  c8:	mov	x2, x21
  cc:	ldp	x20, x19, [sp, #80]
  d0:	ldp	x22, x21, [sp, #64]
  d4:	ldp	x24, x23, [sp, #48]
  d8:	ldp	x29, x30, [sp, #32]
  dc:	mov	w3, wzr
  e0:	add	sp, sp, #0x60
  e4:	b	0 <_ZN4llvm12ConstantExpr10getCompareEtPNS_8ConstantES2_b>
  e8:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  ec:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  f0:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  f4:	add	x0, x0, #0x0
  f8:	add	x1, x1, #0x0
  fc:	add	x3, x3, #0x0
 100:	mov	w2, #0x69                  	// #105
 104:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE:

0000000000000000 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #16]
   8:	str	x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	add	x29, sp, #0x10
  18:	ldr	x8, [x2]
  1c:	mov	x23, x0
  20:	mov	x19, x4
  24:	mov	x20, x3
  28:	mov	x0, x8
  2c:	mov	x21, x2
  30:	mov	w22, w1
  34:	bl	0 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE>
  38:	mov	x1, x0
  3c:	mov	w2, #0x35                  	// #53
  40:	mov	x0, x23
  44:	mov	w3, w22
  48:	mov	x4, x21
  4c:	mov	x5, x20
  50:	mov	x6, x19
  54:	mov	x7, xzr
  58:	str	xzr, [sp]
  5c:	bl	0 <_ZN4llvm7CmpInstC2EPNS_4TypeENS_11Instruction8OtherOpsENS0_9PredicateEPNS_5ValueES7_RKNS_5TwineEPS3_SB_>
  60:	mov	x0, x23
  64:	ldp	x20, x19, [sp, #64]
  68:	ldp	x22, x21, [sp, #48]
  6c:	ldr	x23, [sp, #32]
  70:	ldp	x29, x30, [sp, #16]
  74:	add	sp, sp, #0x50
  78:	b	0 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE>

Disassembly of section .text._ZN4llvm7CmpInst17makeCmpResultTypeEPNS_4TypeE:

0000000000000000 <_ZN4llvm7CmpInst17makeCmpResultTypeEPNS_4TypeE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	cbz	x0, 54 <_ZN4llvm7CmpInst17makeCmpResultTypeEPNS_4TypeE+0x54>
  10:	mov	x19, x0
  14:	ldrb	w20, [x0, #8]
  18:	ldr	x0, [x0]
  1c:	bl	0 <_ZN4llvm4Type9getInt1TyERNS_11LLVMContextE>
  20:	cmp	w20, #0x10
  24:	b.ne	48 <_ZN4llvm7CmpInst17makeCmpResultTypeEPNS_4TypeE+0x48>  // b.any
  28:	ldr	x8, [x19, #32]
  2c:	lsr	x9, x8, #32
  30:	cbnz	x9, 74 <_ZN4llvm7CmpInst17makeCmpResultTypeEPNS_4TypeE+0x74>
  34:	ldrb	w9, [x19, #40]
  38:	ldp	x20, x19, [sp, #16]
  3c:	orr	x1, x8, x9, lsl #32
  40:	ldp	x29, x30, [sp], #32
  44:	b	0 <_ZN4llvm10VectorType3getEPNS_4TypeENS_12ElementCountE>
  48:	ldp	x20, x19, [sp, #16]
  4c:	ldp	x29, x30, [sp], #32
  50:	ret
  54:	adrp	x0, 0 <_ZN4llvm7CmpInst17makeCmpResultTypeEPNS_4TypeE>
  58:	adrp	x1, 0 <_ZN4llvm7CmpInst17makeCmpResultTypeEPNS_4TypeE>
  5c:	adrp	x3, 0 <_ZN4llvm7CmpInst17makeCmpResultTypeEPNS_4TypeE>
  60:	add	x0, x0, #0x0
  64:	add	x1, x1, #0x0
  68:	add	x3, x3, #0x0
  6c:	mov	w2, #0x69                  	// #105
  70:	bl	0 <__assert_fail>
  74:	adrp	x0, 0 <_ZN4llvm7CmpInst17makeCmpResultTypeEPNS_4TypeE>
  78:	adrp	x1, 0 <_ZN4llvm7CmpInst17makeCmpResultTypeEPNS_4TypeE>
  7c:	adrp	x3, 0 <_ZN4llvm7CmpInst17makeCmpResultTypeEPNS_4TypeE>
  80:	add	x0, x0, #0x0
  84:	add	x1, x1, #0x0
  88:	add	x3, x3, #0x0
  8c:	mov	w2, #0x220                 	// #544
  90:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8ICmpInst8AssertOKEv:

0000000000000000 <_ZN4llvm8ICmpInst8AssertOKEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrh	w8, [x0, #18]
   c:	and	w8, w8, #0x7fff
  10:	sub	w8, w8, #0x20
  14:	cmp	w8, #0xa
  18:	b.cs	7c <_ZN4llvm8ICmpInst8AssertOKEv+0x7c>  // b.hs, b.nlast
  1c:	ldur	x8, [x0, #-48]
  20:	ldur	x9, [x0, #-24]
  24:	ldr	x8, [x8]
  28:	ldr	x9, [x9]
  2c:	cmp	x8, x9
  30:	b.ne	9c <_ZN4llvm8ICmpInst8AssertOKEv+0x9c>  // b.any
  34:	ldrb	w9, [x8, #8]
  38:	cmp	w9, #0x10
  3c:	mov	w10, w9
  40:	b.ne	50 <_ZN4llvm8ICmpInst8AssertOKEv+0x50>  // b.any
  44:	ldr	x10, [x8, #16]
  48:	ldr	x10, [x10]
  4c:	ldrb	w10, [x10, #8]
  50:	cmp	w10, #0xb
  54:	b.eq	74 <_ZN4llvm8ICmpInst8AssertOKEv+0x74>  // b.none
  58:	cmp	w9, #0x10
  5c:	b.ne	6c <_ZN4llvm8ICmpInst8AssertOKEv+0x6c>  // b.any
  60:	ldr	x8, [x8, #16]
  64:	ldr	x8, [x8]
  68:	ldrb	w9, [x8, #8]
  6c:	cmp	w9, #0xf
  70:	b.ne	bc <_ZN4llvm8ICmpInst8AssertOKEv+0xbc>  // b.any
  74:	ldp	x29, x30, [sp], #16
  78:	ret
  7c:	adrp	x0, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  80:	adrp	x1, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  84:	adrp	x3, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  88:	add	x0, x0, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0x489                 	// #1161
  98:	bl	0 <__assert_fail>
  9c:	adrp	x0, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  a0:	adrp	x1, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  a4:	adrp	x3, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  a8:	add	x0, x0, #0x0
  ac:	add	x1, x1, #0x0
  b0:	add	x3, x3, #0x0
  b4:	mov	w2, #0x48b                 	// #1163
  b8:	bl	0 <__assert_fail>
  bc:	adrp	x0, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  c0:	adrp	x1, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  c4:	adrp	x3, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  c8:	add	x0, x0, #0x0
  cc:	add	x1, x1, #0x0
  d0:	add	x3, x3, #0x0
  d4:	mov	w2, #0x48f                 	// #1167
  d8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17addBranchMetadataINS_10BranchInstEEEPT_S7_PNS_6MDNodeES9_:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17addBranchMetadataINS_10BranchInstEEEPT_S7_PNS_6MDNodeES9_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x20, x3
  10:	mov	x19, x1
  14:	cbz	x2, 24 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17addBranchMetadataINS_10BranchInstEEEPT_S7_PNS_6MDNodeES9_+0x24>
  18:	mov	w1, #0x2                   	// #2
  1c:	mov	x0, x19
  20:	bl	0 <_ZN4llvm11Instruction11setMetadataEjPNS_6MDNodeE>
  24:	cbz	x20, 38 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17addBranchMetadataINS_10BranchInstEEEPT_S7_PNS_6MDNodeES9_+0x38>
  28:	mov	w1, #0xf                   	// #15
  2c:	mov	x0, x19
  30:	mov	x2, x20
  34:	bl	0 <_ZN4llvm11Instruction11setMetadataEjPNS_6MDNodeE>
  38:	mov	x0, x19
  3c:	ldp	x20, x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIPNS_5ValueELb1EE9push_backERKS2_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIPNS_5ValueELb1EE9push_backERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseIPNS_5ValueELb1EE9push_backERKS2_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	x10, [x20]
  28:	str	x10, [x9, w8, uxtw #3]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseIPNS_5ValueELb1EE9push_backERKS2_+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x8                   	// #8
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseIPNS_5ValueELb1EE9push_backERKS2_+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_5ValueELb1EE9push_backERKS2_>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_5ValueELb1EE9push_backERKS2_>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_5ValueELb1EE9push_backERKS2_>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInsertValueEPNS_5ValueES5_NS_8ArrayRefIjEERKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInsertValueEPNS_5ValueES5_NS_8ArrayRefIjEERKNS_5TwineE>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #32]
   8:	str	x25, [sp, #48]
   c:	stp	x24, x23, [sp, #64]
  10:	stp	x22, x21, [sp, #80]
  14:	stp	x20, x19, [sp, #96]
  18:	add	x29, sp, #0x20
  1c:	cbz	x1, 12c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInsertValueEPNS_5ValueES5_NS_8ArrayRefIjEERKNS_5TwineE+0x12c>
  20:	ldrb	w8, [x1, #16]
  24:	mov	x20, x5
  28:	mov	x21, x4
  2c:	mov	x22, x3
  30:	mov	x23, x2
  34:	mov	x24, x1
  38:	mov	x19, x0
  3c:	cmp	w8, #0x10
  40:	b.hi	54 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInsertValueEPNS_5ValueES5_NS_8ArrayRefIjEERKNS_5TwineE+0x54>  // b.pmore
  44:	cbz	x23, 12c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInsertValueEPNS_5ValueES5_NS_8ArrayRefIjEERKNS_5TwineE+0x12c>
  48:	ldrb	w8, [x23, #16]
  4c:	cmp	w8, #0x10
  50:	b.ls	fc <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInsertValueEPNS_5ValueES5_NS_8ArrayRefIjEERKNS_5TwineE+0xfc>  // b.plast
  54:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInsertValueEPNS_5ValueES5_NS_8ArrayRefIjEERKNS_5TwineE>
  58:	add	x1, x1, #0x0
  5c:	add	x0, sp, #0x8
  60:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInsertValueEPNS_5ValueES5_NS_8ArrayRefIjEERKNS_5TwineE>
  64:	mov	w0, #0x58                  	// #88
  68:	mov	w1, #0x2                   	// #2
  6c:	bl	0 <_ZN4llvm4UsernwEmj>
  70:	ldr	x1, [x24]
  74:	sub	x3, x0, #0x30
  78:	mov	w2, #0x41                  	// #65
  7c:	mov	w4, #0x2                   	// #2
  80:	mov	x5, xzr
  84:	mov	x25, x0
  88:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
  8c:	adrp	x8, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInsertValueEPNS_5ValueES5_NS_8ArrayRefIjEERKNS_5TwineE>
  90:	ldr	d0, [x8]
  94:	add	x8, x25, #0x48
  98:	add	x5, sp, #0x8
  9c:	mov	x0, x25
  a0:	mov	x1, x24
  a4:	mov	x2, x23
  a8:	mov	x3, x22
  ac:	mov	x4, x21
  b0:	str	x8, [x25, #56]
  b4:	str	d0, [x25, #64]
  b8:	bl	0 <_ZN4llvm15InsertValueInst4initEPNS_5ValueES2_NS_8ArrayRefIjEERKNS_5TwineE>
  bc:	ldp	x3, x4, [x19, #8]
  c0:	mov	x0, x19
  c4:	mov	x1, x25
  c8:	mov	x2, x20
  cc:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInsertValueEPNS_5ValueES5_NS_8ArrayRefIjEERKNS_5TwineE>
  d0:	mov	x0, x19
  d4:	mov	x1, x25
  d8:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInsertValueEPNS_5ValueES5_NS_8ArrayRefIjEERKNS_5TwineE>
  dc:	mov	x0, x25
  e0:	ldp	x20, x19, [sp, #96]
  e4:	ldp	x22, x21, [sp, #80]
  e8:	ldp	x24, x23, [sp, #64]
  ec:	ldr	x25, [sp, #48]
  f0:	ldp	x29, x30, [sp, #32]
  f4:	add	sp, sp, #0x70
  f8:	ret
  fc:	mov	x0, x24
 100:	mov	x1, x23
 104:	mov	x2, x22
 108:	mov	x3, x21
 10c:	ldp	x20, x19, [sp, #96]
 110:	ldp	x22, x21, [sp, #80]
 114:	ldp	x24, x23, [sp, #64]
 118:	ldr	x25, [sp, #48]
 11c:	ldp	x29, x30, [sp, #32]
 120:	mov	x4, xzr
 124:	add	sp, sp, #0x70
 128:	b	0 <_ZN4llvm12ConstantExpr14getInsertValueEPNS_8ConstantES2_NS_8ArrayRefIjEEPNS_4TypeE>
 12c:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInsertValueEPNS_5ValueES5_NS_8ArrayRefIjEERKNS_5TwineE>
 130:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInsertValueEPNS_5ValueES5_NS_8ArrayRefIjEERKNS_5TwineE>
 134:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInsertValueEPNS_5ValueES5_NS_8ArrayRefIjEERKNS_5TwineE>
 138:	add	x0, x0, #0x0
 13c:	add	x1, x1, #0x0
 140:	add	x3, x3, #0x0
 144:	mov	w2, #0x69                  	// #105
 148:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm11CoroEndInst8isUnwindEv:

0000000000000000 <_ZNK4llvm11CoroEndInst8isUnwindEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w1, #0x1                   	// #1
   c:	bl	0 <_ZNK4llvm11CoroEndInst8isUnwindEv>
  10:	cbz	x0, 28 <_ZNK4llvm11CoroEndInst8isUnwindEv+0x28>
  14:	ldrb	w8, [x0, #16]
  18:	cmp	w8, #0x11
  1c:	b.cs	48 <_ZNK4llvm11CoroEndInst8isUnwindEv+0x48>  // b.hs, b.nlast
  20:	ldp	x29, x30, [sp], #16
  24:	b	0 <_ZNK4llvm8Constant10isOneValueEv>
  28:	adrp	x0, 0 <_ZNK4llvm11CoroEndInst8isUnwindEv>
  2c:	adrp	x1, 0 <_ZNK4llvm11CoroEndInst8isUnwindEv>
  30:	adrp	x3, 0 <_ZNK4llvm11CoroEndInst8isUnwindEv>
  34:	add	x0, x0, #0x0
  38:	add	x1, x1, #0x0
  3c:	add	x3, x3, #0x0
  40:	mov	w2, #0x69                  	// #105
  44:	bl	0 <__assert_fail>
  48:	adrp	x0, 0 <_ZNK4llvm11CoroEndInst8isUnwindEv>
  4c:	adrp	x1, 0 <_ZNK4llvm11CoroEndInst8isUnwindEv>
  50:	adrp	x3, 0 <_ZNK4llvm11CoroEndInst8isUnwindEv>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x108                 	// #264
  64:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase16getOperandBundleEj:

0000000000000000 <_ZNK4llvm8CallBase16getOperandBundleEj>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	str	x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	mov	w20, w1
  1c:	mov	x21, x0
  20:	mov	x19, x8
  24:	bl	0 <_ZNK4llvm8CallBase16getOperandBundleEj>
  28:	cmp	w0, #0x2
  2c:	b.cs	ac <_ZNK4llvm8CallBase16getOperandBundleEj+0xac>  // b.hs, b.nlast
  30:	mov	x0, x21
  34:	bl	0 <_ZNK4llvm8CallBase16getOperandBundleEj>
  38:	cbz	w0, 70 <_ZNK4llvm8CallBase16getOperandBundleEj+0x70>
  3c:	mov	w22, w0
  40:	mov	w23, wzr
  44:	add	x8, sp, #0x8
  48:	mov	x0, x21
  4c:	mov	w1, w23
  50:	bl	0 <_ZNK4llvm8CallBase16getOperandBundleEj>
  54:	ldr	x8, [sp, #24]
  58:	ldr	w8, [x8, #8]
  5c:	cmp	w8, w20
  60:	b.eq	7c <_ZNK4llvm8CallBase16getOperandBundleEj+0x7c>  // b.none
  64:	add	w23, w23, #0x1
  68:	cmp	w22, w23
  6c:	b.ne	44 <_ZNK4llvm8CallBase16getOperandBundleEj+0x44>  // b.any
  70:	strb	wzr, [x19]
  74:	strb	wzr, [x19, #24]
  78:	b	94 <_ZNK4llvm8CallBase16getOperandBundleEj+0x94>
  7c:	ldr	x8, [sp, #24]
  80:	ldur	q0, [sp, #8]
  84:	mov	w9, #0x1                   	// #1
  88:	strb	w9, [x19, #24]
  8c:	str	x8, [x19, #16]
  90:	str	q0, [x19]
  94:	ldp	x20, x19, [sp, #80]
  98:	ldp	x22, x21, [sp, #64]
  9c:	ldr	x23, [sp, #48]
  a0:	ldp	x29, x30, [sp, #32]
  a4:	add	sp, sp, #0x60
  a8:	ret
  ac:	adrp	x0, 0 <_ZNK4llvm8CallBase16getOperandBundleEj>
  b0:	adrp	x1, 0 <_ZNK4llvm8CallBase16getOperandBundleEj>
  b4:	adrp	x3, 0 <_ZNK4llvm8CallBase16getOperandBundleEj>
  b8:	add	x0, x0, #0x0
  bc:	add	x1, x1, #0x0
  c0:	add	x3, x3, #0x0
  c4:	mov	w2, #0x745                 	// #1861
  c8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE16CreateCleanupRetEPNS_14CleanupPadInstEPNS_10BasicBlockE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE16CreateCleanupRetEPNS_14CleanupPadInstEPNS_10BasicBlockE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x20, x19, [sp, #48]
   c:	add	x29, sp, #0x20
  10:	mov	x19, x0
  14:	mov	x0, x1
  18:	mov	x1, x2
  1c:	mov	x2, xzr
  20:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE16CreateCleanupRetEPNS_14CleanupPadInstEPNS_10BasicBlockE>
  24:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE16CreateCleanupRetEPNS_14CleanupPadInstEPNS_10BasicBlockE>
  28:	mov	x20, x0
  2c:	add	x1, x1, #0x0
  30:	add	x0, sp, #0x8
  34:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE16CreateCleanupRetEPNS_14CleanupPadInstEPNS_10BasicBlockE>
  38:	ldp	x3, x4, [x19, #8]
  3c:	add	x2, sp, #0x8
  40:	mov	x0, x19
  44:	mov	x1, x20
  48:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE16CreateCleanupRetEPNS_14CleanupPadInstEPNS_10BasicBlockE>
  4c:	mov	x0, x19
  50:	mov	x1, x20
  54:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE16CreateCleanupRetEPNS_14CleanupPadInstEPNS_10BasicBlockE>
  58:	mov	x0, x20
  5c:	ldp	x20, x19, [sp, #48]
  60:	ldp	x29, x30, [sp, #32]
  64:	add	sp, sp, #0x40
  68:	ret

Disassembly of section .text._ZNK4llvm8CallBase25countOperandBundlesOfTypeEj:

0000000000000000 <_ZNK4llvm8CallBase25countOperandBundlesOfTypeEj>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	str	x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	mov	w19, w1
  1c:	mov	x20, x0
  20:	bl	0 <_ZNK4llvm8CallBase25countOperandBundlesOfTypeEj>
  24:	cbz	w0, 64 <_ZNK4llvm8CallBase25countOperandBundlesOfTypeEj+0x64>
  28:	mov	w21, w0
  2c:	mov	w22, wzr
  30:	mov	w23, wzr
  34:	add	x8, sp, #0x8
  38:	mov	x0, x20
  3c:	mov	w1, w23
  40:	bl	0 <_ZNK4llvm8CallBase25countOperandBundlesOfTypeEj>
  44:	ldr	x8, [sp, #24]
  48:	add	w23, w23, #0x1
  4c:	ldr	w8, [x8, #8]
  50:	cmp	w8, w19
  54:	cinc	w22, w22, eq  // eq = none
  58:	cmp	w21, w23
  5c:	b.ne	34 <_ZNK4llvm8CallBase25countOperandBundlesOfTypeEj+0x34>  // b.any
  60:	b	68 <_ZNK4llvm8CallBase25countOperandBundlesOfTypeEj+0x68>
  64:	mov	w22, wzr
  68:	mov	w0, w22
  6c:	ldp	x20, x19, [sp, #80]
  70:	ldp	x22, x21, [sp, #64]
  74:	ldr	x23, [sp, #48]
  78:	ldp	x29, x30, [sp, #32]
  7c:	add	sp, sp, #0x60
  80:	ret

Disassembly of section .text._ZNK4llvm8CallBase18getOperandBundleAtEj:

0000000000000000 <_ZNK4llvm8CallBase18getOperandBundleAtEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	w21, w1
  14:	mov	x20, x0
  18:	mov	x19, x8
  1c:	bl	0 <_ZNK4llvm8CallBase18getOperandBundleAtEj>
  20:	cmp	w0, w21
  24:	b.ls	70 <_ZNK4llvm8CallBase18getOperandBundleAtEj+0x70>  // b.plast
  28:	mov	x0, x20
  2c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  30:	ldr	w9, [x20, #20]
  34:	add	x8, x0, w21, uxtw #4
  38:	ldp	w11, w12, [x8, #8]
  3c:	mov	w10, #0x18                  	// #24
  40:	ldr	x8, [x8]
  44:	and	x9, x9, #0xfffffff
  48:	mneg	x9, x9, x10
  4c:	add	x9, x20, x9
  50:	sub	x12, x12, x11
  54:	madd	x9, x11, x10, x9
  58:	stp	x9, x12, [x19]
  5c:	str	x8, [x19, #16]
  60:	ldp	x20, x19, [sp, #32]
  64:	ldr	x21, [sp, #16]
  68:	ldp	x29, x30, [sp], #48
  6c:	ret
  70:	adrp	x0, 0 <_ZNK4llvm8CallBase18getOperandBundleAtEj>
  74:	adrp	x1, 0 <_ZNK4llvm8CallBase18getOperandBundleAtEj>
  78:	adrp	x3, 0 <_ZNK4llvm8CallBase18getOperandBundleAtEj>
  7c:	add	x0, x0, #0x0
  80:	add	x1, x1, #0x0
  84:	add	x3, x3, #0x0
  88:	mov	w2, #0x716                 	// #1814
  8c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17CleanupReturnInst6CreateEPNS_5ValueEPNS_10BasicBlockEPNS_11InstructionE:

0000000000000000 <_ZN4llvm17CleanupReturnInst6CreateEPNS_5ValueEPNS_10BasicBlockEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	cbz	x0, 6c <_ZN4llvm17CleanupReturnInst6CreateEPNS_5ValueEPNS_10BasicBlockEPNS_11InstructionE+0x6c>
  18:	cmp	x1, #0x0
  1c:	mov	w8, #0x1                   	// #1
  20:	cinc	w22, w8, ne  // ne = any
  24:	mov	x20, x1
  28:	mov	x21, x0
  2c:	mov	w0, #0x38                  	// #56
  30:	mov	w1, w22
  34:	mov	x19, x2
  38:	bl	0 <_ZN4llvm4UsernwEmj>
  3c:	mov	x1, x21
  40:	mov	x2, x20
  44:	mov	w3, w22
  48:	mov	x4, x19
  4c:	mov	x23, x0
  50:	bl	0 <_ZN4llvm17CleanupReturnInstC1EPNS_5ValueEPNS_10BasicBlockEjPNS_11InstructionE>
  54:	mov	x0, x23
  58:	ldp	x20, x19, [sp, #48]
  5c:	ldp	x22, x21, [sp, #32]
  60:	ldr	x23, [sp, #16]
  64:	ldp	x29, x30, [sp], #64
  68:	ret
  6c:	adrp	x0, 0 <_ZN4llvm17CleanupReturnInst6CreateEPNS_5ValueEPNS_10BasicBlockEPNS_11InstructionE>
  70:	adrp	x1, 0 <_ZN4llvm17CleanupReturnInst6CreateEPNS_5ValueEPNS_10BasicBlockEPNS_11InstructionE>
  74:	adrp	x3, 0 <_ZN4llvm17CleanupReturnInst6CreateEPNS_5ValueEPNS_10BasicBlockEPNS_11InstructionE>
  78:	add	x0, x0, #0x0
  7c:	add	x1, x1, #0x0
  80:	add	x3, x3, #0x0
  84:	mov	w2, #0x11ec                	// #4588
  88:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE13CreateRetVoidEv:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE13CreateRetVoidEv>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #32]
   8:	str	x21, [sp, #48]
   c:	stp	x20, x19, [sp, #64]
  10:	add	x29, sp, #0x20
  14:	ldr	x20, [x0, #24]
  18:	mov	x19, x0
  1c:	mov	w0, #0x38                  	// #56
  20:	mov	w1, wzr
  24:	bl	0 <_ZN4llvm4UsernwEmj>
  28:	mov	x1, x20
  2c:	mov	x2, xzr
  30:	mov	x3, xzr
  34:	mov	x21, x0
  38:	bl	0 <_ZN4llvm10ReturnInstC1ERNS_11LLVMContextEPNS_5ValueEPNS_11InstructionE>
  3c:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE13CreateRetVoidEv>
  40:	add	x1, x1, #0x0
  44:	add	x0, sp, #0x8
  48:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE13CreateRetVoidEv>
  4c:	ldp	x3, x4, [x19, #8]
  50:	add	x2, sp, #0x8
  54:	mov	x0, x19
  58:	mov	x1, x21
  5c:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE13CreateRetVoidEv>
  60:	mov	x0, x19
  64:	mov	x1, x21
  68:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE13CreateRetVoidEv>
  6c:	mov	x0, x21
  70:	ldp	x20, x19, [sp, #64]
  74:	ldr	x21, [sp, #48]
  78:	ldp	x29, x30, [sp, #32]
  7c:	add	sp, sp, #0x50
  80:	ret

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreateRetEPNS_5ValueE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreateRetEPNS_5ValueE>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x22, x21, [sp, #48]
   c:	stp	x20, x19, [sp, #64]
  10:	add	x29, sp, #0x20
  14:	ldr	x20, [x0, #24]
  18:	cmp	x1, #0x0
  1c:	mov	x19, x0
  20:	mov	x21, x1
  24:	cset	w1, ne  // ne = any
  28:	mov	w0, #0x38                  	// #56
  2c:	bl	0 <_ZN4llvm4UsernwEmj>
  30:	mov	x1, x20
  34:	mov	x2, x21
  38:	mov	x3, xzr
  3c:	mov	x22, x0
  40:	bl	0 <_ZN4llvm10ReturnInstC1ERNS_11LLVMContextEPNS_5ValueEPNS_11InstructionE>
  44:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreateRetEPNS_5ValueE>
  48:	add	x1, x1, #0x0
  4c:	add	x0, sp, #0x8
  50:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreateRetEPNS_5ValueE>
  54:	ldp	x3, x4, [x19, #8]
  58:	add	x2, sp, #0x8
  5c:	mov	x0, x19
  60:	mov	x1, x22
  64:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreateRetEPNS_5ValueE>
  68:	mov	x0, x19
  6c:	mov	x1, x22
  70:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreateRetEPNS_5ValueE>
  74:	mov	x0, x22
  78:	ldp	x20, x19, [sp, #64]
  7c:	ldp	x22, x21, [sp, #48]
  80:	ldp	x29, x30, [sp, #32]
  84:	add	sp, sp, #0x50
  88:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_13TrackingMDRefENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S5_EEEES4_S5_S7_SA_E10destroyAllEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_13TrackingMDRefENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S5_EEEES4_S5_S7_SA_E10destroyAllEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #24]
  10:	cbz	w8, 4c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_13TrackingMDRefENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S5_EEEES4_S5_S7_SA_E10destroyAllEv+0x4c>
  14:	ldr	x9, [x0, #8]
  18:	lsl	x20, x8, #4
  1c:	add	x19, x9, #0x8
  20:	ldur	x8, [x19, #-8]
  24:	orr	x8, x8, #0x4
  28:	cmn	x8, #0x4
  2c:	b.eq	40 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_13TrackingMDRefENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S5_EEEES4_S5_S7_SA_E10destroyAllEv+0x40>  // b.none
  30:	ldr	x1, [x19]
  34:	cbz	x1, 40 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_13TrackingMDRefENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S5_EEEES4_S5_S7_SA_E10destroyAllEv+0x40>
  38:	mov	x0, x19
  3c:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  40:	subs	x20, x20, #0x10
  44:	add	x19, x19, #0x10
  48:	b.ne	20 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_13TrackingMDRefENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S5_EEEES4_S5_S7_SA_E10destroyAllEv+0x20>  // b.any
  4c:	ldp	x20, x19, [sp, #16]
  50:	ldp	x29, x30, [sp], #32
  54:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E10destroyAllEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E10destroyAllEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #24]
  14:	cbz	w8, 94 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E10destroyAllEv+0x94>
  18:	ldr	x9, [x0, #8]
  1c:	mov	w22, #0x101                 	// #257
  20:	lsl	x20, x8, #6
  24:	mov	w21, #0x1                   	// #1
  28:	add	x19, x9, #0x28
  2c:	movk	w22, #0x1, lsl #16
  30:	ldur	x8, [x19, #-16]
  34:	orr	x9, x8, #0x8
  38:	cmn	x9, #0x8
  3c:	b.eq	68 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E10destroyAllEv+0x68>  // b.none
  40:	ldr	x9, [x19, #16]
  44:	add	x9, x9, #0x10
  48:	cmp	x9, #0x10
  4c:	b.hi	5c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E10destroyAllEv+0x5c>  // b.pmore
  50:	lsl	x9, x21, x9
  54:	tst	x9, x22
  58:	b.ne	68 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E10destroyAllEv+0x68>  // b.any
  5c:	mov	x0, x19
  60:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
  64:	ldur	x8, [x19, #-16]
  68:	add	x8, x8, #0x10
  6c:	cmp	x8, #0x10
  70:	b.hi	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E10destroyAllEv+0x80>  // b.pmore
  74:	lsl	x8, x21, x8
  78:	tst	x8, x22
  7c:	b.ne	88 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E10destroyAllEv+0x88>  // b.any
  80:	sub	x0, x19, #0x20
  84:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
  88:	subs	x20, x20, #0x40
  8c:	add	x19, x19, #0x40
  90:	b.ne	30 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E10destroyAllEv+0x30>  // b.any
  94:	ldp	x20, x19, [sp, #32]
  98:	ldp	x22, x21, [sp, #16]
  9c:	ldp	x29, x30, [sp], #48
  a0:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIPNS_8CallInstELb1EE9push_backERKS2_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIPNS_8CallInstELb1EE9push_backERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseIPNS_8CallInstELb1EE9push_backERKS2_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	x10, [x20]
  28:	str	x10, [x9, w8, uxtw #3]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseIPNS_8CallInstELb1EE9push_backERKS2_+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x8                   	// #8
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseIPNS_8CallInstELb1EE9push_backERKS2_+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_8CallInstELb1EE9push_backERKS2_>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_8CallInstELb1EE9push_backERKS2_>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_8CallInstELb1EE9push_backERKS2_>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8CallInst15setTailCallKindENS0_12TailCallKindE:

0000000000000000 <_ZN4llvm8CallInst15setTailCallKindENS0_12TailCallKindE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrh	w8, [x0, #18]
   c:	and	w9, w8, #0x7ffc
  10:	orr	w9, w9, w1
  14:	sxth	w9, w9
  18:	tbnz	w9, #31, 30 <_ZN4llvm8CallInst15setTailCallKindENS0_12TailCallKindE+0x30>
  1c:	and	w8, w8, #0x8000
  20:	orr	w8, w8, w9
  24:	strh	w8, [x0, #18]
  28:	ldp	x29, x30, [sp], #16
  2c:	ret
  30:	adrp	x0, 0 <_ZN4llvm8CallInst15setTailCallKindENS0_12TailCallKindE>
  34:	adrp	x1, 0 <_ZN4llvm8CallInst15setTailCallKindENS0_12TailCallKindE>
  38:	adrp	x3, 0 <_ZN4llvm8CallInst15setTailCallKindENS0_12TailCallKindE>
  3c:	add	x0, x0, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0x2fd                 	// #765
  4c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_:

0000000000000000 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	add	x8, x1, #0x48
  10:	str	x8, [x0]
  14:	ldr	x9, [x1, #80]
  18:	mov	x20, x0
  1c:	str	x9, [x20, #8]!
  20:	cmp	x9, x8
  24:	str	xzr, [x20, #8]
  28:	b.eq	6c <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x6c>  // b.none
  2c:	mov	x19, x0
  30:	mov	x0, x20
  34:	bl	0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  38:	ldr	x8, [x0, #48]
  3c:	mov	x0, x20
  40:	str	x8, [x19, #16]
  44:	bl	0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  48:	ldr	x8, [x19, #16]
  4c:	add	x9, x0, #0x28
  50:	cmp	x8, x9
  54:	b.ne	6c <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x6c>  // b.any
  58:	ldp	x9, x8, [x19]
  5c:	ldr	x8, [x8, #8]
  60:	cmp	x9, x8
  64:	str	x8, [x19, #8]
  68:	b.ne	30 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x30>  // b.any
  6c:	ldp	x20, x19, [sp, #16]
  70:	ldp	x29, x30, [sp], #32
  74:	ret

Disassembly of section .text._ZNK4llvm7PHINode18getBasicBlockIndexEPKNS_10BasicBlockE:

0000000000000000 <_ZNK4llvm7PHINode18getBasicBlockIndexEPKNS_10BasicBlockE>:
   0:	ldr	w9, [x0, #20]
   4:	and	x10, x9, #0xfffffff
   8:	cbz	w10, 54 <_ZNK4llvm7PHINode18getBasicBlockIndexEPKNS_10BasicBlockE+0x54>
   c:	mov	x8, x0
  10:	ldr	w13, [x8, #56]
  14:	mov	w12, #0x18                  	// #24
  18:	mneg	x11, x10, x12
  1c:	orr	x14, xzr, #0x8
  20:	mov	x0, xzr
  24:	add	x11, x8, x11
  28:	madd	x12, x13, x12, x14
  2c:	mov	x13, x11
  30:	tbz	w9, #30, 38 <_ZNK4llvm7PHINode18getBasicBlockIndexEPKNS_10BasicBlockE+0x38>
  34:	ldur	x13, [x8, #-8]
  38:	add	x13, x13, x12
  3c:	ldr	x13, [x13, x0, lsl #3]
  40:	cmp	x13, x1
  44:	b.eq	58 <_ZNK4llvm7PHINode18getBasicBlockIndexEPKNS_10BasicBlockE+0x58>  // b.none
  48:	add	x0, x0, #0x1
  4c:	cmp	w10, w0
  50:	b.ne	2c <_ZNK4llvm7PHINode18getBasicBlockIndexEPKNS_10BasicBlockE+0x2c>  // b.any
  54:	mov	w0, #0xffffffff            	// #-1
  58:	ret

Disassembly of section .text._ZN4llvm10BasicBlock17phi_iterator_implINS_7PHINodeENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEEEppEv:

0000000000000000 <_ZN4llvm10BasicBlock17phi_iterator_implINS_7PHINodeENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEEEppEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	cbz	x8, 40 <_ZN4llvm10BasicBlock17phi_iterator_implINS_7PHINodeENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEEEppEv+0x40>
  10:	ldr	x8, [x8, #32]
  14:	ldrb	w9, [x8]
  18:	tbnz	w9, #2, 60 <_ZN4llvm10BasicBlock17phi_iterator_implINS_7PHINodeENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEEEppEv+0x60>
  1c:	sub	x9, x8, #0x18
  20:	cmp	x8, #0x0
  24:	csel	x8, xzr, x9, eq  // eq = none
  28:	ldrb	w9, [x8, #16]
  2c:	cmp	w9, #0x4f
  30:	csel	x8, x8, xzr, eq  // eq = none
  34:	str	x8, [x0]
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZN4llvm10BasicBlock17phi_iterator_implINS_7PHINodeENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEEEppEv>
  44:	adrp	x1, 0 <_ZN4llvm10BasicBlock17phi_iterator_implINS_7PHINodeENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEEEppEv>
  48:	adrp	x3, 0 <_ZN4llvm10BasicBlock17phi_iterator_implINS_7PHINodeENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEEEppEv>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x13d                 	// #317
  5c:	bl	0 <__assert_fail>
  60:	adrp	x0, 0 <_ZN4llvm10BasicBlock17phi_iterator_implINS_7PHINodeENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEEEppEv>
  64:	adrp	x1, 0 <_ZN4llvm10BasicBlock17phi_iterator_implINS_7PHINodeENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEEEppEv>
  68:	adrp	x3, 0 <_ZN4llvm10BasicBlock17phi_iterator_implINS_7PHINodeENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEEEppEv>
  6c:	add	x0, x0, #0x0
  70:	add	x1, x1, #0x0
  74:	add	x3, x3, #0x0
  78:	mov	w2, #0x8b                  	// #139
  7c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10SwitchInst12getConditionEv:

0000000000000000 <_ZNK4llvm10SwitchInst12getConditionEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #20]
   c:	and	x8, x9, #0xfffffff
  10:	cbz	w8, 38 <_ZNK4llvm10SwitchInst12getConditionEv+0x38>
  14:	tbnz	w9, #30, 28 <_ZNK4llvm10SwitchInst12getConditionEv+0x28>
  18:	mov	w9, #0x18                  	// #24
  1c:	mneg	x8, x8, x9
  20:	add	x8, x0, x8
  24:	b	2c <_ZNK4llvm10SwitchInst12getConditionEv+0x2c>
  28:	ldur	x8, [x0, #-8]
  2c:	ldr	x0, [x8]
  30:	ldp	x29, x30, [sp], #16
  34:	ret
  38:	adrp	x0, 0 <_ZNK4llvm10SwitchInst12getConditionEv>
  3c:	adrp	x1, 0 <_ZNK4llvm10SwitchInst12getConditionEv>
  40:	adrp	x3, 0 <_ZNK4llvm10SwitchInst12getConditionEv>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0xdbe                 	// #3518
  54:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm16DenseMapIteratorIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EELb0EEneERKNS0_IS2_S2_S4_S7_Lb1EEE:

0000000000000000 <_ZNK4llvm16DenseMapIteratorIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EELb0EEneERKNS0_IS2_S2_S4_S7_Lb1EEE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #16]
   c:	cbz	x8, 20 <_ZNK4llvm16DenseMapIteratorIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EELb0EEneERKNS0_IS2_S2_S4_S7_Lb1EEE+0x20>
  10:	ldp	x9, x10, [x0]
  14:	ldr	x9, [x9]
  18:	cmp	x9, x10
  1c:	b.ne	98 <_ZNK4llvm16DenseMapIteratorIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EELb0EEneERKNS0_IS2_S2_S4_S7_Lb1EEE+0x98>  // b.any
  20:	ldr	x9, [x1, #16]
  24:	cbz	x9, 58 <_ZNK4llvm16DenseMapIteratorIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EELb0EEneERKNS0_IS2_S2_S4_S7_Lb1EEE+0x58>
  28:	ldp	x10, x11, [x1]
  2c:	ldr	x12, [x10]
  30:	cmp	x12, x11
  34:	b.eq	5c <_ZNK4llvm16DenseMapIteratorIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EELb0EEneERKNS0_IS2_S2_S4_S7_Lb1EEE+0x5c>  // b.none
  38:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EELb0EEneERKNS0_IS2_S2_S4_S7_Lb1EEE>
  3c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EELb0EEneERKNS0_IS2_S2_S4_S7_Lb1EEE>
  40:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EELb0EEneERKNS0_IS2_S2_S4_S7_Lb1EEE>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x4c8                 	// #1224
  54:	bl	0 <__assert_fail>
  58:	ldr	x10, [x1]
  5c:	ldr	x11, [x0]
  60:	cmp	x11, x10
  64:	b.ne	78 <_ZNK4llvm16DenseMapIteratorIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EELb0EEneERKNS0_IS2_S2_S4_S7_Lb1EEE+0x78>  // b.any
  68:	cmp	x8, x9
  6c:	cset	w0, ne  // ne = any
  70:	ldp	x29, x30, [sp], #16
  74:	ret
  78:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EELb0EEneERKNS0_IS2_S2_S4_S7_Lb1EEE>
  7c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EELb0EEneERKNS0_IS2_S2_S4_S7_Lb1EEE>
  80:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EELb0EEneERKNS0_IS2_S2_S4_S7_Lb1EEE>
  84:	add	x0, x0, #0x0
  88:	add	x1, x1, #0x0
  8c:	add	x3, x3, #0x0
  90:	mov	w2, #0x4ca                 	// #1226
  94:	bl	0 <__assert_fail>
  98:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EELb0EEneERKNS0_IS2_S2_S4_S7_Lb1EEE>
  9c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EELb0EEneERKNS0_IS2_S2_S4_S7_Lb1EEE>
  a0:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EELb0EEneERKNS0_IS2_S2_S4_S7_Lb1EEE>
  a4:	add	x0, x0, #0x0
  a8:	add	x1, x1, #0x0
  ac:	add	x3, x3, #0x0
  b0:	mov	w2, #0x4c7                 	// #1223
  b4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm10SwitchInst13findCaseValueEPKNS_11ConstantIntE:

0000000000000000 <_ZN4llvm10SwitchInst13findCaseValueEPKNS_11ConstantIntE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #20]
  10:	mov	x4, x1
  14:	mov	x1, xzr
  18:	mov	x2, x0
  1c:	ubfx	w8, w8, #1, #27
  20:	sub	w3, w8, #0x1
  24:	mov	x19, x0
  28:	bl	0 <_ZN4llvm10SwitchInst13findCaseValueEPKNS_11ConstantIntE>
  2c:	cmp	x0, x19
  30:	b.ne	5c <_ZN4llvm10SwitchInst13findCaseValueEPKNS_11ConstantIntE+0x5c>  // b.any
  34:	ldr	w8, [x19, #20]
  38:	mov	w9, #0xfffffffe            	// #-2
  3c:	ubfx	w8, w8, #1, #27
  40:	sub	w8, w8, #0x1
  44:	cmp	x1, x8
  48:	csel	x0, x0, x19, ne  // ne = any
  4c:	ldr	x19, [sp, #16]
  50:	csel	x1, x1, x9, ne  // ne = any
  54:	ldp	x29, x30, [sp], #32
  58:	ret
  5c:	adrp	x0, 0 <_ZN4llvm10SwitchInst13findCaseValueEPKNS_11ConstantIntE>
  60:	adrp	x1, 0 <_ZN4llvm10SwitchInst13findCaseValueEPKNS_11ConstantIntE>
  64:	adrp	x3, 0 <_ZN4llvm10SwitchInst13findCaseValueEPKNS_11ConstantIntE>
  68:	add	x0, x0, #0x0
  6c:	add	x1, x1, #0x0
  70:	add	x3, x3, #0x0
  74:	mov	w2, #0xc91                 	// #3217
  78:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4initEj:

0000000000000000 <_ZN4llvm8DenseMapIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4initEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm8DenseMapIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4initEj>
  14:	str	w0, [x19, #24]
  18:	cbz	w0, 3c <_ZN4llvm8DenseMapIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4initEj+0x3c>
  1c:	mov	w8, w0
  20:	lsl	x0, x8, #4
  24:	bl	0 <_Znwm>
  28:	str	x0, [x19, #8]
  2c:	mov	x0, x19
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZN4llvm8DenseMapIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4initEj>
  3c:	stp	xzr, xzr, [x19, #8]
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E31getMinBucketToReserveForEntriesEj:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E31getMinBucketToReserveForEntriesEj>:
   0:	cbz	w1, 40 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E31getMinBucketToReserveForEntriesEj+0x40>
   4:	mov	w9, #0xaaab                	// #43691
   8:	lsl	w8, w1, #2
   c:	movk	w9, #0xaaaa, lsl #16
  10:	umull	x8, w8, w9
  14:	lsr	x8, x8, #33
  18:	add	w8, w8, #0x1
  1c:	orr	x8, x8, x8, lsr #1
  20:	orr	x8, x8, x8, lsr #2
  24:	orr	x8, x8, x8, lsr #4
  28:	orr	x8, x8, x8, lsr #8
  2c:	orr	x8, x8, x8, lsr #16
  30:	lsr	x9, x8, #32
  34:	orr	w8, w9, w8
  38:	add	w0, w8, #0x1
  3c:	ret
  40:	mov	w0, wzr
  44:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E9initEmptyEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E9initEmptyEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w8, w9, #0x1
  14:	tst	w9, w8
  18:	b.ne	40 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E9initEmptyEv+0x40>  // b.any
  1c:	cbz	w9, 38 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E9initEmptyEv+0x38>
  20:	ldr	x8, [x0, #8]
  24:	lsl	x9, x9, #4
  28:	mov	x10, #0xfffffffffffffff8    	// #-8
  2c:	subs	x9, x9, #0x10
  30:	str	x10, [x8], #16
  34:	b.ne	2c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E9initEmptyEv+0x2c>  // b.any
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E9initEmptyEv>
  44:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E9initEmptyEv>
  48:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E9initEmptyEv>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x15c                 	// #348
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm7PHINode24getIncomingValueForBlockEPKNS_10BasicBlockE:

0000000000000000 <_ZNK4llvm7PHINode24getIncomingValueForBlockEPKNS_10BasicBlockE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZNK4llvm7PHINode24getIncomingValueForBlockEPKNS_10BasicBlockE>
  14:	tbnz	w0, #31, 2c <_ZNK4llvm7PHINode24getIncomingValueForBlockEPKNS_10BasicBlockE+0x2c>
  18:	mov	w1, w0
  1c:	mov	x0, x19
  20:	ldr	x19, [sp, #16]
  24:	ldp	x29, x30, [sp], #32
  28:	b	0 <_ZNK4llvm7PHINode24getIncomingValueForBlockEPKNS_10BasicBlockE>
  2c:	adrp	x0, 0 <_ZNK4llvm7PHINode24getIncomingValueForBlockEPKNS_10BasicBlockE>
  30:	adrp	x1, 0 <_ZNK4llvm7PHINode24getIncomingValueForBlockEPKNS_10BasicBlockE>
  34:	adrp	x3, 0 <_ZNK4llvm7PHINode24getIncomingValueForBlockEPKNS_10BasicBlockE>
  38:	add	x0, x0, #0x0
  3c:	add	x1, x1, #0x0
  40:	add	x3, x3, #0x0
  44:	mov	w2, #0xab5                 	// #2741
  48:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm7PHINode16getIncomingValueEj:

0000000000000000 <_ZNK4llvm7PHINode16getIncomingValueEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #20]
   c:	and	x8, x9, #0xfffffff
  10:	cmp	w8, w1
  14:	b.ls	44 <_ZNK4llvm7PHINode16getIncomingValueEj+0x44>  // b.plast
  18:	tbnz	w9, #30, 2c <_ZNK4llvm7PHINode16getIncomingValueEj+0x2c>
  1c:	mov	w9, #0x18                  	// #24
  20:	mneg	x8, x8, x9
  24:	add	x8, x0, x8
  28:	b	30 <_ZNK4llvm7PHINode16getIncomingValueEj+0x30>
  2c:	ldur	x8, [x0, #-8]
  30:	mov	w9, #0x18                  	// #24
  34:	umull	x9, w1, w9
  38:	ldr	x0, [x8, x9]
  3c:	ldp	x29, x30, [sp], #16
  40:	ret
  44:	adrp	x0, 0 <_ZNK4llvm7PHINode16getIncomingValueEj>
  48:	adrp	x1, 0 <_ZNK4llvm7PHINode16getIncomingValueEj>
  4c:	adrp	x3, 0 <_ZNK4llvm7PHINode16getIncomingValueEj>
  50:	add	x0, x0, #0x0
  54:	add	x1, x1, #0x0
  58:	add	x3, x3, #0x0
  5c:	mov	w2, #0xadf                 	// #2783
  60:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E16FindAndConstructEOS3_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E16FindAndConstructEOS3_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	add	x2, sp, #0x8
  14:	mov	x19, x1
  18:	mov	x20, x0
  1c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E16FindAndConstructEOS3_>
  20:	ldr	x3, [sp, #8]
  24:	tbnz	w0, #0, 44 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E16FindAndConstructEOS3_+0x44>
  28:	mov	x0, x20
  2c:	mov	x1, x19
  30:	mov	x2, x19
  34:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E16FindAndConstructEOS3_>
  38:	ldr	x8, [x19]
  3c:	mov	x3, x0
  40:	stp	x8, xzr, [x0]
  44:	ldp	x20, x19, [sp, #32]
  48:	ldp	x29, x30, [sp, #16]
  4c:	mov	x0, x3
  50:	add	sp, sp, #0x30
  54:	ret

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	cbz	w8, 4c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x4c>
  10:	ldr	x9, [x1]
  14:	orr	x10, x9, #0x8
  18:	cmn	x10, #0x8
  1c:	b.eq	b0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0xb0>  // b.none
  20:	ldr	x10, [x0, #8]
  24:	ubfx	x11, x9, #4, #28
  28:	eor	w12, w11, w9, lsr #9
  2c:	sub	w11, w8, #0x1
  30:	and	w12, w12, w11
  34:	add	x8, x10, w12, uxtw #4
  38:	ldr	x14, [x8]
  3c:	cmp	x14, x9
  40:	b.ne	60 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x60>  // b.any
  44:	mov	w0, #0x1                   	// #1
  48:	b	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x54>
  4c:	mov	x8, xzr
  50:	mov	w0, wzr
  54:	str	x8, [x2]
  58:	ldp	x29, x30, [sp], #16
  5c:	ret
  60:	mov	x13, xzr
  64:	mov	w15, #0x1                   	// #1
  68:	mov	w0, #0x1                   	// #1
  6c:	cmn	x14, #0x8
  70:	b.eq	a0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0xa0>  // b.none
  74:	cmn	x14, #0x10
  78:	add	w12, w12, w15
  7c:	ccmp	x13, #0x0, #0x0, eq  // eq = none
  80:	and	w12, w12, w11
  84:	csel	x13, x13, x8, ne  // ne = any
  88:	add	x8, x10, w12, uxtw #4
  8c:	ldr	x14, [x8]
  90:	add	w15, w15, #0x1
  94:	cmp	x14, x9
  98:	b.eq	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x54>  // b.none
  9c:	b	6c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x6c>
  a0:	cmp	x13, #0x0
  a4:	mov	w0, wzr
  a8:	csel	x8, x8, x13, eq  // eq = none
  ac:	b	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x54>
  b0:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_>
  b4:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_>
  b8:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x252                 	// #594
  cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	ldr	w8, [x0, #16]
  14:	ldr	w1, [x0, #24]
  18:	ldr	x9, [x0]
  1c:	mov	x20, x2
  20:	lsl	w10, w8, #2
  24:	add	w10, w10, #0x4
  28:	add	w11, w1, w1, lsl #1
  2c:	mov	x19, x0
  30:	add	x9, x9, #0x1
  34:	cmp	w10, w11
  38:	str	x9, [x0]
  3c:	b.cs	94 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x94>  // b.hs, b.nlast
  40:	ldr	w9, [x19, #20]
  44:	mvn	w8, w8
  48:	add	w8, w1, w8
  4c:	sub	w8, w8, w9
  50:	cmp	w8, w1, lsr #3
  54:	b.ls	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x98>  // b.plast
  58:	cbz	x3, b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0xb8>
  5c:	ldr	w8, [x19, #16]
  60:	add	w8, w8, #0x1
  64:	str	w8, [x19, #16]
  68:	ldr	x8, [x3]
  6c:	cmn	x8, #0x8
  70:	b.eq	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x80>  // b.none
  74:	ldr	w8, [x19, #20]
  78:	sub	w8, w8, #0x1
  7c:	str	w8, [x19, #20]
  80:	ldp	x20, x19, [sp, #32]
  84:	ldp	x29, x30, [sp, #16]
  88:	mov	x0, x3
  8c:	add	sp, sp, #0x30
  90:	ret
  94:	lsl	w1, w1, #1
  98:	mov	x0, x19
  9c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  a0:	add	x2, sp, #0x8
  a4:	mov	x0, x19
  a8:	mov	x1, x20
  ac:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  b0:	ldr	x3, [sp, #8]
  b4:	cbnz	x3, 5c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x5c>
  b8:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  bc:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  c0:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  c4:	add	x0, x0, #0x0
  c8:	add	x1, x1, #0x0
  cc:	add	x3, x3, #0x0
  d0:	mov	w2, #0x22f                 	// #559
  d4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x19, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x20, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x20, #8]
  5c:	cbz	x19, 84 <_ZN4llvm8DenseMapIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0x84>
  60:	add	x2, x19, x21, lsl #4
  64:	mov	x0, x20
  68:	mov	x1, x19
  6c:	bl	0 <_ZN4llvm8DenseMapIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj>
  70:	mov	x0, x19
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	mov	x0, x20
  88:	ldp	x20, x19, [sp, #32]
  8c:	ldr	x21, [sp, #16]
  90:	ldp	x29, x30, [sp], #48
  94:	b	0 <_ZN4llvm8DenseMapIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x2
  14:	mov	x20, x1
  18:	mov	x21, x0
  1c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
  20:	cmp	x20, x19
  24:	b.eq	78 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x78>  // b.none
  28:	ldr	x8, [x20]
  2c:	orr	x8, x8, #0x8
  30:	cmn	x8, #0x8
  34:	b.eq	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x6c>  // b.none
  38:	add	x2, x29, #0x18
  3c:	mov	x0, x21
  40:	mov	x1, x20
  44:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
  48:	tbnz	w0, #0, 88 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x88>
  4c:	ldr	x8, [x29, #24]
  50:	ldr	x9, [x20]
  54:	str	x9, [x8]
  58:	ldr	x9, [x20, #8]
  5c:	str	x9, [x8, #8]
  60:	ldr	w8, [x21, #16]
  64:	add	w8, w8, #0x1
  68:	str	w8, [x21, #16]
  6c:	add	x20, x20, #0x10
  70:	cmp	x19, x20
  74:	b.ne	28 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x28>  // b.any
  78:	ldp	x20, x19, [sp, #32]
  7c:	ldr	x21, [sp, #16]
  80:	ldp	x29, x30, [sp], #48
  84:	ret
  88:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
  8c:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
  90:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
  94:	add	x0, x0, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x3, x3, #0x0
  a0:	mov	w2, #0x17a                 	// #378
  a4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIPKS2_EEbRKT_RPKS8_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIPKS2_EEbRKT_RPKS8_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	cbz	w8, 4c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIPKS2_EEbRKT_RPKS8_+0x4c>
  10:	ldr	x9, [x1]
  14:	orr	x10, x9, #0x8
  18:	cmn	x10, #0x8
  1c:	b.eq	b0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIPKS2_EEbRKT_RPKS8_+0xb0>  // b.none
  20:	ldr	x10, [x0, #8]
  24:	ubfx	x11, x9, #4, #28
  28:	eor	w12, w11, w9, lsr #9
  2c:	sub	w11, w8, #0x1
  30:	and	w12, w12, w11
  34:	add	x8, x10, w12, uxtw #4
  38:	ldr	x14, [x8]
  3c:	cmp	x14, x9
  40:	b.ne	60 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIPKS2_EEbRKT_RPKS8_+0x60>  // b.any
  44:	mov	w0, #0x1                   	// #1
  48:	b	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIPKS2_EEbRKT_RPKS8_+0x54>
  4c:	mov	x8, xzr
  50:	mov	w0, wzr
  54:	str	x8, [x2]
  58:	ldp	x29, x30, [sp], #16
  5c:	ret
  60:	mov	x13, xzr
  64:	mov	w15, #0x1                   	// #1
  68:	mov	w0, #0x1                   	// #1
  6c:	cmn	x14, #0x8
  70:	b.eq	a0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIPKS2_EEbRKT_RPKS8_+0xa0>  // b.none
  74:	cmn	x14, #0x10
  78:	add	w12, w12, w15
  7c:	ccmp	x13, #0x0, #0x0, eq  // eq = none
  80:	and	w12, w12, w11
  84:	csel	x13, x13, x8, ne  // ne = any
  88:	add	x8, x10, w12, uxtw #4
  8c:	ldr	x14, [x8]
  90:	add	w15, w15, #0x1
  94:	cmp	x14, x9
  98:	b.eq	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIPKS2_EEbRKT_RPKS8_+0x54>  // b.none
  9c:	b	6c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIPKS2_EEbRKT_RPKS8_+0x6c>
  a0:	cmp	x13, #0x0
  a4:	mov	w0, wzr
  a8:	csel	x8, x8, x13, eq  // eq = none
  ac:	b	54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIPKS2_EEbRKT_RPKS8_+0x54>
  b0:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIPKS2_EEbRKT_RPKS8_>
  b4:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIPKS2_EEbRKT_RPKS8_>
  b8:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIPKS2_EEbRKT_RPKS8_>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x252                 	// #594
  cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag:

0000000000000000 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #48]
   8:	stp	x22, x21, [sp, #64]
   c:	stp	x20, x19, [sp, #80]
  10:	add	x29, sp, #0x30
  14:	cmp	x0, x2
  18:	stp	x0, x1, [sp, #16]
  1c:	b.ne	1cc <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x1cc>  // b.any
  20:	sub	x22, x3, x1
  24:	mov	x19, x4
  28:	mov	x20, x3
  2c:	mov	x21, x2
  30:	cmp	x22, #0x4
  34:	b.lt	100 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x100>  // b.tstop
  38:	stp	x0, x1, [x29, #-16]
  3c:	sub	x0, x29, #0x10
  40:	bl	0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>
  44:	cmp	x0, x19
  48:	b.eq	1ac <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x1ac>  // b.none
  4c:	lsr	x8, x22, #2
  50:	add	x22, x8, #0x1
  54:	add	x0, sp, #0x10
  58:	mov	w1, #0x1                   	// #1
  5c:	bl	0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>
  60:	ldp	x8, x9, [sp, #16]
  64:	sub	x0, x29, #0x10
  68:	stp	x8, x9, [x29, #-16]
  6c:	bl	0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>
  70:	cmp	x0, x19
  74:	b.eq	1ac <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x1ac>  // b.none
  78:	add	x0, sp, #0x10
  7c:	mov	w1, #0x1                   	// #1
  80:	bl	0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>
  84:	ldp	x8, x9, [sp, #16]
  88:	sub	x0, x29, #0x10
  8c:	stp	x8, x9, [x29, #-16]
  90:	bl	0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>
  94:	cmp	x0, x19
  98:	b.eq	1ac <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x1ac>  // b.none
  9c:	add	x0, sp, #0x10
  a0:	mov	w1, #0x1                   	// #1
  a4:	bl	0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>
  a8:	ldp	x8, x9, [sp, #16]
  ac:	sub	x0, x29, #0x10
  b0:	stp	x8, x9, [x29, #-16]
  b4:	bl	0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>
  b8:	cmp	x0, x19
  bc:	b.eq	1ac <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x1ac>  // b.none
  c0:	add	x0, sp, #0x10
  c4:	mov	w1, #0x1                   	// #1
  c8:	bl	0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>
  cc:	sub	x22, x22, #0x1
  d0:	cmp	x22, #0x2
  d4:	b.lt	f4 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0xf4>  // b.tstop
  d8:	ldp	x8, x9, [sp, #16]
  dc:	sub	x0, x29, #0x10
  e0:	stp	x8, x9, [x29, #-16]
  e4:	bl	0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>
  e8:	cmp	x0, x19
  ec:	b.ne	54 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x54>  // b.any
  f0:	b	1ac <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x1ac>
  f4:	ldr	x0, [sp, #16]
  f8:	cmp	x0, x21
  fc:	b.ne	1cc <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x1cc>  // b.any
 100:	ldr	x8, [sp, #24]
 104:	fmov	d0, x21
 108:	mov	v0.d[1], x20
 10c:	sub	x9, x20, x8
 110:	cmp	x9, #0x1
 114:	b.eq	180 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x180>  // b.none
 118:	cmp	x9, #0x2
 11c:	b.eq	154 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x154>  // b.none
 120:	cmp	x9, #0x3
 124:	b.ne	1b0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x1b0>  // b.any
 128:	stp	x0, x8, [x29, #-16]
 12c:	sub	x0, x29, #0x10
 130:	str	q0, [sp]
 134:	bl	0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>
 138:	cmp	x0, x19
 13c:	b.eq	1ac <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x1ac>  // b.none
 140:	add	x0, sp, #0x10
 144:	mov	w1, #0x1                   	// #1
 148:	bl	0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>
 14c:	ldp	x0, x8, [sp, #16]
 150:	b	158 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x158>
 154:	str	q0, [sp]
 158:	stp	x0, x8, [x29, #-16]
 15c:	sub	x0, x29, #0x10
 160:	bl	0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>
 164:	cmp	x0, x19
 168:	b.eq	1ac <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x1ac>  // b.none
 16c:	add	x0, sp, #0x10
 170:	mov	w1, #0x1                   	// #1
 174:	bl	0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>
 178:	ldp	x0, x8, [sp, #16]
 17c:	b	184 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x184>
 180:	str	q0, [sp]
 184:	stp	x0, x8, [x29, #-16]
 188:	sub	x0, x29, #0x10
 18c:	bl	0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>
 190:	cmp	x0, x19
 194:	b.eq	1ac <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x1ac>  // b.none
 198:	add	x0, sp, #0x10
 19c:	mov	w1, #0x1                   	// #1
 1a0:	bl	0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>
 1a4:	ldr	q0, [sp]
 1a8:	b	1b0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x1b0>
 1ac:	ldr	q0, [sp, #16]
 1b0:	ldp	x20, x19, [sp, #80]
 1b4:	ldp	x22, x21, [sp, #64]
 1b8:	ldp	x29, x30, [sp, #48]
 1bc:	mov	x1, v0.d[1]
 1c0:	fmov	x0, d0
 1c4:	add	sp, sp, #0x60
 1c8:	ret
 1cc:	adrp	x0, 0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>
 1d0:	adrp	x1, 0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>
 1d4:	adrp	x3, 0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>
 1d8:	add	x0, x0, #0x0
 1dc:	add	x1, x1, #0x0
 1e0:	add	x3, x3, #0x0
 1e4:	mov	w2, #0xce2                 	// #3298
 1e8:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE12getCaseValueEv:

0000000000000000 <_ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE12getCaseValueEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	ldr	w9, [x0, #8]
  10:	ldr	w10, [x8, #20]
  14:	ubfx	w11, w10, #1, #27
  18:	sub	w11, w11, #0x1
  1c:	cmp	w11, w9
  20:	b.ls	64 <_ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE12getCaseValueEv+0x64>  // b.plast
  24:	lsl	w9, w9, #1
  28:	add	w9, w9, #0x2
  2c:	and	x11, x10, #0xfffffff
  30:	cmp	w11, w9
  34:	b.ls	84 <_ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE12getCaseValueEv+0x84>  // b.plast
  38:	tbnz	w10, #30, 4c <_ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE12getCaseValueEv+0x4c>
  3c:	mov	w10, #0x18                  	// #24
  40:	mneg	x10, x11, x10
  44:	add	x8, x8, x10
  48:	b	50 <_ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE12getCaseValueEv+0x50>
  4c:	ldur	x8, [x8, #-8]
  50:	mov	w10, #0x18                  	// #24
  54:	umull	x9, w9, w10
  58:	ldr	x0, [x8, x9]
  5c:	ldp	x29, x30, [sp], #16
  60:	ret
  64:	adrp	x0, 0 <_ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE12getCaseValueEv>
  68:	adrp	x1, 0 <_ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE12getCaseValueEv>
  6c:	adrp	x3, 0 <_ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE12getCaseValueEv>
  70:	add	x0, x0, #0x0
  74:	add	x1, x1, #0x0
  78:	add	x3, x3, #0x0
  7c:	mov	w2, #0xc79                 	// #3193
  80:	bl	0 <__assert_fail>
  84:	adrp	x0, 0 <_ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE12getCaseValueEv>
  88:	adrp	x1, 0 <_ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE12getCaseValueEv>
  8c:	adrp	x3, 0 <_ZNK4llvm10SwitchInst14CaseHandleImplIS0_NS_11ConstantIntENS_10BasicBlockEE12getCaseValueEv>
  90:	add	x0, x0, #0x0
  94:	add	x1, x1, #0x0
  98:	add	x3, x3, #0x0
  9c:	mov	w2, #0xdbe                 	// #3518
  a0:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm4coro5Shape15getSwitchCoroIdEv:

0000000000000000 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #168]
  10:	cbnz	w8, 40 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv+0x40>
  14:	ldr	x0, [x0]
  18:	bl	0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  1c:	mov	x19, x0
  20:	str	x0, [x29, #24]
  24:	add	x0, x29, #0x18
  28:	bl	0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  2c:	tbz	w0, #0, 60 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv+0x60>
  30:	mov	x0, x19
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret
  40:	adrp	x0, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  44:	adrp	x1, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  48:	adrp	x3, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x86                  	// #134
  5c:	bl	0 <__assert_fail>
  60:	adrp	x0, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  64:	adrp	x1, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  68:	adrp	x3, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  6c:	add	x0, x0, #0x0
  70:	add	x1, x1, #0x0
  74:	add	x3, x3, #0x0
  78:	mov	w2, #0x108                 	// #264
  7c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #32]
   8:	str	x25, [sp, #48]
   c:	stp	x24, x23, [sp, #64]
  10:	stp	x22, x21, [sp, #80]
  14:	stp	x20, x19, [sp, #96]
  18:	add	x29, sp, #0x20
  1c:	cbz	x1, 194 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x194>
  20:	ldrb	w8, [x1, #16]
  24:	mov	x22, x5
  28:	mov	x20, x4
  2c:	mov	x23, x3
  30:	mov	x24, x2
  34:	mov	x25, x1
  38:	mov	x19, x0
  3c:	cmp	w8, #0x10
  40:	b.hi	64 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x64>  // b.pmore
  44:	cbz	x24, 194 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x194>
  48:	ldrb	w8, [x24, #16]
  4c:	cmp	w8, #0x10
  50:	b.hi	64 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x64>  // b.pmore
  54:	cbz	x23, 194 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x194>
  58:	ldrb	w8, [x23, #16]
  5c:	cmp	w8, #0x10
  60:	b.ls	168 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x168>  // b.plast
  64:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE>
  68:	add	x1, x1, #0x0
  6c:	add	x0, sp, #0x8
  70:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE>
  74:	mov	w0, #0x38                  	// #56
  78:	mov	w1, #0x3                   	// #3
  7c:	bl	0 <_ZN4llvm4UsernwEmj>
  80:	add	x4, sp, #0x8
  84:	mov	x1, x25
  88:	mov	x2, x24
  8c:	mov	x3, x23
  90:	mov	x5, xzr
  94:	mov	x21, x0
  98:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE>
  9c:	cbz	x22, 104 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x104>
  a0:	ldr	x8, [x22, #48]
  a4:	cbz	x8, c4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0xc4>
  a8:	mov	w1, #0x2                   	// #2
  ac:	mov	x0, x22
  b0:	bl	0 <_ZNK4llvm11Instruction15getMetadataImplEj>
  b4:	ldr	x8, [x22, #48]
  b8:	mov	x23, x0
  bc:	cbnz	x8, e0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0xe0>
  c0:	b	d0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0xd0>
  c4:	ldrsh	w8, [x22, #18]
  c8:	tbnz	w8, #31, a8 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0xa8>
  cc:	mov	x23, xzr
  d0:	ldrsh	w8, [x22, #18]
  d4:	tbnz	w8, #31, e0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0xe0>
  d8:	mov	x3, xzr
  dc:	b	f0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0xf0>
  e0:	mov	w1, #0xf                   	// #15
  e4:	mov	x0, x22
  e8:	bl	0 <_ZNK4llvm11Instruction15getMetadataImplEj>
  ec:	mov	x3, x0
  f0:	mov	x0, x19
  f4:	mov	x1, x21
  f8:	mov	x2, x23
  fc:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE>
 100:	mov	x21, x0
 104:	add	x0, sp, #0x8
 108:	str	x21, [sp, #8]
 10c:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE>
 110:	tbz	w0, #0, 128 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x128>
 114:	ldr	w3, [x19, #40]
 118:	mov	x0, x19
 11c:	mov	x1, x21
 120:	mov	x2, xzr
 124:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE>
 128:	ldp	x3, x4, [x19, #8]
 12c:	mov	x0, x19
 130:	mov	x1, x21
 134:	mov	x2, x20
 138:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE>
 13c:	mov	x0, x19
 140:	mov	x1, x21
 144:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE>
 148:	mov	x0, x21
 14c:	ldp	x20, x19, [sp, #96]
 150:	ldp	x22, x21, [sp, #80]
 154:	ldp	x24, x23, [sp, #64]
 158:	ldr	x25, [sp, #48]
 15c:	ldp	x29, x30, [sp, #32]
 160:	add	sp, sp, #0x70
 164:	ret
 168:	mov	x0, x25
 16c:	mov	x1, x24
 170:	mov	x2, x23
 174:	ldp	x20, x19, [sp, #96]
 178:	ldp	x22, x21, [sp, #80]
 17c:	ldp	x24, x23, [sp, #64]
 180:	ldr	x25, [sp, #48]
 184:	ldp	x29, x30, [sp, #32]
 188:	mov	x3, xzr
 18c:	add	sp, sp, #0x70
 190:	b	0 <_ZN4llvm12ConstantExpr9getSelectEPNS_8ConstantES2_S2_PNS_4TypeE>
 194:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE>
 198:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE>
 19c:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE>
 1a0:	add	x0, x0, #0x0
 1a4:	add	x1, x1, #0x0
 1a8:	add	x3, x3, #0x0
 1ac:	mov	w2, #0x69                  	// #105
 1b0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17addBranchMetadataINS_10SelectInstEEEPT_S7_PNS_6MDNodeES9_:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17addBranchMetadataINS_10SelectInstEEEPT_S7_PNS_6MDNodeES9_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x20, x3
  10:	mov	x19, x1
  14:	cbz	x2, 24 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17addBranchMetadataINS_10SelectInstEEEPT_S7_PNS_6MDNodeES9_+0x24>
  18:	mov	w1, #0x2                   	// #2
  1c:	mov	x0, x19
  20:	bl	0 <_ZN4llvm11Instruction11setMetadataEjPNS_6MDNodeE>
  24:	cbz	x20, 38 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17addBranchMetadataINS_10SelectInstEEEPT_S7_PNS_6MDNodeES9_+0x38>
  28:	mov	w1, #0xf                   	// #15
  2c:	mov	x0, x19
  30:	mov	x2, x20
  34:	bl	0 <_ZN4llvm11Instruction11setMetadataEjPNS_6MDNodeE>
  38:	mov	x0, x19
  3c:	ldp	x20, x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	ret

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10setFPAttrsEPNS_11InstructionEPNS_6MDNodeENS_13FastMathFlagsE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10setFPAttrsEPNS_11InstructionEPNS_6MDNodeENS_13FastMathFlagsE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x20, x3
  10:	mov	x19, x1
  14:	cbnz	x2, 20 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10setFPAttrsEPNS_11InstructionEPNS_6MDNodeENS_13FastMathFlagsE+0x20>
  18:	ldr	x2, [x0, #32]
  1c:	cbz	x2, 2c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10setFPAttrsEPNS_11InstructionEPNS_6MDNodeENS_13FastMathFlagsE+0x2c>
  20:	mov	w1, #0x3                   	// #3
  24:	mov	x0, x19
  28:	bl	0 <_ZN4llvm11Instruction11setMetadataEjPNS_6MDNodeE>
  2c:	and	x1, x20, #0xffffffff
  30:	mov	x0, x19
  34:	bl	0 <_ZN4llvm11Instruction16setFastMathFlagsENS_13FastMathFlagsE>
  38:	mov	x0, x19
  3c:	ldp	x20, x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	ret

Disassembly of section .text._ZN4llvm10SelectInstC2EPNS_5ValueES2_S2_RKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm10SelectInstC2EPNS_5ValueES2_S2_RKNS_5TwineEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x22, x1
  18:	ldr	x1, [x2]
  1c:	mov	x19, x4
  20:	mov	x20, x3
  24:	mov	x21, x2
  28:	sub	x3, x0, #0x48
  2c:	mov	w2, #0x39                  	// #57
  30:	mov	w4, #0x3                   	// #3
  34:	mov	x23, x0
  38:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
  3c:	mov	x0, x23
  40:	mov	x1, x22
  44:	mov	x2, x21
  48:	mov	x3, x20
  4c:	bl	0 <_ZN4llvm10SelectInstC2EPNS_5ValueES2_S2_RKNS_5TwineEPNS_11InstructionE>
  50:	mov	x0, x23
  54:	mov	x1, x19
  58:	ldp	x20, x19, [sp, #48]
  5c:	ldp	x22, x21, [sp, #32]
  60:	ldr	x23, [sp, #16]
  64:	ldp	x29, x30, [sp], #64
  68:	b	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>

Disassembly of section .text._ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_:

0000000000000000 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x21, x2
  14:	mov	x22, x1
  18:	mov	x20, x0
  1c:	mov	x0, x1
  20:	mov	x1, x2
  24:	mov	x2, x3
  28:	mov	x19, x3
  2c:	bl	0 <_ZN4llvm10SelectInst18areInvalidOperandsEPNS_5ValueES2_S2_>
  30:	cbnz	x0, 110 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0x110>
  34:	ldr	x8, [x20, #-72]!
  38:	cbz	x8, 60 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0x60>
  3c:	ldp	x9, x8, [x20, #8]
  40:	and	x8, x8, #0xfffffffffffffffc
  44:	str	x9, [x8]
  48:	ldr	x9, [x20, #8]
  4c:	cbz	x9, 60 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0x60>
  50:	ldr	x10, [x9, #16]
  54:	and	x10, x10, #0x3
  58:	orr	x8, x10, x8
  5c:	str	x8, [x9, #16]
  60:	str	x22, [x20]
  64:	cbz	x22, 74 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0x74>
  68:	add	x1, x22, #0x8
  6c:	mov	x0, x20
  70:	bl	0 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_>
  74:	mov	x0, x20
  78:	ldr	x8, [x0, #24]!
  7c:	cbz	x8, a4 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0xa4>
  80:	ldp	x9, x8, [x20, #32]
  84:	and	x8, x8, #0xfffffffffffffffc
  88:	str	x9, [x8]
  8c:	ldr	x9, [x20, #32]
  90:	cbz	x9, a4 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0xa4>
  94:	ldr	x10, [x9, #16]
  98:	and	x10, x10, #0x3
  9c:	orr	x8, x10, x8
  a0:	str	x8, [x9, #16]
  a4:	str	x21, [x0]
  a8:	cbz	x21, b4 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0xb4>
  ac:	add	x1, x21, #0x8
  b0:	bl	0 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_>
  b4:	mov	x0, x20
  b8:	ldr	x8, [x0, #48]!
  bc:	cbz	x8, e4 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0xe4>
  c0:	ldp	x9, x8, [x20, #56]
  c4:	and	x8, x8, #0xfffffffffffffffc
  c8:	str	x9, [x8]
  cc:	ldr	x9, [x20, #56]
  d0:	cbz	x9, e4 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0xe4>
  d4:	ldr	x10, [x9, #16]
  d8:	and	x10, x10, #0x3
  dc:	orr	x8, x10, x8
  e0:	str	x8, [x9, #16]
  e4:	str	x19, [x0]
  e8:	cbz	x19, 100 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0x100>
  ec:	add	x1, x19, #0x8
  f0:	ldp	x20, x19, [sp, #32]
  f4:	ldp	x22, x21, [sp, #16]
  f8:	ldp	x29, x30, [sp], #48
  fc:	b	0 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_>
 100:	ldp	x20, x19, [sp, #32]
 104:	ldp	x22, x21, [sp, #16]
 108:	ldp	x29, x30, [sp], #48
 10c:	ret
 110:	adrp	x0, 0 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_>
 114:	adrp	x1, 0 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_>
 118:	adrp	x3, 0 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_>
 11c:	add	x0, x0, #0x0
 120:	add	x1, x1, #0x0
 124:	add	x3, x3, #0x0
 128:	mov	w2, #0x6cb                 	// #1739
 12c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13isa_impl_wrapINS_14FPMathOperatorEPKNS_10SelectInstES4_E4doitERKS4_:

0000000000000000 <_ZN4llvm13isa_impl_wrapINS_14FPMathOperatorEPKNS_10SelectInstES4_E4doitERKS4_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0]
   c:	cbz	x0, 18 <_ZN4llvm13isa_impl_wrapINS_14FPMathOperatorEPKNS_10SelectInstES4_E4doitERKS4_+0x18>
  10:	ldp	x29, x30, [sp], #16
  14:	b	0 <_ZN4llvm13isa_impl_wrapINS_14FPMathOperatorEPKNS_10SelectInstES4_E4doitERKS4_>
  18:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_14FPMathOperatorEPKNS_10SelectInstES4_E4doitERKS4_>
  1c:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_14FPMathOperatorEPKNS_10SelectInstES4_E4doitERKS4_>
  20:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_14FPMathOperatorEPKNS_10SelectInstES4_E4doitERKS4_>
  24:	add	x0, x0, #0x0
  28:	add	x1, x1, #0x0
  2c:	add	x3, x3, #0x0
  30:	mov	w2, #0x69                  	// #105
  34:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm14FPMathOperator7classofEPKNS_5ValueE:

0000000000000000 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x0, cc <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0xcc>
   c:	ldrb	w9, [x0, #16]
  10:	subs	w8, w9, #0x18
  14:	b.cs	24 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x24>  // b.hs, b.nlast
  18:	cmp	w9, #0x5
  1c:	b.ne	9c <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x9c>  // b.any
  20:	ldrh	w8, [x0, #18]
  24:	cmp	w8, #0x39
  28:	b.hi	9c <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x9c>  // b.pmore
  2c:	mov	x10, #0x5000                	// #20480
  30:	mov	w9, #0x1                   	// #1
  34:	movk	x10, #0x125, lsl #16
  38:	lsl	x9, x9, x8
  3c:	movk	x10, #0x40, lsl #48
  40:	tst	x9, x10
  44:	b.eq	50 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x50>  // b.none
  48:	mov	w0, #0x1                   	// #1
  4c:	b	c4 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0xc4>
  50:	mov	w9, #0x1                   	// #1
  54:	lsl	x8, x9, x8
  58:	tst	x8, #0x380000000000000
  5c:	b.eq	9c <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x9c>  // b.none
  60:	ldr	x8, [x0]
  64:	cbz	x8, 7c <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x7c>
  68:	ldrb	w9, [x8, #8]
  6c:	cmp	w9, #0xe
  70:	b.ne	a4 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0xa4>  // b.any
  74:	ldr	x8, [x8, #24]
  78:	cbnz	x8, 68 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x68>
  7c:	adrp	x0, 0 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE>
  80:	adrp	x1, 0 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE>
  84:	adrp	x3, 0 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE>
  88:	add	x0, x0, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0x69                  	// #105
  98:	bl	0 <__assert_fail>
  9c:	mov	w0, wzr
  a0:	b	c4 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0xc4>
  a4:	cmp	w9, #0x10
  a8:	b.ne	b8 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0xb8>  // b.any
  ac:	ldr	x8, [x8, #16]
  b0:	ldr	x8, [x8]
  b4:	ldrb	w9, [x8, #8]
  b8:	sub	w8, w9, #0x1
  bc:	cmp	w8, #0x6
  c0:	cset	w0, cc  // cc = lo, ul, last
  c4:	ldp	x29, x30, [sp], #16
  c8:	ret
  cc:	adrp	x0, 0 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE>
  d0:	adrp	x1, 0 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE>
  d4:	adrp	x3, 0 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE>
  d8:	add	x0, x0, #0x0
  dc:	add	x1, x1, #0x0
  e0:	add	x3, x3, #0x0
  e4:	b	94 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x94>

Disassembly of section .text._ZN4llvm15SmallVectorImplIPNS_8ConstantEE6appendIPKPNS_8FunctionEvEEvT_S9_:

0000000000000000 <_ZN4llvm15SmallVectorImplIPNS_8ConstantEE6appendIPKPNS_8FunctionEvEEvT_S9_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	w8, w9, [x0, #8]
  14:	sub	x22, x2, x1
  18:	asr	x21, x22, #3
  1c:	mov	x20, x1
  20:	sub	x9, x9, x8
  24:	mov	x19, x0
  28:	cmp	x21, x9
  2c:	b.ls	44 <_ZN4llvm15SmallVectorImplIPNS_8ConstantEE6appendIPKPNS_8FunctionEvEEvT_S9_+0x44>  // b.plast
  30:	add	x2, x21, x8
  34:	add	x1, x19, #0x10
  38:	mov	w3, #0x8                   	// #8
  3c:	mov	x0, x19
  40:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  44:	cmp	x22, #0x0
  48:	b.le	78 <_ZN4llvm15SmallVectorImplIPNS_8ConstantEE6appendIPKPNS_8FunctionEvEEvT_S9_+0x78>
  4c:	ldr	x9, [x19]
  50:	ldr	w8, [x19, #8]
  54:	lsr	x10, x22, #3
  58:	add	x10, x10, #0x1
  5c:	add	x9, x9, x8, lsl #3
  60:	ldr	x11, [x20], #8
  64:	sub	x10, x10, #0x1
  68:	cmp	x10, #0x1
  6c:	str	x11, [x9], #8
  70:	b.gt	60 <_ZN4llvm15SmallVectorImplIPNS_8ConstantEE6appendIPKPNS_8FunctionEvEEvT_S9_+0x60>
  74:	b	7c <_ZN4llvm15SmallVectorImplIPNS_8ConstantEE6appendIPKPNS_8FunctionEvEEvT_S9_+0x7c>
  78:	ldr	w8, [x19, #8]
  7c:	ldr	w9, [x19, #12]
  80:	add	x8, x21, x8
  84:	cmp	x8, x9
  88:	b.hi	a0 <_ZN4llvm15SmallVectorImplIPNS_8ConstantEE6appendIPKPNS_8FunctionEvEEvT_S9_+0xa0>  // b.pmore
  8c:	str	w8, [x19, #8]
  90:	ldp	x20, x19, [sp, #32]
  94:	ldp	x22, x21, [sp, #16]
  98:	ldp	x29, x30, [sp], #48
  9c:	ret
  a0:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_8ConstantEE6appendIPKPNS_8FunctionEvEEvT_S9_>
  a4:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_8ConstantEE6appendIPKPNS_8FunctionEvEEvT_S9_>
  a8:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_8ConstantEE6appendIPKPNS_8FunctionEvEEvT_S9_>
  ac:	add	x0, x0, #0x0
  b0:	add	x1, x1, #0x0
  b4:	add	x3, x3, #0x0
  b8:	mov	w2, #0x43                  	// #67
  bc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE:

0000000000000000 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x2
  14:	mov	w20, w1
  18:	mov	x21, x0
  1c:	bl	0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
  20:	cmp	w0, w20
  24:	b.ls	a0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0xa0>  // b.plast
  28:	ldr	w8, [x21, #20]
  2c:	and	x8, x8, #0xfffffff
  30:	cmp	w8, w20
  34:	b.ls	c0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0xc0>  // b.plast
  38:	mov	w9, #0x18                  	// #24
  3c:	mneg	x8, x8, x9
  40:	add	x8, x21, x8
  44:	umaddl	x0, w20, w9, x8
  48:	ldr	x8, [x0]
  4c:	cbz	x8, 74 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x74>
  50:	ldp	x9, x8, [x0, #8]
  54:	and	x8, x8, #0xfffffffffffffffc
  58:	str	x9, [x8]
  5c:	ldr	x9, [x0, #8]
  60:	cbz	x9, 74 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x74>
  64:	ldr	x10, [x9, #16]
  68:	and	x10, x10, #0x3
  6c:	orr	x8, x10, x8
  70:	str	x8, [x9, #16]
  74:	str	x19, [x0]
  78:	cbz	x19, 90 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x90>
  7c:	add	x1, x19, #0x8
  80:	ldp	x20, x19, [sp, #32]
  84:	ldr	x21, [sp, #16]
  88:	ldp	x29, x30, [sp], #48
  8c:	b	0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
  90:	ldp	x20, x19, [sp, #32]
  94:	ldr	x21, [sp, #16]
  98:	ldp	x29, x30, [sp], #48
  9c:	ret
  a0:	adrp	x0, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
  a4:	adrp	x1, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
  a8:	adrp	x3, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
  ac:	add	x0, x0, #0x0
  b0:	add	x1, x1, #0x0
  b4:	add	x3, x3, #0x0
  b8:	mov	w2, #0x4e4                 	// #1252
  bc:	bl	0 <__assert_fail>
  c0:	adrp	x0, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
  c4:	adrp	x1, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
  c8:	adrp	x3, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
  cc:	add	x0, x0, #0x0
  d0:	add	x1, x1, #0x0
  d4:	add	x3, x3, #0x0
  d8:	mov	w2, #0x86a                 	// #2154
  dc:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10TrackingVHINS_11InstructionEE9getValPtrEv:

0000000000000000 <_ZNK4llvm10TrackingVHINS_11InstructionEE9getValPtrEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0, #16]
   c:	add	x8, x0, #0x10
  10:	cmp	x8, #0x10
  14:	b.hi	30 <_ZNK4llvm10TrackingVHINS_11InstructionEE9getValPtrEv+0x30>  // b.pmore
  18:	mov	w9, #0x1                   	// #1
  1c:	lsl	x8, x9, x8
  20:	mov	w9, #0x101                 	// #257
  24:	movk	w9, #0x1, lsl #16
  28:	tst	x8, x9
  2c:	b.ne	44 <_ZNK4llvm10TrackingVHINS_11InstructionEE9getValPtrEv+0x44>  // b.any
  30:	ldrb	w8, [x0, #16]
  34:	cmp	w8, #0x17
  38:	b.ls	64 <_ZNK4llvm10TrackingVHINS_11InstructionEE9getValPtrEv+0x64>  // b.plast
  3c:	ldp	x29, x30, [sp], #16
  40:	ret
  44:	adrp	x0, 0 <_ZNK4llvm10TrackingVHINS_11InstructionEE9getValPtrEv>
  48:	adrp	x1, 0 <_ZNK4llvm10TrackingVHINS_11InstructionEE9getValPtrEv>
  4c:	adrp	x3, 0 <_ZNK4llvm10TrackingVHINS_11InstructionEE9getValPtrEv>
  50:	add	x0, x0, #0x0
  54:	add	x1, x1, #0x0
  58:	add	x3, x3, #0x0
  5c:	mov	w2, #0x161                 	// #353
  60:	bl	0 <__assert_fail>
  64:	adrp	x0, 0 <_ZNK4llvm10TrackingVHINS_11InstructionEE9getValPtrEv>
  68:	adrp	x1, 0 <_ZNK4llvm10TrackingVHINS_11InstructionEE9getValPtrEv>
  6c:	adrp	x3, 0 <_ZNK4llvm10TrackingVHINS_11InstructionEE9getValPtrEv>
  70:	add	x0, x0, #0x0
  74:	add	x1, x1, #0x0
  78:	add	x3, x3, #0x0
  7c:	mov	w2, #0x168                 	// #360
  80:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIPNS_7PHINodeELb1EE9push_backERKS2_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIPNS_7PHINodeELb1EE9push_backERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseIPNS_7PHINodeELb1EE9push_backERKS2_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	x10, [x20]
  28:	str	x10, [x9, w8, uxtw #3]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseIPNS_7PHINodeELb1EE9push_backERKS2_+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x8                   	// #8
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseIPNS_7PHINodeELb1EE9push_backERKS2_+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_7PHINodeELb1EE9push_backERKS2_>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_7PHINodeELb1EE9push_backERKS2_>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_7PHINodeELb1EE9push_backERKS2_>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	str	x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	mov	x23, x1
  1c:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE>
  20:	mov	x19, x0
  24:	add	x1, x1, #0x0
  28:	add	x0, sp, #0x8
  2c:	mov	x20, x3
  30:	mov	w22, w2
  34:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE>
  38:	mov	w0, #0x40                  	// #64
  3c:	bl	0 <_ZN4llvm4UsernwEm>
  40:	add	x3, sp, #0x8
  44:	mov	x1, x23
  48:	mov	w2, w22
  4c:	mov	x4, xzr
  50:	mov	x21, x0
  54:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE>
  58:	add	x0, sp, #0x8
  5c:	str	x21, [sp, #8]
  60:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE>
  64:	tbz	w0, #0, 7c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE+0x7c>
  68:	ldr	w3, [x19, #40]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	mov	x2, xzr
  78:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE>
  7c:	ldp	x3, x4, [x19, #8]
  80:	mov	x0, x19
  84:	mov	x1, x21
  88:	mov	x2, x20
  8c:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE>
  90:	mov	x0, x19
  94:	mov	x1, x21
  98:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE>
  9c:	mov	x0, x21
  a0:	ldp	x20, x19, [sp, #80]
  a4:	ldp	x22, x21, [sp, #64]
  a8:	ldr	x23, [sp, #48]
  ac:	ldp	x29, x30, [sp, #32]
  b0:	add	sp, sp, #0x60
  b4:	ret

Disassembly of section .text._ZNK4llvm4coro5Shape20getRetconResultTypesEv:

0000000000000000 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #168]
   c:	sub	w8, w8, #0x1
  10:	cmp	w8, #0x2
  14:	b.cs	70 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv+0x70>  // b.hs, b.nlast
  18:	ldr	x0, [x0]
  1c:	bl	0 <_ZNK4llvm11Instruction11getFunctionEv>
  20:	ldr	x8, [x0, #24]
  24:	cbz	x8, 90 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv+0x90>
  28:	ldrb	w9, [x8, #8]
  2c:	cmp	w9, #0xc
  30:	b.ne	ac <_ZNK4llvm4coro5Shape20getRetconResultTypesEv+0xac>  // b.any
  34:	ldr	x8, [x8, #16]
  38:	ldr	x8, [x8]
  3c:	cbz	x8, cc <_ZNK4llvm4coro5Shape20getRetconResultTypesEv+0xcc>
  40:	ldrb	w9, [x8, #8]
  44:	cmp	w9, #0xd
  48:	b.ne	60 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv+0x60>  // b.any
  4c:	ldr	w9, [x8, #12]
  50:	ldr	x8, [x8, #16]
  54:	sub	x1, x9, #0x1
  58:	add	x0, x8, #0x8
  5c:	b	68 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv+0x68>
  60:	mov	x1, xzr
  64:	mov	x0, xzr
  68:	ldp	x29, x30, [sp], #16
  6c:	ret
  70:	adrp	x0, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  74:	adrp	x1, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  78:	adrp	x3, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  7c:	add	x0, x0, #0x0
  80:	add	x1, x1, #0x0
  84:	add	x3, x3, #0x0
  88:	mov	w2, #0xae                  	// #174
  8c:	bl	0 <__assert_fail>
  90:	adrp	x0, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  94:	adrp	x1, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  98:	adrp	x3, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  9c:	add	x0, x0, #0x0
  a0:	add	x1, x1, #0x0
  a4:	add	x3, x3, #0x0
  a8:	b	e4 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv+0xe4>
  ac:	adrp	x0, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  b0:	adrp	x1, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  b4:	adrp	x3, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  b8:	add	x0, x0, #0x0
  bc:	add	x1, x1, #0x0
  c0:	add	x3, x3, #0x0
  c4:	mov	w2, #0x108                 	// #264
  c8:	bl	0 <__assert_fail>
  cc:	adrp	x0, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  d0:	adrp	x1, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  d4:	adrp	x3, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  d8:	add	x0, x0, #0x0
  dc:	add	x1, x1, #0x0
  e0:	add	x3, x3, #0x0
  e4:	mov	w2, #0x69                  	// #105
  e8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13isa_impl_wrapINS_19AnyCoroIdRetconInstEPKNS_13AnyCoroIdInstES4_E4doitERKS4_:

0000000000000000 <_ZN4llvm13isa_impl_wrapINS_19AnyCoroIdRetconInstEPKNS_13AnyCoroIdInstES4_E4doitERKS4_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	cbz	x8, 38 <_ZN4llvm13isa_impl_wrapINS_19AnyCoroIdRetconInstEPKNS_13AnyCoroIdInstES4_E4doitERKS4_+0x38>
  10:	ldur	x8, [x8, #-24]
  14:	ldrb	w9, [x8, #16]
  18:	cmp	w9, #0x0
  1c:	csel	x8, x8, xzr, eq  // eq = none
  20:	ldr	w8, [x8, #36]
  24:	sub	w8, w8, #0x19
  28:	cmp	w8, #0x2
  2c:	cset	w0, cc  // cc = lo, ul, last
  30:	ldp	x29, x30, [sp], #16
  34:	ret
  38:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_19AnyCoroIdRetconInstEPKNS_13AnyCoroIdInstES4_E4doitERKS4_>
  3c:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_19AnyCoroIdRetconInstEPKNS_13AnyCoroIdInstES4_E4doitERKS4_>
  40:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_19AnyCoroIdRetconInstEPKNS_13AnyCoroIdInstES4_E4doitERKS4_>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x69                  	// #105
  54:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13isa_impl_wrapINS_21CoroSuspendRetconInstEPKNS_18AnyCoroSuspendInstES4_E4doitERKS4_:

0000000000000000 <_ZN4llvm13isa_impl_wrapINS_21CoroSuspendRetconInstEPKNS_18AnyCoroSuspendInstES4_E4doitERKS4_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	cbz	x8, 34 <_ZN4llvm13isa_impl_wrapINS_21CoroSuspendRetconInstEPKNS_18AnyCoroSuspendInstES4_E4doitERKS4_+0x34>
  10:	ldur	x8, [x8, #-24]
  14:	ldrb	w9, [x8, #16]
  18:	cmp	w9, #0x0
  1c:	csel	x8, x8, xzr, eq  // eq = none
  20:	ldr	w8, [x8, #36]
  24:	cmp	w8, #0x24
  28:	cset	w0, eq  // eq = none
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_21CoroSuspendRetconInstEPKNS_18AnyCoroSuspendInstES4_E4doitERKS4_>
  38:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_21CoroSuspendRetconInstEPKNS_18AnyCoroSuspendInstES4_E4doitERKS4_>
  3c:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_21CoroSuspendRetconInstEPKNS_18AnyCoroSuspendInstES4_E4doitERKS4_>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x69                  	// #105
  50:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13isa_impl_wrapINS_14FPMathOperatorEPKNS_7PHINodeES4_E4doitERKS4_:

0000000000000000 <_ZN4llvm13isa_impl_wrapINS_14FPMathOperatorEPKNS_7PHINodeES4_E4doitERKS4_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0]
   c:	cbz	x0, 18 <_ZN4llvm13isa_impl_wrapINS_14FPMathOperatorEPKNS_7PHINodeES4_E4doitERKS4_+0x18>
  10:	ldp	x29, x30, [sp], #16
  14:	b	0 <_ZN4llvm13isa_impl_wrapINS_14FPMathOperatorEPKNS_7PHINodeES4_E4doitERKS4_>
  18:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_14FPMathOperatorEPKNS_7PHINodeES4_E4doitERKS4_>
  1c:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_14FPMathOperatorEPKNS_7PHINodeES4_E4doitERKS4_>
  20:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_14FPMathOperatorEPKNS_7PHINodeES4_E4doitERKS4_>
  24:	add	x0, x0, #0x0
  28:	add	x1, x1, #0x0
  2c:	add	x3, x3, #0x0
  30:	mov	w2, #0x69                  	// #105
  34:	bl	0 <__assert_fail>

Disassembly of section .text._ZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_:

0000000000000000 <_ZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_>:
   0:	sub	sp, sp, #0x20
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	mov	x8, x0
  10:	stp	x1, x2, [sp]
  14:	adrp	x0, 0 <_ZSt15__once_callable>
  18:	ldr	x1, [x0]
  1c:	add	x0, x0, #0x0
  20:	blr	x1
  24:	mrs	x9, tpidr_el0
  28:	mov	x10, sp
  2c:	str	x10, [x9, x0]
  30:	adrp	x0, 0 <_ZSt11__once_call>
  34:	ldr	x1, [x0]
  38:	add	x0, x0, #0x0
  3c:	blr	x1
  40:	adrp	x11, 0 <__pthread_key_create>
  44:	ldr	x11, [x11]
  48:	adrp	x10, 0 <_ZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_>
  4c:	add	x10, x10, #0x0
  50:	str	x10, [x9, x0]
  54:	cbz	x11, 78 <_ZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_+0x78>
  58:	adrp	x1, 0 <__once_proxy>
  5c:	ldr	x1, [x1]
  60:	mov	x0, x8
  64:	bl	0 <pthread_once>
  68:	cbnz	w0, 7c <_ZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_+0x7c>
  6c:	ldp	x29, x30, [sp, #16]
  70:	add	sp, sp, #0x20
  74:	ret
  78:	mov	w0, #0xffffffff            	// #-1
  7c:	bl	0 <_ZSt20__throw_system_errori>

Disassembly of section .text._ZZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_ENUlvE0_8__invokeEv:

0000000000000000 <_ZZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_ENUlvE0_8__invokeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	adrp	x0, 0 <_ZSt15__once_callable>
   c:	ldr	x1, [x0]
  10:	add	x0, x0, #0x0
  14:	blr	x1
  18:	mrs	x8, tpidr_el0
  1c:	ldr	x8, [x8, x0]
  20:	ldp	x1, x9, [x8]
  24:	ldr	x0, [x9]
  28:	ldp	x29, x30, [sp], #16
  2c:	br	x1
