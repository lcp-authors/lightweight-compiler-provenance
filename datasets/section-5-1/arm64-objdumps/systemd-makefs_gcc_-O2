
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-makefs_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400c50 <_init>:
  400c50:	stp	x29, x30, [sp, #-16]!
  400c54:	mov	x29, sp
  400c58:	bl	401144 <call_weak_fn>
  400c5c:	ldp	x29, x30, [sp], #16
  400c60:	ret

Disassembly of section .plt:

0000000000400c70 <.plt>:
  400c70:	stp	x16, x30, [sp, #-16]!
  400c74:	adrp	x16, 411000 <__FRAME_END__+0xf888>
  400c78:	ldr	x17, [x16, #3880]
  400c7c:	add	x16, x16, #0xf28
  400c80:	br	x17
  400c84:	nop
  400c88:	nop
  400c8c:	nop

0000000000400c90 <__libc_start_main@plt>:
  400c90:	adrp	x16, 411000 <__FRAME_END__+0xf888>
  400c94:	ldr	x17, [x16, #3888]
  400c98:	add	x16, x16, #0xf30
  400c9c:	br	x17

0000000000400ca0 <__gmon_start__@plt>:
  400ca0:	adrp	x16, 411000 <__FRAME_END__+0xf888>
  400ca4:	ldr	x17, [x16, #3896]
  400ca8:	add	x16, x16, #0xf38
  400cac:	br	x17

0000000000400cb0 <polkit_agent_close@plt>:
  400cb0:	adrp	x16, 411000 <__FRAME_END__+0xf888>
  400cb4:	ldr	x17, [x16, #3904]
  400cb8:	add	x16, x16, #0xf40
  400cbc:	br	x17

0000000000400cc0 <log_setup_service@plt>:
  400cc0:	adrp	x16, 411000 <__FRAME_END__+0xf888>
  400cc4:	ldr	x17, [x16, #3912]
  400cc8:	add	x16, x16, #0xf48
  400ccc:	br	x17

0000000000400cd0 <log_assert_failed_realm@plt>:
  400cd0:	adrp	x16, 411000 <__FRAME_END__+0xf888>
  400cd4:	ldr	x17, [x16, #3920]
  400cd8:	add	x16, x16, #0xf50
  400cdc:	br	x17

0000000000400ce0 <_exit@plt>:
  400ce0:	adrp	x16, 411000 <__FRAME_END__+0xf888>
  400ce4:	ldr	x17, [x16, #3928]
  400ce8:	add	x16, x16, #0xf58
  400cec:	br	x17

0000000000400cf0 <probe_filesystem@plt>:
  400cf0:	adrp	x16, 411000 <__FRAME_END__+0xf888>
  400cf4:	ldr	x17, [x16, #3936]
  400cf8:	add	x16, x16, #0xf60
  400cfc:	br	x17

0000000000400d00 <access@plt>:
  400d00:	adrp	x16, 411000 <__FRAME_END__+0xf888>
  400d04:	ldr	x17, [x16, #3944]
  400d08:	add	x16, x16, #0xf68
  400d0c:	br	x17

0000000000400d10 <abort@plt>:
  400d10:	adrp	x16, 411000 <__FRAME_END__+0xf888>
  400d14:	ldr	x17, [x16, #3952]
  400d18:	add	x16, x16, #0xf70
  400d1c:	br	x17

0000000000400d20 <__errno_location@plt>:
  400d20:	adrp	x16, 411000 <__FRAME_END__+0xf888>
  400d24:	ldr	x17, [x16, #3960]
  400d28:	add	x16, x16, #0xf78
  400d2c:	br	x17

0000000000400d30 <wait_for_terminate_and_check@plt>:
  400d30:	adrp	x16, 411000 <__FRAME_END__+0xf888>
  400d34:	ldr	x17, [x16, #3968]
  400d38:	add	x16, x16, #0xf80
  400d3c:	br	x17

0000000000400d40 <__stack_chk_fail@plt>:
  400d40:	adrp	x16, 411000 <__FRAME_END__+0xf888>
  400d44:	ldr	x17, [x16, #3976]
  400d48:	add	x16, x16, #0xf88
  400d4c:	br	x17

0000000000400d50 <__xstat64@plt>:
  400d50:	adrp	x16, 411000 <__FRAME_END__+0xf888>
  400d54:	ldr	x17, [x16, #3984]
  400d58:	add	x16, x16, #0xf90
  400d5c:	br	x17

0000000000400d60 <ask_password_agent_close@plt>:
  400d60:	adrp	x16, 411000 <__FRAME_END__+0xf888>
  400d64:	ldr	x17, [x16, #3992]
  400d68:	add	x16, x16, #0xf98
  400d6c:	br	x17

0000000000400d70 <pager_close@plt>:
  400d70:	adrp	x16, 411000 <__FRAME_END__+0xf888>
  400d74:	ldr	x17, [x16, #4000]
  400d78:	add	x16, x16, #0xfa0
  400d7c:	br	x17

0000000000400d80 <log_internal_realm@plt>:
  400d80:	adrp	x16, 411000 <__FRAME_END__+0xf888>
  400d84:	ldr	x17, [x16, #4008]
  400d88:	add	x16, x16, #0xfa8
  400d8c:	br	x17

0000000000400d90 <strcmp@plt>:
  400d90:	adrp	x16, 411000 <__FRAME_END__+0xf888>
  400d94:	ldr	x17, [x16, #4016]
  400d98:	add	x16, x16, #0xfb0
  400d9c:	br	x17

0000000000400da0 <execv@plt>:
  400da0:	adrp	x16, 411000 <__FRAME_END__+0xf888>
  400da4:	ldr	x17, [x16, #4024]
  400da8:	add	x16, x16, #0xfb8
  400dac:	br	x17

0000000000400db0 <safe_fork_full@plt>:
  400db0:	adrp	x16, 411000 <__FRAME_END__+0xf888>
  400db4:	ldr	x17, [x16, #4032]
  400db8:	add	x16, x16, #0xfc0
  400dbc:	br	x17

0000000000400dc0 <free@plt>:
  400dc0:	adrp	x16, 411000 <__FRAME_END__+0xf888>
  400dc4:	ldr	x17, [x16, #4040]
  400dc8:	add	x16, x16, #0xfc8
  400dcc:	br	x17

0000000000400dd0 <mac_selinux_finish@plt>:
  400dd0:	adrp	x16, 411000 <__FRAME_END__+0xf888>
  400dd4:	ldr	x17, [x16, #4048]
  400dd8:	add	x16, x16, #0xfd0
  400ddc:	br	x17

0000000000400de0 <strcpy@plt>:
  400de0:	adrp	x16, 411000 <__FRAME_END__+0xf888>
  400de4:	ldr	x17, [x16, #4056]
  400de8:	add	x16, x16, #0xfd8
  400dec:	br	x17

0000000000400df0 <strlen@plt>:
  400df0:	adrp	x16, 411000 <__FRAME_END__+0xf888>
  400df4:	ldr	x17, [x16, #4064]
  400df8:	add	x16, x16, #0xfe0
  400dfc:	br	x17

0000000000400e00 <log_get_max_level_realm@plt>:
  400e00:	adrp	x16, 411000 <__FRAME_END__+0xf888>
  400e04:	ldr	x17, [x16, #4072]
  400e08:	add	x16, x16, #0xfe8
  400e0c:	br	x17

Disassembly of section .text:

0000000000400e10 <main>:
  400e10:	stp	x29, x30, [sp, #-208]!
  400e14:	adrp	x3, 412000 <saved_argv@@SD_SHARED>
  400e18:	adrp	x2, 412000 <saved_argv@@SD_SHARED>
  400e1c:	mov	x29, sp
  400e20:	stp	x21, x22, [sp, #32]
  400e24:	adrp	x22, 411000 <__FRAME_END__+0xf888>
  400e28:	add	x22, x22, #0xce0
  400e2c:	str	w0, [x3, #8]
  400e30:	stp	x19, x20, [sp, #16]
  400e34:	mov	w20, w0
  400e38:	ldr	x0, [x22]
  400e3c:	str	x0, [sp, #200]
  400e40:	mov	x0, #0x0                   	// #0
  400e44:	mov	x19, x1
  400e48:	str	x1, [x2]
  400e4c:	str	xzr, [sp, #64]
  400e50:	bl	400cc0 <log_setup_service@plt>
  400e54:	cmp	w20, #0x3
  400e58:	b.eq	400f1c <main+0x10c>  // b.none
  400e5c:	mov	w0, #0x0                   	// #0
  400e60:	mov	w21, #0xffffffea            	// #-22
  400e64:	bl	400e00 <log_get_max_level_realm@plt>
  400e68:	cmp	w0, #0x2
  400e6c:	b.gt	400ee8 <main+0xd8>
  400e70:	ldr	x0, [sp, #64]
  400e74:	bl	400dc0 <free@plt>
  400e78:	bl	400d60 <ask_password_agent_close@plt>
  400e7c:	bl	400cb0 <polkit_agent_close@plt>
  400e80:	bl	400d70 <pager_close@plt>
  400e84:	bl	400dd0 <mac_selinux_finish@plt>
  400e88:	adrp	x0, 401000 <main+0x1f0>
  400e8c:	ldr	x19, [x0, #1464]
  400e90:	cbz	x19, 400ec4 <main+0xb4>
  400e94:	adrp	x0, 401000 <main+0x1f0>
  400e98:	add	x19, x19, #0x7
  400e9c:	and	x19, x19, #0xfffffffffffffff8
  400ea0:	ldr	x20, [x0, #1472]
  400ea4:	cmp	x19, x20
  400ea8:	b.cs	400ec4 <main+0xb4>  // b.hs, b.nlast
  400eac:	nop
  400eb0:	ldp	x0, x1, [x19]
  400eb4:	add	x19, x19, #0x10
  400eb8:	blr	x1
  400ebc:	cmp	x19, x20
  400ec0:	b.cc	400eb0 <main+0xa0>  // b.lo, b.ul, b.last
  400ec4:	lsr	w0, w21, #31
  400ec8:	ldr	x2, [sp, #200]
  400ecc:	ldr	x1, [x22]
  400ed0:	eor	x1, x2, x1
  400ed4:	cbnz	x1, 4010ec <main+0x2dc>
  400ed8:	ldp	x19, x20, [sp, #16]
  400edc:	ldp	x21, x22, [sp, #32]
  400ee0:	ldp	x29, x30, [sp], #208
  400ee4:	ret
  400ee8:	mov	w1, #0x16                  	// #22
  400eec:	adrp	x5, 401000 <main+0x1f0>
  400ef0:	movk	w1, #0x4000, lsl #16
  400ef4:	add	x5, x5, #0x530
  400ef8:	adrp	x4, 401000 <main+0x1f0>
  400efc:	adrp	x2, 401000 <main+0x1f0>
  400f00:	add	x4, x4, #0x5d8
  400f04:	add	x2, x2, #0x45b
  400f08:	mov	w3, #0x36                  	// #54
  400f0c:	mov	w0, #0x3                   	// #3
  400f10:	bl	400d80 <log_internal_realm@plt>
  400f14:	mov	w21, w0
  400f18:	b	400e70 <main+0x60>
  400f1c:	str	x23, [sp, #48]
  400f20:	add	x2, sp, #0x48
  400f24:	mov	w0, #0x0                   	// #0
  400f28:	ldp	x23, x21, [x19, #8]
  400f2c:	mov	x1, x21
  400f30:	bl	400d50 <__xstat64@plt>
  400f34:	tbnz	w0, #31, 40100c <main+0x1fc>
  400f38:	ldr	w0, [sp, #88]
  400f3c:	and	w0, w0, #0xf000
  400f40:	cmp	w0, #0x6, lsl #12
  400f44:	b.eq	400f84 <main+0x174>  // b.none
  400f48:	mov	w0, #0x0                   	// #0
  400f4c:	bl	400e00 <log_get_max_level_realm@plt>
  400f50:	cmp	w0, #0x5
  400f54:	b.le	400f84 <main+0x174>
  400f58:	adrp	x5, 401000 <main+0x1f0>
  400f5c:	adrp	x4, 401000 <main+0x1f0>
  400f60:	adrp	x2, 401000 <main+0x1f0>
  400f64:	add	x5, x5, #0x570
  400f68:	add	x4, x4, #0x5d8
  400f6c:	mov	x6, x21
  400f70:	add	x2, x2, #0x45b
  400f74:	mov	w3, #0x40                  	// #64
  400f78:	mov	w1, #0x0                   	// #0
  400f7c:	mov	w0, #0x6                   	// #6
  400f80:	bl	400d80 <log_internal_realm@plt>
  400f84:	add	x1, sp, #0x40
  400f88:	mov	x0, x21
  400f8c:	bl	400cf0 <probe_filesystem@plt>
  400f90:	mov	w19, w0
  400f94:	tbnz	w0, #31, 400fbc <main+0x1ac>
  400f98:	ldr	x19, [sp, #64]
  400f9c:	cbz	x19, 401040 <main+0x230>
  400fa0:	mov	w0, #0x0                   	// #0
  400fa4:	bl	400e00 <log_get_max_level_realm@plt>
  400fa8:	cmp	w0, #0x5
  400fac:	b.gt	40106c <main+0x25c>
  400fb0:	mov	w21, #0x0                   	// #0
  400fb4:	ldr	x23, [sp, #48]
  400fb8:	b	400e70 <main+0x60>
  400fbc:	mov	w0, #0x0                   	// #0
  400fc0:	bl	400e00 <log_get_max_level_realm@plt>
  400fc4:	cmp	w0, #0x3
  400fc8:	b.le	401058 <main+0x248>
  400fcc:	cmn	w19, #0x75
  400fd0:	b.eq	4010e0 <main+0x2d0>  // b.none
  400fd4:	adrp	x5, 401000 <main+0x1f0>
  400fd8:	add	x5, x5, #0x510
  400fdc:	mov	x6, x21
  400fe0:	mov	w1, w19
  400fe4:	adrp	x4, 401000 <main+0x1f0>
  400fe8:	adrp	x2, 401000 <main+0x1f0>
  400fec:	add	x4, x4, #0x5d8
  400ff0:	add	x2, x2, #0x45b
  400ff4:	mov	w3, #0x44                  	// #68
  400ff8:	mov	w0, #0x4                   	// #4
  400ffc:	bl	400d80 <log_internal_realm@plt>
  401000:	mov	w21, w0
  401004:	ldr	x23, [sp, #48]
  401008:	b	400e70 <main+0x60>
  40100c:	bl	400d20 <__errno_location@plt>
  401010:	mov	x1, x0
  401014:	mov	w0, #0x0                   	// #0
  401018:	ldr	w19, [x1]
  40101c:	bl	400e00 <log_get_max_level_realm@plt>
  401020:	cmp	w0, #0x2
  401024:	b.gt	4010a8 <main+0x298>
  401028:	cmp	w19, #0x0
  40102c:	cneg	w19, w19, lt  // lt = tstop
  401030:	and	w21, w19, #0xff
  401034:	neg	w21, w21
  401038:	ldr	x23, [sp, #48]
  40103c:	b	400e70 <main+0x60>
  401040:	mov	x1, x21
  401044:	mov	x0, x23
  401048:	bl	401200 <makefs>
  40104c:	mov	w21, w0
  401050:	ldr	x23, [sp, #48]
  401054:	b	400e70 <main+0x60>
  401058:	neg	w21, w19
  40105c:	and	w21, w21, #0xff
  401060:	neg	w21, w21
  401064:	ldr	x23, [sp, #48]
  401068:	b	400e70 <main+0x60>
  40106c:	mov	x6, x21
  401070:	mov	x7, x19
  401074:	adrp	x5, 401000 <main+0x1f0>
  401078:	adrp	x4, 401000 <main+0x1f0>
  40107c:	add	x5, x5, #0x590
  401080:	add	x4, x4, #0x5d8
  401084:	adrp	x2, 401000 <main+0x1f0>
  401088:	mov	w3, #0x4b                  	// #75
  40108c:	add	x2, x2, #0x45b
  401090:	mov	w1, #0x0                   	// #0
  401094:	mov	w0, #0x6                   	// #6
  401098:	mov	w21, #0x0                   	// #0
  40109c:	bl	400d80 <log_internal_realm@plt>
  4010a0:	ldr	x23, [sp, #48]
  4010a4:	b	400e70 <main+0x60>
  4010a8:	mov	x6, x21
  4010ac:	mov	w1, w19
  4010b0:	mov	w0, w20
  4010b4:	adrp	x5, 401000 <main+0x1f0>
  4010b8:	adrp	x4, 401000 <main+0x1f0>
  4010bc:	add	x5, x5, #0x558
  4010c0:	add	x4, x4, #0x5d8
  4010c4:	adrp	x2, 401000 <main+0x1f0>
  4010c8:	mov	w3, #0x3d                  	// #61
  4010cc:	add	x2, x2, #0x45b
  4010d0:	bl	400d80 <log_internal_realm@plt>
  4010d4:	mov	w21, w0
  4010d8:	ldr	x23, [sp, #48]
  4010dc:	b	400e70 <main+0x60>
  4010e0:	adrp	x5, 401000 <main+0x1f0>
  4010e4:	add	x5, x5, #0x4d0
  4010e8:	b	400fdc <main+0x1cc>
  4010ec:	str	x23, [sp, #48]
  4010f0:	bl	400d40 <__stack_chk_fail@plt>

00000000004010f4 <_start>:
  4010f4:	mov	x29, #0x0                   	// #0
  4010f8:	mov	x30, #0x0                   	// #0
  4010fc:	mov	x5, x0
  401100:	ldr	x1, [sp]
  401104:	add	x2, sp, #0x8
  401108:	mov	x6, sp
  40110c:	movz	x0, #0x0, lsl #48
  401110:	movk	x0, #0x0, lsl #32
  401114:	movk	x0, #0x40, lsl #16
  401118:	movk	x0, #0xe10
  40111c:	movz	x3, #0x0, lsl #48
  401120:	movk	x3, #0x0, lsl #32
  401124:	movk	x3, #0x40, lsl #16
  401128:	movk	x3, #0x13a0
  40112c:	movz	x4, #0x0, lsl #48
  401130:	movk	x4, #0x0, lsl #32
  401134:	movk	x4, #0x40, lsl #16
  401138:	movk	x4, #0x1420
  40113c:	bl	400c90 <__libc_start_main@plt>
  401140:	bl	400d10 <abort@plt>

0000000000401144 <call_weak_fn>:
  401144:	adrp	x0, 411000 <__FRAME_END__+0xf888>
  401148:	ldr	x0, [x0, #4088]
  40114c:	cbz	x0, 401154 <call_weak_fn+0x10>
  401150:	b	400ca0 <__gmon_start__@plt>
  401154:	ret

0000000000401158 <deregister_tm_clones>:
  401158:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  40115c:	add	x0, x0, #0x0
  401160:	adrp	x1, 412000 <saved_argv@@SD_SHARED>
  401164:	add	x1, x1, #0x0
  401168:	cmp	x1, x0
  40116c:	b.eq	401184 <deregister_tm_clones+0x2c>  // b.none
  401170:	adrp	x1, 401000 <main+0x1f0>
  401174:	ldr	x1, [x1, #1080]
  401178:	cbz	x1, 401184 <deregister_tm_clones+0x2c>
  40117c:	mov	x16, x1
  401180:	br	x16
  401184:	ret

0000000000401188 <register_tm_clones>:
  401188:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  40118c:	add	x0, x0, #0x0
  401190:	adrp	x1, 412000 <saved_argv@@SD_SHARED>
  401194:	add	x1, x1, #0x0
  401198:	sub	x1, x1, x0
  40119c:	lsr	x2, x1, #63
  4011a0:	add	x1, x2, x1, asr #3
  4011a4:	cmp	xzr, x1, asr #1
  4011a8:	asr	x1, x1, #1
  4011ac:	b.eq	4011c4 <register_tm_clones+0x3c>  // b.none
  4011b0:	adrp	x2, 401000 <main+0x1f0>
  4011b4:	ldr	x2, [x2, #1088]
  4011b8:	cbz	x2, 4011c4 <register_tm_clones+0x3c>
  4011bc:	mov	x16, x2
  4011c0:	br	x16
  4011c4:	ret

00000000004011c8 <__do_global_dtors_aux>:
  4011c8:	stp	x29, x30, [sp, #-32]!
  4011cc:	mov	x29, sp
  4011d0:	str	x19, [sp, #16]
  4011d4:	adrp	x19, 412000 <saved_argv@@SD_SHARED>
  4011d8:	ldrb	w0, [x19, #12]
  4011dc:	cbnz	w0, 4011ec <__do_global_dtors_aux+0x24>
  4011e0:	bl	401158 <deregister_tm_clones>
  4011e4:	mov	w0, #0x1                   	// #1
  4011e8:	strb	w0, [x19, #12]
  4011ec:	ldr	x19, [sp, #16]
  4011f0:	ldp	x29, x30, [sp], #32
  4011f4:	ret

00000000004011f8 <frame_dummy>:
  4011f8:	b	401188 <register_tm_clones>
  4011fc:	nop

0000000000401200 <makefs>:
  401200:	stp	x29, x30, [sp, #-96]!
  401204:	mov	x29, sp
  401208:	stp	x19, x20, [sp, #16]
  40120c:	adrp	x20, 411000 <__FRAME_END__+0xf888>
  401210:	add	x20, x20, #0xce0
  401214:	ldr	x2, [x20]
  401218:	str	x2, [x29, #88]
  40121c:	mov	x2, #0x0                   	// #0
  401220:	mov	x19, x1
  401224:	adrp	x1, 401000 <main+0x1f0>
  401228:	add	x1, x1, #0x450
  40122c:	str	x21, [sp, #32]
  401230:	mov	x21, x0
  401234:	bl	400d90 <strcmp@plt>
  401238:	cbz	w0, 401320 <makefs+0x120>
  40123c:	mov	x0, x21
  401240:	bl	400df0 <strlen@plt>
  401244:	add	x1, x0, #0xc
  401248:	cmp	x1, #0x400, lsl #12
  40124c:	b.hi	40135c <makefs+0x15c>  // b.pmore
  401250:	add	x2, x0, #0x1b
  401254:	adrp	x3, 401000 <main+0x1f0>
  401258:	and	x2, x2, #0xfffffffffffffff0
  40125c:	add	x3, x3, #0x4c0
  401260:	sub	sp, sp, x2
  401264:	mov	x1, x21
  401268:	mov	x21, sp
  40126c:	ldr	w2, [x3, #8]
  401270:	add	x0, x21, #0xb
  401274:	ldr	x4, [x3]
  401278:	str	x4, [x21]
  40127c:	str	w2, [x21, #8]
  401280:	bl	400de0 <strcpy@plt>
  401284:	mov	x0, x21
  401288:	mov	w1, #0x1                   	// #1
  40128c:	bl	400d00 <access@plt>
  401290:	cbz	w0, 4012e4 <makefs+0xe4>
  401294:	bl	400d20 <__errno_location@plt>
  401298:	mov	x1, x0
  40129c:	mov	w0, #0x0                   	// #0
  4012a0:	ldr	w19, [x1]
  4012a4:	bl	400e00 <log_get_max_level_realm@plt>
  4012a8:	cmp	w0, #0x2
  4012ac:	b.gt	40132c <makefs+0x12c>
  4012b0:	cmp	w19, #0x0
  4012b4:	cneg	w0, w19, lt  // lt = tstop
  4012b8:	and	w0, w0, #0xff
  4012bc:	neg	w0, w0
  4012c0:	ldr	x2, [x29, #88]
  4012c4:	ldr	x1, [x20]
  4012c8:	eor	x1, x2, x1
  4012cc:	cbnz	x1, 401380 <makefs+0x180>
  4012d0:	mov	sp, x29
  4012d4:	ldp	x19, x20, [sp, #16]
  4012d8:	ldr	x21, [sp, #32]
  4012dc:	ldp	x29, x30, [sp], #96
  4012e0:	ret
  4012e4:	add	x4, x29, #0x3c
  4012e8:	adrp	x0, 401000 <main+0x1f0>
  4012ec:	mov	w3, #0x225                 	// #549
  4012f0:	add	x0, x0, #0x4b8
  4012f4:	mov	x2, #0x0                   	// #0
  4012f8:	mov	x1, #0x0                   	// #0
  4012fc:	bl	400db0 <safe_fork_full@plt>
  401300:	cmp	w0, #0x0
  401304:	b.lt	4012c0 <makefs+0xc0>  // b.tstop
  401308:	b.eq	401384 <makefs+0x184>  // b.none
  40130c:	ldr	w1, [x29, #60]
  401310:	mov	x0, x21
  401314:	mov	w2, #0x3                   	// #3
  401318:	bl	400d30 <wait_for_terminate_and_check@plt>
  40131c:	b	4012c0 <makefs+0xc0>
  401320:	adrp	x21, 401000 <main+0x1f0>
  401324:	add	x21, x21, #0x448
  401328:	b	401284 <makefs+0x84>
  40132c:	mov	x6, x21
  401330:	mov	w1, w19
  401334:	adrp	x5, 401000 <main+0x1f0>
  401338:	adrp	x4, 401000 <main+0x1f0>
  40133c:	add	x5, x5, #0x498
  401340:	add	x4, x4, #0x5d0
  401344:	adrp	x2, 401000 <main+0x1f0>
  401348:	mov	w3, #0x1c                  	// #28
  40134c:	add	x2, x2, #0x45b
  401350:	mov	w0, #0x3                   	// #3
  401354:	bl	400d80 <log_internal_realm@plt>
  401358:	b	4012c0 <makefs+0xc0>
  40135c:	adrp	x4, 401000 <main+0x1f0>
  401360:	adrp	x1, 401000 <main+0x1f0>
  401364:	adrp	x2, 401000 <main+0x1f0>
  401368:	add	x4, x4, #0x5c8
  40136c:	add	x1, x1, #0x478
  401370:	add	x2, x2, #0x45b
  401374:	mov	w3, #0x1a                  	// #26
  401378:	mov	w0, #0x0                   	// #0
  40137c:	bl	400cd0 <log_assert_failed_realm@plt>
  401380:	bl	400d40 <__stack_chk_fail@plt>
  401384:	add	x1, x29, #0x40
  401388:	mov	x0, x21
  40138c:	stp	x21, x19, [x29, #64]
  401390:	str	xzr, [x29, #80]
  401394:	bl	400da0 <execv@plt>
  401398:	mov	w0, #0x1                   	// #1
  40139c:	bl	400ce0 <_exit@plt>

00000000004013a0 <__libc_csu_init>:
  4013a0:	stp	x29, x30, [sp, #-64]!
  4013a4:	mov	x29, sp
  4013a8:	stp	x19, x20, [sp, #16]
  4013ac:	adrp	x20, 411000 <__FRAME_END__+0xf888>
  4013b0:	add	x20, x20, #0xcd8
  4013b4:	stp	x21, x22, [sp, #32]
  4013b8:	adrp	x21, 411000 <__FRAME_END__+0xf888>
  4013bc:	add	x21, x21, #0xcd0
  4013c0:	sub	x20, x20, x21
  4013c4:	mov	w22, w0
  4013c8:	stp	x23, x24, [sp, #48]
  4013cc:	mov	x23, x1
  4013d0:	mov	x24, x2
  4013d4:	bl	400c50 <_init>
  4013d8:	cmp	xzr, x20, asr #3
  4013dc:	b.eq	401408 <__libc_csu_init+0x68>  // b.none
  4013e0:	asr	x20, x20, #3
  4013e4:	mov	x19, #0x0                   	// #0
  4013e8:	ldr	x3, [x21, x19, lsl #3]
  4013ec:	mov	x2, x24
  4013f0:	add	x19, x19, #0x1
  4013f4:	mov	x1, x23
  4013f8:	mov	w0, w22
  4013fc:	blr	x3
  401400:	cmp	x20, x19
  401404:	b.ne	4013e8 <__libc_csu_init+0x48>  // b.any
  401408:	ldp	x19, x20, [sp, #16]
  40140c:	ldp	x21, x22, [sp, #32]
  401410:	ldp	x23, x24, [sp, #48]
  401414:	ldp	x29, x30, [sp], #64
  401418:	ret
  40141c:	nop

0000000000401420 <__libc_csu_fini>:
  401420:	ret

Disassembly of section .fini:

0000000000401424 <_fini>:
  401424:	stp	x29, x30, [sp, #-16]!
  401428:	mov	x29, sp
  40142c:	ldp	x29, x30, [sp], #16
  401430:	ret
