
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libcheck.so.0.0.0_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000002158 <.init>:
    2158:	stp	x29, x30, [sp, #-16]!
    215c:	mov	x29, sp
    2160:	bl	2630 <ferror@plt+0x10>
    2164:	ldp	x29, x30, [sp], #16
    2168:	ret

Disassembly of section .plt:

0000000000002170 <memcpy@plt-0x20>:
    2170:	stp	x16, x30, [sp, #-16]!
    2174:	adrp	x16, 18000 <check_waitpid_and_exit@@Base+0x1229c>
    2178:	ldr	x17, [x16, #4088]
    217c:	add	x16, x16, #0xff8
    2180:	br	x17
    2184:	nop
    2188:	nop
    218c:	nop

0000000000002190 <memcpy@plt>:
    2190:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2194:	ldr	x17, [x16]
    2198:	add	x16, x16, #0x0
    219c:	br	x17

00000000000021a0 <memmove@plt>:
    21a0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    21a4:	ldr	x17, [x16, #8]
    21a8:	add	x16, x16, #0x8
    21ac:	br	x17

00000000000021b0 <srunner_tap_fname@plt>:
    21b0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    21b4:	ldr	x17, [x16, #16]
    21b8:	add	x16, x16, #0x10
    21bc:	br	x17

00000000000021c0 <_exit@plt>:
    21c0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    21c4:	ldr	x17, [x16, #24]
    21c8:	add	x16, x16, #0x18
    21cc:	br	x17

00000000000021d0 <tcase_fn_start@plt>:
    21d0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    21d4:	ldr	x17, [x16, #32]
    21d8:	add	x16, x16, #0x20
    21dc:	br	x17

00000000000021e0 <strtok@plt>:
    21e0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    21e4:	ldr	x17, [x16, #40]
    21e8:	add	x16, x16, #0x28
    21ec:	br	x17

00000000000021f0 <strtoul@plt>:
    21f0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    21f4:	ldr	x17, [x16, #48]
    21f8:	add	x16, x16, #0x30
    21fc:	br	x17

0000000000002200 <strlen@plt>:
    2200:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2204:	ldr	x17, [x16, #56]
    2208:	add	x16, x16, #0x38
    220c:	br	x17

0000000000002210 <fputs@plt>:
    2210:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2214:	ldr	x17, [x16, #64]
    2218:	add	x16, x16, #0x40
    221c:	br	x17

0000000000002220 <exit@plt>:
    2220:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2224:	ldr	x17, [x16, #72]
    2228:	add	x16, x16, #0x48
    222c:	br	x17

0000000000002230 <_setjmp@plt>:
    2230:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2234:	ldr	x17, [x16, #80]
    2238:	add	x16, x16, #0x50
    223c:	br	x17

0000000000002240 <strtod@plt>:
    2240:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2244:	ldr	x17, [x16, #88]
    2248:	add	x16, x16, #0x58
    224c:	br	x17

0000000000002250 <srunner_has_log@plt>:
    2250:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2254:	ldr	x17, [x16, #96]
    2258:	add	x16, x16, #0x60
    225c:	br	x17

0000000000002260 <__sigsetjmp@plt>:
    2260:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2264:	ldr	x17, [x16, #104]
    2268:	add	x16, x16, #0x68
    226c:	br	x17

0000000000002270 <localtime_r@plt>:
    2270:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2274:	ldr	x17, [x16, #112]
    2278:	add	x16, x16, #0x70
    227c:	br	x17

0000000000002280 <__cxa_finalize@plt>:
    2280:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2284:	ldr	x17, [x16, #120]
    2288:	add	x16, x16, #0x78
    228c:	br	x17

0000000000002290 <strftime@plt>:
    2290:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2294:	ldr	x17, [x16, #128]
    2298:	add	x16, x16, #0x80
    229c:	br	x17

00000000000022a0 <fputc@plt>:
    22a0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    22a4:	ldr	x17, [x16, #136]
    22a8:	add	x16, x16, #0x88
    22ac:	br	x17

00000000000022b0 <clock_gettime@plt>:
    22b0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    22b4:	ldr	x17, [x16, #144]
    22b8:	add	x16, x16, #0x90
    22bc:	br	x17

00000000000022c0 <fork@plt>:
    22c0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    22c4:	ldr	x17, [x16, #152]
    22c8:	add	x16, x16, #0x98
    22cc:	br	x17

00000000000022d0 <srunner_fork_status@plt>:
    22d0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    22d4:	ldr	x17, [x16, #160]
    22d8:	add	x16, x16, #0xa0
    22dc:	br	x17

00000000000022e0 <__pthread_register_cancel@plt>:
    22e0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    22e4:	ldr	x17, [x16, #168]
    22e8:	add	x16, x16, #0xa8
    22ec:	br	x17

00000000000022f0 <snprintf@plt>:
    22f0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    22f4:	ldr	x17, [x16, #176]
    22f8:	add	x16, x16, #0xb0
    22fc:	br	x17

0000000000002300 <srunner_ntests_failed@plt>:
    2300:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2304:	ldr	x17, [x16, #184]
    2308:	add	x16, x16, #0xb8
    230c:	br	x17

0000000000002310 <srunner_xml_fname@plt>:
    2310:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2314:	ldr	x17, [x16, #192]
    2318:	add	x16, x16, #0xc0
    231c:	br	x17

0000000000002320 <fclose@plt>:
    2320:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2324:	ldr	x17, [x16, #200]
    2328:	add	x16, x16, #0xc8
    232c:	br	x17

0000000000002330 <fopen@plt>:
    2330:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2334:	ldr	x17, [x16, #208]
    2338:	add	x16, x16, #0xd0
    233c:	br	x17

0000000000002340 <timer_settime@plt>:
    2340:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2344:	ldr	x17, [x16, #216]
    2348:	add	x16, x16, #0xd8
    234c:	br	x17

0000000000002350 <malloc@plt>:
    2350:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2354:	ldr	x17, [x16, #224]
    2358:	add	x16, x16, #0xe0
    235c:	br	x17

0000000000002360 <memset@plt>:
    2360:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2364:	ldr	x17, [x16, #232]
    2368:	add	x16, x16, #0xe8
    236c:	br	x17

0000000000002370 <fdopen@plt>:
    2370:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2374:	ldr	x17, [x16, #240]
    2378:	add	x16, x16, #0xf0
    237c:	br	x17

0000000000002380 <gettimeofday@plt>:
    2380:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2384:	ldr	x17, [x16, #248]
    2388:	add	x16, x16, #0xf8
    238c:	br	x17

0000000000002390 <__pthread_unregister_cancel@plt>:
    2390:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2394:	ldr	x17, [x16, #256]
    2398:	add	x16, x16, #0x100
    239c:	br	x17

00000000000023a0 <realloc@plt>:
    23a0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    23a4:	ldr	x17, [x16, #264]
    23a8:	add	x16, x16, #0x108
    23ac:	br	x17

00000000000023b0 <rewind@plt>:
    23b0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    23b4:	ldr	x17, [x16, #272]
    23b8:	add	x16, x16, #0x110
    23bc:	br	x17

00000000000023c0 <__pthread_unwind_next@plt>:
    23c0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    23c4:	ldr	x17, [x16, #280]
    23c8:	add	x16, x16, #0x118
    23cc:	br	x17

00000000000023d0 <strdup@plt>:
    23d0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    23d4:	ldr	x17, [x16, #288]
    23d8:	add	x16, x16, #0x120
    23dc:	br	x17

00000000000023e0 <strerror@plt>:
    23e0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    23e4:	ldr	x17, [x16, #296]
    23e8:	add	x16, x16, #0x128
    23ec:	br	x17

00000000000023f0 <sigaction@plt>:
    23f0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    23f4:	ldr	x17, [x16, #304]
    23f8:	add	x16, x16, #0x130
    23fc:	br	x17

0000000000002400 <strrchr@plt>:
    2400:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2404:	ldr	x17, [x16, #312]
    2408:	add	x16, x16, #0x138
    240c:	br	x17

0000000000002410 <__gmon_start__@plt>:
    2410:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2414:	ldr	x17, [x16, #320]
    2418:	add	x16, x16, #0x140
    241c:	br	x17

0000000000002420 <abort@plt>:
    2420:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2424:	ldr	x17, [x16, #328]
    2428:	add	x16, x16, #0x148
    242c:	br	x17

0000000000002430 <srunner_run@plt>:
    2430:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2434:	ldr	x17, [x16, #336]
    2438:	add	x16, x16, #0x150
    243c:	br	x17

0000000000002440 <timer_create@plt>:
    2440:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2444:	ldr	x17, [x16, #344]
    2448:	add	x16, x16, #0x158
    244c:	br	x17

0000000000002450 <strcmp@plt>:
    2450:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2454:	ldr	x17, [x16, #352]
    2458:	add	x16, x16, #0x160
    245c:	br	x17

0000000000002460 <srunner_has_tap@plt>:
    2460:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2464:	ldr	x17, [x16, #360]
    2468:	add	x16, x16, #0x168
    246c:	br	x17

0000000000002470 <srunner_has_xml@plt>:
    2470:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2474:	ldr	x17, [x16, #368]
    2478:	add	x16, x16, #0x170
    247c:	br	x17

0000000000002480 <fread@plt>:
    2480:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2484:	ldr	x17, [x16, #376]
    2488:	add	x16, x16, #0x178
    248c:	br	x17

0000000000002490 <setpgid@plt>:
    2490:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2494:	ldr	x17, [x16, #384]
    2498:	add	x16, x16, #0x180
    249c:	br	x17

00000000000024a0 <srunner_ntests_run@plt>:
    24a0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    24a4:	ldr	x17, [x16, #392]
    24a8:	add	x16, x16, #0x188
    24ac:	br	x17

00000000000024b0 <free@plt>:
    24b0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    24b4:	ldr	x17, [x16, #400]
    24b8:	add	x16, x16, #0x190
    24bc:	br	x17

00000000000024c0 <getpgrp@plt>:
    24c0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    24c4:	ldr	x17, [x16, #408]
    24c8:	add	x16, x16, #0x198
    24cc:	br	x17

00000000000024d0 <timer_delete@plt>:
    24d0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    24d4:	ldr	x17, [x16, #416]
    24d8:	add	x16, x16, #0x1a0
    24dc:	br	x17

00000000000024e0 <suite_tcase@plt>:
    24e0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    24e4:	ldr	x17, [x16, #424]
    24e8:	add	x16, x16, #0x1a8
    24ec:	br	x17

00000000000024f0 <srunner_log_fname@plt>:
    24f0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    24f4:	ldr	x17, [x16, #432]
    24f8:	add	x16, x16, #0x1b0
    24fc:	br	x17

0000000000002500 <killpg@plt>:
    2500:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2504:	ldr	x17, [x16, #440]
    2508:	add	x16, x16, #0x1b8
    250c:	br	x17

0000000000002510 <fwrite@plt>:
    2510:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2514:	ldr	x17, [x16, #448]
    2518:	add	x16, x16, #0x1c0
    251c:	br	x17

0000000000002520 <srunner_run_tagged@plt>:
    2520:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2524:	ldr	x17, [x16, #456]
    2528:	add	x16, x16, #0x1c8
    252c:	br	x17

0000000000002530 <fflush@plt>:
    2530:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2534:	ldr	x17, [x16, #464]
    2538:	add	x16, x16, #0x1d0
    253c:	br	x17

0000000000002540 <strcpy@plt>:
    2540:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2544:	ldr	x17, [x16, #472]
    2548:	add	x16, x16, #0x1d8
    254c:	br	x17

0000000000002550 <mkstemp@plt>:
    2550:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2554:	ldr	x17, [x16, #480]
    2558:	add	x16, x16, #0x1e0
    255c:	br	x17

0000000000002560 <vsnprintf@plt>:
    2560:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2564:	ldr	x17, [x16, #488]
    2568:	add	x16, x16, #0x1e8
    256c:	br	x17

0000000000002570 <longjmp@plt>:
    2570:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2574:	ldr	x17, [x16, #496]
    2578:	add	x16, x16, #0x1f0
    257c:	br	x17

0000000000002580 <strsignal@plt>:
    2580:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2584:	ldr	x17, [x16, #504]
    2588:	add	x16, x16, #0x1f8
    258c:	br	x17

0000000000002590 <vfprintf@plt>:
    2590:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2594:	ldr	x17, [x16, #512]
    2598:	add	x16, x16, #0x200
    259c:	br	x17

00000000000025a0 <__assert_fail@plt>:
    25a0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    25a4:	ldr	x17, [x16, #520]
    25a8:	add	x16, x16, #0x208
    25ac:	br	x17

00000000000025b0 <__errno_location@plt>:
    25b0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    25b4:	ldr	x17, [x16, #528]
    25b8:	add	x16, x16, #0x210
    25bc:	br	x17

00000000000025c0 <getenv@plt>:
    25c0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    25c4:	ldr	x17, [x16, #536]
    25c8:	add	x16, x16, #0x218
    25cc:	br	x17

00000000000025d0 <pthread_mutex_lock@plt>:
    25d0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    25d4:	ldr	x17, [x16, #544]
    25d8:	add	x16, x16, #0x220
    25dc:	br	x17

00000000000025e0 <pthread_mutex_unlock@plt>:
    25e0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    25e4:	ldr	x17, [x16, #552]
    25e8:	add	x16, x16, #0x228
    25ec:	br	x17

00000000000025f0 <waitpid@plt>:
    25f0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    25f4:	ldr	x17, [x16, #560]
    25f8:	add	x16, x16, #0x230
    25fc:	br	x17

0000000000002600 <unlink@plt>:
    2600:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2604:	ldr	x17, [x16, #568]
    2608:	add	x16, x16, #0x238
    260c:	br	x17

0000000000002610 <fprintf@plt>:
    2610:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2614:	ldr	x17, [x16, #576]
    2618:	add	x16, x16, #0x240
    261c:	br	x17

0000000000002620 <ferror@plt>:
    2620:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2624:	ldr	x17, [x16, #584]
    2628:	add	x16, x16, #0x248
    262c:	br	x17

Disassembly of section .text:

0000000000002630 <suite_create@@Base-0xd4>:
    2630:	adrp	x0, 18000 <check_waitpid_and_exit@@Base+0x1229c>
    2634:	ldr	x0, [x0, #4040]
    2638:	cbz	x0, 2640 <ferror@plt+0x20>
    263c:	b	2410 <__gmon_start__@plt>
    2640:	ret
    2644:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x1329c>
    2648:	add	x0, x0, #0x268
    264c:	adrp	x1, 19000 <check_waitpid_and_exit@@Base+0x1329c>
    2650:	add	x1, x1, #0x268
    2654:	cmp	x1, x0
    2658:	b.eq	2670 <ferror@plt+0x50>  // b.none
    265c:	adrp	x1, 18000 <check_waitpid_and_exit@@Base+0x1229c>
    2660:	ldr	x1, [x1, #3968]
    2664:	cbz	x1, 2670 <ferror@plt+0x50>
    2668:	mov	x16, x1
    266c:	br	x16
    2670:	ret
    2674:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x1329c>
    2678:	add	x0, x0, #0x268
    267c:	adrp	x1, 19000 <check_waitpid_and_exit@@Base+0x1329c>
    2680:	add	x1, x1, #0x268
    2684:	sub	x1, x1, x0
    2688:	mov	x2, #0x2                   	// #2
    268c:	asr	x1, x1, #3
    2690:	sdiv	x1, x1, x2
    2694:	cbz	x1, 26ac <ferror@plt+0x8c>
    2698:	adrp	x2, 18000 <check_waitpid_and_exit@@Base+0x1229c>
    269c:	ldr	x2, [x2, #4064]
    26a0:	cbz	x2, 26ac <ferror@plt+0x8c>
    26a4:	mov	x16, x2
    26a8:	br	x16
    26ac:	ret
    26b0:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x1329c>
    26b4:	ldrb	w1, [x0, #616]
    26b8:	cbnz	w1, 26fc <ferror@plt+0xdc>
    26bc:	stp	x29, x30, [sp, #-32]!
    26c0:	mov	x29, sp
    26c4:	str	x19, [sp, #16]
    26c8:	mov	x19, x0
    26cc:	adrp	x0, 18000 <check_waitpid_and_exit@@Base+0x1229c>
    26d0:	ldr	x0, [x0, #3976]
    26d4:	cbz	x0, 26e4 <ferror@plt+0xc4>
    26d8:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x1329c>
    26dc:	ldr	x0, [x0, #592]
    26e0:	bl	2280 <__cxa_finalize@plt>
    26e4:	bl	2644 <ferror@plt+0x24>
    26e8:	mov	w0, #0x1                   	// #1
    26ec:	strb	w0, [x19, #616]
    26f0:	ldr	x19, [sp, #16]
    26f4:	ldp	x29, x30, [sp], #32
    26f8:	ret
    26fc:	ret
    2700:	b	2674 <ferror@plt+0x54>

0000000000002704 <suite_create@@Base>:
    2704:	stp	x29, x30, [sp, #-32]!
    2708:	mov	x29, sp
    270c:	stp	x19, x20, [sp, #16]
    2710:	mov	x19, x0
    2714:	mov	x0, #0x10                  	// #16
    2718:	bl	330c <_ck_assert_failed@@Base+0x238>
    271c:	mov	x20, x0
    2720:	cbnz	x19, 272c <suite_create@@Base+0x28>
    2724:	adrp	x19, 6000 <check_waitpid_and_exit@@Base+0x29c>
    2728:	add	x19, x19, #0x2ba
    272c:	str	x19, [x20]
    2730:	bl	33d0 <_ck_assert_failed@@Base+0x2fc>
    2734:	str	x0, [x20, #8]
    2738:	mov	x0, x20
    273c:	ldp	x19, x20, [sp, #16]
    2740:	ldp	x29, x30, [sp], #32
    2744:	ret

0000000000002748 <suite_tcase@@Base>:
    2748:	cbnz	x0, 2754 <suite_tcase@@Base+0xc>
    274c:	mov	w0, #0x0                   	// #0
    2750:	ret
    2754:	stp	x29, x30, [sp, #-32]!
    2758:	mov	x29, sp
    275c:	stp	x19, x20, [sp, #16]
    2760:	mov	x20, x1
    2764:	ldr	x19, [x0, #8]
    2768:	mov	x0, x19
    276c:	bl	34e4 <_ck_assert_failed@@Base+0x410>
    2770:	mov	x0, x19
    2774:	bl	34c0 <_ck_assert_failed@@Base+0x3ec>
    2778:	cbz	w0, 278c <suite_tcase@@Base+0x44>
    277c:	mov	w0, #0x0                   	// #0
    2780:	ldp	x19, x20, [sp, #16]
    2784:	ldp	x29, x30, [sp], #32
    2788:	ret
    278c:	mov	x0, x19
    2790:	bl	3528 <_ck_assert_failed@@Base+0x454>
    2794:	ldr	x1, [x0]
    2798:	mov	x0, x20
    279c:	bl	2450 <strcmp@plt>
    27a0:	cbz	w0, 27b0 <suite_tcase@@Base+0x68>
    27a4:	mov	x0, x19
    27a8:	bl	3558 <_ck_assert_failed@@Base+0x484>
    27ac:	b	2770 <suite_tcase@@Base+0x28>
    27b0:	mov	w0, #0x1                   	// #1
    27b4:	b	2780 <suite_tcase@@Base+0x38>

00000000000027b8 <tcase_create@@Base>:
    27b8:	stp	x29, x30, [sp, #-64]!
    27bc:	mov	x29, sp
    27c0:	stp	x19, x20, [sp, #16]
    27c4:	mov	x20, x0
    27c8:	mov	x0, #0x48                  	// #72
    27cc:	str	d8, [sp, #32]
    27d0:	bl	330c <_ck_assert_failed@@Base+0x238>
    27d4:	mov	x19, x0
    27d8:	cbnz	x20, 27e4 <tcase_create@@Base+0x2c>
    27dc:	adrp	x20, 6000 <check_waitpid_and_exit@@Base+0x29c>
    27e0:	add	x20, x20, #0x2ba
    27e4:	str	x20, [x19]
    27e8:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    27ec:	add	x0, x0, #0x8
    27f0:	bl	25c0 <getenv@plt>
    27f4:	mov	x20, x0
    27f8:	cbz	x0, 28dc <tcase_create@@Base+0x124>
    27fc:	add	x1, sp, #0x38
    2800:	str	xzr, [sp, #56]
    2804:	bl	2240 <strtod@plt>
    2808:	fcmpe	d0, #0.0
    280c:	fmov	d8, d0
    2810:	b.lt	28dc <tcase_create@@Base+0x124>  // b.tstop
    2814:	ldr	x0, [sp, #56]
    2818:	cmp	x0, x20
    281c:	b.eq	28dc <tcase_create@@Base+0x124>  // b.none
    2820:	ldrb	w0, [x0]
    2824:	fmov	d0, #4.000000000000000000e+00
    2828:	cmp	w0, #0x0
    282c:	fcsel	d8, d8, d0, eq  // eq = none
    2830:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    2834:	add	x0, x0, #0x1b
    2838:	bl	25c0 <getenv@plt>
    283c:	mov	x20, x0
    2840:	cbz	x0, 2870 <tcase_create@@Base+0xb8>
    2844:	add	x1, sp, #0x38
    2848:	str	xzr, [sp, #56]
    284c:	bl	2240 <strtod@plt>
    2850:	fcmpe	d0, #0.0
    2854:	b.lt	2870 <tcase_create@@Base+0xb8>  // b.tstop
    2858:	ldr	x0, [sp, #56]
    285c:	cmp	x0, x20
    2860:	b.eq	2870 <tcase_create@@Base+0xb8>  // b.none
    2864:	ldrb	w0, [x0]
    2868:	cbnz	w0, 2870 <tcase_create@@Base+0xb8>
    286c:	fmul	d8, d8, d0
    2870:	fcvtms	x0, d8
    2874:	frintm	d0, d8
    2878:	fsub	d8, d8, d0
    287c:	str	x0, [x19, #8]
    2880:	mov	x0, #0xcd6500000000        	// #225833675390976
    2884:	movk	x0, #0x41cd, lsl #48
    2888:	fmov	d0, x0
    288c:	fmul	d8, d8, d0
    2890:	fcvtzs	d8, d8
    2894:	str	d8, [x19, #16]
    2898:	bl	33d0 <_ck_assert_failed@@Base+0x2fc>
    289c:	str	x0, [x19, #24]
    28a0:	bl	33d0 <_ck_assert_failed@@Base+0x2fc>
    28a4:	str	x0, [x19, #32]
    28a8:	bl	33d0 <_ck_assert_failed@@Base+0x2fc>
    28ac:	str	x0, [x19, #48]
    28b0:	bl	33d0 <_ck_assert_failed@@Base+0x2fc>
    28b4:	str	x0, [x19, #40]
    28b8:	bl	33d0 <_ck_assert_failed@@Base+0x2fc>
    28bc:	str	x0, [x19, #56]
    28c0:	bl	33d0 <_ck_assert_failed@@Base+0x2fc>
    28c4:	ldr	d8, [sp, #32]
    28c8:	str	x0, [x19, #64]
    28cc:	mov	x0, x19
    28d0:	ldp	x19, x20, [sp, #16]
    28d4:	ldp	x29, x30, [sp], #64
    28d8:	ret
    28dc:	fmov	d8, #4.000000000000000000e+00
    28e0:	b	2830 <tcase_create@@Base+0x78>
    28e4:	stp	x29, x30, [sp, #-48]!
    28e8:	mov	x29, sp
    28ec:	stp	x19, x20, [sp, #16]
    28f0:	mov	x19, x0
    28f4:	str	x21, [sp, #32]
    28f8:	bl	33d0 <_ck_assert_failed@@Base+0x2fc>
    28fc:	mov	x20, x0
    2900:	cbz	x19, 292c <tcase_create@@Base+0x174>
    2904:	mov	x0, x19
    2908:	adrp	x19, 6000 <check_waitpid_and_exit@@Base+0x29c>
    290c:	bl	23d0 <strdup@plt>
    2910:	add	x19, x19, #0x8f2
    2914:	mov	x21, x0
    2918:	mov	x1, x19
    291c:	bl	21e0 <strtok@plt>
    2920:	cbnz	x0, 2940 <tcase_create@@Base+0x188>
    2924:	mov	x0, x21
    2928:	bl	24b0 <free@plt>
    292c:	mov	x0, x20
    2930:	ldp	x19, x20, [sp, #16]
    2934:	ldr	x21, [sp, #32]
    2938:	ldp	x29, x30, [sp], #48
    293c:	ret
    2940:	bl	23d0 <strdup@plt>
    2944:	mov	x1, x0
    2948:	mov	x0, x20
    294c:	bl	3474 <_ck_assert_failed@@Base+0x3a0>
    2950:	mov	x1, x19
    2954:	mov	x0, #0x0                   	// #0
    2958:	b	291c <tcase_create@@Base+0x164>

000000000000295c <tcase_set_tags@@Base>:
    295c:	stp	x29, x30, [sp, #-32]!
    2960:	mov	x29, sp
    2964:	stp	x19, x20, [sp, #16]
    2968:	mov	x19, x0
    296c:	mov	x20, x1
    2970:	ldr	x0, [x0, #64]
    2974:	cbz	x0, 298c <tcase_set_tags@@Base+0x30>
    2978:	adrp	x1, 18000 <check_waitpid_and_exit@@Base+0x1229c>
    297c:	ldr	x1, [x1, #4048]
    2980:	bl	3590 <_ck_assert_failed@@Base+0x4bc>
    2984:	ldr	x0, [x19, #64]
    2988:	bl	34f8 <_ck_assert_failed@@Base+0x424>
    298c:	mov	x0, x20
    2990:	bl	28e4 <tcase_create@@Base+0x12c>
    2994:	str	x0, [x19, #64]
    2998:	ldp	x19, x20, [sp, #16]
    299c:	ldp	x29, x30, [sp], #32
    29a0:	ret
    29a4:	cbnz	x1, 29b0 <tcase_set_tags@@Base+0x54>
    29a8:	mov	w0, #0x0                   	// #0
    29ac:	ret
    29b0:	stp	x29, x30, [sp, #-48]!
    29b4:	mov	x29, sp
    29b8:	stp	x19, x20, [sp, #16]
    29bc:	mov	x20, x0
    29c0:	mov	x19, x1
    29c4:	mov	x0, x1
    29c8:	str	x21, [sp, #32]
    29cc:	bl	34e4 <_ck_assert_failed@@Base+0x410>
    29d0:	mov	x0, x19
    29d4:	bl	34c0 <_ck_assert_failed@@Base+0x3ec>
    29d8:	cbz	w0, 29f0 <tcase_set_tags@@Base+0x94>
    29dc:	mov	w0, #0x0                   	// #0
    29e0:	ldp	x19, x20, [sp, #16]
    29e4:	ldr	x21, [sp, #32]
    29e8:	ldp	x29, x30, [sp], #48
    29ec:	ret
    29f0:	ldr	x0, [x20, #64]
    29f4:	bl	34e4 <_ck_assert_failed@@Base+0x410>
    29f8:	ldr	x0, [x20, #64]
    29fc:	bl	34c0 <_ck_assert_failed@@Base+0x3ec>
    2a00:	cbz	w0, 2a10 <tcase_set_tags@@Base+0xb4>
    2a04:	mov	x0, x19
    2a08:	bl	3558 <_ck_assert_failed@@Base+0x484>
    2a0c:	b	29d0 <tcase_set_tags@@Base+0x74>
    2a10:	ldr	x0, [x20, #64]
    2a14:	bl	3528 <_ck_assert_failed@@Base+0x454>
    2a18:	mov	x21, x0
    2a1c:	mov	x0, x19
    2a20:	bl	3528 <_ck_assert_failed@@Base+0x454>
    2a24:	mov	x1, x0
    2a28:	mov	x0, x21
    2a2c:	bl	2450 <strcmp@plt>
    2a30:	cbz	w0, 2a40 <tcase_set_tags@@Base+0xe4>
    2a34:	ldr	x0, [x20, #64]
    2a38:	bl	3558 <_ck_assert_failed@@Base+0x484>
    2a3c:	b	29f8 <tcase_set_tags@@Base+0x9c>
    2a40:	mov	w0, #0x1                   	// #1
    2a44:	b	29e0 <tcase_set_tags@@Base+0x84>

0000000000002a48 <suite_add_tcase@@Base>:
    2a48:	cmp	x0, #0x0
    2a4c:	ccmp	x1, #0x0, #0x4, ne  // ne = any
    2a50:	b.eq	2a94 <suite_add_tcase@@Base+0x4c>  // b.none
    2a54:	stp	x29, x30, [sp, #-32]!
    2a58:	mov	x29, sp
    2a5c:	stp	x19, x20, [sp, #16]
    2a60:	mov	x19, x0
    2a64:	mov	x20, x1
    2a68:	ldr	x0, [x0, #8]
    2a6c:	bl	35e8 <_ck_assert_failed@@Base+0x514>
    2a70:	cbnz	w0, 2a88 <suite_add_tcase@@Base+0x40>
    2a74:	mov	x1, x20
    2a78:	ldr	x0, [x19, #8]
    2a7c:	ldp	x19, x20, [sp, #16]
    2a80:	ldp	x29, x30, [sp], #32
    2a84:	b	3474 <_ck_assert_failed@@Base+0x3a0>
    2a88:	ldp	x19, x20, [sp, #16]
    2a8c:	ldp	x29, x30, [sp], #32
    2a90:	ret
    2a94:	ret

0000000000002a98 <_tcase_add_test@@Base>:
    2a98:	cmp	x0, #0x0
    2a9c:	ccmp	x1, #0x0, #0x4, ne  // ne = any
    2aa0:	b.eq	2b04 <_tcase_add_test@@Base+0x6c>  // b.none
    2aa4:	stp	x29, x30, [sp, #-64]!
    2aa8:	mov	x29, sp
    2aac:	stp	x19, x20, [sp, #16]
    2ab0:	mov	x20, x1
    2ab4:	mov	x19, x0
    2ab8:	mov	x0, #0x18                  	// #24
    2abc:	stp	x21, x22, [sp, #32]
    2ac0:	mov	w22, w2
    2ac4:	mov	w21, w3
    2ac8:	stp	x23, x24, [sp, #48]
    2acc:	mov	w24, w4
    2ad0:	mov	w23, w5
    2ad4:	bl	330c <_ck_assert_failed@@Base+0x238>
    2ad8:	mov	x1, x0
    2adc:	strb	w21, [x0, #20]
    2ae0:	ldr	x0, [x19, #24]
    2ae4:	str	x20, [x1]
    2ae8:	stp	w24, w23, [x1, #8]
    2aec:	str	w22, [x1, #16]
    2af0:	ldp	x19, x20, [sp, #16]
    2af4:	ldp	x21, x22, [sp, #32]
    2af8:	ldp	x23, x24, [sp, #48]
    2afc:	ldp	x29, x30, [sp], #64
    2b00:	b	3474 <_ck_assert_failed@@Base+0x3a0>
    2b04:	ret

0000000000002b08 <tcase_add_unchecked_fixture@@Base>:
    2b08:	stp	x29, x30, [sp, #-48]!
    2b0c:	mov	x29, sp
    2b10:	stp	x19, x20, [sp, #16]
    2b14:	mov	x20, x0
    2b18:	mov	x19, x2
    2b1c:	stp	x21, x22, [sp, #32]
    2b20:	cbz	x1, 2b48 <tcase_add_unchecked_fixture@@Base+0x40>
    2b24:	mov	x21, x1
    2b28:	mov	x0, #0x10                  	// #16
    2b2c:	ldr	x22, [x20, #32]
    2b30:	bl	330c <_ck_assert_failed@@Base+0x238>
    2b34:	mov	x1, x0
    2b38:	mov	x0, x22
    2b3c:	str	wzr, [x1]
    2b40:	str	x21, [x1, #8]
    2b44:	bl	3474 <_ck_assert_failed@@Base+0x3a0>
    2b48:	cbz	x19, 2b78 <tcase_add_unchecked_fixture@@Base+0x70>
    2b4c:	mov	x0, #0x10                  	// #16
    2b50:	ldr	x20, [x20, #40]
    2b54:	bl	330c <_ck_assert_failed@@Base+0x238>
    2b58:	mov	x1, x0
    2b5c:	ldp	x21, x22, [sp, #32]
    2b60:	mov	x0, x20
    2b64:	str	wzr, [x1]
    2b68:	str	x19, [x1, #8]
    2b6c:	ldp	x19, x20, [sp, #16]
    2b70:	ldp	x29, x30, [sp], #48
    2b74:	b	3414 <_ck_assert_failed@@Base+0x340>
    2b78:	ldp	x19, x20, [sp, #16]
    2b7c:	ldp	x21, x22, [sp, #32]
    2b80:	ldp	x29, x30, [sp], #48
    2b84:	ret

0000000000002b88 <tcase_add_checked_fixture@@Base>:
    2b88:	stp	x29, x30, [sp, #-48]!
    2b8c:	mov	x29, sp
    2b90:	stp	x19, x20, [sp, #16]
    2b94:	mov	x20, x0
    2b98:	mov	x19, x2
    2b9c:	stp	x21, x22, [sp, #32]
    2ba0:	cbz	x1, 2bcc <tcase_add_checked_fixture@@Base+0x44>
    2ba4:	mov	x21, x1
    2ba8:	mov	x0, #0x10                  	// #16
    2bac:	ldr	x22, [x20, #48]
    2bb0:	bl	330c <_ck_assert_failed@@Base+0x238>
    2bb4:	mov	x1, x0
    2bb8:	mov	w0, #0x1                   	// #1
    2bbc:	str	w0, [x1]
    2bc0:	mov	x0, x22
    2bc4:	str	x21, [x1, #8]
    2bc8:	bl	3474 <_ck_assert_failed@@Base+0x3a0>
    2bcc:	cbz	x19, 2c00 <tcase_add_checked_fixture@@Base+0x78>
    2bd0:	mov	x0, #0x10                  	// #16
    2bd4:	ldr	x20, [x20, #56]
    2bd8:	bl	330c <_ck_assert_failed@@Base+0x238>
    2bdc:	mov	x1, x0
    2be0:	mov	w0, #0x1                   	// #1
    2be4:	ldp	x21, x22, [sp, #32]
    2be8:	str	w0, [x1]
    2bec:	mov	x0, x20
    2bf0:	str	x19, [x1, #8]
    2bf4:	ldp	x19, x20, [sp, #16]
    2bf8:	ldp	x29, x30, [sp], #48
    2bfc:	b	3414 <_ck_assert_failed@@Base+0x340>
    2c00:	ldp	x19, x20, [sp, #16]
    2c04:	ldp	x21, x22, [sp, #32]
    2c08:	ldp	x29, x30, [sp], #48
    2c0c:	ret

0000000000002c10 <tcase_set_timeout@@Base>:
    2c10:	fcmpe	d0, #0.0
    2c14:	b.lt	2ca8 <tcase_set_timeout@@Base+0x98>  // b.tstop
    2c18:	stp	x29, x30, [sp, #-64]!
    2c1c:	mov	x29, sp
    2c20:	str	d8, [sp, #32]
    2c24:	fmov	d8, d0
    2c28:	stp	x19, x20, [sp, #16]
    2c2c:	mov	x19, x0
    2c30:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    2c34:	add	x0, x0, #0x1b
    2c38:	bl	25c0 <getenv@plt>
    2c3c:	mov	x20, x0
    2c40:	cbz	x0, 2c70 <tcase_set_timeout@@Base+0x60>
    2c44:	add	x1, sp, #0x38
    2c48:	str	xzr, [sp, #56]
    2c4c:	bl	2240 <strtod@plt>
    2c50:	fcmpe	d0, #0.0
    2c54:	b.lt	2c70 <tcase_set_timeout@@Base+0x60>  // b.tstop
    2c58:	ldr	x0, [sp, #56]
    2c5c:	cmp	x0, x20
    2c60:	b.eq	2c70 <tcase_set_timeout@@Base+0x60>  // b.none
    2c64:	ldrb	w0, [x0]
    2c68:	cbnz	w0, 2c70 <tcase_set_timeout@@Base+0x60>
    2c6c:	fmul	d8, d8, d0
    2c70:	fcvtms	x0, d8
    2c74:	frintm	d0, d8
    2c78:	fsub	d8, d8, d0
    2c7c:	str	x0, [x19, #8]
    2c80:	mov	x0, #0xcd6500000000        	// #225833675390976
    2c84:	movk	x0, #0x41cd, lsl #48
    2c88:	fmov	d0, x0
    2c8c:	fmul	d8, d8, d0
    2c90:	fcvtzs	d8, d8
    2c94:	str	d8, [x19, #16]
    2c98:	ldp	x19, x20, [sp, #16]
    2c9c:	ldr	d8, [sp, #32]
    2ca0:	ldp	x29, x30, [sp], #64
    2ca4:	ret
    2ca8:	ret

0000000000002cac <tcase_fn_start@@Base>:
    2cac:	stp	x29, x30, [sp, #-48]!
    2cb0:	mov	x29, sp
    2cb4:	stp	x19, x20, [sp, #16]
    2cb8:	mov	x20, x1
    2cbc:	mov	x19, x0
    2cc0:	mov	w0, #0x2                   	// #2
    2cc4:	str	x21, [sp, #32]
    2cc8:	mov	w21, w2
    2ccc:	bl	4034 <srunner_has_tap@@Base+0x4ac>
    2cd0:	mov	w1, w21
    2cd4:	mov	x0, x20
    2cd8:	bl	3ff4 <srunner_has_tap@@Base+0x46c>
    2cdc:	adrp	x1, 18000 <check_waitpid_and_exit@@Base+0x1229c>
    2ce0:	ldr	x21, [sp, #32]
    2ce4:	ldr	x1, [x1, #3992]
    2ce8:	str	x19, [x1]
    2cec:	ldp	x19, x20, [sp, #16]
    2cf0:	ldp	x29, x30, [sp], #48
    2cf4:	ret

0000000000002cf8 <tcase_name@@Base>:
    2cf8:	adrp	x0, 18000 <check_waitpid_and_exit@@Base+0x1229c>
    2cfc:	ldr	x0, [x0, #3992]
    2d00:	ldr	x0, [x0]
    2d04:	ret

0000000000002d08 <_mark_point@@Base>:
    2d08:	b	3ff4 <srunner_has_tap@@Base+0x46c>

0000000000002d0c <srunner_create@@Base>:
    2d0c:	stp	x29, x30, [sp, #-32]!
    2d10:	mov	x29, sp
    2d14:	stp	x19, x20, [sp, #16]
    2d18:	mov	x20, x0
    2d1c:	mov	x0, #0x40                  	// #64
    2d20:	bl	330c <_ck_assert_failed@@Base+0x238>
    2d24:	mov	x19, x0
    2d28:	bl	33d0 <_ck_assert_failed@@Base+0x2fc>
    2d2c:	str	x0, [x19]
    2d30:	cbz	x20, 2d3c <srunner_create@@Base+0x30>
    2d34:	mov	x1, x20
    2d38:	bl	3474 <_ck_assert_failed@@Base+0x3a0>
    2d3c:	mov	x0, #0xc                   	// #12
    2d40:	bl	330c <_ck_assert_failed@@Base+0x238>
    2d44:	str	x0, [x19, #8]
    2d48:	str	xzr, [x0]
    2d4c:	str	wzr, [x0, #8]
    2d50:	bl	33d0 <_ck_assert_failed@@Base+0x2fc>
    2d54:	stp	x0, xzr, [x19, #16]
    2d58:	mov	x0, x19
    2d5c:	stp	xzr, xzr, [x19, #32]
    2d60:	str	xzr, [x19, #48]
    2d64:	str	wzr, [x19, #56]
    2d68:	ldp	x19, x20, [sp, #16]
    2d6c:	ldp	x29, x30, [sp], #32
    2d70:	ret

0000000000002d74 <srunner_add_suite@@Base>:
    2d74:	cbz	x1, 2d80 <srunner_add_suite@@Base+0xc>
    2d78:	ldr	x0, [x0]
    2d7c:	b	3474 <_ck_assert_failed@@Base+0x3a0>
    2d80:	ret

0000000000002d84 <srunner_ntests_failed@@Base>:
    2d84:	ldr	x1, [x0, #8]
    2d88:	ldp	w2, w0, [x1, #4]
    2d8c:	add	w0, w2, w0
    2d90:	ret

0000000000002d94 <srunner_ntests_run@@Base>:
    2d94:	ldr	x0, [x0, #8]
    2d98:	ldr	w0, [x0]
    2d9c:	ret

0000000000002da0 <srunner_failures@@Base>:
    2da0:	stp	x29, x30, [sp, #-48]!
    2da4:	mov	x29, sp
    2da8:	stp	x19, x20, [sp, #16]
    2dac:	mov	x20, x0
    2db0:	str	x21, [sp, #32]
    2db4:	bl	2300 <srunner_ntests_failed@plt>
    2db8:	sbfiz	x0, x0, #3, #32
    2dbc:	bl	330c <_ck_assert_failed@@Base+0x238>
    2dc0:	ldr	x20, [x20, #16]
    2dc4:	mov	x19, x0
    2dc8:	mov	w21, #0x0                   	// #0
    2dcc:	mov	x0, x20
    2dd0:	bl	34e4 <_ck_assert_failed@@Base+0x410>
    2dd4:	mov	x0, x20
    2dd8:	bl	34c0 <_ck_assert_failed@@Base+0x3ec>
    2ddc:	cbz	w0, 2df4 <srunner_failures@@Base+0x54>
    2de0:	mov	x0, x19
    2de4:	ldp	x19, x20, [sp, #16]
    2de8:	ldr	x21, [sp, #32]
    2dec:	ldp	x29, x30, [sp], #48
    2df0:	ret
    2df4:	mov	x0, x20
    2df8:	bl	3528 <_ck_assert_failed@@Base+0x454>
    2dfc:	ldr	w1, [x0]
    2e00:	cmp	w1, #0x1
    2e04:	b.eq	2e10 <srunner_failures@@Base+0x70>  // b.none
    2e08:	str	x0, [x19, w21, sxtw #3]
    2e0c:	add	w21, w21, #0x1
    2e10:	mov	x0, x20
    2e14:	bl	3558 <_ck_assert_failed@@Base+0x484>
    2e18:	b	2dd4 <srunner_failures@@Base+0x34>

0000000000002e1c <srunner_results@@Base>:
    2e1c:	stp	x29, x30, [sp, #-48]!
    2e20:	mov	x29, sp
    2e24:	stp	x19, x20, [sp, #16]
    2e28:	mov	x20, x0
    2e2c:	str	x21, [sp, #32]
    2e30:	bl	24a0 <srunner_ntests_run@plt>
    2e34:	sbfiz	x0, x0, #3, #32
    2e38:	bl	330c <_ck_assert_failed@@Base+0x238>
    2e3c:	ldr	x20, [x20, #16]
    2e40:	mov	x19, x0
    2e44:	mov	x21, x0
    2e48:	mov	x0, x20
    2e4c:	bl	34e4 <_ck_assert_failed@@Base+0x410>
    2e50:	mov	x0, x20
    2e54:	bl	34c0 <_ck_assert_failed@@Base+0x3ec>
    2e58:	cbz	w0, 2e70 <srunner_results@@Base+0x54>
    2e5c:	mov	x0, x19
    2e60:	ldp	x19, x20, [sp, #16]
    2e64:	ldr	x21, [sp, #32]
    2e68:	ldp	x29, x30, [sp], #48
    2e6c:	ret
    2e70:	mov	x0, x20
    2e74:	bl	3528 <_ck_assert_failed@@Base+0x454>
    2e78:	str	x0, [x21], #8
    2e7c:	mov	x0, x20
    2e80:	bl	3558 <_ck_assert_failed@@Base+0x484>
    2e84:	b	2e50 <srunner_results@@Base+0x34>
    2e88:	stp	x29, x30, [sp, #-16]!
    2e8c:	mov	x0, #0x38                  	// #56
    2e90:	mov	x29, sp
    2e94:	bl	330c <_ck_assert_failed@@Base+0x238>
    2e98:	stp	xzr, xzr, [x0]
    2e9c:	mov	w2, #0xffffffff            	// #-1
    2ea0:	str	w2, [x0, #16]
    2ea4:	str	w2, [x0, #24]
    2ea8:	stp	xzr, xzr, [x0, #32]
    2eac:	str	xzr, [x0, #48]
    2eb0:	ldp	x29, x30, [sp], #16
    2eb4:	ret
    2eb8:	stp	x29, x30, [sp, #-32]!
    2ebc:	mov	x29, sp
    2ec0:	str	x19, [sp, #16]
    2ec4:	mov	x19, x0
    2ec8:	ldr	x0, [x0, #8]
    2ecc:	bl	24b0 <free@plt>
    2ed0:	ldr	x0, [x19, #48]
    2ed4:	bl	24b0 <free@plt>
    2ed8:	mov	x0, x19
    2edc:	ldr	x19, [sp, #16]
    2ee0:	ldp	x29, x30, [sp], #32
    2ee4:	b	24b0 <free@plt>

0000000000002ee8 <srunner_free@@Base>:
    2ee8:	cbz	x0, 3060 <srunner_free@@Base+0x178>
    2eec:	stp	x29, x30, [sp, #-64]!
    2ef0:	mov	x29, sp
    2ef4:	stp	x19, x20, [sp, #16]
    2ef8:	mov	x20, x0
    2efc:	ldr	x0, [x0, #8]
    2f00:	stp	x21, x22, [sp, #32]
    2f04:	adrp	x21, 18000 <check_waitpid_and_exit@@Base+0x1229c>
    2f08:	stp	x23, x24, [sp, #48]
    2f0c:	bl	24b0 <free@plt>
    2f10:	ldr	x23, [x20]
    2f14:	mov	x0, x23
    2f18:	bl	34e4 <_ck_assert_failed@@Base+0x410>
    2f1c:	ldr	x21, [x21, #4048]
    2f20:	mov	x0, x23
    2f24:	bl	34c0 <_ck_assert_failed@@Base+0x3ec>
    2f28:	cbz	w0, 2f6c <srunner_free@@Base+0x84>
    2f2c:	ldr	x0, [x20]
    2f30:	bl	34f8 <_ck_assert_failed@@Base+0x424>
    2f34:	ldr	x19, [x20, #16]
    2f38:	mov	x0, x19
    2f3c:	bl	34e4 <_ck_assert_failed@@Base+0x410>
    2f40:	mov	x0, x19
    2f44:	bl	34c0 <_ck_assert_failed@@Base+0x3ec>
    2f48:	cbz	w0, 3048 <srunner_free@@Base+0x160>
    2f4c:	ldr	x0, [x20, #16]
    2f50:	bl	34f8 <_ck_assert_failed@@Base+0x424>
    2f54:	mov	x0, x20
    2f58:	ldp	x19, x20, [sp, #16]
    2f5c:	ldp	x21, x22, [sp, #32]
    2f60:	ldp	x23, x24, [sp, #48]
    2f64:	ldp	x29, x30, [sp], #64
    2f68:	b	24b0 <free@plt>
    2f6c:	mov	x0, x23
    2f70:	bl	3528 <_ck_assert_failed@@Base+0x454>
    2f74:	mov	x22, x0
    2f78:	cbz	x0, 2fa4 <srunner_free@@Base+0xbc>
    2f7c:	ldr	x24, [x0, #8]
    2f80:	mov	x0, x24
    2f84:	bl	34e4 <_ck_assert_failed@@Base+0x410>
    2f88:	mov	x0, x24
    2f8c:	bl	34c0 <_ck_assert_failed@@Base+0x3ec>
    2f90:	cbz	w0, 2fb0 <srunner_free@@Base+0xc8>
    2f94:	ldr	x0, [x22, #8]
    2f98:	bl	34f8 <_ck_assert_failed@@Base+0x424>
    2f9c:	mov	x0, x22
    2fa0:	bl	24b0 <free@plt>
    2fa4:	mov	x0, x23
    2fa8:	bl	3558 <_ck_assert_failed@@Base+0x484>
    2fac:	b	2f20 <srunner_free@@Base+0x38>
    2fb0:	mov	x0, x24
    2fb4:	bl	3528 <_ck_assert_failed@@Base+0x454>
    2fb8:	mov	x19, x0
    2fbc:	mov	x1, x21
    2fc0:	ldr	x0, [x0, #24]
    2fc4:	bl	3590 <_ck_assert_failed@@Base+0x4bc>
    2fc8:	ldr	x0, [x19, #32]
    2fcc:	mov	x1, x21
    2fd0:	bl	3590 <_ck_assert_failed@@Base+0x4bc>
    2fd4:	ldr	x0, [x19, #48]
    2fd8:	mov	x1, x21
    2fdc:	bl	3590 <_ck_assert_failed@@Base+0x4bc>
    2fe0:	ldr	x0, [x19, #40]
    2fe4:	mov	x1, x21
    2fe8:	bl	3590 <_ck_assert_failed@@Base+0x4bc>
    2fec:	ldr	x0, [x19, #56]
    2ff0:	mov	x1, x21
    2ff4:	bl	3590 <_ck_assert_failed@@Base+0x4bc>
    2ff8:	ldr	x0, [x19, #64]
    2ffc:	mov	x1, x21
    3000:	bl	3590 <_ck_assert_failed@@Base+0x4bc>
    3004:	ldr	x0, [x19, #24]
    3008:	bl	34f8 <_ck_assert_failed@@Base+0x424>
    300c:	ldr	x0, [x19, #32]
    3010:	bl	34f8 <_ck_assert_failed@@Base+0x424>
    3014:	ldr	x0, [x19, #48]
    3018:	bl	34f8 <_ck_assert_failed@@Base+0x424>
    301c:	ldr	x0, [x19, #40]
    3020:	bl	34f8 <_ck_assert_failed@@Base+0x424>
    3024:	ldr	x0, [x19, #56]
    3028:	bl	34f8 <_ck_assert_failed@@Base+0x424>
    302c:	ldr	x0, [x19, #64]
    3030:	bl	34f8 <_ck_assert_failed@@Base+0x424>
    3034:	mov	x0, x19
    3038:	bl	24b0 <free@plt>
    303c:	mov	x0, x24
    3040:	bl	3558 <_ck_assert_failed@@Base+0x484>
    3044:	b	2f88 <srunner_free@@Base+0xa0>
    3048:	mov	x0, x19
    304c:	bl	3528 <_ck_assert_failed@@Base+0x454>
    3050:	bl	2eb8 <srunner_results@@Base+0x9c>
    3054:	mov	x0, x19
    3058:	bl	3558 <_ck_assert_failed@@Base+0x484>
    305c:	b	2f40 <srunner_free@@Base+0x58>
    3060:	ret

0000000000003064 <tr_msg@@Base>:
    3064:	ldr	x0, [x0, #48]
    3068:	ret

000000000000306c <tr_lno@@Base>:
    306c:	ldr	w0, [x0, #16]
    3070:	ret

0000000000003074 <tr_lfile@@Base>:
    3074:	ldr	x0, [x0, #8]
    3078:	ret

000000000000307c <tr_rtype@@Base>:
    307c:	ldr	w0, [x0]
    3080:	ret

0000000000003084 <tr_ctx@@Base>:
    3084:	ldr	w0, [x0, #4]
    3088:	ret

000000000000308c <tr_tcname@@Base>:
    308c:	ldr	x0, [x0, #32]
    3090:	ret
    3094:	cmp	w0, #0x2
    3098:	b.hi	30a8 <tr_tcname@@Base+0x1c>  // b.pmore
    309c:	adrp	x1, 19000 <check_waitpid_and_exit@@Base+0x1329c>
    30a0:	str	w0, [x1, #600]
    30a4:	ret
    30a8:	stp	x29, x30, [sp, #-16]!
    30ac:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    30b0:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    30b4:	mov	x29, sp
    30b8:	add	x1, x1, #0x31
    30bc:	add	x0, x0, #0x39
    30c0:	mov	w2, #0x24a                 	// #586
    30c4:	bl	31fc <_ck_assert_failed@@Base+0x128>
    30c8:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x1329c>
    30cc:	ldr	w0, [x0, #600]
    30d0:	ret

00000000000030d4 <_ck_assert_failed@@Base>:
    30d4:	mov	x12, #0x2110                	// #8464
    30d8:	sub	sp, sp, x12
    30dc:	stp	x29, x30, [sp]
    30e0:	mov	x29, sp
    30e4:	str	x19, [sp, #16]
    30e8:	mov	x19, x2
    30ec:	add	x2, sp, #0x2, lsl #12
    30f0:	str	x3, [sp, #8424]
    30f4:	str	x4, [sp, #8432]
    30f8:	str	x5, [sp, #8440]
    30fc:	str	x6, [sp, #8448]
    3100:	str	x7, [sp, #8456]
    3104:	str	q0, [x2, #96]
    3108:	str	q1, [x2, #112]
    310c:	str	q2, [x2, #128]
    3110:	str	q3, [x2, #144]
    3114:	str	q4, [x2, #160]
    3118:	str	q5, [x2, #176]
    311c:	str	q6, [x2, #192]
    3120:	str	q7, [x2, #208]
    3124:	bl	3ff4 <srunner_has_tap@@Base+0x46c>
    3128:	mov	x10, #0x2110                	// #8464
    312c:	add	x0, sp, x10
    3130:	mov	x11, #0x20e0                	// #8416
    3134:	stp	x0, x0, [sp, #64]
    3138:	add	x0, sp, x11
    313c:	ldr	x2, [sp, #8424]
    3140:	str	x0, [sp, #80]
    3144:	mov	w0, #0xffffff80            	// #-128
    3148:	str	w0, [sp, #92]
    314c:	mov	w0, #0xffffffe0            	// #-32
    3150:	str	w0, [sp, #88]
    3154:	cbz	x2, 317c <_ck_assert_failed@@Base+0xa8>
    3158:	ldp	x0, x1, [sp, #64]
    315c:	stp	x0, x1, [sp, #32]
    3160:	add	x19, sp, #0x60
    3164:	ldp	x0, x1, [sp, #80]
    3168:	add	x3, sp, #0x20
    316c:	stp	x0, x1, [sp, #48]
    3170:	mov	x0, x19
    3174:	mov	x1, #0x2000                	// #8192
    3178:	bl	2560 <vsnprintf@plt>
    317c:	mov	x0, x19
    3180:	bl	3fa0 <srunner_has_tap@@Base+0x418>
    3184:	bl	30c8 <tr_tcname@@Base+0x3c>
    3188:	cmp	w0, #0x1
    318c:	b.ne	3194 <_ck_assert_failed@@Base+0xc0>  // b.any
    3190:	bl	21c0 <_exit@plt>
    3194:	adrp	x0, 18000 <check_waitpid_and_exit@@Base+0x1229c>
    3198:	mov	w1, #0x1                   	// #1
    319c:	ldr	x0, [x0, #4056]
    31a0:	bl	2570 <longjmp@plt>
    31a4:	stp	x29, x30, [sp, #-48]!
    31a8:	mov	x1, #0x0                   	// #0
    31ac:	mov	w0, #0x1                   	// #1
    31b0:	mov	x29, sp
    31b4:	add	x2, sp, #0x28
    31b8:	str	x19, [sp, #16]
    31bc:	adrp	x19, 19000 <check_waitpid_and_exit@@Base+0x1329c>
    31c0:	bl	2440 <timer_create@plt>
    31c4:	cbnz	w0, 31f0 <_ck_assert_failed@@Base+0x11c>
    31c8:	ldr	x0, [sp, #40]
    31cc:	bl	24d0 <timer_delete@plt>
    31d0:	add	x0, x19, #0x258
    31d4:	mov	w1, #0x1                   	// #1
    31d8:	str	w1, [x0, #4]
    31dc:	add	x19, x19, #0x258
    31e0:	ldr	w0, [x19, #4]
    31e4:	ldr	x19, [sp, #16]
    31e8:	ldp	x29, x30, [sp], #48
    31ec:	ret
    31f0:	add	x0, x19, #0x258
    31f4:	str	wzr, [x0, #4]
    31f8:	b	31dc <_ck_assert_failed@@Base+0x108>
    31fc:	stp	x29, x30, [sp, #-304]!
    3200:	mov	x29, sp
    3204:	str	x23, [sp, #48]
    3208:	adrp	x23, 18000 <check_waitpid_and_exit@@Base+0x1229c>
    320c:	stp	x19, x20, [sp, #16]
    3210:	mov	x19, x0
    3214:	ldr	x20, [x23, #3984]
    3218:	str	q0, [sp, #128]
    321c:	str	q1, [sp, #144]
    3220:	str	q2, [sp, #160]
    3224:	str	q3, [sp, #176]
    3228:	str	q4, [sp, #192]
    322c:	str	q5, [sp, #208]
    3230:	str	q6, [sp, #224]
    3234:	str	q7, [sp, #240]
    3238:	stp	x3, x4, [sp, #264]
    323c:	stp	x5, x6, [sp, #280]
    3240:	str	x7, [sp, #296]
    3244:	stp	x21, x22, [sp, #32]
    3248:	mov	x21, x1
    324c:	mov	w22, w2
    3250:	ldr	x0, [x20]
    3254:	bl	2530 <fflush@plt>
    3258:	ldr	x0, [x20]
    325c:	mov	w3, w22
    3260:	mov	x2, x21
    3264:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    3268:	add	x1, x1, #0x57
    326c:	bl	2610 <fprintf@plt>
    3270:	add	x0, sp, #0x130
    3274:	stp	x0, x0, [sp, #96]
    3278:	add	x0, sp, #0x100
    327c:	str	x0, [sp, #112]
    3280:	mov	w0, #0xffffffd8            	// #-40
    3284:	str	w0, [sp, #120]
    3288:	mov	w0, #0xffffff80            	// #-128
    328c:	str	w0, [sp, #124]
    3290:	add	x2, sp, #0x40
    3294:	ldp	x0, x1, [sp, #96]
    3298:	stp	x0, x1, [sp, #64]
    329c:	ldp	x0, x1, [sp, #112]
    32a0:	stp	x0, x1, [sp, #80]
    32a4:	ldr	x0, [x20]
    32a8:	mov	x1, x19
    32ac:	bl	2590 <vfprintf@plt>
    32b0:	ldrb	w0, [x19]
    32b4:	cbz	w0, 32f4 <_ck_assert_failed@@Base+0x220>
    32b8:	mov	x0, x19
    32bc:	bl	2200 <strlen@plt>
    32c0:	add	x19, x19, x0
    32c4:	ldurb	w0, [x19, #-1]
    32c8:	cmp	w0, #0x3a
    32cc:	b.ne	32f4 <_ck_assert_failed@@Base+0x220>  // b.any
    32d0:	bl	25b0 <__errno_location@plt>
    32d4:	ldr	w0, [x0]
    32d8:	ldr	x19, [x20]
    32dc:	bl	23e0 <strerror@plt>
    32e0:	mov	x2, x0
    32e4:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    32e8:	mov	x0, x19
    32ec:	add	x1, x1, #0x5f
    32f0:	bl	2610 <fprintf@plt>
    32f4:	ldr	x0, [x23, #3984]
    32f8:	ldr	x1, [x0]
    32fc:	mov	w0, #0xa                   	// #10
    3300:	bl	22a0 <fputc@plt>
    3304:	mov	w0, #0x2                   	// #2
    3308:	bl	2220 <exit@plt>
    330c:	stp	x29, x30, [sp, #-32]!
    3310:	mov	x29, sp
    3314:	str	x19, [sp, #16]
    3318:	mov	x19, x0
    331c:	bl	2350 <malloc@plt>
    3320:	cbnz	x0, 3340 <_ck_assert_failed@@Base+0x26c>
    3324:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    3328:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    332c:	mov	x3, x19
    3330:	add	x1, x1, #0x63
    3334:	add	x0, x0, #0x71
    3338:	mov	w2, #0x3e                  	// #62
    333c:	bl	31fc <_ck_assert_failed@@Base+0x128>
    3340:	ldr	x19, [sp, #16]
    3344:	ldp	x29, x30, [sp], #32
    3348:	ret
    334c:	stp	x29, x30, [sp, #-32]!
    3350:	mov	x29, sp
    3354:	str	x19, [sp, #16]
    3358:	mov	x19, x1
    335c:	bl	23a0 <realloc@plt>
    3360:	cbnz	x0, 3380 <_ck_assert_failed@@Base+0x2ac>
    3364:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    3368:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    336c:	mov	x3, x19
    3370:	add	x1, x1, #0x63
    3374:	add	x0, x0, #0x8c
    3378:	mov	w2, #0x48                  	// #72
    337c:	bl	31fc <_ck_assert_failed@@Base+0x128>
    3380:	ldr	x19, [sp, #16]
    3384:	ldp	x29, x30, [sp], #32
    3388:	ret
    338c:	stp	x29, x30, [sp, #-32]!
    3390:	mov	x29, sp
    3394:	ldr	w1, [x0, #4]
    3398:	str	x19, [sp, #16]
    339c:	mov	x19, x0
    33a0:	ldr	w0, [x0]
    33a4:	cmp	w0, w1
    33a8:	b.cc	33c4 <_ck_assert_failed@@Base+0x2f0>  // b.lo, b.ul, b.last
    33ac:	ldr	x0, [x19, #16]
    33b0:	lsl	w1, w1, #1
    33b4:	str	w1, [x19, #4]
    33b8:	lsl	x1, x1, #3
    33bc:	bl	334c <_ck_assert_failed@@Base+0x278>
    33c0:	str	x0, [x19, #16]
    33c4:	ldr	x19, [sp, #16]
    33c8:	ldp	x29, x30, [sp], #32
    33cc:	ret
    33d0:	stp	x29, x30, [sp, #-32]!
    33d4:	mov	x0, #0x18                  	// #24
    33d8:	mov	x29, sp
    33dc:	str	x19, [sp, #16]
    33e0:	bl	330c <_ck_assert_failed@@Base+0x238>
    33e4:	mov	x19, x0
    33e8:	mov	x0, #0x100000000           	// #4294967296
    33ec:	str	x0, [x19]
    33f0:	mov	x0, #0x8                   	// #8
    33f4:	bl	330c <_ck_assert_failed@@Base+0x238>
    33f8:	str	x0, [x19, #16]
    33fc:	mov	x0, #0xffffffffffffffff    	// #-1
    3400:	str	x0, [x19, #8]
    3404:	mov	x0, x19
    3408:	ldr	x19, [sp, #16]
    340c:	ldp	x29, x30, [sp], #32
    3410:	ret
    3414:	cbz	x0, 3470 <_ck_assert_failed@@Base+0x39c>
    3418:	stp	x29, x30, [sp, #-32]!
    341c:	mov	x29, sp
    3420:	stp	x19, x20, [sp, #16]
    3424:	mov	x19, x0
    3428:	mov	x20, x1
    342c:	bl	338c <_ck_assert_failed@@Base+0x2b8>
    3430:	ldr	x1, [x19, #16]
    3434:	ldr	w2, [x19]
    3438:	add	x0, x1, #0x8
    343c:	lsl	x2, x2, #3
    3440:	bl	21a0 <memmove@plt>
    3444:	ldr	w0, [x19, #12]
    3448:	add	w0, w0, #0x1
    344c:	stp	wzr, w0, [x19, #8]
    3450:	ldr	w0, [x19]
    3454:	add	w0, w0, #0x1
    3458:	str	w0, [x19]
    345c:	ldr	x0, [x19, #16]
    3460:	str	x20, [x0]
    3464:	ldp	x19, x20, [sp, #16]
    3468:	ldp	x29, x30, [sp], #32
    346c:	ret
    3470:	ret
    3474:	cbz	x0, 34bc <_ck_assert_failed@@Base+0x3e8>
    3478:	stp	x29, x30, [sp, #-32]!
    347c:	mov	x29, sp
    3480:	stp	x19, x20, [sp, #16]
    3484:	mov	x19, x0
    3488:	mov	x20, x1
    348c:	bl	338c <_ck_assert_failed@@Base+0x2b8>
    3490:	ldr	w1, [x19]
    3494:	ldr	w0, [x19, #12]
    3498:	add	w1, w1, #0x1
    349c:	str	w1, [x19]
    34a0:	ldr	x1, [x19, #16]
    34a4:	add	w0, w0, #0x1
    34a8:	stp	w0, w0, [x19, #8]
    34ac:	str	x20, [x1, w0, sxtw #3]
    34b0:	ldp	x19, x20, [sp, #16]
    34b4:	ldp	x29, x30, [sp], #32
    34b8:	ret
    34bc:	ret
    34c0:	ldr	w1, [x0, #8]
    34c4:	cmn	w1, #0x1
    34c8:	b.eq	34dc <_ck_assert_failed@@Base+0x408>  // b.none
    34cc:	ldr	w0, [x0, #12]
    34d0:	cmp	w1, w0
    34d4:	cset	w0, gt
    34d8:	ret
    34dc:	mov	w0, #0x1                   	// #1
    34e0:	b	34d8 <_ck_assert_failed@@Base+0x404>
    34e4:	ldr	w1, [x0, #8]
    34e8:	cmn	w1, #0x1
    34ec:	b.eq	34f4 <_ck_assert_failed@@Base+0x420>  // b.none
    34f0:	str	wzr, [x0, #8]
    34f4:	ret
    34f8:	cbz	x0, 3524 <_ck_assert_failed@@Base+0x450>
    34fc:	stp	x29, x30, [sp, #-32]!
    3500:	mov	x29, sp
    3504:	str	x19, [sp, #16]
    3508:	mov	x19, x0
    350c:	ldr	x0, [x0, #16]
    3510:	bl	24b0 <free@plt>
    3514:	mov	x0, x19
    3518:	ldr	x19, [sp, #16]
    351c:	ldp	x29, x30, [sp], #32
    3520:	b	24b0 <free@plt>
    3524:	ret
    3528:	cbz	x0, 354c <_ck_assert_failed@@Base+0x478>
    352c:	ldr	w1, [x0, #8]
    3530:	cmn	w1, #0x1
    3534:	b.eq	3550 <_ck_assert_failed@@Base+0x47c>  // b.none
    3538:	ldr	w2, [x0, #12]
    353c:	cmp	w1, w2
    3540:	b.gt	3550 <_ck_assert_failed@@Base+0x47c>
    3544:	ldr	x0, [x0, #16]
    3548:	ldr	x0, [x0, w1, sxtw #3]
    354c:	ret
    3550:	mov	x0, #0x0                   	// #0
    3554:	b	354c <_ck_assert_failed@@Base+0x478>
    3558:	cbz	x0, 358c <_ck_assert_failed@@Base+0x4b8>
    355c:	stp	x29, x30, [sp, #-32]!
    3560:	mov	x29, sp
    3564:	str	x19, [sp, #16]
    3568:	mov	x19, x0
    356c:	bl	34c0 <_ck_assert_failed@@Base+0x3ec>
    3570:	cbnz	w0, 3580 <_ck_assert_failed@@Base+0x4ac>
    3574:	ldr	w0, [x19, #8]
    3578:	add	w0, w0, #0x1
    357c:	str	w0, [x19, #8]
    3580:	ldr	x19, [sp, #16]
    3584:	ldp	x29, x30, [sp], #32
    3588:	ret
    358c:	ret
    3590:	cmp	x0, #0x0
    3594:	ccmp	x1, #0x0, #0x4, ne  // ne = any
    3598:	b.eq	35e4 <_ck_assert_failed@@Base+0x510>  // b.none
    359c:	stp	x29, x30, [sp, #-32]!
    35a0:	mov	x29, sp
    35a4:	stp	x19, x20, [sp, #16]
    35a8:	mov	x19, x0
    35ac:	mov	x20, x1
    35b0:	bl	34e4 <_ck_assert_failed@@Base+0x410>
    35b4:	mov	x0, x19
    35b8:	bl	34c0 <_ck_assert_failed@@Base+0x3ec>
    35bc:	cbz	w0, 35cc <_ck_assert_failed@@Base+0x4f8>
    35c0:	ldp	x19, x20, [sp, #16]
    35c4:	ldp	x29, x30, [sp], #32
    35c8:	ret
    35cc:	mov	x0, x19
    35d0:	bl	3528 <_ck_assert_failed@@Base+0x454>
    35d4:	blr	x20
    35d8:	mov	x0, x19
    35dc:	bl	3558 <_ck_assert_failed@@Base+0x484>
    35e0:	b	35b4 <_ck_assert_failed@@Base+0x4e0>
    35e4:	ret
    35e8:	stp	x29, x30, [sp, #-32]!
    35ec:	mov	x29, sp
    35f0:	stp	x19, x20, [sp, #16]
    35f4:	mov	x19, x0
    35f8:	mov	x20, x1
    35fc:	bl	34e4 <_ck_assert_failed@@Base+0x410>
    3600:	mov	x0, x19
    3604:	bl	34c0 <_ck_assert_failed@@Base+0x3ec>
    3608:	cbz	w0, 361c <_ck_assert_failed@@Base+0x548>
    360c:	mov	w0, #0x0                   	// #0
    3610:	ldp	x19, x20, [sp, #16]
    3614:	ldp	x29, x30, [sp], #32
    3618:	ret
    361c:	mov	x0, x19
    3620:	bl	3528 <_ck_assert_failed@@Base+0x454>
    3624:	cmp	x20, x0
    3628:	b.eq	3638 <_ck_assert_failed@@Base+0x564>  // b.none
    362c:	mov	x0, x19
    3630:	bl	3558 <_ck_assert_failed@@Base+0x484>
    3634:	b	3600 <_ck_assert_failed@@Base+0x52c>
    3638:	mov	w0, #0x1                   	// #1
    363c:	b	3610 <_ck_assert_failed@@Base+0x53c>
    3640:	stp	x29, x30, [sp, #-64]!
    3644:	mov	x29, sp
    3648:	stp	x19, x20, [sp, #16]
    364c:	ldr	x20, [x0, #48]
    3650:	stp	x21, x22, [sp, #32]
    3654:	mov	x21, x0
    3658:	mov	x22, x1
    365c:	mov	x0, x20
    3660:	str	x23, [sp, #48]
    3664:	mov	w23, w2
    3668:	bl	34e4 <_ck_assert_failed@@Base+0x410>
    366c:	mov	x0, x20
    3670:	bl	34c0 <_ck_assert_failed@@Base+0x3ec>
    3674:	cbz	w0, 368c <_ck_assert_failed@@Base+0x5b8>
    3678:	ldp	x19, x20, [sp, #16]
    367c:	ldp	x21, x22, [sp, #32]
    3680:	ldr	x23, [sp, #48]
    3684:	ldp	x29, x30, [sp], #64
    3688:	ret
    368c:	mov	x0, x20
    3690:	bl	3528 <_ck_assert_failed@@Base+0x454>
    3694:	mov	x19, x0
    3698:	ldr	x0, [x0]
    369c:	bl	2530 <fflush@plt>
    36a0:	ldp	x1, x5, [x19]
    36a4:	mov	w4, w23
    36a8:	ldr	w2, [x19, #20]
    36ac:	mov	x3, x22
    36b0:	mov	x0, x21
    36b4:	blr	x5
    36b8:	ldr	x0, [x19]
    36bc:	bl	2530 <fflush@plt>
    36c0:	mov	x0, x20
    36c4:	bl	3558 <_ck_assert_failed@@Base+0x484>
    36c8:	b	366c <_ck_assert_failed@@Base+0x598>
    36cc:	stp	x29, x30, [sp, #-160]!
    36d0:	adrp	x2, 19000 <check_waitpid_and_exit@@Base+0x1329c>
    36d4:	mov	x29, sp
    36d8:	ldrb	w0, [x2, #640]
    36dc:	stp	x19, x20, [sp, #16]
    36e0:	mov	x19, x1
    36e4:	stp	x21, x22, [sp, #32]
    36e8:	mov	x22, x3
    36ec:	mov	x21, x2
    36f0:	stp	x23, x24, [sp, #48]
    36f4:	mov	w23, w4
    36f8:	str	x25, [sp, #64]
    36fc:	cbnz	w0, 374c <_ck_assert_failed@@Base+0x678>
    3700:	mov	x1, #0x0                   	// #0
    3704:	add	x20, sp, #0x58
    3708:	add	x24, x2, #0x280
    370c:	mov	x0, x20
    3710:	bl	2380 <gettimeofday@plt>
    3714:	add	x25, sp, #0x68
    3718:	bl	31a4 <_ck_assert_failed@@Base+0xd0>
    371c:	add	x1, x24, #0x18
    3720:	bl	22b0 <clock_gettime@plt>
    3724:	mov	x1, x25
    3728:	mov	x0, x20
    372c:	bl	2270 <localtime_r@plt>
    3730:	cbz	x0, 374c <_ck_assert_failed@@Base+0x678>
    3734:	adrp	x2, 6000 <check_waitpid_and_exit@@Base+0x29c>
    3738:	mov	x3, x25
    373c:	add	x2, x2, #0xa8
    3740:	mov	x0, x24
    3744:	mov	x1, #0x14                  	// #20
    3748:	bl	2290 <strftime@plt>
    374c:	cmp	w23, #0x7
    3750:	b.hi	384c <_ck_assert_failed@@Base+0x778>  // b.pmore
    3754:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    3758:	add	x0, x0, #0x384
    375c:	ldrb	w0, [x0, w23, uxtw]
    3760:	adr	x1, 376c <_ck_assert_failed@@Base+0x698>
    3764:	add	x0, x1, w0, sxtb #2
    3768:	br	x0
    376c:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    3770:	add	x2, x21, #0x280
    3774:	add	x1, x1, #0xba
    3778:	mov	x0, x19
    377c:	bl	2610 <fprintf@plt>
    3780:	ldp	x19, x20, [sp, #16]
    3784:	ldp	x21, x22, [sp, #32]
    3788:	ldp	x23, x24, [sp, #48]
    378c:	ldr	x25, [sp, #64]
    3790:	ldp	x29, x30, [sp], #160
    3794:	ret
    3798:	stp	xzr, xzr, [sp, #104]
    379c:	bl	31a4 <_ck_assert_failed@@Base+0xd0>
    37a0:	add	x1, sp, #0x68
    37a4:	bl	22b0 <clock_gettime@plt>
    37a8:	ldp	x0, x1, [sp, #104]
    37ac:	add	x2, x21, #0x280
    37b0:	mov	x4, #0x3e8                 	// #1000
    37b4:	ldr	x3, [x2, #24]
    37b8:	sdiv	x1, x1, x4
    37bc:	sub	x0, x0, x3
    37c0:	mov	x3, #0x4240                	// #16960
    37c4:	movk	x3, #0xf, lsl #16
    37c8:	madd	x0, x0, x3, x1
    37cc:	ldr	x1, [x2, #32]
    37d0:	mov	x2, #0xfffffffffffffc18    	// #-1000
    37d4:	sdiv	x1, x1, x2
    37d8:	add	x0, x0, x1
    37dc:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    37e0:	add	x1, x1, #0x17f
    37e4:	udiv	x2, x0, x3
    37e8:	msub	x3, x2, x3, x0
    37ec:	mov	x0, x19
    37f0:	bl	2610 <fprintf@plt>
    37f4:	b	3780 <_ck_assert_failed@@Base+0x6ac>
    37f8:	mov	x1, x19
    37fc:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    3800:	add	x0, x0, #0x1af
    3804:	bl	2210 <fputs@plt>
    3808:	ldr	x1, [x22]
    380c:	mov	x0, x19
    3810:	bl	4acc <check_set_max_msg_size@@Base+0x4cc>
    3814:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    3818:	mov	x1, x19
    381c:	add	x0, x0, #0x1c5
    3820:	bl	2210 <fputs@plt>
    3824:	b	3780 <_ck_assert_failed@@Base+0x6ac>
    3828:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    382c:	mov	x1, x19
    3830:	add	x0, x0, #0x1cf
    3834:	b	3820 <_ck_assert_failed@@Base+0x74c>
    3838:	mov	x1, x22
    383c:	mov	x0, x19
    3840:	mov	w2, #0x3                   	// #3
    3844:	bl	4c04 <check_set_max_msg_size@@Base+0x604>
    3848:	b	3780 <_ck_assert_failed@@Base+0x6ac>
    384c:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    3850:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    3854:	add	x1, x1, #0x1db
    3858:	add	x0, x0, #0x1e7
    385c:	mov	w2, #0x14f                 	// #335
    3860:	bl	31fc <_ck_assert_failed@@Base+0x128>
    3864:	cmp	w4, #0x7
    3868:	b.hi	38c0 <_ck_assert_failed@@Base+0x7ec>  // b.pmore
    386c:	mov	x5, x0
    3870:	mov	x0, x1
    3874:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    3878:	add	x1, x1, #0x38c
    387c:	ldrb	w1, [x1, w4, uxtw]
    3880:	adr	x4, 388c <_ck_assert_failed@@Base+0x7b8>
    3884:	add	x1, x4, w1, sxtb #2
    3888:	br	x1
    388c:	cbz	w2, 38e0 <_ck_assert_failed@@Base+0x80c>
    3890:	mov	x1, x0
    3894:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    3898:	add	x0, x0, #0x20b
    389c:	b	2210 <fputs@plt>
    38a0:	cbz	w2, 38e0 <_ck_assert_failed@@Base+0x80c>
    38a4:	ldr	x2, [x3]
    38a8:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    38ac:	add	x1, x1, #0x263
    38b0:	b	2610 <fprintf@plt>
    38b4:	cbz	w2, 38e0 <_ck_assert_failed@@Base+0x80c>
    38b8:	mov	x1, x5
    38bc:	b	4f00 <check_set_max_msg_size@@Base+0x900>
    38c0:	stp	x29, x30, [sp, #-16]!
    38c4:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    38c8:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    38cc:	mov	x29, sp
    38d0:	add	x1, x1, #0x1db
    38d4:	add	x0, x0, #0x21d
    38d8:	mov	w2, #0xdc                  	// #220
    38dc:	bl	31fc <_ck_assert_failed@@Base+0x128>
    38e0:	ret
    38e4:	stp	x29, x30, [sp, #-32]!
    38e8:	cmp	w4, #0x7
    38ec:	mov	x29, sp
    38f0:	str	x19, [sp, #16]
    38f4:	b.hi	39a4 <_ck_assert_failed@@Base+0x8d0>  // b.pmore
    38f8:	mov	x19, x1
    38fc:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    3900:	add	x1, x1, #0x394
    3904:	ldrb	w1, [x1, w4, uxtw]
    3908:	adr	x2, 3914 <_ck_assert_failed@@Base+0x840>
    390c:	add	x1, x2, w1, sxtb #2
    3910:	br	x1
    3914:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x1329c>
    3918:	str	wzr, [x0, #680]
    391c:	ldr	x19, [sp, #16]
    3920:	ldp	x29, x30, [sp], #32
    3924:	ret
    3928:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x1329c>
    392c:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    3930:	add	x1, x1, #0x24b
    3934:	ldr	w2, [x0, #680]
    3938:	mov	x0, x19
    393c:	bl	2610 <fprintf@plt>
    3940:	mov	x0, x19
    3944:	ldr	x19, [sp, #16]
    3948:	ldp	x29, x30, [sp], #32
    394c:	b	2530 <fflush@plt>
    3950:	mov	x0, x3
    3954:	ldr	w4, [x3]
    3958:	adrp	x1, 19000 <check_waitpid_and_exit@@Base+0x1329c>
    395c:	add	x1, x1, #0x280
    3960:	cmp	w4, #0x1
    3964:	adrp	x2, 6000 <check_waitpid_and_exit@@Base+0x29c>
    3968:	ldp	x5, x6, [x0, #32]
    396c:	add	x2, x2, #0x244
    3970:	ldr	x4, [x0, #8]
    3974:	ldr	x7, [x0, #48]
    3978:	mov	x0, x19
    397c:	ldr	w3, [x1, #40]
    3980:	add	w3, w3, #0x1
    3984:	str	w3, [x1, #40]
    3988:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    398c:	add	x1, x1, #0x248
    3990:	csel	x2, x1, x2, eq  // eq = none
    3994:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    3998:	add	x1, x1, #0x252
    399c:	bl	2610 <fprintf@plt>
    39a0:	b	3940 <_ck_assert_failed@@Base+0x86c>
    39a4:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    39a8:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    39ac:	add	x1, x1, #0x1db
    39b0:	add	x0, x0, #0x268
    39b4:	mov	w2, #0x17c                 	// #380
    39b8:	bl	31fc <_ck_assert_failed@@Base+0x128>
    39bc:	stp	x29, x30, [sp, #-32]!
    39c0:	cmp	w4, #0x7
    39c4:	mov	x29, sp
    39c8:	stp	x19, x20, [sp, #16]
    39cc:	b.hi	3a4c <_ck_assert_failed@@Base+0x978>  // b.pmore
    39d0:	mov	x20, x0
    39d4:	mov	x19, x1
    39d8:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    39dc:	mov	x1, x3
    39e0:	add	x0, x0, #0x39c
    39e4:	ldrb	w0, [x0, w4, uxtw]
    39e8:	adr	x2, 39f4 <_ck_assert_failed@@Base+0x920>
    39ec:	add	x0, x2, w0, sxtb #2
    39f0:	br	x0
    39f4:	mov	x0, x19
    39f8:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    39fc:	ldp	x19, x20, [sp, #16]
    3a00:	add	x1, x1, #0x28c
    3a04:	ldp	x29, x30, [sp], #32
    3a08:	ldr	x2, [x3]
    3a0c:	b	2610 <fprintf@plt>
    3a10:	mov	x1, x19
    3a14:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    3a18:	add	x0, x0, #0x29e
    3a1c:	bl	2210 <fputs@plt>
    3a20:	mov	x1, x20
    3a24:	mov	x0, x19
    3a28:	ldp	x19, x20, [sp, #16]
    3a2c:	mov	w2, #0x1                   	// #1
    3a30:	ldp	x29, x30, [sp], #32
    3a34:	b	4f00 <check_set_max_msg_size@@Base+0x900>
    3a38:	mov	x0, x19
    3a3c:	mov	w2, #0x3                   	// #3
    3a40:	ldp	x19, x20, [sp, #16]
    3a44:	ldp	x29, x30, [sp], #32
    3a48:	b	4e84 <check_set_max_msg_size@@Base+0x884>
    3a4c:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    3a50:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    3a54:	add	x1, x1, #0x1db
    3a58:	add	x0, x0, #0x2bb
    3a5c:	mov	w2, #0x103                 	// #259
    3a60:	bl	31fc <_ck_assert_failed@@Base+0x128>
    3a64:	ldp	x19, x20, [sp, #16]
    3a68:	ldp	x29, x30, [sp], #32
    3a6c:	ret
    3a70:	stp	x29, x30, [sp, #-32]!
    3a74:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    3a78:	add	x1, x1, #0x2e1
    3a7c:	mov	x29, sp
    3a80:	str	x19, [sp, #16]
    3a84:	mov	x19, x0
    3a88:	bl	2450 <strcmp@plt>
    3a8c:	cbnz	w0, 3aa8 <_ck_assert_failed@@Base+0x9d4>
    3a90:	adrp	x0, 18000 <check_waitpid_and_exit@@Base+0x1229c>
    3a94:	ldr	x0, [x0, #4016]
    3a98:	ldr	x0, [x0]
    3a9c:	ldr	x19, [sp, #16]
    3aa0:	ldp	x29, x30, [sp], #32
    3aa4:	ret
    3aa8:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    3aac:	mov	x0, x19
    3ab0:	add	x1, x1, #0x2e3
    3ab4:	bl	2330 <fopen@plt>
    3ab8:	cbnz	x0, 3a9c <_ck_assert_failed@@Base+0x9c8>
    3abc:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    3ac0:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    3ac4:	mov	x3, x19
    3ac8:	add	x1, x1, #0x1db
    3acc:	add	x0, x0, #0x2e5
    3ad0:	mov	w2, #0x1cd                 	// #461
    3ad4:	bl	31fc <_ck_assert_failed@@Base+0x128>

0000000000003ad8 <srunner_set_log@@Base>:
    3ad8:	ldr	x2, [x0, #24]
    3adc:	cbnz	x2, 3ae4 <srunner_set_log@@Base+0xc>
    3ae0:	str	x1, [x0, #24]
    3ae4:	ret

0000000000003ae8 <srunner_log_fname@@Base>:
    3ae8:	ldr	x0, [x0, #24]
    3aec:	cbnz	x0, 3afc <srunner_log_fname@@Base+0x14>
    3af0:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    3af4:	add	x0, x0, #0x313
    3af8:	b	25c0 <getenv@plt>
    3afc:	ret

0000000000003b00 <srunner_has_log@@Base>:
    3b00:	stp	x29, x30, [sp, #-16]!
    3b04:	mov	x29, sp
    3b08:	bl	24f0 <srunner_log_fname@plt>
    3b0c:	cmp	x0, #0x0
    3b10:	cset	w0, ne  // ne = any
    3b14:	ldp	x29, x30, [sp], #16
    3b18:	ret

0000000000003b1c <srunner_set_xml@@Base>:
    3b1c:	ldr	x2, [x0, #32]
    3b20:	cbnz	x2, 3b28 <srunner_set_xml@@Base+0xc>
    3b24:	str	x1, [x0, #32]
    3b28:	ret

0000000000003b2c <srunner_xml_fname@@Base>:
    3b2c:	ldr	x0, [x0, #32]
    3b30:	cbnz	x0, 3b40 <srunner_xml_fname@@Base+0x14>
    3b34:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    3b38:	add	x0, x0, #0x324
    3b3c:	b	25c0 <getenv@plt>
    3b40:	ret

0000000000003b44 <srunner_has_xml@@Base>:
    3b44:	stp	x29, x30, [sp, #-16]!
    3b48:	mov	x29, sp
    3b4c:	bl	2310 <srunner_xml_fname@plt>
    3b50:	cmp	x0, #0x0
    3b54:	cset	w0, ne  // ne = any
    3b58:	ldp	x29, x30, [sp], #16
    3b5c:	ret

0000000000003b60 <srunner_set_tap@@Base>:
    3b60:	ldr	x2, [x0, #40]
    3b64:	cbnz	x2, 3b6c <srunner_set_tap@@Base+0xc>
    3b68:	str	x1, [x0, #40]
    3b6c:	ret

0000000000003b70 <srunner_tap_fname@@Base>:
    3b70:	ldr	x0, [x0, #40]
    3b74:	cbnz	x0, 3b84 <srunner_tap_fname@@Base+0x14>
    3b78:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    3b7c:	add	x0, x0, #0x339
    3b80:	b	25c0 <getenv@plt>
    3b84:	ret

0000000000003b88 <srunner_has_tap@@Base>:
    3b88:	stp	x29, x30, [sp, #-16]!
    3b8c:	mov	x29, sp
    3b90:	bl	21b0 <srunner_tap_fname@plt>
    3b94:	cmp	x0, #0x0
    3b98:	cset	w0, ne  // ne = any
    3b9c:	ldp	x29, x30, [sp], #16
    3ba0:	ret
    3ba4:	stp	x29, x30, [sp, #-64]!
    3ba8:	mov	x29, sp
    3bac:	stp	x19, x20, [sp, #16]
    3bb0:	mov	w20, w4
    3bb4:	stp	x21, x22, [sp, #32]
    3bb8:	mov	x21, x0
    3bbc:	mov	w22, w2
    3bc0:	mov	x0, #0x18                  	// #24
    3bc4:	stp	x23, x24, [sp, #48]
    3bc8:	mov	x24, x1
    3bcc:	mov	x23, x3
    3bd0:	bl	330c <_ck_assert_failed@@Base+0x238>
    3bd4:	cmp	w20, #0x4
    3bd8:	mov	x19, x0
    3bdc:	b.ne	3be8 <srunner_has_tap@@Base+0x60>  // b.any
    3be0:	bl	4e00 <check_set_max_msg_size@@Base+0x800>
    3be4:	mov	w20, w0
    3be8:	ldr	x0, [x21, #48]
    3bec:	stp	x24, x23, [x19]
    3bf0:	mov	x1, x19
    3bf4:	stp	w22, w20, [x19, #16]
    3bf8:	ldp	x19, x20, [sp, #16]
    3bfc:	ldp	x21, x22, [sp, #32]
    3c00:	ldp	x23, x24, [sp, #48]
    3c04:	ldp	x29, x30, [sp], #64
    3c08:	b	3474 <_ck_assert_failed@@Base+0x3a0>
    3c0c:	mov	w2, #0x2                   	// #2
    3c10:	mov	x1, #0x0                   	// #0
    3c14:	b	3640 <_ck_assert_failed@@Base+0x56c>
    3c18:	mov	w2, #0x4                   	// #4
    3c1c:	mov	x1, #0x0                   	// #0
    3c20:	b	3640 <_ck_assert_failed@@Base+0x56c>
    3c24:	mov	w2, #0x3                   	// #3
    3c28:	b	3640 <_ck_assert_failed@@Base+0x56c>
    3c2c:	mov	w2, #0x5                   	// #5
    3c30:	b	3640 <_ck_assert_failed@@Base+0x56c>
    3c34:	stp	x29, x30, [sp, #-144]!
    3c38:	mov	x29, sp
    3c3c:	stp	x19, x20, [sp, #16]
    3c40:	mov	x20, x0
    3c44:	add	x19, sp, #0x28
    3c48:	ldr	x0, [x2]
    3c4c:	adrp	x2, 6000 <check_waitpid_and_exit@@Base+0x29c>
    3c50:	ldr	x3, [x1]
    3c54:	add	x2, x2, #0x34e
    3c58:	ldr	x4, [x0]
    3c5c:	mov	x1, #0x63                  	// #99
    3c60:	mov	x0, x19
    3c64:	bl	22f0 <snprintf@plt>
    3c68:	mov	x1, x19
    3c6c:	mov	x0, x20
    3c70:	mov	w2, #0x6                   	// #6
    3c74:	bl	3640 <_ck_assert_failed@@Base+0x56c>
    3c78:	ldp	x19, x20, [sp, #16]
    3c7c:	ldp	x29, x30, [sp], #144
    3c80:	ret
    3c84:	mov	w2, #0x7                   	// #7
    3c88:	b	3640 <_ck_assert_failed@@Base+0x56c>
    3c8c:	stp	x29, x30, [sp, #-32]!
    3c90:	mov	x29, sp
    3c94:	str	x19, [sp, #16]
    3c98:	mov	x19, x0
    3c9c:	bl	2250 <srunner_has_log@plt>
    3ca0:	cbz	w0, 3cb8 <srunner_has_tap@@Base+0x130>
    3ca4:	mov	x0, x19
    3ca8:	bl	24f0 <srunner_log_fname@plt>
    3cac:	ldr	x19, [sp, #16]
    3cb0:	ldp	x29, x30, [sp], #32
    3cb4:	b	3a70 <_ck_assert_failed@@Base+0x99c>
    3cb8:	mov	x0, #0x0                   	// #0
    3cbc:	ldr	x19, [sp, #16]
    3cc0:	ldp	x29, x30, [sp], #32
    3cc4:	ret
    3cc8:	stp	x29, x30, [sp, #-32]!
    3ccc:	mov	x29, sp
    3cd0:	str	x19, [sp, #16]
    3cd4:	mov	x19, x0
    3cd8:	bl	2470 <srunner_has_xml@plt>
    3cdc:	cbz	w0, 3cf4 <srunner_has_tap@@Base+0x16c>
    3ce0:	mov	x0, x19
    3ce4:	bl	2310 <srunner_xml_fname@plt>
    3ce8:	ldr	x19, [sp, #16]
    3cec:	ldp	x29, x30, [sp], #32
    3cf0:	b	3a70 <_ck_assert_failed@@Base+0x99c>
    3cf4:	mov	x0, #0x0                   	// #0
    3cf8:	ldr	x19, [sp, #16]
    3cfc:	ldp	x29, x30, [sp], #32
    3d00:	ret
    3d04:	stp	x29, x30, [sp, #-32]!
    3d08:	mov	x29, sp
    3d0c:	str	x19, [sp, #16]
    3d10:	mov	x19, x0
    3d14:	bl	2460 <srunner_has_tap@plt>
    3d18:	cbz	w0, 3d30 <srunner_has_tap@@Base+0x1a8>
    3d1c:	mov	x0, x19
    3d20:	bl	21b0 <srunner_tap_fname@plt>
    3d24:	ldr	x19, [sp, #16]
    3d28:	ldp	x29, x30, [sp], #32
    3d2c:	b	3a70 <_ck_assert_failed@@Base+0x99c>
    3d30:	mov	x0, #0x0                   	// #0
    3d34:	ldr	x19, [sp, #16]
    3d38:	ldp	x29, x30, [sp], #32
    3d3c:	ret
    3d40:	stp	x29, x30, [sp, #-48]!
    3d44:	mov	x29, sp
    3d48:	stp	x19, x20, [sp, #16]
    3d4c:	adrp	x20, 18000 <check_waitpid_and_exit@@Base+0x1229c>
    3d50:	mov	x19, x0
    3d54:	stp	x21, x22, [sp, #32]
    3d58:	mov	w21, w1
    3d5c:	bl	33d0 <_ck_assert_failed@@Base+0x2fc>
    3d60:	ldr	x22, [x20, #4016]
    3d64:	adrp	x3, 18000 <check_waitpid_and_exit@@Base+0x1229c>
    3d68:	mov	w4, w21
    3d6c:	str	x0, [x19, #48]
    3d70:	ldr	x3, [x3, #4032]
    3d74:	mov	w2, #0x0                   	// #0
    3d78:	ldr	x1, [x22]
    3d7c:	mov	x0, x19
    3d80:	bl	3ba4 <srunner_has_tap@@Base+0x1c>
    3d84:	mov	x0, x19
    3d88:	bl	3c8c <srunner_has_tap@@Base+0x104>
    3d8c:	cbz	x0, 3db4 <srunner_has_tap@@Base+0x22c>
    3d90:	mov	x1, x0
    3d94:	adrp	x3, 18000 <check_waitpid_and_exit@@Base+0x1229c>
    3d98:	ldr	x0, [x22]
    3d9c:	mov	w4, w21
    3da0:	ldr	x3, [x3, #4024]
    3da4:	cmp	x0, x1
    3da8:	cset	w2, ne  // ne = any
    3dac:	mov	x0, x19
    3db0:	bl	3ba4 <srunner_has_tap@@Base+0x1c>
    3db4:	mov	x0, x19
    3db8:	bl	3cc8 <srunner_has_tap@@Base+0x140>
    3dbc:	mov	x1, x0
    3dc0:	cbz	x0, 3de8 <srunner_has_tap@@Base+0x260>
    3dc4:	ldr	x0, [x20, #4016]
    3dc8:	adrp	x3, 18000 <check_waitpid_and_exit@@Base+0x1229c>
    3dcc:	mov	w4, w21
    3dd0:	ldr	x3, [x3, #4000]
    3dd4:	ldr	x0, [x0]
    3dd8:	cmp	x0, x1
    3ddc:	mov	x0, x19
    3de0:	cset	w2, ne  // ne = any
    3de4:	bl	3ba4 <srunner_has_tap@@Base+0x1c>
    3de8:	mov	x0, x19
    3dec:	bl	3d04 <srunner_has_tap@@Base+0x17c>
    3df0:	mov	x1, x0
    3df4:	cbz	x0, 3e1c <srunner_has_tap@@Base+0x294>
    3df8:	ldr	x20, [x20, #4016]
    3dfc:	adrp	x3, 18000 <check_waitpid_and_exit@@Base+0x1229c>
    3e00:	mov	w4, w21
    3e04:	ldr	x3, [x3, #4008]
    3e08:	ldr	x0, [x20]
    3e0c:	cmp	x0, x1
    3e10:	mov	x0, x19
    3e14:	cset	w2, ne  // ne = any
    3e18:	bl	3ba4 <srunner_has_tap@@Base+0x1c>
    3e1c:	mov	x0, x19
    3e20:	mov	w2, #0x0                   	// #0
    3e24:	ldp	x19, x20, [sp, #16]
    3e28:	mov	x1, #0x0                   	// #0
    3e2c:	ldp	x21, x22, [sp, #32]
    3e30:	ldp	x29, x30, [sp], #48
    3e34:	b	3640 <_ck_assert_failed@@Base+0x56c>
    3e38:	stp	x29, x30, [sp, #-48]!
    3e3c:	mov	w2, #0x1                   	// #1
    3e40:	mov	x1, #0x0                   	// #0
    3e44:	mov	x29, sp
    3e48:	str	x21, [sp, #32]
    3e4c:	mov	x21, x0
    3e50:	stp	x19, x20, [sp, #16]
    3e54:	bl	3640 <_ck_assert_failed@@Base+0x56c>
    3e58:	ldr	x19, [x21, #48]
    3e5c:	mov	x0, x19
    3e60:	bl	34e4 <_ck_assert_failed@@Base+0x410>
    3e64:	mov	x0, x19
    3e68:	bl	34c0 <_ck_assert_failed@@Base+0x3ec>
    3e6c:	cbz	w0, 3e8c <srunner_has_tap@@Base+0x304>
    3e70:	mov	x0, x19
    3e74:	bl	34f8 <_ck_assert_failed@@Base+0x424>
    3e78:	ldp	x19, x20, [sp, #16]
    3e7c:	str	xzr, [x21, #48]
    3e80:	ldr	x21, [sp, #32]
    3e84:	ldp	x29, x30, [sp], #48
    3e88:	ret
    3e8c:	mov	x0, x19
    3e90:	bl	3528 <_ck_assert_failed@@Base+0x454>
    3e94:	mov	x20, x0
    3e98:	ldr	w0, [x0, #16]
    3e9c:	cbz	w0, 3ec4 <srunner_has_tap@@Base+0x33c>
    3ea0:	ldr	x0, [x20]
    3ea4:	bl	2320 <fclose@plt>
    3ea8:	cbz	w0, 3ec4 <srunner_has_tap@@Base+0x33c>
    3eac:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    3eb0:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    3eb4:	add	x1, x1, #0x1db
    3eb8:	add	x0, x0, #0x354
    3ebc:	mov	w2, #0x224                 	// #548
    3ec0:	bl	31fc <_ck_assert_failed@@Base+0x128>
    3ec4:	mov	x0, x20
    3ec8:	bl	24b0 <free@plt>
    3ecc:	mov	x0, x19
    3ed0:	bl	3558 <_ck_assert_failed@@Base+0x484>
    3ed4:	b	3e64 <srunner_has_tap@@Base+0x2dc>
    3ed8:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x1329c>
    3edc:	add	x1, x0, #0x2b0
    3ee0:	ldr	x0, [x0, #688]
    3ee4:	cbnz	x0, 3f10 <srunner_has_tap@@Base+0x388>
    3ee8:	ldr	x0, [x1, #8]
    3eec:	cbnz	x0, 3f10 <srunner_has_tap@@Base+0x388>
    3ef0:	stp	x29, x30, [sp, #-16]!
    3ef4:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    3ef8:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    3efc:	mov	x29, sp
    3f00:	add	x1, x1, #0x3a4
    3f04:	add	x0, x0, #0x3b0
    3f08:	mov	w2, #0x50                  	// #80
    3f0c:	bl	31fc <_ck_assert_failed@@Base+0x128>
    3f10:	ret
    3f14:	stp	x29, x30, [sp, #-32]!
    3f18:	mov	x29, sp
    3f1c:	stp	x19, x20, [sp, #16]
    3f20:	adrp	x20, 19000 <check_waitpid_and_exit@@Base+0x1329c>
    3f24:	add	x19, x20, #0x2b0
    3f28:	ldr	x0, [x20, #688]
    3f2c:	cbz	x0, 3f5c <srunner_has_tap@@Base+0x3d4>
    3f30:	bl	2320 <fclose@plt>
    3f34:	str	xzr, [x20, #688]
    3f38:	ldr	x0, [x19, #16]
    3f3c:	cbz	x0, 3f50 <srunner_has_tap@@Base+0x3c8>
    3f40:	bl	2600 <unlink@plt>
    3f44:	ldr	x0, [x19, #16]
    3f48:	bl	24b0 <free@plt>
    3f4c:	str	xzr, [x19, #16]
    3f50:	ldp	x19, x20, [sp, #16]
    3f54:	ldp	x29, x30, [sp], #32
    3f58:	ret
    3f5c:	ldr	x0, [x19, #8]
    3f60:	cbz	x0, 3f88 <srunner_has_tap@@Base+0x400>
    3f64:	bl	2320 <fclose@plt>
    3f68:	str	xzr, [x19, #8]
    3f6c:	ldr	x0, [x19, #24]
    3f70:	cbz	x0, 3f50 <srunner_has_tap@@Base+0x3c8>
    3f74:	bl	2600 <unlink@plt>
    3f78:	ldr	x0, [x19, #24]
    3f7c:	bl	24b0 <free@plt>
    3f80:	str	xzr, [x19, #24]
    3f84:	b	3f50 <srunner_has_tap@@Base+0x3c8>
    3f88:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    3f8c:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    3f90:	add	x1, x1, #0x3a4
    3f94:	add	x0, x0, #0x423
    3f98:	mov	w2, #0x16a                 	// #362
    3f9c:	bl	31fc <_ck_assert_failed@@Base+0x128>
    3fa0:	stp	x29, x30, [sp, #-32]!
    3fa4:	mov	x29, sp
    3fa8:	bl	23d0 <strdup@plt>
    3fac:	str	x0, [sp, #24]
    3fb0:	bl	3ed8 <srunner_has_tap@@Base+0x350>
    3fb4:	add	x2, sp, #0x18
    3fb8:	mov	w1, #0x1                   	// #1
    3fbc:	bl	46f8 <check_set_max_msg_size@@Base+0xf8>
    3fc0:	ldr	x0, [sp, #24]
    3fc4:	bl	24b0 <free@plt>
    3fc8:	ldp	x29, x30, [sp], #32
    3fcc:	ret
    3fd0:	stp	x29, x30, [sp, #-32]!
    3fd4:	mov	x29, sp
    3fd8:	str	w0, [sp, #24]
    3fdc:	bl	3ed8 <srunner_has_tap@@Base+0x350>
    3fe0:	add	x2, sp, #0x18
    3fe4:	mov	w1, #0x3                   	// #3
    3fe8:	bl	46f8 <check_set_max_msg_size@@Base+0xf8>
    3fec:	ldp	x29, x30, [sp], #32
    3ff0:	ret
    3ff4:	stp	x29, x30, [sp, #-48]!
    3ff8:	mov	x29, sp
    3ffc:	str	x19, [sp, #16]
    4000:	mov	w19, w1
    4004:	bl	23d0 <strdup@plt>
    4008:	str	w19, [sp, #32]
    400c:	str	x0, [sp, #40]
    4010:	bl	3ed8 <srunner_has_tap@@Base+0x350>
    4014:	add	x2, sp, #0x20
    4018:	mov	w1, #0x2                   	// #2
    401c:	bl	46f8 <check_set_max_msg_size@@Base+0xf8>
    4020:	ldr	x0, [sp, #40]
    4024:	bl	24b0 <free@plt>
    4028:	ldr	x19, [sp, #16]
    402c:	ldp	x29, x30, [sp], #48
    4030:	ret
    4034:	stp	x29, x30, [sp, #-32]!
    4038:	mov	x29, sp
    403c:	str	w0, [sp, #24]
    4040:	bl	3ed8 <srunner_has_tap@@Base+0x350>
    4044:	add	x2, sp, #0x18
    4048:	mov	w1, #0x0                   	// #0
    404c:	bl	46f8 <check_set_max_msg_size@@Base+0xf8>
    4050:	ldp	x29, x30, [sp], #32
    4054:	ret
    4058:	b	3f14 <srunner_has_tap@@Base+0x38c>
    405c:	stp	x29, x30, [sp, #-32]!
    4060:	mov	x29, sp
    4064:	stp	x19, x20, [sp, #16]
    4068:	mov	x19, x0
    406c:	str	xzr, [x0]
    4070:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4074:	add	x0, x0, #0x43b
    4078:	bl	25c0 <getenv@plt>
    407c:	cbnz	x0, 40e4 <srunner_has_tap@@Base+0x55c>
    4080:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4084:	add	x1, x1, #0x436
    4088:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    408c:	add	x0, x0, #0x444
    4090:	bl	5db8 <check_waitpid_and_exit@@Base+0x54>
    4094:	str	x0, [x19]
    4098:	bl	2550 <mkstemp@plt>
    409c:	tbz	w0, #31, 40a8 <srunner_has_tap@@Base+0x520>
    40a0:	mov	x20, #0x0                   	// #0
    40a4:	b	40d4 <srunner_has_tap@@Base+0x54c>
    40a8:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    40ac:	add	x1, x1, #0x440
    40b0:	bl	2370 <fdopen@plt>
    40b4:	mov	x20, x0
    40b8:	ldr	x0, [x19]
    40bc:	bl	2600 <unlink@plt>
    40c0:	cbz	w0, 40c8 <srunner_has_tap@@Base+0x540>
    40c4:	cbnz	x20, 40d4 <srunner_has_tap@@Base+0x54c>
    40c8:	ldr	x0, [x19]
    40cc:	bl	24b0 <free@plt>
    40d0:	str	xzr, [x19]
    40d4:	mov	x0, x20
    40d8:	ldp	x19, x20, [sp, #16]
    40dc:	ldp	x29, x30, [sp], #32
    40e0:	ret
    40e4:	mov	x1, x0
    40e8:	b	4088 <srunner_has_tap@@Base+0x500>
    40ec:	stp	x29, x30, [sp, #-32]!
    40f0:	mov	x29, sp
    40f4:	stp	x19, x20, [sp, #16]
    40f8:	adrp	x20, 19000 <check_waitpid_and_exit@@Base+0x1329c>
    40fc:	add	x19, x20, #0x2b0
    4100:	ldr	x0, [x19, #8]
    4104:	cbnz	x0, 4130 <srunner_has_tap@@Base+0x5a8>
    4108:	add	x0, x19, #0x18
    410c:	bl	405c <srunner_has_tap@@Base+0x4d4>
    4110:	str	x0, [x19, #8]
    4114:	cbnz	x0, 4168 <srunner_has_tap@@Base+0x5e0>
    4118:	mov	w2, #0x13d                 	// #317
    411c:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4120:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4124:	add	x1, x1, #0x3a4
    4128:	add	x0, x0, #0x454
    412c:	bl	31fc <_ck_assert_failed@@Base+0x128>
    4130:	ldr	x0, [x20, #688]
    4134:	cbnz	x0, 4150 <srunner_has_tap@@Base+0x5c8>
    4138:	add	x0, x19, #0x10
    413c:	bl	405c <srunner_has_tap@@Base+0x4d4>
    4140:	str	x0, [x20, #688]
    4144:	cbnz	x0, 4168 <srunner_has_tap@@Base+0x5e0>
    4148:	mov	w2, #0x146                 	// #326
    414c:	b	411c <srunner_has_tap@@Base+0x594>
    4150:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4154:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4158:	add	x1, x1, #0x3a4
    415c:	add	x0, x0, #0x4a9
    4160:	mov	w2, #0x14d                 	// #333
    4164:	b	412c <srunner_has_tap@@Base+0x5a4>
    4168:	ldp	x19, x20, [sp, #16]
    416c:	ldp	x29, x30, [sp], #32
    4170:	ret
    4174:	stp	x29, x30, [sp, #-48]!
    4178:	mov	x29, sp
    417c:	stp	x19, x20, [sp, #16]
    4180:	str	x21, [sp, #32]
    4184:	mov	w21, w0
    4188:	bl	3ed8 <srunner_has_tap@@Base+0x350>
    418c:	cbnz	x0, 41a8 <srunner_has_tap@@Base+0x620>
    4190:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4194:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4198:	add	x1, x1, #0x3a4
    419c:	add	x0, x0, #0x4d2
    41a0:	mov	w2, #0x7f                  	// #127
    41a4:	bl	31fc <_ck_assert_failed@@Base+0x128>
    41a8:	mov	x19, x0
    41ac:	bl	23b0 <rewind@plt>
    41b0:	mov	x0, x19
    41b4:	bl	4844 <check_set_max_msg_size@@Base+0x244>
    41b8:	mov	x19, x0
    41bc:	cbnz	x0, 41d8 <srunner_has_tap@@Base+0x650>
    41c0:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    41c4:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    41c8:	add	x1, x1, #0x3a4
    41cc:	add	x0, x0, #0x4ec
    41d0:	mov	w2, #0x85                  	// #133
    41d4:	b	41a4 <srunner_has_tap@@Base+0x61c>
    41d8:	bl	3f14 <srunner_has_tap@@Base+0x38c>
    41dc:	bl	40ec <srunner_has_tap@@Base+0x564>
    41e0:	bl	2e88 <srunner_results@@Base+0x6c>
    41e4:	mov	x20, x0
    41e8:	ldr	x1, [x19, #40]
    41ec:	cbnz	x1, 41f4 <srunner_has_tap@@Base+0x66c>
    41f0:	cbz	w21, 4234 <srunner_has_tap@@Base+0x6ac>
    41f4:	ldr	w0, [x19, #4]
    41f8:	cbnz	w0, 4200 <srunner_has_tap@@Base+0x678>
    41fc:	ldr	w0, [x19]
    4200:	str	w0, [x20, #4]
    4204:	cmp	w0, #0x2
    4208:	str	x1, [x20, #48]
    420c:	str	xzr, [x19, #40]
    4210:	b.ne	4248 <srunner_has_tap@@Base+0x6c0>  // b.any
    4214:	ldr	x0, [x19, #24]
    4218:	str	x0, [x20, #8]
    421c:	ldr	w0, [x19, #32]
    4220:	str	w0, [x20, #16]
    4224:	mov	w0, #0xffffffff            	// #-1
    4228:	str	xzr, [x19, #24]
    422c:	str	w0, [x19, #32]
    4230:	b	4264 <srunner_has_tap@@Base+0x6dc>
    4234:	ldr	w0, [x19]
    4238:	cmp	w0, #0x1
    423c:	b.ne	4280 <srunner_has_tap@@Base+0x6f8>  // b.any
    4240:	str	w0, [x20, #4]
    4244:	str	xzr, [x20, #48]
    4248:	ldr	x0, [x19, #8]
    424c:	str	x0, [x20, #8]
    4250:	ldr	w0, [x19, #16]
    4254:	str	w0, [x20, #16]
    4258:	mov	w0, #0xffffffff            	// #-1
    425c:	str	xzr, [x19, #8]
    4260:	str	w0, [x19, #16]
    4264:	mov	x0, x19
    4268:	bl	480c <check_set_max_msg_size@@Base+0x20c>
    426c:	mov	x0, x20
    4270:	ldp	x19, x20, [sp, #16]
    4274:	ldr	x21, [sp, #32]
    4278:	ldp	x29, x30, [sp], #48
    427c:	ret
    4280:	mov	w0, #0x2                   	// #2
    4284:	str	w0, [x20, #4]
    4288:	ldr	w0, [x19, #48]
    428c:	str	w0, [x20, #24]
    4290:	str	xzr, [x20, #48]
    4294:	b	4214 <srunner_has_tap@@Base+0x68c>
    4298:	b	40ec <srunner_has_tap@@Base+0x564>
    429c:	ldr	x2, [x0]
    42a0:	rev	w1, w1
    42a4:	str	w1, [x2]
    42a8:	ldr	x1, [x0]
    42ac:	add	x1, x1, #0x4
    42b0:	str	x1, [x0]
    42b4:	ret
    42b8:	ldr	x1, [x0]
    42bc:	ldr	w2, [x1], #4
    42c0:	str	x1, [x0]
    42c4:	rev	w0, w2
    42c8:	ret
    42cc:	mov	x3, x1
    42d0:	stp	x29, x30, [sp, #-16]!
    42d4:	mov	x29, sp
    42d8:	bl	42b8 <srunner_has_tap@@Base+0x730>
    42dc:	ldp	x29, x30, [sp], #16
    42e0:	str	w0, [x3]
    42e4:	ret
    42e8:	mov	x3, x1
    42ec:	stp	x29, x30, [sp, #-16]!
    42f0:	mov	x29, sp
    42f4:	bl	42b8 <srunner_has_tap@@Base+0x730>
    42f8:	ldp	x29, x30, [sp], #16
    42fc:	str	w0, [x3]
    4300:	ret
    4304:	stp	x29, x30, [sp, #-48]!
    4308:	mov	x29, sp
    430c:	stp	x19, x20, [sp, #16]
    4310:	mov	x20, x0
    4314:	mov	x19, x1
    4318:	mov	x0, #0x8                   	// #8
    431c:	bl	330c <_ck_assert_failed@@Base+0x238>
    4320:	str	x0, [x20]
    4324:	mov	w1, #0x3                   	// #3
    4328:	str	x0, [sp, #40]
    432c:	add	x0, sp, #0x28
    4330:	bl	429c <srunner_has_tap@@Base+0x714>
    4334:	ldr	w1, [x19]
    4338:	bl	429c <srunner_has_tap@@Base+0x714>
    433c:	mov	w0, #0x8                   	// #8
    4340:	ldp	x19, x20, [sp, #16]
    4344:	ldp	x29, x30, [sp], #48
    4348:	ret
    434c:	stp	x29, x30, [sp, #-48]!
    4350:	mov	x29, sp
    4354:	stp	x19, x20, [sp, #16]
    4358:	mov	x20, x0
    435c:	mov	x19, x1
    4360:	mov	x0, #0x8                   	// #8
    4364:	bl	330c <_ck_assert_failed@@Base+0x238>
    4368:	str	x0, [x20]
    436c:	mov	w1, #0x0                   	// #0
    4370:	str	x0, [sp, #40]
    4374:	add	x0, sp, #0x28
    4378:	bl	429c <srunner_has_tap@@Base+0x714>
    437c:	ldr	w1, [x19]
    4380:	bl	429c <srunner_has_tap@@Base+0x714>
    4384:	mov	w0, #0x8                   	// #8
    4388:	ldp	x19, x20, [sp, #16]
    438c:	ldp	x29, x30, [sp], #48
    4390:	ret
    4394:	stp	x29, x30, [sp, #-48]!
    4398:	mov	x29, sp
    439c:	stp	x19, x20, [sp, #16]
    43a0:	mov	x20, x0
    43a4:	str	x21, [sp, #32]
    43a8:	mov	x21, x1
    43ac:	cbz	x1, 43fc <srunner_has_tap@@Base+0x874>
    43b0:	mov	x0, x1
    43b4:	bl	2200 <strlen@plt>
    43b8:	sxtw	x19, w0
    43bc:	mov	w1, w19
    43c0:	mov	x0, x20
    43c4:	bl	429c <srunner_has_tap@@Base+0x714>
    43c8:	cmp	w19, #0x0
    43cc:	b.le	43ec <srunner_has_tap@@Base+0x864>
    43d0:	ldr	x0, [x20]
    43d4:	mov	x2, x19
    43d8:	mov	x1, x21
    43dc:	bl	2190 <memcpy@plt>
    43e0:	ldr	x3, [x20]
    43e4:	add	x3, x3, x19
    43e8:	str	x3, [x20]
    43ec:	ldp	x19, x20, [sp, #16]
    43f0:	ldr	x21, [sp, #32]
    43f4:	ldp	x29, x30, [sp], #48
    43f8:	ret
    43fc:	mov	x19, #0x0                   	// #0
    4400:	b	43bc <srunner_has_tap@@Base+0x834>
    4404:	stp	x29, x30, [sp, #-64]!
    4408:	mov	x29, sp
    440c:	stp	x19, x20, [sp, #16]
    4410:	mov	x20, x0
    4414:	ldr	x0, [x1, #8]
    4418:	str	x21, [sp, #32]
    441c:	mov	x21, x1
    4420:	cbz	x0, 4474 <srunner_has_tap@@Base+0x8ec>
    4424:	bl	2200 <strlen@plt>
    4428:	add	w19, w0, #0xc
    442c:	sxtw	x0, w19
    4430:	bl	330c <_ck_assert_failed@@Base+0x238>
    4434:	str	x0, [x20]
    4438:	add	x20, sp, #0x38
    443c:	mov	w1, #0x2                   	// #2
    4440:	str	x0, [sp, #56]
    4444:	mov	x0, x20
    4448:	bl	429c <srunner_has_tap@@Base+0x714>
    444c:	ldr	x1, [x21, #8]
    4450:	bl	4394 <srunner_has_tap@@Base+0x80c>
    4454:	ldr	w1, [x21]
    4458:	mov	x0, x20
    445c:	bl	429c <srunner_has_tap@@Base+0x714>
    4460:	mov	w0, w19
    4464:	ldp	x19, x20, [sp, #16]
    4468:	ldr	x21, [sp, #32]
    446c:	ldp	x29, x30, [sp], #64
    4470:	ret
    4474:	mov	w19, #0xc                   	// #12
    4478:	b	442c <srunner_has_tap@@Base+0x8a4>
    447c:	stp	x29, x30, [sp, #-64]!
    4480:	mov	x29, sp
    4484:	str	x21, [sp, #32]
    4488:	mov	x21, x0
    448c:	ldr	x0, [x1]
    4490:	stp	x19, x20, [sp, #16]
    4494:	mov	x20, x1
    4498:	cbz	x0, 44dc <srunner_has_tap@@Base+0x954>
    449c:	bl	2200 <strlen@plt>
    44a0:	add	w19, w0, #0x8
    44a4:	sxtw	x0, w19
    44a8:	bl	330c <_ck_assert_failed@@Base+0x238>
    44ac:	str	x0, [x21]
    44b0:	mov	w1, #0x1                   	// #1
    44b4:	str	x0, [sp, #56]
    44b8:	add	x0, sp, #0x38
    44bc:	bl	429c <srunner_has_tap@@Base+0x714>
    44c0:	ldr	x1, [x20]
    44c4:	bl	4394 <srunner_has_tap@@Base+0x80c>
    44c8:	mov	w0, w19
    44cc:	ldp	x19, x20, [sp, #16]
    44d0:	ldr	x21, [sp, #32]
    44d4:	ldp	x29, x30, [sp], #64
    44d8:	ret
    44dc:	mov	w19, #0x8                   	// #8
    44e0:	b	44a4 <srunner_has_tap@@Base+0x91c>
    44e4:	b	25e0 <pthread_mutex_unlock@plt>
    44e8:	stp	x29, x30, [sp, #-16]!
    44ec:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    44f0:	add	x0, x0, #0x505
    44f4:	mov	x29, sp
    44f8:	bl	25c0 <getenv@plt>
    44fc:	cbnz	x0, 451c <srunner_has_tap@@Base+0x994>
    4500:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x1329c>
    4504:	mov	x1, #0x1000                	// #4096
    4508:	ldr	x0, [x0, #720]
    450c:	cmp	x0, #0x0
    4510:	csel	x0, x0, x1, ne  // ne = any
    4514:	ldp	x29, x30, [sp], #16
    4518:	ret
    451c:	mov	w2, #0xa                   	// #10
    4520:	mov	x1, #0x0                   	// #0
    4524:	bl	21f0 <strtoul@plt>
    4528:	cbz	x0, 4500 <srunner_has_tap@@Base+0x978>
    452c:	b	4514 <srunner_has_tap@@Base+0x98c>
    4530:	stp	x29, x30, [sp, #-48]!
    4534:	mov	x29, sp
    4538:	stp	x19, x20, [sp, #16]
    453c:	str	x21, [sp, #32]
    4540:	mov	x21, x0
    4544:	bl	42b8 <srunner_has_tap@@Base+0x730>
    4548:	sxtw	x19, w0
    454c:	cmp	w19, #0x0
    4550:	b.le	4594 <srunner_has_tap@@Base+0xa0c>
    4554:	add	w0, w19, #0x1
    4558:	sxtw	x0, w0
    455c:	bl	330c <_ck_assert_failed@@Base+0x238>
    4560:	ldr	x1, [x21]
    4564:	mov	x20, x0
    4568:	mov	x2, x19
    456c:	bl	2190 <memcpy@plt>
    4570:	strb	wzr, [x20, x19]
    4574:	ldr	x2, [x21]
    4578:	add	x2, x2, x19
    457c:	str	x2, [x21]
    4580:	mov	x0, x20
    4584:	ldp	x19, x20, [sp, #16]
    4588:	ldr	x21, [sp, #32]
    458c:	ldp	x29, x30, [sp], #48
    4590:	ret
    4594:	mov	x0, #0x1                   	// #1
    4598:	bl	330c <_ck_assert_failed@@Base+0x238>
    459c:	mov	x20, x0
    45a0:	strb	wzr, [x0]
    45a4:	b	4580 <srunner_has_tap@@Base+0x9f8>
    45a8:	stp	x29, x30, [sp, #-32]!
    45ac:	mov	x29, sp
    45b0:	stp	x19, x20, [sp, #16]
    45b4:	mov	x19, x1
    45b8:	mov	x20, x0
    45bc:	bl	4530 <srunner_has_tap@@Base+0x9a8>
    45c0:	str	x0, [x19, #8]
    45c4:	mov	x0, x20
    45c8:	bl	42b8 <srunner_has_tap@@Base+0x730>
    45cc:	str	w0, [x19]
    45d0:	ldp	x19, x20, [sp, #16]
    45d4:	ldp	x29, x30, [sp], #32
    45d8:	ret
    45dc:	stp	x29, x30, [sp, #-32]!
    45e0:	mov	x29, sp
    45e4:	str	x19, [sp, #16]
    45e8:	mov	x19, x1
    45ec:	bl	4530 <srunner_has_tap@@Base+0x9a8>
    45f0:	str	x0, [x19]
    45f4:	ldr	x19, [sp, #16]
    45f8:	ldp	x29, x30, [sp], #32
    45fc:	ret

0000000000004600 <check_set_max_msg_size@@Base>:
    4600:	adrp	x1, 19000 <check_waitpid_and_exit@@Base+0x1329c>
    4604:	str	x0, [x1, #720]
    4608:	ret
    460c:	mov	w3, w0
    4610:	mov	x0, x1
    4614:	cbz	x1, 465c <check_set_max_msg_size@@Base+0x5c>
    4618:	mov	x1, x2
    461c:	cbz	x2, 4664 <check_set_max_msg_size@@Base+0x64>
    4620:	cmp	w3, #0x3
    4624:	b.ls	4648 <check_set_max_msg_size@@Base+0x48>  // b.plast
    4628:	stp	x29, x30, [sp, #-16]!
    462c:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4630:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4634:	mov	x29, sp
    4638:	add	x1, x1, #0x515
    463c:	add	x0, x0, #0x522
    4640:	mov	w2, #0x7e                  	// #126
    4644:	bl	31fc <_ck_assert_failed@@Base+0x128>
    4648:	adrp	x2, 18000 <check_waitpid_and_exit@@Base+0x1229c>
    464c:	add	x2, x2, #0xd28
    4650:	ldr	x2, [x2, w3, uxtw #3]
    4654:	mov	x16, x2
    4658:	br	x16
    465c:	mov	w0, #0xffffffff            	// #-1
    4660:	ret
    4664:	mov	w0, #0x0                   	// #0
    4668:	ret
    466c:	stp	x29, x30, [sp, #-48]!
    4670:	mov	x29, sp
    4674:	str	x19, [sp, #16]
    4678:	str	x0, [sp, #40]
    467c:	cbz	x0, 46f0 <check_set_max_msg_size@@Base+0xf0>
    4680:	mov	x5, x2
    4684:	add	x6, sp, #0x28
    4688:	mov	x4, x1
    468c:	mov	x19, x0
    4690:	mov	x0, x6
    4694:	bl	42b8 <srunner_has_tap@@Base+0x730>
    4698:	str	w0, [x5]
    469c:	mov	w3, w0
    46a0:	cmp	w0, #0x3
    46a4:	b.ls	46c0 <check_set_max_msg_size@@Base+0xc0>  // b.plast
    46a8:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    46ac:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    46b0:	add	x1, x1, #0x515
    46b4:	add	x0, x0, #0x522
    46b8:	mov	w2, #0x8e                  	// #142
    46bc:	bl	31fc <_ck_assert_failed@@Base+0x128>
    46c0:	adrp	x2, 18000 <check_waitpid_and_exit@@Base+0x1229c>
    46c4:	add	x2, x2, #0xd28
    46c8:	add	x2, x2, #0x20
    46cc:	mov	x1, x4
    46d0:	mov	x0, x6
    46d4:	ldr	x2, [x2, w3, uxtw #3]
    46d8:	blr	x2
    46dc:	ldr	x1, [sp, #40]
    46e0:	sub	w0, w1, w19
    46e4:	ldr	x19, [sp, #16]
    46e8:	ldp	x29, x30, [sp], #48
    46ec:	ret
    46f0:	mov	w0, #0xffffffff            	// #-1
    46f4:	b	46e4 <check_set_max_msg_size@@Base+0xe4>
    46f8:	stp	x29, x30, [sp, #-320]!
    46fc:	mov	x29, sp
    4700:	stp	x19, x20, [sp, #16]
    4704:	str	x21, [sp, #32]
    4708:	str	x0, [sp, #64]
    470c:	mov	w0, w1
    4710:	add	x1, sp, #0x58
    4714:	str	xzr, [sp, #88]
    4718:	bl	460c <check_set_max_msg_size@@Base+0xc>
    471c:	sxtw	x0, w0
    4720:	str	x0, [sp, #56]
    4724:	bl	44e8 <srunner_has_tap@@Base+0x960>
    4728:	ldr	x1, [sp, #56]
    472c:	cmp	x1, x0
    4730:	b.ls	474c <check_set_max_msg_size@@Base+0x14c>  // b.plast
    4734:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4738:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    473c:	add	x1, x1, #0x515
    4740:	add	x0, x0, #0x53a
    4744:	mov	w2, #0x146                 	// #326
    4748:	bl	31fc <_ck_assert_failed@@Base+0x128>
    474c:	adrp	x0, 4000 <srunner_has_tap@@Base+0x478>
    4750:	add	x0, x0, #0x4e4
    4754:	mov	w1, #0x0                   	// #0
    4758:	str	x0, [sp, #72]
    475c:	add	x0, sp, #0x60
    4760:	bl	2260 <__sigsetjmp@plt>
    4764:	cbz	w0, 4784 <check_set_max_msg_size@@Base+0x184>
    4768:	ldr	x1, [sp, #72]
    476c:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x1329c>
    4770:	add	x0, x0, #0x2d0
    4774:	add	x0, x0, #0x8
    4778:	blr	x1
    477c:	add	x0, sp, #0x60
    4780:	bl	23c0 <__pthread_unwind_next@plt>
    4784:	add	x21, sp, #0x60
    4788:	adrp	x19, 19000 <check_waitpid_and_exit@@Base+0x1329c>
    478c:	add	x19, x19, #0x2d0
    4790:	mov	x0, x21
    4794:	add	x19, x19, #0x8
    4798:	bl	22e0 <__pthread_register_cancel@plt>
    479c:	mov	x0, x19
    47a0:	bl	25d0 <pthread_mutex_lock@plt>
    47a4:	ldp	x2, x3, [sp, #56]
    47a8:	mov	x1, #0x1                   	// #1
    47ac:	ldr	x0, [sp, #88]
    47b0:	bl	2510 <fwrite@plt>
    47b4:	mov	x20, x0
    47b8:	ldr	x0, [sp, #64]
    47bc:	bl	2530 <fflush@plt>
    47c0:	mov	x0, x19
    47c4:	bl	25e0 <pthread_mutex_unlock@plt>
    47c8:	mov	x0, x21
    47cc:	bl	2390 <__pthread_unregister_cancel@plt>
    47d0:	ldr	x0, [sp, #56]
    47d4:	cmp	x0, x20
    47d8:	b.eq	47f4 <check_set_max_msg_size@@Base+0x1f4>  // b.none
    47dc:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    47e0:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    47e4:	add	x1, x1, #0x515
    47e8:	add	x0, x0, #0x552
    47ec:	mov	w2, #0x14f                 	// #335
    47f0:	b	4748 <check_set_max_msg_size@@Base+0x148>
    47f4:	ldr	x0, [sp, #88]
    47f8:	bl	24b0 <free@plt>
    47fc:	ldp	x19, x20, [sp, #16]
    4800:	ldr	x21, [sp, #32]
    4804:	ldp	x29, x30, [sp], #320
    4808:	ret
    480c:	stp	x29, x30, [sp, #-32]!
    4810:	mov	x29, sp
    4814:	str	x19, [sp, #16]
    4818:	mov	x19, x0
    481c:	ldr	x0, [x0, #8]
    4820:	bl	24b0 <free@plt>
    4824:	ldr	x0, [x19, #24]
    4828:	bl	24b0 <free@plt>
    482c:	ldr	x0, [x19, #40]
    4830:	bl	24b0 <free@plt>
    4834:	mov	x0, x19
    4838:	ldr	x19, [sp, #16]
    483c:	ldp	x29, x30, [sp], #32
    4840:	b	24b0 <free@plt>
    4844:	stp	x29, x30, [sp, #-144]!
    4848:	mov	x29, sp
    484c:	stp	x19, x20, [sp, #16]
    4850:	stp	x21, x22, [sp, #32]
    4854:	stp	x23, x24, [sp, #48]
    4858:	mov	x24, x0
    485c:	mov	x0, #0x38                  	// #56
    4860:	stp	x25, x26, [sp, #64]
    4864:	mov	w25, #0xffffffff            	// #-1
    4868:	stp	x27, x28, [sp, #80]
    486c:	bl	330c <_ck_assert_failed@@Base+0x238>
    4870:	mov	x19, x0
    4874:	stp	xzr, xzr, [x0]
    4878:	str	w25, [x0, #16]
    487c:	str	xzr, [x0, #24]
    4880:	str	w25, [x0, #32]
    4884:	str	xzr, [x0, #40]
    4888:	str	w25, [x0, #48]
    488c:	bl	44e8 <srunner_has_tap@@Base+0x960>
    4890:	lsl	x0, x0, #1
    4894:	bl	330c <_ck_assert_failed@@Base+0x238>
    4898:	mov	x20, x0
    489c:	bl	44e8 <srunner_has_tap@@Base+0x960>
    48a0:	sbfiz	x2, x0, #1, #31
    48a4:	mov	x3, x24
    48a8:	mov	x1, #0x1                   	// #1
    48ac:	mov	x0, x20
    48b0:	bl	2480 <fread@plt>
    48b4:	mov	x22, x0
    48b8:	mov	w21, w0
    48bc:	mov	x0, x24
    48c0:	bl	2620 <ferror@plt>
    48c4:	cbnz	w0, 4918 <check_set_max_msg_size@@Base+0x318>
    48c8:	add	x26, sp, #0x7c
    48cc:	add	x27, sp, #0x80
    48d0:	str	w25, [sp, #100]
    48d4:	cmp	w21, #0x0
    48d8:	b.gt	4930 <check_set_max_msg_size@@Base+0x330>
    48dc:	mov	x0, x20
    48e0:	bl	24b0 <free@plt>
    48e4:	ldr	w0, [x19]
    48e8:	cbnz	w0, 48f8 <check_set_max_msg_size@@Base+0x2f8>
    48ec:	mov	x0, x19
    48f0:	mov	x19, #0x0                   	// #0
    48f4:	bl	24b0 <free@plt>
    48f8:	mov	x0, x19
    48fc:	ldp	x19, x20, [sp, #16]
    4900:	ldp	x21, x22, [sp, #32]
    4904:	ldp	x23, x24, [sp, #48]
    4908:	ldp	x25, x26, [sp, #64]
    490c:	ldp	x27, x28, [sp, #80]
    4910:	ldp	x29, x30, [sp], #144
    4914:	ret
    4918:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    491c:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4920:	add	x1, x1, #0x515
    4924:	add	x0, x0, #0x56b
    4928:	mov	w2, #0x15a                 	// #346
    492c:	bl	31fc <_ck_assert_failed@@Base+0x128>
    4930:	mov	x2, x26
    4934:	mov	x1, x27
    4938:	mov	x0, x20
    493c:	bl	466c <check_set_max_msg_size@@Base+0x6c>
    4940:	mov	w23, w0
    4944:	cmn	w0, #0x1
    4948:	b.ne	4964 <check_set_max_msg_size@@Base+0x364>  // b.any
    494c:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4950:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4954:	add	x1, x1, #0x515
    4958:	add	x0, x0, #0x583
    495c:	mov	w2, #0x16a                 	// #362
    4960:	b	492c <check_set_max_msg_size@@Base+0x32c>
    4964:	ldr	w3, [sp, #124]
    4968:	cbnz	w3, 49b0 <check_set_max_msg_size@@Base+0x3b0>
    496c:	ldr	w0, [x19]
    4970:	ldr	w28, [sp, #128]
    4974:	cbz	w0, 498c <check_set_max_msg_size@@Base+0x38c>
    4978:	ldr	x0, [x19, #8]
    497c:	bl	24b0 <free@plt>
    4980:	str	xzr, [x19, #8]
    4984:	ldr	w0, [sp, #100]
    4988:	str	w0, [x19, #16]
    498c:	str	w28, [x19]
    4990:	subs	w21, w21, w23
    4994:	b.pl	4a74 <check_set_max_msg_size@@Base+0x474>  // b.nfrst
    4998:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    499c:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    49a0:	add	x1, x1, #0x515
    49a4:	add	x0, x0, #0x59a
    49a8:	mov	w2, #0x1e6                 	// #486
    49ac:	b	492c <check_set_max_msg_size@@Base+0x32c>
    49b0:	cmp	w3, #0x2
    49b4:	b.ne	4a14 <check_set_max_msg_size@@Base+0x414>  // b.any
    49b8:	ldr	w0, [x19, #4]
    49bc:	cbnz	w0, 49ec <check_set_max_msg_size@@Base+0x3ec>
    49c0:	ldr	w0, [x19]
    49c4:	ldr	w28, [sp, #128]
    49c8:	cmp	w0, #0x2
    49cc:	ldr	x25, [sp, #136]
    49d0:	b.ne	49f8 <check_set_max_msg_size@@Base+0x3f8>  // b.any
    49d4:	ldr	x0, [x19, #24]
    49d8:	bl	24b0 <free@plt>
    49dc:	str	w28, [x19, #32]
    49e0:	mov	x0, x25
    49e4:	bl	23d0 <strdup@plt>
    49e8:	str	x0, [x19, #24]
    49ec:	ldr	x0, [sp, #136]
    49f0:	bl	24b0 <free@plt>
    49f4:	b	4990 <check_set_max_msg_size@@Base+0x390>
    49f8:	ldr	x0, [x19, #8]
    49fc:	bl	24b0 <free@plt>
    4a00:	str	w28, [x19, #16]
    4a04:	mov	x0, x25
    4a08:	bl	23d0 <strdup@plt>
    4a0c:	str	x0, [x19, #8]
    4a10:	b	49ec <check_set_max_msg_size@@Base+0x3ec>
    4a14:	cmp	w3, #0x1
    4a18:	b.ne	4a44 <check_set_max_msg_size@@Base+0x444>  // b.any
    4a1c:	ldr	x0, [x19, #40]
    4a20:	ldr	x28, [sp, #128]
    4a24:	cbnz	x0, 4a3c <check_set_max_msg_size@@Base+0x43c>
    4a28:	mov	x0, x28
    4a2c:	bl	23d0 <strdup@plt>
    4a30:	str	x0, [x19, #40]
    4a34:	ldr	w0, [x19]
    4a38:	str	w0, [x19, #4]
    4a3c:	mov	x0, x28
    4a40:	b	49f0 <check_set_max_msg_size@@Base+0x3f0>
    4a44:	cmp	w3, #0x3
    4a48:	b.ne	4a58 <check_set_max_msg_size@@Base+0x458>  // b.any
    4a4c:	ldr	w0, [sp, #128]
    4a50:	str	w0, [x19, #48]
    4a54:	b	4990 <check_set_max_msg_size@@Base+0x390>
    4a58:	b.ls	4990 <check_set_max_msg_size@@Base+0x390>  // b.plast
    4a5c:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4a60:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4a64:	add	x1, x1, #0x515
    4a68:	add	x0, x0, #0x522
    4a6c:	mov	w2, #0x194                 	// #404
    4a70:	bl	31fc <_ck_assert_failed@@Base+0x128>
    4a74:	sxtw	x4, w23
    4a78:	sxtw	x28, w21
    4a7c:	mov	x2, x28
    4a80:	add	x1, x20, w23, sxtw
    4a84:	mov	x0, x20
    4a88:	str	x4, [sp, #104]
    4a8c:	bl	21a0 <memmove@plt>
    4a90:	cmp	w22, #0x0
    4a94:	ldr	x4, [sp, #104]
    4a98:	b.le	48d4 <check_set_max_msg_size@@Base+0x2d4>
    4a9c:	mov	x3, x24
    4aa0:	mov	x2, x4
    4aa4:	mov	x1, #0x1                   	// #1
    4aa8:	add	x0, x20, x28
    4aac:	bl	2480 <fread@plt>
    4ab0:	mov	x23, x0
    4ab4:	mov	w22, w0
    4ab8:	mov	x0, x24
    4abc:	bl	2620 <ferror@plt>
    4ac0:	cbnz	w0, 4918 <check_set_max_msg_size@@Base+0x318>
    4ac4:	add	w21, w21, w23
    4ac8:	b	48d4 <check_set_max_msg_size@@Base+0x2d4>
    4acc:	stp	x29, x30, [sp, #-64]!
    4ad0:	mov	x29, sp
    4ad4:	stp	x19, x20, [sp, #16]
    4ad8:	mov	x19, x0
    4adc:	mov	x20, x1
    4ae0:	stp	x21, x22, [sp, #32]
    4ae4:	adrp	x21, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4ae8:	adrp	x22, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4aec:	add	x21, x21, #0x5d4
    4af0:	add	x22, x22, #0x5ce
    4af4:	str	x23, [sp, #48]
    4af8:	mov	x23, #0x8400000000          	// #566935683072
    4afc:	movk	x23, #0x5000, lsl #48
    4b00:	ldrb	w2, [x20]
    4b04:	cbnz	w2, 4b1c <check_set_max_msg_size@@Base+0x51c>
    4b08:	ldp	x19, x20, [sp, #16]
    4b0c:	ldp	x21, x22, [sp, #32]
    4b10:	ldr	x23, [sp, #48]
    4b14:	ldp	x29, x30, [sp], #64
    4b18:	ret
    4b1c:	cmp	w2, #0x3e
    4b20:	b.hi	4b34 <check_set_max_msg_size@@Base+0x534>  // b.pmore
    4b24:	lsr	x0, x23, x2
    4b28:	tbnz	w0, #0, 4b54 <check_set_max_msg_size@@Base+0x554>
    4b2c:	cmp	w2, #0x26
    4b30:	b.eq	4bcc <check_set_max_msg_size@@Base+0x5cc>  // b.none
    4b34:	sub	w0, w2, #0x20
    4b38:	and	w0, w0, #0xff
    4b3c:	cmp	w0, #0x5e
    4b40:	b.hi	4bd8 <check_set_max_msg_size@@Base+0x5d8>  // b.pmore
    4b44:	mov	x1, x19
    4b48:	mov	w0, w2
    4b4c:	bl	22a0 <fputc@plt>
    4b50:	b	4b70 <check_set_max_msg_size@@Base+0x570>
    4b54:	cmp	w2, #0x27
    4b58:	b.eq	4bac <check_set_max_msg_size@@Base+0x5ac>  // b.none
    4b5c:	b.hi	4b78 <check_set_max_msg_size@@Base+0x578>  // b.pmore
    4b60:	cmp	w2, #0x22
    4b64:	b.eq	4b98 <check_set_max_msg_size@@Base+0x598>  // b.none
    4b68:	cmp	w2, #0x26
    4b6c:	b.eq	4bcc <check_set_max_msg_size@@Base+0x5cc>  // b.none
    4b70:	add	x20, x20, #0x1
    4b74:	b	4b00 <check_set_max_msg_size@@Base+0x500>
    4b78:	cmp	w2, #0x3c
    4b7c:	b.eq	4bbc <check_set_max_msg_size@@Base+0x5bc>  // b.none
    4b80:	cmp	w2, #0x3e
    4b84:	b.ne	4b70 <check_set_max_msg_size@@Base+0x570>  // b.any
    4b88:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4b8c:	mov	x1, x19
    4b90:	add	x0, x0, #0x5c9
    4b94:	b	4ba4 <check_set_max_msg_size@@Base+0x5a4>
    4b98:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4b9c:	mov	x1, x19
    4ba0:	add	x0, x0, #0x5b6
    4ba4:	bl	2210 <fputs@plt>
    4ba8:	b	4b70 <check_set_max_msg_size@@Base+0x570>
    4bac:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4bb0:	mov	x1, x19
    4bb4:	add	x0, x0, #0x5bd
    4bb8:	b	4ba4 <check_set_max_msg_size@@Base+0x5a4>
    4bbc:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4bc0:	mov	x1, x19
    4bc4:	add	x0, x0, #0x5c4
    4bc8:	b	4ba4 <check_set_max_msg_size@@Base+0x5a4>
    4bcc:	mov	x1, x19
    4bd0:	mov	x0, x22
    4bd4:	b	4ba4 <check_set_max_msg_size@@Base+0x5a4>
    4bd8:	sub	w0, w2, #0x9
    4bdc:	and	w0, w0, #0xff
    4be0:	cmp	w0, #0x1
    4be4:	ccmp	w2, #0xd, #0x4, hi  // hi = pmore
    4be8:	b.eq	4bf4 <check_set_max_msg_size@@Base+0x5f4>  // b.none
    4bec:	cmp	w2, #0x1f
    4bf0:	b.ls	4b70 <check_set_max_msg_size@@Base+0x570>  // b.plast
    4bf4:	mov	x1, x21
    4bf8:	mov	x0, x19
    4bfc:	bl	2610 <fprintf@plt>
    4c00:	b	4b70 <check_set_max_msg_size@@Base+0x570>
    4c04:	stp	x29, x30, [sp, #-80]!
    4c08:	mov	x29, sp
    4c0c:	stp	x19, x20, [sp, #16]
    4c10:	mov	x19, x0
    4c14:	ldr	w0, [x1]
    4c18:	stp	x21, x22, [sp, #32]
    4c1c:	mov	x22, x1
    4c20:	cmp	w0, #0x2
    4c24:	stp	x23, x24, [sp, #48]
    4c28:	add	x24, sp, #0x40
    4c2c:	b.eq	4db4 <check_set_max_msg_size@@Base+0x7b4>  // b.none
    4c30:	cmp	w0, #0x3
    4c34:	b.eq	4dc0 <check_set_max_msg_size@@Base+0x7c0>  // b.none
    4c38:	cmp	w0, #0x1
    4c3c:	b.ne	4dcc <check_set_max_msg_size@@Base+0x7cc>  // b.any
    4c40:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4c44:	add	x1, x1, #0x5db
    4c48:	mov	x0, x24
    4c4c:	bl	2540 <strcpy@plt>
    4c50:	ldr	x20, [x22, #8]
    4c54:	cbz	x20, 4dec <check_set_max_msg_size@@Base+0x7ec>
    4c58:	mov	x0, x20
    4c5c:	mov	w1, #0x2f                  	// #47
    4c60:	bl	2400 <strrchr@plt>
    4c64:	mov	x23, x0
    4c68:	cbnz	x0, 4dd0 <check_set_max_msg_size@@Base+0x7d0>
    4c6c:	mov	x0, x20
    4c70:	mov	w1, #0x5c                  	// #92
    4c74:	bl	2400 <strrchr@plt>
    4c78:	mov	x23, x0
    4c7c:	cbnz	x0, 4dd0 <check_set_max_msg_size@@Base+0x7d0>
    4c80:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4c84:	add	x0, x0, #0x5f1
    4c88:	bl	23d0 <strdup@plt>
    4c8c:	mov	x21, x0
    4c90:	mov	x2, x24
    4c94:	mov	x0, x19
    4c98:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4c9c:	add	x1, x1, #0x5f3
    4ca0:	bl	2610 <fprintf@plt>
    4ca4:	adrp	x23, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4ca8:	cmp	x21, #0x0
    4cac:	add	x23, x23, #0x2ba
    4cb0:	csel	x2, x23, x21, eq  // eq = none
    4cb4:	mov	x0, x19
    4cb8:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4cbc:	add	x1, x1, #0x60b
    4cc0:	bl	2610 <fprintf@plt>
    4cc4:	ldr	w3, [x22, #16]
    4cc8:	cmp	x20, #0x0
    4ccc:	csel	x20, x20, x23, ne  // ne = any
    4cd0:	mov	x0, x19
    4cd4:	mov	x2, x20
    4cd8:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4cdc:	add	x1, x1, #0x622
    4ce0:	bl	2610 <fprintf@plt>
    4ce4:	ldr	x2, [x22, #40]
    4ce8:	mov	x0, x19
    4cec:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4cf0:	add	x1, x1, #0x638
    4cf4:	bl	2610 <fprintf@plt>
    4cf8:	ldr	w2, [x22, #20]
    4cfc:	mov	x0, x19
    4d00:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4d04:	add	x1, x1, #0x64b
    4d08:	bl	2610 <fprintf@plt>
    4d0c:	ldr	w0, [x22, #24]
    4d10:	tbnz	w0, #31, 4df4 <check_set_max_msg_size@@Base+0x7f4>
    4d14:	mov	w3, #0x4240                	// #16960
    4d18:	movk	w3, #0xf, lsl #16
    4d1c:	sdiv	w2, w0, w3
    4d20:	msub	w3, w2, w3, w0
    4d24:	mov	x0, x19
    4d28:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4d2c:	add	x1, x1, #0x66c
    4d30:	bl	2610 <fprintf@plt>
    4d34:	mov	x1, x19
    4d38:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4d3c:	add	x0, x0, #0x690
    4d40:	bl	2210 <fputs@plt>
    4d44:	ldr	x1, [x22, #32]
    4d48:	mov	x0, x19
    4d4c:	bl	4acc <check_set_max_msg_size@@Base+0x4cc>
    4d50:	mov	x1, x19
    4d54:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4d58:	add	x0, x0, #0x6a4
    4d5c:	bl	2210 <fputs@plt>
    4d60:	mov	x1, x19
    4d64:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4d68:	add	x0, x0, #0x6b4
    4d6c:	bl	2210 <fputs@plt>
    4d70:	ldr	x1, [x22, #48]
    4d74:	mov	x0, x19
    4d78:	bl	4acc <check_set_max_msg_size@@Base+0x4cc>
    4d7c:	mov	x1, x19
    4d80:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4d84:	add	x0, x0, #0x6c4
    4d88:	bl	2210 <fputs@plt>
    4d8c:	mov	x1, x19
    4d90:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4d94:	add	x0, x0, #0x6d0
    4d98:	bl	2210 <fputs@plt>
    4d9c:	mov	x0, x21
    4da0:	ldp	x19, x20, [sp, #16]
    4da4:	ldp	x21, x22, [sp, #32]
    4da8:	ldp	x23, x24, [sp, #48]
    4dac:	ldp	x29, x30, [sp], #80
    4db0:	b	24b0 <free@plt>
    4db4:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4db8:	add	x1, x1, #0x5e3
    4dbc:	b	4c48 <check_set_max_msg_size@@Base+0x648>
    4dc0:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4dc4:	add	x1, x1, #0x5eb
    4dc8:	b	4c48 <check_set_max_msg_size@@Base+0x648>
    4dcc:	bl	2420 <abort@plt>
    4dd0:	mov	x0, x20
    4dd4:	sub	x20, x23, x20
    4dd8:	bl	23d0 <strdup@plt>
    4ddc:	mov	x21, x0
    4de0:	strb	wzr, [x0, x20]
    4de4:	add	x20, x23, #0x1
    4de8:	b	4c90 <check_set_max_msg_size@@Base+0x690>
    4dec:	mov	x21, #0x0                   	// #0
    4df0:	b	4c90 <check_set_max_msg_size@@Base+0x690>
    4df4:	mov	w2, #0xffffffff            	// #-1
    4df8:	mov	w3, #0x0                   	// #0
    4dfc:	b	4d24 <check_set_max_msg_size@@Base+0x724>
    4e00:	stp	x29, x30, [sp, #-32]!
    4e04:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4e08:	add	x0, x0, #0x6dd
    4e0c:	mov	x29, sp
    4e10:	str	x19, [sp, #16]
    4e14:	bl	25c0 <getenv@plt>
    4e18:	cbz	x0, 4e6c <check_set_max_msg_size@@Base+0x86c>
    4e1c:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4e20:	mov	x19, x0
    4e24:	add	x1, x1, #0x6ea
    4e28:	bl	2450 <strcmp@plt>
    4e2c:	cbz	w0, 4e74 <check_set_max_msg_size@@Base+0x874>
    4e30:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4e34:	mov	x0, x19
    4e38:	add	x1, x1, #0x6f1
    4e3c:	bl	2450 <strcmp@plt>
    4e40:	cbz	w0, 4e7c <check_set_max_msg_size@@Base+0x87c>
    4e44:	mov	x0, x19
    4e48:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4e4c:	add	x1, x1, #0x6f9
    4e50:	bl	2450 <strcmp@plt>
    4e54:	cmp	w0, #0x0
    4e58:	cset	w0, eq  // eq = none
    4e5c:	add	w0, w0, #0x2
    4e60:	ldr	x19, [sp, #16]
    4e64:	ldp	x29, x30, [sp], #32
    4e68:	ret
    4e6c:	mov	w0, #0x2                   	// #2
    4e70:	b	4e60 <check_set_max_msg_size@@Base+0x860>
    4e74:	mov	w0, #0x0                   	// #0
    4e78:	b	4e60 <check_set_max_msg_size@@Base+0x860>
    4e7c:	mov	w0, #0x1                   	// #1
    4e80:	b	4e60 <check_set_max_msg_size@@Base+0x860>
    4e84:	stp	x29, x30, [sp, #-32]!
    4e88:	cmp	w2, #0x4
    4e8c:	mov	x29, sp
    4e90:	stp	x19, x20, [sp, #16]
    4e94:	mov	x20, x0
    4e98:	mov	x19, x1
    4e9c:	b.ne	4ea8 <check_set_max_msg_size@@Base+0x8a8>  // b.any
    4ea0:	bl	4e00 <check_set_max_msg_size@@Base+0x800>
    4ea4:	mov	w2, w0
    4ea8:	cmp	w2, #0x2
    4eac:	b.hi	4ec4 <check_set_max_msg_size@@Base+0x8c4>  // b.pmore
    4eb0:	ldr	w0, [x19]
    4eb4:	cmp	w0, #0x1
    4eb8:	b.eq	4ef4 <check_set_max_msg_size@@Base+0x8f4>  // b.none
    4ebc:	cmp	w2, #0x2
    4ec0:	b.ne	4ef4 <check_set_max_msg_size@@Base+0x8f4>  // b.any
    4ec4:	mov	x0, x19
    4ec8:	bl	5ea4 <check_waitpid_and_exit@@Base+0x140>
    4ecc:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4ed0:	mov	x19, x0
    4ed4:	mov	x2, x0
    4ed8:	add	x1, x1, #0x264
    4edc:	mov	x0, x20
    4ee0:	bl	2610 <fprintf@plt>
    4ee4:	mov	x0, x19
    4ee8:	ldp	x19, x20, [sp, #16]
    4eec:	ldp	x29, x30, [sp], #32
    4ef0:	b	24b0 <free@plt>
    4ef4:	ldp	x19, x20, [sp, #16]
    4ef8:	ldp	x29, x30, [sp], #32
    4efc:	ret
    4f00:	stp	x29, x30, [sp, #-48]!
    4f04:	cmp	w2, #0x4
    4f08:	mov	x29, sp
    4f0c:	stp	x19, x20, [sp, #16]
    4f10:	mov	x20, x1
    4f14:	stp	x21, x22, [sp, #32]
    4f18:	mov	x21, x0
    4f1c:	b.ne	4f7c <check_set_max_msg_size@@Base+0x97c>  // b.any
    4f20:	bl	4e00 <check_set_max_msg_size@@Base+0x800>
    4f24:	mov	w19, w0
    4f28:	cbz	w19, 4f54 <check_set_max_msg_size@@Base+0x954>
    4f2c:	mov	x0, x20
    4f30:	bl	5f7c <check_waitpid_and_exit@@Base+0x218>
    4f34:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    4f38:	mov	x2, x0
    4f3c:	add	x1, x1, #0x264
    4f40:	mov	x22, x0
    4f44:	mov	x0, x21
    4f48:	bl	2610 <fprintf@plt>
    4f4c:	mov	x0, x22
    4f50:	bl	24b0 <free@plt>
    4f54:	ldr	x20, [x20, #16]
    4f58:	mov	x0, x20
    4f5c:	bl	34e4 <_ck_assert_failed@@Base+0x410>
    4f60:	mov	x0, x20
    4f64:	bl	34c0 <_ck_assert_failed@@Base+0x3ec>
    4f68:	cbz	w0, 4f84 <check_set_max_msg_size@@Base+0x984>
    4f6c:	ldp	x19, x20, [sp, #16]
    4f70:	ldp	x21, x22, [sp, #32]
    4f74:	ldp	x29, x30, [sp], #48
    4f78:	ret
    4f7c:	mov	w19, w2
    4f80:	b	4f28 <check_set_max_msg_size@@Base+0x928>
    4f84:	mov	x0, x20
    4f88:	bl	3528 <_ck_assert_failed@@Base+0x454>
    4f8c:	mov	w2, w19
    4f90:	mov	x1, x0
    4f94:	mov	x0, x21
    4f98:	bl	4e84 <check_set_max_msg_size@@Base+0x884>
    4f9c:	mov	x0, x20
    4fa0:	bl	3558 <_ck_assert_failed@@Base+0x484>
    4fa4:	b	4f60 <check_set_max_msg_size@@Base+0x960>

0000000000004fa8 <srunner_print@@Base>:
    4fa8:	mov	w2, w1
    4fac:	mov	x1, x0
    4fb0:	adrp	x0, 18000 <check_waitpid_and_exit@@Base+0x1229c>
    4fb4:	ldr	x0, [x0, #4016]
    4fb8:	ldr	x0, [x0]
    4fbc:	b	4f00 <check_set_max_msg_size@@Base+0x900>
    4fc0:	and	w2, w0, #0x7f
    4fc4:	add	w3, w2, #0x1
    4fc8:	sbfx	x3, x3, #1, #7
    4fcc:	cmp	w3, #0x0
    4fd0:	ccmp	w2, w1, #0x4, gt
    4fd4:	b.ne	4fe8 <srunner_print@@Base+0x40>  // b.any
    4fd8:	tst	x0, #0xff00
    4fdc:	ccmp	w2, #0x0, #0x0, ne  // ne = any
    4fe0:	cset	w0, eq  // eq = none
    4fe4:	ret
    4fe8:	mov	w0, #0x1                   	// #1
    4fec:	b	4fe4 <srunner_print@@Base+0x3c>
    4ff0:	stp	x29, x30, [sp, #-48]!
    4ff4:	mov	x29, sp
    4ff8:	str	x0, [sp, #16]
    4ffc:	str	w1, [sp, #36]
    5000:	bl	34e4 <_ck_assert_failed@@Base+0x410>
    5004:	adrp	x0, 18000 <check_waitpid_and_exit@@Base+0x1229c>
    5008:	ldr	x0, [x0, #4056]
    500c:	str	x0, [sp, #40]
    5010:	ldr	x0, [sp, #16]
    5014:	bl	34c0 <_ck_assert_failed@@Base+0x3ec>
    5018:	cbz	w0, 5024 <srunner_print@@Base+0x7c>
    501c:	ldp	x29, x30, [sp], #48
    5020:	ret
    5024:	ldr	x0, [sp, #16]
    5028:	bl	3528 <_ck_assert_failed@@Base+0x454>
    502c:	str	x0, [sp, #24]
    5030:	mov	w0, #0x3                   	// #3
    5034:	bl	4034 <srunner_has_tap@@Base+0x4ac>
    5038:	ldr	w0, [sp, #36]
    503c:	cmp	w0, #0x2
    5040:	b.ne	5050 <srunner_print@@Base+0xa8>  // b.any
    5044:	ldr	x0, [sp, #40]
    5048:	bl	2230 <_setjmp@plt>
    504c:	cbnz	w0, 501c <srunner_print@@Base+0x74>
    5050:	ldr	x0, [sp, #24]
    5054:	ldr	x0, [x0, #8]
    5058:	blr	x0
    505c:	ldr	x0, [sp, #16]
    5060:	bl	3558 <_ck_assert_failed@@Base+0x484>
    5064:	b	5010 <srunner_print@@Base+0x68>
    5068:	stp	x29, x30, [sp, #-32]!
    506c:	mov	x29, sp
    5070:	stp	x19, x20, [sp, #16]
    5074:	mov	x19, x0
    5078:	mov	x20, x1
    507c:	ldr	x0, [x0, #16]
    5080:	bl	3474 <_ck_assert_failed@@Base+0x3a0>
    5084:	ldr	x0, [x19, #8]
    5088:	ldr	w1, [x0]
    508c:	add	w1, w1, #0x1
    5090:	str	w1, [x0]
    5094:	ldr	w1, [x20]
    5098:	cmp	w1, #0x2
    509c:	b.ne	50b8 <srunner_print@@Base+0x110>  // b.any
    50a0:	ldr	w1, [x0, #4]
    50a4:	add	w1, w1, #0x1
    50a8:	str	w1, [x0, #4]
    50ac:	ldp	x19, x20, [sp, #16]
    50b0:	ldp	x29, x30, [sp], #32
    50b4:	ret
    50b8:	cmp	w1, #0x3
    50bc:	b.ne	50ac <srunner_print@@Base+0x104>  // b.any
    50c0:	ldr	w1, [x0, #8]
    50c4:	add	w1, w1, #0x1
    50c8:	str	w1, [x0, #8]
    50cc:	b	50ac <srunner_print@@Base+0x104>
    50d0:	stp	x29, x30, [sp, #-64]!
    50d4:	mov	x29, sp
    50d8:	stp	x19, x20, [sp, #16]
    50dc:	stp	x21, x22, [sp, #32]
    50e0:	mov	w21, w1
    50e4:	str	x23, [sp, #48]
    50e8:	mov	w23, w0
    50ec:	mov	x0, #0x64                  	// #100
    50f0:	bl	330c <_ck_assert_failed@@Base+0x238>
    50f4:	mov	x19, x0
    50f8:	mov	w0, w23
    50fc:	bl	2580 <strsignal@plt>
    5100:	bl	23d0 <strdup@plt>
    5104:	mov	x22, x0
    5108:	mov	w0, w21
    510c:	bl	2580 <strsignal@plt>
    5110:	bl	23d0 <strdup@plt>
    5114:	mov	x20, x0
    5118:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x1329c>
    511c:	ldr	w0, [x0, #776]
    5120:	cbz	w0, 5168 <srunner_print@@Base+0x1c0>
    5124:	adrp	x2, 6000 <check_waitpid_and_exit@@Base+0x29c>
    5128:	mov	x4, x20
    512c:	mov	w3, w21
    5130:	add	x2, x2, #0x701
    5134:	mov	x0, x19
    5138:	mov	x1, #0x64                  	// #100
    513c:	bl	22f0 <snprintf@plt>
    5140:	mov	x0, x22
    5144:	bl	24b0 <free@plt>
    5148:	mov	x0, x20
    514c:	bl	24b0 <free@plt>
    5150:	mov	x0, x19
    5154:	ldp	x19, x20, [sp, #16]
    5158:	ldp	x21, x22, [sp, #32]
    515c:	ldr	x23, [sp, #48]
    5160:	ldp	x29, x30, [sp], #64
    5164:	ret
    5168:	mov	x6, x20
    516c:	mov	w5, w21
    5170:	mov	x4, x22
    5174:	mov	w3, w23
    5178:	mov	x0, x19
    517c:	adrp	x2, 6000 <check_waitpid_and_exit@@Base+0x29c>
    5180:	mov	x1, #0x64                  	// #100
    5184:	add	x2, x2, #0x72f
    5188:	bl	22f0 <snprintf@plt>
    518c:	b	5140 <srunner_print@@Base+0x198>
    5190:	cmp	w0, #0xe
    5194:	b.eq	51f0 <srunner_print@@Base+0x248>  // b.none
    5198:	stp	x29, x30, [sp, #-32]!
    519c:	cmp	w0, #0xf
    51a0:	mov	x29, sp
    51a4:	str	x19, [sp, #16]
    51a8:	mov	w19, w0
    51ac:	b.eq	520c <srunner_print@@Base+0x264>  // b.none
    51b0:	cmp	w0, #0x2
    51b4:	b.ne	5228 <srunner_print@@Base+0x280>  // b.any
    51b8:	adrp	x1, 19000 <check_waitpid_and_exit@@Base+0x1329c>
    51bc:	add	x1, x1, #0x308
    51c0:	add	x1, x1, #0x8
    51c4:	mov	x2, #0x0                   	// #0
    51c8:	bl	23f0 <sigaction@plt>
    51cc:	mov	w1, #0x9                   	// #9
    51d0:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x1329c>
    51d4:	ldr	w0, [x0, #780]
    51d8:	bl	2500 <killpg@plt>
    51dc:	bl	24c0 <getpgrp@plt>
    51e0:	mov	w1, w19
    51e4:	ldr	x19, [sp, #16]
    51e8:	ldp	x29, x30, [sp], #32
    51ec:	b	5208 <srunner_print@@Base+0x260>
    51f0:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x1329c>
    51f4:	add	x2, x0, #0x308
    51f8:	mov	w1, #0x1                   	// #1
    51fc:	str	w1, [x0, #776]
    5200:	mov	w1, #0x9                   	// #9
    5204:	ldr	w0, [x2, #4]
    5208:	b	2500 <killpg@plt>
    520c:	adrp	x1, 19000 <check_waitpid_and_exit@@Base+0x1329c>
    5210:	add	x1, x1, #0x308
    5214:	add	x1, x1, #0xa0
    5218:	mov	x2, #0x0                   	// #0
    521c:	bl	23f0 <sigaction@plt>
    5220:	mov	w1, w19
    5224:	b	51d0 <srunner_print@@Base+0x228>
    5228:	mov	w3, w0
    522c:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    5230:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    5234:	add	x1, x1, #0x759
    5238:	add	x0, x0, #0x765
    523c:	mov	w2, #0x8e                  	// #142
    5240:	bl	31fc <_ck_assert_failed@@Base+0x128>
    5244:	stp	x29, x30, [sp, #-64]!
    5248:	mov	x29, sp
    524c:	stp	x19, x20, [sp, #16]
    5250:	mov	w20, w3
    5254:	stp	x21, x22, [sp, #32]
    5258:	mov	x22, x1
    525c:	mov	w21, w2
    5260:	str	x23, [sp, #48]
    5264:	mov	x23, x0
    5268:	mov	w0, #0x0                   	// #0
    526c:	bl	4174 <srunner_has_tap@@Base+0x5ec>
    5270:	cbnz	x0, 528c <srunner_print@@Base+0x2e4>
    5274:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    5278:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    527c:	add	x1, x1, #0x759
    5280:	add	x0, x0, #0x77a
    5284:	mov	w2, #0x1b8                 	// #440
    5288:	bl	31fc <_ck_assert_failed@@Base+0x128>
    528c:	mov	x19, x0
    5290:	ldr	x0, [x0, #48]
    5294:	stp	w21, w20, [x19, #20]
    5298:	stp	x23, x22, [x19, #32]
    529c:	cbnz	x0, 52d0 <srunner_print@@Base+0x328>
    52a0:	mov	w0, #0x1                   	// #1
    52a4:	str	w0, [x19]
    52a8:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    52ac:	add	x0, x0, #0x798
    52b0:	bl	23d0 <strdup@plt>
    52b4:	str	x0, [x19, #48]
    52b8:	mov	x0, x19
    52bc:	ldp	x19, x20, [sp, #16]
    52c0:	ldp	x21, x22, [sp, #32]
    52c4:	ldr	x23, [sp, #48]
    52c8:	ldp	x29, x30, [sp], #64
    52cc:	ret
    52d0:	mov	w0, #0x2                   	// #2
    52d4:	str	w0, [x19]
    52d8:	b	52b8 <srunner_print@@Base+0x310>
    52dc:	stp	x29, x30, [sp, #-80]!
    52e0:	mov	x29, sp
    52e4:	str	x19, [sp, #16]
    52e8:	str	x0, [sp, #32]
    52ec:	mov	w0, w1
    52f0:	str	w1, [sp, #44]
    52f4:	cmp	w0, #0x1
    52f8:	stp	x2, x3, [sp, #56]
    52fc:	b.eq	5334 <srunner_print@@Base+0x38c>  // b.none
    5300:	ldr	x0, [sp, #32]
    5304:	bl	34e4 <_ck_assert_failed@@Base+0x410>
    5308:	adrp	x0, 18000 <check_waitpid_and_exit@@Base+0x1229c>
    530c:	ldr	x0, [x0, #4056]
    5310:	str	x0, [sp, #72]
    5314:	ldr	x0, [sp, #32]
    5318:	bl	34c0 <_ck_assert_failed@@Base+0x3ec>
    531c:	cbz	w0, 5340 <srunner_print@@Base+0x398>
    5320:	mov	x19, #0x0                   	// #0
    5324:	mov	x0, x19
    5328:	ldr	x19, [sp, #16]
    532c:	ldp	x29, x30, [sp], #80
    5330:	ret
    5334:	ldr	w0, [sp, #44]
    5338:	bl	4034 <srunner_has_tap@@Base+0x4ac>
    533c:	b	5300 <srunner_print@@Base+0x358>
    5340:	ldr	x0, [sp, #32]
    5344:	bl	3528 <_ck_assert_failed@@Base+0x454>
    5348:	str	x0, [sp, #48]
    534c:	ldr	w0, [sp, #44]
    5350:	cmp	w0, #0x2
    5354:	b.ne	53c0 <srunner_print@@Base+0x418>  // b.any
    5358:	mov	w0, #0x1                   	// #1
    535c:	bl	4034 <srunner_has_tap@@Base+0x4ac>
    5360:	ldr	x0, [sp, #72]
    5364:	bl	2230 <_setjmp@plt>
    5368:	cbz	w0, 53b0 <srunner_print@@Base+0x408>
    536c:	ldp	x0, x1, [sp, #56]
    5370:	mov	w3, #0xffffffff            	// #-1
    5374:	mov	w2, #0x0                   	// #0
    5378:	bl	5244 <srunner_print@@Base+0x29c>
    537c:	mov	x19, x0
    5380:	ldr	w0, [x0]
    5384:	cmp	w0, #0x1
    5388:	b.ne	5324 <srunner_print@@Base+0x37c>  // b.any
    538c:	ldr	x0, [x19, #8]
    5390:	bl	24b0 <free@plt>
    5394:	ldr	x0, [x19, #48]
    5398:	bl	24b0 <free@plt>
    539c:	mov	x0, x19
    53a0:	bl	24b0 <free@plt>
    53a4:	ldr	x0, [sp, #32]
    53a8:	bl	3558 <_ck_assert_failed@@Base+0x484>
    53ac:	b	5314 <srunner_print@@Base+0x36c>
    53b0:	ldr	x0, [sp, #48]
    53b4:	ldr	x0, [x0, #8]
    53b8:	blr	x0
    53bc:	b	536c <srunner_print@@Base+0x3c4>
    53c0:	ldr	x0, [sp, #48]
    53c4:	ldr	x0, [x0, #8]
    53c8:	blr	x0
    53cc:	b	53a4 <srunner_print@@Base+0x3fc>

00000000000053d0 <srunner_fork_status@@Base>:
    53d0:	ldr	w0, [x0, #56]
    53d4:	cbnz	w0, 5418 <srunner_fork_status@@Base+0x48>
    53d8:	stp	x29, x30, [sp, #-16]!
    53dc:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    53e0:	add	x0, x0, #0x79f
    53e4:	mov	x29, sp
    53e8:	bl	25c0 <getenv@plt>
    53ec:	cbz	x0, 5410 <srunner_fork_status@@Base+0x40>
    53f0:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    53f4:	add	x1, x1, #0x7a7
    53f8:	bl	2450 <strcmp@plt>
    53fc:	cmp	w0, #0x0
    5400:	cset	w0, eq  // eq = none
    5404:	add	w0, w0, #0x1
    5408:	ldp	x29, x30, [sp], #16
    540c:	ret
    5410:	mov	w0, #0x1                   	// #1
    5414:	b	5408 <srunner_fork_status@@Base+0x38>
    5418:	ret
    541c:	stp	x29, x30, [sp, #-96]!
    5420:	mov	x29, sp
    5424:	str	x19, [sp, #16]
    5428:	stp	x1, x2, [sp, #40]
    542c:	str	w3, [sp, #60]
    5430:	stp	xzr, xzr, [sp, #64]
    5434:	stp	xzr, xzr, [sp, #80]
    5438:	ldr	x19, [x1, #48]
    543c:	bl	22d0 <srunner_fork_status@plt>
    5440:	ldr	x1, [sp, #40]
    5444:	adrp	x3, 6000 <check_waitpid_and_exit@@Base+0x29c>
    5448:	add	x3, x3, #0x814
    544c:	ldr	x2, [x1]
    5450:	mov	w1, w0
    5454:	mov	x0, x19
    5458:	bl	52dc <srunner_print@@Base+0x334>
    545c:	cbnz	x0, 54e8 <srunner_fork_status@@Base+0x118>
    5460:	bl	31a4 <_ck_assert_failed@@Base+0xd0>
    5464:	add	x1, sp, #0x40
    5468:	bl	22b0 <clock_gettime@plt>
    546c:	adrp	x0, 18000 <check_waitpid_and_exit@@Base+0x1229c>
    5470:	ldr	x0, [x0, #4056]
    5474:	bl	2230 <_setjmp@plt>
    5478:	cbz	w0, 54f4 <srunner_fork_status@@Base+0x124>
    547c:	bl	31a4 <_ck_assert_failed@@Base+0xd0>
    5480:	add	x1, sp, #0x50
    5484:	bl	22b0 <clock_gettime@plt>
    5488:	ldr	x0, [sp, #40]
    548c:	mov	w1, #0x2                   	// #2
    5490:	ldr	x0, [x0, #56]
    5494:	bl	4ff0 <srunner_print@@Base+0x48>
    5498:	ldr	x0, [sp, #88]
    549c:	mov	x3, #0x3e8                 	// #1000
    54a0:	mov	x1, #0xfffffffffffffc18    	// #-1000
    54a4:	ldr	x2, [sp, #48]
    54a8:	sdiv	x0, x0, x3
    54ac:	ldr	x3, [sp, #72]
    54b0:	ldr	x4, [x2]
    54b4:	sdiv	x3, x3, x1
    54b8:	ldr	w2, [sp, #60]
    54bc:	ldr	x1, [sp, #80]
    54c0:	add	w0, w0, w3
    54c4:	ldr	x3, [sp, #64]
    54c8:	sub	x1, x1, x3
    54cc:	mov	w3, #0x4240                	// #16960
    54d0:	movk	w3, #0xf, lsl #16
    54d4:	madd	w3, w3, w1, w0
    54d8:	ldr	x0, [sp, #40]
    54dc:	ldr	x1, [x4]
    54e0:	ldr	x0, [x0]
    54e4:	bl	5244 <srunner_print@@Base+0x29c>
    54e8:	ldr	x19, [sp, #16]
    54ec:	ldp	x29, x30, [sp], #96
    54f0:	ret
    54f4:	ldr	x0, [sp, #48]
    54f8:	ldr	x0, [x0]
    54fc:	ldr	w2, [x0, #24]
    5500:	ldr	x1, [x0, #16]
    5504:	ldr	x0, [x0]
    5508:	bl	21d0 <tcase_fn_start@plt>
    550c:	ldr	x0, [sp, #48]
    5510:	ldr	x0, [x0]
    5514:	ldr	x1, [x0, #8]
    5518:	ldr	w0, [sp, #60]
    551c:	blr	x1
    5520:	b	547c <srunner_fork_status@@Base+0xac>

0000000000005524 <srunner_set_fork_status@@Base>:
    5524:	str	w1, [x0, #56]
    5528:	ret

000000000000552c <srunner_run_tagged@@Base>:
    552c:	stp	x29, x30, [sp, #-288]!
    5530:	mov	x29, sp
    5534:	stp	x19, x20, [sp, #16]
    5538:	mov	x20, x0
    553c:	stp	x21, x22, [sp, #32]
    5540:	mov	w21, w5
    5544:	stp	x23, x24, [sp, #48]
    5548:	stp	x25, x26, [sp, #64]
    554c:	stp	x27, x28, [sp, #80]
    5550:	stp	x1, x3, [sp, #112]
    5554:	str	x4, [sp, #128]
    5558:	cbnz	x2, 55dc <srunner_run_tagged@@Base+0xb0>
    555c:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    5560:	add	x0, x0, #0x7aa
    5564:	bl	25c0 <getenv@plt>
    5568:	mov	x24, x0
    556c:	ldr	x0, [sp, #112]
    5570:	cbnz	x0, 5584 <srunner_run_tagged@@Base+0x58>
    5574:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    5578:	add	x0, x0, #0x7b6
    557c:	bl	25c0 <getenv@plt>
    5580:	str	x0, [sp, #112]
    5584:	ldr	x0, [sp, #120]
    5588:	cbnz	x0, 559c <srunner_run_tagged@@Base+0x70>
    558c:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    5590:	add	x0, x0, #0x7c3
    5594:	bl	25c0 <getenv@plt>
    5598:	str	x0, [sp, #120]
    559c:	ldr	x0, [sp, #128]
    55a0:	cbnz	x0, 55b4 <srunner_run_tagged@@Base+0x88>
    55a4:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    55a8:	add	x0, x0, #0x7d3
    55ac:	bl	25c0 <getenv@plt>
    55b0:	str	x0, [sp, #128]
    55b4:	cbz	x20, 5754 <srunner_run_tagged@@Base+0x228>
    55b8:	cmp	w21, #0x4
    55bc:	b.ls	55e4 <srunner_run_tagged@@Base+0xb8>  // b.plast
    55c0:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    55c4:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    55c8:	mov	w3, w21
    55cc:	add	x1, x1, #0x759
    55d0:	add	x0, x0, #0x7e3
    55d4:	mov	w2, #0x31e                 	// #798
    55d8:	bl	31fc <_ck_assert_failed@@Base+0x128>
    55dc:	mov	x24, x2
    55e0:	b	556c <srunner_run_tagged@@Base+0x40>
    55e4:	adrp	x22, 19000 <check_waitpid_and_exit@@Base+0x1329c>
    55e8:	add	x19, x22, #0x308
    55ec:	add	x25, x19, #0x138
    55f0:	mov	x2, #0x90                  	// #144
    55f4:	mov	w1, #0x0                   	// #0
    55f8:	add	x0, x19, #0x140
    55fc:	bl	2360 <memset@plt>
    5600:	adrp	x23, 5000 <srunner_print@@Base+0x58>
    5604:	mov	x1, x25
    5608:	add	x23, x23, #0x190
    560c:	add	x2, x19, #0x1d0
    5610:	mov	w0, #0xe                   	// #14
    5614:	str	x23, [x19, #312]
    5618:	bl	23f0 <sigaction@plt>
    561c:	add	x25, x19, #0x268
    5620:	mov	x2, #0x90                  	// #144
    5624:	mov	w1, #0x0                   	// #0
    5628:	add	x0, x19, #0x270
    562c:	bl	2360 <memset@plt>
    5630:	str	x23, [x19, #616]
    5634:	mov	x1, x25
    5638:	add	x2, x19, #0x8
    563c:	mov	w0, #0x2                   	// #2
    5640:	bl	23f0 <sigaction@plt>
    5644:	mov	x2, #0x90                  	// #144
    5648:	mov	w1, #0x0                   	// #0
    564c:	add	x25, x19, #0x300
    5650:	add	x0, x19, #0x308
    5654:	bl	2360 <memset@plt>
    5658:	str	x23, [x19, #768]
    565c:	add	x2, x19, #0xa0
    5660:	mov	x1, x25
    5664:	mov	w0, #0xf                   	// #15
    5668:	bl	23f0 <sigaction@plt>
    566c:	mov	x0, x20
    5670:	bl	22d0 <srunner_fork_status@plt>
    5674:	bl	3094 <tr_tcname@@Base+0x8>
    5678:	bl	4298 <srunner_has_tap@@Base+0x710>
    567c:	mov	w1, w21
    5680:	mov	x0, x20
    5684:	bl	3d40 <srunner_has_tap@@Base+0x1b8>
    5688:	mov	x0, x20
    568c:	bl	3c0c <srunner_has_tap@@Base+0x84>
    5690:	ldr	x0, [x20]
    5694:	str	x0, [sp, #96]
    5698:	ldr	x0, [sp, #120]
    569c:	bl	28e4 <tcase_create@@Base+0x12c>
    56a0:	str	x0, [sp, #136]
    56a4:	ldr	x0, [sp, #128]
    56a8:	bl	28e4 <tcase_create@@Base+0x12c>
    56ac:	str	x0, [sp, #144]
    56b0:	ldr	x0, [sp, #96]
    56b4:	bl	34e4 <_ck_assert_failed@@Base+0x410>
    56b8:	add	x0, sp, #0xd8
    56bc:	str	x0, [sp, #176]
    56c0:	add	x0, sp, #0x100
    56c4:	str	x0, [sp, #184]
    56c8:	ldr	x0, [sp, #96]
    56cc:	bl	34c0 <_ck_assert_failed@@Base+0x3ec>
    56d0:	cbz	w0, 5770 <srunner_run_tagged@@Base+0x244>
    56d4:	adrp	x19, 18000 <check_waitpid_and_exit@@Base+0x1229c>
    56d8:	add	x22, x22, #0x308
    56dc:	ldr	x0, [sp, #136]
    56e0:	ldr	x19, [x19, #4048]
    56e4:	mov	x1, x19
    56e8:	bl	3590 <_ck_assert_failed@@Base+0x4bc>
    56ec:	ldr	x0, [sp, #144]
    56f0:	mov	x1, x19
    56f4:	bl	3590 <_ck_assert_failed@@Base+0x4bc>
    56f8:	ldr	x0, [sp, #136]
    56fc:	bl	34f8 <_ck_assert_failed@@Base+0x424>
    5700:	ldr	x0, [sp, #144]
    5704:	bl	34f8 <_ck_assert_failed@@Base+0x424>
    5708:	mov	x0, x20
    570c:	bl	3c18 <srunner_has_tap@@Base+0x90>
    5710:	mov	x0, x20
    5714:	bl	3e38 <srunner_has_tap@@Base+0x2b0>
    5718:	bl	4058 <srunner_has_tap@@Base+0x4d0>
    571c:	mov	w0, #0x1                   	// #1
    5720:	bl	3094 <tr_tcname@@Base+0x8>
    5724:	add	x1, x22, #0x1d0
    5728:	mov	x2, #0x0                   	// #0
    572c:	mov	w0, #0xe                   	// #14
    5730:	bl	23f0 <sigaction@plt>
    5734:	add	x1, x22, #0x8
    5738:	mov	x2, #0x0                   	// #0
    573c:	mov	w0, #0x2                   	// #2
    5740:	bl	23f0 <sigaction@plt>
    5744:	add	x1, x22, #0xa0
    5748:	mov	x2, #0x0                   	// #0
    574c:	mov	w0, #0xf                   	// #15
    5750:	bl	23f0 <sigaction@plt>
    5754:	ldp	x19, x20, [sp, #16]
    5758:	ldp	x21, x22, [sp, #32]
    575c:	ldp	x23, x24, [sp, #48]
    5760:	ldp	x25, x26, [sp, #64]
    5764:	ldp	x27, x28, [sp, #80]
    5768:	ldp	x29, x30, [sp], #288
    576c:	ret
    5770:	ldr	x0, [sp, #96]
    5774:	bl	3528 <_ck_assert_failed@@Base+0x454>
    5778:	mov	x25, x0
    577c:	ldr	x0, [sp, #112]
    5780:	cbz	x0, 5790 <srunner_run_tagged@@Base+0x264>
    5784:	ldr	x1, [x25]
    5788:	bl	2450 <strcmp@plt>
    578c:	cbnz	w0, 57d8 <srunner_run_tagged@@Base+0x2ac>
    5790:	cbnz	x24, 57c8 <srunner_run_tagged@@Base+0x29c>
    5794:	mov	x0, x20
    5798:	mov	x1, x25
    579c:	bl	3c24 <srunner_has_tap@@Base+0x9c>
    57a0:	ldr	x0, [x25, #8]
    57a4:	str	x0, [sp, #104]
    57a8:	bl	34e4 <_ck_assert_failed@@Base+0x410>
    57ac:	ldr	x0, [sp, #104]
    57b0:	bl	34c0 <_ck_assert_failed@@Base+0x3ec>
    57b4:	cbz	w0, 57e4 <srunner_run_tagged@@Base+0x2b8>
    57b8:	mov	x1, x25
    57bc:	mov	x0, x20
    57c0:	bl	3c2c <srunner_has_tap@@Base+0xa4>
    57c4:	b	57d8 <srunner_run_tagged@@Base+0x2ac>
    57c8:	mov	x1, x24
    57cc:	mov	x0, x25
    57d0:	bl	24e0 <suite_tcase@plt>
    57d4:	cbnz	w0, 5794 <srunner_run_tagged@@Base+0x268>
    57d8:	ldr	x0, [sp, #96]
    57dc:	bl	3558 <_ck_assert_failed@@Base+0x484>
    57e0:	b	56c8 <srunner_run_tagged@@Base+0x19c>
    57e4:	ldr	x0, [sp, #104]
    57e8:	bl	3528 <_ck_assert_failed@@Base+0x454>
    57ec:	mov	x21, x0
    57f0:	cbz	x24, 5804 <srunner_run_tagged@@Base+0x2d8>
    57f4:	ldr	x1, [x21]
    57f8:	mov	x0, x24
    57fc:	bl	2450 <strcmp@plt>
    5800:	cbnz	w0, 5894 <srunner_run_tagged@@Base+0x368>
    5804:	ldr	x0, [sp, #120]
    5808:	cbnz	x0, 5884 <srunner_run_tagged@@Base+0x358>
    580c:	ldr	x0, [sp, #128]
    5810:	cbnz	x0, 58a0 <srunner_run_tagged@@Base+0x374>
    5814:	mov	w0, #0x2                   	// #2
    5818:	bl	3094 <tr_tcname@@Base+0x8>
    581c:	ldr	x2, [x21]
    5820:	adrp	x3, 6000 <check_waitpid_and_exit@@Base+0x29c>
    5824:	ldr	x0, [x21, #32]
    5828:	add	x3, x3, #0x812
    582c:	mov	w1, #0x2                   	// #2
    5830:	bl	52dc <srunner_print@@Base+0x334>
    5834:	mov	x19, x0
    5838:	mov	x0, x20
    583c:	bl	22d0 <srunner_fork_status@plt>
    5840:	bl	3094 <tr_tcname@@Base+0x8>
    5844:	cbnz	x19, 58b4 <srunner_run_tagged@@Base+0x388>
    5848:	ldr	x28, [x21, #24]
    584c:	mov	x0, x28
    5850:	bl	34e4 <_ck_assert_failed@@Base+0x410>
    5854:	add	x0, sp, #0xd4
    5858:	str	x0, [sp, #168]
    585c:	mov	x0, x28
    5860:	bl	34c0 <_ck_assert_failed@@Base+0x3ec>
    5864:	cbz	w0, 58d0 <srunner_run_tagged@@Base+0x3a4>
    5868:	ldr	x19, [x21, #40]
    586c:	mov	x0, x20
    5870:	bl	22d0 <srunner_fork_status@plt>
    5874:	mov	w1, w0
    5878:	mov	x0, x19
    587c:	bl	4ff0 <srunner_print@@Base+0x48>
    5880:	b	5894 <srunner_run_tagged@@Base+0x368>
    5884:	ldr	x1, [sp, #136]
    5888:	mov	x0, x21
    588c:	bl	29a4 <tcase_set_tags@@Base+0x48>
    5890:	cbnz	w0, 580c <srunner_run_tagged@@Base+0x2e0>
    5894:	ldr	x0, [sp, #104]
    5898:	bl	3558 <_ck_assert_failed@@Base+0x484>
    589c:	b	57ac <srunner_run_tagged@@Base+0x280>
    58a0:	ldr	x1, [sp, #144]
    58a4:	mov	x0, x21
    58a8:	bl	29a4 <tcase_set_tags@@Base+0x48>
    58ac:	cbz	w0, 5814 <srunner_run_tagged@@Base+0x2e8>
    58b0:	b	5894 <srunner_run_tagged@@Base+0x368>
    58b4:	ldr	w0, [x19]
    58b8:	cmp	w0, #0x1
    58bc:	b.eq	5848 <srunner_run_tagged@@Base+0x31c>  // b.none
    58c0:	mov	x1, x19
    58c4:	mov	x0, x20
    58c8:	bl	5068 <srunner_print@@Base+0xc0>
    58cc:	b	5894 <srunner_run_tagged@@Base+0x368>
    58d0:	mov	x0, x28
    58d4:	bl	3528 <_ck_assert_failed@@Base+0x454>
    58d8:	mov	x23, x0
    58dc:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    58e0:	add	x0, x0, #0x886
    58e4:	str	x0, [sp, #160]
    58e8:	ldr	w26, [x23, #8]
    58ec:	ldr	w0, [x23, #12]
    58f0:	cmp	w26, w0
    58f4:	b.lt	5904 <srunner_run_tagged@@Base+0x3d8>  // b.tstop
    58f8:	mov	x0, x28
    58fc:	bl	3558 <_ck_assert_failed@@Base+0x484>
    5900:	b	585c <srunner_run_tagged@@Base+0x330>
    5904:	mov	x2, x23
    5908:	mov	x1, x21
    590c:	mov	x0, x20
    5910:	bl	3c34 <srunner_has_tap@@Base+0xac>
    5914:	mov	x0, x20
    5918:	bl	22d0 <srunner_fork_status@plt>
    591c:	cmp	w0, #0x1
    5920:	b.eq	5944 <srunner_run_tagged@@Base+0x418>  // b.none
    5924:	cmp	w0, #0x2
    5928:	b.eq	5cec <srunner_run_tagged@@Base+0x7c0>  // b.none
    592c:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    5930:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    5934:	add	x1, x1, #0x759
    5938:	add	x0, x0, #0x8c5
    593c:	mov	w2, #0x10b                 	// #267
    5940:	b	5974 <srunner_run_tagged@@Base+0x448>
    5944:	str	wzr, [sp, #212]
    5948:	stp	xzr, xzr, [sp, #224]
    594c:	stp	xzr, xzr, [sp, #240]
    5950:	bl	22c0 <fork@plt>
    5954:	mov	w19, w0
    5958:	cmn	w0, #0x1
    595c:	b.ne	5978 <srunner_run_tagged@@Base+0x44c>  // b.any
    5960:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    5964:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    5968:	add	x1, x1, #0x759
    596c:	add	x0, x0, #0x822
    5970:	mov	w2, #0x1e5                 	// #485
    5974:	bl	31fc <_ck_assert_failed@@Base+0x128>
    5978:	cbnz	w0, 5a40 <srunner_run_tagged@@Base+0x514>
    597c:	mov	w1, #0x0                   	// #0
    5980:	add	x22, x22, #0x308
    5984:	bl	2490 <setpgid@plt>
    5988:	bl	24c0 <getpgrp@plt>
    598c:	str	w0, [x22, #4]
    5990:	mov	x0, x20
    5994:	ldr	x19, [x21, #48]
    5998:	bl	22d0 <srunner_fork_status@plt>
    599c:	ldr	x2, [x21]
    59a0:	mov	w1, w0
    59a4:	adrp	x3, 6000 <check_waitpid_and_exit@@Base+0x29c>
    59a8:	add	x3, x3, #0x814
    59ac:	mov	x0, x19
    59b0:	bl	52dc <srunner_print@@Base+0x334>
    59b4:	bl	24b0 <free@plt>
    59b8:	bl	31a4 <_ck_assert_failed@@Base+0xd0>
    59bc:	add	x1, sp, #0xe0
    59c0:	bl	22b0 <clock_gettime@plt>
    59c4:	ldr	x0, [x23]
    59c8:	ldr	w2, [x0, #24]
    59cc:	ldr	x1, [x0, #16]
    59d0:	ldr	x0, [x0]
    59d4:	bl	21d0 <tcase_fn_start@plt>
    59d8:	ldr	x0, [x23]
    59dc:	ldr	x1, [x0, #8]
    59e0:	mov	w0, w26
    59e4:	blr	x1
    59e8:	bl	31a4 <_ck_assert_failed@@Base+0xd0>
    59ec:	add	x1, sp, #0xf0
    59f0:	bl	22b0 <clock_gettime@plt>
    59f4:	ldr	x0, [x21, #56]
    59f8:	mov	w1, #0x2                   	// #2
    59fc:	bl	4ff0 <srunner_print@@Base+0x48>
    5a00:	ldr	x1, [sp, #248]
    5a04:	mov	x0, #0x3e8                 	// #1000
    5a08:	mov	x2, #0xfffffffffffffc18    	// #-1000
    5a0c:	sdiv	x1, x1, x0
    5a10:	ldr	x0, [sp, #232]
    5a14:	sdiv	x0, x0, x2
    5a18:	ldr	x2, [sp, #224]
    5a1c:	add	w1, w1, w0
    5a20:	ldr	x0, [sp, #240]
    5a24:	sub	x0, x0, x2
    5a28:	mov	w2, #0x4240                	// #16960
    5a2c:	movk	w2, #0xf, lsl #16
    5a30:	madd	w0, w2, w0, w1
    5a34:	bl	3fd0 <srunner_has_tap@@Base+0x448>
    5a38:	mov	w0, #0x0                   	// #0
    5a3c:	bl	2220 <exit@plt>
    5a40:	add	x0, x22, #0x308
    5a44:	str	wzr, [x22, #776]
    5a48:	str	w19, [x0, #4]
    5a4c:	bl	31a4 <_ck_assert_failed@@Base+0xd0>
    5a50:	ldr	x2, [sp, #176]
    5a54:	mov	x1, #0x0                   	// #0
    5a58:	bl	2440 <timer_create@plt>
    5a5c:	cbnz	w0, 5cd4 <srunner_run_tagged@@Base+0x7a8>
    5a60:	ldp	x0, x1, [x21, #8]
    5a64:	stp	x0, x1, [sp, #272]
    5a68:	mov	x3, #0x0                   	// #0
    5a6c:	ldr	x2, [sp, #184]
    5a70:	mov	w1, #0x0                   	// #0
    5a74:	ldr	x0, [sp, #216]
    5a78:	stp	xzr, xzr, [sp, #256]
    5a7c:	bl	2340 <timer_settime@plt>
    5a80:	cbnz	w0, 5b0c <srunner_run_tagged@@Base+0x5e0>
    5a84:	ldr	x1, [sp, #168]
    5a88:	mov	w0, w19
    5a8c:	mov	w2, #0x0                   	// #0
    5a90:	bl	25f0 <waitpid@plt>
    5a94:	cmn	w0, #0x1
    5a98:	b.eq	5a84 <srunner_run_tagged@@Base+0x558>  // b.none
    5a9c:	ldr	x0, [sp, #216]
    5aa0:	bl	24d0 <timer_delete@plt>
    5aa4:	mov	w0, w19
    5aa8:	mov	w1, #0x9                   	// #9
    5aac:	bl	2500 <killpg@plt>
    5ab0:	ldr	w3, [sp, #212]
    5ab4:	ldrsb	w4, [x23, #20]
    5ab8:	ldr	w1, [x23, #16]
    5abc:	ldr	x5, [x21]
    5ac0:	str	w3, [sp, #152]
    5ac4:	ldr	x0, [x23]
    5ac8:	stp	w1, w4, [sp, #192]
    5acc:	str	x5, [sp, #200]
    5ad0:	ldr	x27, [x0]
    5ad4:	mov	w0, w3
    5ad8:	bl	4fc0 <srunner_print@@Base+0x18>
    5adc:	bl	4174 <srunner_has_tap@@Base+0x5ec>
    5ae0:	mov	x19, x0
    5ae4:	ldr	w3, [sp, #152]
    5ae8:	ldp	w1, w4, [sp, #192]
    5aec:	ldr	x5, [sp, #200]
    5af0:	cbnz	x0, 5b24 <srunner_run_tagged@@Base+0x5f8>
    5af4:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    5af8:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    5afc:	add	x1, x1, #0x759
    5b00:	add	x0, x0, #0x77a
    5b04:	mov	w2, #0x22c                 	// #556
    5b08:	b	5974 <srunner_run_tagged@@Base+0x448>
    5b0c:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    5b10:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    5b14:	add	x1, x1, #0x759
    5b18:	add	x0, x0, #0x839
    5b1c:	mov	w2, #0x210                 	// #528
    5b20:	b	5974 <srunner_run_tagged@@Base+0x448>
    5b24:	stp	x5, x27, [x0, #32]
    5b28:	and	w27, w3, #0x7f
    5b2c:	str	w26, [x0, #20]
    5b30:	add	w0, w27, #0x1
    5b34:	sbfx	x0, x0, #1, #7
    5b38:	cmp	w0, #0x0
    5b3c:	b.le	5c18 <srunner_run_tagged@@Base+0x6ec>
    5b40:	cmp	w1, w27
    5b44:	ldr	x0, [x19, #48]
    5b48:	b.ne	5bb4 <srunner_run_tagged@@Base+0x688>  // b.any
    5b4c:	ldr	w2, [x22, #776]
    5b50:	cbz	w2, 5b78 <srunner_run_tagged@@Base+0x64c>
    5b54:	mov	w2, #0x3                   	// #3
    5b58:	str	w2, [x19]
    5b5c:	cbz	x0, 5b6c <srunner_run_tagged@@Base+0x640>
    5b60:	str	w1, [sp, #152]
    5b64:	bl	24b0 <free@plt>
    5b68:	ldr	w1, [sp, #152]
    5b6c:	mov	w0, w27
    5b70:	bl	50d0 <srunner_print@@Base+0x128>
    5b74:	b	5b94 <srunner_run_tagged@@Base+0x668>
    5b78:	mov	w1, #0x1                   	// #1
    5b7c:	str	w1, [x19]
    5b80:	cbz	x0, 5b88 <srunner_run_tagged@@Base+0x65c>
    5b84:	bl	24b0 <free@plt>
    5b88:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    5b8c:	add	x0, x0, #0x798
    5b90:	bl	23d0 <strdup@plt>
    5b94:	str	x0, [x19, #48]
    5b98:	mov	x1, x19
    5b9c:	mov	x0, x20
    5ba0:	bl	5068 <srunner_print@@Base+0xc0>
    5ba4:	mov	x1, x19
    5ba8:	mov	x0, x20
    5bac:	bl	3c84 <srunner_has_tap@@Base+0xfc>
    5bb0:	b	5d08 <srunner_run_tagged@@Base+0x7dc>
    5bb4:	mov	w2, #0x3                   	// #3
    5bb8:	str	w2, [x19]
    5bbc:	cbnz	w1, 5b5c <srunner_run_tagged@@Base+0x630>
    5bc0:	cbz	x0, 5bc8 <srunner_run_tagged@@Base+0x69c>
    5bc4:	bl	24b0 <free@plt>
    5bc8:	mov	x0, #0x64                  	// #100
    5bcc:	bl	330c <_ck_assert_failed@@Base+0x238>
    5bd0:	ldr	w1, [x22, #776]
    5bd4:	str	x0, [sp, #152]
    5bd8:	cbz	w1, 5bf0 <srunner_run_tagged@@Base+0x6c4>
    5bdc:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    5be0:	add	x1, x1, #0x859
    5be4:	bl	2540 <strcpy@plt>
    5be8:	ldr	x0, [sp, #152]
    5bec:	b	5b94 <srunner_run_tagged@@Base+0x668>
    5bf0:	mov	w0, w27
    5bf4:	bl	2580 <strsignal@plt>
    5bf8:	mov	x4, x0
    5bfc:	mov	w3, w27
    5c00:	ldr	x0, [sp, #152]
    5c04:	adrp	x2, 6000 <check_waitpid_and_exit@@Base+0x29c>
    5c08:	mov	x1, #0x64                  	// #100
    5c0c:	add	x2, x2, #0x86e
    5c10:	bl	22f0 <snprintf@plt>
    5c14:	b	5be8 <srunner_run_tagged@@Base+0x6bc>
    5c18:	sbfx	x3, x3, #8, #8
    5c1c:	cbnz	w1, 5c88 <srunner_run_tagged@@Base+0x75c>
    5c20:	cmp	w27, #0x0
    5c24:	cset	w0, eq  // eq = none
    5c28:	cmp	w0, #0x0
    5c2c:	ccmp	w4, w3, #0x0, ne  // ne = any
    5c30:	b.ne	5c44 <srunner_run_tagged@@Base+0x718>  // b.any
    5c34:	mov	w0, #0x1                   	// #1
    5c38:	str	w0, [x19]
    5c3c:	ldr	x0, [x19, #48]
    5c40:	b	5b80 <srunner_run_tagged@@Base+0x654>
    5c44:	cmp	w0, #0x0
    5c48:	ccmp	w4, w3, #0x4, ne  // ne = any
    5c4c:	b.eq	5b98 <srunner_run_tagged@@Base+0x66c>  // b.none
    5c50:	ldr	x0, [x19, #48]
    5c54:	cbnz	x0, 5cc8 <srunner_run_tagged@@Base+0x79c>
    5c58:	mov	w0, #0x3                   	// #3
    5c5c:	str	w0, [x19]
    5c60:	mov	x0, #0x64                  	// #100
    5c64:	str	w3, [sp, #152]
    5c68:	bl	330c <_ck_assert_failed@@Base+0x238>
    5c6c:	mov	x27, x0
    5c70:	ldr	w3, [sp, #152]
    5c74:	mov	x1, #0x64                  	// #100
    5c78:	ldr	x2, [sp, #160]
    5c7c:	bl	22f0 <snprintf@plt>
    5c80:	str	x27, [x19, #48]
    5c84:	b	5b98 <srunner_run_tagged@@Base+0x66c>
    5c88:	cbnz	w27, 5b98 <srunner_run_tagged@@Base+0x66c>
    5c8c:	ldr	x0, [x19, #48]
    5c90:	cbz	x0, 5ca0 <srunner_run_tagged@@Base+0x774>
    5c94:	str	w3, [sp, #152]
    5c98:	bl	24b0 <free@plt>
    5c9c:	ldr	w3, [sp, #152]
    5ca0:	mov	x0, #0x64                  	// #100
    5ca4:	str	w3, [sp, #192]
    5ca8:	bl	330c <_ck_assert_failed@@Base+0x238>
    5cac:	str	x0, [sp, #152]
    5cb0:	ldr	w3, [sp, #192]
    5cb4:	mov	x1, #0x64                  	// #100
    5cb8:	ldr	x2, [sp, #160]
    5cbc:	bl	22f0 <snprintf@plt>
    5cc0:	ldr	x4, [sp, #152]
    5cc4:	str	x4, [x19, #48]
    5cc8:	mov	w0, #0x2                   	// #2
    5ccc:	str	w0, [x19]
    5cd0:	b	5b98 <srunner_run_tagged@@Base+0x66c>
    5cd4:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    5cd8:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    5cdc:	add	x1, x1, #0x759
    5ce0:	add	x0, x0, #0x8a6
    5ce4:	mov	w2, #0x218                 	// #536
    5ce8:	b	5974 <srunner_run_tagged@@Base+0x448>
    5cec:	mov	w3, w26
    5cf0:	mov	x2, x23
    5cf4:	mov	x1, x21
    5cf8:	mov	x0, x20
    5cfc:	bl	541c <srunner_fork_status@@Base+0x4c>
    5d00:	mov	x19, x0
    5d04:	cbnz	x0, 5b98 <srunner_run_tagged@@Base+0x66c>
    5d08:	add	w26, w26, #0x1
    5d0c:	b	58ec <srunner_run_tagged@@Base+0x3c0>

0000000000005d10 <srunner_run@@Base>:
    5d10:	mov	w5, w3
    5d14:	mov	x4, #0x0                   	// #0
    5d18:	mov	x3, #0x0                   	// #0
    5d1c:	b	2520 <srunner_run_tagged@plt>

0000000000005d20 <srunner_run_all@@Base>:
    5d20:	mov	w3, w1
    5d24:	mov	x2, #0x0                   	// #0
    5d28:	mov	x1, #0x0                   	// #0
    5d2c:	b	2430 <srunner_run@plt>

0000000000005d30 <check_fork@@Base>:
    5d30:	stp	x29, x30, [sp, #-32]!
    5d34:	mov	x29, sp
    5d38:	str	x19, [sp, #16]
    5d3c:	bl	22c0 <fork@plt>
    5d40:	mov	w19, w0
    5d44:	tbnz	w0, #31, 5d54 <check_fork@@Base+0x24>
    5d48:	adrp	x1, 19000 <check_waitpid_and_exit@@Base+0x1329c>
    5d4c:	ldr	w1, [x1, #780]
    5d50:	bl	2490 <setpgid@plt>
    5d54:	mov	w0, w19
    5d58:	ldr	x19, [sp, #16]
    5d5c:	ldp	x29, x30, [sp], #32
    5d60:	ret

0000000000005d64 <check_waitpid_and_exit@@Base>:
    5d64:	stp	x29, x30, [sp, #-48]!
    5d68:	cmp	w0, #0x0
    5d6c:	mov	x29, sp
    5d70:	stp	x19, x20, [sp, #16]
    5d74:	b.le	5db0 <check_waitpid_and_exit@@Base+0x4c>
    5d78:	mov	w19, w0
    5d7c:	add	x20, sp, #0x2c
    5d80:	mov	x1, x20
    5d84:	mov	w0, w19
    5d88:	mov	w2, #0x0                   	// #0
    5d8c:	bl	25f0 <waitpid@plt>
    5d90:	cmn	w0, #0x1
    5d94:	b.eq	5d80 <check_waitpid_and_exit@@Base+0x1c>  // b.none
    5d98:	ldr	w0, [sp, #44]
    5d9c:	mov	w1, #0x0                   	// #0
    5da0:	bl	4fc0 <srunner_print@@Base+0x18>
    5da4:	cbz	w0, 5db0 <check_waitpid_and_exit@@Base+0x4c>
    5da8:	mov	w0, #0x1                   	// #1
    5dac:	bl	2220 <exit@plt>
    5db0:	mov	w0, #0x0                   	// #0
    5db4:	b	5dac <check_waitpid_and_exit@@Base+0x48>
    5db8:	stp	x29, x30, [sp, #-336]!
    5dbc:	mov	x29, sp
    5dc0:	stp	x19, x20, [sp, #16]
    5dc4:	mov	x20, #0x64                  	// #100
    5dc8:	stp	x21, x22, [sp, #32]
    5dcc:	mov	x21, x0
    5dd0:	add	x22, sp, #0x110
    5dd4:	mov	x0, #0x64                  	// #100
    5dd8:	stp	x23, x24, [sp, #48]
    5ddc:	mov	w23, #0xffffffc8            	// #-56
    5de0:	str	x25, [sp, #64]
    5de4:	add	x25, sp, #0x50
    5de8:	str	q0, [sp, #144]
    5dec:	mov	w24, #0xffffff80            	// #-128
    5df0:	str	q1, [sp, #160]
    5df4:	str	q2, [sp, #176]
    5df8:	str	q3, [sp, #192]
    5dfc:	str	q4, [sp, #208]
    5e00:	str	q5, [sp, #224]
    5e04:	str	q6, [sp, #240]
    5e08:	str	q7, [sp, #256]
    5e0c:	stp	x1, x2, [sp, #280]
    5e10:	stp	x3, x4, [sp, #296]
    5e14:	stp	x5, x6, [sp, #312]
    5e18:	str	x7, [sp, #328]
    5e1c:	bl	330c <_ck_assert_failed@@Base+0x238>
    5e20:	mov	x19, x0
    5e24:	add	x0, sp, #0x150
    5e28:	stp	x0, x0, [sp, #112]
    5e2c:	mov	x3, x25
    5e30:	str	x22, [sp, #128]
    5e34:	mov	x2, x21
    5e38:	stp	w23, w24, [sp, #136]
    5e3c:	ldp	x0, x1, [sp, #112]
    5e40:	stp	x0, x1, [x25]
    5e44:	ldp	x0, x1, [sp, #128]
    5e48:	stp	x0, x1, [x25, #16]
    5e4c:	mov	x1, x20
    5e50:	mov	x0, x19
    5e54:	bl	2560 <vsnprintf@plt>
    5e58:	tbnz	w0, #31, 5e80 <check_waitpid_and_exit@@Base+0x11c>
    5e5c:	cmp	w0, w20
    5e60:	b.lt	5e88 <check_waitpid_and_exit@@Base+0x124>  // b.tstop
    5e64:	sxtw	x1, w0
    5e68:	add	x20, x1, #0x1
    5e6c:	mov	x0, x19
    5e70:	mov	x1, x20
    5e74:	bl	334c <_ck_assert_failed@@Base+0x278>
    5e78:	mov	x19, x0
    5e7c:	b	5e24 <check_waitpid_and_exit@@Base+0xc0>
    5e80:	lsl	x20, x20, #1
    5e84:	b	5e6c <check_waitpid_and_exit@@Base+0x108>
    5e88:	mov	x0, x19
    5e8c:	ldp	x19, x20, [sp, #16]
    5e90:	ldp	x21, x22, [sp, #32]
    5e94:	ldp	x23, x24, [sp, #48]
    5e98:	ldr	x25, [sp, #64]
    5e9c:	ldp	x29, x30, [sp], #336
    5ea0:	ret
    5ea4:	sub	sp, sp, #0x20
    5ea8:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    5eac:	adrp	x7, 6000 <check_waitpid_and_exit@@Base+0x29c>
    5eb0:	add	x1, x1, #0x2ba
    5eb4:	add	x7, x7, #0x8e0
    5eb8:	stp	x29, x30, [sp, #16]
    5ebc:	add	x29, sp, #0x10
    5ec0:	ldp	w4, w3, [x0]
    5ec4:	ldr	w2, [x0, #16]
    5ec8:	cmp	w4, #0x3
    5ecc:	csel	x7, x7, x1, eq  // eq = none
    5ed0:	cmp	w3, #0x2
    5ed4:	ldr	x1, [x0, #8]
    5ed8:	b.ne	5f24 <check_waitpid_and_exit@@Base+0x1c0>  // b.any
    5edc:	cmp	w4, #0x1
    5ee0:	b.eq	5f30 <check_waitpid_and_exit@@Base+0x1cc>  // b.none
    5ee4:	cmp	w4, #0x2
    5ee8:	b.eq	5f3c <check_waitpid_and_exit@@Base+0x1d8>  // b.none
    5eec:	cmp	w4, #0x3
    5ef0:	adrp	x3, 6000 <check_waitpid_and_exit@@Base+0x29c>
    5ef4:	add	x3, x3, #0x322
    5ef8:	csel	x3, x3, xzr, eq  // eq = none
    5efc:	ldr	x4, [x0, #48]
    5f00:	str	x4, [sp]
    5f04:	ldp	x4, x5, [x0, #32]
    5f08:	ldr	w6, [x0, #20]
    5f0c:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    5f10:	add	x0, x0, #0x8f6
    5f14:	bl	5db8 <check_waitpid_and_exit@@Base+0x54>
    5f18:	ldp	x29, x30, [sp, #16]
    5f1c:	add	sp, sp, #0x20
    5f20:	ret
    5f24:	adrp	x3, 6000 <check_waitpid_and_exit@@Base+0x29c>
    5f28:	add	x3, x3, #0xb8
    5f2c:	b	5efc <check_waitpid_and_exit@@Base+0x198>
    5f30:	adrp	x3, 6000 <check_waitpid_and_exit@@Base+0x29c>
    5f34:	add	x3, x3, #0x43e
    5f38:	b	5efc <check_waitpid_and_exit@@Base+0x198>
    5f3c:	adrp	x3, 6000 <check_waitpid_and_exit@@Base+0x29c>
    5f40:	add	x3, x3, #0x8f4
    5f44:	b	5efc <check_waitpid_and_exit@@Base+0x198>
    5f48:	ldr	w2, [x0]
    5f4c:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    5f50:	adrp	x3, 6000 <check_waitpid_and_exit@@Base+0x29c>
    5f54:	add	x1, x1, #0x2ba
    5f58:	cmp	w2, #0x3
    5f5c:	add	x3, x3, #0x8e0
    5f60:	ldr	w2, [x0, #16]
    5f64:	csel	x3, x3, x1, eq  // eq = none
    5f68:	ldr	x1, [x0, #8]
    5f6c:	ldr	x4, [x0, #48]
    5f70:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    5f74:	add	x0, x0, #0x902
    5f78:	b	5db8 <check_waitpid_and_exit@@Base+0x54>
    5f7c:	ldr	x2, [x0, #8]
    5f80:	ldp	w3, w4, [x2, #4]
    5f84:	orr	w0, w3, w4
    5f88:	cbz	w0, 5fc8 <check_waitpid_and_exit@@Base+0x264>
    5f8c:	ldr	w1, [x2]
    5f90:	cbz	w1, 5fb8 <check_waitpid_and_exit@@Base+0x254>
    5f94:	add	w0, w3, w4
    5f98:	scvtf	s1, w1
    5f9c:	sub	w0, w1, w0
    5fa0:	scvtf	s0, w0
    5fa4:	mov	w0, #0x42c80000            	// #1120403456
    5fa8:	fdiv	s0, s0, s1
    5fac:	fmov	s1, w0
    5fb0:	fmul	s0, s0, s1
    5fb4:	fcvtzs	w1, s0
    5fb8:	ldr	w2, [x2]
    5fbc:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    5fc0:	add	x0, x0, #0x90e
    5fc4:	b	5db8 <check_waitpid_and_exit@@Base+0x54>
    5fc8:	mov	w1, #0x64                  	// #100
    5fcc:	b	5fb8 <check_waitpid_and_exit@@Base+0x254>
    5fd0:	stp	x29, x30, [sp, #-16]!
    5fd4:	adrp	x3, 6000 <check_waitpid_and_exit@@Base+0x29c>
    5fd8:	adrp	x1, 6000 <check_waitpid_and_exit@@Base+0x29c>
    5fdc:	mov	x29, sp
    5fe0:	adrp	x0, 6000 <check_waitpid_and_exit@@Base+0x29c>
    5fe4:	add	x3, x3, #0x947
    5fe8:	add	x1, x1, #0x939
    5fec:	add	x0, x0, #0x945
    5ff0:	mov	w2, #0x1a                  	// #26
    5ff4:	bl	25a0 <__assert_fail@plt>

Disassembly of section .fini:

0000000000005ff8 <.fini>:
    5ff8:	stp	x29, x30, [sp, #-16]!
    5ffc:	mov	x29, sp
    6000:	ldp	x29, x30, [sp], #16
    6004:	ret
