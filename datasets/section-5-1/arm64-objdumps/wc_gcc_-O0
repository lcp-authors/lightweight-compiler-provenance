
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//wc_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401888 <.init>:
  401888:	stp	x29, x30, [sp, #-16]!
  40188c:	mov	x29, sp
  401890:	bl	401d40 <ferror@plt+0x60>
  401894:	ldp	x29, x30, [sp], #16
  401898:	ret

Disassembly of section .plt:

00000000004018a0 <mbrtowc@plt-0x20>:
  4018a0:	stp	x16, x30, [sp, #-16]!
  4018a4:	adrp	x16, 41b000 <_obstack_memory_used@@Base+0x125c0>
  4018a8:	ldr	x17, [x16, #4088]
  4018ac:	add	x16, x16, #0xff8
  4018b0:	br	x17
  4018b4:	nop
  4018b8:	nop
  4018bc:	nop

00000000004018c0 <mbrtowc@plt>:
  4018c0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  4018c4:	ldr	x17, [x16]
  4018c8:	add	x16, x16, #0x0
  4018cc:	br	x17

00000000004018d0 <memcpy@plt>:
  4018d0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  4018d4:	ldr	x17, [x16, #8]
  4018d8:	add	x16, x16, #0x8
  4018dc:	br	x17

00000000004018e0 <memmove@plt>:
  4018e0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  4018e4:	ldr	x17, [x16, #16]
  4018e8:	add	x16, x16, #0x10
  4018ec:	br	x17

00000000004018f0 <_exit@plt>:
  4018f0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  4018f4:	ldr	x17, [x16, #24]
  4018f8:	add	x16, x16, #0x18
  4018fc:	br	x17

0000000000401900 <strlen@plt>:
  401900:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401904:	ldr	x17, [x16, #32]
  401908:	add	x16, x16, #0x20
  40190c:	br	x17

0000000000401910 <exit@plt>:
  401910:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401914:	ldr	x17, [x16, #40]
  401918:	add	x16, x16, #0x28
  40191c:	br	x17

0000000000401920 <error@plt>:
  401920:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401924:	ldr	x17, [x16, #48]
  401928:	add	x16, x16, #0x30
  40192c:	br	x17

0000000000401930 <sysinfo@plt>:
  401930:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401934:	ldr	x17, [x16, #56]
  401938:	add	x16, x16, #0x38
  40193c:	br	x17

0000000000401940 <ferror_unlocked@plt>:
  401940:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401944:	ldr	x17, [x16, #64]
  401948:	add	x16, x16, #0x40
  40194c:	br	x17

0000000000401950 <__cxa_atexit@plt>:
  401950:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401954:	ldr	x17, [x16, #72]
  401958:	add	x16, x16, #0x48
  40195c:	br	x17

0000000000401960 <iswcntrl@plt>:
  401960:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401964:	ldr	x17, [x16, #80]
  401968:	add	x16, x16, #0x50
  40196c:	br	x17

0000000000401970 <setvbuf@plt>:
  401970:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401974:	ldr	x17, [x16, #88]
  401978:	add	x16, x16, #0x58
  40197c:	br	x17

0000000000401980 <lseek@plt>:
  401980:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401984:	ldr	x17, [x16, #96]
  401988:	add	x16, x16, #0x60
  40198c:	br	x17

0000000000401990 <__fpending@plt>:
  401990:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401994:	ldr	x17, [x16, #104]
  401998:	add	x16, x16, #0x68
  40199c:	br	x17

00000000004019a0 <fileno@plt>:
  4019a0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  4019a4:	ldr	x17, [x16, #112]
  4019a8:	add	x16, x16, #0x70
  4019ac:	br	x17

00000000004019b0 <fclose@plt>:
  4019b0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  4019b4:	ldr	x17, [x16, #120]
  4019b8:	add	x16, x16, #0x78
  4019bc:	br	x17

00000000004019c0 <iswspace@plt>:
  4019c0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  4019c4:	ldr	x17, [x16, #128]
  4019c8:	add	x16, x16, #0x80
  4019cc:	br	x17

00000000004019d0 <nl_langinfo@plt>:
  4019d0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  4019d4:	ldr	x17, [x16, #136]
  4019d8:	add	x16, x16, #0x88
  4019dc:	br	x17

00000000004019e0 <fopen@plt>:
  4019e0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  4019e4:	ldr	x17, [x16, #144]
  4019e8:	add	x16, x16, #0x90
  4019ec:	br	x17

00000000004019f0 <malloc@plt>:
  4019f0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  4019f4:	ldr	x17, [x16, #152]
  4019f8:	add	x16, x16, #0x98
  4019fc:	br	x17

0000000000401a00 <wcwidth@plt>:
  401a00:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401a04:	ldr	x17, [x16, #160]
  401a08:	add	x16, x16, #0xa0
  401a0c:	br	x17

0000000000401a10 <getdelim@plt>:
  401a10:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401a14:	ldr	x17, [x16, #168]
  401a18:	add	x16, x16, #0xa8
  401a1c:	br	x17

0000000000401a20 <open@plt>:
  401a20:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401a24:	ldr	x17, [x16, #176]
  401a28:	add	x16, x16, #0xb0
  401a2c:	br	x17

0000000000401a30 <strncmp@plt>:
  401a30:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401a34:	ldr	x17, [x16, #184]
  401a38:	add	x16, x16, #0xb8
  401a3c:	br	x17

0000000000401a40 <bindtextdomain@plt>:
  401a40:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401a44:	ldr	x17, [x16, #192]
  401a48:	add	x16, x16, #0xc0
  401a4c:	br	x17

0000000000401a50 <__libc_start_main@plt>:
  401a50:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401a54:	ldr	x17, [x16, #200]
  401a58:	add	x16, x16, #0xc8
  401a5c:	br	x17

0000000000401a60 <fgetc@plt>:
  401a60:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401a64:	ldr	x17, [x16, #208]
  401a68:	add	x16, x16, #0xd0
  401a6c:	br	x17

0000000000401a70 <memset@plt>:
  401a70:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401a74:	ldr	x17, [x16, #216]
  401a78:	add	x16, x16, #0xd8
  401a7c:	br	x17

0000000000401a80 <putchar_unlocked@plt>:
  401a80:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401a84:	ldr	x17, [x16, #224]
  401a88:	add	x16, x16, #0xe0
  401a8c:	br	x17

0000000000401a90 <calloc@plt>:
  401a90:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401a94:	ldr	x17, [x16, #232]
  401a98:	add	x16, x16, #0xe8
  401a9c:	br	x17

0000000000401aa0 <realloc@plt>:
  401aa0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401aa4:	ldr	x17, [x16, #240]
  401aa8:	add	x16, x16, #0xf0
  401aac:	br	x17

0000000000401ab0 <getpagesize@plt>:
  401ab0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401ab4:	ldr	x17, [x16, #248]
  401ab8:	add	x16, x16, #0xf8
  401abc:	br	x17

0000000000401ac0 <close@plt>:
  401ac0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401ac4:	ldr	x17, [x16, #256]
  401ac8:	add	x16, x16, #0x100
  401acc:	br	x17

0000000000401ad0 <strrchr@plt>:
  401ad0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401ad4:	ldr	x17, [x16, #264]
  401ad8:	add	x16, x16, #0x108
  401adc:	br	x17

0000000000401ae0 <__gmon_start__@plt>:
  401ae0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401ae4:	ldr	x17, [x16, #272]
  401ae8:	add	x16, x16, #0x110
  401aec:	br	x17

0000000000401af0 <btowc@plt>:
  401af0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401af4:	ldr	x17, [x16, #280]
  401af8:	add	x16, x16, #0x118
  401afc:	br	x17

0000000000401b00 <abort@plt>:
  401b00:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401b04:	ldr	x17, [x16, #288]
  401b08:	add	x16, x16, #0x120
  401b0c:	br	x17

0000000000401b10 <posix_fadvise@plt>:
  401b10:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401b14:	ldr	x17, [x16, #296]
  401b18:	add	x16, x16, #0x128
  401b1c:	br	x17

0000000000401b20 <mbsinit@plt>:
  401b20:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401b24:	ldr	x17, [x16, #304]
  401b28:	add	x16, x16, #0x130
  401b2c:	br	x17

0000000000401b30 <feof@plt>:
  401b30:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401b34:	ldr	x17, [x16, #312]
  401b38:	add	x16, x16, #0x138
  401b3c:	br	x17

0000000000401b40 <memcmp@plt>:
  401b40:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401b44:	ldr	x17, [x16, #320]
  401b48:	add	x16, x16, #0x140
  401b4c:	br	x17

0000000000401b50 <textdomain@plt>:
  401b50:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401b54:	ldr	x17, [x16, #328]
  401b58:	add	x16, x16, #0x148
  401b5c:	br	x17

0000000000401b60 <getopt_long@plt>:
  401b60:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401b64:	ldr	x17, [x16, #336]
  401b68:	add	x16, x16, #0x150
  401b6c:	br	x17

0000000000401b70 <strcmp@plt>:
  401b70:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401b74:	ldr	x17, [x16, #344]
  401b78:	add	x16, x16, #0x158
  401b7c:	br	x17

0000000000401b80 <__ctype_b_loc@plt>:
  401b80:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401b84:	ldr	x17, [x16, #352]
  401b88:	add	x16, x16, #0x160
  401b8c:	br	x17

0000000000401b90 <fseeko@plt>:
  401b90:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401b94:	ldr	x17, [x16, #360]
  401b98:	add	x16, x16, #0x168
  401b9c:	br	x17

0000000000401ba0 <free@plt>:
  401ba0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401ba4:	ldr	x17, [x16, #368]
  401ba8:	add	x16, x16, #0x170
  401bac:	br	x17

0000000000401bb0 <__ctype_get_mb_cur_max@plt>:
  401bb0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401bb4:	ldr	x17, [x16, #376]
  401bb8:	add	x16, x16, #0x178
  401bbc:	br	x17

0000000000401bc0 <strchr@plt>:
  401bc0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401bc4:	ldr	x17, [x16, #384]
  401bc8:	add	x16, x16, #0x180
  401bcc:	br	x17

0000000000401bd0 <fwrite@plt>:
  401bd0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401bd4:	ldr	x17, [x16, #392]
  401bd8:	add	x16, x16, #0x188
  401bdc:	br	x17

0000000000401be0 <fflush@plt>:
  401be0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401be4:	ldr	x17, [x16, #400]
  401be8:	add	x16, x16, #0x190
  401bec:	br	x17

0000000000401bf0 <read@plt>:
  401bf0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401bf4:	ldr	x17, [x16, #408]
  401bf8:	add	x16, x16, #0x198
  401bfc:	br	x17

0000000000401c00 <memchr@plt>:
  401c00:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401c04:	ldr	x17, [x16, #416]
  401c08:	add	x16, x16, #0x1a0
  401c0c:	br	x17

0000000000401c10 <sysconf@plt>:
  401c10:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401c14:	ldr	x17, [x16, #424]
  401c18:	add	x16, x16, #0x1a8
  401c1c:	br	x17

0000000000401c20 <__fxstat@plt>:
  401c20:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401c24:	ldr	x17, [x16, #432]
  401c28:	add	x16, x16, #0x1b0
  401c2c:	br	x17

0000000000401c30 <fputs_unlocked@plt>:
  401c30:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401c34:	ldr	x17, [x16, #440]
  401c38:	add	x16, x16, #0x1b8
  401c3c:	br	x17

0000000000401c40 <__freading@plt>:
  401c40:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401c44:	ldr	x17, [x16, #448]
  401c48:	add	x16, x16, #0x1c0
  401c4c:	br	x17

0000000000401c50 <iswprint@plt>:
  401c50:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401c54:	ldr	x17, [x16, #456]
  401c58:	add	x16, x16, #0x1c8
  401c5c:	br	x17

0000000000401c60 <printf@plt>:
  401c60:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401c64:	ldr	x17, [x16, #464]
  401c68:	add	x16, x16, #0x1d0
  401c6c:	br	x17

0000000000401c70 <__assert_fail@plt>:
  401c70:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401c74:	ldr	x17, [x16, #472]
  401c78:	add	x16, x16, #0x1d8
  401c7c:	br	x17

0000000000401c80 <__errno_location@plt>:
  401c80:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401c84:	ldr	x17, [x16, #480]
  401c88:	add	x16, x16, #0x1e0
  401c8c:	br	x17

0000000000401c90 <getenv@plt>:
  401c90:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401c94:	ldr	x17, [x16, #488]
  401c98:	add	x16, x16, #0x1e8
  401c9c:	br	x17

0000000000401ca0 <__xstat@plt>:
  401ca0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401ca4:	ldr	x17, [x16, #496]
  401ca8:	add	x16, x16, #0x1f0
  401cac:	br	x17

0000000000401cb0 <gettext@plt>:
  401cb0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401cb4:	ldr	x17, [x16, #504]
  401cb8:	add	x16, x16, #0x1f8
  401cbc:	br	x17

0000000000401cc0 <fprintf@plt>:
  401cc0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401cc4:	ldr	x17, [x16, #512]
  401cc8:	add	x16, x16, #0x200
  401ccc:	br	x17

0000000000401cd0 <setlocale@plt>:
  401cd0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401cd4:	ldr	x17, [x16, #520]
  401cd8:	add	x16, x16, #0x208
  401cdc:	br	x17

0000000000401ce0 <ferror@plt>:
  401ce0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401ce4:	ldr	x17, [x16, #528]
  401ce8:	add	x16, x16, #0x210
  401cec:	br	x17

Disassembly of section .text:

0000000000401cf0 <_obstack_begin@@Base-0x6908>:
  401cf0:	mov	x29, #0x0                   	// #0
  401cf4:	mov	x30, #0x0                   	// #0
  401cf8:	mov	x5, x0
  401cfc:	ldr	x1, [sp]
  401d00:	add	x2, sp, #0x8
  401d04:	mov	x6, sp
  401d08:	movz	x0, #0x0, lsl #48
  401d0c:	movk	x0, #0x0, lsl #32
  401d10:	movk	x0, #0x40, lsl #16
  401d14:	movk	x0, #0x373c
  401d18:	movz	x3, #0x0, lsl #48
  401d1c:	movk	x3, #0x0, lsl #32
  401d20:	movk	x3, #0x40, lsl #16
  401d24:	movk	x3, #0x90f8
  401d28:	movz	x4, #0x0, lsl #48
  401d2c:	movk	x4, #0x0, lsl #32
  401d30:	movk	x4, #0x40, lsl #16
  401d34:	movk	x4, #0x9178
  401d38:	bl	401a50 <__libc_start_main@plt>
  401d3c:	bl	401b00 <abort@plt>
  401d40:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x125c0>
  401d44:	ldr	x0, [x0, #4064]
  401d48:	cbz	x0, 401d50 <ferror@plt+0x70>
  401d4c:	b	401ae0 <__gmon_start__@plt>
  401d50:	ret
  401d54:	stp	x29, x30, [sp, #-32]!
  401d58:	mov	x29, sp
  401d5c:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  401d60:	add	x0, x0, #0x298
  401d64:	str	x0, [sp, #24]
  401d68:	ldr	x0, [sp, #24]
  401d6c:	str	x0, [sp, #24]
  401d70:	ldr	x1, [sp, #24]
  401d74:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  401d78:	add	x0, x0, #0x298
  401d7c:	cmp	x1, x0
  401d80:	b.eq	401dbc <ferror@plt+0xdc>  // b.none
  401d84:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  401d88:	add	x0, x0, #0x1c8
  401d8c:	ldr	x0, [x0]
  401d90:	str	x0, [sp, #16]
  401d94:	ldr	x0, [sp, #16]
  401d98:	str	x0, [sp, #16]
  401d9c:	ldr	x0, [sp, #16]
  401da0:	cmp	x0, #0x0
  401da4:	b.eq	401dc0 <ferror@plt+0xe0>  // b.none
  401da8:	ldr	x1, [sp, #16]
  401dac:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  401db0:	add	x0, x0, #0x298
  401db4:	blr	x1
  401db8:	b	401dc0 <ferror@plt+0xe0>
  401dbc:	nop
  401dc0:	ldp	x29, x30, [sp], #32
  401dc4:	ret
  401dc8:	stp	x29, x30, [sp, #-48]!
  401dcc:	mov	x29, sp
  401dd0:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  401dd4:	add	x0, x0, #0x298
  401dd8:	str	x0, [sp, #40]
  401ddc:	ldr	x0, [sp, #40]
  401de0:	str	x0, [sp, #40]
  401de4:	ldr	x1, [sp, #40]
  401de8:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  401dec:	add	x0, x0, #0x298
  401df0:	sub	x0, x1, x0
  401df4:	asr	x0, x0, #3
  401df8:	lsr	x1, x0, #63
  401dfc:	add	x0, x1, x0
  401e00:	asr	x0, x0, #1
  401e04:	str	x0, [sp, #32]
  401e08:	ldr	x0, [sp, #32]
  401e0c:	cmp	x0, #0x0
  401e10:	b.eq	401e50 <ferror@plt+0x170>  // b.none
  401e14:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  401e18:	add	x0, x0, #0x1d0
  401e1c:	ldr	x0, [x0]
  401e20:	str	x0, [sp, #24]
  401e24:	ldr	x0, [sp, #24]
  401e28:	str	x0, [sp, #24]
  401e2c:	ldr	x0, [sp, #24]
  401e30:	cmp	x0, #0x0
  401e34:	b.eq	401e54 <ferror@plt+0x174>  // b.none
  401e38:	ldr	x2, [sp, #24]
  401e3c:	ldr	x1, [sp, #32]
  401e40:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  401e44:	add	x0, x0, #0x298
  401e48:	blr	x2
  401e4c:	b	401e54 <ferror@plt+0x174>
  401e50:	nop
  401e54:	ldp	x29, x30, [sp], #48
  401e58:	ret
  401e5c:	stp	x29, x30, [sp, #-16]!
  401e60:	mov	x29, sp
  401e64:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  401e68:	add	x0, x0, #0x2d0
  401e6c:	ldrb	w0, [x0]
  401e70:	and	x0, x0, #0xff
  401e74:	cmp	x0, #0x0
  401e78:	b.ne	401e94 <ferror@plt+0x1b4>  // b.any
  401e7c:	bl	401d54 <ferror@plt+0x74>
  401e80:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  401e84:	add	x0, x0, #0x2d0
  401e88:	mov	w1, #0x1                   	// #1
  401e8c:	strb	w1, [x0]
  401e90:	b	401e98 <ferror@plt+0x1b8>
  401e94:	nop
  401e98:	ldp	x29, x30, [sp], #16
  401e9c:	ret
  401ea0:	stp	x29, x30, [sp, #-16]!
  401ea4:	mov	x29, sp
  401ea8:	bl	401dc8 <ferror@plt+0xe8>
  401eac:	nop
  401eb0:	ldp	x29, x30, [sp], #16
  401eb4:	ret
  401eb8:	sub	sp, sp, #0x10
  401ebc:	strb	w0, [sp, #15]
  401ec0:	ldrb	w0, [sp, #15]
  401ec4:	add	sp, sp, #0x10
  401ec8:	ret
  401ecc:	stp	x29, x30, [sp, #-16]!
  401ed0:	mov	x29, sp
  401ed4:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  401ed8:	add	x0, x0, #0x268
  401edc:	bl	401cb0 <gettext@plt>
  401ee0:	mov	x2, x0
  401ee4:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  401ee8:	add	x0, x0, #0x2b8
  401eec:	ldr	x0, [x0]
  401ef0:	mov	x1, x0
  401ef4:	mov	x0, x2
  401ef8:	bl	401c30 <fputs_unlocked@plt>
  401efc:	nop
  401f00:	ldp	x29, x30, [sp], #16
  401f04:	ret
  401f08:	stp	x29, x30, [sp, #-176]!
  401f0c:	mov	x29, sp
  401f10:	str	x0, [sp, #24]
  401f14:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  401f18:	add	x1, x0, #0x3b0
  401f1c:	add	x0, sp, #0x28
  401f20:	ldp	x2, x3, [x1]
  401f24:	stp	x2, x3, [x0]
  401f28:	ldp	x2, x3, [x1, #16]
  401f2c:	stp	x2, x3, [x0, #16]
  401f30:	ldp	x2, x3, [x1, #32]
  401f34:	stp	x2, x3, [x0, #32]
  401f38:	ldp	x2, x3, [x1, #48]
  401f3c:	stp	x2, x3, [x0, #48]
  401f40:	ldp	x2, x3, [x1, #64]
  401f44:	stp	x2, x3, [x0, #64]
  401f48:	ldp	x2, x3, [x1, #80]
  401f4c:	stp	x2, x3, [x0, #80]
  401f50:	ldp	x2, x3, [x1, #96]
  401f54:	stp	x2, x3, [x0, #96]
  401f58:	ldr	x0, [sp, #24]
  401f5c:	str	x0, [sp, #168]
  401f60:	add	x0, sp, #0x28
  401f64:	str	x0, [sp, #160]
  401f68:	b	401f78 <ferror@plt+0x298>
  401f6c:	ldr	x0, [sp, #160]
  401f70:	add	x0, x0, #0x10
  401f74:	str	x0, [sp, #160]
  401f78:	ldr	x0, [sp, #160]
  401f7c:	ldr	x0, [x0]
  401f80:	cmp	x0, #0x0
  401f84:	b.eq	401fa4 <ferror@plt+0x2c4>  // b.none
  401f88:	ldr	x0, [sp, #160]
  401f8c:	ldr	x0, [x0]
  401f90:	mov	x1, x0
  401f94:	ldr	x0, [sp, #24]
  401f98:	bl	401b70 <strcmp@plt>
  401f9c:	cmp	w0, #0x0
  401fa0:	b.ne	401f6c <ferror@plt+0x28c>  // b.any
  401fa4:	ldr	x0, [sp, #160]
  401fa8:	ldr	x0, [x0, #8]
  401fac:	cmp	x0, #0x0
  401fb0:	b.eq	401fc0 <ferror@plt+0x2e0>  // b.none
  401fb4:	ldr	x0, [sp, #160]
  401fb8:	ldr	x0, [x0, #8]
  401fbc:	str	x0, [sp, #168]
  401fc0:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  401fc4:	add	x0, x0, #0x2a0
  401fc8:	bl	401cb0 <gettext@plt>
  401fcc:	mov	x3, x0
  401fd0:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  401fd4:	add	x2, x0, #0x2b8
  401fd8:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  401fdc:	add	x1, x0, #0x2e0
  401fe0:	mov	x0, x3
  401fe4:	bl	401c60 <printf@plt>
  401fe8:	mov	x1, #0x0                   	// #0
  401fec:	mov	w0, #0x5                   	// #5
  401ff0:	bl	401cd0 <setlocale@plt>
  401ff4:	str	x0, [sp, #152]
  401ff8:	ldr	x0, [sp, #152]
  401ffc:	cmp	x0, #0x0
  402000:	b.eq	402048 <ferror@plt+0x368>  // b.none
  402004:	mov	x2, #0x3                   	// #3
  402008:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  40200c:	add	x1, x0, #0x2f0
  402010:	ldr	x0, [sp, #152]
  402014:	bl	401a30 <strncmp@plt>
  402018:	cmp	w0, #0x0
  40201c:	b.eq	402048 <ferror@plt+0x368>  // b.none
  402020:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  402024:	add	x0, x0, #0x2f8
  402028:	bl	401cb0 <gettext@plt>
  40202c:	mov	x2, x0
  402030:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  402034:	add	x0, x0, #0x2b8
  402038:	ldr	x0, [x0]
  40203c:	mov	x1, x0
  402040:	mov	x0, x2
  402044:	bl	401c30 <fputs_unlocked@plt>
  402048:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  40204c:	add	x0, x0, #0x340
  402050:	bl	401cb0 <gettext@plt>
  402054:	mov	x3, x0
  402058:	ldr	x2, [sp, #24]
  40205c:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  402060:	add	x1, x0, #0x2b8
  402064:	mov	x0, x3
  402068:	bl	401c60 <printf@plt>
  40206c:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  402070:	add	x0, x0, #0x360
  402074:	bl	401cb0 <gettext@plt>
  402078:	mov	x3, x0
  40207c:	ldr	x1, [sp, #168]
  402080:	ldr	x0, [sp, #24]
  402084:	cmp	x1, x0
  402088:	b.ne	402098 <ferror@plt+0x3b8>  // b.any
  40208c:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  402090:	add	x0, x0, #0x398
  402094:	b	4020a0 <ferror@plt+0x3c0>
  402098:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  40209c:	add	x0, x0, #0x3a8
  4020a0:	mov	x2, x0
  4020a4:	ldr	x1, [sp, #168]
  4020a8:	mov	x0, x3
  4020ac:	bl	401c60 <printf@plt>
  4020b0:	nop
  4020b4:	ldp	x29, x30, [sp], #176
  4020b8:	ret
  4020bc:	sub	sp, sp, #0x10
  4020c0:	str	x0, [sp, #8]
  4020c4:	ldr	x0, [sp, #8]
  4020c8:	ldr	w0, [x0, #16]
  4020cc:	and	w0, w0, #0xf000
  4020d0:	cmp	w0, #0x8, lsl #12
  4020d4:	b.eq	4020ec <ferror@plt+0x40c>  // b.none
  4020d8:	ldr	x0, [sp, #8]
  4020dc:	ldr	w0, [x0, #16]
  4020e0:	and	w0, w0, #0xf000
  4020e4:	cmp	w0, #0xa, lsl #12
  4020e8:	b.ne	4020f4 <ferror@plt+0x414>  // b.any
  4020ec:	mov	w0, #0x1                   	// #1
  4020f0:	b	4020f8 <ferror@plt+0x418>
  4020f4:	mov	w0, #0x0                   	// #0
  4020f8:	and	w0, w0, #0x1
  4020fc:	and	w0, w0, #0xff
  402100:	add	sp, sp, #0x10
  402104:	ret
  402108:	stp	x29, x30, [sp, #-48]!
  40210c:	mov	x29, sp
  402110:	str	x19, [sp, #16]
  402114:	str	w0, [sp, #44]
  402118:	ldr	w0, [sp, #44]
  40211c:	cmp	w0, #0x0
  402120:	b.eq	40215c <ferror@plt+0x47c>  // b.none
  402124:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  402128:	add	x0, x0, #0x2a0
  40212c:	ldr	x19, [x0]
  402130:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  402134:	add	x0, x0, #0x590
  402138:	bl	401cb0 <gettext@plt>
  40213c:	mov	x1, x0
  402140:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  402144:	add	x0, x0, #0x338
  402148:	ldr	x0, [x0]
  40214c:	mov	x2, x0
  402150:	mov	x0, x19
  402154:	bl	401cc0 <fprintf@plt>
  402158:	b	402268 <ferror@plt+0x588>
  40215c:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  402160:	add	x0, x0, #0x5b8
  402164:	bl	401cb0 <gettext@plt>
  402168:	mov	x3, x0
  40216c:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  402170:	add	x0, x0, #0x338
  402174:	ldr	x1, [x0]
  402178:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  40217c:	add	x0, x0, #0x338
  402180:	ldr	x0, [x0]
  402184:	mov	x2, x0
  402188:	mov	x0, x3
  40218c:	bl	401c60 <printf@plt>
  402190:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  402194:	add	x0, x0, #0x600
  402198:	bl	401cb0 <gettext@plt>
  40219c:	mov	x2, x0
  4021a0:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  4021a4:	add	x0, x0, #0x2b8
  4021a8:	ldr	x0, [x0]
  4021ac:	mov	x1, x0
  4021b0:	mov	x0, x2
  4021b4:	bl	401c30 <fputs_unlocked@plt>
  4021b8:	bl	401ecc <ferror@plt+0x1ec>
  4021bc:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  4021c0:	add	x0, x0, #0x6b8
  4021c4:	bl	401cb0 <gettext@plt>
  4021c8:	mov	x2, x0
  4021cc:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  4021d0:	add	x0, x0, #0x2b8
  4021d4:	ldr	x0, [x0]
  4021d8:	mov	x1, x0
  4021dc:	mov	x0, x2
  4021e0:	bl	401c30 <fputs_unlocked@plt>
  4021e4:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  4021e8:	add	x0, x0, #0x7e8
  4021ec:	bl	401cb0 <gettext@plt>
  4021f0:	mov	x2, x0
  4021f4:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  4021f8:	add	x0, x0, #0x2b8
  4021fc:	ldr	x0, [x0]
  402200:	mov	x1, x0
  402204:	mov	x0, x2
  402208:	bl	401c30 <fputs_unlocked@plt>
  40220c:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  402210:	add	x0, x0, #0x918
  402214:	bl	401cb0 <gettext@plt>
  402218:	mov	x2, x0
  40221c:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  402220:	add	x0, x0, #0x2b8
  402224:	ldr	x0, [x0]
  402228:	mov	x1, x0
  40222c:	mov	x0, x2
  402230:	bl	401c30 <fputs_unlocked@plt>
  402234:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  402238:	add	x0, x0, #0x948
  40223c:	bl	401cb0 <gettext@plt>
  402240:	mov	x2, x0
  402244:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  402248:	add	x0, x0, #0x2b8
  40224c:	ldr	x0, [x0]
  402250:	mov	x1, x0
  402254:	mov	x0, x2
  402258:	bl	401c30 <fputs_unlocked@plt>
  40225c:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  402260:	add	x0, x0, #0x980
  402264:	bl	401f08 <ferror@plt+0x228>
  402268:	ldr	w0, [sp, #44]
  40226c:	bl	401910 <exit@plt>
  402270:	sub	sp, sp, #0x10
  402274:	str	w0, [sp, #12]
  402278:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  40227c:	add	x0, x0, #0x318
  402280:	ldrb	w0, [x0]
  402284:	eor	w0, w0, #0x1
  402288:	and	w0, w0, #0xff
  40228c:	cmp	w0, #0x0
  402290:	b.eq	4022d8 <ferror@plt+0x5f8>  // b.none
  402294:	ldr	w0, [sp, #12]
  402298:	cmp	w0, #0xa0
  40229c:	b.eq	4022d0 <ferror@plt+0x5f0>  // b.none
  4022a0:	ldr	w1, [sp, #12]
  4022a4:	mov	w0, #0x2007                	// #8199
  4022a8:	cmp	w1, w0
  4022ac:	b.eq	4022d0 <ferror@plt+0x5f0>  // b.none
  4022b0:	ldr	w1, [sp, #12]
  4022b4:	mov	w0, #0x202f                	// #8239
  4022b8:	cmp	w1, w0
  4022bc:	b.eq	4022d0 <ferror@plt+0x5f0>  // b.none
  4022c0:	ldr	w1, [sp, #12]
  4022c4:	mov	w0, #0x2060                	// #8288
  4022c8:	cmp	w1, w0
  4022cc:	b.ne	4022d8 <ferror@plt+0x5f8>  // b.any
  4022d0:	mov	w0, #0x1                   	// #1
  4022d4:	b	4022dc <ferror@plt+0x5fc>
  4022d8:	mov	w0, #0x0                   	// #0
  4022dc:	add	sp, sp, #0x10
  4022e0:	ret
  4022e4:	stp	x29, x30, [sp, #-32]!
  4022e8:	mov	x29, sp
  4022ec:	str	w0, [sp, #28]
  4022f0:	ldr	w0, [sp, #28]
  4022f4:	bl	401af0 <btowc@plt>
  4022f8:	bl	402270 <ferror@plt+0x590>
  4022fc:	ldp	x29, x30, [sp], #32
  402300:	ret
  402304:	stp	x29, x30, [sp, #-112]!
  402308:	mov	x29, sp
  40230c:	str	x19, [sp, #16]
  402310:	str	x0, [sp, #72]
  402314:	str	x1, [sp, #64]
  402318:	str	x2, [sp, #56]
  40231c:	str	x3, [sp, #48]
  402320:	str	x4, [sp, #40]
  402324:	str	x5, [sp, #32]
  402328:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  40232c:	add	x0, x0, #0xb61
  402330:	str	x0, [sp, #104]
  402334:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  402338:	add	x0, x0, #0x300
  40233c:	ldrb	w0, [x0]
  402340:	cmp	w0, #0x0
  402344:	b.eq	402380 <ferror@plt+0x6a0>  // b.none
  402348:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  40234c:	add	x0, x0, #0x308
  402350:	ldr	w19, [x0]
  402354:	add	x0, sp, #0x50
  402358:	mov	x1, x0
  40235c:	ldr	x0, [sp, #72]
  402360:	bl	40463c <ferror@plt+0x295c>
  402364:	mov	x2, x0
  402368:	mov	w1, w19
  40236c:	ldr	x0, [sp, #104]
  402370:	bl	401c60 <printf@plt>
  402374:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  402378:	add	x0, x0, #0xb60
  40237c:	str	x0, [sp, #104]
  402380:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  402384:	add	x0, x0, #0x301
  402388:	ldrb	w0, [x0]
  40238c:	cmp	w0, #0x0
  402390:	b.eq	4023cc <ferror@plt+0x6ec>  // b.none
  402394:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  402398:	add	x0, x0, #0x308
  40239c:	ldr	w19, [x0]
  4023a0:	add	x0, sp, #0x50
  4023a4:	mov	x1, x0
  4023a8:	ldr	x0, [sp, #64]
  4023ac:	bl	40463c <ferror@plt+0x295c>
  4023b0:	mov	x2, x0
  4023b4:	mov	w1, w19
  4023b8:	ldr	x0, [sp, #104]
  4023bc:	bl	401c60 <printf@plt>
  4023c0:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  4023c4:	add	x0, x0, #0xb60
  4023c8:	str	x0, [sp, #104]
  4023cc:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  4023d0:	add	x0, x0, #0x302
  4023d4:	ldrb	w0, [x0]
  4023d8:	cmp	w0, #0x0
  4023dc:	b.eq	402418 <ferror@plt+0x738>  // b.none
  4023e0:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  4023e4:	add	x0, x0, #0x308
  4023e8:	ldr	w19, [x0]
  4023ec:	add	x0, sp, #0x50
  4023f0:	mov	x1, x0
  4023f4:	ldr	x0, [sp, #56]
  4023f8:	bl	40463c <ferror@plt+0x295c>
  4023fc:	mov	x2, x0
  402400:	mov	w1, w19
  402404:	ldr	x0, [sp, #104]
  402408:	bl	401c60 <printf@plt>
  40240c:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  402410:	add	x0, x0, #0xb60
  402414:	str	x0, [sp, #104]
  402418:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  40241c:	add	x0, x0, #0x303
  402420:	ldrb	w0, [x0]
  402424:	cmp	w0, #0x0
  402428:	b.eq	402464 <ferror@plt+0x784>  // b.none
  40242c:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  402430:	add	x0, x0, #0x308
  402434:	ldr	w19, [x0]
  402438:	add	x0, sp, #0x50
  40243c:	mov	x1, x0
  402440:	ldr	x0, [sp, #48]
  402444:	bl	40463c <ferror@plt+0x295c>
  402448:	mov	x2, x0
  40244c:	mov	w1, w19
  402450:	ldr	x0, [sp, #104]
  402454:	bl	401c60 <printf@plt>
  402458:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  40245c:	add	x0, x0, #0xb60
  402460:	str	x0, [sp, #104]
  402464:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  402468:	add	x0, x0, #0x304
  40246c:	ldrb	w0, [x0]
  402470:	cmp	w0, #0x0
  402474:	b.eq	4024a4 <ferror@plt+0x7c4>  // b.none
  402478:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  40247c:	add	x0, x0, #0x308
  402480:	ldr	w19, [x0]
  402484:	add	x0, sp, #0x50
  402488:	mov	x1, x0
  40248c:	ldr	x0, [sp, #40]
  402490:	bl	40463c <ferror@plt+0x295c>
  402494:	mov	x2, x0
  402498:	mov	w1, w19
  40249c:	ldr	x0, [sp, #104]
  4024a0:	bl	401c60 <printf@plt>
  4024a4:	ldr	x0, [sp, #32]
  4024a8:	cmp	x0, #0x0
  4024ac:	b.eq	4024ec <ferror@plt+0x80c>  // b.none
  4024b0:	mov	w1, #0xa                   	// #10
  4024b4:	ldr	x0, [sp, #32]
  4024b8:	bl	401bc0 <strchr@plt>
  4024bc:	cmp	x0, #0x0
  4024c0:	b.eq	4024d8 <ferror@plt+0x7f8>  // b.none
  4024c4:	ldr	x2, [sp, #32]
  4024c8:	mov	w1, #0x3                   	// #3
  4024cc:	mov	w0, #0x0                   	// #0
  4024d0:	bl	406a48 <ferror@plt+0x4d68>
  4024d4:	b	4024dc <ferror@plt+0x7fc>
  4024d8:	ldr	x0, [sp, #32]
  4024dc:	mov	x1, x0
  4024e0:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  4024e4:	add	x0, x0, #0x988
  4024e8:	bl	401c60 <printf@plt>
  4024ec:	mov	w0, #0xa                   	// #10
  4024f0:	bl	401a80 <putchar_unlocked@plt>
  4024f4:	nop
  4024f8:	ldr	x19, [sp, #16]
  4024fc:	ldp	x29, x30, [sp], #112
  402500:	ret
  402504:	mov	x12, #0x4120                	// #16672
  402508:	sub	sp, sp, x12
  40250c:	stp	x29, x30, [sp]
  402510:	mov	x29, sp
  402514:	str	x19, [sp, #16]
  402518:	str	w0, [sp, #60]
  40251c:	str	x1, [sp, #48]
  402520:	str	x2, [sp, #40]
  402524:	str	x3, [sp, #32]
  402528:	mov	w0, #0x1                   	// #1
  40252c:	add	x1, sp, #0x4, lsl #12
  402530:	strb	w0, [x1, #287]
  402534:	ldr	x0, [sp, #48]
  402538:	cmp	x0, #0x0
  40253c:	b.ne	402550 <ferror@plt+0x870>  // b.any
  402540:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  402544:	add	x0, x0, #0x990
  402548:	bl	401cb0 <gettext@plt>
  40254c:	b	402554 <ferror@plt+0x874>
  402550:	ldr	x0, [sp, #48]
  402554:	str	x0, [sp, #16520]
  402558:	str	xzr, [sp, #16616]
  40255c:	ldr	x0, [sp, #16616]
  402560:	str	x0, [sp, #16624]
  402564:	ldr	x0, [sp, #16624]
  402568:	str	x0, [sp, #16632]
  40256c:	ldr	x0, [sp, #16632]
  402570:	str	x0, [sp, #16640]
  402574:	ldr	x0, [sp, #16640]
  402578:	str	x0, [sp, #16648]
  40257c:	bl	401bb0 <__ctype_get_mb_cur_max@plt>
  402580:	cmp	x0, #0x1
  402584:	b.ls	4025b4 <ferror@plt+0x8d4>  // b.plast
  402588:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  40258c:	add	x0, x0, #0x303
  402590:	ldrb	w0, [x0]
  402594:	add	x1, sp, #0x4, lsl #12
  402598:	strb	w0, [x1, #231]
  40259c:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  4025a0:	add	x0, x0, #0x302
  4025a4:	ldrb	w0, [x0]
  4025a8:	add	x1, sp, #0x4, lsl #12
  4025ac:	strb	w0, [x1, #230]
  4025b0:	b	40260c <ferror@plt+0x92c>
  4025b4:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  4025b8:	add	x0, x0, #0x303
  4025bc:	ldrb	w0, [x0]
  4025c0:	cmp	w0, #0x0
  4025c4:	b.ne	4025dc <ferror@plt+0x8fc>  // b.any
  4025c8:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  4025cc:	add	x0, x0, #0x302
  4025d0:	ldrb	w0, [x0]
  4025d4:	cmp	w0, #0x0
  4025d8:	b.eq	4025e4 <ferror@plt+0x904>  // b.none
  4025dc:	mov	w0, #0x1                   	// #1
  4025e0:	b	4025e8 <ferror@plt+0x908>
  4025e4:	mov	w0, #0x0                   	// #0
  4025e8:	add	x1, sp, #0x4, lsl #12
  4025ec:	strb	w0, [x1, #231]
  4025f0:	add	x0, sp, #0x4, lsl #12
  4025f4:	ldrb	w0, [x0, #231]
  4025f8:	and	w0, w0, #0x1
  4025fc:	add	x1, sp, #0x4, lsl #12
  402600:	strb	w0, [x1, #231]
  402604:	add	x0, sp, #0x4, lsl #12
  402608:	strb	wzr, [x0, #230]
  40260c:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  402610:	add	x0, x0, #0x301
  402614:	ldrb	w0, [x0]
  402618:	cmp	w0, #0x0
  40261c:	b.ne	402634 <ferror@plt+0x954>  // b.any
  402620:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  402624:	add	x0, x0, #0x304
  402628:	ldrb	w0, [x0]
  40262c:	cmp	w0, #0x0
  402630:	b.eq	40263c <ferror@plt+0x95c>  // b.none
  402634:	mov	w0, #0x1                   	// #1
  402638:	b	402640 <ferror@plt+0x960>
  40263c:	mov	w0, #0x0                   	// #0
  402640:	add	x1, sp, #0x4, lsl #12
  402644:	strb	w0, [x1, #135]
  402648:	add	x0, sp, #0x4, lsl #12
  40264c:	ldrb	w0, [x0, #135]
  402650:	and	w0, w0, #0x1
  402654:	add	x1, sp, #0x4, lsl #12
  402658:	strb	w0, [x1, #135]
  40265c:	add	x0, sp, #0x4, lsl #12
  402660:	ldrb	w0, [x0, #231]
  402664:	eor	w0, w0, #0x1
  402668:	and	w0, w0, #0xff
  40266c:	cmp	w0, #0x0
  402670:	b.ne	4026a8 <ferror@plt+0x9c8>  // b.any
  402674:	add	x0, sp, #0x4, lsl #12
  402678:	ldrb	w0, [x0, #230]
  40267c:	cmp	w0, #0x0
  402680:	b.ne	4026a8 <ferror@plt+0x9c8>  // b.any
  402684:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  402688:	add	x0, x0, #0x300
  40268c:	ldrb	w0, [x0]
  402690:	cmp	w0, #0x0
  402694:	b.ne	4026a8 <ferror@plt+0x9c8>  // b.any
  402698:	add	x0, sp, #0x4, lsl #12
  40269c:	ldrb	w0, [x0, #135]
  4026a0:	cmp	w0, #0x0
  4026a4:	b.eq	4026bc <ferror@plt+0x9dc>  // b.none
  4026a8:	mov	w3, #0x2                   	// #2
  4026ac:	mov	x2, #0x0                   	// #0
  4026b0:	mov	x1, #0x0                   	// #0
  4026b4:	ldr	w0, [sp, #60]
  4026b8:	bl	4045bc <ferror@plt+0x28dc>
  4026bc:	add	x0, sp, #0x4, lsl #12
  4026c0:	ldrb	w0, [x0, #231]
  4026c4:	cmp	w0, #0x0
  4026c8:	b.eq	40295c <ferror@plt+0xc7c>  // b.none
  4026cc:	add	x0, sp, #0x4, lsl #12
  4026d0:	ldrb	w0, [x0, #230]
  4026d4:	eor	w0, w0, #0x1
  4026d8:	and	w0, w0, #0xff
  4026dc:	cmp	w0, #0x0
  4026e0:	b.eq	40295c <ferror@plt+0xc7c>  // b.none
  4026e4:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  4026e8:	add	x0, x0, #0x300
  4026ec:	ldrb	w0, [x0]
  4026f0:	eor	w0, w0, #0x1
  4026f4:	and	w0, w0, #0xff
  4026f8:	cmp	w0, #0x0
  4026fc:	b.eq	40295c <ferror@plt+0xc7c>  // b.none
  402700:	add	x0, sp, #0x4, lsl #12
  402704:	ldrb	w0, [x0, #135]
  402708:	eor	w0, w0, #0x1
  40270c:	and	w0, w0, #0xff
  402710:	cmp	w0, #0x0
  402714:	b.eq	40295c <ferror@plt+0xc7c>  // b.none
  402718:	add	x0, sp, #0x4, lsl #12
  40271c:	strb	wzr, [x0, #229]
  402720:	ldr	x0, [sp, #40]
  402724:	ldr	w0, [x0]
  402728:	cmp	w0, #0x0
  40272c:	b.le	402750 <ferror@plt+0xa70>
  402730:	ldr	x0, [sp, #40]
  402734:	add	x0, x0, #0x8
  402738:	mov	x1, x0
  40273c:	ldr	w0, [sp, #60]
  402740:	bl	4091a0 <_obstack_memory_used@@Base+0x760>
  402744:	mov	w1, w0
  402748:	ldr	x0, [sp, #40]
  40274c:	str	w1, [x0]
  402750:	ldr	x0, [sp, #40]
  402754:	ldr	w0, [x0]
  402758:	cmp	w0, #0x0
  40275c:	b.ne	4028a8 <ferror@plt+0xbc8>  // b.any
  402760:	ldr	x0, [sp, #40]
  402764:	add	x0, x0, #0x8
  402768:	bl	4020bc <ferror@plt+0x3dc>
  40276c:	and	w0, w0, #0xff
  402770:	cmp	w0, #0x0
  402774:	b.eq	4028a8 <ferror@plt+0xbc8>  // b.none
  402778:	ldr	x0, [sp, #40]
  40277c:	ldr	x0, [x0, #56]
  402780:	cmp	x0, #0x0
  402784:	b.lt	4028a8 <ferror@plt+0xbc8>  // b.tstop
  402788:	ldr	x0, [sp, #40]
  40278c:	ldr	x0, [x0, #56]
  402790:	str	x0, [sp, #16504]
  402794:	ldr	x0, [sp, #32]
  402798:	cmp	x0, #0x0
  40279c:	b.ge	4027b4 <ferror@plt+0xad4>  // b.tcont
  4027a0:	mov	w2, #0x1                   	// #1
  4027a4:	mov	x1, #0x0                   	// #0
  4027a8:	ldr	w0, [sp, #60]
  4027ac:	bl	401980 <lseek@plt>
  4027b0:	str	x0, [sp, #32]
  4027b4:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  4027b8:	add	x0, x0, #0x310
  4027bc:	ldr	x1, [x0]
  4027c0:	ldr	x0, [sp, #16504]
  4027c4:	udiv	x2, x0, x1
  4027c8:	mul	x1, x2, x1
  4027cc:	sub	x0, x0, x1
  4027d0:	cmp	x0, #0x0
  4027d4:	b.eq	402810 <ferror@plt+0xb30>  // b.none
  4027d8:	ldr	x0, [sp, #32]
  4027dc:	ldr	x1, [sp, #16504]
  4027e0:	cmp	x1, x0
  4027e4:	b.cc	4027f8 <ferror@plt+0xb18>  // b.lo, b.ul, b.last
  4027e8:	ldr	x0, [sp, #32]
  4027ec:	ldr	x1, [sp, #16504]
  4027f0:	sub	x0, x1, x0
  4027f4:	b	4027fc <ferror@plt+0xb1c>
  4027f8:	mov	x0, #0x0                   	// #0
  4027fc:	str	x0, [sp, #16624]
  402800:	mov	w0, #0x1                   	// #1
  402804:	add	x1, sp, #0x4, lsl #12
  402808:	strb	w0, [x1, #229]
  40280c:	b	4028a8 <ferror@plt+0xbc8>
  402810:	ldr	x0, [sp, #40]
  402814:	ldr	w0, [x0, #64]
  402818:	cmp	w0, #0x0
  40281c:	b.le	402844 <ferror@plt+0xb64>
  402820:	ldr	x0, [sp, #40]
  402824:	ldr	w0, [x0, #64]
  402828:	cmp	w0, #0x0
  40282c:	b.lt	402844 <ferror@plt+0xb64>  // b.tstop
  402830:	ldr	x0, [sp, #40]
  402834:	ldr	w0, [x0, #64]
  402838:	add	w0, w0, #0x1
  40283c:	sxtw	x0, w0
  402840:	b	402848 <ferror@plt+0xb68>
  402844:	mov	x0, #0x201                 	// #513
  402848:	ldr	x1, [sp, #16504]
  40284c:	udiv	x2, x1, x0
  402850:	mul	x0, x2, x0
  402854:	sub	x0, x1, x0
  402858:	ldr	x1, [sp, #16504]
  40285c:	sub	x0, x1, x0
  402860:	str	x0, [sp, #16496]
  402864:	ldr	x0, [sp, #32]
  402868:	cmp	x0, #0x0
  40286c:	b.lt	4028a8 <ferror@plt+0xbc8>  // b.tstop
  402870:	ldr	x1, [sp, #32]
  402874:	ldr	x0, [sp, #16496]
  402878:	cmp	x1, x0
  40287c:	b.ge	4028a8 <ferror@plt+0xbc8>  // b.tcont
  402880:	mov	w2, #0x1                   	// #1
  402884:	ldr	x1, [sp, #16496]
  402888:	ldr	w0, [sp, #60]
  40288c:	bl	401980 <lseek@plt>
  402890:	cmp	x0, #0x0
  402894:	b.lt	4028a8 <ferror@plt+0xbc8>  // b.tstop
  402898:	ldr	x1, [sp, #16496]
  40289c:	ldr	x0, [sp, #32]
  4028a0:	sub	x0, x1, x0
  4028a4:	str	x0, [sp, #16624]
  4028a8:	add	x0, sp, #0x4, lsl #12
  4028ac:	ldrb	w0, [x0, #229]
  4028b0:	eor	w0, w0, #0x1
  4028b4:	and	w0, w0, #0xff
  4028b8:	cmp	w0, #0x0
  4028bc:	b.eq	4031dc <ferror@plt+0x14fc>  // b.none
  4028c0:	mov	w3, #0x2                   	// #2
  4028c4:	mov	x2, #0x0                   	// #0
  4028c8:	mov	x1, #0x0                   	// #0
  4028cc:	ldr	w0, [sp, #60]
  4028d0:	bl	4045bc <ferror@plt+0x28dc>
  4028d4:	b	402934 <ferror@plt+0xc54>
  4028d8:	ldr	x0, [sp, #16656]
  4028dc:	cmn	x0, #0x1
  4028e0:	b.ne	402924 <ferror@plt+0xc44>  // b.any
  4028e4:	bl	401c80 <__errno_location@plt>
  4028e8:	ldr	w19, [x0]
  4028ec:	ldr	x2, [sp, #16520]
  4028f0:	mov	w1, #0x3                   	// #3
  4028f4:	mov	w0, #0x0                   	// #0
  4028f8:	bl	406a48 <ferror@plt+0x4d68>
  4028fc:	mov	x3, x0
  402900:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  402904:	add	x2, x0, #0x9a0
  402908:	mov	w1, w19
  40290c:	mov	w0, #0x0                   	// #0
  402910:	bl	401920 <error@plt>
  402914:	add	x0, sp, #0x4, lsl #12
  402918:	strb	wzr, [x0, #287]
  40291c:	nop
  402920:	b	4031dc <ferror@plt+0x14fc>
  402924:	ldr	x1, [sp, #16624]
  402928:	ldr	x0, [sp, #16656]
  40292c:	add	x0, x1, x0
  402930:	str	x0, [sp, #16624]
  402934:	add	x0, sp, #0x58
  402938:	mov	x2, #0x4000                	// #16384
  40293c:	mov	x1, x0
  402940:	ldr	w0, [sp, #60]
  402944:	bl	4073d0 <ferror@plt+0x56f0>
  402948:	str	x0, [sp, #16656]
  40294c:	ldr	x0, [sp, #16656]
  402950:	cmp	x0, #0x0
  402954:	b.ne	4028d8 <ferror@plt+0xbf8>  // b.any
  402958:	b	4031dc <ferror@plt+0x14fc>
  40295c:	add	x0, sp, #0x4, lsl #12
  402960:	ldrb	w0, [x0, #230]
  402964:	eor	w0, w0, #0x1
  402968:	and	w0, w0, #0xff
  40296c:	cmp	w0, #0x0
  402970:	b.eq	402b1c <ferror@plt+0xe3c>  // b.none
  402974:	add	x0, sp, #0x4, lsl #12
  402978:	ldrb	w0, [x0, #135]
  40297c:	eor	w0, w0, #0x1
  402980:	and	w0, w0, #0xff
  402984:	cmp	w0, #0x0
  402988:	b.eq	402b1c <ferror@plt+0xe3c>  // b.none
  40298c:	add	x0, sp, #0x4, lsl #12
  402990:	strb	wzr, [x0, #228]
  402994:	b	402af4 <ferror@plt+0xe14>
  402998:	ldr	x0, [sp, #16656]
  40299c:	cmn	x0, #0x1
  4029a0:	b.ne	4029e4 <ferror@plt+0xd04>  // b.any
  4029a4:	bl	401c80 <__errno_location@plt>
  4029a8:	ldr	w19, [x0]
  4029ac:	ldr	x2, [sp, #16520]
  4029b0:	mov	w1, #0x3                   	// #3
  4029b4:	mov	w0, #0x0                   	// #0
  4029b8:	bl	406a48 <ferror@plt+0x4d68>
  4029bc:	mov	x3, x0
  4029c0:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  4029c4:	add	x2, x0, #0x9a0
  4029c8:	mov	w1, w19
  4029cc:	mov	w0, #0x0                   	// #0
  4029d0:	bl	401920 <error@plt>
  4029d4:	add	x0, sp, #0x4, lsl #12
  4029d8:	strb	wzr, [x0, #287]
  4029dc:	nop
  4029e0:	b	4031e0 <ferror@plt+0x1500>
  4029e4:	ldr	x1, [sp, #16624]
  4029e8:	ldr	x0, [sp, #16656]
  4029ec:	add	x0, x1, x0
  4029f0:	str	x0, [sp, #16624]
  4029f4:	add	x0, sp, #0x58
  4029f8:	str	x0, [sp, #16600]
  4029fc:	ldr	x1, [sp, #16600]
  402a00:	ldr	x0, [sp, #16656]
  402a04:	add	x0, x1, x0
  402a08:	str	x0, [sp, #16488]
  402a0c:	ldr	x0, [sp, #16648]
  402a10:	str	x0, [sp, #16480]
  402a14:	add	x0, sp, #0x4, lsl #12
  402a18:	ldrb	w0, [x0, #228]
  402a1c:	eor	w0, w0, #0x1
  402a20:	and	w0, w0, #0xff
  402a24:	cmp	w0, #0x0
  402a28:	b.eq	402a88 <ferror@plt+0xda8>  // b.none
  402a2c:	b	402a5c <ferror@plt+0xd7c>
  402a30:	ldr	x0, [sp, #16600]
  402a34:	add	x1, x0, #0x1
  402a38:	str	x1, [sp, #16600]
  402a3c:	ldrb	w0, [x0]
  402a40:	cmp	w0, #0xa
  402a44:	cset	w0, eq  // eq = none
  402a48:	and	w0, w0, #0xff
  402a4c:	sxtw	x0, w0
  402a50:	ldr	x1, [sp, #16648]
  402a54:	add	x0, x1, x0
  402a58:	str	x0, [sp, #16648]
  402a5c:	ldr	x1, [sp, #16600]
  402a60:	ldr	x0, [sp, #16488]
  402a64:	cmp	x1, x0
  402a68:	b.ne	402a30 <ferror@plt+0xd50>  // b.any
  402a6c:	b	402ab4 <ferror@plt+0xdd4>
  402a70:	ldr	x0, [sp, #16600]
  402a74:	add	x0, x0, #0x1
  402a78:	str	x0, [sp, #16600]
  402a7c:	ldr	x0, [sp, #16648]
  402a80:	add	x0, x0, #0x1
  402a84:	str	x0, [sp, #16648]
  402a88:	ldr	x1, [sp, #16488]
  402a8c:	ldr	x0, [sp, #16600]
  402a90:	sub	x0, x1, x0
  402a94:	mov	x2, x0
  402a98:	mov	w1, #0xa                   	// #10
  402a9c:	ldr	x0, [sp, #16600]
  402aa0:	bl	401c00 <memchr@plt>
  402aa4:	str	x0, [sp, #16600]
  402aa8:	ldr	x0, [sp, #16600]
  402aac:	cmp	x0, #0x0
  402ab0:	b.ne	402a70 <ferror@plt+0xd90>  // b.any
  402ab4:	ldr	x1, [sp, #16648]
  402ab8:	ldr	x0, [sp, #16480]
  402abc:	sub	x1, x1, x0
  402ac0:	ldr	x2, [sp, #16656]
  402ac4:	mov	x0, #0x8888888888888888    	// #-8608480567731124088
  402ac8:	movk	x0, #0x8889
  402acc:	umulh	x0, x2, x0
  402ad0:	lsr	x0, x0, #3
  402ad4:	cmp	x1, x0
  402ad8:	b.hi	402aec <ferror@plt+0xe0c>  // b.pmore
  402adc:	mov	w0, #0x1                   	// #1
  402ae0:	add	x1, sp, #0x4, lsl #12
  402ae4:	strb	w0, [x1, #228]
  402ae8:	b	402af4 <ferror@plt+0xe14>
  402aec:	add	x0, sp, #0x4, lsl #12
  402af0:	strb	wzr, [x0, #228]
  402af4:	add	x0, sp, #0x58
  402af8:	mov	x2, #0x4000                	// #16384
  402afc:	mov	x1, x0
  402b00:	ldr	w0, [sp, #60]
  402b04:	bl	4073d0 <ferror@plt+0x56f0>
  402b08:	str	x0, [sp, #16656]
  402b0c:	ldr	x0, [sp, #16656]
  402b10:	cmp	x0, #0x0
  402b14:	b.ne	402998 <ferror@plt+0xcb8>  // b.any
  402b18:	b	4031e0 <ferror@plt+0x1500>
  402b1c:	bl	401bb0 <__ctype_get_mb_cur_max@plt>
  402b20:	cmp	x0, #0x1
  402b24:	b.ls	402f90 <ferror@plt+0x12b0>  // b.plast
  402b28:	add	x0, sp, #0x4, lsl #12
  402b2c:	strb	wzr, [x0, #215]
  402b30:	str	xzr, [sp, #16584]
  402b34:	str	xzr, [sp, #80]
  402b38:	add	x0, sp, #0x4, lsl #12
  402b3c:	strb	wzr, [x0, #199]
  402b40:	str	xzr, [sp, #16568]
  402b44:	b	402f28 <ferror@plt+0x1248>
  402b48:	ldr	x0, [sp, #16656]
  402b4c:	cmn	x0, #0x1
  402b50:	b.ne	402b90 <ferror@plt+0xeb0>  // b.any
  402b54:	bl	401c80 <__errno_location@plt>
  402b58:	ldr	w19, [x0]
  402b5c:	ldr	x2, [sp, #16520]
  402b60:	mov	w1, #0x3                   	// #3
  402b64:	mov	w0, #0x0                   	// #0
  402b68:	bl	406a48 <ferror@plt+0x4d68>
  402b6c:	mov	x3, x0
  402b70:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  402b74:	add	x2, x0, #0x9a0
  402b78:	mov	w1, w19
  402b7c:	mov	w0, #0x0                   	// #0
  402b80:	bl	401920 <error@plt>
  402b84:	add	x0, sp, #0x4, lsl #12
  402b88:	strb	wzr, [x0, #287]
  402b8c:	b	402f60 <ferror@plt+0x1280>
  402b90:	ldr	x1, [sp, #16624]
  402b94:	ldr	x0, [sp, #16656]
  402b98:	add	x0, x1, x0
  402b9c:	str	x0, [sp, #16624]
  402ba0:	add	x0, sp, #0x58
  402ba4:	str	x0, [sp, #16560]
  402ba8:	ldr	x1, [sp, #16656]
  402bac:	ldr	x0, [sp, #16568]
  402bb0:	add	x0, x1, x0
  402bb4:	str	x0, [sp, #16656]
  402bb8:	mov	w0, #0x1                   	// #1
  402bbc:	add	x1, sp, #0x4, lsl #12
  402bc0:	strb	w0, [x1, #167]
  402bc4:	add	x0, sp, #0x4, lsl #12
  402bc8:	ldrb	w0, [x0, #199]
  402bcc:	eor	w0, w0, #0x1
  402bd0:	and	w0, w0, #0xff
  402bd4:	cmp	w0, #0x0
  402bd8:	b.eq	402c14 <ferror@plt+0xf34>  // b.none
  402bdc:	ldr	x0, [sp, #16560]
  402be0:	ldrb	w0, [x0]
  402be4:	bl	4047d8 <ferror@plt+0x2af8>
  402be8:	and	w0, w0, #0xff
  402bec:	cmp	w0, #0x0
  402bf0:	b.eq	402c14 <ferror@plt+0xf34>  // b.none
  402bf4:	mov	x0, #0x1                   	// #1
  402bf8:	str	x0, [sp, #16552]
  402bfc:	ldr	x0, [sp, #16560]
  402c00:	ldrb	w0, [x0]
  402c04:	str	w0, [sp, #68]
  402c08:	add	x0, sp, #0x4, lsl #12
  402c0c:	strb	wzr, [x0, #167]
  402c10:	b	402cb4 <ferror@plt+0xfd4>
  402c14:	mov	w0, #0x1                   	// #1
  402c18:	add	x1, sp, #0x4, lsl #12
  402c1c:	strb	w0, [x1, #199]
  402c20:	ldr	x0, [sp, #80]
  402c24:	str	x0, [sp, #72]
  402c28:	add	x1, sp, #0x50
  402c2c:	add	x0, sp, #0x44
  402c30:	mov	x3, x1
  402c34:	ldr	x2, [sp, #16656]
  402c38:	ldr	x1, [sp, #16560]
  402c3c:	bl	408348 <ferror@plt+0x6668>
  402c40:	str	x0, [sp, #16552]
  402c44:	ldr	x0, [sp, #16552]
  402c48:	cmn	x0, #0x2
  402c4c:	b.ne	402c5c <ferror@plt+0xf7c>  // b.any
  402c50:	ldr	x0, [sp, #72]
  402c54:	str	x0, [sp, #80]
  402c58:	b	402ee0 <ferror@plt+0x1200>
  402c5c:	ldr	x0, [sp, #16552]
  402c60:	cmn	x0, #0x1
  402c64:	b.ne	402c84 <ferror@plt+0xfa4>  // b.any
  402c68:	ldr	x0, [sp, #16560]
  402c6c:	add	x0, x0, #0x1
  402c70:	str	x0, [sp, #16560]
  402c74:	ldr	x0, [sp, #16656]
  402c78:	sub	x0, x0, #0x1
  402c7c:	str	x0, [sp, #16656]
  402c80:	b	402ed4 <ferror@plt+0x11f4>
  402c84:	add	x0, sp, #0x50
  402c88:	bl	401b20 <mbsinit@plt>
  402c8c:	cmp	w0, #0x0
  402c90:	b.eq	402c9c <ferror@plt+0xfbc>  // b.none
  402c94:	add	x0, sp, #0x4, lsl #12
  402c98:	strb	wzr, [x0, #199]
  402c9c:	ldr	x0, [sp, #16552]
  402ca0:	cmp	x0, #0x0
  402ca4:	b.ne	402cb4 <ferror@plt+0xfd4>  // b.any
  402ca8:	str	wzr, [sp, #68]
  402cac:	mov	x0, #0x1                   	// #1
  402cb0:	str	x0, [sp, #16552]
  402cb4:	ldr	w0, [sp, #68]
  402cb8:	cmp	w0, #0x20
  402cbc:	b.eq	402d38 <ferror@plt+0x1058>  // b.none
  402cc0:	cmp	w0, #0x20
  402cc4:	b.hi	402d74 <ferror@plt+0x1094>  // b.pmore
  402cc8:	cmp	w0, #0xd
  402ccc:	b.hi	402d74 <ferror@plt+0x1094>  // b.pmore
  402cd0:	cmp	w0, #0xc
  402cd4:	b.cs	402d04 <ferror@plt+0x1024>  // b.hs, b.nlast
  402cd8:	cmp	w0, #0xb
  402cdc:	b.eq	402d54 <ferror@plt+0x1074>  // b.none
  402ce0:	cmp	w0, #0xb
  402ce4:	b.hi	402d74 <ferror@plt+0x1094>  // b.pmore
  402ce8:	cmp	w0, #0x9
  402cec:	b.eq	402d24 <ferror@plt+0x1044>  // b.none
  402cf0:	cmp	w0, #0xa
  402cf4:	b.ne	402d74 <ferror@plt+0x1094>  // b.any
  402cf8:	ldr	x0, [sp, #16648]
  402cfc:	add	x0, x0, #0x1
  402d00:	str	x0, [sp, #16648]
  402d04:	ldr	x1, [sp, #16584]
  402d08:	ldr	x0, [sp, #16616]
  402d0c:	cmp	x1, x0
  402d10:	b.ls	402d1c <ferror@plt+0x103c>  // b.plast
  402d14:	ldr	x0, [sp, #16584]
  402d18:	str	x0, [sp, #16616]
  402d1c:	str	xzr, [sp, #16584]
  402d20:	b	402d54 <ferror@plt+0x1074>
  402d24:	ldr	x0, [sp, #16584]
  402d28:	and	x0, x0, #0xfffffffffffffff8
  402d2c:	add	x0, x0, #0x8
  402d30:	str	x0, [sp, #16584]
  402d34:	b	402d54 <ferror@plt+0x1074>
  402d38:	ldr	x0, [sp, #16584]
  402d3c:	add	x0, x0, #0x1
  402d40:	str	x0, [sp, #16584]
  402d44:	b	402d54 <ferror@plt+0x1074>
  402d48:	nop
  402d4c:	b	402d54 <ferror@plt+0x1074>
  402d50:	nop
  402d54:	add	x0, sp, #0x4, lsl #12
  402d58:	ldrb	w0, [x0, #215]
  402d5c:	ldr	x1, [sp, #16640]
  402d60:	add	x0, x1, x0
  402d64:	str	x0, [sp, #16640]
  402d68:	add	x0, sp, #0x4, lsl #12
  402d6c:	strb	wzr, [x0, #215]
  402d70:	b	402ea8 <ferror@plt+0x11c8>
  402d74:	add	x0, sp, #0x4, lsl #12
  402d78:	ldrb	w0, [x0, #167]
  402d7c:	cmp	w0, #0x0
  402d80:	b.eq	402e0c <ferror@plt+0x112c>  // b.none
  402d84:	ldr	w0, [sp, #68]
  402d88:	bl	401c50 <iswprint@plt>
  402d8c:	cmp	w0, #0x0
  402d90:	b.eq	402e0c <ferror@plt+0x112c>  // b.none
  402d94:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  402d98:	add	x0, x0, #0x304
  402d9c:	ldrb	w0, [x0]
  402da0:	cmp	w0, #0x0
  402da4:	b.eq	402ddc <ferror@plt+0x10fc>  // b.none
  402da8:	ldr	w0, [sp, #68]
  402dac:	bl	401a00 <wcwidth@plt>
  402db0:	add	x1, sp, #0x4, lsl #12
  402db4:	str	w0, [x1, #92]
  402db8:	add	x0, sp, #0x4, lsl #12
  402dbc:	ldr	w0, [x0, #92]
  402dc0:	cmp	w0, #0x0
  402dc4:	b.le	402ddc <ferror@plt+0x10fc>
  402dc8:	add	x0, sp, #0x4, lsl #12
  402dcc:	ldrsw	x0, [x0, #92]
  402dd0:	ldr	x1, [sp, #16584]
  402dd4:	add	x0, x1, x0
  402dd8:	str	x0, [sp, #16584]
  402ddc:	ldr	w0, [sp, #68]
  402de0:	bl	4019c0 <iswspace@plt>
  402de4:	cmp	w0, #0x0
  402de8:	b.ne	402d48 <ferror@plt+0x1068>  // b.any
  402dec:	ldr	w0, [sp, #68]
  402df0:	bl	402270 <ferror@plt+0x590>
  402df4:	cmp	w0, #0x0
  402df8:	b.ne	402d48 <ferror@plt+0x1068>  // b.any
  402dfc:	mov	w0, #0x1                   	// #1
  402e00:	add	x1, sp, #0x4, lsl #12
  402e04:	strb	w0, [x1, #215]
  402e08:	b	402ea4 <ferror@plt+0x11c4>
  402e0c:	add	x0, sp, #0x4, lsl #12
  402e10:	ldrb	w0, [x0, #167]
  402e14:	eor	w0, w0, #0x1
  402e18:	and	w0, w0, #0xff
  402e1c:	cmp	w0, #0x0
  402e20:	b.eq	402ea4 <ferror@plt+0x11c4>  // b.none
  402e24:	bl	401b80 <__ctype_b_loc@plt>
  402e28:	ldr	x19, [x0]
  402e2c:	ldr	x0, [sp, #16560]
  402e30:	ldrb	w0, [x0]
  402e34:	bl	401eb8 <ferror@plt+0x1d8>
  402e38:	and	w0, w0, #0xff
  402e3c:	and	x0, x0, #0xff
  402e40:	lsl	x0, x0, #1
  402e44:	add	x0, x19, x0
  402e48:	ldrh	w0, [x0]
  402e4c:	and	w0, w0, #0x4000
  402e50:	cmp	w0, #0x0
  402e54:	b.eq	402ea4 <ferror@plt+0x11c4>  // b.none
  402e58:	ldr	x0, [sp, #16584]
  402e5c:	add	x0, x0, #0x1
  402e60:	str	x0, [sp, #16584]
  402e64:	bl	401b80 <__ctype_b_loc@plt>
  402e68:	ldr	x19, [x0]
  402e6c:	ldr	x0, [sp, #16560]
  402e70:	ldrb	w0, [x0]
  402e74:	bl	401eb8 <ferror@plt+0x1d8>
  402e78:	and	w0, w0, #0xff
  402e7c:	and	x0, x0, #0xff
  402e80:	lsl	x0, x0, #1
  402e84:	add	x0, x19, x0
  402e88:	ldrh	w0, [x0]
  402e8c:	and	w0, w0, #0x2000
  402e90:	cmp	w0, #0x0
  402e94:	b.ne	402d50 <ferror@plt+0x1070>  // b.any
  402e98:	mov	w0, #0x1                   	// #1
  402e9c:	add	x1, sp, #0x4, lsl #12
  402ea0:	strb	w0, [x1, #215]
  402ea4:	nop
  402ea8:	ldr	x1, [sp, #16560]
  402eac:	ldr	x0, [sp, #16552]
  402eb0:	add	x0, x1, x0
  402eb4:	str	x0, [sp, #16560]
  402eb8:	ldr	x1, [sp, #16656]
  402ebc:	ldr	x0, [sp, #16552]
  402ec0:	sub	x0, x1, x0
  402ec4:	str	x0, [sp, #16656]
  402ec8:	ldr	x0, [sp, #16632]
  402ecc:	add	x0, x0, #0x1
  402ed0:	str	x0, [sp, #16632]
  402ed4:	ldr	x0, [sp, #16656]
  402ed8:	cmp	x0, #0x0
  402edc:	b.ne	402bb8 <ferror@plt+0xed8>  // b.any
  402ee0:	ldr	x0, [sp, #16656]
  402ee4:	cmp	x0, #0x0
  402ee8:	b.eq	402f20 <ferror@plt+0x1240>  // b.none
  402eec:	ldr	x0, [sp, #16656]
  402ef0:	cmp	x0, #0x4, lsl #12
  402ef4:	b.ne	402f10 <ferror@plt+0x1230>  // b.any
  402ef8:	ldr	x0, [sp, #16560]
  402efc:	add	x0, x0, #0x1
  402f00:	str	x0, [sp, #16560]
  402f04:	ldr	x0, [sp, #16656]
  402f08:	sub	x0, x0, #0x1
  402f0c:	str	x0, [sp, #16656]
  402f10:	add	x0, sp, #0x58
  402f14:	ldr	x2, [sp, #16656]
  402f18:	ldr	x1, [sp, #16560]
  402f1c:	bl	4018e0 <memmove@plt>
  402f20:	ldr	x0, [sp, #16656]
  402f24:	str	x0, [sp, #16568]
  402f28:	add	x1, sp, #0x58
  402f2c:	ldr	x0, [sp, #16568]
  402f30:	add	x3, x1, x0
  402f34:	mov	x1, #0x4000                	// #16384
  402f38:	ldr	x0, [sp, #16568]
  402f3c:	sub	x0, x1, x0
  402f40:	mov	x2, x0
  402f44:	mov	x1, x3
  402f48:	ldr	w0, [sp, #60]
  402f4c:	bl	4073d0 <ferror@plt+0x56f0>
  402f50:	str	x0, [sp, #16656]
  402f54:	ldr	x0, [sp, #16656]
  402f58:	cmp	x0, #0x0
  402f5c:	b.ne	402b48 <ferror@plt+0xe68>  // b.any
  402f60:	ldr	x1, [sp, #16584]
  402f64:	ldr	x0, [sp, #16616]
  402f68:	cmp	x1, x0
  402f6c:	b.ls	402f78 <ferror@plt+0x1298>  // b.plast
  402f70:	ldr	x0, [sp, #16584]
  402f74:	str	x0, [sp, #16616]
  402f78:	add	x0, sp, #0x4, lsl #12
  402f7c:	ldrb	w0, [x0, #215]
  402f80:	ldr	x1, [sp, #16640]
  402f84:	add	x0, x1, x0
  402f88:	str	x0, [sp, #16640]
  402f8c:	b	4031e0 <ferror@plt+0x1500>
  402f90:	add	x0, sp, #0x4, lsl #12
  402f94:	strb	wzr, [x0, #166]
  402f98:	str	xzr, [sp, #16536]
  402f9c:	b	403188 <ferror@plt+0x14a8>
  402fa0:	add	x0, sp, #0x58
  402fa4:	str	x0, [sp, #16528]
  402fa8:	ldr	x0, [sp, #16656]
  402fac:	cmn	x0, #0x1
  402fb0:	b.ne	402ff0 <ferror@plt+0x1310>  // b.any
  402fb4:	bl	401c80 <__errno_location@plt>
  402fb8:	ldr	w19, [x0]
  402fbc:	ldr	x2, [sp, #16520]
  402fc0:	mov	w1, #0x3                   	// #3
  402fc4:	mov	w0, #0x0                   	// #0
  402fc8:	bl	406a48 <ferror@plt+0x4d68>
  402fcc:	mov	x3, x0
  402fd0:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  402fd4:	add	x2, x0, #0x9a0
  402fd8:	mov	w1, w19
  402fdc:	mov	w0, #0x0                   	// #0
  402fe0:	bl	401920 <error@plt>
  402fe4:	add	x0, sp, #0x4, lsl #12
  402fe8:	strb	wzr, [x0, #287]
  402fec:	b	4031ac <ferror@plt+0x14cc>
  402ff0:	ldr	x1, [sp, #16624]
  402ff4:	ldr	x0, [sp, #16656]
  402ff8:	add	x0, x1, x0
  402ffc:	str	x0, [sp, #16624]
  403000:	ldr	x0, [sp, #16528]
  403004:	add	x1, x0, #0x1
  403008:	str	x1, [sp, #16528]
  40300c:	ldrb	w0, [x0]
  403010:	cmp	w0, #0x20
  403014:	b.eq	403090 <ferror@plt+0x13b0>  // b.none
  403018:	cmp	w0, #0x20
  40301c:	b.gt	4030c4 <ferror@plt+0x13e4>
  403020:	cmp	w0, #0xd
  403024:	b.gt	4030c4 <ferror@plt+0x13e4>
  403028:	cmp	w0, #0xc
  40302c:	b.ge	40305c <ferror@plt+0x137c>  // b.tcont
  403030:	cmp	w0, #0xb
  403034:	b.eq	4030a4 <ferror@plt+0x13c4>  // b.none
  403038:	cmp	w0, #0xb
  40303c:	b.gt	4030c4 <ferror@plt+0x13e4>
  403040:	cmp	w0, #0x9
  403044:	b.eq	40307c <ferror@plt+0x139c>  // b.none
  403048:	cmp	w0, #0xa
  40304c:	b.ne	4030c4 <ferror@plt+0x13e4>  // b.any
  403050:	ldr	x0, [sp, #16648]
  403054:	add	x0, x0, #0x1
  403058:	str	x0, [sp, #16648]
  40305c:	ldr	x1, [sp, #16536]
  403060:	ldr	x0, [sp, #16616]
  403064:	cmp	x1, x0
  403068:	b.ls	403074 <ferror@plt+0x1394>  // b.plast
  40306c:	ldr	x0, [sp, #16536]
  403070:	str	x0, [sp, #16616]
  403074:	str	xzr, [sp, #16536]
  403078:	b	4030a4 <ferror@plt+0x13c4>
  40307c:	ldr	x0, [sp, #16536]
  403080:	and	x0, x0, #0xfffffffffffffff8
  403084:	add	x0, x0, #0x8
  403088:	str	x0, [sp, #16536]
  40308c:	b	4030a4 <ferror@plt+0x13c4>
  403090:	ldr	x0, [sp, #16536]
  403094:	add	x0, x0, #0x1
  403098:	str	x0, [sp, #16536]
  40309c:	b	4030a4 <ferror@plt+0x13c4>
  4030a0:	nop
  4030a4:	add	x0, sp, #0x4, lsl #12
  4030a8:	ldrb	w0, [x0, #166]
  4030ac:	ldr	x1, [sp, #16640]
  4030b0:	add	x0, x1, x0
  4030b4:	str	x0, [sp, #16640]
  4030b8:	add	x0, sp, #0x4, lsl #12
  4030bc:	strb	wzr, [x0, #166]
  4030c0:	b	403170 <ferror@plt+0x1490>
  4030c4:	bl	401b80 <__ctype_b_loc@plt>
  4030c8:	ldr	x19, [x0]
  4030cc:	ldr	x0, [sp, #16528]
  4030d0:	sub	x0, x0, #0x1
  4030d4:	ldrb	w0, [x0]
  4030d8:	bl	401eb8 <ferror@plt+0x1d8>
  4030dc:	and	w0, w0, #0xff
  4030e0:	and	x0, x0, #0xff
  4030e4:	lsl	x0, x0, #1
  4030e8:	add	x0, x19, x0
  4030ec:	ldrh	w0, [x0]
  4030f0:	and	w0, w0, #0x4000
  4030f4:	cmp	w0, #0x0
  4030f8:	b.eq	40316c <ferror@plt+0x148c>  // b.none
  4030fc:	ldr	x0, [sp, #16536]
  403100:	add	x0, x0, #0x1
  403104:	str	x0, [sp, #16536]
  403108:	bl	401b80 <__ctype_b_loc@plt>
  40310c:	ldr	x19, [x0]
  403110:	ldr	x0, [sp, #16528]
  403114:	sub	x0, x0, #0x1
  403118:	ldrb	w0, [x0]
  40311c:	bl	401eb8 <ferror@plt+0x1d8>
  403120:	and	w0, w0, #0xff
  403124:	and	x0, x0, #0xff
  403128:	lsl	x0, x0, #1
  40312c:	add	x0, x19, x0
  403130:	ldrh	w0, [x0]
  403134:	and	w0, w0, #0x2000
  403138:	cmp	w0, #0x0
  40313c:	b.ne	4030a0 <ferror@plt+0x13c0>  // b.any
  403140:	ldr	x0, [sp, #16528]
  403144:	sub	x0, x0, #0x1
  403148:	ldrb	w0, [x0]
  40314c:	bl	401eb8 <ferror@plt+0x1d8>
  403150:	and	w0, w0, #0xff
  403154:	bl	4022e4 <ferror@plt+0x604>
  403158:	cmp	w0, #0x0
  40315c:	b.ne	4030a0 <ferror@plt+0x13c0>  // b.any
  403160:	mov	w0, #0x1                   	// #1
  403164:	add	x1, sp, #0x4, lsl #12
  403168:	strb	w0, [x1, #166]
  40316c:	nop
  403170:	ldr	x0, [sp, #16656]
  403174:	sub	x0, x0, #0x1
  403178:	str	x0, [sp, #16656]
  40317c:	ldr	x0, [sp, #16656]
  403180:	cmp	x0, #0x0
  403184:	b.ne	403000 <ferror@plt+0x1320>  // b.any
  403188:	add	x0, sp, #0x58
  40318c:	mov	x2, #0x4000                	// #16384
  403190:	mov	x1, x0
  403194:	ldr	w0, [sp, #60]
  403198:	bl	4073d0 <ferror@plt+0x56f0>
  40319c:	str	x0, [sp, #16656]
  4031a0:	ldr	x0, [sp, #16656]
  4031a4:	cmp	x0, #0x0
  4031a8:	b.ne	402fa0 <ferror@plt+0x12c0>  // b.any
  4031ac:	ldr	x1, [sp, #16536]
  4031b0:	ldr	x0, [sp, #16616]
  4031b4:	cmp	x1, x0
  4031b8:	b.ls	4031c4 <ferror@plt+0x14e4>  // b.plast
  4031bc:	ldr	x0, [sp, #16536]
  4031c0:	str	x0, [sp, #16616]
  4031c4:	add	x0, sp, #0x4, lsl #12
  4031c8:	ldrb	w0, [x0, #166]
  4031cc:	ldr	x1, [sp, #16640]
  4031d0:	add	x0, x1, x0
  4031d4:	str	x0, [sp, #16640]
  4031d8:	b	4031e0 <ferror@plt+0x1500>
  4031dc:	nop
  4031e0:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  4031e4:	add	x0, x0, #0x302
  4031e8:	ldrb	w0, [x0]
  4031ec:	add	x1, sp, #0x4, lsl #12
  4031f0:	ldrb	w1, [x1, #230]
  4031f4:	cmp	w1, w0
  4031f8:	b.cs	403204 <ferror@plt+0x1524>  // b.hs, b.nlast
  4031fc:	ldr	x0, [sp, #16624]
  403200:	str	x0, [sp, #16632]
  403204:	ldr	x5, [sp, #48]
  403208:	ldr	x4, [sp, #16616]
  40320c:	ldr	x3, [sp, #16624]
  403210:	ldr	x2, [sp, #16632]
  403214:	ldr	x1, [sp, #16640]
  403218:	ldr	x0, [sp, #16648]
  40321c:	bl	402304 <ferror@plt+0x624>
  403220:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403224:	add	x0, x0, #0x2d8
  403228:	ldr	x1, [x0]
  40322c:	ldr	x0, [sp, #16648]
  403230:	add	x1, x1, x0
  403234:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403238:	add	x0, x0, #0x2d8
  40323c:	str	x1, [x0]
  403240:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403244:	add	x0, x0, #0x2e0
  403248:	ldr	x1, [x0]
  40324c:	ldr	x0, [sp, #16640]
  403250:	add	x1, x1, x0
  403254:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403258:	add	x0, x0, #0x2e0
  40325c:	str	x1, [x0]
  403260:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403264:	add	x0, x0, #0x2e8
  403268:	ldr	x1, [x0]
  40326c:	ldr	x0, [sp, #16632]
  403270:	add	x1, x1, x0
  403274:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403278:	add	x0, x0, #0x2e8
  40327c:	str	x1, [x0]
  403280:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403284:	add	x0, x0, #0x2f0
  403288:	ldr	x1, [x0]
  40328c:	ldr	x0, [sp, #16624]
  403290:	add	x1, x1, x0
  403294:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403298:	add	x0, x0, #0x2f0
  40329c:	str	x1, [x0]
  4032a0:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  4032a4:	add	x0, x0, #0x2f8
  4032a8:	ldr	x0, [x0]
  4032ac:	ldr	x1, [sp, #16616]
  4032b0:	cmp	x1, x0
  4032b4:	b.ls	4032c8 <ferror@plt+0x15e8>  // b.plast
  4032b8:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  4032bc:	add	x0, x0, #0x2f8
  4032c0:	ldr	x1, [sp, #16616]
  4032c4:	str	x1, [x0]
  4032c8:	add	x0, sp, #0x4, lsl #12
  4032cc:	ldrb	w0, [x0, #287]
  4032d0:	ldr	x19, [sp, #16]
  4032d4:	ldp	x29, x30, [sp]
  4032d8:	mov	x12, #0x4120                	// #16672
  4032dc:	add	sp, sp, x12
  4032e0:	ret
  4032e4:	stp	x29, x30, [sp, #-64]!
  4032e8:	mov	x29, sp
  4032ec:	str	x19, [sp, #16]
  4032f0:	str	x0, [sp, #40]
  4032f4:	str	x1, [sp, #32]
  4032f8:	ldr	x0, [sp, #40]
  4032fc:	cmp	x0, #0x0
  403300:	b.eq	40331c <ferror@plt+0x163c>  // b.none
  403304:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  403308:	add	x1, x0, #0x9a8
  40330c:	ldr	x0, [sp, #40]
  403310:	bl	401b70 <strcmp@plt>
  403314:	cmp	w0, #0x0
  403318:	b.ne	403354 <ferror@plt+0x1674>  // b.any
  40331c:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403320:	add	x0, x0, #0x30c
  403324:	mov	w1, #0x1                   	// #1
  403328:	strb	w1, [x0]
  40332c:	mov	w1, #0x0                   	// #0
  403330:	mov	w0, #0x0                   	// #0
  403334:	bl	408110 <ferror@plt+0x6430>
  403338:	mov	x3, #0xffffffffffffffff    	// #-1
  40333c:	ldr	x2, [sp, #32]
  403340:	ldr	x1, [sp, #40]
  403344:	mov	w0, #0x0                   	// #0
  403348:	bl	402504 <ferror@plt+0x824>
  40334c:	and	w0, w0, #0xff
  403350:	b	40340c <ferror@plt+0x172c>
  403354:	mov	w1, #0x0                   	// #0
  403358:	ldr	x0, [sp, #40]
  40335c:	bl	401a20 <open@plt>
  403360:	str	w0, [sp, #60]
  403364:	ldr	w0, [sp, #60]
  403368:	cmn	w0, #0x1
  40336c:	b.ne	4033a8 <ferror@plt+0x16c8>  // b.any
  403370:	bl	401c80 <__errno_location@plt>
  403374:	ldr	w19, [x0]
  403378:	ldr	x2, [sp, #40]
  40337c:	mov	w1, #0x3                   	// #3
  403380:	mov	w0, #0x0                   	// #0
  403384:	bl	406a48 <ferror@plt+0x4d68>
  403388:	mov	x3, x0
  40338c:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  403390:	add	x2, x0, #0x9a0
  403394:	mov	w1, w19
  403398:	mov	w0, #0x0                   	// #0
  40339c:	bl	401920 <error@plt>
  4033a0:	mov	w0, #0x0                   	// #0
  4033a4:	b	40340c <ferror@plt+0x172c>
  4033a8:	mov	x3, #0x0                   	// #0
  4033ac:	ldr	x2, [sp, #32]
  4033b0:	ldr	x1, [sp, #40]
  4033b4:	ldr	w0, [sp, #60]
  4033b8:	bl	402504 <ferror@plt+0x824>
  4033bc:	strb	w0, [sp, #59]
  4033c0:	ldr	w0, [sp, #60]
  4033c4:	bl	401ac0 <close@plt>
  4033c8:	cmp	w0, #0x0
  4033cc:	b.eq	403408 <ferror@plt+0x1728>  // b.none
  4033d0:	bl	401c80 <__errno_location@plt>
  4033d4:	ldr	w19, [x0]
  4033d8:	ldr	x2, [sp, #40]
  4033dc:	mov	w1, #0x3                   	// #3
  4033e0:	mov	w0, #0x0                   	// #0
  4033e4:	bl	406a48 <ferror@plt+0x4d68>
  4033e8:	mov	x3, x0
  4033ec:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  4033f0:	add	x2, x0, #0x9a0
  4033f4:	mov	w1, w19
  4033f8:	mov	w0, #0x0                   	// #0
  4033fc:	bl	401920 <error@plt>
  403400:	mov	w0, #0x0                   	// #0
  403404:	b	40340c <ferror@plt+0x172c>
  403408:	ldrb	w0, [sp, #59]
  40340c:	ldr	x19, [sp, #16]
  403410:	ldp	x29, x30, [sp], #64
  403414:	ret
  403418:	stp	x29, x30, [sp, #-48]!
  40341c:	mov	x29, sp
  403420:	str	x0, [sp, #24]
  403424:	str	x1, [sp, #16]
  403428:	ldr	x0, [sp, #24]
  40342c:	cmp	x0, #0x0
  403430:	b.eq	40343c <ferror@plt+0x175c>  // b.none
  403434:	ldr	x0, [sp, #24]
  403438:	b	403440 <ferror@plt+0x1760>
  40343c:	mov	x0, #0x1                   	// #1
  403440:	mov	x1, #0x88                  	// #136
  403444:	bl	407cb4 <ferror@plt+0x5fd4>
  403448:	str	x0, [sp, #32]
  40344c:	ldr	x0, [sp, #24]
  403450:	cmp	x0, #0x0
  403454:	b.eq	4034bc <ferror@plt+0x17dc>  // b.none
  403458:	ldr	x0, [sp, #24]
  40345c:	cmp	x0, #0x1
  403460:	b.ne	4034cc <ferror@plt+0x17ec>  // b.any
  403464:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403468:	add	x0, x0, #0x300
  40346c:	ldrb	w0, [x0]
  403470:	mov	w1, w0
  403474:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403478:	add	x0, x0, #0x301
  40347c:	ldrb	w0, [x0]
  403480:	add	w0, w1, w0
  403484:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403488:	add	x1, x1, #0x302
  40348c:	ldrb	w1, [x1]
  403490:	add	w0, w0, w1
  403494:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403498:	add	x1, x1, #0x303
  40349c:	ldrb	w1, [x1]
  4034a0:	add	w0, w0, w1
  4034a4:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x135c0>
  4034a8:	add	x1, x1, #0x304
  4034ac:	ldrb	w1, [x1]
  4034b0:	add	w0, w0, w1
  4034b4:	cmp	w0, #0x1
  4034b8:	b.ne	4034cc <ferror@plt+0x17ec>  // b.any
  4034bc:	ldr	x0, [sp, #32]
  4034c0:	mov	w1, #0x1                   	// #1
  4034c4:	str	w1, [x0]
  4034c8:	b	4035dc <ferror@plt+0x18fc>
  4034cc:	str	xzr, [sp, #40]
  4034d0:	b	4035cc <ferror@plt+0x18ec>
  4034d4:	ldr	x0, [sp, #40]
  4034d8:	lsl	x0, x0, #3
  4034dc:	ldr	x1, [sp, #16]
  4034e0:	add	x0, x1, x0
  4034e4:	ldr	x0, [x0]
  4034e8:	cmp	x0, #0x0
  4034ec:	b.eq	40351c <ferror@plt+0x183c>  // b.none
  4034f0:	ldr	x0, [sp, #40]
  4034f4:	lsl	x0, x0, #3
  4034f8:	ldr	x1, [sp, #16]
  4034fc:	add	x0, x1, x0
  403500:	ldr	x2, [x0]
  403504:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  403508:	add	x1, x0, #0x9a8
  40350c:	mov	x0, x2
  403510:	bl	401b70 <strcmp@plt>
  403514:	cmp	w0, #0x0
  403518:	b.ne	403554 <ferror@plt+0x1874>  // b.any
  40351c:	ldr	x1, [sp, #40]
  403520:	mov	x0, x1
  403524:	lsl	x0, x0, #4
  403528:	add	x0, x0, x1
  40352c:	lsl	x0, x0, #3
  403530:	mov	x1, x0
  403534:	ldr	x0, [sp, #32]
  403538:	add	x0, x0, x1
  40353c:	add	x0, x0, #0x8
  403540:	mov	x1, x0
  403544:	mov	w0, #0x0                   	// #0
  403548:	bl	4091a0 <_obstack_memory_used@@Base+0x760>
  40354c:	mov	w1, w0
  403550:	b	40359c <ferror@plt+0x18bc>
  403554:	ldr	x0, [sp, #40]
  403558:	lsl	x0, x0, #3
  40355c:	ldr	x1, [sp, #16]
  403560:	add	x0, x1, x0
  403564:	ldr	x2, [x0]
  403568:	ldr	x1, [sp, #40]
  40356c:	mov	x0, x1
  403570:	lsl	x0, x0, #4
  403574:	add	x0, x0, x1
  403578:	lsl	x0, x0, #3
  40357c:	mov	x1, x0
  403580:	ldr	x0, [sp, #32]
  403584:	add	x0, x0, x1
  403588:	add	x0, x0, #0x8
  40358c:	mov	x1, x0
  403590:	mov	x0, x2
  403594:	bl	409190 <_obstack_memory_used@@Base+0x750>
  403598:	mov	w1, w0
  40359c:	ldr	x2, [sp, #40]
  4035a0:	mov	x0, x2
  4035a4:	lsl	x0, x0, #4
  4035a8:	add	x0, x0, x2
  4035ac:	lsl	x0, x0, #3
  4035b0:	mov	x2, x0
  4035b4:	ldr	x0, [sp, #32]
  4035b8:	add	x0, x0, x2
  4035bc:	str	w1, [x0]
  4035c0:	ldr	x0, [sp, #40]
  4035c4:	add	x0, x0, #0x1
  4035c8:	str	x0, [sp, #40]
  4035cc:	ldr	x1, [sp, #40]
  4035d0:	ldr	x0, [sp, #24]
  4035d4:	cmp	x1, x0
  4035d8:	b.cc	4034d4 <ferror@plt+0x17f4>  // b.lo, b.ul, b.last
  4035dc:	ldr	x0, [sp, #32]
  4035e0:	ldp	x29, x30, [sp], #48
  4035e4:	ret
  4035e8:	sub	sp, sp, #0x30
  4035ec:	str	x0, [sp, #8]
  4035f0:	str	x1, [sp]
  4035f4:	mov	w0, #0x1                   	// #1
  4035f8:	str	w0, [sp, #44]
  4035fc:	ldr	x0, [sp, #8]
  403600:	cmp	x0, #0x0
  403604:	b.eq	403730 <ferror@plt+0x1a50>  // b.none
  403608:	ldr	x0, [sp]
  40360c:	ldr	w0, [x0]
  403610:	cmp	w0, #0x0
  403614:	b.gt	403730 <ferror@plt+0x1a50>
  403618:	mov	w0, #0x1                   	// #1
  40361c:	str	w0, [sp, #40]
  403620:	str	xzr, [sp, #32]
  403624:	str	xzr, [sp, #24]
  403628:	b	4036d4 <ferror@plt+0x19f4>
  40362c:	ldr	x1, [sp, #24]
  403630:	mov	x0, x1
  403634:	lsl	x0, x0, #4
  403638:	add	x0, x0, x1
  40363c:	lsl	x0, x0, #3
  403640:	mov	x1, x0
  403644:	ldr	x0, [sp]
  403648:	add	x0, x0, x1
  40364c:	ldr	w0, [x0]
  403650:	cmp	w0, #0x0
  403654:	b.ne	4036c8 <ferror@plt+0x19e8>  // b.any
  403658:	ldr	x1, [sp, #24]
  40365c:	mov	x0, x1
  403660:	lsl	x0, x0, #4
  403664:	add	x0, x0, x1
  403668:	lsl	x0, x0, #3
  40366c:	mov	x1, x0
  403670:	ldr	x0, [sp]
  403674:	add	x0, x0, x1
  403678:	ldr	w0, [x0, #24]
  40367c:	and	w0, w0, #0xf000
  403680:	cmp	w0, #0x8, lsl #12
  403684:	b.ne	4036c0 <ferror@plt+0x19e0>  // b.any
  403688:	ldr	x1, [sp, #24]
  40368c:	mov	x0, x1
  403690:	lsl	x0, x0, #4
  403694:	add	x0, x0, x1
  403698:	lsl	x0, x0, #3
  40369c:	mov	x1, x0
  4036a0:	ldr	x0, [sp]
  4036a4:	add	x0, x0, x1
  4036a8:	ldr	x0, [x0, #56]
  4036ac:	mov	x1, x0
  4036b0:	ldr	x0, [sp, #32]
  4036b4:	add	x0, x0, x1
  4036b8:	str	x0, [sp, #32]
  4036bc:	b	4036c8 <ferror@plt+0x19e8>
  4036c0:	mov	w0, #0x7                   	// #7
  4036c4:	str	w0, [sp, #40]
  4036c8:	ldr	x0, [sp, #24]
  4036cc:	add	x0, x0, #0x1
  4036d0:	str	x0, [sp, #24]
  4036d4:	ldr	x1, [sp, #24]
  4036d8:	ldr	x0, [sp, #8]
  4036dc:	cmp	x1, x0
  4036e0:	b.cc	40362c <ferror@plt+0x194c>  // b.lo, b.ul, b.last
  4036e4:	b	40370c <ferror@plt+0x1a2c>
  4036e8:	ldr	w0, [sp, #44]
  4036ec:	add	w0, w0, #0x1
  4036f0:	str	w0, [sp, #44]
  4036f4:	ldr	x1, [sp, #32]
  4036f8:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
  4036fc:	movk	x0, #0xcccd
  403700:	umulh	x0, x1, x0
  403704:	lsr	x0, x0, #3
  403708:	str	x0, [sp, #32]
  40370c:	ldr	x0, [sp, #32]
  403710:	cmp	x0, #0x9
  403714:	b.hi	4036e8 <ferror@plt+0x1a08>  // b.pmore
  403718:	ldr	w1, [sp, #44]
  40371c:	ldr	w0, [sp, #40]
  403720:	cmp	w1, w0
  403724:	b.ge	403730 <ferror@plt+0x1a50>  // b.tcont
  403728:	ldr	w0, [sp, #40]
  40372c:	str	w0, [sp, #44]
  403730:	ldr	w0, [sp, #44]
  403734:	add	sp, sp, #0x30
  403738:	ret
  40373c:	sub	sp, sp, #0x260
  403740:	stp	x29, x30, [sp]
  403744:	mov	x29, sp
  403748:	stp	x19, x20, [sp, #16]
  40374c:	stp	x21, x22, [sp, #32]
  403750:	str	x23, [sp, #48]
  403754:	str	d8, [sp, #56]
  403758:	str	w0, [sp, #76]
  40375c:	str	x1, [sp, #64]
  403760:	str	xzr, [sp, #576]
  403764:	ldr	x0, [sp, #64]
  403768:	ldr	x0, [x0]
  40376c:	bl	404948 <ferror@plt+0x2c68>
  403770:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  403774:	add	x1, x0, #0x3a8
  403778:	mov	w0, #0x6                   	// #6
  40377c:	bl	401cd0 <setlocale@plt>
  403780:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  403784:	add	x1, x0, #0x9b0
  403788:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  40378c:	add	x0, x0, #0x1f0
  403790:	bl	401a40 <bindtextdomain@plt>
  403794:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  403798:	add	x0, x0, #0x1f0
  40379c:	bl	401b50 <textdomain@plt>
  4037a0:	adrp	x0, 404000 <ferror@plt+0x2320>
  4037a4:	add	x0, x0, #0x4ac
  4037a8:	bl	409180 <_obstack_memory_used@@Base+0x740>
  4037ac:	bl	401ab0 <getpagesize@plt>
  4037b0:	sxtw	x1, w0
  4037b4:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  4037b8:	add	x0, x0, #0x310
  4037bc:	str	x1, [x0]
  4037c0:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  4037c4:	add	x0, x0, #0x2b8
  4037c8:	ldr	x0, [x0]
  4037cc:	mov	x3, #0x0                   	// #0
  4037d0:	mov	w2, #0x1                   	// #1
  4037d4:	mov	x1, #0x0                   	// #0
  4037d8:	bl	401970 <setvbuf@plt>
  4037dc:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  4037e0:	add	x0, x0, #0x9c8
  4037e4:	bl	401c90 <getenv@plt>
  4037e8:	cmp	x0, #0x0
  4037ec:	cset	w0, ne  // ne = any
  4037f0:	and	w1, w0, #0xff
  4037f4:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  4037f8:	add	x0, x0, #0x318
  4037fc:	strb	w1, [x0]
  403800:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403804:	add	x0, x0, #0x303
  403808:	strb	wzr, [x0]
  40380c:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403810:	add	x0, x0, #0x303
  403814:	ldrb	w1, [x0]
  403818:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  40381c:	add	x0, x0, #0x302
  403820:	strb	w1, [x0]
  403824:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403828:	add	x0, x0, #0x302
  40382c:	ldrb	w1, [x0]
  403830:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403834:	add	x0, x0, #0x301
  403838:	strb	w1, [x0]
  40383c:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403840:	add	x0, x0, #0x301
  403844:	ldrb	w1, [x0]
  403848:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  40384c:	add	x0, x0, #0x300
  403850:	strb	w1, [x0]
  403854:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403858:	add	x0, x0, #0x304
  40385c:	strb	wzr, [x0]
  403860:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403864:	add	x0, x0, #0x2f8
  403868:	str	xzr, [x0]
  40386c:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403870:	add	x0, x0, #0x2f8
  403874:	ldr	x1, [x0]
  403878:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  40387c:	add	x0, x0, #0x2f0
  403880:	str	x1, [x0]
  403884:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403888:	add	x0, x0, #0x2f0
  40388c:	ldr	x1, [x0]
  403890:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403894:	add	x0, x0, #0x2e8
  403898:	str	x1, [x0]
  40389c:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  4038a0:	add	x0, x0, #0x2e8
  4038a4:	ldr	x1, [x0]
  4038a8:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  4038ac:	add	x0, x0, #0x2e0
  4038b0:	str	x1, [x0]
  4038b4:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  4038b8:	add	x0, x0, #0x2e0
  4038bc:	ldr	x1, [x0]
  4038c0:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  4038c4:	add	x0, x0, #0x2d8
  4038c8:	str	x1, [x0]
  4038cc:	b	403a54 <ferror@plt+0x1d74>
  4038d0:	ldr	w0, [sp, #540]
  4038d4:	cmp	w0, #0x100
  4038d8:	b.eq	4039e0 <ferror@plt+0x1d00>  // b.none
  4038dc:	ldr	w0, [sp, #540]
  4038e0:	cmp	w0, #0x100
  4038e4:	b.gt	403a4c <ferror@plt+0x1d6c>
  4038e8:	ldr	w0, [sp, #540]
  4038ec:	cmp	w0, #0x77
  4038f0:	b.eq	4039b8 <ferror@plt+0x1cd8>  // b.none
  4038f4:	ldr	w0, [sp, #540]
  4038f8:	cmp	w0, #0x77
  4038fc:	b.gt	403a4c <ferror@plt+0x1d6c>
  403900:	ldr	w0, [sp, #540]
  403904:	cmp	w0, #0x6d
  403908:	b.eq	403990 <ferror@plt+0x1cb0>  // b.none
  40390c:	ldr	w0, [sp, #540]
  403910:	cmp	w0, #0x6d
  403914:	b.gt	403a4c <ferror@plt+0x1d6c>
  403918:	ldr	w0, [sp, #540]
  40391c:	cmp	w0, #0x6c
  403920:	b.eq	4039a4 <ferror@plt+0x1cc4>  // b.none
  403924:	ldr	w0, [sp, #540]
  403928:	cmp	w0, #0x6c
  40392c:	b.gt	403a4c <ferror@plt+0x1d6c>
  403930:	ldr	w0, [sp, #540]
  403934:	cmp	w0, #0x63
  403938:	b.eq	40397c <ferror@plt+0x1c9c>  // b.none
  40393c:	ldr	w0, [sp, #540]
  403940:	cmp	w0, #0x63
  403944:	b.gt	403a4c <ferror@plt+0x1d6c>
  403948:	ldr	w0, [sp, #540]
  40394c:	cmp	w0, #0x4c
  403950:	b.eq	4039cc <ferror@plt+0x1cec>  // b.none
  403954:	ldr	w0, [sp, #540]
  403958:	cmp	w0, #0x4c
  40395c:	b.gt	403a4c <ferror@plt+0x1d6c>
  403960:	ldr	w0, [sp, #540]
  403964:	cmn	w0, #0x3
  403968:	b.eq	4039fc <ferror@plt+0x1d1c>  // b.none
  40396c:	ldr	w0, [sp, #540]
  403970:	cmn	w0, #0x2
  403974:	b.eq	4039f4 <ferror@plt+0x1d14>  // b.none
  403978:	b	403a4c <ferror@plt+0x1d6c>
  40397c:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403980:	add	x0, x0, #0x303
  403984:	mov	w1, #0x1                   	// #1
  403988:	strb	w1, [x0]
  40398c:	b	403a54 <ferror@plt+0x1d74>
  403990:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403994:	add	x0, x0, #0x302
  403998:	mov	w1, #0x1                   	// #1
  40399c:	strb	w1, [x0]
  4039a0:	b	403a54 <ferror@plt+0x1d74>
  4039a4:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  4039a8:	add	x0, x0, #0x300
  4039ac:	mov	w1, #0x1                   	// #1
  4039b0:	strb	w1, [x0]
  4039b4:	b	403a54 <ferror@plt+0x1d74>
  4039b8:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  4039bc:	add	x0, x0, #0x301
  4039c0:	mov	w1, #0x1                   	// #1
  4039c4:	strb	w1, [x0]
  4039c8:	b	403a54 <ferror@plt+0x1d74>
  4039cc:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  4039d0:	add	x0, x0, #0x304
  4039d4:	mov	w1, #0x1                   	// #1
  4039d8:	strb	w1, [x0]
  4039dc:	b	403a54 <ferror@plt+0x1d74>
  4039e0:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  4039e4:	add	x0, x0, #0x2a8
  4039e8:	ldr	x0, [x0]
  4039ec:	str	x0, [sp, #576]
  4039f0:	b	403a54 <ferror@plt+0x1d74>
  4039f4:	mov	w0, #0x0                   	// #0
  4039f8:	bl	402108 <ferror@plt+0x428>
  4039fc:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403a00:	add	x0, x0, #0x2b8
  403a04:	ldr	x7, [x0]
  403a08:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403a0c:	add	x0, x0, #0x228
  403a10:	ldr	x1, [x0]
  403a14:	mov	x6, #0x0                   	// #0
  403a18:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  403a1c:	add	x5, x0, #0x9d8
  403a20:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  403a24:	add	x4, x0, #0x9e8
  403a28:	mov	x3, x1
  403a2c:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  403a30:	add	x2, x0, #0x2e0
  403a34:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  403a38:	add	x1, x0, #0x980
  403a3c:	mov	x0, x7
  403a40:	bl	407b80 <ferror@plt+0x5ea0>
  403a44:	mov	w0, #0x0                   	// #0
  403a48:	bl	401910 <exit@plt>
  403a4c:	mov	w0, #0x1                   	// #1
  403a50:	bl	402108 <ferror@plt+0x428>
  403a54:	mov	x4, #0x0                   	// #0
  403a58:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  403a5c:	add	x3, x0, #0x470
  403a60:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  403a64:	add	x2, x0, #0x9f8
  403a68:	ldr	x1, [sp, #64]
  403a6c:	ldr	w0, [sp, #76]
  403a70:	bl	401b60 <getopt_long@plt>
  403a74:	str	w0, [sp, #540]
  403a78:	ldr	w0, [sp, #540]
  403a7c:	cmn	w0, #0x1
  403a80:	b.ne	4038d0 <ferror@plt+0x1bf0>  // b.any
  403a84:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403a88:	add	x0, x0, #0x300
  403a8c:	ldrb	w0, [x0]
  403a90:	eor	w0, w0, #0x1
  403a94:	and	w0, w0, #0xff
  403a98:	cmp	w0, #0x0
  403a9c:	b.eq	403b50 <ferror@plt+0x1e70>  // b.none
  403aa0:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403aa4:	add	x0, x0, #0x301
  403aa8:	ldrb	w0, [x0]
  403aac:	eor	w0, w0, #0x1
  403ab0:	and	w0, w0, #0xff
  403ab4:	cmp	w0, #0x0
  403ab8:	b.eq	403b50 <ferror@plt+0x1e70>  // b.none
  403abc:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403ac0:	add	x0, x0, #0x302
  403ac4:	ldrb	w0, [x0]
  403ac8:	eor	w0, w0, #0x1
  403acc:	and	w0, w0, #0xff
  403ad0:	cmp	w0, #0x0
  403ad4:	b.eq	403b50 <ferror@plt+0x1e70>  // b.none
  403ad8:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403adc:	add	x0, x0, #0x303
  403ae0:	ldrb	w0, [x0]
  403ae4:	eor	w0, w0, #0x1
  403ae8:	and	w0, w0, #0xff
  403aec:	cmp	w0, #0x0
  403af0:	b.eq	403b50 <ferror@plt+0x1e70>  // b.none
  403af4:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403af8:	add	x0, x0, #0x304
  403afc:	ldrb	w0, [x0]
  403b00:	eor	w0, w0, #0x1
  403b04:	and	w0, w0, #0xff
  403b08:	cmp	w0, #0x0
  403b0c:	b.eq	403b50 <ferror@plt+0x1e70>  // b.none
  403b10:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403b14:	add	x0, x0, #0x303
  403b18:	mov	w1, #0x1                   	// #1
  403b1c:	strb	w1, [x0]
  403b20:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403b24:	add	x0, x0, #0x303
  403b28:	ldrb	w1, [x0]
  403b2c:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403b30:	add	x0, x0, #0x301
  403b34:	strb	w1, [x0]
  403b38:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403b3c:	add	x0, x0, #0x301
  403b40:	ldrb	w1, [x0]
  403b44:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403b48:	add	x0, x0, #0x300
  403b4c:	strb	w1, [x0]
  403b50:	strb	wzr, [sp, #575]
  403b54:	ldr	x0, [sp, #576]
  403b58:	cmp	x0, #0x0
  403b5c:	b.eq	403dac <ferror@plt+0x20cc>  // b.none
  403b60:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403b64:	add	x0, x0, #0x2b0
  403b68:	ldr	w0, [x0]
  403b6c:	ldr	w1, [sp, #76]
  403b70:	cmp	w1, w0
  403b74:	b.le	403bfc <ferror@plt+0x1f1c>
  403b78:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  403b7c:	add	x0, x0, #0xa00
  403b80:	bl	401cb0 <gettext@plt>
  403b84:	mov	x19, x0
  403b88:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403b8c:	add	x0, x0, #0x2b0
  403b90:	ldr	w0, [x0]
  403b94:	sxtw	x0, w0
  403b98:	lsl	x0, x0, #3
  403b9c:	ldr	x1, [sp, #64]
  403ba0:	add	x0, x1, x0
  403ba4:	ldr	x0, [x0]
  403ba8:	mov	x1, x0
  403bac:	mov	w0, #0x4                   	// #4
  403bb0:	bl	406910 <ferror@plt+0x4c30>
  403bb4:	mov	x3, x0
  403bb8:	mov	x2, x19
  403bbc:	mov	w1, #0x0                   	// #0
  403bc0:	mov	w0, #0x0                   	// #0
  403bc4:	bl	401920 <error@plt>
  403bc8:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403bcc:	add	x0, x0, #0x2a0
  403bd0:	ldr	x19, [x0]
  403bd4:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  403bd8:	add	x0, x0, #0xa18
  403bdc:	bl	401cb0 <gettext@plt>
  403be0:	mov	x2, x0
  403be4:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  403be8:	add	x1, x0, #0xa50
  403bec:	mov	x0, x19
  403bf0:	bl	401cc0 <fprintf@plt>
  403bf4:	mov	w0, #0x1                   	// #1
  403bf8:	bl	402108 <ferror@plt+0x428>
  403bfc:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  403c00:	add	x1, x0, #0x9a8
  403c04:	ldr	x0, [sp, #576]
  403c08:	bl	401b70 <strcmp@plt>
  403c0c:	cmp	w0, #0x0
  403c10:	b.ne	403c28 <ferror@plt+0x1f48>  // b.any
  403c14:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403c18:	add	x0, x0, #0x2c0
  403c1c:	ldr	x0, [x0]
  403c20:	str	x0, [sp, #552]
  403c24:	b	403c80 <ferror@plt+0x1fa0>
  403c28:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  403c2c:	add	x1, x0, #0xa58
  403c30:	ldr	x0, [sp, #576]
  403c34:	bl	4019e0 <fopen@plt>
  403c38:	str	x0, [sp, #552]
  403c3c:	ldr	x0, [sp, #552]
  403c40:	cmp	x0, #0x0
  403c44:	b.ne	403c80 <ferror@plt+0x1fa0>  // b.any
  403c48:	bl	401c80 <__errno_location@plt>
  403c4c:	ldr	w19, [x0]
  403c50:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  403c54:	add	x0, x0, #0xa60
  403c58:	bl	401cb0 <gettext@plt>
  403c5c:	mov	x20, x0
  403c60:	ldr	x1, [sp, #576]
  403c64:	mov	w0, #0x4                   	// #4
  403c68:	bl	406910 <ferror@plt+0x4c30>
  403c6c:	mov	x3, x0
  403c70:	mov	x2, x20
  403c74:	mov	w1, w19
  403c78:	mov	w0, #0x1                   	// #1
  403c7c:	bl	401920 <error@plt>
  403c80:	ldr	x0, [sp, #552]
  403c84:	bl	4019a0 <fileno@plt>
  403c88:	mov	w2, w0
  403c8c:	add	x0, sp, #0x58
  403c90:	mov	x1, x0
  403c94:	mov	w0, w2
  403c98:	bl	4091a0 <_obstack_memory_used@@Base+0x760>
  403c9c:	cmp	w0, #0x0
  403ca0:	b.ne	403d94 <ferror@plt+0x20b4>  // b.any
  403ca4:	ldr	w0, [sp, #104]
  403ca8:	and	w0, w0, #0xf000
  403cac:	cmp	w0, #0x8, lsl #12
  403cb0:	b.ne	403d94 <ferror@plt+0x20b4>  // b.any
  403cb4:	ldr	d0, [sp, #136]
  403cb8:	scvtf	d8, d0
  403cbc:	bl	4048ac <ferror@plt+0x2bcc>
  403cc0:	fmov	d1, d0
  403cc4:	fmov	d0, #2.000000000000000000e+00
  403cc8:	fdiv	d0, d1, d0
  403ccc:	mov	x0, #0x4164000000000000    	// #4711891110136381440
  403cd0:	fmov	d1, x0
  403cd4:	fcmpe	d0, d1
  403cd8:	b.le	403ce8 <ferror@plt+0x2008>
  403cdc:	mov	x0, #0x4164000000000000    	// #4711891110136381440
  403ce0:	fmov	d0, x0
  403ce4:	b	403cf8 <ferror@plt+0x2018>
  403ce8:	bl	4048ac <ferror@plt+0x2bcc>
  403cec:	fmov	d1, d0
  403cf0:	fmov	d0, #2.000000000000000000e+00
  403cf4:	fdiv	d0, d1, d0
  403cf8:	fcmpe	d0, d8
  403cfc:	b.lt	403d94 <ferror@plt+0x20b4>  // b.tstop
  403d00:	mov	w0, #0x1                   	// #1
  403d04:	strb	w0, [sp, #575]
  403d08:	add	x0, sp, #0xe0
  403d0c:	bl	406c80 <ferror@plt+0x4fa0>
  403d10:	add	x0, sp, #0xe0
  403d14:	mov	x1, x0
  403d18:	ldr	x0, [sp, #552]
  403d1c:	bl	407078 <ferror@plt+0x5398>
  403d20:	and	w0, w0, #0xff
  403d24:	eor	w0, w0, #0x1
  403d28:	and	w0, w0, #0xff
  403d2c:	cmp	w0, #0x0
  403d30:	b.ne	403d44 <ferror@plt+0x2064>  // b.any
  403d34:	ldr	x0, [sp, #552]
  403d38:	bl	408144 <ferror@plt+0x6464>
  403d3c:	cmp	w0, #0x0
  403d40:	b.eq	403d74 <ferror@plt+0x2094>  // b.none
  403d44:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  403d48:	add	x0, x0, #0xa80
  403d4c:	bl	401cb0 <gettext@plt>
  403d50:	mov	x19, x0
  403d54:	ldr	x1, [sp, #576]
  403d58:	mov	w0, #0x4                   	// #4
  403d5c:	bl	406910 <ferror@plt+0x4c30>
  403d60:	mov	x3, x0
  403d64:	mov	x2, x19
  403d68:	mov	w1, #0x0                   	// #0
  403d6c:	mov	w0, #0x1                   	// #1
  403d70:	bl	401920 <error@plt>
  403d74:	ldr	x0, [sp, #232]
  403d78:	str	x0, [sp, #584]
  403d7c:	ldr	x0, [sp, #224]
  403d80:	str	x0, [sp, #592]
  403d84:	ldr	x0, [sp, #584]
  403d88:	bl	404220 <ferror@plt+0x2540>
  403d8c:	str	x0, [sp, #560]
  403d90:	b	403e38 <ferror@plt+0x2158>
  403d94:	str	xzr, [sp, #584]
  403d98:	str	xzr, [sp, #592]
  403d9c:	ldr	x0, [sp, #552]
  403da0:	bl	404278 <ferror@plt+0x2598>
  403da4:	str	x0, [sp, #560]
  403da8:	b	403e38 <ferror@plt+0x2158>
  403dac:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403db0:	add	x0, x0, #0x2b0
  403db4:	ldr	w0, [x0]
  403db8:	ldr	w1, [sp, #76]
  403dbc:	cmp	w1, w0
  403dc0:	b.le	403de4 <ferror@plt+0x2104>
  403dc4:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403dc8:	add	x0, x0, #0x2b0
  403dcc:	ldr	w0, [x0]
  403dd0:	sxtw	x0, w0
  403dd4:	lsl	x0, x0, #3
  403dd8:	ldr	x1, [sp, #64]
  403ddc:	add	x0, x1, x0
  403de0:	b	403dec <ferror@plt+0x210c>
  403de4:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403de8:	add	x0, x0, #0x320
  403dec:	str	x0, [sp, #584]
  403df0:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403df4:	add	x0, x0, #0x2b0
  403df8:	ldr	w0, [x0]
  403dfc:	ldr	w1, [sp, #76]
  403e00:	cmp	w1, w0
  403e04:	b.le	403e24 <ferror@plt+0x2144>
  403e08:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403e0c:	add	x0, x0, #0x2b0
  403e10:	ldr	w0, [x0]
  403e14:	ldr	w1, [sp, #76]
  403e18:	sub	w0, w1, w0
  403e1c:	sxtw	x0, w0
  403e20:	b	403e28 <ferror@plt+0x2148>
  403e24:	mov	x0, #0x1                   	// #1
  403e28:	str	x0, [sp, #592]
  403e2c:	ldr	x0, [sp, #584]
  403e30:	bl	404220 <ferror@plt+0x2540>
  403e34:	str	x0, [sp, #560]
  403e38:	ldr	x0, [sp, #560]
  403e3c:	cmp	x0, #0x0
  403e40:	b.ne	403e48 <ferror@plt+0x2168>  // b.any
  403e44:	bl	4080c8 <ferror@plt+0x63e8>
  403e48:	ldr	x1, [sp, #584]
  403e4c:	ldr	x0, [sp, #592]
  403e50:	bl	403418 <ferror@plt+0x1738>
  403e54:	str	x0, [sp, #528]
  403e58:	ldr	x1, [sp, #528]
  403e5c:	ldr	x0, [sp, #592]
  403e60:	bl	4035e8 <ferror@plt+0x1908>
  403e64:	mov	w1, w0
  403e68:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  403e6c:	add	x0, x0, #0x308
  403e70:	str	w1, [x0]
  403e74:	mov	w0, #0x1                   	// #1
  403e78:	strb	w0, [sp, #607]
  403e7c:	str	wzr, [sp, #548]
  403e80:	strb	wzr, [sp, #547]
  403e84:	add	x0, sp, #0xdc
  403e88:	mov	x1, x0
  403e8c:	ldr	x0, [sp, #560]
  403e90:	bl	4042dc <ferror@plt+0x25fc>
  403e94:	str	x0, [sp, #520]
  403e98:	ldr	x0, [sp, #520]
  403e9c:	cmp	x0, #0x0
  403ea0:	b.ne	403f34 <ferror@plt+0x2254>  // b.any
  403ea4:	ldr	w0, [sp, #220]
  403ea8:	cmp	w0, #0x4
  403eac:	b.eq	403ecc <ferror@plt+0x21ec>  // b.none
  403eb0:	cmp	w0, #0x4
  403eb4:	b.hi	403f14 <ferror@plt+0x2234>  // b.pmore
  403eb8:	cmp	w0, #0x2
  403ebc:	b.eq	4040d4 <ferror@plt+0x23f4>  // b.none
  403ec0:	cmp	w0, #0x3
  403ec4:	b.eq	403f10 <ferror@plt+0x2230>  // b.none
  403ec8:	b	403f14 <ferror@plt+0x2234>
  403ecc:	bl	401c80 <__errno_location@plt>
  403ed0:	ldr	w19, [x0]
  403ed4:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  403ed8:	add	x0, x0, #0xaa0
  403edc:	bl	401cb0 <gettext@plt>
  403ee0:	mov	x20, x0
  403ee4:	ldr	x2, [sp, #576]
  403ee8:	mov	w1, #0x3                   	// #3
  403eec:	mov	w0, #0x0                   	// #0
  403ef0:	bl	406a48 <ferror@plt+0x4d68>
  403ef4:	mov	x3, x0
  403ef8:	mov	x2, x20
  403efc:	mov	w1, w19
  403f00:	mov	w0, #0x0                   	// #0
  403f04:	bl	401920 <error@plt>
  403f08:	strb	wzr, [sp, #607]
  403f0c:	b	4040d8 <ferror@plt+0x23f8>
  403f10:	bl	4080c8 <ferror@plt+0x63e8>
  403f14:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  403f18:	add	x3, x0, #0xb68
  403f1c:	mov	w2, #0x33f                 	// #831
  403f20:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  403f24:	add	x1, x0, #0xab0
  403f28:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  403f2c:	add	x0, x0, #0xac0
  403f30:	bl	401c70 <__assert_fail@plt>
  403f34:	ldr	x0, [sp, #576]
  403f38:	cmp	x0, #0x0
  403f3c:	b.eq	403fa8 <ferror@plt+0x22c8>  // b.none
  403f40:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  403f44:	add	x1, x0, #0x9a8
  403f48:	ldr	x0, [sp, #576]
  403f4c:	bl	401b70 <strcmp@plt>
  403f50:	cmp	w0, #0x0
  403f54:	b.ne	403fa8 <ferror@plt+0x22c8>  // b.any
  403f58:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  403f5c:	add	x1, x0, #0x9a8
  403f60:	ldr	x0, [sp, #520]
  403f64:	bl	401b70 <strcmp@plt>
  403f68:	cmp	w0, #0x0
  403f6c:	b.ne	403fa8 <ferror@plt+0x22c8>  // b.any
  403f70:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  403f74:	add	x0, x0, #0xae8
  403f78:	bl	401cb0 <gettext@plt>
  403f7c:	mov	x19, x0
  403f80:	ldr	x1, [sp, #520]
  403f84:	mov	w0, #0x4                   	// #4
  403f88:	bl	406910 <ferror@plt+0x4c30>
  403f8c:	mov	x3, x0
  403f90:	mov	x2, x19
  403f94:	mov	w1, #0x0                   	// #0
  403f98:	mov	w0, #0x0                   	// #0
  403f9c:	bl	401920 <error@plt>
  403fa0:	mov	w0, #0x1                   	// #1
  403fa4:	strb	w0, [sp, #547]
  403fa8:	ldr	x0, [sp, #520]
  403fac:	ldrb	w0, [x0]
  403fb0:	cmp	w0, #0x0
  403fb4:	b.ne	404040 <ferror@plt+0x2360>  // b.any
  403fb8:	ldr	x0, [sp, #576]
  403fbc:	cmp	x0, #0x0
  403fc0:	b.ne	403fec <ferror@plt+0x230c>  // b.any
  403fc4:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  403fc8:	add	x0, x0, #0xb28
  403fcc:	bl	401cb0 <gettext@plt>
  403fd0:	mov	x3, x0
  403fd4:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  403fd8:	add	x2, x0, #0x9a0
  403fdc:	mov	w1, #0x0                   	// #0
  403fe0:	mov	w0, #0x0                   	// #0
  403fe4:	bl	401920 <error@plt>
  403fe8:	b	404038 <ferror@plt+0x2358>
  403fec:	ldr	x0, [sp, #560]
  403ff0:	bl	4043e4 <ferror@plt+0x2704>
  403ff4:	str	x0, [sp, #512]
  403ff8:	ldr	x2, [sp, #576]
  403ffc:	mov	w1, #0x3                   	// #3
  404000:	mov	w0, #0x0                   	// #0
  404004:	bl	406a48 <ferror@plt+0x4d68>
  404008:	mov	x19, x0
  40400c:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  404010:	add	x0, x0, #0xb28
  404014:	bl	401cb0 <gettext@plt>
  404018:	mov	x5, x0
  40401c:	ldr	x4, [sp, #512]
  404020:	mov	x3, x19
  404024:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  404028:	add	x2, x0, #0xb48
  40402c:	mov	w1, #0x0                   	// #0
  404030:	mov	w0, #0x0                   	// #0
  404034:	bl	401920 <error@plt>
  404038:	mov	w0, #0x1                   	// #1
  40403c:	strb	w0, [sp, #547]
  404040:	ldrb	w0, [sp, #547]
  404044:	cmp	w0, #0x0
  404048:	b.eq	404054 <ferror@plt+0x2374>  // b.none
  40404c:	strb	wzr, [sp, #607]
  404050:	b	4040ac <ferror@plt+0x23cc>
  404054:	ldr	x0, [sp, #592]
  404058:	cmp	x0, #0x0
  40405c:	b.eq	40407c <ferror@plt+0x239c>  // b.none
  404060:	ldrsw	x1, [sp, #548]
  404064:	mov	x0, x1
  404068:	lsl	x0, x0, #4
  40406c:	add	x0, x0, x1
  404070:	lsl	x0, x0, #3
  404074:	mov	x1, x0
  404078:	b	404080 <ferror@plt+0x23a0>
  40407c:	mov	x1, #0x0                   	// #0
  404080:	ldr	x0, [sp, #528]
  404084:	add	x0, x0, x1
  404088:	mov	x1, x0
  40408c:	ldr	x0, [sp, #520]
  404090:	bl	4032e4 <ferror@plt+0x1604>
  404094:	and	w1, w0, #0xff
  404098:	ldrb	w0, [sp, #607]
  40409c:	and	w0, w0, w1
  4040a0:	cmp	w0, #0x0
  4040a4:	cset	w0, ne  // ne = any
  4040a8:	strb	w0, [sp, #607]
  4040ac:	ldr	x0, [sp, #592]
  4040b0:	cmp	x0, #0x0
  4040b4:	b.ne	4040c4 <ferror@plt+0x23e4>  // b.any
  4040b8:	ldr	x0, [sp, #528]
  4040bc:	mov	w1, #0x1                   	// #1
  4040c0:	str	w1, [x0]
  4040c4:	ldr	w0, [sp, #548]
  4040c8:	add	w0, w0, #0x1
  4040cc:	str	w0, [sp, #548]
  4040d0:	b	403e80 <ferror@plt+0x21a0>
  4040d4:	nop
  4040d8:	ldrb	w0, [sp, #607]
  4040dc:	cmp	w0, #0x0
  4040e0:	b.eq	404124 <ferror@plt+0x2444>  // b.none
  4040e4:	ldr	x0, [sp, #576]
  4040e8:	cmp	x0, #0x0
  4040ec:	b.ne	404124 <ferror@plt+0x2444>  // b.any
  4040f0:	ldr	x0, [sp, #560]
  4040f4:	bl	4043e4 <ferror@plt+0x2704>
  4040f8:	cmp	x0, #0x0
  4040fc:	b.ne	404124 <ferror@plt+0x2444>  // b.any
  404100:	ldr	x1, [sp, #528]
  404104:	mov	x0, #0x0                   	// #0
  404108:	bl	4032e4 <ferror@plt+0x1604>
  40410c:	and	w1, w0, #0xff
  404110:	ldrb	w0, [sp, #607]
  404114:	and	w0, w0, w1
  404118:	cmp	w0, #0x0
  40411c:	cset	w0, ne  // ne = any
  404120:	strb	w0, [sp, #607]
  404124:	ldrb	w0, [sp, #575]
  404128:	cmp	w0, #0x0
  40412c:	b.eq	404138 <ferror@plt+0x2458>  // b.none
  404130:	add	x0, sp, #0xe0
  404134:	bl	406d28 <ferror@plt+0x5048>
  404138:	ldr	x0, [sp, #560]
  40413c:	bl	4043e4 <ferror@plt+0x2704>
  404140:	cmp	x0, #0x1
  404144:	b.ls	4041ac <ferror@plt+0x24cc>  // b.plast
  404148:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  40414c:	add	x0, x0, #0x2d8
  404150:	ldr	x19, [x0]
  404154:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  404158:	add	x0, x0, #0x2e0
  40415c:	ldr	x20, [x0]
  404160:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  404164:	add	x0, x0, #0x2e8
  404168:	ldr	x21, [x0]
  40416c:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  404170:	add	x0, x0, #0x2f0
  404174:	ldr	x22, [x0]
  404178:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  40417c:	add	x0, x0, #0x2f8
  404180:	ldr	x23, [x0]
  404184:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  404188:	add	x0, x0, #0xb58
  40418c:	bl	401cb0 <gettext@plt>
  404190:	mov	x5, x0
  404194:	mov	x4, x23
  404198:	mov	x3, x22
  40419c:	mov	x2, x21
  4041a0:	mov	x1, x20
  4041a4:	mov	x0, x19
  4041a8:	bl	402304 <ferror@plt+0x624>
  4041ac:	ldr	x0, [sp, #560]
  4041b0:	bl	404428 <ferror@plt+0x2748>
  4041b4:	ldr	x0, [sp, #528]
  4041b8:	bl	401ba0 <free@plt>
  4041bc:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  4041c0:	add	x0, x0, #0x30c
  4041c4:	ldrb	w0, [x0]
  4041c8:	cmp	w0, #0x0
  4041cc:	b.eq	4041f8 <ferror@plt+0x2518>  // b.none
  4041d0:	mov	w0, #0x0                   	// #0
  4041d4:	bl	401ac0 <close@plt>
  4041d8:	cmp	w0, #0x0
  4041dc:	b.eq	4041f8 <ferror@plt+0x2518>  // b.none
  4041e0:	bl	401c80 <__errno_location@plt>
  4041e4:	ldr	w1, [x0]
  4041e8:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  4041ec:	add	x2, x0, #0x9a8
  4041f0:	mov	w0, #0x1                   	// #1
  4041f4:	bl	401920 <error@plt>
  4041f8:	ldrb	w0, [sp, #607]
  4041fc:	eor	w0, w0, #0x1
  404200:	and	w0, w0, #0xff
  404204:	ldp	x19, x20, [sp, #16]
  404208:	ldp	x21, x22, [sp, #32]
  40420c:	ldr	x23, [sp, #48]
  404210:	ldp	x29, x30, [sp]
  404214:	ldr	d8, [sp, #56]
  404218:	add	sp, sp, #0x260
  40421c:	ret
  404220:	stp	x29, x30, [sp, #-48]!
  404224:	mov	x29, sp
  404228:	str	x0, [sp, #24]
  40422c:	mov	x0, #0x30                  	// #48
  404230:	bl	4019f0 <malloc@plt>
  404234:	str	x0, [sp, #40]
  404238:	ldr	x0, [sp, #40]
  40423c:	cmp	x0, #0x0
  404240:	b.ne	40424c <ferror@plt+0x256c>  // b.any
  404244:	mov	x0, #0x0                   	// #0
  404248:	b	404270 <ferror@plt+0x2590>
  40424c:	ldr	x0, [sp, #40]
  404250:	str	xzr, [x0]
  404254:	ldr	x0, [sp, #40]
  404258:	ldr	x1, [sp, #24]
  40425c:	str	x1, [x0, #32]
  404260:	ldr	x0, [sp, #40]
  404264:	ldr	x1, [sp, #24]
  404268:	str	x1, [x0, #40]
  40426c:	ldr	x0, [sp, #40]
  404270:	ldp	x29, x30, [sp], #48
  404274:	ret
  404278:	stp	x29, x30, [sp, #-48]!
  40427c:	mov	x29, sp
  404280:	str	x0, [sp, #24]
  404284:	mov	x0, #0x30                  	// #48
  404288:	bl	4019f0 <malloc@plt>
  40428c:	str	x0, [sp, #40]
  404290:	ldr	x0, [sp, #40]
  404294:	cmp	x0, #0x0
  404298:	b.ne	4042a4 <ferror@plt+0x25c4>  // b.any
  40429c:	mov	x0, #0x0                   	// #0
  4042a0:	b	4042d4 <ferror@plt+0x25f4>
  4042a4:	ldr	x0, [sp, #40]
  4042a8:	ldr	x1, [sp, #24]
  4042ac:	str	x1, [x0]
  4042b0:	ldr	x0, [sp, #40]
  4042b4:	str	xzr, [x0, #16]
  4042b8:	ldr	x0, [sp, #40]
  4042bc:	str	xzr, [x0, #24]
  4042c0:	ldr	x0, [sp, #40]
  4042c4:	str	xzr, [x0, #8]
  4042c8:	ldr	x0, [sp, #40]
  4042cc:	str	xzr, [x0, #32]
  4042d0:	ldr	x0, [sp, #40]
  4042d4:	ldp	x29, x30, [sp], #48
  4042d8:	ret
  4042dc:	stp	x29, x30, [sp, #-48]!
  4042e0:	mov	x29, sp
  4042e4:	str	x0, [sp, #24]
  4042e8:	str	x1, [sp, #16]
  4042ec:	ldr	x0, [sp, #24]
  4042f0:	ldr	x0, [x0]
  4042f4:	cmp	x0, #0x0
  4042f8:	b.eq	404390 <ferror@plt+0x26b0>  // b.none
  4042fc:	ldr	x0, [sp, #24]
  404300:	add	x4, x0, #0x10
  404304:	ldr	x0, [sp, #24]
  404308:	add	x1, x0, #0x18
  40430c:	ldr	x0, [sp, #24]
  404310:	ldr	x0, [x0]
  404314:	mov	x3, x0
  404318:	mov	w2, #0x0                   	// #0
  40431c:	mov	x0, x4
  404320:	bl	401a10 <getdelim@plt>
  404324:	str	x0, [sp, #40]
  404328:	ldr	x0, [sp, #40]
  40432c:	cmp	x0, #0x0
  404330:	b.ge	404364 <ferror@plt+0x2684>  // b.tcont
  404334:	ldr	x0, [sp, #24]
  404338:	ldr	x0, [x0]
  40433c:	bl	401b30 <feof@plt>
  404340:	cmp	w0, #0x0
  404344:	b.eq	404350 <ferror@plt+0x2670>  // b.none
  404348:	mov	w0, #0x2                   	// #2
  40434c:	b	404354 <ferror@plt+0x2674>
  404350:	mov	w0, #0x4                   	// #4
  404354:	ldr	x1, [sp, #16]
  404358:	str	w0, [x1]
  40435c:	mov	x0, #0x0                   	// #0
  404360:	b	4043dc <ferror@plt+0x26fc>
  404364:	ldr	x0, [sp, #16]
  404368:	mov	w1, #0x1                   	// #1
  40436c:	str	w1, [x0]
  404370:	ldr	x0, [sp, #24]
  404374:	ldr	x0, [x0, #8]
  404378:	add	x1, x0, #0x1
  40437c:	ldr	x0, [sp, #24]
  404380:	str	x1, [x0, #8]
  404384:	ldr	x0, [sp, #24]
  404388:	ldr	x0, [x0, #16]
  40438c:	b	4043dc <ferror@plt+0x26fc>
  404390:	ldr	x0, [sp, #24]
  404394:	ldr	x0, [x0, #40]
  404398:	ldr	x0, [x0]
  40439c:	cmp	x0, #0x0
  4043a0:	b.ne	4043b8 <ferror@plt+0x26d8>  // b.any
  4043a4:	ldr	x0, [sp, #16]
  4043a8:	mov	w1, #0x2                   	// #2
  4043ac:	str	w1, [x0]
  4043b0:	mov	x0, #0x0                   	// #0
  4043b4:	b	4043dc <ferror@plt+0x26fc>
  4043b8:	ldr	x0, [sp, #16]
  4043bc:	mov	w1, #0x1                   	// #1
  4043c0:	str	w1, [x0]
  4043c4:	ldr	x0, [sp, #24]
  4043c8:	ldr	x0, [x0, #40]
  4043cc:	add	x2, x0, #0x8
  4043d0:	ldr	x1, [sp, #24]
  4043d4:	str	x2, [x1, #40]
  4043d8:	ldr	x0, [x0]
  4043dc:	ldp	x29, x30, [sp], #48
  4043e0:	ret
  4043e4:	sub	sp, sp, #0x10
  4043e8:	str	x0, [sp, #8]
  4043ec:	ldr	x0, [sp, #8]
  4043f0:	ldr	x0, [x0]
  4043f4:	cmp	x0, #0x0
  4043f8:	b.eq	404408 <ferror@plt+0x2728>  // b.none
  4043fc:	ldr	x0, [sp, #8]
  404400:	ldr	x0, [x0, #8]
  404404:	b	404420 <ferror@plt+0x2740>
  404408:	ldr	x0, [sp, #8]
  40440c:	ldr	x1, [x0, #40]
  404410:	ldr	x0, [sp, #8]
  404414:	ldr	x0, [x0, #32]
  404418:	sub	x0, x1, x0
  40441c:	asr	x0, x0, #3
  404420:	add	sp, sp, #0x10
  404424:	ret
  404428:	stp	x29, x30, [sp, #-32]!
  40442c:	mov	x29, sp
  404430:	str	x0, [sp, #24]
  404434:	ldr	x0, [sp, #24]
  404438:	ldr	x0, [x0]
  40443c:	cmp	x0, #0x0
  404440:	b.eq	404450 <ferror@plt+0x2770>  // b.none
  404444:	ldr	x0, [sp, #24]
  404448:	ldr	x0, [x0, #16]
  40444c:	bl	401ba0 <free@plt>
  404450:	ldr	x0, [sp, #24]
  404454:	bl	401ba0 <free@plt>
  404458:	nop
  40445c:	ldp	x29, x30, [sp], #32
  404460:	ret
  404464:	sub	sp, sp, #0x10
  404468:	str	x0, [sp, #8]
  40446c:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  404470:	add	x0, x0, #0x328
  404474:	ldr	x1, [sp, #8]
  404478:	str	x1, [x0]
  40447c:	nop
  404480:	add	sp, sp, #0x10
  404484:	ret
  404488:	sub	sp, sp, #0x10
  40448c:	strb	w0, [sp, #15]
  404490:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  404494:	add	x0, x0, #0x330
  404498:	ldrb	w1, [sp, #15]
  40449c:	strb	w1, [x0]
  4044a0:	nop
  4044a4:	add	sp, sp, #0x10
  4044a8:	ret
  4044ac:	stp	x29, x30, [sp, #-48]!
  4044b0:	mov	x29, sp
  4044b4:	str	x19, [sp, #16]
  4044b8:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  4044bc:	add	x0, x0, #0x2b8
  4044c0:	ldr	x0, [x0]
  4044c4:	bl	408be0 <_obstack_memory_used@@Base+0x1a0>
  4044c8:	cmp	w0, #0x0
  4044cc:	b.eq	404584 <ferror@plt+0x28a4>  // b.none
  4044d0:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  4044d4:	add	x0, x0, #0x330
  4044d8:	ldrb	w0, [x0]
  4044dc:	eor	w0, w0, #0x1
  4044e0:	and	w0, w0, #0xff
  4044e4:	cmp	w0, #0x0
  4044e8:	b.ne	4044fc <ferror@plt+0x281c>  // b.any
  4044ec:	bl	401c80 <__errno_location@plt>
  4044f0:	ldr	w0, [x0]
  4044f4:	cmp	w0, #0x20
  4044f8:	b.eq	404584 <ferror@plt+0x28a4>  // b.none
  4044fc:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  404500:	add	x0, x0, #0xb78
  404504:	bl	401cb0 <gettext@plt>
  404508:	str	x0, [sp, #40]
  40450c:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  404510:	add	x0, x0, #0x328
  404514:	ldr	x0, [x0]
  404518:	cmp	x0, #0x0
  40451c:	b.eq	404558 <ferror@plt+0x2878>  // b.none
  404520:	bl	401c80 <__errno_location@plt>
  404524:	ldr	w19, [x0]
  404528:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  40452c:	add	x0, x0, #0x328
  404530:	ldr	x0, [x0]
  404534:	bl	406a00 <ferror@plt+0x4d20>
  404538:	ldr	x4, [sp, #40]
  40453c:	mov	x3, x0
  404540:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  404544:	add	x2, x0, #0xb88
  404548:	mov	w1, w19
  40454c:	mov	w0, #0x0                   	// #0
  404550:	bl	401920 <error@plt>
  404554:	b	404574 <ferror@plt+0x2894>
  404558:	bl	401c80 <__errno_location@plt>
  40455c:	ldr	w1, [x0]
  404560:	ldr	x3, [sp, #40]
  404564:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  404568:	add	x2, x0, #0xb90
  40456c:	mov	w0, #0x0                   	// #0
  404570:	bl	401920 <error@plt>
  404574:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  404578:	add	x0, x0, #0x230
  40457c:	ldr	w0, [x0]
  404580:	bl	4018f0 <_exit@plt>
  404584:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  404588:	add	x0, x0, #0x2a0
  40458c:	ldr	x0, [x0]
  404590:	bl	408be0 <_obstack_memory_used@@Base+0x1a0>
  404594:	cmp	w0, #0x0
  404598:	b.eq	4045ac <ferror@plt+0x28cc>  // b.none
  40459c:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  4045a0:	add	x0, x0, #0x230
  4045a4:	ldr	w0, [x0]
  4045a8:	bl	4018f0 <_exit@plt>
  4045ac:	nop
  4045b0:	ldr	x19, [sp, #16]
  4045b4:	ldp	x29, x30, [sp], #48
  4045b8:	ret
  4045bc:	stp	x29, x30, [sp, #-64]!
  4045c0:	mov	x29, sp
  4045c4:	str	w0, [sp, #44]
  4045c8:	str	x1, [sp, #32]
  4045cc:	str	x2, [sp, #24]
  4045d0:	str	w3, [sp, #40]
  4045d4:	ldr	w0, [sp, #40]
  4045d8:	mov	w3, w0
  4045dc:	ldr	x2, [sp, #24]
  4045e0:	ldr	x1, [sp, #32]
  4045e4:	ldr	w0, [sp, #44]
  4045e8:	bl	401b10 <posix_fadvise@plt>
  4045ec:	str	w0, [sp, #60]
  4045f0:	nop
  4045f4:	ldp	x29, x30, [sp], #64
  4045f8:	ret
  4045fc:	stp	x29, x30, [sp, #-32]!
  404600:	mov	x29, sp
  404604:	str	x0, [sp, #24]
  404608:	str	w1, [sp, #20]
  40460c:	ldr	x0, [sp, #24]
  404610:	cmp	x0, #0x0
  404614:	b.eq	404630 <ferror@plt+0x2950>  // b.none
  404618:	ldr	x0, [sp, #24]
  40461c:	bl	4019a0 <fileno@plt>
  404620:	ldr	w3, [sp, #20]
  404624:	mov	x2, #0x0                   	// #0
  404628:	mov	x1, #0x0                   	// #0
  40462c:	bl	4045bc <ferror@plt+0x28dc>
  404630:	nop
  404634:	ldp	x29, x30, [sp], #32
  404638:	ret
  40463c:	sub	sp, sp, #0x20
  404640:	str	x0, [sp, #8]
  404644:	str	x1, [sp]
  404648:	ldr	x0, [sp]
  40464c:	add	x0, x0, #0x14
  404650:	str	x0, [sp, #24]
  404654:	ldr	x0, [sp, #24]
  404658:	strb	wzr, [x0]
  40465c:	ldr	x2, [sp, #8]
  404660:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
  404664:	movk	x0, #0xcccd
  404668:	umulh	x0, x2, x0
  40466c:	lsr	x1, x0, #3
  404670:	mov	x0, x1
  404674:	lsl	x0, x0, #2
  404678:	add	x0, x0, x1
  40467c:	lsl	x0, x0, #1
  404680:	sub	x1, x2, x0
  404684:	and	w0, w1, #0xff
  404688:	ldr	x1, [sp, #24]
  40468c:	sub	x1, x1, #0x1
  404690:	str	x1, [sp, #24]
  404694:	add	w0, w0, #0x30
  404698:	and	w1, w0, #0xff
  40469c:	ldr	x0, [sp, #24]
  4046a0:	strb	w1, [x0]
  4046a4:	ldr	x1, [sp, #8]
  4046a8:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
  4046ac:	movk	x0, #0xcccd
  4046b0:	umulh	x0, x1, x0
  4046b4:	lsr	x0, x0, #3
  4046b8:	str	x0, [sp, #8]
  4046bc:	ldr	x0, [sp, #8]
  4046c0:	cmp	x0, #0x0
  4046c4:	b.ne	40465c <ferror@plt+0x297c>  // b.any
  4046c8:	ldr	x0, [sp, #24]
  4046cc:	add	sp, sp, #0x20
  4046d0:	ret
  4046d4:	stp	x29, x30, [sp, #-48]!
  4046d8:	mov	x29, sp
  4046dc:	str	w0, [sp, #28]
  4046e0:	ldr	w0, [sp, #28]
  4046e4:	bl	401a00 <wcwidth@plt>
  4046e8:	str	w0, [sp, #44]
  4046ec:	ldr	w0, [sp, #44]
  4046f0:	cmp	w0, #0x0
  4046f4:	b.ge	404710 <ferror@plt+0x2a30>  // b.tcont
  4046f8:	ldr	w0, [sp, #28]
  4046fc:	bl	401960 <iswcntrl@plt>
  404700:	cmp	w0, #0x0
  404704:	cset	w0, eq  // eq = none
  404708:	and	w0, w0, #0xff
  40470c:	b	404714 <ferror@plt+0x2a34>
  404710:	ldr	w0, [sp, #44]
  404714:	ldp	x29, x30, [sp], #48
  404718:	ret
  40471c:	stp	x29, x30, [sp, #-32]!
  404720:	mov	x29, sp
  404724:	str	x0, [sp, #24]
  404728:	str	x1, [sp, #16]
  40472c:	ldr	x0, [sp, #16]
  404730:	ldr	x1, [x0]
  404734:	ldr	x0, [sp, #16]
  404738:	add	x0, x0, #0x18
  40473c:	cmp	x1, x0
  404740:	b.ne	40477c <ferror@plt+0x2a9c>  // b.any
  404744:	ldr	x0, [sp, #24]
  404748:	add	x3, x0, #0x18
  40474c:	ldr	x0, [sp, #16]
  404750:	add	x1, x0, #0x18
  404754:	ldr	x0, [sp, #16]
  404758:	ldr	x0, [x0, #8]
  40475c:	mov	x2, x0
  404760:	mov	x0, x3
  404764:	bl	4018d0 <memcpy@plt>
  404768:	ldr	x0, [sp, #24]
  40476c:	add	x1, x0, #0x18
  404770:	ldr	x0, [sp, #24]
  404774:	str	x1, [x0]
  404778:	b	40478c <ferror@plt+0x2aac>
  40477c:	ldr	x0, [sp, #16]
  404780:	ldr	x1, [x0]
  404784:	ldr	x0, [sp, #24]
  404788:	str	x1, [x0]
  40478c:	ldr	x0, [sp, #16]
  404790:	ldr	x1, [x0, #8]
  404794:	ldr	x0, [sp, #24]
  404798:	str	x1, [x0, #8]
  40479c:	ldr	x0, [sp, #16]
  4047a0:	ldrb	w1, [x0, #16]
  4047a4:	ldr	x0, [sp, #24]
  4047a8:	strb	w1, [x0, #16]
  4047ac:	ldr	x0, [sp, #24]
  4047b0:	ldrb	w0, [x0, #16]
  4047b4:	cmp	w0, #0x0
  4047b8:	b.eq	4047cc <ferror@plt+0x2aec>  // b.none
  4047bc:	ldr	x0, [sp, #16]
  4047c0:	ldr	w1, [x0, #20]
  4047c4:	ldr	x0, [sp, #24]
  4047c8:	str	w1, [x0, #20]
  4047cc:	nop
  4047d0:	ldp	x29, x30, [sp], #32
  4047d4:	ret
  4047d8:	sub	sp, sp, #0x10
  4047dc:	strb	w0, [sp, #15]
  4047e0:	ldrb	w0, [sp, #15]
  4047e4:	lsr	w0, w0, #5
  4047e8:	and	w0, w0, #0xff
  4047ec:	mov	w1, w0
  4047f0:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  4047f4:	add	x0, x0, #0xb98
  4047f8:	sxtw	x1, w1
  4047fc:	ldr	w1, [x0, x1, lsl #2]
  404800:	ldrb	w0, [sp, #15]
  404804:	and	w0, w0, #0x1f
  404808:	lsr	w0, w1, w0
  40480c:	and	w0, w0, #0x1
  404810:	cmp	w0, #0x0
  404814:	cset	w0, ne  // ne = any
  404818:	and	w0, w0, #0xff
  40481c:	add	sp, sp, #0x10
  404820:	ret
  404824:	stp	x29, x30, [sp, #-144]!
  404828:	mov	x29, sp
  40482c:	mov	w0, #0x55                  	// #85
  404830:	bl	401c10 <sysconf@plt>
  404834:	scvtf	d0, x0
  404838:	str	d0, [sp, #136]
  40483c:	mov	w0, #0x1e                  	// #30
  404840:	bl	401c10 <sysconf@plt>
  404844:	scvtf	d0, x0
  404848:	str	d0, [sp, #128]
  40484c:	ldr	d0, [sp, #136]
  404850:	fcmpe	d0, #0.0
  404854:	b.lt	404874 <ferror@plt+0x2b94>  // b.tstop
  404858:	ldr	d0, [sp, #128]
  40485c:	fcmpe	d0, #0.0
  404860:	b.lt	404874 <ferror@plt+0x2b94>  // b.tstop
  404864:	ldr	d1, [sp, #136]
  404868:	ldr	d0, [sp, #128]
  40486c:	fmul	d0, d1, d0
  404870:	b	4048a4 <ferror@plt+0x2bc4>
  404874:	add	x0, sp, #0x10
  404878:	bl	401930 <sysinfo@plt>
  40487c:	cmp	w0, #0x0
  404880:	b.ne	40489c <ferror@plt+0x2bbc>  // b.any
  404884:	ldr	d0, [sp, #48]
  404888:	ucvtf	d1, d0
  40488c:	ldr	w0, [sp, #120]
  404890:	ucvtf	d0, w0
  404894:	fmul	d0, d1, d0
  404898:	b	4048a4 <ferror@plt+0x2bc4>
  40489c:	mov	x0, #0x4190000000000000    	// #4724276009111650304
  4048a0:	fmov	d0, x0
  4048a4:	ldp	x29, x30, [sp], #144
  4048a8:	ret
  4048ac:	stp	x29, x30, [sp, #-144]!
  4048b0:	mov	x29, sp
  4048b4:	mov	w0, #0x56                  	// #86
  4048b8:	bl	401c10 <sysconf@plt>
  4048bc:	scvtf	d0, x0
  4048c0:	str	d0, [sp, #136]
  4048c4:	mov	w0, #0x1e                  	// #30
  4048c8:	bl	401c10 <sysconf@plt>
  4048cc:	scvtf	d0, x0
  4048d0:	str	d0, [sp, #128]
  4048d4:	ldr	d0, [sp, #136]
  4048d8:	fcmpe	d0, #0.0
  4048dc:	b.lt	4048fc <ferror@plt+0x2c1c>  // b.tstop
  4048e0:	ldr	d0, [sp, #128]
  4048e4:	fcmpe	d0, #0.0
  4048e8:	b.lt	4048fc <ferror@plt+0x2c1c>  // b.tstop
  4048ec:	ldr	d1, [sp, #136]
  4048f0:	ldr	d0, [sp, #128]
  4048f4:	fmul	d0, d1, d0
  4048f8:	b	404940 <ferror@plt+0x2c60>
  4048fc:	add	x0, sp, #0x10
  404900:	bl	401930 <sysinfo@plt>
  404904:	cmp	w0, #0x0
  404908:	b.ne	404930 <ferror@plt+0x2c50>  // b.any
  40490c:	ldr	d0, [sp, #56]
  404910:	ucvtf	d1, d0
  404914:	ldr	d0, [sp, #72]
  404918:	ucvtf	d0, d0
  40491c:	fadd	d1, d1, d0
  404920:	ldr	w0, [sp, #120]
  404924:	ucvtf	d0, w0
  404928:	fmul	d0, d1, d0
  40492c:	b	404940 <ferror@plt+0x2c60>
  404930:	bl	404824 <ferror@plt+0x2b44>
  404934:	fmov	d1, d0
  404938:	fmov	d0, #4.000000000000000000e+00
  40493c:	fdiv	d0, d1, d0
  404940:	ldp	x29, x30, [sp], #144
  404944:	ret
  404948:	stp	x29, x30, [sp, #-48]!
  40494c:	mov	x29, sp
  404950:	str	x0, [sp, #24]
  404954:	ldr	x0, [sp, #24]
  404958:	cmp	x0, #0x0
  40495c:	b.ne	404988 <ferror@plt+0x2ca8>  // b.any
  404960:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  404964:	add	x0, x0, #0x2a0
  404968:	ldr	x0, [x0]
  40496c:	mov	x3, x0
  404970:	mov	x2, #0x37                  	// #55
  404974:	mov	x1, #0x1                   	// #1
  404978:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  40497c:	add	x0, x0, #0xbb8
  404980:	bl	401bd0 <fwrite@plt>
  404984:	bl	401b00 <abort@plt>
  404988:	mov	w1, #0x2f                  	// #47
  40498c:	ldr	x0, [sp, #24]
  404990:	bl	401ad0 <strrchr@plt>
  404994:	str	x0, [sp, #40]
  404998:	ldr	x0, [sp, #40]
  40499c:	cmp	x0, #0x0
  4049a0:	b.eq	4049b0 <ferror@plt+0x2cd0>  // b.none
  4049a4:	ldr	x0, [sp, #40]
  4049a8:	add	x0, x0, #0x1
  4049ac:	b	4049b4 <ferror@plt+0x2cd4>
  4049b0:	ldr	x0, [sp, #24]
  4049b4:	str	x0, [sp, #32]
  4049b8:	ldr	x1, [sp, #32]
  4049bc:	ldr	x0, [sp, #24]
  4049c0:	sub	x0, x1, x0
  4049c4:	cmp	x0, #0x6
  4049c8:	b.le	404a30 <ferror@plt+0x2d50>
  4049cc:	ldr	x0, [sp, #32]
  4049d0:	sub	x3, x0, #0x7
  4049d4:	mov	x2, #0x7                   	// #7
  4049d8:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  4049dc:	add	x1, x0, #0xbf0
  4049e0:	mov	x0, x3
  4049e4:	bl	401a30 <strncmp@plt>
  4049e8:	cmp	w0, #0x0
  4049ec:	b.ne	404a30 <ferror@plt+0x2d50>  // b.any
  4049f0:	ldr	x0, [sp, #32]
  4049f4:	str	x0, [sp, #24]
  4049f8:	mov	x2, #0x3                   	// #3
  4049fc:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  404a00:	add	x1, x0, #0xbf8
  404a04:	ldr	x0, [sp, #32]
  404a08:	bl	401a30 <strncmp@plt>
  404a0c:	cmp	w0, #0x0
  404a10:	b.ne	404a30 <ferror@plt+0x2d50>  // b.any
  404a14:	ldr	x0, [sp, #32]
  404a18:	add	x0, x0, #0x3
  404a1c:	str	x0, [sp, #24]
  404a20:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  404a24:	add	x0, x0, #0x2c8
  404a28:	ldr	x1, [sp, #24]
  404a2c:	str	x1, [x0]
  404a30:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  404a34:	add	x0, x0, #0x338
  404a38:	ldr	x1, [sp, #24]
  404a3c:	str	x1, [x0]
  404a40:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  404a44:	add	x0, x0, #0x298
  404a48:	ldr	x1, [sp, #24]
  404a4c:	str	x1, [x0]
  404a50:	nop
  404a54:	ldp	x29, x30, [sp], #48
  404a58:	ret
  404a5c:	stp	x29, x30, [sp, #-48]!
  404a60:	mov	x29, sp
  404a64:	str	x0, [sp, #24]
  404a68:	bl	401c80 <__errno_location@plt>
  404a6c:	ldr	w0, [x0]
  404a70:	str	w0, [sp, #44]
  404a74:	ldr	x0, [sp, #24]
  404a78:	cmp	x0, #0x0
  404a7c:	b.eq	404a88 <ferror@plt+0x2da8>  // b.none
  404a80:	ldr	x0, [sp, #24]
  404a84:	b	404a90 <ferror@plt+0x2db0>
  404a88:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  404a8c:	add	x0, x0, #0x340
  404a90:	mov	x1, #0x38                  	// #56
  404a94:	bl	408070 <ferror@plt+0x6390>
  404a98:	str	x0, [sp, #32]
  404a9c:	bl	401c80 <__errno_location@plt>
  404aa0:	mov	x1, x0
  404aa4:	ldr	w0, [sp, #44]
  404aa8:	str	w0, [x1]
  404aac:	ldr	x0, [sp, #32]
  404ab0:	ldp	x29, x30, [sp], #48
  404ab4:	ret
  404ab8:	sub	sp, sp, #0x10
  404abc:	str	x0, [sp, #8]
  404ac0:	ldr	x0, [sp, #8]
  404ac4:	cmp	x0, #0x0
  404ac8:	b.eq	404ad4 <ferror@plt+0x2df4>  // b.none
  404acc:	ldr	x0, [sp, #8]
  404ad0:	b	404adc <ferror@plt+0x2dfc>
  404ad4:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  404ad8:	add	x0, x0, #0x340
  404adc:	ldr	w0, [x0]
  404ae0:	add	sp, sp, #0x10
  404ae4:	ret
  404ae8:	sub	sp, sp, #0x10
  404aec:	str	x0, [sp, #8]
  404af0:	str	w1, [sp, #4]
  404af4:	ldr	x0, [sp, #8]
  404af8:	cmp	x0, #0x0
  404afc:	b.eq	404b08 <ferror@plt+0x2e28>  // b.none
  404b00:	ldr	x0, [sp, #8]
  404b04:	b	404b10 <ferror@plt+0x2e30>
  404b08:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  404b0c:	add	x0, x0, #0x340
  404b10:	ldr	w1, [sp, #4]
  404b14:	str	w1, [x0]
  404b18:	nop
  404b1c:	add	sp, sp, #0x10
  404b20:	ret
  404b24:	sub	sp, sp, #0x30
  404b28:	str	x0, [sp, #8]
  404b2c:	strb	w1, [sp, #7]
  404b30:	str	w2, [sp]
  404b34:	ldrb	w0, [sp, #7]
  404b38:	strb	w0, [sp, #47]
  404b3c:	ldr	x0, [sp, #8]
  404b40:	cmp	x0, #0x0
  404b44:	b.eq	404b50 <ferror@plt+0x2e70>  // b.none
  404b48:	ldr	x0, [sp, #8]
  404b4c:	b	404b58 <ferror@plt+0x2e78>
  404b50:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  404b54:	add	x0, x0, #0x340
  404b58:	add	x1, x0, #0x8
  404b5c:	ldrb	w0, [sp, #47]
  404b60:	lsr	w0, w0, #5
  404b64:	and	w0, w0, #0xff
  404b68:	and	x0, x0, #0xff
  404b6c:	lsl	x0, x0, #2
  404b70:	add	x0, x1, x0
  404b74:	str	x0, [sp, #32]
  404b78:	ldrb	w0, [sp, #47]
  404b7c:	and	w0, w0, #0x1f
  404b80:	str	w0, [sp, #28]
  404b84:	ldr	x0, [sp, #32]
  404b88:	ldr	w1, [x0]
  404b8c:	ldr	w0, [sp, #28]
  404b90:	lsr	w0, w1, w0
  404b94:	and	w0, w0, #0x1
  404b98:	str	w0, [sp, #24]
  404b9c:	ldr	x0, [sp, #32]
  404ba0:	ldr	w0, [x0]
  404ba4:	ldr	w1, [sp]
  404ba8:	and	w2, w1, #0x1
  404bac:	ldr	w1, [sp, #24]
  404bb0:	eor	w2, w2, w1
  404bb4:	ldr	w1, [sp, #28]
  404bb8:	lsl	w1, w2, w1
  404bbc:	eor	w1, w0, w1
  404bc0:	ldr	x0, [sp, #32]
  404bc4:	str	w1, [x0]
  404bc8:	ldr	w0, [sp, #24]
  404bcc:	add	sp, sp, #0x30
  404bd0:	ret
  404bd4:	sub	sp, sp, #0x20
  404bd8:	str	x0, [sp, #8]
  404bdc:	str	w1, [sp, #4]
  404be0:	ldr	x0, [sp, #8]
  404be4:	cmp	x0, #0x0
  404be8:	b.ne	404bf8 <ferror@plt+0x2f18>  // b.any
  404bec:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  404bf0:	add	x0, x0, #0x340
  404bf4:	str	x0, [sp, #8]
  404bf8:	ldr	x0, [sp, #8]
  404bfc:	ldr	w0, [x0, #4]
  404c00:	str	w0, [sp, #28]
  404c04:	ldr	x0, [sp, #8]
  404c08:	ldr	w1, [sp, #4]
  404c0c:	str	w1, [x0, #4]
  404c10:	ldr	w0, [sp, #28]
  404c14:	add	sp, sp, #0x20
  404c18:	ret
  404c1c:	stp	x29, x30, [sp, #-48]!
  404c20:	mov	x29, sp
  404c24:	str	x0, [sp, #40]
  404c28:	str	x1, [sp, #32]
  404c2c:	str	x2, [sp, #24]
  404c30:	ldr	x0, [sp, #40]
  404c34:	cmp	x0, #0x0
  404c38:	b.ne	404c48 <ferror@plt+0x2f68>  // b.any
  404c3c:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  404c40:	add	x0, x0, #0x340
  404c44:	str	x0, [sp, #40]
  404c48:	ldr	x0, [sp, #40]
  404c4c:	mov	w1, #0xa                   	// #10
  404c50:	str	w1, [x0]
  404c54:	ldr	x0, [sp, #32]
  404c58:	cmp	x0, #0x0
  404c5c:	b.eq	404c6c <ferror@plt+0x2f8c>  // b.none
  404c60:	ldr	x0, [sp, #24]
  404c64:	cmp	x0, #0x0
  404c68:	b.ne	404c70 <ferror@plt+0x2f90>  // b.any
  404c6c:	bl	401b00 <abort@plt>
  404c70:	ldr	x0, [sp, #40]
  404c74:	ldr	x1, [sp, #32]
  404c78:	str	x1, [x0, #40]
  404c7c:	ldr	x0, [sp, #40]
  404c80:	ldr	x1, [sp, #24]
  404c84:	str	x1, [x0, #48]
  404c88:	nop
  404c8c:	ldp	x29, x30, [sp], #48
  404c90:	ret
  404c94:	stp	x29, x30, [sp, #-96]!
  404c98:	mov	x29, sp
  404c9c:	mov	x1, x8
  404ca0:	str	w0, [sp, #28]
  404ca4:	stp	xzr, xzr, [sp, #40]
  404ca8:	stp	xzr, xzr, [sp, #56]
  404cac:	stp	xzr, xzr, [sp, #72]
  404cb0:	str	xzr, [sp, #88]
  404cb4:	ldr	w0, [sp, #28]
  404cb8:	cmp	w0, #0xa
  404cbc:	b.ne	404cc4 <ferror@plt+0x2fe4>  // b.any
  404cc0:	bl	401b00 <abort@plt>
  404cc4:	ldr	w0, [sp, #28]
  404cc8:	str	w0, [sp, #40]
  404ccc:	add	x0, sp, #0x28
  404cd0:	ldp	x2, x3, [x0]
  404cd4:	stp	x2, x3, [x1]
  404cd8:	ldp	x2, x3, [x0, #16]
  404cdc:	stp	x2, x3, [x1, #16]
  404ce0:	ldp	x2, x3, [x0, #32]
  404ce4:	stp	x2, x3, [x1, #32]
  404ce8:	ldr	x0, [x0, #48]
  404cec:	str	x0, [x1, #48]
  404cf0:	ldp	x29, x30, [sp], #96
  404cf4:	ret
  404cf8:	stp	x29, x30, [sp, #-48]!
  404cfc:	mov	x29, sp
  404d00:	str	x0, [sp, #24]
  404d04:	str	w1, [sp, #20]
  404d08:	ldr	x0, [sp, #24]
  404d0c:	bl	401cb0 <gettext@plt>
  404d10:	str	x0, [sp, #40]
  404d14:	ldr	x1, [sp, #40]
  404d18:	ldr	x0, [sp, #24]
  404d1c:	cmp	x1, x0
  404d20:	b.eq	404d2c <ferror@plt+0x304c>  // b.none
  404d24:	ldr	x0, [sp, #40]
  404d28:	b	404dd4 <ferror@plt+0x30f4>
  404d2c:	bl	408cfc <_obstack_memory_used@@Base+0x2bc>
  404d30:	str	x0, [sp, #32]
  404d34:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  404d38:	add	x1, x0, #0xcf0
  404d3c:	ldr	x0, [sp, #32]
  404d40:	bl	408b58 <_obstack_memory_used@@Base+0x118>
  404d44:	cmp	w0, #0x0
  404d48:	b.ne	404d74 <ferror@plt+0x3094>  // b.any
  404d4c:	ldr	x0, [sp, #24]
  404d50:	ldrb	w0, [x0]
  404d54:	cmp	w0, #0x60
  404d58:	b.ne	404d68 <ferror@plt+0x3088>  // b.any
  404d5c:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  404d60:	add	x0, x0, #0xcf8
  404d64:	b	404dd4 <ferror@plt+0x30f4>
  404d68:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  404d6c:	add	x0, x0, #0xd00
  404d70:	b	404dd4 <ferror@plt+0x30f4>
  404d74:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  404d78:	add	x1, x0, #0xd08
  404d7c:	ldr	x0, [sp, #32]
  404d80:	bl	408b58 <_obstack_memory_used@@Base+0x118>
  404d84:	cmp	w0, #0x0
  404d88:	b.ne	404db4 <ferror@plt+0x30d4>  // b.any
  404d8c:	ldr	x0, [sp, #24]
  404d90:	ldrb	w0, [x0]
  404d94:	cmp	w0, #0x60
  404d98:	b.ne	404da8 <ferror@plt+0x30c8>  // b.any
  404d9c:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  404da0:	add	x0, x0, #0xd10
  404da4:	b	404dd4 <ferror@plt+0x30f4>
  404da8:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  404dac:	add	x0, x0, #0xd18
  404db0:	b	404dd4 <ferror@plt+0x30f4>
  404db4:	ldr	w0, [sp, #20]
  404db8:	cmp	w0, #0x9
  404dbc:	b.ne	404dcc <ferror@plt+0x30ec>  // b.any
  404dc0:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  404dc4:	add	x0, x0, #0xd20
  404dc8:	b	404dd4 <ferror@plt+0x30f4>
  404dcc:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  404dd0:	add	x0, x0, #0xd28
  404dd4:	ldp	x29, x30, [sp], #48
  404dd8:	ret
  404ddc:	sub	sp, sp, #0xf0
  404de0:	stp	x29, x30, [sp, #16]
  404de4:	add	x29, sp, #0x10
  404de8:	str	x19, [sp, #32]
  404dec:	str	x0, [sp, #104]
  404df0:	str	x1, [sp, #96]
  404df4:	str	x2, [sp, #88]
  404df8:	str	x3, [sp, #80]
  404dfc:	str	w4, [sp, #76]
  404e00:	str	w5, [sp, #72]
  404e04:	str	x6, [sp, #64]
  404e08:	str	x7, [sp, #56]
  404e0c:	str	xzr, [sp, #224]
  404e10:	str	xzr, [sp, #216]
  404e14:	str	xzr, [sp, #208]
  404e18:	str	xzr, [sp, #200]
  404e1c:	strb	wzr, [sp, #199]
  404e20:	bl	401bb0 <__ctype_get_mb_cur_max@plt>
  404e24:	cmp	x0, #0x1
  404e28:	cset	w0, eq  // eq = none
  404e2c:	strb	w0, [sp, #159]
  404e30:	ldr	w0, [sp, #72]
  404e34:	and	w0, w0, #0x2
  404e38:	cmp	w0, #0x0
  404e3c:	cset	w0, ne  // ne = any
  404e40:	strb	w0, [sp, #198]
  404e44:	strb	wzr, [sp, #197]
  404e48:	strb	wzr, [sp, #196]
  404e4c:	mov	w0, #0x1                   	// #1
  404e50:	strb	w0, [sp, #195]
  404e54:	ldr	w0, [sp, #76]
  404e58:	cmp	w0, #0xa
  404e5c:	b.hi	4050f8 <ferror@plt+0x3418>  // b.pmore
  404e60:	ldr	w0, [sp, #76]
  404e64:	cmp	w0, #0x8
  404e68:	b.cs	404f9c <ferror@plt+0x32bc>  // b.hs, b.nlast
  404e6c:	ldr	w0, [sp, #76]
  404e70:	cmp	w0, #0x7
  404e74:	b.eq	404f8c <ferror@plt+0x32ac>  // b.none
  404e78:	ldr	w0, [sp, #76]
  404e7c:	cmp	w0, #0x7
  404e80:	b.hi	4050f8 <ferror@plt+0x3418>  // b.pmore
  404e84:	ldr	w0, [sp, #76]
  404e88:	cmp	w0, #0x6
  404e8c:	b.eq	404f18 <ferror@plt+0x3238>  // b.none
  404e90:	ldr	w0, [sp, #76]
  404e94:	cmp	w0, #0x6
  404e98:	b.hi	4050f8 <ferror@plt+0x3418>  // b.pmore
  404e9c:	ldr	w0, [sp, #76]
  404ea0:	cmp	w0, #0x5
  404ea4:	b.eq	404f28 <ferror@plt+0x3248>  // b.none
  404ea8:	ldr	w0, [sp, #76]
  404eac:	cmp	w0, #0x5
  404eb0:	b.hi	4050f8 <ferror@plt+0x3418>  // b.pmore
  404eb4:	ldr	w0, [sp, #76]
  404eb8:	cmp	w0, #0x4
  404ebc:	b.eq	405070 <ferror@plt+0x3390>  // b.none
  404ec0:	ldr	w0, [sp, #76]
  404ec4:	cmp	w0, #0x4
  404ec8:	b.hi	4050f8 <ferror@plt+0x3418>  // b.pmore
  404ecc:	ldr	w0, [sp, #76]
  404ed0:	cmp	w0, #0x3
  404ed4:	b.eq	405060 <ferror@plt+0x3380>  // b.none
  404ed8:	ldr	w0, [sp, #76]
  404edc:	cmp	w0, #0x3
  404ee0:	b.hi	4050f8 <ferror@plt+0x3418>  // b.pmore
  404ee4:	ldr	w0, [sp, #76]
  404ee8:	cmp	w0, #0x2
  404eec:	b.eq	40508c <ferror@plt+0x33ac>  // b.none
  404ef0:	ldr	w0, [sp, #76]
  404ef4:	cmp	w0, #0x2
  404ef8:	b.hi	4050f8 <ferror@plt+0x3418>  // b.pmore
  404efc:	ldr	w0, [sp, #76]
  404f00:	cmp	w0, #0x0
  404f04:	b.eq	4050f0 <ferror@plt+0x3410>  // b.none
  404f08:	ldr	w0, [sp, #76]
  404f0c:	cmp	w0, #0x1
  404f10:	b.eq	405068 <ferror@plt+0x3388>  // b.none
  404f14:	b	4050f8 <ferror@plt+0x3418>
  404f18:	mov	w0, #0x5                   	// #5
  404f1c:	str	w0, [sp, #76]
  404f20:	mov	w0, #0x1                   	// #1
  404f24:	strb	w0, [sp, #198]
  404f28:	ldrb	w0, [sp, #198]
  404f2c:	eor	w0, w0, #0x1
  404f30:	and	w0, w0, #0xff
  404f34:	cmp	w0, #0x0
  404f38:	b.eq	404f6c <ferror@plt+0x328c>  // b.none
  404f3c:	ldr	x1, [sp, #224]
  404f40:	ldr	x0, [sp, #96]
  404f44:	cmp	x1, x0
  404f48:	b.cs	404f60 <ferror@plt+0x3280>  // b.hs, b.nlast
  404f4c:	ldr	x1, [sp, #104]
  404f50:	ldr	x0, [sp, #224]
  404f54:	add	x0, x1, x0
  404f58:	mov	w1, #0x22                  	// #34
  404f5c:	strb	w1, [x0]
  404f60:	ldr	x0, [sp, #224]
  404f64:	add	x0, x0, #0x1
  404f68:	str	x0, [sp, #224]
  404f6c:	mov	w0, #0x1                   	// #1
  404f70:	strb	w0, [sp, #199]
  404f74:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  404f78:	add	x0, x0, #0xd20
  404f7c:	str	x0, [sp, #208]
  404f80:	mov	x0, #0x1                   	// #1
  404f84:	str	x0, [sp, #200]
  404f88:	b	4050fc <ferror@plt+0x341c>
  404f8c:	mov	w0, #0x1                   	// #1
  404f90:	strb	w0, [sp, #199]
  404f94:	strb	wzr, [sp, #198]
  404f98:	b	4050fc <ferror@plt+0x341c>
  404f9c:	ldr	w0, [sp, #76]
  404fa0:	cmp	w0, #0xa
  404fa4:	b.eq	404fd0 <ferror@plt+0x32f0>  // b.none
  404fa8:	ldr	w1, [sp, #76]
  404fac:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  404fb0:	add	x0, x0, #0xd30
  404fb4:	bl	404cf8 <ferror@plt+0x3018>
  404fb8:	str	x0, [sp, #56]
  404fbc:	ldr	w1, [sp, #76]
  404fc0:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  404fc4:	add	x0, x0, #0xd28
  404fc8:	bl	404cf8 <ferror@plt+0x3018>
  404fcc:	str	x0, [sp, #240]
  404fd0:	ldrb	w0, [sp, #198]
  404fd4:	eor	w0, w0, #0x1
  404fd8:	and	w0, w0, #0xff
  404fdc:	cmp	w0, #0x0
  404fe0:	b.eq	405040 <ferror@plt+0x3360>  // b.none
  404fe4:	ldr	x0, [sp, #56]
  404fe8:	str	x0, [sp, #208]
  404fec:	b	405030 <ferror@plt+0x3350>
  404ff0:	ldr	x1, [sp, #224]
  404ff4:	ldr	x0, [sp, #96]
  404ff8:	cmp	x1, x0
  404ffc:	b.cs	405018 <ferror@plt+0x3338>  // b.hs, b.nlast
  405000:	ldr	x1, [sp, #104]
  405004:	ldr	x0, [sp, #224]
  405008:	add	x0, x1, x0
  40500c:	ldr	x1, [sp, #208]
  405010:	ldrb	w1, [x1]
  405014:	strb	w1, [x0]
  405018:	ldr	x0, [sp, #224]
  40501c:	add	x0, x0, #0x1
  405020:	str	x0, [sp, #224]
  405024:	ldr	x0, [sp, #208]
  405028:	add	x0, x0, #0x1
  40502c:	str	x0, [sp, #208]
  405030:	ldr	x0, [sp, #208]
  405034:	ldrb	w0, [x0]
  405038:	cmp	w0, #0x0
  40503c:	b.ne	404ff0 <ferror@plt+0x3310>  // b.any
  405040:	mov	w0, #0x1                   	// #1
  405044:	strb	w0, [sp, #199]
  405048:	ldr	x0, [sp, #240]
  40504c:	str	x0, [sp, #208]
  405050:	ldr	x0, [sp, #208]
  405054:	bl	401900 <strlen@plt>
  405058:	str	x0, [sp, #200]
  40505c:	b	4050fc <ferror@plt+0x341c>
  405060:	mov	w0, #0x1                   	// #1
  405064:	strb	w0, [sp, #199]
  405068:	mov	w0, #0x1                   	// #1
  40506c:	strb	w0, [sp, #198]
  405070:	ldrb	w0, [sp, #198]
  405074:	eor	w0, w0, #0x1
  405078:	and	w0, w0, #0xff
  40507c:	cmp	w0, #0x0
  405080:	b.eq	40508c <ferror@plt+0x33ac>  // b.none
  405084:	mov	w0, #0x1                   	// #1
  405088:	strb	w0, [sp, #199]
  40508c:	mov	w0, #0x2                   	// #2
  405090:	str	w0, [sp, #76]
  405094:	ldrb	w0, [sp, #198]
  405098:	eor	w0, w0, #0x1
  40509c:	and	w0, w0, #0xff
  4050a0:	cmp	w0, #0x0
  4050a4:	b.eq	4050d8 <ferror@plt+0x33f8>  // b.none
  4050a8:	ldr	x1, [sp, #224]
  4050ac:	ldr	x0, [sp, #96]
  4050b0:	cmp	x1, x0
  4050b4:	b.cs	4050cc <ferror@plt+0x33ec>  // b.hs, b.nlast
  4050b8:	ldr	x1, [sp, #104]
  4050bc:	ldr	x0, [sp, #224]
  4050c0:	add	x0, x1, x0
  4050c4:	mov	w1, #0x27                  	// #39
  4050c8:	strb	w1, [x0]
  4050cc:	ldr	x0, [sp, #224]
  4050d0:	add	x0, x0, #0x1
  4050d4:	str	x0, [sp, #224]
  4050d8:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  4050dc:	add	x0, x0, #0xd28
  4050e0:	str	x0, [sp, #208]
  4050e4:	mov	x0, #0x1                   	// #1
  4050e8:	str	x0, [sp, #200]
  4050ec:	b	4050fc <ferror@plt+0x341c>
  4050f0:	strb	wzr, [sp, #198]
  4050f4:	b	4050fc <ferror@plt+0x341c>
  4050f8:	bl	401b00 <abort@plt>
  4050fc:	str	xzr, [sp, #232]
  405100:	b	405fb8 <ferror@plt+0x42d8>
  405104:	strb	wzr, [sp, #192]
  405108:	strb	wzr, [sp, #191]
  40510c:	strb	wzr, [sp, #190]
  405110:	ldrb	w0, [sp, #199]
  405114:	cmp	w0, #0x0
  405118:	b.eq	4051ac <ferror@plt+0x34cc>  // b.none
  40511c:	ldr	w0, [sp, #76]
  405120:	cmp	w0, #0x2
  405124:	b.eq	4051ac <ferror@plt+0x34cc>  // b.none
  405128:	ldr	x0, [sp, #200]
  40512c:	cmp	x0, #0x0
  405130:	b.eq	4051ac <ferror@plt+0x34cc>  // b.none
  405134:	ldr	x1, [sp, #232]
  405138:	ldr	x0, [sp, #200]
  40513c:	add	x19, x1, x0
  405140:	ldr	x0, [sp, #80]
  405144:	cmn	x0, #0x1
  405148:	b.ne	40516c <ferror@plt+0x348c>  // b.any
  40514c:	ldr	x0, [sp, #200]
  405150:	cmp	x0, #0x1
  405154:	b.ls	40516c <ferror@plt+0x348c>  // b.plast
  405158:	ldr	x0, [sp, #88]
  40515c:	bl	401900 <strlen@plt>
  405160:	str	x0, [sp, #80]
  405164:	ldr	x0, [sp, #80]
  405168:	b	405170 <ferror@plt+0x3490>
  40516c:	ldr	x0, [sp, #80]
  405170:	cmp	x0, x19
  405174:	b.cc	4051ac <ferror@plt+0x34cc>  // b.lo, b.ul, b.last
  405178:	ldr	x1, [sp, #88]
  40517c:	ldr	x0, [sp, #232]
  405180:	add	x0, x1, x0
  405184:	ldr	x2, [sp, #200]
  405188:	ldr	x1, [sp, #208]
  40518c:	bl	401b40 <memcmp@plt>
  405190:	cmp	w0, #0x0
  405194:	b.ne	4051ac <ferror@plt+0x34cc>  // b.any
  405198:	ldrb	w0, [sp, #198]
  40519c:	cmp	w0, #0x0
  4051a0:	b.ne	406150 <ferror@plt+0x4470>  // b.any
  4051a4:	mov	w0, #0x1                   	// #1
  4051a8:	strb	w0, [sp, #192]
  4051ac:	ldr	x1, [sp, #88]
  4051b0:	ldr	x0, [sp, #232]
  4051b4:	add	x0, x1, x0
  4051b8:	ldrb	w0, [x0]
  4051bc:	strb	w0, [sp, #194]
  4051c0:	ldrb	w0, [sp, #194]
  4051c4:	cmp	w0, #0x7e
  4051c8:	b.hi	4057c0 <ferror@plt+0x3ae0>  // b.pmore
  4051cc:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x5c0>
  4051d0:	add	x1, x1, #0xd34
  4051d4:	ldr	w0, [x1, w0, uxtw #2]
  4051d8:	adr	x1, 4051e4 <ferror@plt+0x3504>
  4051dc:	add	x0, x1, w0, sxtw #2
  4051e0:	br	x0
  4051e4:	ldrb	w0, [sp, #199]
  4051e8:	cmp	w0, #0x0
  4051ec:	b.eq	4053b0 <ferror@plt+0x36d0>  // b.none
  4051f0:	ldrb	w0, [sp, #198]
  4051f4:	cmp	w0, #0x0
  4051f8:	b.ne	406158 <ferror@plt+0x4478>  // b.any
  4051fc:	mov	w0, #0x1                   	// #1
  405200:	strb	w0, [sp, #191]
  405204:	ldr	w0, [sp, #76]
  405208:	cmp	w0, #0x2
  40520c:	b.ne	4052bc <ferror@plt+0x35dc>  // b.any
  405210:	ldrb	w0, [sp, #197]
  405214:	eor	w0, w0, #0x1
  405218:	and	w0, w0, #0xff
  40521c:	cmp	w0, #0x0
  405220:	b.eq	4052bc <ferror@plt+0x35dc>  // b.none
  405224:	ldr	x1, [sp, #224]
  405228:	ldr	x0, [sp, #96]
  40522c:	cmp	x1, x0
  405230:	b.cs	405248 <ferror@plt+0x3568>  // b.hs, b.nlast
  405234:	ldr	x1, [sp, #104]
  405238:	ldr	x0, [sp, #224]
  40523c:	add	x0, x1, x0
  405240:	mov	w1, #0x27                  	// #39
  405244:	strb	w1, [x0]
  405248:	ldr	x0, [sp, #224]
  40524c:	add	x0, x0, #0x1
  405250:	str	x0, [sp, #224]
  405254:	ldr	x1, [sp, #224]
  405258:	ldr	x0, [sp, #96]
  40525c:	cmp	x1, x0
  405260:	b.cs	405278 <ferror@plt+0x3598>  // b.hs, b.nlast
  405264:	ldr	x1, [sp, #104]
  405268:	ldr	x0, [sp, #224]
  40526c:	add	x0, x1, x0
  405270:	mov	w1, #0x24                  	// #36
  405274:	strb	w1, [x0]
  405278:	ldr	x0, [sp, #224]
  40527c:	add	x0, x0, #0x1
  405280:	str	x0, [sp, #224]
  405284:	ldr	x1, [sp, #224]
  405288:	ldr	x0, [sp, #96]
  40528c:	cmp	x1, x0
  405290:	b.cs	4052a8 <ferror@plt+0x35c8>  // b.hs, b.nlast
  405294:	ldr	x1, [sp, #104]
  405298:	ldr	x0, [sp, #224]
  40529c:	add	x0, x1, x0
  4052a0:	mov	w1, #0x27                  	// #39
  4052a4:	strb	w1, [x0]
  4052a8:	ldr	x0, [sp, #224]
  4052ac:	add	x0, x0, #0x1
  4052b0:	str	x0, [sp, #224]
  4052b4:	mov	w0, #0x1                   	// #1
  4052b8:	strb	w0, [sp, #197]
  4052bc:	ldr	x1, [sp, #224]
  4052c0:	ldr	x0, [sp, #96]
  4052c4:	cmp	x1, x0
  4052c8:	b.cs	4052e0 <ferror@plt+0x3600>  // b.hs, b.nlast
  4052cc:	ldr	x1, [sp, #104]
  4052d0:	ldr	x0, [sp, #224]
  4052d4:	add	x0, x1, x0
  4052d8:	mov	w1, #0x5c                  	// #92
  4052dc:	strb	w1, [x0]
  4052e0:	ldr	x0, [sp, #224]
  4052e4:	add	x0, x0, #0x1
  4052e8:	str	x0, [sp, #224]
  4052ec:	ldr	w0, [sp, #76]
  4052f0:	cmp	w0, #0x2
  4052f4:	b.eq	4053a4 <ferror@plt+0x36c4>  // b.none
  4052f8:	ldr	x0, [sp, #232]
  4052fc:	add	x0, x0, #0x1
  405300:	ldr	x1, [sp, #80]
  405304:	cmp	x1, x0
  405308:	b.ls	4053a4 <ferror@plt+0x36c4>  // b.plast
  40530c:	ldr	x0, [sp, #232]
  405310:	add	x0, x0, #0x1
  405314:	ldr	x1, [sp, #88]
  405318:	add	x0, x1, x0
  40531c:	ldrb	w0, [x0]
  405320:	cmp	w0, #0x2f
  405324:	b.ls	4053a4 <ferror@plt+0x36c4>  // b.plast
  405328:	ldr	x0, [sp, #232]
  40532c:	add	x0, x0, #0x1
  405330:	ldr	x1, [sp, #88]
  405334:	add	x0, x1, x0
  405338:	ldrb	w0, [x0]
  40533c:	cmp	w0, #0x39
  405340:	b.hi	4053a4 <ferror@plt+0x36c4>  // b.pmore
  405344:	ldr	x1, [sp, #224]
  405348:	ldr	x0, [sp, #96]
  40534c:	cmp	x1, x0
  405350:	b.cs	405368 <ferror@plt+0x3688>  // b.hs, b.nlast
  405354:	ldr	x1, [sp, #104]
  405358:	ldr	x0, [sp, #224]
  40535c:	add	x0, x1, x0
  405360:	mov	w1, #0x30                  	// #48
  405364:	strb	w1, [x0]
  405368:	ldr	x0, [sp, #224]
  40536c:	add	x0, x0, #0x1
  405370:	str	x0, [sp, #224]
  405374:	ldr	x1, [sp, #224]
  405378:	ldr	x0, [sp, #96]
  40537c:	cmp	x1, x0
  405380:	b.cs	405398 <ferror@plt+0x36b8>  // b.hs, b.nlast
  405384:	ldr	x1, [sp, #104]
  405388:	ldr	x0, [sp, #224]
  40538c:	add	x0, x1, x0
  405390:	mov	w1, #0x30                  	// #48
  405394:	strb	w1, [x0]
  405398:	ldr	x0, [sp, #224]
  40539c:	add	x0, x0, #0x1
  4053a0:	str	x0, [sp, #224]
  4053a4:	mov	w0, #0x30                  	// #48
  4053a8:	strb	w0, [sp, #194]
  4053ac:	b	405d10 <ferror@plt+0x4030>
  4053b0:	ldr	w0, [sp, #72]
  4053b4:	and	w0, w0, #0x1
  4053b8:	cmp	w0, #0x0
  4053bc:	b.eq	405d10 <ferror@plt+0x4030>  // b.none
  4053c0:	b	405fac <ferror@plt+0x42cc>
  4053c4:	ldr	w0, [sp, #76]
  4053c8:	cmp	w0, #0x2
  4053cc:	b.eq	4053e0 <ferror@plt+0x3700>  // b.none
  4053d0:	ldr	w0, [sp, #76]
  4053d4:	cmp	w0, #0x5
  4053d8:	b.eq	4053f0 <ferror@plt+0x3710>  // b.none
  4053dc:	b	405588 <ferror@plt+0x38a8>
  4053e0:	ldrb	w0, [sp, #198]
  4053e4:	cmp	w0, #0x0
  4053e8:	b.eq	40557c <ferror@plt+0x389c>  // b.none
  4053ec:	b	40618c <ferror@plt+0x44ac>
  4053f0:	ldr	w0, [sp, #72]
  4053f4:	and	w0, w0, #0x4
  4053f8:	cmp	w0, #0x0
  4053fc:	b.eq	405584 <ferror@plt+0x38a4>  // b.none
  405400:	ldr	x0, [sp, #232]
  405404:	add	x0, x0, #0x2
  405408:	ldr	x1, [sp, #80]
  40540c:	cmp	x1, x0
  405410:	b.ls	405584 <ferror@plt+0x38a4>  // b.plast
  405414:	ldr	x0, [sp, #232]
  405418:	add	x0, x0, #0x1
  40541c:	ldr	x1, [sp, #88]
  405420:	add	x0, x1, x0
  405424:	ldrb	w0, [x0]
  405428:	cmp	w0, #0x3f
  40542c:	b.ne	405584 <ferror@plt+0x38a4>  // b.any
  405430:	ldr	x0, [sp, #232]
  405434:	add	x0, x0, #0x2
  405438:	ldr	x1, [sp, #88]
  40543c:	add	x0, x1, x0
  405440:	ldrb	w0, [x0]
  405444:	cmp	w0, #0x3e
  405448:	cset	w1, hi  // hi = pmore
  40544c:	and	w1, w1, #0xff
  405450:	cmp	w1, #0x0
  405454:	b.ne	405574 <ferror@plt+0x3894>  // b.any
  405458:	mov	x1, #0x1                   	// #1
  40545c:	lsl	x1, x1, x0
  405460:	mov	x0, #0xa38200000000        	// #179778741075968
  405464:	movk	x0, #0x7000, lsl #48
  405468:	and	x0, x1, x0
  40546c:	cmp	x0, #0x0
  405470:	cset	w0, ne  // ne = any
  405474:	and	w0, w0, #0xff
  405478:	cmp	w0, #0x0
  40547c:	b.eq	405574 <ferror@plt+0x3894>  // b.none
  405480:	ldrb	w0, [sp, #198]
  405484:	cmp	w0, #0x0
  405488:	b.ne	406160 <ferror@plt+0x4480>  // b.any
  40548c:	ldr	x0, [sp, #232]
  405490:	add	x0, x0, #0x2
  405494:	ldr	x1, [sp, #88]
  405498:	add	x0, x1, x0
  40549c:	ldrb	w0, [x0]
  4054a0:	strb	w0, [sp, #194]
  4054a4:	ldr	x0, [sp, #232]
  4054a8:	add	x0, x0, #0x2
  4054ac:	str	x0, [sp, #232]
  4054b0:	ldr	x1, [sp, #224]
  4054b4:	ldr	x0, [sp, #96]
  4054b8:	cmp	x1, x0
  4054bc:	b.cs	4054d4 <ferror@plt+0x37f4>  // b.hs, b.nlast
  4054c0:	ldr	x1, [sp, #104]
  4054c4:	ldr	x0, [sp, #224]
  4054c8:	add	x0, x1, x0
  4054cc:	mov	w1, #0x3f                  	// #63
  4054d0:	strb	w1, [x0]
  4054d4:	ldr	x0, [sp, #224]
  4054d8:	add	x0, x0, #0x1
  4054dc:	str	x0, [sp, #224]
  4054e0:	ldr	x1, [sp, #224]
  4054e4:	ldr	x0, [sp, #96]
  4054e8:	cmp	x1, x0
  4054ec:	b.cs	405504 <ferror@plt+0x3824>  // b.hs, b.nlast
  4054f0:	ldr	x1, [sp, #104]
  4054f4:	ldr	x0, [sp, #224]
  4054f8:	add	x0, x1, x0
  4054fc:	mov	w1, #0x22                  	// #34
  405500:	strb	w1, [x0]
  405504:	ldr	x0, [sp, #224]
  405508:	add	x0, x0, #0x1
  40550c:	str	x0, [sp, #224]
  405510:	ldr	x1, [sp, #224]
  405514:	ldr	x0, [sp, #96]
  405518:	cmp	x1, x0
  40551c:	b.cs	405534 <ferror@plt+0x3854>  // b.hs, b.nlast
  405520:	ldr	x1, [sp, #104]
  405524:	ldr	x0, [sp, #224]
  405528:	add	x0, x1, x0
  40552c:	mov	w1, #0x22                  	// #34
  405530:	strb	w1, [x0]
  405534:	ldr	x0, [sp, #224]
  405538:	add	x0, x0, #0x1
  40553c:	str	x0, [sp, #224]
  405540:	ldr	x1, [sp, #224]
  405544:	ldr	x0, [sp, #96]
  405548:	cmp	x1, x0
  40554c:	b.cs	405564 <ferror@plt+0x3884>  // b.hs, b.nlast
  405550:	ldr	x1, [sp, #104]
  405554:	ldr	x0, [sp, #224]
  405558:	add	x0, x1, x0
  40555c:	mov	w1, #0x3f                  	// #63
  405560:	strb	w1, [x0]
  405564:	ldr	x0, [sp, #224]
  405568:	add	x0, x0, #0x1
  40556c:	str	x0, [sp, #224]
  405570:	b	405578 <ferror@plt+0x3898>
  405574:	nop
  405578:	b	405584 <ferror@plt+0x38a4>
  40557c:	nop
  405580:	b	405d3c <ferror@plt+0x405c>
  405584:	nop
  405588:	b	405d3c <ferror@plt+0x405c>
  40558c:	mov	w0, #0x61                  	// #97
  405590:	strb	w0, [sp, #193]
  405594:	b	405648 <ferror@plt+0x3968>
  405598:	mov	w0, #0x62                  	// #98
  40559c:	strb	w0, [sp, #193]
  4055a0:	b	405648 <ferror@plt+0x3968>
  4055a4:	mov	w0, #0x66                  	// #102
  4055a8:	strb	w0, [sp, #193]
  4055ac:	b	405648 <ferror@plt+0x3968>
  4055b0:	mov	w0, #0x6e                  	// #110
  4055b4:	strb	w0, [sp, #193]
  4055b8:	b	40562c <ferror@plt+0x394c>
  4055bc:	mov	w0, #0x72                  	// #114
  4055c0:	strb	w0, [sp, #193]
  4055c4:	b	40562c <ferror@plt+0x394c>
  4055c8:	mov	w0, #0x74                  	// #116
  4055cc:	strb	w0, [sp, #193]
  4055d0:	b	40562c <ferror@plt+0x394c>
  4055d4:	mov	w0, #0x76                  	// #118
  4055d8:	strb	w0, [sp, #193]
  4055dc:	b	405648 <ferror@plt+0x3968>
  4055e0:	ldrb	w0, [sp, #194]
  4055e4:	strb	w0, [sp, #193]
  4055e8:	ldr	w0, [sp, #76]
  4055ec:	cmp	w0, #0x2
  4055f0:	b.ne	405604 <ferror@plt+0x3924>  // b.any
  4055f4:	ldrb	w0, [sp, #198]
  4055f8:	cmp	w0, #0x0
  4055fc:	b.eq	405ecc <ferror@plt+0x41ec>  // b.none
  405600:	b	40618c <ferror@plt+0x44ac>
  405604:	ldrb	w0, [sp, #199]
  405608:	cmp	w0, #0x0
  40560c:	b.eq	405628 <ferror@plt+0x3948>  // b.none
  405610:	ldrb	w0, [sp, #198]
  405614:	cmp	w0, #0x0
  405618:	b.eq	405628 <ferror@plt+0x3948>  // b.none
  40561c:	ldr	x0, [sp, #200]
  405620:	cmp	x0, #0x0
  405624:	b.ne	405ed4 <ferror@plt+0x41f4>  // b.any
  405628:	nop
  40562c:	ldr	w0, [sp, #76]
  405630:	cmp	w0, #0x2
  405634:	b.ne	405644 <ferror@plt+0x3964>  // b.any
  405638:	ldrb	w0, [sp, #198]
  40563c:	cmp	w0, #0x0
  405640:	b.ne	406168 <ferror@plt+0x4488>  // b.any
  405644:	nop
  405648:	ldrb	w0, [sp, #199]
  40564c:	cmp	w0, #0x0
  405650:	b.eq	405d18 <ferror@plt+0x4038>  // b.none
  405654:	ldrb	w0, [sp, #193]
  405658:	strb	w0, [sp, #194]
  40565c:	b	405dcc <ferror@plt+0x40ec>
  405660:	ldr	x0, [sp, #80]
  405664:	cmn	x0, #0x1
  405668:	b.ne	405688 <ferror@plt+0x39a8>  // b.any
  40566c:	ldr	x0, [sp, #88]
  405670:	add	x0, x0, #0x1
  405674:	ldrb	w0, [x0]
  405678:	cmp	w0, #0x0
  40567c:	cset	w0, ne  // ne = any
  405680:	and	w0, w0, #0xff
  405684:	b	405698 <ferror@plt+0x39b8>
  405688:	ldr	x0, [sp, #80]
  40568c:	cmp	x0, #0x1
  405690:	cset	w0, ne  // ne = any
  405694:	and	w0, w0, #0xff
  405698:	cmp	w0, #0x0
  40569c:	b.ne	405d20 <ferror@plt+0x4040>  // b.any
  4056a0:	ldr	x0, [sp, #232]
  4056a4:	cmp	x0, #0x0
  4056a8:	b.ne	405d28 <ferror@plt+0x4048>  // b.any
  4056ac:	mov	w0, #0x1                   	// #1
  4056b0:	strb	w0, [sp, #190]
  4056b4:	ldr	w0, [sp, #76]
  4056b8:	cmp	w0, #0x2
  4056bc:	b.ne	405d30 <ferror@plt+0x4050>  // b.any
  4056c0:	ldrb	w0, [sp, #198]
  4056c4:	cmp	w0, #0x0
  4056c8:	b.eq	405d30 <ferror@plt+0x4050>  // b.none
  4056cc:	b	40618c <ferror@plt+0x44ac>
  4056d0:	mov	w0, #0x1                   	// #1
  4056d4:	strb	w0, [sp, #196]
  4056d8:	mov	w0, #0x1                   	// #1
  4056dc:	strb	w0, [sp, #190]
  4056e0:	ldr	w0, [sp, #76]
  4056e4:	cmp	w0, #0x2
  4056e8:	b.ne	405d38 <ferror@plt+0x4058>  // b.any
  4056ec:	ldrb	w0, [sp, #198]
  4056f0:	cmp	w0, #0x0
  4056f4:	b.ne	406170 <ferror@plt+0x4490>  // b.any
  4056f8:	ldr	x0, [sp, #96]
  4056fc:	cmp	x0, #0x0
  405700:	b.eq	40571c <ferror@plt+0x3a3c>  // b.none
  405704:	ldr	x0, [sp, #216]
  405708:	cmp	x0, #0x0
  40570c:	b.ne	40571c <ferror@plt+0x3a3c>  // b.any
  405710:	ldr	x0, [sp, #96]
  405714:	str	x0, [sp, #216]
  405718:	str	xzr, [sp, #96]
  40571c:	ldr	x1, [sp, #224]
  405720:	ldr	x0, [sp, #96]
  405724:	cmp	x1, x0
  405728:	b.cs	405740 <ferror@plt+0x3a60>  // b.hs, b.nlast
  40572c:	ldr	x1, [sp, #104]
  405730:	ldr	x0, [sp, #224]
  405734:	add	x0, x1, x0
  405738:	mov	w1, #0x27                  	// #39
  40573c:	strb	w1, [x0]
  405740:	ldr	x0, [sp, #224]
  405744:	add	x0, x0, #0x1
  405748:	str	x0, [sp, #224]
  40574c:	ldr	x1, [sp, #224]
  405750:	ldr	x0, [sp, #96]
  405754:	cmp	x1, x0
  405758:	b.cs	405770 <ferror@plt+0x3a90>  // b.hs, b.nlast
  40575c:	ldr	x1, [sp, #104]
  405760:	ldr	x0, [sp, #224]
  405764:	add	x0, x1, x0
  405768:	mov	w1, #0x5c                  	// #92
  40576c:	strb	w1, [x0]
  405770:	ldr	x0, [sp, #224]
  405774:	add	x0, x0, #0x1
  405778:	str	x0, [sp, #224]
  40577c:	ldr	x1, [sp, #224]
  405780:	ldr	x0, [sp, #96]
  405784:	cmp	x1, x0
  405788:	b.cs	4057a0 <ferror@plt+0x3ac0>  // b.hs, b.nlast
  40578c:	ldr	x1, [sp, #104]
  405790:	ldr	x0, [sp, #224]
  405794:	add	x0, x1, x0
  405798:	mov	w1, #0x27                  	// #39
  40579c:	strb	w1, [x0]
  4057a0:	ldr	x0, [sp, #224]
  4057a4:	add	x0, x0, #0x1
  4057a8:	str	x0, [sp, #224]
  4057ac:	strb	wzr, [sp, #197]
  4057b0:	b	405d38 <ferror@plt+0x4058>
  4057b4:	mov	w0, #0x1                   	// #1
  4057b8:	strb	w0, [sp, #190]
  4057bc:	b	405d3c <ferror@plt+0x405c>
  4057c0:	ldrb	w0, [sp, #159]
  4057c4:	cmp	w0, #0x0
  4057c8:	b.eq	405800 <ferror@plt+0x3b20>  // b.none
  4057cc:	mov	x0, #0x1                   	// #1
  4057d0:	str	x0, [sp, #176]
  4057d4:	bl	401b80 <__ctype_b_loc@plt>
  4057d8:	ldr	x1, [x0]
  4057dc:	ldrb	w0, [sp, #194]
  4057e0:	lsl	x0, x0, #1
  4057e4:	add	x0, x1, x0
  4057e8:	ldrh	w0, [x0]
  4057ec:	and	w0, w0, #0x4000
  4057f0:	cmp	w0, #0x0
  4057f4:	cset	w0, ne  // ne = any
  4057f8:	strb	w0, [sp, #175]
  4057fc:	b	4059dc <ferror@plt+0x3cfc>
  405800:	add	x0, sp, #0x80
  405804:	mov	x2, #0x8                   	// #8
  405808:	mov	w1, #0x0                   	// #0
  40580c:	bl	401a70 <memset@plt>
  405810:	str	xzr, [sp, #176]
  405814:	mov	w0, #0x1                   	// #1
  405818:	strb	w0, [sp, #175]
  40581c:	ldr	x0, [sp, #80]
  405820:	cmn	x0, #0x1
  405824:	b.ne	405834 <ferror@plt+0x3b54>  // b.any
  405828:	ldr	x0, [sp, #88]
  40582c:	bl	401900 <strlen@plt>
  405830:	str	x0, [sp, #80]
  405834:	ldr	x1, [sp, #232]
  405838:	ldr	x0, [sp, #176]
  40583c:	add	x0, x1, x0
  405840:	ldr	x1, [sp, #88]
  405844:	add	x4, x1, x0
  405848:	ldr	x1, [sp, #232]
  40584c:	ldr	x0, [sp, #176]
  405850:	add	x0, x1, x0
  405854:	ldr	x1, [sp, #80]
  405858:	sub	x1, x1, x0
  40585c:	add	x2, sp, #0x80
  405860:	add	x0, sp, #0x7c
  405864:	mov	x3, x2
  405868:	mov	x2, x1
  40586c:	mov	x1, x4
  405870:	bl	408348 <ferror@plt+0x6668>
  405874:	str	x0, [sp, #144]
  405878:	ldr	x0, [sp, #144]
  40587c:	cmp	x0, #0x0
  405880:	b.eq	4059d0 <ferror@plt+0x3cf0>  // b.none
  405884:	ldr	x0, [sp, #144]
  405888:	cmn	x0, #0x1
  40588c:	b.ne	405898 <ferror@plt+0x3bb8>  // b.any
  405890:	strb	wzr, [sp, #175]
  405894:	b	4059dc <ferror@plt+0x3cfc>
  405898:	ldr	x0, [sp, #144]
  40589c:	cmn	x0, #0x2
  4058a0:	b.ne	4058f4 <ferror@plt+0x3c14>  // b.any
  4058a4:	strb	wzr, [sp, #175]
  4058a8:	b	4058b8 <ferror@plt+0x3bd8>
  4058ac:	ldr	x0, [sp, #176]
  4058b0:	add	x0, x0, #0x1
  4058b4:	str	x0, [sp, #176]
  4058b8:	ldr	x1, [sp, #232]
  4058bc:	ldr	x0, [sp, #176]
  4058c0:	add	x0, x1, x0
  4058c4:	ldr	x1, [sp, #80]
  4058c8:	cmp	x1, x0
  4058cc:	b.ls	4059d8 <ferror@plt+0x3cf8>  // b.plast
  4058d0:	ldr	x1, [sp, #232]
  4058d4:	ldr	x0, [sp, #176]
  4058d8:	add	x0, x1, x0
  4058dc:	ldr	x1, [sp, #88]
  4058e0:	add	x0, x1, x0
  4058e4:	ldrb	w0, [x0]
  4058e8:	cmp	w0, #0x0
  4058ec:	b.ne	4058ac <ferror@plt+0x3bcc>  // b.any
  4058f0:	b	4059d8 <ferror@plt+0x3cf8>
  4058f4:	ldrb	w0, [sp, #198]
  4058f8:	cmp	w0, #0x0
  4058fc:	b.eq	405998 <ferror@plt+0x3cb8>  // b.none
  405900:	ldr	w0, [sp, #76]
  405904:	cmp	w0, #0x2
  405908:	b.ne	405998 <ferror@plt+0x3cb8>  // b.any
  40590c:	mov	x0, #0x1                   	// #1
  405910:	str	x0, [sp, #160]
  405914:	b	405988 <ferror@plt+0x3ca8>
  405918:	ldr	x1, [sp, #232]
  40591c:	ldr	x0, [sp, #176]
  405920:	add	x1, x1, x0
  405924:	ldr	x0, [sp, #160]
  405928:	add	x0, x1, x0
  40592c:	ldr	x1, [sp, #88]
  405930:	add	x0, x1, x0
  405934:	ldrb	w0, [x0]
  405938:	sub	w0, w0, #0x5b
  40593c:	cmp	w0, #0x21
  405940:	cset	w1, hi  // hi = pmore
  405944:	and	w1, w1, #0xff
  405948:	cmp	w1, #0x0
  40594c:	b.ne	405978 <ferror@plt+0x3c98>  // b.any
  405950:	mov	x1, #0x1                   	// #1
  405954:	lsl	x1, x1, x0
  405958:	mov	x0, #0x2b                  	// #43
  40595c:	movk	x0, #0x2, lsl #32
  405960:	and	x0, x1, x0
  405964:	cmp	x0, #0x0
  405968:	cset	w0, ne  // ne = any
  40596c:	and	w0, w0, #0xff
  405970:	cmp	w0, #0x0
  405974:	b.ne	40618c <ferror@plt+0x44ac>  // b.any
  405978:	nop
  40597c:	ldr	x0, [sp, #160]
  405980:	add	x0, x0, #0x1
  405984:	str	x0, [sp, #160]
  405988:	ldr	x1, [sp, #160]
  40598c:	ldr	x0, [sp, #144]
  405990:	cmp	x1, x0
  405994:	b.cc	405918 <ferror@plt+0x3c38>  // b.lo, b.ul, b.last
  405998:	ldr	w0, [sp, #124]
  40599c:	bl	401c50 <iswprint@plt>
  4059a0:	cmp	w0, #0x0
  4059a4:	b.ne	4059ac <ferror@plt+0x3ccc>  // b.any
  4059a8:	strb	wzr, [sp, #175]
  4059ac:	ldr	x1, [sp, #176]
  4059b0:	ldr	x0, [sp, #144]
  4059b4:	add	x0, x1, x0
  4059b8:	str	x0, [sp, #176]
  4059bc:	add	x0, sp, #0x80
  4059c0:	bl	401b20 <mbsinit@plt>
  4059c4:	cmp	w0, #0x0
  4059c8:	b.eq	405834 <ferror@plt+0x3b54>  // b.none
  4059cc:	b	4059dc <ferror@plt+0x3cfc>
  4059d0:	nop
  4059d4:	b	4059dc <ferror@plt+0x3cfc>
  4059d8:	nop
  4059dc:	ldrb	w0, [sp, #175]
  4059e0:	strb	w0, [sp, #190]
  4059e4:	ldr	x0, [sp, #176]
  4059e8:	cmp	x0, #0x1
  4059ec:	b.hi	405a10 <ferror@plt+0x3d30>  // b.pmore
  4059f0:	ldrb	w0, [sp, #199]
  4059f4:	cmp	w0, #0x0
  4059f8:	b.eq	405d3c <ferror@plt+0x405c>  // b.none
  4059fc:	ldrb	w0, [sp, #175]
  405a00:	eor	w0, w0, #0x1
  405a04:	and	w0, w0, #0xff
  405a08:	cmp	w0, #0x0
  405a0c:	b.eq	405d3c <ferror@plt+0x405c>  // b.none
  405a10:	ldr	x1, [sp, #232]
  405a14:	ldr	x0, [sp, #176]
  405a18:	add	x0, x1, x0
  405a1c:	str	x0, [sp, #136]
  405a20:	ldrb	w0, [sp, #199]
  405a24:	cmp	w0, #0x0
  405a28:	b.eq	405bdc <ferror@plt+0x3efc>  // b.none
  405a2c:	ldrb	w0, [sp, #175]
  405a30:	eor	w0, w0, #0x1
  405a34:	and	w0, w0, #0xff
  405a38:	cmp	w0, #0x0
  405a3c:	b.eq	405bdc <ferror@plt+0x3efc>  // b.none
  405a40:	ldrb	w0, [sp, #198]
  405a44:	cmp	w0, #0x0
  405a48:	b.ne	406178 <ferror@plt+0x4498>  // b.any
  405a4c:	mov	w0, #0x1                   	// #1
  405a50:	strb	w0, [sp, #191]
  405a54:	ldr	w0, [sp, #76]
  405a58:	cmp	w0, #0x2
  405a5c:	b.ne	405b0c <ferror@plt+0x3e2c>  // b.any
  405a60:	ldrb	w0, [sp, #197]
  405a64:	eor	w0, w0, #0x1
  405a68:	and	w0, w0, #0xff
  405a6c:	cmp	w0, #0x0
  405a70:	b.eq	405b0c <ferror@plt+0x3e2c>  // b.none
  405a74:	ldr	x1, [sp, #224]
  405a78:	ldr	x0, [sp, #96]
  405a7c:	cmp	x1, x0
  405a80:	b.cs	405a98 <ferror@plt+0x3db8>  // b.hs, b.nlast
  405a84:	ldr	x1, [sp, #104]
  405a88:	ldr	x0, [sp, #224]
  405a8c:	add	x0, x1, x0
  405a90:	mov	w1, #0x27                  	// #39
  405a94:	strb	w1, [x0]
  405a98:	ldr	x0, [sp, #224]
  405a9c:	add	x0, x0, #0x1
  405aa0:	str	x0, [sp, #224]
  405aa4:	ldr	x1, [sp, #224]
  405aa8:	ldr	x0, [sp, #96]
  405aac:	cmp	x1, x0
  405ab0:	b.cs	405ac8 <ferror@plt+0x3de8>  // b.hs, b.nlast
  405ab4:	ldr	x1, [sp, #104]
  405ab8:	ldr	x0, [sp, #224]
  405abc:	add	x0, x1, x0
  405ac0:	mov	w1, #0x24                  	// #36
  405ac4:	strb	w1, [x0]
  405ac8:	ldr	x0, [sp, #224]
  405acc:	add	x0, x0, #0x1
  405ad0:	str	x0, [sp, #224]
  405ad4:	ldr	x1, [sp, #224]
  405ad8:	ldr	x0, [sp, #96]
  405adc:	cmp	x1, x0
  405ae0:	b.cs	405af8 <ferror@plt+0x3e18>  // b.hs, b.nlast
  405ae4:	ldr	x1, [sp, #104]
  405ae8:	ldr	x0, [sp, #224]
  405aec:	add	x0, x1, x0
  405af0:	mov	w1, #0x27                  	// #39
  405af4:	strb	w1, [x0]
  405af8:	ldr	x0, [sp, #224]
  405afc:	add	x0, x0, #0x1
  405b00:	str	x0, [sp, #224]
  405b04:	mov	w0, #0x1                   	// #1
  405b08:	strb	w0, [sp, #197]
  405b0c:	ldr	x1, [sp, #224]
  405b10:	ldr	x0, [sp, #96]
  405b14:	cmp	x1, x0
  405b18:	b.cs	405b30 <ferror@plt+0x3e50>  // b.hs, b.nlast
  405b1c:	ldr	x1, [sp, #104]
  405b20:	ldr	x0, [sp, #224]
  405b24:	add	x0, x1, x0
  405b28:	mov	w1, #0x5c                  	// #92
  405b2c:	strb	w1, [x0]
  405b30:	ldr	x0, [sp, #224]
  405b34:	add	x0, x0, #0x1
  405b38:	str	x0, [sp, #224]
  405b3c:	ldr	x1, [sp, #224]
  405b40:	ldr	x0, [sp, #96]
  405b44:	cmp	x1, x0
  405b48:	b.cs	405b70 <ferror@plt+0x3e90>  // b.hs, b.nlast
  405b4c:	ldrb	w0, [sp, #194]
  405b50:	lsr	w0, w0, #6
  405b54:	and	w1, w0, #0xff
  405b58:	ldr	x2, [sp, #104]
  405b5c:	ldr	x0, [sp, #224]
  405b60:	add	x0, x2, x0
  405b64:	add	w1, w1, #0x30
  405b68:	and	w1, w1, #0xff
  405b6c:	strb	w1, [x0]
  405b70:	ldr	x0, [sp, #224]
  405b74:	add	x0, x0, #0x1
  405b78:	str	x0, [sp, #224]
  405b7c:	ldr	x1, [sp, #224]
  405b80:	ldr	x0, [sp, #96]
  405b84:	cmp	x1, x0
  405b88:	b.cs	405bb8 <ferror@plt+0x3ed8>  // b.hs, b.nlast
  405b8c:	ldrb	w0, [sp, #194]
  405b90:	lsr	w0, w0, #3
  405b94:	and	w0, w0, #0xff
  405b98:	and	w0, w0, #0x7
  405b9c:	and	w1, w0, #0xff
  405ba0:	ldr	x2, [sp, #104]
  405ba4:	ldr	x0, [sp, #224]
  405ba8:	add	x0, x2, x0
  405bac:	add	w1, w1, #0x30
  405bb0:	and	w1, w1, #0xff
  405bb4:	strb	w1, [x0]
  405bb8:	ldr	x0, [sp, #224]
  405bbc:	add	x0, x0, #0x1
  405bc0:	str	x0, [sp, #224]
  405bc4:	ldrb	w0, [sp, #194]
  405bc8:	and	w0, w0, #0x7
  405bcc:	and	w0, w0, #0xff
  405bd0:	add	w0, w0, #0x30
  405bd4:	strb	w0, [sp, #194]
  405bd8:	b	405c1c <ferror@plt+0x3f3c>
  405bdc:	ldrb	w0, [sp, #192]
  405be0:	cmp	w0, #0x0
  405be4:	b.eq	405c1c <ferror@plt+0x3f3c>  // b.none
  405be8:	ldr	x1, [sp, #224]
  405bec:	ldr	x0, [sp, #96]
  405bf0:	cmp	x1, x0
  405bf4:	b.cs	405c0c <ferror@plt+0x3f2c>  // b.hs, b.nlast
  405bf8:	ldr	x1, [sp, #104]
  405bfc:	ldr	x0, [sp, #224]
  405c00:	add	x0, x1, x0
  405c04:	mov	w1, #0x5c                  	// #92
  405c08:	strb	w1, [x0]
  405c0c:	ldr	x0, [sp, #224]
  405c10:	add	x0, x0, #0x1
  405c14:	str	x0, [sp, #224]
  405c18:	strb	wzr, [sp, #192]
  405c1c:	ldr	x0, [sp, #232]
  405c20:	add	x0, x0, #0x1
  405c24:	ldr	x1, [sp, #136]
  405c28:	cmp	x1, x0
  405c2c:	b.ls	405d08 <ferror@plt+0x4028>  // b.plast
  405c30:	ldrb	w0, [sp, #197]
  405c34:	cmp	w0, #0x0
  405c38:	b.eq	405cb4 <ferror@plt+0x3fd4>  // b.none
  405c3c:	ldrb	w0, [sp, #191]
  405c40:	eor	w0, w0, #0x1
  405c44:	and	w0, w0, #0xff
  405c48:	cmp	w0, #0x0
  405c4c:	b.eq	405cb4 <ferror@plt+0x3fd4>  // b.none
  405c50:	ldr	x1, [sp, #224]
  405c54:	ldr	x0, [sp, #96]
  405c58:	cmp	x1, x0
  405c5c:	b.cs	405c74 <ferror@plt+0x3f94>  // b.hs, b.nlast
  405c60:	ldr	x1, [sp, #104]
  405c64:	ldr	x0, [sp, #224]
  405c68:	add	x0, x1, x0
  405c6c:	mov	w1, #0x27                  	// #39
  405c70:	strb	w1, [x0]
  405c74:	ldr	x0, [sp, #224]
  405c78:	add	x0, x0, #0x1
  405c7c:	str	x0, [sp, #224]
  405c80:	ldr	x1, [sp, #224]
  405c84:	ldr	x0, [sp, #96]
  405c88:	cmp	x1, x0
  405c8c:	b.cs	405ca4 <ferror@plt+0x3fc4>  // b.hs, b.nlast
  405c90:	ldr	x1, [sp, #104]
  405c94:	ldr	x0, [sp, #224]
  405c98:	add	x0, x1, x0
  405c9c:	mov	w1, #0x27                  	// #39
  405ca0:	strb	w1, [x0]
  405ca4:	ldr	x0, [sp, #224]
  405ca8:	add	x0, x0, #0x1
  405cac:	str	x0, [sp, #224]
  405cb0:	strb	wzr, [sp, #197]
  405cb4:	ldr	x1, [sp, #224]
  405cb8:	ldr	x0, [sp, #96]
  405cbc:	cmp	x1, x0
  405cc0:	b.cs	405cd8 <ferror@plt+0x3ff8>  // b.hs, b.nlast
  405cc4:	ldr	x1, [sp, #104]
  405cc8:	ldr	x0, [sp, #224]
  405ccc:	add	x0, x1, x0
  405cd0:	ldrb	w1, [sp, #194]
  405cd4:	strb	w1, [x0]
  405cd8:	ldr	x0, [sp, #224]
  405cdc:	add	x0, x0, #0x1
  405ce0:	str	x0, [sp, #224]
  405ce4:	ldr	x0, [sp, #232]
  405ce8:	add	x0, x0, #0x1
  405cec:	str	x0, [sp, #232]
  405cf0:	ldr	x1, [sp, #88]
  405cf4:	ldr	x0, [sp, #232]
  405cf8:	add	x0, x1, x0
  405cfc:	ldrb	w0, [x0]
  405d00:	strb	w0, [sp, #194]
  405d04:	b	405a20 <ferror@plt+0x3d40>
  405d08:	nop
  405d0c:	b	405ee0 <ferror@plt+0x4200>
  405d10:	nop
  405d14:	b	405d3c <ferror@plt+0x405c>
  405d18:	nop
  405d1c:	b	405d3c <ferror@plt+0x405c>
  405d20:	nop
  405d24:	b	405d3c <ferror@plt+0x405c>
  405d28:	nop
  405d2c:	b	405d3c <ferror@plt+0x405c>
  405d30:	nop
  405d34:	b	405d3c <ferror@plt+0x405c>
  405d38:	nop
  405d3c:	ldrb	w0, [sp, #199]
  405d40:	eor	w0, w0, #0x1
  405d44:	and	w0, w0, #0xff
  405d48:	cmp	w0, #0x0
  405d4c:	b.ne	405d5c <ferror@plt+0x407c>  // b.any
  405d50:	ldr	w0, [sp, #76]
  405d54:	cmp	w0, #0x2
  405d58:	b.ne	405d70 <ferror@plt+0x4090>  // b.any
  405d5c:	ldrb	w0, [sp, #198]
  405d60:	eor	w0, w0, #0x1
  405d64:	and	w0, w0, #0xff
  405d68:	cmp	w0, #0x0
  405d6c:	b.ne	405db4 <ferror@plt+0x40d4>  // b.any
  405d70:	ldr	x0, [sp, #64]
  405d74:	cmp	x0, #0x0
  405d78:	b.eq	405db4 <ferror@plt+0x40d4>  // b.none
  405d7c:	ldrb	w0, [sp, #194]
  405d80:	lsr	w0, w0, #5
  405d84:	and	w0, w0, #0xff
  405d88:	and	x0, x0, #0xff
  405d8c:	lsl	x0, x0, #2
  405d90:	ldr	x1, [sp, #64]
  405d94:	add	x0, x1, x0
  405d98:	ldr	w1, [x0]
  405d9c:	ldrb	w0, [sp, #194]
  405da0:	and	w0, w0, #0x1f
  405da4:	lsr	w0, w1, w0
  405da8:	and	w0, w0, #0x1
  405dac:	cmp	w0, #0x0
  405db0:	b.ne	405dc8 <ferror@plt+0x40e8>  // b.any
  405db4:	ldrb	w0, [sp, #192]
  405db8:	eor	w0, w0, #0x1
  405dbc:	and	w0, w0, #0xff
  405dc0:	cmp	w0, #0x0
  405dc4:	b.ne	405edc <ferror@plt+0x41fc>  // b.any
  405dc8:	nop
  405dcc:	ldrb	w0, [sp, #198]
  405dd0:	cmp	w0, #0x0
  405dd4:	b.ne	406180 <ferror@plt+0x44a0>  // b.any
  405dd8:	mov	w0, #0x1                   	// #1
  405ddc:	strb	w0, [sp, #191]
  405de0:	ldr	w0, [sp, #76]
  405de4:	cmp	w0, #0x2
  405de8:	b.ne	405e98 <ferror@plt+0x41b8>  // b.any
  405dec:	ldrb	w0, [sp, #197]
  405df0:	eor	w0, w0, #0x1
  405df4:	and	w0, w0, #0xff
  405df8:	cmp	w0, #0x0
  405dfc:	b.eq	405e98 <ferror@plt+0x41b8>  // b.none
  405e00:	ldr	x1, [sp, #224]
  405e04:	ldr	x0, [sp, #96]
  405e08:	cmp	x1, x0
  405e0c:	b.cs	405e24 <ferror@plt+0x4144>  // b.hs, b.nlast
  405e10:	ldr	x1, [sp, #104]
  405e14:	ldr	x0, [sp, #224]
  405e18:	add	x0, x1, x0
  405e1c:	mov	w1, #0x27                  	// #39
  405e20:	strb	w1, [x0]
  405e24:	ldr	x0, [sp, #224]
  405e28:	add	x0, x0, #0x1
  405e2c:	str	x0, [sp, #224]
  405e30:	ldr	x1, [sp, #224]
  405e34:	ldr	x0, [sp, #96]
  405e38:	cmp	x1, x0
  405e3c:	b.cs	405e54 <ferror@plt+0x4174>  // b.hs, b.nlast
  405e40:	ldr	x1, [sp, #104]
  405e44:	ldr	x0, [sp, #224]
  405e48:	add	x0, x1, x0
  405e4c:	mov	w1, #0x24                  	// #36
  405e50:	strb	w1, [x0]
  405e54:	ldr	x0, [sp, #224]
  405e58:	add	x0, x0, #0x1
  405e5c:	str	x0, [sp, #224]
  405e60:	ldr	x1, [sp, #224]
  405e64:	ldr	x0, [sp, #96]
  405e68:	cmp	x1, x0
  405e6c:	b.cs	405e84 <ferror@plt+0x41a4>  // b.hs, b.nlast
  405e70:	ldr	x1, [sp, #104]
  405e74:	ldr	x0, [sp, #224]
  405e78:	add	x0, x1, x0
  405e7c:	mov	w1, #0x27                  	// #39
  405e80:	strb	w1, [x0]
  405e84:	ldr	x0, [sp, #224]
  405e88:	add	x0, x0, #0x1
  405e8c:	str	x0, [sp, #224]
  405e90:	mov	w0, #0x1                   	// #1
  405e94:	strb	w0, [sp, #197]
  405e98:	ldr	x1, [sp, #224]
  405e9c:	ldr	x0, [sp, #96]
  405ea0:	cmp	x1, x0
  405ea4:	b.cs	405ebc <ferror@plt+0x41dc>  // b.hs, b.nlast
  405ea8:	ldr	x1, [sp, #104]
  405eac:	ldr	x0, [sp, #224]
  405eb0:	add	x0, x1, x0
  405eb4:	mov	w1, #0x5c                  	// #92
  405eb8:	strb	w1, [x0]
  405ebc:	ldr	x0, [sp, #224]
  405ec0:	add	x0, x0, #0x1
  405ec4:	str	x0, [sp, #224]
  405ec8:	b	405ee0 <ferror@plt+0x4200>
  405ecc:	nop
  405ed0:	b	405ee0 <ferror@plt+0x4200>
  405ed4:	nop
  405ed8:	b	405ee0 <ferror@plt+0x4200>
  405edc:	nop
  405ee0:	ldrb	w0, [sp, #197]
  405ee4:	cmp	w0, #0x0
  405ee8:	b.eq	405f64 <ferror@plt+0x4284>  // b.none
  405eec:	ldrb	w0, [sp, #191]
  405ef0:	eor	w0, w0, #0x1
  405ef4:	and	w0, w0, #0xff
  405ef8:	cmp	w0, #0x0
  405efc:	b.eq	405f64 <ferror@plt+0x4284>  // b.none
  405f00:	ldr	x1, [sp, #224]
  405f04:	ldr	x0, [sp, #96]
  405f08:	cmp	x1, x0
  405f0c:	b.cs	405f24 <ferror@plt+0x4244>  // b.hs, b.nlast
  405f10:	ldr	x1, [sp, #104]
  405f14:	ldr	x0, [sp, #224]
  405f18:	add	x0, x1, x0
  405f1c:	mov	w1, #0x27                  	// #39
  405f20:	strb	w1, [x0]
  405f24:	ldr	x0, [sp, #224]
  405f28:	add	x0, x0, #0x1
  405f2c:	str	x0, [sp, #224]
  405f30:	ldr	x1, [sp, #224]
  405f34:	ldr	x0, [sp, #96]
  405f38:	cmp	x1, x0
  405f3c:	b.cs	405f54 <ferror@plt+0x4274>  // b.hs, b.nlast
  405f40:	ldr	x1, [sp, #104]
  405f44:	ldr	x0, [sp, #224]
  405f48:	add	x0, x1, x0
  405f4c:	mov	w1, #0x27                  	// #39
  405f50:	strb	w1, [x0]
  405f54:	ldr	x0, [sp, #224]
  405f58:	add	x0, x0, #0x1
  405f5c:	str	x0, [sp, #224]
  405f60:	strb	wzr, [sp, #197]
  405f64:	ldr	x1, [sp, #224]
  405f68:	ldr	x0, [sp, #96]
  405f6c:	cmp	x1, x0
  405f70:	b.cs	405f88 <ferror@plt+0x42a8>  // b.hs, b.nlast
  405f74:	ldr	x1, [sp, #104]
  405f78:	ldr	x0, [sp, #224]
  405f7c:	add	x0, x1, x0
  405f80:	ldrb	w1, [sp, #194]
  405f84:	strb	w1, [x0]
  405f88:	ldr	x0, [sp, #224]
  405f8c:	add	x0, x0, #0x1
  405f90:	str	x0, [sp, #224]
  405f94:	ldrb	w0, [sp, #190]
  405f98:	eor	w0, w0, #0x1
  405f9c:	and	w0, w0, #0xff
  405fa0:	cmp	w0, #0x0
  405fa4:	b.eq	405fac <ferror@plt+0x42cc>  // b.none
  405fa8:	strb	wzr, [sp, #195]
  405fac:	ldr	x0, [sp, #232]
  405fb0:	add	x0, x0, #0x1
  405fb4:	str	x0, [sp, #232]
  405fb8:	ldr	x0, [sp, #80]
  405fbc:	cmn	x0, #0x1
  405fc0:	b.ne	405fe4 <ferror@plt+0x4304>  // b.any
  405fc4:	ldr	x1, [sp, #88]
  405fc8:	ldr	x0, [sp, #232]
  405fcc:	add	x0, x1, x0
  405fd0:	ldrb	w0, [x0]
  405fd4:	cmp	w0, #0x0
  405fd8:	cset	w0, ne  // ne = any
  405fdc:	and	w0, w0, #0xff
  405fe0:	b	405ff8 <ferror@plt+0x4318>
  405fe4:	ldr	x1, [sp, #232]
  405fe8:	ldr	x0, [sp, #80]
  405fec:	cmp	x1, x0
  405ff0:	cset	w0, ne  // ne = any
  405ff4:	and	w0, w0, #0xff
  405ff8:	cmp	w0, #0x0
  405ffc:	b.ne	405104 <ferror@plt+0x3424>  // b.any
  406000:	ldr	x0, [sp, #224]
  406004:	cmp	x0, #0x0
  406008:	b.ne	406024 <ferror@plt+0x4344>  // b.any
  40600c:	ldr	w0, [sp, #76]
  406010:	cmp	w0, #0x2
  406014:	b.ne	406024 <ferror@plt+0x4344>  // b.any
  406018:	ldrb	w0, [sp, #198]
  40601c:	cmp	w0, #0x0
  406020:	b.ne	406188 <ferror@plt+0x44a8>  // b.any
  406024:	ldr	w0, [sp, #76]
  406028:	cmp	w0, #0x2
  40602c:	b.ne	4060b4 <ferror@plt+0x43d4>  // b.any
  406030:	ldrb	w0, [sp, #198]
  406034:	eor	w0, w0, #0x1
  406038:	and	w0, w0, #0xff
  40603c:	cmp	w0, #0x0
  406040:	b.eq	4060b4 <ferror@plt+0x43d4>  // b.none
  406044:	ldrb	w0, [sp, #196]
  406048:	cmp	w0, #0x0
  40604c:	b.eq	4060b4 <ferror@plt+0x43d4>  // b.none
  406050:	ldrb	w0, [sp, #195]
  406054:	cmp	w0, #0x0
  406058:	b.eq	40608c <ferror@plt+0x43ac>  // b.none
  40605c:	ldr	x0, [sp, #240]
  406060:	str	x0, [sp]
  406064:	ldr	x7, [sp, #56]
  406068:	ldr	x6, [sp, #64]
  40606c:	ldr	w5, [sp, #72]
  406070:	mov	w4, #0x5                   	// #5
  406074:	ldr	x3, [sp, #80]
  406078:	ldr	x2, [sp, #88]
  40607c:	ldr	x1, [sp, #216]
  406080:	ldr	x0, [sp, #104]
  406084:	bl	404ddc <ferror@plt+0x30fc>
  406088:	b	4061e0 <ferror@plt+0x4500>
  40608c:	ldr	x0, [sp, #96]
  406090:	cmp	x0, #0x0
  406094:	b.ne	4060b4 <ferror@plt+0x43d4>  // b.any
  406098:	ldr	x0, [sp, #216]
  40609c:	cmp	x0, #0x0
  4060a0:	b.eq	4060b4 <ferror@plt+0x43d4>  // b.none
  4060a4:	ldr	x0, [sp, #216]
  4060a8:	str	x0, [sp, #96]
  4060ac:	str	xzr, [sp, #224]
  4060b0:	b	404e54 <ferror@plt+0x3174>
  4060b4:	ldr	x0, [sp, #208]
  4060b8:	cmp	x0, #0x0
  4060bc:	b.eq	406128 <ferror@plt+0x4448>  // b.none
  4060c0:	ldrb	w0, [sp, #198]
  4060c4:	eor	w0, w0, #0x1
  4060c8:	and	w0, w0, #0xff
  4060cc:	cmp	w0, #0x0
  4060d0:	b.eq	406128 <ferror@plt+0x4448>  // b.none
  4060d4:	b	406118 <ferror@plt+0x4438>
  4060d8:	ldr	x1, [sp, #224]
  4060dc:	ldr	x0, [sp, #96]
  4060e0:	cmp	x1, x0
  4060e4:	b.cs	406100 <ferror@plt+0x4420>  // b.hs, b.nlast
  4060e8:	ldr	x1, [sp, #104]
  4060ec:	ldr	x0, [sp, #224]
  4060f0:	add	x0, x1, x0
  4060f4:	ldr	x1, [sp, #208]
  4060f8:	ldrb	w1, [x1]
  4060fc:	strb	w1, [x0]
  406100:	ldr	x0, [sp, #224]
  406104:	add	x0, x0, #0x1
  406108:	str	x0, [sp, #224]
  40610c:	ldr	x0, [sp, #208]
  406110:	add	x0, x0, #0x1
  406114:	str	x0, [sp, #208]
  406118:	ldr	x0, [sp, #208]
  40611c:	ldrb	w0, [x0]
  406120:	cmp	w0, #0x0
  406124:	b.ne	4060d8 <ferror@plt+0x43f8>  // b.any
  406128:	ldr	x1, [sp, #224]
  40612c:	ldr	x0, [sp, #96]
  406130:	cmp	x1, x0
  406134:	b.cs	406148 <ferror@plt+0x4468>  // b.hs, b.nlast
  406138:	ldr	x1, [sp, #104]
  40613c:	ldr	x0, [sp, #224]
  406140:	add	x0, x1, x0
  406144:	strb	wzr, [x0]
  406148:	ldr	x0, [sp, #224]
  40614c:	b	4061e0 <ferror@plt+0x4500>
  406150:	nop
  406154:	b	40618c <ferror@plt+0x44ac>
  406158:	nop
  40615c:	b	40618c <ferror@plt+0x44ac>
  406160:	nop
  406164:	b	40618c <ferror@plt+0x44ac>
  406168:	nop
  40616c:	b	40618c <ferror@plt+0x44ac>
  406170:	nop
  406174:	b	40618c <ferror@plt+0x44ac>
  406178:	nop
  40617c:	b	40618c <ferror@plt+0x44ac>
  406180:	nop
  406184:	b	40618c <ferror@plt+0x44ac>
  406188:	nop
  40618c:	ldr	w0, [sp, #76]
  406190:	cmp	w0, #0x2
  406194:	b.ne	4061ac <ferror@plt+0x44cc>  // b.any
  406198:	ldrb	w0, [sp, #199]
  40619c:	cmp	w0, #0x0
  4061a0:	b.eq	4061ac <ferror@plt+0x44cc>  // b.none
  4061a4:	mov	w0, #0x4                   	// #4
  4061a8:	str	w0, [sp, #76]
  4061ac:	ldr	w0, [sp, #72]
  4061b0:	and	w1, w0, #0xfffffffd
  4061b4:	ldr	x0, [sp, #240]
  4061b8:	str	x0, [sp]
  4061bc:	ldr	x7, [sp, #56]
  4061c0:	mov	x6, #0x0                   	// #0
  4061c4:	mov	w5, w1
  4061c8:	ldr	w4, [sp, #76]
  4061cc:	ldr	x3, [sp, #80]
  4061d0:	ldr	x2, [sp, #88]
  4061d4:	ldr	x1, [sp, #96]
  4061d8:	ldr	x0, [sp, #104]
  4061dc:	bl	404ddc <ferror@plt+0x30fc>
  4061e0:	ldr	x19, [sp, #32]
  4061e4:	ldp	x29, x30, [sp, #16]
  4061e8:	add	sp, sp, #0xf0
  4061ec:	ret
  4061f0:	sub	sp, sp, #0x70
  4061f4:	stp	x29, x30, [sp, #16]
  4061f8:	add	x29, sp, #0x10
  4061fc:	str	x0, [sp, #72]
  406200:	str	x1, [sp, #64]
  406204:	str	x2, [sp, #56]
  406208:	str	x3, [sp, #48]
  40620c:	str	x4, [sp, #40]
  406210:	ldr	x0, [sp, #40]
  406214:	cmp	x0, #0x0
  406218:	b.eq	406224 <ferror@plt+0x4544>  // b.none
  40621c:	ldr	x0, [sp, #40]
  406220:	b	40622c <ferror@plt+0x454c>
  406224:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  406228:	add	x0, x0, #0x340
  40622c:	str	x0, [sp, #104]
  406230:	bl	401c80 <__errno_location@plt>
  406234:	ldr	w0, [x0]
  406238:	str	w0, [sp, #100]
  40623c:	ldr	x0, [sp, #104]
  406240:	ldr	w1, [x0]
  406244:	ldr	x0, [sp, #104]
  406248:	ldr	w2, [x0, #4]
  40624c:	ldr	x0, [sp, #104]
  406250:	add	x3, x0, #0x8
  406254:	ldr	x0, [sp, #104]
  406258:	ldr	x4, [x0, #40]
  40625c:	ldr	x0, [sp, #104]
  406260:	ldr	x0, [x0, #48]
  406264:	str	x0, [sp]
  406268:	mov	x7, x4
  40626c:	mov	x6, x3
  406270:	mov	w5, w2
  406274:	mov	w4, w1
  406278:	ldr	x3, [sp, #48]
  40627c:	ldr	x2, [sp, #56]
  406280:	ldr	x1, [sp, #64]
  406284:	ldr	x0, [sp, #72]
  406288:	bl	404ddc <ferror@plt+0x30fc>
  40628c:	str	x0, [sp, #88]
  406290:	bl	401c80 <__errno_location@plt>
  406294:	mov	x1, x0
  406298:	ldr	w0, [sp, #100]
  40629c:	str	w0, [x1]
  4062a0:	ldr	x0, [sp, #88]
  4062a4:	ldp	x29, x30, [sp, #16]
  4062a8:	add	sp, sp, #0x70
  4062ac:	ret
  4062b0:	stp	x29, x30, [sp, #-48]!
  4062b4:	mov	x29, sp
  4062b8:	str	x0, [sp, #40]
  4062bc:	str	x1, [sp, #32]
  4062c0:	str	x2, [sp, #24]
  4062c4:	ldr	x3, [sp, #24]
  4062c8:	mov	x2, #0x0                   	// #0
  4062cc:	ldr	x1, [sp, #32]
  4062d0:	ldr	x0, [sp, #40]
  4062d4:	bl	4062e0 <ferror@plt+0x4600>
  4062d8:	ldp	x29, x30, [sp], #48
  4062dc:	ret
  4062e0:	sub	sp, sp, #0x60
  4062e4:	stp	x29, x30, [sp, #16]
  4062e8:	add	x29, sp, #0x10
  4062ec:	str	x0, [sp, #56]
  4062f0:	str	x1, [sp, #48]
  4062f4:	str	x2, [sp, #40]
  4062f8:	str	x3, [sp, #32]
  4062fc:	ldr	x0, [sp, #32]
  406300:	cmp	x0, #0x0
  406304:	b.eq	406310 <ferror@plt+0x4630>  // b.none
  406308:	ldr	x0, [sp, #32]
  40630c:	b	406318 <ferror@plt+0x4638>
  406310:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  406314:	add	x0, x0, #0x340
  406318:	str	x0, [sp, #88]
  40631c:	bl	401c80 <__errno_location@plt>
  406320:	ldr	w0, [x0]
  406324:	str	w0, [sp, #84]
  406328:	ldr	x0, [sp, #88]
  40632c:	ldr	w0, [x0, #4]
  406330:	ldr	x1, [sp, #40]
  406334:	cmp	x1, #0x0
  406338:	cset	w1, eq  // eq = none
  40633c:	and	w1, w1, #0xff
  406340:	orr	w0, w0, w1
  406344:	str	w0, [sp, #80]
  406348:	ldr	x0, [sp, #88]
  40634c:	ldr	w1, [x0]
  406350:	ldr	x0, [sp, #88]
  406354:	add	x2, x0, #0x8
  406358:	ldr	x0, [sp, #88]
  40635c:	ldr	x3, [x0, #40]
  406360:	ldr	x0, [sp, #88]
  406364:	ldr	x0, [x0, #48]
  406368:	str	x0, [sp]
  40636c:	mov	x7, x3
  406370:	mov	x6, x2
  406374:	ldr	w5, [sp, #80]
  406378:	mov	w4, w1
  40637c:	ldr	x3, [sp, #48]
  406380:	ldr	x2, [sp, #56]
  406384:	mov	x1, #0x0                   	// #0
  406388:	mov	x0, #0x0                   	// #0
  40638c:	bl	404ddc <ferror@plt+0x30fc>
  406390:	add	x0, x0, #0x1
  406394:	str	x0, [sp, #72]
  406398:	ldr	x0, [sp, #72]
  40639c:	bl	407ecc <ferror@plt+0x61ec>
  4063a0:	str	x0, [sp, #64]
  4063a4:	ldr	x0, [sp, #88]
  4063a8:	ldr	w1, [x0]
  4063ac:	ldr	x0, [sp, #88]
  4063b0:	add	x2, x0, #0x8
  4063b4:	ldr	x0, [sp, #88]
  4063b8:	ldr	x3, [x0, #40]
  4063bc:	ldr	x0, [sp, #88]
  4063c0:	ldr	x0, [x0, #48]
  4063c4:	str	x0, [sp]
  4063c8:	mov	x7, x3
  4063cc:	mov	x6, x2
  4063d0:	ldr	w5, [sp, #80]
  4063d4:	mov	w4, w1
  4063d8:	ldr	x3, [sp, #48]
  4063dc:	ldr	x2, [sp, #56]
  4063e0:	ldr	x1, [sp, #72]
  4063e4:	ldr	x0, [sp, #64]
  4063e8:	bl	404ddc <ferror@plt+0x30fc>
  4063ec:	bl	401c80 <__errno_location@plt>
  4063f0:	mov	x1, x0
  4063f4:	ldr	w0, [sp, #84]
  4063f8:	str	w0, [x1]
  4063fc:	ldr	x0, [sp, #40]
  406400:	cmp	x0, #0x0
  406404:	b.eq	406418 <ferror@plt+0x4738>  // b.none
  406408:	ldr	x0, [sp, #72]
  40640c:	sub	x1, x0, #0x1
  406410:	ldr	x0, [sp, #40]
  406414:	str	x1, [x0]
  406418:	ldr	x0, [sp, #64]
  40641c:	ldp	x29, x30, [sp, #16]
  406420:	add	sp, sp, #0x60
  406424:	ret
  406428:	stp	x29, x30, [sp, #-32]!
  40642c:	mov	x29, sp
  406430:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  406434:	add	x0, x0, #0x250
  406438:	ldr	x0, [x0]
  40643c:	str	x0, [sp, #16]
  406440:	mov	w0, #0x1                   	// #1
  406444:	str	w0, [sp, #28]
  406448:	b	406470 <ferror@plt+0x4790>
  40644c:	ldrsw	x0, [sp, #28]
  406450:	lsl	x0, x0, #4
  406454:	ldr	x1, [sp, #16]
  406458:	add	x0, x1, x0
  40645c:	ldr	x0, [x0, #8]
  406460:	bl	401ba0 <free@plt>
  406464:	ldr	w0, [sp, #28]
  406468:	add	w0, w0, #0x1
  40646c:	str	w0, [sp, #28]
  406470:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  406474:	add	x0, x0, #0x238
  406478:	ldr	w0, [x0]
  40647c:	ldr	w1, [sp, #28]
  406480:	cmp	w1, w0
  406484:	b.lt	40644c <ferror@plt+0x476c>  // b.tstop
  406488:	ldr	x0, [sp, #16]
  40648c:	ldr	x1, [x0, #8]
  406490:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  406494:	add	x0, x0, #0x378
  406498:	cmp	x1, x0
  40649c:	b.eq	4064d0 <ferror@plt+0x47f0>  // b.none
  4064a0:	ldr	x0, [sp, #16]
  4064a4:	ldr	x0, [x0, #8]
  4064a8:	bl	401ba0 <free@plt>
  4064ac:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  4064b0:	add	x0, x0, #0x240
  4064b4:	mov	x1, #0x100                 	// #256
  4064b8:	str	x1, [x0]
  4064bc:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  4064c0:	add	x0, x0, #0x240
  4064c4:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x135c0>
  4064c8:	add	x1, x1, #0x378
  4064cc:	str	x1, [x0, #8]
  4064d0:	ldr	x1, [sp, #16]
  4064d4:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  4064d8:	add	x0, x0, #0x240
  4064dc:	cmp	x1, x0
  4064e0:	b.eq	406500 <ferror@plt+0x4820>  // b.none
  4064e4:	ldr	x0, [sp, #16]
  4064e8:	bl	401ba0 <free@plt>
  4064ec:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  4064f0:	add	x0, x0, #0x250
  4064f4:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x135c0>
  4064f8:	add	x1, x1, #0x240
  4064fc:	str	x1, [x0]
  406500:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  406504:	add	x0, x0, #0x238
  406508:	mov	w1, #0x1                   	// #1
  40650c:	str	w1, [x0]
  406510:	nop
  406514:	ldp	x29, x30, [sp], #32
  406518:	ret
  40651c:	sub	sp, sp, #0x80
  406520:	stp	x29, x30, [sp, #16]
  406524:	add	x29, sp, #0x10
  406528:	str	w0, [sp, #60]
  40652c:	str	x1, [sp, #48]
  406530:	str	x2, [sp, #40]
  406534:	str	x3, [sp, #32]
  406538:	bl	401c80 <__errno_location@plt>
  40653c:	ldr	w0, [x0]
  406540:	str	w0, [sp, #108]
  406544:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  406548:	add	x0, x0, #0x250
  40654c:	ldr	x0, [x0]
  406550:	str	x0, [sp, #120]
  406554:	ldr	w0, [sp, #60]
  406558:	cmp	w0, #0x0
  40655c:	b.ge	406564 <ferror@plt+0x4884>  // b.tcont
  406560:	bl	401b00 <abort@plt>
  406564:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  406568:	add	x0, x0, #0x238
  40656c:	ldr	w0, [x0]
  406570:	ldr	w1, [sp, #60]
  406574:	cmp	w1, w0
  406578:	b.lt	406670 <ferror@plt+0x4990>  // b.tstop
  40657c:	ldr	x1, [sp, #120]
  406580:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  406584:	add	x0, x0, #0x240
  406588:	cmp	x1, x0
  40658c:	cset	w0, eq  // eq = none
  406590:	strb	w0, [sp, #107]
  406594:	mov	w0, #0x7ffffffe            	// #2147483646
  406598:	str	w0, [sp, #100]
  40659c:	ldr	w1, [sp, #100]
  4065a0:	ldr	w0, [sp, #60]
  4065a4:	cmp	w1, w0
  4065a8:	b.ge	4065b0 <ferror@plt+0x48d0>  // b.tcont
  4065ac:	bl	4080c8 <ferror@plt+0x63e8>
  4065b0:	ldrb	w0, [sp, #107]
  4065b4:	cmp	w0, #0x0
  4065b8:	b.eq	4065c4 <ferror@plt+0x48e4>  // b.none
  4065bc:	mov	x0, #0x0                   	// #0
  4065c0:	b	4065c8 <ferror@plt+0x48e8>
  4065c4:	ldr	x0, [sp, #120]
  4065c8:	ldr	w1, [sp, #60]
  4065cc:	add	w1, w1, #0x1
  4065d0:	sxtw	x1, w1
  4065d4:	lsl	x1, x1, #4
  4065d8:	bl	407f28 <ferror@plt+0x6248>
  4065dc:	str	x0, [sp, #120]
  4065e0:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  4065e4:	add	x0, x0, #0x250
  4065e8:	ldr	x1, [sp, #120]
  4065ec:	str	x1, [x0]
  4065f0:	ldrb	w0, [sp, #107]
  4065f4:	cmp	w0, #0x0
  4065f8:	b.eq	406610 <ferror@plt+0x4930>  // b.none
  4065fc:	ldr	x2, [sp, #120]
  406600:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  406604:	add	x0, x0, #0x240
  406608:	ldp	x0, x1, [x0]
  40660c:	stp	x0, x1, [x2]
  406610:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  406614:	add	x0, x0, #0x238
  406618:	ldr	w0, [x0]
  40661c:	sxtw	x0, w0
  406620:	lsl	x0, x0, #4
  406624:	ldr	x1, [sp, #120]
  406628:	add	x3, x1, x0
  40662c:	ldr	w0, [sp, #60]
  406630:	add	w1, w0, #0x1
  406634:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  406638:	add	x0, x0, #0x238
  40663c:	ldr	w0, [x0]
  406640:	sub	w0, w1, w0
  406644:	sxtw	x0, w0
  406648:	lsl	x0, x0, #4
  40664c:	mov	x2, x0
  406650:	mov	w1, #0x0                   	// #0
  406654:	mov	x0, x3
  406658:	bl	401a70 <memset@plt>
  40665c:	ldr	w0, [sp, #60]
  406660:	add	w1, w0, #0x1
  406664:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  406668:	add	x0, x0, #0x238
  40666c:	str	w1, [x0]
  406670:	ldrsw	x0, [sp, #60]
  406674:	lsl	x0, x0, #4
  406678:	ldr	x1, [sp, #120]
  40667c:	add	x0, x1, x0
  406680:	ldr	x0, [x0]
  406684:	str	x0, [sp, #88]
  406688:	ldrsw	x0, [sp, #60]
  40668c:	lsl	x0, x0, #4
  406690:	ldr	x1, [sp, #120]
  406694:	add	x0, x1, x0
  406698:	ldr	x0, [x0, #8]
  40669c:	str	x0, [sp, #112]
  4066a0:	ldr	x0, [sp, #32]
  4066a4:	ldr	w0, [x0, #4]
  4066a8:	orr	w0, w0, #0x1
  4066ac:	str	w0, [sp, #84]
  4066b0:	ldr	x0, [sp, #32]
  4066b4:	ldr	w1, [x0]
  4066b8:	ldr	x0, [sp, #32]
  4066bc:	add	x2, x0, #0x8
  4066c0:	ldr	x0, [sp, #32]
  4066c4:	ldr	x3, [x0, #40]
  4066c8:	ldr	x0, [sp, #32]
  4066cc:	ldr	x0, [x0, #48]
  4066d0:	str	x0, [sp]
  4066d4:	mov	x7, x3
  4066d8:	mov	x6, x2
  4066dc:	ldr	w5, [sp, #84]
  4066e0:	mov	w4, w1
  4066e4:	ldr	x3, [sp, #40]
  4066e8:	ldr	x2, [sp, #48]
  4066ec:	ldr	x1, [sp, #88]
  4066f0:	ldr	x0, [sp, #112]
  4066f4:	bl	404ddc <ferror@plt+0x30fc>
  4066f8:	str	x0, [sp, #72]
  4066fc:	ldr	x1, [sp, #88]
  406700:	ldr	x0, [sp, #72]
  406704:	cmp	x1, x0
  406708:	b.hi	4067b8 <ferror@plt+0x4ad8>  // b.pmore
  40670c:	ldr	x0, [sp, #72]
  406710:	add	x0, x0, #0x1
  406714:	str	x0, [sp, #88]
  406718:	ldrsw	x0, [sp, #60]
  40671c:	lsl	x0, x0, #4
  406720:	ldr	x1, [sp, #120]
  406724:	add	x0, x1, x0
  406728:	ldr	x1, [sp, #88]
  40672c:	str	x1, [x0]
  406730:	ldr	x1, [sp, #112]
  406734:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  406738:	add	x0, x0, #0x378
  40673c:	cmp	x1, x0
  406740:	b.eq	40674c <ferror@plt+0x4a6c>  // b.none
  406744:	ldr	x0, [sp, #112]
  406748:	bl	401ba0 <free@plt>
  40674c:	ldr	x0, [sp, #88]
  406750:	bl	407ecc <ferror@plt+0x61ec>
  406754:	str	x0, [sp, #112]
  406758:	ldrsw	x0, [sp, #60]
  40675c:	lsl	x0, x0, #4
  406760:	ldr	x1, [sp, #120]
  406764:	add	x0, x1, x0
  406768:	ldr	x1, [sp, #112]
  40676c:	str	x1, [x0, #8]
  406770:	ldr	x0, [sp, #32]
  406774:	ldr	w1, [x0]
  406778:	ldr	x0, [sp, #32]
  40677c:	add	x2, x0, #0x8
  406780:	ldr	x0, [sp, #32]
  406784:	ldr	x3, [x0, #40]
  406788:	ldr	x0, [sp, #32]
  40678c:	ldr	x0, [x0, #48]
  406790:	str	x0, [sp]
  406794:	mov	x7, x3
  406798:	mov	x6, x2
  40679c:	ldr	w5, [sp, #84]
  4067a0:	mov	w4, w1
  4067a4:	ldr	x3, [sp, #40]
  4067a8:	ldr	x2, [sp, #48]
  4067ac:	ldr	x1, [sp, #88]
  4067b0:	ldr	x0, [sp, #112]
  4067b4:	bl	404ddc <ferror@plt+0x30fc>
  4067b8:	bl	401c80 <__errno_location@plt>
  4067bc:	mov	x1, x0
  4067c0:	ldr	w0, [sp, #108]
  4067c4:	str	w0, [x1]
  4067c8:	ldr	x0, [sp, #112]
  4067cc:	ldp	x29, x30, [sp, #16]
  4067d0:	add	sp, sp, #0x80
  4067d4:	ret
  4067d8:	stp	x29, x30, [sp, #-32]!
  4067dc:	mov	x29, sp
  4067e0:	str	w0, [sp, #28]
  4067e4:	str	x1, [sp, #16]
  4067e8:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  4067ec:	add	x3, x0, #0x340
  4067f0:	mov	x2, #0xffffffffffffffff    	// #-1
  4067f4:	ldr	x1, [sp, #16]
  4067f8:	ldr	w0, [sp, #28]
  4067fc:	bl	40651c <ferror@plt+0x483c>
  406800:	ldp	x29, x30, [sp], #32
  406804:	ret
  406808:	stp	x29, x30, [sp, #-48]!
  40680c:	mov	x29, sp
  406810:	str	w0, [sp, #44]
  406814:	str	x1, [sp, #32]
  406818:	str	x2, [sp, #24]
  40681c:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  406820:	add	x3, x0, #0x340
  406824:	ldr	x2, [sp, #24]
  406828:	ldr	x1, [sp, #32]
  40682c:	ldr	w0, [sp, #44]
  406830:	bl	40651c <ferror@plt+0x483c>
  406834:	ldp	x29, x30, [sp], #48
  406838:	ret
  40683c:	stp	x29, x30, [sp, #-32]!
  406840:	mov	x29, sp
  406844:	str	x0, [sp, #24]
  406848:	ldr	x1, [sp, #24]
  40684c:	mov	w0, #0x0                   	// #0
  406850:	bl	4067d8 <ferror@plt+0x4af8>
  406854:	ldp	x29, x30, [sp], #32
  406858:	ret
  40685c:	stp	x29, x30, [sp, #-32]!
  406860:	mov	x29, sp
  406864:	str	x0, [sp, #24]
  406868:	str	x1, [sp, #16]
  40686c:	ldr	x2, [sp, #16]
  406870:	ldr	x1, [sp, #24]
  406874:	mov	w0, #0x0                   	// #0
  406878:	bl	406808 <ferror@plt+0x4b28>
  40687c:	ldp	x29, x30, [sp], #32
  406880:	ret
  406884:	stp	x29, x30, [sp, #-96]!
  406888:	mov	x29, sp
  40688c:	str	w0, [sp, #28]
  406890:	str	w1, [sp, #24]
  406894:	str	x2, [sp, #16]
  406898:	add	x0, sp, #0x28
  40689c:	mov	x8, x0
  4068a0:	ldr	w0, [sp, #24]
  4068a4:	bl	404c94 <ferror@plt+0x2fb4>
  4068a8:	add	x0, sp, #0x28
  4068ac:	mov	x3, x0
  4068b0:	mov	x2, #0xffffffffffffffff    	// #-1
  4068b4:	ldr	x1, [sp, #16]
  4068b8:	ldr	w0, [sp, #28]
  4068bc:	bl	40651c <ferror@plt+0x483c>
  4068c0:	ldp	x29, x30, [sp], #96
  4068c4:	ret
  4068c8:	stp	x29, x30, [sp, #-112]!
  4068cc:	mov	x29, sp
  4068d0:	str	w0, [sp, #44]
  4068d4:	str	w1, [sp, #40]
  4068d8:	str	x2, [sp, #32]
  4068dc:	str	x3, [sp, #24]
  4068e0:	add	x0, sp, #0x38
  4068e4:	mov	x8, x0
  4068e8:	ldr	w0, [sp, #40]
  4068ec:	bl	404c94 <ferror@plt+0x2fb4>
  4068f0:	add	x0, sp, #0x38
  4068f4:	mov	x3, x0
  4068f8:	ldr	x2, [sp, #24]
  4068fc:	ldr	x1, [sp, #32]
  406900:	ldr	w0, [sp, #44]
  406904:	bl	40651c <ferror@plt+0x483c>
  406908:	ldp	x29, x30, [sp], #112
  40690c:	ret
  406910:	stp	x29, x30, [sp, #-32]!
  406914:	mov	x29, sp
  406918:	str	w0, [sp, #28]
  40691c:	str	x1, [sp, #16]
  406920:	ldr	x2, [sp, #16]
  406924:	ldr	w1, [sp, #28]
  406928:	mov	w0, #0x0                   	// #0
  40692c:	bl	406884 <ferror@plt+0x4ba4>
  406930:	ldp	x29, x30, [sp], #32
  406934:	ret
  406938:	stp	x29, x30, [sp, #-48]!
  40693c:	mov	x29, sp
  406940:	str	w0, [sp, #44]
  406944:	str	x1, [sp, #32]
  406948:	str	x2, [sp, #24]
  40694c:	ldr	x3, [sp, #24]
  406950:	ldr	x2, [sp, #32]
  406954:	ldr	w1, [sp, #44]
  406958:	mov	w0, #0x0                   	// #0
  40695c:	bl	4068c8 <ferror@plt+0x4be8>
  406960:	ldp	x29, x30, [sp], #48
  406964:	ret
  406968:	stp	x29, x30, [sp, #-112]!
  40696c:	mov	x29, sp
  406970:	str	x0, [sp, #40]
  406974:	str	x1, [sp, #32]
  406978:	strb	w2, [sp, #31]
  40697c:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  406980:	add	x1, x0, #0x340
  406984:	add	x0, sp, #0x38
  406988:	ldp	x2, x3, [x1]
  40698c:	stp	x2, x3, [x0]
  406990:	ldp	x2, x3, [x1, #16]
  406994:	stp	x2, x3, [x0, #16]
  406998:	ldp	x2, x3, [x1, #32]
  40699c:	stp	x2, x3, [x0, #32]
  4069a0:	ldr	x1, [x1, #48]
  4069a4:	str	x1, [x0, #48]
  4069a8:	add	x0, sp, #0x38
  4069ac:	mov	w2, #0x1                   	// #1
  4069b0:	ldrb	w1, [sp, #31]
  4069b4:	bl	404b24 <ferror@plt+0x2e44>
  4069b8:	add	x0, sp, #0x38
  4069bc:	mov	x3, x0
  4069c0:	ldr	x2, [sp, #32]
  4069c4:	ldr	x1, [sp, #40]
  4069c8:	mov	w0, #0x0                   	// #0
  4069cc:	bl	40651c <ferror@plt+0x483c>
  4069d0:	ldp	x29, x30, [sp], #112
  4069d4:	ret
  4069d8:	stp	x29, x30, [sp, #-32]!
  4069dc:	mov	x29, sp
  4069e0:	str	x0, [sp, #24]
  4069e4:	strb	w1, [sp, #23]
  4069e8:	ldrb	w2, [sp, #23]
  4069ec:	mov	x1, #0xffffffffffffffff    	// #-1
  4069f0:	ldr	x0, [sp, #24]
  4069f4:	bl	406968 <ferror@plt+0x4c88>
  4069f8:	ldp	x29, x30, [sp], #32
  4069fc:	ret
  406a00:	stp	x29, x30, [sp, #-32]!
  406a04:	mov	x29, sp
  406a08:	str	x0, [sp, #24]
  406a0c:	mov	w1, #0x3a                  	// #58
  406a10:	ldr	x0, [sp, #24]
  406a14:	bl	4069d8 <ferror@plt+0x4cf8>
  406a18:	ldp	x29, x30, [sp], #32
  406a1c:	ret
  406a20:	stp	x29, x30, [sp, #-32]!
  406a24:	mov	x29, sp
  406a28:	str	x0, [sp, #24]
  406a2c:	str	x1, [sp, #16]
  406a30:	mov	w2, #0x3a                  	// #58
  406a34:	ldr	x1, [sp, #16]
  406a38:	ldr	x0, [sp, #24]
  406a3c:	bl	406968 <ferror@plt+0x4c88>
  406a40:	ldp	x29, x30, [sp], #32
  406a44:	ret
  406a48:	stp	x29, x30, [sp, #-160]!
  406a4c:	mov	x29, sp
  406a50:	str	w0, [sp, #92]
  406a54:	str	w1, [sp, #88]
  406a58:	str	x2, [sp, #80]
  406a5c:	add	x0, sp, #0x10
  406a60:	mov	x8, x0
  406a64:	ldr	w0, [sp, #88]
  406a68:	bl	404c94 <ferror@plt+0x2fb4>
  406a6c:	add	x0, sp, #0x68
  406a70:	add	x1, sp, #0x10
  406a74:	ldp	x2, x3, [x1]
  406a78:	stp	x2, x3, [x0]
  406a7c:	ldp	x2, x3, [x1, #16]
  406a80:	stp	x2, x3, [x0, #16]
  406a84:	ldp	x2, x3, [x1, #32]
  406a88:	stp	x2, x3, [x0, #32]
  406a8c:	ldr	x1, [x1, #48]
  406a90:	str	x1, [x0, #48]
  406a94:	add	x0, sp, #0x68
  406a98:	mov	w2, #0x1                   	// #1
  406a9c:	mov	w1, #0x3a                  	// #58
  406aa0:	bl	404b24 <ferror@plt+0x2e44>
  406aa4:	add	x0, sp, #0x68
  406aa8:	mov	x3, x0
  406aac:	mov	x2, #0xffffffffffffffff    	// #-1
  406ab0:	ldr	x1, [sp, #80]
  406ab4:	ldr	w0, [sp, #92]
  406ab8:	bl	40651c <ferror@plt+0x483c>
  406abc:	ldp	x29, x30, [sp], #160
  406ac0:	ret
  406ac4:	stp	x29, x30, [sp, #-48]!
  406ac8:	mov	x29, sp
  406acc:	str	w0, [sp, #44]
  406ad0:	str	x1, [sp, #32]
  406ad4:	str	x2, [sp, #24]
  406ad8:	str	x3, [sp, #16]
  406adc:	mov	x4, #0xffffffffffffffff    	// #-1
  406ae0:	ldr	x3, [sp, #16]
  406ae4:	ldr	x2, [sp, #24]
  406ae8:	ldr	x1, [sp, #32]
  406aec:	ldr	w0, [sp, #44]
  406af0:	bl	406afc <ferror@plt+0x4e1c>
  406af4:	ldp	x29, x30, [sp], #48
  406af8:	ret
  406afc:	stp	x29, x30, [sp, #-128]!
  406b00:	mov	x29, sp
  406b04:	str	w0, [sp, #60]
  406b08:	str	x1, [sp, #48]
  406b0c:	str	x2, [sp, #40]
  406b10:	str	x3, [sp, #32]
  406b14:	str	x4, [sp, #24]
  406b18:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  406b1c:	add	x1, x0, #0x340
  406b20:	add	x0, sp, #0x48
  406b24:	ldp	x2, x3, [x1]
  406b28:	stp	x2, x3, [x0]
  406b2c:	ldp	x2, x3, [x1, #16]
  406b30:	stp	x2, x3, [x0, #16]
  406b34:	ldp	x2, x3, [x1, #32]
  406b38:	stp	x2, x3, [x0, #32]
  406b3c:	ldr	x1, [x1, #48]
  406b40:	str	x1, [x0, #48]
  406b44:	add	x0, sp, #0x48
  406b48:	ldr	x2, [sp, #40]
  406b4c:	ldr	x1, [sp, #48]
  406b50:	bl	404c1c <ferror@plt+0x2f3c>
  406b54:	add	x0, sp, #0x48
  406b58:	mov	x3, x0
  406b5c:	ldr	x2, [sp, #24]
  406b60:	ldr	x1, [sp, #32]
  406b64:	ldr	w0, [sp, #60]
  406b68:	bl	40651c <ferror@plt+0x483c>
  406b6c:	ldp	x29, x30, [sp], #128
  406b70:	ret
  406b74:	stp	x29, x30, [sp, #-48]!
  406b78:	mov	x29, sp
  406b7c:	str	x0, [sp, #40]
  406b80:	str	x1, [sp, #32]
  406b84:	str	x2, [sp, #24]
  406b88:	ldr	x3, [sp, #24]
  406b8c:	ldr	x2, [sp, #32]
  406b90:	ldr	x1, [sp, #40]
  406b94:	mov	w0, #0x0                   	// #0
  406b98:	bl	406ac4 <ferror@plt+0x4de4>
  406b9c:	ldp	x29, x30, [sp], #48
  406ba0:	ret
  406ba4:	stp	x29, x30, [sp, #-48]!
  406ba8:	mov	x29, sp
  406bac:	str	x0, [sp, #40]
  406bb0:	str	x1, [sp, #32]
  406bb4:	str	x2, [sp, #24]
  406bb8:	str	x3, [sp, #16]
  406bbc:	ldr	x4, [sp, #16]
  406bc0:	ldr	x3, [sp, #24]
  406bc4:	ldr	x2, [sp, #32]
  406bc8:	ldr	x1, [sp, #40]
  406bcc:	mov	w0, #0x0                   	// #0
  406bd0:	bl	406afc <ferror@plt+0x4e1c>
  406bd4:	ldp	x29, x30, [sp], #48
  406bd8:	ret
  406bdc:	stp	x29, x30, [sp, #-48]!
  406be0:	mov	x29, sp
  406be4:	str	w0, [sp, #44]
  406be8:	str	x1, [sp, #32]
  406bec:	str	x2, [sp, #24]
  406bf0:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  406bf4:	add	x3, x0, #0x258
  406bf8:	ldr	x2, [sp, #24]
  406bfc:	ldr	x1, [sp, #32]
  406c00:	ldr	w0, [sp, #44]
  406c04:	bl	40651c <ferror@plt+0x483c>
  406c08:	ldp	x29, x30, [sp], #48
  406c0c:	ret
  406c10:	stp	x29, x30, [sp, #-32]!
  406c14:	mov	x29, sp
  406c18:	str	x0, [sp, #24]
  406c1c:	str	x1, [sp, #16]
  406c20:	ldr	x2, [sp, #16]
  406c24:	ldr	x1, [sp, #24]
  406c28:	mov	w0, #0x0                   	// #0
  406c2c:	bl	406bdc <ferror@plt+0x4efc>
  406c30:	ldp	x29, x30, [sp], #32
  406c34:	ret
  406c38:	stp	x29, x30, [sp, #-32]!
  406c3c:	mov	x29, sp
  406c40:	str	w0, [sp, #28]
  406c44:	str	x1, [sp, #16]
  406c48:	mov	x2, #0xffffffffffffffff    	// #-1
  406c4c:	ldr	x1, [sp, #16]
  406c50:	ldr	w0, [sp, #28]
  406c54:	bl	406bdc <ferror@plt+0x4efc>
  406c58:	ldp	x29, x30, [sp], #32
  406c5c:	ret
  406c60:	stp	x29, x30, [sp, #-32]!
  406c64:	mov	x29, sp
  406c68:	str	x0, [sp, #24]
  406c6c:	ldr	x1, [sp, #24]
  406c70:	mov	w0, #0x0                   	// #0
  406c74:	bl	406c38 <ferror@plt+0x4f58>
  406c78:	ldp	x29, x30, [sp], #32
  406c7c:	ret
  406c80:	stp	x29, x30, [sp, #-32]!
  406c84:	mov	x29, sp
  406c88:	str	x0, [sp, #24]
  406c8c:	ldr	x0, [sp, #24]
  406c90:	str	xzr, [x0]
  406c94:	ldr	x0, [sp, #24]
  406c98:	str	xzr, [x0, #8]
  406c9c:	ldr	x0, [sp, #24]
  406ca0:	str	xzr, [x0, #16]
  406ca4:	ldr	x0, [sp, #24]
  406ca8:	add	x5, x0, #0x18
  406cac:	adrp	x0, 401000 <mbrtowc@plt-0x8c0>
  406cb0:	add	x4, x0, #0xba0
  406cb4:	adrp	x0, 401000 <mbrtowc@plt-0x8c0>
  406cb8:	add	x3, x0, #0x9f0
  406cbc:	mov	x2, #0x0                   	// #0
  406cc0:	mov	x1, #0x0                   	// #0
  406cc4:	mov	x0, x5
  406cc8:	bl	4085f8 <_obstack_begin@@Base>
  406ccc:	ldr	x0, [sp, #24]
  406cd0:	add	x5, x0, #0x70
  406cd4:	adrp	x0, 401000 <mbrtowc@plt-0x8c0>
  406cd8:	add	x4, x0, #0xba0
  406cdc:	adrp	x0, 401000 <mbrtowc@plt-0x8c0>
  406ce0:	add	x3, x0, #0x9f0
  406ce4:	mov	x2, #0x0                   	// #0
  406ce8:	mov	x1, #0x0                   	// #0
  406cec:	mov	x0, x5
  406cf0:	bl	4085f8 <_obstack_begin@@Base>
  406cf4:	ldr	x0, [sp, #24]
  406cf8:	add	x5, x0, #0xc8
  406cfc:	adrp	x0, 401000 <mbrtowc@plt-0x8c0>
  406d00:	add	x4, x0, #0xba0
  406d04:	adrp	x0, 401000 <mbrtowc@plt-0x8c0>
  406d08:	add	x3, x0, #0x9f0
  406d0c:	mov	x2, #0x0                   	// #0
  406d10:	mov	x1, #0x0                   	// #0
  406d14:	mov	x0, x5
  406d18:	bl	4085f8 <_obstack_begin@@Base>
  406d1c:	nop
  406d20:	ldp	x29, x30, [sp], #32
  406d24:	ret
  406d28:	stp	x29, x30, [sp, #-80]!
  406d2c:	mov	x29, sp
  406d30:	str	x0, [sp, #24]
  406d34:	ldr	x0, [sp, #24]
  406d38:	add	x0, x0, #0x18
  406d3c:	str	x0, [sp, #72]
  406d40:	str	xzr, [sp, #64]
  406d44:	ldr	x0, [sp, #72]
  406d48:	ldr	x0, [x0, #8]
  406d4c:	ldr	x1, [sp, #64]
  406d50:	cmp	x1, x0
  406d54:	b.ls	406d8c <ferror@plt+0x50ac>  // b.plast
  406d58:	ldr	x0, [sp, #72]
  406d5c:	ldr	x0, [x0, #32]
  406d60:	ldr	x1, [sp, #64]
  406d64:	cmp	x1, x0
  406d68:	b.cs	406d8c <ferror@plt+0x50ac>  // b.hs, b.nlast
  406d6c:	ldr	x0, [sp, #72]
  406d70:	ldr	x1, [sp, #64]
  406d74:	str	x1, [x0, #16]
  406d78:	ldr	x0, [sp, #72]
  406d7c:	ldr	x1, [x0, #16]
  406d80:	ldr	x0, [sp, #72]
  406d84:	str	x1, [x0, #24]
  406d88:	b	406d98 <ferror@plt+0x50b8>
  406d8c:	ldr	x1, [sp, #64]
  406d90:	ldr	x0, [sp, #72]
  406d94:	bl	40895c <_obstack_free@@Base>
  406d98:	ldr	x0, [sp, #24]
  406d9c:	add	x0, x0, #0x70
  406da0:	str	x0, [sp, #56]
  406da4:	str	xzr, [sp, #48]
  406da8:	ldr	x0, [sp, #56]
  406dac:	ldr	x0, [x0, #8]
  406db0:	ldr	x1, [sp, #48]
  406db4:	cmp	x1, x0
  406db8:	b.ls	406df0 <ferror@plt+0x5110>  // b.plast
  406dbc:	ldr	x0, [sp, #56]
  406dc0:	ldr	x0, [x0, #32]
  406dc4:	ldr	x1, [sp, #48]
  406dc8:	cmp	x1, x0
  406dcc:	b.cs	406df0 <ferror@plt+0x5110>  // b.hs, b.nlast
  406dd0:	ldr	x0, [sp, #56]
  406dd4:	ldr	x1, [sp, #48]
  406dd8:	str	x1, [x0, #16]
  406ddc:	ldr	x0, [sp, #56]
  406de0:	ldr	x1, [x0, #16]
  406de4:	ldr	x0, [sp, #56]
  406de8:	str	x1, [x0, #24]
  406dec:	b	406dfc <ferror@plt+0x511c>
  406df0:	ldr	x1, [sp, #48]
  406df4:	ldr	x0, [sp, #56]
  406df8:	bl	40895c <_obstack_free@@Base>
  406dfc:	ldr	x0, [sp, #24]
  406e00:	add	x0, x0, #0xc8
  406e04:	str	x0, [sp, #40]
  406e08:	str	xzr, [sp, #32]
  406e0c:	ldr	x0, [sp, #40]
  406e10:	ldr	x0, [x0, #8]
  406e14:	ldr	x1, [sp, #32]
  406e18:	cmp	x1, x0
  406e1c:	b.ls	406e54 <ferror@plt+0x5174>  // b.plast
  406e20:	ldr	x0, [sp, #40]
  406e24:	ldr	x0, [x0, #32]
  406e28:	ldr	x1, [sp, #32]
  406e2c:	cmp	x1, x0
  406e30:	b.cs	406e54 <ferror@plt+0x5174>  // b.hs, b.nlast
  406e34:	ldr	x0, [sp, #40]
  406e38:	ldr	x1, [sp, #32]
  406e3c:	str	x1, [x0, #16]
  406e40:	ldr	x0, [sp, #40]
  406e44:	ldr	x1, [x0, #16]
  406e48:	ldr	x0, [sp, #40]
  406e4c:	str	x1, [x0, #24]
  406e50:	b	406e64 <ferror@plt+0x5184>
  406e54:	ldr	x1, [sp, #32]
  406e58:	ldr	x0, [sp, #40]
  406e5c:	bl	40895c <_obstack_free@@Base>
  406e60:	nop
  406e64:	nop
  406e68:	ldp	x29, x30, [sp], #80
  406e6c:	ret
  406e70:	stp	x29, x30, [sp, #-128]!
  406e74:	mov	x29, sp
  406e78:	str	x0, [sp, #24]
  406e7c:	ldr	x0, [sp, #24]
  406e80:	add	x0, x0, #0x18
  406e84:	str	x0, [sp, #120]
  406e88:	ldr	x0, [sp, #120]
  406e8c:	ldr	x1, [x0, #24]
  406e90:	ldr	x0, [sp, #120]
  406e94:	ldr	x0, [x0, #16]
  406e98:	sub	x0, x1, x0
  406e9c:	sub	x0, x0, #0x1
  406ea0:	str	x0, [sp, #32]
  406ea4:	ldr	x0, [sp, #24]
  406ea8:	add	x0, x0, #0x18
  406eac:	str	x0, [sp, #112]
  406eb0:	ldr	x0, [sp, #112]
  406eb4:	ldr	x0, [x0, #16]
  406eb8:	str	x0, [sp, #104]
  406ebc:	ldr	x0, [sp, #112]
  406ec0:	ldr	x0, [x0, #24]
  406ec4:	ldr	x1, [sp, #104]
  406ec8:	cmp	x1, x0
  406ecc:	b.ne	406ee0 <ferror@plt+0x5200>  // b.any
  406ed0:	ldr	x0, [sp, #112]
  406ed4:	ldrb	w1, [x0, #80]
  406ed8:	orr	w1, w1, #0x2
  406edc:	strb	w1, [x0, #80]
  406ee0:	ldr	x0, [sp, #112]
  406ee4:	ldr	x0, [x0, #24]
  406ee8:	mov	x1, x0
  406eec:	ldr	x0, [sp, #112]
  406ef0:	ldr	x0, [x0, #48]
  406ef4:	add	x1, x1, x0
  406ef8:	ldr	x0, [sp, #112]
  406efc:	ldr	x0, [x0, #48]
  406f00:	mvn	x0, x0
  406f04:	and	x0, x1, x0
  406f08:	mov	x1, x0
  406f0c:	ldr	x0, [sp, #112]
  406f10:	str	x1, [x0, #24]
  406f14:	ldr	x0, [sp, #112]
  406f18:	ldr	x1, [x0, #24]
  406f1c:	ldr	x0, [sp, #112]
  406f20:	ldr	x0, [x0, #8]
  406f24:	sub	x0, x1, x0
  406f28:	mov	x2, x0
  406f2c:	ldr	x0, [sp, #112]
  406f30:	ldr	x1, [x0, #32]
  406f34:	ldr	x0, [sp, #112]
  406f38:	ldr	x0, [x0, #8]
  406f3c:	sub	x0, x1, x0
  406f40:	cmp	x2, x0
  406f44:	b.ls	406f58 <ferror@plt+0x5278>  // b.plast
  406f48:	ldr	x0, [sp, #112]
  406f4c:	ldr	x1, [x0, #32]
  406f50:	ldr	x0, [sp, #112]
  406f54:	str	x1, [x0, #24]
  406f58:	ldr	x0, [sp, #112]
  406f5c:	ldr	x1, [x0, #24]
  406f60:	ldr	x0, [sp, #112]
  406f64:	str	x1, [x0, #16]
  406f68:	ldr	x0, [sp, #104]
  406f6c:	str	x0, [sp, #96]
  406f70:	ldr	x0, [sp, #24]
  406f74:	add	x0, x0, #0x70
  406f78:	str	x0, [sp, #88]
  406f7c:	ldr	x0, [sp, #88]
  406f80:	str	x0, [sp, #80]
  406f84:	ldr	x0, [sp, #80]
  406f88:	ldr	x1, [x0, #32]
  406f8c:	ldr	x0, [sp, #80]
  406f90:	ldr	x0, [x0, #24]
  406f94:	sub	x0, x1, x0
  406f98:	cmp	x0, #0x7
  406f9c:	b.hi	406fac <ferror@plt+0x52cc>  // b.pmore
  406fa0:	mov	x1, #0x8                   	// #8
  406fa4:	ldr	x0, [sp, #88]
  406fa8:	bl	4086c0 <_obstack_newchunk@@Base>
  406fac:	ldr	x0, [sp, #88]
  406fb0:	str	x0, [sp, #72]
  406fb4:	ldr	x0, [sp, #72]
  406fb8:	ldr	x0, [x0, #24]
  406fbc:	str	x0, [sp, #64]
  406fc0:	ldr	x0, [sp, #64]
  406fc4:	ldr	x1, [sp, #96]
  406fc8:	str	x1, [x0]
  406fcc:	ldr	x0, [sp, #72]
  406fd0:	ldr	x0, [x0, #24]
  406fd4:	add	x1, x0, #0x8
  406fd8:	ldr	x0, [sp, #72]
  406fdc:	str	x1, [x0, #24]
  406fe0:	ldr	x0, [sp, #24]
  406fe4:	add	x0, x0, #0xc8
  406fe8:	str	x0, [sp, #56]
  406fec:	mov	x0, #0x8                   	// #8
  406ff0:	str	x0, [sp, #48]
  406ff4:	ldr	x0, [sp, #56]
  406ff8:	str	x0, [sp, #40]
  406ffc:	ldr	x0, [sp, #40]
  407000:	ldr	x1, [x0, #32]
  407004:	ldr	x0, [sp, #40]
  407008:	ldr	x0, [x0, #24]
  40700c:	sub	x0, x1, x0
  407010:	mov	x1, x0
  407014:	ldr	x0, [sp, #48]
  407018:	cmp	x1, x0
  40701c:	b.cs	40702c <ferror@plt+0x534c>  // b.hs, b.nlast
  407020:	ldr	x1, [sp, #48]
  407024:	ldr	x0, [sp, #56]
  407028:	bl	4086c0 <_obstack_newchunk@@Base>
  40702c:	ldr	x0, [sp, #56]
  407030:	ldr	x0, [x0, #24]
  407034:	add	x1, sp, #0x20
  407038:	ldr	x2, [sp, #48]
  40703c:	bl	4018d0 <memcpy@plt>
  407040:	ldr	x0, [sp, #56]
  407044:	ldr	x1, [x0, #24]
  407048:	ldr	x0, [sp, #48]
  40704c:	add	x1, x1, x0
  407050:	ldr	x0, [sp, #56]
  407054:	str	x1, [x0, #24]
  407058:	ldr	x0, [sp, #24]
  40705c:	ldr	x0, [x0]
  407060:	add	x1, x0, #0x1
  407064:	ldr	x0, [sp, #24]
  407068:	str	x1, [x0]
  40706c:	nop
  407070:	ldp	x29, x30, [sp], #128
  407074:	ret
  407078:	stp	x29, x30, [sp, #-160]!
  40707c:	mov	x29, sp
  407080:	str	x0, [sp, #24]
  407084:	str	x1, [sp, #16]
  407088:	ldr	x0, [sp, #24]
  40708c:	bl	401a60 <fgetc@plt>
  407090:	str	w0, [sp, #156]
  407094:	ldr	w0, [sp, #156]
  407098:	cmn	w0, #0x1
  40709c:	b.ne	407130 <ferror@plt+0x5450>  // b.any
  4070a0:	ldr	x0, [sp, #16]
  4070a4:	add	x0, x0, #0x18
  4070a8:	str	x0, [sp, #128]
  4070ac:	ldr	x0, [sp, #128]
  4070b0:	ldr	x1, [x0, #24]
  4070b4:	ldr	x0, [sp, #128]
  4070b8:	ldr	x0, [x0, #16]
  4070bc:	sub	x0, x1, x0
  4070c0:	str	x0, [sp, #120]
  4070c4:	ldr	x0, [sp, #120]
  4070c8:	cmp	x0, #0x0
  4070cc:	b.eq	4071a4 <ferror@plt+0x54c4>  // b.none
  4070d0:	ldr	x0, [sp, #16]
  4070d4:	add	x0, x0, #0x18
  4070d8:	str	x0, [sp, #112]
  4070dc:	ldr	x0, [sp, #112]
  4070e0:	str	x0, [sp, #104]
  4070e4:	ldr	x0, [sp, #104]
  4070e8:	ldr	x1, [x0, #32]
  4070ec:	ldr	x0, [sp, #104]
  4070f0:	ldr	x0, [x0, #24]
  4070f4:	sub	x0, x1, x0
  4070f8:	cmp	x0, #0x0
  4070fc:	b.ne	40710c <ferror@plt+0x542c>  // b.any
  407100:	mov	x1, #0x1                   	// #1
  407104:	ldr	x0, [sp, #112]
  407108:	bl	4086c0 <_obstack_newchunk@@Base>
  40710c:	ldr	x0, [sp, #112]
  407110:	ldr	x0, [x0, #24]
  407114:	add	x2, x0, #0x1
  407118:	ldr	x1, [sp, #112]
  40711c:	str	x2, [x1, #24]
  407120:	strb	wzr, [x0]
  407124:	ldr	x0, [sp, #16]
  407128:	bl	406e70 <ferror@plt+0x5190>
  40712c:	b	4071a4 <ferror@plt+0x54c4>
  407130:	ldr	x0, [sp, #16]
  407134:	add	x0, x0, #0x18
  407138:	str	x0, [sp, #144]
  40713c:	ldr	x0, [sp, #144]
  407140:	str	x0, [sp, #136]
  407144:	ldr	x0, [sp, #136]
  407148:	ldr	x1, [x0, #32]
  40714c:	ldr	x0, [sp, #136]
  407150:	ldr	x0, [x0, #24]
  407154:	sub	x0, x1, x0
  407158:	cmp	x0, #0x0
  40715c:	b.ne	40716c <ferror@plt+0x548c>  // b.any
  407160:	mov	x1, #0x1                   	// #1
  407164:	ldr	x0, [sp, #144]
  407168:	bl	4086c0 <_obstack_newchunk@@Base>
  40716c:	ldr	x0, [sp, #144]
  407170:	ldr	x0, [x0, #24]
  407174:	add	x2, x0, #0x1
  407178:	ldr	x1, [sp, #144]
  40717c:	str	x2, [x1, #24]
  407180:	ldr	w1, [sp, #156]
  407184:	and	w1, w1, #0xff
  407188:	strb	w1, [x0]
  40718c:	ldr	w0, [sp, #156]
  407190:	cmp	w0, #0x0
  407194:	b.ne	407088 <ferror@plt+0x53a8>  // b.any
  407198:	ldr	x0, [sp, #16]
  40719c:	bl	406e70 <ferror@plt+0x5190>
  4071a0:	b	407088 <ferror@plt+0x53a8>
  4071a4:	nop
  4071a8:	ldr	x0, [sp, #16]
  4071ac:	add	x0, x0, #0x70
  4071b0:	str	x0, [sp, #96]
  4071b4:	ldr	x0, [sp, #96]
  4071b8:	str	x0, [sp, #88]
  4071bc:	ldr	x0, [sp, #88]
  4071c0:	ldr	x1, [x0, #32]
  4071c4:	ldr	x0, [sp, #88]
  4071c8:	ldr	x0, [x0, #24]
  4071cc:	sub	x0, x1, x0
  4071d0:	cmp	x0, #0x7
  4071d4:	b.hi	4071e4 <ferror@plt+0x5504>  // b.pmore
  4071d8:	mov	x1, #0x8                   	// #8
  4071dc:	ldr	x0, [sp, #96]
  4071e0:	bl	4086c0 <_obstack_newchunk@@Base>
  4071e4:	ldr	x0, [sp, #96]
  4071e8:	str	x0, [sp, #80]
  4071ec:	ldr	x0, [sp, #80]
  4071f0:	ldr	x0, [x0, #24]
  4071f4:	str	x0, [sp, #72]
  4071f8:	ldr	x0, [sp, #72]
  4071fc:	str	xzr, [x0]
  407200:	ldr	x0, [sp, #80]
  407204:	ldr	x0, [x0, #24]
  407208:	add	x1, x0, #0x8
  40720c:	ldr	x0, [sp, #80]
  407210:	str	x1, [x0, #24]
  407214:	ldr	x0, [sp, #16]
  407218:	add	x0, x0, #0x70
  40721c:	str	x0, [sp, #64]
  407220:	ldr	x0, [sp, #64]
  407224:	ldr	x0, [x0, #16]
  407228:	str	x0, [sp, #56]
  40722c:	ldr	x0, [sp, #64]
  407230:	ldr	x0, [x0, #24]
  407234:	ldr	x1, [sp, #56]
  407238:	cmp	x1, x0
  40723c:	b.ne	407250 <ferror@plt+0x5570>  // b.any
  407240:	ldr	x0, [sp, #64]
  407244:	ldrb	w1, [x0, #80]
  407248:	orr	w1, w1, #0x2
  40724c:	strb	w1, [x0, #80]
  407250:	ldr	x0, [sp, #64]
  407254:	ldr	x0, [x0, #24]
  407258:	mov	x1, x0
  40725c:	ldr	x0, [sp, #64]
  407260:	ldr	x0, [x0, #48]
  407264:	add	x1, x1, x0
  407268:	ldr	x0, [sp, #64]
  40726c:	ldr	x0, [x0, #48]
  407270:	mvn	x0, x0
  407274:	and	x0, x1, x0
  407278:	mov	x1, x0
  40727c:	ldr	x0, [sp, #64]
  407280:	str	x1, [x0, #24]
  407284:	ldr	x0, [sp, #64]
  407288:	ldr	x1, [x0, #24]
  40728c:	ldr	x0, [sp, #64]
  407290:	ldr	x0, [x0, #8]
  407294:	sub	x0, x1, x0
  407298:	mov	x2, x0
  40729c:	ldr	x0, [sp, #64]
  4072a0:	ldr	x1, [x0, #32]
  4072a4:	ldr	x0, [sp, #64]
  4072a8:	ldr	x0, [x0, #8]
  4072ac:	sub	x0, x1, x0
  4072b0:	cmp	x2, x0
  4072b4:	b.ls	4072c8 <ferror@plt+0x55e8>  // b.plast
  4072b8:	ldr	x0, [sp, #64]
  4072bc:	ldr	x1, [x0, #32]
  4072c0:	ldr	x0, [sp, #64]
  4072c4:	str	x1, [x0, #24]
  4072c8:	ldr	x0, [sp, #64]
  4072cc:	ldr	x1, [x0, #24]
  4072d0:	ldr	x0, [sp, #64]
  4072d4:	str	x1, [x0, #16]
  4072d8:	ldr	x1, [sp, #56]
  4072dc:	ldr	x0, [sp, #16]
  4072e0:	str	x1, [x0, #8]
  4072e4:	ldr	x0, [sp, #16]
  4072e8:	add	x0, x0, #0xc8
  4072ec:	str	x0, [sp, #48]
  4072f0:	ldr	x0, [sp, #48]
  4072f4:	ldr	x0, [x0, #16]
  4072f8:	str	x0, [sp, #40]
  4072fc:	ldr	x0, [sp, #48]
  407300:	ldr	x0, [x0, #24]
  407304:	ldr	x1, [sp, #40]
  407308:	cmp	x1, x0
  40730c:	b.ne	407320 <ferror@plt+0x5640>  // b.any
  407310:	ldr	x0, [sp, #48]
  407314:	ldrb	w1, [x0, #80]
  407318:	orr	w1, w1, #0x2
  40731c:	strb	w1, [x0, #80]
  407320:	ldr	x0, [sp, #48]
  407324:	ldr	x0, [x0, #24]
  407328:	mov	x1, x0
  40732c:	ldr	x0, [sp, #48]
  407330:	ldr	x0, [x0, #48]
  407334:	add	x1, x1, x0
  407338:	ldr	x0, [sp, #48]
  40733c:	ldr	x0, [x0, #48]
  407340:	mvn	x0, x0
  407344:	and	x0, x1, x0
  407348:	mov	x1, x0
  40734c:	ldr	x0, [sp, #48]
  407350:	str	x1, [x0, #24]
  407354:	ldr	x0, [sp, #48]
  407358:	ldr	x1, [x0, #24]
  40735c:	ldr	x0, [sp, #48]
  407360:	ldr	x0, [x0, #8]
  407364:	sub	x0, x1, x0
  407368:	mov	x2, x0
  40736c:	ldr	x0, [sp, #48]
  407370:	ldr	x1, [x0, #32]
  407374:	ldr	x0, [sp, #48]
  407378:	ldr	x0, [x0, #8]
  40737c:	sub	x0, x1, x0
  407380:	cmp	x2, x0
  407384:	b.ls	407398 <ferror@plt+0x56b8>  // b.plast
  407388:	ldr	x0, [sp, #48]
  40738c:	ldr	x1, [x0, #32]
  407390:	ldr	x0, [sp, #48]
  407394:	str	x1, [x0, #24]
  407398:	ldr	x0, [sp, #48]
  40739c:	ldr	x1, [x0, #24]
  4073a0:	ldr	x0, [sp, #48]
  4073a4:	str	x1, [x0, #16]
  4073a8:	ldr	x1, [sp, #40]
  4073ac:	ldr	x0, [sp, #16]
  4073b0:	str	x1, [x0, #16]
  4073b4:	ldr	x0, [sp, #24]
  4073b8:	bl	401ce0 <ferror@plt>
  4073bc:	cmp	w0, #0x0
  4073c0:	cset	w0, eq  // eq = none
  4073c4:	and	w0, w0, #0xff
  4073c8:	ldp	x29, x30, [sp], #160
  4073cc:	ret
  4073d0:	stp	x29, x30, [sp, #-64]!
  4073d4:	mov	x29, sp
  4073d8:	str	w0, [sp, #44]
  4073dc:	str	x1, [sp, #32]
  4073e0:	str	x2, [sp, #24]
  4073e4:	ldr	x2, [sp, #24]
  4073e8:	ldr	x1, [sp, #32]
  4073ec:	ldr	w0, [sp, #44]
  4073f0:	bl	401bf0 <read@plt>
  4073f4:	str	x0, [sp, #56]
  4073f8:	ldr	x0, [sp, #56]
  4073fc:	cmp	x0, #0x0
  407400:	b.lt	40740c <ferror@plt+0x572c>  // b.tstop
  407404:	ldr	x0, [sp, #56]
  407408:	b	407458 <ferror@plt+0x5778>
  40740c:	bl	401c80 <__errno_location@plt>
  407410:	ldr	w0, [x0]
  407414:	cmp	w0, #0x4
  407418:	b.eq	407450 <ferror@plt+0x5770>  // b.none
  40741c:	bl	401c80 <__errno_location@plt>
  407420:	ldr	w0, [x0]
  407424:	cmp	w0, #0x16
  407428:	b.ne	407448 <ferror@plt+0x5768>  // b.any
  40742c:	ldr	x1, [sp, #24]
  407430:	mov	x0, #0x7ff00000            	// #2146435072
  407434:	cmp	x1, x0
  407438:	b.ls	407448 <ferror@plt+0x5768>  // b.plast
  40743c:	mov	x0, #0x7ff00000            	// #2146435072
  407440:	str	x0, [sp, #24]
  407444:	b	407454 <ferror@plt+0x5774>
  407448:	ldr	x0, [sp, #56]
  40744c:	b	407458 <ferror@plt+0x5778>
  407450:	nop
  407454:	b	4073e4 <ferror@plt+0x5704>
  407458:	ldp	x29, x30, [sp], #64
  40745c:	ret
  407460:	sub	sp, sp, #0x60
  407464:	stp	x29, x30, [sp, #32]
  407468:	add	x29, sp, #0x20
  40746c:	str	x0, [sp, #88]
  407470:	str	x1, [sp, #80]
  407474:	str	x2, [sp, #72]
  407478:	str	x3, [sp, #64]
  40747c:	str	x4, [sp, #56]
  407480:	str	x5, [sp, #48]
  407484:	ldr	x0, [sp, #80]
  407488:	cmp	x0, #0x0
  40748c:	b.eq	4074b0 <ferror@plt+0x57d0>  // b.none
  407490:	ldr	x4, [sp, #64]
  407494:	ldr	x3, [sp, #72]
  407498:	ldr	x2, [sp, #80]
  40749c:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  4074a0:	add	x1, x0, #0xf30
  4074a4:	ldr	x0, [sp, #88]
  4074a8:	bl	401cc0 <fprintf@plt>
  4074ac:	b	4074c8 <ferror@plt+0x57e8>
  4074b0:	ldr	x3, [sp, #64]
  4074b4:	ldr	x2, [sp, #72]
  4074b8:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  4074bc:	add	x1, x0, #0xf40
  4074c0:	ldr	x0, [sp, #88]
  4074c4:	bl	401cc0 <fprintf@plt>
  4074c8:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  4074cc:	add	x0, x0, #0xf48
  4074d0:	bl	401cb0 <gettext@plt>
  4074d4:	mov	w3, #0x7e3                 	// #2019
  4074d8:	mov	x2, x0
  4074dc:	adrp	x0, 40a000 <_obstack_memory_used@@Base+0x15c0>
  4074e0:	add	x1, x0, #0x278
  4074e4:	ldr	x0, [sp, #88]
  4074e8:	bl	401cc0 <fprintf@plt>
  4074ec:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x5c0>
  4074f0:	add	x0, x0, #0xf50
  4074f4:	bl	401cb0 <gettext@plt>
  4074f8:	ldr	x1, [sp, #88]
  4074fc:	bl	401c30 <fputs_unlocked@plt>
  407500:	ldr	x0, [sp, #48]
  407504:	cmp	x0, #0x9
  407508:	b.eq	4078dc <ferror@plt+0x5bfc>  // b.none
  40750c:	ldr	x0, [sp, #48]
  407510:	cmp	x0, #0x9
  407514:	b.hi	407974 <ferror@plt+0x5c94>  // b.pmore
  407518:	ldr	x0, [sp, #48]
  40751c:	cmp	x0, #0x8
  407520:	b.eq	407858 <ferror@plt+0x5b78>  // b.none
  407524:	ldr	x0, [sp, #48]
  407528:	cmp	x0, #0x8
  40752c:	b.hi	407974 <ferror@plt+0x5c94>  // b.pmore
  407530:	ldr	x0, [sp, #48]
  407534:	cmp	x0, #0x7
  407538:	b.eq	4077cc <ferror@plt+0x5aec>  // b.none
  40753c:	ldr	x0, [sp, #48]
  407540:	cmp	x0, #0x7
  407544:	b.hi	407974 <ferror@plt+0x5c94>  // b.pmore
  407548:	ldr	x0, [sp, #48]
  40754c:	cmp	x0, #0x6
  407550:	b.eq	407750 <ferror@plt+0x5a70>  // b.none
  407554:	ldr	x0, [sp, #48]
  407558:	cmp	x0, #0x6
  40755c:	b.hi	407974 <ferror@plt+0x5c94>  // b.pmore
  407560:	ldr	x0, [sp, #48]
  407564:	cmp	x0, #0x5
  407568:	b.eq	4076e4 <ferror@plt+0x5a04>  // b.none
  40756c:	ldr	x0, [sp, #48]
  407570:	cmp	x0, #0x5
  407574:	b.hi	407974 <ferror@plt+0x5c94>  // b.pmore
  407578:	ldr	x0, [sp, #48]
  40757c:	cmp	x0, #0x4
  407580:	b.eq	407688 <ferror@plt+0x59a8>  // b.none
  407584:	ldr	x0, [sp, #48]
  407588:	cmp	x0, #0x4
  40758c:	b.hi	407974 <ferror@plt+0x5c94>  // b.pmore
  407590:	ldr	x0, [sp, #48]
  407594:	cmp	x0, #0x3
  407598:	b.eq	40763c <ferror@plt+0x595c>  // b.none
  40759c:	ldr	x0, [sp, #48]
  4075a0:	cmp	x0, #0x3
  4075a4:	b.hi	407974 <ferror@plt+0x5c94>  // b.pmore
  4075a8:	ldr	x0, [sp, #48]
  4075ac:	cmp	x0, #0x2
  4075b0:	b.eq	407600 <ferror@plt+0x5920>  // b.none
  4075b4:	ldr	x0, [sp, #48]
  4075b8:	cmp	x0, #0x2
  4075bc:	b.hi	407974 <ferror@plt+0x5c94>  // b.pmore
  4075c0:	ldr	x0, [sp, #48]
  4075c4:	cmp	x0, #0x0
  4075c8:	b.eq	407a0c <ferror@plt+0x5d2c>  // b.none
  4075cc:	ldr	x0, [sp, #48]
  4075d0:	cmp	x0, #0x1
  4075d4:	b.ne	407974 <ferror@plt+0x5c94>  // b.any
  4075d8:	adrp	x0, 40a000 <_obstack_memory_used@@Base+0x15c0>
  4075dc:	add	x0, x0, #0x20
  4075e0:	bl	401cb0 <gettext@plt>
  4075e4:	mov	x1, x0
  4075e8:	ldr	x0, [sp, #56]
  4075ec:	ldr	x0, [x0]
  4075f0:	mov	x2, x0
  4075f4:	ldr	x0, [sp, #88]
  4075f8:	bl	401cc0 <fprintf@plt>
  4075fc:	b	407a10 <ferror@plt+0x5d30>
  407600:	adrp	x0, 40a000 <_obstack_memory_used@@Base+0x15c0>
  407604:	add	x0, x0, #0x30
  407608:	bl	401cb0 <gettext@plt>
  40760c:	mov	x4, x0
  407610:	ldr	x0, [sp, #56]
  407614:	ldr	x1, [x0]
  407618:	ldr	x0, [sp, #56]
  40761c:	add	x0, x0, #0x8
  407620:	ldr	x0, [x0]
  407624:	mov	x3, x0
  407628:	mov	x2, x1
  40762c:	mov	x1, x4
  407630:	ldr	x0, [sp, #88]
  407634:	bl	401cc0 <fprintf@plt>
  407638:	b	407a10 <ferror@plt+0x5d30>
  40763c:	adrp	x0, 40a000 <_obstack_memory_used@@Base+0x15c0>
  407640:	add	x0, x0, #0x48
  407644:	bl	401cb0 <gettext@plt>
  407648:	mov	x5, x0
  40764c:	ldr	x0, [sp, #56]
  407650:	ldr	x1, [x0]
  407654:	ldr	x0, [sp, #56]
  407658:	add	x0, x0, #0x8
  40765c:	ldr	x2, [x0]
  407660:	ldr	x0, [sp, #56]
  407664:	add	x0, x0, #0x10
  407668:	ldr	x0, [x0]
  40766c:	mov	x4, x0
  407670:	mov	x3, x2
  407674:	mov	x2, x1
  407678:	mov	x1, x5
  40767c:	ldr	x0, [sp, #88]
  407680:	bl	401cc0 <fprintf@plt>
  407684:	b	407a10 <ferror@plt+0x5d30>
  407688:	adrp	x0, 40a000 <_obstack_memory_used@@Base+0x15c0>
  40768c:	add	x0, x0, #0x68
  407690:	bl	401cb0 <gettext@plt>
  407694:	mov	x6, x0
  407698:	ldr	x0, [sp, #56]
  40769c:	ldr	x1, [x0]
  4076a0:	ldr	x0, [sp, #56]
  4076a4:	add	x0, x0, #0x8
  4076a8:	ldr	x2, [x0]
  4076ac:	ldr	x0, [sp, #56]
  4076b0:	add	x0, x0, #0x10
  4076b4:	ldr	x3, [x0]
  4076b8:	ldr	x0, [sp, #56]
  4076bc:	add	x0, x0, #0x18
  4076c0:	ldr	x0, [x0]
  4076c4:	mov	x5, x0
  4076c8:	mov	x4, x3
  4076cc:	mov	x3, x2
  4076d0:	mov	x2, x1
  4076d4:	mov	x1, x6
  4076d8:	ldr	x0, [sp, #88]
  4076dc:	bl	401cc0 <fprintf@plt>
  4076e0:	b	407a10 <ferror@plt+0x5d30>
  4076e4:	adrp	x0, 40a000 <_obstack_memory_used@@Base+0x15c0>
  4076e8:	add	x0, x0, #0x88
  4076ec:	bl	401cb0 <gettext@plt>
  4076f0:	mov	x7, x0
  4076f4:	ldr	x0, [sp, #56]
  4076f8:	ldr	x1, [x0]
  4076fc:	ldr	x0, [sp, #56]
  407700:	add	x0, x0, #0x8
  407704:	ldr	x2, [x0]
  407708:	ldr	x0, [sp, #56]
  40770c:	add	x0, x0, #0x10
  407710:	ldr	x3, [x0]
  407714:	ldr	x0, [sp, #56]
  407718:	add	x0, x0, #0x18
  40771c:	ldr	x4, [x0]
  407720:	ldr	x0, [sp, #56]
  407724:	add	x0, x0, #0x20
  407728:	ldr	x0, [x0]
  40772c:	mov	x6, x0
  407730:	mov	x5, x4
  407734:	mov	x4, x3
  407738:	mov	x3, x2
  40773c:	mov	x2, x1
  407740:	mov	x1, x7
  407744:	ldr	x0, [sp, #88]
  407748:	bl	401cc0 <fprintf@plt>
  40774c:	b	407a10 <ferror@plt+0x5d30>
  407750:	adrp	x0, 40a000 <_obstack_memory_used@@Base+0x15c0>
  407754:	add	x0, x0, #0xb0
  407758:	bl	401cb0 <gettext@plt>
  40775c:	mov	x8, x0
  407760:	ldr	x0, [sp, #56]
  407764:	ldr	x1, [x0]
  407768:	ldr	x0, [sp, #56]
  40776c:	add	x0, x0, #0x8
  407770:	ldr	x2, [x0]
  407774:	ldr	x0, [sp, #56]
  407778:	add	x0, x0, #0x10
  40777c:	ldr	x3, [x0]
  407780:	ldr	x0, [sp, #56]
  407784:	add	x0, x0, #0x18
  407788:	ldr	x4, [x0]
  40778c:	ldr	x0, [sp, #56]
  407790:	add	x0, x0, #0x20
  407794:	ldr	x5, [x0]
  407798:	ldr	x0, [sp, #56]
  40779c:	add	x0, x0, #0x28
  4077a0:	ldr	x0, [x0]
  4077a4:	mov	x7, x0
  4077a8:	mov	x6, x5
  4077ac:	mov	x5, x4
  4077b0:	mov	x4, x3
  4077b4:	mov	x3, x2
  4077b8:	mov	x2, x1
  4077bc:	mov	x1, x8
  4077c0:	ldr	x0, [sp, #88]
  4077c4:	bl	401cc0 <fprintf@plt>
  4077c8:	b	407a10 <ferror@plt+0x5d30>
  4077cc:	adrp	x0, 40a000 <_obstack_memory_used@@Base+0x15c0>
  4077d0:	add	x0, x0, #0xd8
  4077d4:	bl	401cb0 <gettext@plt>
  4077d8:	mov	x8, x0
  4077dc:	ldr	x0, [sp, #56]
  4077e0:	ldr	x1, [x0]
  4077e4:	ldr	x0, [sp, #56]
  4077e8:	add	x0, x0, #0x8
  4077ec:	ldr	x2, [x0]
  4077f0:	ldr	x0, [sp, #56]
  4077f4:	add	x0, x0, #0x10
  4077f8:	ldr	x3, [x0]
  4077fc:	ldr	x0, [sp, #56]
  407800:	add	x0, x0, #0x18
  407804:	ldr	x4, [x0]
  407808:	ldr	x0, [sp, #56]
  40780c:	add	x0, x0, #0x20
  407810:	ldr	x5, [x0]
  407814:	ldr	x0, [sp, #56]
  407818:	add	x0, x0, #0x28
  40781c:	ldr	x6, [x0]
  407820:	ldr	x0, [sp, #56]
  407824:	add	x0, x0, #0x30
  407828:	ldr	x0, [x0]
  40782c:	str	x0, [sp]
  407830:	mov	x7, x6
  407834:	mov	x6, x5
  407838:	mov	x5, x4
  40783c:	mov	x4, x3
  407840:	mov	x3, x2
  407844:	mov	x2, x1
  407848:	mov	x1, x8
  40784c:	ldr	x0, [sp, #88]
  407850:	bl	401cc0 <fprintf@plt>
  407854:	b	407a10 <ferror@plt+0x5d30>
  407858:	adrp	x0, 40a000 <_obstack_memory_used@@Base+0x15c0>
  40785c:	add	x0, x0, #0x108
  407860:	bl	401cb0 <gettext@plt>
  407864:	mov	x8, x0
  407868:	ldr	x0, [sp, #56]
  40786c:	ldr	x2, [x0]
  407870:	ldr	x0, [sp, #56]
  407874:	add	x0, x0, #0x8
  407878:	ldr	x3, [x0]
  40787c:	ldr	x0, [sp, #56]
  407880:	add	x0, x0, #0x10
  407884:	ldr	x4, [x0]
  407888:	ldr	x0, [sp, #56]
  40788c:	add	x0, x0, #0x18
  407890:	ldr	x5, [x0]
  407894:	ldr	x0, [sp, #56]
  407898:	add	x0, x0, #0x20
  40789c:	ldr	x6, [x0]
  4078a0:	ldr	x0, [sp, #56]
  4078a4:	add	x0, x0, #0x28
  4078a8:	ldr	x7, [x0]
  4078ac:	ldr	x0, [sp, #56]
  4078b0:	add	x0, x0, #0x30
  4078b4:	ldr	x0, [x0]
  4078b8:	ldr	x1, [sp, #56]
  4078bc:	add	x1, x1, #0x38
  4078c0:	ldr	x1, [x1]
  4078c4:	str	x1, [sp, #8]
  4078c8:	str	x0, [sp]
  4078cc:	mov	x1, x8
  4078d0:	ldr	x0, [sp, #88]
  4078d4:	bl	401cc0 <fprintf@plt>
  4078d8:	b	407a10 <ferror@plt+0x5d30>
  4078dc:	adrp	x0, 40a000 <_obstack_memory_used@@Base+0x15c0>
  4078e0:	add	x0, x0, #0x138
  4078e4:	bl	401cb0 <gettext@plt>
  4078e8:	mov	x9, x0
  4078ec:	ldr	x0, [sp, #56]
  4078f0:	ldr	x8, [x0]
  4078f4:	ldr	x0, [sp, #56]
  4078f8:	add	x0, x0, #0x8
  4078fc:	ldr	x3, [x0]
  407900:	ldr	x0, [sp, #56]
  407904:	add	x0, x0, #0x10
  407908:	ldr	x4, [x0]
  40790c:	ldr	x0, [sp, #56]
  407910:	add	x0, x0, #0x18
  407914:	ldr	x5, [x0]
  407918:	ldr	x0, [sp, #56]
  40791c:	add	x0, x0, #0x20
  407920:	ldr	x6, [x0]
  407924:	ldr	x0, [sp, #56]
  407928:	add	x0, x0, #0x28
  40792c:	ldr	x7, [x0]
  407930:	ldr	x0, [sp, #56]
  407934:	add	x0, x0, #0x30
  407938:	ldr	x0, [x0]
  40793c:	ldr	x1, [sp, #56]
  407940:	add	x1, x1, #0x38
  407944:	ldr	x1, [x1]
  407948:	ldr	x2, [sp, #56]
  40794c:	add	x2, x2, #0x40
  407950:	ldr	x2, [x2]
  407954:	str	x2, [sp, #16]
  407958:	str	x1, [sp, #8]
  40795c:	str	x0, [sp]
  407960:	mov	x2, x8
  407964:	mov	x1, x9
  407968:	ldr	x0, [sp, #88]
  40796c:	bl	401cc0 <fprintf@plt>
  407970:	b	407a10 <ferror@plt+0x5d30>
  407974:	adrp	x0, 40a000 <_obstack_memory_used@@Base+0x15c0>
  407978:	add	x0, x0, #0x170
  40797c:	bl	401cb0 <gettext@plt>
  407980:	mov	x9, x0
  407984:	ldr	x0, [sp, #56]
  407988:	ldr	x8, [x0]
  40798c:	ldr	x0, [sp, #56]
  407990:	add	x0, x0, #0x8
  407994:	ldr	x3, [x0]
  407998:	ldr	x0, [sp, #56]
  40799c:	add	x0, x0, #0x10
  4079a0:	ldr	x4, [x0]
  4079a4:	ldr	x0, [sp, #56]
  4079a8:	add	x0, x0, #0x18
  4079ac:	ldr	x5, [x0]
  4079b0:	ldr	x0, [sp, #56]
  4079b4:	add	x0, x0, #0x20
  4079b8:	ldr	x6, [x0]
  4079bc:	ldr	x0, [sp, #56]
  4079c0:	add	x0, x0, #0x28
  4079c4:	ldr	x7, [x0]
  4079c8:	ldr	x0, [sp, #56]
  4079cc:	add	x0, x0, #0x30
  4079d0:	ldr	x0, [x0]
  4079d4:	ldr	x1, [sp, #56]
  4079d8:	add	x1, x1, #0x38
  4079dc:	ldr	x1, [x1]
  4079e0:	ldr	x2, [sp, #56]
  4079e4:	add	x2, x2, #0x40
  4079e8:	ldr	x2, [x2]
  4079ec:	str	x2, [sp, #16]
  4079f0:	str	x1, [sp, #8]
  4079f4:	str	x0, [sp]
  4079f8:	mov	x2, x8
  4079fc:	mov	x1, x9
  407a00:	ldr	x0, [sp, #88]
  407a04:	bl	401cc0 <fprintf@plt>
  407a08:	b	407a10 <ferror@plt+0x5d30>
  407a0c:	nop
  407a10:	nop
  407a14:	ldp	x29, x30, [sp, #32]
  407a18:	add	sp, sp, #0x60
  407a1c:	ret
  407a20:	stp	x29, x30, [sp, #-80]!
  407a24:	mov	x29, sp
  407a28:	str	x0, [sp, #56]
  407a2c:	str	x1, [sp, #48]
  407a30:	str	x2, [sp, #40]
  407a34:	str	x3, [sp, #32]
  407a38:	str	x4, [sp, #24]
  407a3c:	str	xzr, [sp, #72]
  407a40:	b	407a50 <ferror@plt+0x5d70>
  407a44:	ldr	x0, [sp, #72]
  407a48:	add	x0, x0, #0x1
  407a4c:	str	x0, [sp, #72]
  407a50:	ldr	x0, [sp, #72]
  407a54:	lsl	x0, x0, #3
  407a58:	ldr	x1, [sp, #24]
  407a5c:	add	x0, x1, x0
  407a60:	ldr	x0, [x0]
  407a64:	cmp	x0, #0x0
  407a68:	b.ne	407a44 <ferror@plt+0x5d64>  // b.any
  407a6c:	ldr	x5, [sp, #72]
  407a70:	ldr	x4, [sp, #24]
  407a74:	ldr	x3, [sp, #32]
  407a78:	ldr	x2, [sp, #40]
  407a7c:	ldr	x1, [sp, #48]
  407a80:	ldr	x0, [sp, #56]
  407a84:	bl	407460 <ferror@plt+0x5780>
  407a88:	nop
  407a8c:	ldp	x29, x30, [sp], #80
  407a90:	ret
  407a94:	stp	x29, x30, [sp, #-160]!
  407a98:	mov	x29, sp
  407a9c:	str	x19, [sp, #16]
  407aa0:	str	x0, [sp, #56]
  407aa4:	str	x1, [sp, #48]
  407aa8:	str	x2, [sp, #40]
  407aac:	str	x3, [sp, #32]
  407ab0:	mov	x19, x4
  407ab4:	str	xzr, [sp, #152]
  407ab8:	b	407ac8 <ferror@plt+0x5de8>
  407abc:	ldr	x0, [sp, #152]
  407ac0:	add	x0, x0, #0x1
  407ac4:	str	x0, [sp, #152]
  407ac8:	ldr	x0, [sp, #152]
  407acc:	cmp	x0, #0x9
  407ad0:	b.hi	407b50 <ferror@plt+0x5e70>  // b.pmore
  407ad4:	ldr	w1, [x19, #24]
  407ad8:	ldr	x0, [x19]
  407adc:	cmp	w1, #0x0
  407ae0:	b.lt	407af4 <ferror@plt+0x5e14>  // b.tstop
  407ae4:	add	x1, x0, #0xf
  407ae8:	and	x1, x1, #0xfffffffffffffff8
  407aec:	str	x1, [x19]
  407af0:	b	407b24 <ferror@plt+0x5e44>
  407af4:	add	w2, w1, #0x8
  407af8:	str	w2, [x19, #24]
  407afc:	ldr	w2, [x19, #24]
  407b00:	cmp	w2, #0x0
  407b04:	b.le	407b18 <ferror@plt+0x5e38>
  407b08:	add	x1, x0, #0xf
  407b0c:	and	x1, x1, #0xfffffffffffffff8
  407b10:	str	x1, [x19]
  407b14:	b	407b24 <ferror@plt+0x5e44>
  407b18:	ldr	x2, [x19, #8]
  407b1c:	sxtw	x0, w1
  407b20:	add	x0, x2, x0
  407b24:	ldr	x2, [x0]
  407b28:	ldr	x0, [sp, #152]
  407b2c:	lsl	x0, x0, #3
  407b30:	add	x1, sp, #0x48
  407b34:	str	x2, [x1, x0]
  407b38:	ldr	x0, [sp, #152]
  407b3c:	lsl	x0, x0, #3
  407b40:	add	x1, sp, #0x48
  407b44:	ldr	x0, [x1, x0]
  407b48:	cmp	x0, #0x0
  407b4c:	b.ne	407abc <ferror@plt+0x5ddc>  // b.any
  407b50:	add	x0, sp, #0x48
  407b54:	ldr	x5, [sp, #152]
  407b58:	mov	x4, x0
  407b5c:	ldr	x3, [sp, #32]
  407b60:	ldr	x2, [sp, #40]
  407b64:	ldr	x1, [sp, #48]
  407b68:	ldr	x0, [sp, #56]
  407b6c:	bl	407460 <ferror@plt+0x5780>
  407b70:	nop
  407b74:	ldr	x19, [sp, #16]
  407b78:	ldp	x29, x30, [sp], #160
  407b7c:	ret
  407b80:	stp	x29, x30, [sp, #-272]!
  407b84:	mov	x29, sp
  407b88:	str	x0, [sp, #72]
  407b8c:	str	x1, [sp, #64]
  407b90:	str	x2, [sp, #56]
  407b94:	str	x3, [sp, #48]
  407b98:	str	x4, [sp, #240]
  407b9c:	str	x5, [sp, #248]
  407ba0:	str	x6, [sp, #256]
  407ba4:	str	x7, [sp, #264]
  407ba8:	str	q0, [sp, #112]
  407bac:	str	q1, [sp, #128]
  407bb0:	str	q2, [sp, #144]
  407bb4:	str	q3, [sp, #160]
  407bb8:	str	q4, [sp, #176]
  407bbc:	str	q5, [sp, #192]
  407bc0:	str	q6, [sp, #208]
  407bc4:	str	q7, [sp, #224]
  407bc8:	add	x0, sp, #0x110
  407bcc:	str	x0, [sp, #80]
  407bd0:	add	x0, sp, #0x110
  407bd4:	str	x0, [sp, #88]
  407bd8:	add	x0, sp, #0xf0
  407bdc:	str	x0, [sp, #96]
  407be0:	mov	w0, #0xffffffe0            	// #-32
  407be4:	str	w0, [sp, #104]
  407be8:	mov	w0, #0xffffff80            	// #-128
  407bec:	str	w0, [sp, #108]
  407bf0:	add	x2, sp, #0x10
  407bf4:	add	x3, sp, #0x50
  407bf8:	ldp	x0, x1, [x3]
  407bfc:	stp	x0, x1, [x2]
  407c00:	ldp	x0, x1, [x3, #16]
  407c04:	stp	x0, x1, [x2, #16]
  407c08:	add	x0, sp, #0x10
  407c0c:	mov	x4, x0
  407c10:	ldr	x3, [sp, #48]
  407c14:	ldr	x2, [sp, #56]
  407c18:	ldr	x1, [sp, #64]
  407c1c:	ldr	x0, [sp, #72]
  407c20:	bl	407a94 <ferror@plt+0x5db4>
  407c24:	nop
  407c28:	ldp	x29, x30, [sp], #272
  407c2c:	ret
  407c30:	stp	x29, x30, [sp, #-16]!
  407c34:	mov	x29, sp
  407c38:	adrp	x0, 40a000 <_obstack_memory_used@@Base+0x15c0>
  407c3c:	add	x0, x0, #0x1b0
  407c40:	bl	401cb0 <gettext@plt>
  407c44:	mov	x2, x0
  407c48:	adrp	x0, 40a000 <_obstack_memory_used@@Base+0x15c0>
  407c4c:	add	x1, x0, #0x1c8
  407c50:	mov	x0, x2
  407c54:	bl	401c60 <printf@plt>
  407c58:	adrp	x0, 40a000 <_obstack_memory_used@@Base+0x15c0>
  407c5c:	add	x0, x0, #0x1e0
  407c60:	bl	401cb0 <gettext@plt>
  407c64:	mov	x3, x0
  407c68:	adrp	x0, 40a000 <_obstack_memory_used@@Base+0x15c0>
  407c6c:	add	x2, x0, #0x1f8
  407c70:	adrp	x0, 40a000 <_obstack_memory_used@@Base+0x15c0>
  407c74:	add	x1, x0, #0x220
  407c78:	mov	x0, x3
  407c7c:	bl	401c60 <printf@plt>
  407c80:	adrp	x0, 40a000 <_obstack_memory_used@@Base+0x15c0>
  407c84:	add	x0, x0, #0x230
  407c88:	bl	401cb0 <gettext@plt>
  407c8c:	mov	x2, x0
  407c90:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  407c94:	add	x0, x0, #0x2b8
  407c98:	ldr	x0, [x0]
  407c9c:	mov	x1, x0
  407ca0:	mov	x0, x2
  407ca4:	bl	401c30 <fputs_unlocked@plt>
  407ca8:	nop
  407cac:	ldp	x29, x30, [sp], #16
  407cb0:	ret
  407cb4:	stp	x29, x30, [sp, #-32]!
  407cb8:	mov	x29, sp
  407cbc:	str	x0, [sp, #24]
  407cc0:	str	x1, [sp, #16]
  407cc4:	mov	x0, #0x0                   	// #0
  407cc8:	ldr	x6, [sp, #24]
  407ccc:	ldr	x1, [sp, #16]
  407cd0:	mul	x7, x6, x1
  407cd4:	umulh	x1, x6, x1
  407cd8:	mov	x2, x7
  407cdc:	mov	x3, x1
  407ce0:	mov	x4, x3
  407ce4:	mov	x5, #0x0                   	// #0
  407ce8:	cmp	x4, #0x0
  407cec:	b.eq	407cf4 <ferror@plt+0x6014>  // b.none
  407cf0:	mov	x0, #0x1                   	// #1
  407cf4:	cmp	x2, #0x0
  407cf8:	b.ge	407d00 <ferror@plt+0x6020>  // b.tcont
  407cfc:	mov	x0, #0x1                   	// #1
  407d00:	and	w0, w0, #0x1
  407d04:	and	w0, w0, #0xff
  407d08:	cmp	w0, #0x0
  407d0c:	b.eq	407d14 <ferror@plt+0x6034>  // b.none
  407d10:	bl	4080c8 <ferror@plt+0x63e8>
  407d14:	ldr	x1, [sp, #24]
  407d18:	ldr	x0, [sp, #16]
  407d1c:	mul	x0, x1, x0
  407d20:	bl	407ee8 <ferror@plt+0x6208>
  407d24:	ldp	x29, x30, [sp], #32
  407d28:	ret
  407d2c:	stp	x29, x30, [sp, #-48]!
  407d30:	mov	x29, sp
  407d34:	str	x0, [sp, #40]
  407d38:	str	x1, [sp, #32]
  407d3c:	str	x2, [sp, #24]
  407d40:	mov	x0, #0x0                   	// #0
  407d44:	ldr	x2, [sp, #32]
  407d48:	ldr	x1, [sp, #24]
  407d4c:	mul	x3, x2, x1
  407d50:	umulh	x1, x2, x1
  407d54:	mov	x4, x3
  407d58:	mov	x5, x1
  407d5c:	mov	x6, x5
  407d60:	mov	x7, #0x0                   	// #0
  407d64:	cmp	x6, #0x0
  407d68:	b.eq	407d70 <ferror@plt+0x6090>  // b.none
  407d6c:	mov	x0, #0x1                   	// #1
  407d70:	cmp	x4, #0x0
  407d74:	b.ge	407d7c <ferror@plt+0x609c>  // b.tcont
  407d78:	mov	x0, #0x1                   	// #1
  407d7c:	and	w0, w0, #0x1
  407d80:	and	w0, w0, #0xff
  407d84:	cmp	w0, #0x0
  407d88:	b.eq	407d90 <ferror@plt+0x60b0>  // b.none
  407d8c:	bl	4080c8 <ferror@plt+0x63e8>
  407d90:	ldr	x1, [sp, #32]
  407d94:	ldr	x0, [sp, #24]
  407d98:	mul	x0, x1, x0
  407d9c:	mov	x1, x0
  407da0:	ldr	x0, [sp, #40]
  407da4:	bl	407f28 <ferror@plt+0x6248>
  407da8:	ldp	x29, x30, [sp], #48
  407dac:	ret
  407db0:	stp	x29, x30, [sp, #-64]!
  407db4:	mov	x29, sp
  407db8:	str	x0, [sp, #40]
  407dbc:	str	x1, [sp, #32]
  407dc0:	str	x2, [sp, #24]
  407dc4:	ldr	x0, [sp, #32]
  407dc8:	ldr	x0, [x0]
  407dcc:	str	x0, [sp, #56]
  407dd0:	ldr	x0, [sp, #40]
  407dd4:	cmp	x0, #0x0
  407dd8:	b.ne	407e68 <ferror@plt+0x6188>  // b.any
  407ddc:	ldr	x0, [sp, #56]
  407de0:	cmp	x0, #0x0
  407de4:	b.ne	407e18 <ferror@plt+0x6138>  // b.any
  407de8:	mov	x1, #0x80                  	// #128
  407dec:	ldr	x0, [sp, #24]
  407df0:	udiv	x0, x1, x0
  407df4:	str	x0, [sp, #56]
  407df8:	ldr	x0, [sp, #56]
  407dfc:	cmp	x0, #0x0
  407e00:	cset	w0, eq  // eq = none
  407e04:	and	w0, w0, #0xff
  407e08:	and	x0, x0, #0xff
  407e0c:	ldr	x1, [sp, #56]
  407e10:	add	x0, x1, x0
  407e14:	str	x0, [sp, #56]
  407e18:	mov	x0, #0x0                   	// #0
  407e1c:	ldr	x2, [sp, #56]
  407e20:	ldr	x1, [sp, #24]
  407e24:	mul	x3, x2, x1
  407e28:	umulh	x1, x2, x1
  407e2c:	mov	x4, x3
  407e30:	mov	x5, x1
  407e34:	mov	x6, x5
  407e38:	mov	x7, #0x0                   	// #0
  407e3c:	cmp	x6, #0x0
  407e40:	b.eq	407e48 <ferror@plt+0x6168>  // b.none
  407e44:	mov	x0, #0x1                   	// #1
  407e48:	cmp	x4, #0x0
  407e4c:	b.ge	407e54 <ferror@plt+0x6174>  // b.tcont
  407e50:	mov	x0, #0x1                   	// #1
  407e54:	and	w0, w0, #0x1
  407e58:	and	w0, w0, #0xff
  407e5c:	cmp	w0, #0x0
  407e60:	b.eq	407ea0 <ferror@plt+0x61c0>  // b.none
  407e64:	bl	4080c8 <ferror@plt+0x63e8>
  407e68:	mov	x1, #0x5555555555555555    	// #6148914691236517205
  407e6c:	movk	x1, #0x5554
  407e70:	ldr	x0, [sp, #24]
  407e74:	udiv	x0, x1, x0
  407e78:	ldr	x1, [sp, #56]
  407e7c:	cmp	x1, x0
  407e80:	b.cc	407e88 <ferror@plt+0x61a8>  // b.lo, b.ul, b.last
  407e84:	bl	4080c8 <ferror@plt+0x63e8>
  407e88:	ldr	x0, [sp, #56]
  407e8c:	lsr	x1, x0, #1
  407e90:	ldr	x0, [sp, #56]
  407e94:	add	x0, x1, x0
  407e98:	add	x0, x0, #0x1
  407e9c:	str	x0, [sp, #56]
  407ea0:	ldr	x0, [sp, #32]
  407ea4:	ldr	x1, [sp, #56]
  407ea8:	str	x1, [x0]
  407eac:	ldr	x1, [sp, #56]
  407eb0:	ldr	x0, [sp, #24]
  407eb4:	mul	x0, x1, x0
  407eb8:	mov	x1, x0
  407ebc:	ldr	x0, [sp, #40]
  407ec0:	bl	407f28 <ferror@plt+0x6248>
  407ec4:	ldp	x29, x30, [sp], #64
  407ec8:	ret
  407ecc:	stp	x29, x30, [sp, #-32]!
  407ed0:	mov	x29, sp
  407ed4:	str	x0, [sp, #24]
  407ed8:	ldr	x0, [sp, #24]
  407edc:	bl	407ee8 <ferror@plt+0x6208>
  407ee0:	ldp	x29, x30, [sp], #32
  407ee4:	ret
  407ee8:	stp	x29, x30, [sp, #-48]!
  407eec:	mov	x29, sp
  407ef0:	str	x0, [sp, #24]
  407ef4:	ldr	x0, [sp, #24]
  407ef8:	bl	4019f0 <malloc@plt>
  407efc:	str	x0, [sp, #40]
  407f00:	ldr	x0, [sp, #40]
  407f04:	cmp	x0, #0x0
  407f08:	b.ne	407f1c <ferror@plt+0x623c>  // b.any
  407f0c:	ldr	x0, [sp, #24]
  407f10:	cmp	x0, #0x0
  407f14:	b.eq	407f1c <ferror@plt+0x623c>  // b.none
  407f18:	bl	4080c8 <ferror@plt+0x63e8>
  407f1c:	ldr	x0, [sp, #40]
  407f20:	ldp	x29, x30, [sp], #48
  407f24:	ret
  407f28:	stp	x29, x30, [sp, #-32]!
  407f2c:	mov	x29, sp
  407f30:	str	x0, [sp, #24]
  407f34:	str	x1, [sp, #16]
  407f38:	ldr	x0, [sp, #16]
  407f3c:	cmp	x0, #0x0
  407f40:	b.ne	407f60 <ferror@plt+0x6280>  // b.any
  407f44:	ldr	x0, [sp, #24]
  407f48:	cmp	x0, #0x0
  407f4c:	b.eq	407f60 <ferror@plt+0x6280>  // b.none
  407f50:	ldr	x0, [sp, #24]
  407f54:	bl	401ba0 <free@plt>
  407f58:	mov	x0, #0x0                   	// #0
  407f5c:	b	407f90 <ferror@plt+0x62b0>
  407f60:	ldr	x1, [sp, #16]
  407f64:	ldr	x0, [sp, #24]
  407f68:	bl	401aa0 <realloc@plt>
  407f6c:	str	x0, [sp, #24]
  407f70:	ldr	x0, [sp, #24]
  407f74:	cmp	x0, #0x0
  407f78:	b.ne	407f8c <ferror@plt+0x62ac>  // b.any
  407f7c:	ldr	x0, [sp, #16]
  407f80:	cmp	x0, #0x0
  407f84:	b.eq	407f8c <ferror@plt+0x62ac>  // b.none
  407f88:	bl	4080c8 <ferror@plt+0x63e8>
  407f8c:	ldr	x0, [sp, #24]
  407f90:	ldp	x29, x30, [sp], #32
  407f94:	ret
  407f98:	stp	x29, x30, [sp, #-32]!
  407f9c:	mov	x29, sp
  407fa0:	str	x0, [sp, #24]
  407fa4:	str	x1, [sp, #16]
  407fa8:	mov	x2, #0x1                   	// #1
  407fac:	ldr	x1, [sp, #16]
  407fb0:	ldr	x0, [sp, #24]
  407fb4:	bl	407db0 <ferror@plt+0x60d0>
  407fb8:	ldp	x29, x30, [sp], #32
  407fbc:	ret
  407fc0:	stp	x29, x30, [sp, #-32]!
  407fc4:	mov	x29, sp
  407fc8:	str	x0, [sp, #24]
  407fcc:	ldr	x0, [sp, #24]
  407fd0:	bl	407ee8 <ferror@plt+0x6208>
  407fd4:	ldr	x2, [sp, #24]
  407fd8:	mov	w1, #0x0                   	// #0
  407fdc:	bl	401a70 <memset@plt>
  407fe0:	ldp	x29, x30, [sp], #32
  407fe4:	ret
  407fe8:	stp	x29, x30, [sp, #-48]!
  407fec:	mov	x29, sp
  407ff0:	str	x0, [sp, #24]
  407ff4:	str	x1, [sp, #16]
  407ff8:	mov	x0, #0x0                   	// #0
  407ffc:	ldr	x6, [sp, #24]
  408000:	ldr	x1, [sp, #16]
  408004:	mul	x7, x6, x1
  408008:	umulh	x1, x6, x1
  40800c:	mov	x2, x7
  408010:	mov	x3, x1
  408014:	mov	x4, x3
  408018:	mov	x5, #0x0                   	// #0
  40801c:	cmp	x4, #0x0
  408020:	b.eq	408028 <ferror@plt+0x6348>  // b.none
  408024:	mov	x0, #0x1                   	// #1
  408028:	cmp	x2, #0x0
  40802c:	b.ge	408034 <ferror@plt+0x6354>  // b.tcont
  408030:	mov	x0, #0x1                   	// #1
  408034:	and	w0, w0, #0x1
  408038:	and	w0, w0, #0xff
  40803c:	cmp	w0, #0x0
  408040:	b.ne	408060 <ferror@plt+0x6380>  // b.any
  408044:	ldr	x1, [sp, #16]
  408048:	ldr	x0, [sp, #24]
  40804c:	bl	401a90 <calloc@plt>
  408050:	str	x0, [sp, #40]
  408054:	ldr	x0, [sp, #40]
  408058:	cmp	x0, #0x0
  40805c:	b.ne	408064 <ferror@plt+0x6384>  // b.any
  408060:	bl	4080c8 <ferror@plt+0x63e8>
  408064:	ldr	x0, [sp, #40]
  408068:	ldp	x29, x30, [sp], #48
  40806c:	ret
  408070:	stp	x29, x30, [sp, #-32]!
  408074:	mov	x29, sp
  408078:	str	x0, [sp, #24]
  40807c:	str	x1, [sp, #16]
  408080:	ldr	x0, [sp, #16]
  408084:	bl	407ee8 <ferror@plt+0x6208>
  408088:	ldr	x2, [sp, #16]
  40808c:	ldr	x1, [sp, #24]
  408090:	bl	4018d0 <memcpy@plt>
  408094:	ldp	x29, x30, [sp], #32
  408098:	ret
  40809c:	stp	x29, x30, [sp, #-32]!
  4080a0:	mov	x29, sp
  4080a4:	str	x0, [sp, #24]
  4080a8:	ldr	x0, [sp, #24]
  4080ac:	bl	401900 <strlen@plt>
  4080b0:	add	x0, x0, #0x1
  4080b4:	mov	x1, x0
  4080b8:	ldr	x0, [sp, #24]
  4080bc:	bl	408070 <ferror@plt+0x6390>
  4080c0:	ldp	x29, x30, [sp], #32
  4080c4:	ret
  4080c8:	stp	x29, x30, [sp, #-32]!
  4080cc:	mov	x29, sp
  4080d0:	str	x19, [sp, #16]
  4080d4:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  4080d8:	add	x0, x0, #0x230
  4080dc:	ldr	w19, [x0]
  4080e0:	adrp	x0, 40a000 <_obstack_memory_used@@Base+0x15c0>
  4080e4:	add	x0, x0, #0x2a8
  4080e8:	bl	401cb0 <gettext@plt>
  4080ec:	mov	x3, x0
  4080f0:	adrp	x0, 40a000 <_obstack_memory_used@@Base+0x15c0>
  4080f4:	add	x2, x0, #0x2c0
  4080f8:	mov	w1, #0x0                   	// #0
  4080fc:	mov	w0, w19
  408100:	bl	401920 <error@plt>
  408104:	bl	401b00 <abort@plt>
  408108:	nop
  40810c:	ret
  408110:	stp	x29, x30, [sp, #-32]!
  408114:	mov	x29, sp
  408118:	str	w0, [sp, #28]
  40811c:	str	w1, [sp, #24]
  408120:	ldr	w1, [sp, #24]
  408124:	ldr	w0, [sp, #28]
  408128:	bl	408b14 <_obstack_memory_used@@Base+0xd4>
  40812c:	cmp	w0, #0x0
  408130:	b.ge	408138 <ferror@plt+0x6458>  // b.tcont
  408134:	bl	408108 <ferror@plt+0x6428>
  408138:	nop
  40813c:	ldp	x29, x30, [sp], #32
  408140:	ret
  408144:	stp	x29, x30, [sp, #-48]!
  408148:	mov	x29, sp
  40814c:	str	x0, [sp, #24]
  408150:	str	wzr, [sp, #44]
  408154:	str	wzr, [sp, #40]
  408158:	ldr	x0, [sp, #24]
  40815c:	bl	4019a0 <fileno@plt>
  408160:	str	w0, [sp, #36]
  408164:	ldr	w0, [sp, #36]
  408168:	cmp	w0, #0x0
  40816c:	b.ge	40817c <ferror@plt+0x649c>  // b.tcont
  408170:	ldr	x0, [sp, #24]
  408174:	bl	4019b0 <fclose@plt>
  408178:	b	4081f8 <ferror@plt+0x6518>
  40817c:	ldr	x0, [sp, #24]
  408180:	bl	401c40 <__freading@plt>
  408184:	cmp	w0, #0x0
  408188:	b.eq	4081a8 <ferror@plt+0x64c8>  // b.none
  40818c:	ldr	x0, [sp, #24]
  408190:	bl	4019a0 <fileno@plt>
  408194:	mov	w2, #0x1                   	// #1
  408198:	mov	x1, #0x0                   	// #0
  40819c:	bl	401980 <lseek@plt>
  4081a0:	cmn	x0, #0x1
  4081a4:	b.eq	4081c4 <ferror@plt+0x64e4>  // b.none
  4081a8:	ldr	x0, [sp, #24]
  4081ac:	bl	40823c <ferror@plt+0x655c>
  4081b0:	cmp	w0, #0x0
  4081b4:	b.eq	4081c4 <ferror@plt+0x64e4>  // b.none
  4081b8:	bl	401c80 <__errno_location@plt>
  4081bc:	ldr	w0, [x0]
  4081c0:	str	w0, [sp, #44]
  4081c4:	ldr	x0, [sp, #24]
  4081c8:	bl	4019b0 <fclose@plt>
  4081cc:	str	w0, [sp, #40]
  4081d0:	ldr	w0, [sp, #44]
  4081d4:	cmp	w0, #0x0
  4081d8:	b.eq	4081f4 <ferror@plt+0x6514>  // b.none
  4081dc:	bl	401c80 <__errno_location@plt>
  4081e0:	mov	x1, x0
  4081e4:	ldr	w0, [sp, #44]
  4081e8:	str	w0, [x1]
  4081ec:	mov	w0, #0xffffffff            	// #-1
  4081f0:	str	w0, [sp, #40]
  4081f4:	ldr	w0, [sp, #40]
  4081f8:	ldp	x29, x30, [sp], #48
  4081fc:	ret
  408200:	stp	x29, x30, [sp, #-32]!
  408204:	mov	x29, sp
  408208:	str	x0, [sp, #24]
  40820c:	ldr	x0, [sp, #24]
  408210:	ldr	w0, [x0]
  408214:	and	w0, w0, #0x100
  408218:	cmp	w0, #0x0
  40821c:	b.eq	408230 <ferror@plt+0x6550>  // b.none
  408220:	mov	w2, #0x1                   	// #1
  408224:	mov	x1, #0x0                   	// #0
  408228:	ldr	x0, [sp, #24]
  40822c:	bl	408288 <ferror@plt+0x65a8>
  408230:	nop
  408234:	ldp	x29, x30, [sp], #32
  408238:	ret
  40823c:	stp	x29, x30, [sp, #-32]!
  408240:	mov	x29, sp
  408244:	str	x0, [sp, #24]
  408248:	ldr	x0, [sp, #24]
  40824c:	cmp	x0, #0x0
  408250:	b.eq	408264 <ferror@plt+0x6584>  // b.none
  408254:	ldr	x0, [sp, #24]
  408258:	bl	401c40 <__freading@plt>
  40825c:	cmp	w0, #0x0
  408260:	b.ne	408270 <ferror@plt+0x6590>  // b.any
  408264:	ldr	x0, [sp, #24]
  408268:	bl	401be0 <fflush@plt>
  40826c:	b	408280 <ferror@plt+0x65a0>
  408270:	ldr	x0, [sp, #24]
  408274:	bl	408200 <ferror@plt+0x6520>
  408278:	ldr	x0, [sp, #24]
  40827c:	bl	401be0 <fflush@plt>
  408280:	ldp	x29, x30, [sp], #32
  408284:	ret
  408288:	stp	x29, x30, [sp, #-64]!
  40828c:	mov	x29, sp
  408290:	str	x0, [sp, #40]
  408294:	str	x1, [sp, #32]
  408298:	str	w2, [sp, #28]
  40829c:	ldr	x0, [sp, #40]
  4082a0:	ldr	x1, [x0, #16]
  4082a4:	ldr	x0, [sp, #40]
  4082a8:	ldr	x0, [x0, #8]
  4082ac:	cmp	x1, x0
  4082b0:	b.ne	408330 <ferror@plt+0x6650>  // b.any
  4082b4:	ldr	x0, [sp, #40]
  4082b8:	ldr	x1, [x0, #40]
  4082bc:	ldr	x0, [sp, #40]
  4082c0:	ldr	x0, [x0, #32]
  4082c4:	cmp	x1, x0
  4082c8:	b.ne	408330 <ferror@plt+0x6650>  // b.any
  4082cc:	ldr	x0, [sp, #40]
  4082d0:	ldr	x0, [x0, #72]
  4082d4:	cmp	x0, #0x0
  4082d8:	b.ne	408330 <ferror@plt+0x6650>  // b.any
  4082dc:	ldr	x0, [sp, #40]
  4082e0:	bl	4019a0 <fileno@plt>
  4082e4:	ldr	w2, [sp, #28]
  4082e8:	ldr	x1, [sp, #32]
  4082ec:	bl	401980 <lseek@plt>
  4082f0:	str	x0, [sp, #56]
  4082f4:	ldr	x0, [sp, #56]
  4082f8:	cmn	x0, #0x1
  4082fc:	b.ne	408308 <ferror@plt+0x6628>  // b.any
  408300:	mov	w0, #0xffffffff            	// #-1
  408304:	b	408340 <ferror@plt+0x6660>
  408308:	ldr	x0, [sp, #40]
  40830c:	ldr	w0, [x0]
  408310:	and	w1, w0, #0xffffffef
  408314:	ldr	x0, [sp, #40]
  408318:	str	w1, [x0]
  40831c:	ldr	x0, [sp, #40]
  408320:	ldr	x1, [sp, #56]
  408324:	str	x1, [x0, #144]
  408328:	mov	w0, #0x0                   	// #0
  40832c:	b	408340 <ferror@plt+0x6660>
  408330:	ldr	w2, [sp, #28]
  408334:	ldr	x1, [sp, #32]
  408338:	ldr	x0, [sp, #40]
  40833c:	bl	401b90 <fseeko@plt>
  408340:	ldp	x29, x30, [sp], #64
  408344:	ret
  408348:	stp	x29, x30, [sp, #-64]!
  40834c:	mov	x29, sp
  408350:	str	x0, [sp, #40]
  408354:	str	x1, [sp, #32]
  408358:	str	x2, [sp, #24]
  40835c:	str	x3, [sp, #16]
  408360:	ldr	x0, [sp, #40]
  408364:	cmp	x0, #0x0
  408368:	b.ne	408374 <ferror@plt+0x6694>  // b.any
  40836c:	add	x0, sp, #0x30
  408370:	str	x0, [sp, #40]
  408374:	ldr	x3, [sp, #16]
  408378:	ldr	x2, [sp, #24]
  40837c:	ldr	x1, [sp, #32]
  408380:	ldr	x0, [sp, #40]
  408384:	bl	4018c0 <mbrtowc@plt>
  408388:	str	x0, [sp, #56]
  40838c:	ldr	x0, [sp, #56]
  408390:	cmn	x0, #0x3
  408394:	b.ls	4083e0 <ferror@plt+0x6700>  // b.plast
  408398:	ldr	x0, [sp, #24]
  40839c:	cmp	x0, #0x0
  4083a0:	b.eq	4083e0 <ferror@plt+0x6700>  // b.none
  4083a4:	mov	w0, #0x0                   	// #0
  4083a8:	bl	408c8c <_obstack_memory_used@@Base+0x24c>
  4083ac:	and	w0, w0, #0xff
  4083b0:	eor	w0, w0, #0x1
  4083b4:	and	w0, w0, #0xff
  4083b8:	cmp	w0, #0x0
  4083bc:	b.eq	4083e0 <ferror@plt+0x6700>  // b.none
  4083c0:	ldr	x0, [sp, #32]
  4083c4:	ldrb	w0, [x0]
  4083c8:	strb	w0, [sp, #55]
  4083cc:	ldrb	w1, [sp, #55]
  4083d0:	ldr	x0, [sp, #40]
  4083d4:	str	w1, [x0]
  4083d8:	mov	x0, #0x1                   	// #1
  4083dc:	b	4083e4 <ferror@plt+0x6704>
  4083e0:	ldr	x0, [sp, #56]
  4083e4:	ldp	x29, x30, [sp], #64
  4083e8:	ret
  4083ec:	stp	x29, x30, [sp, #-32]!
  4083f0:	mov	x29, sp
  4083f4:	str	x0, [sp, #24]
  4083f8:	str	x1, [sp, #16]
  4083fc:	ldr	x0, [sp, #24]
  408400:	ldrb	w0, [x0, #80]
  408404:	and	w0, w0, #0x1
  408408:	and	w0, w0, #0xff
  40840c:	cmp	w0, #0x0
  408410:	b.eq	408430 <ferror@plt+0x6750>  // b.none
  408414:	ldr	x0, [sp, #24]
  408418:	ldr	x2, [x0, #56]
  40841c:	ldr	x0, [sp, #24]
  408420:	ldr	x0, [x0, #72]
  408424:	ldr	x1, [sp, #16]
  408428:	blr	x2
  40842c:	b	408440 <ferror@plt+0x6760>
  408430:	ldr	x0, [sp, #24]
  408434:	ldr	x1, [x0, #56]
  408438:	ldr	x0, [sp, #16]
  40843c:	blr	x1
  408440:	ldp	x29, x30, [sp], #32
  408444:	ret
  408448:	stp	x29, x30, [sp, #-32]!
  40844c:	mov	x29, sp
  408450:	str	x0, [sp, #24]
  408454:	str	x1, [sp, #16]
  408458:	ldr	x0, [sp, #24]
  40845c:	ldrb	w0, [x0, #80]
  408460:	and	w0, w0, #0x1
  408464:	and	w0, w0, #0xff
  408468:	cmp	w0, #0x0
  40846c:	b.eq	40848c <ferror@plt+0x67ac>  // b.none
  408470:	ldr	x0, [sp, #24]
  408474:	ldr	x2, [x0, #64]
  408478:	ldr	x0, [sp, #24]
  40847c:	ldr	x0, [x0, #72]
  408480:	ldr	x1, [sp, #16]
  408484:	blr	x2
  408488:	b	40849c <ferror@plt+0x67bc>
  40848c:	ldr	x0, [sp, #24]
  408490:	ldr	x1, [x0, #64]
  408494:	ldr	x0, [sp, #16]
  408498:	blr	x1
  40849c:	nop
  4084a0:	ldp	x29, x30, [sp], #32
  4084a4:	ret
  4084a8:	stp	x29, x30, [sp, #-64]!
  4084ac:	mov	x29, sp
  4084b0:	str	x0, [sp, #40]
  4084b4:	str	x1, [sp, #32]
  4084b8:	str	x2, [sp, #24]
  4084bc:	ldr	x0, [sp, #24]
  4084c0:	cmp	x0, #0x0
  4084c4:	b.ne	4084d0 <ferror@plt+0x67f0>  // b.any
  4084c8:	mov	x0, #0x10                  	// #16
  4084cc:	str	x0, [sp, #24]
  4084d0:	ldr	x0, [sp, #32]
  4084d4:	cmp	x0, #0x0
  4084d8:	b.ne	4084f8 <ferror@plt+0x6818>  // b.any
  4084dc:	mov	w0, #0x20                  	// #32
  4084e0:	str	w0, [sp, #60]
  4084e4:	mov	w1, #0x1000                	// #4096
  4084e8:	ldr	w0, [sp, #60]
  4084ec:	sub	w0, w1, w0
  4084f0:	sxtw	x0, w0
  4084f4:	str	x0, [sp, #32]
  4084f8:	ldr	x0, [sp, #40]
  4084fc:	ldr	x1, [sp, #32]
  408500:	str	x1, [x0]
  408504:	ldr	x0, [sp, #24]
  408508:	sub	x1, x0, #0x1
  40850c:	ldr	x0, [sp, #40]
  408510:	str	x1, [x0, #48]
  408514:	ldr	x0, [sp, #40]
  408518:	ldr	x0, [x0]
  40851c:	mov	x1, x0
  408520:	ldr	x0, [sp, #40]
  408524:	bl	4083ec <ferror@plt+0x670c>
  408528:	mov	x1, x0
  40852c:	ldr	x0, [sp, #40]
  408530:	str	x1, [x0, #8]
  408534:	ldr	x0, [sp, #40]
  408538:	ldr	x0, [x0, #8]
  40853c:	str	x0, [sp, #48]
  408540:	ldr	x0, [sp, #48]
  408544:	cmp	x0, #0x0
  408548:	b.ne	40855c <ferror@plt+0x687c>  // b.any
  40854c:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  408550:	add	x0, x0, #0x290
  408554:	ldr	x0, [x0]
  408558:	blr	x0
  40855c:	ldr	x0, [sp, #48]
  408560:	add	x0, x0, #0x10
  408564:	mov	x1, x0
  408568:	ldr	x0, [sp, #24]
  40856c:	add	x0, x1, x0
  408570:	sub	x1, x0, #0x1
  408574:	ldr	x0, [sp, #24]
  408578:	neg	x0, x0
  40857c:	and	x0, x1, x0
  408580:	mov	x1, x0
  408584:	ldr	x0, [sp, #40]
  408588:	str	x1, [x0, #16]
  40858c:	ldr	x0, [sp, #40]
  408590:	ldr	x1, [x0, #16]
  408594:	ldr	x0, [sp, #40]
  408598:	str	x1, [x0, #24]
  40859c:	ldr	x0, [sp, #40]
  4085a0:	ldr	x0, [x0]
  4085a4:	ldr	x1, [sp, #48]
  4085a8:	add	x1, x1, x0
  4085ac:	ldr	x0, [sp, #48]
  4085b0:	str	x1, [x0]
  4085b4:	ldr	x0, [sp, #48]
  4085b8:	ldr	x1, [x0]
  4085bc:	ldr	x0, [sp, #40]
  4085c0:	str	x1, [x0, #32]
  4085c4:	ldr	x0, [sp, #48]
  4085c8:	str	xzr, [x0, #8]
  4085cc:	ldr	x0, [sp, #40]
  4085d0:	ldrb	w1, [x0, #80]
  4085d4:	and	w1, w1, #0xfffffffd
  4085d8:	strb	w1, [x0, #80]
  4085dc:	ldr	x0, [sp, #40]
  4085e0:	ldrb	w1, [x0, #80]
  4085e4:	and	w1, w1, #0xfffffffb
  4085e8:	strb	w1, [x0, #80]
  4085ec:	mov	w0, #0x1                   	// #1
  4085f0:	ldp	x29, x30, [sp], #64
  4085f4:	ret

00000000004085f8 <_obstack_begin@@Base>:
  4085f8:	stp	x29, x30, [sp, #-64]!
  4085fc:	mov	x29, sp
  408600:	str	x0, [sp, #56]
  408604:	str	x1, [sp, #48]
  408608:	str	x2, [sp, #40]
  40860c:	str	x3, [sp, #32]
  408610:	str	x4, [sp, #24]
  408614:	ldr	x0, [sp, #56]
  408618:	ldr	x1, [sp, #32]
  40861c:	str	x1, [x0, #56]
  408620:	ldr	x0, [sp, #56]
  408624:	ldr	x1, [sp, #24]
  408628:	str	x1, [x0, #64]
  40862c:	ldr	x0, [sp, #56]
  408630:	ldrb	w1, [x0, #80]
  408634:	and	w1, w1, #0xfffffffe
  408638:	strb	w1, [x0, #80]
  40863c:	ldr	x2, [sp, #40]
  408640:	ldr	x1, [sp, #48]
  408644:	ldr	x0, [sp, #56]
  408648:	bl	4084a8 <ferror@plt+0x67c8>
  40864c:	ldp	x29, x30, [sp], #64
  408650:	ret

0000000000408654 <_obstack_begin_1@@Base>:
  408654:	stp	x29, x30, [sp, #-64]!
  408658:	mov	x29, sp
  40865c:	str	x0, [sp, #56]
  408660:	str	x1, [sp, #48]
  408664:	str	x2, [sp, #40]
  408668:	str	x3, [sp, #32]
  40866c:	str	x4, [sp, #24]
  408670:	str	x5, [sp, #16]
  408674:	ldr	x0, [sp, #56]
  408678:	ldr	x1, [sp, #32]
  40867c:	str	x1, [x0, #56]
  408680:	ldr	x0, [sp, #56]
  408684:	ldr	x1, [sp, #24]
  408688:	str	x1, [x0, #64]
  40868c:	ldr	x0, [sp, #56]
  408690:	ldr	x1, [sp, #16]
  408694:	str	x1, [x0, #72]
  408698:	ldr	x0, [sp, #56]
  40869c:	ldrb	w1, [x0, #80]
  4086a0:	orr	w1, w1, #0x1
  4086a4:	strb	w1, [x0, #80]
  4086a8:	ldr	x2, [sp, #40]
  4086ac:	ldr	x1, [sp, #48]
  4086b0:	ldr	x0, [sp, #56]
  4086b4:	bl	4084a8 <ferror@plt+0x67c8>
  4086b8:	ldp	x29, x30, [sp], #64
  4086bc:	ret

00000000004086c0 <_obstack_newchunk@@Base>:
  4086c0:	stp	x29, x30, [sp, #-96]!
  4086c4:	mov	x29, sp
  4086c8:	str	x0, [sp, #24]
  4086cc:	str	x1, [sp, #16]
  4086d0:	ldr	x0, [sp, #24]
  4086d4:	ldr	x0, [x0, #8]
  4086d8:	str	x0, [sp, #72]
  4086dc:	str	xzr, [sp, #88]
  4086e0:	ldr	x0, [sp, #24]
  4086e4:	ldr	x1, [x0, #24]
  4086e8:	ldr	x0, [sp, #24]
  4086ec:	ldr	x0, [x0, #16]
  4086f0:	sub	x0, x1, x0
  4086f4:	str	x0, [sp, #64]
  4086f8:	ldr	x1, [sp, #64]
  4086fc:	ldr	x0, [sp, #16]
  408700:	add	x0, x1, x0
  408704:	str	x0, [sp, #56]
  408708:	ldr	x0, [sp, #24]
  40870c:	ldr	x0, [x0, #48]
  408710:	ldr	x1, [sp, #56]
  408714:	add	x0, x1, x0
  408718:	str	x0, [sp, #48]
  40871c:	ldr	x0, [sp, #64]
  408720:	lsr	x1, x0, #3
  408724:	ldr	x0, [sp, #48]
  408728:	add	x0, x1, x0
  40872c:	add	x0, x0, #0x64
  408730:	str	x0, [sp, #80]
  408734:	ldr	x1, [sp, #80]
  408738:	ldr	x0, [sp, #48]
  40873c:	cmp	x1, x0
  408740:	b.cs	40874c <_obstack_newchunk@@Base+0x8c>  // b.hs, b.nlast
  408744:	ldr	x0, [sp, #48]
  408748:	str	x0, [sp, #80]
  40874c:	ldr	x0, [sp, #24]
  408750:	ldr	x0, [x0]
  408754:	ldr	x1, [sp, #80]
  408758:	cmp	x1, x0
  40875c:	b.cs	40876c <_obstack_newchunk@@Base+0xac>  // b.hs, b.nlast
  408760:	ldr	x0, [sp, #24]
  408764:	ldr	x0, [x0]
  408768:	str	x0, [sp, #80]
  40876c:	ldr	x1, [sp, #64]
  408770:	ldr	x0, [sp, #56]
  408774:	cmp	x1, x0
  408778:	b.hi	40879c <_obstack_newchunk@@Base+0xdc>  // b.pmore
  40877c:	ldr	x1, [sp, #56]
  408780:	ldr	x0, [sp, #48]
  408784:	cmp	x1, x0
  408788:	b.hi	40879c <_obstack_newchunk@@Base+0xdc>  // b.pmore
  40878c:	ldr	x1, [sp, #80]
  408790:	ldr	x0, [sp, #24]
  408794:	bl	4083ec <ferror@plt+0x670c>
  408798:	str	x0, [sp, #88]
  40879c:	ldr	x0, [sp, #88]
  4087a0:	cmp	x0, #0x0
  4087a4:	b.ne	4087b8 <_obstack_newchunk@@Base+0xf8>  // b.any
  4087a8:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  4087ac:	add	x0, x0, #0x290
  4087b0:	ldr	x0, [x0]
  4087b4:	blr	x0
  4087b8:	ldr	x0, [sp, #24]
  4087bc:	ldr	x1, [sp, #88]
  4087c0:	str	x1, [x0, #8]
  4087c4:	ldr	x0, [sp, #88]
  4087c8:	ldr	x1, [sp, #72]
  4087cc:	str	x1, [x0, #8]
  4087d0:	ldr	x1, [sp, #88]
  4087d4:	ldr	x0, [sp, #80]
  4087d8:	add	x1, x1, x0
  4087dc:	ldr	x0, [sp, #24]
  4087e0:	str	x1, [x0, #32]
  4087e4:	ldr	x0, [sp, #24]
  4087e8:	ldr	x1, [x0, #32]
  4087ec:	ldr	x0, [sp, #88]
  4087f0:	str	x1, [x0]
  4087f4:	ldr	x0, [sp, #88]
  4087f8:	add	x0, x0, #0x10
  4087fc:	mov	x1, x0
  408800:	ldr	x0, [sp, #24]
  408804:	ldr	x0, [x0, #48]
  408808:	add	x1, x1, x0
  40880c:	ldr	x0, [sp, #24]
  408810:	ldr	x0, [x0, #48]
  408814:	mvn	x0, x0
  408818:	and	x0, x1, x0
  40881c:	str	x0, [sp, #40]
  408820:	ldr	x0, [sp, #24]
  408824:	ldr	x0, [x0, #16]
  408828:	ldr	x2, [sp, #64]
  40882c:	mov	x1, x0
  408830:	ldr	x0, [sp, #40]
  408834:	bl	4018d0 <memcpy@plt>
  408838:	ldr	x0, [sp, #24]
  40883c:	ldrb	w0, [x0, #80]
  408840:	and	w0, w0, #0x2
  408844:	and	w0, w0, #0xff
  408848:	cmp	w0, #0x0
  40884c:	b.ne	4088a4 <_obstack_newchunk@@Base+0x1e4>  // b.any
  408850:	ldr	x0, [sp, #24]
  408854:	ldr	x0, [x0, #16]
  408858:	ldr	x1, [sp, #72]
  40885c:	add	x1, x1, #0x10
  408860:	mov	x2, x1
  408864:	ldr	x1, [sp, #24]
  408868:	ldr	x1, [x1, #48]
  40886c:	add	x2, x2, x1
  408870:	ldr	x1, [sp, #24]
  408874:	ldr	x1, [x1, #48]
  408878:	mvn	x1, x1
  40887c:	and	x1, x2, x1
  408880:	cmp	x0, x1
  408884:	b.ne	4088a4 <_obstack_newchunk@@Base+0x1e4>  // b.any
  408888:	ldr	x0, [sp, #72]
  40888c:	ldr	x1, [x0, #8]
  408890:	ldr	x0, [sp, #88]
  408894:	str	x1, [x0, #8]
  408898:	ldr	x1, [sp, #72]
  40889c:	ldr	x0, [sp, #24]
  4088a0:	bl	408448 <ferror@plt+0x6768>
  4088a4:	ldr	x0, [sp, #24]
  4088a8:	ldr	x1, [sp, #40]
  4088ac:	str	x1, [x0, #16]
  4088b0:	ldr	x0, [sp, #24]
  4088b4:	ldr	x1, [x0, #16]
  4088b8:	ldr	x0, [sp, #64]
  4088bc:	add	x1, x1, x0
  4088c0:	ldr	x0, [sp, #24]
  4088c4:	str	x1, [x0, #24]
  4088c8:	ldr	x0, [sp, #24]
  4088cc:	ldrb	w1, [x0, #80]
  4088d0:	and	w1, w1, #0xfffffffd
  4088d4:	strb	w1, [x0, #80]
  4088d8:	nop
  4088dc:	ldp	x29, x30, [sp], #96
  4088e0:	ret

00000000004088e4 <_obstack_allocated_p@@Base>:
  4088e4:	sub	sp, sp, #0x20
  4088e8:	str	x0, [sp, #8]
  4088ec:	str	x1, [sp]
  4088f0:	ldr	x0, [sp, #8]
  4088f4:	ldr	x0, [x0, #8]
  4088f8:	str	x0, [sp, #24]
  4088fc:	b	408914 <_obstack_allocated_p@@Base+0x30>
  408900:	ldr	x0, [sp, #24]
  408904:	ldr	x0, [x0, #8]
  408908:	str	x0, [sp, #16]
  40890c:	ldr	x0, [sp, #16]
  408910:	str	x0, [sp, #24]
  408914:	ldr	x0, [sp, #24]
  408918:	cmp	x0, #0x0
  40891c:	b.eq	408944 <_obstack_allocated_p@@Base+0x60>  // b.none
  408920:	ldr	x1, [sp, #24]
  408924:	ldr	x0, [sp]
  408928:	cmp	x1, x0
  40892c:	b.cs	408900 <_obstack_allocated_p@@Base+0x1c>  // b.hs, b.nlast
  408930:	ldr	x0, [sp, #24]
  408934:	ldr	x0, [x0]
  408938:	ldr	x1, [sp]
  40893c:	cmp	x1, x0
  408940:	b.hi	408900 <_obstack_allocated_p@@Base+0x1c>  // b.pmore
  408944:	ldr	x0, [sp, #24]
  408948:	cmp	x0, #0x0
  40894c:	cset	w0, ne  // ne = any
  408950:	and	w0, w0, #0xff
  408954:	add	sp, sp, #0x20
  408958:	ret

000000000040895c <_obstack_free@@Base>:
  40895c:	stp	x29, x30, [sp, #-48]!
  408960:	mov	x29, sp
  408964:	str	x0, [sp, #24]
  408968:	str	x1, [sp, #16]
  40896c:	ldr	x0, [sp, #24]
  408970:	ldr	x0, [x0, #8]
  408974:	str	x0, [sp, #40]
  408978:	b	4089ac <_obstack_free@@Base+0x50>
  40897c:	ldr	x0, [sp, #40]
  408980:	ldr	x0, [x0, #8]
  408984:	str	x0, [sp, #32]
  408988:	ldr	x1, [sp, #40]
  40898c:	ldr	x0, [sp, #24]
  408990:	bl	408448 <ferror@plt+0x6768>
  408994:	ldr	x0, [sp, #32]
  408998:	str	x0, [sp, #40]
  40899c:	ldr	x0, [sp, #24]
  4089a0:	ldrb	w1, [x0, #80]
  4089a4:	orr	w1, w1, #0x2
  4089a8:	strb	w1, [x0, #80]
  4089ac:	ldr	x0, [sp, #40]
  4089b0:	cmp	x0, #0x0
  4089b4:	b.eq	4089dc <_obstack_free@@Base+0x80>  // b.none
  4089b8:	ldr	x1, [sp, #40]
  4089bc:	ldr	x0, [sp, #16]
  4089c0:	cmp	x1, x0
  4089c4:	b.cs	40897c <_obstack_free@@Base+0x20>  // b.hs, b.nlast
  4089c8:	ldr	x0, [sp, #40]
  4089cc:	ldr	x0, [x0]
  4089d0:	ldr	x1, [sp, #16]
  4089d4:	cmp	x1, x0
  4089d8:	b.hi	40897c <_obstack_free@@Base+0x20>  // b.pmore
  4089dc:	ldr	x0, [sp, #40]
  4089e0:	cmp	x0, #0x0
  4089e4:	b.eq	408a24 <_obstack_free@@Base+0xc8>  // b.none
  4089e8:	ldr	x0, [sp, #24]
  4089ec:	ldr	x1, [sp, #16]
  4089f0:	str	x1, [x0, #24]
  4089f4:	ldr	x0, [sp, #24]
  4089f8:	ldr	x1, [x0, #24]
  4089fc:	ldr	x0, [sp, #24]
  408a00:	str	x1, [x0, #16]
  408a04:	ldr	x0, [sp, #40]
  408a08:	ldr	x1, [x0]
  408a0c:	ldr	x0, [sp, #24]
  408a10:	str	x1, [x0, #32]
  408a14:	ldr	x0, [sp, #24]
  408a18:	ldr	x1, [sp, #40]
  408a1c:	str	x1, [x0, #8]
  408a20:	b	408a34 <_obstack_free@@Base+0xd8>
  408a24:	ldr	x0, [sp, #16]
  408a28:	cmp	x0, #0x0
  408a2c:	b.eq	408a34 <_obstack_free@@Base+0xd8>  // b.none
  408a30:	bl	401b00 <abort@plt>
  408a34:	nop
  408a38:	ldp	x29, x30, [sp], #48
  408a3c:	ret

0000000000408a40 <_obstack_memory_used@@Base>:
  408a40:	sub	sp, sp, #0x20
  408a44:	str	x0, [sp, #8]
  408a48:	str	xzr, [sp, #16]
  408a4c:	ldr	x0, [sp, #8]
  408a50:	ldr	x0, [x0, #8]
  408a54:	str	x0, [sp, #24]
  408a58:	b	408a88 <_obstack_memory_used@@Base+0x48>
  408a5c:	ldr	x0, [sp, #24]
  408a60:	ldr	x1, [x0]
  408a64:	ldr	x0, [sp, #24]
  408a68:	sub	x0, x1, x0
  408a6c:	mov	x1, x0
  408a70:	ldr	x0, [sp, #16]
  408a74:	add	x0, x0, x1
  408a78:	str	x0, [sp, #16]
  408a7c:	ldr	x0, [sp, #24]
  408a80:	ldr	x0, [x0, #8]
  408a84:	str	x0, [sp, #24]
  408a88:	ldr	x0, [sp, #24]
  408a8c:	cmp	x0, #0x0
  408a90:	b.ne	408a5c <_obstack_memory_used@@Base+0x1c>  // b.any
  408a94:	ldr	x0, [sp, #16]
  408a98:	add	sp, sp, #0x20
  408a9c:	ret
  408aa0:	stp	x29, x30, [sp, #-32]!
  408aa4:	mov	x29, sp
  408aa8:	str	x19, [sp, #16]
  408aac:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  408ab0:	add	x0, x0, #0x2a0
  408ab4:	ldr	x19, [x0]
  408ab8:	adrp	x0, 40a000 <_obstack_memory_used@@Base+0x15c0>
  408abc:	add	x0, x0, #0x2c8
  408ac0:	bl	401cb0 <gettext@plt>
  408ac4:	mov	x2, x0
  408ac8:	adrp	x0, 40a000 <_obstack_memory_used@@Base+0x15c0>
  408acc:	add	x1, x0, #0x2e0
  408ad0:	mov	x0, x19
  408ad4:	bl	401cc0 <fprintf@plt>
  408ad8:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x135c0>
  408adc:	add	x0, x0, #0x230
  408ae0:	ldr	w0, [x0]
  408ae4:	bl	401910 <exit@plt>
  408ae8:	sub	sp, sp, #0x10
  408aec:	str	w0, [sp, #12]
  408af0:	str	w1, [sp, #8]
  408af4:	mov	w0, #0x0                   	// #0
  408af8:	add	sp, sp, #0x10
  408afc:	ret
  408b00:	sub	sp, sp, #0x10
  408b04:	str	w0, [sp, #12]
  408b08:	mov	w0, #0x0                   	// #0
  408b0c:	add	sp, sp, #0x10
  408b10:	ret
  408b14:	stp	x29, x30, [sp, #-48]!
  408b18:	mov	x29, sp
  408b1c:	str	w0, [sp, #28]
  408b20:	str	w1, [sp, #24]
  408b24:	ldr	w0, [sp, #28]
  408b28:	bl	408b00 <_obstack_memory_used@@Base+0xc0>
  408b2c:	str	w0, [sp, #44]
  408b30:	ldr	w0, [sp, #44]
  408b34:	cmp	w0, #0x0
  408b38:	b.ne	408b4c <_obstack_memory_used@@Base+0x10c>  // b.any
  408b3c:	ldr	w1, [sp, #24]
  408b40:	ldr	w0, [sp, #28]
  408b44:	bl	408ae8 <_obstack_memory_used@@Base+0xa8>
  408b48:	b	408b50 <_obstack_memory_used@@Base+0x110>
  408b4c:	ldr	w0, [sp, #44]
  408b50:	ldp	x29, x30, [sp], #48
  408b54:	ret
  408b58:	stp	x29, x30, [sp, #-64]!
  408b5c:	mov	x29, sp
  408b60:	stp	x19, x20, [sp, #16]
  408b64:	str	x0, [sp, #40]
  408b68:	str	x1, [sp, #32]
  408b6c:	ldr	x20, [sp, #40]
  408b70:	ldr	x19, [sp, #32]
  408b74:	cmp	x20, x19
  408b78:	b.ne	408b84 <_obstack_memory_used@@Base+0x144>  // b.any
  408b7c:	mov	w0, #0x0                   	// #0
  408b80:	b	408bd4 <_obstack_memory_used@@Base+0x194>
  408b84:	ldrb	w0, [x20]
  408b88:	bl	409098 <_obstack_memory_used@@Base+0x658>
  408b8c:	strb	w0, [sp, #63]
  408b90:	ldrb	w0, [x19]
  408b94:	bl	409098 <_obstack_memory_used@@Base+0x658>
  408b98:	strb	w0, [sp, #62]
  408b9c:	ldrb	w0, [sp, #63]
  408ba0:	cmp	w0, #0x0
  408ba4:	b.eq	408bc4 <_obstack_memory_used@@Base+0x184>  // b.none
  408ba8:	add	x20, x20, #0x1
  408bac:	add	x19, x19, #0x1
  408bb0:	ldrb	w1, [sp, #63]
  408bb4:	ldrb	w0, [sp, #62]
  408bb8:	cmp	w1, w0
  408bbc:	b.eq	408b84 <_obstack_memory_used@@Base+0x144>  // b.none
  408bc0:	b	408bc8 <_obstack_memory_used@@Base+0x188>
  408bc4:	nop
  408bc8:	ldrb	w1, [sp, #63]
  408bcc:	ldrb	w0, [sp, #62]
  408bd0:	sub	w0, w1, w0
  408bd4:	ldp	x19, x20, [sp, #16]
  408bd8:	ldp	x29, x30, [sp], #64
  408bdc:	ret
  408be0:	stp	x29, x30, [sp, #-48]!
  408be4:	mov	x29, sp
  408be8:	str	x0, [sp, #24]
  408bec:	ldr	x0, [sp, #24]
  408bf0:	bl	401990 <__fpending@plt>
  408bf4:	cmp	x0, #0x0
  408bf8:	cset	w0, ne  // ne = any
  408bfc:	strb	w0, [sp, #47]
  408c00:	ldr	x0, [sp, #24]
  408c04:	bl	401940 <ferror_unlocked@plt>
  408c08:	cmp	w0, #0x0
  408c0c:	cset	w0, ne  // ne = any
  408c10:	strb	w0, [sp, #46]
  408c14:	ldr	x0, [sp, #24]
  408c18:	bl	408144 <ferror@plt+0x6464>
  408c1c:	cmp	w0, #0x0
  408c20:	cset	w0, ne  // ne = any
  408c24:	strb	w0, [sp, #45]
  408c28:	ldrb	w0, [sp, #46]
  408c2c:	cmp	w0, #0x0
  408c30:	b.ne	408c5c <_obstack_memory_used@@Base+0x21c>  // b.any
  408c34:	ldrb	w0, [sp, #45]
  408c38:	cmp	w0, #0x0
  408c3c:	b.eq	408c80 <_obstack_memory_used@@Base+0x240>  // b.none
  408c40:	ldrb	w0, [sp, #47]
  408c44:	cmp	w0, #0x0
  408c48:	b.ne	408c5c <_obstack_memory_used@@Base+0x21c>  // b.any
  408c4c:	bl	401c80 <__errno_location@plt>
  408c50:	ldr	w0, [x0]
  408c54:	cmp	w0, #0x9
  408c58:	b.eq	408c80 <_obstack_memory_used@@Base+0x240>  // b.none
  408c5c:	ldrb	w0, [sp, #45]
  408c60:	eor	w0, w0, #0x1
  408c64:	and	w0, w0, #0xff
  408c68:	cmp	w0, #0x0
  408c6c:	b.eq	408c78 <_obstack_memory_used@@Base+0x238>  // b.none
  408c70:	bl	401c80 <__errno_location@plt>
  408c74:	str	wzr, [x0]
  408c78:	mov	w0, #0xffffffff            	// #-1
  408c7c:	b	408c84 <_obstack_memory_used@@Base+0x244>
  408c80:	mov	w0, #0x0                   	// #0
  408c84:	ldp	x29, x30, [sp], #48
  408c88:	ret
  408c8c:	stp	x29, x30, [sp, #-48]!
  408c90:	mov	x29, sp
  408c94:	str	w0, [sp, #28]
  408c98:	mov	w0, #0x1                   	// #1
  408c9c:	strb	w0, [sp, #47]
  408ca0:	mov	x1, #0x0                   	// #0
  408ca4:	ldr	w0, [sp, #28]
  408ca8:	bl	401cd0 <setlocale@plt>
  408cac:	str	x0, [sp, #32]
  408cb0:	ldr	x0, [sp, #32]
  408cb4:	cmp	x0, #0x0
  408cb8:	b.eq	408cf0 <_obstack_memory_used@@Base+0x2b0>  // b.none
  408cbc:	adrp	x0, 40a000 <_obstack_memory_used@@Base+0x15c0>
  408cc0:	add	x1, x0, #0x2e8
  408cc4:	ldr	x0, [sp, #32]
  408cc8:	bl	401b70 <strcmp@plt>
  408ccc:	cmp	w0, #0x0
  408cd0:	b.eq	408cec <_obstack_memory_used@@Base+0x2ac>  // b.none
  408cd4:	adrp	x0, 40a000 <_obstack_memory_used@@Base+0x15c0>
  408cd8:	add	x1, x0, #0x2f0
  408cdc:	ldr	x0, [sp, #32]
  408ce0:	bl	401b70 <strcmp@plt>
  408ce4:	cmp	w0, #0x0
  408ce8:	b.ne	408cf0 <_obstack_memory_used@@Base+0x2b0>  // b.any
  408cec:	strb	wzr, [sp, #47]
  408cf0:	ldrb	w0, [sp, #47]
  408cf4:	ldp	x29, x30, [sp], #48
  408cf8:	ret
  408cfc:	stp	x29, x30, [sp, #-32]!
  408d00:	mov	x29, sp
  408d04:	mov	w0, #0xe                   	// #14
  408d08:	bl	4019d0 <nl_langinfo@plt>
  408d0c:	str	x0, [sp, #24]
  408d10:	ldr	x0, [sp, #24]
  408d14:	cmp	x0, #0x0
  408d18:	b.ne	408d28 <_obstack_memory_used@@Base+0x2e8>  // b.any
  408d1c:	adrp	x0, 40a000 <_obstack_memory_used@@Base+0x15c0>
  408d20:	add	x0, x0, #0x2f8
  408d24:	str	x0, [sp, #24]
  408d28:	ldr	x0, [sp, #24]
  408d2c:	ldrb	w0, [x0]
  408d30:	cmp	w0, #0x0
  408d34:	b.ne	408d44 <_obstack_memory_used@@Base+0x304>  // b.any
  408d38:	adrp	x0, 40a000 <_obstack_memory_used@@Base+0x15c0>
  408d3c:	add	x0, x0, #0x300
  408d40:	str	x0, [sp, #24]
  408d44:	ldr	x0, [sp, #24]
  408d48:	ldp	x29, x30, [sp], #32
  408d4c:	ret
  408d50:	sub	sp, sp, #0x10
  408d54:	str	w0, [sp, #12]
  408d58:	ldr	w0, [sp, #12]
  408d5c:	cmp	w0, #0x7a
  408d60:	b.gt	408da4 <_obstack_memory_used@@Base+0x364>
  408d64:	ldr	w0, [sp, #12]
  408d68:	cmp	w0, #0x61
  408d6c:	b.ge	408d9c <_obstack_memory_used@@Base+0x35c>  // b.tcont
  408d70:	ldr	w0, [sp, #12]
  408d74:	cmp	w0, #0x39
  408d78:	b.gt	408d8c <_obstack_memory_used@@Base+0x34c>
  408d7c:	ldr	w0, [sp, #12]
  408d80:	cmp	w0, #0x30
  408d84:	b.ge	408d9c <_obstack_memory_used@@Base+0x35c>  // b.tcont
  408d88:	b	408da4 <_obstack_memory_used@@Base+0x364>
  408d8c:	ldr	w0, [sp, #12]
  408d90:	sub	w0, w0, #0x41
  408d94:	cmp	w0, #0x19
  408d98:	b.hi	408da4 <_obstack_memory_used@@Base+0x364>  // b.pmore
  408d9c:	mov	w0, #0x1                   	// #1
  408da0:	b	408da8 <_obstack_memory_used@@Base+0x368>
  408da4:	mov	w0, #0x0                   	// #0
  408da8:	add	sp, sp, #0x10
  408dac:	ret
  408db0:	sub	sp, sp, #0x10
  408db4:	str	w0, [sp, #12]
  408db8:	ldr	w0, [sp, #12]
  408dbc:	cmp	w0, #0x5a
  408dc0:	b.gt	408dd4 <_obstack_memory_used@@Base+0x394>
  408dc4:	ldr	w0, [sp, #12]
  408dc8:	cmp	w0, #0x41
  408dcc:	b.ge	408de4 <_obstack_memory_used@@Base+0x3a4>  // b.tcont
  408dd0:	b	408dec <_obstack_memory_used@@Base+0x3ac>
  408dd4:	ldr	w0, [sp, #12]
  408dd8:	sub	w0, w0, #0x61
  408ddc:	cmp	w0, #0x19
  408de0:	b.hi	408dec <_obstack_memory_used@@Base+0x3ac>  // b.pmore
  408de4:	mov	w0, #0x1                   	// #1
  408de8:	b	408df0 <_obstack_memory_used@@Base+0x3b0>
  408dec:	mov	w0, #0x0                   	// #0
  408df0:	add	sp, sp, #0x10
  408df4:	ret
  408df8:	sub	sp, sp, #0x10
  408dfc:	str	w0, [sp, #12]
  408e00:	ldr	w0, [sp, #12]
  408e04:	cmp	w0, #0x7f
  408e08:	b.hi	408e14 <_obstack_memory_used@@Base+0x3d4>  // b.pmore
  408e0c:	mov	w0, #0x1                   	// #1
  408e10:	b	408e18 <_obstack_memory_used@@Base+0x3d8>
  408e14:	mov	w0, #0x0                   	// #0
  408e18:	add	sp, sp, #0x10
  408e1c:	ret
  408e20:	sub	sp, sp, #0x10
  408e24:	str	w0, [sp, #12]
  408e28:	ldr	w0, [sp, #12]
  408e2c:	cmp	w0, #0x20
  408e30:	b.eq	408e40 <_obstack_memory_used@@Base+0x400>  // b.none
  408e34:	ldr	w0, [sp, #12]
  408e38:	cmp	w0, #0x9
  408e3c:	b.ne	408e48 <_obstack_memory_used@@Base+0x408>  // b.any
  408e40:	mov	w0, #0x1                   	// #1
  408e44:	b	408e4c <_obstack_memory_used@@Base+0x40c>
  408e48:	mov	w0, #0x0                   	// #0
  408e4c:	and	w0, w0, #0x1
  408e50:	and	w0, w0, #0xff
  408e54:	add	sp, sp, #0x10
  408e58:	ret
  408e5c:	sub	sp, sp, #0x10
  408e60:	str	w0, [sp, #12]
  408e64:	ldr	w0, [sp, #12]
  408e68:	cmp	w0, #0x1f
  408e6c:	b.gt	408e80 <_obstack_memory_used@@Base+0x440>
  408e70:	ldr	w0, [sp, #12]
  408e74:	cmp	w0, #0x0
  408e78:	b.ge	408e8c <_obstack_memory_used@@Base+0x44c>  // b.tcont
  408e7c:	b	408e94 <_obstack_memory_used@@Base+0x454>
  408e80:	ldr	w0, [sp, #12]
  408e84:	cmp	w0, #0x7f
  408e88:	b.ne	408e94 <_obstack_memory_used@@Base+0x454>  // b.any
  408e8c:	mov	w0, #0x1                   	// #1
  408e90:	b	408e98 <_obstack_memory_used@@Base+0x458>
  408e94:	mov	w0, #0x0                   	// #0
  408e98:	add	sp, sp, #0x10
  408e9c:	ret
  408ea0:	sub	sp, sp, #0x10
  408ea4:	str	w0, [sp, #12]
  408ea8:	ldr	w0, [sp, #12]
  408eac:	sub	w0, w0, #0x30
  408eb0:	cmp	w0, #0x9
  408eb4:	b.hi	408ec0 <_obstack_memory_used@@Base+0x480>  // b.pmore
  408eb8:	mov	w0, #0x1                   	// #1
  408ebc:	b	408ec4 <_obstack_memory_used@@Base+0x484>
  408ec0:	mov	w0, #0x0                   	// #0
  408ec4:	add	sp, sp, #0x10
  408ec8:	ret
  408ecc:	sub	sp, sp, #0x10
  408ed0:	str	w0, [sp, #12]
  408ed4:	ldr	w0, [sp, #12]
  408ed8:	sub	w0, w0, #0x21
  408edc:	cmp	w0, #0x5d
  408ee0:	b.hi	408eec <_obstack_memory_used@@Base+0x4ac>  // b.pmore
  408ee4:	mov	w0, #0x1                   	// #1
  408ee8:	b	408ef0 <_obstack_memory_used@@Base+0x4b0>
  408eec:	mov	w0, #0x0                   	// #0
  408ef0:	add	sp, sp, #0x10
  408ef4:	ret
  408ef8:	sub	sp, sp, #0x10
  408efc:	str	w0, [sp, #12]
  408f00:	ldr	w0, [sp, #12]
  408f04:	sub	w0, w0, #0x61
  408f08:	cmp	w0, #0x19
  408f0c:	b.hi	408f18 <_obstack_memory_used@@Base+0x4d8>  // b.pmore
  408f10:	mov	w0, #0x1                   	// #1
  408f14:	b	408f1c <_obstack_memory_used@@Base+0x4dc>
  408f18:	mov	w0, #0x0                   	// #0
  408f1c:	add	sp, sp, #0x10
  408f20:	ret
  408f24:	sub	sp, sp, #0x10
  408f28:	str	w0, [sp, #12]
  408f2c:	ldr	w0, [sp, #12]
  408f30:	sub	w0, w0, #0x20
  408f34:	cmp	w0, #0x5e
  408f38:	b.hi	408f44 <_obstack_memory_used@@Base+0x504>  // b.pmore
  408f3c:	mov	w0, #0x1                   	// #1
  408f40:	b	408f48 <_obstack_memory_used@@Base+0x508>
  408f44:	mov	w0, #0x0                   	// #0
  408f48:	add	sp, sp, #0x10
  408f4c:	ret
  408f50:	sub	sp, sp, #0x10
  408f54:	str	w0, [sp, #12]
  408f58:	ldr	w0, [sp, #12]
  408f5c:	cmp	w0, #0x7e
  408f60:	b.gt	408fbc <_obstack_memory_used@@Base+0x57c>
  408f64:	ldr	w0, [sp, #12]
  408f68:	cmp	w0, #0x7b
  408f6c:	b.ge	408fb4 <_obstack_memory_used@@Base+0x574>  // b.tcont
  408f70:	ldr	w0, [sp, #12]
  408f74:	cmp	w0, #0x60
  408f78:	b.gt	408fbc <_obstack_memory_used@@Base+0x57c>
  408f7c:	ldr	w0, [sp, #12]
  408f80:	cmp	w0, #0x5b
  408f84:	b.ge	408fb4 <_obstack_memory_used@@Base+0x574>  // b.tcont
  408f88:	ldr	w0, [sp, #12]
  408f8c:	cmp	w0, #0x2f
  408f90:	b.gt	408fa4 <_obstack_memory_used@@Base+0x564>
  408f94:	ldr	w0, [sp, #12]
  408f98:	cmp	w0, #0x21
  408f9c:	b.ge	408fb4 <_obstack_memory_used@@Base+0x574>  // b.tcont
  408fa0:	b	408fbc <_obstack_memory_used@@Base+0x57c>
  408fa4:	ldr	w0, [sp, #12]
  408fa8:	sub	w0, w0, #0x3a
  408fac:	cmp	w0, #0x6
  408fb0:	b.hi	408fbc <_obstack_memory_used@@Base+0x57c>  // b.pmore
  408fb4:	mov	w0, #0x1                   	// #1
  408fb8:	b	408fc0 <_obstack_memory_used@@Base+0x580>
  408fbc:	mov	w0, #0x0                   	// #0
  408fc0:	add	sp, sp, #0x10
  408fc4:	ret
  408fc8:	sub	sp, sp, #0x10
  408fcc:	str	w0, [sp, #12]
  408fd0:	ldr	w0, [sp, #12]
  408fd4:	cmp	w0, #0xd
  408fd8:	b.gt	408fec <_obstack_memory_used@@Base+0x5ac>
  408fdc:	ldr	w0, [sp, #12]
  408fe0:	cmp	w0, #0x9
  408fe4:	b.ge	408ff8 <_obstack_memory_used@@Base+0x5b8>  // b.tcont
  408fe8:	b	409000 <_obstack_memory_used@@Base+0x5c0>
  408fec:	ldr	w0, [sp, #12]
  408ff0:	cmp	w0, #0x20
  408ff4:	b.ne	409000 <_obstack_memory_used@@Base+0x5c0>  // b.any
  408ff8:	mov	w0, #0x1                   	// #1
  408ffc:	b	409004 <_obstack_memory_used@@Base+0x5c4>
  409000:	mov	w0, #0x0                   	// #0
  409004:	add	sp, sp, #0x10
  409008:	ret
  40900c:	sub	sp, sp, #0x10
  409010:	str	w0, [sp, #12]
  409014:	ldr	w0, [sp, #12]
  409018:	sub	w0, w0, #0x41
  40901c:	cmp	w0, #0x19
  409020:	b.hi	40902c <_obstack_memory_used@@Base+0x5ec>  // b.pmore
  409024:	mov	w0, #0x1                   	// #1
  409028:	b	409030 <_obstack_memory_used@@Base+0x5f0>
  40902c:	mov	w0, #0x0                   	// #0
  409030:	add	sp, sp, #0x10
  409034:	ret
  409038:	sub	sp, sp, #0x10
  40903c:	str	w0, [sp, #12]
  409040:	ldr	w0, [sp, #12]
  409044:	sub	w0, w0, #0x30
  409048:	cmp	w0, #0x36
  40904c:	cset	w1, hi  // hi = pmore
  409050:	and	w1, w1, #0xff
  409054:	cmp	w1, #0x0
  409058:	b.ne	40908c <_obstack_memory_used@@Base+0x64c>  // b.any
  40905c:	mov	x1, #0x1                   	// #1
  409060:	lsl	x1, x1, x0
  409064:	mov	x0, #0x7e0000007e0000      	// #35465847073800192
  409068:	movk	x0, #0x3ff
  40906c:	and	x0, x1, x0
  409070:	cmp	x0, #0x0
  409074:	cset	w0, ne  // ne = any
  409078:	and	w0, w0, #0xff
  40907c:	cmp	w0, #0x0
  409080:	b.eq	40908c <_obstack_memory_used@@Base+0x64c>  // b.none
  409084:	mov	w0, #0x1                   	// #1
  409088:	b	409090 <_obstack_memory_used@@Base+0x650>
  40908c:	mov	w0, #0x0                   	// #0
  409090:	add	sp, sp, #0x10
  409094:	ret
  409098:	sub	sp, sp, #0x10
  40909c:	str	w0, [sp, #12]
  4090a0:	ldr	w0, [sp, #12]
  4090a4:	sub	w0, w0, #0x41
  4090a8:	cmp	w0, #0x19
  4090ac:	b.hi	4090bc <_obstack_memory_used@@Base+0x67c>  // b.pmore
  4090b0:	ldr	w0, [sp, #12]
  4090b4:	add	w0, w0, #0x20
  4090b8:	b	4090c0 <_obstack_memory_used@@Base+0x680>
  4090bc:	ldr	w0, [sp, #12]
  4090c0:	add	sp, sp, #0x10
  4090c4:	ret
  4090c8:	sub	sp, sp, #0x10
  4090cc:	str	w0, [sp, #12]
  4090d0:	ldr	w0, [sp, #12]
  4090d4:	sub	w0, w0, #0x61
  4090d8:	cmp	w0, #0x19
  4090dc:	b.hi	4090ec <_obstack_memory_used@@Base+0x6ac>  // b.pmore
  4090e0:	ldr	w0, [sp, #12]
  4090e4:	sub	w0, w0, #0x20
  4090e8:	b	4090f0 <_obstack_memory_used@@Base+0x6b0>
  4090ec:	ldr	w0, [sp, #12]
  4090f0:	add	sp, sp, #0x10
  4090f4:	ret
  4090f8:	stp	x29, x30, [sp, #-64]!
  4090fc:	mov	x29, sp
  409100:	stp	x19, x20, [sp, #16]
  409104:	adrp	x20, 41b000 <_obstack_memory_used@@Base+0x125c0>
  409108:	add	x20, x20, #0xdf0
  40910c:	stp	x21, x22, [sp, #32]
  409110:	adrp	x21, 41b000 <_obstack_memory_used@@Base+0x125c0>
  409114:	add	x21, x21, #0xde8
  409118:	sub	x20, x20, x21
  40911c:	mov	w22, w0
  409120:	stp	x23, x24, [sp, #48]
  409124:	mov	x23, x1
  409128:	mov	x24, x2
  40912c:	bl	401888 <mbrtowc@plt-0x38>
  409130:	cmp	xzr, x20, asr #3
  409134:	b.eq	409160 <_obstack_memory_used@@Base+0x720>  // b.none
  409138:	asr	x20, x20, #3
  40913c:	mov	x19, #0x0                   	// #0
  409140:	ldr	x3, [x21, x19, lsl #3]
  409144:	mov	x2, x24
  409148:	add	x19, x19, #0x1
  40914c:	mov	x1, x23
  409150:	mov	w0, w22
  409154:	blr	x3
  409158:	cmp	x20, x19
  40915c:	b.ne	409140 <_obstack_memory_used@@Base+0x700>  // b.any
  409160:	ldp	x19, x20, [sp, #16]
  409164:	ldp	x21, x22, [sp, #32]
  409168:	ldp	x23, x24, [sp, #48]
  40916c:	ldp	x29, x30, [sp], #64
  409170:	ret
  409174:	nop
  409178:	ret
  40917c:	nop
  409180:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0x135c0>
  409184:	mov	x1, #0x0                   	// #0
  409188:	ldr	x2, [x2, #544]
  40918c:	b	401950 <__cxa_atexit@plt>
  409190:	mov	x2, x1
  409194:	mov	x1, x0
  409198:	mov	w0, #0x0                   	// #0
  40919c:	b	401ca0 <__xstat@plt>
  4091a0:	mov	x2, x1
  4091a4:	mov	w1, w0
  4091a8:	mov	w0, #0x0                   	// #0
  4091ac:	b	401c20 <__fxstat@plt>

Disassembly of section .fini:

00000000004091b0 <.fini>:
  4091b0:	stp	x29, x30, [sp, #-16]!
  4091b4:	mov	x29, sp
  4091b8:	ldp	x29, x30, [sp], #16
  4091bc:	ret
