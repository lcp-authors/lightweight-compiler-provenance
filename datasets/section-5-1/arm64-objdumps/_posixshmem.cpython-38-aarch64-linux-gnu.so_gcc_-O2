
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_posixshmem.cpython-38-aarch64-linux-gnu.so_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000c38 <.init>:
 c38:	stp	x29, x30, [sp, #-16]!
 c3c:	mov	x29, sp
 c40:	bl	da0 <_PyLong_AsInt@plt+0x10>
 c44:	ldp	x29, x30, [sp], #16
 c48:	ret

Disassembly of section .plt:

0000000000000c50 <_PyUnicode_Ready@plt-0x20>:
 c50:	stp	x16, x30, [sp, #-16]!
 c54:	adrp	x16, 11000 <PyInit__posixshmem@@Base+0xfdb8>
 c58:	ldr	x17, [x16, #4088]
 c5c:	add	x16, x16, #0xff8
 c60:	br	x17
 c64:	nop
 c68:	nop
 c6c:	nop

0000000000000c70 <_PyUnicode_Ready@plt>:
 c70:	adrp	x16, 12000 <_PyUnicode_Ready>
 c74:	ldr	x17, [x16]
 c78:	add	x16, x16, #0x0
 c7c:	br	x17

0000000000000c80 <PyEval_RestoreThread@plt>:
 c80:	adrp	x16, 12000 <_PyUnicode_Ready>
 c84:	ldr	x17, [x16, #8]
 c88:	add	x16, x16, #0x8
 c8c:	br	x17

0000000000000c90 <__cxa_finalize@plt>:
 c90:	adrp	x16, 12000 <_PyUnicode_Ready>
 c94:	ldr	x17, [x16, #16]
 c98:	add	x16, x16, #0x10
 c9c:	br	x17

0000000000000ca0 <_PyArg_UnpackKeywords@plt>:
 ca0:	adrp	x16, 12000 <_PyUnicode_Ready>
 ca4:	ldr	x17, [x16, #24]
 ca8:	add	x16, x16, #0x18
 cac:	br	x17

0000000000000cb0 <PyErr_SetString@plt>:
 cb0:	adrp	x16, 12000 <_PyUnicode_Ready>
 cb4:	ldr	x17, [x16, #32]
 cb8:	add	x16, x16, #0x20
 cbc:	br	x17

0000000000000cc0 <PyLong_FromLong@plt>:
 cc0:	adrp	x16, 12000 <_PyUnicode_Ready>
 cc4:	ldr	x17, [x16, #40]
 cc8:	add	x16, x16, #0x28
 ccc:	br	x17

0000000000000cd0 <_PyArg_BadArgument@plt>:
 cd0:	adrp	x16, 12000 <_PyUnicode_Ready>
 cd4:	ldr	x17, [x16, #48]
 cd8:	add	x16, x16, #0x30
 cdc:	br	x17

0000000000000ce0 <__gmon_start__@plt>:
 ce0:	adrp	x16, 12000 <_PyUnicode_Ready>
 ce4:	ldr	x17, [x16, #56]
 ce8:	add	x16, x16, #0x38
 cec:	br	x17

0000000000000cf0 <PyErr_Occurred@plt>:
 cf0:	adrp	x16, 12000 <_PyUnicode_Ready>
 cf4:	ldr	x17, [x16, #64]
 cf8:	add	x16, x16, #0x40
 cfc:	br	x17

0000000000000d00 <PyModule_Create2@plt>:
 d00:	adrp	x16, 12000 <_PyUnicode_Ready>
 d04:	ldr	x17, [x16, #72]
 d08:	add	x16, x16, #0x48
 d0c:	br	x17

0000000000000d10 <PyErr_SetFromErrnoWithFilenameObject@plt>:
 d10:	adrp	x16, 12000 <_PyUnicode_Ready>
 d14:	ldr	x17, [x16, #80]
 d18:	add	x16, x16, #0x50
 d1c:	br	x17

0000000000000d20 <shm_open@plt>:
 d20:	adrp	x16, 12000 <_PyUnicode_Ready>
 d24:	ldr	x17, [x16, #88]
 d28:	add	x16, x16, #0x58
 d2c:	br	x17

0000000000000d30 <PyUnicode_AsUTF8@plt>:
 d30:	adrp	x16, 12000 <_PyUnicode_Ready>
 d34:	ldr	x17, [x16, #96]
 d38:	add	x16, x16, #0x60
 d3c:	br	x17

0000000000000d40 <shm_unlink@plt>:
 d40:	adrp	x16, 12000 <_PyUnicode_Ready>
 d44:	ldr	x17, [x16, #104]
 d48:	add	x16, x16, #0x68
 d4c:	br	x17

0000000000000d50 <PyEval_SaveThread@plt>:
 d50:	adrp	x16, 12000 <_PyUnicode_Ready>
 d54:	ldr	x17, [x16, #112]
 d58:	add	x16, x16, #0x70
 d5c:	br	x17

0000000000000d60 <PyErr_CheckSignals@plt>:
 d60:	adrp	x16, 12000 <_PyUnicode_Ready>
 d64:	ldr	x17, [x16, #120]
 d68:	add	x16, x16, #0x78
 d6c:	br	x17

0000000000000d70 <PyType_IsSubtype@plt>:
 d70:	adrp	x16, 12000 <_PyUnicode_Ready>
 d74:	ldr	x17, [x16, #128]
 d78:	add	x16, x16, #0x80
 d7c:	br	x17

0000000000000d80 <__errno_location@plt>:
 d80:	adrp	x16, 12000 <_PyUnicode_Ready>
 d84:	ldr	x17, [x16, #136]
 d88:	add	x16, x16, #0x88
 d8c:	br	x17

0000000000000d90 <_PyLong_AsInt@plt>:
 d90:	adrp	x16, 12000 <_PyUnicode_Ready>
 d94:	ldr	x17, [x16, #144]
 d98:	add	x16, x16, #0x90
 d9c:	br	x17

Disassembly of section .text:

0000000000000da0 <PyInit__posixshmem@@Base-0x4a8>:
     da0:	adrp	x0, 11000 <PyInit__posixshmem@@Base+0xfdb8>
     da4:	ldr	x0, [x0, #4048]
     da8:	cbz	x0, db0 <_PyLong_AsInt@plt+0x20>
     dac:	b	ce0 <__gmon_start__@plt>
     db0:	ret
     db4:	nop
     db8:	adrp	x0, 12000 <PyInit__posixshmem@@Base+0x10db8>
     dbc:	add	x0, x0, #0x1e8
     dc0:	adrp	x1, 12000 <PyInit__posixshmem@@Base+0x10db8>
     dc4:	add	x1, x1, #0x1e8
     dc8:	cmp	x1, x0
     dcc:	b.eq	de4 <_PyLong_AsInt@plt+0x54>  // b.none
     dd0:	adrp	x1, 11000 <PyInit__posixshmem@@Base+0xfdb8>
     dd4:	ldr	x1, [x1, #4008]
     dd8:	cbz	x1, de4 <_PyLong_AsInt@plt+0x54>
     ddc:	mov	x16, x1
     de0:	br	x16
     de4:	ret
     de8:	adrp	x0, 12000 <PyInit__posixshmem@@Base+0x10db8>
     dec:	add	x0, x0, #0x1e8
     df0:	adrp	x1, 12000 <PyInit__posixshmem@@Base+0x10db8>
     df4:	add	x1, x1, #0x1e8
     df8:	sub	x1, x1, x0
     dfc:	lsr	x2, x1, #63
     e00:	add	x1, x2, x1, asr #3
     e04:	cmp	xzr, x1, asr #1
     e08:	asr	x1, x1, #1
     e0c:	b.eq	e24 <_PyLong_AsInt@plt+0x94>  // b.none
     e10:	adrp	x2, 11000 <PyInit__posixshmem@@Base+0xfdb8>
     e14:	ldr	x2, [x2, #4064]
     e18:	cbz	x2, e24 <_PyLong_AsInt@plt+0x94>
     e1c:	mov	x16, x2
     e20:	br	x16
     e24:	ret
     e28:	stp	x29, x30, [sp, #-32]!
     e2c:	mov	x29, sp
     e30:	str	x19, [sp, #16]
     e34:	adrp	x19, 12000 <PyInit__posixshmem@@Base+0x10db8>
     e38:	ldrb	w0, [x19, #488]
     e3c:	cbnz	w0, e64 <_PyLong_AsInt@plt+0xd4>
     e40:	adrp	x0, 11000 <PyInit__posixshmem@@Base+0xfdb8>
     e44:	ldr	x0, [x0, #4024]
     e48:	cbz	x0, e58 <_PyLong_AsInt@plt+0xc8>
     e4c:	adrp	x0, 12000 <PyInit__posixshmem@@Base+0x10db8>
     e50:	ldr	x0, [x0, #152]
     e54:	bl	c90 <__cxa_finalize@plt>
     e58:	bl	db8 <_PyLong_AsInt@plt+0x28>
     e5c:	mov	w0, #0x1                   	// #1
     e60:	strb	w0, [x19, #488]
     e64:	ldr	x19, [sp, #16]
     e68:	ldp	x29, x30, [sp], #32
     e6c:	ret
     e70:	b	de8 <_PyLong_AsInt@plt+0x58>
     e74:	nop
     e78:	sub	sp, sp, #0x50
     e7c:	cmp	x3, #0x0
     e80:	ccmp	x2, #0x1, #0x0, eq  // eq = none
     e84:	stp	x29, x30, [sp, #16]
     e88:	add	x29, sp, #0x10
     e8c:	stp	x19, x20, [sp, #32]
     e90:	mov	x19, x1
     e94:	b.ne	f44 <_PyLong_AsInt@plt+0x1b4>  // b.any
     e98:	cbz	x1, f44 <_PyLong_AsInt@plt+0x1b4>
     e9c:	ldr	x20, [x19]
     ea0:	ldr	x0, [x20, #8]
     ea4:	ldr	x0, [x0, #168]
     ea8:	tbz	w0, #28, f98 <_PyLong_AsInt@plt+0x208>
     eac:	ldrsb	w0, [x20, #32]
     eb0:	tbnz	w0, #31, ec8 <_PyLong_AsInt@plt+0x138>
     eb4:	mov	x0, x20
     eb8:	bl	c70 <_PyUnicode_Ready@plt>
     ebc:	cmn	w0, #0x1
     ec0:	b.eq	f78 <_PyLong_AsInt@plt+0x1e8>  // b.none
     ec4:	ldr	x20, [x19]
     ec8:	mov	x0, x20
     ecc:	bl	d30 <PyUnicode_AsUTF8@plt>
     ed0:	mov	x19, x0
     ed4:	cbz	x0, f78 <_PyLong_AsInt@plt+0x1e8>
     ed8:	stp	x21, x22, [sp, #48]
     edc:	b	ef8 <_PyLong_AsInt@plt+0x168>
     ee0:	bl	d80 <__errno_location@plt>
     ee4:	ldr	w0, [x0]
     ee8:	cmp	w0, #0x4
     eec:	b.ne	fc0 <_PyLong_AsInt@plt+0x230>  // b.any
     ef0:	bl	d60 <PyErr_CheckSignals@plt>
     ef4:	cbnz	w0, f8c <_PyLong_AsInt@plt+0x1fc>
     ef8:	bl	d50 <PyEval_SaveThread@plt>
     efc:	mov	x22, x0
     f00:	mov	x0, x19
     f04:	bl	d40 <shm_unlink@plt>
     f08:	mov	w21, w0
     f0c:	mov	x0, x22
     f10:	bl	c80 <PyEval_RestoreThread@plt>
     f14:	tbnz	w21, #31, ee0 <_PyLong_AsInt@plt+0x150>
     f18:	adrp	x1, 11000 <PyInit__posixshmem@@Base+0xfdb8>
     f1c:	ldp	x21, x22, [sp, #48]
     f20:	ldr	x1, [x1, #4056]
     f24:	mov	x0, x1
     f28:	ldr	x2, [x1]
     f2c:	add	x2, x2, #0x1
     f30:	str	x2, [x1]
     f34:	ldp	x29, x30, [sp, #16]
     f38:	ldp	x19, x20, [sp, #32]
     f3c:	add	sp, sp, #0x50
     f40:	ret
     f44:	add	x0, sp, #0x48
     f48:	str	x0, [sp]
     f4c:	mov	x1, x2
     f50:	mov	x0, x19
     f54:	mov	w6, #0x1                   	// #1
     f58:	adrp	x4, 12000 <PyInit__posixshmem@@Base+0x10db8>
     f5c:	mov	w5, w6
     f60:	add	x4, x4, #0xa0
     f64:	mov	w7, #0x0                   	// #0
     f68:	mov	x2, #0x0                   	// #0
     f6c:	bl	ca0 <_PyArg_UnpackKeywords@plt>
     f70:	mov	x19, x0
     f74:	cbnz	x0, e9c <_PyLong_AsInt@plt+0x10c>
     f78:	mov	x0, #0x0                   	// #0
     f7c:	ldp	x29, x30, [sp, #16]
     f80:	ldp	x19, x20, [sp, #32]
     f84:	add	sp, sp, #0x50
     f88:	ret
     f8c:	mov	x0, #0x0                   	// #0
     f90:	ldp	x21, x22, [sp, #48]
     f94:	b	f7c <_PyLong_AsInt@plt+0x1ec>
     f98:	mov	x3, x20
     f9c:	adrp	x2, 1000 <_PyLong_AsInt@plt+0x270>
     fa0:	adrp	x1, 1000 <_PyLong_AsInt@plt+0x270>
     fa4:	add	x2, x2, #0x280
     fa8:	add	x1, x1, #0x288
     fac:	adrp	x0, 1000 <_PyLong_AsInt@plt+0x270>
     fb0:	add	x0, x0, #0x298
     fb4:	bl	cd0 <_PyArg_BadArgument@plt>
     fb8:	mov	x0, #0x0                   	// #0
     fbc:	b	f7c <_PyLong_AsInt@plt+0x1ec>
     fc0:	adrp	x0, 11000 <PyInit__posixshmem@@Base+0xfdb8>
     fc4:	mov	x1, x20
     fc8:	ldr	x0, [x0, #4040]
     fcc:	ldr	x0, [x0]
     fd0:	bl	d10 <PyErr_SetFromErrnoWithFilenameObject@plt>
     fd4:	mov	x0, #0x0                   	// #0
     fd8:	ldp	x21, x22, [sp, #48]
     fdc:	b	f34 <_PyLong_AsInt@plt+0x1a4>
     fe0:	sub	sp, sp, #0x70
     fe4:	stp	x29, x30, [sp, #16]
     fe8:	add	x29, sp, #0x10
     fec:	stp	x19, x20, [sp, #32]
     ff0:	mov	x19, x1
     ff4:	mov	x1, x2
     ff8:	cbz	x3, 1138 <_PyLong_AsInt@plt+0x3a8>
     ffc:	ldr	x20, [x3, #16]
    1000:	add	x20, x2, x20
    1004:	add	x0, sp, #0x58
    1008:	str	x0, [sp]
    100c:	adrp	x4, 12000 <PyInit__posixshmem@@Base+0x10db8>
    1010:	add	x4, x4, #0xa0
    1014:	mov	x0, x19
    1018:	add	x4, x4, #0x40
    101c:	mov	w7, #0x0                   	// #0
    1020:	mov	w6, #0x3                   	// #3
    1024:	mov	w5, #0x2                   	// #2
    1028:	mov	x2, #0x0                   	// #0
    102c:	bl	ca0 <_PyArg_UnpackKeywords@plt>
    1030:	mov	x19, x0
    1034:	cbz	x0, 11bc <_PyLong_AsInt@plt+0x42c>
    1038:	stp	x21, x22, [sp, #48]
    103c:	ldr	x21, [x19]
    1040:	ldr	x0, [x21, #8]
    1044:	ldr	x0, [x0, #168]
    1048:	tbz	w0, #28, 1200 <_PyLong_AsInt@plt+0x470>
    104c:	ldrsb	w0, [x21, #32]
    1050:	tbz	w0, #31, 1150 <_PyLong_AsInt@plt+0x3c0>
    1054:	stp	x23, x24, [sp, #64]
    1058:	adrp	x23, 11000 <PyInit__posixshmem@@Base+0xfdb8>
    105c:	ldr	x0, [x19, #8]
    1060:	ldr	x1, [x23, #4016]
    1064:	ldr	x0, [x0, #8]
    1068:	cmp	x0, x1
    106c:	b.eq	1178 <_PyLong_AsInt@plt+0x3e8>  // b.none
    1070:	bl	d70 <PyType_IsSubtype@plt>
    1074:	cbnz	w0, 1178 <_PyLong_AsInt@plt+0x3e8>
    1078:	ldr	x0, [x19, #8]
    107c:	bl	d90 <_PyLong_AsInt@plt>
    1080:	mov	w22, w0
    1084:	cmn	w0, #0x1
    1088:	b.eq	11ac <_PyLong_AsInt@plt+0x41c>  // b.none
    108c:	cmp	x20, #0x2
    1090:	b.eq	11f8 <_PyLong_AsInt@plt+0x468>  // b.none
    1094:	ldr	x0, [x19, #16]
    1098:	ldr	x1, [x23, #4016]
    109c:	ldr	x0, [x0, #8]
    10a0:	cmp	x0, x1
    10a4:	b.eq	1178 <_PyLong_AsInt@plt+0x3e8>  // b.none
    10a8:	bl	d70 <PyType_IsSubtype@plt>
    10ac:	cbnz	w0, 1178 <_PyLong_AsInt@plt+0x3e8>
    10b0:	ldr	x0, [x19, #16]
    10b4:	bl	d90 <_PyLong_AsInt@plt>
    10b8:	mov	w24, w0
    10bc:	cmn	w0, #0x1
    10c0:	b.eq	122c <_PyLong_AsInt@plt+0x49c>  // b.none
    10c4:	mov	x0, x21
    10c8:	bl	d30 <PyUnicode_AsUTF8@plt>
    10cc:	mov	x23, x0
    10d0:	cbnz	x0, 10f0 <_PyLong_AsInt@plt+0x360>
    10d4:	b	11e8 <_PyLong_AsInt@plt+0x458>
    10d8:	bl	d80 <__errno_location@plt>
    10dc:	ldr	w0, [x0]
    10e0:	cmp	w0, #0x4
    10e4:	b.ne	11d0 <_PyLong_AsInt@plt+0x440>  // b.any
    10e8:	bl	d60 <PyErr_CheckSignals@plt>
    10ec:	cbnz	w0, 11e8 <_PyLong_AsInt@plt+0x458>
    10f0:	bl	d50 <PyEval_SaveThread@plt>
    10f4:	mov	x20, x0
    10f8:	mov	w2, w24
    10fc:	mov	w1, w22
    1100:	mov	x0, x23
    1104:	bl	d20 <shm_open@plt>
    1108:	mov	w19, w0
    110c:	mov	x0, x20
    1110:	bl	c80 <PyEval_RestoreThread@plt>
    1114:	tbnz	w19, #31, 10d8 <_PyLong_AsInt@plt+0x348>
    1118:	sxtw	x0, w19
    111c:	bl	cc0 <PyLong_FromLong@plt>
    1120:	ldp	x29, x30, [sp, #16]
    1124:	ldp	x19, x20, [sp, #32]
    1128:	ldp	x21, x22, [sp, #48]
    112c:	ldp	x23, x24, [sp, #64]
    1130:	add	sp, sp, #0x70
    1134:	ret
    1138:	sub	x0, x2, #0x2
    113c:	cmp	x0, #0x1
    1140:	b.hi	1148 <_PyLong_AsInt@plt+0x3b8>  // b.pmore
    1144:	cbnz	x19, 116c <_PyLong_AsInt@plt+0x3dc>
    1148:	mov	x20, x1
    114c:	b	1004 <_PyLong_AsInt@plt+0x274>
    1150:	mov	x0, x21
    1154:	bl	c70 <_PyUnicode_Ready@plt>
    1158:	cmn	w0, #0x1
    115c:	b.eq	1238 <_PyLong_AsInt@plt+0x4a8>  // b.none
    1160:	stp	x23, x24, [sp, #64]
    1164:	ldr	x21, [x19]
    1168:	b	1058 <_PyLong_AsInt@plt+0x2c8>
    116c:	mov	x20, x2
    1170:	stp	x21, x22, [sp, #48]
    1174:	b	103c <_PyLong_AsInt@plt+0x2ac>
    1178:	adrp	x0, 11000 <PyInit__posixshmem@@Base+0xfdb8>
    117c:	adrp	x1, 1000 <_PyLong_AsInt@plt+0x270>
    1180:	add	x1, x1, #0x2b8
    1184:	ldr	x0, [x0, #4032]
    1188:	ldr	x0, [x0]
    118c:	bl	cb0 <PyErr_SetString@plt>
    1190:	ldp	x21, x22, [sp, #48]
    1194:	mov	x0, #0x0                   	// #0
    1198:	ldp	x23, x24, [sp, #64]
    119c:	ldp	x29, x30, [sp, #16]
    11a0:	ldp	x19, x20, [sp, #32]
    11a4:	add	sp, sp, #0x70
    11a8:	ret
    11ac:	bl	cf0 <PyErr_Occurred@plt>
    11b0:	cbz	x0, 108c <_PyLong_AsInt@plt+0x2fc>
    11b4:	ldp	x21, x22, [sp, #48]
    11b8:	ldp	x23, x24, [sp, #64]
    11bc:	mov	x0, #0x0                   	// #0
    11c0:	ldp	x29, x30, [sp, #16]
    11c4:	ldp	x19, x20, [sp, #32]
    11c8:	add	sp, sp, #0x70
    11cc:	ret
    11d0:	adrp	x0, 11000 <PyInit__posixshmem@@Base+0xfdb8>
    11d4:	mov	x1, x21
    11d8:	ldr	x0, [x0, #4040]
    11dc:	ldr	x0, [x0]
    11e0:	bl	d10 <PyErr_SetFromErrnoWithFilenameObject@plt>
    11e4:	nop
    11e8:	bl	cf0 <PyErr_Occurred@plt>
    11ec:	cbnz	x0, 11b4 <_PyLong_AsInt@plt+0x424>
    11f0:	mov	x0, #0xffffffffffffffff    	// #-1
    11f4:	b	111c <_PyLong_AsInt@plt+0x38c>
    11f8:	mov	w24, #0x1ff                 	// #511
    11fc:	b	10c4 <_PyLong_AsInt@plt+0x334>
    1200:	mov	x3, x21
    1204:	adrp	x2, 1000 <_PyLong_AsInt@plt+0x270>
    1208:	adrp	x1, 1000 <_PyLong_AsInt@plt+0x270>
    120c:	add	x2, x2, #0x280
    1210:	add	x1, x1, #0x288
    1214:	adrp	x0, 1000 <_PyLong_AsInt@plt+0x270>
    1218:	add	x0, x0, #0x2a8
    121c:	bl	cd0 <_PyArg_BadArgument@plt>
    1220:	mov	x0, #0x0                   	// #0
    1224:	ldp	x21, x22, [sp, #48]
    1228:	b	119c <_PyLong_AsInt@plt+0x40c>
    122c:	bl	cf0 <PyErr_Occurred@plt>
    1230:	cbz	x0, 10c4 <_PyLong_AsInt@plt+0x334>
    1234:	b	11b4 <_PyLong_AsInt@plt+0x424>
    1238:	mov	x0, #0x0                   	// #0
    123c:	ldp	x21, x22, [sp, #48]
    1240:	b	11c0 <_PyLong_AsInt@plt+0x430>
    1244:	nop

0000000000001248 <PyInit__posixshmem@@Base>:
    1248:	stp	x29, x30, [sp, #-16]!
    124c:	adrp	x0, 12000 <PyInit__posixshmem@@Base+0x10db8>
    1250:	add	x0, x0, #0xa0
    1254:	mov	x29, sp
    1258:	mov	w1, #0x3f5                 	// #1013
    125c:	add	x0, x0, #0x80
    1260:	bl	d00 <PyModule_Create2@plt>
    1264:	ldp	x29, x30, [sp], #16
    1268:	ret

Disassembly of section .fini:

000000000000126c <.fini>:
    126c:	stp	x29, x30, [sp, #-16]!
    1270:	mov	x29, sp
    1274:	ldp	x29, x30, [sp], #16
    1278:	ret
