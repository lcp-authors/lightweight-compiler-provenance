
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//mkdir_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000b78 <_init>:
 b78:	stp	x29, x30, [sp, #-16]!
 b7c:	mov	x29, sp
 b80:	bl	cf0 <call_weak_fn>
 b84:	ldp	x29, x30, [sp], #16
 b88:	ret

Disassembly of section .plt:

0000000000000b90 <.plt>:
 b90:	stp	x16, x30, [sp, #-16]!
 b94:	adrp	x16, 11000 <__FRAME_END__+0xf9e4>
 b98:	ldr	x17, [x16, #4088]
 b9c:	add	x16, x16, #0xff8
 ba0:	br	x17
 ba4:	nop
 ba8:	nop
 bac:	nop

0000000000000bb0 <strlen@plt>:
 bb0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 bb4:	ldr	x17, [x16]
 bb8:	add	x16, x16, #0x0
 bbc:	br	x17

0000000000000bc0 <builtin_error@plt>:
 bc0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 bc4:	ldr	x17, [x16, #8]
 bc8:	add	x16, x16, #0x8
 bcc:	br	x17

0000000000000bd0 <__cxa_finalize@plt>:
 bd0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 bd4:	ldr	x17, [x16, #16]
 bd8:	add	x16, x16, #0x10
 bdc:	br	x17

0000000000000be0 <chmod@plt>:
 be0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 be4:	ldr	x17, [x16, #24]
 be8:	add	x16, x16, #0x18
 bec:	br	x17

0000000000000bf0 <builtin_help@plt>:
 bf0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 bf4:	ldr	x17, [x16, #32]
 bf8:	add	x16, x16, #0x20
 bfc:	br	x17

0000000000000c00 <parse_symbolic_mode@plt>:
 c00:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 c04:	ldr	x17, [x16, #40]
 c08:	add	x16, x16, #0x28
 c0c:	br	x17

0000000000000c10 <xmalloc@plt>:
 c10:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 c14:	ldr	x17, [x16, #48]
 c18:	add	x16, x16, #0x30
 c1c:	br	x17

0000000000000c20 <builtin_usage@plt>:
 c20:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 c24:	ldr	x17, [x16, #56]
 c28:	add	x16, x16, #0x38
 c2c:	br	x17

0000000000000c30 <strerror@plt>:
 c30:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 c34:	ldr	x17, [x16, #64]
 c38:	add	x16, x16, #0x40
 c3c:	br	x17

0000000000000c40 <__gmon_start__@plt>:
 c40:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 c44:	ldr	x17, [x16, #72]
 c48:	add	x16, x16, #0x48
 c4c:	br	x17

0000000000000c50 <free@plt>:
 c50:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 c54:	ldr	x17, [x16, #80]
 c58:	add	x16, x16, #0x50
 c5c:	br	x17

0000000000000c60 <internal_getopt@plt>:
 c60:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 c64:	ldr	x17, [x16, #88]
 c68:	add	x16, x16, #0x58
 c6c:	br	x17

0000000000000c70 <reset_internal_getopt@plt>:
 c70:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 c74:	ldr	x17, [x16, #96]
 c78:	add	x16, x16, #0x60
 c7c:	br	x17

0000000000000c80 <strchr@plt>:
 c80:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 c84:	ldr	x17, [x16, #104]
 c88:	add	x16, x16, #0x68
 c8c:	br	x17

0000000000000c90 <strcpy@plt>:
 c90:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 c94:	ldr	x17, [x16, #112]
 c98:	add	x16, x16, #0x70
 c9c:	br	x17

0000000000000ca0 <read_octal@plt>:
 ca0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 ca4:	ldr	x17, [x16, #120]
 ca8:	add	x16, x16, #0x78
 cac:	br	x17

0000000000000cb0 <umask@plt>:
 cb0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 cb4:	ldr	x17, [x16, #128]
 cb8:	add	x16, x16, #0x80
 cbc:	br	x17

0000000000000cc0 <__errno_location@plt>:
 cc0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 cc4:	ldr	x17, [x16, #136]
 cc8:	add	x16, x16, #0x88
 ccc:	br	x17

0000000000000cd0 <__xstat@plt>:
 cd0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 cd4:	ldr	x17, [x16, #144]
 cd8:	add	x16, x16, #0x90
 cdc:	br	x17

0000000000000ce0 <mkdir@plt>:
 ce0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 ce4:	ldr	x17, [x16, #152]
 ce8:	add	x16, x16, #0x98
 cec:	br	x17

Disassembly of section .text:

0000000000000cf0 <call_weak_fn>:
     cf0:	adrp	x0, 11000 <__FRAME_END__+0xf9e4>
     cf4:	ldr	x0, [x0, #4040]
     cf8:	cbz	x0, d00 <call_weak_fn+0x10>
     cfc:	b	c40 <__gmon_start__@plt>
     d00:	ret
     d04:	nop

0000000000000d08 <deregister_tm_clones>:
     d08:	adrp	x0, 12000 <strlen@GLIBC_2.17>
     d0c:	add	x0, x0, #0x150
     d10:	adrp	x1, 12000 <strlen@GLIBC_2.17>
     d14:	add	x1, x1, #0x150
     d18:	cmp	x1, x0
     d1c:	b.eq	d34 <deregister_tm_clones+0x2c>  // b.none
     d20:	adrp	x1, 11000 <__FRAME_END__+0xf9e4>
     d24:	ldr	x1, [x1, #4024]
     d28:	cbz	x1, d34 <deregister_tm_clones+0x2c>
     d2c:	mov	x16, x1
     d30:	br	x16
     d34:	ret

0000000000000d38 <register_tm_clones>:
     d38:	adrp	x0, 12000 <strlen@GLIBC_2.17>
     d3c:	add	x0, x0, #0x150
     d40:	adrp	x1, 12000 <strlen@GLIBC_2.17>
     d44:	add	x1, x1, #0x150
     d48:	sub	x1, x1, x0
     d4c:	lsr	x2, x1, #63
     d50:	add	x1, x2, x1, asr #3
     d54:	cmp	xzr, x1, asr #1
     d58:	asr	x1, x1, #1
     d5c:	b.eq	d74 <register_tm_clones+0x3c>  // b.none
     d60:	adrp	x2, 11000 <__FRAME_END__+0xf9e4>
     d64:	ldr	x2, [x2, #4064]
     d68:	cbz	x2, d74 <register_tm_clones+0x3c>
     d6c:	mov	x16, x2
     d70:	br	x16
     d74:	ret

0000000000000d78 <__do_global_dtors_aux>:
     d78:	stp	x29, x30, [sp, #-32]!
     d7c:	mov	x29, sp
     d80:	str	x19, [sp, #16]
     d84:	adrp	x19, 12000 <strlen@GLIBC_2.17>
     d88:	ldrb	w0, [x19, #336]
     d8c:	cbnz	w0, db4 <__do_global_dtors_aux+0x3c>
     d90:	adrp	x0, 11000 <__FRAME_END__+0xf9e4>
     d94:	ldr	x0, [x0, #4032]
     d98:	cbz	x0, da8 <__do_global_dtors_aux+0x30>
     d9c:	adrp	x0, 12000 <strlen@GLIBC_2.17>
     da0:	ldr	x0, [x0, #160]
     da4:	bl	bd0 <__cxa_finalize@plt>
     da8:	bl	d08 <deregister_tm_clones>
     dac:	mov	w0, #0x1                   	// #1
     db0:	strb	w0, [x19, #336]
     db4:	ldr	x19, [sp, #16]
     db8:	ldp	x29, x30, [sp], #32
     dbc:	ret

0000000000000dc0 <frame_dummy>:
     dc0:	b	d38 <register_tm_clones>

0000000000000dc4 <mkdir_builtin>:
     dc4:	stp	x29, x30, [sp, #-80]!
     dc8:	str	x25, [sp, #16]
     dcc:	stp	x24, x23, [sp, #32]
     dd0:	stp	x22, x21, [sp, #48]
     dd4:	stp	x20, x19, [sp, #64]
     dd8:	mov	x29, sp
     ddc:	mov	x21, x0
     de0:	bl	c70 <reset_internal_getopt@plt>
     de4:	adrp	x23, 11000 <__FRAME_END__+0xf9e4>
     de8:	ldr	x23, [x23, #4048]
     dec:	adrp	x22, 1000 <make_path+0x8c>
     df0:	mov	w24, wzr
     df4:	mov	w19, wzr
     df8:	mov	x20, xzr
     dfc:	add	x22, x22, #0x198
     e00:	b	e0c <mkdir_builtin+0x48>
     e04:	ldr	x20, [x23]
     e08:	mov	w19, #0x1                   	// #1
     e0c:	mov	x0, x21
     e10:	mov	x1, x22
     e14:	bl	c60 <internal_getopt@plt>
     e18:	cmp	w0, #0x6d
     e1c:	b.eq	e04 <mkdir_builtin+0x40>  // b.none
     e20:	cmn	w0, #0x63
     e24:	b.eq	e40 <mkdir_builtin+0x7c>  // b.none
     e28:	cmn	w0, #0x1
     e2c:	b.eq	e48 <mkdir_builtin+0x84>  // b.none
     e30:	cmp	w0, #0x70
     e34:	b.ne	e80 <mkdir_builtin+0xbc>  // b.any
     e38:	mov	w24, #0x1                   	// #1
     e3c:	b	e0c <mkdir_builtin+0x48>
     e40:	bl	bf0 <builtin_help@plt>
     e44:	b	e84 <mkdir_builtin+0xc0>
     e48:	adrp	x8, 11000 <__FRAME_END__+0xf9e4>
     e4c:	ldr	x8, [x8, #4056]
     e50:	ldr	x25, [x8]
     e54:	cbz	x25, e80 <mkdir_builtin+0xbc>
     e58:	cbz	x20, ea4 <mkdir_builtin+0xe0>
     e5c:	ldrb	w8, [x20]
     e60:	and	w8, w8, #0xf8
     e64:	cmp	w8, #0x30
     e68:	b.ne	eac <mkdir_builtin+0xe8>  // b.any
     e6c:	mov	x0, x20
     e70:	bl	ca0 <read_octal@plt>
     e74:	mov	w22, w0
     e78:	tbz	w0, #31, ec0 <mkdir_builtin+0xfc>
     e7c:	b	f5c <mkdir_builtin+0x198>
     e80:	bl	c20 <builtin_usage@plt>
     e84:	mov	w20, #0x102                 	// #258
     e88:	mov	w0, w20
     e8c:	ldp	x20, x19, [sp, #64]
     e90:	ldp	x22, x21, [sp, #48]
     e94:	ldp	x24, x23, [sp, #32]
     e98:	ldr	x25, [sp, #16]
     e9c:	ldp	x29, x30, [sp], #80
     ea0:	ret
     ea4:	mov	w22, #0x1ff                 	// #511
     ea8:	b	ec0 <mkdir_builtin+0xfc>
     eac:	mov	w1, #0x1ff                 	// #511
     eb0:	mov	x0, x20
     eb4:	bl	c00 <parse_symbolic_mode@plt>
     eb8:	mov	w22, w0
     ebc:	tbnz	w0, #31, f5c <mkdir_builtin+0x198>
     ec0:	mov	w0, wzr
     ec4:	bl	cb0 <umask@plt>
     ec8:	adrp	x21, 12000 <strlen@GLIBC_2.17>
     ecc:	str	w0, [x21, #340]
     ed0:	bl	cb0 <umask@plt>
     ed4:	ldr	w8, [x21, #340]
     ed8:	adrp	x23, 1000 <make_path+0x8c>
     edc:	mov	w20, wzr
     ee0:	add	x23, x23, #0x1b2
     ee4:	mvn	w8, w8
     ee8:	and	w8, w8, #0x1ff
     eec:	orr	w21, w8, #0xc0
     ef0:	and	w22, w8, w22
     ef4:	b	f18 <mkdir_builtin+0x154>
     ef8:	mov	w1, w19
     efc:	mov	w2, w22
     f00:	mov	w3, w21
     f04:	bl	f74 <make_path>
     f08:	cmp	w0, #0x0
     f0c:	csinc	w20, w20, wzr, eq  // eq = none
     f10:	ldr	x25, [x25]
     f14:	cbz	x25, e88 <mkdir_builtin+0xc4>
     f18:	ldr	x8, [x25, #8]
     f1c:	ldr	x0, [x8]
     f20:	cbnz	w24, ef8 <mkdir_builtin+0x134>
     f24:	mov	w1, w22
     f28:	bl	ce0 <mkdir@plt>
     f2c:	tbz	w0, #31, f10 <mkdir_builtin+0x14c>
     f30:	ldr	x8, [x25, #8]
     f34:	ldr	x20, [x8]
     f38:	bl	cc0 <__errno_location@plt>
     f3c:	ldr	w0, [x0]
     f40:	bl	c30 <strerror@plt>
     f44:	mov	x2, x0
     f48:	mov	x0, x23
     f4c:	mov	x1, x20
     f50:	bl	bc0 <builtin_error@plt>
     f54:	mov	w20, #0x1                   	// #1
     f58:	b	f10 <mkdir_builtin+0x14c>
     f5c:	adrp	x0, 1000 <make_path+0x8c>
     f60:	add	x0, x0, #0x19c
     f64:	mov	x1, x20
     f68:	bl	bc0 <builtin_error@plt>
     f6c:	mov	w20, #0x1                   	// #1
     f70:	b	e88 <mkdir_builtin+0xc4>

0000000000000f74 <make_path>:
     f74:	sub	sp, sp, #0xc0
     f78:	stp	x20, x19, [sp, #176]
     f7c:	mov	w19, w1
     f80:	mov	x1, sp
     f84:	stp	x29, x30, [sp, #128]
     f88:	str	x23, [sp, #144]
     f8c:	stp	x22, x21, [sp, #160]
     f90:	add	x29, sp, #0x80
     f94:	mov	w21, w3
     f98:	mov	w20, w2
     f9c:	mov	x22, x0
     fa0:	bl	1178 <__stat>
     fa4:	cbz	w0, 1098 <make_path+0x124>
     fa8:	mov	w0, wzr
     fac:	bl	cb0 <umask@plt>
     fb0:	mov	x0, x22
     fb4:	bl	bb0 <strlen@plt>
     fb8:	add	x0, x0, #0x1
     fbc:	bl	c10 <xmalloc@plt>
     fc0:	mov	x1, x22
     fc4:	mov	x19, x0
     fc8:	bl	c90 <strcpy@plt>
     fcc:	sub	x0, x0, #0x1
     fd0:	ldrb	w8, [x0, #1]!
     fd4:	cmp	w8, #0x2f
     fd8:	b.eq	fd0 <make_path+0x5c>  // b.none
     fdc:	mov	w1, #0x2f                  	// #47
     fe0:	mov	w23, #0x2f                  	// #47
     fe4:	bl	c80 <strchr@plt>
     fe8:	cbz	x0, 105c <make_path+0xe8>
     fec:	mov	x22, x0
     ff0:	mov	x1, sp
     ff4:	mov	x0, x19
     ff8:	strb	wzr, [x22]
     ffc:	bl	1178 <__stat>
    1000:	cbz	w0, 1028 <make_path+0xb4>
    1004:	mov	x0, x19
    1008:	mov	w1, wzr
    100c:	bl	ce0 <mkdir@plt>
    1010:	cbnz	w0, 107c <make_path+0x108>
    1014:	mov	x0, x19
    1018:	mov	w1, w21
    101c:	bl	be0 <chmod@plt>
    1020:	cbz	w0, 1038 <make_path+0xc4>
    1024:	b	1110 <make_path+0x19c>
    1028:	ldr	w8, [sp, #16]
    102c:	and	w8, w8, #0xf000
    1030:	cmp	w8, #0x4, lsl #12
    1034:	b.ne	1160 <make_path+0x1ec>  // b.any
    1038:	strb	w23, [x22]
    103c:	ldrb	w8, [x22, #1]!
    1040:	cmp	w8, #0x2f
    1044:	b.eq	103c <make_path+0xc8>  // b.none
    1048:	mov	w1, #0x2f                  	// #47
    104c:	mov	x0, x22
    1050:	bl	c80 <strchr@plt>
    1054:	mov	x22, x0
    1058:	cbnz	x0, ff0 <make_path+0x7c>
    105c:	mov	x1, sp
    1060:	mov	x0, x19
    1064:	bl	1178 <__stat>
    1068:	cbz	w0, 10e0 <make_path+0x16c>
    106c:	mov	x0, x19
    1070:	mov	w1, w20
    1074:	bl	ce0 <mkdir@plt>
    1078:	cbz	w0, 10e0 <make_path+0x16c>
    107c:	bl	cc0 <__errno_location@plt>
    1080:	ldr	w0, [x0]
    1084:	bl	c30 <strerror@plt>
    1088:	mov	x2, x0
    108c:	adrp	x0, 1000 <make_path+0x8c>
    1090:	add	x0, x0, #0x1b2
    1094:	b	1128 <make_path+0x1b4>
    1098:	ldr	w8, [sp, #16]
    109c:	and	w8, w8, #0xf000
    10a0:	cmp	w8, #0x4, lsl #12
    10a4:	b.ne	10fc <make_path+0x188>  // b.any
    10a8:	cbz	w19, 10f4 <make_path+0x180>
    10ac:	mov	x0, x22
    10b0:	mov	w1, w20
    10b4:	bl	be0 <chmod@plt>
    10b8:	cbz	w0, 1148 <make_path+0x1d4>
    10bc:	bl	cc0 <__errno_location@plt>
    10c0:	ldr	w0, [x0]
    10c4:	bl	c30 <strerror@plt>
    10c8:	mov	x2, x0
    10cc:	adrp	x0, 1000 <make_path+0x8c>
    10d0:	add	x0, x0, #0x531
    10d4:	mov	x1, x22
    10d8:	bl	bc0 <builtin_error@plt>
    10dc:	b	1144 <make_path+0x1d0>
    10e0:	adrp	x8, 12000 <strlen@GLIBC_2.17>
    10e4:	ldr	w0, [x8, #340]
    10e8:	bl	cb0 <umask@plt>
    10ec:	mov	x0, x19
    10f0:	bl	c50 <free@plt>
    10f4:	mov	w0, wzr
    10f8:	b	1148 <make_path+0x1d4>
    10fc:	adrp	x0, 1000 <make_path+0x8c>
    1100:	add	x0, x0, #0x508
    1104:	mov	x1, x22
    1108:	bl	bc0 <builtin_error@plt>
    110c:	b	1144 <make_path+0x1d0>
    1110:	bl	cc0 <__errno_location@plt>
    1114:	ldr	w0, [x0]
    1118:	bl	c30 <strerror@plt>
    111c:	mov	x2, x0
    1120:	adrp	x0, 1000 <make_path+0x8c>
    1124:	add	x0, x0, #0x538
    1128:	mov	x1, x19
    112c:	bl	bc0 <builtin_error@plt>
    1130:	adrp	x8, 12000 <strlen@GLIBC_2.17>
    1134:	ldr	w0, [x8, #340]
    1138:	bl	cb0 <umask@plt>
    113c:	mov	x0, x19
    1140:	bl	c50 <free@plt>
    1144:	mov	w0, #0x1                   	// #1
    1148:	ldp	x20, x19, [sp, #176]
    114c:	ldp	x22, x21, [sp, #160]
    1150:	ldr	x23, [sp, #144]
    1154:	ldp	x29, x30, [sp, #128]
    1158:	add	sp, sp, #0xc0
    115c:	ret
    1160:	adrp	x0, 1000 <make_path+0x8c>
    1164:	add	x0, x0, #0x508
    1168:	mov	x1, x19
    116c:	bl	bc0 <builtin_error@plt>
    1170:	b	1130 <make_path+0x1bc>
    1174:	nop

0000000000001178 <__stat>:
    1178:	mov	x2, x1
    117c:	mov	x1, x0
    1180:	mov	w0, #0x0                   	// #0
    1184:	b	cd0 <__xstat@plt>

Disassembly of section .fini:

0000000000001188 <_fini>:
    1188:	stp	x29, x30, [sp, #-16]!
    118c:	mov	x29, sp
    1190:	ldp	x29, x30, [sp], #16
    1194:	ret
